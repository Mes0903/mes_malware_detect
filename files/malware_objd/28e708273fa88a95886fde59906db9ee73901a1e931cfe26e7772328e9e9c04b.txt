
28e708273fa88a95886fde59906db9ee73901a1e931cfe26e7772328e9e9c04b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	mov    eax,ds:0x42920b
  40100e:	mov    eax,DWORD PTR [eax]
  401010:	and    DWORD PTR ds:0x429157,eax
  401016:	mov    eax,DWORD PTR [ebp+0x8]
  401019:	and    DWORD PTR ds:0x4291e7,0x0
  401023:	mov    ecx,DWORD PTR ds:0x4291e7
  401029:	inc    ecx
  40102a:	mov    DWORD PTR ds:0x4291e7,ecx
  401030:	cmp    DWORD PTR ds:0x4291e7,0xe
  401037:	jle    0x401072
  40103d:	jmp    0x40104b
  401042:	push   DWORD PTR [ebp-0x20]
  401045:	call   DWORD PTR ds:0x42a573
  40104b:	cmp    DWORD PTR ds:0x4291e7,0xd
  401052:	jne    0x401065
  401058:	mov    ecx,DWORD PTR ds:0x4291e7
  40105e:	inc    ecx
  40105f:	mov    DWORD PTR ds:0x4291e7,ecx
  401065:	cmp    DWORD PTR ds:0x4291e7,0x1c
  40106c:	jb     0x401023
  401072:	push   ebx
  401073:	sub    DWORD PTR ds:0x429157,0x3bd6
  40107d:	push   esi
  40107e:	mov    esi,DWORD PTR ds:0x429867
  401084:	mov    ecx,DWORD PTR ds:0x429e93
  40108a:	sub    ecx,esi
  40108c:	add    esi,DWORD PTR [esi+ecx*1]
  40108f:	push   edi
  401090:	mov    esi,0x75108ac
  401095:	xor    DWORD PTR ds:0x4291af,ebx
  40109b:	xor    eax,esi
  40109d:	mov    edi,0x3272f3
  4010a2:	sbb    DWORD PTR ds:0x4291f3,0x4c4b
  4010ac:	add    eax,edi
  4010ae:	and    DWORD PTR ds:0x429163,0x59cd
  4010b8:	mov    DWORD PTR [ebp-0x40],eax
  4010bb:	mov    eax,ds:0x42915f
  4010c0:	sbb    eax,DWORD PTR ds:0x42919f
  4010c6:	mov    ds:0x42915f,eax
  4010cb:	mov    eax,ds:0x42818b
  4010d0:	and    DWORD PTR ds:0x42918b,0x0
  4010da:	jmp    0x4010ee
  4010df:	xor    ecx,ecx
  4010e1:	xor    ecx,DWORD PTR ds:0x42918b
  4010e7:	inc    ecx
  4010e8:	mov    DWORD PTR ds:0x42918b,ecx
  4010ee:	cmp    DWORD PTR ds:0x42918b,0x1e
  4010f5:	jae    0x401144
  4010fb:	cmp    DWORD PTR ds:0x42918b,0xe
  401102:	ja     0x401144
  401108:	jmp    0x401123
  40110d:	push   DWORD PTR [ebp-0x24]
  401110:	push   0x428152
  401115:	push   0x4280c4
  40111a:	push   DWORD PTR [ebp-0x20]
  40111d:	call   DWORD PTR ds:0x42a57b
  401123:	cmp    DWORD PTR ds:0x42918b,0xd
  40112a:	jne    0x40113f
  401130:	xor    ecx,ecx
  401132:	or     ecx,DWORD PTR ds:0x42918b
  401138:	inc    ecx
  401139:	mov    DWORD PTR ds:0x42918b,ecx
  40113f:	jmp    0x4010df
  401144:	mov    eax,DWORD PTR [eax]
  401146:	mov    ecx,DWORD PTR ds:0x4291bf
  40114c:	sbb    DWORD PTR ds:0x42914f,ecx
  401152:	mov    DWORD PTR [ebp-0x3c],eax
  401155:	mov    eax,ds:0x429223
  40115a:	mov    ecx,DWORD PTR ds:0x429ea3
  401160:	sub    eax,ecx
  401162:	add    eax,DWORD PTR [eax+ecx*1]
  401165:	mov    eax,ds:0x42839b
  40116a:	mov    DWORD PTR ds:0x429167,0x18
  401174:	cmp    DWORD PTR ds:0x429167,0x0
  40117b:	je     0x4011cb
  401181:	cmp    DWORD PTR ds:0x429167,0x3
  401188:	jle    0x4011cb
  40118e:	jmp    0x40119f
  401193:	push   DWORD PTR [ebp-0x24]
  401196:	push   DWORD PTR [ebp-0x14]
  401199:	call   DWORD PTR ds:0x42a57f
  40119f:	cmp    DWORD PTR ds:0x429167,0x4
  4011a6:	jne    0x4011b9
  4011ac:	mov    ecx,DWORD PTR ds:0x429167
  4011b2:	dec    ecx
  4011b3:	mov    DWORD PTR ds:0x429167,ecx
  4011b9:	mov    ecx,DWORD PTR ds:0x429167
  4011bf:	dec    ecx
  4011c0:	mov    DWORD PTR ds:0x429167,ecx
  4011c6:	jmp    0x401174
  4011cb:	mov    eax,DWORD PTR [eax]
  4011cd:	or     DWORD PTR ds:0x4291b7,0x5973
  4011d7:	mov    DWORD PTR [ebp-0x1c],eax
  4011da:	mov    DWORD PTR [ebp-0x34],0xf89c87a1
  4011e1:	sbb    ecx,ecx
  4011e3:	mov    eax,DWORD PTR [ebp-0x34]
  4011e6:	and    DWORD PTR ds:0x4291bf,ecx
  4011ec:	xor    eax,esi
  4011ee:	add    eax,edi
  4011f0:	adc    DWORD PTR ds:0x42919f,0x1e2a
  4011fa:	mov    DWORD PTR [ebp-0x40],eax
  4011fd:	mov    eax,ds:0x42830b
  401202:	mov    DWORD PTR [ebp-0x40],eax
  401205:	mov    eax,ds:0x429e9f
  40120a:	mov    eax,DWORD PTR [eax]
  40120c:	and    DWORD PTR ds:0x4291f7,eax
  401212:	mov    eax,DWORD PTR [ebp-0x3c]
  401215:	adc    DWORD PTR ds:0x42914b,0x2509
  40121f:	mov    DWORD PTR [ebp-0x14],eax
  401222:	and    ecx,ecx
  401224:	mov    eax,DWORD PTR [ebp-0x14]
  401227:	xor    DWORD PTR ds:0x42918f,ecx
  40122d:	push   0x4
  40122f:	neg    ecx
  401231:	pop    ecx
  401232:	sub    ecx,eax
  401234:	and    DWORD PTR ds:0x42916b,0x0
  40123e:	jmp    0x40124e
  401243:	mov    eax,ds:0x42916b
  401248:	inc    eax
  401249:	mov    ds:0x42916b,eax
  40124e:	cmp    DWORD PTR ds:0x42916b,0x1e
  401255:	jae    0x40127d
  40125b:	cmp    DWORD PTR ds:0x42916b,0x27
  401262:	ja     0x40127d
  401268:	jmp    0x401278
  40126d:	push   0x4291bb
  401272:	call   DWORD PTR ds:0x42a583
  401278:	jmp    0x401243
  40127d:	add    ecx,DWORD PTR [ebp-0x1c]
  401280:	and    DWORD PTR ds:0x42915b,0x0
  40128a:	jmp    0x40129d
  40128f:	xor    eax,eax
  401291:	xor    eax,DWORD PTR ds:0x42915b
  401297:	inc    eax
  401298:	mov    ds:0x42915b,eax
  40129d:	cmp    DWORD PTR ds:0x42915b,0x1a
  4012a4:	jae    0x4012ec
  4012aa:	cmp    DWORD PTR ds:0x42915b,0xe
  4012b1:	jle    0x4012ec
  4012b7:	jmp    0x4012cc
  4012bc:	push   0x1df3
  4012c1:	push   0x428062
  4012c6:	call   DWORD PTR ds:0x42a587
  4012cc:	cmp    DWORD PTR ds:0x42915b,0xd
  4012d3:	jne    0x4012e7
  4012d9:	xor    eax,eax
  4012db:	xor    eax,DWORD PTR ds:0x42915b
  4012e1:	inc    eax
  4012e2:	mov    ds:0x42915b,eax
  4012e7:	jmp    0x40128f
  4012ec:	mov    DWORD PTR [ebp-0x2c],0xf89c85e1
  4012f3:	mov    DWORD PTR ds:0x4291d7,0x3a8d
  4012fd:	mov    DWORD PTR [ebp-0x18],ecx
  401300:	and    DWORD PTR ds:0x42916f,ecx
  401306:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  401310:	mov    eax,DWORD PTR [ebp-0x14]
  401313:	xor    DWORD PTR ds:0x4291e7,0x69e7
  40131d:	mov    DWORD PTR [ebp-0x9c],eax
  401323:	mov    eax,DWORD PTR [ebp-0x18]
  401326:	or     DWORD PTR ds:0x42916f,0x429173
  401330:	mov    DWORD PTR [ebp-0x98],eax
  401336:	and    DWORD PTR ds:0x429187,ecx
  40133c:	mov    eax,DWORD PTR [ebp-0x2c]
  40133f:	xor    eax,esi
  401341:	mov    DWORD PTR ds:0x4291ab,0x4dc6
  40134b:	add    eax,edi
  40134d:	mov    DWORD PTR [ebp-0x94],eax
  401353:	adc    DWORD PTR ds:0x429193,0x429197
  40135d:	lea    eax,[ebp-0x48]
  401360:	sbb    DWORD PTR ds:0x42914f,0x4291c3
  40136a:	mov    DWORD PTR [ebp-0x90],eax
  401370:	mov    eax,ds:0x42917f
  401375:	or     DWORD PTR ds:0x4291bf,eax
  40137b:	mov    eax,DWORD PTR [ebp-0xa0]
  401381:	adc    DWORD PTR ds:0x429187,0x4291df
  40138b:	xor    eax,esi
  40138d:	add    eax,edi
  40138f:	mov    DWORD PTR [ebp-0xa0],eax
  401395:	lea    eax,[ebp-0xa0]
  40139b:	and    DWORD PTR ds:0x42919f,0x4291a7
  4013a5:	push   eax
  4013a6:	mov    eax,DWORD PTR [ebp+0xc]
  4013a9:	mov    DWORD PTR ds:0x42917b,0x524d
  4013b3:	xor    eax,esi
  4013b5:	add    eax,edi
  4013b7:	and    DWORD PTR ds:0x429183,0x429193
  4013c1:	push   eax
  4013c2:	sub    DWORD PTR ds:0x429173,0x45d8
  4013cc:	mov    eax,ds:0x42832b
  4013d1:	xor    DWORD PTR ds:0x42917b,0x37ec
  4013db:	push   0x428281
  4013e0:	sub    DWORD PTR ds:0x4291e3,0x5ee0
  4013ea:	push   DWORD PTR [eax]
  4013ec:	xor    DWORD PTR ds:0x42916b,0x429197
  4013f6:	call   0x4085e5
  4013fb:	and    DWORD PTR ds:0x429153,0x0
  401405:	mov    edx,DWORD PTR ds:0x429153
  40140b:	inc    edx
  40140c:	mov    DWORD PTR ds:0x429153,edx
  401412:	cmp    DWORD PTR ds:0x429153,0x24
  401419:	jb     0x401442
  40141f:	jmp    0x401435
  401424:	push   0x4280d6
  401429:	push   DWORD PTR [ebp-0x18]
  40142c:	push   DWORD PTR [ebp-0x14]
  40142f:	call   DWORD PTR ds:0x42a58f
  401435:	cmp    DWORD PTR ds:0x429153,0x15
  40143c:	jb     0x401405
  401442:	mov    ebx,DWORD PTR [ebp-0x14]
  401445:	add    DWORD PTR ds:0x42914f,edx
  40144b:	mov    eax,DWORD PTR [ebp-0x18]
  40144e:	and    DWORD PTR ds:0x42916b,0x0
  401458:	jmp    0x40146a
  40145d:	mov    edx,DWORD PTR ds:0x42916b
  401463:	inc    edx
  401464:	mov    DWORD PTR ds:0x42916b,edx
  40146a:	cmp    DWORD PTR ds:0x42916b,0x17
  401471:	jae    0x4014b1
  401477:	cmp    DWORD PTR ds:0x42916b,0xc
  40147e:	ja     0x4014b1
  401484:	jmp    0x401492
  401489:	push   DWORD PTR [ebp-0x24]
  40148c:	call   DWORD PTR ds:0x42a593
  401492:	cmp    DWORD PTR ds:0x42916b,0xb
  401499:	jne    0x4014ac
  40149f:	mov    edx,DWORD PTR ds:0x42916b
  4014a5:	inc    edx
  4014a6:	mov    DWORD PTR ds:0x42916b,edx
  4014ac:	jmp    0x40145d
  4014b1:	mov    DWORD PTR [ebp-0x58],eax
  4014b4:	add    DWORD PTR ds:0x4291c7,edi
  4014ba:	mov    DWORD PTR [ebp-0x34],0xf89c8538
  4014c1:	mov    eax,0xf89c85a3
  4014c6:	inc    DWORD PTR ds:0x42916f
  4014cc:	mov    DWORD PTR [ebp-0x1c],eax
  4014cf:	lea    ecx,[eax-0x2]
  4014d2:	inc    DWORD PTR ds:0x42919b
  4014d8:	mov    DWORD PTR [ebp-0x28],ecx
  4014db:	movzx  edx,BYTE PTR ds:0x429163
  4014e2:	or     DWORD PTR ds:0x4291e7,edx
  4014e8:	mov    DWORD PTR [ebp-0x10],0xf89c85a2
  4014ef:	mov    DWORD PTR [ebp-0x8],eax
  4014f2:	and    DWORD PTR ds:0x4291e7,0x0
  4014fc:	jmp    0x40150c
  401501:	mov    eax,ds:0x4291e7
  401506:	inc    eax
  401507:	mov    ds:0x4291e7,eax
  40150c:	cmp    DWORD PTR ds:0x4291e7,0x11
  401513:	jae    0x401543
  401519:	cmp    DWORD PTR ds:0x4291e7,0x13
  401520:	jge    0x401543
  401526:	jmp    0x40153e
  40152b:	push   0x4280b5
  401530:	push   DWORD PTR [ebp-0x28]
  401533:	push   0x738c
  401538:	call   DWORD PTR ds:0x42a597
  40153e:	jmp    0x401501
  401543:	mov    eax,DWORD PTR [ebp-0x10]
  401546:	sbb    DWORD PTR ds:0x429193,edi
  40154c:	xor    eax,esi
  40154e:	sub    edx,DWORD PTR ds:0x429193
  401554:	mov    edx,0xffcd8d8d
  401559:	sub    edx,eax
  40155b:	mov    DWORD PTR ds:0x42915b,edx
  401561:	mov    DWORD PTR [ebp-0xc],edx
  401564:	movzx  eax,WORD PTR ds:0x4291f7
  40156b:	mov    DWORD PTR [ebp-0x18],0xf89c85be
  401572:	mov    eax,DWORD PTR [ebp-0x8]
  401575:	mov    DWORD PTR [ebp-0x3c],ebx
  401578:	cmp    eax,ecx
  40157a:	mov    DWORD PTR ds:0x4291d3,0x104a
  401584:	je     0x403bad
  40158a:	add    ecx,0x327f
  401590:	mov    eax,DWORD PTR [ebp-0x10]
  401593:	mov    ecx,DWORD PTR [ebp-0x10]
  401596:	sbb    DWORD PTR ds:0x4291b3,0x52cd
  4015a0:	xor    eax,esi
  4015a2:	xor    ecx,esi
  4015a4:	lea    ecx,[eax+ecx*1+0x64e5e6]
  4015ab:	mov    eax,DWORD PTR [ebp-0xc]
  4015ae:	or     DWORD PTR ds:0x429153,0x67db
  4015b8:	xor    edx,edx
  4015ba:	div    ecx
  4015bc:	mov    eax,DWORD PTR [ebp-0x8]
  4015bf:	xor    ecx,0x4574
  4015c5:	mov    ecx,DWORD PTR [ebp-0x10]
  4015c8:	xor    eax,esi
  4015ca:	or     DWORD PTR ds:0x4291df,0xa4f
  4015d4:	xor    ecx,esi
  4015d6:	or     DWORD PTR ds:0x42915f,0x4291eb
  4015e0:	sub    eax,ecx
  4015e2:	cmp    edx,eax
  4015e4:	jne    0x401764
  4015ea:	mov    eax,DWORD PTR [ebp-0xc]
  4015ed:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  4015f4:	add    ecx,DWORD PTR ds:0x4291d7
  4015fa:	mov    eax,DWORD PTR [ebp-0x28]
  4015fd:	mov    ecx,DWORD PTR [ebp-0x18]
  401600:	sub    DWORD PTR ds:0x42916f,0x2374
  40160a:	xor    eax,esi
  40160c:	add    DWORD PTR ds:0x429197,0x6412
  401616:	xor    ecx,esi
  401618:	add    eax,edi
  40161a:	add    ecx,edi
  40161c:	mov    DWORD PTR ds:0x42914f,0x798e
  401626:	mov    BYTE PTR [ebp-0x21],dl
  401629:	mov    DWORD PTR ds:0x42916f,0x52dc
  401633:	cmp    eax,ecx
  401635:	mov    DWORD PTR ds:0x42918f,0x1786
  40163f:	jae    0x401707
  401645:	and    DWORD PTR ds:0x42915b,ecx
  40164b:	lea    ecx,[eax-0x3272f3]
  401651:	not    edx
  401653:	mov    DWORD PTR [ebp-0x14],ecx
  401656:	mov    edx,DWORD PTR [ebp-0x14]
  401659:	xor    edx,esi
  40165b:	xor    DWORD PTR ds:0x4291a7,0x52cf
  401665:	add    edx,0x7f55d8e3
  40166b:	lea    ecx,[ebp+eax*4-0xb4]
  401672:	mov    DWORD PTR [ecx],edx
  401674:	mov    edx,DWORD PTR ds:0x429193
  40167a:	mov    edx,DWORD PTR [ecx]
  40167c:	cmp    edx,0x244ecb9c
  401682:	jbe    0x4016a7
  401688:	add    DWORD PTR ds:0x42916b,0x3ac8
  401692:	add    DWORD PTR [ecx],0x405fcdd
  401698:	mov    DWORD PTR ds:0x42919f,0x6763
  4016a2:	jmp    0x4016b7
  4016a7:	add    DWORD PTR ds:0x42914f,0x4291af
  4016b1:	add    DWORD PTR [ecx],0xfdaf4323
  4016b7:	sub    ecx,0x38f7
  4016bd:	mov    ecx,DWORD PTR [ebp-0x18]
  4016c0:	xor    DWORD PTR ds:0x4291c7,0x8c7
  4016ca:	xor    ecx,esi
  4016cc:	dec    DWORD PTR ds:0x42915b
  4016d2:	inc    eax
  4016d3:	sbb    DWORD PTR ds:0x4291cf,0x4291df
  4016dd:	inc    DWORD PTR [ebp-0x14]
  4016e0:	add    DWORD PTR ds:0x4291f3,0x429193
  4016ea:	add    ecx,edi
  4016ec:	cmp    eax,ecx
  4016ee:	mov    DWORD PTR ds:0x4291d3,0x74e1
  4016f8:	jb     0x401656
  4016fe:	not    DWORD PTR ds:0x4291af
  401704:	mov    dl,BYTE PTR [ebp-0x21]
  401707:	xor    DWORD PTR ds:0x429153,edi
  40170d:	mov    eax,DWORD PTR [ebp-0x34]
  401710:	mov    DWORD PTR ds:0x429173,0x31f7
  40171a:	xor    al,0xac
  40171c:	xor    DWORD PTR ds:0x429157,0x429193
  401726:	mov    cl,0xd
  401728:	sub    cl,al
  40172a:	add    dl,cl
  40172c:	mov    ecx,DWORD PTR [ebp-0x1c]
  40172f:	adc    DWORD PTR ds:0x4291c3,0x11c9
  401739:	xor    cl,0xac
  40173c:	sub    cl,0xd
  40173f:	and    DWORD PTR ds:0x4291ef,0x4291b7
  401749:	ror    dl,cl
  40174b:	movzx  ecx,WORD PTR ds:0x4291e3
  401752:	sbb    DWORD PTR ds:0x4291ef,ecx
  401758:	xor    eax,eax
  40175a:	mov    eax,DWORD PTR [ebp-0xc]
  40175d:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  401764:	mov    eax,DWORD PTR [ebp-0xc]
  401767:	adc    ecx,0x7a4f
  40176d:	mov    ecx,DWORD PTR [ebp-0x28]
  401770:	or     DWORD PTR ds:0x42918f,0x42919b
  40177a:	jmp    0x403b2b
  40177f:	pop    ss
  401780:	mov    eax,0x80c4d8c4
  401785:	pop    es
  401786:	mov    al,0x4
  401788:	add    eax,0x84cd92fe
  40178d:	(bad)  
  40178e:	sub    DWORD PTR [ebx-0x107c7c7d],eax
  401794:	pop    esp
  401795:	add    DWORD PTR [ebx+0x3e242d2a],0x26
  40179c:	cmp    ah,BYTE PTR [eax]
  40179e:	sub    al,0x7a
  4017a0:	cmp    eax,0x77767776
  4017a5:	jae    0x40181a
  4017a7:	jb     0x4017f4
  4017a9:	fcmovu st,st(5)
  4017ab:	(bad)  
  4017ac:	imul   edx,DWORD PTR [ecx+0x70],0x79a9607e
  4017b3:	jb     0x40181b
  4017b5:	int3   
  4017b6:	bound  edx,QWORD PTR [ebx+0x39]
  4017b9:	lea    eax,[ebx]
  4017bb:	xchg   esp,eax
  4017bc:	xchg   DWORD PTR [edx+edx*2+0x7c],esp
  4017c0:	inc    esp
  4017c1:	mov    DWORD PTR [edi+0x40bbb97c],esi
  4017c7:	sub    eax,0x3dd77fc
  4017cc:	push   0x46f21f7c
  4017d1:	rol    bl,cl
  4017d3:	repnz xchg esp,eax
  4017d5:	sub    bh,bl
  4017d7:	nop
  4017d8:	ss or  al,0x66
  4017db:	mov    al,0x93
  4017dd:	aad    0x4
  4017df:	jb     0x4017c3
  4017e1:	adc    eax,0x37030fe5
  4017e6:	and    DWORD PTR [ecx+0xd],edx
  4017e9:	aaa    
  4017ea:	jo     0x40185d
  4017ec:	(bad)  
  4017ed:	lods   al,BYTE PTR ds:[esi]
  4017ee:	sub    BYTE PTR [esi+0x1a],bl
  4017f1:	mov    bh,0xfc
  4017f3:	not    BYTE PTR [esi+0x30]
  4017f6:	test   DWORD PTR [ebx-0x2f],ecx
  4017f9:	pusha  
  4017fa:	push   es
  4017fb:	and    eax,DWORD PTR [ebx]
  4017fd:	cmp    DWORD PTR [esi+0x5ca1e278],0x2514be90
  401807:	fwait
  401808:	dec    esi
  401809:	or     BYTE PTR [edi+0x10888b3d],bl
  40180f:	jecxz  0x401843
  401811:	imul   edx,DWORD PTR [edx-0x79ab7bb],0xffffffcc
  401818:	xchg   ebx,eax
  401819:	ss xchg esi,eax
  40181b:	leave  
  40181c:	(bad)  
  40181d:	int    0x91
  40181f:	outs   dx,BYTE PTR ds:[esi]
  401820:	cmc    
  401821:	pop    edx
  401822:	imul   ecx,DWORD PTR [ebp+0xd],0x3f
  401826:	or     BYTE PTR [edi+0x18],al
  401829:	mov    dl,0x50
  40182b:	shl    DWORD PTR [ecx+ecx*2+0x26715d9],cl
  401832:	imul   esp,DWORD PTR [edi-0x46],0x6
  401836:	jno    0x4017f4
  401838:	add    DWORD PTR [ebx+0x1c],ebx
  40183b:	sub    edx,DWORD PTR [ebp-0x42]
  40183e:	imul   edi,edi,0x9ac5c8cd
  401844:	dec    esi
  401845:	inc    edi
  401846:	xchg   DWORD PTR [edi+eiz*4+0x29433895],ebp
  40184d:	or     eax,0xf255c8d2
  401852:	es jbe 0x401893
  401855:	dec    edi
  401856:	and    al,0x56
  401858:	and    al,0x78
  40185a:	xor    ebx,ebx
  40185c:	xlat   BYTE PTR ds:[ebx]
  40185d:	scas   eax,DWORD PTR es:[edi]
  40185e:	sub    eax,0x365ee704
  401863:	ja     0x4018c4
  401865:	test   al,0x8f
  401867:	and    eax,0x8e6ab756
  40186c:	sahf   
  40186d:	fmul   st,st(3)
  401870:	lods   al,BYTE PTR fs:[esi]
  401872:	push   ebx
  401873:	jbe    0x40182e
  401875:	(bad)  
  401878:	cmp    edi,DWORD PTR [esi-0x4a]
  40187b:	js     0x401866
  40187d:	cmp    edi,edx
  40187f:	sbb    eax,0xb844d17c
  401884:	loop   0x401860
  401886:	or     BYTE PTR [ebx+eiz*8],al
  401889:	push   ss
  40188a:	sbb    edi,DWORD PTR [edx]
  40188c:	int3   
  40188d:	ds pop ebp
  40188f:	in     al,dx
  401890:	add    BYTE PTR [ebx+0x43],al
  401893:	fistp  QWORD PTR [esi+ebx*8-0x1b79a118]
  40189a:	push   0xce2a473f
  40189f:	push   ecx
  4018a0:	leave  
  4018a1:	sbb    DWORD PTR [edi-0xa],0x19ca48f
  4018a8:	mov    ebp,DWORD PTR [ebx]
  4018aa:	mov    ebx,esi
  4018ac:	enter  0xf8b9,0xd5
  4018b0:	pop    ebp
  4018b1:	xchg   ebx,eax
  4018b2:	jle    0x401847
  4018b4:	jno    0x401900
  4018b6:	or     BYTE PTR [edx-0x1902abc4],dh
  4018bc:	rcr    BYTE PTR [eax],0x6b
  4018bf:	inc    eax
  4018c0:	test   BYTE PTR [eax-0x7c9e0e2e],bl
  4018c6:	loopne 0x40189f
  4018c8:	jno    0x40188c
  4018ca:	jge    0x401854
  4018cc:	imul   ecx,esi,0x60
  4018cf:	repz scas eax,DWORD PTR es:[edi]
  4018d1:	pushf  
  4018d2:	(bad)  
  4018d3:	or     al,0x3f
  4018d5:	jns    0x40186a
  4018d7:	pop    esi
  4018d8:	sub    DWORD PTR [edx-0x3491c676],ecx
  4018de:	mov    edi,0xbabcfd7c
  4018e3:	out    dx,eax
  4018e4:	push   es
  4018e5:	sbb    esi,DWORD PTR [eax+0x0]
  4018e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018e9:	pusha  
  4018ea:	and    DWORD PTR [eax+ebp*4],ecx
  4018ed:	in     eax,dx
  4018ee:	mov    ?,WORD PTR [ebp+0x14]
  4018f1:	retf   0xe9c5
  4018f4:	ins    DWORD PTR es:[edi],dx
  4018f5:	dec    esp
  4018f6:	mov    al,ds:0xf2f283b4
  4018fb:	xor    eax,0x8e50b860
  401900:	fcmove st,st(5)
  401902:	sub    BYTE PTR [eax-0x4ad597d6],bl
  401908:	mov    al,0x16
  40190a:	fprem  
  40190c:	or     edx,DWORD PTR [ebp+0x62]
  40190f:	popa   
  401910:	(bad)  
  401911:	fdivr  QWORD PTR [edi-0x73]
  401914:	mov    ?,WORD PTR [ebx]
  401916:	ret    
  401917:	mov    al,0x64
  401919:	and    eax,0x3114a438
  40191e:	lds    edx,FWORD PTR ds:0xd7c38cda
  401924:	sbb    al,0xbd
  401926:	aas    
  401927:	mov    dl,0x32
  401929:	ret    
  40192a:	lods   al,BYTE PTR ds:[esi]
  40192b:	mov    ebp,DWORD PTR [edx]
  40192d:	mov    fs,WORD PTR [ebx]
  40192f:	xchg   ecx,eax
  401930:	and    ah,dl
  401932:	imul   eax,DWORD PTR [esi-0x4d],0xfb018f1a
  401939:	inc    ecx
  40193a:	dec    edi
  40193b:	cdq    
  40193c:	and    edx,0x75
  40193f:	mov    ds:0x57ab7a04,al
  401944:	test   al,0x1e
  401946:	or     bh,BYTE PTR [eax-0x2b]
  401949:	pop    edx
  40194a:	outs   dx,DWORD PTR ds:[esi]
  40194b:	addr16 jp 0x4018d9
  40194e:	add    BYTE PTR [ebp-0x70],cl
  401951:	(bad)  
  401952:	rcr    BYTE PTR [esi+0x6da9eb6],1
  401958:	jge    0x401921
  40195a:	mov    WORD PTR [ebx],ss
  40195c:	std    
  40195d:	xchg   esp,edi
  40195f:	push   0xf242e095
  401964:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401966:	imul   eax,DWORD PTR ds:0xafebf94c,0xfffffff3
  40196d:	dec    eax
  40196e:	out    dx,eax
  40196f:	jecxz  0x401923
  401971:	fsubr  st,st(1)
  401973:	lea    esi,[edx+edi*8+0x6d37659f]
  40197a:	mov    edi,0xe14a37ea
  40197f:	or     esi,DWORD PTR [edi]
  401981:	jp     0x401917
  401983:	outs   dx,DWORD PTR ds:[esi]
  401984:	or     BYTE PTR [edi],dl
  401986:	xchg   ecx,esi
  401988:	hlt    
  401989:	inc    esi
  40198a:	mov    ds:0xc334e,al
  40198f:	mov    al,ds:0xa0f0edd0
  401994:	xchg   DWORD PTR [ebx+0x4e8b92ce],edi
  40199a:	loopne 0x40194d
  40199c:	cmc    
  40199d:	sub    eax,0x5af35304
  4019a2:	mov    WORD PTR [esp+eiz*2+0x1b],fs
  4019a6:	fst    DWORD PTR [ebx+edx*8+0x528c8650]
  4019ad:	js     0x4019d9
  4019af:	out    0xbc,al
  4019b1:	div    DWORD PTR [eax+ecx*1+0x7a098af8]
  4019b8:	lods   al,BYTE PTR fs:[esi]
  4019ba:	lea    esp,[eax-0x55765021]
  4019c0:	sbb    eax,0xb739642f
  4019c5:	fnstsw WORD PTR [esp+ecx*1-0x1f]
  4019c9:	mov    ch,0xf7
  4019cb:	imul   esp,DWORD PTR [esi+0x4d55de5e],0xf7f6053e
  4019d5:	retf   
  4019d6:	lea    esi,[ecx+ecx*2+0x71]
  4019da:	pop    esi
  4019db:	mov    WORD PTR [ebx],?
  4019dd:	mov    ecx,0x56099dd1
  4019e2:	push   ebx
  4019e3:	and    BYTE PTR [ebx+ebx*2+0x5c],al
  4019e7:	jl     0x401a08
  4019e9:	mov    bl,0x41
  4019eb:	fsub   QWORD PTR [ebx-0x51]
  4019ee:	test   DWORD PTR [esi+0x203443fb],ebp
  4019f4:	std    
  4019f5:	sar    dl,1
  4019f7:	cmp    ch,BYTE PTR [ebp+0x3a5ad483]
  4019fd:	fsqrt  
  4019ff:	jae    0x4019c9
  401a01:	jmp    0x401a6b
  401a03:	inc    edx
  401a04:	mov    ds:0x23b6751c,al
  401a09:	popa   
  401a0a:	pop    ebp
  401a0b:	inc    ebx
  401a0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a0d:	push   0x7cfbbc34
  401a12:	enter  0x235e,0x7a
  401a16:	mov    ds:0x54dbf8e,al
  401a1b:	dec    esp
  401a1c:	push   es
  401a1d:	or     edi,DWORD PTR [edx-0x730f7e94]
  401a23:	dec    esi
  401a24:	rol    BYTE PTR [ebx],cl
  401a26:	push   ebx
  401a27:	add    eax,0xedff11d7
  401a2c:	lods   eax,DWORD PTR ds:[esi]
  401a2d:	push   esp
  401a2e:	push   bp
  401a30:	pop    edi
  401a31:	mov    dl,0x56
  401a33:	jne    0x4019bc
  401a35:	mov    bl,BYTE PTR [esi+0x150393a1]
  401a3b:	fsub   QWORD PTR [edi]
  401a3d:	fld    QWORD PTR [ebx+0xc239227]
  401a43:	pushf  
  401a44:	test   eax,0x809aa2e1
  401a49:	das    
  401a4a:	push   ebx
  401a4b:	mov    edi,0xb8aa60b9
  401a50:	scas   eax,DWORD PTR es:[edi]
  401a51:	in     eax,0xf4
  401a53:	add    BYTE PTR [ebx],bl
  401a55:	pop    ebp
  401a56:	mov    dl,0x7b
  401a58:	or     edx,DWORD PTR [ecx-0x4e]
  401a5b:	sbb    ebp,DWORD PTR [eax-0x6f4c0411]
  401a61:	jo     0x401a8f
  401a63:	xor    eax,ecx
  401a65:	dec    ebx
  401a66:	inc    esp
  401a67:	inc    ebx
  401a68:	xlat   BYTE PTR ds:[ebx]
  401a6a:	test   BYTE PTR [ebp-0x13b43325],0xf7
  401a71:	mov    cl,0xa1
  401a73:	jg     0x401a8d
  401a75:	mov    BYTE PTR [esi+edx*1],ah
  401a78:	sub    DWORD PTR ds:0x5140ad4d,0x7d781be1
  401a82:	jmp    0xc20a:0x48deb0b0
  401a89:	in     al,dx
  401a8a:	loope  0x401acd
  401a8c:	or     DWORD PTR [ebx],0xb0e9bf89
  401a92:	lock xor cl,BYTE PTR [ecx+0x6a]
  401a96:	mov    ah,0x10
  401a98:	pop    ecx
  401a99:	test   BYTE PTR [esi-0x1c],cl
  401a9c:	pop    es
  401a9d:	push   DWORD PTR [ecx+ecx*2-0x1a41c55e]
  401aa4:	xchg   ebp,eax
  401aa5:	pop    edi
  401aa6:	xchg   edx,eax
  401aa7:	inc    edi
  401aa8:	cmp    eax,0xbcb6de62
  401aad:	adc    bl,BYTE PTR [edx+0x52]
  401ab0:	lock sub DWORD PTR ds:0xe7370133,ebp
  401ab7:	retf   
  401ab8:	jle    0x401b32
  401aba:	sub    eax,0x39ea0395
  401abf:	xchg   ebp,eax
  401ac0:	out    dx,eax
  401ac1:	std    
  401ac2:	mul    BYTE PTR [edx]
  401ac4:	mov    ah,0xe6
  401ac6:	std    
  401ac7:	jge    0x401a66
  401ac9:	add    eax,eax
  401acb:	adc    ah,BYTE PTR [esi-0x48c3cfa7]
  401ad1:	mov    WORD PTR [esi+0x19c1c097],gs
  401ad7:	sub    eax,0x304a304d
  401adc:	retf   0x553c
  401adf:	dec    ebx
  401ae0:	loopne 0x401b10
  401ae2:	ins    BYTE PTR es:[edi],dx
  401ae3:	ja     0x401ab1
  401ae5:	adc    ebx,edx
  401ae7:	out    dx,eax
  401ae8:	iret   
  401ae9:	adc    al,0xe1
  401aeb:	imul   eax,edx,0xcbae94eb
  401af1:	sti    
  401af2:	not    BYTE PTR [esi-0x2915161c]
  401af8:	out    dx,eax
  401af9:	mov    dl,0xe0
  401afb:	sub    al,0x45
  401afd:	cdq    
  401afe:	or     ebp,DWORD PTR [edi-0x56371f28]
  401b04:	mov    ch,0xa0
  401b06:	ja     0x401af2
  401b08:	xlat   BYTE PTR ds:[ebx]
  401b09:	pop    esp
  401b0a:	mov    al,ds:0xaa5564c3
  401b0f:	shl    BYTE PTR [ecx+0x3a170948],1
  401b15:	cmp    edi,eax
  401b17:	sbb    eax,0xd1ec4cbe
  401b1c:	sbb    bh,0xcb
  401b1f:	and    BYTE PTR [ebp+0x39],al
  401b22:	xchg   ebp,eax
  401b23:	jl     0x401b3e
  401b25:	outs   dx,DWORD PTR ds:[esi]
  401b26:	inc    DWORD PTR [ecx+0x1cd67efb]
  401b2c:	ret    
  401b2d:	jo     0x401b88
  401b2f:	(bad)  
  401b30:	sub    BYTE PTR [ecx],cl
  401b32:	sbb    al,0x55
  401b34:	push   ebx
  401b35:	xchg   DWORD PTR [esp+edi*2-0x8],edi
  401b39:	jg     0x401b82
  401b3b:	outs   dx,DWORD PTR ds:[esi]
  401b3c:	mov    dh,BYTE PTR [ebx]
  401b3e:	push   ds
  401b3f:	test   eax,0xb044223a
  401b44:	test   eax,0x9832b930
  401b49:	lods   al,BYTE PTR ds:[esi]
  401b4a:	fwait
  401b4b:	jmp    0x401bbd
  401b4d:	retf   0x74da
  401b50:	pop    ds
  401b51:	xchg   ecx,eax
  401b52:	push   edi
  401b53:	or     BYTE PTR [ebx-0x68c86a32],bl
  401b59:	rol    DWORD PTR [eax],0xfd
  401b5c:	add    bl,BYTE PTR [eax]
  401b5e:	test   bl,al
  401b60:	adc    ebp,0xb681e2d5
  401b66:	mov    BYTE PTR [eax-0x63],bl
  401b69:	or     DWORD PTR [edx+0x63],edi
  401b6c:	push   bx
  401b6e:	jbe    0x401b7c
  401b70:	je     0x401bc6
  401b72:	fbstp  TBYTE PTR [ebp+0x77]
  401b75:	mov    dh,0xde
  401b77:	mov    al,0xec
  401b79:	xchg   BYTE PTR [ecx+0x7c],dl
  401b7c:	in     eax,dx
  401b7d:	mov    edx,0x82357f00
  401b82:	add    DWORD PTR [ebx+0x52],0xffffff86
  401b86:	(bad)  
  401b87:	imul   eax,DWORD PTR [edi],0xffffffeb
  401b8a:	fisttp WORD PTR [edi-0x285a839]
  401b90:	std    
  401b91:	mov    WORD PTR gs:[edi+0xa],es
  401b95:	retf   0x61b1
  401b98:	add    eax,0x5e2a40cd
  401b9d:	bnd jbe 0x401b54
  401ba0:	jmp    DWORD PTR [edi-0x15]
  401ba3:	cmovno esp,DWORD PTR [eax-0x70]
  401ba7:	mov    bl,0xd3
  401ba9:	xchg   ecx,eax
  401baa:	and    eax,0xe2747f1d
  401baf:	xor    ecx,eax
  401bb1:	add    BYTE PTR [eax],0x5e
  401bb4:	cmp    BYTE PTR [ebp+0x34],0xf2
  401bb8:	adc    eax,0x8f53eefb
  401bbd:	adc    eax,0x35d3de4a
  401bc2:	pop    ebp
  401bc3:	mov    ds:0xaeae9e6b,eax
  401bc8:	in     eax,0x68
  401bca:	unpckhps xmm7,xmm4
  401bcd:	loop   0x401ba7
  401bcf:	imul   edi,DWORD PTR [esi-0x72],0x73
  401bd3:	mov    esp,0x9f1fd88
  401bd8:	pushf  
  401bd9:	xchg   edx,eax
  401bda:	stos   DWORD PTR es:[edi],eax
  401bdb:	push   DWORD PTR [eax+0x1e0c611a]
  401be1:	pop    eax
  401be2:	push   ebx
  401be3:	xor    eax,0xe3b6d648
  401be8:	mov    dl,0xef
  401bea:	jmp    0xda57b0b8
  401bef:	mov    al,0xac
  401bf1:	arpl   bp,bx
  401bf3:	ds mov ch,0xa6
  401bf6:	scas   al,BYTE PTR es:[edi]
  401bf7:	std    
  401bf8:	sub    eax,0x97853476
  401bfd:	nop
  401bfe:	outs   dx,BYTE PTR ds:[esi]
  401bff:	scas   eax,DWORD PTR es:[edi]
  401c00:	and    al,0xf4
  401c02:	cld    
  401c03:	xor    eax,0x5d957957
  401c08:	pop    ecx
  401c09:	mov    esi,0x78b23a75
  401c0e:	mov    DWORD PTR [eax-0x3d],eax
  401c11:	add    al,dl
  401c13:	mov    dl,0xed
  401c15:	sbb    dl,bh
  401c17:	push   ebx
  401c18:	je     0x401c93
  401c1a:	inc    eax
  401c1b:	mov    al,ds:0xc1d9fa5c
  401c20:	(bad)  
  401c22:	push   esp
  401c23:	or     DWORD PTR [esi],0x5a4a9d13
  401c29:	push   ds
  401c2a:	and    DWORD PTR [ebp+eax*1+0x12dad004],esi
  401c31:	xor    al,0xc8
  401c33:	jne    0x401cb1
  401c35:	clc    
  401c36:	mov    WORD PTR [edi],ds
  401c38:	dec    ebp
  401c39:	mov    ebp,0xc1f35b3
  401c3e:	push   0xffffff98
  401c40:	pusha  
  401c41:	pop    ss
  401c42:	int    0xbf
  401c44:	std    
  401c45:	mov    ebx,0x6ebfce86
  401c4a:	out    dx,eax
  401c4b:	xor    al,0x9c
  401c4d:	push   0xe4b68093
  401c52:	sbb    al,0x81
  401c54:	mov    bh,0xef
  401c56:	or     al,0xa0
  401c58:	pushf  
  401c59:	je     0x401cb0
  401c5b:	jp     0x401cb3
  401c5d:	sub    al,0xc7
  401c5f:	push   edx
  401c60:	out    dx,eax
  401c61:	adc    DWORD PTR [edx+0x19],edi
  401c64:	fdivrp st(2),st
  401c66:	sub    al,0x2a
  401c68:	xor    BYTE PTR [eax+0x790ae737],ch
  401c6e:	and    ch,0x70
  401c71:	ss ja  0x401ceb
  401c74:	ja     0x401c6e
  401c76:	push   eax
  401c77:	(bad)  
  401c78:	sbb    ebp,DWORD PTR [eax]
  401c7a:	push   esp
  401c7b:	out    0x4e,eax
  401c7d:	jle    0x401c1c
  401c7f:	sub    al,0xbf
  401c81:	add    DWORD PTR ss:[edi-0x22],ebx
  401c85:	adc    eax,0x7e7cd3db
  401c8a:	pop    ss
  401c8b:	xor    eax,0x1fad8bb1
  401c90:	daa    
  401c91:	pushf  
  401c92:	ins    BYTE PTR es:[edi],dx
  401c93:	push   ss
  401c94:	push   cs
  401c95:	data16 sti 
  401c97:	sub    eax,0x93af723c
  401c9c:	out    dx,al
  401c9d:	sub    dl,ah
  401c9f:	xor    BYTE PTR [esi+0x2a45d0a3],0xb7
  401ca6:	xchg   esi,eax
  401ca7:	sbb    BYTE PTR [edx+0x170ea940],al
  401cad:	mov    bl,0x83
  401caf:	fnstsw WORD PTR [esi-0x14063f4c]
  401cb5:	or     al,0x7c
  401cb7:	sub    al,0x5c
  401cb9:	cmp    DWORD PTR [ecx+0x20],eax
  401cbc:	adc    al,0x78
  401cbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401cbf:	mov    esi,0x8c08a481
  401cc4:	xor    DWORD PTR [eax],edi
  401cc6:	mov    eax,ds:0x84c9d2a7
  401ccb:	mov    ch,0x59
  401ccd:	sbb    eax,0x9a2262ff
  401cd2:	jbe    0x401d3c
  401cd4:	ss scas al,BYTE PTR es:[edi]
  401cd6:	jl     0x401cc8
  401cd8:	mov    ah,0x96
  401cda:	shl    cl,cl
  401cdc:	xlat   BYTE PTR ds:[ebx]
  401cdd:	cmp    ebp,DWORD PTR [edi-0x4908d05f]
  401ce3:	push   esp
  401ce4:	lea    ebx,[eax]
  401ce6:	retf   0xd981
  401ce9:	jnp    0x401d06
  401ceb:	or     al,0x4
  401ced:	sub    al,0x11
  401cef:	std    
  401cf0:	pushf  
  401cf1:	addr16 dec ebx
  401cf3:	inc    ebp
  401cf4:	test   ecx,0x41044657
  401cfa:	shr    BYTE PTR [esi-0x4ec297eb],1
  401d00:	and    DWORD PTR [edx],0x81ccde92
  401d06:	sbb    eax,0xee171cbb
  401d0b:	das    
  401d0c:	fs aas 
  401d0e:	xchg   BYTE PTR [esi],ah
  401d10:	mov    DWORD PTR [ebp+0x4d84edbe],ecx
  401d16:	ja     0x401d73
  401d18:	out    0x40,al
  401d1a:	scas   eax,DWORD PTR es:[edi]
  401d1b:	jmp    0x401d46
  401d1d:	ja     0x401cc4
  401d1f:	ins    BYTE PTR es:[edi],dx
  401d20:	jbe    0x401ca8
  401d22:	pop    ds
  401d23:	aad    0xe4
  401d25:	cmp    eax,DWORD PTR [eax]
  401d27:	dec    edx
  401d28:	adc    eax,0xa1909dd3
  401d2d:	nop
  401d2e:	xor    DWORD PTR [eax+0x28],ebx
  401d31:	push   edx
  401d32:	push   eax
  401d33:	xchg   esp,eax
  401d34:	inc    ebx
  401d35:	add    BYTE PTR [ebx-0x40514d09],bh
  401d3b:	push   ecx
  401d3c:	jge    0x401d61
  401d3e:	cli    
  401d3f:	inc    BYTE PTR [edi+0x4d]
  401d42:	aas    
  401d43:	cmc    
  401d44:	push   ds
  401d45:	sbb    eax,0x4cefcb87
  401d4a:	pop    ds
  401d4b:	pop    edx
  401d4c:	cs fs in eax,0xe7
  401d50:	imul   ebp,DWORD PTR [ebp+0x5bc50ec0],0x8587764a
  401d5a:	and    ah,BYTE PTR [edx]
  401d5c:	sub    BYTE PTR [eax],ah
  401d5e:	clc    
  401d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d60:	mov    esp,0xa8e14b9
  401d65:	fwait
  401d66:	xchg   ecx,eax
  401d67:	lods   eax,DWORD PTR ds:[esi]
  401d68:	add    ch,bl
  401d6a:	inc    esi
  401d6b:	mov    ecx,0x65f518aa
  401d70:	les    eax,FWORD PTR [esi+0x36]
  401d73:	stc    
  401d74:	lock sub BYTE PTR [esi-0x50],dl
  401d78:	jmp    0xd420d197
  401d7d:	mov    al,0x2c
  401d7f:	cld    
  401d80:	add    DWORD PTR [esi+0x25],esp
  401d83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d84:	stc    
  401d85:	dec    ebp
  401d86:	sti    
  401d87:	retf   0x7058
  401d8a:	sbb    eax,DWORD PTR [ebp-0x3b]
  401d8d:	xchg   BYTE PTR [ebp-0x677b18f3],dh
  401d93:	jmp    0x401d4d
  401d95:	add    DWORD PTR [ebx+eiz*1-0x11],edi
  401d99:	mov    ch,0x76
  401d9b:	xchg   esi,eax
  401d9c:	sbb    BYTE PTR ds:0x25558b48,cl
  401da2:	sbb    ebx,esp
  401da4:	jns    0x401df5
  401da6:	push   ss
  401da7:	dec    DWORD PTR [ebx+ebp*4]
  401daa:	outs   dx,DWORD PTR ds:[esi]
  401dab:	mov    BYTE PTR [edi],ch
  401dad:	rol    edx,1
  401daf:	leave  
  401db0:	dec    eax
  401db1:	dec    esp
  401db2:	shr    bh,0xf9
  401db5:	cmp    al,0x8c
  401db7:	les    edx,FWORD PTR [ebp+0x2ef75f]
  401dbd:	jmp    0x7e88:0x1590031d
  401dc4:	sti    
  401dc5:	pop    ebp
  401dc6:	ficom  DWORD PTR [esp+edi*2-0x3b]
  401dca:	js     0x401d7b
  401dcc:	in     eax,0xd9
  401dce:	mov    ds:0xb11021ca,eax
  401dd3:	jbe    0x401e28
  401dd5:	dec    esi
  401dd6:	cwde   
  401dd7:	jl     0x401df8
  401dd9:	mov    DWORD PTR [edi-0x5],ebp
  401ddc:	lahf   
  401ddd:	cs and bl,dl
  401de0:	mov    dl,0x5a
  401de2:	cld    
  401de3:	mov    esp,0x18af550
  401de8:	mov    ds:0x5f31a0f1,al
  401ded:	push   ebp
  401dee:	xor    al,bh
  401df0:	dec    ebp
  401df1:	test   DWORD PTR [eax],0xa23ddfe
  401df7:	adc    dl,cl
  401df9:	lds    esp,FWORD PTR [ecx-0x631d4719]
  401dff:	jmp    0x64aa2c5c
  401e04:	aaa    
  401e05:	fnsave ds:0xf6b8fd42
  401e0b:	sub    DWORD PTR [ecx-0x144d8511],ebp
  401e11:	cld    
  401e12:	jno    0x401e93
  401e14:	test   DWORD PTR [edi-0x169a1ff],0x9aa0a428
  401e1e:	adc    eax,0x3fe4e441
  401e23:	jcxz   0x401e49
  401e26:	outs   dx,BYTE PTR ds:[esi]
  401e27:	fimul  DWORD PTR [edi+esi*4+0x2c]
  401e2b:	push   0xfffffff2
  401e2d:	adc    esi,DWORD PTR [eax+ebx*8+0x3e]
  401e31:	aam    0xf0
  401e33:	imul   ebp,DWORD PTR [ecx],0x40
  401e36:	stos   BYTE PTR es:[edi],al
  401e37:	cmp    ecx,DWORD PTR [edi]
  401e39:	xor    dh,bh
  401e3b:	lods   al,BYTE PTR ds:[esi]
  401e3c:	leave  
  401e3d:	mov    BYTE PTR [edi-0x63e42065],0x5e
  401e44:	pop    edi
  401e45:	push   ecx
  401e46:	rol    BYTE PTR [edi-0x2d],1
  401e49:	cmpps  xmm2,xmm2,0x62
  401e4d:	push   0x28
  401e4f:	lock cmc 
  401e51:	retf   
  401e52:	pop    esp
  401e53:	jg     0x401e54
  401e55:	xlat   BYTE PTR ds:[ebx]
  401e56:	xchg   ecx,eax
  401e57:	fdivr  DWORD PTR ds:0x7e5004e
  401e5d:	sub    BYTE PTR [edi+ebx*4-0x32],0xfd
  401e62:	and    DWORD PTR [ecx+0x4],0x78
  401e66:	pop    esp
  401e67:	jl     0x401dee
  401e69:	stc    
  401e6a:	sbb    eax,0x46e1ace4
  401e6f:	rol    BYTE PTR [ecx],cl
  401e71:	pushf  
  401e72:	or     BYTE PTR [edx-0x2b322359],cl
  401e78:	cmp    bh,ah
  401e7a:	add    ebp,DWORD PTR [edx]
  401e7c:	aam    0xf5
  401e7e:	ror    BYTE PTR [edx-0x492c7cb0],cl
  401e84:	in     eax,dx
  401e85:	add    al,0x13
  401e87:	iret   
  401e88:	cwde   
  401e89:	(bad)  
  401e8a:	call   0xc46a514
  401e8f:	push   0xffffffa9
  401e91:	push   ebx
  401e92:	rol    DWORD PTR [edi-0x17df6d5e],1
  401e98:	mov    dl,dh
  401e9a:	pop    ebx
  401e9b:	push   ss
  401e9c:	inc    edi
  401e9d:	cld    
  401e9e:	in     eax,dx
  401e9f:	int3   
  401ea0:	xchg   ebp,eax
  401ea1:	loope  0x401efe
  401ea3:	mov    ebx,0x5e3b0043
  401ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ea9:	and    bl,BYTE PTR [eax+0x5648acd7]
  401eaf:	jle    0x401f07
  401eb1:	retf   
  401eb2:	pop    ebx
  401eb3:	mov    WORD PTR [esi+0x63],es
  401eb6:	in     al,0x70
  401eb8:	(bad)  
  401eb9:	dec    edi
  401eba:	jmp    0x5374:0xd64ed042
  401ec1:	xor    DWORD PTR [ecx+0x29],0xffffffde
  401ec5:	fiadd  DWORD PTR [edi+0x74]
  401ec8:	out    dx,eax
  401ec9:	das    
  401eca:	mov    ds:0xabc4588c,al
  401ecf:	dec    esp
  401ed0:	inc    edx
  401ed1:	in     eax,dx
  401ed2:	lock pop ecx
  401ed4:	sub    ebx,eax
  401ed6:	dec    edi
  401ed7:	addr16 pop ebp
  401ed9:	into   
  401eda:	retf   0x9de
  401edd:	or     al,0x76
  401edf:	scas   al,BYTE PTR es:[edi]
  401ee0:	sub    edx,DWORD PTR [ecx+eax*2-0x5441e5dc]
  401ee7:	cli    
  401ee8:	mov    bh,0x41
  401eea:	jae    0x401e9a
  401eec:	xor    ebx,DWORD PTR [edi]
  401eee:	int    0x98
  401ef0:	fbld   TBYTE PTR [edx+0x33]
  401ef3:	xchg   BYTE PTR [edx+ebp*1],cl
  401ef6:	pop    edi
  401ef7:	and    esi,DWORD PTR [edx-0x76]
  401efa:	repz xor DWORD PTR [ecx-0x1452ae0e],eax
  401f01:	scas   al,BYTE PTR es:[edi]
  401f02:	popf   
  401f03:	(bad)  
  401f04:	jae    0x401f6c
  401f06:	cdq    
  401f07:	rol    DWORD PTR [ebp+0x529f4f69],0xe3
  401f0e:	aam    0x95
  401f10:	sbb    BYTE PTR [ecx+0x2f31caef],bl
  401f16:	pop    es
  401f17:	repz cmp al,0xde
  401f1a:	jo     0x401ec9
  401f1c:	jo     0x401ee1
  401f1e:	pop    esi
  401f1f:	test   al,0x92
  401f21:	rol    BYTE PTR [ecx-0x25],cl
  401f24:	and    DWORD PTR ds:0xc2655687,eax
  401f2a:	mov    al,0xf4
  401f2c:	aas    
  401f2d:	push   esp
  401f2e:	xchg   edi,eax
  401f2f:	rcr    DWORD PTR [edx-0x6f57e75c],1
  401f35:	jnp    0x401f0c
  401f37:	pop    esi
  401f38:	jle    0x401ec0
  401f3a:	mov    esi,0x2cb41888
  401f3f:	jecxz  0x401f8c
  401f41:	push   edx
  401f42:	mov    eax,ds:0xa0920500
  401f47:	push   es
  401f48:	or     dl,cl
  401f4a:	xchg   al,bl
  401f4c:	jecxz  0x401f6d
  401f4e:	sbb    eax,0xd0989c93
  401f53:	sbb    BYTE PTR [eax-0x5],al
  401f56:	popf   
  401f57:	xchg   ecx,eax
  401f58:	ins    BYTE PTR es:[edi],dx
  401f59:	repz mov esp,0xafcca49a
  401f5f:	out    0x85,al
  401f61:	mov    bh,0x2a
  401f63:	cmp    BYTE PTR [ebx+0x30],al
  401f66:	sbb    eax,edi
  401f68:	xchg   di,ax
  401f6a:	push   eax
  401f6b:	mov    fs,WORD PTR [edi+0xb]
  401f6e:	ror    bh,cl
  401f70:	(bad)  
  401f72:	jne    0x401efa
  401f74:	jns    0x401fb4
  401f76:	xlat   BYTE PTR ds:[ebx]
  401f77:	call   0x9fbe:0xb5c6c406
  401f7e:	sub    dh,dh
  401f80:	enter  0x6ab8,0x2f
  401f84:	xchg   edx,eax
  401f85:	pop    edx
  401f86:	xchg   esi,eax
  401f87:	clc    
  401f88:	(bad)  
  401f8a:	ins    DWORD PTR es:[edi],dx
  401f8b:	xor    BYTE PTR [esi+0x5a8d5100],bh
  401f91:	cmp    bh,dl
  401f93:	pusha  
  401f94:	mov    ds:0x914af839,al
  401f99:	mov    ah,0xea
  401f9b:	cmp    esi,DWORD PTR [ecx-0x6c]
  401f9e:	cdq    
  401f9f:	mov    edx,fs
  401fa1:	ins    BYTE PTR es:[edi],dx
  401fa2:	mov    esp,0x48393c09
  401fa7:	or     eax,0xdfcc5dea
  401fac:	sbb    BYTE PTR [ebx-0xef2b693],ch
  401fb2:	fcomi  st,st(0)
  401fb4:	jmp    0xdf8b8f0a
  401fb9:	lds    ecx,FWORD PTR [edx+0x26470de9]
  401fbf:	or     al,0x55
  401fc1:	scas   al,BYTE PTR es:[edi]
  401fc2:	(bad)  
  401fc3:	pop    ebx
  401fc4:	dec    eax
  401fc5:	cwde   
  401fc6:	ret    0x9f3c
  401fc9:	jmp    0x6a6f:0xa508985e
  401fd0:	test   eax,0x9a37d058
  401fd5:	dec    edx
  401fd6:	mov    ch,dl
  401fd8:	xchg   edi,eax
  401fd9:	jp     0x401fcc
  401fdb:	pop    eax
  401fdc:	mov    al,ds:0x7d7a971b
  401fe1:	pop    ebx
  401fe2:	mov    dl,0xf6
  401fe4:	mov    eax,0x90d3ca36
  401fe9:	and    DWORD PTR [ebx],0xc
  401fec:	(bad)  
  401fed:	icebp  
  401fee:	retf   0x20b
  401ff1:	jbe    0x40203a
  401ff3:	push   edi
  401ff4:	sahf   
  401ff5:	pop    ecx
  401ff6:	jno    0x402019
  401ff8:	add    eax,ebx
  401ffa:	jle    0x402045
  401ffc:	mov    ebx,0x6cceeed7
  402001:	jmp    0x52e8ea01
  402006:	fisttp QWORD PTR ds:0xe24bcff1
  40200c:	adc    BYTE PTR [ebp-0x2b],bl
  40200f:	inc    edi
  402010:	dec    edi
  402011:	mov    al,0xcb
  402013:	adc    cl,BYTE PTR [ebx]
  402015:	loop   0x402084
  402017:	adc    eax,0x93f6207f
  40201c:	xchg   BYTE PTR [edi+0x301de928],ch
  402022:	retf   0x44c1
  402025:	ins    BYTE PTR es:[edi],dx
  402026:	ins    BYTE PTR es:[edi],dx
  402027:	cwde   
  402028:	(bad)  
  40202a:	ss sub eax,0x27cdaffb
  402030:	push   ebp
  402031:	push   0x65
  402033:	mov    ebp,0x16fea5e5
  402038:	jg     0x40209b
  40203a:	cwde   
  40203b:	pop    eax
  40203c:	cwde   
  40203d:	mov    bl,BYTE PTR [esi-0x75d5bb8c]
  402043:	lods   al,BYTE PTR ds:[esi]
  402044:	fdiv   st(5),st
  402046:	pop    esi
  402047:	jb     0x402084
  402049:	arpl   WORD PTR [eax-0xe],dx
  40204c:	cld    
  40204d:	daa    
  40204e:	xlat   BYTE PTR ds:[ebx]
  40204f:	xchg   ebp,eax
  402050:	or     cl,BYTE PTR [edx+ebx*1]
  402053:	sahf   
  402054:	into   
  402055:	cmp    al,0xe1
  402057:	mov    DWORD PTR [edi+0x3056a32a],edx
  40205d:	into   
  40205e:	repnz mov esi,0x4fde4276
  402064:	sbb    BYTE PTR [edi-0x68],bl
  402067:	dec    esi
  402068:	mov    ss:0xeb4d7080,al
  40206e:	sub    edx,DWORD PTR ds:0xa2fb8dc6
  402074:	imul   ebp,DWORD PTR [edx+eax*4-0x6f8010bd],0xffffffbb
  40207c:	jg     0x4020ae
  40207e:	jmp    0x40205a
  402080:	mov    ch,0x3b
  402082:	aad    0x81
  402084:	aas    
  402085:	add    DWORD PTR [edi+0x4a],esp
  402088:	sub    DWORD PTR [ecx],ebx
  40208a:	push   ss
  40208b:	jns    0x4020ba
  40208d:	nop
  40208e:	icebp  
  40208f:	jae    0x40209d
  402091:	pop    esi
  402092:	cdq    
  402093:	dec    edx
  402094:	aaa    
  402095:	mov    cl,bh
  402097:	out    dx,al
  402098:	jg     0x4020b8
  40209a:	mov    ecx,0x3496c413
  40209f:	neg    BYTE PTR [edx+0x76]
  4020a2:	sub    BYTE PTR [ebx],dl
  4020a4:	mov    BYTE PTR [edx+0x18f7cde5],al
  4020aa:	sub    esi,eax
  4020ac:	mov    ah,0x6c
  4020ae:	les    eax,FWORD PTR [ebx+0x2532fec6]
  4020b4:	add    al,0x55
  4020b6:	sub    BYTE PTR [ebx+edi*4+0x5b],0x53
  4020bb:	pop    edx
  4020bc:	push   0x4b1fef87
  4020c1:	xchg   ecx,eax
  4020c2:	xor    cl,ch
  4020c4:	adc    ah,BYTE PTR [ecx-0x5a2bda0c]
  4020ca:	in     eax,0x31
  4020cc:	or     DWORD PTR [edx-0x1f],edx
  4020cf:	lahf   
  4020d0:	test   al,0x26
  4020d2:	daa    
  4020d3:	fisub  WORD PTR [ebx-0x3ac9d56d]
  4020d9:	ror    BYTE PTR [ecx],0x83
  4020dc:	jnp    0x40215c
  4020de:	in     eax,0x7
  4020e0:	xor    dh,BYTE PTR [esi+eax*8+0x191a5f2a]
  4020e7:	dec    edx
  4020e8:	pop    ebx
  4020e9:	repz xor cl,dh
  4020ec:	mov    eax,0xeb62a0ed
  4020f1:	xchg   DWORD PTR [ecx+0x641772df],esi
  4020f7:	add    BYTE PTR [esi+eax*2+0xc52d597],bl
  4020fe:	sbb    al,0xa5
  402100:	idiv   BYTE PTR [esi+0x7e6fca90]
  402106:	push   ss
  402107:	xor    esp,esi
  402109:	aam    0xb0
  40210b:	adc    al,0x64
  40210d:	xor    BYTE PTR [edi-0x5],0x6a
  402111:	in     eax,0x97
  402113:	ins    BYTE PTR es:[edi],dx
  402114:	pop    edi
  402115:	test   eax,0x56fca867
  40211a:	nop
  40211b:	push   edx
  40211c:	stos   BYTE PTR es:[edi],al
  40211d:	sbb    DWORD PTR [edx+0x25c896b8],eax
  402123:	adc    BYTE PTR [ecx-0x46],cl
  402126:	out    0x2c,al
  402128:	(bad)  
  402129:	pushf  
  40212a:	sub    al,0x6a
  40212c:	inc    ebp
  40212d:	push   edx
  40212e:	sbb    DWORD PTR [ebx+0x3d],edi
  402131:	dec    edx
  402132:	cmp    ch,0xa7
  402135:	rcl    BYTE PTR [edi+0x472bc888],1
  40213b:	(bad)  
  40213c:	cwde   
  40213d:	sub    ah,bh
  40213f:	mov    edx,0xd1254e36
  402144:	call   0x582ecd4b
  402149:	jle    0x40214f
  40214b:	jae    0x402189
  40214d:	mov    dh,0xf7
  40214f:	loop   0x4021b5
  402151:	test   DWORD PTR [edi],eax
  402153:	fucomip st,st(6)
  402155:	inc    ebx
  402156:	shr    BYTE PTR [edx-0x38],0x9a
  40215a:	sub    esi,DWORD PTR ds:0x3cfd5550
  402160:	stc    
  402161:	and    eax,0xed205b55
  402166:	hlt    
  402167:	fnstsw ax
  402169:	iret   
  40216a:	fwait
  40216b:	push   ecx
  40216c:	nop
  40216d:	sahf   
  40216e:	addr16 ss jns 0x402149
  402172:	jno    0x4021c4
  402174:	jmp    0x4021ea
  402176:	daa    
  402177:	push   cs
  402178:	leave  
  402179:	jo     0x402107
  40217b:	in     al,dx
  40217c:	xchg   esi,eax
  40217d:	inc    esp
  40217f:	push   esp
  402180:	cmp    al,0x72
  402182:	cmp    DWORD PTR [esi+ecx*8],0x36b67d0
  402189:	mov    esp,0x136b3468
  40218e:	pop    ebp
  40218f:	sub    BYTE PTR ss:[ecx-0x73],dh
  402193:	jge    0x402129
  402195:	rcl    DWORD PTR [esi+ebp*4-0x5d],1
  402199:	push   es
  40219a:	push   eax
  40219b:	icebp  
  40219c:	lahf   
  40219d:	mov    eax,0xd9e99178
  4021a2:	mov    eax,ds:0xf9bc7aba
  4021a7:	xchg   ecx,eax
  4021a8:	jmp    0x95e0:0xeb0f2088
  4021af:	pop    ss
  4021b0:	mov    esp,esp
  4021b2:	cmp    cl,cl
  4021b4:	mov    al,0x71
  4021b6:	lahf   
  4021b7:	add    ch,ch
  4021b9:	mov    dh,0xd3
  4021bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021bc:	adc    DWORD PTR [esi-0x58],edi
  4021bf:	add    eax,0xe52cec8e
  4021c4:	retf   
  4021c5:	or     eax,0xcab0c041
  4021ca:	lea    esi,[edx+eiz*4+0x1e31d0bc]
  4021d1:	cmp    BYTE PTR [eax],bl
  4021d3:	xor    bh,BYTE PTR [ecx-0x67]
  4021d6:	add    DWORD PTR [edx-0x2a],eax
  4021d9:	rcr    DWORD PTR [ebx+0xb7b17b4],1
  4021df:	push   esi
  4021e0:	pop    ebp
  4021e1:	popf   
  4021e2:	cmp    DWORD PTR ds:0xadbe502a,ebx
  4021e8:	stos   DWORD PTR es:[edi],eax
  4021e9:	sbb    dh,bl
  4021eb:	dec    ecx
  4021ec:	fs jno 0x40221c
  4021ef:	outs   dx,DWORD PTR ds:[esi]
  4021f0:	bound  esp,QWORD PTR [ebx-0x5d]
  4021f3:	dec    ebp
  4021f4:	mul    DWORD PTR [ecx+0x41162729]
  4021fa:	rol    ah,cl
  4021fc:	sbb    eax,ebx
  4021fe:	test   DWORD PTR [esi],0x33aa82a3
  402204:	dec    edx
  402205:	pop    ss
  402206:	and    BYTE PTR [eax-0x6373f768],al
  40220c:	or     DWORD PTR [edi],ecx
  40220e:	add    DWORD PTR [ebx+edx*2],0xffffffd7
  402212:	mov    ebx,0xb2a7d978
  402217:	mov    dh,0x5d
  402219:	add    DWORD PTR [ecx+0x3d88805],ecx
  40221f:	jns    0x4021af
  402221:	inc    eax
  402222:	shl    DWORD PTR [ecx],1
  402224:	sbb    dl,ah
  402226:	cld    
  402227:	push   ebx
  402228:	lahf   
  402229:	dec    ecx
  40222a:	mov    WORD PTR [esi+0x6ad82752],fs
  402230:	sub    ch,dl
  402232:	jmp    0xa702:0x1ce9b827
  402239:	cmp    BYTE PTR [esi],cl
  40223b:	sub    BYTE PTR [ebp-0x1],0x7d
  40223f:	xchg   ebp,eax
  402240:	jnp    0x402230
  402242:	mov    BYTE PTR [esi*8+0x12c907f1],ch
  402249:	jne    0x40221f
  40224b:	xor    BYTE PTR fs:[edi*1+0x29527bb1],bl
  402253:	mov    ebx,0x66e66b7d
  402258:	fistp  DWORD PTR [ebp-0x4a]
  40225b:	lods   al,BYTE PTR ds:[esi]
  40225c:	and    DWORD PTR [edx],ebp
  40225e:	push   cs
  40225f:	fwait
  402260:	das    
  402261:	xchg   esp,eax
  402262:	cdq    
  402263:	cld    
  402264:	hlt    
  402265:	jmp    0x4022c9
  402267:	nop
  402268:	jmp    0xa253:0xf589c860
  40226f:	lods   eax,DWORD PTR ds:[esi]
  402270:	bound  eax,QWORD PTR [esi+edi*1]
  402273:	shl    edx,1
  402275:	outs   dx,BYTE PTR ds:[esi]
  402276:	mov    edx,0x664173b0
  40227b:	cdq    
  40227c:	sbb    DWORD PTR ds:0xd0b649d5,ebp
  402282:	ja     0x402286
  402284:	sub    eax,0x2f161824
  402289:	fcom   DWORD PTR [edx+0xf]
  40228c:	inc    edx
  40228d:	xchg   esi,eax
  40228e:	(bad)  
  40228f:	mov    ds:0x1a830784,al
  402294:	and    ch,BYTE PTR [esi-0x1d]
  402297:	pop    ebp
  402298:	repnz mov ecx,?
  40229b:	sub    DWORD PTR [ecx+0x387f1d71],ebp
  4022a1:	(bad)  
  4022a2:	(bad)  
  4022a3:	(bad)  
  4022a5:	retf   
  4022a6:	(bad)  
  4022a7:	mov    eax,0x6f0e9409
  4022ac:	sbb    esi,DWORD PTR [ecx-0x1]
  4022af:	aad    0x2e
  4022b1:	add    al,0x5a
  4022b3:	push   cs
  4022b4:	jmp    0x83fffcc2
  4022b9:	or     eax,ecx
  4022bb:	jae    0x402328
  4022bd:	pop    esi
  4022be:	mov    edi,0xe125b85
  4022c3:	ins    DWORD PTR es:[edi],dx
  4022c4:	xor    edx,edx
  4022c6:	pusha  
  4022c7:	adc    BYTE PTR [ebx],0xa
  4022ca:	js     0x40229d
  4022cc:	loope  0x402252
  4022ce:	fwait
  4022cf:	aas    
  4022d0:	shl    BYTE PTR [ebx+0x7a],1
  4022d3:	and    al,0xf1
  4022d5:	outs   dx,DWORD PTR ds:[esi]
  4022d6:	sahf   
  4022d7:	cmp    esi,esp
  4022d9:	cmp    cl,bl
  4022db:	shl    BYTE PTR [ebx-0x78],cl
  4022de:	dec    esp
  4022df:	mov    ds,WORD PTR [edx+0x25]
  4022e2:	or     DWORD PTR [edx-0x5090f3fc],edi
  4022e8:	or     BYTE PTR [ebp-0x27],dl
  4022eb:	sub    dl,BYTE PTR ds:0xa417097d
  4022f1:	xchg   esi,eax
  4022f2:	push   0x742745e1
  4022f7:	std    
  4022f8:	xchg   dl,cl
  4022fa:	test   DWORD PTR [ecx+0x61e02d17],eax
  402300:	xor    esi,DWORD PTR [ebp-0x5dadde02]
  402306:	or     edi,0x54
  402309:	and    DWORD PTR [ecx-0x44],0xfffffff0
  40230d:	in     eax,0x14
  40230f:	jo     0x4022aa
  402311:	push   0xe958250e
  402316:	jb     0x4022f0
  402318:	push   edx
  402319:	pop    edx
  40231a:	retf   
  40231b:	push   0x8092d7ec
  402320:	push   cs
  402321:	fmul   st,st(6)
  402323:	test   eax,0x858b0a85
  402328:	sub    DWORD PTR [ebx-0x1a],ebp
  40232b:	std    
  40232c:	push   esp
  40232d:	cld    
  40232e:	sub    BYTE PTR [ebp+0x3f9be593],0xef
  402335:	inc    esp
  402336:	jmp    0x4022ba
  402338:	ficomp WORD PTR cs:[edx+eiz*4-0x7a]
  40233d:	int3   
  40233e:	or     ah,BYTE PTR [ebp*8-0x10411b57]
  402345:	(bad)  
  402346:	xchg   edi,eax
  402347:	hlt    
  402348:	mov    ch,0x2a
  40234b:	nop
  40234c:	or     al,0x3d
  40234e:	sub    BYTE PTR [edi-0x57d4f925],ch
  402354:	push   edi
  402355:	fild   QWORD PTR [ecx+0x629e3ea2]
  40235b:	out    0xcf,al
  40235d:	push   0xba5c6c1a
  402362:	scas   eax,DWORD PTR es:[edi]
  402363:	xchg   DWORD PTR [edi+0x6c],esi
  402366:	add    al,0xc4
  402368:	xchg   esi,eax
  402369:	or     ebp,ebx
  40236b:	adc    eax,0xba3d09eb
  402370:	fstp   QWORD PTR [ebx]
  402372:	or     eax,0x3137eede
  402377:	iret   
  402378:	sub    al,0xb9
  40237a:	fdiv   DWORD PTR [ebp+0x30e636ce]
  402380:	add    eax,0x9beeda77
  402385:	imul   ebp,DWORD PTR [ecx],0x23
  402388:	jmp    0x39ca3ef2
  40238d:	cdq    
  40238e:	sub    ebp,DWORD PTR [edx-0x16]
  402391:	ficom  WORD PTR [ebx]
  402393:	inc    ecx
  402394:	jmp    0x402350
  402396:	xchg   edi,eax
  402397:	dec    ebp
  402398:	inc    ebp
  402399:	sub    bl,al
  40239b:	or     al,0x43
  40239d:	ss stos BYTE PTR es:[edi],al
  40239f:	dec    ecx
  4023a0:	push   cs
  4023a1:	inc    ebp
  4023a2:	jmp    0xdcbe404f
  4023a7:	iret   
  4023a8:	xor    cl,BYTE PTR [esi+0x3b]
  4023ab:	push   esi
  4023ac:	ror    DWORD PTR [edx+0x42],1
  4023af:	shl    BYTE PTR [edx-0x52a265d4],1
  4023b5:	pop    ds
  4023b6:	sbb    eax,0x48422bf0
  4023bb:	xor    eax,0x8fea92ae
  4023c0:	sub    esp,ecx
  4023c2:	mov    fs,WORD PTR [ebp-0x483d2321]
  4023c8:	cmp    eax,0xe33bcc82
  4023cd:	and    al,0xc2
  4023cf:	inc    esi
  4023d0:	mov    ebp,0x84a5f6ea
  4023d5:	lock mov dl,BYTE PTR [esi+0x7d]
  4023d9:	mov    dh,0xca
  4023db:	cs push 0x239a9fe9
  4023e1:	cmp    esi,esi
  4023e3:	pop    esi
  4023e4:	mov    dh,BYTE PTR [eax]
  4023e6:	push   ss
  4023e7:	popa   
  4023e8:	out    0xd6,al
  4023ea:	push   es
  4023eb:	das    
  4023ec:	popf   
  4023ed:	mov    esp,0x68d46ee9
  4023f2:	xchg   BYTE PTR [esi],ch
  4023f4:	xor    dl,BYTE PTR [ecx]
  4023f6:	push   0xb4f66285
  4023fb:	mov    ebx,0x53ffb9d
  402400:	mov    bl,BYTE PTR cs:[ecx-0x33]
  402404:	aas    
  402405:	popf   
  402406:	push   eax
  402407:	scas   eax,DWORD PTR es:[edi]
  402408:	cli    
  402409:	dec    edi
  40240a:	mov    ebp,0xbf518a09
  40240f:	or     al,0x9e
  402411:	push   edx
  402412:	sbb    eax,0xa12711a
  402417:	adc    ebp,edi
  402419:	or     bl,BYTE PTR [edx]
  40241b:	lods   eax,DWORD PTR ds:[esi]
  40241c:	lods   al,BYTE PTR ds:[esi]
  40241d:	and    BYTE PTR [esi+0x19f9d545],dl
  402423:	inc    ebx
  402424:	mov    ebp,0x38fc3f19
  402429:	and    edi,ebx
  40242b:	fcmove st,st(1)
  40242d:	xchg   esp,eax
  40242e:	mov    al,0xd6
  402430:	jns    0x4023b7
  402432:	es sbb cl,ah
  402435:	daa    
  402436:	mov    eax,ds:0x899f2e4b
  40243b:	in     eax,dx
  40243c:	rcr    DWORD PTR [esi+0x4e],cl
  40243f:	adc    al,0xbb
  402441:	imul   edx,DWORD PTR ds:0xba6c359c,0x39
  402448:	enter  0x6c64,0xc6
  40244c:	adc    al,0x1e
  40244e:	fist   DWORD PTR [edx]
  402450:	dec    esi
  402451:	xchg   ebp,eax
  402452:	stos   BYTE PTR es:[edi],al
  402453:	pop    edi
  402454:	xchg   ebp,eax
  402455:	jbe    0x402409
  402457:	(bad)  
  402458:	cmp    DWORD PTR [ecx],ebp
  40245a:	sub    BYTE PTR [ebx+ecx*8-0xf],ch
  40245e:	cld    
  40245f:	add    ch,ah
  402461:	rcl    eax,cl
  402463:	out    0xa1,eax
  402465:	sahf   
  402466:	dec    esp
  402467:	adc    DWORD PTR [esi],edi
  402469:	cmovno eax,DWORD PTR [esi+ebp*8+0x667eb946]
  402471:	sub    al,0xee
  402473:	rcl    DWORD PTR [esi],1
  402475:	push   ss
  402476:	lods   eax,DWORD PTR ds:[esi]
  402477:	jecxz  0x402451
  402479:	pop    esp
  40247a:	and    edi,ebp
  40247c:	push   ss
  40247d:	gs sti 
  40247f:	push   ebp
  402480:	enter  0x26fd,0xe7
  402484:	mov    ebx,0xf52de965
  402489:	imul   edx,edi,0x77
  40248c:	sbb    DWORD PTR [ebx-0x46],esi
  40248f:	popf   
  402490:	sub    BYTE PTR [ebp-0x5a494a9f],bh
  402496:	add    eax,0xe8839757
  40249b:	xor    eax,0x7ae942a9
  4024a0:	fidivr DWORD PTR [ebx+0x618299d6]
  4024a6:	mov    ah,0xbd
  4024a8:	jg     0x402442
  4024aa:	jp     0x40248d
  4024ac:	(bad)  
  4024ad:	jns    0x40243f
  4024af:	or     eax,0xba25e46b
  4024b4:	sbb    dl,BYTE PTR [eax+esi*2]
  4024b7:	adc    BYTE PTR [ebx+0x24],0x52
  4024bb:	adc    dl,BYTE PTR [esi+eax*4+0x70]
  4024bf:	mov    dh,0x3e
  4024c1:	call   0x468e7e5a
  4024c6:	sbb    bh,bh
  4024c8:	popf   
  4024c9:	iret   
  4024ca:	mov    ecx,0x195c35ce
  4024cf:	std    
  4024d0:	mov    ebx,0xa6a91354
  4024d5:	in     eax,0xd0
  4024d7:	cwde   
  4024d8:	push   ecx
  4024d9:	test   eax,0x8a88c075
  4024de:	push   0x9d1775b5
  4024e3:	add    esp,esi
  4024e5:	fsubr  DWORD PTR [edx-0x35da7b48]
  4024eb:	mov    ds:0xe4e85d62,eax
  4024f0:	xchg   DWORD PTR [eax-0x31],eax
  4024f3:	cld    
  4024f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024f5:	(bad)  
  4024f6:	retf   
  4024f7:	ror    DWORD PTR [ecx+0x2a],cl
  4024fa:	cmp    al,0xe
  4024fc:	push   esp
  4024fd:	std    
  4024fe:	xchg   bl,bh
  402500:	mov    eax,ds:0x856c7e95
  402505:	cmp    DWORD PTR [ebp-0x70],ebp
  402508:	int    0x3f
  40250a:	sbb    eax,0xda91e0fe
  40250f:	ror    DWORD PTR [edx+0x43],0xe3
  402513:	push   ebp
  402514:	mul    BYTE PTR [ebx]
  402516:	ficomp WORD PTR [edi]
  402518:	loopne 0x402576
  40251a:	scas   eax,DWORD PTR es:[edi]
  40251b:	loopne 0x4024da
  40251d:	iret   
  40251e:	cwde   
  40251f:	jmp    0xc9597e9a
  402524:	outs   dx,DWORD PTR ds:[esi]
  402525:	mov    ebp,0x8c544ea0
  40252a:	cmp    DWORD PTR [ebx],ebx
  40252c:	and    eax,DWORD PTR [edi-0x2e]
  40252f:	popa   
  402530:	rcl    BYTE PTR [esi-0x5d],0xab
  402534:	test   ebp,ebp
  402536:	xchg   ecx,eax
  402537:	ror    BYTE PTR [edi-0x3312dd8b],cl
  40253d:	aam    0x20
  40253f:	mov    BYTE PTR [edx-0x55d2b977],dl
  402545:	mov    eax,ds:0xe91a49dd
  40254a:	sti    
  40254b:	xor    DWORD PTR [edx],esi
  40254d:	scas   eax,DWORD PTR es:[edi]
  40254e:	and    ebp,DWORD PTR [esi]
  402550:	push   0x317d95d5
  402555:	sub    ch,al
  402557:	dec    eax
  402558:	cmovae esp,DWORD PTR [esi+0x2a]
  40255c:	jmp    0x6782:0x6336a09d
  402563:	test   BYTE PTR [eax],bh
  402565:	shl    DWORD PTR [edi-0x788ef282],0x74
  40256c:	out    dx,eax
  40256d:	add    al,0xf1
  40256f:	fldcw  WORD PTR [edx+0x320ef264]
  402575:	sahf   
  402576:	cmp    bh,cl
  402578:	mov    ecx,0x87225a58
  40257d:	mov    ch,0xa1
  40257f:	push   ds
  402580:	sub    dl,BYTE PTR [ecx+0x3ab6e6cc]
  402586:	fwait
  402587:	std    
  402588:	cmp    DWORD PTR ds:[eax+edx*8-0x73],0xffffffae
  40258e:	inc    esp
  40258f:	add    ebx,esi
  402591:	xlat   BYTE PTR ds:[ebx]
  402592:	mov    dl,bl
  402594:	or     al,dl
  402596:	popa   
  402597:	repz aam 0x50
  40259a:	pusha  
  40259b:	xor    BYTE PTR [ebp+edi*2-0x5a],bl
  40259f:	rol    ebx,0x17
  4025a2:	cmp    al,bh
  4025a4:	dec    esp
  4025a5:	test   DWORD PTR [ebp+0x329f2254],esp
  4025ab:	jae    0x4025b1
  4025ad:	jbe    0x40261d
  4025af:	push   ds
  4025b0:	mov    bh,0xe6
  4025b2:	ds popf 
  4025b4:	iret   
  4025b5:	jne    0x40257c
  4025b7:	lds    ebp,FWORD PTR [ebp-0x2faa0145]
  4025bd:	jl     0x40258a
  4025bf:	inc    ebp
  4025c0:	jb     0x4025e2
  4025c2:	inc    esi
  4025c3:	cmc    
  4025c4:	rcl    BYTE PTR [ebp+0x7],0xf1
  4025c8:	test   eax,0xbc219e36
  4025cd:	fcom   QWORD PTR [edx+0x23]
  4025d0:	push   ds
  4025d1:	(bad)  
  4025d2:	jmp    0x1dc43edd
  4025d7:	call   0x818258b3
  4025dc:	arpl   ax,bx
  4025de:	adc    BYTE PTR [eax-0x5f],0xe5
  4025e2:	push   edx
  4025e3:	std    
  4025e4:	popf   
  4025e5:	sbb    edx,edi
  4025e7:	xor    ebx,edx
  4025e9:	add    eax,0x383c99bc
  4025ee:	out    dx,al
  4025ef:	inc    esp
  4025f0:	aam    0x4a
  4025f2:	sub    eax,DWORD PTR [esi]
  4025f4:	outs   dx,DWORD PTR ds:[esi]
  4025f5:	dec    esi
  4025f6:	fwait
  4025f7:	xor    bl,BYTE PTR [ecx]
  4025f9:	in     al,dx
  4025fa:	stc    
  4025fb:	push   edx
  4025fc:	xor    ecx,DWORD PTR [eax-0x1e]
  4025ff:	add    eax,0xc4bc1c12
  402604:	ret    0xc3c3
  402607:	or     dl,cl
  402609:	rcr    DWORD PTR [ecx-0x61],0x17
  40260d:	clc    
  40260e:	push   ebx
  40260f:	push   cs
  402610:	xchg   edi,eax
  402611:	repz das 
  402613:	cli    
  402614:	cld    
  402615:	in     eax,dx
  402616:	add    ecx,DWORD PTR [esi+edi*8+0x396d0bfc]
  40261d:	adc    ebp,DWORD PTR [esi]
  40261f:	add    edx,DWORD PTR [edi]
  402621:	(bad)  
  402622:	shl    BYTE PTR [eax],1
  402624:	stc    
  402625:	sar    BYTE PTR [ebx],cl
  402627:	xor    DWORD PTR [edi+0x3bf35160],ecx
  40262d:	stos   BYTE PTR es:[edi],al
  40262e:	mov    ah,0x52
  402630:	aaa    
  402631:	(bad)  
  402632:	xchg   edx,eax
  402633:	stc    
  402634:	scas   al,BYTE PTR es:[edi]
  402635:	retf   
  402636:	adc    ah,BYTE PTR [edx+0x584c1671]
  40263c:	or     eax,0x8f191db8
  402641:	xchg   BYTE PTR [esi-0x32],bh
  402644:	rcl    DWORD PTR [esi],cl
  402646:	pop    edi
  402647:	xchg   edx,eax
  402648:	push   es
  402649:	mov    esp,0xf072a9fa
  40264e:	cwde   
  40264f:	aad    0x28
  402651:	jmp    0x4026c7
  402653:	push   es
  402654:	xor    BYTE PTR [edi],cl
  402656:	mov    ah,BYTE PTR [ecx]
  402658:	aaa    
  402659:	xor    cl,BYTE PTR [ebp+eiz*1-0x3d34e835]
  402660:	pop    ecx
  402661:	jp     0x40260a
  402663:	push   esi
  402664:	inc    esp
  402665:	jno    0x40268d
  402667:	pushf  
  402668:	inc    eax
  402669:	bound  eax,QWORD PTR [ecx+edi*4-0x6ddc82dd]
  402670:	jle    0x402654
  402672:	bound  ebx,QWORD PTR [esi+0x2c]
  402675:	xchg   esp,eax
  402676:	add    edx,DWORD PTR [edx+edx*4-0x51]
  40267a:	and    dh,BYTE PTR [eax+eiz*1+0x17]
  40267e:	in     al,0xe0
  402680:	sbb    esi,edi
  402682:	lahf   
  402683:	jmp    0x4026e0
  402685:	mov    ebp,DWORD PTR [edi+ebx*8-0x4a913b83]
  40268c:	xchg   DWORD PTR [esi-0x1aa14a56],esp
  402692:	and    DWORD PTR [ebp+0x470e736d],esi
  402698:	test   al,0xad
  40269a:	sbb    eax,0xdca56c83
  40269f:	ret    
  4026a0:	mov    ecx,0x92712758
  4026a5:	inc    ebx
  4026a6:	sahf   
  4026a7:	fistp  WORD PTR [ebx]
  4026a9:	mov    esi,0x9de4e43
  4026ae:	test   al,0x7d
  4026b0:	xchg   ecx,eax
  4026b1:	cwde   
  4026b2:	xor    eax,0x5a69f82
  4026b7:	fsub   DWORD PTR ds:0x8e7c85c4
  4026bd:	xor    DWORD PTR [ebx+0x42],ebx
  4026c0:	mov    ebp,0x4e2d1054
  4026c5:	and    al,BYTE PTR [ecx]
  4026c7:	push   esp
  4026c8:	jl     0x4026f2
  4026ca:	sbb    al,0xcd
  4026cc:	outs   dx,DWORD PTR ds:[esi]
  4026cd:	inc    esi
  4026ce:	or     ax,0x7b07
  4026d2:	ins    BYTE PTR es:[edi],dx
  4026d3:	jbe    0x4026e9
  4026d5:	push   ecx
  4026d6:	retf   0x7d83
  4026d9:	fsubrp st(7),st
  4026db:	adc    al,al
  4026dd:	fmul   QWORD PTR [edx]
  4026df:	data16 mov WORD PTR [si-0x73],?
  4026e4:	lods   eax,DWORD PTR ds:[esi]
  4026e5:	sub    eax,0x7d5692fb
  4026ea:	int3   
  4026eb:	jle    0x4026d8
  4026ed:	out    dx,al
  4026ee:	xlat   BYTE PTR ds:[ebx]
  4026ef:	iret   
  4026f0:	xchg   esi,eax
  4026f1:	xor    eax,ecx
  4026f3:	adc    ebp,0x233b9b57
  4026f9:	add    esi,DWORD PTR [eax]
  4026fb:	jmp    0xc4ea:0x6d10ba6a
  402702:	mov    eax,0xe3cece9f
  402707:	imul   ecx,DWORD PTR [edx+ebp*4],0xa0db36b
  40270e:	pop    ss
  40270f:	pushf  
  402710:	pop    esi
  402711:	fwait
  402712:	cld    
  402713:	mov    ebx,0x7a394188
  402718:	lods   al,BYTE PTR ds:[esi]
  402719:	mov    BYTE PTR [ecx],dl
  40271b:	hlt    
  40271c:	sbb    al,0x24
  40271e:	fidivr WORD PTR [esi-0x111dd9f1]
  402724:	repz jge 0x40275f
  402727:	in     eax,0x30
  402729:	add    ch,BYTE PTR [ecx+ecx*1+0x304691e]
  402730:	stc    
  402731:	sbb    al,0xe5
  402733:	sub    al,0x6
  402735:	addr16 and bh,bl
  402738:	hlt    
  402739:	inc    ebp
  40273a:	lahf   
  40273b:	aas    
  40273c:	iret   
  40273d:	dec    edi
  40273e:	addr16 dec ecx
  402740:	pop    esp
  402741:	mov    ebx,0x1640529b
  402746:	ins    BYTE PTR es:[edi],dx
  402747:	aaa    
  402748:	dec    esp
  402749:	cmp    al,BYTE PTR ds:0x40523000
  40274f:	jl     0x4026f3
  402751:	push   ss
  402752:	mov    bh,0x41
  402754:	mov    dh,0x69
  402756:	xor    ecx,0x36
  402759:	in     eax,dx
  40275a:	ds adc dh,ah
  40275d:	push   ds
  40275e:	cmp    DWORD PTR [eax+0x70],ecx
  402761:	adc    al,BYTE PTR [edi+eiz*2]
  402764:	jns    0x402733
  402766:	bound  esp,QWORD PTR [ecx+edi*8+0x62]
  40276a:	mov    ds:0x81f3cb56,al
  40276f:	ror    bh,1
  402771:	mov    ebp,DWORD PTR ds:0x7fe179e5
  402777:	jbe    0x40271a
  402779:	imul   ecx,DWORD PTR [eax+0x1b03827c],0x23e8e78b
  402783:	jecxz  0x4027b3
  402785:	cmp    esi,ebx
  402787:	mov    al,0x27
  402789:	cdq    
  40278a:	mov    al,0x7a
  40278c:	mov    esp,0xcf608a7e
  402791:	(bad)  
  402792:	pusha  
  402793:	pop    eax
  402794:	out    dx,al
  402795:	push   ecx
  402796:	ret    
  402797:	call   0xd914:0xfb8c6eb7
  40279e:	popf   
  40279f:	stos   BYTE PTR es:[edi],al
  4027a0:	dec    edi
  4027a1:	pop    eax
  4027a2:	push   esi
  4027a3:	or     BYTE PTR [ecx+0xe],cl
  4027a6:	pop    esp
  4027a7:	call   0x6c812fc1
  4027ac:	fstp   QWORD PTR [esi]
  4027ae:	mov    al,ds:0x4451ae72
  4027b3:	cs scas eax,DWORD PTR es:[edi]
  4027b5:	adc    eax,0xd3e3ce7f
  4027ba:	(bad)  
  4027bc:	and    BYTE PTR [esi+ecx*4],ah
  4027bf:	mov    edi,0xeaa29033
  4027c4:	lods   al,BYTE PTR ds:[esi]
  4027c5:	pop    ebp
  4027c6:	push   ebx
  4027c7:	imul   edi,DWORD PTR [ebx*4-0x2cb208a4],0xffffffd3
  4027cf:	mov    ds:0x2e72758e,al
  4027d4:	repnz xor ch,BYTE PTR [esp+eax*8+0x40]
  4027d9:	mov    edi,0xb29b0d38
  4027de:	mov    cl,0x4c
  4027e0:	ret    
  4027e1:	sub    dl,BYTE PTR [ebp+0x74489bd4]
  4027e7:	mov    cl,0x9b
  4027e9:	outs   dx,BYTE PTR ds:[esi]
  4027ea:	pop    edx
  4027eb:	fmul   DWORD PTR [eax+ebp*8]
  4027ee:	mov    eax,ds:0x746d18ed
  4027f3:	push   cs
  4027f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027f5:	fnstcw WORD PTR [ebp-0x56d1c82c]
  4027fb:	push   esi
  4027fc:	inc    ecx
  4027fd:	ret    
  4027fe:	fcmovbe st,st(5)
  402800:	fdiv   QWORD PTR [ecx+0x672390e1]
  402806:	cmc    
  402807:	shl    DWORD PTR [ecx],0x5a
  40280a:	inc    esi
  40280b:	scas   al,BYTE PTR es:[edi]
  40280c:	dec    ebp
  40280d:	adc    eax,0x19bee5c8
  402812:	push   0xfffffffe
  402814:	lods   al,BYTE PTR ds:[esi]
  402815:	mov    dh,0xe2
  402817:	fwait
  402818:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402819:	mov    BYTE PTR [edi+esi*2-0x7a5597ba],bh
  402820:	push   ecx
  402821:	test   DWORD PTR [edi],ebp
  402823:	ds scas al,BYTE PTR es:[edi]
  402825:	add    BYTE PTR [ebx-0x3a56056d],0xe9
  40282c:	jne    0x4027b8
  40282e:	ins    WORD PTR es:[edi],dx
  402830:	cwde   
  402831:	dec    esi
  402832:	je     0x402842
  402834:	push   0x9881dc3d
  402839:	inc    ebx
  40283a:	push   es
  40283b:	dec    esi
  40283c:	sub    esi,DWORD PTR [eax]
  40283e:	loop   0x402857
  402840:	les    ecx,FWORD PTR [ebp-0x6c9d1cf3]
  402846:	ss jbe 0x402884
  402849:	dec    ebx
  40284a:	(bad)  
  40284c:	jp     0x4027d4
  40284e:	popa   
  40284f:	sub    DWORD PTR [edi-0x42bedf3d],esp
  402855:	outs   dx,DWORD PTR ds:[esi]
  402856:	hlt    
  402857:	dec    eax
  402858:	sub    eax,0xf940a756
  40285d:	sbb    eax,DWORD PTR ds:0xe9d4bb82
  402863:	jmp    0x35a:0x1c17245d
  40286a:	cs ins DWORD PTR es:[edi],dx
  40286c:	inc    ebp
  40286d:	scas   eax,DWORD PTR es:[edi]
  40286e:	ss mov ch,0x68
  402871:	out    dx,al
  402872:	aaa    
  402873:	out    dx,eax
  402874:	clc    
  402875:	pop    esi
  402876:	sub    edx,DWORD PTR [edx-0x1a28adb6]
  40287c:	sbb    bh,al
  40287e:	cli    
  40287f:	nop
  402880:	push   ds
  402881:	scas   eax,DWORD PTR es:[edi]
  402882:	adc    edi,DWORD PTR [ecx-0x6fe75ecb]
  402888:	jae    0x4028c7
  40288a:	push   eax
  40288b:	pop    ecx
  40288c:	retf   0x81db
  40288f:	pop    ecx
  402890:	mov    gs,WORD PTR [ebx+0x3cf0d34a]
  402896:	fs mov bl,0xde
  402899:	pop    edx
  40289a:	ds push edi
  40289c:	addr16 pop ecx
  40289e:	mov    ebp,0x20f3255b
  4028a3:	sub    DWORD PTR [edi-0x296a95d7],edi
  4028a9:	lods   eax,DWORD PTR ds:[esi]
  4028aa:	aam    0x3d
  4028ac:	jl     0x4028f3
  4028ae:	test   DWORD PTR [eax],0xe4548808
  4028b4:	dec    ebx
  4028b5:	mov    bl,0xc
  4028b7:	inc    esi
  4028b8:	mov    ecx,0xcfd8f131
  4028bd:	sub    eax,0xecfe0014
  4028c2:	pop    eax
  4028c3:	add    bl,cl
  4028c5:	call   0x8d5:0x66b5b037
  4028cc:	ins    BYTE PTR es:[edi],dx
  4028cd:	add    ebx,DWORD PTR [edx-0x75d9eb22]
  4028d3:	sub    al,0x8b
  4028d5:	shr    BYTE PTR [edx-0xf],1
  4028d8:	movq   QWORD PTR [eax+0x28],mm0
  4028dc:	fwait
  4028dd:	or     al,0xa6
  4028df:	imul   eax,DWORD PTR [edi+0x73],0xf9c354ba
  4028e6:	xor    ebx,edi
  4028e8:	xor    ebx,DWORD PTR ds:0xe481f411
  4028ee:	push   ecx
  4028ef:	and    eax,0x3b971953
  4028f4:	sahf   
  4028f5:	test   ah,al
  4028f7:	imul   esp,DWORD PTR [eax+0x5a],0xc382599
  4028fe:	adc    dl,BYTE PTR [edi]
  402900:	xor    esp,ecx
  402902:	cmp    dl,cl
  402904:	add    BYTE PTR ds:0x579ca74e,ah
  40290a:	xor    eax,0xa65efdcc
  40290f:	scas   al,BYTE PTR es:[edi]
  402910:	lea    ebp,[ecx]
  402912:	scas   al,BYTE PTR es:[edi]
  402913:	lock pop esp
  402915:	div    DWORD PTR [edx]
  402917:	inc    esp
  402918:	dec    edi
  402919:	or     BYTE PTR [esi],0x89
  40291c:	jmp    0x40297b
  40291e:	mov    edx,0x85cbe647
  402923:	iret   
  402924:	pop    ebp
  402925:	aaa    
  402926:	push   ebp
  402927:	fstp   QWORD PTR [edx+0x5ef07863]
  40292d:	cmp    DWORD PTR [esi],eax
  40292f:	sub    ch,BYTE PTR [eax+0x794a10fc]
  402935:	xor    bl,BYTE PTR [ebx]
  402937:	clc    
  402938:	loope  0x4028f1
  40293a:	aaa    
  40293b:	cmp    DWORD PTR [esi],ebp
  40293d:	mov    eax,0xf996c4b
  402942:	mov    ecx,ecx
  402944:	ss inc esp
  402946:	aas    
  402947:	jg     0x402912
  402949:	mov    ah,0x2f
  40294b:	xchg   ah,ah
  40294d:	sub    eax,DWORD PTR ds:0x9ff85865
  402953:	fs push es
  402955:	inc    ebp
  402956:	daa    
  402957:	adc    BYTE PTR [ebx-0x7d],dl
  40295a:	sub    dl,BYTE PTR [eax+0x7b]
  40295d:	stc    
  40295e:	push   edx
  40295f:	aaa    
  402960:	mov    edi,DWORD PTR [ecx-0x7b]
  402963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402964:	addr16 aas 
  402966:	jo     0x402917
  402968:	dec    edx
  402969:	mov    al,bl
  40296b:	inc    esp
  40296c:	rol    BYTE PTR [esi],1
  40296e:	js     0x402943
  402970:	ds enter 0xd895,0x52
  402975:	pop    ebp
  402976:	lods   al,BYTE PTR ds:[esi]
  402977:	das    
  402978:	mov    ds:0xccbde799,al
  40297d:	ins    DWORD PTR es:[edi],dx
  40297e:	xor    al,0x25
  402980:	aad    0x5e
  402982:	div    BYTE PTR [eax-0x105cb14e]
  402988:	outs   dx,BYTE PTR ds:[esi]
  402989:	xchg   edi,eax
  40298a:	pop    es
  40298b:	mov    bl,0x3
  40298d:	sbb    DWORD PTR [edi],ecx
  40298f:	jo     0x40296c
  402991:	fist   WORD PTR [edi]
  402993:	push   ss
  402994:	fsubp  st(2),st
  402996:	inc    ebx
  402997:	fild   QWORD PTR [eax-0xcfe419c]
  40299d:	outs   dx,DWORD PTR ds:[esi]
  40299e:	or     cl,bl
  4029a0:	retf   0x1d4b
  4029a3:	hlt    
  4029a4:	rcr    bl,1
  4029a6:	repnz les ebx,FWORD PTR [ebx+ebp*1-0x29bad226]
  4029ae:	fs or  al,0x28
  4029b1:	call   FWORD PTR [edx]
  4029b3:	mov    dl,0xe
  4029b5:	mov    esp,0x9915d0ec
  4029ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029bb:	repz jl 0x40298a
  4029be:	sbb    ah,BYTE PTR [ecx]
  4029c0:	or     BYTE PTR [esp+ecx*2-0x21],ch
  4029c4:	pop    ebp
  4029c5:	fs iret 
  4029c7:	(bad)  [edx]
  4029c9:	add    ebp,DWORD PTR [edi-0x72be50da]
  4029cf:	imul   BYTE PTR [edx]
  4029d1:	outs   dx,BYTE PTR ds:[esi]
  4029d2:	inc    edi
  4029d3:	dec    esp
  4029d4:	dec    eax
  4029d5:	ja     0x4029cb
  4029d7:	fwait
  4029d8:	adc    ebp,DWORD PTR [ebx-0x67]
  4029db:	fstp   QWORD PTR [ecx]
  4029dd:	push   edi
  4029de:	int    0xd2
  4029e0:	or     BYTE PTR [ebx+ebx*2+0x14a61989],ch
  4029e7:	add    ah,BYTE PTR [edx+0xb]
  4029ea:	mov    bl,BYTE PTR [ebp+edx*2+0x10]
  4029ee:	lods   al,BYTE PTR ds:[esi]
  4029ef:	sbb    BYTE PTR [edx+eax*8+0x7dde5eec],dl
  4029f6:	mov    ds:0x82008541,al
  4029fb:	cmp    ch,BYTE PTR [edx]
  4029fd:	shr    BYTE PTR [eax+ecx*1+0x368fb136],cl
  402a04:	cld    
  402a05:	shr    BYTE PTR [esi+0x2069e2a8],1
  402a0b:	test   al,0xb1
  402a0d:	mov    ecx,es
  402a0f:	dec    ebx
  402a10:	in     eax,dx
  402a11:	cmp    al,bh
  402a13:	mov    ds:0xd022caa1,al
  402a18:	(bad)  
  402a19:	dec    edi
  402a1a:	test   DWORD PTR ds:0x7571497b,esi
  402a20:	loopne 0x402a24
  402a22:	push   edi
  402a23:	mov    dh,0xcf
  402a25:	xor    al,0x5b
  402a27:	sbb    eax,0x3dc7fc0f
  402a2c:	jno    0x402a15
  402a2e:	pop    ebp
  402a2f:	sub    al,0xfd
  402a31:	nop
  402a32:	push   ds
  402a33:	inc    esi
  402a34:	jns    0x4029c4
  402a36:	fisubr DWORD PTR ds:0x8a2efc5c
  402a3c:	push   cs
  402a3d:	inc    ebp
  402a3e:	push   esp
  402a3f:	mov    edx,0x16ed5e43
  402a44:	push   esp
  402a45:	int3   
  402a46:	daa    
  402a47:	mov    bl,0xf8
  402a49:	scas   al,BYTE PTR es:[edi]
  402a4a:	inc    ebp
  402a4b:	and    eax,0x809f5e8
  402a50:	xchg   esi,eax
  402a51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a52:	in     eax,dx
  402a53:	sbb    cl,BYTE PTR [edi+0x65]
  402a56:	add    eax,0x4cd4cb8a
  402a5b:	or     eax,0xe08443aa
  402a60:	test   BYTE PTR [bx+si-0x7e],bl
  402a64:	sbb    cl,BYTE PTR [eax-0x6d71f80d]
  402a6a:	push   esp
  402a6b:	xor    eax,0x6215b3e9
  402a70:	sbb    cl,ch
  402a72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a73:	(bad)  
  402a74:	sub    eax,0xcbd80e3d
  402a79:	gs pop esp
  402a7b:	push   ss
  402a7c:	mov    fs,ecx
  402a7e:	fiadd  WORD PTR [ebx]
  402a80:	into   
  402a81:	push   cs
  402a82:	retf   
  402a83:	sahf   
  402a84:	repz mov eax,ds:0x5bb2ae6b
  402a8a:	sub    ch,al
  402a8c:	xchg   esp,eax
  402a8d:	mov    ah,0x63
  402a8f:	lahf   
  402a90:	jb     0x402ac6
  402a92:	out    dx,eax
  402a93:	xchg   ebx,eax
  402a94:	das    
  402a95:	js     0x402aed
  402a97:	jns    0x402a70
  402a99:	mov    ds:0x8a928951,eax
  402a9e:	mov    DWORD PTR [edx-0x711f9],eax
  402aa4:	and    al,bl
  402aa6:	std    
  402aa7:	sbb    eax,0xcfc6fe0f
  402aac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aad:	cmp    ch,BYTE PTR ds:0x5c9b9e9
  402ab3:	push   ecx
  402ab4:	cmp    al,0x6d
  402ab6:	pop    ds
  402ab7:	cmp    eax,0x5c86df32
  402abc:	mov    eax,DWORD PTR [edi+ebx*2+0x44224a3e]
  402ac3:	mov    dl,0x86
  402ac5:	pop    edi
  402ac6:	adc    cl,BYTE PTR [ebp-0x25]
  402ac9:	lea    edx,[edi+eiz*1+0x39]
  402acd:	(bad)  
  402ace:	pop    ecx
  402acf:	jmp    0x7e583210
  402ad4:	mov    ebx,0x76455b50
  402ad9:	push   ebp
  402ada:	push   es
  402adb:	ss jl  0x402af4
  402ade:	push   ebx
  402adf:	rcr    BYTE PTR [esp+ebp*8+0x1d],0x35
  402ae4:	xchg   DWORD PTR [ecx],ecx
  402ae6:	pop    esp
  402ae7:	int    0x2b
  402ae9:	pop    ds
  402aea:	xchg   BYTE PTR [edi+0x53],bh
  402aed:	cmp    eax,0x9e762854
  402af2:	stc    
  402af3:	loopne 0x402a88
  402af5:	pop    esi
  402af6:	inc    ecx
  402af7:	xchg   ch,al
  402af9:	push   fs
  402afb:	inc    ebp
  402afc:	mov    bl,0xe6
  402afe:	or     DWORD PTR [ebx],0x54
  402b01:	or     BYTE PTR [ebp+0x77],dh
  402b04:	ror    edi,1
  402b06:	mov    ebx,0xf05965d6
  402b0b:	arpl   WORD PTR [ecx+edx*4-0x18ffed8],bx
  402b12:	adc    bh,BYTE PTR [esi+0x6a15058c]
  402b18:	cmp    eax,0xe3d360de
  402b1d:	cmp    al,0x1
  402b1f:	shl    BYTE PTR [ecx+0x66],cl
  402b22:	out    0x1c,eax
  402b24:	mov    cl,0xcc
  402b26:	clc    
  402b27:	gs cmc 
  402b29:	(bad)  
  402b2a:	sahf   
  402b2b:	and    al,al
  402b2d:	push   edx
  402b2e:	push   edi
  402b2f:	cli    
  402b30:	mov    ds:0x57d85fab,al
  402b35:	mov    cl,0xfa
  402b37:	cmp    bh,BYTE PTR [ecx+0x3a1aa6bb]
  402b3d:	inc    si
  402b3f:	pop    ecx
  402b40:	mov    eax,ds:0x5a84f624
  402b45:	mov    edx,0xc69ef6b6
  402b4a:	sub    DWORD PTR [ebx],ebp
  402b4c:	daa    
  402b4d:	jmp    0x402afc
  402b4f:	xor    dh,BYTE PTR [eax-0x34]
  402b52:	pop    ds
  402b53:	lods   al,BYTE PTR ds:[esi]
  402b54:	mov    eax,0xa5fd138c
  402b59:	jle    0x402b15
  402b5b:	sahf   
  402b5c:	outs   dx,BYTE PTR ds:[esi]
  402b5d:	retf   0x7486
  402b60:	push   ecx
  402b61:	jne    0x402b5d
  402b63:	mov    ch,ch
  402b65:	or     al,0xf8
  402b67:	enter  0x42ea,0xb9
  402b6b:	js     0x402b7e
  402b6d:	in     eax,dx
  402b6e:	and    eax,0x4c4f3754
  402b73:	inc    edi
  402b74:	mov    ebp,0x9e6ba860
  402b79:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  402b7b:	scas   eax,DWORD PTR es:[edi]
  402b7c:	in     eax,dx
  402b7d:	or     eax,0x30aa4a62
  402b82:	(bad)  
  402b83:	jb     0x402bf6
  402b85:	push   ds
  402b86:	add    eax,0xbe52a75a
  402b8b:	scas   eax,DWORD PTR es:[edi]
  402b8c:	ret    
  402b8d:	or     BYTE PTR [edi],ah
  402b8f:	push   ss
  402b90:	fcomp  DWORD PTR [edi+0x322289fe]
  402b96:	out    0xb3,al
  402b98:	enter  0x7673,0xe6
  402b9c:	test   BYTE PTR [ecx-0x67],al
  402b9f:	jbe    0x402b98
  402ba1:	inc    edx
  402ba2:	inc    eax
  402ba3:	cdq    
  402ba4:	dec    ebx
  402ba5:	cdq    
  402ba6:	xchg   esp,eax
  402ba7:	xchg   ebx,eax
  402ba8:	inc    ebx
  402ba9:	loope  0x402c0f
  402bab:	sub    cl,bl
  402bad:	and    ecx,DWORD PTR [edx]
  402baf:	adc    eax,ebx
  402bb1:	mov    ds:0xa54fd8c8,al
  402bb6:	mov    eax,DWORD PTR [ebp+0x38]
  402bb9:	adc    dl,bl
  402bbb:	sbb    al,0xcb
  402bbd:	imul   ecx,DWORD PTR [esi],0x3d8fb54c
  402bc3:	je     0x402bd5
  402bc5:	les    ebx,FWORD PTR [edi-0x36]
  402bc8:	daa    
  402bc9:	adc    eax,0xcb7e174b
  402bce:	imul   edx,ecx,0x369f5a20
  402bd4:	nop
  402bd5:	outs   dx,BYTE PTR ds:[esi]
  402bd6:	pop    edi
  402bd7:	or     eax,DWORD PTR [edx+0x4a]
  402bda:	sub    edi,esp
  402bdc:	icebp  
  402bdd:	inc    ecx
  402bde:	mov    ds:0xb06ad019,eax
  402be3:	mov    ah,0x86
  402be5:	punpckhwd mm7,QWORD PTR [eax]
  402be8:	cwde   
  402be9:	or     ecx,DWORD PTR [edi+edx*4-0x39]
  402bed:	xchg   DWORD PTR [ebx+0x55],esi
  402bf0:	or     dl,BYTE PTR [ecx-0x20a62942]
  402bf6:	sub    eax,0x51a5ff53
  402bfb:	dec    edx
  402bfc:	inc    ebp
  402bfd:	xchg   BYTE PTR [ebx],cl
  402bff:	sti    
  402c00:	mov    edx,0x72a8e5dd
  402c05:	add    edi,DWORD PTR [edx+0x56]
  402c08:	or     DWORD PTR [edx+0x654068a4],0xffffffdb
  402c0f:	or     edi,DWORD PTR [edx+ebp*8+0x3f3ba3c3]
  402c16:	fimul  WORD PTR [eax+edx*8]
  402c19:	out    dx,eax
  402c1a:	jg     0x402ba6
  402c1c:	test   edi,edx
  402c1e:	shl    BYTE PTR [esi],1
  402c20:	mov    ds:0xb8c7619,al
  402c25:	sub    al,0x31
  402c27:	cmp    cl,BYTE PTR [esi-0xf]
  402c2a:	cmc    
  402c2b:	fcom   DWORD PTR [ebx-0x80]
  402c2e:	std    
  402c2f:	rol    edi,cl
  402c31:	inc    ebx
  402c32:	leave  
  402c33:	adc    ah,BYTE PTR [ebp-0x77fcd4b8]
  402c39:	sbb    edx,DWORD PTR [ebx+0xb]
  402c3c:	push   ecx
  402c3d:	xchg   DWORD PTR [ebx],ecx
  402c3f:	jnp    0x402c9a
  402c41:	mov    eax,ds:0xe53c7825
  402c46:	fdivr  QWORD PTR [eax+edi*2+0x7b]
  402c4a:	stos   BYTE PTR es:[edi],al
  402c4b:	(bad)  
  402c4c:	in     al,0x56
  402c4e:	fcomp  DWORD PTR [edx+ecx*8]
  402c51:	dec    esi
  402c52:	xchg   edi,eax
  402c53:	jnp    0x402bde
  402c55:	sbb    DWORD PTR [ecx-0x1a],0xe8a3af2b
  402c5c:	adc    bh,al
  402c5e:	pop    esp
  402c5f:	les    eax,FWORD PTR [eax]
  402c61:	int    0x37
  402c63:	into   
  402c64:	pop    esi
  402c65:	xchg   esp,eax
  402c66:	push   es
  402c67:	pop    es
  402c68:	add    eax,0x77bf46f5
  402c6d:	or     ebx,DWORD PTR [edi-0x97e122a]
  402c73:	jbe    0x402cf4
  402c75:	ins    BYTE PTR es:[edi],dx
  402c76:	mov    bl,0x56
  402c78:	push   edx
  402c79:	pop    ebp
  402c7a:	jo     0x402c5f
  402c7c:	sbb    DWORD PTR [ebx+0xd],0xa494c34c
  402c83:	adc    al,BYTE PTR [edi+ebp*1-0x60605896]
  402c8a:	mov    ah,0xb
  402c8c:	adc    BYTE PTR [edx],0xfd
  402c8f:	push   0xbe15c94f
  402c94:	aaa    
  402c95:	fwait
  402c96:	mov    cs,WORD PTR [ecx]
  402c98:	pop    ebx
  402c99:	inc    edi
  402c9a:	test   DWORD PTR [esi+0x2086551],0xa87388ce
  402ca4:	int    0xe2
  402ca6:	sar    DWORD PTR [eax],0x8b
  402ca9:	xor    bl,ah
  402cab:	aad    0x11
  402cad:	jb     0x402d10
  402caf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402cb0:	cld    
  402cb1:	rcl    DWORD PTR [ebp+0x5b],cl
  402cb4:	add    BYTE PTR [edx],dh
  402cb6:	mov    esi,0x3a140935
  402cbb:	fimul  DWORD PTR [ebx]
  402cbd:	adc    BYTE PTR ds:0x3f8c2fa7,bl
  402cc3:	xbegin 0x3eb76f62
  402cc9:	repnz addr16 dec di
  402ccd:	cld    
  402cce:	jmp    0x402d1f
  402cd0:	je     0x402cd3
  402cd2:	xchg   ebx,eax
  402cd3:	jecxz  0x402cce
  402cd5:	push   0xffffffaa
  402cd7:	dec    ecx
  402cd8:	adc    dh,BYTE PTR [edx-0x414332de]
  402cde:	jmp    0x5035:0xd1b2c9a4
  402ce5:	mov    eax,0x82938eaa
  402cea:	push   edx
  402ceb:	cmp    cl,cl
  402ced:	pop    eax
  402cee:	cmc    
  402cef:	(bad)
  402cf3:	jno    0x402d6b
  402cf5:	out    0x5c,al
  402cf7:	xor    cl,BYTE PTR [ecx+0x55]
  402cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cfb:	and    al,0x47
  402cfd:	out    0x15,eax
  402cff:	clc    
  402d00:	sysenter 
  402d02:	in     eax,0xef
  402d04:	inc    esi
  402d05:	ffreep st(0)
  402d07:	ss push edi
  402d09:	out    0x2b,al
  402d0b:	add    ebp,0x5d77e4d5
  402d11:	cmp    eax,0xc64c136
  402d16:	xor    DWORD PTR [ebx+eiz*2],edx
  402d19:	aas    
  402d1a:	push   edx
  402d1b:	pop    edi
  402d1c:	test   BYTE PTR [eax-0x1f],al
  402d1f:	dec    esi
  402d20:	ror    cl,cl
  402d22:	in     al,0x9
  402d24:	jns    0x402d02
  402d26:	nop
  402d27:	ret    0x4f16
  402d2a:	das    
  402d2b:	out    dx,eax
  402d2c:	(bad)  
  402d2d:	shl    ebx,0xbd
  402d30:	jmp    0x402d11
  402d32:	mov    eax,0x36f56a
  402d37:	sbb    ah,BYTE PTR [ebx]
  402d39:	lods   al,BYTE PTR ds:[esi]
  402d3a:	sbb    dl,BYTE PTR [ebp-0x22]
  402d3d:	fimul  WORD PTR [eax]
  402d3f:	imul   edi,DWORD PTR [ecx+0x12fb5b81],0xffffff89
  402d46:	int    0xc1
  402d48:	push   0x60bd6c92
  402d4d:	mov    ebp,0x9dbb97e2
  402d52:	jae    0x402dca
  402d54:	(bad)  
  402d55:	or     edx,DWORD PTR [eax+eax*1]
  402d58:	out    0x7f,eax
  402d5a:	jmp    0x59d9ce12
  402d5f:	dec    ecx
  402d60:	mov    BYTE PTR [ecx+0x7e],bh
  402d63:	fidiv  WORD PTR [esi]
  402d65:	mov    al,0xb7
  402d67:	mov    ds:0xa3d68f28,al
  402d6c:	hlt    
  402d6d:	nop
  402d6e:	cmp    eax,0x5fd97bfc
  402d73:	xor    eax,0x834e8ca1
  402d78:	and    bh,BYTE PTR [ebx]
  402d7a:	out    dx,al
  402d7b:	jmp    DWORD PTR [ebp+0x2e]
  402d7e:	scas   al,BYTE PTR es:[edi]
  402d7f:	popf   
  402d80:	sti    
  402d81:	push   esi
  402d82:	mov    DWORD PTR [eax-0x6f9196b0],ebx
  402d88:	mov    ebp,0xf0b6482f
  402d8d:	enter  0x7ddb,0xfd
  402d91:	or     BYTE PTR [edx-0x4672def],dh
  402d97:	addr16 mov ds:0xafc3,al
  402d9b:	push   esp
  402d9c:	mov    bl,0x8c
  402d9e:	ror    esi,cl
  402da0:	dec    edi
  402da1:	ret    
  402da2:	aaa    
  402da3:	aaa    
  402da4:	scas   al,BYTE PTR es:[edi]
  402da5:	xor    eax,0x535970ca
  402daa:	sub    ebx,DWORD PTR ds:0xb5ed1809
  402db0:	mov    DWORD PTR [edx],0x64f9ee75
  402db6:	cmp    esi,ebx
  402db8:	jnp    0x402e34
  402dba:	mov    eax,0xf15739cd
  402dbf:	inc    edx
  402dc0:	jns    0x402dc2
  402dc2:	push   0x4b
  402dc4:	xor    eax,DWORD PTR [edi+edx*2+0x60c833ab]
  402dcb:	popa   
  402dcc:	pop    esp
  402dcd:	xor    edx,DWORD PTR [eiz*1+0x3806bdd9]
  402dd4:	add    eax,0x43b17555
  402dd9:	nop
  402dda:	popf   
  402ddb:	xor    al,0xae
  402ddd:	mov    ah,0x71
  402ddf:	stos   DWORD PTR es:[edi],eax
  402de0:	(bad)  
  402de1:	xchg   esp,eax
  402de2:	inc    ecx
  402de3:	and    cl,BYTE PTR [ebx-0x7eb5715a]
  402de9:	icebp  
  402dea:	mov    ds:0xf3808b92,eax
  402def:	out    0xbf,eax
  402df1:	call   0x1157c0b1
  402df6:	adc    DWORD PTR [eax-0x41ee9c58],0xfffffffc
  402dfd:	test   DWORD PTR [ebx+0x61],ebp
  402e00:	cld    
  402e01:	in     eax,0x39
  402e03:	pop    edx
  402e04:	adc    ah,BYTE PTR [edi+0x5eeb86af]
  402e0a:	dec    esi
  402e0b:	outs   dx,DWORD PTR ds:[esi]
  402e0c:	rsm    
  402e0e:	jecxz  0x402e8d
  402e10:	scas   al,BYTE PTR es:[edi]
  402e11:	in     eax,dx
  402e12:	aaa    
  402e13:	or     ah,dh
  402e15:	xor    BYTE PTR [ebx+0x5b],bl
  402e18:	xor    bl,ah
  402e1a:	loop   0x402db5
  402e1c:	push   ss
  402e1d:	fldenv [esi-0x3846b644]
  402e23:	inc    ecx
  402e24:	or     dh,bh
  402e26:	jns    0x402e09
  402e28:	push   esp
  402e29:	push   ss
  402e2a:	fs das 
  402e2c:	adc    eax,0x84c48fcb
  402e31:	mov    bh,0x3f
  402e33:	lahf   
  402e34:	out    dx,eax
  402e35:	fwait
  402e36:	(bad)  
  402e37:	sub    al,0xca
  402e39:	jecxz  0x402ea3
  402e3b:	jle    0x402e1b
  402e3d:	cs push edx
  402e3f:	and    esi,DWORD PTR [edx+0x5ce6c407]
  402e45:	mov    ds:0xfb513a80,al
  402e4a:	push   esi
  402e4b:	cdq    
  402e4c:	(bad)  
  402e4d:	jb     0x402eb1
  402e4f:	jae    0x402e43
  402e51:	sbb    cl,ah
  402e53:	or     bl,bl
  402e55:	in     eax,dx
  402e56:	test   edx,edx
  402e58:	sbb    eax,0x99db1747
  402e5d:	mov    DWORD PTR [eax-0x4d9be261],esi
  402e63:	stos   DWORD PTR es:[edi],eax
  402e64:	add    BYTE PTR [eax-0x2125d0],ah
  402e6a:	std    
  402e6b:	inc    esi
  402e6c:	test   BYTE PTR [edi-0x46],bh
  402e6f:	sub    al,0x66
  402e71:	mov    ds:0x91bd34a7,al
  402e76:	dec    edi
  402e77:	dec    esp
  402e78:	lds    ebp,FWORD PTR [edi*8+0x61fad559]
  402e7f:	push   0x3817f733
  402e84:	es add eax,0x5628bcd5
  402e8a:	aam    0x75
  402e8c:	jecxz  0x402e9e
  402e8e:	addr16 retf 
  402e90:	pushf  
  402e91:	dec    edi
  402e92:	push   esi
  402e93:	mov    eax,0xa288b029
  402e98:	mov    dl,0x46
  402e9a:	mov    ds:0x2ac61f7f,eax
  402e9f:	daa    
  402ea0:	mov    ds:0x3e73b35b,eax
  402ea5:	mov    esp,0x677230be
  402eaa:	and    DWORD PTR [ebp-0x70],ebp
  402ead:	in     eax,dx
  402eae:	mov    esp,esp
  402eb0:	pop    ebx
  402eb1:	xchg   ebx,eax
  402eb2:	and    BYTE PTR [ebx-0xa5a5579],ah
  402eb8:	xor    DWORD PTR [ebx+0x45825ef6],edi
  402ebe:	jp     0x402e60
  402ec0:	pop    esi
  402ec1:	fstp   QWORD PTR [esi+0x71303591]
  402ec7:	hlt    
  402ec8:	aam    0xf1
  402eca:	fadd   st(2),st
  402ecc:	cmc    
  402ecd:	push   0x1c6249a8
  402ed2:	outs   dx,DWORD PTR ds:[esi]
  402ed3:	push   cs
  402ed4:	cmp    ecx,0x66
  402ed7:	sub    eax,0x5fb289b3
  402edc:	rcr    ch,cl
  402ede:	sahf   
  402edf:	push   0xfd408235
  402ee4:	mov    ch,0x53
  402ee6:	dec    esi
  402ee7:	stos   DWORD PTR es:[edi],eax
  402ee8:	push   eax
  402ee9:	rcr    ch,1
  402eeb:	test   al,0x1f
  402eed:	pop    es
  402eee:	adc    DWORD PTR [ebx],0xfaaef2c3
  402ef4:	push   ebx
  402ef5:	retf   
  402ef6:	push   0x68
  402ef8:	inc    ecx
  402ef9:	jg     0x402e97
  402efb:	mov    edi,0x249daa61
  402f00:	push   esp
  402f01:	adc    eax,0xed7b9a6a
  402f06:	adc    eax,0x7ca9d8f0
  402f0b:	mov    edi,0x13a3c85d
  402f10:	out    dx,eax
  402f11:	popa   
  402f12:	sub    BYTE PTR [ebx+0x52],dl
  402f15:	rcr    cl,cl
  402f17:	xor    edi,DWORD PTR [ebx+0x3cd84082]
  402f1d:	jmp    0x402f54
  402f1f:	out    0x33,eax
  402f21:	mov    ebp,0xf9605086
  402f26:	repnz mov eax,ds:0xdb3aba0a
  402f2c:	enter  0xbf7f,0x56
  402f30:	ja     0x402ede
  402f32:	sub    DWORD PTR [ecx],esi
  402f34:	cdq    
  402f35:	and    ch,cl
  402f37:	inc    ebx
  402f38:	lahf   
  402f39:	hlt    
  402f3a:	add    DWORD PTR [ebp-0x6547b5c5],ecx
  402f40:	sbb    dh,0x91
  402f43:	mov    dl,0x33
  402f45:	test   ebp,esi
  402f47:	test   ah,bl
  402f49:	add    DWORD PTR [ebp-0x31],0x7b
  402f4d:	cmp    eax,0xe52d72e6
  402f52:	das    
  402f53:	add    ch,BYTE PTR [ebx]
  402f55:	in     al,0x12
  402f57:	daa    
  402f58:	xchg   edi,eax
  402f59:	cmp    eax,0x13edf5a1
  402f5e:	into   
  402f5f:	(bad)  
  402f60:	cmp    DWORD PTR [ecx-0x58e1aceb],ebp
  402f66:	cmc    
  402f67:	mov    ?,WORD PTR [eax+0x11]
  402f6a:	stos   DWORD PTR es:[edi],eax
  402f6b:	cld    
  402f6c:	adc    al,0x5a
  402f6e:	out    0xf2,al
  402f70:	cdq    
  402f71:	in     eax,0x7b
  402f73:	mov    bl,0x96
  402f75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f76:	cwde   
  402f77:	data16 arpl ax,cx
  402f7a:	cmp    BYTE PTR [edi-0x76],ch
  402f7d:	(bad)  
  402f7f:	or     BYTE PTR [ecx+0x67],ch
  402f82:	push   cs
  402f83:	scas   eax,DWORD PTR es:[edi]
  402f84:	jns    0x402f73
  402f86:	cmc    
  402f87:	aas    
  402f88:	(bad)  
  402f89:	ds push ss
  402f8b:	sbb    bl,BYTE PTR [edi]
  402f8d:	in     eax,dx
  402f8e:	mov    esi,0xf326abfd
  402f93:	cmp    edi,DWORD PTR [ecx-0x42d072a8]
  402f99:	add    al,0x22
  402f9b:	add    BYTE PTR [edx],0x85
  402f9e:	dec    edi
  402f9f:	mov    DWORD PTR [ebp-0x72b9b517],ebp
  402fa5:	adc    BYTE PTR cs:[edx],bh
  402fa8:	inc    dl
  402faa:	je     0x402fa4
  402fac:	push   0xd31ca43c
  402fb1:	jg     0x402f49
  402fb3:	cdq    
  402fb4:	jne    0x402f46
  402fb6:	shl    bh,1
  402fb8:	je     0x403014
  402fba:	fnstcw WORD PTR [ecx-0x6]
  402fbd:	fisttp WORD PTR [ebx+0x1a]
  402fc0:	outs   dx,BYTE PTR ds:[esi]
  402fc1:	aam    0xa2
  402fc3:	in     eax,dx
  402fc4:	lahf   
  402fc5:	(bad)  
  402fc6:	and    al,BYTE PTR [edi+0x6f4a9f4f]
  402fcc:	retf   
  402fcd:	dec    ecx
  402fce:	lahf   
  402fcf:	push   ds
  402fd0:	push   ebp
  402fd1:	mov    al,ds:0xde6873ad
  402fd6:	pop    ebp
  402fd7:	xchg   DWORD PTR [esi],edi
  402fd9:	retf   0x1799
  402fdc:	inc    esp
  402fdd:	lahf   
  402fde:	(bad)  
  402fe0:	in     al,dx
  402fe1:	push   esi
  402fe2:	adc    BYTE PTR [edx-0x107a238c],dl
  402fe8:	jmp    FWORD PTR [eax]
  402fea:	int3   
  402feb:	add    dh,BYTE PTR [eax]
  402fed:	loope  0x403041
  402fef:	(bad)  
  402ff0:	pop    esp
  402ff1:	cmp    eax,0xd0b81281
  402ff6:	or     al,0x1f
  402ff8:	fimul  WORD PTR ds:0x452b4fb5
  402ffe:	add    BYTE PTR [ecx],bl
  403000:	out    dx,eax
  403001:	ins    BYTE PTR es:[edi],dx
  403002:	push   ebp
  403003:	pushf  
  403004:	ja     0x403062
  403006:	sti    
  403007:	scas   al,BYTE PTR es:[edi]
  403008:	in     eax,dx
  403009:	stos   DWORD PTR es:[edi],eax
  40300a:	cs adc eax,0x3de8505d
  403010:	mov    eax,0xa9248d8b
  403015:	add    DWORD PTR [ebp+0x34],eax
  403018:	xchg   edi,eax
  403019:	jb     0x403042
  40301b:	inc    esi
  40301c:	sahf   
  40301d:	mov    cl,0x14
  40301f:	mov    dl,0x9
  403021:	retf   
  403022:	scas   al,BYTE PTR es:[edi]
  403023:	fimul  WORD PTR [ecx]
  403025:	xor    esp,DWORD PTR [eax]
  403027:	add    eax,0x543d30c1
  40302c:	nop
  40302d:	mov    ah,BYTE PTR [esi+ecx*4]
  403030:	mov    eax,0x3519f9a3
  403035:	dec    edx
  403036:	enter  0xc844,0x94
  40303a:	mov    eax,ds:0xbf86140c
  40303f:	adc    ebp,esp
  403041:	std    
  403042:	stc    
  403043:	hlt    
  403044:	lock mov eax,0x44248ee4
  40304a:	cmp    edx,esi
  40304c:	dec    ebx
  40304d:	sbb    al,BYTE PTR [edi+edi*8-0x2deb9734]
  403054:	adc    ebx,edi
  403056:	aas    
  403057:	adc    al,0xfe
  403059:	push   0x3435a364
  40305e:	pop    ecx
  40305f:	test   BYTE PTR [ebx-0x46679e35],dl
  403065:	jne    0x4030c5
  403067:	dec    esp
  403068:	inc    edx
  403069:	xor    dl,dl
  40306b:	mov    DWORD PTR [esi+0x61],ecx
  40306e:	shl    DWORD PTR [edx+eax*4-0x34],1
  403072:	aam    0xf4
  403074:	lods   eax,DWORD PTR ds:[esi]
  403075:	add    esp,DWORD PTR [esi]
  403077:	idiv   DWORD PTR [ecx+0x22d17284]
  40307d:	aas    
  40307e:	push   ebx
  40307f:	les    eax,FWORD PTR [edx-0x76]
  403082:	mov    ebx,0xfd611f81
  403087:	adc    cl,0x1c
  40308a:	push   ebp
  40308b:	shl    DWORD PTR [eax+0x979278e],1
  403091:	call   0xc90:0xe8752f11
  403098:	sub    bl,BYTE PTR [esi+0x1ee91def]
  40309e:	or     DWORD PTR [ebp+0x37aa292b],0xffffffe5
  4030a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030a6:	mov    ebp,ds
  4030a8:	(bad)  
  4030a9:	in     eax,0x6f
  4030ab:	mov    dh,0xbc
  4030ad:	popa   
  4030ae:	jmp    0xa094:0x3faca109
  4030b5:	imul   esp,edx,0xffffff9d
  4030b8:	jp     0x403129
  4030ba:	out    0x73,eax
  4030bc:	je     0x4030b5
  4030be:	vporq  zmm6{k6}{z},zmm4,zmm6
  4030c4:	cmp    edx,DWORD PTR [edx+eax*1-0x5]
  4030c8:	or     BYTE PTR [eax+0x26],al
  4030cb:	retf   0x50e7
  4030ce:	outs   dx,DWORD PTR ds:[esi]
  4030cf:	adc    DWORD PTR [ebx+0x48d40c6e],0x9180a8be
  4030d9:	jmp    0x1afd:0x970821aa
  4030e0:	and    ebx,DWORD PTR [eax+edx*8+0x78e510d8]
  4030e7:	add    DWORD PTR [esi+0x5],ebp
  4030ea:	sbb    eax,0x40b762f8
  4030ef:	cdq    
  4030f0:	pop    ebp
  4030f1:	jp     0x403140
  4030f3:	mov    ebx,0x607ece83
  4030f8:	int    0x33
  4030fa:	cld    
  4030fb:	ja     0x4030d4
  4030fd:	dec    ecx
  4030fe:	cmp    al,0x74
  403100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403101:	sbb    eax,0xa1b59b0b
  403106:	jmp    0x7484:0x6da88a5
  40310d:	pop    ebx
  40310e:	pop    es
  40310f:	jmp    0xe525:0xa828a7c1
  403116:	repz mov edi,0x1148b676
  40311c:	sub    bl,dl
  40311e:	pop    eax
  40311f:	xchg   esp,eax
  403120:	mov    cl,ah
  403122:	sub    bh,cl
  403124:	icebp  
  403125:	or     edi,edx
  403127:	inc    eax
  403128:	inc    ecx
  403129:	into   
  40312a:	xchg   ecx,eax
  40312b:	dec    edx
  40312c:	outs   dx,BYTE PTR ds:[esi]
  40312d:	or     dl,dl
  40312f:	and    ch,BYTE PTR [eax+0x3d]
  403132:	jne    0x403115
  403134:	mov    ds:0x1915a58a,al
  403139:	sti    
  40313a:	push   ss
  40313b:	into   
  40313c:	and    BYTE PTR [ebp-0xee4eeaa],ah
  403142:	push   edx
  403143:	(bad)  
  403144:	in     al,dx
  403145:	inc    eax
  403146:	mov    cl,0xe1
  403148:	xchg   edx,eax
  403149:	mov    eax,ds:0x755f2c77
  40314e:	aas    
  40314f:	clc    
  403150:	pop    esp
  403151:	loop   0x403110
  403153:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403155:	jl     0x4031a8
  403157:	loope  0x40312d
  403159:	imul   edx,DWORD PTR [edx-0x7fe8f561],0x94748ac4
  403163:	fdivr  QWORD PTR [esi]
  403165:	and    eax,0xbf9504d4
  40316a:	dec    ebp
  40316b:	cmc    
  40316c:	imul   DWORD PTR [esi-0x54479c48]
  403172:	std    
  403173:	cmc    
  403174:	imul   esi,DWORD PTR [ecx-0x51],0x4
  403178:	push   ebp
  403179:	inc    esi
  40317a:	fucomp st(3)
  40317c:	gs push ebp
  40317e:	in     al,dx
  40317f:	pop    esp
  403180:	add    DWORD PTR [ebp-0x3155e389],ebp
  403186:	mov    dh,0xbd
  403188:	mov    WORD PTR [ebx+ecx*1-0x54],cs
  40318c:	stos   DWORD PTR es:[edi],eax
  40318d:	mov    edx,DWORD PTR [ecx-0x12f0c7b8]
  403193:	mov    edx,0xaad4572d
  403198:	fdivp  st(6),st
  40319a:	jne    0x403145
  40319c:	sahf   
  40319d:	and    al,0x8
  40319f:	add    bh,BYTE PTR [ecx+0x26104497]
  4031a5:	adc    al,0x1f
  4031a7:	rol    ebx,0x50
  4031aa:	fcomp  QWORD PTR cs:[edi+0x35]
  4031ae:	cmp    edi,DWORD PTR [edi-0x460aa586]
  4031b4:	imul   edx,ebp,0xa23da758
  4031ba:	imul   edi,DWORD PTR [edi-0x43],0x7cbf51f5
  4031c1:	inc    ebp
  4031c2:	pop    es
  4031c3:	cli    
  4031c4:	icebp  
  4031c5:	call   0x7845:0x92d745b7
  4031cc:	dec    edx
  4031cd:	dec    edi
  4031ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031cf:	out    dx,al
  4031d0:	pop    ebp
  4031d1:	cli    
  4031d2:	jl     0x403167
  4031d4:	adc    DWORD PTR [edx],ebx
  4031d6:	clc    
  4031d7:	fldenv [eax-0x691a0bad]
  4031dd:	stos   DWORD PTR es:[edi],eax
  4031de:	test   al,0x16
  4031e0:	xchg   edi,eax
  4031e1:	jnp    0x4031ec
  4031e3:	mov    ?,WORD PTR [esi-0x3efa1e9d]
  4031e9:	pop    esi
  4031ea:	repnz (bad) 
  4031ec:	outs   dx,DWORD PTR ds:[esi]
  4031ed:	jl     0x403212
  4031ef:	fs loopne 0x4031db
  4031f2:	sub    edx,DWORD PTR ds:0xac3e6d84
  4031f8:	(bad)  
  4031f9:	mov    edi,0xed89e3c7
  4031fe:	out    dx,eax
  4031ff:	push   eax
  403200:	dec    edx
  403201:	mov    BYTE PTR [edx],ch
  403203:	sbb    DWORD PTR [esi-0x19],ebp
  403206:	out    0x8c,al
  403208:	enter  0x6e04,0x42
  40320c:	push   edx
  40320d:	repz stc 
  40320f:	adc    ah,ah
  403211:	les    ecx,FWORD PTR [edx+0x1183082b]
  403217:	pop    ss
  403218:	loopne 0x4031c2
  40321a:	push   ds
  40321b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40321c:	mov    bh,0x7c
  40321e:	dec    ecx
  40321f:	push   ss
  403220:	popf   
  403221:	outs   dx,BYTE PTR cs:[esi]
  403223:	mov    eax,0x1a42c353
  403228:	inc    edi
  403229:	dec    BYTE PTR [ebp+0x56c05c9e]
  40322f:	adc    BYTE PTR [eax-0x7b08da8b],0xcd
  403236:	pop    esp
  403237:	mov    esi,0x194f5df5
  40323c:	adc    cl,cl
  40323e:	pop    ebp
  40323f:	dec    BYTE PTR [ebx+0x6670a49b]
  403245:	mov    al,ds:0xd6c4b3cf
  40324a:	not    BYTE PTR [eax+0x5f]
  40324d:	in     al,0x84
  40324f:	bound  ebx,QWORD PTR [ecx-0x3bd26a7a]
  403255:	pusha  
  403256:	fs pop esp
  403258:	dec    esp
  403259:	retf   
  40325a:	scas   al,BYTE PTR es:[edi]
  40325b:	pop    ss
  40325c:	mov    edi,edx
  40325e:	inc    esi
  40325f:	arpl   WORD PTR [edx],bp
  403261:	push   es
  403262:	ss int3 
  403264:	(bad)  
  403265:	fisub  WORD PTR [esi+0x35]
  403268:	cwde   
  403269:	sub    edi,DWORD PTR [edx+eiz*4]
  40326c:	pop    ebp
  40326d:	pushf  
  40326e:	mov    al,0x45
  403271:	in     eax,dx
  403272:	adc    ah,cl
  403274:	jge    0x40322f
  403276:	xchg   ebx,esp
  403278:	jnp    0x40327b
  40327a:	mov    esp,0xa8281c2e
  40327f:	sbb    dh,BYTE PTR [ecx+0x38376c27]
  403285:	scas   al,BYTE PTR es:[edi]
  403286:	std    
  403287:	and    dh,BYTE PTR [eax]
  403289:	(bad)  
  40328b:	cwde   
  40328c:	mov    ds:0x1534c305,eax
  403291:	retf   0x115c
  403294:	cli    
  403295:	and    esp,ecx
  403297:	imul   edx,DWORD PTR [ebx-0x2b603677],0x76
  40329e:	enter  0x2463,0x8
  4032a2:	sub    eax,0x7b9f05c7
  4032a7:	mov    esi,0xbef68401
  4032ac:	std    
  4032ad:	sbb    al,0x7a
  4032af:	xchg   esi,eax
  4032b0:	frstor [edi]
  4032b2:	and    ah,BYTE PTR [eax+0x27]
  4032b5:	and    al,BYTE PTR [esi+0x55ae8dbb]
  4032bb:	jg     0x40332d
  4032bd:	add    BYTE PTR [edx],dl
  4032bf:	in     al,dx
  4032c0:	adc    DWORD PTR [edx+esi*1-0x7],0xffffffd8
  4032c5:	addr16 sub eax,0xd679acb6
  4032cb:	jmp    0xad9a44c
  4032d0:	pop    edi
  4032d1:	mov    edi,0x2c21abc7
  4032d6:	add    esi,esp
  4032d8:	mov    bh,0x7c
  4032da:	test   al,0xad
  4032dc:	mov    al,0xdf
  4032de:	xchg   ecx,eax
  4032df:	mov    ch,0xc3
  4032e1:	aam    0x44
  4032e3:	xor    cl,BYTE PTR [esi-0x73]
  4032e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4032e7:	adc    ecx,esp
  4032e9:	xchg   edx,eax
  4032ea:	mov    DWORD PTR [esi+ecx*4],ebx
  4032ed:	retf   0x459e
  4032f0:	retf   0x106e
  4032f3:	enter  0x3bfe,0x47
  4032f7:	pop    ss
  4032f8:	and    ebp,esi
  4032fa:	mov    ?,WORD PTR [ecx+0x31d9f660]
  403300:	lods   al,BYTE PTR ds:[esi]
  403301:	mov    esi,0x1cfab957
  403306:	mov    bl,0x9
  403308:	ins    DWORD PTR es:[edi],dx
  403309:	ins    BYTE PTR es:[edi],dx
  40330a:	aaa    
  40330b:	int    0x81
  40330d:	and    dh,bl
  40330f:	mov    ecx,0x84127c94
  403314:	or     DWORD PTR [esi],esp
  403316:	(bad)  
  403317:	jno    0x403378
  403319:	ret    
  40331a:	sbb    esp,ebp
  40331c:	xchg   ecx,eax
  40331d:	gs inc edx
  40331f:	mov    ecx,0x370c7bd9
  403324:	cmp    DWORD PTR [ebp+0x21d4559d],esp
  40332a:	and    ecx,edx
  40332c:	add    al,0xc0
  40332e:	dec    ecx
  40332f:	xchg   dl,al
  403331:	out    dx,al
  403332:	ja     0x403331
  403334:	pop    eax
  403335:	repnz push es
  403337:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403338:	fwait
  403339:	sub    edi,DWORD PTR [edx-0x2ebea761]
  40333f:	cmp    edx,DWORD PTR [esi+edi*1-0x68]
  403343:	adc    dl,BYTE PTR [ebx-0xbe3f3ba]
  403349:	cmp    edx,DWORD PTR [esi]
  40334b:	adc    DWORD PTR [ebx-0x2b],0xb888a03c
  403352:	shl    BYTE PTR [edx+esi*4-0x67],cl
  403356:	loopne 0x40330f
  403358:	test   al,0x20
  40335a:	ds adc al,ah
  40335d:	dec    esi
  40335e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40335f:	ins    BYTE PTR es:[edi],dx
  403360:	ud1    edi,DWORD PTR [ebp+edi*4-0x73]
  403365:	out    0x9e,al
  403367:	in     al,dx
  403368:	gs adc al,0xe2
  40336b:	and    DWORD PTR [ecx+0x55],esi
  40336e:	xor    BYTE PTR [edi+esi*1-0x1482dcaa],cl
  403375:	pusha  
  403376:	add    DWORD PTR [esi+ecx*8+0x52feff27],0x34
  40337e:	add    BYTE PTR [eax-0x6],0x7b
  403382:	or     cl,bh
  403384:	pusha  
  403385:	fmul   DWORD PTR [ecx-0x3a3ab218]
  40338b:	adc    BYTE PTR [eax+0x7e5ed827],cl
  403391:	retf   
  403392:	lds    esi,FWORD PTR [edx+0x347f62f7]
  403398:	call   DWORD PTR [ebp-0x5d]
  40339b:	add    al,0xd7
  40339d:	and    ecx,DWORD PTR [ebx]
  40339f:	xchg   esi,eax
  4033a0:	push   cs
  4033a1:	sbb    DWORD PTR [esi+0x7b],0xffffff94
  4033a5:	mov    ch,0xd4
  4033a7:	inc    esi
  4033a8:	sub    al,0xfd
  4033aa:	leave  
  4033ab:	arpl   si,bp
  4033ad:	test   BYTE PTR [eax+0x58f92e45],ch
  4033b3:	loop   0x4033c4
  4033b5:	jmp    0xca0fbde8
  4033ba:	lahf   
  4033bb:	sub    BYTE PTR [edi],bl
  4033bd:	inc    eax
  4033be:	dec    esp
  4033bf:	xlat   BYTE PTR ds:[ebx]
  4033c0:	jne    0x40341b
  4033c2:	xchg   ecx,eax
  4033c3:	xor    bl,bh
  4033c5:	lea    ebp,[ecx-0x7077bb05]
  4033cb:	xlat   BYTE PTR ds:[ebx]
  4033cc:	cmp    DWORD PTR [ebx-0x56dc16ec],ebp
  4033d2:	adc    edx,0xffffffdd
  4033d5:	mov    cl,0xbf
  4033d7:	mov    WORD PTR [ebp-0x60ca0dfd],cs
  4033dd:	scas   eax,DWORD PTR es:[edi]
  4033de:	adc    DWORD PTR [ebx],esi
  4033e0:	inc    ecx
  4033e1:	mov    WORD PTR [ebx-0x48],?
  4033e4:	jo     0x403450
  4033e6:	popa   
  4033e7:	jmp    0x9c4405d1
  4033ec:	dec    edi
  4033ed:	push   ebp
  4033ee:	jne    0x403431
  4033f0:	add    eax,0xe65164ca
  4033f5:	push   ss
  4033f6:	dec    edx
  4033f7:	add    eax,DWORD PTR [eax]
  4033f9:	cwde   
  4033fa:	jl     0x40339e
  4033fc:	ss jg  0x40346a
  4033ff:	pop    esi
  403400:	or     DWORD PTR [edx+edx*2+0x1e],0xffffffaf
  403405:	xchg   esi,eax
  403406:	adc    edx,DWORD PTR ds:0xb0ec0059
  40340c:	jecxz  0x4033cf
  40340e:	rcr    DWORD PTR [edx+ebp*4+0x41],cl
  403412:	(bad)  
  403413:	div    BYTE PTR [edx-0x5a490de7]
  403419:	xchg   ebx,eax
  40341a:	fist   DWORD PTR [eax+0x2840a5d6]
  403420:	imul   eax,ebx,0xffffff8e
  403423:	pop    edx
  403424:	(bad)  
  403425:	fcom   DWORD PTR [ecx-0x22]
  403428:	out    0xe2,al
  40342a:	(bad)  
  40342b:	(bad)  
  40342c:	lahf   
  40342d:	push   edi
  40342e:	xor    ebx,edx
  403430:	pop    ds
  403431:	add    BYTE PTR [edx],ah
  403433:	or     dh,ch
  403435:	jg     0x403470
  403437:	das    
  403438:	js     0x403413
  40343a:	mov    ebx,0x6bc37660
  40343f:	js     0x40344d
  403441:	pcmpeqd mm5,QWORD PTR [eax-0x2e]
  403445:	ds cdq 
  403447:	xchg   edx,eax
  403448:	pop    esi
  403449:	(bad)  
  40344b:	test   DWORD PTR [esi+ecx*2+0x71],eax
  40344f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403450:	xor    al,0xf6
  403452:	xor    eax,DWORD PTR [ebx-0x58]
  403455:	repz icebp 
  403457:	cmp    al,0x78
  403459:	nop
  40345a:	repnz inc edx
  40345c:	bnd ret 
  40345e:	mov    esi,0x717ad58b
  403463:	push   esp
  403464:	bound  edi,QWORD PTR [ebx+0x5f45a459]
  40346a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40346b:	int3   
  40346c:	mov    al,BYTE PTR [ebp+0x7bfe0165]
  403472:	ds xchg ebx,eax
  403474:	fistp  WORD PTR ds:0x63062f00
  40347a:	sub    al,0x2b
  40347c:	cmp    BYTE PTR [ebp+esi*2+0x5f],ch
  403480:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403481:	mov    dl,0xa8
  403483:	push   ecx
  403484:	in     al,dx
  403485:	loop   0x4034a4
  403487:	push   ebp
  403488:	xchg   ecx,eax
  403489:	or     edi,DWORD PTR [ebx]
  40348b:	arpl   WORD PTR [edi+eax*8+0x2d5cf118],cx
  403492:	ins    DWORD PTR es:[edi],dx
  403493:	in     eax,0x2
  403495:	jno    0x403515
  403497:	push   ds
  403498:	xor    ebx,DWORD PTR [edx]
  40349a:	rcr    DWORD PTR [ebp+0x62],0x32
  40349e:	or     bh,ah
  4034a0:	pop    es
  4034a1:	(bad)  
  4034a2:	adc    BYTE PTR [edx],ah
  4034a4:	(bad)  
  4034a5:	cmc    
  4034a6:	cmp    al,0xc9
  4034a8:	mov    ebp,0x9b32fa63
  4034ad:	sub    eax,ebx
  4034af:	xor    eax,0x3969900b
  4034b4:	pop    ebx
  4034b5:	retf   
  4034b6:	pop    edi
  4034b7:	jle    0x4034de
  4034b9:	push   ss
  4034ba:	iret   
  4034bb:	or     bl,BYTE PTR [ebx-0x516a60e1]
  4034c1:	sbb    DWORD PTR ds:0x7c51d245,ebp
  4034c7:	cmp    DWORD PTR [edi-0x4bf76293],eax
  4034cd:	clc    
  4034ce:	icebp  
  4034cf:	ss cmp eax,0x17e6b181
  4034d5:	pop    ss
  4034d6:	xchg   DWORD PTR [ebx+0x1c6c4370],ecx
  4034dc:	pushf  
  4034dd:	(bad)  
  4034df:	xor    eax,0x7b7020c
  4034e4:	push   0x75
  4034e6:	add    BYTE PTR [ebx],ah
  4034e8:	arpl   WORD PTR [ebp-0x68fb588f],dx
  4034ee:	imul   bh
  4034f0:	inc    esi
  4034f1:	inc    edi
  4034f2:	cmp    BYTE PTR [edi],dl
  4034f4:	xchg   ecx,eax
  4034f5:	stos   DWORD PTR es:[edi],eax
  4034f6:	xor    DWORD PTR [ebx+0x4678bb23],eax
  4034fc:	test   BYTE PTR [ebx+edi*1],ah
  4034ff:	cli    
  403500:	sbb    DWORD PTR [edi],ebx
  403502:	jmp    0x403526
  403504:	pop    esp
  403505:	sub    BYTE PTR [ecx],al
  403507:	scas   al,BYTE PTR es:[edi]
  403508:	xor    eax,0x64c1f302
  40350d:	push   ecx
  40350e:	add    DWORD PTR [ebx],0xd1340ae0
  403514:	sbb    dh,0x33
  403517:	adc    al,0xf8
  403519:	adc    eax,0x738aee99
  40351e:	mov    eax,0xb414a387
  403523:	xchg   BYTE PTR ds:0x196d140b,cl
  403529:	pop    esp
  40352a:	adc    BYTE PTR [ebp+0xc469d9e],0x12
  403531:	in     al,dx
  403532:	cld    
  403533:	jno    0x403560
  403535:	es cmp al,0x47
  403538:	shl    DWORD PTR [edi+0x6],cl
  40353b:	inc    edi
  40353c:	add    al,0x9f
  40353e:	xlat   BYTE PTR ds:[ebx]
  40353f:	dec    ecx
  403540:	in     eax,0xce
  403542:	xchg   BYTE PTR [ebx-0x3c89f9e0],ch
  403548:	push   ebp
  403549:	in     eax,0x1b
  40354b:	cwde   
  40354c:	mov    dh,0xac
  40354e:	into   
  40354f:	retf   0x79c4
  403552:	mov    cs,WORD PTR [edi]
  403554:	xor    eax,0xe6b5482e
  403559:	sub    cl,BYTE PTR [ebx-0x5c]
  40355c:	sub    eax,0xb1c2aefe
  403561:	jg     0x403545
  403563:	lahf   
  403564:	adc    eax,0xc713eaf4
  403569:	xor    edx,DWORD PTR ds:0x5a0578d6
  40356f:	or     DWORD PTR [eax+ecx*1],edi
  403572:	test   eax,0x46bd20e6
  403577:	iret   
  403578:	(bad)  
  40357a:	leave  
  40357b:	popf   
  40357c:	sub    bh,BYTE PTR [eax-0x5c]
  40357f:	clc    
  403580:	add    edi,ecx
  403582:	sub    DWORD PTR [ecx+0x56],0xffffffe4
  403586:	inc    eax
  403587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403588:	adc    edx,ebp
  40358a:	mov    ?,WORD PTR [ecx+0x100f4337]
  403590:	pop    edx
  403591:	in     eax,0xe0
  403593:	dec    ebx
  403594:	sub    DWORD PTR [edi],0x33f56dbd
  40359a:	lock add ecx,ebx
  40359d:	iret   
  40359e:	cmp    al,0x36
  4035a0:	xchg   DWORD PTR [edx+0x77],ecx
  4035a3:	retf   
  4035a4:	inc    ecx
  4035a5:	mov    dh,0x44
  4035a7:	inc    esi
  4035a8:	stc    
  4035a9:	fwait
  4035aa:	clc    
  4035ab:	mov    ah,0xfe
  4035ad:	leave  
  4035ae:	loope  0x403556
  4035b0:	cwde   
  4035b1:	mov    edi,0x2ffcb1f
  4035b6:	lahf   
  4035b7:	shl    DWORD PTR [edi-0x48],0xa2
  4035bb:	pop    eax
  4035bc:	(bad)  
  4035bd:	cli    
  4035be:	mov    bl,0xf2
  4035c0:	pop    ecx
  4035c1:	adc    ah,bl
  4035c3:	pop    ds
  4035c4:	fwait
  4035c5:	and    eax,DWORD PTR [edi]
  4035c7:	and    edx,DWORD PTR [eax-0x21141aba]
  4035cd:	les    eax,FWORD PTR [ebx+0x2]
  4035d0:	xor    al,0xb8
  4035d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035d3:	push   ebx
  4035d4:	int3   
  4035d5:	rcr    DWORD PTR [esi+0x7f],1
  4035d8:	cli    
  4035d9:	fs in  eax,0xf9
  4035dc:	das    
  4035dd:	sub    esp,DWORD PTR [ebx+0x65]
  4035e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035e1:	xlat   BYTE PTR ds:[ebx]
  4035e2:	lahf   
  4035e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035e4:	out    0x92,al
  4035e6:	js     0x403595
  4035e8:	sti    
  4035e9:	push   ss
  4035ea:	jle    0x40360d
  4035ec:	mov    al,ds:0x869329c3
  4035f1:	cmp    eax,0xe41e9db9
  4035f6:	inc    esi
  4035f7:	rcr    ebx,1
  4035f9:	lods   eax,DWORD PTR ds:[esi]
  4035fa:	and    ebx,DWORD PTR [edx-0x16686d41]
  403600:	ins    BYTE PTR es:[edi],dx
  403601:	in     eax,dx
  403602:	fwait
  403603:	xchg   ebp,eax
  403604:	div    DWORD PTR [ebx-0x571c6ec4]
  40360a:	scas   eax,DWORD PTR es:[edi]
  40360b:	imul   edx,DWORD PTR [ecx],0x9ddd854b
  403611:	loop   0x40359d
  403613:	fnstenv [esi]
  403615:	ret    0xa531
  403618:	fucomip st,st(0)
  40361a:	jmp    0x409e3034
  40361f:	outs   dx,DWORD PTR cs:[esi]
  403621:	inc    edi
  403622:	jmp    0xbbaf43fa
  403627:	inc    edi
  403628:	pop    ss
  403629:	loope  0x403692
  40362b:	(bad)  
  40362c:	adc    edi,DWORD PTR [ebx]
  40362e:	fiadd  DWORD PTR [ebx+ebx*1]
  403631:	push   0xffffffde
  403633:	mov    ds:0x8e45d74a,al
  403638:	ja     0x403688
  40363a:	jmp    0x403651
  40363c:	popa   
  40363d:	pop    esi
  40363e:	and    edi,eax
  403640:	xchg   ebp,eax
  403641:	bound  ecx,QWORD PTR [ebp-0x5002872d]
  403647:	add    edx,DWORD PTR [ecx-0x689dff06]
  40364d:	loop   0x40366b
  40364f:	repnz nop
  403651:	(bad)  [esp+eiz*2]
  403654:	lahf   
  403655:	pop    ebx
  403656:	and    esi,ebp
  403658:	mov    dh,0xa1
  40365a:	xor    esi,DWORD PTR [ebx+esi*8-0x79]
  40365e:	inc    ebx
  40365f:	dec    ebx
  403660:	out    0x33,eax
  403662:	(bad)  
  403663:	es xchg esi,eax
  403665:	xchg   BYTE PTR [eax],dh
  403667:	push   esp
  403668:	out    dx,al
  403669:	pop    ecx
  40366a:	mov    edi,0xb7956dd
  40366f:	sub    eax,0x7ada0f88
  403674:	or     al,BYTE PTR [ebx]
  403676:	or     BYTE PTR [eax-0x5817ca38],ch
  40367c:	retf   0x37d9
  40367f:	xor    esi,edx
  403681:	and    BYTE PTR [eax],ah
  403683:	cs mov ch,0xb
  403686:	jno    0x4036f9
  403688:	xor    eax,0x238677b3
  40368d:	loope  0x403622
  40368f:	aas    
  403690:	(bad)  
  403692:	ret    
  403693:	sbb    cl,BYTE PTR [ecx]
  403695:	sbb    bl,BYTE PTR [ebp-0x67]
  403698:	aaa    
  403699:	pop    eax
  40369a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40369b:	je     0x4036f5
  40369d:	loop   0x403699
  40369f:	pop    es
  4036a0:	retf   
  4036a1:	dec    ebx
  4036a2:	repnz (bad) 
  4036a4:	fist   WORD PTR [edx-0x12]
  4036a7:	outs   dx,DWORD PTR ds:[esi]
  4036a8:	sbb    ecx,esi
  4036aa:	cmp    ah,BYTE PTR [ecx-0x50b3d564]
  4036b0:	out    0xf0,al
  4036b2:	fsub   DWORD PTR [esi]
  4036b4:	js     0x403684
  4036b6:	enter  0x68d5,0xb1
  4036ba:	add    al,0x67
  4036bc:	outs   dx,BYTE PTR ds:[esi]
  4036bd:	xor    ax,0xedba
  4036c1:	mov    ebx,0x664fb2c8
  4036c6:	sar    BYTE PTR [edx-0x1f30b070],cl
  4036cc:	aas    
  4036cd:	add    DWORD PTR [edi],edi
  4036cf:	loope  0x4036c9
  4036d1:	xor    DWORD PTR ss:[ecx+0xc8495cf],edi
  4036d8:	sub    DWORD PTR [eax+0xb],0x6065a4a3
  4036df:	cs mov edx,0xf1ef2a91
  4036e5:	jo     0x403679
  4036e7:	lods   eax,DWORD PTR ds:[esi]
  4036e8:	adc    dl,BYTE PTR [eax-0x77]
  4036eb:	shr    BYTE PTR [ecx+0x123b87b5],cl
  4036f1:	push   0xe
  4036f3:	in     al,0xde
  4036f5:	dec    esp
  4036f6:	dec    esi
  4036f7:	pop    ebx
  4036f8:	dec    ecx
  4036f9:	aad    0xf1
  4036fb:	lfs    ebp,FWORD PTR [esi+edi*1]
  4036ff:	rol    DWORD PTR ds:0x9564038f,0x9f
  403706:	rcr    BYTE PTR [edi+eax*4+0x4f],1
  40370a:	xlat   BYTE PTR ds:[ebx]
  40370b:	stos   BYTE PTR es:[edi],al
  40370c:	jl     0x40370f
  40370e:	int    0x5d
  403710:	mov    dh,0x8c
  403712:	addr16 mov edx,0x76d4e87
  403718:	mov    esi,0x71aa2457
  40371d:	adc    ebp,DWORD PTR [ecx]
  40371f:	jo     0x4036a8
  403721:	sar    BYTE PTR [eax],cl
  403723:	inc    ecx
  403724:	dec    esp
  403725:	push   ebp
  403726:	mov    ds:0x74d1eaf8,eax
  40372b:	test   BYTE PTR [edi-0x36c5aee5],ah
  403731:	pushf  
  403732:	or     BYTE PTR [ebx+0xca4a007],al
  403738:	mov    ah,0x7b
  40373a:	in     al,0x33
  40373c:	or     ah,BYTE PTR [edx+0x52]
  40373f:	add    bh,BYTE PTR [ebx-0x77]
  403742:	add    al,0x8f
  403744:	xchg   bh,ah
  403746:	mov    dh,BYTE PTR [eax]
  403748:	mov    ds:0x325201dc,al
  40374d:	mov    dh,0x7f
  40374f:	or     BYTE PTR gs:0x3b0948cd,ah
  403756:	push   esp
  403757:	cmp    BYTE PTR [edi],al
  403759:	je     0x40372c
  40375b:	xor    al,0xa9
  40375d:	pop    edx
  40375e:	inc    esi
  40375f:	aam    0x77
  403761:	xchg   dl,bl
  403763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403764:	and    al,0xfd
  403766:	adc    dh,dl
  403768:	clc    
  403769:	lods   eax,DWORD PTR ds:[esi]
  40376a:	push   ebx
  40376b:	aad    0x1a
  40376d:	cwde   
  40376e:	and    al,0xdb
  403770:	adc    edx,eax
  403772:	lds    edx,FWORD PTR [esi+edx*2+0x24]
  403776:	outs   dx,DWORD PTR ds:[esi]
  403777:	ror    DWORD PTR [edi],cl
  403779:	inc    esp
  40377a:	retf   
  40377b:	lahf   
  40377c:	mov    ebp,0xf9810fe7
  403781:	sbb    BYTE PTR [ecx],bh
  403783:	mov    cl,0x45
  403785:	inc    ebp
  403786:	pop    ecx
  403787:	out    dx,al
  403788:	and    BYTE PTR [edx],bh
  40378a:	test   al,0x79
  40378c:	or     eax,0xde380a69
  403791:	add    eax,0x44910bb7
  403796:	push   ss
  403797:	into   
  403798:	xchg   ecx,eax
  403799:	cwde   
  40379a:	add    esp,DWORD PTR [edi-0x54ff583f]
  4037a0:	or     al,0x76
  4037a2:	ds pop ebp
  4037a4:	out    0xb7,eax
  4037a6:	mov    dl,0x42
  4037a8:	cmp    al,0x7d
  4037aa:	cmc    
  4037ab:	sbb    edi,edx
  4037ad:	sti    
  4037ae:	enter  0xd12,0xfc
  4037b2:	arpl   WORD PTR [ebx],sp
  4037b4:	out    dx,eax
  4037b5:	push   esi
  4037b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037b7:	adc    dh,BYTE PTR [edx]
  4037b9:	cwde   
  4037ba:	imul   esp,DWORD PTR [eax+0x4ef601],0xf4fba50e
  4037c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037c5:	xchg   ebx,eax
  4037c6:	fdivrp st(2),st
  4037c8:	enter  0x30c3,0xf2
  4037cc:	popf   
  4037cd:	mov    edi,0x1e9cfc06
  4037d2:	and    ebx,DWORD PTR ds:0xd3ed550
  4037d8:	pop    esi
  4037d9:	add    cl,bl
  4037db:	xor    BYTE PTR [edx+eax*4],bl
  4037de:	fmulp  st(2),st
  4037e0:	js     0x40383c
  4037e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037e3:	jecxz  0x4037a0
  4037e5:	lods   eax,DWORD PTR ds:[esi]
  4037e6:	mov    al,ch
  4037e8:	hlt    
  4037e9:	std    
  4037ea:	outs   dx,BYTE PTR ds:[esi]
  4037eb:	sahf   
  4037ec:	adc    DWORD PTR [eax+0x47],ebp
  4037ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037f0:	test   al,0x41
  4037f2:	inc    edx
  4037f3:	in     al,0xdb
  4037f5:	inc    ebx
  4037f6:	sahf   
  4037f7:	int3   
  4037f8:	jns    0x4037a9
  4037fa:	jno    0x4037b2
  4037fc:	mov    esp,0xc81114d2
  403801:	(bad)  
  403802:	(bad)  
  403803:	js     0x40380d
  403805:	jb     0x403834
  403807:	in     eax,0x37
  403809:	xor    al,0x2c
  40380b:	icebp  
  40380c:	imul   esi,DWORD PTR [esi],0xffffffdf
  40380f:	mov    ecx,0x64e9fadc
  403814:	jne    0x403871
  403816:	sub    dl,BYTE PTR [ebx]
  403818:	popa   
  403819:	push   eax
  40381a:	jmp    0xf376349e
  40381f:	bnd jle 0x403814
  403822:	sub    ebp,DWORD PTR [esi+0x1]
  403825:	jmp    0xb840b237
  40382a:	arpl   WORD PTR [ebp+ebx*1-0x51],di
  40382e:	and    bl,bl
  403830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403831:	sub    bl,BYTE PTR [eax+0x13]
  403834:	add    ebp,DWORD PTR [edx-0x70ed5efb]
  40383a:	xor    DWORD PTR [esi+0x54e4827d],eax
  403840:	mov    ch,0x13
  403842:	mov    BYTE PTR [ecx+0x49],0x56
  403846:	nop
  403847:	sti    
  403848:	imul   eax,DWORD PTR [edi+0x78],0x61ddb08a
  40384f:	shr    ebx,0x7e
  403852:	adc    bh,BYTE PTR [edi+ecx*8]
  403855:	adc    ch,dh
  403857:	jp     0x403818
  403859:	pop    es
  40385a:	mov    ah,0xc3
  40385c:	fcomp  st(2)
  40385e:	jmp    0x6354aafb
  403863:	ror    BYTE PTR [edi-0x10c18c9e],cl
  403869:	fnstcw WORD PTR [edx-0x2f1807d2]
  40386f:	and    esi,DWORD PTR cs:[edi+0x1]
  403873:	xchg   ebx,eax
  403874:	jmp    0x4e2:0xaeb47a06
  40387b:	dec    ecx
  40387c:	adc    ch,BYTE PTR [ecx]
  40387e:	push   edi
  40387f:	adc    eax,0x96c53bd1
  403884:	sub    dh,BYTE PTR [esi+0x67]
  403887:	push   eax
  403888:	fwait
  403889:	aam    0xf2
  40388b:	cmp    ebp,esp
  40388d:	mov    WORD PTR [ebx-0x4cc86e60],es
  403893:	xor    edx,esi
  403895:	in     eax,dx
  403896:	pop    edx
  403897:	xchg   ecx,eax
  403898:	aaa    
  403899:	inc    esi
  40389a:	adc    DWORD PTR [eax-0x5a7a2ade],edx
  4038a0:	mov    bh,0x61
  4038a2:	mov    ecx,0x39012b19
  4038a7:	cmp    ch,dh
  4038a9:	jae    0x403910
  4038ab:	sub    esp,ebp
  4038ad:	push   es
  4038ae:	fwait
  4038af:	xchg   ebx,eax
  4038b0:	push   ebx
  4038b1:	cmp    BYTE PTR [edi+0x2],ch
  4038b4:	or     ebx,esi
  4038b6:	push   edi
  4038b7:	mov    dh,0xd3
  4038b9:	jnp    0x4038ed
  4038bb:	push   ecx
  4038bc:	xor    al,0x94
  4038be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038bf:	mov    WORD PTR [ebp+0x27],?
  4038c2:	inc    edi
  4038c3:	outs   dx,DWORD PTR ds:[esi]
  4038c4:	stos   BYTE PTR es:[edi],al
  4038c5:	xor    al,0xc0
  4038c7:	xor    dh,dl
  4038c9:	lods   eax,DWORD PTR ds:[esi]
  4038ca:	icebp  
  4038cb:	sbb    eax,DWORD PTR [esi+ebp*8-0x62]
  4038cf:	leave  
  4038d0:	aaa    
  4038d1:	push   0xffffff9e
  4038d3:	ds push cs
  4038d5:	iret   
  4038d6:	test   eax,0xcfa921e4
  4038db:	dec    ecx
  4038dc:	inc    edx
  4038dd:	jle    0x4038a9
  4038df:	xor    BYTE PTR [eax+esi*4+0x3e556bf1],cl
  4038e6:	xchg   ebx,eax
  4038e7:	adc    DWORD PTR [edi-0x76827041],esp
  4038ed:	out    0x98,al
  4038ef:	aaa    
  4038f0:	(bad)  
  4038f1:	pop    ecx
  4038f2:	leave  
  4038f3:	jecxz  0x403958
  4038f5:	cmp    al,0x4c
  4038f7:	aaa    
  4038f8:	dec    esi
  4038f9:	in     al,dx
  4038fa:	loopne 0x40387f
  4038fc:	inc    esi
  4038fd:	jnp    0x403976
  4038ff:	and    DWORD PTR [ebx-0x32e35183],edx
  403905:	mov    cl,0xda
  403907:	pop    edi
  403908:	into   
  403909:	data16 mov ?,WORD PTR [ebp-0x48f981a]
  403910:	inc    ecx
  403911:	repz push edx
  403913:	clc    
  403914:	lock jbe 0x403931
  403917:	mov    bh,0x99
  403919:	sub    eax,0xf8e16969
  40391e:	push   cs
  40391f:	dec    edi
  403920:	shr    BYTE PTR [eax],cl
  403922:	push   ebx
  403923:	out    0x4d,eax
  403925:	dec    edi
  403926:	ss sbb eax,0x5e80e127
  40392c:	push   ecx
  40392d:	add    dl,BYTE PTR [ebx+0x44]
  403930:	ss test al,0xb3
  403933:	mov    cl,0x3a
  403935:	ss jo  0x403995
  403938:	sar    DWORD PTR [edx],0x86
  40393b:	and    BYTE PTR [ebx+edi*1+0xb],0xbc
  403940:	mov    ecx,0xb08948b6
  403945:	nop
  403946:	jmp    0xe43f956f
  40394b:	fs inc esi
  40394d:	jno    0x40391f
  40394f:	dec    esp
  403950:	ror    DWORD PTR [esi],0x42
  403953:	mov    ds:0x8cc7580c,al
  403958:	pushw  0x2e39
  40395c:	into   
  40395d:	dec    esi
  40395e:	out    0x2,al
  403960:	pop    ecx
  403961:	daa    
  403962:	(bad)  
  403963:	push   ebx
  403964:	add    al,0xbc
  403966:	fisubr DWORD PTR [ebx-0x55]
  403969:	dec    esp
  40396a:	fucomi st,st(1)
  40396c:	mov    es,WORD PTR [esi-0xe5d6984]
  403972:	jge    0x403918
  403974:	or     bl,BYTE PTR [ebp-0x21f7b9a4]
  40397a:	adc    esi,DWORD PTR [eax+0x1b]
  40397d:	pop    eax
  40397e:	test   DWORD PTR [bp+si+0x283a],0xe4213e70
  403987:	out    dx,eax
  403988:	pop    ss
  403989:	jge    0x4039f1
  40398b:	pop    ecx
  40398c:	add    BYTE PTR [eax-0x255c4aac],dl
  403992:	pop    ecx
  403993:	adc    eax,0x81f181c2
  403998:	lods   eax,DWORD PTR ds:[esi]
  403999:	dec    eax
  40399a:	and    ch,al
  40399c:	jae    0x403944
  40399e:	xchg   ebx,eax
  40399f:	xchg   ebp,eax
  4039a0:	inc    ecx
  4039a1:	(bad)  
  4039a3:	(bad)  [edi-0x4f7c15d8]
  4039a9:	jmp    0x403989
  4039ab:	out    dx,eax
  4039ac:	gs pusha 
  4039ae:	xlat   BYTE PTR ds:[ebx]
  4039af:	push   ss
  4039b0:	xchg   ecx,eax
  4039b1:	sahf   
  4039b2:	sbb    DWORD PTR [edx+0x5eeb6325],0xffffff88
  4039b9:	scas   al,BYTE PTR es:[edi]
  4039ba:	add    al,0x70
  4039bc:	sbb    edx,DWORD PTR [ecx-0x7c]
  4039bf:	and    bh,BYTE PTR [ecx]
  4039c1:	xor    al,0xf9
  4039c3:	jnp    0x4039f2
  4039c5:	fdivr  QWORD PTR [eax+edi*4]
  4039c8:	jbe    0x403a31
  4039ca:	arpl   WORD PTR [esi],dx
  4039cc:	mov    BYTE PTR [edx+edx*8],cl
  4039cf:	sbb    edx,esp
  4039d1:	jp     0x4039f0
  4039d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039d4:	mov    ah,0xfe
  4039d6:	or     ebx,DWORD PTR [edx+esi*8-0x2d]
  4039da:	(bad)  
  4039db:	out    0x4b,al
  4039dd:	out    0x1b,eax
  4039df:	add    BYTE PTR [edi],cl
  4039e1:	dec    ebx
  4039e2:	shl    BYTE PTR [edx+esi*1+0x5e],1
  4039e6:	shl    DWORD PTR [edx+0x54],0x4e
  4039ea:	inc    edx
  4039eb:	inc    ecx
  4039ec:	test   BYTE PTR ds:0x85a67b8e,al
  4039f2:	nop
  4039f3:	mov    esp,0x7093d4d7
  4039f8:	in     eax,dx
  4039f9:	nop
  4039fa:	lock pop esi
  4039fc:	add    eax,0x406f968
  403a01:	sahf   
  403a02:	je     0x403984
  403a04:	out    dx,eax
  403a05:	ins    DWORD PTR es:[edi],dx
  403a06:	sar    BYTE PTR [ecx+0x6b],1
  403a09:	test   al,0x87
  403a0b:	push   esi
  403a0c:	add    BYTE PTR [esi-0x166b5ee8],ch
  403a12:	(bad)  
  403a13:	xchg   ecx,eax
  403a14:	add    DWORD PTR [esi],0xffffffa7
  403a17:	xchg   BYTE PTR [ecx-0x3e5c9276],al
  403a1d:	jb     0x4039d5
  403a1f:	imul   esi,edi,0x3aa41a1a
  403a25:	ins    DWORD PTR es:[edi],dx
  403a26:	mov    cl,0x89
  403a28:	and    edi,DWORD PTR [ebx-0x7ea35e09]
  403a2e:	or     DWORD PTR [ebp+0x415cf05d],ebp
  403a34:	call   FWORD PTR [ebx+ebx*8+0x3dbf5e52]
  403a3b:	aad    0xfe
  403a3d:	clc    
  403a3e:	hlt    
  403a3f:	mov    bh,0x9c
  403a41:	sbb    ebp,DWORD PTR [ebx+0x76]
  403a44:	add    cl,BYTE PTR [ebp+ebx*1-0x12]
  403a48:	pop    es
  403a49:	and    DWORD PTR [edx+0x67],edi
  403a4c:	ret    
  403a4d:	jge    0x403a2a
  403a4f:	or     DWORD PTR [esi],ebp
  403a51:	mov    bl,BYTE PTR [ecx+eiz*2]
  403a54:	add    al,0xcd
  403a56:	fiadd  WORD PTR ds:0xda0e4fd0
  403a5c:	fucom  st(1)
  403a5e:	fcmovu st,st(0)
  403a60:	leave  
  403a61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a62:	std    
  403a63:	sub    DWORD PTR [eax+0x48],esp
  403a66:	pop    DWORD PTR [ecx]
  403a68:	(bad)  
  403a69:	cmp    al,0x3c
  403a6b:	mov    ah,0xcf
  403a6d:	outs   dx,DWORD PTR ds:[esi]
  403a6e:	jno    0x403aeb
  403a70:	dec    edi
  403a71:	cld    
  403a72:	mov    bh,BYTE PTR [edx]
  403a74:	cmp    BYTE PTR [ebp+0x2e],al
  403a77:	adc    eax,DWORD PTR [eax+0x25]
  403a7a:	sbb    DWORD PTR [ebp+edx*2+0x5ddd5dfa],esp
  403a81:	gs (bad) 
  403a84:	daa    
  403a85:	mov    eax,0xe53f246a
  403a8a:	call   0x93b0:0xce5dd349
  403a91:	xchg   DWORD PTR [ebx],eax
  403a93:	xor    DWORD PTR [edi*1+0x44c0a49d],esi
  403a9a:	mov    dl,0x9f
  403a9c:	out    dx,eax
  403a9d:	fcmovnb st,st(3)
  403a9f:	pop    es
  403aa0:	push   edx
  403aa1:	fwait
  403aa2:	aad    0x54
  403aa4:	in     al,dx
  403aa5:	cs into 
  403aa7:	cwde   
  403aa8:	popa   
  403aa9:	popf   
  403aaa:	push   ecx
  403aab:	push   eax
  403aac:	xchg   ebx,eax
  403aad:	xchg   ebp,eax
  403aae:	std    
  403aaf:	imul   edx,DWORD PTR [eax-0xf],0xffffffae
  403ab3:	xchg   ebp,eax
  403ab4:	retf   0x7c82
  403ab7:	jle    0x403ae2
  403ab9:	jg     0x403a78
  403abb:	popf   
  403abc:	and    ecx,DWORD PTR [ebx]
  403abe:	pop    ebp
  403abf:	push   ebx
  403ac0:	pop    ss
  403ac1:	lds    eax,FWORD PTR [edx]
  403ac3:	lds    ecx,FWORD PTR [esi-0x65]
  403ac6:	retf   
  403ac7:	test   esp,edi
  403ac9:	inc    ebp
  403aca:	shl    DWORD PTR [edi+0x3],1
  403acd:	xor    DWORD PTR [edx-0x7b7e70bf],ebp
  403ad3:	pop    eax
  403ad4:	mov    ebp,0x21e90ae9
  403ad9:	jae    0x403b1d
  403adb:	and    al,0x80
  403add:	and    BYTE PTR [esi-0x1f2c52e1],bh
  403ae3:	sbb    BYTE PTR [edi-0xabfcd88],0x31
  403aea:	lds    esp,FWORD PTR [ebp+0x65d14875]
  403af0:	ss std 
  403af2:	imul   esp,eax,0x8acdedb5
  403af8:	sub    BYTE PTR [eax+0x5ccec33d],0x24
  403aff:	ss jmp 0x403b34
  403b02:	outs   dx,BYTE PTR ds:[esi]
  403b03:	add    ah,BYTE PTR [edx-0x47]
  403b06:	cli    
  403b07:	mov    esi,0xe242d130
  403b0c:	mov    al,ds:0x510b15b8
  403b11:	xor    DWORD PTR [esp+ebp*8],ebp
  403b14:	sti    
  403b15:	add    ah,ch
  403b17:	es call 0xf7ca6a3e
  403b1d:	jp     0x403af0
  403b1f:	pop    ss
  403b20:	mov    ecx,0x3e48f546
  403b25:	lea    ebp,[ecx]
  403b27:	test   eax,0x2bcf5d0c
  403b2c:	(bad)  
  403b2d:	xor    eax,esi
  403b2f:	cmp    eax,ecx
  403b31:	jne    0x403b8d
  403b37:	or     ecx,0x18fd
  403b3d:	mov    eax,DWORD PTR [ebp-0x8]
  403b40:	and    DWORD PTR ds:0x42916b,0x3a4c
  403b4a:	mov    ecx,DWORD PTR [ebp-0x10]
  403b4d:	adc    DWORD PTR ds:0x42916b,0x4291f3
  403b57:	xor    eax,esi
  403b59:	xor    DWORD PTR ds:0x4291d3,0x4291f7
  403b63:	xor    ecx,esi
  403b65:	sub    eax,ecx
  403b67:	sub    eax,edi
  403b69:	mov    ecx,DWORD PTR ds:0x429b6f
  403b6f:	mov    ecx,DWORD PTR [ecx]
  403b71:	xor    DWORD PTR ds:0x429163,ecx
  403b77:	xor    eax,esi
  403b79:	mov    DWORD PTR [ebp-0x8],eax
  403b7c:	mov    eax,DWORD PTR [ebp-0x10]
  403b7f:	xor    eax,esi
  403b81:	mov    ecx,0xffcd8d8d
  403b86:	sub    ecx,eax
  403b88:	jmp    0x403b9c
  403b8d:	mov    eax,DWORD PTR [ebp-0x10]
  403b90:	xor    eax,esi
  403b92:	mov    ecx,0xffcd8d0d
  403b97:	sub    ecx,eax
  403b99:	add    ecx,DWORD PTR [ebp-0xc]
  403b9c:	mov    DWORD PTR [ebp-0xc],ecx
  403b9f:	mov    eax,DWORD PTR [ebp-0x8]
  403ba2:	cmp    eax,0xf89c85a1
  403ba7:	jne    0x40158a
  403bad:	mov    DWORD PTR [ebp-0x34],0x9
  403bb4:	mov    ecx,DWORD PTR [ebp+0x8]
  403bb7:	xor    ecx,esi
  403bb9:	add    ecx,edi
  403bbb:	jmp    0x40857d
  403bc0:	lea    eax,[ecx+ebx*1]
  403bc3:	mov    DWORD PTR [ebp-0x2c],eax
  403bc6:	mov    eax,DWORD PTR [ebp-0x58]
  403bc9:	sub    eax,ecx
  403bcb:	mov    DWORD PTR [ebp-0x1c],eax
  403bce:	mov    eax,DWORD PTR [ebp-0x1c]
  403bd1:	mov    DWORD PTR [ebp-0x14],eax
  403bd4:	mov    eax,DWORD PTR [ebp-0x2c]
  403bd7:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  403bde:	mov    DWORD PTR [ebp-0x54],eax
  403be1:	mov    DWORD PTR [ebp-0x20],0xf89c85a2
  403be8:	mov    eax,DWORD PTR [ebp-0x38]
  403beb:	xor    eax,esi
  403bed:	add    eax,edi
  403bef:	mov    DWORD PTR [ebp-0x10],eax
  403bf2:	mov    eax,DWORD PTR [ebp-0x38]
  403bf5:	xor    eax,esi
  403bf7:	add    eax,edi
  403bf9:	mov    DWORD PTR [ebp-0x8],eax
  403bfc:	mov    DWORD PTR [ebp-0x2c],0xf89c8581
  403c03:	mov    DWORD PTR [ebp-0x44],0xf89c85b8
  403c0a:	mov    eax,DWORD PTR [ebp-0x38]
  403c0d:	mov    edx,DWORD PTR [ebp-0x14]
  403c10:	xor    eax,esi
  403c12:	add    eax,edi
  403c14:	cmp    edx,eax
  403c16:	je     0x408571
  403c1c:	mov    eax,DWORD PTR [ebp-0x20]
  403c1f:	xor    eax,esi
  403c21:	mov    edx,0xffcd8d0d
  403c26:	sub    edx,eax
  403c28:	add    edx,DWORD PTR [ebp-0x14]
  403c2b:	mov    eax,DWORD PTR [ebp-0x20]
  403c2e:	mov    ebx,DWORD PTR [ebp-0x10]
  403c31:	xor    eax,esi
  403c33:	add    eax,edi
  403c35:	imul   eax,ebx
  403c38:	cmp    eax,edx
  403c3a:	ja     0x40856e
  403c40:	mov    edx,DWORD PTR [ebp-0x10]
  403c43:	mov    eax,DWORD PTR [ebp-0x14]
  403c46:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c49:	sub    eax,edx
  403c4b:	xor    ebx,esi
  403c4d:	xor    edx,edx
  403c4f:	add    ebx,edi
  403c51:	div    ebx
  403c53:	mov    DWORD PTR [ebp-0x8],eax
  403c56:	mov    eax,DWORD PTR [ebp-0x44]
  403c59:	mov    edx,DWORD PTR [ebp-0x8]
  403c5c:	xor    eax,esi
  403c5e:	add    eax,edi
  403c60:	cmp    edx,eax
  403c62:	jbe    0x403c72
  403c68:	mov    eax,DWORD PTR [ebp-0x44]
  403c6b:	xor    eax,esi
  403c6d:	add    eax,edi
  403c6f:	mov    DWORD PTR [ebp-0x8],eax
  403c72:	mov    eax,DWORD PTR [ebp-0x2c]
  403c75:	mov    edx,DWORD PTR [ebp-0x8]
  403c78:	xor    eax,esi
  403c7a:	add    eax,edi
  403c7c:	imul   eax,edx
  403c7f:	mov    DWORD PTR [ebp-0x8],eax
  403c82:	mov    eax,DWORD PTR [ebp-0x38]
  403c85:	mov    edx,DWORD PTR [ebp-0x8]
  403c88:	jmp    0x406039
  403c8d:	mov    eax,0xa02c6f67
  403c92:	and    al,0xb8
  403c94:	out    0x12,eax
  403c96:	mov    bh,0x24
  403c98:	fnstsw WORD PTR [esi]
  403c9a:	lods   eax,DWORD PTR ds:[esi]
  403c9b:	aas    
  403c9c:	xchg   edx,eax
  403c9d:	out    dx,eax
  403c9e:	pop    esp
  403c9f:	add    DWORD PTR [ebx-0x7c7ca311],0xffffffba
  403ca6:	pop    edx
  403ca7:	cli    
  403ca8:	add    dh,BYTE PTR [ebx]
  403caa:	cmp    ebx,esi
  403cac:	jns    0x403c63
  403cae:	ins    BYTE PTR es:[edi],dx
  403caf:	mov    edi,0xb2c20d20
  403cb4:	jno    0x403c87
  403cb6:	xor    eax,ebx
  403cb8:	sub    BYTE PTR [esi-0x21],dl
  403cbb:	icebp  
  403cbc:	bnd ret 0x8027
  403cc0:	cmp    DWORD PTR [edx],ebx
  403cc2:	fild   WORD PTR [bx+si]
  403cc5:	test   BYTE PTR [edi-0x63b43462],0xff
  403ccc:	imul   edx,DWORD PTR [ebx+0x5081b347],0xffffffc2
  403cd3:	and    al,0x1
  403cd5:	add    DWORD PTR [ecx+0x3b1e19ed],esi
  403cdb:	jns    0x403c67
  403cdd:	lds    edi,FWORD PTR [edi-0x14]
  403ce0:	lods   eax,DWORD PTR ds:[esi]
  403ce1:	inc    edx
  403ce2:	test   ah,dl
  403ce4:	dec    esp
  403ce5:	jnp    0x403cb7
  403ce7:	sar    cl,cl
  403ce9:	(bad)  
  403cea:	mov    ebx,0x19ed76d0
  403cef:	loop   0x403d1c
  403cf1:	test   BYTE PTR [ebx-0x3c],ch
  403cf4:	and    BYTE PTR [esi],al
  403cf6:	adc    dl,BYTE PTR [ebp+0x23db158]
  403cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403cfd:	cld    
  403cfe:	cmp    al,0xd7
  403d00:	scas   al,BYTE PTR es:[edi]
  403d01:	sub    DWORD PTR [ebx-0x4005818e],eax
  403d07:	or     BYTE PTR [esi+eax*2],cl
  403d0a:	push   ebp
  403d0b:	test   eax,0x48ed80b2
  403d10:	mov    ds:0x8a957ab8,eax
  403d15:	pop    edi
  403d16:	std    
  403d17:	pop    ds
  403d18:	mov    edi,0x48894a8f
  403d1d:	dec    dx
  403d1f:	dec    BYTE PTR [esi+ebx*4]
  403d22:	jp     0x403d1f
  403d24:	adc    eax,0x99328142
  403d29:	loope  0x403d6b
  403d2b:	mov    edi,0x52ced9
  403d30:	sub    DWORD PTR [edi],eax
  403d32:	xor    edx,ebp
  403d34:	jae    0x403db4
  403d36:	(bad)  
  403d37:	repnz or bh,BYTE PTR [esi-0x7d805263]
  403d3e:	mov    eax,0xc0fc70df
  403d43:	loopne 0x403d05
  403d45:	and    edx,DWORD PTR [esi-0x71]
  403d48:	stos   BYTE PTR es:[edi],al
  403d49:	test   al,0x3e
  403d4b:	das    
  403d4c:	dec    ecx
  403d4d:	fst    DWORD PTR [esi]
  403d4f:	dec    eax
  403d50:	mov    BYTE PTR [edx-0x3cfb876e],ah
  403d56:	adc    eax,0x56080a3d
  403d5b:	inc    ebp
  403d5c:	neg    dh
  403d5e:	rol    BYTE PTR [ebp-0x6],0x58
  403d62:	iret   
  403d63:	clc    
  403d64:	or     eax,0x66cd89ea
  403d69:	or     eax,0x4347a87f
  403d6e:	dec    esi
  403d6f:	push   ss
  403d70:	mov    ah,0xeb
  403d72:	(bad)  
  403d73:	cmc    
  403d74:	mov    bl,0x43
  403d76:	aad    0xb2
  403d78:	sbb    eax,0xad949182
  403d7d:	lods   al,BYTE PTR ds:[esi]
  403d7e:	add    esi,eax
  403d80:	retf   
  403d81:	mov    al,0xee
  403d83:	mov    bh,0xd1
  403d85:	test   al,0x42
  403d87:	rcl    BYTE PTR cs:[ecx],cl
  403d8a:	mov    esp,0xddf56276
  403d8f:	loope  0x403d4a
  403d91:	pop    esp
  403d92:	and    al,0xe0
  403d94:	or     bl,BYTE PTR [ecx+eiz*2+0x5897f324]
  403d9b:	aas    
  403d9c:	enter  0x112a,0x27
  403da0:	out    0x70,al
  403da2:	push   eax
  403da3:	cmp    eax,0x28a707d2
  403da8:	mov    eax,0x57ef7f8a
  403dad:	ret    0xa371
  403db0:	inc    esi
  403db1:	dec    ah
  403db3:	mov    ebx,0xf0165bac
  403db8:	pop    eax
  403db9:	icebp  
  403dba:	pushf  
  403dbb:	cmp    al,0x2b
  403dbe:	mov    bh,0x38
  403dc0:	or     ebx,DWORD PTR [edi+0x4abe2ba2]
  403dc6:	dec    edi
  403dc7:	popa   
  403dc8:	xchg   ebx,eax
  403dc9:	rcr    BYTE PTR [esi+esi*4],0x9a
  403dcd:	push   ds
  403dce:	push   ebp
  403dcf:	jmp    0x403e3a
  403dd1:	adc    al,0xc2
  403dd3:	xchg   edx,eax
  403dd4:	xchg   edi,eax
  403dd5:	mov    ebp,0xf6e3c287
  403dda:	pop    ds
  403ddb:	jne    0x403e4d
  403ddd:	call   0x30d9:0xd02a35b9
  403de4:	cmp    DWORD PTR [eax+eax*4+0x63362553],ebx
  403deb:	add    DWORD PTR [ebp-0x13],ecx
  403dee:	pop    ss
  403def:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df0:	cmp    edx,DWORD PTR [edi]
  403df2:	jg     0x403e1d
  403df4:	sub    DWORD PTR [edi],ecx
  403df6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403df7:	pop    ds
  403df8:	jmp    0x403e36
  403dfa:	in     eax,dx
  403dfb:	repz scas al,BYTE PTR es:[edi]
  403dfd:	(bad)  
  403dfe:	(bad)  
  403dff:	out    0x88,al
  403e01:	int3   
  403e02:	int    0x96
  403e04:	test   eax,0x238d5d3a
  403e09:	aaa    
  403e0a:	or     dh,BYTE PTR [esi+esi*4-0x47]
  403e0e:	add    eax,0xa7684d7c
  403e13:	or     eax,esp
  403e15:	inc    edx
  403e16:	sbb    DWORD PTR [eax],esp
  403e18:	pop    ss
  403e19:	out    0xbc,al
  403e1b:	xor    eax,0xffffffb2
  403e1e:	and    edx,ecx
  403e20:	xor    cl,BYTE PTR [ecx+ebp*1+0x3de5b2d3]
  403e27:	and    BYTE PTR [eax+0x25],dh
  403e2a:	das    
  403e2b:	xchg   edi,eax
  403e2c:	cmp    esp,DWORD PTR [esi+0x5b]
  403e2f:	push   edx
  403e30:	xchg   edx,eax
  403e31:	pop    esi
  403e32:	retf   0x94c7
  403e35:	dec    eax
  403e36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e37:	pop    esp
  403e38:	(bad)  
  403e39:	fcomp  DWORD PTR [esi-0x4524a41e]
  403e3f:	cdq    
  403e40:	push   ebp
  403e41:	inc    edx
  403e42:	mov    dh,0x18
  403e44:	or     cl,BYTE PTR [ecx-0x6f]
  403e47:	add    al,0xf9
  403e49:	jg     0x403dd0
  403e4b:	sub    eax,0xf1396404
  403e50:	cli    
  403e51:	jnp    0x403e94
  403e53:	or     eax,0xf5022518
  403e58:	outs   dx,DWORD PTR ds:[esi]
  403e59:	jle    0x403ea5
  403e5b:	inc    eax
  403e5c:	call   0xbc4405dd
  403e61:	mov    edi,0x11632b87
  403e66:	es jecxz 0x403e91
  403e69:	push   ebp
  403e6a:	mov    ds:0x83807ad3,al
  403e6f:	dec    edi
  403e70:	mov    ah,0x2c
  403e72:	aad    0xb2
  403e74:	and    BYTE PTR [ebp+esi*4+0x39eed8c7],ch
  403e7b:	jo     0x403e36
  403e7d:	daa    
  403e7e:	xchg   DWORD PTR [edx],ecx
  403e80:	into   
  403e81:	test   BYTE PTR [ebx+edi*8-0xc],bh
  403e85:	mov    BYTE PTR [ecx+0x3a],al
  403e88:	and    DWORD PTR [edx-0x78],0x66
  403e8c:	mov    BYTE PTR [esi-0xf6e17af],bl
  403e92:	es out dx,eax
  403e94:	sub    bh,BYTE PTR ds:0xce529a42
  403e9a:	inc    edx
  403e9b:	icebp  
  403e9c:	pusha  
  403e9d:	pop    edi
  403e9e:	xchg   ecx,eax
  403e9f:	(bad)  
  403ea0:	ret    
  403ea1:	adc    BYTE PTR [edx-0x9],al
  403ea4:	xlat   BYTE PTR ds:[ebx]
  403ea5:	popa   
  403ea6:	pop    esi
  403ea7:	arpl   WORD PTR es:[edi+0x2e],cx
  403eab:	inc    edx
  403eac:	loopne 0x403f1f
  403eae:	mov    esi,0x55b20957
  403eb3:	popf   
  403eb4:	and    BYTE PTR ds:0xb5ff91a1,dl
  403eba:	sahf   
  403ebb:	mov    gs,WORD PTR [ecx-0x5461658e]
  403ec1:	cdq    
  403ec2:	pop    ss
  403ec3:	je     0x403e82
  403ec5:	cmp    al,0x61
  403ec7:	inc    ebx
  403ec8:	mul    BYTE PTR [ecx-0x35a7f5df]
  403ece:	fiadd  WORD PTR [edx+ebp*8+0x22c152f9]
  403ed5:	mov    BYTE PTR [ecx+0x499785a9],bl
  403edb:	icebp  
  403edc:	adc    al,0xa8
  403ede:	push   ss
  403edf:	loopne 0x403ebb
  403ee1:	mov    dl,cl
  403ee3:	mul    BYTE PTR [edx]
  403ee5:	data16 fisub WORD PTR [ecx-0xef5554c]
  403eec:	js     0x403f13
  403eee:	pop    ds
  403eef:	mov    dh,0x45
  403ef1:	xchg   esp,eax
  403ef2:	pop    ds
  403ef3:	inc    esi
  403ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ef5:	sbb    BYTE PTR [ecx],0xe8
  403ef8:	mov    ch,0x5d
  403efa:	leave  
  403efb:	jg     0x403f30
  403efd:	les    esi,FWORD PTR [ebx+ecx*4+0x75]
  403f01:	xor    DWORD PTR [bp-0x58],eax
  403f05:	push   cs
  403f06:	add    BYTE PTR [eax-0x16c95b32],ch
  403f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f0d:	cmp    esp,eax
  403f0f:	jno    0x403f18
  403f11:	test   eax,0xd739f010
  403f16:	lods   eax,DWORD PTR ds:[esi]
  403f17:	pop    eax
  403f18:	icebp  
  403f19:	(bad)  
  403f1a:	js     0x403ede
  403f1c:	jne    0x403ec3
  403f1e:	jns    0x403f26
  403f20:	call   0x3d5e5a1f
  403f25:	ficomp DWORD PTR [ecx]
  403f27:	in     al,dx
  403f28:	clc    
  403f29:	cmp    eax,0xd8a9ccd1
  403f2e:	push   esi
  403f2f:	or     al,0x17
  403f31:	xor    ebx,edx
  403f33:	push   edx
  403f34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f35:	and    BYTE PTR ds:0x6e2666b1,0xc6
  403f3c:	aaa    
  403f3d:	in     eax,0x5
  403f3f:	mov    eax,ds:0x294d0725
  403f45:	and    eax,0x96ea62c7
  403f4a:	inc    ebx
  403f4b:	dec    eax
  403f4c:	loopne 0x403fb8
  403f4e:	push   ss
  403f4f:	or     BYTE PTR [ecx+0x4a04e1e9],dl
  403f55:	retf   
  403f56:	cdq    
  403f57:	lds    ebx,FWORD PTR [ebx-0x752f9b41]
  403f5d:	and    ecx,edi
  403f5f:	cmp    BYTE PTR [ebx-0x2bb7fd31],al
  403f65:	(bad)  
  403f66:	mov    al,0x65
  403f68:	xor    eax,0xdba2ba8e
  403f6d:	dec    esp
  403f6e:	dec    esi
  403f6f:	pop    eax
  403f70:	pop    edx
  403f71:	in     al,dx
  403f72:	test   BYTE PTR [ecx+0x18],al
  403f75:	xor    al,0x94
  403f77:	xchg   BYTE PTR [eax],dl
  403f79:	cmc    
  403f7a:	daa    
  403f7b:	scas   al,BYTE PTR es:[edi]
  403f7c:	mov    ds:0x73e90b82,al
  403f81:	jge    0x403f07
  403f83:	push   ebp
  403f84:	xchg   edx,eax
  403f85:	jo     0x403f95
  403f87:	imul   ebp,DWORD PTR [edi],0x629acb0c
  403f8d:	inc    ebx
  403f8e:	inc    edx
  403f8f:	or     al,0x52
  403f91:	xchg   ecx,eax
  403f92:	pop    ebx
  403f93:	xchg   ebx,eax
  403f94:	leave  
  403f95:	jmp    0x7f8:0x645fa34c
  403f9c:	dec    ebx
  403f9d:	push   ds
  403f9e:	(bad)  
  403f9f:	cmp    eax,edx
  403fa1:	push   0x1961569e
  403fa6:	mov    esi,0xcbc8c0ec
  403fab:	cmp    al,0x9d
  403fad:	in     eax,0xe5
  403faf:	and    BYTE PTR [ecx-0x1c],dh
  403fb2:	bound  edi,QWORD PTR [eax+0x55095309]
  403fb8:	sahf   
  403fb9:	mov    fs,WORD PTR [esi-0x21]
  403fbc:	ror    DWORD PTR [edx],1
  403fbe:	mov    ebx,0x789c7227
  403fc3:	xor    ebx,esi
  403fc5:	pop    edx
  403fc6:	in     al,0x61
  403fc8:	ror    DWORD PTR [edx+0x2d],cl
  403fcb:	bound  edx,QWORD PTR [ecx-0x7f]
  403fce:	cmp    eax,0xdf91ff06
  403fd3:	ss sub eax,esi
  403fd6:	rcr    al,0x5e
  403fd9:	inc    esi
  403fda:	sub    al,0x1c
  403fdc:	sbb    dh,BYTE PTR [edx+0x3e4fa374]
  403fe2:	ss mov eax,0x315f03a
  403fe8:	aam    0x90
  403fea:	jle    0x403fc9
  403fec:	addr16 jns 0x403fc5
  403fef:	adc    dh,BYTE PTR [ebp-0x5017568e]
  403ff5:	out    0x1d,eax
  403ff7:	add    ecx,DWORD PTR [edi]
  403ff9:	lds    edx,FWORD PTR [edx-0x4615610]
  403fff:	xchg   esi,eax
  404000:	sbb    al,0x5f
  404002:	sub    al,0xf4
  404004:	mov    ch,0x43
  404006:	not    BYTE PTR [ebx]
  404008:	push   ds
  404009:	loope  0x403fa9
  40400b:	inc    ecx
  40400c:	out    0xbc,eax
  40400e:	aaa    
  40400f:	gs out 0xba,al
  404012:	in     eax,0x3b
  404014:	add    cl,dl
  404016:	mov    dh,cl
  404018:	mov    ah,0xb6
  40401a:	jecxz  0x403fd0
  40401c:	fdivr  DWORD PTR [edx+edx*4]
  40401f:	pop    esp
  404020:	(bad)  
  404022:	cmp    DWORD PTR [edx+0xedd31cd],esi
  404028:	sbb    al,0x14
  40402a:	pop    edx
  40402b:	mov    ebx,0xc99a0e8c
  404030:	jp     0x403fd3
  404032:	pusha  
  404033:	jmp    0xca2d:0x1b9f060f
  40403a:	out    dx,eax
  40403b:	std    
  40403c:	mov    ds:0x49599eac,al
  404041:	add    al,0xa3
  404043:	dec    eax
  404044:	loopne 0x4040b4
  404046:	push   edx
  404047:	dec    eax
  404048:	cli    
  404049:	pop    ebp
  40404a:	inc    edi
  40404b:	push   0x27
  40404d:	inc    edi
  40404e:	dec    ebx
  40404f:	or     ah,ah
  404051:	jl     0x404062
  404053:	dec    edx
  404054:	mov    dh,0x14
  404056:	in     eax,dx
  404057:	sti    
  404058:	mov    al,ds:0x576fee68
  40405d:	fcomp  QWORD PTR [esi]
  40405f:	adc    dh,dl
  404061:	xchg   edx,eax
  404062:	or     bl,BYTE PTR [edi]
  404064:	aam    0x6d
  404066:	xchg   ecx,eax
  404067:	add    eax,0xca70677
  40406c:	aam    0x14
  40406e:	xchg   esi,ebp
  404070:	jo     0x40406c
  404072:	push   es
  404073:	mov    eax,ds:0xac7c1d0b
  404078:	mov    esi,0xe3ee5ff3
  40407d:	shr    DWORD PTR [ebx],cl
  40407f:	lock mov dh,0xed
  404082:	leave  
  404083:	sti    
  404084:	rol    BYTE PTR [ebx+edi*4],0xd
  404088:	dec    edx
  404089:	pusha  
  40408a:	out    0x91,eax
  40408c:	sub    al,0x9c
  40408e:	mov    dh,0xcb
  404090:	pop    esp
  404091:	inc    ebp
  404092:	rsqrtps xmm2,XMMWORD PTR [edx]
  404095:	adc    BYTE PTR [ecx],bl
  404097:	inc    esi
  404098:	sbb    eax,0x1b346339
  40409d:	(bad)  
  40409e:	mov    ds:0x73043ad0,al
  4040a3:	outs   dx,DWORD PTR ds:[esi]
  4040a4:	pop    edi
  4040a5:	loope  0x40411f
  4040a7:	clc    
  4040a8:	dec    ecx
  4040a9:	inc    esi
  4040aa:	(bad)  
  4040ab:	push   es
  4040ac:	inc    edx
  4040ad:	shl    BYTE PTR [ecx-0x16],cl
  4040b0:	or     al,0x5a
  4040b2:	add    BYTE PTR [edi],bl
  4040b4:	jmp    0xd68d:0xbb4b5d6c
  4040bb:	xchg   BYTE PTR [edx+0x50],bh
  4040be:	mov    ah,0x7e
  4040c0:	pusha  
  4040c1:	icebp  
  4040c2:	dec    edx
  4040c3:	xchg   ecx,eax
  4040c4:	outs   dx,DWORD PTR ds:[esi]
  4040c5:	outs   dx,BYTE PTR ds:[esi]
  4040c6:	inc    ecx
  4040c7:	mov    dh,bh
  4040c9:	mov    edi,DWORD PTR [eax-0x20]
  4040cc:	ret    0x8bf5
  4040cf:	scas   eax,DWORD PTR es:[edi]
  4040d0:	(bad)  
  4040d1:	jb     0x404070
  4040d3:	lods   eax,DWORD PTR ds:[esi]
  4040d4:	daa    
  4040d5:	dec    esi
  4040d6:	sbb    cl,dl
  4040d8:	mov    ?,WORD PTR [edi-0x66]
  4040db:	jmp    0xda3cc95
  4040e0:	push   edi
  4040e1:	loope  0x4040fa
  4040e3:	les    esi,FWORD PTR [eax+0x57]
  4040e6:	xchg   esp,eax
  4040e7:	push   ecx
  4040e8:	call   0xbb36e6f3
  4040ed:	(bad)  
  4040ee:	or     esi,DWORD PTR [edi-0x30]
  4040f1:	retf   0xd90b
  4040f4:	mov    ebp,0x7c4194bd
  4040f9:	jbe    0x404170
  4040fb:	addr16 addr16 sub al,0x73
  4040ff:	icebp  
  404100:	adc    al,al
  404102:	mov    esi,ss
  404104:	ds mov edx,0x81cca719
  40410a:	in     eax,0x5e
  40410c:	jmp    0x9414:0xa7b14e60
  404113:	mov    al,BYTE PTR ds:0x5552e45e
  404119:	pop    esp
  40411a:	jno    0x404100
  40411c:	mov    ebp,DWORD PTR [ebp-0x48b17b63]
  404122:	mov    WORD PTR [eax],ds
  404124:	mov    WORD PTR [edx-0x13470d21],?
  40412a:	xchg   ecx,eax
  40412b:	ds cmc 
  40412d:	out    dx,eax
  40412e:	pushf  
  40412f:	cld    
  404130:	leave  
  404131:	repnz imul edx,DWORD PTR [eax-0x15],0x2e
  404136:	fsub   st,st(3)
  404138:	aas    
  404139:	cmp    BYTE PTR [edi-0x38bcda41],0x5
  404140:	xchg   edx,eax
  404141:	ins    BYTE PTR es:[edi],dx
  404142:	jno    0x4040e3
  404144:	repnz inc edx
  404146:	xchg   esp,eax
  404147:	push   ecx
  404148:	mov    bl,0x9c
  40414a:	retf   
  40414b:	mov    ah,0xe4
  40414d:	add    BYTE PTR [ebx-0x23361ef5],ah
  404153:	sub    DWORD PTR [eax-0x7ce0f18c],ecx
  404159:	jmp    0x404140
  40415b:	fs jne 0x404165
  40415e:	jae    0x404154
  404160:	shl    BYTE PTR [edx+0x12],cl
  404163:	jae    0x40415a
  404165:	adc    BYTE PTR [esi-0x26],al
  404168:	jecxz  0x4041b8
  40416a:	sbb    al,0x1e
  40416c:	cmp    al,0x49
  40416e:	xchg   edx,eax
  40416f:	adc    al,0x6a
  404171:	inc    ebp
  404172:	(bad)  
  404173:	rcr    BYTE PTR [eax],1
  404175:	pop    ebp
  404176:	stos   BYTE PTR es:[edi],al
  404177:	jge    0x40414b
  404179:	hlt    
  40417a:	cmp    al,BYTE PTR [edi]
  40417c:	or     ebx,ebx
  40417e:	push   0x5af8efcb
  404183:	fnstcw WORD PTR [edx+0xa]
  404186:	and    cl,ch
  404188:	xchg   DWORD PTR [edx+0x1f],ebp
  40418b:	lahf   
  40418c:	adc    edi,DWORD PTR [ecx+0x6c]
  40418f:	cmp    cl,BYTE PTR [ebp-0x2a4a0338]
  404195:	fldenv [edx+0x7729a549]
  40419b:	push   ecx
  40419c:	sahf   
  40419d:	or     al,0x33
  40419f:	fcomp  QWORD PTR [edi+ebp*2-0x427f6b04]
  4041a6:	xor    DWORD PTR ds:0xe483ae01,ecx
  4041ac:	add    al,0x8e
  4041ae:	xchg   edi,eax
  4041af:	cdq    
  4041b0:	jmp    FWORD PTR [ecx-0x55be2a09]
  4041b6:	sub    esi,DWORD PTR [ecx+0x37a9b16c]
  4041bc:	push   esp
  4041bd:	xchg   esi,eax
  4041be:	inc    esi
  4041bf:	mov    edx,0x16609219
  4041c4:	mov    ds:0x526f4f33,al
  4041c9:	push   ebx
  4041ca:	mov    ebx,0xf08c59ed
  4041cf:	sub    eax,DWORD PTR [esi+esi*8-0x3]
  4041d3:	ret    
  4041d4:	inc    ecx
  4041d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041d6:	and    bh,BYTE PTR [ebx-0x74]
  4041d9:	push   esp
  4041da:	ret    
  4041db:	mov    eax,0xe464a52d
  4041e0:	aaa    
  4041e1:	ins    BYTE PTR es:[edi],dx
  4041e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041e3:	jp     0x404251
  4041e5:	ds push es
  4041e7:	(bad)  
  4041e8:	fstp   TBYTE PTR [eax+0x32]
  4041eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041ec:	scas   al,BYTE PTR es:[edi]
  4041ed:	jmp    0x4041f1
  4041ef:	fbstp  TBYTE PTR [eax]
  4041f1:	cmp    ah,BYTE PTR [ebp-0x7b]
  4041f4:	and    BYTE PTR [eax+0x1c68d4bb],0xab
  4041fb:	scas   al,BYTE PTR es:[edi]
  4041fc:	xchg   esi,eax
  4041fd:	ja     0x4041c0
  4041ff:	mov    bh,0xab
  404201:	in     eax,0xfe
  404203:	xchg   BYTE PTR [eax-0x163ede3f],bh
  404209:	bound  esi,QWORD PTR [ecx]
  40420b:	call   0x3a5c:0x79799293
  404212:	out    0xf3,al
  404214:	ins    BYTE PTR es:[edi],dx
  404215:	cmp    eax,0x92c7088a
  40421a:	push   ecx
  40421b:	mov    cl,0x4
  40421d:	in     eax,0x1
  40421f:	jg     0x4041c1
  404221:	cmp    eax,0x4f84d9a2
  404226:	std    
  404227:	mov    bh,BYTE PTR [ebx+0x53]
  40422a:	and    eax,0xa33c4e4b
  40422f:	iret   
  404230:	push   esp
  404231:	jle    0x4041d0
  404233:	xor    al,0x57
  404235:	imul   DWORD PTR [edx+0x7c]
  404238:	or     eax,0x3b280ef7
  40423d:	adc    ebx,DWORD PTR [esi-0x17e51705]
  404243:	push   eax
  404244:	add    ecx,DWORD PTR [eax+0x37]
  404247:	cmp    ch,dh
  404249:	xchg   ecx,eax
  40424a:	cmp    edx,DWORD PTR [ecx-0x30c5cbb2]
  404250:	jecxz  0x4041d6
  404252:	adc    DWORD PTR [ebp+0x28],ebp
  404255:	sbb    al,BYTE PTR [ebp-0x45e39776]
  40425b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40425c:	mov    ch,0x48
  40425e:	ror    BYTE PTR [edx-0x5ee5dc42],cl
  404264:	sbb    BYTE PTR [esi+0xe],ch
  404267:	out    dx,eax
  404268:	xchg   ecx,eax
  404269:	jb     0x40428f
  40426b:	or     ebp,DWORD PTR [edx+0x67]
  40426e:	mov    ah,0x4b
  404270:	nop
  404271:	out    0xb4,eax
  404273:	push   ecx
  404274:	shl    esi,cl
  404276:	cmp    ebp,DWORD PTR [ebp-0x5]
  404279:	pop    ecx
  40427a:	mov    ebp,0xae0cd8d
  40427f:	or     ecx,DWORD PTR [ebp-0x2ba49512]
  404285:	lods   al,BYTE PTR ds:[esi]
  404286:	mov    eax,0xfe67b2e2
  40428b:	ret    0x4ed9
  40428e:	jg     0x4042a5
  404290:	or     al,dl
  404292:	lahf   
  404293:	inc    esi
  404294:	mov    al,BYTE PTR [ebx+0xa]
  404297:	mov    DWORD PTR [eax+0x61],ebx
  40429a:	leave  
  40429b:	ret    
  40429c:	scas   al,BYTE PTR es:[edi]
  40429d:	retf   
  40429e:	pop    ebp
  40429f:	imul   ebp,DWORD PTR [ebp+0x107dc258],0x5b351489
  4042a9:	mov    WORD PTR [ecx-0x23],ss
  4042ac:	push   0xf54ae1fd
  4042b1:	fidiv  DWORD PTR [ebx-0x76]
  4042b4:	mul    DWORD PTR [ecx-0x6504bb1a]
  4042ba:	stos   DWORD PTR es:[edi],eax
  4042bb:	pop    esp
  4042bc:	jmp    0x737ead2b
  4042c1:	add    ah,dh
  4042c3:	jl     0x4042bb
  4042c5:	dec    ebp
  4042c6:	xchg   ebx,eax
  4042c7:	stc    
  4042c8:	sub    dh,BYTE PTR [ebx-0x79]
  4042cb:	(bad)  
  4042cc:	std    
  4042cd:	sub    BYTE PTR [edi+0x18],al
  4042d0:	dec    esp
  4042d1:	mov    eax,0x2e14575e
  4042d6:	pop    ds
  4042d7:	(bad)  
  4042d8:	jge    0x40431a
  4042da:	loope  0x404359
  4042dc:	je     0x404279
  4042de:	ins    BYTE PTR es:[edi],dx
  4042df:	push   edx
  4042e0:	or     DWORD PTR [edx+0x5e],0xffffff99
  4042e4:	not    eax
  4042e6:	invd   
  4042e8:	iret   
  4042e9:	push   edx
  4042ea:	sbb    BYTE PTR [edx-0x60],al
  4042ed:	fild   QWORD PTR ds:0x4aebe271
  4042f3:	jno    0x4042a2
  4042f5:	mov    edx,0x33492a24
  4042fa:	into   
  4042fb:	mov    esp,0x322400b5
  404300:	fld    TBYTE PTR [ecx]
  404302:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404303:	bound  ebp,QWORD PTR [ebp+0x2e79f59c]
  404309:	sub    al,0x14
  40430b:	push   es
  40430c:	scas   al,BYTE PTR es:[edi]
  40430d:	(bad)
  404310:	push   ebx
  404311:	jl     0xaeaa919a
  404317:	cmp    dh,BYTE PTR [esi-0x13c79425]
  40431d:	dec    ecx
  40431e:	mov    DWORD PTR [edx+ebp*8-0x709ae03c],edi
  404325:	dec    eax
  404326:	pop    eax
  404327:	outs   dx,DWORD PTR ds:[esi]
  404328:	clc    
  404329:	(bad)  
  40432a:	int    0x66
  40432c:	mov    eax,0x4f1dc535
  404331:	adc    BYTE PTR [edx+0x7a],bl
  404334:	adc    eax,0x6a7e955e
  404339:	jno    0x4043b1
  40433b:	xor    al,0x1f
  40433d:	iret   
  40433e:	cmp    DWORD PTR [ecx+0x267e84b0],edx
  404344:	cwde   
  404345:	fwait
  404346:	popf   
  404347:	popa   
  404348:	bound  eax,QWORD PTR [esi]
  40434a:	adc    bl,BYTE PTR [esi+0x60]
  40434d:	ins    DWORD PTR es:[edi],dx
  40434e:	out    dx,al
  40434f:	push   es
  404350:	and    DWORD PTR [edi+edi*4+0x7492dd4e],0xffffffd9
  404358:	sar    BYTE PTR [edi+eiz*8],1
  40435b:	dec    BYTE PTR [edx]
  40435d:	test   esi,0x973c4778
  404363:	cli    
  404364:	pushf  
  404365:	mov    ds:0x17412f97,eax
  40436a:	push   esi
  40436b:	out    0xb4,eax
  40436d:	and    al,0x4d
  40436f:	fstp   QWORD PTR [ebp-0x49]
  404372:	fnstenv [ebx+0x13]
  404375:	je     0x4043cf
  404377:	push   0x30
  404379:	jne    0x404303
  40437b:	retf   0x2ce3
  40437e:	popa   
  40437f:	fimul  DWORD PTR [ecx+0x497c8e28]
  404385:	aad    0xf7
  404387:	push   0x3560c34d
  40438c:	jbe    0x404341
  40438e:	lods   al,BYTE PTR fs:[esi]
  404390:	(bad)  
  404392:	fst    DWORD PTR [edi]
  404394:	pop    DWORD PTR [eax-0x17]
  404397:	loop   0x404332
  404399:	inc    edi
  40439a:	popa   
  40439b:	push   cs
  40439c:	arpl   ax,sp
  40439e:	add    al,0x6d
  4043a0:	push   edi
  4043a1:	sub    eax,0xe5d5d97c
  4043a6:	dec    edi
  4043a7:	loope  0x4043e0
  4043a9:	je     0x404387
  4043ab:	icebp  
  4043ac:	cli    
  4043ad:	push   es
  4043ae:	xchg   BYTE PTR [esi+0x2f],ah
  4043b1:	jle    0x404401
  4043b3:	das    
  4043b4:	push   ebp
  4043b5:	mov    bl,0xaf
  4043b7:	mov    ecx,0xd93e5f94
  4043bc:	cmc    
  4043bd:	fsub   QWORD PTR [ebp+0x3e5e6062]
  4043c3:	iret   
  4043c4:	jb     0x404389
  4043c6:	stos   DWORD PTR es:[edi],eax
  4043c7:	sub    DWORD PTR ds:0xd15d18e0,ebp
  4043cd:	pop    esi
  4043ce:	xchg   edi,eax
  4043cf:	into   
  4043d0:	fldenv [ebx-0x14]
  4043d3:	cld    
  4043d4:	into   
  4043d5:	jnp    0x404364
  4043d7:	cdq    
  4043d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043d9:	sub    ah,bl
  4043db:	and    eax,0x5aa38d82
  4043e0:	add    al,0x2
  4043e2:	pop    edi
  4043e3:	or     eax,0xa6a0ee72
  4043e8:	xchg   edi,eax
  4043e9:	test   DWORD PTR [ecx],esi
  4043eb:	dec    ecx
  4043ec:	push   0x3
  4043ee:	test   BYTE PTR [ebx-0x691b764f],0xf9
  4043f5:	scas   eax,DWORD PTR es:[edi]
  4043f6:	add    DWORD PTR [ebp+0x16],esp
  4043f9:	sti    
  4043fa:	or     ah,BYTE PTR ds:0x96810fb9
  404400:	out    0x31,eax
  404402:	enter  0xe721,0xa4
  404406:	arpl   WORD PTR [ebx],bx
  404408:	dec    ebp
  404409:	loop   0x404419
  40440b:	sti    
  40440c:	mov    cs,WORD PTR [ecx]
  40440e:	add    eax,0x8fa7cc14
  404413:	fcmovnu st,st(4)
  404415:	or     al,0xba
  404417:	daa    
  404418:	aaa    
  404419:	fild   DWORD PTR [eax+eax*8]
  40441c:	cmp    ecx,DWORD PTR [edx]
  40441e:	aaa    
  40441f:	jmp    0x5292:0x15b2f424
  404426:	idiv   bh
  404428:	sbb    al,0x14
  40442a:	sub    eax,0x2e8c4a63
  40442f:	xor    esp,edi
  404431:	leave  
  404432:	xchg   edx,eax
  404433:	iret   
  404434:	iret   
  404435:	mov    WORD PTR [ebx],gs
  404437:	test   BYTE PTR [ebx],ch
  404439:	cdq    
  40443a:	jno    0x4043ef
  40443c:	dec    esi
  40443d:	add    al,0x7f
  40443f:	fucomi st,st(6)
  404441:	ja     0x4043fd
  404443:	fs jbe 0x4044b7
  404446:	and    esi,DWORD PTR [edx]
  404448:	je     0x404448
  40444a:	xor    dh,dh
  40444c:	cs xchg ebp,eax
  40444e:	dec    edi
  40444f:	push   ecx
  404450:	cld    
  404451:	mov    ebx,0x938ac941
  404456:	push   ss
  404457:	or     edx,DWORD PTR [eax]
  404459:	add    eax,0x536af9b3
  40445e:	cmovo  edx,DWORD PTR [eax-0x5c046390]
  404465:	or     eax,0x3396608b
  40446a:	jns    0x4044e9
  40446c:	adc    bl,al
  40446e:	(bad)  
  40446f:	lahf   
  404470:	sbb    bh,dl
  404472:	out    dx,eax
  404473:	jb     0x404443
  404475:	call   0xe645:0xdc662628
  40447c:	lock adc al,0x80
  40447f:	and    al,0xe4
  404481:	outs   dx,DWORD PTR ds:[esi]
  404482:	mov    gs,WORD PTR [edi]
  404484:	fs ret 
  404486:	and    BYTE PTR [edx+0x54],ah
  404489:	call   0x823efd6c
  40448e:	in     al,dx
  40448f:	jnp    0x404469
  404491:	retf   0xbdc5
  404494:	mov    al,0xfc
  404496:	pop    es
  404497:	jb     0x404485
  404499:	loopne 0x4044dc
  40449b:	daa    
  40449c:	std    
  40449d:	jl     0x4044cc
  40449f:	pop    edx
  4044a0:	sbb    DWORD PTR [ebx-0x74],ebx
  4044a3:	mov    es,WORD PTR [esi+0x2d]
  4044a6:	jl     0x40450f
  4044a8:	add    ch,BYTE PTR [ebx-0x77b06d99]
  4044ae:	es pop ecx
  4044b0:	dec    ebp
  4044b1:	sbb    esp,DWORD PTR [ebx]
  4044b3:	mov    edx,0x93bcc60c
  4044b8:	call   0xf47:0xc8584992
  4044bf:	mov    edx,0x9ce0e806
  4044c4:	adc    al,0x5c
  4044c6:	mov    eax,0x862ac7b6
  4044cb:	and    BYTE PTR [ebx-0x3691ef6d],dh
  4044d1:	dec    esp
  4044d2:	ja     0x4044f4
  4044d4:	lods   al,BYTE PTR ds:[esi]
  4044d5:	addr16 retf 
  4044d7:	push   0x1ec0091b
  4044dc:	mov    al,ds:0x834e44d0
  4044e1:	mov    al,ds:0xfb2417b
  4044e6:	imul   edx,DWORD PTR [ebx],0x13b8aaa3
  4044ec:	sub    BYTE PTR [edi-0x292b65a1],bh
  4044f2:	pop    ds
  4044f3:	jno    0x404561
  4044f5:	sbb    eax,0xb9426d85
  4044fa:	mov    dl,0xa4
  4044fc:	jmp    0x404484
  4044fe:	aam    0x4f
  404500:	pushf  
  404501:	jae    0x404551
  404503:	cdq    
  404504:	loopne 0x404562
  404506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404507:	adc    eax,DWORD PTR [ebx-0x2]
  40450a:	test   DWORD PTR [esi+esi*8-0x7521964b],esp
  404511:	div    BYTE PTR [ebx+0xd]
  404514:	test   BYTE PTR [edi+0x19aa2789],0x4f
  40451b:	lds    esp,FWORD PTR [ecx-0x4d]
  40451e:	mov    bh,0xa8
  404520:	mov    bl,0x8b
  404522:	in     al,0x7
  404524:	push   cs
  404525:	shl    esp,0xc0
  404528:	outs   dx,BYTE PTR ds:[esi]
  404529:	mov    edi,0x1b80fa8d
  40452e:	rol    DWORD PTR [esi-0x66],1
  404531:	setg   BYTE PTR [ebx]
  404534:	lsl    esp,WORD PTR [edi+0x6f]
  404538:	push   ebx
  404539:	shl    DWORD PTR fs:[eax-0x7d],1
  40453d:	cmp    bh,BYTE PTR [ebp+0x4a17962]
  404543:	mov    esp,0x5ca44c5b
  404548:	mov    eax,0xc56db627
  40454d:	jb     0x4044da
  40454f:	push   ebp
  404550:	xchg   esp,eax
  404551:	push   eax
  404552:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404553:	add    ecx,DWORD PTR [eax+esi*1-0x2d]
  404557:	test   BYTE PTR [eax+0x72f6c65f],0xb2
  40455e:	retf   0x4159
  404561:	dec    esi
  404562:	inc    esp
  404563:	das    
  404564:	imul   edi,edx,0xe69a6946
  40456a:	jnp    0x404519
  40456c:	iret   
  40456d:	jo     0x40459f
  40456f:	dec    ebx
  404570:	out    dx,al
  404571:	adc    eax,0xa12f9347
  404576:	sub    esi,ebx
  404578:	inc    edi
  404579:	fsub   QWORD PTR [edi-0x44]
  40457c:	add    DWORD PTR [eax],0xffffffda
  40457f:	pop    ds
  404580:	or     eax,0x7fa54a14
  404585:	sub    esp,DWORD PTR [ecx+0x14aba8ef]
  40458b:	mov    ds:0xea26cb0b,eax
  404590:	jae    0x404555
  404592:	pop    ds
  404593:	fnsave [ecx]
  404595:	sub    ebp,ecx
  404597:	sbb    cl,BYTE PTR [eax]
  404599:	and    BYTE PTR [edx-0x8],bl
  40459c:	cli    
  40459d:	retf   0x896c
  4045a0:	loope  0x4045a6
  4045a2:	in     eax,dx
  4045a3:	mov    eax,ebx
  4045a5:	test   DWORD PTR [eax+ebx*2-0x46b208ea],0xc95528d0
  4045b0:	clc    
  4045b1:	or     eax,0x4abf5e5a
  4045b6:	retf   0xa1d7
  4045b9:	jecxz  0x404629
  4045bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045bc:	add    BYTE PTR [edx-0x6e],dl
  4045bf:	ins    DWORD PTR es:[edi],dx
  4045c0:	shl    DWORD PTR [esi-0x2e7644cc],1
  4045c6:	or     cl,BYTE PTR [ebp-0x68]
  4045c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4045cb:	cmp    bl,bl
  4045cd:	addr16 ret 0x92ae
  4045d1:	dec    ebx
  4045d2:	ins    BYTE PTR es:[edi],dx
  4045d3:	jno    0x40462a
  4045d5:	loope  0x404587
  4045d7:	ficom  WORD PTR [edi]
  4045da:	inc    edi
  4045db:	dec    esi
  4045dc:	imul   BYTE PTR [edx-0x3d]
  4045df:	adc    BYTE PTR [edi],dl
  4045e1:	or     eax,0xfb790dc
  4045e6:	fdivp  st(2),st
  4045e8:	std    
  4045e9:	call   0xf15ef20d
  4045ee:	stos   DWORD PTR es:[edi],eax
  4045ef:	xchg   ecx,eax
  4045f0:	retf   0x19ce
  4045f3:	fisubr WORD PTR [esi+ebx*1-0x65c38b0b]
  4045fa:	mov    ch,0x7d
  4045fc:	jecxz  0x404607
  4045fe:	dec    ebp
  4045ff:	cli    
  404600:	pushf  
  404601:	je     0x404655
  404603:	pusha  
  404604:	dec    edx
  404605:	xchg   BYTE PTR [edx-0x24dd2de0],dl
  40460b:	pusha  
  40460c:	add    BYTE PTR [ecx+ecx*8-0x12],ch
  404610:	push   es
  404611:	jmp    0x404664
  404613:	clc    
  404614:	xor    BYTE PTR [eax-0x1de5f03d],dl
  40461a:	out    0x8b,al
  40461c:	and    dh,BYTE PTR [ebx-0x187da706]
  404622:	loopne 0x404656
  404624:	xchg   edx,eax
  404625:	pop    esi
  404626:	push   es
  404627:	jmp    0x53cf:0xb3dbf4
  40462e:	mov    cs,WORD PTR [ebp+0x3]
  404631:	mov    BYTE PTR [ebx+edi*1+0x36],bh
  404635:	ins    BYTE PTR es:[edi],dx
  404636:	in     al,dx
  404637:	inc    ebp
  404638:	jp     0x40460e
  40463a:	xchg   BYTE PTR [edx-0x7bdf85f],bl
  404640:	jo     0x404647
  404642:	fdivr  QWORD PTR [edi+0x7f131264]
  404648:	imul   ecx,DWORD PTR [ecx-0x76],0x9fab127a
  40464f:	bound  edx,QWORD PTR [esp+edi*8-0x55]
  404653:	loopne 0x4046c6
  404655:	jns    0x40460c
  404657:	xchg   esi,eax
  404658:	sub    DWORD PTR [ebx+edi*1-0x2],esi
  40465c:	cli    
  40465d:	or     BYTE PTR [edx],0x66
  404660:	dec    esp
  404661:	sub    eax,0x4cd82e9f
  404666:	and    al,0x9d
  404668:	mov    bl,0x22
  40466a:	push   edi
  40466b:	pop    ecx
  40466c:	inc    ecx
  40466d:	dec    ebx
  40466e:	hlt    
  40466f:	jmp    0x3e24:0x69ecfafd
  404676:	dec    ebp
  404677:	inc    edi
  404678:	test   al,0xf9
  40467a:	jne    0x404614
  40467c:	jne    0x4046a4
  40467e:	shr    BYTE PTR [eax],0x56
  404681:	fmul   st(2),st
  404683:	mov    edi,0x4ebaeae1
  404688:	pushf  
  404689:	mov    esp,0x805bdced
  40468e:	and    edx,0x43
  404691:	sub    eax,0x1236302f
  404696:	jo     0x404671
  404698:	rcr    DWORD PTR ds:0x30f629ca,cl
  40469e:	dec    edi
  40469f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a0:	push   ds
  4046a1:	push   cs
  4046a2:	or     DWORD PTR ds:0x44eca885,esi
  4046a8:	push   0x370567fa
  4046ad:	pushf  
  4046ae:	sbb    DWORD PTR [edi+0x3c],0xf8b9fcc2
  4046b5:	jns    0x40470a
  4046b7:	xor    DWORD PTR [ecx+0x371e5fce],esi
  4046bd:	retf   
  4046be:	cmp    esi,DWORD PTR [edi-0x2d8fe411]
  4046c4:	sbb    BYTE PTR [ebx],ch
  4046c6:	mov    BYTE PTR [ecx-0x2d0e0c10],bh
  4046cc:	push   ss
  4046cd:	stc    
  4046ce:	stc    
  4046cf:	mov    edx,DWORD PTR [eax+0x3f]
  4046d2:	push   es
  4046d3:	call   0x65bb:0x1bd76994
  4046da:	inc    esp
  4046db:	pop    ebp
  4046dc:	xchg   esi,eax
  4046dd:	cmovns edx,DWORD PTR [edx-0x1fb49ebe]
  4046e4:	ss xchg edi,eax
  4046e6:	sub    edi,DWORD PTR [edi]
  4046e8:	jl     0x404711
  4046ea:	dec    eax
  4046eb:	push   0x5
  4046ed:	or     BYTE PTR ds:0x7ad733eb,cl
  4046f3:	push   cs
  4046f4:	or     BYTE PTR [ecx-0x6c0ed4ff],al
  4046fa:	mov    al,ds:0x423b81c6
  4046ff:	cmp    DWORD PTR [ecx-0x68],ecx
  404702:	pop    edx
  404703:	mov    WORD PTR [ebp+0x64e5f57f],ss
  404709:	cs cmp ch,ch
  40470c:	dec    esp
  40470d:	popf   
  40470e:	loope  0x404749
  404710:	dec    ebp
  404711:	lgs    esi,FWORD PTR [ecx-0x4d]
  404715:	mov    ds:0xcf23928d,eax
  40471a:	mov    ah,0xc4
  40471c:	jae    0x40471a
  40471e:	push   esp
  40471f:	popf   
  404720:	in     eax,dx
  404721:	pusha  
  404722:	imul   esi,DWORD PTR [edi],0xffffff91
  404725:	dec    edx
  404726:	mov    esi,0x2bc69dbd
  40472b:	int    0x2e
  40472d:	jl     0x404775
  40472f:	jmp    0xf6c9:0x2035d4fb
  404736:	pop    esi
  404737:	dec    eax
  404738:	sub    dl,0x28
  40473b:	ss jns 0x404778
  40473e:	retf   
  40473f:	dec    esp
  404740:	cld    
  404741:	scas   eax,DWORD PTR es:[edi]
  404742:	sub    BYTE PTR [ebp-0x3c],dh
  404745:	ror    BYTE PTR [esi+0x534f3346],0x20
  40474c:	lock fimul WORD PTR [ecx-0x4b25e482]
  404753:	push   edi
  404754:	cmp    ah,BYTE PTR ds:0xcde52c83
  40475a:	pop    edi
  40475b:	dec    ecx
  40475c:	cmp    bh,cl
  40475e:	fwait
  40475f:	test   BYTE PTR [ebx-0x65e20837],0xa6
  404766:	(bad)  [ecx+edx*1+0x7fb6010c]
  40476d:	loopne 0x4047ac
  40476f:	push   cs
  404770:	clc    
  404771:	jmp    0x2552:0xeff1e201
  404778:	add    edx,DWORD PTR [edx+0x5b]
  40477b:	sbb    eax,0x306e7fd5
  404780:	js     0x404777
  404782:	add    eax,0x87f6df96
  404787:	ss mov ebp,0x2c1c9934
  40478d:	or     eax,0x6ff7a5b1
  404792:	pop    esp
  404793:	xchg   ebx,eax
  404794:	or     DWORD PTR ds:[esi],ebx
  404797:	int3   
  404798:	fadd   QWORD PTR [esi]
  40479a:	cli    
  40479b:	ret    
  40479c:	xchg   ebp,eax
  40479d:	xor    edi,ebp
  40479f:	pop    ds
  4047a0:	sar    BYTE PTR [edi+0x1],1
  4047a3:	ds ss jecxz 0x4047b5
  4047a7:	int    0x31
  4047a9:	and    cl,BYTE PTR ds:0x97689a8e
  4047af:	sub    edx,0xffffff91
  4047b2:	fld    DWORD PTR [ecx-0x18]
  4047b5:	outs   dx,DWORD PTR ds:[esi]
  4047b6:	and    eax,0x3c52fdf8
  4047bb:	cli    
  4047bc:	mov    al,ds:0x67c04792
  4047c1:	outs   dx,BYTE PTR ds:[esi]
  4047c2:	retf   0xd91d
  4047c5:	add    dl,BYTE PTR [ecx]
  4047c7:	pop    edi
  4047c8:	iret   
  4047c9:	xchg   ebx,eax
  4047ca:	cmp    eax,0x71866b71
  4047cf:	xor    ebx,eax
  4047d1:	imul   ebx,DWORD PTR [esi-0x426c73ed],0x6a
  4047d8:	mov    cl,BYTE PTR [ebx+0x3e]
  4047db:	outs   dx,DWORD PTR ds:[esi]
  4047dc:	dec    edi
  4047dd:	(bad)  
  4047de:	pop    edi
  4047df:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4047e1:	mov    ch,0xb3
  4047e3:	in     al,0xd1
  4047e5:	add    eax,0xf50f968f
  4047ea:	sbb    ebx,DWORD PTR [eax+ecx*1]
  4047ed:	dec    esp
  4047ee:	jp     0x4047a4
  4047f0:	div    DWORD PTR [esi+0x3a5e1a6]
  4047f6:	std    
  4047f7:	mov    ss,WORD PTR [esi]
  4047f9:	mov    bh,0xad
  4047fb:	sbb    eax,0xd9d02291
  404800:	clc    
  404801:	push   edx
  404802:	sbb    cl,BYTE PTR [eax]
  404804:	hlt    
  404805:	enter  0x58df,0x4c
  404809:	(bad)  
  40480a:	sub    al,0xd4
  40480c:	xor    ebx,DWORD PTR [esi-0x7c]
  40480f:	inc    edx
  404810:	retf   0x30fa
  404813:	cmp    DWORD PTR [edi+0x21],0xffffffeb
  404817:	in     eax,dx
  404818:	xor    eax,0x897f5ed4
  40481d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40481e:	(bad)  
  40481f:	ss popa 
  404821:	mov    bh,0xd6
  404823:	add    eax,0x42f4318e
  404828:	cwde   
  404829:	std    
  40482a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40482b:	iret   
  40482c:	xchg   edx,eax
  40482d:	out    0x9e,al
  40482f:	mov    ds:0xe5f01352,al
  404834:	(bad)  
  404835:	cmp    BYTE PTR [esi+0x1f740847],cl
  40483b:	mov    dh,0x60
  40483d:	mov    bl,0x86
  40483f:	into   
  404840:	jne    0x40486a
  404842:	mul    BYTE PTR [edi+0x13]
  404845:	cmc    
  404846:	mov    WORD PTR [eax+0x5e4ffbe9],es
  40484c:	aas    
  40484d:	call   0x2840ee75
  404852:	adc    bh,ch
  404854:	retf   
  404855:	mov    ebp,0x4c2a7cfb
  40485a:	push   ebx
  40485b:	cdq    
  40485c:	and    eax,esi
  40485e:	std    
  40485f:	push   edx
  404860:	addr16 and eax,0x3c44f579
  404866:	push   ebx
  404867:	clc    
  404868:	mov    esi,0xb01682c6
  40486d:	xchg   edi,eax
  40486e:	iret   
  40486f:	daa    
  404870:	sub    edx,DWORD PTR [eax-0x7b31d2e0]
  404876:	mov    DWORD PTR [ebx+edx*4-0x3f],ebp
  40487a:	es pop ebx
  40487c:	lea    ebp,[edi]
  40487e:	sub    eax,0xedf3b08f
  404883:	imul   eax,esi,0x2c
  404886:	cmp    bh,bl
  404888:	lods   eax,DWORD PTR ds:[esi]
  404889:	xor    DWORD PTR [edi],0x28f78845
  40488f:	pusha  
  404890:	inc    esp
  404891:	lahf   
  404892:	mov    ecx,0x181e04e0
  404897:	push   ebx
  404898:	out    dx,al
  404899:	ja     0x4048ca
  40489b:	dec    ebx
  40489c:	and    DWORD PTR [ecx-0x71],esi
  40489f:	inc    ebx
  4048a0:	das    
  4048a1:	pop    eax
  4048a2:	bswap  ebp
  4048a4:	rcr    BYTE PTR [ebp+0x42],1
  4048a7:	xchg   esi,eax
  4048a8:	cwde   
  4048a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048aa:	mov    bl,0xaa
  4048ac:	xchg   ebx,eax
  4048ad:	dec    esp
  4048ae:	lods   eax,DWORD PTR ds:[esi]
  4048af:	push   ebx
  4048b0:	xchg   esi,eax
  4048b1:	jo     0x40487c
  4048b3:	cmp    ch,BYTE PTR [ebx+0x60]
  4048b6:	ficom  WORD PTR [esi]
  4048b8:	lods   eax,DWORD PTR ds:[esi]
  4048b9:	dec    eax
  4048ba:	mov    dh,0x3e
  4048bc:	mov    edx,0xa2a24d3b
  4048c1:	cmp    DWORD PTR [ecx+0x3d],eax
  4048c4:	sahf   
  4048c5:	mov    ds:0xc8c993e,al
  4048ca:	push   ecx
  4048cb:	fs xchg edx,esi
  4048ce:	mov    ?,WORD PTR [esi]
  4048d0:	xchg   DWORD PTR [edx],ebp
  4048d2:	int    0x3
  4048d4:	sbb    ah,BYTE PTR [eax-0x26522483]
  4048da:	retf   0x6f3c
  4048dd:	out    0xed,eax
  4048df:	retf   0xcb0f
  4048e2:	lfs    ebp,FWORD PTR [edx]
  4048e5:	mov    bl,BYTE PTR [ebp+0x48bfcff3]
  4048eb:	pop    esp
  4048ec:	mov    bh,0x75
  4048ee:	push   ss
  4048ef:	xor    esi,esi
  4048f1:	push   ecx
  4048f2:	fstp   st(1)
  4048f4:	lahf   
  4048f5:	adc    eax,DWORD PTR [edi+edi*2-0x5418b431]
  4048fc:	scas   eax,DWORD PTR es:[edi]
  4048fd:	shl    DWORD PTR [edi+0x57],1
  404900:	push   ds
  404901:	sbb    bl,BYTE PTR [esi]
  404903:	fwait
  404904:	adc    bl,ch
  404906:	lods   eax,DWORD PTR ds:[esi]
  404907:	retf   
  404908:	and    DWORD PTR ds:[edx-0x74bb33e0],esp
  40490f:	arpl   WORD PTR [ecx+eax*1-0x4a],bp
  404913:	cdq    
  404914:	loopne 0x404908
  404916:	mov    ch,0x31
  404918:	adc    bl,BYTE PTR [ebx]
  40491a:	stos   BYTE PTR es:[edi],al
  40491b:	dec    ebp
  40491c:	imul   ecx,DWORD PTR [ecx],0x5089da1f
  404922:	das    
  404923:	stos   BYTE PTR es:[edi],al
  404924:	(bad)  
  404925:	sub    bl,BYTE PTR [ecx+0x1fda068f]
  40492b:	pop    es
  40492c:	add    ebx,DWORD PTR ds:0xea0da579
  404932:	xor    al,0xcb
  404934:	adc    al,0xe9
  404936:	ret    
  404937:	push   ss
  404938:	xor    al,0xdc
  40493a:	shl    BYTE PTR [ecx+0x57],1
  40493d:	pop    edi
  40493e:	jl     0x404936
  404940:	js     0x4048db
  404942:	push   ebp
  404943:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404944:	jno    0x4048e8
  404946:	inc    ecx
  404947:	pop    ss
  404948:	shl    edx,cl
  40494a:	fld    DWORD PTR [edi]
  40494c:	sar    BYTE PTR [ebp+0x67],1
  40494f:	aaa    
  404950:	test   eax,0x89c1d987
  404955:	mov    WORD PTR es:[ebx+ebp*1+0x6],?
  40495a:	pop    esp
  40495b:	aad    0x70
  40495d:	cs jb  0x4048f2
  404960:	into   
  404961:	push   cs
  404962:	mov    esp,0x718d807d
  404967:	or     al,0xbd
  404969:	ret    
  40496a:	push   ds
  40496b:	xor    al,0xd8
  40496d:	out    0x3c,eax
  40496f:	imul   esp,DWORD PTR [edx+0x545a9a4],0x5b
  404976:	add    cl,BYTE PTR [edi+0x70]
  404979:	daa    
  40497a:	cmp    al,0xfa
  40497c:	push   edi
  40497d:	mov    edx,0x3358e737
  404982:	xchg   esi,eax
  404983:	ja     0x404988
  404985:	lods   eax,DWORD PTR ds:[esi]
  404986:	imul   DWORD PTR [esp+esi*8]
  404989:	mov    dh,0x4f
  40498b:	sar    dh,1
  40498d:	jno    0x4049b0
  40498f:	add    eax,0x1cc32691
  404994:	ror    esp,0xcd
  404997:	mov    dh,0x9f
  404999:	stc    
  40499a:	xor    eax,0x1049f2fe
  40499f:	lods   al,BYTE PTR ds:[esi]
  4049a0:	popa   
  4049a1:	sar    DWORD PTR [eax+0xc8b8e8c],0x89
  4049a8:	push   ss
  4049a9:	call   0x1fcc5be4
  4049ae:	call   0x91dde830
  4049b3:	mov    al,0x81
  4049b5:	cmp    BYTE PTR [edx+ecx*2+0x7e],ch
  4049b9:	addr16 rcl ebp,cl
  4049bc:	push   ebp
  4049bd:	or     edx,0x27
  4049c0:	mov    ch,BYTE PTR [ecx]
  4049c2:	fdivr  QWORD PTR [ebx]
  4049c4:	adc    DWORD PTR [ebx+ebx*2+0x1b],0x10debcf2
  4049cc:	pushf  
  4049cd:	ret    0x7bf1
  4049d0:	push   esp
  4049d1:	lahf   
  4049d2:	jp     0x4049d3
  4049d4:	cmp    ch,0x75
  4049d7:	cmp    BYTE PTR fs:0x149b8c9,dh
  4049de:	call   0xe7ee6d23
  4049e3:	scas   eax,DWORD PTR es:[edi]
  4049e4:	fcomp  st(4)
  4049e6:	stos   BYTE PTR es:[edi],al
  4049e7:	or     eax,ebp
  4049e9:	and    bl,BYTE PTR [ebx]
  4049eb:	sub    dl,BYTE PTR [ebx]
  4049ed:	jge    0x404a1f
  4049ef:	xchg   edx,eax
  4049f0:	ret    0x76ba
  4049f3:	scas   eax,DWORD PTR es:[edi]
  4049f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049f5:	fdivr  QWORD PTR [ecx-0x7]
  4049f8:	dec    ecx
  4049f9:	mov    ebx,0xd278ad7b
  4049fe:	mov    al,0x5a
  404a00:	jmp    0xe730:0xc25f2d8b
  404a07:	dec    esp
  404a08:	cmp    al,0xa2
  404a0a:	sub    al,0xe8
  404a0c:	rol    eax,1
  404a0e:	push   esp
  404a0f:	call   0xdacc:0x3399b5b4
  404a16:	cmc    
  404a17:	iret   
  404a18:	enter  0x3603,0x86
  404a1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a1d:	sbb    esp,DWORD PTR [ebx]
  404a1f:	dec    esi
  404a20:	sbb    BYTE PTR [edi+ebp*1-0x7673d57e],ah
  404a27:	fistp  DWORD PTR [esi-0x5a]
  404a2a:	cld    
  404a2b:	repnz or BYTE PTR [edi],al
  404a2e:	jl     0x404a78
  404a30:	mov    WORD PTR [eax],ss
  404a32:	mov    cl,0xf2
  404a34:	into   
  404a35:	xchg   bx,ax
  404a37:	lock mov DWORD PTR [ebp-0x45ca1028],esi
  404a3e:	gs push eax
  404a40:	or     BYTE PTR [eax-0xe],ch
  404a43:	sahf   
  404a44:	xor    edi,ebx
  404a46:	ret    0x904e
  404a49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a4a:	ins    DWORD PTR es:[edi],dx
  404a4b:	(bad)  
  404a4c:	mov    bl,cl
  404a4e:	cmp    eax,0x9d72c580
  404a53:	and    eax,0xadeeec9
  404a58:	ret    0x2889
  404a5b:	pop    es
  404a5c:	pusha  
  404a5d:	lods   al,BYTE PTR ds:[esi]
  404a5e:	xchg   DWORD PTR [edx-0x593cbd79],edx
  404a64:	jl     0x404a1f
  404a66:	inc    edx
  404a67:	fsubrp st(0),st
  404a69:	aas    
  404a6a:	add    bh,bl
  404a6c:	adc    al,0x43
  404a6e:	mov    eax,0x83e1b7b5
  404a73:	shl    BYTE PTR [ebp+0x2],0xfc
  404a77:	mov    edx,ebx
  404a79:	push   eax
  404a7a:	xchg   esp,eax
  404a7b:	adc    al,0x92
  404a7d:	cmp    DWORD PTR [ecx],edx
  404a7f:	xor    dh,BYTE PTR [ecx]
  404a81:	lods   eax,DWORD PTR ds:[esi]
  404a82:	jmp    0x404a0d
  404a84:	adc    BYTE PTR [eax+ebp*2-0x5f1fb92c],dl
  404a8b:	iret   
  404a8c:	(bad)  
  404a8d:	push   ss
  404a8e:	pop    esi
  404a8f:	mov    edx,0x1533ed64
  404a94:	cli    
  404a95:	scas   eax,DWORD PTR es:[di]
  404a97:	dec    bp
  404a99:	icebp  
  404a9a:	mov    bh,BYTE PTR [eax]
  404a9c:	seta   BYTE PTR [ebp-0x77]
  404aa0:	aam    0xaa
  404aa2:	mov    ah,0x4
  404aa4:	fistp  WORD PTR [edi-0xa449a4f]
  404aaa:	scas   eax,DWORD PTR es:[edi]
  404aab:	aad    0x7d
  404aad:	add    al,0xe8
  404aaf:	push   ebx
  404ab0:	lods   al,BYTE PTR ds:[esi]
  404ab1:	or     esi,0x1ff78bc7
  404ab7:	jo     0x404a69
  404ab9:	dec    esi
  404aba:	push   ss
  404abb:	call   esi
  404abd:	sbb    DWORD PTR [edi],ecx
  404abf:	ja     0x404aa9
  404ac1:	push   edx
  404ac2:	add    bl,BYTE PTR [ebp+0x440223b0]
  404ac8:	pop    edx
  404ac9:	cli    
  404aca:	daa    
  404acb:	mov    ds:0x977adbc2,eax
  404ad0:	nop
  404ad1:	mov    ebx,0x6cd88543
  404ad6:	dec    ebp
  404ad7:	(bad)  
  404ad8:	repnz stos DWORD PTR es:[edi],eax
  404ada:	hlt    
  404adb:	(bad)  
  404adc:	xor    esi,DWORD PTR [edi+0x29]
  404adf:	aam    0xbb
  404ae1:	push   eax
  404ae2:	jge    0x404abe
  404ae4:	lods   al,BYTE PTR ds:[esi]
  404ae5:	and    eax,0x170d4ec8
  404aea:	pop    edi
  404aeb:	mov    al,ds:0x1453576e
  404af0:	fimul  WORD PTR [edx-0x21]
  404af3:	xchg   ecx,eax
  404af4:	push   ebp
  404af5:	in     al,dx
  404af6:	test   ax,0x7123
  404afa:	cmp    ah,BYTE PTR [esi+0x579d6581]
  404b00:	clc    
  404b01:	push   esi
  404b02:	arpl   si,bp
  404b04:	xchg   esi,eax
  404b05:	and    DWORD PTR [esi+0x8],edi
  404b08:	xor    BYTE PTR [ecx],ah
  404b0a:	shl    DWORD PTR [ecx-0x14],1
  404b0d:	les    edi,FWORD PTR [eax+0x3ae670bf]
  404b13:	pop    ebp
  404b14:	in     eax,dx
  404b15:	mov    BYTE PTR [eax-0xa],0xa7
  404b19:	mov    ecx,0x833d80e6
  404b1e:	push   cs
  404b1f:	sahf   
  404b20:	pusha  
  404b21:	test   eax,0x4d14798d
  404b26:	xadd   BYTE PTR [ebx],dh
  404b29:	sub    dh,BYTE PTR [ebx-0x1f]
  404b2c:	dec    edx
  404b2d:	pushf  
  404b2e:	mov    WORD PTR [edi+0x7d],fs
  404b31:	push   0xd51c5346
  404b36:	int3   
  404b37:	loope  0x404ae2
  404b39:	bts    esi,ecx
  404b3c:	arpl   WORD PTR [edi+0x8],ax
  404b3f:	mov    al,ds:0x702a0171
  404b44:	iret   
  404b45:	loope  0x404b1a
  404b47:	jnp    0x404acd
  404b49:	in     al,0x28
  404b4b:	hlt    
  404b4c:	daa    
  404b4d:	cmp    ecx,DWORD PTR [ecx]
  404b4f:	and    bl,BYTE PTR [edx+0x5e]
  404b52:	mov    esi,0x6dba8356
  404b57:	jp     0x404b38
  404b59:	cli    
  404b5a:	hlt    
  404b5b:	dec    si
  404b5d:	in     eax,dx
  404b5e:	mov    ebp,0xef24efc6
  404b63:	mov    ebp,0x4d79bc6a
  404b68:	test   BYTE PTR [edi+0x7b2df0cb],0xdd
  404b6f:	and    esp,esp
  404b71:	into   
  404b72:	shl    DWORD PTR [ecx-0x57],cl
  404b75:	cmp    bh,ch
  404b77:	jnp    0x404b6e
  404b79:	mov    BYTE PTR [esi-0x5c010b83],cl
  404b7f:	pop    edi
  404b80:	mov    al,0xa0
  404b82:	daa    
  404b83:	iret   
  404b84:	neg    BYTE PTR [edi+0x5e]
  404b87:	int    0x3b
  404b89:	pop    DWORD PTR [eax-0x71]
  404b8c:	cmp    ch,0x5e
  404b8f:	ds jae 0x404b3b
  404b92:	ss je  0x404b8f
  404b95:	sbb    ah,bl
  404b97:	mov    ecx,DWORD PTR [esi-0x2a62a7d1]
  404b9d:	jns    0x404b4c
  404b9f:	xrelease mov DWORD PTR [ecx],esi
  404ba2:	mov    dl,0x7b
  404ba4:	fwait
  404ba5:	in     eax,dx
  404ba6:	ins    DWORD PTR es:[edi],dx
  404ba7:	cs pop ss
  404ba9:	cmp    ebp,ebp
  404bab:	test   eax,0x60f69361
  404bb0:	mov    gs,WORD PTR [ebx*4-0x2fd9126c]
  404bb7:	cmc    
  404bb8:	(bad)  
  404bb9:	jb     0x404bc1
  404bbb:	add    ebx,DWORD PTR ds:0xb384ba66
  404bc1:	push   0x73cd824f
  404bc6:	das    
  404bc7:	or     DWORD PTR ds:0x24350a6e,ebp
  404bcd:	dec    esi
  404bce:	or     DWORD PTR [esi+ebx*1],ebx
  404bd1:	push   ss
  404bd2:	mov    cl,0xf7
  404bd4:	push   edi
  404bd5:	ins    DWORD PTR es:[edi],dx
  404bd6:	or     cl,BYTE PTR [edx]
  404bd8:	pop    ebp
  404bd9:	and    ebx,ebx
  404bdb:	gs pop es
  404bdd:	sbb    al,0xa5
  404bdf:	push   es
  404be0:	mov    ch,0xe3
  404be2:	cli    
  404be3:	shl    DWORD PTR [ebp+0x1f27f68d],cl
  404be9:	(bad)  
  404bea:	pop    esi
  404beb:	jnp    0x404c39
  404bed:	repz test DWORD PTR [ebp-0x2],eax
  404bf1:	pushf  
  404bf2:	push   0x7c
  404bf4:	mov    esp,DWORD PTR [edi-0x45]
  404bf7:	mov    cl,BYTE PTR [edx+ebp*2-0x1]
  404bfb:	popf   
  404bfc:	mov    bl,0xdd
  404bfe:	mov    ebp,0xef2de4b9
  404c03:	fild   QWORD PTR [esi+ebx*1]
  404c06:	adc    al,0x7f
  404c08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c09:	jae    0x404c2d
  404c0b:	mov    edx,0xe35ef9f6
  404c10:	mov    ecx,0xe838500c
  404c15:	enter  0xc05f,0xa
  404c19:	aam    0x7d
  404c1b:	and    cl,BYTE PTR [ebx+0x25]
  404c1e:	(bad)  
  404c1f:	push   edi
  404c20:	xchg   ebp,eax
  404c21:	dec    edx
  404c22:	iret   
  404c23:	into   
  404c24:	push   ebp
  404c25:	cs in  al,dx
  404c27:	lea    ecx,[edx+edi*1]
  404c2a:	shl    BYTE PTR [esi-0x11],1
  404c2d:	and    BYTE PTR ds:0xa7dc4d6a,bl
  404c33:	xchg   ebp,eax
  404c34:	jle    0x404c4b
  404c36:	or     bh,BYTE PTR [ebp-0x42]
  404c39:	sbb    al,0x83
  404c3b:	pop    ecx
  404c3c:	adc    al,0xb
  404c3e:	or     ecx,DWORD PTR [ebp-0x4f]
  404c41:	mov    dl,0x90
  404c43:	add    BYTE PTR [ebp+0x7acaab62],ch
  404c49:	sbb    bh,BYTE PTR [esi-0x6b2d1d90]
  404c4f:	mov    edi,0xbef4107c
  404c54:	xchg   BYTE PTR [eax],bl
  404c56:	(bad)  
  404c57:	popf   
  404c58:	xchg   ebp,eax
  404c59:	fist   DWORD PTR [esp+ebx*8-0x53392635]
  404c60:	jnp    0x404c03
  404c62:	or     ecx,DWORD PTR ds:0x7f6119cb
  404c68:	not    DWORD PTR [edi]
  404c6a:	xor    BYTE PTR [ecx],ch
  404c6c:	and    eax,0xec85d19
  404c71:	lea    eax,[ebp+0x53df624d]
  404c77:	pop    ss
  404c78:	gs loopne 0x404c4f
  404c7b:	jne    0x404cf1
  404c7d:	sub    bh,BYTE PTR [ecx+eiz*2]
  404c80:	xor    DWORD PTR [ebp-0x58],ebp
  404c83:	lods   al,BYTE PTR ds:[esi]
  404c85:	adc    BYTE PTR [esi+ebx*1],cl
  404c88:	nop
  404c89:	sub    bl,BYTE PTR [ebp-0x3ed54db0]
  404c8f:	(bad)  
  404c90:	sti    
  404c91:	xchg   ecx,eax
  404c92:	pop    esi
  404c93:	push   ebx
  404c94:	pop    ds
  404c95:	pusha  
  404c96:	shr    eax,0x94
  404c99:	fild   DWORD PTR [ebp+0x3a53d98f]
  404c9f:	adc    al,0xf3
  404ca1:	stos   BYTE PTR es:[edi],al
  404ca2:	mov    esi,0x4843a4a2
  404ca7:	out    0x4d,eax
  404ca9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404caa:	aas    
  404cab:	jno    0x404c4f
  404cad:	pop    edi
  404cae:	jbe    0x404cc3
  404cb0:	imul   eax,DWORD PTR [edi],0x64d215ac
  404cb6:	push   DWORD PTR [esi+ecx*4-0x22]
  404cba:	test   cl,dh
  404cbc:	push   es
  404cbd:	cmp    bl,BYTE PTR [edx]
  404cbf:	push   esp
  404cc0:	not    DWORD PTR [ecx+ebx*4+0x4c675137]
  404cc7:	xor    edx,ebp
  404cc9:	push   0xd3027063
  404cce:	mov    dh,BYTE PTR [edx-0x2c]
  404cd1:	js     0x404ce3
  404cd3:	data16 into 
  404cd5:	retf   
  404cd6:	ins    DWORD PTR es:[edi],dx
  404cd7:	fwait
  404cd8:	out    0x15,eax
  404cda:	or     al,0x1e
  404cdc:	repz or DWORD PTR [ecx+0xd],ebx
  404ce0:	ret    
  404ce1:	push   0xada11abc
  404ce6:	hlt    
  404ce7:	je     0x404c9b
  404ce9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cea:	mov    edi,0x434904c9
  404cef:	pop    ebp
  404cf0:	mov    ecx,0x84d812fd
  404cf5:	into   
  404cf6:	xchg   ecx,eax
  404cf7:	dec    esi
  404cf8:	test   esi,esp
  404cfa:	sub    DWORD PTR [ecx+0x1c531943],esi
  404d00:	nop
  404d01:	aaa    
  404d02:	or     bh,BYTE PTR [eax-0x46]
  404d05:	dec    esi
  404d06:	sub    BYTE PTR [edx-0x33],ah
  404d09:	daa    
  404d0a:	sahf   
  404d0b:	(bad)  [edx+0x4b]
  404d0e:	arpl   WORD PTR [eax],sp
  404d10:	daa    
  404d11:	push   ebx
  404d12:	test   BYTE PTR [esi-0x41],ch
  404d15:	fs sbb dl,dl
  404d18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404d19:	jne    0x404d36
  404d1b:	mov    eax,0x5f181c14
  404d20:	sub    DWORD PTR [eax+ecx*4],ebx
  404d23:	dec    esp
  404d24:	push   edx
  404d25:	popf   
  404d26:	adc    BYTE PTR [ecx+0x6],dh
  404d29:	dec    ebx
  404d2a:	sub    ecx,DWORD PTR [esp+eax*4]
  404d2d:	int3   
  404d2e:	cmp    ebx,DWORD PTR ds:0xe0f13666
  404d34:	cmc    
  404d35:	jns    0x404d65
  404d37:	jbe    0x404cf4
  404d39:	shr    ch,1
  404d3b:	fcomp  QWORD PTR [ecx+0xc]
  404d3e:	in     eax,0x2b
  404d40:	cmp    bl,al
  404d42:	fidiv  DWORD PTR [edx-0x20]
  404d45:	mov    ds:0x1a65ba96,al
  404d4a:	cdq    
  404d4b:	iret   
  404d4c:	test   al,0x54
  404d4e:	push   cs
  404d4f:	pop    ebx
  404d50:	loope  0x404cf0
  404d52:	cmc    
  404d53:	pop    ecx
  404d54:	or     al,BYTE PTR [ebp-0x730c0511]
  404d5a:	push   es
  404d5b:	jns    0x404cf1
  404d5d:	lods   al,BYTE PTR ds:[esi]
  404d5e:	loope  0x404dc9
  404d60:	popf   
  404d61:	dec    edx
  404d62:	xchg   esi,eax
  404d63:	or     BYTE PTR [esi-0x18],bh
  404d66:	or     al,0x8d
  404d68:	jl     0x404dbf
  404d6a:	sbb    al,0xa3
  404d6c:	ror    DWORD PTR [esi+0x4e],1
  404d6f:	outs   dx,DWORD PTR ds:[esi]
  404d70:	adc    cl,bh
  404d72:	jns    0x404df1
  404d74:	in     al,dx
  404d75:	xchg   ebx,eax
  404d76:	inc    eax
  404d77:	clc    
  404d78:	adc    eax,0x97d25f8f
  404d7d:	pop    ebp
  404d7e:	and    eax,0xb2297d92
  404d83:	int    0xf
  404d85:	cmc    
  404d86:	xchg   BYTE PTR [ebx+0x4f5c4a71],ch
  404d8c:	xchg   ah,bh
  404d8e:	icebp  
  404d8f:	ins    BYTE PTR es:[edi],dx
  404d90:	or     al,0x24
  404d92:	lds    ecx,FWORD PTR [ecx+0x75acfc57]
  404d98:	popf   
  404d99:	scas   eax,DWORD PTR es:[edi]
  404d9a:	mov    ah,0x4
  404d9c:	push   edx
  404d9d:	dec    ebx
  404d9e:	lds    esi,FWORD PTR [ecx+ebx*4-0x7ad5c67c]
  404da5:	adc    eax,0x87f40c04
  404daa:	jns    0x404de0
  404dac:	lea    eax,[ecx-0x7]
  404daf:	dec    edi
  404db0:	adc    al,0x2f
  404db2:	pushf  
  404db3:	push   esp
  404db4:	retf   0xd794
  404db7:	pop    ss
  404db8:	test   DWORD PTR [eax],eax
  404dba:	in     eax,0xb3
  404dbc:	cli    
  404dbd:	cmp    esi,DWORD PTR [ebx-0x39]
  404dc0:	push   0x9a589874
  404dc5:	fdiv   QWORD PTR [ebp-0x113da55d]
  404dcb:	or     eax,0x71bc679b
  404dd0:	or     eax,0xbf1bc9a
  404dd5:	and    al,0x7e
  404dd7:	and    ch,cl
  404dd9:	sub    al,0xe5
  404ddb:	xor    eax,0xbccb12d6
  404de0:	mov    esp,0x6e81cbdc
  404de5:	std    
  404de6:	mov    esi,0x75eabfbf
  404deb:	addr16 xor eax,0x3fe7f66a
  404df1:	not    BYTE PTR [esi]
  404df3:	sub    eax,0xbaa1ff0d
  404df8:	mov    al,ds:0xbb73899f
  404dfd:	xchg   ebx,eax
  404dfe:	dec    esp
  404dff:	xor    DWORD PTR [ebp-0x37],eax
  404e02:	cmp    al,0xe9
  404e04:	push   edx
  404e05:	sbb    dh,BYTE PTR ds:0x662830ff
  404e0b:	shld   DWORD PTR [ecx+ebp*4],esi,cl
  404e0f:	scas   eax,DWORD PTR es:[edi]
  404e10:	xor    ebp,DWORD PTR [edx+ebp*2-0x58]
  404e14:	or     BYTE PTR [edx-0x18],bl
  404e17:	mov    ebp,0x22edfee1
  404e1c:	scas   eax,DWORD PTR es:[edi]
  404e1d:	popa   
  404e1e:	int3   
  404e1f:	jge    0x404de1
  404e21:	jo     0x404ddf
  404e23:	sahf   
  404e24:	arpl   si,ax
  404e26:	jne    0x404e96
  404e28:	inc    edx
  404e29:	push   esp
  404e2a:	cmp    eax,edi
  404e2c:	or     eax,0x77dd0767
  404e31:	adc    ebp,DWORD PTR [esi+0x77]
  404e34:	popa   
  404e35:	push   ebx
  404e36:	ret    
  404e37:	daa    
  404e38:	mov    bl,0x2
  404e3a:	aas    
  404e3b:	dec    esp
  404e3c:	or     al,0x55
  404e3e:	jle    0x404e87
  404e40:	fstp   DWORD PTR [edi-0x3ac1cc78]
  404e46:	repnz repz push ecx
  404e49:	loop   0x404e12
  404e4b:	sbb    BYTE PTR [esi+edx*4-0x107bbbc6],ah
  404e52:	call   0x150bbd04
  404e57:	jmp    0x404ea4
  404e59:	ret    
  404e5a:	pop    ecx
  404e5b:	dec    esi
  404e5c:	pop    eax
  404e5d:	inc    edx
  404e5e:	shl    DWORD PTR [ecx-0x1fee34b2],0x4
  404e65:	idiv   DWORD PTR [ebp+0x3a]
  404e68:	xchg   esi,eax
  404e69:	int3   
  404e6a:	sub    al,0xe8
  404e6c:	mov    dh,0x92
  404e6e:	cmp    dl,ah
  404e70:	enter  0x658f,0x96
  404e74:	cld    
  404e75:	sbb    BYTE PTR [edi+0xa8321f9],dh
  404e7b:	pop    esi
  404e7c:	mov    ebx,0x576e7431
  404e81:	mov    al,0x49
  404e83:	nop
  404e84:	adc    dl,BYTE PTR [eax+0x3e]
  404e87:	add    ah,BYTE PTR [esi+0x98c54d3]
  404e8d:	daa    
  404e8e:	add    eax,0x5e035fb7
  404e93:	xor    al,0xee
  404e95:	inc    ecx
  404e96:	fwait
  404e97:	push   ds
  404e98:	xchg   ebp,eax
  404e99:	inc    edi
  404e9a:	mov    bh,0xbd
  404e9c:	push   eax
  404e9d:	loopne 0x404f1d
  404e9f:	je     0x404ef3
  404ea1:	jo     0x404efc
  404ea3:	in     eax,0x84
  404ea5:	add    esi,edi
  404ea7:	sub    al,0xe7
  404ea9:	mov    al,0xae
  404eab:	push   esp
  404eac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ead:	retf   
  404eae:	dec    edi
  404eaf:	mov    al,ds:0xd5e374fd
  404eb4:	adc    DWORD PTR [ebx+esi*1-0x27d4aa4c],0xd2741b97
  404ebf:	and    eax,0x6fcc3314
  404ec4:	xor    edx,DWORD PTR [ecx]
  404ec6:	retf   
  404ec7:	xchg   edx,eax
  404ec8:	push   ebp
  404ec9:	shr    BYTE PTR [eax-0x17],1
  404ecc:	push   edi
  404ecd:	rol    dh,0x4f
  404ed0:	les    edi,FWORD PTR [edx-0x5a8306c7]
  404ed6:	cdq    
  404ed7:	pushf  
  404ed8:	pusha  
  404ed9:	sti    
  404eda:	mov    al,ds:0xd0f56c16
  404edf:	test   al,0xb9
  404ee1:	mov    es:0x435fb9ab,al
  404ee7:	sbb    esi,DWORD PTR [eax]
  404ee9:	pop    es
  404eea:	rcl    DWORD PTR ds:0xb363e12a,0x8f
  404ef1:	call   0x3b47:0x16ab4ab7
  404ef8:	sbb    bh,ch
  404efa:	jl     0x404f4a
  404efc:	jge    0x404e84
  404efe:	push   es
  404eff:	(bad)  [eax+0x64afffce]
  404f05:	mov    ebp,0x1b4fdeca
  404f0a:	fistp  QWORD PTR [ecx-0x5e]
  404f0d:	mov    BYTE PTR [ebp+eax*1-0x67cbf50e],0xa9
  404f15:	leave  
  404f16:	xchg   eax,ebx
  404f18:	inc    ebx
  404f19:	fadd   DWORD PTR [ecx]
  404f1b:	sub    ebp,esp
  404f1d:	mov    ebx,0x4202eaf4
  404f22:	enter  0xe435,0x31
  404f26:	outs   dx,DWORD PTR ds:[esi]
  404f27:	lea    edi,[ecx]
  404f29:	sbb    ebx,edi
  404f2b:	iret   
  404f2c:	inc    eax
  404f2d:	mov    eax,ds:0x511c9476
  404f32:	dec    edx
  404f33:	ret    0xee4d
  404f36:	or     eax,0x30990a2d
  404f3b:	mov    bh,0x45
  404f3d:	aas    
  404f3e:	push   edx
  404f3f:	sbb    eax,0xa466ccc2
  404f44:	adc    ecx,DWORD PTR [edi+0x7a71f63a]
  404f4a:	sub    edx,DWORD PTR [esi+eiz*2]
  404f4d:	or     DWORD PTR [esi-0x43a69f1e],esi
  404f53:	xchg   edx,eax
  404f54:	xchg   ebp,eax
  404f55:	jmp    0xed92c17a
  404f5a:	push   esi
  404f5b:	mov    gs,ebx
  404f5d:	cmc    
  404f5e:	leave  
  404f5f:	gs push ebx
  404f61:	ins    DWORD PTR es:[edi],dx
  404f62:	cmp    DWORD PTR [ecx],ecx
  404f64:	pop    ebp
  404f65:	shl    edi,1
  404f67:	rcr    BYTE PTR [eax],0xef
  404f6a:	cmp    al,0x11
  404f6c:	ret    0xdf8a
  404f6f:	adc    BYTE PTR [ebx-0x74],dh
  404f72:	rol    BYTE PTR [ebx+0x36955b2],cl
  404f78:	fstp   DWORD PTR [eax+0x4b]
  404f7b:	push   esp
  404f7c:	xchg   ebx,eax
  404f7d:	mov    ?,WORD PTR [ebx]
  404f7f:	aam    0xff
  404f81:	sub    ebp,ecx
  404f83:	or     esp,0x45
  404f86:	loop   0x404fa8
  404f88:	add    eax,0x7019da3c
  404f8d:	(bad)  
  404f8e:	mov    ebx,0x690ca849
  404f93:	dec    esi
  404f94:	outs   dx,DWORD PTR ds:[esi]
  404f95:	or     DWORD PTR [ecx-0x5],ecx
  404f98:	inc    bh
  404f9a:	cmp    eax,0xd36223f
  404f9f:	xor    eax,0xd09e1e34
  404fa4:	loope  0x40501d
  404fa6:	cdq    
  404fa7:	xchg   ecx,eax
  404fa8:	and    al,0x71
  404faa:	ss (bad) 
  404fac:	loope  0x404f36
  404fae:	mov    ds:0x3a7d9abe,al
  404fb3:	adc    BYTE PTR [ebx-0x5c0f92da],ah
  404fb9:	mov    ebp,0x9059c087
  404fbe:	cli    
  404fbf:	cmp    eax,0xd43ce168
  404fc4:	xor    eax,0x1b4357a6
  404fc9:	or     ecx,esi
  404fcb:	cmp    al,0x91
  404fcd:	adc    al,0x92
  404fcf:	fs mov bl,0x79
  404fd2:	jecxz  0x404f5b
  404fd4:	pop    ss
  404fd5:	and    al,0xb7
  404fd7:	inc    edi
  404fd8:	adc    BYTE PTR [ebp-0x25],bh
  404fdb:	icebp  
  404fdc:	retf   
  404fdd:	out    0xa8,eax
  404fdf:	repz ds xchg si,ax
  404fe3:	jae    0x404fee
  404fe5:	and    edi,ebp
  404fe7:	add    DWORD PTR [esi-0x70],esi
  404fea:	stos   DWORD PTR es:[edi],eax
  404feb:	dec    edx
  404fec:	push   eax
  404fed:	ins    DWORD PTR es:[edi],dx
  404fee:	daa    
  404fef:	xchg   esp,eax
  404ff0:	rol    BYTE PTR [esi+eax*8-0x64],1
  404ff4:	mov    bl,0xe1
  404ff6:	sub    dh,al
  404ff8:	test   edi,esi
  404ffa:	ret    
  404ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404ffc:	std    
  404ffd:	daa    
  404ffe:	repz cmc 
  405000:	js     0x40507e
  405002:	push   esp
  405003:	xchg   esi,eax
  405004:	or     bh,al
  405006:	mov    ecx,DWORD PTR [ebx+0x3fb57533]
  40500c:	dec    edx
  40500d:	adc    eax,0xe2f60866
  405012:	out    dx,al
  405013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405014:	inc    ebp
  405015:	rol    DWORD PTR ds:0xb0fa2a3c,cl
  40501b:	test   BYTE PTR [eax+0x668cb93a],dh
  405021:	lea    esp,[edi-0x3a]
  405024:	push   esi
  405025:	into   
  405026:	dec    esp
  405027:	mov    WORD PTR [edi],?
  405029:	enter  0xdfbf,0x6c
  40502d:	mov    eax,ds:0x8b3df92
  405032:	xchg   BYTE PTR [ecx+edi*4-0x5ed16d59],al
  405039:	jae    0x40501c
  40503b:	jns    0x405002
  40503d:	pop    eax
  40503e:	add    bh,dh
  405040:	out    0x65,eax
  405042:	rcl    esi,1
  405044:	mov    es,WORD PTR [edx-0x22]
  405047:	mov    cl,0x0
  405049:	push   edi
  40504a:	mov    ds:0x9cecbf9d,eax
  40504f:	or     ebx,edx
  405051:	dec    ecx
  405052:	push   edx
  405053:	sub    al,0xd0
  405055:	ins    BYTE PTR es:[edi],dx
  405056:	and    al,0xb3
  405058:	call   FWORD PTR [edx-0x388ff91f]
  40505e:	cmp    BYTE PTR [edi+ecx*2+0x54e72e89],dl
  405065:	and    edx,0x68
  405068:	sar    dh,cl
  40506a:	fcomp  DWORD PTR [ecx+0x501fc8ea]
  405070:	or     edx,DWORD PTR [edx]
  405072:	xor    ebx,ebp
  405074:	cmp    ah,BYTE PTR [edi-0x59da3d40]
  40507a:	lock push ecx
  40507c:	sub    bl,BYTE PTR [ebp+0x5ac69cfd]
  405082:	cld    
  405083:	pop    ebp
  405084:	adc    DWORD PTR [ecx+0x40b29d2],0xeae6c79
  40508e:	outs   dx,DWORD PTR ds:[esi]
  40508f:	sub    BYTE PTR [edx+0x3b3599f3],bl
  405095:	cld    
  405096:	iret   
  405097:	ret    
  405098:	(bad)  
  40509b:	xchg   ebp,eax
  40509c:	aam    0x77
  40509e:	push   edx
  40509f:	jmp    0xc7f:0xe0ae2626
  4050a6:	in     eax,dx
  4050a7:	dec    ebp
  4050a8:	pop    ds
  4050a9:	pop    esp
  4050aa:	jmp    0x405105
  4050ac:	pop    ds
  4050ad:	rcl    BYTE PTR [eax+0x2a408038],1
  4050b3:	cli    
  4050b4:	(bad)  [ecx-0x56f8bad3]
  4050ba:	push   ebx
  4050bb:	mov    ds:0x284af94b,al
  4050c0:	mov    bh,bh
  4050c2:	jmp    0x12c6:0xca6d203d
  4050c9:	repz cmp ebx,DWORD PTR [esi+0x29]
  4050cd:	nop
  4050ce:	ins    DWORD PTR es:[edi],dx
  4050cf:	enter  0x9f1a,0xf2
  4050d3:	sub    bh,ah
  4050d5:	sar    DWORD PTR [esi-0x5fa77aaf],0x55
  4050dc:	cmp    BYTE PTR [ebp-0x6f62dae5],ah
  4050e2:	inc    ecx
  4050e3:	and    dh,BYTE PTR [edi]
  4050e5:	mov    al,BYTE PTR [ebx-0x69bde444]
  4050eb:	imul   ebx,DWORD PTR [ecx+0x4ccd0129],0xc3c38da3
  4050f5:	dec    edx
  4050f6:	into   
  4050f7:	sbb    eax,0x85f9e1e1
  4050fc:	in     al,dx
  4050fd:	xor    BYTE PTR [ecx],dh
  4050ff:	or     eax,0xf67610ad
  405104:	mov    ecx,0x37e50a06
  405109:	sbb    BYTE PTR [esp+0x1],al
  40510d:	jmp    0xfb63a927
  405112:	mov    ch,0x9c
  405114:	adc    BYTE PTR [eax+0x72],bh
  405117:	mov    ?,esp
  405119:	cmp    esp,ebx
  40511b:	mov    ebp,0x339224ed
  405120:	dec    ebp
  405121:	push   ecx
  405122:	in     eax,dx
  405123:	cdq    
  405124:	xchg   DWORD PTR [ecx-0x6c],eax
  405127:	fdiv   DWORD PTR [esi-0xb]
  40512a:	inc    ecx
  40512b:	adc    eax,0xabc62e
  405130:	lock push eax
  405132:	outs   dx,DWORD PTR ds:[esi]
  405133:	add    BYTE PTR [edi],dh
  405135:	or     DWORD PTR [ecx+0x6a],esp
  405138:	and    BYTE PTR [edi],dh
  40513a:	sbb    DWORD PTR [ebx],ebx
  40513c:	jae    0x4051b7
  40513e:	call   0x57a08a99
  405143:	icebp  
  405144:	fisub  WORD PTR [ebx-0x3c0980fd]
  40514a:	xchg   ebx,eax
  40514b:	cld    
  40514c:	mov    edx,0x16344e81
  405151:	popf   
  405152:	inc    ebp
  405153:	aam    0x37
  405155:	inc    esp
  405156:	aam    0xb3
  405158:	dec    eax
  405159:	(bad)  [esi]
  40515b:	dec    esp
  40515c:	js     0x40517b
  40515e:	dec    esp
  40515f:	pop    esi
  405160:	sahf   
  405161:	cmp    DWORD PTR ds:0xa5cefac1,esp
  405167:	in     al,dx
  405168:	jl     0x4051be
  40516a:	out    dx,eax
  40516b:	or     bl,al
  40516d:	mov    al,0xb9
  40516f:	sub    DWORD PTR [eax-0x2122ba09],edx
  405175:	push   ss
  405176:	inc    esi
  405177:	xchg   ecx,eax
  405178:	call   0xd305caec
  40517d:	popa   
  40517e:	scas   eax,DWORD PTR es:[edi]
  40517f:	stos   BYTE PTR es:[edi],al
  405180:	jge    0x40510e
  405182:	das    
  405183:	inc    esp
  405184:	and    eax,0x5da11752
  405189:	int    0xa0
  40518b:	push   ecx
  40518c:	xchg   esp,eax
  40518d:	rcl    DWORD PTR [esp+eax*4],cl
  405190:	outs   dx,BYTE PTR ds:[esi]
  405191:	cmp    BYTE PTR [esi+0x18],ch
  405194:	rol    DWORD PTR [edx-0x4b6aeba7],cl
  40519a:	push   ds
  40519b:	xchg   ebx,eax
  40519c:	shl    dl,cl
  40519e:	arpl   WORD PTR [ecx+0xc],cx
  4051a1:	fiadd  DWORD PTR [ecx-0x56dd7f5]
  4051a7:	jae    0x40516f
  4051a9:	arpl   ax,bp
  4051ab:	jmp    0xc8db85fc
  4051b0:	fs (bad) 
  4051b2:	and    edx,esi
  4051b4:	mov    esp,0x483f8552
  4051b9:	mov    edi,0x8d4b3f0
  4051be:	call   0x6a05:0x26c195d
  4051c5:	add    DWORD PTR [edi],0x4e
  4051c8:	clc    
  4051c9:	pop    esp
  4051ca:	fndisi(8087 only) 
  4051cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051cd:	and    bh,bh
  4051cf:	inc    eax
  4051d0:	inc    edx
  4051d1:	xchg   ebp,eax
  4051d2:	ds pop esp
  4051d4:	sbb    esp,eax
  4051d6:	or     al,0x8e
  4051d8:	sbb    bl,bl
  4051da:	imul   edx,DWORD PTR [ebx+0x1e8474cf],0xffffffed
  4051e1:	cmp    edx,ebx
  4051e3:	jp     0x405257
  4051e5:	std    
  4051e6:	xchg   edi,eax
  4051e7:	jae    0x405180
  4051e9:	dec    esp
  4051ea:	gs pop ds
  4051ec:	sahf   
  4051ed:	and    edi,edi
  4051ef:	mov    al,ds:0x25e325ac
  4051f4:	add    eax,0x29e55b6b
  4051f9:	aad    0xb0
  4051fb:	add    eax,0xc966b6c2
  405200:	push   es
  405201:	int    0x9
  405203:	xchg   ebx,eax
  405204:	(bad)  
  405205:	mov    ds:0xdee23650,eax
  40520a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40520b:	push   esp
  40520c:	mov    esp,0xfefb5b6c
  405211:	cmp    al,0xa5
  405213:	xchg   esi,eax
  405214:	jmp    0x40527e
  405216:	ret    
  405217:	and    al,0xef
  405219:	sbb    al,0x89
  40521b:	aam    0x5f
  40521d:	jns    0x4051f2
  40521f:	loop   0x405285
  405221:	(bad)  
  405222:	mov    ecx,0xcd84437a
  405227:	jbe    0x405268
  405229:	enter  0x9a0b,0xfa
  40522d:	call   0x258e:0x48193c91
  405234:	pmulhuw mm1,QWORD PTR [edi]
  405237:	jae    0x40529d
  405239:	neg    DWORD PTR [ebp+0x45]
  40523c:	int    0xe5
  40523e:	push   ds
  40523f:	sbb    ebx,DWORD PTR [edi+eax*8]
  405242:	adc    dl,BYTE PTR [edx-0x6]
  405245:	inc    ecx
  405246:	sub    al,0x8b
  405248:	sbb    DWORD PTR ds:0x6196905c,edi
  40524e:	sbb    eax,0x48ed4650
  405253:	add    al,0xc3
  405255:	and    BYTE PTR [ecx],dh
  405257:	inc    edx
  405258:	ret    
  405259:	imul   DWORD PTR ds:0x76df2eff
  40525f:	mov    BYTE PTR [ecx+ecx*4],bl
  405262:	push   edx
  405263:	sbb    esp,DWORD PTR [ecx]
  405265:	add    ch,BYTE PTR [ebp-0x49]
  405268:	ret    0xb67f
  40526b:	jmp    0x92b5:0x19e99db2
  405272:	pop    ss
  405273:	imul   edi,ebx,0x8ec84b7b
  405279:	fadd   DWORD PTR [esi]
  40527b:	push   es
  40527c:	cmp    ebp,eax
  40527e:	pusha  
  40527f:	imul   esi
  405281:	stos   BYTE PTR es:[edi],al
  405282:	cmp    BYTE PTR [esi+0x15],ch
  405285:	inc    esi
  405286:	push   es
  405287:	cmp    eax,0xc4170e88
  40528c:	inc    ecx
  40528d:	jmp    0xecce0f56
  405292:	pop    esi
  405293:	xor    dh,cl
  405295:	(bad)  
  405296:	cmc    
  405297:	bound  edx,QWORD PTR [edi+ebp*4+0x2d4cf939]
  40529e:	out    0xe5,al
  4052a0:	cmp    eax,0x70e404a8
  4052a5:	xchg   esp,eax
  4052a6:	xor    al,0x31
  4052a8:	pop    es
  4052a9:	jno    0x4052c9
  4052ab:	(bad)  
  4052ac:	fadd   DWORD PTR [edi]
  4052ae:	lds    ecx,FWORD PTR ds:0x89a0e445
  4052b4:	adc    eax,0x77e8ba07
  4052b9:	or     al,0x64
  4052bb:	jb     0x405335
  4052bd:	shl    BYTE PTR [eax+0x4f9c6266],0x71
  4052c4:	sub    bl,bl
  4052c6:	sub    DWORD PTR [ebx],esi
  4052c8:	xor    BYTE PTR [ebp+0x3],ch
  4052cb:	psrlw  mm7,QWORD PTR [edx]
  4052ce:	add    ebp,DWORD PTR [edx]
  4052d0:	push   ds
  4052d1:	xor    al,0x95
  4052d3:	push   cs
  4052d4:	mov    esi,0x96a897f9
  4052d9:	push   ebp
  4052da:	or     BYTE PTR [esi],0x85
  4052dd:	mov    esi,DWORD PTR [ecx+0x64084c01]
  4052e3:	mov    cl,0x54
  4052e5:	retf   0x2bf7
  4052e8:	mov    BYTE PTR [edx+0x478a6a34],al
  4052ee:	call   0x36d2:0xb0fab52a
  4052f5:	gs sahf 
  4052f7:	into   
  4052f8:	loop   0x405335
  4052fa:	mov    dh,0xbe
  4052fc:	sar    cl,1
  4052fe:	aas    
  4052ff:	lds    ebp,FWORD PTR [edx+0x33a9492]
  405305:	jns    0x4052dc
  405307:	jg     0x405388
  405309:	outs   dx,BYTE PTR ds:[esi]
  40530a:	aad    0x70
  40530c:	inc    ecx
  40530d:	les    edi,FWORD PTR [ebp-0x11]
  405310:	adc    bh,BYTE PTR [edi]
  405312:	pop    esi
  405313:	scas   al,BYTE PTR es:[edi]
  405314:	xor    ch,BYTE PTR [ebx]
  405316:	sbb    DWORD PTR [ebx-0x5f8fbcd5],ebx
  40531c:	jle    0x40532b
  40531e:	addr16 jno 0x405398
  405321:	add    BYTE PTR [esi],dh
  405323:	add    cl,bl
  405325:	and    DWORD PTR [edi-0x324f13d3],eax
  40532b:	xchg   ebp,eax
  40532c:	mov    WORD PTR [edx+ecx*4],?
  40532f:	mov    al,0x97
  405331:	push   ecx
  405332:	or     esp,DWORD PTR [ebp-0xecf4b6]
  405338:	xchg   esp,eax
  405339:	mov    edx,DWORD PTR [esi+0x762e9785]
  40533f:	stc    
  405340:	xor    esi,DWORD PTR gs:[ecx]
  405343:	repz jbe 0x40538e
  405346:	out    dx,al
  405347:	fs xchg esp,eax
  405349:	sbb    eax,0x925a0652
  40534e:	mov    ds:0xf3bd25e,al
  405353:	std    
  405354:	fld    DWORD PTR [edi+0x72]
  405357:	mov    edx,DWORD PTR ds:0x1e26a861
  40535d:	pop    ebp
  40535e:	lds    esi,FWORD PTR [eax-0x7646409d]
  405364:	and    eax,0x995aca7b
  405369:	les    ebx,FWORD PTR ds:0xef36b36c
  40536f:	ret    0x6411
  405372:	mov    ah,0x63
  405374:	(bad)  
  405375:	add    eax,eax
  405377:	adc    esi,DWORD PTR [esi+0x2b03d146]
  40537d:	sub    BYTE PTR ds:0x9969a6a1,ch
  405383:	out    0x4a,eax
  405385:	jae    0x4053db
  405387:	add    ebp,DWORD PTR [ebp+0x733598ff]
  40538d:	fld    TBYTE PTR [esi-0x18a8dd64]
  405393:	jecxz  0x405358
  405395:	fnsave cs:[ecx-0x2a54de0c]
  40539c:	dec    edi
  40539d:	push   0x71
  40539f:	dec    esp
  4053a0:	push   0xfffffff1
  4053a2:	imul   ebp,DWORD PTR [ecx+0x46a08d86],0x1
  4053a9:	in     eax,dx
  4053aa:	pop    esp
  4053ab:	mov    fs,WORD PTR [ebp+0x54]
  4053ae:	xchg   edx,eax
  4053af:	es ss sti 
  4053b2:	and    al,BYTE PTR ds:0xc4018aab
  4053b8:	out    dx,al
  4053b9:	xlat   BYTE PTR ds:[ebx]
  4053ba:	inc    esp
  4053bb:	xchg   DWORD PTR [edi-0x3b1ddbad],edx
  4053c1:	or     BYTE PTR [eax],0x4e
  4053c4:	sub    al,0x63
  4053c6:	scas   eax,DWORD PTR es:[edi]
  4053c7:	and    DWORD PTR [esi-0x6c6a9b60],esp
  4053cd:	fstp   DWORD PTR [edx-0x3a]
  4053d0:	(bad)  
  4053d1:	mov    dl,0x65
  4053d3:	mov    ds,ebx
  4053d5:	int    0x32
  4053d7:	xchg   ebx,eax
  4053d8:	push   esi
  4053d9:	push   cs
  4053da:	stos   DWORD PTR es:[edi],eax
  4053db:	and    ch,BYTE PTR [edx-0x145f68ec]
  4053e1:	xchg   ebx,eax
  4053e2:	sub    BYTE PTR [ebx],cl
  4053e4:	jg     0x4053c6
  4053e6:	outs   dx,DWORD PTR ds:[esi]
  4053e7:	mov    ecx,0x346a8d87
  4053ec:	retf   0xba65
  4053ef:	retf   
  4053f0:	inc    eax
  4053f1:	adc    al,0x4a
  4053f3:	rcr    BYTE PTR [ebx-0xfb2054],cl
  4053f9:	loope  0x405431
  4053fb:	pop    ds
  4053fc:	sti    
  4053fd:	sbb    eax,0xf040901f
  405402:	jg     0x405428
  405404:	pop    edx
  405405:	dec    edi
  405406:	ss jmp 0x40546e
  405409:	xor    eax,0xc649d36a
  40540e:	cmp    BYTE PTR [esp+edi*1+0x26],cl
  405412:	xor    eax,0x85e5320c
  405417:	cmp    BYTE PTR [ebx+0x326687fb],ch
  40541d:	dec    ebp
  40541e:	xor    DWORD PTR [ecx-0x42],esp
  405421:	scas   al,BYTE PTR es:[edi]
  405422:	mov    ds:0x3d1896f9,al
  405427:	jmp    0x40540d
  405429:	(bad)  [ecx+esi*2+0x31a2a170]
  405430:	mov    esi,0x36c49867
  405435:	cmp    DWORD PTR [esi+0x4f],esi
  405438:	pop    ecx
  405439:	sti    
  40543a:	add    ch,0x95
  40543d:	popf   
  40543e:	stc    
  40543f:	jg     0x4053d9
  405441:	add    eax,0x4cdf7fcb
  405446:	(bad)  
  405447:	mov    ds:0x3467cef9,al
  40544c:	xor    esi,ebp
  40544e:	ds pop ecx
  405450:	add    eax,DWORD PTR [ecx+ecx*1+0x50]
  405454:	push   esi
  405455:	sub    ebp,DWORD PTR [edx-0x16]
  405458:	mov    esi,0x3142bb7a
  40545d:	cmp    eax,DWORD PTR [ebp+ecx*4-0x3b]
  405461:	repz mov esi,0x7f08e220
  405467:	sti    
  405468:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405469:	in     al,0xae
  40546b:	outs   dx,DWORD PTR ds:[esi]
  40546c:	jl     0x4054cd
  40546e:	mov    al,ds:0x8503a0df
  405473:	fucomp st(0)
  405475:	xchg   ebp,eax
  405476:	inc    ebp
  405477:	or     BYTE PTR ds:0xf653b3f2,0x26
  40547e:	cmc    
  40547f:	out    0xc2,al
  405481:	in     al,dx
  405482:	daa    
  405483:	ret    
  405484:	cmc    
  405485:	mov    ds:0x123f9eb,al
  40548a:	jns    0x4054f4
  40548c:	gs add ebx,edx
  40548f:	jae    0x405506
  405491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405492:	pop    ebp
  405493:	sahf   
  405494:	jmp    0x14a84278
  405499:	add    BYTE PTR [ebx+0x61],al
  40549c:	add    ah,BYTE PTR [edx+0x47f6b7a]
  4054a2:	pop    ecx
  4054a3:	je     0x4054aa
  4054a5:	inc    ebp
  4054a6:	mov    WORD PTR ds:0x291e31c,ds
  4054ac:	xchg   edi,eax
  4054ad:	pop    ebp
  4054ae:	fcomi  st,st(1)
  4054b0:	add    cl,0x8d
  4054b3:	inc    ebx
  4054b4:	push   ebp
  4054b5:	ja     0x40547d
  4054b7:	paddsw mm3,QWORD PTR [edi+0x3]
  4054bb:	sti    
  4054bc:	and    ah,BYTE PTR [eax-0x3d]
  4054bf:	mov    dl,0x48
  4054c1:	pop    eax
  4054c2:	ds mov ch,0xe5
  4054c5:	push   esi
  4054c6:	xor    al,0xa9
  4054c8:	mov    edx,0xc37202e0
  4054cd:	fadd   QWORD PTR [ebp+0x5be1882]
  4054d3:	(bad)  
  4054d5:	mov    ecx,0xc8b092d1
  4054da:	push   ss
  4054db:	je     0x40547d
  4054dd:	add    edx,ebx
  4054df:	xor    DWORD PTR [esi+0x21],esi
  4054e2:	aad    0x64
  4054e4:	int    0x19
  4054e6:	and    DWORD PTR [ecx],ecx
  4054e8:	jnp    0x405512
  4054ea:	sub    BYTE PTR [eax-0x5b4ed608],bl
  4054f0:	push   es
  4054f1:	adc    al,0xd5
  4054f3:	push   esp
  4054f4:	out    dx,al
  4054f5:	push   ss
  4054f6:	pop    edi
  4054f7:	inc    edx
  4054f8:	inc    esi
  4054f9:	adc    BYTE PTR [esi],ch
  4054fb:	xor    ebx,DWORD PTR [esi-0x4]
  4054fe:	mov    WORD PTR [ebp+0x10],cs
  405501:	ror    BYTE PTR [ebp+0x1f],cl
  405504:	loope  0x405566
  405506:	push   edi
  405507:	sub    al,0xb3
  405509:	sub    ch,bh
  40550b:	xchg   DWORD PTR [eax+edi*4+0x43],eax
  40550f:	xchg   esp,eax
  405510:	sub    BYTE PTR [edx],bl
  405512:	or     edx,eax
  405514:	adc    esp,DWORD PTR gs:[edi+0xad17177]
  40551b:	not    DWORD PTR [edx]
  40551d:	sbb    DWORD PTR cs:[edi+0x5b],eax
  405521:	mov    al,ds:0xa3a8674a
  405526:	xchg   ebx,eax
  405527:	retf   
  405528:	nop
  405529:	scas   al,BYTE PTR es:[edi]
  40552a:	sub    eax,DWORD PTR [ebx+0x7c42d293]
  405530:	imul   edi,DWORD PTR [ecx-0xe],0x53b4ce4
  405537:	enter  0xb0f6,0xe5
  40553b:	cmp    esp,DWORD PTR [eax+edx*1-0x4323037d]
  405542:	shl    BYTE PTR [eax],0x2e
  405545:	dec    esi
  405546:	retf   
  405547:	(bad)  
  405548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405549:	rcl    BYTE PTR [edx+0x4c1a954f],cl
  40554f:	mov    ch,0xc2
  405551:	mov    cl,0xfe
  405553:	dec    esp
  405554:	xor    eax,0xcee9dfce
  405559:	sti    
  40555a:	retf   
  40555b:	add    eax,0x7b0b090d
  405560:	icebp  
  405561:	xor    DWORD PTR [ebx],esi
  405563:	out    dx,al
  405564:	cdq    
  405565:	add    eax,0xa0444f21
  40556a:	jp     0x405553
  40556c:	les    ecx,FWORD PTR gs:[eax+0x52]
  405570:	dec    ebp
  405571:	(bad)  
  405572:	xor    eax,0x445918c0
  405577:	scas   eax,DWORD PTR es:[edi]
  405578:	jg     0x4055ec
  40557a:	pop    ebp
  40557b:	push   ebp
  40557c:	inc    ebp
  40557d:	cmp    BYTE PTR [eax+eax*4],dh
  405580:	mov    ah,0x8c
  405582:	inc    esp
  405583:	adc    BYTE PTR [edi*1+0x40d2e4aa],dh
  40558a:	pop    ds
  40558b:	je     0x4055ac
  40558d:	push   cs
  40558e:	and    DWORD PTR [eax+0x9eb30f8],0x40
  405595:	mov    esi,esp
  405597:	xchg   cx,ax
  405599:	adc    DWORD PTR [ecx+ebx*4+0x48],esi
  40559d:	jmp    0xef00:0x261b9c6f
  4055a4:	pop    ebx
  4055a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4055a6:	stos   BYTE PTR es:[edi],al
  4055a7:	mov    dh,0x57
  4055a9:	push   cs
  4055aa:	jg     0x405574
  4055ac:	(bad)  
  4055ad:	jmp    0xb95d5d63
  4055b2:	leave  
  4055b3:	and    dl,0xd3
  4055b6:	push   0xb07a7de
  4055bb:	test   ecx,0xb3636d4a
  4055c1:	(bad)  
  4055c2:	xlat   BYTE PTR ds:[ebx]
  4055c3:	cld    
  4055c4:	in     eax,dx
  4055c5:	lds    edi,FWORD PTR [ecx-0x5e]
  4055c8:	(bad)  
  4055c9:	pop    ecx
  4055ca:	cs inc esp
  4055cc:	or     BYTE PTR [edx+eax*2+0x31],dh
  4055d0:	xchg   edi,eax
  4055d1:	mov    ebx,0x79f90cc5
  4055d6:	mov    esp,0x417b196d
  4055db:	ins    BYTE PTR es:[edi],dx
  4055dc:	nop
  4055dd:	push   ss
  4055de:	jbe    0x405623
  4055e0:	mov    WORD PTR [ebx+0x58a4c76e],?
  4055e6:	and    BYTE PTR [ecx-0x4445f1d0],bh
  4055ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055ed:	sbb    BYTE PTR [edi+0xb],ah
  4055f0:	adc    esp,esi
  4055f2:	mov    ah,0x6d
  4055f4:	ins    BYTE PTR es:[edi],dx
  4055f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055f6:	inc    ebx
  4055f7:	add    ecx,DWORD PTR [ebx+0x5c]
  4055fa:	or     al,0x2d
  4055fc:	pop    si
  4055fe:	lods   eax,DWORD PTR ds:[esi]
  4055ff:	mov    dh,0x85
  405601:	sub    dh,BYTE PTR [edi+0xc]
  405604:	loop   0x405664
  405606:	xor    ch,ch
  405608:	aad    0x88
  40560a:	xor    al,0xf
  40560c:	jecxz  0x405676
  40560e:	stc    
  40560f:	bound  edi,QWORD PTR [ecx+0x25849acb]
  405615:	dec    ebx
  405616:	clc    
  405617:	outs   dx,BYTE PTR ds:[esi]
  405618:	jp     0x40562c
  40561a:	scas   eax,DWORD PTR es:[edi]
  40561b:	push   ecx
  40561c:	push   edx
  40561d:	repnz mov eax,ds:0xc7928038
  405623:	je     0x4055ee
  405625:	pop    es
  405626:	mov    esp,0x7de0797a
  40562b:	je     0x4056a2
  40562d:	or     DWORD PTR ds:0x9e1b3599,edx
  405633:	not    DWORD PTR [esi-0x5b]
  405636:	mov    esi,0xcbc41213
  40563b:	test   DWORD PTR [edi],ebp
  40563d:	imul   eax,DWORD PTR [ecx-0x26],0x36
  405641:	mov    ebx,0x15e5c757
  405646:	adc    eax,0xe79101e1
  40564b:	mov    ah,0x41
  40564d:	adc    ebp,DWORD PTR [eax+0x4d354b27]
  405653:	sub    BYTE PTR [edi],ch
  405655:	inc    ebx
  405656:	mov    al,ds:0xe04e18d5
  40565b:	xchg   esp,eax
  40565c:	ret    0xa793
  40565f:	sbb    al,0x1e
  405661:	add    al,0x83
  405663:	mov    ch,0x9a
  405665:	pop    ebx
  405666:	fucomi st,st(7)
  405668:	fmulp  st(5),st
  40566a:	mov    edx,0x13d3f5c7
  40566f:	fldcw  WORD PTR [ebx+0x47]
  405672:	jne    0x405689
  405674:	call   0x2501f995
  405679:	(bad)  
  40567b:	(bad)  
  40567c:	mov    eax,ds:0x936c75f2
  405681:	sub    BYTE PTR ds:0xe12a9166,0x16
  405688:	sbb    al,0x1d
  40568a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40568b:	popf   
  40568c:	push   DWORD PTR [edi]
  40568e:	mov    dh,0x25
  405690:	sub    BYTE PTR [ecx],al
  405692:	lods   eax,DWORD PTR ds:[esi]
  405693:	ins    DWORD PTR es:[edi],dx
  405694:	mov    ecx,0xa5e82c1
  405699:	arpl   WORD PTR [edx+ebp*2-0x42c78969],bx
  4056a0:	pop    edx
  4056a1:	and    esp,DWORD PTR [esi-0x31]
  4056a4:	push   esp
  4056a5:	sbb    BYTE PTR [edx],al
  4056a7:	cwde   
  4056a8:	push   0x27bc66d
  4056ad:	mov    eax,ds:0xb11dfcf8
  4056b2:	inc    ebx
  4056b3:	pop    ss
  4056b4:	ins    BYTE PTR es:[edi],dx
  4056b5:	aas    
  4056b6:	push   es
  4056b7:	inc    eax
  4056b8:	pop    es
  4056b9:	lock inc ecx
  4056bb:	add    BYTE PTR [edx],ch
  4056bd:	xlat   BYTE PTR ds:[ebx]
  4056be:	push   cs
  4056bf:	outs   dx,DWORD PTR ds:[esi]
  4056c0:	sbb    BYTE PTR [esi-0x3d5bea21],al
  4056c6:	mov    DWORD PTR [edi-0x328cc47],edi
  4056cc:	mov    ebx,0xb3c1c878
  4056d1:	les    eax,FWORD PTR [ebp+0x52]
  4056d4:	in     al,0x54
  4056d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056d7:	(bad)  
  4056d9:	pop    esp
  4056da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056db:	or     BYTE PTR [ecx-0x1cb39045],al
  4056e1:	mov    al,0xe5
  4056e3:	pop    esi
  4056e4:	outs   dx,BYTE PTR ds:[esi]
  4056e5:	push   0x18
  4056e7:	stc    
  4056e8:	in     eax,dx
  4056e9:	enter  0xbc2,0xb9
  4056ed:	popa   
  4056ee:	jmp    0x3fddc654
  4056f3:	jmp    0x4c51:0xe9a1cd5c
  4056fa:	mov    eax,0x20dd95f7
  4056ff:	mov    ds:0x5cdc7561,eax
  405704:	out    dx,al
  405705:	test   BYTE PTR [esi],cl
  405707:	adc    edi,esi
  405709:	jecxz  0x405691
  40570b:	and    al,0xc0
  40570d:	mov    bh,0x2
  40570f:	cs (bad) 
  405711:	jmp    0x405763
  405713:	mov    ecx,0xb70bd0e2
  405718:	cli    
  405719:	call   FWORD PTR [ebx+0x5ac42a03]
  40571f:	test   DWORD PTR [edx],0x31446fd3
  405725:	fidiv  WORD PTR [edx-0x40c882cb]
  40572b:	in     al,0x12
  40572d:	fild   DWORD PTR [eax]
  40572f:	push   eax
  405730:	push   ebp
  405731:	ret    
  405732:	jmp    0x35f8:0xfce578d9
  405739:	arpl   WORD PTR [eax-0x3],si
  40573c:	enter  0xc66a,0xad
  405740:	pop    ecx
  405741:	or     eax,0xb2d2a946
  405746:	test   eax,0x295e16b2
  40574b:	push   ebx
  40574c:	test   edi,esi
  40574e:	pop    edx
  40574f:	arpl   WORD PTR [edi-0x5],bp
  405752:	pop    esi
  405753:	shl    BYTE PTR [edx+ebx*1+0x69],0xc0
  405758:	sbb    ecx,DWORD PTR ds:0x21a00c5f
  40575e:	data16 fbstp TBYTE PTR [ebp-0x31]
  405762:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405763:	retf   0x9c20
  405766:	sar    DWORD PTR [ebx],cl
  405768:	aad    0x40
  40576a:	sbb    DWORD PTR [eax+0x3c],0x44
  40576e:	or     DWORD PTR [eax-0x42c9f779],ebx
  405774:	lahf   
  405775:	outs   dx,DWORD PTR ds:[esi]
  405776:	cmp    al,bh
  405778:	mov    al,0xfc
  40577a:	mov    eax,0x1ee082a
  40577f:	std    
  405780:	loope  0x40577b
  405782:	fcomp  DWORD PTR [edi]
  405784:	push   esi
  405785:	mov    dh,0x1d
  405787:	sbb    DWORD PTR [ebx-0x18c7b763],edi
  40578d:	and    bh,ah
  40578f:	imul   esp,DWORD PTR [edi-0x44],0xfffffff6
  405793:	jb     0x405719
  405795:	fdiv   DWORD PTR [eax-0x4efa392c]
  40579b:	push   ss
  40579c:	jle    0x40577d
  40579e:	fld    DWORD PTR [eax-0x509621f6]
  4057a4:	cmc    
  4057a5:	ror    DWORD PTR [edi],1
  4057a7:	push   esp
  4057a8:	jbe    0x40581c
  4057aa:	mov    ds:0xa9a7d025,al
  4057af:	inc    esi
  4057b0:	mov    al,0xc4
  4057b2:	sub    bh,dl
  4057b4:	mul    DWORD PTR [ecx+0x0]
  4057b7:	into   
  4057b8:	adc    edi,eax
  4057ba:	mov    ds:0x77cbf5ae,eax
  4057bf:	jecxz  0x4057ba
  4057c1:	and    BYTE PTR [esi],ch
  4057c3:	ret    
  4057c4:	sub    DWORD PTR [edi-0x40ef4344],0xffffffaa
  4057cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057cc:	ja     0x40577d
  4057ce:	adc    esi,edi
  4057d0:	mov    dh,0x60
  4057d2:	sbb    ch,BYTE PTR [eax+ecx*4+0x338df94]
  4057d9:	retf   
  4057da:	cdq    
  4057db:	mov    al,0x10
  4057dd:	mov    bh,0xa3
  4057df:	cmp    ecx,DWORD PTR [ebx]
  4057e1:	mov    dh,0x38
  4057e3:	fldenv [ebp+0x19]
  4057e6:	mov    edx,ebx
  4057e8:	nop
  4057e9:	add    eax,0xc3a595b7
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	or     DWORD PTR [ecx+0x1e9a37cb],ecx
  4057f5:	ins    BYTE PTR es:[edi],dx
  4057f6:	push   es
  4057f7:	int    0xf8
  4057f9:	out    0x7e,eax
  4057fb:	or     edi,ebp
  4057fd:	or     al,0xac
  4057ff:	or     ch,BYTE PTR [edx-0x53]
  405802:	lods   al,BYTE PTR ds:[esi]
  405803:	adc    esi,DWORD PTR [edx+0x61]
  405806:	and    ah,cl
  405808:	cld    
  405809:	outs   dx,BYTE PTR ds:[esi]
  40580a:	ror    DWORD PTR [esi],cl
  40580c:	jb     0x405876
  40580e:	lahf   
  40580f:	test   DWORD PTR [edi+0x30],esp
  405812:	icebp  
  405813:	xor    BYTE PTR [eax+0x73],bh
  405816:	cmp    al,BYTE PTR [edx-0x73]
  405819:	int3   
  40581a:	inc    ebp
  40581b:	jmp    0xf659:0x57a2ebc4
  405822:	and    ebx,esi
  405824:	jmp    0x405878
  405826:	mov    eax,ds:0xc5eb524
  40582b:	jle    0x405819
  40582d:	sub    ebp,0x8aae5e4b
  405833:	jne    0x4057d1
  405835:	iret   
  405836:	icebp  
  405837:	push   ds
  405838:	data16 fidiv WORD PTR [esi+eax*1-0x2d]
  40583d:	call   0x40450442
  405842:	aam    0x42
  405844:	sbb    eax,0xa5b718dc
  405849:	sub    edi,DWORD PTR [ebx-0x51]
  40584c:	adc    eax,0xb317f3db
  405851:	mov    edi,0xc5144650
  405856:	xchg   edi,ecx
  405858:	arpl   di,bx
  40585a:	push   0xfffffffa
  40585c:	xlat   BYTE PTR ds:[ebx]
  40585d:	mov    ecx,0xd6ff7f04
  405862:	and    esi,DWORD PTR [edi]
  405864:	and    eax,0xf2ce772d
  405869:	push   ebp
  40586a:	add    DWORD PTR [esi-0x1b],eax
  40586d:	add    eax,0x9be9d69b
  405872:	jno    0x40581c
  405874:	ja     0x40586d
  405876:	shl    DWORD PTR [edx-0x32],0x98
  40587a:	mov    ah,0x2d
  40587c:	push   DWORD PTR [esi-0x5ec3dfa9]
  405882:	mov    BYTE PTR [eax],bh
  405884:	sti    
  405885:	popf   
  405886:	stos   BYTE PTR es:[edi],al
  405887:	jecxz  0x4058e9
  405889:	mov    ds:0xd414b32b,al
  40588e:	inc    esp
  40588f:	es xor eax,0x6dbcada7
  405895:	cwde   
  405896:	xchg   DWORD PTR [ebp-0x2e],eax
  405899:	sbb    BYTE PTR [edx-0x6c4e8c1e],cl
  40589f:	pop    ecx
  4058a0:	in     al,dx
  4058a1:	loope  0x405864
  4058a3:	push   eax
  4058a4:	shr    DWORD PTR [ebp-0x7e],1
  4058a7:	cmp    DWORD PTR [ebp+0x65],esp
  4058aa:	ins    BYTE PTR es:[edi],dx
  4058ab:	(bad)
  4058af:	int    0x45
  4058b1:	cmp    edx,edx
  4058b3:	jl     0x4058fe
  4058b5:	mov    ah,0x93
  4058b7:	sbb    edx,0xffffff95
  4058ba:	dec    edi
  4058bb:	mov    ah,0x37
  4058bd:	xchg   esp,eax
  4058be:	cwde   
  4058bf:	jbe    0x4058b8
  4058c1:	ja     0x405868
  4058c3:	xor    bl,BYTE PTR [ecx+ebp*2-0x1b]
  4058c7:	retf   
  4058c8:	xchg   ecx,eax
  4058c9:	jno    0x4058f2
  4058cb:	cld    
  4058cc:	out    dx,al
  4058cd:	sub    edi,esp
  4058cf:	dec    esi
  4058d0:	mov    cs,WORD PTR [ecx]
  4058d2:	mov    bl,0x9b
  4058d4:	sti    
  4058d5:	(bad)  
  4058d6:	cmc    
  4058d7:	adc    eax,0xf44c938e
  4058dc:	mov    eax,0xa3fdd4
  4058e1:	jl     0x40594c
  4058e3:	cwde   
  4058e4:	xor    al,BYTE PTR [esi-0x4a171194]
  4058ea:	popa   
  4058eb:	pop    eax
  4058ec:	sub    eax,0x7bb9f2a7
  4058f1:	pop    ss
  4058f2:	dec    esp
  4058f3:	dec    esi
  4058f4:	xor    BYTE PTR ds:0x52832c73,0x9c
  4058fb:	cld    
  4058fc:	and    cl,ah
  4058fe:	call   0x702d034a
  405903:	dec    esi
  405904:	cwde   
  405905:	push   esi
  405906:	ja     0x405986
  405908:	repz inc esi
  40590a:	lds    ebx,FWORD PTR [ecx+0x4367df01]
  405910:	xchg   edx,eax
  405911:	stos   BYTE PTR es:[edi],al
  405912:	ds dec esi
  405914:	popa   
  405915:	push   ds
  405916:	adc    DWORD PTR ds:0x7a249c58,0x70
  40591d:	inc    esp
  40591e:	push   edx
  40591f:	inc    ebp
  405920:	imul   BYTE PTR ds:0x282b2d40
  405926:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405927:	sbb    DWORD PTR [ebp-0x680a6291],edi
  40592d:	cmp    al,0xec
  40592f:	inc    ebx
  405930:	pop    eax
  405931:	loope  0x405978
  405933:	lods   eax,DWORD PTR ds:[esi]
  405934:	mov    edx,0x5c12818f
  405939:	repz jge 0x40590a
  40593c:	ret    0x401a
  40593f:	lock mov al,ds:0x38bdc3e5
  405945:	jb     0x405981
  405947:	jp     0x4058d3
  405949:	loop   0x40593d
  40594b:	add    eax,0x154ee077
  405950:	or     DWORD PTR [esi],ebp
  405952:	inc    esi
  405953:	and    al,BYTE PTR ds:0x1f5c69a3
  405959:	mov    ds:0x91ae03ab,eax
  40595e:	mov    ch,0xee
  405960:	aad    0xb2
  405962:	les    eax,FWORD PTR [eax-0x53]
  405965:	test   eax,0xa96fc49b
  40596a:	out    0x47,eax
  40596c:	or     DWORD PTR [esi+0x134dcd9b],ecx
  405972:	mov    bl,0x6c
  405974:	and    eax,0x11820e05
  405979:	xchg   ecx,eax
  40597a:	add    ah,BYTE PTR [edi]
  40597c:	push   edx
  40597d:	and    BYTE PTR [ecx-0x2b0cabb1],ch
  405983:	push   0x8779d4f8
  405988:	dec    ebp
  405989:	sbb    edx,edx
  40598b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40598c:	fsubr  st,st(3)
  40598e:	sub    ch,bl
  405990:	gs stos DWORD PTR es:[edi],eax
  405992:	push   ds
  405993:	mov    DWORD PTR [edi-0x4e246c78],esi
  405999:	mov    eax,0x6d1021a3
  40599e:	into   
  40599f:	mov    cl,0x66
  4059a1:	jmp    0x77c9:0x38e1a3ef
  4059a8:	mov    ds:0xa1a880ec,eax
  4059ad:	mov    edx,0xe57d87ca
  4059b2:	xchg   ecx,eax
  4059b3:	cmp    al,0x84
  4059b5:	test   BYTE PTR [ebx+0x19],cl
  4059b8:	push   ss
  4059b9:	ss repz cwde 
  4059bc:	ins    BYTE PTR es:[edi],dx
  4059bd:	(bad)  
  4059bf:	or     ah,BYTE PTR [ebp-0x749c6fe4]
  4059c5:	int3   
  4059c6:	pop    ebx
  4059c7:	fist   DWORD PTR [ebp+esi*8+0x795bff5c]
  4059ce:	mov    dh,0x70
  4059d0:	mov    ah,0x6
  4059d2:	test   bh,ch
  4059d4:	sbb    DWORD PTR [eax-0x3a],ebx
  4059d7:	pop    esi
  4059d8:	pushf  
  4059d9:	imul   DWORD PTR [edi]
  4059db:	mov    ch,0xee
  4059dd:	jns    0x405a4b
  4059df:	sub    al,0xec
  4059e1:	xor    eax,0x539f81c7
  4059e6:	sbb    DWORD PTR [eax+0x13b6e80b],0x6a
  4059ed:	add    al,0x20
  4059ef:	sub    ecx,DWORD PTR [edx-0x3]
  4059f2:	inc    esi
  4059f3:	mov    edx,0x7c34742b
  4059f8:	mov    edx,0xc3a83fe3
  4059fd:	sbb    ch,ah
  4059ff:	jne    0x40598c
  405a01:	icebp  
  405a02:	and    eax,0xddcb9cf5
  405a07:	inc    esp
  405a08:	mov    ecx,0xfdfa115d
  405a0d:	fmul   DWORD PTR [ecx+0x192c02bc]
  405a13:	xchg   DWORD PTR ds:0xb4dbe45f,ecx
  405a19:	(bad)  
  405a1a:	outs   dx,BYTE PTR ds:[esi]
  405a1b:	(bad)  
  405a1c:	push   eax
  405a1d:	inc    edi
  405a1e:	(bad)  
  405a1f:	fld    TBYTE PTR [esp+ebx*8-0x41]
  405a23:	jns    0x4059a5
  405a25:	or     BYTE PTR [ebx-0x4415bee7],dh
  405a2b:	jmp    0x39c0bfc
  405a30:	dec    ebx
  405a31:	les    ebx,FWORD PTR [ecx+0x185f65a0]
  405a37:	sub    cl,BYTE PTR [edi]
  405a39:	les    ebx,FWORD PTR [ebx+0x3a]
  405a3c:	pop    es
  405a3d:	arpl   WORD PTR [ecx-0x68721c3a],bx
  405a43:	in     eax,0x59
  405a45:	mov    al,0x1c
  405a47:	lods   eax,DWORD PTR ds:[esi]
  405a48:	pop    esp
  405a49:	test   eax,0x29810279
  405a4e:	jo     0x4059da
  405a50:	loop   0x405a47
  405a52:	outs   dx,DWORD PTR ds:[esi]
  405a53:	aas    
  405a54:	mov    ecx,0x1dd746a4
  405a59:	jbe    0x405aca
  405a5b:	int3   
  405a5c:	cmp    ah,dh
  405a5e:	(bad)  
  405a5f:	jae    0x405aca
  405a61:	add    ecx,ebx
  405a63:	mov    dl,0x23
  405a65:	fidivr WORD PTR [ebx]
  405a67:	repz shr BYTE PTR [eax+0x67290bd1],0x62
  405a6f:	mov    esi,0xe3291598
  405a74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a75:	jp     0x405a8c
  405a77:	test   al,0xfc
  405a79:	popf   
  405a7a:	dec    ecx
  405a7b:	dec    edi
  405a7c:	retf   
  405a7d:	push   cs
  405a7e:	push   esi
  405a7f:	xor    esp,DWORD PTR [esi+0xe24d9d0]
  405a85:	call   0x1887bae4
  405a8a:	cmp    eax,DWORD PTR [edx]
  405a8c:	xor    DWORD PTR [edx+0x1bb39bab],eax
  405a92:	cmp    DWORD PTR [edx+0x24fe925],eax
  405a98:	mov    esp,0x2c417879
  405a9d:	dec    ebx
  405a9e:	push   edx
  405a9f:	jl     0x405aad
  405aa1:	inc    ecx
  405aa2:	arpl   WORD PTR [edx-0xcbf4e7],si
  405aa8:	jbe    0x405a93
  405aaa:	jbe    0x405a6b
  405aac:	outs   dx,DWORD PTR ds:[esi]
  405aad:	sar    DWORD PTR [ecx+0x725418f7],0xf2
  405ab4:	daa    
  405ab5:	out    dx,al
  405ab6:	jae    0x405af4
  405ab8:	jo     0x405ae9
  405aba:	pop    es
  405abb:	push   ecx
  405abc:	out    dx,al
  405abd:	out    dx,al
  405abe:	enter  0xb23,0x65
  405ac2:	adc    al,0x33
  405ac4:	shl    DWORD PTR [ebx+0x48],cl
  405ac7:	sub    BYTE PTR [edi],ah
  405ac9:	dec    ebx
  405aca:	xor    eax,edi
  405acc:	and    bl,ah
  405ace:	cmc    
  405acf:	jno    0x405a5b
  405ad1:	ins    DWORD PTR es:[edi],dx
  405ad2:	mov    al,ds:0x52e995ce
  405ad7:	jg     0x405a74
  405ad9:	adc    edi,DWORD PTR [edx]
  405adb:	push   ss
  405adc:	ret    
  405add:	mov    esi,DWORD PTR [edx-0x4fa9677]
  405ae3:	jp     0x405b0c
  405ae5:	or     DWORD PTR [edi+0x63f58b04],eax
  405aeb:	mov    BYTE PTR [ebx+edi*8],bl
  405aee:	sahf   
  405aef:	(bad)  
  405af0:	ja     0x405b27
  405af2:	imul   edx,DWORD PTR [ebp+0x1e475081],0xfffffff1
  405af9:	shl    DWORD PTR [edx+0xa],1
  405afc:	adc    al,0xc3
  405afe:	jmp    0x405b56
  405b00:	arpl   WORD PTR [eax-0x53d4574c],bx
  405b06:	(bad)  
  405b07:	fsub   QWORD PTR [edx+0x4461c87c]
  405b0d:	std    
  405b0e:	mov    ebp,0x2b65dab5
  405b13:	retf   
  405b14:	inc    esi
  405b15:	ins    BYTE PTR es:[edi],dx
  405b16:	outs   dx,DWORD PTR ds:[esi]
  405b17:	and    al,0x3c
  405b19:	push   ecx
  405b1a:	push   ebp
  405b1b:	mov    bh,BYTE PTR [edx+ebx*1+0x1163525f]
  405b22:	in     eax,0xdb
  405b24:	out    0x9a,al
  405b26:	mov    edx,?
  405b28:	in     eax,dx
  405b29:	lea    esp,[esi-0x377ae42b]
  405b2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b30:	les    esi,FWORD PTR [esi]
  405b32:	in     eax,0x66
  405b34:	mov    al,ds:0xd0e7404a
  405b39:	mov    bh,0x72
  405b3b:	test   al,0x47
  405b3d:	add    eax,0x65577656
  405b42:	jecxz  0x405ba1
  405b44:	in     al,dx
  405b45:	ins    DWORD PTR es:[edi],dx
  405b46:	cmp    al,0x32
  405b48:	ins    DWORD PTR es:[edi],dx
  405b49:	jge    0x405ba2
  405b4b:	dec    ebp
  405b4c:	in     al,dx
  405b4d:	sub    bl,BYTE PTR [ebp-0x1299a813]
  405b53:	jae    0x405bb6
  405b55:	xchg   ebx,eax
  405b56:	xor    DWORD PTR [edi+0x36],ebx
  405b59:	out    0xfd,al
  405b5b:	imul   edx,DWORD PTR [eax+0x46],0xb295b9a
  405b62:	sub    BYTE PTR [esp+edx*4-0x770a2f84],cl
  405b69:	(bad)  
  405b6b:	add    bl,cl
  405b6d:	out    dx,eax
  405b6e:	inc    ecx
  405b6f:	mov    ds:0x123851ee,eax
  405b74:	mov    ds:0x43a59344,eax
  405b79:	call   DWORD PTR [eax]
  405b7b:	sub    al,0xba
  405b7d:	icebp  
  405b7e:	cmp    al,0xbf
  405b80:	scas   eax,DWORD PTR es:[edi]
  405b81:	int3   
  405b82:	jo     0x405b5f
  405b84:	xchg   DWORD PTR [edi-0x43],ebx
  405b87:	pop    ebx
  405b88:	imul   ebp,DWORD PTR [edx+0x33],0x47878bdf
  405b8f:	dec    ebx
  405b90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b91:	inc    eax
  405b92:	bnd jp 0x405bfe
  405b95:	jg     0x405ba4
  405b97:	xor    BYTE PTR [esi],cl
  405b99:	jne    0x405bd7
  405b9b:	pop    esp
  405b9c:	jge    0x405c00
  405b9e:	cdq    
  405b9f:	js     0x405b2f
  405ba1:	outs   dx,BYTE PTR ds:[esi]
  405ba2:	pop    es
  405ba3:	nop
  405ba4:	lods   al,BYTE PTR ds:[esi]
  405ba5:	std    
  405ba6:	mov    edi,0xaba846cd
  405bab:	add    esi,DWORD PTR [ecx-0x4e]
  405bae:	jp     0x405bde
  405bb0:	sub    BYTE PTR [ebp-0x787d0291],0x2a
  405bb7:	aam    0x15
  405bb9:	outs   dx,BYTE PTR ds:[esi]
  405bba:	adc    eax,0xd98651a6
  405bbf:	retf   0xc34b
  405bc2:	(bad)  
  405bc4:	neg    DWORD PTR [ebx-0x60]
  405bc7:	push   ebx
  405bc8:	mov    esi,0x3ba0d2c6
  405bcd:	sub    eax,0x17cf7fc8
  405bd2:	aas    
  405bd3:	std    
  405bd4:	(bad)  [ecx]
  405bd6:	retf   
  405bd7:	sbb    DWORD PTR [edx],edi
  405bd9:	cmp    eax,0xf903e1f4
  405bde:	push   ss
  405bdf:	fcom   DWORD PTR [edx]
  405be1:	loope  0x405b8a
  405be3:	pop    ds
  405be4:	icebp  
  405be5:	and    al,0xa6
  405be7:	jbe    0x405ba8
  405be9:	retf   0x83c9
  405bec:	adc    edi,DWORD PTR [ebp-0x75]
  405bef:	loope  0x405c2b
  405bf1:	repz jns 0x405c20
  405bf4:	(bad)  
  405bf5:	enter  0xca02,0x31
  405bf9:	jbe    0x405c54
  405bfb:	xor    ch,BYTE PTR [ebp+esi*1+0x19]
  405bff:	dec    edi
  405c00:	icebp  
  405c01:	jnp    0x405b85
  405c03:	call   0x557b:0xc71d69e7
  405c0a:	out    0xa9,eax
  405c0c:	mov    DWORD PTR [edx],ebp
  405c0e:	inc    edi
  405c0f:	xchg   edx,eax
  405c10:	pop    ecx
  405c12:	adc    DWORD PTR [ecx-0x4fce1b1a],ebp
  405c18:	lds    ebx,FWORD PTR [eax-0x10]
  405c1b:	inc    eax
  405c1c:	mov    ebp,0xa47a2b6e
  405c21:	dec    ebp
  405c22:	retf   
  405c23:	out    dx,eax
  405c24:	pop    di
  405c26:	mov    ah,0x66
  405c28:	leave  
  405c29:	les    eax,FWORD PTR [edi]
  405c2b:	mov    ds:0x4373fe0f,al
  405c30:	lea    esi,[ecx]
  405c32:	dec    eax
  405c33:	xor    ebp,ecx
  405c35:	xlat   BYTE PTR ds:[ebx]
  405c36:	and    al,BYTE PTR [ebx+0x75]
  405c39:	lock jecxz 0x405c9e
  405c3c:	xor    al,0x1d
  405c3e:	mov    al,0x9e
  405c40:	or     BYTE PTR [ecx-0xe],0x3b
  405c44:	mov    al,0x38
  405c46:	ins    DWORD PTR es:[edi],dx
  405c47:	sub    eax,0xa9c475c0
  405c4c:	cmp    DWORD PTR [esi+0x3c0a17b0],eax
  405c52:	cmc    
  405c53:	rcl    esi,cl
  405c55:	mov    ds:0xcd9d7747,al
  405c5a:	je     0x405c9a
  405c5c:	xchg   ebp,eax
  405c5d:	and    al,al
  405c5f:	push   edx
  405c60:	retf   0x66fe
  405c63:	push   0x138fd6b4
  405c68:	and    al,0xd6
  405c6a:	ins    DWORD PTR es:[edi],dx
  405c6b:	in     eax,0xda
  405c6d:	mov    gs,WORD PTR [edx]
  405c6f:	and    al,0xe0
  405c71:	ret    0x1d65
  405c74:	loop   0x405c07
  405c76:	jge    0x405c5d
  405c78:	and    al,0xa1
  405c7a:	and    BYTE PTR [esp+ebx*8],al
  405c7d:	in     al,dx
  405c7e:	sahf   
  405c7f:	sub    cl,dh
  405c81:	pop    esp
  405c82:	and    BYTE PTR [ebx-0x7bec7099],ah
  405c88:	fld    st(5)
  405c8a:	sbb    dl,BYTE PTR [ecx+0x54bb6bb5]
  405c90:	retf   
  405c91:	lods   al,BYTE PTR ds:[esi]
  405c92:	inc    edi
  405c93:	arpl   WORD PTR [esi],di
  405c95:	and    DWORD PTR [edi],esi
  405c97:	add    DWORD PTR [eax+0x3b8aa005],0x5906ca49
  405ca1:	lahf   
  405ca2:	mov    bl,0x20
  405ca4:	pop    ss
  405ca5:	inc    eax
  405ca6:	loop   0x405cd7
  405ca8:	jno    0x405cdb
  405caa:	mul    DWORD PTR [eax-0x74faf604]
  405cb0:	popa   
  405cb1:	mov    al,0xd5
  405cb3:	inc    edx
  405cb4:	pop    edx
  405cb5:	and    cl,BYTE PTR [ebx+0x40]
  405cb8:	loopne 0x405c63
  405cba:	xor    DWORD PTR [edi],edx
  405cbc:	cdq    
  405cbd:	mov    dl,BYTE PTR ds:0x53e22be0
  405cc3:	mov    ch,0xbc
  405cc5:	cmp    al,0xce
  405cc7:	add    BYTE PTR [esi],0xa1
  405cca:	lods   eax,DWORD PTR ds:[esi]
  405ccb:	jp     0x405d36
  405ccd:	ins    BYTE PTR es:[edi],dx
  405cce:	out    dx,al
  405ccf:	mov    ah,0xb1
  405cd1:	xor    BYTE PTR [edi],cl
  405cd3:	mov    es,WORD PTR [eax+0x310589d9]
  405cd9:	push   ebx
  405cda:	adc    eax,0x4aed6eaf
  405cdf:	fidivr DWORD PTR [ebp-0x7a104b84]
  405ce5:	xchg   eax,ebp
  405ce7:	hlt    
  405ce8:	adc    dh,al
  405cea:	das    
  405ceb:	(bad)  
  405cec:	adc    al,0x86
  405cee:	sub    DWORD PTR [edx+0x62249d80],ebp
  405cf4:	(bad)  
  405cf6:	xor    cl,al
  405cf8:	clc    
  405cf9:	rcr    BYTE PTR ds:0x3ee8753f,1
  405cff:	and    DWORD PTR [edx-0x32],eax
  405d02:	and    eax,0x4bd272c
  405d07:	mov    dl,0xb1
  405d09:	push   0x94c98765
  405d0e:	dec    DWORD PTR cs:0x8e84fd63
  405d15:	dec    ebx
  405d16:	add    esp,eax
  405d18:	xlat   BYTE PTR ds:[ebx]
  405d19:	and    eax,0xc6e9a950
  405d1e:	and    eax,DWORD PTR [edi+0x1d]
  405d21:	pop    ds
  405d22:	jns    0x405cca
  405d24:	popa   
  405d25:	cmc    
  405d26:	aaa    
  405d27:	and    BYTE PTR ds:0xd7ebe8fd,dl
  405d2d:	mov    al,ds:0x36ff4ab9
  405d32:	jge    0x405d9e
  405d34:	cmp    ah,BYTE PTR [edx-0x41eb9111]
  405d3a:	lock mov ds:0x67594546,eax
  405d40:	ins    DWORD PTR es:[edi],dx
  405d41:	xor    edx,DWORD PTR [ecx+0xc]
  405d44:	rcr    BYTE PTR [eax+0x5a],1
  405d47:	sbb    eax,0x6618a1e2
  405d4c:	mov    edi,0x4fcb3e1b
  405d51:	sub    DWORD PTR [edi+ebp*4+0x1d],ebp
  405d55:	nop
  405d56:	mov    edx,0xe368911f
  405d5b:	xchg   DWORD PTR [edi],ebx
  405d5d:	call   0xf2c:0xd287f50a
  405d64:	adc    eax,0x6bcd3978
  405d69:	mov    ecx,0x2eb6af8f
  405d6e:	(bad)  
  405d6f:	inc    esi
  405d70:	or     eax,DWORD PTR ds:0xf41b1faf
  405d76:	cmc    
  405d77:	jl     0x405d3b
  405d79:	gs push ecx
  405d7b:	inc    edx
  405d7c:	(bad)  
  405d7d:	lock test eax,0x8eeff8ae
  405d83:	and    DWORD PTR [ebp-0x55],eax
  405d86:	retf   
  405d87:	inc    esp
  405d88:	mov    dl,0xf8
  405d8a:	xchg   ecx,eax
  405d8b:	sar    bl,1
  405d8d:	mov    dh,0xc9
  405d8f:	push   0x3b26e15
  405d94:	cmp    eax,0x8913b1fc
  405d99:	imul   ebp,DWORD PTR [ebp-0x37],0x17
  405d9d:	loopne 0x405d47
  405d9f:	sub    eax,0xd2cfb07
  405da4:	xor    eax,0x2a37bff6
  405da9:	add    eax,0x99d0f008
  405dae:	scas   eax,DWORD PTR es:[edi]
  405daf:	xchg   ecx,eax
  405db0:	pop    edi
  405db1:	push   0x845c9d35
  405db6:	jecxz  0x405da6
  405db8:	std    
  405db9:	cdq    
  405dba:	out    0x1,al
  405dbc:	jge    0x405d41
  405dbe:	sub    DWORD PTR [edi],0xffffff99
  405dc1:	retf   
  405dc2:	cld    
  405dc3:	imul   esi,edi,0x77
  405dc6:	hlt    
  405dc7:	out    0xe9,eax
  405dc9:	xchg   esp,eax
  405dca:	pop    edi
  405dcb:	ret    
  405dcc:	xchg   esp,eax
  405dcd:	or     eax,0x97ae1fc7
  405dd2:	and    al,0xc4
  405dd4:	mov    ecx,0x82e8386e
  405dd9:	or     al,0x96
  405ddb:	ror    esp,cl
  405ddd:	shr    DWORD PTR [ebx+edx*2],1
  405de0:	addr16 cmp esi,edi
  405de3:	jns    0x405daa
  405de5:	test   eax,0x6f8644e
  405dea:	mov    cl,0x48
  405dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ded:	out    0x6d,eax
  405def:	fild   DWORD PTR [esi-0x530ce58b]
  405df5:	sub    cl,BYTE PTR [ecx+ecx*4]
  405df8:	pop    edi
  405df9:	adc    bh,BYTE PTR [esi+0x45]
  405dfc:	pop    ds
  405dfd:	out    dx,eax
  405dfe:	addr16 push 0x41
  405e01:	lods   eax,DWORD PTR ds:[esi]
  405e02:	ret    
  405e03:	imul   esp,ebx,0x9b442994
  405e09:	icebp  
  405e0a:	popf   
  405e0b:	adc    DWORD PTR [ebx],edi
  405e0d:	aad    0xfc
  405e0f:	xchg   DWORD PTR [edx+0x65],eax
  405e12:	push   esi
  405e13:	cmp    BYTE PTR [ebp-0xef5e384],dl
  405e19:	sub    edi,DWORD PTR [edi-0x52]
  405e1c:	(bad)  
  405e1d:	cmp    DWORD PTR [edi],esi
  405e1f:	sti    
  405e20:	frstor [ebp+eax*8+0x4d]
  405e24:	stos   BYTE PTR es:[edi],al
  405e25:	dec    ecx
  405e26:	jg     0x405daa
  405e28:	in     eax,dx
  405e29:	in     al,0x50
  405e2b:	popf   
  405e2c:	psubsb mm5,QWORD PTR [ebp-0x49]
  405e30:	pcmpeqd mm6,mm2
  405e33:	sbb    eax,0xc10d8064
  405e38:	dec    eax
  405e39:	lds    ebx,FWORD PTR [edx]
  405e3b:	push   0xffffffc4
  405e3d:	mov    bl,BYTE PTR [edi]
  405e3f:	retf   
  405e40:	adc    DWORD PTR [edx+0x50],ebx
  405e43:	add    BYTE PTR [edi+0x37],bl
  405e46:	fcmovu st,st(5)
  405e48:	aam    0xfb
  405e4a:	mov    al,ds:0x72219b3f
  405e4f:	adc    bh,BYTE PTR [ebx+0x1638a30a]
  405e55:	adc    ecx,DWORD PTR [ecx]
  405e57:	push   es
  405e58:	cmp    eax,ecx
  405e5a:	int    0xd7
  405e5c:	or     BYTE PTR [ecx],ah
  405e5e:	sub    eax,0xf8cd47c7
  405e63:	test   eax,0x975d9efa
  405e68:	aas    
  405e69:	imul   dh
  405e6b:	sbb    cl,dl
  405e6d:	std    
  405e6e:	push   ds
  405e6f:	mov    ch,0xd0
  405e71:	inc    ebp
  405e72:	mov    DWORD PTR [edx-0xf],ecx
  405e75:	add    DWORD PTR [edi+0xe178bd],edx
  405e7b:	sbb    bl,BYTE PTR [eax+0x11265c8]
  405e81:	jl     0x405ed7
  405e83:	sbb    al,0xc4
  405e85:	mov    al,0x71
  405e87:	shl    DWORD PTR [ebx],0xfb
  405e8a:	sti    
  405e8b:	xor    BYTE PTR [ebp-0x6d],bl
  405e8e:	dec    eax
  405e8f:	pop    esp
  405e90:	imul   esi,DWORD PTR [edx],0x3d
  405e93:	pushf  
  405e94:	inc    esp
  405e95:	mov    edx,0xfa998741
  405e9a:	test   BYTE PTR [eax+0x5cc2ed01],al
  405ea0:	and    DWORD PTR [ecx-0x74],esi
  405ea3:	or     DWORD PTR [esi],ecx
  405ea5:	sub    ch,BYTE PTR [ebp+0xff787d0]
  405eab:	push   ds
  405eac:	jo     0x405ec4
  405eae:	cmp    edx,DWORD PTR [edi+0x59f68ac7]
  405eb4:	mov    dh,0x31
  405eb6:	jno    0x405f24
  405eb8:	xchg   ebp,eax
  405eb9:	jns    0x405ef6
  405ebb:	arpl   WORD PTR [edx-0x24b7846a],bx
  405ec1:	adc    al,0xa1
  405ec3:	stc    
  405ec4:	adc    al,0x33
  405ec6:	(bad)  
  405ec7:	mov    eax,fs:0xb0b3952f
  405ecd:	mov    edx,0x51978968
  405ed2:	mov    dl,0x57
  405ed4:	jge    0x405f2a
  405ed6:	lods   al,BYTE PTR ds:[esi]
  405ed7:	xor    eax,0x2aa2c2c0
  405edc:	imul   esi,DWORD PTR es:[ebp+0x25],0x8deea7d2
  405ee4:	mov    ebx,0x1833fb67
  405ee9:	mov    edi,0xf0c845d7
  405eee:	pop    edx
  405eef:	dec    edi
  405ef0:	scas   al,BYTE PTR es:[edi]
  405ef1:	push   0xffffffd6
  405ef3:	sbb    eax,eax
  405ef5:	je     0x405ecd
  405ef7:	mov    dh,0xce
  405ef9:	cmp    eax,0x4fcafb55
  405efe:	jp     0x405ea8
  405f00:	ror    BYTE PTR ds:0xcc3b0ff5,cl
  405f06:	cmp    BYTE PTR [edi-0x33c396c3],ch
  405f0c:	sbb    al,0x97
  405f0e:	nop
  405f0f:	sub    ebx,DWORD PTR [edx+0x6]
  405f12:	inc    edi
  405f13:	jge    0x405f1c
  405f15:	cmp    edi,DWORD PTR [eax-0x72]
  405f18:	dec    edx
  405f19:	sbb    al,0xe5
  405f1b:	xchg   BYTE PTR [ecx+ebp*2-0x76],al
  405f1f:	pusha  
  405f20:	dec    eax
  405f21:	pop    eax
  405f22:	and    al,0xad
  405f24:	xchg   esp,eax
  405f25:	xchg   ebp,eax
  405f26:	scas   eax,DWORD PTR es:[edi]
  405f27:	into   
  405f28:	xchg   ebx,eax
  405f29:	or     eax,0xe1b2305a
  405f2e:	push   eax
  405f2f:	pushf  
  405f30:	mov    dh,0x8a
  405f32:	jns    0x405f62
  405f34:	adc    bl,BYTE PTR [eax-0x54]
  405f37:	sar    esi,0xc5
  405f3a:	ret    
  405f3b:	out    dx,eax
  405f3c:	fst    DWORD PTR [ebx]
  405f3e:	adc    al,0xa9
  405f40:	jnp    0x405ee7
  405f42:	cmp    DWORD PTR [ebp+ebp*2+0x73],edi
  405f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f47:	sbb    BYTE PTR [edx],0xd8
  405f4a:	or     DWORD PTR ds:0x431329ba,esi
  405f50:	push   es
  405f51:	sub    DWORD PTR [esi-0x15],edx
  405f54:	pop    es
  405f55:	leave  
  405f56:	leave  
  405f57:	sbb    DWORD PTR ds:0x4915a511,esi
  405f5d:	mov    dh,0x6a
  405f5f:	push   edi
  405f60:	test   BYTE PTR [esi+0x1c],0x43
  405f64:	stos   DWORD PTR es:[edi],eax
  405f65:	pop    eax
  405f66:	xchg   BYTE PTR [edx+0x218ffa89],ch
  405f6c:	adc    eax,0xd809976c
  405f71:	fcom   st(5)
  405f73:	test   eax,0xef6867d5
  405f78:	mov    al,0x12
  405f7a:	es ja  0x405fca
  405f7d:	rcr    DWORD PTR [edi+eiz*8-0x1d],1
  405f81:	call   0x21c0:0x41394f97
  405f88:	adc    BYTE PTR [eax-0x32],cl
  405f8b:	push   esi
  405f8c:	mov    ecx,DWORD PTR [ebx+0x7a]
  405f8f:	jnp    0x405f77
  405f91:	test   dh,0x2e
  405f94:	xchg   edx,eax
  405f95:	loop   0x406007
  405f97:	aaa    
  405f98:	and    ebx,eax
  405f9a:	xchg   ebp,eax
  405f9b:	cwde   
  405f9c:	repz and eax,0x1a
  405fa0:	imul   ebx,DWORD PTR [eax-0x156bb42c],0xe373c1b0
  405faa:	mov    ch,0xed
  405fac:	mov    esp,0xe1a3512
  405fb1:	inc    esi
  405fb2:	in     eax,0xb
  405fb4:	repz shl al,1
  405fb7:	scas   al,BYTE PTR es:[edi]
  405fb8:	jmp    0x3b11:0x257a5059
  405fbf:	xchg   ebx,eax
  405fc0:	sbb    BYTE PTR ds:[ecx-0x1b2051da],0x3b
  405fc8:	inc    edx
  405fc9:	sub    al,0x5d
  405fcb:	mov    edi,esp
  405fcd:	clc    
  405fce:	(bad)  
  405fcf:	sahf   
  405fd0:	fs hlt 
  405fd2:	ja     0x405ff5
  405fd4:	xlat   BYTE PTR ds:[ebx]
  405fd5:	xchg   edi,eax
  405fd6:	add    al,0x89
  405fd8:	fadd   QWORD PTR [esi+0x76b3a6bf]
  405fde:	push   ss
  405fdf:	leave  
  405fe0:	and    ebp,DWORD PTR [eax]
  405fe2:	hlt    
  405fe3:	bound  ecx,QWORD PTR [ebx+0x16b6f1a5]
  405fe9:	(bad)  
  405fea:	xor    dh,bl
  405fec:	popf   
  405fed:	inc    edx
  405fee:	stos   DWORD PTR es:[edi],eax
  405fef:	in     al,dx
  405ff0:	repnz or ah,dl
  405ff3:	fistp  QWORD PTR [ebp-0x62]
  405ff6:	xor    BYTE PTR [ebx-0x3c],cl
  405ff9:	stc    
  405ffa:	xchg   ebp,eax
  405ffb:	and    DWORD PTR [ebx],esi
  405ffd:	ror    ch,0x33
  406000:	sbb    eax,0x95036810
  406005:	aas    
  406006:	loop   0x406065
  406008:	js     0x405fe4
  40600a:	ins    DWORD PTR es:[edi],dx
  40600b:	add    BYTE PTR [eax],0xab
  40600e:	and    DWORD PTR ds:0x648b8673,esi
  406014:	fild   DWORD PTR [eax]
  406016:	jg     0x406090
  406018:	adc    edx,DWORD PTR [ebp+0x2f914743]
  40601e:	mov    edx,0xed86993f
  406023:	sub    BYTE PTR [esi+0x5238f154],dl
  406029:	pop    es
  40602a:	pop    ebp
  40602b:	and    ch,cl
  40602d:	sbb    al,0x6
  40602f:	shl    DWORD PTR [ebp-0x12],1
  406032:	dec    eax
  406033:	or     eax,0x3e3a3e0a
  406038:	xor    ax,si
  40603b:	add    eax,edi
  40603d:	cmp    edx,eax
  40603f:	je     0x408557
  406045:	mov    eax,DWORD PTR [ebp-0x8]
  406048:	mov    DWORD PTR [ebp-0x18],eax
  40604b:	mov    eax,DWORD PTR [ebp-0x10]
  40604e:	add    eax,DWORD PTR [ebp-0x54]
  406051:	mov    DWORD PTR [ebp-0x1c],0xf89c85a1
  406058:	mov    DWORD PTR [ebp-0x8],eax
  40605b:	mov    eax,0xf89c85a2
  406060:	mov    DWORD PTR [ebp-0x28],eax
  406063:	mov    DWORD PTR [ebp-0x5c],0xf89c85a3
  40606a:	mov    DWORD PTR [ebp-0x40],0xf89c85bc
  406071:	mov    DWORD PTR [ebp-0x30],eax
  406074:	mov    eax,DWORD PTR [ebp-0x1c]
  406077:	xor    eax,esi
  406079:	add    eax,edi
  40607b:	jmp    0x408513
  406080:	mov    DWORD PTR [ebp-0x4c],0xf89c85b4
  406087:	mov    DWORD PTR [ebp-0x50],0xf89c858f
  40608e:	mov    eax,DWORD PTR [ebp-0x30]
  406091:	mov    edx,DWORD PTR [ebp-0xc]
  406094:	xor    eax,esi
  406096:	add    eax,edi
  406098:	imul   eax,edx
  40609b:	mov    edx,DWORD PTR [ebp-0x8]
  40609e:	mov    al,BYTE PTR [eax+edx*1]
  4060a1:	mov    BYTE PTR [ebp-0x1],al
  4060a4:	mov    eax,DWORD PTR [ebp-0x30]
  4060a7:	mov    edx,DWORD PTR [ebp-0xc]
  4060aa:	xor    eax,esi
  4060ac:	add    eax,edi
  4060ae:	imul   eax,edx
  4060b1:	mov    edx,DWORD PTR [ebp-0x5c]
  4060b4:	xor    edx,esi
  4060b6:	add    eax,edx
  4060b8:	mov    edx,DWORD PTR [ebp-0x8]
  4060bb:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  4060c3:	mov    edx,DWORD PTR [ebp-0x4c]
  4060c6:	xor    edx,esi
  4060c8:	lea    eax,[edx+eax*1+0x3272f3]
  4060cf:	movzx  edx,BYTE PTR [ebp-0x1]
  4060d3:	xor    edx,eax
  4060d5:	mov    BYTE PTR [ebp-0x1],dl
  4060d8:	mov    al,BYTE PTR [ebp-0x1]
  4060db:	mov    edx,DWORD PTR [ebp-0x30]
  4060de:	mov    ebx,DWORD PTR [ebp-0xc]
  4060e1:	xor    edx,esi
  4060e3:	add    edx,edi
  4060e5:	imul   edx,ebx
  4060e8:	mov    ebx,DWORD PTR [ebp-0x8]
  4060eb:	mov    BYTE PTR [edx+ebx*1],al
  4060ee:	mov    eax,DWORD PTR [ebp-0x30]
  4060f1:	mov    edx,DWORD PTR [ebp-0xc]
  4060f4:	xor    eax,esi
  4060f6:	add    eax,edi
  4060f8:	imul   eax,edx
  4060fb:	mov    edx,DWORD PTR [ebp-0x8]
  4060fe:	mov    al,BYTE PTR [eax+edx*1]
  406101:	mov    BYTE PTR [ebp-0x1],al
  406104:	mov    eax,DWORD PTR [ebp-0x30]
  406107:	mov    edx,DWORD PTR [ebp-0xc]
  40610a:	xor    eax,esi
  40610c:	add    eax,edi
  40610e:	imul   eax,edx
  406111:	mov    edx,DWORD PTR [ebp-0x28]
  406114:	xor    edx,esi
  406116:	add    eax,edx
  406118:	mov    edx,DWORD PTR [ebp-0x8]
  40611b:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f3]
  406123:	mov    edx,DWORD PTR [ebp-0x50]
  406126:	xor    edx,esi
  406128:	lea    eax,[edx+eax*1+0x3272f3]
  40612f:	movzx  edx,BYTE PTR [ebp-0x1]
  406133:	xor    edx,eax
  406135:	mov    BYTE PTR [ebp-0x1],dl
  406138:	mov    al,BYTE PTR [ebp-0x1]
  40613b:	mov    edx,DWORD PTR [ebp-0x30]
  40613e:	mov    ebx,DWORD PTR [ebp-0xc]
  406141:	xor    edx,esi
  406143:	add    edx,edi
  406145:	imul   edx,ebx
  406148:	mov    ebx,DWORD PTR [ebp-0x8]
  40614b:	jmp    0x4084fc
  406150:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406151:	mov    dh,0x7b
  406153:	sbb    eax,0x86859860
  406158:	scas   eax,DWORD PTR es:[edi]
  406159:	mov    cl,0xac
  40615b:	nop
  40615c:	cmp    eax,0x5b348937
  406161:	cmp    BYTE PTR [ebx-0x7ca3107d],al
  406167:	cmp    DWORD PTR [ecx+eiz*1-0x77],0xffffffe3
  40616c:	(bad)  [edx]
  40616e:	pop    ebp
  40616f:	pop    edx
  406170:	test   eax,0xb0948cfa
  406175:	jecxz  0x406135
  406177:	pop    es
  406178:	je     0x406108
  40617a:	cmp    edi,edi
  40617c:	inc    edi
  40617d:	outs   dx,DWORD PTR ds:[esi]
  40617e:	pop    ebx
  40617f:	(bad)  
  406180:	jl     0x406115
  406182:	push   ebp
  406183:	outs   dx,BYTE PTR ds:[esi]
  406184:	es stos DWORD PTR es:[edi],eax
  406186:	aaa    
  406187:	dec    eax
  406188:	xchg   ebp,ecx
  40618a:	in     al,0xad
  40618c:	inc    ebp
  40618d:	push   ecx
  40618e:	sbb    ah,BYTE PTR [edx-0x7e7b0567]
  406194:	jecxz  0x406150
  406196:	sbb    eax,0x5e4846bb
  40619b:	and    esp,esi
  40619d:	lea    esi,[eax]
  40619f:	pop    ebx
  4061a0:	mov    ds:0x98ebbb0c,eax
  4061a6:	je     0x4061aa
  4061a8:	pop    es
  4061a9:	popf   
  4061aa:	jmp    0x40620e
  4061ac:	aas    
  4061ad:	xchg   ebp,eax
  4061ae:	test   BYTE PTR [ebp-0x65],0x62
  4061b2:	xor    al,0x58
  4061b4:	jle    0x406221
  4061b6:	aas    
  4061b7:	dec    eax
  4061b8:	call   0xefff:0xa112dbe3
  4061bf:	in     eax,0xf5
  4061c1:	xor    DWORD PTR [ecx+ebp*8-0x666cfaa8],0x61f9e0b7
  4061cc:	or     BYTE PTR [esi-0x9d7ef4d],al
  4061d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d4:	jg     0x406182
  4061d6:	sbb    esp,DWORD PTR [ebx-0x9]
  4061d9:	pop    ds
  4061da:	test   DWORD PTR fs:[ebx+0x5d],ebx
  4061de:	mov    ebp,0x9d9a2dcf
  4061e3:	popf   
  4061e4:	ret    
  4061e5:	jle    0x406209
  4061e7:	dec    edx
  4061e8:	cmp    eax,0x8260aeab
  4061ed:	into   
  4061ee:	retf   0x9f2e
  4061f1:	or     ecx,ebp
  4061f3:	jmp    0xe4c0:0xdf8b790e
  4061fa:	in     eax,0x62
  4061fc:	pop    ss
  4061fd:	push   0x1a5053c
  406202:	lds    esi,FWORD PTR [ebx+0x64]
  406205:	dec    edi
  406206:	add    ebx,ebx
  406208:	xchg   edx,eax
  406209:	jns    0x40624a
  40620b:	test   DWORD PTR [edi+0x40f4367b],esp
  406211:	out    0x85,al
  406213:	push   ss
  406214:	jmp    0x406274
  406216:	and    DWORD PTR [edi+ebx*2-0x4d],edx
  40621a:	loopne 0x406269
  40621c:	arpl   bp,ax
  40621e:	ret    0xb4eb
  406221:	dec    ebx
  406222:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406223:	push   ebx
  406224:	adc    dh,BYTE PTR [edi-0x6a04c61b]
  40622a:	sar    DWORD PTR [edi+esi*2+0xb],cl
  40622e:	out    0x54,al
  406230:	push   edi
  406231:	stc    
  406232:	in     eax,dx
  406233:	cwde   
  406234:	(bad)  
  406235:	cwde   
  406236:	jae    0x406290
  406238:	xchg   edi,eax
  406239:	pusha  
  40623a:	jmp    0x406203
  40623c:	ret    0xa5ab
  40623f:	iret   
  406240:	arpl   WORD PTR [edi],cx
  406242:	sub    DWORD PTR [ebp-0x7580ffad],esp
  406248:	push   ebx
  406249:	mov    DWORD PTR [eax],eax
  40624b:	inc    edx
  40624c:	outs   dx,DWORD PTR ds:[esi]
  40624d:	inc    edi
  40624e:	je     0x406205
  406250:	sub    esi,DWORD PTR [edx+0x4361a348]
  406256:	or     DWORD PTR [eax+0xd1c6a6d],ebp
  40625c:	(bad)  
  40625d:	pop    ss
  40625e:	jno    0x40620c
  406260:	popf   
  406261:	push   ds
  406262:	pop    es
  406263:	push   edx
  406264:	ins    DWORD PTR es:[edi],dx
  406265:	jns    0x40629d
  406267:	ins    DWORD PTR es:[edi],dx
  406268:	cmc    
  406269:	fwait
  40626a:	out    dx,eax
  40626b:	or     DWORD PTR ds:0x3596fb7d,eax
  406271:	into   
  406272:	cld    
  406273:	dec    ebp
  406274:	adc    ch,BYTE PTR [eax+edi*2-0x1e]
  406278:	mov    ebp,0x2a9e8887
  40627d:	jmp    0x7455:0xe1d18e0c
  406284:	retf   0x22ec
  406287:	lods   al,BYTE PTR ds:[esi]
  406288:	scas   al,BYTE PTR es:[edi]
  406289:	and    ch,dl
  40628b:	mov    bl,0xfc
  40628d:	mov    ebx,0x9443b455
  406292:	cmp    BYTE PTR [esi],dl
  406294:	retf   0x989f
  406297:	retf   0x58fe
  40629a:	pop    ebx
  40629b:	or     al,BYTE PTR [eax+0x21]
  40629e:	jl     0x4062e4
  4062a0:	add    al,0x4a
  4062a2:	ins    DWORD PTR es:[edi],dx
  4062a3:	ins    BYTE PTR es:[edi],dx
  4062a4:	es ins BYTE PTR es:[edi],dx
  4062a6:	dec    edx
  4062a7:	fbld   TBYTE PTR [esi-0x4892179c]
  4062ad:	sbb    ebp,DWORD PTR [edx]
  4062af:	or     BYTE PTR [esi-0x76],0x9c
  4062b3:	mov    al,0xb7
  4062b5:	pop    esp
  4062b6:	adc    al,0x46
  4062b8:	xor    bh,BYTE PTR [edi]
  4062ba:	ror    ch,0x6
  4062bd:	out    0x10,al
  4062bf:	call   0x105:0x4b620a1d
  4062c6:	and    al,0x45
  4062c8:	pusha  
  4062c9:	test   al,0x83
  4062cb:	add    al,0x8b
  4062cd:	adc    al,0xc1
  4062cf:	mov    esi,0xdc471b41
  4062d4:	pop    ebp
  4062d5:	cmp    al,0x54
  4062d7:	jmp    0x406345
  4062d9:	push   ds
  4062da:	(bad)  
  4062db:	outs   dx,DWORD PTR ds:[esi]
  4062dc:	add    ch,BYTE PTR [edi+esi*8-0x50]
  4062e0:	dec    edi
  4062e1:	cmp    ecx,DWORD PTR [eax-0x2]
  4062e4:	mov    eax,ds:0x37489f34
  4062e9:	push   esi
  4062ea:	test   DWORD PTR [eax-0x15978a31],ebp
  4062f0:	and    al,0xcf
  4062f2:	push   esi
  4062f3:	add    BYTE PTR [ebp+0x65c7ec7a],bh
  4062f9:	jno    0x4062f7
  4062fb:	cdq    
  4062fc:	stc    
  4062fd:	not    BYTE PTR [edi-0x42]
  406300:	ret    
  406301:	jecxz  0x40629e
  406303:	out    dx,al
  406304:	mov    dh,0x16
  406306:	cs push edi
  406308:	ret    
  406309:	and    bh,BYTE PTR [esi]
  40630b:	add    DWORD PTR [edi+0x2d],eax
  40630e:	dec    ecx
  40630f:	mov    edx,0x1048d962
  406314:	jns    0x406305
  406316:	loope  0x40634f
  406318:	or     ah,ch
  40631a:	push   edi
  40631b:	xchg   ebp,eax
  40631c:	aam    0x60
  40631e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40631f:	cli    
  406320:	push   esi
  406321:	adc    DWORD PTR [edi+0x13],edx
  406324:	aam    0x96
  406326:	inc    edx
  406327:	add    DWORD PTR [eax+0x7],0xa0443ce
  40632e:	cmp    eax,DWORD PTR [edi+edx*1+0x4]
  406332:	mov    bh,0x67
  406334:	in     al,dx
  406335:	js     0x406323
  406337:	xor    dh,BYTE PTR [ebp-0x36]
  40633a:	cmp    bl,0xb0
  40633d:	sub    eax,0xe312d8fd
  406342:	fld    TBYTE PTR [ecx+edx*2+0x3d]
  406346:	or     dh,BYTE PTR [eax]
  406348:	ja     0x406313
  40634a:	cmp    DWORD PTR [ecx+edx*1+0x61],ebp
  40634e:	clc    
  40634f:	(bad)  
  406350:	out    dx,al
  406351:	adc    bl,BYTE PTR [edx-0xd]
  406354:	jnp    0x406384
  406356:	es das 
  406358:	xchg   edi,eax
  406359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40635a:	sbb    cl,BYTE PTR [edi+edi*4]
  40635d:	dec    ebx
  40635e:	pop    esp
  40635f:	add    bh,BYTE PTR [ebp-0x62d95f57]
  406365:	or     bl,0x9b
  406368:	jne    0x406338
  40636a:	xor    ebx,DWORD PTR [esi+0x5458573f]
  406370:	adc    al,0x2a
  406372:	mov    ah,0x1e
  406374:	iret   
  406375:	xor    al,BYTE PTR [eax-0x15]
  406378:	or     eax,0x9ddefe82
  40637d:	(bad)  
  40637e:	ja     0x4063cf
  406380:	xchg   esp,eax
  406381:	mov    edx,DWORD PTR [edx-0x29ee179f]
  406387:	xor    DWORD PTR [esi],edi
  406389:	pop    edi
  40638a:	or     BYTE PTR [esp+ecx*1-0x46288141],dl
  406391:	sbb    BYTE PTR [ebx-0x1c],cl
  406394:	jns    0x406400
  406396:	pop    edi
  406397:	mov    edi,0xfa659ca3
  40639c:	iret   
  40639d:	rcr    ebp,cl
  40639f:	jg     0x4063ae
  4063a1:	(bad)  
  4063a3:	cmp    DWORD PTR [ecx],eax
  4063a5:	jmp    0x7301:0xd721e88c
  4063ac:	nop
  4063ad:	mov    al,0x9c
  4063af:	mov    BYTE PTR [ebp+0x5b7a5835],ch
  4063b5:	xchg   ebx,eax
  4063b6:	(bad)  
  4063b7:	mov    eax,0x44de6bc8
  4063bc:	mov    eax,0x4c951e43
  4063c1:	das    
  4063c2:	pop    esp
  4063c3:	test   DWORD PTR [edi-0x4a6e08b1],esp
  4063c9:	push   ecx
  4063ca:	jmp    0x406424
  4063cc:	push   0xffffffe1
  4063ce:	fnstsw WORD PTR [eax]
  4063d0:	ror    DWORD PTR [edx-0x4b],0x22
  4063d4:	jno    0x4063ce
  4063d6:	cwde   
  4063d7:	in     al,dx
  4063d8:	adc    BYTE PTR [ebx],cl
  4063da:	fdiv   QWORD PTR [edx]
  4063dc:	pop    esi
  4063dd:	cmp    ebp,DWORD PTR [esi]
  4063df:	leave  
  4063e0:	loop   0x406408
  4063e2:	imul   eax,ecx,0x33
  4063e5:	sub    al,0xfd
  4063e7:	outs   dx,BYTE PTR ds:[esi]
  4063e8:	pmulhw mm6,QWORD PTR [ebx-0x42]
  4063ec:	out    dx,al
  4063ed:	sub    eax,0xfd596888
  4063f2:	les    esi,FWORD PTR [ebx+0x3fcf188c]
  4063f8:	int    0x43
  4063fa:	test   BYTE PTR [ecx],0xf0
  4063fd:	pop    edi
  4063fe:	pop    ebp
  4063ff:	je     0x406428
  406401:	nop
  406402:	adc    eax,0x136b35fa
  406407:	jbe    0x4063a0
  406409:	fidiv  WORD PTR [ebx]
  40640b:	inc    edx
  40640c:	jge    0x406486
  40640e:	mov    fs:0xbe478bd0,al
  406414:	inc    ecx
  406415:	add    DWORD PTR [eax+0x51ac2cbf],esi
  40641b:	in     eax,0xad
  40641d:	jg     0x4063e6
  40641f:	adc    bl,bl
  406421:	or     eax,0x80032d56
  406426:	pop    es
  406427:	jne    0x406466
  406429:	js     0x40643e
  40642b:	or     al,BYTE PTR [esi-0x4b0278c2]
  406431:	jmp    0xcbd3481b
  406436:	push   ebp
  406437:	(bad)  
  406438:	cli    
  406439:	xchg   ecx,eax
  40643a:	push   esp
  40643b:	loopne 0x4064ba
  40643d:	fistp  WORD PTR [ebp-0x73]
  406440:	(bad)  
  406441:	fiadd  DWORD PTR [edx-0x26b0e85d]
  406447:	xchg   edx,eax
  406448:	jbe    0x406480
  40644a:	adc    esp,esi
  40644c:	icebp  
  40644d:	and    DWORD PTR [edi+ecx*4+0x644352c7],esi
  406454:	cld    
  406455:	pop    ebp
  406456:	fnstenv [ebx]
  406458:	sub    ecx,ecx
  40645a:	xlat   BYTE PTR ds:[ebx]
  40645b:	or     DWORD PTR [ecx],0xfdffa484
  406461:	call   0x640184e
  406466:	ins    BYTE PTR es:[edi],dx
  406467:	loop   0x406491
  406469:	push   eax
  40646a:	sub    esi,DWORD PTR [edx+0x6d459eeb]
  406470:	and    al,0xe8
  406472:	rcl    DWORD PTR [eax-0x67bbdab9],1
  406478:	cli    
  406479:	sbb    al,0xc7
  40647b:	xor    BYTE PTR [edi-0x533b92ea],0x29
  406482:	test   DWORD PTR [edi-0x3],ebp
  406485:	ss ret 
  406487:	sbb    DWORD PTR [eax+0x22],ebp
  40648a:	sub    eax,0xb13d651c
  40648f:	loop   0x406428
  406491:	imul   ebp,DWORD PTR ds:0xe13d9e68,0x7d
  406498:	(bad)  
  406499:	cmp    DWORD PTR [ecx-0x1e],edi
  40649c:	push   es
  40649d:	pop    es
  40649e:	lea    ecx,[ebx+0x247fa93a]
  4064a4:	adc    ebx,edx
  4064a6:	test   bh,ch
  4064a8:	push   es
  4064a9:	and    DWORD PTR [edx],edi
  4064ab:	push   0x40652a50
  4064b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064b1:	pusha  
  4064b2:	sub    ebx,eax
  4064b4:	int    0x19
  4064b6:	in     al,dx
  4064b7:	mov    eax,ds:0x8c8dd167
  4064bc:	lods   eax,DWORD PTR ds:[esi]
  4064bd:	jno    0x4064ff
  4064bf:	push   esp
  4064c0:	jmp    0x406531
  4064c2:	cmp    al,0x76
  4064c4:	dec    ecx
  4064c5:	mov    bh,dh
  4064c7:	and    DWORD PTR [eax-0x432b155],edi
  4064cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064ce:	es call 0xae426031
  4064d4:	shl    DWORD PTR [eax],cl
  4064d6:	or     ch,0x1e
  4064d9:	addr16 push es
  4064db:	or     ah,BYTE PTR [ebp+0x4d]
  4064de:	push   edx
  4064df:	jne    0x40650d
  4064e1:	in     eax,0x30
  4064e3:	iret   
  4064e4:	lds    esi,FWORD PTR [esi+0x28]
  4064e7:	push   0x3d2a6c32
  4064ec:	fcomp  QWORD PTR [edx-0x53]
  4064ef:	cdq    
  4064f0:	adc    al,0x12
  4064f2:	xor    al,cl
  4064f4:	inc    esi
  4064f5:	pop    ebp
  4064f6:	bound  eax,QWORD PTR [eax+0x15121b74]
  4064fc:	cmp    dh,BYTE PTR [edx-0xb79055b]
  406502:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406503:	shl    BYTE PTR [edi+0x74],cl
  406506:	and    al,bh
  406508:	in     al,0x82
  40650a:	cmp    dh,ah
  40650c:	jae    0x40650b
  40650e:	xchg   ecx,eax
  40650f:	xchg   ecx,eax
  406510:	sbb    esp,DWORD PTR [edi]
  406512:	mov    bl,0xca
  406514:	nop
  406515:	ins    BYTE PTR es:[edi],dx
  406516:	pop    ss
  406517:	(bad)  [ecx-0x42]
  40651a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40651b:	jg     0x4064f2
  40651d:	add    al,0x17
  40651f:	js     0x40657b
  406521:	std    
  406522:	hlt    
  406523:	jmp    0x888900c3
  406528:	cmp    ebp,DWORD PTR [edi]
  40652a:	imul   ebp,DWORD PTR fs:[ebp+0x47],0xa51ed3b5
  406532:	retf   
  406533:	pop    esp
  406534:	lahf   
  406535:	adc    DWORD PTR [ebp+0x26],ecx
  406538:	cmp    esp,esp
  40653a:	cmc    
  40653b:	test   ebp,0x3714026
  406541:	bound  ecx,QWORD PTR [edi-0x16]
  406544:	push   edx
  406545:	mov    ecx,0xfc6e2d2e
  40654a:	or     eax,0x6cc30418
  40654f:	std    
  406550:	push   0x71
  406552:	inc    ecx
  406553:	repz jmp 0xff30:0xd08a12b2
  40655b:	pushf  
  40655c:	cld    
  40655d:	push   es
  40655e:	push   0x8
  406560:	push   0xfaa5396d
  406565:	in     eax,dx
  406566:	push   esi
  406567:	push   edx
  406568:	(bad)  
  406569:	std    
  40656a:	adc    DWORD PTR [edi+0x3a],esp
  40656d:	fbld   TBYTE PTR [esi-0x7c7b341a]
  406573:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406574:	sbb    al,0x7c
  406576:	ficom  DWORD PTR [edx]
  406578:	mov    cl,0x6a
  40657a:	leave  
  40657b:	(bad)  [esi+eiz*2+0x4a]
  40657f:	retf   
  406580:	icebp  
  406581:	and    DWORD PTR [ebx-0x10ad3a24],esi
  406587:	not    cl
  406589:	cmp    edx,DWORD PTR [ecx]
  40658b:	sbb    ebx,DWORD PTR [edi]
  40658d:	adc    DWORD PTR [ebp+0x3c11a8a0],eax
  406593:	push   esi
  406594:	mov    fs,ecx
  406596:	add    bl,dh
  406598:	imul   ecx,DWORD PTR [esi-0x2fdde8c7],0x40d74363
  4065a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065a3:	je     0x406590
  4065a5:	enter  0x4bda,0x2e
  4065a9:	adc    ebx,ecx
  4065ab:	lahf   
  4065ac:	inc    DWORD PTR [edx]
  4065ae:	test   al,0xf2
  4065b0:	arpl   WORD PTR [ebx],si
  4065b2:	mov    ebx,0x4fce9f7e
  4065b7:	add    BYTE PTR [edx+0x13],0xf2
  4065bb:	loope  0x40661d
  4065bd:	cwde   
  4065be:	in     eax,dx
  4065bf:	pop    ebp
  4065c0:	hlt    
  4065c1:	add    eax,0xb365879a
  4065c6:	pop    edi
  4065c7:	pop    eax
  4065c8:	scas   al,BYTE PTR es:[edi]
  4065c9:	sub    eax,0xb92d528a
  4065ce:	shl    WORD PTR [edi],1
  4065d1:	dec    ebx
  4065d2:	pop    eax
  4065d3:	jle    0x406653
  4065d5:	retf   
  4065d6:	xchg   esi,eax
  4065d7:	sub    cl,BYTE PTR [edi+edi*8]
  4065da:	(bad)
  4065dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065de:	retf   
  4065df:	xchg   ecx,eax
  4065e0:	enter  0x3a06,0xc0
  4065e4:	push   es
  4065e5:	leave  
  4065e6:	std    
  4065e7:	out    0xc7,al
  4065e9:	sub    al,0xfa
  4065eb:	inc    edx
  4065ec:	ins    DWORD PTR es:[edi],dx
  4065ed:	sub    ebx,DWORD PTR [ebp+0x27c5eacf]
  4065f3:	iret   
  4065f4:	cli    
  4065f5:	stc    
  4065f6:	(bad)
  4065fa:	push   ds
  4065fb:	mov    cl,0xac
  4065fd:	test   edx,0x6e5f8e2c
  406603:	es in  al,0x8c
  406606:	test   BYTE PTR [edx+0x5],bl
  406609:	mov    ecx,0xa722ea2b
  40660e:	cmc    
  40660f:	stos   BYTE PTR es:[edi],al
  406610:	or     bh,BYTE PTR [esi]
  406612:	jl     0x40661a
  406614:	icebp  
  406615:	adc    eax,0xb9c8470d
  40661a:	enter  0x11f0,0xcd
  40661e:	outs   dx,BYTE PTR ds:[esi]
  40661f:	lods   eax,DWORD PTR ds:[esi]
  406620:	adc    DWORD PTR [ebx+0x53cebb19],0xffffffd9
  406627:	nop
  406628:	ins    BYTE PTR es:[edi],dx
  406629:	je     0x4065c2
  40662b:	enter  0x7e54,0x6f
  40662f:	pop    ebx
  406630:	pop    eax
  406631:	test   al,0xfe
  406633:	add    bh,bl
  406635:	pop    eax
  406636:	ficomp WORD PTR [edi-0x11]
  406639:	sub    al,0xe5
  40663b:	pop    esi
  40663c:	shl    BYTE PTR [edx+0x2a],cl
  40663f:	mov    ch,0xbf
  406641:	je     0x4065f3
  406643:	mov    dl,0x32
  406645:	aas    
  406646:	push   0xfffffffa
  406648:	dec    eax
  406649:	sub    al,0xcf
  40664b:	rcl    DWORD PTR [eax-0x27d6f4d7],1
  406651:	scas   al,BYTE PTR es:[edi]
  406652:	inc    esp
  406653:	mov    ebx,0xef4d8abf
  406658:	xchg   ebp,eax
  406659:	xchg   BYTE PTR [ebx],dl
  40665b:	shl    DWORD PTR [esi+eiz*1],cl
  40665e:	mov    ch,0x53
  406660:	mov    WORD PTR [ebp-0x1f],?
  406663:	pop    ecx
  406664:	fisub  DWORD PTR [ecx-0x72]
  406667:	mov    ebx,0xb3ccebb2
  40666c:	je     0x4066a8
  40666e:	xor    eax,0x12a84fe8
  406673:	out    0x2e,al
  406675:	push   ds
  406676:	retf   
  406677:	(bad)  
  406679:	adc    DWORD PTR [edi],eax
  40667b:	lds    eax,FWORD PTR [eax+0x8cc302b]
  406681:	aam    0x87
  406683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406684:	dec    edi
  406685:	inc    eax
  406686:	xor    ah,BYTE PTR [ebp+ebx*4+0x4e]
  40668a:	ss fwait
  40668c:	ds (bad) 
  40668e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40668f:	cs push edx
  406691:	test   al,0xae
  406693:	in     eax,0x62
  406695:	ja     0x406655
  406697:	call   FWORD PTR [esi+0x3b]
  40669a:	mov    eax,ds:0xe3444610
  40669f:	cli    
  4066a0:	or     DWORD PTR [ebp+ecx*8-0x71],ebp
  4066a4:	cmc    
  4066a5:	cmp    al,0x47
  4066a7:	std    
  4066a8:	(bad)  
  4066a9:	into   
  4066aa:	icebp  
  4066ab:	(bad)  
  4066ac:	test   ah,0xbe
  4066af:	daa    
  4066b0:	add    esi,DWORD PTR [esi+0x179ca0a]
  4066b6:	jg     0x40668b
  4066b8:	and    BYTE PTR [esi],bh
  4066ba:	aad    0xd9
  4066bc:	xchg   esi,eax
  4066bd:	push   eax
  4066be:	test   edi,eax
  4066c0:	lea    ecx,[ecx]
  4066c2:	nop
  4066c3:	sub    al,0xa0
  4066c5:	cmp    eax,0x7e95e13
  4066ca:	pop    edx
  4066cb:	call   0xdcf2:0xe1cd8cbb
  4066d2:	mov    ch,dh
  4066d4:	push   edx
  4066d5:	sub    DWORD PTR [ebx-0x5a16d952],0xa5f156b6
  4066df:	out    dx,al
  4066e0:	push   esp
  4066e1:	inc    esp
  4066e2:	mov    edi,0xedeb9eea
  4066e7:	aaa    
  4066e8:	jb     0x406750
  4066ea:	stos   DWORD PTR es:[edi],eax
  4066eb:	sub    al,0x54
  4066ed:	mov    dl,0x32
  4066ef:	mov    al,BYTE PTR [edi-0x1ea25401]
  4066f5:	pop    ebp
  4066f6:	adc    al,0xcf
  4066f8:	fcomp  DWORD PTR [ebp+0x76]
  4066fb:	(bad)  
  4066fc:	push   ecx
  4066fd:	xor    esp,DWORD PTR es:[ebx-0x38]
  406701:	mov    cl,0xcf
  406703:	mov    esi,0xc74abf61
  406708:	addr16 jno 0x4066f0
  40670b:	stos   BYTE PTR es:[edi],al
  40670c:	xchg   ebx,eax
  40670d:	jecxz  0x4066c6
  40670f:	in     al,0x3c
  406711:	iret   
  406712:	cmc    
  406713:	push   0x33
  406715:	add    eax,0x8e9e4c2f
  40671a:	dec    edi
  40671b:	adc    BYTE PTR [edi],bh
  40671d:	in     eax,0x1d
  40671f:	xchg   ecx,eax
  406720:	xlat   BYTE PTR ds:[ebx]
  406721:	aam    0x61
  406723:	cld    
  406724:	and    DWORD PTR [eax-0x3ca0b47c],0x4a0e35ab
  40672e:	mov    ebp,0x5b382113
  406733:	sub    ecx,DWORD PTR [ecx-0x54]
  406736:	sub    BYTE PTR [eax+0x19429875],dl
  40673c:	dec    ebx
  40673d:	lahf   
  40673e:	adc    BYTE PTR [edx+ebp*4-0x77],0xbf
  406743:	jecxz  0x4066ec
  406745:	iret   
  406746:	not    DWORD PTR [edx]
  406748:	aam    0x85
  40674a:	or     eax,0xabbefa8d
  40674f:	rcl    esp,cl
  406751:	repz mov edi,0x3463beb8
  406757:	(bad)  
  406759:	clc    
  40675a:	adc    DWORD PTR [ebx],eax
  40675c:	pushf  
  40675d:	jge    0x40679a
  40675f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406760:	and    bh,dh
  406762:	cld    
  406763:	repnz (bad) 
  406765:	jnp    0x406778
  406767:	js     0x406750
  406769:	xchg   edi,eax
  40676a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40676b:	fldl2t 
  40676d:	(bad)  
  40676e:	int    0xb
  406770:	mov    eax,0x57c530fd
  406775:	cmp    BYTE PTR [edx],ah
  406777:	push   ebx
  406778:	(bad)  
  406779:	pop    ebp
  40677a:	push   cs
  40677b:	outs   dx,BYTE PTR ds:[esi]
  40677c:	retf   0x3009
  40677f:	xor    esi,edi
  406781:	inc    ebx
  406782:	std    
  406783:	loopne 0x4067e5
  406785:	or     eax,0xa569cc0f
  40678a:	mov    ah,dh
  40678c:	rol    BYTE PTR [ebp-0x28e86d6a],0x64
  406793:	out    dx,al
  406794:	push   esi
  406795:	ins    DWORD PTR es:[edi],dx
  406796:	push   0xc4fac177
  40679b:	mov    dl,0x63
  40679d:	xchg   ebx,eax
  40679e:	cwde   
  40679f:	sbb    BYTE PTR [edx+0x8c6af07],bl
  4067a5:	rcr    ecx,1
  4067a7:	les    ebp,FWORD PTR [ebp+0x337940ec]
  4067ad:	mov    edx,0xd214cad8
  4067b2:	sub    edi,DWORD PTR [edx]
  4067b4:	cs icebp 
  4067b6:	adc    edx,ebp
  4067b8:	popa   
  4067b9:	lea    ecx,[edx+0xcec275]
  4067bf:	xlat   BYTE PTR ds:[ebx]
  4067c0:	jno    0x406801
  4067c2:	pop    esp
  4067c3:	lahf   
  4067c4:	jle    0x406784
  4067c6:	dec    ecx
  4067c7:	in     al,dx
  4067c8:	das    
  4067c9:	in     al,dx
  4067ca:	jp     0x406751
  4067cc:	ret    0x8b9a
  4067cf:	pop    esi
  4067d0:	inc    eax
  4067d1:	adc    al,0x65
  4067d3:	fbld   TBYTE PTR ds:0x9b9d07cb
  4067d9:	push   eax
  4067da:	mov    ?,WORD PTR [edx]
  4067dc:	fcomp  st(6)
  4067de:	stc    
  4067df:	pop    edx
  4067e0:	sub    eax,DWORD PTR [eax-0x63b5b962]
  4067e6:	jns    0x40681f
  4067e8:	xchg   esi,eax
  4067e9:	jbe    0x4067fa
  4067eb:	popf   
  4067ec:	pop    edi
  4067ed:	sbb    eax,0xc2d02312
  4067f2:	fistp  WORD PTR [ecx]
  4067f4:	nop
  4067f5:	int3   
  4067f6:	repnz bound ebx,QWORD PTR [ebx-0x71d1f789]
  4067fd:	mov    gs,WORD PTR [esi-0x2a]
  406800:	and    ah,BYTE PTR [ebp+0xae79d1f]
  406806:	int    0x76
  406808:	jmp    0xd4e286a6
  40680d:	jno    0x406854
  40680f:	enter  0xe192,0x6b
  406813:	sbb    DWORD PTR [ebp+ebx*4+0x6f],esp
  406817:	(bad)  
  406819:	or     edx,DWORD PTR [edi]
  40681b:	sub    al,0x75
  40681d:	cwde   
  40681e:	fwait
  40681f:	and    BYTE PTR [ebx+esi*8+0xf81948f],cl
  406826:	cld    
  406827:	sbb    bl,BYTE PTR [edi-0x1243549b]
  40682d:	jg     0x406830
  40682f:	scas   eax,DWORD PTR es:[edi]
  406830:	into   
  406831:	ret    
  406832:	sub    al,0xf6
  406834:	adc    eax,0x7ced8bd9
  406839:	inc    esp
  40683a:	xchg   ebp,eax
  40683b:	pop    es
  40683c:	in     al,0xfb
  40683e:	jge    0x4067fc
  406840:	jae    0x4068b1
  406842:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  406844:	cli    
  406845:	xchg   edx,eax
  406846:	mov    BYTE PTR [eax+esi*4-0x16],bh
  40684a:	shl    BYTE PTR [eax],1
  40684c:	push   edi
  40684d:	mov    al,0xd8
  40684f:	dec    edi
  406850:	and    BYTE PTR [ebx],0xd1
  406853:	addr16 in eax,0xda
  406856:	cmp    ch,BYTE PTR [ecx+0x7f77ecb3]
  40685c:	sti    
  40685d:	das    
  40685e:	pop    ss
  40685f:	mov    edx,ebp
  406861:	lods   al,BYTE PTR ds:[esi]
  406862:	inc    ebp
  406863:	mov    edi,0x8e8b0f4d
  406868:	adc    al,0x5b
  40686a:	sub    al,0xa
  40686c:	or     DWORD PTR [edi-0x7e5e402e],0x71
  406873:	(bad)  
  406875:	scas   al,BYTE PTR es:[edi]
  406876:	inc    eax
  406877:	lods   eax,DWORD PTR ds:[esi]
  406878:	enter  0x74fb,0xb6
  40687c:	inc    ebx
  40687d:	cmp    DWORD PTR [ebp+0x625de218],esp
  406883:	dec    eax
  406884:	cdq    
  406885:	inc    ecx
  406886:	adc    bh,0x7c
  406889:	icebp  
  40688a:	icebp  
  40688b:	ja     0x406883
  40688d:	sub    bh,BYTE PTR [ecx+0x30]
  406890:	aam    0x9c
  406892:	test   DWORD PTR [ecx+0xa8848d8],esi
  406898:	adc    DWORD PTR [edi+0x71330442],0x2b
  40689f:	fsincos 
  4068a1:	mov    ah,0xaa
  4068a3:	push   ebp
  4068a4:	adc    eax,0xdb76530e
  4068a9:	es inc ecx
  4068ab:	ror    DWORD PTR ds:0x6e452fe9,0x60
  4068b2:	cmp    al,0xc9
  4068b4:	pcmpgtd mm7,QWORD PTR [ebx-0x18d0d800]
  4068bb:	mov    ah,BYTE PTR [esi]
  4068bd:	loopne 0x4068a0
  4068bf:	push   es
  4068c0:	rcr    BYTE PTR [edx+edi*2-0x53],1
  4068c4:	call   0xb6b6:0x2b057a18
  4068cb:	add    al,BYTE PTR [esi+0x72]
  4068ce:	jns    0x406909
  4068d0:	cld    
  4068d1:	push   ebp
  4068d2:	into   
  4068d3:	push   ecx
  4068d4:	jbe    0x40690a
  4068d6:	test   cl,ch
  4068d8:	and    DWORD PTR [edx+edi*8],edi
  4068db:	cld    
  4068dc:	or     ecx,DWORD PTR [eax]
  4068de:	xchg   ebx,eax
  4068df:	xor    BYTE PTR [ebx-0x69a1214b],ah
  4068e5:	sub    ebp,edx
  4068e7:	out    dx,eax
  4068e8:	ret    0x7dab
  4068eb:	dec    ecx
  4068ec:	add    esi,ecx
  4068ee:	and    edi,0x2d
  4068f1:	dec    edi
  4068f2:	mov    ds:0xb0f7f183,al
  4068f7:	popa   
  4068f8:	adc    al,0x6
  4068fa:	ins    DWORD PTR es:[edi],dx
  4068fb:	(bad)  
  4068fc:	rcr    DWORD PTR [esi+0x4f],cl
  4068ff:	inc    ebx
  406900:	jnp    0x40692f
  406902:	sahf   
  406903:	retf   
  406904:	mov    ecx,0x3679f292
  406909:	mov    bh,0x23
  40690b:	js     0x406967
  40690d:	mov    ecx,0x2e280f4a
  406912:	sbb    dh,BYTE PTR [esi+eiz*2-0x1773539f]
  406919:	mov    BYTE PTR [ebp+0x15],dh
  40691c:	pusha  
  40691d:	push   esi
  40691e:	cs mov ah,0x52
  406921:	sub    edx,DWORD PTR [ebx-0x71185a2c]
  406927:	int3   
  406928:	mov    DWORD PTR [edi+0x45],0x77230324
  40692f:	nop
  406930:	mov    al,ds:0xf20505db
  406935:	sbb    al,0x93
  406937:	stos   BYTE PTR es:[edi],al
  406938:	inc    ecx
  406939:	shl    BYTE PTR [esi-0x3a],cl
  40693c:	(bad)  
  40693d:	out    0xe3,al
  40693f:	repnz mov ds:0x1d39670d,al
  406945:	hlt    
  406946:	nop
  406947:	popa   
  406948:	push   edi
  406949:	repz jl 0x40698c
  40694c:	jmp    0x3708:0x8dc9a3ca
  406953:	push   es
  406954:	dec    eax
  406955:	cld    
  406956:	cdq    
  406957:	fs call 0x716c830
  40695d:	dec    ecx
  40695e:	dec    ecx
  40695f:	pop    DWORD PTR fs:[edi-0x36]
  406963:	sub    BYTE PTR [eax+0x77],bh
  406966:	into   
  406967:	sub    DWORD PTR [edi+eax*8],ebx
  40696a:	int3   
  40696b:	mov    bh,0x8a
  40696d:	rol    dl,cl
  40696f:	mov    al,0x42
  406971:	pop    fs
  406973:	aas    
  406974:	adc    esp,DWORD PTR [esi-0x6b]
  406977:	das    
  406978:	cmp    BYTE PTR [eax+0x32],dl
  40697b:	dec    edx
  40697c:	adc    ebx,esi
  40697e:	sbb    DWORD PTR [esi+ebp*2],edi
  406981:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406982:	and    ebp,0xfb4f90e0
  406988:	leave  
  406989:	sub    eax,0xdf273383
  40698e:	ins    DWORD PTR es:[edi],dx
  40698f:	jbe    0x406946
  406991:	dec    ecx
  406992:	jne    0x4069e7
  406994:	fwait
  406995:	adc    BYTE PTR [ebp-0xb],ch
  406998:	mov    ebp,DWORD PTR [ecx-0x58]
  40699b:	inc    ebx
  40699c:	imul   esi,DWORD PTR [eax],0x725c9ffe
  4069a2:	mov    edi,ds
  4069a4:	(bad)  
  4069a5:	add    bh,BYTE PTR [edi+ebx*8]
  4069a8:	das    
  4069a9:	xchg   esi,eax
  4069aa:	sbb    al,0x46
  4069ac:	sti    
  4069ad:	ss loope 0x406948
  4069b0:	out    dx,al
  4069b1:	popf   
  4069b2:	js     0x40693c
  4069b4:	test   BYTE PTR [eax-0x63c1c282],ch
  4069ba:	xor    DWORD PTR [ecx-0x5162fd1c],edx
  4069c0:	dec    esp
  4069c1:	lods   al,BYTE PTR ds:[esi]
  4069c2:	rcl    ecx,1
  4069c4:	xchg   edx,eax
  4069c5:	(bad)  
  4069c7:	int    0x63
  4069c9:	dec    ecx
  4069ca:	adc    bh,BYTE PTR [ebp+0x19]
  4069cd:	mov    WORD PTR [edx+0x25],es
  4069d0:	rcr    DWORD PTR [edi+0x4f],0x3a
  4069d4:	outs   dx,BYTE PTR ds:[esi]
  4069d5:	mov    ds:0xc0692be5,eax
  4069da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069db:	add    eax,0x92daf266
  4069e0:	in     al,0x2b
  4069e2:	fld    QWORD PTR [edi-0x50]
  4069e5:	jge    0x406a1a
  4069e7:	dec    ecx
  4069e8:	aas    
  4069e9:	lods   eax,DWORD PTR ds:[esi]
  4069ea:	add    DWORD PTR [ebp-0x16],0xffffff86
  4069ee:	fild   QWORD PTR [ebx]
  4069f0:	fstp   TBYTE PTR [ecx+0x7c]
  4069f3:	sub    eax,0xc327a388
  4069f8:	fs pop eax
  4069fa:	add    DWORD PTR [ebx],ecx
  4069fc:	imul   esp,ebx,0x42
  4069ff:	mov    cl,0x50
  406a01:	dec    DWORD PTR [ebx-0xa0ee263]
  406a07:	jp     0x4069b4
  406a09:	cmc    
  406a0a:	inc    eax
  406a0b:	cmp    edi,esp
  406a0d:	cmc    
  406a0e:	adc    al,0x79
  406a10:	push   0x1d7f21c9
  406a15:	gs jnp 0x4069b8
  406a18:	and    edi,esp
  406a1a:	inc    ecx
  406a1b:	cmp    edx,0x98e9149f
  406a21:	push   ss
  406a22:	adc    eax,0xfa88a2aa
  406a27:	fstp   QWORD PTR [edx-0x3cf77281]
  406a2d:	rcl    DWORD PTR [ebx+0x3c062ea3],cl
  406a33:	fild   WORD PTR [edx-0x23]
  406a36:	loope  0x406a60
  406a38:	add    eax,0x92522a6d
  406a3d:	dec    ecx
  406a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a3f:	cmp    esi,DWORD PTR [ebx+0x52]
  406a42:	das    
  406a43:	and    BYTE PTR [edx+0x39],al
  406a46:	xor    eax,0x3cdb0f22
  406a4b:	ja     0x4069eb
  406a4d:	test   esi,eax
  406a4f:	xchg   esp,eax
  406a50:	inc    edi
  406a51:	repz jge 0x406a11
  406a54:	stos   DWORD PTR es:[edi],eax
  406a55:	xchg   edi,eax
  406a56:	shr    DWORD PTR [ebx+edi*1-0x17],cl
  406a5a:	sbb    dh,bh
  406a5c:	fsubr  QWORD PTR [edx+0x5c]
  406a5f:	leave  
  406a60:	mov    ebp,0xbecdb093
  406a65:	pusha  
  406a66:	or     al,ah
  406a68:	mov    dl,0xc0
  406a6a:	add    bh,0x18
  406a6d:	adc    BYTE PTR ds:0xb6886832,ch
  406a73:	xor    cl,cl
  406a75:	int    0x1c
  406a77:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a79:	add    ebx,esi
  406a7b:	test   al,0x72
  406a7d:	cmp    ecx,DWORD PTR cs:[ebx+ecx*4+0x27412940]
  406a85:	inc    BYTE PTR [ecx]
  406a87:	add    eax,0x9b000ddd
  406a8c:	and    BYTE PTR [esi+0x7f],0x3a
  406a90:	or     al,0x3a
  406a92:	aas    
  406a93:	push   ss
  406a94:	pop    ebp
  406a95:	xchg   esp,eax
  406a96:	push   esi
  406a97:	xchg   DWORD PTR [esp+esi*1-0x23],ebp
  406a9b:	ins    BYTE PTR es:[edi],dx
  406a9c:	inc    ebp
  406a9d:	or     DWORD PTR [ecx+0x4b],eax
  406aa0:	lahf   
  406aa1:	or     al,0x55
  406aa3:	shl    esi,0x50
  406aa6:	hlt    
  406aa7:	lea    eax,[ecx]
  406aa9:	adc    BYTE PTR [edx-0x66],cl
  406aac:	(bad)  
  406aad:	in     al,dx
  406aae:	pop    ebx
  406aaf:	aas    
  406ab0:	pop    es
  406ab1:	dec    ebx
  406ab2:	push   ebx
  406ab3:	pushf  
  406ab4:	jbe    0x406b1b
  406ab6:	mov    ch,0xe7
  406ab8:	jg     0x406a9b
  406aba:	test   eax,0x3bf8f3a7
  406ac0:	and    eax,0x25dc6f1b
  406ac5:	push   es
  406ac6:	test   DWORD PTR [ecx],esp
  406ac8:	mov    bl,0x64
  406aca:	pop    edx
  406acb:	inc    ebx
  406acc:	xchg   esp,eax
  406acd:	hlt    
  406ace:	cli    
  406acf:	stos   DWORD PTR es:[edi],eax
  406ad0:	jmp    esi
  406ad2:	sar    DWORD PTR [edi],1
  406ad4:	push   es
  406ad5:	les    esi,FWORD PTR [edi]
  406ad7:	and    dl,0xa4
  406ada:	stos   BYTE PTR es:[edi],al
  406adb:	inc    esp
  406adc:	das    
  406add:	push   ds
  406ade:	pop    esi
  406adf:	stc    
  406ae0:	lahf   
  406ae1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ae3:	pop    ebp
  406ae4:	(bad)  
  406ae5:	into   
  406ae6:	hlt    
  406ae7:	lds    edi,FWORD PTR [eax-0x750be3b2]
  406aed:	sub    eax,0xe0584ffc
  406af2:	jbe    0x406abe
  406af4:	mov    esi,0xbd0dfc68
  406af9:	mov    cs,ebx
  406afb:	mov    ds:0x8d3878e2,eax
  406b00:	add    eax,0xf4f9988
  406b05:	mov    bh,0x2b
  406b07:	dec    edx
  406b08:	jo     0x406ace
  406b0a:	add    al,0x6f
  406b0c:	ss loopne 0x406b1d
  406b0f:	nop
  406b10:	pop    es
  406b11:	mov    DWORD PTR [ecx],ebp
  406b13:	add    cl,BYTE PTR [eax-0x56]
  406b16:	jmp    edx
  406b18:	jnp    0x406b5e
  406b1a:	out    0x7a,eax
  406b1c:	or     al,0xe9
  406b1e:	pop    ebx
  406b1f:	push   cs
  406b20:	xchg   ebp,eax
  406b21:	mov    edx,0x71e90897
  406b26:	add    DWORD PTR [eax-0x11],esp
  406b29:	push   es
  406b2a:	js     0x406b53
  406b2c:	fcmovb st,st(5)
  406b2e:	addr16 aam 0xde
  406b31:	loop   0x406ba4
  406b33:	inc    esi
  406b34:	hlt    
  406b35:	dec    ebp
  406b36:	out    dx,eax
  406b37:	shl    dh,0xf3
  406b3a:	pop    es
  406b3b:	mov    edx,0x7f2c7e4c
  406b40:	call   0xf0e47b8a
  406b45:	iret   
  406b46:	push   esp
  406b47:	lods   al,BYTE PTR ds:[esi]
  406b48:	mov    gs,WORD PTR [eax]
  406b4a:	pop    edi
  406b4b:	push   ss
  406b4c:	fs clc 
  406b4e:	adc    al,0x19
  406b50:	pop    esp
  406b51:	inc    edi
  406b52:	cmp    eax,0x6b8ba9a
  406b57:	mov    gs,WORD PTR ss:[esp+ebp*1]
  406b5b:	rcl    DWORD PTR [edi],cl
  406b5d:	sti    
  406b5e:	lods   eax,DWORD PTR ds:[esi]
  406b5f:	push   eax
  406b60:	pop    ecx
  406b61:	icebp  
  406b62:	xchg   BYTE PTR ds:0x9ce09a13,cl
  406b68:	cli    
  406b69:	pop    ss
  406b6a:	mov    ss,WORD PTR [eax-0x7f61ef99]
  406b70:	mov    esp,0xf40d8efc
  406b75:	les    edi,FWORD PTR [edi]
  406b77:	dec    esp
  406b78:	aas    
  406b79:	rcr    BYTE PTR [edx*8-0x17269d60],cl
  406b80:	enter  0xd7f4,0x62
  406b84:	(bad)  
  406b85:	mov    bh,0xf1
  406b87:	and    ecx,DWORD PTR [edi-0x6a2cb2a7]
  406b8d:	add    al,0xee
  406b8f:	jnp    0x406b9c
  406b91:	pushf  
  406b92:	xor    eax,0x6fc78b49
  406b97:	(bad)  
  406b98:	scas   eax,DWORD PTR es:[edi]
  406b99:	mov    bh,0xfb
  406b9b:	inc    esp
  406b9c:	imul   ecx,DWORD PTR [edx-0x1e],0x988bcbc9
  406ba3:	sub    eax,0xbc9af9bc
  406ba8:	pop    esi
  406ba9:	fwait
  406baa:	mov    DWORD PTR ds:0x1f9761c4,0x6333116e
  406bb4:	xchg   dl,bl
  406bb6:	retf   
  406bb7:	mov    ch,0x29
  406bb9:	jle    0x406c34
  406bbb:	(bad)  
  406bbd:	and    al,0x81
  406bbf:	scas   eax,DWORD PTR es:[edi]
  406bc0:	inc    eax
  406bc1:	adc    DWORD PTR [ebx],edi
  406bc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bc4:	ins    DWORD PTR es:[edi],dx
  406bc5:	mov    BYTE PTR [edx-0x51],ch
  406bc8:	xor    eax,0x3623907e
  406bcd:	mov    edi,ss
  406bcf:	arpl   ax,si
  406bd1:	(bad)
  406bd5:	cdq    
  406bd6:	adc    BYTE PTR [ebx+ebx*4+0x267c912],al
  406bdd:	aaa    
  406bde:	inc    ebp
  406bdf:	jbe    0x406bc5
  406be1:	pop    ds
  406be2:	xor    dh,BYTE PTR [ebx]
  406be4:	imul   ecx,DWORD PTR [edx],0xc0c6cd5d
  406bea:	addr16 pop ebp
  406bec:	push   es
  406bed:	xor    DWORD PTR [esp+eax*1-0x79],eax
  406bf1:	cmc    
  406bf2:	shl    DWORD PTR [eax-0x50],cl
  406bf5:	inc    esp
  406bf6:	(bad)  
  406bf7:	shl    ecx,1
  406bf9:	jmp    0x406c6a
  406bfb:	lods   al,BYTE PTR ds:[esi]
  406bfc:	aam    0xc4
  406bfe:	test   eax,0x83c538e8
  406c03:	or     BYTE PTR [edx],0xee
  406c06:	loopne 0x406c34
  406c08:	in     al,0x4c
  406c0a:	adc    DWORD PTR [edi-0x21],edi
  406c0d:	mov    edx,edx
  406c0f:	mov    cl,0x6b
  406c11:	sbb    DWORD PTR [edi+0x55],esi
  406c14:	(bad)  
  406c15:	xchg   esp,eax
  406c16:	mov    ?,WORD PTR ds:0x3074e7f5
  406c1c:	inc    eax
  406c1d:	sbb    dh,0x77
  406c20:	add    DWORD PTR [ebp+0x4f],esi
  406c23:	push   es
  406c24:	data16 (bad) 
  406c26:	imul   eax
  406c28:	jo     0x406c38
  406c2a:	cmc    
  406c2b:	popa   
  406c2c:	jae    0x406c6b
  406c2e:	push   es
  406c2f:	in     eax,dx
  406c30:	add    DWORD PTR [ebp+0x35b232cb],esp
  406c36:	in     al,dx
  406c37:	jp     0x406c90
  406c39:	push   ds
  406c3a:	ss in  eax,0x3
  406c3d:	pop    ebp
  406c3e:	pop    ss
  406c3f:	add    esp,DWORD PTR [ebx]
  406c41:	inc    esi
  406c42:	add    edx,DWORD PTR [esi+0x3d390b23]
  406c48:	cwde   
  406c49:	mov    bh,0xba
  406c4b:	mov    esp,0x92bf64e
  406c50:	in     al,dx
  406c51:	sbb    bh,BYTE PTR [ebx-0x273650d6]
  406c57:	repz iret 
  406c59:	popa   
  406c5a:	or     DWORD PTR [edx],edx
  406c5c:	mov    ebx,0x1f4a6e19
  406c61:	mov    ds:0xcec0999b,al
  406c66:	in     al,dx
  406c67:	shl    dh,0x39
  406c6a:	addr16 pop eax
  406c6c:	sub    al,BYTE PTR [ecx+0x6fe4521d]
  406c72:	fist   WORD PTR [eax+0xe]
  406c75:	outs   dx,DWORD PTR ds:[esi]
  406c76:	in     eax,0xd4
  406c78:	fcomp  QWORD PTR [ecx-0x3db4a9d]
  406c7e:	xchg   al,bh
  406c80:	adc    DWORD PTR [eax],eax
  406c82:	push   0x8a5253a5
  406c87:	mov    bh,0xad
  406c89:	mov    dl,0x85
  406c8b:	out    dx,eax
  406c8c:	(bad)  
  406c8d:	faddp  st(2),st
  406c8f:	xchg   esi,eax
  406c90:	stos   BYTE PTR es:[edi],al
  406c91:	lahf   
  406c92:	adc    eax,0x4bfe69cc
  406c97:	mov    ch,0x47
  406c99:	or     eax,0x14759974
  406c9e:	hlt    
  406c9f:	and    bl,bh
  406ca1:	mov    DWORD PTR [ebx-0x2d],ecx
  406ca4:	xor    DWORD PTR [ecx+0x45],esp
  406ca7:	stc    
  406ca8:	add    al,0xe2
  406caa:	test   BYTE PTR [esi],0x30
  406cad:	mov    eax,ds:0xc4823663
  406cb2:	push   edi
  406cb3:	mov    dh,0x75
  406cb5:	push   eax
  406cb6:	test   DWORD PTR [edi+ecx*1],esi
  406cb9:	out    dx,eax
  406cba:	push   ds
  406cbb:	(bad)  
  406cbc:	cwde   
  406cbd:	ins    BYTE PTR es:[edi],dx
  406cbe:	xchg   edx,eax
  406cbf:	jl     0x406d39
  406cc1:	sub    DWORD PTR [eax-0x3],ebx
  406cc4:	pusha  
  406cc5:	test   BYTE PTR [edi-0x5e71a187],al
  406ccb:	pop    esi
  406ccc:	popa   
  406ccd:	sub    edi,DWORD PTR ds:[ebx]
  406cd0:	mov    edx,eax
  406cd2:	sbb    ecx,ebp
  406cd4:	xchg   edx,eax
  406cd5:	add    DWORD PTR [edi-0x7],0x2bae2e02
  406cdc:	ror    BYTE PTR [esi+0x48390016],cl
  406ce2:	dec    esp
  406ce3:	push   es
  406ce4:	outs   dx,DWORD PTR ds:[esi]
  406ce5:	fnstcw WORD PTR [ecx+0x320e73d6]
  406ceb:	dec    ebp
  406cec:	stos   DWORD PTR es:[edi],eax
  406ced:	inc    ebx
  406cee:	sbb    cl,BYTE PTR [ebp+esi*1+0x1cc3d24]
  406cf5:	pop    es
  406cf6:	dec    eax
  406cf7:	das    
  406cf8:	(bad)  
  406cf9:	and    ch,BYTE PTR [edx+ebp*2+0x1c36fe2d]
  406d00:	inc    ebp
  406d01:	cs mov ah,0xcf
  406d04:	repz xor BYTE PTR [edx],ah
  406d07:	push   edx
  406d08:	mov    ds:0xfe938eb1,eax
  406d0d:	div    DWORD PTR [ecx+0x1c849ff3]
  406d13:	fwait
  406d14:	or     ah,ah
  406d16:	sub    BYTE PTR [edi+ecx*1+0x7c],ch
  406d1a:	ins    DWORD PTR es:[edi],dx
  406d1b:	enter  0x5731,0xd
  406d1f:	rcl    ch,1
  406d21:	aam    0xc3
  406d23:	out    dx,eax
  406d24:	push   0x659ca3a9
  406d29:	pop    ds
  406d2a:	lock add eax,0xdaca5688
  406d30:	sub    DWORD PTR [ecx-0x71f8ee7a],0x3d
  406d37:	repnz imul esp,DWORD PTR [ebx+0x24fea9ee],0x145e3f4d
  406d42:	inc    esi
  406d43:	xchg   DWORD PTR [edi-0x49e687e6],esi
  406d49:	mov    esp,0xe3d576f4
  406d4e:	ret    0xe901
  406d51:	add    bh,dh
  406d53:	push   ecx
  406d54:	adc    bl,BYTE PTR [esi-0x380e860b]
  406d5a:	fstp   QWORD PTR ds:0x76a8d399
  406d60:	je     0x406d0b
  406d62:	stos   DWORD PTR es:[edi],eax
  406d63:	clc    
  406d64:	mov    ss,edi
  406d66:	pop    ecx
  406d67:	inc    ebp
  406d68:	icebp  
  406d69:	dec    ecx
  406d6a:	shl    bh,1
  406d6c:	cmp    DWORD PTR [ebx+0x64f0ccb],0x2d
  406d73:	push   cs
  406d74:	mov    BYTE PTR [edx],bl
  406d76:	jbe    0x406dc3
  406d78:	clc    
  406d79:	mov    ch,0xfb
  406d7b:	adc    eax,0x8c2bf0d8
  406d80:	sub    DWORD PTR [eax+edx*4-0x476fd949],ebp
  406d87:	retf   0x40ef
  406d8a:	sub    ah,dl
  406d8c:	inc    ebp
  406d8d:	gs cmc 
  406d8f:	and    ebp,edx
  406d91:	sbb    al,0xa4
  406d93:	outs   dx,DWORD PTR ds:[esi]
  406d94:	cmp    al,0xa9
  406d96:	ins    DWORD PTR es:[edi],dx
  406d97:	pop    ebx
  406d98:	or     esi,DWORD PTR [ebx+0x4f]
  406d9b:	bound  ebx,QWORD PTR [edi+0x613e3a07]
  406da1:	pop    DWORD PTR [edx+0x35831c6]
  406da7:	popa   
  406da8:	cli    
  406da9:	inc    eax
  406daa:	sub    DWORD PTR [ecx-0x5c88fc12],edi
  406db0:	ret    0x4d7
  406db3:	js     0x406e0f
  406db5:	adc    al,BYTE PTR [edx+edi*8]
  406db8:	adc    ah,BYTE PTR [eax+edi*4+0x1b1f3b49]
  406dbf:	(bad)  
  406dc0:	jecxz  0x406dfe
  406dc2:	mov    eax,ds:0x611f0015
  406dc7:	mov    dl,0xab
  406dc9:	sbb    eax,0x5f94d7e6
  406dce:	dec    ebp
  406dcf:	mov    ah,0x4e
  406dd1:	or     al,0xbb
  406dd3:	jle    0x406d75
  406dd5:	dec    edx
  406dd6:	ror    BYTE PTR [edx-0x39],1
  406dd9:	jecxz  0x406d7b
  406ddb:	cli    
  406ddc:	cmp    eax,0x136f1522
  406de1:	mov    edx,0x7ecb8c0e
  406de6:	mov    ecx,DWORD PTR [eax-0x75390212]
  406dec:	pop    ebx
  406ded:	mov    edx,0x55a5fab
  406df2:	ja     0x406dfc
  406df4:	mov    esp,0x4b9f1ef7
  406df9:	fiadd  WORD PTR [edx+ebp*1+0x19]
  406dfd:	sbb    BYTE PTR [eax+ecx*8-0x6842b15a],dh
  406e04:	xor    ebx,0x3b7f2ca3
  406e0a:	xchg   esi,eax
  406e0b:	ss hlt 
  406e0d:	mov    BYTE PTR [eax],ch
  406e0f:	imul   eax,edi,0x70
  406e12:	into   
  406e13:	daa    
  406e14:	jo     0x406df3
  406e16:	imul   al
  406e18:	or     DWORD PTR [ebp+0x64d219d],0xffffffe1
  406e1f:	add    al,0xa8
  406e21:	push   es
  406e22:	pop    ss
  406e23:	inc    eax
  406e24:	jp     0x406e2c
  406e26:	xor    BYTE PTR [ebp-0x4c978570],dl
  406e2c:	jnp    0x406dd8
  406e2e:	mov    cl,0xee
  406e30:	sub    ah,cl
  406e32:	ret    0x2054
  406e35:	in     eax,dx
  406e36:	pop    ds
  406e37:	icebp  
  406e38:	mov    dh,0x7c
  406e3a:	stos   DWORD PTR es:[edi],eax
  406e3b:	je     0x406ea4
  406e3d:	mov    cl,0x16
  406e3f:	or     ch,BYTE PTR [edi+0x399287d9]
  406e45:	sbb    edi,eax
  406e47:	sub    eax,0xc372515c
  406e4c:	je     0x406e33
  406e4e:	sub    ah,BYTE PTR [edx]
  406e50:	(bad)  
  406e51:	ficom  WORD PTR [ebp-0x42]
  406e54:	xor    esp,DWORD PTR [ebx+esi*2-0x3b]
  406e58:	cli    
  406e59:	push   edx
  406e5a:	ret    
  406e5b:	mov    eax,0x9cfff58e
  406e60:	dec    esp
  406e61:	add    eax,0x205f5352
  406e66:	adc    DWORD PTR [edi],eax
  406e68:	adc    ebp,esp
  406e6a:	jl     0x406e4d
  406e6c:	and    eax,0x1c45166
  406e71:	aad    0xd1
  406e73:	push   ebp
  406e74:	mov    esi,0xa04ab70
  406e79:	(bad)  
  406e7a:	leave  
  406e7b:	and    cl,bh
  406e7d:	cmc    
  406e7e:	adc    BYTE PTR [ecx+ebx*8+0x1d159f97],dl
  406e85:	and    ecx,DWORD PTR [esi-0x66]
  406e88:	inc    edi
  406e89:	(bad)  
  406e8a:	ins    BYTE PTR es:[edi],dx
  406e8b:	inc    ecx
  406e8c:	pop    ebp
  406e8d:	scas   eax,DWORD PTR es:[edi]
  406e8e:	ss dec ebp
  406e90:	cmp    ah,dl
  406e92:	inc    eax
  406e93:	sahf   
  406e94:	mov    edi,0x7c26e7fc
  406e99:	ret    0x2097
  406e9c:	ret    
  406e9d:	(bad)  
  406e9e:	sub    DWORD PTR ds:[ebx],ebp
  406ea1:	cmc    
  406ea2:	push   ss
  406ea3:	add    eax,0x9ca57d32
  406ea8:	push   ds
  406ea9:	sbb    BYTE PTR [ebx+0x7fbead7d],bh
  406eaf:	xchg   ebx,eax
  406eb0:	or     dl,0xc7
  406eb3:	or     DWORD PTR [ecx],eax
  406eb5:	iret   
  406eb6:	test   ecx,ebp
  406eb8:	push   ds
  406eb9:	lea    ecx,[edi-0x39]
  406ebc:	or     BYTE PTR ss:[ebx-0x5],ch
  406ec0:	add    eax,0xcb31a3be
  406ec5:	mov    edx,0x78f2162c
  406eca:	xchg   edi,eax
  406ecb:	lds    edi,FWORD PTR [edi-0x58735977]
  406ed1:	in     al,dx
  406ed2:	icebp  
  406ed3:	fistp  WORD PTR [ebp-0x7a72e755]
  406ed9:	adc    dh,BYTE PTR [edx]
  406edb:	mov    ch,0xc
  406edd:	inc    edi
  406ede:	mov    cl,0xb8
  406ee0:	stos   BYTE PTR es:[edi],al
  406ee1:	push   esi
  406ee2:	mov    ds:0x5292ee63,al
  406ee7:	adc    eax,0xb58ee56
  406eec:	ja     0x406f69
  406eee:	shr    DWORD PTR [eax-0x4e7b9fa9],1
  406ef4:	cwde   
  406ef5:	sbb    eax,edx
  406ef7:	jbe    0x406f3e
  406ef9:	pop    es
  406efa:	pop    ebx
  406efb:	add    DWORD PTR [esi-0x5aed6da7],esp
  406f01:	adc    eax,0xe4063c46
  406f06:	cmp    ah,ch
  406f08:	dec    sp
  406f0a:	rol    ah,0x89
  406f0d:	xor    ecx,ebp
  406f0f:	das    
  406f10:	ja     0x406ed8
  406f12:	jmp    DWORD PTR [edx+ecx*4]
  406f15:	lods   al,BYTE PTR ds:[esi]
  406f16:	ja     0x406f54
  406f18:	(bad)  
  406f19:	cmp    eax,0xd87f0848
  406f1e:	mov    dl,bh
  406f20:	(bad)  
  406f21:	mov    ebx,?
  406f23:	(bad)  
  406f24:	sti    
  406f25:	and    al,0x18
  406f27:	das    
  406f28:	retf   0xa7c8
  406f2b:	push   0xffffffc9
  406f2d:	adc    al,0x25
  406f2f:	ins    BYTE PTR es:[edi],dx
  406f30:	jbe    0x406f5e
  406f32:	mov    cl,0xbc
  406f34:	outs   dx,BYTE PTR ds:[esi]
  406f35:	ins    DWORD PTR es:[edi],dx
  406f36:	iret   
  406f37:	push   es
  406f38:	cmp    DWORD PTR [esi+0x5a],eax
  406f3b:	scas   eax,DWORD PTR es:[edi]
  406f3c:	lock mov ebx,0xd422200e
  406f42:	mov    ebp,0x6d90aa9b
  406f47:	(bad)  
  406f48:	test   DWORD PTR [esi+0x3c],0x15e30dd9
  406f4f:	enter  0xfcb1,0xe6
  406f53:	mov    al,0x6e
  406f55:	popa   
  406f56:	imul   esp,ebx,0x6f
  406f59:	pop    ebx
  406f5a:	push   ds
  406f5b:	inc    ebx
  406f5c:	pop    esp
  406f5d:	or     eax,0xc6e36230
  406f62:	mov    ch,0xd7
  406f64:	xor    DWORD PTR [ebp-0xb],ecx
  406f67:	push   edx
  406f68:	sbb    BYTE PTR [edx-0x1a],0x76
  406f6c:	cmp    al,0x71
  406f6e:	inc    esi
  406f6f:	outs   dx,DWORD PTR ds:[esi]
  406f70:	cmp    eax,0x771db095
  406f75:	mov    ?,WORD PTR [ecx-0x65]
  406f78:	pop    ds
  406f79:	dec    ebx
  406f7a:	or     cl,bl
  406f7c:	icebp  
  406f7d:	adc    eax,0x6a58c7b1
  406f82:	test   eax,0xa22eb7e3
  406f87:	in     al,dx
  406f88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f89:	pusha  
  406f8a:	and    DWORD PTR ds:0xff08268d,edi
  406f90:	(bad)
  406f94:	push   esi
  406f95:	jg     0x406f6f
  406f97:	(bad)  ds:0xf918ab6b
  406f9d:	mov    ecx,0x2d69b031
  406fa2:	jns    0x406f81
  406fa4:	lea    ebp,[ebx-0x7f96fbdb]
  406faa:	aaa    
  406fab:	call   0x81df537d
  406fb0:	popa   
  406fb1:	out    dx,eax
  406fb2:	ja     0x406fdb
  406fb4:	pusha  
  406fb5:	push   edi
  406fb6:	push   esp
  406fb7:	mov    ebp,0x28ad5fbc
  406fbc:	inc    esi
  406fbd:	jge    0x407037
  406fbf:	(bad)  
  406fc0:	js     0x406fec
  406fc2:	adc    DWORD PTR [edi],esi
  406fc4:	ret    0xd808
  406fc7:	jo     0x406f4b
  406fc9:	fbld   TBYTE PTR [ebx]
  406fcb:	fstp   TBYTE PTR [ebp+0x46]
  406fce:	jecxz  0x406f88
  406fd0:	mov    edi,0x242ac84e
  406fd5:	daa    
  406fd6:	or     al,0x99
  406fd8:	xchg   ecx,eax
  406fd9:	cdq    
  406fda:	jmp    0x3e08:0x79f13e85
  406fe1:	jae    0x406f85
  406fe3:	call   DWORD PTR [ebp+0x36]
  406fe6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406fe7:	pop    ss
  406fe8:	mov    ch,0x48
  406fea:	pusha  
  406feb:	arpl   si,bx
  406fed:	dec    edx
  406fee:	out    0xd9,al
  406ff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ff1:	add    dl,BYTE PTR ds:0x7f58e154
  406ff7:	scas   al,BYTE PTR es:[edi]
  406ff8:	xchg   ebx,eax
  406ff9:	xchg   ebp,eax
  406ffa:	loopne 0x406f97
  406ffc:	stos   DWORD PTR es:[edi],eax
  406ffd:	rol    BYTE PTR [ebx],cl
  406fff:	dec    ebp
  407000:	ret    0xce3e
  407003:	mov    cl,0x4a
  407005:	cmp    edi,DWORD PTR [edi+eax*8-0x45]
  407009:	loop   0x406f98
  40700b:	shl    BYTE PTR [edi-0x352e5ca5],0x9a
  407012:	call   0x8945:0x9d59720a
  407019:	jg     0x406fab
  40701b:	mov    bh,0xc8
  40701d:	push   cs
  40701e:	out    dx,eax
  40701f:	in     al,0x2a
  407021:	push   edx
  407022:	mov    eax,ds:0x75e84623
  407027:	push   es
  407028:	les    eax,FWORD PTR [esp+ecx*2+0x4b]
  40702c:	jp     0x4070a2
  40702e:	ret    0x2c36
  407031:	bound  eax,QWORD PTR [esi+edi*4+0x4e]
  407035:	mov    esp,esi
  407037:	dec    ebp
  407038:	popf   
  407039:	mov    eax,0x6e40bddb
  40703e:	aam    0x88
  407040:	cmp    eax,0xeedf5052
  407045:	or     dh,bl
  407047:	jo     0x4070a3
  407049:	nop
  40704a:	jl     0x4070b8
  40704c:	or     eax,0x2992a23e
  407051:	outs   dx,BYTE PTR ds:[esi]
  407052:	test   DWORD PTR [ecx],0x951418ab
  407058:	test   DWORD PTR [eax+0x2c161e11],edi
  40705e:	imul   edx,esp,0x108e79ab
  407064:	mov    bl,0x9c
  407066:	mov    bl,0x75
  407068:	addr16 sahf 
  40706a:	sub    al,0x6c
  40706c:	int    0x90
  40706e:	mov    al,ds:0xf38f2eec
  407073:	xor    BYTE PTR [edx-0x15],ah
  407076:	push   ecx
  407077:	adc    al,0xfb
  407079:	std    
  40707a:	test   eax,0xe5af7528
  40707f:	cdq    
  407080:	or     eax,0x49cd0d44
  407086:	mov    ebp,0x36858db7
  40708b:	je     0x4070d1
  40708d:	sub    edx,ecx
  40708f:	inc    esi
  407090:	mov    ah,0xbc
  407092:	and    DWORD PTR [ebx],ebp
  407094:	int    0x35
  407096:	js     0x4070f0
  407098:	cli    
  407099:	pop    edx
  40709a:	sti    
  40709b:	ds lahf 
  40709d:	sbb    DWORD PTR [ecx],edx
  40709f:	std    
  4070a0:	jp     0x4070fc
  4070a2:	cmp    BYTE PTR [ebx+eiz*8],dh
  4070a5:	adc    edi,esp
  4070a7:	xor    DWORD PTR [edi+0x6a],0x3c099a56
  4070ae:	pminub mm1,QWORD PTR [edi+0x62201802]
  4070b5:	cmp    edx,DWORD PTR [ebp+0x43a800a9]
  4070bb:	sar    BYTE PTR [ebx],cl
  4070bd:	out    0xb4,al
  4070bf:	retf   
  4070c0:	sub    BYTE PTR fs:[ebx+0x5a05bc23],bh
  4070c7:	mov    al,ds:0x77fd9a7d
  4070cc:	aad    0xdd
  4070ce:	push   ds
  4070cf:	shl    BYTE PTR [edx+0x68b2baab],1
  4070d5:	mov    ecx,0x3c14b226
  4070da:	out    0xbd,eax
  4070dc:	jbe    0x40705e
  4070de:	xlat   BYTE PTR ds:[ebx]
  4070df:	lods   eax,DWORD PTR ds:[esi]
  4070e0:	lock add DWORD PTR [ecx+0x7e],edx
  4070e4:	mov    edx,0x964df12
  4070e9:	out    dx,al
  4070ea:	pop    ss
  4070eb:	dec    eax
  4070ec:	pop    ds
  4070ed:	xor    edx,DWORD PTR [ebp-0x7226743d]
  4070f3:	int    0x9e
  4070f5:	pop    esp
  4070f6:	call   0x238f33ef
  4070fb:	aad    0x3
  4070fd:	add    eax,DWORD PTR [ecx-0x352bce74]
  407103:	scas   eax,DWORD PTR es:[edi]
  407104:	dec    edx
  407105:	in     al,0x22
  407107:	jne    0x4070d3
  407109:	popf   
  40710a:	jle    0x4070f2
  40710c:	imul   ecx,DWORD PTR [esi-0x38f69c0c],0xffffffeb
  407113:	mov    ebx,0x39221103
  407118:	xchg   ebx,eax
  407119:	pop    edi
  40711a:	int3   
  40711b:	sbb    bh,BYTE PTR [edx+0x3]
  40711e:	inc    BYTE PTR [esp+eax*2]
  407121:	sar    bl,0xe5
  407124:	jge    0x4070e3
  407126:	or     esp,edi
  407128:	mov    dh,0x6f
  40712a:	in     al,0xec
  40712c:	daa    
  40712d:	xlat   BYTE PTR ds:[ebx]
  40712e:	jle    0x407124
  407130:	dec    esp
  407131:	inc    ebp
  407132:	ins    BYTE PTR es:[edi],dx
  407133:	imul   DWORD PTR [ebx]
  407135:	cmp    al,0x1f
  407137:	inc    ecx
  407138:	sbb    dl,al
  40713a:	enter  0x3477,0x7a
  40713e:	add    al,0x8b
  407140:	sub    eax,DWORD PTR [ecx]
  407142:	imul   ebx,DWORD PTR [edi+0x44],0x74
  407146:	cli    
  407147:	mov    esi,0x4d719c8b
  40714c:	test   eax,0x1d1488a6
  407151:	push   0xb0349032
  407156:	fmul   DWORD PTR [ebx-0x951e524]
  40715c:	(bad)
  40715f:	outs   dx,DWORD PTR ds:[esi]
  407160:	dec    ah
  407162:	mov    esp,0x9e58e0c8
  407167:	das    
  407168:	rcr    DWORD PTR [ebp+0x32d081c1],0x4f
  40716f:	sub    cl,BYTE PTR [esi-0x3e7a3a8b]
  407175:	inc    edi
  407176:	pop    eax
  407177:	shr    BYTE PTR [edi],0x46
  40717a:	arpl   bx,bx
  40717c:	jl     0x4071ac
  40717e:	xchg   esp,eax
  40717f:	repnz sbb al,0x91
  407182:	adc    BYTE PTR [ebx-0xd],bl
  407185:	in     al,0x4c
  407187:	cdq    
  407188:	sub    ecx,DWORD PTR [edx+0x39780082]
  40718e:	lock add BYTE PTR [edx],bh
  407191:	adc    BYTE PTR [esi-0x12191282],ah
  407197:	jbe    0x40716e
  407199:	les    eax,FWORD PTR [ecx+0x20]
  40719c:	daa    
  40719d:	test   eax,0x6973d69e
  4071a2:	nop
  4071a3:	jle    0x407205
  4071a5:	jne    0x407189
  4071a7:	cmp    BYTE PTR [edx+eiz*8+0x2f],bl
  4071ab:	inc    ebp
  4071ac:	(bad)  
  4071ad:	pop    ss
  4071ae:	and    bl,BYTE PTR [esi-0x3c]
  4071b1:	push   ebx
  4071b2:	aam    0x26
  4071b4:	sar    bl,1
  4071b6:	inc    ebp
  4071b7:	(bad)  
  4071b8:	ror    DWORD PTR [esi],cl
  4071ba:	das    
  4071bb:	cmp    edx,DWORD PTR [edi+ebp*4+0x10786455]
  4071c2:	sub    eax,0x7f477a84
  4071c7:	dec    ebx
  4071c8:	adc    esi,DWORD PTR [ecx]
  4071ca:	inc    esp
  4071cb:	cmc    
  4071cc:	mov    dh,0x22
  4071ce:	lea    esi,[ebx-0x10]
  4071d1:	clc    
  4071d2:	call   0xfcb8:0x22ce7318
  4071d9:	and    dh,BYTE PTR [esi+0x64]
  4071dc:	mov    eax,0x55eb7dbf
  4071e1:	push   0xfffffff1
  4071e3:	push   ecx
  4071e4:	dec    eax
  4071e5:	aaa    
  4071e6:	push   cs
  4071e7:	pop    ecx
  4071e8:	scas   al,BYTE PTR es:[edi]
  4071e9:	add    DWORD PTR [ebx+0x14],eax
  4071ec:	(bad)  
  4071ed:	imul   eax,esi,0xfffffff7
  4071f0:	mov    eax,ds:0xacadd0a3
  4071f5:	jb     0x40725d
  4071f7:	cmp    eax,0x6d38eadc
  4071fc:	fcom   st(5)
  4071fe:	push   ebx
  4071ff:	js     0x4071dd
  407201:	addr16 (bad) 
  407203:	jl     0x407204
  407205:	sub    al,0xf8
  407207:	push   eax
  407208:	mov    edx,0xaa2e3cdf
  40720d:	lds    ebx,FWORD PTR [eax+0x6ad0ab7c]
  407213:	jns    0x407284
  407215:	shl    esi,0xf7
  407218:	rcl    BYTE PTR [esi],0x18
  40721b:	ss push ebp
  40721d:	js     0x4071c1
  40721f:	test   BYTE PTR [ecx-0x4a],cl
  407222:	jmp    0x4071b1
  407224:	dec    eax
  407225:	add    eax,0xa6c000c8
  40722a:	ds sub edi,esp
  40722d:	push   ebx
  40722e:	nop
  40722f:	dec    BYTE PTR [edx+0x41]
  407232:	(bad)  [ecx+0x6b]
  407235:	cmp    BYTE PTR [eax+0x33],bh
  407238:	call   FWORD PTR [edx-0x45586280]
  40723e:	test   eax,0x7530559b
  407243:	std    
  407244:	fldenv [eax-0x451ad3e0]
  40724a:	dec    ebp
  40724b:	dec    edx
  40724c:	inc    edx
  40724d:	addr16 (bad) 
  40724f:	xchg   edi,eax
  407250:	inc    ebp
  407251:	pop    es
  407252:	inc    esi
  407253:	test   DWORD PTR [esi],ecx
  407255:	lods   eax,DWORD PTR ds:[esi]
  407256:	adc    al,0x3f
  407258:	imul   eax,DWORD PTR [edi],0x2e
  40725b:	fadd   DWORD PTR [ecx]
  40725d:	out    dx,eax
  40725e:	sbb    edx,DWORD PTR [edx]
  407260:	and    DWORD PTR [edx-0x1e],edi
  407263:	mov    ebp,0x6cd73fd3
  407268:	jnp    0x40729a
  40726a:	xor    DWORD PTR [ebx-0x28d86c15],ebp
  407270:	push   0xffffff91
  407272:	stos   BYTE PTR es:[edi],al
  407273:	xor    eax,0x9e2c0179
  407278:	int    0x7f
  40727a:	(bad)  [eax-0x6a]
  40727d:	les    eax,FWORD PTR [edi+eax*8+0xcb85bac]
  407284:	mov    ecx,0x3e3997de
  407289:	pop    ebx
  40728a:	repnz adc eax,0xe23d707
  407290:	loopne 0x40726a
  407292:	int    0x1
  407294:	(bad)  [ecx-0x28]
  407297:	mov    WORD PTR [ebx-0x23],fs
  40729a:	jmp    0x285fc48b
  40729f:	push   ds
  4072a0:	mov    ebp,DWORD PTR [eax]
  4072a2:	cdq    
  4072a3:	ror    ch,0x59
  4072a6:	mov    bl,bl
  4072a8:	mov    bh,BYTE PTR [edi]
  4072aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072ab:	mov    edi,edi
  4072ad:	adc    DWORD PTR [esp+ebp*2+0x50],ebp
  4072b1:	aad    0x21
  4072b3:	test   al,0x5c
  4072b5:	xor    DWORD PTR [esi-0x4f],edi
  4072b8:	mov    bl,0x7c
  4072ba:	mov    edx,0x5d21db8d
  4072bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072c0:	sti    
  4072c1:	xor    bh,ah
  4072c3:	pop    ss
  4072c4:	jle    0x4072c0
  4072c6:	adc    DWORD PTR [eax+0x34],esi
  4072c9:	clc    
  4072ca:	pusha  
  4072cb:	fwait
  4072cc:	push   es
  4072cd:	adc    eax,0x1fb47ab4
  4072d2:	cmp    esp,DWORD PTR [ebx+0x46]
  4072d5:	leave  
  4072d6:	cwde   
  4072d7:	sbb    al,0x4d
  4072d9:	cld    
  4072da:	mov    dh,0xfb
  4072dc:	iret   
  4072dd:	popa   
  4072de:	pop    ebx
  4072df:	jge    0x40734d
  4072e1:	call   0x48b83b95
  4072e6:	stc    
  4072e7:	clc    
  4072e8:	loope  0x40735b
  4072ea:	fild   WORD PTR [ecx+0x753a5211]
  4072f0:	fmul   QWORD PTR [ebx-0x4cd4fd3a]
  4072f6:	popa   
  4072f7:	bound  edx,QWORD PTR [ebx+0x5b]
  4072fa:	hlt    
  4072fb:	xor    DWORD PTR [ebp+ecx*2+0x652b932d],esi
  407302:	js     0x407294
  407304:	jo     0x407294
  407306:	dec    ebp
  407307:	mov    dl,0xca
  407309:	sti    
  40730a:	je     0x407349
  40730c:	adc    DWORD PTR [edx],0x304b75a7
  407312:	push   esi
  407313:	adc    eax,0x3b0e867
  407318:	ror    BYTE PTR [ecx+0x5b],cl
  40731b:	mov    ah,0x5e
  40731d:	push   cs
  40731e:	cs imul esi,ebx,0xde0de164
  407325:	imul   edi,edx,0xffffffeb
  407328:	aas    
  407329:	bound  esp,QWORD PTR [esi+0x4d7d75d7]
  40732f:	scas   eax,DWORD PTR es:[edi]
  407330:	fwait
  407331:	sbb    cl,BYTE PTR [ebx+0x24b25a07]
  407337:	and    eax,0x235c862
  40733c:	jbe    0x4072c9
  40733e:	push   es
  40733f:	pop    edx
  407340:	push   es
  407341:	(bad)  [ebx+ecx*1+0x7a]
  407345:	les    esp,FWORD PTR [ecx+eiz*2-0x16]
  407349:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40734a:	adc    al,0x78
  40734c:	imul   esi,DWORD PTR [ecx-0x76],0xffffffd5
  407350:	test   al,ah
  407352:	add    DWORD PTR [edx-0xee822d3],ebx
  407358:	or     DWORD PTR [eax+0x328ca715],eax
  40735e:	xor    BYTE PTR [edx+edx*4+0x19],ah
  407362:	mov    ebx,0xae08a9aa
  407367:	pop    ebx
  407368:	mov    al,ds:0x89a71772
  40736d:	or     al,0x2f
  40736f:	cmp    eax,0xf681ce08
  407374:	outs   dx,BYTE PTR ds:[esi]
  407375:	idiv   BYTE PTR [ecx-0x5441d1b3]
  40737b:	(bad)  
  40737c:	or     dh,ch
  40737e:	jb     0x407355
  407380:	aaa    
  407381:	call   0x9ab56edc
  407386:	ins    BYTE PTR es:[edi],dx
  407387:	out    0x48,eax
  407389:	pusha  
  40738a:	add    eax,0xc919c680
  40738f:	inc    edi
  407390:	test   BYTE PTR [ebx],0x6a
  407393:	sbb    BYTE PTR [eax],bh
  407395:	sbb    al,0xa3
  407397:	clc    
  407398:	ret    
  407399:	mov    ?,WORD PTR [edi+0x3077cf71]
  40739f:	xchg   ebp,eax
  4073a0:	inc    eax
  4073a1:	or     ch,BYTE PTR [edi+0x4]
  4073a4:	pop    ds
  4073a5:	and    dh,ch
  4073a7:	cdq    
  4073a8:	inc    ebp
  4073a9:	fstp   TBYTE PTR [ecx+0x6a]
  4073ac:	inc    eax
  4073ad:	test   eax,0xcccc4dd6
  4073b2:	push   esp
  4073b3:	jbe    0x8dc56e5d
  4073b9:	inc    eax
  4073ba:	fild   QWORD PTR [esi]
  4073bc:	mov    ch,0xd1
  4073be:	sub    BYTE PTR [esi],ah
  4073c0:	or     DWORD PTR [esi+0x42de8daa],ebp
  4073c6:	xor    edi,ebp
  4073c8:	mov    ss,WORD PTR [eax-0x6cdae983]
  4073ce:	dec    ebx
  4073cf:	and    BYTE PTR [ecx+0x6ae0c357],dh
  4073d5:	pop    edi
  4073d6:	test   DWORD PTR [ecx+0x407763d8],ebp
  4073dc:	(bad)  
  4073de:	popf   
  4073df:	cmc    
  4073e0:	shl    DWORD PTR [edx+0xfa19aa0],cl
  4073e6:	aaa    
  4073e7:	icebp  
  4073e8:	stc    
  4073e9:	out    0xa0,al
  4073eb:	test   eax,0xf8639803
  4073f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073f1:	mov    bh,0xa4
  4073f3:	lea    esp,[edx+0x7a4abe88]
  4073f9:	sub    eax,0x14a9355e
  4073fe:	shr    DWORD PTR [ecx+ecx*1+0x7f],cl
  407402:	mov    ch,0xab
  407404:	mov    bl,0x82
  407406:	sbb    al,0x33
  407408:	xchg   BYTE PTR [ebx],ch
  40740a:	je     0x4073a5
  40740c:	ret    
  40740d:	jmp    0x31c36f75
  407412:	jp     0x40739c
  407414:	sahf   
  407415:	mov    DWORD PTR [ebx+eax*1+0x51],ecx
  407419:	inc    edi
  40741a:	inc    edi
  40741b:	pop    ebx
  40741c:	jp     0x407420
  40741e:	icebp  
  40741f:	lock test eax,0x2cc3f954
  407425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407426:	xor    ch,dh
  407428:	sti    
  407429:	sbb    edi,DWORD PTR [esi]
  40742b:	leave  
  40742c:	icebp  
  40742d:	scas   al,BYTE PTR es:[edi]
  40742e:	icebp  
  40742f:	js     0x407455
  407431:	mov    bh,BYTE PTR [eax-0x55d310c1]
  407437:	loope  0x40749b
  407439:	jno    0x40743c
  40743b:	mov    ah,0xdd
  40743d:	cwde   
  40743e:	sbb    al,0x54
  407440:	enter  0xec10,0x68
  407444:	adc    DWORD PTR [esi+0x1225d706],ecx
  40744a:	call   0x7eb6:0x5df474e
  407451:	fwait
  407452:	out    dx,eax
  407453:	popf   
  407454:	fldl2t 
  407456:	mov    edx,0x58784a48
  40745b:	jnp    0x407456
  40745d:	jns    0x407448
  40745f:	ror    DWORD PTR [edi],0xe4
  407462:	dec    esp
  407463:	jp     0x4074d9
  407465:	push   ebp
  407467:	mov    dl,0x80
  407469:	outs   dx,DWORD PTR ds:[esi]
  40746a:	jg     0x4074b1
  40746c:	int    0x66
  40746e:	aaa    
  40746f:	adc    BYTE PTR [esi+0x35fd0301],0xb
  407476:	mov    ah,0xfe
  407478:	repz mul cl
  40747b:	(bad)  
  40747c:	shl    edx,1
  40747e:	sbb    BYTE PTR [esi-0x5ba4387],dl
  407484:	or     DWORD PTR [ecx],0xffffffeb
  407487:	mov    al,ds:0x36790ed3
  40748c:	jnp    0x40749e
  40748e:	rcr    edi,0xdd
  407491:	data16 jae 0x407422
  407494:	cmp    eax,0xba6b9f52
  407499:	xor    ecx,esp
  40749b:	test   eax,0x4113d6b3
  4074a0:	fwait
  4074a1:	pop    esi
  4074a2:	inc    eax
  4074a3:	in     eax,dx
  4074a4:	inc    esp
  4074a5:	inc    edx
  4074a6:	(bad)  
  4074a7:	leave  
  4074a8:	imul   eax,edx,0xbc6ec4b9
  4074ae:	add    eax,0x7b4c9a69
  4074b3:	retf   
  4074b4:	xchg   ecx,eax
  4074b5:	mov    dl,0xcd
  4074b7:	add    eax,0x445b2dee
  4074bc:	ins    BYTE PTR es:[edi],dx
  4074bd:	sbb    ebx,DWORD PTR [ecx-0x22040e14]
  4074c3:	mov    ch,BYTE PTR ds:0x67e09947
  4074c9:	imul   ebx,DWORD PTR [edx-0x34],0x5a
  4074cd:	outs   dx,BYTE PTR ds:[esi]
  4074ce:	add    DWORD PTR fs:[ebx+0x71],esp
  4074d2:	sub    eax,DWORD PTR [ebx-0x1d]
  4074d5:	inc    eax
  4074d6:	sub    al,0xd
  4074d8:	push   eax
  4074d9:	push   cs
  4074da:	or     eax,0x29186a17
  4074df:	mov    ah,0x9c
  4074e1:	jbe    0x40751b
  4074e3:	pop    ebp
  4074e4:	scas   al,BYTE PTR es:[edi]
  4074e5:	jae    0x407483
  4074e7:	pop    eax
  4074e8:	xor    DWORD PTR [edx+0x5e],edi
  4074eb:	dec    ebp
  4074ec:	fimul  DWORD PTR es:[edx]
  4074ef:	add    ebx,DWORD PTR [edi+0x71]
  4074f2:	loopne 0x407555
  4074f4:	out    dx,al
  4074f5:	shl    DWORD PTR [esi],1
  4074f7:	stos   BYTE PTR es:[edi],al
  4074f8:	hlt    
  4074f9:	lock xor bh,ch
  4074fc:	rcl    BYTE PTR [edx-0x500b98ff],cl
  407502:	push   0xffffffa9
  407504:	call   0x41a2bf69
  407509:	icebp  
  40750a:	xor    al,0x3f
  40750c:	fdiv   st,st(0)
  40750e:	mov    al,ds:0x8ece2ed5
  407513:	dec    ebx
  407514:	jmp    0x7023ef90
  407519:	push   ebx
  40751a:	sar    BYTE PTR [edx-0x32b12aff],cl
  407520:	pop    DWORD PTR [ebx]
  407522:	pop    edx
  407523:	aaa    
  407524:	mov    al,0x7b
  407526:	mov    eax,ds:0x459edfc9
  40752b:	dec    eax
  40752c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40752d:	fnstsw WORD PTR [ecx+0x18311217]
  407533:	into   
  407534:	retf   0x5b7c
  407537:	imul   esp,DWORD PTR [eax],0x2bda1aaf
  40753d:	or     DWORD PTR [ebp-0x69],ebx
  407540:	cmp    dh,dl
  407542:	or     eax,esi
  407544:	idiv   ecx
  407546:	jmp    0x47ff:0x87b084fc
  40754d:	ja     0x4075af
  40754f:	or     esp,DWORD PTR [edi+0x5f]
  407552:	push   ecx
  407553:	cmc    
  407554:	inc    ebx
  407555:	mov    al,0xf6
  407557:	and    esi,DWORD PTR [eax-0x25a3f628]
  40755d:	push   ss
  40755e:	adc    DWORD PTR [esi],eax
  407560:	out    0xfd,eax
  407562:	xor    bh,cl
  407564:	xchg   ebx,eax
  407565:	sbb    al,BYTE PTR ds:0x86dd1202
  40756b:	and    esi,esp
  40756d:	cmp    ebx,DWORD PTR [ebx-0x598ac5f]
  407573:	in     al,dx
  407574:	cmp    eax,DWORD PTR [ecx+0x26]
  407577:	shl    bl,0xfc
  40757a:	push   edi
  40757b:	ret    
  40757c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40757d:	inc    ebx
  40757e:	fwait
  40757f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407580:	lahf   
  407581:	outs   dx,BYTE PTR ds:[esi]
  407582:	xor    ebx,0xffffffd6
  407585:	sbb    edi,DWORD PTR [edx+0x5b]
  407588:	sub    BYTE PTR [edi],ah
  40758a:	xchg   ecx,eax
  40758b:	adc    bl,bh
  40758d:	(bad)  
  40758e:	in     al,0xdf
  407590:	mov    al,0xd2
  407592:	push   0x70bd5c87
  407597:	cmp    al,0x5e
  407599:	lock in al,dx
  40759b:	hlt    
  40759c:	repnz rcl DWORD PTR [ebp+edx*2+0x4f377252],cl
  4075a4:	jno    0x40756f
  4075a6:	cli    
  4075a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075a8:	ret    0x7536
  4075ab:	adc    DWORD PTR [eax-0x7d37e000],0xffffffd0
  4075b2:	call   esp
  4075b4:	aas    
  4075b5:	mov    ss,WORD PTR [eax+0x4f733ec2]
  4075bb:	xor    esi,edx
  4075bd:	mov    ch,0xa0
  4075bf:	gs inc ecx
  4075c1:	add    eax,0x31a7047e
  4075c6:	leave  
  4075c7:	lods   al,BYTE PTR ds:[esi]
  4075c8:	pop    esi
  4075c9:	aad    0x13
  4075cb:	inc    ebx
  4075cc:	cs mov al,0x77
  4075cf:	cdq    
  4075d0:	enter  0xb92b,0xed
  4075d4:	mov    ch,0x9
  4075d6:	push   0x19
  4075d8:	push   ss
  4075d9:	push   edi
  4075da:	aas    
  4075db:	or     DWORD PTR [ecx],0x7e
  4075de:	shl    BYTE PTR [ebx+0x1e],1
  4075e1:	ins    DWORD PTR es:[edi],dx
  4075e2:	jmp    0x1f8b:0x3005da8c
  4075e9:	inc    edx
  4075ea:	repz retf 
  4075ec:	pop    ss
  4075ed:	or     DWORD PTR [ebx],eax
  4075ef:	lahf   
  4075f0:	clc    
  4075f1:	aad    0xb6
  4075f3:	es dec edx
  4075f5:	xchg   DWORD PTR [eax+0x18],eax
  4075f8:	cmp    esp,ecx
  4075fa:	inc    bp
  4075fc:	mov    edi,0x6356296a
  407601:	xchg   esi,eax
  407602:	cmp    edx,DWORD PTR [esi]
  407604:	icebp  
  407605:	imul   eax,edi,0x416e45c9
  40760b:	mov    edx,fs
  40760d:	inc    esi
  40760e:	xchg   DWORD PTR [esi+0x3b],ecx
  407611:	inc    edi
  407612:	cmp    eax,0xd3604963
  407617:	pusha  
  407618:	xlat   BYTE PTR ds:[ebx]
  407619:	les    edi,FWORD PTR ds:0xa0a9be9e
  40761f:	call   0x69b8:0x70a6e7aa
  407626:	and    bh,al
  407628:	sbb    BYTE PTR [edi+eax*8],bh
  40762b:	scas   eax,DWORD PTR es:[edi]
  40762c:	in     al,dx
  40762d:	cmp    BYTE PTR [esi],bl
  40762f:	push   ds
  407630:	and    eax,0x94475af8
  407635:	and    al,0xe3
  407637:	test   al,0x6b
  407639:	ret    
  40763a:	mov    gs,WORD PTR [ebx+0x51eada50]
  407640:	es into 
  407642:	lds    edx,FWORD PTR [ebp+0x43]
  407645:	arpl   WORD PTR [eax-0x32bdc4b0],bx
  40764b:	push   ebx
  40764c:	pop    es
  40764d:	mov    al,cs:0x6233c739
  407653:	sbb    BYTE PTR [ebx+0x34],ch
  407656:	cmp    BYTE PTR [edi-0x47],bh
  407659:	ror    DWORD PTR [esi],1
  40765b:	push   ebx
  40765c:	cmp    DWORD PTR [edi-0x68],esi
  40765f:	dec    esp
  407660:	adc    esp,DWORD PTR [ebx-0x53]
  407663:	fist   DWORD PTR [ebp+0x34]
  407666:	push   esi
  407667:	mov    cl,0x21
  407669:	jns    0x40761b
  40766b:	jo     0x407669
  40766d:	ins    DWORD PTR es:[edi],dx
  40766e:	add    ebx,DWORD PTR [edx]
  407670:	out    0x11,al
  407672:	setns  BYTE PTR [ebx]
  407675:	or     al,0x54
  407677:	sbb    al,0x2e
  407679:	adc    esi,DWORD PTR [ebp+0x7dd55437]
  40767f:	xchg   esp,eax
  407680:	imul   DWORD PTR [eax+0x30]
  407683:	inc    edx
  407684:	into   
  407685:	inc    ebx
  407686:	std    
  407687:	pop    edx
  407688:	inc    eax
  407689:	imul   esp,DWORD PTR [ebx-0x13],0x65
  40768d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40768e:	jno    0x4076b9
  407690:	out    0x67,eax
  407692:	outs   dx,BYTE PTR ds:[esi]
  407693:	fwait
  407694:	shr    DWORD PTR ds:0xfc140fdd,0xfa
  40769b:	cmp    esp,esp
  40769d:	(bad)  
  40769f:	inc    eax
  4076a0:	mov    ebx,DWORD PTR [ebx+0x48939442]
  4076a6:	xchg   edi,eax
  4076a7:	cmp    DWORD PTR [ecx+0x1f],esi
  4076aa:	jb     0x40771f
  4076ac:	and    ch,0xaa
  4076af:	mov    dh,0x81
  4076b1:	pop    ecx
  4076b2:	sub    ch,dh
  4076b4:	sbb    ebx,DWORD PTR [edi]
  4076b6:	dec    edi
  4076b7:	ss call 0x10075e9f
  4076bd:	sub    ecx,DWORD PTR [ebp+0x79]
  4076c0:	and    al,BYTE PTR [eax-0x1a43e950]
  4076c6:	or     DWORD PTR [edx+0x41],esp
  4076c9:	jmp    0x34f2:0x920e7b15
  4076d0:	inc    edi
  4076d1:	arpl   WORD PTR ds:0xc4503d39,ax
  4076d7:	cld    
  4076d8:	pop    ecx
  4076d9:	ret    
  4076da:	sub    al,0xf0
  4076dc:	xchg   ecx,eax
  4076dd:	icebp  
  4076de:	fsubr  st,st(4)
  4076e0:	jnp    0x4076a9
  4076e2:	in     eax,dx
  4076e3:	popa   
  4076e4:	and    al,0xf6
  4076e6:	xor    bh,BYTE PTR [ecx-0x32183882]
  4076ec:	iret   
  4076ed:	fmul   DWORD PTR [bx]
  4076f0:	mov    bl,0x2e
  4076f2:	(bad)  
  4076f3:	cld    
  4076f4:	(bad)  
  4076f5:	and    cl,BYTE PTR [edx+eiz*4-0x58]
  4076f9:	mov    eax,0x8512a5da
  4076fe:	int    0x89
  407700:	test   eax,0xb4540343
  407705:	fadd   st(0),st
  407707:	mul    DWORD PTR [ebp-0x27]
  40770a:	(bad)  
  40770b:	ror    BYTE PTR [ebx-0x5d41ff2f],0x22
  407712:	popa   
  407713:	mov    dl,0x3a
  407715:	outs   dx,BYTE PTR ds:[esi]
  407716:	mov    BYTE PTR [ebx],bh
  407718:	aad    0x14
  40771a:	retf   0xaaf
  40771d:	fbld   TBYTE PTR [ecx+eax*4-0x8a678c]
  407724:	or     BYTE PTR [edx],0x78
  407727:	adc    ebx,esp
  407729:	mov    dh,0x34
  40772b:	fs std 
  40772d:	cmp    esi,DWORD PTR [ebp-0x7b602756]
  407733:	jmp    0xf791b1c8
  407738:	outs   dx,DWORD PTR ds:[esi]
  407739:	push   edi
  40773a:	jmp    0x61cd1364
  40773f:	dec    ebx
  407740:	jb     0x4076d3
  407742:	jmp    eax
  407744:	ins    BYTE PTR es:[edi],dx
  407745:	cmp    BYTE PTR [esi+ebp*4-0x8],0xdf
  40774a:	(bad)  
  40774b:	and    al,0xe1
  40774d:	ins    DWORD PTR es:[edi],dx
  40774e:	adc    BYTE PTR ds:0x4241289a,ch
  407754:	mov    ch,0x27
  407756:	(bad)  
  407757:	mov    eax,ecx
  407759:	je     0x40773f
  40775b:	push   ecx
  40775c:	fisubr DWORD PTR [edi-0x65728c45]
  407762:	test   BYTE PTR [esi-0xa],dl
  407765:	fld    QWORD PTR [ebp-0x51aeea78]
  40776b:	fisub  WORD PTR [edx+0x7]
  40776e:	xchg   esp,eax
  40776f:	mov    bh,0xd8
  407771:	or     BYTE PTR [edi+0x67],ch
  407774:	test   DWORD PTR [ecx-0x68],edi
  407777:	enter  0xaced,0x89
  40777b:	ins    BYTE PTR es:[edi],dx
  40777c:	sub    al,0xf3
  40777e:	sub    DWORD PTR [ebx],edx
  407780:	xor    ebp,DWORD PTR [edi]
  407782:	inc    ebx
  407783:	in     eax,dx
  407784:	dec    edx
  407785:	pop    es
  407786:	aad    0x14
  407788:	dec    edx
  407789:	aam    0x95
  40778b:	mov    ebx,0x357291a2
  407790:	mov    edx,0xc12fb3a
  407795:	repnz daa 
  407797:	neg    bl
  407799:	clc    
  40779a:	stos   BYTE PTR es:[edi],al
  40779b:	push   es
  40779c:	push   edx
  40779d:	sbb    al,0x67
  40779f:	and    al,ah
  4077a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077a2:	popf   
  4077a3:	icebp  
  4077a4:	lahf   
  4077a5:	sub    al,0x11
  4077a7:	mov    DWORD PTR [esi+edx*1+0x62],edx
  4077ab:	mov    cs,esi
  4077ad:	adc    BYTE PTR [edi-0x77],dh
  4077b0:	jbe    0x4077b8
  4077b2:	pop    es
  4077b3:	sbb    al,0x8e
  4077b5:	cmp    BYTE PTR [eax+0x23866a28],dl
  4077bb:	pop    ecx
  4077bc:	imul   ebx,DWORD PTR [edx],0x26
  4077bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4077c0:	stc    
  4077c1:	test   BYTE PTR [edx+0x20],dh
  4077c4:	add    cl,BYTE PTR [ebx-0x2b]
  4077c7:	mov    ebp,0xe175f4fd
  4077cc:	gs cmp eax,0x6309e962
  4077d2:	(bad)  
  4077d3:	jmp    0xdacc68f7
  4077d8:	push   ebx
  4077d9:	push   ebx
  4077da:	mov    edx,0x1d37d5a6
  4077df:	xor    ch,0x9f
  4077e2:	mov    bh,dl
  4077e4:	bound  ebp,QWORD PTR [edx+ebx*1+0x5d]
  4077e8:	sbb    BYTE PTR [eax+0x3a],0xcc
  4077ec:	lahf   
  4077ed:	mov    ah,0x32
  4077ef:	mov    bh,0x8
  4077f1:	sub    eax,0x3de76641
  4077f6:	xchg   esi,eax
  4077f7:	push   ebp
  4077f8:	ficom  DWORD PTR [ecx+ebp*8]
  4077fb:	push   edx
  4077fc:	adc    al,0xd1
  4077fe:	xchg   edx,eax
  4077ff:	call   0x4e564492
  407804:	mov    cl,0x17
  407806:	outs   dx,DWORD PTR ds:[esi]
  407807:	add    BYTE PTR [edi-0x2753f97d],bl
  40780d:	inc    ecx
  40780e:	(bad)  
  407810:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407812:	mov    ecx,0xb82cc7fa
  407817:	inc    edx
  407818:	xor    ebp,ebx
  40781a:	out    0x85,eax
  40781c:	adc    bh,bl
  40781e:	jns    0x4077a0
  407820:	or     DWORD PTR [ecx+0x2c],esp
  407823:	test   ecx,ebx
  407825:	inc    esi
  407826:	adc    DWORD PTR [ecx-0x64],edi
  407829:	arpl   WORD PTR ds:0xd17e55b8,bp
  40782f:	jns    0x40785c
  407831:	test   al,0x52
  407833:	sar    BYTE PTR [esi-0x7fa379bc],cl
  407839:	and    edi,DWORD PTR [edx]
  40783b:	mov    ds,ecx
  40783d:	shl    BYTE PTR ds:[ebx-0x80],0x8b
  407842:	pop    ecx
  407843:	dec    ebp
  407844:	adc    bh,BYTE PTR [ebx+ebx*8-0x1df726c]
  40784b:	fnsave [eax+0x30dd156]
  407851:	xchg   esp,eax
  407852:	loop   0x4077eb
  407854:	in     al,dx
  407855:	and    al,0xdb
  407857:	and    al,0xb2
  407859:	mov    fs,WORD PTR [edx+0x64]
  40785c:	scas   al,BYTE PTR es:[edi]
  40785d:	mov    eax,0xfb6de29c
  407862:	inc    DWORD PTR [ecx-0x59afdedf]
  407868:	retf   0x661d
  40786b:	jecxz  0x407858
  40786d:	mov    esp,ebx
  40786f:	dec    ecx
  407870:	add    ebx,DWORD PTR [edi-0x5b7d69f0]
  407876:	pushf  
  407877:	(bad)  
  407878:	popf   
  407879:	das    
  40787a:	retf   0xfae9
  40787d:	fucomp st(3)
  40787f:	and    DWORD PTR [ecx+0x50],0x1
  407883:	rcr    edx,cl
  407885:	jno    0x407838
  407887:	xchg   esp,eax
  407888:	push   0x30
  40788a:	pop    ecx
  40788b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40788c:	sbb    eax,0xea555518
  407891:	aam    0x89
  407893:	xchg   BYTE PTR gs:[edx],al
  407896:	daa    
  407897:	adc    BYTE PTR [edx],ch
  407899:	mov    dl,0x38
  40789b:	push   ecx
  40789c:	outs   dx,BYTE PTR ds:[esi]
  40789d:	fisubr WORD PTR [ebp+0x33]
  4078a0:	jl     0x4078f0
  4078a2:	cli    
  4078a3:	fld1   
  4078a5:	out    dx,al
  4078a6:	sbb    edi,esi
  4078a8:	nop
  4078a9:	mov    esp,0x2822458f
  4078ae:	add    eax,0xf20d04c
  4078b3:	sahf   
  4078b4:	lahf   
  4078b5:	call   0x7aad:0x1f1beff6
  4078bc:	or     cl,BYTE PTR [edi+0x3a]
  4078bf:	xlat   BYTE PTR ds:[ebx]
  4078c0:	pop    ds
  4078c1:	les    ebp,FWORD PTR [edi]
  4078c3:	inc    ecx
  4078c4:	jae    0x407939
  4078c6:	sub    ecx,DWORD PTR ss:[ecx-0x101d661e]
  4078cd:	imul   edi,DWORD PTR [ecx+eiz*8],0xffffff93
  4078d1:	sub    al,0xa8
  4078d3:	jp     0x40788e
  4078d5:	sbb    edi,DWORD PTR [ebx]
  4078d7:	add    ecx,esp
  4078d9:	jbe    0x407935
  4078db:	popf   
  4078dc:	jno    0x40786e
  4078de:	fwait
  4078df:	dec    eax
  4078e0:	mov    BYTE PTR [edi+edx*8-0x9],bl
  4078e4:	inc    esi
  4078e5:	inc    DWORD PTR [eax-0x41fcac9c]
  4078eb:	cmp    ch,BYTE PTR [ebx+0x79]
  4078ee:	cld    
  4078ef:	adc    DWORD PTR ds:0xdcef0fec,ecx
  4078f5:	test   eax,0xe2b6bc74
  4078fa:	pop    esi
  4078fb:	inc    ebx
  4078fc:	call   0x3e1be297
  407901:	in     al,dx
  407902:	jae    0x407890
  407904:	pop    esi
  407905:	loope  0x407972
  407907:	es mov ah,0xa3
  40790a:	js     0x40792e
  40790c:	mov    dl,0xf
  40790e:	add    BYTE PTR [ecx],bh
  407910:	push   eax
  407911:	lds    ebx,FWORD PTR [edi-0x4a]
  407914:	das    
  407915:	xor    eax,0x38017e94
  40791a:	(bad)  
  40791b:	and    BYTE PTR [ecx-0x2760dd70],dl
  407921:	xor    al,0xa4
  407923:	xchg   esi,eax
  407924:	imul   esi,ebp,0xffffff97
  407927:	adc    eax,DWORD PTR [ebp+0x6f975974]
  40792d:	(bad)  
  40792e:	retf   
  40792f:	mov    fs,WORD PTR [eax]
  407931:	xor    eax,0x730f679b
  407936:	dec    ebx
  407937:	add    al,0xd2
  407939:	inc    ebp
  40793a:	sti    
  40793b:	push   ebp
  40793c:	adc    eax,0xff39239c
  407941:	mov    ebx,0xb4e3cf90
  407946:	out    dx,al
  407947:	fnsave gs:[ecx+0x50f24419]
  40794e:	std    
  40794f:	jnp    0x40796a
  407951:	sbb    esi,edi
  407953:	adc    esp,DWORD PTR [edi]
  407955:	cdq    
  407956:	adc    bl,BYTE PTR ds:0x6c49d7a4
  40795c:	xchg   ah,cl
  40795e:	inc    ebx
  40795f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407961:	loope  0x407993
  407963:	jnp    0x4079ba
  407965:	cmp    esp,DWORD PTR [esi+0x8]
  407968:	or     esp,DWORD PTR [ebp-0x58]
  40796b:	xchg   edi,eax
  40796c:	sahf   
  40796d:	aas    
  40796e:	pop    ebp
  40796f:	cmp    DWORD PTR [esi+0x64b92b12],ebx
  407975:	or     eax,0x9d59f5f2
  40797a:	out    0xb6,eax
  40797c:	loope  0x40792b
  40797e:	adc    eax,0x213b1cc1
  407983:	aas    
  407984:	push   ecx
  407985:	adc    DWORD PTR [edx],esp
  407987:	sbb    BYTE PTR [eax+0x13681a5],bl
  40798d:	cmp    DWORD PTR [esi-0x79],esp
  407990:	nop
  407991:	xor    edi,edx
  407993:	mov    al,ds:0xce8284d
  407998:	mov    edx,0x898f8006
  40799d:	nop
  40799e:	inc    esp
  40799f:	ins    BYTE PTR es:[edi],dx
  4079a0:	das    
  4079a1:	imul   edi,DWORD PTR [ebx+0x2d],0xb0b16117
  4079a8:	arpl   WORD PTR [edx-0x6],di
  4079ab:	fst    QWORD PTR [esi-0xa]
  4079ae:	loopne 0x4079ec
  4079b0:	in     eax,0x5b
  4079b2:	fsubp  st(6),st
  4079b4:	fwait
  4079b5:	add    dh,cl
  4079b7:	sbb    edi,DWORD PTR [ebx-0x2b5a16d]
  4079bd:	jbe    0x407967
  4079bf:	adc    al,ch
  4079c1:	sbb    ah,ah
  4079c3:	fdivr  DWORD PTR [eax+eiz*4-0x5e73472e]
  4079ca:	in     eax,dx
  4079cb:	add    BYTE PTR [ebp+0x16843495],0xfb
  4079d2:	pop    ss
  4079d3:	lahf   
  4079d4:	fsubr  st,st(2)
  4079d6:	retf   0x9c78
  4079d9:	push   ecx
  4079da:	cmp    DWORD PTR [edi+0x49],ebx
  4079dd:	jmp    0xbaf72832
  4079e2:	test   BYTE PTR es:[edx+0x62],cl
  4079e6:	ffree  st(6)
  4079e8:	call   0xdd3f7b81
  4079ed:	push   ecx
  4079ee:	das    
  4079ef:	jo     0x4079e1
  4079f1:	jo     0x407998
  4079f3:	sar    DWORD PTR [ebp+0x6a],0x44
  4079f7:	pop    ds
  4079f8:	add    dh,BYTE PTR [esi-0x77]
  4079fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079fd:	call   0x692d:0x7f1c8a02
  407a04:	jmp    0xa08e:0xca17ed4e
  407a0b:	inc    DWORD PTR [ecx-0x4b]
  407a0e:	mov    edx,0xee4d0d34
  407a13:	mov    esi,0x57e19ae1
  407a18:	hlt    
  407a19:	into   
  407a1a:	cli    
  407a1b:	dec    esp
  407a1c:	stc    
  407a1d:	sbb    eax,0x5be8e593
  407a22:	xchg   BYTE PTR [edx+0x51],ch
  407a25:	out    0xeb,eax
  407a27:	pop    ecx
  407a28:	mov    ecx,0xdfd8a28d
  407a2d:	pop    esi
  407a2e:	and    edi,DWORD PTR [edx+0x1b]
  407a31:	dec    ebx
  407a32:	leave  
  407a33:	enterw 0xa8b8,0x66
  407a38:	inc    eax
  407a39:	pusha  
  407a3a:	(bad)  
  407a3b:	aaa    
  407a3c:	push   es
  407a3d:	jo     0x4079d2
  407a3f:	push   0x43
  407a41:	enter  0xb106,0xb9
  407a45:	or     bh,BYTE PTR [edi-0x3]
  407a48:	pop    esp
  407a49:	inc    ebp
  407a4a:	pop    esi
  407a4b:	dec    ecx
  407a4c:	dec    ebx
  407a4d:	push   edx
  407a4e:	outs   dx,DWORD PTR ds:[esi]
  407a4f:	std    
  407a50:	ret    
  407a51:	fnstsw WORD PTR [edx]
  407a53:	ret    
  407a54:	aaa    
  407a55:	push   ebp
  407a56:	cs aaa 
  407a58:	sub    eax,0xf157d5c
  407a5d:	stos   DWORD PTR es:[edi],eax
  407a5e:	popa   
  407a5f:	in     al,dx
  407a60:	xor    BYTE PTR [ebx],cl
  407a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a63:	sbb    esp,DWORD PTR [ebx+edx*8]
  407a66:	adc    BYTE PTR [edx-0x5b5d0daf],cl
  407a6c:	or     ah,BYTE PTR [ecx+0x6b3c07a6]
  407a72:	cmp    eax,0x7df2da54
  407a77:	nop    DWORD PTR [ebx+0x2a]
  407a7b:	xchg   esp,eax
  407a7c:	aam    0xd0
  407a7e:	or     dl,ah
  407a80:	jmp    0xb4467e7a
  407a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a86:	shr    BYTE PTR [eax+0x16],1
  407a89:	dec    edi
  407a8a:	inc    ebp
  407a8b:	or     ecx,ebp
  407a8d:	dec    ecx
  407a8e:	jmp    0x407add
  407a90:	mov    dh,0x9
  407a92:	push   es
  407a93:	xor    al,0x23
  407a95:	fistp  DWORD PTR [esi+esi*2]
  407a98:	test   BYTE PTR [ecx],0xfd
  407a9b:	sbb    al,0x9f
  407a9d:	jnp    0x407a78
  407a9f:	add    al,0xff
  407aa1:	adc    BYTE PTR [ebx-0x6cfcd17c],bl
  407aa7:	stos   BYTE PTR es:[edi],al
  407aa8:	mov    ah,0x73
  407aaa:	fwait
  407aab:	ror    DWORD PTR [ecx+0x45105ff4],1
  407ab1:	pop    ecx
  407ab2:	mov    ecx,0x86663290
  407ab7:	scas   eax,DWORD PTR es:[edi]
  407ab8:	pop    edi
  407ab9:	ret    
  407aba:	and    eax,0x5514f8f1
  407abf:	loopne 0x407b07
  407ac1:	mov    esp,0x36f36604
  407ac6:	jmp    0xd3736204
  407acb:	cmp    eax,0xf5d73594
  407ad0:	retf   
  407ad1:	pop    es
  407ad2:	pop    ebx
  407ad3:	push   0x43e8b02
  407ad8:	sbb    al,0xeb
  407ada:	jbe    0x407a8d
  407adc:	or     esp,esp
  407ade:	xor    esi,DWORD PTR [ebp+0x4c]
  407ae1:	add    ah,cl
  407ae3:	push   esi
  407ae4:	cs mov ebp,0xcc37616d
  407aea:	cwde   
  407aeb:	int3   
  407aec:	popa   
  407aed:	es dec ecx
  407aef:	out    0x77,eax
  407af1:	add    DWORD PTR [ebx+0x44],eax
  407af4:	sub    esi,DWORD PTR [eax+0x51]
  407af7:	shl    DWORD PTR [ebp-0x7ff36583],cl
  407afd:	push   0xfffffff9
  407aff:	test   eax,edi
  407b01:	inc    eax
  407b02:	ret    
  407b03:	ret    0x852a
  407b06:	imul   ebp,DWORD PTR [edi],0xffffffb0
  407b09:	movups XMMWORD PTR ds:0x7d7d580b,xmm5
  407b10:	int    0xf8
  407b12:	dec    esi
  407b13:	cmp    ebx,DWORD PTR [edi-0x3c2217fe]
  407b19:	sub    cl,0x9e
  407b1c:	int    0x3e
  407b1e:	add    BYTE PTR [edi-0x75],dl
  407b21:	jmp    0x50d:0xa80483b8
  407b28:	sub    DWORD PTR [ebp+0x2e],0x4cecc14b
  407b2f:	push   edx
  407b30:	jns    0x407ab6
  407b32:	sti    
  407b33:	shl    ebp,cl
  407b35:	fsub   QWORD PTR [ebp-0x5b]
  407b38:	test   al,0x31
  407b3a:	push   ss
  407b3b:	stos   DWORD PTR es:[edi],eax
  407b3c:	mov    al,cl
  407b3e:	rcr    DWORD PTR [esi-0x2f605678],cl
  407b44:	push   0x5e
  407b46:	sub    ebx,DWORD PTR [ebp+0x2e]
  407b49:	push   ebx
  407b4a:	inc    edi
  407b4b:	mov    ds:0xa015524a,al
  407b50:	sar    ecx,cl
  407b52:	nop
  407b53:	add    cl,BYTE PTR [edx+0x56]
  407b56:	int    0x0
  407b58:	ss cmc 
  407b5a:	inc    edx
  407b5b:	fdiv   st,st(0)
  407b5d:	push   cs
  407b5e:	mov    dh,0x4d
  407b60:	(bad)  
  407b61:	inc    ebp
  407b62:	jecxz  0x407bc3
  407b64:	sbb    ebx,DWORD PTR ds:0xa9ac2aa0
  407b6a:	daa    
  407b6b:	cmp    edi,DWORD PTR [eax]
  407b6d:	sub    al,0x7b
  407b6f:	fiadd  DWORD PTR [edi]
  407b71:	dec    edx
  407b72:	add    al,0xbb
  407b74:	(bad)  
  407b75:	sbb    eax,0xaeaabc62
  407b7a:	dec    edi
  407b7b:	mov    ah,0xc0
  407b7d:	fsub   st(4),st
  407b7f:	sub    al,0x6d
  407b81:	mov    ch,BYTE PTR [edx+esi*8]
  407b84:	and    eax,0x749891b2
  407b89:	xor    BYTE PTR [esi],dl
  407b8b:	bound  ebp,QWORD PTR [ebp+0x61]
  407b8e:	push   eax
  407b8f:	inc    esp
  407b90:	imul   ecx,eax,0xffffffe1
  407b93:	fcmovb st,st(2)
  407b95:	mov    DWORD PTR [ecx-0x2e01bf36],edx
  407b9b:	mov    al,0x9
  407b9d:	xor    DWORD PTR [esi],edi
  407b9f:	sub    ebp,DWORD PTR [ebx]
  407ba1:	cwde   
  407ba2:	mov    DWORD PTR [ecx+0x5b],ebx
  407ba5:	mov    BYTE PTR [ebx+0x70430ced],dl
  407bab:	es jae 0x407c0f
  407bae:	jnp    0x407c2d
  407bb0:	and    ecx,edi
  407bb2:	ja     0x407bf7
  407bb4:	aaa    
  407bb5:	out    0xb0,eax
  407bb7:	xchg   DWORD PTR [edi+0xc],esi
  407bba:	or     al,0xe
  407bbc:	je     0x407c2f
  407bbe:	push   0x41
  407bc0:	and    eax,0x26df2085
  407bc5:	into   
  407bc6:	xchg   esp,eax
  407bc7:	es ja  0x407b4e
  407bca:	fcmove st,st(6)
  407bcc:	test   eax,0x11e0d43d
  407bd1:	pop    eax
  407bd2:	mov    BYTE PTR [ebp-0x7f097d06],al
  407bd8:	adc    al,ah
  407bda:	and    DWORD PTR [si-0x3ab6],ebp
  407bdf:	pop    ds
  407be0:	out    dx,eax
  407be1:	inc    ebp
  407be2:	imul   ebx,DWORD PTR [eax],0x18
  407be5:	ins    DWORD PTR es:[edi],dx
  407be6:	pop    es
  407be7:	push   0xffffff82
  407be9:	in     eax,dx
  407bea:	cmp    ecx,DWORD PTR [esi-0x25232bb9]
  407bf0:	cwde   
  407bf1:	dec    edi
  407bf2:	push   0xf
  407bf4:	imul   BYTE PTR [esi-0x5cdc0657]
  407bfa:	mov    al,ds:0x90ddc322
  407bff:	ret    
  407c00:	xor    al,0x62
  407c02:	aas    
  407c03:	add    BYTE PTR [edx-0x67],al
  407c06:	hlt    
  407c07:	xchg   DWORD PTR [esi],ebx
  407c09:	arpl   WORD PTR [esp+0x25c55b53],ax
  407c10:	xor    ch,BYTE PTR [ebp-0x55254ad]
  407c16:	pop    ds
  407c17:	jl     0x407be2
  407c19:	(bad)
  407c1c:	cs jnp 0x407bea
  407c1f:	loop   0x407c2b
  407c21:	mov    ah,0xe1
  407c23:	or     al,0xf9
  407c25:	adc    BYTE PTR [edx+ecx*4+0x58],bl
  407c29:	push   ebx
  407c2a:	loopne 0x407bf2
  407c2c:	out    0x8e,eax
  407c2e:	and    al,0xe6
  407c30:	ret    
  407c31:	dec    esp
  407c32:	xchg   esi,eax
  407c33:	js     0x407c6a
  407c35:	pusha  
  407c36:	lods   al,BYTE PTR ds:[esi]
  407c37:	lods   eax,DWORD PTR ds:[esi]
  407c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c39:	add    ch,ch
  407c3b:	push   0xffffffb5
  407c3d:	lds    esi,FWORD PTR [esi+0x638b7588]
  407c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c44:	test   eax,0x3a52633b
  407c49:	out    0x46,eax
  407c4b:	jecxz  0x407c81
  407c4d:	jge    0x407bd7
  407c4f:	leave  
  407c50:	jns    0x407bf7
  407c52:	sub    cl,BYTE PTR [esi+eax*1+0x6149f49e]
  407c59:	push   edx
  407c5a:	and    esi,DWORD PTR [ebx+0x15]
  407c5d:	mov    BYTE PTR [edx],bl
  407c5f:	call   0xdff7:0x7d9d2990
  407c66:	push   ss
  407c67:	cmc    
  407c68:	imul   edi,DWORD PTR [eax+0x7b],0xffffffce
  407c6c:	mov    WORD PTR [ecx+0x46],fs
  407c6f:	mov    dh,0xf7
  407c71:	push   ebp
  407c72:	mov    eax,0xba1c7718
  407c77:	adc    DWORD PTR [ecx+ebx*1-0x43],ecx
  407c7b:	push   ebp
  407c7c:	scas   eax,DWORD PTR es:[edi]
  407c7d:	xchg   esp,eax
  407c7e:	loop   0x407cb9
  407c80:	lock mov ebx,0xd821d5a0
  407c86:	sub    al,0x2d
  407c88:	mov    eax,0x3e9441fe
  407c8d:	jle    0x407cf3
  407c8f:	mov    ch,0x50
  407c91:	cld    
  407c92:	push   edx
  407c93:	fstp   QWORD PTR [esi-0x5af83d49]
  407c99:	cmp    DWORD PTR [ecx],esi
  407c9b:	adc    al,0x93
  407c9d:	ffree  st(6)
  407c9f:	mov    eax,0x303776a2
  407ca4:	push   ebx
  407ca5:	inc    ebp
  407ca6:	pop    esi
  407ca7:	push   edi
  407ca8:	xchg   ecx,eax
  407ca9:	sub    DWORD PTR [edi+ecx*1-0x76],ebx
  407cad:	mov    edx,0x7f83af96
  407cb2:	lea    edi,[edi+edx*2+0x407c6996]
  407cb9:	js     0x407cbf
  407cbb:	jo     0x407d39
  407cbd:	test   BYTE PTR ds:0x455047ff,ah
  407cc3:	ins    BYTE PTR es:[edi],dx
  407cc4:	pop    ebp
  407cc5:	cmp    DWORD PTR [esi+0x7f139c3d],ebp
  407ccb:	mov    dh,0xb8
  407ccd:	mov    ebp,0x441939ea
  407cd2:	lods   eax,DWORD PTR ds:[esi]
  407cd3:	add    BYTE PTR [edi],dl
  407cd5:	mov    al,0xb
  407cd7:	push   0xfe561e5c
  407cdc:	xchg   DWORD PTR [esi],ebp
  407cde:	gs out dx,eax
  407ce0:	sbb    al,0x3a
  407ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ce3:	and    DWORD PTR [edi],ebx
  407ce5:	xchg   BYTE PTR [ebx],bl
  407ce7:	fisubr WORD PTR ds:0xbd78541d
  407ced:	or     BYTE PTR [ebp*8-0x130fa798],dh
  407cf4:	push   eax
  407cf5:	repnz cwde 
  407cf7:	in     al,0x8b
  407cf9:	js     0x407ce7
  407cfb:	pop    ds
  407cfc:	sub    DWORD PTR gs:[esi-0x6ed7ec0d],0x0
  407d04:	jge    0x407cc6
  407d06:	inc    edx
  407d07:	dec    esp
  407d08:	out    0x8e,al
  407d0a:	loope  0x407d2b
  407d0c:	inc    ebx
  407d0d:	and    bl,bl
  407d0f:	popf   
  407d10:	scas   al,BYTE PTR es:[edi]
  407d11:	imul   edx,DWORD PTR [edi+ecx*8+0x7e],0x4
  407d16:	jp     0x407d1f
  407d18:	(bad)  
  407d1b:	aas    
  407d1c:	jle    0x407d08
  407d1e:	sbb    BYTE PTR [ebp-0x241a16ec],0x4e
  407d25:	xor    al,0x1
  407d27:	xchg   edx,eax
  407d28:	inc    esi
  407d29:	mov    ds:0x5653d0ca,eax
  407d2e:	outs   dx,BYTE PTR ds:[esi]
  407d2f:	sub    esi,DWORD PTR [ecx-0x65]
  407d32:	xor    al,0x37
  407d34:	pop    ebp
  407d35:	ret    
  407d36:	les    edx,FWORD PTR [edx]
  407d38:	ins    DWORD PTR es:[edi],dx
  407d39:	jle    0x407cd5
  407d3b:	test   al,0x9c
  407d3d:	loop   0x407d3c
  407d3f:	int    0xa
  407d41:	and    ecx,DWORD PTR [eax]
  407d43:	pop    esi
  407d44:	ret    
  407d45:	out    0xe7,al
  407d47:	bound  ecx,QWORD PTR [esi]
  407d49:	mov    ds:0x226fa035,al
  407d4e:	lock mov edi,DWORD PTR [esi-0x7c79cee2]
  407d55:	rcr    BYTE PTR [esi],0x1b
  407d58:	or     ah,0x56
  407d5b:	mov    eax,0x5042a6c0
  407d60:	fs out dx,eax
  407d62:	shr    dh,1
  407d64:	cwde   
  407d65:	mov    eax,ds:0xfdee3298
  407d6a:	inc    ecx
  407d6b:	dec    ebx
  407d6c:	fst    QWORD PTR es:[ebx+eax*4+0x62d49c83]
  407d74:	xor    BYTE PTR ss:[ecx+edx*1],bh
  407d78:	mov    al,ds:0x98846fde
  407d7d:	(bad)  
  407d7e:	stos   DWORD PTR es:[edi],eax
  407d7f:	mov    dl,0x23
  407d81:	dec    DWORD PTR [eax+ebx*8]
  407d84:	arpl   WORD PTR [ecx-0x5d],ax
  407d87:	push   ss
  407d88:	cmc    
  407d89:	loopne 0x407dae
  407d8b:	adc    edi,esp
  407d8d:	adc    dh,BYTE PTR [edx]
  407d8f:	inc    DWORD PTR [ecx+0x2f]
  407d92:	icebp  
  407d93:	addr16 xchg edx,eax
  407d95:	pop    ds
  407d96:	xchg   esi,eax
  407d97:	bound  esp,QWORD PTR [edi+esi*2-0x7301fb28]
  407d9e:	ret    
  407d9f:	cdq    
  407da0:	sub    ecx,0xfffffffe
  407da3:	les    edi,FWORD PTR [eax+0x7cc2c0c7]
  407da9:	push   es
  407daa:	sbb    BYTE PTR [eax+eax*4],cl
  407dad:	jmp    0xbda21c79
  407db2:	jge    0x407d4a
  407db4:	test   BYTE PTR [edi+0x3fb385c5],cl
  407dba:	iret   
  407dbb:	lea    ecx,[edx]
  407dbd:	jns    0x407e37
  407dbf:	(bad)  
  407dc0:	sbb    eax,0x3e881782
  407dc5:	rol    ebx,0x5c
  407dc8:	hlt    
  407dc9:	stc    
  407dca:	imul   ebx,DWORD PTR [edx+0x2ad5efa8],0xffffffa0
  407dd1:	sbb    eax,edx
  407dd3:	mov    eax,ds:0xf0ca5bfb
  407dd8:	out    0x68,eax
  407dda:	sub    BYTE PTR [ebp+0x695d893e],ch
  407de0:	push   ss
  407de1:	cmc    
  407de2:	mov    BYTE PTR [esi+eax*4-0x11],0xef
  407de7:	dec    ebx
  407de8:	(bad)  
  407de9:	xor    ecx,DWORD PTR [edx-0x2e]
  407dec:	mov    ds:0x148775de,al
  407df1:	stos   BYTE PTR es:[edi],al
  407df2:	pop    eax
  407df3:	scas   al,BYTE PTR es:[edi]
  407df4:	cmp    eax,0xa802c479
  407df9:	iret   
  407dfa:	push   cs
  407dfb:	shl    DWORD PTR [ecx-0x79c6e9b0],1
  407e01:	push   ecx
  407e02:	add    BYTE PTR [ebx+0x30165e7d],ch
  407e08:	fnsetpm(287 only) 
  407e0a:	inc    ebp
  407e0b:	mov    ecx,DWORD PTR [ecx+0x7]
  407e0e:	push   eax
  407e0f:	pushf  
  407e10:	jecxz  0x407e13
  407e12:	add    al,0xf8
  407e14:	inc    ebp
  407e15:	xor    bl,BYTE PTR [ebx-0x54]
  407e18:	(bad)  
  407e1a:	add    al,0xf2
  407e1c:	cmp    cl,bh
  407e1e:	adc    DWORD PTR [esi+0x27ab06c8],esi
  407e24:	(bad)  
  407e26:	(bad)  
  407e27:	fdecstp 
  407e29:	in     al,dx
  407e2a:	xor    eax,0x356e3030
  407e2f:	ret    
  407e30:	inc    ebx
  407e31:	xchg   ebp,eax
  407e32:	aaa    
  407e33:	jmp    0x871d:0xfdb01ea
  407e3a:	adc    DWORD PTR [esi-0x5685d132],esi
  407e40:	lock add dh,0xac
  407e44:	cld    
  407e45:	icebp  
  407e46:	stos   DWORD PTR es:[edi],eax
  407e47:	or     BYTE PTR [ecx-0x259dd0bb],dh
  407e4d:	ins    DWORD PTR es:[edi],dx
  407e4e:	(bad)  [edx+0x6a6754a8]
  407e54:	xchg   BYTE PTR [ecx+0x13],dh
  407e57:	add    al,0x7a
  407e59:	mov    WORD PTR [edx+ebx*4+0x3c],ss
  407e5d:	and    al,0x6
  407e5f:	push   esi
  407e60:	jo     0x407e0a
  407e62:	add    ah,BYTE PTR [eax-0xd223633]
  407e68:	cmp    esp,esi
  407e6a:	inc    edx
  407e6b:	mov    ebp,0x42227d12
  407e70:	call   0xb858:0x208757e4
  407e77:	xchg   esi,eax
  407e78:	(bad)  
  407e79:	jne    0x407e7e
  407e7b:	inc    edi
  407e7c:	je     0x407e35
  407e7e:	movsx  eax,BYTE PTR [eax-0x39]
  407e82:	cmp    BYTE PTR [edi-0x43c43ba4],bl
  407e88:	ret    0xcf5c
  407e8b:	loopne 0x407f09
  407e8d:	cli    
  407e8e:	js     0x407e25
  407e90:	mov    esp,0x679d5655
  407e95:	fwait
  407e96:	aam    0x17
  407e98:	dec    edx
  407e99:	xor    eax,0xc7753644
  407e9e:	shr    DWORD PTR [eax+0x33],0xde
  407ea2:	test   eax,0x68828db5
  407ea7:	xor    eax,0x5c282ee1
  407eac:	push   edi
  407ead:	call   0xea061535
  407eb2:	xor    eax,0xb065ab4
  407eb7:	add    eax,0x417d7495
  407ebc:	pop    ds
  407ebd:	mov    ch,0x6e
  407ebf:	mov    eax,0x90bb8e61
  407ec4:	mov    edi,DWORD PTR [edx-0x7a]
  407ec7:	xor    eax,edx
  407ec9:	cmp    ebx,esi
  407ecb:	cdq    
  407ecc:	push   es
  407ecd:	stc    
  407ece:	xor    al,0xee
  407ed0:	push   edi
  407ed1:	inc    ecx
  407ed2:	mov    WORD PTR [ebp+0x9806c94],gs
  407ed8:	adc    ebx,esp
  407eda:	push   edx
  407edb:	xor    BYTE PTR [eax+ebx*1],ch
  407ede:	add    ah,BYTE PTR [esp+ebx*4+0x7e]
  407ee2:	push   esi
  407ee3:	imul   ebp,ebx,0x8542959a
  407ee9:	aaa    
  407eea:	mov    edx,0xe8010d28
  407eef:	pop    ebp
  407ef0:	jae    0x407f6d
  407ef2:	nop
  407ef3:	shr    edx,cl
  407ef5:	jp     0x407ee1
  407ef7:	outs   dx,BYTE PTR ds:[esi]
  407ef8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407efa:	in     eax,0x72
  407efc:	sub    BYTE PTR [ebp-0x65],dh
  407eff:	retf   
  407f00:	jge    0x407f04
  407f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f03:	addr16 jg 0x407f85
  407f06:	and    BYTE PTR [ebp+0x2d],dh
  407f09:	xor    eax,0x2f32246d
  407f0e:	mov    ch,0x8c
  407f10:	fcomip st,st(7)
  407f12:	mov    gs,WORD PTR ds:0xecd32208
  407f18:	es mov esi,0x2ffc27f6
  407f1e:	push   ds
  407f1f:	cli    
  407f20:	adc    eax,0x6f881cd4
  407f25:	fistp  QWORD PTR [edx-0x7f]
  407f28:	das    
  407f29:	mov    BYTE PTR ds:0x17e95db5,bh
  407f2f:	mov    ds:0xb51035e6,eax
  407f34:	sub    eax,0x798d90d7
  407f39:	out    dx,eax
  407f3a:	lock and BYTE PTR [eax+0x358613b8],0x56
  407f42:	pop    edx
  407f43:	xor    bh,dl
  407f45:	addr16 and eax,0xd2d2233a
  407f4b:	lahf   
  407f4c:	or     ebx,edi
  407f4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f4f:	loope  0x407f29
  407f51:	mov    cl,0x32
  407f53:	rcr    DWORD PTR [esi+ebp*1],cl
  407f56:	sbb    DWORD PTR [ecx+0x27e768e0],edi
  407f5c:	retf   0x905e
  407f5f:	inc    ebp
  407f60:	xor    eax,0x307ebac8
  407f65:	inc    esp
  407f66:	js     0x407f7b
  407f68:	push   ss
  407f69:	jmp    0xdfb208f9
  407f6e:	or     BYTE PTR [ebp+0xc],bh
  407f71:	call   0xd4562f80
  407f76:	cdq    
  407f77:	mov    WORD PTR [edi+0x21],es
  407f7a:	outs   dx,BYTE PTR ds:[esi]
  407f7b:	daa    
  407f7c:	test   bl,0x6f
  407f7f:	push   ebp
  407f80:	repnz xchg edi,eax
  407f82:	add    BYTE PTR [ecx+0x39bc42ba],ch
  407f88:	in     eax,dx
  407f89:	aas    
  407f8a:	hlt    
  407f8b:	ja     0x40800b
  407f8d:	dec    ebp
  407f8e:	mov    ch,0xc0
  407f90:	and    BYTE PTR [ebx+0x4b],bh
  407f93:	mov    dl,0x70
  407f95:	pusha  
  407f96:	push   esp
  407f97:	cmovl  edi,DWORD PTR [edi]
  407f9a:	arpl   WORD PTR [edx+eax*1-0x7b],sp
  407f9e:	cmp    BYTE PTR [eax],dl
  407fa0:	mov    bl,0x8d
  407fa2:	inc    ebp
  407fa3:	pop    ss
  407fa4:	retf   
  407fa5:	and    DWORD PTR ds:0x56281384,ebp
  407fab:	xchg   ecx,eax
  407fac:	sbb    DWORD PTR [ebx-0x34],edx
  407faf:	add    al,BYTE PTR [esi+0x2d]
  407fb2:	and    al,0x38
  407fb4:	mov    eax,0x9c0be584
  407fb9:	jmp    0x31b6:0x1742730d
  407fc0:	jle    0x407f64
  407fc2:	sbb    DWORD PTR [esi+0x4c],esp
  407fc5:	div    BYTE PTR [esi+ecx*1-0x2a]
  407fc9:	(bad)  
  407fca:	ds mov dh,0xbc
  407fcd:	leave  
  407fce:	xchg   edi,eax
  407fcf:	or     al,0xe3
  407fd1:	or     bl,0xa1
  407fd4:	cmp    al,0xf3
  407fd6:	scas   eax,DWORD PTR es:[edi]
  407fd7:	mov    ah,0xe6
  407fd9:	jnp    0x407f74
  407fdb:	gs xchg edx,eax
  407fdd:	xlat   BYTE PTR ds:[ebx]
  407fde:	xchg   esp,eax
  407fdf:	(bad)  
  407fe0:	pusha  
  407fe1:	add    ah,ch
  407fe3:	lods   al,BYTE PTR ds:[esi]
  407fe4:	dec    ebp
  407fe5:	ins    BYTE PTR es:[edi],dx
  407fe6:	daa    
  407fe7:	lods   eax,DWORD PTR ds:[esi]
  407fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fe9:	sub    BYTE PTR [edi+0x7d],cl
  407fec:	es cmp eax,0xc3f29191
  407ff2:	push   ebp
  407ff3:	outs   dx,DWORD PTR ds:[esi]
  407ff4:	pop    ebx
  407ff5:	and    dl,BYTE PTR [esi]
  407ff7:	sub    DWORD PTR [edx-0x4e5426ba],0xacfd6c34
  408001:	xor    ebx,esi
  408003:	add    eax,0x82f5a77d
  408008:	rcl    DWORD PTR [edx+0x52f1e78f],0xcc
  40800f:	add    edx,DWORD PTR [ecx+esi*4+0x44]
  408013:	(bad)  
  408014:	call   0xbfdf2f7f
  408019:	fldenv [edx]
  40801b:	add    al,0xba
  40801d:	add    eax,DWORD PTR [ebx+0x18726d45]
  408023:	xchg   edx,eax
  408024:	fxch   st(4)
  408026:	fiadd  DWORD PTR [esi]
  408028:	ret    0x6892
  40802b:	loopne 0x407fc5
  40802d:	cmp    DWORD PTR [eax+0x5f],eax
  408030:	ret    0xb023
  408033:	aas    
  408034:	mov    DWORD PTR [eax-0x43],ebx
  408037:	loopne 0x40800e
  408039:	repnz mov gs,edi
  40803c:	repnz add bl,BYTE PTR [esi]
  40803f:	loopne 0x40805d
  408041:	sub    eax,DWORD PTR [esi]
  408043:	push   eax
  408044:	inc    ebp
  408045:	fs inc eax
  408047:	popf   
  408048:	xchg   edi,eax
  408049:	xchg   esi,eax
  40804a:	adc    ebx,DWORD PTR [ebp+ebp*2-0x17575c10]
  408051:	mov    eax,ds:0x7e94ee66
  408056:	cmp    esi,DWORD PTR [edx-0xc]
  408059:	cmp    bh,BYTE PTR [edi-0x1ac5ebc]
  40805f:	in     al,0x25
  408061:	mov    ecx,DWORD PTR [esi-0x49]
  408064:	rcl    BYTE PTR [ecx],1
  408066:	adc    esp,ebp
  408068:	cmp    ch,BYTE PTR [eax+0x2d9d10e6]
  40806e:	inc    ebp
  40806f:	pop    edx
  408070:	adc    bl,BYTE PTR [edi-0x5ede1177]
  408076:	dec    ecx
  408077:	cmp    ch,dl
  408079:	test   BYTE PTR [eax+0x19],0x37
  40807d:	out    dx,al
  40807e:	lods   al,BYTE PTR ds:[esi]
  40807f:	and    eax,0xf9bbc204
  408084:	repnz popa 
  408086:	add    DWORD PTR [edx+0x2f38fd61],esi
  40808c:	xchg   ebp,eax
  40808d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40808e:	xor    eax,0xbd1932b2
  408093:	(bad)  [ebx-0x3]
  408096:	fs fs adc eax,0xb93aea5c
  40809d:	(bad)  
  40809f:	outs   dx,DWORD PTR ds:[esi]
  4080a0:	les    ecx,FWORD PTR ds:0xd20b0427
  4080a6:	(bad)  
  4080a7:	icebp  
  4080a8:	push   edi
  4080a9:	(bad)  
  4080ab:	xchg   esi,eax
  4080ac:	lods   al,BYTE PTR ds:[esi]
  4080ad:	xchg   ecx,eax
  4080ae:	xchg   ecx,eax
  4080af:	cmp    edi,DWORD PTR [eax]
  4080b1:	sbb    DWORD PTR ds:0x644d0c64,edx
  4080b7:	sub    al,dh
  4080b9:	shl    BYTE PTR [edi+0x69],1
  4080bc:	and    DWORD PTR [ebx+0x71],0x6a9602f6
  4080c3:	and    BYTE PTR [esi],0xbb
  4080c6:	mov    cl,dh
  4080c8:	fldcw  WORD PTR [ebp+0x46799d62]
  4080ce:	and    BYTE PTR [edx+0x34],0xcc
  4080d2:	cmp    DWORD PTR [edx],ebp
  4080d4:	mov    ebp,0x3eb1384f
  4080d9:	daa    
  4080da:	adc    eax,0x8dab291a
  4080df:	cs push esp
  4080e1:	lods   al,BYTE PTR ds:[esi]
  4080e2:	pop    ds
  4080e3:	fstp   QWORD PTR [ebx+eiz*4]
  4080e6:	fstp   QWORD PTR [ebx+0x19]
  4080e9:	dec    ebx
  4080ea:	ss mov al,es:0xfc1c2288
  4080f1:	xor    BYTE PTR [esi-0x6d],dh
  4080f4:	add    DWORD PTR [esi-0x59ecc6e3],ebp
  4080fa:	scas   al,BYTE PTR es:[edi]
  4080fb:	add    edx,DWORD PTR [eax+edi*8]
  4080fe:	xchg   ecx,eax
  4080ff:	mov    bh,0x18
  408101:	jmp    DWORD PTR [edi+0x57]
  408104:	shld   DWORD PTR [esi],ebp,cl
  408107:	pop    edx
  408108:	pop    esp
  408109:	mov    ?,ecx
  40810b:	jno    0x408144
  40810d:	lock das 
  40810f:	addr16 and eax,0xd16ad8e0
  408115:	jg     0x408138
  408117:	jle    0x408152
  408119:	das    
  40811a:	in     eax,dx
  40811b:	jnp    0x40818f
  40811d:	clc    
  40811e:	je     0x4080b8
  408120:	cdq    
  408121:	loopne 0x4080a4
  408123:	mov    ah,0x6e
  408125:	mov    cl,0xc7
  408127:	repz fadd DWORD PTR [eax-0x1902670f]
  40812e:	xchg   ebp,eax
  40812f:	sbb    DWORD PTR [edx+0x4f47e16f],eax
  408135:	ins    DWORD PTR es:[edi],dx
  408136:	fsub   DWORD PTR [edi+0x265ed8b0]
  40813c:	in     al,dx
  40813d:	push   eax
  40813e:	push   ebp
  40813f:	mov    al,0xa8
  408141:	mov    DWORD PTR [ecx+0x5d],ebx
  408144:	ss mov al,0xb
  408147:	pop    ecx
  408148:	add    al,0x1c
  40814a:	jns    0x408154
  40814c:	and    BYTE PTR [ecx],dh
  40814e:	adc    ebp,DWORD PTR [edi]
  408150:	push   0xd669014
  408155:	fdivr  DWORD PTR [esi]
  408157:	out    dx,al
  408158:	xor    DWORD PTR [ebx+0x3bd8db09],ebp
  40815e:	ret    
  40815f:	ret    0xd3a4
  408162:	enter  0x2576,0x54
  408166:	pushf  
  408167:	cld    
  408168:	cmp    ah,al
  40816a:	into   
  40816b:	jb     0x4081ce
  40816d:	lahf   
  40816e:	fs mov al,0x93
  408171:	jecxz  0x408131
  408173:	jns    0x4081ad
  408175:	div    DWORD PTR [edi-0x7b]
  408178:	mov    esi,gs
  40817a:	cld    
  40817b:	ret    0xf266
  40817e:	xchg   esp,eax
  40817f:	out    0xf7,al
  408181:	pop    ss
  408182:	mov    ds:0xed1904b5,eax
  408187:	jl     0x408145
  408189:	in     eax,0x31
  40818b:	mov    ecx,0xb07c3ac5
  408190:	mov    dl,dl
  408192:	ja     0x40814f
  408194:	adc    DWORD PTR [edx+ebx*1],ebp
  408197:	jmp    0x4cc6:0x62171555
  40819e:	popa   
  40819f:	xchg   esp,eax
  4081a0:	mov    ds:0x476e0a79,eax
  4081a5:	dec    ecx
  4081a6:	(bad)  
  4081a7:	aad    0x4a
  4081a9:	jecxz  0x40820a
  4081ab:	xor    bl,al
  4081ad:	push   ebx
  4081ae:	leave  
  4081af:	pop    edi
  4081b0:	mov    ecx,ebp
  4081b2:	gs pop ebx
  4081b4:	mov    ds:0xe68ef981,eax
  4081b9:	das    
  4081ba:	add    al,0x6e
  4081bc:	dec    esi
  4081bd:	mov    ds:0xcd30ab43,al
  4081c2:	adc    eax,0x41247764
  4081c7:	out    0x54,al
  4081c9:	rcl    DWORD PTR [edx],1
  4081cb:	mov    al,0x78
  4081cd:	fbld   TBYTE PTR [edi]
  4081cf:	repnz imul eax,DWORD PTR [edi],0xe64e7871
  4081d6:	fisttp DWORD PTR [ebp+0x38]
  4081d9:	ret    
  4081da:	xchg   edi,eax
  4081db:	jp     0x40815d
  4081dd:	aad    0x69
  4081df:	push   ecx
  4081e0:	and    ebx,DWORD PTR [ecx-0x7]
  4081e3:	dec    ecx
  4081e4:	repnz in eax,0x31
  4081e7:	sbb    ebx,0x17
  4081ea:	xor    DWORD PTR [edi+eiz*1-0x70],eax
  4081ee:	sar    DWORD PTR cs:[ebx+ecx*2+0xca8cb],cl
  4081f6:	(bad)  
  4081f7:	out    dx,al
  4081f8:	fs dec ebx
  4081fa:	ins    BYTE PTR es:[edi],dx
  4081fb:	xchg   esi,eax
  4081fc:	pushf  
  4081fd:	and    BYTE PTR [esi],ah
  4081ff:	loop   0x408273
  408201:	inc    ebx
  408202:	adc    DWORD PTR [esi+ecx*1+0x5f],0xb74f87ee
  40820a:	fcomp  QWORD PTR [eax-0x261e0fa2]
  408210:	loopne 0x408253
  408212:	div    DWORD PTR [ecx+eiz*1-0x4b]
  408216:	les    esp,FWORD PTR [edx+0x5c]
  408219:	fmulp  st(6),st
  40821b:	(bad)  
  40821c:	(bad)  
  40821d:	out    0x11,al
  40821f:	jmp    0x36a3:0x8e48a544
  408226:	mov    cl,0x4b
  408228:	xor    BYTE PTR [ebx-0xa],ah
  40822b:	popa   
  40822c:	pop    es
  40822d:	imul   edx,DWORD PTR [edi-0x5e283308],0xfffffffb
  408234:	adc    ah,BYTE PTR [ebp-0x36ef1d43]
  40823a:	dec    esi
  40823b:	shl    ah,1
  40823d:	shl    BYTE PTR [eax-0xd],1
  408240:	data16 jae 0x408299
  408243:	jnp    0x408289
  408245:	adc    edi,DWORD PTR [edi+ebx*8-0x6d]
  408249:	pop    ecx
  40824a:	sub    al,BYTE PTR [ebx+ecx*4]
  40824d:	in     eax,dx
  40824e:	ins    BYTE PTR es:[edi],dx
  40824f:	ja     0x4081d6
  408251:	jns    0x4081e3
  408253:	outs   dx,BYTE PTR ds:[esi]
  408254:	xor    cl,dh
  408256:	pop    ss
  408257:	ret    0x53e4
  40825a:	cld    
  40825b:	push   0x17
  40825d:	cmc    
  40825e:	push   0x5bacc786
  408263:	jo     0x4081ff
  408265:	dec    edx
  408266:	(bad)  
  408267:	jmp    0x4082e2
  408269:	stos   DWORD PTR es:[edi],eax
  40826a:	faddp  st(3),st
  40826c:	aam    0x84
  40826e:	(bad)  
  40826f:	and    bl,BYTE PTR [edi-0x73016a81]
  408275:	arpl   WORD PTR [edx+0x2e507522],bp
  40827b:	nop
  40827c:	mov    ds:0xc593ec89,eax
  408281:	jl     0x40828f
  408283:	mov    esi,DWORD PTR [esp+ebx*2+0x43943829]
  40828a:	(bad)  
  40828b:	out    dx,eax
  40828c:	sbb    DWORD PTR [edx+0x56f4755c],ecx
  408292:	fsubp  st(3),st
  408294:	(bad)  
  408295:	das    
  408296:	daa    
  408297:	push   ss
  408298:	stos   DWORD PTR es:[edi],eax
  408299:	jmp    0x16c8e9f
  40829e:	addr16 xchg esp,eax
  4082a0:	out    dx,eax
  4082a1:	jno    0x4082ce
  4082a3:	pop    ds
  4082a4:	dec    ebx
  4082a5:	loop   0x408255
  4082a7:	fdivr  st,st(4)
  4082a9:	hlt    
  4082aa:	in     al,dx
  4082ab:	push   ds
  4082ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082ad:	call   0x1a7fe463
  4082b2:	rol    DWORD PTR [esi],0x99
  4082b5:	mov    WORD PTR [eax+edx*1+0x4f],?
  4082b9:	xchg   DWORD PTR [ecx-0x41],esi
  4082bc:	push   edx
  4082bd:	aad    0x84
  4082bf:	push   ecx
  4082c0:	and    al,0x72
  4082c2:	jle    0x408248
  4082c4:	cmp    eax,DWORD PTR [edx]
  4082c6:	and    DWORD PTR [eax],0x696f9a31
  4082cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082cd:	std    
  4082ce:	out    dx,eax
  4082cf:	and    al,0x87
  4082d1:	or     BYTE PTR [eax],ch
  4082d3:	pop    es
  4082d4:	shr    BYTE PTR [ebx-0x6fffdf8],0x5d
  4082db:	pop    eax
  4082dc:	scas   al,BYTE PTR es:[edi]
  4082dd:	retf   0x168a
  4082e0:	push   ebx
  4082e1:	cli    
  4082e2:	pop    ebx
  4082e3:	dec    edx
  4082e4:	jge    0x4082e6
  4082e6:	xor    cl,BYTE PTR [ecx-0x65]
  4082e9:	lahf   
  4082ea:	push   edx
  4082eb:	inc    esp
  4082ec:	pop    ebx
  4082ed:	or     BYTE PTR [bp+di],al
  4082f0:	bound  edx,QWORD PTR [edi+0x70c7e0dd]
  4082f6:	ss or  al,0x23
  4082f9:	xchg   esi,eax
  4082fa:	je     0x4082b0
  4082fc:	or     al,0x73
  4082fe:	jo     0x40828d
  408300:	xor    DWORD PTR [ebx+esi*4-0x71028793],ecx
  408307:	(bad)  
  408308:	or     al,0x3a
  40830a:	das    
  40830b:	and    ch,BYTE PTR [edi]
  40830d:	jno    0x408345
  40830f:	lahf   
  408310:	mov    ds:0xbdc4669b,eax
  408315:	clc    
  408316:	push   esp
  408317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408318:	sub    eax,0xf5a7f24b
  40831d:	add    bh,bh
  40831f:	arpl   WORD PTR [ebx+0x149da710],di
  408325:	mov    ch,0x6e
  408327:	pop    esp
  408328:	or     eax,DWORD PTR [esi]
  40832a:	or     al,0xdc
  40832c:	jo     0x408394
  40832e:	dec    DWORD PTR [edi+0x3ad6dad]
  408334:	test   DWORD PTR fs:[edi+0x51e24a6],esi
  40833b:	adc    al,BYTE PTR ds:[ebp-0x419e938e]
  408342:	jns    0x408316
  408344:	outs   dx,DWORD PTR ds:[esi]
  408345:	aaa    
  408346:	loope  0x408339
  408348:	shr    DWORD PTR [eax],cl
  40834a:	mov    al,ds:0x2eabc0b9
  40834f:	xchg   BYTE PTR [eax+0x21],cl
  408352:	mov    al,0xbf
  408354:	out    0xb8,al
  408356:	and    BYTE PTR [ebp-0x792e1c2f],bl
  40835c:	and    DWORD PTR [esi-0x5f9fa1d2],edx
  408362:	and    edx,DWORD PTR [ecx]
  408364:	mov    cl,0x13
  408366:	fiadd  DWORD PTR [ecx]
  408368:	jle    0x408360
  40836a:	sbb    ecx,DWORD PTR [edx+0x62]
  40836d:	rcl    BYTE PTR [ebp+0x5206f01c],cl
  408373:	imul   ebx,DWORD PTR [eax],0xffffffd4
  408376:	sub    dh,BYTE PTR [ecx]
  408378:	loope  0x408312
  40837a:	cmc    
  40837b:	and    DWORD PTR [edi-0x57],edx
  40837e:	push   ds
  40837f:	sbb    eax,0xc2e322ad
  408384:	loope  0x4083d5
  408386:	rol    DWORD PTR ss:[esi],0xd1
  40838a:	add    ch,BYTE PTR [ebp+0x5c]
  40838d:	popa   
  40838e:	dec    esp
  40838f:	out    dx,al
  408390:	sti    
  408391:	pop    ds
  408392:	sti    
  408393:	mov    edi,0x46bc76ad
  408398:	call   0x3854ed87
  40839d:	in     al,dx
  40839e:	xchg   DWORD PTR [edi],eax
  4083a0:	mov    bl,0xfb
  4083a2:	out    0xb9,al
  4083a4:	retf   
  4083a5:	cs push 0xa2f2a6bd
  4083ab:	push   eax
  4083ac:	sub    eax,ecx
  4083ae:	pop    edx
  4083af:	in     eax,0x8d
  4083b1:	push   eax
  4083b2:	cld    
  4083b3:	xor    eax,0x8c1b0258
  4083b8:	adc    DWORD PTR [ebp+0x77],0x14be8fa9
  4083bf:	je     0x40841d
  4083c1:	stos   DWORD PTR es:[edi],eax
  4083c2:	cmc    
  4083c3:	ret    
  4083c4:	cmp    BYTE PTR [esi],al
  4083c6:	push   cs
  4083c7:	test   BYTE PTR [esi-0x27],cl
  4083ca:	sbb    edx,DWORD PTR [ebx]
  4083cc:	mov    fs,WORD PTR [ebx+0x6a]
  4083cf:	lods   eax,DWORD PTR ds:[esi]
  4083d0:	popf   
  4083d1:	jno    0x4083e9
  4083d3:	add    eax,0x347707f3
  4083d8:	jp     0x4083d4
  4083da:	adc    eax,0x6b18740d
  4083df:	out    dx,eax
  4083e0:	inc    ecx
  4083e1:	jl     0x4083d2
  4083e3:	sub    BYTE PTR [eax+esi*8-0x16],ch
  4083e7:	aaa    
  4083e8:	into   
  4083e9:	loop   0x40838e
  4083eb:	adc    al,dh
  4083ed:	cmp    BYTE PTR [esi-0x238f7c4a],cl
  4083f3:	xor    al,0x79
  4083f5:	adc    dh,BYTE PTR [ecx-0x68]
  4083f8:	or     BYTE PTR [ecx],dl
  4083fa:	jno    0x40841a
  4083fc:	ja     0x408409
  4083fe:	push   esi
  4083ff:	jo     0x408424
  408401:	lahf   
  408402:	sub    BYTE PTR [ebx+0x37],bl
  408405:	rcr    BYTE PTR [ebx-0x621d2f4b],0xfd
  40840c:	xchg   bl,ch
  40840e:	xor    eax,0x951337c1
  408413:	sbb    DWORD PTR [esi],ebx
  408415:	jg     0x408472
  408417:	jmp    FWORD PTR [edi+0x1261fca4]
  40841d:	or     DWORD PTR [edx-0x7fa08b08],eax
  408423:	xor    al,0xe5
  408425:	sbb    DWORD PTR [ebp-0x4fea02c7],ecx
  40842b:	pop    edi
  40842c:	nop
  40842d:	push   esi
  40842e:	das    
  40842f:	fcom   DWORD PTR [esi+ebx*1+0x39]
  408433:	and    DWORD PTR [eax+0x1063a8ab],0xffffffd8
  40843a:	neg    DWORD PTR [ebp+0x62182bd1]
  408440:	xchg   edx,eax
  408441:	aas    
  408442:	push   0x4c
  408444:	jge    0x408412
  408446:	out    0x15,eax
  408448:	ins    DWORD PTR es:[edi],dx
  408449:	and    DWORD PTR [ebp-0x64],ebx
  40844c:	inc    edx
  40844d:	xchg   dl,bl
  40844f:	fisubr WORD PTR [edx+0x37f99a82]
  408455:	stos   BYTE PTR es:[edi],al
  408456:	cdq    
  408457:	daa    
  408458:	outs   dx,BYTE PTR ds:[esi]
  408459:	push   ss
  40845a:	sbb    esp,DWORD PTR [edi-0x128f429e]
  408460:	sbb    edi,DWORD PTR [eax+ebp*4]
  408463:	test   eax,0xbbbf1e3c
  408468:	inc    ebp
  408469:	cs je  0x4084ca
  40846c:	aaa    
  40846d:	push   cs
  40846e:	int    0x37
  408470:	cld    
  408471:	shr    BYTE PTR [ebp+0x4a],1
  408474:	sub    al,0x4f
  408476:	inc    eax
  408477:	stos   DWORD PTR es:[edi],eax
  408478:	mov    eax,ds:0x477d2bdf
  40847d:	ficomp WORD PTR [eax-0x7e]
  408480:	jmp    0xe7842b32
  408485:	lods   eax,DWORD PTR ds:[esi]
  408486:	nop
  408487:	iret   
  408488:	adc    dh,dh
  40848a:	sbb    DWORD PTR [edi+0x37],esi
  40848d:	push   ebp
  40848e:	push   edi
  40848f:	mov    ch,0x17
  408491:	test   BYTE PTR [edi-0x7d22c888],ah
  408497:	sbb    esp,DWORD PTR [ebp-0x20]
  40849a:	sub    al,0x3b
  40849c:	mov    al,ds:0x9f5161ac
  4084a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084a2:	push   esi
  4084a3:	stos   BYTE PTR es:[edi],al
  4084a4:	dec    eax
  4084a5:	jg     0x40847a
  4084a7:	add    eax,edi
  4084a9:	add    eax,0xeddd4d13
  4084ae:	or     dl,BYTE PTR [edx-0x6e712f45]
  4084b4:	(bad)  
  4084b5:	jmp    0x40852f
  4084b7:	xchg   ecx,eax
  4084b8:	gs dec ebp
  4084ba:	aad    0x81
  4084bc:	jmp    0x40844d
  4084be:	xchg   edi,eax
  4084bf:	fs add al,0xc7
  4084c2:	jecxz  0x408458
  4084c4:	int3   
  4084c5:	dec    eax
  4084c6:	arpl   WORD PTR [eax-0x57],cx
  4084c9:	mov    ds:0x4f46cbae,eax
  4084ce:	lea    ecx,[eax-0x14373e91]
  4084d4:	leave  
  4084d5:	and    dh,BYTE PTR [eax-0x6a5f9bdd]
  4084db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4084dc:	mov    al,0xb0
  4084de:	inc    esi
  4084df:	add    DWORD PTR [eax],0xffffffcf
  4084e2:	fnstsw WORD PTR [edi]
  4084e4:	mov    esi,DWORD PTR [ecx]
  4084e6:	in     al,dx
  4084e7:	in     eax,0x8b
  4084e9:	jl     0x408560
  4084eb:	push   edi
  4084ec:	dec    edi
  4084ed:	pop    ecx
  4084ee:	jle    0x4084b9
  4084f0:	dec    ecx
  4084f1:	push   0x2a
  4084f3:	mov    DWORD PTR [ebx-0x7c],ebx
  4084f6:	sahf   
  4084f7:	mov    esi,ds
  4084f9:	jp     0x408532
  4084fb:	js     0x408485
  4084fd:	add    al,0x1a
  4084ff:	mov    eax,DWORD PTR [ebp-0x40]
  408502:	mov    edx,DWORD PTR [ebp-0x28]
  408505:	xor    eax,esi
  408507:	xor    edx,esi
  408509:	add    eax,edi
  40850b:	add    edx,edi
  40850d:	imul   eax,edx
  408510:	add    eax,DWORD PTR [ebp-0xc]
  408513:	mov    DWORD PTR [ebp-0xc],eax
  408516:	mov    eax,DWORD PTR [ebp-0xc]
  408519:	mov    edx,DWORD PTR [ebp-0x18]
  40851c:	cmp    edx,eax
  40851e:	jb     0x406080
  408524:	mov    eax,DWORD PTR [ebp-0x28]
  408527:	mov    edx,DWORD PTR [ebp-0x18]
  40852a:	xor    eax,esi
  40852c:	add    eax,edi
  40852e:	imul   eax,edx
  408531:	mov    edx,DWORD PTR [ebp-0x1c]
  408534:	xor    edx,esi
  408536:	add    edx,edi
  408538:	or     eax,edx
  40853a:	mov    edx,DWORD PTR [ebp-0x20]
  40853d:	xor    edx,esi
  40853f:	add    eax,edx
  408541:	mov    edx,DWORD PTR [ebp-0x20]
  408544:	xor    edx,esi
  408546:	add    eax,edx
  408548:	mov    edx,DWORD PTR [ebp-0x10]
  40854b:	lea    eax,[eax+edx*1+0x64e5e6]
  408552:	jmp    0x408566
  408557:	mov    eax,DWORD PTR [ebp-0x20]
  40855a:	mov    edx,DWORD PTR [ebp-0x10]
  40855d:	xor    eax,esi
  40855f:	lea    eax,[eax+edx*1+0x3272f3]
  408566:	mov    DWORD PTR [ebp-0x10],eax
  408569:	jmp    0x403c1c
  40856e:	mov    ebx,DWORD PTR [ebp-0x3c]
  408571:	mov    eax,DWORD PTR [ebp+0xc]
  408574:	xor    eax,esi
  408576:	lea    ecx,[ecx+eax*1+0x3272f3]
  40857d:	lea    eax,[ecx-0x3272f3]
  408583:	xor    eax,esi
  408585:	cmp    eax,0xf89c95a1
  40858a:	jne    0x403bc0
  408590:	dec    DWORD PTR [ebp-0x34]
  408593:	jne    0x403bb4
  408599:	mov    eax,DWORD PTR [ebp+0x8]
  40859c:	mov    ecx,DWORD PTR [ebp+0xc]
  40859f:	mov    edx,DWORD PTR [ebp+0x8]
  4085a2:	xor    ecx,esi
  4085a4:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f3]
  4085ab:	xor    eax,esi
  4085ad:	mov    al,BYTE PTR [eax+ebx*1+0x3272f3]
  4085b4:	xor    edx,esi
  4085b6:	mov    BYTE PTR [edx+ebx*1+0x3272f3],cl
  4085bd:	mov    ecx,DWORD PTR [ebp+0xc]
  4085c0:	xor    ecx,esi
  4085c2:	mov    BYTE PTR [ecx+ebx*1+0x3272f3],al
  4085c9:	mov    eax,DWORD PTR [ebp+0xc]
  4085cc:	xor    eax,esi
  4085ce:	add    eax,edi
  4085d0:	pop    edi
  4085d1:	pop    esi
  4085d2:	pop    ebx
  4085d3:	leave  
  4085d4:	ret    0x8
  4085d7:	xor    eax,eax
  4085d9:	and    DWORD PTR ds:0x4291db,0x42914b
  4085e3:	inc    eax
  4085e4:	ret    
  4085e5:	push   ebp
  4085e6:	mov    ebp,esp
  4085e8:	sub    esp,0x38
  4085eb:	and    DWORD PTR ds:0x429167,0x0
  4085f5:	mov    eax,ds:0x429167
  4085fa:	inc    eax
  4085fb:	mov    ds:0x429167,eax
  408600:	cmp    DWORD PTR ds:0x429167,0x23
  408607:	jle    0x408625
  40860d:	jmp    0x408618
  408612:	call   DWORD PTR ds:0x42a59b
  408618:	cmp    DWORD PTR ds:0x429167,0x1d
  40861f:	jb     0x4085f5
  408625:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  40862c:	push   ebx
  40862d:	adc    DWORD PTR ds:0x4291ef,ecx
  408633:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  40863a:	sub    DWORD PTR ds:0x429167,0x723d
  408644:	mov    eax,DWORD PTR [ebp-0x4]
  408647:	push   esi
  408648:	mov    esi,0x75108ac
  40864d:	adc    DWORD PTR ds:0x429153,0x4291d3
  408657:	xor    eax,esi
  408659:	push   edi
  40865a:	and    DWORD PTR ds:0x42915f,0x0
  408664:	jmp    0x408676
  408669:	mov    edi,DWORD PTR ds:0x42915f
  40866f:	inc    edi
  408670:	mov    DWORD PTR ds:0x42915f,edi
  408676:	cmp    DWORD PTR ds:0x42915f,0x18
  40867d:	jae    0x4086c6
  408683:	cmp    DWORD PTR ds:0x42915f,0xb
  40868a:	jg     0x4086c6
  408690:	jmp    0x4086a5
  408695:	push   0x4291bf
  40869a:	push   0x428022
  40869f:	call   DWORD PTR ds:0x42a59f
  4086a5:	cmp    DWORD PTR ds:0x42915f,0xa
  4086ac:	jne    0x4086c1
  4086b2:	xor    edi,edi
  4086b4:	or     edi,DWORD PTR ds:0x42915f
  4086ba:	inc    edi
  4086bb:	mov    DWORD PTR ds:0x42915f,edi
  4086c1:	jmp    0x408669
  4086c6:	mov    edi,0x3272f3
  4086cb:	or     DWORD PTR ds:0x429173,0x4291df
  4086d5:	add    eax,edi
  4086d7:	and    DWORD PTR ds:0x4291cb,0x4291b7
  4086e1:	mov    DWORD PTR [ebp-0x1c],eax
  4086e4:	mov    eax,DWORD PTR [ebp+0x14]
  4086e7:	add    DWORD PTR ds:0x42919b,0xffd
  4086f1:	test   eax,eax
  4086f3:	mov    DWORD PTR ds:0x4291c7,0x550e
  4086fd:	je     0x408761
  408703:	mov    DWORD PTR ds:0x4291c3,0x10
  40870d:	cmp    DWORD PTR ds:0x4291c3,0x0
  408714:	je     0x408749
  40871a:	cmp    DWORD PTR ds:0x4291c3,0x1a
  408721:	jle    0x408749
  408727:	jmp    0x408737
  40872c:	push   0x8b39
  408731:	call   DWORD PTR ds:0x42a5a3
  408737:	mov    ebx,DWORD PTR ds:0x4291c3
  40873d:	dec    ebx
  40873e:	mov    DWORD PTR ds:0x4291c3,ebx
  408744:	jmp    0x40870d
  408749:	mov    eax,DWORD PTR [ebp+0x14]
  40874c:	sbb    DWORD PTR ds:0x4291db,ebx
  408752:	mov    eax,DWORD PTR [eax]
  408754:	add    DWORD PTR ds:0x4291b3,0x4291cf
  40875e:	mov    DWORD PTR [ebp-0x1c],eax
  408761:	mov    eax,DWORD PTR [ebp-0x4]
  408764:	xor    eax,esi
  408766:	xor    DWORD PTR ds:0x429193,edi
  40876c:	add    eax,edi
  40876e:	and    ebx,DWORD PTR ds:0x42918b
  408774:	mov    DWORD PTR [ebp-0x8],eax
  408777:	mov    eax,DWORD PTR [ebp-0xc]
  40877a:	and    ebx,DWORD PTR ds:0x4291f3
  408780:	xor    eax,esi
  408782:	mov    ebx,DWORD PTR ds:0x429167
  408788:	and    ebx,DWORD PTR ds:0x4291b7
  40878e:	mov    DWORD PTR ds:0x429167,ebx
  408794:	add    eax,edi
  408796:	sbb    ebx,0x2c4d
  40879c:	mov    DWORD PTR [ebp-0x24],eax
  40879f:	mov    eax,DWORD PTR [ebp-0x4]
  4087a2:	xor    eax,esi
  4087a4:	mov    ebx,DWORD PTR ds:0x42919b
  4087aa:	or     ebx,DWORD PTR ds:0x429183
  4087b0:	mov    DWORD PTR ds:0x42919b,ebx
  4087b6:	add    eax,edi
  4087b8:	or     DWORD PTR ds:0x4291df,edx
  4087be:	mov    DWORD PTR [ebp-0x30],eax
  4087c1:	or     DWORD PTR ds:0x42914b,0x176b
  4087cb:	mov    ebx,DWORD PTR [ebp-0x4]
  4087ce:	xor    ebx,esi
  4087d0:	mov    eax,ds:0x429173
  4087d5:	xor    eax,DWORD PTR ds:0x42916f
  4087db:	mov    ds:0x429173,eax
  4087e0:	add    ebx,edi
  4087e2:	mov    eax,DWORD PTR [ebp-0x24]
  4087e5:	sub    eax,edi
  4087e7:	sbb    DWORD PTR ds:0x429157,0x4291c7
  4087f1:	lea    ecx,[ebx-0x3272f3]
  4087f7:	xor    eax,esi
  4087f9:	xor    DWORD PTR ds:0x4291bb,0x42917b
  408803:	xor    ecx,esi
  408805:	mov    DWORD PTR ds:0x429153,0x47e0
  40880f:	cmp    ecx,eax
  408811:	mov    DWORD PTR ds:0x429187,0x3279
  40881b:	je     0x40d27b
  408821:	xor    DWORD PTR ds:0x42915b,0x508b
  40882b:	mov    eax,DWORD PTR [ebp-0x4]
  40882e:	sub    DWORD PTR ds:0x42919b,0x58b3
  408838:	xor    eax,esi
  40883a:	adc    DWORD PTR ds:0x429173,0x4291f7
  408844:	add    eax,edi
  408846:	cmp    ebx,eax
  408848:	mov    DWORD PTR ds:0x42915f,0x75e2
  408852:	jne    0x40adc2
  408858:	push   DWORD PTR [ebp+0x8]
  40885b:	call   0x424151
  408860:	mov    DWORD PTR [ebp-0x14],eax
  408863:	not    eax
  408865:	mov    eax,DWORD PTR [ebp-0x4]
  408868:	adc    DWORD PTR ds:0x429153,0x66a3
  408872:	mov    ecx,DWORD PTR [ebp-0x14]
  408875:	add    DWORD PTR ds:0x4291af,0x7712
  40887f:	xor    eax,esi
  408881:	add    eax,edi
  408883:	mov    DWORD PTR ds:0x4291cb,0x7d26
  40888d:	cmp    ecx,eax
  40888f:	mov    DWORD PTR ds:0x42916f,0x6080
  408899:	je     0x40d2e6
  40889f:	push   DWORD PTR [ebp-0x14]
  4088a2:	sbb    DWORD PTR ds:0x4291c3,0x2326
  4088ac:	push   DWORD PTR [ebp+0x8]
  4088af:	call   0x424291
  4088b4:	mov    DWORD PTR [ebp-0x14],eax
  4088b7:	xor    DWORD PTR ds:0x42919f,edx
  4088bd:	mov    eax,DWORD PTR [ebp-0x4]
  4088c0:	xor    DWORD PTR ds:0x42918f,ecx
  4088c6:	mov    ecx,DWORD PTR [ebp-0x14]
  4088c9:	xor    eax,esi
  4088cb:	add    eax,edi
  4088cd:	mov    DWORD PTR ds:0x42917b,0x355b
  4088d7:	cmp    ecx,eax
  4088d9:	mov    DWORD PTR ds:0x429157,0x7399
  4088e3:	je     0x40d2e6
  4088e9:	mov    eax,DWORD PTR [ebp-0x14]
  4088ec:	mov    eax,DWORD PTR [eax+0x18]
  4088ef:	and    DWORD PTR ds:0x4291f3,0x0
  4088f9:	jmp    0x40890b
  4088fe:	mov    ecx,DWORD PTR ds:0x4291f3
  408904:	inc    ecx
  408905:	mov    DWORD PTR ds:0x4291f3,ecx
  40890b:	cmp    DWORD PTR ds:0x4291f3,0x1b
  408912:	jae    0x40895e
  408918:	cmp    DWORD PTR ds:0x4291f3,0xc
  40891f:	ja     0x40895e
  408925:	jmp    0x40893f
  40892a:	push   0x429197
  40892f:	push   0x429187
  408934:	push   0x5f54
  408939:	call   DWORD PTR ds:0x42a5ab
  40893f:	cmp    DWORD PTR ds:0x4291f3,0xb
  408946:	jne    0x408959
  40894c:	mov    ecx,DWORD PTR ds:0x4291f3
  408952:	inc    ecx
  408953:	mov    DWORD PTR ds:0x4291f3,ecx
  408959:	jmp    0x4088fe
  40895e:	mov    DWORD PTR [ebp-0x24],eax
  408961:	xor    DWORD PTR ds:0x42916f,ebx
  408967:	mov    eax,DWORD PTR [ebp-0x14]
  40896a:	and    DWORD PTR ds:0x42916b,0x0
  408974:	jmp    0x408986
  408979:	mov    ecx,DWORD PTR ds:0x42916b
  40897f:	inc    ecx
  408980:	mov    DWORD PTR ds:0x42916b,ecx
  408986:	cmp    DWORD PTR ds:0x42916b,0x1c
  40898d:	jae    0x4089b3
  408993:	cmp    DWORD PTR ds:0x42916b,0x2a
  40899a:	jge    0x4089b3
  4089a0:	jmp    0x4089ae
  4089a5:	push   DWORD PTR [ebp-0x14]
  4089a8:	call   DWORD PTR ds:0x42a573
  4089ae:	jmp    0x408979
  4089b3:	mov    ecx,DWORD PTR [ebp+0x8]
  4089b6:	add    ecx,DWORD PTR [eax+0x20]
  4089b9:	sbb    DWORD PTR ds:0x429183,0x7fc6
  4089c3:	mov    DWORD PTR [ebp-0x2c],ecx
  4089c6:	mov    eax,DWORD PTR [ebp-0x14]
  4089c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4089cc:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  4089d6:	add    ecx,DWORD PTR [eax+0x24]
  4089d9:	or     DWORD PTR ds:0x4291ef,0x4291f3
  4089e3:	mov    DWORD PTR [ebp-0x34],ecx
  4089e6:	jmp    0x40ad9a
  4089eb:	push   ecx
  4089ec:	mov    dl,BYTE PTR [ecx+esi*1]
  4089ef:	and    BYTE PTR [ecx+0x58598a50],0x67
  4089f6:	test   BYTE PTR [edx+0x7b],cl
  4089f9:	sbb    esi,0x838315c7
  4089ff:	call   0x4fc40d60
  408a04:	jae    0x4089fe
  408a06:	ret    0x433
  408a09:	not    DWORD PTR [eax-0x75830e1c]
  408a0f:	add    DWORD PTR [edx+0x24a18ba0],0x70
  408a16:	push   ebx
  408a17:	pusha  
  408a18:	xchg   edi,eax
  408a19:	mov    ds:0x78a917c1,eax
  408a1e:	xor    eax,0x38388f48
  408a23:	scas   eax,DWORD PTR es:[edi]
  408a24:	stos   DWORD PTR es:[edi],eax
  408a25:	lahf   
  408a26:	imul   eax,esp,0x68
  408a29:	mov    ds,WORD PTR [ecx-0x67]
  408a2c:	dec    esp
  408a2d:	mov    ds:0xe3baa41,al
  408a32:	jae    0x4089d6
  408a34:	aaa    
  408a35:	mov    WORD PTR [eax],?
  408a37:	aaa    
  408a38:	out    dx,eax
  408a39:	push   ebp
  408a3a:	bound  ebp,QWORD PTR [edx-0x2afb4f79]
  408a40:	rcr    DWORD PTR [edx],1
  408a42:	jnp    0x4089d5
  408a44:	repnz xchg edi,eax
  408a46:	or     edi,DWORD PTR [ebx-0xc790597]
  408a4c:	push   ss
  408a4d:	or     edi,DWORD PTR [ecx]
  408a4f:	enter  0x9eab,0x5a
  408a53:	or     ah,BYTE PTR [ebp-0x50]
  408a56:	lods   eax,DWORD PTR ds:[esi]
  408a57:	sbb    cl,BYTE PTR [edx-0x7d63e41d]
  408a5d:	and    dh,BYTE PTR [eax]
  408a5f:	aad    0xdf
  408a61:	lds    edx,FWORD PTR [ecx-0x32]
  408a64:	xor    DWORD PTR [esi],esp
  408a66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a67:	add    ch,BYTE PTR [esi]
  408a69:	mov    esi,0xe3a1700
  408a6e:	jae    0x408a50
  408a70:	mov    dl,cl
  408a72:	cmp    cl,BYTE PTR [ecx+0xa]
  408a75:	mov    eax,ds:0x55cf42
  408a7a:	lods   al,BYTE PTR ds:[esi]
  408a7b:	cdq    
  408a7c:	sub    BYTE PTR [esi-0x6196b4c],ch
  408a82:	sub    eax,0xfbbb534d
  408a87:	mov    dl,0x73
  408a89:	loopne 0x408ab8
  408a8b:	jmp    0x408a49
  408a8d:	imul   eax,DWORD PTR [edx],0x16
  408a90:	ins    BYTE PTR es:[edi],dx
  408a91:	fdiv   QWORD PTR [edi]
  408a93:	ud0    esi,DWORD PTR [esi+0x26]
  408a97:	mov    al,0x0
  408a99:	int3   
  408a9a:	outs   dx,BYTE PTR ds:[esi]
  408a9b:	jns    0x408a60
  408a9d:	lock sub edi,DWORD PTR [edx-0x38]
  408aa1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408aa2:	xor    al,0x63
  408aa4:	or     edx,DWORD PTR [edx]
  408aa6:	(bad)  
  408aa7:	jp     0x408abc
  408aa9:	or     DWORD PTR [edx],eax
  408aab:	add    BYTE PTR [eax-0x52],bl
  408aae:	mov    fs,WORD PTR [ecx-0x7a]
  408ab1:	hlt    
  408ab2:	sub    eax,0xabbe3c93
  408ab7:	mov    ah,0x91
  408ab9:	adc    BYTE PTR [esi],ch
  408abb:	and    eax,0xb8a8d434
  408ac0:	pop    esp
  408ac1:	xor    al,BYTE PTR [esi-0x3d]
  408ac4:	scas   al,BYTE PTR es:[edi]
  408ac5:	sub    al,0x8a
  408ac7:	idiv   DWORD PTR [edi+0xb]
  408aca:	(bad)  
  408acc:	fnstsw WORD PTR [edi]
  408ace:	mov    ah,0x20
  408ad0:	mov    al,ds:0x36f412ef
  408ad5:	push   edx
  408ad6:	push   ss
  408ad7:	je     0x408aa8
  408ad9:	inc    edi
  408ada:	imul   ebx,esi,0x61319998
  408ae0:	adc    eax,0xacfb1481
  408ae5:	nop
  408ae6:	in     eax,dx
  408ae7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408ae8:	(bad)  
  408ae9:	icebp  
  408aea:	mov    eax,ds:0x26773404
  408aef:	faddp  st(2),st
  408af1:	cmp    dh,BYTE PTR [eax-0x1f]
  408af4:	fsub   QWORD PTR [ebx+0x4e]
  408af7:	push   esi
  408af8:	popf   
  408af9:	dec    eax
  408afa:	inc    edx
  408afb:	sub    BYTE PTR [eax+0x3523c2be],dl
  408b01:	shl    DWORD PTR [edi-0x2b61d6a5],cl
  408b07:	xlat   BYTE PTR ds:[ebx]
  408b08:	adc    BYTE PTR [ecx-0x4ea52623],0xbb
  408b0f:	push   0x29a99c33
  408b14:	out    dx,eax
  408b15:	(bad)  
  408b16:	nop
  408b17:	or     ebp,DWORD PTR [ebp-0x2fa18d10]
  408b1d:	jle    0x408b6c
  408b1f:	dec    eax
  408b20:	add    bl,cl
  408b22:	lock pop edx
  408b24:	dec    ebp
  408b25:	inc    ebx
  408b26:	scas   eax,DWORD PTR es:[edi]
  408b27:	aaa    
  408b28:	mov    dh,dl
  408b2a:	out    0x43,al
  408b2c:	test   eax,0x89b63d41
  408b31:	shl    DWORD PTR ds:0xb721da1b,cl
  408b37:	jl     0x408baa
  408b39:	rol    eax,1
  408b3b:	in     al,dx
  408b3c:	xchg   DWORD PTR [eax+0x16474470],esp
  408b42:	adc    edx,DWORD PTR [edi]
  408b44:	mov    al,ds:0x371b0c1b
  408b49:	push   esi
  408b4a:	jle    0x408ba3
  408b4c:	sub    eax,0xe8aff98
  408b51:	add    al,BYTE PTR [ebx-0x79]
  408b54:	mov    dh,0x2a
  408b56:	imul   eax,DWORD PTR [ebx-0x47],0xffffffc4
  408b5a:	fnsave [ebp+0x76]
  408b5d:	and    ebp,ebp
  408b5f:	outs   dx,BYTE PTR ds:[esi]
  408b60:	rcr    DWORD PTR [esi+0x2b],cl
  408b63:	dec    esp
  408b64:	xchg   edx,eax
  408b65:	jg     0x408bb3
  408b67:	popf   
  408b68:	and    al,0xa0
  408b6a:	or     al,0x8
  408b6c:	xchg   ecx,eax
  408b6d:	pop    esp
  408b6e:	hlt    
  408b6f:	lds    edi,FWORD PTR [edi*2+0x756c49b3]
  408b76:	stc    
  408b77:	out    dx,eax
  408b78:	mov    esi,0xff7a762d
  408b7d:	lock pop edi
  408b7f:	cwde   
  408b80:	jg     0x408b8d
  408b82:	cmp    dh,BYTE PTR [edi+0x7b04faee]
  408b88:	sbb    al,0xf2
  408b8a:	dec    edx
  408b8b:	sub    eax,0x9b146cc5
  408b90:	ins    DWORD PTR es:[edi],dx
  408b91:	pushf  
  408b92:	sbb    ch,ah
  408b94:	xchg   esi,eax
  408b95:	push   ss
  408b96:	mov    eax,ds:0x2211c626
  408b9b:	ds jle 0x408b71
  408b9e:	mov    eax,0x8099887e
  408ba3:	retf   
  408ba4:	mov    esp,0xd59f34c0
  408ba9:	loope  0x408bb8
  408bab:	pop    eax
  408bac:	test   ebx,ebx
  408bae:	(bad)  
  408bb0:	out    0xd8,al
  408bb2:	pop    esp
  408bb3:	add    bl,dl
  408bb5:	push   ecx
  408bb6:	rol    BYTE PTR [eax],cl
  408bb8:	inc    esp
  408bb9:	jno    0x408bcc
  408bbb:	mov    WORD PTR [esi+esi*8+0x46],cs
  408bbf:	adc    eax,DWORD PTR [eax+0x7d]
  408bc2:	mov    cl,0x4f
  408bc4:	js     0x408b7b
  408bc6:	daa    
  408bc7:	adc    eax,0xccba07ba
  408bcc:	pop    edx
  408bcd:	dec    esi
  408bce:	jle    0x408b7c
  408bd0:	and    BYTE PTR [ebx-0x74e68504],cl
  408bd6:	pop    esi
  408bd7:	call   0xc0d16c
  408bdc:	add    al,0x7d
  408bde:	xchg   edx,eax
  408bdf:	add    al,0xbd
  408be1:	shr    DWORD PTR [esi-0x41],0x77
  408be5:	test   BYTE PTR [edi],al
  408be7:	fidiv  DWORD PTR [edi+0x54]
  408bea:	adc    al,0x77
  408bec:	jle    0x408bf5
  408bee:	mov    esp,0x57e1a408
  408bf3:	and    eax,0x3271a516
  408bf8:	out    dx,eax
  408bf9:	mov    ch,0x28
  408bfb:	pusha  
  408bfc:	adc    al,0xc
  408bfe:	ja     0x408bc0
  408c00:	stos   DWORD PTR es:[edi],eax
  408c01:	push   eax
  408c02:	sub    eax,0xe4485227
  408c07:	pop    ebx
  408c08:	mov    ebx,DWORD PTR [ebp-0x1b3399a4]
  408c0e:	icebp  
  408c0f:	push   0xc07b8132
  408c14:	out    0x33,al
  408c16:	or     BYTE PTR [ecx+0x5988d20d],cl
  408c1c:	cmp    BYTE PTR [ebx],dl
  408c1e:	out    0x66,al
  408c20:	nop
  408c21:	ror    DWORD PTR [ebx],1
  408c23:	or     eax,0xb020090b
  408c28:	mov    bh,cl
  408c2a:	or     al,0xa
  408c2c:	xor    edx,DWORD PTR [ecx+0x4d159201]
  408c32:	dec    ebx
  408c33:	popf   
  408c34:	(bad)  
  408c36:	pop    ebx
  408c37:	push   ebp
  408c38:	out    0x48,al
  408c3a:	cmc    
  408c3b:	pop    esp
  408c3c:	cli    
  408c3d:	in     eax,dx
  408c3e:	sbb    al,0x64
  408c40:	inc    ebp
  408c41:	popa   
  408c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c43:	into   
  408c44:	les    edx,FWORD PTR [eax]
  408c46:	xchg   ecx,eax
  408c47:	imul   esi,esp,0x4b
  408c4a:	scas   al,BYTE PTR es:[edi]
  408c4b:	push   ebp
  408c4c:	sbb    eax,0x70f5a490
  408c51:	push   ss
  408c52:	ror    BYTE PTR [edi+0x61],1
  408c55:	pusha  
  408c56:	sbb    bh,BYTE PTR [edi+0x2bc503b0]
  408c5c:	(bad)  
  408c5d:	push   0x244362c9
  408c62:	outs   dx,BYTE PTR ds:[esi]
  408c63:	retf   
  408c64:	sbb    eax,0x43265b4f
  408c69:	fdivr  QWORD PTR [eax+edi*8+0x72d7514f]
  408c70:	das    
  408c71:	and    ch,dl
  408c73:	push   ecx
  408c74:	(bad)  
  408c75:	jp     0x408ccc
  408c77:	fstp   TBYTE PTR [eax+0x447488f0]
  408c7d:	adc    DWORD PTR ds:0xc250e749,0x456cd39f
  408c87:	push   edi
  408c88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c89:	mov    cl,0xe4
  408c8b:	pop    esi
  408c8c:	lahf   
  408c8d:	adc    ch,0xfe
  408c90:	aaa    
  408c91:	xor    al,0x2
  408c93:	mov    db5,edx
  408c96:	jnp    0x408c7d
  408c98:	nop
  408c99:	pop    ecx
  408c9a:	jge    0x408c48
  408c9c:	ror    BYTE PTR [ebp-0x581dede7],1
  408ca2:	push   0xffffffb9
  408ca4:	or     cl,dh
  408ca6:	sub    DWORD PTR [esp+eiz*8+0x78],ecx
  408caa:	jno    0x408c47
  408cac:	pop    ss
  408cad:	sahf   
  408cae:	ss aam 0x33
  408cb1:	adc    ebx,DWORD PTR ds:0xcdb83b24
  408cb7:	ins    BYTE PTR es:[edi],dx
  408cb8:	dec    edi
  408cb9:	cmp    eax,DWORD PTR [ecx]
  408cbb:	pop    edi
  408cbc:	lds    eax,FWORD PTR [eax+0xef10b7d]
  408cc2:	dec    edi
  408cc3:	mov    ebx,0x6e8befbd
  408cc8:	outs   dx,BYTE PTR ds:[esi]
  408cc9:	dec    edx
  408cca:	mov    DWORD PTR [ebx],ebp
  408ccc:	jl     0x408ca8
  408cce:	test   DWORD PTR [ecx-0x72],0xfaeb6aea
  408cd5:	in     eax,0xf9
  408cd7:	rol    al,cl
  408cd9:	cli    
  408cda:	cmp    bl,BYTE PTR [ecx]
  408cdc:	call   0x8fbd87c7
  408ce1:	clc    
  408ce2:	ret    0xf9d3
  408ce5:	ds daa 
  408ce7:	cmp    ecx,ebx
  408ce9:	xchg   ecx,eax
  408cea:	icebp  
  408ceb:	mov    dh,dh
  408ced:	dec    esp
  408cee:	fdiv   QWORD PTR [ecx+ecx*1]
  408cf1:	add    eax,0x97cf9f7b
  408cf6:	mov    ebx,0xf3e11cdb
  408cfb:	icebp  
  408cfc:	jl     0x408d78
  408cfe:	ds push eax
  408d00:	push   edi
  408d01:	xchg   ebx,eax
  408d02:	jnp    0x408c8a
  408d04:	mov    al,ds:0xaa7eb519
  408d09:	add    al,0x90
  408d0b:	push   es
  408d0c:	or     esp,edx
  408d0e:	and    esp,DWORD PTR [eax]
  408d10:	xchg   esp,eax
  408d11:	aas    
  408d12:	xor    eax,0x8f83e99d
  408d17:	sbb    edx,DWORD PTR [eax]
  408d19:	pop    ds
  408d1a:	outs   dx,BYTE PTR ds:[esi]
  408d1b:	mov    ds:0x2953e44c,eax
  408d20:	jmp    0xbfa2eb8e
  408d25:	addr16 popfw 
  408d28:	fisttp DWORD PTR [edi+0x66]
  408d2b:	pop    edx
  408d2c:	jl     0x408d08
  408d2e:	sub    edi,ebx
  408d30:	adc    eax,0x37dc938
  408d35:	lahf   
  408d36:	cmp    dl,BYTE PTR [ecx+0x545eb904]
  408d3c:	and    BYTE PTR [ecx+0x69],0x0
  408d40:	sar    DWORD PTR [esi],1
  408d42:	pop    ds
  408d43:	pop    eax
  408d44:	and    edi,DWORD PTR [edx]
  408d46:	adc    ecx,esi
  408d48:	je     0x408d76
  408d4a:	fisttp QWORD PTR [ebp-0xf]
  408d4d:	lsl    ecx,WORD PTR [edx]
  408d50:	jns    0x408cec
  408d52:	add    BYTE PTR [ebx],ah
  408d54:	jmp    0x7adc8c9d
  408d59:	fld    QWORD PTR ds:0x2da0dfd0
  408d5f:	pop    ebp
  408d60:	sbb    ebx,edi
  408d62:	add    ecx,ebx
  408d64:	shl    DWORD PTR [ecx+0x2f1b9022],1
  408d6a:	cmp    eax,0x75aefb38
  408d6f:	add    cl,al
  408d71:	or     DWORD PTR [edx],edx
  408d73:	cmp    BYTE PTR [edx+esi*2],al
  408d76:	clc    
  408d77:	adc    dh,BYTE PTR [edx+0x5ad00aec]
  408d7d:	push   0xffffff81
  408d7f:	call   0xba1b:0xac83495b
  408d86:	jae    0x408d6f
  408d88:	popa   
  408d89:	jmp    0x2b88:0xe7953adc
  408d90:	cmp    ecx,DWORD PTR [eax+edi*1+0x73]
  408d94:	xor    DWORD PTR [ebp+0x265d523e],edi
  408d9a:	adc    al,0x13
  408d9c:	mov    dh,0xbc
  408d9e:	div    BYTE PTR [ebp-0x733565e3]
  408da4:	(bad)  
  408da6:	push   esp
  408da7:	ret    0x77c4
  408daa:	pop    edx
  408dab:	dec    ebp
  408dac:	cmp    BYTE PTR [eax+0x321a7cd2],dh
  408db2:	sbb    dh,dl
  408db4:	in     al,0xde
  408db6:	inc    ecx
  408db7:	inc    edi
  408db8:	mov    edx,0xc2e42e64
  408dbd:	inc    DWORD PTR [ecx-0x3e]
  408dc0:	int3   
  408dc1:	icebp  
  408dc2:	in     eax,dx
  408dc3:	js     0x408df6
  408dc5:	(bad)  
  408dc6:	cdq    
  408dc7:	cmp    al,0x9a
  408dc9:	mov    ds:0x87895e70,eax
  408dce:	imul   ebx,DWORD PTR [ebx+0x6a],0x5d051715
  408dd5:	xlat   BYTE PTR ds:[ebx]
  408dd6:	ret    0xf801
  408dd9:	add    BYTE PTR [esp+esi*4],dl
  408ddc:	jo     0x408e12
  408dde:	xlat   BYTE PTR ds:[ebx]
  408ddf:	adc    al,0x84
  408de1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408de2:	sbb    BYTE PTR [ecx],cl
  408de4:	pop    edx
  408de5:	loope  0x408e51
  408de7:	push   di
  408de9:	sbb    DWORD PTR [edi+0x5],0x37993823
  408df0:	sub    eax,0xb64c4c48
  408df5:	add    al,0xb6
  408df7:	test   BYTE PTR [bp+si-0x13],al
  408dfb:	jge    0x408dcf
  408dfd:	stos   BYTE PTR es:[edi],al
  408dfe:	pop    ecx
  408dff:	or     BYTE PTR [edx+0x1a],0x8c
  408e03:	adc    al,al
  408e05:	ins    BYTE PTR es:[edi],dx
  408e06:	das    
  408e07:	sbb    ah,BYTE PTR [edi]
  408e09:	and    BYTE PTR [edx],bl
  408e0b:	mov    eax,0xc64b1735
  408e10:	jecxz  0x408dce
  408e12:	test   ebx,edi
  408e14:	in     eax,0x24
  408e16:	stos   BYTE PTR es:[edi],al
  408e17:	pop    esp
  408e18:	sti    
  408e19:	mov    eax,0xafa6f268
  408e1e:	cmp    bl,dl
  408e20:	jp     0x408e41
  408e22:	fsubp  st(3),st
  408e24:	adc    eax,0xaebc0288
  408e29:	inc    eax
  408e2a:	test   al,0xcf
  408e2c:	or     ch,dh
  408e2e:	inc    edi
  408e2f:	test   BYTE PTR [ecx],bl
  408e31:	and    cl,BYTE PTR [edx-0x4b]
  408e34:	mov    WORD PTR [esi+0x3f],es
  408e37:	loopne 0x408e75
  408e39:	loop   0x408dc6
  408e3b:	sbb    dh,BYTE PTR [edi-0xf]
  408e3e:	adc    dl,BYTE PTR [esi-0x1e]
  408e41:	jg     0x408e05
  408e43:	xor    DWORD PTR ds:0x6c57424d,edi
  408e49:	stos   BYTE PTR es:[edi],al
  408e4a:	inc    ecx
  408e4b:	dec    edi
  408e4c:	cmp    eax,0xca5d16bc
  408e51:	pop    ebx
  408e52:	imul   edi,DWORD PTR cs:[ecx],0x6b
  408e56:	imul   ebp,DWORD PTR [esi],0xffffffde
  408e59:	mov    ecx,0xb3db9a71
  408e5e:	fisubr WORD PTR [ecx]
  408e60:	(bad)  
  408e61:	jno    0x408e78
  408e63:	retf   0xfe3d
  408e66:	inc    eax
  408e67:	or     al,BYTE PTR [eax-0x79]
  408e6a:	pop    esi
  408e6b:	or     eax,DWORD PTR [ecx+0x1a8fa6d4]
  408e71:	jmp    0x2fa8:0x1e9add50
  408e78:	push   edi
  408e79:	je     0x408e95
  408e7b:	mov    dl,0xe8
  408e7d:	xchg   BYTE PTR [ebp-0x78c34a50],bl
  408e83:	scas   eax,DWORD PTR es:[edi]
  408e84:	pop    eax
  408e85:	mov    BYTE PTR [edx-0x421e628],cl
  408e8b:	mov    esp,0x9c27717e
  408e90:	pop    edi
  408e91:	pop    ebx
  408e92:	adc    esi,DWORD PTR [ebp-0x50b1154f]
  408e98:	ret    
  408e99:	mov    ebx,0xa5256da5
  408e9e:	or     DWORD PTR [eax+0x32],ecx
  408ea1:	mov    cl,0x5c
  408ea3:	retf   0x33a1
  408ea6:	(bad)  
  408ea8:	das    
  408ea9:	jnp    0x408e5a
  408eab:	push   ebp
  408eac:	les    ecx,FWORD PTR [edx+0x50]
  408eaf:	mov    es,ecx
  408eb1:	js     0x408f20
  408eb3:	cmp    bh,BYTE PTR [eax+eiz*8]
  408eb6:	sub    cl,dh
  408eb8:	mov    eax,DWORD PTR [edi-0x53e09cba]
  408ebe:	(bad)  
  408ebf:	pop    ss
  408ec0:	mov    BYTE PTR [edx],dh
  408ec2:	xchg   ecx,eax
  408ec3:	xchg   edx,eax
  408ec4:	inc    ecx
  408ec5:	or     al,0x77
  408ec7:	jle    0x408e72
  408ec9:	dec    esp
  408eca:	test   BYTE PTR [edi+0x15],0xb5
  408ece:	ds dec ebp
  408ed0:	mov    dl,0x92
  408ed2:	push   edx
  408ed3:	repz mov esp,0x49dc1078
  408ed9:	inc    esp
  408eda:	xor    edi,DWORD PTR [edx+0x48]
  408edd:	fwait
  408ede:	dec    edx
  408edf:	dec    ebx
  408ee0:	inc    ebx
  408ee1:	dec    edi
  408ee2:	mov    eax,ds:0xaa9146e4
  408ee7:	add    ecx,DWORD PTR [edx-0x4f]
  408eea:	inc    esp
  408eeb:	clc    
  408eec:	add    al,0xde
  408eee:	pop    eax
  408eef:	and    ecx,esp
  408ef1:	sbb    dl,ch
  408ef3:	mov    esi,0xab06dda0
  408ef8:	nop
  408ef9:	jnp    0x408ef8
  408efb:	in     al,dx
  408efc:	jle    0x408eb9
  408efe:	imul   edx,DWORD PTR [edi],0xffffffa3
  408f01:	fild   DWORD PTR [esi-0x73]
  408f04:	and    esi,DWORD PTR [ebx]
  408f06:	dec    esp
  408f07:	mov    esi,0x1fe8369e
  408f0c:	lods   al,BYTE PTR ds:[esi]
  408f0d:	je     0x408ee3
  408f0f:	adc    al,0x8d
  408f11:	(bad)  
  408f13:	(bad)  
  408f14:	cmp    edx,DWORD PTR [ecx+ecx*8+0x7f]
  408f18:	jmp    0x7b28e149
  408f1d:	adc    ecx,DWORD PTR [esi]
  408f1f:	ss push 0xffffff8f
  408f22:	nop
  408f23:	jp     0x408f03
  408f25:	sbb    BYTE PTR [eax],0x3e
  408f28:	sbb    eax,0x8f03f159
  408f2d:	ret    
  408f2e:	loopne 0x408f6c
  408f30:	or     eax,0x4e2d7e3a
  408f35:	outs   dx,DWORD PTR ds:[esi]
  408f36:	ins    BYTE PTR es:[edi],dx
  408f37:	mov    edi,0x4a805bb7
  408f3c:	dec    ebp
  408f3d:	das    
  408f3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f3f:	fs xchg ebp,eax
  408f41:	test   eax,0xc62628ff
  408f46:	push   eax
  408f47:	cmp    esi,ebx
  408f49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f4a:	and    BYTE PTR [ebx+eiz*4],bl
  408f4d:	lods   eax,DWORD PTR ds:[esi]
  408f4e:	dec    eax
  408f4f:	xor    ebx,DWORD PTR [eax]
  408f51:	cmc    
  408f52:	pop    ss
  408f53:	add    cl,BYTE PTR [eax]
  408f55:	cmp    edi,edi
  408f57:	add    eax,0xf73144ef
  408f5c:	scas   eax,DWORD PTR es:[edi]
  408f5d:	jmp    0x9eb2:0xd5392fb1
  408f64:	fdivr  QWORD PTR [eax+0x64]
  408f67:	jae    0x408f53
  408f69:	lods   al,BYTE PTR ds:[esi]
  408f6a:	adc    ebp,DWORD PTR [esi]
  408f6c:	jnp    0x408f6f
  408f6e:	pop    edx
  408f6f:	inc    eax
  408f70:	addr16 leave 
  408f72:	ins    BYTE PTR es:[edi],dx
  408f73:	jmp    0x3ac1:0xc57476f6
  408f7a:	mov    ebp,0xdb2e5417
  408f7f:	arpl   WORD PTR [eax+0x1a],sp
  408f82:	arpl   WORD PTR [ecx],cx
  408f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f85:	nop
  408f86:	shl    BYTE PTR [ebx],cl
  408f88:	shl    DWORD PTR [edx-0x7],cl
  408f8b:	push   0x28
  408f8d:	shr    DWORD PTR [ecx+0x5f],1
  408f90:	jp     0x408f49
  408f92:	fist   DWORD PTR [ecx+0x2e692041]
  408f98:	xchg   ebx,eax
  408f99:	xchg   edi,eax
  408f9a:	hlt    
  408f9b:	lock inc ecx
  408f9d:	pop    ecx
  408f9e:	(bad)  
  408f9f:	ins    DWORD PTR es:[edi],dx
  408fa0:	xlat   BYTE PTR ds:[bx]
  408fa2:	inc    esp
  408fa3:	cmc    
  408fa4:	dec    esi
  408fa5:	mov    edi,0x1322d0ac
  408faa:	fisubr WORD PTR [ebx-0x45]
  408fad:	jl     0x408f9b
  408faf:	cmp    DWORD PTR [edx+0x1c1e89bb],ebp
  408fb5:	sbb    DWORD PTR [edi],edx
  408fb7:	mov    ah,dl
  408fb9:	mov    eax,eax
  408fbb:	ret    
  408fbc:	in     eax,dx
  408fbd:	outs   dx,BYTE PTR ds:[esi]
  408fbe:	and    DWORD PTR [ebx],eax
  408fc0:	retf   0x6192
  408fc3:	xchg   ebx,eax
  408fc4:	xchg   edx,eax
  408fc5:	and    bl,ah
  408fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408fc8:	add    DWORD PTR [esi],esi
  408fca:	ret    
  408fcb:	cmp    DWORD PTR [edi-0x3b],ebx
  408fce:	nop
  408fcf:	dec    ebp
  408fd0:	(bad)  
  408fd1:	push   ds
  408fd2:	or     DWORD PTR [edi+0x493dca44],0xffffffc4
  408fd9:	outs   dx,DWORD PTR ds:[esi]
  408fda:	scas   eax,DWORD PTR es:[edi]
  408fdb:	adc    ebx,DWORD PTR [ecx+0x23e01115]
  408fe1:	shr    DWORD PTR [ecx+edx*4],cl
  408fe4:	rol    BYTE PTR [eax],cl
  408fe6:	mov    gs,WORD PTR [ebx-0x12]
  408fe9:	pop    es
  408fea:	out    0x9d,eax
  408fec:	hlt    
  408fed:	mov    ds:0x80dcf40,al
  408ff2:	mov    cr3,edi
  408ff5:	out    dx,al
  408ff6:	xchg   esp,eax
  408ff7:	cmc    
  408ff8:	outs   dx,BYTE PTR ds:[esi]
  408ff9:	shl    BYTE PTR [ecx*4-0x243d4b37],1
  409000:	xor    BYTE PTR [ebx+0x10],bh
  409003:	pop    ecx
  409004:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409005:	frstpm(287 only) 
  409007:	cmp    edi,DWORD PTR [edi-0x174f9528]
  40900d:	(bad)  
  40900e:	ins    DWORD PTR es:[edi],dx
  40900f:	xor    al,0xe3
  409011:	fs jnp 0x409085
  409014:	pop    esp
  409015:	cs adc al,0x36
  409018:	xor    DWORD PTR [ecx-0x4a68dfa7],0xffffffdb
  40901f:	mov    bh,0xe6
  409021:	xor    eax,0x57cf8ab8
  409026:	outs   dx,BYTE PTR ds:[esi]
  409027:	(bad)  [esi]
  409029:	arpl   WORD PTR [edx-0x680989a],si
  40902f:	dec    esp
  409030:	addr16 sbb eax,0x32609abb
  409036:	xchg   DWORD PTR ds:0x999b7121,esp
  40903c:	mov    cl,BYTE PTR [edx]
  40903e:	not    dl
  409040:	dec    edi
  409041:	mov    ds:0xfcadb0d7,eax
  409046:	push   ebx
  409047:	and    al,0x4a
  409049:	(bad)  [esi-0x5cecd2e2]
  40904f:	inc    ebx
  409050:	xchg   DWORD PTR [eax+0x75ddc7ee],ebx
  409056:	imul   esi,DWORD PTR [edi+eiz*4-0x78674377],0x59
  40905e:	dec    ebp
  40905f:	sbb    bh,0x19
  409062:	inc    edi
  409063:	pop    ebp
  409064:	cmc    
  409065:	pop    ebp
  409066:	js     0x409090
  409068:	ds jnp 0x4090c0
  40906b:	je     0x409073
  40906d:	ret    0x4b2a
  409070:	sub    DWORD PTR [esi*4+0xa2f539b],edx
  409077:	ins    DWORD PTR es:[edi],dx
  409078:	lock sbb dh,BYTE PTR es:[ebx]
  40907c:	push   edx
  40907d:	and    BYTE PTR [edx*1-0x41277d0e],0x21
  409085:	push   cs
  409086:	je     0x409010
  409088:	jge    0x40908a
  40908a:	in     eax,0x62
  40908c:	mov    gs,edi
  40908e:	inc    ecx
  40908f:	(bad)  
  409090:	mov    fs,WORD PTR [edx+0x5e]
  409093:	mov    DWORD PTR [ecx+0x72],ebx
  409096:	pop    ds
  409097:	add    BYTE PTR [ebp-0x15],bl
  40909a:	fld    DWORD PTR [ebp+0x7e]
  40909d:	inc    ecx
  40909e:	imul   esp,DWORD PTR [edi+0x1f538a62],0xaa30dd79
  4090a8:	xchg   esi,eax
  4090a9:	pop    esi
  4090aa:	scas   al,BYTE PTR es:[edi]
  4090ab:	lods   eax,DWORD PTR ds:[esi]
  4090ac:	or     DWORD PTR [ebx-0x53],edi
  4090af:	addr16 out 0x52,eax
  4090b2:	ret    0x7de9
  4090b5:	and    ecx,ebx
  4090b7:	pop    es
  4090b8:	xchg   ebp,eax
  4090b9:	mov    ch,0x29
  4090bb:	and    ah,BYTE PTR [eax]
  4090bd:	ja     0x409090
  4090bf:	cmc    
  4090c0:	mov    WORD PTR [edi+0x1d4ca47b],ss
  4090c6:	mov    esi,0x8192b08a
  4090cb:	sbb    al,0xf8
  4090cd:	sub    DWORD PTR [ebp+0x3aa44197],ecx
  4090d3:	aas    
  4090d4:	mov    ebx,DWORD PTR [ebp-0x549347eb]
  4090da:	aas    
  4090db:	and    BYTE PTR [ecx-0x23],cl
  4090de:	pop    eax
  4090df:	pop    esi
  4090e0:	int3   
  4090e1:	scas   eax,DWORD PTR es:[edi]
  4090e2:	jb     0x409128
  4090e4:	pop    esp
  4090e5:	pop    ss
  4090e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4090e7:	dec    ebp
  4090e8:	add    DWORD PTR [ebp+0x19222c9e],esi
  4090ee:	cmp    BYTE PTR [ebp-0x67],ch
  4090f1:	fs dec eax
  4090f3:	push   ss
  4090f4:	jno    0x4090b3
  4090f6:	xchg   DWORD PTR [esi],eax
  4090f8:	fwait
  4090f9:	push   cs
  4090fa:	jg     0x40909b
  4090fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090fd:	inc    edi
  4090fe:	push   si
  409100:	inc    ebp
  409101:	jmp    0x409166
  409103:	push   0x2c
  409105:	cmp    edx,DWORD PTR [edi+0x597f2431]
  40910b:	sahf   
  40910c:	mov    ch,0x4b
  40910e:	cmp    al,0xea
  409110:	sbb    BYTE PTR [edx-0x59e3e885],al
  409116:	or     al,0xf3
  409118:	imul   edx,DWORD PTR [edi+0x568cbbb4],0x3d
  40911f:	stos   DWORD PTR es:[edi],eax
  409120:	inc    BYTE PTR [eax]
  409122:	cmp    dl,BYTE PTR ds:0xe258bcc5
  409128:	mov    edi,0xaeb6f3d7
  40912d:	xchg   esi,eax
  40912e:	xor    ebx,DWORD PTR [esi-0x27d53f8a]
  409134:	into   
  409135:	nop
  409136:	adc    BYTE PTR [esi+0x5ef7fb66],cl
  40913c:	add    al,0x89
  40913e:	push   ecx
  40913f:	pop    ss
  409140:	stos   BYTE PTR es:[edi],al
  409141:	or     bl,dl
  409143:	jmp    0x643f:0x34597ab7
  40914a:	test   al,0x4e
  40914c:	loop   0x4091ac
  40914e:	icebp  
  40914f:	xor    bh,BYTE PTR [esi+0x34]
  409152:	jg     0x4091b1
  409154:	push   ebp
  409155:	lods   al,BYTE PTR ds:[esi]
  409156:	dec    eax
  409157:	mov    ebx,0x78068919
  40915c:	test   DWORD PTR [edi],ebp
  40915e:	stos   BYTE PTR es:[edi],al
  40915f:	xchg   ebx,eax
  409160:	pop    es
  409161:	mov    ds:0xa7c0998d,al
  409166:	mov    edx,0x5262dd2a
  40916b:	mov    BYTE PTR [ebp-0x45],ch
  40916e:	sub    eax,0xee10cc49
  409173:	call   0xefa8aed9
  409178:	shr    ebp,cl
  40917a:	jbe    0x4091fb
  40917c:	ret    0xaa47
  40917f:	cli    
  409180:	test   al,0x26
  409182:	icebp  
  409183:	lods   al,BYTE PTR ds:[esi]
  409184:	js     0x4091ba
  409186:	lahf   
  409187:	inc    edx
  409188:	nop
  409189:	ret    
  40918a:	jl     0x4091c9
  40918c:	inc    edx
  40918d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40918e:	lea    ecx,[ecx+eiz*8+0x25]
  409192:	and    DWORD PTR [edi+0x6b],edx
  409195:	stos   DWORD PTR es:[edi],eax
  409196:	aam    0xeb
  409198:	stos   BYTE PTR es:[edi],al
  409199:	loop   0x409126
  40919b:	je     0x4091b7
  40919d:	fldcw  WORD PTR [edx]
  40919f:	sbb    al,0x14
  4091a1:	mov    esi,0x783bb9ee
  4091a6:	xor    cl,dh
  4091a8:	(bad)  
  4091aa:	push   edx
  4091ab:	mov    al,0x98
  4091ad:	dec    ebp
  4091ae:	pop    es
  4091af:	sbb    eax,0xc5551ae6
  4091b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091b5:	adc    esp,DWORD PTR [edi+esi*2+0x76d0f0b]
  4091bc:	dec    ebp
  4091bd:	inc    edi
  4091be:	jbe    0x4091a4
  4091c0:	ret    0x8434
  4091c3:	push   edi
  4091c4:	sbb    BYTE PTR [edx+0x149bd60d],cl
  4091ca:	stos   BYTE PTR es:[edi],al
  4091cb:	xchg   esp,eax
  4091cc:	ins    DWORD PTR es:[edi],dx
  4091cd:	and    ah,BYTE PTR fs:[edi]
  4091d0:	xor    dl,BYTE PTR [ebx]
  4091d2:	sbb    al,0xdb
  4091d4:	jne    0x4091f5
  4091d6:	add    eax,edi
  4091d8:	mov    ecx,0xe7196a3d
  4091dd:	sti    
  4091de:	dec    ecx
  4091df:	sub    dh,BYTE PTR [ebx]
  4091e1:	shr    BYTE PTR [ecx],0x56
  4091e4:	inc    edx
  4091e5:	push   ecx
  4091e6:	stos   DWORD PTR es:[edi],eax
  4091e7:	or     DWORD PTR [ebp+0x29341994],esp
  4091ed:	sub    al,0x81
  4091ef:	dec    edx
  4091f0:	js     0x40923c
  4091f2:	retf   0xe14
  4091f5:	leave  
  4091f6:	xor    eax,0xe5c6022
  4091fb:	fisttp QWORD PTR [ecx-0x2f]
  4091fe:	std    
  4091ff:	and    edx,DWORD PTR [ebp-0x17]
  409202:	shr    BYTE PTR [ebx-0x2c551c0f],cl
  409208:	test   esp,ecx
  40920a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40920b:	push   ss
  40920c:	sar    bh,1
  40920e:	and    eax,0xe1746023
  409213:	inc    eax
  409214:	or     eax,0xa7768906
  409219:	mov    dh,0xde
  40921b:	or     eax,0x4f25d4a
  409220:	je     0x409286
  409222:	aas    
  409223:	adc    eax,0xa7c01f2c
  409228:	repz add al,0x34
  40922b:	pushf  
  40922c:	cli    
  40922d:	jne    0x4091c0
  40922f:	call   0x2487a4e1
  409234:	test   al,0x9f
  409236:	loope  0x4092ab
  409238:	add    DWORD PTR [eax+eiz*8],edx
  40923b:	cli    
  40923c:	lahf   
  40923d:	adc    eax,0x32ecd79
  409242:	adc    BYTE PTR [edx],cl
  409244:	test   BYTE PTR [edx+0x1c],ch
  409247:	call   FWORD PTR [edi-0x93722f]
  40924d:	div    DWORD PTR [esi+0x7a]
  409250:	jg     0x4091fe
  409252:	clc    
  409253:	xlat   BYTE PTR ds:[ebx]
  409254:	les    eax,FWORD PTR [ebp-0x6caa042f]
  40925a:	or     BYTE PTR [ebx+eiz*4],0x98
  40925e:	and    bl,BYTE PTR [eax+0x44593841]
  409264:	popf   
  409265:	test   edx,ebp
  409267:	mov    bh,0x35
  409269:	mov    dl,BYTE PTR [esi-0x12e9d5ec]
  40926f:	ficom  WORD PTR [ebp+0x3c1028b0]
  409275:	xor    dh,BYTE PTR [esi-0x2a]
  409278:	pop    edx
  409279:	adc    edi,DWORD PTR [esi-0x281750d5]
  40927f:	sub    dl,0xe5
  409282:	mov    ah,0x7f
  409284:	dec    ebx
  409285:	cmp    DWORD PTR [edx-0x64],ebx
  409288:	cwde   
  409289:	or     al,BYTE PTR [ebx]
  40928b:	add    bh,dl
  40928d:	mov    bh,0x9d
  40928f:	cdq    
  409290:	test   eax,ecx
  409292:	jmp    0x409275
  409294:	cmp    eax,0x60ec80f5
  409299:	adc    bl,al
  40929b:	test   DWORD PTR [ecx-0x11],esi
  40929e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40929f:	adc    ch,dh
  4092a1:	jecxz  0x409280
  4092a3:	sar    DWORD PTR [ecx+0x5d02bccd],cl
  4092a9:	je     0x409256
  4092ab:	and    edx,DWORD PTR [ecx+0x38]
  4092ae:	jo     0x409308
  4092b0:	mov    esi,0xb6b58a4e
  4092b5:	scas   al,BYTE PTR es:[edi]
  4092b6:	ret    
  4092b7:	xchg   edx,eax
  4092b8:	addr16 int3 
  4092ba:	call   0x55c3869c
  4092bf:	pop    ss
  4092c0:	mov    ebx,0x49b82700
  4092c5:	sub    DWORD PTR [edi+0x5752b06a],eax
  4092cb:	cmp    eax,0x3030563a
  4092d0:	mov    eax,ds:0xd822697e
  4092d5:	mov    bl,0xb2
  4092d7:	fldl2e 
  4092d9:	scas   eax,DWORD PTR es:[edi]
  4092da:	cwde   
  4092db:	out    0x3c,al
  4092dd:	lds    edx,FWORD PTR [ebp-0x7733da35]
  4092e3:	xor    al,0x12
  4092e5:	pop    edx
  4092e6:	cmp    al,0xce
  4092e8:	sbb    BYTE PTR [edx+0x22],bh
  4092eb:	dec    esi
  4092ec:	adc    ch,BYTE PTR [ebp-0x28]
  4092ef:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4092f1:	dec    edi
  4092f2:	lea    esp,[edi+ebx*8]
  4092f5:	mov    al,ds:0x88889ffb
  4092fa:	jecxz  0x40930b
  4092fc:	adc    esp,esi
  4092fe:	or     DWORD PTR [ebx+0xd],0x7d0f816
  409305:	and    BYTE PTR [ebp-0x4e7d9379],bh
  40930b:	sub    dl,dl
  40930d:	or     esi,ecx
  40930f:	ror    DWORD PTR [esi+0x73],0x5d
  409313:	jns    0x409360
  409315:	xchg   esi,eax
  409316:	fbld   TBYTE PTR [edx+edi*8]
  409319:	sub    ch,BYTE PTR [eax-0x12fe0308]
  40931f:	test   DWORD PTR [edi],ebx
  409321:	push   ds
  409322:	mov    ah,0x5f
  409324:	(bad)  
  409326:	push   ecx
  409327:	xor    eax,0x6ad2af8c
  40932c:	mov    bl,0x16
  40932e:	pop    esi
  40932f:	call   0xb1ff:0xb4172dc9
  409336:	ror    ebp,cl
  409338:	mov    cl,0xc2
  40933a:	xchg   ebx,eax
  40933b:	dec    esp
  40933c:	dec    esi
  40933d:	mov    eax,0x1bbaba97
  409342:	xor    dh,BYTE PTR [eax+ebp*1]
  409345:	dec    ebp
  409346:	ror    DWORD PTR [edx-0xd],1
  409349:	mov    bl,0x42
  40934b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40934c:	lea    ecx,[ebx+0x46]
  40934f:	into   
  409350:	mov    eax,0x58ea5f70
  409355:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409356:	mov    ebx,0xd13ceaad
  40935b:	dec    esi
  40935c:	inc    ecx
  40935d:	fst    DWORD PTR [ebp-0x77cf337c]
  409363:	mov    ?,WORD PTR [edx-0x24d62285]
  409369:	daa    
  40936a:	fmul   DWORD PTR [esi-0x48]
  40936d:	mov    BYTE PTR [edi+0x69],bh
  409370:	out    dx,eax
  409371:	jmp    0xd991e975
  409376:	fs fsubr st(3),st
  409379:	in     eax,dx
  40937a:	imul   ecx,edi,0xc765bb49
  409380:	data16 sub BYTE PTR [di-0x26a1],0x9b
  409387:	push   0x47
  409389:	out    dx,al
  40938a:	jge    0x40933e
  40938c:	pop    edx
  40938d:	ss aad 0x30
  409390:	test   eax,0x404381dd
  409395:	iret   
  409396:	addr16 mov edi,0x43fdf20d
  40939c:	and    edx,esp
  40939e:	adc    dl,BYTE PTR [ebp-0x17]
  4093a1:	mov    eax,0x38111fdb
  4093a6:	(bad)  
  4093a7:	jmp    0x409341
  4093a9:	popf   
  4093aa:	nop    edi
  4093ad:	mov    bl,0x87
  4093af:	cmp    esi,ebp
  4093b1:	xchg   BYTE PTR [edi-0x55],dh
  4093b4:	out    dx,eax
  4093b5:	xor    eax,0x70b36dc5
  4093ba:	mov    edx,ds
  4093bc:	cmp    BYTE PTR [ecx+0xf],bh
  4093bf:	push   0xffffffe2
  4093c1:	push   ebx
  4093c2:	test   BYTE PTR [esi+0x28],cl
  4093c5:	fnsave [eax]
  4093c7:	in     al,dx
  4093c8:	pusha  
  4093c9:	inc    edi
  4093ca:	(bad)  [esi]
  4093cc:	or     al,0xcb
  4093ce:	lahf   
  4093cf:	test   al,0xc8
  4093d1:	dec    ebx
  4093d2:	das    
  4093d3:	inc    edx
  4093d4:	retf   
  4093d5:	int3   
  4093d6:	xchg   edx,eax
  4093d7:	push   edx
  4093d8:	scas   eax,DWORD PTR es:[edi]
  4093d9:	pop    ds
  4093da:	push   esp
  4093db:	mov    ecx,0xf2799b22
  4093e0:	mov    esi,0xbc254a2a
  4093e5:	iret   
  4093e6:	mov    edx,0x3acbe77f
  4093eb:	adc    DWORD PTR [ecx+ecx*4-0x7b711198],edi
  4093f2:	pop    ecx
  4093f3:	dec    ecx
  4093f4:	mov    DWORD PTR [eax-0x769ad7b6],ecx
  4093fa:	out    dx,eax
  4093fb:	popa   
  4093fc:	cmc    
  4093fd:	push   esp
  4093fe:	inc    eax
  4093ff:	daa    
  409400:	inc    edi
  409401:	sbb    BYTE PTR [edx+ecx*1+0x3f9706d9],ch
  409408:	popf   
  409409:	loope  0x4093dd
  40940b:	out    0x54,eax
  40940d:	test   DWORD PTR [edi],0x4119f931
  409413:	out    0x92,al
  409415:	push   ebp
  409416:	test   DWORD PTR [edi-0x4cda3c38],ecx
  40941c:	out    0x76,al
  40941e:	cmp    BYTE PTR [edx],cl
  409420:	cmp    al,0x65
  409422:	in     eax,0xb4
  409424:	gs out 0x5e,al
  409427:	adc    ebx,DWORD PTR [eax+0x207414d2]
  40942d:	mov    WORD PTR [edi],ss
  40942f:	mov    bh,0x40
  409431:	xor    DWORD PTR ds:0x2d5c2a5c,ecx
  409437:	or     BYTE PTR [eax-0x661a8781],bl
  40943d:	push   es
  40943e:	fwait
  40943f:	ret    0x9f91
  409442:	(bad)  
  409443:	adc    cl,dl
  409445:	sub    DWORD PTR [ebx+ebx*1+0x1f2096e7],eax
  40944c:	retf   0xe7f9
  40944f:	xchg   esi,eax
  409450:	push   ss
  409451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409452:	shl    DWORD PTR [edx+eax*8],0xef
  409456:	sub    ch,BYTE PTR ds:0x5741d32e
  40945c:	jl     0x409418
  40945e:	repz sub al,ah
  409461:	push   ecx
  409462:	sahf   
  409463:	sub    al,0x7e
  409465:	je     0x40940f
  409467:	iret   
  409468:	data16 (bad) 
  40946b:	dec    ebx
  40946c:	daa    
  40946d:	rcr    BYTE PTR [edx],1
  40946f:	cmc    
  409470:	shl    DWORD PTR [ebx+0x5f13b752],0x9f
  409477:	mov    eax,ds:0xf3efd777
  40947c:	std    
  40947d:	sbb    eax,0x88cfc9bd
  409482:	fs mov ecx,esi
  409485:	out    0xee,eax
  409487:	fs jmp 0x409410
  40948a:	inc    edx
  40948b:	inc    edi
  40948c:	push   esi
  40948d:	call   0xb84f49c
  409492:	sbb    bh,BYTE PTR [esi]
  409494:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409495:	lock inc edi
  409497:	push   ds
  409498:	shr    DWORD PTR [esi],cl
  40949a:	cmp    DWORD PTR [esi-0x5a],eax
  40949d:	enter  0xc588,0x83
  4094a1:	shl    DWORD PTR ss:[eax-0x7afa2d8c],cl
  4094a8:	xor    DWORD PTR [eax-0x1c],esp
  4094ab:	cld    
  4094ac:	(bad)  
  4094ad:	das    
  4094ae:	xor    ah,BYTE PTR [ecx]
  4094b0:	es or  al,0x7c
  4094b3:	test   BYTE PTR [ebx+0x76a106fa],cl
  4094b9:	repnz xor BYTE PTR [ebx],0xd
  4094bd:	mov    ds:0x6e553d24,al
  4094c2:	mov    bh,0xfb
  4094c4:	mov    BYTE PTR [esi-0x44f71882],dh
  4094ca:	shl    BYTE PTR [edx+0x15],1
  4094cd:	pushf  
  4094ce:	lahf   
  4094cf:	sbb    BYTE PTR [ebx-0x1e62cb8],ah
  4094d5:	mov    esp,0xb5af4ee0
  4094da:	push   cs
  4094db:	sbb    al,0x3b
  4094dd:	jge    0x4094b6
  4094df:	and    BYTE PTR [ebx],bl
  4094e1:	sbb    BYTE PTR [edi+eiz*4+0x17],bl
  4094e5:	or     al,0x97
  4094e7:	stc    
  4094e8:	shl    ah,cl
  4094ea:	push   ebx
  4094eb:	push   ebx
  4094ec:	push   0xfd3eec04
  4094f1:	in     al,dx
  4094f2:	add    al,0x64
  4094f4:	cmc    
  4094f5:	call   0xaaa6f495
  4094fa:	mov    bl,0x1a
  4094fc:	dec    ebx
  4094fd:	test   al,0x7e
  4094ff:	loopne 0x409482
  409501:	push   edi
  409502:	jl     0x4094ae
  409504:	xchg   edx,ecx
  409506:	pushf  
  409507:	ja     0x409534
  409509:	retf   0x61e5
  40950c:	sub    ecx,DWORD PTR [eax]
  40950e:	leave  
  40950f:	push   ecx
  409510:	and    edi,ebx
  409512:	mov    DWORD PTR ds:0xd16aac52,esp
  409518:	xchg   ecx,eax
  409519:	ror    BYTE PTR [ebx-0x3bdcd373],cl
  40951f:	inc    esp
  409520:	scas   al,BYTE PTR es:[edi]
  409521:	sub    al,0x7d
  409523:	mov    esp,0x4b7add59
  409528:	pop    edx
  409529:	jl     0x409575
  40952b:	xor    ch,BYTE PTR [edx+ebp*4-0x6b4aa9c5]
  409532:	cwde   
  409533:	xchg   esi,eax
  409534:	sahf   
  409535:	fwait
  409536:	or     bh,dh
  409538:	dec    eax
  409539:	pop    ebx
  40953a:	push   eax
  40953b:	xchg   esi,eax
  40953c:	call   0xe522:0xbdd76224
  409543:	mov    esi,0xbf0e1ca9
  409548:	lea    eax,[edi+0x467dc18]
  40954e:	dec    eax
  40954f:	sar    BYTE PTR [edx+0x5e],0x4d
  409553:	fcmovnbe st,st(3)
  409555:	mov    ebx,0xd3c65b60
  40955a:	inc    edx
  40955b:	adc    al,BYTE PTR [eax-0x7f6dd54f]
  409561:	lea    ecx,[edx+0x3159e106]
  409567:	xchg   DWORD PTR [ebx+eax*4+0x51c5e750],ebx
  40956e:	rcr    edi,1
  409570:	scas   al,BYTE PTR es:[edi]
  409571:	jne    0x4095da
  409573:	or     eax,0x6b85824c
  409578:	popa   
  409579:	mov    dl,0xe5
  40957b:	inc    esp
  40957c:	pop    ecx
  40957d:	int3   
  40957e:	scas   al,BYTE PTR es:[edi]
  40957f:	pop    es
  409580:	inc    ebp
  409581:	inc    ebx
  409582:	adc    al,0xf2
  409584:	push   ebx
  409585:	jmp    0x40951a
  409587:	lea    ebx,[edi]
  409589:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40958a:	fst    QWORD PTR [edx-0x79325b50]
  409590:	pop    edi
  409591:	adc    BYTE PTR [ecx],ah
  409593:	xor    BYTE PTR [eax],ah
  409595:	pop    edi
  409596:	bound  ecx,QWORD PTR [eax+0x4546925e]
  40959c:	stos   BYTE PTR es:[edi],al
  40959d:	xor    al,0xfd
  40959f:	(bad)
  4095a2:	add    al,0x57
  4095a4:	add    ebp,DWORD PTR [esi-0x1617b851]
  4095aa:	cwde   
  4095ab:	imul   ecx,edi,0xd88b6049
  4095b1:	shl    DWORD PTR [edx],cl
  4095b3:	sub    eax,0x26c4f7f2
  4095b8:	pushf  
  4095b9:	or     DWORD PTR [edx+0x9e2bfff],ecx
  4095bf:	dec    ebx
  4095c0:	jb     0x409588
  4095c2:	pop    edx
  4095c3:	mov    esp,0x9f55148f
  4095c8:	mov    edx,0x34a40cde
  4095cd:	enter  0xcdf0,0x34
  4095d1:	aam    0x7c
  4095d3:	xor    eax,DWORD PTR [esi-0x59]
  4095d6:	inc    esp
  4095d7:	test   BYTE PTR [ebp-0x6bafd295],dh
  4095dd:	outs   dx,DWORD PTR ds:[esi]
  4095de:	sar    esp,cl
  4095e0:	jmp    0x4095b7
  4095e2:	mov    dh,0x7b
  4095e4:	out    0xc9,eax
  4095e6:	ss push ds
  4095e8:	jne    0x409647
  4095ea:	test   ch,0x24
  4095ed:	cmc    
  4095ee:	fwait
  4095ef:	pop    es
  4095f0:	sbb    esi,edi
  4095f2:	dec    eax
  4095f3:	aad    0x24
  4095f5:	xlat   BYTE PTR ds:[ebx]
  4095f6:	mov    ebx,ds
  4095f8:	push   esi
  4095f9:	les    esp,FWORD PTR [esi+0x57]
  4095fc:	push   edi
  4095fd:	xchg   ecx,eax
  4095fe:	adc    edx,DWORD PTR [edi-0x6fdfe460]
  409604:	xchg   esp,eax
  409605:	push   edi
  409606:	xor    DWORD PTR [eax-0x2],esp
  409609:	adc    DWORD PTR [edi-0x278acf25],ebp
  40960f:	xlat   BYTE PTR ds:[ebx]
  409610:	mov    ds:0xbec78456,al
  409615:	jns    0x409615
  409617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409618:	and    DWORD PTR [ebp-0x5b],esi
  40961b:	add    BYTE PTR [eax-0x11],cl
  40961e:	or     DWORD PTR [ebp+ecx*4+0x33],ebx
  409622:	out    0xba,al
  409624:	popa   
  409625:	pop    eax
  409626:	pop    ebx
  409627:	lods   al,BYTE PTR ds:[esi]
  409628:	push   ss
  409629:	nop
  40962a:	div    BYTE PTR ds:0x3743b82c
  409630:	push   ebp
  409631:	pop    edi
  409632:	sar    bh,cl
  409634:	mov    ebx,0x5610cbc1
  40963a:	mov    eax,edx
  40963c:	mov    esp,DWORD PTR [ebx+0x4779a6f8]
  409642:	(bad)  
  409643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409644:	cvtps2pd xmm4,QWORD PTR [ecx-0x607d35a7]
  40964b:	push   ss
  40964c:	jne    0x4095df
  40964e:	das    
  40964f:	xor    BYTE PTR [eax+0x11],dh
  409652:	gs dec esp
  409654:	lahf   
  409655:	add    BYTE PTR [eax+ecx*2],0xb
  409659:	lods   eax,DWORD PTR ds:[esi]
  40965a:	xor    ah,BYTE PTR [edi]
  40965c:	mov    ebp,0xbfad064b
  409661:	fadd   st,st(3)
  409663:	js     0x409694
  409665:	stc    
  409666:	out    dx,al
  409667:	xchg   ebx,eax
  409668:	mov    cl,0xcb
  40966a:	pusha  
  40966b:	fstp   TBYTE PTR [edx]
  40966d:	add    dl,BYTE PTR [ebx-0x62a8ec19]
  409673:	pop    es
  409674:	out    0x86,al
  409676:	inc    ebx
  409677:	adc    BYTE PTR [eax-0x6],0x48
  40967b:	test   al,0x3d
  40967d:	int3   
  40967e:	or     eax,0x514ae2a5
  409683:	sar    BYTE PTR [edi-0x7],cl
  409686:	push   ss
  409687:	inc    esp
  409688:	call   0xeb82:0x5fb2fb3b
  40968f:	and    eax,esp
  409691:	xor    al,0xd
  409693:	stc    
  409694:	mov    ecx,0xc04b5b8c
  409699:	int    0x77
  40969b:	in     eax,0x1f
  40969d:	add    ebp,edi
  40969f:	jl     0x4096fd
  4096a1:	or     DWORD PTR [edi+0x11],ebp
  4096a4:	push   ecx
  4096a5:	xor    eax,0xde9bc63b
  4096aa:	ret    
  4096ab:	shr    DWORD PTR [ecx+0x6bbf5ae0],1
  4096b1:	mov    ebx,0x90d0ecf5
  4096b6:	leave  
  4096b7:	dec    esp
  4096b8:	and    eax,0x17ecced4
  4096bd:	inc    ecx
  4096be:	adc    al,0xa3
  4096c0:	adc    ecx,DWORD PTR [eax]
  4096c2:	fidivr WORD PTR [ecx]
  4096c4:	loope  0x4096a5
  4096c6:	cmp    DWORD PTR [edi+edx*4-0x37bcbcd7],ecx
  4096cd:	cmp    BYTE PTR [edi],ch
  4096cf:	aam    0xb
  4096d1:	data16 loope 0x4096c4
  4096d4:	cs retf 
  4096d6:	(bad)  
  4096d7:	xchg   ecx,eax
  4096d8:	inc    ebp
  4096d9:	or     ebx,DWORD PTR [esi]
  4096db:	gs aas 
  4096dd:	add    eax,esp
  4096df:	inc    edx
  4096e0:	dec    edi
  4096e1:	fistp  WORD PTR ds:0x6dbda52f
  4096e7:	addr16 rcl esi,0x9d
  4096eb:	add    bl,dl
  4096ed:	sbb    bl,BYTE PTR [edi+eiz*8-0x27]
  4096f1:	and    al,0xb8
  4096f3:	loopne 0x409699
  4096f5:	jo     0x409689
  4096f7:	xor    al,0xe6
  4096f9:	xchg   edi,eax
  4096fa:	pop    es
  4096fb:	pop    ebp
  4096fc:	jp     0x409729
  4096fe:	or     BYTE PTR [edx],al
  409700:	in     eax,0xd5
  409702:	jle    0x40974f
  409704:	ror    BYTE PTR ds:0x4c880d49,cl
  40970a:	cmp    eax,0xa5614957
  40970f:	push   eax
  409710:	xor    edx,DWORD PTR [ecx+0x34]
  409713:	pop    ebp
  409714:	(bad)  
  409715:	rep stos DWORD PTR es:[edi],eax
  409717:	and    eax,0xdc241859
  40971c:	test   DWORD PTR [edi],esp
  40971e:	cld    
  40971f:	dec    edi
  409720:	jns    0x40974e
  409722:	sub    esi,edx
  409724:	popa   
  409725:	adc    DWORD PTR [esi-0xc],0x27
  409729:	out    dx,al
  40972a:	mov    bl,0xa8
  40972c:	rcl    DWORD PTR [eax],0x40
  40972f:	adc    al,cl
  409731:	and    BYTE PTR [edx+0xf],dh
  409734:	mov    dh,0xa9
  409736:	(bad)  
  409738:	cwde   
  409739:	pusha  
  40973a:	dec    ebx
  40973b:	cmp    eax,0x3d9a3b9b
  409740:	sub    al,0x7a
  409742:	pushf  
  409743:	ret    0x3fb5
  409746:	gs nop
  409748:	es imul edi
  40974b:	mov    eax,DWORD PTR [edx+0x6c3e89ff]
  409751:	pop    ds
  409752:	test   BYTE PTR [edi-0x5a4385f6],al
  409758:	sub    dh,ah
  40975a:	pop    esi
  40975b:	push   ebx
  40975c:	pop    ss
  40975d:	adc    bl,al
  40975f:	xor    ebx,esi
  409761:	fcomp  DWORD PTR [eax-0x3ed8a4df]
  409767:	aas    
  409768:	jne    0x4097ab
  40976a:	ds push ecx
  40976c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40976d:	icebp  
  40976e:	std    
  40976f:	cli    
  409770:	mov    ch,0xa6
  409772:	retf   
  409773:	ja     0x40973e
  409775:	fild   DWORD PTR [ebx-0x5f]
  409778:	out    0x71,eax
  40977a:	cli    
  40977b:	(bad)  
  40977c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40977d:	not    BYTE PTR [edi+0x59]
  409780:	jmp    0x233e92c8
  409785:	lahf   
  409786:	hlt    
  409787:	pop    ebp
  409788:	repz dec eax
  40978a:	int    0xc9
  40978c:	sti    
  40978d:	xchg   edx,eax
  40978e:	pop    ebx
  40978f:	mov    ebp,0x64229703
  409794:	push   edi
  409795:	mov    DWORD PTR [ecx+eiz*4-0x3a],edx
  409799:	sar    DWORD PTR ds:0x3da38789,1
  40979f:	mov    ds:0x12261749,al
  4097a4:	push   0xffffffdc
  4097a6:	rcr    DWORD PTR [edx+edx*8+0x41],1
  4097aa:	push   0x30
  4097ac:	adc    DWORD PTR [ebx],ebp
  4097ae:	push   DWORD PTR [esi-0x2c]
  4097b1:	sbb    bl,BYTE PTR [edi-0xf8d5e2f]
  4097b7:	and    BYTE PTR ds:[esi-0x20],bh
  4097bb:	mov    bl,cl
  4097bd:	leave  
  4097be:	fidiv  DWORD PTR ds:0x15fb8785
  4097c4:	in     eax,dx
  4097c5:	dec    ebx
  4097c6:	retf   
  4097c7:	loop   0x409764
  4097c9:	out    0xa4,al
  4097cb:	mov    ds:0x1422c34d,eax
  4097d0:	pop    edi
  4097d1:	sbb    bl,BYTE PTR [ebx]
  4097d3:	pop    es
  4097d4:	jbe    0x409849
  4097d6:	cli    
  4097d7:	clc    
  4097d8:	sub    BYTE PTR [eax-0x7b],dl
  4097db:	sbb    BYTE PTR [esi+0x7570b735],al
  4097e1:	fcmovnb st,st(3)
  4097e3:	(bad)  
  4097e4:	pop    ecx
  4097e5:	jmp    0xb75e:0x81f4a135
  4097ec:	pop    eax
  4097ed:	jb     0x4097d7
  4097ef:	xchg   ebp,eax
  4097f0:	jle    0x4097f1
  4097f2:	shl    BYTE PTR [edi+eiz*2+0x21],cl
  4097f6:	pop    eax
  4097f7:	xlat   BYTE PTR ds:[ebx]
  4097f8:	add    esi,ebx
  4097fa:	pop    ecx
  4097fb:	push   eax
  4097fc:	rol    DWORD PTR [esp+ebp*2+0x43],0x98
  409801:	fwait
  409802:	ss xchg esp,eax
  409804:	push   eax
  409805:	mov    edi,DWORD PTR [ebx]
  409807:	outs   dx,DWORD PTR ds:[esi]
  409808:	sbb    BYTE PTR [ebx+0x52],bh
  40980b:	in     eax,dx
  40980c:	in     al,dx
  40980d:	and    eax,0xa0900044
  409812:	mov    al,0xcf
  409814:	iret   
  409815:	xchg   ecx,eax
  409816:	sti    
  409817:	repnz dec esi
  409819:	adc    al,0xa
  40981b:	xchg   eax,ebp
  40981d:	jo     0x409852
  40981f:	cmp    ebx,DWORD PTR [ebp+0x3d130bd2]
  409825:	push   ebp
  409826:	xchg   edx,eax
  409827:	jne    0x409807
  409829:	test   eax,0xcec1d4a9
  40982e:	cwde   
  40982f:	jl     0x4097bd
  409831:	mov    ch,0xee
  409833:	xor    ah,BYTE PTR [edx]
  409835:	mov    bh,0xa
  409837:	push   es
  409838:	inc    ebp
  409839:	ficomp WORD PTR [ecx+esi*4+0x5e]
  40983d:	inc    ecx
  40983e:	fist   DWORD PTR [esi-0x18ae519a]
  409844:	mov    ah,0xd4
  409846:	jp     0x40988b
  409848:	cdq    
  409849:	(bad)  
  40984a:	mov    edi,0xafb1bac0
  40984f:	or     esp,esp
  409851:	(bad)  
  409852:	mov    bh,ch
  409854:	jmp    0x4098ab
  409856:	aad    0x39
  409858:	and    al,BYTE PTR [ecx]
  40985a:	xchg   esi,eax
  40985b:	mov    esp,0x3ddb054d
  409860:	fsubrp st(0),st
  409862:	xor    eax,0xf8818c98
  409867:	ins    DWORD PTR es:[edi],dx
  409868:	icebp  
  409869:	dec    ecx
  40986a:	cdq    
  40986b:	rol    DWORD PTR [ecx],1
  40986d:	inc    edi
  40986e:	stos   BYTE PTR es:[edi],al
  40986f:	cmp    BYTE PTR [eax-0x4e],0x24
  409873:	and    edi,DWORD PTR [ebx+0x2f73f3f9]
  409879:	xchg   esi,eax
  40987a:	aam    0xb4
  40987c:	mov    WORD PTR [eax-0x1ccb0a32],es
  409882:	fisttp QWORD PTR [edi]
  409884:	retf   0xcac5
  409887:	mov    bl,0x6c
  409889:	or     eax,0x6b996930
  40988e:	or     eax,0xaf27f6eb
  409893:	rcl    BYTE PTR [edx],1
  409895:	inc    eax
  409896:	sub    BYTE PTR [esi+0x3f576f8c],0x91
  40989d:	sub    ebp,edi
  40989f:	enter  0x1c63,0xfc
  4098a3:	aam    0x9b
  4098a5:	push   0x158f89f6
  4098aa:	test   BYTE PTR [ebx],dl
  4098ac:	add    DWORD PTR [esp+eax*2-0x5c],edi
  4098b0:	test   DWORD PTR ss:[edi-0x37],ebx
  4098b4:	mov    ds:0x93e04c6d,eax
  4098b9:	enter  0x70a5,0x4e
  4098bd:	out    0x2f,al
  4098bf:	adc    eax,esi
  4098c1:	cli    
  4098c2:	adc    eax,0x7a037fe3
  4098c7:	js     0x4098cb
  4098c9:	nop
  4098ca:	idiv   DWORD PTR [edi]
  4098cc:	sahf   
  4098cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098ce:	repnz ror esi,1
  4098d1:	sub    DWORD PTR [esi+0x1d],esp
  4098d4:	and    BYTE PTR [edi],bh
  4098d6:	xchg   DWORD PTR gs:[ebx+0x26],esi
  4098da:	sub    ebx,DWORD PTR [esi-0x15]
  4098dd:	push   esi
  4098de:	sti    
  4098df:	pop    es
  4098e0:	or     eax,0x5c64fa4e
  4098e5:	mov    edi,0xb65e70a
  4098ea:	push   ebp
  4098eb:	fistp  WORD PTR [edx-0x7]
  4098ee:	rol    DWORD PTR [esi-0x2e],1
  4098f1:	mov    eax,0x4057790
  4098f6:	lea    ebp,[edx-0x5bca88a8]
  4098fc:	mov    cl,0x62
  4098fe:	shl    BYTE PTR [edi-0x2ee563a0],0x32
  409905:	repz dec esi
  409907:	jl     0x409954
  409909:	jb     0x409893
  40990b:	inc    esi
  40990c:	ins    BYTE PTR es:[edi],dx
  40990d:	ror    DWORD PTR [edi+0x3e1e81b2],1
  409913:	sub    al,0xe3
  409915:	loop   0x409916
  409917:	xlat   BYTE PTR ds:[ebx]
  409918:	dec    esp
  409919:	(bad)  
  40991a:	(bad)  
  40991b:	sub    bh,ch
  40991d:	hlt    
  40991e:	in     eax,0x25
  409920:	pop    ss
  409921:	ss ja  0x4098d4
  409924:	xchg   esp,eax
  409925:	mov    dh,0xe5
  409927:	mov    dh,0xed
  409929:	leave  
  40992a:	lods   eax,DWORD PTR ds:[esi]
  40992b:	stos   BYTE PTR es:[edi],al
  40992c:	adc    eax,0x505ebd3f
  409931:	xor    DWORD PTR [eax],edi
  409933:	sub    al,0x9c
  409935:	pop    esi
  409936:	js     0x40994c
  409938:	push   esp
  409939:	leave  
  40993a:	(bad)  
  40993b:	lea    edx,ds:[eax+0x4bfe98ec]
  409942:	jae    0x409971
  409944:	mov    dh,0xa2
  409946:	add    DWORD PTR [edx-0x50],esp
  409949:	and    BYTE PTR [ecx-0x3d],al
  40994c:	in     eax,dx
  40994d:	mov    esp,0xeeb3cb57
  409952:	cmp    ebp,DWORD PTR [eax+0x3d20d41c]
  409958:	sub    ebx,edx
  40995a:	mov    al,0x22
  40995c:	mov    dh,0x7b
  40995e:	push   es
  40995f:	or     DWORD PTR [ebp+0x16fdad8],ebp
  409965:	sbb    ebp,ecx
  409967:	push   cs
  409968:	push   esp
  409969:	stos   DWORD PTR es:[edi],eax
  40996a:	loope  0x4098fc
  40996c:	or     al,0xc3
  40996e:	fwait
  40996f:	jb     0x409926
  409971:	adc    DWORD PTR [ebx+0x45],edx
  409974:	fstp   TBYTE PTR [ecx-0x34fd30a2]
  40997a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40997b:	test   ebx,0xd31f974
  409981:	(bad)  
  409982:	mov    cl,0xce
  409984:	ret    
  409985:	xor    esi,eax
  409987:	jne    0x409986
  409989:	in     eax,dx
  40998a:	mov    bh,0x13
  40998c:	stc    
  40998d:	jg     0x409989
  40998f:	push   eax
  409990:	and    cl,BYTE PTR [esp+ecx*2]
  409993:	or     al,0xb0
  409995:	add    eax,0xcbeed218
  40999a:	and    eax,0xba86dc41
  40999f:	dec    edx
  4099a0:	mov    bl,0x47
  4099a2:	lods   al,BYTE PTR ds:[esi]
  4099a3:	pop    ss
  4099a4:	mov    al,0x48
  4099a6:	dec    edx
  4099a7:	mov    bh,0xbd
  4099a9:	mov    bh,0xcd
  4099ab:	push   0xd9de4296
  4099b0:	sub    esi,ecx
  4099b2:	(bad)  
  4099b3:	in     al,0xdf
  4099b5:	sub    DWORD PTR [esi+0x66],edi
  4099b8:	outs   dx,BYTE PTR ds:[esi]
  4099b9:	mov    ebx,0xedff1d31
  4099be:	scas   eax,DWORD PTR es:[edi]
  4099bf:	push   eax
  4099c0:	in     eax,0xa4
  4099c2:	cmp    bh,BYTE PTR [edx+0x36b4ba27]
  4099c8:	cmp    BYTE PTR [ebx+esi*1-0x7a2b5986],bl
  4099cf:	in     al,dx
  4099d0:	fxch   st(4)
  4099d2:	xchg   ebx,eax
  4099d3:	xchg   esi,eax
  4099d4:	xor    al,0xac
  4099d6:	js     0x40997b
  4099d8:	adc    BYTE PTR [ebx+0x20],0xa0
  4099dc:	neg    DWORD PTR [eax+ebx*4]
  4099df:	push   ebp
  4099e0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4099e2:	add    eax,0x5126e883
  4099e7:	push   ss
  4099e8:	xlat   BYTE PTR ds:[ebx]
  4099e9:	pop    ebx
  4099ea:	jmp    FWORD PTR [edi]
  4099ec:	mov    eax,ds:0xf2b99038
  4099f1:	push   ss
  4099f2:	int    0xdd
  4099f4:	xlat   BYTE PTR ds:[ebx]
  4099f5:	fld    DWORD PTR [eax-0x12b17b44]
  4099fb:	mov    ?,WORD PTR [edx+0x62]
  4099fe:	mov    esp,0x8f81ec31
  409a03:	push   edi
  409a04:	sahf   
  409a05:	pop    ecx
  409a06:	cmp    al,0x73
  409a08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a09:	nop
  409a0a:	aaa    
  409a0b:	pop    ss
  409a0c:	push   ebp
  409a0d:	xlat   BYTE PTR ds:[ebx]
  409a0e:	push   ss
  409a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a10:	sub    esp,0x7a32d84a
  409a16:	jbe    0x409a7a
  409a18:	ret    
  409a19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a1a:	jmp    0xe82bdb37
  409a1f:	mov    bh,0xdb
  409a21:	test   DWORD PTR [ecx],0xc4b3cf41
  409a27:	mov    esi,0xa5812721
  409a2c:	xor    al,0xea
  409a2e:	push   0xc45b44f3
  409a33:	mov    cs,WORD PTR [eax-0xe]
  409a36:	pop    ebp
  409a37:	xchg   edx,eax
  409a38:	push   0x34
  409a3a:	pop    es
  409a3b:	mov    al,ds:0x833596e0
  409a40:	in     eax,dx
  409a41:	adc    BYTE PTR [ebp-0x28],al
  409a44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a45:	mov    ah,0xb
  409a47:	jmp    0x4099e0
  409a49:	aaa    
  409a4a:	cmp    DWORD PTR [edx],esi
  409a4c:	mov    ebp,0x8672d9aa
  409a51:	cli    
  409a52:	int    0xf0
  409a54:	mov    dh,0x41
  409a56:	aam    0x3f
  409a58:	cmc    
  409a59:	xor    ch,BYTE PTR [esi+0x2c648400]
  409a5f:	pusha  
  409a60:	jnp    0x409a9d
  409a62:	(bad)  
  409a63:	push   ss
  409a64:	cmp    eax,0xab1141e6
  409a69:	bswap  esi
  409a6b:	mov    esp,0x8c3202df
  409a70:	sbb    al,0x3c
  409a72:	ins    BYTE PTR es:[edi],dx
  409a73:	out    0xe0,al
  409a75:	cmp    al,0x43
  409a77:	ret    0xe54f
  409a7a:	es stos BYTE PTR es:[edi],al
  409a7c:	fwait
  409a7d:	aas    
  409a7e:	outs   dx,BYTE PTR ds:[esi]
  409a7f:	stc    
  409a80:	mov    esp,0x1d774548
  409a85:	jmp    0x91bf:0x1ad60d6
  409a8c:	in     eax,0xe5
  409a8e:	lods   eax,DWORD PTR ds:[esi]
  409a8f:	mov    al,ds:0x9a9f3149
  409a94:	daa    
  409a95:	push   ecx
  409a96:	pop    eax
  409a97:	sbb    eax,0xc853a05a
  409a9c:	sub    al,0xfc
  409a9e:	mov    ?,ebp
  409aa0:	add    ebx,DWORD PTR [edi]
  409aa2:	jg     0x409b15
  409aa4:	jno    0x409b1a
  409aa6:	add    esp,DWORD PTR [ebp+0x34]
  409aa9:	retf   
  409aaa:	push   eax
  409aab:	push   0x8087acb1
  409ab0:	jmp    FWORD PTR [ecx+0x47]
  409ab3:	(bad)  
  409ab4:	add    bl,BYTE PTR [edx]
  409ab6:	pushf  
  409ab7:	aas    
  409ab8:	fmul   QWORD PTR [edi+ebx*1]
  409abb:	aam    0x9f
  409abd:	add    al,0x1d
  409abf:	ret    
  409ac0:	mov    dh,0xa5
  409ac2:	das    
  409ac3:	fsub   st(4),st
  409ac5:	inc    ebx
  409ac6:	or     BYTE PTR [ebx+0x21],cl
  409ac9:	outs   dx,DWORD PTR ds:[esi]
  409aca:	sbb    esp,DWORD PTR [esi]
  409acc:	sub    esp,DWORD PTR [edi]
  409ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409acf:	outs   dx,BYTE PTR ds:[esi]
  409ad0:	jg     0x409abe
  409ad2:	sbb    eax,0xdf3ea8dd
  409ad7:	cmp    DWORD PTR [esi-0x8af10e8],ebx
  409add:	sub    al,0x78
  409adf:	and    al,ch
  409ae1:	jbe    0x409b58
  409ae3:	inc    edi
  409ae4:	pop    esi
  409ae5:	iret   
  409ae6:	sbb    eax,0x12d873c
  409aeb:	call   0xc6d353ad
  409af0:	icebp  
  409af1:	sub    eax,0xbcaf05fe
  409af6:	ins    BYTE PTR es:[edi],dx
  409af7:	sub    BYTE PTR [eax-0x167475db],0x6e
  409afe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409aff:	sbb    eax,0x202fec76
  409b04:	js     0x409a8c
  409b06:	jne    0x409b12
  409b08:	dec    ecx
  409b09:	mov    BYTE PTR [eax],bl
  409b0b:	jbe    0x409af6
  409b0d:	mov    edi,0x65930d2f
  409b12:	push   esp
  409b13:	sub    BYTE PTR [edi+0x2dbef144],ch
  409b19:	xchg   edx,eax
  409b1a:	mov    cl,0xb4
  409b1c:	nop
  409b1d:	cmp    al,0xcb
  409b1f:	pop    ebp
  409b20:	ret    0x3f31
  409b23:	push   ds
  409b24:	call   0xf95c769f
  409b29:	clc    
  409b2a:	push   ecx
  409b2b:	leave  
  409b2c:	add    eax,0xf4c40784
  409b31:	pop    esi
  409b32:	mov    ch,bh
  409b34:	fimul  WORD PTR [ebp+0x2a3a6917]
  409b3a:	push   ebx
  409b3b:	dec    edi
  409b3c:	jae    0x409b92
  409b3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b3f:	sbb    DWORD PTR [edx],0xffffffa3
  409b42:	adc    BYTE PTR [edi-0x5e],bl
  409b45:	scas   eax,DWORD PTR es:[edi]
  409b46:	adc    al,0xdd
  409b48:	mov    ch,0xb7
  409b4a:	int3   
  409b4b:	mov    esp,0x47d489d1
  409b50:	lahf   
  409b51:	lds    eax,FWORD PTR [ebx]
  409b53:	or     bh,BYTE PTR [ebx]
  409b55:	or     BYTE PTR [ebx-0x76],bl
  409b58:	stos   BYTE PTR es:[edi],al
  409b59:	gs addr16 mov ah,0x5
  409b5d:	sub    al,0x89
  409b5f:	shl    DWORD PTR [ebx-0x1444c0e2],1
  409b65:	push   0xffffffe3
  409b67:	jge    0x409bdc
  409b69:	pop    ebx
  409b6a:	xchg   ebp,eax
  409b6b:	sbb    eax,0xb221ce79
  409b70:	cmp    BYTE PTR [edx+0x6d2c41f8],ch
  409b76:	or     esp,DWORD PTR [ecx]
  409b78:	in     al,dx
  409b79:	xchg   DWORD PTR [edx+0x473566de],ecx
  409b7f:	icebp  
  409b80:	imul   ecx,DWORD PTR [edx-0x41],0xffffffb4
  409b84:	sbb    BYTE PTR [eax],0x30
  409b87:	sub    BYTE PTR [ecx-0x69c9d2e2],ch
  409b8d:	and    eax,DWORD PTR [eax]
  409b8f:	and    DWORD PTR [edx],eax
  409b91:	sub    dl,BYTE PTR [ebp+0x30c085f7]
  409b97:	push   eax
  409b98:	inc    eax
  409b99:	or     esp,DWORD PTR [ebx]
  409b9b:	nop
  409b9c:	adc    ax,0x2ea5
  409ba0:	ret    0x88e5
  409ba3:	ror    DWORD PTR [esi-0x3a],0xfc
  409ba7:	xchg   edx,eax
  409ba8:	mov    gs,esi
  409baa:	lods   al,BYTE PTR ds:[esi]
  409bab:	mov    eax,ds
  409bad:	sub    dl,BYTE PTR [esi]
  409baf:	cwde   
  409bb0:	jae    0x409c30
  409bb2:	aam    0x4
  409bb4:	mov    cr7,esp
  409bb7:	scas   al,BYTE PTR es:[edi]
  409bb8:	push   ss
  409bb9:	adc    al,BYTE PTR [ecx]
  409bbb:	sub    eax,0x843333dd
  409bc0:	cdq    
  409bc1:	cmp    DWORD PTR [ecx-0xc9e8bc6],eax
  409bc7:	sbb    bl,bl
  409bc9:	adc    BYTE PTR [ebx+edi*4],bh
  409bcc:	enter  0xddc1,0x86
  409bd0:	call   0xcb22:0xe32185e3
  409bd7:	mov    DWORD PTR ss:[edx+ebp*1-0xf],esi
  409bdc:	jmp    0x48d24f30
  409be1:	mov    cs,WORD PTR [edi]
  409be3:	add    DWORD PTR [ebp+edx*2-0x5d],esi
  409be7:	xor    esp,ebx
  409be9:	or     edi,edx
  409beb:	sahf   
  409bec:	aas    
  409bed:	jp     0x409bde
  409bef:	push   edx
  409bf0:	add    al,0xc
  409bf2:	and    al,0xde
  409bf4:	fs es mov bl,0xeb
  409bf8:	adc    dh,BYTE PTR [ebp-0x27]
  409bfb:	jp     0x409c6c
  409bfd:	stos   BYTE PTR es:[edi],al
  409bfe:	rol    DWORD PTR [ebp+0x2b5dae93],1
  409c04:	out    dx,al
  409c05:	clc    
  409c06:	mov    bh,0x25
  409c08:	and    esi,DWORD PTR [ebx+0x15]
  409c0b:	jecxz  0x409bc8
  409c0d:	(bad)  
  409c0e:	(bad)  
  409c0f:	or     DWORD PTR [ebx-0x64],esp
  409c12:	stos   BYTE PTR es:[edi],al
  409c13:	mov    edx,0x651bc2da
  409c18:	je     0x409bdd
  409c1a:	push   0x62
  409c1c:	lods   al,BYTE PTR ds:[esi]
  409c1d:	call   0x7df8:0x537af19e
  409c24:	loopne 0x409c55
  409c26:	clc    
  409c27:	popf   
  409c28:	cwde   
  409c29:	xor    BYTE PTR [edx],ah
  409c2b:	sub    DWORD PTR [edx-0x5c92c5f],eax
  409c31:	sbb    al,0x88
  409c33:	mov    dh,0x83
  409c35:	bound  esi,QWORD PTR [ebx]
  409c37:	mov    BYTE PTR [ecx-0x41],ah
  409c3a:	xchg   BYTE PTR [eax-0x635a5154],dh
  409c40:	push   0x18
  409c42:	fiadd  DWORD PTR [eax+0x54cbe4c4]
  409c48:	xchg   ebx,eax
  409c49:	repz and eax,0x8989bb56
  409c4f:	cmp    DWORD PTR [ebp-0x58],esp
  409c52:	outs   dx,BYTE PTR ds:[esi]
  409c53:	fld    TBYTE PTR [ebp-0x57771fc3]
  409c59:	mov    edx,0xf848616b
  409c5e:	cli    
  409c5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c60:	cdq    
  409c61:	mov    bl,0xa3
  409c63:	sbb    eax,0x6b8f882d
  409c68:	shr    DWORD PTR [edx-0x5a],cl
  409c6b:	cmp    bl,dh
  409c6d:	not    DWORD PTR [ebx+0xad337b9]
  409c73:	cmp    eax,0xc3fd4c68
  409c78:	cmc    
  409c79:	xor    esi,DWORD PTR [edi+0x11]
  409c7c:	or     DWORD PTR [ecx],edx
  409c7e:	dec    ebp
  409c7f:	fmul   DWORD PTR [edi]
  409c81:	out    0xa,eax
  409c83:	(bad)  
  409c84:	ja     0x409c79
  409c86:	dec    esp
  409c87:	jb     0x409cb6
  409c89:	in     eax,dx
  409c8a:	test   BYTE PTR [ebx],cl
  409c8c:	leave  
  409c8d:	xor    al,0xd6
  409c8f:	les    ebp,FWORD PTR [eax+ecx*4+0x6b2b0305]
  409c96:	push   ecx
  409c97:	lods   al,BYTE PTR ds:[esi]
  409c98:	cdq    
  409c99:	pop    ds
  409c9a:	jbe    0x409cd5
  409c9c:	jbe    0x409d16
  409c9e:	add    esp,DWORD PTR [ebp-0x68748d1d]
  409ca4:	xchg   edi,eax
  409ca5:	ror    bh,0x9d
  409ca8:	dec    ebx
  409ca9:	and    al,0x5d
  409cab:	cs retf 
  409cad:	sub    ebp,DWORD PTR [ebx-0x62a2f2da]
  409cb3:	or     ebp,esi
  409cb5:	popf   
  409cb6:	ret    0xd0f5
  409cb9:	je     0x409ca6
  409cbb:	aaa    
  409cbc:	shr    esi,1
  409cbe:	jb     0x409c93
  409cc0:	lahf   
  409cc1:	call   0xc2a2e204
  409cc6:	std    
  409cc7:	pop    ebp
  409cc8:	jnp    0x409c93
  409cca:	dec    esi
  409ccb:	cld    
  409ccc:	shl    BYTE PTR [edx-0x356c6d6c],cl
  409cd2:	sar    BYTE PTR [edi+0xe],1
  409cd5:	sub    eax,0x70cd3d09
  409cda:	adc    DWORD PTR [esi-0x20],edx
  409cdd:	in     eax,0x5
  409cdf:	shl    ah,1
  409ce1:	jle    0x409c6f
  409ce3:	lods   al,BYTE PTR ds:[esi]
  409ce4:	mov    bh,BYTE PTR [eax]
  409ce6:	arpl   WORD PTR [edx-0x4b62c985],dx
  409cec:	and    esp,DWORD PTR [edx+ebp*2+0x6d9a6ed4]
  409cf3:	fistp  DWORD PTR [ecx+0x7154e9bc]
  409cf9:	mov    esi,0x6c8412b4
  409cfe:	cwde   
  409cff:	rol    BYTE PTR [eax],0xf1
  409d02:	xchg   ebx,eax
  409d03:	lods   al,BYTE PTR ds:[esi]
  409d04:	mov    edi,0x47f8d606
  409d09:	fdiv   QWORD PTR [esi+0x32a6c98e]
  409d0f:	sub    al,0x6e
  409d11:	or     edx,ebp
  409d13:	pushf  
  409d14:	sub    BYTE PTR [eax-0x2a688d7c],bh
  409d1a:	sbb    DWORD PTR [ebp-0x71],0xffffffee
  409d1e:	jecxz  0x409d70
  409d20:	sbb    ebp,edi
  409d22:	xor    ebx,DWORD PTR [eax]
  409d24:	mov    edi,0x7379bf05
  409d29:	rcr    DWORD PTR [esi-0x2b],cl
  409d2c:	sub    al,0x6d
  409d2e:	mov    edi,0xf2abdd5f
  409d33:	data16 in al,dx
  409d35:	in     eax,0xdf
  409d37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d38:	sahf   
  409d39:	jno    0x409d0e
  409d3b:	push   esi
  409d3c:	in     eax,dx
  409d3d:	sub    bl,BYTE PTR [ebx]
  409d3f:	gs cmp al,0xb1
  409d42:	pop    esp
  409d43:	je     0x409dc2
  409d45:	clc    
  409d46:	ficom  DWORD PTR [edi+eiz*4-0x39]
  409d4a:	(bad)  
  409d4b:	xor    eax,0xa1d5964c
  409d50:	imul   DWORD PTR [eax+0x70]
  409d53:	lock test BYTE PTR [ebp+0x5d],bl
  409d57:	imul   ecx,DWORD PTR [ecx],0x6f424d36
  409d5d:	jl     0x409ce5
  409d5f:	mov    edx,ecx
  409d61:	jmp    0x48:0xbc22fddf
  409d68:	or     al,0x32
  409d6a:	sbb    edi,ebp
  409d6c:	loopne 0x409dd5
  409d6e:	xchg   edx,eax
  409d6f:	mov    dl,bl
  409d71:	mov    ecx,0x9c6e94e2
  409d76:	mov    WORD PTR [edi],ds
  409d78:	popa   
  409d79:	and    dl,dh
  409d7b:	sbb    al,0x86
  409d7d:	(bad)  [ebx]
  409d7f:	jo     0x409de3
  409d81:	push   ss
  409d82:	(bad)  
  409d83:	shl    dh,1
  409d85:	data16 jecxz 0x409d27
  409d88:	add    BYTE PTR [edx-0x1c],0x6d
  409d8c:	retf   0x5129
  409d8f:	js     0x409dc1
  409d91:	push   ebx
  409d92:	mov    eax,ds:0x52f857fd
  409d97:	mov    bh,0xfb
  409d99:	push   eax
  409d9a:	sbb    bl,ah
  409d9c:	in     eax,dx
  409d9d:	mov    ebx,0x76d99769
  409da2:	sub    eax,DWORD PTR [edx+ebp*1-0x33ed3386]
  409da9:	std    
  409daa:	jb     0x409d42
  409dac:	es or  al,0x3b
  409daf:	retf   0x3a7e
  409db2:	daa    
  409db3:	aaa    
  409db4:	inc    esp
  409db5:	lods   eax,DWORD PTR ds:[esi]
  409db6:	add    DWORD PTR ds:0x27c1939f,edx
  409dbc:	pop    esp
  409dbd:	iret   
  409dbe:	aad    0x75
  409dc0:	fdivr  QWORD PTR [ebx+0x17e5148e]
  409dc6:	retw   0xc073
  409dca:	ja     0x409d7a
  409dcc:	add    esp,DWORD PTR [ebx-0x5e94aaea]
  409dd2:	dec    ch
  409dd4:	sbb    BYTE PTR [ebx],bl
  409dd6:	cmp    eax,0xfc0bf197
  409ddb:	daa    
  409ddc:	sbb    BYTE PTR fs:[esi+0x65],dl
  409de0:	jbe    0x409e32
  409de2:	or     BYTE PTR [edi+edx*1+0x79],dl
  409de6:	or     eax,0xc1c8e693
  409deb:	add    dl,BYTE PTR [esi-0x7e]
  409dee:	dec    esi
  409def:	jp     0x409dd7
  409df1:	xlat   BYTE PTR ds:[ebx]
  409df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409df3:	jmp    0x3b8a:0x32ca201b
  409dfa:	ficomp WORD PTR [edi+ebp*4+0x71ba8852]
  409e01:	bnd ret 
  409e03:	and    cl,BYTE PTR [ebp-0x69d6477e]
  409e09:	daa    
  409e0a:	mov    dh,0xf9
  409e0c:	mov    cl,0x2a
  409e0e:	xchg   ebp,eax
  409e0f:	or     BYTE PTR [edx-0x59],cl
  409e12:	mov    dh,0x6d
  409e14:	cmp    BYTE PTR [edi],0x67
  409e17:	inc    esi
  409e18:	int3   
  409e19:	mov    ?,WORD PTR [ecx]
  409e1b:	pop    edi
  409e1c:	or     al,0xd2
  409e1e:	jne    0x409e16
  409e20:	mov    al,ds:0xc7e5d95c
  409e25:	neg    BYTE PTR [ecx+0x6f7a5a9a]
  409e2b:	cdq    
  409e2c:	into   
  409e2d:	sbb    al,BYTE PTR [eax+0x11900721]
  409e33:	jns    0x409e88
  409e35:	xor    DWORD PTR [edx],edx
  409e37:	loope  0x409e7f
  409e39:	ins    DWORD PTR es:[edi],dx
  409e3a:	xchg   edi,eax
  409e3b:	sar    BYTE PTR [ebx+ebx*8],1
  409e3e:	addr16 aas 
  409e40:	loop   0x409e10
  409e42:	inc    edi
  409e43:	sub    bl,BYTE PTR [edi+0x6d]
  409e46:	inc    eax
  409e47:	rcl    DWORD PTR [ecx],1
  409e49:	into   
  409e4a:	stos   DWORD PTR es:[edi],eax
  409e4b:	iret   
  409e4c:	push   cs
  409e4d:	xchg   ebp,eax
  409e4e:	cmp    DWORD PTR [ebx-0x2f60c89e],edi
  409e54:	das    
  409e55:	stos   BYTE PTR es:[edi],al
  409e56:	out    dx,al
  409e57:	mov    ah,BYTE PTR [ebx+eax*4+0x58394850]
  409e5e:	fwait
  409e5f:	add    dl,ch
  409e61:	out    0x5,al
  409e63:	test   BYTE PTR [edx+0x266f7a90],0x4d
  409e6a:	jp     0x409e98
  409e6c:	jg     0x409e18
  409e6e:	pop    ebp
  409e6f:	fidiv  WORD PTR [ecx]
  409e71:	stos   DWORD PTR es:[edi],eax
  409e72:	mov    edi,0x6edfe56c
  409e77:	jecxz  0x409ea1
  409e79:	jmp    0xf487:0xe4f77ea4
  409e80:	pop    es
  409e81:	fnstsw WORD PTR [edx+eax*8-0x702660e0]
  409e88:	call   DWORD PTR [edi+0x3b12082b]
  409e8e:	pop    eax
  409e8f:	addr16 clc 
  409e91:	lods   al,BYTE PTR ds:[esi]
  409e92:	sub    ch,0xd0
  409e95:	fstp   DWORD PTR [ebx+0x50]
  409e98:	xchg   ebx,eax
  409e99:	fwait
  409e9a:	mov    eax,0xc8e19b42
  409e9f:	xor    DWORD PTR [ebp+0xe],esp
  409ea2:	push   ss
  409ea3:	adc    DWORD PTR [esi+ecx*1],ebx
  409ea6:	inc    esp
  409ea7:	sbb    eax,0x9cb2545
  409eac:	sbb    al,0x9f
  409eae:	test   DWORD PTR [ebp-0x33],esp
  409eb1:	cdq    
  409eb2:	xchg   ebx,eax
  409eb3:	(bad)
  409eb6:	xor    al,0xff
  409eb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409eb9:	mov    al,0xa9
  409ebb:	ins    DWORD PTR es:[edi],dx
  409ebc:	push   ss
  409ebd:	mov    cl,0x3d
  409ebf:	loop   0x409ef0
  409ec1:	xchg   ebp,eax
  409ec2:	in     al,dx
  409ec3:	sbb    BYTE PTR [edx],dl
  409ec5:	dec    ebx
  409ec6:	mov    esp,0xf621135a
  409ecb:	in     eax,0x7c
  409ecd:	loope  0x409e67
  409ecf:	(bad)  
  409ed1:	loopne 0x409ea8
  409ed3:	or     al,0xe1
  409ed5:	jne    0x409e6f
  409ed7:	not    dl
  409ed9:	adc    DWORD PTR cs:[ecx],ebp
  409edc:	adc    WORD PTR [esi],bp
  409edf:	add    eax,0x4138e8a6
  409ee4:	mov    ebp,0x27bd36c
  409ee9:	mov    cl,0x8e
  409eeb:	mov    ss,WORD PTR es:[ecx+0x103e5329]
  409ef2:	xchg   ebx,eax
  409ef3:	pop    edx
  409ef4:	stos   BYTE PTR es:[edi],al
  409ef5:	mov    edx,DWORD PTR [edi-0x2f]
  409ef8:	jnp    0x409f73
  409efa:	bound  esi,QWORD PTR [esi-0x411f352]
  409f00:	add    ecx,DWORD PTR [ebp-0x5]
  409f03:	ret    
  409f04:	dec    esp
  409f05:	out    0x38,eax
  409f07:	push   ebp
  409f08:	out    dx,eax
  409f09:	sbb    eax,0x21b992a8
  409f0e:	mov    ecx,0xf17ba4d8
  409f13:	daa    
  409f14:	push   cs
  409f15:	xor    al,0x33
  409f17:	xchg   esi,eax
  409f18:	dec    edi
  409f19:	clc    
  409f1a:	enter  0x86f9,0x41
  409f1e:	retf   
  409f1f:	push   0xfffffff2
  409f21:	push   ebp
  409f22:	push   ds
  409f23:	or     al,0x93
  409f25:	dec    esi
  409f26:	pop    eax
  409f27:	sbb    ebp,DWORD PTR [ebp-0x21]
  409f2a:	jmp    0xd490e3e3
  409f2f:	add    al,bh
  409f31:	mov    cs,esp
  409f33:	ror    DWORD PTR [ebp-0xe],1
  409f36:	or     al,0xdd
  409f38:	pop    ecx
  409f39:	pop    ecx
  409f3a:	pop    esi
  409f3b:	push   edx
  409f3c:	inc    edx
  409f3d:	pop    es
  409f3e:	or     al,0xfd
  409f40:	or     BYTE PTR ds:0xdf1ffb04,ah
  409f46:	inc    edi
  409f47:	xchg   ebp,eax
  409f48:	aas    
  409f49:	pop    edx
  409f4a:	out    dx,al
  409f4b:	mov    al,ds:0x4a07208
  409f50:	(bad)  
  409f52:	(bad)  
  409f54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f55:	pop    es
  409f56:	(bad)  
  409f57:	mov    edx,0x6812d9b2
  409f5c:	cmp    eax,DWORD PTR [ebx]
  409f5e:	es push esi
  409f60:	sahf   
  409f61:	js     0x409fca
  409f63:	mov    ah,0x6c
  409f65:	mov    ebx,0xcc9f3929
  409f6a:	dec    ebp
  409f6b:	mov    al,ds:0xe578c887
  409f70:	cdq    
  409f71:	jbe    0x409f2b
  409f73:	out    0xf,eax
  409f75:	and    ecx,ecx
  409f77:	sbb    BYTE PTR [esp+ebx*8+0x54],bl
  409f7b:	or     edx,DWORD PTR [edi+ebx*8+0x16186cc1]
  409f82:	or     BYTE PTR [eax+0x20ee2295],0x60
  409f89:	xor    BYTE PTR [ebx-0x68fd3588],bl
  409f8f:	mov    bl,0xdb
  409f91:	sub    DWORD PTR [edx],esi
  409f93:	shufps xmm3,XMMWORD PTR [eax-0x32],0x74
  409f98:	mov    dl,BYTE PTR [edi+0x65ead57]
  409f9e:	jnp    0x409fd2
  409fa0:	retfw  
  409fa2:	popa   
  409fa3:	test   ax,0x5cd5
  409fa7:	aas    
  409fa8:	data16 shl BYTE PTR [edx],1
  409fab:	cdq    
  409fac:	jge    0x409fd1
  409fae:	repnz pop ecx
  409fb0:	mov    ds:0xec944912,eax
  409fb5:	into   
  409fb6:	jnp    0x409fbd
  409fb8:	sar    BYTE PTR [ebp+0x4c],1
  409fbb:	pcmpeqw mm0,QWORD PTR [edi+ecx*4+0x75]
  409fc0:	pop    ds
  409fc1:	pop    eax
  409fc2:	loope  0x409f7b
  409fc4:	and    ebp,DWORD PTR [edi+0x71]
  409fc7:	adc    dh,BYTE PTR [edx-0x13]
  409fca:	out    0xd,al
  409fcc:	push   0x6b
  409fce:	mov    edi,0x9cb28d21
  409fd3:	ja     0x409fba
  409fd5:	mov    bl,0x35
  409fd7:	and    eax,0x66ff3a2
  409fdc:	hlt    
  409fdd:	repnz xchg esi,eax
  409fdf:	adc    edi,ebx
  409fe1:	ds or  esp,ebx
  409fe4:	sbb    al,0x68
  409fe6:	bnd ja 0x40a034
  409fe9:	inc    ebx
  409fea:	jl     0x40a01b
  409fec:	aaa    
  409fed:	(bad)  
  409fee:	(bad)  
  409fef:	shl    BYTE PTR [ebx+esi*8-0x5aa8ee1a],1
  409ff6:	xchg   BYTE PTR [ebx-0x482fb7dc],al
  409ffc:	sub    ah,bh
  409ffe:	dec    edi
  409fff:	lods   eax,DWORD PTR ds:[esi]
  40a000:	push   edi
  40a001:	fst    st(2)
  40a003:	clc    
  40a004:	sub    eax,0x942c40a9
  40a009:	nop
  40a00a:	test   BYTE PTR [ebx],ah
  40a00c:	div    BYTE PTR [ebx+0x4b]
  40a00f:	aad    0xbf
  40a011:	(bad)  
  40a013:	aam    0x7b
  40a015:	or     al,0x38
  40a017:	retf   
  40a018:	out    0x15,eax
  40a01a:	mov    edi,0x1bd3eb7d
  40a01f:	sbb    BYTE PTR [ebp-0x35d095f3],dh
  40a025:	push   es
  40a026:	sub    eax,DWORD PTR [esp-0x71]
  40a02a:	and    al,0x79
  40a02c:	mov    cl,0x6f
  40a02e:	pop    edx
  40a02f:	(bad)  
  40a032:	sub    al,0x6e
  40a034:	aaa    
  40a035:	pop    es
  40a036:	push   edi
  40a037:	scas   al,BYTE PTR es:[edi]
  40a038:	fs ins BYTE PTR es:[edi],dx
  40a03a:	pop    esp
  40a03b:	adc    DWORD PTR [edi+0x43],eax
  40a03e:	rcl    BYTE PTR [esp+ebp*8-0x737eaa51],0x8e
  40a046:	int    0x1f
  40a048:	lahf   
  40a049:	(bad)  
  40a04a:	aas    
  40a04b:	je     0x409fd0
  40a04d:	cmp    BYTE PTR [ebx-0x49],ch
  40a050:	out    0x2a,al
  40a052:	in     eax,0x62
  40a054:	daa    
  40a055:	ret    0x1148
  40a058:	mov    edx,DWORD PTR [ebx-0x7c4516a7]
  40a05e:	mov    edi,0xdb335b17
  40a063:	cmp    eax,0xf31cd097
  40a068:	xchg   DWORD PTR [ebx+0x33],edx
  40a06b:	ret    
  40a06c:	lds    esp,FWORD PTR [ebp-0x16]
  40a06f:	mov    edi,0xfa7b67f8
  40a074:	mov    edx,0xcf0809ed
  40a079:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a07a:	xchg   esp,eax
  40a07b:	sbb    BYTE PTR [eax-0x339610b1],cl
  40a081:	xor    BYTE PTR [ebx],ch
  40a083:	sbb    eax,edi
  40a085:	hlt    
  40a086:	jno    0x40a008
  40a088:	dec    eax
  40a089:	test   eax,0x54ff387b
  40a08e:	jo     0x40a0ec
  40a090:	loopne 0x40a082
  40a092:	mov    dh,0x2c
  40a094:	pusha  
  40a095:	out    dx,eax
  40a096:	or     eax,0xe0ce167d
  40a09b:	fst    QWORD PTR [ebp+0x16517a71]
  40a0a1:	retf   0x83eb
  40a0a4:	xchg   ecx,eax
  40a0a6:	loop   0x40a0d3
  40a0a8:	xchg   ebp,eax
  40a0a9:	ror    al,cl
  40a0ab:	addr16 jae 0x40a093
  40a0ae:	jmp    0xc05bfbda
  40a0b3:	imul   esp,DWORD PTR [edx+0x63],0x6
  40a0b7:	(bad)  
  40a0b8:	adc    DWORD PTR [eax-0x29],eax
  40a0bb:	dec    ecx
  40a0bc:	lock fiadd WORD PTR [esi]
  40a0bf:	(bad)  
  40a0c0:	(bad)  
  40a0c2:	inc    ebp
  40a0c3:	pop    ds
  40a0c4:	fdiv   st,st(7)
  40a0c6:	iret   
  40a0c7:	out    0xec,eax
  40a0c9:	jecxz  0x40a058
  40a0cb:	mov    bl,0x82
  40a0cd:	fiadd  WORD PTR [ecx]
  40a0cf:	or     al,0xc5
  40a0d1:	repz out 0x7b,al
  40a0d4:	das    
  40a0d5:	sar    BYTE PTR [ebx+edi*4+0x2e],1
  40a0d9:	add    DWORD PTR [ebx-0x48f9f7c6],0xc0520be1
  40a0e3:	mov    dl,0x23
  40a0e5:	dec    ecx
  40a0e6:	je     0x40a110
  40a0e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a0e9:	fs fst st(5)
  40a0ec:	mov    dl,0x8a
  40a0ee:	es mov ch,dl
  40a0f1:	(bad)  
  40a0f2:	jae    0x40a163
  40a0f4:	xchg   esi,eax
  40a0f5:	xchg   ebx,eax
  40a0f6:	stos   BYTE PTR es:[edi],al
  40a0f7:	pusha  
  40a0f8:	scas   eax,DWORD PTR es:[edi]
  40a0f9:	xchg   BYTE PTR [eax],ah
  40a0fb:	dec    edx
  40a0fc:	rcl    edx,cl
  40a0fe:	frstor [eax]
  40a100:	push   ss
  40a101:	scas   al,BYTE PTR es:[edi]
  40a102:	add    dl,bh
  40a104:	or     eax,0xca1c2478
  40a109:	aam    0x4d
  40a10b:	std    
  40a10c:	jmp    0x43df379e
  40a111:	pop    edi
  40a112:	mov    dl,ch
  40a114:	or     al,0x25
  40a116:	sbb    al,0x8f
  40a118:	addr16 push edx
  40a11a:	aas    
  40a11b:	cld    
  40a11c:	outs   dx,BYTE PTR ds:[esi]
  40a11d:	loopne 0x40a175
  40a11f:	pop    ecx
  40a120:	xchg   edi,eax
  40a121:	add    BYTE PTR [ebx-0x29],dl
  40a124:	enter  0xfcb,0x25
  40a128:	sbb    bl,BYTE PTR [ebx]
  40a12a:	gs out 0x62,al
  40a12d:	mov    esi,0xca51c165
  40a132:	in     al,0xed
  40a134:	cmp    eax,0xcadd3501
  40a139:	data16 test bl,0x8b
  40a13d:	lds    edi,FWORD PTR [edx-0x1e41c5d8]
  40a143:	enter  0xf4e4,0x12
  40a147:	lock fcmovu st,st(1)
  40a14a:	dec    esp
  40a14b:	imul   edi,DWORD PTR [edi-0x39],0xd4e540d4
  40a152:	inc    edx
  40a153:	dec    edx
  40a154:	cmp    ebp,DWORD PTR ds:0x55e8a366
  40a15a:	scas   eax,DWORD PTR es:[edi]
  40a15b:	retf   
  40a15c:	in     al,dx
  40a15d:	mov    ss,esp
  40a15f:	pop    ecx
  40a160:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a161:	ret    0x4215
  40a164:	push   ebx
  40a165:	mov    esp,0x9f0f621b
  40a16a:	jae    0x40a0f0
  40a16c:	jmp    0xa9fcec98
  40a171:	rcr    BYTE PTR [edx],1
  40a173:	pop    edx
  40a174:	mov    bl,BYTE PTR [eax-0x72]
  40a177:	rol    DWORD PTR [edi],0x39
  40a17a:	leave  
  40a17b:	data16 hlt 
  40a17d:	xor    al,BYTE PTR [esi]
  40a17f:	mov    ah,BYTE PTR [edx-0x74]
  40a182:	dec    ebx
  40a183:	pop    ds
  40a184:	lods   al,BYTE PTR ds:[esi]
  40a185:	mov    ah,0x64
  40a187:	sbb    eax,0xf454b139
  40a18c:	pop    edx
  40a18d:	cmp    DWORD PTR [edx],esp
  40a18f:	outs   dx,DWORD PTR ds:[esi]
  40a190:	ret    0xaf6
  40a193:	mov    ebp,0x95788b6
  40a198:	pusha  
  40a199:	pop    ebp
  40a19a:	jae    0x40a13b
  40a19c:	imul   edx,DWORD PTR [ebp-0x24],0x4a
  40a1a0:	pop    edx
  40a1a1:	xor    al,0x9
  40a1a3:	pop    edx
  40a1a4:	fsubr  QWORD PTR [edx-0x61]
  40a1a7:	mov    ds,WORD PTR [esi+0x2a862064]
  40a1ad:	mov    edi,0x1a28a4c
  40a1b2:	sar    DWORD PTR [esi-0x572ffb94],cl
  40a1b8:	cli    
  40a1b9:	stos   DWORD PTR es:[edi],eax
  40a1ba:	scas   eax,DWORD PTR es:[edi]
  40a1bb:	rcl    bh,cl
  40a1bd:	xchg   ebx,eax
  40a1be:	leave  
  40a1bf:	inc    ecx
  40a1c0:	sbb    esi,DWORD PTR [edx+0x113525b5]
  40a1c6:	xchg   ecx,eax
  40a1c7:	fwait
  40a1c8:	sub    ch,cl
  40a1ca:	idiv   BYTE PTR [edx]
  40a1cc:	shl    ecx,1
  40a1ce:	inc    ecx
  40a1cf:	xor    ebp,ecx
  40a1d1:	stos   DWORD PTR es:[edi],eax
  40a1d2:	je     0x40a215
  40a1d4:	cmc    
  40a1d5:	or     al,0xc9
  40a1d7:	call   0x12848bd9
  40a1dc:	inc    eax
  40a1dd:	in     al,0x55
  40a1df:	in     eax,dx
  40a1e0:	jg     0x40a203
  40a1e2:	retf   
  40a1e3:	inc    edi
  40a1e4:	pusha  
  40a1e5:	or     cl,BYTE PTR [ecx-0x15b0c45b]
  40a1eb:	out    dx,eax
  40a1ec:	mov    dh,0xe0
  40a1ee:	into   
  40a1ef:	bound  esi,QWORD PTR [ebx-0x1b5871a]
  40a1f5:	in     al,0x23
  40a1f7:	repz mov ebx,0x5af9ab5e
  40a1fd:	lock sbb eax,0xbcf7ca49
  40a203:	dec    esp
  40a204:	pusha  
  40a205:	dec    eax
  40a206:	fpatan 
  40a208:	pop    ebp
  40a209:	fwait
  40a20a:	mov    eax,0x3b5bc0a0
  40a20f:	js     0x40a216
  40a211:	inc    ebp
  40a212:	(bad)  ds:0xf85bcc87
  40a218:	jmp    0x40a1d0
  40a21a:	mov    esi,0x4e2fea24
  40a21f:	jae    0x40a1bd
  40a221:	rol    BYTE PTR [esi+esi*4],cl
  40a224:	dec    edx
  40a225:	mov    ds,WORD PTR [ecx+0x365e4a7b]
  40a22b:	cwde   
  40a22c:	repz std 
  40a22e:	jl     0x40a1fa
  40a230:	jmp    0x40a23a
  40a232:	fmulp  st(0),st
  40a234:	pushf  
  40a235:	mov    edx,0xa99509de
  40a23a:	dec    ebp
  40a23b:	mov    WORD PTR es:[ebp+0x5d],cs
  40a23f:	jle    0x40a2a3
  40a241:	xrelease mov BYTE PTR [esi],bh
  40a244:	bound  ebx,QWORD PTR [ebx]
  40a246:	pop    edx
  40a247:	das    
  40a248:	cmp    edi,DWORD PTR [edi+0x18302236]
  40a24e:	mov    al,0x34
  40a250:	fadd   DWORD PTR [ebp-0x37f0b8f6]
  40a256:	fnstenv [eax+0x67b66996]
  40a25c:	inc    esp
  40a25d:	jl     0x40a228
  40a25f:	dec    eax
  40a260:	sbb    dh,BYTE PTR [edx-0x5a]
  40a263:	cmp    al,0xa7
  40a265:	sub    BYTE PTR [edi+ebx*8-0xd],ch
  40a269:	out    0xf9,eax
  40a26b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a26c:	retf   
  40a26d:	xchg   ebx,eax
  40a26e:	mov    ebp,0xff4218ea
  40a273:	pop    ebp
  40a274:	call   0xf177:0x26b9f6c4
  40a27b:	adc    al,0x5
  40a27d:	ja     0x40a25f
  40a27f:	(bad)  
  40a281:	or     esp,esp
  40a283:	dec    edi
  40a284:	cs ins DWORD PTR es:[edi],dx
  40a286:	push   edi
  40a287:	test   al,0xa
  40a289:	sub    DWORD PTR [eax-0x14fbe23d],0x38
  40a290:	addr16 fst st(2)
  40a293:	pop    es
  40a294:	arpl   WORD PTR [ebp-0x5178765b],di
  40a29a:	xor    ebx,0x5a474b0e
  40a2a0:	bound  ebp,QWORD PTR [eax+0x7]
  40a2a3:	jg     0x40a237
  40a2a5:	xchg   edx,ecx
  40a2a7:	dec    eax
  40a2a8:	sub    DWORD PTR [esi+0x5cd0a35a],esp
  40a2ae:	mov    di,0x3ea6
  40a2b2:	fistp  QWORD PTR [ebp-0x72ad061e]
  40a2b8:	(bad)  
  40a2b9:	stos   DWORD PTR es:[edi],eax
  40a2ba:	sub    BYTE PTR [ebp+0x25],ah
  40a2bd:	aaa    
  40a2be:	cmp    al,0x2c
  40a2c0:	xor    bh,BYTE PTR [ebx+0x3]
  40a2c3:	mov    BYTE PTR [ebp+0x4c316ad3],0xab
  40a2ca:	repz cs dec edx
  40a2cd:	fwait
  40a2ce:	imul   eax,edx,0xaa1b5ad
  40a2d4:	sbb    esi,DWORD PTR [eax+0x379c67a]
  40a2da:	sahf   
  40a2db:	dec    edi
  40a2dc:	aam    0x2e
  40a2de:	and    ecx,DWORD PTR [ebx]
  40a2e0:	mov    ecx,0x52b57850
  40a2e5:	lds    ecx,FWORD PTR [edi+0x13]
  40a2e8:	out    0xe5,eax
  40a2ea:	xor    DWORD PTR [edi-0x17],esi
  40a2ed:	(bad)  
  40a2ee:	mov    bh,0x82
  40a2f0:	lods   al,BYTE PTR ds:[esi]
  40a2f1:	sbb    DWORD PTR [ecx],ebx
  40a2f3:	in     al,dx
  40a2f4:	not    DWORD PTR [eax+0x2b]
  40a2f7:	pop    esi
  40a2f8:	pop    esi
  40a2f9:	add    DWORD PTR [ebp-0x178318b0],0xffffffc9
  40a300:	pop    ecx
  40a301:	popf   
  40a302:	sti    
  40a303:	ja     0x40a30d
  40a305:	and    al,0x75
  40a307:	shr    DWORD PTR [edi+0x351a600a],1
  40a30d:	pop    ecx
  40a30e:	pop    ebx
  40a30f:	or     BYTE PTR [eax-0x5f6317cc],0xc3
  40a316:	mov    ds:0x6bb68a01,eax
  40a31b:	(bad)  
  40a31c:	mov    ch,0x70
  40a31e:	jecxz  0x40a325
  40a320:	pop    esp
  40a321:	pusha  
  40a322:	or     DWORD PTR [eax-0x54812007],edi
  40a328:	pop    esp
  40a329:	or     esp,DWORD PTR es:[edi+0x33661826]
  40a330:	cdq    
  40a331:	adc    DWORD PTR [ebx+ebp*1+0x4ab08b0a],0x5b0dfbc6
  40a33c:	or     eax,0x69b16496
  40a341:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a342:	inc    edi
  40a343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a344:	cdq    
  40a345:	sub    BYTE PTR [edx+edi*1+0xd5962b7],dh
  40a34c:	sub    al,0x46
  40a34e:	and    ecx,edi
  40a350:	cmp    bl,al
  40a352:	test   eax,0xf8a0993e
  40a357:	adc    DWORD PTR [edi+0x50],0xffffffe7
  40a35b:	dec    ebx
  40a35c:	icebp  
  40a35d:	and    esp,DWORD PTR [esi+0x655941ac]
  40a363:	stos   BYTE PTR es:[edi],al
  40a364:	push   esp
  40a365:	jne    0x40a2e8
  40a367:	das    
  40a368:	xor    BYTE PTR [ebx],bl
  40a36a:	mov    edx,0x3ad84efb
  40a36f:	push   esi
  40a370:	imul   ebp,DWORD PTR ds:0xfca9e780,0x24
  40a377:	mov    ecx,0x29e3e9b2
  40a37c:	das    
  40a37d:	or     BYTE PTR [edx-0x106c11b3],0x55
  40a384:	popf   
  40a385:	push   esp
  40a386:	outs   dx,BYTE PTR ds:[esi]
  40a387:	pop    ebx
  40a388:	daa    
  40a389:	push   0xe8264773
  40a38e:	hlt    
  40a38f:	cmc    
  40a390:	les    ebp,FWORD PTR [edi+ebp*2]
  40a393:	stos   DWORD PTR es:[edi],eax
  40a394:	stc    
  40a395:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a396:	fst    DWORD PTR [ebx-0x72]
  40a399:	sub    DWORD PTR [ecx-0x20],0x4f
  40a39d:	inc    esi
  40a39e:	outs   dx,DWORD PTR ds:[esi]
  40a39f:	cmp    BYTE PTR [ecx+0xb],dh
  40a3a2:	adc    al,0xeb
  40a3a4:	cmp    ebp,DWORD PTR [edx-0x36]
  40a3a7:	fidivr WORD PTR [ebx+0x53359950]
  40a3ad:	repz or BYTE PTR [edi+0x13],dl
  40a3b1:	adc    ebx,edi
  40a3b3:	dec    edi
  40a3b4:	cmc    
  40a3b5:	scas   eax,DWORD PTR es:[edi]
  40a3b6:	imul   esi,DWORD PTR [ebx-0x38],0x4893db64
  40a3bd:	pop    ecx
  40a3be:	push   esp
  40a3bf:	push   ecx
  40a3c0:	dec    edx
  40a3c1:	scas   al,BYTE PTR es:[edi]
  40a3c2:	idiv   BYTE PTR [ebp-0x605e72a6]
  40a3c8:	sbb    BYTE PTR [esi+0x59],al
  40a3cb:	lea    ebp,[eax]
  40a3cd:	mov    ds:0x355792bb,al
  40a3d2:	mov    ebp,0xbc86f872
  40a3d7:	cmp    BYTE PTR [ebp+0x66b63c1d],al
  40a3dd:	ins    BYTE PTR es:[edi],dx
  40a3de:	leave  
  40a3df:	fs icebp 
  40a3e1:	fwait
  40a3e2:	push   esp
  40a3e3:	lods   eax,DWORD PTR ds:[esi]
  40a3e4:	mov    bh,0xd6
  40a3e6:	fucomp st(3)
  40a3e8:	sub    DWORD PTR ss:[ebx],edx
  40a3eb:	fcom   DWORD PTR [ebx]
  40a3ed:	ins    DWORD PTR es:[edi],dx
  40a3ee:	fsubr  st,st(5)
  40a3f0:	(bad)  [esi-0x3fec1184]
  40a3f6:	mov    dh,0x3a
  40a3f8:	leave  
  40a3f9:	and    al,0x88
  40a3fb:	shr    BYTE PTR [ebx],1
  40a3fd:	retf   
  40a3fe:	test   DWORD PTR [ebp+0x55ce8987],0x14740650
  40a408:	or     dl,BYTE PTR [esi+0x63]
  40a40b:	lea    edx,[esi+0x229fa262]
  40a411:	fwait
  40a412:	sahf   
  40a413:	jns    0x40a398
  40a415:	inc    ecx
  40a416:	test   eax,0x72b6d078
  40a41b:	ins    DWORD PTR es:[edi],dx
  40a41c:	jge    0x40a404
  40a41e:	adc    ah,bh
  40a420:	mov    esp,0xc685119a
  40a425:	sub    eax,0x7b1bbbb4
  40a42a:	test   DWORD PTR [edx],ebp
  40a42c:	aas    
  40a42d:	inc    eax
  40a42e:	xor    esi,eax
  40a430:	pusha  
  40a431:	dec    ebp
  40a432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a433:	repz retf 0x94f6
  40a437:	enter  0x342c,0x67
  40a43b:	dec    esi
  40a43c:	rcr    BYTE PTR [edi+0x12],cl
  40a43f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a440:	icebp  
  40a441:	add    al,0xf8
  40a443:	inc    edx
  40a444:	dec    ecx
  40a445:	popa   
  40a446:	dec    esi
  40a447:	dec    edi
  40a448:	jno    0x40a406
  40a44a:	jae    0x40a427
  40a44c:	(bad)  
  40a44d:	stc    
  40a44e:	dec    esi
  40a44f:	inc    edx
  40a450:	jae    0x40a4b7
  40a452:	lods   al,BYTE PTR ds:[esi]
  40a453:	sub    ecx,ebp
  40a455:	ja     0x40a45c
  40a457:	hlt    
  40a458:	repnz imul edx,DWORD PTR [esi+eiz*4+0x2ae61464],0xffffff9f
  40a461:	dec    ebx
  40a462:	repz xor ch,BYTE PTR [edi+0x509e1efb]
  40a469:	jbe    0x40a455
  40a46b:	popf   
  40a46c:	aad    0x55
  40a46e:	es scas al,BYTE PTR es:[edi]
  40a470:	jmp    0x16bb41da
  40a475:	inc    eax
  40a476:	fidiv  DWORD PTR [ecx-0x5b]
  40a479:	jmp    0x40a462
  40a47b:	inc    esp
  40a47d:	fldenv [edi-0x60]
  40a480:	or     eax,0x4440e1b
  40a485:	icebp  
  40a486:	js     0x40a4aa
  40a488:	dec    sp
  40a48a:	mov    dl,0x5a
  40a48c:	aam    0x24
  40a48e:	fstp   TBYTE PTR [ebx+0x3e]
  40a491:	jmp    FWORD PTR [edi-0x1f]
  40a494:	sbb    ah,ah
  40a496:	data16 sbb ah,BYTE PTR [eax]
  40a499:	call   0xa409fe22
  40a49e:	lds    edi,FWORD PTR [ebx+ecx*1]
  40a4a1:	nop
  40a4a2:	fild   WORD PTR ds:0xd0e0389b
  40a4a8:	retf   
  40a4a9:	mov    esp,0x596748cb
  40a4ae:	jl     0x40a43f
  40a4b0:	sbb    edi,esp
  40a4b2:	(bad)  
  40a4b3:	in     eax,dx
  40a4b4:	ins    BYTE PTR es:[edi],dx
  40a4b5:	push   es
  40a4b6:	ds out 0x82,eax
  40a4b9:	xchg   edx,eax
  40a4ba:	dec    ecx
  40a4bb:	loopne 0x40a4ab
  40a4bd:	pop    eax
  40a4be:	retf   0x8a29
  40a4c1:	shl    BYTE PTR [esi+ecx*8],1
  40a4c4:	or     BYTE PTR ds:0xb7b66378,dh
  40a4ca:	mov    bh,0x4e
  40a4cc:	adc    al,bl
  40a4ce:	mov    DWORD PTR [edi],esi
  40a4d0:	sub    esp,ebp
  40a4d2:	pop    edi
  40a4d3:	sub    eax,DWORD PTR [edi-0x73299f2b]
  40a4d9:	push   ss
  40a4da:	mov    ebx,0xb5692df3
  40a4df:	mov    eax,0xe485d0ba
  40a4e4:	mov    ebp,0x8fa23
  40a4e9:	out    dx,eax
  40a4ea:	loop   0x40a46f
  40a4ec:	scas   eax,DWORD PTR es:[edi]
  40a4ed:	retf   
  40a4ee:	inc    BYTE PTR ds:0x1d9d723e
  40a4f4:	inc    esi
  40a4f5:	jmp    0x5fc6:0xd293437b
  40a4fc:	int3   
  40a4fd:	fst    st(7)
  40a4ff:	xchg   BYTE PTR [ecx+0x3a196ac3],ch
  40a505:	jge    0x40a50b
  40a507:	sbb    BYTE PTR [esp+ecx*8-0x1a],0x2f
  40a50c:	jg     0x40a4c7
  40a50e:	ror    BYTE PTR [edx+edi*8-0x7bd1de4],0xad
  40a516:	mov    BYTE PTR [edx-0x2d],ah
  40a519:	push   edi
  40a51a:	jmp    0x40a572
  40a51c:	jecxz  0x40a58e
  40a51e:	xchg   ebx,eax
  40a51f:	clc    
  40a520:	add    al,0x5c
  40a522:	xchg   DWORD PTR [esi+ebx*4+0x47],esi
  40a526:	and    BYTE PTR [eax-0x6c],dl
  40a529:	retf   
  40a52a:	push   ebp
  40a52b:	xchg   esp,eax
  40a52c:	mov    dl,0xc7
  40a52e:	lods   al,BYTE PTR ds:[esi]
  40a52f:	jp     0x40a511
  40a531:	ins    BYTE PTR es:[edi],dx
  40a532:	sub    bl,BYTE PTR [eax+0x1eb470ea]
  40a538:	(bad)  
  40a539:	xchg   esi,eax
  40a53a:	sbb    BYTE PTR [ecx-0x34],bh
  40a53d:	jnp    0x40a4d0
  40a53f:	xor    edx,DWORD PTR [ebp-0x4118501e]
  40a545:	pop    ecx
  40a546:	adc    ebp,0x56
  40a549:	sbb    BYTE PTR [esi-0x2e9f6993],cl
  40a54f:	cwde   
  40a550:	cli    
  40a551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a552:	mov    WORD PTR [ebp+0x76b9295a],cs
  40a558:	nop
  40a559:	clc    
  40a55a:	xor    BYTE PTR [ebx+eax*8-0x483f806a],al
  40a561:	pop    ds
  40a562:	inc    ebp
  40a563:	lods   al,BYTE PTR ds:[esi]
  40a564:	add    DWORD PTR [ebp+0x7b],esi
  40a567:	sub    DWORD PTR [eax-0x20],esi
  40a56a:	int    0x76
  40a56c:	call   0x1ce16df4
  40a571:	xor    BYTE PTR [ecx+eiz*2-0x4fa95b64],dl
  40a578:	add    eax,0xb61741dc
  40a57d:	scas   al,BYTE PTR es:[edi]
  40a57e:	mov    es,WORD PTR [esi]
  40a580:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a581:	lock or esi,DWORD PTR [ebx]
  40a584:	and    dl,BYTE PTR [edx+0x5e]
  40a587:	jbe    0x40a5ff
  40a589:	out    0x74,al
  40a58b:	lods   al,BYTE PTR ds:[esi]
  40a58c:	lahf   
  40a58d:	mov    ebx,0xbc80c54f
  40a592:	and    ebp,DWORD PTR [ebp-0x17]
  40a595:	in     eax,0x4e
  40a597:	push   ebp
  40a598:	adc    BYTE PTR [ebx],bl
  40a59a:	mov    BYTE PTR [edi-0x705ec290],al
  40a5a0:	imul   ebx,esi,0xd49aba6
  40a5a6:	mov    esi,0x9054e921
  40a5ab:	pop    esp
  40a5ac:	add    esi,edx
  40a5ae:	add    BYTE PTR [esi],ah
  40a5b0:	mov    eax,0x5dccad6
  40a5b5:	push   0x7a
  40a5b7:	mov    esp,DWORD PTR [ebx-0x23]
  40a5ba:	xchg   edi,eax
  40a5bb:	lods   al,BYTE PTR ds:[esi]
  40a5bc:	mov    ch,0x3b
  40a5be:	or     esi,DWORD PTR ds:0x36c72a1f
  40a5c4:	dec    edi
  40a5c5:	not    BYTE PTR [ecx+0x1c]
  40a5c8:	ja     0x40a5fc
  40a5ca:	or     DWORD PTR [eax],0xb056099a
  40a5d0:	es mov ecx,0x4e37ca46
  40a5d6:	jbe    0x40a63e
  40a5d8:	lds    edx,FWORD PTR [esi+0x2c]
  40a5db:	cwde   
  40a5dc:	dec    ebp
  40a5dd:	mov    al,0xd8
  40a5df:	push   eax
  40a5e0:	lods   al,BYTE PTR ds:[esi]
  40a5e1:	pushf  
  40a5e2:	in     al,0x39
  40a5e4:	clc    
  40a5e5:	xor    BYTE PTR [edi],dh
  40a5e7:	sti    
  40a5e8:	xchg   BYTE PTR [esi+ecx*8+0xf],ch
  40a5ec:	cmp    al,0xd3
  40a5ee:	ret    
  40a5ef:	lahf   
  40a5f0:	pop    ebp
  40a5f1:	jmp    0x40a669
  40a5f3:	pop    es
  40a5f4:	sbb    esp,ebp
  40a5f6:	arpl   bx,sp
  40a5f8:	jno    0x40a586
  40a5fa:	leave  
  40a5fb:	shr    DWORD PTR [ecx-0x3b286d7d],cl
  40a601:	add    esp,DWORD PTR [edx-0x5983ee74]
  40a607:	or     al,0xfd
  40a609:	or     eax,0x7398e036
  40a60e:	jl     0x40a5f5
  40a610:	mov    BYTE PTR [edi],bl
  40a612:	adc    al,0x5
  40a614:	ja     0x40a5c6
  40a616:	mov    gs,WORD PTR [ebx]
  40a618:	out    0x4a,al
  40a61a:	bound  ebp,QWORD PTR ds:0x7d359958
  40a620:	jecxz  0x40a5fc
  40a622:	xor    BYTE PTR [edi],0xdd
  40a625:	outs   dx,BYTE PTR ds:[esi]
  40a626:	pop    eax
  40a627:	push   edx
  40a628:	jo     0x40a669
  40a62a:	cmp    BYTE PTR [edx+eax*4],ch
  40a62d:	add    DWORD PTR [esi-0x7df4f6a7],esi
  40a633:	rcr    DWORD PTR [ebx-0x21485a83],cl
  40a639:	data16 xor al,0xaa
  40a63c:	shl    ebx,0xf8
  40a63f:	push   es
  40a640:	pop    es
  40a641:	xor    DWORD PTR [ebx+0x3b],edi
  40a644:	push   ebx
  40a645:	pop    edi
  40a646:	push   0x3346f4bf
  40a64b:	mov    ds:0x3794dcf5,eax
  40a650:	jg     0x40a615
  40a652:	jnp    0x40a675
  40a654:	inc    edi
  40a655:	adc    al,0xc4
  40a657:	jge    0x40a6b7
  40a659:	pop    edx
  40a65a:	dec    esp
  40a65b:	in     al,0xe5
  40a65d:	jbe    0x40a66a
  40a65f:	loopne 0x40a5f7
  40a661:	xor    bh,ch
  40a663:	pop    esi
  40a664:	dec    eax
  40a665:	and    eax,0x21ca24ce
  40a66a:	inc    ecx
  40a66b:	xchg   edi,eax
  40a66c:	not    BYTE PTR [ecx-0x66]
  40a66f:	mov    ah,0x53
  40a671:	lock sbb bh,ah
  40a674:	xchg   edx,eax
  40a675:	cs cld 
  40a677:	je     0x40a693
  40a679:	sub    DWORD PTR [eax],esp
  40a67b:	jg     0x40a6af
  40a67d:	push   es
  40a67e:	stc    
  40a67f:	xchg   ebp,eax
  40a680:	lock inc esp
  40a682:	cs or  ah,bh
  40a685:	test   BYTE PTR [ebp+0x1b],0xee
  40a689:	and    DWORD PTR [edx+0x6e12e0f],ebp
  40a68f:	(bad)  
  40a690:	jne    0x40a6e9
  40a692:	data16 icebp 
  40a694:	dec    esp
  40a695:	test   eax,0x2e4b4d75
  40a69a:	iret   
  40a69b:	pushf  
  40a69c:	mov    ds:0x5abe16e5,eax
  40a6a1:	mov    eax,ds:0xab635976
  40a6a6:	fld    DWORD PTR [esi+0x17]
  40a6a9:	je     0x40a6ad
  40a6ab:	mov    eax,ds:0xea60cec
  40a6b0:	jg     0x40a683
  40a6b2:	cdq    
  40a6b3:	stos   BYTE PTR es:[edi],al
  40a6b4:	(bad)  
  40a6b5:	daa    
  40a6b6:	ins    DWORD PTR es:[edi],dx
  40a6b7:	or     ch,BYTE PTR [edi-0x250f08cd]
  40a6bd:	pop    ecx
  40a6be:	pop    eax
  40a6bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6c0:	adc    BYTE PTR [eax],0x7d
  40a6c3:	pop    es
  40a6c4:	jle    0x40a6a0
  40a6c6:	cdq    
  40a6c7:	xor    edx,edi
  40a6c9:	loopne 0x40a661
  40a6cb:	loope  0x40a711
  40a6cd:	or     al,0x88
  40a6cf:	pushf  
  40a6d0:	repz (bad) 
  40a6d2:	sub    BYTE PTR [ecx],dl
  40a6d4:	outs   dx,BYTE PTR ds:[esi]
  40a6d5:	daa    
  40a6d6:	push   0xb8c94aa4
  40a6db:	jne    0x40a6b3
  40a6dd:	sti    
  40a6de:	mov    ebx,0x2d1a0574
  40a6e3:	sbb    BYTE PTR [di],ch
  40a6e6:	pop    ebx
  40a6e7:	push   es
  40a6e8:	mov    al,0xb0
  40a6ea:	scas   al,BYTE PTR es:[edi]
  40a6eb:	dec    ebx
  40a6ec:	sbb    eax,0xc48edddc
  40a6f1:	jo     0x40a695
  40a6f3:	inc    ebp
  40a6f4:	in     al,0x76
  40a6f6:	mov    edi,0x815f17b1
  40a6fb:	out    dx,al
  40a6fc:	fcom   QWORD PTR [esi-0x55]
  40a6ff:	jbe    0x40a726
  40a701:	and    BYTE PTR [ebx+0x562c5142],0xb3
  40a708:	cmp    al,0x81
  40a70a:	cwde   
  40a70b:	sub    eax,0x3997030c
  40a710:	push   ds
  40a711:	jae    0x40a744
  40a713:	(bad)  
  40a714:	mov    BYTE PTR [esi],al
  40a716:	aad    0x2f
  40a718:	mov    esp,0xeb28890
  40a71d:	sbb    DWORD PTR [ebp-0x114d5ec5],0x6af01575
  40a727:	adc    al,0xdf
  40a729:	enter  0xbc1b,0x81
  40a72d:	in     eax,dx
  40a72e:	sbb    BYTE PTR [edx],ah
  40a730:	repnz cmp dl,BYTE PTR [esi-0x73]
  40a734:	sahf   
  40a735:	cdq    
  40a736:	pop    edx
  40a737:	mov    DWORD PTR [eax],ebx
  40a739:	push   ebp
  40a73a:	mov    esi,0x8c9cff48
  40a73f:	test   BYTE PTR [eax+0x6c5063b6],al
  40a745:	xchg   ecx,eax
  40a746:	jp     0x40a6d4
  40a748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a749:	jbe    0x40a7ae
  40a74b:	out    0x5,eax
  40a74d:	cld    
  40a74e:	or     dl,ah
  40a750:	mov    dh,BYTE PTR [esi]
  40a752:	fwait
  40a753:	mov    BYTE PTR [ebx+0x2f],dh
  40a756:	sbb    al,0x41
  40a758:	retf   
  40a759:	(bad)  
  40a75a:	aam    0xfb
  40a75c:	mov    DWORD PTR [esi+eiz*8+0x5a],edx
  40a760:	scas   eax,DWORD PTR es:[edi]
  40a761:	and    BYTE PTR [ebx+0x6ca48b13],bh
  40a767:	mov    dl,0xd
  40a769:	sub    ch,BYTE PTR [ebx+0x15]
  40a76c:	loop   0x40a7d2
  40a76e:	adc    DWORD PTR [edi-0x5a795d61],ecx
  40a774:	out    dx,al
  40a775:	jnp    0x40a7ad
  40a777:	fisttp WORD PTR [ebp+0x5d]
  40a77a:	sbb    eax,0xfd98e678
  40a77f:	jecxz  0x40a738
  40a781:	rol    BYTE PTR [esi],1
  40a783:	xchg   edi,esi
  40a785:	add    DWORD PTR ds:0x7dc42fb1,ecx
  40a78b:	add    BYTE PTR [esi],0xaa
  40a78e:	das    
  40a78f:	fidivr WORD PTR [ecx+0x1cc228c1]
  40a795:	sbb    eax,0x1c8dacb6
  40a79a:	adc    esi,eax
  40a79c:	dec    esp
  40a79d:	push   ss
  40a79e:	leave  
  40a79f:	mov    ebx,0x34409d7a
  40a7a4:	pushaw 
  40a7a6:	lea    ebp,[eax+0x45]
  40a7a9:	add    DWORD PTR ds:0x50cfee82,esp
  40a7af:	mov    ecx,0x57c64f97
  40a7b4:	push   ebx
  40a7b5:	inc    esi
  40a7b6:	dec    ebx
  40a7b7:	test   DWORD PTR [eax+ebp*1],esi
  40a7ba:	xchg   esi,eax
  40a7bb:	xor    al,dl
  40a7bd:	push   es
  40a7be:	gs out dx,eax
  40a7c0:	sti    
  40a7c1:	push   0xda6afc48
  40a7c6:	cld    
  40a7c7:	adc    al,0x4
  40a7c9:	dec    edi
  40a7ca:	and    BYTE PTR [ecx],bl
  40a7cc:	and    al,0x5f
  40a7ce:	push   ebp
  40a7cf:	add    BYTE PTR [ebx-0x6f80fd6d],0x86
  40a7d6:	cmp    dh,BYTE PTR [esi]
  40a7d8:	xor    BYTE PTR ds:0xcfa67aa5,ch
  40a7de:	xor    DWORD PTR [ecx+edi*2+0xc8b32ab],edx
  40a7e5:	leave  
  40a7e6:	scas   al,BYTE PTR es:[edi]
  40a7e7:	ror    DWORD PTR [edx-0x70],1
  40a7ea:	and    BYTE PTR [ebp+ecx*8+0x665933cf],0x2c
  40a7f2:	scas   al,BYTE PTR es:[edi]
  40a7f3:	dec    esp
  40a7f4:	push   0xd57bf7c9
  40a7f9:	sbb    ebx,DWORD PTR [edx-0x4e33c583]
  40a7ff:	mov    edi,0x2b58b11a
  40a804:	xchg   esp,eax
  40a805:	sbb    eax,0xb4da37ba
  40a80a:	out    0xf3,al
  40a80c:	mov    esp,0xc2e91542
  40a811:	aas    
  40a812:	mov    ss,WORD PTR [edx-0x741ffc7c]
  40a818:	out    0xba,al
  40a81a:	jo     0x40a7b0
  40a81c:	ins    BYTE PTR es:[edi],dx
  40a81d:	cmc    
  40a81e:	xor    edi,DWORD PTR [ecx-0x59eb340f]
  40a824:	dec    eax
  40a825:	sbb    BYTE PTR ds:0x74db2b5a,0xfc
  40a82c:	sar    BYTE PTR [ebp-0x26ef2762],0x37
  40a833:	push   es
  40a834:	dec    eax
  40a835:	scas   al,BYTE PTR es:[edi]
  40a836:	sub    bl,BYTE PTR [ebx-0xd]
  40a839:	jmp    0x3d7d5afe
  40a83e:	push   eax
  40a83f:	lods   al,BYTE PTR ds:[esi]
  40a840:	xor    ah,bh
  40a842:	inc    eax
  40a843:	cmp    ch,dl
  40a845:	add    edi,DWORD PTR [ebp+0x1a6e7009]
  40a84b:	ins    BYTE PTR es:[edi],dx
  40a84c:	xor    al,0x36
  40a84e:	pop    esp
  40a84f:	lea    eax,[edi]
  40a851:	add    DWORD PTR [edi+0xaf3a8dd],ebp
  40a857:	inc    edx
  40a858:	int3   
  40a859:	or     eax,0x71158859
  40a85e:	loope  0x40a837
  40a860:	loop   0x40a8bb
  40a862:	xchg   BYTE PTR [ecx-0x35],bl
  40a865:	cmp    eax,0x3841c54d
  40a86a:	test   al,0x99
  40a86c:	js     0x40a831
  40a86e:	popf   
  40a86f:	dec    ebp
  40a870:	das    
  40a871:	shl    BYTE PTR [edx],0x7e
  40a874:	fld    TBYTE PTR [ecx+0x37]
  40a877:	ss and eax,0x8ca4df42
  40a87d:	adc    eax,0x44645610
  40a882:	lea    eax,[edx]
  40a884:	sub    bh,BYTE PTR [edx+0x4a]
  40a887:	lods   al,BYTE PTR ds:[esi]
  40a888:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a889:	gs or  eax,0xffffffc9
  40a88d:	pop    ss
  40a88e:	(bad)  
  40a88f:	stc    
  40a890:	mov    al,ds:0x82b5edf7
  40a895:	aam    0xcb
  40a897:	mov    ebx,ss
  40a899:	iret   
  40a89a:	dec    eax
  40a89b:	mov    dl,0xbf
  40a89d:	pop    ebp
  40a89e:	adc    al,ch
  40a8a0:	inc    ebp
  40a8a1:	or     eax,0xfb7ddbbf
  40a8a6:	jg     0x40a832
  40a8a8:	xor    esi,0x41c17f41
  40a8ae:	lahf   
  40a8af:	cli    
  40a8b0:	lods   eax,DWORD PTR ds:[esi]
  40a8b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8b2:	xor    ebx,DWORD PTR [edi]
  40a8b4:	xor    al,0xa9
  40a8b6:	popf   
  40a8b7:	jno    0x40a878
  40a8b9:	in     eax,dx
  40a8ba:	fs jae 0x40a8b4
  40a8bd:	inc    BYTE PTR [ebx+0x541a29d5]
  40a8c3:	push   edx
  40a8c4:	push   edi
  40a8c5:	cld    
  40a8c6:	fmulp  st(3),st
  40a8c8:	inc    edi
  40a8c9:	in     al,dx
  40a8ca:	mov    ebp,0xd80810a5
  40a8cf:	out    0x61,al
  40a8d1:	test   WORD PTR [eax+ebp*1],0x24fa
  40a8d7:	das    
  40a8d8:	xor    BYTE PTR [eax-0x72750643],dh
  40a8de:	pop    eax
  40a8df:	fcomi  st,st(1)
  40a8e1:	xchg   ecx,eax
  40a8e2:	fwait
  40a8e3:	mov    edi,0x6775db90
  40a8e8:	jp     0x40a8bf
  40a8ea:	ins    BYTE PTR es:[edi],dx
  40a8eb:	or     DWORD PTR [eax+0x56],esp
  40a8ee:	(bad)  
  40a8ef:	cmp    esi,DWORD PTR [edi-0xbb88a19]
  40a8f5:	push   eax
  40a8f6:	xlat   BYTE PTR ds:[ebx]
  40a8f7:	popf   
  40a8f8:	cmovo  edx,edi
  40a8fb:	ret    
  40a8fc:	data16 outs dx,BYTE PTR ds:[esi]
  40a8fe:	cdq    
  40a8ff:	out    dx,eax
  40a900:	sbb    ch,bh
  40a902:	lods   al,BYTE PTR ds:[esi]
  40a903:	arpl   WORD PTR [edi+0x68],dx
  40a906:	sub    edx,ebx
  40a908:	jmp    0xb1b1a787
  40a90d:	addr16 dec edx
  40a90f:	push   edx
  40a910:	mov    eax,0x99a57962
  40a915:	int    0xdf
  40a917:	push   edx
  40a918:	add    al,0xe9
  40a91a:	icebp  
  40a91b:	ror    BYTE PTR [ebx+esi*8+0x5c],0xf
  40a920:	pop    edx
  40a921:	sbb    al,0x41
  40a923:	mov    eax,DWORD PTR ds:0x2b3daf2
  40a929:	inc    ebx
  40a92a:	sub    al,0x2b
  40a92c:	dec    ebx
  40a92d:	inc    esi
  40a92e:	xchg   edi,eax
  40a92f:	inc    DWORD PTR [edi-0x725bcf35]
  40a935:	arpl   WORD PTR [ebp-0x6f5006ed],sp
  40a93b:	jns    0x40a913
  40a93d:	sti    
  40a93e:	jmp    0xdb6b:0x4576c1d9
  40a945:	pusha  
  40a946:	mov    ah,0xd0
  40a948:	sbb    BYTE PTR [ebx+ecx*1],0x9f
  40a94c:	and    dh,bl
  40a94e:	hlt    
  40a94f:	dec    edi
  40a950:	xchg   BYTE PTR [eax+0x17],al
  40a953:	enter  0x8bd6,0x68
  40a957:	push   eax
  40a958:	inc    eax
  40a959:	xor    ah,BYTE PTR [ebp+0x4ccb276a]
  40a95f:	xor    eax,0x51935a4b
  40a964:	push   ss
  40a965:	scas   eax,DWORD PTR es:[edi]
  40a966:	in     eax,0xeb
  40a968:	sbb    cl,BYTE PTR [edi]
  40a96a:	popf   
  40a96b:	or     eax,DWORD PTR [ecx+0x21664712]
  40a971:	outs   dx,BYTE PTR ds:[esi]
  40a972:	push   esp
  40a973:	test   eax,0x486193d
  40a978:	(bad)  
  40a979:	aam    0xa0
  40a97b:	cmc    
  40a97c:	into   
  40a97d:	es mov al,0x76
  40a980:	mov    eax,ds:0x6078ce1e
  40a985:	push   esi
  40a986:	inc    ebx
  40a987:	push   es
  40a988:	int    0x4c
  40a98a:	leave  
  40a98b:	das    
  40a98c:	hlt    
  40a98d:	dec    esi
  40a98e:	sub    DWORD PTR [ebp-0x73],ebp
  40a991:	xchg   esp,eax
  40a992:	pop    eax
  40a993:	jnp    0x40a9ab
  40a995:	jmp    0x40a95a
  40a997:	ins    DWORD PTR es:[edi],dx
  40a998:	adc    eax,0x81078604
  40a99d:	push   ds
  40a99e:	in     al,dx
  40a99f:	call   0x4d0b:0x435b427c
  40a9a6:	sbb    esi,DWORD PTR [edi+ecx*1]
  40a9a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9aa:	add    ebp,DWORD PTR [edx+0x1a161bab]
  40a9b0:	std    
  40a9b1:	mov    ds:0x9ddd0366,eax
  40a9b6:	or     al,0x35
  40a9b8:	mov    bl,0x1d
  40a9ba:	inc    ebx
  40a9bb:	aad    0xb7
  40a9bd:	stos   BYTE PTR es:[edi],al
  40a9be:	sub    BYTE PTR [ebx],0x90
  40a9c1:	cmp    ecx,0xfffffff2
  40a9c4:	repnz in eax,dx
  40a9c6:	jns    0x40aa11
  40a9c8:	stc    
  40a9c9:	ret    
  40a9ca:	xor    BYTE PTR [esi-0x5e38e7c6],0xe3
  40a9d1:	mov    bl,0x95
  40a9d3:	add    eax,0xf57a98ae
  40a9d8:	inc    edx
  40a9d9:	lods   al,BYTE PTR ds:[esi]
  40a9da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9db:	jmp    0x26cd7257
  40a9e0:	lea    edi,[esp+ebx*2]
  40a9e3:	xchg   bl,ah
  40a9e5:	xchg   edi,eax
  40a9e6:	dec    esp
  40a9e7:	pop    edi
  40a9e8:	mov    dl,0xbb
  40a9ea:	dec    ecx
  40a9eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9ec:	aas    
  40a9ed:	(bad)  
  40a9ee:	pop    esi
  40a9ef:	lds    edi,FWORD PTR [eax-0xe]
  40a9f2:	pop    es
  40a9f3:	push   ecx
  40a9f4:	adc    BYTE PTR [ecx+0x579515e7],bl
  40a9fa:	cmc    
  40a9fb:	push   edx
  40a9fc:	into   
  40a9fd:	outs   dx,BYTE PTR ds:[esi]
  40a9fe:	rcr    DWORD PTR [edi-0x644af8ce],1
  40aa04:	stos   DWORD PTR es:[edi],eax
  40aa05:	mov    al,0x67
  40aa07:	inc    ebx
  40aa08:	and    ecx,DWORD PTR [ebx-0x2474b1b0]
  40aa0e:	jmp    0x3dda:0xb1c91ad8
  40aa15:	gs clc 
  40aa17:	inc    esp
  40aa18:	into   
  40aa19:	lods   eax,DWORD PTR ds:[esi]
  40aa1a:	mov    esi,0x51e6e4cb
  40aa1f:	sub    esi,eax
  40aa21:	jge    0x40aaa2
  40aa23:	sbb    al,0x23
  40aa25:	(bad)  [esp+ecx*4]
  40aa28:	leave  
  40aa29:	sbb    eax,0x60cd14bc
  40aa2e:	sub    DWORD PTR [ebx+0x42e5c397],esi
  40aa34:	push   esi
  40aa35:	repnz mov dl,0x55
  40aa38:	jmp    0xc4dd114d
  40aa3d:	and    bl,cl
  40aa3f:	loop   0x40aab9
  40aa41:	icebp  
  40aa42:	mov    ds:0x37979e83,al
  40aa47:	mov    ds:0x5261ec2a,al
  40aa4c:	das    
  40aa4d:	or     eax,0x95ad3084
  40aa52:	dec    ecx
  40aa53:	dec    ebp
  40aa54:	js     0x40aacf
  40aa56:	cld    
  40aa57:	mov    edi,0xfaeaf9ad
  40aa5c:	mov    edi,0xdab13a80
  40aa61:	pusha  
  40aa62:	ror    DWORD PTR [eax-0x3263d710],cl
  40aa68:	stc    
  40aa69:	mov    eax,0x37285f69
  40aa6e:	rcr    dh,0x85
  40aa71:	fild   DWORD PTR [ebx+0x27aa1f3e]
  40aa77:	mov    ebx,0x9dc777bd
  40aa7c:	out    dx,al
  40aa7d:	outs   dx,DWORD PTR ds:[esi]
  40aa7e:	jl     0x40aa28
  40aa80:	xchg   edi,eax
  40aa81:	mov    edx,0x75e422d1
  40aa86:	xchg   ebx,esp
  40aa88:	pop    ss
  40aa89:	cld    
  40aa8a:	shr    al,0xa4
  40aa8d:	call   0xc161:0x596a06c6
  40aa94:	int3   
  40aa95:	(bad)  
  40aa96:	push   ebx
  40aa97:	push   esp
  40aa98:	lahf   
  40aa99:	mov    edx,0x14e75523
  40aa9e:	jmp    DWORD PTR [edi-0x1665155b]
  40aaa4:	or     eax,0x41a14685
  40aaa9:	jmp    0x40aa2f
  40aaab:	aad    0x99
  40aaad:	mov    ebx,0xce0cc172
  40aab2:	mov    dh,0x78
  40aab4:	fstp   QWORD PTR [eax-0x7]
  40aab7:	jl     0x40aa8b
  40aab9:	push   ecx
  40aaba:	inc    eax
  40aabb:	(bad)  
  40aabc:	(bad)  
  40aabd:	cld    
  40aabe:	out    0xeb,eax
  40aac0:	adc    BYTE PTR [ebp+eax*4-0x49],0x7d
  40aac5:	sub    ch,BYTE PTR [ebx+0x3e]
  40aac8:	sbb    eax,0x4a9e55df
  40aacd:	cmp    al,0xfd
  40aacf:	xor    ebp,DWORD PTR [eax-0x47091f5c]
  40aad5:	lahf   
  40aad6:	jmp    0xf96e:0x2a75719c
  40aadd:	movntps XMMWORD PTR [edx-0x3ea0bfee],xmm7
  40aae4:	dec    ecx
  40aae5:	pop    esp
  40aae6:	xchg   edi,eax
  40aae7:	jecxz  0x40aad4
  40aae9:	ss adc eax,0xa0e39f5a
  40aaef:	or     eax,DWORD PTR [ecx+edx*1-0x49]
  40aaf3:	loope  0x40ab3e
  40aaf5:	xlat   BYTE PTR ds:[ebx]
  40aaf6:	js     0x40aaef
  40aaf8:	push   ebp
  40aaf9:	push   eax
  40aafa:	jmp    0x40aa93
  40aafc:	pop    ebp
  40aafd:	pop    ebx
  40aafe:	loope  0x40ab0c
  40ab00:	repz jecxz 0x40ab33
  40ab03:	fidivr WORD PTR [esi-0x61]
  40ab06:	inc    esi
  40ab07:	popa   
  40ab08:	(bad)  
  40ab09:	add    DWORD PTR [ebp+0x2a],ebp
  40ab0c:	push   edx
  40ab0d:	stos   DWORD PTR es:[edi],eax
  40ab0e:	push   eax
  40ab0f:	lods   eax,DWORD PTR ds:[esi]
  40ab10:	xchg   ebx,eax
  40ab11:	sub    BYTE PTR [edi+0x4e1be6e4],0xc2
  40ab18:	aaa    
  40ab19:	inc    ecx
  40ab1a:	jo     0x40ab67
  40ab1c:	xor    DWORD PTR [edx+0x117732a7],esi
  40ab22:	rcr    DWORD PTR [ebp+0x72e9b472],1
  40ab28:	fcom   QWORD PTR [edx-0x4e]
  40ab2b:	push   ecx
  40ab2c:	or     edi,DWORD PTR [edx]
  40ab2e:	not    DWORD PTR [ecx-0x29]
  40ab31:	add    bl,bl
  40ab33:	jle    0x40aad5
  40ab35:	jl     0x40aaf2
  40ab37:	stc    
  40ab38:	pop    ecx
  40ab39:	mov    ds:0x5a0cbc60,al
  40ab3e:	test   eax,0x9bc6fe05
  40ab43:	push   cs
  40ab44:	outs   dx,BYTE PTR ds:[esi]
  40ab45:	sbb    ebx,DWORD PTR [ebx]
  40ab47:	mov    ch,0x2d
  40ab49:	fisub  WORD PTR [ebp-0x56ca5d79]
  40ab4f:	mov    al,ds:0xb136222e
  40ab54:	test   eax,0xf30d0618
  40ab59:	pop    esi
  40ab5a:	loop   0x40ab13
  40ab5c:	test   ebx,ecx
  40ab5e:	imul   ecx,DWORD PTR [edi-0x50],0xffffffd5
  40ab62:	repnz repnz stos DWORD PTR es:[edi],eax
  40ab65:	jecxz  0x40aae9
  40ab67:	pop    ss
  40ab68:	clc    
  40ab69:	das    
  40ab6a:	gs pop ss
  40ab6c:	outs   dx,DWORD PTR cs:[esi]
  40ab6e:	ficom  WORD PTR [ecx+0x4c326336]
  40ab74:	lahf   
  40ab75:	inc    eax
  40ab76:	jne    0x40ab28
  40ab78:	in     al,0x18
  40ab7a:	pushf  
  40ab7b:	stos   BYTE PTR es:[edi],al
  40ab7c:	inc    ebp
  40ab7d:	mov    ecx,0xa1352a9f
  40ab82:	xchg   ecx,eax
  40ab83:	dec    esp
  40ab84:	enter  0x84c7,0xe3
  40ab88:	popf   
  40ab89:	outs   dx,BYTE PTR ds:[esi]
  40ab8a:	cli    
  40ab8b:	mov    ch,0xe3
  40ab8d:	outs   dx,BYTE PTR ds:[esi]
  40ab8e:	fist   WORD PTR ds:0xf810dbdc
  40ab94:	xor    eax,0xfb29c164
  40ab99:	fs mov ebp,0xe2b10e69
  40ab9f:	jns    0x40abfe
  40aba1:	jle    0x40abae
  40aba3:	out    0xfa,al
  40aba5:	daa    
  40aba6:	sbb    edx,ebx
  40aba8:	xor    DWORD PTR [ebx+0x23f4437e],esi
  40abae:	loop   0x40ac07
  40abb0:	jmp    0x8d0c:0x32d10a6e
  40abb7:	dec    esi
  40abb8:	jne    0x40abb8
  40abba:	fwait
  40abbb:	pop    edi
  40abbc:	ss rol eax,cl
  40abbf:	(bad)  
  40abc0:	cmp    al,0x80
  40abc2:	in     al,dx
  40abc3:	stc    
  40abc4:	cmp    BYTE PTR [ecx],bl
  40abc6:	ror    DWORD PTR [ecx],cl
  40abc8:	imul   esi,esp,0x5d3bb803
  40abce:	mov    ds:0xaf0e250f,al
  40abd3:	cmp    ah,BYTE PTR ds:0xf9ba4478
  40abd9:	arpl   WORD PTR [edi],si
  40abdb:	gs inc edi
  40abdd:	fld    QWORD PTR [eax+ebx*8-0x4c]
  40abe1:	jns    0x40abb0
  40abe3:	pop    ds
  40abe4:	xchg   esi,eax
  40abe5:	inc    ebx
  40abe6:	jg     0x40abe5
  40abe8:	and    eax,0x21ef68cf
  40abed:	mov    edi,0xf2502d20
  40abf2:	fisttp WORD PTR [esi+ebp*4-0x59]
  40abf6:	scas   al,BYTE PTR es:[edi]
  40abf7:	mov    edx,0x92e90a42
  40abfc:	les    esi,FWORD PTR [esi+0x40]
  40abff:	jno    0x40abe4
  40ac01:	mov    edx,0x146c352b
  40ac06:	std    
  40ac07:	push   0xffffffd9
  40ac09:	gs dec ebx
  40ac0b:	and    edx,DWORD PTR [edi]
  40ac0d:	retf   0x4a1d
  40ac10:	stos   DWORD PTR es:[edi],eax
  40ac11:	adc    al,0xb1
  40ac13:	mov    esi,0x32bb9737
  40ac18:	and    ebx,ebp
  40ac1a:	ins    DWORD PTR es:[edi],dx
  40ac1b:	enter  0xd6f1,0x40
  40ac1f:	pushf  
  40ac20:	mov    BYTE PTR [ebp+edi*4-0x220a0bea],ch
  40ac27:	jl     0x40abe5
  40ac29:	shl    BYTE PTR [ebx],cl
  40ac2b:	or     al,0xf9
  40ac2d:	push   cs
  40ac2e:	popa   
  40ac2f:	mov    ebp,DWORD PTR ds:0x3055d61f
  40ac35:	mov    ah,0x80
  40ac37:	and    edi,esi
  40ac39:	(bad)  
  40ac3a:	mov    ebx,0x527ff20b
  40ac3f:	inc    eax
  40ac40:	jae    0x40ac8f
  40ac42:	addr16 mov al,cs:0xa09c
  40ac47:	inc    ebp
  40ac48:	pop    ecx
  40ac49:	adc    DWORD PTR [ebp+0x7bc59f7d],ebx
  40ac4f:	scas   al,BYTE PTR es:[edi]
  40ac50:	push   0xec9836fc
  40ac55:	push   esi
  40ac56:	xor    esi,esp
  40ac58:	jp     0x40ac1e
  40ac5a:	and    cl,BYTE PTR [eax+0x71]
  40ac5d:	cmp    BYTE PTR [esi+0x588fc097],bl
  40ac63:	dec    ecx
  40ac64:	add    eax,0x7920f458
  40ac69:	icebp  
  40ac6a:	push   ebx
  40ac6b:	sbb    bh,bh
  40ac6d:	adc    eax,0x5b239e64
  40ac72:	mov    bh,0x3f
  40ac74:	sbb    BYTE PTR [ecx+edx*2-0x34],al
  40ac78:	push   esp
  40ac79:	jno    0x40ac9d
  40ac7b:	cmp    al,dh
  40ac7d:	push   ss
  40ac7e:	lock leave 
  40ac80:	jo     0x40ac8a
  40ac82:	outs   dx,DWORD PTR ds:[esi]
  40ac83:	push   ebx
  40ac84:	and    eax,0x891db1bf
  40ac89:	ja     0x40ac57
  40ac8b:	push   ebx
  40ac8c:	jbe    0x40ac2c
  40ac8e:	leave  
  40ac8f:	mov    eax,ds:0xf8483bb6
  40ac94:	shl    BYTE PTR [esi-0xe21d5e8],1
  40ac9a:	pop    eax
  40ac9b:	fsqrt  
  40ac9d:	mov    cl,0xcf
  40ac9f:	jecxz  0x40ac30
  40aca1:	jge    0x40acda
  40aca3:	out    0xa9,eax
  40aca5:	fcom   DWORD PTR [edx]
  40aca7:	mov    ebp,DWORD PTR [edx-0x29eff735]
  40acad:	sub    eax,esp
  40acaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40acb0:	push   ebp
  40acb1:	retf   
  40acb2:	add    DWORD PTR [ebx],edi
  40acb4:	mov    edx,0x9f671217
  40acb9:	mov    bh,0xae
  40acbb:	inc    esp
  40acbc:	adc    al,0x7b
  40acbe:	jge    0x40ac72
  40acc0:	xor    BYTE PTR [edx-0x16fd3a96],dl
  40acc6:	sub    al,0x86
  40acc8:	mov    ah,0x7d
  40acca:	out    0x39,al
  40accc:	jns    0x40ad1e
  40acce:	sub    BYTE PTR [esi],0x69
  40acd1:	mov    dh,al
  40acd3:	xchg   eax,ebx
  40acd5:	xchg   ebp,eax
  40acd6:	push   eax
  40acd7:	push   esp
  40acd8:	std    
  40acd9:	outs   dx,BYTE PTR ds:[esi]
  40acda:	test   BYTE PTR [edx+0x76d1b316],0xcf
  40ace1:	cli    
  40ace2:	xchg   ebp,eax
  40ace3:	xchg   esi,eax
  40ace4:	add    dh,BYTE PTR ds:0xfb637d58
  40acea:	div    DWORD PTR [edi]
  40acec:	inc    esp
  40aced:	cmc    
  40acee:	dec    eax
  40acef:	aas    
  40acf0:	ds and eax,0x97dab3ac
  40acf6:	add    DWORD PTR [ebx],0xffffffb1
  40acf9:	sti    
  40acfa:	mov    dl,0xe5
  40acfc:	rol    BYTE PTR [edi],cl
  40acfe:	pop    esi
  40acff:	mov    al,ds:0xf9c70eb6
  40ad04:	aaa    
  40ad05:	inc    esi
  40ad06:	sbb    eax,0xf097a4f1
  40ad0b:	sbb    eax,0xb11d20ee
  40ad10:	loopne 0x40ad7f
  40ad12:	in     eax,dx
  40ad13:	das    
  40ad14:	sub    DWORD PTR [esp+edx*4-0x6fe812e7],0x1261373e
  40ad1f:	idiv   dx
  40ad22:	mov    ah,0xb6
  40ad24:	dec    eax
  40ad25:	push   ebp
  40ad26:	hlt    
  40ad27:	or     eax,0xc0140952
  40ad2c:	add    ebp,ecx
  40ad2e:	not    edx
  40ad30:	xor    DWORD PTR [ecx+esi*1],esi
  40ad33:	jmp    0x40ad1e
  40ad35:	fneni(8087 only) 
  40ad37:	jmp    0xfc420239
  40ad3c:	fist   WORD PTR [ebp+0x243fc680]
  40ad42:	pop    ds
  40ad43:	xchg   esp,eax
  40ad44:	fist   WORD PTR ds:0xa00351e6
  40ad4a:	xchg   BYTE PTR [ebx],dl
  40ad4c:	push   ss
  40ad4d:	stos   BYTE PTR es:[edi],al
  40ad4e:	es test dh,ch
  40ad51:	repnz pop esi
  40ad53:	scas   al,BYTE PTR es:[edi]
  40ad54:	repnz mov cl,0x18
  40ad57:	test   al,0xb2
  40ad59:	sbb    bl,BYTE PTR ds:0xdf537b58
  40ad5f:	jnp    0x40ad6f
  40ad61:	outs   dx,BYTE PTR ds:[esi]
  40ad62:	sub    BYTE PTR [ebp-0x719d840a],bl
  40ad68:	lods   eax,DWORD PTR ds:[esi]
  40ad69:	pusha  
  40ad6a:	inc    ebp
  40ad6b:	cld    
  40ad6c:	(bad)  
  40ad6e:	dec    esp
  40ad6f:	adc    bl,al
  40ad71:	fdivr  DWORD PTR [esi-0x747ae9e6]
  40ad77:	cmp    eax,0xe6c1bc32
  40ad7c:	ret    
  40ad7d:	xchg   edx,eax
  40ad7e:	call   0xe40f39a0
  40ad83:	inc    eax
  40ad84:	je     0x40ad5c
  40ad86:	push   edi
  40ad87:	cmp    al,0x3f
  40ad89:	pushf  
  40ad8a:	dec    esi
  40ad8b:	mov    es,WORD PTR [edx+0x2864147a]
  40ad91:	imul   ebx,DWORD PTR [ecx+0x32],0x2dbd70f1
  40ad98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad99:	retf   0x458b
  40ad9c:	in     al,dx
  40ad9d:	movzx  ecx,WORD PTR ds:0x42915f
  40ada4:	or     DWORD PTR ds:0x4291e7,ecx
  40adaa:	mov    ecx,DWORD PTR [ebp+0x8]
  40adad:	add    ecx,DWORD PTR [eax+0x1c]
  40adb0:	mov    DWORD PTR [ebp-0x14],ecx
  40adb3:	mov    DWORD PTR ds:0x4291d3,0x1651
  40adbd:	jmp    0x40d2ae
  40adc2:	mov    eax,DWORD PTR [ebp-0x2c]
  40adc5:	and    DWORD PTR ds:0x4291c3,0x0
  40adcf:	jmp    0x40ade1
  40add4:	mov    ecx,DWORD PTR ds:0x4291c3
  40adda:	inc    ecx
  40addb:	mov    DWORD PTR ds:0x4291c3,ecx
  40ade1:	cmp    DWORD PTR ds:0x4291c3,0x1e
  40ade8:	jae    0x40ae37
  40adee:	cmp    DWORD PTR ds:0x4291c3,0x10
  40adf5:	jbe    0x40ae37
  40adfb:	jmp    0x40ae18
  40ae00:	push   0x54af
  40ae05:	push   0x428000
  40ae0a:	push   0x42810e
  40ae0f:	push   DWORD PTR [ebp-0x10]
  40ae12:	call   DWORD PTR ds:0x42a57b
  40ae18:	cmp    DWORD PTR ds:0x4291c3,0xf
  40ae1f:	jne    0x40ae32
  40ae25:	mov    ecx,DWORD PTR ds:0x4291c3
  40ae2b:	inc    ecx
  40ae2c:	mov    DWORD PTR ds:0x4291c3,ecx
  40ae32:	jmp    0x40add4
  40ae37:	mov    ecx,DWORD PTR [ebp+0x8]
  40ae3a:	add    ecx,DWORD PTR [eax+ebx*4]
  40ae3d:	and    DWORD PTR ds:0x4291df,0x0
  40ae47:	jmp    0x40ae57
  40ae4c:	mov    eax,ds:0x4291df
  40ae51:	inc    eax
  40ae52:	mov    ds:0x4291df,eax
  40ae57:	cmp    DWORD PTR ds:0x4291df,0x10
  40ae5e:	jae    0x40aea1
  40ae64:	cmp    DWORD PTR ds:0x4291df,0x5
  40ae6b:	jb     0x40aea1
  40ae71:	jmp    0x40ae84
  40ae76:	push   0x73ed
  40ae7b:	push   DWORD PTR [ebp-0xc]
  40ae7e:	call   DWORD PTR ds:0x42a57f
  40ae84:	cmp    DWORD PTR ds:0x4291df,0x4
  40ae8b:	jne    0x40ae9c
  40ae91:	mov    eax,ds:0x4291df
  40ae96:	inc    eax
  40ae97:	mov    ds:0x4291df,eax
  40ae9c:	jmp    0x40ae4c
  40aea1:	mov    DWORD PTR [ebp-0x28],ecx
  40aea4:	add    ecx,DWORD PTR ds:0x429183
  40aeaa:	mov    eax,DWORD PTR [ebp-0x4]
  40aead:	xor    DWORD PTR ds:0x42916b,ebx
  40aeb3:	mov    ecx,DWORD PTR [ebp-0x28]
  40aeb6:	xor    eax,esi
  40aeb8:	jmp    0x40d26c
  40aebd:	add    BYTE PTR [ecx],dh
  40aebf:	cld    
  40aec0:	sbb    esp,ecx
  40aec2:	nop
  40aec3:	and    BYTE PTR [eax],0xe5
  40aec6:	push   eax
  40aec7:	(bad)  [edi-0x35b91ea9]
  40aecd:	sub    al,0xf1
  40aecf:	add    DWORD PTR [ebx-0x7c7ca318],0x3d
  40aed6:	xchg   ebx,eax
  40aed7:	and    al,0xbf
  40aed9:	inc    edx
  40aeda:	ins    BYTE PTR es:[edi],dx
  40aedb:	pop    ebp
  40aedc:	cld    
  40aedd:	mov    BYTE PTR [edi-0x756fb273],bh
  40aee3:	gs inc al
  40aee6:	cdq    
  40aee7:	in     eax,0x78
  40aee9:	adc    bl,BYTE PTR [ecx]
  40aeeb:	sub    bh,dl
  40aeed:	gs test eax,0x9ce58828
  40aef3:	xor    al,0x51
  40aef5:	xor    ah,BYTE PTR [ebp+0x38]
  40aef8:	pop    es
  40aef9:	cmp    eax,0x4b026ca8
  40aefe:	loopne 0x40aea8
  40af00:	mov    eax,ds:0xaabff726
  40af05:	int3   
  40af06:	xor    dh,bl
  40af08:	cmp    DWORD PTR [edx+0x2b],eax
  40af0b:	xchg   esp,eax
  40af0c:	nop
  40af0d:	ret    0xe5cb
  40af10:	aaa    
  40af11:	hlt    
  40af12:	mov    DWORD PTR [ebp-0x1592cf1b],0xb99a0ac2
  40af1c:	shl    BYTE PTR [ecx],1
  40af1e:	pop    ds
  40af1f:	xor    al,BYTE PTR [eax+0x5e26587]
  40af25:	call   FWORD PTR [ecx+esi*8-0x4e]
  40af29:	add    BYTE PTR [esi-0x67],bh
  40af2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af2d:	inc    ebx
  40af2e:	popa   
  40af2f:	cs pop ecx
  40af31:	out    0xec,eax
  40af33:	xlat   BYTE PTR fs:[ebx]
  40af35:	in     eax,0x70
  40af37:	jb     0x40afa8
  40af39:	out    dx,eax
  40af3a:	or     BYTE PTR [ebx],bh
  40af3c:	adc    DWORD PTR [ebp-0x7512183e],ebx
  40af42:	es (bad) 
  40af44:	int    0xf8
  40af46:	mov    DWORD PTR [ebx],ebx
  40af48:	jmp    0x9ae556ab
  40af4d:	ins    DWORD PTR es:[edi],dx
  40af4e:	push   0x59
  40af50:	cdq    
  40af51:	cmp    DWORD PTR [ecx+0x14],0x44210d86
  40af58:	mov    es,WORD PTR [ebx-0x378bc5a3]
  40af5e:	dec    eax
  40af5f:	pusha  
  40af60:	push   esp
  40af61:	mov    ah,0xc8
  40af63:	retf   0x11d1
  40af66:	jne    0x40afc4
  40af68:	retf   0x78a8
  40af6b:	mov    WORD PTR [edi-0x5a1add1],cs
  40af71:	and    al,0x77
  40af73:	ficomp WORD PTR [ecx]
  40af75:	or     DWORD PTR [eax+0x458c7d48],edx
  40af7b:	ins    BYTE PTR es:[edi],dx
  40af7c:	jg     0x40afc9
  40af7e:	mov    edi,0xdca030c8
  40af83:	bound  ebx,QWORD PTR [ebx+esi*8+0x280f8a6b]
  40af8a:	clc    
  40af8b:	(bad)  
  40af8c:	outs   dx,BYTE PTR ds:[esi]
  40af8d:	stc    
  40af8e:	les    ebp,FWORD PTR [edi]
  40af90:	xchg   ebx,eax
  40af91:	in     al,dx
  40af92:	mov    edi,0x454bf4aa
  40af97:	and    cl,BYTE PTR [ebx]
  40af99:	std    
  40af9a:	out    dx,eax
  40af9b:	test   eax,0x2e581208
  40afa0:	pop    esp
  40afa1:	cmp    BYTE PTR [ecx],0x75
  40afa4:	pop    esp
  40afa5:	push   edi
  40afa6:	(bad)  
  40afa7:	mov    eax,0xbc0f72bb
  40afac:	loopne 0x40af2f
  40afae:	call   0xb519:0xe7d2bbb7
  40afb5:	adc    esi,DWORD PTR ds:[edi+0x6]
  40afb9:	loope  0x40af76
  40afbb:	sti    
  40afbc:	mov    edx,0xecd7aa9a
  40afc1:	bound  edx,QWORD PTR [ebx+0x137e279e]
  40afc7:	push   edi
  40afc8:	mov    ecx,0xb94aefe0
  40afcd:	jg     0x40b018
  40afcf:	and    BYTE PTR [eax-0x4376de91],ch
  40afd5:	out    0xe7,al
  40afd7:	(bad)
  40afdb:	aad    0x99
  40afdd:	(bad)  
  40afde:	push   ss
  40afdf:	push   es
  40afe0:	and    ecx,esp
  40afe2:	lahf   
  40afe3:	ret    0x7108
  40afe6:	xchg   BYTE PTR [ebx],ch
  40afe8:	ja     0x40afae
  40afea:	mov    ecx,0x1e28e7db
  40afef:	lock xchg esi,eax
  40aff1:	out    0xc,eax
  40aff3:	jg     0x40b03e
  40aff5:	sbb    DWORD PTR [eax-0x27],ebp
  40aff8:	shl    BYTE PTR [ebp+0x2b],cl
  40affb:	popa   
  40affc:	push   0xabfc5e2c
  40b001:	xchg   al,cl
  40b003:	sbb    al,0xcd
  40b005:	test   al,0x27
  40b007:	jg     0x40b03b
  40b009:	and    DWORD PTR [esi+0x157cbb7a],eax
  40b00f:	sub    esi,ebx
  40b011:	shl    al,1
  40b013:	fisubr WORD PTR [edi+0x6b]
  40b016:	cdq    
  40b017:	add    bh,ah
  40b019:	push   esi
  40b01a:	shl    BYTE PTR [esi-0x61],cl
  40b01d:	cmp    BYTE PTR [esi],al
  40b01f:	lods   eax,DWORD PTR ds:[esi]
  40b020:	xor    ax,0x149e
  40b024:	push   edx
  40b025:	test   BYTE PTR ss:[esi-0xb],dl
  40b029:	movntps XMMWORD PTR [ecx+0x54],xmm6
  40b02d:	xor    al,0xd3
  40b02f:	sti    
  40b030:	lock push ebp
  40b032:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b033:	and    eax,0x5d815174
  40b038:	sahf   
  40b039:	scas   eax,DWORD PTR es:[edi]
  40b03a:	mov    ds:0x5fa39574,al
  40b03f:	cmc    
  40b040:	xchg   esp,eax
  40b041:	sub    DWORD PTR [eax+0x27],edx
  40b044:	mov    al,ds:0x5b98179e
  40b049:	fwait
  40b04a:	scas   eax,DWORD PTR es:[edi]
  40b04b:	dec    eax
  40b04c:	retf   0x875a
  40b04f:	shl    BYTE PTR [ebx-0x26d2f61c],0xc6
  40b056:	pop    esi
  40b057:	(bad)  [ecx+edx*2+0x4d427425]
  40b05e:	mov    bh,0x5a
  40b060:	mov    edi,0xb9553291
  40b065:	xlat   BYTE PTR ds:[ebx]
  40b066:	imul   ebx,DWORD PTR [edi-0x4bf72e5c],0xffffffce
  40b06d:	fwait
  40b06e:	mov    edi,0x1fc2b4e1
  40b073:	mov    bh,0xa0
  40b075:	sub    edx,DWORD PTR [esi-0x4a]
  40b078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b079:	pop    ecx
  40b07a:	mov    dl,0x1d
  40b07c:	lock jp 0x40b08e
  40b07f:	push   edx
  40b080:	adc    ch,ah
  40b082:	pop    esi
  40b083:	sub    BYTE PTR ds:0x1877993b,bl
  40b089:	ror    bh,1
  40b08b:	fldenv [edi]
  40b08d:	icebp  
  40b08e:	sbb    DWORD PTR [ecx],0x9be67c91
  40b094:	inc    edi
  40b095:	retf   
  40b096:	aad    0x7a
  40b098:	cli    
  40b099:	pushf  
  40b09a:	dec    esp
  40b09b:	inc    esi
  40b09c:	push   ecx
  40b09d:	pop    ecx
  40b09e:	(bad)  
  40b09f:	iretw  
  40b0a1:	repz add DWORD PTR [esi],ebx
  40b0a4:	mov    edi,0x879d521a
  40b0a9:	sub    BYTE PTR [ecx-0xad6d171],al
  40b0af:	in     eax,dx
  40b0b0:	mov    ch,0xf1
  40b0b2:	xchg   ebp,eax
  40b0b3:	mov    esi,DWORD PTR [edi-0x78]
  40b0b6:	mov    BYTE PTR [eax],ah
  40b0b8:	stos   BYTE PTR es:[edi],al
  40b0b9:	xchg   edi,ecx
  40b0bb:	jge    0x40b047
  40b0bd:	mov    cl,bl
  40b0bf:	fstp   st(1)
  40b0c1:	cli    
  40b0c2:	cmc    
  40b0c3:	jg     0x40b096
  40b0c5:	repz add DWORD PTR ss:[ebx+0x73],edi
  40b0ca:	and    al,0x68
  40b0cc:	inc    eax
  40b0cd:	xor    BYTE PTR [ebx-0x2b552917],ah
  40b0d3:	xor    BYTE PTR [ebx+0x444bbfb],bl
  40b0d9:	daa    
  40b0da:	mov    bh,BYTE PTR [ebx]
  40b0dc:	out    dx,al
  40b0dd:	pop    ebx
  40b0de:	cmp    al,0xd7
  40b0e0:	lods   al,BYTE PTR ds:[esi]
  40b0e1:	scas   eax,DWORD PTR es:[edi]
  40b0e2:	fsubp  st(2),st
  40b0e4:	pop    edi
  40b0e5:	jmp    0x40b0ad
  40b0e7:	or     BYTE PTR [ecx+0x56dd38bb],bh
  40b0ed:	pop    eax
  40b0ee:	add    esp,esi
  40b0f0:	daa    
  40b0f1:	cmp    DWORD PTR [ecx-0x60],edi
  40b0f4:	sbb    eax,DWORD PTR [esi]
  40b0f6:	xor    al,0xbf
  40b0f8:	jecxz  0x40b09e
  40b0fa:	jb     0x40b16b
  40b0fc:	or     al,0xa1
  40b0fe:	icebp  
  40b0ff:	mov    edi,edi
  40b101:	mov    bh,0x33
  40b103:	pop    ebp
  40b104:	fist   WORD PTR [esi-0x1e23c346]
  40b10a:	cmp    al,0xf2
  40b10c:	(bad)  
  40b10d:	out    dx,al
  40b10e:	pushf  
  40b10f:	or     al,0x5c
  40b111:	cmp    eax,0x163ae2ce
  40b116:	outs   dx,BYTE PTR ds:[esi]
  40b117:	je     0x40b0b3
  40b119:	xchg   edx,eax
  40b11a:	pop    esi
  40b11b:	xchg   esi,eax
  40b11c:	jo     0x40b0ed
  40b11e:	addr16 jne 0x40b0df
  40b121:	mov    cl,0xb8
  40b123:	mov    ds:0x288b6e8d,al
  40b128:	push   ds
  40b129:	xor    DWORD PTR [eax+0x1],esp
  40b12c:	mov    bl,0x49
  40b12e:	xchg   edi,eax
  40b12f:	div    DWORD PTR [esi+0x39]
  40b132:	xor    al,0x65
  40b134:	mov    DWORD PTR [esi-0x4d],eax
  40b137:	pop    ecx
  40b138:	mov    BYTE PTR [eax+0x56325d5b],0x5e
  40b13f:	xor    DWORD PTR [ebp+0x37],esp
  40b142:	push   edx
  40b143:	lods   al,BYTE PTR ds:[esi]
  40b144:	inc    edi
  40b145:	mov    ecx,ebx
  40b147:	mov    ebx,0x382b921f
  40b14c:	jmp    0x40b15f
  40b14e:	jae    0x40b1b6
  40b150:	sbb    al,0x82
  40b152:	jb     0x40b0eb
  40b154:	mov    ebp,0x1f8c596f
  40b159:	or     eax,0x32c05f76
  40b15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b15f:	gs or  al,0x69
  40b162:	leave  
  40b163:	(bad)  
  40b164:	cmp    eax,0xcf7e3ef9
  40b169:	loope  0x40b187
  40b16b:	push   eax
  40b16c:	fcom   QWORD PTR [ebx+0x6086f8e]
  40b172:	sub    esi,DWORD PTR [esi]
  40b174:	cs std 
  40b176:	mov    dl,0xf7
  40b178:	retf   
  40b179:	pop    ebp
  40b17a:	lock or cl,0x1b
  40b17e:	mov    esi,0x3719bc65
  40b183:	mov    ecx,0x9ea21b04
  40b188:	fiadd  WORD PTR [ecx+0x7e]
  40b18b:	xchg   edx,eax
  40b18c:	xor    al,0x27
  40b18e:	fmul   DWORD PTR [edx+0x7145ec36]
  40b194:	xchg   esi,eax
  40b195:	cmc    
  40b196:	cmp    DWORD PTR [eax+0x71e767ba],ebx
  40b19c:	jl     0x40b172
  40b19e:	sbb    al,0xeb
  40b1a0:	xchg   ebp,eax
  40b1a1:	push   eax
  40b1a2:	xchg   ecx,eax
  40b1a3:	sahf   
  40b1a4:	inc    ebp
  40b1a5:	add    BYTE PTR [edx],cl
  40b1a7:	ins    BYTE PTR es:[edi],dx
  40b1a8:	mov    ?,edi
  40b1aa:	ret    
  40b1ab:	adc    al,BYTE PTR [esi-0x23]
  40b1ae:	aam    0x94
  40b1b0:	pop    edi
  40b1b1:	xchg   esi,eax
  40b1b2:	or     DWORD PTR [ebp+ebx*1-0x3087b792],ebx
  40b1b9:	cli    
  40b1ba:	inc    edx
  40b1bb:	loop   0x40b153
  40b1bd:	rep outs dx,DWORD PTR ds:[esi]
  40b1bf:	pop    edx
  40b1c0:	fnstenv [eax-0x5f]
  40b1c3:	push   esp
  40b1c4:	push   eax
  40b1c5:	xor    dl,ah
  40b1c7:	jecxz  0x40b17b
  40b1c9:	mov    WORD PTR [eax],es
  40b1cb:	xchg   ebx,eax
  40b1cc:	inc    esp
  40b1cd:	shl    BYTE PTR [esp+ecx*1+0x3f],0x92
  40b1d2:	lods   al,BYTE PTR ds:[esi]
  40b1d3:	fdivr  QWORD PTR [eax+eax*8-0x3a]
  40b1d7:	mov    ah,0x34
  40b1d9:	sub    DWORD PTR [ebp-0x2],esi
  40b1dc:	js     0x40b1aa
  40b1de:	push   ebp
  40b1df:	pop    eax
  40b1e0:	sub    esi,DWORD PTR [eax-0x2a0e93f1]
  40b1e6:	rcr    DWORD PTR [eax],0x8a
  40b1e9:	xchg   esp,eax
  40b1ea:	je     0x40b25c
  40b1ec:	jp     0x40b21f
  40b1ee:	and    ecx,DWORD PTR [edx-0x73]
  40b1f1:	(bad)  
  40b1f2:	xlat   BYTE PTR ds:[ebx]
  40b1f3:	out    0xaf,eax
  40b1f5:	nop
  40b1f6:	(bad)  
  40b1f7:	stos   BYTE PTR es:[edi],al
  40b1f8:	lock iret 
  40b1fa:	mov    bl,0x7a
  40b1fc:	bound  esp,QWORD PTR [esi+0x65]
  40b1ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b200:	ja     0x40b1bd
  40b202:	aaa    
  40b203:	fcmovbe st,st(1)
  40b205:	inc    edi
  40b206:	inc    ebp
  40b207:	push   es
  40b208:	sub    ecx,esp
  40b20a:	cmp    al,0x43
  40b20c:	dec    esp
  40b20d:	mov    bh,0x37
  40b20f:	or     edi,DWORD PTR [edx-0x6465b215]
  40b215:	sub    bl,ah
  40b217:	ja     0x40b1fe
  40b219:	cli    
  40b21a:	gs cdq 
  40b21c:	pop    ebx
  40b21d:	stos   DWORD PTR es:[edi],eax
  40b21e:	imul   edx,esp,0x59c99c59
  40b224:	jo     0x40b1da
  40b226:	lahf   
  40b227:	add    eax,0xb36cc078
  40b22c:	cmp    DWORD PTR [eax+0x5a8dc4fe],ebx
  40b232:	sti    
  40b233:	popa   
  40b234:	dec    edi
  40b235:	and    eax,DWORD PTR [edx]
  40b237:	test   al,0xa9
  40b239:	(bad)  
  40b23b:	xchg   esi,eax
  40b23c:	sub    al,0x86
  40b23e:	cmp    DWORD PTR ds:0x3c411ff,edi
  40b244:	pop    ecx
  40b245:	seto   BYTE PTR [ebx-0x5c6b4477]
  40b24c:	aaa    
  40b24d:	test   al,0x2a
  40b24f:	popf   
  40b250:	xchg   DWORD PTR [ecx+0x77629843],ebx
  40b256:	xlat   BYTE PTR ds:[ebx]
  40b257:	jno    0x40b2b0
  40b259:	das    
  40b25a:	imul   esi,DWORD PTR [edx+ecx*1],0xa0febe2c
  40b261:	imul   esi,DWORD PTR [ebx-0x6fa7fbdf],0x7af120ff
  40b26b:	stc    
  40b26c:	pop    es
  40b26d:	xor    eax,0xc979c9b1
  40b272:	mov    WORD PTR [ebp+0x25],ss
  40b275:	sbb    al,0xa2
  40b277:	je     0x40b20c
  40b279:	in     al,0xbd
  40b27b:	mov    dh,0xd0
  40b27d:	out    0xd0,eax
  40b27f:	lods   eax,DWORD PTR ds:[esi]
  40b280:	aam    0xcf
  40b282:	mov    dh,0x63
  40b284:	ds jge 0x40b2e8
  40b287:	fcmovbe st,st(5)
  40b289:	mov    cl,0xb4
  40b28b:	cmp    DWORD PTR ds:0x5757b233,0x8076ec89
  40b295:	inc    ebx
  40b296:	and    DWORD PTR [ecx+0x2e],edx
  40b299:	dec    esp
  40b29a:	pop    esp
  40b29b:	fcmovnu st,st(5)
  40b29d:	pop    ebx
  40b29e:	add    DWORD PTR [eax+0x44026e51],ebx
  40b2a4:	pushf  
  40b2a5:	lods   eax,DWORD PTR ds:[esi]
  40b2a6:	sbb    DWORD PTR [ebx+0x41],ebp
  40b2a9:	scas   eax,DWORD PTR es:[edi]
  40b2aa:	mov    edi,0xcf58ce98
  40b2af:	lahf   
  40b2b0:	sub    ebp,DWORD PTR [edx+ebx*2+0x45]
  40b2b4:	dec    edx
  40b2b5:	mov    eax,ds:0x653c3fb4
  40b2ba:	sahf   
  40b2bb:	scas   eax,DWORD PTR es:[edi]
  40b2bc:	push   edx
  40b2bd:	inc    esi
  40b2be:	sbb    ch,dl
  40b2c0:	jne    0x40b246
  40b2c2:	mov    bh,0x92
  40b2c4:	jns    0x40b267
  40b2c6:	popf   
  40b2c7:	out    dx,eax
  40b2c8:	push   edi
  40b2c9:	popf   
  40b2ca:	add    cl,bh
  40b2cc:	bound  ebx,QWORD PTR [eax-0x78]
  40b2cf:	push   ds
  40b2d0:	outs   dx,BYTE PTR ds:[esi]
  40b2d1:	mov    ebx,0xa297cc4b
  40b2d6:	enter  0x3fe9,0x7b
  40b2da:	dec    edi
  40b2db:	out    0xdf,eax
  40b2dd:	inc    ecx
  40b2de:	(bad)  
  40b2df:	adc    al,0x65
  40b2e1:	and    dl,bl
  40b2e3:	cmp    eax,0xafd7c292
  40b2e8:	push   ecx
  40b2e9:	neg    DWORD PTR [ebx-0x1b]
  40b2ec:	cdq    
  40b2ed:	sar    DWORD PTR [ebp+eax*8+0x2a],cl
  40b2f1:	pop    ebp
  40b2f2:	jns    0x40b298
  40b2f4:	dec    eax
  40b2f5:	add    esi,ecx
  40b2f7:	inc    esp
  40b2f8:	out    dx,al
  40b2f9:	dec    esp
  40b2fa:	xlat   BYTE PTR ds:[ebx]
  40b2fb:	xchg   ebp,eax
  40b2fc:	xor    eax,0x9506916d
  40b301:	dec    esi
  40b302:	adc    BYTE PTR [eax+eax*4],ch
  40b305:	xor    ebp,esp
  40b307:	sahf   
  40b308:	repnz mov ds:0x77b24143,eax
  40b30e:	jns    0x40b301
  40b310:	shl    BYTE PTR [edx-0x680ea471],0xe6
  40b317:	xchg   ah,ah
  40b319:	cmp    DWORD PTR [esi+0x208b15e0],esp
  40b31f:	add    edi,DWORD PTR [eax-0x8]
  40b322:	js     0x40b377
  40b324:	repnz xor BYTE PTR [eax+0xb],ah
  40b328:	repz push esp
  40b32a:	call   0x5ef8:0x1ec8bb4b
  40b331:	mov    ch,BYTE PTR [eax]
  40b333:	add    al,0xee
  40b335:	pop    ebp
  40b336:	imul   esi,DWORD PTR [eax-0x6dfa44fb],0xb8438d05
  40b340:	jge    0x40b2e3
  40b342:	push   ss
  40b343:	dec    edi
  40b344:	dec    eax
  40b345:	shl    edi,cl
  40b347:	in     eax,dx
  40b348:	sbb    edx,DWORD PTR [edi+0x78]
  40b34b:	xor    eax,0x6e60c426
  40b350:	xlat   BYTE PTR ds:[ebx]
  40b351:	cwde   
  40b352:	shl    esi,0x15
  40b355:	mov    ebx,0x8040532
  40b35a:	mov    ds:0x6470c07e,al
  40b35f:	test   al,0x30
  40b361:	sub    BYTE PTR [edi+0x23],ch
  40b364:	(bad)
  40b368:	jp     0x40b361
  40b36a:	dec    esp
  40b36b:	sub    al,0x31
  40b36d:	adc    esi,DWORD PTR [ebx-0x776e4b04]
  40b373:	and    al,0x64
  40b375:	xchg   BYTE PTR [eax],al
  40b377:	or     BYTE PTR [edi+0x5ecab76b],al
  40b37d:	jbe    0x40b371
  40b37f:	scas   al,BYTE PTR es:[edi]
  40b380:	or     DWORD PTR [edx-0x61],ecx
  40b383:	jecxz  0x40b3c3
  40b385:	addr16 out dx,al
  40b387:	pop    ss
  40b388:	xchg   dh,bh
  40b38a:	stos   BYTE PTR es:[edi],al
  40b38b:	stos   DWORD PTR es:[edi],eax
  40b38c:	xor    al,0xe
  40b38e:	push   esi
  40b38f:	loope  0x40b3e8
  40b391:	sahf   
  40b392:	cmp    edi,DWORD PTR [edi+0x36]
  40b395:	in     al,0x90
  40b397:	lea    edx,[eax-0x1a04af1e]
  40b39d:	fadd   DWORD PTR fs:[edi+0x65]
  40b3a1:	ds jae 0x40b360
  40b3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3a5:	imul   edx,DWORD PTR [ecx],0x3c
  40b3a8:	into   
  40b3a9:	test   DWORD PTR [edi-0x3b],0xa61c60c2
  40b3b0:	imul   edi,edx
  40b3b3:	aam    0xb2
  40b3b5:	les    edi,FWORD PTR [ebp-0x174658ab]
  40b3bb:	sub    DWORD PTR [ecx],ecx
  40b3bd:	xchg   edi,eax
  40b3be:	jle    0x40b3d7
  40b3c0:	adc    al,0x2b
  40b3c2:	jb     0x40b3db
  40b3c4:	and    BYTE PTR [edi-0x62db846c],al
  40b3ca:	mov    bh,0xfd
  40b3cc:	les    esp,FWORD PTR [ebx-0x21]
  40b3cf:	or     al,0xdf
  40b3d1:	ret    
  40b3d2:	xor    eax,0xe7c637a1
  40b3d7:	call   0x31cb:0x248cc5ed
  40b3de:	mov    ds:0x3b4da8c3,al
  40b3e3:	pushf  
  40b3e4:	mov    gs,esi
  40b3e6:	je     0x40b36b
  40b3e8:	mov    bl,0xe2
  40b3ea:	cmp    DWORD PTR [ebx],edx
  40b3ec:	jne    0x40b443
  40b3ee:	xchg   DWORD PTR [eax],ebp
  40b3f0:	adc    al,BYTE PTR [ebp+eax*8+0x20]
  40b3f4:	cmp    ebx,DWORD PTR [esi-0xe]
  40b3f7:	mov    bl,BYTE PTR [eax-0x6cd26563]
  40b3fd:	enter  0xa5dd,0x16
  40b401:	dec    eax
  40b402:	iret   
  40b403:	cmp    esp,DWORD PTR [eax+0x75dcd6d2]
  40b409:	mov    bl,BYTE PTR [ebx]
  40b40b:	hlt    
  40b40c:	xor    BYTE PTR [edx],al
  40b40e:	mov    ecx,0xff16078c
  40b413:	push   0x5e22efab
  40b418:	nop
  40b419:	and    eax,DWORD PTR [eax-0x78]
  40b41c:	out    dx,eax
  40b41d:	dec    esp
  40b41e:	pop    ecx
  40b41f:	lds    ebp,FWORD PTR [edi+0x16beeba2]
  40b425:	leave  
  40b426:	jle    0x40b447
  40b428:	xchg   ebp,eax
  40b429:	imul   esi,edx,0x1e
  40b42c:	imul   esp,DWORD PTR [edx+0x58],0xffffffdc
  40b430:	inc    ebp
  40b431:	dec    edx
  40b432:	pop    es
  40b433:	out    dx,al
  40b434:	xchg   edi,eax
  40b435:	push   0x4ace97b
  40b43a:	(bad)  
  40b43c:	xor    bl,BYTE PTR [esi]
  40b43e:	lods   eax,DWORD PTR ds:[esi]
  40b43f:	mov    cl,0xae
  40b441:	out    dx,al
  40b442:	mov    eax,0xe4dd4c46
  40b447:	fdivr  DWORD PTR [ecx-0x509a80ca]
  40b44d:	xchg   ebx,eax
  40b44e:	mov    esp,DWORD PTR [edi+0x4ac62839]
  40b454:	mov    esi,DWORD PTR [esi+0x6a]
  40b457:	fcom   DWORD PTR [edi]
  40b459:	repnz pop eax
  40b45b:	rol    DWORD PTR [eax*4+0x26154281],0xf6
  40b463:	fist   WORD PTR [eax]
  40b465:	xor    DWORD PTR [edx],0x55
  40b468:	cmp    al,0x10
  40b46b:	outs   dx,DWORD PTR ds:[esi]
  40b46c:	sub    dh,BYTE PTR [ebx]
  40b46e:	mov    edx,0x4fbd81c0
  40b473:	stc    
  40b474:	pop    ebx
  40b475:	dec    edx
  40b476:	or     al,0x1b
  40b478:	fbstp  TBYTE PTR [ebx-0x33]
  40b47b:	pop    edi
  40b47c:	cs aas 
  40b47e:	lods   al,BYTE PTR ds:[esi]
  40b47f:	(bad)  
  40b480:	mov    ah,BYTE PTR [ecx+eax*4+0x12]
  40b484:	test   eax,0xaad8ee42
  40b489:	inc    ecx
  40b48a:	imul   esp,DWORD PTR [ecx+0x21956752],0x9b0c596e
  40b494:	popa   
  40b495:	add    al,0xed
  40b497:	test   edi,eax
  40b499:	pusha  
  40b49a:	push   ss
  40b49b:	shl    BYTE PTR [esi],1
  40b49d:	daa    
  40b49e:	jb     0x40b49e
  40b4a0:	test   edi,eax
  40b4a2:	jbe    0x40b466
  40b4a4:	inc    ebp
  40b4a5:	in     al,0xa4
  40b4a7:	outs   dx,BYTE PTR ds:[esi]
  40b4a8:	shl    DWORD PTR [edx+0x58],1
  40b4ab:	jl     0x40b4a9
  40b4ad:	push   0x8ac6d4a
  40b4b2:	repz cmp al,BYTE PTR fs:[esi+0x56]
  40b4b7:	in     eax,0x7
  40b4b9:	push   ebx
  40b4ba:	cmp    edx,ebp
  40b4bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b4bd:	dec    ebp
  40b4be:	mov    ebx,ecx
  40b4c0:	test   eax,0x613d3c5d
  40b4c5:	mov    eax,ds:0x4af69ce
  40b4ca:	mov    al,0xa0
  40b4cc:	mov    cs,WORD PTR [esi]
  40b4ce:	inc    ecx
  40b4cf:	xchg   ecx,eax
  40b4d0:	lds    eax,FWORD PTR [esp+ebx*4+0x40]
  40b4d4:	jp     0x40b4a4
  40b4d6:	out    dx,al
  40b4d7:	dec    ebp
  40b4d8:	inc    ecx
  40b4d9:	inc    ebx
  40b4da:	dec    eax
  40b4db:	retw   0x9b12
  40b4df:	pop    edx
  40b4e0:	loopne 0x40b54d
  40b4e2:	sti    
  40b4e3:	add    eax,0xffa5ac0c
  40b4e8:	ja     0x40b558
  40b4ea:	aad    0x3c
  40b4ec:	mov    ?,edx
  40b4ee:	popf   
  40b4ef:	add    edx,ecx
  40b4f1:	lea    eax,[ecx]
  40b4f3:	add    DWORD PTR [ecx],ecx
  40b4f5:	out    0x42,al
  40b4f7:	scas   al,BYTE PTR es:[edi]
  40b4f8:	lahf   
  40b4f9:	aad    0xaa
  40b4fb:	push   cs
  40b4fc:	ins    DWORD PTR es:[edi],dx
  40b4fd:	fsubr  QWORD PTR [edi+eax*1]
  40b500:	dec    eax
  40b501:	cli    
  40b502:	(bad)  
  40b503:	mov    ecx,0xe58f2a5c
  40b508:	cwde   
  40b509:	iret   
  40b50a:	scas   al,BYTE PTR es:[edi]
  40b50b:	cli    
  40b50c:	inc    ebx
  40b50d:	outs   dx,DWORD PTR ds:[esi]
  40b50e:	bound  esi,QWORD PTR [edi-0x39]
  40b511:	mov    ds:0xd1b5cd36,al
  40b516:	es jbe 0x40b4de
  40b519:	mov    ch,0x4c
  40b51b:	xchg   esi,eax
  40b51c:	xchg   DWORD PTR [ebx],esp
  40b51e:	jg     0x40b506
  40b520:	sbb    al,0xd7
  40b522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b523:	lea    esp,[edx-0x3e6b31cc]
  40b529:	sbb    eax,DWORD PTR [edi+0x5]
  40b52c:	add    DWORD PTR [ebp+0x1d28ca48],edi
  40b532:	adc    edi,DWORD PTR [edi]
  40b534:	imul   edi,DWORD PTR [ebx],0x920dfbb7
  40b53a:	sub    edi,DWORD PTR [ebx]
  40b53c:	jmp    0xa8919be6
  40b541:	sbb    eax,0x3d03278
  40b546:	jp     0x40b4f9
  40b548:	dec    ecx
  40b549:	jns    0x40b52b
  40b54b:	jp     0x40b547
  40b54d:	pop    esp
  40b54e:	int    0xef
  40b550:	fucomi st,st(4)
  40b552:	cmp    al,0xe8
  40b554:	loopne 0x40b4dd
  40b556:	retf   0xe8f8
  40b559:	pop    ss
  40b55a:	enter  0xbf7e,0x1f
  40b55e:	out    dx,eax
  40b55f:	push   ss
  40b560:	fild   WORD PTR [ebp+0x2a]
  40b563:	int3   
  40b564:	ds xchg esi,eax
  40b566:	data16 adc BYTE PTR [ecx-0x6f],0xa
  40b56b:	pop    ds
  40b56c:	xchg   esi,eax
  40b56d:	mov    al,ds:0xecb5c7e2
  40b572:	cmp    bh,BYTE PTR [eax-0x56]
  40b575:	lods   eax,DWORD PTR ds:[esi]
  40b576:	xor    al,0x19
  40b578:	add    bh,cl
  40b57a:	out    dx,eax
  40b57b:	test   BYTE PTR [edi+ecx*8+0x5a7e170d],al
  40b582:	std    
  40b583:	adc    ebp,esi
  40b585:	std    
  40b586:	imul   ecx,DWORD PTR [ebp+edx*8-0x68a2dc29],0xc85a8d87
  40b591:	add    bh,cl
  40b593:	dec    BYTE PTR [eax+0x7e]
  40b596:	data16 sbb bl,al
  40b599:	leave  
  40b59a:	push   ecx
  40b59b:	dec    ebx
  40b59c:	adc    eax,0x9766864a
  40b5a1:	mov    ah,0x26
  40b5a3:	loop   0x40b624
  40b5a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5a6:	adc    ch,cl
  40b5a8:	sti    
  40b5a9:	cmc    
  40b5aa:	inc    edx
  40b5ab:	xor    al,0x76
  40b5ad:	or     ebx,DWORD PTR [eax-0x68392ebc]
  40b5b3:	add    ecx,ecx
  40b5b5:	jmp    edx
  40b5b7:	mov    ch,0xad
  40b5b9:	outs   dx,DWORD PTR ds:[esi]
  40b5ba:	arpl   si,ax
  40b5bc:	leave  
  40b5bd:	imul   ecx,ecx,0x4a4b5031
  40b5c3:	sti    
  40b5c4:	leave  
  40b5c5:	retf   
  40b5c6:	out    dx,al
  40b5c7:	fisttp QWORD PTR [esi+0x1048c24a]
  40b5cd:	jne    0x40b56d
  40b5cf:	jp     0x40b56c
  40b5d1:	push   DWORD PTR [ebx+0x74]
  40b5d4:	stos   DWORD PTR es:[edi],eax
  40b5d5:	add    DWORD PTR [edx],0x26
  40b5d8:	push   esi
  40b5d9:	jg     0x40b644
  40b5db:	jb     0x40b5df
  40b5dd:	sbb    DWORD PTR [esi-0x786b68ed],0x2c07f40d
  40b5e7:	sub    BYTE PTR [edx-0x2f3ddb5e],ah
  40b5ed:	push   eax
  40b5ee:	dec    esp
  40b5ef:	dec    esp
  40b5f0:	fdiv   QWORD PTR [edi]
  40b5f2:	adc    ecx,DWORD PTR [ebp-0x79]
  40b5f5:	pushf  
  40b5f6:	fstp   DWORD PTR [ebp-0x16e58c28]
  40b5fc:	inc    eax
  40b5fd:	bound  edx,QWORD PTR [ecx]
  40b5ff:	fwait
  40b600:	pushfw 
  40b602:	lock je 0x40b617
  40b605:	or     DWORD PTR [ecx+0xab8fb09],esi
  40b60b:	rol    BYTE PTR [bp+di-0x46],1
  40b60f:	and    BYTE PTR [edx+eiz*2-0x585d2609],0x24
  40b617:	pop    ss
  40b618:	icebp  
  40b619:	data16 mov al,ds:0x5e9be50e
  40b61f:	mov    eax,0x1affced4
  40b624:	jns    0x40b5e4
  40b626:	pop    ebp
  40b627:	inc    BYTE PTR [ecx-0x269f24cf]
  40b62d:	clc    
  40b62e:	cdq    
  40b62f:	mov    DWORD PTR [ebx],edi
  40b631:	and    DWORD PTR [ecx+0x24860c23],ecx
  40b637:	test   DWORD PTR [ebx+0x7a500be5],0x6d4f8488
  40b641:	pop    edi
  40b642:	mov    esi,0x3323d026
  40b647:	adc    DWORD PTR [esi+0x66],eax
  40b64a:	fst    DWORD PTR ds:0x63d4e8af
  40b650:	loope  0x40b635
  40b652:	test   BYTE PTR [edi+0x4e],bh
  40b655:	inc    eax
  40b656:	call   esi
  40b658:	sub    al,0x5b
  40b65a:	xor    dl,BYTE PTR [esp+ebx*4+0x54]
  40b65e:	add    BYTE PTR [edx+0x6bd8b925],0x19
  40b665:	xchg   esp,eax
  40b666:	push   ebp
  40b667:	adc    eax,0xe3c423d9
  40b66c:	ins    BYTE PTR es:[edi],dx
  40b66d:	or     bl,BYTE PTR [ecx]
  40b66f:	into   
  40b670:	mov    ?,edi
  40b672:	test   eax,esp
  40b674:	and    cl,BYTE PTR [edx+0x62]
  40b677:	and    al,0xe8
  40b679:	retf   0x9795
  40b67c:	mov    dh,0x96
  40b67e:	and    bl,BYTE PTR ds:0x9bb892ea
  40b684:	(bad)  
  40b686:	in     eax,dx
  40b687:	aam    0xa5
  40b689:	mov    al,0x99
  40b68b:	pop    ebp
  40b68c:	nop
  40b68d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b68e:	daa    
  40b68f:	pop    ebx
  40b690:	jge    0x40b66e
  40b692:	mov    eax,ds:0x9b6cc2f2
  40b697:	xchg   ebx,eax
  40b698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b699:	repz mov ebx,0xd47cb1a7
  40b69f:	xchg   ecx,eax
  40b6a0:	out    0x9b,eax
  40b6a2:	stc    
  40b6a3:	aas    
  40b6a4:	cmc    
  40b6a5:	push   ebx
  40b6a6:	mov    ah,0xa7
  40b6a8:	jg     0x40b6ad
  40b6aa:	icebp  
  40b6ab:	jmp    0xea5b2500
  40b6b0:	pop    ebx
  40b6b1:	jle    0x40b664
  40b6b3:	out    0xbc,al
  40b6b5:	dec    ecx
  40b6b6:	cdq    
  40b6b7:	jecxz  0x40b684
  40b6b9:	jb     0x40b692
  40b6bb:	dec    edi
  40b6bc:	pusha  
  40b6bd:	mul    BYTE PTR [eax+0x77f67a9c]
  40b6c3:	nop
  40b6c4:	pop    esi
  40b6c5:	iret   
  40b6c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6c7:	xchg   esp,eax
  40b6c8:	mov    ebp,0xa988b31c
  40b6cd:	popa   
  40b6ce:	iret   
  40b6cf:	lea    ecx,[eax+0x38]
  40b6d2:	rol    BYTE PTR [edx-0x6280f612],0xc1
  40b6d9:	inc    edi
  40b6da:	xor    ecx,ebp
  40b6dc:	mov    edi,0x3e336997
  40b6e1:	push   cs
  40b6e2:	test   BYTE PTR [ebx-0x41],0x33
  40b6e6:	fdiv   DWORD PTR [eax+edi*1+0x14324f76]
  40b6ed:	or     DWORD PTR [esi-0x52b72cd4],0xfffffff3
  40b6f4:	pop    edx
  40b6f5:	daa    
  40b6f6:	sbb    dl,BYTE PTR [ebx+0x4a456134]
  40b6fc:	adc    al,0x96
  40b6fe:	mov    ds:0x920cf00e,al
  40b703:	and    ecx,esi
  40b705:	or     eax,0xa90276c8
  40b70a:	cmp    DWORD PTR [ebp+0x5064e260],ebx
  40b710:	or     edx,esi
  40b712:	sbb    eax,0xf7d98030
  40b717:	or     ecx,edx
  40b719:	xor    ebp,edi
  40b71b:	adc    bl,cl
  40b71d:	xor    eax,0x474fe4a8
  40b722:	or     al,0x2a
  40b724:	ret    
  40b725:	hlt    
  40b726:	jb     0x40b76b
  40b728:	lods   al,BYTE PTR ds:[esi]
  40b729:	jge    0x40b76d
  40b72b:	arpl   WORD PTR [edx],bp
  40b72d:	cmp    al,BYTE PTR [edx-0x1a0620e8]
  40b733:	push   ebx
  40b734:	fld    DWORD PTR [edx+ecx*1]
  40b737:	out    dx,al
  40b738:	mov    ch,0x29
  40b73a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b73b:	in     al,dx
  40b73c:	pop    ss
  40b73d:	pop    ds
  40b73e:	xor    bh,BYTE PTR [esi+0x6b]
  40b741:	int3   
  40b742:	mov    dh,0xc5
  40b744:	fadd   QWORD PTR [edx-0x1b089360]
  40b74a:	mov    ds:0x2d11dd3f,al
  40b74f:	dec    edi
  40b750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b751:	sbb    cl,bh
  40b753:	mov    dl,0x1b
  40b755:	daa    
  40b756:	adc    eax,0xb370f9ee
  40b75b:	mov    ds:0x197e0a11,eax
  40b760:	ins    DWORD PTR es:[edi],dx
  40b761:	daa    
  40b762:	pop    DWORD PTR [edi+0x3f]
  40b765:	(bad)  
  40b766:	jp     0x40b7cb
  40b768:	test   DWORD PTR [ebx-0x69],edx
  40b76b:	xlat   BYTE PTR ds:[ebx]
  40b76c:	les    ebx,FWORD PTR [eax-0x59]
  40b76f:	mov    DWORD PTR [eax+ebp*1+0x620219d7],esp
  40b776:	jg     0x40b757
  40b778:	jp     0x40b74d
  40b77a:	add    BYTE PTR [eax+esi*4],al
  40b77d:	je     0x40b728
  40b77f:	lahf   
  40b780:	ins    DWORD PTR es:[edi],dx
  40b781:	xchg   ecx,eax
  40b782:	icebp  
  40b783:	dec    ebx
  40b784:	inc    eax
  40b785:	(bad)  
  40b786:	push   0x32
  40b788:	out    0x6c,eax
  40b78a:	mov    dh,0xd8
  40b78c:	xlat   BYTE PTR ds:[ebx]
  40b78d:	sub    ecx,DWORD PTR [esp+eax*8+0x12]
  40b791:	test   al,0xef
  40b793:	mov    ebp,0xfaaa234a
  40b799:	into   
  40b79a:	push   ds
  40b79b:	lods   al,BYTE PTR ds:[esi]
  40b79c:	push   eax
  40b79d:	scas   al,BYTE PTR es:[edi]
  40b79e:	in     eax,dx
  40b79f:	jbe    0x40b813
  40b7a1:	push   ebx
  40b7a2:	mov    ds:0xa7120ae4,eax
  40b7a7:	xor    esi,DWORD PTR [ebx+esi*8+0xb67239e]
  40b7ae:	mov    bh,0x84
  40b7b0:	pop    ecx
  40b7b1:	sub    esp,edi
  40b7b3:	mov    ds:0x377fe247,al
  40b7b8:	mov    ecx,0x66ed15a
  40b7bd:	ret    
  40b7be:	or     eax,0xf5f77c00
  40b7c3:	or     esi,DWORD PTR [edx-0x4b70f737]
  40b7c9:	in     al,0x14
  40b7cb:	add    ch,bh
  40b7cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7ce:	test   al,0x1d
  40b7d0:	pop    es
  40b7d1:	(bad)  
  40b7d2:	pop    esi
  40b7d3:	add    DWORD PTR [edx-0x20],ebx
  40b7d6:	dec    ebp
  40b7d7:	daa    
  40b7d8:	xchg   ebp,eax
  40b7d9:	xlat   BYTE PTR ds:[ebx]
  40b7da:	fs dec ebp
  40b7dc:	pop    edi
  40b7dd:	or     al,0x6f
  40b7df:	out    dx,al
  40b7e0:	test   eax,edi
  40b7e2:	xor    eax,0x93e75553
  40b7e7:	mov    esp,0x8a6d81a2
  40b7ec:	in     eax,dx
  40b7ed:	sub    al,BYTE PTR [edi+0x72f52089]
  40b7f3:	retf   0x87d4
  40b7f6:	mov    dl,0x99
  40b7f8:	inc    eax
  40b7f9:	aas    
  40b7fa:	loope  0x40b802
  40b7fc:	in     eax,0xdd
  40b7fe:	dec    ebx
  40b7ff:	sti    
  40b800:	xchg   ecx,eax
  40b801:	neg    ch
  40b803:	leave  
  40b804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b805:	push   ds
  40b806:	xor    DWORD PTR [ecx],edx
  40b808:	push   ecx
  40b809:	push   0x8300cb8f
  40b80e:	out    dx,eax
  40b80f:	push   esi
  40b810:	mov    cl,0xe5
  40b812:	out    0x11,al
  40b814:	cmp    ax,WORD PTR [edi-0x39b3586d]
  40b81b:	stc    
  40b81c:	cdq    
  40b81d:	jnp    0x40b86f
  40b81f:	lods   al,BYTE PTR ds:[esi]
  40b820:	int3   
  40b821:	adc    edx,DWORD PTR [ebx+0x89789eb]
  40b827:	pop    ds
  40b828:	or     al,0x53
  40b82a:	xchg   ebx,eax
  40b82b:	mov    al,0x83
  40b82d:	lahf   
  40b82e:	psubw  mm2,mm2
  40b831:	sub    ebp,DWORD PTR [ebp-0x830a317]
  40b837:	sub    dh,BYTE PTR [ecx-0x3a]
  40b83a:	jp     0x40b7cc
  40b83c:	cld    
  40b83d:	xor    al,0x3c
  40b83f:	pushf  
  40b840:	arpl   WORD PTR [eax-0x68],cx
  40b843:	mov    ecx,0xef516454
  40b848:	fnstenv [edx-0x6554924d]
  40b84e:	ret    0x3115
  40b851:	pop    ebp
  40b852:	ins    BYTE PTR es:[edi],dx
  40b853:	jge    0x40b827
  40b855:	imul   eax,ecx,0xb86a4dec
  40b85b:	clc    
  40b85c:	jp     0x40b85c
  40b85e:	hlt    
  40b85f:	mov    al,ds:0x5239e95e
  40b864:	pop    DWORD PTR [ebx+0x702e0af8]
  40b86a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b86b:	xchg   esi,eax
  40b86c:	adc    BYTE PTR [edi+edi*8],0x97
  40b870:	fcomp  st(2)
  40b872:	xor    BYTE PTR [ebx+ebp*1-0x5e],bh
  40b876:	cmc    
  40b877:	outs   dx,BYTE PTR ds:[esi]
  40b878:	pop    edi
  40b879:	ja     0x40b8f2
  40b87b:	sbb    dl,bh
  40b87d:	stos   DWORD PTR es:[edi],eax
  40b87e:	jecxz  0x40b801
  40b880:	pop    ebp
  40b881:	pop    esi
  40b882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b883:	pop    edx
  40b884:	nop
  40b885:	in     eax,0xdd
  40b887:	out    dx,al
  40b888:	in     al,dx
  40b889:	packssdw mm0,QWORD PTR [ebp+0x28]
  40b88d:	cmp    ebx,ecx
  40b88f:	or     BYTE PTR [esi+0x9],dh
  40b892:	sub    edx,ebx
  40b894:	aaa    
  40b895:	push   ebx
  40b896:	xor    ebx,DWORD PTR [ebp-0x3770759c]
  40b89c:	adc    al,BYTE PTR [edx+0x4]
  40b89f:	add    ebp,esp
  40b8a1:	jnp    0x40b86c
  40b8a3:	nop
  40b8a4:	jne    0x40b881
  40b8a6:	mov    esi,0xa712bc3f
  40b8ab:	pop    ebx
  40b8ac:	fnstcw WORD PTR [edi]
  40b8ae:	push   edx
  40b8af:	jmp    0x40b848
  40b8b1:	add    ch,dl
  40b8b3:	ret    
  40b8b4:	sub    dh,BYTE PTR [ebp-0x4ba8b1e4]
  40b8ba:	(bad)
  40b8bd:	data16 sbb dh,BYTE PTR [ebp-0x67]
  40b8c1:	outs   dx,BYTE PTR ds:[esi]
  40b8c2:	jo     0x40b8ef
  40b8c4:	gs shl dl,0xb4
  40b8c8:	pushf  
  40b8c9:	ret    0x7004
  40b8cc:	pop    ebp
  40b8cd:	lods   al,BYTE PTR ds:[esi]
  40b8ce:	pushf  
  40b8cf:	shr    DWORD PTR [ebx],1
  40b8d1:	in     eax,dx
  40b8d2:	je     0x40b875
  40b8d4:	(bad)  
  40b8d5:	sbb    eax,0x63f49476
  40b8da:	and    dl,BYTE PTR [eax-0x33c031c6]
  40b8e0:	inc    esp
  40b8e1:	mov    ch,0xa0
  40b8e3:	sub    al,0x1d
  40b8e5:	adc    al,0x6c
  40b8e7:	call   DWORD PTR [eax]
  40b8e9:	mov    ebx,0x7d4adcc0
  40b8ee:	pusha  
  40b8ef:	xlat   BYTE PTR ds:[ebx]
  40b8f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8f2:	cld    
  40b8f3:	add    al,0x38
  40b8f5:	pop    eax
  40b8f6:	enter  0x5100,0xd0
  40b8fa:	pusha  
  40b8fb:	push   esp
  40b8fc:	xlat   BYTE PTR ds:[ebx]
  40b8fd:	sbb    al,0xb3
  40b8ff:	leave  
  40b900:	mov    bl,0xac
  40b902:	push   ds
  40b903:	int    0x17
  40b905:	dec    ebx
  40b906:	xor    al,0xd1
  40b908:	(bad)  
  40b909:	xchg   esi,eax
  40b90a:	jns    0x40b917
  40b90c:	ret    0xb485
  40b90f:	fsubp  st(7),st
  40b911:	jne    0x40b990
  40b913:	jge    0x40b917
  40b915:	in     al,0x54
  40b917:	call   0x8608ab14
  40b91c:	inc    ecx
  40b91d:	mov    DWORD PTR [ebx+0x5a7e6b7d],ebx
  40b923:	inc    ebx
  40b924:	sbb    ecx,DWORD PTR [ebx+0x7f]
  40b927:	cld    
  40b928:	mov    ah,0x61
  40b92a:	ss das 
  40b92c:	(bad)  
  40b92d:	pushf  
  40b92e:	mov    dl,0xa
  40b930:	inc    edi
  40b931:	dec    ebx
  40b932:	cmp    DWORD PTR [edx],edx
  40b934:	test   BYTE PTR [edx+0x7cec3f63],0x94
  40b93b:	push   ebp
  40b93c:	retf   
  40b93d:	pusha  
  40b93e:	jnp    0x40b92c
  40b940:	jg     0x40b95d
  40b942:	pop    ds
  40b943:	shl    esp,1
  40b945:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b946:	cmc    
  40b947:	add    eax,DWORD PTR [ebx+0x1b]
  40b94a:	in     al,0x7
  40b94c:	imul   edi,DWORD PTR ds:0xefd5c4c9,0xffffffc3
  40b953:	test   BYTE PTR [esi+0x67],ah
  40b956:	in     eax,dx
  40b957:	push   ss
  40b958:	imul   edi,DWORD PTR [ebp+0x3b],0xffffffbe
  40b95c:	mov    ah,0xf2
  40b95e:	mov    ebp,0xf12936f
  40b963:	stos   BYTE PTR es:[edi],al
  40b964:	jp     0x40b967
  40b966:	sbb    DWORD PTR [ebx],ebp
  40b968:	aas    
  40b969:	push   0xffffffdd
  40b96b:	add    al,0x23
  40b96d:	scas   al,BYTE PTR es:[edi]
  40b96e:	pcmpgtd mm7,QWORD PTR [esi-0x7f0234bb]
  40b975:	sub    eax,0xa8e0dd8d
  40b97a:	cmp    al,0x34
  40b97c:	xor    al,0xfd
  40b97e:	add    BYTE PTR [edx+0x51],dl
  40b981:	or     eax,0xb44c176f
  40b986:	stos   BYTE PTR es:[edi],al
  40b987:	and    DWORD PTR [esi+0x55],eax
  40b98a:	mov    ecx,DWORD PTR [edx-0x26]
  40b98d:	sub    dl,ah
  40b98f:	rcr    BYTE PTR [eax-0x7d],cl
  40b992:	daa    
  40b993:	lahf   
  40b994:	and    eax,0x45c57e80
  40b999:	sbb    al,0x8d
  40b99b:	cmp    al,0x46
  40b99d:	xor    BYTE PTR [ecx-0x4b],0x7b
  40b9a1:	jb     0x40b9bf
  40b9a3:	ins    DWORD PTR es:[edi],dx
  40b9a4:	mov    eax,0xa979b110
  40b9a9:	xor    DWORD PTR [ebp+0x65],esp
  40b9ac:	test   eax,0x6293e6d3
  40b9b1:	mov    dh,0xbf
  40b9b3:	lea    esi,ds:0x5c1abd8f
  40b9b9:	xchg   edi,eax
  40b9ba:	inc    esi
  40b9bb:	popa   
  40b9bc:	jg     0x40ba2d
  40b9be:	xor    DWORD PTR [esi-0x480f47bb],esp
  40b9c4:	stos   DWORD PTR es:[edi],eax
  40b9c5:	into   
  40b9c6:	cs ret 
  40b9c8:	sar    ah,cl
  40b9ca:	aaa    
  40b9cb:	ss cmp edi,edi
  40b9ce:	fwait
  40b9cf:	sub    DWORD PTR [ebp-0x2],ecx
  40b9d2:	ds aas 
  40b9d4:	xlat   BYTE PTR ds:[ebx]
  40b9d5:	loopne 0x40b98c
  40b9d7:	xchg   ebx,eax
  40b9d8:	retf   0x52a8
  40b9db:	adc    al,0x41
  40b9dd:	xor    dl,BYTE PTR [edi-0x43]
  40b9e0:	adc    DWORD PTR [eax],0x33
  40b9e3:	pop    edi
  40b9e4:	mov    ch,0x7
  40b9e6:	data16 daa 
  40b9e8:	cmp    BYTE PTR [edi-0x218f0daa],0x20
  40b9ef:	ins    BYTE PTR es:[edi],dx
  40b9f0:	sbb    al,0x37
  40b9f2:	sbb    eax,0x86f390cf
  40b9f7:	dec    eax
  40b9f8:	or     bh,BYTE PTR [ebx-0xc]
  40b9fb:	cdq    
  40b9fc:	hlt    
  40b9fd:	mov    esi,0x3d92d032
  40ba02:	cmc    
  40ba03:	xor    ch,BYTE PTR [edx-0x5768dc20]
  40ba09:	adc    al,0x33
  40ba0b:	and    eax,0x16b7dfda
  40ba10:	daa    
  40ba11:	adc    DWORD PTR [esi-0x2],esi
  40ba14:	xor    eax,ebx
  40ba16:	out    dx,eax
  40ba17:	inc    eax
  40ba18:	jmp    0x506c:0xb405040b
  40ba1f:	dec    ebx
  40ba20:	jl     0x40ba37
  40ba22:	cmc    
  40ba23:	add    eax,0x100c0198
  40ba28:	pop    eax
  40ba29:	fs (bad) 
  40ba2b:	sub    DWORD PTR [esi+0x5b],edx
  40ba2e:	ds mov edi,0x9d61bfc5
  40ba34:	ja     0x40baa0
  40ba36:	sahf   
  40ba37:	call   0x5ff5:0xf561d414
  40ba3e:	je     0x40b9f1
  40ba40:	pop    ss
  40ba41:	inc    ecx
  40ba42:	xor    al,0xda
  40ba44:	fnstsw WORD PTR [eax]
  40ba46:	dec    ebp
  40ba47:	dec    edi
  40ba48:	xchg   ecx,eax
  40ba49:	icebp  
  40ba4a:	dec    ebx
  40ba4b:	rol    DWORD PTR [ebx+edx*2-0x60],0xd3
  40ba50:	jnp    0x40ba2a
  40ba52:	rol    DWORD PTR [eax-0x33],0x89
  40ba56:	addr16 mov dx,0x1b60
  40ba5b:	icebp  
  40ba5c:	inc    esi
  40ba5d:	inc    ebp
  40ba5e:	cli    
  40ba5f:	vcmpsd xmm4,xmm7,QWORD PTR [eax],0x90
  40ba64:	sahf   
  40ba65:	pop    ds
  40ba66:	out    0x97,eax
  40ba68:	add    bl,BYTE PTR [edx+0x4ce20745]
  40ba6e:	push   ecx
  40ba6f:	fcmovbe st,st(2)
  40ba71:	pop    ecx
  40ba72:	mov    BYTE PTR [eax],ah
  40ba74:	dec    edx
  40ba75:	cwde   
  40ba76:	js     0x40ba2a
  40ba78:	ret    
  40ba79:	mov    ebx,0xc9d68b9c
  40ba7e:	push   ebx
  40ba7f:	cmc    
  40ba80:	sub    DWORD PTR [esi+ebx*8+0x3e8dd4b6],0x1002f531
  40ba8b:	mov    dl,0x8e
  40ba8d:	lods   eax,DWORD PTR ds:[esi]
  40ba8e:	dec    ebx
  40ba8f:	jge    0x40bb03
  40ba91:	xor    al,0xe0
  40ba93:	adc    eax,DWORD PTR [ecx]
  40ba95:	xor    DWORD PTR [edx+0x31],ebx
  40ba98:	jne    0x40ba7f
  40ba9a:	pop    edx
  40ba9b:	jno    0x40ba47
  40ba9d:	sahf   
  40ba9e:	sub    BYTE PTR [eax-0x27f6e3fa],0xab
  40baa5:	setno  BYTE PTR [ebp-0x4296f101]
  40baac:	inc    edi
  40baad:	push   edi
  40baae:	mov    esp,0x923bb75d
  40bab3:	pop    eax
  40bab4:	in     eax,dx
  40bab5:	stos   DWORD PTR es:[edi],eax
  40bab6:	add    eax,0xca644423
  40babb:	sub    BYTE PTR [esp+edi*4+0xf],cl
  40babf:	push   0xfce2a2e7
  40bac4:	jge    0x40ba90
  40bac6:	cli    
  40bac7:	mov    ds:0x1bd716d3,eax
  40bacc:	mov    al,ds:0x98301301
  40bad1:	pop    edi
  40bad2:	pop    ecx
  40bad3:	inc    ecx
  40bad4:	xor    BYTE PTR [esi-0x62],bh
  40bad7:	inc    eax
  40bad8:	inc    ecx
  40bad9:	jg     0x40bab6
  40badb:	(bad)  
  40badd:	inc    eax
  40bade:	xor    DWORD PTR [ebx+0x4b795956],0x4c840db9
  40bae8:	jmp    0x32d5:0x8836bcf
  40baef:	int    0xae
  40baf1:	dec    esi
  40baf2:	mov    dh,0xb6
  40baf4:	les    esp,FWORD PTR [ecx]
  40baf6:	mov    esp,0x8f1046fc
  40bafb:	stos   BYTE PTR es:[edi],al
  40bafc:	mov    ch,0xd1
  40bafe:	sub    DWORD PTR [eax],ebp
  40bb00:	sbb    ebx,DWORD PTR [esi]
  40bb02:	cmp    ch,0x53
  40bb05:	push   0xfd24f800
  40bb0a:	jne    0x40bab1
  40bb0c:	push   esi
  40bb0d:	or     DWORD PTR [eax],0x4b229c18
  40bb13:	lds    esi,FWORD PTR [edi-0x55]
  40bb16:	fwait
  40bb17:	push   ss
  40bb18:	jae    0x40bb5a
  40bb1a:	fs sti 
  40bb1c:	fbld   TBYTE PTR [edi]
  40bb1e:	das    
  40bb1f:	cld    
  40bb20:	pop    ecx
  40bb21:	nop
  40bb22:	int3   
  40bb23:	scas   eax,DWORD PTR es:[edi]
  40bb24:	icebp  
  40bb25:	inc    eax
  40bb26:	aad    0x99
  40bb28:	imul   ebp,DWORD PTR [ebx],0x46e54d17
  40bb2e:	dec    ebx
  40bb2f:	cwde   
  40bb30:	js     0x40bb49
  40bb32:	xor    al,0x2a
  40bb34:	(bad)  
  40bb35:	daa    
  40bb36:	shl    BYTE PTR [ebx-0x38],cl
  40bb39:	outs   dx,BYTE PTR ds:[esi]
  40bb3a:	fldcw  WORD PTR [ecx+0x367ebea9]
  40bb40:	jg     0x40bba8
  40bb42:	lods   eax,DWORD PTR ds:[esi]
  40bb43:	xchg   esi,eax
  40bb44:	das    
  40bb45:	cwde   
  40bb46:	arpl   WORD PTR gs:[eax+0x77],cx
  40bb4a:	mov    ebx,0x6ecc93fc
  40bb4f:	std    
  40bb50:	and    al,ah
  40bb52:	aad    0x2f
  40bb54:	jle    0x40bbb2
  40bb56:	loope  0x40bbc6
  40bb58:	jo     0x40bb63
  40bb5a:	call   0x5605:0xc3c0b75a
  40bb61:	retf   0xd33
  40bb64:	fidivr DWORD PTR [esi+edi*8+0x6d]
  40bb68:	bound  edx,QWORD PTR [ecx-0x7950518f]
  40bb6e:	in     al,0xa1
  40bb70:	and    bh,BYTE PTR ds:0xb7e45a21
  40bb76:	dec    ecx
  40bb77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb78:	fidivr WORD PTR [esi-0x3d]
  40bb7b:	ds and eax,edi
  40bb7e:	inc    edi
  40bb7f:	daa    
  40bb80:	xchg   ebx,eax
  40bb81:	jne    0x40bb34
  40bb83:	add    dl,BYTE PTR [eax+eiz*2+0x69ba1ed7]
  40bb8a:	std    
  40bb8b:	inc    esi
  40bb8c:	push   esp
  40bb8d:	add    eax,0x47a5f48c
  40bb92:	mov    al,ds:0x775f565c
  40bb97:	std    
  40bb98:	mov    DWORD PTR [eax],eax
  40bb9a:	push   cs
  40bb9b:	gs clc 
  40bb9d:	dec    esi
  40bb9e:	(bad)  
  40bb9f:	cmc    
  40bba0:	or     cl,bl
  40bba2:	pop    edx
  40bba3:	mov    ecx,0x47782a6a
  40bba8:	ins    BYTE PTR es:[edi],dx
  40bba9:	jmp    0x40bb3a
  40bbab:	mov    edx,0x7a7d9113
  40bbb0:	jp     0x40bc0b
  40bbb2:	inc    ebp
  40bbb3:	mov    edx,0x84e70995
  40bbb8:	shr    WORD PTR [ebp+0x6c278bed],cl
  40bbbf:	dec    edi
  40bbc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbc1:	adc    DWORD PTR [eax+0x267b6d3e],eax
  40bbc7:	adc    eax,0xdcab5be0
  40bbcc:	cwde   
  40bbcd:	mov    ds:0xa2656129,eax
  40bbd2:	adc    DWORD PTR [edi-0x378f4dce],edi
  40bbd8:	stos   BYTE PTR es:[edi],al
  40bbd9:	xchg   DWORD PTR [ecx+eiz*2],esi
  40bbdc:	and    eax,0xf7d13982
  40bbe1:	leave  
  40bbe2:	jp     0x40bb78
  40bbe4:	pop    ebp
  40bbe5:	fwait
  40bbe6:	mov    cl,0x8f
  40bbe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbe9:	pop    esi
  40bbea:	and    al,0x28
  40bbec:	loop   0x40bc21
  40bbee:	fnsave [esp+esi*2]
  40bbf1:	jae    0x40bb8d
  40bbf3:	arpl   WORD PTR [esi+0x58],sp
  40bbf6:	push   esi
  40bbf7:	xchg   dh,ah
  40bbf9:	cmp    cl,bl
  40bbfb:	stc    
  40bbfc:	adc    DWORD PTR [ecx-0x4a10e311],esp
  40bc02:	jb     0x40bbc5
  40bc04:	mov    bh,0x58
  40bc06:	shr    DWORD PTR [edx+0x3d],1
  40bc09:	and    al,0x48
  40bc0b:	mov    bh,0xe4
  40bc0d:	popa   
  40bc0e:	adc    edx,esp
  40bc10:	mov    dl,0xff
  40bc12:	jbe    0x40bc0d
  40bc14:	add    al,ch
  40bc16:	es (bad) 
  40bc19:	sbb    dh,0x1a
  40bc1c:	(bad)  
  40bc1d:	cmp    eax,0xf1190ffd
  40bc22:	iret   
  40bc23:	aaa    
  40bc24:	dec    ecx
  40bc25:	pop    ecx
  40bc26:	ins    BYTE PTR es:[edi],dx
  40bc27:	sbb    dh,BYTE PTR [ebp+0x5]
  40bc2a:	and    cl,BYTE PTR [esp+ebp*2]
  40bc2d:	or     dh,BYTE PTR [esi+0x1]
  40bc30:	mov    dh,0x17
  40bc32:	gs xchg ebp,eax
  40bc34:	or     ebp,DWORD PTR [esi+esi*8-0x2]
  40bc38:	jecxz  0x40bc3e
  40bc3a:	jg     0x40bc0d
  40bc3c:	push   eax
  40bc3d:	es pop ebx
  40bc3f:	test   BYTE PTR [esi+0x22],dl
  40bc42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc43:	and    dl,dh
  40bc45:	fist   DWORD PTR [ebx]
  40bc47:	or     DWORD PTR [ebx+0x62],ebp
  40bc4a:	and    al,0x99
  40bc4c:	mov    ds:0x5f753911,al
  40bc51:	xor    DWORD PTR [edi],esp
  40bc53:	mov    WORD PTR [edi],cs
  40bc55:	rol    DWORD PTR fs:[edx+0x7c],1
  40bc59:	adc    ch,ch
  40bc5b:	pop    ecx
  40bc5c:	dec    ebp
  40bc5d:	inc    ebp
  40bc5e:	or     al,0xd2
  40bc60:	sbb    BYTE PTR [edx-0x2835e585],cl
  40bc66:	aas    
  40bc67:	sub    DWORD PTR [ebx-0x7e],ebp
  40bc6a:	push   edi
  40bc6b:	dec    ecx
  40bc6c:	add    bh,BYTE PTR [eax]
  40bc6e:	popf   
  40bc6f:	dec    ecx
  40bc70:	neg    DWORD PTR [ebx-0x27971f7e]
  40bc76:	popa   
  40bc77:	sbb    BYTE PTR [eax-0x28],dl
  40bc7a:	push   ecx
  40bc7b:	adc    ebp,edi
  40bc7d:	adc    al,ah
  40bc7f:	jecxz  0x40bcd2
  40bc81:	and    esi,ebx
  40bc83:	jne    0x40bc5d
  40bc85:	dec    ecx
  40bc86:	jae    0x40bc1f
  40bc88:	(bad)  
  40bc89:	stos   BYTE PTR es:[edi],al
  40bc8a:	fdivr  QWORD PTR [edi-0x4]
  40bc8d:	mov    dl,0x26
  40bc8f:	call   DWORD PTR [ebx-0x20]
  40bc92:	sbb    al,0x11
  40bc94:	jg     0x40bd0b
  40bc96:	out    dx,eax
  40bc97:	retf   0xb6b6
  40bc9a:	out    dx,al
  40bc9b:	test   BYTE PTR [edi],al
  40bc9d:	rol    BYTE PTR gs:[eax-0x62],0x71
  40bca2:	jg     0x40bcb7
  40bca4:	mov    ecx,0xaaff8886
  40bca9:	jecxz  0x40bd08
  40bcab:	mov    bl,0xa8
  40bcad:	mov    ecx,0xf3a06964
  40bcb2:	sbb    eax,0x189ee7f4
  40bcb7:	mov    ecx,0x7fb18912
  40bcbc:	mov    ebp,0xcdda7b84
  40bcc1:	xchg   DWORD PTR [edx+ebp*4-0x2be58408],ebp
  40bcc8:	push   ecx
  40bcc9:	mov    ch,0x42
  40bccb:	jmp    0x2d23:0x6092f2a3
  40bcd2:	mov    ecx,0x25302dea
  40bcd7:	ja     0x40bd4f
  40bcd9:	xlat   BYTE PTR ds:[ebx]
  40bcda:	sbb    eax,0x2fe07f8e
  40bcdf:	(bad)  
  40bce0:	push   esp
  40bce1:	ficomp DWORD PTR [ebx+0x40]
  40bce4:	dec    ecx
  40bce5:	(bad)  
  40bce6:	aad    0xc4
  40bce8:	adc    BYTE PTR [edx],dh
  40bcea:	push   ecx
  40bceb:	cmp    BYTE PTR [ebp+eax*4-0x3d77ca95],bh
  40bcf2:	and    BYTE PTR [ecx+0x18],cl
  40bcf5:	ins    BYTE PTR es:[edi],dx
  40bcf6:	and    al,0xef
  40bcf8:	rcr    DWORD PTR [ecx-0x5004b263],0x31
  40bcff:	mov    esp,0xde34db69
  40bd04:	data16 (bad) 
  40bd06:	enter  0x2e67,0x10
  40bd0a:	faddp  st(3),st
  40bd0c:	into   
  40bd0d:	sub    ah,BYTE PTR [ebx+eiz*1]
  40bd10:	adc    esi,esi
  40bd12:	adc    ebx,DWORD PTR [eax-0x2e]
  40bd15:	retf   0x85dd
  40bd18:	aas    
  40bd19:	xchg   esp,eax
  40bd1a:	dec    ebx
  40bd1b:	cmp    esi,DWORD PTR [ebx+0xc]
  40bd1e:	push   es
  40bd1f:	push   ecx
  40bd20:	jp     0x40bccf
  40bd22:	aam    0x53
  40bd24:	jmp    0x784:0xcc8d8760
  40bd2b:	(bad)  
  40bd2c:	adc    edi,esp
  40bd2e:	xchg   edi,eax
  40bd2f:	mov    esi,ecx
  40bd31:	adc    BYTE PTR ds:0x605b90c7,al
  40bd37:	ret    0x9dd3
  40bd3a:	pop    edx
  40bd3b:	pushf  
  40bd3c:	shl    DWORD PTR [ebx-0x1b],cl
  40bd3f:	xor    esp,DWORD PTR [edi-0xa0db785]
  40bd45:	jle    0x40bd15
  40bd47:	out    0xb1,al
  40bd49:	cmp    eax,0x506961f7
  40bd4e:	jne    0x40bda8
  40bd50:	mov    eax,0xadf07362
  40bd55:	fisttp QWORD PTR [edi+0x6058f9df]
  40bd5b:	js     0x40bdc4
  40bd5d:	inc    edi
  40bd5e:	popf   
  40bd5f:	test   DWORD PTR [ebp-0x46],ebx
  40bd62:	daa    
  40bd63:	jbe    0x40bdaa
  40bd65:	mov    edx,0x926e77e0
  40bd6a:	shl    DWORD PTR [edx+0x24],1
  40bd6d:	push   ebp
  40bd6e:	loop   0x40bd66
  40bd70:	jmp    0xd2d8f2a1
  40bd75:	aas    
  40bd76:	jns    0x40bd65
  40bd78:	cwde   
  40bd79:	sub    dh,bh
  40bd7b:	mov    BYTE PTR [ecx],bh
  40bd7d:	push   esi
  40bd7e:	and    BYTE PTR [edi+0x79],ch
  40bd81:	into   
  40bd82:	pushf  
  40bd83:	dec    DWORD PTR [ecx]
  40bd85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd86:	(bad)  
  40bd88:	out    0xbf,eax
  40bd8a:	inc    edx
  40bd8b:	fsubrp st(1),st
  40bd8d:	push   0x6a
  40bd8f:	sbb    al,0x47
  40bd91:	cmp    al,ah
  40bd93:	int3   
  40bd94:	fdiv   st,st(4)
  40bd96:	scas   al,BYTE PTR es:[edi]
  40bd97:	adc    al,0x50
  40bd99:	fdivr  QWORD PTR [esi+0x70f2422d]
  40bd9f:	bound  ebp,QWORD PTR [ebx*4+0x168a448]
  40bda6:	pusha  
  40bda7:	gs mov eax,0x90bc003a
  40bdad:	dec    eax
  40bdae:	or     al,0x6e
  40bdb0:	jbe    0x40bd55
  40bdb2:	fwait
  40bdb3:	test   al,0x1
  40bdb5:	stc    
  40bdb6:	push   edi
  40bdb7:	dec    ebx
  40bdb8:	outs   dx,DWORD PTR ds:[esi]
  40bdb9:	in     al,0x34
  40bdbb:	pop    ebp
  40bdbc:	call   0x9bcf:0x6f0ef25f
  40bdc3:	popf   
  40bdc4:	aaa    
  40bdc5:	xor    ah,BYTE PTR [eax+0x278e15ac]
  40bdcb:	loop   0x40be22
  40bdcd:	push   esi
  40bdce:	mov    edi,0x3d8d7284
  40bdd3:	mov    BYTE PTR [ebx+0x15],cl
  40bdd6:	sbb    DWORD PTR [eax-0x12],edx
  40bdd9:	je     0x40be23
  40bddb:	adc    eax,0xffffffbd
  40bdde:	int    0xae
  40bde0:	mov    ebx,0xb73b8f95
  40bde5:	mov    eax,ds:0x4058d139
  40bdea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bdeb:	xchg   edx,eax
  40bdec:	or     DWORD PTR fs:[ecx+0x61bad239],edx
  40bdf3:	jno    0x40be4d
  40bdf5:	scas   al,BYTE PTR es:[edi]
  40bdf6:	push   ebp
  40bdf7:	mov    DWORD PTR [edi+edx*8-0x1],ecx
  40bdfb:	jne    0x40bd7e
  40bdfd:	pop    eax
  40bdfe:	stc    
  40bdff:	das    
  40be00:	gs iret 
  40be02:	mov    al,0xc8
  40be04:	int    0xaf
  40be06:	hlt    
  40be07:	imul   edx,DWORD PTR [ebp+0xda38dfd],0x3f
  40be0e:	mov    cl,0x93
  40be10:	mov    ebx,0x610b8114
  40be15:	jae    0x40bdaa
  40be17:	mov    edx,0x765e8f5b
  40be1c:	dec    esi
  40be1d:	xor    BYTE PTR [edi+0x110626a0],0xf7
  40be24:	or     BYTE PTR [esi+ebp*8-0x44c97345],bl
  40be2b:	out    0xbe,eax
  40be2d:	jge    0x40be20
  40be2f:	add    dh,cl
  40be31:	mov    ah,0xb2
  40be33:	mov    edx,?
  40be35:	call   0x2eb4:0xbe6793ef
  40be3c:	sub    ch,cl
  40be3e:	jecxz  0x40be0b
  40be40:	mov    WORD PTR [ebp-0x7],fs
  40be43:	sbb    esi,edx
  40be45:	sub    BYTE PTR [eax-0x2b],0xdf
  40be49:	jg     0x40bebf
  40be4b:	sbb    al,0x35
  40be4d:	or     esi,DWORD PTR ds:0xf38f0b95
  40be53:	call   0xfe82:0xd050923
  40be5a:	inc    ebx
  40be5b:	pusha  
  40be5c:	sub    dl,BYTE PTR [ebp+0x4ab680e8]
  40be62:	adc    al,0xe3
  40be64:	out    0xe6,eax
  40be66:	sbb    bl,BYTE PTR [ebp+0x4e]
  40be69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be6a:	add    DWORD PTR [edx-0x44],ebx
  40be6d:	mov    bl,0xff
  40be6f:	sti    
  40be70:	jg     0x40bea5
  40be72:	push   eax
  40be73:	pop    es
  40be74:	pop    ecx
  40be75:	neg    edi
  40be77:	mov    ah,BYTE PTR [edx+0x788e671]
  40be7d:	rcl    DWORD PTR [edx+edi*4],1
  40be80:	and    al,0x5a
  40be82:	jns    0x40be8a
  40be84:	jno    0x40bf05
  40be86:	in     eax,dx
  40be87:	iret   
  40be88:	rcl    ch,0xaa
  40be8b:	fdivr  QWORD PTR [ebp+0x3f983446]
  40be91:	(bad)  
  40be92:	loopne 0x40be4f
  40be94:	xor    al,0x85
  40be96:	push   esp
  40be97:	mov    esi,0x9b5c84e4
  40be9c:	xchg   edx,eax
  40be9d:	xlat   BYTE PTR ds:[ebx]
  40be9e:	jg     0x40be98
  40bea0:	xchg   al,dh
  40bea2:	sar    BYTE PTR ds:0x64eb095d,cl
  40bea8:	xchg   edx,eax
  40bea9:	cld    
  40beaa:	aas    
  40beab:	cmp    BYTE PTR [ebx-0x2abd49ec],ch
  40beb1:	jne    0x40beae
  40beb3:	or     BYTE PTR [ebx],ah
  40beb5:	xchg   BYTE PTR [esi+0x64],cl
  40beb8:	rcr    BYTE PTR [edi],0x15
  40bebb:	inc    esi
  40bebc:	into   
  40bebd:	add    BYTE PTR [edi+edx*2+0x1e63c4f1],bl
  40bec4:	ror    BYTE PTR [ebx+0x57f33b98],1
  40beca:	jo     0x40bf20
  40becc:	sbb    DWORD PTR [ebx+0x78],0xc36d3708
  40bed3:	or     ecx,DWORD PTR [ebp+ebx*2-0x5]
  40bed7:	inc    edi
  40bed8:	xor    DWORD PTR [esi+eax*4],eax
  40bedb:	add    al,0x11
  40bedd:	jmp    0x4266d95
  40bee2:	mov    ds:0x68029d7a,al
  40bee7:	add    al,0x73
  40bee9:	inc    edi
  40beea:	aad    0x48
  40beec:	xchg   edi,eax
  40beed:	cmc    
  40beee:	or     bl,0x52
  40bef1:	mov    ecx,0xce321e53
  40bef6:	outs   dx,DWORD PTR ds:[esi]
  40bef7:	and    eax,0xfb6ddfa1
  40befc:	shl    BYTE PTR [ebx+ebx*4],1
  40beff:	js     0x40bf36
  40bf01:	sbb    bl,al
  40bf03:	mov    dl,0x2d
  40bf05:	int3   
  40bf06:	push   ss
  40bf07:	cld    
  40bf08:	sub    al,0xac
  40bf0a:	fwait
  40bf0b:	cld    
  40bf0c:	sahf   
  40bf0d:	enter  0xec70,0x12
  40bf11:	shl    DWORD PTR [esi+esi*1-0x12],cl
  40bf15:	mov    bl,0x45
  40bf17:	shr    BYTE PTR [ebx-0x62],0x21
  40bf1b:	xchg   edx,eax
  40bf1c:	mov    al,0xde
  40bf1e:	pusha  
  40bf1f:	outs   dx,BYTE PTR ds:[esi]
  40bf20:	aad    0x6c
  40bf22:	scas   al,BYTE PTR es:[edi]
  40bf23:	stc    
  40bf24:	pop    ds
  40bf25:	sub    BYTE PTR [eax],dh
  40bf27:	adc    ebx,DWORD PTR [edx-0x7]
  40bf2a:	cmc    
  40bf2b:	int3   
  40bf2c:	push   edx
  40bf2d:	loope  0x40bf11
  40bf2f:	std    
  40bf30:	test   eax,0xcffddffc
  40bf35:	push   edi
  40bf36:	clc    
  40bf37:	in     eax,dx
  40bf38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf39:	push   edx
  40bf3a:	add    eax,0xef4d9c2
  40bf3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf40:	push   ds
  40bf41:	mov    eax,ss:0x91ba5e8f
  40bf47:	dec    ecx
  40bf48:	pop    eax
  40bf49:	das    
  40bf4a:	dec    esp
  40bf4b:	push   ds
  40bf4c:	mov    BYTE PTR [edx+0x65c1eba3],al
  40bf52:	sti    
  40bf53:	aad    0xa4
  40bf55:	iret   
  40bf56:	xor    eax,0x6fc6d3f
  40bf5b:	mov    dl,0x94
  40bf5d:	mov    esi,0x732258d5
  40bf62:	loope  0x40bf56
  40bf64:	mov    cl,0x5d
  40bf66:	sub    eax,0xb09599cc
  40bf6b:	lock pop esi
  40bf6d:	ficomp WORD PTR [eax]
  40bf6f:	ins    DWORD PTR es:[edi],dx
  40bf70:	pop    es
  40bf71:	jl     0x40bfeb
  40bf73:	adc    esp,ebx
  40bf75:	xor    edi,edi
  40bf77:	mov    dl,0x7e
  40bf79:	das    
  40bf7a:	jle    0x40bf79
  40bf7c:	mov    ebp,0x2928dff4
  40bf81:	popa   
  40bf82:	in     eax,0x8e
  40bf84:	test   eax,0x21e12ae9
  40bf89:	jo     0x40bf30
  40bf8b:	mov    ch,0x89
  40bf8d:	data16 sar BYTE PTR [eax-0x28b4746b],1
  40bf94:	cmp    BYTE PTR [eax-0x24],dl
  40bf97:	jmp    0x40bf50
  40bf99:	sub    DWORD PTR [ebx+0x34],eax
  40bf9c:	lahf   
  40bf9d:	jns    0x40bfba
  40bf9f:	outs   dx,DWORD PTR ds:[esi]
  40bfa0:	daa    
  40bfa1:	mov    al,ds:0xe89415ae
  40bfa6:	mov    ebx,0xae3111cf
  40bfab:	inc    esi
  40bfac:	jo     0x40bfa4
  40bfae:	mov    cl,al
  40bfb0:	mov    al,0x45
  40bfb2:	nop
  40bfb3:	test   eax,0x7a3d5fbe
  40bfb8:	out    dx,eax
  40bfb9:	cs add ebp,eax
  40bfbc:	mov    cl,0xd3
  40bfbe:	xchg   BYTE PTR [esi+0x4184195],ch
  40bfc4:	pusha  
  40bfc5:	cld    
  40bfc6:	pushw  ss
  40bfc8:	push   ebx
  40bfc9:	out    dx,al
  40bfca:	(bad)  
  40bfcb:	mov    bh,0xc7
  40bfcd:	ins    BYTE PTR es:[edi],dx
  40bfce:	inc    ebx
  40bfcf:	imul   ebx,esi,0x9b8e3334
  40bfd5:	ror    BYTE PTR [ebx+0x3471f966],1
  40bfdb:	dec    esp
  40bfdc:	add    eax,0xa91818e2
  40bfe1:	push   eax
  40bfe2:	push   ss
  40bfe3:	push   ebx
  40bfe4:	repnz push esp
  40bfe6:	out    0xea,al
  40bfe8:	pop    esi
  40bfe9:	aam    0xe5
  40bfeb:	and    eax,0x637d99ea
  40bff0:	mov    dh,0xe6
  40bff2:	and    eax,0x3a9e8c22
  40bff7:	repnz fdiv DWORD PTR [ebx-0x31]
  40bffb:	and    al,0x65
  40bffd:	lahf   
  40bffe:	jg     0x40c000
  40c000:	mov    eax,0x51a0aa28
  40c005:	inc    esi
  40c006:	mov    ebx,0x462fe2ee
  40c00b:	repz lahf 
  40c00d:	inc    edi
  40c00e:	and    eax,0xdb0ba58
  40c013:	pop    ss
  40c014:	hlt    
  40c015:	leave  
  40c016:	sbb    ch,BYTE PTR [edi]
  40c018:	aas    
  40c019:	adc    DWORD PTR [ebp+0x46a96d4f],0x41a456be
  40c023:	imul   ch
  40c025:	sbb    eax,0xe66256fc
  40c02a:	jae    0x40c047
  40c02c:	aas    
  40c02d:	ja     0x40c032
  40c02f:	pop    ebx
  40c030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c031:	in     al,dx
  40c032:	mov    ch,0x4d
  40c034:	mov    edi,0x24b2dda1
  40c039:	icebp  
  40c03a:	adc    ch,BYTE PTR [esi+0x23]
  40c03d:	test   DWORD PTR [esi+0x4805520e],ebp
  40c043:	jecxz  0x40c0a8
  40c045:	xor    edx,DWORD PTR [ebx-0x48]
  40c048:	imul   ebp,DWORD PTR [esi+eiz*2-0x1a28e7e4],0xffffff89
  40c050:	mov    dh,0x33
  40c052:	cmovle edx,DWORD PTR [edx-0x6b]
  40c056:	or     dl,BYTE PTR [edi+0x11]
  40c059:	(bad)  
  40c05b:	mov    dl,0x3a
  40c05d:	sar    edx,1
  40c05f:	push   ss
  40c060:	mov    ds,WORD PTR [ecx]
  40c062:	std    
  40c063:	ds ror ebp,0xc4
  40c067:	and    eax,DWORD PTR [edi]
  40c069:	mov    al,0x42
  40c06b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c06c:	fcomp  DWORD PTR [ebx+esi*1-0x38]
  40c070:	jl     0x40c05c
  40c072:	xchg   DWORD PTR [ebp+0x7a4ab31f],ecx
  40c078:	xchg   dl,ah
  40c07a:	scas   eax,DWORD PTR es:[edi]
  40c07b:	sub    eax,0x4d7c28c7
  40c080:	aas    
  40c081:	pusha  
  40c082:	scas   al,BYTE PTR es:[edi]
  40c083:	scas   al,BYTE PTR es:[edi]
  40c084:	btr    DWORD PTR [edi-0x19],ebx
  40c088:	arpl   WORD PTR [edx+0x3e53372],ax
  40c08e:	fstp   QWORD PTR [ebp+0x3cc7aa8a]
  40c094:	mov    edx,cs
  40c096:	mov    dh,0x52
  40c098:	outs   dx,BYTE PTR ds:[esi]
  40c099:	icebp  
  40c09a:	adc    eax,0xf926d5
  40c09f:	xchg   edx,eax
  40c0a0:	inc    esp
  40c0a1:	jnp    0x40c08c
  40c0a3:	(bad)  
  40c0a4:	mov    dl,0x42
  40c0a6:	mov    ecx,0x9cd806d2
  40c0ab:	stc    
  40c0ac:	sbb    eax,0xb103bce8
  40c0b1:	mov    ebx,0x77f15a69
  40c0b6:	push   es
  40c0b7:	les    esi,FWORD PTR [edi-0x48322a84]
  40c0bd:	mov    ds:0x90ff8d2e,al
  40c0c2:	and    ch,bh
  40c0c4:	mov    ebx,0xab2bb71a
  40c0c9:	jge    0x40c12e
  40c0cb:	lds    eax,FWORD PTR [esp+esi*8+0x22d56508]
  40c0d2:	mov    edx,0x2388b138
  40c0d7:	jmp    0xba327f4b
  40c0dc:	or     eax,DWORD PTR [esi+0x4a9dde59]
  40c0e2:	inc    ecx
  40c0e3:	xor    eax,0x1af3570c
  40c0e8:	les    esp,FWORD PTR [edi-0x60]
  40c0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0ec:	loop   0x40c16c
  40c0ee:	xlat   BYTE PTR ds:[ebx]
  40c0ef:	ins    DWORD PTR es:[edi],dx
  40c0f0:	dec    edi
  40c0f1:	xchg   ecx,eax
  40c0f2:	sub    ecx,ebx
  40c0f4:	push   0x675dcef8
  40c0f9:	call   0x53c1721d
  40c0fe:	push   0x4cf850ed
  40c103:	fwait
  40c104:	and    eax,0x46d7e4e6
  40c109:	jo     0x40c0c4
  40c10b:	sub    esp,DWORD PTR [ecx+0x3b]
  40c10e:	sub    DWORD PTR ds:0x5f20a628,ecx
  40c114:	int    0xa8
  40c116:	stos   DWORD PTR es:[edi],eax
  40c117:	and    BYTE PTR [eax+edi*2-0x1e268e0b],al
  40c11e:	inc    edi
  40c11f:	js     0x40c0cf
  40c121:	mov    ds:0x1aa4be5,al
  40c126:	or     esi,DWORD PTR [edi]
  40c128:	pop    esi
  40c129:	imul   edx,eax,0x71
  40c12c:	mov    cl,0x90
  40c12e:	adc    eax,0x2bed0143
  40c133:	jle    0x40c15e
  40c135:	add    esi,ecx
  40c137:	jl     0x40c0c7
  40c139:	jg     0x40c139
  40c13b:	xchg   ecx,eax
  40c13c:	js     0x40c156
  40c13e:	xchg   DWORD PTR [ecx],esi
  40c140:	mov    ebp,0xea19777d
  40c145:	fdiv   QWORD PTR [edi+0x464e50b0]
  40c14b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c14c:	jae    0x40c18e
  40c14e:	ror    bh,0x1a
  40c151:	sbb    al,BYTE PTR [edi-0x72970014]
  40c157:	push   esp
  40c158:	jg     0x40c116
  40c15a:	sub    BYTE PTR [esp+esi*2-0xc392a57],dl
  40c161:	out    0x17,al
  40c163:	cdq    
  40c164:	loop   0x40c131
  40c166:	mov    ah,BYTE PTR [ebp*4-0x38bc6ed8]
  40c16d:	imul   ebx,DWORD PTR [ebx+edx*1+0x65edbcaf],0x148fadc9
  40c178:	jns    0x40c1eb
  40c17a:	rcl    dl,cl
  40c17c:	dec    ebp
  40c17d:	or     eax,0x118f95a7
  40c182:	loopne 0x40c16e
  40c184:	inc    edi
  40c185:	lods   al,BYTE PTR ds:[esi]
  40c186:	imul   ecx,DWORD PTR [ecx-0x1f],0x2312c9f6
  40c18d:	ins    DWORD PTR es:[edi],dx
  40c18e:	arpl   WORD PTR [esi+0x31],bx
  40c191:	xor    ah,BYTE PTR [edx]
  40c193:	mov    ds:0xbddceef8,eax
  40c198:	(bad)  
  40c199:	adc    ch,BYTE PTR [ebx]
  40c19b:	and    al,0x5b
  40c19d:	imul   esi,DWORD PTR [eax],0xffffffba
  40c1a0:	adc    DWORD PTR [edi],edi
  40c1a2:	push   esi
  40c1a3:	call   0x3186:0x1693b93f
  40c1aa:	bound  esp,QWORD PTR [edx+0x28029788]
  40c1b0:	push   edi
  40c1b1:	std    
  40c1b2:	or     BYTE PTR [ebp-0x7d],0x61
  40c1b6:	and    ebx,ecx
  40c1b8:	pop    ebp
  40c1b9:	std    
  40c1ba:	daa    
  40c1bb:	sbb    ebx,ebx
  40c1bd:	jne    0x40c207
  40c1bf:	xchg   esp,eax
  40c1c0:	inc    ebp
  40c1c1:	arpl   dx,bp
  40c1c3:	or     DWORD PTR ds:0x88cc6be1,esi
  40c1c9:	and    eax,0x835ed54d
  40c1ce:	(bad)  
  40c1cf:	into   
  40c1d0:	mov    edi,0xaa5b96e6
  40c1d5:	cmp    al,0x83
  40c1d7:	sub    al,0x50
  40c1d9:	sti    
  40c1da:	add    DWORD PTR [ebx],0x1
  40c1dd:	mov    ebx,0x18b083f5
  40c1e2:	sub    al,0x36
  40c1e4:	sti    
  40c1e5:	add    dh,dl
  40c1e7:	sbb    dh,cl
  40c1e9:	cs out 0x6,al
  40c1ec:	cld    
  40c1ed:	(bad)  
  40c1ef:	cmc    
  40c1f0:	and    bl,BYTE PTR [ebx-0x5f]
  40c1f3:	in     al,dx
  40c1f4:	pop    esp
  40c1f5:	inc    edx
  40c1f6:	dec    ebx
  40c1f7:	jnp    0x40c17d
  40c1f9:	dec    ebx
  40c1fa:	pop    esp
  40c1fb:	adc    al,0xce
  40c1fd:	or     DWORD PTR [esi-0xd129bfb],ecx
  40c203:	inc    edi
  40c204:	push   cs
  40c205:	inc    edx
  40c206:	lods   eax,DWORD PTR ds:[esi]
  40c207:	sti    
  40c208:	mov    ebp,0x3dd31d5f
  40c20d:	jl     0x40c200
  40c20f:	or     ebx,DWORD PTR [eax+0x2f75105]
  40c215:	rol    DWORD PTR [eax-0x30b60f78],0x90
  40c21c:	jle    0x40c1cc
  40c21e:	frstor [edx]
  40c220:	adc    BYTE PTR [edi+esi*4+0x63],dh
  40c224:	add    al,0x40
  40c226:	dec    ecx
  40c227:	stos   BYTE PTR es:[edi],al
  40c228:	stos   DWORD PTR es:[edi],eax
  40c229:	or     BYTE PTR [ebx],dh
  40c22b:	leave  
  40c22c:	sbb    cl,BYTE PTR [ebx]
  40c22e:	ficomp WORD PTR [ebx+0x37]
  40c231:	fscale 
  40c233:	int3   
  40c234:	jno    0x40c242
  40c236:	in     eax,dx
  40c237:	sar    DWORD PTR [ebx+ecx*1-0x19],cl
  40c23b:	inc    edi
  40c23c:	mov    ebx,0xfe207011
  40c241:	add    esi,eax
  40c243:	inc    edi
  40c244:	jne    0x40c1df
  40c246:	fstp   DWORD PTR [esp+edx*2]
  40c249:	mov    bh,0xce
  40c24b:	int3   
  40c24c:	and    dh,BYTE PTR [eax]
  40c24e:	pusha  
  40c24f:	ja     0x40c28a
  40c251:	mov    ds:0x663d3649,al
  40c256:	fadd   QWORD PTR [eax-0x2cc77a5a]
  40c25c:	mov    ds:0x7d1c62fc,al
  40c261:	inc    ebx
  40c262:	lods   eax,DWORD PTR ds:[esi]
  40c263:	dec    edi
  40c264:	ret    
  40c265:	out    dx,al
  40c266:	loopne 0x40c242
  40c268:	cmp    al,0x2f
  40c26a:	(bad)  
  40c26b:	out    0x83,al
  40c26d:	test   al,0x59
  40c26f:	mov    edx,0xb33a6139
  40c274:	mov    ch,BYTE PTR [ecx+0x48]
  40c277:	mov    ecx,0x88301f5b
  40c27c:	or     eax,0xeb3ebbbd
  40c281:	jo     0x40c22d
  40c283:	div    BYTE PTR [ebp-0x6925fe74]
  40c289:	push   edi
  40c28a:	push   cs
  40c28b:	or     al,0xa9
  40c28d:	xchg   esi,eax
  40c28e:	dec    esp
  40c28f:	jo     0x40c29b
  40c291:	in     al,0xd9
  40c293:	push   ebx
  40c294:	not    DWORD PTR [ebx+0x23]
  40c297:	jb     0x40c303
  40c299:	cmp    al,0x63
  40c29b:	mov    dl,0x6e
  40c29d:	xlat   BYTE PTR ds:[ebx]
  40c29e:	test   BYTE PTR [ebx-0x7042f66b],0x5a
  40c2a5:	jns    0x40c2de
  40c2a7:	fisub  WORD PTR [ecx+0x32bf74f9]
  40c2ad:	xlat   BYTE PTR ds:[ebx]
  40c2ae:	xchg   DWORD PTR [esi],edi
  40c2b0:	repnz pop es
  40c2b2:	inc    esp
  40c2b3:	mov    esi,DWORD PTR [ebx-0x3ed9ca25]
  40c2b9:	and    DWORD PTR [ecx],ecx
  40c2bb:	mov    ch,0x29
  40c2bd:	les    edx,FWORD PTR [esi+0x36]
  40c2c0:	mov    eax,DWORD PTR [eax]
  40c2c2:	mov    WORD PTR [esi-0x19],?
  40c2c5:	nop
  40c2c6:	mov    BYTE PTR [edx-0x756a4506],dl
  40c2cc:	fucomip st,st(0)
  40c2ce:	scas   eax,DWORD PTR es:[edi]
  40c2cf:	xor    al,0x66
  40c2d1:	jno    0x40c2d1
  40c2d3:	pop    esi
  40c2d4:	leave  
  40c2d5:	int    0x2
  40c2d7:	cmc    
  40c2d8:	pop    eax
  40c2d9:	ret    0x6334
  40c2dc:	out    dx,al
  40c2dd:	stc    
  40c2de:	jecxz  0x40c2f8
  40c2e0:	xor    DWORD PTR [edx],0xffffff8e
  40c2e3:	mov    bl,0x1d
  40c2e5:	dec    BYTE PTR [edi+0xc03b383]
  40c2eb:	int    0x2f
  40c2ed:	mov    ch,0x99
  40c2ef:	mov    al,ds:0x60d9ae5a
  40c2f4:	je     0x40c34d
  40c2f6:	pop    ss
  40c2f7:	fsub   QWORD PTR [edi]
  40c2f9:	push   esp
  40c2fa:	push   edi
  40c2fb:	dec    edi
  40c2fc:	mov    DWORD PTR [esi-0x36ad5c8e],edi
  40c302:	ret    0x27b4
  40c305:	fs test ebx,ecx
  40c308:	fwait
  40c309:	add    al,BYTE PTR [ebx+0x28]
  40c30c:	ds ror al,0x52
  40c310:	xor    ebx,DWORD PTR [eax+0x3f0c23a4]
  40c316:	in     al,0xc3
  40c318:	(bad)  
  40c31a:	ds jb  0x40c2ab
  40c31d:	or     DWORD PTR [eax+0x229b3e1a],esi
  40c323:	inc    esi
  40c324:	mov    ds:0xa03b35b1,al
  40c329:	jne    0x40c3a7
  40c32b:	pop    esp
  40c32c:	sub    bl,dh
  40c32e:	in     al,0x20
  40c330:	loope  0x40c370
  40c332:	ret    0xce1a
  40c335:	clc    
  40c336:	mov    al,ds:0x739b80a9
  40c33b:	inc    BYTE PTR [ebx-0x63]
  40c33e:	mov    esp,0x2250dca1
  40c343:	dec    edi
  40c344:	cdq    
  40c345:	jne    0x40c388
  40c347:	or     dl,0xd5
  40c34a:	sbb    al,0xbb
  40c34c:	ins    DWORD PTR es:[edi],dx
  40c34d:	sbb    cl,dl
  40c34f:	jmp    0x4f40:0x7f117a69
  40c356:	dec    esi
  40c357:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c358:	pop    edi
  40c359:	pop    esp
  40c35a:	into   
  40c35b:	mov    al,ds:0x6f4bd5a8
  40c360:	pop    ebx
  40c361:	fdivr  st,st(2)
  40c363:	aas    
  40c364:	jge    0x40c373
  40c366:	mov    dl,0x8a
  40c368:	lahf   
  40c369:	ins    BYTE PTR es:[edi],dx
  40c36a:	retf   
  40c36b:	push   es
  40c36c:	mov    ds:0xe40334af,al
  40c371:	add    ebp,ebx
  40c373:	xlat   BYTE PTR ds:[ebx]
  40c374:	retf   
  40c375:	sub    DWORD PTR [esi+0x7738fe3f],ecx
  40c37b:	mov    esp,0x4c69be9a
  40c380:	lahf   
  40c381:	ds ret 
  40c383:	std    
  40c384:	cli    
  40c385:	or     cl,dh
  40c387:	inc    eax
  40c388:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c389:	ins    BYTE PTR es:[edi],dx
  40c38a:	sub    DWORD PTR [ebx-0x5c0aa8ac],eax
  40c390:	mov    fs,edi
  40c392:	adc    dl,ch
  40c394:	pop    ebx
  40c395:	push   esp
  40c396:	add    al,0x85
  40c398:	ja     0x40c375
  40c39a:	xchg   ecx,eax
  40c39b:	out    dx,al
  40c39c:	gs inc edx
  40c39e:	ss mov dl,0x2c
  40c3a1:	and    eax,eax
  40c3a3:	fdiv   st(4),st
  40c3a5:	jbe    0x40c3fe
  40c3a7:	lods   eax,DWORD PTR ds:[esi]
  40c3a8:	ud2    
  40c3aa:	and    al,BYTE PTR [edx-0x455ac01c]
  40c3b0:	cld    
  40c3b1:	and    eax,0x6d3c1bfa
  40c3b6:	cld    
  40c3b7:	lods   eax,DWORD PTR ds:[esi]
  40c3b8:	cmp    cl,ch
  40c3ba:	fsubr  DWORD PTR [ecx+0x65ae67b6]
  40c3c0:	mov    BYTE PTR [ecx+esi*2],bh
  40c3c3:	mov    bl,0xf5
  40c3c5:	sub    dl,BYTE PTR [ecx]
  40c3c7:	and    ecx,DWORD PTR [esi-0x2a]
  40c3ca:	mov    DWORD PTR ds:0x4ebefc4c,ebp
  40c3d0:	xor    al,0x84
  40c3d2:	mov    cl,0x1d
  40c3d4:	sahf   
  40c3d5:	ja     0x40c37c
  40c3d7:	xor    BYTE PTR [edx-0xb1fb089],dh
  40c3dd:	pop    edx
  40c3de:	pop    es
  40c3df:	mov    ebp,0x82b8f13c
  40c3e4:	mov    eax,ds:0xd573fe06
  40c3e9:	in     al,0x5a
  40c3eb:	pop    ecx
  40c3ec:	mov    edi,0xb60babeb
  40c3f1:	popf   
  40c3f2:	addr16 xchg esi,eax
  40c3f4:	add    ebx,DWORD PTR [ebx+0x2cc199cf]
  40c3fa:	cmp    bh,BYTE PTR [ecx+0x7e1c6cf2]
  40c400:	cmp    al,0x94
  40c402:	inc    esi
  40c403:	mul    BYTE PTR [esp+esi*4]
  40c406:	or     BYTE PTR [eax+0x1a],0x90
  40c40a:	add    dl,dh
  40c40c:	leave  
  40c40d:	push   ebp
  40c40e:	mov    edx,0xa319b683
  40c413:	aas    
  40c414:	sbb    BYTE PTR [esi-0x56a46af1],0xaf
  40c41b:	or     BYTE PTR [edx],bh
  40c41d:	mov    dl,0x8d
  40c41f:	jnp    0x40c400
  40c421:	or     al,0x2d
  40c423:	cs or  eax,0xcaf8cd84
  40c429:	pop    es
  40c42a:	mov    ah,0xbb
  40c42c:	push   ebx
  40c42d:	mov    edx,0xa5263072
  40c432:	fdiv   DWORD PTR [eax]
  40c434:	pop    edi
  40c435:	cmp    edi,DWORD PTR [ecx+0x6ce55489]
  40c43b:	xchg   BYTE PTR [ebp-0x78],al
  40c43e:	jmp    0x3dd6:0xb05e63fb
  40c445:	pop    esi
  40c446:	std    
  40c447:	inc    edx
  40c448:	mov    dl,0x2c
  40c44a:	ror    BYTE PTR [ebp+0x476e3e3],1
  40c450:	inc    esp
  40c451:	nop
  40c452:	repnz (bad) 
  40c455:	xchg   ebx,eax
  40c456:	push   ecx
  40c457:	aad    0x58
  40c459:	cs ins BYTE PTR es:[edi],dx
  40c45b:	mov    ebp,DWORD PTR [eax-0x30be9132]
  40c461:	aad    0x96
  40c463:	in     al,dx
  40c464:	add    ebx,0x3410eefb
  40c46a:	and    BYTE PTR ds:0x1cc6376d,al
  40c470:	aam    0x10
  40c472:	dec    edi
  40c473:	xor    eax,0x19183237
  40c478:	test   eax,0xbf13083e
  40c47d:	or     eax,0xb0c87900
  40c482:	stos   DWORD PTR es:[edi],eax
  40c483:	stos   BYTE PTR es:[edi],al
  40c484:	sbb    eax,0xaad893dd
  40c489:	inc    esi
  40c48a:	adc    al,0xe5
  40c48c:	and    al,0xd7
  40c48e:	or     dl,BYTE PTR [ecx+0x2b52419]
  40c494:	outs   dx,DWORD PTR ds:[esi]
  40c495:	mov    edx,0x79cbb46e
  40c49a:	repz pop ds
  40c49c:	jmp    0x40c51b
  40c49e:	or     BYTE PTR [ebx-0x6c5e82d8],bl
  40c4a4:	pushf  
  40c4a5:	cdq    
  40c4a6:	jp     0x40c4a7
  40c4a8:	(bad)  
  40c4a9:	not    DWORD PTR [edx+0x54]
  40c4ac:	pop    es
  40c4ad:	push   edx
  40c4ae:	std    
  40c4af:	push   ebp
  40c4b0:	jmp    0x40c465
  40c4b2:	xchg   BYTE PTR [ecx-0x724fa8e6],cl
  40c4b8:	cmp    dh,BYTE PTR ds:0x91a37299
  40c4be:	push   ecx
  40c4bf:	or     DWORD PTR [ebx-0x555776b5],esp
  40c4c5:	mul    bl
  40c4c7:	aaa    
  40c4c8:	mov    bh,0x53
  40c4ca:	stos   DWORD PTR es:[edi],eax
  40c4cb:	pop    ebx
  40c4cc:	(bad)  
  40c4cd:	in     al,dx
  40c4ce:	cmp    eax,DWORD PTR [ebx]
  40c4d0:	sub    ch,BYTE PTR [ecx-0x1e]
  40c4d3:	inc    ebp
  40c4d4:	dec    ecx
  40c4d5:	xchg   ecx,eax
  40c4d6:	adc    esi,DWORD PTR [eax+0x607b1fd7]
  40c4dc:	xor    edx,ecx
  40c4de:	push   ecx
  40c4df:	mov    ds:0x26ce3d6,eax
  40c4e4:	pop    ds
  40c4e5:	cmp    ebx,0x29e77d5c
  40c4eb:	sbb    BYTE PTR [esi],cl
  40c4ed:	xchg   ebp,eax
  40c4ee:	push   ds
  40c4ef:	nop
  40c4f0:	loopne 0x40c55e
  40c4f2:	lock jb 0x40c4b0
  40c4f5:	and    eax,0x577ce6a
  40c4fa:	and    eax,DWORD PTR [ecx+0x10b104b9]
  40c500:	in     eax,dx
  40c501:	pop    ebp
  40c502:	in     eax,0x65
  40c504:	mov    BYTE PTR [edi],ch
  40c506:	fnsave [ebx]
  40c508:	das    
  40c509:	xchg   ebx,eax
  40c50a:	stc    
  40c50b:	jb     0x40c4f0
  40c50d:	jg     0x40c572
  40c50f:	push   ebx
  40c510:	(bad)  
  40c511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c512:	jle    0x40c517
  40c514:	mov    bh,0x1
  40c516:	arpl   WORD PTR [esi+0x7],bp
  40c519:	imul   edx,DWORD PTR [ebp-0x192f6a],0xffffffa0
  40c520:	mov    eax,DWORD PTR [esi+0x2905e0d1]
  40c526:	cmp    al,0x88
  40c528:	pop    ecx
  40c529:	repz mov fs,WORD PTR [edx+0x22]
  40c52d:	scas   al,BYTE PTR es:[edi]
  40c52e:	push   cs
  40c52f:	dec    eax
  40c530:	mov    bh,0xab
  40c532:	call   FWORD PTR [esi-0x493c2cc3]
  40c538:	push   es
  40c539:	add    esp,DWORD PTR [esi+0x7]
  40c53c:	aad    0xd1
  40c53e:	pusha  
  40c53f:	ficomp WORD PTR [eax+0x78e71ab7]
  40c545:	aaa    
  40c546:	mov    eax,ds:0x9c81c87c
  40c54b:	xor    al,0xaa
  40c54d:	cmp    eax,0x5e867947
  40c552:	jnp    0x40c4db
  40c554:	aad    0x78
  40c556:	ror    DWORD PTR [edx],0x12
  40c559:	jle    0x40c55b
  40c55b:	mov    esi,0x71fa36e
  40c560:	ins    BYTE PTR es:[edi],dx
  40c561:	add    DWORD PTR [edi],esi
  40c563:	or     DWORD PTR [esi+0x69],edi
  40c566:	and    edx,ebx
  40c568:	adc    al,0xad
  40c56a:	mov    esp,0xcb39b9d9
  40c56f:	mov    ecx,0xdd6d9ed8
  40c574:	xchg   DWORD PTR [edx-0x51dc1f07],eax
  40c57a:	out    0x83,eax
  40c57c:	sar    BYTE PTR [edi+0x1f],0xe7
  40c580:	in     al,0xbb
  40c582:	popf   
  40c583:	fs dec edx
  40c585:	sub    DWORD PTR [ebx-0x3a],esi
  40c588:	int3   
  40c589:	ja     0x40c556
  40c58b:	imul   eax,DWORD PTR [eax+ebx*4+0x31441f71],0x53942da9
  40c596:	xor    al,0x1
  40c598:	xchg   edi,eax
  40c599:	or     edx,DWORD PTR [ecx+0x39]
  40c59c:	mov    ecx,0xfa273b3
  40c5a1:	outs   dx,DWORD PTR ds:[esi]
  40c5a2:	(bad)  
  40c5a3:	xlat   BYTE PTR ds:[bx]
  40c5a5:	push   ecx
  40c5a6:	loop   0x40c589
  40c5a8:	inc    eax
  40c5a9:	pop    ds
  40c5aa:	push   0x99bb2fcc
  40c5af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5b0:	bound  ecx,QWORD PTR [esi-0xa]
  40c5b3:	pop    es
  40c5b4:	push   esi
  40c5b5:	push   0x2f
  40c5b7:	sbb    DWORD PTR [esi],edi
  40c5b9:	mov    al,al
  40c5bb:	pop    esi
  40c5bc:	lea    eax,[ebx+0x26674811]
  40c5c2:	cmp    ch,BYTE PTR [eax]
  40c5c4:	or     BYTE PTR [ecx+0x11],dh
  40c5c7:	cmp    eax,0x265c2290
  40c5cc:	and    al,0x46
  40c5ce:	arpl   WORD PTR [eax-0x5a],bp
  40c5d1:	cs xor al,0xe
  40c5d4:	and    al,0xec
  40c5d6:	loop   0x40c586
  40c5d8:	xchg   ecx,eax
  40c5d9:	push   esi
  40c5da:	jne    0x40c612
  40c5dc:	rol    ecx,0x39
  40c5df:	mov    esi,0xf5208a71
  40c5e4:	inc    ebx
  40c5e5:	mov    eax,ds:0xa3283d5
  40c5ea:	retf   
  40c5eb:	repz dec edx
  40c5ed:	jmp    0x8aa3:0x499720e3
  40c5f4:	int    0x5e
  40c5f6:	hlt    
  40c5f7:	stos   DWORD PTR es:[edi],eax
  40c5f8:	cmp    ch,0x62
  40c5fb:	sbb    DWORD PTR [edx+0x73],0x554e0703
  40c602:	lock jmp 0x40c66c
  40c605:	lods   eax,DWORD PTR ds:[esi]
  40c606:	out    dx,eax
  40c607:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c608:	xor    bh,0xbe
  40c60b:	ins    BYTE PTR es:[edi],dx
  40c60c:	arpl   WORD PTR [ecx],sp
  40c60e:	out    dx,al
  40c60f:	lds    eax,FWORD PTR [ecx-0x6586061f]
  40c615:	cmp    BYTE PTR [ebx+0x460b98c0],bh
  40c61b:	stos   DWORD PTR es:[edi],eax
  40c61c:	inc    edi
  40c61d:	pop    ecx
  40c61e:	sub    al,0xa6
  40c620:	(bad)  
  40c621:	mov    ecx,0x58f9c6c7
  40c626:	push   edi
  40c627:	(bad)  
  40c628:	adc    eax,0x13ebc995
  40c62d:	and    esi,esi
  40c62f:	or     al,0x0
  40c631:	xchg   ecx,eax
  40c632:	cmp    BYTE PTR [ecx-0x4c60df54],ch
  40c638:	popf   
  40c639:	sub    ebp,eax
  40c63b:	(bad)  
  40c63c:	stos   DWORD PTR es:[edi],eax
  40c63d:	add    al,0x16
  40c63f:	mov    bl,0x42
  40c641:	jnp    0x40c5ff
  40c643:	and    BYTE PTR [edi+0x43],ch
  40c646:	jmp    0x40c60c
  40c648:	mov    dl,0x45
  40c64a:	jge    0x40c6b2
  40c64c:	sar    BYTE PTR [ecx-0x1634daeb],cl
  40c652:	mov    dl,0x8e
  40c654:	(bad)  
  40c656:	dec    ebx
  40c657:	mov    edi,0x73c03224
  40c65c:	inc    edi
  40c65d:	sar    BYTE PTR [edx],cl
  40c65f:	inc    esi
  40c660:	xor    eax,0x149b3da3
  40c665:	and    eax,0x227bef90
  40c66a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c66b:	rcl    esi,cl
  40c66d:	mov    eax,ds:0xb603d062
  40c672:	retf   0x2e1c
  40c675:	add    ebx,DWORD PTR [ecx*4+0x728a0df5]
  40c67c:	fld    TBYTE PTR [edi-0x59]
  40c67f:	cwde   
  40c680:	xor    al,0x6c
  40c682:	call   0xe75a6931
  40c687:	iret   
  40c688:	dec    eax
  40c689:	imul   edx,esp,0x81658995
  40c68f:	enter  0xb6b7,0xfc
  40c693:	mov    ds:0xd8286b5b,al
  40c698:	dec    esp
  40c699:	arpl   WORD PTR [edx],cx
  40c69b:	scas   eax,DWORD PTR es:[edi]
  40c69c:	in     eax,0xe2
  40c69e:	in     al,dx
  40c69f:	mov    cl,0x1c
  40c6a1:	inc    eax
  40c6a2:	pop    ebp
  40c6a3:	adc    BYTE PTR [eax+0x64],bl
  40c6a6:	in     al,0xf0
  40c6a8:	repnz sbb BYTE PTR [edi],ah
  40c6ab:	pop    ebp
  40c6ac:	xor    DWORD PTR [esi+0x50732339],ecx
  40c6b2:	popf   
  40c6b3:	(bad)  
  40c6b4:	jecxz  0x40c71e
  40c6b6:	mov    dl,0x73
  40c6b8:	mov    cl,0x6e
  40c6ba:	setae  BYTE PTR [edx-0x5b37aa09]
  40c6c1:	jne    0x40c65f
  40c6c3:	pop    edi
  40c6c4:	dec    edi
  40c6c5:	dec    ebx
  40c6c6:	jmp    0x40c66e
  40c6c8:	out    dx,al
  40c6c9:	dec    edx
  40c6ca:	dec    edx
  40c6cb:	mov    edx,0x9aae4793
  40c6d0:	sub    al,0xb8
  40c6d2:	aaa    
  40c6d3:	dec    ecx
  40c6d4:	iret   
  40c6d5:	aaa    
  40c6d6:	xchg   ebp,eax
  40c6d7:	sub    dl,BYTE PTR [esi-0x14]
  40c6da:	xchg   esi,eax
  40c6db:	sbb    al,0xaa
  40c6dd:	iret   
  40c6de:	neg    BYTE PTR ds:[ebx+0x15]
  40c6e2:	or     edi,ebx
  40c6e4:	loope  0x40c71c
  40c6e6:	mov    ah,0xc4
  40c6e8:	push   ss
  40c6e9:	mov    ah,0x6d
  40c6eb:	dec    edi
  40c6ec:	sbb    al,0xac
  40c6ee:	xor    eax,0xd90f04f0
  40c6f3:	push   cs
  40c6f4:	jl     0x40c6ee
  40c6f6:	fcom   QWORD PTR [eax-0x4]
  40c6f9:	jp     0x40c701
  40c6fb:	dec    ebx
  40c6fc:	xor    DWORD PTR [ebp+0x5e86e310],0xdaba9167
  40c706:	jns    0x40c77e
  40c708:	push   eax
  40c709:	imul   ebp,DWORD PTR [edx],0x52
  40c70c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c70d:	dec    eax
  40c70e:	(bad)  
  40c70f:	push   ebp
  40c710:	hlt    
  40c711:	pop    edi
  40c712:	retf   0x84d4
  40c715:	pop    ebx
  40c716:	pop    ecx
  40c717:	lea    edx,[edi+esi*4]
  40c71a:	mov    dh,0xa3
  40c71c:	xlat   BYTE PTR ds:[ebx]
  40c71d:	dec    ecx
  40c71e:	inc    ebx
  40c71f:	mov    cl,0x71
  40c721:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c722:	pop    ecx
  40c723:	or     bh,BYTE PTR ds:0x40524117
  40c729:	jne    0x40c769
  40c72b:	shl    BYTE PTR [ebp+0x54],0x28
  40c72f:	and    al,0x5c
  40c731:	int    0x16
  40c733:	in     eax,dx
  40c734:	sbb    eax,0x954a09b8
  40c739:	rcr    DWORD PTR fs:[edi+0x60a4e0d8],1
  40c740:	jmp    0xcd70:0xcc1b5
  40c747:	jmp    0xb106:0x39e118e5
  40c74e:	mov    edi,0xf8b81919
  40c753:	addr16 call 0xd029:0xbc37c105
  40c75b:	jecxz  0x40c7b6
  40c75d:	fidivr DWORD PTR [eax-0x7999b6ba]
  40c763:	mov    ebx,0x84e120c0
  40c768:	cmp    esi,ebx
  40c76a:	push   es
  40c76b:	out    0xa3,eax
  40c76d:	ja     0x40c781
  40c76f:	dec    eax
  40c770:	inc    esi
  40c771:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c772:	jne    0x40c7c6
  40c774:	push   0xffffffb6
  40c776:	add    al,0x61
  40c778:	mov    eax,ds:0x678bf2b6
  40c77d:	pop    ss
  40c77e:	pop    ebx
  40c77f:	call   0x9033:0x75665d53
  40c786:	aam    0x84
  40c788:	lods   eax,DWORD PTR ds:[esi]
  40c789:	push   ebp
  40c78a:	jnp    0x40c792
  40c78c:	mov    ?,WORD PTR [ebx-0x611e16f8]
  40c792:	lds    ecx,FWORD PTR [edx+edx*1]
  40c795:	pop    ecx
  40c796:	add    al,0xf3
  40c798:	daa    
  40c799:	cld    
  40c79a:	outs   dx,BYTE PTR ds:[esi]
  40c79b:	mov    eax,0x3086e8c6
  40c7a0:	adc    eax,DWORD PTR [esi]
  40c7a2:	and    al,ch
  40c7a4:	sub    esp,DWORD PTR [ebp-0x35]
  40c7a7:	in     al,dx
  40c7a8:	inc    edx
  40c7a9:	mov    edi,0x6cad1389
  40c7ae:	in     al,dx
  40c7af:	lods   al,BYTE PTR es:[esi]
  40c7b1:	push   ss
  40c7b2:	imul   esp,DWORD PTR [bx+si],0xe66a76d5
  40c7b9:	mov    eax,0xf00c34d2
  40c7be:	cli    
  40c7bf:	xchg   DWORD PTR [ecx+0x71],ecx
  40c7c2:	scas   eax,DWORD PTR es:[edi]
  40c7c3:	mov    esi,0x56e93366
  40c7c8:	sbb    al,0xd3
  40c7ca:	and    dl,BYTE PTR [ebx-0x7a7e7bc4]
  40c7d0:	mov    BYTE PTR [ecx-0x5c],dl
  40c7d3:	jae    0x40c7ab
  40c7d5:	outs   dx,DWORD PTR ds:[esi]
  40c7d6:	xor    DWORD PTR [edx+ebp*2+0x2f],0x41
  40c7db:	push   cs
  40c7dc:	mov    DWORD PTR [ecx-0x452a76fb],ecx
  40c7e2:	sub    ch,BYTE PTR ds:0xf440cf0
  40c7e8:	imul   edx,DWORD PTR [ebx+esi*1],0x58
  40c7ec:	mov    dl,0xe7
  40c7ee:	add    al,0xcc
  40c7f0:	fldcw  WORD PTR [edi+ebp*4+0x3c]
  40c7f4:	mov    bl,0x8b
  40c7f6:	sbb    al,BYTE PTR [edx+0x70e25f29]
  40c7fc:	int3   
  40c7fd:	ss cli 
  40c7ff:	es in  al,dx
  40c801:	add    dh,BYTE PTR [edi+0x8]
  40c804:	cdq    
  40c805:	mov    eax,DWORD PTR ds:[edx+0x608b4fad]
  40c80c:	fiadd  WORD PTR [ebx-0x33]
  40c80f:	or     esp,DWORD PTR [ecx-0x1f]
  40c812:	mov    ebp,0x359a916d
  40c817:	xchg   esp,eax
  40c818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c819:	xor    al,0x62
  40c81b:	and    al,BYTE PTR [ecx]
  40c81d:	inc    esp
  40c81e:	push   DWORD PTR [esi]
  40c820:	xor    DWORD PTR [ebx+0x66],esp
  40c823:	cwde   
  40c824:	imul   BYTE PTR [ebp-0x94aabb8]
  40c82a:	fisttp WORD PTR [ebp+0x4a]
  40c82d:	fmul   DWORD PTR [esi+0x25]
  40c830:	pusha  
  40c831:	inc    edi
  40c832:	fwait
  40c833:	sub    eax,0x1a209de1
  40c838:	pop    ebp
  40c839:	in     al,dx
  40c83a:	es aam 0xa4
  40c83d:	fsub   DWORD PTR [edx-0x46]
  40c840:	fmul   DWORD PTR [edx-0x5c]
  40c843:	mov    eax,cs:0xc659042f
  40c849:	mov    DWORD PTR [eax+0x3f],0x8d0e4228
  40c850:	dec    edi
  40c851:	aas    
  40c852:	jge    0x40c882
  40c854:	iret   
  40c855:	cs push esp
  40c857:	inc    ebx
  40c858:	fucomi st,st(2)
  40c85a:	mov    dl,0xdf
  40c85c:	mov    ecx,0x8f5b8bad
  40c861:	jno    0x40c890
  40c863:	mov    ebp,0x2a46ad5e
  40c868:	mul    ah
  40c86a:	lds    eax,FWORD PTR [ebx-0x17ad7b57]
  40c870:	push   fs
  40c872:	(bad)  
  40c873:	into   
  40c874:	(bad)  
  40c875:	xor    eax,0x886d8ce1
  40c87a:	jno    0x40c8ef
  40c87c:	push   ebx
  40c87d:	je     0x40c844
  40c87f:	scas   eax,DWORD PTR es:[edi]
  40c880:	cmp    ebx,ecx
  40c882:	in     eax,0x61
  40c884:	mov    BYTE PTR [esi+0x61],cl
  40c887:	(bad)
  40c88a:	rcl    DWORD PTR [edx+0x242ffc35],cl
  40c890:	ins    BYTE PTR es:[edi],dx
  40c891:	xchg   BYTE PTR [eax+edi*2],ah
  40c894:	cmp    ah,BYTE PTR [edx+0x716dfe2d]
  40c89a:	das    
  40c89b:	inc    ecx
  40c89c:	dec    esi
  40c89d:	push   es
  40c89e:	sub    bh,BYTE PTR [ecx+0x12b4d1c9]
  40c8a4:	sbb    BYTE PTR [ebx-0x740e60d7],0xd6
  40c8ab:	inc    ebp
  40c8ac:	pop    ecx
  40c8ad:	push   eax
  40c8ae:	les    eax,FWORD PTR [ebp+0x7faa334a]
  40c8b4:	aaa    
  40c8b5:	or     DWORD PTR [ecx],esi
  40c8b7:	jae    0x40c881
  40c8b9:	aam    0x1e
  40c8bb:	mov    eax,ds:0x6335e639
  40c8c0:	inc    esp
  40c8c1:	jae    0x40c935
  40c8c3:	mov    eax,ds:0x5a350550
  40c8c8:	push   0x855cba9a
  40c8cd:	xchg   ebp,eax
  40c8ce:	and    BYTE PTR [ecx-0x3fd358a1],bh
  40c8d4:	xchg   ecx,eax
  40c8d5:	scas   eax,DWORD PTR es:[edi]
  40c8d6:	mov    ebx,0xeeca76cc
  40c8db:	inc    esp
  40c8dc:	retf   
  40c8dd:	pop    eax
  40c8de:	mov    al,0xb
  40c8e0:	aad    0x9c
  40c8e2:	in     al,0x8c
  40c8e4:	push   edx
  40c8e5:	xor    esp,eax
  40c8e7:	loopne 0x40c92f
  40c8e9:	push   ebp
  40c8ea:	push   eax
  40c8eb:	fs call 0x7c3dc544
  40c8f1:	mov    al,0x26
  40c8f3:	cmc    
  40c8f4:	push   ebp
  40c8f5:	and    BYTE PTR [ecx+0x42],dh
  40c8f8:	jmp    0x4f8f9580
  40c8fd:	push   0x4a
  40c8ff:	dec    edi
  40c900:	popf   
  40c901:	outs   dx,DWORD PTR ds:[esi]
  40c902:	and    edx,DWORD PTR [ecx+0x3a]
  40c905:	cdq    
  40c906:	mov    ch,0x90
  40c908:	ret    
  40c909:	lds    ebx,FWORD PTR [ebx+0x5b42ee2a]
  40c90f:	inc    edx
  40c910:	sub    ebx,esi
  40c912:	test   al,0x96
  40c914:	sub    DWORD PTR [ebp-0x79cbcc4f],esi
  40c91a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c91b:	push   ebp
  40c91c:	xor    BYTE PTR [edx-0x48],0xe6
  40c920:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c921:	jb     0x40c927
  40c923:	test   BYTE PTR [edx-0x46],bl
  40c926:	cs cli 
  40c928:	sub    ebp,edx
  40c92a:	mov    al,ds:0x1723cb15
  40c92f:	push   ebp
  40c930:	inc    edi
  40c931:	cmp    al,0xd8
  40c933:	test   BYTE PTR ds:0x382fa709,dl
  40c939:	xchg   edi,eax
  40c93a:	fdiv   DWORD PTR es:[edi-0x347c9597]
  40c941:	cdq    
  40c942:	sub    DWORD PTR [ebx+0x6d],edx
  40c945:	int    0xd2
  40c947:	jp     0x40c8e6
  40c949:	cmp    al,0xd1
  40c94b:	imul   DWORD PTR [ebx+0x37]
  40c94e:	call   0x1096:0x6dbb8343
  40c955:	jl     0x40c92b
  40c957:	jne    0x40c9ca
  40c959:	xor    eax,0x388ea6c2
  40c95e:	(bad)  
  40c95f:	push   ss
  40c960:	jnp    0x40c9c2
  40c962:	mov    bh,0x46
  40c964:	fisttp QWORD PTR [edx+ecx*8]
  40c967:	lea    ecx,[edi]
  40c969:	push   eax
  40c96a:	xchg   DWORD PTR [eax+0x26],esi
  40c96d:	stc    
  40c96e:	push   0x9d820e82
  40c973:	les    esp,FWORD PTR [esi]
  40c975:	mov    ebp,0x79459293
  40c97a:	fsub   QWORD PTR [esi+ebx*8+0x77d7160]
  40c981:	sub    bl,BYTE PTR [ebx-0x17]
  40c984:	in     eax,dx
  40c985:	lea    esp,[esi]
  40c987:	sub    eax,0xbe2beab1
  40c98c:	jg     0x40c961
  40c98e:	in     eax,dx
  40c98f:	les    edx,FWORD PTR [esi]
  40c991:	mov    cs,WORD PTR [edi-0xf]
  40c994:	fwait
  40c995:	pop    es
  40c996:	jecxz  0x40c972
  40c998:	jecxz  0x40c9fb
  40c99a:	cmp    al,0x27
  40c99c:	and    DWORD PTR [edi+0x5],esi
  40c99f:	aam    0x58
  40c9a1:	stc    
  40c9a2:	clc    
  40c9a3:	adc    esi,DWORD PTR [edi]
  40c9a5:	pop    esi
  40c9a6:	pop    ecx
  40c9a7:	adc    esp,ecx
  40c9a9:	bound  edi,QWORD PTR [esi]
  40c9ab:	pop    edi
  40c9ac:	add    eax,0x97c9850f
  40c9b1:	or     al,0xc9
  40c9b3:	pop    eax
  40c9b4:	popf   
  40c9b5:	std    
  40c9b6:	mov    bh,0x55
  40c9b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9b9:	mov    al,ds:0x6bd6f850
  40c9be:	and    al,BYTE PTR [edx-0x55]
  40c9c1:	fisub  WORD PTR [esp+ebx*1]
  40c9c4:	stos   BYTE PTR es:[edi],al
  40c9c5:	push   ebp
  40c9c6:	(bad)  
  40c9c7:	out    dx,eax
  40c9c8:	mov    ebx,DWORD PTR [ebx]
  40c9ca:	scas   eax,DWORD PTR es:[edi]
  40c9cb:	mov    ebp,edx
  40c9cd:	das    
  40c9ce:	cmp    DWORD PTR [ecx],ecx
  40c9d0:	mov    edx,0xaef6860d
  40c9d5:	lods   eax,DWORD PTR ds:[esi]
  40c9d6:	(bad)  
  40c9d7:	fsubrp st(7),st
  40c9d9:	(bad)  
  40c9db:	sub    esp,DWORD PTR [ebx+0x6e]
  40c9de:	jnp    0x40c9b2
  40c9e0:	(bad)
  40c9e3:	arpl   WORD PTR [eax-0x57],bx
  40c9e6:	push   esp
  40c9e7:	shr    edi,1
  40c9e9:	pushf  
  40c9ea:	jle    0x40c990
  40c9ec:	and    ah,BYTE PTR [ebx-0x21]
  40c9ef:	or     cl,BYTE PTR [esp+ecx*1]
  40c9f2:	xchg   ecx,eax
  40c9f3:	mov    al,ds:0xe17d1187
  40c9f8:	sub    eax,DWORD PTR [ebp+0x967d04d]
  40c9fe:	dec    DWORD PTR [eax]
  40ca00:	je     0x40c9d2
  40ca02:	stos   DWORD PTR es:[edi],eax
  40ca03:	xchg   BYTE PTR ds:0x3a051800,dh
  40ca09:	xor    BYTE PTR [edx],dh
  40ca0b:	sbb    ecx,DWORD PTR [ecx-0x35]
  40ca0e:	jge    0x40c9c5
  40ca10:	ret    
  40ca11:	data16 mov al,0xc1
  40ca14:	ss xchg edi,eax
  40ca16:	push   ecx
  40ca17:	xchg   ebx,eax
  40ca18:	pop    ebp
  40ca19:	cmp    al,0xee
  40ca1b:	fnsave [ecx]
  40ca1d:	or     eax,0xce2079ce
  40ca22:	mov    cl,0xd5
  40ca24:	shr    DWORD PTR ds:0x3958d9bd,cl
  40ca2a:	leave  
  40ca2b:	cmp    BYTE PTR [edx],0x48
  40ca2e:	out    0x8d,al
  40ca30:	cwde   
  40ca31:	mov    dl,cl
  40ca33:	cli    
  40ca34:	mov    eax,ds:0x76a1a5f8
  40ca39:	enter  0x4ba9,0xf2
  40ca3d:	xchg   BYTE PTR [ebp+0x39],ch
  40ca40:	sub    dh,BYTE PTR [esi+ebx*8+0x74]
  40ca44:	adc    ecx,DWORD PTR [edi-0x7a1cc7ae]
  40ca4a:	mov    al,ds:0x3159d3f0
  40ca4f:	call   0xbcff:0x96933e69
  40ca56:	adc    DWORD PTR [ecx-0x12089838],ecx
  40ca5c:	pop    edi
  40ca5d:	mov    ah,0x9c
  40ca5f:	retf   
  40ca60:	mov    ch,0xc4
  40ca62:	in     al,dx
  40ca63:	ins    DWORD PTR es:[edi],dx
  40ca64:	test   eax,0x3608bdd
  40ca69:	shl    DWORD PTR [edx],0x14
  40ca6c:	js     0x40ca7b
  40ca6e:	ficomp DWORD PTR [ebx]
  40ca70:	xchg   ebp,eax
  40ca71:	pop    esp
  40ca72:	mov    bl,0x26
  40ca74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca75:	inc    ebp
  40ca76:	cmp    BYTE PTR [edx+eiz*2],bh
  40ca79:	mov    cl,0x7e
  40ca7b:	adc    bh,bh
  40ca7d:	daa    
  40ca7e:	mov    ah,0x9e
  40ca80:	mov    eax,0x98fe130a
  40ca85:	push   es
  40ca86:	dec    ebp
  40ca87:	xlat   BYTE PTR ds:[ebx]
  40ca88:	loopne 0x40ca47
  40ca8a:	mov    ch,0x2d
  40ca8c:	test   DWORD PTR [eax-0x6e422d5],ecx
  40ca92:	(bad)  [ecx-0x2f]
  40ca95:	test   al,0xee
  40ca97:	sar    BYTE PTR [ebx+0x76],1
  40ca9a:	mov    ebp,ebp
  40ca9c:	out    dx,al
  40ca9d:	ror    DWORD PTR [eax-0x34978920],cl
  40caa3:	cmc    
  40caa4:	fild   DWORD PTR [ebp+0x65]
  40caa7:	mov    BYTE PTR [esi],ah
  40caa9:	iret   
  40caaa:	sub    dl,ch
  40caac:	inc    eax
  40caad:	pusha  
  40caae:	mov    ebp,0xc1761a46
  40cab3:	shl    DWORD PTR [edx],1
  40cab5:	outs   dx,DWORD PTR ds:[esi]
  40cab6:	and    bl,BYTE PTR [ebx-0x6dda42a1]
  40cabc:	stos   BYTE PTR es:[edi],al
  40cabd:	repz cwde 
  40cabf:	popf   
  40cac0:	dec    edi
  40cac1:	in     al,dx
  40cac2:	adc    BYTE PTR ds:[edi-0x3a],dl
  40cac6:	int3   
  40cac7:	rol    DWORD PTR [ebx-0x3],1
  40caca:	jmp    0xb2eb58eb
  40cacf:	jbe    0x40caef
  40cad1:	jnp    0x40cacc
  40cad3:	rcr    DWORD PTR [ebx-0x20fd7a1a],0x36
  40cada:	push   ds
  40cadb:	pop    edx
  40cadc:	shl    BYTE PTR [eax],cl
  40cade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cadf:	adc    DWORD PTR [edx-0x4728c7fb],esp
  40cae5:	stc    
  40cae6:	adc    DWORD PTR [edi],ecx
  40cae8:	cmp    al,dh
  40caea:	in     eax,dx
  40caeb:	fisubr WORD PTR [edx-0x30]
  40caee:	sar    DWORD PTR [eax+0x17],cl
  40caf1:	dec    ebx
  40caf2:	inc    ebp
  40caf3:	pop    ecx
  40caf4:	sbb    eax,0x44623bed
  40caf9:	jle    0x40caca
  40cafb:	das    
  40cafc:	jmp    0xd180a630
  40cb01:	adc    DWORD PTR [edi+0x5002d647],eax
  40cb07:	push   ds
  40cb08:	outs   dx,DWORD PTR ds:[esi]
  40cb09:	push   eax
  40cb0a:	push   ebx
  40cb0b:	dec    DWORD PTR [edi+eax*2]
  40cb0e:	mov    edi,0x30697dbb
  40cb13:	pop    es
  40cb14:	sar    DWORD PTR [edx-0x2e],1
  40cb17:	rcl    DWORD PTR [edi-0x7f77af52],1
  40cb1d:	push   ds
  40cb1e:	jmp    0x32fada56
  40cb23:	cmp    dl,BYTE PTR [esi]
  40cb25:	jo     0x40cb13
  40cb27:	push   ebp
  40cb28:	dec    edx
  40cb29:	inc    ecx
  40cb2a:	or     DWORD PTR [ebp+0xc],esi
  40cb2d:	or     eax,0xa7c324bb
  40cb32:	out    0x88,eax
  40cb34:	cmp    dl,dl
  40cb36:	jmp    0x40cb53
  40cb38:	ficom  WORD PTR [edi+0x7f]
  40cb3b:	add    edi,DWORD PTR [ebx-0x59]
  40cb3e:	int3   
  40cb3f:	push   ebp
  40cb40:	daa    
  40cb41:	and    al,0xad
  40cb43:	lahf   
  40cb44:	xchg   ebp,eax
  40cb45:	xchg   al,dl
  40cb47:	dec    ebx
  40cb48:	mov    WORD PTR ds:0x58bf7a16,cs
  40cb4e:	pop    ebp
  40cb4f:	mov    dl,0xd5
  40cb51:	repz dec ecx
  40cb53:	mov    al,0x58
  40cb55:	cdq    
  40cb56:	inc    esp
  40cb57:	rcr    BYTE PTR [ecx+eiz*2],cl
  40cb5a:	and    eax,0xe0b4a478
  40cb5f:	xchg   DWORD PTR [esi-0x724157f0],edi
  40cb65:	push   eax
  40cb66:	outs   dx,DWORD PTR ds:[esi]
  40cb67:	inc    esp
  40cb68:	call   0x5b5f:0xac1395d6
  40cb6f:	fs in  al,dx
  40cb71:	cmp    al,dl
  40cb73:	loope  0x40cb95
  40cb75:	mov    cs,WORD PTR [ebp+0x2c3f9e2c]
  40cb7b:	mov    esi,0xd986bf2a
  40cb80:	push   ss
  40cb81:	add    eax,0x76f58088
  40cb86:	or     BYTE PTR [esi+0x130b18ba],bh
  40cb8c:	cmp    BYTE PTR [ebx+0x51],al
  40cb8f:	mov    ebp,0xbb704fb1
  40cb94:	sub    BYTE PTR [edx-0x1],cl
  40cb97:	xchg   edi,eax
  40cb98:	nop
  40cb99:	dec    eax
  40cb9a:	dec    edi
  40cb9b:	leave  
  40cb9c:	mov    ebp,DWORD PTR [ebx]
  40cb9e:	mov    al,0x42
  40cba0:	(bad)  
  40cba2:	(bad)  
  40cba3:	out    0x9b,al
  40cba5:	std    
  40cba6:	mov    ecx,0x7db950bb
  40cbab:	fdiv   DWORD PTR [ebp-0x50b8b2c9]
  40cbb1:	stos   DWORD PTR es:[edi],eax
  40cbb2:	xchg   DWORD PTR ds:0x3de79717,ecx
  40cbb8:	xchg   ebp,eax
  40cbb9:	jecxz  0x40cc0f
  40cbbb:	out    0x57,eax
  40cbbd:	or     edi,DWORD PTR [edi+0x3883f73c]
  40cbc3:	pop    ebp
  40cbc4:	out    0x53,eax
  40cbc6:	and    cl,BYTE PTR [ecx-0x23]
  40cbc9:	and    ch,BYTE PTR [esi]
  40cbcb:	add    esp,DWORD PTR [ebx+0x25]
  40cbce:	mov    dl,0x16
  40cbd0:	retf   0x4f81
  40cbd3:	int    0x5d
  40cbd5:	jbe    0x40cb6d
  40cbd7:	jmp    0x40cbaa
  40cbd9:	cwde   
  40cbda:	push   esp
  40cbdb:	mov    DWORD PTR [esi+0x44168389],edx
  40cbe1:	retf   0x249
  40cbe4:	fwait
  40cbe5:	(bad)  
  40cbe6:	pop    ebx
  40cbe7:	sub    bh,BYTE PTR [edi]
  40cbe9:	fwait
  40cbea:	dec    esp
  40cbeb:	fsubr  DWORD PTR ds:0x1cd66e84
  40cbf1:	popa   
  40cbf2:	mov    eax,ds:0x23958785
  40cbf7:	(bad)  [ebx]
  40cbf9:	inc    esi
  40cbfa:	arpl   ax,cx
  40cbfc:	push   eax
  40cbfd:	add    al,0x78
  40cbff:	pop    ecx
  40cc00:	add    al,0xb4
  40cc02:	mov    bh,0xb2
  40cc04:	mov    edi,0xb0bb1a5b
  40cc09:	inc    esi
  40cc0a:	cld    
  40cc0b:	sqrtps xmm6,XMMWORD PTR [edx-0x3483aae8]
  40cc12:	mov    cl,0x2d
  40cc14:	jp     0x40cc26
  40cc16:	aad    0x2b
  40cc18:	ror    BYTE PTR [ecx],0xd7
  40cc1b:	outs   dx,DWORD PTR ds:[esi]
  40cc1c:	loop   0x40cc72
  40cc1e:	out    dx,eax
  40cc1f:	retf   
  40cc20:	xor    DWORD PTR [ebp-0x49583f7d],edi
  40cc26:	pop    edx
  40cc27:	jl     0x40cbc5
  40cc29:	pushf  
  40cc2a:	mov    ebx,0x6ef27b02
  40cc2f:	aad    0x49
  40cc31:	mov    ah,ch
  40cc33:	ja     0x40cbeb
  40cc35:	or     BYTE PTR [edi+0xa],dl
  40cc38:	pop    edx
  40cc39:	int3   
  40cc3a:	mov    esp,0x6fcea2bd
  40cc3f:	lock jl 0x40cc68
  40cc42:	lock fwait
  40cc44:	shl    DWORD PTR [ecx],0x9f
  40cc47:	test   BYTE PTR [ebx+0x3b],bh
  40cc4a:	in     al,dx
  40cc4b:	(bad)  
  40cc4c:	mov    ds:0x33d74a5d,al
  40cc51:	mov    cl,BYTE PTR [edi]
  40cc53:	add    ecx,DWORD PTR [eax+0x14]
  40cc56:	ds xchg esp,eax
  40cc58:	pop    esp
  40cc59:	pop    ecx
  40cc5a:	push   ebp
  40cc5b:	mov    ss:0xcba9dfd7,eax
  40cc61:	(bad)  
  40cc62:	clc    
  40cc63:	test   al,0x1a
  40cc65:	ror    ch,1
  40cc67:	and    edi,edi
  40cc69:	pop    ss
  40cc6a:	fadd   DWORD PTR [eax+esi*8-0x3fb3b1ad]
  40cc71:	push   ecx
  40cc72:	lock xor al,0xe2
  40cc75:	test   DWORD PTR [edx],ebx
  40cc77:	scas   eax,DWORD PTR es:[edi]
  40cc78:	jl     0x40cc74
  40cc7a:	loop   0x40ccca
  40cc7c:	push   es
  40cc7d:	test   al,0xb3
  40cc7f:	aas    
  40cc80:	xor    ah,BYTE PTR [ebx]
  40cc82:	dec    ecx
  40cc83:	arpl   WORD PTR [edi-0x1b],sp
  40cc86:	(bad)  
  40cc87:	(bad)
  40cc8b:	sti    
  40cc8c:	daa    
  40cc8d:	xchg   edx,eax
  40cc8e:	add    edx,ebx
  40cc90:	jne    0x40cc60
  40cc92:	dec    edx
  40cc93:	repnz inc eax
  40cc95:	int3   
  40cc96:	test   al,0xcc
  40cc98:	rol    ch,cl
  40cc9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc9b:	xchg   esi,eax
  40cc9c:	cmp    BYTE PTR [ebx-0x4c],bh
  40cc9f:	gs pop esp
  40cca1:	daa    
  40cca2:	fnstsw WORD PTR [ecx+0x24]
  40cca5:	sbb    eax,esi
  40cca7:	fld    DWORD PTR [edi+0x4e]
  40ccaa:	or     edx,edx
  40ccac:	inc    ecx
  40ccad:	pusha  
  40ccae:	sti    
  40ccaf:	mov    eax,ds:0x89e434a8
  40ccb4:	icebp  
  40ccb5:	lahf   
  40ccb6:	jmp    0x19bee267
  40ccbb:	retf   0xa6df
  40ccbe:	mov    al,BYTE PTR [ecx+edx*2]
  40ccc1:	pop    ecx
  40ccc2:	aad    0x79
  40ccc4:	lahf   
  40ccc5:	in     al,dx
  40ccc6:	inc    edx
  40ccc7:	jge    0x40cd3e
  40ccc9:	cmp    eax,0x28e112d3
  40ccce:	outs   dx,DWORD PTR ds:[esi]
  40cccf:	ret    
  40ccd0:	dec    ebx
  40ccd1:	mov    esp,0x901c153c
  40ccd6:	test   DWORD PTR [ebx+0x790eb7c7],edi
  40ccdc:	inc    ebp
  40ccdd:	cld    
  40ccde:	adc    DWORD PTR [ecx-0x65],edx
  40cce1:	and    ecx,DWORD PTR [edi-0x36]
  40cce4:	add    al,0x75
  40cce6:	mov    ds:0xf7585d90,al
  40cceb:	in     eax,dx
  40ccec:	mov    dh,0x4d
  40ccee:	jne    0x40ccb5
  40ccf0:	sub    al,0x0
  40ccf2:	xor    al,0x53
  40ccf4:	scas   al,BYTE PTR es:[edi]
  40ccf5:	outs   dx,BYTE PTR ds:[esi]
  40ccf6:	cld    
  40ccf7:	mov    esi,0xbd28734c
  40ccfc:	dec    esp
  40ccfd:	sbb    eax,0xcfd1c9f2
  40cd02:	shl    DWORD PTR [esi],cl
  40cd04:	xor    ecx,DWORD PTR [esi]
  40cd06:	jb     0x40ccab
  40cd08:	icebp  
  40cd09:	dec    edx
  40cd0a:	jmp    0x6c3e601f
  40cd0f:	popw   es
  40cd11:	(bad)  
  40cd13:	adc    BYTE PTR [ebx-0x6a],cl
  40cd16:	bound  ecx,QWORD PTR [ebp-0xb77f536]
  40cd1c:	sti    
  40cd1d:	cld    
  40cd1e:	data16 shl BYTE PTR [ecx],cl
  40cd21:	jecxz  0x40cd3f
  40cd23:	pop    ebx
  40cd24:	or     eax,0x31df4479
  40cd29:	loop   0x40cd1f
  40cd2b:	cmc    
  40cd2c:	nop
  40cd2d:	in     eax,dx
  40cd2e:	pop    ds
  40cd2f:	jno    0x40cd59
  40cd31:	push   esi
  40cd32:	and    eax,ebp
  40cd34:	fcom   DWORD PTR [ecx-0x37a7cc40]
  40cd3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd3b:	adc    al,BYTE PTR [ecx+0x72655b7c]
  40cd41:	jbe    0x40cd86
  40cd43:	ja     0x40cd63
  40cd45:	push   cs
  40cd46:	mov    DWORD PTR [esi],edx
  40cd48:	add    al,0x7d
  40cd4a:	stos   DWORD PTR es:[edi],eax
  40cd4b:	xchg   ebp,eax
  40cd4c:	mov    eax,0xcc83ac6f
  40cd51:	dec    esi
  40cd52:	fcomp  QWORD PTR [esi+0x75]
  40cd55:	outs   dx,BYTE PTR ds:[esi]
  40cd56:	or     eax,edi
  40cd58:	or     dh,BYTE PTR [ecx]
  40cd5a:	inc    edx
  40cd5b:	stc    
  40cd5c:	add    al,0x94
  40cd5e:	pop    edi
  40cd5f:	mov    esp,DWORD PTR [esi+0x9f12352]
  40cd65:	and    al,0x3b
  40cd67:	js     0x40cdad
  40cd69:	and    ah,bh
  40cd6b:	sub    ecx,DWORD PTR [esp+ebp*8]
  40cd6e:	fwait
  40cd6f:	cdq    
  40cd70:	adc    dh,BYTE PTR [edi+0x1f]
  40cd73:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40cd75:	out    dx,eax
  40cd76:	adc    bh,BYTE PTR [ebx]
  40cd78:	mov    ds:0xb2a531e4,al
  40cd7d:	aas    
  40cd7e:	scas   eax,DWORD PTR es:[edi]
  40cd7f:	in     al,0xff
  40cd81:	shl    BYTE PTR [eax-0x8bbdd35],0xd4
  40cd88:	fst    DWORD PTR [edi]
  40cd8a:	sub    BYTE PTR [edi-0x62747a86],dh
  40cd90:	push   esi
  40cd91:	call   0x16d4d201
  40cd96:	adc    al,0x9b
  40cd98:	mov    dh,0x6f
  40cd9a:	sbb    eax,0x5f883d73
  40cd9f:	xchg   ebx,eax
  40cda0:	xor    DWORD PTR [edx],0x7240ef07
  40cda6:	dec    ebp
  40cda7:	sbb    DWORD PTR [ebx-0x6],ebp
  40cdaa:	mov    esp,DWORD PTR [ebx+0x4453dec5]
  40cdb0:	push   esp
  40cdb1:	jbe    0x40cd85
  40cdb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdb4:	(bad)  [ecx-0x20841d30]
  40cdba:	mov    dh,0x8b
  40cdbc:	push   0x6e
  40cdbe:	pop    edi
  40cdbf:	enter  0x88d8,0xfe
  40cdc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdc4:	aaa    
  40cdc5:	leave  
  40cdc6:	adc    DWORD PTR [edi+0x607ceff],0xfffffff1
  40cdcd:	pop    ss
  40cdce:	ds ins DWORD PTR es:[edi],dx
  40cdd0:	or     BYTE PTR [ecx+0x30],ah
  40cdd3:	fidiv  DWORD PTR [edi+ebp*8]
  40cdd6:	test   DWORD PTR [eax-0x8b0587c],esi
  40cddc:	cmp    BYTE PTR [ebx-0x15a7b22b],ah
  40cde2:	addr16 mov esp,0xfd931b4e
  40cde8:	js     0x40ce66
  40cdea:	mov    ds:0x71646ac5,eax
  40cdef:	aad    0xb4
  40cdf1:	jnp    0x40cdd3
  40cdf3:	mov    ds:0xb2ae2621,al
  40cdf8:	lods   eax,DWORD PTR ds:[esi]
  40cdf9:	pop    ds
  40cdfa:	fwait
  40cdfb:	arpl   WORD PTR [edi+0x19],cx
  40cdfe:	loope  0x40ce4a
  40ce00:	je     0x40ce2f
  40ce02:	mov    ch,0x6c
  40ce04:	push   0xe259fd17
  40ce09:	(bad)  
  40ce0a:	cmp    DWORD PTR [edi+0x70],ebx
  40ce0d:	jns    0x40ce15
  40ce0f:	outs   dx,DWORD PTR ds:[esi]
  40ce10:	sub    DWORD PTR [edi-0x49],0x72b794c1
  40ce17:	sbb    al,0x96
  40ce19:	call   0x9681f973
  40ce1e:	cdq    
  40ce1f:	fcmovne st,st(6)
  40ce21:	sahf   
  40ce22:	cmp    eax,0x67bb5523
  40ce27:	push   es
  40ce28:	push   cs
  40ce29:	sbb    cl,dl
  40ce2b:	cmp    eax,0xd436a428
  40ce30:	sbb    ch,dh
  40ce32:	jnp    0x40cdd1
  40ce34:	test   al,ch
  40ce36:	aas    
  40ce37:	mov    ebx,0x145bc0b
  40ce3c:	sub    DWORD PTR [esi+0x5c226f18],ebp
  40ce42:	xchg   ebx,eax
  40ce43:	mov    al,ds:0x33c8351a
  40ce48:	push   edi
  40ce49:	(bad)  
  40ce4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce4b:	mov    ch,0x31
  40ce4d:	add    ebp,DWORD PTR [ecx]
  40ce4f:	in     eax,0xed
  40ce51:	shl    DWORD PTR [ecx-0x5e],1
  40ce54:	sbb    DWORD PTR [ebp-0x685fcb1],esp
  40ce5a:	(bad)  [ebx+0x30e839ea]
  40ce60:	push   edi
  40ce61:	jbe    0x40ce31
  40ce63:	mov    esp,0x86da601f
  40ce68:	not    cl
  40ce6a:	or     al,0xe8
  40ce6c:	rcl    DWORD PTR [ecx-0x79f827f8],0xd8
  40ce73:	xchg   edi,eax
  40ce74:	inc    edi
  40ce75:	mov    ecx,0xf3d8769d
  40ce7a:	sub    al,0x2e
  40ce7c:	fwait
  40ce7d:	imul   ebp,esp,0xf6428ec2
  40ce83:	push   cs
  40ce84:	stc    
  40ce85:	dec    ebp
  40ce86:	push   edi
  40ce87:	add    eax,0xc8fa1dbf
  40ce8c:	add    eax,0x9dec1c5f
  40ce91:	jbe    0x40cea7
  40ce93:	and    eax,0x56c51bb6
  40ce98:	mov    ecx,0xbc1b906e
  40ce9d:	call   0x1729f264
  40cea2:	pop    ss
  40cea3:	mov    esp,0xf66d4515
  40cea8:	pop    esp
  40cea9:	jo     0x40ceaf
  40ceab:	xchg   ecx,eax
  40ceac:	leave  
  40cead:	daa    
  40ceae:	aas    
  40ceaf:	ror    ebx,0x6f
  40ceb2:	nop    esp
  40ceb5:	sbb    al,0x96
  40ceb7:	inc    ecx
  40ceb8:	cmp    eax,0x5cdd9e74
  40cebd:	jne    0x40ceb0
  40cebf:	xchg   edi,eax
  40cec0:	faddp  st(7),st
  40cec2:	push   0xffffffa9
  40cec4:	leave  
  40cec5:	ret    0xd48
  40cec8:	pusha  
  40cec9:	out    0x86,al
  40cecb:	pop    esp
  40cecc:	push   edi
  40cecd:	cmc    
  40cece:	inc    edi
  40cecf:	test   BYTE PTR [edx+0x54],bl
  40ced2:	sub    eax,0x6119a364
  40ced7:	fwait
  40ced8:	test   DWORD PTR [eax],esi
  40ceda:	pop    ebp
  40cedb:	add    al,0xb7
  40cedd:	leave  
  40cede:	mov    edx,0x29dbea89
  40cee3:	hlt    
  40cee4:	lods   al,BYTE PTR ds:[esi]
  40cee5:	cdq    
  40cee6:	cli    
  40cee7:	pop    edi
  40cee8:	sbb    ebx,DWORD PTR [esi]
  40ceea:	inc    eax
  40ceeb:	xor    al,0x9c
  40ceed:	or     ch,BYTE PTR [edx-0x5ee90403]
  40cef3:	repnz stos DWORD PTR es:[edi],eax
  40cef5:	dec    ebx
  40cef6:	fmul   st,st(0)
  40cef8:	pusha  
  40cef9:	(bad)  
  40cefa:	clc    
  40cefb:	nop
  40cefc:	leave  
  40cefd:	js     0x40cee0
  40ceff:	adc    DWORD PTR [ebx],esi
  40cf01:	(bad)  
  40cf03:	aaa    
  40cf04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf05:	fcom   st(1)
  40cf07:	dec    ebx
  40cf08:	jl     0x40cf03
  40cf0a:	cdq    
  40cf0b:	adc    BYTE PTR [ecx],0x19
  40cf0e:	arpl   ax,dx
  40cf10:	push   0x4ffb494e
  40cf15:	xchg   DWORD PTR [ecx],ebx
  40cf17:	mov    BYTE PTR [esi],dh
  40cf19:	sub    al,0x48
  40cf1b:	enter  0xd1d7,0x95
  40cf1f:	bound  ebx,QWORD PTR [eax+0x41cdeb02]
  40cf25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf26:	or     al,0x15
  40cf28:	hlt    
  40cf29:	or     BYTE PTR [ebx+0x49d36f8c],ah
  40cf2f:	jmp    0x1372:0xc6c25d7b
  40cf36:	test   eax,0xb14e6065
  40cf3b:	and    edi,DWORD PTR [edx-0x12]
  40cf3e:	push   edi
  40cf3f:	xchg   ecx,eax
  40cf40:	popf   
  40cf41:	out    dx,al
  40cf42:	push   esi
  40cf43:	fstp   DWORD PTR [edi+0x69]
  40cf46:	mov    BYTE PTR [eax-0x498381c1],dl
  40cf4c:	in     eax,dx
  40cf4d:	jl     0x40cf40
  40cf4f:	(bad)  
  40cf50:	push   ebp
  40cf51:	and    edi,DWORD PTR [ebp+edx*2-0x70]
  40cf55:	cmp    al,0xc0
  40cf57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf58:	dec    edx
  40cf59:	xchg   edx,eax
  40cf5a:	out    dx,al
  40cf5b:	or     esi,DWORD PTR [eax+0x29]
  40cf5e:	add    edi,ebx
  40cf60:	fdiv   DWORD PTR [eax-0x16512729]
  40cf66:	jg     0x40cfce
  40cf68:	xchg   DWORD PTR [edi-0x62],eax
  40cf6b:	mov    ah,0x74
  40cf6d:	jg     0x40cf79
  40cf6f:	test   DWORD PTR [eax-0x6f],0x263d933d
  40cf76:	ficom  WORD PTR [eax]
  40cf78:	out    dx,al
  40cf79:	lods   al,BYTE PTR ds:[esi]
  40cf7a:	sbb    DWORD PTR [ebp+0x7a],edi
  40cf7d:	sub    ch,BYTE PTR [eax]
  40cf7f:	inc    edi
  40cf80:	pop    ebp
  40cf81:	shr    DWORD PTR [edx+0x4d],1
  40cf84:	outs   dx,DWORD PTR ds:[esi]
  40cf85:	das    
  40cf86:	xor    cl,0x64
  40cf89:	mov    ah,0x72
  40cf8b:	adc    ebx,DWORD PTR [edi+0x5889df48]
  40cf91:	inc    edx
  40cf92:	xchg   ebp,eax
  40cf93:	ret    0xa0a6
  40cf96:	xor    bl,BYTE PTR [eax-0x5e]
  40cf99:	fidivr WORD PTR [ecx+0x30]
  40cf9c:	or     DWORD PTR [ebx+0x7a],ebx
  40cf9f:	stos   BYTE PTR es:[edi],al
  40cfa0:	mov    bh,0xc8
  40cfa2:	in     al,dx
  40cfa3:	dec    ebp
  40cfa4:	mov    eax,ds:0x4bd00757
  40cfa9:	pop    edi
  40cfaa:	mov    BYTE PTR [edi],bh
  40cfac:	lock test al,0x6
  40cfaf:	add    DWORD PTR [edx+0x37],edx
  40cfb2:	int    0xd1
  40cfb4:	mov    eax,ds:0x506b494e
  40cfb9:	push   es
  40cfba:	clc    
  40cfbb:	cmp    al,0x72
  40cfbd:	in     al,0x18
  40cfbf:	sbb    DWORD PTR [ecx-0xd],ecx
  40cfc2:	(bad)  
  40cfc3:	fcom   QWORD PTR ds:0x3fee7f17
  40cfc9:	xor    eax,0x7255df2f
  40cfce:	aad    0x7c
  40cfd0:	add    eax,0x9f17b89a
  40cfd5:	out    0x91,eax
  40cfd7:	mov    ecx,0xfa947904
  40cfdc:	push   0x44
  40cfde:	shr    DWORD PTR [eax-0x59],cl
  40cfe1:	fstp   DWORD PTR [edx]
  40cfe3:	retf   0xdadf
  40cfe6:	mov    edi,0xd877c27
  40cfeb:	push   esp
  40cfec:	(bad)  
  40cfee:	int3   
  40cfef:	mov    al,0x35
  40cff1:	inc    ecx
  40cff2:	add    esi,edi
  40cff4:	ret    
  40cff5:	jle    0x40cfc8
  40cff7:	inc    esi
  40cff8:	jp     0x40d033
  40cffa:	shl    DWORD PTR [eax-0x5a],cl
  40cffd:	mov    dl,0xc3
  40cfff:	pop    ecx
  40d000:	pop    edi
  40d001:	xchg   BYTE PTR [ecx],ch
  40d003:	xchg   ebp,eax
  40d004:	inc    edi
  40d005:	ret    0x4c11
  40d008:	mov    edi,0xabe0b17a
  40d00d:	sbb    eax,0x73096cc0
  40d012:	xchg   BYTE PTR [edx+0x6525a3f5],dl
  40d018:	and    BYTE PTR [edx],dh
  40d01a:	sti    
  40d01b:	loopne 0x40d06b
  40d01d:	stos   DWORD PTR es:[edi],eax
  40d01e:	mov    esi,0x9380a2ed
  40d023:	jnp    0x40cffe
  40d025:	into   
  40d026:	jnp    0x40cfee
  40d028:	and    al,0x51
  40d02a:	sub    BYTE PTR [esi-0x7d],ah
  40d02d:	pop    es
  40d02e:	jmp    0xf68368f
  40d033:	fisub  DWORD PTR [esi]
  40d035:	jo     0x40cfdc
  40d037:	mov    ebp,0x32f5993f
  40d03c:	and    al,0xbf
  40d03e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d03f:	je     0x40d071
  40d041:	call   0x25b1:0xe1445275
  40d048:	std    
  40d049:	mov    ecx,0xcf749d76
  40d04e:	stos   DWORD PTR es:[edi],eax
  40d04f:	adc    eax,0x17752a54
  40d054:	inc    ebp
  40d055:	test   eax,0xe7d374e
  40d05a:	jbe    0x40d066
  40d05c:	ja     0x40cffc
  40d05e:	loope  0x40cfec
  40d060:	out    dx,eax
  40d061:	push   cs
  40d062:	or     BYTE PTR [esi-0x26669639],0xa7
  40d069:	push   edx
  40d06a:	xlat   BYTE PTR ds:[ebx]
  40d06b:	std    
  40d06c:	sbb    esp,ebx
  40d06e:	jb     0x40d06e
  40d070:	dec    ebx
  40d071:	shl    al,1
  40d073:	sbb    esi,edx
  40d075:	inc    ecx
  40d076:	ss mov dl,0x58
  40d079:	sbb    eax,0x2b329563
  40d07e:	lock lahf 
  40d080:	popa   
  40d081:	jae    0x40d02f
  40d083:	cmp    ah,ch
  40d085:	xor    eax,0x4a1f4eb1
  40d08a:	xchg   ebx,eax
  40d08b:	dec    dh
  40d08d:	lods   al,BYTE PTR ds:[esi]
  40d08e:	out    0xdf,al
  40d090:	push   ecx
  40d091:	dec    esp
  40d092:	shl    DWORD PTR [eax],0x32
  40d095:	loopne 0x40d101
  40d097:	dec    edi
  40d098:	mov    edi,0x50907fe8
  40d09d:	xchg   edx,eax
  40d09e:	mov    ecx,0x215e4942
  40d0a3:	daa    
  40d0a4:	adc    dl,dh
  40d0a6:	mov    BYTE PTR [esi+ecx*8-0x70b214b8],bl
  40d0ad:	out    dx,al
  40d0ae:	int3   
  40d0af:	or     dl,BYTE PTR [ebx-0x12]
  40d0b2:	lods   al,BYTE PTR ds:[esi]
  40d0b3:	or     DWORD PTR [edi-0x43],ebp
  40d0b6:	aas    
  40d0b7:	xor    ah,al
  40d0b9:	inc    ebx
  40d0ba:	ror    DWORD PTR [ecx-0xd],0xa2
  40d0be:	sbb    eax,0x84389de7
  40d0c3:	outs   dx,BYTE PTR ds:[esi]
  40d0c4:	rcr    DWORD PTR [edx-0x58da4a15],0xd8
  40d0cb:	lea    edi,[ebx-0x33]
  40d0ce:	cdq    
  40d0cf:	pop    ds
  40d0d0:	ret    
  40d0d1:	fistp  DWORD PTR [edi-0x6c2eb21]
  40d0d7:	pop    ss
  40d0d8:	pop    ebp
  40d0d9:	push   edx
  40d0da:	add    eax,0x24f19693
  40d0df:	dec    esp
  40d0e0:	and    al,0xd
  40d0e2:	dec    ecx
  40d0e3:	sub    BYTE PTR [eax+esi*4+0x57351a6e],dh
  40d0ea:	mul    DWORD PTR [ebx]
  40d0ec:	icebp  
  40d0ed:	pop    esp
  40d0ee:	das    
  40d0ef:	and    dl,BYTE PTR [ecx]
  40d0f1:	mov    ds:0x577b0677,al
  40d0f6:	bound  ecx,QWORD PTR [edx]
  40d0f8:	test   dl,dl
  40d0fa:	pusha  
  40d0fb:	dec    ecx
  40d0fc:	jg     0x40d0f6
  40d0fe:	jl     0x40d137
  40d100:	dec    ecx
  40d101:	rcl    DWORD PTR [edi+0x3d],0x68
  40d105:	rcl    DWORD PTR [eax+0x19],0xc6
  40d109:	push   ebx
  40d10a:	push   ebp
  40d10b:	push   edx
  40d10c:	popf   
  40d10d:	retf   0xbbbf
  40d110:	popf   
  40d111:	adc    eax,0x3829706a
  40d116:	inc    ebx
  40d117:	mov    cs,WORD PTR [esi]
  40d119:	test   dh,bl
  40d11b:	(bad)  
  40d11c:	loopne 0x40d195
  40d11e:	sbb    eax,0x915543e2
  40d123:	bnd jl 0x40d0c3
  40d126:	mov    al,0xd7
  40d128:	sbb    DWORD PTR [edx+0x5f],esi
  40d12b:	mov    ch,BYTE PTR ds:0x826553d5
  40d131:	mov    cl,0x1e
  40d133:	arpl   WORD PTR [ebx],bx
  40d135:	cdq    
  40d136:	loopne 0x40d16e
  40d138:	or     al,0x24
  40d13a:	jp     0x40d141
  40d13c:	jmp    0x431c:0x88371db6
  40d143:	int    0xa5
  40d145:	punpckhwd mm7,mm2
  40d148:	ss add al,0x78
  40d14b:	fcomp  QWORD PTR ds:0x2828bdb6
  40d151:	sub    BYTE PTR [eax],ch
  40d153:	(bad)  
  40d154:	push   ds
  40d155:	scas   eax,DWORD PTR es:[edi]
  40d156:	and    BYTE PTR [ecx+0x13d6780f],dh
  40d15c:	and    cl,al
  40d15e:	dec    esi
  40d15f:	push   es
  40d160:	xor    ebx,ebx
  40d162:	xchg   eax,edx
  40d164:	aaa    
  40d165:	fstp   QWORD PTR [ebx+0x3]
  40d168:	mov    bl,0xda
  40d16a:	adc    dl,ch
  40d16c:	test   al,0xdd
  40d16e:	mov    dl,0x65
  40d170:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d171:	ret    
  40d172:	sub    BYTE PTR [edi+0x2],bh
  40d175:	sub    eax,0x206f8f72
  40d17a:	icebp  
  40d17b:	jge    0x40d1b4
  40d17d:	icebp  
  40d17e:	aad    0x22
  40d180:	mov    ds:0x589f1131,al
  40d185:	clc    
  40d186:	and    cl,BYTE PTR [eax]
  40d188:	(bad)  
  40d189:	cld    
  40d18a:	push   esp
  40d18b:	mov    eax,0x2e10ecca
  40d190:	cli    
  40d191:	les    eax,FWORD PTR [edx]
  40d193:	loopne 0x40d143
  40d195:	shr    ch,cl
  40d197:	push   ebx
  40d198:	inc    edx
  40d199:	pop    ebx
  40d19a:	mov    bl,0xfb
  40d19c:	xor    dh,bh
  40d19e:	or     esp,DWORD PTR [eax+esi*1+0x2ab51022]
  40d1a5:	push   0x20
  40d1a7:	or     DWORD PTR ds:[ebx+0x6a99c46c],esi
  40d1ae:	das    
  40d1af:	or     DWORD PTR [ebp*1-0x58afb2f3],0x98a22215
  40d1ba:	dec    esi
  40d1bb:	ffreep st(1)
  40d1bd:	jae    0x40d142
  40d1bf:	pop    eax
  40d1c0:	inc    ecx
  40d1c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1c2:	lods   eax,DWORD PTR ds:[esi]
  40d1c3:	xlat   BYTE PTR ds:[ebx]
  40d1c4:	fidiv  DWORD PTR [ebx-0x474c27e4]
  40d1ca:	mov    edi,0x21106077
  40d1cf:	or     cl,ch
  40d1d1:	jae    0x40d23e
  40d1d3:	aaa    
  40d1d4:	outs   dx,BYTE PTR ds:[esi]
  40d1d5:	and    eax,0x35eb1414
  40d1da:	push   ss
  40d1db:	lea    edx,[edx-0x2afcbe70]
  40d1e1:	xchg   DWORD PTR [eax+edx*8],esi
  40d1e4:	sub    al,0xa2
  40d1e6:	mov    esi,0x57b4ca30
  40d1eb:	cli    
  40d1ec:	sbb    ah,al
  40d1ee:	out    dx,eax
  40d1ef:	cmovno eax,edi
  40d1f2:	jmp    0xa5c32f2
  40d1f7:	pop    ds
  40d1f8:	iret   
  40d1f9:	dec    eax
  40d1fa:	retf   
  40d1fb:	dec    edi
  40d1fc:	cmp    al,0x7c
  40d1fe:	mov    eax,ds:0x122653da
  40d203:	jge    0x40d25f
  40d205:	arpl   WORD PTR [edi+0x26],si
  40d208:	dec    ebx
  40d209:	mov    al,ds:0x3822ca93
  40d20e:	pop    esi
  40d20f:	or     eax,0x573ec072
  40d214:	or     al,0xfe
  40d216:	sub    edi,DWORD PTR [esi+ebp*4]
  40d219:	jns    0x40d22d
  40d21b:	add    edx,DWORD PTR [edi+0x68]
  40d21e:	adc    edx,DWORD PTR [edi+ebx*2]
  40d221:	test   ebp,edx
  40d223:	jns    0x40d290
  40d225:	adc    DWORD PTR [eax+esi*2],ebx
  40d228:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d229:	pop    ecx
  40d22a:	fstp   QWORD PTR ds:0x8c2c1f2a
  40d230:	popf   
  40d231:	les    esi,FWORD PTR [ebp-0x4]
  40d234:	out    0xde,al
  40d236:	dec    edx
  40d237:	je     0x40d1c5
  40d239:	push   eax
  40d23a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d23b:	leave  
  40d23c:	and    ebp,DWORD PTR [ebx+0x21]
  40d23f:	xchg   esi,eax
  40d240:	(bad)  
  40d241:	in     eax,dx
  40d242:	xor    eax,DWORD PTR [ebp+0x45ca2f4e]
  40d248:	mov    WORD PTR [ebx-0x588741db],gs
  40d24e:	test   al,0x22
  40d250:	sbb    edx,eax
  40d252:	jo     0x40d1f4
  40d254:	outs   dx,DWORD PTR ds:[esi]
  40d255:	xchg   ecx,eax
  40d256:	popa   
  40d257:	cmp    dh,BYTE PTR [esi+edx*2]
  40d25a:	push   es
  40d25b:	mov    ?,WORD PTR [edi+0x5b]
  40d25e:	cmp    edi,esi
  40d260:	push   edx
  40d261:	cmp    bl,BYTE PTR [ebx-0x1a]
  40d264:	push   esi
  40d265:	jno    0x40d255
  40d267:	imul   esi,DWORD PTR [ebx+0x38cfe7f],0xfc83bc7
  40d271:	test   BYTE PTR [eax],bh
  40d273:	add    BYTE PTR [eax],al
  40d275:	add    cl,ch
  40d277:	and    al,0x0
  40d279:	add    BYTE PTR [eax],al
  40d27b:	mov    eax,DWORD PTR [ebp-0x4]
  40d27e:	mov    ecx,DWORD PTR [ebp-0x8]
  40d281:	xor    eax,esi
  40d283:	add    eax,edi
  40d285:	cmp    ecx,eax
  40d287:	mov    eax,DWORD PTR [ebp-0x4]
  40d28a:	je     0x40d2e9
  40d290:	mov    ecx,DWORD PTR [ebp-0x30]
  40d293:	xor    eax,esi
  40d295:	add    eax,edi
  40d297:	cmp    ecx,eax
  40d299:	je     0x40f6a6
  40d29f:	lea    eax,[ebp-0x8]
  40d2a2:	push   eax
  40d2a3:	push   DWORD PTR [ebp-0x28]
  40d2a6:	push   DWORD PTR [ebp+0xc]
  40d2a9:	call   0x411c5a
  40d2ae:	mov    eax,DWORD PTR [ebp-0x4]
  40d2b1:	mov    ecx,DWORD PTR [ebp-0x8]
  40d2b4:	xor    eax,esi
  40d2b6:	add    eax,edi
  40d2b8:	cmp    ecx,eax
  40d2ba:	je     0x40d2d5
  40d2c0:	mov    eax,DWORD PTR [ebp-0x34]
  40d2c3:	movzx  eax,WORD PTR [eax+ebx*2]
  40d2c7:	mov    ecx,DWORD PTR [ebp-0x14]
  40d2ca:	mov    eax,DWORD PTR [ecx+eax*4]
  40d2cd:	mov    DWORD PTR [ebp-0x38],eax
  40d2d0:	jmp    0x40d27b
  40d2d5:	mov    eax,DWORD PTR [ebp-0xc]
  40d2d8:	xor    eax,esi
  40d2da:	lea    ebx,[ebx+eax*1+0x3272f3]
  40d2e1:	jmp    0x4087e2
  40d2e6:	mov    eax,DWORD PTR [ebp-0x4]
  40d2e9:	xor    eax,esi
  40d2eb:	jmp    0x40f69f
  40d2f0:	add    BYTE PTR [esi],cl
  40d2f2:	mov    ch,BYTE PTR [esp+eax*4+0x5e8600a0]
  40d2f9:	hlt    
  40d2fa:	aas    
  40d2fb:	push   eax
  40d2fc:	scas   eax,DWORD PTR es:[edi]
  40d2fd:	iret   
  40d2fe:	and    al,0x5
  40d300:	xchg   ebp,eax
  40d301:	rol    BYTE PTR [ebx-0x7ca3177d],cl
  40d307:	sub    DWORD PTR [ebp+0x1e7b77fe],0xffffff87
  40d30e:	test   DWORD PTR [ebp-0x14b26aba],esp
  40d314:	leave  
  40d315:	dec    ebp
  40d316:	dec    ebp
  40d317:	ficom  DWORD PTR [edi+0x17ac40b6]
  40d31d:	scas   al,BYTE PTR es:[edi]
  40d31e:	fild   QWORD PTR [ebx+0x60f183fa]
  40d324:	bnd jo 0x40d36f
  40d327:	pop    edi
  40d328:	and    eax,esp
  40d32a:	arpl   WORD PTR [edi-0x6f],dx
  40d32d:	inc    ebx
  40d32e:	in     al,dx
  40d32f:	mov    edx,0x7e46e9d
  40d334:	loopne 0x40d3a1
  40d336:	jg     0x40d388
  40d338:	cli    
  40d339:	mov    al,0x99
  40d33b:	xor    BYTE PTR [ebp-0x78],al
  40d33e:	jno    0x40d3a3
  40d340:	fbld   TBYTE PTR [eax]
  40d342:	mov    ?,WORD PTR [ecx]
  40d344:	xchg   edx,eax
  40d345:	shr    DWORD PTR [ebp+0x6becd438],cl
  40d34b:	ret    
  40d34c:	bound  ecx,QWORD PTR [esi]
  40d34e:	lock popa 
  40d350:	repnz jmp 0x5617:0xdac199cb
  40d358:	or     esp,DWORD PTR [edi]
  40d35a:	mov    cl,0x77
  40d35c:	test   DWORD PTR [ecx],esi
  40d35e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d35f:	ins    DWORD PTR es:[edi],dx
  40d360:	sbb    ebx,DWORD PTR [esi-0xfc5f23c]
  40d366:	daa    
  40d367:	push   ds
  40d368:	cmp    ecx,DWORD PTR [edi-0x3b194430]
  40d36e:	xor    al,BYTE PTR [esi+0x49a6b87c]
  40d374:	mov    ebp,0x9ab6de1b
  40d379:	lea    ecx,[edx]
  40d37b:	stos   BYTE PTR es:[edi],al
  40d37c:	jae    0x40d3fb
  40d37e:	sub    eax,0xb30a5dca
  40d383:	retf   0x8db2
  40d386:	push   0x43
  40d388:	clc    
  40d389:	push   0x670eec0c
  40d38e:	(bad)  
  40d38f:	jl     0x40d321
  40d391:	xor    edx,DWORD PTR [ebp-0x29134da2]
  40d397:	lea    edx,gs:[ecx]
  40d39a:	or     eax,edi
  40d39c:	jmp    0x40d3cc
  40d39e:	xlat   BYTE PTR ds:[ebx]
  40d39f:	sbb    eax,DWORD PTR [eax+0x31]
  40d3a2:	sub    dl,bl
  40d3a4:	cs dec esp
  40d3a6:	lea    eax,[ebp+0x31]
  40d3a9:	sbb    DWORD PTR [edx-0x47],esi
  40d3ac:	out    dx,eax
  40d3ad:	sbb    dl,ah
  40d3af:	jecxz  0x40d415
  40d3b1:	mov    cl,0x1f
  40d3b3:	aam    0x15
  40d3b5:	dec    edx
  40d3b6:	cld    
  40d3b7:	in     al,0xbe
  40d3b9:	ss out dx,eax
  40d3bb:	shl    al,cl
  40d3bd:	mov    al,ds:0x15636b8c
  40d3c2:	and    BYTE PTR [edx+0x5c],cl
  40d3c5:	imul   ebx,DWORD PTR ds:0x5e1ea36a,0x3d04f509
  40d3cf:	out    dx,al
  40d3d0:	sub    al,0xdb
  40d3d2:	mov    al,0xbc
  40d3d4:	xchg   ebp,eax
  40d3d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d6:	loope  0x40d391
  40d3d8:	les    ecx,FWORD PTR [edi]
  40d3da:	(bad)  
  40d3db:	shl    DWORD PTR [esi],1
  40d3dd:	jle    0x40d38e
  40d3df:	mov    ecx,0x36140ae3
  40d3e4:	jge    0x40d3cb
  40d3e6:	lea    ebx,[edi-0x67a3b660]
  40d3ec:	sub    eax,0xaa1974e0
  40d3f1:	test   eax,0x8b142d98
  40d3f6:	(bad)  
  40d3f7:	push   ebx
  40d3f8:	xchg   edx,eax
  40d3f9:	mov    cl,0xf8
  40d3fb:	fimul  WORD PTR [edi]
  40d3fd:	ror    bh,cl
  40d3ff:	jne    0x40d3fa
  40d401:	sar    BYTE PTR [eax],0xdf
  40d404:	sahf   
  40d405:	rcl    DWORD PTR [ecx+0x77],cl
  40d408:	hlt    
  40d409:	retf   
  40d40a:	out    0x32,al
  40d40c:	test   BYTE PTR [ecx+0x74623f0a],ch
  40d412:	mov    al,0xa5
  40d414:	fiadd  DWORD PTR [edx+edx*4-0x1418e7d8]
  40d41b:	mov    BYTE PTR [edi-0xd3a63fb],bh
  40d421:	xchg   ebx,eax
  40d422:	jns    0x40d47d
  40d424:	or     eax,0x61c45716
  40d429:	add    DWORD PTR [eax+0x2a],edx
  40d42c:	out    dx,eax
  40d42d:	sbb    al,0xd6
  40d42f:	vminpd ymm1,ymm5,ymm1
  40d433:	test   DWORD PTR [ebx],0x92e81681
  40d439:	shl    BYTE PTR ds:0xe14ab23b,1
  40d43f:	cmc    
  40d440:	into   
  40d441:	(bad)  
  40d442:	jo     0x40d419
  40d444:	add    edi,DWORD PTR [edx+0x2c]
  40d447:	adc    BYTE PTR [ecx-0x6d00716b],ah
  40d44d:	iret   
  40d44e:	jno    0x40d435
  40d450:	cmp    edi,DWORD PTR [eax-0x185f2501]
  40d456:	xchg   edi,eax
  40d457:	mov    es,WORD PTR [ebp-0x55]
  40d45a:	stc    
  40d45b:	ins    DWORD PTR es:[edi],dx
  40d45c:	lahf   
  40d45d:	sub    dh,BYTE PTR [edi-0x3d89f359]
  40d463:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d464:	sbb    ebp,DWORD PTR ds:0xb68b4844
  40d46a:	mov    esi,ebp
  40d46c:	hlt    
  40d46d:	push   edi
  40d46e:	lock add BYTE PTR [ecx],ch
  40d471:	stc    
  40d472:	shr    BYTE PTR [edi+0x4d03a627],1
  40d478:	push   ebx
  40d479:	das    
  40d47a:	loop   0x40d411
  40d47c:	(bad)  
  40d47d:	sub    eax,0x7fab9ba4
  40d482:	cmp    DWORD PTR [edi-0x74],esp
  40d485:	gs dec ecx
  40d487:	js     0x40d469
  40d489:	call   0xff3a:0x21625696
  40d490:	out    dx,al
  40d491:	dec    ecx
  40d492:	in     al,dx
  40d493:	fadd   QWORD PTR [ebx]
  40d495:	and    bl,BYTE PTR [edx+0x2f]
  40d498:	inc    edi
  40d499:	out    0x26,al
  40d49b:	popf   
  40d49c:	jecxz  0x40d45d
  40d49e:	push   ebp
  40d49f:	ss scas eax,DWORD PTR es:[edi]
  40d4a1:	icebp  
  40d4a2:	clc    
  40d4a3:	inc    ebp
  40d4a4:	pusha  
  40d4a5:	jl     0x40d517
  40d4a7:	cmp    al,0x19
  40d4a9:	fild   WORD PTR [edi+0x79]
  40d4ac:	(bad)  
  40d4ad:	out    dx,eax
  40d4ae:	adc    ebp,DWORD PTR [ecx-0x5cd062b7]
  40d4b4:	and    al,0x69
  40d4b6:	xchg   ebx,eax
  40d4b7:	inc    esi
  40d4b8:	mov    eax,ds:0x8e014131
  40d4bd:	mov    al,ds:0xa567c4af
  40d4c2:	or     edi,ecx
  40d4c4:	and    ecx,DWORD PTR [edi+0x7158c8ae]
  40d4ca:	push   esp
  40d4cb:	dec    ebp
  40d4cc:	push   es
  40d4cd:	mov    ds:0xca81533c,al
  40d4d2:	rol    esp,cl
  40d4d4:	and    esp,DWORD PTR [eax+0x4c]
  40d4d7:	nop
  40d4d8:	mov    ds:0x4903358c,al
  40d4dd:	and    eax,0x6932c2d8
  40d4e2:	test   al,0x2c
  40d4e4:	outs   dx,DWORD PTR ds:[esi]
  40d4e5:	inc    edi
  40d4e6:	sti    
  40d4e7:	mov    edx,eax
  40d4e9:	and    edx,eax
  40d4eb:	aad    0x9d
  40d4ed:	sub    ebx,ebx
  40d4ef:	test   BYTE PTR [ebx+0x45],bl
  40d4f2:	imul   ebp,DWORD PTR [eax],0x5257503
  40d4f8:	sbb    al,0xe4
  40d4fa:	jl     0x40d4c6
  40d4fc:	sub    eax,DWORD PTR ds:0x82d612d9
  40d502:	into   
  40d503:	fadd   QWORD PTR [esi+edi*2+0x637e399e]
  40d50a:	int3   
  40d50b:	adc    DWORD PTR [eax+0x446466e3],ecx
  40d511:	sbb    al,0x56
  40d513:	mov    ds:0x22ae5a0,eax
  40d519:	sbb    eax,0x1146bc04
  40d51e:	fstp   QWORD PTR gs:[edx]
  40d521:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d522:	popf   
  40d523:	(bad)  
  40d524:	scas   eax,DWORD PTR es:[edi]
  40d525:	retf   
  40d526:	pop    eax
  40d527:	rcr    BYTE PTR [esp+ebx*8-0x7edabba9],1
  40d52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d52f:	cmp    dl,bl
  40d531:	push   ss
  40d532:	add    DWORD PTR [ebx+0x67b4d3a9],esi
  40d538:	push   0x4c1adbf
  40d53d:	jl     0x40d528
  40d53f:	push   edi
  40d540:	pop    edi
  40d541:	hlt    
  40d542:	mov    al,ds:0x2d85538e
  40d547:	enter  0x4a21,0xc0
  40d54b:	inc    esp
  40d54c:	mov    ds:0x87c301fc,eax
  40d551:	add    DWORD PTR [ecx-0x4e6fdf21],edx
  40d557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d558:	lock pop edi
  40d55a:	pop    es
  40d55b:	outs   dx,DWORD PTR ds:[esi]
  40d55c:	mov    dl,0x19
  40d55e:	jo     0x40d4fa
  40d560:	shl    dl,cl
  40d562:	pop    ecx
  40d563:	or     DWORD PTR [edi-0x80],ebx
  40d566:	inc    esi
  40d567:	popf   
  40d568:	pop    ss
  40d569:	ins    DWORD PTR es:[edi],dx
  40d56a:	mov    ch,0x61
  40d56c:	(bad)  
  40d56d:	mov    eax,ds:0x45ea7ed9
  40d572:	imul   esi,DWORD PTR [esi+0x7b54e9ae],0xcef19023
  40d57c:	jo     0x40d5bf
  40d57e:	daa    
  40d57f:	mov    al,0x24
  40d581:	mov    eax,0x54d1b3d7
  40d586:	in     al,dx
  40d587:	into   
  40d588:	pop    eax
  40d589:	loopne 0x40d5de
  40d58b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d58c:	jge    0x40d597
  40d58e:	cmp    al,0xf6
  40d590:	(bad)  
  40d591:	loopne 0x40d582
  40d593:	out    0xa1,eax
  40d595:	loop   0x40d54a
  40d597:	out    dx,al
  40d598:	in     eax,dx
  40d599:	jmp    0x36d4:0xbc15c22f
  40d5a0:	pop    esi
  40d5a1:	mov    ch,0xde
  40d5a3:	aam    0x14
  40d5a5:	sbb    DWORD PTR ss:[ebp+ebp*8-0x47],0xf4401992
  40d5ae:	(bad)  [esi-0x78]
  40d5b1:	nop
  40d5b2:	fiadd  DWORD PTR [ebx]
  40d5b4:	mov    bl,0x10
  40d5b6:	outs   dx,DWORD PTR ds:[esi]
  40d5b7:	inc    eax
  40d5b8:	sub    BYTE PTR [edi],al
  40d5ba:	or     eax,0x99ccfc8e
  40d5bf:	repnz gs dec esi
  40d5c2:	inc    ebx
  40d5c3:	cmp    al,BYTE PTR [edi+0x32]
  40d5c6:	push   es
  40d5c7:	jecxz  0x40d629
  40d5c9:	cli    
  40d5ca:	push   esi
  40d5cb:	retf   
  40d5cc:	mov    BYTE PTR [edi],0x52
  40d5cf:	xlat   BYTE PTR ds:[ebx]
  40d5d0:	mov    dh,0xae
  40d5d2:	dec    esi
  40d5d3:	mov    edi,0x270b663d
  40d5d8:	fcom   st(6)
  40d5da:	sbb    edi,DWORD PTR [ecx-0x4073b23]
  40d5e0:	pushf  
  40d5e1:	mov    ah,0x64
  40d5e3:	sbb    al,0x3e
  40d5e5:	sub    BYTE PTR ds:0x3f0595d5,0xb8
  40d5ec:	loope  0x40d5d4
  40d5ee:	inc    esp
  40d5ef:	xchg   ecx,eax
  40d5f0:	psllq  mm4,QWORD PTR [esi+0x65c49cc9]
  40d5f7:	inc    edx
  40d5f8:	in     al,0x7a
  40d5fa:	add    al,0x92
  40d5fc:	push   0xc906d801
  40d601:	fwait
  40d602:	inc    edx
  40d603:	xchg   esp,eax
  40d604:	pop    esp
  40d605:	outs   dx,DWORD PTR ds:[esi]
  40d606:	retf   0xfcae
  40d609:	dec    ecx
  40d60a:	lods   eax,DWORD PTR ds:[esi]
  40d60b:	push   es
  40d60c:	js     0x40d654
  40d60e:	jnp    0x40d5a7
  40d610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d611:	pop    esi
  40d612:	addr16 add al,0xf
  40d615:	loope  0x40d5f4
  40d617:	out    0xbe,al
  40d619:	fmul   st(4),st
  40d61b:	and    BYTE PTR [eax+esi*2-0x2f4ccbcc],dl
  40d622:	fnsave [ecx+0x0]
  40d625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d626:	data16 sbb al,0xf2
  40d629:	ins    DWORD PTR es:[edi],dx
  40d62a:	inc    esi
  40d62b:	xchg   esp,eax
  40d62c:	lds    edx,FWORD PTR [eax+ebx*4]
  40d62f:	sub    eax,ebx
  40d631:	es daa 
  40d633:	pusha  
  40d634:	sbb    BYTE PTR [eax],dh
  40d636:	imul   eax,DWORD PTR [esi+0x49274cda],0x24
  40d63d:	lods   eax,DWORD PTR ds:[esi]
  40d63e:	and    BYTE PTR [ecx+0x34],ch
  40d641:	push   ebx
  40d642:	xlat   BYTE PTR ds:[ebx]
  40d643:	lea    edx,[ebx-0x57]
  40d646:	push   edi
  40d647:	mov    ebp,0xf8756bc9
  40d64c:	push   ds
  40d64d:	into   
  40d64e:	jmp    0x40d607
  40d650:	pop    esi
  40d651:	retf   
  40d652:	mul    DWORD PTR [edx+0xd]
  40d655:	iret   
  40d656:	inc    edx
  40d657:	ds sub ecx,edi
  40d65a:	pop    ebp
  40d65b:	iret   
  40d65c:	jecxz  0x40d6a2
  40d65e:	push   edi
  40d65f:	xchg   ecx,eax
  40d660:	sbb    DWORD PTR [eax+ebp*4-0x5],edx
  40d664:	mov    ebx,0xc76676d1
  40d669:	mov    dh,0x18
  40d66b:	jne    0x40d5f2
  40d66d:	out    dx,al
  40d66e:	int    0x97
  40d670:	jns    0x40d666
  40d672:	xchg   esi,eax
  40d673:	pop    ds
  40d674:	scas   eax,DWORD PTR es:[edi]
  40d675:	scas   eax,DWORD PTR es:[edi]
  40d676:	xor    DWORD PTR [edi+0x44],edx
  40d679:	bound  ebx,QWORD PTR [eax-0x1d491e0a]
  40d67f:	pop    esp
  40d680:	into   
  40d681:	shr    ebp,1
  40d683:	jns    0x40d69c
  40d685:	mov    al,ds:0x7cfd264a
  40d68a:	jp     0x40d6cf
  40d68c:	fsubr  st,st(0)
  40d68e:	leave  
  40d68f:	(bad)  
  40d690:	hlt    
  40d691:	push   edx
  40d692:	(bad)  
  40d693:	popf   
  40d694:	loopne 0x40d6ba
  40d696:	sub    cl,BYTE PTR [ecx+0x17531925]
  40d69c:	leave  
  40d69d:	std    
  40d69e:	call   0x6312054c
  40d6a3:	sub    al,0xcb
  40d6a5:	jg     0x40d628
  40d6a7:	scas   al,BYTE PTR es:[edi]
  40d6a8:	sahf   
  40d6a9:	(bad)  
  40d6aa:	sar    DWORD PTR [edi],cl
  40d6ac:	push   es
  40d6ad:	mov    ebp,DWORD PTR [esi-0x2a76f513]
  40d6b3:	int    0x1c
  40d6b5:	ins    DWORD PTR es:[edi],dx
  40d6b6:	xchg   esi,eax
  40d6b7:	lahf   
  40d6b8:	call   0x495bafe7
  40d6bd:	and    al,0x86
  40d6bf:	in     eax,0x64
  40d6c1:	call   0x8c98:0x1469294d
  40d6c8:	pop    esi
  40d6c9:	pop    ebp
  40d6ca:	ss inc edi
  40d6cc:	inc    esi
  40d6cd:	mov    edi,0x6c53d1c9
  40d6d2:	ins    DWORD PTR es:[edi],dx
  40d6d3:	ss mov ch,0xb2
  40d6d6:	cmp    edi,DWORD PTR [edi+0x7f]
  40d6d9:	sbb    al,0xd1
  40d6db:	pop    ebx
  40d6dc:	mov    ds:0x358c0a0d,al
  40d6e1:	xchg   ebp,edx
  40d6e3:	dec    edx
  40d6e4:	jmp    0x40d6cc
  40d6e6:	repnz out dx,al
  40d6e8:	(bad)  
  40d6e9:	in     al,dx
  40d6ea:	jae    0x40d66f
  40d6ec:	ret    0x8f15
  40d6ef:	out    0x64,al
  40d6f1:	repz mov ecx,edi
  40d6f4:	adc    dh,BYTE PTR [edi-0x38]
  40d6f7:	ss (bad) 
  40d6f9:	div    DWORD PTR [edi-0x7e]
  40d6fc:	dec    edx
  40d6fd:	xchg   ecx,eax
  40d6fe:	xor    BYTE PTR [ebp+0xb],0x46
  40d702:	fsubr  QWORD PTR [eax+0x29]
  40d705:	lods   eax,DWORD PTR ds:[esi]
  40d706:	push   cs
  40d707:	outs   dx,DWORD PTR ds:[esi]
  40d708:	mov    bh,0x6c
  40d70a:	sti    
  40d70b:	mov    esp,0x62fad43c
  40d710:	dec    ebx
  40d711:	fisubr DWORD PTR [ecx]
  40d713:	and    eax,0xb16d4f8f
  40d718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d719:	mov    dh,0xf7
  40d71b:	retf   
  40d71c:	mov    esp,0x5bd27bda
  40d721:	loopne 0x40d79f
  40d723:	fwait
  40d724:	xchg   dh,ah
  40d726:	out    0xd0,eax
  40d728:	mov    ecx,0xa777ca63
  40d72d:	cmp    al,0x1b
  40d72f:	idiv   esp
  40d731:	xor    DWORD PTR [eax+0x6f],ecx
  40d734:	bound  esi,QWORD PTR ds:0x8ec91ea6
  40d73a:	adc    al,0x1
  40d73c:	mov    ds:0xcfa12eb0,al
  40d741:	dec    edx
  40d742:	mov    cl,0xbf
  40d744:	outs   dx,DWORD PTR ds:[esi]
  40d745:	stc    
  40d746:	sbb    bh,BYTE PTR [esi+eax*8-0x10b7671f]
  40d74d:	scas   al,BYTE PTR es:[edi]
  40d74e:	mov    al,ds:0xa94c0ea7
  40d753:	push   ebp
  40d754:	in     al,0x25
  40d756:	push   0xfffffff4
  40d758:	pop    eax
  40d759:	dec    ebx
  40d75a:	sbb    BYTE PTR [eax],ah
  40d75c:	sahf   
  40d75d:	enter  0x7cff,0x1d
  40d761:	sub    eax,0xbadcf625
  40d766:	(bad)  
  40d767:	clc    
  40d768:	sbb    bl,0xb2
  40d76b:	dec    ebx
  40d76c:	pop    eax
  40d76d:	scas   al,BYTE PTR es:[edi]
  40d76e:	test   DWORD PTR [ecx+0x1969bcfa],ecx
  40d774:	or     eax,0xbcfd47f9
  40d779:	idiv   DWORD PTR [esi+0x40]
  40d77c:	xor    BYTE PTR [eax],0x36
  40d77f:	ds jne 0x40d758
  40d782:	mov    BYTE PTR [ecx],al
  40d784:	repnz mov eax,ds:0xbb273ad3
  40d78a:	mov    bl,0xde
  40d78c:	add    BYTE PTR [ecx+0x25],cl
  40d78f:	push   ebp
  40d790:	pop    ss
  40d791:	pop    ds
  40d792:	add    ch,BYTE PTR [edx]
  40d794:	fldcw  WORD PTR [ebp-0x56afde72]
  40d79a:	and    ecx,DWORD PTR ds:0x1898bae0
  40d7a0:	jns    0x40d7d0
  40d7a2:	or     BYTE PTR [ecx+0x69518f10],dl
  40d7a8:	mov    ch,BYTE PTR [edi+0x29002b20]
  40d7ae:	push   esi
  40d7af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7b0:	(bad)
  40d7b4:	cmp    al,0x34
  40d7b6:	leave  
  40d7b7:	sbb    DWORD PTR [eax+0x15],ecx
  40d7ba:	iret   
  40d7bb:	sbb    al,ah
  40d7bd:	pop    edi
  40d7be:	cmp    eax,0xb7129636
  40d7c3:	pop    ds
  40d7c4:	(bad)  
  40d7c5:	loope  0x40d78d
  40d7c7:	ds ds jbe 0x40d807
  40d7cb:	add    BYTE PTR [edx-0x2c97f3a1],ah
  40d7d1:	adc    al,0x1b
  40d7d3:	and    DWORD PTR [edi+0xa],ebp
  40d7d6:	adc    cl,BYTE PTR [edx]
  40d7d8:	bound  ebx,QWORD PTR [ecx]
  40d7da:	xor    bh,BYTE PTR [ecx+0x63c05e29]
  40d7e0:	gs and dh,ch
  40d7e3:	add    al,0x93
  40d7e5:	add    al,0x11
  40d7e7:	int    0x51
  40d7e9:	nop
  40d7ea:	adc    cl,BYTE PTR [edi+0x2ba47de5]
  40d7f0:	ret    0x209b
  40d7f3:	dec    eax
  40d7f4:	sbb    al,0x12
  40d7f6:	stc    
  40d7f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7f8:	push   esp
  40d7f9:	out    dx,al
  40d7fa:	or     eax,0xbe83132c
  40d7ff:	adc    bl,cl
  40d801:	adc    BYTE PTR [edx-0x1a],al
  40d804:	and    dl,BYTE PTR [esi+ebp*4+0xe54772d]
  40d80b:	aam    0x11
  40d80d:	fdivrp st(1),st
  40d80f:	xor    al,BYTE PTR [ebx+0x23bd1eda]
  40d815:	pop    eax
  40d816:	iret   
  40d817:	jns    0x40d7b9
  40d819:	dec    ecx
  40d81a:	push   es
  40d81b:	pushf  
  40d81c:	imul   esi,ecx,0x5a7474eb
  40d822:	dec    esi
  40d823:	add    eax,0x45e92329
  40d828:	cmc    
  40d829:	mov    ah,0x1e
  40d82b:	inc    ebx
  40d82c:	xor    DWORD PTR [edi-0x7d],ebx
  40d82f:	cmp    eax,0x57eb0758
  40d834:	enter  0xdfe3,0xc5
  40d838:	cmp    BYTE PTR [ecx],0xf1
  40d83b:	xor    BYTE PTR [eax+ecx*4],0x61
  40d83f:	and    eax,0xc3847493
  40d844:	ret    0x1be4
  40d847:	enter  0xff7d,0xfa
  40d84b:	lahf   
  40d84c:	pop    edx
  40d84d:	mov    ah,0xfa
  40d84f:	inc    ecx
  40d850:	lock jle 0x40d862
  40d853:	mov    edx,0x56270a15
  40d858:	push   ecx
  40d859:	shl    BYTE PTR [ecx+0x37a2f114],cl
  40d85f:	mov    edi,0xe7807d71
  40d864:	fmulp  st(5),st
  40d866:	cmp    eax,0xba8607cc
  40d86b:	cwde   
  40d86c:	mov    ds:0xe17bc947,al
  40d871:	fsub   DWORD PTR [edi]
  40d873:	repz mov ebx,0x5fb10ad1
  40d879:	and    al,0xc4
  40d87b:	arpl   WORD PTR [eax-0x18],bx
  40d87e:	xchg   edx,eax
  40d87f:	loop   0x40d82a
  40d881:	imul   edi,DWORD PTR [ecx],0xffffff86
  40d884:	fmul   DWORD PTR ds:0x2a08bc34
  40d88a:	sbb    al,BYTE PTR [eax-0x40]
  40d88d:	xchg   ebp,eax
  40d88e:	(bad)  
  40d88f:	cmp    ebx,esp
  40d891:	test   al,0x9c
  40d893:	jge    0x40d833
  40d895:	aad    0xf2
  40d897:	jecxz  0x40d8f4
  40d899:	mov    dh,0x41
  40d89b:	iret   
  40d89c:	lea    esp,[ebp-0x7260224d]
  40d8a2:	cs pop ds
  40d8a4:	mov    DWORD PTR [esi],edi
  40d8a6:	push   ss
  40d8a7:	rol    DWORD PTR [edx-0x7dcf2141],1
  40d8ad:	cmp    eax,0x39014ded
  40d8b2:	xchg   ebx,eax
  40d8b3:	sbb    esp,DWORD PTR [ebx-0x107bdb86]
  40d8b9:	(bad)  
  40d8bb:	das    
  40d8bc:	adc    bh,cl
  40d8be:	mov    edi,0x2e6d7c53
  40d8c3:	sar    BYTE PTR [ecx+0x4a],1
  40d8c6:	jmp    0x6296:0xfc7abb2c
  40d8cd:	(bad)  
  40d8ce:	sbb    eax,0x3ebb5c14
  40d8d3:	repnz aad 0x1
  40d8d6:	push   ss
  40d8d7:	ins    BYTE PTR es:[edi],dx
  40d8d8:	arpl   WORD PTR [esi+ebx*8-0x3d],sp
  40d8dc:	add    bh,ch
  40d8de:	fsubp  st(7),st
  40d8e0:	xchg   ebp,eax
  40d8e1:	jno    0x40d8c9
  40d8e3:	fstp   QWORD PTR [ecx]
  40d8e5:	mov    edi,0xd4e148c2
  40d8ea:	(bad)  
  40d8ec:	stc    
  40d8ed:	cmp    ah,ch
  40d8ef:	or     al,0x16
  40d8f1:	sbb    eax,0x49067b67
  40d8f6:	jg     0x40d903
  40d8f8:	fisttp DWORD PTR [ebp+0x323a7fdb]
  40d8fe:	sbb    dh,BYTE PTR [ebx+0x64]
  40d901:	mov    ebx,0xa6af7899
  40d906:	or     eax,0x7545823f
  40d90b:	aaa    
  40d90c:	xchg   esp,eax
  40d90d:	lock retf 0x8c36
  40d911:	jne    0x40d900
  40d913:	sbb    BYTE PTR [ebp+0x17],bh
  40d916:	or     BYTE PTR [ebp+0x5710591f],0xdc
  40d91d:	mov    ah,0x9f
  40d91f:	push   edx
  40d920:	push   cs
  40d921:	push   ecx
  40d922:	and    DWORD PTR [edi*2+0x14ec820d],ebp
  40d929:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d92a:	clc    
  40d92b:	and    bh,bl
  40d92d:	shl    DWORD PTR [ecx-0xf],0x3d
  40d931:	sub    ch,BYTE PTR [eax+0x6d]
  40d934:	mov    ebx,0x92e30a55
  40d939:	rcr    ch,0xab
  40d93c:	push   ss
  40d93d:	retf   
  40d93e:	in     al,dx
  40d93f:	repz in eax,dx
  40d941:	mov    al,ds:0x55342f0f
  40d946:	inc    ebx
  40d947:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d948:	dec    eax
  40d949:	shl    al,0xbe
  40d94c:	je     0x40d946
  40d94e:	pop    edx
  40d94f:	and    ecx,ebp
  40d951:	fsubr  QWORD PTR [edx]
  40d953:	sbb    cl,dl
  40d955:	jnp    0x40d8da
  40d957:	or     eax,0xd270a082
  40d95c:	and    esi,DWORD PTR [ecx+0x648fd2f1]
  40d962:	out    0xb3,al
  40d964:	mov    esp,0x7ef3c77e
  40d969:	mov    DWORD PTR [ecx-0x402412e],esp
  40d96f:	sahf   
  40d970:	mov    eax,0xe1e001fd
  40d975:	bound  eax,QWORD PTR [edi+0x3a]
  40d978:	push   ss
  40d979:	or     bl,BYTE PTR [edi+edx*4]
  40d97c:	pusha  
  40d97d:	hlt    
  40d97e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d97f:	and    DWORD PTR [bx+di-0x2108],esi
  40d984:	imul   edi,edi,0xdc9790e4
  40d98a:	lea    edi,[esi+0x550c9565]
  40d990:	lahf   
  40d991:	cld    
  40d992:	popa   
  40d993:	sti    
  40d994:	mov    dl,0xc2
  40d996:	dec    edx
  40d997:	addr16 or al,0x98
  40d99a:	adc    DWORD PTR [esi+0x6d9d86bf],esp
  40d9a0:	mov    bh,cl
  40d9a2:	or     esp,DWORD PTR [esi+esi*1-0x52]
  40d9a6:	and    BYTE PTR [esi],bh
  40d9a8:	pop    edi
  40d9a9:	or     BYTE PTR [eax],0x55
  40d9ac:	jl     0x40d962
  40d9ae:	shr    BYTE PTR ds:0xacfa79a7,0xf4
  40d9b5:	jmp    0x40da26
  40d9b7:	inc    ecx
  40d9b8:	dec    esp
  40d9b9:	push   cs
  40d9ba:	call   0xc1a9:0xaf0e17c5
  40d9c1:	dec    edi
  40d9c2:	fs hlt 
  40d9c4:	xor    ecx,DWORD PTR [ebx-0x57cfb371]
  40d9ca:	retf   
  40d9cb:	jns    0x40d956
  40d9cd:	cmp    bh,BYTE PTR [ecx+0x4f]
  40d9d0:	popa   
  40d9d1:	and    dh,ch
  40d9d3:	lahf   
  40d9d4:	dec    ebx
  40d9d5:	fimul  WORD PTR [ecx-0x5]
  40d9d8:	fadd   st(1),st
  40d9da:	cmc    
  40d9db:	jecxz  0x40da4d
  40d9dd:	and    eax,0x9a3e17ff
  40d9e2:	neg    al
  40d9e4:	rol    DWORD PTR [edi-0x423d6d55],1
  40d9ea:	sar    DWORD PTR [ebx+0x7f],1
  40d9ed:	sub    DWORD PTR [edi],ebx
  40d9ef:	clc    
  40d9f0:	dec    eax
  40d9f1:	popf   
  40d9f2:	fidivr DWORD PTR [esi*1-0x5a8c332c]
  40d9f9:	iret   
  40d9fa:	sbb    al,BYTE PTR [ebx]
  40d9fc:	add    al,0xe6
  40d9fe:	(bad)  
  40d9ff:	stc    
  40da00:	stos   DWORD PTR es:[edi],eax
  40da01:	je     0x40d9de
  40da03:	sub    al,0xd7
  40da05:	mov    ebx,edi
  40da07:	mov    ecx,0x1c9eec9d
  40da0c:	in     eax,0xdb
  40da0e:	aam    0x90
  40da10:	xor    DWORD PTR ss:[eax+0x753b8811],edi
  40da17:	or     eax,0x3d3af200
  40da1c:	xor    ch,cl
  40da1e:	xchg   BYTE PTR [esi-0x40],cl
  40da21:	pop    edx
  40da22:	sar    edi,cl
  40da24:	adc    bl,BYTE PTR [ecx-0x1f66c2e4]
  40da2a:	aad    0xbf
  40da2c:	add    esi,esi
  40da2e:	cmp    eax,0x1e25fa4d
  40da33:	mov    bh,0xc4
  40da35:	inc    esp
  40da36:	enter  0xff63,0x1d
  40da3a:	jo     0x40da80
  40da3c:	(bad)  
  40da3d:	fisub  DWORD PTR [ecx+0x65]
  40da40:	(bad)  
  40da42:	aaa    
  40da43:	ror    DWORD PTR cs:[esi-0x46],0xa6
  40da48:	push   edi
  40da49:	push   ebp
  40da4a:	leave  
  40da4b:	(bad)  
  40da4c:	mul    BYTE PTR [ebx]
  40da4e:	dec    ebp
  40da4f:	es retf 
  40da51:	pop    eax
  40da52:	pusha  
  40da53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da54:	es inc ebp
  40da56:	test   BYTE PTR [edi],0x2c
  40da59:	mov    bl,0x4f
  40da5b:	idiv   DWORD PTR [edi]
  40da5d:	stc    
  40da5e:	mov    ah,0x33
  40da60:	and    eax,0x101163d
  40da65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da66:	sub    al,0x2c
  40da68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da69:	sbb    BYTE PTR [ecx-0x4cfdafae],ah
  40da6f:	popf   
  40da70:	loope  0x40da3c
  40da72:	dec    esi
  40da73:	mov    dh,0x73
  40da75:	pop    esi
  40da76:	pmullw mm6,QWORD PTR [eax-0xa]
  40da7a:	mov    al,0x16
  40da7c:	push   es
  40da7d:	pop    ebp
  40da7e:	nop
  40da7f:	push   ds
  40da80:	dec    edi
  40da81:	add    DWORD PTR [eax-0x5dc62dfe],ebx
  40da87:	mov    edx,0x58532908
  40da8c:	jp     0x40dad5
  40da8e:	repnz or BYTE PTR [edx-0x79e7d4e6],bh
  40da95:	sub    DWORD PTR [ecx],ecx
  40da97:	mov    ds:0xed77e839,al
  40da9c:	jbe    0x40db07
  40da9e:	sbb    bh,0xb3
  40daa1:	adc    eax,0x8eb1cbf9
  40daa6:	ret    
  40daa7:	scas   al,BYTE PTR es:[edi]
  40daa8:	(bad)  
  40daa9:	sub    ah,BYTE PTR [eax]
  40daab:	lock push eax
  40daad:	cli    
  40daae:	jle    0x40da91
  40dab0:	push   edx
  40dab1:	repnz mov ebp,0x41323cfc
  40dab7:	pop    esp
  40dab8:	call   DWORD PTR [ecx+0x5f]
  40dabb:	es adc esi,esi
  40dabe:	dec    ecx
  40dabf:	test   eax,0x8630975e
  40dac4:	out    0x57,al
  40dac6:	xchg   ecx,eax
  40dac7:	pop    edi
  40dac8:	jno    0x40db23
  40daca:	pop    ss
  40dacb:	mov    ah,0x73
  40dacd:	rol    esp,0x3a
  40dad0:	cmp    al,0x38
  40dad2:	cmp    eax,0x3d9c7cdb
  40dad7:	aam    0x6f
  40dad9:	push   edx
  40dada:	pop    edx
  40dadb:	mov    eax,ds:0x67b6250f
  40dae0:	push   ss
  40dae1:	mov    esi,0xcf071717
  40dae6:	pop    esi
  40dae7:	repnz add ecx,DWORD PTR [esi]
  40daea:	sbb    al,0x37
  40daec:	or     eax,0x21cc191e
  40daf1:	and    al,0x90
  40daf3:	sbb    BYTE PTR [ebp+0x60],bh
  40daf6:	popa   
  40daf7:	push   edx
  40daf8:	sbb    eax,0xe023a173
  40dafd:	mov    eax,0x872da77e
  40db02:	mov    dl,cl
  40db04:	int    0xea
  40db06:	mov    esp,DWORD PTR [edx-0x21]
  40db09:	jg     0x40dac4
  40db0b:	mov    WORD PTR [eax+0x27],?
  40db0e:	pop    es
  40db0f:	and    eax,0x55432247
  40db14:	add    al,0xcf
  40db16:	mov    DWORD PTR ds:0x96be4f83,ebx
  40db1c:	pushw  ss
  40db1e:	push   esi
  40db1f:	jb     0x40dab4
  40db21:	jmp    0xd6ec2b16
  40db26:	gs pop edi
  40db28:	mov    cl,0x1a
  40db2a:	push   ebp
  40db2b:	mov    ebp,esi
  40db2d:	jl     0x40daf6
  40db2f:	or     BYTE PTR [ebp+0x31],ch
  40db32:	(bad)  
  40db34:	sar    BYTE PTR [esi-0x58db5163],1
  40db3a:	int    0xc4
  40db3c:	sub    BYTE PTR [ebp-0x758caea7],dl
  40db42:	hlt    
  40db43:	sbb    DWORD PTR [esi],0x738f6d95
  40db49:	jle    0x40db6a
  40db4b:	out    0x66,al
  40db4d:	sbb    eax,0xaa7358ea
  40db52:	fidivr DWORD PTR [ebx+0x79ba52ed]
  40db58:	into   
  40db59:	iret   
  40db5a:	iret   
  40db5b:	sar    DWORD PTR [edi],1
  40db5d:	test   eax,0x49da04dd
  40db62:	enter  0xdbd,0xef
  40db66:	shl    bh,1
  40db68:	mov    al,0xd8
  40db6a:	xchg   BYTE PTR ds:0x1736c8fb,dh
  40db70:	mov    dh,0x3c
  40db72:	pop    es
  40db73:	fmul   QWORD PTR [ebp+0x2163a251]
  40db79:	mov    ?,WORD PTR [di-0xb]
  40db7d:	xor    BYTE PTR ds:0x7136e573,cl
  40db83:	mov    edx,0xdf29ef44
  40db88:	or     ebp,edx
  40db8a:	or     ch,ch
  40db8c:	outs   dx,BYTE PTR fs:[esi]
  40db8e:	fdiv   st(0),st
  40db90:	test   al,0xe4
  40db92:	and    al,0x95
  40db94:	xchg   DWORD PTR [eax+0x73017866],edi
  40db9a:	test   DWORD PTR [edi],ebp
  40db9c:	mov    ecx,0x50ed12d8
  40dba1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dba2:	ret    0x5e21
  40dba5:	mov    bl,BYTE PTR [edi+esi*8+0x6a242ac6]
  40dbac:	sub    BYTE PTR [eax+0x46],ch
  40dbaf:	jl     0x40db41
  40dbb1:	xor    DWORD PTR [edi],eax
  40dbb3:	fistp  DWORD PTR [ecx-0x4ea4dd85]
  40dbb9:	hlt    
  40dbba:	call   0xa04ebcf
  40dbbf:	sub    eax,0xcaafe5fe
  40dbc4:	push   cs
  40dbc5:	pmuludq mm1,QWORD PTR [ecx]
  40dbc8:	cmp    al,0xdc
  40dbca:	jb     0x40dc28
  40dbcc:	inc    ebx
  40dbcd:	dec    eax
  40dbce:	out    0xb6,al
  40dbd0:	mov    dh,0xa1
  40dbd2:	repz or bh,BYTE PTR [edx-0x561d13d2]
  40dbd9:	jmp    0x40dbb9
  40dbdb:	adc    DWORD PTR [edi+edx*4],edx
  40dbde:	mov    dh,0x45
  40dbe0:	inc    edi
  40dbe1:	scas   eax,DWORD PTR es:[edi]
  40dbe2:	lods   eax,DWORD PTR ds:[esi]
  40dbe3:	popf   
  40dbe4:	cmc    
  40dbe5:	(bad)  
  40dbe6:	or     eax,0x46086013
  40dbeb:	or     DWORD PTR [edx+0x3f627fb8],eax
  40dbf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbf2:	xchg   esp,eax
  40dbf3:	or     BYTE PTR [eax],0x55
  40dbf6:	adc    al,BYTE PTR [edi]
  40dbf8:	push   ebp
  40dbf9:	push   esp
  40dbfa:	aaa    
  40dbfb:	dec    edx
  40dbfc:	jp     0x40dbfc
  40dbfe:	int    0xf9
  40dc00:	add    BYTE PTR [ecx+eiz*8],ah
  40dc03:	adc    DWORD PTR [edi],edx
  40dc05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc06:	jae    0x40db8f
  40dc08:	xor    al,0x29
  40dc0a:	sbb    ecx,DWORD PTR [ebx+0x48]
  40dc0d:	inc    esp
  40dc0e:	ja     0x40dc02
  40dc10:	nop
  40dc11:	into   
  40dc12:	js     0x40dbdb
  40dc14:	push   0xd263f67f
  40dc19:	jo     0x40dc4a
  40dc1b:	inc    edi
  40dc1c:	ins    DWORD PTR es:[edi],dx
  40dc1d:	shl    BYTE PTR [ebx],cl
  40dc1f:	inc    ecx
  40dc20:	dec    esi
  40dc21:	aas    
  40dc22:	btr    DWORD PTR [esi],ebp
  40dc25:	cmp    dl,BYTE PTR [eax+0x21]
  40dc28:	aaa    
  40dc29:	push   edx
  40dc2a:	ins    DWORD PTR es:[edi],dx
  40dc2b:	into   
  40dc2c:	or     BYTE PTR ds:0x62780164,0xd
  40dc33:	sti    
  40dc34:	jns    0x40dca7
  40dc36:	inc    eax
  40dc37:	xor    al,0xa2
  40dc39:	sbb    DWORD PTR [ebx+0x12],0x5486e3b
  40dc40:	in     eax,0xdc
  40dc42:	test   DWORD PTR [ecx-0x12a3875c],ebp
  40dc48:	fsubr  DWORD PTR [ecx+eiz*1+0x70]
  40dc4c:	fst    QWORD PTR [edx]
  40dc4e:	frstor [esi]
  40dc50:	add    DWORD PTR [ecx],0xffffffb0
  40dc53:	cld    
  40dc54:	cld    
  40dc55:	(bad)  
  40dc56:	in     eax,0xa6
  40dc58:	pop    ecx
  40dc59:	sbb    eax,DWORD PTR [ebp+0x72b8149a]
  40dc5f:	sbb    eax,0xee0233c9
  40dc64:	ret    0xc31f
  40dc67:	fst    DWORD PTR [ebx+0x55]
  40dc6a:	mov    gs,WORD PTR [edx-0x29eb3a]
  40dc70:	push   ecx
  40dc71:	sub    edx,DWORD PTR [eax]
  40dc73:	adc    ecx,DWORD PTR [ebx]
  40dc75:	ins    DWORD PTR es:[edi],dx
  40dc76:	pop    esp
  40dc77:	iret   
  40dc78:	mov    edx,DWORD PTR [ecx]
  40dc7a:	mov    ss:0xd4393d05,al
  40dc80:	(bad)  
  40dc81:	adc    ah,BYTE PTR [esi+esi*2]
  40dc84:	aad    0x24
  40dc86:	nop
  40dc87:	mov    ebp,0xaafbdbb
  40dc8c:	test   al,0xb1
  40dc8e:	xchg   esi,eax
  40dc8f:	or     dl,dh
  40dc91:	or     al,0xdb
  40dc93:	std    
  40dc94:	clc    
  40dc95:	sti    
  40dc96:	outs   dx,DWORD PTR ds:[esi]
  40dc97:	ja     0x40dcc2
  40dc99:	loop   0x40dcea
  40dc9b:	dec    edi
  40dc9c:	arpl   WORD PTR [edi-0x5d],bx
  40dc9f:	or     ah,0x52
  40dca2:	pop    eax
  40dca3:	push   edi
  40dca4:	test   DWORD PTR [ecx-0x4f196628],ebp
  40dcaa:	xor    edi,edx
  40dcac:	(bad)  [edi]
  40dcae:	mov    ds:0x167ecd51,al
  40dcb3:	or     DWORD PTR [esi-0x70],edx
  40dcb6:	xchg   esp,eax
  40dcb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcb8:	mov    dl,0x53
  40dcba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcbb:	mov    ch,0xee
  40dcbd:	aaa    
  40dcbe:	lahf   
  40dcbf:	add    DWORD PTR [eax-0x67],edi
  40dcc2:	xor    eax,DWORD PTR [ebx+0x2a5b1a88]
  40dcc8:	adc    ah,BYTE PTR [esi]
  40dcca:	mov    es,esi
  40dccc:	jbe    0x40dc8e
  40dcce:	jns    0x40dc94
  40dcd0:	in     eax,dx
  40dcd1:	out    0xaf,al
  40dcd3:	in     al,dx
  40dcd4:	fsubr  st(1),st
  40dcd6:	cli    
  40dcd7:	(bad)  
  40dcd8:	cli    
  40dcd9:	cwde   
  40dcda:	jae    0x40dcde
  40dcdc:	add    BYTE PTR [esi],bh
  40dcde:	test   eax,0x6fb5b2c3
  40dce3:	pop    ds
  40dce4:	xor    esp,DWORD PTR [ebx]
  40dce6:	xor    al,0xce
  40dce8:	test   eax,0xcde878ed
  40dced:	fistp  QWORD PTR [edi]
  40dcef:	xchg   edi,eax
  40dcf0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcf1:	std    
  40dcf2:	inc    esi
  40dcf3:	outs   dx,DWORD PTR ds:[esi]
  40dcf4:	sub    ebp,DWORD PTR [ebx-0x44]
  40dcf7:	ror    DWORD PTR [ebp+0x5771e3bd],1
  40dcfd:	dec    edx
  40dcfe:	les    ebx,FWORD PTR [esi]
  40dd00:	ret    0x1a62
  40dd03:	in     eax,0x6a
  40dd05:	adc    al,0xb5
  40dd07:	rol    DWORD PTR [ebx-0xf41dfde],cl
  40dd0d:	xor    bh,bh
  40dd0f:	xor    bh,0x82
  40dd12:	xchg   BYTE PTR [edx],ah
  40dd14:	mov    eax,ds
  40dd16:	xor    esi,DWORD PTR [edi-0x6d60cd37]
  40dd1c:	(bad)  
  40dd1d:	retf   
  40dd1e:	loopne 0x40dcde
  40dd20:	(bad)  
  40dd21:	cmp    eax,0x807a0b77
  40dd26:	pop    ecx
  40dd27:	push   ss
  40dd28:	push   ds
  40dd29:	in     eax,0x28
  40dd2b:	push   es
  40dd2c:	stos   BYTE PTR es:[edi],al
  40dd2d:	xchg   edi,eax
  40dd2e:	cwde   
  40dd2f:	xor    bh,0xbe
  40dd32:	pushf  
  40dd33:	imul   eax,DWORD PTR [ebx+0x9],0xffffffa8
  40dd37:	and    BYTE PTR [esi+0x3968e5a1],ah
  40dd3d:	xchg   edx,eax
  40dd3e:	pop    edi
  40dd3f:	jle    0x40dd45
  40dd41:	jge    0x40dcef
  40dd43:	pop    eax
  40dd44:	mov    eax,ds:0x8f04396
  40dd49:	ja     0x40dd5e
  40dd4b:	push   0x728a1a28
  40dd50:	xor    esi,DWORD PTR [esi+edi*8]
  40dd53:	int3   
  40dd54:	addr16 mov dh,0x1d
  40dd57:	jmp    0x40dce3
  40dd59:	sar    DWORD PTR [ecx],0xed
  40dd5c:	dec    esi
  40dd5d:	sub    BYTE PTR ds:[edx+eax*2+0x7b0122c9],cl
  40dd65:	ffree  st(6)
  40dd67:	ss ja  0x40dcec
  40dd6a:	shr    DWORD PTR [ecx-0x33],0x1f
  40dd6e:	into   
  40dd6f:	jecxz  0x40ddb0
  40dd71:	retf   
  40dd72:	xchg   ebp,eax
  40dd73:	rep outs dx,BYTE PTR ds:[esi]
  40dd75:	sbb    dh,BYTE PTR ds:0xa24b153e
  40dd7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd7c:	(bad)  
  40dd7d:	mov    esi,0xff748eb4
  40dd82:	cmp    edx,esp
  40dd84:	addr16 leave 
  40dd86:	add    eax,0x59ce103
  40dd8b:	sbb    esp,DWORD PTR [edi-0x7d]
  40dd8e:	pop    ds
  40dd8f:	jle    0x40dde3
  40dd91:	hlt    
  40dd92:	push   ecx
  40dd93:	cdq    
  40dd94:	cli    
  40dd95:	mov    esi,0xe0697858
  40dd9a:	cmp    BYTE PTR [esi-0x5a],cl
  40dd9d:	out    dx,al
  40dd9e:	xchg   esp,eax
  40dd9f:	pop    ss
  40dda0:	sub    eax,0x71f7dd89
  40dda5:	sti    
  40dda6:	pusha  
  40dda7:	(bad)  
  40dda8:	push   0x48e8bea3
  40ddad:	mov    edx,0xb25597db
  40ddb2:	cmp    BYTE PTR [esi+0x34],bl
  40ddb5:	cmp    BYTE PTR [eax],cl
  40ddb7:	popf   
  40ddb8:	jo     0x40ddad
  40ddba:	adc    bh,dl
  40ddbc:	clc    
  40ddbd:	(bad)  
  40ddbe:	mov    ebp,0xa28900a1
  40ddc3:	mov    bh,0xb0
  40ddc5:	lods   eax,DWORD PTR ds:[esi]
  40ddc6:	lea    ebp,[edi]
  40ddc8:	or     al,0xac
  40ddca:	push   edx
  40ddcb:	xchg   esi,eax
  40ddcc:	das    
  40ddcd:	dec    ebp
  40ddce:	xchg   esi,eax
  40ddcf:	loopne 0x40dd59
  40ddd1:	sahf   
  40ddd2:	(bad)  
  40ddd3:	aad    0x35
  40ddd5:	stc    
  40ddd6:	std    
  40ddd7:	(bad)  ds:0x2320bd53
  40dddd:	ret    0x101e
  40dde0:	fimul  WORD PTR [ebx-0x6a77746f]
  40dde6:	fist   WORD PTR [ebx]
  40dde8:	mov    al,ds:0x600898e1
  40dded:	sbb    edx,DWORD PTR [ebx+0x25072ddf]
  40ddf3:	clc    
  40ddf4:	jp     0x40ddd3
  40ddf6:	je     0x40ddc8
  40ddf8:	out    dx,eax
  40ddf9:	jl     0x40dda9
  40ddfb:	mov    esp,0xc8925e33
  40de00:	jecxz  0x40ddc6
  40de02:	fimul  WORD PTR [eax-0x4f]
  40de05:	xor    DWORD PTR [ecx-0x5b889600],esp
  40de0b:	aaa    
  40de0c:	sbb    al,0xb0
  40de0e:	clc    
  40de0f:	mov    ah,0x9b
  40de11:	or     dh,BYTE PTR [edx+0x114b9f85]
  40de17:	sub    ebx,esp
  40de19:	sub    ecx,ebx
  40de1b:	pop    ecx
  40de1c:	jmp    0x40de3a
  40de1e:	(bad)
  40de22:	or     ah,BYTE PTR [ecx]
  40de24:	mov    edx,es
  40de26:	mov    ch,0xc9
  40de28:	loop   0x40de4b
  40de2a:	ret    
  40de2b:	xor    al,0xa5
  40de2d:	in     al,dx
  40de2e:	sbb    bh,BYTE PTR [ebp+0x57]
  40de31:	fimul  DWORD PTR [esi-0x58]
  40de34:	pop    ds
  40de35:	push   eax
  40de37:	shl    ecx,1
  40de39:	sbb    al,0xd3
  40de3b:	shr    BYTE PTR ds:0xaac7cdd8,0x63
  40de42:	fcomp  DWORD PTR [ebp+ebp*2-0x18]
  40de46:	inc    edx
  40de47:	jo     0x40de95
  40de49:	xor    BYTE PTR [eax-0x399bfc66],dh
  40de4f:	outs   dx,DWORD PTR ds:[esi]
  40de50:	ja     0x40decf
  40de52:	push   edx
  40de53:	push   cs
  40de54:	cmp    eax,0x9a0dbf31
  40de59:	(bad)  
  40de5a:	pop    eax
  40de5b:	je     0x40de38
  40de5d:	jl     0x40de45
  40de5f:	(bad)
  40de63:	xchg   ecx,eax
  40de64:	bound  ebp,QWORD PTR [esp+ebp*8]
  40de67:	xchg   edx,eax
  40de68:	div    DWORD PTR [eax]
  40de6a:	test   BYTE PTR [edx-0x625e16a6],0x75
  40de71:	jp     0x40deae
  40de73:	das    
  40de74:	clc    
  40de75:	push   eax
  40de76:	push   0x2500cec3
  40de7b:	lods   al,BYTE PTR ds:[esi]
  40de7c:	mov    dh,0xf8
  40de7e:	fistp  QWORD PTR [edx+0x26]
  40de81:	add    BYTE PTR [eax+0xa291277],dh
  40de87:	div    BYTE PTR ds:0x31514d19
  40de8d:	sub    dl,BYTE PTR ds:0x1652d145
  40de93:	push   edi
  40de94:	lock mov ds:0x71c1cb56,eax
  40de9a:	adc    ch,BYTE PTR [ecx]
  40de9c:	add    bh,cl
  40de9e:	sub    BYTE PTR [ecx-0x3caef7ba],0x3a
  40dea5:	or     bl,BYTE PTR [ebx-0x34]
  40dea8:	jge    0x40de83
  40deaa:	xchg   esp,eax
  40deab:	out    0x58,al
  40dead:	mov    BYTE PTR [edi],bh
  40deaf:	scas   al,BYTE PTR es:[edi]
  40deb0:	cdq    
  40deb1:	xchg   esi,eax
  40deb2:	inc    eax
  40deb3:	add    al,0x16
  40deb5:	xor    dl,BYTE PTR [edx+0x6bbb1b22]
  40debb:	call   0x6da3:0xd2e22c8d
  40dec2:	xor    edx,DWORD PTR [ebx+0x13]
  40dec5:	jg     0x40dedf
  40dec7:	push   ecx
  40dec8:	mov    ebx,edx
  40deca:	test   al,0xe
  40decc:	xchg   esi,eax
  40decd:	in     al,dx
  40dece:	(bad)  
  40decf:	push   ebx
  40ded0:	jp     0x40df3c
  40ded2:	loope  0x40de91
  40ded4:	xor    al,0xc7
  40ded6:	mov    ch,0x74
  40ded8:	pop    ecx
  40ded9:	xchg   esp,eax
  40deda:	jg     0x40de9c
  40dedc:	ror    DWORD PTR [edi-0x5f],0x82
  40dee0:	pop    ds
  40dee1:	(bad)  
  40dee2:	or     dh,cl
  40dee4:	sub    esp,DWORD PTR [ebp+0x11]
  40dee7:	xchg   eax,edi
  40dee9:	clc    
  40deea:	cmp    edi,0x21
  40deed:	sti    
  40deee:	pop    esi
  40deef:	shr    DWORD PTR [ecx],0xc9
  40def2:	cs clc 
  40def4:	dec    ecx
  40def5:	lea    esp,[edx-0x2d]
  40def8:	mov    al,ds:0x2c520098
  40defd:	outs   dx,DWORD PTR ds:[esi]
  40defe:	mov    bh,0x4f
  40df00:	xor    eax,0x41f70c66
  40df05:	cwde   
  40df06:	retf   0x7d56
  40df09:	xchg   ebp,eax
  40df0a:	lea    esp,[ebp+ecx*1+0x25a50bc7]
  40df11:	inc    edx
  40df12:	mov    ebx,0xea4e1fad
  40df17:	je     0x40deac
  40df19:	aas    
  40df1a:	nop
  40df1b:	push   cs
  40df1c:	xchg   esp,eax
  40df1d:	dec    ebp
  40df1e:	into   
  40df1f:	add    al,0x7d
  40df21:	xchg   edx,eax
  40df22:	push   cs
  40df23:	push   eax
  40df24:	rcl    ebx,cl
  40df26:	pop    ebp
  40df27:	(bad)  
  40df28:	dec    ecx
  40df29:	or     BYTE PTR [ecx+0x7e],dh
  40df2c:	(bad)  [ecx]
  40df2e:	fisttp QWORD PTR [edi-0xe403993]
  40df34:	repz into 
  40df36:	clc    
  40df37:	mov    ah,0x45
  40df39:	cmp    eax,0xb40d1bfc
  40df3e:	mov    ecx,0x1a678d65
  40df43:	push   edx
  40df44:	xchg   ebx,eax
  40df45:	cmp    ecx,ebx
  40df47:	out    0xdf,al
  40df49:	stos   DWORD PTR es:[edi],eax
  40df4a:	pop    edi
  40df4b:	mov    edx,0x6e29e4be
  40df50:	pop    eax
  40df51:	lds    eax,FWORD PTR ds:0x74d88c6f
  40df57:	(bad)  
  40df59:	adc    BYTE PTR [esi-0x7f],al
  40df5c:	mov    al,ds:0xdac167d2
  40df61:	mov    ecx,0x4da9e521
  40df66:	add    edi,0x4134354b
  40df6c:	and    ebx,ebp
  40df6e:	sahf   
  40df6f:	jb     0x40dfd7
  40df71:	mov    ebx,0x2f222d2a
  40df76:	xchg   BYTE PTR [edi+0x62450aaf],cl
  40df7c:	pop    edx
  40df7d:	ss ret 
  40df7f:	fdivr  QWORD PTR [edi]
  40df81:	pop    bx
  40df83:	dec    esp
  40df84:	loopne 0x40dfea
  40df86:	jnp    0x40dfdd
  40df88:	test   eax,0x9f519930
  40df8d:	and    ah,BYTE PTR [eax]
  40df8f:	cmp    DWORD PTR [edi-0x52],ecx
  40df92:	mov    dh,0x90
  40df94:	mov    ebp,0xa30b8224
  40df99:	sbb    DWORD PTR [esi-0x43],ebx
  40df9c:	cli    
  40df9d:	(bad)  
  40df9f:	xchg   esi,eax
  40dfa0:	sub    BYTE PTR [ebp-0x43],ah
  40dfa3:	jae    0x40df3f
  40dfa5:	mov    al,0x86
  40dfa7:	or     cl,BYTE PTR [ebx+0x709e8f8]
  40dfad:	inc    edi
  40dfae:	rcr    BYTE PTR [ecx+0x7a],cl
  40dfb1:	call   0x82e:0x25517e02
  40dfb8:	mov    esi,0x2d04275c
  40dfbd:	inc    edx
  40dfbe:	inc    eax
  40dfbf:	test   eax,0xce45603
  40dfc4:	out    dx,al
  40dfc5:	mov    ecx,0xa00b266d
  40dfca:	xor    BYTE PTR [esi-0x286d7585],dh
  40dfd0:	inc    ecx
  40dfd1:	in     eax,0xf3
  40dfd3:	je     0x40df87
  40dfd5:	cmp    ebp,ecx
  40dfd7:	push   edx
  40dfd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dfd9:	in     eax,0xaa
  40dfdb:	adc    edi,DWORD PTR [edi+0xa13707d]
  40dfe1:	inc    eax
  40dfe2:	sub    eax,0x56e28ab2
  40dfe7:	and    BYTE PTR [ebx],0xa1
  40dfea:	inc    ebp
  40dfeb:	cwde   
  40dfec:	int3   
  40dfed:	sahf   
  40dfee:	outs   dx,BYTE PTR ds:[esi]
  40dfef:	sbb    ah,BYTE PTR [edx+0x77]
  40dff2:	cmp    BYTE PTR [eax],0xac
  40dff5:	jg     0x40e004
  40dff7:	adc    edi,DWORD PTR [eax+ebx*4]
  40dffa:	ret    
  40dffb:	push   cs
  40dffc:	pop    edx
  40dffd:	pop    ebp
  40dffe:	inc    ebp
  40dfff:	mov    cl,0x83
  40e001:	ss dec ebp
  40e003:	dec    edx
  40e004:	dec    edx
  40e005:	mov    bl,0x6c
  40e007:	retf   0x5d26
  40e00a:	(bad)  
  40e00b:	jno    0x40e060
  40e00d:	lods   eax,DWORD PTR ds:[esi]
  40e00e:	popf   
  40e00f:	or     ah,BYTE PTR [edx-0x599aaae1]
  40e015:	dec    edx
  40e016:	pop    eax
  40e017:	shl    DWORD PTR [eax-0x59b5ae7c],0x71
  40e01e:	jp     0x40dfc3
  40e020:	xor    eax,0x6b3617fb
  40e025:	fistp  DWORD PTR [esi]
  40e027:	test   DWORD PTR [edx*2-0x32cfdeb4],ecx
  40e02e:	sub    BYTE PTR [eax-0x1b21ea3],dl
  40e034:	ins    DWORD PTR es:[edi],dx
  40e035:	or     eax,0x78629060
  40e03a:	mov    dl,0x32
  40e03c:	mov    cl,0x89
  40e03e:	xchg   ebx,eax
  40e03f:	xor    al,0xc3
  40e041:	ja     0x40e01c
  40e043:	scas   eax,DWORD PTR es:[edi]
  40e044:	inc    ecx
  40e045:	inc    edx
  40e046:	adc    ch,BYTE PTR [eax-0x3d]
  40e049:	cs fwait
  40e04b:	sar    BYTE PTR [ebx-0x68c9322c],0xe6
  40e052:	xor    eax,0xef5b3f52
  40e057:	rcr    DWORD PTR [eax+esi*8+0x3467f8e8],1
  40e05e:	hlt    
  40e05f:	dec    esi
  40e060:	out    dx,eax
  40e061:	fstp   DWORD PTR [eax+0x11251e28]
  40e067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e068:	add    dl,al
  40e06a:	push   esi
  40e06b:	call   0x61194eda
  40e070:	mov    eax,DWORD PTR [edx]
  40e072:	aad    0x6
  40e074:	pop    esi
  40e075:	and    ecx,DWORD PTR [eax+edx*1]
  40e078:	call   0xd6405ad9
  40e07d:	mov    esi,0x579199d0
  40e082:	cmc    
  40e083:	fdivr  QWORD PTR [edx+ecx*1-0x6e]
  40e087:	es je  0x40e0b2
  40e08a:	sbb    eax,0x22334a64
  40e08f:	and    edx,eax
  40e091:	or     edi,DWORD PTR [edi]
  40e093:	sub    bh,ah
  40e095:	enter  0x5e42,0x6e
  40e099:	xchg   ebp,eax
  40e09a:	fdiv   st(3),st
  40e09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e09d:	je     0x40e0d3
  40e09f:	sbb    DWORD PTR [ecx+0x334b48bc],edx
  40e0a5:	lock pop ss
  40e0a7:	xor    DWORD PTR ds:0xff946f7b,ecx
  40e0ad:	loope  0x40e0f6
  40e0af:	xchg   ecx,eax
  40e0b0:	retf   
  40e0b1:	shufps xmm6,xmm6,0xbc
  40e0b5:	dec    esp
  40e0b6:	cmp    al,0x6b
  40e0b8:	mov    BYTE PTR [ecx+0x78],dh
  40e0bb:	pop    ds
  40e0bc:	pop    edi
  40e0bd:	adc    BYTE PTR [esi+0x29e05005],bl
  40e0c3:	sbb    esi,DWORD PTR [ebx+0x7b]
  40e0c6:	add    edx,DWORD PTR [eax]
  40e0c8:	rcr    DWORD PTR [edx],0x7b
  40e0cb:	loop   0x40e12e
  40e0cd:	sub    eax,0x4ed494f8
  40e0d2:	adc    eax,0xc7d7cf5f
  40e0d7:	mov    esp,0xe4100cf6
  40e0dc:	in     al,dx
  40e0dd:	cmp    DWORD PTR ds:[ebx],esp
  40e0e0:	cmp    bl,0x5f
  40e0e3:	push   0x63
  40e0e5:	bound  edx,QWORD PTR [edx+0x50713ac2]
  40e0eb:	(bad)  
  40e0ec:	pop    ss
  40e0ed:	fs push esp
  40e0ef:	in     al,0x53
  40e0f1:	inc    eax
  40e0f2:	dec    ebp
  40e0f3:	imul   edx,ebx,0xae869b8d
  40e0f9:	push   ds
  40e0fa:	(bad)  
  40e0fb:	mov    ch,BYTE PTR [eax]
  40e0fd:	lds    edx,FWORD PTR [ebx-0xd1032e1]
  40e103:	inc    ebp
  40e104:	and    al,0x4d
  40e106:	enter  0x5aa,0xbd
  40e10a:	and    al,0x87
  40e10c:	dec    esp
  40e10d:	and    al,0xe8
  40e10f:	div    DWORD PTR [esi+ecx*2]
  40e112:	dec    ecx
  40e113:	dec    ebx
  40e114:	mov    cl,0x5b
  40e116:	pop    edx
  40e117:	sub    BYTE PTR [edi],al
  40e119:	mov    cl,0x7f
  40e11b:	(bad)  
  40e11c:	cmp    esp,esi
  40e11e:	and    DWORD PTR [edx+0x4604632a],edx
  40e124:	rcr    DWORD PTR [eax],cl
  40e126:	and    eax,0xff810892
  40e12b:	ficom  WORD PTR [ebx+0x19]
  40e12e:	lods   al,BYTE PTR ds:[esi]
  40e12f:	jl     0x40e151
  40e131:	jb     0x40e194
  40e133:	call   0x17c115
  40e138:	pop    ss
  40e139:	das    
  40e13a:	fsubr  QWORD PTR [esi-0x46fc58ad]
  40e140:	es pop esi
  40e142:	loop   0x40e0d0
  40e144:	inc    BYTE PTR [esi+eiz*4]
  40e147:	or     ebx,DWORD PTR [ecx]
  40e149:	das    
  40e14a:	sbb    dh,BYTE PTR [esi]
  40e14c:	dec    ecx
  40e14d:	lods   eax,DWORD PTR ds:[esi]
  40e14e:	push   eax
  40e14f:	cmp    ch,BYTE PTR [ebp-0x23]
  40e152:	out    0xa2,al
  40e154:	dec    esi
  40e155:	pushf  
  40e156:	or     ebp,DWORD PTR [ecx]
  40e158:	sbb    BYTE PTR [edi+0x57ca90f5],dh
  40e15e:	dec    eax
  40e15f:	mov    dl,0x63
  40e161:	pop    eax
  40e162:	bound  eax,QWORD PTR [esi]
  40e164:	push   edx
  40e165:	fst    DWORD PTR [ecx-0x4e]
  40e168:	mov    DWORD PTR [ecx+0x5],esp
  40e16b:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40e16d:	stos   BYTE PTR es:[edi],al
  40e16e:	xchg   esi,ebx
  40e170:	and    al,0x2e
  40e172:	jns    0x40e12b
  40e174:	and    al,0x57
  40e176:	into   
  40e177:	inc    edi
  40e178:	mov    ebx,0xd100070
  40e17d:	or     eax,0xe8b2f03c
  40e182:	ficomp WORD PTR [esi-0x17]
  40e185:	xchg   esi,eax
  40e186:	and    BYTE PTR [esi],cl
  40e188:	inc    esp
  40e189:	sbb    ch,BYTE PTR [ebx-0x1aef35f2]
  40e18f:	pop    ebp
  40e190:	inc    ebp
  40e191:	pop    es
  40e192:	int3   
  40e193:	jne    0x40e15a
  40e195:	dec    eax
  40e196:	je     0x40e14f
  40e198:	xor    esi,DWORD PTR [ecx-0x1a]
  40e19b:	dec    edx
  40e19c:	sub    bh,BYTE PTR [ebx-0x2e08dd3f]
  40e1a2:	dec    edx
  40e1a3:	jbe    0x40e198
  40e1a5:	adc    dh,al
  40e1a7:	cmp    DWORD PTR [eax+0x2a],ebp
  40e1aa:	retf   0xf808
  40e1ad:	or     al,0xff
  40e1af:	sti    
  40e1b0:	sbb    al,0x40
  40e1b2:	int    0xe6
  40e1b4:	xor    ch,bl
  40e1b6:	idiv   BYTE PTR [ebx+0x1d8a6cad]
  40e1bc:	ret    0xae1
  40e1bf:	aaa    
  40e1c0:	adc    bh,ch
  40e1c2:	mov    edx,0x2baeb8a8
  40e1c7:	lahf   
  40e1c8:	dec    eax
  40e1c9:	(bad)  
  40e1ca:	mov    ebp,0x1dc4b7a4
  40e1cf:	sbb    al,0x97
  40e1d1:	inc    ebx
  40e1d2:	into   
  40e1d3:	shl    DWORD PTR [esi-0x61d4fe48],cl
  40e1d9:	je     0x40e20e
  40e1db:	push   es
  40e1dc:	loopne 0x40e1d2
  40e1de:	call   0x38c18f29
  40e1e3:	inc    edi
  40e1e4:	loop   0x40e1c7
  40e1e6:	out    0xf6,al
  40e1e8:	pusha  
  40e1e9:	mov    esi,0x260688ba
  40e1ee:	out    0x4d,al
  40e1f0:	inc    BYTE PTR [ebp-0x5]
  40e1f3:	push   ss
  40e1f4:	add    al,0xf3
  40e1f6:	pop    es
  40e1f7:	push   DWORD PTR [ecx-0x350b5554]
  40e1fd:	mov    ah,ah
  40e1ff:	ret    0xabbb
  40e202:	pop    es
  40e203:	pop    edi
  40e204:	lods   eax,DWORD PTR ds:[esi]
  40e205:	cmp    esi,DWORD PTR [ebx+0x85ab875]
  40e20b:	out    dx,al
  40e20c:	cmp    ebx,esi
  40e20e:	das    
  40e20f:	pop    edi
  40e210:	and    eax,0x5f963a61
  40e215:	fstp   QWORD PTR [ebx-0x40]
  40e218:	outs   dx,DWORD PTR ds:[esi]
  40e219:	xchg   edx,eax
  40e21a:	jmp    0x40e1bc
  40e21c:	fidivr WORD PTR [ecx]
  40e21e:	lahf   
  40e21f:	loope  0x40e1cf
  40e221:	sti    
  40e222:	sub    al,0xf4
  40e224:	inc    ecx
  40e225:	shr    eax,1
  40e227:	cwde   
  40e228:	aas    
  40e229:	mov    ecx,0x46b26593
  40e22e:	imul   ebx,DWORD PTR ss:[esi],0xe50f4399
  40e235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e236:	inc    eax
  40e237:	mov    esp,0x441c64f0
  40e23c:	inc    ecx
  40e23d:	mov    ecx,0x2e46eb2a
  40e242:	ficomp WORD PTR [edi-0x21fe2566]
  40e248:	mov    dl,0xdd
  40e24a:	pop    esp
  40e24b:	inc    ecx
  40e24c:	sub    ebx,DWORD PTR [edi-0x5913c868]
  40e252:	jne    0x40e281
  40e254:	ror    esi,1
  40e256:	xchg   DWORD PTR [ebp+esi*4+0x6f065d79],ebp
  40e25d:	rcl    DWORD PTR [ecx],0x48
  40e260:	jecxz  0x40e296
  40e262:	mov    dh,0xb2
  40e264:	or     eax,0xb1be6bf5
  40e269:	push   0x3b465b8a
  40e26e:	adc    eax,0xe5ab51aa
  40e273:	icebp  
  40e274:	loopne 0x40e262
  40e276:	inc    edx
  40e277:	jmp    0x2510fd19
  40e27c:	lahf   
  40e27d:	hlt    
  40e27e:	adc    BYTE PTR [edx],0x6b
  40e281:	stos   DWORD PTR es:[edi],eax
  40e282:	ficomp WORD PTR [esi-0x6e]
  40e285:	adc    BYTE PTR [eax+ebp*1],al
  40e288:	push   0x68
  40e28a:	mov    dh,0x6
  40e28c:	mov    bh,0x4d
  40e28e:	(bad)  
  40e28f:	(bad)  
  40e290:	jmp    0x5a1dde32
  40e295:	test   eax,0x9f3e1998
  40e29a:	xchg   ecx,eax
  40e29b:	push   cs
  40e29c:	call   0x50974e15
  40e2a1:	ds adc eax,0xd6ad10ac
  40e2a7:	push   ebp
  40e2a8:	nop
  40e2a9:	lock mov WORD PTR [esi],?
  40e2ac:	xchg   ebp,eax
  40e2ad:	aas    
  40e2ae:	(bad)  
  40e2af:	cmc    
  40e2b0:	mov    ds:0xab7b7d4f,eax
  40e2b5:	jae    0x40e2af
  40e2b7:	xchg   ebx,eax
  40e2b8:	hlt    
  40e2b9:	pop    ebp
  40e2ba:	add    ebx,DWORD PTR [ecx]
  40e2bc:	inc    esp
  40e2bd:	lahf   
  40e2be:	clc    
  40e2bf:	rcl    DWORD PTR [eax-0x20fc7e7f],1
  40e2c5:	push   ecx
  40e2c6:	cs (bad) 
  40e2c8:	mov    eax,ds:0x64c1a8b1
  40e2cd:	and    eax,0x823f9a6f
  40e2d2:	imul   ecx,DWORD PTR [edi+0x4e],0xffffffde
  40e2d6:	adc    al,0xba
  40e2d8:	in     al,0x7d
  40e2da:	dec    eax
  40e2db:	sub    BYTE PTR [ebp+eiz*1+0x57],ah
  40e2df:	jo     0x40e279
  40e2e1:	leave  
  40e2e2:	repnz dec ebp
  40e2e4:	jg     0x40e2e6
  40e2e6:	call   0x8edb05c8
  40e2eb:	ret    0xf500
  40e2ee:	popa   
  40e2ef:	sub    eax,0x59919ad8
  40e2f4:	pop    esp
  40e2f5:	stos   DWORD PTR es:[edi],eax
  40e2f6:	jb     0x40e2d7
  40e2f8:	repz rcl DWORD PTR gs:[ebx],cl
  40e2fc:	ret    0x6163
  40e2ff:	fld    TBYTE PTR ds:[ecx]
  40e302:	mov    esp,0xa8a68d43
  40e307:	leave  
  40e308:	in     al,0x2b
  40e30a:	push   ss
  40e30b:	fisttp WORD PTR [eax+0x54]
  40e30e:	add    BYTE PTR [ebx+ecx*1+0x59],bh
  40e312:	mov    esi,0x1c8b8275
  40e317:	push   ss
  40e318:	popf   
  40e319:	jg     0x40e2b7
  40e31b:	mov    DWORD PTR [eax],eax
  40e31d:	fnstcw WORD PTR [esi]
  40e31f:	jmp    0x1c46:0xc7fade3a
  40e326:	add    DWORD PTR [edi+0x38],0x2865e2d7
  40e32d:	hlt    
  40e32e:	jmp    0xebab:0xb3ade671
  40e335:	lock mov ebp,0x3912cdc0
  40e33b:	pop    es
  40e33c:	push   cs
  40e33d:	loope  0x40e352
  40e33f:	cld    
  40e340:	lea    edx,[edx+0x5a425cc2]
  40e346:	cmc    
  40e347:	mov    cl,BYTE PTR [edi-0x4f]
  40e34a:	sbb    eax,0x91397966
  40e34f:	mov    al,0x44
  40e351:	scas   eax,DWORD PTR es:[edi]
  40e352:	add    bl,bl
  40e354:	ja     0x40e37c
  40e356:	mov    ecx,0xcfd6caea
  40e35b:	sbb    ebp,ecx
  40e35d:	cld    
  40e35e:	test   BYTE PTR [eax],bl
  40e360:	fimul  WORD PTR [ecx-0x4a88c0a9]
  40e366:	xchg   ecx,eax
  40e367:	rol    DWORD PTR [ebx+ebx*4-0x25],cl
  40e36b:	cmp    al,0x99
  40e36d:	xor    cl,ch
  40e36f:	adc    al,0x66
  40e371:	loop   0x40e35a
  40e373:	imul   eax,esp,0x5101472c
  40e379:	stos   BYTE PTR es:[edi],al
  40e37a:	push   ss
  40e37b:	lds    esi,FWORD PTR [eax+0x24]
  40e37e:	push   ebp
  40e37f:	or     esi,DWORD PTR [ebp-0x40bb230d]
  40e385:	fbstp  TBYTE PTR [ebp+0x6e]
  40e388:	mov    al,0x33
  40e38a:	out    0xae,eax
  40e38c:	lea    ebx,[ebp-0x17]
  40e38f:	sar    BYTE PTR [ebx+0x77],cl
  40e392:	nop
  40e393:	int    0xe3
  40e395:	rcr    DWORD PTR [ecx+0x7eefc09c],1
  40e39b:	add    ebx,DWORD PTR [edx]
  40e39d:	imul   ebp,DWORD PTR [ebx+0x13],0x2b23ad80
  40e3a4:	or     bl,BYTE PTR [ebx+0x22e50fdc]
  40e3aa:	loope  0x40e3ba
  40e3ac:	(bad)  
  40e3ad:	and    BYTE PTR [eax+0x17],ch
  40e3b0:	fsub   DWORD PTR [edi+0x316e772f]
  40e3b6:	inc    dh
  40e3b8:	mov    ch,BYTE PTR [eax]
  40e3ba:	data16 loope 0x40e3ae
  40e3bd:	scas   al,BYTE PTR es:[edi]
  40e3be:	cs iret 
  40e3c0:	ret    0x9984
  40e3c3:	js     0x40e3fa
  40e3c5:	test   DWORD PTR [ecx+esi*4+0x2f2fe5af],esi
  40e3cc:	out    dx,al
  40e3cd:	nop
  40e3ce:	scas   eax,DWORD PTR es:[edi]
  40e3cf:	jmp    0xca71:0x6a3d3451
  40e3d6:	inc    eax
  40e3d7:	mov    BYTE PTR [edi],dh
  40e3d9:	jo     0x40e45a
  40e3db:	test   al,0x8f
  40e3dd:	cmp    eax,0xe28828a
  40e3e2:	pop    edx
  40e3e3:	mov    esi,0x45bfd42c
  40e3e8:	iret   
  40e3e9:	jecxz  0x40e3e6
  40e3eb:	ror    BYTE PTR [esi+0x2d],0x2
  40e3ef:	cmp    ch,BYTE PTR [ebp+0x5d]
  40e3f2:	mov    DWORD PTR [edx+0x48fa9934],0xa7b38916
  40e3fc:	inc    ebx
  40e3fd:	(bad)  
  40e3fe:	sub    edi,ebp
  40e400:	cmc    
  40e401:	and    BYTE PTR [edx+ebp*4+0x706bd1e7],dh
  40e408:	push   esi
  40e409:	jns    0x40e485
  40e40b:	pop    ds
  40e40c:	jmp    0x40e3c4
  40e40e:	push   ds
  40e40f:	sbb    bl,al
  40e411:	push   ebp
  40e412:	shr    cl,0x5f
  40e415:	xchg   ebp,eax
  40e416:	pop    es
  40e417:	test   al,0x38
  40e419:	xchg   edx,eax
  40e41a:	mov    ebx,0x62078b67
  40e41f:	push   cs
  40e420:	outs   dx,BYTE PTR ds:[esi]
  40e421:	dec    edx
  40e422:	jl     0x40e41e
  40e424:	xchg   ebx,eax
  40e425:	shl    DWORD PTR [edx+0x482348ce],0xb6
  40e42c:	sub    edi,DWORD PTR [esi+ebx*8-0x576a609f]
  40e433:	leave  
  40e434:	jmp    0xb98c:0x61f3799f
  40e43b:	and    eax,DWORD PTR [ebx]
  40e43d:	jge    0x40e402
  40e43f:	retf   0x3f8e
  40e442:	clc    
  40e443:	sti    
  40e444:	mov    eax,ds:0x63b7d3fc
  40e449:	aas    
  40e44a:	push   ebp
  40e44b:	lea    edx,[edx+0x68]
  40e44e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e44f:	data16 lods al,BYTE PTR ds:[esi]
  40e451:	mov    eax,ds:0x64facbe4
  40e456:	mov    ah,0x15
  40e458:	pusha  
  40e459:	mov    dh,0x7
  40e45b:	aam    0xe4
  40e45d:	sub    ecx,DWORD PTR [ecx+0x50]
  40e460:	fsub   DWORD PTR [ebx-0x3f5e61cb]
  40e466:	xor    esi,esp
  40e468:	inc    ebp
  40e469:	xchg   ebp,eax
  40e46a:	out    dx,al
  40e46b:	or     DWORD PTR [ebx-0x6baadef1],0xe6c33f32
  40e475:	icebp  
  40e476:	jne    0x40e4b7
  40e478:	cdq    
  40e479:	add    al,0x74
  40e47b:	stc    
  40e47c:	neg    DWORD PTR [ecx*4+0x288e6a71]
  40e483:	scas   al,BYTE PTR es:[edi]
  40e484:	clc    
  40e485:	repz push 0xba437c50
  40e48b:	repz popf 
  40e48d:	xor    ebx,edx
  40e48f:	retf   
  40e490:	mov    ebx,0xa3655c08
  40e495:	mov    bl,0x7b
  40e497:	gs nop
  40e499:	fnstcw WORD PTR [ebx+0x39d4ff66]
  40e49f:	repz jl 0x40e4ea
  40e4a2:	xchg   esi,eax
  40e4a3:	(bad)  
  40e4a4:	jae    0x40e435
  40e4a6:	ins    DWORD PTR es:[edi],dx
  40e4a7:	neg    BYTE PTR [edi]
  40e4a9:	js     0x40e440
  40e4ab:	idiv   BYTE PTR [esi+0x4fef8a33]
  40e4b1:	std    
  40e4b2:	rcl    BYTE PTR [ebx-0x4e],1
  40e4b5:	mov    esi,0xe86e9638
  40e4ba:	cld    
  40e4bb:	pushf  
  40e4bc:	and    DWORD PTR [ebx+edx*8+0x73],esp
  40e4c0:	ds xchg ebp,eax
  40e4c2:	popa   
  40e4c3:	pop    ds
  40e4c4:	es cs ins BYTE PTR es:[edi],dx
  40e4c7:	fld    QWORD PTR [ecx]
  40e4c9:	data16 xor al,BYTE PTR [ebx+0x2d6cc3b1]
  40e4d0:	xor    edx,ebx
  40e4d2:	stos   BYTE PTR es:[edi],al
  40e4d3:	imul   ebx,DWORD PTR [eax+0x3bf1c7e4],0x6df08d9
  40e4dd:	into   
  40e4de:	out    dx,al
  40e4df:	int    0x21
  40e4e1:	xor    DWORD PTR [esi+edx*2-0x69],0xffffffd6
  40e4e6:	cmp    DWORD PTR [eax+0x59255d32],edi
  40e4ec:	add    eax,0x926c704c
  40e4f1:	push   ebp
  40e4f2:	jnp    0x40e480
  40e4f4:	xor    ebx,DWORD PTR [ecx]
  40e4f6:	cmp    BYTE PTR [eax],bh
  40e4f8:	push   esp
  40e4f9:	out    dx,eax
  40e4fa:	mov    dh,BYTE PTR [edi-0x51bd85a]
  40e500:	loope  0x40e54d
  40e502:	pushf  
  40e503:	ret    
  40e504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e505:	scas   eax,DWORD PTR es:[edi]
  40e506:	or     al,0xf0
  40e508:	jbe    0x40e4fb
  40e50a:	jne    0x40e4e8
  40e50c:	stos   BYTE PTR es:[edi],al
  40e50d:	mov    esi,0xfd78b2df
  40e512:	pop    ecx
  40e513:	inc    ecx
  40e514:	push   ss
  40e515:	into   
  40e516:	lea    esi,[ebx+eax*8-0x7e1cee89]
  40e51d:	int3   
  40e51e:	fmul   QWORD PTR [edi]
  40e520:	(bad)  
  40e521:	push   ecx
  40e522:	xlat   BYTE PTR ds:[ebx]
  40e523:	adc    DWORD PTR [edi],edx
  40e525:	mov    dl,BYTE PTR [edi+0x4863c80d]
  40e52b:	xchg   esi,eax
  40e52c:	dec    eax
  40e52d:	sub    DWORD PTR [esi+ecx*2-0x1891993b],ecx
  40e534:	cmp    eax,0xab1550aa
  40e539:	dec    ebx
  40e53a:	jno    0x40e583
  40e53c:	out    0xdb,eax
  40e53e:	fwait
  40e53f:	add    dh,BYTE PTR ss:[ebp+0x7f9e3f00]
  40e546:	out    0xba,al
  40e548:	cmp    eax,0xe00e1030
  40e54d:	pop    esp
  40e54e:	jle    0x40e53c
  40e550:	lahf   
  40e551:	mov    ah,0x4d
  40e553:	xchg   BYTE PTR [ebx+0x2c],dl
  40e556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e557:	(bad)  
  40e558:	push   cs
  40e559:	xchg   ebp,eax
  40e55a:	ret    0x642a
  40e55d:	sti    
  40e55e:	shl    DWORD PTR [edx],0x4f
  40e561:	rcr    BYTE PTR [edi+0x3443c42a],0xb2
  40e568:	inc    ebx
  40e56a:	je     0x40e5d9
  40e56c:	mov    ecx,es
  40e56e:	cli    
  40e56f:	adc    BYTE PTR [edi+0x5a1ed6b0],dh
  40e575:	push   esi
  40e576:	cs retf 
  40e578:	cmp    bh,BYTE PTR [ecx-0x1e]
  40e57b:	xchg   edx,eax
  40e57c:	aas    
  40e57d:	int3   
  40e57e:	mov    ds:0x6b83494f,eax
  40e583:	jne    0x40e5c9
  40e585:	xchg   DWORD PTR [eax-0x661b62ea],ebx
  40e58b:	(bad)  
  40e58d:	popa   
  40e58e:	mov    eax,ds:0xeab61b85
  40e593:	xor    esp,edi
  40e595:	sub    BYTE PTR [edx],cl
  40e597:	xor    BYTE PTR [esp+eiz*2-0x6e],0xcc
  40e59c:	dec    ebx
  40e59d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e59e:	(bad)  
  40e59f:	retf   0x836a
  40e5a2:	xor    eax,DWORD PTR [eax-0x6f99defe]
  40e5a8:	mov    al,ds:0xa26f8de4
  40e5ad:	int    0xb8
  40e5af:	jae    0x40e545
  40e5b1:	lock add DWORD PTR [esi+0x1562716b],ecx
  40e5b8:	jno    0x40e598
  40e5ba:	adc    DWORD PTR [edi+0x67],0x7a
  40e5be:	jg     0x40e63c
  40e5c0:	dec    esi
  40e5c1:	inc    esi
  40e5c2:	in     eax,dx
  40e5c3:	fnsave [esi-0x17]
  40e5c6:	sahf   
  40e5c7:	dec    edi
  40e5c8:	cs sub eax,0x5cd5ee81
  40e5ce:	or     edi,DWORD PTR [edi-0x654c7aca]
  40e5d4:	sub    edx,ebp
  40e5d6:	pop    edi
  40e5d7:	mov    eax,0xfe9e59c5
  40e5dc:	mov    esi,0xe281b5bf
  40e5e1:	sub    ecx,DWORD PTR ds:0x2a7b5dd8
  40e5e7:	cld    
  40e5e8:	sbb    DWORD PTR [ebx+ecx*4-0x2b3f5573],0x2144a173
  40e5f3:	pop    ecx
  40e5f4:	mov    eax,ds:0x17c78709
  40e5f9:	sub    bh,BYTE PTR [ecx]
  40e5fb:	outs   dx,DWORD PTR ds:[esi]
  40e5fc:	into   
  40e5fd:	into   
  40e5fe:	lods   eax,DWORD PTR ds:[esi]
  40e5ff:	pop    es
  40e600:	shr    BYTE PTR [eax-0x6a],0x1b
  40e604:	fldcw  WORD PTR [ecx+0x7191608a]
  40e60a:	daa    
  40e60b:	or     bh,BYTE PTR [ebp+0x12]
  40e60e:	mov    al,0xa6
  40e610:	stos   BYTE PTR es:[edi],al
  40e611:	ret    0x2646
  40e614:	iret   
  40e615:	or     ch,BYTE PTR [edi+esi*2+0x45]
  40e619:	call   0x3727:0x22ea9ba8
  40e620:	push   edi
  40e621:	lea    ecx,[eax]
  40e623:	mov    ss,WORD PTR [esi-0x14]
  40e626:	adc    ecx,DWORD PTR [ecx*2-0x2056ce09]
  40e62d:	aaa    
  40e62e:	mov    dl,0x69
  40e630:	or     eax,0x21a1c239
  40e635:	loopne 0x40e67d
  40e637:	push   cs
  40e638:	adc    al,0xfb
  40e63a:	mov    ah,0x1a
  40e63c:	jg     0x40e61f
  40e63e:	inc    eax
  40e63f:	dec    edi
  40e640:	fadd   DWORD PTR [esi+0x30]
  40e643:	mov    fs,WORD PTR [ebx]
  40e645:	jo     0x40e688
  40e647:	iret   
  40e648:	rcl    BYTE PTR [edi+ebx*8-0x72],cl
  40e64c:	sub    eax,0x5af9c7ea
  40e651:	or     edx,DWORD PTR [ebx]
  40e653:	xchg   esi,eax
  40e654:	inc    esp
  40e655:	mov    esi,0x50b6fe84
  40e65a:	popa   
  40e65b:	push   0xa675391a
  40e660:	inc    ebx
  40e661:	sbb    bl,al
  40e663:	pop    esi
  40e664:	(bad)  
  40e665:	loopne 0x40e6d3
  40e667:	mov    dh,0x97
  40e669:	loope  0x40e62b
  40e66b:	js     0x40e650
  40e66d:	(bad)  
  40e66e:	cmc    
  40e66f:	pop    edi
  40e670:	push   es
  40e671:	xor    BYTE PTR [esi-0x23],cl
  40e674:	xchg   DWORD PTR [edi-0x45],ebx
  40e677:	pop    eax
  40e678:	scas   al,BYTE PTR es:[edi]
  40e679:	into   
  40e67a:	call   0x633a75fd
  40e67f:	sub    DWORD PTR [edi-0x28],0xff78a189
  40e686:	loope  0x40e64f
  40e688:	pop    eax
  40e689:	shl    al,cl
  40e68b:	adc    ebp,ebp
  40e68d:	aad    0x77
  40e68f:	mov    eax,0x25691910
  40e694:	rcr    DWORD PTR [edx-0x1cb4ba39],cl
  40e69a:	int    0xc8
  40e69c:	mov    eax,ds:0x6df22a61
  40e6a1:	xchg   BYTE PTR [edx+eax*4],dh
  40e6a4:	xor    ch,BYTE PTR [edx+eax*8]
  40e6a7:	jb     0x40e687
  40e6a9:	adc    dl,BYTE PTR [ebx-0x3ba91849]
  40e6af:	adc    al,0x5a
  40e6b1:	(bad)
  40e6b5:	ficomp WORD PTR [edi-0x4c]
  40e6b8:	dec    edi
  40e6b9:	iret   
  40e6ba:	popf   
  40e6bb:	mov    al,0xf0
  40e6bd:	int    0x1
  40e6bf:	cmp    eax,0xc6da0462
  40e6c4:	jmp    0x40e672
  40e6c6:	add    eax,0xd9bdf17a
  40e6cb:	push   ds
  40e6cc:	push   esp
  40e6cd:	ds cmp al,0x99
  40e6d0:	cmp    eax,0x3e82f59b
  40e6d5:	pop    esp
  40e6d6:	dec    eax
  40e6d7:	dec    ebp
  40e6d8:	data16 in al,dx
  40e6da:	lahf   
  40e6db:	sar    BYTE PTR [ebp-0x49],cl
  40e6de:	jbe    0x40e74a
  40e6e0:	scas   eax,DWORD PTR es:[edi]
  40e6e1:	xor    cl,BYTE PTR [edi+0x6d45419e]
  40e6e7:	mov    edi,0xfb3d691c
  40e6ec:	xor    ch,bh
  40e6ee:	cmp    al,0x5a
  40e6f0:	inc    ebx
  40e6f1:	dec    ebx
  40e6f2:	and    eax,0x63c621f4
  40e6f7:	es popf 
  40e6f9:	stos   BYTE PTR es:[edi],al
  40e6fa:	cmp    ecx,ebx
  40e6fc:	xor    eax,0x3617e042
  40e701:	mov    bh,BYTE PTR [eax-0x2c]
  40e704:	dec    esp
  40e705:	mov    ?,edx
  40e707:	shl    BYTE PTR [ebx+edx*1+0x7c],0x5
  40e70c:	xchg   DWORD PTR [ecx+edx*2-0x78],edi
  40e710:	outs   dx,BYTE PTR ds:[esi]
  40e711:	mov    dh,0x3d
  40e713:	dec    eax
  40e714:	cmp    DWORD PTR [eax+0x23],ebp
  40e717:	pop    es
  40e718:	rcr    BYTE PTR [ebp-0x1b],0x2b
  40e71c:	sbb    eax,0xb378f925
  40e721:	cmp    al,0xb0
  40e723:	pusha  
  40e724:	inc    ebp
  40e725:	xor    eax,0x43bd7bf4
  40e72a:	inc    eax
  40e72b:	dec    ebp
  40e72c:	sub    al,0x74
  40e72e:	outs   dx,DWORD PTR ds:[esi]
  40e72f:	dec    ebx
  40e730:	pop    ds
  40e731:	mov    DWORD PTR ds:0x8f6b52f6,esi
  40e737:	xor    bl,BYTE PTR [eax-0x525b0372]
  40e73d:	shr    al,1
  40e73f:	mov    dl,0xfd
  40e741:	sbb    ch,ah
  40e743:	in     al,dx
  40e744:	mov    esp,0x310bfc6d
  40e749:	mov    ah,0x93
  40e74b:	fisubr DWORD PTR [edx]
  40e74d:	imul   ecx,DWORD PTR [edx],0x7b0ea420
  40e753:	inc    ebp
  40e754:	sbb    ah,BYTE PTR [esi]
  40e756:	cmp    BYTE PTR [ebp-0x28],bl
  40e759:	mov    ds:0xabc08645,al
  40e75e:	jns    0x40e75b
  40e760:	pop    es
  40e761:	pop    ecx
  40e762:	jmp    0x40e791
  40e764:	fbstp  TBYTE PTR [ebx]
  40e766:	inc    ebx
  40e767:	enter  0x35e8,0x8a
  40e76b:	mov    bh,0xbc
  40e76d:	pop    esp
  40e76e:	mov    dl,0xdd
  40e770:	push   esp
  40e771:	fild   WORD PTR [eax+0x4cf2a8f5]
  40e777:	cmp    ecx,DWORD PTR [edx+0x5]
  40e77a:	push   es
  40e77b:	or     al,0xe5
  40e77d:	test   DWORD PTR [edi+0x1192f3ed],eax
  40e783:	arpl   WORD PTR ds:0xc48b41a0,di
  40e789:	stos   BYTE PTR es:[edi],al
  40e78a:	xor    eax,0xc1cd0a1e
  40e78f:	inc    esi
  40e790:	jmp    0x7e1c9011
  40e795:	xchg   ecx,eax
  40e796:	inc    eax
  40e797:	dec    eax
  40e798:	jg     0x40e7ef
  40e79a:	mov    ch,0xe0
  40e79c:	jecxz  0x40e80d
  40e79e:	in     al,0xd4
  40e7a0:	xchg   BYTE PTR [edi],al
  40e7a2:	nop
  40e7a3:	imul   ebx,DWORD PTR [ecx-0x12],0xe4a0ca70
  40e7aa:	jns    0x40e7ed
  40e7ac:	arpl   WORD PTR [ebp+0x6c],ax
  40e7af:	fistp  DWORD PTR [eax-0x10]
  40e7b2:	mov    dl,0xde
  40e7b4:	mov    bh,0xa
  40e7b6:	not    DWORD PTR [ecx+0xbbee6b]
  40e7bc:	mov    al,0xc2
  40e7be:	(bad)  
  40e7bf:	adc    edi,DWORD PTR [eax-0x46]
  40e7c2:	push   ds
  40e7c3:	lea    edx,[ebx-0x13]
  40e7c6:	dec    edx
  40e7c7:	mov    eax,0x3abb2633
  40e7cc:	pop    ss
  40e7cd:	iret   
  40e7ce:	sub    ebx,DWORD PTR [edx+edx*1-0x51]
  40e7d2:	fsub   DWORD PTR [edi]
  40e7d4:	iret   
  40e7d5:	arpl   cx,dx
  40e7d7:	fild   DWORD PTR [edi-0x37]
  40e7da:	or     ebp,ebp
  40e7dc:	scas   eax,DWORD PTR es:[edi]
  40e7dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7de:	fimul  DWORD PTR [eax-0x2f0c27c9]
  40e7e4:	jle    0x40e864
  40e7e6:	stos   DWORD PTR es:[edi],eax
  40e7e7:	sti    
  40e7e8:	dec    ebp
  40e7e9:	sbb    BYTE PTR [ebx+0x2876cdb9],0x9c
  40e7f0:	cld    
  40e7f1:	cmp    BYTE PTR [ebx+edi*1+0x28],bh
  40e7f5:	(bad)
  40e7f9:	pop    ecx
  40e7fa:	dec    edx
  40e7fb:	or     eax,0xb5b2ed76
  40e800:	jg     0x40e841
  40e802:	pusha  
  40e803:	sbb    DWORD PTR [ebp-0x5001cb24],edx
  40e809:	xor    edi,edi
  40e80b:	mov    WORD PTR [edi+0x635bdf34],gs
  40e811:	mov    gs:0x4e891e3,al
  40e817:	(bad)  
  40e818:	into   
  40e819:	data16 rcr BYTE PTR [esi+0x607d3920],0x4d
  40e821:	sub    eax,esp
  40e823:	cdq    
  40e824:	shr    BYTE PTR [eax-0x9],1
  40e827:	js     0x40e7fe
  40e829:	or     eax,0xb96a42d0
  40e82e:	jge    0x40e7d6
  40e830:	sub    edi,DWORD PTR [edi+0x7f03c7a8]
  40e836:	inc    eax
  40e837:	aas    
  40e838:	push   esp
  40e839:	mov    ah,0x61
  40e83b:	fcomp  QWORD PTR [edx+0x22731111]
  40e841:	sti    
  40e842:	xchg   DWORD PTR [esi-0x15e0d0d6],esp
  40e848:	jo     0x40e8ad
  40e84a:	jno    0x40e806
  40e84c:	test   al,0xe8
  40e84e:	repnz fsin 
  40e851:	inc    eax
  40e852:	xchg   edi,eax
  40e853:	mov    DWORD PTR [edx],esp
  40e855:	out    dx,al
  40e856:	shl    BYTE PTR [ecx],cl
  40e858:	pop    eax
  40e859:	dec    esp
  40e85a:	inc    esi
  40e85b:	inc    ebp
  40e85c:	pusha  
  40e85d:	imul   ebx,esi,0xb99b1641
  40e863:	and    dl,BYTE PTR [edx+0x22]
  40e866:	mov    ds:0xff574b91,al
  40e86b:	xchg   esp,eax
  40e86c:	sub    dh,BYTE PTR [ebp+0x17]
  40e86f:	add    al,BYTE PTR [edi]
  40e871:	add    dl,BYTE PTR [ecx]
  40e873:	addr16 jb 0x40e8be
  40e876:	add    cl,BYTE PTR [eax+eiz*4+0x4b640e41]
  40e87d:	jo     0x40e88b
  40e87f:	mov    cl,0x67
  40e881:	sbb    al,0xbe
  40e883:	pop    esp
  40e884:	inc    esi
  40e885:	cmp    dh,BYTE PTR [ebp-0x7d0705c6]
  40e88b:	adc    al,0xf4
  40e88d:	cmp    esi,DWORD PTR [ebx-0x38]
  40e890:	ret    0x3cd7
  40e893:	sbb    esp,ecx
  40e895:	mov    ch,0xe
  40e897:	push   0xef235cc0
  40e89c:	xchg   edx,eax
  40e89d:	and    al,0x8c
  40e89f:	push   ebx
  40e8a0:	adc    al,0x1e
  40e8a2:	sahf   
  40e8a3:	mov    ebx,0x64a8ebb5
  40e8a8:	mov    esp,0x95469224
  40e8ad:	(bad)  
  40e8ae:	stos   BYTE PTR es:[edi],al
  40e8af:	pop    ebp
  40e8b0:	popa   
  40e8b1:	push   ss
  40e8b2:	lods   al,BYTE PTR ds:[esi]
  40e8b3:	jg     0x40e83c
  40e8b5:	(bad)  
  40e8b6:	mov    ds:0xb5deb4cb,al
  40e8bb:	jae    0x40e84b
  40e8bd:	(bad)  
  40e8be:	sbb    eax,0xa45a6750
  40e8c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8c4:	adc    ebp,DWORD PTR [ebx-0x2bac15ab]
  40e8ca:	outs   dx,DWORD PTR ds:[esi]
  40e8cb:	stos   BYTE PTR es:[edi],al
  40e8cc:	cs xchg ebp,eax
  40e8ce:	xlat   BYTE PTR ds:[ebx]
  40e8cf:	cmp    DWORD PTR [ebp+0x34],edx
  40e8d2:	lea    edx,[edx+0x5c]
  40e8d5:	jno    0x40e947
  40e8d7:	mov    cl,0xf6
  40e8d9:	lahf   
  40e8da:	xor    bl,BYTE PTR [eax+0x7c]
  40e8dd:	fistp  QWORD PTR [esi+0xa]
  40e8e0:	test   eax,0x4fd57742
  40e8e5:	cmp    al,dl
  40e8e7:	jno    0x40e8dd
  40e8e9:	icebp  
  40e8ea:	inc    ebx
  40e8eb:	loop   0x40e8c6
  40e8ed:	sub    ah,BYTE PTR [eax-0xa781097]
  40e8f3:	les    ebx,FWORD PTR [ebx+0x791ce80]
  40e8f9:	add    edx,DWORD PTR gs:[ebp+ecx*2+0x15]
  40e8fe:	cmp    bh,BYTE PTR [eax]
  40e900:	inc    eax
  40e901:	dec    edi
  40e902:	dec    ebp
  40e903:	lds    edx,FWORD PTR ds:0x884ba910
  40e909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e90a:	xchg   DWORD PTR [ebx+0x34ac90b3],esp
  40e910:	pushf  
  40e911:	fbld   TBYTE PTR [ecx+eiz*2+0x24]
  40e915:	sbb    ebx,DWORD PTR [edi]
  40e917:	add    bh,BYTE PTR [esi+0x1d]
  40e91a:	push   ebx
  40e91b:	cmp    eax,0xe738b193
  40e920:	inc    edx
  40e921:	call   0x12de931d
  40e926:	cmp    edx,ebp
  40e928:	and    bh,BYTE PTR [edx+0x2566d11a]
  40e92e:	je     0x40e91e
  40e930:	test   al,0xfc
  40e932:	ins    BYTE PTR es:[edi],dx
  40e933:	stos   DWORD PTR es:[edi],eax
  40e934:	lock lods eax,DWORD PTR ds:[esi]
  40e936:	in     al,dx
  40e937:	inc    ecx
  40e938:	inc    edx
  40e939:	xchg   BYTE PTR [edi+0x56],dh
  40e93c:	stos   DWORD PTR es:[edi],eax
  40e93d:	iret   
  40e93e:	push   esp
  40e93f:	mov    al,ds:0xa596ca9e
  40e944:	push   ds
  40e945:	jl     0x40e946
  40e947:	test   al,0x35
  40e949:	shl    DWORD PTR [eax+0x7e],1
  40e94c:	mov    ebx,0xa86e35d8
  40e951:	xchg   edi,eax
  40e952:	xor    edx,esp
  40e954:	fwait
  40e955:	rcr    eax,1
  40e957:	jge    0x40e934
  40e959:	dec    esi
  40e95a:	adc    DWORD PTR ds:0xac6a667b,edi
  40e960:	es mov al,0xbf
  40e963:	and    ch,0x90
  40e966:	test   eax,0xabecb665
  40e96b:	mov    es,WORD PTR [edx+eiz*1-0x65]
  40e96f:	or     edi,ebp
  40e971:	ret    0x439e
  40e974:	enter  0xe252,0x7d
  40e978:	mov    WORD PTR [ebx],fs
  40e97a:	jle    0x40e9be
  40e97c:	mov    ds:0xb9493405,eax
  40e981:	push   0x2c3203bf
  40e986:	rcr    DWORD PTR [ebp-0x11],cl
  40e989:	push   ebp
  40e98a:	aad    0x92
  40e98c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e98d:	aas    
  40e98e:	iret   
  40e98f:	aas    
  40e990:	push   esp
  40e991:	lock stos BYTE PTR es:[edi],al
  40e993:	jmp    0x40e91f
  40e995:	add    BYTE PTR [edi-0x363d5809],ah
  40e99b:	lahf   
  40e99c:	sub    BYTE PTR ds:0x42312ada,dh
  40e9a2:	jge    0x40e9e4
  40e9a4:	std    
  40e9a5:	ins    BYTE PTR es:[edi],dx
  40e9a6:	sub    bh,cl
  40e9a8:	scas   al,BYTE PTR es:[edi]
  40e9a9:	shl    BYTE PTR [ecx+0x36b88b6c],cl
  40e9af:	sbb    BYTE PTR [edx-0x5a283496],dl
  40e9b5:	cmp    bh,BYTE PTR [ebp+0x5707d943]
  40e9bb:	rcr    BYTE PTR [edx+0x686eca37],cl
  40e9c1:	cli    
  40e9c2:	cmp    esi,ebp
  40e9c4:	mov    edx,0x50326652
  40e9c9:	leave  
  40e9ca:	jl     0x40e97c
  40e9cc:	sar    DWORD PTR [ebp+0x76],cl
  40e9cf:	add    DWORD PTR [ecx],esi
  40e9d1:	pop    ss
  40e9d2:	cdq    
  40e9d3:	nop
  40e9d4:	xor    al,0xed
  40e9d6:	dec    ecx
  40e9d7:	push   ebx
  40e9d8:	fcmovu st,st(3)
  40e9da:	cmp    al,0x42
  40e9dc:	mov    esp,0x977cb5b5
  40e9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9e2:	addr16 dec esp
  40e9e4:	enter  0x891,0xb3
  40e9e8:	hlt    
  40e9e9:	push   ebp
  40e9ea:	popa   
  40e9eb:	mov    DWORD PTR [edx+0x2022ce43],edi
  40e9f1:	pop    ds
  40e9f2:	sbb    sp,WORD PTR [edx-0x73]
  40e9f6:	pop    es
  40e9f7:	xor    al,0x91
  40e9f9:	mov    ah,0xc6
  40e9fb:	mov    WORD PTR [eax+eax*2-0x35fc59e5],ds
  40ea02:	rol    edi,cl
  40ea04:	bound  esp,QWORD PTR gs:0x8763b8cf
  40ea0b:	cmp    al,0xc1
  40ea0d:	mov    ecx,0x13bea2bb
  40ea12:	mov    ah,0x20
  40ea14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea15:	xchg   ebx,eax
  40ea16:	mov    al,0x29
  40ea18:	ins    DWORD PTR es:[edi],dx
  40ea19:	xchg   esi,eax
  40ea1a:	int3   
  40ea1b:	out    dx,al
  40ea1c:	dec    edx
  40ea1d:	gs adc al,0x51
  40ea20:	mov    dl,BYTE PTR ds:[ecx]
  40ea23:	iret   
  40ea24:	pop    es
  40ea25:	cmp    bh,ch
  40ea27:	enter  0x4b40,0x8b
  40ea2b:	int3   
  40ea2c:	jge    0x40ea1e
  40ea2e:	dec    ecx
  40ea2f:	loopne 0x40ea9e
  40ea31:	es mov bl,0x3c
  40ea34:	add    DWORD PTR [edx+ebx*8+0x1838b15a],0x7d
  40ea3c:	and    dh,BYTE PTR [ebx-0x6d3a8b42]
  40ea42:	mov    dh,0x7f
  40ea44:	fcomip st,st(7)
  40ea46:	sbb    al,0xa3
  40ea48:	or     dh,BYTE PTR [eax-0x451bfacb]
  40ea4e:	dec    ecx
  40ea4f:	xchg   bh,al
  40ea51:	js     0x40e9f1
  40ea53:	loopne 0x40e9f2
  40ea55:	sbb    al,0x79
  40ea57:	cwde   
  40ea58:	jae    0x40ea3f
  40ea5a:	mov    ecx,0xa93612f
  40ea5f:	rcl    BYTE PTR [esi],1
  40ea61:	nop
  40ea62:	cmc    
  40ea63:	mov    bl,0x7e
  40ea65:	lds    edi,FWORD PTR [ebp+0x55]
  40ea68:	addr16 clc 
  40ea6a:	call   0x731d:0xeaf06beb
  40ea71:	out    dx,al
  40ea72:	cld    
  40ea73:	sbb    esp,DWORD PTR [ebp+ebx*4+0x2a]
  40ea77:	imul   esi,DWORD PTR [ebx-0x115ea26c],0x4a
  40ea7e:	jg     0x40eaf9
  40ea80:	push   edi
  40ea81:	cs cli 
  40ea83:	test   dh,al
  40ea85:	test   eax,0xea705b34
  40ea8a:	imul   eax,DWORD PTR [eax-0x56c9cca7],0xffffff8c
  40ea91:	std    
  40ea92:	dec    esp
  40ea93:	push   cs
  40ea94:	jge    0x40eae8
  40ea96:	sub    ebx,DWORD PTR [edx]
  40ea98:	and    cl,BYTE PTR [eax+ebp*2-0x3d81419c]
  40ea9f:	js     0x40eabb
  40eaa1:	push   esi
  40eaa2:	push   ds
  40eaa3:	xchg   edi,eax
  40eaa4:	bound  ebp,QWORD PTR [edi+0x28]
  40eaa7:	shl    DWORD PTR [esi-0x7a],0x51
  40eaab:	mov    edx,0x752b6520
  40eab0:	inc    esp
  40eab1:	sahf   
  40eab2:	cmp    BYTE PTR [edx],bl
  40eab4:	and    BYTE PTR [ebx+0x2f],dl
  40eab7:	sub    DWORD PTR [edx-0x11],ebx
  40eaba:	mov    eax,0xf71c02e0
  40eabf:	mov    al,0x14
  40eac1:	jo     0x40eab1
  40eac3:	rcr    DWORD PTR [ecx-0x31],cl
  40eac6:	xchg   ebp,eax
  40eac7:	pop    edi
  40eac8:	out    dx,eax
  40eac9:	shl    BYTE PTR [edi+0x31],1
  40eacc:	cmp    DWORD PTR [esi+0x23],eax
  40eacf:	inc    ecx
  40ead0:	sti    
  40ead1:	and    ebp,ebp
  40ead3:	enter  0x778f,0xf8
  40ead7:	lods   eax,DWORD PTR ds:[esi]
  40ead8:	or     eax,0x7353209c
  40eadd:	aaa    
  40eade:	fistp  WORD PTR [eax+eax*4]
  40eae1:	(bad)  
  40eae2:	hlt    
  40eae3:	push   ebp
  40eae4:	js     0x40ea77
  40eae6:	xor    DWORD PTR cs:[ecx],ebp
  40eae9:	shr    al,1
  40eaeb:	mul    BYTE PTR [ebp-0x7cb227ec]
  40eaf1:	pop    edx
  40eaf2:	push   0x10147376
  40eaf7:	fsubr  QWORD PTR [ecx-0xb]
  40eafa:	cld    
  40eafb:	das    
  40eafc:	push   esp
  40eafd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eafe:	cmp    BYTE PTR [edx],dl
  40eb00:	pop    edx
  40eb01:	push   esp
  40eb02:	adc    DWORD PTR [edx],ebx
  40eb04:	pop    ebx
  40eb05:	add    DWORD PTR [ebx+0x45],esi
  40eb08:	fisub  DWORD PTR [eax+0x69]
  40eb0b:	nop
  40eb0c:	or     al,0xea
  40eb0e:	mov    bl,0xb5
  40eb10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb11:	repnz cdq 
  40eb13:	jmp    0x40eabf
  40eb15:	test   eax,0x916939c2
  40eb1a:	pusha  
  40eb1b:	jae    0x40eb6a
  40eb1d:	xchg   ebp,eax
  40eb1e:	nop
  40eb1f:	and    eax,0x6e5992e8
  40eb24:	jge    0x40eb29
  40eb26:	cs (bad) 
  40eb28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb29:	jmp    0x7889:0x546665
  40eb30:	xor    eax,0xb102893e
  40eb35:	pop    edx
  40eb36:	call   0x5ce1:0x856c7a4d
  40eb3d:	jl     0x40eb44
  40eb3f:	stos   DWORD PTR es:[edi],eax
  40eb40:	(bad)  
  40eb41:	pusha  
  40eb42:	fist   WORD PTR [edx]
  40eb44:	enter  0x9466,0x55
  40eb48:	sub    al,bh
  40eb4a:	push   ebx
  40eb4b:	bound  ebp,QWORD PTR [edi+0x25]
  40eb4e:	jle    0x40ead5
  40eb50:	jge    0x40eb0c
  40eb52:	test   DWORD PTR [eax+0x2abe6306],esi
  40eb58:	mov    edi,0x61507c3d
  40eb5d:	arpl   WORD PTR [edx+0x7f],bx
  40eb60:	push   ss
  40eb61:	into   
  40eb62:	js     0x40eb55
  40eb64:	enter  0xc149,0x66
  40eb68:	mov    ds:0x4df47a9e,eax
  40eb6d:	in     eax,dx
  40eb6e:	mov    esi,0xa90b6f9d
  40eb73:	inc    esp
  40eb74:	shl    DWORD PTR [edx-0x13],0xdc
  40eb78:	jns    0x40eb48
  40eb7a:	and    esi,eax
  40eb7c:	xlat   BYTE PTR ds:[ebx]
  40eb7d:	add    BYTE PTR [esi-0x6a],ch
  40eb80:	adc    BYTE PTR [ecx],dl
  40eb82:	inc    edx
  40eb83:	mov    ah,0x43
  40eb85:	sbb    cl,dh
  40eb87:	cmp    BYTE PTR [ebx-0x2c],ch
  40eb8a:	push   0xdc0753df
  40eb8f:	mov    DWORD PTR [edx],eax
  40eb91:	or     DWORD PTR [edi+0x3fbc5047],eax
  40eb97:	cs pusha 
  40eb99:	retf   
  40eb9a:	mov    bh,BYTE PTR [esi+0x65]
  40eb9d:	out    dx,al
  40eb9e:	xchg   ecx,eax
  40eb9f:	call   0xfd:0xb7e60eeb
  40eba6:	sub    edi,DWORD PTR [ebx-0x6c1d5436]
  40ebac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebad:	jae    0x40eb47
  40ebaf:	or     ebx,DWORD PTR [edi]
  40ebb1:	mov    ds:0x1fa88813,al
  40ebb6:	push   eax
  40ebb7:	dec    ebp
  40ebb8:	arpl   WORD PTR [ecx],bx
  40ebba:	sahf   
  40ebbb:	repz aad 0x97
  40ebbe:	cmp    al,0x3
  40ebc0:	(bad)  [eax-0x752a08b]
  40ebc6:	push   edx
  40ebc7:	mov    bl,0x86
  40ebc9:	inc    ebx
  40ebca:	pop    edi
  40ebcb:	ja     0x40ebb6
  40ebcd:	push   0x4a
  40ebcf:	(bad)  
  40ebd1:	cmp    DWORD PTR [edx-0x365e45be],ebp
  40ebd7:	add    edx,DWORD PTR [esp+edi*4+0x32]
  40ebdb:	sub    al,0xba
  40ebdd:	push   esi
  40ebde:	dec    esp
  40ebdf:	aam    0x94
  40ebe1:	xor    eax,0xf97a52ca
  40ebe6:	clc    
  40ebe7:	fist   DWORD PTR [edx]
  40ebe9:	jp     0x40ec31
  40ebeb:	push   edi
  40ebec:	mov    edi,0xd2efebf8
  40ebf1:	xchg   ebx,eax
  40ebf2:	sub    eax,0x6f54562f
  40ebf7:	pop    ds
  40ebf8:	mov    ds:0x942e96c8,eax
  40ebfd:	aaa    
  40ebfe:	xor    eax,0x6660499a
  40ec03:	mov    edi,0x4fe57406
  40ec08:	xchg   sp,ax
  40ec0a:	mov    eax,0xe9672bcb
  40ec0f:	sbb    BYTE PTR [ebp+0x2f7962fc],ah
  40ec15:	rol    DWORD PTR [esi-0x39c7496e],1
  40ec1b:	sbb    bl,cl
  40ec1d:	mov    dh,0x46
  40ec1f:	xchg   ebp,eax
  40ec20:	sti    
  40ec21:	xchg   edi,eax
  40ec22:	push   ds
  40ec23:	sub    BYTE PTR [ebx-0x10],ch
  40ec26:	xor    DWORD PTR [edx-0x33],0x70
  40ec2a:	sbb    eax,0xd0f0bc0a
  40ec2f:	xor    al,0x14
  40ec31:	gs daa 
  40ec33:	cmc    
  40ec34:	(bad)  
  40ec35:	push   edi
  40ec36:	setge  BYTE PTR [ecx+eiz*8+0x5b3cc31d]
  40ec3e:	push   esi
  40ec3f:	add    al,0x29
  40ec41:	and    eax,0x735ac989
  40ec46:	pop    ebp
  40ec47:	push   edi
  40ec48:	adc    eax,0xdb2b5d7b
  40ec4d:	mov    ah,0xa5
  40ec4f:	iret   
  40ec50:	je     0x40ec52
  40ec52:	nop
  40ec53:	jae    0x40ec8e
  40ec55:	sub    eax,0xcce0e301
  40ec5a:	in     al,0x33
  40ec5c:	inc    ebp
  40ec5d:	ins    DWORD PTR es:[edi],dx
  40ec5e:	aam    0xe2
  40ec60:	cmp    BYTE PTR [esi+0x645035af],bl
  40ec66:	push   0x90de0d63
  40ec6b:	mov    eax,ds:0xa93cd015
  40ec70:	or     edx,DWORD PTR [ebx+0x225018e8]
  40ec76:	popf   
  40ec77:	inc    esp
  40ec78:	fsub   QWORD PTR [ebx+ebp*8]
  40ec7b:	xor    BYTE PTR [edi-0xa263ac9],ch
  40ec81:	adc    ch,ch
  40ec83:	out    dx,al
  40ec84:	pop    ss
  40ec85:	xchg   esp,eax
  40ec86:	inc    eax
  40ec87:	stos   BYTE PTR es:[edi],al
  40ec88:	dec    edx
  40ec89:	jp     0x40ecb2
  40ec8b:	mov    ds:0x9215bbc9,eax
  40ec90:	arpl   WORD PTR [edx-0x3c],si
  40ec93:	gs xchg ebp,eax
  40ec95:	and    al,0x79
  40ec97:	mov    edi,0xa160ddd8
  40ec9c:	sar    DWORD PTR [ebx],cl
  40ec9e:	retf   0x40fc
  40eca1:	fldenv [ebp-0x675e6805]
  40eca7:	into   
  40eca8:	inc    ebx
  40eca9:	loop   0x40ed1f
  40ecab:	into   
  40ecac:	mov    dh,0x71
  40ecae:	add    BYTE PTR [edx],dh
  40ecb0:	push   ecx
  40ecb1:	idiv   DWORD PTR ss:[ecx-0x55]
  40ecb5:	add    al,0xc5
  40ecb7:	stos   DWORD PTR es:[edi],eax
  40ecb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecb9:	xchg   DWORD PTR [edx-0x72c1c17],edi
  40ecbf:	leave  
  40ecc0:	adc    DWORD PTR [ebx-0x25316b1b],0xfffffff4
  40ecc7:	aad    0xf5
  40ecc9:	retf   0x3904
  40eccc:	fsub   DWORD PTR ds:0xdfac8c8a
  40ecd2:	sub    DWORD PTR ds:0x67efb1df,edi
  40ecd8:	jno    0x40ed0a
  40ecda:	scas   al,BYTE PTR es:[edi]
  40ecdb:	stc    
  40ecdc:	xor    bh,bl
  40ecde:	rcr    BYTE PTR [eax+0x574445c8],1
  40ece4:	mov    ds,WORD PTR [edx]
  40ece6:	xchg   esp,eax
  40ece7:	pop    esi
  40ece8:	mov    dh,0xc5
  40ecea:	(bad)  
  40eceb:	mov    eax,0xc636d7d2
  40ecf0:	outs   dx,DWORD PTR ds:[esi]
  40ecf1:	sar    DWORD PTR [ecx-0x74237f64],cl
  40ecf7:	(bad)  
  40ecf8:	dec    al
  40ecfa:	ins    BYTE PTR es:[edi],dx
  40ecfb:	cmp    ecx,DWORD PTR [ebp-0x4858ab7]
  40ed01:	(bad)  
  40ed03:	xchg   ecx,eax
  40ed04:	mov    bh,0xf
  40ed06:	add    ebx,esp
  40ed08:	in     eax,dx
  40ed09:	jbe    0x40ed68
  40ed0b:	adc    eax,ebx
  40ed0d:	add    ch,ah
  40ed0f:	cmc    
  40ed10:	or     eax,0xf825b262
  40ed15:	inc    esi
  40ed16:	adc    al,0xe9
  40ed18:	pop    edi
  40ed19:	xchg   esp,eax
  40ed1a:	cli    
  40ed1b:	and    dl,BYTE PTR [ecx]
  40ed1d:	(bad)  
  40ed1e:	jmp    0x6776ab0b
  40ed23:	mov    esp,0x580db28d
  40ed28:	jnp    0x40ed3d
  40ed2a:	mov    ds:0x8aa850a5,al
  40ed2f:	bound  edx,QWORD PTR [eax-0x161af416]
  40ed35:	push   eax
  40ed36:	loope  0x40ed8b
  40ed38:	lahf   
  40ed39:	cld    
  40ed3a:	scas   al,BYTE PTR es:[edi]
  40ed3b:	pop    edx
  40ed3c:	(bad)  
  40ed3d:	fidivr DWORD PTR [eax+0x7e4dd30d]
  40ed43:	pop    ecx
  40ed44:	mov    ah,0xb
  40ed46:	add    al,0xf6
  40ed48:	mov    al,ds:0x1097e1dc
  40ed4d:	jecxz  0x40ed09
  40ed4f:	test   eax,0xbb71e565
  40ed54:	push   cs
  40ed55:	jle    0x40ecf6
  40ed57:	fiadd  DWORD PTR [edi]
  40ed59:	mov    dl,0xc2
  40ed5b:	in     eax,0xa6
  40ed5d:	push   ebp
  40ed5e:	push   edi
  40ed5f:	cdq    
  40ed60:	loope  0x40ed7a
  40ed62:	aas    
  40ed63:	(bad)  
  40ed65:	pusha  
  40ed66:	inc    ecx
  40ed67:	lds    edx,FWORD PTR [eax+0x391d40d9]
  40ed6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ed6e:	(bad)
  40ed73:	fdivr  DWORD PTR [eax]
  40ed75:	in     eax,dx
  40ed76:	rcr    esi,1
  40ed78:	jns    0x40ed2c
  40ed7a:	in     eax,dx
  40ed7b:	mov    ebp,0x7cf407dd
  40ed80:	jb     0x40eda1
  40ed82:	data16 jns 0x40ed45
  40ed85:	scas   eax,DWORD PTR es:[edi]
  40ed86:	xor    DWORD PTR [ebx],esp
  40ed88:	jmp    0xab4c2432
  40ed8d:	ds ds sbb dl,0x88
  40ed92:	sub    BYTE PTR [edx-0x33],cl
  40ed95:	push   edi
  40ed96:	mul    bl
  40ed98:	ret    
  40ed99:	dec    esp
  40ed9a:	hlt    
  40ed9b:	jecxz  0x40edb5
  40ed9d:	jns    0x40ed97
  40ed9f:	in     al,0xf6
  40eda1:	pop    ebp
  40eda2:	push   ss
  40eda3:	add    BYTE PTR [edx+0x68],al
  40eda6:	mov    BYTE PTR [ebx],dh
  40eda8:	jge    0x40ed2e
  40edaa:	jb     0x40ee11
  40edac:	mov    bh,0xf6
  40edae:	and    ecx,DWORD PTR [ebp+0x2a19fa6c]
  40edb4:	stos   BYTE PTR es:[edi],al
  40edb5:	and    dl,al
  40edb7:	out    dx,al
  40edb8:	ror    DWORD PTR [edi-0x5f],0x71
  40edbc:	or     eax,0x775ccdc9
  40edc1:	into   
  40edc2:	scas   eax,DWORD PTR es:[edi]
  40edc3:	in     eax,0xe5
  40edc5:	imul   esi,DWORD PTR [ecx+esi*2+0x1bc378e8],0x3e94d63d
  40edd0:	lds    edx,FWORD PTR [esi+0x32]
  40edd3:	sub    DWORD PTR [ebp-0x2f],ebp
  40edd6:	pop    eax
  40edd7:	mov    al,ds:0x88586c32
  40eddc:	(bad)  
  40eddd:	dec    ebp
  40edde:	add    edi,DWORD PTR [esi]
  40ede0:	sbb    ecx,DWORD PTR [eax]
  40ede2:	jmp    0x2e4e:0xbd17dfb3
  40ede9:	inc    eax
  40edea:	cdq    
  40edeb:	sub    BYTE PTR [eax+0x79],ch
  40edee:	inc    esi
  40edef:	mov    dh,0x31
  40edf1:	lahf   
  40edf2:	adc    ebx,eax
  40edf4:	mov    al,ds:0xd1438f00
  40edf9:	add    eax,DWORD PTR [edi-0x6c]
  40edfc:	sub    DWORD PTR [edi],esp
  40edfe:	test   DWORD PTR [edx+0x4a],ebp
  40ee01:	xor    al,0x16
  40ee03:	mov    bl,0xf9
  40ee05:	ja     0x40ed9e
  40ee07:	js     0x40ee34
  40ee09:	mov    WORD PTR [ebp+0x1dc5a9d0],?
  40ee0f:	xchg   edx,eax
  40ee10:	ret    
  40ee11:	mov    WORD PTR [ecx-0x5],es
  40ee14:	ja     0x40ee5a
  40ee16:	clc    
  40ee17:	mov    eax,ds:0x31316668
  40ee1c:	xor    DWORD PTR [edi+0xb7e1677],edi
  40ee22:	mov    edx,0xb177d663
  40ee27:	stc    
  40ee28:	and    eax,0x6d701212
  40ee2d:	mov    ebx,0xf63a1f62
  40ee32:	arpl   WORD PTR [ebp+0x363ddfd4],dx
  40ee38:	inc    ebx
  40ee39:	hlt    
  40ee3a:	cmp    eax,0x10a2ff83
  40ee3f:	cmp    DWORD PTR [eax],0xffffff84
  40ee42:	call   0x986da59d
  40ee47:	into   
  40ee48:	cld    
  40ee49:	repz cld 
  40ee4b:	jg     0x40eecb
  40ee4d:	rcr    eax,cl
  40ee4f:	ins    BYTE PTR es:[edi],dx
  40ee50:	shl    DWORD PTR [esi-0x70ac48cf],1
  40ee56:	test   bh,ch
  40ee58:	lahf   
  40ee59:	das    
  40ee5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee5b:	pop    eax
  40ee5c:	jb     0x40ede8
  40ee5e:	outs   dx,DWORD PTR ds:[esi]
  40ee5f:	sbb    al,0xac
  40ee61:	jp     0x40ee98
  40ee63:	cmp    cl,BYTE PTR [edx-0x38]
  40ee66:	sub    dl,BYTE PTR [eax+0x669f7467]
  40ee6c:	dec    eax
  40ee6d:	inc    edx
  40ee6e:	ret    0xbd4c
  40ee71:	adc    eax,0xe056985b
  40ee76:	repz popf 
  40ee78:	mov    bh,0x7d
  40ee7a:	mov    dh,BYTE PTR [ebp+0x4c]
  40ee7d:	or     BYTE PTR [eax+0x33],0x3
  40ee81:	arpl   cx,dx
  40ee83:	xchg   esp,eax
  40ee84:	and    DWORD PTR [esi+0x5a],ecx
  40ee87:	inc    ebp
  40ee88:	int3   
  40ee89:	xor    eax,0x10e38ede
  40ee8e:	or     ecx,esp
  40ee90:	cmp    eax,0xaaa22755
  40ee95:	scas   al,BYTE PTR es:[edi]
  40ee96:	mov    edi,0x2aae6b06
  40ee9b:	push   edx
  40ee9c:	inc    edx
  40ee9d:	aas    
  40ee9e:	xchg   ebx,eax
  40ee9f:	add    DWORD PTR [eax+edi*8],ebx
  40eea2:	arpl   WORD PTR [edx-0x4d286f56],cx
  40eea8:	add    BYTE PTR [ebx],ch
  40eeaa:	mov    dh,0xd6
  40eeac:	sti    
  40eead:	stos   DWORD PTR es:[edi],eax
  40eeae:	xor    dh,BYTE PTR [esi+esi*8+0x25]
  40eeb2:	loope  0x40ef27
  40eeb4:	psubsw mm2,QWORD PTR [ecx+0x5664c523]
  40eebb:	adc    cl,BYTE PTR [ecx+0x34]
  40eebe:	dec    esp
  40eebf:	pop    ecx
  40eec0:	and    esp,eax
  40eec2:	sahf   
  40eec3:	popa   
  40eec4:	adc    eax,DWORD PTR [esi+0x58]
  40eec7:	add    edi,esi
  40eec9:	jp     0x40ef3b
  40eecb:	loopne 0x40eec8
  40eecd:	xor    bl,BYTE PTR [eax+0x491ac7a4]
  40eed3:	dec    ebx
  40eed4:	pop    es
  40eed5:	in     eax,0x1c
  40eed7:	dec    ebx
  40eed8:	(bad)  
  40eeda:	and    al,0xfb
  40eedc:	hlt    
  40eedd:	mov    ecx,0xa7369391
  40eee2:	sub    BYTE PTR [ecx+0x7023eb36],cl
  40eee8:	ds (bad) 
  40eeea:	and    DWORD PTR [eax-0x80],edi
  40eeed:	fsub   QWORD PTR [edx*2+0x15e64c06]
  40eef4:	pop    edi
  40eef5:	imul   edx,DWORD PTR [edi+0x42da204a],0x43
  40eefc:	in     al,0x5a
  40eefe:	dec    esi
  40eeff:	xchg   ebp,eax
  40ef00:	out    0x30,al
  40ef02:	xchg   BYTE PTR [edx-0x59433c8f],ah
  40ef08:	push   esp
  40ef09:	mov    al,ds:0xf1ce27da
  40ef0e:	leave  
  40ef0f:	retf   0x3c0d
  40ef12:	outs   dx,DWORD PTR ds:[esi]
  40ef13:	sub    di,dx
  40ef16:	rcr    BYTE PTR [eax+0x2a5630ef],1
  40ef1c:	sbb    ebx,DWORD PTR [ebp+0x77ef43d1]
  40ef22:	les    ebx,FWORD PTR [edx]
  40ef24:	xchg   esp,eax
  40ef25:	add    cl,0x99
  40ef28:	es ins DWORD PTR es:[edi],dx
  40ef2a:	lea    ecx,[edi+0x1c]
  40ef2d:	adc    bh,0xe1
  40ef30:	jle    0x40ef86
  40ef32:	neg    DWORD PTR [eax+edi*4+0x4a]
  40ef36:	dec    ecx
  40ef37:	jne    0x40ef5f
  40ef39:	dec    ecx
  40ef3a:	and    BYTE PTR [edi],ah
  40ef3c:	fld    DWORD PTR [edi+0x16]
  40ef3f:	pop    ss
  40ef40:	scas   al,BYTE PTR es:[edi]
  40ef41:	push   ebp
  40ef42:	ja     0x40ef6c
  40ef44:	push   ss
  40ef45:	js     0x40ef99
  40ef47:	sub    edi,eax
  40ef49:	xchg   edi,eax
  40ef4a:	sbb    DWORD PTR [ebp+0x620245ee],ebx
  40ef50:	or     al,0xe2
  40ef52:	push   es
  40ef53:	inc    esp
  40ef54:	push   esp
  40ef55:	mov    eax,ds:0x1d9534a0
  40ef5a:	sbb    al,0x82
  40ef5d:	aam    0x37
  40ef5f:	nop
  40ef60:	xchg   ebp,eax
  40ef61:	loop   0x40ef97
  40ef63:	xchg   ecx,eax
  40ef64:	lods   eax,DWORD PTR ds:[esi]
  40ef65:	adc    cl,bh
  40ef67:	mov    DWORD PTR [ebx-0x76],esp
  40ef6a:	jp     0x40ef54
  40ef6c:	enter  0xc14a,0x12
  40ef70:	fwait
  40ef71:	sub    eax,DWORD PTR [esi+0x35]
  40ef74:	fcomp  DWORD PTR [edi+0x4a]
  40ef77:	movups xmm5,xmm2
  40ef7a:	dec    ebp
  40ef7b:	icebp  
  40ef7c:	aam    0xa5
  40ef7e:	gs scas eax,DWORD PTR es:[edi]
  40ef80:	add    al,0x84
  40ef82:	enter  0x3f58,0xb3
  40ef86:	jle    0x40ef7a
  40ef88:	stos   DWORD PTR es:[edi],eax
  40ef89:	adc    BYTE PTR [edi+0x30fc4e2a],al
  40ef8f:	mov    bl,0xeb
  40ef91:	out    0xc3,eax
  40ef93:	pop    ds
  40ef94:	xor    eax,0xe9e95e41
  40ef99:	sbb    eax,0x2e9aec2
  40ef9e:	jae    0x40f01f
  40efa0:	aaa    
  40efa1:	pop    edi
  40efa2:	scas   eax,DWORD PTR es:[edi]
  40efa3:	jnp    0x40effd
  40efa5:	sbb    dh,BYTE PTR [esi+0x6a]
  40efa8:	jno    0x40ef57
  40efaa:	and    al,0xf
  40efac:	mov    cs,WORD PTR [ecx+0x6b30f2e6]
  40efb2:	mov    ebx,0x9c4e9fc2
  40efb7:	push   edx
  40efb8:	fsin   
  40efba:	addr16 mov edx,0x2b5e73be
  40efc0:	rcl    al,0xc3
  40efc3:	inc    ebp
  40efc4:	(bad)  [esi-0x79]
  40efc7:	inc    eax
  40efc8:	sub    DWORD PTR [edi],0x9
  40efcb:	jae    0x40eff7
  40efcd:	adc    eax,0x361b889f
  40efd2:	popa   
  40efd3:	jmp    0x4bf:0xfa1634e6
  40efda:	stc    
  40efdb:	repnz xor eax,0x859c1a39
  40efe1:	xor    eax,0x9c1dde89
  40efe6:	ja     0x40f046
  40efe8:	push   ds
  40efe9:	xchg   esp,eax
  40efea:	shl    ecx,0x4a
  40efed:	arpl   WORD PTR [esp+esi*8+0x5],di
  40eff1:	jle    0x40efb8
  40eff3:	pushf  
  40eff4:	push   ds
  40eff5:	aam    0x3d
  40eff7:	test   DWORD PTR [edx+0x6a],esp
  40effa:	sti    
  40effb:	xchg   DWORD PTR [esi+0x6407d994],edi
  40f001:	fucom  st(4)
  40f003:	add    al,0x3a
  40f005:	loope  0x40ef9b
  40f007:	mov    WORD PTR [esi],?
  40f009:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f00a:	les    ecx,FWORD PTR [esi-0x68]
  40f00d:	jmp    0x40f078
  40f00f:	push   ebp
  40f010:	push   ebp
  40f011:	addr16 ret 
  40f013:	inc    edi
  40f014:	push   edi
  40f015:	outs   dx,DWORD PTR ds:[esi]
  40f016:	xchg   ebp,eax
  40f017:	iret   
  40f018:	inc    edi
  40f019:	sub    BYTE PTR [edi+ebp*4],cl
  40f01c:	daa    
  40f01d:	mov    esp,0x6919fe3d
  40f022:	in     eax,dx
  40f023:	and    al,0xf1
  40f025:	pop    es
  40f026:	or     al,0x18
  40f028:	mov    WORD PTR [esp+edx*8+0x76579125],fs
  40f02f:	xchg   BYTE PTR [edx],ch
  40f031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f032:	test   al,0x1f
  40f034:	out    dx,eax
  40f035:	int3   
  40f036:	or     dh,BYTE PTR [edi-0x1d]
  40f039:	dec    edx
  40f03a:	retf   0xcee
  40f03d:	jae    0x40f051
  40f03f:	les    esp,FWORD PTR [esi+0x7eda9a64]
  40f045:	adc    al,0x57
  40f047:	jmp    0x40f081
  40f049:	pop    eax
  40f04a:	dec    esp
  40f04b:	cld    
  40f04c:	push   ds
  40f04d:	or     al,cl
  40f04f:	mov    esp,0x558973d8
  40f054:	fistp  QWORD PTR [eax-0x24e52a0d]
  40f05a:	jae    0x40f0b1
  40f05c:	xlat   BYTE PTR ds:[ebx]
  40f05d:	mov    dh,0x29
  40f05f:	xor    ebp,edx
  40f061:	xchg   ebx,eax
  40f062:	xor    ebp,DWORD PTR [esi-0x60c80c9b]
  40f068:	or     ecx,DWORD PTR [ecx+0x44a786dc]
  40f06e:	adc    bh,bl
  40f070:	repnz adc eax,0x33e0d798
  40f076:	mov    WORD PTR [edx-0xc],ds
  40f079:	ret    
  40f07a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f07b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f07c:	or     BYTE PTR fs:[ebx-0x65079334],al
  40f083:	adc    BYTE PTR ds:0xaab593bf,cl
  40f089:	mov    ebp,DWORD PTR [edx-0x61]
  40f08c:	fild   WORD PTR [esi-0x394fcda1]
  40f092:	pop    ss
  40f093:	cdq    
  40f094:	push   0x5a
  40f096:	adc    DWORD PTR [esi+ebp*4],ebx
  40f099:	and    DWORD PTR [ebp+0x1cb3f956],ebp
  40f09f:	mov    ecx,0xad21e6d6
  40f0a4:	fsub   QWORD PTR [ecx+0x6a]
  40f0a7:	inc    ecx
  40f0a8:	inc    ebp
  40f0a9:	mov    cl,0xc8
  40f0ab:	imul   ebx,DWORD PTR [ebp+edi*1-0x6f865e4d],0xffffffcf
  40f0b3:	mov    ds:0x78dc6032,eax
  40f0b8:	inc    ebp
  40f0b9:	push   ebp
  40f0ba:	out    dx,eax
  40f0bb:	mov    bl,0xc4
  40f0bd:	ins    DWORD PTR es:[edi],dx
  40f0be:	pop    DWORD PTR [edi]
  40f0c0:	int    0x38
  40f0c2:	test   DWORD PTR [edi],ecx
  40f0c4:	push   esi
  40f0c5:	sbb    al,0xd6
  40f0c7:	mov    dh,0x6b
  40f0c9:	std    
  40f0ca:	sbb    ah,0x76
  40f0cd:	in     al,dx
  40f0ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0cf:	inc    esp
  40f0d0:	cmp    eax,0x7b403f3d
  40f0d5:	ficomp DWORD PTR [esi]
  40f0d7:	mov    ch,0xc3
  40f0d9:	adc    eax,0xc05ac63e
  40f0de:	and    dl,BYTE PTR [ebp+0x54454796]
  40f0e4:	retf   
  40f0e5:	push   ecx
  40f0e6:	mov    WORD PTR [ebp+0x4ffa0875],fs
  40f0ec:	in     al,0x2
  40f0ee:	or     ebx,DWORD PTR [ecx-0x8]
  40f0f1:	hlt    
  40f0f2:	ret    0xbc08
  40f0f5:	es xchg edi,eax
  40f0f7:	push   0xe0b03414
  40f0fc:	inc    edi
  40f0fd:	imul   edx,ebp,0xd9a825f3
  40f103:	mov    edx,0x5619455a
  40f108:	sbb    DWORD PTR [eax+0xe],ebp
  40f10b:	and    esp,DWORD PTR [edi]
  40f10d:	sub    eax,0x88654bda
  40f112:	fstp   DWORD PTR [eax-0x39]
  40f115:	fdiv   st,st(6)
  40f117:	adc    eax,0x137d3680
  40f11c:	add    eax,0x688f6382
  40f121:	xor    DWORD PTR [ebx+0x3ace1449],esi
  40f127:	xor    eax,0xcc0ad88f
  40f12c:	mov    bl,0xf3
  40f12e:	or     dh,al
  40f130:	in     al,dx
  40f131:	ficom  WORD PTR [esi-0x3]
  40f134:	inc    ecx
  40f135:	hlt    
  40f136:	pop    es
  40f137:	or     BYTE PTR [ecx-0x4d],0xbd
  40f13b:	xchg   esp,eax
  40f13c:	inc    esp
  40f13d:	dec    edi
  40f13e:	stc    
  40f13f:	pop    es
  40f140:	adc    edi,esi
  40f142:	sbb    eax,0xd1f80cb8
  40f147:	pop    ds
  40f148:	int3   
  40f149:	adc    ebp,ecx
  40f14b:	mov    bl,0x9f
  40f14d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f14e:	pop    esi
  40f14f:	or     edx,edi
  40f151:	in     al,0xd
  40f153:	loope  0x40f13d
  40f155:	jo     0x40f145
  40f157:	aas    
  40f158:	push   edx
  40f159:	nop
  40f15a:	ss mov cl,0xe5
  40f15d:	inc    edi
  40f15e:	pop    ecx
  40f15f:	push   0xb2520fe1
  40f164:	(bad)  
  40f165:	xlat   BYTE PTR ds:[ebx]
  40f166:	cs mov ch,0x80
  40f169:	or     BYTE PTR [esi-0x78],ch
  40f16c:	cmp    al,0xbf
  40f16e:	popa   
  40f16f:	psllq  mm3,QWORD PTR [ecx-0xd]
  40f173:	(bad)  
  40f174:	pop    ebx
  40f175:	dec    esi
  40f176:	int    0xc1
  40f178:	push   0xffffff9d
  40f17a:	int3   
  40f17b:	add    dh,ah
  40f17d:	pop    edx
  40f17e:	inc    ebx
  40f17f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f180:	lods   eax,DWORD PTR ds:[esi]
  40f181:	test   BYTE PTR [edx],al
  40f183:	push   esp
  40f184:	jbe    0x40f1a3
  40f186:	dec    ebp
  40f187:	scas   eax,DWORD PTR es:[edi]
  40f188:	addr16 add ebp,0x9790d978
  40f18f:	dec    edi
  40f190:	loope  0x40f177
  40f192:	out    0x71,eax
  40f194:	test   al,0x20
  40f196:	jae    0x40f187
  40f198:	push   eax
  40f199:	enter  0x188c,0x39
  40f19d:	cmp    esp,esp
  40f19f:	inc    edi
  40f1a0:	cdq    
  40f1a1:	fcomi  st,st(0)
  40f1a3:	add    DWORD PTR [ebx+0x9],0xffffffa0
  40f1a7:	pusha  
  40f1a8:	cmp    DWORD PTR cs:[esi],esp
  40f1ab:	pop    eax
  40f1ac:	retf   
  40f1ad:	ds out dx,eax
  40f1af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f1b0:	xor    DWORD PTR [ebp+0x401d60ea],edi
  40f1b6:	aaa    
  40f1b7:	std    
  40f1b8:	repz lahf 
  40f1ba:	shl    DWORD PTR [eax],cl
  40f1bc:	jnp    0x40f155
  40f1be:	and    DWORD PTR [esi+0x5a],eax
  40f1c1:	or     BYTE PTR [ebx+edi*4-0x573dde62],0xb0
  40f1c9:	les    ebx,FWORD PTR [edx-0x13]
  40f1cc:	hlt    
  40f1cd:	xlat   BYTE PTR ds:[ebx]
  40f1ce:	jo     0x40f249
  40f1d0:	xor    BYTE PTR [ecx-0x26f0dc8e],dl
  40f1d6:	call   0x11ba16e8
  40f1db:	ret    
  40f1dc:	pop    ds
  40f1dd:	jbe    0x40f211
  40f1df:	fstp   DWORD PTR [ebx+ebx*8+0x5adb6b2b]
  40f1e6:	sbb    BYTE PTR [edx+0x5f],0xd7
  40f1ea:	hlt    
  40f1eb:	ja     0x40f19d
  40f1ed:	ss pop ds
  40f1ef:	mov    eax,ds:0x47006ef1
  40f1f4:	(bad)  
  40f1f5:	push   cs
  40f1f6:	retf   0x2621
  40f1f9:	stos   DWORD PTR es:[edi],eax
  40f1fa:	jbe    0x40f26f
  40f1fc:	add    cl,BYTE PTR [ebx+0x60cc9d73]
  40f202:	mov    esp,0x8dd170b0
  40f207:	cdq    
  40f208:	or     ah,BYTE PTR ds:0x499c338d
  40f20e:	sbb    al,0x2
  40f211:	sub    DWORD PTR [eax+edx*1+0x2d],0x2f
  40f216:	fucomp st(0)
  40f218:	jbe    0x40f1db
  40f21a:	jl     0x40f1bd
  40f21c:	mov    cs:0x8fc40ddb,al
  40f222:	jle    0x40f23f
  40f224:	and    al,0xed
  40f226:	push   ebx
  40f227:	sysenter 
  40f229:	lock das 
  40f22b:	int    0xa6
  40f22d:	and    bl,0xa8
  40f230:	test   DWORD PTR [esi+0x2a],esi
  40f233:	scas   eax,DWORD PTR es:[edi]
  40f234:	call   0x9cb1:0x5e9dfaae
  40f23b:	repnz and eax,0xf7d177f9
  40f241:	mov    esi,0x72d06f7f
  40f246:	loopne 0x40f2af
  40f248:	pushf  
  40f249:	pop    eax
  40f24a:	jmp    0x40f274
  40f24c:	mov    dh,0xe5
  40f24e:	dec    eax
  40f24f:	or     ecx,edx
  40f251:	and    al,0xc0
  40f253:	int3   
  40f254:	pop    ebp
  40f255:	cmp    bl,dl
  40f257:	mov    eax,0xb5884576
  40f25c:	repz xchg esi,eax
  40f25e:	fcmovnu st,st(4)
  40f260:	lahf   
  40f261:	cmp    DWORD PTR [edi],ebp
  40f263:	mov    edx,0x8d79f562
  40f268:	sbb    edx,edi
  40f26a:	or     eax,edi
  40f26c:	mov    ebx,0xc74b9104
  40f271:	out    0xe7,al
  40f273:	push   esp
  40f274:	pmullw mm3,QWORD PTR [edx-0x3]
  40f278:	ficom  WORD PTR [ebp-0x67e1977d]
  40f27e:	or     ebp,DWORD PTR [esi+0x349c27d3]
  40f284:	mov    bh,0x2a
  40f286:	push   0xffffffec
  40f288:	and    al,0xf1
  40f28a:	out    0xaf,eax
  40f28c:	mov    esi,edi
  40f28e:	jno    0x40f287
  40f290:	add    al,0x3a
  40f292:	add    BYTE PTR [edi],cl
  40f294:	mov    al,ds:0x912f034e
  40f299:	dec    ebx
  40f29a:	(bad)  
  40f29b:	push   esi
  40f29c:	jb     0x40f25a
  40f29e:	mov    ebp,0xde085359
  40f2a3:	cmp    DWORD PTR ds:0xfac586d2,edi
  40f2a9:	xchg   BYTE PTR [ebx],dh
  40f2ab:	mov    al,0x4d
  40f2ad:	sbb    eax,0x264a4ff0
  40f2b2:	loop   0x40f2d9
  40f2b4:	mov    bh,0xf2
  40f2b6:	inc    ebx
  40f2b7:	mov    ecx,0xd8cb374a
  40f2bc:	pop    eax
  40f2bd:	inc    eax
  40f2be:	cmp    bh,BYTE PTR [esi-0x76]
  40f2c1:	(bad)  [eax-0x4]
  40f2c4:	xor    al,0x69
  40f2c6:	cdq    
  40f2c7:	ret    
  40f2c8:	rcl    DWORD PTR [ebx+ebx*2],1
  40f2cb:	sub    BYTE PTR [edi],ah
  40f2cd:	jge    0x40f2c2
  40f2cf:	mov    eax,0x657319f1
  40f2d4:	jne    0x40f25e
  40f2d6:	jecxz  0x40f2ce
  40f2d8:	ins    BYTE PTR es:[edi],dx
  40f2d9:	jl     0x40f340
  40f2db:	test   eax,0xc177974c
  40f2e0:	ret    0x9f5f
  40f2e3:	js     0x40f289
  40f2e5:	mov    eax,0x9968596b
  40f2ea:	out    0xc1,al
  40f2ec:	ja     0x40f2d6
  40f2ee:	xor    ebp,DWORD PTR ss:[esi+ecx*2-0x14]
  40f2f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2f4:	int    0xa7
  40f2f6:	sub    BYTE PTR [edi+eiz*2],dh
  40f2f9:	mov    dl,0x6d
  40f2fb:	ss inc esi
  40f2fd:	xchg   esi,eax
  40f2fe:	pop    esp
  40f2ff:	add    eax,0x76d13427
  40f304:	mov    dh,0x7b
  40f306:	xor    eax,0x807e2ec1
  40f30b:	jae    0x40f2c8
  40f30d:	mov    ecx,0x716f1a78
  40f312:	inc    esp
  40f313:	jge    0x40f2d7
  40f315:	test   eax,0x4a563d1
  40f31a:	popf   
  40f31b:	xor    BYTE PTR [edx],ch
  40f31d:	xchg   ebp,eax
  40f31e:	arpl   WORD PTR [edi+esi*1+0x27],si
  40f322:	dec    eax
  40f323:	inc    eax
  40f324:	push   edi
  40f325:	mov    cl,BYTE PTR [eax+esi*8]
  40f328:	adc    eax,0x95ce8438
  40f32d:	sbb    ecx,DWORD PTR [eax]
  40f32f:	lods   eax,DWORD PTR ds:[esi]
  40f330:	inc    ebp
  40f331:	popf   
  40f332:	clc    
  40f333:	pop    ds
  40f334:	int    0x66
  40f336:	mov    esi,0x2af31a59
  40f33b:	sti    
  40f33c:	dec    esp
  40f33d:	sub    dh,BYTE PTR [esp+edi*1-0x636b5003]
  40f344:	mov    WORD PTR [edi],cs
  40f346:	push   edi
  40f347:	lods   al,BYTE PTR ds:[esi]
  40f348:	jmp    0x34f8e15a
  40f34d:	fnstsw WORD PTR [eax]
  40f34f:	daa    
  40f350:	xor    DWORD PTR [ecx],eax
  40f352:	les    edx,FWORD PTR [ebx+0x28b86123]
  40f358:	jno    0x40f357
  40f35a:	lahf   
  40f35b:	xchg   esp,eax
  40f35c:	sti    
  40f35d:	and    BYTE PTR [ebx+0x46],ah
  40f360:	ins    DWORD PTR es:[edi],dx
  40f361:	mov    ds:0xd86d78b9,al
  40f366:	retf   
  40f367:	mov    edx,0x25ada22c
  40f36c:	into   
  40f36d:	adc    BYTE PTR [eax+0x7a5433bd],ch
  40f373:	xor    edi,DWORD PTR [ebp+edi*8+0x52]
  40f377:	xor    al,0x32
  40f379:	lods   al,BYTE PTR ds:[esi]
  40f37a:	adc    dl,BYTE PTR [edi+edi*4-0x15]
  40f37e:	pop    eax
  40f37f:	dec    eax
  40f380:	or     eax,0x35706024
  40f385:	cs hlt 
  40f387:	or     eax,0xb4287b81
  40f38c:	add    eax,0x93b031e7
  40f391:	jne    0x40f3d7
  40f393:	je     0x40f3ef
  40f395:	(bad)  
  40f396:	out    0xcd,al
  40f398:	outs   dx,BYTE PTR ds:[esi]
  40f399:	sub    ch,dl
  40f39b:	jne    0x40f330
  40f39d:	data16 fs out dx,al
  40f3a0:	pop    esi
  40f3a1:	(bad)  
  40f3a2:	loope  0x40f397
  40f3a4:	call   0x8496c804
  40f3a9:	retf   
  40f3aa:	ror    ecx,1
  40f3ac:	mov    eax,0xe5e8671c
  40f3b1:	mov    ds:0x881a42b5,eax
  40f3b6:	repnz stc 
  40f3b8:	cli    
  40f3b9:	sub    DWORD PTR [esi+0x7cbf19d9],edi
  40f3bf:	inc    esp
  40f3c0:	mov    bl,0xef
  40f3c2:	out    0x44,al
  40f3c4:	add    bl,BYTE PTR [eax+0x1d56fe0e]
  40f3ca:	mov    ds:0xde5fc5dc,al
  40f3cf:	cmp    eax,0x9eb12497
  40f3d4:	push   ecx
  40f3d5:	es sub al,0xd0
  40f3d8:	in     eax,0x55
  40f3da:	stos   DWORD PTR es:[edi],eax
  40f3db:	out    0xec,eax
  40f3dd:	in     eax,0x1
  40f3df:	call   0x19bd04bc
  40f3e4:	std    
  40f3e5:	adc    al,0x87
  40f3e7:	pop    es
  40f3e8:	ficom  DWORD PTR [edi+edx*8]
  40f3eb:	js     0x40f458
  40f3ed:	mov    ebp,0x8dfc538c
  40f3f2:	and    al,0x3f
  40f3f4:	arpl   dx,si
  40f3f6:	pop    esi
  40f3f7:	push   esi
  40f3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3f9:	je     0x40f38b
  40f3fb:	push   cs
  40f3fc:	or     esi,edi
  40f3fe:	pop    esp
  40f3ff:	lods   eax,DWORD PTR ds:[esi]
  40f400:	inc    eax
  40f401:	pop    ecx
  40f402:	(bad)  
  40f403:	sti    
  40f404:	pop    ds
  40f405:	loop   0x40f40a
  40f407:	call   0x5a61732d
  40f40c:	sub    BYTE PTR [edx-0x72],bl
  40f40f:	mov    dh,0xb6
  40f411:	push   ds
  40f412:	xor    al,0xe
  40f414:	stos   BYTE PTR es:[edi],al
  40f415:	js     0x40f48b
  40f417:	push   edi
  40f418:	or     DWORD PTR [eax+0x1],ebx
  40f41b:	pop    ebx
  40f41c:	(bad)  
  40f41d:	out    dx,al
  40f41e:	loopne 0x40f3ce
  40f420:	push   esp
  40f421:	cmp    eax,0x8189b69e
  40f426:	sbb    eax,0x99465094
  40f42b:	loope  0x40f432
  40f42d:	add    ecx,DWORD PTR [esi-0x56]
  40f430:	icebp  
  40f431:	dec    ebx
  40f432:	inc    eax
  40f433:	out    0x73,al
  40f435:	inc    edi
  40f436:	mov    ebx,0x3959b15
  40f43b:	mov    eax,0x949dc03
  40f440:	push   ecx
  40f441:	lock mov dh,0x5f
  40f444:	sub    BYTE PTR [ebp-0x64309cd7],cl
  40f44a:	sahf   
  40f44b:	(bad)  
  40f44c:	sbb    DWORD PTR [ebp+eax*2-0x61cb7dd4],edx
  40f453:	sub    edi,edi
  40f455:	int    0xac
  40f457:	mov    ds:0xb90f7bb6,al
  40f45c:	fimul  WORD PTR [edi-0x4f]
  40f45f:	push   eax
  40f460:	rol    esi,1
  40f462:	adc    esp,eax
  40f464:	adc    BYTE PTR [ebx-0x7f],ah
  40f467:	xchg   ebp,ebp
  40f469:	inc    esi
  40f46a:	sbb    DWORD PTR [eax+0x6457262b],0xfffffff1
  40f471:	lods   eax,DWORD PTR ds:[esi]
  40f472:	mul    esi
  40f474:	(bad)  
  40f475:	call   0x3486346b
  40f47a:	jecxz  0x40f4e1
  40f47c:	mov    ebx,0x39fb4897
  40f481:	mov    bh,0x18
  40f483:	xor    bl,BYTE PTR [ebx-0x70]
  40f486:	test   al,0xfe
  40f488:	ret    
  40f489:	jg     0x40f41e
  40f48b:	jo     0x40f4de
  40f48d:	mov    al,ds:0xc21e29be
  40f492:	mov    edi,0x831ebb48
  40f497:	mov    ds:0xe8933327,eax
  40f49c:	xchg   BYTE PTR [ecx+0x30140c69],bl
  40f4a2:	sbb    edx,0xef1e9d93
  40f4a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f4a9:	jge    0x40f465
  40f4ab:	cwde   
  40f4ac:	mov    al,0xdc
  40f4ae:	or     DWORD PTR [edx-0x6b],edx
  40f4b1:	mov    ebx,0x4b74532f
  40f4b6:	xor    eax,0x280fd85f
  40f4bb:	push   ds
  40f4bc:	lds    ecx,FWORD PTR [ecx+eax*1+0x34d67ce8]
  40f4c3:	sub    DWORD PTR [edi+0x13],esp
  40f4c6:	in     al,dx
  40f4c7:	xchg   ebp,eax
  40f4c8:	xchg   esi,eax
  40f4c9:	or     bh,cl
  40f4cb:	inc    ebx
  40f4cc:	or     BYTE PTR [edx+0x79118993],al
  40f4d2:	adc    eax,DWORD PTR [esi+0x1883315b]
  40f4d8:	cmp    eax,0x7830aa09
  40f4dd:	lods   al,BYTE PTR ds:[esi]
  40f4de:	arpl   di,si
  40f4e0:	cmp    DWORD PTR [ebx+0x7a3d5a70],0x334c95bf
  40f4ea:	xor    al,0xb6
  40f4ec:	mov    ?,WORD PTR [eax-0x17]
  40f4ef:	clc    
  40f4f0:	or     BYTE PTR [ecx],dh
  40f4f2:	call   0xcac27ff3
  40f4f7:	sbb    BYTE PTR [ebp+0x2d8ca2ba],0x38
  40f4fe:	cs push 0xfffffff6
  40f501:	fsub   QWORD PTR [eax-0x56]
  40f504:	xchg   ebp,eax
  40f505:	popf   
  40f506:	inc    esp
  40f507:	cmp    BYTE PTR fs:[esi-0xc],bh
  40f50b:	xor    al,0xd7
  40f50d:	xor    ah,bh
  40f50f:	cmp    al,0xe
  40f511:	retf   
  40f512:	int    0x1b
  40f514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f515:	xchg   BYTE PTR [edx],bh
  40f517:	mov    ds:0x5ba5cf9f,al
  40f51c:	mov    al,ds:0x5b0cf70b
  40f521:	cwde   
  40f522:	xchg   esi,eax
  40f523:	fstp   QWORD PTR [ebx-0x4d]
  40f526:	pop    ss
  40f527:	inc    eax
  40f528:	shl    DWORD PTR [ebx],0xb
  40f52b:	sbb    DWORD PTR [eax],esp
  40f52d:	cmovnp ebp,DWORD PTR [esi+ebx*2]
  40f531:	lea    ebp,[eax-0x38a76124]
  40f537:	jo     0x40f500
  40f539:	inc    esi
  40f53a:	and    BYTE PTR [edi],0x88
  40f53d:	cmc    
  40f53e:	jo     0x40f572
  40f540:	cmp    esp,DWORD PTR [edi+0x1b]
  40f543:	je     0x40f55e
  40f545:	in     al,dx
  40f546:	fld    TBYTE PTR [ebx+0x6f]
  40f549:	sar    DWORD PTR [ecx],0x3a
  40f54c:	imul   ebp,DWORD PTR [edx+0x9],0x5c1b6639
  40f553:	pop    ebx
  40f554:	sub    dh,al
  40f556:	imul   esp,DWORD PTR [edi-0x5c9aefd3],0x99dd6a46
  40f560:	and    eax,0xdf27450f
  40f565:	pushf  
  40f566:	xchg   edi,eax
  40f567:	xor    al,0xca
  40f569:	mov    eax,ds:0xd0c14500
  40f56e:	call   0x980ad6b3
  40f573:	mov    dh,0xae
  40f575:	cdq    
  40f576:	sub    BYTE PTR [edx+0x5c592883],ah
  40f57c:	and    al,0x73
  40f57e:	sub    bl,BYTE PTR [ecx]
  40f580:	out    dx,al
  40f581:	or     eax,0xb32aae5
  40f586:	repnz repnz sub esp,eax
  40f58a:	shl    DWORD PTR [ebx-0x1792bca7],1
  40f590:	pop    edi
  40f591:	or     BYTE PTR [ecx+0x55],bl
  40f594:	xor    ecx,ecx
  40f596:	xor    eax,0x94081963
  40f59b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f59c:	push   cs
  40f59d:	sbb    al,0x97
  40f59f:	and    ecx,DWORD PTR [ebp-0x4b687286]
  40f5a5:	push   edi
  40f5a6:	test   ecx,esp
  40f5a8:	jne    0x40f581
  40f5aa:	sub    BYTE PTR [ebx-0x2ae64e13],cl
  40f5b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f5b1:	inc    esi
  40f5b2:	inc    edx
  40f5b3:	pop    esi
  40f5b4:	inc    esp
  40f5b5:	cmp    al,0xb4
  40f5b7:	or     BYTE PTR [eax+0x7ee504a],ah
  40f5bd:	call   0x464d:0x7d22fbf
  40f5c4:	clc    
  40f5c5:	inc    eax
  40f5c6:	jle    0x40f552
  40f5c8:	pop    edx
  40f5c9:	mov    ah,0xa5
  40f5cb:	daa    
  40f5cc:	imul   cl
  40f5ce:	xchg   edx,eax
  40f5cf:	mov    cl,0x6a
  40f5d1:	sbb    DWORD PTR [ebp-0x7d8b0cf5],esp
  40f5d7:	das    
  40f5d8:	cld    
  40f5d9:	inc    edx
  40f5da:	sbb    ebp,esi
  40f5dc:	out    0x32,eax
  40f5de:	dec    edx
  40f5df:	xor    BYTE PTR [ebp+eiz*1-0x3],bh
  40f5e3:	in     eax,dx
  40f5e4:	mov    DWORD PTR [ebp-0x30f608a9],edx
  40f5ea:	push   ebx
  40f5eb:	lods   eax,DWORD PTR ds:[esi]
  40f5ec:	cmp    BYTE PTR [edi+0x348a24e3],0xf7
  40f5f3:	int3   
  40f5f4:	stos   DWORD PTR es:[edi],eax
  40f5f5:	sub    ecx,DWORD PTR cs:[edi+ecx*2]
  40f5f9:	sbb    al,cl
  40f5fb:	fdiv   st(7),st
  40f5fd:	and    BYTE PTR [ebx-0x46],0x5c
  40f601:	rcl    BYTE PTR ds:0xde7f280c,cl
  40f607:	or     ebx,DWORD PTR [eax-0x72]
  40f60a:	repz pusha 
  40f60c:	sub    BYTE PTR [ebp+0x79e9c4b1],ch
  40f612:	push   esi
  40f613:	gs pusha 
  40f615:	test   al,0x7b
  40f617:	in     al,dx
  40f618:	mov    ch,0x9b
  40f61a:	loop   0x40f5a9
  40f61c:	fld    QWORD PTR [ecx+0x22ca3bf2]
  40f622:	mov    ecx,0x684b7673
  40f627:	scas   eax,DWORD PTR es:[edi]
  40f628:	stos   DWORD PTR es:[edi],eax
  40f629:	bound  esi,QWORD PTR [ecx]
  40f62b:	sub    eax,0x4a98cbfb
  40f630:	mov    esp,0xcd6525ef
  40f635:	addr16 inc esi
  40f637:	cmp    eax,0x6806a5d
  40f63c:	fadd   QWORD PTR [edx+0x3]
  40f63f:	mov    ebp,0x88d56d10
  40f644:	add    cl,al
  40f646:	mov    bl,0xd7
  40f648:	in     eax,dx
  40f649:	push   edx
  40f64a:	push   edx
  40f64b:	repz xchg ecx,eax
  40f64d:	inc    esi
  40f64e:	aas    
  40f64f:	les    edx,FWORD PTR [eax]
  40f651:	das    
  40f652:	pop    es
  40f653:	out    dx,eax
  40f654:	inc    esp
  40f655:	mov    bl,0x8d
  40f657:	pop    es
  40f658:	fsubr  st(1),st
  40f65a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f65b:	sub    dh,dl
  40f65d:	arpl   bx,dx
  40f65f:	out    dx,al
  40f660:	mov    esp,0xd8a37c4a
  40f665:	jecxz  0x40f67d
  40f667:	or     ah,BYTE PTR [ecx]
  40f669:	xor    al,BYTE PTR [ebp-0x24]
  40f66c:	sbb    dl,cl
  40f66e:	jns    0x40f601
  40f670:	imul   ebx,ebx,0x7f
  40f673:	pop    ebx
  40f674:	xchg   esp,eax
  40f675:	sub    edx,DWORD PTR [esi-0x39c9e1e9]
  40f67b:	add    edx,esp
  40f67d:	and    esp,edx
  40f67f:	mov    eax,0x33e727f9
  40f684:	popa   
  40f685:	xor    eax,0x18a7e7cf
  40f68a:	pop    ds
  40f68b:	jg     0x40f6c3
  40f68d:	retf   0x4ddf
  40f690:	push   ecx
  40f691:	sbb    al,0x2f
  40f693:	push   esp
  40f694:	sub    eax,0xa0d2fb18
  40f699:	add    BYTE PTR [ecx],dh
  40f69b:	pop    ebx
  40f69c:	xchg   BYTE PTR [ebx-0x1638fc76],ah
  40f6a2:	shl    DWORD PTR [eax+eax*1],cl
  40f6a5:	add    BYTE PTR [ebx+0x4503c845],cl
  40f6ab:	or     BYTE PTR [ecx+0x458be845],cl
  40f6b1:	in     al,0x85
  40f6b3:	ror    BYTE PTR [edi],0x84
  40f6b6:	dec    eax
  40f6b7:	and    al,0x0
  40f6b9:	add    bh,al
  40f6bb:	inc    ebp
  40f6bc:	loopne 0x40f6be
  40f6be:	add    BYTE PTR [eax],al
  40f6c0:	add    BYTE PTR [edx+0x3],ch
  40f6c3:	xor    edx,edx
  40f6c5:	pop    edx
  40f6c6:	add    edx,0x8
  40f6c9:	push   edx
  40f6ca:	pop    ecx
  40f6cb:	push   0x6
  40f6cd:	dec    ecx
  40f6ce:	pop    ebx
  40f6cf:	dec    ebx
  40f6d0:	xchg   ebx,ecx
  40f6d2:	sub    ebx,ecx
  40f6d4:	xchg   ebx,ecx
  40f6d6:	dec    ecx
  40f6d7:	mov    eax,DWORD PTR [ebp-0x1c]
  40f6da:	imul   eax,ecx
  40f6dd:	sub    esp,eax
  40f6df:	mov    DWORD PTR [ebp-0x20],esp
  40f6e2:	mov    eax,DWORD PTR [ebp-0x4]
  40f6e5:	xor    eax,esi
  40f6e7:	add    eax,edi
  40f6e9:	jmp    0x411adb
  40f6ee:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6f1:	mov    eax,DWORD PTR [ebp+0x8]
  40f6f4:	mov    edx,DWORD PTR [ebp+0x14]
  40f6f7:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40f6fb:	xor    ecx,esi
  40f6fd:	add    ecx,edi
  40f6ff:	xor    edx,edx
  40f701:	div    ecx
  40f703:	mov    ecx,DWORD PTR [ebp-0x4]
  40f706:	jmp    0x411aba
  40f70b:	outs   dx,BYTE PTR ds:[esi]
  40f70c:	lods   al,BYTE PTR ds:[esi]
  40f70d:	or     ch,al
  40f70f:	mov    cl,al
  40f711:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f712:	or     ah,0x7d
  40f715:	push   0x7c8c40f0
  40f71a:	xor    al,BYTE PTR [edx]
  40f71c:	scas   al,BYTE PTR es:[edi]
  40f71d:	add    DWORD PTR [ebx-0x7c7ca318],0x20
  40f724:	xor    ch,dl
  40f726:	xor    DWORD PTR [esi-0x4e],ecx
  40f729:	mov    edi,0xbfc67173
  40f72e:	ret    0xd59e
  40f731:	ficom  WORD PTR [eax-0x7d]
  40f734:	inc    esi
  40f735:	out    0x11,al
  40f737:	fidivr WORD PTR [ebp+0x72cd33bd]
  40f73d:	mov    DWORD PTR [edx],0x9c624dda
  40f743:	push   edx
  40f744:	(bad)  
  40f745:	jp     0x40f726
  40f747:	push   ebx
  40f748:	out    0x89,al
  40f74a:	out    0xc,al
  40f74c:	and    al,0xe0
  40f74e:	std    
  40f74f:	mov    esp,0x60285d82
  40f754:	push   ebx
  40f755:	jae    0x40f70f
  40f757:	ficom  DWORD PTR [ebx-0x3d027653]
  40f75d:	add    dl,bl
  40f75f:	push   ss
  40f760:	(bad)  
  40f761:	xor    eax,0xf0938c5b
  40f766:	jp     0x40f75d
  40f768:	lods   eax,DWORD PTR ds:[esi]
  40f769:	pop    es
  40f76a:	dec    ebx
  40f76b:	sbb    BYTE PTR [ecx+0x6a],cl
  40f76e:	pop    edx
  40f76f:	(bad)  
  40f770:	gs sub al,0x26
  40f773:	rdpmc  
  40f775:	mov    ebp,0x9fac9c8b
  40f77a:	dec    esi
  40f77b:	cmp    ebp,DWORD PTR [ebx+0x4f475971]
  40f781:	stos   DWORD PTR es:[edi],eax
  40f782:	push   cs
  40f783:	inc    esi
  40f784:	or     ebp,ebx
  40f786:	push   ecx
  40f787:	adc    ax,0xee3f
  40f78b:	fdivr  QWORD PTR [esi+0x5b423e3b]
  40f791:	sar    DWORD PTR [ebx],0x5e
  40f794:	sub    edx,DWORD PTR [ecx]
  40f796:	cmp    ecx,esp
  40f798:	(bad)
  40f79b:	xor    esp,esp
  40f79d:	pop    ebp
  40f79e:	fild   QWORD PTR [edi+0x7a]
  40f7a1:	cmp    dh,dl
  40f7a3:	sbb    al,0xfe
  40f7a6:	pop    edx
  40f7a7:	or     edi,ebp
  40f7a9:	mov    esi,0xdaa02c3
  40f7ae:	stos   BYTE PTR es:[edi],al
  40f7af:	add    bl,bl
  40f7b1:	push   cs
  40f7b2:	or     al,bl
  40f7b4:	mov    ds:0x9213c701,al
  40f7ba:	adc    al,0x44
  40f7bc:	or     al,0xf1
  40f7be:	cmp    DWORD PTR [edi+0x70c23762],0x8
  40f7c5:	push   edi
  40f7c6:	pop    ebp
  40f7c7:	mov    eax,0x25e7570a
  40f7cc:	mov    al,0x9a
  40f7ce:	xchg   ch,dh
  40f7d0:	and    dh,bl
  40f7d2:	sbb    al,0x59
  40f7d4:	dec    ebp
  40f7d5:	jmp    0x40f7d7
  40f7d7:	test   DWORD PTR [ecx+eax*2],ebp
  40f7da:	xchg   ecx,eax
  40f7db:	add    eax,0x7ba9ef39
  40f7e0:	and    dh,BYTE PTR [ebx+0x706b61ab]
  40f7e6:	adc    dh,BYTE PTR [ebp+0x3df27f09]
  40f7ec:	jmp    0x870f:0x4109bed
  40f7f3:	xor    BYTE PTR [ecx],dl
  40f7f5:	mov    ebx,0xcdf03d9a
  40f7fa:	mov    ecx,0xa19d0a3
  40f7ff:	sbb    edi,esp
  40f801:	add    eax,0xacd3b8f5
  40f806:	in     al,dx
  40f807:	das    
  40f808:	mov    ebx,0xaa562c60
  40f80d:	sub    BYTE PTR [edi],ah
  40f80f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f810:	jne    0x40f813
  40f812:	sub    ecx,ebp
  40f814:	mov    BYTE PTR [ebx+eiz*4],ah
  40f817:	sahf   
  40f818:	inc    esp
  40f819:	test   al,0x78
  40f81b:	xchg   ebp,eax
  40f81c:	shl    ah,1
  40f81e:	mov    al,ds:0xcf18f19f
  40f823:	cmc    
  40f824:	rcr    esi,cl
  40f826:	call   0xc9b3cced
  40f82b:	sbb    al,0xad
  40f82d:	add    BYTE PTR [eax+0x53],dl
  40f830:	pop    esi
  40f831:	xor    al,0x1c
  40f833:	add    al,0x80
  40f835:	ret    0xa16c
  40f838:	sub    ecx,DWORD PTR [ebp+0x4b6febd6]
  40f83e:	mov    edi,0xf18a7384
  40f843:	ss jbe 0x40f810
  40f846:	xor    al,0x3c
  40f848:	mov    ebx,0xb67191a8
  40f84d:	dec    ebx
  40f84e:	cli    
  40f84f:	gs call 0x2b5e4974
  40f855:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f856:	sub    al,BYTE PTR [esi]
  40f858:	(bad)  [eax+0x61]
  40f85b:	in     eax,dx
  40f85c:	or     BYTE PTR [edx],ch
  40f85e:	les    ebx,FWORD PTR [ecx-0x6b]
  40f861:	int    0x62
  40f863:	push   edx
  40f864:	scas   al,BYTE PTR es:[edi]
  40f865:	jecxz  0x40f835
  40f867:	inc    ebx
  40f868:	jb     0x40f86d
  40f86a:	in     eax,dx
  40f86b:	mov    cl,0x2c
  40f86d:	stos   DWORD PTR es:[edi],eax
  40f86e:	pusha  
  40f86f:	inc    edi
  40f870:	push   cs
  40f871:	fucomi st,st(0)
  40f873:	xor    ecx,eax
  40f875:	pop    ebp
  40f876:	jb     0x40f875
  40f878:	cmp    ah,dh
  40f87a:	sbb    DWORD PTR [ecx+0x1],eax
  40f87d:	stc    
  40f87e:	test   BYTE PTR [ecx+0x7b],bh
  40f881:	ret    0xa1a0
  40f884:	(bad)  
  40f885:	and    DWORD PTR es:[ebp+0x69],esp
  40f889:	mov    cl,0x53
  40f88b:	xor    BYTE PTR [esi+0x44],0xcb
  40f88f:	dec    edx
  40f890:	bound  esi,QWORD PTR [ebp+ebx*8+0x4e]
  40f894:	inc    BYTE PTR [ebx]
  40f896:	ret    
  40f897:	push   0xa23bc629
  40f89c:	cmp    eax,0x7936f1cb
  40f8a1:	sub    eax,0xd5d7bf0d
  40f8a6:	sub    al,0xde
  40f8a8:	loop   0x40f8ee
  40f8aa:	(bad)  
  40f8ab:	inc    edi
  40f8ac:	dec    eax
  40f8ad:	jno    0x40f879
  40f8af:	in     al,0x48
  40f8b1:	dec    esi
  40f8b2:	inc    ebx
  40f8b3:	outs   dx,BYTE PTR ds:[esi]
  40f8b4:	xlat   BYTE PTR ds:[ebx]
  40f8b5:	cmp    BYTE PTR [edi+edi*4-0x37728f80],ah
  40f8bc:	or     al,0xe7
  40f8be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8bf:	lock xchg esp,eax
  40f8c1:	sub    ecx,DWORD PTR [ecx-0x56]
  40f8c4:	jbe    0x40f917
  40f8c6:	xchg   BYTE PTR [ebp+0x2e],bl
  40f8c9:	or     DWORD PTR [ecx],edx
  40f8cb:	and    ch,BYTE PTR [ebx+0x6e]
  40f8ce:	dec    ebp
  40f8cf:	addr16 loopne 0x40f924
  40f8d2:	shl    ch,0x4c
  40f8d5:	bound  ecx,QWORD PTR [ebp-0x1289a4c5]
  40f8db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f8dc:	mov    ds:0x3654a863,eax
  40f8e1:	retf   
  40f8e2:	stc    
  40f8e3:	outs   dx,DWORD PTR ds:[esi]
  40f8e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8e5:	ffree  st(7)
  40f8e7:	mov    ebp,0xe1d5aa91
  40f8ec:	test   DWORD PTR [ecx+ecx*1+0x5b130fdf],0x681c33d5
  40f8f7:	mov    BYTE PTR [ebx+0xc],bh
  40f8fa:	sub    al,0xde
  40f8fc:	(bad)  
  40f8fd:	loop   0x40f8c1
  40f8ff:	mov    BYTE PTR [ebx+eiz*4+0x6a6c4397],al
  40f906:	shl    BYTE PTR [esi],1
  40f908:	(bad)  [eax]
  40f90a:	nop
  40f90b:	push   esi
  40f90c:	jmp    0x174d:0xdc5dedab
  40f913:	jle    0x40f89e
  40f915:	ins    DWORD PTR es:[edi],dx
  40f916:	scas   al,BYTE PTR es:[edi]
  40f917:	gs jg  0x40f8c5
  40f91a:	cmp    edx,ecx
  40f91c:	adc    al,BYTE PTR [esi-0x3a0fd76c]
  40f922:	or     al,0x83
  40f924:	rcr    BYTE PTR [eax+0x12f51b36],0x71
  40f92b:	pop    edx
  40f92c:	cld    
  40f92d:	cmp    DWORD PTR [edi+0x4a],ebx
  40f930:	pop    esp
  40f931:	or     DWORD PTR [edi],0xab7ec130
  40f937:	xchg   edx,eax
  40f938:	rol    BYTE PTR [ecx+edx*2],0x6
  40f93c:	push   cs
  40f93d:	scas   eax,DWORD PTR es:[edi]
  40f93e:	icebp  
  40f93f:	adc    al,0x2b
  40f941:	mov    esi,0x322a19a5
  40f946:	xor    eax,edx
  40f948:	adc    ebx,esp
  40f94a:	fs jb  0x40f98b
  40f94d:	pop    ebp
  40f94e:	out    0x52,eax
  40f950:	call   0x2219495c
  40f955:	adc    BYTE PTR [ebx+0x260256dc],dl
  40f95b:	push   edx
  40f95c:	sub    eax,0x307218f1
  40f961:	mov    al,ds:0x6de22b2a
  40f966:	jmp    0x4b5ea3d1
  40f96b:	cmp    al,0xf1
  40f96d:	call   0xd2b0b1c1
  40f972:	or     DWORD PTR [edi+0x34],ebp
  40f975:	mov    ebx,0xceea1b0e
  40f97a:	out    dx,al
  40f97b:	xor    al,0x2f
  40f97d:	xor    eax,DWORD PTR [ebx+eax*4+0x34cd48]
  40f984:	add    edx,ecx
  40f986:	js     0x40f9ea
  40f988:	sbb    al,0x9
  40f98a:	fadd   st,st(3)
  40f98c:	fcmovu st,st(4)
  40f98e:	and    edi,DWORD PTR [edx+0xeb66a7]
  40f994:	test   al,0xb
  40f996:	cwde   
  40f997:	int3   
  40f998:	mov    dl,0xe4
  40f99a:	sub    ch,bl
  40f99c:	xchg   ebx,eax
  40f99d:	in     al,dx
  40f99e:	mov    ebx,0x73a569d
  40f9a3:	xor    BYTE PTR [edx+0x64ea6ef1],bh
  40f9a9:	lods   al,BYTE PTR ds:[esi]
  40f9aa:	outs   dx,DWORD PTR ds:[esi]
  40f9ab:	jno    0x40f98c
  40f9ad:	les    edi,FWORD PTR [edx-0x70]
  40f9b0:	lock xor ch,dl
  40f9b3:	pop    ecx
  40f9b4:	mov    al,0x6d
  40f9b6:	repz daa 
  40f9b8:	aam    0x3d
  40f9ba:	sbb    esi,DWORD PTR [edi+eax*4-0x7a]
  40f9be:	push   esp
  40f9bf:	jl     0x40f9a3
  40f9c1:	(bad)  
  40f9c2:	cs cdq 
  40f9c4:	ja     0x40f9ae
  40f9c6:	mov    ds:0x807203b6,eax
  40f9cb:	ret    0x1c2e
  40f9ce:	int3   
  40f9cf:	mov    ecx,0xf846eafe
  40f9d4:	xchg   edi,eax
  40f9d5:	mov    ds:0x6b93f54f,eax
  40f9da:	jmp    0x40fa53
  40f9dc:	arpl   WORD PTR [ebp*1-0x7758ba77],dx
  40f9e3:	dec    ebp
  40f9e4:	sub    al,0xd0
  40f9e6:	nop
  40f9e7:	and    BYTE PTR [ecx-0x2b],dh
  40f9ea:	in     al,dx
  40f9eb:	xchg   DWORD PTR [eax],edi
  40f9ed:	adc    al,BYTE PTR [ecx+0x3d515450]
  40f9f3:	dec    esp
  40f9f4:	push   cs
  40f9f5:	pop    esi
  40f9f6:	iret   
  40f9f7:	inc    ebx
  40f9f8:	inc    ebp
  40f9f9:	push   0x74
  40f9fb:	mov    BYTE PTR [eax+0x38],bl
  40f9fe:	(bad)  
  40f9ff:	adc    bl,ah
  40fa01:	push   0xfe634789
  40fa06:	dec    esp
  40fa07:	push   ebx
  40fa08:	scas   eax,DWORD PTR es:[edi]
  40fa09:	mov    dh,0xa7
  40fa0b:	cli    
  40fa0c:	imul   edx,DWORD PTR [ebx-0x7a],0x1d6ba979
  40fa13:	fisttp WORD PTR [esi]
  40fa15:	jbe    0x40f9c7
  40fa17:	xor    BYTE PTR ss:[eax],0xec
  40fa1b:	mov    dh,0x4b
  40fa1d:	push   esi
  40fa1e:	add    DWORD PTR [ebp+0x7f],0x3bf02ed3
  40fa25:	outs   dx,BYTE PTR ds:[esi]
  40fa26:	out    dx,al
  40fa27:	sbb    BYTE PTR ds:0x1d650f3c,bh
  40fa2d:	in     eax,dx
  40fa2e:	fld    TBYTE PTR [ebx]
  40fa30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa31:	mov    esi,0xd1660eb2
  40fa36:	jecxz  0x40fa9a
  40fa38:	add    al,bh
  40fa3a:	idiv   DWORD PTR [esi]
  40fa3c:	out    dx,eax
  40fa3d:	sbb    ebx,DWORD PTR [edx+0x123b5a5c]
  40fa43:	inc    edi
  40fa44:	aaa    
  40fa45:	or     al,0x1c
  40fa47:	pop    ebx
  40fa48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa49:	mov    ch,BYTE PTR [edi]
  40fa4b:	cmp    DWORD PTR [ebx-0x40],edx
  40fa4e:	and    ebx,esi
  40fa50:	outs   dx,BYTE PTR ds:[esi]
  40fa51:	jo     0x40faa3
  40fa53:	sub    edi,ebp
  40fa55:	in     al,dx
  40fa56:	(bad)  
  40fa57:	mov    bl,0x78
  40fa59:	mov    dl,BYTE PTR [edx-0x59]
  40fa5c:	mov    edx,0xe62601de
  40fa61:	lock mov BYTE PTR [edx-0x4438fb64],ah
  40fa68:	adc    al,0xa5
  40fa6a:	call   FWORD PTR [esi-0x1a]
  40fa6d:	fcom   DWORD PTR [ebx]
  40fa6f:	mov    ah,0xe6
  40fa71:	into   
  40fa72:	test   ebx,ebp
  40fa74:	arpl   WORD PTR [ecx+0x2f],ax
  40fa77:	retf   0xa085
  40fa7a:	in     eax,0xed
  40fa7c:	sub    DWORD PTR [eax-0x22ffa638],0x75
  40fa83:	and    al,0x49
  40fa85:	or     bh,ch
  40fa87:	les    esp,FWORD PTR [edx-0x6c3809eb]
  40fa8d:	cmc    
  40fa8e:	push   0x41
  40fa90:	dec    ecx
  40fa91:	adc    eax,0x6b0087b3
  40fa96:	mov    esp,0xd74b6a2f
  40fa9b:	ss lahf 
  40fa9d:	pop    edx
  40fa9e:	dec    eax
  40fa9f:	into   
  40faa0:	mov    eax,ds:0xfa8765b2
  40faa5:	push   ds
  40faa6:	adc    eax,0x3ec59721
  40faab:	leave  
  40faac:	sahf   
  40faad:	data16 cli 
  40faaf:	add    BYTE PTR [eax+0x56],bh
  40fab2:	out    dx,eax
  40fab3:	push   ebx
  40fab4:	add    edx,DWORD PTR [ecx-0x2c]
  40fab7:	pop    ecx
  40fab8:	mov    al,ds:0xda69b27a
  40fabd:	fiadd  DWORD PTR [ebx]
  40fabf:	sbb    ah,BYTE PTR [edx+0xeafc1f6]
  40fac5:	cli    
  40fac6:	fisttp QWORD PTR [eax]
  40fac8:	lea    eax,[edi-0x46]
  40facb:	and    al,0xa
  40facd:	and    edi,DWORD PTR [edx]
  40facf:	ficom  WORD PTR [edi-0x370a51bb]
  40fad5:	pop    edi
  40fad6:	mov    eax,0x1ea90929
  40fadb:	mov    ah,0x66
  40fadd:	pop    esp
  40fade:	jg     0x40fb04
  40fae0:	jb     0x40faf9
  40fae2:	ss pop edi
  40fae4:	fcomi  st,st(0)
  40fae6:	int    0x66
  40fae8:	jae    0x40fb46
  40faea:	jle    0x40fae4
  40faec:	cwde   
  40faed:	rol    DWORD PTR [edx-0x44],1
  40faf0:	int    0xaf
  40faf2:	dec    eax
  40faf3:	xor    BYTE PTR [eax],dh
  40faf5:	or     dl,BYTE PTR [edi-0x36]
  40faf8:	xchg   BYTE PTR [edx+0x28],ch
  40fafb:	xor    dl,bl
  40fafd:	or     al,BYTE PTR [esi+0x692d3df]
  40fb03:	enter  0x6dc2,0x6
  40fb07:	aad    0x2d
  40fb09:	pop    edi
  40fb0a:	sbb    al,0x45
  40fb0c:	or     ch,BYTE PTR [edi-0x9]
  40fb0f:	cmovns eax,DWORD PTR [esi-0x6a343fe2]
  40fb16:	xor    al,0xe3
  40fb18:	cli    
  40fb19:	cmp    al,BYTE PTR [esi+0x4a4f5d02]
  40fb1f:	sbb    BYTE PTR [esi-0x22],bh
  40fb22:	(bad)  
  40fb23:	loope  0x40fb72
  40fb25:	bnd fs ja 0x40fb00
  40fb29:	stos   BYTE PTR es:[edi],al
  40fb2a:	mov    ch,0xa0
  40fb2c:	enter  0x7c7a,0x18
  40fb30:	add    al,0xc3
  40fb32:	and    DWORD PTR [ebp-0x14],edi
  40fb35:	push   ebx
  40fb36:	ret    0x2b41
  40fb39:	aaa    
  40fb3a:	adc    al,ch
  40fb3c:	xor    al,0xbf
  40fb3e:	test   BYTE PTR [ecx],ah
  40fb40:	aas    
  40fb41:	iret   
  40fb42:	add    eax,0x715d1acd
  40fb47:	xor    ebp,ebx
  40fb49:	jecxz  0x40fb16
  40fb4b:	bound  edi,QWORD PTR [ebx-0x3dfdde4c]
  40fb51:	inc    eax
  40fb52:	sub    eax,0xb3fe36a9
  40fb57:	loopne 0x40fba6
  40fb59:	iret   
  40fb5a:	jmp    0x5a5c:0x9d4927b1
  40fb61:	lock in eax,0xcc
  40fb64:	jne    0x40fb3d
  40fb66:	or     edi,ebx
  40fb68:	mov    al,ds:0x177ec68a
  40fb6d:	jge    0x40fbda
  40fb6f:	pop    esi
  40fb70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb71:	aad    0x7b
  40fb73:	lock div ch
  40fb76:	jecxz  0x40fbb0
  40fb78:	(bad)  
  40fb79:	dec    ebx
  40fb7a:	mov    WORD PTR [edx+ecx*2+0x3a],ss
  40fb7e:	or     ebx,eax
  40fb80:	pop    edi
  40fb81:	les    ebp,FWORD PTR [ebx-0x7f]
  40fb84:	pop    edi
  40fb85:	xchg   edx,eax
  40fb86:	daa    
  40fb87:	mov    dl,0x77
  40fb89:	jge    0x40fbc8
  40fb8b:	push   ss
  40fb8c:	add    esi,ecx
  40fb8e:	mov    ds:0xd621e03e,eax
  40fb93:	ret    
  40fb94:	stos   DWORD PTR es:[edi],eax
  40fb95:	mov    dh,0x48
  40fb97:	sub    DWORD PTR [edi-0x2],ebp
  40fb9a:	sub    BYTE PTR [esp+ebx*8],ch
  40fb9d:	arpl   WORD PTR [ecx+0x62],si
  40fba0:	(bad)  
  40fba1:	jne    0x40fb5b
  40fba3:	test   BYTE PTR [ebx-0x67],ch
  40fba6:	ja     0x40fbc1
  40fba8:	or     eax,0x840efb9d
  40fbad:	mov    cl,0xdb
  40fbaf:	sbb    BYTE PTR [ebx],0x67
  40fbb2:	mov    ebp,0xd18691fc
  40fbb7:	mov    bl,0x23
  40fbb9:	in     eax,dx
  40fbba:	or     eax,0xeb62222
  40fbbf:	stos   BYTE PTR es:[edi],al
  40fbc0:	sub    DWORD PTR [esp+edx*8],0x74ad36e9
  40fbc7:	out    0x2d,al
  40fbc9:	repnz cmp al,0x52
  40fbcc:	jae    0x40fb9b
  40fbce:	push   ss
  40fbcf:	mov    edi,0xab41e674
  40fbd4:	adc    ebp,DWORD PTR [edx]
  40fbd6:	xor    ch,BYTE PTR [edx]
  40fbd8:	retf   
  40fbd9:	jmp    0x4b0f:0x59c7672
  40fbe0:	data16 mov al,0xa9
  40fbe3:	push   edx
  40fbe4:	mov    ds:0x32977c65,al
  40fbe9:	xor    eax,ebx
  40fbeb:	jg     0x40fbb3
  40fbed:	sub    edi,DWORD PTR [ebx-0x49]
  40fbf0:	cmp    al,dh
  40fbf2:	sub    al,0x29
  40fbf4:	test   al,0x12
  40fbf6:	aad    0x82
  40fbf8:	aam    0x74
  40fbfa:	add    eax,0x19a0f8ab
  40fbff:	sbb    DWORD PTR es:[eax+edx*1+0x53b6d57a],eax
  40fc07:	lock int3 
  40fc09:	inc    BYTE PTR [ecx-0x25]
  40fc0c:	add    ah,BYTE PTR [eax+0x1dd09b7b]
  40fc12:	in     eax,0x2a
  40fc14:	dec    ecx
  40fc15:	repz mov eax,ds:0x41e7f869
  40fc1b:	pop    ss
  40fc1c:	jmp    0xfa9e207b
  40fc21:	(bad)  
  40fc22:	(bad)  
  40fc23:	fbld   TBYTE PTR [esi+0x47]
  40fc26:	sbb    ebx,DWORD PTR [eax-0x58775bf]
  40fc2c:	or     dl,BYTE PTR [edx+ecx*2+0x7f50c02b]
  40fc33:	pop    esp
  40fc34:	push   cs
  40fc35:	sti    
  40fc36:	test   eax,edx
  40fc38:	jg     0x40fc8a
  40fc3a:	push   cs
  40fc3b:	jo     0x40fc64
  40fc3d:	sub    BYTE PTR [esi],al
  40fc3f:	adc    al,0x6e
  40fc41:	cmp    eax,0x38caa18a
  40fc46:	push   0x76df6494
  40fc4b:	test   BYTE PTR [ebp-0x48008a33],bh
  40fc51:	cmp    ebp,edi
  40fc53:	pop    esi
  40fc54:	retf   
  40fc55:	mov    ?,WORD PTR [ebp-0xa]
  40fc58:	cmp    al,0x47
  40fc5a:	hlt    
  40fc5b:	pop    ds
  40fc5c:	cmp    ch,BYTE PTR [ebx+0x52910ce9]
  40fc62:	in     al,0xb0
  40fc64:	imul   edx,DWORD PTR [eax-0x37],0x33
  40fc68:	sub    BYTE PTR [edi+0x15273d41],0x70
  40fc6f:	loop   0x40fcd5
  40fc71:	(bad)  
  40fc72:	push   edx
  40fc73:	clc    
  40fc74:	not    esi
  40fc76:	mov    ebx,0x974b1b50
  40fc7b:	ja     0x40fc00
  40fc7d:	adc    DWORD PTR [eax+0x4065c6a0],esp
  40fc83:	mov    edx,esp
  40fc85:	clc    
  40fc86:	loopne 0x40fc1a
  40fc88:	std    
  40fc89:	popf   
  40fc8a:	je     0x40fc2c
  40fc8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc8d:	mov    eax,0xa759ef18
  40fc92:	cld    
  40fc93:	and    esp,DWORD PTR [ecx]
  40fc95:	inc    ebx
  40fc96:	dec    edi
  40fc97:	pop    ds
  40fc98:	pop    eax
  40fc99:	sub    ah,ah
  40fc9b:	add    dh,BYTE PTR [eax]
  40fc9d:	add    eax,0x19a64284
  40fca2:	test   eax,0x6ab6e30b
  40fca7:	adc    al,0x23
  40fca9:	push   0x6d
  40fcab:	or     eax,0x905e4c3b
  40fcb0:	ins    DWORD PTR es:[edi],dx
  40fcb1:	jne    0x40fd16
  40fcb3:	iret   
  40fcb4:	ret    
  40fcb5:	ret    
  40fcb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fcb7:	and    ch,BYTE PTR [esi+0x495d56f3]
  40fcbd:	jle    0x40fce0
  40fcbf:	dec    esp
  40fcc0:	ins    BYTE PTR es:[edi],dx
  40fcc1:	dec    edx
  40fcc2:	lods   eax,DWORD PTR ds:[esi]
  40fcc3:	scas   al,BYTE PTR es:[edi]
  40fcc4:	(bad)  
  40fcc5:	xchg   edi,eax
  40fcc6:	push   eax
  40fcc7:	ds mov ecx,0xd5d8d53a
  40fccd:	adc    al,0x2a
  40fccf:	sti    
  40fcd0:	scas   al,BYTE PTR es:[di]
  40fcd2:	add    al,0xbd
  40fcd4:	addr16 sti 
  40fcd6:	jnp    0x40fcb9
  40fcd8:	jne    0x40fc96
  40fcda:	xor    eax,DWORD PTR [edx-0x3f]
  40fcdd:	jbe    0x40fcc9
  40fcdf:	lock sbb BYTE PTR [eax+0x311dc139],ch
  40fce6:	lahf   
  40fce7:	mov    esi,0xec0cb7cb
  40fcec:	test   cl,al
  40fcee:	pop    es
  40fcef:	ja     0x40fcd9
  40fcf1:	xor    ecx,DWORD PTR [eax]
  40fcf3:	sub    eax,0x1718362f
  40fcf8:	sbb    BYTE PTR [eax+esi*4+0x53e7a96],cl
  40fcff:	xor    ebp,esp
  40fd01:	sub    al,0xa9
  40fd03:	sahf   
  40fd04:	cmp    dh,BYTE PTR [eax+0x7d17048d]
  40fd0a:	ja     0x40fd12
  40fd0c:	or     BYTE PTR [eax],0xdb
  40fd0f:	fild   DWORD PTR [eax]
  40fd11:	(bad)  
  40fd12:	rcl    BYTE PTR [edi-0x57f9f2c7],0xa5
  40fd19:	sub    eax,0x3d6c4563
  40fd1e:	sub    al,ch
  40fd20:	rcl    BYTE PTR [edx-0x783c6878],cl
  40fd26:	lds    ecx,FWORD PTR [ecx+ebx*4]
  40fd29:	dec    esp
  40fd2a:	mov    DWORD PTR [ebp+0x342f7a1d],0x86133dee
  40fd34:	sub    DWORD PTR [edx+0x62fa47a5],edx
  40fd3a:	stos   BYTE PTR es:[edi],al
  40fd3b:	sbb    cl,BYTE PTR [esi-0x5c]
  40fd3e:	mov    eax,ds:0xd89f5990
  40fd43:	in     eax,0x46
  40fd45:	loopne 0x40fdab
  40fd47:	push   ds
  40fd48:	ret    0xefc2
  40fd4b:	iret   
  40fd4c:	sbb    eax,0xf85d455b
  40fd51:	pop    ebp
  40fd52:	mov    ecx,0x555a1686
  40fd57:	xor    DWORD PTR [eax],esi
  40fd59:	sub    BYTE PTR [esi+0x60c206b3],0x71
  40fd60:	out    0x54,al
  40fd62:	adc    al,0xbb
  40fd64:	imul   eax,DWORD PTR [esi+0x55],0xffffff94
  40fd68:	mov    al,0x81
  40fd6a:	jae    0x40fd90
  40fd6c:	mov    bh,0xd4
  40fd6e:	push   0x3f25a0b5
  40fd73:	cwde   
  40fd74:	(bad)  
  40fd75:	test   esi,esi
  40fd77:	outs   dx,BYTE PTR ds:[esi]
  40fd78:	ja     0x40fdb7
  40fd7a:	jmp    0xa397:0x12cc77b1
  40fd81:	fwait
  40fd82:	push   ebp
  40fd83:	cld    
  40fd84:	hlt    
  40fd85:	sti    
  40fd86:	cs and eax,0xeadfd11a
  40fd8c:	dec    ebp
  40fd8d:	or     ecx,DWORD PTR [edx]
  40fd8f:	or     eax,0xa96de6ca
  40fd94:	inc    ebx
  40fd95:	add    edi,DWORD PTR ds:0xdbf37559
  40fd9b:	cs test al,0x4e
  40fd9e:	jp     0x40fe07
  40fda0:	jecxz  0x40fd5b
  40fda2:	sub    al,0xbd
  40fda4:	or     esp,DWORD PTR [edx+esi*8]
  40fda7:	jo     0x40fe27
  40fda9:	repnz shl DWORD PTR [edx],cl
  40fdac:	rol    BYTE PTR [ecx+0x75],1
  40fdaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdb0:	dec    DWORD PTR [esi]
  40fdb2:	jp     0x40fd7e
  40fdb4:	and    ebx,edx
  40fdb6:	(bad)  
  40fdb7:	call   0xe4e2c185
  40fdbc:	mov    ecx,0xdbfecb5f
  40fdc1:	push   ss
  40fdc2:	pop    esi
  40fdc3:	pop    ds
  40fdc4:	xchg   edi,eax
  40fdc5:	mov    dl,0xf
  40fdc7:	in     eax,0xdc
  40fdc9:	mov    cs:0x9b94699e,al
  40fdcf:	clc    
  40fdd0:	mov    esp,0xd4a04a03
  40fdd5:	mov    dh,0xe8
  40fdd7:	shl    BYTE PTR ds:0x744d0ca5,1
  40fddd:	ror    BYTE PTR [eax-0x6e6c2717],cl
  40fde3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fde4:	in     al,dx
  40fde5:	jae    0x40fe65
  40fde7:	adc    esp,edx
  40fde9:	xchg   ebp,eax
  40fdea:	mov    DWORD PTR [ebx-0x25],ebx
  40fded:	fsub   QWORD PTR [ebx]
  40fdef:	mov    BYTE PTR [ebp-0x79],0x8a
  40fdf3:	das    
  40fdf4:	test   DWORD PTR [ebx+0x2b],ebp
  40fdf7:	daa    
  40fdf8:	rcl    BYTE PTR [eax],0x83
  40fdfb:	push   esp
  40fdfc:	adc    al,0x8e
  40fdfe:	cli    
  40fdff:	add    al,0x18
  40fe01:	adc    al,0x58
  40fe03:	jno    0x40fe3e
  40fe05:	xchg   edi,eax
  40fe06:	mov    ecx,0x1b45d334
  40fe0b:	xor    edi,ebx
  40fe0d:	jbe    0x40fe1e
  40fe0f:	fs dec ebx
  40fe11:	shl    eax,0xe3
  40fe14:	or     eax,0x8677df67
  40fe19:	lea    esi,[esi-0x4f4b8ec1]
  40fe1f:	jmp    0x357e7f11
  40fe24:	loopne 0x40fde3
  40fe26:	dec    ebx
  40fe27:	inc    ecx
  40fe28:	out    0xab,al
  40fe2a:	in     eax,dx
  40fe2b:	push   esi
  40fe2c:	adc    BYTE PTR [eax+0x20e04763],al
  40fe32:	pop    ss
  40fe33:	jnp    0x40feaf
  40fe35:	push   cs
  40fe36:	mov    esp,0x73d1e6fd
  40fe3b:	(bad)  
  40fe3c:	or     DWORD PTR [edi-0x5f654e6a],ecx
  40fe42:	addr16 dec eax
  40fe44:	mov    ebx,0xeedda599
  40fe49:	adc    edx,DWORD PTR [edx-0x4e415bce]
  40fe4f:	and    BYTE PTR cs:[ebx-0x4f3f2d5c],al
  40fe56:	mov    ebp,0x89052878
  40fe5b:	xchg   esp,eax
  40fe5c:	pop    ds
  40fe5d:	jo     0x40fe71
  40fe5f:	add    al,0x96
  40fe61:	xchg   edi,edx
  40fe63:	sar    edx,0x1b
  40fe66:	dec    eax
  40fe67:	int3   
  40fe68:	pop    ecx
  40fe69:	inc    ebp
  40fe6a:	xchg   edi,eax
  40fe6b:	cmp    DWORD PTR [ecx-0x14],ebx
  40fe6e:	pop    ecx
  40fe6f:	cmp    eax,0x87196ed5
  40fe74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe75:	jmp    0x355de6af
  40fe7a:	test   BYTE PTR [ebx+0x40b6c405],cl
  40fe80:	ins    DWORD PTR es:[edi],dx
  40fe81:	lds    edi,FWORD PTR [ebp+0x33]
  40fe84:	imul   edi,DWORD PTR [edx+0x5baeb812],0x74483b7b
  40fe8e:	mov    BYTE PTR [ecx+edi*2],ah
  40fe91:	(bad)  
  40fe93:	shl    DWORD PTR ss:[esi-0x54c61d85],0xc8
  40fe9b:	pop    ecx
  40fe9c:	(bad)  
  40fe9d:	int3   
  40fe9e:	mov    ecx,0xcb87824
  40fea3:	mov    bh,0xe6
  40fea5:	mov    esp,0xbefd245a
  40feaa:	mov    ecx,0x3267d051
  40feaf:	test   eax,0xd32cba09
  40feb4:	cwde   
  40feb5:	int3   
  40feb6:	in     eax,dx
  40feb7:	call   0x5a2f:0xb5a3873a
  40febe:	sub    eax,0xd69d049e
  40fec3:	out    0x30,al
  40fec5:	mov    bl,0x69
  40fec7:	ja     0x40fea1
  40fec9:	int    0xa4
  40fecb:	sbb    esi,DWORD PTR [ecx+0x6b]
  40fece:	mov    ecx,DWORD PTR [esi+esi*8]
  40fed1:	add    al,dh
  40fed3:	pop    ebx
  40fed4:	xlat   BYTE PTR ds:[ebx]
  40fed5:	or     al,0xf2
  40fed7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fed8:	outs   dx,DWORD PTR ds:[esi]
  40fed9:	outs   dx,BYTE PTR ds:[esi]
  40feda:	leave  
  40fedb:	clc    
  40fedc:	pop    ds
  40fedd:	ja     0x40fe8b
  40fedf:	mov    bl,BYTE PTR [ecx-0x2f]
  40fee2:	hlt    
  40fee3:	sub    BYTE PTR [bp+di],cl
  40fee6:	pop    ss
  40fee7:	push   eax
  40fee8:	scas   al,BYTE PTR es:[edi]
  40fee9:	pop    ebp
  40feea:	dec    edi
  40feeb:	pop    ss
  40feec:	test   al,0xe3
  40feee:	loop   0x40fef9
  40fef0:	ja     0x40ff38
  40fef2:	mov    ebx,0x5607ed11
  40fef7:	stc    
  40fef8:	or     dl,BYTE PTR [ebx-0x2f7a62ec]
  40fefe:	dec    edx
  40feff:	xchg   edi,eax
  40ff00:	dec    esi
  40ff01:	pop    eax
  40ff02:	mov    ds:0x4553c9d9,al
  40ff07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff08:	push   eax
  40ff09:	jae    0x40ff84
  40ff0b:	ins    DWORD PTR es:[edi],dx
  40ff0c:	fstp   TBYTE PTR [eax-0x6]
  40ff0f:	or     DWORD PTR [ebx+edx*1+0x54],edi
  40ff13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff14:	out    0x21,eax
  40ff16:	xor    DWORD PTR [ebp-0x26],ebx
  40ff19:	and    DWORD PTR [ecx-0x55],esi
  40ff1c:	sub    BYTE PTR [ecx],cl
  40ff1e:	int    0x63
  40ff20:	or     edx,DWORD PTR [edx-0x5b]
  40ff23:	mov    bh,0x67
  40ff25:	push   ebx
  40ff26:	xchg   ebx,ebx
  40ff28:	outs   dx,BYTE PTR ds:[esi]
  40ff29:	lock aas 
  40ff2b:	mov    ebx,DWORD PTR [eax]
  40ff2d:	out    0xf,eax
  40ff2f:	push   es
  40ff30:	mov    bl,0x33
  40ff32:	add    ecx,DWORD PTR [ebx]
  40ff34:	cdq    
  40ff35:	outs   dx,BYTE PTR ds:[esi]
  40ff36:	jae    0x40ff2f
  40ff38:	and    esp,DWORD PTR [eax-0x582e1987]
  40ff3e:	push   es
  40ff3f:	inc    esi
  40ff40:	lods   al,BYTE PTR ds:[esi]
  40ff41:	push   ebp
  40ff42:	frstor [ebx+0x74e9eda3]
  40ff48:	pop    es
  40ff49:	jo     0x40ff2d
  40ff4b:	js     0x40ff05
  40ff4d:	or     BYTE PTR [ecx+ecx*4+0x6d8b6706],dh
  40ff54:	mov    edi,0x4de9d7a4
  40ff59:	lahf   
  40ff5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff5b:	bnd jae 0x40ff47
  40ff5e:	mov    ds:0xa75687ad,eax
  40ff63:	add    DWORD PTR [edx+0x4b],eax
  40ff66:	mov    ebx,0x9fcdf3db
  40ff6b:	add    BYTE PTR [edx+edi*1-0x51170a4b],ch
  40ff72:	enter  0xfec,0xf8
  40ff76:	jmp    0x25d2:0x55b2d461
  40ff7d:	shl    BYTE PTR [eax+0x5827c9e3],0x20
  40ff84:	jbe    0x40ff2b
  40ff86:	xchg   ebp,esp
  40ff88:	shr    BYTE PTR [esi+eiz*4+0x78bdb1ae],0x41
  40ff90:	xchg   ebx,eax
  40ff91:	dec    ebx
  40ff92:	les    eax,FWORD PTR [edi-0x4b]
  40ff95:	xor    edi,edx
  40ff97:	popa   
  40ff98:	outs   dx,BYTE PTR ds:[esi]
  40ff99:	test   al,0xfc
  40ff9b:	sbb    DWORD PTR [ebx],ebx
  40ff9d:	mov    DWORD PTR [eax+0x5ac98c3f],edx
  40ffa3:	aas    
  40ffa4:	mov    al,0x9f
  40ffa6:	pop    esi
  40ffa7:	lods   eax,DWORD PTR ds:[esi]
  40ffa8:	call   0xa78b57c2
  40ffad:	pusha  
  40ffae:	(bad)  
  40ffaf:	push   0xfd8aa82d
  40ffb4:	(bad)
  40ffb8:	sti    
  40ffb9:	jle    0x410015
  40ffbb:	(bad)  
  40ffbc:	push   cs
  40ffbd:	jno    0x40ffec
  40ffbf:	mov    ch,0xa5
  40ffc1:	(bad)  
  40ffc2:	out    0x85,eax
  40ffc4:	sub    DWORD PTR [edx+0x4b169328],esp
  40ffca:	popa   
  40ffcb:	jae    0x40ff4f
  40ffcd:	adc    al,0x29
  40ffcf:	and    bh,BYTE PTR [ebp-0x46e76780]
  40ffd5:	inc    esi
  40ffd6:	sub    al,0x6b
  40ffd8:	push   ds
  40ffd9:	sub    edi,DWORD PTR [ebx+0xe]
  40ffdc:	repz sub al,0xd7
  40ffdf:	les    edi,FWORD PTR [edi-0x52]
  40ffe2:	push   dx
  40ffe4:	(bad)  
  40ffe5:	cdq    
  40ffe6:	sub    al,0xe1
  40ffe8:	popa   
  40ffe9:	jns    0x40ff95
  40ffeb:	mov    ebx,0x27740394
  40fff0:	inc    ebx
  40fff1:	jno    0x41002e
  40fff3:	ficom  DWORD PTR [ebp-0x63]
  40fff6:	and    eax,0x80f5fe2b
  40fffb:	cmp    bh,BYTE PTR [ebx]
  40fffd:	and    ebp,DWORD PTR [esi]
  40ffff:	mov    DWORD PTR [ebx-0x9],edi
  410002:	inc    esi
  410003:	outs   dx,BYTE PTR ds:[esi]
  410004:	rcl    DWORD PTR [edi-0x5e],0xf9
  410008:	pop    edi
  410009:	adc    BYTE PTR [ebx+0x5d804d34],bh
  41000f:	fisub  WORD PTR [edx]
  410011:	pop    ebx
  410012:	jo     0x41000b
  410014:	inc    esi
  410015:	sar    BYTE PTR [eax+0x749bb386],1
  41001b:	into   
  41001c:	in     al,0xc
  41001e:	pop    edi
  41001f:	js     0x410044
  410021:	mov    ah,0x13
  410023:	out    0xe7,al
  410025:	or     DWORD PTR [edi-0x4801a5e3],ebp
  41002b:	dec    eax
  41002c:	inc    esi
  41002d:	pop    edx
  41002e:	sub    al,0xa5
  410030:	(bad)
  410034:	fcmovnu st,st(0)
  410036:	jg     0x4100a4
  410038:	lahf   
  410039:	lods   al,BYTE PTR ds:[esi]
  41003a:	repz pop ecx
  41003c:	ret    
  41003d:	ins    BYTE PTR es:[edi],dx
  41003e:	out    dx,al
  41003f:	sbb    al,0xe1
  410041:	mov    ds:0x77fea0b6,eax
  410046:	(bad)  
  410047:	mov    eax,ds:0xcfcb8261
  41004c:	pop    ebp
  41004d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41004e:	or     dl,BYTE PTR [edx+0x716443ce]
  410054:	pusha  
  410055:	mov    dh,BYTE PTR [edx]
  410057:	in     eax,0xc2
  410059:	xchg   BYTE PTR [esi],dl
  41005b:	gs clc 
  41005d:	or     eax,0xea6a3e2
  410062:	pop    ebp
  410063:	or     edi,DWORD PTR [ecx-0x5]
  410066:	jbe    0x410022
  410068:	jle    0x4100b5
  41006a:	bound  ebp,QWORD PTR [ebx+0x2d]
  41006d:	sbb    eax,0xf8d7a141
  410072:	out    dx,al
  410073:	popa   
  410074:	xlat   BYTE PTR ds:[ebx]
  410075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410076:	shl    DWORD PTR [edx],1
  410078:	cs xchg edi,eax
  41007a:	(bad)  
  41007b:	in     al,dx
  41007c:	sahf   
  41007d:	sub    al,0xb9
  41007f:	xchg   edx,eax
  410080:	jecxz  0x41007b
  410082:	jb     0x410050
  410084:	mov    ebx,eax
  410086:	jnp    0x4100e9
  410088:	sub    DWORD PTR [esi-0x47],esp
  41008b:	(bad)  
  41008c:	lds    esp,FWORD PTR [edi+0xcaf95a1]
  410092:	or     esp,DWORD PTR [ecx+eiz*2+0x1a5d304]
  410099:	push   es
  41009a:	das    
  41009b:	sbb    ebx,DWORD PTR ss:[edi]
  41009e:	int3   
  41009f:	inc    edi
  4100a0:	lahf   
  4100a1:	cmc    
  4100a2:	sub    DWORD PTR [esi-0x27],edx
  4100a5:	stc    
  4100a6:	push   cs
  4100a7:	test   dh,ah
  4100a9:	push   ds
  4100aa:	lds    edx,FWORD PTR [edi]
  4100ac:	lods   eax,DWORD PTR fs:[esi]
  4100ae:	jbe    0x41003b
  4100b0:	jge    0x41012b
  4100b2:	ins    DWORD PTR es:[edi],dx
  4100b3:	fst    st(7)
  4100b5:	or     edx,DWORD PTR ds:0xf2a913a0
  4100bb:	xor    cl,BYTE PTR ds:0xfbef4568
  4100c1:	call   0x2890:0xf4247dfc
  4100c8:	sbb    BYTE PTR [ecx],bl
  4100ca:	mov    ebx,0xea4cf413
  4100cf:	stos   BYTE PTR es:[edi],al
  4100d0:	js     0x410117
  4100d2:	sub    eax,0x6370c495
  4100d7:	or     eax,0x8d9e4d22
  4100dc:	mov    cl,bl
  4100de:	enter  0xd5a3,0x7f
  4100e2:	cld    
  4100e3:	jno    0x4100ae
  4100e5:	jge    0x4100ce
  4100e7:	lods   eax,DWORD PTR ds:[esi]
  4100e8:	jecxz  0x4100c6
  4100ea:	jmp    DWORD PTR [ecx-0x60]
  4100ed:	icebp  
  4100ee:	mov    dh,0x3a
  4100f0:	xchg   ebx,eax
  4100f1:	xchg   DWORD PTR [ecx],eax
  4100f3:	and    eax,0x6197e722
  4100f8:	int3   
  4100f9:	sbb    DWORD PTR [ebx],ebx
  4100fb:	retf   0xdbd5
  4100fe:	fisttp DWORD PTR [edx+0x24732725]
  410104:	sbb    DWORD PTR [ecx+ecx*4-0x55],eax
  410108:	ffreep st(1)
  41010a:	out    0x29,eax
  41010c:	pop    eax
  41010d:	push   es
  41010e:	jbe    0x41012e
  410110:	rcr    esp,cl
  410112:	push   ecx
  410113:	fst    QWORD PTR [esi-0x51]
  410116:	xchg   esp,eax
  410117:	in     eax,dx
  410118:	inc    esp
  410119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41011a:	out    0x47,al
  41011c:	inc    edi
  41011d:	fwait
  41011e:	fs rcr ecx,1
  410121:	mov    al,cs:0x656076c7
  410127:	pusha  
  410128:	cwde   
  410129:	aas    
  41012a:	or     edx,DWORD PTR [ebx+0x7e]
  41012d:	fdivr  DWORD PTR [esi-0x6bbc6b49]
  410133:	dec    ecx
  410134:	loopne 0x410155
  410136:	cmp    DWORD PTR [edi-0x3a2b666d],esi
  41013c:	(bad)  
  41013e:	fidivr DWORD PTR fs:[ebx]
  410141:	xchg   DWORD PTR [edx],ebx
  410143:	ficomp WORD PTR [edx]
  410145:	xor    bh,al
  410147:	pop    edi
  410148:	fwait
  410149:	cmc    
  41014a:	jb     0x410180
  41014c:	lahf   
  41014d:	cld    
  41014e:	dec    ebx
  41014f:	arpl   WORD PTR [edx-0x788282b],sp
  410155:	pop    ss
  410156:	into   
  410157:	jg     0x410136
  410159:	mov    eax,ds:0x7309ae02
  41015e:	shr    esp,1
  410160:	in     eax,0xc6
  410162:	mov    ecx,0xc6003a38
  410167:	xor    DWORD PTR [edi-0x1d],0xbcd4c8de
  41016e:	pop    ds
  41016f:	xor    bl,dh
  410171:	fiadd  DWORD PTR [edi]
  410173:	call   0x8358:0x7ac48ef8
  41017a:	fmul   QWORD PTR ds:0x7ffb9352
  410180:	mov    bh,0xd0
  410182:	hlt    
  410183:	xchg   edi,eax
  410184:	dec    ebp
  410185:	arpl   WORD PTR [ebp-0x74cc8125],sp
  41018b:	push   ebx
  41018c:	or     ecx,ebp
  41018e:	sti    
  41018f:	fcomi  st,st(6)
  410191:	sbb    ebx,ebx
  410193:	mov    dl,0x43
  410195:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410196:	cmp    al,0x23
  410198:	ret    
  410199:	adc    DWORD PTR [esi-0x6c],edx
  41019c:	lahf   
  41019d:	lea    ebx,[ecx]
  41019f:	mov    ebp,0xd8e989fb
  4101a4:	inc    ebx
  4101a5:	dec    esi
  4101a6:	daa    
  4101a7:	bnd jmp 0x4bd8df45
  4101ad:	aas    
  4101ae:	and    ebx,DWORD PTR [ebx-0x1503de63]
  4101b4:	ins    DWORD PTR es:[edi],dx
  4101b5:	pusha  
  4101b6:	dec    esp
  4101b7:	jo     0x4101b2
  4101b9:	jno    0x4101a7
  4101bb:	test   BYTE PTR [edx-0x6e],0x1e
  4101bf:	adc    ah,BYTE PTR [ebx-0x46f8008a]
  4101c5:	push   ebp
  4101c6:	mov    bh,0xde
  4101c8:	call   0x731a2b4
  4101cd:	ret    
  4101ce:	pop    edx
  4101cf:	xchg   edi,eax
  4101d0:	push   0xffffffb1
  4101d2:	xchg   ecx,eax
  4101d3:	inc    esi
  4101d4:	sbb    BYTE PTR [edi-0x63ceea40],bl
  4101da:	jbe    0x4101d0
  4101dc:	push   ecx
  4101dd:	nop
  4101de:	mov    BYTE PTR [ebp+0x7ff79b7c],bh
  4101e4:	xchg   DWORD PTR [edx],ebx
  4101e6:	xchg   ebx,eax
  4101e7:	or     dl,BYTE PTR [ecx+0x3c]
  4101ea:	and    esp,DWORD PTR [ebx+0x68]
  4101ed:	bswap  edx
  4101ef:	push   ecx
  4101f0:	and    DWORD PTR [ebx+ebx*2-0x5c],ecx
  4101f4:	mov    esp,0x72c1496c
  4101f9:	mov    ah,0xb4
  4101fb:	lods   al,BYTE PTR ds:[esi]
  4101fc:	mov    dh,0xce
  4101fe:	jbe    0x410208
  410200:	push   edx
  410201:	or     edi,DWORD PTR [edx+edx*8+0x464df665]
  410208:	mov    eax,0xc1b63486
  41020d:	sar    DWORD PTR [ebx+0x577896cb],0x3c
  410214:	imul   ebx,DWORD PTR [ecx+0x12882b0c],0x84e6af0a
  41021e:	pushf  
  41021f:	sub    DWORD PTR [ecx+0x3b],0xffffff96
  410223:	in     eax,dx
  410224:	out    dx,al
  410225:	push   ss
  410226:	popa   
  410227:	fldcw  WORD PTR [edx+0x23a7d2ca]
  41022d:	inc    esp
  41022e:	cld    
  41022f:	sbb    ebx,ebp
  410231:	fisubr WORD PTR [edi-0x44f7dae3]
  410237:	ds neg ch
  41023a:	aam    0xd5
  41023c:	(bad)  
  41023d:	repnz push ds
  41023f:	dec    ebp
  410240:	mov    al,ds:0xd77889fa
  410245:	cmp    eax,edi
  410247:	inc    ebx
  410248:	jb     0x4102bd
  41024a:	inc    ebx
  41024b:	and    al,0x87
  41024d:	out    0x61,al
  41024f:	push   ecx
  410250:	push   0xffffff93
  410252:	aaa    
  410253:	hlt    
  410254:	jns    0x410247
  410256:	icebp  
  410257:	inc    esp
  410258:	mov    eax,0x8fddd6da
  41025d:	pop    ss
  41025e:	dec    eax
  41025f:	clc    
  410260:	sbb    ecx,DWORD PTR [eax-0x21afddee]
  410266:	bound  ebx,QWORD PTR [esi+ecx*1-0x139c4fe2]
  41026d:	popa   
  41026e:	pop    esi
  41026f:	cmp    dh,BYTE PTR [edi]
  410271:	jns    0x41022c
  410273:	stc    
  410274:	cs in  al,0x51
  410277:	sub    ebx,DWORD PTR [esi]
  410279:	pop    esp
  41027a:	dec    ecx
  41027b:	sbb    al,BYTE PTR [eax]
  41027d:	cmp    eax,edx
  41027f:	lock inc esp
  410281:	jg     0x41029c
  410283:	popf   
  410284:	lahf   
  410285:	cmp    DWORD PTR ds:0x850df699,0xbf8cf4f
  41028f:	pop    edx
  410290:	sub    ebx,DWORD PTR [ecx+0x7d]
  410293:	adc    BYTE PTR [edx],0x98
  410296:	inc    edi
  410297:	sub    DWORD PTR [ecx],ebp
  410299:	adc    DWORD PTR [eax],esi
  41029b:	inc    ebx
  41029c:	or     bh,0xbb
  41029f:	xchg   ebx,eax
  4102a0:	inc    edi
  4102a1:	adc    ebx,esp
  4102a3:	lea    ebx,[eax-0x45f17968]
  4102a9:	jae    0x410259
  4102ab:	mov    edx,0xae694a15
  4102b0:	imul   eax,DWORD PTR [eax+0x28],0x9444dcb3
  4102b7:	shl    DWORD PTR fs:[edi-0x5d212c25],1
  4102be:	dec    edx
  4102bf:	inc    edx
  4102c0:	xchg   edi,eax
  4102c1:	lds    ecx,FWORD PTR [esi]
  4102c3:	push   cs
  4102c4:	mov    edx,0xe4741151
  4102c9:	sbb    DWORD PTR [ecx],esp
  4102cb:	cwde   
  4102cc:	mov    al,ds:0x58ee2268
  4102d1:	ins    DWORD PTR es:[edi],dx
  4102d2:	js     0x4102a0
  4102d4:	xchg   al,bl
  4102d6:	add    BYTE PTR ds:0x15dabf5a,al
  4102dc:	sub    edi,DWORD PTR [edi+edx*1-0x717650e6]
  4102e3:	mov    ecx,0x33a618a2
  4102e8:	in     al,0x5c
  4102ea:	jl     0x410282
  4102ec:	push   es
  4102ed:	fild   WORD PTR [eax+0x40a9009a]
  4102f3:	sar    esi,1
  4102f5:	mov    BYTE PTR [esp+ebp*8-0x1e8e1114],cl
  4102fc:	(bad)  
  4102fd:	jp     0x410358
  4102ff:	sbb    DWORD PTR [edx+ecx*2],ebp
  410302:	push   0xfd9cb5aa
  410307:	fld    DWORD PTR [eax]
  410309:	jl     0x4102b3
  41030b:	mov    al,ds:0x4518b6b4
  410310:	jecxz  0x410336
  410312:	hlt    
  410313:	arpl   WORD PTR [ebx+0x538eeb7e],bx
  410319:	ja     0x410345
  41031b:	(bad)  
  41031c:	xchg   edx,eax
  41031d:	push   ecx
  41031e:	mov    ds:0x93964e0,eax
  410323:	retf   0x1b12
  410326:	cs jno 0x410343
  410329:	test   al,0xb3
  41032b:	sub    al,0x2d
  41032d:	mov    dh,0x30
  41032f:	adc    BYTE PTR [ebp-0x65305aa],dh
  410335:	adc    dl,ch
  410337:	sahf   
  410338:	jns    0x4103a5
  41033a:	pop    edi
  41033b:	add    BYTE PTR [eax+0x20a8480e],dl
  410341:	int    0x4
  410343:	into   
  410344:	(bad)  
  410346:	push   0xffffffcd
  410348:	clc    
  410349:	aad    0xed
  41034b:	shr    BYTE PTR [edi+eiz*4],cl
  41034e:	dec    eax
  41034f:	sbb    al,0xe4
  410351:	in     eax,0x4f
  410353:	int3   
  410354:	fwait
  410355:	dec    edi
  410356:	inc    ebp
  410357:	(bad)  
  410358:	jno    0x4103c6
  41035a:	aaa    
  41035b:	pop    eax
  41035c:	push   0x4c
  41035e:	(bad)  
  41035f:	cmp    al,0x20
  410361:	mov    edx,0xce1d7a2c
  410366:	stos   DWORD PTR es:[edi],eax
  410367:	jb     0x4103a6
  410369:	bound  esp,QWORD PTR [edx]
  41036b:	addr16 pop esi
  41036d:	mov    ah,0x52
  41036f:	fsubr  QWORD PTR [ebx-0x36d90d01]
  410375:	or     eax,0x83dc227c
  41037a:	xlat   BYTE PTR ds:[ebx]
  41037b:	mov    WORD PTR [esi],?
  41037d:	leave  
  41037e:	sub    BYTE PTR [esi-0x55a592ed],0x83
  410385:	(bad)  
  410386:	mov    bl,0x74
  410388:	pop    ds
  410389:	push   ebp
  41038a:	es retf 
  41038c:	mov    cl,0x3d
  41038e:	sti    
  41038f:	mov    ch,0x35
  410391:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410392:	push   edi
  410393:	mov    eax,ds:0x71c70486
  410398:	arpl   WORD PTR ds:0x3663e09c,di
  41039e:	call   0xa32e3855
  4103a3:	xchg   eax,ebx
  4103a5:	xchg   ebp,eax
  4103a6:	push   eax
  4103a7:	mov    ch,0x83
  4103a9:	sub    eax,0x9a22cd67
  4103ae:	pop    esp
  4103af:	mov    ecx,0x872b0c2f
  4103b4:	(bad)  
  4103b6:	adc    esp,ebx
  4103b8:	cmpps  xmm6,xmm5,0x22
  4103bc:	iret   
  4103bd:	and    DWORD PTR [ebx],edx
  4103bf:	arpl   WORD PTR [esp+eax*4-0x3c6a4a38],si
  4103c6:	push   edi
  4103c7:	in     eax,dx
  4103c8:	addr16 adc eax,0x46956fc7
  4103ce:	in     eax,0xc5
  4103d0:	or     eax,0x418c4a77
  4103d5:	dec    edx
  4103d6:	in     al,0xbd
  4103d8:	sbb    ecx,esi
  4103da:	mov    edi,ds
  4103dc:	sar    edi,1
  4103de:	popa   
  4103df:	(bad)  
  4103e1:	inc    edi
  4103e2:	inc    esi
  4103e3:	adc    ebx,ebx
  4103e5:	mov    ah,0x79
  4103e7:	mul    DWORD PTR [ecx-0x29d02fbb]
  4103ed:	and    edi,DWORD PTR [esi+0x22f73d02]
  4103f3:	push   0x8d8c6701
  4103f8:	loope  0x4103db
  4103fa:	cli    
  4103fb:	hlt    
  4103fc:	jnp    0x410394
  4103fe:	scas   eax,DWORD PTR es:[edi]
  4103ff:	mov    bh,0xd9
  410401:	sub    al,0x21
  410403:	mov    dl,0x8f
  410405:	push   ebx
  410406:	push   edi
  410407:	xchg   cl,bh
  410409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41040a:	mov    edx,0x5751dde3
  41040f:	add    dh,BYTE PTR [eax]
  410411:	dec    ebp
  410412:	cmp    al,0xe4
  410414:	xor    BYTE PTR [edi-0x57ff862e],dh
  41041a:	aam    0x95
  41041c:	sub    al,0xb1
  41041e:	or     dh,BYTE PTR [edi+0x7b7f14be]
  410424:	jecxz  0x410493
  410426:	shl    BYTE PTR [eax+0x64d049f6],1
  41042c:	sub    al,0x85
  41042e:	push   edi
  41042f:	ret    
  410430:	pushf  
  410431:	sbb    edx,DWORD PTR [ebx-0x11]
  410434:	sahf   
  410435:	xchg   edi,eax
  410436:	in     eax,dx
  410437:	push   ebx
  410438:	in     eax,0x35
  41043a:	outs   dx,BYTE PTR ds:[esi]
  41043b:	clc    
  41043c:	xchg   ebx,eax
  41043d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41043e:	sar    dh,cl
  410440:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410441:	pop    esi
  410442:	dec    edi
  410443:	push   0x14
  410445:	enter  0x83f4,0xb4
  410449:	sub    edx,DWORD PTR [eiz*1-0x15d20dac]
  410450:	xor    al,BYTE PTR [edi-0x28520b19]
  410456:	inc    ecx
  410457:	mov    ah,0xb3
  410459:	mov    dh,0x53
  41045b:	or     bl,dh
  41045d:	mov    eax,0xa8e4ad37
  410462:	or     edi,DWORD PTR [esi]
  410464:	idiv   DWORD PTR [eax+0x46]
  410467:	in     al,dx
  410468:	push   eax
  41046a:	push   ebx
  41046b:	ror    bh,0x69
  41046e:	mov    esi,0xb74e4c93
  410473:	je     0x410463
  410475:	add    eax,0x596f3a08
  41047a:	aam    0xe7
  41047c:	imul   ecx,DWORD PTR [edx+0x5619dd45],0x828c8daf
  410486:	dec    ebp
  410487:	fld    QWORD PTR [esi+0x59]
  41048a:	adc    BYTE PTR [eax],ch
  41048c:	push   ebp
  41048d:	mov    ds:0x5c3001d5,al
  410492:	ret    0xb2d0
  410495:	loopne 0x4104c5
  410497:	lods   eax,DWORD PTR ds:[esi]
  410498:	inc    esp
  410499:	lods   eax,DWORD PTR ds:[esi]
  41049a:	daa    
  41049b:	or     DWORD PTR [ebp+0x5338b8fb],esi
  4104a1:	and    al,0x7
  4104a3:	xor    BYTE PTR [edi-0x75af3cb1],bl
  4104a9:	push   edx
  4104aa:	xchg   DWORD PTR [eax],ecx
  4104ac:	sub    dh,BYTE PTR [edi-0xc]
  4104af:	dec    ebx
  4104b0:	sbb    eax,0xd314f082
  4104b5:	outs   dx,DWORD PTR ds:[esi]
  4104b6:	in     eax,0x6b
  4104b8:	pop    es
  4104b9:	hlt    
  4104ba:	pop    eax
  4104bb:	shl    BYTE PTR [esi+0x76a3ccb1],0x1e
  4104c2:	inc    edx
  4104c3:	add    ebx,DWORD PTR [esi-0x6d]
  4104c6:	cmp    eax,0xcd7b6637
  4104cb:	and    BYTE PTR [ebx-0x3d],cl
  4104ce:	xor    esp,ebp
  4104d0:	into   
  4104d1:	cmp    esi,DWORD PTR [ebx]
  4104d3:	(bad)  
  4104d4:	outs   dx,BYTE PTR ds:[esi]
  4104d5:	mov    al,ds:0x80505d8c
  4104da:	pop    edi
  4104db:	mov    ds:0x85c54e88,eax
  4104e0:	mov    eax,ds:0xb19b711a
  4104e5:	and    al,0xd3
  4104e7:	(bad)  
  4104e8:	push   esp
  4104e9:	fistp  WORD PTR [esi-0x71174376]
  4104ef:	fdivp  st(5),st
  4104f1:	and    BYTE PTR ds:[ecx],cl
  4104f4:	and    cl,BYTE PTR [ebx]
  4104f6:	hlt    
  4104f7:	clc    
  4104f8:	push   esi
  4104f9:	jb     0x4104c4
  4104fb:	jne    0x41049f
  4104fd:	in     al,0xcd
  4104ff:	out    dx,eax
  410500:	add    al,BYTE PTR [ecx-0x18]
  410503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410504:	pop    ebx
  410505:	and    eax,0xc1e889aa
  41050a:	mov    bl,0x74
  41050c:	jmp    0x410574
  41050e:	and    ebp,DWORD PTR [ecx-0x8]
  410511:	and    edi,DWORD PTR [ebp+0x2ead9854]
  410517:	jae    0x4104c7
  410519:	dec    ebx
  41051a:	ins    DWORD PTR es:[edi],dx
  41051b:	mov    ebp,0x4a6b51a5
  410520:	loopne 0x410566
  410522:	aaa    
  410523:	jb     0x410558
  410525:	mov    ebx,0x99239ee4
  41052a:	test   DWORD PTR ds:0x20674c92,0xb678c960
  410534:	popf   
  410535:	retf   0x27d
  410538:	adc    ah,BYTE PTR [edx+0x4cb799a9]
  41053e:	push   cs
  41053f:	or     eax,0xd07e76da
  410544:	inc    eax
  410545:	jo     0x410585
  410547:	push   eax
  410548:	fcmovnu st,st(5)
  41054a:	outs   dx,DWORD PTR ds:[esi]
  41054b:	push   es
  41054c:	bound  eax,QWORD PTR [esi-0x3d683d7d]
  410552:	sub    ecx,DWORD PTR [eax]
  410554:	iret   
  410555:	jmp    DWORD PTR [ebx+0x17]
  410558:	xor    eax,0x705a0648
  41055d:	cmc    
  41055e:	inc    edi
  41055f:	adc    eax,ecx
  410561:	add    BYTE PTR ds:[ebx+0x26],0xa9
  410566:	call   DWORD PTR [eax]
  410568:	adc    BYTE PTR [eax+0x0],ah
  41056b:	out    dx,eax
  41056c:	aas    
  41056d:	js     0x4105e1
  41056f:	push   ebp
  410570:	in     eax,0x19
  410572:	or     edi,DWORD PTR [edx]
  410574:	test   edi,ebx
  410576:	inc    esp
  410577:	mov    es,WORD PTR [edi]
  410579:	arpl   WORD PTR [ebx-0x6fc9b00],sp
  41057f:	sub    al,0x61
  410581:	es ds in eax,0x63
  410585:	xchg   DWORD PTR [esi+eiz*1],ebp
  410588:	scas   al,BYTE PTR es:[edi]
  410589:	inc    esi
  41058a:	mov    dh,0x20
  41058c:	fnstcw WORD PTR [ecx+ecx*4-0x7b]
  410590:	cmp    DWORD PTR [ebp-0x38],esp
  410593:	inc    edi
  410594:	pop    ebp
  410595:	shl    DWORD PTR [ecx],cl
  410597:	mov    es,WORD PTR [eax]
  410599:	xchg   DWORD PTR [esi+edi*2],eax
  41059c:	cmp    ecx,DWORD PTR [ebx-0x7c]
  41059f:	and    dl,BYTE PTR [ebx]
  4105a1:	and    cl,0xd
  4105a4:	push   0xffffffc2
  4105a6:	add    ecx,edx
  4105a8:	(bad)  
  4105a9:	jp     0x4105cf
  4105ab:	div    DWORD PTR ds:[esi]
  4105ae:	pop    edi
  4105af:	cwde   
  4105b0:	jne    0x4105f8
  4105b2:	popa   
  4105b3:	outs   dx,DWORD PTR ds:[esi]
  4105b4:	xchg   ecx,eax
  4105b5:	mov    DWORD PTR [ebx+0x4a97b44d],ecx
  4105bb:	sar    DWORD PTR [ecx+ebx*2+0xb6ee139],1
  4105c2:	or     eax,0xedaafa2e
  4105c7:	sti    
  4105c8:	or     ebx,DWORD PTR [ecx-0x5c1e2bf2]
  4105ce:	pop    ecx
  4105cf:	std    
  4105d0:	inc    esi
  4105d1:	adc    esp,DWORD PTR [edi+0x10278031]
  4105d7:	rol    ecx,1
  4105d9:	ret    0x8b0b
  4105dc:	adc    BYTE PTR [edx+ebx*4-0x4e],bl
  4105e0:	jmp    0x8fd3:0x4ef0a6b4
  4105e7:	add    al,0xba
  4105e9:	test   eax,0x444733fe
  4105ee:	dec    ebx
  4105ef:	jno    0x4105d0
  4105f1:	leave  
  4105f2:	sub    BYTE PTR [eax],dh
  4105f4:	ret    0x20de
  4105f7:	fcomip st,st(0)
  4105f9:	pop    esp
  4105fa:	push   0xffffffb3
  4105fc:	js     0x410590
  4105fe:	mov    cl,0x62
  410600:	pushf  
  410601:	ret    
  410602:	mov    ebx,0xa7430aba
  410607:	hlt    
  410608:	call   0xb7ef:0x4427f01
  41060f:	inc    ecx
  410610:	push   esp
  410611:	sub    eax,0x175a6784
  410616:	imul   esp,DWORD PTR fs:[ebp-0x13],0x9c92ceb0
  41061e:	fdivr  st(3),st
  410620:	rol    BYTE PTR [edx],cl
  410622:	imul   esp,DWORD PTR [ebx],0x58def41b
  410628:	and    eax,0x7fe3ecbb
  41062d:	push   0xed89d6de
  410632:	add    al,0x3b
  410634:	sahf   
  410635:	into   
  410636:	and    eax,0x75859493
  41063b:	push   0x32
  41063d:	out    dx,al
  41063e:	sub    DWORD PTR [edx-0x15],edi
  410641:	sbb    al,0x8
  410643:	pop    ecx
  410644:	in     eax,0xcc
  410646:	pop    edx
  410647:	(bad)
  41064b:	add    ebx,DWORD PTR [esi+0x4b00b8cd]
  410651:	lock (bad) 
  410653:	mov    dh,BYTE PTR [eax+0x561cf6b4]
  410659:	mov    edx,0x9e5b16b6
  41065e:	mov    dh,0x57
  410660:	mov    eax,ds:0xc1ede5c3
  410665:	dec    edi
  410666:	test   BYTE PTR [edi+0x14],ah
  410669:	jge    0x41061b
  41066b:	mov    esp,0xe444c09b
  410670:	inc    esi
  410671:	ss fwait
  410673:	or     ebx,DWORD PTR [esi]
  410675:	arpl   WORD PTR [esi+ebp*4+0x5f],si
  410679:	mov    edx,0xdcea8848
  41067e:	inc    eax
  41067f:	sub    eax,0x471daa50
  410684:	jle    0x410613
  410686:	mov    eax,0x9ff032d2
  41068b:	shl    DWORD PTR [esi+0x4a],0xf8
  41068f:	cmp    BYTE PTR [eax+0x723c73fb],ah
  410695:	add    DWORD PTR [edx-0x33],esi
  410698:	mov    ah,0xed
  41069a:	fisttp QWORD PTR [ebp+0x35]
  41069d:	arpl   WORD PTR [ebp+edx*1-0xf],cx
  4106a1:	dec    esp
  4106a2:	mov    eax,ds:0x6753d39
  4106a7:	(bad)  
  4106a8:	pop    esi
  4106a9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4106ab:	jmp    0x87dc3e92
  4106b0:	into   
  4106b1:	nop
  4106b2:	cli    
  4106b3:	sbb    eax,0xe793720f
  4106b8:	or     eax,0x3cebca8d
  4106bd:	mov    WORD PTR [esi],es
  4106bf:	popf   
  4106c0:	dec    edi
  4106c1:	jo     0x4106eb
  4106c3:	cmp    ebx,DWORD PTR [esi+0x5e]
  4106c6:	mov    ebp,DWORD PTR [edi]
  4106c8:	shl    BYTE PTR [ecx-0x1],1
  4106cb:	aam    0x79
  4106cd:	bnd jbe 0x4106cd
  4106d0:	out    0x70,al
  4106d2:	ins    BYTE PTR es:[edi],dx
  4106d3:	ret    
  4106d4:	xor    eax,0x2dde9b14
  4106d9:	test   BYTE PTR [ebp+0x74],dl
  4106dc:	push   cs
  4106dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106de:	repz and al,0xed
  4106e1:	and    al,0xa3
  4106e3:	out    0xaa,eax
  4106e5:	inc    edx
  4106e6:	test   eax,0xc9a02f46
  4106eb:	add    al,0x9a
  4106ed:	or     DWORD PTR [edi+0x68],ecx
  4106f0:	dec    ebx
  4106f1:	test   DWORD PTR [eax],eax
  4106f3:	inc    edi
  4106f4:	pop    ds
  4106f5:	into   
  4106f6:	mov    eax,0xfbacf0e8
  4106fb:	enter  0x8539,0xf6
  4106ff:	push   ebx
  410700:	mov    ds:0x16599067,al
  410705:	xchg   edx,eax
  410706:	sahf   
  410707:	inc    ebp
  410708:	mov    eax,0x63fdc4da
  41070d:	mov    WORD PTR [edx-0x4b],ss
  410710:	cmp    ch,BYTE PTR [esi-0x68d2048a]
  410716:	xchg   ebp,eax
  410717:	mul    BYTE PTR [ebx-0x67657698]
  41071d:	in     al,dx
  41071e:	xor    bh,al
  410720:	lock out 0xc3,al
  410723:	sbb    bh,BYTE PTR [edi+0x60]
  410726:	jo     0x41075f
  410728:	cmp    bh,BYTE PTR [ebx+0x7c0ef5b8]
  41072e:	in     al,0xd6
  410730:	arpl   WORD PTR [edx+0x4e],cx
  410733:	clc    
  410734:	add    al,0xee
  410736:	imul   ecx,DWORD PTR [esi-0x79],0xffffff99
  41073a:	and    eax,0x30ea2259
  41073f:	xor    al,0xea
  410741:	out    0xed,al
  410743:	push   ebp
  410744:	sbb    al,0xcc
  410746:	movhps xmm5,QWORD PTR [ecx+0x58]
  41074a:	xor    BYTE PTR [ecx-0x35],dh
  41074d:	out    0x8,eax
  41074f:	loop   0x410759
  410751:	int3   
  410752:	fmul   QWORD PTR [ecx-0x41]
  410755:	aas    
  410756:	and    BYTE PTR [esp+edx*1],ah
  410759:	ins    DWORD PTR es:[edi],dx
  41075a:	xor    eax,0x88fed43f
  41075f:	jmp    DWORD PTR [eax-0x67902fdb]
  410765:	cli    
  410766:	daa    
  410767:	push   0x81ced329
  41076c:	or     BYTE PTR [edx+0x4fd2b06d],ch
  410772:	adc    DWORD PTR [eax+eax*8+0x3a],edx
  410776:	jno    0x410704
  410778:	leave  
  410779:	xor    BYTE PTR [eax+0x4d],ah
  41077c:	cmp    eax,0xbd028ace
  410781:	icebp  
  410782:	add    ebp,DWORD PTR [eax-0x7c5442cf]
  410788:	inc    edx
  410789:	or     ch,bh
  41078b:	sbb    al,0xf4
  41078d:	mov    ah,0x81
  41078f:	ja     0x410789
  410791:	xchg   edx,eax
  410792:	outs   dx,DWORD PTR ds:[esi]
  410793:	adc    DWORD PTR [edi+0x12f1f212],0x62aeee6f
  41079d:	mov    eax,0x110e62e0
  4107a2:	jne    0x41073e
  4107a4:	(bad)  
  4107a6:	and    esp,DWORD PTR [esi-0x285d76fe]
  4107ac:	aas    
  4107ad:	inc    esp
  4107ae:	xor    al,0x9e
  4107b0:	retf   
  4107b1:	jnp    0x4107b4
  4107b3:	fadd   DWORD PTR [ecx+0x296a1318]
  4107b9:	adc    esp,DWORD PTR [ebp+eax*2+0x1d]
  4107bd:	cmp    dl,BYTE PTR [esi+0x5e]
  4107c0:	mov    ah,0x3f
  4107c2:	mov    eax,0xe41fab0d
  4107c7:	cld    
  4107c8:	jp     0x410810
  4107ca:	or     eax,0xe32549fe
  4107cf:	xlat   BYTE PTR ds:[ebx]
  4107d0:	cmp    DWORD PTR [eax+ecx*2+0x21],0xbf4cb946
  4107d8:	or     esp,DWORD PTR [edx+0x5a]
  4107db:	add    al,BYTE PTR [ecx]
  4107dd:	lods   eax,DWORD PTR ds:[esi]
  4107de:	adc    BYTE PTR [edx-0x2b],cl
  4107e1:	jmp    0x5c62:0x9baf2d22
  4107e8:	jb     0x4107c8
  4107ea:	addr16 dec ebx
  4107ec:	ins    DWORD PTR es:[edi],dx
  4107ed:	mov    al,ds:0xe1235150
  4107f2:	cmp    bl,BYTE PTR [edx+ecx*4]
  4107f5:	jnp    0x410789
  4107f7:	pop    ebp
  4107f8:	inc    ebp
  4107f9:	and    DWORD PTR [eax-0x231750fb],edi
  4107ff:	ror    BYTE PTR [ecx+0x63],1
  410802:	mov    DWORD PTR [ebx+0x5f467573],ecx
  410808:	xor    BYTE PTR [edi-0x37],0x78
  41080c:	outs   dx,BYTE PTR ds:[esi]
  41080d:	jmp    eax
  41080f:	cld    
  410810:	call   0x9cd8:0x6ca9493a
  410817:	ret    
  410818:	mov    esi,0xf9ff577e
  41081d:	adc    eax,ebx
  41081f:	mov    dh,0xad
  410821:	mov    ?,WORD PTR [ecx]
  410823:	xchg   ebx,eax
  410824:	in     eax,dx
  410825:	fild   WORD PTR [eax]
  410827:	adc    ebp,ebx
  410829:	loope  0x410850
  41082b:	add    bl,BYTE PTR [edi]
  41082d:	je     0x41084b
  41082f:	mov    al,0x26
  410831:	out    0x16,eax
  410833:	loop   0x4107f8
  410835:	dec    eax
  410836:	or     ah,bh
  410838:	out    0xc1,eax
  41083a:	xor    al,BYTE PTR [esi+0x739136f7]
  410840:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410841:	push   ecx
  410842:	or     al,0x71
  410844:	cld    
  410845:	push   eax
  410846:	mov    bh,0xfa
  410848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410849:	retf   
  41084a:	nop
  41084b:	adc    ch,BYTE PTR [ebx-0x5b7ddc78]
  410851:	xchg   edx,eax
  410852:	mov    esp,?
  410854:	add    eax,0x8e0d251b
  410859:	mov    ax,WORD PTR [ebx-0x4c]
  41085d:	mov    DWORD PTR fs:[eax],esi
  410860:	jmp    0x34e:0x51361d43
  410867:	cmp    DWORD PTR [ecx],0x14
  41086a:	sbb    ah,BYTE PTR [ecx+0x10]
  41086d:	sbb    BYTE PTR [ebx-0x6c],cl
  410870:	mov    ds,WORD PTR [esi]
  410872:	test   eax,0x6701cdca
  410877:	push   DWORD PTR [edi-0x2af44df0]
  41087d:	(bad)  
  41087e:	out    0x39,al
  410880:	loop   0x4108dd
  410882:	sbb    bh,ah
  410884:	fs sub al,0xb5
  410887:	lds    ebx,FWORD PTR [ebx-0x46]
  41088a:	clc    
  41088b:	or     eax,DWORD PTR [ecx]
  41088d:	enter  0xbcf6,0x3b
  410891:	jle    0x410816
  410893:	or     al,0x48
  410895:	fnstsw WORD PTR [edx]
  410897:	push   ebx
  410898:	push   eax
  410899:	retf   
  41089a:	add    DWORD PTR [edi-0x16],ebx
  41089d:	ret    0x984e
  4108a0:	(bad)  
  4108a1:	sbb    DWORD PTR [eax-0x5e],eax
  4108a4:	imul   esi,esp,0x82196411
  4108aa:	and    ebp,DWORD PTR [edx+0x1a]
  4108ad:	cwde   
  4108ae:	dec    esp
  4108af:	sbb    eax,0x9865b89d
  4108b4:	mov    gs,WORD PTR [ebp+0x7d]
  4108b7:	lods   eax,DWORD PTR ds:[esi]
  4108b8:	jbe    0x4108f4
  4108ba:	arpl   WORD PTR [ebx+0x1f],bx
  4108bd:	adc    DWORD PTR [esi+0x7064aa87],edx
  4108c3:	shl    DWORD PTR [esi+0x3a],cl
  4108c6:	xchg   esi,eax
  4108c7:	push   esi
  4108c8:	shl    BYTE PTR [ebp-0x4b],0xf4
  4108cc:	mov    al,0x53
  4108ce:	lock cld 
  4108d0:	cld    
  4108d1:	sub    al,0x5a
  4108d3:	push   cs
  4108d4:	jl     0x4108ab
  4108d6:	jmp    0x9cdc:0xe9d194fe
  4108dd:	rcl    BYTE PTR [esi],cl
  4108df:	sub    al,0x65
  4108e1:	lods   eax,DWORD PTR ds:[esi]
  4108e2:	sub    esp,edx
  4108e4:	ror    ah,0x6c
  4108e7:	mov    ebx,0xd8adf13c
  4108ec:	aaa    
  4108ed:	in     eax,0xfe
  4108ef:	aad    0x86
  4108f1:	enter  0x9c69,0xc0
  4108f5:	(bad)  
  4108f6:	dec    edx
  4108f7:	aad    0x92
  4108f9:	jns    0x4108a8
  4108fb:	sbb    ah,ah
  4108fd:	fadd   QWORD PTR [esi-0x1a42797a]
  410903:	in     al,0x26
  410905:	sbb    DWORD PTR [esi+ecx*4+0x46],0xbb7f761d
  41090d:	push   edx
  41090e:	mov    DWORD PTR [ebx],ebp
  410910:	js     0x4108bc
  410912:	inc    esp
  410913:	imul   ecx,DWORD PTR [edi+0x6d4b19a6],0x4a72f9b9
  41091d:	xor    bl,BYTE PTR [ecx+0x38]
  410920:	mov    BYTE PTR [edi-0x34012784],bh
  410926:	cwde   
  410927:	pop    ds
  410928:	push   ebx
  410929:	jl     0x4108e9
  41092b:	(bad)  
  41092c:	int    0x70
  41092e:	(bad)  
  41092f:	(bad)  
  410930:	or     ebp,ebx
  410932:	stc    
  410933:	ret    0x952e
  410936:	int3   
  410937:	call   0x25d0:0x68219b0e
  41093e:	pop    ebp
  41093f:	daa    
  410940:	push   es
  410941:	xlat   BYTE PTR ds:[ebx]
  410942:	shr    BYTE PTR [esi-0xc74e809],1
  410948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410949:	les    ebx,FWORD PTR [esp+esi*1-0x7d]
  41094d:	mov    edi,0x721d31d4
  410952:	enter  0xbcae,0x8d
  410956:	mov    eax,0xa9b230f6
  41095b:	out    0xe7,al
  41095d:	or     eax,0xd2cdb9af
  410962:	push   ecx
  410963:	sbb    al,0xe
  410965:	ins    DWORD PTR es:[edi],dx
  410966:	xor    esi,DWORD PTR [esi+0xab8ab51]
  41096c:	and    BYTE PTR [edx+0x6],dh
  41096f:	out    dx,eax
  410970:	inc    edx
  410971:	pop    edi
  410972:	xor    bl,BYTE PTR [esi-0x549c29c]
  410978:	adc    al,0xcc
  41097a:	cmp    BYTE PTR [esi],dh
  41097c:	and    eax,0x8cb33a27
  410981:	(bad)  
  410982:	pop    ds
  410983:	mov    ch,bh
  410985:	lods   eax,DWORD PTR ds:[esi]
  410986:	scas   eax,DWORD PTR es:[edi]
  410987:	jne    0x410909
  410989:	and    eax,DWORD PTR [ebx-0xf759422]
  41098f:	pop    esp
  410990:	fbld   TBYTE PTR [esi]
  410992:	cmp    eax,0x7c50130f
  410997:	cmp    esp,DWORD PTR [ebp+0x3ff5c5cc]
  41099d:	leave  
  41099e:	mov    ah,0xf7
  4109a0:	xor    al,0x3a
  4109a2:	mov    eax,ds:0xce312bb
  4109a7:	fidivr DWORD PTR [eax]
  4109a9:	jecxz  0x4109ed
  4109ab:	mov    bh,0xc8
  4109ad:	test   DWORD PTR [edi-0x29],0x578c005
  4109b4:	fstp   TBYTE PTR [ebx-0x3b]
  4109b7:	pusha  
  4109b8:	adc    BYTE PTR [edi-0x66f55c00],bl
  4109be:	retf   0x608e
  4109c1:	jge    0x410998
  4109c3:	fwait
  4109c4:	sbb    eax,0xefa2ceca
  4109c9:	jle    0x410a37
  4109cb:	jns    0x4109dd
  4109cd:	dec    esp
  4109ce:	pop    ecx
  4109cf:	add    DWORD PTR [eax-0x237d5b93],ecx
  4109d5:	jae    0x41095e
  4109d7:	add    eax,0xffffffdd
  4109da:	cmp    dh,BYTE PTR [ebx-0x4c93acfa]
  4109e0:	pop    esp
  4109e1:	pop    esp
  4109e2:	mov    cl,0xcd
  4109e4:	test   eax,0x7e00e04f
  4109e9:	mov    dh,BYTE PTR [ecx-0x1b59ba3e]
  4109ef:	arpl   WORD PTR [eax+0xa951030],bp
  4109f5:	jecxz  0x410a68
  4109f7:	or     al,0x1e
  4109f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109fa:	imul   ebx,ecx,0x221c12ce
  410a00:	and    DWORD PTR [esi-0x3],ebx
  410a03:	retf   0xdbd3
  410a06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a07:	mov    ebx,0xbdab37ff
  410a0c:	test   eax,0x86bc14e9
  410a11:	mov    bl,BYTE PTR [ebx]
  410a13:	out    dx,eax
  410a14:	jo     0x4109ed
  410a16:	aam    0x35
  410a18:	mov    ebp,0xaebf7b5f
  410a1d:	inc    esp
  410a1e:	push   cs
  410a1f:	jns    0x4109b0
  410a21:	xor    BYTE PTR [ebp+0x419daceb],al
  410a27:	sbb    DWORD PTR [ebp-0x73c8546c],ebp
  410a2d:	xor    eax,DWORD PTR [esi-0x36b217ca]
  410a33:	xchg   DWORD PTR [ebp-0x6714a435],ebp
  410a39:	pop    esi
  410a3a:	scas   eax,DWORD PTR es:[edi]
  410a3b:	mov    cl,0x95
  410a3d:	dec    ebx
  410a3e:	xchg   ebp,eax
  410a3f:	mov    al,0x20
  410a41:	sub    BYTE PTR [edx+0x1bd855b8],0x54
  410a48:	xor    dh,ah
  410a4a:	data16 daa 
  410a4c:	push   0xb67102c1
  410a51:	sar    BYTE PTR [edx+ebx*8+0x36],cl
  410a55:	sub    bh,BYTE PTR [edi]
  410a57:	mov    DWORD PTR [esi+0x2d],ecx
  410a5a:	hlt    
  410a5b:	xor    al,0x8d
  410a5d:	mov    ch,0x7a
  410a5f:	jae    0x410a6e
  410a61:	sub    BYTE PTR [eax],ah
  410a63:	lods   al,BYTE PTR ds:[esi]
  410a64:	pusha  
  410a65:	and    BYTE PTR [eax],dh
  410a67:	pop    ebx
  410a68:	mov    BYTE PTR ds:0x7f1d98f4,0xb6
  410a6f:	push   edi
  410a70:	pop    edx
  410a71:	jae    0x410a4e
  410a73:	scas   eax,DWORD PTR es:[edi]
  410a74:	sbb    eax,0xffffffa1
  410a77:	(bad)  
  410a78:	jmp    0xc481:0x7390c2a
  410a7f:	icebp  
  410a80:	enter  0x8784,0x69
  410a84:	scas   al,BYTE PTR es:[edi]
  410a85:	xor    ah,BYTE PTR [esp+edi*2]
  410a88:	push   0xffffffd9
  410a8a:	add    ecx,ebp
  410a8c:	fst    DWORD PTR [ebx+0x1f]
  410a8f:	mov    al,0xd7
  410a91:	adc    eax,edx
  410a93:	mov    esp,0x51c1e21
  410a98:	adc    al,0x52
  410a9a:	cmp    dh,0x41
  410a9d:	addr16 dec edx
  410a9f:	mov    edx,0x926d5c79
  410aa4:	sbb    al,0xb0
  410aa6:	push   eax
  410aa7:	dec    edi
  410aa8:	fimul  DWORD PTR [ebx-0x46d407ac]
  410aae:	xor    bh,cl
  410ab0:	fidivr DWORD PTR [esi]
  410ab2:	cmp    ch,BYTE PTR [ebp-0x7741f4c0]
  410ab8:	jp     0x410ac5
  410aba:	or     al,0x9a
  410abc:	jmp    0x1372:0x61a81b7d
  410ac3:	les    edi,FWORD PTR [eax+0x68]
  410ac6:	in     eax,0x2
  410ac8:	push   edi
  410ac9:	inc    DWORD PTR [ecx-0x3fc6f4d7]
  410acf:	aad    0x83
  410ad1:	repnz dec esi
  410ad3:	mov    BYTE PTR [edi+0x59],dl
  410ad6:	lahf   
  410ad7:	push   ds
  410ad8:	out    0x92,eax
  410ada:	mov    edi,0x8f35f6d2
  410adf:	ror    ebx,0x9f
  410ae2:	out    0x91,eax
  410ae4:	push   ss
  410ae5:	scas   eax,DWORD PTR es:[edi]
  410ae6:	jo     0x410a7d
  410ae8:	shl    DWORD PTR [eax],1
  410aea:	je     0x410af2
  410aec:	test   al,0x3a
  410aee:	fld    QWORD PTR [edi+0x7c987e90]
  410af4:	sub    eax,0x6d716042
  410af9:	jge    0x410a94
  410afb:	lahf   
  410afc:	adc    DWORD PTR [ebx],ebx
  410afe:	xor    eax,0xd6239102
  410b03:	jmp    0x6a2172bd
  410b08:	sub    BYTE PTR ds:0x59e050bb,bl
  410b0e:	mov    dh,BYTE PTR [edi]
  410b10:	dec    ebp
  410b11:	add    DWORD PTR [ebx-0x2e],eax
  410b14:	jmp    DWORD PTR [edx-0x53]
  410b17:	xchg   esp,eax
  410b18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b19:	retf   
  410b1a:	mov    al,0x73
  410b1c:	pusha  
  410b1d:	jecxz  0x410ae0
  410b1f:	push   esp
  410b20:	mov    ch,0xe6
  410b22:	fpatan 
  410b24:	scas   eax,DWORD PTR es:[edi]
  410b25:	repz sti 
  410b27:	fwait
  410b28:	ja     0x410b22
  410b2a:	dec    edx
  410b2b:	add    BYTE PTR [ebp+0x5ebc140],dh
  410b31:	jge    0x410ba5
  410b33:	push   ds
  410b34:	mov    esp,0xe97d6cd7
  410b39:	or     eax,DWORD PTR [edx-0x34]
  410b3c:	nop
  410b3d:	mov    cl,0xe7
  410b3f:	or     ah,dh
  410b41:	nop
  410b42:	mov    bh,0xa9
  410b44:	pop    ecx
  410b45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b46:	cmp    edx,esi
  410b48:	push   ds
  410b49:	fiadd  DWORD PTR [eax]
  410b4b:	bound  eax,QWORD PTR [ebx-0x15]
  410b4e:	push   ss
  410b4f:	je     0x410bb1
  410b51:	outs   dx,DWORD PTR ds:[esi]
  410b52:	mov    dh,0x8
  410b54:	and    esi,DWORD PTR [edx+0x46]
  410b57:	sahf   
  410b58:	ret    
  410b59:	(bad)  
  410b5b:	in     eax,0xf5
  410b5d:	sahf   
  410b5e:	and    ecx,DWORD PTR [ecx-0x544c7efc]
  410b64:	int    0xfd
  410b66:	cmp    al,0x5b
  410b68:	sub    DWORD PTR [edx-0x2],ecx
  410b6b:	or     bh,BYTE PTR [ebp-0xa]
  410b6e:	xor    DWORD PTR [ecx+0x5e2a45dd],eax
  410b74:	jge    0x410b22
  410b76:	in     eax,dx
  410b77:	ins    DWORD PTR es:[edi],dx
  410b78:	sub    ah,BYTE PTR [edx-0x6a]
  410b7b:	popf   
  410b7c:	mov    cl,0xdd
  410b7e:	sub    DWORD PTR [eax],esp
  410b80:	addr16 loopne 0x410b17
  410b83:	repz cs inc esi
  410b86:	or     dh,BYTE PTR [edi-0x40812135]
  410b8c:	cs leave 
  410b8e:	jecxz  0x410b68
  410b90:	xchg   ecx,eax
  410b91:	stc    
  410b92:	popf   
  410b93:	int3   
  410b94:	push   0x40
  410b96:	(bad)  
  410b97:	call   0xac43:0x526524bf
  410b9e:	inc    ebp
  410b9f:	jl     0x410c0c
  410ba1:	sti    
  410ba2:	jmp    0xf189b578
  410ba7:	arpl   WORD PTR [edi+0x6dba45b6],di
  410bad:	imul   eax,ebx,0x42
  410bb0:	push   ss
  410bb1:	cwde   
  410bb2:	sub    eax,0x7ab204ed
  410bb7:	lods   al,BYTE PTR ds:[esi]
  410bb8:	mov    bl,0x3d
  410bba:	and    eax,0x21c05
  410bbf:	pop    ss
  410bc0:	xchg   esi,eax
  410bc1:	jmp    0x3cb25637
  410bc6:	pop    ss
  410bc7:	int    0x97
  410bc9:	ds mov bl,0xd1
  410bcc:	imul   ebx,DWORD PTR [eax+0x27],0x22
  410bd0:	loop   0x410bc4
  410bd2:	xor    eax,0x76b5f78a
  410bd7:	push   0xffffff97
  410bd9:	daa    
  410bda:	push   0xfffffff1
  410bdc:	and    dl,BYTE PTR [esi]
  410bde:	or     al,0x35
  410be0:	xor    DWORD PTR [esi-0x38d28d81],0x73dba5f6
  410bea:	pop    esi
  410beb:	jp     0x410be2
  410bed:	push   edx
  410bee:	push   edi
  410bef:	arpl   WORD PTR [eax],bx
  410bf1:	test   DWORD PTR [eax],ecx
  410bf3:	shl    dh,cl
  410bf5:	sub    DWORD PTR [ebp-0x7],ebx
  410bf8:	pop    ecx
  410bf9:	cmp    edi,DWORD PTR [edx-0x188b3d93]
  410bff:	clc    
  410c00:	es jns 0x410c14
  410c03:	inc    esp
  410c04:	outs   dx,BYTE PTR ds:[esi]
  410c05:	jmp    0x9cb2d8e4
  410c0a:	push   ecx
  410c0b:	mov    es,WORD PTR [eax+ebp*8+0x7f]
  410c0f:	inc    esi
  410c10:	scas   al,BYTE PTR es:[edi]
  410c11:	jp     0x410c2d
  410c13:	adc    BYTE PTR [edi-0x228253ad],ch
  410c19:	clc    
  410c1a:	sti    
  410c1b:	cmp    eax,0xbb2b8518
  410c20:	mov    esp,0x5a61f8d1
  410c25:	sahf   
  410c26:	mov    BYTE PTR [edx*8+0xb15c208],al
  410c2d:	(bad)  [ebp+eiz*4+0x4f]
  410c31:	fisub  WORD PTR [esi-0x5]
  410c34:	mov    dl,0xfb
  410c36:	mov    ah,0x81
  410c38:	mov    bl,0xde
  410c3b:	ds and eax,0x172588e8
  410c41:	sub    eax,0x439dd096
  410c46:	mov    esp,0xa18cfb55
  410c4b:	inc    esp
  410c4c:	in     eax,dx
  410c4d:	(bad)  
  410c4e:	nop
  410c4f:	push   0x71
  410c51:	mov    DWORD PTR [esi+eiz*8+0x4dfabb59],esp
  410c58:	jae    0x410c4b
  410c5a:	mov    dl,0xa7
  410c5c:	int    0x21
  410c5e:	mov    ds:0x86b81115,al
  410c63:	test   al,0x4b
  410c66:	pop    ss
  410c67:	cdq    
  410c68:	pop    ebx
  410c69:	sbb    al,0x57
  410c6b:	or     esp,DWORD PTR ss:[ebp-0x9]
  410c6f:	mov    dl,0xae
  410c71:	stos   BYTE PTR es:[edi],al
  410c72:	xchg   DWORD PTR [ebx],ecx
  410c74:	fbstp  TBYTE PTR [ebp+0x7f0a4bbf]
  410c7a:	or     al,0x80
  410c7c:	lods   eax,DWORD PTR ds:[esi]
  410c7d:	mov    bh,0xe5
  410c7f:	dec    esp
  410c80:	ror    BYTE PTR [ebx+edi*1+0x58],0x46
  410c85:	mov    esp,0x2e626f4e
  410c8a:	and    eax,0x7367d3c5
  410c8f:	cmc    
  410c90:	stos   BYTE PTR es:[edi],al
  410c91:	int    0xc9
  410c93:	sbb    al,0x78
  410c95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c96:	xor    al,0x39
  410c98:	push   esi
  410c99:	gs or  al,0x92
  410c9c:	inc    edx
  410c9d:	fwait
  410c9e:	push   esp
  410c9f:	adc    DWORD PTR [eax],esi
  410ca1:	adc    al,0x6b
  410ca3:	jns    0x410ce8
  410ca5:	jmp    0x3c482cde
  410caa:	pop    ebx
  410cab:	cdq    
  410cac:	gs mov dl,0xc9
  410caf:	imul   ebp,DWORD PTR [edi],0xbb4061f
  410cb5:	jmp    0x8fa4afd8
  410cba:	sbb    eax,0xe5d34d3
  410cbf:	(bad)  
  410cc0:	fnstenv [edi+0x6dc80109]
  410cc6:	loopne 0x410cf3
  410cc8:	push   edi
  410cc9:	inc    esp
  410cca:	add    BYTE PTR [edi-0x4c],dh
  410ccd:	xchg   ecx,eax
  410cce:	fs pop ss
  410cd0:	or     bl,dh
  410cd2:	xlat   BYTE PTR ds:[ebx]
  410cd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cd4:	out    0x3e,al
  410cd6:	int3   
  410cd7:	out    0x15,al
  410cd9:	xchg   ebx,eax
  410cda:	lahf   
  410cdb:	je     0x410d2f
  410cdd:	and    ebp,eax
  410cdf:	push   ecx
  410ce0:	push   ebx
  410ce1:	xlat   BYTE PTR ds:[ebx]
  410ce2:	pop    ds
  410ce3:	cld    
  410ce4:	xchg   ecx,eax
  410ce5:	in     al,dx
  410ce6:	inc    edi
  410ce7:	dec    ecx
  410ce8:	add    eax,0x432bea7e
  410ced:	ja     0x410c8e
  410cef:	aaa    
  410cf0:	push   edx
  410cf1:	xor    BYTE PTR [ebx],0xe4
  410cf4:	pop    ebp
  410cf5:	fidivr DWORD PTR [ecx+eiz*1-0x22e2e845]
  410cfc:	inc    eax
  410cfd:	cmc    
  410cfe:	xor    cl,al
  410d00:	push   edi
  410d01:	punpcklbw mm2,DWORD PTR ds:0x994de86a
  410d08:	into   
  410d09:	ins    DWORD PTR es:[edi],dx
  410d0a:	mov    al,ds:0x591bc8b0
  410d0f:	int3   
  410d10:	data16 sti 
  410d12:	and    eax,0x2dbaab4b
  410d17:	cmp    cl,ch
  410d19:	jmp    0xa01082eb
  410d1e:	and    al,BYTE PTR [edx-0x27]
  410d21:	mov    ds:0x645d7fdc,eax
  410d26:	outs   dx,DWORD PTR ds:[esi]
  410d27:	call   0xdf832906
  410d2c:	or     ebp,esp
  410d2e:	mov    esp,0x82dbf9ed
  410d33:	stos   DWORD PTR es:[edi],eax
  410d34:	jb     0x410d1b
  410d36:	mov    ds:0xdde994b9,al
  410d3b:	jmp    0x410d3b
  410d3d:	xor    BYTE PTR ds:0x3ae2e8a,cl
  410d43:	les    ecx,FWORD PTR [edi]
  410d45:	(bad)  
  410d46:	iret   
  410d47:	not    BYTE PTR [esi]
  410d49:	mov    ch,0x2e
  410d4b:	call   0xc3ba8606
  410d50:	sub    ebp,DWORD PTR [eax+ecx*8-0x6c5eac32]
  410d57:	mov    di,0x27d1
  410d5b:	sti    
  410d5c:	cmp    DWORD PTR [eax+eiz*8-0x67c4a7ff],ebx
  410d63:	ror    DWORD PTR [ebp-0x62d3cc07],cl
  410d69:	add    DWORD PTR [eax-0x73],edi
  410d6c:	sub    ah,BYTE PTR [ebx+ecx*8+0x7e]
  410d70:	mov    bl,0x22
  410d72:	or     al,BYTE PTR [ebx+0x3d1bc2ec]
  410d78:	mov    ds:0x8cf8fd66,eax
  410d7d:	or     ah,dl
  410d7f:	jg     0x410d65
  410d81:	adc    al,0x30
  410d83:	mov    eax,ds:0x29b698a
  410d88:	adc    al,0xa0
  410d8a:	out    dx,eax
  410d8b:	pop    edx
  410d8c:	std    
  410d8d:	sbb    dl,BYTE PTR [edi+ebp*1+0x5302401b]
  410d94:	iret   
  410d95:	or     esi,DWORD PTR [ebp+0x704dd9d7]
  410d9b:	stos   BYTE PTR es:[edi],al
  410d9c:	scas   eax,DWORD PTR es:[edi]
  410d9d:	ds pushf 
  410d9f:	jl     0x410d85
  410da1:	mov    edx,DWORD PTR [edi-0x6c]
  410da4:	fidiv  DWORD PTR [edi]
  410da6:	pop    es
  410da7:	in     al,dx
  410da8:	inc    edx
  410da9:	jno    0x410d62
  410dab:	push   edi
  410dac:	push   edi
  410dad:	pop    edi
  410dae:	or     eax,0x41b09bde
  410db3:	cs pop esi
  410db5:	sub    esi,DWORD PTR [ebp+ebp*8+0x21627ad7]
  410dbc:	and    al,0xbe
  410dbe:	(bad)  
  410dbf:	push   esp
  410dc0:	shr    BYTE PTR [esp+eax*2],1
  410dc3:	and    al,BYTE PTR [esi+0x2e]
  410dc6:	je     0x410db9
  410dc8:	dec    ebp
  410dc9:	scas   eax,DWORD PTR es:[edi]
  410dca:	push   0xc48b4e98
  410dcf:	inc    ebp
  410dd0:	in     eax,dx
  410dd1:	in     al,dx
  410dd2:	nop
  410dd3:	repz xchg sp,ax
  410dd6:	sub    DWORD PTR [edi],ebx
  410dd8:	(bad)  
  410dd9:	dec    esp
  410dda:	ror    BYTE PTR [eax],0x0
  410ddd:	or     al,0x57
  410ddf:	gs sahf 
  410de1:	rol    DWORD PTR [edx+0x12],0x73
  410de5:	inc    ecx
  410de6:	jp     0x410e60
  410de8:	xchg   ebx,eax
  410de9:	fild   WORD PTR [ecx]
  410deb:	(bad)  
  410dec:	aad    0x6d
  410dee:	popf   
  410def:	outs   dx,BYTE PTR ds:[esi]
  410df0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410df1:	shl    edx,cl
  410df3:	test   cl,ah
  410df5:	mov    eax,0x6f38d1eb
  410dfa:	imul   esi,DWORD PTR [edi-0x6e7e072b],0xbb2dc5b9
  410e04:	fcmovnb st,st(1)
  410e06:	mov    ebx,0x1b5c8ae0
  410e0b:	pushfw 
  410e0d:	cwde   
  410e0e:	mov    bh,0xc6
  410e10:	add    ecx,edx
  410e12:	xlat   BYTE PTR ds:[ebx]
  410e13:	push   0x5d0d2e76
  410e18:	and    edx,DWORD PTR [edi+0x3e]
  410e1b:	sub    al,0xaa
  410e1d:	or     edi,DWORD PTR [esp+ebx*4]
  410e20:	push   ds
  410e21:	inc    esi
  410e22:	inc    edi
  410e23:	mov    ch,0x78
  410e25:	or     edi,ebx
  410e27:	pop    ss
  410e28:	addr16 pop ss
  410e2a:	inc    edx
  410e2b:	inc    eax
  410e2c:	rcr    BYTE PTR [edi],cl
  410e2e:	popa   
  410e2f:	cmp    DWORD PTR [ebp+0x6],ecx
  410e32:	(bad)  
  410e33:	dec    esi
  410e34:	fdivr  st(3),st
  410e36:	jmp    0x410e0d
  410e38:	jle    0x410e65
  410e3a:	icebp  
  410e3b:	shl    BYTE PTR [edx+0x5a5214a6],0xee
  410e42:	xor    ah,ch
  410e44:	fs sub BYTE PTR cs:[esi],dl
  410e48:	pop    ebp
  410e49:	ins    DWORD PTR es:[edi],dx
  410e4a:	icebp  
  410e4b:	adc    edi,esi
  410e4d:	pop    edi
  410e4e:	jge    0x410e8e
  410e50:	sub    DWORD PTR [edx+0x47],eax
  410e53:	std    
  410e54:	shl    BYTE PTR [edi+0x15],0x2b
  410e58:	ret    0x2c52
  410e5b:	loope  0x410e38
  410e5d:	push   ebp
  410e5e:	ins    DWORD PTR es:[edi],dx
  410e5f:	push   ebx
  410e60:	mov    ds:0x1263506d,al
  410e65:	pop    ebx
  410e66:	fs loope 0x410e10
  410e69:	jg     0x410e27
  410e6b:	cli    
  410e6c:	push   0x59
  410e6e:	mov    edx,0x49088491
  410e73:	push   ebp
  410e74:	dec    eax
  410e75:	mov    gs,ebx
  410e77:	cmp    BYTE PTR [eax],bl
  410e79:	pop    edi
  410e7a:	inc    esp
  410e7b:	daa    
  410e7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e7d:	mov    ebp,0x659d4cf9
  410e82:	test   bl,bh
  410e84:	pop    ebp
  410e85:	(bad)  
  410e86:	leave  
  410e87:	or     cl,BYTE PTR [edi-0xc43d783]
  410e8d:	rcr    BYTE PTR [esi+0x6a],cl
  410e90:	stos   BYTE PTR es:[edi],al
  410e91:	push   ebp
  410e92:	stos   DWORD PTR es:[edi],eax
  410e93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e94:	aaa    
  410e95:	lods   al,BYTE PTR ds:[esi]
  410e96:	ins    DWORD PTR es:[edi],dx
  410e97:	aas    
  410e98:	scas   eax,DWORD PTR es:[edi]
  410e99:	test   al,0xb3
  410e9b:	jge    0x410f1b
  410e9d:	(bad)  
  410e9e:	call   FWORD PTR [eax+0x1b]
  410ea1:	rcr    DWORD PTR [eax-0x2e144230],cl
  410ea7:	mov    ebp,0x81ee9ef5
  410eac:	xchg   dl,bh
  410eae:	push   eax
  410eaf:	test   al,bl
  410eb1:	push   ecx
  410eb2:	adc    ebp,DWORD PTR [esi]
  410eb4:	retf   
  410eb5:	pop    eax
  410eb6:	fst    DWORD PTR [ecx-0x41]
  410eb9:	inc    esi
  410eba:	fs dec edx
  410ebc:	sbb    dh,al
  410ebe:	stos   BYTE PTR es:[edi],al
  410ebf:	popf   
  410ec0:	in     al,dx
  410ec1:	mov    ds:0xfd59919f,al
  410ec6:	(bad)  
  410ec7:	out    dx,al
  410ec8:	inc    edx
  410ec9:	mov    al,ds:0xeec7fb35
  410ece:	clc    
  410ecf:	sub    BYTE PTR [ecx+0x43],ah
  410ed2:	and    DWORD PTR [ecx-0x35],0x48a6088b
  410ed9:	in     al,dx
  410eda:	sub    BYTE PTR [ebp+0x46],cl
  410edd:	mov    ecx,0x465e88fe
  410ee2:	loop   0x410ed8
  410ee4:	add    al,BYTE PTR [edx+0x18f8a073]
  410eea:	mov    ebx,0x23f5d6b6
  410eef:	mov    edx,0x39951cdd
  410ef4:	rcl    DWORD PTR [ebx+0x12],0x43
  410ef8:	inc    esi
  410ef9:	cmp    al,0x67
  410efb:	cmp    al,BYTE PTR [eax+0x19deb18a]
  410f01:	test   al,0x69
  410f03:	mov    ecx,DWORD PTR [esi+0x61]
  410f06:	les    ebp,FWORD PTR [ecx+0x71]
  410f09:	dec    eax
  410f0a:	jo     0x410e8d
  410f0c:	xchg   ebp,eax
  410f0d:	test   al,0xbf
  410f0f:	ja     0x410f0f
  410f11:	cmp    ebp,ebp
  410f13:	sbb    DWORD PTR ds:0xf70e3383,ebp
  410f19:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  410f1b:	sub    BYTE PTR [eax-0x26fe9003],dh
  410f21:	fisubr DWORD PTR [esi+ebp*2]
  410f24:	sbb    eax,0xcfeb160f
  410f29:	xor    DWORD PTR [edi],esp
  410f2b:	mov    esi,DWORD PTR [eax]
  410f2d:	and    eax,ebx
  410f2f:	fwait
  410f30:	jecxz  0x410f36
  410f32:	loop   0x410f27
  410f34:	lahf   
  410f35:	xor    edi,DWORD PTR [esi-0x53]
  410f38:	out    0x8b,eax
  410f3a:	shl    DWORD PTR [edx+edi*8+0x1f0c7dbc],cl
  410f41:	mov    dl,0x32
  410f43:	out    dx,al
  410f44:	test   DWORD PTR [ebx],edx
  410f46:	xchg   BYTE PTR [esi],ah
  410f48:	stos   DWORD PTR es:[edi],eax
  410f49:	add    dh,BYTE PTR [eax+0x4feaf20]
  410f4f:	xor    eax,0xbe3bfaa9
  410f54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f55:	enter  0x218,0x9d
  410f59:	cmp    al,0x2d
  410f5b:	mov    dh,0x7c
  410f5d:	cli    
  410f5e:	mov    ecx,0x229005c4
  410f63:	jecxz  0x410f05
  410f65:	pusha  
  410f66:	test   BYTE PTR [edx+0x41],0x18
  410f6a:	ins    DWORD PTR es:[edi],dx
  410f6b:	adc    dl,BYTE PTR [eax-0x31]
  410f6e:	out    dx,eax
  410f6f:	mov    ah,0xd4
  410f71:	and    DWORD PTR [ebx-0x3a],ebx
  410f74:	retf   
  410f75:	pop    ss
  410f76:	mov    eax,ds:0x5db456e5
  410f7b:	xor    esi,esp
  410f7d:	pop    ebx
  410f7e:	aas    
  410f7f:	inc    ecx
  410f80:	fs sbb eax,0xfc6085c3
  410f86:	mov    dl,0x91
  410f88:	repz dec edx
  410f8a:	and    al,0x28
  410f8c:	push   eax
  410f8d:	test   ecx,edx
  410f8f:	mov    DWORD PTR [eax],0x9a38705f
  410f95:	ins    DWORD PTR es:[edi],dx
  410f96:	pop    edx
  410f97:	(bad)  
  410f98:	ficom  WORD PTR [ecx+0x22]
  410f9b:	adc    BYTE PTR [ecx-0x3a],bl
  410f9e:	xor    eax,0x929dbdd3
  410fa3:	xor    DWORD PTR [edi+esi*4-0x35],esp
  410fa7:	sti    
  410fa8:	ficom  DWORD PTR [ebx-0x76f76fd8]
  410fae:	sbb    al,0x31
  410fb0:	push   cs
  410fb1:	and    BYTE PTR ds:0x2c88b3cc,bh
  410fb7:	(bad)  cs:[ebp-0x5e6cc315]
  410fbe:	int3   
  410fbf:	jg     0x410f90
  410fc1:	into   
  410fc2:	push   cs
  410fc3:	mov    ebx,0x7f02b801
  410fc8:	es inc eax
  410fca:	cmp    ecx,DWORD PTR [ebp-0x3305fad5]
  410fd0:	test   BYTE PTR [esi+0x2b],bl
  410fd3:	sbb    eax,0xad356ca9
  410fd8:	imul   esi,DWORD PTR [ecx-0x52],0xbab79c8b
  410fdf:	rcr    DWORD PTR [edx+eax*2-0x4c6f94b1],0xf4
  410fe7:	call   0x53d1:0x8ba31c56
  410fee:	dec    DWORD PTR [ebp+0x5d]
  410ff1:	(bad)  
  410ff3:	nop
  410ff4:	cmp    eax,0x340e5a1f
  410ff9:	fadd   st,st(2)
  410ffb:	add    ebp,DWORD PTR [eax+0x4d]
  410ffe:	and    esi,ecx
  411000:	dec    eax
  411001:	aam    0xbb
  411003:	gs popa 
  411005:	imul   edi,DWORD PTR [ecx+0x54ef7a27],0xffffffc7
  41100c:	or     dh,dl
  41100e:	sbb    ebp,edi
  411010:	hlt    
  411011:	imul   esi,DWORD PTR [esi+esi*4-0x4f],0xffffffc4
  411016:	xchg   esp,eax
  411017:	retf   0x8b86
  41101a:	mov    ebp,edi
  41101c:	lods   al,BYTE PTR ds:[esi]
  41101e:	pop    ss
  41101f:	rcr    DWORD PTR [esi+0x5927a71e],0x46
  411026:	pop    ecx
  411027:	mov    al,ds:0x15a5121a
  41102c:	out    0x6,al
  41102e:	in     eax,0x64
  411030:	loop   0x411014
  411032:	jmp    0xba3a9a97
  411037:	out    dx,al
  411038:	lds    esi,FWORD PTR [eax+0x528d1a5]
  41103e:	pop    edi
  41103f:	sub    al,0x66
  411041:	pop    edx
  411042:	xchg   esi,eax
  411043:	enter  0x31c,0xcd
  411047:	in     al,0xc3
  411049:	dec    esp
  41104a:	push   ebx
  41104b:	adc    DWORD PTR [bx+di-0x7c],0x281995cd
  411053:	pop    esi
  411054:	sub    dh,ch
  411056:	mov    ah,0x56
  411058:	sbb    al,0xfc
  41105a:	inc    ecx
  41105b:	lods   al,BYTE PTR ds:[esi]
  41105c:	jb     0x4110c7
  41105e:	ds sub al,0x83
  411061:	stc    
  411062:	into   
  411063:	inc    ebp
  411064:	sub    edx,eax
  411066:	or     DWORD PTR [eax],esi
  411068:	xchg   edx,eax
  411069:	(bad)  
  41106a:	retf   0x8dca
  41106d:	push   cs
  41106e:	push   ebx
  41106f:	mov    bl,0xf6
  411071:	cli    
  411072:	jl     0x41105b
  411074:	fcom   st(7)
  411076:	sbb    eax,0x172010e0
  41107b:	add    eax,0x47d76db5
  411080:	sub    DWORD PTR [edx],esp
  411082:	scas   eax,DWORD PTR es:[edi]
  411083:	sbb    eax,0xdae161a3
  411088:	dec    edi
  411089:	add    DWORD PTR [ebx+0x17],ecx
  41108c:	jne    0x4110bf
  41108e:	push   ds
  41108f:	xchg   ebp,eax
  411090:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411091:	int    0x18
  411093:	stc    
  411094:	cmp    eax,0xeff22f5b
  411099:	inc    esp
  41109a:	mov    WORD PTR [edi+0x76325035],?
  4110a0:	or     eax,0x35eebfb6
  4110a5:	mov    ebp,0x4d89e4be
  4110aa:	push   esi
  4110ab:	nop
  4110ac:	mov    WORD PTR [eax-0x12a0881d],?
  4110b2:	fxch   st(7)
  4110b4:	sub    al,0xcf
  4110b6:	retf   0xe805
  4110b9:	ds mov gs,ebp
  4110bc:	inc    esi
  4110bd:	in     al,dx
  4110be:	push   ebx
  4110bf:	dec    esi
  4110c0:	pushf  
  4110c1:	lea    eax,[ecx+0x652f4143]
  4110c7:	data16 xor bh,BYTE PTR [ebp+0x3a7e5a30]
  4110ce:	popf   
  4110cf:	jno    0x41111d
  4110d1:	add    eax,0x1d07930
  4110d6:	es (bad) 
  4110d8:	out    dx,eax
  4110d9:	or     ebp,DWORD PTR [edx]
  4110db:	inc    ebx
  4110dc:	call   0xcbce:0x5136d4d4
  4110e3:	clc    
  4110e4:	out    0x6c,al
  4110e6:	scas   eax,DWORD PTR es:[edi]
  4110e7:	jp     0x411069
  4110e9:	dec    eax
  4110ea:	mov    edx,0x776db8dc
  4110ef:	cmp    BYTE PTR [esi],ah
  4110f1:	das    
  4110f2:	aad    0xc0
  4110f4:	scas   al,BYTE PTR es:[edi]
  4110f5:	mov    eax,fs:0x692e26e4
  4110fb:	retf   0xee9c
  4110fe:	or     DWORD PTR [edx+ebp*4],edx
  411101:	push   esi
  411102:	xchg   ebp,eax
  411103:	std    
  411104:	xchg   ebx,eax
  411105:	mov    al,ds:0x4a40c922
  41110a:	sar    eax,cl
  41110c:	enter  0x47f8,0x8
  411110:	adc    DWORD PTR [esi-0x11],ebp
  411113:	je     0x4110f0
  411115:	stos   DWORD PTR es:[edi],eax
  411116:	pop    esi
  411117:	jne    0x4110c3
  411119:	add    dl,dh
  41111b:	adc    ah,BYTE PTR fs:[edx+0x70de662e]
  411122:	loope  0x4110a4
  411124:	addr16 push 0x63
  411127:	imul   esp,DWORD PTR [ecx],0xffffffed
  41112a:	in     eax,0xb4
  41112c:	push   edi
  41112d:	xchg   ebx,eax
  41112e:	fucom  st(2)
  411130:	aam    0x7d
  411132:	and    DWORD PTR [edi],edi
  411134:	and    DWORD PTR [ecx+0x8fbdf8e],edi
  41113a:	jmp    ebx
  41113c:	dec    ecx
  41113d:	mov    al,BYTE PTR [ebx]
  41113f:	retf   0xede5
  411142:	adc    al,0xda
  411144:	mov    edx,0xf5e4ab5b
  411149:	fdivr  DWORD PTR cs:[edi]
  41114c:	out    dx,al
  41114d:	test   BYTE PTR [eax-0x34],0xaa
  411151:	adc    al,0xdf
  411153:	rol    BYTE PTR [edx],cl
  411155:	adc    DWORD PTR ds:0x3189384f,edx
  41115b:	xchg   esi,ecx
  41115d:	xlat   BYTE PTR ds:[ebx]
  41115e:	out    dx,al
  41115f:	inc    esp
  411160:	adc    ebp,DWORD PTR [ecx]
  411162:	cmp    DWORD PTR [edi+eax*4],eax
  411165:	je     0x411180
  411167:	jmp    0x4110f0
  411169:	aas    
  41116a:	icebp  
  41116b:	adc    eax,0x66128902
  411170:	lock leave 
  411172:	adc    edi,DWORD PTR ss:[esp+esi*2-0x6b]
  411177:	fldenv [edi+0x54]
  41117a:	dec    ebx
  41117b:	adc    eax,DWORD PTR [edi+0x34]
  41117e:	repz adc edi,ebp
  411181:	inc    esi
  411182:	sub    DWORD PTR [ebx-0x7e],eax
  411185:	mov    esi,0x7ef64963
  41118a:	(bad)  
  41118b:	mov    eax,DWORD PTR [esi]
  41118d:	cmp    DWORD PTR [ecx+0x4c29484f],edi
  411193:	out    dx,al
  411194:	cmp    edx,ecx
  411196:	ja     0x4111de
  411198:	out    0xd,al
  41119a:	les    edx,FWORD PTR [edi+0x531865f1]
  4111a0:	or     DWORD PTR [ebp-0x1f969bef],0xda081053
  4111aa:	xchg   ebx,eax
  4111ab:	inc    edx
  4111ac:	adc    al,0x28
  4111ae:	or     al,dl
  4111b0:	(bad)  
  4111b1:	arpl   WORD PTR [ebp+esi*4-0x5d],dx
  4111b5:	mov    ds:0xdc840eb5,eax
  4111ba:	push   0x8f787bd2
  4111bf:	(bad)  
  4111c1:	push   ebp
  4111c2:	inc    esp
  4111c3:	or     BYTE PTR [edi+0x59],al
  4111c6:	inc    esp
  4111c7:	or     al,0x4c
  4111c9:	or     BYTE PTR [edx+0x3b749e24],0xd0
  4111d0:	cld    
  4111d1:	xor    eax,0xc9bfd957
  4111d6:	out    0x59,al
  4111d8:	repz data16 xor cl,BYTE PTR [ebp-0x6116c124]
  4111e0:	lods   al,BYTE PTR ds:[esi]
  4111e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111e2:	(bad)  
  4111e3:	push   ebp
  4111e4:	adc    DWORD PTR [ecx],0x79793e18
  4111ea:	lds    esp,FWORD PTR [ebx]
  4111ec:	cmp    BYTE PTR ds:0x70321a7a,bh
  4111f2:	add    edx,ebx
  4111f4:	lods   eax,DWORD PTR ds:[esi]
  4111f5:	mov    ah,0x35
  4111f7:	popa   
  4111f8:	out    0xe9,eax
  4111fa:	cli    
  4111fb:	jle    0x4111a0
  4111fd:	xchg   eax,ecx
  4111ff:	pop    ss
  411200:	push   ss
  411201:	icebp  
  411202:	gs push es
  411204:	sub    eax,0xf330f156
  411209:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41120a:	shl    BYTE PTR [edi+0x4b],cl
  41120d:	sub    BYTE PTR fs:[esi-0x38],al
  411211:	out    0x78,al
  411213:	popf   
  411214:	adc    eax,0xffffffa9
  411217:	data16 jb 0x411266
  41121a:	add    al,0x1b
  41121c:	inc    edi
  41121d:	test   DWORD PTR [edi+0x11],eax
  411220:	inc    esp
  411221:	rcl    edx,cl
  411223:	inc    ebx
  411224:	stc    
  411225:	adc    eax,0x67ec92ca
  41122a:	dec    ebp
  41122b:	enter  0xb622,0x8a
  41122f:	mov    DWORD PTR [eax+ebx*2],ecx
  411232:	les    esi,FWORD PTR [edi]
  411234:	cmc    
  411235:	xchg   edx,eax
  411236:	cdq    
  411237:	jg     0x4111cc
  411239:	adc    ah,al
  41123b:	mov    edi,0xa9dbe733
  411240:	mov    ecx,0x315339bc
  411245:	ds mov dh,0x91
  411248:	mov    esi,0x7c2880bb
  41124d:	and    cl,dh
  41124f:	mov    bl,0xbb
  411251:	leave  
  411252:	das    
  411253:	sub    BYTE PTR gs:[eax-0x740a8ace],ah
  41125a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41125b:	out    dx,eax
  41125c:	test   edx,edi
  41125e:	jne    0x411271
  411260:	fst    DWORD PTR ds:0x39fcfcb2
  411266:	cmp    BYTE PTR [eax],bl
  411268:	out    0x4f,al
  41126a:	jnp    0x41125b
  41126c:	jns    0x411292
  41126e:	(bad)  
  41126f:	in     al,0x73
  411271:	xchg   edi,eax
  411272:	mov    edi,0x6d3770f3
  411277:	sub    bl,al
  411279:	mov    dh,0x46
  41127b:	add    dh,dh
  41127d:	mov    ebp,0x80a899ab
  411282:	je     0x411242
  411284:	aaa    
  411285:	jle    0x411290
  411287:	push   DWORD PTR [eax]
  411289:	jnp    0x41123a
  41128b:	test   al,0x1a
  41128d:	outs   dx,DWORD PTR ds:[esi]
  41128e:	ds aam 0xd7
  411291:	add    DWORD PTR [eax+edx*8],esi
  411294:	mov    eax,ds:0x4e3635c1
  411299:	imul   edx,esi,0x4b
  41129c:	ret    0xf7a0
  41129f:	pop    es
  4112a0:	sbb    dh,0x13
  4112a3:	popf   
  4112a4:	repz dec ebx
  4112a6:	nop
  4112a7:	pusha  
  4112a8:	push   es
  4112a9:	addr16 or eax,0x8afddfa5
  4112af:	inc    edx
  4112b0:	fcom   QWORD PTR [eax+0x3186a539]
  4112b6:	shr    BYTE PTR [esi],1
  4112b8:	jle    0x4112e1
  4112ba:	dec    edi
  4112bb:	mov    cl,0xb
  4112bd:	ins    BYTE PTR es:[edi],dx
  4112be:	dec    edi
  4112bf:	or     ecx,edx
  4112c1:	clc    
  4112c2:	pushf  
  4112c3:	jns    0x4112a9
  4112c5:	sub    esp,DWORD PTR [ecx]
  4112c7:	(bad)  
  4112c9:	inc    esp
  4112ca:	dec    edx
  4112cb:	jae    0x411304
  4112cd:	inc    ebp
  4112ce:	mov    esp,0x8287b5bf
  4112d3:	inc    ebx
  4112d4:	inc    ecx
  4112d5:	jg     0x411311
  4112d7:	push   eax
  4112d8:	repz xchg ebx,eax
  4112da:	dec    edi
  4112db:	mov    al,ds:0x4b47c23d
  4112e0:	pop    esp
  4112e1:	lds    edx,FWORD PTR ds:0xe1f7cfb
  4112e7:	sbb    dh,dl
  4112e9:	inc    edi
  4112ea:	mov    edi,ds
  4112ec:	les    esi,FWORD PTR [ebx]
  4112ee:	(bad)  
  4112ef:	pop    esi
  4112f0:	jae    0x4112ac
  4112f2:	loope  0x411331
  4112f4:	pop    eax
  4112f5:	shl    BYTE PTR fs:[di+0x1b],1
  4112fa:	pushf  
  4112fb:	push   DWORD PTR [edx]
  4112fd:	cmp    al,0x75
  4112ff:	jmp    DWORD PTR [ebx]
  411301:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411302:	rol    ch,1
  411304:	aad    0x3d
  411306:	repnz aad 0xcb
  411309:	or     BYTE PTR [ebx+edi*4+0x35b5a06],ch
  411310:	popa   
  411311:	push   ecx
  411312:	js     0x411379
  411314:	mov    esp,0x4b2cdb72
  411319:	gs aad 0xfe
  41131c:	(bad)  
  41131d:	rcl    DWORD PTR [edx],cl
  41131f:	xchg   edx,eax
  411320:	xor    al,0x7
  411322:	not    BYTE PTR [esi+0x30]
  411325:	sub    esp,DWORD PTR [ebx+0x4c]
  411328:	mov    dl,0x39
  41132a:	xor    BYTE PTR [esi-0x4f],cl
  41132d:	outs   dx,BYTE PTR ds:[esi]
  41132e:	push   edi
  41132f:	push   ss
  411330:	js     0x411329
  411332:	(bad)  
  411333:	cmp    al,0xae
  411335:	fsub   QWORD PTR [esi-0x68b71de7]
  41133b:	aam    0x90
  41133d:	outs   dx,DWORD PTR ds:[esi]
  41133e:	enter  0x59ba,0xba
  411342:	and    eax,0xd88971e6
  411347:	sbb    ah,BYTE PTR [edx+0x5b]
  41134a:	fsubr  DWORD PTR ds:0x5226324e
  411350:	xor    bh,BYTE PTR [esi]
  411352:	fimul  WORD PTR [edx-0x13]
  411355:	sub    dh,BYTE PTR [edi]
  411357:	stc    
  411358:	sub    dl,BYTE PTR gs:[ecx+0x69]
  41135c:	cmp    eax,0x275276a
  411361:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411362:	ds sub ch,al
  411365:	or     DWORD PTR [ebx-0x6ab40f82],ecx
  41136b:	and    eax,0xb7b277ec
  411370:	dec    ebp
  411371:	addr16 push ecx
  411373:	ret    
  411374:	pop    esi
  411375:	add    eax,DWORD PTR [esi+ebp*4-0x50bbb7be]
  41137c:	and    bl,BYTE PTR [edx+ecx*4]
  41137f:	test   al,0x68
  411381:	jne    0x4113e3
  411383:	repz out dx,al
  411385:	xor    al,0x5a
  411387:	jp     0x411328
  411389:	mov    esi,0xad1f79db
  41138e:	pop    ss
  41138f:	jge    0x41135f
  411391:	xchg   esp,eax
  411392:	in     eax,dx
  411393:	cmp    DWORD PTR [esp+edx*2+0x75],edx
  411397:	(bad)  
  411398:	je     0x4113e2
  41139a:	outs   dx,BYTE PTR ds:[esi]
  41139b:	je     0x4113cd
  41139d:	sub    al,BYTE PTR [edi]
  41139f:	mov    ds:0x6e83b7ec,al
  4113a4:	cmp    al,BYTE PTR [edi+0x5e]
  4113a7:	mov    ch,0x9c
  4113a9:	cli    
  4113aa:	add    eax,DWORD PTR ds:0xee2ae1d2
  4113b0:	aaa    
  4113b1:	pop    eax
  4113b2:	mov    edi,0xd215b90e
  4113b7:	sahf   
  4113b8:	sbb    ch,BYTE PTR [ecx-0x59]
  4113bb:	push   ecx
  4113bc:	test   DWORD PTR [esi],esi
  4113be:	scas   al,BYTE PTR es:[edi]
  4113bf:	push   ebp
  4113c0:	push   esp
  4113c1:	or     bh,bl
  4113c3:	mov    dl,0xde
  4113c5:	sbb    al,0x6e
  4113c7:	aaa    
  4113c8:	stos   BYTE PTR es:[edi],al
  4113c9:	pop    edi
  4113ca:	and    bl,dh
  4113cc:	lds    ebp,FWORD PTR [edx+0x7b]
  4113cf:	and    DWORD PTR [ebx+0x2c],ebx
  4113d2:	adc    eax,0xff1f5024
  4113d7:	mov    cl,0xae
  4113d9:	add    BYTE PTR [edi-0x2d],ch
  4113dc:	stos   BYTE PTR es:[edi],al
  4113dd:	int3   
  4113de:	push   edx
  4113df:	mov    dh,0xc6
  4113e1:	xor    esp,edx
  4113e3:	pop    eax
  4113e4:	aad    0xc6
  4113e6:	inc    esp
  4113e7:	ds out dx,eax
  4113e9:	push   ecx
  4113ea:	mov    esi,0x2493ecb5
  4113ef:	sbb    DWORD PTR [edi],edi
  4113f1:	lahf   
  4113f2:	ins    BYTE PTR es:[edi],dx
  4113f3:	mov    ch,0xfd
  4113f5:	push   esp
  4113f6:	mov    bl,BYTE PTR [edi+0x11]
  4113f9:	int3   
  4113fa:	scas   eax,DWORD PTR es:[edi]
  4113fb:	sar    BYTE PTR [esi],cl
  4113fd:	dec    esi
  4113fe:	sbb    DWORD PTR [ebp+0x44],esi
  411401:	std    
  411402:	cs or  al,0xd1
  411405:	cmp    ah,BYTE PTR ds:0x53de78a1
  41140b:	or     edx,esi
  41140d:	sub    ebp,DWORD PTR [esi-0x3becc8a0]
  411413:	dec    edi
  411414:	mov    bh,BYTE PTR [eax]
  411416:	sbb    ebp,ecx
  411418:	cmc    
  411419:	aaa    
  41141a:	out    dx,al
  41141b:	call   FWORD PTR [eax+0x54]
  41141e:	push   edx
  41141f:	mov    ah,0x3
  411421:	jle    0x411457
  411423:	or     al,0x7d
  411425:	mov    edx,0x9d2a07c1
  41142a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41142b:	icebp  
  41142c:	out    0x9d,eax
  41142e:	sbb    edi,ecx
  411430:	hlt    
  411431:	ficom  DWORD PTR [edi]
  411433:	clc    
  411434:	cmp    BYTE PTR [ecx],ch
  411436:	sbb    al,0x5c
  411438:	dec    eax
  411439:	ins    DWORD PTR es:[edi],dx
  41143a:	jns    0x4113c6
  41143c:	icebp  
  41143d:	lods   al,BYTE PTR ds:[esi]
  41143e:	cld    
  41143f:	push   esi
  411440:	sar    DWORD PTR [esi+0x76be7490],0xae
  411447:	stc    
  411448:	std    
  411449:	push   ebx
  41144a:	mov    edx,0xc258abb1
  41144f:	pop    ecx
  411450:	inc    eax
  411451:	addr16 call 0xb207:0x7d290a04
  411459:	push   ss
  41145a:	in     eax,dx
  41145b:	sahf   
  41145c:	push   esp
  41145d:	xchg   BYTE PTR [eax+ebp*4-0x7f13af7f],ah
  411464:	inc    edi
  411465:	mov    BYTE PTR [ebx],ah
  411467:	dec    edi
  411468:	jge    0x41149c
  41146a:	leave  
  41146b:	fistp  DWORD PTR [ecx-0x45500aa6]
  411471:	rol    BYTE PTR [ebx+ebp*2-0x40e647b],0xc0
  411479:	out    0xc5,eax
  41147b:	mov    edi,0xe0b1ecba
  411480:	push   edx
  411481:	aad    0xf9
  411483:	jns    0x411441
  411485:	and    eax,0x82f4fbd5
  41148a:	mov    edi,0x4e4cc682
  41148f:	jle    0x4114d8
  411491:	xchg   ebp,eax
  411492:	(bad)
  411496:	sbb    eax,0x347c7abc
  41149b:	jo     0x411461
  41149d:	pop    edi
  41149e:	lahf   
  41149f:	and    BYTE PTR [edi-0x74],dh
  4114a2:	sub    al,0x3a
  4114a4:	pop    ss
  4114a5:	cmp    eax,0xf5d746
  4114aa:	mov    esi,0xbf1f339d
  4114af:	mov    edi,0x675a71e3
  4114b4:	std    
  4114b5:	jb     0x41151e
  4114b7:	jbe    0xfe97f60b
  4114bd:	idiv   DWORD PTR [eax-0x57]
  4114c0:	mov    dl,0x38
  4114c2:	sbb    DWORD PTR [esp+ebx*4],edi
  4114c5:	dec    ebx
  4114c6:	sub    al,0x48
  4114c8:	test   al,0x9a
  4114ca:	mov    ah,0xbf
  4114cc:	sbb    eax,0xc70eb8da
  4114d1:	(bad)  
  4114d2:	aas    
  4114d3:	leave  
  4114d4:	cmp    dh,BYTE PTR [ebx-0x41]
  4114d7:	(bad)  
  4114d8:	cmp    ebx,ebx
  4114da:	jno    0x411465
  4114dc:	dec    ebx
  4114dd:	pop    es
  4114de:	loop   0x411498
  4114e0:	cmp    al,0xa3
  4114e2:	bound  eax,QWORD PTR [esi-0x416da8e]
  4114e8:	loop   0x4114c7
  4114ea:	in     al,0xc7
  4114ec:	xchg   esp,eax
  4114ed:	sbb    al,0x60
  4114ef:	scas   eax,DWORD PTR es:[edi]
  4114f0:	leave  
  4114f1:	mov    dl,0x4e
  4114f3:	pop    edx
  4114f4:	dec    edx
  4114f5:	or     esp,edx
  4114f7:	aaa    
  4114f8:	loop   0x41147f
  4114fa:	or     ebx,DWORD PTR ds:0x98b30432
  411500:	sub    ebx,ecx
  411502:	fidiv  WORD PTR [edx+0x5e]
  411505:	pop    ds
  411506:	nop
  411507:	int    0xb4
  411509:	pop    ebp
  41150a:	(bad)  
  41150b:	ins    DWORD PTR es:[edi],dx
  41150c:	adc    DWORD PTR [eax],edi
  41150e:	inc    ebp
  41150f:	adc    BYTE PTR ds:0xec1f8cb8,ch
  411515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411516:	push   edx
  411517:	jle    0x4114be
  411519:	jne    0x4114fa
  41151b:	xor    BYTE PTR [edx+0x1ab63969],dh
  411521:	imul   ebx,DWORD PTR [ecx+0x2808f406],0xffffffe0
  411528:	std    
  411529:	call   0xccd4d51b
  41152e:	inc    ecx
  41152f:	jae    0x411553
  411531:	dec    edx
  411532:	xchg   esi,eax
  411533:	mov    cl,0x58
  411535:	xchg   BYTE PTR [ecx-0x5f],dl
  411538:	mov    esp,0x489d88cf
  41153d:	not    DWORD PTR [edx-0x430eb433]
  411543:	or     al,0x52
  411545:	call   0x5620:0x1d36ecf4
  41154c:	push   esp
  41154d:	out    dx,al
  41154e:	xchg   DWORD PTR [edx+0x24],esp
  411551:	scas   eax,DWORD PTR es:[edi]
  411552:	fist   DWORD PTR [edx+eiz*1+0x22a052ce]
  411559:	rol    BYTE PTR [edi+0x6d4d6210],cl
  41155f:	gs (bad) 
  411561:	sbb    al,0x66
  411563:	mov    fs,edx
  411565:	outs   dx,BYTE PTR ds:[esi]
  411566:	or     ebp,DWORD PTR ds:0xeeee696
  41156c:	mov    ecx,0xa1ed6986
  411571:	fadd   QWORD PTR [edx]
  411573:	fcomp  QWORD PTR [esi+ebp*1]
  411576:	leave  
  411577:	shl    dh,cl
  411579:	add    bl,dh
  41157b:	push   esp
  41157c:	xchg   esi,eax
  41157d:	and    eax,0x3b722d22
  411582:	pop    ebp
  411583:	jl     0x411578
  411585:	push   cs
  411586:	mov    eax,DWORD PTR [esi+eax*1+0x4]
  41158a:	lahf   
  41158b:	xor    bh,BYTE PTR [ebx]
  41158d:	push   0xb06c4aba
  411592:	(bad)  
  411593:	mov    eax,0x1c0c6fb9
  411598:	sub    esi,DWORD PTR [eax-0x65324b58]
  41159e:	sub    eax,0x805a5801
  4115a3:	or     BYTE PTR [esi-0x12],ch
  4115a6:	cmp    eax,0xbdff35e5
  4115ab:	sahf   
  4115ac:	xchg   DWORD PTR [ecx],esi
  4115ae:	icebp  
  4115af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115b0:	pop    ecx
  4115b1:	xchg   esi,eax
  4115b2:	or     eax,0x7908702d
  4115b7:	int    0x7b
  4115b9:	push   esp
  4115ba:	iret   
  4115bb:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115bd:	fld    DWORD PTR [ecx]
  4115bf:	push   ecx
  4115c0:	in     al,0x34
  4115c2:	push   edi
  4115c3:	sahf   
  4115c4:	arpl   sp,ax
  4115c6:	mov    al,ds:0x97dc7690
  4115cb:	cmp    ecx,esp
  4115cd:	mov    dh,0x50
  4115cf:	addr16 jmp 0xe5e3:0x9e07a7af
  4115d7:	lods   eax,DWORD PTR ds:[esi]
  4115d8:	dec    ebx
  4115d9:	cmp    DWORD PTR [edx],ebp
  4115db:	xlat   BYTE PTR ds:[ebx]
  4115dc:	out    0x74,eax
  4115de:	(bad)  [ebx+0x5d]
  4115e1:	mov    esp,DWORD PTR [ecx-0x7a4e0959]
  4115e7:	fidiv  DWORD PTR [edx-0x59]
  4115ea:	adc    dh,bl
  4115ec:	rcl    BYTE PTR [ebx],1
  4115ee:	push   0xffffffab
  4115f0:	mov    esi,0x43d84916
  4115f5:	fisubr WORD PTR [edi+eax*1-0x200e013a]
  4115fc:	adc    eax,0xf59421aa
  411601:	or     al,0xbb
  411603:	xor    al,0x52
  411605:	and    al,0x2b
  411607:	(bad)  
  411608:	int3   
  411609:	dec    ecx
  41160a:	(bad)  
  41160b:	(bad)  
  41160c:	fbstp  TBYTE PTR [edx+eax*8-0x424f1b5]
  411613:	mov    BYTE PTR [edi-0x1],ch
  411616:	out    dx,eax
  411617:	lods   al,BYTE PTR ds:[esi]
  411618:	xor    bh,ch
  41161a:	sbb    esp,DWORD PTR [esi]
  41161c:	jo     0x41168b
  41161e:	or     eax,DWORD PTR [ebx+0x64ffb22c]
  411624:	sar    DWORD PTR ds:0xb3d56417,1
  41162a:	sub    DWORD PTR [esp+esi*4-0x5ecea521],edx
  411631:	mov    esi,0xce25b7ac
  411636:	into   
  411637:	dec    sp
  411639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41163a:	leave  
  41163b:	ja     0x411620
  41163d:	daa    
  41163e:	mov    esi,0x69a52ae5
  411643:	lods   al,BYTE PTR ds:[esi]
  411644:	jbe    0x411648
  411646:	sti    
  411647:	mov    WORD PTR [esi+0x23959f4e],gs
  41164d:	add    al,0xf4
  41164f:	add    eax,0xb318f106
  411654:	in     eax,dx
  411655:	fisubr WORD PTR [edx]
  411657:	aad    0xa7
  411659:	xlat   BYTE PTR ds:[ebx]
  41165a:	mov    esi,0xf4a1c170
  41165f:	mov    dh,0xcc
  411661:	iret   
  411662:	std    
  411663:	loopne 0x41167c
  411665:	jo     0x41162b
  411667:	sbb    eax,0xb00f4598
  41166c:	jmp    0x4d8b:0x5caa22a1
  411673:	push   ecx
  411674:	push   esi
  411675:	stc    
  411676:	xchg   ecx,eax
  411677:	inc    ecx
  411678:	(bad)  
  411679:	fcmovu st,st(4)
  41167b:	lea    esi,[ecx-0x6a]
  41167e:	rol    ecx,0x4c
  411681:	pop    ss
  411682:	lods   eax,DWORD PTR ds:[esi]
  411683:	xor    al,0xb2
  411685:	(bad)  
  411686:	retf   0xf179
  411689:	cmp    al,0xdd
  41168b:	push   ss
  41168c:	jp     0x4116c3
  41168e:	sbb    ch,BYTE PTR [edx]
  411690:	pop    ebx
  411691:	adc    BYTE PTR [ecx-0x18],bh
  411694:	arpl   WORD PTR [edx-0x4f],ax
  411697:	or     DWORD PTR [edx],0x1d603f4c
  41169d:	ret    
  41169e:	cmp    dl,dl
  4116a0:	and    dl,BYTE PTR [esi+0x2a]
  4116a3:	cld    
  4116a4:	push   cs
  4116a5:	push   0x6f
  4116a7:	pushf  
  4116a8:	add    al,0x8c
  4116aa:	iret   
  4116ab:	push   ebx
  4116ac:	mov    dh,0x6c
  4116ae:	(bad)  
  4116af:	rcl    BYTE PTR [ebx+0x14],1
  4116b2:	pop    esi
  4116b3:	inc    ebx
  4116b4:	out    dx,eax
  4116b5:	fs cmp al,ch
  4116b8:	inc    esp
  4116b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116ba:	jmp    0xb9f1:0x55f0fd7d
  4116c1:	cmp    edx,DWORD PTR [edi+0x4c]
  4116c4:	cld    
  4116c5:	shr    DWORD PTR [esi+esi*1-0x4dc19a0],0xf3
  4116cd:	inc    eax
  4116ce:	loop   0x411723
  4116d0:	stos   BYTE PTR es:[edi],al
  4116d1:	bound  edi,QWORD PTR [edx-0x27252451]
  4116d7:	and    eax,0x2d3f9cc7
  4116dc:	call   0x2256:0x5413cf37
  4116e3:	ins    BYTE PTR es:[edi],dx
  4116e4:	rcl    DWORD PTR [ecx+0x37],0x3
  4116e8:	jns    0x411737
  4116ea:	cli    
  4116eb:	add    ch,cl
  4116ed:	(bad)  
  4116ef:	(bad)
  4116f3:	repz shl DWORD PTR ds:0x84338105,0x1b
  4116fb:	xor    edi,esi
  4116fd:	retf   0xad3e
  411700:	int3   
  411701:	and    al,0x8a
  411703:	js     0x411691
  411705:	mov    eax,ds:0xdc5b6d09
  41170a:	add    eax,0xde1ddfb5
  41170f:	les    ecx,FWORD PTR [edx+edi*2+0x65]
  411713:	pop    edx
  411714:	jbe    0x4116bc
  411716:	xor    ch,BYTE PTR [esp+eiz*8-0x4d]
  41171a:	sbb    esi,DWORD PTR [edx]
  41171c:	ret    
  41171d:	cmp    BYTE PTR [edi-0x6d],ah
  411720:	adc    al,0x51
  411722:	inc    edx
  411723:	add    esi,edx
  411725:	std    
  411726:	mov    al,ds:0x32f647ff
  41172b:	ja     0x41179c
  41172d:	sub    eax,0x77059791
  411732:	outs   dx,BYTE PTR ds:[esi]
  411733:	(bad)  
  411734:	mov    ah,0x6e
  411736:	jo     0x411745
  411738:	(bad)  
  411739:	scas   al,BYTE PTR es:[edi]
  41173a:	jae    0x41176b
  41173c:	ret    0x2b73
  41173f:	xlat   BYTE PTR ds:[ebx]
  411740:	ins    BYTE PTR es:[edi],dx
  411741:	fbstp  TBYTE PTR [edi+0x4a931d32]
  411747:	inc    edx
  411748:	inc    edi
  411749:	jmp    0xc8d3:0x56b774e3
  411750:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411751:	pop    edi
  411752:	pop    ss
  411753:	mov    esp,0x75cb3349
  411758:	pop    ecx
  411759:	jno    0x41171e
  41175b:	gs sub eax,0x16408ac7
  411761:	(bad)  
  411762:	xchg   esi,eax
  411763:	dec    edx
  411764:	mov    al,ds:0x4de485cf
  411769:	test   al,0x1c
  41176b:	cld    
  41176c:	adc    dh,BYTE PTR ds:0xb4c2eb19
  411772:	adc    ebp,eax
  411774:	in     al,dx
  411775:	imul   eax,ebx,0xffffff84
  411778:	xchg   BYTE PTR [ebx+ebp*1-0x4d78ae68],ah
  41177f:	pushf  
  411780:	jmp    0x7df2:0x402a3b7f
  411787:	jmp    0x4671:0x7fe73ce7
  41178e:	fidiv  DWORD PTR [ebx]
  411790:	cmp    al,0xc9
  411792:	mov    al,ds:0x3e4da5ab
  411797:	test   BYTE PTR [ecx-0x314fded2],al
  41179d:	ret    0x8337
  4117a0:	icebp  
  4117a1:	iret   
  4117a2:	xchg   ebp,eax
  4117a3:	xchg   edx,eax
  4117a4:	int    0x5a
  4117a6:	scas   al,BYTE PTR es:[edi]
  4117a7:	ret    0x105f
  4117aa:	in     al,0xaf
  4117ac:	les    esi,FWORD PTR [eax]
  4117ae:	call   0x9b83:0xddf054ab
  4117b5:	cmc    
  4117b6:	xchg   edi,eax
  4117b7:	pop    eax
  4117b8:	(bad)  
  4117b9:	stos   DWORD PTR es:[edi],eax
  4117ba:	not    BYTE PTR [esi+ebx*8+0x58]
  4117be:	jmp    0x411759
  4117c0:	jnp    0x411784
  4117c2:	mov    eax,ds:0x844eaaae
  4117c7:	or     al,0xd2
  4117c9:	pushf  
  4117ca:	add    BYTE PTR [ecx+0x7b19266d],0xb5
  4117d1:	jmp    0x41178e
  4117d3:	dec    ebx
  4117d4:	sbb    al,0xb7
  4117d6:	mov    ah,0x9a
  4117d8:	daa    
  4117d9:	stos   BYTE PTR es:[edi],al
  4117da:	cvttps2pi mm0,xmm3
  4117dd:	xchg   DWORD PTR [ebx],ebp
  4117df:	jne    0x41185e
  4117e1:	xchg   ebp,eax
  4117e2:	and    DWORD PTR ss:[edx-0x1517739a],ecx
  4117e9:	pop    ss
  4117ea:	jae    0x411784
  4117ec:	jnp    0x41185e
  4117ee:	add    BYTE PTR [eax-0x35e1055f],ch
  4117f4:	inc    edi
  4117f5:	or     esp,DWORD PTR [ecx-0x61]
  4117f8:	pop    esp
  4117f9:	push   ss
  4117fa:	jnp    0x4117ee
  4117fc:	dec    esi
  4117fd:	xchg   ebx,eax
  4117fe:	push   eax
  4117ff:	call   0x79677d59
  411804:	xchg   DWORD PTR [edx+0x7a8790e6],ebp
  41180a:	in     eax,dx
  41180b:	out    0x20,al
  41180d:	rcr    edx,cl
  41180f:	dec    esi
  411810:	test   eax,0xff778c2
  411815:	push   ecx
  411816:	mov    ch,0xae
  411818:	xchg   esp,eax
  411819:	int    0xb6
  41181b:	mov    eax,0xc03b1279
  411820:	lahf   
  411821:	jle    0x41187e
  411823:	enter  0x3b82,0x74
  411827:	sar    DWORD PTR [edx-0x48],1
  41182a:	(bad)  [eax]
  41182c:	fdivr  DWORD PTR ds:[ebx-0x66c7c552]
  411833:	dec    edx
  411834:	mov    ch,0x32
  411836:	and    BYTE PTR [ecx],ch
  411838:	daa    
  411839:	jnp    0x4118a7
  41183b:	mov    bl,0xce
  41183d:	push   ds
  41183e:	push   ds
  41183f:	fstp   TBYTE PTR [ebp+0x1]
  411842:	icebp  
  411843:	and    edx,DWORD PTR [edi]
  411845:	cwde   
  411846:	push   edx
  411847:	fild   DWORD PTR [ebp-0x7574d643]
  41184d:	stc    
  41184e:	test   al,0x6d
  411850:	test   al,0x59
  411852:	sub    DWORD PTR [esi],ebp
  411854:	es loopne 0x4118c0
  411857:	mov    ah,0xd6
  411859:	mov    cl,0x20
  41185b:	inc    edx
  41185c:	lods   al,BYTE PTR ds:[esi]
  41185d:	sbb    edx,DWORD PTR [ebp+0x6f]
  411860:	mov    ds:0xa6762fcf,eax
  411865:	mov    dl,0x9b
  411867:	mov    ds:0x70b00d30,al
  41186c:	xchg   BYTE PTR [edx-0x4d3b8949],bh
  411872:	jns    0x41182a
  411874:	(bad)  
  411875:	dec    eax
  411876:	jle    0x411814
  411878:	in     al,dx
  411879:	dec    ebp
  41187a:	in     al,0xbe
  41187c:	rol    DWORD PTR [edi+0x5b31685a],0xdf
  411883:	test   DWORD PTR [eax+0x33],ecx
  411886:	mov    ebp,0x39a38c0b
  41188b:	push   edx
  41188c:	cmc    
  41188d:	iret   
  41188e:	lds    edx,FWORD PTR [edx+0x1ce1715b]
  411894:	fimul  WORD PTR ds:0x34d84449
  41189a:	dec    esi
  41189b:	jmp    0x41186f
  41189d:	jle    0x41190d
  41189f:	jmp    0x7344:0xda5a7c5b
  4118a6:	cld    
  4118a7:	inc    ebp
  4118a8:	inc    ebx
  4118a9:	jnp    0x4118e4
  4118ab:	lahf   
  4118ac:	in     al,0x15
  4118ae:	mov    ch,BYTE PTR [ecx-0x10]
  4118b1:	jle    0x41186f
  4118b3:	dec    edx
  4118b4:	adc    cl,BYTE PTR [ebx-0x7f]
  4118b7:	cmp    eax,0xe42ac5f1
  4118bc:	inc    eax
  4118bd:	retf   0x895d
  4118c0:	in     al,0x54
  4118c2:	imul   eax,edi,0x1a8fafd5
  4118c8:	aad    0xd7
  4118ca:	xchg   ebx,eax
  4118cb:	sub    al,0x84
  4118cd:	xchg   DWORD PTR [ebx],edi
  4118cf:	mov    esi,ebp
  4118d1:	out    0xd1,eax
  4118d3:	inc    eax
  4118d4:	mov    eax,0x1d68be0f
  4118d9:	cmp    esp,ebp
  4118db:	pop    ebx
  4118dc:	xchg   edx,eax
  4118dd:	push   ds
  4118de:	test   al,0x32
  4118e0:	loopne 0x411953
  4118e2:	or     ebp,DWORD PTR [eax]
  4118e4:	cs inc esp
  4118e6:	fisub  DWORD PTR [esi+ecx*8]
  4118e9:	xchg   bh,bl
  4118eb:	shr    DWORD PTR [esi],0x8f
  4118ee:	inc    ebp
  4118ef:	mov    cl,0x5d
  4118f1:	mov    dl,0xfe
  4118f3:	xchg   edi,eax
  4118f4:	jmp    0x25c2ea08
  4118f9:	xchg   esi,eax
  4118fa:	mov    BYTE PTR [edx+0x32],bl
  4118fd:	es sbb eax,0x10f36e77
  411903:	sbb    edi,DWORD PTR [ecx+edx*2]
  411906:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411907:	stc    
  411908:	clc    
  411909:	xor    esp,ebx
  41190b:	ins    DWORD PTR es:[edi],dx
  41190c:	add    DWORD PTR [ecx],ecx
  41190e:	xchg   ebp,eax
  41190f:	daa    
  411910:	mov    esi,0x2c5940e5
  411915:	retf   
  411916:	jmp    0x69fa:0xe69e1cd6
  41191d:	and    DWORD PTR [esi-0x7c],ebp
  411920:	outs   dx,DWORD PTR ds:[esi]
  411921:	mov    dh,0x98
  411923:	mov    bh,0xc9
  411925:	mov    eax,0x399b4f8f
  41192a:	outs   dx,BYTE PTR ds:[esi]
  41192b:	test   DWORD PTR [esi-0xa],ebp
  41192e:	lahf   
  41192f:	sahf   
  411930:	test   DWORD PTR [esp+ebp*8],eax
  411933:	mov    eax,0xd926c5be
  411938:	sbb    BYTE PTR [eax+0x43],bl
  41193b:	adc    ebx,DWORD PTR [ebx+ecx*4+0x1]
  41193f:	sub    dl,BYTE PTR [ebp+0x31]
  411942:	mov    dh,0x11
  411944:	fistp  DWORD PTR [eax+0x44]
  411947:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411948:	popa   
  411949:	fnsave [eax+0x2c7aa26c]
  41194f:	call   0x3373:0x59f52532
  411956:	add    BYTE PTR [edi+0x6],0x41
  41195a:	mov    esi,0x983f78cc
  41195f:	(bad)  
  411960:	outs   dx,DWORD PTR ds:[esi]
  411961:	shl    BYTE PTR [eax-0xe503de3],0x63
  411968:	xor    cl,BYTE PTR [edi+0x37]
  41196b:	xbegin 0xe137e34
  411971:	mov    al,0x60
  411973:	and    ecx,eax
  411975:	in     eax,dx
  411976:	inc    esp
  411977:	push   edi
  411978:	pop    edx
  411979:	mov    ah,0x91
  41197b:	jnp    0x4119ba
  41197d:	jae    0x4119ae
  41197f:	pop    edi
  411980:	xchg   ebx,eax
  411981:	push   ss
  411982:	cmp    eax,0x137b6e6e
  411987:	jbe    0x4119a6
  411989:	sti    
  41198a:	pop    edi
  41198b:	adc    ecx,edx
  41198d:	push   0xb5e6b8c0
  411992:	mov    esi,0x823901f0
  411997:	pop    ss
  411998:	iret   
  411999:	sar    BYTE PTR [edx-0x3455773],1
  41199f:	cmc    
  4119a0:	xor    al,0x90
  4119a2:	es inc edi
  4119a4:	jg     0x41197e
  4119a6:	cmp    al,0x4f
  4119a8:	or     DWORD PTR [esi+0x4656af8b],ecx
  4119ae:	push   0xac4ffbee
  4119b3:	pop    edx
  4119b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119b5:	adc    BYTE PTR [esi],0x50
  4119b8:	cli    
  4119b9:	mov    dl,0xc6
  4119bb:	ret    
  4119bc:	xchg   ecx,eax
  4119bd:	cmp    DWORD PTR [esi],eax
  4119bf:	fld    DWORD PTR [ebx-0x35]
  4119c2:	test   DWORD PTR [esi],esp
  4119c4:	out    0x10,al
  4119c6:	mul    edi
  4119c8:	mov    esi,0x121b0627
  4119cd:	sbb    al,0xe2
  4119cf:	mov    ds:0xf54a85ac,al
  4119d4:	dec    eax
  4119d5:	dec    ebx
  4119d6:	scas   al,BYTE PTR es:[edi]
  4119d7:	cli    
  4119d8:	pushf  
  4119d9:	xor    esp,DWORD PTR [edx+eax*2-0x15]
  4119dd:	inc    esp
  4119de:	idiv   BYTE PTR [ebp-0x49]
  4119e1:	iret   
  4119e2:	inc    ebp
  4119e3:	xor    ebp,DWORD PTR [eax]
  4119e5:	add    eax,0x1a0bcbe1
  4119ea:	push   ecx
  4119eb:	(bad)  
  4119ec:	sbb    bh,dh
  4119ee:	inc    edx
  4119ef:	jg     0x4119ca
  4119f1:	loope  0x411a69
  4119f3:	xchg   edx,eax
  4119f4:	inc    esp
  4119f5:	test   BYTE PTR [edx-0x3eb857c5],0x32
  4119fc:	cdq    
  4119fd:	inc    edi
  4119fe:	sub    BYTE PTR [eax+eiz*8-0x1d11b822],ah
  411a05:	cmp    al,0x80
  411a07:	mov    ds:0xafd4a636,eax
  411a0c:	mov    edx,0xa68b281a
  411a11:	jmp    0xb3c:0xcefe9179
  411a18:	xchg   ecx,eax
  411a19:	sub    al,dl
  411a1b:	push   edi
  411a1c:	shr    BYTE PTR [edx+0x2],cl
  411a1f:	xor    eax,0x53eb17e3
  411a24:	retf   
  411a25:	dec    ecx
  411a26:	xor    DWORD PTR [esi+0x734e6809],edx
  411a2c:	xchg   ebp,eax
  411a2d:	xlat   BYTE PTR ds:[ebx]
  411a2e:	sbb    al,0xab
  411a30:	in     eax,dx
  411a31:	mov    eax,0xbfa62bd
  411a36:	add    al,BYTE PTR [ebx-0x76a9b8da]
  411a3c:	cmc    
  411a3d:	sbb    al,0x3b
  411a3f:	adc    eax,0xf38de54
  411a44:	fidivr DWORD PTR [eax+esi*4]
  411a47:	and    eax,0x1f9325f4
  411a4c:	adc    eax,0xc626cd77
  411a51:	sub    eax,0x7012050a
  411a56:	aas    
  411a57:	shr    BYTE PTR es:[ebp-0x475a62cb],0x1a
  411a5f:	bnd js 0x411a5c
  411a62:	mov    bh,0x70
  411a64:	sub    BYTE PTR [edx+eax*4-0x33],ch
  411a68:	push   cs
  411a69:	mov    cl,BYTE PTR [eax]
  411a6b:	ins    DWORD PTR es:[edi],dx
  411a6c:	cmp    eax,0xd1fb52f2
  411a71:	leave  
  411a72:	fsubr  st,st(2)
  411a74:	repnz sbb eax,0xc949036f
  411a7a:	add    bh,BYTE PTR [esi-0x1b]
  411a7d:	into   
  411a7e:	stc    
  411a7f:	and    bl,0xf7
  411a82:	and    DWORD PTR [esi-0x4c824003],eax
  411a88:	aas    
  411a89:	mov    esp,0x91f97c2d
  411a8e:	(bad)  
  411a8f:	xor    al,0x6f
  411a91:	hlt    
  411a92:	out    dx,al
  411a93:	jae    0x411ad2
  411a95:	lahf   
  411a96:	mov    BYTE PTR [ebp-0x1b5f8468],cl
  411a9c:	xchg   esi,eax
  411a9d:	stos   BYTE PTR es:[edi],al
  411a9e:	ss xchg ebx,eax
  411aa0:	aas    
  411aa1:	lock or ebx,DWORD PTR [edx+0x6a65262d]
  411aa8:	popa   
  411aa9:	jp     0x411a72
  411aab:	sahf   
  411aac:	iret   
  411aad:	mov    ds:0xa92474a9,al
  411ab2:	(bad)  
  411ab3:	repz dec ebp
  411ab5:	loop   0x411b0f
  411ab7:	retf   
  411ab8:	call   DWORD PTR [esi-0x7b7231cd]
  411abe:	add    ebx,esi
  411ac0:	jb     0x411af4
  411ac2:	add    BYTE PTR [ebx+0x558b084d],cl
  411ac8:	loopne 0x411a53
  411aca:	add    al,0x8a
  411acc:	mov    eax,DWORD PTR [ebp-0xc]
  411acf:	mov    ecx,DWORD PTR [ebp+0x8]
  411ad2:	xor    eax,esi
  411ad4:	lea    eax,[eax+ecx*1+0x3272f3]
  411adb:	mov    DWORD PTR [ebp+0x8],eax
  411ade:	mov    eax,DWORD PTR [ebp-0xc]
  411ae1:	mov    ecx,DWORD PTR [ebp+0x14]
  411ae4:	xor    eax,esi
  411ae6:	add    eax,edi
  411ae8:	imul   eax,DWORD PTR [ecx]
  411aeb:	mov    ecx,DWORD PTR [ebp-0x4]
  411aee:	mov    edx,DWORD PTR [ebp+0x8]
  411af1:	xor    ecx,esi
  411af3:	lea    ecx,[ecx+edx*1+0x3272f3]
  411afa:	cmp    ecx,eax
  411afc:	jne    0x40f6ee
  411b02:	mov    eax,DWORD PTR [ebp-0x4]
  411b05:	xor    eax,esi
  411b07:	add    eax,edi
  411b09:	mov    DWORD PTR [ebp-0x10],eax
  411b0c:	mov    ebx,0x65655
  411b11:	add    ebx,0x3234
  411b17:	xchg   ebx,esi
  411b19:	xor    ebx,ebx
  411b1b:	push   esi
  411b1c:	mov    esi,ebx
  411b1e:	pop    ebx
  411b1f:	mov    edx,esi
  411b21:	add    ebx,0x1002
  411b27:	lea    eax,[ebp-0x18]
  411b2a:	add    edx,eax
  411b2c:	add    edx,0x5
  411b2f:	push   edx
  411b30:	inc    esi
  411b31:	pop    ecx
  411b32:	dec    ecx
  411b33:	xchg   ecx,eax
  411b34:	dec    eax
  411b35:	xchg   ecx,eax
  411b36:	dec    ecx
  411b37:	xchg   ecx,edx
  411b39:	dec    edx
  411b3a:	push   edx
  411b3b:	mov    edx,ebx
  411b3d:	pop    ebx
  411b3e:	dec    ebx
  411b3f:	call   DWORD PTR [ebx]
  411b41:	cmp    DWORD PTR [ebp+0x10],esi
  411b44:	je     0x411b65
  411b4a:	xchg   edx,eax
  411b4b:	push   0xc
  411b4d:	pop    ecx
  411b4e:	dec    ecx
  411b4f:	push   0x3
  411b51:	pop    ebx
  411b52:	inc    ebx
  411b53:	xchg   ebx,ecx
  411b55:	inc    ecx
  411b56:	sub    ebx,ecx
  411b58:	xchg   ebx,ecx
  411b5a:	dec    ecx
  411b5b:	dec    ecx
  411b5c:	mov    eax,DWORD PTR [ebp-0x1c]
  411b5f:	imul   eax,ecx
  411b62:	add    esp,eax
  411b64:	xchg   edx,eax
  411b65:	push   eax
  411b66:	xor    ebx,ebx
  411b68:	mov    edx,esp
  411b6a:	dec    edx
  411b6b:	inc    ebx
  411b6c:	add    ebx,DWORD PTR [edx+ebx*1]
  411b6f:	dec    ebx
  411b70:	xor    edx,edx
  411b72:	add    DWORD PTR [ebp-0x10],ebx
  411b75:	pop    ebx
  411b76:	mov    eax,DWORD PTR [ebp-0x10]
  411b79:	pop    edi
  411b7a:	pop    esi
  411b7b:	pop    ebx
  411b7c:	leave  
  411b7d:	ret    0x10
  411b80:	push   ebp
  411b81:	mov    ebp,esp
  411b83:	push   ecx
  411b84:	and    DWORD PTR ds:0x4291db,ecx
  411b8a:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  411b91:	and    DWORD PTR ds:0x4291cb,0x0
  411b9b:	mov    ecx,DWORD PTR ds:0x4291cb
  411ba1:	inc    ecx
  411ba2:	mov    DWORD PTR ds:0x4291cb,ecx
  411ba8:	cmp    DWORD PTR ds:0x4291cb,0x20
  411baf:	jbe    0x411bd2
  411bb5:	jmp    0x411bc5
  411bba:	push   0x4291cf
  411bbf:	call   DWORD PTR ds:0x42a583
  411bc5:	cmp    DWORD PTR ds:0x4291cb,0x1c
  411bcc:	jb     0x411b9b
  411bd2:	mov    eax,DWORD PTR [ebp-0x4]
  411bd5:	xor    DWORD PTR ds:0x4291d7,0x42915f
  411bdf:	mov    edx,DWORD PTR [ebp+0x10]
  411be2:	mov    ecx,0x75108ac
  411be7:	sbb    DWORD PTR ds:0x42919f,0x2976
  411bf1:	xor    eax,ecx
  411bf3:	xor    DWORD PTR ds:0x429167,0x4291ab
  411bfd:	add    eax,0x3272f3
  411c02:	mov    DWORD PTR [edx],eax
  411c04:	and    eax,DWORD PTR ds:0x4291e7
  411c0a:	mov    eax,DWORD PTR [ebp+0xc]
  411c0d:	and    DWORD PTR ds:0x4291d3,edi
  411c13:	xor    eax,ecx
  411c15:	xor    DWORD PTR ds:0x429187,0x6377
  411c1f:	push   esi
  411c20:	xor    edx,DWORD PTR ds:0x42915b
  411c26:	mov    esi,DWORD PTR [ebp+0x10]
  411c29:	mov    edx,0x3272f3
  411c2e:	add    eax,edx
  411c30:	mov    DWORD PTR [esi+0x4],eax
  411c33:	mov    eax,DWORD PTR [ebp+0x14]
  411c36:	mov    esi,DWORD PTR [ebp+0x10]
  411c39:	mov    DWORD PTR [esi+0x8],eax
  411c3c:	mov    eax,DWORD PTR [ebp+0x18]
  411c3f:	mov    esi,DWORD PTR [ebp+0x10]
  411c42:	mov    DWORD PTR [esi+0xc],eax
  411c45:	mov    eax,DWORD PTR [ebp+0x1c]
  411c48:	mov    esi,DWORD PTR [ebp+0x10]
  411c4b:	mov    DWORD PTR [esi+0x10],eax
  411c4e:	mov    eax,DWORD PTR [ebp+0x8]
  411c51:	xor    eax,ecx
  411c53:	add    eax,edx
  411c55:	pop    esi
  411c56:	leave  
  411c57:	ret    0x18
  411c5a:	push   ebp
  411c5b:	mov    ebp,esp
  411c5d:	sub    esp,0x9c
  411c63:	movzx  ecx,BYTE PTR ds:0x429187
  411c6a:	or     DWORD PTR ds:0x4291f3,ecx
  411c70:	mov    ecx,DWORD PTR [ebp+0x8]
  411c73:	mov    eax,0x8a99
  411c78:	sub    DWORD PTR ds:0x4291a7,0x19e0
  411c82:	xor    ax,WORD PTR [ecx+0x20]
  411c86:	mov    ecx,0x3b5b
  411c8b:	add    ax,cx
  411c8e:	and    DWORD PTR ds:0x4291f7,0x0
  411c98:	mov    ecx,DWORD PTR ds:0x4291f7
  411c9e:	inc    ecx
  411c9f:	mov    DWORD PTR ds:0x4291f7,ecx
  411ca5:	cmp    DWORD PTR ds:0x4291f7,0x11
  411cac:	jl     0x411cec
  411cb2:	jmp    0x411cc5
  411cb7:	push   DWORD PTR [ebp-0x28]
  411cba:	push   0x42806d
  411cbf:	call   DWORD PTR ds:0x42a587
  411cc5:	cmp    DWORD PTR ds:0x4291f7,0x10
  411ccc:	jne    0x411cdf
  411cd2:	mov    ecx,DWORD PTR ds:0x4291f7
  411cd8:	inc    ecx
  411cd9:	mov    DWORD PTR ds:0x4291f7,ecx
  411cdf:	cmp    DWORD PTR ds:0x4291f7,0x1c
  411ce6:	jb     0x411c98
  411cec:	movzx  eax,ax
  411cef:	mov    DWORD PTR [ebp-0x10],eax
  411cf2:	mov    BYTE PTR [ebp-0x1],0x82
  411cf6:	and    DWORD PTR ds:0x4291df,0x0
  411d00:	jmp    0x411d14
  411d05:	xor    ecx,ecx
  411d07:	add    ecx,DWORD PTR ds:0x4291df
  411d0d:	inc    ecx
  411d0e:	mov    DWORD PTR ds:0x4291df,ecx
  411d14:	cmp    DWORD PTR ds:0x4291df,0x1b
  411d1b:	jae    0x411d48
  411d21:	cmp    DWORD PTR ds:0x4291df,0x22
  411d28:	jge    0x411d48
  411d2e:	jmp    0x411d43
  411d33:	push   0x4280f2
  411d38:	push   0x0
  411d3a:	push   DWORD PTR [ebp-0x1c]
  411d3d:	call   DWORD PTR ds:0x42a58f
  411d43:	jmp    0x411d05
  411d48:	lea    eax,[ebp-0x1]
  411d4b:	inc    DWORD PTR ds:0x42919b
  411d51:	mov    DWORD PTR [ebp-0xc],eax
  411d54:	mov    al,BYTE PTR [ebp-0x1]
  411d57:	and    DWORD PTR ds:0x4291af,0x0
  411d61:	mov    ecx,DWORD PTR ds:0x4291af
  411d67:	inc    ecx
  411d68:	mov    DWORD PTR ds:0x4291af,ecx
  411d6e:	cmp    DWORD PTR ds:0x4291af,0x19
  411d75:	jbe    0x411d96
  411d7b:	jmp    0x411d89
  411d80:	push   DWORD PTR [ebp-0x20]
  411d83:	call   DWORD PTR ds:0x42a593
  411d89:	cmp    DWORD PTR ds:0x4291af,0x10
  411d90:	jb     0x411d61
  411d96:	mov    ecx,DWORD PTR [ebp-0xc]
  411d99:	xor    al,0x7d
  411d9b:	mov    DWORD PTR ds:0x4291bb,0x2666
  411da5:	add    al,0x2
  411da7:	and    DWORD PTR ds:0x4291c3,0x42917f
  411db1:	mov    BYTE PTR [ecx],al
  411db3:	sbb    DWORD PTR ds:0x4291eb,0x5717
  411dbd:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  411dc4:	push   ebx
  411dc5:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  411dcc:	mov    DWORD PTR ds:0x4291eb,0x16
  411dd6:	cmp    DWORD PTR ds:0x4291eb,0x0
  411ddd:	je     0x411e17
  411de3:	cmp    DWORD PTR ds:0x4291eb,0x1e
  411dea:	jl     0x411e17
  411df0:	jmp    0x411e07
  411df5:	push   0x428010
  411dfa:	push   0x0
  411dfc:	push   0x6e74
  411e01:	call   DWORD PTR ds:0x42a597
  411e07:	mov    eax,ds:0x4291eb
  411e0c:	dec    eax
  411e0d:	mov    ds:0x4291eb,eax
  411e12:	jmp    0x411dd6
  411e17:	mov    ecx,DWORD PTR [ebp-0x18]
  411e1a:	or     DWORD PTR ds:0x429153,ebx
  411e20:	push   esi
  411e21:	mov    eax,0x75108ac
  411e26:	xor    esi,esi
  411e28:	xor    esi,DWORD PTR ds:0x4291b7
  411e2e:	or     DWORD PTR ds:0x42915b,esi
  411e34:	xor    ecx,eax
  411e36:	mov    esi,DWORD PTR ds:0x4291a3
  411e3c:	sbb    esi,DWORD PTR ds:0x42914f
  411e42:	mov    DWORD PTR ds:0x4291a3,esi
  411e48:	mov    esi,0x3272f3
  411e4d:	push   edi
  411e4e:	add    ecx,esi
  411e50:	jmp    0x411e66
  411e55:	inc    DWORD PTR ds:0x429163
  411e5b:	mov    dl,BYTE PTR [ebp-0x1]
  411e5e:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  411e65:	inc    ecx
  411e66:	mov    DWORD PTR ds:0x42917b,0x7bd4
  411e70:	cmp    ecx,0x40
  411e73:	jb     0x411e55
  411e79:	not    edx
  411e7b:	mov    edx,DWORD PTR [ebp-0x18]
  411e7e:	xor    edx,eax
  411e80:	mov    DWORD PTR ds:0x4291f7,0x3db0
  411e8a:	add    edx,esi
  411e8c:	jmp    0x411f80
  411e91:	movzx  edi,WORD PTR ds:0x42918b
  411e98:	or     DWORD PTR ds:0x429157,edi
  411e9e:	mov    edi,DWORD PTR [ebp+0x8]
  411ea1:	adc    DWORD PTR ds:0x42917b,edx
  411ea7:	mov    ecx,0x8a99
  411eac:	adc    DWORD PTR ds:0x4291f3,0x3816
  411eb6:	xor    cx,WORD PTR [edi+edx*4+0x2]
  411ebb:	and    DWORD PTR ds:0x4291a3,0x0
  411ec5:	jmp    0x411ed7
  411eca:	mov    edi,DWORD PTR ds:0x4291a3
  411ed0:	inc    edi
  411ed1:	mov    DWORD PTR ds:0x4291a3,edi
  411ed7:	cmp    DWORD PTR ds:0x4291a3,0x1f
  411ede:	jae    0x411f1d
  411ee4:	cmp    DWORD PTR ds:0x4291a3,0xa
  411eeb:	jl     0x411f1d
  411ef1:	jmp    0x411efc
  411ef6:	call   DWORD PTR ds:0x42a59b
  411efc:	cmp    DWORD PTR ds:0x4291a3,0x9
  411f03:	jne    0x411f18
  411f09:	xor    edi,edi
  411f0b:	xor    edi,DWORD PTR ds:0x4291a3
  411f11:	inc    edi
  411f12:	mov    DWORD PTR ds:0x4291a3,edi
  411f18:	jmp    0x411eca
  411f1d:	mov    edi,0x3b5b
  411f22:	add    cx,di
  411f25:	add    DWORD PTR ds:0x4291ef,0x4291b7
  411f2f:	movzx  ecx,cx
  411f32:	sbb    DWORD PTR ds:0x42914b,0x16d8
  411f3c:	mov    DWORD PTR [ebp-0xc],ecx
  411f3f:	movzx  ecx,WORD PTR ds:0x42918f
  411f46:	and    DWORD PTR ds:0x429197,ecx
  411f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  411f4f:	sbb    DWORD PTR ds:0x42915b,0x631a
  411f59:	movzx  ecx,WORD PTR [ecx+edx*4]
  411f5d:	xor    ecx,0x8a99
  411f63:	add    ecx,edi
  411f65:	mov    edi,DWORD PTR [ebp-0xc]
  411f68:	mov    DWORD PTR ds:0x4291f7,0x4ad9
  411f72:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  411f79:	mov    DWORD PTR ds:0x4291e7,ecx
  411f7f:	inc    edx
  411f80:	not    ecx
  411f82:	mov    ecx,DWORD PTR [ebp-0x10]
  411f85:	mov    DWORD PTR ds:0x42914f,0x2d30
  411f8f:	cmp    edx,ecx
  411f91:	jne    0x411e91
  411f97:	and    edx,edx
  411f99:	mov    ecx,DWORD PTR [ebp-0x18]
  411f9c:	sub    edi,DWORD PTR ds:0x42914f
  411fa2:	mov    edx,DWORD PTR [ebp+0x10]
  411fa5:	xor    DWORD PTR ds:0x4291bf,0xf9d
  411faf:	xor    ecx,eax
  411fb1:	and    DWORD PTR ds:0x4291b7,ebx
  411fb7:	add    ecx,esi
  411fb9:	mov    DWORD PTR [edx],ecx
  411fbb:	mov    ecx,DWORD PTR [ebp-0x18]
  411fbe:	sbb    DWORD PTR ds:0x42919f,0x1e81
  411fc8:	xor    ecx,eax
  411fca:	add    ecx,esi
  411fcc:	adc    DWORD PTR ds:0x4291e3,edi
  411fd2:	mov    DWORD PTR [ebp-0xc],ecx
  411fd5:	add    DWORD PTR ds:0x42914f,0x6cdc
  411fdf:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  411fe6:	mov    DWORD PTR ds:0x4291bf,0x1d36
  411ff0:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  411ff7:	mov    DWORD PTR [ebp-0x10],0xf89c95a1
  411ffe:	mov    ecx,DWORD PTR [ebp-0x14]
  412001:	mov    DWORD PTR ds:0x4291e3,0x1b
  41200b:	cmp    DWORD PTR ds:0x4291e3,0x0
  412012:	je     0x41204c
  412018:	cmp    DWORD PTR ds:0x4291e3,0x1c
  41201f:	jb     0x41204c
  412025:	jmp    0x41203a
  41202a:	push   0x42915f
  41202f:	push   0x428022
  412034:	call   DWORD PTR ds:0x42a59f
  41203a:	mov    edi,DWORD PTR ds:0x4291e3
  412040:	dec    edi
  412041:	mov    DWORD PTR ds:0x4291e3,edi
  412047:	jmp    0x41200b
  41204c:	mov    DWORD PTR [ebp+0x8],ecx
  41204f:	mov    ecx,DWORD PTR [ebp+0x8]
  412052:	xor    ecx,eax
  412054:	add    ecx,esi
  412056:	movzx  ecx,WORD PTR ds:0x4291b3
  41205d:	mov    ecx,0x242ebcd
  412062:	mov    edi,0xf641bcc
  412067:	je     0x414acc
  41206d:	mov    edx,DWORD PTR [ebp+0x8]
  412070:	sub    DWORD PTR ds:0x42917b,0x1976
  41207a:	mov    ebx,DWORD PTR [ebp-0x8]
  41207d:	xor    edx,eax
  41207f:	xor    ebx,eax
  412081:	not    DWORD PTR ds:0x4291d3
  412087:	sub    edx,ebx
  412089:	not    DWORD PTR ds:0x42918f
  41208f:	sub    edx,esi
  412091:	xor    edx,eax
  412093:	and    DWORD PTR ds:0x4291cb,0x0
  41209d:	jmp    0x4120af
  4120a2:	mov    ebx,DWORD PTR ds:0x4291cb
  4120a8:	inc    ebx
  4120a9:	mov    DWORD PTR ds:0x4291cb,ebx
  4120af:	cmp    DWORD PTR ds:0x4291cb,0x18
  4120b6:	jae    0x4120f8
  4120bc:	cmp    DWORD PTR ds:0x4291cb,0xa
  4120c3:	ja     0x4120f8
  4120c9:	jmp    0x4120d9
  4120ce:	push   0x4a1a
  4120d3:	call   DWORD PTR ds:0x42a5a3
  4120d9:	cmp    DWORD PTR ds:0x4291cb,0x9
  4120e0:	jne    0x4120f3
  4120e6:	mov    ebx,DWORD PTR ds:0x4291cb
  4120ec:	inc    ebx
  4120ed:	mov    DWORD PTR ds:0x4291cb,ebx
  4120f3:	jmp    0x4120a2
  4120f8:	mov    DWORD PTR [ebp+0x8],edx
  4120fb:	sub    DWORD PTR ds:0x4291e3,0x2e82
  412105:	mov    edx,DWORD PTR [ebp+0x8]
  412108:	mov    ebx,DWORD PTR [ebp-0x58]
  41210b:	mov    DWORD PTR ds:0x42919b,0x1dc1
  412115:	add    edx,0x5708e2
  41211b:	and    DWORD PTR ds:0x4291e7,0x42919f
  412125:	imul   edx,ebx
  412128:	mov    DWORD PTR [ebp-0x58],edx
  41212b:	xor    edx,0x49c6
  412131:	mov    edx,DWORD PTR [ebp+0x8]
  412134:	mov    ebx,DWORD PTR ds:0x42914b
  41213a:	add    DWORD PTR ds:0x4291e3,ebx
  412140:	mov    ebx,DWORD PTR [ebp-0x54]
  412143:	add    edx,0x64f89c
  412149:	inc    DWORD PTR ds:0x42917f
  41214f:	or     edx,ebx
  412151:	mov    DWORD PTR [ebp-0x54],edx
  412154:	mov    edx,DWORD PTR [ebp+0x8]
  412157:	mov    ebx,DWORD PTR [ebp-0x50]
  41215a:	sbb    DWORD PTR ds:0x429183,0x4291b7
  412164:	add    edx,ecx
  412166:	xor    edx,ebx
  412168:	mov    DWORD PTR [ebp-0x50],edx
  41216b:	dec    ebx
  41216c:	mov    edx,DWORD PTR [ebp+0x8]
  41216f:	add    ebx,0x68ce
  412175:	mov    ebx,DWORD PTR [ebp-0x4c]
  412178:	add    edx,edi
  41217a:	and    edx,ebx
  41217c:	and    ebx,0x35bf
  412182:	mov    DWORD PTR [ebp-0x4c],edx
  412185:	xor    DWORD PTR ds:0x4291d3,ebx
  41218b:	mov    edx,DWORD PTR [ebp+0x8]
  41218e:	sub    DWORD PTR ds:0x4291cf,0x55b5
  412198:	mov    ebx,DWORD PTR [ebp-0x48]
  41219b:	lea    edx,[ebx+edx*1+0x241fcdf]
  4121a2:	mov    DWORD PTR [ebp-0x48],edx
  4121a5:	and    DWORD PTR ds:0x429173,0x0
  4121af:	mov    ebx,DWORD PTR ds:0x429173
  4121b5:	inc    ebx
  4121b6:	mov    DWORD PTR ds:0x429173,ebx
  4121bc:	cmp    DWORD PTR ds:0x429173,0x19
  4121c3:	jge    0x4121ee
  4121c9:	jmp    0x4121e1
  4121ce:	push   0x4291f7
  4121d3:	push   0x429187
  4121d8:	push   DWORD PTR [ebp-0x10]
  4121db:	call   DWORD PTR ds:0x42a5ab
  4121e1:	cmp    DWORD PTR ds:0x429173,0x12
  4121e8:	jb     0x4121af
  4121ee:	mov    edx,DWORD PTR [ebp+0x8]
  4121f1:	or     DWORD PTR ds:0x4291df,ebx
  4121f7:	mov    ebx,0xfa5e1528
  4121fc:	sub    ebx,edx
  4121fe:	movzx  edx,WORD PTR ds:0x4291c7
  412205:	and    DWORD PTR ds:0x4291f7,edx
  41220b:	add    ebx,DWORD PTR [ebp-0x44]
  41220e:	mov    DWORD PTR [ebp-0x44],ebx
  412211:	and    DWORD PTR ds:0x4291db,0x4291bf
  41221b:	mov    edx,DWORD PTR [ebp+0x8]
  41221e:	xor    edx,eax
  412220:	adc    DWORD PTR ds:0x429153,0x429187
  41222a:	add    edx,esi
  41222c:	mov    DWORD PTR ds:0x42915b,0x2aa5
  412236:	jne    0x41206d
  41223c:	mov    DWORD PTR ds:0x4291af,0x939
  412246:	jmp    0x414acc
  41224b:	xor    DWORD PTR ds:0x4291cb,0x4110
  412255:	mov    edx,DWORD PTR [ebp-0xc]
  412258:	sub    DWORD PTR ds:0x42918b,0x429163
  412262:	sub    edx,esi
  412264:	xor    edx,eax
  412266:	mov    DWORD PTR ds:0x4291b7,0x1c
  412270:	cmp    DWORD PTR ds:0x4291b7,0x0
  412277:	je     0x4122ae
  41227d:	cmp    DWORD PTR ds:0x4291b7,0x21
  412284:	jbe    0x4122ae
  41228a:	jmp    0x41229a
  41228f:	push   0x337f
  412294:	call   DWORD PTR ds:0x42a573
  41229a:	xor    ebx,ebx
  41229c:	or     ebx,DWORD PTR ds:0x4291b7
  4122a2:	dec    ebx
  4122a3:	mov    DWORD PTR ds:0x4291b7,ebx
  4122a9:	jmp    0x412270
  4122ae:	mov    DWORD PTR [ebp-0x5c],edx
  4122b1:	sub    DWORD PTR ds:0x429173,0x5ea2
  4122bb:	mov    edx,DWORD PTR [ebp-0x10]
  4122be:	mov    ebx,DWORD PTR [ebp-0x8]
  4122c1:	xor    edx,eax
  4122c3:	dec    DWORD PTR ds:0x4291b7
  4122c9:	xor    ebx,eax
  4122cb:	adc    DWORD PTR ds:0x429197,0x42917b
  4122d5:	sub    edx,ebx
  4122d7:	sub    edx,esi
  4122d9:	xor    edx,eax
  4122db:	mov    DWORD PTR [ebp-0x10],edx
  4122de:	mov    edx,DWORD PTR [ebp-0x14]
  4122e1:	mov    DWORD PTR [ebp+0x8],edx
  4122e4:	jmp    0x412527
  4122e9:	mov    edx,DWORD PTR [ebp+0x8]
  4122ec:	mov    DWORD PTR ds:0x429157,0x1c
  4122f6:	cmp    DWORD PTR ds:0x429157,0x0
  4122fd:	je     0x412341
  412303:	cmp    DWORD PTR ds:0x429157,0x21
  41230a:	jl     0x412341
  412310:	jmp    0x41232f
  412315:	push   0x4cc6
  41231a:	push   0x428152
  41231f:	push   0x428140
  412324:	push   0x400000
  412329:	call   DWORD PTR ds:0x42a57b
  41232f:	mov    ebx,DWORD PTR ds:0x429157
  412335:	dec    ebx
  412336:	mov    DWORD PTR ds:0x429157,ebx
  41233c:	jmp    0x4122f6
  412341:	mov    ebx,DWORD PTR [ebp-0x8]
  412344:	xor    edx,eax
  412346:	xor    ebx,eax
  412348:	sub    edx,ebx
  41234a:	sub    edx,esi
  41234c:	xor    edx,eax
  41234e:	mov    DWORD PTR [ebp+0x8],edx
  412351:	mov    edx,DWORD PTR [ebp+0x8]
  412354:	mov    ebx,DWORD PTR [ebp-0x58]
  412357:	add    edx,0x5708e2
  41235d:	add    DWORD PTR ds:0x42918f,0x4291b7
  412367:	imul   edx,ebx
  41236a:	mov    DWORD PTR [ebp-0x58],edx
  41236d:	and    DWORD PTR ds:0x4291df,0x0
  412377:	mov    edx,DWORD PTR ds:0x4291df
  41237d:	inc    edx
  41237e:	mov    DWORD PTR ds:0x4291df,edx
  412384:	cmp    DWORD PTR ds:0x4291df,0x9
  41238b:	jb     0x4123cb
  412391:	jmp    0x4123a4
  412396:	push   DWORD PTR [ebp-0x24]
  412399:	push   0x400000
  41239e:	call   DWORD PTR ds:0x42a57f
  4123a4:	cmp    DWORD PTR ds:0x4291df,0x8
  4123ab:	jne    0x4123be
  4123b1:	mov    edx,DWORD PTR ds:0x4291df
  4123b7:	inc    edx
  4123b8:	mov    DWORD PTR ds:0x4291df,edx
  4123be:	cmp    DWORD PTR ds:0x4291df,0x10
  4123c5:	jb     0x412377
  4123cb:	mov    edx,DWORD PTR [ebp+0x8]
  4123ce:	adc    ebx,DWORD PTR ds:0x429183
  4123d4:	mov    ebx,DWORD PTR [ebp-0x54]
  4123d7:	add    DWORD PTR ds:0x4291ef,0x468d
  4123e1:	add    edx,0x64f89c
  4123e7:	or     edx,ebx
  4123e9:	mov    DWORD PTR [ebp-0x54],edx
  4123ec:	and    DWORD PTR ds:0x429187,0x0
  4123f6:	jmp    0x412408
  4123fb:	mov    ebx,DWORD PTR ds:0x429187
  412401:	inc    ebx
  412402:	mov    DWORD PTR ds:0x429187,ebx
  412408:	cmp    DWORD PTR ds:0x429187,0x1d
  41240f:	jae    0x412437
  412415:	cmp    DWORD PTR ds:0x429187,0x1e
  41241c:	jg     0x412437
  412422:	jmp    0x412432
  412427:	push   0x4291cf
  41242c:	call   DWORD PTR ds:0x42a583
  412432:	jmp    0x4123fb
  412437:	mov    edx,DWORD PTR [ebp+0x8]
  41243a:	mov    ebx,DWORD PTR [ebp-0x50]
  41243d:	and    DWORD PTR ds:0x4291db,0x4291cf
  412447:	add    edx,ecx
  412449:	mov    DWORD PTR ds:0x42919b,0x55c4
  412453:	xor    edx,ebx
  412455:	mov    DWORD PTR [ebp-0x50],edx
  412458:	sub    DWORD PTR ds:0x42915f,0x3296
  412462:	mov    edx,DWORD PTR [ebp+0x8]
  412465:	mov    ebx,DWORD PTR [ebp-0x4c]
  412468:	xor    DWORD PTR ds:0x4291a7,0x42916b
  412472:	add    edx,edi
  412474:	xor    DWORD PTR ds:0x4291e7,0x4291af
  41247e:	and    edx,ebx
  412480:	or     DWORD PTR ds:0x42915f,edx
  412486:	mov    DWORD PTR [ebp-0x4c],edx
  412489:	mov    ebx,DWORD PTR ds:0x42918b
  41248f:	sbb    DWORD PTR ds:0x429157,ebx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	xor    DWORD PTR ds:0x429157,0x429153
  4124a2:	mov    ebx,DWORD PTR [ebp-0x48]
  4124a5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4124ac:	mov    DWORD PTR [ebp-0x48],edx
  4124af:	and    DWORD PTR ds:0x429173,0x0
  4124b9:	jmp    0x4124cb
  4124be:	mov    edx,DWORD PTR ds:0x429173
  4124c4:	inc    edx
  4124c5:	mov    DWORD PTR ds:0x429173,edx
  4124cb:	cmp    DWORD PTR ds:0x429173,0x15
  4124d2:	jae    0x412517
  4124d8:	cmp    DWORD PTR ds:0x429173,0x5
  4124df:	jle    0x412517
  4124e5:	jmp    0x4124f8
  4124ea:	push   DWORD PTR [ebp-0x18]
  4124ed:	push   0x42808a
  4124f2:	call   DWORD PTR ds:0x42a587
  4124f8:	cmp    DWORD PTR ds:0x429173,0x4
  4124ff:	jne    0x412512
  412505:	mov    edx,DWORD PTR ds:0x429173
  41250b:	inc    edx
  41250c:	mov    DWORD PTR ds:0x429173,edx
  412512:	jmp    0x4124be
  412517:	mov    edx,DWORD PTR [ebp+0x8]
  41251a:	mov    ebx,0xfa5e1528
  41251f:	sub    ebx,edx
  412521:	add    ebx,DWORD PTR [ebp-0x44]
  412524:	mov    DWORD PTR [ebp-0x44],ebx
  412527:	mov    edx,DWORD PTR [ebp+0x8]
  41252a:	xor    edx,eax
  41252c:	add    edx,esi
  41252e:	jne    0x4122e9
  412534:	mov    edx,DWORD PTR [ebp-0xc]
  412537:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  41253e:	mov    bl,BYTE PTR [ebp-0x1]
  412541:	cmp    dl,bl
  412543:	je     0x412621
  412549:	mov    ecx,DWORD PTR [ebp-0x5c]
  41254c:	mov    edx,DWORD PTR [ebp-0xc]
  41254f:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412556:	mov    ebx,DWORD PTR [ebp+0xc]
  412559:	xor    ecx,eax
  41255b:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f3]
  412562:	jne    0x414ade
  412568:	mov    ecx,DWORD PTR [ebp-0x5c]
  41256b:	mov    edx,DWORD PTR [ebp+0xc]
  41256e:	xor    ecx,eax
  412570:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f3]
  412578:	mov    edx,DWORD PTR [ebp-0x18]
  41257b:	xor    edx,eax
  41257d:	add    edx,esi
  41257f:	cmp    ecx,edx
  412581:	mov    ecx,DWORD PTR [ebp-0x14]
  412584:	mov    DWORD PTR [ebp+0x8],ecx
  412587:	mov    ecx,DWORD PTR [ebp+0x8]
  41258a:	je     0x41b681
  412590:	xor    ecx,eax
  412592:	add    ecx,esi
  412594:	mov    ecx,0x242ebcd
  412599:	je     0x414a32
  41259f:	mov    edx,DWORD PTR [ebp+0x8]
  4125a2:	mov    ebx,DWORD PTR [ebp-0x8]
  4125a5:	xor    edx,eax
  4125a7:	xor    ebx,eax
  4125a9:	sub    edx,ebx
  4125ab:	sub    edx,esi
  4125ad:	xor    edx,eax
  4125af:	mov    DWORD PTR [ebp+0x8],edx
  4125b2:	mov    edx,DWORD PTR [ebp+0x8]
  4125b5:	mov    ebx,DWORD PTR [ebp-0x58]
  4125b8:	add    edx,0x5708e2
  4125be:	imul   edx,ebx
  4125c1:	mov    DWORD PTR [ebp-0x58],edx
  4125c4:	mov    edx,DWORD PTR [ebp+0x8]
  4125c7:	mov    ebx,DWORD PTR [ebp-0x54]
  4125ca:	add    edx,0x64f89c
  4125d0:	or     edx,ebx
  4125d2:	mov    DWORD PTR [ebp-0x54],edx
  4125d5:	mov    edx,DWORD PTR [ebp+0x8]
  4125d8:	mov    ebx,DWORD PTR [ebp-0x50]
  4125db:	add    edx,ecx
  4125dd:	xor    edx,ebx
  4125df:	mov    DWORD PTR [ebp-0x50],edx
  4125e2:	mov    edx,DWORD PTR [ebp+0x8]
  4125e5:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125e8:	add    edx,edi
  4125ea:	and    edx,ebx
  4125ec:	mov    DWORD PTR [ebp-0x4c],edx
  4125ef:	mov    edx,DWORD PTR [ebp+0x8]
  4125f2:	mov    ebx,DWORD PTR [ebp-0x48]
  4125f5:	lea    edx,[ebx+edx*1+0x241fcdf]
  4125fc:	mov    DWORD PTR [ebp-0x48],edx
  4125ff:	mov    edx,DWORD PTR [ebp+0x8]
  412602:	mov    ebx,0xfa5e1528
  412607:	sub    ebx,edx
  412609:	add    ebx,DWORD PTR [ebp-0x44]
  41260c:	mov    DWORD PTR [ebp-0x44],ebx
  41260f:	mov    edx,DWORD PTR [ebp+0x8]
  412612:	xor    edx,eax
  412614:	add    edx,esi
  412616:	jne    0x41259f
  41261c:	jmp    0x414a32
  412621:	mov    edx,DWORD PTR [ebp-0x14]
  412624:	jmp    0x4149ad
  412629:	rcr    ah,1
  41262b:	sbb    eax,DWORD PTR [edx+0x17]
  41262e:	mov    ah,0xd0
  412630:	nop
  412631:	cs aam 0x99
  412634:	or     BYTE PTR [edi+0x6b6ed354],bl
  41263a:	mov    al,BYTE PTR [ebx-0x7ca3e87d]
  412640:	add    DWORD PTR [ebp+0x578cf952],0xffffff8a
  412647:	add    bh,BYTE PTR [eax-0x12]
  41264a:	cli    
  41264b:	cld    
  41264c:	popf   
  41264d:	add    edi,DWORD PTR [ecx*8+0x2c4b6a7d]
  412654:	out    0x4c,eax
  412656:	daa    
  412657:	inc    ecx
  412658:	pop    eax
  412659:	nop
  41265a:	dec    eax
  41265b:	or     BYTE PTR [ebx+ebx*2+0x72],al
  41265f:	nop
  412660:	fnstcw WORD PTR ds:0xfeede85c
  412666:	fdiv   DWORD PTR [ebp-0x60]
  412669:	fs push 0x9
  41266c:	pop    edi
  41266d:	sbb    eax,0xeddb4e85
  412672:	pop    ebx
  412673:	sub    DWORD PTR [ebx],0xffffffc2
  412676:	sub    DWORD PTR [esi],ebp
  412678:	in     al,dx
  412679:	imul   esp,DWORD PTR [edi-0x3b],0xbf779fd1
  412680:	jp     0x4126ca
  412682:	shl    BYTE PTR [ebp-0x3b],1
  412685:	adc    al,0xb8
  412687:	bound  ebx,QWORD PTR [edi+0x77]
  41268a:	jns    0x4126b4
  41268c:	add    eax,0xd9dc5a4c
  412691:	xor    BYTE PTR [edx+0x6ad8d820],0xca
  412698:	int3   
  412699:	aad    0x8f
  41269b:	mov    eax,0xde9a19d6
  4126a0:	mov    es,WORD PTR [ebx+0x71]
  4126a3:	mov    esi,DWORD PTR [ebp-0x14]
  4126a6:	mov    al,0xe1
  4126a8:	push   cs
  4126a9:	nop
  4126aa:	xor    al,0x6e
  4126ac:	and    eax,0xfa35eacc
  4126b1:	mov    cl,0x4e
  4126b3:	xchg   edi,eax
  4126b4:	dec    ecx
  4126b5:	mov    bh,0xb
  4126b7:	lahf   
  4126b8:	clc    
  4126b9:	pushf  
  4126ba:	call   0xd264d1b7
  4126bf:	test   BYTE PTR [esi+0x6d],0x4c
  4126c3:	cmp    ebx,DWORD PTR [ecx+0x7e]
  4126c6:	mov    ebp,DWORD PTR [edx+0x13]
  4126c9:	repz or ebp,DWORD PTR [ebp+0x7a]
  4126cd:	retf   0xa439
  4126d0:	push   cs
  4126d1:	add    al,0x5
  4126d3:	sbb    BYTE PTR ds:0x26247653,bh
  4126d9:	push   edx
  4126da:	sub    DWORD PTR [edx],0x4a
  4126dd:	rcr    BYTE PTR [esi+0x1eb64371],0x5b
  4126e4:	lea    ecx,[ebx]
  4126e6:	mov    al,0xc9
  4126e8:	jb     0x412717
  4126ea:	repnz mov eax,0x5b15de14
  4126f0:	adc    BYTE PTR [esi+0x1cac728],al
  4126f6:	mov    dh,0xd4
  4126f8:	std    
  4126f9:	push   edi
  4126fa:	push   edi
  4126fb:	adc    cl,BYTE PTR [edi+0x125caac7]
  412701:	sub    eax,0xf0b9826e
  412706:	xchg   ebp,eax
  412707:	popf   
  412708:	sbb    dh,BYTE PTR [ebx+0x17b6489]
  41270e:	retf   0x4e74
  412711:	add    al,0xfc
  412713:	mov    ds:0x76e5f780,al
  412718:	sub    edx,DWORD PTR [eax]
  41271a:	dec    edx
  41271b:	pop    ds
  41271c:	pop    ss
  41271d:	jbe    0x412738
  41271f:	scas   al,BYTE PTR es:[edi]
  412720:	fisub  DWORD PTR [edi-0x5c]
  412723:	out    dx,al
  412724:	cdq    
  412725:	das    
  412726:	xchg   edx,eax
  412727:	jecxz  0x41271a
  412729:	and    DWORD PTR gs:[ebp+edi*1+0x49],ecx
  41272e:	push   0x45b2c645
  412733:	jl     0x412784
  412735:	jb     0x412772
  412737:	cmp    ebp,DWORD PTR [ecx]
  412739:	or     eax,DWORD PTR [ebx+ebp*4+0x208922ee]
  412740:	sbb    WORD PTR [edi+ecx*2],ax
  412744:	aaa    
  412745:	fild   WORD PTR [eax+0x5ced7369]
  41274b:	pop    ebp
  41274c:	into   
  41274d:	repz sub bh,BYTE PTR [edi]
  412750:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412751:	jne    0x4127ce
  412753:	jae    0x4126f7
  412755:	xor    al,0xcb
  412757:	hlt    
  412758:	mov    al,ds:0x180fac4d
  41275d:	loopne 0x412754
  41275f:	pop    edx
  412760:	sub    DWORD PTR [ebx+0x44],eax
  412763:	xor    BYTE PTR [esi+0x26927ce1],cl
  412769:	jmp    0x4126ec
  41276b:	jne    0x412761
  41276d:	test   al,0xe
  41276f:	mov    ds:0x597e44c2,eax
  412774:	fadd   DWORD PTR [ebp+0x35]
  412777:	lahf   
  412778:	stc    
  412779:	and    esp,DWORD PTR [edx-0xd]
  41277c:	jne    0x412790
  41277e:	retf   0xeedb
  412781:	cmp    BYTE PTR [edx-0x51cee755],bl
  412787:	fnstcw WORD PTR [esi-0xa]
  41278a:	mov    esp,0x1486118b
  41278f:	pop    esi
  412790:	mov    cl,0x84
  412792:	cmp    al,0x33
  412794:	or     BYTE PTR [edx],cl
  412796:	add    DWORD PTR [edx+0x105d2329],edx
  41279c:	dec    BYTE PTR [ecx]
  41279e:	aad    0xe5
  4127a0:	add    al,0x5e
  4127a2:	imul   edi,DWORD PTR [eax],0xffffffe3
  4127a5:	bound  eax,QWORD PTR [esi]
  4127a7:	push   0x3d765c65
  4127ac:	add    al,0xe9
  4127ae:	xor    bl,BYTE PTR [edi+ebx*8+0x41]
  4127b2:	sub    eax,0xb97ce0e1
  4127b7:	(bad)  
  4127b8:	call   0xd9b5ffa3
  4127bd:	jl     0x4127bd
  4127bf:	(bad)  
  4127c0:	(bad)  
  4127c1:	aad    0xbb
  4127c3:	out    0x8c,al
  4127c5:	rol    BYTE PTR [ebx+esi*1],1
  4127c8:	call   0x4c40:0xa3aa3279
  4127cf:	push   0xa2482605
  4127d4:	xchg   esi,eax
  4127d5:	loop   0x412782
  4127d7:	inc    eax
  4127d8:	adc    BYTE PTR [eax+ebp*4],dl
  4127db:	pushf  
  4127dc:	aaa    
  4127dd:	outs   dx,BYTE PTR ds:[esi]
  4127de:	mov    dh,0xc8
  4127e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4127e1:	sbb    edx,DWORD PTR [eax+0x5146c9b4]
  4127e7:	cmc    
  4127e8:	sti    
  4127e9:	mov    ecx,0x8c685516
  4127ee:	and    DWORD PTR [edi-0x6a],ebp
  4127f1:	dec    ecx
  4127f2:	xor    BYTE PTR [ebp-0x7f],al
  4127f5:	inc    ebp
  4127f6:	mov    ecx,DWORD PTR [esp+eiz*8+0x7f]
  4127fa:	in     al,dx
  4127fb:	ins    BYTE PTR es:[edi],dx
  4127fc:	test   DWORD PTR [ebx],ebp
  4127fe:	jmp    0xf011:0x62c51945
  412805:	sbb    BYTE PTR [bp+di+0x5a9],bh
  41280a:	mov    bh,0x93
  41280c:	outs   dx,DWORD PTR ds:[esi]
  41280d:	icebp  
  41280e:	sbb    al,ah
  412810:	pop    edi
  412811:	and    eax,0x9862f464
  412816:	mov    eax,0x338bdb5d
  41281b:	popf   
  41281c:	jmp    0x229934c8
  412821:	out    0x81,eax
  412823:	mov    ch,0xbe
  412825:	xchg   ecx,eax
  412826:	jmp    DWORD PTR [esi+0x40]
  412829:	mov    BYTE PTR [eax+0x4f],0x56
  41282d:	dec    esi
  41282e:	lds    eax,FWORD PTR [ebx]
  412830:	ins    BYTE PTR es:[edi],dx
  412831:	or     edi,ebx
  412833:	sub    al,0x9
  412835:	fcomp  QWORD PTR [ebx+0x2171b40a]
  41283b:	xor    cl,BYTE PTR [ebp-0x4f]
  41283e:	mov    esp,0xb40877e8
  412843:	cmp    bh,BYTE PTR [esi+0x9]
  412846:	dec    edi
  412847:	arpl   bp,bx
  412849:	ret    
  41284a:	sbb    esp,DWORD PTR [edx]
  41284c:	(bad)  
  41284d:	mov    eax,ds:0x443eb47a
  412852:	sub    ebp,DWORD PTR ds:0xb9a9d758
  412858:	lea    esi,[edx+edx*2]
  41285b:	mov    eax,ds:0xa984a00c
  412860:	push   0x67
  412862:	xchg   bl,bl
  412864:	xlat   BYTE PTR cs:[ebx]
  412866:	ror    DWORD PTR [eax+eax*1+0x19962191],0x5d
  41286e:	xor    al,0x97
  412870:	cwde   
  412871:	ss inc edi
  412873:	ss xchg edi,eax
  412875:	xchg   esi,eax
  412876:	loop   0x4128d1
  412878:	jp     0x41280c
  41287a:	sbb    eax,0x182c91c8
  41287f:	pop    ebx
  412880:	pushf  
  412881:	xor    eax,edx
  412883:	push   esp
  412884:	fisubr DWORD PTR [eax+0x2b]
  412887:	loopne 0x412866
  412889:	mov    bl,0x2d
  41288b:	sbb    al,ch
  41288d:	idiv   DWORD PTR [esi+0x5afe8ca7]
  412893:	lahf   
  412894:	or     ah,al
  412896:	jecxz  0x41285f
  412898:	dec    eax
  412899:	repz dec edi
  41289b:	dec    esp
  41289c:	cld    
  41289d:	loope  0x412867
  41289f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128a0:	mov    bh,0xb4
  4128a2:	(bad)  
  4128a3:	es dec ecx
  4128a5:	xchg   edx,eax
  4128a6:	pop    edx
  4128a7:	pop    esp
  4128a8:	inc    edi
  4128a9:	add    BYTE PTR [ecx-0x15ebbba],ch
  4128af:	dec    edx
  4128b0:	xor    DWORD PTR ds:0xb886bce4,ebp
  4128b6:	xlat   BYTE PTR ds:[ebx]
  4128b7:	lods   al,BYTE PTR ds:[esi]
  4128b8:	into   
  4128b9:	mov    cl,0x80
  4128bb:	mov    al,ds:0xe42f7511
  4128c0:	and    dh,BYTE PTR [edi]
  4128c2:	xchg   ebx,eax
  4128c3:	ds call 0x8ea88869
  4128c9:	jnp    0x4128c9
  4128cb:	out    dx,al
  4128cc:	pop    ebp
  4128cd:	inc    ecx
  4128ce:	retf   
  4128cf:	lods   al,BYTE PTR ds:[esi]
  4128d0:	xchg   ah,ch
  4128d2:	in     al,0xe0
  4128d4:	xchg   DWORD PTR [ebp-0x48a69dd8],edi
  4128da:	xchg   edx,eax
  4128db:	pop    ds
  4128dc:	mov    fs,ebp
  4128de:	dec    BYTE PTR [ebx+0x27]
  4128e1:	push   es
  4128e2:	(bad)  
  4128e3:	and    al,dh
  4128e5:	or     ebx,ecx
  4128e7:	(bad)  
  4128e8:	cmp    ah,0xd2
  4128eb:	pop    eax
  4128ec:	xchg   ecx,eax
  4128ed:	lods   eax,DWORD PTR ds:[esi]
  4128ee:	cmp    bh,ch
  4128f0:	sbb    eax,0xd09bdb8d
  4128f5:	jmp    0x401c:0x2c1bea8a
  4128fc:	gs xchg edx,esp
  4128ff:	sbb    BYTE PTR [ecx+0x6f],dh
  412902:	(bad)  
  412903:	ja     0x41296c
  412905:	mov    esi,0x918d2955
  41290a:	and    BYTE PTR [edi+0x76],cl
  41290d:	add    ebx,DWORD PTR [edi-0x579e5d9d]
  412913:	pushf  
  412914:	fld    QWORD PTR [ebx-0x6cbcff0a]
  41291a:	(bad)  
  41291b:	lods   al,BYTE PTR ds:[esi]
  41291c:	nop
  41291d:	cmp    al,0xe4
  41291f:	mov    BYTE PTR [edi-0x66],dl
  412922:	fdivr  DWORD PTR [edx+0x2d2f2990]
  412928:	xor    eax,0x845d9c14
  41292d:	jmp    0x5ee632dd
  412932:	shr    ch,cl
  412934:	lds    edx,FWORD PTR [edi-0x5ef3a009]
  41293a:	enter  0xa255,0xf7
  41293e:	stos   DWORD PTR es:[edi],eax
  41293f:	test   DWORD PTR [eax-0x72],edx
  412942:	xor    eax,0xd18413c2
  412947:	shl    DWORD PTR [esi],0x2b
  41294a:	fild   WORD PTR [ebx+0x1243f8c2]
  412950:	in     eax,0x23
  412952:	xlat   BYTE PTR ds:[ebx]
  412953:	aas    
  412954:	xor    ecx,edi
  412956:	into   
  412957:	mov    edx,0xb962f36d
  41295c:	xor    edi,DWORD PTR [edx+0x34]
  41295f:	gs jne 0x412952
  412962:	rcl    BYTE PTR ds:0x1a90a17c,cl
  412968:	sub    DWORD PTR [ecx],edx
  41296a:	add    ch,al
  41296c:	mov    ebx,0x109f1bde
  412971:	mov    bh,0xdf
  412973:	outs   dx,DWORD PTR ds:[esi]
  412974:	jmp    0xfc6b:0xb5f6a266
  41297b:	call   0x10ad3715
  412980:	mov    gs,WORD PTR fs:[ecx+0x7c]
  412984:	out    dx,al
  412985:	(bad)  
  412987:	add    eax,0xcff2a249
  41298c:	mov    dl,BYTE PTR [ebx-0x43]
  41298f:	pop    ecx
  412990:	cs in  eax,0x82
  412993:	xchg   esi,eax
  412994:	fcomip st,st(2)
  412996:	and    eax,0xa57dc182
  41299b:	mov    edi,esp
  41299d:	sub    al,0x96
  41299f:	mov    WORD PTR ds:0xda6e2761,?
  4129a5:	dec    esi
  4129a6:	push   es
  4129a7:	fmul   DWORD PTR [ecx]
  4129a9:	cs faddp st(5),st
  4129ac:	not    DWORD PTR [ecx+0x590c04dd]
  4129b2:	adc    al,0xae
  4129b4:	pop    edi
  4129b5:	push   0xffffff89
  4129b7:	fs ja  0x412992
  4129ba:	jecxz  0x4129fa
  4129bc:	lods   al,BYTE PTR ds:[esi]
  4129bd:	cli    
  4129be:	cli    
  4129bf:	add    BYTE PTR [edx-0x55],dl
  4129c2:	rcr    edi,1
  4129c4:	stos   BYTE PTR es:[edi],al
  4129c5:	mov    bl,0xc0
  4129c7:	in     al,0xa2
  4129c9:	es shl cl,1
  4129cc:	out    0xbd,al
  4129ce:	imul   ebp,DWORD PTR [edx+0x57ba34b6],0x54
  4129d5:	pushf  
  4129d6:	xchg   esp,eax
  4129d7:	test   eax,0xbbf43847
  4129dc:	ror    ebp,0x97
  4129df:	dec    eax
  4129e0:	loopne 0x412a54
  4129e2:	fisttp WORD PTR [ebp+0x7]
  4129e5:	ds mov dl,0x28
  4129e8:	scas   al,BYTE PTR es:[edi]
  4129e9:	neg    DWORD PTR [edx+0x69428f72]
  4129ef:	ja     0x4129c7
  4129f1:	into   
  4129f2:	mov    edx,0xbe8234d2
  4129f7:	out    dx,eax
  4129f8:	scas   al,BYTE PTR es:[edi]
  4129f9:	lods   eax,DWORD PTR ds:[esi]
  4129fa:	xchg   DWORD PTR [esi-0xa],edx
  4129fd:	pop    edx
  4129fe:	div    BYTE PTR [ebp+0x59]
  412a01:	stc    
  412a02:	add    ebp,DWORD PTR [eax]
  412a04:	sbb    al,0xd6
  412a06:	(bad)  
  412a08:	adc    eax,0x58f12720
  412a0d:	mov    ah,0x9a
  412a0f:	mov    ds:0x9042ac,eax
  412a14:	clc    
  412a15:	into   
  412a16:	imul   edi,DWORD PTR [edx-0x53],0xffffffd9
  412a1a:	add    al,0xa1
  412a1c:	adc    BYTE PTR [eax+0x7adc6452],dl
  412a22:	or     al,0xe2
  412a24:	int    0xe9
  412a26:	cdq    
  412a27:	imul   eax,DWORD PTR [ebx],0xffffffc6
  412a2a:	jns    0x4129b2
  412a2c:	test   eax,0x78b1d6b2
  412a31:	push   esi
  412a32:	rcr    BYTE PTR [eax],0xfe
  412a35:	xchg   edx,eax
  412a36:	scas   eax,DWORD PTR es:[edi]
  412a37:	idiv   BYTE PTR [edi]
  412a39:	(bad)  [ebx+0xd395718]
  412a3f:	dec    ebp
  412a40:	pop    edx
  412a41:	mov    edx,0x305cbe47
  412a46:	daa    
  412a47:	imul   edx,DWORD PTR [eax+0x2f],0x77eb1747
  412a4e:	icebp  
  412a4f:	push   ss
  412a50:	dec    ebp
  412a51:	mov    bh,0x51
  412a53:	out    dx,eax
  412a54:	cmp    DWORD PTR [ecx-0x76],ecx
  412a57:	(bad)  
  412a58:	out    0x69,eax
  412a5a:	cli    
  412a5b:	fcomp  DWORD PTR [eax-0x75401acf]
  412a61:	and    dl,ah
  412a63:	sub    DWORD PTR [ebx],eax
  412a65:	sub    eax,0xdb606289
  412a6a:	repz sbb BYTE PTR [ecx-0x3e147b76],dl
  412a71:	loop   0x412ab3
  412a73:	cwde   
  412a74:	or     ebp,DWORD PTR [ebp-0x689c6b39]
  412a7a:	push   ebx
  412a7b:	and    dh,dh
  412a7d:	fs push edi
  412a7f:	ror    BYTE PTR [ecx+eiz*1+0x3814b1e0],cl
  412a86:	jle    0x412ab2
  412a88:	into   
  412a89:	sub    DWORD PTR [edi-0x50ef06b5],esi
  412a8f:	not    BYTE PTR [esp+eiz*8]
  412a92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a93:	xchg   edi,eax
  412a94:	xchg   esp,eax
  412a95:	popf   
  412a96:	loope  0x412b0f
  412a98:	xchg   BYTE PTR [esi],dl
  412a9a:	pop    ds
  412a9b:	or     ebx,DWORD PTR [eax]
  412a9d:	test   al,0x2e
  412a9f:	mov    db2,edx
  412aa2:	inc    esi
  412aa3:	js     0x412aca
  412aa5:	nop
  412aa6:	or     DWORD PTR [edx+0x682629e9],0x407e27f3
  412ab0:	fidivr DWORD PTR [eax-0x1]
  412ab3:	ins    DWORD PTR es:[edi],dx
  412ab4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ab6:	sbb    esp,DWORD PTR [edx-0x59]
  412ab9:	mov    eax,ds:0xf7c3963b
  412abe:	jmp    0x438523dd
  412ac3:	xchg   ebx,eax
  412ac4:	pop    esi
  412ac5:	fidivr WORD PTR [eax+0x2987187d]
  412acb:	iret   
  412acc:	aam    0xa8
  412ace:	fst    QWORD PTR [edx]
  412ad0:	inc    esp
  412ad1:	jmp    0x412b32
  412ad3:	inc    eax
  412ad4:	inc    edi
  412ad5:	pop    edi
  412ad6:	not    BYTE PTR [eax]
  412ad8:	mov    ah,0x42
  412ada:	xchg   ebx,eax
  412adb:	ror    cl,cl
  412add:	pop    esp
  412ade:	cli    
  412adf:	sub    esp,DWORD PTR [ebx]
  412ae1:	xchg   edx,eax
  412ae2:	daa    
  412ae3:	inc    ebp
  412ae4:	outs   dx,BYTE PTR ds:[esi]
  412ae5:	lods   al,BYTE PTR ds:[esi]
  412ae6:	mov    eax,ds:0x201dfb91
  412aeb:	in     eax,0x8a
  412aed:	mov    ds:0xe0e4a2eb,eax
  412af2:	mov    eax,0x12740007
  412af7:	arpl   sp,sp
  412af9:	jmp    0x31579003
  412afe:	test   al,0x5c
  412b00:	mov    ebx,0xc3c33625
  412b05:	cli    
  412b06:	mov    ecx,DWORD PTR ds:0x63848112
  412b0c:	fist   DWORD PTR [eax]
  412b0e:	push   0x58
  412b10:	sti    
  412b11:	xor    edx,esp
  412b13:	jge    0x412b24
  412b15:	aad    0xd7
  412b17:	dec    eax
  412b18:	xlat   BYTE PTR ds:[ebx]
  412b19:	or     BYTE PTR [ebx],dh
  412b1b:	fstp   DWORD PTR ds:0x904a086
  412b21:	lea    esi,[edx+0x1]
  412b24:	sti    
  412b25:	sub    dl,BYTE PTR [eax]
  412b27:	repz cdq 
  412b29:	je     0x412afb
  412b2b:	je     0x412b7e
  412b2d:	test   WORD PTR [ecx],bx
  412b30:	std    
  412b31:	nop
  412b32:	(bad)  [edx+ecx*1+0x11]
  412b36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b37:	repz xchg esp,eax
  412b39:	mov    eax,0x5730cdb9
  412b3e:	inc    edx
  412b3f:	push   ebp
  412b40:	repnz and cl,dh
  412b43:	and    al,0xf5
  412b45:	pop    ebx
  412b46:	jmp    0x4418f5d9
  412b4b:	shl    BYTE PTR [ebp-0x669fe404],1
  412b51:	popa   
  412b52:	inc    ebp
  412b53:	imul   edi,DWORD PTR [ecx],0xa8839bcb
  412b59:	add    eax,0x5931c387
  412b5e:	stos   DWORD PTR es:[edi],eax
  412b5f:	aaa    
  412b60:	std    
  412b61:	cld    
  412b62:	dec    edi
  412b63:	push   ds
  412b64:	mov    cl,0x60
  412b66:	xchg   ebp,eax
  412b67:	adc    DWORD PTR [edx-0x65],esi
  412b6a:	inc    esi
  412b6b:	mov    bh,BYTE PTR [ecx+0x39adb23b]
  412b71:	ret    
  412b72:	in     eax,dx
  412b73:	std    
  412b74:	imul   ecx,DWORD PTR [ecx+esi*2+0x1f1e5623],0x19
  412b7c:	call   0x3c90c9a1
  412b81:	sbb    BYTE PTR [eax+0x52],dl
  412b84:	pop    esi
  412b85:	fsubr  QWORD PTR [esi+0x33310cc7]
  412b8b:	mov    al,ds:0x59b57d1c
  412b90:	into   
  412b91:	stos   DWORD PTR es:[edi],eax
  412b92:	pusha  
  412b93:	mov    WORD PTR [ebx],cs
  412b95:	mov    ?,edi
  412b97:	test   al,0x6b
  412b99:	lea    ebx,[edi-0x6d6db4d5]
  412b9f:	mov    al,0xff
  412ba1:	pop    esp
  412ba2:	xor    eax,0x2ee22be9
  412ba7:	pop    edi
  412ba8:	in     al,dx
  412ba9:	repz mov al,ds:0x409c273c
  412baf:	hlt    
  412bb0:	fwait
  412bb1:	jne    0x412ba0
  412bb3:	ins    BYTE PTR es:[edi],dx
  412bb4:	cwde   
  412bb5:	call   DWORD PTR [ebp+ecx*2+0x7a5e582a]
  412bbc:	or     al,0xb2
  412bbe:	data16 fadd QWORD PTR [eax]
  412bc1:	push   edx
  412bc2:	inc    edx
  412bc3:	and    eax,0x687e05a0
  412bc8:	mov    DWORD PTR [ebx+0x43],edi
  412bcb:	adc    dl,BYTE PTR [eax-0xf64ad89]
  412bd1:	jg     0x412bb8
  412bd3:	ds mov ebx,0x397e5ceb
  412bd9:	rcr    ebx,1
  412bdb:	sar    ah,cl
  412bdd:	lahf   
  412bde:	sahf   
  412bdf:	rol    DWORD PTR [ecx],cl
  412be1:	rol    BYTE PTR [esi+0x6dce8777],0xc5
  412be8:	lahf   
  412be9:	mov    al,ds:0xed803971
  412bee:	(bad)  
  412bef:	push   0x6
  412bf1:	(bad)  
  412bf3:	xor    eax,0x11a57b3c
  412bf8:	adc    al,0xf9
  412bfa:	xor    ch,BYTE PTR [ebp-0x7781a253]
  412c00:	fbstp  TBYTE PTR [edx+ebx*8-0x20]
  412c04:	mov    ebp,0xda12924f
  412c09:	out    0xca,eax
  412c0b:	leave  
  412c0c:	push   ebx
  412c0d:	daa    
  412c0e:	loop   0x412c71
  412c10:	outs   dx,BYTE PTR ds:[esi]
  412c11:	sub    al,BYTE PTR [edi+0x10]
  412c14:	pop    edx
  412c15:	mov    esi,0x4d36f08b
  412c1a:	imul   eax,DWORD PTR [edx-0x15216aba],0x9ed4eaab
  412c24:	fdiv   st,st(7)
  412c26:	push   ecx
  412c27:	mov    ds,WORD PTR [edi-0x42]
  412c2a:	add    DWORD PTR [ecx-0x73],0xffffffd4
  412c2e:	lods   al,BYTE PTR ds:[esi]
  412c2f:	xor    esp,DWORD PTR [eax+eax*8-0x23]
  412c33:	xchg   esi,eax
  412c34:	fisttp WORD PTR es:[esi+eax*1+0x5d]
  412c39:	xlat   BYTE PTR ds:[ebx]
  412c3a:	(bad)  
  412c3b:	call   0x3ff82c0
  412c40:	and    eax,0x2d9d2a28
  412c45:	cmp    eax,0x3a8a893e
  412c4a:	cs cwde 
  412c4c:	iret   
  412c4d:	mov    dl,BYTE PTR [ecx]
  412c4f:	repz xlat BYTE PTR ds:[ebx]
  412c51:	mov    edi,0x436feb6f
  412c56:	xor    edi,DWORD PTR [ebx+0x33cb9ee]
  412c5c:	repz xchg ebp,eax
  412c5e:	dec    esi
  412c5f:	mov    ds:0xadbd99de,al
  412c64:	jmp    0x412c64
  412c66:	xor    eax,0x8eed4011
  412c6b:	xchg   edi,eax
  412c6c:	xchg   ebp,eax
  412c6d:	aas    
  412c6e:	jo     0x412c43
  412c70:	dec    edi
  412c71:	sbb    BYTE PTR [eax],al
  412c73:	or     DWORD PTR [esi],ebp
  412c75:	mov    al,0xec
  412c77:	push   ecx
  412c78:	sub    ebp,DWORD PTR [ebx]
  412c7a:	inc    esi
  412c7b:	test   eax,0xe0acf8a9
  412c80:	es nop
  412c82:	sub    esi,DWORD PTR [edx+0x4c394160]
  412c88:	in     al,0x1b
  412c8a:	(bad)  
  412c8c:	mov    ss,WORD PTR [edx+0x5c]
  412c8f:	scas   eax,DWORD PTR es:[edi]
  412c90:	into   
  412c91:	stc    
  412c92:	sti    
  412c93:	sbb    al,0xb8
  412c95:	xor    eax,0xf1f3c39b
  412c9a:	loop   0x412c2a
  412c9c:	es jo  0x412ca5
  412c9f:	inc    eax
  412ca0:	push   0xffffffe3
  412ca2:	in     eax,0x34
  412ca4:	sub    esi,DWORD PTR [esi-0x4f511bc7]
  412caa:	or     al,0x0
  412cac:	out    dx,eax
  412cad:	adc    DWORD PTR [esi+edx*8],eax
  412cb0:	int    0x4f
  412cb2:	or     BYTE PTR [edx+ebx*4-0x2cf281b0],ch
  412cb9:	inc    esi
  412cba:	cdq    
  412cbb:	ins    BYTE PTR es:[edi],dx
  412cbc:	(bad)  
  412cbd:	push   cs
  412cbe:	and    dl,BYTE PTR [ebp-0xc]
  412cc1:	add    al,0xd7
  412cc3:	jl     0x412cd0
  412cc5:	cli    
  412cc6:	pop    ebp
  412cc7:	js     0x412d3a
  412cc9:	and    DWORD PTR [eax-0x34],eax
  412ccc:	jbe    0x412ceb
  412cce:	sbb    eax,0xcc33af97
  412cd3:	pop    ebp
  412cd4:	or     ecx,DWORD PTR ds:0xa3feb56a
  412cda:	inc    edi
  412cdb:	xchg   edx,eax
  412cdc:	mul    BYTE PTR [edx+0x68ec6549]
  412ce2:	jnp    0x412caa
  412ce4:	in     eax,0xac
  412ce6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ce7:	mov    BYTE PTR [ecx],ch
  412ce9:	push   ds
  412cea:	dec    esi
  412ceb:	lods   al,BYTE PTR ds:[esi]
  412cec:	inc    esi
  412ced:	mov    edi,0x641a70d6
  412cf2:	cmp    DWORD PTR [ebx-0x26],ebp
  412cf5:	fdivrp st(1),st
  412cf7:	pushf  
  412cf8:	xchg   edi,eax
  412cf9:	and    al,0x3d
  412cfb:	or     BYTE PTR [ecx-0xa],dh
  412cfe:	sbb    edx,DWORD PTR [edi]
  412d00:	push   eax
  412d01:	pop    ebx
  412d02:	xor    edx,DWORD PTR [ebp+0x77]
  412d05:	popf   
  412d06:	jmp    0x4174:0x17e4569f
  412d0d:	call   DWORD PTR [ecx]
  412d0f:	or     BYTE PTR [ecx+0x2b0edc40],dl
  412d15:	mov    al,0xd8
  412d17:	lock (bad) 
  412d19:	ins    DWORD PTR es:[edi],dx
  412d1a:	iret   
  412d1b:	xchg   ebp,eax
  412d1c:	(bad)  
  412d1d:	sbb    ah,BYTE PTR [edi+ecx*2+0x28]
  412d21:	jns    0x412ce4
  412d23:	imul   ecx,DWORD PTR [ecx-0xf0719bc],0x3ec4f878
  412d2d:	(bad)  
  412d2e:	jecxz  0x412da5
  412d30:	repz pop edi
  412d32:	xchg   dl,ch
  412d34:	sti    
  412d35:	inc    esi
  412d36:	jbe    0x412cf3
  412d38:	push   ecx
  412d39:	dec    ebx
  412d3a:	icebp  
  412d3b:	cmp    DWORD PTR [ebx-0x2d],edi
  412d3e:	dec    ebx
  412d3f:	inc    eax
  412d40:	shl    BYTE PTR [eax-0x24],0xf5
  412d44:	clc    
  412d45:	mov    dh,0x16
  412d47:	loop   0x412cfb
  412d49:	loope  0x412d1e
  412d4b:	aaa    
  412d4c:	call   FWORD PTR ds:0x40f7222
  412d52:	mov    ch,bh
  412d54:	and    DWORD PTR [ebx],edi
  412d56:	es jb  0x412d30
  412d59:	xor    eax,edi
  412d5b:	cld    
  412d5c:	scas   eax,DWORD PTR es:[edi]
  412d5d:	add    DWORD PTR [eax],0x1f4babfc
  412d63:	rcr    DWORD PTR [edi-0x7738a5],0x87
  412d6a:	dec    ecx
  412d6b:	repz inc ah
  412d6e:	inc    ebx
  412d6f:	repnz inc esp
  412d71:	sbb    DWORD PTR [eax+ebx*2-0x3cf08e0],edi
  412d78:	add    bh,bl
  412d7a:	repnz mov esp,0xea3c24b3
  412d80:	sar    DWORD PTR [edx-0x27],1
  412d83:	xor    eax,0xb1200b73
  412d88:	cmp    al,0x2c
  412d8a:	pop    ss
  412d8b:	arpl   WORD PTR [eax-0x19],di
  412d8e:	nop
  412d8f:	jae    0x412de0
  412d91:	lahf   
  412d92:	aaa    
  412d93:	or     esi,DWORD PTR [esp+0x29cf0c98]
  412d9a:	(bad)  
  412d9b:	imul   esp,DWORD PTR [ebx-0x3],0xde0a7e0
  412da2:	ins    DWORD PTR es:[edi],dx
  412da3:	div    BYTE PTR [eax+0x61]
  412da6:	les    edx,FWORD PTR [eax+0x2716a86d]
  412dac:	jae    0x412dcf
  412dae:	and    BYTE PTR [ebx+edx*8-0x4],cl
  412db2:	fisubr DWORD PTR [edi]
  412db4:	aas    
  412db5:	jno    0x412db5
  412db7:	mov    ds:0xcafccb99,al
  412dbc:	jle    0x412dc1
  412dbe:	inc    ebx
  412dbf:	push   eax
  412dc0:	pop    edx
  412dc1:	add    ch,BYTE PTR [edx+edi*4-0x33]
  412dc5:	jns    0x412d99
  412dc7:	in     al,0xe3
  412dc9:	dec    ebp
  412dca:	stos   BYTE PTR es:[edi],al
  412dcb:	xor    dh,BYTE PTR [esi-0x22d53f0f]
  412dd1:	lahf   
  412dd2:	cmp    bh,BYTE PTR [ebp-0x7a848b6d]
  412dd8:	out    0x18,al
  412dda:	add    al,0xe5
  412ddc:	pop    ebx
  412ddd:	gs dec ecx
  412ddf:	out    dx,eax
  412de0:	(bad)  
  412de1:	adc    BYTE PTR [ebp+0x23c079b8],ah
  412de7:	test   cl,ch
  412de9:	cmp    al,0xb
  412deb:	push   es
  412dec:	(bad)  [ecx-0x7]
  412def:	mov    bh,0xee
  412df1:	mov    edi,0x62b28a70
  412df6:	repz xor dl,BYTE PTR [ebx]
  412df9:	(bad)  
  412dfa:	jne    0x412e16
  412dfc:	nop
  412dfd:	fld    QWORD PTR [eax+0xbde4c0c]
  412e03:	and    BYTE PTR [ebx+0x5f],ah
  412e06:	cmp    al,0x6d
  412e08:	pop    edi
  412e09:	sbb    edx,0xffffffe2
  412e0c:	inc    esp
  412e0d:	das    
  412e0e:	jle    0x412d99
  412e10:	or     eax,0x8dfd8d99
  412e15:	out    dx,al
  412e16:	xchg   edi,eax
  412e17:	jne    0x412e67
  412e19:	sbb    BYTE PTR gs:[eax-0x122e752e],ah
  412e20:	pop    ds
  412e21:	(bad)  
  412e22:	mov    edx,0xb971e1cd
  412e27:	rol    DWORD PTR [esi+0x46],0xda
  412e2b:	cmp    al,ah
  412e2d:	dec    esp
  412e2e:	sbb    DWORD PTR [ecx+ecx*4],eax
  412e31:	ret    0x7a34
  412e34:	dec    ebp
  412e35:	sub    al,0x48
  412e37:	aaa    
  412e38:	add    BYTE PTR [edx+0x4e],ch
  412e3b:	push   cs
  412e3c:	lods   eax,DWORD PTR cs:[esi]
  412e3e:	add    al,0xeb
  412e40:	xchg   ecx,eax
  412e41:	and    dl,BYTE PTR [ebp+0x4e]
  412e44:	sbb    eax,0x65261b3d
  412e49:	jbe    0x412e1b
  412e4b:	jg     0x412eb7
  412e4d:	(bad)  
  412e4e:	xchg   esp,eax
  412e4f:	stos   BYTE PTR es:[edi],al
  412e50:	jbe    0x412e84
  412e52:	jno    0x412e93
  412e54:	(bad)
  412e59:	xor    al,0xbc
  412e5b:	mov    bl,0x3e
  412e5d:	push   cs
  412e5e:	or     esp,DWORD PTR [ebx+0x53]
  412e61:	out    dx,al
  412e62:	and    DWORD PTR [ebx],0x7c5726e
  412e68:	into   
  412e69:	imul   ecx,DWORD PTR [esi-0xb2da8aa],0x6e
  412e70:	pop    esp
  412e71:	or     DWORD PTR [edi+0x8],edx
  412e74:	sbb    dl,bh
  412e76:	mov    bl,0x89
  412e78:	out    0x29,al
  412e7a:	mov    al,ds:0x3b5e4d48
  412e7f:	clc    
  412e80:	sub    ecx,DWORD PTR [ebx-0x1f18c1e2]
  412e86:	leave  
  412e87:	pop    eax
  412e88:	cmp    edx,DWORD PTR ds:0x8ac075b7
  412e8e:	arpl   WORD PTR [eax+0x1f],bx
  412e91:	hlt    
  412e92:	inc    ecx
  412e93:	push   edx
  412e94:	push   0x5485f81c
  412e99:	mov    ?,WORD PTR [ebx-0x6a1d6448]
  412e9f:	fadd   QWORD PTR [ebx]
  412ea1:	sub    ebx,DWORD PTR [ebp-0x4a]
  412ea4:	inc    ebp
  412ea5:	or     cl,BYTE PTR ds:0x8b77bfd0
  412eab:	and    al,0x7f
  412ead:	sbb    eax,0xf78bc88b
  412eb2:	fdivr  st(6),st
  412eb4:	adc    ebp,ebp
  412eb6:	sub    edx,DWORD PTR [ecx+0x62]
  412eb9:	lds    edi,FWORD PTR [edi]
  412ebb:	xor    eax,0x36c4f868
  412ec0:	ins    DWORD PTR es:[edi],dx
  412ec1:	(bad)  
  412ec2:	push   edx
  412ec3:	pop    ss
  412ec4:	lds    ecx,FWORD PTR [esi+0x73ba633a]
  412eca:	inc    edi
  412ecb:	cmp    DWORD PTR [edi-0x27],ebp
  412ece:	jbe    0x412ec3
  412ed0:	pop    es
  412ed1:	mov    eax,0x1b0a85f3
  412ed6:	fdivr  DWORD PTR [ebx+0x5e32fdc2]
  412edc:	sbb    al,0xb5
  412ede:	in     eax,dx
  412edf:	in     al,0x71
  412ee1:	outs   dx,DWORD PTR ds:[esi]
  412ee2:	cmp    eax,0x5563723e
  412ee7:	or     BYTE PTR [esi-0x9],dh
  412eea:	xor    ecx,edi
  412eec:	fadd   QWORD PTR [edi]
  412eee:	sub    eax,0x6ee280b5
  412ef3:	and    al,0xac
  412ef5:	fmul   DWORD PTR [edx+0x17]
  412ef8:	mov    edi,0x1fb6b48
  412efd:	int3   
  412efe:	in     eax,0xb
  412f00:	je     0x412f80
  412f02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f03:	stos   BYTE PTR es:[edi],al
  412f04:	fdivr  DWORD PTR [esi+0x2f]
  412f07:	mov    ah,0x1e
  412f09:	and    edx,esi
  412f0b:	and    DWORD PTR [eax-0x2c036560],ecx
  412f11:	ret    0xfa1
  412f14:	fwait
  412f15:	sti    
  412f16:	mov    ?,WORD PTR [ecx+0x31]
  412f19:	mov    al,ds:0xde5126cd
  412f1e:	mov    dl,0x20
  412f20:	add    eax,0x23ef5d66
  412f25:	aam    0xa8
  412f27:	mov    edx,0x4ca5e18b
  412f2c:	xor    dl,bh
  412f2e:	icebp  
  412f2f:	mov    bl,0xbb
  412f31:	jo     0x412f98
  412f33:	es cmp ebx,ebp
  412f36:	ins    BYTE PTR es:[edi],dx
  412f37:	retf   0x4d45
  412f3a:	ror    BYTE PTR [edx],0x16
  412f3d:	xchg   BYTE PTR [ebx+ecx*1+0x7bf89040],bl
  412f44:	pop    edi
  412f45:	aam    0x64
  412f47:	push   0xffffffee
  412f49:	push   edi
  412f4a:	sbb    al,0x15
  412f4c:	js     0x412f5d
  412f4e:	xlat   BYTE PTR ds:[ebx]
  412f4f:	dec    eax
  412f50:	dec    eax
  412f51:	xchg   edi,eax
  412f52:	or     al,ah
  412f54:	lock adc eax,DWORD PTR [edx+0x2d]
  412f58:	pop    esi
  412f59:	xlat   BYTE PTR ds:[ebx]
  412f5a:	add    eax,0x6f
  412f5d:	inc    DWORD PTR [edx+0x28]
  412f60:	inc    eax
  412f61:	xor    ecx,DWORD PTR [ecx-0x6aaec5cd]
  412f67:	push   ecx
  412f68:	push   ds
  412f69:	pushf  
  412f6a:	dec    BYTE PTR [ebp-0x3c]
  412f6d:	cmp    BYTE PTR [esi+eax*8-0x66],cl
  412f71:	inc    ecx
  412f72:	fs pusha 
  412f74:	hlt    
  412f75:	cdq    
  412f76:	jnp    0x412ff1
  412f78:	inc    ebp
  412f79:	out    0x78,al
  412f7b:	imul   ebp,ecx,0xa6d725b5
  412f81:	or     eax,DWORD PTR [edi+0x61]
  412f84:	inc    eax
  412f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f86:	repz or esi,DWORD PTR [esi+0x25f4b1a3]
  412f8d:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  412f8f:	push   eax
  412f90:	dec    edx
  412f91:	mov    WORD PTR [esi+0x4c7fbb80],ds
  412f97:	push   ss
  412f98:	in     eax,0x3e
  412f9a:	sahf   
  412f9b:	sbb    al,0xc0
  412f9d:	jg     0x412f1f
  412f9f:	push   edx
  412fa0:	call   0xab7:0xf0869a80
  412fa7:	xor    al,0x58
  412fa9:	test   BYTE PTR [edx],bh
  412fab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fac:	or     dl,ah
  412fae:	mul    al
  412fb0:	sar    BYTE PTR [ebx-0x2c],cl
  412fb3:	fadd   QWORD PTR [ebx+0xa0b600]
  412fb9:	(bad)  
  412fbb:	mov    eax,0xcd3e5d62
  412fc0:	jne    0x413035
  412fc2:	pop    eax
  412fc3:	out    dx,al
  412fc4:	pushf  
  412fc5:	cmp    eax,DWORD PTR [edi+0x1bc30e2]
  412fcb:	jge    0x412f96
  412fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fce:	scas   al,BYTE PTR es:[edi]
  412fcf:	inc    edi
  412fd0:	mov    dl,0x60
  412fd2:	adc    ebx,ebx
  412fd4:	xor    bh,0x48
  412fd7:	or     eax,0xf5b16ae0
  412fdc:	shl    DWORD PTR [esi+edi*2-0x3550fb80],0x7f
  412fe4:	cmc    
  412fe5:	je     0x41305d
  412fe7:	jp     0x412fef
  412fe9:	jg     0x413047
  412feb:	or     esp,DWORD PTR [eax+0x6b]
  412fee:	sbb    DWORD PTR [eax+esi*8+0x3],esp
  412ff2:	mov    esi,0x8aa1bc02
  412ff7:	add    bl,ch
  412ff9:	xchg   esi,eax
  412ffa:	(bad)  
  412ffb:	mov    bh,0xaf
  412ffd:	mov    edx,0x3e88b556
  413002:	sub    edi,edi
  413004:	cmp    bl,dl
  413006:	loop   0x41305e
  413008:	push   eax
  413009:	mov    dh,0x96
  41300b:	sub    al,0x7d
  41300d:	js     0x413044
  41300f:	ret    0xfc2f
  413012:	mov    BYTE PTR [edx+ecx*8+0x1e],dl
  413016:	lods   eax,DWORD PTR ds:[esi]
  413017:	popf   
  413018:	aam    0x16
  41301a:	push   0x52
  41301c:	xor    al,0x2b
  41301e:	daa    
  41301f:	scas   eax,DWORD PTR es:[edi]
  413020:	stos   DWORD PTR es:[edi],eax
  413021:	mov    ecx,0xcf53b6a4
  413026:	fnstcw WORD PTR [ebx-0x39]
  413029:	cmp    al,0x50
  41302b:	loopne 0x4130a9
  41302d:	daa    
  41302e:	std    
  41302f:	rol    dl,0xba
  413032:	jno    0x413096
  413034:	enter  0xf86d,0xe2
  413038:	(bad)  
  413039:	fcomip st,st(2)
  41303b:	hlt    
  41303c:	dec    edi
  41303d:	arpl   WORD PTR [ebx*8-0x39eb7a51],bp
  413044:	ss add al,0x42
  413047:	dec    esi
  413048:	enter  0x41c9,0x1
  41304c:	cmp    BYTE PTR [eax-0x131ad7da],bh
  413052:	stos   BYTE PTR es:[edi],al
  413053:	outs   dx,BYTE PTR ds:[esi]
  413054:	jl     0x412fe7
  413056:	or     cl,BYTE PTR [esi+0x3c]
  413059:	fdivr  QWORD PTR [esp+eiz*2+0x6aa5a04]
  413060:	add    ebp,DWORD PTR cs:[eax-0x59]
  413064:	scas   eax,DWORD PTR es:[edi]
  413065:	sub    dl,BYTE PTR [edi-0x383ef71e]
  41306b:	lock inc edx
  41306d:	mov    bl,BYTE PTR [ecx-0x59]
  413070:	popf   
  413071:	sbb    BYTE PTR [edi+edx*2],dh
  413074:	aam    0xb6
  413076:	or     DWORD PTR [ecx-0x55d4c16f],esp
  41307c:	adc    DWORD PTR fs:[edx+0x31dabbc2],eax
  413083:	(bad)  
  413084:	xchg   esp,eax
  413085:	pop    ss
  413086:	lock imul esp,DWORD PTR [ecx],0xd139f3b5
  41308d:	pop    edx
  41308e:	and    dh,BYTE PTR [ebx]
  413090:	and    eax,0x8bf9f70e
  413095:	popa   
  413096:	add    ah,BYTE PTR [edx-0x77f6264]
  41309c:	data16 jns 0x4130c8
  41309f:	bound  eax,QWORD PTR [ecx+0x5a]
  4130a2:	dec    edi
  4130a3:	inc    ebp
  4130a4:	mov    al,ds:0x2122be4c
  4130a9:	mov    DWORD PTR [eax-0x71],esi
  4130ac:	add    al,0x1
  4130ae:	ss and eax,0xd39f0c67
  4130b4:	aad    0x1c
  4130b6:	mov    ds:0x397f61d2,al
  4130bb:	out    0x97,al
  4130bd:	cmp    DWORD PTR [ebx+eiz*1-0x60e2bca6],ebp
  4130c4:	xor    al,0x58
  4130c6:	pop    esp
  4130c7:	jmp    0x41308b
  4130c9:	pop    ebx
  4130ca:	mov    ch,0xb3
  4130cc:	jge    0x41310c
  4130ce:	xor    BYTE PTR [eax],ch
  4130d0:	mov    al,ds:0x52f60e33
  4130d5:	pushf  
  4130d6:	cmp    al,0xb9
  4130d8:	lock xchg BYTE PTR [edi-0x2fc104d8],dh
  4130df:	test   eax,0xc76a9378
  4130e4:	sbb    ebp,DWORD PTR [edx+0x4fd7a693]
  4130ea:	mov    WORD PTR [esi],ss
  4130ec:	sbb    DWORD PTR [esi],ebp
  4130ee:	or     al,0x41
  4130f0:	ins    DWORD PTR es:[edi],dx
  4130f1:	cwde   
  4130f2:	ret    0xff5d
  4130f5:	mov    ch,0x13
  4130f7:	dec    ebx
  4130f8:	test   eax,0x6b5c8d90
  4130fd:	mov    WORD PTR [edi+esi*4],gs
  413100:	mov    ebx,DWORD PTR [eax-0x43b7f2e]
  413106:	mov    eax,ds:0x3a6cdb9a
  41310b:	ret    0x3626
  41310e:	popa   
  41310f:	xor    BYTE PTR [ebp-0x5b],0xc1
  413113:	cld    
  413114:	jp     0x41309c
  413116:	adc    al,dl
  413118:	sti    
  413119:	jb     0x4130f3
  41311b:	inc    esi
  41311c:	xchg   edi,eax
  41311d:	push   0x64a5eb00
  413122:	fcom   QWORD PTR [ebx+0x4b]
  413125:	inc    esi
  413126:	jne    0x4130fc
  413128:	hlt    
  413129:	jo     0x41318e
  41312b:	add    DWORD PTR ds:0x61ad0756,0x2
  413132:	and    ecx,edi
  413134:	mov    ebp,DWORD PTR [esp+edx*1]
  413137:	add    DWORD PTR [ebp+edx*8+0x6a],ecx
  41313b:	mov    ds:0xe2af0334,al
  413140:	jbe    0x41316c
  413142:	jo     0x413171
  413144:	icebp  
  413145:	loopne 0x41319d
  413147:	loopne 0x4130eb
  413149:	lea    ebp,[esi]
  41314b:	mov    WORD PTR [edi+0x58],fs
  41314e:	jae    0x4130e7
  413150:	addr16 inc edx
  413152:	clc    
  413153:	pop    ebx
  413154:	into   
  413155:	cmp    al,0x10
  413157:	call   FWORD PTR [ebx+0x46]
  41315a:	and    eax,0xb67a6c57
  41315f:	jge    0x413154
  413161:	(bad)  
  413163:	or     DWORD PTR [edi-0x1a44d0df],eax
  413169:	shl    DWORD PTR [edx-0x71af442],0xf3
  413170:	add    ch,cl
  413172:	sub    DWORD PTR ss:[edx+0x46],edi
  413176:	ds jmp 0x3097:0x672ff86
  41317e:	sbb    ch,BYTE PTR [ecx-0x616c31bd]
  413184:	mov    cl,0x13
  413186:	es dec ebx
  413188:	dec    edi
  413189:	cmp    al,0x8c
  41318b:	bnd jo 0x413135
  41318e:	xor    dh,BYTE PTR [ecx-0x2]
  413191:	iret   
  413192:	nop
  413193:	shl    BYTE PTR [ebx],0x46
  413196:	sub    BYTE PTR [esi-0x4ddc2fd8],bl
  41319c:	cmp    BYTE PTR [ebx-0x49],bh
  41319f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4131a0:	inc    esp
  4131a1:	and    BYTE PTR ds:0x24a86f17,cl
  4131a7:	jb     0x413171
  4131a9:	fs mov dl,0xb0
  4131ac:	hlt    
  4131ad:	in     eax,dx
  4131ae:	dec    eax
  4131af:	pusha  
  4131b0:	mov    bh,0x3e
  4131b2:	ds sbb eax,0xd7450116
  4131b8:	fs cs femms 
  4131bc:	scas   al,BYTE PTR es:[edi]
  4131bd:	xchg   esi,eax
  4131be:	test   DWORD PTR [edi+0x2653c5d7],ecx
  4131c4:	call   0x73f8:0x6f110d70
  4131cb:	mov    bl,0xae
  4131cd:	popf   
  4131ce:	jnp    0x413241
  4131d0:	pushf  
  4131d1:	(bad)  
  4131d2:	int3   
  4131d3:	out    0xb4,eax
  4131d5:	sbb    BYTE PTR ds:0x3c72b76a,0x17
  4131dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131dd:	shl    BYTE PTR ds:0x787e2efb,1
  4131e3:	outs   dx,DWORD PTR ds:[esi]
  4131e4:	dec    ecx
  4131e5:	fisttp DWORD PTR [edi]
  4131e7:	pusha  
  4131e8:	jp     0x413171
  4131ea:	xor    dl,BYTE PTR ds:0xff594812
  4131f0:	or     BYTE PTR [edx-0x2dfba088],0x3
  4131f7:	jg     0x413182
  4131f9:	ret    0xeb53
  4131fc:	adc    BYTE PTR [ebx],ch
  4131fe:	sub    eax,0x118ca515
  413203:	push   ss
  413204:	ds push es
  413206:	pop    ds
  413207:	cld    
  413208:	sbb    eax,0xf10a1003
  41320d:	mov    bl,0xd5
  41320f:	into   
  413210:	das    
  413211:	mov    ecx,esp
  413213:	sub    DWORD PTR [esi-0x60],0x3e
  413217:	sbb    edx,DWORD PTR [edx+0x3404b620]
  41321d:	sbb    BYTE PTR [ebp+0x3f],al
  413220:	push   ds
  413221:	mov    ebp,0xe4911f90
  413226:	cmp    ah,dh
  413228:	xchg   esp,eax
  413229:	mov    bl,0xef
  41322b:	inc    edx
  41322c:	inc    ecx
  41322d:	daa    
  41322e:	rcr    dh,0x13
  413231:	shr    BYTE PTR [edx+0x7fad7672],cl
  413237:	js     0x4131c9
  413239:	pop    ss
  41323a:	popa   
  41323b:	pop    ebx
  41323c:	inc    ebx
  41323d:	lods   eax,DWORD PTR ds:[esi]
  41323e:	mov    esi,0x210d8a14
  413243:	mov    dh,BYTE PTR [esi-0x3f]
  413246:	or     eax,0xa1af006
  41324b:	adc    bl,ch
  41324d:	loopne 0x413279
  41324f:	daa    
  413250:	push   0xffffff91
  413252:	andnps xmm4,XMMWORD PTR [ecx-0x7bcad7a6]
  413259:	xchg   ecx,eax
  41325a:	arpl   sp,di
  41325c:	mov    esp,0x95b1e73
  413261:	gs dec ebx
  413263:	jae    0x41329b
  413265:	cmp    eax,DWORD PTR [esi+0x2b]
  413268:	dec    eax
  413269:	xlat   BYTE PTR ds:[ebx]
  41326a:	test   eax,0x1dbe8992
  41326f:	pop    edi
  413270:	pushf  
  413271:	out    0xfd,al
  413273:	cwde   
  413274:	push   es
  413275:	cld    
  413276:	xchg   edx,eax
  413277:	dec    eax
  413278:	inc    BYTE PTR es:[ecx-0xf]
  41327c:	int3   
  41327d:	and    DWORD PTR [edi-0x5d73ad91],ebx
  413283:	mov    ds:0xca3d128,eax
  413288:	fbstp  TBYTE PTR [eax+edx*8-0xd]
  41328c:	lahf   
  41328d:	hlt    
  41328e:	jmp    0x7d1a98c3
  413293:	dec    edx
  413294:	sub    DWORD PTR [ebx-0x54],esi
  413297:	retf   0x8b87
  41329a:	inc    ebp
  41329b:	(bad)  
  41329c:	mov    ds:0xada481a7,eax
  4132a1:	leave  
  4132a2:	jge    0x413233
  4132a4:	cdq    
  4132a5:	cmp    eax,ebx
  4132a7:	xchg   esi,eax
  4132a8:	push   eax
  4132a9:	xor    al,BYTE PTR [edx+0x2e58ed50]
  4132af:	call   FWORD PTR [esi+0x633cb8e2]
  4132b5:	sahf   
  4132b6:	std    
  4132b7:	test   DWORD PTR [edx+ebp*2+0x4],eax
  4132bb:	(bad)  
  4132bc:	scas   eax,DWORD PTR es:[edi]
  4132bd:	xlat   BYTE PTR ds:[ebx]
  4132be:	add    BYTE PTR [ebx-0x3c7dcb97],al
  4132c4:	adc    BYTE PTR [ebx+ebx*1],al
  4132c7:	inc    ecx
  4132c9:	pop    esp
  4132ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132cb:	aam    0xc
  4132cd:	pop    ebp
  4132ce:	std    
  4132cf:	xor    eax,0xa5f5be2e
  4132d4:	push   ebp
  4132d5:	xor    DWORD PTR [edi],eax
  4132d7:	and    dl,BYTE PTR [edx]
  4132d9:	adc    dl,BYTE PTR [esi+eiz*8+0x23]
  4132dd:	ja     0x4132c9
  4132df:	fisttp DWORD PTR [esp+ebx*1+0x63b2d57d]
  4132e6:	xchg   ebx,eax
  4132e7:	cmp    BYTE PTR [ecx-0x7a3eca65],ah
  4132ed:	mov    ds:0x9874d331,al
  4132f2:	xchg   edi,eax
  4132f3:	shr    BYTE PTR [ebp+0x61906ca0],0x97
  4132fa:	mov    dh,0x19
  4132fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4132fd:	call   0x4e398eb5
  413302:	push   ds
  413303:	mov    cl,0x20
  413305:	push   es
  413306:	jl     0x413362
  413308:	jg     0x4132e0
  41330a:	std    
  41330b:	icebp  
  41330c:	xor    al,0x65
  41330e:	jmp    0x27ed45f8
  413313:	ret    
  413314:	dec    ecx
  413315:	or     eax,0xc3bc0949
  41331a:	adc    eax,0x7f52d806
  41331f:	add    bh,BYTE PTR [eax]
  413321:	pusha  
  413322:	leave  
  413323:	outs   dx,DWORD PTR ds:[esi]
  413324:	stos   DWORD PTR es:[edi],eax
  413325:	push   edi
  413326:	js     0x41338a
  413328:	mov    edx,0xdf38d89c
  41332d:	jmp    0x68f47682
  413332:	add    edi,DWORD PTR [ebp+0x20c526c9]
  413338:	test   DWORD PTR [esi-0x7d],edi
  41333b:	(bad)  
  41333c:	int    0xbd
  41333e:	retf   0x509d
  413341:	cld    
  413342:	(bad)  
  413343:	scas   al,BYTE PTR es:[edi]
  413344:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413346:	dec    ecx
  413347:	xor    eax,0x8c0b2d3
  41334c:	lahf   
  41334d:	and    esi,esi
  41334f:	mov    ch,0x7e
  413352:	ficom  DWORD PTR [edi-0x70]
  413355:	xchg   ebp,eax
  413356:	aaa    
  413357:	(bad)  
  413358:	out    0x39,al
  41335a:	imul   ecx,DWORD PTR [ecx+esi*1+0x48a125bc],0x91021914
  413365:	add    DWORD PTR [esi-0x42b11d65],ecx
  41336b:	popf   
  41336c:	xor    DWORD PTR [esi-0x60d0abae],ebx
  413372:	jno    0x4133ad
  413374:	out    0x65,eax
  413376:	sub    eax,0x198ff795
  41337b:	sub    BYTE PTR [edx+0x1a],dl
  41337e:	retf   0xeeef
  413381:	idiv   BYTE PTR [ebx]
  413383:	mov    bl,0x5c
  413385:	int    0x7b
  413387:	pop    esi
  413388:	inc    esp
  413389:	sbb    al,0xc3
  41338b:	inc    esi
  41338c:	neg    DWORD PTR [eax-0x22978102]
  413392:	sbb    BYTE PTR [ebp+0x67],bl
  413395:	mov    BYTE PTR ds:0x35bbdc9,cl
  41339b:	rcl    DWORD PTR [esi+eiz*8+0x44902b4c],1
  4133a2:	ret    0x7669
  4133a5:	fcom   st(2)
  4133a7:	int    0x5d
  4133a9:	xchg   esp,eax
  4133aa:	jl     0x41334c
  4133ac:	adc    ebx,DWORD PTR [ecx+0x20c48d4d]
  4133b2:	loop   0x413426
  4133b4:	ret    
  4133b5:	sub    al,0x51
  4133b7:	(bad)  
  4133b9:	adc    ebp,esi
  4133bb:	jbe    0x41339e
  4133bd:	push   es
  4133be:	or     DWORD PTR [ebx+ecx*2],ecx
  4133c1:	and    al,0xa6
  4133c3:	arpl   bx,bp
  4133c5:	xchg   ecx,eax
  4133c6:	jno    0x413391
  4133c8:	pop    edi
  4133c9:	loop   0x4133c1
  4133cb:	xchg   esp,eax
  4133cc:	mov    dh,0x8f
  4133ce:	pushf  
  4133cf:	call   0xdc26e9e
  4133d4:	jmp    0x413409
  4133d6:	mov    ch,BYTE PTR [esi-0x721996d]
  4133dc:	adc    BYTE PTR [edx+0x1600680a],0xe3
  4133e3:	scas   eax,DWORD PTR es:[edi]
  4133e4:	push   edx
  4133e5:	in     eax,dx
  4133e6:	rcr    esp,1
  4133e8:	pop    esi
  4133e9:	or     eax,0x228c6d09
  4133ee:	js     0x413395
  4133f0:	arpl   WORD PTR [ebx],ax
  4133f2:	bound  edx,QWORD PTR [esp+esi*8-0x41]
  4133f6:	dec    ebp
  4133f7:	js     0x4133fc
  4133f9:	adc    eax,DWORD PTR [esi-0x39bb4385]
  4133ff:	add    DWORD PTR [edx-0x60],esp
  413402:	push   ebp
  413403:	les    esi,FWORD PTR [ebx]
  413405:	push   ebp
  413406:	adc    eax,eax
  413408:	clc    
  413409:	mov    ebx,0xc9f5ec4f
  41340e:	mov    ecx,0x2cf27538
  413413:	cmc    
  413414:	outs   dx,BYTE PTR ds:[esi]
  413415:	aam    0x67
  413417:	adc    cl,ah
  413419:	pop    esp
  41341a:	call   0x1d5f:0x35b5219a
  413421:	cmp    DWORD PTR [edi+ebp*1+0x72],esi
  413425:	mov    al,0xaf
  413427:	loope  0x413438
  413429:	mov    ?,ecx
  41342b:	mov    esp,0x8057885e
  413430:	out    0xd4,eax
  413432:	xchg   esi,eax
  413433:	mov    edx,ecx
  413435:	push   es
  413436:	mov    bh,0x5c
  413438:	mov    ecx,0xaace4f75
  41343d:	jle    0x413438
  41343f:	mov    dh,0x2f
  413441:	jno    0x413491
  413443:	push   esp
  413444:	imul   ebp,ebp,0x617d09f5
  41344a:	js     0x413484
  41344c:	outs   dx,DWORD PTR ds:[esi]
  41344d:	or     eax,0x328ecca0
  413452:	or     ah,BYTE PTR [esi-0x33]
  413455:	(bad)  
  413456:	lds    ebp,FWORD PTR [eax]
  413458:	cmc    
  413459:	call   0xd01cfc6a
  41345e:	rcr    BYTE PTR [ebp-0x7857ce3b],0xff
  413465:	ins    DWORD PTR es:[edi],dx
  413466:	inc    edx
  413467:	add    bh,al
  413469:	push   0xaa53a430
  41346e:	jbe    0x41340e
  413470:	jge    0x4134c8
  413472:	cwde   
  413473:	scas   al,BYTE PTR es:[edi]
  413474:	cdq    
  413475:	xchg   BYTE PTR [ecx-0x69],ah
  413478:	pop    ebx
  413479:	inc    esp
  41347a:	dec    ebx
  41347b:	cmp    eax,0xa53c48b9
  413480:	outs   dx,DWORD PTR ds:[esi]
  413481:	(bad)  
  413483:	les    esi,FWORD PTR [eax]
  413485:	dec    ebx
  413486:	xchg   esi,eax
  413487:	push   0x5e25f508
  41348c:	div    BYTE PTR [ecx]
  41348e:	cmc    
  41348f:	push   es
  413490:	push   esp
  413491:	and    esp,DWORD PTR [esi+0x16]
  413494:	in     eax,dx
  413495:	lods   eax,DWORD PTR ds:[esi]
  413496:	out    0xc2,eax
  413498:	and    al,0xc0
  41349a:	aas    
  41349b:	xchg   edi,eax
  41349c:	loope  0x413459
  41349e:	and    eax,0x2e55f11d
  4134a3:	mov    eax,ds:0x5a0741ec
  4134a8:	push   ebp
  4134a9:	cwde   
  4134aa:	inc    edx
  4134ab:	lods   eax,DWORD PTR ds:[esi]
  4134ac:	call   0x27e07548
  4134b1:	sub    eax,0x2cb47f64
  4134b6:	mov    ah,0x4e
  4134b8:	in     al,dx
  4134b9:	jp     0x413503
  4134bb:	enter  0x4556,0xda
  4134bf:	and    DWORD PTR [ecx+0x5c1e1f4c],edi
  4134c5:	push   0xb833652f
  4134ca:	cmp    eax,0x6e1b6789
  4134cf:	push   edx
  4134d0:	icebp  
  4134d1:	pusha  
  4134d2:	or     DWORD PTR [ebp+0x18114bda],0xf79c02f9
  4134dc:	mov    eax,ebp
  4134de:	js     0x413519
  4134e0:	jecxz  0x41348b
  4134e2:	int    0xe4
  4134e4:	and    al,0x2d
  4134e6:	jecxz  0x413520
  4134e8:	int3   
  4134e9:	adc    eax,0x1e922491
  4134ee:	std    
  4134ef:	push   cs
  4134f0:	xchg   edi,eax
  4134f1:	inc    DWORD PTR [ebp+0x6a85b29d]
  4134f7:	(bad)  
  4134f8:	jnp    0x4134e2
  4134fa:	clc    
  4134fb:	and    al,0xbe
  4134fd:	sub    eax,0x4090db0a
  413502:	fst    st(4)
  413504:	or     dl,ch
  413506:	add    BYTE PTR [ecx],al
  413508:	jg     0x41351a
  41350a:	das    
  41350b:	nop
  41350c:	je     0x4134a7
  41350e:	push   ds
  41350f:	nop
  413510:	dec    edi
  413511:	mov    bh,0x32
  413513:	mov    ecx,0x81ffcf27
  413518:	mov    esi,0x6d731e5c
  41351d:	rep outs dx,BYTE PTR ds:[esi]
  41351f:	jge    0x413558
  413521:	enter  0xec40,0x1c
  413525:	cmp    edx,DWORD PTR [edi+0x1e]
  413528:	xchg   ebx,eax
  413529:	push   0x89ce2f1a
  41352e:	test   BYTE PTR [edx+0x49],bh
  413531:	push   fs
  413533:	pop    ds
  413534:	call   0xf800:0x3235d6a5
  41353b:	xchg   ebx,eax
  41353c:	mov    WORD PTR [edx-0x109b8f36],?
  413542:	jle    0x41353a
  413544:	pop    es
  413545:	lahf   
  413546:	addr16 adc eax,0xbe78e47a
  41354c:	lea    esp,[esi+eax*4]
  41354f:	out    dx,eax
  413550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413551:	stc    
  413552:	and    BYTE PTR [ebp+0x7b15fcf9],ah
  413558:	push   cs
  413559:	ss add eax,0x5f2b654a
  41355f:	or     esi,DWORD PTR [ebp+0x6e]
  413562:	scas   eax,DWORD PTR es:[edi]
  413563:	fs inc esi
  413565:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413567:	mov    al,ds:0x728ce6c5
  41356c:	pop    esp
  41356d:	les    ebp,FWORD PTR [esi+0xa]
  413570:	add    ch,dh
  413572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413573:	sahf   
  413574:	add    eax,0x17e98efa
  413579:	add    DWORD PTR [esi-0x39],edi
  41357c:	(bad)  
  41357e:	sti    
  41357f:	clc    
  413580:	xor    edi,ebp
  413582:	imul   ecx,edx
  413585:	ins    DWORD PTR es:[edi],dx
  413586:	stc    
  413587:	sub    al,ah
  413589:	inc    ebp
  41358a:	sub    eax,edx
  41358c:	or     dl,ah
  41358e:	hlt    
  41358f:	je     0x4135cd
  413591:	add    DWORD PTR ds:0x29d02b08,edx
  413597:	lods   al,BYTE PTR ds:[esi]
  413598:	aam    0xb
  41359a:	pop    eax
  41359b:	push   edi
  41359c:	and    DWORD PTR ds:[edx-0x3a],ecx
  4135a0:	cmp    eax,ebx
  4135a2:	shr    BYTE PTR [ebp+0x4b76a91d],0xce
  4135a9:	sahf   
  4135aa:	dec    esp
  4135ab:	mov    BYTE PTR [edx-0x305ae606],bh
  4135b1:	fdivr  DWORD PTR [ecx-0x71168c61]
  4135b7:	xor    BYTE PTR [edi+0x67],ah
  4135ba:	sbb    eax,0xd6b9a73a
  4135bf:	jmp    0xb43d:0xe475b339
  4135c6:	mov    ds,WORD PTR [ebx-0x57]
  4135c9:	jbe    0x413561
  4135cb:	js     0x4135ff
  4135cd:	sbb    eax,0xb7c2f72e
  4135d2:	(bad)  
  4135d3:	add    eax,0x515119de
  4135d8:	push   0x38bc7375
  4135dd:	add    DWORD PTR [ecx],0x7a13ee37
  4135e3:	scas   eax,DWORD PTR es:[edi]
  4135e4:	jae    0x413602
  4135e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135e7:	int3   
  4135e8:	retf   
  4135e9:	jge    0x4135a7
  4135eb:	add    ecx,esi
  4135ed:	push   cs
  4135ee:	(bad)  
  4135ef:	outs   dx,DWORD PTR ds:[esi]
  4135f0:	sub    DWORD PTR [edx],ecx
  4135f2:	es stos DWORD PTR es:[edi],eax
  4135f4:	push   ebx
  4135f5:	or     BYTE PTR [ebp+0x1c],cl
  4135f8:	dec    esp
  4135f9:	cmp    WORD PTR [ebx],cx
  4135fc:	adc    BYTE PTR [esi-0x564a704b],0x9d
  413603:	ja     0x4135bc
  413605:	xchg   ebp,eax
  413606:	js     0x41358c
  413608:	cld    
  413609:	mov    DWORD PTR [edi],edx
  41360b:	xor    al,0xe8
  41360d:	outs   dx,DWORD PTR ds:[esi]
  41360e:	addr16 inc ebx
  413610:	dec    ebx
  413611:	push   esp
  413612:	or     DWORD PTR [edi],ebp
  413614:	push   esi
  413615:	sahf   
  413616:	int3   
  413617:	aas    
  413618:	or     eax,0x67380b83
  41361d:	loope  0x4135b9
  41361f:	or     al,0x36
  413621:	je     0x413621
  413623:	rcl    DWORD PTR [esi+ebp*2+0x4f6aec1c],0xce
  41362b:	clc    
  41362c:	icebp  
  41362d:	xchg   ebx,eax
  41362e:	and    DWORD PTR [eax+edi*1],0x15
  413632:	icebp  
  413633:	jg     0x4135cd
  413635:	inc    ebp
  413636:	scas   eax,DWORD PTR es:[edi]
  413637:	push   ds
  413638:	outs   dx,DWORD PTR ds:[esi]
  413639:	mov    bl,0xdc
  41363b:	xchg   edi,eax
  41363c:	jp     0x4136b8
  41363e:	inc    ebp
  41363f:	sahf   
  413640:	in     eax,0xac
  413642:	addr16 xchg ecx,eax
  413644:	fimul  WORD PTR [ecx-0x5aec744f]
  41364a:	cmp    al,0x25
  41364c:	mov    edi,0x213ec026
  413651:	and    ecx,ebp
  413653:	cli    
  413654:	mov    al,ds:0x3ff18f87
  413659:	sub    eax,esi
  41365b:	inc    edi
  41365c:	retf   0x7eda
  41365f:	lahf   
  413660:	mov    esi,0x4f2ee87
  413665:	in     al,dx
  413666:	or     DWORD PTR [esi-0x6cb7120f],eax
  41366c:	pusha  
  41366d:	ror    DWORD PTR [ecx],0x53
  413670:	out    0xd6,al
  413672:	dec    esp
  413673:	adc    eax,0xd5e5ebad
  413678:	dec    edi
  413679:	adc    DWORD PTR [bx+di+0x3f],esp
  41367d:	cmp    bl,BYTE PTR [esi]
  41367f:	push   ecx
  413680:	xor    eax,0x2cf2ff56
  413685:	push   ebx
  413686:	cmp    dh,BYTE PTR [ecx+0x45]
  413689:	mov    esp,0x758b9805
  41368e:	loopne 0x413641
  413690:	jno    0x41361a
  413692:	ret    
  413693:	imul   ecx,DWORD PTR [edx],0x4d
  413696:	clc    
  413697:	shl    BYTE PTR [edx-0x20],0xdd
  41369b:	pusha  
  41369c:	aas    
  41369d:	mov    ah,dl
  41369f:	aam    0xe2
  4136a1:	dec    ebp
  4136a2:	cmp    cl,al
  4136a4:	cmp    DWORD PTR [edi],ebp
  4136a6:	lock push edx
  4136a8:	mov    al,ds:0x79ab5704
  4136ad:	mov    bl,0x41
  4136af:	jae    0x41370f
  4136b1:	out    0x70,al
  4136b3:	repnz push ebx
  4136b5:	and    eax,0xbfeeb778
  4136ba:	jl     0x4136b8
  4136bc:	ror    edi,cl
  4136be:	into   
  4136bf:	xlat   BYTE PTR ds:[ebx]
  4136c0:	shl    ah,cl
  4136c2:	and    dh,BYTE PTR [eax+0x1997c863]
  4136c8:	inc    ecx
  4136c9:	adc    al,0x28
  4136cb:	aad    0x3
  4136cd:	lods   al,BYTE PTR ds:[esi]
  4136ce:	loope  0x413671
  4136d0:	mov    eax,gs
  4136d2:	sar    DWORD PTR [edi-0x7],1
  4136d5:	mul    ecx
  4136d7:	inc    eax
  4136d8:	and    esp,DWORD PTR ds:0x7d0729d8
  4136de:	mov    bh,0x40
  4136e0:	cmp    ebp,0x2
  4136e3:	addr16 and al,0x84
  4136e6:	mov    al,ds:0x55f5a99c
  4136eb:	inc    ebx
  4136ec:	and    BYTE PTR [esi+ecx*1-0x23b2e9a],cl
  4136f3:	sub    eax,0xa638c6a7
  4136f8:	fwait
  4136f9:	dec    esi
  4136fa:	sbb    cl,BYTE PTR [esi+edi*8+0x35]
  4136fe:	aad    0xfe
  413700:	(bad)  
  413702:	jo     0x413741
  413704:	daa    
  413705:	sbb    ah,BYTE PTR [edx-0x4c]
  413708:	out    0x23,eax
  41370a:	arpl   WORD PTR [esi+edi*4],di
  41370d:	xchg   edi,eax
  41370e:	push   0x5b
  413710:	push   ecx
  413711:	mov    ds:0x1ff128fc,al
  413716:	div    BYTE PTR [edi-0x5d]
  413719:	sub    ah,al
  41371b:	dec    edi
  41371c:	in     al,dx
  41371d:	jae    0x41379e
  41371f:	iret   
  413720:	lods   al,BYTE PTR ds:[esi]
  413721:	sahf   
  413722:	cmc    
  413723:	pop    esi
  413724:	sahf   
  413725:	stos   DWORD PTR es:[edi],eax
  413726:	dec    eax
  413727:	mov    eax,ds:0x51ed63fc
  41372c:	and    al,0x2a
  41372e:	jb     0x4136e0
  413730:	xchg   edi,eax
  413731:	xchg   ecx,eax
  413732:	inc    edx
  413733:	clc    
  413734:	ds jo  0x41378b
  413737:	sub    al,0x9f
  413739:	inc    edx
  41373a:	arpl   WORD PTR [edi],ax
  41373c:	xlat   BYTE PTR ds:[ebx]
  41373d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41373e:	pusha  
  41373f:	outs   dx,DWORD PTR ds:[esi]
  413740:	ins    DWORD PTR es:[edi],dx
  413741:	and    al,0xc3
  413743:	sub    BYTE PTR [edi-0x30],bh
  413746:	adc    bl,BYTE PTR [ebp-0x6a]
  413749:	add    DWORD PTR [eax+0x12f07e09],edx
  41374f:	dec    edx
  413750:	cld    
  413751:	xchg   esi,eax
  413752:	xlat   BYTE PTR ds:[ebx]
  413753:	inc    ecx
  413754:	leave  
  413755:	inc    ecx
  413756:	jbe    0x4136f8
  413758:	push   ds
  413759:	neg    BYTE PTR [edi]
  41375b:	jb     0x41374f
  41375d:	or     al,0xb1
  41375f:	inc    edx
  413760:	in     eax,0x88
  413762:	cli    
  413763:	sbb    al,0x56
  413765:	dec    ecx
  413766:	jg     0x4137cd
  413768:	(bad)  
  413769:	jne    0x41374a
  41376b:	sbb    DWORD PTR [edi-0x3b],0xfffffffd
  41376f:	ret    
  413770:	repz sbb eax,0x5b99a57d
  413776:	xchg   ebp,eax
  413777:	or     eax,0x3e686941
  41377c:	xchg   edi,eax
  41377d:	jb     0x413717
  41377f:	loop   0x4137a5
  413781:	leave  
  413782:	test   ebp,0x323c8d18
  413788:	mov    ch,0xb4
  41378a:	pop    esi
  41378b:	jp     0x41376d
  41378d:	stos   BYTE PTR es:[edi],al
  41378e:	mov    WORD PTR [ecx+0x23],fs
  413791:	imul   DWORD PTR [ebp-0x4]
  413794:	ss dec edi
  413796:	push   0xffffffb9
  413798:	inc    ebx
  413799:	mov    edi,DWORD PTR [ebp+0x5b]
  41379c:	das    
  41379d:	xlat   BYTE PTR ds:[ebx]
  41379e:	jo     0x4137b8
  4137a0:	sub    esp,eax
  4137a2:	inc    edi
  4137a3:	ins    DWORD PTR es:[edi],dx
  4137a4:	mov    ebp,0x73a6e345
  4137a9:	mov    DWORD PTR [esi-0xe],ecx
  4137ac:	push   ss
  4137ad:	mov    al,ds:0xa280de36
  4137b2:	mov    esi,0x265283dc
  4137b7:	push   esp
  4137b8:	dec    edi
  4137b9:	imul   eax,DWORD PTR [esp+esi*4+0x346b07e8],0x2c
  4137c1:	nop
  4137c2:	add    ebx,0xffffff9c
  4137c5:	lds    edi,FWORD PTR [esp+eax*8+0x24f5d046]
  4137cc:	fldcw  WORD PTR [eax-0x1fcb5f7c]
  4137d2:	out    dx,eax
  4137d3:	addr16 aaa 
  4137d5:	jno    0x41381e
  4137d7:	out    dx,eax
  4137d8:	jbe    0x4137f1
  4137da:	jns    0x4137c9
  4137dc:	xor    BYTE PTR [edi],dl
  4137de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137df:	clc    
  4137e0:	ror    DWORD PTR [edx-0x4511af7a],1
  4137e6:	cmc    
  4137e7:	and    bh,dh
  4137e9:	mov    ah,0x47
  4137eb:	inc    edi
  4137ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ed:	out    0xac,al
  4137ef:	mov    WORD PTR [edx+0x7a],?
  4137f2:	mov    ds:0x4427b35b,eax
  4137f7:	outs   dx,BYTE PTR ds:[esi]
  4137f8:	add    al,0x69
  4137fa:	fimul  WORD PTR [eax+0x371455bf]
  413800:	(bad)  
  413801:	add    al,0xa5
  413803:	push   ecx
  413804:	(bad)  [ecx-0x16]
  413807:	jbe    0x41381c
  413809:	imul   edx,DWORD PTR [eax+0x35a257a8],0xdbb619ce
  413813:	scas   al,BYTE PTR es:[edi]
  413814:	(bad)  
  413815:	stc    
  413816:	xchg   esp,eax
  413817:	out    dx,eax
  413818:	(bad)  
  413819:	pushf  
  41381a:	or     DWORD PTR es:0xfc512161,eax
  413821:	mov    dl,0x1d
  413823:	pop    esp
  413824:	push   esp
  413825:	mov    dl,0x7c
  413827:	jg     0x41384b
  413829:	cvtpi2ps xmm6,QWORD PTR [edx+0x18730e0]
  413830:	sub    eax,edi
  413832:	fwait
  413833:	loop   0x41381b
  413835:	jo     0x4137ff
  413837:	cmc    
  413838:	mov    bh,0x97
  41383a:	std    
  41383b:	push   esi
  41383c:	xchg   ebp,eax
  41383d:	out    0x9b,al
  41383f:	in     al,0x7b
  413841:	jns    0x4138b4
  413843:	sub    ecx,DWORD PTR [esp+ebp*8]
  413846:	es push 0x6550bdd6
  41384c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41384d:	push   edx
  41384e:	xor    eax,0x366ee186
  413853:	add    eax,0x2c6b24f9
  413858:	inc    esp
  413859:	ret    0x3dc2
  41385c:	outs   dx,DWORD PTR ds:[esi]
  41385d:	mov    dl,ch
  41385f:	aaa    
  413860:	mov    WORD PTR [ebx],?
  413862:	mov    ecx,0xe8ad9bb6
  413867:	gs test al,0x2
  41386a:	mov    al,ds:0xf185ec4e
  41386f:	sbb    esi,DWORD PTR [edi]
  413871:	fwait
  413872:	dec    ecx
  413873:	arpl   WORD PTR [edi],ax
  413875:	lahf   
  413876:	rol    BYTE PTR [edx*1+0x867231c],cl
  41387d:	scas   al,BYTE PTR es:[edi]
  41387e:	mov    bh,0x19
  413880:	add    al,0x78
  413882:	cmp    eax,0x959d1e32
  413887:	jge    0x4138be
  413889:	and    dl,BYTE PTR [ebp+0xe]
  41388c:	jae    0x4138a3
  41388e:	(bad)  
  41388f:	nop
  413890:	sahf   
  413891:	fistp  DWORD PTR [esi+0x3036cfb]
  413897:	xlat   BYTE PTR ds:[ebx]
  413898:	je     0x413900
  41389a:	out    dx,eax
  41389b:	cli    
  41389c:	cmp    esp,DWORD PTR [ecx-0x65]
  41389f:	xchg   esp,esi
  4138a1:	leave  
  4138a2:	push   edx
  4138a3:	mov    dh,BYTE PTR [eax+ebx*2+0x2742d9f0]
  4138aa:	push   cs
  4138ab:	add    ecx,eax
  4138ad:	aad    0x15
  4138af:	pop    es
  4138b0:	xchg   esi,eax
  4138b1:	retf   0xa742
  4138b4:	retf   0x101b
  4138b7:	adc    dl,BYTE PTR [edi+0x2b]
  4138ba:	adc    esi,DWORD PTR [ecx]
  4138bc:	push   ds
  4138bd:	repnz xchg ebx,eax
  4138bf:	lods   al,BYTE PTR ds:[esi]
  4138c0:	stc    
  4138c1:	jmp    0x468f09e7
  4138c6:	sbb    DWORD PTR [edi-0x51],0x50
  4138ca:	mov    edx,0xcb55ddf0
  4138cf:	(bad)  
  4138d0:	mov    ch,0xf0
  4138d2:	data16 ins BYTE PTR es:[edi],dx
  4138d4:	pop    ebx
  4138d5:	xor    ecx,DWORD PTR [edi]
  4138d7:	mov    WORD PTR [edx],?
  4138d9:	push   0xffffff9d
  4138db:	jp     0x4138c7
  4138dd:	jmp    FWORD PTR [edi+0x53d5d0a6]
  4138e3:	ret    
  4138e4:	mov    dh,0x81
  4138e6:	mov    fs,WORD PTR [edx-0x74]
  4138e9:	cmp    dl,bl
  4138eb:	in     al,0xd8
  4138ed:	data16 jl 0x4138f4
  4138f0:	les    edi,FWORD PTR [ebp+0x50]
  4138f3:	std    
  4138f4:	mov    ds,edx
  4138f6:	lahf   
  4138f7:	pop    ecx
  4138f8:	ja     0x413978
  4138fa:	jno    0x4138bb
  4138fc:	nop
  4138fd:	stos   BYTE PTR es:[edi],al
  4138fe:	addr16 mov eax,ds:0x7950
  413902:	loopne 0x41392e
  413904:	xor    al,0x76
  413906:	outs   dx,BYTE PTR ds:[esi]
  413907:	fwait
  413908:	ins    DWORD PTR es:[edi],dx
  413909:	jmp    0x41393a
  41390b:	cmp    al,BYTE PTR [ecx]
  41390d:	inc    eax
  41390e:	dec    ebx
  41390f:	lods   al,BYTE PTR ds:[esi]
  413910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413911:	xchg   esi,eax
  413912:	mov    ch,0xd9
  413914:	ror    edi,0x8a
  413917:	aaa    
  413918:	jns    0x4138e8
  41391a:	shl    cl,0x6a
  41391d:	in     al,0x96
  41391f:	std    
  413920:	push   cs
  413921:	ret    
  413922:	sbb    DWORD PTR [ecx+0x3f26fec],esi
  413928:	loop   0x4138ef
  41392a:	xchg   esi,eax
  41392b:	pop    esp
  41392c:	inc    edi
  41392d:	mov    eax,0x98d9f0fc
  413932:	cmp    eax,0x9fdc6ac
  413937:	push   edx
  413938:	in     eax,dx
  413939:	stos   DWORD PTR es:[edi],eax
  41393a:	retf   
  41393b:	popa   
  41393c:	adc    al,0x9d
  41393f:	or     eax,0x68172e19
  413944:	add    al,0xa7
  413946:	sub    DWORD PTR [eax+0x66],esp
  413949:	sub    al,0x80
  41394b:	or     al,0xe3
  41394d:	fmulp  st(1),st
  41394f:	mov    esp,0xf6dcc3b
  413954:	mov    edx,0xf9236ca5
  413959:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41395a:	fistp  DWORD PTR [edi+eax*8+0x3f683a64]
  413961:	push   esi
  413962:	nop
  413963:	rcl    dl,1
  413965:	pushf  
  413966:	mov    al,0xec
  413968:	dec    ecx
  413969:	xchg   esp,eax
  41396a:	out    0x95,al
  41396c:	fwait
  41396d:	or     eax,0x5b08d91f
  413972:	pushf  
  413973:	inc    ah
  413975:	cmp    BYTE PTR [ecx+0x24],dh
  413978:	int3   
  413979:	fstp   TBYTE PTR [eax]
  41397b:	pusha  
  41397c:	enter  0xa011,0x96
  413980:	xor    al,0x49
  413982:	adc    BYTE PTR ds:0x123d885,dh
  413988:	pop    ss
  413989:	ret    
  41398a:	(bad)  
  41398b:	fdiv   st(0),st
  41398d:	mov    esi,0xcc3cde3e
  413992:	mov    al,0x88
  413994:	sar    BYTE PTR [edi+ecx*2-0xd],1
  413998:	out    dx,al
  413999:	mov    ah,dl
  41399b:	sub    ebp,ebx
  41399d:	xchg   DWORD PTR [esi+0x1e927f62],esp
  4139a3:	cli    
  4139a4:	ror    BYTE PTR [ebp+0x5],cl
  4139a7:	sub    dl,BYTE PTR [esp+eax*1]
  4139aa:	and    DWORD PTR [ebx],0xe2bd78fe
  4139b0:	xchg   esi,eax
  4139b1:	mov    ch,0xcb
  4139b3:	cdq    
  4139b4:	pushf  
  4139b5:	popa   
  4139b6:	fs cwde 
  4139b8:	(bad)  
  4139b9:	clc    
  4139ba:	fwait
  4139bb:	adc    esi,DWORD PTR [ebp-0x5f]
  4139be:	aad    0xde
  4139c0:	out    dx,al
  4139c1:	call   0xc5d590ee
  4139c6:	pop    ss
  4139c7:	mov    es,WORD PTR [eax]
  4139c9:	adc    cl,BYTE PTR [ebx]
  4139cb:	sahf   
  4139cc:	and    eax,0xc2538ad8
  4139d1:	sub    bh,dl
  4139d3:	mov    esi,0xf2d3354c
  4139d8:	push   es
  4139d9:	lods   al,BYTE PTR ds:[esi]
  4139da:	adc    DWORD PTR [ebp+0x50a047a],esp
  4139e0:	aas    
  4139e1:	test   eax,0x51004195
  4139e6:	dec    ecx
  4139e7:	je     0x4139f8
  4139e9:	xor    al,0x4d
  4139eb:	lods   al,BYTE PTR ds:[esi]
  4139ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139ed:	xor    bh,ch
  4139ef:	arpl   WORD PTR [edx-0x62308dce],si
  4139f5:	fnstsw WORD PTR [edx+0x2c]
  4139f8:	mov    esi,0x3590eba2
  4139fd:	call   DWORD PTR [ebx+0x173f11d3]
  413a03:	mov    ds:0xc224040f,al
  413a08:	aas    
  413a09:	push   ecx
  413a0a:	xor    DWORD PTR [eax+ebx*2+0x5e],edi
  413a0e:	xchg   edi,eax
  413a0f:	pop    ebp
  413a10:	add    al,0xa4
  413a12:	cmp    edx,DWORD PTR [ecx+0x63e5c2cc]
  413a18:	fucom  st(6)
  413a1a:	(bad)  
  413a1b:	jno    0x4139da
  413a1d:	stc    
  413a1e:	cdq    
  413a1f:	fwait
  413a20:	std    
  413a21:	xor    esi,DWORD PTR ds:0x361901b0
  413a27:	jne    0x413a4e
  413a29:	loopne 0x413a4b
  413a2b:	int3   
  413a2c:	add    eax,0x41ff1526
  413a31:	ds add eax,0x3a1add80
  413a37:	sub    eax,0xb780f421
  413a3d:	add    edx,DWORD PTR [edi]
  413a3f:	jnp    0x413a5f
  413a41:	mov    dh,BYTE PTR [ebx]
  413a43:	in     al,dx
  413a44:	mov    ecx,0x4fbb41e0
  413a49:	cdq    
  413a4a:	add    BYTE PTR [edx+0xf7ad1a8],bh
  413a50:	bound  esp,QWORD PTR [ecx-0x52]
  413a53:	pushf  
  413a54:	cmp    BYTE PTR [eax],dh
  413a56:	push   esp
  413a57:	and    DWORD PTR [eax+edx*8],esp
  413a5a:	jns    0x4139f1
  413a5c:	fisttp WORD PTR [esi+0x75]
  413a5f:	or     eax,0x90e82717
  413a64:	xchg   edi,eax
  413a65:	cmp    eax,0xa18311b3
  413a6a:	test   DWORD PTR [edx],0xe12b8ef1
  413a70:	clc    
  413a71:	mov    dh,BYTE PTR [ebp+0x36]
  413a74:	js     0x413ac5
  413a76:	dec    edx
  413a77:	pop    edi
  413a78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413a79:	shl    DWORD PTR [edi+0x9],0x47
  413a7d:	fidiv  WORD PTR [edi]
  413a7f:	pusha  
  413a80:	cs sbb al,0xac
  413a83:	ins    DWORD PTR es:[edi],dx
  413a84:	clc    
  413a85:	loop   0x413ab3
  413a87:	es push 0x12b73bc6
  413a8d:	and    cl,BYTE PTR [esi+0x732011b9]
  413a93:	in     al,0x10
  413a95:	sub    al,0x5
  413a97:	mov    edi,0x13bfed40
  413a9c:	xchg   esp,eax
  413a9d:	pop    DWORD PTR [ebp-0xe]
  413aa0:	repnz scas al,BYTE PTR es:[edi]
  413aa2:	loopne 0x413a6f
  413aa4:	jmp    0x413a41
  413aa6:	mov    ch,0x3c
  413aa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aa9:	pop    ebx
  413aaa:	mov    ebx,0x8b0f0e30
  413aaf:	xor    al,0xbe
  413ab1:	les    esi,FWORD PTR [ebp+edx*2+0x2ca8aaba]
  413ab8:	mov    ebp,0x75d7f92e
  413abd:	aad    0xe9
  413abf:	leave  
  413ac0:	and    ah,ah
  413ac2:	mov    eax,0x4140a0b3
  413ac7:	mov    cl,0x3e
  413ac9:	(bad)  [esi]
  413acb:	fst    st(3)
  413acd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ace:	xor    eax,0x10bf8167
  413ad3:	mov    edx,0x887ff17
  413ad8:	cmp    edx,DWORD PTR [ebx-0x7d]
  413adb:	lds    di,DWORD PTR [ebp+0x73]
  413adf:	xchg   DWORD PTR [ebx],esi
  413ae1:	neg    DWORD PTR [edi+esi*8+0xde12a7f]
  413ae8:	in     al,dx
  413ae9:	xor    al,0x83
  413aeb:	pop    edi
  413aec:	mov    esp,0x5e9f806f
  413af1:	pop    edx
  413af2:	sub    bh,BYTE PTR [ecx+0x10111903]
  413af8:	jae    0x413a8d
  413afa:	fcmovnu st,st(4)
  413afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413afd:	and    al,0xb3
  413aff:	mov    edx,0x6026d305
  413b04:	inc    edi
  413b05:	xor    ch,bh
  413b07:	or     edx,esi
  413b09:	in     eax,dx
  413b0a:	xor    DWORD PTR [ebp+0xd],ebp
  413b0d:	loope  0x413ab1
  413b0f:	stos   DWORD PTR es:[edi],eax
  413b10:	add    edx,DWORD PTR [eax-0x221d6ccf]
  413b16:	sar    BYTE PTR [ebx],1
  413b18:	les    edi,FWORD PTR [edx+eiz*4]
  413b1b:	(bad)  
  413b1f:	int    0xb7
  413b21:	lods   eax,DWORD PTR ds:[esi]
  413b22:	cmp    eax,0x30f424a6
  413b27:	xor    eax,esi
  413b29:	hlt    
  413b2a:	shl    DWORD PTR [ebp-0x2b4511da],0xd3
  413b31:	mov    ecx,DWORD PTR [edx+0x56]
  413b34:	fdivr  st,st(5)
  413b36:	lock add dl,cl
  413b39:	xor    edi,DWORD PTR [ecx]
  413b3b:	mov    dl,0xeb
  413b3d:	sub    eax,0xe5751ce7
  413b42:	mov    ds,WORD PTR [esi+0x46]
  413b45:	xchg   ecx,eax
  413b46:	retf   0x3e19
  413b49:	fmulp  st(3),st
  413b4b:	and    eax,ebp
  413b4d:	cmp    eax,0xbbf56632
  413b52:	jmp    0x413b5e
  413b54:	cmc    
  413b55:	inc    edx
  413b56:	mov    ebp,0x247772a1
  413b5b:	xchg   edx,eax
  413b5c:	aam    0x8b
  413b5e:	fucomi st,st(5)
  413b60:	das    
  413b61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b62:	jae    0x413b9b
  413b64:	(bad)  
  413b65:	pop    edx
  413b66:	jmp    0x413b5b
  413b68:	repz add esp,DWORD PTR [edx+0x5562087f]
  413b6f:	mov    dl,BYTE PTR [eax-0x64]
  413b72:	mov    ebp,0xab67de7
  413b77:	jne    0x413b54
  413b79:	add    al,0x4d
  413b7b:	pop    edi
  413b7c:	mov    eax,0x8a89fc52
  413b81:	mov    al,0xe4
  413b83:	sub    BYTE PTR [edx+ebp*2-0x77],0x73
  413b88:	fs out 0x7a,al
  413b8b:	call   0x1f57a280
  413b90:	lods   al,BYTE PTR ds:[esi]
  413b91:	or     esp,esp
  413b93:	jae    0x413bb2
  413b95:	sub    eax,0x5a4bb42c
  413b9a:	inc    eax
  413b9b:	pop    ecx
  413b9c:	jecxz  0x413bea
  413b9e:	out    dx,eax
  413b9f:	inc    ebp
  413ba0:	std    
  413ba1:	jb     0x413c0a
  413ba3:	xor    ebp,esp
  413ba5:	outs   dx,BYTE PTR ds:[esi]
  413ba6:	xor    BYTE PTR [ebx+0x5e490ba4],dl
  413bac:	fwait
  413bad:	sub    al,0x52
  413baf:	es mov esi,0xae27390f
  413bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413bb6:	inc    ebx
  413bb7:	sub    edx,DWORD PTR [esp+eiz*8]
  413bba:	sar    edx,1
  413bbc:	add    eax,0x1fb4ffe5
  413bc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bc2:	out    dx,al
  413bc3:	daa    
  413bc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bc5:	ds xor eax,0x24eed109
  413bcb:	stos   BYTE PTR es:[edi],al
  413bcc:	push   cs
  413bcd:	sbb    DWORD PTR [ebp+0x73b312f3],eax
  413bd3:	and    edx,eax
  413bd5:	add    eax,0x8f4304
  413bda:	add    BYTE PTR [ebp-0x11],0x46
  413bde:	push   edx
  413bdf:	mov    ebp,0x2f9b0a4f
  413be4:	cmp    BYTE PTR [edi],al
  413be6:	shl    BYTE PTR ds:0xdb558bb3,1
  413bec:	test   BYTE PTR [eax+ecx*1-0x7eefff7],0x15
  413bf4:	mov    eax,cs
  413bf6:	dec    ebx
  413bf7:	(bad)  
  413bf8:	jecxz  0x413b7b
  413bfa:	jmp    0x2cd1d217
  413bff:	js     0x413be3
  413c01:	sbb    al,0x24
  413c03:	shr    DWORD PTR [ecx-0x42cb40e],0x89
  413c0a:	sbb    DWORD PTR [ecx+edx*2+0x73],esp
  413c0e:	sub    BYTE PTR [ecx+eiz*2+0x44],ch
  413c12:	sbb    ebp,DWORD PTR [ebx+0x65bb537]
  413c18:	(bad)  
  413c19:	jg     0x413c43
  413c1b:	arpl   di,bp
  413c1d:	cmc    
  413c1e:	mov    DWORD PTR [ebp-0x57],ecx
  413c21:	stc    
  413c22:	rol    DWORD PTR [eax-0x6c],1
  413c25:	imul   edx,DWORD PTR [edi-0x5b8f94bd],0x6484d31c
  413c2f:	sbb    DWORD PTR ds:0x954f1465,0x40
  413c36:	lahf   
  413c37:	popa   
  413c38:	dec    edx
  413c39:	add    DWORD PTR [esi-0x64dee624],edi
  413c3f:	ror    edx,1
  413c41:	ja     0x413c75
  413c43:	bound  edx,QWORD PTR [ecx]
  413c45:	je     0x413c3f
  413c47:	adc    BYTE PTR [edx],ch
  413c49:	(bad)  
  413c4a:	loop   0x413bcf
  413c4c:	dec    ecx
  413c4d:	mov    eax,ds:0xa73a6eb7
  413c52:	mov    ds:0x6d7e04f5,eax
  413c57:	mov    ds:0xafc9f29f,al
  413c5c:	push   esi
  413c5d:	js     0x413c0c
  413c5f:	aaa    
  413c60:	cmp    DWORD PTR [eax-0x57],edx
  413c63:	xor    ch,BYTE PTR [ebp+0x7d]
  413c66:	mov    eax,0x6c4e6a5
  413c6b:	lds    ebx,FWORD PTR [ecx+0x77]
  413c6e:	outs   dx,DWORD PTR ds:[esi]
  413c6f:	(bad)  [eax]
  413c71:	aas    
  413c72:	outs   dx,DWORD PTR ds:[esi]
  413c73:	or     BYTE PTR [edi],bh
  413c75:	xlat   BYTE PTR ds:[ebx]
  413c76:	jle    0x413c66
  413c78:	add    BYTE PTR [eax-0x61da4f4f],al
  413c7e:	clc    
  413c7f:	in     al,dx
  413c80:	dec    ebp
  413c81:	add    cl,ch
  413c83:	jmp    0xea3b:0x89e7cbe4
  413c8a:	aam    0xe1
  413c8c:	adc    eax,0x53221584
  413c91:	test   dh,0xd1
  413c94:	pop    esp
  413c95:	cmp    al,0xf1
  413c97:	jecxz  0x413cb8
  413c99:	and    eax,0x50827977
  413c9e:	pushf  
  413c9f:	out    dx,eax
  413ca0:	pusha  
  413ca1:	or     BYTE PTR ds:0xb5de979f,ah
  413ca7:	add    esp,DWORD PTR ds:0x42efa3bf
  413cad:	jb     0x413c6b
  413caf:	mov    ebx,0xc1af1ae9
  413cb4:	(bad)
  413cb8:	adc    bh,BYTE PTR [edi]
  413cba:	mov    ds:0x97d03d31,eax
  413cbf:	lock repnz cmp BYTE PTR [ecx-0x3216fb54],al
  413cc7:	shl    DWORD PTR [ebx+ebp*2+0x593f4195],cl
  413cce:	inc    ecx
  413ccf:	and    dh,BYTE PTR [esi+eax*8+0x7e7c7233]
  413cd6:	aaa    
  413cd7:	ss dec esi
  413cd9:	push   ebx
  413cda:	and    DWORD PTR [edx-0x6ff85d60],ecx
  413ce0:	clc    
  413ce1:	xchg   ecx,eax
  413ce2:	adc    al,BYTE PTR [eax-0x30]
  413ce5:	mov    al,ds:0xe87ab2f
  413cea:	adc    DWORD PTR [ebx],ebp
  413cec:	clc    
  413ced:	mov    al,ds:0xee89db57
  413cf2:	adc    eax,0x14a56752
  413cf7:	scas   al,BYTE PTR es:[edi]
  413cf8:	inc    edx
  413cf9:	xor    dh,BYTE PTR [ecx]
  413cfb:	lods   al,BYTE PTR ds:[esi]
  413cfc:	jne    0x413c8a
  413cfe:	scas   al,BYTE PTR es:[edi]
  413cff:	in     al,0x52
  413d01:	and    BYTE PTR [ebx+0x36],dl
  413d04:	and    WORD PTR [esp+eax*1],di
  413d08:	adc    bh,cl
  413d0a:	cmp    al,0x8
  413d0c:	ss jmp 0x551c9cf1
  413d12:	stos   BYTE PTR es:[edi],al
  413d13:	cmp    al,0xef
  413d15:	es jno 0x413cdb
  413d18:	leave  
  413d19:	sbb    al,0xe9
  413d1b:	ret    
  413d1c:	daa    
  413d1d:	mov    al,0xde
  413d1f:	out    dx,eax
  413d20:	in     eax,0x27
  413d22:	and    dh,BYTE PTR [esi+edx*8]
  413d25:	jmp    0x413cc7
  413d27:	fsub   st,st(0)
  413d29:	imul   esp,DWORD PTR [esi+ebx*8-0x68],0xffffffb1
  413d2e:	loope  0x413d31
  413d30:	pop    ds
  413d31:	jbe    0x413d63
  413d33:	daa    
  413d34:	adc    edi,DWORD PTR [edi-0x198e7f55]
  413d3a:	leave  
  413d3b:	shr    BYTE PTR [eax+eiz*1],cl
  413d3e:	out    0xa9,eax
  413d40:	jns    0x413cd8
  413d42:	ja     0x413ccb
  413d44:	add    al,0x39
  413d46:	(bad)  
  413d47:	int    0x81
  413d49:	inc    edi
  413d4a:	mov    ah,0xf8
  413d4c:	sbb    al,0x76
  413d4e:	adc    eax,0x65bcf6a0
  413d53:	pop    eax
  413d54:	jmp    0x5078:0x88b77a7e
  413d5b:	push   ebp
  413d5c:	cdq    
  413d5d:	test   al,0xbd
  413d5f:	xor    bl,bl
  413d61:	pop    ebp
  413d62:	push   eax
  413d63:	dec    edx
  413d64:	cmp    DWORD PTR [ecx],esp
  413d66:	call   0x3536:0xa28e5b5b
  413d6d:	int    0xc3
  413d6f:	out    dx,eax
  413d70:	or     bl,ah
  413d72:	sub    al,0x65
  413d74:	stc    
  413d75:	shr    ecx,1
  413d77:	int3   
  413d78:	dec    ecx
  413d79:	inc    ebx
  413d7a:	inc    esi
  413d7b:	mov    esp,0xe2597462
  413d80:	or     eax,0x813f55b0
  413d85:	sub    DWORD PTR [edx+0x4f9315e0],ebx
  413d8b:	out    dx,al
  413d8c:	cmp    DWORD PTR [esi+0x5],0xffffffc4
  413d90:	push   ebx
  413d91:	mov    bh,0xe8
  413d93:	push   ecx
  413d94:	push   ecx
  413d95:	mov    al,ds:0x10bb77cc
  413d9a:	pop    esi
  413d9b:	jns    0x413dfc
  413d9d:	sub    al,0xff
  413d9f:	add    al,0xf7
  413da1:	fist   WORD PTR [eax-0x3dddeada]
  413da7:	mov    ebp,0x9eb06c9a
  413dac:	mov    al,ds:0x413416a3
  413db1:	(bad)
  413db5:	cmp    al,0xa8
  413db7:	or     BYTE PTR [edx],bl
  413db9:	test   eax,0x5226fc22
  413dbe:	mov    esp,DWORD PTR [esi+eiz*2]
  413dc1:	dec    ecx
  413dc2:	sahf   
  413dc3:	mov    BYTE PTR [ebp-0x2c],ch
  413dc6:	icebp  
  413dc7:	popf   
  413dc8:	div    DWORD PTR [eax+0x4914f07b]
  413dce:	and    al,0x65
  413dd0:	mov    DWORD PTR [edx],esp
  413dd2:	mov    al,0x9f
  413dd4:	add    al,0x9b
  413dd6:	mov    ah,0x32
  413dd8:	mov    ds:0xf781cfc8,eax
  413ddd:	bts    DWORD PTR [esi],esi
  413de0:	push   eax
  413de1:	outs   dx,DWORD PTR ds:[esi]
  413de2:	push   esp
  413de3:	jmp    0x7e97:0x78831400
  413dea:	mov    eax,ds:0x6d6f0ff
  413def:	(bad)
  413df2:	retf   
  413df3:	mov    eax,ds:0x64f62454
  413df8:	arpl   WORD PTR [eax-0x71b2c4d6],sp
  413dfe:	jge    0x413e2f
  413e00:	jnp    0x413da2
  413e02:	jmp    0x43e6:0xc00786af
  413e09:	add    DWORD PTR [edx*4-0x7bf85514],ecx
  413e10:	fidivr WORD PTR [esp+eiz*4]
  413e13:	mov    ecx,0xd8b5dd28
  413e18:	cwde   
  413e19:	adc    BYTE PTR ds:0x73d71ea7,ch
  413e1f:	fist   DWORD PTR [ecx+esi*4-0x37a0c027]
  413e26:	add    ecx,ebp
  413e28:	aaa    
  413e29:	cmp    eax,0x7676e042
  413e2e:	pop    edi
  413e2f:	inc    ebx
  413e30:	cmp    DWORD PTR [esi+0x26],esp
  413e33:	pop    edi
  413e34:	xchg   edx,eax
  413e35:	mov    ecx,0xcc558c69
  413e3a:	jmp    0x413deb
  413e3c:	call   DWORD PTR [esp+ecx*2+0x4e]
  413e40:	xlat   BYTE PTR ds:[ebx]
  413e41:	xchg   DWORD PTR [eax],edx
  413e43:	xor    ebx,DWORD PTR [ebp+0x45]
  413e46:	xchg   ebx,eax
  413e47:	add    esi,ebx
  413e49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e4a:	adc    eax,0xee40b2e2
  413e4f:	pop    es
  413e50:	ja     0x413e43
  413e52:	mov    dl,cl
  413e54:	mov    ds:0xda5c2d10,eax
  413e59:	test   al,0x7c
  413e5b:	test   BYTE PTR ss:[esi],0xb1
  413e5f:	outs   dx,BYTE PTR ds:[esi]
  413e60:	xchg   edx,eax
  413e61:	ins    BYTE PTR es:[edi],dx
  413e62:	pop    edx
  413e63:	pop    eax
  413e64:	and    al,0x77
  413e66:	cwde   
  413e67:	int    0xa0
  413e69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e6a:	(bad)  
  413e6b:	mov    ds:0xbf0308f7,al
  413e70:	rcl    DWORD PTR [ebp+0x6ba063d1],0x0
  413e77:	test   BYTE PTR [ecx-0x3f],ch
  413e7a:	cwde   
  413e7b:	pop    eax
  413e7c:	aaa    
  413e7d:	inc    eax
  413e7e:	push   esp
  413e7f:	pop    ecx
  413e80:	sub    ch,BYTE PTR [ebx]
  413e82:	mov    al,ds:0xf88dba99
  413e87:	sti    
  413e88:	sub    edi,ebp
  413e8a:	xlat   BYTE PTR ds:[ebx]
  413e8b:	xor    al,0x95
  413e8d:	(bad)  
  413e8e:	sahf   
  413e8f:	pop    ds
  413e90:	or     al,0xe0
  413e92:	or     ecx,DWORD PTR [edx+0x197834]
  413e98:	cmc    
  413e99:	xor    BYTE PTR [ecx+0x25],bh
  413e9c:	and    cl,BYTE PTR [eax-0x6b10c87c]
  413ea2:	push   cs
  413ea3:	xor    DWORD PTR [eax-0x18],ebp
  413ea6:	inc    esp
  413ea7:	xchg   esi,eax
  413ea8:	(bad)  [edi]
  413eaa:	test   eax,0xe42013d3
  413eaf:	or     eax,0x54d514f0
  413eb4:	(bad)  
  413eb5:	(bad)  
  413eb6:	mov    cl,0xbd
  413eb8:	adc    BYTE PTR [eax],ch
  413eba:	ins    BYTE PTR es:[edi],dx
  413ebb:	add    DWORD PTR [edx+0x48d71ee2],ebx
  413ec1:	jecxz  0x413f04
  413ec3:	sbb    al,0x1a
  413ec5:	inc    ecx
  413ec6:	and    DWORD PTR [esi],esi
  413ec8:	dec    esi
  413ec9:	lods   eax,DWORD PTR ds:[esi]
  413eca:	fiadd  WORD PTR [edx+eax*2]
  413ecd:	push   edx
  413ece:	bound  ebp,QWORD PTR [edi+0x52ac0a12]
  413ed4:	add    bl,BYTE PTR [ebx+ecx*2-0x5e]
  413ed8:	cmp    edx,eax
  413eda:	fst    st(3)
  413edc:	push   esp
  413edd:	in     eax,dx
  413ede:	outs   dx,DWORD PTR ds:[esi]
  413edf:	push   ecx
  413ee0:	sbb    esp,ecx
  413ee2:	sub    bh,BYTE PTR [eax+edx*2+0x3a]
  413ee6:	mov    ds:0x94018e26,al
  413eeb:	push   0xaace56b9
  413ef0:	lea    eax,[eax-0x5813720c]
  413ef6:	add    cl,BYTE PTR [eax]
  413ef8:	sub    edi,DWORD PTR [ebx-0x495d825b]
  413efe:	jl     0x413e98
  413f00:	cld    
  413f01:	pop    esi
  413f02:	xchg   DWORD PTR ds:0x57eb96b8,ecx
  413f08:	xor    BYTE PTR [ebp+0x29cc3bb5],ah
  413f0e:	adc    al,0x7
  413f10:	ins    DWORD PTR es:[edi],dx
  413f11:	jg     0x413f55
  413f13:	cwde   
  413f14:	enter  0xb322,0xa4
  413f18:	or     BYTE PTR [ebx-0x23],ch
  413f1b:	inc    eax
  413f1c:	cmc    
  413f1d:	mov    bh,0x80
  413f1f:	lods   eax,DWORD PTR ds:[esi]
  413f20:	sbb    al,0xcb
  413f22:	adc    ch,bl
  413f24:	mov    ah,0x97
  413f26:	jmp    0x61f2:0x273cb20f
  413f2d:	clc    
  413f2e:	push   0xcd097846
  413f33:	aaa    
  413f34:	into   
  413f35:	imul   ebx,DWORD PTR [eax+0x69fe289a],0x5e
  413f3c:	test   edi,esi
  413f3e:	ret    
  413f3f:	lea    esi,[edx+0x45]
  413f42:	jecxz  0x413fba
  413f44:	retf   
  413f45:	scas   eax,DWORD PTR es:[edi]
  413f46:	xor    eax,DWORD PTR [esi]
  413f48:	fwait
  413f49:	leave  
  413f4a:	ss mov ah,0x71
  413f4d:	inc    eax
  413f4e:	xor    eax,0xc5b79937
  413f53:	fxtract 
  413f55:	jl     0x413f11
  413f57:	scas   eax,DWORD PTR es:[edi]
  413f58:	popa   
  413f59:	aaa    
  413f5a:	xchg   BYTE PTR [edx],dl
  413f5c:	fld    TBYTE PTR [esp+eiz*4+0x22]
  413f60:	or     DWORD PTR [esi],esi
  413f62:	retw   0x3e02
  413f66:	int3   
  413f67:	xlat   BYTE PTR ds:[ebx]
  413f68:	aaa    
  413f69:	push   0xffffffce
  413f6b:	fcomp  DWORD PTR [ecx]
  413f6d:	aam    0x42
  413f6f:	nop
  413f70:	loopne 0x413fa0
  413f72:	adc    ebp,esi
  413f74:	fldcw  WORD PTR [esi+ebx*8]
  413f77:	enter  0xae56,0xbb
  413f7b:	pop    ebp
  413f7c:	jle    0x413f53
  413f7e:	ss fs jbe 0x413f20
  413f82:	pop    ebx
  413f83:	aas    
  413f84:	ret    
  413f85:	ja     0xd30f10ae
  413f8b:	shl    cl,1
  413f8d:	mov    esi,0x4aa4159a
  413f92:	mov    al,ds:0xd8c32333
  413f97:	lods   al,BYTE PTR ds:[esi]
  413f98:	ds sbb eax,0xfe708f20
  413f9e:	adc    ecx,DWORD PTR [edx]
  413fa0:	(bad)  
  413fa2:	push   ss
  413fa3:	mov    dl,0x9c
  413fa5:	xchg   ebp,eax
  413fa6:	cmp    al,0xf7
  413fa8:	dec    ecx
  413fa9:	in     eax,0x5a
  413fab:	ds retf 
  413fad:	retf   
  413fae:	jae    0x413f8d
  413fb0:	jno    0x413fc2
  413fb2:	xchg   edx,eax
  413fb3:	xchg   ecx,ebx
  413fb5:	cmovl  ebp,ecx
  413fb8:	jb     0x413f96
  413fba:	inc    edx
  413fbb:	xchg   esi,eax
  413fbc:	test   DWORD PTR [ebp-0x24],ecx
  413fbf:	xor    bh,cl
  413fc1:	xchg   edx,eax
  413fc2:	xchg   BYTE PTR ds:0x2e217516,ch
  413fc8:	and    al,0xc5
  413fca:	call   0x889080e2
  413fcf:	scas   ax,WORD PTR es:[edi]
  413fd1:	int3   
  413fd2:	into   
  413fd3:	retf   0x57ef
  413fd6:	sub    al,bl
  413fd8:	cs mov edi,?
  413fdb:	jp     0x413f7a
  413fdd:	out    0x1f,eax
  413fdf:	bound  ebp,QWORD PTR ds:0xf97b7c40
  413fe5:	lods   eax,DWORD PTR ds:[esi]
  413fe6:	data16 cmp al,0xd8
  413fe9:	fild   DWORD PTR [ebx]
  413feb:	pop    es
  413fec:	fisttp DWORD PTR [edi+0x16]
  413fef:	add    DWORD PTR [ebx],esi
  413ff1:	mov    eax,0xc8f6e06b
  413ff6:	xchg   esi,eax
  413ff7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ff8:	sbb    al,0x70
  413ffa:	(bad)  
  413ffb:	loop   0x41405d
  413ffd:	sbb    ebx,DWORD PTR [edi+0x41]
  414000:	retf   
  414001:	popa   
  414002:	in     eax,dx
  414003:	sub    al,BYTE PTR [ecx+0x2ca4c071]
  414009:	cmp    BYTE PTR [ebx],cl
  41400b:	mov    DWORD PTR ds:0x58cf1361,edx
  414011:	(bad)  
  414012:	das    
  414013:	and    ecx,DWORD PTR [edi]
  414015:	pushf  
  414016:	jge    0x413fc9
  414018:	cmp    ecx,esi
  41401a:	mov    esp,0x5acc8091
  41401f:	bnd data16 ja 0x413fb2
  414023:	sbb    esi,ebp
  414025:	stos   DWORD PTR es:[edi],eax
  414026:	add    al,0xa6
  414028:	push   0xf1c1b404
  41402d:	scas   eax,DWORD PTR es:[edi]
  41402e:	sub    al,0x56
  414030:	enter  0x649,0xd2
  414034:	pop    esi
  414035:	mov    edi,0x3a8b0834
  41403a:	arpl   WORD PTR [ebp+0x3678ba48],di
  414040:	adc    DWORD PTR [edi-0x4059e28],esi
  414046:	lods   eax,DWORD PTR ds:[esi]
  414047:	or     ebp,DWORD PTR [edi]
  414049:	push   ebx
  41404a:	dec    eax
  41404b:	int3   
  41404c:	jg     0x4140ad
  41404e:	cdq    
  41404f:	in     al,dx
  414050:	sbb    ah,BYTE PTR [ebx]
  414052:	enter  0x5a8c,0x45
  414056:	lahf   
  414057:	and    BYTE PTR [eax],bl
  414059:	xchg   esi,eax
  41405a:	xor    DWORD PTR [edx],0xbdf74641
  414060:	mov    al,ds:0x62b571b8
  414065:	pop    edi
  414066:	popa   
  414067:	mov    fs,WORD PTR [eax]
  414069:	dec    edi
  41406a:	jne    0x4140df
  41406c:	push   0xe26bb9a8
  414071:	push   eax
  414072:	gs jp  0x41404e
  414075:	mov    ah,0x2c
  414077:	test   DWORD PTR [eax],eax
  414079:	inc    edi
  41407a:	and    ah,BYTE PTR [eax-0x65]
  41407d:	hlt    
  41407e:	or     ebp,edi
  414080:	pop    ecx
  414081:	ins    BYTE PTR es:[edi],dx
  414082:	adc    al,0x2d
  414084:	or     edx,edx
  414086:	popa   
  414087:	(bad)  
  414088:	gs test al,0x54
  41408b:	add    ecx,DWORD PTR [edx+0x476b0ae5]
  414091:	push   esi
  414092:	cmp    al,0x7
  414094:	xchg   bh,dh
  414096:	shl    BYTE PTR [ecx+0x11b0dec5],1
  41409c:	stos   DWORD PTR es:[edi],eax
  41409d:	or     ch,BYTE PTR [edx-0x6]
  4140a0:	pop    es
  4140a1:	push   eax
  4140a2:	sti    
  4140a3:	mov    esp,0xfd3ab7
  4140a8:	dec    edi
  4140a9:	mov    bh,0x98
  4140ab:	mov    BYTE PTR [esi-0x563f5b55],bh
  4140b1:	jecxz  0x414096
  4140b3:	cmp    edi,DWORD PTR [ebp-0x46547f62]
  4140b9:	in     eax,0xab
  4140bb:	aam    0xd
  4140bd:	leave  
  4140be:	mov    ch,0x8f
  4140c0:	lods   al,BYTE PTR ds:[esi]
  4140c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4140c2:	stos   BYTE PTR es:[edi],al
  4140c3:	jmp    0x6615bcef
  4140c8:	dec    ebx
  4140c9:	lock dec edi
  4140cb:	sbb    ecx,ecx
  4140cd:	shl    DWORD PTR [edx-0x6add192e],0xa
  4140d4:	cld    
  4140d5:	mov    dl,0x90
  4140d7:	mov    WORD PTR [eax+0x42513347],fs
  4140dd:	pusha  
  4140de:	test   eax,0xf803c141
  4140e3:	push   edi
  4140e4:	cmp    eax,0xedd14ded
  4140e9:	mov    bl,0xb8
  4140eb:	repz cmp eax,0x1edc4258
  4140f1:	adc    DWORD PTR ds:0x9605ff06,0xffffffd9
  4140f8:	cmp    dh,BYTE PTR [edi]
  4140fa:	jnp    0x4140a2
  4140fc:	test   eax,0x57b0d264
  414101:	jo     0x41409b
  414103:	lods   al,BYTE PTR ds:[esi]
  414104:	push   edi
  414105:	mov    ds:0xfda49b01,eax
  41410a:	dec    ebx
  41410b:	mov    edi,0xa7db0905
  414110:	or     BYTE PTR [ebp+0x20],al
  414113:	pop    edx
  414114:	test   eax,0xf80e83fd
  414119:	pusha  
  41411a:	cmp    esp,ecx
  41411c:	xor    BYTE PTR [ebp+eiz*4-0x35],dl
  414120:	iret   
  414121:	inc    esp
  414122:	xchg   DWORD PTR [ebp-0x46],ebx
  414125:	js     0x414145
  414127:	cli    
  414128:	cmp    DWORD PTR [ecx+0x74],ebp
  41412b:	push   es
  41412c:	stc    
  41412d:	stos   BYTE PTR es:[edi],al
  41412e:	xchg   ebx,eax
  41412f:	mov    ah,0x35
  414131:	and    al,0x27
  414133:	fnstcw WORD PTR [eax+0x64648481]
  414139:	jb     0x414174
  41413b:	push   edx
  41413c:	add    al,0x87
  41413e:	and    BYTE PTR [edi+0x1b],ah
  414141:	jns    0x41414b
  414143:	daa    
  414144:	cmp    BYTE PTR [ebx+0x7b],ah
  414147:	pop    es
  414148:	(bad)  
  41414a:	ja     0x41418a
  41414c:	(bad)  
  41414d:	mov    edi,0x1604bbab
  414152:	test   eax,0xdb3441e2
  414157:	ss jp  0x414145
  41415a:	out    0x4c,eax
  41415c:	fstp   QWORD PTR [ebp+0x31]
  41415f:	jecxz  0x414107
  414161:	mov    bl,0x1e
  414163:	cmovo  ebx,DWORD PTR [esi-0x71]
  414167:	mov    esi,esi
  414169:	push   es
  41416a:	maxps  xmm0,XMMWORD PTR [edi-0x6d]
  41416e:	dec    eax
  41416f:	mov    dl,0xce
  414171:	sub    edx,edi
  414173:	test   DWORD PTR [ecx*2+0x3d7f4359],edx
  41417a:	dec    eax
  41417b:	pop    esp
  41417c:	sub    eax,0x8fafa788
  414181:	mov    BYTE PTR [ecx-0x1bc671a6],bl
  414187:	data16 out dx,al
  414189:	shl    DWORD PTR [edi],cl
  41418b:	fist   WORD PTR [ebx+0x29601929]
  414191:	and    BYTE PTR [edi],al
  414193:	xchg   DWORD PTR ds:[ecx+0x646afe62],ebp
  41419a:	into   
  41419b:	cmc    
  41419c:	jo     0x4141fe
  41419e:	or     DWORD PTR [esi+0x41],eax
  4141a1:	add    al,0x3a
  4141a3:	sub    eax,0xa9eb85c6
  4141a8:	enter  0x3d89,0x11
  4141ac:	es dec eax
  4141ae:	pop    eax
  4141af:	lods   al,BYTE PTR ds:[esi]
  4141b0:	jg     0x414202
  4141b2:	xor    cl,al
  4141b4:	sbb    eax,0xebf8eb02
  4141b9:	sbb    DWORD PTR [edi],eax
  4141bb:	pop    ds
  4141bc:	push   eax
  4141bd:	(bad)  [eax+0xd]
  4141c0:	and    al,ch
  4141c2:	repnz cmp al,0x4a
  4141c5:	stos   BYTE PTR es:[edi],al
  4141c6:	mov    DWORD PTR [ebx-0x2e],esi
  4141c9:	out    dx,al
  4141ca:	sbb    edx,DWORD PTR ds:0x9960eba1
  4141d0:	pop    ebp
  4141d1:	jle    0x4141c7
  4141d3:	jns    0x41420f
  4141d5:	cmp    cl,BYTE PTR [ebp+0x70]
  4141d8:	(bad)  
  4141d9:	mov    ebp,edx
  4141db:	in     al,0xe8
  4141dd:	test   BYTE PTR [edx+edx*1-0x49676df8],ah
  4141e4:	fnstenv [ebx*4+0x77a6a560]
  4141eb:	mov    bl,0x48
  4141ed:	lahf   
  4141ee:	pop    ebx
  4141ef:	fild   WORD PTR [ecx-0x7379cea0]
  4141f5:	inc    eax
  4141f6:	js     0x4141a9
  4141f8:	outs   dx,DWORD PTR ds:[esi]
  4141f9:	aad    0x74
  4141fb:	(bad)  
  4141fc:	retf   0xb761
  4141ff:	ds test eax,0x6acd0d7c
  414205:	das    
  414206:	pop    ecx
  414207:	sbb    DWORD PTR [eax+0x20050155],ebx
  41420d:	dec    eax
  41420e:	ror    cl,0x78
  414211:	arpl   bp,cx
  414213:	pop    ecx
  414215:	fadd   QWORD PTR [esi+0x7]
  414218:	outs   dx,BYTE PTR ds:[esi]
  414219:	jns    0x414251
  41421b:	cmp    al,bh
  41421d:	xlat   BYTE PTR ds:[ebx]
  41421e:	jb     0x41426e
  414220:	jmp    0xa7ca:0x51e5773b
  414227:	iret   
  414228:	sub    eax,DWORD PTR [ebx-0x522379a]
  41422e:	sub    eax,0x251a956
  414233:	outs   dx,BYTE PTR ds:[esi]
  414234:	(bad)  
  414235:	js     0x4141ff
  414237:	sar    cl,0xb9
  41423a:	pushf  
  41423b:	mov    ds:0x83042e7e,al
  414240:	xchg   ecx,eax
  414241:	jb     0x4142a5
  414243:	loopne 0x414207
  414245:	jb     0x4141d1
  414247:	sti    
  414248:	cmp    ebp,0x8bc772c3
  41424e:	ds push ebp
  414250:	stos   DWORD PTR es:[edi],eax
  414251:	scas   al,BYTE PTR es:[edi]
  414252:	iret   
  414253:	in     al,dx
  414254:	fcom   DWORD PTR [ebx-0x36]
  414257:	mov    eax,ds:0x14971af
  41425c:	pop    ebx
  41425d:	mov    bh,0x65
  41425f:	sbb    esp,DWORD PTR [ecx+edi*4-0x65]
  414263:	fs or  eax,0xb9c1c7fe
  414269:	je     0x414206
  41426b:	ins    DWORD PTR es:[edi],dx
  41426c:	dec    esi
  41426d:	ins    BYTE PTR es:[edi],dx
  41426e:	ds pop ebx
  414270:	(bad)  
  414271:	and    edx,edx
  414273:	dec    ebx
  414274:	mov    ecx,0xfca03e31
  414279:	leave  
  41427a:	std    
  41427b:	jecxz  0x4142aa
  41427d:	dec    edi
  41427e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41427f:	mov    esp,0xd0912361
  414284:	mov    gs,WORD PTR [edx]
  414286:	add    eax,0x55fbdc1f
  41428b:	dec    ecx
  41428c:	sbb    esi,esp
  41428e:	cmp    al,0x3e
  414290:	mov    ?,WORD PTR [ebx+eiz*2-0x7b]
  414294:	rol    BYTE PTR ds:0x94f13842,0x2
  41429b:	(bad)  
  41429c:	push   ecx
  41429d:	pop    ebx
  41429e:	(bad)
  4142a1:	jle    0x414265
  4142a3:	retf   0x455f
  4142a6:	jge    0x414272
  4142a8:	push   ebx
  4142a9:	jb     0x41423f
  4142ab:	inc    edx
  4142ac:	daa    
  4142ad:	dec    ecx
  4142ae:	add    al,0xe3
  4142b0:	xchg   edx,eax
  4142b1:	fistp  DWORD PTR [ecx+0x286c69ff]
  4142b7:	lds    esp,FWORD PTR es:[edi-0x70da634d]
  4142be:	add    al,0x10
  4142c0:	pop    esp
  4142c1:	mov    ebx,0xe1cfc24
  4142c6:	cmp    bh,BYTE PTR [esi-0x69]
  4142c9:	mov    ebx,0xb1042202
  4142ce:	mov    cl,ch
  4142d0:	sub    BYTE PTR [ecx+ebp*4-0x63],ch
  4142d4:	jg     0x4142e3
  4142d6:	jb     0x4142e1
  4142d8:	loope  0x4142ba
  4142da:	inc    eax
  4142db:	aad    0x75
  4142dd:	lds    ecx,FWORD PTR [edi+0x2701a883]
  4142e3:	xchg   edx,eax
  4142e4:	cmp    eax,edi
  4142e6:	cmp    dl,dl
  4142e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142e9:	mov    eax,0xd3056570
  4142ee:	call   0x6b44:0xe16fbacc
  4142f5:	inc    ecx
  4142f6:	ja     0x4142b0
  4142f8:	xchg   ecx,eax
  4142f9:	adc    BYTE PTR [ecx-0x2b],bh
  4142fc:	repz sub DWORD PTR [eax+ecx*1-0x1abb7a6d],esp
  414304:	jb     0x414328
  414306:	pop    es
  414307:	sub    DWORD PTR [edi],ebp
  414309:	dec    edi
  41430a:	dec    BYTE PTR [edx-0x139a8baf]
  414310:	scas   eax,DWORD PTR es:[edi]
  414311:	les    ecx,FWORD PTR [ecx]
  414313:	push   edx
  414314:	inc    ebp
  414315:	xchg   ecx,eax
  414316:	iret   
  414317:	sub    ebx,DWORD PTR [edi+0x43]
  41431a:	fild   DWORD PTR [edi+0x3dd02320]
  414320:	jne    0x4142e6
  414322:	test   DWORD PTR [edi],edx
  414324:	cmp    BYTE PTR [ebx-0x78],0xa3
  414328:	in     eax,0x52
  41432a:	mov    cl,0x3d
  41432c:	js     0x41433a
  41432e:	(bad)  
  41432f:	jmp    0x414321
  414331:	iret   
  414332:	mov    dl,0xa6
  414334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414335:	sti    
  414336:	call   0x5f2a:0x83d95924
  41433d:	retf   0xd7ec
  414340:	or     ch,BYTE PTR [edi-0x71d26285]
  414346:	mov    esp,0xd822ca2
  41434c:	push   ecx
  41434d:	popa   
  41434e:	sbb    ebp,DWORD PTR [eax-0x5d]
  414351:	mov    edi,0x5dac56d1
  414356:	(bad)  
  414357:	push   edi
  414358:	ja     0x41431e
  41435a:	or     al,0x70
  41435c:	mov    BYTE PTR [ecx+0x46],dl
  41435f:	aaa    
  414360:	je     0x414333
  414362:	xchg   esi,eax
  414363:	lds    ecx,FWORD PTR [edx-0x19]
  414366:	imul   ecx,esp,0xa63afd4e
  41436c:	lods   al,BYTE PTR ds:[esi]
  41436d:	or     DWORD PTR [ebp-0x13],esi
  414370:	rol    BYTE PTR [ebx+0x7f50155],0xd8
  414377:	ins    BYTE PTR es:[edi],dx
  414378:	or     ah,BYTE PTR [ebx-0x27]
  41437b:	sub    DWORD PTR [ecx-0xc334f8f],0x840c2f05
  414385:	push   es
  414386:	jne    0x414366
  414388:	call   0x4654:0x78fee24f
  41438f:	or     eax,0xb03c0227
  414394:	(bad)  
  414395:	adc    eax,0xf07fdf4a
  41439a:	stos   DWORD PTR es:[edi],eax
  41439b:	or     bh,BYTE PTR [edi+0x9]
  41439e:	push   DWORD PTR [ecx-0x47df0c68]
  4143a4:	aam    0xc9
  4143a6:	jle    0x4143b3
  4143a8:	mov    ah,0x30
  4143aa:	imul   esi,DWORD PTR ds:0xe11c14e2,0xeaf3cd21
  4143b4:	xchg   ecx,eax
  4143b5:	mov    dh,BYTE PTR [eax]
  4143b7:	lahf   
  4143b8:	sub    eax,0x8b5fe2ca
  4143bd:	test   esp,ecx
  4143bf:	ds xor eax,0x36dc6038
  4143c5:	daa    
  4143c6:	(bad)  
  4143c7:	adc    BYTE PTR [ebx-0x78],al
  4143ca:	sbb    ch,al
  4143cc:	push   eax
  4143cd:	sub    edi,DWORD PTR [esi-0x6e4480d6]
  4143d3:	mov    dh,0xf7
  4143d5:	into   
  4143d6:	cld    
  4143d7:	or     eax,0x9d8905bf
  4143dc:	adc    esp,DWORD PTR [ecx+0x50]
  4143df:	dec    esp
  4143e0:	jb     0x4143a9
  4143e2:	sti    
  4143e3:	jge    0x414437
  4143e5:	pop    es
  4143e6:	out    dx,al
  4143e7:	lods   eax,DWORD PTR ds:[esi]
  4143e8:	mov    fs,WORD PTR [esi+eax*2-0x4d7f6ccd]
  4143ef:	popf   
  4143f0:	inc    eax
  4143f1:	or     eax,0xba26877b
  4143f6:	scas   al,BYTE PTR es:[edi]
  4143f7:	xchg   edi,eax
  4143f8:	mov    esp,0x2a7bdf13
  4143fd:	lods   eax,DWORD PTR ds:[esi]
  4143fe:	and    DWORD PTR [eax],ebx
  414400:	push   es
  414401:	repz add eax,DWORD PTR [esi+0x13f6fec8]
  414408:	sbb    dl,dl
  41440a:	mov    WORD PTR [ebp+edx*8+0x7],fs
  41440e:	ins    BYTE PTR es:[edi],dx
  41440f:	mov    bl,0xf9
  414411:	push   ebx
  414412:	imul   DWORD PTR [ebx+0x524d94e]
  414418:	cli    
  414419:	pop    esi
  41441a:	(bad)  
  41441c:	test   eax,0x9701f353
  414421:	out    dx,al
  414422:	jle    0x414486
  414424:	jmp    0x15b33adf
  414429:	loope  0x414437
  41442b:	push   eax
  41442c:	mov    esi,0xbf439f99
  414431:	mov    cl,0xee
  414433:	mov    bh,0xb1
  414435:	sub    ebp,esp
  414437:	lahf   
  414438:	shl    DWORD PTR [ecx+0x49],cl
  41443b:	add    ecx,eax
  41443d:	or     cl,BYTE PTR [ebx]
  41443f:	push   esi
  414440:	daa    
  414441:	sbb    DWORD PTR [esp+edx*2+0x6f],esi
  414445:	pop    esp
  414446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414447:	cmc    
  414448:	rcr    BYTE PTR [edx-0x3f],0x42
  41444c:	or     edx,DWORD PTR [ebp+ebx*1+0x38]
  414450:	push   ebp
  414451:	sbb    eax,0x54de8693
  414456:	and    ebx,DWORD PTR [esi+0x3badd988]
  41445c:	aas    
  41445d:	sbb    eax,0xca2f1b66
  414462:	scas   al,BYTE PTR es:[edi]
  414463:	or     dh,dh
  414465:	sahf   
  414466:	ficomp DWORD PTR [edi-0x5a89c1dd]
  41446c:	retf   
  41446d:	push   ecx
  41446e:	sub    eax,0x603facf7
  414473:	xor    DWORD PTR [ecx],edi
  414475:	data16 jg 0x414470
  414478:	mov    ch,bl
  41447a:	arpl   WORD PTR [eax+0x322f3940],dx
  414480:	mov    al,ds:0xd143fb1c
  414485:	mov    BYTE PTR [eax],ah
  414487:	pushf  
  414488:	cmp    esi,DWORD PTR [eax-0x5186602e]
  41448e:	inc    esi
  41448f:	out    dx,eax
  414490:	pop    edx
  414491:	jb     0x414458
  414493:	jle    0x4144fa
  414495:	mov    ds:0xb41ee11b,eax
  41449a:	lods   eax,DWORD PTR ds:[esi]
  41449b:	out    dx,eax
  41449c:	adc    al,0xb3
  41449e:	stc    
  41449f:	outs   dx,DWORD PTR ds:[esi]
  4144a0:	push   eax
  4144a1:	pusha  
  4144a2:	adc    bh,ch
  4144a4:	loop   0x41444b
  4144a6:	lods   al,BYTE PTR ds:[esi]
  4144a7:	push   ebx
  4144a8:	call   0x80be:0x74f24e6
  4144af:	cs mov dh,0xd6
  4144b2:	inc    esp
  4144b3:	not    DWORD PTR [eax+0x5696783a]
  4144b9:	sbb    eax,0x6d295707
  4144be:	int    0x12
  4144c0:	adc    al,0xf4
  4144c2:	add    eax,0xcb933a71
  4144c7:	lods   eax,DWORD PTR ds:[esi]
  4144c8:	addr16 out 0xa7,eax
  4144cb:	push   esp
  4144cc:	jno    0x41446a
  4144ce:	lea    edx,[edi-0x335b8a4b]
  4144d4:	adc    eax,0xc58e016c
  4144d9:	addr16 push 0xe0e4d514
  4144df:	ds pushf 
  4144e1:	add    DWORD PTR [edx+0x67],esp
  4144e4:	and    al,ah
  4144e6:	lds    edi,FWORD PTR [eax]
  4144e8:	pop    ecx
  4144e9:	sbb    eax,0xfb18ade1
  4144ee:	mov    WORD PTR [ebx],ds
  4144f0:	add    ebx,DWORD PTR [ecx+0x4bc3bd9e]
  4144f6:	pop    edi
  4144f7:	xor    ch,BYTE PTR [ebx+eiz*4+0x5]
  4144fb:	adc    ebp,0x1e
  4144fe:	pop    ebx
  4144ff:	test   ah,cl
  414501:	or     ch,BYTE PTR [esi+0x39]
  414504:	bound  ebp,QWORD PTR [edx-0xacfe8ed]
  41450a:	jbe    0x4144fc
  41450c:	jno    0x4144d9
  41450e:	bound  esp,QWORD PTR [esi-0x284ef72c]
  414514:	xchg   esi,eax
  414515:	adc    bl,ch
  414517:	add    al,ah
  414519:	popf   
  41451a:	ret    0xd8e2
  41451d:	rcl    BYTE PTR [edi+0x174340d5],0xfe
  414524:	mov    esi,0xc5bfd8e6
  414529:	test   DWORD PTR [eax+0x65929999],ebp
  41452f:	ret    
  414530:	lahf   
  414531:	addr16 (bad) 
  414533:	xchg   ebp,eax
  414534:	das    
  414535:	xchg   bl,dh
  414537:	in     al,dx
  414538:	xchg   esp,eax
  414539:	sub    eax,0x5870a767
  41453e:	mov    ebp,0x628e525a
  414543:	or     ecx,edx
  414545:	icebp  
  414546:	and    eax,0x89cfb265
  41454b:	leave  
  41454c:	pop    edx
  41454d:	bound  edi,QWORD PTR [esi-0xcc2de33]
  414553:	or     DWORD PTR [ebx-0x40a453c2],edi
  414559:	retf   0xddc9
  41455c:	mov    ebp,0xb59a76e8
  414561:	mov    ebp,0x8d4b5782
  414566:	leave  
  414567:	aas    
  414568:	push   eax
  414569:	(bad)  
  41456a:	cmp    ebx,DWORD PTR [edi]
  41456c:	imul   esi,DWORD PTR [ecx+eax*1+0x13cbdd8e],0x5d
  414574:	out    dx,al
  414575:	pop    ecx
  414576:	mov    gs,WORD PTR [eax+esi*8+0x5]
  41457a:	sbb    eax,edx
  41457c:	xchg   ebp,eax
  41457d:	sub    ax,di
  414580:	neg    BYTE PTR [ecx]
  414582:	mov    al,0xa0
  414584:	jnp    0x4145eb
  414586:	xchg   ebx,eax
  414587:	and    cl,BYTE PTR [eax]
  414589:	add    BYTE PTR [ebp-0x449d351c],0xce
  414590:	inc    edi
  414591:	retf   
  414592:	fwait
  414593:	stos   BYTE PTR es:[edi],al
  414594:	out    0x53,al
  414596:	xor    cl,dl
  414598:	pop    ds
  414599:	mov    edx,0x799c13ce
  41459e:	fstp   TBYTE PTR ds:0x1ef76464
  4145a4:	sub    DWORD PTR [edi],edi
  4145a6:	aad    0xe7
  4145a8:	inc    edi
  4145a9:	cli    
  4145aa:	lods   al,BYTE PTR ds:[esi]
  4145ab:	push   ebp
  4145ac:	bound  ecx,QWORD PTR [ecx]
  4145ae:	cmp    bl,0x54
  4145b1:	sbb    eax,0x5616f75
  4145b6:	ins    DWORD PTR es:[edi],dx
  4145b7:	dec    eax
  4145b8:	stc    
  4145b9:	cmp    dh,BYTE PTR [esi]
  4145bb:	ins    DWORD PTR es:[edi],dx
  4145bc:	jecxz  0x41459b
  4145be:	test   DWORD PTR [ebp+0x56],eax
  4145c1:	pop    edx
  4145c2:	ins    DWORD PTR es:[di],dx
  4145c4:	cmc    
  4145c5:	icebp  
  4145c6:	(bad)  
  4145c7:	repz or eax,0x7260b9c1
  4145cd:	mov    ch,0x85
  4145cf:	pop    es
  4145d0:	popf   
  4145d1:	ja     0x4145de
  4145d3:	enter  0x9205,0xe
  4145d7:	aad    0xc2
  4145d9:	lods   eax,DWORD PTR ds:[esi]
  4145da:	sub    ecx,DWORD PTR ds:0x8ac41687
  4145e0:	aad    0x6e
  4145e2:	std    
  4145e3:	xor    al,0x2a
  4145e5:	sbb    al,0x2f
  4145e7:	mov    eax,eax
  4145e9:	rcl    BYTE PTR [eax-0x1],cl
  4145ec:	push   0x26
  4145ee:	push   ebx
  4145ef:	adc    al,0xe6
  4145f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145f2:	repnz mov BYTE PTR [ecx+0x3bdd6903],bl
  4145f9:	add    al,0x47
  4145fb:	fcomp  st(2)
  4145fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145fe:	dec    ch
  414600:	popa   
  414601:	mov    edx,0x51af796f
  414606:	cmp    BYTE PTR [edi+0x2e],al
  414609:	and    al,0xdc
  41460b:	fcmovb st,st(6)
  41460d:	dec    esp
  41460e:	jle    0x414618
  414610:	or     BYTE PTR [edx-0x33af34e],cl
  414616:	and    DWORD PTR [edx],esp
  414618:	dec    edx
  414619:	mov    al,ds:0xecff7e66
  41461e:	lea    ecx,[edx]
  414620:	jbe    0x414600
  414622:	cdq    
  414623:	mov    esp,0x9b5325b0
  414628:	inc    esi
  414629:	retf   
  41462a:	lods   al,BYTE PTR ds:[esi]
  41462b:	dec    ecx
  41462c:	sbb    al,bl
  41462e:	hlt    
  41462f:	popf   
  414630:	or     al,0xec
  414632:	and    eax,DWORD PTR [ebp+0x9515242]
  414638:	loope  0x414615
  41463a:	xor    al,0x40
  41463c:	popf   
  41463d:	lahf   
  41463e:	cs aam 0x85
  414641:	mov    ecx,0xd31e9a4b
  414646:	xchg   edx,eax
  414647:	pop    edx
  414648:	jmp    0x5f03675b
  41464d:	cdq    
  41464e:	mov    eax,0x2eac41a8
  414653:	nop
  414654:	loope  0x4146b7
  414656:	jmp    0x87a8c860
  41465b:	sub    esi,DWORD PTR [eax-0x705f9e90]
  414661:	popa   
  414662:	adc    edx,edi
  414664:	add    esp,DWORD PTR [eax-0x4da59736]
  41466a:	xor    esp,eax
  41466c:	outs   dx,DWORD PTR ds:[esi]
  41466d:	stos   BYTE PTR es:[edi],al
  41466e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41466f:	call   0xc4c52f96
  414674:	ins    BYTE PTR es:[edi],dx
  414675:	outs   dx,BYTE PTR ds:[esi]
  414676:	fld    QWORD PTR [edi]
  414678:	call   0xe5f2:0x8b52d30f
  41467f:	xchg   bl,dh
  414681:	push   ds
  414682:	dec    eax
  414683:	adc    eax,0x64dbe67b
  414688:	cmp    DWORD PTR [ebp-0x7b],esi
  41468b:	push   ebx
  41468c:	outs   dx,DWORD PTR ds:[esi]
  41468d:	imul   edi,DWORD PTR [edx],0xffffff9d
  414690:	mov    ch,BYTE PTR [ebx]
  414692:	xchg   DWORD PTR gs:[esi],ebp
  414695:	push   es
  414696:	std    
  414697:	mov    ebx,0x43361965
  41469c:	and    bh,bh
  41469e:	gs push esp
  4146a0:	xchg   edx,eax
  4146a1:	aad    0xdf
  4146a3:	outs   dx,BYTE PTR ds:[esi]
  4146a4:	mov    eax,0xc9f404ca
  4146a9:	imul   ecx
  4146ab:	sub    eax,0x12271827
  4146b0:	repnz mov dh,0x37
  4146b3:	in     al,0x84
  4146b5:	fistp  QWORD PTR [ebx-0x4d]
  4146b8:	xchg   edx,eax
  4146b9:	aas    
  4146ba:	lahf   
  4146bb:	out    0xe1,al
  4146bd:	push   ecx
  4146be:	xlat   BYTE PTR ds:[ebx]
  4146bf:	test   DWORD PTR [esi-0x300b3862],eax
  4146c5:	lahf   
  4146c6:	jno    0x41465f
  4146c8:	test   al,0x75
  4146ca:	lahf   
  4146cb:	or     bl,BYTE PTR [esi-0x7d]
  4146ce:	fisub  WORD PTR [ebx+0x3096af52]
  4146d4:	adc    eax,0xc303fd9b
  4146d9:	fwait
  4146da:	jmp    DWORD PTR [ebp+0x32]
  4146dd:	cli    
  4146de:	sub    ch,BYTE PTR [edi+0x1e]
  4146e1:	outs   dx,DWORD PTR ds:[esi]
  4146e2:	popa   
  4146e3:	xor    al,0x8c
  4146e5:	sti    
  4146e6:	mov    BYTE PTR [edx],ch
  4146e8:	inc    esi
  4146e9:	xchg   esi,eax
  4146ea:	push   ds
  4146eb:	mov    ecx,0x359ad0d6
  4146f0:	and    DWORD PTR [edi-0x50],eax
  4146f3:	pop    ds
  4146f4:	jae    0x414684
  4146f6:	pop    es
  4146f7:	aam    0x34
  4146f9:	xlat   BYTE PTR ds:[ebx]
  4146fa:	pop    edi
  4146fb:	int3   
  4146fc:	retf   0x8b8d
  4146ff:	xchg   ebx,eax
  414700:	sbb    esp,DWORD PTR [ecx-0x11]
  414703:	inc    edx
  414704:	sbb    eax,0x41febfa9
  414709:	fst    st(1)
  41470b:	inc    edx
  41470c:	adc    DWORD PTR [edi],0xafaf9677
  414712:	mov    WORD PTR [ebx+0x77ffaf2],?
  414718:	dec    ecx
  414719:	xor    cl,BYTE PTR [edi]
  41471b:	push   ebp
  41471c:	xor    esi,esp
  41471e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41471f:	aas    
  414720:	adc    edi,DWORD PTR [ebx]
  414722:	nop
  414723:	xchg   DWORD PTR [esi],ebx
  414725:	xor    DWORD PTR [ebp+0x3d],ebp
  414728:	pop    es
  414729:	jne    0x41478b
  41472b:	cmp    al,0xf
  41472d:	push   edx
  41472e:	fisttp DWORD PTR [edx+0x27]
  414731:	jno    0x414732
  414733:	iret   
  414734:	ret    
  414735:	xchg   ebp,eax
  414736:	push   ecx
  414737:	(bad)  
  414738:	aam    0xd8
  41473a:	sbb    DWORD PTR [eax+0x3c],edi
  41473d:	sbb    DWORD PTR [ebx*8+0x70f957c7],edi
  414744:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414745:	pop    ds
  414746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414747:	out    0xe,eax
  414749:	in     eax,0xb5
  41474b:	inc    ebp
  41474c:	ret    
  41474d:	pop    esi
  41474e:	idiv   DWORD PTR [edi+eax*1+0x202c0a38]
  414755:	call   0x9309:0x38c70cef
  41475c:	xor    BYTE PTR [edx-0x1ed701c1],al
  414762:	and    BYTE PTR [esi+0x2a],cl
  414765:	inc    eax
  414766:	lds    edi,FWORD PTR ds:0x1c2d50bc
  41476c:	xchg   ebp,eax
  41476d:	aam    0x72
  41476f:	inc    eax
  414770:	sub    al,0xe9
  414772:	fcomp  st(6)
  414774:	fs xor edx,esp
  414777:	shl    dh,cl
  414779:	sub    eax,0xcd51747f
  41477e:	cmp    bh,cl
  414780:	and    DWORD PTR [ebp-0x5d],eax
  414783:	jg     0x41476b
  414785:	jmp    0x75e06ce1
  41478a:	in     eax,dx
  41478b:	sar    DWORD PTR [esi+eax*8+0x6d353932],0x64
  414793:	retf   
  414794:	scas   eax,DWORD PTR es:[edi]
  414795:	shl    BYTE PTR [edi],cl
  414797:	pop    edi
  414798:	jno    0x4147aa
  41479a:	mov    al,0xb4
  41479c:	bound  esi,QWORD PTR [edi+0x26]
  41479f:	ins    DWORD PTR es:[edi],dx
  4147a0:	addr16 mov al,0x5
  4147a3:	jne    0x41472d
  4147a5:	xchg   ebp,eax
  4147a6:	add    BYTE PTR [edi+ebx*1],bh
  4147a9:	mov    ah,0x75
  4147ab:	out    dx,al
  4147ac:	cmp    esp,ebp
  4147ae:	sar    BYTE PTR [ebx],0xec
  4147b1:	adc    DWORD PTR [ecx],ebp
  4147b3:	scas   eax,DWORD PTR es:[edi]
  4147b4:	pop    esi
  4147b5:	call   0xe6ec:0x53cac536
  4147bc:	jbe    0x414792
  4147be:	inc    ebx
  4147bf:	in     al,dx
  4147c0:	aas    
  4147c1:	ja     0x4147dc
  4147c3:	mov    bh,0xb
  4147c5:	mov    al,0xa0
  4147c7:	cld    
  4147c8:	dec    edx
  4147c9:	push   eax
  4147ca:	xor    al,al
  4147cc:	xchg   ebx,eax
  4147cd:	mov    ss,WORD PTR [eax+0x10]
  4147d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147d1:	push   eax
  4147d2:	clc    
  4147d3:	loop   0x4147a5
  4147d5:	inc    edx
  4147d6:	adc    eax,0x30160dcc
  4147db:	sub    BYTE PTR [eax+0x225b4320],ah
  4147e1:	jnp    0x414841
  4147e3:	retf   0x22c7
  4147e6:	push   esi
  4147e7:	add    eax,0xc8d5c571
  4147ec:	mov    ch,0x44
  4147ee:	ret    
  4147ef:	ds dec esp
  4147f1:	xchg   BYTE PTR [ebp-0x743b5e8f],dl
  4147f7:	cs push 0xcda31975
  4147fd:	pusha  
  4147fe:	mov    ds:0x3339a3a8,al
  414803:	shl    BYTE PTR [edx],0x3e
  414806:	test   eax,0x7efdfe51
  41480b:	xchg   edx,eax
  41480c:	add    al,0xd1
  41480e:	sbb    eax,0x292bd9db
  414813:	imul   eax,DWORD PTR [edx+0x12],0xffffff91
  414817:	rcl    DWORD PTR [eax-0x1c],1
  41481a:	sub    BYTE PTR [ebx+0xa016e11],ch
  414820:	std    
  414821:	shr    BYTE PTR [eax],cl
  414823:	(bad)  
  414824:	cld    
  414825:	stos   BYTE PTR es:[edi],al
  414826:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414827:	lods   eax,DWORD PTR ds:[esi]
  414828:	popa   
  414829:	in     al,0xaa
  41482b:	dec    eax
  41482c:	mov    ecx,0xbaa2fe59
  414831:	push   eax
  414832:	sub    ch,ch
  414834:	sub    edx,DWORD PTR [esi-0x64]
  414837:	inc    ecx
  414838:	arpl   di,sp
  41483a:	and    esp,DWORD PTR [esi-0x72]
  41483d:	(bad)
  414840:	add    eax,0x9d48b03c
  414845:	inc    eax
  414846:	lods   al,BYTE PTR ds:[esi]
  414847:	dec    eax
  414848:	jo     0x41485b
  41484a:	cdq    
  41484b:	(bad)
  41484e:	fistp  WORD PTR [esi+0x2d]
  414851:	xor    BYTE PTR [eax],al
  414853:	mov    edx,0x767c0ff4
  414858:	loopne 0x41480a
  41485a:	adc    DWORD PTR ds:0x80724823,ebp
  414860:	into   
  414861:	mov    ebp,0x3fa8d685
  414866:	repz cmp al,0x4e
  414869:	push   eax
  41486a:	jno    0x4147fe
  41486c:	adc    ch,BYTE PTR [edx-0x2dc8b2da]
  414872:	dec    esi
  414873:	ins    BYTE PTR es:[edi],dx
  414874:	or     ah,BYTE PTR ds:0x80e0ee
  41487a:	sbb    BYTE PTR [edi+edx*8],al
  41487d:	inc    eax
  41487e:	ds gs cmp eax,0x2ea5ffa1
  414885:	fdivr  DWORD PTR [edx]
  414887:	add    edi,DWORD PTR [esi+edx*2+0x2247f05d]
  41488e:	retf   
  41488f:	pop    ebp
  414890:	push   ds
  414891:	xor    eax,0xa9e3c168
  414896:	xchg   esi,eax
  414897:	enter  0x6de6,0x9f
  41489b:	dec    eax
  41489c:	aaa    
  41489d:	push   ss
  41489e:	fbstp  TBYTE PTR ds:0x8852d352
  4148a4:	jb     0x41487f
  4148a6:	pop    ecx
  4148a7:	imul   edx,DWORD PTR [ebx-0x48],0x88d1fb9
  4148ae:	call   0xe6b3:0xa64abecf
  4148b5:	dec    edx
  4148b6:	mov    edi,0x24860e0a
  4148bb:	sub    BYTE PTR [ebx],dl
  4148bd:	cmp    ch,cl
  4148bf:	shl    DWORD PTR [ebx-0x64],1
  4148c2:	push   ebx
  4148c3:	popf   
  4148c4:	mov    edi,0x67c5df03
  4148c9:	add    BYTE PTR [edx-0x514bdf43],al
  4148cf:	mov    ch,0xae
  4148d1:	(bad)  
  4148d2:	and    eax,0xcc4663e8
  4148d7:	mov    ds:0x363d3deb,eax
  4148dc:	mov    ecx,0xe4f7a1c7
  4148e1:	pop    esi
  4148e2:	jmp    0x41487d
  4148e4:	inc    ebx
  4148e5:	or     eax,0x1216d47d
  4148ea:	addr16 ds aam 0xef
  4148ee:	xor    cl,BYTE PTR [ebx]
  4148f0:	xchg   ecx,eax
  4148f1:	or     eax,0x5912febd
  4148f6:	inc    eax
  4148f7:	jmp    0x61039c47
  4148fc:	loopne 0x41496b
  4148fe:	shl    BYTE PTR [ecx-0x77],0xd2
  414902:	fidiv  WORD PTR [edx+0x7d]
  414905:	fwait
  414906:	mov    dh,0xc6
  414908:	inc    edx
  414909:	xor    bl,cl
  41490b:	cmp    al,BYTE PTR [edi+0xe]
  41490e:	icebp  
  41490f:	sbb    cl,BYTE PTR ds:0xafb85d48
  414915:	out    0x65,eax
  414917:	pop    ds
  414918:	mov    eax,ds:0x528404dd
  41491d:	dec    eax
  41491e:	mov    dh,0x2f
  414920:	sbb    DWORD PTR [edi+0x76],ebp
  414923:	mov    esp,0x4314bd4d
  414928:	(bad)  
  414929:	jno    0x414998
  41492b:	sbb    ecx,DWORD PTR [ecx-0x5984d6ff]
  414931:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414932:	(bad)  
  414933:	fild   QWORD PTR [edi-0x31b62967]
  414939:	pop    ss
  41493a:	das    
  41493b:	mov    ah,0x86
  41493d:	(bad)  
  41493e:	leave  
  41493f:	dec    BYTE PTR [ebp-0x2b]
  414942:	aas    
  414943:	push   ds
  414944:	in     al,dx
  414945:	mov    ch,0xf4
  414947:	aas    
  414948:	popa   
  414949:	cmp    BYTE PTR [edx+0x27],cl
  41494c:	fldenv [ecx]
  41494e:	sub    eax,0xb9238820
  414953:	dec    esp
  414954:	aas    
  414955:	mov    esp,0x4bfad2e4
  41495a:	in     al,0x23
  41495c:	adc    al,0x7f
  41495e:	xor    esp,DWORD PTR [esi+0x1c]
  414961:	nop
  414962:	addr16 cmp bl,dl
  414965:	hlt    
  414966:	push   ss
  414967:	mov    esp,0x196ce1fa
  41496c:	shl    bl,1
  41496e:	pushf  
  41496f:	cmp    DWORD PTR [ecx],esi
  414971:	adc    edx,ebx
  414973:	xor    dl,BYTE PTR [ecx+0x67f8447f]
  414979:	cmp    DWORD PTR [ecx],esi
  41497b:	jge    0x414972
  41497d:	mov    ecx,0x847b4e6c
  414982:	mov    ch,0xf4
  414984:	and    ah,BYTE PTR [ebx+0x5a7ef1ed]
  41498a:	mov    ds:0x2c73f704,al
  41498f:	les    ebx,FWORD PTR [ecx+0x3a85ca87]
  414995:	loope  0x414988
  414997:	cwde   
  414998:	push   eax
  414999:	imul   edx,DWORD PTR [esi-0x29],0xf7078d1b
  4149a0:	jae    0x414a20
  4149a2:	fcmove st,st(6)
  4149a4:	and    BYTE PTR [ecx+0xe2e82e5],dh
  4149aa:	enter  0x2078,0x89
  4149ae:	push   ebp
  4149af:	or     cl,ch
  4149b1:	jo     0x4149b3
  4149b3:	add    BYTE PTR [eax],al
  4149b5:	mov    edx,DWORD PTR [ebp+0x8]
  4149b8:	mov    ebx,DWORD PTR [ebp-0x8]
  4149bb:	xor    edx,eax
  4149bd:	xor    ebx,eax
  4149bf:	sub    edx,ebx
  4149c1:	sub    edx,esi
  4149c3:	xor    edx,eax
  4149c5:	mov    DWORD PTR [ebp+0x8],edx
  4149c8:	mov    edx,DWORD PTR [ebp+0x8]
  4149cb:	mov    ebx,DWORD PTR [ebp-0x58]
  4149ce:	add    edx,0x5708e2
  4149d4:	imul   edx,ebx
  4149d7:	mov    DWORD PTR [ebp-0x58],edx
  4149da:	mov    edx,DWORD PTR [ebp+0x8]
  4149dd:	mov    ebx,DWORD PTR [ebp-0x54]
  4149e0:	add    edx,0x64f89c
  4149e6:	or     edx,ebx
  4149e8:	mov    DWORD PTR [ebp-0x54],edx
  4149eb:	mov    edx,DWORD PTR [ebp+0x8]
  4149ee:	mov    ebx,DWORD PTR [ebp-0x50]
  4149f1:	add    edx,ecx
  4149f3:	xor    edx,ebx
  4149f5:	mov    DWORD PTR [ebp-0x50],edx
  4149f8:	mov    edx,DWORD PTR [ebp+0x8]
  4149fb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4149fe:	add    edx,edi
  414a00:	and    edx,ebx
  414a02:	mov    DWORD PTR [ebp-0x4c],edx
  414a05:	mov    edx,DWORD PTR [ebp+0x8]
  414a08:	mov    ebx,DWORD PTR [ebp-0x48]
  414a0b:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a12:	mov    DWORD PTR [ebp-0x48],edx
  414a15:	mov    edx,DWORD PTR [ebp+0x8]
  414a18:	mov    ebx,0xfa5e1528
  414a1d:	sub    ebx,edx
  414a1f:	add    ebx,DWORD PTR [ebp-0x44]
  414a22:	mov    DWORD PTR [ebp-0x44],ebx
  414a25:	mov    edx,DWORD PTR [ebp+0x8]
  414a28:	xor    edx,eax
  414a2a:	add    edx,esi
  414a2c:	jne    0x4149b5
  414a32:	mov    edx,DWORD PTR [ebp-0x14]
  414a35:	mov    DWORD PTR [ebp+0x8],edx
  414a38:	jmp    0x414aad
  414a3d:	mov    edx,DWORD PTR [ebp+0x8]
  414a40:	mov    ebx,DWORD PTR [ebp-0x8]
  414a43:	xor    edx,eax
  414a45:	xor    ebx,eax
  414a47:	sub    edx,ebx
  414a49:	sub    edx,esi
  414a4b:	xor    edx,eax
  414a4d:	mov    DWORD PTR [ebp+0x8],edx
  414a50:	mov    edx,DWORD PTR [ebp+0x8]
  414a53:	mov    ebx,DWORD PTR [ebp-0x58]
  414a56:	add    edx,0x5708e2
  414a5c:	imul   edx,ebx
  414a5f:	mov    DWORD PTR [ebp-0x58],edx
  414a62:	mov    edx,DWORD PTR [ebp+0x8]
  414a65:	mov    ebx,DWORD PTR [ebp-0x54]
  414a68:	add    edx,0x64f89c
  414a6e:	or     edx,ebx
  414a70:	mov    DWORD PTR [ebp-0x54],edx
  414a73:	mov    edx,DWORD PTR [ebp+0x8]
  414a76:	mov    ebx,DWORD PTR [ebp-0x50]
  414a79:	add    edx,ecx
  414a7b:	xor    edx,ebx
  414a7d:	mov    DWORD PTR [ebp-0x50],edx
  414a80:	mov    edx,DWORD PTR [ebp+0x8]
  414a83:	mov    ebx,DWORD PTR [ebp-0x4c]
  414a86:	add    edx,edi
  414a88:	and    edx,ebx
  414a8a:	mov    DWORD PTR [ebp-0x4c],edx
  414a8d:	mov    edx,DWORD PTR [ebp+0x8]
  414a90:	mov    ebx,DWORD PTR [ebp-0x48]
  414a93:	lea    edx,[ebx+edx*1+0x241fcdf]
  414a9a:	mov    DWORD PTR [ebp-0x48],edx
  414a9d:	mov    edx,DWORD PTR [ebp+0x8]
  414aa0:	mov    ebx,0xfa5e1528
  414aa5:	sub    ebx,edx
  414aa7:	add    ebx,DWORD PTR [ebp-0x44]
  414aaa:	mov    DWORD PTR [ebp-0x44],ebx
  414aad:	mov    edx,DWORD PTR [ebp+0x8]
  414ab0:	xor    edx,eax
  414ab2:	add    edx,esi
  414ab4:	jne    0x414a3d
  414aba:	mov    edx,DWORD PTR [ebp-0x8]
  414abd:	mov    ebx,DWORD PTR [ebp-0xc]
  414ac0:	xor    edx,eax
  414ac2:	lea    edx,[edx+ebx*1+0x3272f3]
  414ac9:	mov    DWORD PTR [ebp-0xc],edx
  414acc:	mov    edx,DWORD PTR [ebp-0x10]
  414acf:	xor    edx,eax
  414ad1:	add    edx,esi
  414ad3:	jne    0x41224b
  414ad9:	jmp    0x41b68b
  414ade:	mov    ecx,DWORD PTR [ebp-0x14]
  414ae1:	mov    DWORD PTR [ebp+0x8],ecx
  414ae4:	jmp    0x414b5d
  414ae9:	mov    ecx,DWORD PTR [ebp+0x8]
  414aec:	mov    edx,DWORD PTR [ebp-0x8]
  414aef:	xor    ecx,eax
  414af1:	xor    edx,eax
  414af3:	sub    ecx,edx
  414af5:	sub    ecx,esi
  414af7:	xor    ecx,eax
  414af9:	mov    DWORD PTR [ebp+0x8],ecx
  414afc:	mov    ecx,DWORD PTR [ebp+0x8]
  414aff:	mov    edx,DWORD PTR [ebp-0x58]
  414b02:	add    ecx,0x5708e2
  414b08:	imul   ecx,edx
  414b0b:	mov    DWORD PTR [ebp-0x58],ecx
  414b0e:	mov    ecx,DWORD PTR [ebp+0x8]
  414b11:	mov    edx,DWORD PTR [ebp-0x54]
  414b14:	add    ecx,0x64f89c
  414b1a:	or     ecx,edx
  414b1c:	mov    DWORD PTR [ebp-0x54],ecx
  414b1f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b22:	mov    edx,DWORD PTR [ebp-0x50]
  414b25:	add    ecx,0x242ebcd
  414b2b:	xor    ecx,edx
  414b2d:	mov    DWORD PTR [ebp-0x50],ecx
  414b30:	mov    ecx,DWORD PTR [ebp+0x8]
  414b33:	mov    edx,DWORD PTR [ebp-0x4c]
  414b36:	add    ecx,edi
  414b38:	and    ecx,edx
  414b3a:	mov    DWORD PTR [ebp-0x4c],ecx
  414b3d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b40:	mov    edx,DWORD PTR [ebp-0x48]
  414b43:	lea    ecx,[edx+ecx*1+0x241fcdf]
  414b4a:	mov    DWORD PTR [ebp-0x48],ecx
  414b4d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b50:	mov    edx,0xfa5e1528
  414b55:	sub    edx,ecx
  414b57:	add    edx,DWORD PTR [ebp-0x44]
  414b5a:	mov    DWORD PTR [ebp-0x44],edx
  414b5d:	mov    ecx,DWORD PTR [ebp+0x8]
  414b60:	xor    ecx,eax
  414b62:	add    ecx,esi
  414b64:	jne    0x414ae9
  414b6a:	jmp    0x41b697
  414b6f:	mov    ecx,DWORD PTR [ebp+0x8]
  414b72:	mov    edx,DWORD PTR [ebp-0x8]
  414b75:	xor    ecx,eax
  414b77:	jmp    0x416f00
  414b7c:	repnz mov esi,esp
  414b7f:	repz add BYTE PTR [esi+eiz*8-0x19361778],0xd3
  414b88:	jp     0x414b22
  414b8a:	jb     0x414ba1
  414b8c:	jmp    DWORD PTR [edi-0x7e]
  414b8f:	adc    DWORD PTR [edi],0x5c
  414b92:	add    DWORD PTR [ebx+0x1ce065e],0x25
  414b99:	stos   BYTE PTR es:[edi],al
  414b9a:	sub    BYTE PTR [edx*1-0x496c0ac2],cl
  414ba1:	jb     0x414b65
  414ba3:	je     0x414c11
  414ba5:	hlt    
  414ba6:	jge    0x414bc5
  414ba8:	(bad)  
  414ba9:	mov    eax,DWORD PTR ds:0x553c5cba
  414baf:	lods   eax,DWORD PTR ds:[esi]
  414bb0:	jmp    0x414bfd
  414bb2:	xor    eax,0xf58b5635
  414bb7:	push   es
  414bb8:	aam    0x3b
  414bba:	mov    dl,0xbb
  414bbc:	add    dh,BYTE PTR [edx+ebx*8+0x44]
  414bc0:	mov    bl,0xe6
  414bc2:	jmp    0xa79f49ec
  414bc7:	push   edx
  414bc8:	dec    edi
  414bc9:	(bad)  
  414bca:	pop    ecx
  414bcb:	les    esi,FWORD PTR [edx]
  414bcd:	pop    edi
  414bce:	out    0xb3,eax
  414bd0:	and    bl,dh
  414bd2:	pop    esp
  414bd3:	add    eax,ebp
  414bd5:	ficom  DWORD PTR [esi]
  414bd7:	lods   al,BYTE PTR ds:[esi]
  414bd8:	push   es
  414bd9:	pop    ds
  414bda:	adc    eax,0xde6f6ff0
  414bdf:	jle    0x414bdd
  414be1:	sbb    al,0x7
  414be3:	fwait
  414be4:	mov    cl,0xcc
  414be6:	int3   
  414be7:	sahf   
  414be8:	ss inc eax
  414bea:	mov    edi,0x18980083
  414bef:	push   0xffffffee
  414bf1:	out    dx,eax
  414bf2:	xchg   DWORD PTR ds:0xa37ace86,esi
  414bf8:	int    0x85
  414bfa:	mov    ds:0xe4fc9278,al
  414bff:	push   ebx
  414c00:	int3   
  414c01:	push   es
  414c02:	or     esi,DWORD PTR [ebx-0x2a]
  414c05:	sbb    eax,0x131eecfc
  414c0a:	ins    BYTE PTR es:[edi],dx
  414c0b:	pop    edx
  414c0c:	test   BYTE PTR [ebp-0x3d],dl
  414c0f:	add    ebp,esp
  414c11:	outs   dx,DWORD PTR ds:[esi]
  414c12:	or     dh,BYTE PTR [esi+0x4f]
  414c15:	or     DWORD PTR [ecx],edx
  414c17:	std    
  414c18:	js     0x414c52
  414c1a:	jno    0x414c56
  414c1c:	call   0xf43f1744
  414c21:	in     eax,0x90
  414c23:	mov    eax,ds:0x5001c29f
  414c28:	add    al,0x10
  414c2a:	sub    dh,dh
  414c2c:	outs   dx,DWORD PTR ds:[esi]
  414c2d:	xlat   BYTE PTR ds:[ebx]
  414c2e:	clc    
  414c2f:	and    eax,0xa3386546
  414c34:	dec    ecx
  414c35:	fwait
  414c36:	dec    ebp
  414c37:	retf   0x3c42
  414c3a:	sbb    ebx,DWORD PTR [edi]
  414c3c:	xchg   ebp,eax
  414c3d:	and    eax,0xadc76094
  414c42:	loope  0x414bd6
  414c44:	outs   dx,DWORD PTR ds:[esi]
  414c45:	mov    ebp,0xd25a6394
  414c4a:	pop    edx
  414c4b:	je     0x414cb9
  414c4d:	sub    BYTE PTR [edx],0xaf
  414c50:	sysenter 
  414c52:	xchg   esp,eax
  414c53:	push   ds
  414c54:	int    0x2d
  414c56:	leave  
  414c57:	pop    ebx
  414c58:	dec    edx
  414c59:	mov    bh,0x23
  414c5b:	adc    BYTE PTR [edx],dh
  414c5d:	sahf   
  414c5e:	xchg   edx,eax
  414c5f:	and    bh,ch
  414c61:	shr    BYTE PTR [edx],cl
  414c63:	pop    edi
  414c64:	sub    ecx,DWORD PTR [esi+0x59]
  414c67:	xlat   BYTE PTR ds:[ebx]
  414c68:	leave  
  414c69:	retf   0x4e21
  414c6c:	mov    BYTE PTR [eax+0x21],ah
  414c6f:	out    0xbc,eax
  414c71:	push   edx
  414c72:	push   0x14
  414c74:	push   esi
  414c75:	mov    eax,ds:0x94c9c9ee
  414c7a:	stos   BYTE PTR es:[edi],al
  414c7b:	sub    ebp,ecx
  414c7d:	call   0x39ee8059
  414c82:	inc    esp
  414c83:	cmp    al,0x9
  414c85:	mov    esi,0xe648e29
  414c8a:	mov    ebp,0xe46e0c52
  414c8f:	fwait
  414c90:	(bad)  
  414c91:	xlat   BYTE PTR ds:[ebx]
  414c92:	sbb    eax,0x4d07c82f
  414c97:	jb     0x414d0f
  414c99:	cli    
  414c9a:	leave  
  414c9b:	mov    cl,BYTE PTR [edi-0x7b5ae1c6]
  414ca1:	mov    fs,WORD PTR [esi-0x6bf9cdcb]
  414ca7:	repz loope 0x414c4f
  414caa:	dec    esp
  414cab:	in     eax,dx
  414cac:	mov    dl,0x70
  414cae:	ja     0x414d1f
  414cb0:	sub    BYTE PTR [eax-0x2a],dh
  414cb3:	mov    esi,0x38a05ac1
  414cb8:	imul   edx
  414cba:	xor    DWORD PTR [esi+0x1443505a],esi
  414cc0:	sub    ecx,DWORD PTR [edx+0x12d6c9f9]
  414cc6:	push   es
  414cc7:	outs   dx,BYTE PTR ds:[esi]
  414cc8:	aad    0x0
  414cca:	mov    ah,BYTE PTR [ebx+0x31]
  414ccd:	iret   
  414cce:	mov    DWORD PTR [esi],edi
  414cd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cd1:	repnz xchg edi,eax
  414cd3:	pushf  
  414cd4:	imul   edx,DWORD PTR [ebx-0x1e288e63],0x76
  414cdb:	rcr    DWORD PTR [edx-0x4df4a4d6],0x2d
  414ce2:	and    ebp,esp
  414ce4:	xchg   ebp,eax
  414ce5:	inc    esi
  414ce6:	jmp    0xb07866f2
  414ceb:	adc    eax,DWORD PTR [ebx]
  414ced:	mov    dh,0x7c
  414cef:	lahf   
  414cf0:	into   
  414cf1:	pop    esi
  414cf2:	xor    eax,0x9d458525
  414cf7:	(bad)  
  414cf8:	hlt    
  414cf9:	adc    esi,DWORD PTR [esi+0x47bead3c]
  414cff:	mov    ds:0xfb2c5698,eax
  414d04:	sub    al,0x8b
  414d07:	ja     0x414d22
  414d09:	mov    esp,0xa9f0c327
  414d0e:	add    al,0xcd
  414d10:	jnp    0x414caf
  414d12:	push   edx
  414d13:	xlat   BYTE PTR ds:[ebx]
  414d14:	inc    esi
  414d15:	cmp    DWORD PTR [edx+ebp*8-0x34925b85],0x8bb96941
  414d20:	adc    DWORD PTR [edi-0x36614b1c],edx
  414d26:	popa   
  414d27:	out    dx,eax
  414d28:	sub    al,0x52
  414d2a:	cmp    DWORD PTR [esi+0xd886bab],0x5
  414d31:	shl    BYTE PTR [esi-0x1b],1
  414d34:	jecxz  0x414cf8
  414d36:	xchg   DWORD PTR [esi+0x73fee3e2],eax
  414d3c:	(bad)  
  414d3d:	jmp    0x7fc8badb
  414d42:	cmp    al,0x87
  414d44:	mov    ch,0x9e
  414d46:	dec    ebx
  414d47:	mov    bl,0x54
  414d49:	sub    BYTE PTR [esp+edi*8-0x6b],dl
  414d4d:	cmp    eax,0x26faabd8
  414d52:	cld    
  414d53:	imul   ebx,DWORD PTR [edx],0x52a669fa
  414d59:	jbe    0x414ce2
  414d5b:	test   al,0x7b
  414d5d:	pop    esi
  414d5e:	mov    bl,0x40
  414d60:	scas   al,BYTE PTR es:[edi]
  414d61:	and    cl,BYTE PTR [edx+0x62dcae08]
  414d67:	push   ebx
  414d68:	mov    WORD PTR [edi+edx*2],gs
  414d6b:	or     al,0x34
  414d6d:	xor    edx,esp
  414d6f:	and    al,0xeb
  414d71:	bound  esi,QWORD PTR [edx+0x38e4a96f]
  414d77:	adc    DWORD PTR [eax+edx*1+0x28],ebp
  414d7b:	jnp    0x414dab
  414d7d:	jmp    0x414d88
  414d7f:	cli    
  414d80:	pop    ss
  414d81:	inc    eax
  414d82:	add    eax,0xa7d2fe54
  414d88:	sub    ebp,eax
  414d8a:	neg    DWORD PTR [edx-0x2d]
  414d8d:	enter  0x8064,0x9f
  414d91:	mov    ds:0x23afd5ff,al
  414d96:	and    eax,DWORD PTR [eax+esi*1-0x45]
  414d9a:	nop
  414d9b:	out    0x47,al
  414d9d:	cdq    
  414d9e:	mov    ?,WORD PTR [ebx+0x6cbd0f2]
  414da4:	pop    es
  414da5:	iret   
  414da6:	inc    eax
  414da7:	adc    edi,DWORD PTR [ecx]
  414da9:	mov    al,0x3a
  414dab:	dec    esi
  414dac:	lds    edi,FWORD PTR [edi-0x4]
  414daf:	test   al,0xb6
  414db1:	int    0x59
  414db3:	cli    
  414db4:	(bad)  
  414db5:	shl    DWORD PTR [edi+esi*1+0x61b50e9],cl
  414dbc:	fistp  WORD PTR [edx]
  414dbe:	jge    0x414d93
  414dc0:	outs   dx,BYTE PTR ds:[esi]
  414dc1:	lahf   
  414dc2:	fwait
  414dc3:	xchg   esp,eax
  414dc4:	sahf   
  414dc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414dc6:	cmp    DWORD PTR [ebp-0x1b],eax
  414dc9:	fisttp QWORD PTR [ecx]
  414dcb:	stos   DWORD PTR es:[edi],eax
  414dcc:	mov    bh,0xab
  414dce:	mov    bl,BYTE PTR [eax-0x7]
  414dd1:	pop    edx
  414dd2:	adc    BYTE PTR ds:0xcaad6838,dh
  414dd8:	push   es
  414dd9:	push   edi
  414dda:	sub    BYTE PTR [edi],ch
  414ddc:	mov    ebx,esi
  414dde:	fcmovbe st,st(2)
  414de0:	mov    BYTE PTR [ebp+0x76732722],bl
  414de6:	idiv   edi
  414de8:	sub    esp,DWORD PTR [ebp+0x32]
  414deb:	sbb    dl,BYTE PTR [edx+0x24573c05]
  414df1:	rcl    cl,1
  414df3:	div    DWORD PTR [ecx+0x303bdd9d]
  414df9:	adc    eax,0x35c0eb6a
  414dfe:	add    al,0x53
  414e00:	ins    DWORD PTR es:[edi],dx
  414e01:	sbb    eax,0xf107390b
  414e06:	pop    es
  414e07:	int    0x89
  414e09:	jno    0x414df0
  414e0b:	pushf  
  414e0c:	mov    al,0xec
  414e0e:	lods   eax,DWORD PTR ds:[esi]
  414e0f:	sub    eax,0x8e4430b9
  414e14:	jne    0x414e71
  414e16:	sub    eax,0x17506a30
  414e1b:	shl    BYTE PTR [ecx+0x42864ca],cl
  414e21:	cmp    edi,DWORD PTR [esp+eax*8]
  414e24:	mov    al,0xc6
  414e26:	jbe    0x414dd2
  414e28:	scas   al,BYTE PTR es:[edi]
  414e29:	dec    ebp
  414e2a:	push   eax
  414e2b:	add    al,0x8c
  414e2d:	xchg   ecx,eax
  414e2e:	pop    eax
  414e2f:	int3   
  414e30:	push   ss
  414e31:	xchg   edi,eax
  414e32:	xchg   BYTE PTR [edx+ebx*4-0x2f],dh
  414e36:	cmp    eax,0x59ac408f
  414e3b:	in     eax,dx
  414e3c:	fiadd  DWORD PTR [eax+0x6d]
  414e3f:	push   ss
  414e40:	cld    
  414e41:	icebp  
  414e42:	adc    BYTE PTR [edi+eax*8],dl
  414e45:	jb     0x414e24
  414e47:	retf   0xa6f1
  414e4a:	stos   BYTE PTR es:[edi],al
  414e4b:	add    al,0xf6
  414e4d:	ins    BYTE PTR es:[edi],dx
  414e4e:	out    0x88,eax
  414e50:	jbe    0x414e08
  414e52:	hlt    
  414e53:	jno    0x414dee
  414e55:	push   ebp
  414e56:	aad    0xb1
  414e58:	fcom   DWORD PTR [ebx-0x9ed46e0]
  414e5e:	ss clc 
  414e60:	mov    al,0xa0
  414e62:	mov    eax,0x8efde984
  414e67:	mov    cl,BYTE PTR [edi+0x3c0bc909]
  414e6d:	rol    DWORD PTR [ebx-0x3086ad85],0x97
  414e74:	inc    edx
  414e75:	push   0x778da76a
  414e7a:	test   al,0x48
  414e7c:	xlat   BYTE PTR ds:[ebx]
  414e7d:	jge    0x414e0a
  414e7f:	sti    
  414e80:	pop    ebp
  414e81:	pop    ss
  414e82:	pop    edx
  414e83:	pop    eax
  414e84:	xor    eax,0x1f41923e
  414e89:	and    al,0x86
  414e8b:	ds cmp ah,al
  414e8e:	pop    edx
  414e8f:	fdivr  st,st(7)
  414e91:	mov    ds:0x84baf1f5,eax
  414e96:	sub    eax,0x4bff12fd
  414e9b:	mov    ebp,0x18962bcc
  414ea0:	call   FWORD PTR [ebp+0x59433815]
  414ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ea7:	or     eax,DWORD PTR [ebx+0x4cc73b1a]
  414ead:	addr16 (bad) 
  414eb0:	jne    0x414f07
  414eb2:	cmc    
  414eb3:	push   DWORD PTR [eax-0x73]
  414eb6:	sub    edx,DWORD PTR [esi]
  414eb8:	out    dx,al
  414eb9:	nop
  414eba:	pop    ecx
  414ebb:	cmp    esp,0x9
  414ebe:	aaa    
  414ebf:	sbb    BYTE PTR [ecx+0x68],0x42
  414ec3:	push   cs
  414ec4:	or     al,0xa0
  414ec6:	sub    bl,0x8d
  414ec9:	adc    bh,cl
  414ecb:	push   ecx
  414ecc:	inc    esp
  414ecd:	in     al,dx
  414ece:	xlat   BYTE PTR ds:[ebx]
  414ecf:	ins    DWORD PTR es:[edi],dx
  414ed0:	sbb    DWORD PTR [ebx],edi
  414ed2:	test   eax,0xc7b52c35
  414ed7:	jnp    0x414f23
  414ed9:	mov    ds:0x16840594,eax
  414ede:	stc    
  414edf:	in     eax,0xb6
  414ee1:	int    0x43
  414ee3:	enter  0xbe0a,0xb0
  414ee7:	mov    ebx,0x8f089771
  414eec:	xchg   esi,eax
  414eed:	neg    DWORD PTR [esi]
  414eef:	loopne 0x414f25
  414ef1:	xchg   edi,eax
  414ef2:	mov    edx,0xe8f76ed7
  414ef8:	out    0x98,al
  414efa:	stos   DWORD PTR es:[edi],eax
  414efb:	stos   DWORD PTR es:[edi],eax
  414efc:	pop    es
  414efd:	add    ecx,DWORD PTR [ebp-0x6d91531e]
  414f03:	and    eax,DWORD PTR [ebx+esi*4]
  414f06:	sub    bl,dh
  414f08:	js     0x414f89
  414f0a:	nop
  414f0b:	retf   0x63a9
  414f0e:	inc    edi
  414f0f:	int3   
  414f10:	js     0x414f16
  414f12:	mov    edi,0x742cbf8e
  414f17:	push   ss
  414f18:	(bad)  
  414f19:	fild   DWORD PTR [ebp+0x22a47df2]
  414f1f:	push   edi
  414f20:	out    0x1c,eax
  414f22:	push   esi
  414f23:	dec    edx
  414f24:	test   esp,esp
  414f26:	aam    0xf8
  414f28:	fwait
  414f29:	and    eax,0xdd95d163
  414f2e:	cmp    al,0xe0
  414f30:	xchg   ebx,eax
  414f31:	int    0x27
  414f33:	push   ebp
  414f34:	add    ebx,DWORD PTR [eax-0x55544a37]
  414f3a:	sbb    DWORD PTR [edi],0x4e
  414f3d:	xchg   ebp,eax
  414f3e:	sahf   
  414f3f:	cmp    DWORD PTR [esi+0x7c205c4f],edx
  414f45:	scas   al,BYTE PTR es:[edi]
  414f46:	sub    bl,ch
  414f48:	inc    edi
  414f49:	or     DWORD PTR ds:[ebp+0x7d],0xffffffe3
  414f4e:	push   ebx
  414f4f:	dec    edx
  414f50:	xor    bl,dh
  414f52:	lahf   
  414f53:	sbb    al,bh
  414f55:	sub    dl,BYTE PTR [edi+eiz*4]
  414f58:	pop    esp
  414f59:	mov    ch,0xff
  414f5b:	jb     0x414f77
  414f5d:	jge    0x414f70
  414f5f:	int    0xd1
  414f61:	xchg   ecx,eax
  414f62:	stos   BYTE PTR es:[di],al
  414f64:	retf   0x4083
  414f67:	mov    al,0x17
  414f69:	(bad)  
  414f6a:	out    0x60,al
  414f6c:	mov    ecx,DWORD PTR [ecx]
  414f6e:	mov    al,ds:0x64a7c71
  414f73:	add    edx,ecx
  414f75:	dec    edi
  414f76:	cmp    BYTE PTR [esi+0x4afa3bb5],0xb5
  414f7d:	xlat   BYTE PTR ds:[ebx]
  414f7e:	lds    edx,FWORD PTR [ebx-0x57]
  414f81:	adc    edi,DWORD PTR [esi*2-0x1bc16b1]
  414f88:	ins    BYTE PTR es:[edi],dx
  414f89:	inc    eax
  414f8a:	push   ebx
  414f8b:	iret   
  414f8c:	lds    edi,FWORD PTR [ecx+0x5a]
  414f8f:	leave  
  414f90:	call   0xf0f424c4
  414f95:	outs   dx,DWORD PTR ds:[esi]
  414f96:	mov    esp,DWORD PTR [edi]
  414f98:	xchg   ebx,eax
  414f99:	(bad)  
  414f9a:	lods   al,BYTE PTR ds:[esi]
  414f9b:	add    al,0x2e
  414f9d:	push   esp
  414f9e:	sub    ecx,DWORD PTR [ebx-0x1dba19d7]
  414fa4:	xchg   esi,eax
  414fa5:	cmp    dh,ch
  414fa7:	jg     0x414fbc
  414fa9:	les    esi,FWORD PTR [edx]
  414fab:	push   es
  414fac:	jecxz  0x414f52
  414fae:	test   al,0x26
  414fb0:	add    DWORD PTR [eax],edx
  414fb2:	ja     0x414f78
  414fb4:	sbb    al,0xce
  414fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fb7:	retf   
  414fb8:	repz mov esp,0x7ff70344
  414fbe:	test   BYTE PTR [ecx],dl
  414fc0:	jbe    0x415025
  414fc2:	jle    0x415017
  414fc4:	ds xor DWORD PTR ss:[edi],0x1fff0c3a
  414fcc:	test   al,0x3b
  414fce:	push   ds
  414fcf:	dec    ebp
  414fd0:	loope  0x414f9a
  414fd2:	hlt    
  414fd3:	mov    BYTE PTR [edx],ah
  414fd5:	fnsave [ecx]
  414fd7:	leave  
  414fd8:	mov    cl,0xca
  414fda:	test   al,bh
  414fdc:	mov    cl,BYTE PTR [esi-0x46587482]
  414fe2:	(bad)  
  414fe3:	xchg   ebx,eax
  414fe4:	push   0x6b7d7e82
  414fe9:	data16 das 
  414feb:	scas   eax,DWORD PTR es:[edi]
  414fec:	or     BYTE PTR [esi+0x6c542987],ch
  414ff2:	icebp  
  414ff3:	popf   
  414ff4:	fstp   TBYTE PTR [ecx+0x33]
  414ff7:	dec    edx
  414ff8:	(bad)  
  414ff9:	sbb    eax,0xfb6dd18d
  414ffe:	jnp    0x415034
  415000:	pop    eax
  415001:	sub    DWORD PTR [ebx],esp
  415003:	sbb    BYTE PTR [edx+0x27e9e820],ah
  415009:	jne    0x415087
  41500b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41500c:	adc    dl,al
  41500e:	pusha  
  41500f:	scas   al,BYTE PTR es:[edi]
  415010:	popa   
  415011:	add    BYTE PTR [ebx+0x1fdba14c],dh
  415017:	ror    BYTE PTR [edi-0x1d],1
  41501a:	mov    bl,al
  41501c:	push   ecx
  41501d:	ins    DWORD PTR es:[edi],dx
  41501e:	jns    0x414fd5
  415020:	xor    BYTE PTR ds:0x96892ef0,0x75
  415027:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415028:	js     0x415035
  41502a:	mov    BYTE PTR [ecx],dh
  41502c:	pop    edx
  41502d:	je     0x41502d
  41502f:	or     DWORD PTR [ebx-0x5644ac0c],edx
  415035:	adc    DWORD PTR [esi],0xbd334306
  41503b:	fimul  WORD PTR [eax-0x67]
  41503e:	push   esi
  41503f:	jne    0x414fd9
  415041:	push   esp
  415042:	aad    0x13
  415044:	pop    es
  415045:	dec    esi
  415046:	hlt    
  415047:	ficom  DWORD PTR [ebx-0x7f]
  41504a:	mov    ecx,0x9f3fef81
  41504f:	push   ecx
  415050:	lahf   
  415051:	pop    esi
  415052:	inc    edi
  415053:	test   eax,0xe40afa09
  415058:	sub    al,0x51
  41505a:	mov    edx,0xdd1e998a
  41505f:	enter  0x312b,0x6d
  415063:	paddusw mm7,mm2
  415066:	pop    esi
  415067:	das    
  415068:	push   0x4
  41506a:	sbb    DWORD PTR [edx-0xdacb2c8],edx
  415070:	sub    BYTE PTR [ecx],ah
  415072:	(bad)  
  415073:	in     eax,dx
  415074:	mov    esi,0xde5d8e20
  415079:	sbb    eax,DWORD PTR [eax-0x70]
  41507c:	sub    al,0xa
  41507e:	jmp    0x415003
  415080:	jo     0x4150f6
  415082:	cmp    edx,DWORD PTR [eax-0x5181c5a]
  415088:	mov    bh,BYTE PTR [ecx]
  41508a:	mov    dl,0x1d
  41508c:	dec    ebx
  41508d:	dec    ebx
  41508f:	cmp    bl,BYTE PTR [esi]
  415091:	xchg   DWORD PTR [ecx],eax
  415093:	sub    eax,0xff7ee7cd
  415098:	sbb    al,0xa0
  41509a:	daa    
  41509b:	add    eax,0xc09bbfff
  4150a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4150a1:	mov    esp,0xe95e23f3
  4150a6:	outs   dx,DWORD PTR ds:[esi]
  4150a7:	cmp    BYTE PTR [esi-0x566155a7],0x94
  4150ae:	jne    0x41510a
  4150b0:	pop    edx
  4150b1:	jbe    0x4150f7
  4150b3:	test   eax,0x215d6772
  4150b8:	or     dh,0xad
  4150bb:	add    esp,edx
  4150bd:	popa   
  4150be:	xlat   BYTE PTR ds:[ebx]
  4150bf:	jmp    0x6071817b
  4150c4:	mov    edx,0x57eeac77
  4150c9:	outs   dx,BYTE PTR ds:[esi]
  4150ca:	jecxz  0x415127
  4150cc:	add    eax,esp
  4150ce:	and    ebx,esi
  4150d0:	mov    al,BYTE PTR fs:[ebp+0x62]
  4150d4:	loope  0x415101
  4150d6:	fidiv  DWORD PTR [esi]
  4150d8:	arpl   WORD PTR [edx+edx*1-0x3c],dx
  4150dc:	cmp    cl,ah
  4150de:	sub    edx,0xffffffce
  4150e1:	pop    eax
  4150e2:	mov    edx,0xed3ab44a
  4150e7:	hlt    
  4150e8:	and    eax,0x777ab50f
  4150ed:	test   BYTE PTR [eax+0x21],dl
  4150f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150f1:	cwde   
  4150f2:	xor    ah,BYTE PTR [ebp-0x52409612]
  4150f8:	pop    esi
  4150f9:	sbb    eax,0x2dc46d7f
  4150fe:	dec    eax
  4150ff:	inc    ebx
  415100:	fiadd  WORD PTR [esi+0x67]
  415103:	fidiv  WORD PTR [esi]
  415105:	mov    eax,DWORD PTR [ebp+ebp*4-0x7f]
  415109:	push   ebx
  41510a:	and    edi,DWORD PTR [edx+0x63]
  41510d:	pop    edx
  41510e:	dec    ecx
  41510f:	cmp    BYTE PTR [edi+eiz*1],bh
  415112:	jp     0x4150b8
  415114:	out    dx,al
  415115:	pop    ds
  415116:	lods   al,BYTE PTR ds:[esi]
  415117:	dec    ecx
  415118:	test   DWORD PTR [edx-0x50],edi
  41511b:	jo     0x41516f
  41511d:	popa   
  41511e:	outs   dx,BYTE PTR ds:[esi]
  41511f:	xchg   esp,eax
  415120:	fadd   DWORD PTR [eax+ecx*4]
  415123:	adc    bl,dh
  415125:	sti    
  415126:	add    eax,esp
  415128:	outs   dx,BYTE PTR ds:[esi]
  415129:	mov    cs,edx
  41512b:	xchg   edx,eax
  41512c:	sbb    DWORD PTR [edx],0xffffff89
  41512f:	and    esi,DWORD PTR [eax]
  415131:	pop    edx
  415132:	push   edx
  415133:	push   cs
  415134:	sbb    ch,BYTE PTR ds:0x2648d56b
  41513a:	scas   al,BYTE PTR es:[edi]
  41513b:	and    DWORD PTR [edi+edi*8-0x1b438100],edx
  415142:	push   edx
  415143:	jo     0x4150f5
  415145:	mov    bl,0xd0
  415147:	jno    0x415190
  415149:	mov    bl,0x9e
  41514b:	adc    DWORD PTR [edi+0x18],edx
  41514e:	and    bl,BYTE PTR [edi]
  415150:	xchg   DWORD PTR [eax],ecx
  415152:	fsubr  QWORD PTR [ebx-0x77aae573]
  415158:	sbb    eax,0x89b4f0ad
  41515d:	sub    eax,0xe6170cb0
  415162:	leave  
  415163:	xor    BYTE PTR [esi+0x20161975],0x41
  41516a:	add    ebx,DWORD PTR ds:0xa391afa3
  415170:	xchg   edi,eax
  415171:	in     eax,dx
  415172:	imul   edi,DWORD PTR [edx],0x41
  415175:	jecxz  0x415149
  415177:	iret   
  415178:	push   ss
  415179:	jl     0x4151c8
  41517b:	sbb    esi,edi
  41517d:	add    bh,BYTE PTR [edx+0x66]
  415180:	das    
  415181:	out    dx,al
  415182:	ds sub eax,0xc7a9105f
  415188:	jmp    0x4151db
  41518a:	in     al,0x75
  41518c:	ror    DWORD PTR [eax],0x27
  41518f:	scas   al,BYTE PTR es:[edi]
  415190:	sub    DWORD PTR [edi+0x2fdb697],edx
  415196:	(bad)  
  415197:	ds sbb eax,0xab088365
  41519d:	or     eax,0x45ede3e2
  4151a2:	mov    ecx,0xa7887a7f
  4151a7:	adc    dh,dl
  4151a9:	inc    ebp
  4151aa:	add    BYTE PTR [edi],cl
  4151ac:	pushf  
  4151ad:	sbb    al,0x1c
  4151af:	dec    ecx
  4151b0:	test   DWORD PTR [eax+0x5aed6205],ecx
  4151b6:	inc    ebx
  4151b7:	pop    ds
  4151b8:	mov    edi,0xe2d2f0a9
  4151bd:	popf   
  4151be:	(bad)
  4151c2:	int3   
  4151c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151c4:	mov    al,0xdc
  4151c6:	and    eax,0x801e60a2
  4151cb:	inc    ecx
  4151cc:	in     al,dx
  4151cd:	dec    edi
  4151ce:	add    eax,0x28d58003
  4151d3:	call   0x92fac8c1
  4151d8:	or     dh,BYTE PTR [edx]
  4151da:	pop    esi
  4151db:	sahf   
  4151dc:	jnp    0x4151fb
  4151de:	add    al,0xdf
  4151e0:	int3   
  4151e1:	or     DWORD PTR [ecx],0xa6c3c3c2
  4151e7:	jle    0x4151d0
  4151e9:	add    esp,eax
  4151eb:	adc    eax,0xf88d5add
  4151f0:	aaa    
  4151f1:	sub    edx,DWORD PTR [esi+0x578ac48d]
  4151f7:	mov    DWORD PTR [esi+0x3874c918],esi
  4151fd:	jno    0x415192
  4151ff:	pop    es
  415200:	jmp    0x9a575b18
  415205:	push   0xc
  415207:	sub    BYTE PTR [ebx-0x1be71ac3],0x31
  41520e:	jp     0x415222
  415210:	mov    cs,WORD PTR [esi-0x2b]
  415213:	xchg   ebx,eax
  415214:	mov    edx,0x7c88d72a
  415219:	jno    0x415210
  41521b:	adc    esp,DWORD PTR [esi]
  41521d:	xchg   esi,eax
  41521e:	mov    ebx,0xa0f2218
  415223:	pop    ebx
  415224:	retf   
  415225:	adc    eax,0xc567790f
  41522a:	iret   
  41522b:	xor    al,dl
  41522d:	icebp  
  41522e:	lea    eax,[edi]
  415230:	add    eax,0xd1e09b29
  415235:	jmp    0xe8579cbb
  41523a:	inc    ebx
  41523b:	call   0x4438fe15
  415240:	loope  0x4151ed
  415242:	popf   
  415243:	dec    edx
  415244:	ror    BYTE PTR [edx],0x2b
  415247:	and    BYTE PTR [ecx+0x18eff062],0xf
  41524e:	mov    esi,DWORD PTR [ebx+0x2]
  415251:	cs ret 
  415253:	xor    esp,ebp
  415255:	xor    esi,esi
  415257:	dec    edx
  415258:	mov    ss,ebp
  41525a:	mov    al,ds:0xbc7d4f88
  41525f:	adc    BYTE PTR [eax-0x796a57c],bl
  415265:	test   DWORD PTR ds:0x83b5108e,0x6eb86cef
  41526f:	(bad)  
  415270:	cwde   
  415271:	mov    ss,ecx
  415273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415274:	pop    ecx
  415275:	es scas al,BYTE PTR es:[edi]
  415277:	push   0xffffffc6
  415279:	dec    edx
  41527a:	ins    DWORD PTR es:[edi],dx
  41527b:	dec    ebx
  41527c:	push   ebp
  41527d:	(bad)  
  41527e:	mov    esp,0x87f8d07
  415283:	hlt    
  415284:	sbb    al,0x7f
  415286:	inc    ecx
  415287:	adc    eax,0xae43c52
  41528c:	in     al,dx
  41528d:	pop    ds
  41528e:	push   cs
  41528f:	jecxz  0x4152c5
  415291:	dec    BYTE PTR [esi]
  415293:	enter  0x3d81,0xa3
  415297:	or     al,0x7b
  415299:	push   ss
  41529a:	stc    
  41529b:	outs   dx,BYTE PTR ds:[esi]
  41529c:	pop    ebp
  41529d:	push   ebx
  41529e:	mov    edx,esi
  4152a0:	add    BYTE PTR [bx],dh
  4152a3:	xor    eax,0xc5e177f8
  4152a8:	js     0x41523f
  4152aa:	or     eax,0x83d4ff53
  4152af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152b0:	push   0xcb68d55b
  4152b5:	mov    ?,ebp
  4152b7:	popa   
  4152b8:	push   ebx
  4152b9:	shl    BYTE PTR [ebx-0x6b772a1c],0x40
  4152c0:	fst    DWORD PTR [ecx]
  4152c2:	nop
  4152c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152c4:	pop    ss
  4152c5:	rol    DWORD PTR [esp+ecx*4-0x72],0xdb
  4152ca:	jno    0x4152a6
  4152cc:	(bad)  [esi]
  4152ce:	mov    ?,WORD PTR [ecx-0x2cf6a301]
  4152d4:	xor    al,0x7d
  4152d6:	jmp    0x8505:0xc131aa9d
  4152dd:	jae    0x4152d3
  4152df:	add    eax,0x8bb789a4
  4152e4:	pop    eax
  4152e5:	cwde   
  4152e6:	sbb    bl,BYTE PTR [ebp-0x430eed5e]
  4152ec:	adc    al,0x88
  4152ee:	mov    edx,0xd3bb0330
  4152f3:	add    al,BYTE PTR [esi+0x1f]
  4152f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152f7:	cmp    ah,al
  4152f9:	xchg   ebx,eax
  4152fa:	xchg   ecx,eax
  4152fb:	in     al,0x27
  4152fd:	(bad)  
  4152fe:	adc    eax,DWORD PTR [edi]
  415300:	jmp    0x3f06:0x640fa0e3
  415307:	cmp    eax,0xae075118
  41530c:	sbb    al,0xa2
  41530e:	nop
  41530f:	xor    BYTE PTR [edx-0x41],0x77
  415313:	loop   0x415334
  415315:	xchg   ebp,eax
  415316:	inc    eax
  415317:	repnz dec ebx
  415319:	pushf  
  41531a:	inc    esp
  41531b:	test   DWORD PTR [edi+ebp*1+0x41f51a03],edx
  415322:	pop    eax
  415323:	stc    
  415324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415325:	fnsetpm(287 only) 
  415327:	(bad)  
  415328:	scas   al,BYTE PTR es:[edi]
  415329:	add    ch,BYTE PTR [esi-0x62e71697]
  41532f:	test   BYTE PTR [esi-0x13],cl
  415332:	inc    esi
  415333:	mov    bl,0x2e
  415335:	in     al,0x76
  415337:	xchg   DWORD PTR [ebx+edx*2],esp
  41533a:	fs mov ah,0xaa
  41533d:	fneni(8087 only) 
  41533f:	xor    bh,ah
  415341:	jo     0x4152ff
  415343:	mov    esp,0x78e31a63
  415348:	outs   dx,BYTE PTR ds:[esi]
  415349:	(bad)  
  41534a:	jge    0x415322
  41534c:	xor    DWORD PTR [ebx-0x2a],ecx
  41534f:	cmp    DWORD PTR [edi],ebx
  415351:	adc    BYTE PTR [esi-0x9b2f593],al
  415357:	cdq    
  415358:	xor    dl,BYTE PTR [esp+eax*1]
  41535b:	jecxz  0x4152f0
  41535d:	mov    cl,0x34
  41535f:	cmp    ebx,esp
  415361:	mov    ah,0x4c
  415363:	fwait
  415364:	and    dh,BYTE PTR [esi+edi*8+0x47034564]
  41536b:	in     al,dx
  41536c:	lea    ebx,[ecx-0x4da1911b]
  415372:	fldenv [ebp+0x15]
  415375:	or     DWORD PTR [ebx+esi*8-0x2d],ecx
  415379:	pop    esi
  41537a:	popf   
  41537b:	or     al,0x9e
  41537d:	jno    0x41538e
  41537f:	or     BYTE PTR [ebx-0x4b],bl
  415382:	mov    edx,0x2586846f
  415387:	jae    0x415360
  415389:	popa   
  41538a:	cmp    DWORD PTR [edx+0x53],edi
  41538d:	call   0x58c2e3c3
  415392:	int    0xba
  415394:	push   cs
  415395:	int    0x57
  415397:	loope  0x415344
  415399:	fwait
  41539a:	test   DWORD PTR [edi+0x72],eax
  41539d:	arpl   sp,si
  41539f:	jo     0x415361
  4153a1:	(bad)  
  4153a2:	adc    al,0x4d
  4153a4:	shr    DWORD PTR [eax+0x72ef0d05],1
  4153aa:	out    0x18,al
  4153ac:	pusha  
  4153ad:	adc    al,0x8c
  4153af:	xor    eax,0x61950b27
  4153b4:	jae    0x4153f4
  4153b6:	pushf  
  4153b7:	std    
  4153b8:	mov    ebp,0x507053ef
  4153bd:	dec    esi
  4153be:	addr16 out 0xf3,al
  4153c1:	dec    eax
  4153c2:	aam    0x2f
  4153c4:	outs   dx,DWORD PTR ds:[esi]
  4153c5:	mov    ds:0x61a9387c,eax
  4153ca:	push   ebp
  4153cb:	jmp    0xd87d:0xc1fc477a
  4153d2:	mov    DWORD PTR [eax-0x1b],eax
  4153d5:	imul   edi,DWORD PTR [edi+0x60a77608],0x2b
  4153dc:	push   cs
  4153dd:	dec    ebp
  4153de:	mov    esp,0x20037d89
  4153e3:	jmp    0x41539c
  4153e5:	add    ch,BYTE PTR [ebx-0x503c1af1]
  4153eb:	lods   al,BYTE PTR ds:[esi]
  4153ec:	push   ebx
  4153ed:	pushf  
  4153ee:	ds repnz pop es
  4153f1:	mov    eax,ds:0x8360b006
  4153f6:	fbstp  TBYTE PTR [ecx-0x4a]
  4153f9:	gs repz addr16 inc ebx
  4153fd:	outs   dx,BYTE PTR ds:[esi]
  4153fe:	int3   
  4153ff:	nop
  415400:	mov    esi,0x8abb75fc
  415405:	jno    0x4153ce
  415407:	jp     0x415458
  415409:	out    0x3a,eax
  41540b:	mov    ds:0x70d2bc72,eax
  415410:	ins    BYTE PTR es:[edi],dx
  415411:	jle    0x41543e
  415413:	xchg   edx,eax
  415414:	push   esi
  415415:	pop    ecx
  415416:	pop    eax
  415417:	mov    ebx,0x1a9a9c2f
  41541c:	dec    eax
  41541d:	leave  
  41541e:	mov    bh,0xd8
  415420:	mov    bl,0x18
  415422:	fist   WORD PTR [edx]
  415424:	aad    0xcc
  415426:	mov    ecx,0x58d1de3f
  41542b:	fstp   TBYTE PTR [ecx+0x778f0684]
  415431:	add    al,0x73
  415433:	out    dx,al
  415434:	pop    esi
  415435:	cmp    ebx,DWORD PTR [ecx-0x6fe0cb15]
  41543b:	test   DWORD PTR [ebp-0x77],edi
  41543e:	pop    ds
  41543f:	mov    bl,0xd1
  415441:	jl     0x415489
  415443:	and    ebp,DWORD PTR [esi+0xe1ab216]
  415449:	(bad)  
  41544a:	inc    edi
  41544c:	sbb    DWORD PTR [esi+0x62],ecx
  41544f:	push   esp
  415450:	lds    esi,FWORD PTR [esi+0x701639d1]
  415456:	ja     0x4153fc
  415458:	jno    0x415430
  41545a:	xor    DWORD PTR [eax-0x4a],edx
  41545d:	fistp  DWORD PTR [edx+0x40ab9602]
  415463:	jbe    0x4154e0
  415465:	fild   WORD PTR [ecx+0x5bd6413b]
  41546b:	fcomi  st,st(7)
  41546d:	dec    ecx
  41546e:	xchg   esp,eax
  41546f:	bound  eax,QWORD PTR [ebp-0xe]
  415472:	inc    edx
  415473:	sub    esp,0x97cbcc17
  415479:	mov    al,0x38
  41547b:	adc    bh,ah
  41547d:	sbb    al,0xaa
  41547f:	sbb    al,0xa2
  415481:	adc    al,0xe8
  415483:	lods   eax,DWORD PTR ds:[esi]
  415484:	adc    ch,bl
  415486:	idiv   bh
  415488:	push   ebp
  415489:	inc    ecx
  41548a:	xchg   edx,eax
  41548b:	mov    ch,0xae
  41548d:	xor    al,0xdb
  41548f:	jnp    0x415451
  415491:	aad    0x6c
  415493:	cmc    
  415494:	jae    0x415494
  415496:	add    al,0x40
  415498:	mov    dl,0x34
  41549a:	pushf  
  41549b:	(bad)  ss:[eax-0x5c]
  41549f:	push   cs
  4154a0:	add    DWORD PTR [esi+0x27],esi
  4154a3:	lods   al,BYTE PTR ds:[esi]
  4154a4:	sbb    eax,DWORD PTR [ebx]
  4154a6:	adc    esp,ebx
  4154a8:	mov    fs,WORD PTR [edi+0x75]
  4154ab:	cmp    al,0x7b
  4154ad:	mov    ds:0xa471d30e,eax
  4154b2:	cmp    eax,0x661c4731
  4154b7:	aaa    
  4154b8:	xor    cl,ah
  4154ba:	loop   0x415506
  4154bc:	outs   dx,BYTE PTR ds:[esi]
  4154bd:	pop    esi
  4154be:	lahf   
  4154bf:	rol    ebp,0x55
  4154c2:	xor    eax,0x20c60ac4
  4154c7:	or     eax,0xfb9307c8
  4154cc:	clc    
  4154cd:	js     0x41554d
  4154cf:	sub    ebx,ecx
  4154d1:	in     al,0x56
  4154d3:	pushf  
  4154d4:	mov    eax,ds:0xfb38aafa
  4154d9:	sub    bh,dl
  4154db:	mov    eax,0xe7ec68b6
  4154e0:	dec    esp
  4154e1:	mov    al,ds:0xf40f1ec3
  4154e6:	mov    edx,0xe3d8cda9
  4154eb:	pop    ecx
  4154ec:	ja     0x415562
  4154ee:	dec    ecx
  4154ef:	cdq    
  4154f0:	dec    ebp
  4154f1:	xchg   esi,eax
  4154f2:	and    al,0xd9
  4154f4:	mov    BYTE PTR [ecx],dh
  4154f6:	pop    edi
  4154f7:	lds    ecx,FWORD PTR [ecx]
  4154f9:	xor    ah,ah
  4154fb:	jb     0x41548a
  4154fd:	(bad)  
  4154fe:	cmp    eax,esp
  415500:	dec    ebx
  415501:	pop    es
  415502:	push   edx
  415503:	mov    bh,0x32
  415505:	mov    ebx,0x1586e472
  41550a:	cmp    al,0x50
  41550c:	adc    bl,BYTE PTR [eax-0x235744a1]
  415512:	inc    eax
  415513:	adc    DWORD PTR [ebx],edi
  415515:	xchg   edi,eax
  415516:	adc    eax,0x8a08e5b
  41551b:	mov    dl,0x31
  41551d:	pop    eax
  41551e:	ss out dx,al
  415520:	outs   dx,DWORD PTR ds:[esi]
  415521:	fisubr DWORD PTR [edi-0x77]
  415524:	xchg   ebp,eax
  415525:	jo     0x4154b5
  415527:	cld    
  415528:	cmp    DWORD PTR [ebp+0x58],esi
  41552b:	adc    DWORD PTR [ebp-0x24],edx
  41552e:	shl    DWORD PTR [edi+edx*2-0x5155390a],0xa6
  415536:	dec    esp
  415537:	cmp    eax,DWORD PTR [eax]
  415539:	xor    eax,0xb364d50b
  41553e:	std    
  41553f:	cmp    eax,DWORD PTR [esi]
  415541:	xor    BYTE PTR [ebx-0x5a57df72],0x15
  415548:	push   cs
  415549:	enter  0xa695,0x76
  41554d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41554e:	sbb    al,0x61
  415550:	mov    ebp,0x76a852f4
  415555:	push   edx
  415556:	mov    ah,0x50
  415558:	fwait
  415559:	es sub eax,0xafd62bd6
  41555f:	scas   eax,DWORD PTR es:[edi]
  415560:	dec    edi
  415561:	arpl   WORD PTR [ebp+0x7298035b],bp
  415567:	ss cmp dl,ah
  41556a:	loop   0x4155b6
  41556c:	and    eax,0xa141ccd9
  415571:	ja     0x4155a1
  415573:	pop    es
  415574:	jg     0x415521
  415576:	(bad)  
  415577:	jecxz  0x415553
  415579:	cdq    
  41557a:	sbb    BYTE PTR [edx],ah
  41557c:	or     ecx,edx
  41557e:	outs   dx,BYTE PTR ds:[esi]
  41557f:	loop   0x415573
  415581:	jb     0x4155f8
  415583:	aas    
  415584:	and    esp,ebp
  415586:	jmp    0x44643f2f
  41558b:	lods   eax,DWORD PTR ds:[esi]
  41558c:	or     BYTE PTR [esi-0x39356ad1],ah
  415592:	dec    esp
  415593:	jle    0x415584
  415595:	imul   esi,esi,0x62
  415598:	mov    cl,0xac
  41559a:	mov    ecx,0x554df951
  41559f:	dec    eax
  4155a0:	inc    esi
  4155a1:	push   ebx
  4155a2:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155a4:	addr16 cmp eax,0xd12ec54e
  4155aa:	fs sahf 
  4155ac:	mov    bh,0x9d
  4155ae:	lds    esp,FWORD PTR [ebx+ecx*2]
  4155b1:	std    
  4155b2:	adc    BYTE PTR [edi],al
  4155b4:	daa    
  4155b5:	or     bh,al
  4155b7:	in     eax,dx
  4155b8:	inc    ebp
  4155b9:	test   al,0x24
  4155bb:	adc    al,0xdc
  4155bd:	or     edx,edi
  4155bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155c0:	jle    0x415573
  4155c2:	sbb    edx,DWORD PTR [ebx-0x6a]
  4155c5:	mov    bl,0xae
  4155c7:	mov    bl,0x1b
  4155c9:	inc    eax
  4155ca:	ss pop ds
  4155cc:	lds    ebx,FWORD PTR [esi]
  4155ce:	or     BYTE PTR [ebx-0x7b2fe36f],0xd8
  4155d5:	or     eax,0x2a67429b
  4155da:	pop    ecx
  4155db:	pop    esi
  4155dc:	into   
  4155dd:	push   ebx
  4155de:	jl     0x415564
  4155e0:	dec    edx
  4155e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155e2:	sbb    al,0xc3
  4155e4:	into   
  4155e5:	fadd   st(2),st
  4155e7:	jne    0x41557f
  4155e9:	add    BYTE PTR [ecx+0x31],dl
  4155ec:	and    ah,BYTE PTR [esi+0x4c21560f]
  4155f2:	jb     0x41565a
  4155f4:	dec    ebx
  4155f5:	xchg   eax,edx
  4155f7:	xchg   ecx,eax
  4155f8:	mov    eax,ds:0xb7f771fd
  4155fd:	int    0x1f
  4155ff:	pop    esp
  415600:	(bad)  
  415601:	daa    
  415602:	inc    BYTE PTR [ecx-0x1]
  415605:	add    BYTE PTR [ecx],ah
  415607:	mov    cl,BYTE PTR [esi+0x563278ce]
  41560d:	stc    
  41560e:	dec    ecx
  41560f:	xchg   DWORD PTR [edx],ecx
  415611:	or     esi,DWORD PTR [ebx-0x5e5ae25d]
  415617:	adc    DWORD PTR [ecx],edx
  415619:	test   DWORD PTR [ecx],esp
  41561b:	mov    eax,ds:0xde62da7b
  415620:	sub    ebp,DWORD PTR [eax]
  415622:	je     0x415692
  415624:	push   eax
  415625:	push   ecx
  415626:	xor    DWORD PTR [edx+0x75e37842],edi
  41562c:	mov    ebx,0xd48aa253
  415631:	mov    esi,ebx
  415633:	inc    ecx
  415634:	xchg   ebx,eax
  415635:	clc    
  415636:	popa   
  415637:	jmp    0x5a73a692
  41563c:	or     eax,0x5c5279e2
  415641:	xor    DWORD PTR [eax+0x42],ebx
  415644:	ret    
  415645:	inc    ebp
  415646:	xchg   ebx,eax
  415647:	test   BYTE PTR [ebx+0x22166113],cl
  41564d:	adc    al,0x15
  41564f:	fidivr DWORD PTR [esi-0x7b]
  415652:	daa    
  415653:	jno    0x4155ec
  415655:	rcl    BYTE PTR [edx-0x39601875],1
  41565b:	cli    
  41565c:	fucomi st,st(7)
  41565e:	faddp  st(5),st
  415660:	aaa    
  415661:	mov    WORD PTR [edi+0x1eb4b6c3],es
  415667:	lea    ecx,[ebp+0x75]
  41566a:	pop    ebx
  41566b:	pop    edx
  41566c:	jmp    0x596f7eee
  415671:	outs   dx,DWORD PTR ds:[esi]
  415672:	mov    dl,bh
  415674:	or     ebp,0xffffffec
  415677:	push   0x51050b16
  41567c:	jns    0x415695
  41567e:	xlat   BYTE PTR ds:[ebx]
  41567f:	mov    ds:0x8c511e6d,al
  415684:	cmp    ebp,ebx
  415686:	lahf   
  415687:	repz jo 0x415697
  41568a:	(bad)  
  41568b:	mov    DWORD PTR [ecx],edi
  41568d:	aaa    
  41568e:	into   
  41568f:	push   edi
  415690:	aad    0xd3
  415692:	pop    es
  415693:	jne    0x4156fb
  415695:	pop    ecx
  415696:	cmc    
  415697:	and    DWORD PTR [eax+0x715e1af6],esi
  41569d:	mov    edx,0x70e45e4a
  4156a2:	(bad)  
  4156a3:	mov    ds:0x71bc60c1,eax
  4156a8:	xchg   edx,eax
  4156a9:	out    dx,eax
  4156aa:	sub    eax,0xb7f4015b
  4156af:	xor    esi,esi
  4156b1:	bound  esi,QWORD PTR [ecx+ecx*8]
  4156b4:	inc    edi
  4156b5:	dec    edi
  4156b6:	adc    esi,DWORD PTR [ebx]
  4156b8:	lds    ecx,FWORD PTR [edx+0x3819a912]
  4156be:	(bad)  
  4156bf:	mov    dh,0xe2
  4156c1:	jge    0x415658
  4156c3:	mov    eax,0x983a30fd
  4156c8:	xchg   ebx,eax
  4156c9:	test   al,dl
  4156cb:	mov    al,0x13
  4156cd:	mov    ch,0x36
  4156cf:	call   0xcf82a76
  4156d4:	or     al,0xa9
  4156d6:	pop    ebp
  4156d7:	pop    esp
  4156d8:	push   cs
  4156d9:	push   cs
  4156da:	mov    al,ds:0x911fc49f
  4156df:	lods   eax,DWORD PTR ds:[esi]
  4156e0:	call   0x39fc:0x3096b692
  4156e7:	out    dx,eax
  4156e8:	mov    ah,0xae
  4156ea:	or     esp,DWORD PTR [ecx+0x6bd6d1a9]
  4156f0:	mov    ds:0xbe94cd13,al
  4156f5:	sub    al,0xf6
  4156f7:	jae    0x41574f
  4156f9:	repz aas 
  4156fb:	and    eax,DWORD PTR gs:[edx+0x179934b7]
  415702:	leave  
  415703:	int    0xe8
  415705:	aaa    
  415706:	and    ch,bl
  415708:	mov    ebp,0xaccbb149
  41570d:	xchg   esi,eax
  41570e:	dec    ebx
  41570f:	xchg   edx,eax
  415710:	adc    dl,BYTE PTR [esi]
  415712:	mov    ebp,0xeab774bf
  415717:	push   esp
  415718:	mov    ds:0x89fc6b24,al
  41571d:	retf   
  41571e:	mov    ebx,0x6d87e61d
  415723:	mov    ebp,DWORD PTR [ebp-0xd]
  415726:	xchg   edi,eax
  415727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415728:	in     eax,0x1b
  41572a:	dec    edi
  41572b:	sahf   
  41572c:	push   esi
  41572d:	(bad)  
  41572e:	(bad)  
  41572f:	cs jnp 0x4157ab
  415732:	retf   0x782c
  415735:	adc    eax,DWORD PTR [edi+0x4b9f54e0]
  41573b:	add    DWORD PTR [esi+0x436984aa],eax
  415741:	push   0x6c398324
  415746:	sahf   
  415747:	mov    ds:0xc8316393,al
  41574c:	or     DWORD PTR [edx+0x6a5f6a91],ecx
  415752:	cli    
  415753:	mov    al,0xea
  415755:	sbb    eax,0x22a2efc0
  41575a:	sub    cl,BYTE PTR [ebp-0x15]
  41575d:	test   BYTE PTR ds:[esi+0x61],cl
  415761:	retf   0xc8f4
  415764:	lds    edx,FWORD PTR [edi-0x5e]
  415767:	mov    esi,0x81a5794e
  41576c:	pop    eax
  41576d:	(bad)  
  41576e:	out    dx,al
  41576f:	dec    ecx
  415770:	mov    bl,0xd4
  415772:	xchg   ecx,eax
  415773:	jno    0x415796
  415775:	sbb    esi,DWORD PTR [ecx+0x4c02da44]
  41577b:	xchg   esp,eax
  41577c:	xor    al,0xf3
  41577e:	scas   al,BYTE PTR es:[edi]
  41577f:	aas    
  415780:	jb     0x41579a
  415782:	or     ah,BYTE PTR [ebx]
  415784:	sbb    al,0x4b
  415786:	add    eax,0xaf3c0b42
  41578b:	jae    0x4157ad
  41578d:	push   esp
  41578e:	xchg   BYTE PTR [ebx+ebx*4+0x48],ch
  415792:	dec    eax
  415793:	in     al,0x4a
  415795:	out    dx,eax
  415796:	mov    ebp,0xf2f1a95
  41579b:	xor    ebx,DWORD PTR [esi-0x72f540c]
  4157a1:	(bad)
  4157a4:	inc    esp
  4157a5:	cmp    eax,0xdff0f9ef
  4157aa:	inc    ebp
  4157ab:	sbb    ebp,esp
  4157ad:	call   0xa9da:0x61aafca3
  4157b4:	and    al,BYTE PTR [ecx-0x3888bb65]
  4157ba:	xchg   edi,eax
  4157bb:	inc    esp
  4157bc:	in     eax,0xec
  4157be:	repnz or esi,DWORD PTR [eax+0x37c22ace]
  4157c5:	imul   edi,DWORD PTR [edi+eiz*2+0x31785cf3],0x2f
  4157cd:	jae    0x415757
  4157cf:	stos   DWORD PTR es:[edi],eax
  4157d0:	xor    bh,bh
  4157d2:	addr16 iret 
  4157d4:	imul   edi,DWORD PTR [ebx],0x6c08f352
  4157da:	sub    al,0x75
  4157dc:	ds pusha 
  4157de:	arpl   WORD PTR [ebx],bx
  4157e0:	inc    ecx
  4157e1:	sbb    edi,0xf0e75245
  4157e7:	dec    esp
  4157e8:	adc    BYTE PTR [esi+0x4efff6cd],bh
  4157ee:	frstor [ebx+0x43bdd73e]
  4157f4:	mov    al,BYTE PTR [eax+0x3b1ef6d4]
  4157fa:	out    dx,eax
  4157fb:	jmp    0x5b9d6262
  415800:	pop    ds
  415801:	popf   
  415802:	sub    cl,BYTE PTR [edi+eiz*8]
  415805:	ret    
  415806:	pop    eax
  415807:	mov    ss,eax
  415809:	or     al,0x7a
  41580b:	aam    0x1
  41580d:	aas    
  41580e:	sbb    DWORD PTR [ecx-0x3cc5f73e],ebp
  415814:	ins    DWORD PTR es:[edi],dx
  415815:	cmp    BYTE PTR [esi-0x7a041bbd],dh
  41581b:	cmp    DWORD PTR [eax],ebx
  41581d:	mov    ch,0x6b
  41581f:	push   ecx
  415820:	cmp    edx,edi
  415822:	jns    0x415811
  415824:	add    ebx,edi
  415826:	pop    eax
  415827:	add    al,0xa4
  415829:	arpl   WORD PTR [ecx+0xcd3c658],bp
  41582f:	adc    al,0xc8
  415831:	repz cmp bh,cl
  415834:	cld    
  415835:	sub    DWORD PTR [ecx],eax
  415837:	pop    ecx
  415838:	int    0x8e
  41583a:	xchg   DWORD PTR [ebp-0x310ffca9],eax
  415840:	imul   ebx,DWORD PTR [eax],0xffffff90
  415843:	adc    ebx,DWORD PTR ds:0x6cb7343a
  415849:	iret   
  41584a:	jecxz  0x415865
  41584c:	inc    edx
  41584d:	inc    eax
  41584e:	enter  0x27fd,0xf5
  415852:	add    esi,edi
  415854:	mov    dl,0x4a
  415856:	push   esp
  415857:	push   cs
  415858:	int    0x96
  41585a:	jbe    0x415850
  41585c:	pop    eax
  41585d:	stos   BYTE PTR es:[edi],al
  41585e:	sbb    eax,0xd1295057
  415863:	and    ebp,ebx
  415865:	fisttp DWORD PTR [ecx+esi*4+0x29]
  415869:	dec    esp
  41586a:	dec    esi
  41586b:	push   ebp
  41586c:	fisub  WORD PTR [eax-0x53]
  41586f:	and    eax,0xcb9f668
  415874:	mov    DWORD PTR [ebp+0x13],ebp
  415877:	mov    ch,0x78
  415879:	mov    edi,0x858e0799
  41587e:	shl    DWORD PTR [edx+0x33],0x97
  415882:	mov    WORD PTR [ebx],cs
  415884:	xor    eax,0x40c6cff4
  415889:	add    al,0xf1
  41588b:	xchg   esp,eax
  41588c:	sbb    al,0x9b
  41588e:	pop    ebp
  41588f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415890:	call   0x9bf9:0xca088ffd
  415897:	xor    BYTE PTR [edi-0x25],dl
  41589a:	(bad)  
  41589b:	pop    edx
  41589c:	jp     0x4158d2
  41589e:	int    0xc0
  4158a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158a1:	data16 je 0x41588f
  4158a4:	pop    ds
  4158a5:	ds pusha 
  4158a7:	add    al,0xe4
  4158a9:	call   0xbc7f5e80
  4158ae:	xchg   DWORD PTR [ebx+0x4d9e2b65],edi
  4158b4:	dec    eax
  4158b5:	hlt    
  4158b6:	xchg   ebp,eax
  4158b7:	mov    ds:0xd29a569b,eax
  4158bc:	or     al,0xd1
  4158be:	bnd jge 0x4158da
  4158c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158c2:	mov    ds:0xba247447,eax
  4158c7:	pop    eax
  4158c8:	xchg   edi,eax
  4158c9:	sub    ch,BYTE PTR [esi-0x55dacd42]
  4158cf:	cli    
  4158d0:	jmp    0x4158f7
  4158d2:	lods   al,BYTE PTR ds:[esi]
  4158d3:	jnp    0x415866
  4158d5:	imul   ebx,DWORD PTR [ebx-0x53da6d04],0x1c31d220
  4158df:	xor    BYTE PTR [esi+0x58],0x5c
  4158e3:	shr    edx,cl
  4158e5:	popf   
  4158e6:	and    al,0x4b
  4158e8:	test   DWORD PTR ds:[ecx-0x446cf154],0x833a5063
  4158f3:	in     al,0xfe
  4158f5:	in     al,dx
  4158f6:	aaa    
  4158f7:	mov    BYTE PTR [eax-0x42],dh
  4158fa:	aaa    
  4158fb:	sahf   
  4158fc:	inc    esp
  4158fd:	mov    ds:0x12cb4546,eax
  415902:	mov    ebx,0x40539e94
  415907:	mov    esi,0xf94c88d4
  41590c:	out    0x9f,eax
  41590e:	loope  0x4158af
  415910:	xchg   ebp,eax
  415911:	rcl    DWORD PTR [ebp+0x3f],1
  415914:	mov    dl,BYTE PTR [edi]
  415916:	dec    eax
  415917:	mov    DWORD PTR [esi+0x26],ebx
  41591a:	cs pop ecx
  41591c:	sbb    eax,0xe0d53b62
  415921:	call   0x2b3f:0xcc9903a1
  415928:	xor    edi,esi
  41592a:	or     DWORD PTR [eax],esi
  41592c:	ret    0x14d6
  41592f:	push   ebx
  415930:	js     0x415976
  415932:	push   ss
  415933:	mov    bl,0x95
  415935:	xor    eax,0x701b5f08
  41593a:	lea    ebp,[ebx+0x4c]
  41593d:	xor    ebx,edi
  41593f:	gs popa 
  415941:	gs iret 
  415943:	popf   
  415944:	loopne 0x415993
  415946:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  415948:	pop    ebp
  415949:	add    ebp,0xffffff8d
  41594c:	and    eax,0xaa275ebf
  415951:	not    DWORD PTR [ebx+0x3b75d36]
  415957:	adc    esp,DWORD PTR [edi]
  415959:	out    0x6e,eax
  41595b:	add    eax,0x2e0513a5
  415960:	sbb    eax,0x4256b53c
  415965:	(bad)  [ecx]
  415967:	hlt    
  415968:	retf   
  415969:	ret    
  41596a:	jg     0x41593f
  41596c:	add    bh,BYTE PTR [eax]
  41596e:	jne    0x4159c6
  415970:	sub    DWORD PTR [eax+0x7d5b631c],ebp
  415976:	jle    0x4159e4
  415978:	cmc    
  415979:	test   bh,bh
  41597b:	inc    edi
  41597c:	jmp    0xa225:0x5473126d
  415983:	sub    edx,0xfffffffd
  415986:	and    esi,DWORD PTR [ecx-0x1ab9dff2]
  41598c:	and    al,0xe0
  41598e:	rcl    BYTE PTR [edi],0x94
  415991:	cmp    al,BYTE PTR [ecx-0x6a54cffa]
  415997:	mov    edi,0x367bd476
  41599d:	sbb    DWORD PTR [esi+0x7a3f8831],ebp
  4159a3:	aam    0x82
  4159a5:	push   ss
  4159a6:	dec    ecx
  4159a7:	outs   dx,BYTE PTR ds:[esi]
  4159a8:	es repz popa 
  4159ab:	add    esi,DWORD PTR [edi]
  4159ad:	clc    
  4159ae:	in     al,0xcb
  4159b0:	pop    eax
  4159b1:	bound  eax,QWORD PTR [ecx]
  4159b3:	lock xlat BYTE PTR ds:[ebx]
  4159b5:	xchg   ebp,ebp
  4159b7:	int3   
  4159b8:	fwait
  4159b9:	mov    eax,ds:0x384eb6b7
  4159be:	(bad)  
  4159bf:	cli    
  4159c0:	mov    edi,0x7bccb6a9
  4159c5:	sub    al,0x33
  4159c7:	shr    BYTE PTR [ebp+0x23],1
  4159ca:	xchg   edx,eax
  4159cb:	mov    ds:0xc2387fe0,eax
  4159d0:	mov    ah,0x79
  4159d2:	lods   al,BYTE PTR ds:[esi]
  4159d3:	lods   al,BYTE PTR ds:[esi]
  4159d4:	aam    0x56
  4159d6:	and    cl,BYTE PTR [esi+edx*2]
  4159d9:	pop    es
  4159da:	dec    ebx
  4159db:	lea    esi,[bp+di-0xb]
  4159df:	dec    ecx
  4159e0:	call   0x54a:0x38d00ecd
  4159e7:	push   eax
  4159e8:	inc    edi
  4159e9:	rcr    DWORD PTR [esi-0x1c],cl
  4159ec:	mov    esp,0xb33f91a5
  4159f1:	lea    edi,[ecx]
  4159f3:	sbb    ch,BYTE PTR [esi+0x1a]
  4159f6:	dec    ecx
  4159f7:	cmp    edi,eax
  4159f9:	fnstenv [esi-0x726a4620]
  4159ff:	das    
  415a00:	enter  0x83ef,0x21
  415a04:	out    dx,al
  415a05:	adc    esi,ecx
  415a07:	rol    DWORD PTR [eax],cl
  415a09:	pop    ebp
  415a0a:	fsub   DWORD PTR [ebx]
  415a0c:	mov    bh,0x86
  415a0e:	pop    ds
  415a0f:	pop    edx
  415a10:	popf   
  415a11:	lds    ecx,FWORD PTR [ebp+0x34]
  415a14:	test   eax,0xae3a052b
  415a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a1a:	lea    edi,[ebp+0x16]
  415a1d:	js     0x4159ca
  415a1f:	adc    DWORD PTR [ebx],eax
  415a21:	cmc    
  415a22:	jmp    0xad52:0xee55cf19
  415a29:	pop    edi
  415a2a:	xchg   ecx,eax
  415a2b:	bound  ebp,QWORD PTR [edi+0x44f7d2d]
  415a31:	imul   eax,DWORD PTR [ebp-0x11f59152],0x5e01038c
  415a3b:	xchg   esp,eax
  415a3c:	mov    BYTE PTR [ebp-0x4a9c5c57],bh
  415a42:	sbb    eax,DWORD PTR [ebp-0x38]
  415a45:	jmp    0x4159e6
  415a47:	mov    esp,DWORD PTR [ebx]
  415a49:	std    
  415a4a:	jge    0x415a0c
  415a4c:	ficom  WORD PTR [ecx+0x4a]
  415a4f:	inc    eax
  415a50:	add    bl,cl
  415a52:	retf   
  415a53:	popf   
  415a54:	inc    edi
  415a55:	cld    
  415a56:	loopne 0x415ab4
  415a58:	or     DWORD PTR [eax-0x56],0xc5b9c391
  415a5f:	add    DWORD PTR [ecx+eax*8+0x6b96a635],ebx
  415a66:	sub    bl,BYTE PTR [edi-0x318c6e]
  415a6c:	cmp    DWORD PTR [eax+0x274e2db9],edi
  415a72:	inc    edi
  415a73:	cmp    dh,bl
  415a75:	shl    BYTE PTR [ecx],0x92
  415a78:	ja     0x415a47
  415a7a:	sub    al,0xf4
  415a7c:	stos   DWORD PTR es:[edi],eax
  415a7d:	repz and dl,BYTE PTR [edi+0x7b]
  415a81:	rcr    BYTE PTR [esi+eax*2+0x4d],1
  415a85:	xchg   ebx,eax
  415a86:	and    bl,BYTE PTR [ecx-0x48066121]
  415a8c:	fcmovb st,st(5)
  415a8e:	sub    eax,0x14161d0c
  415a93:	dec    edi
  415a94:	imul   esi,DWORD PTR [edx-0x24854a81],0x636e583d
  415a9e:	jne    0x415a60
  415aa0:	neg    BYTE PTR [eax]
  415aa2:	popa   
  415aa3:	and    dl,BYTE PTR [ecx-0x46dbf18f]
  415aa9:	inc    edi
  415aaa:	jnp    0x415aa1
  415aac:	outs   dx,BYTE PTR ds:[esi]
  415aad:	add    BYTE PTR [edx],ah
  415aaf:	call   0x61c615f0
  415ab4:	outs   dx,BYTE PTR ds:[esi]
  415ab5:	add    BYTE PTR [esi+0x2c2bfff5],bh
  415abb:	(bad)  
  415abc:	or     esi,ecx
  415abe:	xchg   edx,eax
  415abf:	pop    ss
  415ac0:	mov    ebp,esi
  415ac2:	stos   BYTE PTR es:[edi],al
  415ac3:	psubsb mm6,QWORD PTR [ecx]
  415ac6:	push   eax
  415ac7:	dec    ebp
  415ac8:	add    al,0x45
  415aca:	mov    dh,0x19
  415acc:	dec    esp
  415acd:	mov    bh,0xba
  415acf:	into   
  415ad0:	ret    
  415ad1:	push   edi
  415ad2:	and    al,0x15
  415ad4:	xor    ebx,DWORD PTR [esi-0x46]
  415ad7:	adc    DWORD PTR [eax],edx
  415ad9:	lods   eax,DWORD PTR ds:[esi]
  415ada:	adc    esp,0x29d6953e
  415ae0:	xor    eax,0x7e47fbb4
  415ae5:	(bad)  
  415ae6:	(bad)  
  415ae8:	push   ds
  415ae9:	xor    BYTE PTR ds:0xd7372916,cl
  415aef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af0:	cmc    
  415af1:	xchg   DWORD PTR [ebx],eax
  415af3:	adc    eax,0xf9ec3707
  415af8:	(bad)  
  415af9:	repnz cmp al,BYTE PTR [esi]
  415afc:	fdiv   DWORD PTR [ecx-0x19]
  415aff:	inc    ecx
  415b00:	mov    al,BYTE PTR [ebp+0x6e]
  415b03:	out    dx,eax
  415b04:	adc    esp,edi
  415b06:	mov    DWORD PTR [ebx],edx
  415b08:	add    eax,0xb1eb70c9
  415b0d:	mov    ah,BYTE PTR [eax-0x79b33a7e]
  415b13:	mov    al,ds:0x4943f99c
  415b18:	mov    DWORD PTR es:[ecx+0x63],edx
  415b1c:	inc    ebx
  415b1d:	je     0x415ad6
  415b1f:	pop    ebx
  415b20:	out    0xf6,eax
  415b22:	xor    eax,0x201b9925
  415b27:	lods   al,BYTE PTR ds:[esi]
  415b28:	cmp    BYTE PTR [eax],bl
  415b2a:	shr    BYTE PTR [ebp+0x551f5b04],cl
  415b30:	mov    edi,0xd6228852
  415b35:	inc    edx
  415b36:	fs push 0xc70f46e3
  415b3c:	ficomp DWORD PTR [ebp-0x4f]
  415b3f:	lods   eax,DWORD PTR ds:[esi]
  415b40:	dec    esi
  415b41:	mov    ah,0xd5
  415b43:	xchg   edx,eax
  415b44:	mov    eax,0xd99fabac
  415b49:	xchg   esi,eax
  415b4a:	ficom  DWORD PTR [ecx-0x38]
  415b4d:	rol    BYTE PTR [eax+0x42],0x41
  415b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b52:	in     eax,0xf8
  415b54:	mov    esp,DWORD PTR [ecx-0x14a0160]
  415b5a:	mov    bl,0x4c
  415b5c:	push   DWORD PTR [eax]
  415b5e:	stos   BYTE PTR es:[edi],al
  415b5f:	popa   
  415b60:	mov    bh,0xf2
  415b62:	icebp  
  415b63:	add    DWORD PTR [ecx-0x4feafc71],eax
  415b69:	lods   al,BYTE PTR ds:[esi]
  415b6a:	and    ebx,DWORD PTR [ebx+edi*4-0x6c4a125c]
  415b71:	arpl   WORD PTR [edi],bx
  415b73:	pop    edi
  415b74:	add    eax,0xedf114b7
  415b79:	fiadd  WORD PTR [ebp+0x42a464bd]
  415b7f:	xor    DWORD PTR [esi],edx
  415b81:	sbb    al,0x8e
  415b83:	add    al,0x6a
  415b85:	pop    ebx
  415b86:	ss jle 0x415bd2
  415b89:	xchg   ecx,eax
  415b8a:	jmp    0xa88f5ab1
  415b8f:	mov    esp,0x479859f8
  415b94:	into   
  415b95:	(bad)  
  415b96:	test   al,0xbc
  415b98:	inc    eax
  415b99:	test   DWORD PTR [edx+0x6da948da],ebp
  415b9f:	(bad)  
  415ba0:	das    
  415ba1:	icebp  
  415ba2:	(bad)  
  415ba3:	repz mov bh,BYTE PTR [edx+ecx*1+0x3d49e6d0]
  415bab:	push   edi
  415bac:	shr    BYTE PTR [ecx+0x1f2c37ae],cl
  415bb2:	sub    ebx,DWORD PTR [esi-0x7a]
  415bb5:	mov    esp,0x1e598a02
  415bba:	pop    ebx
  415bbb:	sti    
  415bbc:	scas   al,BYTE PTR es:[edi]
  415bbd:	adc    al,0x98
  415bbf:	adc    DWORD PTR [eax+0x6319aa92],ebx
  415bc5:	dec    ecx
  415bc6:	aaa    
  415bc7:	sbb    DWORD PTR [di],esp
  415bca:	and    eax,0x355cb6e
  415bcf:	clc    
  415bd0:	and    BYTE PTR [edx-0x7a470325],al
  415bd6:	rcl    BYTE PTR [edi-0x3f],0x6c
  415bda:	ja     0x415bf3
  415bdc:	mov    esi,0xc2cf3ad
  415be1:	pushf  
  415be2:	jl     0x415bb4
  415be4:	xchg   esi,eax
  415be5:	jae    0x415c2b
  415be7:	sbb    al,0x3
  415be9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415bea:	neg    DWORD PTR [ecx-0x166e77ad]
  415bf0:	dec    esi
  415bf1:	fsubr  QWORD PTR [ecx]
  415bf3:	jge    0x415bd6
  415bf5:	(bad)  
  415bf6:	pushf  
  415bf7:	or     eax,0x110c3e48
  415bfc:	hlt    
  415bfd:	sbb    al,0x10
  415bff:	div    bh
  415c01:	and    edx,ecx
  415c03:	invd   
  415c05:	dec    ebp
  415c06:	push   edx
  415c07:	adc    edi,DWORD PTR [eax+ecx*1]
  415c0a:	rcl    DWORD PTR [edi-0x56],cl
  415c0d:	jl     0x415c1d
  415c0f:	pusha  
  415c10:	out    dx,al
  415c11:	loop   0x415c1e
  415c13:	sub    BYTE PTR [ebp+edi*4+0x5d5a6b9d],al
  415c1a:	aad    0x1d
  415c1c:	fist   WORD PTR [ebx-0xab1a52a]
  415c22:	dec    edx
  415c23:	mov    bl,BYTE PTR [ecx]
  415c25:	and    cl,BYTE PTR [ebx-0x1f]
  415c28:	in     al,0xd8
  415c2a:	or     BYTE PTR [edx+0x3eb0480a],cl
  415c30:	icebp  
  415c31:	sbb    bl,BYTE PTR [edi+eiz*8+0x194d223d]
  415c38:	gs push es
  415c3a:	or     BYTE PTR [eax-0x67e50d5a],bl
  415c40:	in     al,dx
  415c41:	cmp    eax,DWORD PTR [edi]
  415c43:	stc    
  415c44:	add    ebx,edx
  415c46:	cmovb  ebx,DWORD PTR [ebx+edi*2+0x340b22de]
  415c4e:	and    eax,0xa4f278c0
  415c53:	jno    0x415c9c
  415c55:	neg    DWORD PTR [eax+eiz*2-0x44]
  415c59:	mov    dl,0xf8
  415c5b:	jns    0x415c87
  415c5d:	hlt    
  415c5e:	out    dx,eax
  415c5f:	dec    ebx
  415c60:	call   ecx
  415c62:	out    dx,al
  415c63:	mov    ebp,DWORD PTR [edx+0x17]
  415c66:	push   edx
  415c67:	sub    eax,0x2ce726db
  415c6c:	test   BYTE PTR [edi],0x72
  415c6f:	xchg   esp,eax
  415c70:	aam    0x30
  415c72:	or     bh,BYTE PTR [ecx-0x4b]
  415c75:	outs   dx,DWORD PTR ds:[esi]
  415c76:	mov    DWORD PTR [eax],0x7d1fb491
  415c7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c7d:	mov    dh,0x22
  415c7f:	js     0x415c94
  415c81:	aam    0x81
  415c83:	or     esi,DWORD PTR [eax]
  415c85:	addr16 daa 
  415c87:	dec    ebp
  415c88:	jno    0x415c42
  415c8a:	mov    ecx,0x6a1110b
  415c8f:	neg    BYTE PTR [ebx-0x15]
  415c92:	stos   DWORD PTR es:[edi],eax
  415c93:	in     eax,0xd8
  415c95:	jecxz  0x415c2b
  415c97:	add    DWORD PTR [eax+0x1fa9036e],ebx
  415c9d:	xlat   BYTE PTR ds:[ebx]
  415c9e:	add    DWORD PTR [edx+0x37509460],ebx
  415ca4:	jmp    DWORD PTR [eax+eiz*4-0x33]
  415ca8:	xor    al,0x63
  415caa:	mov    BYTE PTR [esi+0x1cbdef13],0x87
  415cb1:	push   ecx
  415cb2:	nop
  415cb3:	xor    eax,0x105caf9b
  415cb8:	xor    eax,0xc4e79e21
  415cbd:	test   al,0xbb
  415cbf:	int    0x88
  415cc1:	inc    edx
  415cc2:	test   DWORD PTR [eax-0x55],ebp
  415cc5:	mov    esp,es
  415cc7:	dec    eax
  415cc8:	nop
  415cc9:	inc    eax
  415cca:	xchg   ebp,eax
  415ccb:	(bad)  
  415ccc:	adc    esi,DWORD PTR [esi+edi*1]
  415ccf:	pop    ecx
  415cd0:	ja     0x415cf3
  415cd2:	pop    ds
  415cd3:	pop    esp
  415cd4:	xor    BYTE PTR [ebp+0x68],0x82
  415cd8:	jecxz  0x415c73
  415cda:	into   
  415cdb:	add    al,0x9a
  415cdd:	cwde   
  415cde:	ret    0x25ce
  415ce1:	arpl   WORD PTR [esp+ebx*2],di
  415ce4:	aaa    
  415ce5:	push   esp
  415ce6:	inc    edx
  415ce7:	inc    edx
  415ce8:	(bad)  
  415ce9:	sbb    DWORD PTR [ebp+0x1b89fa9c],ebp
  415cef:	mov    ah,0xe3
  415cf1:	jge    0x415d56
  415cf3:	in     eax,0xc2
  415cf5:	sub    DWORD PTR [ebx-0x68],0xd2df9fd7
  415cfc:	dec    esp
  415cfd:	dec    esp
  415cfe:	ficom  WORD PTR [edi+0x68e12ad1]
  415d04:	adc    eax,0xe32d7f1c
  415d09:	int3   
  415d0a:	cli    
  415d0b:	pop    ecx
  415d0c:	loopne 0x415cda
  415d0e:	mov    bl,0xe0
  415d10:	test   eax,0x7e9d5b26
  415d15:	push   eax
  415d16:	ja     0x415d0e
  415d18:	sbb    cl,BYTE PTR [ebp+0xa]
  415d1b:	dec    edi
  415d1c:	cmp    al,0xd9
  415d1e:	or     BYTE PTR [ebx+edi*1-0x60498679],bl
  415d25:	xlat   BYTE PTR ds:[ebx]
  415d26:	imul   edi,DWORD PTR [ebp-0x23d34655],0x9f71969f
  415d30:	push   ds
  415d31:	xor    DWORD PTR [ebp-0x4a],esp
  415d34:	iret   
  415d35:	sbb    BYTE PTR [eax+ebp*2-0x338867a9],dh
  415d3c:	xor    eax,0xb2d9b55b
  415d41:	sahf   
  415d42:	xor    eax,DWORD PTR [ebx+0x1f58cf19]
  415d48:	push   es
  415d49:	or     eax,0x522fefbf
  415d4e:	enter  0x751c,0x4c
  415d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d53:	dec    ebp
  415d54:	push   cs
  415d55:	jb     0x415d28
  415d57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d58:	xlat   BYTE PTR ds:[ebx]
  415d59:	jg     0x415dda
  415d5b:	and    al,0xb5
  415d5d:	jne    0x415d01
  415d5f:	out    0x7f,al
  415d61:	shr    BYTE PTR gs:[esi+0x1e],cl
  415d65:	mov    edi,0x80f915fa
  415d6a:	add    al,0x44
  415d6c:	out    0x40,al
  415d6e:	dec    esi
  415d6f:	in     al,dx
  415d70:	pop    ebp
  415d71:	dec    edi
  415d72:	cmp    DWORD PTR [ebx-0x52],ebx
  415d75:	jle    0x415cff
  415d77:	adc    BYTE PTR [esi],0x4d
  415d7a:	(bad)  
  415d7b:	rol    DWORD PTR [ecx+0x9b3ea1],1
  415d81:	lods   eax,DWORD PTR ds:[esi]
  415d82:	or     BYTE PTR [ebp+0xb9382a],dl
  415d88:	fst    DWORD PTR [ebx-0x267d6601]
  415d8e:	xchg   BYTE PTR [edx-0x2c],ah
  415d91:	mov    cl,0x62
  415d93:	sub    eax,0x7217c9bf
  415d98:	in     al,dx
  415d99:	mov    ebp,0xaa9a3520
  415d9e:	xor    eax,0x17302e22
  415da3:	ss shl eax,0x6e
  415da7:	push   ebx
  415da8:	jnp    0x415dea
  415daa:	enter  0x3344,0x30
  415dae:	pop    ds
  415daf:	fs push ecx
  415db1:	lea    edi,[ebp+0x79]
  415db4:	pop    eax
  415db5:	dec    esi
  415db6:	add    ah,BYTE PTR [edi]
  415db8:	mov    ds:0x1df9ae49,eax
  415dbd:	mov    esp,es
  415dbf:	(bad)  
  415dc0:	shr    DWORD PTR [ebx+0x18],0xc8
  415dc4:	ds test eax,0x44df8bff
  415dca:	sub    DWORD PTR [esi+edi*4-0x5c71e141],edi
  415dd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dd2:	adc    BYTE PTR [eax+0x4e],bh
  415dd5:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  415dd7:	sbb    DWORD PTR [ebx+eiz*8-0x1249683d],eax
  415dde:	lds    esp,FWORD PTR [eax-0x7447e842]
  415de4:	mov    esi,0x83717834
  415de9:	xor    al,0x32
  415deb:	sub    ecx,DWORD PTR [ecx-0x45ce3c38]
  415df1:	hlt    
  415df2:	mov    ah,0x44
  415df4:	mov    ebx,0x82ca752e
  415df9:	xor    bl,dh
  415dfb:	fcomip st,st(6)
  415dfd:	jecxz  0x415e64
  415dff:	sbb    al,0x47
  415e01:	fsub   QWORD PTR [edx+0x49]
  415e04:	in     al,dx
  415e05:	fdivr  QWORD PTR [edi]
  415e07:	pop    ds
  415e08:	das    
  415e09:	jbe    0x415e05
  415e0b:	xchg   esi,eax
  415e0c:	push   eax
  415e0d:	fisttp DWORD PTR [esi+0x74]
  415e10:	leave  
  415e11:	mov    ecx,0xb309db95
  415e16:	jmp    0x8b525c7a
  415e1b:	mov    bl,0x22
  415e1d:	and    ebp,DWORD PTR [esi]
  415e1f:	dec    ebx
  415e20:	(bad)  
  415e21:	ja     0x415e9c
  415e23:	mov    cl,0x2
  415e25:	push   esp
  415e26:	inc    edi
  415e27:	sbb    bh,BYTE PTR [edx+eax*8+0x9]
  415e2b:	and    DWORD PTR [ecx],edx
  415e2d:	ja     0x415e8d
  415e2f:	add    DWORD PTR [edi],edi
  415e31:	dec    ebx
  415e32:	push   esi
  415e33:	inc    esi
  415e34:	dec    esp
  415e35:	and    bh,BYTE PTR [edi-0x1e]
  415e38:	inc    edi
  415e39:	adc    al,0xda
  415e3b:	sbb    al,0x98
  415e3d:	xchg   edi,eax
  415e3e:	inc    ebp
  415e3f:	fadd   st(7),st
  415e41:	or     DWORD PTR [edx+edi*1],0xffffff80
  415e45:	fidivr DWORD PTR [edx+0x5d]
  415e48:	pusha  
  415e49:	cmc    
  415e4a:	mov    DWORD PTR [eax+0x10],ebx
  415e4d:	test   ch,bl
  415e4f:	loop   0x415e99
  415e51:	dec    eax
  415e52:	ret    
  415e53:	cwde   
  415e54:	mov    esi,0x97a8e4e9
  415e59:	mov    dh,0x34
  415e5b:	adc    ah,BYTE PTR [edx]
  415e5d:	xlat   BYTE PTR ds:[ebx]
  415e5e:	mov    WORD PTR [ebp+0x72db5663],fs
  415e64:	call   0x55c4:0x1084a5fd
  415e6b:	int    0x21
  415e6d:	rcl    DWORD PTR [edx+0x5fc9b73d],1
  415e73:	out    0x32,eax
  415e75:	sub    eax,0x8f1ee302
  415e7a:	sub    edi,DWORD PTR [ebx-0x1a]
  415e7d:	icebp  
  415e7e:	inc    edi
  415e7f:	bound  ebp,QWORD PTR [edi]
  415e81:	jg     0x415e64
  415e83:	clc    
  415e84:	sbb    DWORD PTR [ebx-0x546f9dab],edx
  415e8a:	dec    edx
  415e8b:	push   ebp
  415e8c:	aas    
  415e8d:	rcl    BYTE PTR [ebx+eax*1],cl
  415e90:	ss (bad) 
  415e93:	or     esi,ecx
  415e95:	data16 jno 0x415e7f
  415e98:	popf   
  415e99:	mov    eax,0x410afa79
  415e9e:	gs adc al,0x35
  415ea1:	adc    al,0xb4
  415ea3:	dec    edi
  415ea4:	mov    eax,ds:0xe8f646d1
  415ea9:	sbb    eax,0x850ed712
  415eae:	push   0xffffffcb
  415eb0:	ror    DWORD PTR [esp+ebx*1+0x2c],1
  415eb4:	sub    al,0x8
  415eb6:	push   es
  415eb7:	xchg   ebx,eax
  415eb8:	adc    ecx,esp
  415eba:	mov    edx,0xe11e808b
  415ebf:	mov    edx,0x7c5422e4
  415ec4:	xchg   BYTE PTR [edx-0x4b9423a9],ah
  415eca:	ja     0x415ee5
  415ecc:	and    esp,edx
  415ece:	(bad)  
  415ecf:	pushf  
  415ed0:	fwait
  415ed1:	add    al,0xfe
  415ed3:	hlt    
  415ed4:	cwde   
  415ed5:	imul   edi,DWORD PTR fs:[ebx-0x11],0x7ea01bb2
  415edd:	repz pop ss
  415edf:	pop    ss
  415ee0:	pop    ebx
  415ee1:	lds    ecx,FWORD PTR [edi-0x4b]
  415ee4:	rol    DWORD PTR [esi],1
  415ee6:	mov    ah,bl
  415ee8:	jno    0x415ed0
  415eea:	stc    
  415eeb:	or     DWORD PTR ss:[edx],ebx
  415eee:	or     dl,BYTE PTR [edx-0x1]
  415ef1:	retf   
  415ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ef3:	and    dl,BYTE PTR [ecx]
  415ef5:	out    dx,al
  415ef6:	push   ss
  415ef7:	js     0x415e89
  415ef9:	(bad)  
  415efa:	cmp    eax,0x544d6da0
  415eff:	push   0x4b56cf7b
  415f04:	sub    esi,edx
  415f06:	lds    esp,FWORD PTR [ebp-0x5f]
  415f09:	mov    ecx,0x5f1a9b2b
  415f0e:	sbb    bl,BYTE PTR [edi-0xd]
  415f11:	add    ch,al
  415f13:	sub    cl,BYTE PTR [eax+0x63]
  415f16:	pop    edi
  415f17:	xchg   BYTE PTR [esp+ecx*8+0x67],cl
  415f1b:	mov    cl,0x78
  415f1d:	xor    BYTE PTR [ecx-0xd],dl
  415f20:	jle    0x9901b82b
  415f26:	pop    ecx
  415f27:	and    esp,DWORD PTR [ebp+0x54851bf1]
  415f2d:	enter  0x3d3d,0x45
  415f31:	fwait
  415f32:	scas   al,BYTE PTR es:[edi]
  415f33:	sbb    DWORD PTR [ebx+0x2a4bf48d],ebx
  415f39:	sbb    BYTE PTR [eax+esi*8+0x78],0x6e
  415f3e:	pop    esi
  415f3f:	cmp    BYTE PTR [ecx],cl
  415f41:	inc    eax
  415f42:	mov    WORD PTR [ebp-0x50],gs
  415f45:	out    0x2d,eax
  415f47:	push   ds
  415f48:	aas    
  415f49:	fist   DWORD PTR [esi-0x7c47fd90]
  415f4f:	fcmovne st,st(5)
  415f51:	loop   0x415f32
  415f53:	sbb    dh,BYTE PTR [ebp-0x53]
  415f56:	and    ebp,ebp
  415f58:	inc    ebp
  415f59:	xchg   esi,eax
  415f5a:	xchg   edi,eax
  415f5b:	cs fdivr st(0),st
  415f5e:	daa    
  415f5f:	aam    0xf5
  415f61:	icebp  
  415f62:	int3   
  415f63:	daa    
  415f64:	add    eax,DWORD PTR [edi+edi*2+0x29]
  415f68:	mov    eax,ds:0x65dba38
  415f6d:	lea    eax,[ebp-0x5]
  415f70:	js     0x415fe3
  415f72:	cmp    bh,BYTE PTR [esi]
  415f74:	push   eax
  415f75:	xor    DWORD PTR [esi-0x1785c47e],esi
  415f7b:	pop    edi
  415f7c:	icebp  
  415f7d:	lds    esp,FWORD PTR [esi]
  415f7f:	imul   edi,DWORD PTR [edx+0x1c626db7],0x472ccbfb
  415f89:	or     edx,DWORD PTR [esi-0x724fb3e1]
  415f8f:	sbb    al,0x11
  415f91:	add    esp,DWORD PTR [eax+0x2]
  415f94:	addr16 hlt 
  415f96:	fisttp QWORD PTR [edx]
  415f98:	xchg   esp,eax
  415f99:	mov    ?,esp
  415f9b:	aaa    
  415f9c:	mov    cl,0x3f
  415f9e:	out    dx,al
  415f9f:	repz bound eax,QWORD PTR [eax]
  415fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415fa3:	adc    eax,0xefb2a19b
  415fa8:	fcmovnbe st,st(6)
  415faa:	mov    al,ds:0xaca67508
  415faf:	loop   0x416016
  415fb1:	dec    edx
  415fb2:	jns    0x415faa
  415fb4:	mov    dh,0x48
  415fb6:	iret   
  415fb7:	aaa    
  415fb8:	mov    ebx,0xab3ca8eb
  415fbd:	mov    bl,BYTE PTR [edi-0x2]
  415fc0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  415fc2:	inc    eax
  415fc3:	lds    eax,FWORD PTR [edx]
  415fc5:	adc    esp,DWORD PTR [eax]
  415fc7:	or     al,0xbe
  415fc9:	les    edi,FWORD PTR [ecx+0x76625c68]
  415fcf:	xor    al,0x62
  415fd1:	jmp    0x28797f0c
  415fd6:	cmp    al,0xf4
  415fd8:	daa    
  415fd9:	imul   ebp,DWORD PTR [edx],0x8817415a
  415fdf:	aad    0x1b
  415fe1:	pop    ss
  415fe2:	stos   BYTE PTR es:[edi],al
  415fe3:	scas   al,BYTE PTR es:[edi]
  415fe4:	and    al,BYTE PTR [eax+ebp*8+0x16df9a8b]
  415feb:	into   
  415fec:	or     ch,BYTE PTR [esp+eax*2]
  415fef:	mov    ds:0x8ddbf030,eax
  415ff4:	cmp    BYTE PTR fs:[ecx+0x4ec8249d],dh
  415ffb:	pushf  
  415ffc:	xor    DWORD PTR [ecx],edx
  415ffe:	int3   
  415fff:	mov    bh,0x26
  416001:	adc    ah,BYTE PTR [ebx]
  416003:	lock out 0xc6,eax
  416006:	sub    al,0x28
  416008:	mov    eax,0xcbfe1786
  41600d:	les    ecx,FWORD PTR [edx-0x1d]
  416010:	js     0x415fb0
  416012:	jno    0x416031
  416014:	lahf   
  416015:	pop    eax
  416016:	test   ebp,edi
  416018:	fs cli 
  41601a:	iret   
  41601b:	push   edx
  41601c:	nop
  41601d:	enter  0x7b5d,0x53
  416021:	popf   
  416022:	(bad)  
  416023:	in     al,dx
  416024:	pop    es
  416025:	sbb    al,0x4c
  416027:	push   ebp
  416028:	icebp  
  416029:	not    BYTE PTR [esi+0x1e]
  41602c:	xchg   esi,eax
  41602d:	mov    fs,WORD PTR [ebx+0x5485856d]
  416033:	jno    0x416099
  416035:	imul   ebp,DWORD PTR [edi+edi*4-0x9],0xffffffb3
  41603a:	mov    BYTE PTR [esi-0x2f127c3e],al
  416040:	test   BYTE PTR [eax-0x2b],dh
  416043:	sbb    BYTE PTR [ecx],dl
  416045:	mov    ebp,0x24fea2ff
  41604a:	cli    
  41604b:	div    BYTE PTR [ecx]
  41604d:	outs   dx,DWORD PTR ds:[esi]
  41604e:	popf   
  41604f:	int3   
  416050:	sub    dl,bl
  416052:	mov    eax,DWORD PTR [ecx]
  416054:	ds or  al,0xb4
  416057:	push   esp
  416058:	xor    al,0x3a
  41605a:	stc    
  41605b:	fld    QWORD PTR ds:0x1bcc29ed
  416061:	add    ecx,DWORD PTR [ebp-0x3c904807]
  416067:	outs   dx,DWORD PTR ds:[esi]
  416068:	daa    
  416069:	imul   edi,DWORD PTR [esi-0x6a9aa884],0xffffff96
  416070:	jmp    0xd5814345
  416075:	and    dl,cl
  416077:	icebp  
  416078:	sti    
  416079:	sbb    cl,bh
  41607b:	sub    eax,ebx
  41607d:	rcr    BYTE PTR [esi-0x5e],cl
  416080:	(bad)  
  416081:	sub    edi,ecx
  416083:	lods   al,BYTE PTR ds:[esi]
  416084:	leave  
  416085:	lods   eax,DWORD PTR ds:[esi]
  416086:	int    0x84
  416088:	mov    eax,ds:0x85c85f5f
  41608d:	jno    0x4160b4
  41608f:	and    al,0xa5
  416091:	mov    dl,0xc6
  416093:	inc    ecx
  416094:	pop    ebp
  416095:	jmp    0x416077
  416097:	cwde   
  416098:	mov    cl,0x85
  41609a:	out    dx,eax
  41609b:	gs mov dl,0x56
  41609e:	xlat   BYTE PTR ds:[ebx]
  41609f:	pop    ds
  4160a0:	cmp    BYTE PTR [di+0x29],0xe1
  4160a5:	mov    eax,0xd16f0f85
  4160aa:	and    al,0x12
  4160ac:	cdq    
  4160ad:	(bad)  
  4160ae:	fild   DWORD PTR [edx+0x76]
  4160b1:	sub    esi,eax
  4160b3:	aas    
  4160b4:	out    dx,al
  4160b5:	cmp    al,0xa3
  4160b7:	call   0xc12364f
  4160bc:	jns    0x4160cb
  4160be:	pusha  
  4160bf:	inc    edi
  4160c0:	repnz cli 
  4160c2:	rcr    bl,0xac
  4160c5:	leave  
  4160c6:	or     edx,DWORD PTR [eax]
  4160c8:	js     0x4160fd
  4160ca:	push   eax
  4160cb:	aam    0xd6
  4160cd:	xor    cl,BYTE PTR [edi]
  4160cf:	add    ch,BYTE PTR [esi+ebp*1-0x65c7a516]
  4160d6:	repnz xlat BYTE PTR ds:[ebx]
  4160d8:	iret   
  4160d9:	test   al,0xe3
  4160db:	xor    ecx,DWORD PTR [ecx]
  4160dd:	xor    eax,edi
  4160df:	xor    dh,BYTE PTR [eax+ebp*1+0x13]
  4160e3:	fcom   DWORD PTR [edi]
  4160e5:	lahf   
  4160e6:	cmp    edi,DWORD PTR [eax-0x70c70ee7]
  4160ec:	mov    esi,ecx
  4160ee:	jmp    0x89b3:0xeba9
  4160f4:	popf   
  4160f5:	hlt    
  4160f6:	sbb    ah,BYTE PTR [edx-0x440fd7b4]
  4160fc:	ss add eax,0x718b3f43
  416102:	push   esp
  416103:	clc    
  416104:	rcl    BYTE PTR [edi+0x6c],0x20
  416108:	ins    DWORD PTR es:[edi],dx
  416109:	iret   
  41610a:	in     al,0xb6
  41610c:	push   edx
  41610d:	(bad)  
  41610e:	in     al,0x53
  416110:	ja     0x416092
  416112:	and    eax,0x8247910b
  416117:	leave  
  416118:	cmp    eax,0x55200bae
  41611d:	jae    0x4160b9
  41611f:	xor    BYTE PTR [esi+0x18],bl
  416122:	push   ebp
  416123:	or     eax,0x2868b955
  416128:	stos   DWORD PTR es:[edi],eax
  416129:	inc    edx
  41612a:	shr    DWORD PTR [esi-0x4],1
  41612d:	icebp  
  41612e:	inc    edx
  41612f:	(bad)  
  416131:	cmp    ch,BYTE PTR [ebx]
  416133:	add    eax,0x899639cc
  416138:	add    dh,ch
  41613a:	lahf   
  41613b:	stos   BYTE PTR es:[edi],al
  41613c:	test   al,0xf0
  41613e:	test   BYTE PTR [ebp-0x28af43e1],al
  416144:	sbb    eax,0xb9f780bb
  416149:	adc    DWORD PTR [esi+edi*1],esp
  41614c:	jmp    0x416153
  41614e:	arpl   bx,si
  416150:	fs fild QWORD PTR gs:[ebp+esi*1-0x4f]
  416156:	jo     0x4160f8
  416158:	add    cl,al
  41615a:	sbb    DWORD PTR [ebx-0x4effc189],ebx
  416160:	ja     0x416162
  416162:	mov    ebp,DWORD PTR [edx]
  416164:	xchg   edx,eax
  416165:	in     eax,dx
  416166:	jmp    0x5383073c
  41616b:	jmp    0xaf556bff
  416170:	xor    ebp,DWORD PTR [edi]
  416172:	cld    
  416173:	stc    
  416174:	or     esi,DWORD PTR [ebx+0xf]
  416177:	call   0x751386f7
  41617c:	push   edi
  41617d:	inc    ecx
  41617e:	(bad)  
  41617f:	mov    ebp,0x7fe36d2f
  416184:	jmp    0x930187d0
  416189:	neg    dl
  41618b:	push   0xffffffca
  41618d:	mov    esi,0x8a110fd
  416192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416193:	shl    BYTE PTR [ecx-0x3943ed8d],0xe5
  41619a:	mov    edx,0xaf8920f8
  41619f:	mov    ah,0xd4
  4161a1:	fist   DWORD PTR [ebx]
  4161a3:	and    eax,0xd297fd3
  4161a8:	push   ds
  4161a9:	shl    DWORD PTR [ecx-0x5386b610],1
  4161af:	xchg   DWORD PTR [edx],ecx
  4161b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161b2:	iret   
  4161b3:	sub    dh,BYTE PTR [ebx+eax*8]
  4161b6:	idiv   DWORD PTR [edi-0x32a922d0]
  4161bc:	cmp    DWORD PTR [ebx+0x20],ebp
  4161bf:	repz pop edx
  4161c1:	push   ebp
  4161c2:	inc    esi
  4161c3:	inc    ecx
  4161c4:	lds    ecx,FWORD PTR [eax+0x38bee0a1]
  4161ca:	xor    BYTE PTR [ecx],ah
  4161cc:	sub    bh,BYTE PTR [edx+0x69]
  4161cf:	in     eax,0xca
  4161d1:	stc    
  4161d2:	pop    edi
  4161d3:	ror    DWORD PTR [ecx+0x5080f166],0x86
  4161da:	pushf  
  4161db:	push   esi
  4161dc:	xchg   esp,eax
  4161dd:	out    dx,eax
  4161de:	(bad)  [esi+0x3d]
  4161e1:	push   0x81f474b6
  4161e6:	lock pop ss
  4161e8:	mov    eax,ds:0xc1d75fbe
  4161ed:	call   0xf539:0x9c1b5400
  4161f4:	sbb    al,0x7f
  4161f6:	mov    edi,0xacf76973
  4161fb:	inc    DWORD PTR [edi-0x3b]
  4161fe:	mov    cl,0x53
  416200:	inc    esi
  416201:	sub    ebp,edi
  416203:	(bad)  
  416204:	pop    ebp
  416205:	repz add ah,ch
  416208:	sbb    BYTE PTR [ebx+0x272a2a4b],0x7b
  41620f:	sub    eax,0x4f7eccce
  416214:	hlt    
  416215:	shl    BYTE PTR [edx+0x2cd1b5a2],0xf9
  41621c:	xchg   ebp,eax
  41621d:	loopne 0x4161ed
  41621f:	call   0x174f:0xdb0aa5df
  416226:	test   DWORD PTR [eax],0xc0a13760
  41622c:	sub    ecx,DWORD PTR [esi+edi*8+0x3677bb8c]
  416233:	inc    ebp
  416234:	aam    0xf0
  416236:	repnz add cl,BYTE PTR [ecx+edi*2-0x5f]
  41623b:	jle    0x4161ec
  41623d:	lock test eax,0x26fb1e2c
  416243:	sub    DWORD PTR [esi-0x50],edi
  416246:	jne    0x416226
  416248:	adc    eax,0xc513efd5
  41624d:	out    0xb6,eax
  41624f:	jmp    0x41626c
  416251:	mov    bl,0x7c
  416253:	loopne 0x4162b6
  416255:	dec    ebx
  416256:	mov    esi,0x7f6744aa
  41625b:	mov    cl,0xc5
  41625d:	sub    DWORD PTR [edx+0x11],esp
  416260:	adc    eax,0xf8f545aa
  416265:	(bad)  [edx]
  416267:	ja     0x41627b
  416269:	xor    ebx,DWORD PTR cs:[eax]
  41626c:	cs retf 
  41626e:	(bad)  [esi+0x22]
  416271:	xchg   esp,eax
  416272:	shr    DWORD PTR [eiz*4+0x3e544969],1
  416279:	mov    ah,0xf2
  41627b:	sub    edx,eax
  41627d:	xchg   esi,eax
  41627e:	scas   eax,DWORD PTR es:[edi]
  41627f:	repz retf 0xe661
  416283:	pushf  
  416284:	fwait
  416285:	dec    esp
  416286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416287:	in     eax,dx
  416288:	mov    dl,BYTE PTR [esp+ebp*8+0x36]
  41628c:	test   DWORD PTR [ebx-0xa2b6932],edx
  416292:	mov    eax,ds:0x7770f846
  416297:	mov    dl,0x2c
  416299:	mov    edx,0xe560e1f0
  41629e:	push   ebp
  4162a0:	mov    dh,0xca
  4162a2:	fcomp  QWORD PTR [edi+0x4c]
  4162a5:	pop    eax
  4162a6:	xlat   BYTE PTR ds:[bx]
  4162a8:	jno    0x41627b
  4162aa:	xor    al,0xe0
  4162ac:	retf   
  4162ad:	fcom   QWORD PTR [edi-0x49]
  4162b0:	mov    BYTE PTR [edi],cl
  4162b2:	cmp    eax,0x811394c3
  4162b7:	or     BYTE PTR [ecx],al
  4162b9:	(bad)
  4162bd:	fdivr  QWORD PTR [eax-0x13]
  4162c0:	dec    ebp
  4162c1:	or     BYTE PTR [eax-0x33],0x70
  4162c5:	and    al,0xa0
  4162c7:	add    BYTE PTR [ecx+0x34934813],0xde
  4162ce:	outs   dx,BYTE PTR ds:[esi]
  4162cf:	xor    bh,BYTE PTR ds:0xb5f37ab4
  4162d5:	dec    edx
  4162d6:	cmp    BYTE PTR [ecx-0x57],dh
  4162d9:	xchg   BYTE PTR [eax-0x42],ah
  4162dc:	lods   eax,DWORD PTR ds:[esi]
  4162dd:	sbb    edi,ebx
  4162df:	or     ebx,DWORD PTR [ecx]
  4162e1:	dec    edx
  4162e2:	sbb    ch,BYTE PTR [edx+0x54daa5cd]
  4162e8:	cwde   
  4162e9:	and    DWORD PTR [edi],0xd2ff11c5
  4162ef:	leave  
  4162f0:	adc    BYTE PTR [eax],0x67
  4162f3:	fwait
  4162f4:	scas   al,BYTE PTR es:[edi]
  4162f5:	add    edi,DWORD PTR ds:[eax+0x64]
  4162f9:	in     al,0x1d
  4162fb:	pop    ss
  4162fc:	or     DWORD PTR [eax+edx*8+0x4d],eax
  416300:	dec    eax
  416301:	mov    WORD PTR [ebx],?
  416303:	ja     0x416315
  416305:	xor    esp,eax
  416307:	fsub   QWORD PTR [edi]
  416309:	dec    edx
  41630a:	add    ah,BYTE PTR [eax]
  41630c:	js     0x4162a7
  41630e:	and    esi,DWORD PTR [ecx-0x6f8cf03f]
  416314:	ret    0x9d3b
  416317:	mov    dl,0xc7
  416319:	pop    eax
  41631a:	stos   DWORD PTR es:[edi],eax
  41631b:	add    BYTE PTR [esi-0x22fcf7b1],ah
  416321:	mov    ebp,0xfaba06ea
  416326:	call   0xe22bea2e
  41632b:	mov    ebx,0x1f9c4440
  416330:	cmp    dh,BYTE PTR [eax-0x61]
  416333:	mov    edi,DWORD PTR [ebp-0x73]
  416336:	into   
  416337:	stos   BYTE PTR es:[edi],al
  416338:	push   eax
  416339:	jbe    0x416397
  41633b:	inc    eax
  41633c:	mov    ecx,0x4c0b5943
  416341:	add    DWORD PTR [eax],edi
  416343:	ins    DWORD PTR es:[edi],dx
  416344:	les    eax,FWORD PTR [esi-0x36]
  416347:	loope  0x4162fb
  416349:	pop    eax
  41634a:	mov    DWORD PTR [esi+ebp*2-0x63],ecx
  41634e:	xchg   edi,eax
  41634f:	sub    DWORD PTR [edi-0x18],eax
  416352:	dec    eax
  416353:	jle    0x4163ab
  416355:	lock test al,0xa2
  416358:	sbb    eax,0x67f60e74
  41635d:	push   esp
  41635e:	outs   dx,BYTE PTR ds:[esi]
  41635f:	lea    eax,[edx+0x2e]
  416362:	popf   
  416363:	(bad)  
  416364:	mov    ds,WORD PTR [ebx-0x58]
  416367:	jbe    0x4163c4
  416369:	cs pop esi
  41636b:	or     al,0xdf
  41636d:	xchg   ecx,eax
  41636e:	inc    cl
  416370:	lods   eax,DWORD PTR ds:[esi]
  416371:	mov    ecx,0xe4f0934
  416376:	mov    ebp,ebx
  416378:	mov    ah,0xa4
  41637a:	out    0xe5,al
  41637c:	pusha  
  41637d:	inc    eax
  41637e:	xor    DWORD PTR [ecx+0x4b060cd],edx
  416384:	jmp    FWORD PTR [ebx-0x35]
  416387:	sti    
  416388:	push   edi
  416389:	push   edi
  41638a:	popw   es
  41638c:	cmp    DWORD PTR [edx],ecx
  41638e:	inc    ebp
  41638f:	xor    bh,BYTE PTR ds:0xe5ac65d3
  416395:	push   esp
  416396:	cmc    
  416397:	adc    DWORD PTR [ebp-0x5c],eax
  41639a:	and    al,0xd3
  41639c:	jecxz  0x416408
  41639e:	sahf   
  41639f:	imul   edx,DWORD PTR [ecx],0xffffff8d
  4163a2:	xor    ah,0xe
  4163a5:	sub    eax,0x53670f55
  4163aa:	sbb    DWORD PTR [ecx-0x2f],esp
  4163ad:	rcl    BYTE PTR [edi-0x45],0xfa
  4163b1:	sbb    eax,0xe9caca20
  4163b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163b7:	sahf   
  4163b8:	shl    BYTE PTR [ebx+0x6b],1
  4163bb:	lods   al,BYTE PTR ds:[esi]
  4163bc:	arpl   WORD PTR [edi-0x7c],dx
  4163bf:	mov    ebp,0xc60d6634
  4163c4:	jecxz  0x4163c5
  4163c6:	or     al,0xe3
  4163c8:	call   0xf225:0x21864967
  4163cf:	jo     0x4163dc
  4163d1:	pop    ds
  4163d2:	mov    al,0xad
  4163d4:	jmp    FWORD PTR [edi]
  4163d6:	pop    ecx
  4163d7:	mov    ecx,0x8e8d3a32
  4163dc:	jne    0x416441
  4163de:	mov    WORD PTR [eax],es
  4163e0:	and    DWORD PTR [edi],ebp
  4163e2:	dec    ecx
  4163e3:	pop    edi
  4163e4:	push   ecx
  4163e5:	cli    
  4163e6:	add    ah,BYTE PTR [ecx-0x77ebe58f]
  4163ec:	stos   BYTE PTR es:[edi],al
  4163ed:	jo     0x4163f5
  4163ef:	ja     0x4163de
  4163f1:	and    DWORD PTR [ebx+0x4a],0xded863de
  4163f8:	push   ds
  4163f9:	dec    eax
  4163fa:	cmc    
  4163fb:	xchg   ecx,eax
  4163fc:	pop    ss
  4163fd:	mov    ds:0x32beadf8,al
  416402:	mov    ds,WORD PTR [eax]
  416404:	cmp    al,BYTE PTR [ecx]
  416406:	inc    esp
  416407:	dec    ecx
  416408:	loop   0x416427
  41640a:	bound  eax,QWORD PTR [edx-0x47]
  41640d:	repz xor eax,0x9361f87c
  416413:	popa   
  416414:	stc    
  416415:	pop    ebx
  416416:	push   esp
  416417:	dec    eax
  416418:	lahf   
  416419:	lea    edx,[ebx]
  41641b:	stos   DWORD PTR es:[edi],eax
  41641c:	mov    ah,0x4a
  41641e:	cmp    al,0x18
  416420:	ins    BYTE PTR es:[edi],dx
  416421:	mov    ds:0x425e8c9b,al
  416426:	pop    esi
  416427:	cmc    
  416428:	mov    WORD PTR ds:[esi],?
  41642b:	mov    edx,0x5ed5ae98
  416430:	repz xchg ebp,eax
  416432:	lds    ebp,FWORD PTR [edi+0x625165a4]
  416438:	pop    edx
  416439:	(bad)  [ebx]
  41643b:	int3   
  41643c:	rol    DWORD PTR [edx+0x5],1
  41643f:	xchg   ebp,eax
  416440:	or     DWORD PTR [edi-0x1f87a8c2],edx
  416446:	push   ds
  416447:	out    dx,eax
  416448:	test   al,0xa6
  41644a:	push   esi
  41644b:	push   ecx
  41644c:	adc    BYTE PTR [esi-0x4ffbb8b7],dl
  416452:	pushf  
  416453:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416454:	pop    eax
  416455:	jg     0x4163ef
  416457:	inc    esp
  416458:	dec    ecx
  416459:	sbb    eax,0xe773359
  41645e:	xchg   BYTE PTR ds:0xf5feb074,ah
  416464:	and    DWORD PTR [edi],ecx
  416466:	(bad)  
  416468:	mov    dh,0x5d
  41646a:	leave  
  41646b:	xor    eax,0x58309af0
  416470:	aam    0xe
  416472:	(bad)  
  416473:	fstp   TBYTE PTR [ebp-0x41]
  416476:	loop   0x4164f2
  416478:	js     0x416452
  41647a:	add    BYTE PTR [esi],ah
  41647c:	je     0x416463
  41647e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41647f:	mov    ds:0x1a17951e,al
  416484:	push   esi
  416485:	pop    esp
  416486:	into   
  416487:	mov    bh,0x9
  416489:	and    ebp,edx
  41648b:	dec    ebp
  41648c:	xor    esi,DWORD PTR [ebx]
  41648e:	test   BYTE PTR [ebp+0x1a9bd96f],ah
  416494:	(bad)  
  416495:	sub    al,0xa6
  416497:	jmp    0x416515
  416499:	mov    esi,0x819d640e
  41649e:	and    eax,0x8fbbea3c
  4164a3:	pop    eax
  4164a4:	pop    ebx
  4164a5:	xchg   edx,eax
  4164a6:	pop    esi
  4164a7:	pop    edx
  4164a8:	sub    BYTE PTR [eax],ch
  4164aa:	arpl   WORD PTR [esi+0x63],dx
  4164ad:	fstp   DWORD PTR [eax-0x62093621]
  4164b3:	or     eax,0xc11fa232
  4164b8:	cli    
  4164b9:	ror    DWORD PTR ds:0x7fe8c90a,cl
  4164bf:	popf   
  4164c0:	nop
  4164c1:	bound  edi,QWORD PTR [edx-0x1]
  4164c4:	or     eax,DWORD PTR [esi]
  4164c6:	push   ebp
  4164c7:	add    al,0x96
  4164c9:	(bad)  
  4164ca:	ss xchg ebx,esi
  4164cd:	in     eax,dx
  4164ce:	int3   
  4164cf:	mov    cl,0x5
  4164d1:	lahf   
  4164d2:	popa   
  4164d3:	sbb    al,BYTE PTR [edi+0x22ec2f70]
  4164d9:	add    DWORD PTR [ecx-0x9],edi
  4164dc:	mov    bh,0x6f
  4164de:	xchg   ebx,eax
  4164df:	adc    BYTE PTR [ebp+0x24b33bc8],ah
  4164e5:	es shl eax,cl
  4164e8:	sbb    eax,0x7f811ac9
  4164ed:	leave  
  4164ee:	fmul   QWORD PTR [ecx+eax*2]
  4164f1:	mov    ah,0x36
  4164f3:	jns    0x416486
  4164f5:	inc    esp
  4164f6:	xchg   ebp,eax
  4164f7:	xchg   DWORD PTR [ebx-0x47],edi
  4164fa:	xchg   ebx,eax
  4164fb:	fcomp  DWORD PTR [ebx+0x16]
  4164fe:	in     eax,0xbc
  416500:	std    
  416501:	push   ebp
  416502:	pop    edi
  416503:	push   ebx
  416504:	mov    dh,0xd9
  416506:	loope  0x416535
  416508:	in     eax,dx
  416509:	add    bh,al
  41650b:	fbstp  TBYTE PTR [eax+0x5239e671]
  416511:	dec    ebp
  416512:	xor    BYTE PTR [ebx-0x1953a637],dl
  416518:	mov    ecx,0xa34439e
  41651d:	pop    edi
  41651e:	pop    ebx
  41651f:	mov    esi,0x6015de2e
  416524:	ret    0x1ac5
  416527:	pop    ecx
  416528:	push   esp
  416529:	sub    ch,BYTE PTR [ebp+0x890af7b]
  41652f:	xchg   edi,eax
  416530:	jae    0x416516
  416532:	es or  al,0x2f
  416535:	inc    esi
  416536:	and    al,0x32
  416538:	clc    
  416539:	mov    al,BYTE PTR [eax+0x3cd6351d]
  41653f:	scas   eax,DWORD PTR es:[edi]
  416540:	mov    edi,0x2f7eb9ce
  416545:	icebp  
  416546:	mov    al,ds:0x533f3122
  41654b:	jns    0x4164fd
  41654d:	push   esp
  41654e:	pop    ebx
  41654f:	or     esp,ebx
  416551:	outs   dx,DWORD PTR ds:[esi]
  416552:	and    BYTE PTR [ecx+0x49],bl
  416555:	cmc    
  416556:	xor    dh,cl
  416558:	adc    ebp,DWORD PTR [esp+edi*1-0x5d78525]
  41655f:	(bad)  
  416560:	pop    ds
  416561:	sahf   
  416562:	jbe    0x41655b
  416564:	or     al,0x5a
  416566:	pusha  
  416567:	stos   DWORD PTR es:[edi],eax
  416568:	pop    eax
  416569:	xchg   esp,eax
  41656a:	mov    al,ds:0x4eec979d
  41656f:	loop   0x41655a
  416571:	xor    esi,DWORD PTR [esi]
  416573:	adc    bl,BYTE PTR [ecx+0x43]
  416576:	xchg   DWORD PTR [ebx],ebp
  416578:	mov    eax,0x8708b7f6
  41657e:	rol    ecx,1
  416580:	sbb    al,0xef
  416582:	mov    dh,0xa3
  416584:	std    
  416585:	mov    ds:0x5515a74f,eax
  41658a:	jne    0x4165da
  41658c:	icebp  
  41658d:	xor    esi,DWORD PTR [eax]
  41658f:	mov    WORD PTR [edx+eax*2+0xcf6ea43],ds
  416596:	daa    
  416597:	fxch   st(2)
  416599:	sub    eax,0x2a151eb7
  41659e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41659f:	nop
  4165a0:	jns    0x4165a6
  4165a2:	retf   
  4165a3:	add    eax,0x45018aed
  4165a8:	dec    ecx
  4165a9:	fist   DWORD PTR [edi+ebp*1+0x71]
  4165ad:	in     al,0x34
  4165af:	cmp    ebx,DWORD PTR [esi+0x13]
  4165b2:	arpl   WORD PTR [esi+esi*4+0x5d564cc8],si
  4165b9:	and    eax,0xf3f1308f
  4165be:	ror    bl,cl
  4165c0:	inc    esi
  4165c1:	dec    eax
  4165c2:	loope  0x4165c3
  4165c4:	dec    esp
  4165c5:	inc    esp
  4165c6:	(bad)  
  4165c7:	sbb    ebp,DWORD PTR [ecx-0x3]
  4165ca:	stos   DWORD PTR es:[edi],eax
  4165cb:	push   ebx
  4165cc:	jle    0x4165e9
  4165ce:	cmp    eax,0xf7535843
  4165d3:	cmp    bh,BYTE PTR [esi]
  4165d5:	or     bh,BYTE PTR [ebx]
  4165d7:	inc    ebx
  4165d8:	rol    BYTE PTR [ebx+ebp*2+0x13429564],1
  4165df:	jns    0x416572
  4165e1:	fimul  DWORD PTR [eax-0x3231528c]
  4165e7:	sbb    ecx,DWORD PTR [ebp-0x51e229ca]
  4165ed:	and    eax,0x4283af74
  4165f2:	push   0x37c235ef
  4165f7:	outs   dx,DWORD PTR ds:[esi]
  4165f8:	and    BYTE PTR [eax],bh
  4165fa:	push   cs
  4165fb:	xor    bh,0x20
  4165fe:	(bad)  
  4165ff:	sbb    DWORD PTR [edi+0x5a26695e],esp
  416605:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416606:	sub    al,0x61
  416608:	add    al,0x6a
  41660a:	cmp    eax,0x49a1123e
  41660f:	sbb    DWORD PTR [esi-0x4c873bec],edx
  416615:	leave  
  416616:	xchg   esp,eax
  416617:	jmp    0x416665
  416619:	mov    eax,ds:0x10779d8b
  41661e:	test   DWORD PTR [esi-0x42],edx
  416621:	daa    
  416622:	pop    eax
  416623:	push   ss
  416624:	cmp    eax,0x34b6b05f
  416629:	clc    
  41662a:	add    cl,0x46
  41662d:	cwde   
  41662e:	dec    ebp
  41662f:	and    eax,0x6ea72068
  416634:	lods   eax,DWORD PTR ds:[esi]
  416635:	sti    
  416636:	mov    ebx,0x9d3a8344
  41663b:	stos   BYTE PTR es:[edi],al
  41663c:	and    ah,BYTE PTR [edi]
  41663e:	sar    esp,0x1f
  416641:	lods   eax,DWORD PTR ds:[esi]
  416642:	daa    
  416643:	(bad)  
  416647:	aam    0xc8
  416649:	push   edx
  41664a:	ret    
  41664b:	jnp    0x416640
  41664d:	cmp    cl,BYTE PTR ds:0xd6911bf9
  416653:	fmul   QWORD PTR [eax]
  416655:	fcom   QWORD PTR [edx-0x1b962d10]
  41665b:	inc    edx
  41665c:	or     al,0xb0
  41665e:	mov    WORD PTR [ecx-0x47],fs
  416661:	xor    ebp,ebx
  416663:	cmp    BYTE PTR [edx+eiz*2+0x66],dh
  416667:	jmp    0x48a7:0xffc3c53
  41666e:	pop    esp
  41666f:	inc    ecx
  416670:	adc    cl,BYTE PTR [esi+edx*2+0x2]
  416674:	pop    eax
  416675:	arpl   WORD PTR [edx],dx
  416677:	inc    ebx
  416678:	aad    0x47
  41667a:	push   0x393420c2
  41667f:	cmp    cl,BYTE PTR [ecx+0x552c9593]
  416685:	retf   0xe8b3
  416688:	pop    esi
  416689:	cmp    BYTE PTR [esi-0x72660333],cl
  41668f:	fmul   DWORD PTR [ebp-0x59]
  416692:	xchg   esi,eax
  416693:	inc    edi
  416694:	cmp    BYTE PTR [ecx-0x316ef9af],al
  41669a:	mov    eax,0xa7d4d340
  41669f:	in     al,dx
  4166a0:	jp     0x416708
  4166a2:	xlat   BYTE PTR ds:[ebx]
  4166a3:	pop    esi
  4166a4:	into   
  4166a5:	pop    edi
  4166a6:	adc    DWORD PTR [ecx+0x3d94e95f],esp
  4166ac:	cwde   
  4166ad:	pop    es
  4166ae:	sub    BYTE PTR [edx+0x7fa58bb9],bh
  4166b4:	cmp    DWORD PTR [eax-0x2b],ecx
  4166b7:	mov    al,ds:0x5efb6199
  4166bc:	pop    esp
  4166bd:	ret    
  4166be:	sbb    BYTE PTR [edx],0x97
  4166c1:	addr16 xchg edi,eax
  4166c3:	inc    ecx
  4166c4:	jno    0x4166de
  4166c6:	add    al,0x17
  4166c8:	mov    ah,0x5
  4166ca:	dec    ebx
  4166cb:	bnd jge 0x4166ba
  4166ce:	out    dx,al
  4166cf:	cli    
  4166d0:	inc    ebp
  4166d1:	pop    esi
  4166d2:	fidiv  DWORD PTR [eax-0x2]
  4166d5:	es out 0xc0,al
  4166d8:	adc    al,0x4a
  4166da:	sbb    BYTE PTR [ebp-0xa],dl
  4166dd:	repnz sub al,0xc
  4166e0:	arpl   WORD PTR [ebx+0x30171a4c],cx
  4166e6:	out    0xc4,al
  4166e8:	cmp    DWORD PTR [edx-0x49],edx
  4166eb:	popa   
  4166ec:	cpuid  
  4166ee:	pop    esp
  4166ef:	cwde   
  4166f0:	in     eax,dx
  4166f1:	mov    ds:0x3dd9abaa,eax
  4166f6:	xlat   BYTE PTR ds:[ebx]
  4166f7:	pop    edi
  4166f8:	add    esp,ebx
  4166fa:	retf   
  4166fb:	xchg   edi,eax
  4166fc:	iret   
  4166fd:	cmp    BYTE PTR [edi+0x3b64eefd],al
  416703:	mov    eax,ds:0xdfeec615
  416708:	(bad)  
  41670a:	mov    esi,0x910e6bc5
  41670f:	scas   eax,DWORD PTR es:[edi]
  416710:	es push ebx
  416712:	cmc    
  416713:	add    esp,edi
  416715:	retf   0xbbd9
  416718:	jecxz  0x416720
  41671a:	retf   0x4ec5
  41671d:	pop    esi
  41671e:	cmp    DWORD PTR [eax],edi
  416720:	jp     0x4166e8
  416722:	fld    QWORD PTR [ebx-0x6d7073d0]
  416728:	dec    edx
  416729:	loop   0x416765
  41672b:	hlt    
  41672c:	aaa    
  41672d:	ja     0x416751
  41672f:	test   DWORD PTR [edi-0xd],0x56599999
  416736:	outs   dx,BYTE PTR ds:[esi]
  416737:	inc    ecx
  416738:	fbld   TBYTE PTR [eax+0x47]
  41673b:	jnp    0x4166f8
  41673d:	dec    esi
  41673e:	sbb    dh,al
  416740:	lds    ebp,FWORD PTR [edx]
  416742:	sub    eax,ebp
  416744:	dec    ecx
  416745:	adc    BYTE PTR [edx-0x7f],bh
  416748:	dec    ebp
  416749:	jns    0x416755
  41674b:	outs   dx,DWORD PTR ds:[esi]
  41674c:	jo     0x416707
  41674e:	mov    dl,0x9e
  416750:	retf   0xc0f5
  416753:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416754:	adc    BYTE PTR ds:0x311f7555,0x2b
  41675b:	vpunpcklqdq ymm1,ymm6,YMMWORD PTR [edi-0x5f]
  416760:	dec    ecx
  416761:	pop    esp
  416762:	jno    0x41676c
  416764:	cmp    eax,0x5de06f02
  416769:	or     bl,BYTE PTR [ebp+0x57903092]
  41676f:	cli    
  416770:	mov    esp,0x968081c
  416775:	in     al,0xcb
  416777:	mov    esi,0xc74c8a7d
  41677c:	xlat   BYTE PTR ds:[ebx]
  41677d:	and    al,0x79
  41677f:	stos   DWORD PTR es:[edi],eax
  416780:	inc    eax
  416781:	mov    WORD PTR [eax-0xcfdd77b],fs
  416787:	imul   eax,DWORD PTR [edx+0x83f53af],0xd3d968a4
  416791:	xchg   DWORD PTR [esi],esi
  416793:	adc    BYTE PTR [edi+0x5e],al
  416796:	mov    WORD PTR [esi-0x44],cs
  416799:	cs push esi
  41679b:	(bad)  
  41679c:	sahf   
  41679d:	(bad)  
  41679e:	lock scas eax,DWORD PTR es:[edi]
  4167a0:	add    eax,0xb0c6128
  4167a5:	push   ebp
  4167a6:	repz (bad) 
  4167a8:	xor    eax,0x3ce2c94f
  4167ad:	cld    
  4167ae:	dec    ecx
  4167af:	xor    al,dh
  4167b1:	aad    0x1e
  4167b3:	fisttp WORD PTR [ebx]
  4167b5:	mov    dl,BYTE PTR [eax-0x3a34ce58]
  4167bb:	jl     0x41679c
  4167bd:	xor    al,al
  4167bf:	mov    esi,0xc93a54e9
  4167c4:	or     bl,ch
  4167c6:	fisub  DWORD PTR [ebx]
  4167c8:	dec    edi
  4167c9:	test   ah,ch
  4167cb:	push   0xb5695135
  4167d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167d1:	or     BYTE PTR [edi+0x6b3de638],al
  4167d7:	stos   BYTE PTR es:[edi],al
  4167d8:	jecxz  0x4167be
  4167da:	add    BYTE PTR ds:0x967932b3,dh
  4167e0:	stc    
  4167e1:	jbe    0x416800
  4167e3:	inc    ecx
  4167e4:	inc    ecx
  4167e5:	sbb    al,0xd
  4167e7:	sbb    DWORD PTR [edx+0x3e9ccbaa],eax
  4167ed:	xor    edx,DWORD PTR ds:0x611b8a
  4167f3:	mov    ch,0xd3
  4167f5:	clc    
  4167f6:	icebp  
  4167f7:	inc    edx
  4167f8:	stos   BYTE PTR es:[edi],al
  4167f9:	aad    0xb5
  4167fb:	mov    ebx,0x16183261
  416800:	ret    
  416801:	pop    ebx
  416802:	and    BYTE PTR [edi-0x3f65ce97],bl
  416808:	jmp    0xc0cc:0xc79f1181
  41680f:	mov    eax,ds:0xc04ae2cc
  416814:	xor    DWORD PTR [ebx-0x79],eax
  416817:	stos   BYTE PTR es:[edi],al
  416818:	jg     0x41685d
  41681a:	stc    
  41681b:	sub    BYTE PTR [edi-0x53],0x83
  41681f:	sahf   
  416820:	mov    ebp,0x8bdc597a
  416825:	xchg   esp,eax
  416826:	dec    ebx
  416827:	mov    eax,ds:0x4a004423
  41682c:	and    ebx,DWORD PTR [ecx]
  41682e:	pop    eax
  41682f:	vaddsubps xmm2,xmm3,XMMWORD PTR [edi+0x242d0718]
  416837:	mov    esi,gs
  416839:	mov    ds:0xe4f0188c,al
  41683e:	xor    eax,0x48f56ace
  416843:	aas    
  416844:	icebp  
  416845:	or     BYTE PTR [edi-0x7c],0x95
  416849:	adc    ebp,eax
  41684b:	scas   al,BYTE PTR es:[edi]
  41684c:	xor    ch,BYTE PTR [edi-0x2d]
  41684f:	fadd   QWORD PTR fs:[ecx+0x2263a08d]
  416856:	dec    edi
  416857:	addr16 je 0x4168a2
  41685a:	std    
  41685b:	dec    ebx
  41685c:	xor    bl,BYTE PTR [eax+0xb]
  41685f:	pop    es
  416860:	xor    ecx,eax
  416862:	mov    eax,ds:0x859e9c40
  416867:	jns    0x416850
  416869:	imul   ebp,DWORD PTR [ebx],0x60d9402a
  41686f:	jo     0x41688e
  416871:	shl    DWORD PTR [edi+0x593d587d],1
  416877:	adc    al,0xa1
  416879:	sti    
  41687a:	xor    bl,dh
  41687c:	retf   0xaed7
  41687f:	push   ebx
  416880:	mov    eax,ds:0xb7a9de27
  416885:	mov    cl,al
  416887:	test   al,0x81
  416889:	cdq    
  41688a:	mov    ah,dl
  41688c:	popa   
  41688d:	xor    bh,BYTE PTR [edi+eax*8]
  416890:	and    edx,DWORD PTR [edx]
  416892:	sahf   
  416893:	inc    esi
  416894:	pop    ebp
  416895:	rcl    BYTE PTR [esi],cl
  416897:	push   esp
  416898:	ins    DWORD PTR es:[edi],dx
  416899:	ds ret 0x8b93
  41689d:	je     0x4168e2
  41689f:	mov    WORD PTR [ebp+edi*1-0x30],fs
  4168a3:	mov    eax,0xce6d6a3e
  4168a8:	dec    ebp
  4168a9:	mov    DWORD PTR [esi+0x39],eax
  4168ac:	lock jl 0x416846
  4168af:	xor    dh,BYTE PTR [ecx]
  4168b1:	repz loope 0x41686d
  4168b4:	retf   
  4168b5:	sub    BYTE PTR [esi],al
  4168b7:	fwait
  4168b8:	retf   0x8982
  4168bb:	std    
  4168bc:	add    al,BYTE PTR ds:0xc4f67dbe
  4168c2:	jle    0x4168b9
  4168c4:	mov    ebp,0xb050016b
  4168c9:	push   ss
  4168ca:	and    eax,0x376057c1
  4168cf:	adc    ebp,esi
  4168d1:	popf   
  4168d2:	hlt    
  4168d3:	adc    dl,BYTE PTR [esi]
  4168d5:	mov    al,ds:0xaf54802b
  4168da:	daa    
  4168db:	sar    DWORD PTR [edi],cl
  4168dd:	test   eax,0xe4bd322a
  4168e2:	ds int 0x24
  4168e5:	mov    ebx,0xf3d04d59
  4168ea:	sub    al,0x21
  4168ec:	push   esi
  4168ed:	xchg   DWORD PTR [edi-0x6460c64f],esi
  4168f3:	cmp    BYTE PTR ds:0x76dfe5a5,dl
  4168f9:	jle    0x416963
  4168fb:	call   0x233941f
  416900:	jecxz  0x4168cd
  416902:	stc    
  416903:	jns    0x4168db
  416905:	mov    dh,0xe1
  416907:	popf   
  416908:	lock dec ecx
  41690a:	xchg   esi,eax
  41690b:	jb     0x416917
  41690d:	lahf   
  41690e:	mov    al,0xe5
  416910:	push   0x28822ce7
  416915:	push   edi
  416916:	add    ebx,DWORD PTR [eax+0x41]
  416919:	add    BYTE PTR [edi-0xb1b8ac5],bh
  41691f:	out    dx,eax
  416920:	cwde   
  416921:	(bad)  
  416922:	jns    0x416972
  416924:	shl    BYTE PTR [ebx-0x3d],1
  416927:	sti    
  416928:	addr16 rol esp,1
  41692b:	ja     0x41690d
  41692d:	shl    DWORD PTR [esi+0x4cba1490],1
  416933:	test   ebp,ebx
  416935:	pusha  
  416936:	sbb    al,0xfc
  416938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416939:	lods   al,BYTE PTR ds:[esi]
  41693a:	jmp    0xbfad2b79
  41693f:	mov    ebp,DWORD PTR [edx+edi*8+0x45]
  416943:	sbb    BYTE PTR [bx+0xaf1],ch
  416948:	stos   DWORD PTR es:[edi],eax
  416949:	dec    ebp
  41694a:	aad    0x1
  41694c:	mov    ebp,0x792b80e9
  416951:	inc    eax
  416952:	outs   dx,BYTE PTR ds:[esi]
  416953:	pop    ebp
  416954:	out    dx,eax
  416955:	retf   0xc403
  416958:	mov    bl,0x62
  41695a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41695b:	(bad)  
  41695c:	dec    eax
  41695d:	inc    edx
  41695e:	sub    edi,DWORD PTR [ebx]
  416960:	sub    BYTE PTR [eax-0x6b],bl
  416963:	ds xor ecx,edx
  416966:	int3   
  416967:	test   eax,0x20ce3333
  41696c:	push   es
  41696d:	out    dx,eax
  41696e:	and    dl,BYTE PTR [edi+0x740b1bbb]
  416974:	mov    bh,0xa
  416976:	addr16 daa 
  416978:	jg     0x4169e0
  41697a:	add    ecx,DWORD PTR ds:0x18953caa
  416980:	mov    eax,0xb4ed2219
  416985:	push   edi
  416986:	push   ss
  416987:	adc    BYTE PTR [ebx+0x6ae169c1],cl
  41698d:	jmp    0x4169c1
  41698f:	push   ds
  416990:	mov    dl,0x21
  416992:	add    DWORD PTR [edi+edi*2],ebp
  416995:	in     eax,dx
  416996:	test   DWORD PTR [ebp+0x1cdb2660],ebp
  41699c:	test   eax,0x63ffedc5
  4169a1:	lods   eax,DWORD PTR ds:[esi]
  4169a2:	pop    eax
  4169a3:	jg     0x4169fa
  4169a5:	cli    
  4169a6:	repz out 0xc,al
  4169a9:	sbb    esp,edx
  4169ab:	popa   
  4169ac:	jmp    0x6c410599
  4169b1:	push   esp
  4169b2:	xchg   ecx,eax
  4169b3:	outs   dx,DWORD PTR ds:[esi]
  4169b4:	in     al,0x2d
  4169b6:	mov    eax,0x46609965
  4169bb:	pop    esp
  4169bc:	fld    DWORD PTR [ecx+ebx*1-0x7a54b637]
  4169c3:	dec    ecx
  4169c4:	(bad)  
  4169c5:	jmp    ebx
  4169c7:	xor    eax,0x1932341a
  4169cc:	dec    ebp
  4169cd:	cli    
  4169ce:	leave  
  4169cf:	inc    eax
  4169d0:	mov    al,ds:0x6e4bba7e
  4169d5:	mov    ecx,0xecbffb43
  4169da:	(bad)  
  4169db:	arpl   WORD PTR [ebx],ax
  4169dd:	cmova  edx,edx
  4169e0:	jbe    0x4169a1
  4169e2:	xchg   ebx,eax
  4169e3:	sub    eax,0xd2884d7a
  4169e8:	sbb    esi,ebx
  4169ea:	in     al,dx
  4169eb:	(bad)  
  4169ec:	fadd   QWORD PTR [ecx-0x1e]
  4169ef:	xchg   esi,eax
  4169f0:	pop    es
  4169f1:	arpl   WORD PTR [edx],di
  4169f3:	test   eax,0x9ca2d265
  4169f8:	xor    eax,ecx
  4169fa:	sub    DWORD PTR ds:0x682cc998,0xa3071de1
  416a04:	or     al,0x13
  416a06:	sbb    al,0xde
  416a08:	scas   al,BYTE PTR es:[edi]
  416a09:	outs   dx,BYTE PTR ds:[esi]
  416a0a:	sti    
  416a0b:	pop    esp
  416a0c:	jle    0x416a88
  416a0e:	jecxz  0x4169a0
  416a10:	mov    dl,0x65
  416a12:	jle    0x416a85
  416a14:	jno    0x416a4e
  416a16:	es sbb cl,bh
  416a19:	push   ebp
  416a1a:	mov    dh,BYTE PTR [edi-0x4d208f04]
  416a20:	shl    DWORD PTR [ecx-0x3c],1
  416a23:	jb     0x416a0c
  416a25:	inc    DWORD PTR [edx+0x76]
  416a28:	inc    ebx
  416a29:	mov    bl,0xe5
  416a2b:	in     al,0x63
  416a2d:	repnz mov ebp,0x9d433bc9
  416a33:	(bad)  
  416a34:	push   ebx
  416a35:	xchg   edi,eax
  416a36:	xor    DWORD PTR [eax-0x52862394],ebx
  416a3c:	sar    BYTE PTR [esi],1
  416a3e:	jge    0x416a4c
  416a40:	sub    al,ah
  416a42:	xchg   esp,eax
  416a43:	mov    ah,0x7f
  416a45:	jl     0x416a5c
  416a47:	or     BYTE PTR [eax+0x52054f42],ah
  416a4d:	sub    al,0xf7
  416a4f:	call   0xb42f9b70
  416a54:	pop    es
  416a55:	sub    al,0x7c
  416a57:	or     ebx,edi
  416a59:	inc    edi
  416a5a:	aaa    
  416a5b:	gs cmc 
  416a5d:	cmc    
  416a5e:	bound  ebx,QWORD PTR [esi-0x80]
  416a61:	pop    ss
  416a62:	push   ss
  416a63:	mov    ds:0x306eb5f4,eax
  416a68:	cmp    edx,DWORD PTR [edi]
  416a6a:	adc    edi,DWORD PTR ss:0xd03a3a5f
  416a71:	mov    eax,0x471d3b67
  416a76:	fisubr WORD PTR [edx-0x5d]
  416a79:	ins    DWORD PTR es:[edi],dx
  416a7a:	sub    eax,0xa1a9e0b9
  416a7f:	clc    
  416a80:	push   cs
  416a81:	test   BYTE PTR [esi+0x391746ba],0x5e
  416a88:	mov    ebp,0x853d8c60
  416a8d:	add    ch,BYTE PTR [ebp-0x7c]
  416a90:	les    edx,FWORD PTR [esi]
  416a92:	inc    esp
  416a93:	arpl   WORD PTR [edi-0x3126238],sp
  416a99:	sub    edx,edx
  416a9b:	mov    gs,WORD PTR [edx+0x407adff]
  416aa1:	xor    DWORD PTR [edi+0x1f59496],ebp
  416aa7:	jge    0x416a8b
  416aa9:	(bad)  
  416aaa:	pushf  
  416aab:	mov    eax,0x2460a888
  416ab0:	ja     0x416ac9
  416ab2:	xor    BYTE PTR [edx-0x6b9f7bd3],ch
  416ab8:	sub    eax,0xf9c14b69
  416abd:	ror    BYTE PTR [edi-0x1dcc149a],cl
  416ac3:	xor    DWORD PTR [edx+0x7b],ebx
  416ac6:	arpl   WORD PTR [ebx+0x70],bp
  416ac9:	stc    
  416aca:	scas   al,BYTE PTR es:[edi]
  416acb:	inc    esi
  416acc:	pop    ss
  416acd:	mov    ebx,0xf2e65ee9
  416ad2:	or     BYTE PTR ss:[ebx-0x550aaa4d],al
  416ad9:	mov    edi,0xb7e8d837
  416ade:	mov    ds:0xcf3a5103,eax
  416ae3:	in     al,0xe0
  416ae5:	add    DWORD PTR [edx+edi*4-0x7738c61d],0x4d2e4ece
  416af0:	sub    bh,BYTE PTR ds:0xee66d64f
  416af6:	fnstsw WORD PTR [ecx+0x5ac200f8]
  416afc:	in     eax,dx
  416afd:	push   0xaffc237b
  416b02:	(bad)  
  416b03:	retf   
  416b04:	rcl    BYTE PTR [ebp+0x6c1ea33d],cl
  416b0a:	out    dx,eax
  416b0b:	cli    
  416b0c:	aaa    
  416b0d:	test   al,0x24
  416b0f:	pop    esi
  416b10:	inc    edx
  416b11:	aam    0xd7
  416b13:	pop    ebp
  416b14:	add    BYTE PTR [ecx-0x7a],al
  416b17:	mov    ecx,0x41d72eac
  416b1c:	rcl    esi,1
  416b1e:	xor    al,0x7c
  416b20:	add    ch,cl
  416b22:	sbb    ah,BYTE PTR [eax]
  416b24:	jo     0x416ae4
  416b26:	test   eax,0x746fe089
  416b2b:	cmp    al,0xad
  416b2d:	mov    edx,0x1eeacfa
  416b32:	mov    eax,0x6d60e725
  416b37:	sbb    eax,esi
  416b39:	sbb    eax,0x2158a950
  416b3e:	mov    bl,0x2f
  416b40:	adc    ebp,DWORD PTR [esi+0x56]
  416b43:	pop    edi
  416b44:	data16 cli 
  416b46:	cld    
  416b47:	jmp    0xcb70d8e3
  416b4c:	mov    bh,0x9b
  416b4e:	cwde   
  416b4f:	jmp    0x83733733
  416b54:	push   es
  416b55:	pusha  
  416b56:	in     al,0x70
  416b58:	jg     0x416afc
  416b5a:	fcmovnbe st,st(0)
  416b5c:	inc    ebx
  416b5d:	bound  ebx,QWORD PTR [eax+ebp*2+0x5632662e]
  416b64:	xor    eax,0x3d883b87
  416b69:	jmp    0x416b40
  416b6b:	nop
  416b6c:	cwde   
  416b6d:	push   esp
  416b6e:	mov    WORD PTR [ecx+0x53],?
  416b71:	pop    esp
  416b72:	sub    al,0xc8
  416b74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b75:	in     al,0xea
  416b77:	ret    
  416b78:	mov    ds,esp
  416b7a:	dec    edx
  416b7b:	ret    0xc46d
  416b7e:	mov    cl,0x54
  416b80:	xor    DWORD PTR [edi+0x2b],edx
  416b83:	and    DWORD PTR [ebx+0x1b],edx
  416b86:	scas   eax,DWORD PTR es:[edi]
  416b87:	fidivr DWORD PTR [esi-0x12]
  416b8a:	sar    BYTE PTR [eax-0x3b],cl
  416b8d:	mov    ebx,0x3d7071f7
  416b92:	pop    ds
  416b93:	inc    edi
  416b94:	jg     0x416b9f
  416b96:	push   0xfffffff3
  416b98:	or     DWORD PTR [ebp+0x3f],0xffffffcc
  416b9c:	scas   eax,DWORD PTR es:[edi]
  416b9d:	add    BYTE PTR ss:[eax],dh
  416ba0:	rcl    ebx,0x10
  416ba3:	mov    ebx,0x5526ca9a
  416ba8:	jmp    0x416c1f
  416baa:	test   DWORD PTR [ebx+0x7bd4c726],edx
  416bb0:	loopne 0x416c24
  416bb2:	fwait
  416bb3:	(bad)  
  416bb4:	or     eax,0x1fe64d64
  416bb9:	sub    al,0xcc
  416bbb:	adc    BYTE PTR [ecx-0x6e600572],0xce
  416bc2:	gs fdivr st(5),st
  416bc5:	mov    BYTE PTR [ebx+edi*8-0x52789bb7],ch
  416bcc:	sahf   
  416bcd:	jg     0x416b9d
  416bcf:	sbb    DWORD PTR [eax+0x45f3152c],edi
  416bd5:	leave  
  416bd6:	cmp    ebx,0x54c0b5e8
  416bdc:	xor    BYTE PTR [eax-0x439846b7],0x2e
  416be3:	mov    esp,0x9a0b8646
  416be8:	push   esp
  416be9:	jbe    0x416c36
  416beb:	cmp    ch,dl
  416bed:	stos   BYTE PTR es:[edi],al
  416bee:	(bad)  
  416bef:	mov    al,0xed
  416bf1:	or     BYTE PTR [edi+0x2d843c95],al
  416bf7:	loop   0x416beb
  416bf9:	retf   
  416bfa:	pop    ebx
  416bfb:	dec    esi
  416bfc:	add    DWORD PTR [eax+0x5c57014b],esi
  416c02:	mov    bh,0x73
  416c04:	sub    eax,DWORD PTR [ecx+0x6d]
  416c07:	shl    BYTE PTR [edx+0x6d],0x7c
  416c0b:	(bad)
  416c0e:	sbb    BYTE PTR [edx+esi*1],ch
  416c11:	lods   eax,DWORD PTR ds:[esi]
  416c12:	out    dx,eax
  416c13:	iret   
  416c14:	(bad)
  416c17:	daa    
  416c18:	iret   
  416c19:	adc    eax,0xa5da270f
  416c1e:	shl    BYTE PTR ss:[ecx+0x75234191],1
  416c25:	dec    ecx
  416c26:	test   al,0xe2
  416c28:	cli    
  416c29:	ins    BYTE PTR es:[edi],dx
  416c2a:	loopne 0x416c60
  416c2c:	inc    edi
  416c2d:	lds    ebp,FWORD PTR [bp+0x4acb]
  416c32:	push   esi
  416c33:	or     al,0xfb
  416c35:	stc    
  416c36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c38:	iret   
  416c39:	jmp    0x416c79
  416c3b:	mov    ebx,0x46755bee
  416c40:	sub    BYTE PTR [ecx+0x23],dl
  416c43:	xor    eax,0xffd8c2ba
  416c48:	outs   dx,DWORD PTR ds:[esi]
  416c49:	dec    esp
  416c4a:	push   eax
  416c4b:	aaa    
  416c4c:	(bad)  
  416c4d:	mov    al,0x3d
  416c4f:	cmp    al,0xe
  416c51:	jecxz  0x416c75
  416c53:	push   esp
  416c54:	sub    BYTE PTR ds:0x37bebc01,bh
  416c5a:	bound  esi,QWORD PTR [edx]
  416c5c:	std    
  416c5d:	lods   al,BYTE PTR ds:[esi]
  416c5e:	mov    DWORD PTR [eax+0x3452d743],eax
  416c64:	sub    BYTE PTR [edx+eax*1-0x3c],ch
  416c68:	shl    BYTE PTR [edi],cl
  416c6a:	and    al,BYTE PTR [edi]
  416c6c:	icebp  
  416c6d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c6f:	xor    ah,ah
  416c71:	mov    eax,0x924261ec
  416c76:	mov    WORD PTR [eax],cs
  416c78:	fcom   DWORD PTR [esp-0x29]
  416c7c:	push   ebx
  416c7d:	loope  0x416c07
  416c7f:	jno    0x416c01
  416c81:	setle  BYTE PTR [edi+edx*4+0x4c]
  416c86:	dec    ecx
  416c87:	pop    ebp
  416c88:	cdq    
  416c89:	sub    ah,BYTE PTR [edx+0x71]
  416c8c:	iret   
  416c8d:	xlat   BYTE PTR ds:[ebx]
  416c8e:	jmp    0xfbeaf387
  416c93:	pop    ecx
  416c94:	cs jp  0x416cac
  416c97:	cli    
  416c98:	stc    
  416c99:	xor    dh,dl
  416c9b:	jo     0x416ccc
  416c9d:	sbb    ebx,DWORD PTR [ebx-0x2b]
  416ca0:	xor    al,BYTE PTR [ebp+esi*4+0x15]
  416ca4:	bswap  esp
  416ca6:	lahf   
  416ca7:	gs dec ebp
  416ca9:	loop   0x416c89
  416cab:	xchg   edx,eax
  416cac:	jo     0x416cd0
  416cae:	mov    WORD PTR ds:0x69b6d520,?
  416cb4:	loope  0x416c7e
  416cb6:	and    eax,0x3f00a8d2
  416cbb:	add    al,0xf1
  416cbd:	mov    al,ds:0xab711a34
  416cc2:	retf   
  416cc3:	shl    BYTE PTR [ecx],0x17
  416cc6:	iret   
  416cc7:	addr16 mov ebx,0x25438d90
  416ccd:	(bad)  
  416cd1:	fisubr DWORD PTR [ebp+0x4b218f00]
  416cd7:	and    al,0x34
  416cd9:	ss push ss
  416cdb:	mov    ah,0xa
  416cdd:	sbb    ah,bh
  416cdf:	cli    
  416ce0:	xor    al,ch
  416ce2:	fcomp  DWORD PTR [ebx-0x5d]
  416ce5:	jp     0x416d1c
  416ce7:	pop    ecx
  416ce8:	cmp    al,0x8c
  416cea:	repnz leave 
  416cec:	dec    edx
  416ced:	(bad)  
  416cee:	push   ds
  416cef:	sbb    eax,0xa15d3fe6
  416cf4:	cmp    DWORD PTR [esi+0x22],edi
  416cf7:	fnstenv [edx]
  416cf9:	aaa    
  416cfa:	imul   edi,DWORD PTR [esi+0x7a],0x47ac3b01
  416d01:	sbb    eax,0x9d5370
  416d06:	mov    ebp,ebx
  416d08:	inc    esi
  416d09:	inc    eax
  416d0a:	outs   dx,DWORD PTR ds:[esi]
  416d0b:	sar    DWORD PTR ds:[edx+esi*8-0x36b2bcdf],cl
  416d13:	lds    edi,FWORD PTR [ebp+edi*2+0x21]
  416d17:	(bad)  [ecx+0xb0ac509]
  416d1d:	popf   
  416d1e:	add    ecx,ecx
  416d20:	xor    BYTE PTR [ebp-0x2c61e98c],0xaf
  416d27:	xor    ebp,DWORD PTR [edx-0x76c09d66]
  416d2d:	icebp  
  416d2e:	mov    dh,0xe0
  416d30:	sti    
  416d31:	pop    edx
  416d32:	adc    al,0x2e
  416d34:	add    DWORD PTR [eax-0x13cb9f3d],edx
  416d3a:	retf   
  416d3b:	dec    edx
  416d3c:	or     DWORD PTR [eax-0x37cba9d1],esp
  416d42:	ret    0x54c
  416d45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416d46:	dec    esp
  416d47:	cmp    al,0x16
  416d49:	out    0xeb,eax
  416d4b:	(bad)  [ebp-0x71]
  416d4e:	ss and al,0xeb
  416d51:	cmp    eax,0x5b
  416d54:	js     0x416dd2
  416d56:	test   eax,0x73ab973d
  416d5b:	xchg   edi,eax
  416d5c:	inc    esp
  416d5d:	loop   0x416d37
  416d5f:	mov    esp,0xee936fe2
  416d64:	fs xor dl,ah
  416d67:	cdq    
  416d68:	inc    ecx
  416d69:	ret    0xae89
  416d6c:	call   0xd574:0x93e5c46
  416d73:	mov    ah,0xf1
  416d75:	cmp    eax,0x43014cb7
  416d7a:	dec    ecx
  416d7b:	cmp    eax,0xc38ef2e4
  416d80:	inc    esi
  416d81:	repz cmp esi,DWORD PTR [edi+0x689d6006]
  416d88:	or     ecx,DWORD PTR [eax+0x7e79dd63]
  416d8e:	scas   al,BYTE PTR es:[edi]
  416d8f:	add    esp,0xfffffff3
  416d92:	repnz inc eax
  416d94:	jb     0x416d9e
  416d96:	setno  BYTE PTR [esi]
  416d99:	test   DWORD PTR [ebp-0x469f4002],eax
  416d9f:	scas   eax,DWORD PTR es:[edi]
  416da0:	add    eax,0xe815298f
  416da5:	sbb    al,BYTE PTR [esi-0x615c81c6]
  416dab:	inc    edx
  416dac:	xor    cl,BYTE PTR [ebp-0x795a5a78]
  416db2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416db3:	gs jno 0x416e1c
  416db6:	fldenv [esi+0x78]
  416db9:	mov    dh,0xf5
  416dbb:	adc    al,0x34
  416dbd:	mov    dl,0xa7
  416dbf:	push   ss
  416dc0:	adc    BYTE PTR [edi-0x26],bl
  416dc3:	cdq    
  416dc4:	push   0xffffff8e
  416dc6:	push   ss
  416dc7:	adc    dl,BYTE PTR [eax]
  416dc9:	inc    esi
  416dca:	sbb    cl,dl
  416dcc:	fstp   QWORD PTR [edx]
  416dce:	rcl    BYTE PTR [edx-0x4c565c7f],cl
  416dd4:	sub    eax,0xe060d4fb
  416dd9:	xchg   ecx,ecx
  416ddb:	add    BYTE PTR [ebp+0x45],dh
  416dde:	cdq    
  416ddf:	add    al,0xf4
  416de1:	ror    BYTE PTR [ecx+ecx*4],cl
  416de4:	lods   al,BYTE PTR ds:[esi]
  416de5:	outs   dx,BYTE PTR ds:[esi]
  416de6:	loop   0x416e2e
  416de8:	rcr    al,cl
  416dea:	jge    0x416e35
  416dec:	add    eax,0xfacf0032
  416df1:	mov    cl,0x6e
  416df3:	push   edi
  416df4:	pop    edx
  416df5:	adc    bh,cl
  416df7:	sahf   
  416df8:	shl    ch,1
  416dfa:	adc    DWORD PTR [eax-0x4f26472f],esp
  416e00:	fadd   QWORD PTR [edx-0x544d01be]
  416e06:	leave  
  416e07:	pop    eax
  416e08:	stos   DWORD PTR es:[edi],eax
  416e09:	iret   
  416e0a:	in     al,0x60
  416e0c:	outs   dx,DWORD PTR ds:[esi]
  416e0d:	pop    esi
  416e0e:	sub    al,0x9a
  416e10:	mov    al,ds:0x1564cdc2
  416e15:	ds mov esp,0x38c46269
  416e1b:	mov    ah,0x84
  416e1d:	xchg   ebx,eax
  416e1e:	inc    esi
  416e1f:	add    al,0x87
  416e21:	add    eax,DWORD PTR [ebx-0xe29457b]
  416e27:	push   esi
  416e28:	pop    es
  416e29:	sbb    al,BYTE PTR [esi]
  416e2b:	test   DWORD PTR ds:0x27b14212,esp
  416e31:	daa    
  416e32:	mov    cl,0xc4
  416e34:	sbb    ebp,DWORD PTR ds:[edx+0x53]
  416e38:	xlat   BYTE PTR ds:[ebx]
  416e39:	xchg   esp,eax
  416e3a:	cwde   
  416e3b:	(bad)  
  416e3c:	mov    esi,0x49a23df7
  416e41:	scas   eax,DWORD PTR es:[edi]
  416e42:	dec    esi
  416e43:	in     al,dx
  416e44:	rol    BYTE PTR [edi+0x1be28bc7],0x81
  416e4b:	mov    al,ds:0x66f13aa6
  416e50:	add    BYTE PTR [edi+0x59],dl
  416e53:	gs xchg ebp,eax
  416e55:	cmp    al,0x9f
  416e57:	push   ecx
  416e58:	fcmovnb st,st(2)
  416e5a:	aas    
  416e5b:	outs   dx,DWORD PTR ds:[esi]
  416e5c:	inc    ebp
  416e5d:	into   
  416e5e:	adc    BYTE PTR [ebp+0x20],cl
  416e61:	sub    DWORD PTR fs:[ebx-0x72],edx
  416e65:	inc    ebx
  416e66:	push   esp
  416e67:	push   ss
  416e68:	rol    ch,cl
  416e6a:	cmc    
  416e6b:	cmp    cl,dl
  416e6d:	mov    cl,0xec
  416e6f:	ds mov al,0x24
  416e72:	mov    ?,WORD PTR [ebp-0x60091052]
  416e78:	mov    ebx,0x120b8f8a
  416e7d:	xor    al,0xca
  416e7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e80:	push   eax
  416e81:	add    edx,DWORD PTR [ecx+0x4519ebe8]
  416e87:	mov    dl,0xd5
  416e89:	mov    bh,0xec
  416e8b:	xchg   BYTE PTR [ecx+0x66d98064],ah
  416e91:	stc    
  416e92:	(bad)  
  416e93:	sbb    cl,BYTE PTR [edi-0x6834151b]
  416e99:	enter  0x6829,0x24
  416e9d:	mov    edi,0xabe0d4c9
  416ea2:	clc    
  416ea3:	cmc    
  416ea4:	iret   
  416ea5:	mov    al,ds:0x932887f5
  416eaa:	call   0xad00:0x92a37c9d
  416eb1:	mov    ebp,0x985a8c25
  416eb6:	adc    DWORD PTR [edx],eax
  416eb8:	fidivr WORD PTR [esi]
  416eba:	aad    0x27
  416ebc:	add    BYTE PTR [edi+0x38],0x6a
  416ec0:	leave  
  416ec1:	jbe    0x416e79
  416ec3:	xchg   esp,eax
  416ec4:	xor    eax,0xa4416b59
  416ec9:	and    al,dl
  416ecb:	nop
  416ecc:	test   DWORD PTR [ebx+0x25db7b6e],esp
  416ed2:	mov    esi,0xebbd9918
  416ed7:	loop   0x416e9c
  416ed9:	hlt    
  416eda:	add    al,0xe0
  416edc:	jns    0x416e9b
  416ede:	push   es
  416edf:	adc    ebp,DWORD PTR [ebp+0xce04f51]
  416ee5:	sbb    edx,ebx
  416ee7:	push   edx
  416ee8:	mov    eax,0x2d16a18c
  416eed:	mov    ch,0xb5
  416eef:	mov    BYTE PTR [edi+0x6119ab28],ch
  416ef5:	fadd   DWORD PTR [esi]
  416ef7:	sti    
  416ef8:	pop    ebp
  416ef9:	and    BYTE PTR [esi],ch
  416efb:	fldcw  WORD PTR [ebx]
  416efd:	inc    eax
  416efe:	in     eax,0x31
  416f00:	xor    edx,eax
  416f02:	sub    ecx,edx
  416f04:	sub    ecx,esi
  416f06:	jmp    0x41928f
  416f0b:	adc    ah,BYTE PTR [edx+0xe708f7]
  416f11:	test   BYTE PTR [eax+0x9a72d6],bl
  416f17:	test   DWORD PTR [eax],ebx
  416f19:	sbb    eax,0x82409389
  416f1e:	adc    DWORD PTR [edi],0x5c
  416f21:	add    DWORD PTR [ebx-0x12f7a204],0xffffffa3
  416f28:	dec    edi
  416f29:	call   0xb90c91e4
  416f2e:	jmp    0x1a06:0x634e65fa
  416f35:	retf   0xbe7b
  416f38:	mov    dl,0xe5
  416f3a:	fstp   QWORD PTR [ebp+0x4e1a2b47]
  416f40:	aad    0x76
  416f42:	inc    ecx
  416f43:	jmp    0xf025:0xf09eccc4
  416f4a:	sub    DWORD PTR [eax-0x2e],0x7
  416f4e:	in     al,dx
  416f4f:	(bad)  
  416f51:	jb     0x416fc2
  416f53:	push   cs
  416f54:	test   edi,ecx
  416f56:	in     eax,dx
  416f57:	push   esp
  416f58:	or     DWORD PTR [ebx],0x3b633cd8
  416f5e:	repnz bound ebp,QWORD PTR [esi]
  416f61:	or     BYTE PTR [edi+0x20],cl
  416f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f65:	push   ebp
  416f66:	inc    esp
  416f67:	clc    
  416f68:	jne    0x416f61
  416f6a:	mov    al,0x1e
  416f6c:	inc    esp
  416f6d:	aas    
  416f6e:	mov    edx,0x27b3c928
  416f73:	sub    al,0xd
  416f76:	cs xor eax,0x2e882f08
  416f7c:	mov    al,0xda
  416f7e:	enter  0xfc09,0xa6
  416f82:	test   ah,al
  416f84:	test   eax,0x30c5ca2a
  416f89:	adc    al,BYTE PTR [eax+ebp*1]
  416f8c:	adc    edi,eax
  416f8e:	dec    edx
  416f8f:	jecxz  0x416fb9
  416f91:	cmp    al,0x85
  416f93:	rcl    bl,0x4
  416f96:	xchg   esp,eax
  416f97:	jns    0x416f2b
  416f99:	xchg   ebp,eax
  416f9a:	sub    dh,al
  416f9c:	xor    BYTE PTR [ecx+0x2d3383f3],bl
  416fa2:	frstor [edx-0x3a371027]
  416fa8:	pop    ecx
  416fa9:	ja     0x416f91
  416fab:	adc    eax,0xdd9584d9
  416fb0:	xchg   ecx,eax
  416fb1:	adc    BYTE PTR [ecx+ecx*8+0x5],cl
  416fb5:	push   es
  416fb6:	gs jb  0x416fca
  416fb9:	ins    DWORD PTR es:[edi],dx
  416fba:	push   esp
  416fbb:	arpl   WORD PTR [edx-0x3e],dx
  416fbe:	cmp    al,BYTE PTR [edx]
  416fc0:	push   eax
  416fc1:	xor    al,0xa8
  416fc3:	nop
  416fc4:	shl    BYTE PTR [eax+0x11],1
  416fc7:	test   DWORD PTR [ebx+0x7328e091],0x632e02c8
  416fd1:	push   ecx
  416fd2:	es xchg esi,eax
  416fd4:	gs nop
  416fd6:	(bad)  
  416fd7:	shl    DWORD PTR [edx],1
  416fd9:	mov    BYTE PTR [eax],bl
  416fdb:	shl    DWORD PTR [esi+0x5],cl
  416fde:	mov    bl,0xb4
  416fe0:	test   DWORD PTR [eax+eax*2+0x15],0x8fbb47bc
  416fe8:	push   ebp
  416fe9:	pop    edi
  416fea:	loope  0x417038
  416fec:	and    eax,0xac6e5374
  416ff1:	mov    eax,ds:0x6c750638
  416ff6:	mov    cl,0xd4
  416ff8:	(bad)  
  416ff9:	mov    al,0xad
  416ffb:	jg     0x416fcf
  416ffd:	jle    0x41706f
  416fff:	cdq    
  417000:	out    dx,eax
  417001:	push   cs
  417002:	xchg   edx,eax
  417003:	div    BYTE PTR [edx+ebp*1-0x1e]
  417007:	fwait
  417008:	call   0x2aa52ed5
  41700d:	(bad)  
  41700e:	pop    ds
  41700f:	jnp    0x417062
  417011:	cmp    al,0x9c
  417013:	or     ch,0x1f
  417016:	mov    cl,0x7e
  417018:	and    BYTE PTR [ebp-0x5],bh
  41701b:	jp     0x417042
  41701d:	xchg   DWORD PTR [ebp-0x1a2f1297],edx
  417023:	cmp    ah,ah
  417025:	pop    ecx
  417026:	sbb    BYTE PTR ds:0x9b1ddbdc,dl
  41702c:	dec    ebx
  41702d:	or     DWORD PTR [ebp+0x60],ebp
  417030:	pop    edx
  417031:	shl    BYTE PTR [esi],cl
  417033:	pop    es
  417034:	out    0x49,eax
  417036:	jmp    0xcc7932ef
  41703b:	sbb    ecx,DWORD PTR [edi+0x6eeb5c68]
  417041:	sub    DWORD PTR [edx],eax
  417043:	psllw  mm2,QWORD PTR [esi]
  417046:	dec    ebx
  417047:	dec    edi
  417048:	lods   eax,DWORD PTR ds:[esi]
  417049:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41704a:	push   ebp
  41704b:	call   0xcdae6251
  417050:	dec    eax
  417051:	mov    eax,ds:0x6de3e4b9
  417056:	mov    al,0x15
  417058:	xor    ebx,edx
  41705a:	in     al,dx
  41705b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41705c:	sbb    ah,bl
  41705e:	test   eax,0x6620fbfa
  417063:	retf   
  417064:	aam    0x90
  417066:	mov    dl,0xd3
  417068:	inc    esp
  417069:	or     al,0x1a
  41706b:	xor    bl,bl
  41706d:	xor    eax,0xdb2ef11
  417072:	fidiv  WORD PTR [edx+0x375bd2db]
  417078:	adc    BYTE PTR ds:0xb8c0b570,ch
  41707e:	push   ss
  41707f:	outs   dx,DWORD PTR ds:[esi]
  417080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417081:	sbb    ch,al
  417083:	jb     0x417092
  417085:	inc    esi
  417086:	mov    eax,ds:0xbdaee7a8
  41708b:	je     0x4170c5
  41708d:	lods   eax,DWORD PTR ds:[esi]
  41708e:	cmp    ch,BYTE PTR [edx+0x72]
  417091:	(bad)  
  417093:	mov    bl,0x1b
  417095:	in     eax,dx
  417096:	sub    eax,0xd367c0c1
  41709b:	mov    ebx,0x49565d16
  4170a0:	and    al,0xd2
  4170a2:	push   eax
  4170a3:	mov    edi,0x57ed7a2
  4170a8:	mov    edi,0x949a4e3f
  4170ad:	in     al,dx
  4170ae:	stc    
  4170af:	sbb    esi,DWORD PTR [esi-0x3]
  4170b2:	jge    0x4170c5
  4170b4:	add    al,0x12
  4170b6:	inc    ebx
  4170b7:	adc    ebp,ebx
  4170b9:	enter  0xf0fe,0x18
  4170bd:	aas    
  4170be:	ds jg  0x41705e
  4170c1:	pop    edi
  4170c2:	test   BYTE PTR [ebx+0x1328c20e],al
  4170c8:	pop    ds
  4170c9:	pop    ebp
  4170ca:	pop    ds
  4170cb:	inc    ecx
  4170cc:	push   0xea96efd6
  4170d1:	(bad)  
  4170d2:	daa    
  4170d3:	mov    dl,0x83
  4170d5:	mov    bh,0xb7
  4170d7:	out    dx,eax
  4170d8:	dec    edx
  4170d9:	push   es
  4170da:	cld    
  4170db:	aaa    
  4170dc:	mov    bl,0xd3
  4170de:	add    BYTE PTR [eax],bh
  4170e0:	call   0xf1e1:0x542110a6
  4170e7:	xor    al,0x90
  4170e9:	pop    edx
  4170ea:	mov    WORD PTR [edx-0x6a],fs
  4170ed:	in     eax,0x60
  4170ef:	loop   0x41710f
  4170f1:	dec    edx
  4170f2:	xor    DWORD PTR [ecx+0x45],edx
  4170f5:	push   eax
  4170f6:	mov    ah,0x46
  4170f8:	inc    ebx
  4170f9:	sti    
  4170fa:	outs   dx,DWORD PTR ds:[esi]
  4170fb:	shl    BYTE PTR [ebx+0x2a77f12c],cl
  417101:	in     eax,0x30
  417103:	(bad)  
  417104:	sbb    bl,BYTE PTR [edi]
  417106:	vmwrite eax,edi
  417109:	aaa    
  41710a:	jg     0x4170cc
  41710c:	mov    ecx,0x716e8b
  417111:	sbb    eax,0x3b0e24b5
  417116:	(bad)  
  417117:	xlat   BYTE PTR ds:[ebx]
  417118:	outs   dx,BYTE PTR ds:[esi]
  417119:	mov    al,ds:0xf0a4a31e
  41711e:	mov    esi,0xdcfda042
  417123:	retf   
  417124:	stc    
  417125:	neg    BYTE PTR [ebx+edx*2]
  417128:	shl    ebp,1
  41712a:	cdq    
  41712b:	(bad)  [esi+esi*4+0x79fb5a71]
  417132:	or     al,bl
  417134:	or     al,0x73
  417136:	push   eax
  417137:	int3   
  417138:	and    eax,0x4ab7cbbc
  41713d:	and    eax,ebp
  41713f:	and    eax,0xa0b02045
  417144:	xor    eax,0x5644e341
  417149:	adc    dl,bl
  41714b:	pop    ebx
  41714c:	xlat   BYTE PTR ds:[ebx]
  41714d:	mov    edx,0x66939455
  417152:	adc    BYTE PTR [edx],0x61
  417155:	pop    ebx
  417156:	loop   0x41713e
  417158:	or     BYTE PTR [ebx],al
  41715a:	and    bl,ch
  41715c:	xor    cl,BYTE PTR [edx+0x2dc55a36]
  417162:	sbb    al,0x3c
  417164:	(bad)  
  417165:	bound  edi,QWORD PTR [ebx-0x5ae9e0e8]
  41716b:	push   0xffffffba
  41716d:	jmp    0x6a17cd8e
  417172:	ss dec edi
  417174:	stc    
  417175:	inc    ecx
  417176:	(bad)  
  417177:	or     BYTE PTR [edi+0x68],bl
  41717a:	cs jp  0x4171ae
  41717d:	les    ecx,FWORD PTR [esi+0x28]
  417180:	jne    0x417158
  417182:	jle    0x41719f
  417184:	xchg   esi,eax
  417185:	inc    ebp
  417186:	mov    ds:0x8e7a8a15,al
  41718b:	addr16 loop 0x41712e
  41718e:	dec    ebp
  41718f:	aaa    
  417190:	push   ecx
  417191:	sbb    al,0xbf
  417193:	ret    0xea99
  417196:	aaa    
  417197:	mov    ds,WORD PTR [ecx]
  417199:	push   ebx
  41719a:	addr16 xchg esp,eax
  41719c:	sbb    DWORD PTR [esi+0x7d],ebx
  41719f:	arpl   WORD PTR [eax+0x6746da2f],bx
  4171a5:	arpl   WORD PTR [esp+ebx*1+0xf],si
  4171a9:	mov    ds:0x700c794c,eax
  4171af:	jge    0x41717a
  4171b1:	inc    esi
  4171b2:	daa    
  4171b3:	stc    
  4171b4:	jns    0x41722a
  4171b6:	imul   eax,DWORD PTR [edi+0x4f2ebf16],0xb4551a10
  4171c0:	retf   0xaad3
  4171c3:	(bad)  
  4171c4:	sbb    DWORD PTR [esi-0x3f],0x7a
  4171c8:	(bad)  
  4171c9:	scas   al,BYTE PTR es:[edi]
  4171ca:	or     esp,esp
  4171cc:	hlt    
  4171cd:	aaa    
  4171ce:	lahf   
  4171cf:	push   esi
  4171d0:	mov    bl,0x73
  4171d2:	cdq    
  4171d3:	fnsave [esi+ebp*8-0x47]
  4171d7:	in     al,0x7f
  4171d9:	fdivr  st,st(5)
  4171db:	(bad)  
  4171dc:	call   0x1c460dc7
  4171e1:	js     0x417213
  4171e3:	jno    0x417194
  4171e5:	rcr    ch,cl
  4171e7:	ja     0x417199
  4171e9:	or     eax,esi
  4171eb:	add    ecx,eax
  4171ed:	mov    gs,eax
  4171ef:	dec    ebx
  4171f0:	xchg   ebx,eax
  4171f1:	mov    eax,ds:0x3b4aed9f
  4171f6:	mov    DWORD PTR [ebp+0x33],ebx
  4171f9:	mov    edi,0x53afdf03
  4171fe:	jb     0x41722f
  417200:	test   al,0x6e
  417202:	sub    al,0x61
  417204:	aad    0xdc
  417206:	fcmovnbe st,st(0)
  417208:	fs cmp DWORD PTR gs:[edi+0x47],ebx
  41720d:	push   edx
  41720e:	mov    edi,0x62ceda76
  417213:	sbb    al,0xf
  417215:	xchg   esp,eax
  417216:	xor    eax,esi
  417218:	cmp    al,0xa
  41721a:	shr    DWORD PTR [edi],cl
  41721c:	gs adc al,0xb2
  41721f:	add    edi,ecx
  417221:	call   0x6c7fe042
  417226:	mov    ch,0x5a
  417228:	repnz stos BYTE PTR es:[edi],al
  41722a:	in     eax,0x57
  41722c:	pop    esi
  41722d:	jmp    0x3dba6f3f
  417232:	or     BYTE PTR [edx-0x5c293ff4],0x56
  417239:	push   es
  41723a:	lods   al,BYTE PTR ds:[esi]
  41723b:	dec    edi
  41723c:	out    dx,al
  41723d:	and    BYTE PTR [edx-0x5cfa9883],bl
  417243:	scas   eax,DWORD PTR es:[edi]
  417244:	xchg   ecx,eax
  417245:	sub    DWORD PTR [esi+ecx*8+0x37ab832f],ebx
  41724c:	push   0xfffffff9
  41724e:	loop   0x4171fd
  417250:	add    BYTE PTR [ebp-0x1ad7d642],0xd2
  417257:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417258:	pop    ecx
  417259:	jg     0x417273
  41725b:	xchg   esp,eax
  41725c:	sar    BYTE PTR [edi+0x23],0xd7
  417260:	dec    ecx
  417261:	push   0xffffffae
  417263:	jg     0x4172c2
  417265:	mov    dh,0x38
  417267:	adc    al,0x59
  417269:	outs   dx,BYTE PTR ds:[esi]
  41726a:	dec    eax
  41726b:	push   esi
  41726c:	fstp   st(4)
  41726e:	jno    0x417242
  417270:	push   ds
  417271:	(bad)  
  417272:	imul   BYTE PTR [esi]
  417274:	xor    eax,0x7effc219
  417279:	add    BYTE PTR [edi+0x38cf1a1e],al
  41727f:	ret    
  417280:	jg     0x417280
  417282:	(bad)  
  417284:	adc    DWORD PTR [edx+0x6fdab86c],ecx
  41728a:	jg     0x417289
  41728c:	dec    edx
  41728d:	sbb    DWORD PTR [edx+0xa],eax
  417290:	bound  ebp,QWORD PTR [ecx+0x6d]
  417293:	mov    ecx,0x33b4832d
  417298:	adc    dh,BYTE PTR [edi]
  41729a:	sbb    eax,0xde687738
  41729f:	xor    eax,DWORD PTR [edi-0x448cd0d3]
  4172a5:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172a7:	xchg   ebp,eax
  4172a8:	xor    esi,edx
  4172aa:	cs (bad) 
  4172ad:	sbb    eax,DWORD PTR [edx-0x4acbd08]
  4172b3:	daa    
  4172b4:	mov    al,ds:0xb1f5208f
  4172b9:	popf   
  4172ba:	int    0xcd
  4172bc:	mov    ds:0x330e6301,eax
  4172c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172c2:	out    dx,al
  4172c3:	push   edi
  4172c4:	jmp    0x8b01b611
  4172c9:	leave  
  4172ca:	stos   BYTE PTR es:[edi],al
  4172cb:	jmp    0xc24f:0x2b6cab42
  4172d2:	out    0x69,eax
  4172d4:	inc    edx
  4172d5:	mov    ch,0x8b
  4172d7:	lods   al,BYTE PTR ds:[esi]
  4172d8:	push   edx
  4172d9:	addr16 lock enter 0x996f,0x67
  4172df:	xchg   esi,esp
  4172e1:	fwait
  4172e2:	imul   edx,esp,0xfffffff2
  4172e5:	repz mov cl,0xb9
  4172e8:	xchg   edi,eax
  4172e9:	mov    ah,0x91
  4172eb:	mov    bh,0x2f
  4172ed:	shl    DWORD PTR [eax+0x64],0x33
  4172f1:	ds loop 0x41736a
  4172f4:	or     ch,BYTE PTR [edx+eiz*8]
  4172f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172f8:	pop    edx
  4172f9:	dec    edx
  4172fa:	in     al,dx
  4172fb:	es stos DWORD PTR es:[edi],eax
  4172fd:	inc    eax
  4172fe:	mov    bl,0x57
  417300:	ins    DWORD PTR es:[edi],dx
  417301:	lods   eax,DWORD PTR ds:[esi]
  417302:	scas   eax,DWORD PTR es:[edi]
  417303:	mov    cl,0xd4
  417305:	adc    DWORD PTR [ecx+0x1],eax
  417308:	inc    DWORD PTR [edx-0x1f]
  41730b:	sub    DWORD PTR [edi-0x2e],eax
  41730e:	js     0x417304
  417310:	and    eax,0x593d398b
  417315:	xlat   BYTE PTR ds:[ebx]
  417316:	pop    esp
  417317:	mov    cl,0x41
  41731a:	stc    
  41731b:	ss inc esi
  41731d:	jge    0x417396
  41731f:	jecxz  0x417353
  417321:	xor    DWORD PTR [ecx],0xffffff87
  417324:	cmp    eax,0xa35770c5
  417329:	loopne 0x4173a3
  41732b:	fisub  WORD PTR [ecx]
  41732d:	dec    ecx
  41732e:	jge    0x417325
  417330:	iret   
  417331:	push   0x15
  417333:	pop    eax
  417334:	sub    al,0x1b
  417336:	push   es
  417337:	stc    
  417338:	stc    
  417339:	outs   dx,DWORD PTR ds:[esi]
  41733a:	icebp  
  41733b:	div    DWORD PTR [esi]
  41733d:	or     eax,0x8743390
  417342:	pop    ds
  417343:	cli    
  417344:	inc    bh
  417346:	iret   
  417347:	inc    eax
  417348:	pushf  
  417349:	shl    BYTE PTR [ebp-0x6f],1
  41734c:	sub    BYTE PTR [esi-0x28e471e1],ch
  417352:	cwde   
  417353:	jecxz  0x4173ca
  417355:	jge    0x37409f51
  41735b:	jbe    0x4173ab
  41735d:	jmp    0x2e65:0xd1cd848d
  417364:	fnstenv [edi]
  417366:	into   
  417367:	or     DWORD PTR [edx+0x43],esi
  41736a:	dec    ebx
  41736b:	fcomi  st,st(3)
  41736d:	outs   dx,DWORD PTR ds:[esi]
  41736e:	and    DWORD PTR ds:0x105131dc,edx
  417374:	aad    0x5c
  417376:	fidiv  WORD PTR [edi]
  417378:	(bad)  
  417379:	fsubr  QWORD PTR [ebx]
  41737b:	xor    al,0x66
  41737d:	pop    esp
  41737e:	mov    esi,0x7e511813
  417383:	out    0x73,al
  417385:	js     0x417346
  417387:	ret    0xfce8
  41738a:	inc    ebx
  41738b:	fdivr  QWORD PTR [edx-0x41]
  41738e:	stos   DWORD PTR es:[edi],eax
  41738f:	sbb    ecx,DWORD PTR [ecx-0x17]
  417392:	xor    DWORD PTR [ecx-0x41],edx
  417395:	js     0x417391
  417397:	sub    ax,0x5bce
  41739b:	dec    edi
  41739c:	sbb    ah,BYTE PTR [edx-0x4e9efd89]
  4173a2:	mov    edx,0x6603ecd5
  4173a7:	fwait
  4173a8:	hlt    
  4173a9:	dec    eax
  4173aa:	loope  0x4173cb
  4173ac:	mov    ecx,0xb45c606c
  4173b1:	in     al,0xc7
  4173b3:	(bad)  
  4173b4:	(bad)  
  4173b5:	out    dx,eax
  4173b6:	sahf   
  4173b7:	xor    ebx,DWORD PTR [esi]
  4173b9:	data16 arpl WORD PTR [edx+0x29a6bdd3],dx
  4173c0:	and    eax,0xb6f9ad56
  4173c5:	shl    DWORD PTR [edx],0x6c
  4173c8:	shl    DWORD PTR [ecx],1
  4173ca:	aad    0x19
  4173cc:	jecxz  0x417405
  4173ce:	mov    esp,esp
  4173d0:	jnp    0x417390
  4173d2:	es dec edi
  4173d4:	push   ss
  4173d5:	(bad)  
  4173d6:	push   edx
  4173d7:	pop    ecx
  4173d8:	cmc    
  4173d9:	xor    edi,DWORD PTR [edi]
  4173db:	imul   edx,esp,0xffffffb3
  4173de:	repz cld 
  4173e0:	cmc    
  4173e1:	retf   
  4173e2:	sub    ch,cl
  4173e4:	mov    ebp,0x56d512e4
  4173e9:	cs into 
  4173eb:	out    dx,eax
  4173ec:	mov    bl,0x0
  4173ee:	or     al,0x75
  4173f0:	mov    edx,0x7f91599c
  4173f5:	fldcw  WORD PTR [ecx-0x3a]
  4173f8:	paddsw mm5,QWORD PTR [edx-0x7d3be19f]
  4173ff:	nop
  417400:	ffree  st(0)
  417402:	fsubr  QWORD PTR [ecx]
  417404:	(bad)  
  417405:	cld    
  417406:	inc    esp
  417407:	retf   0x4b00
  41740a:	sbb    ebp,DWORD PTR [ebp+0x65ebd9e0]
  417410:	sub    ah,dh
  417412:	mov    ds:0x8e1ecfae,eax
  417417:	fisttp DWORD PTR [eax+0x3d7b83e9]
  41741d:	and    DWORD PTR [ebx-0x50],eax
  417420:	outs   dx,BYTE PTR ds:[esi]
  417421:	xor    eax,0xf8c137da
  417426:	xchg   esp,eax
  417427:	push   es
  417428:	sahf   
  417429:	ins    DWORD PTR es:[edi],dx
  41742a:	cs xchg edx,eax
  41742c:	inc    edx
  41742d:	gs ret 0xb7ee
  417431:	fsubrp st(4),st
  417433:	add    DWORD PTR [ebx],edx
  417435:	mul    BYTE PTR [ebx+0x48]
  417438:	aam    0x11
  41743a:	call   0xec4df848
  41743f:	sar    BYTE PTR [edx],0x5a
  417442:	dec    edx
  417443:	cmp    ebx,esi
  417445:	stc    
  417446:	mov    es,WORD PTR [ecx+0x28]
  417449:	sub    DWORD PTR [eax+0xd231d54],0x7aede957
  417453:	xor    eax,0x54725203
  417458:	mov    ebx,0xb8f62f6f
  41745d:	jmp    0x665b:0x7b731e95
  417464:	aas    
  417465:	hlt    
  417466:	jg     0x417446
  417468:	mov    ds:0x71d0c530,al
  41746d:	cmp    esi,DWORD PTR [ebx+0x4aacaa18]
  417473:	pop    ecx
  417474:	pop    ss
  417475:	prefetcht2 BYTE PTR [edi+0x3]
  417479:	mov    edx,0x2d88e45
  41747e:	mov    al,ds:0xa4ec6cf7
  417483:	jp     0x41741f
  417485:	cmp    esi,DWORD PTR [edi-0x71]
  417488:	test   eax,0x15fcf668
  41748d:	add    BYTE PTR [esi-0x4e3f588b],bl
  417493:	inc    ecx
  417494:	sub    eax,0xaa4cf222
  417499:	push   edi
  41749a:	es inc esi
  41749c:	push   ebx
  41749d:	jo     0x417422
  41749f:	dec    ebp
  4174a0:	stc    
  4174a1:	or     al,0xba
  4174a3:	test   BYTE PTR [eax+edi*4+0x7c],cl
  4174a7:	or     cl,BYTE PTR [ecx+0x20]
  4174aa:	add    ebx,esi
  4174ac:	jecxz  0x417461
  4174ae:	std    
  4174af:	hlt    
  4174b0:	pop    eax
  4174b1:	sbb    bh,BYTE PTR [edx+0x17]
  4174b4:	lods   al,BYTE PTR ds:[esi]
  4174b5:	xor    al,0x97
  4174b7:	add    DWORD PTR [edi-0x7a],edi
  4174ba:	je     0x4174f5
  4174bc:	push   es
  4174bd:	dec    edx
  4174be:	push   edx
  4174bf:	sub    BYTE PTR [edi],dl
  4174c1:	pop    ecx
  4174c2:	mov    ah,0xb2
  4174c4:	hlt    
  4174c5:	pop    edi
  4174c6:	or     DWORD PTR [edx*8+0x114eb34f],ebx
  4174cd:	test   edi,edx
  4174cf:	cmp    eax,0x2cd9e95c
  4174d4:	push   ebx
  4174d5:	xchg   edx,eax
  4174d6:	cmp    DWORD PTR [ebp-0x45614e73],esi
  4174dc:	adc    BYTE PTR [edi+0x61bcb2c3],0x50
  4174e3:	mov    eax,0xd15f606a
  4174e8:	loop   0x41755e
  4174ea:	xchg   BYTE PTR [eax],bl
  4174ec:	pop    ds
  4174ed:	test   eax,0x6c1b5ef8
  4174f2:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174f4:	xchg   ecx,eax
  4174f5:	inc    esi
  4174f6:	clc    
  4174f7:	into   
  4174f8:	sahf   
  4174f9:	ins    DWORD PTR es:[edi],dx
  4174fa:	cmp    BYTE PTR [edx],al
  4174fc:	(bad)  
  4174fd:	xor    ch,bl
  4174ff:	sbb    eax,0x1d8a6010
  417504:	cmp    eax,0x7e6334
  417509:	ret    0x2732
  41750c:	in     al,0x3c
  41750e:	sbb    BYTE PTR [ebp+0x60],0x62
  417512:	jnp    0x4174b0
  417514:	inc    esp
  417515:	push   esi
  417516:	and    al,0xa1
  417518:	sbb    ch,bh
  41751a:	pop    esi
  41751b:	ins    BYTE PTR es:[edi],dx
  41751c:	and    eax,0x53145a73
  417521:	cmp    BYTE PTR [ebx],dh
  417523:	push   0x9c933d84
  417528:	push   ecx
  417529:	adc    ch,bh
  41752b:	ins    BYTE PTR es:[edi],dx
  41752c:	pop    DWORD PTR [ebp+eiz*4-0x490c68e8]
  417533:	sbb    eax,0x17498692
  417538:	nop
  417539:	outs   dx,DWORD PTR ds:[esi]
  41753a:	cli    
  41753b:	fisub  DWORD PTR ds:0x2ad85390
  417541:	jne    0x417587
  417543:	pop    ebp
  417544:	sbb    eax,0x231491fa
  417549:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41754a:	cli    
  41754b:	fistp  QWORD PTR [ecx]
  41754d:	adc    dl,BYTE PTR [edx+0x2292f3c6]
  417553:	mov    ch,dl
  417555:	gs mov edx,0xe23b2d9a
  41755b:	repnz rcl DWORD PTR [ebx],1
  41755e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41755f:	inc    eax
  417560:	pop    edi
  417561:	std    
  417562:	pop    ds
  417563:	pop    eax
  417564:	or     BYTE PTR [ecx],al
  417566:	inc    esp
  417567:	pop    ebp
  417568:	fimul  WORD PTR [eax+0x3a18c247]
  41756e:	iret   
  41756f:	enter  0xe740,0xf2
  417573:	inc    eax
  417574:	jp     0x41759d
  417576:	inc    edi
  417577:	mov    bl,0x70
  417579:	ret    
  41757a:	inc    ecx
  41757b:	pop    es
  41757c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41757d:	xchg   ebp,eax
  41757e:	and    al,0x7b
  417580:	mov    al,ds:0x806093ce
  417585:	and    DWORD PTR [edx],esp
  417587:	mov    ah,0xd9
  417589:	je     0x417513
  41758b:	jne    0x41751a
  41758d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41758e:	fcomp  QWORD PTR [eax+0x6f6eb295]
  417594:	ja     0x417530
  417596:	out    dx,eax
  417597:	mov    DWORD PTR [ecx],esi
  417599:	cwde   
  41759a:	int3   
  41759b:	cmp    dh,BYTE PTR [ecx-0x47]
  41759e:	mov    dl,cl
  4175a0:	cli    
  4175a1:	int    0xa9
  4175a3:	xor    DWORD PTR [ebp-0x59],0x11
  4175a7:	fdiv   QWORD PTR [esi-0x4a]
  4175aa:	mov    edx,0xc35d9b66
  4175af:	loope  0x4175d1
  4175b1:	adc    esi,DWORD PTR [eax]
  4175b3:	mov    dh,0x78
  4175b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b6:	nop
  4175b7:	pop    fs
  4175b9:	jp     0x4175eb
  4175bb:	stos   DWORD PTR es:[edi],eax
  4175bc:	js     0x4175ac
  4175be:	ficomp DWORD PTR [edi]
  4175c0:	retf   
  4175c1:	hlt    
  4175c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4175c3:	test   dh,al
  4175c5:	mul    BYTE PTR [edx+0xce39307]
  4175cb:	xchg   DWORD PTR [ecx+ebp*2],ebp
  4175ce:	dec    ecx
  4175cf:	and    dh,BYTE PTR [edi]
  4175d1:	mov    al,0x69
  4175d3:	inc    esi
  4175d4:	(bad)  
  4175d5:	jne    0x4175ee
  4175d7:	stc    
  4175d8:	add    DWORD PTR [ebp+0x2a],0x22
  4175dc:	outs   dx,DWORD PTR ds:[esi]
  4175dd:	pop    es
  4175de:	les    ebx,FWORD PTR [ebx+edx*1]
  4175e1:	psubusw mm6,QWORD PTR [ebx-0x50]
  4175e5:	loop   0x417625
  4175e7:	lds    esp,FWORD PTR [esi+0x2055f8fc]
  4175ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175ee:	repnz mov ebx,0xf099b8b7
  4175f4:	push   edi
  4175f5:	das    
  4175f6:	or     esi,DWORD PTR [edx+0x2a]
  4175f9:	dec    esp
  4175fa:	push   eax
  4175fb:	jns    0x41764b
  4175fd:	or     al,0x20
  4175ff:	and    DWORD PTR [ebp-0x7b61c37f],0x7fbfac92
  417609:	or     BYTE PTR [eax+0x6a5564e0],ch
  41760f:	retf   
  417610:	lahf   
  417611:	imul   edx,DWORD PTR [edi+edx*8],0x5842b73c
  417618:	jge    0x417616
  41761a:	aam    0x53
  41761c:	or     DWORD PTR [edx-0xc],0xf4cacb4a
  417623:	js     0x4175b9
  417625:	push   0xffffffba
  417627:	jbe    0x41766f
  417629:	lahf   
  41762a:	pop    edx
  41762b:	mov    ah,0xed
  41762d:	das    
  41762e:	inc    esp
  41762f:	dec    edi
  417630:	sub    cl,BYTE PTR [ebp-0x475abbae]
  417636:	or     al,0xec
  417638:	and    al,0xa5
  41763a:	jae    0x417698
  41763c:	push   esi
  41763d:	push   ebp
  41763e:	fwait
  41763f:	ja     0x4175e1
  417641:	sub    DWORD PTR [esi],ebp
  417643:	jb     0x41764b
  417645:	fsubrp st(3),st
  417647:	ja     0x417602
  417649:	mov    bh,0xc8
  41764b:	push   cs
  41764c:	adc    esi,DWORD PTR [edx+esi*2-0x7a1d88f8]
  417653:	xor    al,0xfa
  417655:	sub    al,BYTE PTR [eax+0x7a]
  417658:	gs or  al,0x46
  41765b:	or     dl,BYTE PTR [ecx+esi*1+0x13]
  41765f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417660:	out    dx,eax
  417661:	in     al,dx
  417662:	and    ebx,DWORD PTR [edx+0x703b833b]
  417668:	stos   DWORD PTR es:[edi],eax
  417669:	pop    esp
  41766b:	xchg   esp,eax
  41766c:	jae    0x41762a
  41766e:	jnp    0x41769f
  417670:	int    0xcc
  417672:	ds inc ebx
  417674:	out    dx,eax
  417675:	xlat   BYTE PTR ds:[ebx]
  417676:	mov    edx,0x74d4fdd1
  41767b:	xor    DWORD PTR [edi],ebp
  41767d:	sbb    bh,BYTE PTR [ebx]
  41767f:	add    eax,0x85b7d837
  417684:	xchg   esp,eax
  417685:	inc    eax
  417686:	(bad)
  41768b:	in     eax,dx
  41768c:	add    eax,0x3231d2d5
  417691:	lea    eax,[eax+esi*1-0x35]
  417695:	rcr    BYTE PTR [edi+0x7d],cl
  417698:	ins    DWORD PTR es:[edi],dx
  417699:	sar    DWORD PTR [edi-0x5b],0x57
  41769d:	(bad)  
  41769e:	outs   dx,BYTE PTR ds:[esi]
  41769f:	fwait
  4176a0:	push   ss
  4176a1:	xor    DWORD PTR ds:0x58c0fdce,esp
  4176a7:	(bad)  
  4176a8:	out    dx,eax
  4176a9:	imul   eax,DWORD PTR [ecx],0x32
  4176ac:	jmp    0xde09:0x1d019b2e
  4176b3:	sub    ebx,DWORD PTR [ebx-0x2c]
  4176b6:	mov    dl,0x27
  4176b8:	into   
  4176b9:	icebp  
  4176ba:	imul   ecx,DWORD PTR [esi],0x3f450b62
  4176c0:	pop    ss
  4176c1:	test   DWORD PTR [esi+0xd],edi
  4176c4:	add    ebp,ebx
  4176c6:	sub    esi,DWORD PTR [edi-0x1d]
  4176c9:	mov    al,ds:0x74f20507
  4176ce:	(bad)  
  4176cf:	mov    DWORD PTR [ebp+0x62cb33a5],edx
  4176d5:	pushf  
  4176d6:	push   es
  4176d7:	cs mov dl,0x62
  4176da:	xor    al,0x9a
  4176dc:	sub    BYTE PTR [ebp-0x517ff852],ah
  4176e2:	mov    ecx,0xc780e440
  4176e7:	loop   0x417738
  4176e9:	and    al,bh
  4176eb:	fld    DWORD PTR [ebx+0x76]
  4176ee:	and    DWORD PTR [ecx+0x60],esi
  4176f1:	mov    cl,0xd6
  4176f3:	jb     0x41767e
  4176f5:	lods   eax,DWORD PTR cs:[esi]
  4176f7:	shl    DWORD PTR [eax-0x3d],0x9f
  4176fb:	mov    al,ds:0x13be712f
  417701:	push   edi
  417702:	jmp    0x853f:0xd1dbe54e
  417709:	xor    eax,0x9e745e71
  41770e:	cmp    BYTE PTR [edi],bl
  417710:	mov    al,ds:0xf37f85c3
  417715:	arpl   WORD PTR [edi],sp
  417717:	lods   eax,DWORD PTR ds:[esi]
  417718:	fadd   QWORD PTR [ecx+eiz*4+0x2c]
  41771c:	mov    esp,0x504b903b
  417721:	fwait
  417722:	loopne 0x417764
  417724:	pop    ecx
  417725:	pushf  
  417726:	and    eax,0x3d899e42
  41772b:	call   0x7eccad80
  417730:	dec    edi
  417731:	loope  0x417797
  417733:	add    al,0xfb
  417735:	cli    
  417736:	sbb    ecx,DWORD PTR [ebx+0x1c9f724]
  41773c:	test   al,0x42
  41773e:	stos   DWORD PTR es:[edi],eax
  41773f:	je     0x417754
  417741:	call   0xa260:0xb9652ef
  417748:	xchg   DWORD PTR [eax+0x1adcfdfd],ebx
  41774e:	fucomip st,st(5)
  417750:	(bad)  
  417751:	xchg   edx,eax
  417752:	add    ecx,DWORD PTR [edx+0x14]
  417755:	call   0x7a9:0xc57c9221
  41775c:	popf   
  41775d:	dec    ecx
  41775e:	adc    DWORD PTR [ebx+0x1c],edx
  417761:	hlt    
  417762:	mov    ecx,0x2d68b577
  417767:	pop    ebx
  417768:	push   0x7903f6c9
  41776d:	shr    BYTE PTR [edx+eiz*2-0x7d],0x50
  417772:	adc    al,0xe5
  417774:	and    eax,0xab516e15
  417779:	inc    esi
  41777a:	pop    edx
  41777b:	and    al,0x93
  41777d:	cld    
  41777e:	xchg   ecx,eax
  41777f:	mov    ecx,0xd6188421
  417784:	lods   al,BYTE PTR ds:[esi]
  417785:	jecxz  0x4177ee
  417787:	aam    0x42
  417789:	mov    esi,0x656728f3
  41778e:	lahf   
  41778f:	dec    esp
  417790:	ret    
  417791:	add    edi,DWORD PTR [ebp+0x39]
  417794:	in     al,0x1d
  417796:	or     al,bh
  417798:	sub    BYTE PTR [edx+eax*2],0x72
  41779c:	cdq    
  41779d:	mov    dl,0xb7
  41779f:	mov    eax,ds:0xb829dbbd
  4177a4:	dec    DWORD PTR [edi+0xecf24b7]
  4177aa:	icebp  
  4177ab:	adc    eax,0x893cd5a4
  4177b0:	call   FWORD PTR [esi-0xa4f3b3a]
  4177b6:	inc    esp
  4177b7:	imul   ecx,DWORD PTR [edi-0x62e41506],0x422a6cb8
  4177c1:	and    edx,DWORD PTR [edi-0x49bb0d16]
  4177c7:	stc    
  4177c8:	xchg   DWORD PTR [ecx+ebx*4+0x3fec339],ebp
  4177cf:	or     eax,0xc7afb0df
  4177d4:	lods   eax,DWORD PTR ds:[esi]
  4177d5:	sub    al,0x5c
  4177d7:	loop   0x41784f
  4177d9:	fwait
  4177da:	cmc    
  4177db:	cwde   
  4177dc:	and    al,0x65
  4177de:	inc    esi
  4177df:	inc    ecx
  4177e0:	mov    fs,WORD PTR [edi+0x2971b571]
  4177e6:	iret   
  4177e7:	iret   
  4177e8:	out    0xaf,eax
  4177ea:	iret   
  4177eb:	in     eax,0x62
  4177ed:	sbb    cl,BYTE PTR [eax-0x71784f52]
  4177f3:	test   eax,0x6f522a7a
  4177f8:	or     dl,BYTE PTR [eax+0x54628c4d]
  4177fe:	xchg   ebx,eax
  4177ff:	jno    0x417793
  417801:	repnz sub eax,0x24e7dd7f
  417807:	vpcmpeqw xmm0,xmm3,XMMWORD PTR [edx+0x6ba06460]
  41780f:	xchg   edx,eax
  417810:	scas   eax,DWORD PTR es:[edi]
  417811:	loope  0x417801
  417813:	jns    0x4177a6
  417815:	mov    edx,0x1ce20cf0
  41781a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41781b:	inc    edi
  41781c:	sbb    eax,0x17544710
  417821:	sub    edx,0x9bc3613b
  417827:	test   DWORD PTR [ecx],esi
  417829:	sub    BYTE PTR [ebx-0x686b2268],ah
  41782f:	jbe    0x417877
  417831:	ret    
  417832:	pop    es
  417833:	lea    ebx,[ebx+esi*8+0x75028cc7]
  41783a:	dec    ebx
  41783b:	add    eax,0xdda5cb76
  417840:	jmp    0x4178a7
  417842:	ds jg  0x4177d8
  417845:	mov    esp,0xa9d6e831
  41784a:	fs sub eax,0xa0d376d2
  417850:	ds adc cl,0x5f
  417854:	pop    edx
  417855:	imul   eax,ecx,0xffffffcd
  417858:	or     eax,0xf49a10d7
  41785d:	jecxz  0x4178c5
  41785f:	sub    al,0xc
  417861:	mov    esp,0xbec0b9a9
  417866:	jns    0x41786c
  417868:	xor    al,0xa6
  41786a:	shl    BYTE PTR [esp+ecx*1],cl
  41786d:	sar    BYTE PTR [ebp+0x2],cl
  417870:	xchg   edi,eax
  417871:	shr    edx,1
  417873:	add    DWORD PTR [ebx-0x2e364a8],edi
  417879:	rol    DWORD PTR [esi-0x606ecf8],cl
  41787f:	fisub  DWORD PTR [edi-0x43f880b6]
  417885:	sbb    bh,BYTE PTR ss:[ebx+0x68]
  417889:	pop    es
  41788a:	js     0x4178ab
  41788c:	mov    cl,0x7f
  41788e:	into   
  41788f:	mov    ebp,esi
  417891:	mov    ch,0x14
  417893:	or     al,0xcc
  417895:	fs inc edx
  417897:	sbb    dl,dh
  417899:	ins    BYTE PTR es:[edi],dx
  41789a:	fs (bad) 
  41789c:	xchg   ebx,eax
  41789d:	inc    ecx
  41789e:	test   al,0xcf
  4178a0:	mov    edx,0xb954ca5d
  4178a5:	test   al,0x2
  4178a7:	fidivr WORD PTR [edi+ebp*8-0x65]
  4178ab:	jns    0x417840
  4178ad:	stos   BYTE PTR es:[edi],al
  4178ae:	nop
  4178af:	bound  eax,QWORD PTR [edi+0x71]
  4178b2:	arpl   WORD PTR [ecx+0x447243cc],dx
  4178b8:	mov    al,BYTE PTR [edi+0x2]
  4178bb:	in     eax,dx
  4178bc:	push   ds
  4178bd:	addr16 push cs
  4178bf:	push   0x5d049771
  4178c4:	adc    bh,bh
  4178c6:	push   0x77
  4178c8:	adc    DWORD PTR ds:0xc8d82e0a,ecx
  4178ce:	das    
  4178cf:	adc    ah,ah
  4178d1:	int3   
  4178d2:	ret    
  4178d3:	daa    
  4178d4:	pop    ebp
  4178d5:	stos   DWORD PTR es:[edi],eax
  4178d6:	sahf   
  4178d7:	std    
  4178d8:	loop   0x417954
  4178da:	xor    eax,edx
  4178dc:	les    edi,FWORD PTR [edi-0x3220fb6f]
  4178e2:	loopne 0x417893
  4178e4:	cld    
  4178e5:	cmc    
  4178e6:	push   cs
  4178e7:	add    al,0xa3
  4178e9:	jl     0x41786e
  4178eb:	xchg   DWORD PTR [esp+eax*2+0x7b],edx
  4178ef:	pushf  
  4178f0:	mov    ch,0xa3
  4178f2:	mov    eax,ds:0x83cf6ce6
  4178f7:	fidivr WORD PTR [ebp-0x1]
  4178fa:	jb     0x417910
  4178fc:	daa    
  4178fd:	push   ds
  4178fe:	pop    es
  4178ff:	jae    0x4178c6
  417901:	test   BYTE PTR cs:[esi],0xd2
  417905:	mov    dl,0x68
  417907:	dec    ecx
  417908:	pop    esp
  417909:	and    esp,DWORD PTR ss:[eax+0x4c3ecfc6]
  417910:	call   DWORD PTR [esi+0x2d6ae9dd]
  417916:	sbb    ch,dl
  417918:	cwde   
  417919:	sub    dl,bl
  41791b:	cli    
  41791c:	retf   
  41791d:	lods   eax,DWORD PTR ds:[esi]
  41791e:	and    bh,ch
  417920:	lea    ecx,[edx+0x7ed8772c]
  417926:	jae    0x4178dd
  417928:	pop    esp
  417929:	outs   dx,DWORD PTR ds:[esi]
  41792a:	jge    0x417974
  41792c:	lds    edx,FWORD PTR [ebp-0x47]
  41792f:	shufps xmm1,xmm7,0x91
  417933:	neg    DWORD PTR [edx-0x40]
  417936:	pushf  
  417937:	aad    0x2b
  417939:	js     0x41797e
  41793b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41793c:	je     0x4179b0
  41793e:	mov    gs,WORD PTR [esi]
  417940:	call   0xaff09df0
  417945:	jle    0x4178d0
  417947:	push   esi
  417948:	fst    st(2)
  41794a:	and    BYTE PTR [esi+0x73],0xaf
  41794e:	stos   DWORD PTR es:[edi],eax
  41794f:	enter  0x87e6,0xac
  417953:	jmp    0x368c642c
  417958:	mov    es,edi
  41795a:	xor    DWORD PTR [ebp-0x64],0xb5d909b4
  417961:	mov    BYTE PTR [eax+0x18],bl
  417964:	nop
  417965:	xchg   edx,eax
  417966:	cmc    
  417967:	aaa    
  417968:	dec    edi
  417969:	outs   dx,BYTE PTR ds:[esi]
  41796a:	out    0x7f,eax
  41796c:	shr    bl,1
  41796e:	mov    edi,0xf71af158
  417973:	fild   DWORD PTR [ebp+0x1]
  417976:	dec    edx
  417977:	popa   
  417978:	add    BYTE PTR [edi-0x2a657014],dh
  41797e:	pop    esp
  41797f:	sub    bh,bh
  417981:	aaa    
  417982:	das    
  417983:	leave  
  417984:	xchg   edi,eax
  417985:	jno    0x417970
  417987:	or     al,0x6f
  417989:	shr    DWORD PTR [edx+ebp*1+0x4f289c6a],cl
  417990:	sub    BYTE PTR [esi+ebx*8+0x31e3af59],bh
  417997:	xchg   bh,ch
  417999:	mov    ch,0xc8
  41799b:	inc    esp
  41799c:	leave  
  41799d:	lods   eax,DWORD PTR ds:[esi]
  41799e:	push   ebp
  41799f:	push   ebx
  4179a0:	xor    al,0xb4
  4179a2:	mov    cr1,edx
  4179a5:	retf   0x4ae7
  4179a8:	sti    
  4179a9:	jns    0x417a25
  4179ab:	add    BYTE PTR [esi+0x4c],al
  4179ae:	stos   DWORD PTR es:[edi],eax
  4179af:	jecxz  0x41793b
  4179b1:	push   ebx
  4179b2:	jp     0x417970
  4179b4:	fimul  DWORD PTR [edi+0x31a553b7]
  4179ba:	pop    edi
  4179bb:	push   edx
  4179bc:	fstp   TBYTE PTR [eax]
  4179be:	int    0x23
  4179c0:	jmp    0x47cc:0x9d8a2a10
  4179c7:	xchg   BYTE PTR [edx],bl
  4179c9:	mov    dl,0x5f
  4179cb:	inc    ebp
  4179cc:	sub    DWORD PTR [ecx+eiz*4+0x66],ebx
  4179d0:	jecxz  0x417993
  4179d2:	mov    ds:0x61b13874,eax
  4179d7:	mov    BYTE PTR [esi-0x3f],ch
  4179da:	hlt    
  4179db:	adc    BYTE PTR gs:[ebp-0x2b],bh
  4179df:	out    0x45,al
  4179e1:	cmp    DWORD PTR [ebx-0x25b88afa],ecx
  4179e7:	and    al,0x6e
  4179e9:	arpl   dx,sp
  4179eb:	dec    ebx
  4179ec:	ins    BYTE PTR es:[edi],dx
  4179ed:	inc    eax
  4179ee:	mov    esp,DWORD PTR [ecx+0x4e]
  4179f1:	popa   
  4179f2:	popa   
  4179f3:	pop    edi
  4179f4:	(bad)  
  4179f5:	mov    edx,0x8b308ea3
  4179fa:	repnz pop cx
  4179fd:	mov    al,0x2d
  4179ff:	cmp    bl,BYTE PTR [edx-0x50dfc91e]
  417a05:	xor    DWORD PTR [edx+edx*2-0x2ed065d4],esi
  417a0c:	adc    esi,edi
  417a0e:	stc    
  417a0f:	loope  0x417a1b
  417a11:	cdq    
  417a12:	or     bh,ah
  417a14:	in     eax,0x7b
  417a16:	test   BYTE PTR [esi-0x23fd807b],al
  417a1c:	push   eax
  417a1d:	cmp    ebp,DWORD PTR [esi]
  417a1f:	xchg   BYTE PTR [ebx+0x34],ah
  417a22:	adc    eax,0x7b06e527
  417a27:	adc    al,BYTE PTR [ecx]
  417a29:	into   
  417a2a:	xchg   ebx,eax
  417a2b:	fcom   DWORD PTR [ebx-0x6f]
  417a2e:	xchg   ecx,eax
  417a2f:	adc    cl,BYTE PTR [edi+0x13a69a9c]
  417a35:	rcl    DWORD PTR [esp+ecx*1],1
  417a38:	add    BYTE PTR [ebx+0x655ab8cf],bl
  417a3e:	jmp    FWORD PTR [edx]
  417a40:	das    
  417a41:	sbb    eax,ebx
  417a43:	dec    edx
  417a44:	fdivr  QWORD PTR [eax-0x8]
  417a47:	pop    eax
  417a48:	dec    ebp
  417a49:	in     al,0x86
  417a4b:	adc    esi,ebp
  417a4d:	lds    ebx,FWORD PTR [ecx+0x47]
  417a50:	or     ebx,DWORD PTR [esi+ebx*2+0x5d]
  417a54:	push   cs
  417a55:	fs mov ah,0xaf
  417a58:	pop    ds
  417a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a5a:	push   eax
  417a5b:	leave  
  417a5c:	mov    al,ds:0xe1d1ad25
  417a61:	ror    DWORD PTR [ebp+0x4638cef0],1
  417a67:	pop    edi
  417a68:	jg     0x417a69
  417a6a:	ja     0x417aa0
  417a6c:	out    0x4e,al
  417a6e:	scas   eax,DWORD PTR es:[edi]
  417a6f:	int3   
  417a70:	lods   eax,DWORD PTR fs:[esi]
  417a72:	add    BYTE PTR [ebx+ebx*8],dl
  417a75:	retf   
  417a76:	sub    eax,0xadc1afff
  417a7b:	fs xor cl,BYTE PTR gs:[esi-0x5258a0c2]
  417a83:	repnz aaa 
  417a85:	cli    
  417a86:	push   cs
  417a87:	jo     0x417a6a
  417a89:	pop    ecx
  417a8a:	cmp    eax,DWORD PTR [edx+0x1817c73]
  417a90:	sub    al,bh
  417a92:	mov    esp,ebx
  417a94:	xchg   BYTE PTR [esp+ebx*4-0x6890cd57],al
  417a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a9c:	mov    eax,esi
  417a9e:	data16 or bl,BYTE PTR [edx]
  417aa1:	jnp    0x417a8a
  417aa3:	icebp  
  417aa4:	cs call 0xe5f4:0xb16494a3
  417aac:	enter  0x172a,0x2b
  417ab0:	fst    QWORD PTR [ecx-0x5c]
  417ab3:	jno    0x417aa6
  417ab5:	bound  edx,QWORD PTR [esi+0x7cc6c620]
  417abb:	into   
  417abc:	fstp   QWORD PTR [esi+0xea611a3]
  417ac2:	sub    eax,0x831a1c9
  417ac7:	sar    esp,0x30
  417aca:	push   0xffffffa9
  417acc:	xor    DWORD PTR [edi-0x57e12324],ebx
  417ad2:	inc    ebx
  417ad3:	sbb    cl,BYTE PTR [ecx-0x731395b1]
  417ad9:	jl     0x417ab0
  417adb:	shr    BYTE PTR [edi],cl
  417add:	xchg   ebx,eax
  417ade:	push   esi
  417adf:	xor    al,0x88
  417ae1:	sahf   
  417ae2:	popa   
  417ae3:	mov    ebx,0xb86dd426
  417ae8:	cmp    DWORD PTR [ecx+0x54],ebp
  417aeb:	and    ch,BYTE PTR [edi-0x58]
  417aee:	(bad)  
  417aef:	or     DWORD PTR [ebx],ecx
  417af1:	mov    dl,0x5f
  417af3:	iret   
  417af4:	and    eax,DWORD PTR [ebp+0x7d]
  417af7:	mov    edx,0xa8b06a67
  417afc:	cli    
  417afd:	scas   eax,DWORD PTR es:[edi]
  417afe:	pushf  
  417aff:	inc    eax
  417b00:	adc    bh,bl
  417b02:	dec    eax
  417b03:	fldlg2 
  417b05:	gs stc 
  417b07:	into   
  417b08:	mov    esi,0xf71c6a5b
  417b0d:	je     0x417ad8
  417b0f:	imul   esp,DWORD PTR [ecx],0xffffffc5
  417b12:	pop    edi
  417b13:	iret   
  417b14:	jne    0x417ae9
  417b16:	lods   al,BYTE PTR ds:[esi]
  417b17:	retf   
  417b18:	and    eax,0x4781a842
  417b1d:	add    ebx,DWORD PTR [edx-0x5904cd30]
  417b23:	ja     0x417b79
  417b25:	cld    
  417b26:	leave  
  417b27:	mov    DWORD PTR [ebp-0x1c],ebx
  417b2a:	shl    BYTE PTR [edi],0x33
  417b2d:	mov    DWORD PTR [ebp-0x366c4ce3],edi
  417b33:	inc    ebx
  417b34:	js     0x417b0b
  417b36:	gs push ebx
  417b38:	rol    BYTE PTR [edx],cl
  417b3a:	outs   dx,DWORD PTR ds:[esi]
  417b3b:	das    
  417b3c:	mov    WORD PTR [ecx-0x63b3adc0],es
  417b42:	bt     DWORD PTR [edi-0x7b1563d8],eax
  417b49:	adc    BYTE PTR [edx],0x92
  417b4c:	je     0x417b87
  417b4e:	xor    esp,edi
  417b50:	and    DWORD PTR [ebp+edx*4+0x52],esp
  417b54:	or     esp,DWORD PTR [edi+edx*4+0x1f3e48f2]
  417b5b:	or     dl,dl
  417b5d:	cli    
  417b5e:	loope  0x417b84
  417b60:	xchg   esp,eax
  417b61:	lahf   
  417b62:	stos   BYTE PTR es:[edi],al
  417b63:	fnstsw WORD PTR [ebp-0x11868707]
  417b69:	jo     0x417af2
  417b6b:	and    al,0x8
  417b6d:	enter  0x8452,0xc1
  417b71:	cli    
  417b72:	(bad)  
  417b73:	sub    edi,DWORD PTR [edi-0x595f86bb]
  417b79:	push   esi
  417b7a:	dec    edi
  417b7b:	pop    es
  417b7c:	repz dec ebp
  417b7e:	push   esp
  417b7f:	loope  0x417b19
  417b81:	push   cs
  417b82:	mov    esi,0x64d1b70c
  417b87:	ja     0x417bc5
  417b89:	inc    esi
  417b8a:	mov    ecx,0x4fd46046
  417b8f:	es mov ch,0xf7
  417b92:	je     0x417bf3
  417b94:	rcr    BYTE PTR [ebx-0x56],cl
  417b97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b98:	scas   al,BYTE PTR es:[edi]
  417b99:	add    BYTE PTR [edi+edi*2-0x650d5192],0x2b
  417ba1:	aaa    
  417ba2:	or     al,0xb1
  417ba4:	aaa    
  417ba5:	ds sub ecx,ebx
  417ba8:	fadd   DWORD PTR [ebp-0x2ba5bb29]
  417bae:	outs   dx,DWORD PTR ds:[esi]
  417baf:	fwait
  417bb0:	adc    al,0x27
  417bb2:	and    eax,esi
  417bb4:	and    DWORD PTR [ebp-0x1e5b45bb],edx
  417bba:	dec    edi
  417bbb:	dec    ebx
  417bbc:	js     0x417bac
  417bbe:	xor    ebp,0x866bba12
  417bc4:	sbb    dh,dl
  417bc6:	icebp  
  417bc7:	jp     0x417c1a
  417bc9:	cmp    DWORD PTR [eax-0x59],ebx
  417bcc:	lahf   
  417bcd:	cmp    al,0xc2
  417bcf:	mov    ebp,0xfe348b06
  417bd4:	dec    edi
  417bd5:	sub    bh,dl
  417bd7:	jge    0x417b80
  417bd9:	add    BYTE PTR [ecx],bh
  417bdb:	or     bh,BYTE PTR [ecx]
  417bdd:	push   ds
  417bde:	xchg   BYTE PTR [eax-0x78],dl
  417be1:	jp     0x417c0b
  417be3:	dec    esp
  417be4:	popa   
  417be5:	push   ebp
  417be6:	retf   
  417be7:	sar    BYTE PTR [ebx+0x72],cl
  417bea:	and    eax,0x4e41ef15
  417bef:	dec    ebp
  417bf0:	jp     0x417bf0
  417bf2:	sbb    DWORD PTR [ebp+eax*8-0x45],0x740265b5
  417bfa:	call   0x6bb2:0xdb3252f9
  417c01:	or     al,0x7a
  417c03:	out    dx,eax
  417c04:	push   edi
  417c05:	or     DWORD PTR [esi-0x49],edx
  417c08:	fdivr  QWORD PTR ds:0x4d2a264e
  417c0e:	adc    dh,BYTE PTR [ebx-0x3b]
  417c11:	xor    BYTE PTR [ebp-0x7],al
  417c14:	mov    ds:0xb082a33,eax
  417c19:	push   0x66
  417c1b:	inc    ebp
  417c1c:	mov    edx,0xa30f090
  417c21:	arpl   cx,di
  417c23:	push   esi
  417c24:	daa    
  417c25:	cmp    DWORD PTR [eax],ebp
  417c27:	sub    ch,BYTE PTR [edx+0x98ff076]
  417c2d:	mov    bl,0x47
  417c2f:	out    dx,al
  417c30:	sub    edi,DWORD PTR [edi+0x236ea763]
  417c36:	pop    esp
  417c37:	pop    ebp
  417c38:	fidivr DWORD PTR [edi+0x4c2d62c3]
  417c3e:	leave  
  417c3f:	pmaddwd mm5,mm1
  417c42:	lahf   
  417c43:	push   edi
  417c44:	mov    ebx,DWORD PTR [eax-0xc]
  417c47:	dec    esp
  417c48:	push   cs
  417c49:	dec    ecx
  417c4a:	into   
  417c4b:	cld    
  417c4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417c4d:	sbb    BYTE PTR [edx-0x70e89f40],0x4b
  417c54:	int3   
  417c55:	daa    
  417c56:	mov    bh,BYTE PTR [ebx+0x442f64d0]
  417c5c:	sbb    al,0xa2
  417c5e:	jp     0x417c6d
  417c60:	call   0xa283ae58
  417c65:	mov    ds:0x5dd256b3,eax
  417c6a:	add    bh,ch
  417c6c:	js     0x417bee
  417c6e:	daa    
  417c6f:	jp     0x417cae
  417c71:	xor    edx,DWORD PTR [edi+0xf]
  417c74:	out    0x26,al
  417c76:	retf   
  417c77:	in     eax,dx
  417c78:	je     0x417cb8
  417c7a:	scas   eax,DWORD PTR es:[edi]
  417c7b:	jb     0x417c5d
  417c7d:	add    BYTE PTR [eax+0x414b5f3f],al
  417c83:	push   DWORD PTR [ecx+0x46]
  417c86:	in     eax,dx
  417c87:	je     0x417c63
  417c89:	aad    0x69
  417c8b:	mov    eax,ds:0x7888076f
  417c90:	rcr    BYTE PTR [ecx+eax*2-0x74],1
  417c94:	or     eax,0xa9c7baab
  417c99:	(bad)  
  417c9a:	icebp  
  417c9b:	pop    ecx
  417c9c:	xchg   esi,eax
  417c9d:	std    
  417c9e:	test   eax,0x9a93e8b1
  417ca3:	inc    edi
  417ca4:	js     0x417ca6
  417ca6:	ja     0x417d0d
  417ca8:	push   0xffffff8e
  417caa:	add    DWORD PTR [ebx-0x6c5dffd1],edx
  417cb0:	rcl    BYTE PTR [ebp+0x57439106],1
  417cb6:	inc    esi
  417cb7:	xor    BYTE PTR [edx+eax*8+0x595480ec],al
  417cbe:	sahf   
  417cbf:	push   ss
  417cc0:	sbb    al,0xfa
  417cc3:	cmp    al,0xb
  417cc5:	add    al,bh
  417cc7:	jnp    0x417cf5
  417cc9:	push   ecx
  417cca:	dec    eax
  417ccb:	xchg   BYTE PTR [ebp+0x8],al
  417cce:	sub    esi,ebp
  417cd0:	mov    esi,0xd936e62d
  417cd5:	or     al,0x89
  417cd7:	mov    bl,0xe6
  417cd9:	pushf  
  417cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cdb:	ja     0x417d13
  417cdd:	test   edx,edi
  417cdf:	pop    edi
  417ce0:	jo     0x417cd7
  417ce2:	lods   al,BYTE PTR ds:[esi]
  417ce3:	mov    ah,0x27
  417ce5:	push   ebx
  417ce6:	test   DWORD PTR [ebx],ebp
  417ce8:	enter  0x6ba9,0xff
  417cec:	inc    eax
  417ced:	scas   eax,DWORD PTR es:[edi]
  417cee:	(bad)  
  417cef:	or     BYTE PTR [ebx],bl
  417cf1:	pushf  
  417cf2:	pop    ebx
  417cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417cf5:	sti    
  417cf6:	call   0xf79c9dbe
  417cfb:	jno    0x417d0f
  417cfd:	mov    ds:0x537d2cfc,eax
  417d02:	xchg   ecx,eax
  417d03:	inc    esi
  417d04:	cld    
  417d05:	mov    eax,cs:0x413a5a37
  417d0b:	xor    BYTE PTR [esp-0x32],ch
  417d0f:	fnstcw WORD PTR [edx-0x20]
  417d12:	sbb    eax,0x28eeec46
  417d17:	sar    bl,0xb
  417d1a:	call   0x1191:0x34275014
  417d21:	mov    al,0x41
  417d23:	or     eax,ecx
  417d25:	push   edi
  417d26:	inc    ecx
  417d27:	data16 jp 0x417cea
  417d2a:	out    0x25,al
  417d2c:	outs   dx,DWORD PTR ds:[esi]
  417d2d:	mov    cl,0x78
  417d2f:	push   ss
  417d30:	sub    DWORD PTR [esi-0x66223fbb],esp
  417d36:	mov    esi,0x3f87a351
  417d3b:	lahf   
  417d3c:	stos   BYTE PTR es:[edi],al
  417d3d:	inc    ebx
  417d3e:	ja     0x417cf4
  417d40:	ins    DWORD PTR es:[edi],dx
  417d41:	retf   
  417d42:	adc    al,0xf4
  417d44:	leave  
  417d45:	inc    ebp
  417d46:	fucomip st,st(3)
  417d48:	pop    ebx
  417d49:	mov    ebp,0x4a36ae40
  417d4e:	mov    al,ds:0x541e41a5
  417d53:	repnz adc BYTE PTR [ebp-0x57],0xaa
  417d58:	jmp    0x417ce7
  417d5a:	jp     0x417d43
  417d5c:	push   cs
  417d5d:	dec    edi
  417d5e:	in     eax,0xa6
  417d60:	xor    ah,bl
  417d62:	jl     0x417d3c
  417d64:	in     al,dx
  417d65:	enter  0x3b0d,0xff
  417d69:	lods   eax,DWORD PTR ds:[esi]
  417d6a:	(bad)  
  417d6b:	mov    ecx,0xdf4a5bf8
  417d70:	mov    esi,0x7cd2ed1f
  417d75:	not    esi
  417d77:	pushf  
  417d78:	(bad)  
  417d7a:	add    esi,DWORD PTR [edi+0x26633193]
  417d80:	test   al,0x4b
  417d82:	pop    ds
  417d83:	ins    DWORD PTR es:[edi],dx
  417d84:	jp     0x417d74
  417d86:	sahf   
  417d87:	stc    
  417d88:	sti    
  417d89:	cli    
  417d8a:	imul   edx,DWORD PTR ds:0x3ef528c,0xffffffb7
  417d91:	sbb    esi,esi
  417d93:	ret    
  417d94:	std    
  417d95:	sub    ah,BYTE PTR [ebp+0x75]
  417d98:	push   ebp
  417d99:	fsubr  QWORD PTR ds:0x4a685e1f
  417d9f:	(bad)  
  417da0:	mov    cs,ebp
  417da2:	imul   esi,DWORD PTR es:[ebp+edi*8-0x6fe6f53],0x28a6a3de
  417dae:	mov    esp,DWORD PTR [ebp-0x46d246f0]
  417db4:	xor    eax,0x47e48dd9
  417db9:	dec    esi
  417dba:	sbb    dl,dl
  417dbc:	imul   esp,DWORD PTR [edx+0x37],0xc750bd70
  417dc3:	mov    DWORD PTR [edx-0x6a],ebx
  417dc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dc7:	js     0x417db5
  417dc9:	mov    ds:0x3d75913d,al
  417dce:	and    al,0xf3
  417dd0:	or     edx,0x3e
  417dd3:	mov    ?,WORD PTR [eax+0x55a3a7ff]
  417dd9:	mov    al,0x0
  417ddb:	xor    dh,BYTE PTR ds:0xbfacdec1
  417de1:	cmp    edi,DWORD PTR [esi+0x53]
  417de4:	fwait
  417de5:	dec    ecx
  417de6:	xor    BYTE PTR [edi],0x6d
  417de9:	sbb    eax,0x55561c3e
  417dee:	mov    esp,0xa3e4b12e
  417df3:	fs inc ebx
  417df5:	bnd jle 0x417e07
  417df8:	jne    0x417ddf
  417dfa:	imul   edx,DWORD PTR [ebx-0x39],0x61e979e9
  417e01:	adc    al,0x1c
  417e03:	cmp    DWORD PTR [eax+0xcf7ea77],ebx
  417e09:	and    al,0xaa
  417e0b:	icebp  
  417e0c:	add    BYTE PTR [ecx],ah
  417e0e:	adc    eax,0x370ddd9c
  417e13:	daa    
  417e14:	xlat   BYTE PTR ds:[ebx]
  417e15:	push   ds
  417e16:	cmc    
  417e17:	sub    al,0x26
  417e19:	dec    ebp
  417e1a:	aaa    
  417e1b:	jmp    0x6c2de91
  417e20:	cmc    
  417e21:	or     al,0x5a
  417e23:	push   cs
  417e24:	jle    0x417dfa
  417e26:	fwait
  417e27:	jno    0x417e46
  417e29:	sti    
  417e2a:	sbb    esp,DWORD PTR [edx]
  417e2c:	add    al,0x4
  417e2e:	sbb    eax,0x65b1babc
  417e33:	jle    0x417eb0
  417e35:	mov    ds:0x2d401817,al
  417e3a:	xchg   ecx,eax
  417e3b:	push   es
  417e3c:	clc    
  417e3d:	mov    esp,0xfb5e6e92
  417e42:	mov    ebx,0x6598787a
  417e47:	mov    edx,0x59ecd420
  417e4c:	repz dec ebp
  417e4e:	pop    eax
  417e4f:	loopne 0x417e02
  417e51:	pop    esp
  417e52:	mov    dl,BYTE PTR ss:[ebp+0x4ee6245a]
  417e59:	cmp    eax,0x26a6c55c
  417e5e:	iret   
  417e5f:	dec    esp
  417e60:	xor    ch,BYTE PTR [edx-0x64]
  417e63:	loopne 0x417e86
  417e65:	(bad)  
  417e66:	xchg   ebx,eax
  417e67:	mov    eax,0xcef48c7f
  417e6c:	fistp  QWORD PTR [ebx]
  417e6e:	add    DWORD PTR [eax-0x33a8bedb],ebx
  417e74:	(bad)  
  417e75:	stos   DWORD PTR es:[edi],eax
  417e76:	jecxz  0x417eda
  417e78:	xchg   edx,eax
  417e79:	xchg   ebx,eax
  417e7a:	inc    edx
  417e7b:	xor    DWORD PTR [esi+ebx*1],edx
  417e7e:	or     esp,esp
  417e80:	xchg   esp,edi
  417e82:	(bad)  
  417e83:	out    0x85,al
  417e85:	js     0x417e65
  417e87:	push   ax
  417e89:	dec    esi
  417e8a:	retf   0x8940
  417e8d:	dec    edi
  417e8e:	or     ebp,ebp
  417e90:	xchg   esi,eax
  417e91:	xor    ecx,ecx
  417e93:	pop    esi
  417e94:	adc    eax,0x571a34c7
  417e99:	stos   BYTE PTR es:[edi],al
  417e9a:	(bad)  
  417e9b:	(bad)  
  417e9d:	(bad)  [ebx-0x42d28b18]
  417ea3:	mov    bl,bh
  417ea5:	in     eax,0xe4
  417ea7:	inc    BYTE PTR [edi]
  417ea9:	xchg   esi,eax
  417eaa:	js     0x417e8c
  417eac:	mov    ebx,0x8d823eb6
  417eb1:	ja     0x417e94
  417eb3:	cmp    bh,BYTE PTR [edi+0x7c]
  417eb6:	dec    edi
  417eb7:	outs   dx,DWORD PTR cs:[esi]
  417eb9:	rcl    BYTE PTR [esi-0x29e092e4],cl
  417ebf:	repz push 0x8ad03aa1
  417ec5:	sbb    edx,DWORD PTR [eax+ebp*4+0x22]
  417ec9:	inc    BYTE PTR [ebx]
  417ecb:	push   esi
  417ecc:	xor    DWORD PTR [ecx],edx
  417ece:	push   ecx
  417ecf:	gs mov cl,0xfa
  417ed2:	fcomp  st(7)
  417ed4:	shl    BYTE PTR [ecx+0x1e230b8e],0x7a
  417edb:	push   esi
  417edc:	out    dx,al
  417edd:	push   ss
  417ede:	popa   
  417edf:	push   edx
  417ee0:	mov    al,ds:0x6ffe82ce
  417ee5:	pop    esp
  417ee6:	and    eax,0x2981b81e
  417eeb:	add    bh,BYTE PTR [ebp+0x12a15d09]
  417ef1:	sar    BYTE PTR [edi-0x6a030708],1
  417ef7:	fisttp DWORD PTR ds:0x4e621653
  417efd:	xchg   ebp,eax
  417efe:	cmp    DWORD PTR [edx+edi*8-0x7b3140fc],edi
  417f05:	into   
  417f06:	lahf   
  417f07:	adc    BYTE PTR [edx],ch
  417f09:	imul   ebx,DWORD PTR [edx],0xdc0907d2
  417f0f:	pusha  
  417f10:	xchg   DWORD PTR [esi],esi
  417f12:	xor    eax,0x8fa5cf84
  417f18:	mov    esp,0x6dab0207
  417f1d:	in     eax,0xcb
  417f1f:	aad    0xb
  417f21:	or     cl,BYTE PTR [ebx-0x5]
  417f24:	xchg   DWORD PTR [esi+0x6e],eax
  417f27:	jmp    0xd887:0x84062b48
  417f2e:	call   0xbf4869b8
  417f33:	jge    0x417f87
  417f35:	fs or  dh,ch
  417f38:	push   edx
  417f39:	mov    edx,0x1edbc8c9
  417f3e:	hlt    
  417f3f:	fwait
  417f40:	and    eax,0xbe1708ec
  417f45:	loope  0x417f05
  417f47:	push   0xffffffd1
  417f49:	jl     0x417f77
  417f4b:	es jle 0x417f09
  417f4e:	repnz dec eax
  417f50:	xchg   ebp,eax
  417f51:	dec    ecx
  417f52:	in     al,0x45
  417f54:	mov    BYTE PTR [ebx+0x53],0x38
  417f58:	sbb    cl,BYTE PTR [eax+0x67eee9cc]
  417f5e:	xchg   BYTE PTR [ebx-0xf32953e],dl
  417f64:	aas    
  417f65:	ror    edi,0x3b
  417f68:	pop    esi
  417f69:	or     ebx,DWORD PTR [esi-0x54]
  417f6c:	ja     0x417efa
  417f6e:	pushw  ds
  417f70:	mov    al,ds:0x342e7e35
  417f75:	cld    
  417f76:	and    al,0xfd
  417f78:	cmp    edx,DWORD PTR [ecx+edi*4-0x52]
  417f7c:	mov    ebp,0xf5ca5298
  417f81:	mov    gs,ecx
  417f83:	cli    
  417f84:	sub    BYTE PTR [ecx-0x4b8ac7a4],dh
  417f8a:	xchg   ecx,eax
  417f8b:	shl    cl,1
  417f8d:	mov    cl,0xf5
  417f8f:	cld    
  417f90:	mov    cl,0x0
  417f92:	stos   DWORD PTR es:[edi],eax
  417f93:	jmp    0x417f86
  417f95:	mov    dh,0xfd
  417f97:	retf   
  417f98:	outs   dx,BYTE PTR ds:[esi]
  417f99:	sbb    ch,dl
  417f9b:	xchg   edi,eax
  417f9c:	cmp    eax,0x1284eae7
  417fa1:	loope  0x417fb8
  417fa3:	or     ah,BYTE PTR [ebx]
  417fa5:	jecxz  0x417faf
  417fa7:	mov    BYTE PTR [ebp-0x11],ah
  417faa:	stos   DWORD PTR es:[edi],eax
  417fab:	push   0xe28c439f
  417fb0:	and    esi,edx
  417fb2:	or     ebx,esi
  417fb4:	dec    esp
  417fb5:	push   edx
  417fb6:	adc    esp,DWORD PTR [ebx]
  417fb8:	add    BYTE PTR [edi-0xa],al
  417fbb:	outs   dx,BYTE PTR ds:[esi]
  417fbc:	add    eax,0xefe2b3c0
  417fc1:	pop    ss
  417fc2:	cld    
  417fc3:	dec    ebx
  417fc4:	push   ecx
  417fc5:	adc    DWORD PTR [edi+0x65],0xfffffffb
  417fc9:	loopne 0x417f61
  417fcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fcc:	fwait
  417fcd:	in     eax,0xfd
  417fcf:	sbb    eax,DWORD PTR [ebx]
  417fd1:	pop    ebp
  417fd2:	iret   
  417fd3:	jmp    0x85dd:0xb8881951
  417fda:	push   ds
  417fdb:	pop    edi
  417fdc:	sbb    ebp,eax
  417fde:	dec    DWORD PTR [edi+0x74]
  417fe1:	adc    al,0x8c
  417fe3:	pusha  
  417fe4:	jg     0x417fed
  417fe6:	push   esp
  417fe7:	call   0xc131:0x589d3689
  417fee:	popa   
  417fef:	enter  0xc326,0x73
  417ff3:	adc    eax,esp
  417ff5:	into   
  417ff6:	and    BYTE PTR [ebp+0x16db6b2c],0x8d
  417ffd:	sub    al,0xf9
  417fff:	jae    0x417fec
  418001:	fcom   QWORD PTR [ebx]
  418003:	adc    eax,0x6634f442
  418008:	repz call 0xf03b7970
  41800e:	or     eax,0x4a093f9e
  418013:	lods   eax,DWORD PTR ds:[esi]
  418014:	jge    0x41804d
  418016:	add    edx,DWORD PTR [esi]
  418018:	xor    al,0x69
  41801a:	stos   DWORD PTR es:[edi],eax
  41801b:	stos   BYTE PTR es:[edi],al
  41801c:	aad    0x71
  41801e:	dec    edi
  41801f:	loope  0x41801a
  418021:	jmp    0x40fd6993
  418026:	adc    DWORD PTR [ecx],ecx
  418028:	fld    TBYTE PTR [ebx]
  41802a:	mov    DWORD PTR ds:0x806041e5,ebp
  418030:	cld    
  418031:	jmp    0xd1f50e62
  418036:	inc    eax
  418037:	hlt    
  418038:	sbb    al,0x43
  41803a:	lods   al,BYTE PTR ds:[esi]
  41803b:	daa    
  41803c:	jg     0x41808f
  41803e:	sahf   
  41803f:	shl    DWORD PTR [ebx-0x4d58f887],1
  418045:	jb     0x418092
  418047:	inc    esi
  418048:	mov    DWORD PTR [ecx+ebp*8+0x34],0x2d5cc6df
  418050:	stc    
  418051:	sbb    DWORD PTR [edx-0x706d0c38],eax
  418057:	shl    DWORD PTR [esp+eax*1],0xb6
  41805b:	(bad)  
  41805c:	ins    BYTE PTR es:[edi],dx
  41805d:	xchg   DWORD PTR [ebp+0x862e15d],edi
  418063:	mov    BYTE PTR [ebx],ch
  418065:	stc    
  418066:	add    dl,dh
  418068:	inc    ebx
  418069:	and    al,0x2e
  41806b:	lea    edi,ds:0x789e3525
  418071:	in     eax,0x68
  418073:	shl    BYTE PTR [ecx-0x30],cl
  418076:	jns    0x4180d6
  418078:	jge    0x418022
  41807a:	push   cs
  41807b:	jae    0x4180a8
  41807d:	xchg   BYTE PTR [edx+ebp*4-0x54156531],ah
  418084:	leave  
  418085:	fcomp  st(6)
  418087:	sbb    edi,DWORD PTR ds:0x2c3be73
  41808d:	mov    esi,0x1a1727a2
  418092:	data16 fistp WORD PTR [ecx]
  418095:	out    0x77,eax
  418097:	repz inc ecx
  418099:	dec    esp
  41809a:	jp     0x4180a7
  41809c:	cmp    edi,DWORD PTR [esi]
  41809e:	mov    bl,0x24
  4180a0:	jae    0x41807f
  4180a2:	es mov edx,0xfc970de3
  4180a8:	ret    
  4180a9:	sti    
  4180aa:	inc    ebp
  4180ab:	stc    
  4180ac:	pop    es
  4180ad:	shl    ebx,1
  4180af:	adc    BYTE PTR [eax],cl
  4180b1:	push   eax
  4180b2:	jnp    0x4180c1
  4180b4:	ror    BYTE PTR [ebp+0x48],1
  4180b7:	push   ebx
  4180b8:	fsub   QWORD PTR [ecx+0x72a263c2]
  4180be:	in     eax,0xfa
  4180c0:	imul   eax,DWORD PTR [eax+ebp*1],0x3c
  4180c4:	inc    esi
  4180c5:	retf   
  4180c6:	and    al,0x7e
  4180c8:	(bad)  
  4180c9:	shr    BYTE PTR [ebp+0x7d0ce520],1
  4180cf:	jae    0x418128
  4180d1:	(bad)  
  4180d2:	sub    ecx,DWORD PTR [ebx+eiz*2-0x7cc61b43]
  4180d9:	shr    DWORD PTR [ebx+0x37],1
  4180dc:	mov    eax,0x3e321901
  4180e1:	stos   BYTE PTR es:[edi],al
  4180e2:	fwait
  4180e3:	push   0x7d3894e2
  4180e8:	test   BYTE PTR [ebx],ah
  4180ea:	or     dh,BYTE PTR [edi]
  4180ec:	push   cs
  4180ed:	push   esi
  4180ee:	mov    ds:0x144075fd,eax
  4180f3:	outs   dx,BYTE PTR ds:[esi]
  4180f4:	or     esp,ebp
  4180f6:	push   ss
  4180f7:	ret    0x3da9
  4180fa:	stos   BYTE PTR es:[edi],al
  4180fb:	mov    ds:0x4aef7d64,eax
  418100:	mov    eax,0x7012d516
  418105:	jo     0x418102
  418107:	std    
  418108:	aad    0xeb
  41810a:	ret    0x53e6
  41810d:	cmp    al,0xed
  41810f:	retf   0xc928
  418112:	mov    ds:0x871051d,eax
  418117:	int3   
  418118:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418119:	dec    ecx
  41811a:	ins    BYTE PTR es:[edi],dx
  41811b:	dec    ebx
  41811c:	popf   
  41811d:	popfw  
  41811f:	dec    ebx
  418120:	mov    esi,0xf808c746
  418125:	mov    esp,0xa99ec23c
  41812a:	std    
  41812b:	mov    ebp,0xd0413a3b
  418130:	xchg   ebx,eax
  418131:	sbb    eax,0xe216769d
  418136:	sub    DWORD PTR [esp+ebx*1+0x64],ebp
  41813a:	inc    esi
  41813b:	repnz or al,0xd
  41813e:	jp     0x418198
  418140:	sbb    DWORD PTR [eax+0xa0821c0],esp
  418146:	xchg   ebp,eax
  418147:	xchg   DWORD PTR [ecx-0x6fb23644],esp
  41814d:	cmc    
  41814e:	sbb    eax,0x8824b865
  418153:	mov    ?,WORD PTR [ecx]
  418155:	mov    ds:0xa3b145cb,al
  41815a:	jmp    0x418182
  41815c:	lods   eax,DWORD PTR ds:[esi]
  41815d:	mov    edx,0x6fa1253c
  418162:	mov    bl,BYTE PTR [ebp-0x1ba75c6b]
  418168:	mov    eax,ds:0x257beaa2
  41816d:	cs dec esi
  41816f:	mov    eax,0xf9367c33
  418174:	push   ebx
  418175:	repz pop eax
  418177:	(bad)  
  418178:	and    dh,BYTE PTR [edx+0x4c14e77e]
  41817e:	sub    ebx,eax
  418180:	imul   esp,DWORD PTR [edx+0x789fdc2b],0x29
  418187:	loop   0x418145
  418189:	leave  
  41818a:	outs   dx,BYTE PTR ss:[esi]
  41818c:	pop    ds
  41818d:	dec    eax
  41818e:	xor    ch,BYTE PTR [esi+0x6a]
  418191:	add    BYTE PTR [esi+0x6ed1b225],ah
  418197:	sbb    eax,0xe4a7a21c
  41819c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41819d:	loop   0x4181ed
  41819f:	retf   0xa9db
  4181a2:	sbb    BYTE PTR [ecx+0x4e],dl
  4181a5:	repnz xor BYTE PTR [eax+0x1b95a76c],cl
  4181ac:	push   ds
  4181ad:	inc    edi
  4181ae:	xor    al,0xf3
  4181b0:	adc    eax,0xe229ab91
  4181b5:	push   esp
  4181b6:	inc    ecx
  4181b7:	push   cs
  4181b8:	ins    DWORD PTR es:[edi],dx
  4181b9:	pop    ebp
  4181ba:	lock fmul DWORD PTR [edx]
  4181bd:	inc    eax
  4181be:	(bad)  [esi+0xae611df]
  4181c4:	sbb    eax,DWORD PTR ds:0x25ecc000
  4181ca:	shl    BYTE PTR [edi-0x80],0x22
  4181ce:	xchg   ebx,eax
  4181cf:	mov    DWORD PTR [ebp+0x7353bd3c],edi
  4181d5:	in     eax,0x37
  4181d7:	sub    al,0xe1
  4181d9:	xor    esi,0x3
  4181dc:	jg     0x418167
  4181de:	sti    
  4181df:	xlat   BYTE PTR ds:[ebx]
  4181e0:	xchg   BYTE PTR [ecx-0x67084957],ch
  4181e6:	das    
  4181e7:	ret    0x6d79
  4181ea:	fisub  WORD PTR [ebx]
  4181ec:	fnstcw WORD PTR [ebx+0x16f2ee2f]
  4181f2:	fdiv   DWORD PTR [ecx]
  4181f4:	popa   
  4181f5:	hlt    
  4181f6:	inc    ebp
  4181f7:	into   
  4181f8:	ret    
  4181f9:	cmp    DWORD PTR [ebx-0x7c6197a2],edx
  4181ff:	shl    DWORD PTR [edi-0x5e],1
  418202:	fwait
  418203:	pop    esi
  418204:	les    eax,FWORD PTR [ecx+edx*8+0x5922750b]
  41820b:	(bad)  
  41820c:	jg     0x4181c5
  41820e:	stos   DWORD PTR es:[edi],eax
  41820f:	or     eax,DWORD PTR [ebx]
  418211:	jle    0x4181d6
  418213:	jo     0x4181bd
  418215:	jbe    0x41826f
  418217:	ret    
  418218:	mov    bh,BYTE PTR [esi+0x5be99bbc]
  41821e:	xchg   esi,eax
  41821f:	inc    ecx
  418220:	(bad)  
  418221:	and    bh,BYTE PTR [edx-0x69941b15]
  418227:	push   ds
  418228:	dec    ecx
  418229:	rcr    esp,0xe1
  41822c:	sbb    DWORD PTR [ecx],edx
  41822e:	mov    BYTE PTR [edi+0x20],dh
  418231:	add    esp,0x28f487f0
  418237:	hlt    
  418238:	(bad)  
  418239:	lahf   
  41823a:	mov    cl,0x7d
  41823c:	add    al,0xc9
  41823e:	shl    BYTE PTR [ebx+0x2b],0x9c
  418242:	add    DWORD PTR [edi+0x6e911bba],edx
  418248:	and    DWORD PTR [ebx+ebp*4+0xc],esp
  41824c:	shl    BYTE PTR [ecx-0xb383eb3],1
  418252:	xor    al,0xea
  418254:	jne    0x418273
  418256:	mov    ds:0xd8334762,al
  41825b:	shl    BYTE PTR [ebx+esi*8],1
  41825e:	cwde   
  41825f:	mov    esi,0xac820f04
  418264:	inc    esi
  418265:	pop    es
  418266:	(bad)  
  418267:	in     al,dx
  418268:	(bad)  
  41826a:	ret    
  41826b:	mov    eax,0x8aa94930
  418270:	jg     0x4181f5
  418272:	sar    BYTE PTR [edx+ebx*2-0x3d],1
  418276:	repnz mov bl,0x1d
  418279:	jns    0x41828c
  41827b:	sub    ecx,DWORD PTR [esi+0x5b]
  41827e:	ror    dl,0x80
  418281:	dec    bx
  418283:	push   edi
  418284:	ds push es
  418286:	sbb    DWORD PTR [edx+0x22dad0de],eax
  41828c:	stc    
  41828d:	retf   
  41828e:	sbb    BYTE PTR [edi-0x80],0x6f
  418292:	lds    ebp,FWORD PTR [ebx+0x25]
  418295:	rcr    DWORD PTR [esi-0x50],0x4c
  418299:	xor    eax,0x576287e2
  41829e:	sbb    al,0x96
  4182a0:	push   0xffffff8c
  4182a2:	mov    ebx,0xe0e52495
  4182a7:	inc    edi
  4182a8:	jo     0x418285
  4182aa:	(bad)  
  4182ab:	clc    
  4182ac:	push   0x1e
  4182ae:	jnp    0x41830f
  4182b0:	lock inc edi
  4182b2:	shl    DWORD PTR [edi+0x43],cl
  4182b5:	ss pushf 
  4182b7:	and    al,0x81
  4182b9:	inc    esi
  4182ba:	or     eax,esi
  4182bc:	(bad)  
  4182bd:	jmp    0x24cdb710
  4182c2:	fisub  WORD PTR [ecx]
  4182c4:	jae    0x41832a
  4182c6:	pop    eax
  4182c7:	fnsave [ecx-0x4b]
  4182ca:	push   es
  4182cb:	aam    0x6f
  4182cd:	inc    ebx
  4182ce:	loope  0x41825a
  4182d0:	pushf  
  4182d1:	pop    ebp
  4182d2:	dec    ebx
  4182d3:	out    dx,al
  4182d4:	cmp    BYTE PTR [edi-0xb],dl
  4182d7:	mov    BYTE PTR [edi-0x39],dh
  4182da:	mov    eax,ds:0x24e5eb50
  4182df:	xor    cl,0xfe
  4182e2:	cdq    
  4182e3:	das    
  4182e4:	lods   eax,DWORD PTR ds:[esi]
  4182e5:	or     BYTE PTR ds:0xbf9bffc2,dl
  4182eb:	shr    BYTE PTR [ebx],1
  4182ed:	gs push eax
  4182ef:	stc    
  4182f0:	dec    ebx
  4182f1:	adc    al,BYTE PTR [eax]
  4182f3:	sahf   
  4182f4:	cmp    DWORD PTR [edi-0x33db1c9b],ecx
  4182fa:	sbb    DWORD PTR [edi],esi
  4182fc:	pop    esp
  4182fd:	jmp    0xd549:0xcb0b
  418303:	fdivr  DWORD PTR [esi-0x40fe3cb7]
  418309:	retf   
  41830a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41830b:	cmp    DWORD PTR [eax],eax
  41830d:	ss adc esp,edx
  418310:	mov    al,ds:0x6cf24074
  418315:	pop    esi
  418316:	push   DWORD PTR [eax]
  418318:	push   edx
  418319:	aad    0xc2
  41831b:	push   ss
  41831c:	add    eax,0x82e483e2
  418321:	ffreep st(5)
  418323:	sbb    DWORD PTR [esi-0x55],edi
  418326:	and    DWORD PTR [esi],esp
  418328:	daa    
  418329:	mov    bl,0xc7
  41832b:	add    eax,0xcc73dd42
  418330:	call   0xb2afa7c0
  418335:	cmp    ebx,ebp
  418337:	push   eax
  418338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418339:	and    dl,bl
  41833b:	outs   dx,DWORD PTR ds:[esi]
  41833c:	fcom   QWORD PTR [eax-0x5f]
  41833f:	push   cs
  418340:	jbe    0x418337
  418342:	les    eax,FWORD PTR [esi-0x31]
  418345:	test   BYTE PTR [ebp-0x2249d8c3],bl
  41834b:	cmp    eax,0x66f752d2
  418350:	xlat   BYTE PTR ds:[ebx]
  418351:	out    0xfb,al
  418353:	mov    ebp,0xa2f690df
  418358:	mov    ebx,0x51173be
  41835d:	push   esi
  41835e:	and    ch,BYTE PTR [edi]
  418360:	retf   
  418361:	sahf   
  418362:	inc    edi
  418363:	or     ch,BYTE PTR [ecx-0x11b91fa]
  418369:	sbb    BYTE PTR [ebp+0x61],0x38
  41836d:	or     DWORD PTR [edx+edi*1-0x6],ebp
  418371:	inc    esp
  418372:	(bad)  
  418373:	cld    
  418374:	dec    edx
  418375:	inc    ebp
  418376:	sub    BYTE PTR [eax],0xf6
  418379:	lock sbb bh,BYTE PTR [eax]
  41837c:	inc    eax
  41837d:	call   0x86eb8bf6
  418382:	inc    esp
  418383:	push   es
  418384:	popf   
  418385:	iret   
  418386:	adc    DWORD PTR [edi+0x40],esp
  418389:	or     DWORD PTR [ebp-0x486b6832],ecx
  41838f:	pop    ebx
  418390:	jmp    0x622b9f2a
  418395:	add    edi,eax
  418397:	jp     0x418393
  418399:	xchg   DWORD PTR [eax-0x43],edi
  41839c:	hlt    
  41839d:	cmp    bl,BYTE PTR [edi-0x4c]
  4183a0:	mov    ebx,0x26060354
  4183a5:	mov    ah,0x15
  4183a7:	cmp    BYTE PTR [edx+0x79],al
  4183aa:	dec    ebp
  4183ab:	dec    eax
  4183ac:	mov    ebp,0x45ab426
  4183b1:	sub    eax,0xd6b0404b
  4183b6:	fs (bad) 
  4183b8:	jge    0x41837f
  4183ba:	push   eax
  4183bb:	inc    esi
  4183bc:	(bad)  
  4183bd:	pop    ds
  4183be:	pop    ebp
  4183bf:	data16 fadd st(5),st
  4183c2:	in     al,dx
  4183c3:	add    al,0xe2
  4183c5:	push   esi
  4183c6:	mov    dl,0xd5
  4183c8:	repnz xor esp,DWORD PTR [esi-0x79]
  4183cc:	adc    ah,BYTE PTR [edx+0x41]
  4183cf:	add    DWORD PTR [eax],edi
  4183d1:	or     eax,0x4f17523a
  4183d6:	mov    ah,0x18
  4183d8:	jno    0x4183c0
  4183da:	cli    
  4183db:	sbb    cl,dh
  4183dd:	into   
  4183de:	pop    ecx
  4183df:	pusha  
  4183e0:	or     BYTE PTR [eax],ah
  4183e2:	mov    ds:0x55a772e4,eax
  4183e7:	or     DWORD PTR [edx],ecx
  4183e9:	addr16 pop ebp
  4183eb:	mov    ch,0x81
  4183ed:	xor    BYTE PTR [ebx-0x2556a090],bh
  4183f3:	jge    0x418398
  4183f5:	ins    DWORD PTR es:[edi],dx
  4183f6:	rcr    BYTE PTR [esi],1
  4183f8:	sti    
  4183f9:	mov    BYTE PTR [edx],dl
  4183fb:	inc    ebx
  4183fc:	or     esp,DWORD PTR [eax-0x43d6ec61]
  418402:	into   
  418403:	test   BYTE PTR [eax+0x187219f8],bh
  418409:	(bad)  
  41840a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41840b:	(bad)  
  41840d:	dec    edx
  41840e:	push   esi
  41840f:	xor    al,0x71
  418411:	pusha  
  418412:	xchg   esi,eax
  418413:	and    bl,dl
  418415:	push   edi
  418416:	inc    edi
  418417:	call   0x30b4:0x2149305d
  41841e:	stos   BYTE PTR es:[edi],al
  41841f:	or     edi,DWORD PTR cs:[edx]
  418422:	rcr    esi,0x32
  418425:	outs   dx,BYTE PTR ds:[esi]
  418426:	fdivr  QWORD PTR [edi-0x19]
  418429:	adc    esp,DWORD PTR [ebp+0x6e1c195]
  41842f:	shl    BYTE PTR [esp+edi*1-0x22],0x80
  418434:	dec    ebp
  418435:	call   0x88a7cd63
  41843a:	cmp    al,0x23
  41843c:	(bad)  
  41843d:	push   esi
  41843e:	or     DWORD PTR ds:0x350ea876,edi
  418444:	fadd   DWORD PTR [ecx]
  418446:	cmp    ebx,eax
  418448:	mov    eax,ds:0x43e22473
  41844d:	cli    
  41844e:	adc    eax,0x3c872ffb
  418453:	mov    eax,ds:0x361cdc65
  418458:	jmp    0x29ad:0xe61fad55
  41845f:	pop    eax
  418460:	(bad)  
  418461:	xor    eax,0xb1916441
  418466:	call   0xd6dbf31f
  41846b:	arpl   bp,bp
  41846d:	and    dh,0xaf
  418470:	(bad)  
  418471:	out    dx,eax
  418472:	cmp    BYTE PTR [ebp-0x34],cl
  418475:	adc    DWORD PTR [ebx],esp
  418477:	jmp    0xe47:0x82c80d2f
  41847e:	adc    edx,DWORD PTR [ecx+0x40]
  418481:	data16 xlat BYTE PTR ds:[ebx]
  418483:	adc    eax,0x3686cb4d
  418488:	ja     0x418501
  41848a:	loopne 0x4184ff
  41848c:	scas   al,BYTE PTR es:[edi]
  41848d:	and    DWORD PTR [edx],esi
  41848f:	mov    ebp,0xc7ae611d
  418494:	push   edi
  418495:	jecxz  0x4184e5
  418497:	cmp    dh,dl
  418499:	and    al,0xfc
  41849b:	push   cs
  41849c:	or     dh,BYTE PTR [ecx-0x1c]
  41849f:	dec    edi
  4184a0:	xchg   DWORD PTR [ebx-0x3f],esi
  4184a3:	das    
  4184a4:	mov    eax,0x9193c671
  4184a9:	xchg   edi,eax
  4184aa:	aas    
  4184ab:	mov    ebp,0x5b4f1c10
  4184b0:	adc    al,0xd6
  4184b2:	dec    ebx
  4184b3:	push   ecx
  4184b4:	jmp    0x4184b2
  4184b6:	cld    
  4184b7:	sti    
  4184b8:	xor    al,0x1
  4184ba:	(bad)  
  4184bb:	xchg   ecx,eax
  4184bc:	mov    eax,0x8fb457d5
  4184c1:	dec    ecx
  4184c2:	sbb    eax,0x666a3116
  4184c7:	repnz retf 0x7e79
  4184cb:	jbe    0x4184c2
  4184cd:	pop    ss
  4184ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4184cf:	dec    edi
  4184d0:	jnp    0x418543
  4184d2:	jb     0x418519
  4184d4:	jecxz  0x41849b
  4184d6:	jno    0x418480
  4184d8:	rcl    ch,0x25
  4184db:	pop    eax
  4184dc:	xor    esp,ebp
  4184de:	sbb    cl,BYTE PTR [edi+0x126bfdfc]
  4184e4:	mov    eax,ds:0xd2bb54c
  4184e9:	fnstenv [eax]
  4184eb:	jecxz  0x418567
  4184ed:	clc    
  4184ee:	or     ebx,ecx
  4184f0:	and    al,0x46
  4184f2:	jle    0x4184a0
  4184f4:	gs lock mov al,0xd8
  4184f8:	xor    eax,0xec784c06
  4184fd:	inc    ebx
  4184fe:	test   DWORD PTR [ebp+0x22],eax
  418501:	loope  0x4184a8
  418503:	push   ss
  418504:	xor    BYTE PTR [edi-0x11f5ccc0],ah
  41850a:	stos   DWORD PTR es:[edi],eax
  41850b:	pop    ds
  41850c:	nop
  41850d:	xchg   edi,eax
  41850e:	inc    ebp
  41850f:	pop    esp
  418510:	mov    BYTE PTR [edx+0x27],bl
  418513:	sbb    esp,DWORD PTR [esi-0x21]
  418516:	rcl    DWORD PTR [edi-0x67458d37],0x6b
  41851d:	and    eax,0xb49dcf11
  418522:	out    dx,eax
  418523:	ficomp WORD PTR ds:0x7ef4c239
  418529:	sbb    dl,bl
  41852b:	int    0x96
  41852d:	and    al,BYTE PTR [edx]
  41852f:	pop    ds
  418530:	add    al,0xd7
  418532:	daa    
  418533:	mov    ds:0xd5e8ac33,al
  418538:	sbb    esp,DWORD PTR [ecx]
  41853a:	xchg   ecx,eax
  41853b:	dec    ebp
  41853c:	imul   eax,DWORD PTR [edx],0x759407d9
  418542:	cs push 0xffffffac
  418545:	sbb    BYTE PTR [edi],dh
  418547:	mov    ?,WORD PTR [bp+0x5d]
  41854b:	cmp    esp,DWORD PTR [ebp-0x6933c3da]
  418551:	das    
  418552:	sbb    BYTE PTR [edx-0x44cca708],al
  418558:	xor    bl,ah
  41855a:	sbb    al,BYTE PTR [esi-0x17ba60f4]
  418560:	mov    ds:0x2fa9e8e,al
  418565:	scas   eax,DWORD PTR es:[edi]
  418566:	pop    eax
  418567:	jne    0x418521
  418569:	lds    ebx,FWORD PTR [esi-0x24]
  41856c:	mov    ds:0x5520c30e,eax
  418571:	ret    
  418572:	jns    0x4184ff
  418574:	mov    al,0x79
  418576:	int    0xd5
  418578:	pop    ecx
  418579:	out    0xfc,al
  41857b:	jns    0x418539
  41857d:	iret   
  41857e:	mov    bh,BYTE PTR [esi-0x27503176]
  418584:	push   eax
  418585:	mov    dl,0xea
  418587:	loop   0x41856c
  418589:	fwait
  41858a:	hlt    
  41858b:	push   edi
  41858c:	test   BYTE PTR [edi-0x5],0x2d
  418590:	inc    ecx
  418591:	push   es
  418592:	pop    ss
  418593:	out    0xab,eax
  418595:	inc    ebx
  418596:	jno    0x4185f4
  418598:	mov    bl,0x18
  41859a:	ret    0x3be4
  41859d:	inc    edx
  41859e:	adc    ebx,edx
  4185a0:	pop    ebp
  4185a1:	jae    0x418555
  4185a3:	mov    al,0x19
  4185a5:	js     0x4185e4
  4185a7:	jge    0x418592
  4185a9:	call   0x949d:0xf2b52ff8
  4185b0:	dec    edx
  4185b1:	in     eax,dx
  4185b2:	sahf   
  4185b3:	fwait
  4185b4:	cld    
  4185b5:	jno    0x418544
  4185b7:	jne    0x418618
  4185b9:	adc    eax,0x929142e3
  4185be:	and    eax,0x8d3a9cdb
  4185c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185c4:	aaa    
  4185c5:	cwde   
  4185c6:	popa   
  4185c7:	mov    edx,0xc3f963cf
  4185cc:	ins    DWORD PTR es:[edi],dx
  4185cd:	shl    bh,cl
  4185cf:	jne    0x4185cc
  4185d1:	mov    al,ds:0x2c4029cf
  4185d6:	push   0xfca70a77
  4185db:	pop    sp
  4185dd:	fucomi st,st(4)
  4185df:	cdq    
  4185e0:	xor    al,BYTE PTR [esi+ebp*2]
  4185e3:	cmp    BYTE PTR [edi-0x3b],0xb5
  4185e7:	push   es
  4185e8:	or     eax,0xc166f4ff
  4185ed:	adc    BYTE PTR [edi+eiz*4+0x5717ea1d],0x20
  4185f5:	cmp    DWORD PTR ds:[edi+0x5f6b8ac8],ecx
  4185fc:	pop    edi
  4185fd:	cmp    ebx,esi
  4185ff:	cmp    bl,BYTE PTR [edx]
  418601:	sub    eax,0x52c33945
  418606:	mov    edx,0xc48c1024
  41860b:	or     BYTE PTR [ebp+edx*1-0x3026e7aa],dl
  418612:	les    edi,FWORD PTR [edi-0x3c1b0d3]
  418618:	je     0x418677
  41861a:	push   ss
  41861b:	dec    DWORD PTR [ebx+0x2]
  41861e:	js     0x418676
  418620:	adc    esp,DWORD PTR [ecx-0x3ecda9de]
  418626:	add    eax,0xa23d7ef4
  41862b:	shl    DWORD PTR [ebp+ebp*8+0x9],1
  41862f:	jno    0x418600
  418631:	mov    al,0x4c
  418633:	ror    BYTE PTR [ebx-0x20988e59],1
  418639:	lock jbe 0x418688
  41863c:	dec    esi
  41863d:	adc    ch,BYTE PTR [ecx]
  41863f:	dec    ebx
  418640:	or     bl,BYTE PTR [ecx]
  418642:	inc    edx
  418643:	xchg   ebp,eax
  418644:	lock add edx,DWORD PTR [ecx-0x14]
  418648:	pushf  
  418649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41864a:	mov    ds:0x4d750c5e,al
  41864f:	icebp  
  418650:	pop    esp
  418651:	shl    DWORD PTR [ebx-0x39],0x2
  418655:	mov    ds:0xbfda8dfa,al
  41865a:	xor    DWORD PTR [ebp+0x6f593451],edi
  418660:	mov    al,0x21
  418662:	test   al,0xd6
  418664:	jecxz  0x4185f9
  418666:	sub    esp,DWORD PTR [ecx]
  418668:	js     0x4186d4
  41866a:	mov    ah,0xe4
  41866c:	call   0xc19f1512
  418671:	lahf   
  418672:	jb     0x41866a
  418674:	outs   dx,DWORD PTR ds:[esi]
  418675:	jmp    0xa7fc1075
  41867a:	and    bh,BYTE PTR [esi+0x8]
  41867d:	mov    esp,ecx
  41867f:	arpl   WORD PTR [edi+0x16ee775c],sp
  418685:	fild   DWORD PTR [ecx+0x3c]
  418688:	fadd   QWORD PTR [ebx+0x1d]
  41868b:	js     0x4186b9
  41868d:	xor    eax,0xeef27c96
  418692:	ret    
  418693:	pushf  
  418694:	pop    eax
  418695:	xor    esi,DWORD PTR [esi+0x1e]
  418698:	dec    edx
  418699:	(bad)  
  41869a:	adc    eax,0x5e50c9df
  41869f:	sbb    BYTE PTR [esp+edx*2-0x485a70cb],0x7b
  4186a7:	mov    bh,0x63
  4186a9:	lods   eax,DWORD PTR ds:[esi]
  4186aa:	cmp    BYTE PTR [edi+0xf7093ed],0x91
  4186b1:	outs   dx,BYTE PTR ds:[esi]
  4186b2:	test   eax,0x51b72b2e
  4186b7:	(bad)  
  4186b8:	retf   0xd869
  4186bb:	pop    eax
  4186bc:	dec    eax
  4186bd:	in     al,dx
  4186be:	addr16 mov dh,0x7f
  4186c1:	push   edx
  4186c2:	aad    0x6f
  4186c4:	lahf   
  4186c5:	sar    BYTE PTR [eax],0xc3
  4186c8:	jg     0x4186e5
  4186ca:	daa    
  4186cb:	cdq    
  4186cc:	push   esi
  4186cd:	or     al,0x67
  4186cf:	pushf  
  4186d0:	cwde   
  4186d1:	sbb    esp,DWORD PTR [ebx]
  4186d3:	sti    
  4186d4:	mov    ebp,0x756470bd
  4186d9:	jg     0x4186cd
  4186db:	js     0x41870d
  4186dd:	xchg   esp,eax
  4186de:	fisubr WORD PTR [edi+0x4f]
  4186e1:	repz neg BYTE PTR [ebx-0x56]
  4186e5:	and    eax,0xc89a072d
  4186ea:	dec    ebx
  4186eb:	or     eax,0x451049ac
  4186f0:	pop    ebp
  4186f1:	inc    ecx
  4186f2:	inc    eax
  4186f3:	and    DWORD PTR [ebp+0x59],ecx
  4186f6:	sub    esp,DWORD PTR [edi]
  4186f8:	fsub   QWORD PTR [ebp-0x67]
  4186fb:	dec    eax
  4186fc:	shl    bh,1
  4186fe:	cli    
  4186ff:	inc    ebp
  418700:	xchg   edi,eax
  418701:	mov    DWORD PTR [edx+edx*2-0x4b],eax
  418705:	mov    ebp,0xe36af31b
  41870a:	xlat   BYTE PTR ds:[ebx]
  41870b:	dec    ebx
  41870c:	push   edx
  41870d:	fcom   QWORD PTR [esi]
  41870f:	lods   eax,DWORD PTR ds:[esi]
  418710:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418711:	mov    esi,0x697cf269
  418717:	int    0x29
  418719:	jge    0x41875e
  41871b:	sbb    ch,bl
  41871d:	xor    BYTE PTR [edx],cl
  41871f:	mov    dh,0xc2
  418721:	push   0x748d41a3
  418726:	fsubrp st(7),st
  418728:	addr16 dec ebp
  41872a:	xchg   ebx,eax
  41872b:	or     ah,BYTE PTR [ebx+0x1f]
  41872e:	adc    dh,BYTE PTR [ebx+0x62]
  418731:	test   al,0xd1
  418733:	shr    DWORD PTR [ebp-0x25],0xd8
  418737:	jns    0x4187b6
  418739:	jae    0x41871d
  41873b:	lahf   
  41873c:	cwde   
  41873d:	adc    ch,al
  41873f:	dec    ebx
  418740:	mov    ecx,0xa38ace43
  418745:	cmp    cl,BYTE PTR [eax-0x69c3a772]
  41874b:	sti    
  41874c:	inc    ecx
  41874d:	enter  0x394c,0x43
  418751:	and    BYTE PTR [ebx-0x59],dh
  418754:	xchg   ecx,eax
  418755:	call   0xb9be8df0
  41875a:	or     cl,0xed
  41875d:	ins    BYTE PTR es:[edi],dx
  41875e:	or     eax,0x829d7c78
  418763:	pop    ebp
  418764:	out    dx,eax
  418765:	pop    edi
  418766:	iret   
  418767:	dec    edx
  418768:	cdq    
  418769:	lea    ecx,[eax]
  41876b:	lods   al,BYTE PTR ds:[esi]
  41876c:	mov    al,0xc0
  41876e:	ins    BYTE PTR es:[edi],dx
  41876f:	xor    ch,BYTE PTR [esi+0x31]
  418772:	mov    dh,al
  418774:	nop
  418775:	(bad)  
  418777:	jo     0x4187d3
  418779:	leave  
  41877a:	sub    al,0x15
  41877c:	jno    0x418761
  41877e:	adc    DWORD PTR [ecx+0xf7159eb],eax
  418784:	pop    es
  418785:	ins    DWORD PTR es:[edi],dx
  418786:	cmp    edi,DWORD PTR [ecx+0x67f68053]
  41878c:	loop   0x4187a5
  41878e:	aad    0x10
  418790:	and    BYTE PTR [esi+eiz*2],dh
  418793:	inc    ebx
  418794:	dec    ebx
  418795:	shl    BYTE PTR [ebx+ebx*4+0x73],cl
  418799:	daa    
  41879a:	repz jo 0x418795
  41879d:	jge    0x418760
  41879f:	out    0x4e,al
  4187a1:	aaa    
  4187a2:	repnz retf 
  4187a4:	xlat   BYTE PTR ds:[ebx]
  4187a5:	sbb    al,0xcf
  4187a7:	pop    ebp
  4187a8:	cmp    al,BYTE PTR [ebx+0x6ecb993a]
  4187ae:	add    dh,BYTE PTR [ebp-0x41]
  4187b1:	rcr    al,1
  4187b3:	ret    0xf3e1
  4187b6:	or     ecx,0xb
  4187b9:	(bad)  
  4187ba:	(bad)  
  4187bb:	xchg   edx,eax
  4187bc:	xchg   DWORD PTR [edx+0x767e0c5],ebp
  4187c2:	sub    edx,ecx
  4187c4:	push   cs
  4187c5:	fmul   DWORD PTR [ebx-0x41]
  4187c8:	ja     0x4187e6
  4187ca:	xor    DWORD PTR [eax*1-0x4da87223],esp
  4187d1:	ins    BYTE PTR es:[edi],dx
  4187d2:	sbb    eax,0xddd8b276
  4187d7:	outs   dx,BYTE PTR ds:[esi]
  4187d8:	std    
  4187d9:	(bad)  
  4187da:	std    
  4187db:	add    BYTE PTR [eax],bh
  4187dd:	xchg   DWORD PTR [eax],esp
  4187df:	xchg   esp,eax
  4187e0:	add    DWORD PTR [esi+0x6b],eax
  4187e3:	or     BYTE PTR [eax+0x9],dl
  4187e6:	cwde   
  4187e7:	sbb    DWORD PTR [esi],ecx
  4187e9:	loopne 0x418811
  4187eb:	and    eax,0xc0e92e49
  4187f0:	jb     0x4187f4
  4187f2:	into   
  4187f3:	ror    BYTE PTR [esi+0x4d],0x1d
  4187f7:	sub    bl,ch
  4187f9:	mov    al,ds:0x967338e3
  4187fe:	adc    bx,bp
  418801:	fimul  DWORD PTR [esi+ebx*8]
  418804:	and    eax,esi
  418806:	es cdq 
  418808:	push   edi
  418809:	mov    BYTE PTR [ebp-0x76],bh
  41880c:	xor    BYTE PTR [ebp-0x385c55bd],ah
  418812:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418814:	adc    esi,DWORD PTR [edi-0x47ac9b33]
  41881a:	cdq    
  41881b:	mov    bl,BYTE PTR [ebx+0x6267a45]
  418821:	pop    ds
  418822:	xor    eax,0xeda561e4
  418827:	sub    ecx,DWORD PTR ss:[eax+0x73]
  41882b:	sahf   
  41882c:	mov    al,0x37
  41882e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41882f:	or     bh,BYTE PTR [ecx+edx*2]
  418832:	sub    al,0xc9
  418834:	mov    edi,0x91c4f227
  418839:	(bad)  
  41883a:	pop    eax
  41883b:	cmp    esi,esi
  41883d:	icebp  
  41883e:	and    eax,0x55c8efb5
  418843:	scas   eax,DWORD PTR es:[edi]
  418844:	mov    ebp,0x9890c65a
  418849:	push   0xffffff8d
  41884b:	arpl   WORD PTR [esi],di
  41884d:	(bad)  
  41884e:	retf   
  41884f:	imul   esp,DWORD PTR [ebp+0x54238c97],0x3f
  418856:	xchg   esp,eax
  418857:	jg     0x41886b
  418859:	inc    esi
  41885a:	stos   DWORD PTR es:[edi],eax
  41885b:	mov    ds:0x797a7d8c,eax
  418860:	loop   0x41883f
  418862:	jb     0x418844
  418864:	cmove  edi,DWORD PTR [esi]
  418867:	pop    ss
  418868:	loop   0x418826
  41886a:	adc    eax,0xdf9089aa
  41886f:	mov    al,0xb3
  418871:	xor    eax,0x7d591664
  418876:	pop    esi
  418877:	cwde   
  418878:	mov    al,ah
  41887a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41887b:	mov    dl,0x39
  41887d:	lock xchg ecx,eax
  41887f:	push   esi
  418880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418881:	cmp    eax,DWORD PTR [ecx]
  418883:	fucomi st,st(3)
  418885:	xor    al,0x9
  418887:	fild   QWORD PTR [edi-0x6f]
  41888a:	stos   DWORD PTR es:[edi],eax
  41888b:	mov    eax,0xc9a905da
  418890:	sbb    al,0x65
  418892:	in     eax,0xe9
  418894:	lea    ebx,[ecx]
  418896:	xchg   ebx,eax
  418897:	adc    al,0x19
  418899:	inc    edx
  41889a:	mov    esp,0xe0ed56cc
  41889f:	in     eax,dx
  4188a0:	les    edi,FWORD PTR ds:0x807a0f71
  4188a6:	pop    ebp
  4188a7:	ret    
  4188a8:	addr16 xchg esi,eax
  4188aa:	push   esi
  4188ab:	xchg   ecx,eax
  4188ac:	das    
  4188ad:	mov    ds:0x3fe75401,al
  4188b2:	dec    ebx
  4188b3:	dec    ecx
  4188b4:	dec    ebp
  4188b5:	mov    ebp,0x8b24f8e4
  4188ba:	stc    
  4188bb:	cmp    al,0xa7
  4188bd:	shr    BYTE PTR [ecx+esi*2-0x1f],cl
  4188c1:	push   es
  4188c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188c3:	add    BYTE PTR [ebp+0x135c2a81],bh
  4188c9:	ficomp WORD PTR [ebp+0x36d2043a]
  4188cf:	popa   
  4188d0:	test   DWORD PTR [esi+ebp*8+0x23],ecx
  4188d4:	jno    0x41886c
  4188d6:	push   0x3f8168d7
  4188db:	enter  0x37e5,0xee
  4188df:	dec    ecx
  4188e0:	frstor [eax-0x1c]
  4188e3:	iret   
  4188e4:	pop    ss
  4188e5:	and    BYTE PTR cs:[ecx-0xb745d08],ah
  4188ec:	xchg   BYTE PTR [esi+0x6b],dh
  4188ef:	jg     0x4188e8
  4188f1:	jns    0x418892
  4188f3:	add    esi,ebx
  4188f5:	call   0x9394:0xea6197d4
  4188fc:	sbb    esp,edi
  4188fe:	into   
  4188ff:	rcl    DWORD PTR gs:[esi-0x1e9525a6],cl
  418906:	jp     0x41894d
  418908:	test   bh,bh
  41890a:	cs push edi
  41890c:	punpckhwd mm6,QWORD PTR [eax-0x2d]
  418910:	inc    esi
  418911:	fisttp DWORD PTR [eax-0x6e37a240]
  418917:	jmp    0x65f62d61
  41891c:	scas   eax,DWORD PTR es:[edi]
  41891d:	xchg   esi,eax
  41891e:	retf   
  41891f:	mov    ch,0x3e
  418921:	cdq    
  418922:	or     ecx,DWORD PTR [esi-0x18d4bb2]
  418928:	and    edx,esi
  41892a:	and    eax,DWORD PTR [ebp-0x72]
  41892d:	add    cl,0xf1
  418930:	sbb    BYTE PTR [edx+0x4a2a36b],dh
  418936:	or     DWORD PTR [ebx],esp
  418938:	xchg   ebx,eax
  418939:	call   FWORD PTR [edx-0x21c43d0e]
  41893f:	push   esp
  418940:	js     0x62d32298
  418946:	mov    BYTE PTR [eax],bl
  418948:	inc    esi
  418949:	aam    0xd6
  41894b:	retf   
  41894c:	aad    0x95
  41894e:	enter  0x8386,0x62
  418952:	pusha  
  418953:	and    edx,edi
  418955:	aam    0xc1
  418957:	pop    esp
  418958:	fnstsw WORD PTR [edi]
  41895a:	cmc    
  41895b:	or     dl,BYTE PTR [esi]
  41895d:	in     al,0xc6
  41895f:	and    ebx,edi
  418961:	xlat   BYTE PTR ds:[ebx]
  418962:	pop    edi
  418963:	and    ebp,DWORD PTR [edi]
  418965:	lahf   
  418966:	push   edi
  418967:	mov    WORD PTR [edi+ebp*1-0x44f25893],ds
  41896e:	fwait
  41896f:	jo     0x41891d
  418971:	jle    0x41895a
  418973:	fnsave [ecx]
  418975:	dec    DWORD PTR [ecx+0x63]
  418978:	test   BYTE PTR [edi+ebx*8-0x7be55eb4],0x31
  418980:	shr    BYTE PTR [esi],0x67
  418983:	lds    esi,FWORD PTR [ecx]
  418985:	aad    0x60
  418987:	pop    ebp
  418988:	push   es
  418989:	jp     0x418a03
  41898b:	inc    eax
  41898c:	std    
  41898d:	into   
  41898e:	inc    esp
  41898f:	jno    0x418949
  418991:	rcl    BYTE PTR [ecx+0xa6c52eb],0xf
  418998:	ins    BYTE PTR es:[edi],dx
  418999:	pop    eax
  41899a:	push   eax
  41899b:	ss dec esi
  41899d:	test   DWORD PTR [edx+0x4f],edx
  4189a0:	dec    edx
  4189a1:	mov    edx,0x55cbc264
  4189a6:	(bad)
  4189a9:	mov    ch,0xc5
  4189ab:	inc    esp
  4189ac:	test   DWORD PTR [ebx+0x3b],0x7932eeef
  4189b3:	call   0x6d16:0x333de95f
  4189ba:	adc    eax,0x7e759b3b
  4189bf:	bnd ds jns 0x4189ce
  4189c3:	cmp    bh,BYTE PTR [esi-0x556cab77]
  4189c9:	lahf   
  4189ca:	lock xlat BYTE PTR ds:[ebx]
  4189cc:	push   0xe72b4d9d
  4189d1:	and    ebp,ecx
  4189d3:	xor    cl,BYTE PTR [edx-0x52]
  4189d6:	test   al,0xcc
  4189d8:	(bad)  
  4189d9:	mov    dl,0xe7
  4189db:	call   0xe62cbe46
  4189e0:	mov    esi,0x7ddaf82c
  4189e5:	fild   QWORD PTR [ebx-0x641d0176]
  4189eb:	clc    
  4189ec:	in     al,dx
  4189ed:	mov    edx,DWORD PTR [ebx+0x6d]
  4189f0:	ss shl esp,0xdb
  4189f4:	jno    0x418a2f
  4189f6:	mov    BYTE PTR [ebx-0x97fe067],bh
  4189fc:	stc    
  4189fd:	mov    ebp,DWORD PTR [ecx]
  4189ff:	pop    es
  418a00:	fdivrp st(7),st
  418a02:	or     BYTE PTR [eax+0x64f5ee0c],cl
  418a08:	adc    al,0xda
  418a0a:	lods   eax,DWORD PTR ds:[esi]
  418a0b:	jbe    0x418a28
  418a0d:	and    al,0x92
  418a0f:	outs   dx,BYTE PTR ds:[esi]
  418a10:	mov    esp,0xed37493c
  418a15:	cmc    
  418a16:	fisttp QWORD PTR [eax]
  418a18:	ror    BYTE PTR [eax],0x75
  418a1b:	add    ch,dh
  418a1d:	mov    ch,0x4f
  418a1f:	cmp    edi,DWORD PTR [eax-0x3d270361]
  418a25:	imul   esi,DWORD PTR fs:[eax+0x61865a3],0x69
  418a2d:	shr    ebx,1
  418a2f:	or     BYTE PTR [ecx+0x7228fc82],bl
  418a35:	dec    ebp
  418a36:	adc    eax,0x410046e9
  418a3b:	stos   BYTE PTR es:[edi],al
  418a3c:	jmp    0x418a7a
  418a3e:	mov    al,0xe9
  418a40:	daa    
  418a41:	xor    al,0xcf
  418a43:	mov    esp,0xaeb33203
  418a48:	push   ss
  418a49:	sbb    DWORD PTR [ecx+0x28faf2fd],esp
  418a4f:	rol    esi,cl
  418a51:	xchg   BYTE PTR [edi],dh
  418a53:	int    0x51
  418a55:	lahf   
  418a56:	fnstsw WORD PTR [ebx+0x46ff64e0]
  418a5c:	mov    al,0x29
  418a5e:	adc    BYTE PTR [esi+edx*8],cl
  418a61:	or     DWORD PTR [edi-0x20ff793],esi
  418a67:	int    0x29
  418a69:	xor    ah,BYTE PTR [eax+edx*4]
  418a6c:	inc    esp
  418a6d:	int    0xa5
  418a6f:	imul   eax,DWORD PTR [edx-0x17],0xffffff91
  418a73:	(bad)  [esi+0x63]
  418a76:	leave  
  418a77:	xor    DWORD PTR [edx],0xffffffc6
  418a7a:	(bad)  [esi+0x4a81d1f3]
  418a80:	dec    ebx
  418a81:	push   0x4beef64
  418a86:	mov    dl,BYTE PTR [ecx+0x25a08791]
  418a8c:	and    eax,edi
  418a8e:	xchg   ebx,eax
  418a8f:	pop    ecx
  418a90:	repnz cmp al,0x21
  418a93:	xchg   cl,ch
  418a95:	cwde   
  418a96:	ins    BYTE PTR es:[edi],dx
  418a97:	cmp    DWORD PTR [eax-0x5b1875db],0x832ea281
  418aa1:	ins    BYTE PTR es:[edi],dx
  418aa2:	aam    0x52
  418aa4:	(bad)  ds:0x6df10688
  418aaa:	add    DWORD PTR [ebx+0x2a],edx
  418aad:	xchg   BYTE PTR [edi-0x5e],bh
  418ab0:	jg     0x418b12
  418ab2:	dec    esi
  418ab3:	and    al,0x43
  418ab5:	fwait
  418ab6:	xor    eax,0xb6472550
  418abb:	dec    ebp
  418abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418abd:	imul   eax,DWORD PTR [ebx-0x3358c11f],0xd31ffee6
  418ac7:	jl     0x418a56
  418ac9:	inc    ebx
  418aca:	sub    BYTE PTR [edx+0x3d],dh
  418acd:	mov    ds:0x56d0acc4,eax
  418ad2:	adc    eax,DWORD PTR [ebp-0x3c]
  418ad5:	push   esp
  418ad6:	or     ch,cl
  418ad8:	daa    
  418ad9:	xchg   ebx,eax
  418ada:	out    0x76,eax
  418adc:	dec    edx
  418add:	jb     0x418ae0
  418adf:	popaw  
  418ae1:	inc    esi
  418ae2:	jb     0x418ad8
  418ae4:	iret   
  418ae5:	xchg   esi,eax
  418ae6:	pop    ss
  418ae7:	leave  
  418ae8:	mov    eax,0x42848ac
  418aed:	not    BYTE PTR [ecx-0x735ed33f]
  418af3:	out    dx,eax
  418af4:	fs int3 
  418af6:	in     eax,0xe9
  418af8:	push   ecx
  418af9:	push   eax
  418afa:	pop    es
  418afb:	inc    esi
  418afc:	imul   ebp,DWORD PTR [ecx+0x47b271df],0x6a
  418b03:	push   ss
  418b04:	hlt    
  418b05:	popa   
  418b06:	and    DWORD PTR [ecx+0x2c],esp
  418b09:	jo     0x418af8
  418b0b:	int3   
  418b0c:	test   al,0xaf
  418b0e:	pop    edx
  418b0f:	jnp    0x418ad3
  418b11:	icebp  
  418b12:	outs   dx,BYTE PTR ds:[esi]
  418b13:	pop    eax
  418b14:	dec    esi
  418b15:	sbb    al,0xa
  418b17:	in     eax,dx
  418b18:	sub    ch,BYTE PTR [eax-0x7fe01a5e]
  418b1e:	into   
  418b1f:	adc    cl,BYTE PTR [ebp+0x2ea0015f]
  418b25:	xor    al,0xce
  418b27:	pop    esp
  418b28:	sti    
  418b29:	dec    edx
  418b2a:	mov    edi,0xe9ea1e68
  418b2f:	xchg   edx,eax
  418b30:	mov    edx,0x4be6e88f
  418b35:	pushf  
  418b36:	mov    dl,0x72
  418b38:	jo     0x418b51
  418b3a:	aad    0xad
  418b3c:	(bad)  
  418b3d:	in     al,0xab
  418b3f:	mov    bh,0x5c
  418b41:	shl    DWORD PTR [eax+edi*2],1
  418b44:	xchg   DWORD PTR [esi-0xbf0d55e],edx
  418b4a:	mov    ebx,0x6a1d3751
  418b4f:	jb     0x418ba6
  418b51:	jecxz  0x418bcd
  418b53:	mov    cx,0x1434
  418b57:	or     ebp,DWORD PTR [edx]
  418b59:	mov    eax,ds:0xb636ae88
  418b5e:	rcr    BYTE PTR [ebp+0xa215c63],cl
  418b64:	jo     0x418b72
  418b66:	lea    ecx,[esi-0x4a]
  418b69:	jae    0x418b55
  418b6b:	dec    edx
  418b6c:	test   ax,0x2e08
  418b70:	fsubr  QWORD PTR [esi+0x27]
  418b73:	sub    eax,0xece45031
  418b78:	sbb    ecx,eax
  418b7a:	call   0x5a5a:0x8d4c4702
  418b81:	or     eax,edi
  418b83:	call   FWORD PTR [eax+0x35]
  418b86:	(bad)  
  418b87:	fiadd  WORD PTR [ecx-0x7f]
  418b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b8b:	leave  
  418b8c:	lods   al,BYTE PTR ds:[esi]
  418b8d:	ss retf 0x226f
  418b91:	into   
  418b92:	addr16 inc edx
  418b94:	push   es
  418b95:	xchg   edi,eax
  418b96:	ins    DWORD PTR es:[edi],dx
  418b97:	cmp    ecx,DWORD PTR [edx-0x5d]
  418b9a:	add    edx,DWORD PTR [ebx]
  418b9c:	mov    WORD PTR [edx+0x6c],fs
  418b9f:	jb     0x418b5f
  418ba1:	ror    BYTE PTR [ebx-0x1a],1
  418ba4:	int    0xbe
  418ba6:	push   edi
  418ba7:	sub    esp,ebx
  418ba9:	hlt    
  418baa:	clc    
  418bab:	retf   0xeab3
  418bae:	cmc    
  418baf:	enter  0xba1a,0xaa
  418bb3:	rep lods eax,DWORD PTR ds:[esi]
  418bb5:	cmc    
  418bb6:	not    BYTE PTR [ebp+0x37]
  418bb9:	mov    ch,0xaf
  418bbb:	repz xor eax,0x38e6d22c
  418bc1:	(bad)  
  418bc2:	repnz inc eax
  418bc4:	or     eax,0xaa6b39cd
  418bc9:	xchg   esp,eax
  418bca:	dec    esi
  418bcb:	loope  0x418bbf
  418bcd:	(bad)  
  418bce:	jbe    0x418bc2
  418bd0:	adc    al,BYTE PTR [ecx-0x7]
  418bd3:	rol    DWORD PTR [edi+edi*2],1
  418bd6:	sbb    ah,bh
  418bd8:	xchg   esp,eax
  418bd9:	mov    esp,0x55578345
  418bde:	dec    edx
  418bdf:	jmp    0x418bdd
  418be1:	rol    esp,1
  418be3:	dec    esp
  418be4:	pop    ebx
  418be5:	nop    DWORD PTR [esi-0x2c91d84a]
  418bec:	cmp    DWORD PTR [edi-0x14],ebp
  418bef:	xchg   edi,eax
  418bf0:	cmp    ch,BYTE PTR [edi-0x8]
  418bf3:	pusha  
  418bf4:	xchg   edx,eax
  418bf5:	mov    cl,0x59
  418bf7:	mov    ch,0x8b
  418bf9:	pushf  
  418bfa:	stc    
  418bfb:	cmp    al,0x4d
  418bfd:	rcl    dl,cl
  418bff:	cmp    al,0xaf
  418c01:	aad    0xb3
  418c03:	sub    eax,0x5005d225
  418c08:	inc    esi
  418c09:	lods   eax,DWORD PTR ds:[esi]
  418c0a:	mov    al,ds:0x3f52961e
  418c0f:	or     eax,0x5e5a248d
  418c14:	nop
  418c15:	sub    esp,DWORD PTR [edi]
  418c17:	add    al,0x84
  418c19:	pusha  
  418c1a:	cmc    
  418c1b:	jo     0x418c20
  418c1d:	and    ch,dl
  418c1f:	pop    ebp
  418c20:	(bad)  
  418c21:	loopne 0x418c24
  418c23:	mov    dl,0x1a
  418c25:	pushf  
  418c26:	adc    ebx,DWORD PTR [eax+edi*8+0x17]
  418c2a:	pop    eax
  418c2b:	nop
  418c2c:	mov    cl,BYTE PTR [esi]
  418c2e:	jbe    0x418cac
  418c30:	xor    al,0x9c
  418c32:	dec    ebp
  418c33:	xor    al,0xbc
  418c35:	xchg   edi,eax
  418c36:	frstor [ebx]
  418c38:	in     eax,dx
  418c39:	add    al,BYTE PTR [eax]
  418c3b:	cwde   
  418c3c:	xlat   BYTE PTR ds:[ebx]
  418c3d:	push   ebp
  418c3e:	adc    eax,edx
  418c40:	or     ebp,DWORD PTR [eax+0x34]
  418c43:	xchg   ebp,eax
  418c44:	clc    
  418c45:	inc    ecx
  418c46:	inc    ebp
  418c47:	popa   
  418c48:	aam    0xa2
  418c4a:	jl     0x418c9d
  418c4c:	shl    DWORD PTR [esi+0xd],0x55
  418c50:	mov    ds:0x8fd515db,eax
  418c55:	cmc    
  418c56:	fucom  st(4)
  418c58:	sbb    al,0x77
  418c5a:	jnp    0x418bde
  418c5c:	pop    edx
  418c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c5e:	mov    al,ds:0xc26eec4d
  418c63:	xchg   BYTE PTR [edi-0x44],dh
  418c66:	outs   dx,BYTE PTR ds:[esi]
  418c67:	stos   BYTE PTR es:[edi],al
  418c68:	lods   al,BYTE PTR ds:[esi]
  418c69:	ss push cs
  418c6b:	call   FWORD PTR [edx+0x7611cf58]
  418c71:	ins    BYTE PTR es:[edi],dx
  418c72:	ins    DWORD PTR es:[edi],dx
  418c73:	ss scas al,BYTE PTR es:[edi]
  418c75:	cs inc ecx
  418c77:	(bad)  
  418c78:	loope  0x418c69
  418c7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c7b:	(bad)  
  418c7c:	in     al,dx
  418c7d:	push   ebx
  418c7e:	or     dl,dh
  418c80:	xor    DWORD PTR [edi+0x7de6782e],ecx
  418c86:	cmp    ebx,DWORD PTR [ebx+0x5393b4f5]
  418c8c:	mov    bh,0xb3
  418c8e:	ins    DWORD PTR es:[edi],dx
  418c8f:	pop    esi
  418c90:	iret   
  418c91:	jge    0x418c8c
  418c93:	jae    0x418cad
  418c95:	loope  0x418cf0
  418c97:	and    al,0x55
  418c99:	dec    ebx
  418c9a:	xchg   esp,eax
  418c9b:	mov    eax,ds:0x5d61f8d
  418ca0:	(bad)  
  418ca1:	mov    ecx,0x1bbfdaf2
  418ca6:	sbb    al,0xd0
  418ca8:	add    bh,BYTE PTR ds:0x6d09e53f
  418cae:	cmp    al,0x57
  418cb0:	mov    eax,ds:0xf0060d33
  418cb5:	inc    edx
  418cb6:	mov    dh,al
  418cb8:	push   es
  418cb9:	and    dl,BYTE PTR [eax-0x14]
  418cbc:	test   DWORD PTR [esi-0xd],0xef3234ea
  418cc3:	mov    esp,DWORD PTR ds:0x93a999f3
  418cc9:	inc    ecx
  418cca:	outs   dx,BYTE PTR ds:[esi]
  418ccb:	aaa    
  418ccc:	or     eax,0x64f58e5d
  418cd1:	mov    ch,0x63
  418cd3:	clc    
  418cd4:	inc    edx
  418cd5:	push   ds
  418cd6:	or     edi,DWORD PTR [ebx-0x1c]
  418cd9:	sub    eax,0x176cd15
  418cde:	xchg   edi,eax
  418cdf:	mov    bl,0x61
  418ce1:	jne    0x418d38
  418ce3:	outs   dx,DWORD PTR ds:[esi]
  418ce4:	add    BYTE PTR [esi+0x56],bh
  418ce7:	outs   dx,BYTE PTR ds:[esi]
  418ce8:	mov    ecx,0x1cf330e7
  418ced:	cmc    
  418cee:	mov    DWORD PTR [esi],ecx
  418cf0:	popa   
  418cf1:	(bad)  [esi-0x75]
  418cf4:	lock jno 0x418cb0
  418cf7:	loopne 0x418c84
  418cf9:	xor    edx,DWORD PTR [edi+0x1fa23245]
  418cff:	push   ecx
  418d00:	arpl   WORD PTR [ebx+0x3a],cx
  418d03:	mov    dl,0xf7
  418d05:	jb     0x418cfc
  418d07:	mov    BYTE PTR [edi+0x375ddf9],0xc1
  418d0e:	sahf   
  418d0f:	inc    ecx
  418d10:	stos   BYTE PTR es:[edi],al
  418d11:	pop    esi
  418d12:	pop    edx
  418d13:	push   cs
  418d14:	inc    edx
  418d15:	sbb    edx,ecx
  418d17:	jecxz  0x418d17
  418d19:	and    eax,0xa34f3e7e
  418d1e:	(bad)  
  418d1f:	xor    al,0x68
  418d21:	mov    DWORD PTR [ebx-0x67],esp
  418d24:	sbb    DWORD PTR [esi-0x78],esi
  418d27:	test   DWORD PTR [edi],eax
  418d29:	push   ss
  418d2a:	outs   dx,BYTE PTR ds:[esi]
  418d2b:	xchg   edx,eax
  418d2c:	adc    BYTE PTR [ebx],0xba
  418d2f:	test   BYTE PTR ds:0xad91daaa,dh
  418d35:	inc    eax
  418d36:	inc    esi
  418d37:	rcl    edi,1
  418d39:	cli    
  418d3a:	jmp    0xed00:0xd4f77446
  418d41:	nop
  418d42:	push   eax
  418d43:	xor    dl,BYTE PTR [edi+0x1a]
  418d46:	(bad)  
  418d47:	scas   ax,WORD PTR es:[edi]
  418d49:	mov    ah,0x5a
  418d4b:	stos   BYTE PTR es:[edi],al
  418d4c:	je     0x418da5
  418d4e:	dec    ebx
  418d4f:	sub    eax,0xc802cafe
  418d54:	xchg   edx,eax
  418d55:	jle    0x418d08
  418d57:	retf   
  418d58:	clc    
  418d59:	into   
  418d5a:	test   al,0xfd
  418d5c:	push   edx
  418d5d:	dec    eax
  418d5e:	cs push ecx
  418d60:	not    DWORD PTR [edx+edi*1]
  418d63:	lods   al,BYTE PTR ds:[esi]
  418d64:	jne    0x418d73
  418d66:	mov    ds:0xc527481,al
  418d6b:	push   0x4b
  418d6d:	ror    ch,1
  418d6f:	inc    esp
  418d70:	sahf   
  418d71:	les    edx,FWORD PTR [edx]
  418d73:	jne    0x418db7
  418d75:	repz xchg ch,dl
  418d78:	cmc    
  418d79:	fadd   DWORD PTR [edx+0x2e]
  418d7c:	and    DWORD PTR [ebp-0x71],esi
  418d7f:	add    BYTE PTR ds:0x2838c55b,bh
  418d85:	inc    ebp
  418d86:	test   eax,0x88e56209
  418d8b:	js     0x418d1b
  418d8d:	sub    ecx,DWORD PTR [edi-0x4f]
  418d90:	push   ecx
  418d91:	pop    ss
  418d92:	daa    
  418d93:	or     edi,DWORD PTR [eax+esi*4-0x6f]
  418d97:	int    0x1c
  418d99:	ss ja  0x418d5f
  418d9c:	(bad)  
  418d9d:	xlat   BYTE PTR ds:[ebx]
  418d9e:	pop    esi
  418d9f:	mov    dl,0xaf
  418da1:	pop    ss
  418da2:	dec    eax
  418da3:	sub    edi,DWORD PTR [ebx]
  418da5:	pop    eax
  418da6:	inc    esp
  418da7:	inc    esp
  418da8:	js     0x418d89
  418daa:	sbb    DWORD PTR [esi+0x17],esp
  418dad:	shl    BYTE PTR fs:[esi],0x5e
  418db1:	outs   dx,DWORD PTR ds:[esi]
  418db2:	pop    ecx
  418db3:	(bad)  
  418db4:	fist   DWORD PTR [ebx+0x70]
  418db7:	repnz push esp
  418db9:	test   BYTE PTR [edx],0x1e
  418dbc:	ins    BYTE PTR es:[edi],dx
  418dbd:	mov    al,0xf6
  418dbf:	retf   
  418dc0:	ror    cl,cl
  418dc2:	mov    ecx,0xc7754e7
  418dc7:	and    ecx,DWORD PTR [ebx+0x57]
  418dca:	or     DWORD PTR [esi],0xffffffa7
  418dcd:	jnp    0x418df2
  418dcf:	fwait
  418dd0:	gs mov esp,0xfa346bde
  418dd6:	pop    esi
  418dd7:	das    
  418dd8:	xchg   edi,eax
  418dd9:	jmp    0x8137:0x22ac9697
  418de0:	push   edx
  418de1:	mov    ebx,0x5b8c3a9e
  418de6:	fistp  WORD PTR [ecx-0x1]
  418de9:	jl     0x418e0c
  418deb:	pop    ds
  418dec:	mov    esi,0xc14f7db2
  418df1:	jbe    0x418e05
  418df3:	aad    0x43
  418df5:	pop    eax
  418df6:	xor    al,0x3b
  418df8:	clc    
  418df9:	pop    eax
  418dfa:	adc    eax,0x4111e527
  418dff:	fisubr WORD PTR [esi]
  418e01:	jecxz  0x418e60
  418e03:	pushf  
  418e04:	imul   esi,DWORD PTR [esi+0x10],0x1c5c2679
  418e0b:	mov    al,0x9
  418e0d:	imul   esp,DWORD PTR [edi],0x436258e
  418e13:	push   ecx
  418e14:	(bad)  
  418e15:	stos   BYTE PTR es:[edi],al
  418e16:	(bad)  [ebx-0x42]
  418e19:	sahf   
  418e1a:	pop    ss
  418e1b:	fucomip st,st(2)
  418e1d:	adc    DWORD PTR ds:0x505db201,eax
  418e23:	inc    esi
  418e24:	adc    al,0xf8
  418e26:	sub    DWORD PTR [eax+0x73],0x50
  418e2a:	arpl   WORD PTR [edx+0x59],ax
  418e2d:	xchg   edx,eax
  418e2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e2f:	pop    edi
  418e30:	pop    eax
  418e31:	cld    
  418e32:	or     al,0x7b
  418e34:	jg     0x418df9
  418e36:	mov    ebx,0xbeb06792
  418e3b:	push   0x50
  418e3d:	ret    0x38c9
  418e40:	jg     0x418e0c
  418e42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e43:	dec    ebp
  418e44:	add    DWORD PTR [ebp-0x69],edi
  418e47:	lock std 
  418e49:	sub    al,0x8
  418e4b:	inc    esi
  418e4c:	push   ds
  418e4d:	sbb    eax,0xda973391
  418e52:	cmp    BYTE PTR [esi+0x56],ah
  418e55:	int3   
  418e56:	mov    ch,0xd2
  418e58:	sub    BYTE PTR [eax+0x69],dh
  418e5b:	into   
  418e5c:	ins    DWORD PTR es:[edi],dx
  418e5d:	jb     0x418eb7
  418e5f:	jl     0x418ec0
  418e61:	loopne 0x418e84
  418e63:	mov    eax,0x54766ec1
  418e68:	xchg   esp,eax
  418e69:	jbe    0x418e2f
  418e6b:	mov    edi,0x6cdafbf2
  418e70:	iret   
  418e71:	add    eax,DWORD PTR [eax-0x1c]
  418e74:	and    DWORD PTR [esi-0x18f141d5],edx
  418e7a:	ins    DWORD PTR es:[edi],dx
  418e7b:	pop    es
  418e7c:	pop    ebp
  418e7d:	push   0xffffffd3
  418e7f:	aaa    
  418e80:	cmp    bl,BYTE PTR [edx+0x12]
  418e83:	iret   
  418e84:	std    
  418e85:	push   esi
  418e86:	cmp    ebx,0x388d4e1b
  418e8c:	loop   0x418e97
  418e8e:	xor    eax,0x563b8950
  418e93:	xor    al,0xbc
  418e95:	mov    bl,0x5b
  418e97:	test   ebx,edx
  418e99:	loop   0x418ef4
  418e9b:	sub    eax,0xa08665c2
  418ea0:	inc    ecx
  418ea1:	lods   eax,DWORD PTR ds:[esi]
  418ea2:	or     eax,0xd221bc15
  418ea7:	aad    0x29
  418ea9:	jmp    0xfba2:0x15dd4fef
  418eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418eb1:	dec    esi
  418eb2:	sbb    eax,0xfb048cf6
  418eb7:	sti    
  418eb8:	mov    cl,0xcd
  418eba:	xor    ecx,ebx
  418ebc:	bnd jbe 0x418ecc
  418ebf:	inc    ebx
  418ec0:	cwde   
  418ec1:	fisttp DWORD PTR [eax]
  418ec3:	cmp    edx,DWORD PTR [eax]
  418ec5:	push   0x69fe08df
  418eca:	bound  esp,QWORD PTR [ebp-0x119f883c]
  418ed0:	adc    esi,0x75
  418ed3:	jmp    0x75ce728f
  418ed8:	loopne 0x418e99
  418eda:	stos   BYTE PTR es:[edi],al
  418edb:	push   esi
  418edc:	stos   BYTE PTR es:[edi],al
  418edd:	dec    esi
  418ede:	push   eax
  418edf:	aas    
  418ee0:	sbb    BYTE PTR [edi+edi*1],dl
  418ee3:	jb     0x418ef3
  418ee5:	les    eax,FWORD PTR [eax-0x53adfe9d]
  418eeb:	dec    edi
  418eec:	jnp    0x418ed0
  418eee:	xor    bh,ch
  418ef0:	pop    ds
  418ef1:	cmp    BYTE PTR [eax-0x34a48d6b],bl
  418ef7:	xchg   ebp,eax
  418ef8:	push   0xffffff97
  418efa:	adc    esp,DWORD PTR [edx]
  418efc:	fs popf 
  418efe:	rcl    BYTE PTR [esi],0xc1
  418f01:	dec    esi
  418f02:	call   0x8ed4f5ce
  418f07:	add    DWORD PTR [edx],esp
  418f09:	jge    0x418eca
  418f0b:	mov    eax,ds:0x55c8f208
  418f10:	pop    ebp
  418f11:	adc    BYTE PTR [edx+0x2085e43f],al
  418f17:	idiv   BYTE PTR [ecx+edi*8]
  418f1a:	fcmovnbe st,st(3)
  418f1c:	or     DWORD PTR [edx-0x42],ebx
  418f1f:	or     ecx,DWORD PTR [edi]
  418f21:	jnp    0x418f93
  418f23:	jb     0x418f8d
  418f25:	push   ebp
  418f26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f27:	xor    eax,0x4e269c8c
  418f2c:	in     eax,0xb8
  418f2e:	xor    eax,0x95f196fe
  418f33:	dec    ebx
  418f34:	lods   eax,DWORD PTR ds:[esi]
  418f35:	fsub   DWORD PTR [ebx]
  418f37:	gs cmc 
  418f39:	mov    ss,WORD PTR [esp+edi*8-0xb]
  418f3d:	je     0x418f65
  418f3f:	jecxz  0x418f01
  418f41:	(bad)  [esp+edi*4-0x2b]
  418f45:	mov    ds:0xcd970c11,al
  418f4a:	in     eax,0x1b
  418f4c:	mov    bl,0x37
  418f4e:	cld    
  418f4f:	xchg   dh,dl
  418f51:	clc    
  418f52:	pop    ebp
  418f53:	jmp    0x418f5b
  418f55:	test   eax,eax
  418f57:	std    
  418f58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f59:	lods   eax,DWORD PTR ds:[esi]
  418f5a:	cmp    BYTE PTR [ebp-0x4dd5561f],0x4b
  418f61:	and    ebp,DWORD PTR [ecx]
  418f63:	(bad)  
  418f64:	or     eax,0xe850971f
  418f69:	mov    esp,0xaae8754a
  418f6e:	popf   
  418f6f:	and    BYTE PTR [esi-0x3644cafc],dh
  418f75:	mov    gs,WORD PTR ds:0x5f53b2e2
  418f7b:	adc    edi,DWORD PTR [edi+0x51]
  418f7e:	das    
  418f7f:	push   ds
  418f80:	into   
  418f81:	xchg   BYTE PTR [ebp-0x122fe673],dh
  418f87:	cmp    al,0xfd
  418f89:	sub    BYTE PTR [eax-0x3f],ah
  418f8c:	push   ss
  418f8d:	ret    0xf12d
  418f90:	cdq    
  418f91:	jbe    0x418f3a
  418f93:	push   ss
  418f94:	mov    al,0x35
  418f96:	mov    ebp,0x159dc661
  418f9b:	mov    cl,0x69
  418f9d:	mov    al,ds:0xe3ac4a3f
  418fa2:	push   es
  418fa3:	in     al,dx
  418fa4:	clc    
  418fa5:	sbb    eax,ebx
  418fa7:	les    eax,FWORD PTR [edx]
  418fa9:	ret    
  418faa:	add    al,BYTE PTR [esi*2+0x5364aa4c]
  418fb1:	adc    ebp,esp
  418fb3:	sub    ebx,DWORD PTR cs:[ebp+0x1204e773]
  418fba:	pusha  
  418fbb:	adc    ah,BYTE PTR [ecx+0x56dbc509]
  418fc1:	es popf 
  418fc3:	jl     0x419012
  418fc5:	fld    st(4)
  418fc7:	(bad)  
  418fc8:	and    ch,0x70
  418fcb:	dec    esp
  418fcc:	push   0xffffffec
  418fce:	jns    0x418f89
  418fd0:	nop
  418fd1:	stc    
  418fd2:	cmp    BYTE PTR ds:0xdd70f226,0xb6
  418fd9:	nop
  418fda:	out    dx,eax
  418fdb:	js     0x419001
  418fdd:	xchg   ebp,eax
  418fde:	xchg   ebx,eax
  418fdf:	adc    DWORD PTR ds:0xe0ce7ac6,ebp
  418fe5:	jb     0xeaed6dab
  418feb:	out    dx,al
  418fec:	mov    eax,ds:0x93450324
  418ff1:	rep lods al,BYTE PTR fs:[esi]
  418ff4:	and    BYTE PTR [edx+0x1645af0a],0xc4
  418ffb:	sub    edi,DWORD PTR [eax-0x5ea63146]
  419001:	call   0x190f:0x9d1f4a42
  419008:	fadd   QWORD PTR [eax]
  41900a:	repz fisttp QWORD PTR [edi]
  41900d:	sahf   
  41900e:	push   ebp
  41900f:	xor    eax,0x9fd90d01
  419014:	adc    al,al
  419016:	push   cs
  419017:	dec    ecx
  419018:	cwde   
  419019:	mov    eax,0xd0b655b1
  41901e:	fild   QWORD PTR [edx]
  419020:	push   0xffffffc5
  419022:	test   DWORD PTR [ecx-0x2f],ebp
  419025:	cmp    BYTE PTR [edi],ah
  419027:	push   esi
  419028:	jmp    0x41909f
  41902a:	faddp  st(2),st
  41902c:	jns    0x41900c
  41902e:	cmc    
  41902f:	mov    WORD PTR [eax+eiz*8-0x37],gs
  419033:	push   ds
  419034:	add    DWORD PTR [ebx+0x7f],edi
  419037:	mov    ebx,0x106c6ecd
  41903c:	fsubrp st(5),st
  41903e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41903f:	dec    esi
  419040:	sbb    BYTE PTR [edi],al
  419042:	xchg   ecx,eax
  419043:	sbb    ecx,DWORD PTR [eax]
  419045:	stos   DWORD PTR es:[edi],eax
  419046:	sahf   
  419047:	(bad)  
  419048:	ficom  DWORD PTR [esi+0x10e2db19]
  41904e:	dec    ecx
  41904f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419050:	push   es
  419051:	and    BYTE PTR [eax],ah
  419053:	pop    es
  419054:	mov    edx,0x231ccbf4
  419059:	dec    ebp
  41905a:	xchg   ebp,eax
  41905b:	imul   edx,eax,0xc0bce754
  419061:	inc    edi
  419062:	cmp    bl,BYTE PTR [ecx]
  419064:	call   0x995b:0x6e89f3ef
  41906b:	inc    ebx
  41906c:	cmp    eax,0x4b6f0519
  419071:	adc    eax,0x860d0e10
  419076:	hlt    
  419077:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419078:	test   eax,0xb482926f
  41907d:	call   0x1db70de9
  419082:	aad    0xcb
  419084:	push   ebx
  419085:	mov    dh,0x9a
  419087:	xchg   DWORD PTR [ebp-0x16],ebp
  41908a:	xchg   ecx,eax
  41908b:	mov    ecx,0xea67500
  419090:	and    DWORD PTR [eax+0xd902403],edi
  419096:	aad    0xb1
  419098:	inc    edx
  419099:	pusha  
  41909a:	lods   eax,DWORD PTR ds:[esi]
  41909b:	jmp    0xcaa37765
  4190a0:	adc    eax,0x31eb2110
  4190a5:	jb     0x41905d
  4190a7:	or     bh,BYTE PTR [eax-0x7d]
  4190aa:	popw   es
  4190ac:	push   0xffffffbf
  4190ae:	scas   al,BYTE PTR es:[edi]
  4190af:	outs   dx,DWORD PTR ds:[esi]
  4190b0:	out    dx,eax
  4190b1:	or     dh,dl
  4190b3:	xor    al,0xe
  4190b5:	adc    DWORD PTR [ebx+0x2c],ecx
  4190b8:	sbb    al,0xb5
  4190ba:	mov    al,BYTE PTR [edi+ecx*8+0x4f30e3fe]
  4190c1:	popf   
  4190c2:	mov    ebp,ds
  4190c4:	(bad)  
  4190c5:	loopne 0x41907e
  4190c7:	xchg   esp,eax
  4190c8:	lods   eax,DWORD PTR ds:[esi]
  4190c9:	inc    ecx
  4190ca:	sahf   
  4190cb:	gs scas al,BYTE PTR es:[edi]
  4190cd:	mov    DWORD PTR [ecx-0x4211f66a],esp
  4190d3:	jl     0x4190e8
  4190d5:	(bad)  
  4190d7:	and    BYTE PTR [ebp-0x3bd89398],0xdc
  4190de:	out    dx,eax
  4190df:	in     al,0x42
  4190e1:	jns    0x419085
  4190e3:	pushf  
  4190e4:	cmp    eax,edx
  4190e6:	in     al,0xfa
  4190e8:	xor    eax,0x4e2cab13
  4190ed:	icebp  
  4190ee:	mov    ds:0xc0e741b2,al
  4190f3:	arpl   sp,ax
  4190f5:	sar    DWORD PTR [ebp+0x5c],cl
  4190f8:	jne    0x41916d
  4190fa:	dec    edi
  4190fb:	push   ds
  4190fc:	shl    ebx,0x6c
  4190ff:	retf   0x49b3
  419102:	pop    edi
  419103:	lods   eax,DWORD PTR ds:[esi]
  419104:	jmp    0xc2672bde
  419109:	pop    ss
  41910a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41910b:	arpl   WORD PTR [edx+eax*1+0x4a18231d],dx
  419112:	lods   eax,DWORD PTR ds:[esi]
  419113:	das    
  419114:	pop    ebp
  419115:	jl     0x41915d
  419117:	daa    
  419118:	hlt    
  419119:	std    
  41911a:	xchg   ebx,eax
  41911b:	lea    ebx,[ebx+0x4ff85db1]
  419121:	mov    ecx,0xb36678ea
  419126:	mov    BYTE PTR [edx+0x15],bl
  419129:	(bad)
  41912c:	arpl   di,bx
  41912e:	mov    cl,0xfc
  419130:	adc    DWORD PTR [eax-0x2],edi
  419133:	xchg   esp,eax
  419134:	pop    ebx
  419135:	mov    ds:0xe84c260b,eax
  41913a:	xor    DWORD PTR [ebx+0x51538cb6],ebx
  419140:	xor    al,0x90
  419142:	mov    ah,0xa3
  419144:	jo     0x419118
  419146:	les    ecx,FWORD PTR [esi]
  419148:	ins    DWORD PTR es:[edi],dx
  419149:	mov    dh,0xf
  41914b:	push   ecx
  41914c:	dec    ecx
  41914d:	mul    bh
  41914f:	add    BYTE PTR [esi+0x31],dl
  419152:	or     bl,BYTE PTR [edi]
  419154:	pop    ebx
  419155:	cs pushf 
  419157:	loopne 0x4190f1
  419159:	inc    ebx
  41915a:	rcr    bl,0x51
  41915d:	push   eax
  41915e:	dec    ecx
  41915f:	push   es
  419160:	jmp    0x7716b10b
  419165:	fucomi st,st(4)
  419167:	in     eax,0x9
  419169:	nop
  41916a:	out    0x29,eax
  41916c:	(bad)  
  41916d:	jl     0x419152
  41916f:	mov    ds:0x681c797b,eax
  419174:	push   ds
  419175:	cmp    dl,ch
  419177:	xor    DWORD PTR ds:0x1084c0af,edi
  41917d:	rol    esi,1
  41917f:	(bad)  
  419180:	pop    ss
  419181:	stc    
  419182:	xchg   ecx,eax
  419183:	cmp    al,0xc9
  419185:	xor    BYTE PTR fs:[edi+0x49295f6f],cl
  41918c:	shr    BYTE PTR [edx+0x10c4413f],cl
  419192:	das    
  419193:	xchg   esi,eax
  419194:	xchg   ch,ah
  419196:	outs   dx,BYTE PTR ds:[esi]
  419197:	mov    eax,0x5bc363c1
  41919c:	out    dx,eax
  41919d:	hlt    
  41919e:	pop    ebp
  41919f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191a0:	xchg   DWORD PTR [edx+0x63],ebx
  4191a3:	cmp    BYTE PTR [esi+0x54],dl
  4191a6:	and    al,ah
  4191a8:	inc    esi
  4191a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191aa:	mov    al,0xb0
  4191ac:	mov    dh,0xcc
  4191ae:	js     0x419173
  4191b0:	fnstenv [eax+0x3b]
  4191b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191b4:	popf   
  4191b5:	jo     0x419148
  4191b7:	or     bh,BYTE PTR [eax-0x42]
  4191ba:	or     BYTE PTR [edi],bh
  4191bc:	pop    esi
  4191bd:	test   al,0xad
  4191bf:	out    0xe8,al
  4191c1:	jmp    0xfebc:0xe10ce598
  4191c8:	shr    DWORD PTR [ebx-0x4f],cl
  4191cb:	add    al,0x17
  4191cd:	and    edi,edi
  4191cf:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4191d1:	cmp    BYTE PTR [eax],dl
  4191d3:	xchg   esi,eax
  4191d4:	jnp    0x41922b
  4191d6:	arpl   WORD PTR [edi],si
  4191d8:	mov    ds:0x3b37f9b7,al
  4191dd:	pop    edx
  4191de:	mov    ah,0xc2
  4191e0:	inc    ecx
  4191e1:	cmp    bl,bh
  4191e3:	dec    ebp
  4191e4:	shl    cl,0x2d
  4191e7:	adc    al,0x77
  4191e9:	inc    eax
  4191ea:	sub    DWORD PTR [ebp+0x2b35d224],ebp
  4191f0:	arpl   WORD PTR [ecx],bx
  4191f2:	iret   
  4191f3:	call   0xa305:0x59308c20
  4191fa:	js     0x4191dd
  4191fc:	push   edx
  4191fd:	mov    dh,0x10
  4191ff:	cmp    DWORD PTR [edx*8-0xfb2e4f0],edx
  419206:	fcom   QWORD PTR [ebp+ecx*8-0x26]
  41920a:	adc    BYTE PTR [ebp-0x61],ch
  41920d:	pop    ebx
  41920e:	xchg   BYTE PTR [ebp+0xcd54d38],ah
  419214:	sbb    eax,0xb7041a70
  419219:	sbb    ebp,DWORD PTR ds:0x887951ef
  41921f:	inc    esi
  419220:	leave  
  419221:	and    bh,BYTE PTR [edx]
  419223:	xor    DWORD PTR [ebp-0xc8b5e65],edx
  419229:	scas   eax,DWORD PTR es:[edi]
  41922a:	sbb    ebx,DWORD PTR fs:[eax+0x64f906f2]
  419231:	fadd   DWORD PTR [eax-0x5c]
  419234:	xchg   edi,eax
  419235:	out    dx,al
  419236:	(bad)  
  419237:	mov    bh,ch
  419239:	mov    cl,BYTE PTR [ecx+0x1a]
  41923c:	sti    
  41923d:	jno    0x41929f
  41923f:	mov    ds:0xc2af83e9,al
  419244:	outs   dx,DWORD PTR ds:[esi]
  419245:	fldl2e 
  419247:	call   0xe7b1b6aa
  41924c:	mov    BYTE PTR [esi],dl
  41924e:	mov    edi,0x9732c902
  419253:	leave  
  419254:	xchg   edx,eax
  419255:	lds    ebx,FWORD PTR [eax+0x1c6cb0ad]
  41925b:	inc    ebx
  41925c:	mov    edx,DWORD PTR [ecx+eiz*1+0x1cb8d7a]
  419263:	dec    ebp
  419264:	rcr    al,0xb7
  419267:	fwait
  419268:	cmp    al,BYTE PTR [ebp-0x1e]
  41926b:	push   edi
  41926c:	xchg   esp,eax
  41926d:	std    
  41926e:	and    BYTE PTR [edi+ecx*1],dl
  419271:	stos   DWORD PTR es:[edi],eax
  419272:	out    dx,al
  419273:	or     eax,DWORD PTR [ebx-0x75]
  419276:	call   0xf6fc:0xcf42279e
  41927d:	inc    ebp
  41927e:	hlt    
  41927f:	ret    0x6be3
  419282:	loop   0x419207
  419284:	xor    eax,0x6bd33d81
  419289:	push   es
  41928a:	pop    ebp
  41928b:	push   edi
  41928c:	mov    ebx,0xc8330ff7
  419291:	mov    DWORD PTR [ebp+0x8],ecx
  419294:	mov    ecx,DWORD PTR [ebp+0x8]
  419297:	mov    edx,DWORD PTR [ebp-0x58]
  41929a:	add    ecx,0x5708e2
  4192a0:	imul   ecx,edx
  4192a3:	mov    DWORD PTR [ebp-0x58],ecx
  4192a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4192a9:	mov    edx,DWORD PTR [ebp-0x54]
  4192ac:	add    ecx,0x64f89c
  4192b2:	or     ecx,edx
  4192b4:	mov    DWORD PTR [ebp-0x54],ecx
  4192b7:	mov    ecx,DWORD PTR [ebp+0x8]
  4192ba:	jmp    0x41b643
  4192bf:	aad    0xa2
  4192c1:	mov    dh,0x8d
  4192c3:	mov    al,0x81
  4192c5:	ror    BYTE PTR [edx+0x26797ce2],0xdc
  4192cc:	cmp    DWORD PTR [ebx-0x65],ebp
  4192cf:	daa    
  4192d0:	sbb    al,0x82
  4192d2:	adc    DWORD PTR [edi],0x5c
  4192d5:	add    DWORD PTR [ebx+0xf7cf246],0x59
  4192dc:	dec    esp
  4192dd:	or     al,0x25
  4192df:	xchg   edx,eax
  4192e0:	push   ebx
  4192e1:	rcl    ch,1
  4192e3:	jbe    0x41931f
  4192e5:	repz scas al,BYTE PTR es:[edi]
  4192e7:	cld    
  4192e8:	mov    DWORD PTR [edi-0x43],ebx
  4192eb:	xchg   edi,eax
  4192ec:	sbb    DWORD PTR [edx],esp
  4192ee:	add    dl,ah
  4192f0:	aas    
  4192f1:	fs xor al,0x7e
  4192f4:	cmc    
  4192f5:	jns    0x41935f
  4192f7:	ret    
  4192f8:	xchg   esi,eax
  4192f9:	ds (bad) 
  4192fb:	loopne 0x419333
  4192fd:	jl     0x419283
  4192ff:	add    BYTE PTR [edx],dl
  419301:	mov    esi,0xb85fe957
  419306:	fimul  WORD PTR [ebx+0x56]
  419309:	(bad)  
  41930a:	mov    ds:0x4bdb9861,al
  41930f:	aam    0xda
  419311:	rcl    ebx,cl
  419313:	xor    eax,0x6e97ff54
  419318:	push   ebp
  419319:	mov    ah,BYTE PTR [ecx-0x20a1fcd3]
  41931f:	fsubr  st,st(7)
  419321:	bound  edx,QWORD PTR [eax+0x30357a59]
  419327:	sti    
  419328:	jmp    0x419372
  41932a:	mov    dl,0x5c
  41932c:	lods   al,BYTE PTR ds:[esi]
  41932d:	sub    al,0x8d
  41932f:	adc    DWORD PTR [eax-0x8cd3862],esp
  419335:	jg     0x41930a
  419337:	pop    esp
  419338:	inc    ecx
  419339:	cdq    
  41933a:	dec    BYTE PTR [eax]
  41933c:	xchg   ebx,eax
  41933d:	dec    eax
  41933e:	dec    esp
  41933f:	push   eax
  419340:	mov    ds:0x2aa4d2d3,al
  419345:	fwait
  419346:	jnp    0x4193a3
  419348:	or     bl,bl
  41934a:	xor    ah,BYTE PTR [ebx]
  41934c:	mov    ebp,0x775b329f
  419351:	mov    cl,0xdc
  419353:	push   ss
  419354:	lods   eax,DWORD PTR ds:[esi]
  419355:	xchg   esi,eax
  419356:	scas   eax,DWORD PTR es:[edi]
  419357:	adc    BYTE PTR [ecx+0x10],al
  41935a:	add    eax,0x6a6aa4c3
  41935f:	jle    0x4192fc
  419361:	mov    ebp,0xbd094afe
  419366:	gs pop ebx
  419368:	fwait
  419369:	aad    0x29
  41936b:	call   0x93a6d6ad
  419370:	or     esp,DWORD PTR [ebp-0x1a]
  419373:	jne    0x4193d4
  419375:	or     dl,ah
  419377:	sub    BYTE PTR [ebp-0x37],0xb4
  41937b:	sbb    bl,BYTE PTR [ebp+0x54]
  41937e:	cmp    eax,DWORD PTR [ebp-0x2d]
  419381:	sti    
  419382:	cmp    BYTE PTR [esi-0x39],dh
  419385:	add    DWORD PTR [eax-0x12],edx
  419388:	data16 sbb al,0x1e
  41938b:	push   ecx
  41938c:	lock pop ebp
  41938e:	sbb    DWORD PTR [esi-0x35c531ef],esp
  419394:	aaa    
  419395:	(bad)  
  419396:	repz int3 
  419398:	mov    cl,0x12
  41939a:	mov    eax,ds:0xc765c771
  41939f:	jl     0x419365
  4193a1:	sar    BYTE PTR [edx],0xd
  4193a4:	mov    esi,0x128ccdf1
  4193a9:	shl    DWORD PTR [eax+0x4f980d92],1
  4193af:	outs   dx,BYTE PTR ds:[esi]
  4193b0:	in     eax,0x9f
  4193b2:	sbb    al,0xd5
  4193b4:	dec    esp
  4193b5:	add    BYTE PTR [esp+esi*8],ah
  4193b8:	mov    dh,0xeb
  4193ba:	push   0x9b88ff70
  4193bf:	push   esi
  4193c0:	mov    cl,dh
  4193c2:	aam    0x3c
  4193c4:	cmp    BYTE PTR [esp+eax*1],al
  4193c7:	inc    ebx
  4193c8:	mov    dh,0x83
  4193ca:	dec    eax
  4193cb:	adc    dl,BYTE PTR [ecx]
  4193cd:	sub    eax,0xf5ecdd46
  4193d2:	sub    al,0x6a
  4193d4:	pushf  
  4193d5:	pop    es
  4193d6:	xor    BYTE PTR [ebp-0x673f17e0],cl
  4193dc:	scas   eax,DWORD PTR es:[edi]
  4193dd:	jg     0x419371
  4193df:	pop    ss
  4193e0:	fpatan 
  4193e2:	cdq    
  4193e3:	push   esp
  4193e4:	add    ah,bh
  4193e6:	mov    DWORD PTR [edx+eax*4],ebp
  4193e9:	jnp    0x41944c
  4193eb:	dec    esp
  4193ec:	jns    0x41942b
  4193ee:	mov    esi,0x41220c34
  4193f3:	(bad)  
  4193f4:	adc    eax,0xf44e3364
  4193f9:	ds hlt 
  4193fb:	test   al,0xd8
  4193fd:	mov    ch,0x52
  4193ff:	enter  0x6a35,0xe0
  419403:	inc    ebx
  419404:	push   ecx
  419405:	and    ecx,ebp
  419407:	rol    DWORD PTR [ebx-0x2c],0xa
  41940b:	out    0x79,eax
  41940d:	and    eax,0x8a8ea0de
  419412:	mov    eax,ebx
  419414:	(bad)  
  419415:	ja     0x41947a
  419417:	call   0x79f309ee
  41941c:	(bad)  
  41941e:	leave  
  41941f:	loop   0x419424
  419421:	or     BYTE PTR [ecx],dl
  419423:	lea    esi,ds:0x7afb005d
  419429:	ss jge 0x41946b
  41942c:	cmp    al,0x24
  41942e:	(bad)
  419431:	lea    ebx,[edi+0x4096b914]
  419437:	xchg   ebp,eax
  419438:	sub    edi,DWORD PTR [ebx]
  41943a:	gs mov ecx,0x2fdf45a5
  419440:	mov    dh,0xb9
  419442:	shl    DWORD PTR [ebp-0x28],0x56
  419446:	stos   DWORD PTR es:[edi],eax
  419447:	imul   ecx,DWORD PTR [esi],0x30
  41944a:	sbb    ebx,DWORD PTR [esi]
  41944c:	mov    ss,WORD PTR [ebp+0x2e]
  41944f:	xor    al,0xac
  419451:	rcl    DWORD PTR [ebp-0x1851c5a0],1
  419457:	fidivr WORD PTR [ebx+edx*4-0x58]
  41945b:	dec    ebp
  41945c:	(bad)  
  41945d:	enter  0x3a27,0x93
  419461:	outs   dx,BYTE PTR ds:[esi]
  419462:	mov    ebx,DWORD PTR [esi+0x237f07ce]
  419468:	or     al,BYTE PTR [ecx+0x38]
  41946b:	pusha  
  41946c:	lods   eax,DWORD PTR ds:[esi]
  41946d:	and    esi,DWORD PTR [esi+0x11]
  419470:	test   BYTE PTR [ebx+0x22ab1961],cl
  419476:	push   eax
  419477:	leave  
  419478:	mov    ecx,0xc0b5f94d
  41947d:	nop
  41947e:	fstp   TBYTE PTR [edi]
  419480:	sub    BYTE PTR [edi+0x1d1b5e92],cl
  419486:	call   0x90c4:0x422769e4
  41948d:	xor    DWORD PTR [ecx-0x1d904975],ebp
  419493:	jmp    0xa16d:0x253b3351
  41949a:	mov    dh,0x42
  41949c:	jmp    0x91446396
  4194a1:	dec    edi
  4194a2:	sbb    al,0xbb
  4194a4:	pop    edi
  4194a5:	push   ds
  4194a6:	int    0x13
  4194a8:	repnz aad 0x53
  4194ab:	xor    cl,BYTE PTR [esp+esi*8]
  4194ae:	inc    esi
  4194af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4194b0:	dec    DWORD PTR [edx]
  4194b2:	scas   al,BYTE PTR es:[edi]
  4194b3:	mov    edi,0x306229e
  4194b8:	mov    cl,0x50
  4194ba:	sub    ecx,edx
  4194bc:	inc    eax
  4194bd:	or     DWORD PTR [ecx],esp
  4194bf:	retf   
  4194c0:	push   es
  4194c1:	add    esi,DWORD PTR [ebp-0x5b533189]
  4194c7:	retf   
  4194c8:	sbb    eax,0x4f680141
  4194cd:	push   ss
  4194ce:	xchg   DWORD PTR [eax-0x49],edi
  4194d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194d2:	arpl   WORD PTR ds:0x5d08921c,ax
  4194d8:	sbb    eax,0xe70f14b4
  4194dd:	sahf   
  4194de:	mov    bl,0x11
  4194e0:	lahf   
  4194e1:	or     eax,0x51a0906f
  4194e6:	push   ebx
  4194e7:	push   ds
  4194e8:	jae    0x4194d3
  4194ea:	xor    eax,DWORD PTR [esi+0x21f120a]
  4194f0:	out    0xda,eax
  4194f2:	fsub   st,st(1)
  4194f4:	or     esp,ebx
  4194f6:	(bad)  
  4194f7:	daa    
  4194f8:	icebp  
  4194f9:	jnp    0x419567
  4194fb:	pop    ss
  4194fc:	pop    esp
  4194fd:	mov    bh,0x1d
  4194ff:	ficomp DWORD PTR ds:0x9cb70e95
  419505:	xor    DWORD PTR [ecx+0x7a417108],0x16
  41950c:	jg     0x419569
  41950e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41950f:	push   edi
  419510:	mov    eax,ds:0x6cb14094
  419515:	xor    eax,0x70ce866a
  41951a:	fnclex 
  41951c:	push   ds
  41951d:	icebp  
  41951e:	push   eax
  41951f:	out    dx,eax
  419520:	fisttp QWORD PTR [eax+0x21]
  419523:	out    dx,al
  419524:	jge    0x4194db
  419526:	fsub   QWORD PTR gs:[edx-0x66]
  41952a:	fstp   DWORD PTR [edx-0x7d]
  41952d:	out    0x93,eax
  41952f:	dec    ecx
  419530:	sti    
  419531:	cmp    dh,ch
  419533:	call   0xbd8e:0x8ac147ee
  41953a:	mov    bh,0xb9
  41953c:	push   0x5
  41953e:	and    esi,DWORD PTR [edi+0x52]
  419541:	shl    DWORD PTR [edx+0x13],0xee
  419545:	les    esi,FWORD PTR ds:[ecx]
  419548:	jp     0x4194eb
  41954a:	call   0xa719:0x750d1c42
  419551:	pop    ecx
  419552:	out    0xd5,al
  419554:	mov    ah,BYTE PTR [edx-0x1c39bebf]
  41955a:	test   eax,0x6e37405f
  41955f:	(bad)  
  419560:	sbb    ah,BYTE PTR [eax]
  419562:	leave  
  419563:	jmp    0x5dbe:0x291c3895
  41956a:	lds    ebp,FWORD PTR [edx-0x1b]
  41956d:	xchg   BYTE PTR [ebx],cl
  41956f:	dec    ebx
  419570:	mov    bl,0xe2
  419572:	xchg   esi,eax
  419573:	xor    edi,esi
  419575:	and    BYTE PTR [esi+0x20],al
  419578:	inc    edx
  419579:	xchg   edi,eax
  41957a:	jno    0x4195b2
  41957c:	sbb    ebx,ecx
  41957e:	adc    edx,ecx
  419580:	scas   eax,DWORD PTR es:[edi]
  419581:	mov    ebp,0x2d14c921
  419586:	mov    eax,ds:0x5f546e8f
  41958b:	mov    esp,0xc078780b
  419590:	fstp   TBYTE PTR [edx]
  419592:	stos   DWORD PTR es:[edi],eax
  419593:	clc    
  419594:	loope  0x419533
  419596:	push   ebp
  419597:	sub    DWORD PTR [eax+0x76e41a3c],0x8acd367e
  4195a1:	add    esi,esi
  4195a3:	shr    ah,0x90
  4195a6:	push   ss
  4195a7:	add    cl,cl
  4195a9:	ror    bl,cl
  4195ab:	mov    ch,0xbf
  4195ad:	mov    bl,0x32
  4195af:	test   BYTE PTR [ecx+0x1c],dl
  4195b2:	mov    ebp,0x6db630f4
  4195b7:	cmc    
  4195b8:	inc    esi
  4195b9:	lahf   
  4195ba:	add    BYTE PTR [eax+eiz*1],dl
  4195bd:	fmul   QWORD PTR [ecx]
  4195bf:	fs nop
  4195c1:	leave  
  4195c2:	sbb    DWORD PTR [ebx-0x786ad4d0],esp
  4195c8:	aad    0xff
  4195ca:	pushf  
  4195cb:	pop    ss
  4195cc:	jmp    0xe30108e3
  4195d1:	mov    eax,0xf7ed2829
  4195d6:	dec    edx
  4195d7:	and    eax,0xf2a8958d
  4195dc:	dec    ebx
  4195dd:	idiv   al
  4195df:	test   cl,dl
  4195e1:	out    0x37,eax
  4195e3:	ret    0xf4bd
  4195e6:	leave  
  4195e7:	inc    esp
  4195e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195e9:	leave  
  4195ea:	mov    ds:0xfa6da7a9,eax
  4195ef:	or     bh,cl
  4195f1:	mov    bh,0xd1
  4195f3:	loop   0x419590
  4195f5:	push   ss
  4195f6:	cmp    BYTE PTR [ebx+0x2917e73e],ch
  4195fc:	in     al,0xe7
  4195fe:	test   al,0xeb
  419600:	test   cl,ah
  419602:	xchg   esi,eax
  419603:	jae    0x41960d
  419605:	push   eax
  419606:	ins    DWORD PTR es:[edi],dx
  419607:	nop
  419608:	rol    BYTE PTR [eax],0x63
  41960b:	js     0x419601
  41960d:	adc    al,0x30
  41960f:	mov    al,ds:0x62831cf6
  419614:	mov    DWORD PTR [edx-0x46],ebx
  419617:	std    
  419618:	cmp    ah,BYTE PTR [di]
  41961b:	les    ebp,FWORD PTR [eax-0x3db216a8]
  419621:	div    BYTE PTR ds:0x63dc2f7b
  419627:	cmp    ebx,eax
  419629:	push   0xffffffb9
  41962b:	das    
  41962c:	and    BYTE PTR [ebx-0x76],al
  41962f:	test   DWORD PTR [ecx],eax
  419631:	test   eax,0x175a787b
  419636:	imul   eax,DWORD PTR [eax-0x2c],0x66
  41963a:	adc    ch,ah
  41963c:	ja     0x4196a1
  41963e:	rcr    dh,cl
  419640:	loopne 0x419626
  419642:	xor    al,0x80
  419644:	jg     0x419686
  419646:	cmp    al,0xfb
  419648:	xchg   ebp,eax
  419649:	lahf   
  41964a:	ins    BYTE PTR es:[edi],dx
  41964b:	popf   
  41964c:	ins    BYTE PTR es:[edi],dx
  41964d:	mov    edi,0xcce11537
  419652:	jo     0x419674
  419654:	aaa    
  419655:	inc    edi
  419656:	push   edi
  419657:	jne    0x4195e0
  419659:	adc    cl,BYTE PTR [edi]
  41965b:	iret   
  41965c:	or     al,0x5b
  41965e:	dec    edx
  41965f:	jno    0x4196a0
  419661:	sub    ch,BYTE PTR [edx-0x2bd6e921]
  419667:	mov    ebx,0xd46cfd08
  41966c:	adc    edi,DWORD PTR [esi+0x29cb46e5]
  419672:	dec    ecx
  419673:	xchg   esp,eax
  419674:	pusha  
  419675:	jb     0x4196bc
  419677:	jne    0x419639
  419679:	scas   al,BYTE PTR es:[edi]
  41967a:	pop    ss
  41967b:	push   edi
  41967c:	ss adc eax,0x3792ce9f
  419682:	push   ecx
  419683:	lock pop edx
  419685:	dec    esi
  419686:	adc    al,0xb9
  419688:	jge    0x4196aa
  41968a:	std    
  41968b:	mov    dh,0x34
  41968d:	shl    BYTE PTR [ecx+0x3f],0xd8
  419691:	push   ds
  419692:	add    DWORD PTR [ebx-0x5c21fa5f],esp
  419698:	xlat   BYTE PTR ds:[ebx]
  419699:	ret    0x5041
  41969c:	retf   
  41969d:	pushf  
  41969e:	mov    ds:0x5a41e1a8,eax
  4196a3:	fsubr  st,st(1)
  4196a5:	mov    edi,0x38532dda
  4196aa:	sti    
  4196ab:	add    eax,0x2b176754
  4196b0:	in     al,0x59
  4196b2:	clc    
  4196b3:	jp     0x419701
  4196b5:	fs ret 
  4196b7:	pusha  
  4196b8:	call   0xe29c:0x30ca1e1d
  4196bf:	cs sbb eax,0xd9af618
  4196c5:	mov    ds:0x768c3498,eax
  4196ca:	lahf   
  4196cb:	(bad)  
  4196cc:	push   ebx
  4196cd:	popa   
  4196ce:	das    
  4196cf:	mov    dh,dl
  4196d1:	les    esp,FWORD PTR [edx+0x19e6a099]
  4196d7:	sbb    ebx,ecx
  4196d9:	adc    DWORD PTR [esp+ebp*4],0xe818cece
  4196e0:	bound  eax,QWORD PTR [ecx-0x7f499a4b]
  4196e6:	pop    edx
  4196e7:	mov    ch,0x1d
  4196e9:	pop    esp
  4196ea:	(bad)  
  4196eb:	daa    
  4196ec:	adc    DWORD PTR [edi+ecx*2-0x23],0xd7fdac9
  4196f4:	(bad)  
  4196f5:	cli    
  4196f6:	test   eax,0x3c3966b1
  4196fb:	jnp    0x419740
  4196fd:	sub    eax,DWORD PTR [ecx+0x10]
  419700:	js     0x4196d9
  419702:	cmp    esi,DWORD PTR [esi+0x52b38788]
  419708:	or     ah,bl
  41970a:	jbe    0x4196bd
  41970c:	lock push edi
  41970e:	fstp   TBYTE PTR [esi+esi*4]
  419711:	cmp    al,0x67
  419713:	(bad)  
  419714:	not    BYTE PTR [esi]
  419716:	lds    ebp,FWORD PTR [ebx+ebp*1-0x7b]
  41971a:	scas   eax,DWORD PTR es:[edi]
  41971b:	rol    BYTE PTR [ecx-0x62be841],cl
  419721:	xchg   esi,eax
  419722:	jne    0x419705
  419724:	adc    BYTE PTR ds:0x723c5705,ah
  41972a:	sbb    esi,edx
  41972c:	and    DWORD PTR [eax+0x65c79a1e],eax
  419732:	cli    
  419733:	test   BYTE PTR [esi+0x69c6bc39],ch
  419739:	cld    
  41973a:	mov    ds:0x4f5567f9,al
  41973f:	pusha  
  419740:	ret    
  419741:	aam    0x26
  419743:	(bad)  
  419744:	adc    eax,0x85b41014
  419749:	jne    0x419728
  41974b:	shr    DWORD PTR [edi+0x1d],1
  41974e:	(bad)  
  41974f:	iret   
  419750:	jl     0x419719
  419752:	mov    al,0xb4
  419754:	xor    eax,0x1556c943
  419759:	(bad)  
  41975a:	cdq    
  41975b:	stos   DWORD PTR es:[edi],eax
  41975c:	repz push ecx
  41975e:	into   
  41975f:	pop    ecx
  419760:	loope  0x4197b8
  419762:	aam    0xa5
  419764:	xchg   DWORD PTR [esi-0x22b2a0e0],esi
  41976a:	(bad)  
  41976b:	mov    ebp,0x2cd3d5f1
  419770:	cld    
  419771:	push   ds
  419772:	jo     0x41977f
  419774:	jl     0x4197b0
  419776:	call   0xd9342993
  41977b:	xchg   esi,eax
  41977c:	mov    DWORD PTR [edx],ecx
  41977e:	outs   dx,DWORD PTR ds:[esi]
  41977f:	bound  ebx,QWORD PTR [edx+edi*1+0x3a]
  419783:	je     0x4197a8
  419785:	out    dx,al
  419786:	enter  0xefad,0xf9
  41978a:	shr    BYTE PTR [edx],cl
  41978c:	jo     0x419722
  41978e:	retf   
  41978f:	xchg   ecx,eax
  419790:	sub    al,0x7c
  419792:	add    BYTE PTR [ebx-0x3b],al
  419795:	or     bh,BYTE PTR [edi]
  419797:	sub    BYTE PTR [esi+0x16],bl
  41979a:	loope  0x41973e
  41979c:	xor    edi,DWORD PTR [ebx-0x2865b5e5]
  4197a2:	cmp    al,BYTE PTR ds:0x3a77b4b4
  4197a8:	cmp    edx,edi
  4197aa:	jge    0x4197c6
  4197ac:	sbb    al,0xac
  4197ae:	(bad)  
  4197b0:	loop   0x4197fa
  4197b2:	pop    ecx
  4197b3:	(bad)  
  4197b4:	adc    cl,cl
  4197b6:	push   ds
  4197b7:	pop    ebx
  4197b8:	inc    ebx
  4197b9:	aam    0x9a
  4197bb:	scas   eax,DWORD PTR es:[edi]
  4197bc:	lahf   
  4197bd:	enter  0x93ea,0x1b
  4197c1:	in     al,dx
  4197c2:	mov    dl,0x44
  4197c4:	bound  ebx,QWORD PTR [ecx]
  4197c6:	popf   
  4197c7:	jb     0x41975c
  4197c9:	or     BYTE PTR [eax],dh
  4197cb:	mov    esp,0x8174b46c
  4197d0:	add    DWORD PTR ds:0xf92b8aaa,esi
  4197d6:	lods   al,BYTE PTR ds:[esi]
  4197d7:	cwde   
  4197d8:	cmp    dh,BYTE PTR [edi-0x2dcba28]
  4197de:	jle    0x4197dc
  4197e0:	or     dh,dh
  4197e2:	xchg   bl,cl
  4197e4:	push   esp
  4197e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197e6:	push   es
  4197e7:	jl     0x419795
  4197e9:	lods   al,BYTE PTR ds:[esi]
  4197ea:	scas   al,BYTE PTR es:[edi]
  4197eb:	std    
  4197ec:	sub    BYTE PTR [edx-0x33b4ca7d],0xfe
  4197f3:	inc    eax
  4197f4:	(bad)  
  4197f6:	(bad)  
  4197f7:	dec    ebp
  4197f8:	jno    0x419801
  4197fa:	cmp    ah,BYTE PTR [esi-0x14]
  4197fd:	ss popf 
  4197ff:	gs adc eax,0x913c0150
  419805:	(bad)  
  419806:	adc    BYTE PTR fs:[ecx-0x46b441c7],ch
  41980d:	out    dx,eax
  41980e:	inc    esi
  41980f:	nop
  419810:	fdiv   DWORD PTR [ebx-0x4a7f4de3]
  419816:	pop    eax
  419817:	arpl   WORD PTR [edi+0x71c88ee9],cx
  41981d:	dec    esi
  41981e:	mov    cl,0x59
  419820:	mov    edx,0xb0d8141
  419825:	inc    edi
  419826:	xor    edi,DWORD PTR [esi+0x175de57b]
  41982c:	scas   al,BYTE PTR es:[edi]
  41982d:	cmc    
  41982e:	and    DWORD PTR [edi],edx
  419830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419831:	mov    edi,0xbd1527a7
  419836:	popf   
  419837:	call   0x556d:0x993e611f
  41983e:	xchg   ebp,eax
  41983f:	clc    
  419840:	in     eax,0xa2
  419842:	fdivr  QWORD PTR ss:0x3ac6d94
  419849:	add    bl,BYTE PTR [ebx+0x76ae96e7]
  41984f:	add    BYTE PTR [esi],al
  419851:	mov    al,0xeb
  419853:	fnsave [eax-0x1c]
  419856:	cmp    ebp,DWORD PTR [esi+0x54]
  419859:	test   al,0xaf
  41985b:	(bad)  
  41985d:	dec    edi
  41985e:	dec    edi
  41985f:	sub    BYTE PTR [ebx+0x287981fb],cl
  419865:	sar    DWORD PTR ds:0x60944568,1
  41986b:	pop    edi
  41986c:	mov    al,0xec
  41986e:	push   ss
  41986f:	mov    al,al
  419871:	push   0xffffffe0
  419873:	mov    ah,BYTE PTR [edx+eiz*2]
  419876:	ret    0x5b4e
  419879:	push   ds
  41987a:	rcl    BYTE PTR [edi],1
  41987c:	out    0xee,al
  41987e:	int    0x55
  419880:	push   0x5
  419882:	iret   
  419883:	pop    ebp
  419884:	test   eax,0xfa4deefb
  419889:	push   edi
  41988a:	xor    BYTE PTR [ebx-0x6d],al
  41988d:	push   cs
  41988e:	mov    ecx,0x63e37af5
  419893:	fs pop esi
  419895:	call   0xc4689cd8
  41989a:	rcr    DWORD PTR ds:0xe5fc9e81,cl
  4198a0:	pop    eax
  4198a1:	fcmovnbe st,st(5)
  4198a3:	push   ebx
  4198a4:	test   al,0xb3
  4198a6:	mov    DWORD PTR [ecx-0x3f],0x9fe81574
  4198ad:	pop    esp
  4198ae:	test   BYTE PTR fs:[eax+0x662c25c3],dl
  4198b5:	scas   eax,DWORD PTR es:[edi]
  4198b6:	or     al,0xd6
  4198b8:	mov    DWORD PTR [eax-0x52],ebp
  4198bb:	ror    eax,cl
  4198bd:	outs   dx,BYTE PTR ds:[esi]
  4198be:	cmp    eax,0xfd29702d
  4198c3:	pop    edx
  4198c4:	repz adc DWORD PTR [edi+0x3a],ebp
  4198c8:	and    esp,DWORD PTR [ecx+0x62df5a9a]
  4198ce:	ins    BYTE PTR es:[edi],dx
  4198cf:	dec    BYTE PTR [eax+esi*2]
  4198d2:	mov    ebx,0x5d6d9832
  4198d7:	dec    esi
  4198d8:	mov    edx,0x43a77d7d
  4198dd:	and    ecx,DWORD PTR [ebx+eax*4+0x51]
  4198e1:	jg     0x4198be
  4198e3:	jnp    0x4198af
  4198e5:	xor    al,0x8b
  4198e7:	std    
  4198e8:	jne    0x4198e6
  4198ea:	xor    al,0x9d
  4198ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4198ed:	ds hlt 
  4198ef:	mov    dh,cl
  4198f1:	jmp    0x2fcfb623
  4198f6:	fs or  eax,0xb23dbeb3
  4198fc:	sub    DWORD PTR [ecx+0x5d],0xffffffd2
  419900:	push   ebp
  419901:	pop    ecx
  419902:	push   ebp
  419903:	mov    ebx,0x1537ec6d
  419908:	test   DWORD PTR [ebp-0x14db39eb],0x27302567
  419912:	dec    ebp
  419913:	inc    ecx
  419914:	inc    ecx
  419915:	mov    eax,ds:0x46382fd9
  41991a:	aas    
  41991b:	add    al,0x37
  41991d:	jo     0x419933
  41991f:	jmp    0xceace2ea
  419924:	pop    ebx
  419925:	mov    dl,0x74
  419927:	lahf   
  419928:	out    dx,al
  419929:	test   BYTE PTR [ebx+0x740e730],cl
  41992f:	fisttp DWORD PTR [edx+eiz*4+0x3d]
  419933:	lahf   
  419934:	push   esi
  419935:	popf   
  419936:	fld    st(5)
  419938:	add    bh,BYTE PTR [eax]
  41993a:	addr16 push ebp
  41993c:	cmp    eax,0x14336b1e
  419941:	loopne 0x4198ce
  419943:	sbb    ecx,DWORD PTR [edi-0x2899988f]
  419949:	out    0xb0,eax
  41994b:	mov    al,0x8d
  41994d:	sub    ah,ah
  41994f:	cdq    
  419950:	xlat   BYTE PTR ds:[ebx]
  419951:	push   ds
  419952:	cmp    ebp,DWORD PTR [ebx+eiz*4-0x73]
  419956:	and    al,al
  419958:	mov    eax,0x6d0b5ba2
  41995d:	js     0x41994e
  41995f:	shl    ah,1
  419961:	sbb    dh,BYTE PTR [ebx-0x213f5cbb]
  419967:	mov    DWORD PTR [ecx+edi*2],esi
  41996a:	cmc    
  41996b:	ror    DWORD PTR [esi],cl
  41996d:	fdivp  st(1),st
  41996f:	sbb    al,0xc5
  419971:	dec    ebp
  419972:	ss clc 
  419974:	mov    dh,0x98
  419976:	xor    BYTE PTR [ecx+0x16cf052d],cl
  41997c:	(bad)  
  41997d:	pop    ebx
  41997e:	call   0x599d:0x8682fca5
  419985:	xchg   ebx,eax
  419986:	out    0xba,eax
  419988:	shl    DWORD PTR [eax+0x333339ee],1
  41998e:	push   ds
  41998f:	icebp  
  419990:	push   0xffffffd3
  419992:	out    dx,eax
  419993:	sub    al,0x98
  419995:	push   ss
  419996:	jne    0x419a0d
  419998:	stc    
  419999:	dec    edx
  41999a:	iret   
  41999b:	in     al,0x7b
  41999d:	and    BYTE PTR [esi-0x5d],0x75
  4199a1:	jl     0x4199a1
  4199a3:	jmp    0x4199a8
  4199a5:	sbb    al,0x93
  4199a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a8:	pusha  
  4199a9:	jbe    0x419947
  4199ab:	mov    DWORD PTR [esi+ebx*2],ebp
  4199ae:	mov    bl,0x2b
  4199b0:	jns    0x419a0f
  4199b2:	mov    esi,edx
  4199b4:	pop    ebp
  4199b5:	mov    cl,0x8a
  4199b7:	xchg   ebx,eax
  4199b8:	int3   
  4199b9:	xchg   ebp,eax
  4199ba:	test   BYTE PTR [edi+0x77],ch
  4199bd:	adc    al,0x59
  4199bf:	das    
  4199c0:	rcl    DWORD PTR [ecx],1
  4199c2:	inc    edi
  4199c3:	push   eax
  4199c4:	mov    BYTE PTR [edx-0x7b195c30],bl
  4199ca:	push   esp
  4199cb:	aas    
  4199cc:	jns    0x4199db
  4199ce:	and    edi,ecx
  4199d0:	arpl   di,di
  4199d2:	cmp    BYTE PTR [ebx-0x13db5989],ch
  4199d8:	loopne 0x4199de
  4199da:	sbb    al,0xbe
  4199dc:	mov    esi,0x53579f99
  4199e1:	shr    BYTE PTR [ecx+0x10],0x7c
  4199e5:	cdq    
  4199e6:	add    esi,DWORD PTR [ebp-0x68]
  4199e9:	xchg   DWORD PTR [ecx],eax
  4199eb:	push   DWORD PTR [esi-0x2a]
  4199ee:	xor    BYTE PTR [eax-0x55],bl
  4199f1:	loop   0x419982
  4199f3:	dec    bp
  4199f5:	pop    eax
  4199f6:	(bad)  
  4199f7:	ret    
  4199f8:	inc    esp
  4199f9:	cwde   
  4199fa:	fwait
  4199fb:	ds ins DWORD PTR es:[edi],dx
  4199fd:	data16 jb 0x419a56
  419a00:	dec    eax
  419a01:	jns    0x4199f9
  419a03:	lods   eax,DWORD PTR ds:[esi]
  419a04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a05:	sub    BYTE PTR [ecx+0x74],0x76
  419a09:	cmc    
  419a0a:	xchg   ecx,eax
  419a0b:	jmp    0x4199aa
  419a0d:	mov    eax,0x90476d12
  419a12:	nop
  419a13:	aas    
  419a14:	and    al,0xdb
  419a16:	pop    esi
  419a17:	jecxz  0x419a35
  419a19:	cmc    
  419a1a:	add    dh,BYTE PTR [eax]
  419a1c:	sub    eax,0xf231f5ad
  419a21:	sub    al,0x2d
  419a23:	js     0x419a7e
  419a25:	shr    DWORD PTR [ebx],cl
  419a27:	les    esp,FWORD PTR [ebx+edi*4]
  419a2a:	push   ebx
  419a2b:	push   esi
  419a2c:	rcl    BYTE PTR [eax],cl
  419a2e:	outs   dx,DWORD PTR ds:[esi]
  419a2f:	fmul   QWORD PTR [edi+0x58]
  419a32:	jmp    0x8587a470
  419a37:	aad    0x16
  419a39:	dec    edi
  419a3a:	loope  0x4199c6
  419a3c:	lock sahf 
  419a3e:	sbb    edx,esp
  419a40:	add    al,0xa4
  419a42:	mov    ah,0xb2
  419a44:	mov    bh,0x2
  419a46:	ja     0x4199e1
  419a48:	mov    al,0xdc
  419a4a:	jno    0x4199f7
  419a4c:	idiv   DWORD PTR gs:[edx]
  419a4f:	push   0xffffffd8
  419a51:	sbb    al,0x46
  419a53:	fs sub al,0x4
  419a56:	jp     0x4199dc
  419a58:	(bad)  
  419a59:	int    0x1a
  419a5b:	sbb    BYTE PTR [eax-0x73e54a94],bh
  419a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a62:	stc    
  419a63:	test   BYTE PTR [ecx+0x7a],bl
  419a66:	fwait
  419a67:	mov    ebx,0x28daea9f
  419a6c:	sub    al,0x56
  419a6e:	sub    bh,BYTE PTR [eax]
  419a70:	(bad)  
  419a71:	ja     0x419ab0
  419a73:	mov    al,ds:0x61815499
  419a78:	jne    0x419a83
  419a7a:	mov    WORD PTR ds:0x214ffed5,fs
  419a80:	sub    bl,BYTE PTR [eax]
  419a82:	fcomp  QWORD PTR [edx+ecx*1]
  419a85:	daa    
  419a86:	stc    
  419a87:	push   ds
  419a88:	xchg   esi,eax
  419a89:	rcr    BYTE PTR [edx+0x6],1
  419a8c:	shr    DWORD PTR [ecx+ebx*8],cl
  419a8f:	adc    dh,BYTE PTR [esi]
  419a91:	fs loopne 0x419a97
  419a94:	add    DWORD PTR ds:0x2ceb3eb,esp
  419a9a:	jmp    0x72900be9
  419a9f:	adc    BYTE PTR [ebx+edx*1+0x64],cl
  419aa3:	arpl   WORD PTR [edx],ax
  419aa5:	inc    edx
  419aa6:	mov    bl,BYTE PTR [eax]
  419aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419aa9:	inc    ebx
  419aaa:	cld    
  419aab:	fldenv ds:0x1c22402c
  419ab1:	inc    edi
  419ab2:	mov    ecx,0xe6bfa7ef
  419ab7:	mov    cl,ch
  419ab9:	shl    DWORD PTR [edx+0x3dcf162f],1
  419abf:	jne    0x419a7f
  419ac1:	pop    eax
  419ac2:	aad    0x5e
  419ac4:	shr    BYTE PTR [ecx-0x17da1f32],cl
  419aca:	sub    eax,0xbc79bf76
  419acf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad0:	inc    esi
  419ad1:	retf   
  419ad2:	push   esp
  419ad3:	cs pop ecx
  419ad5:	int    0xee
  419ad7:	mov    esi,ecx
  419ad9:	push   0x1d38180a
  419ade:	lds    edi,FWORD PTR [ebx]
  419ae0:	fisttp DWORD PTR [esi-0x73354b97]
  419ae6:	je     0x419ac2
  419ae8:	jmp    0xe59979be
  419aed:	je     0x419afa
  419aef:	push   cs
  419af0:	and    DWORD PTR [esi-0x6],edi
  419af3:	or     al,0x6c
  419af5:	cmp    ch,BYTE PTR [edi]
  419af7:	jne    0x419a95
  419af9:	ins    BYTE PTR es:[edi],dx
  419afa:	push   ebp
  419afb:	inc    esp
  419afc:	mov    bh,BYTE PTR [edx]
  419afe:	xlat   BYTE PTR ds:[ebx]
  419aff:	dec    edi
  419b00:	les    ebp,FWORD PTR [esi+0x2e983565]
  419b06:	arpl   WORD PTR [ebx],dx
  419b08:	mov    dl,0x77
  419b0a:	ror    DWORD PTR [edi],1
  419b0c:	fdivrp st(7),st
  419b0e:	cmp    al,0x11
  419b10:	cmp    esp,DWORD PTR [ebx-0x6d55a7b9]
  419b16:	cmc    
  419b17:	dec    eax
  419b18:	addr16 xchg ebx,eax
  419b1a:	push   ebx
  419b1b:	out    0x6c,al
  419b1d:	adc    ecx,DWORD PTR [ebp+0x27]
  419b20:	mov    dl,0x30
  419b22:	pop    ds
  419b23:	dec    BYTE PTR [esi-0xef201de]
  419b29:	je     0x419b18
  419b2b:	inc    eax
  419b2c:	mov    ah,0xaf
  419b2e:	sbb    al,0xb5
  419b30:	mov    dh,0x3d
  419b32:	rcl    BYTE PTR [eax+edi*2+0x2f7a9310],0xf9
  419b3a:	mov    ch,0x58
  419b3c:	cwde   
  419b3d:	ror    BYTE PTR [ebx-0x5a2449bc],0xdf
  419b44:	adc    eax,DWORD PTR ds:0x7d3b9a15
  419b4a:	xchg   BYTE PTR [edx-0x5d],bh
  419b4d:	and    DWORD PTR [ebp+eax*2-0x4b],0x2b
  419b52:	and    al,0x8f
  419b54:	and    edx,DWORD PTR [ebp+0x2969966f]
  419b5a:	mov    dl,0xd8
  419b5c:	mov    edx,0x57bf375b
  419b61:	fisub  WORD PTR [esp+eax*1]
  419b64:	cmp    ebx,DWORD PTR ds:0x25eb5955
  419b6a:	rol    ebx,cl
  419b6c:	sahf   
  419b6d:	xchg   ecx,eax
  419b6e:	or     eax,0x726efd6c
  419b73:	test   eax,0x990c5b7d
  419b78:	repnz cwde 
  419b7a:	cs push ebx
  419b7c:	or     eax,0x3273d3d4
  419b81:	adc    eax,0x9d58269e
  419b86:	sti    
  419b87:	imul   ebx,DWORD PTR [edi+0x29],0x66aec4ef
  419b8e:	shl    BYTE PTR [edx],1
  419b90:	or     eax,0x92548269
  419b95:	and    cl,dl
  419b97:	cmp    BYTE PTR [ebp-0x54],0x6b
  419b9b:	cmp    DWORD PTR [ebx],0xfffffffb
  419b9e:	dec    ebx
  419b9f:	adc    ebp,DWORD PTR [esi+0x3f]
  419ba2:	and    ah,BYTE PTR [eax]
  419ba4:	pop    ebp
  419ba5:	test   dl,bl
  419ba7:	aam    0xd2
  419ba9:	retf   0xad7e
  419bac:	sbb    edi,edi
  419bae:	call   0xe458f4a8
  419bb3:	pop    ecx
  419bb4:	jbe    0x419bcb
  419bb6:	xchg   ecx,eax
  419bb7:	sbb    BYTE PTR [edi+0x56fd359b],0x34
  419bbe:	out    0x5,al
  419bc0:	inc    ecx
  419bc1:	mov    ah,0x5d
  419bc3:	pop    ecx
  419bc4:	test   eax,0x54dca4c3
  419bc9:	not    DWORD PTR [edi+0x66]
  419bcc:	(bad)  
  419bcd:	push   0x7743110e
  419bd2:	mov    ebp,0x3808ea39
  419bd7:	inc    esp
  419bd8:	cmp    BYTE PTR [ebx+0x19],ah
  419bdb:	cli    
  419bdc:	hlt    
  419bdd:	and    DWORD PTR [ebx+ecx*2-0x63fd7b34],ebp
  419be4:	mov    edi,0xd4c287ca
  419be9:	in     eax,dx
  419bea:	nop
  419beb:	fcomp  DWORD PTR ds:0x17b62cfc
  419bf1:	pop    ss
  419bf2:	push   0x23e57806
  419bf7:	fs cmp dl,0x23
  419bfb:	out    dx,eax
  419bfc:	mov    ecx,0x8e697aa4
  419c01:	in     al,dx
  419c02:	mov    esp,0xdab87063
  419c07:	or     DWORD PTR [eax-0xc529bd4],edi
  419c0d:	and    al,0x0
  419c0f:	mov    ah,ch
  419c11:	int    0x4d
  419c13:	push   edx
  419c14:	push   edx
  419c15:	xchg   edi,eax
  419c16:	cli    
  419c17:	out    0xff,al
  419c19:	push   0x5b56428f
  419c1e:	push   ebp
  419c1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c20:	or     dl,BYTE PTR [ebx+0x116603b5]
  419c26:	push   esi
  419c27:	mov    dh,0xe8
  419c29:	sar    ebp,cl
  419c2b:	add    esp,ebp
  419c2d:	dec    ebx
  419c2e:	adc    ah,BYTE PTR [esi+eax*1]
  419c31:	lds    ebp,FWORD PTR [ebx]
  419c33:	loope  0x419bd8
  419c35:	rol    BYTE PTR [eax],0xa
  419c38:	out    dx,al
  419c39:	clc    
  419c3a:	push   eax
  419c3b:	fs xchg ebp,eax
  419c3d:	push   ds
  419c3e:	sub    BYTE PTR [esi+0x5b54ead5],al
  419c44:	pop    ecx
  419c45:	frstor [ebx-0x1b94347b]
  419c4b:	mov    ds:0x3cf5edea,al
  419c50:	out    dx,al
  419c51:	retf   0xc743
  419c54:	aad    0x9f
  419c56:	lea    edx,[ebp-0x2b]
  419c59:	mov    dh,BYTE PTR [ebx+0xa]
  419c5c:	test   eax,0x5ccab149
  419c61:	call   0x5e42:0xae0a4cbb
  419c68:	loop   0x419c99
  419c6a:	inc    esi
  419c6b:	rcr    BYTE PTR [ebx+0x64e1ba8d],1
  419c71:	je     0x419c85
  419c73:	ins    BYTE PTR es:[edi],dx
  419c74:	and    ebx,DWORD PTR [esi+0x171a7858]
  419c7a:	out    dx,eax
  419c7b:	push   ebx
  419c7c:	in     eax,0x29
  419c7e:	sbb    cl,BYTE PTR [esi+ebp*1+0x35]
  419c82:	and    DWORD PTR [ecx+0x59],ebx
  419c85:	push   ss
  419c86:	sti    
  419c87:	sbb    ch,0xf3
  419c8a:	jbe    0x419c22
  419c8c:	adc    eax,ecx
  419c8e:	mov    esp,0x4b936e60
  419c93:	jbe    0x419c17
  419c95:	jns    0x419c8f
  419c97:	leave  
  419c98:	test   BYTE PTR [edi+0x2],cl
  419c9b:	sub    al,0x9c
  419c9d:	popa   
  419c9e:	pop    ecx
  419c9f:	xor    ebp,ecx
  419ca1:	or     BYTE PTR [ebx+0x20f4959a],bl
  419ca7:	mov    cl,0xa1
  419ca9:	sar    BYTE PTR [esi-0x57],0x37
  419cad:	push   es
  419cae:	sahf   
  419caf:	push   esi
  419cb0:	mov    esi,0x8d380519
  419cb5:	js     0x419ceb
  419cb7:	adc    DWORD PTR [eax],0xffffffdd
  419cba:	adc    bh,BYTE PTR [ecx]
  419cbc:	push   eax
  419cbd:	inc    ebx
  419cbe:	in     al,0x5c
  419cc0:	dec    esp
  419cc1:	sub    eax,DWORD PTR [edx+ebp*4+0x79474ef7]
  419cc8:	sbb    eax,0xff099a48
  419ccd:	rol    bl,cl
  419ccf:	das    
  419cd0:	stos   BYTE PTR es:[edi],al
  419cd1:	jae    0x419d47
  419cd3:	popa   
  419cd4:	repnz mov esp,0xced50f3c
  419cda:	push   eax
  419cdb:	or     BYTE PTR [esi-0x73],dh
  419cde:	fistp  DWORD PTR [ebx]
  419ce0:	nop
  419ce1:	push   0x69
  419ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ce4:	shl    DWORD PTR [eax],cl
  419ce6:	xchg   edx,eax
  419ce7:	rcl    BYTE PTR [eax*1-0x6c5c0dcd],0x3b
  419cef:	scas   al,BYTE PTR es:[edi]
  419cf0:	inc    esp
  419cf1:	int3   
  419cf2:	cmp    ebp,DWORD PTR [esi]
  419cf4:	arpl   sp,bp
  419cf6:	add    esp,DWORD PTR [esi+0x3c]
  419cf9:	inc    edi
  419cfa:	jnp    0x419d18
  419cfc:	inc    esp
  419cfd:	xor    DWORD PTR [esi-0x67c550e6],ebx
  419d03:	sbb    DWORD PTR [ebp+0x43],edi
  419d06:	push   edi
  419d07:	add    BYTE PTR [ecx+0x4b],cl
  419d0a:	xchg   ecx,eax
  419d0b:	(bad)  
  419d0c:	sahf   
  419d0d:	jns    0x419ced
  419d0f:	scas   al,BYTE PTR es:[edi]
  419d10:	ja     0x419d5b
  419d12:	retf   0xa97d
  419d15:	or     DWORD PTR [edx-0xb],ebp
  419d18:	mov    ds:0xd94db1a3,eax
  419d1d:	add    al,bl
  419d1f:	adc    esi,edi
  419d21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d22:	sub    eax,0xd9465376
  419d27:	jb     0x419cf8
  419d29:	cmp    al,0xc
  419d2b:	and    al,0x52
  419d2d:	cmp    al,BYTE PTR [bp+0x59f8]
  419d32:	push   cs
  419d33:	div    DWORD PTR gs:[edx]
  419d36:	outs   dx,BYTE PTR ds:[esi]
  419d37:	and    dl,BYTE PTR gs:[ebp+eax*8-0x34]
  419d3c:	shl    esi,0x94
  419d3f:	add    ah,BYTE PTR [ebp-0x5e]
  419d42:	stos   BYTE PTR es:[edi],al
  419d43:	mov    dh,0x44
  419d45:	stos   DWORD PTR es:[edi],eax
  419d46:	adc    al,0xf6
  419d48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d49:	mov    ch,0x7b
  419d4b:	in     eax,dx
  419d4c:	mov    ebx,0x11794178
  419d51:	scas   al,BYTE PTR es:[edi]
  419d52:	sub    bh,BYTE PTR [ebx]
  419d54:	dec    esi
  419d55:	loop   0x419ce6
  419d57:	pavgw  mm2,mm0
  419d5a:	in     eax,dx
  419d5b:	sbb    al,0xc1
  419d5d:	inc    ebx
  419d5e:	mov    dl,0xbc
  419d60:	lahf   
  419d61:	and    DWORD PTR [eax+0x36],eax
  419d64:	xor    eax,0x1e46defe
  419d69:	pop    ds
  419d6a:	dec    edx
  419d6b:	rol    eax,0x1d
  419d6e:	hlt    
  419d6f:	test   al,0x6d
  419d71:	inc    esi
  419d72:	sub    al,0x19
  419d74:	outs   dx,BYTE PTR ds:[esi]
  419d75:	adc    DWORD PTR [ecx+0x2f],esi
  419d78:	mov    al,0x38
  419d7a:	je     0x419d00
  419d7c:	cmc    
  419d7d:	test   eax,0x15e65fe8
  419d82:	adc    eax,0x9f684c87
  419d87:	stc    
  419d88:	lods   eax,DWORD PTR ds:[esi]
  419d89:	sbb    ebx,DWORD PTR ds:0xfab62bba
  419d8f:	test   BYTE PTR [edi+0x698a325c],al
  419d95:	push   ebp
  419d96:	jl     0x419dda
  419d98:	adc    BYTE PTR [eax+ebx*1],bl
  419d9b:	popa   
  419d9c:	or     DWORD PTR [edx+ebx*2+0x5dd47134],0xffffffae
  419da4:	ja     0x419d32
  419da6:	out    dx,al
  419da7:	imul   esp,DWORD PTR [edi+0x3],0xffffffc5
  419dab:	cmp    edi,DWORD PTR [ebx]
  419dad:	and    bl,BYTE PTR [edx+0x6166c88f]
  419db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419db4:	rcl    DWORD PTR [edx-0x2e],1
  419db7:	arpl   WORD PTR [ecx-0x49053357],bx
  419dbd:	pop    ds
  419dbe:	xchg   esi,eax
  419dbf:	(bad)  
  419dc0:	aaa    
  419dc1:	aas    
  419dc2:	jle    0x419e23
  419dc4:	adc    al,0xda
  419dc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dc7:	clc    
  419dc8:	xchg   esi,eax
  419dc9:	cmp    eax,0xec04d2d6
  419dce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dcf:	jg     0x419dd3
  419dd1:	mov    dl,0x9c
  419dd3:	retf   0xd4cb
  419dd6:	pop    esi
  419dd7:	test   dl,0x7f
  419dda:	(bad)  
  419ddb:	lds    ebp,FWORD PTR [esi+0x45]
  419dde:	push   es
  419ddf:	push   esp
  419de0:	daa    
  419de1:	shl    BYTE PTR ss:[ecx-0x1ba8332e],0x67
  419de9:	pop    ebx
  419dea:	daa    
  419deb:	sahf   
  419dec:	pusha  
  419ded:	add    bh,ch
  419def:	cmp    DWORD PTR [esi-0x67],edx
  419df2:	int3   
  419df3:	jno    0x419de4
  419df5:	int    0xac
  419df7:	jle    0x419ddf
  419df9:	aaa    
  419dfa:	in     eax,0x2f
  419dfc:	jb     0x419e7a
  419dfe:	xchg   ebp,eax
  419dff:	pop    ecx
  419e00:	mov    al,ds:0xda5760ec
  419e05:	test   DWORD PTR [edx],esi
  419e07:	es sahf 
  419e09:	pusha  
  419e0a:	sar    DWORD PTR ds:0x91dea7e2,1
  419e10:	mov    ah,BYTE PTR [edi-0x9]
  419e13:	mov    al,0x90
  419e15:	push   0xba42734e
  419e1a:	jecxz  0x419e5e
  419e1c:	sbb    DWORD PTR [ebp+ebx*8+0x2fc3c71f],ecx
  419e23:	jl     0x419e09
  419e25:	xor    ah,cl
  419e27:	mov    ah,0x49
  419e29:	adc    al,0xfe
  419e2b:	and    eax,0xf1dcc2db
  419e30:	mov    ds,WORD PTR [ecx]
  419e32:	(bad)
  419e35:	push   0xffffffb9
  419e37:	mov    edi,0xa4139281
  419e3c:	jp     0x419ea3
  419e3e:	lock xchg DWORD PTR [ecx],ebx
  419e41:	pop    edi
  419e42:	sbb    DWORD PTR [eax-0x5ffbcd5a],0xffffffd7
  419e49:	stos   BYTE PTR es:[edi],al
  419e4a:	jne    0x419e65
  419e4c:	aaa    
  419e4d:	das    
  419e4e:	lock popf 
  419e50:	fs (bad) 
  419e52:	repz pop ds
  419e54:	jne    0x419dd7
  419e56:	and    BYTE PTR [esi],0xad
  419e59:	mov    bh,0xf1
  419e5b:	add    al,0x65
  419e5d:	mov    al,ds:0xbf8b1d25
  419e62:	pushf  
  419e63:	xor    DWORD PTR [edx+edi*1+0x41],edx
  419e67:	fs aaa 
  419e69:	aad    0xfa
  419e6b:	or     bh,bl
  419e6d:	add    esi,edi
  419e6f:	mov    ebx,esi
  419e71:	and    al,0x2c
  419e73:	push   edx
  419e74:	pop    edx
  419e75:	jmp    0xbc8c:0xa4d272bd
  419e7c:	inc    esi
  419e7d:	push   ecx
  419e7e:	(bad)
  419e81:	mov    dl,0x9f
  419e83:	lds    edx,FWORD PTR [esi-0x17]
  419e86:	lahf   
  419e87:	aad    0x61
  419e89:	enter  0xb1b7,0x76
  419e8d:	or     eax,0xe1fc37e6
  419e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e93:	bound  edx,QWORD PTR fs:[ebx+0x5]
  419e97:	xor    DWORD PTR [ecx],edx
  419e99:	push   esi
  419e9a:	popf   
  419e9b:	(bad)  
  419e9c:	jmp    0xfdaaff8b
  419ea1:	xor    DWORD PTR [esi+eiz*1-0x4ab624da],esi
  419ea8:	adc    al,0x9c
  419eaa:	cmp    dl,BYTE PTR [ebp+edi*4+0x4cf0ec06]
  419eb1:	jae    0x419ef2
  419eb3:	fbld   TBYTE PTR [ebx+0x7e]
  419eb6:	ret    
  419eb7:	ret    
  419eb8:	dec    edi
  419eb9:	or     DWORD PTR [ebx+eiz*4],esp
  419ebc:	or     BYTE PTR [eax+edi*4],0xca
  419ec0:	fwait
  419ec1:	bound  edi,QWORD PTR [edx+eiz*8-0x21]
  419ec5:	pop    esi
  419ec6:	int    0xa4
  419ec8:	sub    eax,0x2ad07233
  419ecd:	in     al,0x19
  419ecf:	cmc    
  419ed0:	fidiv  WORD PTR [edx-0x24]
  419ed3:	sub    eax,0x6f23349
  419ed8:	and    DWORD PTR [ebp-0x59039d83],0x2459ebed
  419ee2:	sbb    ebp,DWORD PTR [edi+eiz*2+0x30]
  419ee6:	cdq    
  419ee7:	(bad)  
  419ee8:	pop    ss
  419ee9:	dec    ebp
  419eea:	in     al,dx
  419eeb:	add    edi,DWORD PTR [esi+0x44]
  419eee:	lods   eax,DWORD PTR ds:[esi]
  419eef:	sar    DWORD PTR [ebx],cl
  419ef1:	mov    esi,0xa6a806f8
  419ef6:	mov    al,0xfd
  419ef8:	out    dx,al
  419ef9:	push   esi
  419efa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419efb:	stc    
  419efc:	stc    
  419efd:	out    dx,al
  419efe:	stos   DWORD PTR es:[edi],eax
  419eff:	mov    ecx,0x59fdb59f
  419f04:	aas    
  419f05:	mov    esp,0x81c442f8
  419f0a:	push   edi
  419f0b:	sar    DWORD PTR [eax-0x32d5ef9a],cl
  419f11:	div    DWORD PTR [ecx+0x635b9c0e]
  419f17:	or     DWORD PTR [edx+0x7107bf72],edi
  419f1d:	jo     0x419ea1
  419f1f:	mov    ds,WORD PTR [ecx+0x3ad697a5]
  419f25:	add    BYTE PTR [ebp+0x50],0xfc
  419f29:	shl    BYTE PTR [ebp-0x652b4d2d],1
  419f2f:	fidivr WORD PTR [edx]
  419f31:	daa    
  419f32:	in     eax,0xde
  419f34:	push   0xc01b8a25
  419f39:	stos   BYTE PTR es:[edi],al
  419f3a:	and    BYTE PTR [edx-0x1ca651f9],ch
  419f40:	hlt    
  419f41:	mov    esp,DWORD PTR gs:[edx+esi*4]
  419f45:	js     0x419ecc
  419f47:	mov    esp,0xb294a483
  419f4c:	sbb    al,0xd2
  419f4e:	in     al,dx
  419f4f:	pop    ebp
  419f50:	sbb    eax,0x99d6a19
  419f55:	mov    edx,0x29ee9c7e
  419f5a:	(bad)  
  419f5b:	sub    DWORD PTR [edx],ecx
  419f5d:	pop    edx
  419f5e:	xchg   esp,eax
  419f5f:	add    al,0x16
  419f61:	in     al,dx
  419f62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f63:	pop    esp
  419f64:	outs   dx,BYTE PTR ds:[esi]
  419f65:	jl     0x419fbc
  419f67:	inc    eax
  419f68:	dec    edi
  419f69:	loopne 0x419fad
  419f6b:	loope  0x419f43
  419f6d:	int    0x14
  419f6f:	lods   eax,DWORD PTR ds:[esi]
  419f70:	jmp    0x330a:0x3a7c4f71
  419f77:	test   DWORD PTR [ecx],0xdc85e601
  419f7d:	shl    bl,0x15
  419f80:	les    esi,FWORD PTR [ebx-0x61fc20b7]
  419f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f87:	arpl   WORD PTR ds:0x6db6523a,si
  419f8d:	adc    cl,BYTE PTR [ebp+0x1f73daa2]
  419f93:	add    dl,BYTE PTR [esi+eiz*4+0x51c0ae4b]
  419f9a:	mov    bl,0x76
  419f9c:	out    0x3c,eax
  419f9e:	jno    0x419fb4
  419fa0:	scas   al,BYTE PTR es:[edi]
  419fa1:	inc    ebp
  419fa2:	push   cs
  419fa3:	mov    BYTE PTR [edi+esi*4-0x52],dl
  419fa7:	stos   BYTE PTR es:[edi],al
  419fa8:	in     eax,dx
  419fa9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419faa:	mov    ds:0xef945dd3,eax
  419faf:	(bad)  
  419fb0:	popa   
  419fb1:	rcl    BYTE PTR [ecx+0x7],cl
  419fb4:	xchg   esp,eax
  419fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fb6:	add    eax,0x9b5a1fd2
  419fbb:	lahf   
  419fbc:	outs   dx,DWORD PTR ds:[esi]
  419fbd:	inc    esi
  419fbe:	std    
  419fbf:	mov    dl,0xc1
  419fc1:	xchg   edx,eax
  419fc2:	add    al,BYTE PTR [ecx-0x4b]
  419fc5:	inc    eax
  419fc6:	(bad)  
  419fc7:	ds sbb al,0x94
  419fca:	sbb    DWORD PTR [esi-0x1d],edx
  419fcd:	or     BYTE PTR [edx+esi*4-0x1d],dl
  419fd1:	mov    bh,0x67
  419fd3:	add    ecx,ebx
  419fd5:	scas   al,BYTE PTR es:[edi]
  419fd6:	cmp    eax,0xf12735b
  419fdb:	sub    al,0x5
  419fdd:	jo     0x41a00c
  419fdf:	je     0x419fe2
  419fe1:	push   edx
  419fe2:	or     DWORD PTR [esi+0xc],ebx
  419fe5:	repnz adc ebp,DWORD PTR [esp+ebp*2+0x50]
  419fea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419feb:	jl     0x419f9e
  419fed:	or     cl,dh
  419fef:	add    al,0xbb
  419ff1:	and    al,0xd1
  419ff3:	xchg   ebx,eax
  419ff4:	mov    al,ds:0xe346c85a
  419ff9:	adc    eax,0x91b26287
  419ffe:	mov    DWORD PTR [edx+0x36],edx
  41a001:	test   al,0x10
  41a003:	js     0x41a05e
  41a005:	sub    DWORD PTR [esi-0x7224012f],eax
  41a00b:	jg     0x41a017
  41a00d:	push   0xffffffd8
  41a00f:	in     al,0xce
  41a011:	test   ebp,0x5139803f
  41a017:	enter  0x6d2c,0xfb
  41a01b:	sbb    edi,DWORD PTR [esi]
  41a01d:	stos   DWORD PTR es:[edi],eax
  41a01e:	or     esp,DWORD PTR [ebp-0x6e]
  41a021:	push   ebx
  41a022:	mov    bl,0x3f
  41a024:	pop    edi
  41a025:	inc    ecx
  41a026:	out    dx,al
  41a027:	add    al,0x0
  41a029:	loopne 0x41a071
  41a02b:	jae    0x41a044
  41a02d:	arpl   WORD PTR [ebp-0x11],ax
  41a030:	out    dx,eax
  41a031:	xchg   esi,eax
  41a032:	mov    ds:0x131e7744,eax
  41a037:	or     al,0xad
  41a039:	jns    0x41a026
  41a03b:	les    ecx,FWORD PTR [ebp+0x31]
  41a03e:	mov    esp,0xc895f703
  41a043:	jmp    0x41a073
  41a045:	mov    bl,0x37
  41a047:	fld    TBYTE PTR [esi+0xc4cb93c]
  41a04d:	mov    eax,0x293d5f6f
  41a052:	or     DWORD PTR [ecx-0x23cf2b14],0x84c0b553
  41a05c:	jno    0x41a058
  41a05e:	mov    ds:0x783672c4,al
  41a063:	repz push ebp
  41a065:	push   0xffffffd7
  41a067:	push   cs
  41a068:	arpl   WORD PTR [esi],bp
  41a06a:	hlt    
  41a06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a06c:	out    0x5e,al
  41a06e:	pop    eax
  41a06f:	pusha  
  41a070:	xchg   esp,eax
  41a071:	sbb    edx,DWORD PTR [edi-0x60e684df]
  41a077:	or     bh,BYTE PTR [ecx+0x268e87dd]
  41a07d:	(bad)  
  41a07f:	push   ebx
  41a080:	ret    0xbd4
  41a083:	push   0xa445c57d
  41a088:	rcr    ah,cl
  41a08a:	push   esi
  41a08b:	pop    eax
  41a08c:	outs   dx,DWORD PTR ds:[esi]
  41a08d:	dec    esp
  41a08e:	ret    0x4526
  41a091:	fstp   TBYTE PTR [esi-0x32cb7a56]
  41a097:	cmp    esp,DWORD PTR [eax+0x28]
  41a09a:	aaa    
  41a09b:	pusha  
  41a09c:	xor    dh,BYTE PTR [edi+0x7131fb31]
  41a0a2:	pushf  
  41a0a3:	cmp    dl,BYTE PTR [esi+ebp*4-0x6e]
  41a0a7:	out    dx,eax
  41a0a8:	xchg   esp,eax
  41a0a9:	scas   eax,DWORD PTR es:[edi]
  41a0aa:	jg     0x41a112
  41a0ac:	add    eax,0xd1104ff
  41a0b1:	je     0x41a0fa
  41a0b3:	mov    cs,WORD PTR [esi-0x56]
  41a0b6:	mov    edi,0x273259eb
  41a0bb:	add    edx,DWORD PTR [eax+0x58bf46c0]
  41a0c1:	xlat   BYTE PTR ds:[ebx]
  41a0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0c3:	sbb    bh,BYTE PTR [ebp+0x13]
  41a0c6:	add    BYTE PTR [ebp+0x48c12886],0x5
  41a0cd:	hlt    
  41a0ce:	in     eax,dx
  41a0cf:	jne    0x41a069
  41a0d1:	js     0x41a06c
  41a0d3:	xchg   edi,eax
  41a0d4:	cs xchg esp,eax
  41a0d6:	xor    BYTE PTR [ebx],0x82
  41a0d9:	sbb    sp,WORD PTR [eax-0x6032f646]
  41a0e0:	repnz mov ebx,ds
  41a0e3:	sub    BYTE PTR [ebx+0x25],dh
  41a0e6:	and    DWORD PTR [edi-0x25c9e236],esi
  41a0ec:	cdq    
  41a0ed:	mov    eax,0xe193e888
  41a0f2:	inc    ecx
  41a0f3:	and    esp,DWORD PTR [ebx+0x16]
  41a0f6:	inc    ebx
  41a0f7:	shr    BYTE PTR [edx-0xa986f4c],1
  41a0fd:	cmp    DWORD PTR [esi],eax
  41a0ff:	sar    BYTE PTR [edi+0x26],cl
  41a102:	call   0xd460:0x5db8ab9a
  41a109:	ins    BYTE PTR es:[edi],dx
  41a10a:	stc    
  41a10b:	bound  edx,QWORD PTR [esi]
  41a10d:	call   0xa866b4d6
  41a112:	pop    esi
  41a113:	outs   dx,BYTE PTR ds:[esi]
  41a114:	scas   al,BYTE PTR es:[edi]
  41a115:	enter  0xc6fe,0x3e
  41a119:	dec    edx
  41a11a:	adc    BYTE PTR [edi],ah
  41a11c:	out    0x5a,al
  41a11e:	sbb    al,0xce
  41a120:	inc    edx
  41a121:	jae    0x41a0f3
  41a123:	pushf  
  41a124:	jmp    0x83cb:0x17a87679
  41a12b:	rcl    edi,0x7d
  41a12e:	cmp    edx,DWORD PTR [ebp+ebp*4+0x64]
  41a132:	rcl    BYTE PTR [ecx+0x19],1
  41a135:	cld    
  41a136:	call   0xc555a937
  41a13b:	cmp    eax,0xf943c79c
  41a140:	mov    ah,cl
  41a142:	fstp   DWORD PTR [ebx-0x4a]
  41a145:	das    
  41a146:	inc    edi
  41a147:	mov    ebp,0xfc64a2d7
  41a14c:	shl    DWORD PTR [edx],1
  41a14e:	iret   
  41a14f:	sti    
  41a150:	(bad)  
  41a151:	lods   al,BYTE PTR ds:[esi]
  41a152:	(bad)  [edi-0x58]
  41a155:	outs   dx,DWORD PTR ds:[esi]
  41a156:	push   ebx
  41a157:	loop   0x41a17b
  41a159:	jp     0x41a0ef
  41a15b:	mov    ds:0x7b061314,eax
  41a160:	push   0x40
  41a162:	inc    edx
  41a163:	aad    0xb1
  41a165:	xchg   ebp,eax
  41a166:	pop    ecx
  41a167:	das    
  41a168:	rcr    BYTE PTR [eax+0x4],1
  41a16b:	div    ah
  41a16d:	repz jo 0x41a194
  41a170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a171:	les    edi,FWORD PTR [esi]
  41a173:	mov    esi,0xe830e7c1
  41a178:	mov    bl,0xf9
  41a17a:	pop    esi
  41a17b:	inc    ebp
  41a17c:	fwait
  41a17d:	push   0xffffffaf
  41a17f:	cmc    
  41a180:	jbe    0x41a154
  41a182:	or     al,0xc7
  41a184:	mov    edi,0x528babb1
  41a189:	dec    esp
  41a18a:	pop    ebp
  41a18b:	mov    es,WORD PTR [ebp+0x66a7f0de]
  41a191:	mov    edx,0x471bf369
  41a196:	mov    BYTE PTR [edx],ch
  41a198:	loope  0x41a1a2
  41a19a:	cdq    
  41a19b:	add    al,0x3d
  41a19d:	jbe    0x41a177
  41a19f:	in     al,dx
  41a1a0:	sub    eax,0xeb8b6df5
  41a1a5:	xchg   DWORD PTR [esi],esp
  41a1a7:	pop    ss
  41a1a8:	sti    
  41a1a9:	cmovg  eax,DWORD PTR [eax+0x4cd14a7]
  41a1b0:	out    dx,eax
  41a1b1:	retf   0xa9d8
  41a1b4:	out    dx,eax
  41a1b5:	lock inc ebx
  41a1b7:	test   esp,0xceb34944
  41a1bd:	or     DWORD PTR [edx-0x48],edi
  41a1c0:	jg     0x41a1e7
  41a1c2:	aad    0xe7
  41a1c4:	mov    ebx,0x9cafd9b0
  41a1c9:	sbb    al,0x7f
  41a1cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1cc:	out    dx,eax
  41a1cd:	add    al,cl
  41a1cf:	sub    dl,BYTE PTR [ebp+0x2021f238]
  41a1d5:	cmp    al,0x4a
  41a1d7:	enter  0xfde8,0xdc
  41a1db:	inc    edi
  41a1dc:	mov    dl,0x32
  41a1de:	fnstenv [ebx]
  41a1e0:	jne    0x41a1cb
  41a1e2:	inc    edx
  41a1e3:	xchg   ecx,eax
  41a1e4:	push   esp
  41a1e5:	mov    ?,WORD PTR [ebp+0x4b1724a7]
  41a1eb:	sub    bl,BYTE PTR [eax]
  41a1ed:	lods   eax,DWORD PTR ds:[esi]
  41a1ee:	jb     0x41a19c
  41a1f0:	jmp    0x77c7:0xfb42c00e
  41a1f7:	repz or dh,cl
  41a1fa:	test   al,0x1
  41a1fc:	push   edx
  41a1fd:	std    
  41a1fe:	push   cs
  41a1ff:	adc    esp,DWORD PTR [edx]
  41a201:	mov    al,0x9
  41a203:	and    edx,DWORD PTR [edi]
  41a205:	fsub   st(1),st
  41a207:	xor    DWORD PTR [ebp-0x67],eax
  41a20a:	nop
  41a20b:	clc    
  41a20c:	push   eax
  41a20d:	pusha  
  41a20e:	mov    eax,0x449fab4a
  41a213:	or     ah,al
  41a215:	mov    esi,0xfded9744
  41a21a:	(bad)  
  41a21b:	dec    edi
  41a21c:	call   0x39d1:0x682b5250
  41a223:	iret   
  41a224:	mov    dl,0x75
  41a226:	xchg   ebx,eax
  41a227:	aas    
  41a228:	mov    ds:0x1d5c86f8,eax
  41a22d:	jge    0x41a1c9
  41a22f:	fmul   QWORD PTR [esi+ebx*8-0x3e]
  41a233:	jle    0x41a23f
  41a235:	cmp    eax,0x6ac1b1d
  41a23a:	(bad)  
  41a23e:	rol    bl,cl
  41a240:	ret    0x57ed
  41a243:	jmp    0x64b4:0x7960bde7
  41a24a:	pop    ebp
  41a24b:	mov    eax,0xe15da34
  41a250:	mov    ds:0xf43306d4,eax
  41a255:	test   al,0x1
  41a257:	adc    bl,BYTE PTR [edx]
  41a259:	or     BYTE PTR [edx],ah
  41a25b:	cli    
  41a25c:	pop    ds
  41a25d:	pop    ecx
  41a25e:	xchg   DWORD PTR [eax-0x4a1ae012],ebx
  41a264:	shl    ch,1
  41a266:	test   al,0xb8
  41a268:	(bad)  
  41a269:	sbb    ah,BYTE PTR [ebx-0x4b]
  41a26c:	test   BYTE PTR [esi-0x592634df],0x13
  41a273:	mov    eax,0xe6b3bed3
  41a278:	hlt    
  41a279:	aaa    
  41a27a:	daa    
  41a27b:	sahf   
  41a27c:	mov    di,0x5522
  41a280:	jmp    0x41a2e8
  41a282:	fs mov dl,0x81
  41a285:	jno    0x41a21c
  41a287:	retf   0x2c65
  41a28a:	mov    eax,0x96d7d464
  41a28f:	repnz lahf 
  41a291:	stc    
  41a292:	pop    esp
  41a293:	mov    edx,0xc5536427
  41a298:	inc    eax
  41a299:	jge    0x41a2b3
  41a29b:	or     bl,BYTE PTR [edi+0x38]
  41a29e:	rcl    BYTE PTR [ecx+0x1449389a],0x68
  41a2a5:	mov    dl,0x4d
  41a2a7:	sbb    ebp,DWORD PTR [edx+edx*8-0x5]
  41a2ab:	cld    
  41a2ac:	(bad)  
  41a2ad:	pop    ebx
  41a2ae:	sbb    esi,0xffffffb4
  41a2b1:	pop    es
  41a2b2:	pop    ss
  41a2b3:	push   0x8ae60f67
  41a2b8:	dec    esp
  41a2b9:	jmp    0x41a326
  41a2bb:	mov    ds:0x9a1a2de7,al
  41a2c0:	mov    ds:0xaff66fa1,eax
  41a2c5:	lds    ebp,FWORD PTR [edx]
  41a2c7:	lock mov bl,0x95
  41a2ca:	scas   eax,DWORD PTR es:[edi]
  41a2cb:	sub    dl,dh
  41a2cd:	shl    DWORD PTR [ecx+0x5680b0c1],1
  41a2d3:	inc    ecx
  41a2d4:	xchg   edx,eax
  41a2d5:	js     0x41a2a0
  41a2d7:	jno    0x41a291
  41a2d9:	rcl    DWORD PTR [ebx+esi*1-0x8],1
  41a2dd:	fdivr  QWORD PTR [ebx]
  41a2df:	sub    esp,ebx
  41a2e1:	xchg   ecx,eax
  41a2e2:	add    DWORD PTR [edx],edi
  41a2e4:	jmp    0x41a27e
  41a2e6:	dec    esp
  41a2e7:	dec    ebp
  41a2e8:	stos   DWORD PTR es:[edi],eax
  41a2e9:	pop    ebp
  41a2ea:	jl     0x41a34e
  41a2ec:	sti    
  41a2ed:	push   esp
  41a2ee:	adc    ch,dl
  41a2f0:	mov    esi,DWORD PTR [edx+0x4b14df3d]
  41a2f6:	test   al,0x4
  41a2f8:	js     0x41a2e5
  41a2fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2fb:	lods   eax,DWORD PTR ds:[esi]
  41a2fc:	jmp    0x3f67:0xe7764dbf
  41a303:	mov    ds:0xc3b3fade,al
  41a308:	cmp    bh,BYTE PTR [esi+0x53]
  41a30b:	xchg   edi,eax
  41a30c:	cmp    al,0xe2
  41a30e:	xchg   esi,eax
  41a30f:	stc    
  41a310:	mov    esp,0x4f2ab094
  41a315:	mov    ebp,0x96e9d3ca
  41a31a:	jns    0x41a363
  41a31c:	icebp  
  41a31d:	test   al,0xad
  41a31f:	inc    edx
  41a320:	arpl   WORD PTR [edx],bx
  41a322:	imul   eax,DWORD PTR [ecx+eax*1-0x6d5d27e1],0x4d296868
  41a32d:	jle    0x41a316
  41a32f:	and    al,0x23
  41a331:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a333:	lds    edi,FWORD PTR [ecx+0x68f01ea6]
  41a339:	inc    edx
  41a33a:	mov    ebx,0x8706c084
  41a33f:	enter  0xd8db,0x11
  41a343:	and    ebp,ecx
  41a345:	(bad)  
  41a346:	push   cs
  41a347:	shl    DWORD PTR [eax+ecx*4-0x6a2b6c79],cl
  41a34e:	(bad)  
  41a34f:	shl    DWORD PTR [edi],1
  41a351:	loope  0x41a322
  41a353:	pop    eax
  41a354:	prefetcht0 BYTE PTR [ebx+0x3]
  41a358:	rcr    BYTE PTR [ebp-0x2d881d62],cl
  41a35e:	xchg   ecx,eax
  41a35f:	mov    eax,0xb6d74673
  41a364:	mov    esp,0xf6b1677e
  41a369:	mov    esp,0x96185652
  41a36e:	sti    
  41a36f:	cdq    
  41a370:	neg    DWORD PTR cs:[ecx-0x4b]
  41a374:	or     eax,ecx
  41a376:	mov    ah,0xf7
  41a378:	test   BYTE PTR [ecx],dl
  41a37a:	cmp    DWORD PTR [eax+edi*4+0x60],0xffffffb2
  41a37f:	cdq    
  41a380:	out    0xf9,eax
  41a382:	adc    esi,DWORD PTR [eax]
  41a384:	xchg   edi,eax
  41a385:	out    0xde,eax
  41a387:	adc    ecx,DWORD PTR [ebx+ebp*1]
  41a38a:	(bad)  
  41a38b:	sub    esp,DWORD PTR [eax+edi*2]
  41a38e:	adc    al,0x35
  41a390:	jge    0x41a38b
  41a392:	cmp    DWORD PTR [esi+0xf],0xffffff82
  41a396:	fwait
  41a397:	mov    ebx,0xf39ee1b
  41a39c:	jne    0x41a327
  41a39e:	clts   
  41a3a0:	sub    al,0x76
  41a3a2:	mov    edi,0x694df837
  41a3a7:	inc    esi
  41a3a8:	loopne 0x41a33b
  41a3aa:	mov    edx,0xa755a36a
  41a3af:	cs pop ebx
  41a3b1:	nop
  41a3b2:	popf   
  41a3b3:	sahf   
  41a3b4:	lds    ecx,FWORD PTR [ebx-0xf]
  41a3b7:	loop   0x41a3a3
  41a3b9:	xor    eax,0x22fd0cd6
  41a3be:	mov    eax,0x29807883
  41a3c3:	push   ebp
  41a3c4:	pop    edi
  41a3c5:	sub    ebp,DWORD PTR ds:0x8932bc02
  41a3cb:	(bad)  
  41a3cc:	nop
  41a3cd:	and    edx,DWORD PTR [eax+0x30]
  41a3d0:	sti    
  41a3d1:	push   ds
  41a3d2:	pop    edx
  41a3d3:	sbb    BYTE PTR [ebx+0x6d],dl
  41a3d6:	xor    esi,ebp
  41a3d8:	sti    
  41a3d9:	(bad)  
  41a3da:	push   edx
  41a3db:	cmc    
  41a3dc:	fcom   st(4)
  41a3de:	repz mov ah,0x99
  41a3e1:	retf   
  41a3e2:	inc    edx
  41a3e3:	stc    
  41a3e4:	add    esp,edi
  41a3e6:	mov    dh,0x2a
  41a3e8:	lods   eax,DWORD PTR ds:[esi]
  41a3e9:	out    dx,al
  41a3ea:	stos   DWORD PTR es:[edi],eax
  41a3eb:	jnp    0x41a3f6
  41a3ed:	sub    DWORD PTR [eax],esp
  41a3ef:	mov    esp,0xee87b481
  41a3f4:	mov    ebx,0x8a990ac2
  41a3f9:	add    al,0xfd
  41a3fb:	retf   0x1efd
  41a3fe:	mov    ds:0x4c630fcb,al
  41a403:	ins    DWORD PTR es:[edi],dx
  41a404:	outs   dx,DWORD PTR ds:[esi]
  41a405:	or     dh,al
  41a407:	dec    edi
  41a408:	scas   al,BYTE PTR es:[edi]
  41a409:	mov    ah,0x5d
  41a40b:	mov    BYTE PTR [esi-0x2b31a639],dh
  41a411:	pop    edx
  41a412:	(bad)  
  41a413:	xor    esp,DWORD PTR [esi]
  41a415:	and    ecx,ebx
  41a417:	nop
  41a418:	xor    dh,cl
  41a41a:	hlt    
  41a41b:	xor    ebp,DWORD PTR [edi-0x4a]
  41a41e:	mov    al,ds:0x50652f26
  41a423:	pop    eax
  41a424:	mov    cx,0x571
  41a428:	repz enter 0xd9b0,0xe2
  41a42d:	(bad)  [edi]
  41a42f:	jne    0x41a470
  41a431:	mov    ds:0x9438c891,al
  41a436:	and    dh,dl
  41a438:	xchg   ebp,eax
  41a439:	jg     0x41a3fb
  41a43b:	je     0x41a49e
  41a43d:	(bad)  
  41a43e:	xchg   esp,eax
  41a43f:	stos   DWORD PTR es:[edi],eax
  41a440:	mov    esp,0x1dbcd784
  41a445:	sahf   
  41a446:	pop    es
  41a447:	push   eax
  41a448:	mov    ecx,0xb39786fa
  41a44d:	(bad)  
  41a44e:	repnz add eax,0x205bff18
  41a454:	mov    bl,0xef
  41a456:	dec    ecx
  41a457:	and    edi,DWORD PTR [edx]
  41a459:	ja     0x41a45b
  41a45b:	rcr    BYTE PTR ds:0x44b077bb,1
  41a461:	jle    0x41a4c3
  41a463:	push   edi
  41a464:	and    bh,dl
  41a466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a467:	pop    edx
  41a468:	ret    
  41a469:	jo     0x41a40b
  41a46b:	or     al,0x25
  41a46d:	mov    dh,0x4f
  41a46f:	mov    al,0x82
  41a471:	sbb    cl,al
  41a473:	dec    DWORD PTR [esi+0x77ca06b3]
  41a479:	xor    al,0x80
  41a47b:	inc    edi
  41a47c:	xchg   edx,eax
  41a47d:	jbe    0x41a4b0
  41a47f:	add    DWORD PTR ds:0x4858dff4,ebp
  41a485:	cmc    
  41a486:	mov    BYTE PTR [eax+0x3afb541d],bl
  41a48c:	dec    eax
  41a48d:	fisub  DWORD PTR [edi+0xc]
  41a490:	jmp    0xb9b39ef2
  41a495:	sbb    eax,0x16d5406a
  41a49a:	daa    
  41a49b:	xchg   ebx,eax
  41a49c:	pop    edi
  41a49d:	jp     0x41a475
  41a49f:	lods   al,BYTE PTR ss:[esi]
  41a4a1:	xlat   BYTE PTR ds:[ebx]
  41a4a2:	jmp    0x7fad:0x5f1bb518
  41a4a9:	mov    ebp,0x1041af8f
  41a4ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4af:	loope  0x41a44a
  41a4b1:	sub    BYTE PTR [eax+0x33],bl
  41a4b4:	pop    ebx
  41a4b5:	lahf   
  41a4b6:	fucom  st(2)
  41a4b8:	ret    0xf7bf
  41a4bb:	test   eax,0x1c74bfa1
  41a4c0:	(bad)  
  41a4c1:	mov    esp,ss
  41a4c3:	mov    edx,ecx
  41a4c5:	jno    0x41a452
  41a4c7:	fwait
  41a4c8:	sbb    esp,0xa626c0c4
  41a4ce:	in     eax,0x9c
  41a4d0:	(bad)  
  41a4d1:	jns    0x41a4e4
  41a4d3:	mov    al,ds:0x114c92c1
  41a4d8:	jns    0x41a51a
  41a4da:	test   eax,0x91ee9579
  41a4df:	ror    bh,0xee
  41a4e2:	pop    edi
  41a4e3:	les    esi,FWORD PTR [esi+0x9]
  41a4e6:	dec    esi
  41a4e7:	sbb    dl,BYTE PTR [ebx]
  41a4e9:	xchg   BYTE PTR [esi],dl
  41a4eb:	push   esi
  41a4ec:	sbb    al,0x92
  41a4ee:	push   es
  41a4ef:	sahf   
  41a4f0:	or     esp,DWORD PTR [ebx-0x693d151b]
  41a4f6:	sbb    eax,0x7ca3fe60
  41a4fb:	arpl   sp,dx
  41a4fd:	and    cl,BYTE PTR [esi]
  41a4ff:	push   cs
  41a500:	hlt    
  41a501:	add    bh,BYTE PTR [edi]
  41a503:	test   BYTE PTR [eax+0x5],cl
  41a506:	les    ebx,FWORD PTR [edx+eax*8+0x597121c8]
  41a50d:	sbb    eax,0x55318d55
  41a512:	mov    edi,0x6c27cc31
  41a517:	icebp  
  41a518:	mov    ds:0xf62d7014,eax
  41a51d:	imul   BYTE PTR [ecx-0x3b]
  41a520:	(bad)  
  41a521:	out    dx,eax
  41a522:	jnp    0x41a4e1
  41a524:	out    0x19,al
  41a526:	dec    esp
  41a527:	or     DWORD PTR [esi-0x3],esi
  41a52a:	and    BYTE PTR [eax+0x23],0xdf
  41a52e:	icebp  
  41a52f:	into   
  41a530:	retf   
  41a531:	jne    0x41a57b
  41a533:	data16 sub al,BYTE PTR [ebx+0x62]
  41a537:	sbb    edi,DWORD PTR [edx-0x738d7635]
  41a53d:	cs scas al,BYTE PTR es:[edi]
  41a53f:	mov    bl,BYTE PTR [ebp-0x25]
  41a542:	stos   DWORD PTR es:[edi],eax
  41a543:	sahf   
  41a544:	jb     0x41a4d0
  41a546:	(bad)  
  41a548:	clc    
  41a549:	xlat   BYTE PTR ds:[ebx]
  41a54a:	inc    ebx
  41a54b:	stos   DWORD PTR es:[edi],eax
  41a54c:	pop    ebp
  41a54d:	repnz cli 
  41a54f:	xchg   ecx,eax
  41a550:	std    
  41a551:	push   edi
  41a552:	pop    esi
  41a553:	or     ch,BYTE PTR [esi]
  41a555:	out    dx,al
  41a556:	xor    edx,0xffffff8c
  41a559:	js     0x41a510
  41a55b:	cmc    
  41a55c:	outs   dx,DWORD PTR ds:[esi]
  41a55d:	dec    ebp
  41a55e:	retf   0x1dc0
  41a561:	loopne 0x41a526
  41a563:	pop    esp
  41a564:	pop    edx
  41a565:	or     al,0x60
  41a567:	pop    ebx
  41a568:	iret   
  41a569:	imul   edi,ebx,0xffffffac
  41a56c:	dec    esp
  41a56d:	pop    ds
  41a56e:	adc    BYTE PTR [edi-0x457224f3],bh
  41a574:	int3   
  41a575:	sbb    DWORD PTR [ecx],edx
  41a577:	xor    bh,ch
  41a579:	mov    ecx,0x226a9d9f
  41a57e:	inc    esi
  41a57f:	dec    ebp
  41a580:	fsubr  DWORD PTR [edi]
  41a582:	jg     0x41a591
  41a584:	ss or  eax,0xeaaabae9
  41a58a:	add    cl,bl
  41a58c:	fcom   st(2)
  41a58e:	cwde   
  41a58f:	add    bl,dh
  41a591:	jno    0x41a574
  41a593:	arpl   WORD PTR [ebp-0x77d09723],cx
  41a599:	dec    eax
  41a59a:	mov    eax,ds:0xbe43d278
  41a59f:	dec    esp
  41a5a0:	jb     0x41a5b3
  41a5a2:	cmp    dl,BYTE PTR [ebx+0x3e]
  41a5a5:	or     al,0xb0
  41a5a7:	outs   dx,BYTE PTR ds:[esi]
  41a5a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5a9:	mov    dh,0x94
  41a5ab:	jp     0x41a553
  41a5ad:	push   esi
  41a5ae:	in     al,dx
  41a5af:	or     al,0x3d
  41a5b1:	fstp   DWORD PTR [ecx-0x25]
  41a5b4:	mov    ecx,DWORD PTR [edx-0x5c16283f]
  41a5ba:	fdivr  st,st(0)
  41a5bc:	cmc    
  41a5bd:	mov    al,ds:0x51626709
  41a5c2:	xlat   BYTE PTR ds:[ebx]
  41a5c3:	cdq    
  41a5c4:	jg     0x41a60d
  41a5c6:	lea    edx,[ebp-0x70281a4c]
  41a5cc:	adc    bl,BYTE PTR ds:0x3bb8b48c
  41a5d2:	cwde   
  41a5d3:	inc    DWORD PTR [edx+0x59]
  41a5d6:	std    
  41a5d7:	adc    BYTE PTR [eax-0x17],al
  41a5da:	pop    ds
  41a5db:	outs   dx,DWORD PTR ds:[esi]
  41a5dc:	loop   0x41a62a
  41a5de:	sar    BYTE PTR [esi+edi*8-0x2963f879],cl
  41a5e5:	push   eax
  41a5e6:	inc    edx
  41a5e7:	test   DWORD PTR [ecx+0x4c],edi
  41a5ea:	mov    ebx,0xe4fe30a1
  41a5ef:	gs test eax,0x995b8fa5
  41a5f5:	adc    DWORD PTR [edx+eax*4+0x53f313c4],esp
  41a5fc:	out    0xb,al
  41a5fe:	add    bl,cl
  41a600:	fld    TBYTE PTR [edi-0x12920eb9]
  41a606:	ss lock push 0xc61ee074
  41a60d:	loop   0x41a643
  41a60f:	xor    eax,0xfaa6dcaf
  41a614:	inc    ecx
  41a615:	cmp    al,0xa
  41a617:	clc    
  41a618:	jmp    FWORD PTR ds:0xfc1e2bca
  41a61e:	pop    ds
  41a61f:	or     bh,ah
  41a621:	dec    eax
  41a622:	jns    0x41a61a
  41a624:	(bad)  
  41a625:	cwde   
  41a626:	push   ecx
  41a627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a628:	xor    BYTE PTR [edi],ah
  41a62a:	aas    
  41a62b:	mov    ds:0x9521f20b,al
  41a630:	fs stc 
  41a632:	pop    edx
  41a633:	adc    BYTE PTR [ebx+0x7b],bh
  41a636:	mov    edi,0x62e76abe
  41a63b:	dec    esp
  41a63c:	dec    ebp
  41a63d:	jmp    0xa535:0x5339bfb
  41a644:	out    0x2d,eax
  41a646:	mov    esp,0x97d746cc
  41a64b:	(bad)  [edx]
  41a64d:	or     bh,BYTE PTR [eax]
  41a64f:	cld    
  41a650:	sbb    al,ch
  41a652:	and    eax,0x1139120c
  41a657:	add    eax,0xe7fad583
  41a65c:	pop    esi
  41a65d:	call   DWORD PTR [edx+0x550cf3a9]
  41a663:	call   0xb3bb31b
  41a668:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a669:	fimul  DWORD PTR [edi]
  41a66b:	jns    0x41a694
  41a66d:	icebp  
  41a66e:	xchg   ebp,eax
  41a66f:	dec    edi
  41a670:	fwait
  41a671:	push   ecx
  41a672:	mov    ds:0xce7ec180,eax
  41a677:	jmp    0x5d8e:0xd36b0c02
  41a67e:	mov    ebp,0x93d8626d
  41a683:	shr    eax,1
  41a685:	sbb    eax,0x8bef2409
  41a68a:	sbb    DWORD PTR [ecx-0x5f],esp
  41a68d:	inc    esi
  41a68e:	inc    edi
  41a68f:	repnz rcl esi,cl
  41a692:	test   DWORD PTR [ebx-0x4d],ebp
  41a695:	imul   ebx,DWORD PTR [edx-0x1bc2195b],0x6bc9d0c0
  41a69f:	fdivr  QWORD PTR [edx]
  41a6a1:	test   al,0x9f
  41a6a3:	jb     0x41a65f
  41a6a5:	nop
  41a6a6:	inc    ecx
  41a6a7:	cld    
  41a6a8:	adc    bh,BYTE PTR [ebx-0x37940bbb]
  41a6ae:	rcl    DWORD PTR [edi+0x31a9a11f],cl
  41a6b4:	inc    ecx
  41a6b5:	cmp    ch,BYTE PTR [ecx+0x53f94159]
  41a6bb:	ret    0xde9
  41a6be:	ss ja  0x41a732
  41a6c1:	dec    edx
  41a6c2:	daa    
  41a6c3:	rol    DWORD PTR [ebp+0x39],cl
  41a6c6:	ficomp WORD PTR [ecx]
  41a6c8:	adc    BYTE PTR [edx-0x24],al
  41a6cb:	mov    ecx,0xffe83951
  41a6d0:	or     eax,0x91f274a8
  41a6d5:	or     edi,edi
  41a6d7:	jns    0x41a72f
  41a6d9:	add    ah,BYTE PTR [edi+eiz*4-0x32]
  41a6dd:	int3   
  41a6de:	or     eax,0xf2e60ac4
  41a6e3:	mov    eax,ds:0x1f58ec0
  41a6e8:	ficom  WORD PTR [edx+ebp*4+0x3eacee0d]
  41a6ef:	mov    al,ds:0x4dddbd40
  41a6f4:	jb     0x41a6e1
  41a6f6:	xchg   DWORD PTR [edx],eax
  41a6f8:	imul   esi,DWORD PTR [ebp+0x13246591],0x45
  41a6ff:	pop    DWORD PTR [ecx+edi*4]
  41a702:	sbb    al,0xaa
  41a704:	mov    eax,ds:0xc5e9b0c6
  41a709:	push   ecx
  41a70a:	jmp    0x3f24:0x83145be6
  41a711:	mov    al,ds:0x3aa623b1
  41a716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a717:	push   ecx
  41a718:	push   esi
  41a719:	mov    gs,WORD PTR [edi+0x20]
  41a71c:	inc    esi
  41a71d:	mov    ds:0xa474b6ec,al
  41a722:	popf   
  41a723:	imul   ecx,DWORD PTR [ebp+0x797d24c1],0x89680700
  41a72d:	mov    fs:0x51be7a02,eax
  41a733:	hlt    
  41a734:	sahf   
  41a735:	mov    esi,0x3bc5606
  41a73a:	out    dx,al
  41a73b:	push   0xe453528f
  41a740:	sbb    eax,DWORD PTR [esi]
  41a742:	cmp    al,0xbf
  41a744:	sbb    dh,ch
  41a746:	sbb    eax,0x6d6a1d23
  41a74b:	imul   esi,edi,0x73d39cde
  41a751:	xor    al,dh
  41a753:	sbb    eax,0x67b30ded
  41a758:	mov    bh,BYTE PTR [ebp-0xf914146]
  41a75e:	dec    esp
  41a75f:	ret    0x5a14
  41a762:	inc    edx
  41a763:	pop    esp
  41a764:	mov    WORD PTR [ebp-0x1413306e],cs
  41a76a:	test   DWORD PTR [eax-0x3],edi
  41a76d:	jmp    0x17c0faff
  41a772:	mov    ch,0x78
  41a774:	cmp    eax,0xaa30c282
  41a779:	test   DWORD PTR [ebx],0x17bf14e4
  41a77f:	mov    ds:0x16d6f5df,al
  41a784:	mov    ecx,0x18a8b7f9
  41a789:	sub    eax,0x59da6407
  41a78e:	and    edi,esp
  41a790:	into   
  41a791:	and    ecx,DWORD PTR [ebx+0x32c74cc]
  41a797:	loopne 0x41a735
  41a799:	inc    ebp
  41a79a:	inc    eax
  41a79b:	ds pop es
  41a79d:	jno    0x41a778
  41a79f:	sbb    al,0xe5
  41a7a1:	or     BYTE PTR [edx],0x14
  41a7a4:	push   ss
  41a7a5:	out    dx,al
  41a7a6:	sti    
  41a7a7:	and    BYTE PTR [edi-0x582e9e07],ah
  41a7ad:	retf   0xdb84
  41a7b0:	jo     0x41a7fc
  41a7b2:	retf   0x57fa
  41a7b5:	cmp    edx,ebx
  41a7b7:	mul    DWORD PTR [ecx+0x5ae07489]
  41a7bd:	dec    DWORD PTR [esi]
  41a7bf:	push   ecx
  41a7c0:	xor    al,0x17
  41a7c2:	cwde   
  41a7c3:	retf   
  41a7c4:	stos   BYTE PTR es:[edi],al
  41a7c5:	fiadd  DWORD PTR [eax+esi*1]
  41a7c8:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41a7ca:	cli    
  41a7cb:	cmp    eax,0x6358d510
  41a7d0:	and    al,0x4a
  41a7d2:	jae    0x41a77a
  41a7d4:	sbb    ecx,DWORD PTR [edx]
  41a7d6:	mov    ah,0x64
  41a7d8:	arpl   WORD PTR [eax+0x13],cx
  41a7db:	add    DWORD PTR [edi-0x67f1e0a4],edi
  41a7e1:	dec    ecx
  41a7e2:	shr    DWORD PTR [ebp+0x2944bd18],1
  41a7e8:	cmp    BYTE PTR [ebp+0x190ac90a],bl
  41a7ee:	cmp    al,0xe9
  41a7f0:	add    eax,DWORD PTR [ebx+0x45b3f9fb]
  41a7f6:	(bad)  
  41a7f7:	ficomp WORD PTR [ebx]
  41a7f9:	imul   DWORD PTR [edi+0x363bd75a]
  41a7ff:	sub    bh,BYTE PTR [eax+0x51a1c6e6]
  41a805:	je     0x41a805
  41a807:	(bad)  
  41a808:	ja     0x41a7b8
  41a80a:	mov    ch,0x10
  41a80c:	gs jle 0x41a822
  41a80f:	les    esp,FWORD PTR ds:[ecx+edi*1]
  41a813:	jg     0x41a84b
  41a815:	dec    ebp
  41a816:	out    0xd3,eax
  41a818:	jae    0x41a874
  41a81a:	loope  0x41a7a2
  41a81c:	in     eax,0xab
  41a81e:	lock out dx,eax
  41a820:	xor    al,dl
  41a822:	stos   DWORD PTR es:[edi],eax
  41a823:	push   ds
  41a824:	repnz cmc 
  41a826:	aas    
  41a827:	xchg   esp,eax
  41a828:	xor    al,dl
  41a82a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a82b:	out    0x16,al
  41a82d:	test   eax,0xdf72fb4d
  41a832:	leave  
  41a833:	push   edi
  41a834:	jmp    0x41a856
  41a836:	adc    al,0xaf
  41a838:	fcomp  QWORD PTR [ecx-0x29]
  41a83b:	cs add edi,0xfffffff7
  41a83f:	mov    al,0x67
  41a841:	pop    ecx
  41a842:	ror    BYTE PTR [ebp+0x6d],1
  41a845:	addr16 dec ebp
  41a847:	rcl    DWORD PTR [ebx],0xe7
  41a84a:	jno    0x41a847
  41a84c:	xor    eax,0x5b42e63d
  41a851:	pop    eax
  41a852:	inc    esi
  41a853:	xor    DWORD PTR [ebp+0x615057bd],0xffffffef
  41a85a:	(bad)  
  41a85b:	call   0x3a57:0x59a7ed1f
  41a862:	pop    es
  41a863:	and    esi,DWORD PTR [edx-0x4]
  41a866:	shr    DWORD PTR ds:0x63dbe885,cl
  41a86c:	xchg   edi,eax
  41a86d:	xor    ebp,DWORD PTR [ecx+0x26]
  41a870:	repz push esi
  41a872:	adc    esi,edx
  41a874:	mov    dl,0x7d
  41a876:	mov    dl,0x55
  41a878:	mul    DWORD PTR [edx+0x70daeec]
  41a87e:	fcomp  DWORD PTR [edx]
  41a880:	add    DWORD PTR [eax],esp
  41a882:	sub    al,0x94
  41a884:	test   al,0x35
  41a886:	sbb    cl,BYTE PTR cs:[edi]
  41a889:	lock imul ebp,DWORD PTR [eax+esi*8+0x6d],0x993e1ef4
  41a892:	lea    ecx,[edx-0x326d2c00]
  41a898:	dec    edi
  41a899:	ss daa 
  41a89b:	xchg   DWORD PTR [edi-0x6770a12],ecx
  41a8a1:	push   es
  41a8a2:	push   edx
  41a8a3:	test   eax,ecx
  41a8a5:	mov    al,0xcf
  41a8a7:	cmp    BYTE PTR [edx-0x5e],bl
  41a8aa:	in     eax,0xcf
  41a8ac:	es (bad) 
  41a8ae:	xchg   ecx,eax
  41a8af:	icebp  
  41a8b0:	call   0x2b017299
  41a8b5:	push   cs
  41a8b6:	add    al,0x21
  41a8b8:	pop    esp
  41a8b9:	fidiv  WORD PTR [ecx-0x67006867]
  41a8bf:	xchg   ecx,eax
  41a8c0:	in     al,dx
  41a8c1:	lock cmp eax,0xc506c220
  41a8c7:	or     BYTE PTR [ecx+0x52],dl
  41a8ca:	jae    0x41a8b5
  41a8cc:	retf   0xcbf7
  41a8cf:	or     edx,DWORD PTR [ebx]
  41a8d1:	repnz (bad) 
  41a8d3:	scas   eax,DWORD PTR es:[edi]
  41a8d4:	inc    esp
  41a8d5:	aas    
  41a8d6:	fadd   QWORD PTR [edx]
  41a8d8:	rcl    esp,0xec
  41a8db:	mov    ecx,ecx
  41a8dd:	ret    0xc4c9
  41a8e0:	hlt    
  41a8e1:	mov    WORD PTR [esi+0x46da9a14],es
  41a8e7:	mov    ah,0x82
  41a8e9:	mov    DWORD PTR [ebx-0x3100470a],ecx
  41a8ef:	mov    dl,0x14
  41a8f1:	or     al,0x43
  41a8f3:	pop    ds
  41a8f4:	or     BYTE PTR [edi],bl
  41a8f6:	pop    esi
  41a8f7:	cmc    
  41a8f8:	repnz in al,0x37
  41a8fb:	xlat   BYTE PTR ds:[ebx]
  41a8fc:	lods   eax,DWORD PTR ds:[esi]
  41a8fd:	mov    bh,0x81
  41a8ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a900:	adc    al,0x80
  41a902:	sbb    eax,0xe6ffdaaf
  41a907:	push   ss
  41a908:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a909:	adc    BYTE PTR [esi-0x287d2685],0x11
  41a910:	xor    ebx,DWORD PTR [eax]
  41a912:	retf   
  41a913:	stc    
  41a914:	adc    BYTE PTR [edi],dh
  41a916:	rol    DWORD PTR [edx+0x5f],cl
  41a919:	sub    eax,DWORD PTR [edi-0xf]
  41a91c:	xchg   BYTE PTR fs:[ebp+0xddf059c],dh
  41a923:	test   DWORD PTR [ecx-0x2f],edi
  41a926:	(bad)  
  41a927:	ficomp WORD PTR [edi+0x2c]
  41a92a:	adc    eax,0x447618b6
  41a92f:	aam    0x70
  41a931:	mov    al,0x66
  41a933:	stos   DWORD PTR es:[edi],eax
  41a934:	mov    bl,BYTE PTR [eax]
  41a936:	adc    DWORD PTR [esi+eax*8+0x2d],0xffffffb9
  41a93b:	ret    
  41a93c:	test   al,cl
  41a93e:	leave  
  41a93f:	(bad)  
  41a940:	and    eax,0x8cfcec31
  41a945:	and    DWORD PTR [edx-0x59],edx
  41a948:	fdiv   st,st(1)
  41a94a:	loope  0x41a95b
  41a94c:	ficom  WORD PTR [ebp+0x4e]
  41a94f:	dec    esp
  41a950:	jp     0x41a938
  41a952:	fimul  WORD PTR [edi+0x4c2ce45e]
  41a958:	cs enter 0xf8ae,0xe
  41a95d:	lock mov cl,0x8f
  41a960:	das    
  41a961:	call   0x7d96ac4d
  41a966:	imul   ebp,ebp,0x73a2d837
  41a96c:	cmovle esp,DWORD PTR [edx]
  41a96f:	mov    BYTE PTR [esi],cl
  41a971:	dec    ecx
  41a972:	(bad)  
  41a975:	adc    eax,0x9ada9ed1
  41a97a:	xor    al,0x14
  41a97c:	stos   BYTE PTR es:[edi],al
  41a97d:	and    al,cl
  41a97f:	pop    ss
  41a980:	inc    edx
  41a981:	pushf  
  41a982:	call   0xeee0fcae
  41a987:	scas   al,BYTE PTR es:[edi]
  41a988:	icebp  
  41a989:	sub    eax,0x19e15b73
  41a98e:	pop    eax
  41a98f:	(bad)  
  41a990:	jge    0x41aa0b
  41a992:	pop    ss
  41a993:	sub    eax,0xadf7a160
  41a998:	in     al,dx
  41a999:	jecxz  0x41a9dd
  41a99b:	inc    ecx
  41a99c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a99d:	fisubr DWORD PTR [ecx-0x6f304acb]
  41a9a3:	jbe    0x41aa01
  41a9a5:	retf   0x4b0c
  41a9a8:	and    ebp,edi
  41a9aa:	repnz or DWORD PTR [ebp+0x6925b33d],ebx
  41a9b1:	xchg   ebp,eax
  41a9b2:	sub    bl,BYTE PTR [ebp-0x31]
  41a9b5:	jbe    0x41a947
  41a9b7:	dec    esp
  41a9b8:	out    dx,al
  41a9b9:	repz in al,0xb1
  41a9bc:	aaa    
  41a9bd:	dec    edx
  41a9be:	pop    ss
  41a9bf:	std    
  41a9c0:	adc    eax,0xee7110e0
  41a9c5:	jno    0x41aa01
  41a9c7:	out    dx,al
  41a9c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9c9:	mov    dl,0xce
  41a9cb:	aas    
  41a9cc:	inc    esp
  41a9cd:	imul   ebp,ecx,0xb5de03b2
  41a9d3:	jb     0x41a95c
  41a9d5:	test   al,0x40
  41a9d7:	retf   0x10a9
  41a9da:	inc    ebp
  41a9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9dc:	push   esi
  41a9dd:	icebp  
  41a9de:	push   ebx
  41a9df:	mov    al,ds:0xfdfae4cc
  41a9e4:	cmp    ch,BYTE PTR [eax+ecx*4]
  41a9e7:	or     BYTE PTR [ebx-0x3c],0x97
  41a9eb:	clc    
  41a9ec:	call   0xf21b:0xfb6f5fad
  41a9f3:	mov    eax,0x1f91c063
  41a9f8:	add    eax,0x54e5911a
  41a9fd:	int3   
  41a9fe:	rcl    BYTE PTR [ecx],0x56
  41aa01:	mov    cl,0x1
  41aa03:	xchg   BYTE PTR [ecx+0x73],al
  41aa06:	mov    bh,0x57
  41aa08:	leave  
  41aa09:	inc    edx
  41aa0a:	ins    BYTE PTR es:[edi],dx
  41aa0b:	inc    ebp
  41aa0c:	mul    BYTE PTR [ecx]
  41aa0e:	push   edx
  41aa0f:	push   cs
  41aa10:	nop
  41aa11:	mov    es,WORD PTR [edi]
  41aa13:	mov    ah,0x4a
  41aa15:	push   esp
  41aa16:	stc    
  41aa17:	out    0x88,eax
  41aa19:	cli    
  41aa1a:	mov    edi,0x7bb197ad
  41aa1f:	and    eax,0x953579b4
  41aa24:	not    DWORD PTR [ebx-0x62b0a9f5]
  41aa2a:	leave  
  41aa2b:	and    al,ch
  41aa2d:	and    eax,0xbc6f45ef
  41aa32:	outs   dx,BYTE PTR ds:[esi]
  41aa33:	xor    DWORD PTR [ecx-0x7d],esi
  41aa36:	stc    
  41aa37:	lds    edx,FWORD PTR [edx-0x7786fc1c]
  41aa3d:	hlt    
  41aa3e:	out    0xc0,al
  41aa40:	rcl    BYTE PTR [ebp-0xe7b64cc],0xe8
  41aa47:	popa   
  41aa48:	pop    ebp
  41aa49:	and    DWORD PTR [edi],ebp
  41aa4b:	in     al,dx
  41aa4c:	dec    eax
  41aa4d:	scas   al,BYTE PTR es:[edi]
  41aa4e:	test   eax,0x6785d551
  41aa53:	push   0x2b
  41aa55:	xor    al,0xe0
  41aa57:	stos   BYTE PTR es:[edi],al
  41aa58:	std    
  41aa59:	pop    esi
  41aa5a:	aam    0xf7
  41aa5c:	shr    BYTE PTR [esi],cl
  41aa5e:	repz das 
  41aa60:	jle    0x41aa3d
  41aa62:	or     al,0xa5
  41aa64:	sbb    eax,0x3fe449ef
  41aa69:	mov    bh,0x81
  41aa6b:	in     al,0xb7
  41aa6d:	sbb    eax,0xcbfbffd8
  41aa72:	call   0x23454a43
  41aa77:	jae    0x41aa52
  41aa79:	cli    
  41aa7a:	scas   al,BYTE PTR es:[edi]
  41aa7b:	push   ebp
  41aa7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aa7d:	bswap  ebx
  41aa7f:	ins    BYTE PTR es:[edi],dx
  41aa80:	push   ebx
  41aa81:	outs   dx,DWORD PTR ds:[esi]
  41aa82:	scas   eax,DWORD PTR es:[edi]
  41aa83:	fsub   DWORD PTR [edi-0x4b87f2ea]
  41aa89:	and    DWORD PTR [ebp+0x2f],ebp
  41aa8c:	lahf   
  41aa8d:	jno    0x41aae9
  41aa8f:	mov    eax,0x4fea3a99
  41aa94:	scas   al,BYTE PTR es:[edi]
  41aa95:	mov    bh,0x62
  41aa97:	ret    
  41aa98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa99:	sar    DWORD PTR [esi+0x5266434c],0x4a
  41aaa0:	and    eax,0x997abf5e
  41aaa5:	in     eax,0xf
  41aaa7:	jbe    0x41aaad
  41aaa9:	inc    ecx
  41aaaa:	push   edi
  41aaab:	imul   esi,esp,0xd233be76
  41aab1:	js     0x41aa9d
  41aab3:	inc    ebp
  41aab4:	fsub   st,st(5)
  41aab6:	repz arpl WORD PTR [esi-0x6b8f5b81],bx
  41aabd:	pop    esp
  41aabe:	or     al,0xee
  41aac0:	jns    0x41aad5
  41aac2:	push   ds
  41aac3:	mov    ebp,0xe1733db
  41aac8:	pop    edx
  41aac9:	push   eax
  41aaca:	daa    
  41aacb:	cdq    
  41aacc:	sub    DWORD PTR [edi-0x3f],eax
  41aacf:	xchg   ebp,eax
  41aad0:	jmp    0xe4b99bcc
  41aad5:	enter  0x1e9d,0x9a
  41aad9:	xor    ebp,esi
  41aadb:	xchg   ebp,eax
  41aadc:	pushf  
  41aadd:	jl     0x41aafa
  41aadf:	jno    0x41aa63
  41aae1:	xchg   ecx,eax
  41aae2:	xchg   ecx,eax
  41aae3:	sub    ah,cl
  41aae5:	xchg   ecx,eax
  41aae6:	iret   
  41aae7:	cmp    eax,DWORD PTR [ecx+0x40]
  41aaea:	sub    al,0x77
  41aaec:	mov    eax,0x2e58ef84
  41aaf1:	in     al,dx
  41aaf2:	loopne 0x41aa8e
  41aaf4:	int    0x5e
  41aaf6:	jne    0x41ab5d
  41aaf8:	cdq    
  41aaf9:	iret   
  41aafa:	inc    ecx
  41aafb:	cdq    
  41aafc:	push   cs
  41aafd:	cdq    
  41aafe:	xchg   ebp,eax
  41aaff:	or     eax,0xc28abad
  41ab04:	add    BYTE PTR [eax+ebp*4],0x77
  41ab08:	sbb    ah,BYTE PTR [edi-0x4f40ba74]
  41ab0e:	call   0xa3beeb5f
  41ab13:	push   ebp
  41ab14:	pop    ss
  41ab15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab16:	dec    ebp
  41ab17:	cli    
  41ab18:	mov    cl,0x11
  41ab1a:	inc    esi
  41ab1b:	add    eax,0x177df092
  41ab20:	cmp    al,0xa0
  41ab23:	out    dx,al
  41ab24:	(bad)  
  41ab25:	xchg   esi,eax
  41ab26:	add    eax,0x96180973
  41ab2b:	adc    cl,bl
  41ab2d:	pop    es
  41ab2e:	fsub   DWORD PTR [edi]
  41ab30:	stos   BYTE PTR es:[edi],al
  41ab31:	xor    esp,DWORD PTR [edx-0xa6b213e]
  41ab37:	add    BYTE PTR [edi+0x25a523fb],0xa8
  41ab3e:	ja     0x41ab04
  41ab40:	ds hlt 
  41ab42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab43:	adc    ecx,edi
  41ab45:	pop    edi
  41ab46:	popa   
  41ab47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab48:	xor    BYTE PTR [ebp-0x470440e3],dl
  41ab4e:	pop    eax
  41ab4f:	jae    0x41ab2e
  41ab51:	fcomp  QWORD PTR [eax-0x16]
  41ab54:	adc    DWORD PTR [ebx+0x3e2da463],ebx
  41ab5a:	or     eax,0x4c2b45e5
  41ab5f:	retf   
  41ab60:	cs cwde 
  41ab62:	mov    dl,ch
  41ab64:	dec    ecx
  41ab65:	cld    
  41ab66:	cmp    DWORD PTR [ebx+0x24],eax
  41ab69:	mov    cl,0x10
  41ab6b:	sub    dh,BYTE PTR [edx+0x7c]
  41ab6e:	fsubrp st(2),st
  41ab70:	push   cs
  41ab71:	in     eax,0x13
  41ab73:	jno    0x41ab09
  41ab75:	and    BYTE PTR [ebp-0xc],al
  41ab78:	(bad)  
  41ab79:	adc    DWORD PTR [eax+0x4c],edi
  41ab7c:	fidivr WORD PTR gs:[esi+ebp*1]
  41ab80:	cmp    ebp,DWORD PTR [ebp-0x68]
  41ab83:	sub    bh,BYTE PTR [ebx-0x43]
  41ab86:	sbb    ebp,ebp
  41ab88:	test   cl,bh
  41ab8a:	mov    dl,BYTE PTR [ecx]
  41ab8c:	aaa    
  41ab8d:	xor    BYTE PTR [eax-0x65],dh
  41ab90:	jg     0x41ab7f
  41ab92:	dec    ecx
  41ab93:	popa   
  41ab94:	test   al,0x59
  41ab96:	adc    edi,DWORD PTR [eax]
  41ab98:	jae    0x41abdb
  41ab9a:	mov    al,ds:0x345bdfad
  41ab9f:	clc    
  41aba0:	repnz and eax,0xd00afe11
  41aba6:	not    BYTE PTR [esi-0x2a7055ab]
  41abac:	pop    esp
  41abad:	push   ds
  41abae:	xchg   ebp,eax
  41abaf:	ds loop 0x41ac1c
  41abb2:	add    edi,ebp
  41abb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abb5:	sbb    eax,0x9ea29060
  41abba:	cld    
  41abbb:	dec    esp
  41abbc:	jbe    0x41ab8e
  41abbe:	pop    ss
  41abbf:	out    0x1,eax
  41abc1:	pop    esp
  41abc2:	lea    edi,[eax-0x16]
  41abc5:	xor    al,0xc3
  41abc7:	inc    ecx
  41abc8:	and    BYTE PTR [ebp-0x488183dc],0xb9
  41abcf:	test   DWORD PTR [esi+0x298d84a9],esp
  41abd5:	retf   
  41abd6:	cwde   
  41abd7:	pop    ebx
  41abd8:	aas    
  41abd9:	xchg   ecx,eax
  41abda:	cwde   
  41abdb:	xor    BYTE PTR [esi],ah
  41abdd:	push   edi
  41abde:	adc    ebx,DWORD PTR [esi]
  41abe0:	imul   ecx,ebp,0x74718f41
  41abe6:	xchg   edi,eax
  41abe7:	outs   dx,BYTE PTR ds:[si]
  41abe9:	cmovne ebx,DWORD PTR [ebx+0x34e7c59d]
  41abf0:	push   edx
  41abf1:	out    0x62,eax
  41abf3:	cs imul edi
  41abf6:	imul   eax,DWORD PTR [ebp*2+0x484b4d9d],0x5f49b2f
  41ac01:	std    
  41ac02:	or     ebp,DWORD PTR [ebp-0x938fbad]
  41ac08:	adc    DWORD PTR [ebx-0x29],esp
  41ac0b:	sub    bh,dh
  41ac0d:	aas    
  41ac0e:	mov    ds:0x3372628e,eax
  41ac13:	mov    edi,DWORD PTR [edi]
  41ac15:	rcr    BYTE PTR [eax-0x20],cl
  41ac18:	out    dx,al
  41ac19:	pop    esi
  41ac1a:	or     eax,0xacb5ccfd
  41ac1f:	mov    bh,dh
  41ac21:	pop    ss
  41ac22:	enter  0xca9,0x7e
  41ac26:	sub    eax,0x3c22beb7
  41ac2c:	xchg   esp,eax
  41ac2d:	sbb    eax,0x5560824d
  41ac32:	or     al,0xb
  41ac34:	mov    ebx,0x34902c70
  41ac39:	(bad)  
  41ac3a:	aaa    
  41ac3b:	mov    ah,BYTE PTR ds:0x86514649
  41ac41:	xchg   esp,eax
  41ac42:	shr    DWORD PTR [edi-0x5c213d45],cl
  41ac48:	mov    ch,0x2
  41ac4a:	xor    bl,BYTE PTR [eax]
  41ac4c:	xlat   BYTE PTR ds:[ebx]
  41ac4d:	dec    eax
  41ac4e:	fsub   DWORD PTR [edi-0x606b2470]
  41ac54:	mov    edx,0x8c9b41b2
  41ac59:	sahf   
  41ac5a:	ret    
  41ac5b:	scas   eax,DWORD PTR es:[edi]
  41ac5c:	jmp    0x41acab
  41ac5e:	inc    edi
  41ac5f:	jbe    0x41ac63
  41ac61:	int3   
  41ac62:	scas   al,BYTE PTR es:[edi]
  41ac63:	inc    esp
  41ac64:	xchg   DWORD PTR [eax],edx
  41ac66:	fdiv   DWORD PTR [edx+0x7eeab546]
  41ac6c:	repnz fwait
  41ac6e:	xchg   bh,cl
  41ac70:	push   0x42
  41ac72:	and    BYTE PTR [ebp+0x7239988],dl
  41ac78:	add    eax,0xc8d376c1
  41ac7d:	dec    ecx
  41ac7e:	mov    WORD PTR [eax],?
  41ac80:	xor    BYTE PTR [esi-0x304a2680],0xd8
  41ac87:	pop    ss
  41ac88:	pop    edx
  41ac89:	aas    
  41ac8a:	data16 jbe 0x41ac57
  41ac8d:	ins    BYTE PTR es:[edi],dx
  41ac8e:	mov    ebp,DWORD PTR [ebp+0x50]
  41ac91:	popa   
  41ac92:	(bad)  
  41ac94:	and    BYTE PTR [edx+ebx*8-0x51],al
  41ac98:	inc    edx
  41ac99:	call   0xd75f:0xe0fb0bd7
  41aca0:	popa   
  41aca1:	repnz xor BYTE PTR ds:0x1aea6f,al
  41aca8:	(bad)  
  41aca9:	call   0x2a67:0xa7e0b4c0
  41acb0:	idiv   DWORD PTR [ecx+0xeca5b56]
  41acb6:	imul   esp,DWORD PTR [edx+0x6b],0xffffffd1
  41acba:	sub    BYTE PTR [ecx-0x7e],bl
  41acbd:	fdiv   QWORD PTR [edi+0x26]
  41acc0:	inc    ebp
  41acc1:	pop    edi
  41acc2:	sub    ebx,edi
  41acc4:	(bad)  
  41acc6:	lahf   
  41acc7:	in     al,dx
  41acc8:	popa   
  41acc9:	cmp    al,0xd0
  41accb:	fnsave [ebp+0x4f1ab311]
  41acd1:	push   ebp
  41acd2:	xchg   edi,eax
  41acd3:	sbb    al,BYTE PTR [edx]
  41acd5:	popf   
  41acd6:	addr16 sahf 
  41acd8:	std    
  41acd9:	js     0x41acfe
  41acdb:	(bad)  
  41acdd:	or     DWORD PTR [edx+0x3a],esp
  41ace0:	and    eax,DWORD PTR [ebp-0x50]
  41ace3:	inc    ebp
  41ace4:	sbb    dh,ah
  41ace6:	xchg   edi,eax
  41ace7:	sbb    al,0xec
  41ace9:	je     0x41ad63
  41aceb:	(bad)  ds:0x427f1d15
  41acf1:	js     0x41ad20
  41acf3:	adc    dl,BYTE PTR [edx+0x2b1364ab]
  41acf9:	mov    esi,?
  41acfb:	jbe    0x41ad14
  41acfd:	sahf   
  41acfe:	push   ecx
  41acff:	test   BYTE PTR [eax-0x14d10dd2],dh
  41ad05:	daa    
  41ad06:	scas   al,BYTE PTR es:[edi]
  41ad07:	ins    BYTE PTR es:[edi],dx
  41ad08:	jge    0x41ad0f
  41ad0a:	test   eax,0xcac8f98c
  41ad10:	(bad)  
  41ad11:	mov    cl,0x55
  41ad13:	ss dec ebp
  41ad15:	pop    esi
  41ad16:	and    eax,ebp
  41ad18:	adc    al,0x80
  41ad1a:	out    dx,al
  41ad1b:	mov    eax,DWORD PTR [ebp*8-0x31815c1d]
  41ad22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad23:	xchg   ebx,eax
  41ad24:	(bad)  [ebp+0x3c]
  41ad27:	cli    
  41ad28:	sahf   
  41ad29:	les    edi,FWORD PTR [eax]
  41ad2b:	jnp    0x41ad7d
  41ad2d:	jge    0x41ad23
  41ad2f:	mov    esp,0xf31b1e72
  41ad34:	pushf  
  41ad35:	aas    
  41ad36:	xchg   ebx,ecx
  41ad38:	retf   
  41ad39:	cs jg  0x41acec
  41ad3c:	out    0x1f,eax
  41ad3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ad3f:	pop    esi
  41ad40:	leave  
  41ad41:	xor    ah,BYTE PTR [edi]
  41ad43:	jle    0x41ad2c
  41ad45:	mov    dh,BYTE PTR [edi]
  41ad47:	xor    BYTE PTR [edx],bh
  41ad49:	adc    ebx,DWORD PTR [edx+0x551a42b5]
  41ad4f:	addr16 (bad) 
  41ad51:	in     al,dx
  41ad52:	push   esp
  41ad53:	mov    al,0x1f
  41ad55:	jne    0x41acef
  41ad57:	pusha  
  41ad58:	mov    edx,0x7cb061f7
  41ad5d:	inc    esi
  41ad5e:	and    al,al
  41ad60:	or     edi,ebx
  41ad62:	xchg   ecx,eax
  41ad63:	sbb    BYTE PTR [ebx-0x578ac067],ah
  41ad69:	je     0x41ad32
  41ad6b:	xchg   ebp,eax
  41ad6c:	cmc    
  41ad6d:	jg     0x41ad79
  41ad6f:	stos   BYTE PTR es:[edi],al
  41ad70:	sti    
  41ad71:	fidivr DWORD PTR [eax+0x15bdf549]
  41ad77:	pop    es
  41ad78:	sub    eax,0xf193536
  41ad7d:	pop    ebx
  41ad7e:	jb     0x41ad8b
  41ad80:	xchg   ebp,eax
  41ad81:	inc    esp
  41ad82:	test   al,0xb8
  41ad84:	push   ds
  41ad85:	fwait
  41ad86:	aad    0x76
  41ad88:	push   ebp
  41ad89:	xlat   BYTE PTR ds:[ebx]
  41ad8a:	pop    esi
  41ad8b:	test   BYTE PTR [eax+0x5e],al
  41ad8e:	mov    ds:0xdc388316,eax
  41ad93:	retf   0x9b01
  41ad96:	neg    dh
  41ad98:	push   ebp
  41ad9a:	and    ah,BYTE PTR [eax-0x50]
  41ad9d:	jb     0x41adbc
  41ad9f:	(bad)  
  41ada0:	cmp    al,bl
  41ada2:	xor    BYTE PTR [esi-0x25c59ca2],ah
  41ada8:	(bad)  
  41ada9:	in     al,0x4c
  41adab:	outs   dx,DWORD PTR ds:[esi]
  41adac:	mov    eax,0xf7d9ffe2
  41adb1:	rol    ah,cl
  41adb3:	adc    BYTE PTR [ecx+0x48],al
  41adb6:	and    ch,BYTE PTR [ebx+0x5cbf0eb2]
  41adbc:	es ja  0x41ae1d
  41adbf:	jns    0x41adc7
  41adc1:	or     ecx,DWORD PTR [edx+0x45]
  41adc4:	jae    0x41ae3b
  41adc6:	sub    DWORD PTR [edi+0x31],ebp
  41adc9:	lods   eax,DWORD PTR ds:[esi]
  41adca:	mov    esi,0xd2e1be43
  41adcf:	inc    esi
  41add0:	sub    al,0xa3
  41add2:	pusha  
  41add3:	out    dx,al
  41add4:	and    eax,0x1ec2d8d4
  41add9:	mov    bl,0x3c
  41addb:	add    eax,DWORD PTR [edx+ebp*8-0x8]
  41addf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ade0:	push   ecx
  41ade1:	cmp    bl,dl
  41ade3:	xchg   DWORD PTR [ecx+0x1d36e303],edi
  41ade9:	popf   
  41adea:	cwde   
  41adeb:	neg    al
  41aded:	test   DWORD PTR [ecx+0x51990846],eax
  41adf3:	test   DWORD PTR [ecx],eax
  41adf5:	xchg   ecx,eax
  41adf6:	mov    esi,0x4e4e9207
  41adfb:	or     ebp,DWORD PTR [esi+0x5538d442]
  41ae01:	data16 fld QWORD PTR [eax+edx*4+0x7f]
  41ae06:	dec    edi
  41ae07:	aaa    
  41ae08:	mov    al,0xfa
  41ae0a:	lock and al,bh
  41ae0d:	data16 fstp TBYTE PTR es:[ebp+0x295882ee]
  41ae15:	icebp  
  41ae16:	pusha  
  41ae17:	in     al,0x9
  41ae19:	sub    DWORD PTR [eax],ecx
  41ae1b:	retw   
  41ae1d:	xchg   ecx,eax
  41ae1e:	xor    DWORD PTR [edi],eax
  41ae20:	xlat   BYTE PTR ds:[ebx]
  41ae21:	or     BYTE PTR [edi],bh
  41ae23:	adc    al,0x89
  41ae25:	dec    edi
  41ae26:	loop   0x41ae9e
  41ae28:	test   dl,0x86
  41ae2b:	leave  
  41ae2c:	sahf   
  41ae2d:	xchg   esi,eax
  41ae2e:	lahf   
  41ae2f:	adc    BYTE PTR [eax],bh
  41ae31:	call   0xca7f:0x733e1e70
  41ae38:	or     BYTE PTR [edi],ch
  41ae3a:	add    edi,edx
  41ae3c:	sub    BYTE PTR [eax-0x521dd154],dh
  41ae42:	dec    ebp
  41ae43:	push   cs
  41ae44:	sbb    esi,ebp
  41ae46:	sub    eax,0xcf80cc23
  41ae4b:	fisttp WORD PTR [edi+0x6d94a0af]
  41ae51:	stos   DWORD PTR es:[edi],eax
  41ae52:	scas   eax,DWORD PTR es:[edi]
  41ae53:	or     BYTE PTR [eax],al
  41ae55:	and    al,0x95
  41ae57:	(bad)  
  41ae58:	jmp    0x440:0x400eeec7
  41ae5f:	out    dx,eax
  41ae60:	sahf   
  41ae61:	in     al,0xd8
  41ae63:	xchg   edx,eax
  41ae64:	mov    ds:0xa6449c41,eax
  41ae69:	cmp    ch,0x39
  41ae6c:	pop    esp
  41ae6d:	push   ebp
  41ae6e:	test   al,0x58
  41ae70:	mov    ecx,ss
  41ae72:	and    BYTE PTR [edi+0x580663bf],bh
  41ae78:	retf   
  41ae79:	clc    
  41ae7a:	cmc    
  41ae7b:	add    DWORD PTR [edi],ebp
  41ae7d:	shl    BYTE PTR [ecx],0x2d
  41ae80:	pop    ebx
  41ae81:	frstor [edi-0x7877aff8]
  41ae87:	js     0x41ae49
  41ae89:	arpl   WORD PTR [ecx],bp
  41ae8b:	sbb    ecx,esi
  41ae8d:	call   FWORD PTR [ecx+0x2f]
  41ae90:	stc    
  41ae91:	gs add al,0x81
  41ae94:	das    
  41ae95:	fistp  DWORD PTR [eax+0xd]
  41ae98:	push   edx
  41ae99:	adc    DWORD PTR [ecx+0x34989c3e],0x3e
  41aea0:	sub    al,0x2b
  41aea2:	sar    eax,1
  41aea4:	loopne 0x41aee6
  41aea6:	imul   eax,DWORD PTR [edx+0x73be7771],0x6b
  41aead:	data16 outs dx,BYTE PTR ds:[esi]
  41aeaf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aeb0:	loop   0x41af2b
  41aeb2:	jg     0x41aeba
  41aeb4:	push   ecx
  41aeb5:	xor    eax,0xb34492fc
  41aeba:	sbb    BYTE PTR [edi-0x7a234800],ah
  41aec0:	push   DWORD PTR [esi]
  41aec2:	and    DWORD PTR [eax],ebx
  41aec4:	dec    esp
  41aec5:	mov    ah,0x6d
  41aec7:	mov    edi,DWORD PTR [ebx-0x7b]
  41aeca:	arpl   WORD PTR [eax+0x845324],di
  41aed0:	push   edi
  41aed1:	jmp    0x3e0823f
  41aed6:	ret    
  41aed7:	aad    0xd7
  41aed9:	sub    al,0x1e
  41aedb:	pop    edx
  41aedc:	popa   
  41aedd:	(bad)  
  41aede:	push   DWORD PTR [ebx+0x48]
  41aee1:	imul   ebx,edi,0xb375c307
  41aee7:	add    al,BYTE PTR [edi+eiz*4+0x3abb4bb]
  41aeee:	jp     0x41af58
  41aef0:	push   cs
  41aef1:	sub    eax,DWORD PTR [edi+0x53a80184]
  41aef7:	enter  0x17c4,0xd1
  41aefb:	or     al,0x43
  41aefd:	in     eax,dx
  41aefe:	jae    0x41af53
  41af00:	jae    0x41af57
  41af02:	pop    esi
  41af03:	xchg   BYTE PTR [edx+0x77],dl
  41af06:	push   esp
  41af07:	arpl   WORD PTR [edi-0xe497fdc],dx
  41af0d:	push   ds
  41af0e:	sbb    eax,0xb262b038
  41af13:	inc    ecx
  41af14:	xor    DWORD PTR [ecx+0x51f21b4c],ebp
  41af1a:	adc    bl,ah
  41af1c:	mov    eax,0xf18e583c
  41af21:	ds (bad) 
  41af23:	mul    edi
  41af25:	jbe    0x41aed7
  41af27:	dec    esi
  41af28:	mov    eax,0x77550a45
  41af2d:	call   0x6304adf7
  41af32:	inc    edi
  41af33:	sbb    cl,bl
  41af35:	call   0x159c0de8
  41af3a:	aad    0xab
  41af3c:	sub    ecx,DWORD PTR es:[ebx]
  41af3f:	pushf  
  41af40:	cli    
  41af41:	in     al,dx
  41af42:	inc    ebp
  41af43:	adc    bh,al
  41af45:	jo     0x41afbd
  41af47:	add    al,0x4c
  41af49:	ret    0xbf4e
  41af4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af4d:	call   0xf6d:0x55cac114
  41af54:	les    edx,FWORD PTR [esi]
  41af56:	int    0x8b
  41af58:	fnstcw WORD PTR [edx-0x7]
  41af5b:	mov    eax,ebp
  41af5d:	repz aad 0xcd
  41af60:	push   0x742c865c
  41af65:	cld    
  41af66:	xchg   esi,eax
  41af67:	mov    ecx,0x2c3b69bb
  41af6c:	jae    0x41afcc
  41af6e:	pop    es
  41af6f:	(bad)  
  41af70:	add    dl,BYTE PTR [edx+0x74]
  41af73:	pop    ebp
  41af74:	daa    
  41af75:	jle    0x41afb5
  41af77:	rol    DWORD PTR [ebx-0x5b],cl
  41af7a:	adc    eax,0xf11a7f0a
  41af7f:	ja     0x41af4d
  41af81:	jnp    0x41af4a
  41af83:	neg    BYTE PTR [esi+0x7f27da48]
  41af89:	je     0x41af93
  41af8b:	dec    eax
  41af8c:	outs   dx,BYTE PTR ds:[esi]
  41af8d:	popf   
  41af8e:	pusha  
  41af8f:	pop    esi
  41af90:	jmp    0x762c:0x19f6492a
  41af97:	sbb    BYTE PTR [edi+0x7715e91e],bh
  41af9d:	mov    DWORD PTR [ebx-0x6aaa94c5],eax
  41afa3:	and    ebx,DWORD PTR [ebp-0x42]
  41afa6:	sbb    al,0x30
  41afa8:	mov    esp,ds
  41afaa:	dec    ecx
  41afab:	pop    ecx
  41afac:	mov    ds:0xffb2131f,al
  41afb1:	add    esp,DWORD PTR [edi-0xa]
  41afb4:	sbb    BYTE PTR [esi-0x5446a57f],0x91
  41afbb:	(bad)  
  41afbd:	test   al,0x86
  41afbf:	dec    edi
  41afc0:	je     0x41af6f
  41afc2:	in     al,dx
  41afc3:	sub    ch,BYTE PTR [ebp+eiz*4+0xca8cd30]
  41afca:	aas    
  41afcb:	jecxz  0x41afc4
  41afcd:	cld    
  41afce:	sbb    al,0xdc
  41afd0:	jecxz  0x41afa4
  41afd2:	retf   
  41afd3:	test   al,0xf9
  41afd5:	add    al,0x59
  41afd7:	cwde   
  41afd8:	push   edi
  41afd9:	ss stos DWORD PTR es:[edi],eax
  41afdb:	inc    ecx
  41afdc:	fmul   DWORD PTR ds:0xdd511698
  41afe2:	es or  edx,eax
  41afe5:	xor    BYTE PTR [eax+0x52b84c35],ch
  41afeb:	mov    ebp,DWORD PTR [esi-0x55]
  41afee:	xor    bh,BYTE PTR ds:0xa69e814d
  41aff4:	sbb    DWORD PTR [ebx+0x3f],edi
  41aff7:	fld    st(7)
  41aff9:	or     esi,edi
  41affb:	jbe    0x41af95
  41affd:	or     BYTE PTR [ecx-0x4c],ah
  41b000:	pop    esi
  41b001:	xor    eax,0xf0009836
  41b006:	sbb    BYTE PTR [eax-0x6db64c67],0xbe
  41b00d:	test   cl,al
  41b00f:	push   0xeb405917
  41b014:	mov    edx,DWORD PTR [ebx+ebp*8+0x4de8a29d]
  41b01b:	push   ebp
  41b01c:	les    eax,FWORD PTR [ebx]
  41b01e:	mov    al,0xdc
  41b020:	mov    al,0xd2
  41b022:	jmp    0x8ab63c11
  41b027:	popa   
  41b028:	push   ecx
  41b029:	in     al,dx
  41b02a:	mov    esp,0x3c9cedc8
  41b02f:	repnz add dl,cl
  41b032:	outs   dx,BYTE PTR ds:[esi]
  41b033:	(bad)  
  41b034:	push   0x26
  41b036:	cmp    bh,BYTE PTR [edi]
  41b038:	aam    0xb1
  41b03a:	arpl   WORD PTR [ebx-0x46],bp
  41b03d:	adc    ah,dl
  41b03f:	jmp    0x41b09b
  41b041:	or     al,0xaf
  41b043:	(bad)  
  41b044:	ins    BYTE PTR es:[edi],dx
  41b045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b046:	mov    WORD PTR [ebp+0x71],ds
  41b049:	xor    al,0x34
  41b04b:	ret    
  41b04c:	arpl   di,sp
  41b04e:	sub    ch,BYTE PTR [edx]
  41b050:	push   edi
  41b051:	dec    ebx
  41b052:	adc    cl,BYTE PTR [eax+0x5e]
  41b055:	pop    esi
  41b056:	push   ebx
  41b057:	mov    dl,0xc9
  41b059:	or     BYTE PTR [ecx+0xb],bl
  41b05c:	sbb    eax,0xd505cf8a
  41b061:	jmp    0xa7507d0c
  41b066:	fwait
  41b067:	jmp    0xc70a6bdf
  41b06c:	cmp    bh,bl
  41b06e:	repnz lea ebp,[eax+0x6f8928bd]
  41b075:	je     0x41b00d
  41b077:	pop    ebx
  41b078:	jb     0x41b071
  41b07a:	jp     0x41b0db
  41b07c:	mov    ebp,0x6f2c302b
  41b081:	cmp    al,0xb0
  41b083:	cmc    
  41b084:	pop    eax
  41b085:	xchg   DWORD PTR [ebx-0x20cd942f],ecx
  41b08b:	shl    ah,cl
  41b08d:	shl    bh,cl
  41b08f:	pop    ecx
  41b090:	dec    edi
  41b091:	pusha  
  41b092:	cmc    
  41b093:	dec    edi
  41b094:	loopne 0x41b0b2
  41b096:	enter  0x71cb,0xf8
  41b09a:	pop    edx
  41b09b:	mov    dl,0xdd
  41b09d:	or     al,ch
  41b09f:	fstp   QWORD PTR ds:0x1145513
  41b0a5:	dec    esi
  41b0a6:	test   eax,0x1d9db969
  41b0ab:	pushf  
  41b0ac:	xchg   ecx,eax
  41b0ad:	(bad)  
  41b0ae:	jl     0x41b0a3
  41b0b0:	dec    edi
  41b0b1:	sbb    esi,edi
  41b0b3:	xchg   edx,eax
  41b0b4:	retf   
  41b0b5:	sti    
  41b0b6:	loopne 0x41b0d8
  41b0b8:	ja     0x41b123
  41b0ba:	aas    
  41b0bb:	test   eax,0x7db029e7
  41b0c0:	push   ss
  41b0c1:	sub    eax,0x68bb70ac
  41b0c6:	or     bh,ch
  41b0c8:	leave  
  41b0c9:	and    DWORD PTR [edi],ebp
  41b0cb:	(bad)  
  41b0cc:	mov    ebx,DWORD PTR [edi-0x4d]
  41b0cf:	mov    cl,0x39
  41b0d1:	push   0xb2b4528a
  41b0d6:	mov    BYTE PTR fs:[eax-0x19],dh
  41b0da:	cmc    
  41b0db:	aam    0x40
  41b0dd:	mov    ebp,0xfd1b212f
  41b0e2:	add    BYTE PTR [eax+0x3e],ah
  41b0e5:	cwde   
  41b0e6:	and    ecx,DWORD PTR [esp]
  41b0e9:	fdivr  QWORD PTR [eax+0x1fd2fea4]
  41b0ef:	mov    edx,0x7c1c1b45
  41b0f4:	xchg   esi,eax
  41b0f5:	sub    eax,0x70a30b1d
  41b0fa:	jle    0x41b0f2
  41b0fc:	sbb    esp,esp
  41b0fe:	sar    DWORD PTR [ecx+0x49],0xb6
  41b102:	push   es
  41b103:	and    BYTE PTR [edi-0x2c199f14],al
  41b109:	and    al,0xf8
  41b10b:	arpl   WORD PTR [ecx],dx
  41b10d:	fcmovne st,st(0)
  41b10f:	(bad)  
  41b111:	gs lock addr16 aaa 
  41b115:	stos   DWORD PTR es:[edi],eax
  41b116:	adc    ch,0x61
  41b119:	sub    BYTE PTR [ecx],dh
  41b11b:	jmp    0x834cb92b
  41b120:	mov    esp,0xb6a86df1
  41b125:	test   eax,0xac195b16
  41b12a:	push   ss
  41b12b:	jmp    0xcae8:0xf47cb3eb
  41b132:	push   ebp
  41b133:	stc    
  41b134:	nop
  41b135:	(bad)  
  41b136:	loopne 0x41b153
  41b138:	mov    ecx,0x3375374e
  41b13d:	xlat   BYTE PTR ds:[ebx]
  41b13e:	cmp    BYTE PTR [edx+0x49d87dec],bl
  41b144:	popf   
  41b145:	jecxz  0x41b114
  41b147:	gs xchg edx,eax
  41b149:	stos   BYTE PTR es:[edi],al
  41b14a:	push   ebx
  41b14b:	push   cs
  41b14c:	sub    dh,BYTE PTR [esi]
  41b14e:	pop    esp
  41b14f:	dec    eax
  41b150:	pop    ebp
  41b151:	sbb    bh,bh
  41b153:	sahf   
  41b154:	xor    ecx,ecx
  41b156:	jne    0x41b155
  41b158:	pop    DWORD PTR [ecx+ebp*4+0x73277a51]
  41b15f:	aas    
  41b160:	cmp    eax,0xb82a1961
  41b165:	or     BYTE PTR [eax],0x6f
  41b168:	and    al,0x88
  41b16a:	hlt    
  41b16b:	jmp    0x3c0e5ec8
  41b170:	inc    ecx
  41b171:	adc    ah,al
  41b173:	xor    ebp,DWORD PTR gs:[edi]
  41b176:	psubusw mm7,QWORD PTR [edx+0x4e]
  41b17a:	(bad)  
  41b17b:	fcmovu st,st(2)
  41b17d:	icebp  
  41b17e:	jl     0x41b184
  41b180:	neg    al
  41b182:	ror    DWORD PTR [eax-0x64cf74c],0x9c
  41b189:	jle    0x41b208
  41b18b:	(bad)  
  41b18c:	or     al,0xbb
  41b18e:	add    eax,0x6fe031fe
  41b193:	pop    ebx
  41b194:	jmp    0x41b129
  41b196:	jo     0x41b205
  41b198:	add    ebp,DWORD PTR [esi+edx*8]
  41b19b:	retf   
  41b19c:	pop    esp
  41b19d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b19e:	lods   al,BYTE PTR ds:[esi]
  41b19f:	xchg   esi,eax
  41b1a0:	mov    bl,0xaf
  41b1a2:	sub    ecx,edi
  41b1a4:	sar    dh,1
  41b1a6:	mov    fs,edi
  41b1a8:	mov    edx,DWORD PTR [eax+0x7e71a25c]
  41b1ae:	adc    eax,DWORD PTR [edi]
  41b1b0:	mov    eax,0xe840a8a9
  41b1b5:	mov    esp,0x93d5f1c9
  41b1ba:	add    ecx,ebp
  41b1bc:	jb     0x41b1f8
  41b1be:	cmp    ebx,ebx
  41b1c0:	xor    eax,0xc8eb5cc0
  41b1c5:	xor    ecx,eax
  41b1c7:	jo     0x41b229
  41b1c9:	mov    BYTE PTR [ebp-0x6],cl
  41b1cc:	jle    0x41b1d6
  41b1ce:	mov    ebx,0x4b0c8c42
  41b1d3:	ss ss dec eax
  41b1d6:	inc    ebx
  41b1d7:	xchg   ecx,eax
  41b1d8:	inc    ebx
  41b1d9:	ins    BYTE PTR es:[edi],dx
  41b1da:	es jno 0x41b240
  41b1dd:	jmp    FWORD PTR [ecx+0x162bd824]
  41b1e3:	pusha  
  41b1e4:	lods   al,BYTE PTR ds:[esi]
  41b1e5:	or     BYTE PTR [ebx-0x56cd048c],ch
  41b1eb:	jp     0x41b178
  41b1ed:	dec    ebp
  41b1ee:	push   ebx
  41b1ef:	fdiv   st,st(4)
  41b1f1:	test   eax,0x7a50d6e0
  41b1f6:	and    bl,BYTE PTR [ebx-0x5822855a]
  41b1fc:	pushf  
  41b1fd:	arpl   WORD PTR [edx],dx
  41b1ff:	adc    DWORD PTR [ebx],ecx
  41b201:	jmp    0x41b229
  41b203:	xor    eax,0x3402366f
  41b208:	xor    eax,0xb5255037
  41b20d:	jbe    0x41b255
  41b20f:	repz and al,0xd0
  41b212:	(bad)  
  41b213:	xchg   ebx,eax
  41b214:	popa   
  41b215:	stos   BYTE PTR es:[edi],al
  41b216:	push   0xa69b7288
  41b21b:	inc    edi
  41b21c:	mov    ds:0x5901c53b,al
  41b221:	mov    esp,0xda95b748
  41b226:	and    BYTE PTR ds:0x515cfae0,ah
  41b22c:	fdivr  st,st(5)
  41b22e:	mov    edx,0x8e30eeb4
  41b233:	mov    edx,0xb8f89086
  41b238:	cmp    BYTE PTR [ecx],cl
  41b23a:	out    0x41,al
  41b23c:	into   
  41b23d:	sti    
  41b23e:	jp     0x41b282
  41b240:	popa   
  41b241:	sbb    DWORD PTR [ebx-0x7e],edx
  41b244:	rcpps  xmm6,XMMWORD PTR [eax+0x56d374da]
  41b24b:	lds    edx,FWORD PTR [esi]
  41b24d:	inc    esp
  41b24e:	clc    
  41b24f:	bound  ebp,QWORD PTR [edx]
  41b251:	inc    edx
  41b252:	sub    eax,DWORD PTR [edi]
  41b254:	sbb    eax,0xda1da768
  41b259:	mov    WORD PTR [eax+ebp*1+0x46383b79],gs
  41b260:	cmp    BYTE PTR [edx-0x42],al
  41b263:	in     eax,0xb7
  41b265:	jmp    0x41b2a2
  41b267:	pop    esp
  41b268:	test   DWORD PTR es:[ecx-0xf],eax
  41b26c:	addr16 xchg edi,eax
  41b26e:	jp     0x41b200
  41b270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b271:	or     edi,0x34646a5f
  41b277:	pop    es
  41b278:	(bad)  
  41b279:	and    dl,BYTE PTR [ecx+0x2a1bbd8e]
  41b27f:	test   al,0x50
  41b281:	or     eax,DWORD PTR [eax+esi*4+0x50]
  41b285:	repz pushf 
  41b287:	mov    esp,0x71b2f006
  41b28c:	lahf   
  41b28d:	clc    
  41b28e:	cdq    
  41b28f:	das    
  41b290:	jge    0x41b27d
  41b292:	stos   DWORD PTR es:[edi],eax
  41b293:	mov    ebx,fs
  41b295:	aad    0xb2
  41b297:	mov    BYTE PTR ds:0x887aacd2,al
  41b29d:	imul   al
  41b29f:	xchg   ebx,eax
  41b2a0:	outs   dx,DWORD PTR ds:[esi]
  41b2a1:	adc    BYTE PTR [edx-0xc5a290d],bl
  41b2a7:	add    BYTE PTR [edi-0x39],0x93
  41b2ab:	or     eax,0x2560f4c5
  41b2b0:	inc    edx
  41b2b1:	push   esp
  41b2b2:	mov    BYTE PTR [esi+0xd],cl
  41b2b5:	add    eax,DWORD PTR [ebx-0x7d8c24a0]
  41b2bb:	in     al,0x5f
  41b2bd:	pop    ecx
  41b2bf:	pop    ecx
  41b2c0:	sub    eax,0xb1096d29
  41b2c5:	cmp    bh,BYTE PTR [edi+0x302a8b79]
  41b2cb:	inc    ebp
  41b2cc:	xor    eax,0x2699e9ee
  41b2d1:	xchg   esi,eax
  41b2d2:	dec    eax
  41b2d3:	(bad)  
  41b2d4:	(bad)  
  41b2d6:	inc    ecx
  41b2d7:	and    esi,DWORD PTR [ebx+0x29e62fb3]
  41b2dd:	push   ebx
  41b2de:	mov    BYTE PTR [esi],dl
  41b2e0:	xchg   ebp,eax
  41b2e1:	gs dec ecx
  41b2e3:	add    BYTE PTR [edi],dl
  41b2e5:	xchg   ebx,eax
  41b2e6:	inc    esi
  41b2e7:	xor    eax,0x67a4edd3
  41b2ec:	xchg   edi,eax
  41b2ed:	in     eax,dx
  41b2ee:	jno    0x41b2e8
  41b2f0:	push   es
  41b2f1:	outs   dx,BYTE PTR ds:[esi]
  41b2f2:	jge    0x41b356
  41b2f4:	(bad)  
  41b2f5:	into   
  41b2f6:	push   0xffffff88
  41b2f8:	pop    ds
  41b2f9:	nop
  41b2fa:	pop    esp
  41b2fb:	xchg   edi,eax
  41b2fc:	bound  ecx,QWORD PTR [esi+0x6cb1cae1]
  41b302:	imul   edi,DWORD PTR [eax-0x3535650f],0x194ed2fc
  41b30c:	mov    ah,0xbb
  41b30e:	adc    ch,0x52
  41b311:	pop    edi
  41b312:	cmp    bl,bh
  41b314:	js     0x41b2f1
  41b316:	xchg   esi,eax
  41b317:	call   0x3523d9a
  41b31c:	sbb    BYTE PTR [edx],ch
  41b31e:	lock ret 0x4285
  41b322:	xchg   esi,eax
  41b323:	(bad)  
  41b324:	shl    al,cl
  41b326:	loopne 0x41b321
  41b328:	dec    esp
  41b329:	mov    eax,DWORD PTR [eax]
  41b32b:	stos   BYTE PTR es:[edi],al
  41b32c:	pop    edx
  41b32d:	sbb    al,0x23
  41b32f:	or     DWORD PTR [edx],ebx
  41b331:	mov    WORD PTR [esi+0x27],cs
  41b334:	das    
  41b335:	cmp    DWORD PTR [eax],edx
  41b337:	dec    ecx
  41b338:	sub    BYTE PTR [edx],dh
  41b33a:	fst    DWORD PTR [ecx]
  41b33c:	popa   
  41b33d:	scas   al,BYTE PTR es:[edi]
  41b33e:	addr16 out dx,eax
  41b340:	aad    0x32
  41b342:	fadd   DWORD PTR [edx-0x6aec7c56]
  41b348:	gs out 0x85,eax
  41b34b:	adc    DWORD PTR [ebx+eax*8-0x93fd45d],edi
  41b352:	push   ss
  41b353:	mov    ecx,0xad503d7a
  41b358:	shl    bl,1
  41b35a:	jmp    0x41b3bb
  41b35c:	imul   ecx,DWORD PTR ds:[ebx+0x72],0x6d
  41b361:	push   edx
  41b362:	les    edx,FWORD PTR [eax]
  41b364:	adc    ch,BYTE PTR [ebp+ecx*4-0xb81cc3]
  41b36b:	clc    
  41b36c:	lock in eax,0x6c
  41b36f:	daa    
  41b370:	ret    
  41b371:	sub    ecx,edi
  41b373:	mov    esp,0xdc02f9ad
  41b378:	dec    edi
  41b379:	pop    ebp
  41b37a:	push   ebp
  41b37b:	lock popf 
  41b37d:	xor    al,0x97
  41b37f:	adc    edx,DWORD PTR [eax+edx*1]
  41b382:	sub    DWORD PTR [ebp+0x337d1526],edx
  41b388:	push   ss
  41b389:	add    edx,edi
  41b38b:	and    BYTE PTR [ecx],ah
  41b38d:	adc    BYTE PTR ds:0xbc4d0e87,bh
  41b393:	ds fcmovne st,st(7)
  41b396:	dec    esi
  41b397:	in     eax,dx
  41b398:	shl    BYTE PTR [ecx-0x40c06f91],0x20
  41b39f:	repnz mov dl,BYTE PTR [edi+0x61f37d56]
  41b3a6:	sub    DWORD PTR [edx+0x17],esi
  41b3a9:	push   esp
  41b3aa:	int    0x49
  41b3ac:	bnd jbe 0x41b416
  41b3af:	(bad)
  41b3b2:	in     eax,dx
  41b3b3:	pop    edi
  41b3b4:	ss ins BYTE PTR es:[edi],dx
  41b3b6:	xor    DWORD PTR [edi],esp
  41b3b8:	clc    
  41b3b9:	out    dx,eax
  41b3ba:	imul   ecx,DWORD PTR [edx-0x4a],0x3c
  41b3be:	pop    edx
  41b3bf:	sti    
  41b3c0:	ficom  WORD PTR [edx+0x45]
  41b3c3:	or     BYTE PTR [ebx],dh
  41b3c5:	addr16 leave 
  41b3c7:	mov    ?,WORD PTR ds:0xeef7a20f
  41b3cd:	inc    esp
  41b3ce:	test   al,0x18
  41b3d0:	in     al,0x79
  41b3d2:	sbb    al,0x8f
  41b3d4:	add    DWORD PTR [edi+0x9],ebx
  41b3d7:	(bad)  
  41b3d8:	out    0x81,eax
  41b3da:	into   
  41b3db:	int3   
  41b3dc:	lahf   
  41b3dd:	rcl    edx,1
  41b3df:	stos   BYTE PTR es:[edi],al
  41b3e0:	imul   eax,edi,0x1a
  41b3e3:	xor    DWORD PTR [ebx],edi
  41b3e5:	js     0x41b3c6
  41b3e7:	out    dx,eax
  41b3e8:	rcl    DWORD PTR [esi],1
  41b3ea:	add    eax,0xad12e6ee
  41b3ef:	mov    esp,esp
  41b3f1:	jmp    0x41b3ba
  41b3f3:	icebp  
  41b3f4:	imul   ebx,DWORD PTR [esi+0x7e1dfffd],0x9838693b
  41b3fe:	and    DWORD PTR [ebx-0x20],esp
  41b401:	in     al,dx
  41b402:	fcomp  st(1)
  41b404:	das    
  41b405:	jns    0x41b442
  41b407:	mov    cl,BYTE PTR [edx+0x2f]
  41b40a:	dec    BYTE PTR ds:0x5a80f349
  41b410:	push   edi
  41b411:	xor    esp,ebx
  41b413:	daa    
  41b414:	imul   edx,DWORD PTR [ebx],0x5e
  41b417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b418:	fbstp  TBYTE PTR [esi]
  41b41a:	push   0x6d8e1f0a
  41b41f:	mov    eax,0xf12587f1
  41b424:	or     DWORD PTR [eax+0x38508bc5],0xaf02e322
  41b42e:	mov    ah,0x6b
  41b430:	mov    db6,eax
  41b433:	or     dl,BYTE PTR [eax]
  41b435:	cmc    
  41b436:	xlat   BYTE PTR ds:[ebx]
  41b437:	dec    edi
  41b438:	add    BYTE PTR [esi-0x37],dh
  41b43b:	clc    
  41b43c:	icebp  
  41b43d:	jns    0x41b3d3
  41b43f:	ins    DWORD PTR es:[edi],dx
  41b440:	dec    ebx
  41b441:	cld    
  41b442:	mov    eax,0xa5b100ca
  41b447:	enter  0xd137,0xc3
  41b44b:	fidiv  DWORD PTR [ecx]
  41b44d:	jle    0x41b4ad
  41b44f:	repnz dec ecx
  41b451:	mov    WORD PTR [edx+ecx*8],?
  41b454:	bound  esi,QWORD PTR [eax-0x54]
  41b457:	inc    ebx
  41b458:	cmp    bl,BYTE PTR [edx]
  41b45a:	cld    
  41b45b:	push   0xffffff9c
  41b45d:	push   esi
  41b45e:	and    DWORD PTR [ebx-0xe],esp
  41b461:	sub    eax,0xf37342dc
  41b466:	add    DWORD PTR [edi+0x6ff2d4],0x2d
  41b46d:	int3   
  41b46e:	pop    esp
  41b46f:	push   ebx
  41b470:	fisttp QWORD PTR [esi-0x56]
  41b473:	ficomp DWORD PTR [edx]
  41b475:	push   ds
  41b476:	cmp    BYTE PTR [edi],ah
  41b478:	push   edi
  41b479:	aas    
  41b47a:	fs sti 
  41b47c:	add    DWORD PTR [edi],0x53335467
  41b482:	xchg   esp,eax
  41b483:	mov    ds:0x17bf5a52,al
  41b488:	jo     0x41b47b
  41b48a:	ror    DWORD PTR [edi+0x63],0xae
  41b48e:	xlat   BYTE PTR ds:[ebx]
  41b48f:	enter  0xc36f,0x62
  41b493:	xchg   ebx,eax
  41b494:	fild   DWORD PTR [esp+ebp*8]
  41b497:	out    dx,al
  41b498:	push   edx
  41b499:	and    ebx,ebx
  41b49b:	test   DWORD PTR ds:0x8055dadc,ebx
  41b4a1:	int    0xab
  41b4a3:	scas   eax,DWORD PTR es:[edi]
  41b4a4:	sbb    ebx,DWORD PTR [esi+0x44]
  41b4a7:	xlat   BYTE PTR ds:[ebx]
  41b4a8:	push   edi
  41b4a9:	push   ss
  41b4aa:	pop    edi
  41b4ab:	dec    edi
  41b4ac:	dec    ecx
  41b4ad:	test   al,0x1d
  41b4af:	scas   eax,DWORD PTR es:[edi]
  41b4b0:	or     bl,dl
  41b4b2:	xor    ecx,edx
  41b4b4:	add    bl,BYTE PTR ds:0xec54a237
  41b4ba:	sbb    al,0xc
  41b4bc:	add    al,0xab
  41b4be:	adc    al,0x3f
  41b4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4c1:	mov    edi,0x2d24aecb
  41b4c6:	in     eax,0xce
  41b4c8:	xchg   ecx,eax
  41b4c9:	in     eax,0x7
  41b4cb:	fsub   QWORD PTR [esi-0x1a]
  41b4ce:	aad    0xb5
  41b4d0:	lds    ebp,FWORD PTR [edx]
  41b4d2:	aaa    
  41b4d3:	dec    ebx
  41b4d4:	or     eax,0xb1f0000c
  41b4d9:	retf   
  41b4da:	push   ds
  41b4db:	les    edi,FWORD PTR ds:0xec74ecc0
  41b4e1:	imul   esp,DWORD PTR [edx+0x7a80dc97],0x75
  41b4e8:	mov    edi,0x447c530f
  41b4ed:	inc    edx
  41b4ee:	ja     0x41b4ea
  41b4f0:	and    ebp,DWORD PTR [ebp-0x76a8db71]
  41b4f6:	loope  0x41b4c3
  41b4f8:	sub    dl,bl
  41b4fa:	inc    ecx
  41b4fb:	jb     0x41b550
  41b4fd:	stos   DWORD PTR es:[edi],eax
  41b4fe:	inc    eax
  41b4ff:	adc    eax,0x54bf098c
  41b504:	dec    edx
  41b505:	pop    esp
  41b506:	mov    BYTE PTR [eax-0x31a172f4],dl
  41b50c:	push   0xffffffa0
  41b50e:	mov    DWORD PTR [edi-0x65],esp
  41b511:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b512:	sub    DWORD PTR [edi-0x54c52ed6],edi
  41b518:	add    eax,0xa0295e6e
  41b51d:	sub    cl,BYTE PTR [eax-0x19018e0f]
  41b523:	dec    edx
  41b524:	cmp    eax,0xb6cbc201
  41b529:	fld    DWORD PTR [esi]
  41b52b:	outs   dx,BYTE PTR ds:[esi]
  41b52c:	xchg   esi,eax
  41b52d:	data16 cld 
  41b52f:	pushf  
  41b530:	fwait
  41b531:	les    edx,FWORD PTR [ebx-0x77]
  41b534:	inc    edi
  41b535:	jmp    0x41b4e2
  41b537:	inc    edx
  41b538:	les    ebx,FWORD PTR [esi+ebx*4]
  41b53b:	xchg   edx,eax
  41b53c:	xchg   BYTE PTR [esi-0x60758906],ah
  41b542:	push   ebx
  41b543:	aad    0xd7
  41b545:	arpl   WORD PTR [ecx+0x3a],sp
  41b548:	jl     0x41b4d1
  41b54a:	pop    ecx
  41b54b:	pop    eax
  41b54c:	mov    eax,ds:0x228b067e
  41b551:	sar    DWORD PTR [esi],0x93
  41b554:	push   esp
  41b555:	repz sbb eax,0xd1d245fd
  41b55b:	outs   dx,DWORD PTR ds:[esi]
  41b55c:	test   eax,0xac5555db
  41b561:	push   ss
  41b562:	mov    esi,0x36d0d2d1
  41b567:	dec    ebp
  41b568:	ins    DWORD PTR es:[edi],dx
  41b569:	fxch   st(3)
  41b56b:	sub    ebx,edx
  41b56d:	mul    DWORD PTR [edx+0x6f]
  41b570:	loopne 0x41b5b2
  41b572:	adc    esi,ebp
  41b574:	jno    0x41b567
  41b576:	popf   
  41b577:	xchg   ecx,edx
  41b579:	xor    al,0x41
  41b57b:	out    dx,al
  41b57c:	mov    al,ds:0xced8971e
  41b581:	or     ebp,ebx
  41b583:	mov    esi,0x2e40b475
  41b588:	mov    eax,ds:0x828f8b0a
  41b58d:	mov    ah,0xb0
  41b58f:	ss ins BYTE PTR es:[edi],dx
  41b591:	add    dh,BYTE PTR [edi-0x6c4ff42f]
  41b597:	sub    al,0x9
  41b599:	or     BYTE PTR [esi+0x4c],dl
  41b59c:	sti    
  41b59d:	jl     0x41b5fa
  41b59f:	pop    ds
  41b5a0:	fnstcw WORD PTR [edx-0xecd5777]
  41b5a6:	dec    eax
  41b5a7:	add    ebp,DWORD PTR [ebp+0x2d8be3ac]
  41b5ad:	(bad)  
  41b5ae:	scas   eax,DWORD PTR es:[edi]
  41b5af:	ficomp DWORD PTR ds:0xf0b3f379
  41b5b5:	and    ch,al
  41b5b7:	(bad)  
  41b5b8:	jg     0x41b545
  41b5ba:	jl     0x41b5e4
  41b5bc:	mov    al,0x40
  41b5be:	sti    
  41b5bf:	inc    ebx
  41b5c0:	lock mov ecx,0x81cc9f26
  41b5c6:	push   esi
  41b5c8:	xchg   esi,eax
  41b5c9:	loop   0x41b5a2
  41b5cb:	les    esi,FWORD PTR ds:0x6f4220a6
  41b5d1:	mov    dl,0x88
  41b5d3:	inc    esi
  41b5d4:	data16 or al,0x6c
  41b5d7:	xchg   edi,eax
  41b5d8:	dec    edi
  41b5d9:	mov    eax,ds:0x5c01dfe6
  41b5de:	sbb    ch,BYTE PTR [esi-0x478d0693]
  41b5e4:	and    eax,0x9fe48a2a
  41b5e9:	inc    ebp
  41b5ea:	sbb    cl,BYTE PTR [ebp-0x4d]
  41b5ed:	cmp    al,0xa9
  41b5ef:	xor    eax,0x59c1f02b
  41b5f4:	mov    ecx,0x7db8f2eb
  41b5f9:	(bad)  
  41b5fa:	fild   DWORD PTR [eax]
  41b5fc:	cld    
  41b5fd:	xor    DWORD PTR [edx+0x7df4e071],ebx
  41b603:	bound  ebx,QWORD PTR [eax-0x2e]
  41b606:	scas   al,BYTE PTR es:[edi]
  41b607:	xchg   BYTE PTR [esi],bh
  41b609:	mov    BYTE PTR [edx+edi*8-0x36809489],bl
  41b610:	adc    eax,0x587ee398
  41b615:	xchg   DWORD PTR [eax+0x6dabdadd],edx
  41b61b:	or     BYTE PTR [ecx],ah
  41b61d:	cld    
  41b61e:	inc    ebx
  41b61f:	loop   0x41b5ec
  41b621:	adc    BYTE PTR [ebx-0x3349cea3],0xd1
  41b628:	mov    ecx,DWORD PTR [ebp+0x7d]
  41b62b:	lea    edi,[edi-0xacc52c4]
  41b631:	sub    cl,ch
  41b633:	mov    eax,ds:0x7436d63c
  41b638:	lea    eax,[edx]
  41b63a:	dec    ebp
  41b63b:	not    DWORD PTR [ecx-0xb49c68b]
  41b641:	jb     0x41b61a
  41b643:	mov    edx,DWORD PTR [ebp-0x50]
  41b646:	add    ecx,0x242ebcd
  41b64c:	xor    ecx,edx
  41b64e:	mov    DWORD PTR [ebp-0x50],ecx
  41b651:	mov    ecx,DWORD PTR [ebp+0x8]
  41b654:	mov    edx,DWORD PTR [ebp-0x4c]
  41b657:	add    ecx,edi
  41b659:	and    ecx,edx
  41b65b:	mov    DWORD PTR [ebp-0x4c],ecx
  41b65e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b661:	mov    edx,DWORD PTR [ebp-0x48]
  41b664:	lea    ecx,[edx+ecx*1+0x241fcdf]
  41b66b:	mov    DWORD PTR [ebp-0x48],ecx
  41b66e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b671:	mov    edx,0xfa5e1528
  41b676:	sub    edx,ecx
  41b678:	add    edx,DWORD PTR [ebp-0x44]
  41b67b:	mov    DWORD PTR [ebp-0x44],edx
  41b67e:	mov    ecx,DWORD PTR [ebp+0x8]
  41b681:	xor    ecx,eax
  41b683:	add    ecx,esi
  41b685:	jne    0x414b6f
  41b68b:	mov    ecx,DWORD PTR [ebp-0x8]
  41b68e:	xor    ecx,eax
  41b690:	mov    eax,DWORD PTR [ebp+0x10]
  41b693:	add    ecx,esi
  41b695:	mov    DWORD PTR [eax],ecx
  41b697:	pop    edi
  41b698:	pop    esi
  41b699:	pop    ebx
  41b69a:	leave  
  41b69b:	ret    0xc
  41b69e:	push   ebp
  41b69f:	mov    ebp,esp
  41b6a1:	sub    esp,0x78
  41b6a4:	not    DWORD PTR ds:0x4291f7
  41b6aa:	push   esi
  41b6ab:	sub    eax,ecx
  41b6ad:	push   edi
  41b6ae:	sub    eax,esi
  41b6b0:	mov    eax,ds:0x42830b
  41b6b5:	mov    DWORD PTR [ebp-0x24],eax
  41b6b8:	mov    eax,ds:0x42842b
  41b6bd:	inc    ecx
  41b6be:	mov    DWORD PTR [ebp-0x30],eax
  41b6c1:	or     DWORD PTR ds:0x42919f,edi
  41b6c7:	mov    DWORD PTR [ebp-0x2c],0xf89c85a1
  41b6ce:	movzx  edi,BYTE PTR ds:0x42918f
  41b6d5:	adc    DWORD PTR ds:0x42914b,edi
  41b6db:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  41b6e2:	adc    DWORD PTR ds:0x42918f,edx
  41b6e8:	mov    eax,DWORD PTR [ebp-0x10]
  41b6eb:	add    DWORD PTR ds:0x4291f3,ecx
  41b6f1:	mov    ecx,DWORD PTR [ebp-0x10]
  41b6f4:	adc    DWORD PTR ds:0x42915f,0x287e
  41b6fe:	sub    eax,ecx
  41b700:	adc    esi,esi
  41b702:	mov    DWORD PTR [ebp-0x10],eax
  41b705:	xor    DWORD PTR [ebp-0x10],0xf89cb5a1
  41b70c:	xor    DWORD PTR ds:0x4291ab,0x51ed
  41b716:	mov    eax,DWORD PTR [ebp-0x18]
  41b719:	and    DWORD PTR ds:0x4291a3,0x0
  41b723:	mov    edi,DWORD PTR ds:0x4291a3
  41b729:	inc    edi
  41b72a:	mov    DWORD PTR ds:0x4291a3,edi
  41b730:	cmp    DWORD PTR ds:0x4291a3,0x1b
  41b737:	jle    0x41b760
  41b73d:	jmp    0x41b753
  41b742:	push   0x4280d6
  41b747:	push   DWORD PTR [ebp-0x18]
  41b74a:	push   DWORD PTR [ebp-0x14]
  41b74d:	call   DWORD PTR ds:0x42a58f
  41b753:	cmp    DWORD PTR ds:0x4291a3,0x12
  41b75a:	jb     0x41b723
  41b760:	mov    ecx,DWORD PTR [ebp-0x18]
  41b763:	sub    eax,ecx
  41b765:	mov    DWORD PTR [ebp-0x18],eax
  41b768:	or     DWORD PTR [ebp-0x18],0xf89f05a1
  41b76f:	mov    eax,DWORD PTR [ebp-0xc]
  41b772:	and    DWORD PTR ds:0x42919f,0x1b88
  41b77c:	mov    ecx,DWORD PTR [ebp-0xc]
  41b77f:	sub    eax,ecx
  41b781:	and    DWORD PTR ds:0x429173,0x0
  41b78b:	mov    ecx,DWORD PTR ds:0x429173
  41b791:	inc    ecx
  41b792:	mov    DWORD PTR ds:0x429173,ecx
  41b798:	cmp    DWORD PTR ds:0x429173,0x1b
  41b79f:	jg     0x41b7c2
  41b7a5:	jmp    0x41b7b5
  41b7aa:	push   0x3a78
  41b7af:	call   DWORD PTR ds:0x42a593
  41b7b5:	cmp    DWORD PTR ds:0x429173,0x15
  41b7bc:	jb     0x41b78b
  41b7c2:	mov    DWORD PTR [ebp-0xc],eax
  41b7c5:	xor    DWORD PTR ds:0x4291a7,0x3902
  41b7cf:	or     DWORD PTR [ebp-0xc],0xf89c85e1
  41b7d6:	mov    eax,DWORD PTR [ebp-0x1c]
  41b7d9:	and    DWORD PTR ds:0x4291f7,0x5581
  41b7e3:	mov    ecx,DWORD PTR [ebp-0x1c]
  41b7e6:	and    DWORD PTR ds:0x42914b,0x0
  41b7f0:	mov    esi,DWORD PTR ds:0x42914b
  41b7f6:	inc    esi
  41b7f7:	mov    DWORD PTR ds:0x42914b,esi
  41b7fd:	cmp    DWORD PTR ds:0x42914b,0xc
  41b804:	jg     0x41b848
  41b80a:	jmp    0x41b821
  41b80f:	push   0x428010
  41b814:	push   0x0
  41b816:	push   0x6059
  41b81b:	call   DWORD PTR ds:0x42a597
  41b821:	cmp    DWORD PTR ds:0x42914b,0xb
  41b828:	jne    0x41b83b
  41b82e:	mov    esi,DWORD PTR ds:0x42914b
  41b834:	inc    esi
  41b835:	mov    DWORD PTR ds:0x42914b,esi
  41b83b:	cmp    DWORD PTR ds:0x42914b,0x13
  41b842:	jb     0x41b7f0
  41b848:	sub    eax,ecx
  41b84a:	mov    DWORD PTR ds:0x4291e7,0x17
  41b854:	cmp    DWORD PTR ds:0x4291e7,0x0
  41b85b:	je     0x41b88b
  41b861:	cmp    DWORD PTR ds:0x4291e7,0x22
  41b868:	jbe    0x41b88b
  41b86e:	jmp    0x41b879
  41b873:	call   DWORD PTR ds:0x42a59b
  41b879:	mov    edi,DWORD PTR ds:0x4291e7
  41b87f:	dec    edi
  41b880:	mov    DWORD PTR ds:0x4291e7,edi
  41b886:	jmp    0x41b854
  41b88b:	mov    DWORD PTR [ebp-0x1c],eax
  41b88e:	or     DWORD PTR [ebp-0x1c],0xf89c8581
  41b895:	add    eax,eax
  41b897:	mov    eax,DWORD PTR [ebp-0x20]
  41b89a:	mov    ecx,DWORD PTR [ebp-0x20]
  41b89d:	sub    eax,ecx
  41b89f:	and    DWORD PTR ds:0x4291b3,0x0
  41b8a9:	jmp    0x41b8bb
  41b8ae:	mov    esi,DWORD PTR ds:0x4291b3
  41b8b4:	inc    esi
  41b8b5:	mov    DWORD PTR ds:0x4291b3,esi
  41b8bb:	cmp    DWORD PTR ds:0x4291b3,0x1e
  41b8c2:	jae    0x41b8ef
  41b8c8:	cmp    DWORD PTR ds:0x4291b3,0x28
  41b8cf:	jle    0x41b8ef
  41b8d5:	jmp    0x41b8ea
  41b8da:	push   0x4291c7
  41b8df:	push   0x428047
  41b8e4:	call   DWORD PTR ds:0x42a59f
  41b8ea:	jmp    0x41b8ae
  41b8ef:	mov    DWORD PTR [ebp-0x20],eax
  41b8f2:	mov    eax,DWORD PTR [ebp-0x2c]
  41b8f5:	mov    ecx,DWORD PTR [ebp-0x20]
  41b8f8:	neg    edi
  41b8fa:	mov    esi,0x75108ac
  41b8ff:	xor    eax,esi
  41b901:	mov    edi,0x3272f3
  41b906:	add    eax,edi
  41b908:	or     eax,ecx
  41b90a:	mov    DWORD PTR [ebp-0x20],eax
  41b90d:	mov    eax,DWORD PTR [ebp-0x4]
  41b910:	mov    ecx,DWORD PTR [ebp-0x4]
  41b913:	sub    eax,ecx
  41b915:	mov    DWORD PTR [ebp-0x4],eax
  41b918:	or     DWORD PTR [ebp-0x4],0xf89c85be
  41b91f:	mov    eax,DWORD PTR [ebp-0xc]
  41b922:	xor    eax,esi
  41b924:	add    eax,edi
  41b926:	push   eax
  41b927:	mov    eax,DWORD PTR [ebp-0x10]
  41b92a:	xor    eax,esi
  41b92c:	add    eax,edi
  41b92e:	push   eax
  41b92f:	mov    eax,DWORD PTR [ebp-0x4]
  41b932:	xor    eax,esi
  41b934:	add    eax,edi
  41b936:	push   eax
  41b937:	lea    eax,[ebp-0x78]
  41b93a:	push   eax
  41b93b:	push   DWORD PTR [ebp-0x2c]
  41b93e:	push   DWORD PTR [ebp-0x28]
  41b941:	call   0x411b80
  41b946:	test   eax,eax
  41b948:	je     0x41b976
  41b94e:	lea    eax,[ebp-0x78]
  41b951:	push   eax
  41b952:	mov    eax,DWORD PTR [ebp-0x28]
  41b955:	xor    eax,esi
  41b957:	add    eax,edi
  41b959:	push   eax
  41b95a:	mov    eax,DWORD PTR [ebp-0x24]
  41b95d:	add    eax,0xaa
  41b962:	push   eax
  41b963:	mov    eax,DWORD PTR [ebp-0x24]
  41b966:	mov    eax,DWORD PTR [eax+0x198]
  41b96c:	push   DWORD PTR [eax]
  41b96e:	call   0x4085e5
  41b973:	mov    DWORD PTR [ebp-0x14],eax
  41b976:	mov    ecx,DWORD PTR ds:0x428403
  41b97c:	lea    eax,[ebp+0x4]
  41b97f:	mov    DWORD PTR [ecx*4+0x4283fb],eax
  41b986:	inc    DWORD PTR ds:0x428403
  41b98c:	mov    eax,DWORD PTR [ebp-0x14]
  41b98f:	test   eax,eax
  41b991:	je     0x41b9f9
  41b997:	lea    eax,[ebp-0x8]
  41b99a:	mov    DWORD PTR [ebp-0x34],eax
  41b99d:	mov    eax,DWORD PTR [ebp-0x30]
  41b9a0:	mov    DWORD PTR [ebp-0x8],eax
  41b9a3:	mov    eax,DWORD PTR [ebp-0x8]
  41b9a6:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9a9:	sub    eax,ecx
  41b9ab:	mov    DWORD PTR [ebp-0x8],eax
  41b9ae:	mov    ecx,DWORD PTR [ebp-0x4]
  41b9b1:	xor    ecx,esi
  41b9b3:	mov    eax,0xffcd8d0d
  41b9b8:	sub    eax,ecx
  41b9ba:	add    DWORD PTR [ebp-0x8],eax
  41b9bd:	mov    eax,DWORD PTR [ebp-0x8]
  41b9c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41b9c3:	mov    DWORD PTR [ecx+0x1],eax
  41b9c6:	mov    eax,DWORD PTR [ebp-0x14]
  41b9c9:	push   DWORD PTR [ebp-0x24]
  41b9cc:	mov    BYTE PTR [eax],0xe9
  41b9cf:	mov    eax,ds:0x428187
  41b9d4:	push   DWORD PTR [eax]
  41b9d6:	push   DWORD PTR ds:0x4283eb
  41b9dc:	push   DWORD PTR ds:0x42818f
  41b9e2:	push   DWORD PTR ds:0x4283cb
  41b9e8:	push   DWORD PTR ds:0x428f4f
  41b9ee:	push   DWORD PTR [ebp-0x28]
  41b9f1:	push   DWORD PTR [ebp-0x2c]
  41b9f4:	mov    eax,DWORD PTR [ebp-0x14]
  41b9f7:	call   eax
  41b9f9:	pop    edi
  41b9fa:	pop    esi
  41b9fb:	leave  
  41b9fc:	ret    
  41b9fd:	push   ebp
  41b9fe:	mov    ebp,esp
  41ba00:	sub    esp,0x1c
  41ba03:	adc    DWORD PTR ds:0x4291bf,0x12a2
  41ba0d:	mov    DWORD PTR [ebp-0x10],0xf89f85a1
  41ba14:	sub    DWORD PTR ds:0x4291b3,0x1e28
  41ba1e:	lea    eax,[ebp+0x14]
  41ba21:	movzx  edx,BYTE PTR ds:0x4291c7
  41ba28:	sbb    edx,DWORD PTR ds:0x4291ef
  41ba2e:	mov    DWORD PTR ds:0x4291c7,edx
  41ba34:	mov    DWORD PTR [ebp-0x4],eax
  41ba37:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  41ba3e:	and    DWORD PTR ds:0x4291a3,0x0
  41ba48:	jmp    0x41ba5a
  41ba4d:	mov    edx,DWORD PTR ds:0x4291a3
  41ba53:	inc    edx
  41ba54:	mov    DWORD PTR ds:0x4291a3,edx
  41ba5a:	cmp    DWORD PTR ds:0x4291a3,0x1c
  41ba61:	jae    0x41ba87
  41ba67:	cmp    DWORD PTR ds:0x4291a3,0x2a
  41ba6e:	jb     0x41ba87
  41ba74:	jmp    0x41ba82
  41ba79:	push   DWORD PTR [ebp-0x10]
  41ba7c:	call   DWORD PTR ds:0x42a5a3
  41ba82:	jmp    0x41ba4d
  41ba87:	lea    eax,[ebp-0xc]
  41ba8a:	add    DWORD PTR ds:0x4291d7,ecx
  41ba90:	mov    DWORD PTR [ebp-0x14],eax
  41ba93:	xor    ecx,eax
  41ba95:	mov    eax,DWORD PTR [ebp-0xc]
  41ba98:	mov    ecx,DWORD PTR ds:0x42921f
  41ba9e:	mov    edx,DWORD PTR ds:0x42984b
  41baa4:	sub    edx,ecx
  41baa6:	xor    ecx,DWORD PTR [ecx+edx*1]
  41baa9:	mov    edx,DWORD PTR [ebp-0x14]
  41baac:	adc    ecx,0x3c0d
  41bab2:	mov    ecx,0x75108ac
  41bab7:	adc    DWORD PTR ds:0x4291eb,0xbc
  41bac1:	xor    eax,ecx
  41bac3:	or     DWORD PTR ds:0x4291eb,0x4291d3
  41bacd:	add    eax,0x3272f3
  41bad2:	xor    DWORD PTR ds:0x4291db,0x429193
  41badc:	mov    DWORD PTR [edx],eax
  41bade:	and    DWORD PTR ds:0x429157,0x0
  41bae8:	xor    edx,edx
  41baea:	add    edx,DWORD PTR ds:0x429157
  41baf0:	inc    edx
  41baf1:	mov    DWORD PTR ds:0x429157,edx
  41baf7:	cmp    DWORD PTR ds:0x429157,0x2c
  41bafe:	jge    0x41bb29
  41bb04:	jmp    0x41bb1c
  41bb09:	push   0x4291c7
  41bb0e:	push   0x4291db
  41bb13:	push   DWORD PTR [ebp-0x20]
  41bb16:	call   DWORD PTR ds:0x42a5ab
  41bb1c:	cmp    DWORD PTR ds:0x429157,0x1d
  41bb23:	jb     0x41bae8
  41bb29:	mov    eax,ds:0x428183
  41bb2e:	mov    edx,DWORD PTR [ebp-0x4]
  41bb31:	mov    eax,DWORD PTR [eax]
  41bb33:	add    eax,DWORD PTR [edx]
  41bb35:	mov    DWORD PTR ds:0x4291e7,0x17
  41bb3f:	cmp    DWORD PTR ds:0x4291e7,0x0
  41bb46:	je     0x41bb7d
  41bb4c:	cmp    DWORD PTR ds:0x4291e7,0x22
  41bb53:	ja     0x41bb7d
  41bb59:	jmp    0x41bb69
  41bb5e:	push   0x40e7
  41bb63:	call   DWORD PTR ds:0x42a573
  41bb69:	xor    edx,edx
  41bb6b:	or     edx,DWORD PTR ds:0x4291e7
  41bb71:	dec    edx
  41bb72:	mov    DWORD PTR ds:0x4291e7,edx
  41bb78:	jmp    0x41bb3f
  41bb7d:	push   esi
  41bb7e:	sub    edx,0x5425
  41bb84:	mov    DWORD PTR [ebp-0x8],eax
  41bb87:	mov    edx,DWORD PTR [ebp+0x8]
  41bb8a:	mov    eax,ds:0x42830b
  41bb8f:	mov    esi,DWORD PTR ds:0x429b6f
  41bb95:	mov    esi,DWORD PTR [esi]
  41bb97:	adc    DWORD PTR ds:0x42919f,esi
  41bb9d:	mov    eax,DWORD PTR [eax+0x198]
  41bba3:	xor    edx,ecx
  41bba5:	and    DWORD PTR ds:0x4291cf,ecx
  41bbab:	mov    esi,0x3272f3
  41bbb0:	add    edx,esi
  41bbb2:	mov    DWORD PTR ds:0x4291c7,0x7ba3
  41bbbc:	cmp    DWORD PTR [eax],edx
  41bbbe:	mov    DWORD PTR ds:0x4291df,0x7d4d
  41bbc8:	je     0x41bbdb
  41bbce:	not    DWORD PTR ds:0x42917b
  41bbd4:	mov    eax,DWORD PTR [eax]
  41bbd6:	jmp    0x4207f9
  41bbdb:	mov    eax,DWORD PTR [ebp+0x18]
  41bbde:	xor    DWORD PTR ds:0x429183,0x42919f
  41bbe8:	xor    eax,ecx
  41bbea:	push   ebx
  41bbeb:	add    eax,esi
  41bbed:	xor    DWORD PTR ds:0x429197,edi
  41bbf3:	xor    edx,edx
  41bbf5:	sub    DWORD PTR ds:0x4291e3,edi
  41bbfb:	mov    ebx,0xfabdbed6
  41bc00:	add    eax,ebx
  41bc02:	mov    DWORD PTR ds:0x4291cb,0x2663
  41bc0c:	push   edi
  41bc0d:	adc    edx,0xffffffff
  41bc10:	and    DWORD PTR ds:0x4291a3,0x0
  41bc1a:	jmp    0x41bc2e
  41bc1f:	xor    edi,edi
  41bc21:	xor    edi,DWORD PTR ds:0x4291a3
  41bc27:	inc    edi
  41bc28:	mov    DWORD PTR ds:0x4291a3,edi
  41bc2e:	cmp    DWORD PTR ds:0x4291a3,0x1f
  41bc35:	jae    0x41bc68
  41bc3b:	cmp    DWORD PTR ds:0x4291a3,0x22
  41bc42:	jl     0x41bc68
  41bc48:	jmp    0x41bc63
  41bc4d:	push   DWORD PTR [ebp-0x24]
  41bc50:	push   0x42810e
  41bc55:	push   0x42812a
  41bc5a:	push   DWORD PTR [ebp-0x1c]
  41bc5d:	call   DWORD PTR ds:0x42a57b
  41bc63:	jmp    0x41bc1f
  41bc68:	mov    edi,0x8a29a13f
  41bc6d:	xor    eax,edi
  41bc6f:	sub    DWORD PTR ds:0x429197,0x48a0
  41bc79:	xor    edx,0x0
  41bc7c:	mov    DWORD PTR ds:0x42919f,0x3301
  41bc86:	cmp    eax,0x70941fe9
  41bc8b:	mov    DWORD PTR ds:0x429167,0x2e01
  41bc95:	jne    0x41bcc2
  41bc9b:	mov    DWORD PTR ds:0x4291a3,0x73ae
  41bca5:	cmp    edx,0xffffffff
  41bca8:	jne    0x41bcc2
  41bcae:	push   0xf89c85a2
  41bcb3:	mov    DWORD PTR ds:0x4291af,0x3feb
  41bcbd:	jmp    0x4207e6
  41bcc2:	mov    eax,DWORD PTR [ebp+0x18]
  41bcc5:	xor    eax,ecx
  41bcc7:	adc    DWORD PTR ds:0x42916b,0x4291af
  41bcd1:	add    eax,esi
  41bcd3:	sub    DWORD PTR ds:0x429163,0x429173
  41bcdd:	xor    edx,edx
  41bcdf:	add    eax,ebx
  41bce1:	mov    DWORD PTR ds:0x429163,0x4b51
  41bceb:	adc    edx,0xffffffff
  41bcee:	sub    DWORD PTR ds:0x4291af,0x6866
  41bcf8:	xor    eax,edi
  41bcfa:	or     DWORD PTR ds:0x42914f,0x4291db
  41bd04:	xor    edx,0x0
  41bd07:	mov    DWORD PTR ds:0x4291eb,0x1dc4
  41bd11:	cmp    eax,0x70941fe7
  41bd16:	mov    DWORD PTR ds:0x429153,0x3724
  41bd20:	jne    0x4207d3
  41bd26:	cmp    edx,0xffffffff
  41bd29:	mov    DWORD PTR ds:0x4291ef,0x5140
  41bd33:	jne    0x4207d3
  41bd39:	add    DWORD PTR ds:0x429193,0x7d28
  41bd43:	mov    eax,DWORD PTR [ebp+0x10]
  41bd46:	mov    DWORD PTR ds:0x42916b,0x1b
  41bd50:	cmp    DWORD PTR ds:0x42916b,0x0
  41bd57:	je     0x41bd93
  41bd5d:	cmp    DWORD PTR ds:0x42916b,0x1d
  41bd64:	jl     0x41bd93
  41bd6a:	jmp    0x41bd7f
  41bd6f:	push   0x2cfc
  41bd74:	push   0x400000
  41bd79:	call   DWORD PTR ds:0x42a57f
  41bd7f:	xor    edx,edx
  41bd81:	xor    edx,DWORD PTR ds:0x42916b
  41bd87:	dec    edx
  41bd88:	mov    DWORD PTR ds:0x42916b,edx
  41bd8e:	jmp    0x41bd50
  41bd93:	xor    eax,ecx
  41bd95:	add    eax,esi
  41bd97:	mov    DWORD PTR [ebp-0x18],eax
  41bd9a:	sub    DWORD PTR ds:0x42918f,0x3e4b
  41bda4:	mov    eax,DWORD PTR [ebp+0xc]
  41bda7:	and    DWORD PTR ds:0x429183,0x0
  41bdb1:	jmp    0x41bdc5
  41bdb6:	xor    edx,edx
  41bdb8:	add    edx,DWORD PTR ds:0x429183
  41bdbe:	inc    edx
  41bdbf:	mov    DWORD PTR ds:0x429183,edx
  41bdc5:	cmp    DWORD PTR ds:0x429183,0x19
  41bdcc:	jae    0x41bdf4
  41bdd2:	cmp    DWORD PTR ds:0x429183,0x28
  41bdd9:	jbe    0x41bdf4
  41bddf:	jmp    0x41bdef
  41bde4:	push   0x429193
  41bde9:	call   DWORD PTR ds:0x42a583
  41bdef:	jmp    0x41bdb6
  41bdf4:	mov    edx,DWORD PTR [ebp-0x8]
  41bdf7:	mov    DWORD PTR ds:0x4291ab,0x2654
  41be01:	xor    eax,ecx
  41be03:	add    eax,esi
  41be05:	adc    DWORD PTR ds:0x4291e7,0x4291db
  41be0f:	imul   eax,DWORD PTR [edx]
  41be12:	mov    edx,DWORD PTR [ebp+0x8]
  41be15:	or     DWORD PTR ds:0x42914b,0x4291d3
  41be1f:	xor    edx,ecx
  41be21:	add    edx,esi
  41be23:	mov    DWORD PTR ds:0x4291e7,0x151c
  41be2d:	cmp    edx,eax
  41be2f:	mov    eax,DWORD PTR [ebp-0x4]
  41be32:	je     0x41beca
  41be38:	mov    DWORD PTR ds:0x429163,0x16
  41be42:	cmp    DWORD PTR ds:0x429163,0x0
  41be49:	je     0x41be83
  41be4f:	cmp    DWORD PTR ds:0x429163,0x1a
  41be56:	ja     0x41be83
  41be5c:	jmp    0x41be71
  41be61:	push   0x4e27
  41be66:	push   0x4280a5
  41be6b:	call   DWORD PTR ds:0x42a587
  41be71:	mov    edx,DWORD PTR ds:0x429163
  41be77:	dec    edx
  41be78:	mov    DWORD PTR ds:0x429163,edx
  41be7e:	jmp    0x41be42
  41be83:	mov    edx,DWORD PTR [ebp-0x18]
  41be86:	or     DWORD PTR ds:0x42917f,0x4f4
  41be90:	add    DWORD PTR [eax],edx
  41be92:	and    eax,0x7343
  41be97:	mov    eax,DWORD PTR [ebp-0x4]
  41be9a:	mov    edx,DWORD PTR [ebp+0xc]
  41be9d:	xor    edx,ecx
  41be9f:	add    edx,esi
  41bea1:	imul   edx,DWORD PTR [eax]
  41bea4:	sbb    DWORD PTR ds:0x429183,0x4291b3
  41beae:	mov    DWORD PTR [eax],edx
  41beb0:	mov    eax,DWORD PTR [ebp-0x4]
  41beb3:	mov    DWORD PTR [ebp-0x1c],eax
  41beb6:	mov    eax,DWORD PTR [ebp+0x10]
  41beb9:	xor    eax,ecx
  41bebb:	mov    edx,0xffcd8d0d
  41bec0:	sub    edx,eax
  41bec2:	mov    eax,DWORD PTR [ebp-0x1c]
  41bec5:	jmp    0x41bee4
  41beca:	mov    edx,DWORD PTR [ebp+0x14]
  41becd:	xor    DWORD PTR [eax],edx
  41becf:	mov    eax,DWORD PTR [ebp-0x4]
  41bed2:	mov    DWORD PTR [ebp-0x1c],eax
  41bed5:	mov    eax,DWORD PTR [ebp+0x10]
  41bed8:	xor    eax,ecx
  41beda:	mov    edx,0xffcd8d0d
  41bedf:	sub    edx,eax
  41bee1:	mov    eax,DWORD PTR [ebp-0x1c]
  41bee4:	add    DWORD PTR [eax],edx
  41bee6:	mov    eax,DWORD PTR [ebp-0x4]
  41bee9:	mov    edx,DWORD PTR [ebp-0x8]
  41beec:	add    edx,DWORD PTR [eax]
  41beee:	mov    DWORD PTR [ebp-0x8],edx
  41bef1:	mov    eax,DWORD PTR [ebp+0xc]
  41bef4:	mov    edx,DWORD PTR [ebp+0xc]
  41bef7:	xor    edx,ecx
  41bef9:	xor    eax,ecx
  41befb:	lea    eax,[eax+edx*1+0x64e5e6]
  41bf02:	mov    edx,DWORD PTR [ebp+0xc]
  41bf05:	xor    edx,ecx
  41bf07:	add    edx,esi
  41bf09:	imul   eax,edx
  41bf0c:	mov    edx,DWORD PTR [ebp+0xc]
  41bf0f:	xor    edx,ecx
  41bf11:	sub    edx,eax
  41bf13:	mov    eax,DWORD PTR [ebp-0x4]
  41bf16:	add    edx,esi
  41bf18:	cmp    DWORD PTR [eax],edx
  41bf1a:	mov    eax,DWORD PTR [ebp-0x4]
  41bf1d:	jg     0x41bf3a
  41bf23:	mov    DWORD PTR [ebp-0x1c],eax
  41bf26:	mov    eax,DWORD PTR [ebp+0x10]
  41bf29:	xor    eax,ecx
  41bf2b:	mov    edx,0xffcd8d0d
  41bf30:	sub    edx,eax
  41bf32:	mov    eax,DWORD PTR [ebp-0x1c]
  41bf35:	jmp    0x41bf41
  41bf3a:	mov    edx,DWORD PTR [ebp+0x10]
  41bf3d:	xor    edx,ecx
  41bf3f:	add    edx,esi
  41bf41:	add    DWORD PTR [eax],edx
  41bf43:	mov    eax,DWORD PTR [ebp-0x8]
  41bf46:	mov    edx,DWORD PTR [ebp-0x10]
  41bf49:	mov    eax,DWORD PTR [eax]
  41bf4b:	xor    edx,ecx
  41bf4d:	add    edx,0x3272f2
  41bf53:	not    edx
  41bf55:	and    eax,edx
  41bf57:	mov    DWORD PTR [ebp-0x4],eax
  41bf5a:	movsx  eax,BYTE PTR [eax+0x1]
  41bf5e:	cdq    
  41bf5f:	add    eax,ebx
  41bf61:	adc    edx,0xffffffff
  41bf64:	jmp    0x41e327
  41bf69:	pop    esi
  41bf6a:	push   0x85807d90
  41bf6f:	xchg   esi,eax
  41bf70:	dec    eax
  41bf71:	add    cl,BYTE PTR [ebx+0x3]
  41bf74:	shl    DWORD PTR [edi+0x4a],cl
  41bf77:	mov    ecx,0x82f9bbf3
  41bf7c:	sbb    ecx,0x5c
  41bf7f:	add    DWORD PTR [ebx+0x4866fef2],0x52
  41bf86:	add    al,0x86
  41bf88:	or     BYTE PTR [esi],0x21
  41bf8b:	sbb    dh,al
  41bf8d:	add    ah,BYTE PTR [eax+0x41]
  41bf90:	in     al,0x98
  41bf92:	cmp    al,BYTE PTR [edx+0xc]
  41bf95:	or     DWORD PTR [edi+0x58],0x537bf679
  41bf9c:	outs   dx,DWORD PTR ds:[esi]
  41bf9d:	into   
  41bf9e:	imul   edi,DWORD PTR [ebp-0x676ae5e9],0xffffffaf
  41bfa5:	jno    0x41bfd1
  41bfa7:	or     al,0x6e
  41bfa9:	leave  
  41bfaa:	addr16 pusha 
  41bfac:	fs in  al,0x30
  41bfaf:	repz inc ebp
  41bfb1:	mov    ebx,DWORD PTR [esi]
  41bfb3:	cmp    BYTE PTR [ebx-0x36],dh
  41bfb6:	jp     0x41bf7f
  41bfb8:	clc    
  41bfb9:	mov    ch,0x9a
  41bfbb:	ins    BYTE PTR es:[edi],dx
  41bfbc:	jge    0x41bfca
  41bfbe:	lods   eax,DWORD PTR ds:[esi]
  41bfbf:	mov    ecx,0x75253908
  41bfc4:	xchg   DWORD PTR [edi+0x65],edi
  41bfc7:	jecxz  0x41c03c
  41bfc9:	push   eax
  41bfca:	jbe    0x41bfe3
  41bfcc:	in     al,0x4e
  41bfce:	cmp    eax,DWORD PTR [edx]
  41bfd0:	add    esi,DWORD PTR [eax-0x3e]
  41bfd3:	and    eax,0xd81a5ac3
  41bfd8:	pop    eax
  41bfd9:	ret    0x3c82
  41bfdc:	pop    eax
  41bfdd:	aam    0x74
  41bfdf:	jle    0x41c005
  41bfe1:	and    BYTE PTR ds:0x54168e1f,dl
  41bfe7:	mov    DWORD PTR [eax+0x68],ebx
  41bfea:	adc    bl,BYTE PTR [edi+0x52]
  41bfed:	gs mov eax,0xe644d199
  41bff3:	push   esi
  41bff4:	or     BYTE PTR [ecx],ch
  41bff6:	jl     0x41bfeb
  41bff8:	xchg   esi,eax
  41bff9:	or     dl,dh
  41bffb:	pop    ebp
  41bffc:	sbb    ch,ch
  41bffe:	sub    ch,bh
  41c000:	mov    WORD PTR [ecx-0xe01a2b6],fs
  41c006:	jmp    0xbed5241c
  41c00b:	lods   eax,DWORD PTR ds:[esi]
  41c00c:	in     al,0x4b
  41c00e:	scas   al,BYTE PTR es:[edi]
  41c00f:	cmp    al,0x9b
  41c011:	push   edx
  41c012:	pop    eax
  41c013:	cs retf 
  41c015:	lock sar edx,cl
  41c018:	inc    ebp
  41c019:	jbe    0x41bfe9
  41c01b:	out    dx,al
  41c01c:	add    al,0xc9
  41c01e:	and    edx,DWORD PTR [ebp-0x26]
  41c021:	mov    ds:0xcf45afb6,eax
  41c026:	(bad)  [ebx+edx*1]
  41c029:	call   0xeb841dec
  41c02e:	sbb    eax,0xc127a2e8
  41c033:	sub    DWORD PTR [ebp+0x6aa65a2d],esi
  41c039:	enter  0xda5d,0xc7
  41c03d:	data16 (bad) 
  41c03f:	push   0x834329c0
  41c044:	xchg   esp,eax
  41c045:	push   edx
  41c046:	mov    ds:0xfbb8c3d1,eax
  41c04b:	pushf  
  41c04c:	push   edi
  41c04d:	mov    ecx,0xe9e7d17e
  41c052:	sub    DWORD PTR [ebx*4-0xdd4b6a],edx
  41c059:	jo     0x41c021
  41c05b:	or     dh,BYTE PTR [ebx-0xf]
  41c05e:	cmp    eax,0xbec1da5c
  41c063:	inc    ebp
  41c064:	stc    
  41c065:	cmp    DWORD PTR [ebp-0x31],ebx
  41c068:	call   0x2892:0xc58a1e27
  41c06f:	jae    0x41c092
  41c071:	sar    DWORD PTR [esi-0x12],cl
  41c074:	pop    edi
  41c075:	adc    dh,0x27
  41c078:	pop    es
  41c079:	int3   
  41c07a:	and    eax,0x319c942c
  41c07f:	mov    dh,0x33
  41c081:	ss push ebx
  41c083:	sbb    DWORD PTR ds:0xb467043d,esi
  41c089:	dec    esi
  41c08a:	push   edx
  41c08b:	js     0x41c0d3
  41c08d:	mov    ecx,0x8903958f
  41c092:	enter  0xaaf3,0x5b
  41c096:	inc    ebx
  41c097:	cmp    dh,ah
  41c099:	loopne 0x41c035
  41c09b:	fmul   DWORD PTR [edx+0x7163384a]
  41c0a1:	int3   
  41c0a2:	mov    ah,0x24
  41c0a4:	pop    ebp
  41c0a5:	scas   eax,DWORD PTR es:[edi]
  41c0a6:	rcl    BYTE PTR [esi-0x55],cl
  41c0a9:	lock and BYTE PTR [edi-0x3a],cl
  41c0ad:	add    al,0xb8
  41c0af:	xor    DWORD PTR [ebp-0x77],ecx
  41c0b2:	outs   dx,DWORD PTR ds:[esi]
  41c0b3:	sbb    eax,0xa771bb8a
  41c0b8:	mov    ebx,0xed7632bd
  41c0bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0be:	imul   eax,DWORD PTR [ecx],0xd14199fa
  41c0c4:	cs jne 0x41c04c
  41c0c7:	jbe    0x41c0a7
  41c0c9:	jo     0x41c088
  41c0cb:	fwait
  41c0cc:	cmp    eax,0xc247ddfb
  41c0d1:	ret    
  41c0d2:	hlt    
  41c0d3:	frstor [ebp+0x5e663d9a]
  41c0d9:	sbb    BYTE PTR [ecx+0x672f107],cl
  41c0df:	mov    ebp,0xc5e4cf16
  41c0e5:	add    edi,ebp
  41c0e7:	aaa    
  41c0e8:	sbb    eax,0xb8497c9b
  41c0ed:	pop    ds
  41c0ee:	push   cs
  41c0ef:	imul   ecx,DWORD PTR [ebp+0x1fad7520],0xffffff8c
  41c0f6:	cmp    BYTE PTR [eax+ecx*8],bl
  41c0f9:	or     eax,0x5ce2d262
  41c0fe:	fild   DWORD PTR [ebx]
  41c100:	test   al,dh
  41c102:	setae  BYTE PTR [ebp-0x6e9ec18f]
  41c109:	push   cs
  41c10a:	xchg   ecx,eax
  41c10b:	imul   edx,DWORD PTR [ebx],0x73
  41c10e:	pop    ecx
  41c10f:	jno    0x41c11b
  41c111:	mov    bl,BYTE PTR ss:[ebx+0x587624a6]
  41c118:	push   ebx
  41c119:	mov    dl,0x3
  41c11b:	int3   
  41c11c:	scas   al,BYTE PTR es:[edi]
  41c11d:	shl    dh,1
  41c11f:	cmc    
  41c120:	and    DWORD PTR [ecx],ebx
  41c122:	or     al,BYTE PTR [ecx]
  41c124:	mov    al,0xd3
  41c126:	inc    eax
  41c127:	dec    esp
  41c128:	mov    bh,0x16
  41c12a:	fcmovbe st,st(1)
  41c12c:	xchg   ebp,eax
  41c12d:	(bad)  
  41c12e:	cld    
  41c12f:	fld    st(5)
  41c131:	dec    edi
  41c132:	ins    DWORD PTR es:[edi],dx
  41c133:	push   ecx
  41c134:	sar    DWORD PTR [edi+0x3],0x8b
  41c138:	(bad)  
  41c139:	fs sti 
  41c13b:	neg    BYTE PTR [ecx]
  41c13d:	dec    ebx
  41c13e:	and    al,0xe
  41c140:	xor    DWORD PTR [edx+0x16],edx
  41c143:	xlat   BYTE PTR ds:[ebx]
  41c144:	fsubr  DWORD PTR [edx+ebp*1+0x49]
  41c148:	pop    ecx
  41c149:	aam    0x31
  41c14b:	sub    eax,0xd71f093b
  41c150:	imul   ecx,ebp,0x8f0a103f
  41c156:	fs xchg ebp,eax
  41c158:	(bad)  
  41c15a:	push   es
  41c15b:	cld    
  41c15c:	popf   
  41c15d:	inc    esi
  41c15e:	(bad)  
  41c15f:	mov    cl,dl
  41c161:	shl    BYTE PTR [esp+edx*4-0x660195ac],1
  41c168:	push   ds
  41c169:	outs   dx,BYTE PTR ds:[esi]
  41c16a:	and    eax,0x3a4ab4b5
  41c16f:	repnz or DWORD PTR [esi+0x57b0f9be],eax
  41c176:	add    edx,0x89870a81
  41c17c:	jmp    0x41c137
  41c17e:	sbb    al,0xab
  41c180:	and    eax,0x9a5107b4
  41c185:	iret   
  41c186:	sub    al,dl
  41c188:	xor    al,0x99
  41c18a:	xor    eax,DWORD PTR [ebp+0x4c]
  41c18d:	aas    
  41c18e:	ins    BYTE PTR es:[edi],dx
  41c18f:	movsx  eax,WORD PTR [edx]
  41c192:	(bad)  
  41c193:	jle    0x41c11d
  41c195:	or     edi,esp
  41c197:	lock mov ds:0x8eacf754,al
  41c19d:	pop    ecx
  41c19e:	les    ebp,FWORD PTR [eax]
  41c1a0:	sbb    ebx,DWORD PTR [esi+ecx*1+0x311898f9]
  41c1a7:	inc    ecx
  41c1a8:	(bad)  
  41c1a9:	daa    
  41c1aa:	ins    BYTE PTR es:[edi],dx
  41c1ab:	fcomp  QWORD PTR [eax]
  41c1ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ae:	imul   ebx,eax,0xe54baa64
  41c1b4:	aad    0x10
  41c1b6:	jne    0x41c1f4
  41c1b8:	pop    ss
  41c1b9:	cwde   
  41c1ba:	jge    0x41c1b0
  41c1bc:	repz adc eax,DWORD PTR [edi+0x3b]
  41c1c0:	neg    BYTE PTR [esi]
  41c1c2:	aam    0xc5
  41c1c4:	shl    ebp,cl
  41c1c6:	pushf  
  41c1c7:	push   ebx
  41c1c8:	jmp    FWORD PTR [ecx-0x33bdb21b]
  41c1ce:	mov    ecx,0x909aaa67
  41c1d3:	ins    DWORD PTR es:[edi],dx
  41c1d4:	add    eax,0xceb77bb4
  41c1d9:	nop
  41c1da:	add    eax,0xc6abb5a
  41c1df:	mov    dh,0x88
  41c1e1:	pop    ebp
  41c1e2:	xchg   edi,eax
  41c1e3:	fcmovnb st,st(7)
  41c1e5:	add    ecx,ebx
  41c1e7:	sbb    al,dl
  41c1e9:	iret   
  41c1ea:	sub    cl,BYTE PTR [esi]
  41c1ec:	xchg   DWORD PTR [edi+0x30],eax
  41c1ef:	adc    BYTE PTR [eax+0x2a95f7ce],al
  41c1f5:	xchg   ebx,eax
  41c1f6:	cmp    DWORD PTR [ebx+0x1fb221fe],esp
  41c1fc:	mov    al,0xe
  41c1fe:	mov    bl,0x4f
  41c200:	push   eax
  41c201:	sub    DWORD PTR [eax],ecx
  41c203:	xchg   ebx,eax
  41c204:	dec    DWORD PTR [eax+ecx*8+0x5b]
  41c208:	fdivr  st(6),st
  41c20a:	jnp    0x41c245
  41c20c:	mov    ss,WORD PTR [eax-0x9]
  41c20f:	fild   DWORD PTR [ebx+0x53]
  41c212:	in     eax,0x1f
  41c214:	inc    esp
  41c215:	pop    esp
  41c216:	outs   dx,BYTE PTR ds:[esi]
  41c217:	dec    esp
  41c218:	or     al,BYTE PTR [edx-0x3a]
  41c21b:	mov    eax,0x66dc96dc
  41c220:	sti    
  41c221:	jecxz  0x41c1d3
  41c223:	repz into 
  41c225:	mov    bl,0xa6
  41c227:	inc    ecx
  41c228:	cld    
  41c229:	xor    DWORD PTR [edx],esp
  41c22b:	(bad)  
  41c22c:	adc    esi,DWORD PTR [bp-0x7c5f]
  41c231:	fild   DWORD PTR [edi-0x1b]
  41c234:	mov    esi,DWORD PTR [ecx+0x74466663]
  41c23a:	xlat   BYTE PTR ds:[ebx]
  41c23b:	cmovg  edx,ebp
  41c23e:	int3   
  41c23f:	retf   
  41c240:	jns    0x41c28e
  41c242:	xchg   edi,eax
  41c243:	lock lds ebx,FWORD PTR [ebx+eax*4]
  41c247:	push   0xbc41fad2
  41c24c:	push   edx
  41c24d:	jno    0x41c210
  41c24f:	not    DWORD PTR [ebx-0x3c73cf6c]
  41c255:	jmp    0x41c283
  41c257:	imul   ecx,DWORD PTR [ecx],0xffffffc9
  41c25a:	(bad)  
  41c25b:	and    DWORD PTR [edx+0x33085d5b],edi
  41c261:	jl     0x41c252
  41c263:	jnp    0x41c1fe
  41c265:	inc    edx
  41c266:	jo     0x41c25f
  41c268:	inc    esp
  41c269:	ror    BYTE PTR [ebp+0x3f3389c6],1
  41c26f:	xchg   edi,eax
  41c270:	adc    al,0x2
  41c272:	sub    esp,edi
  41c274:	push   ebx
  41c275:	cs addr16 jne 0x41c210
  41c279:	mov    al,ds:0x716e8dae
  41c27e:	xchg   ebx,eax
  41c27f:	lahf   
  41c280:	or     BYTE PTR [esi+0x48ca84f2],dh
  41c286:	repnz dec edi
  41c288:	imul   DWORD PTR [esi+0x65c1b968]
  41c28e:	je     0x41c2f7
  41c290:	jg     0x41c252
  41c292:	sbb    DWORD PTR [ebx],ebp
  41c294:	lock push 0x67
  41c297:	pop    esi
  41c298:	cli    
  41c299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c29a:	cmp    BYTE PTR [ebx],dh
  41c29c:	push   edx
  41c29d:	scas   al,BYTE PTR es:[edi]
  41c29e:	jge    0x41c2f0
  41c2a0:	push   0xdf3b237b
  41c2a5:	call   0xa861:0x7a3c308a
  41c2ac:	push   edi
  41c2ad:	mov    ah,0x1c
  41c2af:	cdq    
  41c2b0:	in     al,0x86
  41c2b2:	mov    DWORD PTR [esi],esi
  41c2b4:	sbb    eax,DWORD PTR [esi]
  41c2b6:	mov    esi,0x9b0efee2
  41c2bc:	sti    
  41c2bd:	add    ebp,DWORD PTR [ecx]
  41c2bf:	and    DWORD PTR [edi],esp
  41c2c1:	inc    esp
  41c2c2:	sbb    eax,0x38be40ef
  41c2c7:	mov    BYTE PTR [ebx-0x2e],dl
  41c2ca:	shr    BYTE PTR [edi+0x12],0xc0
  41c2ce:	test   al,0xfe
  41c2d0:	test   BYTE PTR [ebp-0x2a],ch
  41c2d3:	cmp    ah,BYTE PTR [edi]
  41c2d5:	enter  0x7611,0xb7
  41c2d9:	inc    eax
  41c2da:	int3   
  41c2db:	add    eax,esi
  41c2dd:	loopne 0x41c27e
  41c2df:	sbb    DWORD PTR [esi+0x24d8dd13],ecx
  41c2e5:	xor    DWORD PTR [ecx+0x72d068da],ebx
  41c2eb:	pop    ebx
  41c2ec:	adc    al,0xf8
  41c2ee:	cmp    DWORD PTR [ecx+0x49],0x72
  41c2f2:	push   eax
  41c2f3:	cmp    al,0x78
  41c2f5:	int    0xb3
  41c2f7:	pop    ss
  41c2f8:	push   cs
  41c2f9:	outs   dx,DWORD PTR ds:[esi]
  41c2fa:	or     DWORD PTR [esi+0x2],ecx
  41c2fd:	and    dl,0x54
  41c300:	mov    edi,0x4ea861e4
  41c305:	inc    edx
  41c306:	rcl    DWORD PTR [eax+0x6d1428ef],0x5f
  41c30d:	aam    0x12
  41c30f:	cli    
  41c310:	adc    DWORD PTR [eax],ebx
  41c312:	fidiv  DWORD PTR [ebx+ebx*1-0x43]
  41c316:	mov    esp,gs
  41c318:	jle    0x41c2e0
  41c31a:	out    dx,al
  41c31b:	call   0x8b875645
  41c320:	repz inc esp
  41c322:	mov    esi,0xf5fba79d
  41c327:	xor    DWORD PTR [ecx-0x78],ecx
  41c32a:	(bad)  
  41c32b:	mov    ebp,0x18211d03
  41c330:	stos   BYTE PTR es:[edi],al
  41c331:	mov    ch,0x36
  41c333:	repnz fs dec eax
  41c336:	lods   al,BYTE PTR ds:[esi]
  41c337:	imul   ebp,DWORD PTR [edi],0xd34ef47
  41c33d:	ins    DWORD PTR es:[edi],dx
  41c33e:	jecxz  0x41c2ef
  41c340:	cmp    DWORD PTR [esi-0x29db4dfc],eax
  41c346:	and    al,0xe7
  41c348:	cwde   
  41c349:	int3   
  41c34a:	jb     0x41c300
  41c34c:	inc    esp
  41c34d:	add    esi,ebp
  41c34f:	pop    bp
  41c351:	call   0x3d4a3bce
  41c356:	push   esi
  41c357:	sbb    eax,0xd79a90ea
  41c35c:	adc    eax,0x9d9d34bb
  41c361:	cmp    eax,ebx
  41c363:	adc    bl,BYTE PTR [eax]
  41c365:	sbb    ah,BYTE PTR [esi]
  41c367:	pop    ebp
  41c368:	dec    ebx
  41c369:	or     ebx,ebx
  41c36b:	out    0xd0,al
  41c36d:	add    edi,eax
  41c36f:	add    ch,bh
  41c371:	pusha  
  41c372:	inc    esi
  41c373:	ja     0x41c3a2
  41c375:	repz pop esp
  41c377:	(bad)  
  41c378:	cmp    eax,0x58b69840
  41c37d:	or     esi,DWORD PTR [eax-0x555bc10d]
  41c383:	adc    DWORD PTR [edi+0x42b42583],edi
  41c389:	stc    
  41c38a:	jle    0x41c3a5
  41c38c:	out    dx,eax
  41c38d:	xor    bl,dh
  41c38f:	push   eax
  41c390:	ror    BYTE PTR [esi],0x75
  41c393:	ret    0x7692
  41c396:	jae    0x41c3d0
  41c398:	sub    al,0x3b
  41c39a:	mov    edx,0x1a885860
  41c39f:	repnz rcl DWORD PTR [ebx],cl
  41c3a2:	popf   
  41c3a3:	inc    ecx
  41c3a4:	inc    esi
  41c3a5:	pop    esi
  41c3a6:	stos   BYTE PTR es:[edi],al
  41c3a7:	ret    0xb944
  41c3aa:	lods   eax,DWORD PTR ds:[esi]
  41c3ab:	sub    ah,dh
  41c3ad:	fisttp QWORD PTR [esi]
  41c3af:	mov    ds:0xc3cd24a5,al
  41c3b4:	aam    0xf5
  41c3b6:	shr    BYTE PTR [edx-0x2cab6080],cl
  41c3bc:	jno    0x41c41a
  41c3be:	jb     0x41c370
  41c3c0:	xchg   BYTE PTR [eax],ah
  41c3c2:	popf   
  41c3c3:	or     dl,BYTE PTR [esi]
  41c3c5:	jl     0x41c37e
  41c3c7:	sbb    DWORD PTR [ebp+0x3c72a959],esp
  41c3cd:	jecxz  0x41c3d2
  41c3cf:	adc    BYTE PTR [si-0x564a],dh
  41c3d4:	sahf   
  41c3d5:	ds push ecx
  41c3d7:	mul    BYTE PTR [esi]
  41c3d9:	xchg   esi,eax
  41c3da:	mov    ebx,0x1af432f
  41c3df:	ins    BYTE PTR es:[edi],dx
  41c3e0:	rcl    BYTE PTR [esi+eax*1],0xa5
  41c3e4:	aam    0x26
  41c3e6:	imul   eax,ebp,0x20f878b2
  41c3ec:	repnz cmp ebp,DWORD PTR [ebp+0x79]
  41c3f0:	sub    al,0xa9
  41c3f2:	test   DWORD PTR [esi-0x24c8d2da],ebp
  41c3f8:	out    0x10,eax
  41c3fa:	pop    edi
  41c3fb:	sub    al,0xaa
  41c3fd:	cmp    edi,DWORD PTR [esi]
  41c3ff:	jns    0x41c454
  41c401:	adc    DWORD PTR [ecx],edi
  41c403:	arpl   WORD PTR [edx+ebp*8-0x5],dx
  41c407:	dec    cx
  41c409:	hlt    
  41c40a:	sbb    ch,BYTE PTR [ecx]
  41c40c:	mov    ebp,0x7228c79e
  41c411:	xchg   ebp,esi
  41c413:	shr    BYTE PTR [eax],0xad
  41c416:	lods   eax,DWORD PTR ds:[esi]
  41c417:	sub    esi,DWORD PTR [edi]
  41c419:	push   esi
  41c41a:	dec    esi
  41c41b:	add    edi,DWORD PTR [edi-0xf396ca]
  41c421:	or     edx,DWORD PTR [ecx]
  41c423:	jb     0x41c42a
  41c425:	mov    ah,0xb7
  41c427:	(bad)  
  41c428:	xchg   esp,eax
  41c429:	mov    eax,0x783b16d4
  41c42e:	xchg   esi,eax
  41c42f:	cmp    dh,BYTE PTR [eax]
  41c431:	sbb    al,al
  41c433:	xchg   ebp,eax
  41c434:	ret    
  41c435:	cmp    al,0xe6
  41c437:	and    eax,0x24c9c161
  41c43c:	aam    0x2b
  41c43e:	rcr    dh,cl
  41c440:	(bad)  [ebx]
  41c442:	sbb    ebx,0xa53ff68d
  41c448:	jae    0x41c4c5
  41c44a:	popf   
  41c44b:	sbb    eax,0xffba2949
  41c450:	fimul  DWORD PTR [esi-0x7b]
  41c453:	fist   WORD PTR [edi]
  41c455:	push   ecx
  41c456:	stos   DWORD PTR es:[edi],eax
  41c457:	jnp    0x41c488
  41c459:	jle    0x41c4bd
  41c45b:	in     eax,0xdd
  41c45d:	sar    BYTE PTR [esi],1
  41c45f:	mov    ebp,0x741d6ca0
  41c464:	mov    ebp,0xe66cbd2a
  41c469:	ds gs jmp 0x60b53f49
  41c470:	xchg   edi,ecx
  41c472:	adc    BYTE PTR [edx],bh
  41c474:	inc    ebp
  41c475:	push   ebx
  41c476:	fwait
  41c477:	jg     0x41c40d
  41c479:	aam    0x4
  41c47b:	repnz test eax,0xcf15dfb4
  41c481:	adc    bl,cl
  41c483:	shl    BYTE PTR [ecx+0x4],cl
  41c486:	popa   
  41c487:	nop
  41c488:	lahf   
  41c489:	push   ebp
  41c48a:	test   eax,0x3f7eaa90
  41c48f:	test   DWORD PTR [edx+0x7e],edi
  41c492:	dec    edx
  41c493:	push   eax
  41c494:	retf   0xf95
  41c497:	pop    ecx
  41c498:	retf   0x69c5
  41c49b:	ret    
  41c49c:	xlat   BYTE PTR ds:[ebx]
  41c49d:	sub    eax,DWORD PTR [ebp-0x46]
  41c4a0:	add    dl,dl
  41c4a2:	in     al,0xf4
  41c4a4:	cmp    DWORD PTR [eax],ecx
  41c4a6:	loop   0x41c45e
  41c4a8:	jns    0x41c516
  41c4aa:	adc    DWORD PTR [esi-0x26b48539],ecx
  41c4b0:	sub    eax,0x95d6da9f
  41c4b5:	inc    esi
  41c4b6:	repz add edi,DWORD PTR ss:[edx-0x21b197ac]
  41c4be:	test   eax,0xfa76d56a
  41c4c3:	scas   al,BYTE PTR es:[edi]
  41c4c4:	inc    DWORD PTR [eiz*1+0x6b57e257]
  41c4cb:	xchg   edx,eax
  41c4cc:	add    BYTE PTR [esi+0x15],ch
  41c4cf:	(bad)  
  41c4d0:	in     al,0x31
  41c4d2:	inc    esp
  41c4d3:	das    
  41c4d4:	fisubr DWORD PTR ds:0xd809ffbe
  41c4da:	shl    ebp,1
  41c4dc:	mov    dh,0xbf
  41c4de:	mov    al,ds:0x30072dfb
  41c4e3:	and    edi,esp
  41c4e5:	or     BYTE PTR [ecx-0x3d50feff],ah
  41c4eb:	int3   
  41c4ec:	mov    ebx,0x626277e5
  41c4f1:	out    dx,al
  41c4f2:	cli    
  41c4f3:	mov    ah,0x84
  41c4f5:	mov    ebx,0x29132aa
  41c4fa:	xor    BYTE PTR [ebx+0x5e481b27],ah
  41c500:	adc    DWORD PTR [ebx+ebx*1-0x30],0x984b2a56
  41c508:	out    dx,eax
  41c509:	jb     0x41c4bf
  41c50b:	ins    BYTE PTR es:[edi],dx
  41c50c:	retf   
  41c50d:	mov    bl,BYTE PTR [esi+0x1b]
  41c510:	pop    esi
  41c511:	dec    edx
  41c512:	push   ds
  41c513:	mov    DWORD PTR [edi+edi*4],ebp
  41c516:	jmp    0x1ed0:0x27a2742d
  41c51d:	mov    al,0xcf
  41c51f:	mov    edi,0x3d90a129
  41c524:	cmp    DWORD PTR [esi+0x1c8e10c5],edx
  41c52a:	xchg   esi,eax
  41c52b:	sahf   
  41c52c:	inc    eax
  41c52d:	sahf   
  41c52e:	fwait
  41c52f:	adc    DWORD PTR [edi+0x74],0x15
  41c533:	sbb    dl,BYTE PTR [ebx]
  41c535:	int3   
  41c536:	les    ebx,FWORD PTR [edx+0x73a0562a]
  41c53c:	sub    al,BYTE PTR [esi+0x3]
  41c53f:	les    ebp,FWORD PTR [ecx]
  41c541:	(bad)
  41c544:	and    al,0x88
  41c546:	sbb    al,0x23
  41c548:	ins    DWORD PTR es:[edi],dx
  41c549:	sub    ecx,DWORD PTR [esi]
  41c54b:	mov    al,0x42
  41c54d:	xor    ch,BYTE PTR [edi+eax*4+0x6c]
  41c551:	dec    edi
  41c552:	mov    cl,0xd6
  41c554:	jle    0x41c515
  41c556:	pop    edi
  41c557:	in     al,dx
  41c558:	mov    DWORD PTR [bx],ecx
  41c55b:	or     DWORD PTR [ecx+edx*8-0x4],esi
  41c55f:	test   DWORD PTR [ecx-0x51f747d6],edi
  41c565:	jle    0x41c518
  41c567:	outs   dx,BYTE PTR ds:[esi]
  41c568:	xor    BYTE PTR [ebp+0x2eb28e53],ch
  41c56e:	and    al,dh
  41c570:	call   0x7b9b:0xe9a83b45
  41c577:	dec    ecx
  41c578:	push   ebx
  41c579:	fistp  QWORD PTR [esp+edi*2-0x162fa82c]
  41c580:	lods   eax,DWORD PTR ds:[esi]
  41c581:	dec    eax
  41c582:	inc    esp
  41c583:	pop    ebp
  41c584:	push   ebx
  41c585:	inc    esp
  41c586:	les    esp,FWORD PTR [ebp-0x3c4cb624]
  41c58c:	sub    ch,al
  41c58e:	shr    BYTE PTR [edi-0x29],1
  41c591:	neg    BYTE PTR [ebx]
  41c593:	and    eax,0x36a27bc0
  41c598:	and    eax,0x83237686
  41c59d:	lods   eax,DWORD PTR ds:[esi]
  41c59e:	imul   ebp,esp,0x9ed3719e
  41c5a4:	sbb    eax,0xf56ddc5b
  41c5a9:	(bad)  
  41c5aa:	mov    dl,0xa9
  41c5ac:	sub    ah,BYTE PTR [ebx-0x71]
  41c5af:	cmp    eax,DWORD PTR [ecx+0x3e]
  41c5b2:	jp     0x41c626
  41c5b4:	xchg   esp,eax
  41c5b5:	(bad)  
  41c5b6:	fucomi st,st(6)
  41c5b8:	in     eax,dx
  41c5b9:	push   ss
  41c5ba:	xchg   esi,eax
  41c5bb:	repnz sahf 
  41c5bd:	mov    edx,0x21e4109
  41c5c2:	inc    ebx
  41c5c4:	in     al,dx
  41c5c5:	jmp    0xe0618026
  41c5ca:	cmc    
  41c5cb:	ror    DWORD PTR [edi+0xb],0xac
  41c5cf:	xlat   BYTE PTR ds:[ebx]
  41c5d0:	or     dh,dh
  41c5d2:	loop   0x41c61d
  41c5d4:	and    bl,BYTE PTR [ebx+0x41]
  41c5d7:	xchg   edi,eax
  41c5d8:	adc    al,ch
  41c5da:	mov    edi,0x2004a048
  41c5df:	fidivr DWORD PTR [ebx-0x4b]
  41c5e2:	mov    ah,0x6f
  41c5e4:	pop    ecx
  41c5e5:	xchg   ebx,eax
  41c5e6:	test   al,bh
  41c5e8:	add    eax,DWORD PTR [edx-0x691c32e9]
  41c5ee:	jbe    0x41c639
  41c5f0:	sub    eax,DWORD PTR [esi+0x39]
  41c5f3:	add    al,0x48
  41c5f5:	push   edi
  41c5f6:	xor    edx,esi
  41c5f8:	dec    eax
  41c5f9:	xor    al,0x32
  41c5fb:	or     DWORD PTR [edx-0x7baa3b11],ebp
  41c601:	imul   ebp,DWORD PTR ds:0xa4b0ea79,0x51
  41c608:	cmp    ch,BYTE PTR [ebp-0x369697f9]
  41c60e:	push   esp
  41c60f:	mul    DWORD PTR [eax+0x4f]
  41c612:	dec    edx
  41c613:	mov    ebx,0x31c49c00
  41c618:	outs   dx,BYTE PTR ds:[esi]
  41c619:	je     0x41c683
  41c61b:	repnz sar BYTE PTR [edx-0xe8e52a2],cl
  41c622:	mov    ah,ah
  41c624:	xchg   edx,eax
  41c625:	push   cs
  41c626:	jo     0x41c5eb
  41c628:	mov    al,dh
  41c62a:	(bad)  
  41c62c:	aaa    
  41c62d:	js     0x41c603
  41c62f:	stos   DWORD PTR es:[edi],eax
  41c630:	push   ebx
  41c631:	mov    dh,0xdb
  41c633:	mov    eax,0xe8628a8
  41c638:	dec    eax
  41c639:	xchg   edx,eax
  41c63a:	mov    bh,0x3
  41c63c:	push   0x24
  41c63e:	int    0xc0
  41c640:	ins    BYTE PTR es:[edi],dx
  41c641:	addr16 push 0x7e97b5cb
  41c647:	fwait
  41c648:	add    dh,BYTE PTR [edx]
  41c64a:	dec    esp
  41c64b:	data16 and al,0xdb
  41c64e:	std    
  41c64f:	fwait
  41c650:	add    al,0x44
  41c652:	(bad)
  41c655:	loope  0x41c696
  41c657:	or     dl,0xd5
  41c65a:	dec    eax
  41c65b:	push   ds
  41c65c:	and    esi,DWORD PTR [esi+0x22]
  41c65f:	xor    ah,dl
  41c661:	call   0x682c:0x4ca6ce3d
  41c668:	xchg   edi,eax
  41c669:	push   eax
  41c66a:	push   0xffffffb3
  41c66c:	mov    bl,0x2c
  41c66e:	jae    0x41c604
  41c670:	mov    esp,DWORD PTR [ebx]
  41c672:	jl     0x41c670
  41c674:	cld    
  41c675:	xor    BYTE PTR [edx],0xaf
  41c678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c679:	repnz retf 
  41c67b:	clc    
  41c67c:	push   ss
  41c67d:	loopne 0x41c6f7
  41c67f:	dec    edi
  41c680:	div    dl
  41c682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c683:	out    dx,eax
  41c684:	xor    al,0xad
  41c686:	xor    BYTE PTR [eax-0x737fe16],0xe2
  41c68d:	sub    DWORD PTR [ebx-0x707d6e45],esp
  41c693:	mov    esp,0xfb5c19ba
  41c698:	xor    al,0xab
  41c69a:	(bad)  
  41c69b:	jne    0x41c673
  41c69d:	adc    al,0x49
  41c69f:	iret   
  41c6a0:	fbstp  TBYTE PTR [ebx-0x28]
  41c6a3:	mov    ecx,DWORD PTR [eax]
  41c6a5:	(bad)  
  41c6a6:	or     DWORD PTR [esi-0x34468d01],edx
  41c6ac:	or     BYTE PTR [ebp+0x7f7db473],0xf4
  41c6b3:	xor    BYTE PTR [esi],0x29
  41c6b6:	fs mov edx,0x22203c55
  41c6bc:	(bad)  
  41c6be:	lahf   
  41c6bf:	mov    bh,0xb0
  41c6c1:	ror    BYTE PTR [ecx-0x4],1
  41c6c4:	dec    edx
  41c6c5:	(bad)  
  41c6c6:	adc    dh,bh
  41c6c8:	mov    ds:0xec0fd081,eax
  41c6cd:	cmp    dh,BYTE PTR [edx+0x52]
  41c6d0:	retf   0x1cf0
  41c6d3:	daa    
  41c6d4:	adc    BYTE PTR [edx+edx*2],ah
  41c6d7:	scas   eax,DWORD PTR es:[edi]
  41c6d8:	mov    ds:0x4b9fd22c,al
  41c6dd:	outs   dx,BYTE PTR ds:[esi]
  41c6de:	in     eax,dx
  41c6df:	aas    
  41c6e0:	retf   0x24f3
  41c6e3:	jne    0x41c6b3
  41c6e5:	push   fs
  41c6e7:	push   ds
  41c6e8:	adc    dl,BYTE PTR [ecx]
  41c6ea:	out    dx,al
  41c6eb:	aam    0xd7
  41c6ed:	fiadd  WORD PTR [eax+0x559ff397]
  41c6f3:	mov    esp,0xb1589ee0
  41c6f8:	jb     0x41c696
  41c6fa:	inc    eax
  41c6fb:	aaa    
  41c6fc:	adc    DWORD PTR [ebp+ebx*8+0x11],esp
  41c700:	retf   0x9ab4
  41c703:	sbb    dl,BYTE PTR [ebx+0x63]
  41c706:	lds    ebx,FWORD PTR [edx]
  41c708:	mov    bl,0x2f
  41c70a:	test   BYTE PTR [eax+ebp*1],ah
  41c70d:	int    0x72
  41c70f:	mov    dl,0x5
  41c711:	out    0x0,al
  41c713:	cs push cs
  41c715:	std    
  41c716:	test   ah,dh
  41c718:	data16 (bad) 
  41c71a:	fidivr DWORD PTR [ebp-0x12d4a493]
  41c720:	bound  ecx,QWORD PTR [esi]
  41c722:	das    
  41c723:	and    ebp,eax
  41c725:	sar    BYTE PTR [ecx+0x5569822d],0x9a
  41c72c:	xchg   esi,eax
  41c72d:	jg     0x41c761
  41c72f:	cmp    bl,bh
  41c731:	retf   
  41c732:	in     al,0xa9
  41c734:	ins    DWORD PTR es:[edi],dx
  41c735:	out    0x0,eax
  41c737:	loop   0x41c700
  41c739:	xor    DWORD PTR [esi+0x2c9802e4],edi
  41c73f:	sub    BYTE PTR [ecx+0x36],bh
  41c742:	push   es
  41c743:	push   ss
  41c744:	adc    al,0x60
  41c746:	pop    es
  41c747:	xlat   BYTE PTR ds:[ebx]
  41c748:	nop
  41c749:	mov    esi,0x4ba75104
  41c74e:	inc    eax
  41c74f:	xor    dl,BYTE PTR [ebx+0x28]
  41c752:	out    0x1c,al
  41c754:	add    esi,edi
  41c756:	imul   sp,WORD PTR [ecx],0xffc5
  41c75a:	pop    edx
  41c75b:	jae    0x41c6df
  41c75d:	clc    
  41c75e:	xchg   edi,eax
  41c75f:	(bad)  
  41c760:	stos   DWORD PTR es:[edi],eax
  41c761:	inc    esi
  41c762:	pop    dx
  41c764:	cmovp  ecx,DWORD PTR [edi-0x27]
  41c768:	shr    BYTE PTR [ebp+0x8e81bff],cl
  41c76e:	cli    
  41c76f:	mov    ebp,0x93a07203
  41c774:	retf   
  41c775:	test   esp,ecx
  41c777:	arpl   WORD PTR [edx],sp
  41c779:	(bad)  
  41c77b:	jle    0x41c739
  41c77d:	arpl   WORD PTR [esi],dx
  41c77f:	mov    ebx,0x87d20c53
  41c784:	jecxz  0x41c7fc
  41c786:	and    DWORD PTR [ebx-0x26942c2a],ebx
  41c78c:	inc    edx
  41c78d:	inc    ebx
  41c78e:	and    ebx,DWORD PTR [esi+0x2f51e5ff]
  41c794:	add    BYTE PTR [ebp+0x458178ae],0xdc
  41c79b:	mov    bl,0xb2
  41c79d:	test   al,0x18
  41c79f:	ja     0x41c73e
  41c7a1:	xor    BYTE PTR [ecx-0x19],al
  41c7a4:	pop    es
  41c7a5:	in     al,0x8d
  41c7a7:	adc    ecx,esp
  41c7a9:	inc    eax
  41c7aa:	xchg   esi,eax
  41c7ab:	mov    DWORD PTR [ebx-0x1e],edi
  41c7ae:	mov    ds:0x9e5c0a4e,al
  41c7b3:	mov    BYTE PTR [edi],dl
  41c7b5:	arpl   WORD PTR [ebx+0x72c9afa8],bp
  41c7bb:	fs jmp 0x41c7b4
  41c7be:	aaa    
  41c7bf:	inc    esp
  41c7c0:	retf   
  41c7c1:	in     al,0x0
  41c7c3:	jns    0x41c766
  41c7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7c6:	add    bh,BYTE PTR [ecx]
  41c7c8:	dec    edi
  41c7c9:	gs jp  0x41c796
  41c7cc:	(bad)  
  41c7cd:	push   cs
  41c7ce:	add    edx,ecx
  41c7d0:	std    
  41c7d1:	sbb    BYTE PTR [ebx],ch
  41c7d3:	mov    ch,0xd
  41c7d5:	mov    edx,0xc8dafe99
  41c7da:	in     al,dx
  41c7db:	push   0x718d2c8a
  41c7e0:	mov    cl,0x64
  41c7e2:	fcmovb st,st(1)
  41c7e4:	push   0x15feea3
  41c7e9:	adc    al,0x7d
  41c7eb:	int    0x52
  41c7ed:	xchg   edx,eax
  41c7ee:	inc    edi
  41c7ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7f0:	dec    edx
  41c7f1:	inc    esi
  41c7f2:	retf   
  41c7f3:	jns    0x41c83e
  41c7f5:	cmp    al,0x42
  41c7f7:	(bad)  
  41c7f8:	retf   
  41c7f9:	out    dx,ax
  41c7fb:	stc    
  41c7fc:	in     eax,0x3e
  41c7fe:	mov    ecx,0xecfec410
  41c803:	xchg   BYTE PTR [eax-0x60],cl
  41c806:	sbb    DWORD PTR [ebx+0x35],edx
  41c809:	jle    0x41c7d3
  41c80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c80c:	cmp    al,0x75
  41c80e:	sub    al,BYTE PTR [esp+ebp*8-0x53535e80]
  41c815:	mov    dl,0x95
  41c817:	push   edi
  41c818:	push   cs
  41c819:	(bad)  
  41c81a:	xchg   ebx,eax
  41c81b:	out    0x83,al
  41c81d:	frstor [edi]
  41c81f:	data16 das 
  41c821:	lahf   
  41c822:	or     eax,0xec72c5b5
  41c827:	hlt    
  41c828:	push   eax
  41c829:	mov    ch,0x3b
  41c82b:	adc    al,0x7a
  41c82d:	mov    bh,0xf1
  41c82f:	stos   DWORD PTR es:[edi],eax
  41c830:	stos   BYTE PTR es:[edi],al
  41c831:	icebp  
  41c832:	adc    dl,bl
  41c834:	fistp  WORD PTR [edx-0x108e7c9e]
  41c83a:	mov    ss,WORD PTR [ecx+0x795a2f3f]
  41c840:	adc    DWORD PTR [ebx-0x7e],edi
  41c843:	imul   ebx,DWORD PTR [edi-0x6373a4fc],0xed8be25f
  41c84d:	addr16 loope 0x41c870
  41c850:	(bad)  
  41c851:	and    eax,0x8e5f5357
  41c856:	xchg   ebx,eax
  41c857:	mov    esi,esi
  41c859:	sub    ebp,esp
  41c85b:	daa    
  41c85c:	mov    dh,0xdb
  41c85e:	clc    
  41c85f:	(bad)  
  41c860:	jbe    0x41c89e
  41c862:	xor    BYTE PTR [eax-0x79],0xe5
  41c866:	mov    esp,ebp
  41c868:	inc    ebp
  41c869:	icebp  
  41c86a:	out    dx,eax
  41c86b:	enter  0xb087,0x98
  41c86f:	push   ecx
  41c870:	int    0xff
  41c872:	and    ebp,ebp
  41c874:	xor    al,0xb4
  41c876:	gs mov edi,0xa010880c
  41c87c:	test   BYTE PTR ds:0xa99be995,dl
  41c882:	dec    edx
  41c883:	pushf  
  41c884:	clc    
  41c885:	rcr    DWORD PTR [edi-0x21],0x1f
  41c889:	sti    
  41c88a:	rol    BYTE PTR [ebx+ecx*2-0x29],0xea
  41c88f:	retf   0xb468
  41c892:	cmp    al,0x8f
  41c894:	and    BYTE PTR [edx+0x200901b6],dl
  41c89a:	mov    eax,eax
  41c89c:	or     BYTE PTR [eax],ch
  41c89e:	adc    bh,al
  41c8a0:	and    DWORD PTR [edi+0x10],edx
  41c8a3:	mov    ebp,0x1d4a483
  41c8a8:	add    eax,0xb3d4dc7d
  41c8ad:	ins    BYTE PTR es:[edi],dx
  41c8ae:	and    ebp,DWORD PTR [esi+eiz*8-0x4172369d]
  41c8b5:	sub    eax,0x9b95a24
  41c8ba:	aaa    
  41c8bb:	dec    edx
  41c8bc:	pop    edx
  41c8bd:	adc    esp,eax
  41c8bf:	or     DWORD PTR [ebp+edx*4-0xd],ebx
  41c8c3:	imul   ecx,ecx,0x48
  41c8c6:	loop   0x41c8d2
  41c8c8:	mov    ebx,0x22c9acb1
  41c8cd:	dec    ebx
  41c8ce:	retf   0x8ef8
  41c8d1:	sbb    DWORD PTR [edi-0x12ec037a],eax
  41c8d7:	sub    DWORD PTR [edx+0x6fea6831],eax
  41c8dd:	or     BYTE PTR [ecx],bl
  41c8df:	sub    DWORD PTR [edi+0x18],esp
  41c8e2:	call   0x64bdcd6d
  41c8e7:	test   BYTE PTR [esi],ah
  41c8e9:	and    edi,DWORD PTR [edx]
  41c8eb:	inc    esi
  41c8ec:	sbb    DWORD PTR [edx+0xeff85f4],ecx
  41c8f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c8f3:	mov    esi,0xfd934a93
  41c8f8:	xlat   BYTE PTR ds:[ebx]
  41c8f9:	bound  ebp,QWORD PTR [edx+0x61]
  41c8fc:	ret    0x65b6
  41c8ff:	sbb    DWORD PTR [ecx+eax*8-0x1a6eac5c],edx
  41c906:	mov    cl,0xee
  41c908:	add    DWORD PTR [esi+0x2a],ebx
  41c90b:	mov    eax,ds:0x9af163b4
  41c910:	and    ebp,esi
  41c912:	pop    eax
  41c913:	aas    
  41c914:	(bad)
  41c918:	mov    edx,ebx
  41c91a:	mov    edx,esp
  41c91c:	sbb    DWORD PTR [ebx-0x41],eax
  41c91f:	jb     0x41c8c3
  41c921:	sub    BYTE PTR [ebx-0x49],bh
  41c924:	(bad)  
  41c925:	arpl   WORD PTR [esi+0x3e44b006],bx
  41c92b:	sub    eax,0x6e5af49b
  41c930:	(bad)  
  41c931:	loope  0x41c8e7
  41c933:	popf   
  41c934:	sub    DWORD PTR es:[esi],eax
  41c937:	mov    ecx,0x6cbe728b
  41c93c:	jns    0x41c939
  41c93e:	(bad)  
  41c93f:	jno    0x41c981
  41c941:	xchg   ecx,eax
  41c942:	fs gs mov edx,0xa09cc1d4
  41c949:	das    
  41c94a:	retf   0x8b73
  41c94d:	cmp    ecx,DWORD PTR [ecx-0x15fd7cf6]
  41c953:	sahf   
  41c954:	rcl    BYTE PTR [ecx-0x3e783755],1
  41c95a:	cmp    dh,dl
  41c95c:	mov    ch,0x71
  41c95e:	aam    0x8b
  41c960:	push   eax
  41c961:	xor    bl,al
  41c963:	jns    0x41c9b4
  41c965:	mov    bh,0x5a
  41c967:	add    BYTE PTR [edi],0xc5
  41c96a:	loop   0x41c9ad
  41c96c:	icebp  
  41c96d:	test   edx,ebp
  41c96f:	dec    esp
  41c970:	aam    0x20
  41c972:	int3   
  41c973:	out    0x0,eax
  41c975:	xchg   ebx,eax
  41c976:	adc    al,0x7a
  41c978:	push   es
  41c979:	mov    ebp,0x1a230c58
  41c97e:	add    al,0x44
  41c980:	lea    eax,[ecx-0x2239cc61]
  41c986:	push   edx
  41c987:	icebp  
  41c988:	pop    ss
  41c989:	leave  
  41c98a:	add    DWORD PTR [edx+0x1afd9388],eax
  41c990:	cwde   
  41c991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c992:	fisttp WORD PTR [esp+esi*2+0x7a]
  41c996:	in     al,0x70
  41c998:	pop    edi
  41c999:	cmp    DWORD PTR [eax],ebx
  41c99b:	sahf   
  41c99c:	xchg   edi,eax
  41c99d:	cmp    BYTE PTR [ebp-0x11028c0b],ch
  41c9a3:	add    eax,0x278c26b4
  41c9a8:	fnstsw WORD PTR [ebp-0x30]
  41c9ab:	add    eax,0x718857a9
  41c9b0:	stos   DWORD PTR es:[edi],eax
  41c9b1:	ins    DWORD PTR es:[edi],dx
  41c9b2:	pop    ecx
  41c9b3:	inc    edi
  41c9b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c9b5:	inc    esi
  41c9b6:	mov    ecx,0x2a0b2f1e
  41c9bb:	clc    
  41c9bc:	hlt    
  41c9bd:	inc    esp
  41c9be:	fucomp st(5)
  41c9c0:	or     al,bl
  41c9c2:	mov    ecx,DWORD PTR [ebp-0x21]
  41c9c5:	jno    0x41c9b8
  41c9c7:	xor    DWORD PTR [edx-0x67],ecx
  41c9ca:	into   
  41c9cb:	idiv   BYTE PTR [ebx-0x7cd8d482]
  41c9d1:	pop    ebx
  41c9d2:	add    esp,eax
  41c9d4:	jmp    0x41c98d
  41c9d6:	mov    esp,DWORD PTR [ebx+0x5faf3c9f]
  41c9dc:	xchg   dl,ch
  41c9de:	imul   eax,DWORD PTR [ebx-0x648fed7],0xffffff9a
  41c9e5:	sahf   
  41c9e6:	pop    es
  41c9e7:	mov    ebx,0x75b6dda1
  41c9ec:	mov    ah,0x78
  41c9ee:	push   0x85aa7f8c
  41c9f3:	mov    ebx,0xda88e391
  41c9f8:	xor    DWORD PTR cs:[edi],edx
  41c9fb:	(bad)  
  41c9fc:	ins    BYTE PTR es:[edi],dx
  41c9fd:	or     BYTE PTR [esi-0x70],ah
  41ca00:	pop    ebx
  41ca01:	mov    esp,0xd4fa2936
  41ca06:	inc    edi
  41ca07:	push   ecx
  41ca08:	shl    ch,cl
  41ca0a:	adc    al,0x51
  41ca0c:	adc    edi,DWORD PTR [ecx+0x17d5691a]
  41ca12:	outs   dx,BYTE PTR ds:[esi]
  41ca13:	je     0x41ca80
  41ca15:	sbb    al,0x6d
  41ca17:	cmp    al,0x7b
  41ca19:	mov    eax,0xb8ace9b9
  41ca1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca1f:	inc    edx
  41ca20:	push   eax
  41ca21:	cmp    ecx,ecx
  41ca23:	shr    dl,1
  41ca25:	mov    bh,0xd6
  41ca27:	jl     0x41ca0f
  41ca29:	pop    edx
  41ca2a:	fmul   DWORD PTR [ebp-0x48]
  41ca2d:	idiv   esp
  41ca2f:	inc    esp
  41ca30:	jp     0x41ca44
  41ca32:	adc    BYTE PTR [edx+0x4f7418f5],ah
  41ca38:	mov    esp,DWORD PTR [eax+0x39]
  41ca3b:	jae    0x41ca12
  41ca3d:	sub    ah,bh
  41ca3f:	sub    al,0xf2
  41ca41:	adc    eax,DWORD PTR [ebx]
  41ca43:	es adc al,0x4a
  41ca46:	xchg   esi,eax
  41ca47:	inc    edi
  41ca48:	les    eax,FWORD PTR [ecx-0x26]
  41ca4b:	loope  0x41cab0
  41ca4d:	inc    eax
  41ca4e:	imul   ebp,DWORD PTR [ebx+ecx*8+0x7d],0xffffffff
  41ca53:	sub    DWORD PTR [edi+0x334a31f9],0x6b
  41ca5a:	es stos BYTE PTR es:[edi],al
  41ca5c:	pop    esp
  41ca5d:	jl     0x41ca2a
  41ca5f:	in     al,0xaf
  41ca61:	inc    esp
  41ca62:	jns    0x41c9f0
  41ca64:	leave  
  41ca65:	add    DWORD PTR [ebx+0x25],ecx
  41ca68:	cmc    
  41ca69:	cdq    
  41ca6a:	jno    0x41cae2
  41ca6c:	mov    ch,0xf6
  41ca6e:	sti    
  41ca6f:	dec    esi
  41ca70:	lods   eax,DWORD PTR ds:[esi]
  41ca71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca72:	fiadd  DWORD PTR gs:0xac06d8ac
  41ca79:	push   eax
  41ca7a:	test   BYTE PTR [esi],al
  41ca7c:	iret   
  41ca7d:	dec    esp
  41ca7e:	fistp  QWORD PTR [ebx-0x23]
  41ca81:	icebp  
  41ca82:	iret   
  41ca83:	adc    BYTE PTR [ebp+0x61],0x53
  41ca87:	test   BYTE PTR [esi+0x69],ch
  41ca8a:	loope  0x41ca51
  41ca8c:	enter  0x5de8,0x79
  41ca90:	iret   
  41ca91:	das    
  41ca92:	repz adc BYTE PTR [ecx+0x4d7e568a],bh
  41ca99:	dec    ebp
  41ca9a:	test   al,0x72
  41ca9c:	xor    eax,0x4c2cd16b
  41caa1:	jbe    0x41cacc
  41caa3:	xor    eax,0x25e8816b
  41caa8:	jmp    0xf7d09a24
  41caad:	std    
  41caae:	shr    DWORD PTR [edi],1
  41cab0:	test   cl,al
  41cab2:	in     al,0xf3
  41cab4:	pop    ebx
  41cab5:	jae    0x41ca47
  41cab7:	xchg   BYTE PTR [eax+0x1cba0a09],al
  41cabd:	(bad)  
  41cabe:	lea    esp,[ecx-0x58ea23b9]
  41cac4:	and    cl,bh
  41cac6:	xor    esp,DWORD PTR ds:0xa206aa67
  41cacc:	fwait
  41cacd:	inc    ecx
  41cace:	mov    cl,0x83
  41cad0:	in     eax,0x5e
  41cad2:	push   ds
  41cad3:	mov    eax,ds:0xab5ab7a0
  41cad8:	test   al,0x87
  41cada:	mov    edi,0xe99f5e87
  41cadf:	les    ebp,FWORD PTR [esi+0x1f368652]
  41cae5:	xchg   BYTE PTR [ecx+0x4261c575],dh
  41caeb:	aad    0x6c
  41caed:	xchg   edx,eax
  41caee:	je     0x41cb0f
  41caf0:	xor    DWORD PTR [eax-0x37c27f24],0x91db9427
  41cafa:	lahf   
  41cafb:	into   
  41cafc:	jnp    0x41caff
  41cafe:	(bad)  
  41caff:	mov    eax,0xcff92cce
  41cb04:	arpl   WORD PTR [edx],bp
  41cb06:	in     eax,0x9b
  41cb08:	out    dx,al
  41cb09:	loop   0x41cb68
  41cb0b:	and    DWORD PTR ds:0xcc55899f,edi
  41cb11:	pop    ecx
  41cb12:	lods   al,BYTE PTR ds:[esi]
  41cb13:	fst    QWORD PTR [esi+0x6be80671]
  41cb19:	ror    BYTE PTR [eax+0x14],cl
  41cb1c:	xchg   esp,eax
  41cb1d:	mov    ah,0xd2
  41cb1f:	mov    esi,0xab55af65
  41cb24:	stos   BYTE PTR es:[edi],al
  41cb25:	sub    esi,DWORD PTR cs:[edx+0x7]
  41cb29:	jo     0x41cb25
  41cb2b:	or     DWORD PTR [ebx],ecx
  41cb2d:	dec    edi
  41cb2e:	icebp  
  41cb2f:	push   edx
  41cb30:	or     al,0x4
  41cb32:	sti    
  41cb33:	pop    edi
  41cb34:	push   0x440620b2
  41cb39:	xor    al,0x97
  41cb3b:	adc    DWORD PTR [ecx],0x7a
  41cb3e:	add    ch,bh
  41cb40:	ins    BYTE PTR es:[edi],dx
  41cb41:	mov    DWORD PTR [ecx-0x50],ebx
  41cb44:	adc    al,0x20
  41cb46:	out    0xe6,al
  41cb48:	test   bl,bl
  41cb4a:	xchg   ebp,eax
  41cb4b:	cs fs inc esi
  41cb4e:	pop    esi
  41cb4f:	ins    DWORD PTR es:[edi],dx
  41cb50:	mov    al,dh
  41cb52:	cdq    
  41cb53:	adc    esi,eax
  41cb55:	adc    al,0x15
  41cb57:	(bad)  
  41cb58:	pusha  
  41cb59:	les    ebp,FWORD PTR [ebx+0x54]
  41cb5c:	repnz test al,0x56
  41cb5f:	aad    0x25
  41cb61:	fadd   QWORD PTR cs:[edx]
  41cb64:	ds xchg edx,eax
  41cb66:	pusha  
  41cb67:	sbb    bh,bh
  41cb69:	pop    ecx
  41cb6a:	in     al,0xe4
  41cb6c:	adc    DWORD PTR [di],0x73f35f3b
  41cb73:	dec    esi
  41cb74:	and    eax,0xeb038697
  41cb79:	pop    edx
  41cb7a:	clc    
  41cb7b:	arpl   cx,bx
  41cb7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb7e:	sti    
  41cb7f:	inc    eax
  41cb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb81:	test   ebx,eax
  41cb83:	xchg   DWORD PTR [edi-0x44763933],esp
  41cb89:	test   ah,cl
  41cb8b:	inc    eax
  41cb8c:	adc    eax,0x1295d13c
  41cb91:	in     eax,dx
  41cb92:	add    eax,0xb7fbf0f9
  41cb97:	fs pop esp
  41cb99:	xchg   BYTE PTR [ecx],ah
  41cb9b:	gs push esi
  41cb9d:	mov    ds:0x29348d47,eax
  41cba2:	int    0x98
  41cba4:	sub    al,al
  41cba6:	lock push eax
  41cba8:	mov    ah,0x74
  41cbaa:	scas   al,BYTE PTR es:[edi]
  41cbab:	push   es
  41cbac:	lods   al,BYTE PTR ds:[esi]
  41cbad:	push   ds
  41cbae:	fucom  st(6)
  41cbb0:	sbb    eax,0x11abd7fe
  41cbb5:	pop    ecx
  41cbb6:	jmp    0x260d:0xb4d0bd4b
  41cbbd:	sbb    eax,0x825a45e1
  41cbc2:	jge    0x41cb5a
  41cbc4:	in     eax,dx
  41cbc5:	scas   eax,DWORD PTR es:[edi]
  41cbc6:	xor    eax,0xe91c0539
  41cbcb:	jbe    0x41cc2c
  41cbcd:	add    al,0xe8
  41cbcf:	dec    ebx
  41cbd0:	jno    0x41cbb6
  41cbd2:	xchg   esp,eax
  41cbd3:	xor    BYTE PTR [edi+0xe],bl
  41cbd6:	(bad)  
  41cbd7:	sub    DWORD PTR [ebp+0x38],eax
  41cbda:	mov    bh,BYTE PTR [esi+0x4574f4cd]
  41cbe0:	mov    ah,0xd2
  41cbe2:	pusha  
  41cbe3:	mov    ebp,DWORD PTR [edi-0x73043380]
  41cbe9:	sbb    ebx,DWORD PTR ds:0xea365de1
  41cbef:	fisttp DWORD PTR [ebp+0xf]
  41cbf2:	mov    dh,0xe0
  41cbf4:	fadd   DWORD PTR [eax+0x4d]
  41cbf7:	imul   edi,DWORD PTR ds:0xc3b4d516,0x2dc9494f
  41cc01:	ror    BYTE PTR fs:[edx+0xd],cl
  41cc05:	fild   DWORD PTR [edi]
  41cc07:	(bad)  
  41cc08:	and    ecx,DWORD PTR [eax-0x62790ecd]
  41cc0e:	jno    0x41cc04
  41cc10:	dec    edx
  41cc11:	xchg   esi,eax
  41cc12:	data16 je 0x41cc02
  41cc15:	and    dh,BYTE PTR [eax-0x480df2b7]
  41cc1b:	scas   al,BYTE PTR es:[edi]
  41cc1c:	mov    cl,0xae
  41cc1e:	aas    
  41cc1f:	fsubr  QWORD PTR [esi+ecx*4]
  41cc22:	shr    DWORD PTR [ecx+0x6f39d1a7],1
  41cc28:	and    BYTE PTR [ecx-0x23],0x2f
  41cc2c:	mov    edi,DWORD PTR [esi-0x13]
  41cc2f:	sahf   
  41cc30:	ss icebp 
  41cc32:	das    
  41cc33:	ja     0x41cc7a
  41cc35:	adc    BYTE PTR [edi+eax*2],al
  41cc38:	jl     0x41cbc7
  41cc3a:	mov    eax,0x14ae30db
  41cc3f:	pushf  
  41cc40:	push   ss
  41cc41:	leave  
  41cc42:	call   0xb1b12cfb
  41cc47:	(bad)
  41cc4a:	xchg   ebx,eax
  41cc4b:	inc    edx
  41cc4c:	add    BYTE PTR [esi-0x70db10c0],ah
  41cc52:	or     bh,dh
  41cc54:	stos   BYTE PTR es:[edi],al
  41cc55:	shl    DWORD PTR [esi-0x3e],cl
  41cc58:	pop    ss
  41cc59:	cmp    dh,ch
  41cc5b:	push   esp
  41cc5c:	fsubp  st(3),st
  41cc5e:	pop    edi
  41cc5f:	sahf   
  41cc60:	dec    esp
  41cc61:	fist   WORD PTR [ecx+0x35]
  41cc64:	mov    al,0x17
  41cc66:	pop    eax
  41cc67:	arpl   WORD PTR [edx+0x21],bx
  41cc6a:	inc    eax
  41cc6b:	and    al,0x5d
  41cc6d:	add    DWORD PTR [edi-0x5d029680],esi
  41cc73:	or     DWORD PTR [edx],eax
  41cc75:	out    dx,eax
  41cc76:	dec    edi
  41cc77:	pop    ebp
  41cc78:	add    cl,BYTE PTR [edi+0xfa76929]
  41cc7e:	dec    ebx
  41cc7f:	std    
  41cc80:	rol    esi,1
  41cc82:	jp     0x41cc63
  41cc84:	mov    esi,0x342cc25f
  41cc89:	mov    al,0xf1
  41cc8b:	jle    0x41cc29
  41cc8d:	aaa    
  41cc8e:	shl    BYTE PTR [ebx+0xb],0x31
  41cc92:	jb     0x41ccf7
  41cc94:	fwait
  41cc95:	ror    DWORD PTR [ecx+0x3316c5a3],0xc3
  41cc9c:	push   es
  41cc9d:	xor    DWORD PTR [edi],ecx
  41cc9f:	inc    esp
  41cca0:	loope  0x41ccec
  41cca2:	pop    edx
  41cca3:	pop    ecx
  41cca4:	jno    0x41cc29
  41cca6:	sti    
  41cca7:	cld    
  41cca8:	lods   eax,DWORD PTR ds:[esi]
  41cca9:	repnz fisub WORD PTR ds:0xa3dd1eec
  41ccb0:	xchg   edx,eax
  41ccb1:	pop    edi
  41ccb2:	dec    eax
  41ccb3:	pop    ds
  41ccb4:	out    dx,eax
  41ccb5:	xchg   ebx,eax
  41ccb6:	cmp    bl,BYTE PTR [ecx+0x2e863932]
  41ccbc:	mov    esi,0xcf5ef47b
  41ccc1:	cmc    
  41ccc2:	fucomp st(2)
  41ccc4:	mul    DWORD PTR [esi]
  41ccc6:	sbb    bl,BYTE PTR [edi+ebx*8+0x3c]
  41ccca:	pushf  
  41cccb:	pop    edx
  41cccc:	into   
  41cccd:	inc    esp
  41ccce:	out    0x5f,al
  41ccd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccd1:	int    0x34
  41ccd3:	ficomp DWORD PTR [edx]
  41ccd5:	push   edi
  41ccd6:	sub    al,0xa0
  41ccd8:	and    esp,DWORD PTR [ecx]
  41ccda:	mov    ah,0x91
  41ccdc:	in     eax,dx
  41ccdd:	pusha  
  41ccde:	test   al,0xa2
  41cce0:	jae    0x41cca2
  41cce2:	or     ah,bh
  41cce4:	mov    ds:0x51d1654c,al
  41cce9:	xor    eax,0x50023a30
  41ccee:	sahf   
  41ccef:	popa   
  41ccf0:	fwait
  41ccf1:	ret    
  41ccf2:	int    0x65
  41ccf4:	xchg   ecx,eax
  41ccf5:	jae    0x41ccaa
  41ccf7:	pop    esi
  41ccf8:	mov    esi,DWORD PTR [eax-0x4bb14546]
  41ccfe:	mov    eax,ds:0x79af045f
  41cd03:	xor    DWORD PTR [eax],0x3e2cfb92
  41cd09:	fst    DWORD PTR [eax-0x7312ad4b]
  41cd0f:	mov    al,0x19
  41cd11:	xlat   BYTE PTR ds:[ebx]
  41cd12:	cmp    ah,dh
  41cd14:	push   ebp
  41cd15:	sub    DWORD PTR [edx+eiz*2+0x419136f6],esi
  41cd1c:	adc    ebp,ebp
  41cd1e:	mov    al,0xe6
  41cd20:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41cd22:	mov    dl,0xd5
  41cd24:	inc    eax
  41cd25:	or     eax,0xf985f38e
  41cd2a:	pop    ecx
  41cd2b:	push   ebp
  41cd2c:	in     eax,0x77
  41cd2e:	mov    ds:0x54c5b82a,al
  41cd33:	hlt    
  41cd34:	mov    eax,ds:0xce2c7939
  41cd39:	fwait
  41cd3a:	adc    DWORD PTR ds:0x9f3bf802,edi
  41cd40:	inc    edx
  41cd41:	aaa    
  41cd42:	cld    
  41cd43:	nop
  41cd44:	int3   
  41cd45:	mov    cl,0xa0
  41cd47:	jg     0x41cd03
  41cd49:	pop    es
  41cd4a:	jmp    0x7052:0xa3d7416a
  41cd51:	test   DWORD PTR [esi+ebx*4+0x56aecc9a],ebx
  41cd58:	sbb    BYTE PTR [ebx+0x50],dl
  41cd5b:	sbb    BYTE PTR [edx-0x6ee9f610],ah
  41cd61:	popa   
  41cd62:	(bad)  
  41cd63:	dec    esp
  41cd64:	xor    al,0xf6
  41cd66:	xor    BYTE PTR [edx+0x20],al
  41cd69:	mov    al,BYTE PTR [ecx+0x7d2a8f9]
  41cd6f:	push   es
  41cd70:	cld    
  41cd71:	lock cdq 
  41cd73:	jb     0x41cdab
  41cd75:	mov    esi,0xfa74f551
  41cd7a:	dec    esi
  41cd7b:	pushf  
  41cd7c:	cmp    al,0xd7
  41cd7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd7f:	mov    dh,0xe0
  41cd81:	addr16 xchg ebp,eax
  41cd83:	mov    eax,0x324a046a
  41cd88:	push   ecx
  41cd89:	dec    ebx
  41cd8a:	sub    ebp,ebx
  41cd8c:	cs and dh,dl
  41cd8f:	ins    BYTE PTR es:[edi],dx
  41cd90:	cmc    
  41cd91:	test   esp,esi
  41cd93:	ja     0x41cdc5
  41cd95:	pushf  
  41cd96:	mov    edx,0x7ade2dfc
  41cd9b:	clc    
  41cd9c:	push   ds
  41cd9d:	out    dx,eax
  41cd9e:	push   ds
  41cd9f:	jbe    0x41cd31
  41cda1:	and    al,0x63
  41cda3:	cmp    al,0x2a
  41cda5:	jle    0x41cd8c
  41cda7:	jl     0x41ce1b
  41cda9:	jae    0x41cdad
  41cdab:	mov    esp,0x2c736c48
  41cdb0:	cmp    BYTE PTR [ebx-0x59e15b3],0xeb
  41cdb7:	or     BYTE PTR [esi+0x58],0xb4
  41cdbb:	push   eax
  41cdbc:	or     dh,BYTE PTR [ebx]
  41cdbe:	sbb    al,0x46
  41cdc0:	adc    BYTE PTR [esi-0x46],ah
  41cdc3:	in     al,dx
  41cdc4:	sti    
  41cdc5:	into   
  41cdc6:	scas   al,BYTE PTR es:[edi]
  41cdc7:	push   ecx
  41cdc8:	adc    ebx,DWORD PTR es:[ebp-0x555b043e]
  41cdcf:	jle    0x41ce50
  41cdd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cdd2:	hlt    
  41cdd3:	mov    bl,0x7c
  41cdd5:	pop    ebx
  41cdd6:	and    ecx,DWORD PTR [ecx-0x35fb5db5]
  41cddc:	stc    
  41cddd:	pop    edx
  41cdde:	sbb    eax,0x40168227
  41cde3:	push   cs
  41cde4:	mov    eax,0xf765a57a
  41cde9:	push   ebx
  41cdea:	xor    DWORD PTR [esp+ebx*4],ecx
  41cded:	sti    
  41cdee:	aas    
  41cdef:	inc    esp
  41cdf0:	loop   0x41cdfc
  41cdf2:	repnz fcomp QWORD PTR [edx-0x3b]
  41cdf6:	je     0x41cda1
  41cdf8:	mov    eax,ds:0x83a3cb9
  41cdfd:	je     0x41ce03
  41cdff:	jge    0x41ce2b
  41ce01:	arpl   WORD PTR [esi+0x581769f4],bx
  41ce07:	xor    cl,BYTE PTR [edx-0x52359860]
  41ce0d:	push   0xfffffff8
  41ce0f:	sbb    eax,0xa2587a1
  41ce14:	or     eax,esi
  41ce16:	inc    esp
  41ce17:	idiv   edi
  41ce19:	into   
  41ce1a:	jp     0x41ce41
  41ce1c:	xchg   eax,esp
  41ce1e:	and    eax,0x212696e8
  41ce23:	scas   al,BYTE PTR es:[edi]
  41ce24:	cmp    al,0xb9
  41ce26:	scas   al,BYTE PTR es:[edi]
  41ce27:	out    dx,eax
  41ce28:	loop   0x41ce59
  41ce2a:	and    ch,dl
  41ce2c:	jbe    0x41cde4
  41ce2e:	xor    al,bh
  41ce30:	mov    esp,0xd67e6e39
  41ce35:	add    BYTE PTR [esi],ah
  41ce37:	push   ss
  41ce38:	dec    ebx
  41ce39:	out    0xf1,al
  41ce3b:	popf   
  41ce3c:	dec    ebx
  41ce3d:	and    ch,BYTE PTR [edi+eax*8]
  41ce40:	and    BYTE PTR [ebx-0x6c760485],bh
  41ce46:	mov    ds:0x337d5630,eax
  41ce4b:	ss psubw mm2,QWORD PTR fs:[esi-0x1a]
  41ce51:	ins    DWORD PTR es:[edi],dx
  41ce52:	dec    esp
  41ce53:	ficom  DWORD PTR [edx+0x3f3a77d3]
  41ce59:	mov    esp,0xcc37ced2
  41ce5e:	fdivr  st(0),st
  41ce60:	and    al,0x84
  41ce62:	mov    ebp,0x8327c6a7
  41ce67:	retf   
  41ce68:	or     al,0xfe
  41ce6a:	mov    esp,0x91cd11d0
  41ce6f:	pop    ds
  41ce70:	fcom   st(7)
  41ce72:	ins    BYTE PTR es:[edi],dx
  41ce73:	adc    eax,0xdeba2600
  41ce78:	mov    dh,0x15
  41ce7a:	sub    edx,DWORD PTR ss:[eax]
  41ce7d:	in     eax,0x89
  41ce7f:	sbb    eax,0xbdd4ca83
  41ce84:	lock or DWORD PTR [eax+eiz*4+0x1d],ebx
  41ce89:	ror    BYTE PTR [ecx],cl
  41ce8b:	shr    BYTE PTR [ecx],0xfd
  41ce8e:	(bad)  
  41ce8f:	fxch   st(3)
  41ce91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce92:	ins    DWORD PTR es:[edi],dx
  41ce93:	jb     0x41cebd
  41ce95:	fild   QWORD PTR [edi-0x35bb73c2]
  41ce9b:	test   al,0x30
  41ce9d:	xchg   esi,eax
  41ce9e:	jnp    0x41ce6a
  41cea0:	fist   WORD PTR [ebp-0x536c37e4]
  41cea6:	pop    ebx
  41cea7:	adc    ecx,esi
  41cea9:	add    eax,0x2283a076
  41ceae:	sub    BYTE PTR [ecx+0x5b],0x6f
  41ceb2:	iret   
  41ceb3:	std    
  41ceb4:	sub    BYTE PTR [ecx+0x54845855],dl
  41ceba:	out    dx,al
  41cebb:	jns    0x41ce3e
  41cebd:	ds ds adc al,0xdf
  41cec1:	jg     0x41cea0
  41cec3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cec4:	xchg   BYTE PTR [ebp+0x77],bl
  41cec7:	pop    edi
  41cec8:	pop    esp
  41cec9:	loop   0x41cf29
  41cecb:	stos   BYTE PTR es:[edi],al
  41cecc:	xor    edx,DWORD PTR [esi-0x3]
  41cecf:	jo     0x41ce60
  41ced1:	dec    ecx
  41ced2:	sub    ecx,0x976eba67
  41ced8:	jmp    0x41cf02
  41ceda:	cld    
  41cedb:	mov    edi,0xedf7847e
  41cee0:	ret    0x3c39
  41cee3:	and    bl,BYTE PTR ds:0xe0b262
  41cee9:	mov    edx,0x92c00b1a
  41ceee:	ins    BYTE PTR es:[edi],dx
  41ceef:	add    dl,0x55
  41cef2:	fbld   TBYTE PTR [ebp+eiz*1-0x2f]
  41cef6:	clc    
  41cef7:	mov    edx,DWORD PTR [esp+esi*1]
  41cefa:	pop    ecx
  41cefb:	mov    ecx,0x53698259
  41cf00:	das    
  41cf01:	and    cl,BYTE PTR [edx]
  41cf03:	add    cl,BYTE PTR [edx+ecx*2+0x4a]
  41cf07:	test   BYTE PTR [edi],0x9f
  41cf0a:	ss lock or bl,BYTE PTR fs:[esi-0x3162f9a7]
  41cf13:	cmp    ecx,DWORD PTR [eax+0x55abc815]
  41cf19:	push   ebp
  41cf1a:	inc    esp
  41cf1b:	and    BYTE PTR cs:[ecx+esi*8-0x65],dl
  41cf20:	jb     0x41cf4f
  41cf22:	xor    BYTE PTR [esi],0xa3
  41cf25:	pop    ebp
  41cf26:	rcr    ecx,cl
  41cf28:	mov    ds:0xdaaa1682,eax
  41cf2d:	pop    ebp
  41cf2e:	ins    BYTE PTR es:[edi],dx
  41cf2f:	pop    eax
  41cf30:	xlat   BYTE PTR ds:[ebx]
  41cf31:	adc    BYTE PTR [ebx-0x1e],0xe2
  41cf35:	sub    eax,0xcbee02a4
  41cf3a:	sbb    BYTE PTR [edx-0x72],dh
  41cf3d:	ds and cl,cl
  41cf40:	(bad)  
  41cf41:	ins    DWORD PTR es:[edi],dx
  41cf42:	sub    eax,0x14df249e
  41cf47:	popa   
  41cf48:	pop    es
  41cf49:	imul   ebx,DWORD PTR [ebx-0x5b],0xffffff9a
  41cf4d:	pop    ds
  41cf4e:	inc    esp
  41cf4f:	or     al,BYTE PTR [eax-0x161c1534]
  41cf55:	jbe    0x41cf4f
  41cf57:	ret    
  41cf58:	int3   
  41cf59:	jns    0x41cf7c
  41cf5b:	ret    
  41cf5c:	push   edx
  41cf5d:	mov    al,ds:0x4618c292
  41cf62:	iret   
  41cf63:	jnp    0x41cfc9
  41cf65:	jns    0x41cf52
  41cf67:	pop    ebx
  41cf68:	mov    edi,0x68d0548d
  41cf6d:	and    eax,DWORD PTR [esi]
  41cf6f:	ficomp DWORD PTR [ebx]
  41cf71:	int    0x29
  41cf73:	xchg   edi,eax
  41cf74:	add    dl,ch
  41cf76:	inc    ebx
  41cf77:	popf   
  41cf78:	sub    eax,0x5eb97c1f
  41cf7d:	adc    ebx,edx
  41cf7f:	inc    cl
  41cf81:	jb     0x41cf1c
  41cf83:	(bad)  
  41cf84:	jne    0x41cf26
  41cf86:	pop    esp
  41cf87:	pop    es
  41cf88:	and    eax,0xcf06cb83
  41cf8d:	dec    ebx
  41cf8e:	cmp    DWORD PTR [edx-0x48],ecx
  41cf91:	neg    ecx
  41cf93:	mov    eax,ds:0x6b60578c
  41cf98:	lahf   
  41cf99:	hlt    
  41cf9a:	and    eax,0xfc9bc0ca
  41cf9f:	push   ebx
  41cfa0:	adc    al,0x11
  41cfa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfa3:	popf   
  41cfa4:	in     al,0x67
  41cfa6:	pop    esp
  41cfa7:	or     ch,ah
  41cfa9:	jnp    0x41cfd8
  41cfab:	(bad)  
  41cfac:	ins    BYTE PTR es:[edi],dx
  41cfad:	mov    DWORD PTR [eax+0x7f],esp
  41cfb0:	mov    WORD PTR [esi-0x2fcff14f],ds
  41cfb6:	sti    
  41cfb7:	sahf   
  41cfb8:	cmp    bh,bl
  41cfba:	sbb    eax,0x2239854
  41cfbf:	fadd   QWORD PTR [eax-0x3c]
  41cfc2:	arpl   WORD PTR [edx-0x25],bp
  41cfc5:	es push edx
  41cfc7:	ins    BYTE PTR es:[edi],dx
  41cfc8:	sbb    DWORD PTR [eax+0x7708b40f],ebp
  41cfce:	inc    ebx
  41cfcf:	cdq    
  41cfd0:	mov    al,ds:0x19492a74
  41cfd5:	jmp    0x6797b427
  41cfda:	fwait
  41cfdb:	lock cmp dh,BYTE PTR [ecx+0x386a093e]
  41cfe2:	cmp    ecx,DWORD PTR [eax+ebp*8-0x67089e6e]
  41cfe9:	jae    0x41cf8d
  41cfeb:	inc    edi
  41cfec:	xchg   esi,eax
  41cfed:	pop    ds
  41cfee:	xchg   esi,eax
  41cfef:	loopne 0x41d063
  41cff1:	pop    es
  41cff2:	jecxz  0x41cff5
  41cff4:	mov    ebx,0xf5e6efae
  41cff9:	jecxz  0x41d059
  41cffb:	push   ebp
  41cffc:	div    DWORD PTR ds:0xf90c409f
  41d002:	retf   
  41d003:	pop    es
  41d004:	sbb    eax,ebx
  41d006:	add    cl,BYTE PTR [edx+0x61010cb]
  41d00c:	push   ss
  41d00d:	pop    ds
  41d00e:	push   ss
  41d00f:	repnz fist DWORD PTR [edi]
  41d012:	or     BYTE PTR [eax],ch
  41d014:	shl    bh,cl
  41d016:	inc    esi
  41d017:	mov    WORD PTR [esi-0x14f16dfb],ds
  41d01d:	add    al,0x40
  41d01f:	ins    BYTE PTR es:[edi],dx
  41d020:	in     eax,dx
  41d021:	int    0x53
  41d023:	mov    al,0x74
  41d025:	xchg   ecx,eax
  41d026:	shr    BYTE PTR [edi+esi*2-0x1b],0x3a
  41d02b:	outs   dx,DWORD PTR ds:[esi]
  41d02c:	scas   eax,DWORD PTR es:[edi]
  41d02d:	aad    0xde
  41d02f:	adc    al,BYTE PTR [edi]
  41d031:	inc    BYTE PTR [ebx-0x72]
  41d034:	sbb    al,0xde
  41d036:	mov    cl,0x4f
  41d038:	inc    esi
  41d039:	lahf   
  41d03a:	in     eax,dx
  41d03b:	pop    es
  41d03c:	addr16 and edx,ecx
  41d03f:	mov    ch,bl
  41d041:	or     ch,bl
  41d043:	jbe    0x41cfe3
  41d045:	jae    0x41d0a8
  41d047:	je     0x41cff1
  41d049:	jge    0x41d0b7
  41d04b:	cmp    ah,BYTE PTR [edi+0x753b6f13]
  41d051:	retf   
  41d052:	xor    edx,esi
  41d054:	popa   
  41d055:	daa    
  41d056:	add    BYTE PTR [ecx+0x40d99607],ah
  41d05c:	mov    cl,0x16
  41d05e:	jae    0x41d0a0
  41d060:	or     DWORD PTR [eax+0x6f920e31],ecx
  41d066:	and    DWORD PTR [edi-0x3c],ecx
  41d069:	loope  0x41d00f
  41d06b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d06c:	test   eax,0x12ea1dbf
  41d071:	sbb    al,0x1f
  41d073:	inc    DWORD PTR [esi-0x4c]
  41d076:	adc    eax,0xc285d34b
  41d07b:	sub    esi,esi
  41d07d:	fcomp  st(2)
  41d07f:	rol    bh,1
  41d081:	daa    
  41d082:	or     DWORD PTR [ebp+0x15],edi
  41d085:	and    eax,DWORD PTR [ebx-0x43edbe52]
  41d08b:	rcl    BYTE PTR [ebx+0x7ee09923],cl
  41d091:	pop    eax
  41d092:	cmp    eax,0xf430a875
  41d097:	int3   
  41d098:	aas    
  41d099:	into   
  41d09a:	mov    ebx,0xb59e1963
  41d09f:	in     al,0x78
  41d0a1:	cmp    edi,DWORD PTR [ebx+0x7885de3c]
  41d0a7:	ins    DWORD PTR es:[edi],dx
  41d0a8:	push   es
  41d0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d0aa:	inc    ebx
  41d0ab:	xor    eax,0x7351b47c
  41d0b0:	ret    0x2b54
  41d0b3:	push   0x3e8861db
  41d0b8:	enter  0x8b4a,0xf1
  41d0bc:	sub    al,0x1e
  41d0be:	sar    DWORD PTR [esi-0x5a],1
  41d0c1:	loop   0x41d067
  41d0c3:	fadd   st,st(0)
  41d0c5:	jbe    0x41d087
  41d0c7:	pusha  
  41d0c8:	or     BYTE PTR ds:0x58b407b7,al
  41d0ce:	mov    ecx,0x85c6ad98
  41d0d3:	sub    BYTE PTR [esi-0x7f7cb9fb],dl
  41d0d9:	fs pop ecx
  41d0db:	fwait
  41d0dc:	pop    esp
  41d0dd:	(bad)  
  41d0df:	(bad)  
  41d0e0:	mov    ch,0x1
  41d0e2:	es jmp 0xcde:0xb5c620e2
  41d0ea:	and    al,0x63
  41d0ec:	out    0x5,eax
  41d0ee:	dec    esp
  41d0ef:	mov    al,ds:0x8373434b
  41d0f4:	inc    ebx
  41d0f5:	mov    al,0x3a
  41d0f7:	jb     0x41d128
  41d0f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d0fa:	jne    0x41d147
  41d0fc:	sub    DWORD PTR [esi-0x49],esp
  41d0ff:	outs   dx,DWORD PTR ds:[esi]
  41d100:	jecxz  0x41d0a6
  41d102:	push   ecx
  41d103:	outs   dx,DWORD PTR ds:[esi]
  41d104:	xchg   esp,eax
  41d105:	jl     0x41d166
  41d107:	fadd   QWORD PTR [esi-0x7eb3a4d9]
  41d10d:	push   eax
  41d10e:	cld    
  41d10f:	fstp   QWORD PTR ds:0xd9567da6
  41d115:	xchg   ebx,eax
  41d116:	in     al,0x5d
  41d118:	mov    ds:0xe5047541,al
  41d11d:	das    
  41d11e:	int3   
  41d11f:	cmp    BYTE PTR [esi],ah
  41d121:	in     eax,dx
  41d122:	dec    edi
  41d123:	push   es
  41d124:	fcomip st,st(2)
  41d126:	adc    eax,0x4b2c54f0
  41d12b:	jmp    0x2fdb57be
  41d130:	jno    0x41d118
  41d132:	mov    ebx,0x9aa72056
  41d137:	test   eax,0xb60e3a3b
  41d13c:	fcmovnb st,st(3)
  41d13e:	in     eax,dx
  41d13f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d140:	fmul   DWORD PTR [esi]
  41d142:	and    eax,0x3b033527
  41d147:	cmp    ch,BYTE PTR [edi]
  41d149:	mov    dh,BYTE PTR [ecx]
  41d14b:	xchg   esp,ebx
  41d14d:	mov    ebx,0x26474d6a
  41d152:	sbb    DWORD PTR [edi+0x276ead57],ebp
  41d158:	data16 sub BYTE PTR [esi],bh
  41d15b:	mov    ah,BYTE PTR [eax+0x6d]
  41d15e:	mov    BYTE PTR [esi],bh
  41d160:	mov    bh,0x4c
  41d162:	mov    ah,0x3a
  41d164:	fsub   QWORD PTR [eax-0x4a18cca8]
  41d16a:	cmp    eax,0x2d2fc39b
  41d16f:	out    dx,eax
  41d170:	jmp    0x503c:0xe256ea17
  41d177:	xchg   ecx,eax
  41d178:	jp     0x41d150
  41d17a:	dec    edi
  41d17b:	and    cl,0xb4
  41d17e:	scas   al,BYTE PTR es:[edi]
  41d17f:	mov    esi,DWORD PTR [esi+ecx*4-0x34]
  41d183:	js     0x41d140
  41d185:	dec    esp
  41d186:	(bad)  
  41d187:	shl    DWORD PTR [edx-0x3a],1
  41d18a:	imul   eax,DWORD PTR [edi+edx*4],0xa
  41d18e:	or     DWORD PTR [esi-0xf],edx
  41d191:	adc    al,0xcb
  41d193:	call   0xf2cb:0xd971ffa5
  41d19a:	jo     0x41d1db
  41d19c:	sub    ecx,ebp
  41d19e:	inc    ebp
  41d19f:	pop    ecx
  41d1a0:	and    al,0xd4
  41d1a2:	scas   al,BYTE PTR es:[edi]
  41d1a3:	in     eax,dx
  41d1a4:	mov    ds:0xa7a4375e,al
  41d1a9:	ss push ds
  41d1ab:	pop    edi
  41d1ac:	cmp    eax,0x7725414b
  41d1b1:	pop    ds
  41d1b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1b3:	mov    ds:0xcea4ece4,al
  41d1b8:	add    DWORD PTR [edx],0xffffffad
  41d1bb:	in     eax,dx
  41d1bc:	ss js  0x41d20a
  41d1bf:	shl    BYTE PTR [ebp+0x6cbc40c0],cl
  41d1c5:	out    0x69,al
  41d1c7:	adc    eax,ebp
  41d1c9:	sub    BYTE PTR [edi+0x53],dh
  41d1cc:	jl     0x41d1fb
  41d1ce:	mov    WORD PTR [edx-0x603c44eb],es
  41d1d4:	or     eax,0x23e7b8a4
  41d1d9:	int    0xac
  41d1db:	lds    ebp,FWORD PTR [edx+edi*1-0xee0b172]
  41d1e2:	cmp    DWORD PTR [ebx+eax*4-0x7dee0118],ebp
  41d1e9:	xchg   DWORD PTR [esi-0x4c292a7b],ebx
  41d1ef:	sbb    DWORD PTR [edx+ecx*1+0x72],ebp
  41d1f3:	bound  eax,QWORD PTR [eax-0x16]
  41d1f6:	sub    BYTE PTR [ecx+0x49713d50],bl
  41d1fc:	idiv   ecx
  41d1fe:	stos   DWORD PTR es:[edi],eax
  41d1ff:	call   0x6c38:0x17ec1f07
  41d206:	cmp    edi,esp
  41d208:	cmc    
  41d209:	xchg   edi,eax
  41d20a:	bound  eax,QWORD PTR ds:[ebp+0x112aec4b]
  41d211:	sbb    al,0xec
  41d213:	push   edi
  41d214:	call   0xf22f5f29
  41d219:	cmp    BYTE PTR ds:0xa5924e09,bl
  41d21f:	fs xchg ebx,eax
  41d221:	sbb    cl,bl
  41d223:	call   0x2217:0x6b3e5720
  41d22a:	or     DWORD PTR [esi-0x2494f79],ebp
  41d230:	call   0xa20d2741
  41d235:	fstp   QWORD PTR [edx+eax*8]
  41d238:	pop    ebx
  41d239:	inc    ebp
  41d23a:	dec    ecx
  41d23b:	mov    al,0x2d
  41d23d:	sub    bl,BYTE PTR [edi]
  41d23f:	ret    
  41d240:	in     al,dx
  41d241:	xchg   ebp,eax
  41d242:	cld    
  41d243:	(bad)  
  41d246:	jmp    0x5de96283
  41d24b:	(bad)  
  41d24c:	jbe    0x41d2b6
  41d24e:	popa   
  41d24f:	call   0x61de:0x89e54ca
  41d256:	add    DWORD PTR [ebx-0x1fa09c99],ebx
  41d25c:	mov    dl,0x6a
  41d25e:	or     eax,0x45bb4ba0
  41d263:	cwde   
  41d264:	fsubr  DWORD PTR [eax+0x4c]
  41d267:	mov    ebp,0xc5ccddca
  41d26c:	js     0x41d209
  41d26e:	add    al,0xf5
  41d270:	fadd   DWORD PTR [esi-0xf]
  41d273:	pop    eax
  41d274:	lods   eax,DWORD PTR ds:[esi]
  41d275:	cmc    
  41d276:	xlat   BYTE PTR ds:[ebx]
  41d277:	and    edx,DWORD PTR [ecx]
  41d279:	mov    ecx,0x38d45d81
  41d27e:	mov    esp,0xf380f8d5
  41d283:	pop    ss
  41d284:	jmp    0xbfd9:0x5b549611
  41d28b:	mov    ebx,0x5743fb72
  41d290:	fist   DWORD PTR [edx-0x7824c999]
  41d296:	imul   esi,DWORD PTR [ecx+0x16c2093a],0xffffff90
  41d29d:	retf   
  41d29e:	jmp    0xc574c799
  41d2a3:	xor    esi,DWORD PTR [ebp-0x2069e82a]
  41d2a9:	push   0x10ebd993
  41d2ae:	test   eax,0xcaa307c8
  41d2b3:	push   edx
  41d2b4:	lds    esi,FWORD PTR [ecx-0x3e]
  41d2b7:	inc    ah
  41d2b9:	add    bh,BYTE PTR [esi+0xa]
  41d2bc:	rol    BYTE PTR [edi-0x69],0x44
  41d2c0:	dec    esi
  41d2c1:	pop    ds
  41d2c2:	je     0x41d27d
  41d2c4:	fstp   DWORD PTR [esi]
  41d2c6:	adc    eax,DWORD PTR [ecx-0x48644c91]
  41d2cc:	xchg   BYTE PTR [edi+0x4eef3f56],ah
  41d2d2:	xchg   esp,eax
  41d2d3:	test   dl,ch
  41d2d5:	jmp    0x41d33e
  41d2d7:	jle    0x41d2b2
  41d2d9:	ins    BYTE PTR es:[edi],dx
  41d2da:	in     eax,0x4e
  41d2dc:	retf   
  41d2dd:	out    0x99,eax
  41d2df:	rcl    DWORD PTR [ebx],0x6c
  41d2e2:	push   0xffffff8a
  41d2e4:	adc    BYTE PTR [edx-0x1c56d2e2],cl
  41d2ea:	(bad)  
  41d2eb:	test   eax,0x4f0a9b14
  41d2f0:	test   DWORD PTR [edx],ebp
  41d2f2:	pusha  
  41d2f3:	jg     0x7f56555
  41d2f9:	sub    eax,0xd608fa0f
  41d2fe:	aaa    
  41d2ff:	cmp    ebp,eax
  41d301:	stos   BYTE PTR es:[edi],al
  41d302:	ins    DWORD PTR es:[edi],dx
  41d303:	fidivr WORD PTR [ebx-0x6964ea6b]
  41d309:	fwait
  41d30a:	add    BYTE PTR [ecx],dl
  41d30c:	fisttp DWORD PTR [edx+0x53]
  41d30f:	inc    eax
  41d310:	cld    
  41d311:	mov    eax,0x1faed3ee
  41d316:	out    0xdd,al
  41d318:	mov    ah,0xaf
  41d31a:	mov    ds:0x4f80e10d,eax
  41d31f:	and    BYTE PTR [ebx+0x633d626],0xfe
  41d326:	push   ecx
  41d327:	inc    eax
  41d328:	fcmove st,st(6)
  41d32a:	dec    eax
  41d32b:	(bad)  
  41d32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d32d:	jbe    0x41d35b
  41d32f:	push   esi
  41d330:	cmp    DWORD PTR [edx+edi*2-0x3d],esi
  41d334:	adc    edx,ebp
  41d336:	xlat   BYTE PTR ds:[ebx]
  41d337:	aam    0xc1
  41d339:	loopne 0x41d2de
  41d33b:	xchg   BYTE PTR [ebx+0x3d61de92],dh
  41d341:	pop    esp
  41d342:	out    0x27,eax
  41d344:	repz add al,dh
  41d347:	in     al,dx
  41d348:	shr    DWORD PTR [esi],cl
  41d34a:	sbb    bl,ch
  41d34c:	fnstsw WORD PTR [ebx]
  41d34e:	addr16 mov bh,0x2
  41d351:	push   0x50
  41d353:	push   ds
  41d354:	sbb    al,0xa7
  41d356:	imul   esi,DWORD PTR [edx],0xffffffd2
  41d359:	push   edx
  41d35a:	repz cs jae 0x41d32e
  41d35e:	pop    edi
  41d35f:	pop    ebp
  41d360:	in     al,0xb2
  41d362:	dec    edx
  41d363:	and    ebx,DWORD PTR [eax]
  41d365:	scas   eax,DWORD PTR es:[edi]
  41d366:	inc    ebp
  41d367:	sub    edi,ebp
  41d369:	dec    edx
  41d36a:	mov    ds:0x5a6e1d5f,al
  41d36f:	and    dh,BYTE PTR [edx+0x45082c67]
  41d375:	leave  
  41d376:	mov    WORD PTR [ebp+eiz*1-0x40],fs
  41d37a:	in     al,0x9f
  41d37c:	dec    edx
  41d37d:	cdq    
  41d37e:	call   0x56c73ecf
  41d383:	or     cx,WORD PTR [edi+0x2e492827]
  41d38a:	mov    cl,0x3b
  41d38c:	mov    eax,0xe7bf21e1
  41d391:	in     eax,dx
  41d392:	rcl    DWORD PTR [edi+0x315502af],0xc4
  41d399:	or     eax,DWORD PTR [eax]
  41d39b:	das    
  41d39c:	mov    ebx,0x6d4f9d8e
  41d3a1:	dec    BYTE PTR [esi+0x71d5b12]
  41d3a7:	sbb    al,0xc1
  41d3a9:	mov    gs,WORD PTR [ebx+eax*1+0x6e]
  41d3ad:	loope  0x41d3ac
  41d3af:	sahf   
  41d3b0:	test   DWORD PTR [ecx],edx
  41d3b2:	popa   
  41d3b3:	or     bl,bl
  41d3b5:	arpl   WORD PTR [ebp+0x3f],si
  41d3b8:	in     eax,dx
  41d3b9:	jbe    0x41d34b
  41d3bb:	jno    0x41d3d2
  41d3bd:	popa   
  41d3be:	ja     0x41d380
  41d3c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3c1:	je     0x41d3bd
  41d3c3:	ret    
  41d3c4:	push   eax
  41d3c5:	mov    esi,0x34657bec
  41d3ca:	and    bh,BYTE PTR [edx+esi*4]
  41d3cd:	mov    es,WORD PTR [edi-0x65]
  41d3d0:	fild   DWORD PTR [esi+0x0]
  41d3d3:	xor    esp,ecx
  41d3d5:	imul   ebp,DWORD PTR [ecx-0x4b],0x99157c66
  41d3dc:	push   eax
  41d3dd:	das    
  41d3de:	cmp    DWORD PTR [ecx+0x22],esp
  41d3e1:	xor    eax,0x83d5e3d
  41d3e6:	mov    ebp,0xf07a4384
  41d3eb:	stos   DWORD PTR es:[edi],eax
  41d3ec:	test   DWORD PTR [ebp-0x56c34859],ebp
  41d3f2:	inc    edx
  41d3f3:	add    DWORD PTR [esi-0x6c],ecx
  41d3f6:	jle    0x41d43f
  41d3f8:	popa   
  41d3f9:	cmp    BYTE PTR [esi+eiz*2],bh
  41d3fc:	test   BYTE PTR [eax],bl
  41d3fe:	or     DWORD PTR fs:[eax+0x4f],ebx
  41d402:	add    BYTE PTR [esi],al
  41d404:	dec    eax
  41d405:	fs inc esp
  41d407:	cmp    bl,BYTE PTR [ebx+0x37]
  41d40a:	out    0xcb,eax
  41d40c:	stc    
  41d40d:	push   edx
  41d40e:	(bad)  
  41d40f:	pop    eax
  41d410:	mov    eax,0xc1acf4f7
  41d415:	sahf   
  41d416:	rol    BYTE PTR [edx],0xd
  41d419:	pusha  
  41d41a:	aaa    
  41d41b:	and    al,0x40
  41d41d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d41e:	push   ebx
  41d41f:	dec    ebx
  41d420:	iret   
  41d421:	clc    
  41d422:	adc    eax,0xb8cb1104
  41d427:	jnp    0x41d3f1
  41d429:	ret    0x73eb
  41d42c:	fdiv   st,st(2)
  41d42e:	push   esi
  41d42f:	(bad)  
  41d430:	mov    edi,0x9a69f2d0
  41d435:	ss xchg esp,eax
  41d437:	dec    eax
  41d438:	pop    esi
  41d439:	gs test al,0x56
  41d43c:	cs push edi
  41d43e:	jle    0x41d3f8
  41d440:	add    dh,BYTE PTR [esi]
  41d442:	stos   BYTE PTR es:[edi],al
  41d443:	and    BYTE PTR ds:0x1e5033ba,dl
  41d449:	pushf  
  41d44a:	mov    ds:0x773b406f,eax
  41d44f:	pop    edx
  41d450:	jno    0x41d496
  41d452:	add    DWORD PTR [eax-0x2b],esi
  41d455:	mov    edi,DWORD PTR ds:0x4a82820f
  41d45b:	dec    ebx
  41d45c:	out    dx,eax
  41d45d:	popf   
  41d45e:	sbb    ah,BYTE PTR [edx+0x5d]
  41d461:	cmc    
  41d462:	inc    ecx
  41d463:	jbe    0x41d472
  41d465:	(bad)  
  41d466:	call   0x5aeccce0
  41d46b:	jp     0x41d3f9
  41d46d:	mov    cl,0x15
  41d46f:	jo     0x41d401
  41d471:	mov    esi,0xa2bd96e7
  41d476:	cmp    DWORD PTR [ecx+0xd44079a],ebp
  41d47c:	pop    eax
  41d47d:	out    0xf7,eax
  41d47f:	int3   
  41d480:	std    
  41d481:	das    
  41d482:	gs cmp edi,ecx
  41d485:	or     al,0xd4
  41d487:	pop    es
  41d488:	in     eax,dx
  41d489:	lahf   
  41d48a:	pop    es
  41d48b:	sub    eax,0x79d0cefe
  41d490:	fadd   st,st(0)
  41d492:	stc    
  41d493:	xchg   esi,eax
  41d494:	add    al,0x69
  41d496:	jns    0x41d44f
  41d498:	popf   
  41d499:	xchg   DWORD PTR [ecx+0x4c5ae2b4],ecx
  41d49f:	lea    edi,[ebp+0x381bed66]
  41d4a5:	adc    edx,edi
  41d4a7:	mov    DWORD PTR [edi+esi*8],edx
  41d4aa:	popa   
  41d4ab:	lods   eax,DWORD PTR ds:[esi]
  41d4ac:	or     DWORD PTR [eax+0x1d],eax
  41d4af:	xchg   edx,eax
  41d4b0:	xchg   BYTE PTR [ebp-0x53a4085f],al
  41d4b6:	cmp    ebx,DWORD PTR [edx+0x9]
  41d4b9:	fwait
  41d4ba:	inc    edx
  41d4bb:	inc    eax
  41d4bc:	mov    ds:0x674c62c7,eax
  41d4c1:	and    ebp,DWORD PTR [ebp-0xc]
  41d4c4:	mov    ds:0x970e1b8a,eax
  41d4c9:	pop    esp
  41d4ca:	lods   eax,DWORD PTR ds:[esi]
  41d4cb:	push   esp
  41d4cc:	aaa    
  41d4cd:	push   ds
  41d4ce:	xchg   ebp,eax
  41d4cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4d0:	cmc    
  41d4d1:	leave  
  41d4d2:	inc    edx
  41d4d3:	add    dl,BYTE PTR [esp+esi*8-0x1c086253]
  41d4da:	and    edx,DWORD PTR ds:[ebp-0x5f]
  41d4de:	mov    DWORD PTR [esi+0x7d],ebx
  41d4e1:	mov    dl,0x98
  41d4e3:	ficom  WORD PTR [edx]
  41d4e5:	jle    0x41d4c4
  41d4e7:	(bad)  
  41d4e8:	xor    DWORD PTR [esi+0x2b9d38b1],edi
  41d4ee:	test   DWORD PTR [esi+0x0],0xc7a8626e
  41d4f5:	sbb    bh,cl
  41d4f7:	nop
  41d4f8:	mov    dl,ah
  41d4fa:	jp     0x41d4d6
  41d4fc:	or     dh,BYTE PTR gs:[ecx+0x76]
  41d500:	pop    ds
  41d501:	mov    dh,0x6d
  41d503:	int3   
  41d504:	adc    al,0x19
  41d506:	jo     0x41d4be
  41d508:	in     eax,dx
  41d509:	hlt    
  41d50a:	and    eax,DWORD PTR [eax-0x6787134d]
  41d510:	fcmovu st,st(1)
  41d512:	sti    
  41d513:	fadd   DWORD PTR [ebp+0x4e854639]
  41d519:	loope  0x41d4b4
  41d51b:	ret    0x9543
  41d51e:	in     al,0xa9
  41d520:	xor    al,0xd4
  41d522:	aam    0x85
  41d524:	and    eax,0xaa371ecb
  41d529:	call   0xef24:0xd319b560
  41d530:	xchg   ebp,eax
  41d531:	or     DWORD PTR [esp+ebp*8+0x7],edx
  41d535:	push   edx
  41d536:	and    ah,BYTE PTR [ecx+0x21ef66b3]
  41d53c:	jmp    DWORD PTR [ebx]
  41d53e:	sub    al,0x48
  41d540:	es ret 0x1330
  41d544:	lods   al,BYTE PTR ds:[esi]
  41d545:	push   edx
  41d546:	fldenv [ebx]
  41d548:	cmc    
  41d549:	sbb    eax,0xf6c287b5
  41d54e:	dec    esp
  41d54f:	test   eax,0xecbec4f3
  41d554:	imul   edx,edi,0x1e
  41d557:	loop   0x41d5cd
  41d559:	sti    
  41d55a:	xchg   DWORD PTR [ebp-0x55],esi
  41d55d:	cwde   
  41d55e:	mov    eax,0x87fed733
  41d563:	std    
  41d564:	in     eax,dx
  41d565:	mov    bh,0xa6
  41d567:	push   cs
  41d568:	pop    ss
  41d569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d56a:	mov    ah,0x1
  41d56c:	mov    dh,0x84
  41d56e:	mov    WORD PTR [edx+eax*8+0x5],fs
  41d572:	enter  0x35a4,0x7f
  41d576:	stc    
  41d577:	(bad)  
  41d578:	in     eax,0xb1
  41d57a:	cld    
  41d57b:	js     0x41d5b7
  41d57d:	outs   dx,DWORD PTR ds:[esi]
  41d57e:	push   0x69909cb1
  41d583:	jbe    0x41d55c
  41d585:	in     al,dx
  41d586:	add    BYTE PTR [eax-0x1d6e9b8],bh
  41d58c:	je     0x41d5fa
  41d58e:	fwait
  41d58f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d590:	sbb    eax,0x31a188ea
  41d595:	fisttp DWORD PTR gs:[edi+0x7]
  41d599:	js     0x41d598
  41d59b:	enter  0x6ce0,0x91
  41d59f:	mov    dh,0xbd
  41d5a1:	add    al,0x17
  41d5a3:	push   eax
  41d5a4:	push   edi
  41d5a5:	jno    0x41d607
  41d5a7:	jbe    0x41d559
  41d5a9:	adc    al,BYTE PTR [edi]
  41d5ab:	mov    ch,0xd4
  41d5ad:	gs repz iret 
  41d5b0:	fistp  QWORD PTR [edx]
  41d5b2:	pop    ecx
  41d5b3:	push   esp
  41d5b4:	dec    esi
  41d5b5:	pusha  
  41d5b6:	pop    ebx
  41d5b7:	xchg   edx,eax
  41d5b8:	pop    esp
  41d5b9:	std    
  41d5ba:	iret   
  41d5bb:	adc    dh,BYTE PTR [eax]
  41d5bd:	sar    dh,0x91
  41d5c0:	jae    0x41d5f0
  41d5c2:	push   esp
  41d5c3:	add    ecx,edi
  41d5c5:	mov    dl,0xf1
  41d5c7:	xchg   ebp,eax
  41d5c8:	ret    
  41d5c9:	shl    esi,0xf8
  41d5cc:	push   ss
  41d5cd:	push   ds
  41d5ce:	cs add eax,0x1a2cb25
  41d5d4:	lahf   
  41d5d5:	push   eax
  41d5d6:	push   ebp
  41d5d7:	and    BYTE PTR [ecx-0x22],0xa8
  41d5db:	cld    
  41d5dc:	dec    ebx
  41d5dd:	call   0x29a3ab48
  41d5e2:	sub    DWORD PTR [ebx-0x3c],0xb35b7d60
  41d5e9:	xchg   DWORD PTR [edx],edx
  41d5eb:	jge    0x41d606
  41d5ed:	and    eax,DWORD PTR [edi-0x1841cb81]
  41d5f3:	xchg   edx,eax
  41d5f4:	mov    ecx,0x4f61991c
  41d5f9:	in     eax,dx
  41d5fa:	in     eax,dx
  41d5fb:	adc    DWORD PTR [ecx+0x29],ebx
  41d5fe:	xchg   edx,eax
  41d5ff:	or     bh,BYTE PTR [eax]
  41d601:	cdq    
  41d602:	int    0xa4
  41d604:	mov    esi,0x7f77ac51
  41d609:	int3   
  41d60a:	lahf   
  41d60b:	loop   0x41d675
  41d60d:	xchg   cx,dx
  41d610:	push   ds
  41d611:	sbb    esp,ebx
  41d613:	push   esp
  41d614:	out    0x69,eax
  41d616:	jmp    0x41d676
  41d618:	(bad)  
  41d619:	sti    
  41d61a:	xchg   edx,eax
  41d61b:	pop    edi
  41d61c:	cmp    BYTE PTR [esi],cl
  41d61e:	pop    esp
  41d61f:	inc    esp
  41d620:	sti    
  41d621:	sbb    bl,dh
  41d623:	and    al,0x90
  41d625:	mov    edx,DWORD PTR [edx-0x4a41306e]
  41d62b:	out    0x1d,eax
  41d62d:	cmp    dh,BYTE PTR [ebx-0x1fc9a797]
  41d633:	push   ebp
  41d634:	jmp    0x8246:0x30b73e98
  41d63b:	cdq    
  41d63c:	push   0x18dbb838
  41d641:	or     al,0x6d
  41d643:	imul   ebp,esp,0x6f1a4d36
  41d649:	mov    dh,0x1e
  41d64b:	out    0x9,eax
  41d64d:	inc    edx
  41d64e:	sbb    edi,ebx
  41d650:	lahf   
  41d651:	daa    
  41d652:	xchg   DWORD PTR [edi+0x265dd71f],ecx
  41d658:	sub    ah,BYTE PTR ds:0x53163677
  41d65e:	push   eax
  41d65f:	jbe    0x41d6cb
  41d661:	add    cl,dh
  41d663:	jb     0x41d6d1
  41d665:	outs   dx,BYTE PTR ds:[esi]
  41d666:	jp     0x41d697
  41d668:	xor    al,0x3e
  41d66a:	test   BYTE PTR [esi-0x561ac5a9],0x67
  41d671:	retf   
  41d672:	pop    edi
  41d673:	in     al,dx
  41d674:	xor    DWORD PTR cs:[eax-0x134ca506],edi
  41d67b:	sub    eax,0x34b3c8ac
  41d680:	loope  0x41d60f
  41d682:	mov    ds:0x5b0ee9ab,al
  41d687:	arpl   WORD PTR [edx],cx
  41d689:	call   0xfe017d65
  41d68e:	push   esi
  41d68f:	sbb    BYTE PTR [ebp-0x2a],0x99
  41d693:	(bad)  
  41d694:	fst    QWORD PTR [eax-0x54]
  41d697:	jae    0x41d6a2
  41d699:	dec    ebx
  41d69a:	push   cs
  41d69b:	das    
  41d69c:	fiadd  DWORD PTR [edi+edx*1]
  41d69f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6a0:	lea    eax,[esi+0x2e]
  41d6a3:	outs   dx,DWORD PTR ds:[esi]
  41d6a4:	idiv   BYTE PTR [ebx-0x3f10a0b1]
  41d6aa:	cld    
  41d6ab:	call   0xd06d:0x989ef090
  41d6b2:	(bad)  
  41d6b3:	out    0x74,eax
  41d6b5:	clc    
  41d6b6:	jecxz  0x41d6ec
  41d6b8:	sub    edi,DWORD PTR [ebp+eax*1-0x8]
  41d6bc:	sbb    esp,0xaf30abe3
  41d6c2:	sti    
  41d6c3:	add    al,0x32
  41d6c5:	div    BYTE PTR [eax]
  41d6c7:	sti    
  41d6c8:	push   esp
  41d6c9:	mov    bh,0x2
  41d6cb:	xchg   esi,eax
  41d6cc:	iret   
  41d6cd:	fsubp  st(1),st
  41d6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6d0:	ret    
  41d6d1:	dec    edx
  41d6d2:	pop    ecx
  41d6d3:	pusha  
  41d6d4:	xor    DWORD PTR [esi+0x2d],0xa804a3cc
  41d6db:	clc    
  41d6dc:	icebp  
  41d6dd:	jns    0x41d71e
  41d6df:	icebp  
  41d6e0:	hlt    
  41d6e1:	fild   DWORD PTR [edx]
  41d6e3:	les    edi,FWORD PTR fs:[edx-0x43]
  41d6e7:	hlt    
  41d6e8:	leave  
  41d6e9:	out    dx,al
  41d6ea:	push   esp
  41d6eb:	call   0x99a2:0xae93337
  41d6f2:	push   esi
  41d6f3:	pop    ecx
  41d6f4:	jp     0x41d691
  41d6f6:	fnstcw WORD PTR [ecx+eax*2]
  41d6f9:	mov    eax,0xc1e2067
  41d6fe:	xchg   DWORD PTR [ebp-0x31],esi
  41d701:	mov    ecx,0xaa58bd02
  41d706:	hlt    
  41d707:	lods   eax,DWORD PTR ds:[esi]
  41d708:	pop    ebp
  41d709:	and    dh,BYTE PTR [eax]
  41d70b:	cdq    
  41d70c:	jb     0x41d724
  41d70e:	out    0x13,eax
  41d710:	or     DWORD PTR [ecx+0x3809cb87],edi
  41d716:	(bad)  
  41d717:	cmp    BYTE PTR [esi+0x1148a157],ch
  41d71d:	out    0x55,al
  41d71f:	mov    WORD PTR ds:0x58985061,gs
  41d725:	pop    esi
  41d726:	add    bh,BYTE PTR [ecx]
  41d728:	leave  
  41d729:	push   ecx
  41d72a:	adc    al,0xf0
  41d72c:	imul   esp,DWORD PTR [ebx],0x4f
  41d72f:	bound  edx,QWORD PTR [ebp-0x4eec8825]
  41d735:	cmp    ebx,DWORD PTR [edi+0x26]
  41d738:	or     BYTE PTR [ecx+0x363b4557],dl
  41d73e:	or     BYTE PTR [ebp+0x74],bh
  41d741:	sti    
  41d742:	dec    esi
  41d743:	push   0xeadf4f08
  41d748:	dec    esi
  41d749:	adc    eax,0x7538a275
  41d74e:	in     eax,dx
  41d74f:	push   edi
  41d750:	jne    0x41d7cf
  41d752:	sub    al,0x30
  41d754:	fnstenv [eax-0x40d05085]
  41d75a:	lahf   
  41d75b:	mov    eax,ds:0xe7b7723f
  41d760:	gs push es
  41d762:	inc    esp
  41d763:	jb     0x41d781
  41d765:	adc    eax,edi
  41d767:	mov    DWORD PTR [ebx],esi
  41d769:	xchg   ebp,eax
  41d76a:	mov    ebx,0xc618ca1f
  41d76f:	jno    0x41d735
  41d771:	cmp    eax,0xd9944083
  41d776:	and    esp,DWORD PTR [edi-0x43]
  41d779:	cdq    
  41d77a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d77b:	lahf   
  41d77c:	ins    BYTE PTR es:[edi],dx
  41d77d:	add    al,0xaf
  41d77f:	xor    BYTE PTR [eax+edi*1],dl
  41d782:	mov    cl,0x19
  41d784:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d785:	inc    edx
  41d786:	retf   
  41d787:	pusha  
  41d788:	add    bh,al
  41d78a:	mov    ds:0xde4b5628,eax
  41d78f:	sub    edi,DWORD PTR ds:0x15d44707
  41d795:	popf   
  41d796:	xchg   esp,eax
  41d797:	lods   al,BYTE PTR ds:[esi]
  41d798:	jns    0x41d77e
  41d79a:	xchg   edx,edx
  41d79c:	fmul   st(3),st
  41d79e:	mov    WORD PTR [edi],fs
  41d7a0:	(bad)  
  41d7a1:	lahf   
  41d7a2:	arpl   WORD PTR [ecx],si
  41d7a4:	jg     0x41d742
  41d7a6:	test   eax,0x8a00d794
  41d7ab:	rcr    ebp,cl
  41d7ad:	aam    0x7
  41d7af:	imul   ecx,esp,0xffffffca
  41d7b2:	cdq    
  41d7b3:	jbe    0x41d7af
  41d7b5:	(bad)  
  41d7b6:	aas    
  41d7b7:	xlat   BYTE PTR ds:[ebx]
  41d7b8:	pop    es
  41d7b9:	ins    DWORD PTR es:[edi],dx
  41d7ba:	inc    ebp
  41d7bb:	add    DWORD PTR [ebp+0x3e132482],0x21
  41d7c2:	in     al,0x4c
  41d7c4:	mov    esp,0xfd76b899
  41d7c9:	dec    ecx
  41d7ca:	sbb    ecx,edi
  41d7cc:	xchg   eax,ecx
  41d7ce:	addr16 xor al,0x22
  41d7d1:	or     DWORD PTR [edx+edi*1],esp
  41d7d4:	jns    0x41d7d0
  41d7d6:	dec    ebp
  41d7d7:	aas    
  41d7d8:	ret    
  41d7d9:	ficom  DWORD PTR [ecx]
  41d7db:	cmp    eax,0x2bc2074a
  41d7e0:	adc    bl,dl
  41d7e2:	daa    
  41d7e3:	aaa    
  41d7e4:	inc    esi
  41d7e5:	stos   DWORD PTR es:[edi],eax
  41d7e6:	xchg   BYTE PTR [edi],al
  41d7e8:	add    bh,BYTE PTR [ebx-0x5]
  41d7eb:	jg     0x41d7e0
  41d7ed:	xor    bh,0xe
  41d7f0:	inc    BYTE PTR [edx+0x3e871dfe]
  41d7f6:	mov    cl,0x4d
  41d7f8:	sub    eax,0x42d9c555
  41d7fd:	push   esi
  41d7fe:	xlat   BYTE PTR ds:[ebx]
  41d7ff:	ins    DWORD PTR es:[edi],dx
  41d800:	repnz or eax,DWORD PTR [ebx]
  41d803:	adc    eax,0xb89032b9
  41d808:	xor    dl,BYTE PTR [ebx+0x3d34c05b]
  41d80e:	cmc    
  41d80f:	xchg   ecx,eax
  41d810:	xor    ch,0x50
  41d813:	out    0x90,al
  41d815:	push   0xd7ca6838
  41d81a:	and    BYTE PTR [esi-0xf987e2b],bh
  41d820:	out    0x60,al
  41d822:	sub    eax,0xe3271d73
  41d827:	hlt    
  41d828:	lods   eax,DWORD PTR ds:[esi]
  41d829:	cmp    bl,al
  41d82b:	ss jnp 0x41d7f9
  41d82e:	push   esp
  41d82f:	iret   
  41d830:	arpl   di,sp
  41d832:	push   es
  41d833:	leave  
  41d834:	adc    DWORD PTR [ebx-0x59],ecx
  41d837:	ss inc ebp
  41d839:	rol    DWORD PTR [esi],1
  41d83b:	push   cs
  41d83c:	ror    edx,0xb
  41d83f:	push   ebx
  41d840:	arpl   sp,bx
  41d842:	test   eax,0xf74a219b
  41d847:	lahf   
  41d848:	pop    ebp
  41d849:	push   ds
  41d84a:	xchg   ecx,eax
  41d84b:	sub    BYTE PTR [ebp-0x3a802371],cl
  41d851:	dec    BYTE PTR [esi]
  41d853:	mov    DWORD PTR [edx+ebp*2+0x19],ecx
  41d857:	lock je 0x41d835
  41d85a:	dec    eax
  41d85b:	pop    ebp
  41d85c:	sub    al,0x45
  41d85e:	adc    eax,0xfb8b4490
  41d863:	sub    BYTE PTR [ecx+0x454b2672],0xb7
  41d86a:	xchg   BYTE PTR fs:[esi],bl
  41d86d:	and    eax,0x1a04bf08
  41d872:	dec    esp
  41d873:	bound  ecx,QWORD PTR [edi+ecx*1-0x45]
  41d877:	cdq    
  41d878:	sub    al,cl
  41d87a:	js     0x41d8d9
  41d87c:	call   FWORD PTR [ebx+edi*4-0x61]
  41d880:	nop
  41d881:	nop
  41d882:	mov    ch,0x7f
  41d884:	push   0xce101fe3
  41d889:	push   ebp
  41d88a:	push   cs
  41d88b:	cs xor ebp,edi
  41d88e:	arpl   si,di
  41d890:	push   ebp
  41d891:	mov    esp,0x88bc0149
  41d896:	scas   eax,DWORD PTR es:[edi]
  41d897:	xchg   dh,dl
  41d899:	jb     0x41d884
  41d89b:	mov    DWORD PTR [edx],edx
  41d89d:	imul   esi,DWORD PTR [edx+0x58],0xffffffb5
  41d8a1:	pop    es
  41d8a2:	xchg   edi,eax
  41d8a3:	push   edi
  41d8a4:	sahf   
  41d8a5:	fwait
  41d8a6:	repnz aam 0x7f
  41d8a9:	sti    
  41d8aa:	es popf 
  41d8ac:	clc    
  41d8ad:	jns    0x41d8b5
  41d8af:	or     DWORD PTR [ebp-0x1f1f6790],esi
  41d8b5:	pusha  
  41d8b6:	xchg   ebp,eax
  41d8b7:	imul   edi,DWORD PTR [ebp-0x36],0x6097500c
  41d8be:	xor    DWORD PTR [ecx-0x6d],esi
  41d8c1:	xchg   eax,esp
  41d8c3:	adc    DWORD PTR [ebp+0xe],esi
  41d8c6:	sbb    ecx,DWORD PTR [ebx]
  41d8c8:	aaa    
  41d8c9:	loop   0x41d94a
  41d8cb:	cmc    
  41d8cc:	inc    ebx
  41d8cd:	dec    esp
  41d8ce:	mov    ds:0xfed2d25c,eax
  41d8d3:	adc    al,0x19
  41d8d5:	jne    0x41d916
  41d8d7:	mov    WORD PTR [ecx+0x1d],fs
  41d8da:	sbb    eax,0x63e3eb96
  41d8df:	and    DWORD PTR [edi+0x7e67b889],esi
  41d8e5:	fs call 0x51c5:0xf694caf6
  41d8ed:	inc    edi
  41d8ee:	cdq    
  41d8ef:	dec    esp
  41d8f0:	(bad)
  41d8f3:	sbb    DWORD PTR [edi],esp
  41d8f5:	xor    ebp,DWORD PTR [ecx+0xfc56d66]
  41d8fb:	aaa    
  41d8fc:	sub    DWORD PTR [ebp-0x527c252a],ebx
  41d902:	push   0x625dac7e
  41d907:	add    dh,ch
  41d909:	outs   dx,DWORD PTR ds:[esi]
  41d90a:	int    0xc8
  41d90c:	(bad)  
  41d90d:	fadd   DWORD PTR [esi+0x70]
  41d910:	inc    edi
  41d911:	add    BYTE PTR [edi-0x1d2f44c4],dh
  41d917:	test   BYTE PTR [ebp-0x50c49bc],bh
  41d91d:	addr16 (bad) 
  41d91f:	test   eax,0xdbf88627
  41d924:	stos   BYTE PTR es:[edi],al
  41d925:	aas    
  41d926:	inc    ecx
  41d927:	mov    bh,0xca
  41d929:	stos   BYTE PTR es:[edi],al
  41d92a:	mov    ecx,0x955cea9c
  41d92f:	pop    ds
  41d930:	mov    esi,ecx
  41d932:	sbb    esi,esp
  41d934:	lods   al,BYTE PTR ds:[esi]
  41d935:	push   es
  41d936:	lods   eax,DWORD PTR ds:[esi]
  41d937:	popa   
  41d938:	mov    al,ds:0x65d901bf
  41d93d:	dec    edx
  41d93e:	(bad)  
  41d941:	add    BYTE PTR [edx-0x19d5948c],bl
  41d947:	ss (bad) 
  41d94a:	daa    
  41d94b:	jmp    0x41d9a1
  41d94d:	mov    ds:0xba08849b,eax
  41d952:	aam    0x8
  41d954:	pop    ebp
  41d955:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d956:	mov    bl,0x44
  41d958:	pop    esi
  41d959:	fistp  WORD PTR ds:0x59ea371
  41d95f:	pop    ecx
  41d960:	or     ebp,0xffffffeb
  41d963:	mov    ds:0x5b465b24,al
  41d968:	jle    0x41d917
  41d96a:	xor    BYTE PTR [esi-0x5f4c3450],al
  41d970:	jge    0x41d8f6
  41d972:	mov    edi,0xe3a18ebd
  41d977:	push   0x35
  41d979:	rol    DWORD PTR [ebp-0x31f46bd],0xd6
  41d980:	pop    esp
  41d981:	xor    al,0x5b
  41d983:	jle    0x41d979
  41d985:	mov    ds:0xb6738417,eax
  41d98a:	aam    0x75
  41d98c:	nop
  41d98d:	push   eax
  41d98e:	imul   edi,DWORD PTR [esi-0x30],0xad3510ae
  41d995:	xchg   BYTE PTR [ebx],bh
  41d997:	data16 repnz into 
  41d99a:	ins    BYTE PTR es:[edi],dx
  41d99b:	aam    0x7
  41d99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99e:	mov    ecx,0xbfde31c
  41d9a3:	adc    esp,0xffffffe7
  41d9a6:	push   ebx
  41d9a7:	xor    esp,ecx
  41d9a9:	arpl   sp,ax
  41d9ab:	pop    ds
  41d9ac:	in     al,dx
  41d9ad:	or     al,0x41
  41d9af:	arpl   WORD PTR [esi+edx*4+0x1b215fbc],cx
  41d9b6:	add    al,0x42
  41d9b8:	or     edx,DWORD PTR [ecx]
  41d9ba:	loope  0x41d953
  41d9bc:	scas   eax,DWORD PTR es:[edi]
  41d9bd:	data16 adc al,0xeb
  41d9c0:	cld    
  41d9c1:	pop    ecx
  41d9c2:	cli    
  41d9c3:	loop   0x41d986
  41d9c5:	xor    ch,BYTE PTR [ecx+0x21]
  41d9c8:	rcr    BYTE PTR [eax],1
  41d9ca:	stos   DWORD PTR es:[edi],eax
  41d9cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9cc:	mov    ds,WORD PTR [esi+0xb4438eb]
  41d9d2:	ss ret 0x6697
  41d9d6:	dec    ebp
  41d9d7:	push   edx
  41d9d8:	out    0x1a,eax
  41d9da:	and    al,0x32
  41d9dc:	push   ecx
  41d9dd:	and    DWORD PTR [esi+ebp*1-0x48],ecx
  41d9e1:	push   ebx
  41d9e2:	push   ebx
  41d9e3:	outs   dx,BYTE PTR fs:[esi]
  41d9e5:	rcl    BYTE PTR [ebp+0x3aca7342],cl
  41d9eb:	fld    DWORD PTR [ebp+0xae400ae]
  41d9f1:	rcr    DWORD PTR [edi-0x2b],cl
  41d9f4:	pop    ebx
  41d9f5:	push   ebp
  41d9f6:	inc    esi
  41d9f7:	loope  0x41d9d5
  41d9f9:	jo     0x41d99a
  41d9fb:	push   esp
  41d9fc:	xor    eax,0x235e15a1
  41da01:	scas   al,BYTE PTR es:[edi]
  41da02:	imul   DWORD PTR [eax+edx*2+0x6b]
  41da06:	or     edx,DWORD PTR [edi+0x71]
  41da09:	jmp    0xbe160d82
  41da0e:	lea    ebx,[ecx]
  41da10:	lods   al,BYTE PTR ds:[esi]
  41da12:	adc    BYTE PTR [ebx-0x7],bl
  41da15:	in     al,0x94
  41da17:	fisttp DWORD PTR [esi-0x17]
  41da1a:	sahf   
  41da1b:	cwde   
  41da1c:	mov    ds:0x37329373,al
  41da21:	mov    ah,0x3
  41da23:	jo     0x41da29
  41da25:	mov    ecx,0x1a432278
  41da2a:	jae    0x41da81
  41da2c:	sbb    ebx,DWORD PTR [edi-0x1a9e496]
  41da32:	aaa    
  41da33:	mov    ch,0x85
  41da35:	mov    es,WORD PTR [edx+edi*1+0x4e]
  41da39:	mov    al,ds:0x4a969ca8
  41da3e:	and    ebx,esp
  41da40:	mov    al,0xfa
  41da42:	mov    cl,0x4d
  41da44:	fbld   TBYTE PTR [ebx+0x4355a093]
  41da4a:	xlat   BYTE PTR ds:[ebx]
  41da4b:	idiv   BYTE PTR [edi]
  41da4d:	jae    0x41da90
  41da4f:	mov    ch,0x26
  41da51:	jb     0x41da86
  41da53:	lods   al,BYTE PTR ds:[esi]
  41da54:	jecxz  0x41da31
  41da56:	out    dx,al
  41da57:	stos   BYTE PTR es:[edi],al
  41da58:	sbb    eax,0xbfaa4d3f
  41da5d:	xchg   esi,eax
  41da5e:	mov    eax,0xf97087ad
  41da63:	js     0x41da8e
  41da65:	popf   
  41da66:	cmp    eax,0xb4b4422a
  41da6b:	or     eax,0xa9b93b90
  41da70:	push   eax
  41da71:	pop    ds
  41da72:	cmp    eax,0xa8b27ec
  41da77:	pushf  
  41da78:	ret    0xb971
  41da7b:	into   
  41da7c:	rol    BYTE PTR [esi+esi*8+0x1f1d30d4],0x52
  41da84:	jmp    0xeff8d0cc
  41da89:	in     eax,dx
  41da8a:	sbb    al,0xb1
  41da8c:	pop    ebx
  41da8d:	adc    eax,0xf0070ba3
  41da92:	or     eax,0x90c09bdc
  41da97:	shr    edi,cl
  41da99:	std    
  41da9a:	ror    ebx,0x30
  41da9d:	mov    BYTE PTR [eax+0x11a39867],ch
  41daa3:	pop    edi
  41daa4:	sub    DWORD PTR [esi+0x65],edi
  41daa7:	inc    edx
  41daa8:	fs pop ebp
  41daaa:	retf   
  41daab:	xor    esp,DWORD PTR [edi]
  41daad:	push   edi
  41daae:	dec    ebx
  41daaf:	sub    BYTE PTR [edi],cl
  41dab1:	pop    ebx
  41dab2:	jae    0x41daba
  41dab4:	inc    eax
  41dab5:	sub    DWORD PTR [eax],0xd0456cc3
  41dabb:	xor    al,BYTE PTR [ebx+0x70]
  41dabe:	adc    eax,0xae049407
  41dac3:	aaa    
  41dac4:	cmp    esi,DWORD PTR [esi-0x2fe0e4db]
  41daca:	call   0x5e260396
  41dacf:	sub    edx,DWORD PTR [esi-0x78]
  41dad2:	repz das 
  41dad4:	jge    0x41dabe
  41dad6:	or     ah,BYTE PTR [ebp+0x4c2b7935]
  41dadc:	fcmovnb st,st(2)
  41dade:	out    dx,al
  41dadf:	or     al,0x68
  41dae1:	out    0x13,al
  41dae3:	push   ecx
  41dae4:	stos   BYTE PTR es:[di],al
  41dae6:	pop    edi
  41dae7:	mov    bh,0xa6
  41dae9:	test   DWORD PTR [ecx+0x1bc2e188],esp
  41daef:	jge    0x41da78
  41daf1:	ret    0x344e
  41daf4:	sbb    ebx,DWORD PTR [eax]
  41daf6:	xor    BYTE PTR [eax-0xb3ea1c0],dl
  41dafc:	and    eax,0xd0cf49b7
  41db01:	adc    dh,BYTE PTR [ecx+0x2a]
  41db04:	add    DWORD PTR ds:0x836a05d6,ebx
  41db0a:	loope  0x41db79
  41db0c:	repnz or al,dh
  41db0f:	rol    ecx,0xeb
  41db12:	adc    ebp,DWORD PTR [ecx+0x23f04b42]
  41db18:	mov    ds:0xd64a9864,al
  41db1d:	inc    eax
  41db1e:	sbb    eax,0xe851ed98
  41db23:	push   0x5c
  41db25:	mov    esp,0x8cb0bd4e
  41db2a:	cmp    DWORD PTR [ebx+0x21],esp
  41db2d:	mov    esp,0xb3cdacb4
  41db32:	stos   DWORD PTR es:[edi],eax
  41db33:	jno    0x41dbb1
  41db35:	retf   0xdd06
  41db38:	int    0xd3
  41db3a:	cmp    BYTE PTR [ecx-0x26],dl
  41db3d:	ror    BYTE PTR [ebp+edx*8-0x689cc14e],0xc6
  41db45:	push   0x675e969a
  41db4a:	loop   0x41db06
  41db4c:	loope  0x41dad8
  41db4e:	repnz sbb DWORD PTR [ecx+ebx*4-0x20],ecx
  41db53:	(bad)  
  41db54:	clc    
  41db55:	out    0xba,al
  41db57:	cmp    ebp,esp
  41db59:	es inc ecx
  41db5b:	add    BYTE PTR [edi+0x43],0x9
  41db5f:	cmp    BYTE PTR [ebp-0x6507988b],dh
  41db65:	jle    0x41db73
  41db67:	lods   al,BYTE PTR ds:[esi]
  41db68:	jmp    0x6c55:0x29a7bdd6
  41db6f:	cwde   
  41db70:	xchg   edx,eax
  41db71:	pop    ebx
  41db72:	push   cs
  41db73:	or     DWORD PTR [ebp+0x79],esi
  41db76:	pop    esp
  41db77:	pop    ebp
  41db78:	lods   eax,DWORD PTR ds:[esi]
  41db79:	mov    dl,0x5e
  41db7b:	in     eax,dx
  41db7c:	pop    esi
  41db7d:	aam    0xeb
  41db7f:	(bad)  
  41db80:	das    
  41db81:	loopne 0x41db63
  41db83:	(bad)  
  41db85:	icebp  
  41db86:	jmp    0xc6ed:0x8846b4be
  41db8d:	test   DWORD PTR [esi*2+0xf768f0b],ebp
  41db94:	pop    ds
  41db95:	(bad)  
  41db96:	jo     0x41db8c
  41db98:	fisub  WORD PTR [ebx+edx*1+0x7f20a366]
  41db9f:	pushf  
  41dba0:	aas    
  41dba1:	hlt    
  41dba2:	and    al,0xa7
  41dba4:	mov    esi,edx
  41dba6:	retf   0x8c1f
  41dba9:	cmp    ecx,ecx
  41dbab:	mov    edx,0x8273ca7c
  41dbb0:	mov    ebp,esi
  41dbb2:	jle    0x41dc24
  41dbb4:	scas   eax,DWORD PTR es:[edi]
  41dbb5:	or     bh,dh
  41dbb7:	aas    
  41dbb8:	fwait
  41dbb9:	fwait
  41dbba:	jb     0x41dbfd
  41dbbc:	sub    al,0xd0
  41dbbe:	adc    BYTE PTR [ebx+0x180b32a1],ch
  41dbc4:	and    DWORD PTR [esi],ebx
  41dbc6:	adc    BYTE PTR [ebp+0x3007dc92],cl
  41dbcc:	pop    ebp
  41dbce:	xchg   esi,eax
  41dbcf:	cmp    DWORD PTR ds:0xb87aae2d,ebp
  41dbd5:	push   ebp
  41dbd6:	sub    cl,0x8f
  41dbd9:	(bad)
  41dbdd:	cs pop ebp
  41dbdf:	imul   esp,DWORD PTR [ecx-0x974ba14],0x11be3025
  41dbe9:	fld    QWORD PTR [edi+0x18b2350]
  41dbef:	jmp    0xc029:0xa40e0376
  41dbf6:	and    DWORD PTR [edx],edi
  41dbf8:	sub    dh,BYTE PTR [eax+0x49]
  41dbfb:	mov    ss,WORD PTR [eax]
  41dbfd:	sbb    ah,ch
  41dbff:	cmc    
  41dc00:	pop    es
  41dc01:	or     esi,esi
  41dc03:	add    DWORD PTR [esp+edx*8],esp
  41dc06:	pusha  
  41dc07:	sub    edx,DWORD PTR [eax-0x5b]
  41dc0a:	das    
  41dc0b:	mov    ebp,0x812c6f59
  41dc10:	mov    ds:0xe21967e1,al
  41dc15:	jg     0x41dc5c
  41dc17:	inc    ecx
  41dc18:	sbb    esi,ebx
  41dc1a:	mov    ebp,ds
  41dc1c:	jo     0x41dbec
  41dc1e:	in     al,0xd7
  41dc20:	out    0xb6,al
  41dc22:	loop   0x41dc9d
  41dc24:	loopne 0x41dbaf
  41dc26:	pop    eax
  41dc27:	and    DWORD PTR [ebp+0x4b],0x131e552d
  41dc2e:	(bad)  
  41dc2f:	xchg   esp,eax
  41dc30:	(bad)  
  41dc31:	fldcw  WORD PTR [esi+edx*1+0x356b84e8]
  41dc38:	das    
  41dc39:	jle    0x41dbec
  41dc3b:	mov    cl,0x1c
  41dc3d:	jecxz  0x41dbea
  41dc3f:	jmp    0x41dbfa
  41dc41:	call   0xab8b:0x674e393b
  41dc48:	sbb    BYTE PTR [esi+0x4],dh
  41dc4b:	xchg   edi,eax
  41dc4c:	inc    ebp
  41dc4d:	jmp    0x41dc2d
  41dc4f:	cmp    ch,BYTE PTR [ecx]
  41dc51:	fwait
  41dc52:	das    
  41dc53:	repz jg 0x41dc68
  41dc56:	push   0x3d29e41c
  41dc5b:	pop    edx
  41dc5c:	mov    ecx,0x162960ad
  41dc61:	out    0x3f,al
  41dc63:	xchg   esp,eax
  41dc64:	jg     0x41dbf7
  41dc66:	push   es
  41dc67:	mov    bl,0xd3
  41dc69:	retf   0xc1f3
  41dc6c:	jge    0x41dc3a
  41dc6e:	mov    esi,DWORD PTR [edx-0x37]
  41dc71:	sub    DWORD PTR [esp+eax*1-0x54],0xffffff92
  41dc76:	aam    0x80
  41dc78:	sahf   
  41dc79:	jl     0x41dc8f
  41dc7b:	inc    edi
  41dc7c:	lods   al,BYTE PTR ds:[esi]
  41dc7d:	fld    QWORD PTR [edi-0x6a]
  41dc80:	fcom   st(7)
  41dc82:	lods   eax,DWORD PTR ds:[esi]
  41dc83:	add    esi,DWORD PTR [edi]
  41dc85:	inc    esp
  41dc86:	les    edi,FWORD PTR [edx-0x5]
  41dc89:	leave  
  41dc8a:	(bad)  
  41dc8b:	or     ecx,DWORD PTR cs:[edi-0x77]
  41dc8f:	sbb    esi,DWORD PTR [ebx-0xa7a019e]
  41dc95:	xchg   ebx,eax
  41dc96:	pop    ebp
  41dc97:	popa   
  41dc98:	imul   edi,DWORD PTR [bp+si],0xeb724371
  41dc9f:	adc    DWORD PTR [ebp+esi*2+0x5d],ebx
  41dca3:	in     eax,dx
  41dca4:	mov    esi,0xd9be0fbc
  41dca9:	int3   
  41dcaa:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41dcac:	cmp    al,0xfa
  41dcae:	xlat   BYTE PTR ds:[ebx]
  41dcaf:	xchg   edx,eax
  41dcb0:	in     eax,0x5e
  41dcb2:	out    0xf3,al
  41dcb4:	push   esp
  41dcb5:	xchg   esp,eax
  41dcb6:	test   DWORD PTR [ecx-0x53c7a95c],eax
  41dcbc:	or     esp,DWORD PTR [ecx]
  41dcbe:	imul   ebp,DWORD PTR [eax-0x5d],0x71828340
  41dcc5:	(bad)  
  41dcc6:	pop    ebp
  41dcc7:	ins    DWORD PTR es:[edi],dx
  41dcc8:	out    0x3a,al
  41dcca:	adc    BYTE PTR ds:0x46c4c1cf,al
  41dcd0:	or     ch,ah
  41dcd2:	pop    es
  41dcd3:	inc    edi
  41dcd4:	push   cs
  41dcd5:	or     eax,0x2a1ab7c5
  41dcda:	jmp    0x41dcae
  41dcdc:	aas    
  41dcdd:	sub    esp,0xa50e5641
  41dce3:	gs adc ebx,esp
  41dce6:	mov    bl,0xb3
  41dce8:	nop
  41dce9:	(bad)  
  41dcea:	fcomip st,st(0)
  41dcec:	jg     0x41dce6
  41dcee:	jnp    0x41dc78
  41dcf0:	lods   eax,DWORD PTR ds:[esi]
  41dcf1:	adc    BYTE PTR [esi+eiz*2],al
  41dcf4:	push   ebx
  41dcf5:	loope  0x41dc95
  41dcf7:	mov    ecx,DWORD PTR [edx+0x94f00ed]
  41dcfd:	and    eax,0x1015822c
  41dd02:	inc    ebx
  41dd03:	adc    DWORD PTR [edx+eiz*1-0x7cd8b60d],ecx
  41dd0a:	sbb    BYTE PTR [eax+0x69],bl
  41dd0d:	inc    ebx
  41dd0e:	cld    
  41dd0f:	cmp    al,0x0
  41dd11:	popf   
  41dd12:	das    
  41dd13:	fnstenv [ebx+eax*4]
  41dd16:	in     al,dx
  41dd17:	jl     0x41dd43
  41dd19:	sub    BYTE PTR [edx+0x5f],ch
  41dd1c:	jg     0x41dceb
  41dd1e:	int3   
  41dd1f:	lock xor al,0x39
  41dd22:	lahf   
  41dd23:	push   ss
  41dd24:	js     0x41dd19
  41dd26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd27:	xchg   esp,eax
  41dd28:	sbb    eax,0xca19c616
  41dd2d:	sub    eax,0xf221a2ef
  41dd32:	or     eax,0x740ef779
  41dd37:	outs   dx,DWORD PTR ds:[esi]
  41dd38:	ss jnp 0x41dd66
  41dd3b:	xchg   edx,eax
  41dd3c:	ret    0xee31
  41dd3f:	add    DWORD PTR [ebp-0x26],edx
  41dd42:	push   0xffffffb6
  41dd44:	test   al,0xd4
  41dd46:	jl     0x41dd3b
  41dd48:	lahf   
  41dd49:	icebp  
  41dd4a:	data16 jno 0x41dda1
  41dd4d:	sbb    eax,0x614534c2
  41dd52:	sar    DWORD PTR [esi-0x6cb9890f],cl
  41dd58:	scas   al,BYTE PTR es:[edi]
  41dd59:	test   BYTE PTR [ebx+0x4d614a90],dl
  41dd5f:	mov    eax,0xff1568c4
  41dd64:	sub    al,0xce
  41dd66:	xchg   esi,eax
  41dd67:	jns    0x41dd51
  41dd69:	mov    ch,BYTE PTR [edi+0x39]
  41dd6c:	sbb    DWORD PTR [esi-0x1b55d11f],edx
  41dd72:	push   edi
  41dd73:	cmp    eax,esi
  41dd75:	cmp    al,0x92
  41dd77:	imul   edi,DWORD PTR [esp+ecx*1-0x4b],0x6050ea9b
  41dd7f:	xor    al,0x93
  41dd81:	push   0x88949da0
  41dd86:	dec    eax
  41dd87:	jne    0x41dd8d
  41dd89:	jns    0x41dd1a
  41dd8b:	leave  
  41dd8c:	add    dh,dl
  41dd8e:	xchg   ebx,eax
  41dd90:	ins    BYTE PTR es:[edi],dx
  41dd91:	fs pop es
  41dd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd94:	pop    eax
  41dd95:	or     bl,BYTE PTR [eax+0x31]
  41dd98:	dec    esi
  41dd99:	rcl    DWORD PTR [ecx],0x38
  41dd9c:	icebp  
  41dd9d:	popf   
  41dd9e:	pop    esi
  41dd9f:	jmp    DWORD PTR [ecx+0x6e]
  41dda2:	lock test dl,ah
  41dda5:	mov    ebx,0xeb60ba8
  41ddaa:	push   edx
  41ddab:	pop    ss
  41ddac:	inc    edi
  41ddad:	enter  0x75ba,0x2f
  41ddb1:	in     eax,dx
  41ddb2:	fstp   DWORD PTR [edi-0x30]
  41ddb5:	xor    esp,DWORD PTR [eax-0x7876b0ac]
  41ddbb:	adc    al,0xe1
  41ddbd:	or     cl,BYTE PTR [eax-0x27c81fef]
  41ddc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ddc4:	inc    esi
  41ddc5:	cmp    al,0xbb
  41ddc7:	stos   DWORD PTR es:[edi],eax
  41ddc8:	or     edx,DWORD PTR [eax+0x334b38cc]
  41ddce:	lea    ebp,[edi-0x1d]
  41ddd1:	into   
  41ddd2:	mov    al,0x89
  41ddd4:	jecxz  0x41de45
  41ddd6:	xchg   esi,eax
  41ddd7:	stos   BYTE PTR es:[edi],al
  41ddd8:	dec    esp
  41ddd9:	dec    esi
  41ddda:	je     0x41ddd1
  41dddc:	dec    ebx
  41dddd:	push   cs
  41ddde:	mov    al,0x50
  41dde0:	jecxz  0x41ddfb
  41dde2:	inc    esi
  41dde3:	clc    
  41dde4:	adc    eax,0x8f718d68
  41dde9:	push   eax
  41ddea:	mov    esp,edi
  41ddec:	sub    esi,DWORD PTR [ecx+eiz*8-0x4f]
  41ddf0:	or     eax,0xe34974ca
  41ddf5:	cld    
  41ddf6:	fisttp WORD PTR [edi+0xf]
  41ddf9:	jns    0x41de15
  41ddfb:	test   DWORD PTR [edi],ecx
  41ddfd:	sbb    dl,BYTE PTR [edx-0x47]
  41de00:	lea    ecx,[ebx+0xf]
  41de03:	cdq    
  41de04:	xchg   ebp,eax
  41de05:	xchg   esi,eax
  41de06:	cmp    al,0x26
  41de08:	call   0x37b692ba
  41de0d:	aad    0x1
  41de0f:	mov    edi,0x1f944e2b
  41de14:	dec    edi
  41de15:	mov    edx,0xa86c95a5
  41de1a:	jb     0x41de99
  41de1c:	push   eax
  41de1d:	inc    ebp
  41de1e:	in     al,0x1a
  41de20:	inc    esi
  41de21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de22:	loope  0x41de92
  41de24:	and    eax,0x94a9a3a8
  41de29:	and    BYTE PTR [ecx+0x1820e6c9],bl
  41de2f:	fs sahf 
  41de31:	ins    DWORD PTR es:[edi],dx
  41de32:	xlat   BYTE PTR ds:[ebx]
  41de33:	int3   
  41de34:	das    
  41de35:	mov    ah,0xae
  41de37:	xchg   esi,eax
  41de38:	push   esp
  41de39:	js     0x41de30
  41de3b:	mov    dh,0xc6
  41de3d:	mov    al,ds:0xcddc8209
  41de42:	xor    al,0x12
  41de44:	test   eax,0x4762f4d0
  41de49:	jmp    0x2fe966a5
  41de4e:	push   0xffffffea
  41de50:	jmp    DWORD PTR [ecx]
  41de52:	xchg   ebx,eax
  41de53:	mov    ch,0x7d
  41de55:	push   esp
  41de56:	ins    DWORD PTR es:[edi],dx
  41de57:	mov    ecx,0x23784ccd
  41de5c:	adc    edx,DWORD PTR [ebx]
  41de5e:	cmp    ebx,DWORD PTR [edi+ebx*4]
  41de61:	jp     0x41dec6
  41de63:	sbb    ecx,DWORD PTR [ecx-0x61]
  41de66:	sub    bh,0x94
  41de69:	hlt    
  41de6a:	jo     0x41deb0
  41de6c:	and    ch,BYTE PTR [edx]
  41de6e:	scas   al,BYTE PTR es:[edi]
  41de6f:	sub    BYTE PTR [edx],dl
  41de71:	loop   0x41de89
  41de73:	in     eax,dx
  41de74:	jno    0x41deb2
  41de76:	sar    edx,0x97
  41de79:	mov    eax,ds:0x9ccb4f5c
  41de7e:	xor    eax,0x83034b7d
  41de83:	jp     0x41de18
  41de85:	sar    cl,0xbe
  41de88:	push   edx
  41de89:	aam    0xa2
  41de8b:	sti    
  41de8c:	inc    ebx
  41de8d:	data16 shr BYTE PTR [edi+0x7c],cl
  41de91:	inc    edi
  41de92:	aam    0xf2
  41de94:	inc    eax
  41de95:	cmp    DWORD PTR [edx+0x42],ecx
  41de98:	shl    DWORD PTR [ecx],1
  41de9a:	jle    0x41de3e
  41de9c:	mov    ebp,0x3cd33e4d
  41dea1:	iret   
  41dea2:	inc    eax
  41dea3:	xchg   BYTE PTR [edi+0x764355e4],cl
  41dea9:	sbb    eax,0x4c4d4227
  41deae:	mov    dh,0xf6
  41deb0:	dec    ebx
  41deb1:	and    ebx,DWORD PTR [ebp+0x7b]
  41deb4:	push   edx
  41deb5:	mov    ebp,0x9c50047f
  41deba:	test   ebx,ecx
  41debc:	das    
  41debd:	lods   al,BYTE PTR ds:[esi]
  41debe:	mov    ds:0xe1e92c61,al
  41dec3:	mov    gs,esp
  41dec5:	aas    
  41dec6:	jbe    0x41deab
  41dec8:	mov    al,0x55
  41deca:	ins    DWORD PTR es:[edi],dx
  41decb:	fs pop ebp
  41decd:	fcomi  st,st(5)
  41decf:	add    cl,BYTE PTR [esi-0x7b]
  41ded2:	inc    edx
  41ded3:	out    dx,al
  41ded4:	dec    edx
  41ded5:	push   edx
  41ded6:	nop
  41ded7:	push   ss
  41ded8:	xchg   esp,eax
  41ded9:	daa    
  41deda:	ret    
  41dedb:	add    bl,BYTE PTR [ebx]
  41dedd:	fld    TBYTE PTR [edx-0x1ef8a0d9]
  41dee3:	shl    DWORD PTR [esi],0xc3
  41dee6:	in     al,0x47
  41dee8:	sbb    ecx,DWORD PTR [edx]
  41deea:	pop    eax
  41deeb:	inc    ebx
  41deec:	pop    edi
  41deed:	lds    ebp,FWORD PTR [eax-0x69b5b14c]
  41def3:	cdq    
  41def4:	clc    
  41def5:	inc    esp
  41def6:	icebp  
  41def7:	call   DWORD PTR [eax+edi*1-0x2be3ed3e]
  41defe:	pop    edx
  41deff:	xchg   BYTE PTR fs:[edi],al
  41df02:	sbb    cl,al
  41df04:	pop    eax
  41df05:	retf   0xee41
  41df08:	dec    ebp
  41df09:	dec    edx
  41df0a:	or     BYTE PTR [edx-0x3d],0xb1
  41df0e:	fdiv   st(7),st
  41df10:	push   esp
  41df11:	shl    DWORD PTR [eax+ebx*8+0x32],1
  41df15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df16:	sahf   
  41df17:	push   0x4790b54
  41df1c:	nop
  41df1d:	add    ch,dh
  41df1f:	cmp    eax,ecx
  41df21:	scas   eax,DWORD PTR es:[edi]
  41df22:	pop    ebp
  41df23:	xchg   ebp,eax
  41df24:	add    ecx,esi
  41df26:	(bad)  
  41df27:	mov    ebx,0x9d799974
  41df2c:	dec    ecx
  41df2d:	mov    ds,WORD PTR [edx]
  41df2f:	bound  esi,QWORD PTR [edx]
  41df31:	ins    DWORD PTR es:[edi],dx
  41df32:	mov    eax,0xc4b53caa
  41df37:	mov    es,WORD PTR [edi]
  41df39:	mov    esi,DWORD PTR [eax+0x55938279]
  41df3f:	adc    eax,0x1aa48081
  41df44:	add    DWORD PTR [ebx],esp
  41df46:	je     0x41df0d
  41df48:	add    DWORD PTR fs:[eax],ebx
  41df4b:	jmp    0x35d034ef
  41df50:	les    ebp,FWORD PTR [esi]
  41df52:	add    ch,al
  41df54:	add    al,0xa9
  41df56:	jne    0x41df7c
  41df58:	xor    ah,dh
  41df5a:	pop    eax
  41df5b:	pop    ds
  41df5c:	sbb    al,0x27
  41df5e:	dec    edi
  41df5f:	retf   
  41df60:	push   esi
  41df61:	imul   esp,DWORD PTR [ebp+0x4e],0x35
  41df65:	xor    al,0x74
  41df67:	pop    bx
  41df69:	(bad)  
  41df6a:	lock and al,0xe6
  41df6d:	lock jmp 0x46f5ff87
  41df73:	jns    0x41df30
  41df75:	pop    ds
  41df76:	adc    BYTE PTR [edx-0x5a],al
  41df79:	dec    esp
  41df7a:	xchg   esi,eax
  41df7b:	cmp    al,0x50
  41df7d:	add    bh,bh
  41df7f:	call   0x6505:0x29e5ff3d
  41df86:	shl    al,1
  41df88:	push   esi
  41df89:	add    al,cl
  41df8b:	jge    0x41dfa5
  41df8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df8e:	repz sahf 
  41df90:	sbb    dh,BYTE PTR [ebp+ebx*4-0x605c189a]
  41df97:	inc    esp
  41df98:	dec    eax
  41df99:	push   es
  41df9a:	mov    ds:0x82e42473,eax
  41df9f:	pop    esi
  41dfa0:	dec    ecx
  41dfa1:	scas   al,BYTE PTR es:[edi]
  41dfa2:	fs mov ch,cl
  41dfa5:	cli    
  41dfa6:	stc    
  41dfa7:	push   eax
  41dfa8:	mov    ecx,DWORD PTR [edx]
  41dfaa:	xor    DWORD PTR [ebx-0x3546a595],esp
  41dfb0:	jp     0x41df69
  41dfb2:	outs   dx,BYTE PTR ds:[esi]
  41dfb3:	bound  edx,QWORD PTR [eax]
  41dfb5:	mov    ebx,0xf2c29932
  41dfba:	es add eax,0x2229d6df
  41dfc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dfc1:	rol    ch,1
  41dfc3:	pop    es
  41dfc4:	push   ebx
  41dfc5:	lock sbb ecx,DWORD PTR [edi+eiz*8-0x16]
  41dfca:	aam    0x82
  41dfcc:	xor    eax,0x575e4317
  41dfd1:	mov    cl,0x8b
  41dfd3:	stos   DWORD PTR es:[edi],eax
  41dfd4:	mov    esi,0x15d34720
  41dfd9:	add    al,0x90
  41dfdb:	lock jmp 0x3b6b:0xb147986f
  41dfe3:	out    0xd8,al
  41dfe5:	add    BYTE PTR [ebp+edi*2+0x383fca08],ch
  41dfec:	outs   dx,BYTE PTR ds:[esi]
  41dfed:	in     eax,dx
  41dfee:	pushf  
  41dfef:	mov    cl,0x9e
  41dff1:	pop    ecx
  41dff2:	xchg   ecx,eax
  41dff3:	push   0xce79b530
  41dff8:	outs   dx,BYTE PTR ds:[esi]
  41dff9:	fisub  DWORD PTR [esi]
  41dffb:	js     0x41e057
  41dffd:	jae    0x41e049
  41dfff:	mov    ebp,0x7ac20fcb
  41e004:	test   DWORD PTR [esi],0xb5c90a32
  41e00a:	push   ecx
  41e00b:	mov    bl,0xc6
  41e00d:	pop    es
  41e00e:	daa    
  41e00f:	fild   QWORD PTR [edi-0x3f]
  41e012:	repz and bl,dh
  41e015:	test   ecx,eax
  41e017:	mov    DWORD PTR [edx-0x3357a64f],edx
  41e01d:	div    cl
  41e01f:	mov    dh,0xa1
  41e021:	out    dx,al
  41e022:	in     eax,0xe
  41e024:	loope  0x41e00f
  41e026:	and    edx,eax
  41e028:	pop    ebp
  41e029:	and    DWORD PTR [ebp+0x75c02dd],ebp
  41e02f:	mov    ah,0x11
  41e031:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e032:	mov    ds:0x608490a2,al
  41e037:	dec    ecx
  41e038:	pushf  
  41e039:	lahf   
  41e03a:	xor    DWORD PTR [eax],ebp
  41e03c:	or     al,0x5c
  41e03e:	mov    ah,0xca
  41e040:	into   
  41e041:	pusha  
  41e042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e043:	int    0xa1
  41e045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e046:	out    dx,eax
  41e047:	add    al,0x63
  41e049:	xchg   ebx,eax
  41e04a:	xor    esp,DWORD PTR ds:0x6b1ba8de
  41e050:	push   eax
  41e051:	(bad)  
  41e052:	(bad)  
  41e053:	xor    eax,0x2b49e2c2
  41e058:	sbb    DWORD PTR [ebx],eax
  41e05a:	outs   dx,BYTE PTR ds:[esi]
  41e05b:	jnp    0x41dffb
  41e05d:	in     eax,dx
  41e05e:	mov    ds:0xb2e0c03c,eax
  41e063:	push   0x5c
  41e065:	adc    al,0x49
  41e067:	stos   BYTE PTR es:[edi],al
  41e068:	adc    eax,DWORD PTR [esi+0x5a]
  41e06b:	adc    eax,0x681ba1fb
  41e070:	pop    es
  41e071:	test   al,0x5a
  41e073:	or     ebp,DWORD PTR [esi-0x11]
  41e076:	mov    bl,0x8e
  41e078:	adc    ah,bl
  41e07a:	out    dx,al
  41e07b:	xchg   edx,eax
  41e07c:	popf   
  41e07d:	scas   al,BYTE PTR es:[edi]
  41e07e:	inc    ebx
  41e07f:	pop    esp
  41e080:	ins    BYTE PTR es:[edi],dx
  41e081:	xor    esp,ebp
  41e083:	out    dx,eax
  41e084:	shl    BYTE PTR [eax],cl
  41e086:	cmp    eax,DWORD PTR [edi+0xd]
  41e089:	js     0x41e0c7
  41e08b:	scas   al,BYTE PTR es:[edi]
  41e08c:	lods   eax,DWORD PTR es:[esi]
  41e08e:	ja     0x41e036
  41e090:	or     eax,0x4b4fd476
  41e095:	xor    eax,0xbb7dbb
  41e09a:	or     ah,0xab
  41e09d:	add    al,0xa7
  41e09f:	xor    ecx,ebp
  41e0a1:	or     al,0x30
  41e0a3:	mov    esp,0x530c5470
  41e0a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0a9:	enter  0x3092,0xc8
  41e0ad:	out    0x7e,al
  41e0af:	jbe    0x41e0f4
  41e0b1:	ins    DWORD PTR es:[edi],dx
  41e0b2:	pop    es
  41e0b3:	(bad)  
  41e0b5:	pusha  
  41e0b6:	xchg   BYTE PTR [ecx],dh
  41e0b8:	adc    eax,0xc5206984
  41e0bd:	xor    eax,ebp
  41e0bf:	jp     0x41e065
  41e0c1:	out    dx,al
  41e0c2:	imul   ecx,ebx,0xffffffa5
  41e0c5:	lock iret 
  41e0c7:	out    dx,al
  41e0c8:	mov    ds:0x5a46ad,eax
  41e0cd:	dec    ebx
  41e0ce:	jae    0x41e0d8
  41e0d0:	loope  0x41e10d
  41e0d2:	pop    ecx
  41e0d3:	mov    eax,0x6f8408fe
  41e0d8:	(bad)  
  41e0d9:	or     esp,DWORD PTR [esp+edi*4-0x31]
  41e0dd:	mov    DWORD PTR [ebx-0x17],ebx
  41e0e0:	jg     0x41e0aa
  41e0e2:	neg    BYTE PTR [ecx]
  41e0e4:	jae    0x41e071
  41e0e6:	push   esp
  41e0e7:	jp     0x41e150
  41e0e9:	fisubr DWORD PTR cs:[eax-0x10f7d3d6]
  41e0f0:	push   ebp
  41e0f1:	scas   eax,DWORD PTR es:[edi]
  41e0f2:	sahf   
  41e0f3:	mov    dl,0xc5
  41e0f5:	xor    ebp,edx
  41e0f7:	sar    bh,0xf4
  41e0fa:	enter  0xcd96,0x9d
  41e0fe:	nop    DWORD PTR [ebp-0x54223616]
  41e105:	adc    DWORD PTR [edx+0x5d],esp
  41e108:	inc    esp
  41e109:	retfw  0x16e0
  41e10d:	dec    ebp
  41e10e:	mov    ds:0x1ae8acbe,al
  41e113:	arpl   WORD PTR ds:0x7b404f6e,cx
  41e119:	and    BYTE PTR [esi],dh
  41e11b:	enter  0x1dc0,0xaf
  41e11f:	jne    0x41e180
  41e121:	lods   eax,DWORD PTR ds:[esi]
  41e122:	loope  0x41e0c4
  41e124:	jbe    0x41e191
  41e126:	cmp    al,0x20
  41e128:	loopne 0x41e16e
  41e12a:	(bad)  
  41e12b:	and    ebp,DWORD PTR [ecx+ebx*1-0x1b75b874]
  41e132:	scas   eax,DWORD PTR es:[edi]
  41e133:	sub    eax,0x43166146
  41e138:	outs   dx,BYTE PTR ds:[esi]
  41e139:	fstp   DWORD PTR [eax+0x6c77eaa4]
  41e13f:	sub    dh,BYTE PTR [esi+0x25]
  41e142:	loop   0x41e1a2
  41e144:	sub    BYTE PTR [ecx],ah
  41e146:	bound  esp,QWORD PTR [ebx+0x3385126b]
  41e14c:	ret    
  41e14d:	mov    dh,0xa4
  41e14f:	sub    al,0x79
  41e151:	push   ss
  41e152:	jnp    0x41e11c
  41e154:	repz cmp al,0x2
  41e157:	push   es
  41e158:	ret    0xf6ac
  41e15b:	pop    esi
  41e15c:	out    dx,eax
  41e15d:	cwde   
  41e15e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e15f:	retf   0x6dd
  41e162:	ins    DWORD PTR es:[edi],dx
  41e163:	sub    eax,0xb9f94197
  41e168:	jmp    0xc5a2:0x1d332ece
  41e16f:	jl     0x41e157
  41e171:	fld    QWORD PTR [esi]
  41e173:	stos   DWORD PTR es:[edi],eax
  41e174:	push   0xd9635c35
  41e179:	cmp    BYTE PTR [edi],dh
  41e17b:	fwait
  41e17c:	mov    al,0xf5
  41e17e:	jge    0x41e1f0
  41e180:	push   es
  41e181:	mov    bl,0x7f
  41e183:	rcl    DWORD PTR ds:0x3669be34,0xbd
  41e18a:	adc    dl,BYTE PTR [eax+0x64]
  41e18d:	mov    ds:0x896ff9a3,eax
  41e192:	jp     0x41e189
  41e194:	mov    dl,0x3c
  41e196:	push   ss
  41e197:	add    BYTE PTR [eax+esi*2],ah
  41e19a:	adc    BYTE PTR [edx],ah
  41e19c:	cmp    eax,0xd5ce8f61
  41e1a1:	popa   
  41e1a2:	or     DWORD PTR [edx+0x46],edi
  41e1a5:	(bad)  
  41e1a6:	outs   dx,DWORD PTR ds:[esi]
  41e1a7:	(bad)  
  41e1a8:	jmp    0x41e150
  41e1aa:	imul   ebx,edi,0xcaa8e42e
  41e1b0:	adc    edx,DWORD PTR [edx]
  41e1b2:	jbe    0x41e18b
  41e1b4:	icebp  
  41e1b5:	cmc    
  41e1b6:	cmp    DWORD PTR [ecx+0x19],edi
  41e1b9:	or     bh,BYTE PTR [ebx+0xeb8144f]
  41e1bf:	mov    WORD PTR [edi],es
  41e1c1:	stc    
  41e1c2:	rcl    BYTE PTR [ebx],cl
  41e1c4:	mov    esi,0x2d384652
  41e1c9:	push   ebp
  41e1ca:	mov    ebx,0xb40a4bb4
  41e1cf:	cmp    ecx,edi
  41e1d1:	xor    ch,BYTE PTR [esi+0x77b2876]
  41e1d7:	cmp    DWORD PTR [ebx+edi*8-0x52af9d61],esi
  41e1de:	adc    DWORD PTR [ebp-0x23],0xffffffb9
  41e1e2:	inc    esi
  41e1e3:	loope  0x41e1ea
  41e1e5:	lods   al,BYTE PTR ds:[esi]
  41e1e6:	out    0x5b,al
  41e1e8:	ret    
  41e1e9:	loopne 0x41e1e4
  41e1eb:	fisub  WORD PTR [edx+0x3f]
  41e1ee:	xchg   edi,eax
  41e1ef:	repz push ss
  41e1f1:	sbb    DWORD PTR [esi+0x39ad4e20],esp
  41e1f7:	cmp    eax,0xc252bcdf
  41e1fc:	pop    edx
  41e1fd:	mov    esp,DWORD PTR [esi+0x2e]
  41e200:	pop    ebx
  41e201:	dec    eax
  41e202:	jmp    0x384ea851
  41e207:	lds    edi,FWORD PTR [ebx+0x62ad6551]
  41e20d:	jp     0x41e283
  41e20f:	fnstcw WORD PTR [ebx]
  41e211:	gs sub esi,DWORD PTR ss:[ebp+0x2]
  41e216:	mov    eax,edx
  41e218:	(bad)  
  41e219:	stos   BYTE PTR es:[edi],al
  41e21a:	popa   
  41e21b:	xchg   ecx,eax
  41e21c:	mov    dl,0x82
  41e21f:	pop    edi
  41e220:	dec    esp
  41e221:	jg     0x41e258
  41e223:	adc    eax,0xafb4b322
  41e228:	aaa    
  41e229:	lds    eax,FWORD PTR [eax]
  41e22b:	jbe    0x41e1fa
  41e22d:	les    eax,FWORD PTR [edx-0x5ce8b339]
  41e233:	pop    ss
  41e234:	loope  0x41e2b3
  41e236:	in     eax,dx
  41e237:	or     bh,ch
  41e239:	or     DWORD PTR [edi+0x2332b43e],ebp
  41e23f:	adc    BYTE PTR [ebp+0x5],bh
  41e242:	dec    edx
  41e243:	add    eax,0x26d48be1
  41e248:	and    esi,edx
  41e24a:	push   esp
  41e24b:	dec    ebx
  41e24c:	adc    BYTE PTR [eax],0x1c
  41e24f:	dec    esp
  41e250:	idiv   eax
  41e252:	or     dh,dl
  41e254:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e255:	(bad)  
  41e256:	fcomp  DWORD PTR [edi-0x5d61aecf]
  41e25c:	add    DWORD PTR ds:[esp+edx*1],eax
  41e260:	pop    ebp
  41e261:	add    bl,ah
  41e263:	addr16 inc eax
  41e265:	cwde   
  41e266:	stc    
  41e267:	xor    BYTE PTR [ecx],cl
  41e269:	push   edi
  41e26a:	in     eax,dx
  41e26b:	retf   
  41e26c:	icebp  
  41e26d:	mov    bl,0x95
  41e26f:	aas    
  41e270:	in     eax,dx
  41e271:	xchg   ecx,eax
  41e272:	push   es
  41e273:	xor    DWORD PTR [edx],ebx
  41e275:	jecxz  0x41e266
  41e277:	xor    BYTE PTR [edx],0x46
  41e27a:	retf   0xf0bf
  41e27d:	xor    eax,DWORD PTR [ebp+0x68]
  41e280:	rol    BYTE PTR [edi],cl
  41e282:	pavgb  mm1,QWORD PTR [eax-0x4c]
  41e286:	jmp    0x41e2d1
  41e288:	xchg   esp,eax
  41e289:	in     al,dx
  41e28a:	xor    BYTE PTR [edi-0x7c],dh
  41e28d:	aas    
  41e28e:	xchg   ebp,eax
  41e28f:	dec    edi
  41e290:	stc    
  41e291:	loop   0x41e2f5
  41e293:	pop    es
  41e294:	add    ecx,DWORD PTR [ecx*2-0x3bc749c1]
  41e29b:	imul   ebx,DWORD PTR [edi-0x53916bed],0xffffff8a
  41e2a2:	mov    dh,0x98
  41e2a4:	and    bh,dl
  41e2a6:	loop   0x41e25e
  41e2a8:	ret    0x2db7
  41e2ab:	rol    bh,1
  41e2ad:	enter  0x2c86,0x58
  41e2b1:	lods   eax,DWORD PTR ds:[esi]
  41e2b2:	jo     0x41e2a8
  41e2b4:	mov    ebx,0xda1e780
  41e2b9:	sbb    BYTE PTR [ecx+0x45],ah
  41e2bc:	dec    esp
  41e2bd:	sub    ch,BYTE PTR [eax]
  41e2bf:	pop    edi
  41e2c1:	add    ecx,DWORD PTR [eax-0x60]
  41e2c4:	push   cs
  41e2c5:	pop    esi
  41e2c6:	jmp    0x41e2ed
  41e2c8:	imul   esp,DWORD PTR [ebp+esi*4+0x4f47f6fd],0x6f
  41e2d0:	jecxz  0x41e2bd
  41e2d2:	imul   ebx,esi,0xc83d309e
  41e2d8:	xchg   DWORD PTR [ebx],ebp
  41e2da:	hlt    
  41e2db:	je     0x41e319
  41e2dd:	adc    eax,0x9940651a
  41e2e2:	and    al,0xf6
  41e2e4:	je     0x41e327
  41e2e6:	push   edi
  41e2e7:	in     ax,0xcf
  41e2ea:	fist   WORD PTR [esi+ecx*8]
  41e2ed:	sub    DWORD PTR [eax-0x17f9c49],esp
  41e2f3:	dec    edx
  41e2f4:	adc    bh,BYTE PTR [esi+0x2c]
  41e2f7:	jns    0x41e313
  41e2f9:	stos   DWORD PTR es:[edi],eax
  41e2fa:	mov    ebp,0xd0a2ee03
  41e2ff:	cmc    
  41e300:	imul   eax,ecx,0xc9e45e98
  41e306:	and    eax,0xb3450be4
  41e30b:	icebp  
  41e30c:	xchg   ebp,eax
  41e30d:	xor    BYTE PTR [edi-0x2249979],ah
  41e313:	imul   eax,DWORD PTR [esi],0xffffffd2
  41e316:	push   ecx
  41e317:	lods   eax,DWORD PTR ds:[esi]
  41e318:	push   es
  41e319:	or     eax,0xa84cc021
  41e31e:	adc    eax,0xd5b0c71c
  41e323:	data16 adc ch,BYTE PTR [edx+0x5c]
  41e327:	xor    eax,edi
  41e329:	xor    edx,0x0
  41e32c:	cmp    eax,0x70941e0f
  41e331:	jne    0x41e365
  41e337:	cmp    edx,0xffffffff
  41e33a:	jne    0x41e365
  41e340:	mov    eax,DWORD PTR [ebp-0x4]
  41e343:	movsx  eax,BYTE PTR [eax]
  41e346:	cdq    
  41e347:	add    eax,ebx
  41e349:	adc    edx,0xffffffff
  41e34c:	xor    eax,edi
  41e34e:	xor    edx,0x0
  41e351:	cmp    eax,0x70941e1c
  41e356:	jne    0x41e365
  41e35c:	cmp    edx,0xffffffff
  41e35f:	je     0x41e37c
  41e365:	mov    eax,DWORD PTR [ebp-0x10]
  41e368:	xor    eax,ecx
  41e36a:	mov    edx,0xffcd8d0d
  41e36f:	sub    edx,eax
  41e371:	add    DWORD PTR [ebp-0x4],edx
  41e374:	mov    eax,DWORD PTR [ebp-0x4]
  41e377:	jmp    0x41bf5a
  41e37c:	mov    eax,DWORD PTR [ebp-0x14]
  41e37f:	mov    eax,DWORD PTR [eax]
  41e381:	mov    edx,DWORD PTR [ebp-0x4]
  41e384:	mov    edx,DWORD PTR [edx+0x3c]
  41e387:	lea    eax,[edx+eax*8+0x78]
  41e38b:	mov    edx,DWORD PTR [ebp-0x4]
  41e38e:	mov    eax,DWORD PTR [eax+edx*1]
  41e391:	mov    DWORD PTR [ebp-0x8],eax
  41e394:	mov    eax,DWORD PTR [ebp+0x8]
  41e397:	xor    eax,ecx
  41e399:	add    eax,esi
  41e39b:	mov    DWORD PTR [ebp-0x14],eax
  41e39e:	mov    eax,DWORD PTR [ebp+0x8]
  41e3a1:	mov    edx,DWORD PTR [ebp-0x8]
  41e3a4:	xor    eax,ecx
  41e3a6:	add    eax,esi
  41e3a8:	cmp    edx,eax
  41e3aa:	jne    0x41e3c8
  41e3b0:	mov    eax,DWORD PTR [ebp+0xc]
  41e3b3:	xor    eax,ecx
  41e3b5:	mov    ecx,DWORD PTR [ebp-0x8]
  41e3b8:	add    eax,esi
  41e3ba:	imul   eax,ecx
  41e3bd:	mov    DWORD PTR [ebp-0x8],eax
  41e3c0:	push   DWORD PTR [ebp+0x18]
  41e3c3:	jmp    0x4207e6
  41e3c8:	mov    eax,DWORD PTR [ebp-0x8]
  41e3cb:	mov    ecx,DWORD PTR [ebp-0x4]
  41e3ce:	jmp    0x420791
  41e3d3:	test   BYTE PTR [eax+0x3d],cl
  41e3d6:	lock mov cl,0x80
  41e3d9:	or     BYTE PTR [eax],0x6f
  41e3dc:	enter  0xd93f,0xdf
  41e3e0:	sub    eax,0xd5114231
  41e3e5:	add    BYTE PTR [ebx-0x7c7ca327],0xcc
  41e3ec:	jge    0x41e3b5
  41e3ee:	and    DWORD PTR [eax],ecx
  41e3f0:	xor    eax,0x9efa34e4
  41e3f5:	nop
  41e3f6:	icebp  
  41e3f7:	add    al,0x2f
  41e3f9:	adc    al,0x47
  41e3fb:	sbb    ecx,ecx
  41e3fd:	neg    cl
  41e3ff:	mov    ds:0x37992b83,al
  41e404:	cmp    ah,dl
  41e406:	jae    0x41e3a4
  41e408:	mov    eax,ds:0x209f395b
  41e40d:	cmp    bh,BYTE PTR [edx-0x34]
  41e410:	int    0x4c
  41e412:	xor    eax,0x66de625f
  41e417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e418:	push   edx
  41e419:	adc    BYTE PTR [ebx],bh
  41e41b:	sbb    BYTE PTR [edi+0x19],bh
  41e41e:	inc    ebp
  41e41f:	aas    
  41e420:	or     dh,BYTE PTR fs:[ecx]
  41e423:	jo     0x41e3f1
  41e425:	(bad)  
  41e426:	outs   dx,BYTE PTR ds:[esi]
  41e427:	pop    edx
  41e428:	ja     0x41e3bf
  41e42a:	push   ss
  41e42b:	mov    dl,0xba
  41e42d:	xchg   ebp,eax
  41e42e:	ror    BYTE PTR [edi+0x62],cl
  41e431:	cwde   
  41e432:	sti    
  41e433:	shr    DWORD PTR [ebx-0x67e59026],0x1a
  41e43a:	xor    al,0xc3
  41e43c:	adc    ebp,ecx
  41e43e:	jg     0x41e3c0
  41e440:	div    BYTE PTR [ebx+0x8aec5de]
  41e446:	stos   DWORD PTR es:[edi],eax
  41e447:	adc    ebx,DWORD PTR [ecx+0x19]
  41e44a:	pop    eax
  41e44b:	sti    
  41e44c:	cmp    DWORD PTR [ecx-0x78b36e27],0x44a3c30a
  41e456:	pop    edi
  41e457:	les    esi,FWORD PTR [eax]
  41e459:	or     BYTE PTR [ecx],bh
  41e45b:	arpl   di,sp
  41e45d:	sahf   
  41e45e:	inc    edi
  41e45f:	xchg   BYTE PTR [edx+0x29],dh
  41e462:	pushf  
  41e463:	jno    0x41e4d1
  41e465:	mov    al,ds:0xa581ddf2
  41e46a:	scas   eax,DWORD PTR es:[edi]
  41e46b:	inc    eax
  41e46c:	xchg   edx,eax
  41e46d:	outs   dx,DWORD PTR ds:[esi]
  41e46e:	das    
  41e46f:	inc    ebx
  41e470:	inc    ebx
  41e471:	rcl    BYTE PTR [esi+eax*2-0xc1487e1],0xe0
  41e479:	push   edi
  41e47a:	pop    ss
  41e47b:	lock push ecx
  41e47d:	xchg   BYTE PTR [ebp+0x2d0e59d7],ch
  41e483:	pop    eax
  41e484:	jno    0x41e474
  41e486:	gs push ebx
  41e488:	fsubrp st(6),st
  41e48a:	mov    BYTE PTR [ecx+ecx*4+0x41],0xa6
  41e48f:	dec    esp
  41e490:	dec    edx
  41e491:	xchg   ebp,eax
  41e492:	ret    0x106d
  41e495:	js     0x41e451
  41e497:	dec    edx
  41e498:	lea    edx,[edi]
  41e49a:	jae    0x41e484
  41e49c:	mov    edx,0xd3648d4b
  41e4a1:	cmc    
  41e4a2:	xchg   esi,eax
  41e4a3:	push   esi
  41e4a4:	pop    esp
  41e4a5:	inc    ebp
  41e4a6:	popf   
  41e4a7:	addr16 or bl,bh
  41e4aa:	jnp    0x41e439
  41e4ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ad:	inc    esi
  41e4ae:	jecxz  0x41e45d
  41e4b0:	sbb    ah,BYTE PTR [edx-0x59]
  41e4b3:	pop    ss
  41e4b4:	add    dl,BYTE PTR [eax-0x5724deb4]
  41e4ba:	jl     0x41e478
  41e4bc:	fistp  QWORD PTR [edi]
  41e4be:	cmp    BYTE PTR [edx],bh
  41e4c0:	daa    
  41e4c1:	(bad)  
  41e4c3:	or     DWORD PTR [eax-0x68b1b995],esp
  41e4c9:	push   esp
  41e4ca:	daa    
  41e4cb:	mov    al,cs:0x7e8ea2d7
  41e4d1:	out    0x8a,eax
  41e4d3:	and    ebx,eax
  41e4d5:	loope  0x41e537
  41e4d7:	and    DWORD PTR [ebx+0x2cf0832a],ebp
  41e4dd:	cmp    ah,bh
  41e4df:	repnz sti 
  41e4e1:	test   BYTE PTR [edi],bh
  41e4e3:	sub    eax,0xb719936e
  41e4e8:	sub    ah,BYTE PTR [esi+ebp*2]
  41e4eb:	jl     0x41e543
  41e4ed:	adc    eax,0xcf740876
  41e4f2:	aad    0xc4
  41e4f4:	xchg   edx,eax
  41e4f5:	adc    DWORD PTR [edi],esp
  41e4f7:	sbb    bh,BYTE PTR [esi+0x6eaed225]
  41e4fd:	dec    esp
  41e4fe:	loopne 0x41e579
  41e500:	sub    eax,0x95b6e50c
  41e505:	frstor [edx+0x3]
  41e508:	faddp  st(6),st
  41e50a:	lods   eax,DWORD PTR ds:[esi]
  41e50c:	adc    edi,DWORD PTR [eax-0x703e6c64]
  41e512:	mov    dh,0xee
  41e514:	or     cl,dl
  41e516:	ins    DWORD PTR es:[edi],dx
  41e517:	in     al,0x79
  41e519:	rcr    DWORD PTR [ecx-0x355a2728],1
  41e51f:	ret    
  41e520:	jo     0x41e58f
  41e522:	ds or  al,0x32
  41e525:	in     al,dx
  41e526:	push   es
  41e527:	pop    eax
  41e528:	xor    ecx,DWORD PTR [ebx+0x56]
  41e52b:	xchg   DWORD PTR [edi-0x6ae67535],ebp
  41e531:	aam    0x70
  41e533:	cs aaa 
  41e535:	push   ebx
  41e536:	fidiv  WORD PTR [ecx]
  41e538:	mov    al,ds:0x2ce173e4
  41e53d:	and    bh,dl
  41e53f:	push   ds
  41e540:	in     al,0xbc
  41e542:	cdq    
  41e543:	push   ds
  41e544:	jnp    0x41e54e
  41e546:	push   esp
  41e547:	test   al,0xe
  41e549:	push   esp
  41e54a:	sbb    BYTE PTR [eax],0xd0
  41e54d:	fmul   DWORD PTR [eax+0x2648db36]
  41e553:	xor    ah,BYTE PTR [ebx+0x4018b60c]
  41e559:	cmp    DWORD PTR [edx-0x41136f98],ebp
  41e55f:	fnstenv [ebx+0x40f5134d]
  41e565:	pusha  
  41e566:	ror    DWORD PTR [esi-0xff8a59a],cl
  41e56c:	jne    0x41e546
  41e56e:	jmp    0x3091a618
  41e573:	inc    eax
  41e574:	hlt    
  41e575:	mov    al,ds:0x384e1d48
  41e57a:	mov    DWORD PTR [edx*8-0x5d6fe9d3],eax
  41e581:	mov    DWORD PTR [esi],0xc1664eb9
  41e587:	ins    BYTE PTR es:[edi],dx
  41e588:	sbb    ebp,0x60a8ba91
  41e58e:	loopne 0x41e538
  41e590:	add    BYTE PTR [ebp+0x38],dh
  41e593:	mov    eax,ds:0xa25fcde9
  41e598:	fnstenv [edi-0x495043a5]
  41e59e:	pop    edi
  41e59f:	sub    bl,al
  41e5a1:	out    0x6e,eax
  41e5a3:	jbe    0x41e540
  41e5a5:	repnz cs cdq 
  41e5a8:	push   ss
  41e5a9:	enter  0xbe0f,0x15
  41e5ad:	and    eax,0xebd09405
  41e5b2:	adc    al,al
  41e5b4:	push   ecx
  41e5b5:	xlat   BYTE PTR ds:[ebx]
  41e5b6:	shl    BYTE PTR [esi+0x4c5c305a],cl
  41e5bc:	sbb    edx,eax
  41e5be:	fwait
  41e5bf:	(bad)  
  41e5c0:	and    eax,DWORD PTR [esi]
  41e5c2:	xor    dl,BYTE PTR [esi+eax*4+0x74]
  41e5c6:	pop    ss
  41e5c7:	mov    ecx,DWORD PTR [edi-0x3f4c3155]
  41e5cd:	pop    DWORD PTR [ebp-0x60]
  41e5d0:	out    0x4,al
  41e5d2:	pop    ecx
  41e5d3:	dec    ebx
  41e5d4:	call   0x5ce5:0x3e1c7b32
  41e5db:	mov    bl,0x16
  41e5dd:	jmp    0xe4cf:0xca51f79c
  41e5e4:	mov    edx,0x7939bab8
  41e5e9:	into   
  41e5ea:	(bad)  
  41e5eb:	loopne 0x41e640
  41e5ed:	enter  0x752a,0x58
  41e5f1:	or     DWORD PTR [ebx],ebp
  41e5f3:	mov    ebx,0x26135b76
  41e5f8:	mov    ch,0xe7
  41e5fa:	pop    esi
  41e5fb:	pop    esp
  41e5fc:	jne    0x41e5a8
  41e5fe:	or     dl,0xfe
  41e601:	inc    edi
  41e602:	fsubr  QWORD PTR [edx]
  41e604:	cmp    dx,bp
  41e607:	or     esp,DWORD PTR [eax-0x3e24e0e9]
  41e60d:	and    eax,0xa3d0708b
  41e612:	mov    ecx,0xdcc7c808
  41e617:	jo     0x41e68a
  41e619:	shl    BYTE PTR ds:0x324c9cc9,0x26
  41e620:	inc    eax
  41e621:	pop    es
  41e622:	sub    BYTE PTR gs:[edx+0xde1e077],al
  41e629:	mov    al,ds:0xe98ada95
  41e62e:	out    dx,al
  41e62f:	mov    esp,0xaf4a3d57
  41e634:	inc    ebp
  41e635:	inc    esp
  41e636:	mov    esp,0x2756af30
  41e63b:	in     eax,0x78
  41e63d:	fidiv  WORD PTR [ebp-0x4e1ee463]
  41e643:	lods   al,BYTE PTR ds:[esi]
  41e644:	mov    ebp,0x9924703b
  41e649:	inc    BYTE PTR [edx+ecx*1]
  41e64c:	jg     0x41e647
  41e64e:	add    al,0x76
  41e650:	lods   al,BYTE PTR ds:[esi]
  41e651:	cmp    DWORD PTR [edi],0x4b
  41e654:	std    
  41e655:	pop    edi
  41e656:	lods   al,BYTE PTR ds:[esi]
  41e657:	jmp    0xaf63:0x7fb1f546
  41e65e:	out    dx,eax
  41e65f:	mov    ds:0xad943736,al
  41e664:	add    eax,0xc2778b17
  41e669:	test   eax,0x1421326
  41e66e:	adc    al,0x9a
  41e670:	out    dx,al
  41e671:	ja     0x41e69f
  41e673:	retf   
  41e674:	les    esp,FWORD PTR [edi]
  41e676:	ret    0x13e2
  41e679:	fmul   QWORD PTR [edx-0x174a3b51]
  41e67f:	into   
  41e680:	popf   
  41e681:	mov    eax,0xef60ce73
  41e686:	inc    BYTE PTR [edx+0x6256bbbe]
  41e68c:	cmp    DWORD PTR [ecx-0x7f],ebp
  41e68f:	cmc    
  41e690:	cld    
  41e691:	jnp    0x41e672
  41e693:	xor    eax,0xe53d4cf9
  41e698:	inc    ebx
  41e699:	neg    DWORD PTR [esi]
  41e69b:	push   ebp
  41e69c:	loopne 0x41e63c
  41e69e:	mov    bh,0xde
  41e6a0:	ja     0x41e6ec
  41e6a2:	mov    bl,0x1d
  41e6a4:	fidivr WORD PTR [ecx]
  41e6a6:	hlt    
  41e6a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6a9:	cs (bad) 
  41e6ac:	jg     0x41e657
  41e6ae:	dec    ebp
  41e6af:	ficom  WORD PTR [eax]
  41e6b1:	inc    esp
  41e6b2:	mov    dh,BYTE PTR [edi]
  41e6b4:	jb     0x41e6f6
  41e6b6:	iret   
  41e6b7:	xchg   ebp,eax
  41e6b8:	jle    0x41e738
  41e6ba:	cdq    
  41e6bb:	(bad)  
  41e6bc:	repnz push edx
  41e6be:	retf   0x47b2
  41e6c1:	imul   esp,DWORD PTR [edi-0x4a],0xffffffc2
  41e6c5:	sub    dl,0x39
  41e6c8:	jg     0x41e6d7
  41e6ca:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e6cc:	xor    eax,0xf8462794
  41e6d1:	xor    bl,bh
  41e6d3:	stc    
  41e6d4:	jns    0x41e6da
  41e6d6:	xchg   esp,ebx
  41e6d8:	jno    0x41e6e0
  41e6da:	push   es
  41e6db:	and    BYTE PTR [edx+0x7],dh
  41e6de:	xor    al,0xaa
  41e6e0:	xchg   esi,eax
  41e6e1:	das    
  41e6e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e6e3:	dec    eax
  41e6e4:	mov    dh,0xe8
  41e6e6:	and    BYTE PTR [ecx+0x7018877b],0x52
  41e6ed:	sub    DWORD PTR ds:[ecx-0x2b],0x7387fe9
  41e6f5:	adc    al,0x26
  41e6f7:	mov    ebp,0x9999e46e
  41e6fc:	pop    ebp
  41e6fd:	sbb    dl,cl
  41e6ff:	jmp    0xc1f7dde
  41e704:	bound  ecx,QWORD PTR [ebx+0x5abc7f83]
  41e70a:	pop    esp
  41e70b:	xor    DWORD PTR [edi-0x30453348],0x248a4ef1
  41e715:	loopne 0x41e725
  41e717:	and    dl,BYTE PTR [edx]
  41e719:	ds je  0x41e707
  41e71c:	adc    DWORD PTR [eax+0x42],0xffffffde
  41e720:	adc    BYTE PTR [esi+0x19fe8e16],cl
  41e726:	xchg   DWORD PTR [esi+eiz*1+0x73],eax
  41e72a:	ins    DWORD PTR es:[edi],dx
  41e72b:	test   BYTE PTR [eax+ebx*1],al
  41e72e:	add    cl,bl
  41e730:	and    al,0x7d
  41e732:	add    al,0xb2
  41e734:	jl     0x41e758
  41e736:	in     eax,dx
  41e737:	mov    ds:0x3270bc27,eax
  41e73c:	dec    esi
  41e73d:	push   ds
  41e73e:	sub    ch,BYTE PTR [esi]
  41e740:	bound  ecx,QWORD PTR [edi-0x268251fa]
  41e746:	fidiv  WORD PTR [ebp+0x250258f4]
  41e74c:	push   edi
  41e74d:	in     al,dx
  41e74e:	loop   0x41e7c4
  41e750:	sbb    ebp,esi
  41e752:	lahf   
  41e753:	popf   
  41e754:	mov    ds:0x3ecb65d7,eax
  41e759:	jne    0x41e772
  41e75b:	gs cmp al,0xc1
  41e75e:	addr16 mov bl,0x87
  41e761:	arpl   WORD PTR [edx+0x6b],bp
  41e764:	dec    esi
  41e765:	sti    
  41e766:	xor    esi,edi
  41e768:	das    
  41e769:	push   es
  41e76a:	std    
  41e76b:	push   esi
  41e76c:	addr16 jp 0x41e735
  41e76f:	stc    
  41e770:	addr16 pop edi
  41e772:	test   eax,0xbf48b551
  41e777:	mov    eax,ds:0x65468178
  41e77c:	outs   dx,DWORD PTR ds:[esi]
  41e77d:	ret    0x885
  41e780:	fistp  WORD PTR [eax-0xc3973ee]
  41e786:	inc    ecx
  41e787:	(bad)  
  41e788:	aam    0xb3
  41e78a:	clc    
  41e78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e78c:	inc    eax
  41e78d:	jno    0x41e77f
  41e78f:	enter  0x80b1,0x62
  41e793:	jp     0x41e7a2
  41e795:	dec    esp
  41e796:	cmp    al,0xbe
  41e798:	inc    esp
  41e799:	pop    ebx
  41e79a:	push   ebx
  41e79b:	adc    ebp,DWORD PTR [edx]
  41e79d:	push   edi
  41e79e:	jmp    0xd30e34e8
  41e7a3:	pop    ebp
  41e7a4:	jno    0x41e7b4
  41e7a6:	sbb    DWORD PTR [ebp-0x6c],esi
  41e7a9:	mov    cl,0xb0
  41e7ab:	shr    bl,cl
  41e7ad:	in     al,dx
  41e7ae:	sbb    BYTE PTR [edx+edi*4-0x60],0xdd
  41e7b3:	adc    al,BYTE PTR [edi+0x1]
  41e7b6:	stos   DWORD PTR es:[edi],eax
  41e7b7:	or     BYTE PTR [edx],ch
  41e7b9:	mov    ebp,0xb7d0f4e4
  41e7be:	and    ecx,ecx
  41e7c0:	mov    ch,0xbd
  41e7c2:	fidivr WORD PTR [eax+0x433bddee]
  41e7c8:	inc    ebp
  41e7c9:	inc    ebx
  41e7ca:	repnz mov WORD PTR [edx+edx*2+0x2b9dc63e],gs
  41e7d2:	pop    esi
  41e7d3:	not    BYTE PTR [esi]
  41e7d5:	cmp    esp,DWORD PTR [eax]
  41e7d7:	xchg   ebx,eax
  41e7d8:	aaa    
  41e7d9:	loope  0x41e832
  41e7db:	mov    dl,0x36
  41e7dd:	pushf  
  41e7de:	xor    ch,BYTE PTR ds:0x8ecba70
  41e7e4:	es cmc 
  41e7e6:	push   ecx
  41e7e7:	mov    bl,0x8b
  41e7e9:	push   es
  41e7ea:	out    dx,al
  41e7eb:	pop    esp
  41e7ec:	test   BYTE PTR [ebx],0x78
  41e7ef:	mov    cl,0x53
  41e7f1:	popf   
  41e7f2:	popf   
  41e7f3:	out    0xd8,eax
  41e7f5:	(bad)  
  41e7f7:	es jge 0x41e82d
  41e7fa:	add    BYTE PTR [esp+esi*2],ah
  41e7fd:	int3   
  41e7fe:	loop   0x41e7ae
  41e800:	xchg   edx,eax
  41e801:	addr16 push 0x65082377
  41e807:	sahf   
  41e808:	clc    
  41e809:	fdivr  QWORD PTR [eax+0x61]
  41e80c:	dec    edx
  41e80d:	mov    cl,0xab
  41e80f:	(bad)  
  41e810:	in     al,dx
  41e811:	fwait
  41e812:	imul   esp,DWORD PTR [esi],0x1fc6a17b
  41e818:	xchg   ebx,eax
  41e819:	les    edi,FWORD PTR [ecx]
  41e81b:	mov    eax,gs
  41e81d:	or     BYTE PTR [edx+0x18],dh
  41e820:	test   BYTE PTR [ecx+ecx*1+0x14],ch
  41e824:	xchg   BYTE PTR [edx+eax*8],dh
  41e827:	fldenv [ebx+0x47]
  41e82a:	loop   0x41e832
  41e82c:	sub    BYTE PTR [esi+ebp*1+0x1055ff50],0xdc
  41e834:	mov    edx,0x64e2a526
  41e839:	test   BYTE PTR [edi+ebx*1+0x142ef8f9],al
  41e840:	fisttp QWORD PTR fs:[edx]
  41e843:	mov    ebp,0x8252b40
  41e848:	dec    ebp
  41e849:	pop    es
  41e84a:	js     0x41e822
  41e84c:	xchg   esi,eax
  41e84d:	in     al,0x2a
  41e84f:	mov    dh,0x5b
  41e851:	mov    al,0xd0
  41e853:	enter  0x3c29,0xbf
  41e857:	fs je  0x41e88d
  41e85a:	mov    edx,0xf999e978
  41e85f:	sub    al,0xbb
  41e861:	fcmovu st,st(4)
  41e863:	pop    ss
  41e864:	stos   BYTE PTR es:[edi],al
  41e865:	out    dx,al
  41e866:	push   es
  41e867:	scas   eax,DWORD PTR es:[edi]
  41e868:	cmp    eax,edx
  41e86a:	inc    edx
  41e86b:	mov    al,0xe2
  41e86d:	and    cl,BYTE PTR [ebp+ecx*2-0x18]
  41e871:	int    0x51
  41e873:	shl    BYTE PTR [edi+0x22627791],0x10
  41e87a:	pop    ecx
  41e87b:	pop    edx
  41e87c:	cmp    BYTE PTR [esi+0x48],ch
  41e87f:	cmp    eax,0x3449ea65
  41e884:	add    ah,ch
  41e886:	loope  0x41e8c1
  41e888:	mov    eax,DWORD PTR [ebx-0x47238b50]
  41e88e:	out    0xab,al
  41e890:	std    
  41e891:	inc    ecx
  41e892:	std    
  41e893:	mov    ch,0xbe
  41e895:	(bad)  
  41e896:	xor    ah,BYTE PTR [edx-0x4e]
  41e899:	hlt    
  41e89a:	mov    BYTE PTR [ecx+0x59],dl
  41e89d:	test   BYTE PTR [ebp-0x5f],dl
  41e8a0:	and    al,0x71
  41e8a2:	mov    edi,0xa8c0dd41
  41e8a7:	jnp    0x41e8ae
  41e8a9:	pushf  
  41e8aa:	out    dx,eax
  41e8ab:	ret    
  41e8ac:	sbb    eax,0xd54e2f74
  41e8b1:	mov    ecx,0xb917760e
  41e8b6:	pop    ebx
  41e8b7:	adc    al,0xa7
  41e8b9:	and    BYTE PTR [ecx+ebp*2+0x29b05386],bh
  41e8c0:	jmp    0xbda90a6
  41e8c5:	fsub   QWORD PTR [ecx]
  41e8c7:	mov    eax,ds:0x27e6fdab
  41e8cc:	repnz aam 0x88
  41e8cf:	aam    0xbd
  41e8d1:	mov    ch,0x31
  41e8d3:	mov    ebx,0x83df5b5b
  41e8d8:	jl     0x41e93b
  41e8da:	push   0x28991211
  41e8df:	and    BYTE PTR [ebp-0x2f5847d0],ah
  41e8e5:	leave  
  41e8e6:	inc    esp
  41e8e7:	(bad)  
  41e8e9:	jmp    0xf0b2:0x21fa4f1
  41e8f0:	mov    dl,0x70
  41e8f2:	push   cs
  41e8f3:	xlat   BYTE PTR ds:[ebx]
  41e8f4:	(bad)  
  41e8f5:	out    dx,al
  41e8f6:	xchg   ebp,eax
  41e8f7:	push   cs
  41e8f8:	xchg   edx,eax
  41e8f9:	mov    ds:0xd41e3893,eax
  41e8fe:	clc    
  41e8ff:	push   0x2991e054
  41e904:	repz mov ah,bh
  41e907:	push   ds
  41e908:	js     0x41e966
  41e90a:	inc    esi
  41e90b:	jmp    0x4e53:0xa7d493cb
  41e912:	(bad)  
  41e913:	xor    BYTE PTR [edi+0x7d9bb8a7],ch
  41e919:	and    eax,DWORD PTR [ebp+0x1ab659aa]
  41e91f:	xchg   ebx,eax
  41e920:	xor    DWORD PTR [eax],0x2b
  41e923:	and    ah,BYTE PTR [edi]
  41e925:	fist   WORD PTR [eax]
  41e927:	cmp    eax,0xd80a0d2b
  41e92c:	mov    ebx,0x910c6ea8
  41e931:	ins    DWORD PTR es:[edi],dx
  41e932:	xchg   bx,ax
  41e934:	std    
  41e935:	and    BYTE PTR [edx+eiz*2+0x29],al
  41e939:	add    BYTE PTR [edx-0x1d],0xd4
  41e93d:	cmp    DWORD PTR [esi-0x6a630fca],ecx
  41e943:	ja     0x41e9b7
  41e945:	sti    
  41e946:	dec    ecx
  41e947:	arpl   WORD PTR [edx-0x8],bp
  41e94a:	popf   
  41e94b:	pop    ecx
  41e94c:	mov    ds:0x3e273720,eax
  41e951:	and    eax,0xf1e4541b
  41e956:	xor    al,0xeb
  41e958:	stos   BYTE PTR es:[edi],al
  41e959:	mov    ds:0x291e2df2,eax
  41e95e:	(bad)  
  41e95f:	jno    0x41e94d
  41e961:	les    ebp,FWORD PTR [ecx+0x7f573718]
  41e967:	mov    cl,0xe2
  41e969:	mov    esp,0x69da2ea8
  41e96e:	(bad)  
  41e96f:	(bad)  
  41e971:	add    al,0x68
  41e973:	data16 and ch,BYTE PTR ds:0xfa989bf0
  41e97a:	faddp  st(6),st
  41e97c:	and    al,0xff
  41e97e:	cmp    ebp,ebp
  41e980:	lods   al,BYTE PTR ds:[esi]
  41e981:	(bad)  
  41e982:	cli    
  41e983:	mov    ?,WORD PTR [ebp-0x5947dbaa]
  41e989:	sbb    dl,BYTE PTR [edx-0x6d719001]
  41e98f:	xlat   BYTE PTR ds:[ebx]
  41e990:	push   es
  41e991:	xchg   edi,eax
  41e992:	test   bl,dl
  41e994:	sbb    ch,BYTE PTR ds:0xb2f64edb
  41e99a:	jmp    0xcf6b6e9e
  41e99f:	sbb    DWORD PTR [ebx-0x70],ebx
  41e9a2:	and    BYTE PTR [edi+ebx*2],dh
  41e9a5:	xor    BYTE PTR [eax+0x66fd0c76],ah
  41e9ab:	jge    0x41e9a2
  41e9ad:	sbb    esp,0xb
  41e9b0:	pop    eax
  41e9b1:	lahf   
  41e9b2:	sar    BYTE PTR [ebp-0x5d88ac97],1
  41e9b8:	(bad)  
  41e9b9:	mov    eax,0x6dd8534f
  41e9be:	push   es
  41e9bf:	adc    al,0x7a
  41e9c1:	out    dx,eax
  41e9c2:	std    
  41e9c3:	add    eax,0xd574536f
  41e9c8:	aad    0x2f
  41e9ca:	push   ebp
  41e9cb:	pop    ecx
  41e9cc:	pop    edx
  41e9cd:	mov    ebp,0xf598ab11
  41e9d2:	mov    al,0xa5
  41e9d4:	idiv   BYTE PTR [ecx-0x64]
  41e9d7:	adc    al,BYTE PTR [edx+0x3ac94ca0]
  41e9dd:	xchg   esi,eax
  41e9de:	imul   ch
  41e9e0:	mov    eax,DWORD PTR [ecx+0x44521bdf]
  41e9e6:	adc    eax,ebp
  41e9e8:	inc    esi
  41e9e9:	and    DWORD PTR [eax+0x2fce9291],eax
  41e9ef:	hlt    
  41e9f0:	add    ebx,DWORD PTR cs:[edi-0x25]
  41e9f4:	xchg   edi,eax
  41e9f5:	adc    bh,BYTE PTR [ebp+0x49]
  41e9f8:	(bad)  
  41e9f9:	pop    eax
  41e9fa:	mov    al,cl
  41e9fc:	adc    al,0x93
  41e9fe:	push   si
  41ea00:	mov    eax,0x9f0fd8ba
  41ea05:	adc    edi,esi
  41ea07:	cmp    DWORD PTR [eax+0x1b],edx
  41ea0a:	sbb    al,0xcc
  41ea0c:	shl    DWORD PTR [eax-0x508c206c],cl
  41ea12:	mov    DWORD PTR [esi+0x1d],ebx
  41ea15:	cmp    esi,edi
  41ea17:	pop    ds
  41ea18:	pop    eax
  41ea19:	into   
  41ea1a:	or     edi,DWORD PTR [esp+0x6d]
  41ea1e:	mov    esp,esi
  41ea20:	bound  ebp,QWORD PTR [edi]
  41ea22:	out    0xd5,al
  41ea24:	mov    WORD PTR [ecx],ss
  41ea26:	pop    ebx
  41ea27:	and    DWORD PTR [edx+0x29],esi
  41ea2a:	or     DWORD PTR [ebp-0x3c],edx
  41ea2d:	dec    esp
  41ea2e:	int3   
  41ea2f:	sub    ebx,esi
  41ea31:	and    cl,BYTE PTR [edi+0x23]
  41ea34:	dec    esi
  41ea35:	mov    edx,0xfc5f7d39
  41ea3a:	cmp    BYTE PTR ds:0xe5831a17,ah
  41ea40:	mov    bh,0xf6
  41ea42:	pop    ecx
  41ea43:	mov    esi,0x6c6a9e12
  41ea48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea49:	mov    ebp,DWORD PTR [eax]
  41ea4b:	inc    ebx
  41ea4c:	xchg   edi,eax
  41ea4d:	cmc    
  41ea4e:	ret    0xfe3
  41ea51:	jnp    0x41e9e0
  41ea53:	pusha  
  41ea54:	shr    BYTE PTR [edx+ecx*1-0x5fcf99b2],0xaa
  41ea5c:	in     eax,0x46
  41ea5e:	jmp    0x4768:0xae95001a
  41ea65:	cmp    eax,0xed7154c7
  41ea6a:	sub    eax,0xc66270bb
  41ea6f:	and    DWORD PTR [ebx+0x21],esi
  41ea72:	and    esi,DWORD PTR [ebx]
  41ea74:	in     eax,dx
  41ea75:	mov    edx,DWORD PTR [edx+eiz*2-0x3f0e3bf8]
  41ea7c:	inc    esi
  41ea7d:	mov    BYTE PTR [ebx-0x2d273dea],dl
  41ea83:	mov    esp,0x35943b52
  41ea88:	fs sti 
  41ea8a:	cld    
  41ea8b:	outs   dx,BYTE PTR ds:[esi]
  41ea8c:	aad    0x35
  41ea8e:	fsubr  DWORD PTR [ecx-0x3faa7ff5]
  41ea94:	and    ch,BYTE PTR [esi-0x6d]
  41ea97:	push   ss
  41ea98:	mov    ah,0x3d
  41ea9a:	sti    
  41ea9b:	retf   
  41ea9c:	push   esi
  41ea9d:	pop    esi
  41ea9e:	xchg   edx,eax
  41ea9f:	mov    ebp,0xc126efee
  41eaa4:	jnp    0x41eb15
  41eaa6:	shl    edi,1
  41eaa8:	daa    
  41eaa9:	stc    
  41eaaa:	jne    0x41ea32
  41eaac:	stc    
  41eaad:	rcl    DWORD PTR [edi+edi*4-0x54],1
  41eab1:	sti    
  41eab2:	mov    dh,al
  41eab4:	outs   dx,BYTE PTR ds:[esi]
  41eab5:	sbb    al,0xb1
  41eab7:	inc    edi
  41eab8:	je     0x41eac3
  41eaba:	and    edx,DWORD PTR [eax-0x6e]
  41eabd:	imul   ebp,edx,0xffffff8b
  41eac0:	pusha  
  41eac1:	mov    eax,ds:0xf1470349
  41eac6:	jne    0x41eac5
  41eac8:	sbb    BYTE PTR [ebp+0x4a46dde3],bl
  41eace:	cli    
  41eacf:	aas    
  41ead0:	out    dx,al
  41ead1:	push   ecx
  41ead2:	enter  0xd5bc,0x13
  41ead6:	pop    ebx
  41ead7:	aam    0x84
  41ead9:	sub    BYTE PTR ds:0xe5beb94b,bh
  41eadf:	mov    ecx,0x57177311
  41eae4:	scas   al,BYTE PTR es:[edi]
  41eae5:	mov    esi,0x3b665c95
  41eaea:	int3   
  41eaeb:	stc    
  41eaec:	cld    
  41eaed:	add    eax,0x7667ce2f
  41eaf2:	ret    0x853a
  41eaf5:	dec    edx
  41eaf6:	sahf   
  41eaf7:	ret    0xea3e
  41eafa:	push   esp
  41eafb:	push   ecx
  41eafc:	out    0xe6,al
  41eafe:	mov    ch,0xf6
  41eb00:	mov    eax,ds:0x460017e0
  41eb05:	xchg   BYTE PTR [edx],ah
  41eb07:	fadd   QWORD PTR [esi]
  41eb09:	push   esp
  41eb0a:	inc    eax
  41eb0b:	stos   BYTE PTR es:[edi],al
  41eb0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb0d:	mov    eax,0xc51b37b8
  41eb12:	gs cmp al,0x68
  41eb15:	shl    BYTE PTR [esp+eax*4+0x32e8a3f3],0x8b
  41eb1d:	in     eax,dx
  41eb1e:	repnz rcr DWORD PTR [ebp+eiz*8+0x15],0x40
  41eb24:	out    dx,al
  41eb25:	call   0xe93ca5cf
  41eb2a:	imul   eax,esp,0x5e
  41eb2d:	sub    al,0xfe
  41eb2f:	pop    edx
  41eb30:	icebp  
  41eb31:	mov    ah,bl
  41eb33:	test   DWORD PTR [eax],edi
  41eb35:	inc    ebp
  41eb36:	xor    BYTE PTR [ecx],dh
  41eb38:	inc    edx
  41eb39:	xchg   edx,eax
  41eb3a:	push   ss
  41eb3b:	scas   eax,DWORD PTR es:[edi]
  41eb3c:	inc    ecx
  41eb3d:	lahf   
  41eb3e:	adc    dl,0x9e
  41eb41:	sbb    DWORD PTR [edi-0x2f],ebx
  41eb44:	dec    ecx
  41eb45:	mov    ebx,0xab936d63
  41eb4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb4b:	cmc    
  41eb4c:	jnp    0x41eae0
  41eb4e:	add    al,BYTE PTR [edx+0x32]
  41eb51:	(bad)  
  41eb52:	jbe    0x41eafa
  41eb54:	outs   dx,BYTE PTR ds:[esi]
  41eb55:	push   esp
  41eb56:	mov    ?,WORD PTR [esi]
  41eb58:	cdq    
  41eb59:	sahf   
  41eb5a:	in     al,0xe4
  41eb5c:	outs   dx,DWORD PTR ds:[esi]
  41eb5d:	jg     0x41eb52
  41eb5f:	jno    0x41eaef
  41eb61:	retf   
  41eb62:	jo     0x41eb6c
  41eb64:	(bad)  
  41eb65:	or     dh,BYTE PTR ds:0x66a649ce
  41eb6b:	hlt    
  41eb6c:	sahf   
  41eb6d:	scas   al,BYTE PTR es:[edi]
  41eb6e:	jno    0x41eb7b
  41eb70:	test   eax,0xde1e3dee
  41eb75:	dec    ecx
  41eb76:	add    DWORD PTR [edi+edi*2],eax
  41eb79:	xchg   ebx,eax
  41eb7a:	js     0x41eb1e
  41eb7c:	mov    ds:0xe53a518f,eax
  41eb81:	cs cmp edx,0xfd85517e
  41eb88:	retf   
  41eb89:	xor    al,0x90
  41eb8b:	stos   BYTE PTR es:[edi],al
  41eb8c:	aam    0x1e
  41eb8e:	jno    0x41eb71
  41eb90:	test   BYTE PTR [ecx+0x21a12e90],dl
  41eb96:	or     ah,BYTE PTR [esi+0x6d882095]
  41eb9c:	test   BYTE PTR [eax+0x41d446ed],0x34
  41eba3:	push   ebx
  41eba4:	xchg   ecx,eax
  41eba5:	aas    
  41eba6:	out    dx,eax
  41eba7:	and    al,BYTE PTR [ecx]
  41eba9:	cmp    DWORD PTR [edx+0x53c0e83b],edx
  41ebaf:	sar    BYTE PTR [edi+eiz*4+0x20738162],1
  41ebb6:	xchg   DWORD PTR [ebp-0xe],esp
  41ebb9:	and    eax,0x332fa201
  41ebbe:	push   edi
  41ebbf:	test   al,0x6
  41ebc1:	mov    ds:0x34a6f495,eax
  41ebc6:	adc    DWORD PTR [ecx-0x72],edi
  41ebc9:	pop    ecx
  41ebca:	mov    ah,0xf1
  41ebcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebcd:	es aam 0xf5
  41ebd0:	int    0x55
  41ebd2:	int3   
  41ebd3:	jmp    0x41eb8c
  41ebd5:	pop    esi
  41ebd6:	mov    cl,0x13
  41ebd8:	dec    eax
  41ebd9:	retw   
  41ebdb:	lods   al,BYTE PTR ds:[esi]
  41ebdc:	mov    esp,0x33e4e912
  41ebe1:	dec    edi
  41ebe2:	sbb    DWORD PTR [ebx],edx
  41ebe4:	dec    esi
  41ebe6:	sub    edx,DWORD PTR [eax+0x6e15889d]
  41ebec:	add    DWORD PTR [edx+0x18],ecx
  41ebef:	out    0xaa,al
  41ebf1:	(bad)  
  41ebf3:	or     ebp,DWORD PTR [edi+0x1cac85f2]
  41ebf9:	adc    ah,BYTE PTR [esi]
  41ebfb:	sti    
  41ebfc:	mov    ebp,0x22b1859f
  41ec01:	add    al,0x7
  41ec03:	lea    edi,[esi-0x12]
  41ec06:	scas   al,BYTE PTR es:[edi]
  41ec07:	das    
  41ec08:	icebp  
  41ec09:	dec    edx
  41ec0a:	add    ecx,DWORD PTR [ecx+0x2c]
  41ec0d:	cld    
  41ec0e:	ss in  eax,dx
  41ec10:	out    dx,al
  41ec11:	lods   eax,DWORD PTR ds:[esi]
  41ec12:	icebp  
  41ec13:	test   eax,0xac305711
  41ec18:	dec    esi
  41ec19:	mov    edi,0x4f7ada22
  41ec1e:	push   cs
  41ec1f:	mul    dl
  41ec21:	outs   dx,BYTE PTR ds:[esi]
  41ec22:	inc    ecx
  41ec23:	out    0x55,eax
  41ec25:	popf   
  41ec26:	cmp    ebp,DWORD PTR [eax-0x70]
  41ec29:	enter  0xd9f2,0xb6
  41ec2d:	mov    eax,ds:0xcb810e16
  41ec32:	fsqrt  
  41ec34:	out    dx,eax
  41ec35:	ins    BYTE PTR es:[edi],dx
  41ec36:	xchg   edx,eax
  41ec37:	xor    BYTE PTR [edi],dl
  41ec39:	inc    ebp
  41ec3a:	xor    DWORD PTR ds:0x2c29202,edi
  41ec40:	or     bh,BYTE PTR [eax+0x3f92b3c2]
  41ec46:	jno    0x41ec92
  41ec48:	inc    esi
  41ec49:	clc    
  41ec4a:	sti    
  41ec4b:	push   ebp
  41ec4c:	mov    ebx,0x794d7101
  41ec51:	jnp    0x41ec19
  41ec53:	xor    DWORD PTR [ebx-0x4fa51131],eax
  41ec59:	pop    ecx
  41ec5a:	shl    BYTE PTR [eax+0x47],cl
  41ec5d:	adc    edi,edx
  41ec5f:	sar    bh,0x65
  41ec62:	les    esi,FWORD PTR [eax+0x65]
  41ec65:	in     eax,dx
  41ec66:	or     al,0x5e
  41ec68:	sub    eax,DWORD PTR [esi]
  41ec6a:	mov    ebx,0x4d58fb5e
  41ec6f:	loope  0x41ec49
  41ec71:	std    
  41ec72:	adc    BYTE PTR [ecx-0x34ce5fb0],cl
  41ec78:	fldenv [edx-0x7e58a716]
  41ec7e:	clc    
  41ec7f:	mov    dh,0x48
  41ec81:	jg     0x41ecc2
  41ec83:	sbb    BYTE PTR [ecx-0x39e96a66],dh
  41ec89:	leave  
  41ec8a:	les    ecx,FWORD PTR [ebp-0xb5ff321]
  41ec90:	repnz scas eax,DWORD PTR es:[edi]
  41ec92:	(bad)  
  41ec93:	xchg   esi,eax
  41ec94:	mov    ecx,0x33b146bd
  41ec99:	xor    al,0xbd
  41ec9b:	out    0x3a,al
  41ec9d:	and    BYTE PTR [eax+ebx*4],bl
  41eca0:	int    0x57
  41eca2:	sbb    dh,BYTE PTR [edi]
  41eca4:	out    dx,al
  41eca5:	mov    eax,ds:0xa291bf67
  41ecaa:	iret   
  41ecab:	mov    cs:0xb6562a0b,al
  41ecb1:	inc    edx
  41ecb2:	sbb    BYTE PTR [esp+esi*4],dh
  41ecb5:	outs   dx,BYTE PTR ds:[esi]
  41ecb6:	loop   0x41ed0f
  41ecb8:	push   0x25
  41ecba:	repnz mov bh,0x80
  41ecbd:	pop    ss
  41ecbe:	in     eax,0x32
  41ecc0:	cli    
  41ecc1:	pop    eax
  41ecc2:	and    dh,bh
  41ecc4:	add    dh,ch
  41ecc6:	sbb    BYTE PTR [ebx-0x30],0x2b
  41ecca:	xchg   ecx,eax
  41eccb:	loope  0x41ecea
  41eccd:	sbb    ebp,DWORD PTR [edx]
  41eccf:	ss (bad) 
  41ecd1:	outs   dx,DWORD PTR ds:[esi]
  41ecd2:	jp     0x41ec55
  41ecd4:	mov    cl,0xec
  41ecd6:	jge    0x41ecda
  41ecd8:	repz retf 0xe50f
  41ecdc:	fucom  st(4)
  41ecde:	pushf  
  41ecdf:	and    DWORD PTR [edi],edi
  41ece1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ece2:	xor    bl,dh
  41ece4:	or     esi,DWORD PTR [eax-0x71]
  41ece7:	cs out dx,eax
  41ece9:	add    ebp,DWORD PTR [ebx-0x45563f4e]
  41ecef:	push   esp
  41ecf0:	repnz loop 0x41ed55
  41ecf3:	jno    0x41ecea
  41ecf5:	arpl   WORD PTR [edx],bp
  41ecf7:	mov    eax,ds:0x382bdde6
  41ecfc:	(bad)  
  41ecfd:	xor    al,0x2f
  41ecff:	push   ds
  41ed00:	xor    al,0x66
  41ed02:	cdq    
  41ed03:	cmp    DWORD PTR [ecx-0x60],0x847b27d0
  41ed0a:	arpl   WORD PTR [ecx-0x56],di
  41ed0d:	call   0xa9dba54c
  41ed12:	sub    al,0x8
  41ed14:	sbb    BYTE PTR [eax+0x53731019],bh
  41ed1a:	aad    0x32
  41ed1c:	out    dx,al
  41ed1d:	sbb    DWORD PTR [ecx+0x1],ebx
  41ed20:	adc    bh,dh
  41ed22:	pop    edx
  41ed23:	add    al,0x2e
  41ed25:	mov    WORD PTR ds:0x657a,ss
  41ed2a:	pop    edx
  41ed2b:	mov    esp,0xcc553c66
  41ed30:	jbe    0x41ecfb
  41ed32:	push   esi
  41ed33:	rcr    BYTE PTR [esi+0x7],cl
  41ed36:	leave  
  41ed37:	pop    esi
  41ed38:	cmc    
  41ed39:	jbe    0x41ed8c
  41ed3b:	sub    ecx,ebx
  41ed3d:	ror    BYTE PTR [ecx+0x36],cl
  41ed40:	push   edx
  41ed41:	das    
  41ed42:	pop    ebx
  41ed43:	xchg   esi,ebp
  41ed45:	or     BYTE PTR [ebx+0x48],al
  41ed48:	inc    ecx
  41ed49:	mov    eax,ds:0x8d39a990
  41ed4e:	in     eax,0x96
  41ed50:	sahf   
  41ed51:	fld    DWORD PTR [esi]
  41ed53:	call   0xc137:0x612592e6
  41ed5a:	pushf  
  41ed5b:	xchg   esi,eax
  41ed5c:	test   al,0xff
  41ed5e:	pop    ss
  41ed5f:	inc    ebp
  41ed60:	inc    edi
  41ed61:	test   ah,cl
  41ed63:	push   esi
  41ed64:	adc    eax,0x4f137591
  41ed69:	sub    eax,DWORD PTR [ebx]
  41ed6b:	push   edx
  41ed6c:	or     cl,BYTE PTR [edx+0x75]
  41ed6f:	jmp    0x41eda4
  41ed71:	push   edx
  41ed72:	jae    0x41ed31
  41ed74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed75:	push   edx
  41ed76:	adc    al,0xc0
  41ed78:	retf   
  41ed79:	xchg   esp,eax
  41ed7a:	cdq    
  41ed7b:	mov    bl,0x8b
  41ed7d:	test   DWORD PTR [eiz*8-0x7ae83d75],edx
  41ed84:	push   0xa3ecfbe5
  41ed89:	(bad)  
  41ed8a:	mov    dh,BYTE PTR [esi-0x7c]
  41ed8d:	xchg   edi,eax
  41ed8e:	and    eax,DWORD PTR [ecx+ecx*2]
  41ed91:	xor    BYTE PTR [edi],ch
  41ed93:	scas   al,BYTE PTR es:[edi]
  41ed94:	pop    ds
  41ed95:	xor    eax,0x9562e8c9
  41ed9a:	adc    eax,DWORD PTR [esi]
  41ed9c:	or     ah,BYTE PTR [bx+si-0x5d]
  41eda0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eda1:	scas   eax,DWORD PTR es:[edi]
  41eda2:	sub    eax,edi
  41eda4:	cmc    
  41eda5:	ror    BYTE PTR [eax-0x3f],0x2c
  41eda9:	jb     0x41edd5
  41edab:	les    ecx,FWORD PTR [edi-0x72]
  41edae:	out    dx,eax
  41edaf:	push   0x4f586a8e
  41edb4:	enter  0xcae7,0x63
  41edb8:	push   eax
  41edb9:	cmc    
  41edba:	push   cs
  41edbb:	lea    cx,[ebx+0x74]
  41edbf:	ss (bad) 
  41edc2:	hlt    
  41edc3:	dec    ecx
  41edc4:	mov    edi,0xea5f589e
  41edc9:	cli    
  41edca:	pop    eax
  41edcb:	pop    ds
  41edcc:	sub    al,0x43
  41edce:	xchg   edi,eax
  41edcf:	cmp    BYTE PTR ds:[edx-0x349b1397],cl
  41edd6:	or     edi,DWORD PTR [edx+0x2d970b03]
  41eddc:	and    cl,0xae
  41eddf:	test   BYTE PTR [esp+ebx*2],ah
  41ede2:	sub    BYTE PTR [esi],dh
  41ede4:	js     0x41ee15
  41ede6:	push   0xffffff90
  41ede8:	mov    dh,dl
  41edea:	pop    eax
  41edeb:	aaa    
  41edec:	aaa    
  41eded:	dec    ecx
  41edee:	jmp    0x58da:0x579ceb7b
  41edf5:	stc    
  41edf6:	jmp    0xa3d4ebb9
  41edfb:	rcr    edi,1
  41edfd:	popa   
  41edfe:	aam    0x18
  41ee00:	pop    ss
  41ee01:	addr16 (bad) 
  41ee03:	into   
  41ee04:	cmp    eax,0xd4210108
  41ee09:	xor    DWORD PTR [esi+esi*2-0x69e55a6b],esi
  41ee10:	stos   DWORD PTR es:[edi],eax
  41ee11:	jmp    0x829f2dc7
  41ee16:	xchg   esi,eax
  41ee17:	dec    ecx
  41ee18:	jle    0x41edaf
  41ee1a:	or     dh,bl
  41ee1c:	or     DWORD PTR [edx],esi
  41ee1e:	test   DWORD PTR [edx],ecx
  41ee20:	mov    dh,0x2f
  41ee22:	mov    esp,0x786ab2e8
  41ee27:	or     eax,0xbd5a0fb
  41ee2c:	adc    BYTE PTR [edi+0x35],dh
  41ee2f:	or     DWORD PTR ds:0x84be372,ebx
  41ee35:	jae    0x41eea6
  41ee37:	pop    ds
  41ee38:	lods   al,BYTE PTR ds:[esi]
  41ee39:	sbb    BYTE PTR [edi+edi*1-0x2cfc518f],dl
  41ee40:	(bad)  
  41ee42:	xor    eax,0x1ee34db3
  41ee47:	(bad)  
  41ee48:	fbstp  TBYTE PTR [ecx]
  41ee4a:	nop
  41ee4b:	sbb    esp,ebp
  41ee4d:	and    eax,0x5db33821
  41ee52:	clc    
  41ee53:	mov    DWORD PTR [edx+0x2b],edx
  41ee56:	stos   DWORD PTR es:[edi],eax
  41ee57:	test   al,0x25
  41ee59:	push   ebp
  41ee5a:	loopne 0x41ee0d
  41ee5c:	add    dh,BYTE PTR [eax]
  41ee5e:	push   ecx
  41ee5f:	cmp    eax,0x11a2465e
  41ee64:	xchg   DWORD PTR [edi-0x26],edi
  41ee67:	ror    DWORD PTR ds:0xb26a6c75,1
  41ee6d:	cmc    
  41ee6e:	out    dx,al
  41ee6f:	cs ja  0x41ee7f
  41ee72:	(bad)  
  41ee74:	xchg   DWORD PTR [eax+0x41],edx
  41ee77:	inc    edx
  41ee78:	fadd   QWORD PTR [ebp-0x16]
  41ee7b:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41ee7d:	(bad)  
  41ee7e:	imul   BYTE PTR ds:0xcc7c2151
  41ee84:	ins    DWORD PTR es:[edi],dx
  41ee85:	shl    BYTE PTR [ebx+0x1f],0x77
  41ee89:	mov    edi,0x6299661c
  41ee8e:	aam    0x70
  41ee90:	mov    BYTE PTR fs:[ecx+0x5f188306],ch
  41ee97:	(bad)  
  41ee98:	jae    0x41ee6a
  41ee9a:	cmp    cl,al
  41ee9c:	sub    edx,0x4ac5ba81
  41eea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eea3:	inc    edi
  41eea4:	jno    0x41eee6
  41eea6:	mov    eax,ds:0x8b3b59fd
  41eeab:	push   ds
  41eeac:	push   ds
  41eead:	lea    ebx,[ecx+0x4a72db74]
  41eeb3:	mov    ss,ebx
  41eeb5:	retf   0x2ed2
  41eeb8:	adc    edx,DWORD PTR [edi-0x1]
  41eebb:	test   DWORD PTR [ebx-0x19],esp
  41eebe:	sub    eax,0xade5866f
  41eec3:	ror    BYTE PTR [ecx+0x1],cl
  41eec6:	mov    ds:0x32c5275,al
  41eecb:	jl     0x41ee77
  41eecd:	inc    ebx
  41eece:	inc    ebp
  41eecf:	(bad)  
  41eed0:	jmp    0x41ef02
  41eed2:	(bad)  
  41eed3:	rol    DWORD PTR [ebx-0x5ebb01ee],cl
  41eed9:	mov    ds:0xd57bc86b,al
  41eede:	mov    esi,0x49b6edfd
  41eee3:	mov    ecx,0xdfbe3e31
  41eee8:	or     edi,ecx
  41eeea:	in     al,dx
  41eeeb:	cmp    eax,0x9b87f751
  41eef0:	and    cl,ah
  41eef2:	and    eax,0xe093a001
  41eef7:	push   ebx
  41eef8:	mov    esi,0x347c4dd7
  41eefd:	and    DWORD PTR [ebp-0x48],ecx
  41ef00:	add    al,0xdd
  41ef02:	clc    
  41ef03:	mov    dl,0x67
  41ef05:	and    BYTE PTR [edx+0x2abfa767],dl
  41ef0b:	mov    WORD PTR [edi+0xd48f4a1],ds
  41ef11:	push   edx
  41ef12:	cmp    eax,0xa4dca71c
  41ef17:	dec    eax
  41ef18:	addr16 pop ds
  41ef1a:	or     BYTE PTR [ebx],dh
  41ef1c:	shr    BYTE PTR [ecx],cl
  41ef1e:	cmp    esi,ebx
  41ef20:	rcl    DWORD PTR [eax-0x558dddda],0x44
  41ef27:	out    dx,al
  41ef28:	fstp   TBYTE PTR [ecx+0x1d50b9cd]
  41ef2e:	mov    bl,0xa
  41ef30:	jne    0x41ef45
  41ef32:	int3   
  41ef33:	and    al,0x7f
  41ef35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef36:	dec    DWORD PTR [edx+eax*2+0x15]
  41ef3a:	push   eax
  41ef3b:	stos   BYTE PTR es:[edi],al
  41ef3c:	dec    BYTE PTR [ecx+0x3e]
  41ef3f:	cwde   
  41ef40:	loopne 0x41ef1e
  41ef42:	pop    ebp
  41ef43:	jo     0x41ef15
  41ef45:	xchg   BYTE PTR [edx],bl
  41ef47:	or     eax,DWORD PTR ds:0xe3bac0a0
  41ef4d:	ror    BYTE PTR [ebp-0x1b5936ab],1
  41ef53:	xchg   edi,eax
  41ef54:	xor    BYTE PTR [ebp+0x57e7f662],al
  41ef5a:	push   cs
  41ef5b:	clc    
  41ef5c:	lds    ebx,FWORD PTR [edi-0x18]
  41ef5f:	dec    ecx
  41ef60:	cli    
  41ef61:	fs push eax
  41ef63:	mov    dh,cl
  41ef65:	out    0x38,al
  41ef67:	or     BYTE PTR [eax+0x7903f6c2],dh
  41ef6d:	or     DWORD PTR [ecx],eax
  41ef6f:	dec    esp
  41ef70:	call   0x9f33d1e5
  41ef75:	adc    bh,BYTE PTR [ebx]
  41ef77:	xchg   ecx,eax
  41ef78:	mov    edx,0x34db3eed
  41ef7d:	lahf   
  41ef7e:	shl    BYTE PTR ds:0xdb9e8335,0xe9
  41ef85:	xor    BYTE PTR [eax],bh
  41ef87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef88:	mov    dl,BYTE PTR [ecx]
  41ef8a:	mov    eax,ds:0x4d499915
  41ef8f:	rol    DWORD PTR [edx+esi*4-0x17],cl
  41ef93:	add    al,BYTE PTR ds:0xa5916a6
  41ef99:	adc    cl,BYTE PTR [ebx+0x464ba98f]
  41ef9f:	(bad)  
  41efa0:	das    
  41efa1:	je     0x41efb5
  41efa3:	ret    0x1657
  41efa6:	loopne 0x41eff9
  41efa8:	pop    ebx
  41efa9:	(bad)  
  41efaa:	(bad)  
  41efab:	(bad)  
  41efac:	and    BYTE PTR [edi-0x68b4f3fa],al
  41efb2:	in     eax,0x65
  41efb4:	fsub   DWORD PTR [eax+esi*1]
  41efb7:	or     DWORD PTR ds:0xb167112d,esp
  41efbd:	or     BYTE PTR [ebx+0x4b00735e],dh
  41efc3:	cmp    esp,DWORD PTR [eax]
  41efc5:	(bad)  
  41efc7:	cmp    al,0xd5
  41efc9:	test   al,0x69
  41efcb:	cmc    
  41efcc:	push   edx
  41efcd:	mov    ch,0xe
  41efcf:	loopne 0x41efa0
  41efd1:	call   0xa80a:0xfea95f86
  41efd8:	add    BYTE PTR [edx+edi*2-0x1926c8bf],al
  41efdf:	sub    al,BYTE PTR [ecx+0x4b]
  41efe2:	push   cs
  41efe3:	ret    0x9128
  41efe6:	mov    DWORD PTR [ecx+0x641eca5c],edx
  41efec:	cmp    DWORD PTR [ecx+0x2aaa2dbc],ebp
  41eff2:	add    esi,edi
  41eff4:	jnp    0x41f02d
  41eff6:	dec    esi
  41eff7:	sbb    bh,BYTE PTR [edi+0x19]
  41effa:	push   ecx
  41effb:	xlat   BYTE PTR ds:[ebx]
  41effc:	add    al,0x8d
  41effe:	lods   eax,DWORD PTR ds:[esi]
  41efff:	mov    WORD PTR [eax+0x41],ds
  41f002:	cwde   
  41f003:	fistp  QWORD PTR [ebp-0x1b]
  41f006:	xchg   BYTE PTR [ebx],cl
  41f008:	mov    ds:0xb2c4f2ed,al
  41f00d:	mov    DWORD PTR ds:0x8d3c4c1,0x96dbe5b3
  41f017:	dec    edi
  41f018:	in     al,0x9f
  41f01a:	mov    ebp,0x16e6cde7
  41f01f:	test   esi,edi
  41f021:	jne    0x41f05c
  41f023:	cld    
  41f024:	repz scas eax,DWORD PTR es:[edi]
  41f026:	aam    0xa
  41f028:	adc    BYTE PTR [eax+0x73],ch
  41f02b:	pop    es
  41f02c:	sub    DWORD PTR gs:[ebp+0x69630e0d],edx
  41f033:	adc    ah,bh
  41f035:	lahf   
  41f036:	clc    
  41f037:	sahf   
  41f038:	pop    edi
  41f039:	fisttp WORD PTR [edi-0xe]
  41f03c:	pop    edx
  41f03d:	popa   
  41f03e:	adc    al,0xb4
  41f040:	repz rol BYTE PTR [ebx+0x4132bf5],cl
  41f047:	(bad)  
  41f048:	jl     0x41f062
  41f04a:	mov    dh,0x83
  41f04c:	dec    edx
  41f04d:	fdivr  DWORD PTR [esi+0x1f]
  41f050:	rcl    ch,0x3c
  41f053:	mov    ch,0xde
  41f055:	fidivr DWORD PTR [ecx-0xc889600]
  41f05b:	retf   
  41f05c:	cmp    edi,edx
  41f05e:	dec    esp
  41f05f:	sbb    al,0x98
  41f061:	or     eax,0x39ff0318
  41f066:	sub    esp,esi
  41f068:	jnp    0x41f0c7
  41f06a:	or     edx,edx
  41f06c:	stc    
  41f06d:	jo     0x41f099
  41f06f:	in     al,dx
  41f070:	cmp    BYTE PTR [ebx],dl
  41f072:	mov    dl,0xff
  41f074:	mov    ds,esi
  41f076:	repz jae 0x41f0e5
  41f079:	sub    DWORD PTR [esi],eax
  41f07b:	dec    ebx
  41f07c:	ret    0xf12c
  41f07f:	mov    ebx,0x832c24c3
  41f084:	fnsave [esi-0x6d]
  41f087:	add    eax,0x3a74456b
  41f08c:	push   cs
  41f08d:	sub    dh,ah
  41f08f:	jo     0x41f0d3
  41f091:	inc    eax
  41f092:	ret    0xbb7a
  41f095:	inc    eax
  41f096:	push   ecx
  41f097:	rol    DWORD PTR [eax+eax*4-0x71],0xb2
  41f09c:	lock repz aad 0x4c
  41f0a0:	or     eax,0x6c68707c
  41f0a5:	sbb    DWORD PTR ds:0xf7220d3,esp
  41f0ab:	jb     0x41f0fd
  41f0ad:	jne    0x41f038
  41f0af:	jbe    0x41f0e1
  41f0b1:	mov    esp,0xc90e01f0
  41f0b6:	and    ecx,edx
  41f0b8:	xor    DWORD PTR ds:0x5e34b29f,ebx
  41f0be:	jnp    0x41f05a
  41f0c0:	fwait
  41f0c1:	dec    edi
  41f0c2:	mov    bh,0xd5
  41f0c4:	iret   
  41f0c5:	les    esp,FWORD PTR [esi]
  41f0c7:	(bad)  
  41f0c8:	loopne 0x41f063
  41f0ca:	cs pop ds
  41f0cc:	sbb    DWORD PTR [ebx+0x2773f9a1],0xcbe8b9e4
  41f0d6:	cmp    eax,0xd5f21f72
  41f0db:	scas   al,BYTE PTR es:[edi]
  41f0dc:	jbe    0x41f0a3
  41f0de:	ficomp DWORD PTR [ecx+edx*2+0xd]
  41f0e2:	dec    esi
  41f0e3:	in     al,dx
  41f0e4:	cmp    BYTE PTR [edx+0x2a0cb6e5],0x77
  41f0eb:	inc    esp
  41f0ec:	std    
  41f0ed:	cs es (bad) 
  41f0f0:	xor    dh,ch
  41f0f2:	push   eax
  41f0f3:	repz xor al,0xb
  41f0f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0f7:	xor    BYTE PTR [edi],bh
  41f0f9:	repnz and ah,cl
  41f0fc:	and    edx,DWORD PTR [ebx+0x2e]
  41f0ff:	sub    DWORD PTR [eax-0x26],0xfffffffb
  41f103:	sti    
  41f104:	mov    BYTE PTR [esi],dh
  41f106:	and    esp,DWORD PTR [edi]
  41f108:	or     BYTE PTR [esp+edx*1-0x7e69c990],dh
  41f10f:	inc    edi
  41f110:	fmul   DWORD PTR [eax]
  41f112:	jno    0x41f0cd
  41f114:	mov    eax,0xeb0f9904
  41f119:	lds    edi,FWORD PTR [ebx-0x21]
  41f11c:	or     al,0x1d
  41f11e:	pusha  
  41f11f:	fisub  WORD PTR [esi-0x2503948e]
  41f125:	dec    esp
  41f126:	sub    ebp,DWORD PTR [ebp+0x1b7893c2]
  41f12c:	dec    edi
  41f12d:	pop    esp
  41f12e:	or     esi,DWORD PTR [ebp+0xd]
  41f131:	pop    esp
  41f132:	aas    
  41f133:	iret   
  41f134:	stc    
  41f135:	dec    edi
  41f136:	mov    bl,BYTE PTR [eax-0x56d9bd5e]
  41f13c:	loopne 0x41f186
  41f13e:	adc    ecx,DWORD PTR [edx-0x1b8babd2]
  41f144:	dec    esp
  41f145:	in     eax,0x34
  41f147:	loope  0x41f0cc
  41f149:	sub    edx,DWORD PTR [esi]
  41f14b:	mov    dl,0x5e
  41f14d:	inc    edx
  41f14e:	cmc    
  41f14f:	and    eax,0xcf44c2e4
  41f154:	pushf  
  41f155:	test   al,0xfe
  41f157:	pushf  
  41f158:	iret   
  41f159:	xchg   BYTE PTR [edx+0x9ece894],dl
  41f15f:	xchg   edx,eax
  41f160:	xor    al,0x78
  41f162:	retf   
  41f163:	jmp    0xfab010a8
  41f168:	cdq    
  41f169:	(bad)  
  41f16a:	loope  0x41f17f
  41f16c:	and    edx,DWORD PTR [ecx-0x233f9e2e]
  41f172:	push   0xa059bf18
  41f177:	mul    BYTE PTR [eax]
  41f179:	fst    QWORD PTR [edi+eax*4-0x30]
  41f17d:	test   al,0x62
  41f17f:	stc    
  41f180:	add    al,0x50
  41f182:	std    
  41f183:	jp     0x41f160
  41f185:	jle    0x41f1f0
  41f187:	push   ds
  41f188:	out    0x5e,eax
  41f18a:	add    eax,0xe309c83f
  41f18f:	ja     0x41f184
  41f191:	scas   eax,DWORD PTR es:[edi]
  41f192:	and    eax,DWORD PTR [esi+ebp*8]
  41f195:	mov    ebp,0xcb01ea46
  41f19a:	or     dl,al
  41f19c:	shr    DWORD PTR ds:0x6794ff4,cl
  41f1a2:	xor    dl,0x28
  41f1a5:	pop    esp
  41f1a6:	pop    ebp
  41f1a7:	stc    
  41f1a8:	test   eax,0x6098d7a6
  41f1ad:	pop    edi
  41f1ae:	mov    edx,0xb73905ca
  41f1b3:	stos   DWORD PTR es:[edi],eax
  41f1b4:	mov    esi,0x616df003
  41f1b9:	shl    DWORD PTR ds:0x9c84c4e5,0x94
  41f1c0:	mov    ebx,DWORD PTR [eax+0x4179f892]
  41f1c6:	call   FWORD PTR [ebx+0x39]
  41f1c9:	js     0x41f153
  41f1cb:	mov    ah,0xa3
  41f1cd:	out    dx,eax
  41f1ce:	stos   BYTE PTR es:[edi],al
  41f1cf:	mov    edi,0x123b1ff8
  41f1d4:	mov    ch,0x3c
  41f1d6:	int3   
  41f1d7:	mov    dl,0xce
  41f1d9:	mov    esi,DWORD PTR [esp+ebx*2+0x4639474a]
  41f1e0:	mov    cl,0xd3
  41f1e2:	enter  0xea11,0xd1
  41f1e6:	inc    ebp
  41f1e7:	sar    BYTE PTR [edx-0x49],1
  41f1ea:	call   0x4892062c
  41f1ef:	and    ah,ah
  41f1f1:	pop    edx
  41f1f2:	xor    DWORD PTR [ebx],0xf73c8a8e
  41f1f8:	inc    ebx
  41f1f9:	inc    ecx
  41f1fa:	xor    BYTE PTR [edx-0x75],0x56
  41f1fe:	add    ch,BYTE PTR [ecx+0x39f4ed8b]
  41f204:	arpl   bp,bp
  41f206:	mov    ds:0xf5944991,al
  41f20b:	and    eax,0xc53632e5
  41f210:	add    dl,ch
  41f212:	enter  0x722b,0xab
  41f216:	mov    BYTE PTR [edi+edx*1-0x9],ch
  41f21a:	call   FWORD PTR [ecx]
  41f21c:	mov    esi,0xf495ac08
  41f221:	int3   
  41f222:	cmp    ch,BYTE PTR [ebx-0x4f]
  41f225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f226:	in     al,0x86
  41f228:	hlt    
  41f229:	(bad)  
  41f22a:	push   0xffffff93
  41f22c:	fs test eax,0xac0454f4
  41f232:	dec    ebp
  41f233:	sti    
  41f234:	retf   
  41f235:	add    edx,DWORD PTR [ebx+0x21]
  41f238:	out    dx,al
  41f239:	push   eax
  41f23a:	or     al,0xf
  41f23c:	lods   eax,DWORD PTR ds:[esi]
  41f23d:	lods   eax,DWORD PTR ds:[esi]
  41f23e:	pop    ds
  41f23f:	add    BYTE PTR [esp+ebx*8-0x476f01b4],0x40
  41f247:	dec    ebx
  41f248:	retf   
  41f249:	jecxz  0x41f215
  41f24b:	popf   
  41f24c:	xchg   esi,esp
  41f24e:	mov    bl,0xb4
  41f250:	cmp    esi,DWORD PTR [ebp+0x75]
  41f253:	hlt    
  41f254:	stos   BYTE PTR es:[edi],al
  41f255:	jg     0x41f26b
  41f257:	push   cs
  41f258:	jb     0x41f27a
  41f25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f25b:	sar    BYTE PTR [ebx],0x37
  41f25e:	ret    0x835
  41f261:	jb     0x41f280
  41f263:	mov    esi,0x3608ce2e
  41f268:	jge    0xbdd6f141
  41f26e:	adc    eax,0x60f293ca
  41f273:	sti    
  41f274:	xchg   edx,eax
  41f275:	mov    eax,0x5c0c0132
  41f27a:	pop    ds
  41f27b:	stos   BYTE PTR es:[edi],al
  41f27c:	sub    BYTE PTR [ecx+0x54],ch
  41f27f:	jmp    0x8f297f08
  41f284:	(bad)  
  41f285:	push   esp
  41f286:	nop
  41f287:	js     0x41f2fe
  41f289:	bound  eax,QWORD PTR [edx]
  41f28b:	js     0x41f232
  41f28d:	test   al,0x47
  41f28f:	jl     0x41f2cf
  41f291:	cs cmp eax,0x8c5e0d42
  41f297:	mov    ecx,0x3bbac622
  41f29c:	popf   
  41f29d:	adc    DWORD PTR [ebp+0x60],edx
  41f2a0:	scas   al,BYTE PTR es:[edi]
  41f2a1:	enter  0x207f,0x51
  41f2a5:	inc    edi
  41f2a6:	outs   dx,DWORD PTR ds:[esi]
  41f2a7:	pop    ecx
  41f2a8:	mov    al,0x16
  41f2aa:	cmp    BYTE PTR [edx+0x619c2c68],bh
  41f2b0:	xchg   BYTE PTR [edx-0x25],dh
  41f2b3:	pop    edx
  41f2b4:	outs   dx,DWORD PTR ds:[esi]
  41f2b5:	daa    
  41f2b6:	mov    cl,0x74
  41f2b8:	mov    ch,0xf4
  41f2ba:	mov    ebp,0x35e07800
  41f2bf:	ror    ecx,1
  41f2c1:	dec    esi
  41f2c2:	cdq    
  41f2c3:	sub    ebx,DWORD PTR [edi+esi*1]
  41f2c6:	shl    BYTE PTR [ebp-0x4166c2ba],1
  41f2cc:	cs or  eax,0x1f
  41f2d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f2d1:	daa    
  41f2d2:	pop    ss
  41f2d3:	leave  
  41f2d4:	inc    esp
  41f2d5:	rcr    BYTE PTR [ecx-0x133a0b4a],cl
  41f2db:	xchg   ebp,eax
  41f2dc:	scas   al,BYTE PTR es:[edi]
  41f2dd:	cdq    
  41f2de:	mov    cl,0x41
  41f2e0:	and    al,0x98
  41f2e2:	aaa    
  41f2e3:	xchg   ebx,eax
  41f2e4:	in     al,0x56
  41f2e6:	pusha  
  41f2e7:	jb     0x41f363
  41f2e9:	daa    
  41f2ea:	jno    0x41f359
  41f2ec:	inc    eax
  41f2ed:	jg     0x41f2f9
  41f2ef:	xor    ecx,DWORD PTR [edi+0x143e92b6]
  41f2f5:	pop    ss
  41f2f6:	adc    BYTE PTR [edx],bh
  41f2f8:	dec    ebp
  41f2f9:	jne    0x41f327
  41f2fb:	(bad)  
  41f2fc:	push   cs
  41f2fd:	mov    esi,0x43b7a52a
  41f302:	pushf  
  41f303:	jle    0x41f31d
  41f305:	cmp    ebx,DWORD PTR [ebx]
  41f307:	fmul   DWORD PTR [edi-0x10]
  41f30a:	test   al,0xcd
  41f30c:	mov    ch,0x2e
  41f30e:	xchg   BYTE PTR [eax+0x64f7a2a],dh
  41f314:	sub    al,0xe7
  41f316:	call   0x8d78:0x9e236512
  41f31d:	xor    al,0xcf
  41f31f:	inc    ebp
  41f320:	call   0x22af4b61
  41f325:	into   
  41f326:	push   ebx
  41f327:	or     bh,ch
  41f329:	shr    dh,0xc7
  41f32c:	push   ds
  41f32d:	xchg   edi,eax
  41f32e:	stc    
  41f32f:	lahf   
  41f330:	and    ah,cl
  41f332:	lea    esp,[eax+ebx*4-0x25]
  41f336:	fistp  WORD PTR [ebx]
  41f338:	lds    edx,FWORD PTR [ebx+0x6c520b55]
  41f33e:	mov    ah,0xe6
  41f340:	loope  0x41f33e
  41f342:	sbb    bl,BYTE PTR [esi+ebp*2]
  41f345:	mov    ebx,0x282a7115
  41f34a:	cmp    BYTE PTR [edx+ebp*1],ah
  41f34d:	and    al,0x2e
  41f34f:	daa    
  41f350:	and    BYTE PTR [ebx],bh
  41f352:	call   0x94b20632
  41f357:	out    dx,al
  41f358:	test   eax,0x1cf396fd
  41f35d:	int    0xb6
  41f35f:	xchg   esp,eax
  41f360:	sbb    al,0xc
  41f362:	or     ch,BYTE PTR [edi+0x68d442eb]
  41f368:	loopne 0x41f33d
  41f36a:	and    DWORD PTR [esi-0x33c61e48],esi
  41f370:	fdivr  QWORD PTR ds:0xb064a87b
  41f376:	pop    ds
  41f377:	stc    
  41f378:	fisttp QWORD PTR ds:0x1db1cc0d
  41f37e:	sbb    BYTE PTR [ecx+0x3d],dh
  41f381:	stc    
  41f382:	adc    al,0x6c
  41f384:	and    edx,DWORD PTR [ecx]
  41f386:	scas   eax,DWORD PTR es:[edi]
  41f387:	int    0xe6
  41f389:	xchg   edi,eax
  41f38b:	das    
  41f38c:	or     al,0x6f
  41f38e:	inc    ebx
  41f38f:	or     eax,0x4c7cb4ed
  41f394:	fistp  QWORD PTR [edi-0x5824dad1]
  41f39a:	sub    BYTE PTR [edx],ah
  41f39c:	adc    BYTE PTR [ebx-0x35],ah
  41f39f:	fcomp  QWORD PTR [edx-0xe]
  41f3a2:	sbb    eax,0x8ca9cc66
  41f3a7:	inc    esi
  41f3a8:	jnp    0x41f389
  41f3aa:	in     eax,0x4f
  41f3ac:	clc    
  41f3ad:	shl    eax,cl
  41f3af:	test   al,0x36
  41f3b1:	push   esi
  41f3b2:	adc    al,0xc8
  41f3b4:	repz push ebp
  41f3b6:	jmp    0x41f3cb
  41f3b8:	ds dec eax
  41f3ba:	lds    ecx,FWORD PTR [eax-0x3f07d99d]
  41f3c0:	out    0xf2,al
  41f3c2:	test   eax,0xe622d624
  41f3c7:	fdiv   DWORD PTR [ebp-0x2a]
  41f3ca:	jbe    0x41f415
  41f3cc:	jae    0x41f433
  41f3ce:	lahf   
  41f3cf:	add    dl,BYTE PTR [edi]
  41f3d1:	cmp    DWORD PTR [edx+0x37],edi
  41f3d4:	sbb    al,BYTE PTR [di-0x4dfa]
  41f3d9:	and    DWORD PTR [ecx+ebx*2-0x50],edi
  41f3dd:	cmc    
  41f3de:	mov    al,0x68
  41f3e0:	jnp    0x41f38f
  41f3e2:	push   eax
  41f3e3:	push   esp
  41f3e4:	(bad)  
  41f3e5:	aaa    
  41f3e6:	jl     0x41f396
  41f3e8:	pushf  
  41f3e9:	cmp    edx,edi
  41f3eb:	add    al,BYTE PTR [edx-0x3d]
  41f3ee:	xchg   esp,eax
  41f3ef:	and    BYTE PTR [edx],ah
  41f3f1:	xlat   BYTE PTR ds:[ebx]
  41f3f2:	das    
  41f3f3:	xor    eax,0x17c9f627
  41f3f8:	mov    bh,0x99
  41f3fa:	or     BYTE PTR [edx],ah
  41f3fc:	jne    0x41f3dd
  41f3fe:	aam    0x18
  41f400:	popf   
  41f401:	lds    edi,FWORD PTR [edi+0x1086238e]
  41f407:	rcl    DWORD PTR [eax-0x68],0xce
  41f40b:	cmp    al,0xbd
  41f40d:	fmul   DWORD PTR [edx+0x26]
  41f410:	xchg   ecx,eax
  41f411:	pop    ecx
  41f412:	out    0xbf,al
  41f414:	ins    BYTE PTR es:[edi],dx
  41f415:	sub    DWORD PTR [eax],edx
  41f417:	cdq    
  41f418:	cmp    BYTE PTR [ebx+0x46],al
  41f41b:	dec    ebx
  41f41c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f41d:	cmp    ecx,DWORD PTR [edi-0x5d]
  41f420:	mov    ch,BYTE PTR [esi]
  41f422:	test   DWORD PTR [edi],ebx
  41f424:	repnz scas eax,DWORD PTR es:[edi]
  41f426:	fldcw  WORD PTR [esi+0x1d7d00cd]
  41f42c:	mov    eax,ds:0xd0fd0369
  41f431:	add    DWORD PTR [eax-0x5f78bb3e],ebp
  41f437:	mov    al,ds:0x145d7ffe
  41f43c:	dec    edi
  41f43d:	add    DWORD PTR [edi+0x77],ebp
  41f440:	hlt    
  41f441:	aaa    
  41f442:	xchg   edx,eax
  41f443:	jns    0x41f438
  41f445:	jo     0x41f3ec
  41f447:	cli    
  41f448:	das    
  41f449:	add    ch,BYTE PTR [ebx]
  41f44b:	repz das 
  41f44d:	mov    ds:0xfde1a90f,eax
  41f452:	xchg   ebx,eax
  41f453:	popa   
  41f454:	and    bl,BYTE PTR [edx+0x587b3cc2]
  41f45a:	pop    eax
  41f45b:	(bad)  
  41f45c:	and    al,0x64
  41f45e:	addr16 add ch,dh
  41f461:	mov    gs,WORD PTR ss:[eax]
  41f464:	pop    esi
  41f465:	cli    
  41f466:	inc    ebx
  41f467:	push   cs
  41f468:	aas    
  41f469:	icebp  
  41f46a:	sub    BYTE PTR [ecx],bh
  41f46c:	(bad)  
  41f46d:	stos   DWORD PTR es:[edi],eax
  41f46e:	and    eax,0x55b47362
  41f473:	scas   eax,DWORD PTR es:[edi]
  41f474:	js     0x41f47b
  41f476:	fld    DWORD PTR [esi+ebx*1-0x53]
  41f47a:	out    dx,eax
  41f47b:	out    dx,al
  41f47c:	add    eax,0x64af688e
  41f481:	mov    bh,0x18
  41f483:	stc    
  41f484:	icebp  
  41f485:	dec    esi
  41f486:	loope  0x41f40f
  41f488:	rol    DWORD PTR [edi],cl
  41f48a:	mov    ch,0x74
  41f48c:	xchg   esi,eax
  41f48d:	jno    0x41f4c8
  41f48f:	(bad)  
  41f490:	pop    es
  41f491:	xor    edx,DWORD PTR [eax-0x66]
  41f494:	inc    eax
  41f495:	dec    esp
  41f496:	stc    
  41f497:	and    eax,0xcad3b2da
  41f49c:	and    esp,DWORD PTR [edi+edx*1]
  41f49f:	jp     0x41f4a9
  41f4a1:	xor    BYTE PTR [ebx+0x18],al
  41f4a4:	repz push ds
  41f4a6:	mov    ebp,0xd7b193d7
  41f4ab:	push   0xffffffb2
  41f4ad:	mov    gs:0x8a7431b6,al
  41f4b3:	xlat   BYTE PTR ds:[ebx]
  41f4b4:	jle    0x41f442
  41f4b6:	jne    0x41f48d
  41f4b8:	jp     0x41f497
  41f4ba:	stc    
  41f4bb:	or     al,0xa8
  41f4bd:	mov    esp,0x5f7fbcf0
  41f4c2:	test   ebp,eax
  41f4c4:	arpl   WORD PTR [ebx+0x4d],dx
  41f4c7:	mov    esp,0xa3452378
  41f4cc:	push   cs
  41f4cd:	mov    DWORD PTR [edi+0x4],eax
  41f4d0:	sbb    edi,DWORD PTR [ebp-0x8e76654]
  41f4d6:	imul   ecx,DWORD PTR [edx-0x13ac7519],0x90171758
  41f4e0:	and    BYTE PTR [edx+0x471a70d0],ah
  41f4e6:	or     BYTE PTR [edi+0x56ea6c2c],cl
  41f4ec:	ins    BYTE PTR es:[edi],dx
  41f4ed:	sbb    DWORD PTR [ebx],ecx
  41f4ef:	loopne 0x41f490
  41f4f1:	inc    esp
  41f4f2:	mov    ebx,0x1bdad0c9
  41f4f7:	dec    edi
  41f4f8:	xchg   esp,eax
  41f4f9:	ret    0x615d
  41f4fc:	jle    0x41f4b0
  41f4fe:	popf   
  41f4ff:	std    
  41f500:	mov    cl,0x31
  41f502:	pop    ds
  41f503:	retf   
  41f504:	xchg   DWORD PTR [ecx+0x72c2801c],edx
  41f50a:	mov    ah,0x47
  41f50c:	outs   dx,DWORD PTR ds:[si]
  41f50e:	cs pop edi
  41f510:	sbb    BYTE PTR ds:0xc436a798,dh
  41f516:	or     bh,bh
  41f518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f519:	sbb    al,0x47
  41f51b:	ja     0x6970265b
  41f521:	(bad)  
  41f522:	cdq    
  41f523:	push   esp
  41f524:	aas    
  41f525:	sbb    al,0x45
  41f527:	hlt    
  41f528:	add    DWORD PTR [eax],esi
  41f52a:	xchg   ecx,eax
  41f52b:	repz fst QWORD PTR [eax+eax*1-0x5d]
  41f530:	xchg   ebp,eax
  41f531:	shl    BYTE PTR [ecx-0x4420b7ce],cl
  41f537:	mov    edi,0x569dde48
  41f53c:	shl    BYTE PTR [edi],1
  41f53e:	enter  0xecbe,0x73
  41f542:	mov    BYTE PTR [edi+0x19],al
  41f545:	(bad)  [eax+0x7b]
  41f548:	je     0x41f509
  41f54a:	push   ss
  41f54b:	inc    esp
  41f54c:	fsub   DWORD PTR [eax]
  41f54e:	inc    ecx
  41f54f:	sub    ch,BYTE PTR [edx-0x5cd039c4]
  41f555:	and    al,0x54
  41f557:	cmp    edx,DWORD PTR [edi+0x2a627fe]
  41f55d:	sbb    DWORD PTR [ebx+edi*8+0x34],esi
  41f561:	add    bh,BYTE PTR [edx]
  41f563:	sbb    BYTE PTR [esi],ch
  41f565:	pop    edi
  41f566:	fxch   st(4)
  41f568:	mov    ecx,es
  41f56a:	aad    0xda
  41f56c:	out    0x26,al
  41f56e:	test   BYTE PTR [ecx+0x6e],al
  41f571:	xor    edi,DWORD PTR [esi-0x2e]
  41f574:	xlat   BYTE PTR ds:[ebx]
  41f575:	cmp    al,BYTE PTR [ebx]
  41f577:	mov    ebx,0xa7c609b8
  41f57c:	jmp    0x5ad6e9f7
  41f581:	cdq    
  41f582:	into   
  41f583:	imul   ecx,DWORD PTR [esp+edi*4+0x19587e36],0xfffffffe
  41f58b:	pop    ecx
  41f58c:	xchg   DWORD PTR [ebx+eax*1],ebx
  41f58f:	rol    DWORD PTR [ebp-0x10],cl
  41f592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f593:	adc    esp,ebx
  41f595:	leave  
  41f596:	dec    edx
  41f597:	inc    esi
  41f598:	push   0x4d5db1d7
  41f59d:	inc    ecx
  41f59e:	enter  0xc226,0xbd
  41f5a2:	(bad)  
  41f5a3:	fs jno 0x41f582
  41f5a6:	pop    ecx
  41f5a7:	mov    esp,0x7662484c
  41f5ac:	fdiv   st,st(7)
  41f5ae:	test   BYTE PTR [ebx+ebx*8-0x410a0c06],0xcd
  41f5b6:	or     al,0x92
  41f5b8:	pop    ebx
  41f5b9:	inc    ebx
  41f5ba:	scas   al,BYTE PTR es:[edi]
  41f5bb:	adc    BYTE PTR [ebx+0x3a],dl
  41f5be:	rol    DWORD PTR [ebp-0x520ef3a3],0xb4
  41f5c5:	out    dx,eax
  41f5c6:	xor    cl,BYTE PTR [edi-0x5317d45a]
  41f5cc:	ficom  WORD PTR [ecx-0x179a25b6]
  41f5d2:	not    BYTE PTR [ebx+0x3952ccb]
  41f5d8:	nop
  41f5d9:	fldenv [ecx-0x742d210e]
  41f5df:	sbb    al,0xf0
  41f5e1:	mov    cl,0xa1
  41f5e3:	sti    
  41f5e4:	mov    DWORD PTR [edi+edx*1-0x5a],edi
  41f5e8:	push   es
  41f5e9:	arpl   WORD PTR [ebx+0x36ce45f9],cx
  41f5ef:	jg     0x41f63d
  41f5f1:	mov    cl,0xe5
  41f5f3:	mov    ss:0x1e60098,eax
  41f5f9:	dec    ebx
  41f5fa:	shl    DWORD PTR [edx+0x101e3315],1
  41f600:	je     0x41f5c9
  41f602:	xchg   esi,eax
  41f603:	push   0x184afa64
  41f608:	jge    0x41f58a
  41f60a:	(bad)  
  41f60b:	stc    
  41f60c:	out    0xd,eax
  41f60e:	out    dx,eax
  41f60f:	mov    ds:0xee6a7b96,eax
  41f614:	in     al,0x2
  41f616:	int    0x29
  41f618:	jmp    0x3710:0xfb949b3
  41f61f:	fsub   DWORD PTR [ebp-0x61]
  41f622:	stos   DWORD PTR es:[edi],eax
  41f623:	mov    edi,0x6c8f3c58
  41f628:	adc    dh,ah
  41f62a:	je     0x41f683
  41f62c:	mov    eax,ds:0xfc72fdfa
  41f631:	cmc    
  41f632:	mov    bh,0xaf
  41f634:	pop    ds
  41f635:	push   esi
  41f636:	sub    eax,0x29c35b91
  41f63b:	mov    bl,0xe3
  41f63d:	jecxz  0x41f656
  41f63f:	sub    ecx,DWORD PTR [edi]
  41f641:	dec    edx
  41f642:	stos   BYTE PTR es:[edi],al
  41f643:	scas   al,BYTE PTR es:[edi]
  41f644:	dec    esp
  41f645:	stos   BYTE PTR es:[edi],al
  41f646:	mov    bl,0x8d
  41f648:	adc    ebx,DWORD PTR ds:0x278879
  41f64e:	cdq    
  41f64f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f650:	jp     0x41f636
  41f652:	and    al,0xa
  41f654:	or     BYTE PTR [esi+0x43e626de],bl
  41f65a:	mov    gs,WORD PTR [ebp-0x30]
  41f65d:	dec    ecx
  41f65e:	test   DWORD PTR ds:0xd5c0653f,ecx
  41f664:	dec    ebx
  41f665:	loop   0x41f617
  41f667:	pop    ecx
  41f668:	test   eax,0xdf6a1eb0
  41f66d:	sbb    BYTE PTR [esi],0xd6
  41f670:	jno    0x41f620
  41f672:	repz or al,ah
  41f675:	ins    DWORD PTR es:[edi],dx
  41f676:	xor    al,BYTE PTR [ebx+0xd]
  41f679:	in     al,0x5
  41f67b:	add    eax,0x749c035
  41f680:	jbe    0x41f616
  41f682:	hlt    
  41f683:	retf   
  41f684:	xchg   bh,ah
  41f686:	jae    0x41f69a
  41f688:	xor    BYTE PTR [ebx+edi*2],dh
  41f68b:	mov    eax,0x5943501f
  41f690:	std    
  41f691:	xor    BYTE PTR [ecx-0x167039a],cl
  41f697:	jle    0x41f6e9
  41f699:	adc    al,0x89
  41f69b:	jge    0x41f647
  41f69d:	(bad)  [esi+0x24]
  41f6a0:	lods   eax,DWORD PTR ds:[esi]
  41f6a1:	div    BYTE PTR [ebp+0x2cc014fa]
  41f6a7:	and    edx,DWORD PTR [edi]
  41f6a9:	xchg   esi,eax
  41f6aa:	lahf   
  41f6ab:	inc    edx
  41f6ac:	aaa    
  41f6ad:	loope  0x41f6ae
  41f6af:	pop    edx
  41f6b0:	push   ds
  41f6b1:	sbb    ebp,DWORD PTR [edx+0x9]
  41f6b4:	fwait
  41f6b5:	or     eax,edx
  41f6b7:	leave  
  41f6b8:	rcl    BYTE PTR [ecx],1
  41f6ba:	jb     0x41f656
  41f6bc:	mov    BYTE PTR ds:0x64e4816b,bl
  41f6c2:	pop    ds
  41f6c3:	add    eax,0x804fd95d
  41f6c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6c9:	rcr    bl,cl
  41f6cb:	sbb    eax,0xca4bb4c6
  41f6d0:	and    BYTE PTR [edx+0x52f17099],0xa6
  41f6d7:	mov    eax,ds:0x903c4290
  41f6dc:	lods   eax,DWORD PTR ds:[esi]
  41f6dd:	out    0x3c,eax
  41f6df:	sbb    al,0x12
  41f6e1:	stos   BYTE PTR es:[edi],al
  41f6e2:	fimul  WORD PTR [ecx-0x5d]
  41f6e5:	aad    0x55
  41f6e7:	xchg   edi,eax
  41f6e8:	dec    edx
  41f6e9:	arpl   WORD PTR [edx+0x5cef641b],sp
  41f6ef:	cmp    al,0x4f
  41f6f1:	outs   dx,DWORD PTR ds:[esi]
  41f6f2:	adc    BYTE PTR [ecx],0xfd
  41f6f5:	pop    ds
  41f6f6:	push   0x6b09a548
  41f6fb:	daa    
  41f6fc:	dec    edi
  41f6fd:	xor    ah,BYTE PTR [esi+0x42]
  41f700:	ins    DWORD PTR es:[edi],dx
  41f701:	pop    esp
  41f702:	dec    edx
  41f703:	(bad)  
  41f704:	dec    ebp
  41f705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f706:	data16 or al,ah
  41f709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f70a:	sbb    eax,0x55b6f715
  41f710:	mov    ebp,0x15bcfe93
  41f715:	adc    edx,DWORD PTR [esi]
  41f717:	enter  0xcad4,0xef
  41f71b:	and    eax,0x834e90ed
  41f720:	jecxz  0x41f780
  41f722:	out    dx,eax
  41f723:	pusha  
  41f724:	shl    ebx,cl
  41f726:	daa    
  41f727:	repz int 0x7a
  41f72a:	fidiv  WORD PTR [esi+edx*8]
  41f72d:	sub    eax,esp
  41f72f:	repnz cwde 
  41f731:	sub    BYTE PTR [ebx+0x649c9b18],dl
  41f737:	out    dx,eax
  41f738:	dec    esp
  41f739:	mov    cl,0x2e
  41f73b:	mov    BYTE PTR [edi-0x2a],dh
  41f73e:	cmp    BYTE PTR [edx+0x26],bl
  41f741:	and    esi,DWORD PTR [edi]
  41f743:	jns    0x41f709
  41f745:	cmp    ah,BYTE PTR [esi]
  41f747:	jne    0x41f6ea
  41f749:	inc    DWORD PTR [eax-0x2909989]
  41f74f:	pop    ebp
  41f750:	mov    ebx,0x11abd0bb
  41f755:	push   ecx
  41f756:	mov    eax,ds:0x1863b719
  41f75b:	(bad)  
  41f75c:	out    0x25,al
  41f75e:	pop    edi
  41f75f:	mov    edi,0x7deb2b21
  41f764:	pop    es
  41f765:	inc    esp
  41f766:	jecxz  0x41f745
  41f768:	stc    
  41f769:	cmp    eax,0x419394f0
  41f76e:	pop    eax
  41f76f:	popf   
  41f770:	cwde   
  41f771:	add    BYTE PTR [edx-0x678a9110],bl
  41f777:	cwde   
  41f778:	sub    eax,0x33a76178
  41f77d:	bound  esi,QWORD PTR [esi]
  41f77f:	sbb    eax,0x500184eb
  41f784:	lahf   
  41f785:	arpl   sp,bx
  41f787:	sub    ebp,ebp
  41f789:	and    bh,BYTE PTR [eax]
  41f78b:	data16 mov bl,0x5
  41f78e:	push   cs
  41f78f:	out    0xcd,eax
  41f791:	xchg   ebx,eax
  41f792:	js     0x41f809
  41f794:	or     eax,0x582e239b
  41f799:	jmp    0x5974:0x6c7cd5b6
  41f7a0:	(bad)  
  41f7a1:	sbb    eax,0x2e1c154b
  41f7a6:	je     0x41f7b0
  41f7a8:	add    al,0xa1
  41f7aa:	call   0x8875748
  41f7af:	shr    ecx,1
  41f7b1:	test   DWORD PTR [eax],edx
  41f7b3:	sbb    al,0xf7
  41f7b5:	lds    eax,FWORD PTR ds:[ebp-0x7acf1bc]
  41f7bc:	test   BYTE PTR ds:[ebx],bh
  41f7bf:	frstor [edx-0x486b255b]
  41f7c5:	fwait
  41f7c6:	mov    DWORD PTR [edx+0x608c6404],0x3fc67898
  41f7d0:	push   esp
  41f7d1:	je     0x41f81a
  41f7d3:	inc    esp
  41f7d4:	loope  0x41f82e
  41f7d6:	stos   DWORD PTR es:[edi],eax
  41f7d7:	adc    eax,DWORD PTR [edi]
  41f7d9:	inc    ecx
  41f7da:	cld    
  41f7db:	popa   
  41f7dc:	pop    ebp
  41f7dd:	or     al,0x37
  41f7df:	pop    ebp
  41f7e0:	push   edi
  41f7e1:	and    dh,BYTE PTR [ebp-0x2dd5a521]
  41f7e7:	stos   DWORD PTR es:[edi],eax
  41f7e8:	cdq    
  41f7e9:	xor    ecx,ebx
  41f7eb:	sbb    ch,BYTE PTR [esi+ecx*1]
  41f7ee:	mov    edx,0x20eae724
  41f7f3:	das    
  41f7f4:	mov    bl,0xc9
  41f7f6:	imul   ebx,esp,0x79032b29
  41f7fc:	adc    al,0x2e
  41f7fe:	clc    
  41f7ff:	sub    eax,0xa839d8ad
  41f804:	lods   al,BYTE PTR ds:[esi]
  41f805:	and    al,0xd5
  41f807:	push   0xe02f108a
  41f80c:	mov    ebx,0x2f699072
  41f811:	hlt    
  41f812:	push   ebx
  41f813:	(bad)  
  41f814:	mov    edx,0x90a9fef5
  41f819:	dec    esp
  41f81a:	fisubr WORD PTR [ecx-0x18]
  41f81d:	adc    ebx,esi
  41f81f:	scas   eax,DWORD PTR es:[edi]
  41f820:	jg     0x41f86e
  41f822:	repnz fs (bad) 
  41f825:	int    0x41
  41f827:	loopne 0x41f870
  41f829:	cwde   
  41f82a:	int    0x13
  41f82c:	and    esi,DWORD PTR [eax-0x7c5b6fe5]
  41f832:	stos   DWORD PTR es:[edi],eax
  41f833:	aam    0xc3
  41f835:	dec    esp
  41f836:	sub    ch,BYTE PTR [ecx+ecx*8+0x63]
  41f83a:	adc    al,0xb6
  41f83c:	push   eax
  41f83d:	push   0xd
  41f83f:	xor    BYTE PTR [ebp+0x4c],al
  41f842:	(bad)  [eax-0x42]
  41f845:	sbb    eax,0xa4c99b0d
  41f84a:	aad    0xd2
  41f84c:	stos   BYTE PTR es:[edi],al
  41f84d:	ficom  DWORD PTR [ecx-0x1a7326a5]
  41f853:	and    DWORD PTR [edx+0x16d764fe],ebp
  41f859:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f85a:	and    BYTE PTR ds:0xb87d5412,dl
  41f860:	xor    BYTE PTR [eax+ebx*2],bl
  41f863:	and    al,0xd5
  41f865:	sbb    eax,0x3e5fa1e3
  41f86a:	or     dl,bh
  41f86c:	aaa    
  41f86d:	or     eax,0xe90a0453
  41f872:	xor    DWORD PTR [ecx-0x3d4d92c7],ebx
  41f878:	pop    esi
  41f879:	mov    ds:0xad4184a3,eax
  41f87e:	test   ebx,0x26736a1d
  41f884:	fldenv [esi]
  41f886:	data16 jno 0x41f897
  41f889:	inc    DWORD PTR [ebp-0x18464c40]
  41f88f:	pop    ebx
  41f890:	sbb    dl,BYTE PTR [ebx+0x7ce04c27]
  41f896:	cwde   
  41f897:	xchg   esi,eax
  41f898:	(bad)  
  41f89a:	scas   eax,DWORD PTR es:[edi]
  41f89b:	pop    esi
  41f89c:	pop    ebp
  41f89d:	(bad)  
  41f89e:	mov    dh,0x13
  41f8a0:	test   BYTE PTR [edi+0x64e80797],dl
  41f8a6:	adc    eax,0x7c9aa3e6
  41f8ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f8ac:	mov    al,0xe6
  41f8ae:	and    ebp,DWORD PTR [ecx-0x7d]
  41f8b1:	repnz sbb bh,al
  41f8b4:	loopne 0x41f8d3
  41f8b6:	adc    DWORD PTR [ebp+eiz*2+0x1a696149],edi
  41f8bd:	add    BYTE PTR [ecx+0xc],0x2a
  41f8c1:	jle    0x41f8cf
  41f8c3:	hlt    
  41f8c4:	dec    edx
  41f8c6:	std    
  41f8c7:	aaa    
  41f8c8:	inc    edi
  41f8c9:	lea    ebx,ds:0x4312484
  41f8cf:	mov    al,ds:0xc8e43ac3
  41f8d4:	mov    ah,0xe
  41f8d6:	ds dec ecx
  41f8d8:	lock mov ebp,0x6a5e317a
  41f8de:	daa    
  41f8df:	nop
  41f8e0:	enter  0xcdf9,0x6f
  41f8e4:	cld    
  41f8e5:	xchg   esp,eax
  41f8e6:	in     al,0x55
  41f8e8:	gs sub bl,dh
  41f8eb:	mov    bl,0x75
  41f8ed:	add    ah,bh
  41f8ef:	pop    ebp
  41f8f0:	fcmovnb st,st(1)
  41f8f2:	push   eax
  41f8f3:	sbb    DWORD PTR [esi],eax
  41f8f5:	sbb    al,0x8d
  41f8f7:	sahf   
  41f8f8:	jmp    0xe629f86e
  41f8fd:	aad    0x46
  41f8ff:	and    DWORD PTR [ebp-0x6fa78e74],ecx
  41f905:	inc    ebp
  41f906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f907:	xchg   edx,eax
  41f908:	ins    BYTE PTR es:[edi],dx
  41f909:	push   esi
  41f90a:	(bad)  
  41f90b:	or     DWORD PTR [ecx],eax
  41f90d:	inc    ebp
  41f90e:	fild   WORD PTR [ebx-0x31]
  41f911:	adc    DWORD PTR [ebx],0x49
  41f914:	xor    bl,BYTE PTR [esi+0x75]
  41f917:	stos   BYTE PTR es:[edi],al
  41f918:	imul   edi,DWORD PTR [eax+0x4943d116],0x8ebd322d
  41f922:	pop    DWORD PTR [ebx+0x1d5c0bda]
  41f928:	icebp  
  41f929:	shl    DWORD PTR [edi-0x17],1
  41f92c:	out    dx,eax
  41f92d:	nop
  41f92e:	xor    eax,ecx
  41f930:	stc    
  41f931:	pop    ss
  41f932:	xchg   edx,eax
  41f933:	inc    esp
  41f934:	inc    esi
  41f935:	in     eax,0x2c
  41f937:	into   
  41f938:	imul   al
  41f93a:	les    esi,FWORD PTR [edx-0x30b4b2f0]
  41f940:	sti    
  41f941:	sahf   
  41f942:	pop    es
  41f943:	push   es
  41f944:	or     eax,0xe62fe93f
  41f949:	popf   
  41f94a:	ins    BYTE PTR es:[edi],dx
  41f94b:	nop
  41f94c:	sub    BYTE PTR [ebx-0x6e821b64],0x81
  41f953:	clc    
  41f954:	fxch   st(1)
  41f956:	mov    al,ds:0x5d83c03a
  41f95b:	add    eax,0x944613f5
  41f960:	dec    ecx
  41f961:	mov    ds:0xc90ff069,al
  41f966:	xor    DWORD PTR [edx-0x7],esp
  41f969:	mov    ch,0xe1
  41f96b:	dec    esi
  41f96c:	stos   DWORD PTR es:[edi],eax
  41f96d:	adc    eax,0x76e138ea
  41f972:	xor    al,0x3e
  41f974:	retf   
  41f975:	std    
  41f976:	cmp    eax,0xcd630c11
  41f97b:	jmp    0x41f9dd
  41f97d:	out    dx,eax
  41f97e:	push   edx
  41f97f:	lock dec eax
  41f981:	mov    eax,ds:0xa109dbc9
  41f986:	jno    0x41f972
  41f988:	jge    0x41f92b
  41f98a:	sub    esi,DWORD PTR [ecx-0x11e8ee80]
  41f990:	outs   dx,DWORD PTR ds:[esi]
  41f991:	pop    ebx
  41f992:	cmp    BYTE PTR [esi],dh
  41f994:	adc    al,0x21
  41f996:	in     al,0x59
  41f998:	adc    ebx,DWORD PTR [ecx+0x2bd8aa2b]
  41f99e:	call   0xf56454bf
  41f9a3:	cmc    
  41f9a4:	jno    0x41f9b0
  41f9a6:	shl    DWORD PTR [edi],0x27
  41f9a9:	in     eax,dx
  41f9aa:	out    dx,eax
  41f9ab:	mov    dh,0xac
  41f9ad:	int    0xc4
  41f9af:	stos   BYTE PTR es:[edi],al
  41f9b0:	popa   
  41f9b1:	rcr    DWORD PTR ds:0xafbbae3c,0x6e
  41f9b8:	dec    edi
  41f9b9:	gs pop esp
  41f9bb:	sbb    al,0xe7
  41f9bd:	cmc    
  41f9be:	push   edi
  41f9bf:	fwait
  41f9c0:	test   eax,0xbad8127c
  41f9c5:	and    ch,BYTE PTR [ebp-0xc]
  41f9c8:	inc    ebp
  41f9c9:	add    DWORD PTR [edi],ebp
  41f9cb:	mov    esp,0x44e0fac8
  41f9d0:	push   ss
  41f9d1:	call   0xee04:0xe1572ff6
  41f9d8:	ret    0x6548
  41f9db:	adc    eax,0xfd2ef10b
  41f9e0:	mov    al,ss:0x58899dd7
  41f9e6:	adc    bh,BYTE PTR [edx]
  41f9e8:	mov    edx,0xb6d95cc8
  41f9ed:	xchg   edx,eax
  41f9ee:	mov    ah,0x27
  41f9f0:	sbb    al,ch
  41f9f2:	or     eax,0x442d87f3
  41f9f7:	fst    QWORD PTR [ebp+edx*2+0x1c]
  41f9fb:	xlat   BYTE PTR ds:[ebx]
  41f9fc:	ds pop esp
  41f9fe:	jns    0x41fa73
  41fa00:	mov    ebp,DWORD PTR [eax+0x4d]
  41fa03:	rcr    BYTE PTR [esp+edi*1],cl
  41fa06:	push   edx
  41fa07:	jbe    0x41f9ff
  41fa09:	aas    
  41fa0a:	adc    BYTE PTR [ebp-0x49a295ec],bh
  41fa10:	not    DWORD PTR [ebx]
  41fa12:	stos   BYTE PTR es:[edi],al
  41fa13:	fs in  eax,dx
  41fa15:	push   es
  41fa16:	popf   
  41fa17:	jne    0x41fa56
  41fa19:	adc    DWORD PTR ds:0x24776ff9,ebp
  41fa1f:	(bad)  
  41fa20:	out    0x9c,al
  41fa22:	add    eax,0x8b5c20a3
  41fa27:	mov    edx,0x7f652584
  41fa2c:	aaa    
  41fa2d:	out    0x1f,al
  41fa2f:	mov    eax,ds:0x6046c40e
  41fa34:	pop    ss
  41fa35:	mov    ds:0xad8839e5,eax
  41fa3a:	sti    
  41fa3b:	repnz add ch,BYTE PTR [ebx]
  41fa3e:	jae    0x41fa6f
  41fa40:	mov    BYTE PTR [ecx],ah
  41fa42:	bound  edx,QWORD PTR [edx-0x13]
  41fa45:	mov    ebp,DWORD PTR [ecx+0x77762435]
  41fa4b:	aaa    
  41fa4c:	outs   dx,BYTE PTR ds:[esi]
  41fa4d:	and    DWORD PTR [ebx],eax
  41fa4f:	pop    ebx
  41fa50:	push   esp
  41fa51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa52:	xor    bl,BYTE PTR [ebx+0x413e4c5d]
  41fa58:	cmp    ebp,eax
  41fa5a:	or     al,0x9c
  41fa5c:	(bad)  
  41fa5e:	sti    
  41fa5f:	and    al,0x52
  41fa61:	(bad)  [ebx]
  41fa63:	or     esi,DWORD PTR [esi]
  41fa65:	retf   
  41fa66:	je     0x41fa5b
  41fa68:	cmp    eax,0x90eee856
  41fa6d:	ins    DWORD PTR es:[edi],dx
  41fa6e:	xchg   esi,eax
  41fa6f:	pusha  
  41fa70:	or     ch,ah
  41fa72:	lods   al,BYTE PTR ds:[esi]
  41fa73:	(bad)  
  41fa74:	pusha  
  41fa75:	dec    ecx
  41fa76:	xchg   ebp,eax
  41fa77:	and    BYTE PTR [ebx],ah
  41fa79:	jo     0x41fa97
  41fa7b:	and    al,0x8
  41fa7d:	and    BYTE PTR [eax-0x3dd93a0],dh
  41fa83:	repz mov cl,0x4d
  41fa86:	sub    eax,0x789ccf5
  41fa8b:	mov    eax,ds:0xc1036244
  41fa90:	mov    al,0xb1
  41fa92:	dec    ebx
  41fa93:	mov    bl,0x16
  41fa95:	jp     0x41fa2f
  41fa97:	test   BYTE PTR ds:0x5ca27db8,ah
  41fa9d:	mov    WORD PTR [edi+0x36],ss
  41faa0:	or     ecx,0x0
  41faa3:	lods   eax,DWORD PTR ds:[esi]
  41faa4:	mov    eax,0xb7c17f5f
  41faa9:	cmp    BYTE PTR [ebp-0x7debab3b],cl
  41faaf:	jb     0x41faac
  41fab1:	push   esp
  41fab2:	dec    esi
  41fab3:	xor    bl,BYTE PTR [ebx+ebx*8+0x56]
  41fab7:	out    dx,eax
  41fab8:	lds    ebp,FWORD PTR ds:0xb3802fcd
  41fabe:	and    eax,0x11947ad4
  41fac3:	fisubr WORD PTR ds:0x7041e665
  41fac9:	das    
  41faca:	fnstenv [ecx+0x59]
  41facd:	mov    eax,ds:0x70eab12
  41fad2:	push   ds
  41fad3:	sbb    al,al
  41fad5:	dec    esi
  41fad6:	mov    edx,0x90a27535
  41fadb:	mov    ch,BYTE PTR [eax+ebx*2+0x20d1000b]
  41fae2:	mov    ds:0xbe4d04a1,eax
  41fae7:	les    eax,FWORD PTR [ebp-0x1e41f1f]
  41faed:	and    dl,cl
  41faef:	loopne 0x41fb10
  41faf1:	xchg   edx,eax
  41faf2:	sub    DWORD PTR [esi+eiz*4],ebp
  41faf5:	dec    ecx
  41faf6:	sub    BYTE PTR [edx],dh
  41faf8:	pop    es
  41faf9:	sbb    DWORD PTR [edi-0x75],esi
  41fafc:	loope  0x41fb10
  41fafe:	rcr    BYTE PTR [eax-0x160f8fd0],1
  41fb04:	fmul   st(6),st
  41fb06:	jecxz  0x41fb53
  41fb08:	fistp  DWORD PTR [edx+0x5a6cb07a]
  41fb0e:	sub    esi,esp
  41fb10:	sub    edx,DWORD PTR [edx+edi*8-0x13e29fe7]
  41fb17:	or     BYTE PTR [ebp+0x141a6254],ch
  41fb1d:	(bad)  
  41fb1e:	mov    bl,0x36
  41fb20:	repz ror edi,cl
  41fb23:	inc    edx
  41fb24:	mov    bl,0x5b
  41fb26:	fdivr  st(7),st
  41fb28:	cmp    bl,BYTE PTR [ebx-0x80]
  41fb2b:	sub    al,0x3c
  41fb2d:	inc    edx
  41fb2e:	test   al,0x13
  41fb30:	cmp    al,0x65
  41fb32:	jb     0x41fb0c
  41fb34:	push   0xd42bbd4a
  41fb39:	dec    esp
  41fb3a:	mov    cl,0x70
  41fb3c:	es adc eax,0xf36b9236
  41fb42:	jg     0x41fadc
  41fb44:	jo     0x41facf
  41fb46:	mov    ebx,0xe2cda090
  41fb4b:	xor    eax,0xceb27e95
  41fb50:	not    BYTE PTR [eax]
  41fb52:	mov    ?,WORD PTR [ebx]
  41fb54:	mov    al,0xff
  41fb56:	(bad)  
  41fb57:	dec    esi
  41fb58:	scas   al,BYTE PTR es:[edi]
  41fb59:	addr16 dec esp
  41fb5b:	add    al,0x63
  41fb5d:	sbb    BYTE PTR [ebx+0x64],bl
  41fb60:	add    BYTE PTR [ebp+0x18],al
  41fb63:	push   ecx
  41fb64:	adc    BYTE PTR [eax+0x680e735b],dh
  41fb6a:	gs sti 
  41fb6c:	fld    DWORD PTR [ebx+0x50]
  41fb6f:	(bad)  
  41fb70:	fmul   QWORD PTR [edi+0x78]
  41fb73:	xor    al,0x71
  41fb75:	inc    esi
  41fb76:	xchg   esp,eax
  41fb77:	ds pop eax
  41fb79:	adc    esi,DWORD PTR [edx+0x4f]
  41fb7c:	fsubr  st(2),st
  41fb7e:	or     ebx,DWORD PTR [esi-0x55d6ffb7]
  41fb84:	into   
  41fb85:	test   BYTE PTR [ecx],ah
  41fb87:	(bad)  
  41fb88:	jle    0x41fb7a
  41fb8a:	retf   
  41fb8b:	stos   DWORD PTR es:[edi],eax
  41fb8c:	leave  
  41fb8d:	sbb    BYTE PTR [ecx],bh
  41fb8f:	outs   dx,BYTE PTR ds:[esi]
  41fb90:	fsubrp st(4),st
  41fb92:	sub    al,0xe7
  41fb94:	sbb    esi,DWORD PTR [ebp-0x5f4bee7c]
  41fb9a:	pop    eax
  41fb9b:	int3   
  41fb9c:	gs pop esp
  41fb9e:	test   eax,edi
  41fba0:	adc    DWORD PTR [ecx-0x5f],esp
  41fba3:	ret    
  41fba4:	test   eax,0xbd742f1b
  41fba9:	xchg   DWORD PTR [edx],ecx
  41fbab:	aaa    
  41fbac:	std    
  41fbad:	fadd   DWORD PTR [ebx+0x79]
  41fbb0:	imul   bh
  41fbb2:	mov    al,ds:0x56341f93
  41fbb7:	gs inc esp
  41fbb9:	dec    ebx
  41fbba:	push   0x7339a49
  41fbbf:	xor    dl,BYTE PTR [edi+0x5fcb5127]
  41fbc5:	icebp  
  41fbc6:	or     al,0x68
  41fbc8:	cmp    eax,0x77fb7446
  41fbcd:	mov    al,0xf9
  41fbcf:	inc    ebp
  41fbd0:	(bad)  
  41fbd1:	pushf  
  41fbd2:	scas   al,BYTE PTR es:[edi]
  41fbd3:	mov    ds:0x8b92548b,eax
  41fbd8:	add    esp,DWORD PTR [ebp-0x47b3f662]
  41fbde:	inc    esp
  41fbdf:	sbb    eax,0x4224c642
  41fbe4:	stos   BYTE PTR es:[edi],al
  41fbe5:	mov    ds:0xd34f26c6,eax
  41fbea:	inc    ebp
  41fbeb:	enter  0x6fd4,0x6b
  41fbef:	(bad)  
  41fbf0:	sbb    ebp,ecx
  41fbf2:	out    dx,eax
  41fbf3:	es enter 0x97e2,0x6c
  41fbf8:	mov    DWORD PTR [edi],eax
  41fbfa:	sub    edi,DWORD PTR [ecx+0x8]
  41fbfd:	ret    
  41fbfe:	(bad)  
  41fbff:	div    ch
  41fc01:	push   es
  41fc02:	clc    
  41fc03:	sbb    BYTE PTR [esi+0x6c],cl
  41fc06:	push   ebx
  41fc07:	pop    edi
  41fc08:	dec    esp
  41fc09:	pop    es
  41fc0a:	sar    BYTE PTR [ecx+0x2c],cl
  41fc0d:	inc    esi
  41fc0e:	jmp    0x9701:0xe47b6916
  41fc15:	(bad)  [edx-0x681fb263]
  41fc1b:	push   esp
  41fc1c:	repz or cl,al
  41fc1f:	jae    0x41fc11
  41fc21:	or     DWORD PTR [ecx-0xe46dda7],ecx
  41fc27:	sbb    al,0x2f
  41fc29:	adc    BYTE PTR [ecx+0x23],ah
  41fc2c:	pop    esi
  41fc2d:	pop    esi
  41fc2e:	test   DWORD PTR [edi-0x49],0xad22350b
  41fc35:	pop    ds
  41fc36:	inc    ebx
  41fc37:	or     al,0xff
  41fc39:	xchg   BYTE PTR [eax],dh
  41fc3b:	mov    edx,0x68c8edb6
  41fc40:	mov    al,0xb3
  41fc42:	mov    cl,0x60
  41fc44:	adc    BYTE PTR [ecx],ch
  41fc46:	jne    0x41fcb8
  41fc48:	inc    eax
  41fc49:	adc    edi,DWORD PTR [bx+di-0x46ed]
  41fc4e:	cmp    BYTE PTR ds:[edx+0x32],0xe4
  41fc53:	pop    edx
  41fc54:	sbb    cl,BYTE PTR [esi+0x39]
  41fc57:	(bad)  
  41fc58:	xchg   edi,eax
  41fc59:	into   
  41fc5a:	ret    
  41fc5b:	dec    ebp
  41fc5c:	bound  edi,QWORD PTR [esi]
  41fc5e:	fdiv   DWORD PTR [edi+ebx*2-0x38dbf4f3]
  41fc65:	push   esp
  41fc66:	hlt    
  41fc67:	aaa    
  41fc68:	sbb    dh,BYTE PTR [eax]
  41fc6a:	or     eax,0x50c5d2ba
  41fc6f:	cmp    al,0x36
  41fc71:	jp     0x41fc44
  41fc73:	rol    DWORD PTR [eax+0x2299e725],0x7a
  41fc7a:	mov    ds:0x7cae22c6,eax
  41fc7f:	cdq    
  41fc80:	data16 repnz cmc 
  41fc83:	push   esi
  41fc84:	enter  0xbc20,0xb5
  41fc88:	xchg   esi,eax
  41fc89:	ja     0x41fd02
  41fc8b:	mov    dl,0x9e
  41fc8d:	mov    ecx,0xbb859165
  41fc92:	lahf   
  41fc93:	xchg   esp,eax
  41fc94:	fsincos 
  41fc96:	dec    edx
  41fc97:	jb     0x41fc88
  41fc99:	es jmp 0xd017b6ed
  41fc9f:	adc    eax,0x34166b5a
  41fca4:	cmp    edx,ecx
  41fca6:	sub    cl,al
  41fca8:	ss mov edi,ebx
  41fcab:	jae    0x41fcf7
  41fcad:	jno    0x41fc4a
  41fcaf:	and    BYTE PTR [ecx-0x78b2f59d],bl
  41fcb5:	cld    
  41fcb6:	mov    ebp,0x24d16cb1
  41fcbb:	sahf   
  41fcbc:	xchg   edx,eax
  41fcbd:	test   BYTE PTR cs:[ecx-0x71],dh
  41fcc1:	adc    eax,ebp
  41fcc3:	repz mov WORD PTR [ebx-0x7e],ss
  41fcc7:	jns    0x41fc4d
  41fcc9:	push   ds
  41fcca:	aaa    
  41fccb:	addr16 inc edi
  41fccd:	mov    bl,0xeb
  41fccf:	gs mov edx,0x643e1d69
  41fcd5:	aas    
  41fcd6:	jne    0x41fd09
  41fcd8:	pop    ss
  41fcd9:	mov    bh,0x47
  41fcdb:	fadd   st(1),st
  41fcdd:	pop    edi
  41fcde:	gs adc eax,0x7585f436
  41fce4:	test   eax,0x4cfa87fc
  41fce9:	arpl   WORD PTR ds:0x24c54c76,bp
  41fcef:	test   eax,0xa40887b9
  41fcf4:	push   ebp
  41fcf5:	cmp    dl,bh
  41fcf7:	mov    eax,0x422c8854
  41fcfc:	mov    ecx,0x70532d4f
  41fd01:	int3   
  41fd02:	or     BYTE PTR [edx-0x30],0x48
  41fd06:	add    edx,esp
  41fd08:	mov    bh,0x59
  41fd0a:	lea    esi,[eax+0x4e]
  41fd0d:	and    ebp,DWORD PTR [eax-0x1ede3d98]
  41fd13:	fsub   DWORD PTR [ecx]
  41fd15:	mov    bh,0x20
  41fd17:	add    edi,edx
  41fd19:	mov    ebx,?
  41fd1b:	iret   
  41fd1c:	imul   edi,DWORD PTR [edi],0x2
  41fd1f:	sub    BYTE PTR [ebp+0x17c83575],0xdf
  41fd26:	adc    eax,0x6292ff96
  41fd2b:	js     0x41fd62
  41fd2d:	push   esi
  41fd2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd2f:	dec    edx
  41fd30:	(bad)  
  41fd32:	or     bl,BYTE PTR [esi]
  41fd34:	lds    ebx,FWORD PTR [eax-0x80]
  41fd37:	push   eax
  41fd38:	xchg   edi,eax
  41fd39:	push   edi
  41fd3a:	fcomp  st(7)
  41fd3c:	adc    dh,cl
  41fd3e:	pop    es
  41fd3f:	mov    ebx,fs
  41fd41:	mov    esi,0x24e37d73
  41fd46:	xchg   esi,eax
  41fd47:	nop
  41fd48:	or     eax,0x38e538b8
  41fd4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd4e:	inc    ecx
  41fd4f:	test   eax,0xf3c4659e
  41fd54:	pop    ebp
  41fd55:	mov    cs,esp
  41fd57:	inc    esi
  41fd58:	fcomp  DWORD PTR [ebx]
  41fd5a:	mov    edx,DWORD PTR [eax]
  41fd5c:	in     al,dx
  41fd5d:	add    dh,BYTE PTR [edi+0x10]
  41fd60:	jmp    0xa78a6be2
  41fd65:	(bad)  
  41fd66:	dec    DWORD PTR [eax]
  41fd68:	xor    eax,0xdcae56a
  41fd6d:	and    al,0xb1
  41fd6f:	aad    0xf
  41fd71:	pop    edi
  41fd72:	push   es
  41fd73:	mov    ecx,0x28544bf0
  41fd78:	fsubr  st(1),st
  41fd7a:	pop    edx
  41fd7b:	cmp    eax,0x32e28be2
  41fd80:	call   0x424:0x8d6b6c81
  41fd87:	aad    0x1f
  41fd89:	in     eax,dx
  41fd8a:	test   eax,0xb90058f3
  41fd8f:	push   edx
  41fd90:	test   eax,0xfb5c0f0f
  41fd95:	shl    BYTE PTR [edx-0x3c459f92],1
  41fd9b:	mov    eax,ds:0x820a30ad
  41fda0:	iretw  
  41fda2:	mov    edi,0xdc93a52
  41fda7:	fdiv   DWORD PTR [ebx+0x39fabf6c]
  41fdad:	arpl   dx,si
  41fdaf:	in     al,0xed
  41fdb1:	jb     0x41fdc2
  41fdb3:	call   0x465e:0x2a2accca
  41fdba:	mov    ebx,0x62acb82b
  41fdbf:	fwait
  41fdc0:	cli    
  41fdc1:	pop    es
  41fdc2:	in     al,dx
  41fdc3:	or     eax,0xde4ebd81
  41fdc8:	push   edi
  41fdc9:	mov    eax,ds:0x77a41413
  41fdce:	js     0x41fdae
  41fdd0:	cmp    ecx,DWORD PTR [esp+edi*4-0x6]
  41fdd4:	mov    al,0xd8
  41fdd6:	push   edi
  41fdd7:	retf   
  41fdd8:	sbb    DWORD PTR ds:0xc496272c,edi
  41fdde:	rcr    DWORD PTR [edi-0x790e66c0],cl
  41fde4:	push   eax
  41fde5:	iret   
  41fde6:	mov    edx,0x5aaa33f9
  41fdeb:	es inc eax
  41fded:	mov    BYTE PTR [ebp-0x1a2a296a],al
  41fdf3:	loope  0x41fe3b
  41fdf5:	jo     0x41fe00
  41fdf7:	pop    ss
  41fdf8:	pop    edx
  41fdf9:	jge    0x41fddf
  41fdfb:	fiadd  DWORD PTR [eax-0x25]
  41fdfe:	push   eax
  41fdff:	in     al,dx
  41fe00:	(bad)
  41fe03:	outs   dx,BYTE PTR ds:[esi]
  41fe04:	ficomp WORD PTR [ebp+ebp*4+0x3434ae1d]
  41fe0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe0c:	lock pusha 
  41fe0e:	in     al,0x7
  41fe10:	add    DWORD PTR ds:0x476898de,ebp
  41fe16:	and    al,0x0
  41fe18:	cmp    al,0x6b
  41fe1a:	inc    esi
  41fe1b:	xor    ecx,DWORD PTR [ecx-0x5a79f25b]
  41fe21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe22:	mov    esi,0x18758e09
  41fe27:	xchg   edx,eax
  41fe28:	fadd   QWORD PTR [edx]
  41fe2a:	jecxz  0x41fe7c
  41fe2c:	push   ebp
  41fe2d:	shl    DWORD PTR cs:[edi+0x4b],cl
  41fe31:	mov    ecx,0xb3552198
  41fe36:	jne    0x41fde4
  41fe38:	std    
  41fe39:	je     0x41fe7b
  41fe3b:	bound  esi,QWORD PTR [ebp+0x4a]
  41fe3e:	pop    esi
  41fe3f:	xlat   BYTE PTR ds:[ebx]
  41fe40:	sub    al,0xe7
  41fe42:	xor    al,0xb3
  41fe44:	lods   eax,DWORD PTR ds:[esi]
  41fe45:	and    dh,BYTE PTR fs:[ebx+0x7f]
  41fe49:	scas   al,BYTE PTR es:[edi]
  41fe4a:	or     ah,BYTE PTR [esi+0x0]
  41fe4d:	adc    ah,cl
  41fe4f:	mov    WORD PTR [esi],es
  41fe51:	mov    ds:0x88940b30,al
  41fe56:	cmc    
  41fe57:	iret   
  41fe58:	jl     0x41fe01
  41fe5a:	rol    DWORD PTR [eax+0x2b],1
  41fe5d:	hlt    
  41fe5e:	ret    
  41fe5f:	in     eax,dx
  41fe60:	sub    ebp,DWORD PTR [ebx+edi*8-0x1a13dc57]
  41fe67:	sbb    DWORD PTR [edx],0xffffffdd
  41fe6a:	adc    DWORD PTR [edi],ecx
  41fe6c:	cmp    eax,0xda0b774f
  41fe71:	pop    edx
  41fe72:	or     DWORD PTR [ecx+edi*4-0x7],0xffffffcf
  41fe77:	aas    
  41fe78:	mov    al,0x62
  41fe7a:	push   ds
  41fe7b:	pop    ds
  41fe7c:	xor    DWORD PTR [edx+0x22],ecx
  41fe7f:	inc    ecx
  41fe80:	inc    esi
  41fe81:	outs   dx,BYTE PTR ds:[esi]
  41fe82:	xchg   esp,eax
  41fe83:	mov    al,ds:0x3c781a55
  41fe88:	les    esp,FWORD PTR [edi+0x274c7619]
  41fe8e:	popf   
  41fe8f:	gs and dl,dl
  41fe92:	lods   al,BYTE PTR ds:[esi]
  41fe93:	out    dx,eax
  41fe94:	mov    cl,0xd3
  41fe96:	cmp    ebx,esi
  41fe98:	pop    ebp
  41fe99:	cmp    cl,dl
  41fe9b:	mov    bh,0x51
  41fe9d:	in     al,dx
  41fe9e:	stos   BYTE PTR es:[edi],al
  41fe9f:	or     bh,BYTE PTR [edx-0x41]
  41fea2:	ret    0xe786
  41fea5:	mov    ?,WORD PTR [edi-0x4dcedda1]
  41feab:	dec    eax
  41feac:	stc    
  41fead:	xor    al,0xcb
  41feaf:	and    DWORD PTR [ebp+0x29e5dde1],ebp
  41feb5:	and    DWORD PTR [ebp+0x7a79f517],eax
  41febb:	adc    DWORD PTR [esi],esp
  41febd:	fistp  QWORD PTR [edi-0x59]
  41fec0:	jp     0x41feb0
  41fec2:	pop    ss
  41fec3:	bound  edi,QWORD PTR [ecx+0x5092a1f3]
  41fec9:	lods   al,BYTE PTR ds:[esi]
  41feca:	xchg   ebp,eax
  41fecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fecc:	nop
  41fecd:	add    dh,BYTE PTR [esi-0xe1fcf21]
  41fed3:	dec    eax
  41fed4:	sbb    al,0x7
  41fed6:	push   0x7ad5f9ba
  41fedb:	scas   eax,DWORD PTR es:[edi]
  41fedc:	dec    eax
  41fedd:	hlt    
  41fede:	cld    
  41fedf:	cli    
  41fee0:	test   al,0x6f
  41fee3:	mov    ch,0xdf
  41fee5:	xor    DWORD PTR [ebp-0x5b],edx
  41fee8:	pop    es
  41fee9:	cmp    DWORD PTR [ebp-0x65c6931b],eax
  41feef:	adc    esp,ecx
  41fef1:	and    al,0xec
  41fef3:	test   dl,dh
  41fef5:	mov    ch,0x39
  41fef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fef8:	ins    DWORD PTR es:[edi],dx
  41fef9:	sub    bl,ch
  41fefb:	mov    ds:0x6248b301,eax
  41ff00:	cmp    ah,bh
  41ff02:	and    edi,DWORD PTR [ebx+0x3d7a9816]
  41ff08:	test   DWORD PTR [ebx+esi*4+0x34366dab],0x26117b6c
  41ff13:	es fs call 0x491c:0x3b6a80ab
  41ff1c:	mov    ds:0xe1298d7,eax
  41ff21:	sub    eax,0x3f1e2c9c
  41ff26:	xor    esi,eax
  41ff28:	inc    ecx
  41ff29:	or     eax,0x11664d12
  41ff2e:	into   
  41ff2f:	cmp    ebx,eax
  41ff31:	test   eax,0x73477e77
  41ff36:	mov    esi,DWORD PTR [ebx-0x18]
  41ff39:	or     dl,BYTE PTR [eax+0x4f]
  41ff3c:	pusha  
  41ff3d:	mov    dl,BYTE PTR [ebx]
  41ff3f:	mov    ebx,0x3c7a6ea6
  41ff44:	dec    eax
  41ff45:	push   eax
  41ff46:	shl    BYTE PTR [ebp-0x5f],0x9d
  41ff4a:	addr16 sub al,0x9
  41ff4d:	lock push ebx
  41ff4f:	add    ebp,ebx
  41ff51:	and    al,0x54
  41ff53:	dec    edx
  41ff54:	(bad)  
  41ff55:	popf   
  41ff56:	das    
  41ff57:	retf   
  41ff58:	mov    edi,DWORD PTR [esi-0x4e084be6]
  41ff5e:	mov    bh,0x59
  41ff60:	xchg   ebx,eax
  41ff61:	in     eax,dx
  41ff62:	mov    ebp,0x949e61f1
  41ff67:	sbb    al,0x26
  41ff69:	into   
  41ff6a:	je     0x41ff7d
  41ff6c:	sub    ebx,0xffffffcf
  41ff6f:	and    BYTE PTR [edi-0x68e79aa5],al
  41ff75:	push   ebx
  41ff76:	sub    dl,dl
  41ff78:	lods   al,BYTE PTR ds:[esi]
  41ff79:	adc    ebx,DWORD PTR [ebp-0x2]
  41ff7c:	push   cs
  41ff7d:	test   al,0x7d
  41ff7f:	add    BYTE PTR [ecx-0x68],ch
  41ff82:	push   edx
  41ff83:	jb     0x41fffb
  41ff85:	sbb    DWORD PTR [edx+esi*2-0x18],0xf
  41ff8a:	in     al,dx
  41ff8b:	fwait
  41ff8c:	and    eax,0x636e524a
  41ff91:	fidiv  DWORD PTR ds:0x3a363ae2
  41ff97:	dec    edx
  41ff98:	adc    edi,esi
  41ff9a:	push   0xf3acccfb
  41ff9f:	push   eax
  41ffa0:	int3   
  41ffa1:	push   edi
  41ffa2:	xchg   esi,eax
  41ffa3:	test   al,0x9f
  41ffa5:	adc    ah,BYTE PTR [ecx-0x69018e18]
  41ffab:	test   al,0x4
  41ffad:	ins    BYTE PTR es:[edi],dx
  41ffae:	gs in  al,0x87
  41ffb1:	mov    DWORD PTR [edx+0x113575ee],edx
  41ffb7:	dec    esi
  41ffb8:	ret    0xa46a
  41ffbb:	adc    BYTE PTR ds:0xd0417652,ch
  41ffc1:	push   ecx
  41ffc2:	cmc    
  41ffc3:	ds xchg ebp,eax
  41ffc5:	test   al,0x7d
  41ffc7:	aam    0xf2
  41ffc9:	je     0x41ffbe
  41ffcb:	fstp   DWORD PTR [edi-0x2a]
  41ffce:	push   ecx
  41ffcf:	ds jg  0x420025
  41ffd2:	sbb    DWORD PTR [eax+0x6f8eae9c],esi
  41ffd8:	mov    ebx,0x3c7e94f2
  41ffdd:	(bad)
  41ffe1:	pusha  
  41ffe2:	pushf  
  41ffe3:	mov    ecx,fs
  41ffe5:	xor    DWORD PTR [eax],ebx
  41ffe7:	sub    edi,DWORD PTR [ecx+0x571bf7e2]
  41ffed:	jmp    0x8d041cf
  41fff2:	std    
  41fff3:	hlt    
  41fff4:	loopne 0x420024
  41fff6:	pushf  
  41fff7:	jl     0x41ff92
  41fff9:	jmp    0x9aaef9c1
  41fffe:	mov    ds:0x17e1b596,eax
  420003:	shl    BYTE PTR [edx+0x19],cl
  420006:	dec    edi
  420007:	pop    ebx
  420008:	sbb    BYTE PTR [edi-0x45],dl
  42000b:	aaa    
  42000c:	inc    al
  42000e:	xchg   esp,eax
  42000f:	xor    BYTE PTR [edx-0x80],dh
  420012:	cld    
  420013:	cs jecxz 0x420039
  420016:	sub    al,0x6c
  420018:	jo     0x420082
  42001a:	or     ch,ch
  42001c:	pop    ds
  42001d:	pop    dx
  42001f:	mov    BYTE PTR [esi],dl
  420021:	sub    BYTE PTR [ebp+0x32efa09d],ah
  420027:	call   0xef55819d
  42002c:	xor    dl,BYTE PTR [ebx-0x56]
  42002f:	sub    bl,BYTE PTR [ecx+eax*4+0x4]
  420033:	cdq    
  420034:	je     0x420075
  420036:	push   0xfffffff0
  420038:	bound  ebx,QWORD PTR [esi-0xa]
  42003b:	pop    edx
  42003c:	mov    ds,WORD PTR ds:[edi+0x23c708d]
  420043:	mov    al,0xc8
  420045:	mov    BYTE PTR [ebx+0x6d5e2fcc],cl
  42004b:	stos   BYTE PTR es:[edi],al
  42004c:	cmp    dl,BYTE PTR [esi]
  42004e:	ss ret 0x5f8d
  420052:	inc    edi
  420053:	mov    BYTE PTR [esi],0xa2
  420056:	mov    esp,0xb92aaade
  42005b:	clc    
  42005c:	dec    ebp
  42005d:	ds out 0xea,eax
  420060:	jmp    0x97e0:0xcf76b1d9
  420067:	xor    eax,0x586c0672
  42006c:	pop    ebp
  42006d:	bound  esi,QWORD PTR [esi+0x2654062e]
  420073:	sbb    edi,edi
  420075:	xchg   edx,eax
  420076:	outs   dx,BYTE PTR es:[esi]
  420078:	inc    ebx
  420079:	les    eax,FWORD PTR [ebp-0x42f238fb]
  42007f:	imul   ecx,ecx,0x3b
  420082:	(bad)  
  420083:	ret    
  420084:	or     al,0x12
  420086:	clc    
  420087:	rcl    BYTE PTR [edx],0x8c
  42008a:	dec    ebx
  42008b:	inc    edi
  42008c:	pop    eax
  42008d:	mov    esi,0xc39ab81b
  420093:	addr16 dec ecx
  420095:	jge    0x4200af
  420097:	jp     0x420106
  420099:	or     eax,0xebc84898
  42009e:	and    al,0xde
  4200a0:	sbb    BYTE PTR [ebx+0x71],dl
  4200a3:	fsub   QWORD PTR [ecx+0x6d2bff61]
  4200a9:	and    al,0x22
  4200ab:	jmp    0x420050
  4200ad:	push   edi
  4200ae:	sub    edi,edx
  4200b0:	(bad)  
  4200b1:	nop
  4200b2:	fbld   TBYTE PTR [ecx+ebx*4]
  4200b5:	xchg   ebx,eax
  4200b6:	pop    edi
  4200b7:	pop    esp
  4200b8:	push   eax
  4200b9:	imul   ecx,DWORD PTR [ecx+ecx*2],0x5b7cc196
  4200c0:	(bad)  
  4200c1:	call   0x26e1:0x71f15aa2
  4200c8:	aam    0x40
  4200ca:	push   edx
  4200cb:	hlt    
  4200cc:	and    eax,0xd468b93f
  4200d1:	push   esp
  4200d2:	inc    ebx
  4200d3:	scas   al,BYTE PTR es:[edi]
  4200d4:	mov    ds:0x4704d85d,al
  4200d9:	jp     0x4200b7
  4200db:	sbb    eax,0x19f3b111
  4200e0:	mov    eax,ds:0x5c47e824
  4200e5:	rcl    BYTE PTR [eax],0x4f
  4200e8:	shl    DWORD PTR [eax],0xf2
  4200eb:	xor    eax,0xbb219ba4
  4200f0:	sbb    eax,0x67fce2a0
  4200f5:	jg     0x42008e
  4200f7:	popf   
  4200f8:	mov    ch,0x83
  4200fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200fb:	jl     0x420101
  4200fd:	hlt    
  4200fe:	xchg   edi,eax
  4200ff:	sbb    dl,BYTE PTR [esi-0x670f7592]
  420105:	and    al,0xee
  420108:	xor    DWORD PTR [ecx-0x30c1aacc],esi
  42010e:	xchg   BYTE PTR [ecx],bh
  420110:	pop    ebx
  420111:	(bad)  [ebp+0x569f2c36]
  420117:	retf   0xfc02
  42011a:	xlat   BYTE PTR ds:[ebx]
  42011b:	repnz xchg ebx,eax
  42011d:	push   ss
  42011e:	fsubrp st(4),st
  420120:	aam    0xa1
  420122:	test   BYTE PTR [ecx+0x4f],al
  420125:	(bad)  
  420126:	retf   
  420127:	cmp    eax,0xc3bf4792
  42012c:	jno    0x42017e
  42012e:	aas    
  42012f:	mov    cl,0x25
  420131:	aam    0xed
  420133:	clc    
  420134:	js     0x420193
  420136:	pusha  
  420137:	ret    
  420138:	or     ah,BYTE PTR [ebx-0x8]
  42013b:	add    esi,DWORD PTR [ebp-0x5e]
  42013e:	add    edx,edx
  420140:	lahf   
  420141:	and    esp,eax
  420143:	push   esp
  420144:	push   ecx
  420145:	sub    eax,0xf57f9f71
  42014a:	outs   dx,DWORD PTR ds:[esi]
  42014b:	shr    DWORD PTR [eax+0x3ad4d8c4],1
  420151:	push   ds
  420152:	xchg   esp,eax
  420153:	dec    ebx
  420154:	scas   eax,DWORD PTR es:[edi]
  420155:	jg     0x42019e
  420157:	in     eax,dx
  420158:	mov    edi,0xc2c4cbfd
  42015d:	call   0xaeb7d718
  420162:	clc    
  420163:	jnp    0x420158
  420165:	out    0x94,al
  420167:	jo     0x420130
  420169:	jp     0x42014f
  42016b:	out    dx,al
  42016c:	mov    WORD PTR [ecx+0x473cba4b],fs
  420172:	cdq    
  420173:	inc    esi
  420174:	sahf   
  420175:	dec    edi
  420176:	add    al,0x5f
  420178:	arpl   WORD PTR [edx+ebp*1-0x5b],di
  42017c:	icebp  
  42017d:	cld    
  42017e:	stos   DWORD PTR es:[edi],eax
  42017f:	sub    eax,0xd5f0a5ce
  420184:	cmc    
  420185:	mov    edi,0xc8d4c206
  42018a:	test   eax,0x5ba20259
  42018f:	fwait
  420190:	sub    ecx,DWORD PTR [ebx-0x5b]
  420193:	pop    esi
  420194:	adc    cl,BYTE PTR [eax-0x60f05ad1]
  42019a:	daa    
  42019b:	jnp    0x420162
  42019d:	aaa    
  42019e:	loop   0x42013e
  4201a0:	scas   al,BYTE PTR es:[edi]
  4201a1:	enter  0xf8aa,0xad
  4201a5:	(bad)  
  4201a6:	gs or  eax,0x63e786b8
  4201ac:	fisub  DWORD PTR [ebp-0x44e1c7e7]
  4201b2:	aad    0x6a
  4201b4:	retf   
  4201b5:	aaa    
  4201b6:	js     0x42017b
  4201b8:	push   cs
  4201b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201ba:	jmp    0x57d:0x598981df
  4201c1:	loope  0x420178
  4201c3:	lds    edi,FWORD PTR [ebx]
  4201c5:	or     BYTE PTR [edi],bl
  4201c7:	add    DWORD PTR [ebp-0x3f],esi
  4201ca:	adc    eax,edx
  4201cc:	lods   al,BYTE PTR ds:[esi]
  4201cd:	retf   0x4ddf
  4201d0:	and    al,0x35
  4201d2:	pop    esp
  4201d3:	sti    
  4201d4:	les    eax,FWORD PTR [edi+0x35493a16]
  4201da:	dec    edi
  4201db:	out    dx,al
  4201dc:	iret   
  4201dd:	test   BYTE PTR [ebx-0x1904c2ed],ah
  4201e3:	jmp    0xa1f0:0xa875c00f
  4201ea:	xchg   BYTE PTR [esp+ecx*2-0x68efb87e],cl
  4201f1:	sbb    al,0x52
  4201f3:	test   eax,0xbcf0806b
  4201f8:	imul   eax,ecx,0x10
  4201fb:	fisttp QWORD PTR [edx+0xb]
  4201fe:	sub    BYTE PTR [ebp-0x1c],bl
  420201:	in     eax,dx
  420202:	into   
  420203:	mov    edx,DWORD PTR [ecx+0x52]
  420206:	iret   
  420207:	mov    dx,0x23e8
  42020b:	jns    0x42028a
  42020d:	nop
  42020e:	push   ecx
  42020f:	lods   eax,DWORD PTR ds:[esi]
  420210:	mov    esp,0xde47773
  420215:	xchg   esp,eax
  420216:	push   0xffffffbb
  420218:	push   0x56b67e7c
  42021d:	adc    eax,0x74a43ab5
  420222:	mov    al,0x93
  420224:	fnstcw WORD PTR [edi-0x4d]
  420227:	xchg   edx,eax
  420228:	test   al,0xdb
  42022a:	mov    WORD PTR [eax],?
  42022c:	push   ebx
  42022d:	lahf   
  42022e:	xchg   DWORD PTR [ebp-0x17cc1569],esi
  420234:	retf   
  420235:	rcl    DWORD PTR [ecx+0x2],0x79
  420239:	call   0x88285604
  42023e:	loop   0x420270
  420240:	js     0x4201e3
  420242:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420243:	dec    esi
  420244:	push   es
  420245:	xor    al,0x43
  420247:	push   es
  420248:	jg     0x4201cd
  42024a:	inc    esi
  42024b:	or     esp,DWORD PTR [edi+0x6a]
  42024e:	add    ch,BYTE PTR [ebp+0x5b]
  420251:	push   ds
  420252:	test   BYTE PTR [eax-0x67],bh
  420255:	cmc    
  420256:	pop    ecx
  420257:	adc    DWORD PTR [ebx+0x58],ecx
  42025a:	jbe    0x4202d3
  42025c:	in     eax,0x68
  42025e:	inc    edx
  42025f:	cmp    edi,DWORD PTR [ecx+0xf]
  420262:	dec    esi
  420263:	cmc    
  420264:	pop    esi
  420265:	xlat   BYTE PTR ds:[ebx]
  420266:	aad    0xbe
  420268:	icebp  
  420269:	jno    0x420268
  42026b:	dec    edi
  42026c:	test   eax,edi
  42026e:	push   ebx
  42026f:	sub    BYTE PTR [ebx+edi*4-0x3],0x62
  420274:	jp     0x4202b3
  420276:	ror    DWORD PTR [ecx-0x4747c90a],cl
  42027c:	pop    es
  42027d:	cmp    ch,BYTE PTR [edx+0x2856d8c]
  420283:	mov    ebp,0xbbaa97bd
  420288:	inc    eax
  420289:	add    BYTE PTR [ebp-0x77],dh
  42028c:	lea    ecx,[esi]
  42028e:	mov    esi,0xd699022
  420293:	and    edi,DWORD PTR [esi]
  420295:	add    ecx,DWORD PTR [esp+eax*8+0x61355d74]
  42029c:	jmp    0xe6ce:0x98bd6efc
  4202a3:	jle    0x420280
  4202a5:	addr16 mov esp,0x9b90f8a2
  4202ab:	pop    ss
  4202ac:	sbb    BYTE PTR [eax+0x52],ah
  4202af:	retf   
  4202b0:	cli    
  4202b1:	(bad)  
  4202b2:	hlt    
  4202b3:	aaa    
  4202b4:	pop    ds
  4202b5:	cpuid  
  4202b7:	lds    ebp,FWORD PTR [ebp+0x70]
  4202ba:	inc    edx
  4202bb:	mov    ah,0x87
  4202bd:	cli    
  4202be:	adc    ecx,ebx
  4202c0:	xchg   esp,eax
  4202c2:	fsubp  st(1),st
  4202c4:	pop    esi
  4202c5:	mov    WORD PTR [ecx+ebx*1-0x28],es
  4202c9:	rol    BYTE PTR [esi-0x13],cl
  4202cc:	xor    esi,DWORD PTR [eax+0x51]
  4202cf:	or     dl,BYTE PTR [edx+0x72]
  4202d2:	popf   
  4202d3:	or     DWORD PTR [edi-0x45145d14],0xffffffc4
  4202da:	int3   
  4202db:	into   
  4202dc:	mov    esp,0x4e263c6e
  4202e1:	cmp    cl,dl
  4202e3:	out    0xb6,eax
  4202e5:	xchg   edi,eax
  4202e6:	push   ebp
  4202e7:	mov    DWORD PTR [ecx+eiz*1-0x1b],ebx
  4202eb:	call   0x4625b856
  4202f0:	sbb    al,0x4d
  4202f2:	pop    esi
  4202f3:	pop    edx
  4202f4:	inc    esp
  4202f5:	stos   BYTE PTR es:[edi],al
  4202f6:	stos   BYTE PTR es:[edi],al
  4202f7:	les    esp,FWORD PTR [edx]
  4202f9:	shl    BYTE PTR [ebx],1
  4202fb:	and    edx,DWORD PTR [edx-0x2d1ed8b]
  420301:	call   0xcb3360bb
  420306:	sbb    eax,0x7f5039b2
  42030b:	jns    0x42033b
  42030d:	les    ebx,FWORD PTR [edx+0x538dac47]
  420313:	ins    BYTE PTR es:[edi],dx
  420314:	mov    ds:0x4d9c51d6,eax
  420319:	ss lock xor ebx,ecx
  42031d:	repnz imul esp,DWORD PTR [esp+edi*4-0x67],0x6c
  420323:	and    eax,0x5ca218b7
  420328:	xor    edx,DWORD PTR [ebx+ecx*4+0x20]
  42032c:	fldcw  WORD PTR [ebp+0x84a9d29]
  420332:	scas   al,BYTE PTR es:[edi]
  420333:	and    eax,0x10edbde2
  420338:	pushf  
  420339:	shl    edx,0x62
  42033c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42033d:	xchg   edi,eax
  42033e:	xor    BYTE PTR [esi-0x1742d863],al
  420344:	(bad)  
  420345:	cmp    ecx,DWORD PTR [edx]
  420347:	iret   
  420348:	aam    0x36
  42034a:	and    DWORD PTR [edx],eax
  42034c:	dec    edi
  42034d:	out    0x7f,eax
  42034f:	pusha  
  420350:	ins    DWORD PTR es:[edi],dx
  420351:	fsub   st(6),st
  420353:	xchg   ebx,eax
  420354:	cmp    DWORD PTR [esi+edi*2+0xf736a2a],esp
  42035b:	sub    ebp,DWORD PTR [ebp+0x46]
  42035e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42035f:	push   ds
  420360:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420361:	(bad)  
  420362:	and    al,0x5c
  420364:	add    BYTE PTR [edi-0x3cdaf40e],dl
  42036a:	inc    edx
  42036b:	xchg   DWORD PTR [ebp-0x68],esp
  42036e:	shr    DWORD PTR [eax+0x32],1
  420371:	(bad)  
  420372:	int    0xbd
  420374:	mov    edx,0xff7ee80f
  420379:	jecxz  0x4203be
  42037b:	inc    ebp
  42037c:	push   0x2
  42037e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42037f:	jecxz  0x420397
  420381:	push   esi
  420382:	and    BYTE PTR [edx+0x4b],al
  420385:	rcl    DWORD PTR [ebp+0x45],cl
  420388:	add    ecx,DWORD PTR ds:0x9e92d9ab
  42038e:	inc    di
  420390:	add    BYTE PTR [ebx],ch
  420392:	out    dx,al
  420393:	sbb    edi,DWORD PTR [edx-0x13161d4b]
  420399:	mov    esp,0xa06ee9a0
  42039e:	add    eax,DWORD PTR [edx+0x639f786e]
  4203a4:	mov    bh,0x13
  4203a6:	xor    eax,0x619e6d64
  4203ab:	test   ebx,edx
  4203ad:	cmp    al,BYTE PTR [eax]
  4203af:	pop    ebp
  4203b0:	xor    esp,DWORD PTR [ecx+0x3dd285f3]
  4203b6:	pop    eax
  4203b7:	pop    esp
  4203b8:	or     BYTE PTR [edx+0xf],ch
  4203bb:	xor    BYTE PTR [esi],cl
  4203bd:	arpl   WORD PTR [edx-0x35],ax
  4203c0:	xor    BYTE PTR [esi+eax*1],0x67
  4203c4:	fstp   st(5)
  4203c6:	jmp    0x9ee79a52
  4203cb:	in     al,0xa0
  4203cd:	jmp    0xff7a6b3a
  4203d2:	xchg   ebx,eax
  4203d3:	mov    ebp,ecx
  4203d5:	add    ah,BYTE PTR [ebx+eax*2]
  4203d8:	ret    
  4203d9:	sub    cl,dh
  4203db:	xor    ch,bh
  4203dd:	push   0x11dd46a7
  4203e2:	xchg   esi,eax
  4203e3:	mov    ah,0x2b
  4203e5:	xor    DWORD PTR [edi-0x38],ecx
  4203e8:	nop
  4203e9:	stc    
  4203ea:	jno    0x4203b9
  4203ec:	retf   0x42d0
  4203ef:	sti    
  4203f0:	mov    al,0x79
  4203f2:	inc    edx
  4203f3:	jae    0x4203b0
  4203f5:	call   0x94dc95d6
  4203fa:	inc    ebp
  4203fb:	pushf  
  4203fc:	sub    DWORD PTR [eax+0x24],esi
  4203ff:	fmul   DWORD PTR [eax]
  420401:	sar    BYTE PTR [ecx-0x576aaa02],1
  420407:	fimul  DWORD PTR [eax+ecx*1+0x7085528c]
  42040e:	(bad)  
  42040f:	sbb    esi,DWORD PTR [ebp+0x6df2c8f2]
  420415:	pop    edx
  420416:	add    al,0x83
  420418:	push   esp
  420419:	mov    al,0x3c
  42041b:	dec    esp
  42041c:	cs inc esi
  42041e:	frstor [ebp+0x42]
  420421:	mov    ebx,esi
  420423:	ret    
  420424:	xchg   esi,eax
  420425:	bts    DWORD PTR [ecx-0x1a9e443],esp
  42042c:	mov    BYTE PTR [ecx+0x77],ch
  42042f:	rcl    eax,1
  420431:	jl     0x4203fe
  420433:	inc    ebp
  420434:	push   ecx
  420435:	rcl    BYTE PTR [ecx+0xc381da3],0xf
  42043c:	int    0xe9
  42043e:	sbb    DWORD PTR [esi+ebp*4-0x78],ebx
  420442:	arpl   WORD PTR [ecx+0x1d],si
  420445:	fnstsw WORD PTR [esi]
  420447:	xor    al,0xa9
  420449:	push   0x33
  42044b:	mov    ds:0x3d1ae7d7,al
  420450:	dec    edx
  420451:	(bad)  
  420452:	dec    ebx
  420453:	ret    0x84b9
  420456:	jbe    0x420460
  420458:	pusha  
  420459:	fyl2xp1 
  42045b:	call   0xeefe:0xe90fa59f
  420462:	(bad)  
  420463:	idiv   DWORD PTR [ecx+ebp*2+0x19]
  420467:	jbe    0x42046b
  420469:	outs   dx,BYTE PTR ds:[esi]
  42046a:	cmp    eax,0xb47fe77e
  42046f:	enter  0xd0fb,0xb3
  420473:	push   0xe71a0032
  420478:	xor    ecx,ebp
  42047a:	mov    WORD PTR [ecx+ebx*4-0x5c],es
  42047e:	sub    esi,eax
  420480:	imul   edx,DWORD PTR [esi],0x4d
  420483:	xchg   ebx,eax
  420484:	gs sbb al,0x38
  420487:	cmp    eax,0xef0f01de
  42048c:	mov    esi,0x4647d2e4
  420491:	mov    edx,0x7ef0be38
  420496:	pop    eax
  420497:	call   0xe9c1:0xc6740bc5
  42049e:	mov    eax,0x98b6511f
  4204a3:	pushf  
  4204a4:	xor    bh,cl
  4204a6:	ds (bad) 
  4204a8:	push   0xfe59f625
  4204ad:	xchg   ebx,ebx
  4204af:	popa   
  4204b0:	push   ecx
  4204b1:	mov    cl,BYTE PTR [eax-0x329c4e35]
  4204b7:	mov    bl,0x94
  4204b9:	bound  cx,DWORD PTR [ebx-0x58]
  4204bd:	xchg   edi,eax
  4204be:	sar    BYTE PTR [esi-0x1b],0x75
  4204c2:	sub    BYTE PTR [edx],al
  4204c4:	adc    BYTE PTR [eax-0x2ac57d88],ch
  4204ca:	je     0x420508
  4204cc:	aad    0x9e
  4204ce:	sub    al,0xf2
  4204d0:	dec    ebp
  4204d1:	cmc    
  4204d2:	nop
  4204d3:	popf   
  4204d4:	or     al,0x33
  4204d6:	dec    esi
  4204d7:	adc    esi,DWORD PTR [esi]
  4204d9:	fwait
  4204da:	inc    eax
  4204db:	cmp    DWORD PTR [edx-0x5fe7e066],eax
  4204e1:	inc    esp
  4204e2:	ja     0x420548
  4204e4:	xor    bl,BYTE PTR [ebx+0x484ebd06]
  4204ea:	mov    eax,0x514007f1
  4204ef:	mov    ebx,es
  4204f1:	lfs    ecx,FWORD PTR [eax+0x6e2725a4]
  4204f8:	mov    ds:0x39add6da,eax
  4204fd:	jbe    0x4204aa
  4204ff:	pop    esp
  420500:	push   0x2523b156
  420505:	mov    esi,0x4dc348b6
  42050a:	xchg   esp,eax
  42050b:	cli    
  42050c:	and    DWORD PTR [ecx+eiz*2+0x707ae629],0x1efb807e
  420517:	sbb    al,0x89
  420519:	mov    DWORD PTR [ecx-0x74b59eee],0x5baa0fc5
  420523:	pusha  
  420524:	mov    bh,0xa
  420526:	dec    edi
  420527:	ret    0xf655
  42052a:	aam    0x91
  42052c:	test   DWORD PTR [edx-0x31],ebp
  42052f:	jae    0x4204b4
  420531:	(bad)  [eax]
  420533:	sbb    ecx,ecx
  420535:	in     eax,0xd1
  420537:	mov    ebp,0xbd7fc2a
  42053c:	dec    edi
  42053d:	js     0x420539
  42053f:	push   0x3e2cc6e5
  420544:	add    bh,0xad
  420547:	je     0x420510
  420549:	xor    eax,0x668df959
  42054e:	retf   0x2022
  420551:	pop    esp
  420552:	or     DWORD PTR [esi-0x4df3a455],ecx
  420558:	inc    ebp
  420559:	or     BYTE PTR [ecx+0x68b45844],bl
  42055f:	add    BYTE PTR [edi+esi*8+0x6742d87],ah
  420566:	inc    esp
  420567:	push   eax
  420568:	retf   
  420569:	pop    esi
  42056a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42056b:	mov    eax,0x2719d293
  420570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420571:	inc    eax
  420572:	scas   eax,DWORD PTR es:[edi]
  420573:	scas   eax,DWORD PTR es:[edi]
  420574:	call   0xbc49:0x58ec95de
  42057b:	fisttp DWORD PTR ss:[edx]
  42057e:	mov    al,ds:0xce410957
  420583:	sub    esi,edx
  420585:	lods   al,BYTE PTR ds:[esi]
  420586:	pusha  
  420587:	jmp    0x1697:0x49d32d06
  42058e:	jno    0x420518
  420590:	mov    al,0x7
  420592:	das    
  420593:	xor    DWORD PTR [eax-0x22],edi
  420596:	out    dx,eax
  420597:	mov    gs,eax
  420599:	cld    
  42059a:	sahf   
  42059b:	mov    ebp,0x48d2e3b3
  4205a0:	adc    eax,0x95b471af
  4205a5:	pop    ebx
  4205a6:	xor    BYTE PTR [eax-0x2c],bl
  4205a9:	ja     0x420572
  4205ab:	mov    ah,0x30
  4205ad:	cmp    BYTE PTR [esi*8+0x6ef59fe8],al
  4205b4:	and    esi,DWORD PTR [esi+0x57]
  4205b7:	jnp    0x420547
  4205b9:	adc    ah,bh
  4205bb:	lahf   
  4205bc:	xor    dh,BYTE PTR [ecx-0x7cf9a810]
  4205c2:	xchg   edx,eax
  4205c3:	test   eax,0x4f26bb4e
  4205c8:	call   0xc21712ba
  4205cd:	pushf  
  4205ce:	push   ecx
  4205cf:	in     al,0x9e
  4205d1:	(bad)  
  4205d2:	mov    ebx,0x1275d972
  4205d7:	add    al,0xdf
  4205d9:	mov    ds:0x4072c2b9,al
  4205de:	pop    ebx
  4205df:	inc    ebp
  4205e0:	mov    edi,0x121f48a4
  4205e5:	scas   al,BYTE PTR es:[edi]
  4205e6:	ins    BYTE PTR es:[edi],dx
  4205e7:	jnp    0x42063e
  4205e9:	or     eax,0x4ec482e6
  4205ee:	pop    edx
  4205ef:	mov    ch,0xc4
  4205f1:	clc    
  4205f2:	cld    
  4205f3:	push   ebp
  4205f4:	jmp    0x420662
  4205f6:	aas    
  4205f7:	dec    ebp
  4205f8:	sti    
  4205f9:	cmp    DWORD PTR gs:[edi-0x339fe9fe],0x100ed610
  420604:	mov    edi,ebx
  420606:	adc    BYTE PTR [ebx],dl
  420608:	in     eax,0xfc
  42060a:	push   ebp
  42060b:	jae    0x420665
  42060d:	mov    eax,ds:0xcc4f4269
  420612:	cli    
  420613:	into   
  420614:	fiadd  WORD PTR [edi-0x19]
  420617:	xor    al,0x68
  420619:	ins    BYTE PTR es:[edi],dx
  42061a:	std    
  42061b:	or     si,WORD PTR [edx+0x3c]
  42061f:	dec    edi
  420620:	lods   al,BYTE PTR ds:[esi]
  420621:	mov    bl,0xfd
  420623:	jg     0x4205dc
  420625:	cmp    eax,0xc0ab4612
  42062a:	xor    DWORD PTR [ebx-0x52],ebx
  42062d:	and    BYTE PTR [ebx-0x40],ch
  420630:	push   esp
  420631:	mov    esp,0x2c81fe90
  420636:	mov    ds:0xde090f43,eax
  42063b:	daa    
  42063c:	sti    
  42063d:	sub    BYTE PTR [ebx+esi*2-0x7],dl
  420641:	add    eax,0xc689e104
  420646:	fndisi(8087 only) 
  420648:	mov    esp,0x8aa6d4e
  42064d:	lea    ebx,[esi-0x63173817]
  420653:	mov    edi,0x929c5fea
  420658:	mov    ebx,0xf1000cc0
  42065d:	mov    eax,0xfa27948a
  420662:	push   ds
  420663:	les    esi,FWORD PTR [edi]
  420665:	bound  eax,QWORD PTR [ecx-0x75667272]
  42066b:	xor    BYTE PTR [ebx+0xed2914b],dh
  420671:	cmp    ebp,ebx
  420673:	mov    DWORD PTR [esi],ebp
  420675:	cmp    al,0xf3
  420677:	and    ah,al
  420679:	pop    ebp
  42067a:	sti    
  42067b:	dec    esi
  42067c:	fsub   DWORD PTR [edx+edx*1]
  42067f:	jp     0x420694
  420681:	jmp    0x4206cd
  420683:	xor    al,0x78
  420685:	lods   eax,DWORD PTR ds:[esi]
  420686:	into   
  420687:	sti    
  420688:	mov    dl,0xe5
  42068a:	push   ebp
  42068b:	pop    edi
  42068c:	cld    
  42068d:	adc    esi,eax
  42068f:	inc    eax
  420690:	inc    esi
  420691:	out    dx,al
  420692:	and    dl,al
  420694:	or     BYTE PTR [edi+edi*8-0x16],dh
  420698:	(bad)  
  420699:	loope  0x42065c
  42069b:	or     ah,BYTE PTR [ebp+0x22]
  42069e:	or     eax,DWORD PTR [ecx-0x792ead7d]
  4206a4:	mov    edx,0x6f29f23b
  4206a9:	loop   0x420653
  4206ab:	icebp  
  4206ac:	out    dx,eax
  4206ad:	mov    bh,dh
  4206af:	jmp    0x908c:0x318e92e4
  4206b6:	scas   eax,DWORD PTR es:[edi]
  4206b7:	mov    eax,ds:0x76a090ee
  4206bc:	push   eax
  4206bd:	mov    esi,0x772ae5c7
  4206c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206c3:	dec    ecx
  4206c4:	test   DWORD PTR ds:0x4288c142,0x11590eec
  4206ce:	outs   dx,BYTE PTR ds:[esi]
  4206cf:	outs   dx,DWORD PTR ds:[esi]
  4206d0:	inc    edx
  4206d1:	cmp    ch,cl
  4206d3:	int3   
  4206d4:	cli    
  4206d5:	addr16 out dx,al
  4206d7:	mov    dl,0xcc
  4206d9:	cwde   
  4206da:	fcmovbe st,st(5)
  4206dc:	inc    esi
  4206dd:	loope  0x420707
  4206df:	sbb    ebp,DWORD PTR [edx+0x5c1252a8]
  4206e5:	cmp    al,0x3d
  4206e7:	xor    BYTE PTR [ebx+0x624d5c3e],ah
  4206ed:	pop    edi
  4206ee:	lock jmp 0xcdce2375
  4206f4:	xchg   ebx,eax
  4206f5:	cmp    dl,BYTE PTR [ebp-0x6c382fa9]
  4206fb:	int3   
  4206fc:	mov    esp,?
  4206fe:	sar    esi,cl
  420700:	add    eax,0xd98ff798
  420705:	into   
  420706:	dec    edx
  420707:	lea    esi,[esi+0x49cc53de]
  42070d:	and    al,0x83
  42070f:	icebp  
  420710:	clc    
  420711:	cs cmp eax,0x1b781e00
  420717:	cli    
  420718:	jle    0x4206dc
  42071a:	pushf  
  42071b:	inc    esi
  42071c:	test   al,0xb6
  42071e:	aas    
  42071f:	cmp    DWORD PTR [edx-0xeae05e0],edi
  420725:	inc    ecx
  420726:	adc    esp,DWORD PTR [edi-0x62]
  420729:	sub    eax,0xbbf81c5e
  42072e:	mov    ebp,0xd8647ce6
  420733:	jmp    0x3d8c:0x39af60f4
  42073a:	mov    ax,ds:0x422ae3c0
  420740:	jecxz  0x42076c
  420742:	rcr    bh,cl
  420744:	pop    es
  420745:	iret   
  420746:	sahf   
  420747:	adc    bl,dh
  420749:	adc    esp,edx
  42074b:	or     BYTE PTR [eax+0x7b5e71e6],bh
  420751:	dec    esp
  420752:	mov    cl,0xbd
  420754:	retf   0xf6cd
  420757:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420758:	stos   BYTE PTR es:[edi],al
  420759:	xor    DWORD PTR [ebx-0x4b],0xffffffeb
  42075d:	fdivr  DWORD PTR [edx+0x33]
  420760:	inc    ecx
  420761:	push   ds
  420762:	call   0xf859:0xfa766ff5
  420769:	xchg   ebx,eax
  42076a:	iret   
  42076b:	shl    DWORD PTR [eax+0x57],1
  42076e:	push   edx
  42076f:	inc    ebx
  420770:	stos   BYTE PTR es:[edi],al
  420771:	cmp    DWORD PTR [ebx],eax
  420773:	es cmc 
  420775:	outs   dx,BYTE PTR ds:[esi]
  420776:	jne    0x420767
  420778:	in     eax,0xb7
  42077a:	xor    DWORD PTR [ebx],esi
  42077c:	not    DWORD PTR [ebp+0x4d]
  42077f:	aaa    
  420780:	retf   0x3fbf
  420783:	push   edi
  420784:	fcom   QWORD PTR [ebx+0x68613510]
  42078a:	iret   
  42078b:	and    al,0xe7
  42078d:	je     0x420728
  42078f:	add    edx,DWORD PTR [edi]
  420791:	add    eax,ecx
  420793:	mov    DWORD PTR [ebp-0x14],eax
  420796:	mov    eax,DWORD PTR [ebp-0x14]
  420799:	mov    eax,DWORD PTR [eax+0xc]
  42079c:	movsx  eax,BYTE PTR [eax+ecx*1]
  4207a0:	cdq    
  4207a1:	add    eax,ebx
  4207a3:	adc    edx,0xffffffff
  4207a6:	xor    eax,edi
  4207a8:	xor    edx,0x0
  4207ab:	cmp    eax,0x70941e1e
  4207b0:	jne    0x41e3c0
  4207b6:	cmp    edx,0xffffffff
  4207b9:	jne    0x41e3c0
  4207bf:	mov    eax,ds:0x42830b
  4207c4:	mov    eax,DWORD PTR [eax+0x198]
  4207ca:	mov    DWORD PTR [eax],ecx
  4207cc:	mov    eax,ecx
  4207ce:	jmp    0x4207f7
  4207d3:	mov    eax,DWORD PTR [ebp+0x18]
  4207d6:	cmp    eax,0xf89c85a2
  4207db:	jne    0x4207f7
  4207e1:	push   0xf89c85a3
  4207e6:	push   DWORD PTR [ebp+0x14]
  4207e9:	push   DWORD PTR [ebp+0x10]
  4207ec:	push   DWORD PTR [ebp+0xc]
  4207ef:	push   DWORD PTR [ebp+0x8]
  4207f2:	call   0x41b9fd
  4207f7:	pop    edi
  4207f8:	pop    ebx
  4207f9:	pop    esi
  4207fa:	leave  
  4207fb:	ret    0x14
  4207fe:	push   ebp
  4207ff:	mov    ebp,esp
  420801:	and    esp,0xfffffff8
  420804:	or     DWORD PTR ds:0x42918f,0x225c
  42080e:	sub    esp,0x3fc
  420814:	sbb    DWORD PTR ds:0x4291a7,0x4291f3
  42081e:	push   ebx
  42081f:	push   esi
  420820:	push   edi
  420821:	and    DWORD PTR ds:0x42915f,0x397e
  42082b:	push   0x42842f
  420830:	or     DWORD PTR ds:0x4291af,0x2ff8
  42083a:	push   0x7876867
  42083f:	or     DWORD PTR ds:0x4291b7,0x20a1
  420849:	call   DWORD PTR ds:0x42a56b
  42084f:	sub    DWORD PTR ds:0x42915f,0x5681
  420859:	mov    DWORD PTR [esp+0x30],eax
  42085d:	lea    eax,[esp+0x78]
  420861:	push   eax
  420862:	sub    DWORD PTR ds:0x42919b,0x4291d3
  42086c:	push   0x428447
  420871:	mov    DWORD PTR ds:0x4291e3,0x3a46
  42087b:	call   DWORD PTR ds:0x42a58b
  420881:	cmp    eax,0xffffffff
  420884:	je     0x42089b
  42088a:	xor    DWORD PTR ds:0x42915f,0x150a
  420894:	xor    eax,eax
  420896:	jmp    0x421b36
  42089b:	mov    esi,DWORD PTR ds:0x42a5a7
  4208a1:	xor    DWORD PTR ds:0x4291d3,0x3930
  4208ab:	push   0xf
  4208ad:	lea    eax,[esp+0x44]
  4208b1:	push   eax
  4208b2:	push   0x42845b
  4208b7:	push   0x42846f
  4208bc:	sub    DWORD PTR ds:0x42915f,0x4291d7
  4208c6:	push   0x42848f
  4208cb:	adc    DWORD PTR ds:0x429183,0x3c8a
  4208d5:	call   esi
  4208d7:	imul   eax,eax,0x300000
  4208dd:	cmp    eax,0x1b00000
  4208e2:	mov    DWORD PTR ds:0x4291bf,0x78b4
  4208ec:	jne    0x42088a
  4208f2:	or     DWORD PTR ds:0x4291b3,0x42915b
  4208fc:	lea    eax,[esp+0x1b8]
  420903:	and    DWORD PTR ds:0x42919f,0x5d3c
  42090d:	push   eax
  42090e:	add    DWORD PTR ds:0x4291e3,0x4291af
  420918:	push   0x4284cb
  42091d:	and    DWORD PTR ds:0x429153,0x42915b
  420927:	call   DWORD PTR ds:0x42a577
  42092d:	cmp    eax,0xffffffff
  420930:	jne    0x42088a
  420936:	add    DWORD PTR ds:0x42914b,0x6e9d
  420940:	mov    DWORD PTR [esp+0x30],0x0
  420948:	or     ecx,ecx
  42094a:	mov    ecx,0xf89c85a1
  42094f:	mov    DWORD PTR ds:0x4291af,0x17
  420959:	cmp    DWORD PTR ds:0x4291af,0x0
  420960:	je     0x4209b6
  420966:	cmp    DWORD PTR ds:0x4291af,0x4
  42096d:	jge    0x4209b6
  420973:	jmp    0x420988
  420978:	push   0x4280d6
  42097d:	push   0x1
  42097f:	push   DWORD PTR [ebp-0x24]
  420982:	call   DWORD PTR ds:0x42a58f
  420988:	cmp    DWORD PTR ds:0x4291af,0x5
  42098f:	jne    0x4209a2
  420995:	mov    ebx,DWORD PTR ds:0x4291af
  42099b:	dec    ebx
  42099c:	mov    DWORD PTR ds:0x4291af,ebx
  4209a2:	xor    ebx,ebx
  4209a4:	xor    ebx,DWORD PTR ds:0x4291af
  4209aa:	dec    ebx
  4209ab:	mov    DWORD PTR ds:0x4291af,ebx
  4209b1:	jmp    0x420959
  4209b6:	mov    DWORD PTR [esp+0x18],ecx
  4209ba:	add    DWORD PTR ds:0x429167,0x3918
  4209c4:	mov    DWORD PTR [esp+0xc],0xf89c85a2
  4209cc:	mov    edx,DWORD PTR ds:0x4291af
  4209d2:	or     DWORD PTR ds:0x429163,edx
  4209d8:	lea    eax,[esp+0x3c]
  4209dc:	mov    DWORD PTR [esp+0x30],eax
  4209e0:	xor    edi,edx
  4209e2:	lea    eax,[esp+0x38]
  4209e6:	sbb    edx,DWORD PTR ds:0x4291c3
  4209ec:	mov    DWORD PTR [esp+0x20],eax
  4209f0:	or     edi,0x5972
  4209f6:	mov    eax,ds:0x42830b
  4209fb:	mov    DWORD PTR ds:0x42917f,0x17
  420a05:	cmp    DWORD PTR ds:0x42917f,0x0
  420a0c:	je     0x420a43
  420a12:	cmp    DWORD PTR ds:0x42917f,0x21
  420a19:	jl     0x420a43
  420a1f:	jmp    0x420a2f
  420a24:	push   0x3972
  420a29:	call   DWORD PTR ds:0x42a593
  420a2f:	xor    edi,edi
  420a31:	add    edi,DWORD PTR ds:0x42917f
  420a37:	dec    edi
  420a38:	mov    DWORD PTR ds:0x42917f,edi
  420a3e:	jmp    0x420a05
  420a43:	mov    eax,DWORD PTR [eax+0x1c8]
  420a49:	mov    eax,DWORD PTR [eax]
  420a4b:	mov    edx,DWORD PTR [esp+0x20]
  420a4f:	mov    edi,0x75108ac
  420a54:	mov    ebx,DWORD PTR ds:0x4291db
  420a5a:	sbb    DWORD PTR ds:0x429153,ebx
  420a60:	xor    eax,edi
  420a62:	adc    DWORD PTR ds:0x4291f3,0x37f0
  420a6c:	mov    ebx,0x3272f3
  420a71:	add    DWORD PTR ds:0x4291a3,0x4291a7
  420a7b:	add    eax,ebx
  420a7d:	not    DWORD PTR ds:0x4291a3
  420a83:	mov    DWORD PTR [edx],eax
  420a85:	mov    DWORD PTR ds:0x4291cb,0x5252
  420a8f:	mov    eax,ds:0x42901f
  420a94:	cmp    eax,0x445cecf9
  420a99:	mov    DWORD PTR ds:0x4291bb,0x4b3f
  420aa3:	jne    0x420b94
  420aa9:	mov    eax,DWORD PTR [esp+0x18]
  420aad:	and    DWORD PTR ds:0x4291ab,0x0
  420ab7:	jmp    0x420acb
  420abc:	xor    edx,edx
  420abe:	add    edx,DWORD PTR ds:0x4291ab
  420ac4:	inc    edx
  420ac5:	mov    DWORD PTR ds:0x4291ab,edx
  420acb:	cmp    DWORD PTR ds:0x4291ab,0x1e
  420ad2:	jae    0x420b1c
  420ad8:	cmp    DWORD PTR ds:0x4291ab,0xe
  420adf:	jl     0x420b1c
  420ae5:	jmp    0x420afd
  420aea:	push   0x4280a5
  420aef:	push   DWORD PTR [ebp-0x1c]
  420af2:	push   0x3b7d
  420af7:	call   DWORD PTR ds:0x42a597
  420afd:	cmp    DWORD PTR ds:0x4291ab,0xd
  420b04:	jne    0x420b17
  420b0a:	mov    edx,DWORD PTR ds:0x4291ab
  420b10:	inc    edx
  420b11:	mov    DWORD PTR ds:0x4291ab,edx
  420b17:	jmp    0x420abc
  420b1c:	mov    edx,DWORD PTR ds:0x42830b
  420b22:	adc    DWORD PTR ds:0x4291b3,0x4291a7
  420b2c:	mov    edx,DWORD PTR [edx+0x198]
  420b32:	adc    DWORD PTR ds:0x4291a3,0x42918f
  420b3c:	xor    eax,edi
  420b3e:	sub    DWORD PTR ds:0x42916f,0x429197
  420b48:	add    eax,ebx
  420b4a:	add    DWORD PTR ds:0x42915f,0x42915b
  420b54:	mov    DWORD PTR [edx],eax
  420b56:	mov    eax,DWORD PTR [esp+0x18]
  420b5a:	xor    eax,edi
  420b5c:	not    DWORD PTR ds:0x4291b3
  420b62:	add    eax,ebx
  420b64:	sbb    DWORD PTR ds:0x4291eb,0x4291d3
  420b6e:	mov    ds:0x42901f,eax
  420b73:	mov    eax,DWORD PTR [esp+0x18]
  420b77:	sbb    DWORD PTR ds:0x42917b,0x42915f
  420b81:	xor    eax,edi
  420b83:	sub    DWORD PTR ds:0x429167,0x5dcc
  420b8d:	add    eax,ebx
  420b8f:	mov    ds:0x428403,eax
  420b94:	and    DWORD PTR ds:0x4291c3,0x0
  420b9e:	xor    eax,eax
  420ba0:	xor    eax,DWORD PTR ds:0x4291c3
  420ba6:	inc    eax
  420ba7:	mov    ds:0x4291c3,eax
  420bac:	cmp    DWORD PTR ds:0x4291c3,0x10
  420bb3:	jb     0x420be9
  420bb9:	jmp    0x420bc4
  420bbe:	call   DWORD PTR ds:0x42a59b
  420bc4:	cmp    DWORD PTR ds:0x4291c3,0xf
  420bcb:	jne    0x420bdc
  420bd1:	mov    eax,ds:0x4291c3
  420bd6:	inc    eax
  420bd7:	mov    ds:0x4291c3,eax
  420bdc:	cmp    DWORD PTR ds:0x4291c3,0x1a
  420be3:	jb     0x420b9e
  420be9:	mov    eax,ds:0x42830b
  420bee:	xor    DWORD PTR ds:0x4291bb,0x4291bf
  420bf8:	mov    eax,DWORD PTR [eax+0x18c]
  420bfe:	add    DWORD PTR ds:0x4291e7,0x4bf9
  420c08:	mov    eax,DWORD PTR [eax]
  420c0a:	mov    DWORD PTR [esp+0x60],eax
  420c0e:	mov    eax,0xf89c85bd
  420c13:	mov    DWORD PTR [esp+0x10],eax
  420c17:	add    DWORD PTR ds:0x429193,0x4291c7
  420c21:	mov    DWORD PTR [esp+0x10],eax
  420c25:	or     DWORD PTR ds:0x42917f,0x429187
  420c2f:	mov    DWORD PTR [esp+0x10],eax
  420c33:	mov    DWORD PTR [esp+0x10],ecx
  420c37:	dec    DWORD PTR ds:0x429167
  420c3d:	mov    DWORD PTR [esp+0x20],eax
  420c41:	and    DWORD PTR ds:0x4291d7,0x0
  420c4b:	xor    eax,eax
  420c4d:	add    eax,DWORD PTR ds:0x4291d7
  420c53:	inc    eax
  420c54:	mov    ds:0x4291d7,eax
  420c59:	cmp    DWORD PTR ds:0x4291d7,0xc
  420c60:	jge    0x420ca3
  420c66:	jmp    0x420c7b
  420c6b:	push   0x4291a7
  420c70:	push   0x4280a5
  420c75:	call   DWORD PTR ds:0x42a59f
  420c7b:	cmp    DWORD PTR ds:0x4291d7,0xb
  420c82:	jne    0x420c96
  420c88:	xor    eax,eax
  420c8a:	xor    eax,DWORD PTR ds:0x4291d7
  420c90:	inc    eax
  420c91:	mov    ds:0x4291d7,eax
  420c96:	cmp    DWORD PTR ds:0x4291d7,0x18
  420c9d:	jb     0x420c4b
  420ca3:	mov    DWORD PTR [esp+0x20],0xf89c85b9
  420cab:	sbb    eax,0x733e
  420cb0:	mov    eax,DWORD PTR [esp+0x18]
  420cb4:	xor    eax,edi
  420cb6:	xor    DWORD PTR ds:0x429167,0x2364
  420cc0:	add    eax,ebx
  420cc2:	jmp    0x420ea1
  420cc7:	lea    eax,[esp+0x78]
  420ccb:	sub    DWORD PTR ds:0x42918f,0x2bd1
  420cd5:	push   eax
  420cd6:	add    DWORD PTR ds:0x4291af,0x4291bb
  420ce0:	push   0x4284b7
  420ce5:	add    DWORD PTR ds:0x42916f,0x62a2
  420cef:	call   DWORD PTR ds:0x42a58b
  420cf5:	mov    DWORD PTR ds:0x4291ef,0x479f
  420cff:	cmp    eax,0xffffffff
  420d02:	jne    0x42088a
  420d08:	push   0xf
  420d0a:	lea    eax,[esp+0x44]
  420d0e:	add    DWORD PTR ds:0x42918f,0x71aa
  420d18:	push   eax
  420d19:	adc    DWORD PTR ds:0x4291bb,0x429187
  420d23:	push   0x42850b
  420d28:	push   0x42851f
  420d2d:	or     DWORD PTR ds:0x4291ef,0x259a
  420d37:	push   0x42853f
  420d3c:	call   esi
  420d3e:	imul   eax,eax,0x300000
  420d44:	mov    DWORD PTR ds:0x42914f,0x7610
  420d4e:	cmp    eax,0x1b00000
  420d53:	mov    DWORD PTR ds:0x429157,0x1024
  420d5d:	jne    0x42088a
  420d63:	sbb    DWORD PTR ds:0x4291c3,0x4291d7
  420d6d:	lea    eax,[esp+0x1b8]
  420d74:	push   eax
  420d75:	push   0x42857b
  420d7a:	sbb    DWORD PTR ds:0x42918f,0x1a84
  420d84:	call   DWORD PTR ds:0x42a577
  420d8a:	mov    DWORD PTR ds:0x4291b3,0x1d41
  420d94:	cmp    eax,0xffffffff
  420d97:	jne    0x42088a
  420d9d:	mov    eax,DWORD PTR [esp+0xc]
  420da1:	xor    ecx,DWORD PTR ds:0x42914f
  420da7:	mov    ecx,DWORD PTR [esp+0x20]
  420dab:	sbb    DWORD PTR ds:0x429197,0x5641
  420db5:	xor    eax,edi
  420db7:	sbb    DWORD PTR ds:0x4291ef,0x4291eb
  420dc1:	lea    eax,[eax+ecx*1+0x3272f3]
  420dc8:	inc    DWORD PTR ds:0x4291e7
  420dce:	push   eax
  420dcf:	add    DWORD PTR ds:0x4291b3,ebx
  420dd5:	mov    eax,DWORD PTR [esp+0x14]
  420dd9:	xor    eax,edi
  420ddb:	lea    eax,[ebp+eax*1+0x3272fb]
  420de2:	xor    DWORD PTR ds:0x429197,0x3901
  420dec:	push   eax
  420ded:	mov    DWORD PTR ds:0x429153,0x5a0a
  420df7:	mov    eax,ds:0x42830b
  420dfc:	xor    DWORD PTR ds:0x4291c3,0x2a62
  420e06:	push   DWORD PTR [eax+0x1bc]
  420e0c:	adc    DWORD PTR ds:0x429153,0x42915f
  420e16:	call   0x421b3f
  420e1b:	and    DWORD PTR ds:0x4291af,0x0
  420e25:	jmp    0x420e37
  420e2a:	mov    edx,DWORD PTR ds:0x4291af
  420e30:	inc    edx
  420e31:	mov    DWORD PTR ds:0x4291af,edx
  420e37:	cmp    DWORD PTR ds:0x4291af,0x15
  420e3e:	jae    0x420e7e
  420e44:	cmp    DWORD PTR ds:0x4291af,0xd
  420e4b:	jl     0x420e7e
  420e51:	jmp    0x420e5f
  420e56:	push   DWORD PTR [ebp-0x1c]
  420e59:	call   DWORD PTR ds:0x42a5a3
  420e5f:	cmp    DWORD PTR ds:0x4291af,0xc
  420e66:	jne    0x420e79
  420e6c:	mov    edx,DWORD PTR ds:0x4291af
  420e72:	inc    edx
  420e73:	mov    DWORD PTR ds:0x4291af,edx
  420e79:	jmp    0x420e2a
  420e7e:	mov    eax,DWORD PTR [esp+0xc]
  420e82:	mov    ecx,DWORD PTR [esp+0x20]
  420e86:	mov    edx,DWORD PTR ds:0x429167
  420e8c:	adc    DWORD PTR ds:0x4291b3,edx
  420e92:	xor    eax,edi
  420e94:	and    edx,DWORD PTR ds:0x4291b3
  420e9a:	lea    eax,[ecx+eax*1+0x3272f3]
  420ea1:	mov    ecx,DWORD PTR [esp+0xc]
  420ea5:	neg    edx
  420ea7:	mov    edx,DWORD PTR [esp+0xc]
  420eab:	or     DWORD PTR ds:0x42917b,0x429157
  420eb5:	xor    edx,edi
  420eb7:	or     DWORD PTR ds:0x4291c7,0x1707
  420ec1:	xor    ecx,edi
  420ec3:	xor    DWORD PTR ds:0x42916f,0x6f67
  420ecd:	add    ecx,edx
  420ecf:	mov    edx,DWORD PTR [esp+0xc]
  420ed3:	add    DWORD PTR ds:0x429193,0xde7
  420edd:	xor    edx,edi
  420edf:	mov    DWORD PTR ds:0x429197,0x79ec
  420ee9:	lea    ecx,[ecx+edx*1+0x9758d9]
  420ef0:	mov    DWORD PTR ds:0x42917b,0x463d
  420efa:	mov    DWORD PTR [esp+0x20],eax
  420efe:	cmp    eax,ecx
  420f00:	jbe    0x420cc7
  420f06:	xor    ecx,ecx
  420f08:	or     ecx,DWORD PTR ds:0x4291a3
  420f0e:	or     DWORD PTR ds:0x4291b3,ecx
  420f14:	mov    eax,DWORD PTR [ebp+0xc]
  420f17:	and    DWORD PTR ds:0x4291e3,0x0
  420f21:	mov    ecx,DWORD PTR ds:0x4291e3
  420f27:	inc    ecx
  420f28:	mov    DWORD PTR ds:0x4291e3,ecx
  420f2e:	cmp    DWORD PTR ds:0x4291e3,0x18
  420f35:	jge    0x420f62
  420f3b:	jmp    0x420f55
  420f40:	push   0x4291ab
  420f45:	push   0x4291db
  420f4a:	push   0x4566
  420f4f:	call   DWORD PTR ds:0x42a5ab
  420f55:	cmp    DWORD PTR ds:0x4291e3,0x17
  420f5c:	jb     0x420f21
  420f62:	mov    ds:0x42818f,eax
  420f67:	mov    eax,DWORD PTR [ebp+0x10]
  420f6a:	mov    ds:0x4283eb,eax
  420f6f:	mov    DWORD PTR ds:0x4291af,0x18
  420f79:	cmp    DWORD PTR ds:0x4291af,0x0
  420f80:	je     0x420fd1
  420f86:	cmp    DWORD PTR ds:0x4291af,0x4
  420f8d:	ja     0x420fd1
  420f93:	jmp    0x420fa3
  420f98:	push   0x82c1
  420f9d:	call   DWORD PTR ds:0x42a573
  420fa3:	cmp    DWORD PTR ds:0x4291af,0x5
  420faa:	jne    0x420fbf
  420fb0:	xor    ecx,ecx
  420fb2:	or     ecx,DWORD PTR ds:0x4291af
  420fb8:	dec    ecx
  420fb9:	mov    DWORD PTR ds:0x4291af,ecx
  420fbf:	mov    ecx,DWORD PTR ds:0x4291af
  420fc5:	dec    ecx
  420fc6:	mov    DWORD PTR ds:0x4291af,ecx
  420fcc:	jmp    0x420f79
  420fd1:	mov    eax,ds:0x42818f
  420fd6:	movzx  ecx,BYTE PTR ds:0x429183
  420fdd:	adc    DWORD PTR ds:0x4291d7,ecx
  420fe3:	mov    ecx,DWORD PTR [esp+0x30]
  420fe7:	sub    DWORD PTR ds:0x4291ab,0x2768
  420ff1:	sub    eax,ebx
  420ff3:	and    DWORD PTR ds:0x42919f,0x51d9
  420ffd:	xor    eax,edi
  420fff:	mov    DWORD PTR [ecx],eax
  421001:	lea    eax,[esp+0x2c]
  421005:	mov    DWORD PTR [esp+0x6c],eax
  421009:	xor    DWORD PTR ds:0x4291cf,0x6aa
  421013:	lea    eax,[ebp+0x4]
  421016:	sub    DWORD PTR ds:0x42915b,0x4291af
  421020:	mov    DWORD PTR [esp+0x2c],eax
  421024:	lea    eax,[esp+0x78]
  421028:	sub    DWORD PTR ds:0x429153,0x6538
  421032:	push   eax
  421033:	add    DWORD PTR ds:0x4291a3,0x4291f3
  42103d:	push   0x428567
  421042:	call   DWORD PTR ds:0x42a58b
  421048:	mov    DWORD PTR ds:0x4291e3,0x1cd6
  421052:	cmp    eax,0xffffffff
  421055:	mov    DWORD PTR ds:0x4291b7,0x32c8
  42105f:	jne    0x42088a
  421065:	push   0xf
  421067:	lea    eax,[esp+0x44]
  42106b:	xor    DWORD PTR ds:0x429193,0x42919b
  421075:	push   eax
  421076:	push   0x4285bb
  42107b:	adc    DWORD PTR ds:0x429193,0x7895
  421085:	push   0x4285cf
  42108a:	push   0x4285ef
  42108f:	call   esi
  421091:	imul   eax,eax,0x300000
  421097:	cmp    eax,0x1b00000
  42109c:	jne    0x42088a
  4210a2:	lea    eax,[esp+0x1b8]
  4210a9:	push   eax
  4210aa:	push   0x42862b
  4210af:	sub    DWORD PTR ds:0x4291bf,0x42918b
  4210b9:	call   DWORD PTR ds:0x42a577
  4210bf:	mov    DWORD PTR ds:0x429187,0x3d95
  4210c9:	cmp    eax,0xffffffff
  4210cc:	mov    DWORD PTR ds:0x42917f,0x79ad
  4210d6:	jne    0x42088a
  4210dc:	lea    eax,[esp+0x78]
  4210e0:	add    DWORD PTR ds:0x42914f,0x6022
  4210ea:	push   eax
  4210eb:	neg    DWORD PTR ds:0x42917f
  4210f1:	push   0x428617
  4210f6:	add    DWORD PTR ds:0x42917b,0x4291e7
  421100:	call   DWORD PTR ds:0x42a58b
  421106:	mov    DWORD PTR ds:0x42916f,0x4f36
  421110:	cmp    eax,0xffffffff
  421113:	mov    DWORD PTR ds:0x429197,0x71f8
  42111d:	jne    0x42088a
  421123:	xor    DWORD PTR ds:0x4291b7,0x540c
  42112d:	push   0xf
  42112f:	or     DWORD PTR ds:0x42914b,0x42916b
  421139:	lea    eax,[esp+0x44]
  42113d:	and    DWORD PTR ds:0x4291ab,0x3361
  421147:	push   eax
  421148:	sub    DWORD PTR ds:0x4291bb,0x5c7b
  421152:	push   0x42866b
  421157:	adc    DWORD PTR ds:0x4291ab,0x4291cf
  421161:	push   0x42867f
  421166:	xor    DWORD PTR ds:0x429183,0x4291b7
  421170:	push   0x42869f
  421175:	or     DWORD PTR ds:0x4291af,0x4291cf
  42117f:	call   esi
  421181:	imul   eax,eax,0x300000
  421187:	mov    DWORD PTR ds:0x429157,0x112c
  421191:	cmp    eax,0x1b00000
  421196:	jne    0x42088a
  42119c:	or     DWORD PTR ds:0x42914f,0x1a1c
  4211a6:	lea    eax,[esp+0x1b8]
  4211ad:	push   eax
  4211ae:	sub    DWORD PTR ds:0x4291eb,0xb4e
  4211b8:	push   0x4286db
  4211bd:	not    DWORD PTR ds:0x429153
  4211c3:	call   DWORD PTR ds:0x42a577
  4211c9:	mov    DWORD PTR ds:0x4291d7,0x34b9
  4211d3:	cmp    eax,0xffffffff
  4211d6:	mov    DWORD PTR ds:0x4291bb,0x68d6
  4211e0:	jne    0x42088a
  4211e6:	lea    eax,[esp+0x78]
  4211ea:	push   eax
  4211eb:	sub    DWORD PTR ds:0x4291a7,0x429183
  4211f5:	push   0x4286c7
  4211fa:	sub    DWORD PTR ds:0x42919f,0xfe
  421204:	call   DWORD PTR ds:0x42a58b
  42120a:	mov    DWORD PTR ds:0x4291a3,0x162e
  421214:	cmp    eax,0xffffffff
  421217:	jne    0x42088a
  42121d:	add    DWORD PTR ds:0x42918f,0x39d
  421227:	push   0xf
  421229:	lea    eax,[esp+0x44]
  42122d:	push   eax
  42122e:	sbb    DWORD PTR ds:0x4291df,0x4c8c
  421238:	push   0x42871b
  42123d:	push   0x42872f
  421242:	push   0x42874f
  421247:	call   esi
  421249:	sub    DWORD PTR ds:0x42914f,0x429163
  421253:	imul   eax,eax,0x300000
  421259:	mov    DWORD PTR ds:0x42918b,0x5962
  421263:	cmp    eax,0x1b00000
  421268:	jne    0x42088a
  42126e:	add    DWORD PTR ds:0x4291a3,0x4291cb
  421278:	lea    eax,[esp+0x1b8]
  42127f:	or     DWORD PTR ds:0x4291ab,0x4619
  421289:	push   eax
  42128a:	push   0x42878b
  42128f:	and    DWORD PTR ds:0x42916f,0x4291ef
  421299:	call   DWORD PTR ds:0x42a577
  42129f:	mov    DWORD PTR ds:0x4291ef,0x2004
  4212a9:	cmp    eax,0xffffffff
  4212ac:	mov    DWORD PTR ds:0x42918b,0x62c6
  4212b6:	jne    0x42088a
  4212bc:	and    DWORD PTR ds:0x4291d3,0x5eb4
  4212c6:	lea    eax,[esp+0x78]
  4212ca:	adc    DWORD PTR ds:0x42917f,0x4918
  4212d4:	push   eax
  4212d5:	or     DWORD PTR ds:0x42919b,0x429153
  4212df:	push   0x428777
  4212e4:	sbb    DWORD PTR ds:0x429197,0x429157
  4212ee:	call   DWORD PTR ds:0x42a58b
  4212f4:	mov    DWORD PTR ds:0x42914f,0x13e7
  4212fe:	cmp    eax,0xffffffff
  421301:	mov    DWORD PTR ds:0x4291cf,0xa62
  42130b:	jne    0x42088a
  421311:	xor    DWORD PTR ds:0x42915b,0x4291bb
  42131b:	push   0xf
  42131d:	lea    eax,[esp+0x44]
  421321:	or     DWORD PTR ds:0x4291b3,0x2cef
  42132b:	push   eax
  42132c:	push   0x4287cb
  421331:	push   0x4287df
  421336:	sub    DWORD PTR ds:0x4291a3,0x42918f
  421340:	push   0x4287ff
  421345:	call   esi
  421347:	imul   eax,eax,0x300000
  42134d:	mov    DWORD PTR ds:0x429193,0x43ec
  421357:	cmp    eax,0x1b00000
  42135c:	mov    DWORD PTR ds:0x4291c7,0x18cb
  421366:	jne    0x42088a
  42136c:	add    DWORD PTR ds:0x4291af,0x5057
  421376:	lea    eax,[esp+0x1b8]
  42137d:	or     DWORD PTR ds:0x4291c3,0x48df
  421387:	push   eax
  421388:	and    DWORD PTR ds:0x4291e3,0x7c0c
  421392:	push   0x42883b
  421397:	and    DWORD PTR ds:0x4291f7,0x4291d7
  4213a1:	call   DWORD PTR ds:0x42a577
  4213a7:	cmp    eax,0xffffffff
  4213aa:	jne    0x42088a
  4213b0:	or     DWORD PTR ds:0x4291cb,0x5541
  4213ba:	lea    eax,[esp+0x78]
  4213be:	sub    DWORD PTR ds:0x4291f7,0x686a
  4213c8:	push   eax
  4213c9:	xor    DWORD PTR ds:0x4291ef,0x4291eb
  4213d3:	push   0x428827
  4213d8:	add    DWORD PTR ds:0x4291bb,0x4894
  4213e2:	call   DWORD PTR ds:0x42a58b
  4213e8:	mov    DWORD PTR ds:0x42914b,0x5d36
  4213f2:	cmp    eax,0xffffffff
  4213f5:	mov    DWORD PTR ds:0x42918b,0x63d2
  4213ff:	jne    0x42088a
  421405:	adc    DWORD PTR ds:0x4291d3,0x6d
  42140f:	push   0xf
  421411:	xor    DWORD PTR ds:0x4291df,0x4291b3
  42141b:	lea    eax,[esp+0x44]
  42141f:	xor    DWORD PTR ds:0x42914f,0x245a
  421429:	push   eax
  42142a:	adc    DWORD PTR ds:0x42915f,0x29d1
  421434:	push   0x42887b
  421439:	push   0x42888f
  42143e:	sbb    DWORD PTR ds:0x42914f,0x429163
  421448:	push   0x4288af
  42144d:	adc    DWORD PTR ds:0x42917f,0x4291a3
  421457:	call   esi
  421459:	imul   eax,eax,0x300000
  42145f:	cmp    eax,0x1b00000
  421464:	jne    0x42088a
  42146a:	mov    DWORD PTR ds:0x4291cf,0x5dc8
  421474:	lea    eax,[esp+0x1b8]
  42147b:	add    DWORD PTR ds:0x42919b,0x4291ab
  421485:	push   eax
  421486:	not    DWORD PTR ds:0x429153
  42148c:	push   0x4288eb
  421491:	call   DWORD PTR ds:0x42a577
  421497:	mov    DWORD PTR ds:0x4291e7,0x183e
  4214a1:	cmp    eax,0xffffffff
  4214a4:	jne    0x42088a
  4214aa:	lea    eax,[esp+0x78]
  4214ae:	xor    DWORD PTR ds:0x4291d7,0x57b8
  4214b8:	push   eax
  4214b9:	push   0x4288d7
  4214be:	add    DWORD PTR ds:0x4291af,0x1e81
  4214c8:	call   DWORD PTR ds:0x42a58b
  4214ce:	mov    DWORD PTR ds:0x4291c3,0x328a
  4214d8:	cmp    eax,0xffffffff
  4214db:	mov    DWORD PTR ds:0x4291f7,0x13f0
  4214e5:	jne    0x42088a
  4214eb:	push   0xf
  4214ed:	lea    eax,[esp+0x44]
  4214f1:	adc    DWORD PTR ds:0x4291c3,0x429173
  4214fb:	push   eax
  4214fc:	xor    DWORD PTR ds:0x4291cf,0x725b
  421506:	push   0x42892b
  42150b:	adc    DWORD PTR ds:0x4291bb,0x39d7
  421515:	push   0x42893f
  42151a:	xor    DWORD PTR ds:0x42918b,0x4291a7
  421524:	push   0x42895f
  421529:	call   esi
  42152b:	adc    DWORD PTR ds:0x4291ab,0x4291f7
  421535:	imul   eax,eax,0x300000
  42153b:	mov    DWORD PTR ds:0x4291cf,0x3d0e
  421545:	cmp    eax,0x1b00000
  42154a:	jne    0x42088a
  421550:	lea    eax,[esp+0x1b8]
  421557:	xor    DWORD PTR ds:0x429197,0x42919f
  421561:	push   eax
  421562:	push   0x42899b
  421567:	or     DWORD PTR ds:0x42915b,0x3d87
  421571:	call   DWORD PTR ds:0x42a577
  421577:	mov    DWORD PTR ds:0x4291bf,0x3132
  421581:	cmp    eax,0xffffffff
  421584:	jne    0x42088a
  42158a:	add    DWORD PTR ds:0x4291df,0x6129
  421594:	lea    eax,[esp+0x78]
  421598:	mov    DWORD PTR ds:0x42915b,0x7683
  4215a2:	push   eax
  4215a3:	push   0x428987
  4215a8:	adc    DWORD PTR ds:0x4291d3,0x4f30
  4215b2:	call   DWORD PTR ds:0x42a58b
  4215b8:	mov    DWORD PTR ds:0x42918f,0x2474
  4215c2:	cmp    eax,0xffffffff
  4215c5:	jne    0x42088a
  4215cb:	and    DWORD PTR ds:0x4291c3,0x7c44
  4215d5:	push   0xf
  4215d7:	lea    eax,[esp+0x44]
  4215db:	push   eax
  4215dc:	push   0x4289db
  4215e1:	sub    DWORD PTR ds:0x42914f,0x6ca1
  4215eb:	push   0x4289ef
  4215f0:	sbb    DWORD PTR ds:0x42916f,0x4291cf
  4215fa:	push   0x428a0f
  4215ff:	call   esi
  421601:	xor    DWORD PTR ds:0x4291eb,0x4291a3
  42160b:	imul   eax,eax,0x300000
  421611:	mov    DWORD PTR ds:0x4291a7,0x6fd3
  42161b:	cmp    eax,0x1b00000
  421620:	mov    DWORD PTR ds:0x4291f7,0x26fc
  42162a:	jne    0x42088a
  421630:	lea    eax,[esp+0x1b8]
  421637:	push   eax
  421638:	push   0x428a4b
  42163d:	call   DWORD PTR ds:0x42a577
  421643:	cmp    eax,0xffffffff
  421646:	jne    0x42088a
  42164c:	lea    eax,[esp+0x78]
  421650:	push   eax
  421651:	push   0x428a37
  421656:	call   DWORD PTR ds:0x42a58b
  42165c:	cmp    eax,0xffffffff
  42165f:	jne    0x42088a
  421665:	push   0xf
  421667:	lea    eax,[esp+0x44]
  42166b:	push   eax
  42166c:	push   0x428a8b
  421671:	push   0x428a9f
  421676:	push   0x428abf
  42167b:	call   esi
  42167d:	imul   eax,eax,0x300000
  421683:	cmp    eax,0x1b00000
  421688:	jne    0x42088a
  42168e:	lea    eax,[esp+0x1b8]
  421695:	push   eax
  421696:	push   0x428afb
  42169b:	call   DWORD PTR ds:0x42a577
  4216a1:	cmp    eax,0xffffffff
  4216a4:	jne    0x42088a
  4216aa:	lea    eax,[esp+0x78]
  4216ae:	push   eax
  4216af:	push   0x428ae7
  4216b4:	call   DWORD PTR ds:0x42a58b
  4216ba:	cmp    eax,0xffffffff
  4216bd:	jne    0x42088a
  4216c3:	push   0xf
  4216c5:	lea    eax,[esp+0x44]
  4216c9:	push   eax
  4216ca:	push   0x428b3b
  4216cf:	push   0x428b4f
  4216d4:	push   0x428b6f
  4216d9:	call   esi
  4216db:	imul   eax,eax,0x300000
  4216e1:	cmp    eax,0x1b00000
  4216e6:	jne    0x42088a
  4216ec:	lea    eax,[esp+0x1b8]
  4216f3:	push   eax
  4216f4:	push   0x428bab
  4216f9:	call   DWORD PTR ds:0x42a577
  4216ff:	cmp    eax,0xffffffff
  421702:	jne    0x42088a
  421708:	lea    eax,[esp+0x78]
  42170c:	push   eax
  42170d:	push   0x428b97
  421712:	call   DWORD PTR ds:0x42a58b
  421718:	cmp    eax,0xffffffff
  42171b:	jne    0x42088a
  421721:	push   0xf
  421723:	lea    eax,[esp+0x44]
  421727:	push   eax
  421728:	push   0x428beb
  42172d:	push   0x428bff
  421732:	push   0x428c1f
  421737:	call   esi
  421739:	imul   eax,eax,0x300000
  42173f:	cmp    eax,0x1b00000
  421744:	jne    0x42088a
  42174a:	lea    eax,[esp+0x1b8]
  421751:	push   eax
  421752:	push   0x428c5b
  421757:	call   DWORD PTR ds:0x42a577
  42175d:	cmp    eax,0xffffffff
  421760:	jne    0x42088a
  421766:	lea    eax,[esp+0x78]
  42176a:	push   eax
  42176b:	push   0x428c47
  421770:	call   DWORD PTR ds:0x42a58b
  421776:	cmp    eax,0xffffffff
  421779:	jne    0x42088a
  42177f:	push   0xf
  421781:	lea    eax,[esp+0x44]
  421785:	push   eax
  421786:	push   0x428c9b
  42178b:	push   0x428caf
  421790:	push   0x428ccf
  421795:	call   esi
  421797:	imul   eax,eax,0x300000
  42179d:	cmp    eax,0x1b00000
  4217a2:	jne    0x42088a
  4217a8:	lea    eax,[esp+0x1b8]
  4217af:	push   eax
  4217b0:	push   0x428d0b
  4217b5:	call   DWORD PTR ds:0x42a577
  4217bb:	cmp    eax,0xffffffff
  4217be:	jne    0x42088a
  4217c4:	lea    eax,[esp+0x78]
  4217c8:	push   eax
  4217c9:	push   0x428cf7
  4217ce:	call   DWORD PTR ds:0x42a58b
  4217d4:	cmp    eax,0xffffffff
  4217d7:	jne    0x42088a
  4217dd:	push   0xf
  4217df:	lea    eax,[esp+0x44]
  4217e3:	push   eax
  4217e4:	push   0x428d4b
  4217e9:	push   0x428d5f
  4217ee:	push   0x428d7f
  4217f3:	call   esi
  4217f5:	imul   eax,eax,0x300000
  4217fb:	cmp    eax,0x1b00000
  421800:	jne    0x42088a
  421806:	lea    eax,[esp+0x1b8]
  42180d:	push   eax
  42180e:	push   0x428dbb
  421813:	call   DWORD PTR ds:0x42a577
  421819:	cmp    eax,0xffffffff
  42181c:	jne    0x42088a
  421822:	mov    eax,DWORD PTR [esp+0x3c]
  421826:	cmp    eax,0xf89c85a2
  42182b:	je     0x42188a
  421831:	mov    eax,DWORD PTR [esp+0x18]
  421835:	mov    ecx,DWORD PTR [esp+0x38]
  421839:	xor    eax,edi
  42183b:	add    eax,ebx
  42183d:	cmp    eax,ecx
  42183f:	je     0x42188a
  421845:	mov    eax,ds:0x42830b
  42184a:	mov    eax,DWORD PTR [eax+0x194]
  421850:	mov    ecx,DWORD PTR [eax]
  421852:	mov    eax,DWORD PTR [ecx+0x3c]
  421855:	push   DWORD PTR ds:0x4283eb
  42185b:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  42185f:	push   DWORD PTR ds:0x42818f
  421865:	add    eax,ecx
  421867:	mov    ecx,DWORD PTR ds:0x42830b
  42186d:	mov    ecx,DWORD PTR [ecx+0x194]
  421873:	push   DWORD PTR [ecx]
  421875:	call   eax
  421877:	mov    ecx,DWORD PTR ds:0x42830b
  42187d:	mov    ecx,DWORD PTR [ecx+0x1cc]
  421883:	mov    DWORD PTR [ecx],eax
  421885:	jmp    0x421ab7
  42188a:	mov    eax,DWORD PTR [esp+0x18]
  42188e:	mov    ecx,DWORD PTR [esp+0x60]
  421892:	xor    eax,edi
  421894:	add    eax,ebx
  421896:	cmp    eax,ecx
  421898:	jne    0x421901
  42189e:	mov    eax,DWORD PTR [esp+0x18]
  4218a2:	mov    ecx,DWORD PTR ds:0x42830b
  4218a8:	mov    ecx,DWORD PTR [ecx+0x198]
  4218ae:	xor    eax,edi
  4218b0:	add    eax,ebx
  4218b2:	cmp    eax,DWORD PTR [ecx]
  4218b4:	jne    0x4218da
  4218ba:	mov    eax,DWORD PTR [esp+0x18]
  4218be:	push   0xf89c85a1
  4218c3:	xor    eax,edi
  4218c5:	add    eax,ebx
  4218c7:	push   eax
  4218c8:	push   0xf89c85bd
  4218cd:	push   DWORD PTR [esp+0x18]
  4218d1:	push   DWORD PTR [esp+0x28]
  4218d5:	call   0x41b9fd
  4218da:	push   DWORD PTR [esp+0xc]
  4218de:	push   DWORD PTR [esp+0x1c]
  4218e2:	call   0x401000
  4218e7:	mov    eax,DWORD PTR [esp+0x18]
  4218eb:	xor    eax,edi
  4218ed:	add    eax,ebx
  4218ef:	mov    ds:0x428397,eax
  4218f4:	mov    eax,DWORD PTR [esp+0x18]
  4218f8:	xor    eax,edi
  4218fa:	add    eax,ebx
  4218fc:	mov    ds:0x42838f,eax
  421901:	mov    eax,DWORD PTR [esp+0x2c]
  421905:	test   eax,eax
  421907:	je     0x421ab7
  42190d:	lea    eax,[esp+0x78]
  421911:	mov    DWORD PTR [esp+0x64],0xf152c3a
  421919:	push   eax
  42191a:	mov    DWORD PTR [esp+0x78],0x712ed2f
  421922:	mov    DWORD PTR [esp+0x74],0x373fc09
  42192a:	push   0x428da7
  42192f:	mov    DWORD PTR [esp+0x70],0x72670ad9
  421937:	call   DWORD PTR ds:0x42a58b
  42193d:	cmp    eax,0xffffffff
  421940:	jne    0x42088a
  421946:	push   0xf
  421948:	lea    eax,[esp+0x44]
  42194c:	push   eax
  42194d:	push   0x428dfb
  421952:	push   0x428e0f
  421957:	push   0x428e2f
  42195c:	call   esi
  42195e:	imul   eax,eax,0x300000
  421964:	cmp    eax,0x1b00000
  421969:	jne    0x42088a
  42196f:	lea    eax,[esp+0x1b8]
  421976:	push   eax
  421977:	push   0x428e6b
  42197c:	call   DWORD PTR ds:0x42a577
  421982:	cmp    eax,0xffffffff
  421985:	jne    0x42088a
  42198b:	call   0x41b69e
  421990:	mov    eax,DWORD PTR [esp+0x34]
  421994:	mov    eax,DWORD PTR [esp+0xc]
  421998:	mov    DWORD PTR [esp+0x30],eax
  42199c:	mov    eax,DWORD PTR [esp+0x18]
  4219a0:	mov    DWORD PTR [esp+0xc],eax
  4219a4:	mov    eax,eax
  4219a6:	mov    eax,ds:0x42830b
  4219ab:	mov    ecx,DWORD PTR [eax+0x1c0]
  4219b1:	mov    edx,DWORD PTR [ecx]
  4219b3:	and    DWORD PTR [esp+0x14],0x0
  4219b8:	mov    esi,0xfabdbed6
  4219bd:	add    edx,esi
  4219bf:	adc    DWORD PTR [esp+0x14],0xffffffff
  4219c4:	mov    ecx,0x8a29a13f
  4219c9:	xor    edx,ecx
  4219cb:	mov    DWORD PTR [esp+0x20],edx
  4219cf:	mov    edx,DWORD PTR [esp+0x14]
  4219d3:	xor    edx,0x0
  4219d6:	cmp    DWORD PTR [esp+0x20],0x70941fe8
  4219de:	mov    DWORD PTR [esp+0x24],edx
  4219e2:	jne    0x4219f1
  4219e8:	cmp    edx,0xffffffff
  4219eb:	je     0x421a5a
  4219f1:	mov    eax,DWORD PTR [eax+0x1c8]
  4219f7:	mov    eax,DWORD PTR [eax]
  4219f9:	cdq    
  4219fa:	add    eax,esi
  4219fc:	adc    edx,0xffffffff
  4219ff:	and    DWORD PTR [esp+0x14],0x0
  421a04:	xor    edx,0x0
  421a07:	mov    DWORD PTR [esp+0x1c],edx
  421a0b:	mov    edx,DWORD PTR [esp+0xc]
  421a0f:	mov    DWORD PTR [esp+0x10],edx
  421a13:	xor    eax,ecx
  421a15:	add    DWORD PTR [esp+0x10],esi
  421a19:	mov    edx,DWORD PTR [esp+0x10]
  421a1d:	adc    DWORD PTR [esp+0x14],0xffffffff
  421a22:	xor    edx,ecx
  421a24:	mov    DWORD PTR [esp+0x20],edx
  421a28:	mov    edx,DWORD PTR [esp+0x14]
  421a2c:	xor    edx,0x0
  421a2f:	mov    DWORD PTR [esp+0x24],edx
  421a33:	cmp    DWORD PTR [esp+0x20],eax
  421a37:	jne    0x421a49
  421a3d:	mov    eax,DWORD PTR [esp+0x1c]
  421a41:	cmp    edx,eax
  421a43:	je     0x421a5a
  421a49:	mov    eax,DWORD PTR [esp+0xc]
  421a4d:	add    eax,DWORD PTR [esp+0x30]
  421a51:	mov    DWORD PTR [esp+0xc],eax
  421a55:	jmp    0x421ab7
  421a5a:	mov    eax,ds:0x42838f
  421a5f:	mov    edx,DWORD PTR ds:0x428397
  421a65:	xor    eax,edx
  421a67:	mov    ds:0x42838f,eax
  421a6c:	mov    edx,DWORD PTR ds:0x42838f
  421a72:	mov    eax,DWORD PTR [esp+0x2c]
  421a76:	add    DWORD PTR [eax],edx
  421a78:	mov    edx,DWORD PTR [esp+0xc]
  421a7c:	mov    eax,ds:0x42838f
  421a81:	xor    edx,edi
  421a83:	add    edx,ebx
  421a85:	xor    ebx,ebx
  421a87:	add    edx,esi
  421a89:	adc    ebx,0xffffffff
  421a8c:	xor    edi,edi
  421a8e:	xor    edx,ecx
  421a90:	xor    ebx,0x0
  421a93:	add    eax,esi
  421a95:	adc    edi,0xffffffff
  421a98:	xor    eax,ecx
  421a9a:	xor    edi,0x0
  421a9d:	cmp    eax,edx
  421a9f:	jne    0x421ab7
  421aa5:	cmp    edi,ebx
  421aa7:	jne    0x421ab7
  421aad:	mov    eax,ds:0x42838f
  421ab2:	mov    ds:0x428397,eax
  421ab7:	lea    eax,[esp+0x78]
  421abb:	push   eax
  421abc:	push   0x428e57
  421ac1:	call   DWORD PTR ds:0x42a58b
  421ac7:	cmp    eax,0xffffffff
  421aca:	jne    0x42088a
  421ad0:	push   0xf
  421ad2:	lea    eax,[esp+0x44]
  421ad6:	push   eax
  421ad7:	push   0x428eab
  421adc:	push   0x428ebf
  421ae1:	push   0x428edf
  421ae6:	call   DWORD PTR ds:0x42a5a7
  421aec:	imul   eax,eax,0x300000
  421af2:	cmp    eax,0x1b00000
  421af7:	jne    0x42088a
  421afd:	lea    eax,[esp+0x1b8]
  421b04:	push   eax
  421b05:	push   0x428f0b
  421b0a:	call   DWORD PTR ds:0x42a577
  421b10:	cmp    eax,0xffffffff
  421b13:	jne    0x42088a
  421b19:	mov    eax,ds:0x42830b
  421b1e:	push   0x4
  421b20:	add    eax,0x1cc
  421b25:	push   eax
  421b26:	lea    eax,[esp+0x3c]
  421b2a:	push   eax
  421b2b:	call   0x421b3f
  421b30:	mov    eax,DWORD PTR [esp+0x34]
  421b34:	mov    eax,DWORD PTR [eax]
  421b36:	pop    edi
  421b37:	pop    esi
  421b38:	pop    ebx
  421b39:	mov    esp,ebp
  421b3b:	pop    ebp
  421b3c:	ret    0xc
  421b3f:	push   ebp
  421b40:	mov    ebp,esp
  421b42:	sub    esp,0x10
  421b45:	sub    DWORD PTR ds:0x429153,ebx
  421b4b:	mov    eax,0xf89c85a1
  421b50:	and    ecx,DWORD PTR ds:0x42914b
  421b56:	mov    DWORD PTR [ebp-0x4],eax
  421b59:	and    DWORD PTR ds:0x429167,0x0
  421b63:	jmp    0x421b75
  421b68:	mov    edx,DWORD PTR ds:0x429167
  421b6e:	inc    edx
  421b6f:	mov    DWORD PTR ds:0x429167,edx
  421b75:	cmp    DWORD PTR ds:0x429167,0x1c
  421b7c:	jae    0x421bcb
  421b82:	cmp    DWORD PTR ds:0x429167,0xc
  421b89:	jge    0x421bcb
  421b8f:	jmp    0x421bac
  421b94:	push   DWORD PTR [ebp-0x28]
  421b97:	push   0x428152
  421b9c:	push   0x42810e
  421ba1:	push   0x400000
  421ba6:	call   DWORD PTR ds:0x42a57b
  421bac:	cmp    DWORD PTR ds:0x429167,0xb
  421bb3:	jne    0x421bc6
  421bb9:	mov    edx,DWORD PTR ds:0x429167
  421bbf:	inc    edx
  421bc0:	mov    DWORD PTR ds:0x429167,edx
  421bc6:	jmp    0x421b68
  421bcb:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  421bd2:	or     edx,0x5b7d
  421bd8:	mov    ecx,DWORD PTR [ebp-0x4]
  421bdb:	push   esi
  421bdc:	mov    DWORD PTR ds:0x42918b,0x1a
  421be6:	cmp    DWORD PTR ds:0x42918b,0x0
  421bed:	je     0x421c25
  421bf3:	cmp    DWORD PTR ds:0x42918b,0x26
  421bfa:	ja     0x421c25
  421c00:	jmp    0x421c13
  421c05:	push   0x4386
  421c0a:	push   DWORD PTR [ebp-0x14]
  421c0d:	call   DWORD PTR ds:0x42a57f
  421c13:	mov    edx,DWORD PTR ds:0x42918b
  421c19:	dec    edx
  421c1a:	mov    DWORD PTR ds:0x42918b,edx
  421c20:	jmp    0x421be6
  421c25:	mov    edx,0x75108ac
  421c2a:	xor    ecx,edx
  421c2c:	mov    esi,0x3272f3
  421c31:	push   edi
  421c32:	mov    edi,DWORD PTR [ebp+0x10]
  421c35:	add    ecx,esi
  421c37:	cmp    ecx,edi
  421c39:	mov    DWORD PTR ds:0x42916f,0x60ec
  421c43:	je     0x42414b
  421c49:	movzx  ecx,WORD PTR ds:0x4291f7
  421c50:	adc    DWORD PTR ds:0x4291cf,ecx
  421c56:	mov    ecx,DWORD PTR [ebp-0x4]
  421c59:	mov    edi,DWORD PTR [ebp+0x10]
  421c5c:	inc    DWORD PTR ds:0x4291d3
  421c62:	xor    eax,eax
  421c64:	and    DWORD PTR ds:0x4291b7,0x2b27
  421c6e:	xor    ecx,edx
  421c70:	add    ecx,esi
  421c72:	add    DWORD PTR ds:0x42914b,0x714
  421c7c:	add    edi,0xfabdbed6
  421c82:	mov    DWORD PTR ds:0x429173,0x79de
  421c8c:	adc    eax,0xffffffff
  421c8f:	or     DWORD PTR ds:0x4291b3,0x42917f
  421c99:	xor    eax,0x0
  421c9c:	adc    DWORD PTR ds:0x4291e7,0x4ab7
  421ca6:	mov    DWORD PTR [ebp-0xc],eax
  421ca9:	mov    DWORD PTR ds:0x42914b,0x1e
  421cb3:	cmp    DWORD PTR ds:0x42914b,0x0
  421cba:	je     0x421d0b
  421cc0:	cmp    DWORD PTR ds:0x42914b,0x8
  421cc7:	jge    0x421d0b
  421ccd:	jmp    0x421cdd
  421cd2:	push   0x4291eb
  421cd7:	call   DWORD PTR ds:0x42a583
  421cdd:	cmp    DWORD PTR ds:0x42914b,0x9
  421ce4:	jne    0x421cf8
  421cea:	xor    eax,eax
  421cec:	add    eax,DWORD PTR ds:0x42914b
  421cf2:	dec    eax
  421cf3:	mov    ds:0x42914b,eax
  421cf8:	xor    eax,eax
  421cfa:	xor    eax,DWORD PTR ds:0x42914b
  421d00:	dec    eax
  421d01:	mov    ds:0x42914b,eax
  421d06:	jmp    0x421cb3
  421d0b:	push   ebx
  421d0c:	xor    ebx,ebx
  421d0e:	xor    edi,0x8a29a13f
  421d14:	mov    eax,ecx
  421d16:	add    eax,0xfabdbed6
  421d1b:	adc    ebx,0xffffffff
  421d1e:	xor    eax,0x8a29a13f
  421d23:	xor    ebx,0x0
  421d26:	cmp    eax,edi
  421d28:	jne    0x421d41
  421d2e:	cmp    ebx,DWORD PTR [ebp-0xc]
  421d31:	je     0x424145
  421d37:	jmp    0x421d41
  421d3c:	mov    esi,0x3272f3
  421d41:	mov    eax,DWORD PTR [ebp-0x4]
  421d44:	mov    edi,DWORD PTR [ebp-0x8]
  421d47:	xor    edi,edx
  421d49:	add    edi,esi
  421d4b:	mov    esi,DWORD PTR [ebp+0x8]
  421d4e:	imul   edi,ecx
  421d51:	mov    ebx,DWORD PTR [ebp+0xc]
  421d54:	xor    eax,edx
  421d56:	add    eax,ecx
  421d58:	mov    al,BYTE PTR [ebx+eax*1+0x3272f3]
  421d5f:	mov    BYTE PTR [edi+esi*1],al
  421d62:	mov    eax,DWORD PTR [ebp-0x8]
  421d65:	mov    esi,DWORD PTR [ebp+0x10]
  421d68:	xor    eax,edx
  421d6a:	xor    ebx,ebx
  421d6c:	add    esi,0xfabdbed6
  421d72:	adc    ebx,0xffffffff
  421d75:	lea    ecx,[ecx+eax*1+0x3272f3]
  421d7c:	xor    edi,edi
  421d7e:	xor    esi,0x8a29a13f
  421d84:	xor    ebx,0x0
  421d87:	mov    eax,ecx
  421d89:	add    eax,0xfabdbed6
  421d8e:	adc    edi,0xffffffff
  421d91:	xor    eax,0x8a29a13f
  421d96:	xor    edi,0x0
  421d99:	cmp    eax,esi
  421d9b:	jne    0x421d3c
  421da1:	cmp    edi,ebx
  421da3:	jne    0x421d3c
  421da9:	jmp    0x424145
  421dae:	sbb    ah,bl
  421db0:	cmp    ch,BYTE PTR [edi-0x46]
  421db3:	xchg   BYTE PTR [esi],al
  421db5:	xchg   BYTE PTR [edx-0x68],bl
  421db8:	dec    esi
  421db9:	push   esp
  421dba:	nop
  421dbb:	inc    DWORD PTR [esi+ebx*8-0x7c7d4e91]
  421dc2:	add    BYTE PTR [ebx+eax*4-0x7d],bl
  421dc6:	fwait
  421dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc8:	xchg   edx,eax
  421dc9:	sub    eax,0x25e0951b
  421dce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421dcf:	mov    bl,0x2a
  421dd1:	jmp    FWORD PTR [esi]
  421dd3:	push   0x1c
  421dd5:	jle    0x421e47
  421dd7:	push   es
  421dd8:	adc    DWORD PTR ds:0x23a46003,ebx
  421dde:	inc    esi
  421ddf:	jae    0x421e02
  421de1:	mov    bl,0x76
  421de3:	in     al,dx
  421de4:	imul   edi,DWORD PTR [ecx],0xffffffce
  421de7:	in     eax,dx
  421de8:	push   eax
  421de9:	iret   
  421dea:	pcmpgtd mm7,QWORD PTR [edx+0x68d2be70]
  421df1:	imul   ebx,DWORD PTR [edi],0xffffff97
  421df4:	pop    eax
  421df5:	jle    0x421e70
  421df7:	in     al,dx
  421df8:	test   DWORD PTR [esi+ebp*8],ecx
  421dfb:	bound  eax,QWORD PTR [ebx-0x72c7c179]
  421e01:	fadd   DWORD PTR [edi+0x63]
  421e04:	(bad)  
  421e05:	mov    ecx,0xd974eb0d
  421e0a:	mov    bh,0xd5
  421e0c:	inc    edx
  421e0d:	pop    eax
  421e0e:	and    BYTE PTR [edx+0x223097bc],ah
  421e14:	push   esp
  421e15:	adc    al,BYTE PTR [edi+0x7f0b2f97]
  421e1b:	imul   ebx,DWORD PTR [edx],0xffffffc0
  421e1e:	mov    WORD PTR [ebx+0x430d4f78],cs
  421e24:	ror    ebx,0xb8
  421e27:	pop    ds
  421e28:	outs   dx,BYTE PTR ds:[esi]
  421e29:	div    DWORD PTR [edi]
  421e2b:	lahf   
  421e2c:	daa    
  421e2d:	mov    DWORD PTR [ecx-0x7d0cb5d6],0xbf0f4eb6
  421e37:	add    eax,0x916e10cc
  421e3c:	rcl    WORD PTR [eax+ebx*4],1
  421e40:	mov    dh,0x98
  421e42:	out    dx,al
  421e43:	and    DWORD PTR ds:0xeff7d3f6,ebp
  421e49:	pop    ebp
  421e4a:	leave  
  421e4b:	xlat   BYTE PTR ds:[ebx]
  421e4c:	pop    ss
  421e4d:	sahf   
  421e4e:	adc    BYTE PTR [edi],0xae
  421e51:	or     ebx,DWORD PTR [ebx-0x2e8075c4]
  421e57:	sub    BYTE PTR [edi+0x41],al
  421e5a:	and    DWORD PTR [edx],eax
  421e5c:	add    eax,0x16f0c3d6
  421e61:	or     DWORD PTR [ecx-0x1bc4c500],ebp
  421e67:	xor    BYTE PTR [ecx+ecx*4],ah
  421e6a:	dec    esp
  421e6b:	or     al,BYTE PTR ds:0xa923e0c3
  421e71:	rcl    DWORD PTR [ebp+0x52cdf869],0x4c
  421e78:	jl     0x421e51
  421e7a:	(bad)  [ecx]
  421e7c:	jno    0x421e90
  421e7e:	nop
  421e7f:	inc    esi
  421e80:	in     eax,0x67
  421e82:	bound  esi,QWORD PTR [ebx]
  421e84:	xchg   esi,eax
  421e85:	add    DWORD PTR [edx+0x52],0x36
  421e89:	lds    edi,FWORD PTR [ebp-0x32615489]
  421e8f:	jo     0x421e19
  421e91:	cmp    BYTE PTR [ecx+0x6e],ah
  421e94:	pop    ebp
  421e95:	inc    ebx
  421e96:	inc    ecx
  421e97:	pop    ds
  421e98:	adc    DWORD PTR [ebx-0xee80d9a],esi
  421e9e:	shl    DWORD PTR [ebx-0x7d],1
  421ea1:	add    bh,0xcd
  421ea4:	xchg   esi,eax
  421ea5:	cmp    edi,ebx
  421ea7:	cmp    DWORD PTR [ebx+0x35b76d98],0x21
  421eae:	sub    BYTE PTR [ebx],ch
  421eb0:	xchg   esp,eax
  421eb1:	inc    esp
  421eb2:	jecxz  0x421e92
  421eb4:	lods   eax,DWORD PTR ds:[esi]
  421eb5:	ret    0xc95f
  421eb8:	xor    al,0xc4
  421eba:	retf   
  421ebb:	xchg   edx,eax
  421ebc:	(bad)  
  421ebd:	push   esp
  421ebe:	mov    ah,0xa4
  421ec0:	sub    eax,0x5e329a64
  421ec5:	jbe    0x421e5e
  421ec7:	fwait
  421ec8:	dec    edx
  421ec9:	lea    eax,[edx+edx*2+0x522569c4]
  421ed0:	dec    edi
  421ed1:	adc    dh,BYTE PTR [edi+0x75]
  421ed4:	sbb    al,0xcb
  421ed6:	lds    esi,FWORD PTR [eax+0x49af08c0]
  421edc:	(bad)  
  421ede:	pushf  
  421edf:	sar    DWORD PTR [esi+eiz*8-0x4b9ad557],0xd8
  421ee7:	sub    bh,ah
  421ee9:	mov    dl,0x66
  421eeb:	and    ecx,ebx
  421eed:	ret    0x4852
  421ef0:	inc    ebx
  421ef1:	mov    eax,ds:0xca33e780
  421ef6:	stos   BYTE PTR es:[edi],al
  421ef7:	jnp    0x421f58
  421ef9:	ret    
  421efa:	and    dh,0xf2
  421efd:	mov    cl,0x65
  421eff:	cmp    eax,eax
  421f01:	ds or  al,0x64
  421f04:	jno    0x421ed1
  421f06:	adc    al,0x50
  421f08:	mov    edi,0x5b0858de
  421f0d:	xor    DWORD PTR [edi-0x72],0xf2d6c73f
  421f14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f15:	fadd   QWORD PTR [edx+0x8396922]
  421f1b:	and    esi,DWORD PTR ds:[ebp+0x13]
  421f1f:	mov    edx,0xb9728bb5
  421f24:	mov    ecx,0x6923883e
  421f29:	pop    ss
  421f2a:	and    cl,al
  421f2c:	inc    ecx
  421f2d:	aaa    
  421f2e:	mov    esp,0xda40860f
  421f33:	(bad)  
  421f34:	sar    DWORD PTR [edi],cl
  421f36:	cmp    DWORD PTR [edi],edx
  421f38:	adc    DWORD PTR [eax-0x1e23df8],eax
  421f3e:	idiv   DWORD PTR [edi+0x68765a3]
  421f44:	pop    ds
  421f45:	jmp    0xa4c4:0xa288fe3d
  421f4c:	je     0x421f3d
  421f4e:	mov    ah,0x69
  421f50:	jg     0x421fb9
  421f52:	dec    ebp
  421f53:	ss test eax,0x577cdff4
  421f59:	ss dec esi
  421f5b:	cdq    
  421f5c:	aam    0xd1
  421f5e:	icebp  
  421f5f:	int3   
  421f60:	gs push cs
  421f62:	test   DWORD PTR [ebp-0x34232c74],0xfd31010a
  421f6c:	sub    ecx,DWORD PTR es:[eax]
  421f6f:	inc    ebx
  421f70:	dec    ah
  421f72:	shr    BYTE PTR [ebx-0x39],1
  421f75:	mov    al,dh
  421f77:	sbb    esi,DWORD PTR [eax+0xa]
  421f7a:	imul   ebx,DWORD PTR [esi+eax*8],0xffffffcd
  421f7e:	mov    BYTE PTR [ecx-0x6d],dh
  421f81:	xchg   DWORD PTR ds:[edx+0x71210c7],eax
  421f88:	jecxz  0x421f4b
  421f8a:	mov    esi,0x83334ec
  421f8f:	mov    eax,0xfc019a0c
  421f94:	aaa    
  421f95:	pop    ecx
  421f96:	clc    
  421f97:	shl    BYTE PTR [ebx+0x4],1
  421f9a:	mov    fs,WORD PTR [eax+0x9154f3c]
  421fa0:	repnz lea ecx,[esi+0x5280cfee]
  421fa7:	xchg   ebx,eax
  421fa8:	icebp  
  421fa9:	bound  edx,QWORD PTR [ecx+0x50f2e4b9]
  421faf:	dec    ebx
  421fb0:	mov    ds:0x7f010feb,al
  421fb5:	mov    dl,bh
  421fb7:	xchg   esi,eax
  421fb8:	loope  0x421f70
  421fba:	mov    ds:0xe3a7c076,eax
  421fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421fc0:	sbb    ebp,ebp
  421fc2:	fisubr DWORD PTR cs:[ebp-0x64310b05]
  421fc9:	and    bh,cl
  421fcb:	sub    bl,ch
  421fcd:	mov    al,0x21
  421fcf:	push   0xffffffe6
  421fd1:	cdq    
  421fd2:	cwde   
  421fd3:	and    al,0x90
  421fd5:	mov    esi,0xb36e32b2
  421fda:	cmp    BYTE PTR [edi],ch
  421fdc:	jl     0x421ff7
  421fde:	pop    esp
  421fdf:	mov    al,ds:0xa0196ccf
  421fe4:	dec    ecx
  421fe5:	pop    eax
  421fe6:	xor    bl,ah
  421fe8:	xlat   BYTE PTR ds:[ebx]
  421fe9:	cmp    DWORD PTR ds:0xe70ffaa,0xadd67495
  421ff3:	mov    al,0xda
  421ff5:	push   eax
  421ff6:	pop    ds
  421ff7:	mov    edx,0xf46a8fa7
  421ffc:	push   eax
  421ffd:	xor    BYTE PTR ds:0xae747ca9,ch
  422003:	or     eax,0x2f6db121
  422008:	call   0xbbc0:0xd517d475
  42200f:	pop    edx
  422010:	add    edx,edi
  422012:	mov    ah,0xe5
  422014:	int3   
  422015:	loop   0x422054
  422017:	cmp    eax,0xce01c82d
  42201c:	dec    edi
  42201d:	mov    ebp,0x166eff82
  422022:	add    al,0x1e
  422024:	jp     0x421fb9
  422026:	adc    ch,BYTE PTR [edx+esi*1+0x63]
  42202a:	xor    ebp,DWORD PTR [ecx+0x7c]
  42202d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42202e:	jge    0x42203b
  422030:	cmp    BYTE PTR [esi],dl
  422032:	pop    esp
  422033:	jbe    0x421fe3
  422035:	iret   
  422036:	mov    esp,0x17f20003
  42203b:	and    al,0x6b
  42203d:	or     al,0x11
  42203f:	loope  0x42201d
  422041:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422042:	pop    ebx
  422043:	out    dx,al
  422044:	bound  edi,QWORD PTR [esi+esi*1+0x45fbba6d]
  42204b:	push   ebp
  42204c:	loope  0x422081
  42204e:	nop
  42204f:	jae    0x4220a0
  422051:	int3   
  422052:	addr16 aam 0x2a
  422055:	or     eax,0xb7a4fee0
  42205a:	jo     0x1716d5f
  422060:	std    
  422061:	out    dx,al
  422062:	enter  0x6b8c,0x90
  422066:	sar    BYTE PTR [ebx-0x4],cl
  422069:	add    esi,ebp
  42206b:	adc    BYTE PTR [ecx+0x5172f494],ah
  422071:	mov    dh,0xca
  422073:	int    0xbb
  422075:	lahf   
  422076:	mov    ebx,0x1e84164f
  42207b:	ret    0x4413
  42207e:	lahf   
  42207f:	cwde   
  422080:	in     al,dx
  422081:	lods   al,BYTE PTR ds:[esi]
  422082:	into   
  422083:	mov    BYTE PTR [esi-0x75],cl
  422086:	nop
  422087:	sbb    BYTE PTR ds:0xc532b924,ch
  42208d:	or     eax,0x3b8d1280
  422092:	or     eax,DWORD PTR [ebx+0x36]
  422095:	outs   dx,BYTE PTR ds:[esi]
  422096:	scas   eax,DWORD PTR es:[edi]
  422097:	xchg   BYTE PTR [ebp+0x3b],ah
  42209a:	test   eax,0xc2205da8
  4220a0:	jmp    0x42202f
  4220a2:	pop    es
  4220a3:	leave  
  4220a4:	daa    
  4220a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220a6:	retf   
  4220a7:	mov    cl,BYTE PTR [edi-0x4f]
  4220aa:	jnp    0x42211e
  4220ac:	inc    esi
  4220ad:	arpl   WORD PTR [ebx],bx
  4220af:	adc    edi,DWORD PTR [edx-0x3d38ff2c]
  4220b5:	lock jl 0x4220ee
  4220b8:	sbb    ebp,DWORD PTR [eax+edi*1]
  4220bb:	fisttp QWORD PTR [ebp-0x7be3dff7]
  4220c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220c2:	dec    esi
  4220c3:	lock stc 
  4220c5:	push   esp
  4220c6:	mov    esp,0xc11b254a
  4220cb:	sbb    al,0x8d
  4220cd:	(bad)  
  4220cf:	mov    cl,ah
  4220d1:	stc    
  4220d2:	js     0x422152
  4220d4:	jle    0x4220be
  4220d6:	jmp    0x6a0f1390
  4220db:	push   ecx
  4220dc:	(bad)  
  4220dd:	cli    
  4220de:	push   ss
  4220df:	test   BYTE PTR [edi],al
  4220e1:	mov    ebp,0x3d06817f
  4220e6:	imul   eax,DWORD PTR [ecx+0x7602b8ba],0x8
  4220ed:	sub    al,0xf8
  4220ef:	mov    ds:0x632ea9f2,al
  4220f4:	ss dec eax
  4220f6:	icebp  
  4220f7:	and    dl,bh
  4220f9:	or     eax,0xd436053
  4220fe:	jae    0x4220ec
  422100:	or     DWORD PTR [edi-0x44],0x53
  422104:	ins    BYTE PTR es:[edi],dx
  422105:	push   eax
  422106:	pop    esi
  422107:	fidiv  DWORD PTR [ebp+ecx*4-0x26]
  42210b:	ja     0x4220b8
  42210d:	jo     0x4220ed
  42210f:	sahf   
  422110:	add    DWORD PTR [ebp-0x5],ebx
  422113:	push   0xffffff94
  422115:	stos   BYTE PTR es:[edi],al
  422116:	jne    0x42216d
  422118:	pusha  
  422119:	das    
  42211a:	and    eax,0xa724231f
  42211f:	in     eax,0x3c
  422121:	jae    0x4220cc
  422123:	jne    0x4220e0
  422125:	lea    esi,[esi+0x59]
  422128:	bound  edx,QWORD PTR [edx]
  42212a:	mov    edx,0x255b032f
  42212f:	shl    bl,1
  422131:	dec    esi
  422132:	stos   DWORD PTR es:[edi],eax
  422133:	in     al,dx
  422134:	aaa    
  422135:	les    edi,FWORD PTR [edi-0x240c9968]
  42213b:	leave  
  42213c:	sbb    DWORD PTR [ebp-0x32],ebp
  42213f:	jbe    0x422164
  422141:	aam    0x5c
  422143:	jb     0x4221b4
  422145:	popf   
  422146:	test   eax,0xb30a0c70
  42214b:	add    eax,DWORD PTR [ebx-0x64]
  42214e:	nop
  42214f:	mov    eax,0x74c2428e
  422154:	pop    esi
  422155:	je     0x4221a6
  422157:	and    al,0x76
  422159:	mov    eax,ds:0xd25a79db
  42215e:	push   eax
  42215f:	enter  0xf511,0x98
  422163:	xor    edi,eax
  422165:	add    cl,BYTE PTR [edx]
  422167:	mov    ah,0x2a
  422169:	pop    ebp
  42216a:	call   0xd59c:0xdcb08146
  422171:	addr16 push eax
  422173:	call   0x16d80025
  422178:	fld    QWORD PTR [ecx-0x44a063d9]
  42217e:	jbe    0x4221e8
  422180:	push   edx
  422181:	test   al,0xf4
  422183:	test   eax,0x5e6a1408
  422188:	pop    ds
  422189:	sbb    bh,ch
  42218b:	mov    cl,0x3f
  42218d:	push   ss
  42218e:	ficomp DWORD PTR [ebp+0x20e3888f]
  422194:	sahf   
  422195:	sub    BYTE PTR [ebx],dh
  422197:	mov    esp,0x9b470c2
  42219c:	push   ds
  42219d:	push   ds
  42219e:	jp     0x4221bb
  4221a0:	mov    ah,0x7c
  4221a2:	jo     0x422185
  4221a4:	inc    esi
  4221a5:	pop    eax
  4221a6:	inc    ecx
  4221a7:	add    esp,DWORD PTR [edi-0x30]
  4221aa:	sti    
  4221ab:	imul   esp,DWORD PTR ds:0xa4afd5f7,0x8ca1fe6d
  4221b5:	xor    eax,0xfd5b94d4
  4221ba:	aam    0xf9
  4221bc:	fldcw  WORD PTR [ebx+0xa]
  4221bf:	mov    WORD PTR [edi+ecx*8],?
  4221c2:	frstor [ebp-0x46fecc2a]
  4221c8:	sub    eax,DWORD PTR [ecx+0x7f]
  4221cb:	stos   BYTE PTR es:[edi],al
  4221cc:	stos   DWORD PTR es:[edi],eax
  4221cd:	mov    edx,0x1a92ac8
  4221d2:	fmul   st,st(7)
  4221d4:	cmp    al,0x2d
  4221d6:	lahf   
  4221d7:	sbb    eax,0xd29171f7
  4221dc:	xchg   ebx,ebx
  4221de:	cwde   
  4221df:	xchg   ah,al
  4221e1:	jmp    0x5abf2c80
  4221e6:	out    dx,eax
  4221e7:	mov    ah,bh
  4221e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4221ea:	inc    ebp
  4221eb:	fidivr WORD PTR [esi+0x66e7b677]
  4221f1:	popf   
  4221f2:	stos   BYTE PTR es:[edi],al
  4221f3:	shr    DWORD PTR [esi-0x3a6fe056],1
  4221f9:	stc    
  4221fa:	stc    
  4221fb:	call   0x6b551d84
  422200:	push   ebx
  422201:	mov    eax,0x58f31f8b
  422206:	cmp    edx,esi
  422208:	rcl    BYTE PTR [edx],0x13
  42220b:	into   
  42220c:	mov    ds:0x7269b457,eax
  422211:	frstor [edx]
  422213:	xchg   al,ch
  422215:	push   esi
  422216:	pop    ecx
  422217:	pop    esp
  422218:	push   ds
  422219:	les    ebp,FWORD PTR [eax]
  42221b:	sahf   
  42221c:	pop    edi
  42221d:	xchg   ch,ch
  42221f:	inc    eax
  422220:	ss stos DWORD PTR es:[edi],eax
  422222:	sub    al,BYTE PTR [esi+0x4a]
  422225:	inc    esp
  422226:	fstp   QWORD PTR [eax+0xa93c045]
  42222c:	scas   eax,DWORD PTR es:[edi]
  42222d:	ja     0x422213
  42222f:	out    0x49,al
  422231:	test   ch,0x96
  422234:	test   DWORD PTR [eax+0x7],esi
  422237:	daa    
  422238:	push   ebx
  422239:	xor    eax,0x682476f8
  42223e:	jo     0x4221d9
  422240:	inc    esi
  422241:	jl     0x4221c6
  422243:	and    esp,DWORD PTR [edi+ebp*1+0x2e393b5f]
  42224a:	or     al,0x4
  42224c:	leave  
  42224d:	pop    ecx
  42224e:	pop    ds
  42224f:	push   ebp
  422250:	xchg   esp,eax
  422251:	es mov ebp,0x39c25700
  422257:	adc    esi,DWORD PTR [eax-0x5c890ded]
  42225d:	mov    al,ds:0x5e8c0c
  422262:	jns    0x42226f
  422264:	jp     0x422226
  422266:	fldcw  WORD PTR [ecx-0x13]
  422269:	ja     0x4222c3
  42226b:	inc    ebp
  42226c:	mov    WORD PTR [edi-0x52],ds
  42226f:	dec    ebx
  422270:	xlat   BYTE PTR ds:[ebx]
  422271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422272:	mov    ch,0x4e
  422274:	mov    bl,0x28
  422276:	retf   
  422277:	fstp   st(7)
  422279:	pop    ebp
  42227a:	sub    al,0xb8
  42227c:	pop    ecx
  42227d:	test   al,0xae
  42227f:	sub    ebp,DWORD PTR [ebx]
  422281:	std    
  422282:	shl    BYTE PTR [ebx+0x40],1
  422285:	pop    ebx
  422286:	xor    DWORD PTR [ebx],ebx
  422288:	loope  0x42226f
  42228a:	imul   esp,DWORD PTR [ecx],0x5d
  42228d:	push   0xffffffa3
  42228f:	test   DWORD PTR [edi+0x4bdc9936],0xa0eb33c
  422299:	inc    esp
  42229a:	mov    edi,0xc06ff411
  42229f:	nop
  4222a0:	adc    al,0xd7
  4222a2:	cmp    esp,ebx
  4222a4:	xor    eax,0xa3e63652
  4222a9:	pop    edi
  4222aa:	sub    DWORD PTR [edx+ebx*4+0x30846fcc],ecx
  4222b1:	xchg   ebp,eax
  4222b2:	mov    esp,0x738a7feb
  4222b7:	daa    
  4222b8:	(bad)  
  4222ba:	in     al,0xc9
  4222bc:	jmp    0x8b6:0x87a20978
  4222c3:	cmp    esi,esp
  4222c5:	retf   
  4222c6:	add    eax,0x6cf41329
  4222cb:	mov    esp,0xe74b1635
  4222d0:	mov    ah,0x8b
  4222d2:	mov    ebx,0x2a863dcd
  4222d7:	mov    ds:0x62c5dd70,al
  4222dc:	dec    ebp
  4222dd:	in     eax,dx
  4222de:	sbb    BYTE PTR [esi-0xb416e7c],dh
  4222e4:	ror    DWORD PTR [edi],1
  4222e6:	loop   0x422275
  4222e8:	mov    WORD PTR [ebx+0x1d53e634],?
  4222ee:	mov    al,0x9e
  4222f0:	call   0xd36c5fcd
  4222f5:	sbb    eax,0xc9934118
  4222fa:	out    dx,al
  4222fb:	sbb    bh,BYTE PTR [ecx]
  4222fd:	(bad)  
  4222fe:	imul   edi,eax,0xdc0a5ee2
  422304:	retf   0x20ac
  422307:	mov    ch,0x37
  422309:	xor    al,0xb6
  42230b:	mov    esi,0x8fca7eac
  422310:	jno    0x4222a0
  422312:	xor    al,dh
  422314:	cld    
  422315:	add    DWORD PTR ds:0xb76d27bc,eax
  42231b:	repnz outs dx,BYTE PTR ds:[esi]
  42231d:	mov    ?,WORD PTR [ebp-0x4e]
  422320:	ins    BYTE PTR es:[edi],dx
  422321:	dec    eax
  422322:	add    ah,BYTE PTR [ebx-0x18]
  422325:	in     al,dx
  422326:	in     al,0x51
  422328:	clc    
  422329:	mov    ecx,ecx
  42232b:	clc    
  42232c:	push   edi
  42232d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42232e:	xor    al,0xf6
  422330:	push   0xeaf02672
  422335:	mov    BYTE PTR [edi+0x7f],al
  422338:	xor    eax,0x47a6cc5d
  42233d:	inc    ecx
  42233e:	lods   eax,DWORD PTR ds:[esi]
  42233f:	cmp    cl,BYTE PTR [ecx-0x4b]
  422342:	inc    ecx
  422343:	(bad)  
  422344:	push   ebx
  422345:	xchg   ebx,eax
  422346:	xchg   ebp,eax
  422347:	retf   
  422348:	adc    ebp,DWORD PTR [edx]
  42234a:	cmc    
  42234b:	push   ecx
  42234c:	ins    DWORD PTR es:[edi],dx
  42234d:	sub    BYTE PTR [ecx-0x3f4c4bbc],ah
  422353:	jmp    0xd9e7:0xebb48409
  42235a:	jecxz  0x422347
  42235c:	jne    0x4223d3
  42235e:	stos   DWORD PTR es:[edi],eax
  42235f:	xor    ah,BYTE PTR [esi-0x57c77b1]
  422365:	add    DWORD PTR [edi],esi
  422367:	scas   al,BYTE PTR es:[edi]
  422368:	inc    BYTE PTR [esi-0x4489bdd]
  42236e:	sbb    al,0x96
  422370:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422371:	mov    esi,0x5e617673
  422376:	jmp    0x4223df
  422378:	cmp    BYTE PTR [esi+0x4],dh
  42237b:	xlat   BYTE PTR ds:[ebx]
  42237c:	push   0xffffffce
  42237e:	sbb    edi,edi
  422380:	push   ebx
  422381:	outs   dx,DWORD PTR ds:[esi]
  422382:	in     al,dx
  422383:	push   esp
  422384:	rcl    DWORD PTR [eax],cl
  422386:	pusha  
  422387:	lahf   
  422388:	pop    esi
  422389:	iret   
  42238a:	outs   dx,BYTE PTR ds:[esi]
  42238b:	and    bh,BYTE PTR [edi-0x70097d3f]
  422391:	push   ebp
  422392:	in     eax,0x8b
  422394:	in     eax,0x48
  422396:	add    BYTE PTR [esi+ebp*1+0x3b],0xb2
  42239b:	and    al,0x3e
  42239d:	xchg   ebp,eax
  42239e:	mov    ch,BYTE PTR [ecx]
  4223a0:	adc    eax,0x146c682
  4223a5:	mov    ds:0x3d742cae,al
  4223aa:	sub    al,0xca
  4223ac:	or     BYTE PTR [edi],bl
  4223ae:	and    al,0xc6
  4223b0:	je     0x4223f1
  4223b2:	pop    esi
  4223b3:	sub    ebx,DWORD PTR [edx+esi*1-0x68]
  4223b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4223b8:	pusha  
  4223b9:	sbb    al,0x22
  4223bb:	inc    esp
  4223bc:	cli    
  4223bd:	jb     0x42234a
  4223bf:	mov    BYTE PTR [ebx],bl
  4223c1:	xchg   bx,ax
  4223c3:	or     BYTE PTR cs:[edx+0x1a461c39],0x1d
  4223cb:	jno    0x422402
  4223cd:	scas   al,BYTE PTR es:[edi]
  4223ce:	clc    
  4223cf:	xor    ebp,DWORD PTR [edi-0x20]
  4223d2:	xchg   ebx,eax
  4223d3:	inc    esi
  4223d4:	popf   
  4223d5:	xlat   BYTE PTR ds:[ebx]
  4223d6:	imul   esi,DWORD PTR [ecx-0x6f],0x7d32d48a
  4223dd:	fstp   TBYTE PTR [edi-0x8aeb471]
  4223e3:	imul   ecx,DWORD PTR [ebx+0x7e446ce3],0xffffffef
  4223ea:	stos   DWORD PTR es:[edi],eax
  4223eb:	out    0x4,eax
  4223ed:	lods   eax,DWORD PTR ds:[esi]
  4223ee:	pop    edx
  4223ef:	cmp    edi,DWORD PTR [edi+ecx*8]
  4223f2:	outs   dx,BYTE PTR ds:[esi]
  4223f3:	call   0xa68b:0xce392289
  4223fa:	xor    al,0x4c
  4223fc:	mov    al,ds:0x61266e56
  422401:	imul   ecx,DWORD PTR [edx+0x7270505f],0xcb4553a0
  42240b:	shl    DWORD PTR [ecx],cl
  42240d:	int    0x13
  42240f:	pop    ss
  422410:	adc    dh,BYTE PTR [edi]
  422412:	and    al,ah
  422414:	scas   eax,DWORD PTR es:[edi]
  422415:	fistp  WORD PTR [ecx]
  422417:	gs inc eax
  422419:	leave  
  42241a:	jns    0x4223bc
  42241c:	outs   dx,DWORD PTR ds:[esi]
  42241d:	push   esi
  42241e:	xchg   ebx,eax
  42241f:	arpl   WORD PTR [eax-0x17],di
  422422:	in     eax,dx
  422423:	or     eax,0xdd44d24d
  422428:	add    al,BYTE PTR [ecx-0x157c2674]
  42242e:	aaa    
  42242f:	arpl   bx,sp
  422431:	out    dx,al
  422432:	aas    
  422433:	xor    ebp,0x45
  422436:	pop    esp
  422437:	sub    esi,DWORD PTR [edx+0x13]
  42243a:	rcr    esp,0x40
  42243d:	or     ch,BYTE PTR [eax+0x23]
  422440:	pushf  
  422441:	ss out 0x5b,eax
  422444:	push   edi
  422445:	(bad)  
  422446:	push   ss
  422447:	jecxz  0x422437
  422449:	inc    esi
  42244a:	icebp  
  42244b:	jge    0x4223dd
  42244d:	rcl    DWORD PTR [ebx-0xc],1
  422450:	lods   al,BYTE PTR ds:[esi]
  422451:	sti    
  422452:	push   ecx
  422453:	jge    0x4223e3
  422455:	jnp    0x4224ae
  422457:	push   0x9
  422459:	cmp    esi,0x9a42311a
  42245f:	jbe    0x4224ae
  422461:	or     dl,BYTE PTR ds:0x6990a930
  422467:	addr16 push 0x39
  42246a:	jle    0x4224a3
  42246c:	inc    DWORD PTR [ecx]
  42246e:	ds mov dh,0xd6
  422471:	inc    ebp
  422472:	addr16 ror bh,0xd1
  422476:	sub    cl,ch
  422478:	aad    0x9e
  42247a:	out    0xf8,eax
  42247c:	loop   0x422426
  42247e:	test   eax,0x5c150763
  422483:	(bad)  
  422484:	in     eax,dx
  422485:	rol    DWORD PTR ds:0x34c4bda,cl
  42248b:	scas   al,BYTE PTR es:[edi]
  42248c:	pop    eax
  42248d:	jle    0x4224e6
  42248f:	push   ebx
  422490:	jge    0x42247a
  422492:	or     eax,0x4a96b659
  422497:	test   eax,0xa8891ec7
  42249c:	ds stos DWORD PTR es:[edi],eax
  42249e:	out    dx,al
  42249f:	add    al,0xec
  4224a1:	push   edx
  4224a2:	and    al,0x6d
  4224a4:	lods   eax,DWORD PTR ds:[esi]
  4224a5:	mov    edi,0x9cc54567
  4224aa:	fnstenv [ebx+0x6c]
  4224ad:	scas   al,BYTE PTR es:[edi]
  4224ae:	inc    esi
  4224af:	or     al,0xb1
  4224b1:	(bad)  
  4224b2:	and    al,0x56
  4224b4:	mov    DWORD PTR [eax+ebp*4-0x7f690abf],esi
  4224bb:	adc    BYTE PTR [ebx-0x446b9d1e],cl
  4224c1:	in     eax,0xf9
  4224c3:	mov    ebx,0x1616173a
  4224c8:	mov    ebp,0x15570260
  4224cd:	jbe    0x42253e
  4224cf:	mov    ss,ebx
  4224d1:	jnp    0x422545
  4224d3:	(bad)  [edx+0x4c646477]
  4224d9:	cdq    
  4224da:	aad    0x26
  4224dc:	cdq    
  4224dd:	jecxz  0x422551
  4224df:	inc    edi
  4224e0:	adc    eax,0x65cb1bd0
  4224e5:	cld    
  4224e6:	into   
  4224e7:	(bad)  
  4224e8:	jmp    0x4224ae
  4224ea:	daa    
  4224eb:	jmp    0xa347:0x6ed7ff9b
  4224f2:	push   ds
  4224f3:	repz je 0x422504
  4224f6:	xlat   BYTE PTR ds:[ebx]
  4224f7:	in     eax,0x9b
  4224f9:	data16 jbe 0x422546
  4224fc:	mov    esp,0x4340ea76
  422501:	pop    edi
  422502:	js     0x42253a
  422504:	sub    al,0x5a
  422506:	in     al,0xf4
  422508:	fsub   DWORD PTR [ebx]
  42250a:	and    bl,dh
  42250c:	xchg   esp,eax
  42250d:	pop    ss
  42250e:	inc    ecx
  42250f:	mov    WORD PTR [esi+0x6e8ab10],gs
  422515:	dec    edi
  422516:	fdiv   DWORD PTR [ebp-0x75]
  422519:	push   cs
  42251a:	inc    ebp
  42251b:	mov    ebp,edx
  42251d:	stos   DWORD PTR es:[edi],eax
  42251e:	nop
  42251f:	call   DWORD PTR [edi]
  422521:	adc    DWORD PTR ds:0xcbbe49c8,0xffffffa1
  422528:	ret    0xc950
  42252b:	icebp  
  42252c:	add    eax,0xcc2b446b
  422531:	aad    0xb4
  422533:	cld    
  422534:	lods   al,BYTE PTR ds:[esi]
  422535:	not    BYTE PTR [ebp+eiz*2+0x27]
  422539:	das    
  42253a:	or     BYTE PTR [ebx+eiz*1],dl
  42253d:	imul   ebx,DWORD PTR [ebx],0x80b92917
  422543:	or     ch,BYTE PTR ds:0xa122aac7
  422549:	pop    edi
  42254a:	in     eax,0xc6
  42254c:	mov    ds:0xe430c8e1,eax
  422551:	xor    al,0x54
  422553:	pop    esp
  422554:	test   DWORD PTR [edx+ebp*1+0x53],ebx
  422558:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422559:	fucom  st(2)
  42255b:	xor    DWORD PTR [edi*8-0x610b2f33],0x30
  422563:	push   esi
  422564:	ins    BYTE PTR es:[edi],dx
  422565:	fcmovnb st,st(3)
  422567:	jmp    0x42258a
  422569:	das    
  42256a:	inc    eax
  42256b:	jns    0x4225b9
  42256d:	shr    ebx,1
  42256f:	fbstp  TBYTE PTR [ecx+0x7cf9611d]
  422575:	jno    0x42251b
  422577:	mov    ebp,0x8b32ce99
  42257c:	cld    
  42257d:	xor    ch,cl
  42257f:	add    eax,0x6e185b18
  422584:	sub    cl,0x2e
  422587:	fs push ds
  422589:	xchg   BYTE PTR [edi-0x3d415531],cl
  42258f:	or     eax,0x2dd7906a
  422594:	leave  
  422595:	and    ebx,esi
  422597:	push   ebx
  422598:	sbb    ch,BYTE PTR [eax+0x341cabb6]
  42259e:	add    al,0x9c
  4225a0:	push   ds
  4225a1:	(bad)  
  4225a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225a3:	mov    al,0xa4
  4225a5:	in     al,0x35
  4225a7:	data16 jbe 0x4225a9
  4225aa:	and    eax,esi
  4225ac:	pop    ebx
  4225ad:	in     al,dx
  4225ae:	adc    esp,DWORD PTR [ebx]
  4225b0:	mov    eax,ds:0x3423cc93
  4225b5:	ins    DWORD PTR es:[edi],dx
  4225b6:	cli    
  4225b7:	outs   dx,DWORD PTR ds:[esi]
  4225b8:	mov    BYTE PTR [esi],bh
  4225ba:	xchg   edx,eax
  4225bb:	(bad)  
  4225bc:	jmp    0x7b489b93
  4225c1:	pop    edx
  4225c2:	inc    esi
  4225c3:	arpl   WORD PTR [ebx+0x4803f2a7],dx
  4225c9:	sti    
  4225ca:	test   al,0xc0
  4225cc:	and    esp,ebp
  4225ce:	push   esi
  4225cf:	popa   
  4225d0:	xor    al,0xa
  4225d2:	nop
  4225d3:	or     al,BYTE PTR [ebx+ecx*4+0x17cdf130]
  4225da:	jae    0x422632
  4225dc:	xor    BYTE PTR [ebp+ecx*4+0x9d5160c],0x64
  4225e4:	fst    QWORD PTR [edx+ecx*4]
  4225e7:	sbb    bh,BYTE PTR [eax+0x6cd67bff]
  4225ed:	imul   esi,DWORD PTR [edx+ecx*1+0x21857198],0xffffffbf
  4225f5:	push   0xe29182ba
  4225fa:	(bad)  
  4225fb:	dec    ebp
  4225fc:	or     eax,0xe306c603
  422601:	aam    0xb6
  422603:	jo     0x4225d2
  422605:	mov    cl,0x9c
  422607:	outs   dx,DWORD PTR ds:[esi]
  422609:	or     eax,0xcf56917e
  42260e:	(bad)  
  42260f:	int    0x7a
  422611:	cmp    bl,0x1b
  422614:	jmp    0xbf3a5cb0
  422619:	leave  
  42261a:	out    0x48,eax
  42261c:	jmp    0x5ecd:0xe7a79540
  422623:	jae    0x4225fd
  422625:	lea    ecx,[ebx-0x2ef1977b]
  42262b:	xor    BYTE PTR [edi+0x70f6c93],ch
  422631:	hlt    
  422632:	int3   
  422633:	ins    DWORD PTR es:[edi],dx
  422634:	sbb    esi,edx
  422636:	shl    BYTE PTR [ecx+0x3e],0x99
  42263a:	xchg   BYTE PTR [ecx-0x25ddebc9],dh
  422640:	xchg   esi,eax
  422641:	sub    esp,ebp
  422643:	xor    BYTE PTR [eax],bh
  422645:	sbb    al,0xa3
  422647:	iret   
  422648:	and    al,0x62
  42264a:	(bad)  
  42264b:	inc    DWORD PTR [esi-0x97853eb]
  422651:	and    al,0x78
  422653:	cmp    ch,BYTE PTR [edi+0x5fcbf733]
  422659:	push   eax
  42265a:	stos   BYTE PTR es:[edi],al
  42265b:	ja     0x4225f3
  42265d:	mov    bl,0xc5
  42265f:	mov    ah,0xd1
  422661:	mov    dl,0xb8
  422663:	rol    DWORD PTR [edi-0x7f],1
  422666:	fisttp QWORD PTR [eax+0xb]
  422669:	dec    ecx
  42266a:	loope  0x4226a4
  42266c:	jp     0x42260c
  42266e:	popa   
  42266f:	out    0xe9,al
  422671:	xchg   DWORD PTR [esi],esi
  422673:	add    eax,0x61125081
  422678:	rcr    bh,cl
  42267a:	xchg   BYTE PTR [ecx],bh
  42267c:	cmp    esi,esi
  42267e:	jl     0x422605
  422680:	xor    DWORD PTR [ecx-0x3b9e10d],esi
  422686:	in     eax,dx
  422687:	(bad)  
  422688:	arpl   WORD PTR [edx+0x3f],ax
  42268b:	mov    BYTE PTR [eax-0x6d],cl
  42268e:	in     al,0xb7
  422690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422691:	xchg   esp,eax
  422692:	je     0x4226f0
  422694:	jbe    0x4226de
  422696:	adc    esp,edi
  422698:	(bad)  
  422699:	push   edx
  42269a:	icebp  
  42269b:	xor    DWORD PTR [ecx-0xeb76280],edi
  4226a1:	les    ecx,FWORD PTR [esi]
  4226a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226a4:	call   0x9533c797
  4226a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226aa:	jo     0x4226ca
  4226ac:	sub    edi,edi
  4226ae:	out    dx,eax
  4226af:	cmp    BYTE PTR [esi+ebx*4],dh
  4226b2:	xlat   BYTE PTR ds:[ebx]
  4226b3:	cmp    ecx,DWORD PTR [ecx+0x11]
  4226b6:	mov    WORD PTR ds:0x20a7de78,fs
  4226bc:	ins    DWORD PTR es:[edi],dx
  4226bd:	and    dl,BYTE PTR [edi+0x58]
  4226c0:	mov    cl,0x1c
  4226c2:	aas    
  4226c3:	inc    edx
  4226c4:	sub    BYTE PTR [ecx-0x7c],dl
  4226c7:	cli    
  4226c8:	pop    ss
  4226c9:	mov    esp,0x83a9e350
  4226ce:	fwait
  4226cf:	jns    0x4226a1
  4226d1:	loopne 0x4226b5
  4226d3:	or     cl,BYTE PTR [edi+esi*4-0x6c8a8c31]
  4226da:	fsubrp st(6),st
  4226dc:	dec    ecx
  4226dd:	int3   
  4226de:	sub    cl,BYTE PTR [edi-0x78]
  4226e1:	int    0xf
  4226e3:	sbb    BYTE PTR [edi-0x6dca8c11],0x7f
  4226ea:	dec    edi
  4226eb:	jp     0x42266d
  4226ed:	sub    eax,0xdc95b400
  4226f2:	cmp    BYTE PTR ds:0x91572c96,ch
  4226f8:	imul   eax,DWORD PTR [ebx-0x717018e7],0xffffff81
  4226ff:	cmp    DWORD PTR [esi+0x3d],esp
  422702:	loopne 0x422768
  422704:	pinsrw mm2,WORD PTR [ecx+eiz*8-0x48c4f2b3],0xd0
  42270d:	cwde   
  42270e:	sbb    al,0x5b
  422710:	aas    
  422711:	mov    ds:0xc28c69d9,eax
  422716:	jmp    DWORD PTR [esi+ebp*2-0x270f4e3d]
  42271d:	ja     0x4226f0
  42271f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422720:	jns    0x42277a
  422722:	test   DWORD PTR [ebp+eax*1-0x48ce97e0],esp
  422729:	outs   dx,DWORD PTR ds:[esi]
  42272a:	pop    edx
  42272b:	fadd   QWORD PTR [edi-0x63]
  42272e:	push   0x661136f7
  422733:	adc    eax,0x84f15c6c
  422738:	js     0x422768
  42273a:	mov    al,0xe7
  42273c:	into   
  42273d:	push   ds
  42273e:	pusha  
  42273f:	pop    edi
  422740:	iret   
  422741:	sub    BYTE PTR [esi+0xe],0xf5
  422745:	inc    ebx
  422746:	data16 sub al,0x88
  422749:	add    edi,edx
  42274b:	jp     0x4226f9
  42274d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42274e:	arpl   WORD PTR [eax-0x6b],bx
  422751:	sub    al,0x3f
  422753:	sbb    al,0xee
  422755:	(bad)  
  422756:	repnz fisub WORD PTR [ebx+0x3e1eb730]
  42275d:	cmp    al,BYTE PTR [ebx+0x521980da]
  422763:	inc    DWORD PTR ds:0x20a86705
  422769:	pusha  
  42276a:	aad    0x76
  42276c:	push   es
  42276d:	call   0x31df:0xb35d76f
  422774:	inc    edx
  422775:	jg     0x4227be
  422777:	jmp    0x42274f
  422779:	add    ch,ch
  42277b:	mul    BYTE PTR [ecx-0x2]
  42277e:	dec    edi
  42277f:	stc    
  422780:	sbb    DWORD PTR [edx-0x56],esp
  422783:	xchg   edi,eax
  422784:	scas   al,BYTE PTR es:[edi]
  422785:	adc    BYTE PTR [esi+0x13fd49d2],cl
  42278b:	retf   0x6d3c
  42278e:	(bad)  
  42278f:	cdq    
  422790:	dec    ebp
  422791:	sub    eax,0xe74e4546
  422796:	cmp    edi,esp
  422798:	push   esp
  422799:	or     BYTE PTR [esi+edi*1],0x94
  42279d:	test   al,0xd5
  42279f:	fidiv  DWORD PTR [eax+0x9]
  4227a2:	dec    esi
  4227a3:	scas   eax,DWORD PTR es:[edi]
  4227a4:	mov    esi,0xe84cadd
  4227a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227aa:	dec    eax
  4227ab:	ja     0x422770
  4227ad:	in     eax,dx
  4227ae:	push   0x80912d9c
  4227b3:	scas   al,BYTE PTR es:[edi]
  4227b4:	(bad)  
  4227b5:	repnz xor DWORD PTR [edi],0x306f399
  4227bc:	xor    al,0xc5
  4227be:	mov    ebx,0x593fe0e6
  4227c3:	(bad)  
  4227c4:	pop    edi
  4227c5:	sbb    ah,BYTE PTR [ebp-0x2b856666]
  4227cb:	or     eax,0x45829f1c
  4227d0:	aad    0x1a
  4227d2:	inc    edx
  4227d3:	adc    al,0x5f
  4227d5:	stc    
  4227d6:	stc    
  4227d7:	adc    eax,0x1ecaca19
  4227dc:	push   esi
  4227dd:	mov    bh,0x27
  4227df:	(bad)  
  4227e0:	imul   edi,edx,0x3524de44
  4227e6:	stos   DWORD PTR es:[edi],eax
  4227e7:	mov    ds:0x8399f0e9,al
  4227ec:	mov    ch,BYTE PTR [ebp+0x46]
  4227ef:	pop    es
  4227f0:	mov    bh,0xf7
  4227f2:	sub    BYTE PTR [edi-0x25],dl
  4227f5:	ins    DWORD PTR es:[edi],dx
  4227f6:	js     0x42285c
  4227f8:	sub    DWORD PTR [edi],esi
  4227fa:	pop    eax
  4227fb:	out    0x2f,al
  4227fd:	mov    ebx,0xfe0cdc8c
  422802:	push   es
  422803:	xchg   ebp,eax
  422804:	call   0x9fd1d741
  422809:	enter  0xe1ce,0x1f
  42280d:	xchg   ecx,eax
  42280e:	les    esi,FWORD PTR [esi+0x179f146d]
  422814:	ret    0x64a0
  422817:	pop    ecx
  422818:	ret    
  422819:	(bad)  
  42281a:	mov    ah,0x28
  42281c:	(bad)  
  42281d:	pusha  
  42281e:	(bad)  
  422820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422821:	hlt    
  422822:	out    0x88,al
  422824:	inc    ebp
  422825:	push   eax
  422826:	test   al,0xc3
  422828:	inc    esp
  422829:	push   ebx
  42282a:	mov    al,ds:0xa72257b7
  42282f:	sub    cl,0xe1
  422832:	lahf   
  422833:	pop    ecx
  422834:	test   DWORD PTR [ecx+esi*1+0x58],ecx
  422838:	lea    edi,[ebx-0x19]
  42283b:	adc    esi,DWORD PTR [eax+0x12d0680f]
  422841:	in     eax,0x1
  422843:	or     eax,DWORD PTR [edx+0x7b]
  422846:	jbe    0x42286c
  422848:	sub    DWORD PTR [edx],eax
  42284a:	shl    BYTE PTR [ebp+ecx*8+0x78b4ffa],0xe1
  422852:	push   ebx
  422853:	leave  
  422854:	cmp    ah,BYTE PTR [ecx]
  422856:	push   ebp
  422857:	mov    BYTE PTR [ebx-0x79],ch
  42285a:	and    BYTE PTR [ebp-0x2a935baf],ch
  422860:	je     0x422812
  422862:	sbb    BYTE PTR [edi],bh
  422864:	arpl   WORD PTR [ebp+0x50],sp
  422867:	and    eax,0x2c79fe14
  42286c:	xchg   esp,eax
  42286d:	ds (bad) 
  42286f:	in     al,dx
  422870:	mov    edx,0x548775b7
  422875:	add    BYTE PTR [ebx+0x206cc7e],al
  42287b:	retf   
  42287c:	or     al,0xad
  42287e:	shl    BYTE PTR [edx+0x73],1
  422881:	mov    ecx,0x96f0185f
  422886:	fprem  
  422888:	pop    ds
  422889:	mov    esp,0x72bab9f3
  42288e:	adc    al,0x84
  422890:	sbb    ecx,DWORD PTR [edi+0x7e]
  422893:	jo     0x42283f
  422895:	pop    esp
  422896:	inc    ebp
  422897:	mov    edi,0xe3ecc217
  42289c:	jns    0x4228f1
  42289e:	les    edi,FWORD PTR [edx]
  4228a0:	jp     0x422884
  4228a2:	test   eax,0xe1c68f68
  4228a7:	dec    esp
  4228a8:	retf   
  4228a9:	add    DWORD PTR [esp+edi*1],ebp
  4228ac:	push   ecx
  4228ad:	sar    DWORD PTR [edx-0x3015f4b7],cl
  4228b3:	sub    al,BYTE PTR [ebx]
  4228b5:	cmp    BYTE PTR [edx+0x54],0xd5
  4228b9:	cli    
  4228ba:	sub    al,0xa6
  4228bc:	adc    esi,0xffffff8a
  4228bf:	lods   al,BYTE PTR ds:[esi]
  4228c0:	xchg   ecx,eax
  4228c1:	pop    esp
  4228c2:	mov    al,ds:0xae9026ce
  4228c7:	adc    al,0xec
  4228c9:	add    eax,0xf087711a
  4228ce:	psubw  mm7,QWORD PTR [ebx]
  4228d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228d2:	int    0xde
  4228d4:	inc    ecx
  4228d5:	jmp    0x422864
  4228d7:	lods   eax,DWORD PTR ds:[esi]
  4228d8:	xchg   edx,eax
  4228d9:	add    DWORD PTR [esi+0x9],ebx
  4228dc:	mov    eax,0xf26893a7
  4228e1:	jmp    0x422912
  4228e3:	dec    ecx
  4228e4:	ds jmp 0x4228db
  4228e7:	lea    edx,[ebx]
  4228e9:	fadd   st,st(4)
  4228eb:	(bad)  
  4228ec:	jo     0x42293e
  4228ee:	dec    edx
  4228ef:	fwait
  4228f0:	jp     0x4228e9
  4228f2:	push   ds
  4228f3:	dec    esp
  4228f4:	mov    cl,0x23
  4228f6:	hlt    
  4228f7:	in     eax,0x94
  4228f9:	sub    BYTE PTR [eax-0x13ad558a],cl
  4228ff:	pusha  
  422900:	faddp  st(1),st
  422902:	dec    ebx
  422903:	mov    esi,0x2e2363ea
  422908:	push   0x49
  42290a:	(bad)  
  42290b:	mov    cl,0xfe
  42290d:	inc    edx
  42290e:	hlt    
  42290f:	push   ss
  422910:	push   cs
  422911:	pop    esp
  422912:	popf   
  422913:	test   al,0xaf
  422915:	mov    bl,0x30
  422917:	cmc    
  422918:	inc    esp
  422919:	repnz pop eax
  42291b:	test   eax,0xcd3fca7a
  422920:	ret    
  422921:	(bad)  
  422922:	adc    eax,0x66eb6305
  422927:	push   es
  422928:	add    eax,DWORD PTR ds:0xe90761ca
  42292e:	outs   dx,BYTE PTR ds:[esi]
  42292f:	in     al,dx
  422930:	add    BYTE PTR [edi-0x51d270ee],dh
  422936:	and    bh,BYTE PTR [ebx-0x25]
  422939:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42293a:	jbe    0x4228dd
  42293c:	ins    BYTE PTR es:[edi],dx
  42293d:	aam    0xb1
  42293f:	je     0x42296a
  422941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422942:	mov    al,BYTE PTR [ebx+0xc797af0]
  422948:	cmp    eax,0x190f1df4
  42294d:	retf   0x4748
  422950:	mov    esi,0x671a01ca
  422955:	inc    esi
  422956:	dec    ecx
  422957:	dec    ebx
  422958:	or     DWORD PTR [edi],0x13
  42295b:	cdq    
  42295c:	push   0xa9190d21
  422961:	adc    eax,ebp
  422963:	rcr    DWORD PTR [esi-0x3b0f842b],0x92
  42296a:	lock loope 0x4229b2
  42296d:	xchg   ecx,eax
  42296e:	stos   BYTE PTR es:[edi],al
  42296f:	add    cl,dl
  422971:	cmc    
  422972:	xchg   ebx,eax
  422973:	mov    bh,0x30
  422975:	push   ds
  422976:	add    al,0x62
  422978:	idiv   BYTE PTR ds:[edi]
  42297b:	xchg   al,cl
  42297d:	adc    eax,0x4ae7b3da
  422982:	xchg   ebx,eax
  422983:	iret   
  422984:	xor    ah,BYTE PTR [ecx+0x129eb4c9]
  42298a:	scas   eax,DWORD PTR es:[edi]
  42298b:	je     0x4229bb
  42298d:	inc    esi
  42298e:	pusha  
  42298f:	cmc    
  422990:	aam    0xec
  422992:	mov    eax,ds:0x433d27b4
  422997:	pop    edx
  422998:	xchg   ebx,eax
  422999:	scas   eax,DWORD PTR es:[edi]
  42299a:	sbb    DWORD PTR [eax-0x6f1e11ef],esi
  4229a0:	arpl   ax,cx
  4229a2:	xchg   esi,eax
  4229a3:	(bad)  
  4229a5:	sti    
  4229a6:	rol    BYTE PTR [edx],1
  4229a8:	xor    al,0x2f
  4229aa:	xor    ecx,ecx
  4229ac:	xor    eax,0x17af7dbb
  4229b1:	xchg   edi,eax
  4229b2:	xor    dh,ch
  4229b4:	inc    edx
  4229b5:	push   ebx
  4229b6:	pop    edi
  4229b7:	xlat   BYTE PTR ds:[ebx]
  4229b8:	test   BYTE PTR [esi],ah
  4229ba:	js     0x42295e
  4229bc:	pop    esp
  4229bd:	popf   
  4229be:	sub    edx,ecx
  4229c0:	xlat   BYTE PTR ds:[ebx]
  4229c1:	lahf   
  4229c2:	mov    ebp,0x7ee095a
  4229c7:	push   ebx
  4229c8:	test   bh,ch
  4229ca:	and    edi,DWORD PTR [eax+0x2c]
  4229cd:	adc    esi,ebx
  4229cf:	jl     0x42295a
  4229d1:	mov    al,0x1a
  4229d3:	mov    ecx,0x9a0d5329
  4229d8:	and    BYTE PTR [edx-0x7b7323c1],dh
  4229de:	xchg   esi,eax
  4229df:	aaa    
  4229e0:	jecxz  0x4229f7
  4229e2:	push   edx
  4229e3:	fiadd  DWORD PTR [eax-0x2a]
  4229e6:	pop    edi
  4229e7:	sbb    eax,0x4d4c6490
  4229ec:	add    al,0xcc
  4229ee:	js     0x4229ef
  4229f0:	dec    edx
  4229f1:	sub    BYTE PTR [ebx+0x1f0b2e82],bh
  4229f7:	xchg   ebp,eax
  4229f9:	push   edx
  4229fa:	pusha  
  4229fb:	imul   ebp,DWORD PTR [ebp-0x263655cc],0x4e4c5dcf
  422a05:	dec    esp
  422a06:	lods   eax,DWORD PTR ds:[esi]
  422a07:	adc    eax,0x4acc7f48
  422a0c:	call   0xfbe9:0x945a
  422a12:	cmp    ch,BYTE PTR [esi]
  422a14:	ret    
  422a15:	je     0x4229dd
  422a17:	sahf   
  422a18:	lock scas eax,DWORD PTR es:[edi]
  422a1a:	or     BYTE PTR [edx-0x44],ah
  422a1d:	pusha  
  422a1e:	mov    eax,0x93169a02
  422a23:	xchg   ebp,eax
  422a24:	sub    bl,BYTE PTR [eax-0x26249393]
  422a2a:	lods   al,BYTE PTR ds:[esi]
  422a2b:	scas   al,BYTE PTR es:[edi]
  422a2c:	shr    DWORD PTR [eax-0x4748edd5],cl
  422a32:	icebp  
  422a33:	pop    eax
  422a34:	pushf  
  422a35:	pop    eax
  422a36:	pop    esp
  422a37:	xor    edi,DWORD PTR [edi]
  422a39:	jmp    0xbb764e09
  422a3e:	push   eax
  422a3f:	dec    edi
  422a40:	push   ebx
  422a41:	aad    0xe9
  422a43:	out    dx,al
  422a44:	sbb    esp,DWORD PTR [ecx+0x2e]
  422a47:	sar    DWORD PTR [esi-0x3b423060],cl
  422a4d:	xlat   BYTE PTR ds:[ebx]
  422a4e:	jmp    0x422a85
  422a50:	jnp    0x4229dd
  422a52:	add    dl,bl
  422a54:	(bad)  [edi+ebp*4]
  422a57:	xor    bh,dl
  422a59:	scas   eax,DWORD PTR es:[edi]
  422a5a:	cmc    
  422a5b:	stc    
  422a5c:	jmp    0xa536:0x9fe20273
  422a63:	dec    edx
  422a64:	push   0x17
  422a66:	in     al,dx
  422a67:	stos   DWORD PTR es:[edi],eax
  422a68:	fld    QWORD PTR [ecx+edi*4+0x5f]
  422a6c:	adc    al,0x7c
  422a6e:	div    dl
  422a70:	mov    edx,0xaae0f8fe
  422a75:	xor    eax,0x8ca2c8ba
  422a7a:	xor    cl,BYTE PTR ds:0x911ca7d6
  422a80:	xor    BYTE PTR [esi],dh
  422a82:	add    DWORD PTR [ecx-0x4f],esi
  422a85:	sbb    BYTE PTR [ebx-0x3d7a5e2a],ah
  422a8b:	xchg   esi,edi
  422a8d:	sub    eax,0xba232d70
  422a92:	mov    al,ds:0x461072d2
  422a97:	dec    ebp
  422a98:	nop
  422a99:	pop    esp
  422a9a:	cdq    
  422a9b:	test   eax,0x2abf41c2
  422aa0:	jp     0x422ac6
  422aa2:	fld    QWORD PTR [edx]
  422aa4:	fst    st(1)
  422aa6:	jo     0x422a80
  422aa8:	jg     0x422aad
  422aaa:	test   al,0xf1
  422aac:	mov    edx,0x8eeae9d1
  422ab1:	out    0x11,al
  422ab3:	pop    ebx
  422ab4:	scas   eax,DWORD PTR es:[edi]
  422ab5:	sbb    bl,ah
  422ab7:	xchg   BYTE PTR [ebx],ch
  422ab9:	inc    edx
  422aba:	pop    ebx
  422abb:	leave  
  422abc:	cmp    bl,BYTE PTR [esi]
  422abe:	out    0xc,eax
  422ac0:	or     BYTE PTR [ecx+0x28e19ed1],bh
  422ac6:	fucompp 
  422ac8:	imul   esp,DWORD PTR [ecx-0x227d686b],0xffffff8d
  422acf:	gs pop esi
  422ad1:	jle    0x422b1b
  422ad3:	fnsave [ebx-0x88f02c4]
  422ad9:	dec    ebx
  422ada:	in     al,dx
  422adb:	test   al,0x1e
  422add:	mov    cl,0x55
  422adf:	dec    eax
  422ae0:	out    0x39,eax
  422ae2:	or     eax,0x1dc94052
  422ae7:	scas   al,BYTE PTR es:[edi]
  422ae8:	add    DWORD PTR ds:0x8c9a5b7d,ecx
  422aee:	mov    ecx,DWORD PTR [ebx+0x40]
  422af1:	mov    WORD PTR [ebx],?
  422af3:	inc    edx
  422af4:	fcom   QWORD PTR [ecx+0x52]
  422af7:	into   
  422af8:	and    DWORD PTR [ebx+0x74],0x9e18c852
  422aff:	jnp    0x422adb
  422b01:	mov    ebx,0x348cdce
  422b06:	pop    ebp
  422b07:	push   eax
  422b08:	pop    ebx
  422b09:	out    0x6a,eax
  422b0b:	call   0xfe1b88a8
  422b10:	out    0xed,al
  422b12:	xchg   esi,eax
  422b13:	pop    ecx
  422b14:	pop    ebx
  422b15:	jno    0x422ae0
  422b17:	jbe    0x422b6c
  422b19:	nop
  422b1a:	(bad)  
  422b1b:	xor    DWORD PTR [edi-0x33],esp
  422b1e:	lods   al,BYTE PTR ds:[esi]
  422b1f:	popa   
  422b20:	cmp    BYTE PTR [eax],ch
  422b22:	mov    esi,0xce389242
  422b27:	popa   
  422b28:	les    ebp,FWORD PTR [eax+0x3869315b]
  422b2e:	scas   eax,DWORD PTR es:[edi]
  422b2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b30:	sbb    dl,BYTE PTR [esi-0x7c]
  422b33:	push   ss
  422b34:	dec    esi
  422b35:	mov    edi,DWORD PTR [eax]
  422b37:	outs   dx,BYTE PTR ds:[esi]
  422b38:	push   0x6d990e54
  422b3d:	inc    esp
  422b3e:	jmp    0x940502
  422b43:	sub    bh,BYTE PTR [edi+0x4c]
  422b46:	sub    DWORD PTR [ebp+edx*1+0xbb239ce],edi
  422b4d:	out    0x6f,eax
  422b4f:	aas    
  422b50:	dec    esi
  422b51:	mov    ds:0x13234aaa,eax
  422b56:	stc    
  422b57:	sub    DWORD PTR [esp+esi*2],eax
  422b5a:	and    ecx,0xb32c66f0
  422b60:	(bad)  
  422b61:	push   ss
  422b62:	fnstsw WORD PTR es:[esi+0x22]
  422b66:	out    dx,al
  422b67:	add    ah,BYTE PTR [edi+0x440f18b]
  422b6d:	mov    al,0xf0
  422b6f:	xor    DWORD PTR [ecx-0x4096a65],ecx
  422b75:	and    eax,0xb1f5a5ce
  422b7a:	(bad)  [esi+0x53f47e2d]
  422b80:	xchg   DWORD PTR [esi-0x1a],edx
  422b83:	shl    DWORD PTR [esi],0x4b
  422b86:	mov    edx,0x5c859267
  422b8b:	inc    esp
  422b8c:	mov    ds:0x53286461,eax
  422b91:	lds    ecx,FWORD PTR [edx]
  422b93:	stc    
  422b94:	mov    eax,0x2ae7fb58
  422b99:	push   cs
  422b9a:	mov    edx,0x11a0fa79
  422b9f:	jnp    0x422be5
  422ba1:	test   BYTE PTR [eax+0x7c],0xe1
  422ba5:	cld    
  422ba6:	lea    esi,[ebx-0x4bd47f82]
  422bac:	aad    0xa4
  422bae:	and    al,0x41
  422bb0:	xchg   ecx,eax
  422bb1:	mov    esp,0x18814559
  422bb6:	mov    ecx,0x966700d1
  422bbb:	sub    al,0xeb
  422bbd:	aad    0x2e
  422bbf:	sub    DWORD PTR [eax-0x9f0e2ef],esi
  422bc5:	ss popf 
  422bc7:	je     0x422c18
  422bc9:	xchg   ebp,eax
  422bca:	rol    DWORD PTR [ecx-0x25],0x0
  422bce:	(bad)  
  422bcf:	push   0xffffffa9
  422bd1:	mov    BYTE PTR [esp+edi*8-0x62],bh
  422bd5:	jb     0x422be8
  422bd7:	xor    DWORD PTR [edi],ecx
  422bd9:	std    
  422bda:	cmp    ebx,DWORD PTR [esi+0x5f]
  422bdd:	xor    BYTE PTR [eax],0xa
  422be0:	xlat   BYTE PTR ds:[ebx]
  422be1:	daa    
  422be2:	pushf  
  422be3:	mov    al,ds:0xf0a1d885
  422be8:	sbb    al,0xaf
  422bea:	ret    0xc0c8
  422bed:	popa   
  422bee:	sbb    BYTE PTR [ebx-0x62],dl
  422bf1:	fs mov ch,0x59
  422bf4:	popf   
  422bf5:	xchg   esi,eax
  422bf6:	ja     0x422c01
  422bf8:	sahf   
  422bf9:	test   BYTE PTR [edx+edx*1],bl
  422bfc:	xchg   esp,eax
  422bfd:	add    DWORD PTR [ebx-0x5b057d7c],0x9ab3de4a
  422c07:	fisttp WORD PTR [edx-0x38]
  422c0a:	xor    edx,ebp
  422c0c:	push   edi
  422c0d:	rcr    BYTE PTR [eax+esi*1-0x4d3e541a],1
  422c14:	sbb    BYTE PTR [edi+ebx*2+0x30],al
  422c18:	cmp    ebx,DWORD PTR [edi]
  422c1a:	sbb    ebp,DWORD PTR [ecx-0x5d]
  422c1d:	jecxz  0x422c0c
  422c1f:	outs   dx,DWORD PTR ds:[esi]
  422c20:	sti    
  422c21:	inc    ebx
  422c22:	push   edi
  422c23:	inc    esp
  422c24:	out    dx,eax
  422c25:	add    BYTE PTR ss:[ebp+esi*8-0x47],0x8d
  422c2b:	mov    ds:0xa4c946ad,eax
  422c30:	addr16 adc al,0x92
  422c33:	jne    0x422bbc
  422c35:	inc    ecx
  422c36:	adc    eax,0x75e0030e
  422c3b:	xchg   esi,eax
  422c3c:	aam    0x9
  422c3e:	daa    
  422c3f:	loope  0x422c57
  422c41:	jbe    0x422c70
  422c43:	adc    al,0x5f
  422c45:	mov    ds:0xa3fd2f8e,eax
  422c4a:	push   0xe80194bf
  422c4f:	and    eax,0x180489c
  422c54:	shl    ebx,0x85
  422c57:	loopne 0x422c6e
  422c59:	or     edx,DWORD PTR [eax-0x3a11a9b0]
  422c5f:	(bad)  
  422c60:	stos   BYTE PTR es:[edi],al
  422c61:	mov    bl,0xe3
  422c63:	je     0x422c3b
  422c65:	in     eax,0xc8
  422c67:	xchg   ebp,eax
  422c68:	add    eax,edx
  422c6a:	add    ebx,eax
  422c6c:	aam    0x19
  422c6e:	xchg   ebx,eax
  422c6f:	xor    al,0x5a
  422c71:	sbb    BYTE PTR [esi+eax*8],al
  422c74:	icebp  
  422c75:	mov    ds:0x8695330e,al
  422c7a:	lea    ebx,[eax]
  422c7c:	aaa    
  422c7d:	jmp    0xff4dee98
  422c82:	shl    DWORD PTR [eax-0x42],1
  422c85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c86:	sti    
  422c87:	push   ebp
  422c88:	mov    ecx,0x2395ed15
  422c8d:	dec    ecx
  422c8e:	(bad)  
  422c8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c90:	cmp    eax,0x47f99b6
  422c95:	ins    BYTE PTR es:[edi],dx
  422c96:	loop   0x422cb8
  422c98:	retf   0xb7ec
  422c9b:	bound  edi,QWORD PTR [ebp-0x510791d0]
  422ca1:	adc    edx,DWORD PTR es:[eax-0x3c9c538a]
  422ca8:	mov    bh,0x97
  422caa:	xchg   esi,eax
  422cab:	call   0xb134:0x858ffa8b
  422cb2:	rcr    DWORD PTR [ecx],0xf1
  422cb5:	and    DWORD PTR [esi+0x61],esi
  422cb8:	push   esp
  422cb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cba:	int3   
  422cbb:	jb     0x422c92
  422cbd:	xchg   ecx,eax
  422cbe:	jb     0x422ccd
  422cc0:	(bad)  
  422cc1:	sub    eax,0x52c82eea
  422cc6:	daa    
  422cc7:	fnstcw WORD PTR [ebx-0x5c]
  422cca:	push   0xffffffe0
  422ccc:	out    0x10,al
  422cce:	sub    dl,BYTE PTR [edx-0x351c8152]
  422cd4:	int3   
  422cd5:	jb     0x422c6e
  422cd7:	mov    ds:0xe4d5272,al
  422cdc:	dec    ecx
  422cdd:	leave  
  422cde:	stos   BYTE PTR es:[edi],al
  422cdf:	repz rcl DWORD PTR [ebp+0x6c18d57e],1
  422ce6:	pop    ds
  422ce7:	add    eax,0xdd4b3cde
  422cec:	repz retf 
  422cee:	enter  0x188b,0x2c
  422cf2:	mov    ?,ebp
  422cf4:	imul   eax,DWORD PTR [ecx-0x5e],0xffffff9d
  422cf8:	and    DWORD PTR [eax+edi*8-0x4f37f17c],0x6863d315
  422d03:	into   
  422d04:	or     eax,0x812b006a
  422d09:	(bad)  
  422d0a:	fdiv   DWORD PTR [edx+0x51352df7]
  422d10:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d12:	jl     0x422d1d
  422d14:	loopne 0x422d3d
  422d16:	pop    ebp
  422d17:	int3   
  422d18:	outs   dx,DWORD PTR ds:[esi]
  422d19:	mov    DWORD PTR [ecx+0x3b],esi
  422d1c:	xchg   edx,eax
  422d1d:	and    ebp,DWORD PTR [ebx+0x5c714f7]
  422d23:	push   edx
  422d24:	imul   esi,esi,0x51612830
  422d2a:	xchg   ebx,eax
  422d2b:	push   esi
  422d2c:	arpl   WORD PTR [ebp+0x330a5360],ax
  422d32:	stos   DWORD PTR es:[edi],eax
  422d33:	mov    ah,0x4c
  422d35:	or     DWORD PTR [ecx+0x5b],esi
  422d38:	daa    
  422d39:	adc    BYTE PTR [eax+0x7d],0x71
  422d3d:	retf   
  422d3e:	call   0x616c52cd
  422d43:	dec    edx
  422d44:	hlt    
  422d45:	jmp    0x422d30
  422d47:	sub    al,bl
  422d49:	test   bh,0xde
  422d4c:	xchg   DWORD PTR [edx],esi
  422d4e:	mov    al,ds:0x9663fac5
  422d53:	pop    es
  422d54:	mov    al,ss:0x639766a5
  422d5a:	dec    esi
  422d5b:	mov    WORD PTR [edi+0x637176c6],cs
  422d61:	mov    WORD PTR [ebx+0x2a],ds
  422d64:	mov    cs,WORD PTR [eax]
  422d66:	aam    0xe7
  422d68:	ja     0x422d7f
  422d6a:	push   ds
  422d6b:	fimul  DWORD PTR [eax+ebp*2-0x1dc36aec]
  422d72:	xor    BYTE PTR ss:[ebp-0x212f0b4b],cl
  422d79:	sbb    ebx,DWORD PTR [eax+0x3a9144c4]
  422d7f:	inc    edi
  422d80:	cmp    DWORD PTR [eax+eiz*4],ebx
  422d83:	iret   
  422d84:	loop   0x422e00
  422d86:	adc    BYTE PTR [eax-0x27],bl
  422d89:	mov    eax,0x468478fe
  422d8e:	and    dl,BYTE PTR [edi+0x7dd74d24]
  422d94:	retf   
  422d95:	xor    eax,0xb2b511f5
  422d9a:	inc    esp
  422d9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d9c:	xlat   BYTE PTR ds:[ebx]
  422d9d:	pop    edx
  422d9e:	jnp    0x422e00
  422da0:	sbb    eax,0xb0e08d4e
  422da5:	mov    DWORD PTR [edx-0x53],ebx
  422da8:	inc    eax
  422da9:	dec    eax
  422daa:	push   ebx
  422dab:	mov    esi,0x5fc82390
  422db0:	dec    ebx
  422db1:	ret    
  422db2:	pop    ebx
  422db3:	jno    0x422d5d
  422db5:	sub    cl,BYTE PTR [edi+0x11a94a6f]
  422dbb:	xchg   ecx,eax
  422dbc:	loope  0x422dc7
  422dbe:	jecxz  0x422e34
  422dc0:	rol    DWORD PTR [eax-0x5b],cl
  422dc3:	into   
  422dc4:	or     eax,0x4b439333
  422dc9:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  422dcb:	mov    al,BYTE PTR [eax]
  422dcd:	call   0x1233:0xa7ff560d
  422dd4:	nop
  422dd5:	xor    al,0xca
  422dd7:	loop   0x422da0
  422dd9:	pop    edx
  422dda:	mov    al,0x1b
  422ddc:	icebp  
  422ddd:	inc    ebx
  422dde:	data16 cmp al,0x5c
  422de1:	pop    eax
  422de2:	sbb    BYTE PTR [ecx-0x37],0x79
  422de6:	cmp    al,0xd7
  422de8:	mov    eax,ds:0xf2de7449
  422ded:	leave  
  422dee:	loopne 0x422e14
  422df0:	jmp    0xada:0xbf34970
  422df7:	cwde   
  422df8:	retf   0x4069
  422dfb:	mov    eax,ds:0xbcfb6e05
  422e00:	jmp    0xbf8b25de
  422e05:	int    0x28
  422e07:	mov    ebx,0x282d26e4
  422e0c:	xchg   edi,eax
  422e0d:	test   BYTE PTR [edi-0x41],bl
  422e10:	fimul  DWORD PTR [ecx]
  422e12:	cmp    eax,esi
  422e14:	inc    edx
  422e15:	xor    al,0xf7
  422e17:	cmp    DWORD PTR [ebp-0x7043a6be],edi
  422e1d:	int3   
  422e1e:	add    eax,0x5b67d4ca
  422e23:	retf   0xd9a
  422e26:	cmp    eax,0x3ae18545
  422e2b:	push   ss
  422e2c:	adc    eax,0x3a58b462
  422e31:	xchg   edi,eax
  422e32:	aas    
  422e33:	push   0x17c87836
  422e38:	mov    bh,0xab
  422e3a:	adc    al,0xae
  422e3c:	(bad)  
  422e3d:	sti    
  422e3e:	cmp    ch,BYTE PTR [esp+esi*8+0x3f]
  422e42:	inc    edi
  422e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e44:	aad    0xee
  422e46:	pop    es
  422e47:	push   ebp
  422e48:	xor    DWORD PTR [esi+0x27],0xffffffab
  422e4c:	jmp    0x533b:0x60960da1
  422e53:	(bad)  
  422e54:	icebp  
  422e55:	push   cs
  422e56:	jnp    0x422e79
  422e58:	std    
  422e59:	xlat   BYTE PTR ds:[ebx]
  422e5a:	and    ebp,esi
  422e5c:	ins    DWORD PTR es:[edi],dx
  422e5d:	iret   
  422e5e:	xchg   esi,eax
  422e5f:	mov    eax,esp
  422e61:	inc    eax
  422e62:	je     0x422e6e
  422e64:	mov    ds:0x1396716d,al
  422e69:	pop    ebp
  422e6a:	mov    ebx,DWORD PTR [eax+ebp*1]
  422e6d:	popf   
  422e6e:	repz cmp BYTE PTR [ebp-0x2d0b997d],cl
  422e75:	push   ds
  422e76:	jns    0x422ee7
  422e78:	out    0x2b,al
  422e7a:	jnp    0x422ee6
  422e7c:	push   ss
  422e7d:	fnsave [ebx]
  422e7f:	or     al,0x3
  422e81:	jg     0x422e1e
  422e83:	test   eax,0x451ba617
  422e88:	inc    ebp
  422e89:	jnp    0x422e41
  422e8b:	adc    eax,eax
  422e8d:	(bad)  
  422e8e:	cld    
  422e8f:	mov    ds:0x605f60bd,al
  422e94:	jbe    0x422f10
  422e96:	mov    ebx,DWORD PTR [esi-0x2df6f952]
  422e9c:	test   DWORD PTR [esi-0x38],ecx
  422e9f:	sbb    bh,BYTE PTR [ebx+0x60]
  422ea2:	pop    edi
  422ea3:	test   eax,0xc9d4282
  422ea8:	int    0xd5
  422eaa:	in     eax,dx
  422eab:	mov    esi,0xed381ffb
  422eb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422eb1:	inc    ebx
  422eb2:	lea    esi,[ebx]
  422eb4:	bnd ret 0xbbc9
  422eb8:	(bad)  
  422eb9:	fdivr  QWORD PTR [ebp+0x36]
  422ebc:	lock mov eax,0x3ca30cff
  422ec2:	push   ecx
  422ec3:	jno    0x422efb
  422ec5:	(bad)  
  422ec6:	in     eax,0xc7
  422ec8:	mov    ebp,0xea88e77e
  422ecd:	push   esi
  422ece:	xchg   esi,eax
  422ecf:	jge    0x422e5e
  422ed1:	inc    ecx
  422ed2:	jle    0x422ee3
  422ed4:	jb     0x422eab
  422ed6:	mov    bl,0x4c
  422ed8:	inc    edi
  422ed9:	fadd   QWORD PTR [edx]
  422edb:	(bad)  
  422edc:	clc    
  422edd:	fcom   QWORD PTR [eax]
  422edf:	retf   
  422ee0:	scas   eax,DWORD PTR es:[edi]
  422ee1:	outs   dx,DWORD PTR ds:[esi]
  422ee2:	mov    ecx,0xc9c57ebe
  422ee7:	dec    edx
  422ee8:	cmp    DWORD PTR [ebp-0x6d],0x8b220eb3
  422eef:	cmp    ah,BYTE PTR [esi-0x45]
  422ef2:	jecxz  0x422f62
  422ef4:	push   ecx
  422ef5:	cli    
  422ef6:	fs mov ecx,0xbdbf1e64
  422efc:	sub    al,0x20
  422efe:	jmp    0x65e1b17a
  422f03:	or     al,0xd2
  422f05:	fsubr  DWORD PTR [esi]
  422f07:	xlat   BYTE PTR ds:[ebx]
  422f08:	add    eax,0x2f89effc
  422f0d:	mov    bh,0xd1
  422f0f:	lahf   
  422f10:	jbe    0x422f04
  422f12:	jns    0x422ec3
  422f14:	xor    BYTE PTR [ecx+0x6b02a55f],ah
  422f1a:	jl     0x422f58
  422f1c:	jg     0x422f36
  422f1e:	ins    DWORD PTR es:[edi],dx
  422f1f:	push   es
  422f20:	rcr    DWORD PTR ds:0x3b7aecec,cl
  422f26:	pop    ebp
  422f27:	add    BYTE PTR [esi+0x11],bh
  422f2a:	and    eax,0x671cbc35
  422f2f:	pop    ecx
  422f30:	sub    BYTE PTR [ecx],ch
  422f32:	ja     0x422fa9
  422f34:	(bad)  
  422f35:	push   esi
  422f36:	out    0xb,al
  422f38:	push   ebp
  422f39:	ror    BYTE PTR [ecx-0x52],1
  422f3c:	sbb    ebp,DWORD PTR [edx+eax*2+0x6b8f2c1d]
  422f43:	inc    ecx
  422f44:	and    DWORD PTR [eax+edx*8+0x19],ecx
  422f48:	push   eax
  422f49:	jle    0x422f2a
  422f4b:	push   ebx
  422f4c:	ins    DWORD PTR es:[edi],dx
  422f4d:	sub    bl,BYTE PTR [ebx+0x17]
  422f50:	jnp    0x422f3d
  422f52:	std    
  422f53:	addr16 mov ecx,0xb4f6bf03
  422f59:	add    eax,0x6ff2c83b
  422f5e:	shl    BYTE PTR [edi+0x4e093769],1
  422f64:	mov    ebp,0xb318f176
  422f69:	jo     0x422fc0
  422f6b:	in     eax,dx
  422f6c:	pop    esi
  422f6d:	lods   eax,DWORD PTR ds:[esi]
  422f6e:	xchg   ecx,eax
  422f6f:	cmp    eax,ebp
  422f71:	sbb    dl,al
  422f73:	iret   
  422f74:	call   0x1e2e8662
  422f79:	out    dx,al
  422f7a:	push   ss
  422f7b:	ret    0x5b9d
  422f7e:	rcl    DWORD PTR [edi],cl
  422f80:	push   edi
  422f81:	dec    esi
  422f82:	or     BYTE PTR [esi-0x464e9409],0x61
  422f89:	out    dx,al
  422f8a:	out    dx,eax
  422f8b:	pop    ecx
  422f8c:	call   0x1ea5:0xc35a5417
  422f93:	mov    eax,0xd6524eea
  422f98:	stos   BYTE PTR es:[edi],al
  422f99:	dec    ebp
  422f9a:	out    dx,al
  422f9b:	cmp    eax,0xaf137672
  422fa0:	test   edx,esi
  422fa2:	in     al,0xbf
  422fa4:	scas   eax,DWORD PTR es:[edi]
  422fa5:	cld    
  422fa6:	jl     0x422f34
  422fa8:	sub    eax,0x5653868b
  422fad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422fae:	mov    ebx,0xc9d71863
  422fb3:	jle    0x422f66
  422fb5:	mov    al,ds:0x61bf2235
  422fba:	cmp    esp,DWORD PTR ds:0x6f3487
  422fc0:	push   ecx
  422fc1:	jp     0x422fc9
  422fc3:	mov    al,0xb2
  422fc5:	fiadd  WORD PTR ds:0x89bc284
  422fcb:	dec    ebx
  422fcc:	mov    al,0x92
  422fce:	xor    ch,dh
  422fd0:	pusha  
  422fd1:	es inc ebx
  422fd3:	fnstcw WORD PTR ds:0x17709842
  422fd9:	rcl    bl,cl
  422fdb:	imul   esi,edx,0xf1791009
  422fe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fe2:	pop    ecx
  422fe3:	mov    ds:0xeeece5ec,eax
  422fe8:	cmc    
  422fe9:	cs nop
  422feb:	add    eax,0xa9f8507b
  422ff0:	in     al,dx
  422ff1:	call   0x1a9c:0xd06e58be
  422ff8:	enter  0xad60,0x62
  422ffc:	xchg   DWORD PTR [edi-0x73],edi
  422fff:	cdq    
  423000:	ja     0x422f87
  423002:	adc    ebp,DWORD PTR [ecx+ebp*1]
  423005:	rol    BYTE PTR [ebx+ebx*8+0x4c9e3154],1
  42300c:	push   eax
  42300d:	mov    al,ds:0x3e24cafc
  423012:	hlt    
  423013:	xchg   esi,eax
  423014:	push   ds
  423015:	call   0x50b8:0xb1780e24
  42301c:	cmp    DWORD PTR es:[eax+0x476353c8],ebx
  423023:	xchg   ecx,eax
  423024:	ret    
  423025:	pop    es
  423026:	push   ebp
  423027:	xchg   DWORD PTR [eax],esp
  423029:	(bad)  
  42302a:	in     al,0x90
  42302c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42302d:	mov    edx,0x783b98c2
  423032:	sti    
  423033:	jbe    0x42309c
  423035:	arpl   WORD PTR [ecx+0x7f90eb3c],bx
  42303b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42303c:	inc    esi
  42303d:	or     eax,0x3f58266d
  423042:	test   eax,0xb2af06c
  423047:	jae    0x423049
  423049:	fistp  DWORD PTR [eax+0x4af25a15]
  42304f:	push   ebp
  423050:	fwait
  423051:	pop    es
  423052:	or     eax,0x1591865f
  423057:	jg     0x423067
  423059:	scas   al,BYTE PTR es:[edi]
  42305a:	dec    esp
  42305b:	jle    0x423053
  42305d:	pop    edx
  42305e:	sbb    al,0x3b
  423060:	pop    eax
  423061:	xchg   edx,eax
  423062:	xchg   ecx,eax
  423063:	mov    dh,0xe3
  423065:	lods   al,BYTE PTR ds:[esi]
  423066:	hlt    
  423067:	and    eax,0xf1dad00
  42306c:	xchg   ecx,eax
  42306d:	sub    ecx,DWORD PTR [eax]
  42306f:	popa   
  423070:	int    0x73
  423072:	ins    BYTE PTR es:[edi],dx
  423073:	inc    ecx
  423074:	cmp    cl,BYTE PTR [edx+0x36cd7d0d]
  42307a:	sbb    al,0x60
  42307c:	into   
  42307d:	sub    eax,0xc795116b
  423082:	(bad)  
  423084:	jecxz  0x42308c
  423086:	add    ebp,DWORD PTR [ecx+0x7]
  423089:	xchg   esi,eax
  42308a:	in     al,dx
  42308b:	daa    
  42308c:	out    0x3f,al
  42308e:	jecxz  0x4230f2
  423090:	out    dx,eax
  423091:	xchg   esi,eax
  423092:	push   eax
  423093:	jl     0x4230c2
  423095:	lds    edi,FWORD PTR [ecx]
  423097:	(bad)  ds:0xf8cd66c4
  42309d:	and    DWORD PTR [esi+edx*8-0x41c79881],ebp
  4230a4:	shr    BYTE PTR [esi],0xf1
  4230a7:	xchg   BYTE PTR [edx-0x4cf75ba4],ah
  4230ad:	dec    ecx
  4230ae:	call   0xaad02c51
  4230b3:	or     eax,0x5cf3ca02
  4230b8:	and    al,0x55
  4230ba:	hlt    
  4230bb:	fiadd  WORD PTR [edx]
  4230bd:	mov    cl,0xa1
  4230bf:	add    eax,0x87b8dbf8
  4230c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230c5:	pop    ds
  4230c6:	popf   
  4230c7:	nop
  4230c8:	lods   eax,DWORD PTR ds:[esi]
  4230c9:	scas   eax,DWORD PTR es:[edi]
  4230ca:	lods   al,BYTE PTR ds:[esi]
  4230cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230cc:	mov    bh,BYTE PTR [edx-0x6e87b18c]
  4230d2:	ret    0x3e85
  4230d5:	nop
  4230d6:	jp     0x4230fc
  4230d8:	aaa    
  4230d9:	push   eax
  4230da:	ja     0x4230ad
  4230dc:	aas    
  4230dd:	inc    edi
  4230de:	push   es
  4230df:	shl    DWORD PTR [esp+eax*4],cl
  4230e2:	cmp    BYTE PTR [esi+edi*2-0x3f],bl
  4230e6:	es push eax
  4230e8:	sub    dh,BYTE PTR [edi+0x62fea3ba]
  4230ee:	aam    0xc7
  4230f0:	adc    esi,DWORD PTR [ecx+edx*4-0x6b]
  4230f4:	(bad)  
  4230f6:	xchg   esp,eax
  4230f7:	jo     0x423089
  4230f9:	neg    cl
  4230fb:	or     eax,0x4cdfa84
  423100:	xor    eax,0x29de6851
  423105:	sub    ch,0xb6
  423108:	push   edi
  423109:	clc    
  42310a:	jmp    0x423108
  42310c:	mov    ds:0xf104471b,al
  423111:	dec    ebx
  423112:	jne    0x4230e5
  423114:	mov    esi,edx
  423116:	test   al,0xf
  423118:	(bad)  
  423119:	sub    eax,0xeeb22008
  42311e:	mov    ebp,0x9f25c568
  423123:	lea    ebp,[edi+ebx*8+0x4d]
  423127:	push   ds
  423128:	lahf   
  423129:	ret    
  42312a:	cli    
  42312b:	mov    eax,0xfd12ff90
  423130:	into   
  423131:	and    eax,0x13937240
  423136:	mov    ch,0xb6
  423138:	add    eax,esi
  42313a:	int    0x36
  42313c:	lea    esi,[eax]
  42313e:	jbe    0x4230cc
  423140:	jns    0x4231a4
  423142:	and    DWORD PTR [ebx+0x76],edi
  423145:	aas    
  423146:	in     eax,0xc2
  423148:	cmp    eax,0x7660301a
  42314d:	mov    bl,0x70
  42314f:	dec    ebp
  423150:	ins    DWORD PTR es:[edi],dx
  423151:	cli    
  423152:	inc    dh
  423154:	sar    BYTE PTR [edx+ebp*8+0x7208814],1
  42315b:	add    al,0x6e
  42315d:	mov    DWORD PTR ds:0x8a0265ac,ebp
  423163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423164:	into   
  423165:	xchg   ebx,eax
  423166:	scas   al,BYTE PTR es:[edi]
  423167:	mov    esp,0x3199d43b
  42316c:	mov    ch,ah
  42316e:	xchg   ebx,eax
  42316f:	xchg   esi,eax
  423170:	jno    0x4231b7
  423172:	nop
  423173:	mov    eax,0xa927c062
  423178:	mov    eax,0xec3a5354
  42317d:	sbb    ebx,eax
  42317f:	sahf   
  423180:	mov    ebx,0xbdff5d1d
  423185:	in     eax,dx
  423186:	call   0x1b3c3df3
  42318b:	arpl   WORD PTR [ecx+0x45a62aa7],dx
  423191:	jle    0x42311d
  423193:	(bad)  
  423194:	sub    ebx,DWORD PTR [edx+0x6a11398f]
  42319a:	popa   
  42319b:	mov    ch,0xc6
  42319d:	and    edi,DWORD PTR [ebp-0x49]
  4231a0:	popf   
  4231a1:	and    DWORD PTR [ebp+eax*4-0x4448599],ecx
  4231a8:	daa    
  4231a9:	push   ecx
  4231aa:	mov    BYTE PTR [ebp+0x3b],0x14
  4231ae:	sti    
  4231af:	sbb    esi,ebp
  4231b1:	push   ss
  4231b2:	xor    al,0x52
  4231b4:	lods   al,BYTE PTR ds:[esi]
  4231b5:	push   es
  4231b6:	or     edi,DWORD PTR [ecx]
  4231b8:	mov    eax,0xcf541412
  4231bd:	pop    ecx
  4231be:	ror    ebp,1
  4231c0:	xlat   BYTE PTR ds:[ebx]
  4231c1:	ds cmc 
  4231c3:	pop    ebx
  4231c4:	cmp    DWORD PTR [eax],ebx
  4231c6:	xor    al,0x8c
  4231c8:	or     esp,DWORD PTR [edi-0x7ecf912d]
  4231ce:	popf   
  4231cf:	mov    al,0xa9
  4231d1:	loop   0x42321e
  4231d3:	inc    eax
  4231d4:	mov    bh,0x15
  4231d6:	cmp    DWORD PTR [edx+0x2011d08b],ebx
  4231dc:	mov    ecx,eax
  4231de:	xchg   esi,eax
  4231df:	mov    ch,0x14
  4231e1:	ret    0x2179
  4231e4:	cs das 
  4231e6:	xor    ecx,DWORD PTR [ebx-0x48ae54a8]
  4231ec:	neg    BYTE PTR [edi+0x7b]
  4231ef:	sub    eax,DWORD PTR [ebp+0xcde5ec0]
  4231f5:	jg     0x4231d5
  4231f7:	mov    dl,0x1a
  4231f9:	call   0xec9e7ad
  4231fe:	inc    esp
  4231ff:	sbb    eax,0x48a74bb5
  423204:	repnz pop ds
  423206:	or     DWORD PTR [eax],edi
  423208:	repz jge 0x423197
  42320b:	push   cs
  42320c:	and    BYTE PTR [ebp-0x7028b49a],0x4a
  423213:	sub    eax,0x5df28e47
  423218:	push   esp
  423219:	addr16 mov al,0xea
  42321c:	fldenv [esi+0x4f93ed3c]
  423222:	addr16 nop
  423224:	cmp    eax,0x7a5423e5
  423229:	fs dec ebp
  42322b:	ret    0xdff4
  42322e:	gs inc esp
  423230:	stos   DWORD PTR es:[edi],eax
  423231:	jns    0x4232b0
  423233:	vmwrite edx,DWORD PTR [edi+0x37]
  423237:	sahf   
  423238:	jne    0x4232b7
  42323a:	rol    cl,cl
  42323c:	pusha  
  42323d:	dec    ebx
  42323e:	test   BYTE PTR [edi-0x78b7d04e],bh
  423244:	push   ss
  423245:	fldcw  WORD PTR [ecx+0x67066ecf]
  42324b:	mov    DWORD PTR [edi],edi
  42324d:	ss mov ecx,0xe4af9fe
  423253:	(bad)  
  423254:	mov    eax,ds:0x6d5907af
  423259:	sub    bh,BYTE PTR [ebx-0x77af0cdd]
  42325f:	ret    0x7326
  423262:	lds    edx,FWORD PTR [eax+edi*4+0xe555d22]
  423269:	sahf   
  42326a:	jmp    0xd44502a6
  42326f:	push   ss
  423270:	jg     0x423279
  423272:	pop    eax
  423273:	mov    ch,0xac
  423275:	sub    esi,DWORD PTR ds:0x503cc131
  42327b:	and    esi,DWORD PTR [ebx+0x61dbc01e]
  423281:	mov    BYTE PTR [ecx+0x6d],dl
  423284:	mov    ebx,0x6fd2571a
  423289:	cwde   
  42328a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42328b:	(bad)  
  42328c:	fmul   DWORD PTR [edx+0x749bb88f]
  423292:	fcom   DWORD PTR [edx]
  423294:	cld    
  423295:	mov    dh,BYTE PTR [ebp+0x3f5800af]
  42329b:	les    edi,FWORD PTR [ecx+0x2c1b9831]
  4232a1:	mov    esi,0x750c661
  4232a6:	adc    dh,BYTE PTR [eax]
  4232a8:	xchg   esi,eax
  4232a9:	push   ss
  4232aa:	pop    ss
  4232ab:	fld    TBYTE PTR ds:0x5147c186
  4232b1:	mov    esp,0xa599c083
  4232b6:	push   ss
  4232b7:	aas    
  4232b8:	ror    BYTE PTR [edi+0x2271f84c],0xd0
  4232bf:	dec    esi
  4232c0:	loop   0x42333a
  4232c2:	sbb    al,0xf7
  4232c5:	mov    ch,BYTE PTR [esi]
  4232c7:	lock adc al,0x42
  4232ca:	pop    edx
  4232cb:	out    dx,al
  4232cc:	and    cl,BYTE PTR [ebx]
  4232ce:	jnp    0x42328a
  4232d0:	aaa    
  4232d1:	xchg   esp,eax
  4232d2:	ret    0x7a8f
  4232d5:	inc    edx
  4232d6:	fcmovu st,st(4)
  4232d8:	xchg   ebx,eax
  4232d9:	push   ebp
  4232da:	test   al,0xa
  4232dc:	mov    dh,0xd5
  4232de:	cli    
  4232df:	push   ebx
  4232e0:	sti    
  4232e1:	inc    ebx
  4232e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4232e3:	test   DWORD PTR [eax-0x70],0x1b23fa52
  4232ea:	ret    
  4232eb:	popa   
  4232ec:	(bad)  
  4232ed:	and    ecx,esi
  4232ef:	imul   ecx,DWORD PTR [ecx+0x41b99f9d],0x5b
  4232f6:	lods   al,BYTE PTR ds:[esi]
  4232f7:	sub    ecx,DWORD PTR [esi]
  4232f9:	push   cs
  4232fa:	mov    ah,0x15
  4232fc:	loop   0x4232c8
  4232fe:	call   0x9519:0xab3fa7a0
  423305:	jle    0x42332d
  423307:	lock stos DWORD PTR es:[di],eax
  42330a:	push   ss
  42330b:	push   eax
  42330c:	mov    ecx,0xee16aa96
  423311:	outs   dx,BYTE PTR ds:[esi]
  423312:	mov    WORD PTR [eax+esi*4-0xe],gs
  423316:	js     0x423345
  423318:	(bad)  
  423319:	sbb    BYTE PTR [ebx-0x3],dh
  42331c:	xchg   edi,eax
  42331d:	cli    
  42331e:	jecxz  0x423339
  423320:	push   edx
  423321:	jb     0x4232e7
  423323:	mov    bl,0x5a
  423325:	jp     0x42330c
  423327:	aad    0x4e
  423329:	xlat   BYTE PTR ds:[ebx]
  42332a:	into   
  42332b:	jmp    0xbfbd17ce
  423330:	xor    al,0xea
  423332:	ja     0x423360
  423334:	fsub   DWORD PTR [ebx-0x4607e8ae]
  42333a:	out    dx,al
  42333b:	push   ebx
  42333c:	adc    esp,DWORD PTR [ebp+0x3feae316]
  423342:	fcom   QWORD PTR [ecx+esi*1-0x46195705]
  423349:	fcmovnu st,st(7)
  42334b:	out    dx,al
  42334c:	pop    edx
  42334d:	out    dx,eax
  42334e:	js     0x42339d
  423350:	push   eax
  423351:	adc    ah,BYTE PTR [edx+0x53616a30]
  423357:	imul   ecx,DWORD PTR [ecx+eiz*2+0xafe2dbc],0xe80b67d1
  423362:	push   ebp
  423363:	xchg   DWORD PTR [esi],ecx
  423365:	mov    ebx,DWORD PTR [edx]
  423367:	jnp    0x42338f
  423369:	test   DWORD PTR [edi+edx*1-0x54b57f01],edi
  423370:	pop    esi
  423371:	xor    ah,0xdb
  423374:	aad    0xd6
  423376:	xchg   ecx,eax
  423377:	(bad)  
  423378:	popf   
  423379:	je     0x423341
  42337b:	scas   al,BYTE PTR es:[edi]
  42337c:	fiadd  DWORD PTR [edx+eiz*2+0x75709d35]
  423383:	je     0x423401
  423385:	das    
  423386:	sub    bh,BYTE PTR [ebx-0x6e]
  423389:	dec    edx
  42338a:	fdivr  QWORD PTR [esi]
  42338c:	or     eax,0xc2e0bf36
  423391:	ins    DWORD PTR es:[edi],dx
  423392:	(bad)  
  423393:	push   edx
  423394:	ja     0x4233ab
  423396:	shl    BYTE PTR [edx+0x66],0x3e
  42339a:	dec    eax
  42339b:	dec    edx
  42339c:	ret    
  42339d:	outs   dx,BYTE PTR ds:[esi]
  42339e:	mov    eax,ds:0x34673d7d
  4233a3:	(bad)  
  4233a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233a5:	push   edi
  4233a6:	mov    ebx,0xd21969f8
  4233ab:	je     0x42337c
  4233ad:	mov    ebp,DWORD PTR [ebx-0x5f06930]
  4233b3:	mov    esp,0x2e491d8
  4233b8:	sbb    esp,DWORD PTR [edi]
  4233ba:	dec    eax
  4233bb:	xor    ecx,ebp
  4233bd:	sbb    eax,0xb60dcb15
  4233c2:	rcr    DWORD PTR [edx-0x67],1
  4233c5:	sub    ebx,DWORD PTR [edx]
  4233c7:	adc    DWORD PTR [ebx+0x76],edi
  4233ca:	pop    edi
  4233cb:	dec    edx
  4233cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233cd:	daa    
  4233ce:	popa   
  4233cf:	pusha  
  4233d0:	and    eax,0xa196af6
  4233d5:	jnp    0x423456
  4233d7:	mov    DWORD PTR [bx-0x1508],ebx
  4233dc:	ret    0x78ec
  4233df:	mov    BYTE PTR [edi-0x67],al
  4233e2:	jb     0x4233d8
  4233e4:	jp     0x4233a5
  4233e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4233e7:	cmp    al,0x44
  4233e9:	cmp    al,0x6a
  4233eb:	jmp    0x1dd0321f
  4233f0:	call   0x465e565c
  4233f5:	pop    eax
  4233f6:	inc    eax
  4233f7:	sbb    ebp,DWORD PTR [ebp+0x31]
  4233fa:	push   ebx
  4233fb:	xor    DWORD PTR [ebx-0xc42b7f0],edi
  423401:	imul   ebx,DWORD PTR [edx-0x4287837c],0x159ae136
  42340b:	adc    BYTE PTR [edi],ch
  42340d:	aam    0x53
  42340f:	in     al,dx
  423410:	imul   ebx,DWORD PTR [ebx+0x57],0x2b0c216c
  423417:	mov    BYTE PTR [edi-0x4b129fa4],cl
  42341d:	test   BYTE PTR [edi+0x5],0xd2
  423421:	push   esp
  423422:	inc    edi
  423423:	push   ecx
  423424:	rcr    BYTE PTR [ecx],0xe2
  423427:	mov    edi,0xa37ddc0c
  42342c:	sub    ah,0xea
  42342f:	out    0x92,al
  423431:	mov    bl,0x70
  423433:	jmp    0x1c5f8c2b
  423438:	not    BYTE PTR ds:[ebp+0x6ee02557]
  42343f:	ret    0xe942
  423442:	ret    0x40
  423445:	test   eax,0xc85ff48a
  42344a:	sub    DWORD PTR [ebp-0x1d],0x650a8659
  423451:	add    BYTE PTR [ebx],0x9
  423454:	int    0x97
  423456:	out    0xbb,eax
  423458:	out    dx,eax
  423459:	xchg   DWORD PTR [edi+esi*1],eax
  42345c:	push   edi
  42345d:	mov    WORD PTR [ebp-0x52c2932d],cs
  423463:	mov    ebp,DWORD PTR [ebx-0xa]
  423466:	scas   al,BYTE PTR es:[edi]
  423467:	ret    
  423468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423469:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42346a:	pop    edi
  42346b:	ror    DWORD PTR [ebp+0x7786f258],cl
  423471:	cs xchg edx,eax
  423473:	int    0x15
  423475:	repnz mov esi,0x9d13e40a
  42347b:	mov    eax,0xf83b72fc
  423480:	add    cl,BYTE PTR [edx+0x40b35162]
  423486:	xlat   BYTE PTR ds:[ebx]
  423487:	fcmovnb st,st(7)
  423489:	mov    al,0x5d
  42348b:	daa    
  42348c:	jno    0x423476
  42348e:	and    bh,0x75
  423491:	jp     0x4234b3
  423493:	repz xor al,0x3a
  423496:	(bad)  
  423497:	mov    ebp,0xd27643e2
  42349c:	dec    ebx
  42349d:	int3   
  42349e:	sub    al,BYTE PTR [eax]
  4234a0:	adc    BYTE PTR [eax],0x69
  4234a3:	and    DWORD PTR [edx-0xdbbabf0],0xed27bb95
  4234ad:	adc    ebx,DWORD PTR [esi+0x26]
  4234b0:	and    dl,dh
  4234b2:	sbb    ah,bh
  4234b4:	pop    edi
  4234b5:	and    eax,0x7e0695fc
  4234ba:	dec    edx
  4234bb:	stc    
  4234bc:	sub    dh,ch
  4234be:	mov    al,ds:0x589c480b
  4234c3:	repz and ebx,ebp
  4234c6:	call   0xf042af2f
  4234cb:	fnstsw WORD PTR ds:0x10d7f3e9
  4234d1:	push   ss
  4234d2:	jb     0x42347b
  4234d4:	mov    ds:0xea569d06,al
  4234d9:	jp     0x42349b
  4234db:	or     eax,0xc6a63167
  4234e0:	xchg   esp,eax
  4234e1:	popf   
  4234e2:	fsubr  st,st(7)
  4234e4:	mov    eax,ds:0xfdafbcc7
  4234e9:	mov    WORD PTR [edi],es
  4234eb:	and    BYTE PTR [ebp-0x80],0xcf
  4234ef:	in     al,0xcc
  4234f1:	retf   
  4234f2:	fisub  WORD PTR [edi-0x122d76f6]
  4234f8:	ret    0xc8a4
  4234fb:	adc    BYTE PTR [esi-0x5bdd2ed9],dl
  423501:	mov    ds:0x5f1f5821,eax
  423506:	dec    ebp
  423507:	jg     0x4234f4
  423509:	sub    edx,eax
  42350b:	sbb    eax,0xb5f0e138
  423510:	inc    edi
  423511:	sbb    cl,cl
  423513:	mov    ch,0xfe
  423515:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423516:	retf   0x3f30
  423519:	add    DWORD PTR [eax+0x61e43a93],0xa8de1132
  423523:	inc    bp
  423525:	inc    ebx
  423526:	lds    ecx,FWORD PTR [eax+edx*4+0x21]
  42352a:	out    0x16,eax
  42352c:	daa    
  42352d:	mov    ah,0xc
  42352f:	or     al,0x8e
  423531:	mov    dh,0x8f
  423534:	jp     0x4234f3
  423536:	jmp    0x423595
  423538:	data16 mov ch,0x42
  42353b:	arpl   WORD PTR [edi+0x7fce37a4],si
  423541:	mov    ecx,0x79335cde
  423546:	lock and eax,0xac1e1a46
  42354c:	pop    edi
  42354d:	push   eax
  42354e:	jno    0x42355d
  423550:	xchg   esi,eax
  423551:	cmp    al,0x71
  423553:	xor    DWORD PTR [edi],edx
  423555:	sub    al,0x1a
  423557:	inc    esi
  423558:	jbe    0x4235b7
  42355a:	jb     0x423532
  42355c:	jle    0x423541
  42355e:	(bad)
  423562:	mov    al,0x84
  423564:	stos   BYTE PTR es:[edi],al
  423565:	loope  0x42350a
  423567:	call   0x6495425a
  42356c:	aaa    
  42356d:	jl     0x4235d4
  42356f:	icebp  
  423570:	lods   al,BYTE PTR ds:[esi]
  423571:	jmp    0x42357c
  423573:	push   edi
  423574:	fiadd  WORD PTR [edx+0xd9f58a1]
  42357a:	jg     0x423571
  42357c:	dec    eax
  42357d:	retf   0x39f3
  423580:	es rol esp,0x5b
  423584:	and    BYTE PTR [esi],cl
  423586:	cmp    ch,BYTE PTR [ebx+0x6079f14f]
  42358c:	ret    
  42358d:	mov    bl,0x21
  42358f:	sbb    eax,0xfd5059b1
  423594:	jb     0x4235b3
  423596:	xor    DWORD PTR [edi+0x67f5444f],edi
  42359c:	jmp    0x9240:0xc3c99ae4
  4235a3:	dec    eax
  4235a4:	push   es
  4235a5:	js     0x4235a0
  4235a7:	mov    ecx,0x597b76d8
  4235ac:	in     al,0xde
  4235ae:	push   cs
  4235af:	lahf   
  4235b0:	lea    edx,[ecx+0x37]
  4235b3:	inc    ebx
  4235b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235b5:	mov    edi,0x4d5fe559
  4235ba:	push   ecx
  4235bc:	cdq    
  4235bd:	cld    
  4235be:	lods   al,BYTE PTR ds:[esi]
  4235bf:	pop    esi
  4235c0:	push   ebx
  4235c1:	retf   0xd992
  4235c4:	sub    DWORD PTR [ecx+0x4],ebx
  4235c7:	fcom   DWORD PTR [esp+esi*2-0x267ca05b]
  4235ce:	out    0xea,eax
  4235d0:	popa   
  4235d1:	push   es
  4235d2:	sbb    ebp,DWORD PTR [ebx+0x3]
  4235d5:	ds nop
  4235d7:	adc    eax,0x8de8dc76
  4235dc:	inc    esi
  4235dd:	xchg   ebx,eax
  4235de:	sbb    BYTE PTR [esi],bh
  4235e0:	mov    esp,0x2206b36f
  4235e5:	xchg   esi,eax
  4235e6:	add    eax,0xd23f55b3
  4235eb:	adc    ch,BYTE PTR [edi]
  4235ed:	mov    esi,0xe7623496
  4235f2:	call   0x790d:0xa6621950
  4235f9:	aad    0xc7
  4235fb:	imul   edx,DWORD PTR [edi-0x330394b9],0x26
  423602:	inc    edx
  423603:	dec    ebp
  423604:	push   edx
  423605:	in     eax,dx
  423606:	into   
  423607:	daa    
  423608:	dec    eax
  423609:	retf   0x6c3a
  42360c:	call   0x4df8:0xea4caa89
  423613:	xchg   edx,eax
  423614:	cs (bad) 
  423616:	cli    
  423617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423618:	fbstp  TBYTE PTR [ecx-0x4a]
  42361b:	and    eax,0x2042f4cf
  423620:	outs   dx,BYTE PTR ds:[esi]
  423621:	cli    
  423622:	add    edx,edx
  423624:	sbb    edi,DWORD PTR [edx]
  423626:	sbb    eax,0xece7fee5
  42362b:	or     eax,0xbd1160f6
  423630:	sbb    BYTE PTR ds:0xed3a5097,bh
  423636:	js     0x423680
  423638:	inc    DWORD PTR [esi]
  42363a:	or     al,0xf4
  42363c:	cs cmc 
  42363e:	shr    BYTE PTR [ecx-0x3cec6b18],cl
  423644:	xor    bl,0x10
  423647:	push   es
  423648:	dec    ecx
  423649:	xor    ebp,esp
  42364b:	jbe    0x42369e
  42364d:	pop    eax
  42364e:	inc    edi
  42364f:	or     cl,BYTE PTR [ebx]
  423651:	lahf   
  423652:	cmp    cl,cl
  423654:	and    al,0xe4
  423656:	jo     0x4235ed
  423658:	or     BYTE PTR [ecx],bl
  42365a:	stos   DWORD PTR es:[edi],eax
  42365b:	sub    DWORD PTR [edx+ebx*2],ecx
  42365e:	pop    es
  42365f:	inc    BYTE PTR ds:0x3bbba75e
  423665:	jae    0x42365a
  423667:	or     bh,dh
  423669:	sahf   
  42366a:	in     eax,dx
  42366b:	loop   0x4236dd
  42366d:	or     BYTE PTR [ecx-0x35],al
  423670:	jmp    0xa83fe9be
  423675:	daa    
  423676:	dec    ebx
  423677:	add    eax,0x8aaedd92
  42367c:	jg     0x42368e
  42367e:	push   ds
  42367f:	and    DWORD PTR [eax+esi*8+0x11d7e902],eax
  423686:	mov    WORD PTR ds:0x41c88d33,es
  42368c:	imul   esp,DWORD PTR [ecx+0x637f7f64],0xc41fed17
  423696:	inc    dl
  423698:	xor    DWORD PTR [ebx],esi
  42369a:	pop    ebp
  42369b:	xor    ebp,esp
  42369d:	(bad)  
  42369e:	pop    esi
  42369f:	add    BYTE PTR [ebx+0x150997c6],bl
  4236a5:	test   DWORD PTR [edi],0xf9d85769
  4236ab:	dec    esi
  4236ac:	scas   eax,DWORD PTR es:[edi]
  4236ad:	std    
  4236ae:	push   esp
  4236af:	daa    
  4236b0:	inc    ebp
  4236b1:	ficomp DWORD PTR [esi-0x34c5c76]
  4236b7:	push   ebp
  4236b8:	mov    dl,0xa
  4236ba:	outs   dx,DWORD PTR ds:[esi]
  4236bb:	sahf   
  4236bc:	cdq    
  4236bd:	nop
  4236be:	push   esp
  4236bf:	dec    ebx
  4236c0:	push   ebx
  4236c1:	sub    BYTE PTR [ebx+0xc],0xba
  4236c5:	sbb    al,0x35
  4236c7:	leave  
  4236c8:	jge    0x423682
  4236ca:	add    DWORD PTR [esi],0xffffff81
  4236cd:	shl    DWORD PTR [ebp-0x46e82fa],1
  4236d3:	retf   
  4236d4:	ja     0x4236dc
  4236d6:	mov    edx,0x9156b6b3
  4236db:	xchg   ebp,eax
  4236dc:	rcl    BYTE PTR [ecx-0x6a],1
  4236df:	call   0x53a18049
  4236e4:	jle    0x4236d4
  4236e6:	in     al,dx
  4236e7:	(bad)  
  4236e8:	adc    DWORD PTR [edi-0x6085a74e],ebp
  4236ee:	push   ebp
  4236ef:	dec    edx
  4236f0:	les    edi,FWORD PTR [eax+ebp*4]
  4236f3:	fs aas 
  4236f5:	retf   0x8963
  4236f8:	pop    ds
  4236f9:	sbb    edi,esp
  4236fb:	out    0x76,eax
  4236fd:	scas   eax,DWORD PTR es:[edi]
  4236fe:	sbb    esi,edi
  423700:	je     0x4236b6
  423702:	mov    dl,0xb1
  423704:	aas    
  423705:	lods   al,BYTE PTR ds:[esi]
  423706:	or     ebp,0xf0d3d9d9
  42370c:	xchg   bh,cl
  42370e:	xor    DWORD PTR [edi+0x45533a1],esp
  423714:	test   DWORD PTR [eax-0x1f],ebx
  423717:	xlat   BYTE PTR ds:[ebx]
  423718:	jge    0x4236de
  42371a:	jl     0x423762
  42371c:	ficomp WORD PTR ds:0xde85b1e3
  423722:	mov    eax,ds:0xb495f06a
  423727:	or     al,0xbb
  423729:	jmp    0xbd3:0xb13b334b
  423730:	xchg   edx,eax
  423731:	jne    0x4237ac
  423733:	cli    
  423734:	and    edi,edx
  423736:	push   cs
  423737:	and    esp,edi
  423739:	call   0xd6c5:0x300b4fe2
  423740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423741:	ret    0x5d1a
  423744:	rol    DWORD PTR [eax],cl
  423746:	(bad)  [edx-0x2ea3a8a]
  42374c:	aam    0x7f
  42374e:	mov    dh,0xab
  423750:	xchg   ecx,ebp
  423752:	xor    BYTE PTR [ebp-0x48],al
  423755:	and    BYTE PTR [edx-0x37],ch
  423758:	push   ecx
  423759:	rcl    BYTE PTR [ebx+0x276de2ba],1
  42375f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423760:	add    eax,0x2af8524a
  423765:	icebp  
  423766:	mov    cl,0x54
  423768:	adc    esi,DWORD PTR [ebp-0x3c]
  42376b:	sti    
  42376c:	out    dx,al
  42376d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42376e:	cmp    BYTE PTR [ecx],al
  423770:	inc    esp
  423771:	push   ecx
  423772:	out    0xc4,al
  423774:	mov    bh,0x49
  423776:	cmp    al,0x75
  423778:	clc    
  423779:	adc    BYTE PTR [esi-0x26],dh
  42377c:	jnp    0x4237c4
  42377e:	mov    edx,0xf6be9b9c
  423783:	stos   BYTE PTR es:[edi],al
  423784:	mov    WORD PTR [esi+0x6b465e3f],fs
  42378a:	xchg   DWORD PTR [edx],eax
  42378c:	int3   
  42378d:	jnp    0x42377a
  42378f:	(bad)  
  423791:	test   esi,edx
  423793:	xor    DWORD PTR [ecx-0x54],0x3e
  423797:	sub    ecx,eax
  423799:	xor    BYTE PTR [esi],0xee
  42379c:	cmp    dh,BYTE PTR [ecx+0x7f]
  42379f:	aam    0x71
  4237a1:	push   0xffffffa4
  4237a3:	out    dx,eax
  4237a4:	mov    esp,0x7231565b
  4237a9:	hlt    
  4237aa:	push   cs
  4237ab:	add    eax,0x2c1f29db
  4237b0:	push   ss
  4237b1:	xlat   BYTE PTR ds:[ebx]
  4237b2:	dec    edx
  4237b3:	jo     0x4237e3
  4237b5:	mov    edx,eax
  4237b7:	inc    eax
  4237b8:	lods   eax,DWORD PTR ds:[esi]
  4237b9:	push   ebx
  4237ba:	daa    
  4237bb:	sbb    ah,0x22
  4237be:	fsub   QWORD PTR [edx]
  4237c0:	inc    edx
  4237c1:	adc    eax,0xf21d7d95
  4237c6:	cwde   
  4237c7:	inc    ch
  4237c9:	push   ecx
  4237ca:	sar    BYTE PTR [edi-0x22],0x34
  4237ce:	jno    0x4237a2
  4237d0:	sbb    al,0x11
  4237d2:	xor    bl,BYTE PTR [esi]
  4237d4:	rol    BYTE PTR [ebp-0x6e],1
  4237d7:	mov    BYTE PTR [ecx-0x5b],0x5e
  4237db:	cli    
  4237dc:	or     al,BYTE PTR es:[edi-0x11]
  4237e0:	icebp  
  4237e1:	push   esi
  4237e2:	sbb    eax,0xe30e0e84
  4237e7:	outs   dx,BYTE PTR ds:[esi]
  4237e8:	xchg   esi,eax
  4237e9:	pushf  
  4237ea:	mov    edi,DWORD PTR [esi]
  4237ec:	shl    dh,1
  4237ee:	pop    esp
  4237ef:	(bad)  
  4237f0:	pop    ebp
  4237f1:	int    0x3d
  4237f3:	lock jecxz 0x423803
  4237f6:	jecxz  0x423835
  4237f8:	inc    esi
  4237f9:	add    BYTE PTR [ebx-0x5c],0x20
  4237fd:	scas   eax,DWORD PTR es:[edi]
  4237fe:	or     esp,DWORD PTR [ecx-0x18f379f0]
  423804:	loop   0x423791
  423806:	push   cs
  423807:	shl    eax,0x1e
  42380a:	(bad)  
  42380b:	pop    ds
  42380c:	pop    eax
  42380d:	dec    edi
  42380e:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  423810:	inc    ecx
  423811:	not    dl
  423813:	xor    BYTE PTR [edx],ah
  423815:	mov    edx,0xbf81bbc3
  42381a:	push   edx
  42381b:	cmp    al,0xf8
  42381d:	push   cs
  42381e:	xchg   edi,eax
  42381f:	adc    eax,0xa37330c
  423824:	pop    ds
  423825:	cwde   
  423826:	(bad)  
  423827:	int    0x84
  423829:	dec    ax
  42382b:	pop    esp
  42382c:	jmp    0xd944:0xabdda41c
  423833:	in     eax,0xd5
  423835:	xchg   ebp,eax
  423836:	ror    BYTE PTR [ecx],1
  423838:	imul   dh
  42383a:	jmp    0x727761d0
  42383f:	cs add al,0x7
  423842:	les    esi,FWORD PTR [eax]
  423844:	mov    ebx,0x2ae330cf
  423849:	push   0xffffffad
  42384b:	add    eax,0xdf4bfc9c
  423850:	xlat   BYTE PTR ds:[ebx]
  423851:	enter  0x8e07,0x27
  423855:	inc    ecx
  423856:	adc    esi,DWORD PTR [esp+eax*2]
  423859:	cmp    ebx,DWORD PTR [ecx-0x20]
  42385c:	adc    edx,DWORD PTR [ebp-0x69]
  42385f:	inc    dx
  423861:	or     al,0x92
  423863:	jb     0x42389a
  423865:	scas   eax,DWORD PTR es:[edi]
  423866:	(bad)  
  423867:	lea    ebp,[esi]
  423869:	jle    0x423880
  42386b:	fxch   st(0)
  42386d:	shr    BYTE PTR [ecx-0x10],1
  423870:	jge    0x42383c
  423872:	mov    bh,0x9c
  423874:	or     ch,BYTE PTR [ecx-0x71]
  423877:	repz (bad) 
  42387a:	ret    
  42387b:	sub    cl,BYTE PTR [ecx+ebx*2-0x63f4a5e2]
  423882:	inc    ebp
  423883:	repz jb 0x423882
  423886:	out    dx,eax
  423887:	bound  ecx,QWORD PTR [esi]
  423889:	mov    al,0x12
  42388b:	sub    ch,BYTE PTR [edi]
  42388d:	stos   BYTE PTR es:[edi],al
  42388e:	call   0x4205:0xd580c1cf
  423895:	jecxz  0x4238ad
  423897:	fistp  WORD PTR [edi+0x1295aaf3]
  42389d:	mov    edi,0xc0092cf3
  4238a2:	ror    DWORD PTR [ecx],1
  4238a4:	clc    
  4238a5:	retf   
  4238a6:	push   0x8d999af9
  4238ab:	or     ah,dh
  4238ad:	dec    edx
  4238ae:	xchg   edx,eax
  4238af:	push   esp
  4238b0:	inc    esi
  4238b1:	ret    
  4238b2:	lods   al,BYTE PTR ds:[esi]
  4238b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238b4:	adc    al,0x62
  4238b6:	in     eax,dx
  4238b7:	cmp    BYTE PTR [eax],al
  4238b9:	mov    eax,ds:0x377d9326
  4238be:	or     ebp,DWORD PTR [ebp-0x25a1ca74]
  4238c4:	add    al,BYTE PTR [ebx]
  4238c6:	out    0x0,al
  4238c8:	sbb    BYTE PTR [ebx-0x63],dh
  4238cb:	or     DWORD PTR [edx+0x9],0x69
  4238cf:	xor    DWORD PTR [ebx+0x1c],edx
  4238d2:	add    DWORD PTR [edx+eax*1],0x9733954e
  4238d9:	dec    ebp
  4238da:	jae    0x4238a6
  4238dc:	sbb    esi,edi
  4238de:	push   edi
  4238df:	rcl    esp,0x48
  4238e2:	push   edx
  4238e3:	jo     0x423941
  4238e5:	adc    dl,BYTE PTR ds:0xb820a952
  4238eb:	xchg   edi,eax
  4238ec:	inc    DWORD PTR [ebp+0x55ac1770]
  4238f2:	jl     0x4238e6
  4238f4:	sub    DWORD PTR [esi-0x184da074],ebp
  4238fa:	out    0x47,eax
  4238fc:	dec    esp
  4238fd:	popa   
  4238fe:	loopne 0x423949
  423900:	xchg   edi,eax
  423901:	or     eax,0x890b3ece
  423906:	or     bh,cl
  423908:	clc    
  423909:	inc    edi
  42390a:	cmp    ch,BYTE PTR [edx+0x11]
  42390d:	enter  0x9242,0x11
  423911:	xchg   edi,eax
  423912:	(bad)  
  423913:	addr16 dec ebp
  423915:	(bad)  
  423916:	ror    ch,0xa6
  423919:	iret   
  42391a:	addr16 retf 0x7331
  42391e:	cdq    
  42391f:	xor    al,0x92
  423921:	fmul   QWORD PTR [ebx+edi*4]
  423924:	sbb    al,0x37
  423926:	dec    ecx
  423927:	(bad)  
  423928:	das    
  423929:	ins    BYTE PTR es:[edi],dx
  42392a:	rep lods eax,DWORD PTR ds:[esi]
  42392c:	sbb    eax,0x83c46484
  423931:	push   cs
  423932:	retf   
  423933:	and    cl,BYTE PTR [ecx+0x8]
  423936:	into   
  423937:	pop    ss
  423938:	sub    BYTE PTR [ecx+0x8],ch
  42393b:	in     eax,dx
  42393c:	pop    edi
  42393d:	fstp   TBYTE PTR [edi+eiz*4-0x78272fdf]
  423944:	xchg   esi,esi
  423946:	cmp    DWORD PTR [eiz*8-0x24956a96],0x10
  42394e:	and    al,0x87
  423950:	gs add eax,0x9e5dd718
  423956:	test   DWORD PTR [edx+0x17c55f68],esi
  42395c:	jbe    0x423985
  42395e:	jp     0x4239cf
  423960:	pop    es
  423961:	mov    al,ds:0x90da3ae5
  423966:	enter  0x8d66,0x47
  42396a:	mov    esp,gs
  42396c:	pop    es
  42396d:	push   ecx
  42396e:	into   
  42396f:	xor    al,0xe2
  423971:	cmp    eax,0x920cf2e0
  423976:	pop    esp
  423977:	xchg   edx,eax
  423978:	pop    edx
  423979:	adc    esp,DWORD PTR [edx-0xee278d6]
  42397f:	fiadd  WORD PTR [ebx+0x4e0af462]
  423985:	cmp    dl,0x2
  423988:	or     ah,cl
  42398a:	test   al,0x4d
  42398c:	mov    ecx,0x94430956
  423991:	dec    ebx
  423992:	fcom   st(2)
  423994:	aas    
  423995:	add    esp,ebx
  423997:	ins    DWORD PTR es:[edi],dx
  423998:	xor    DWORD PTR [eax],edi
  42399a:	cmp    BYTE PTR [ebx-0x19e09189],dh
  4239a0:	jne    0x423990
  4239a2:	(bad)  
  4239a3:	icebp  
  4239a4:	loope  0x423a0f
  4239a6:	push   edx
  4239a7:	adc    eax,0x311b591a
  4239ac:	frstor [ecx+0x70]
  4239af:	dec    edi
  4239b0:	mov    dl,0x7d
  4239b2:	shl    DWORD PTR [edi-0x55299047],cl
  4239b8:	add    DWORD PTR [eax+edi*1],ecx
  4239bb:	mov    ah,0x8e
  4239bd:	push   ebp
  4239be:	pop    eax
  4239bf:	fwait
  4239c0:	cli    
  4239c1:	push   esp
  4239c2:	pushf  
  4239c3:	retf   0x2c59
  4239c6:	daa    
  4239c7:	jae    0x423950
  4239c9:	add    cl,BYTE PTR [eax]
  4239cb:	bound  edx,QWORD PTR [eax]
  4239cd:	(bad)  
  4239ce:	in     al,0x97
  4239d0:	lea    esi,[ecx+0x16]
  4239d3:	mov    al,0x86
  4239d5:	mov    al,0xf4
  4239d7:	arpl   WORD PTR [ecx+0x13],cx
  4239da:	cmp    eax,0x54ce2501
  4239df:	and    eax,0x1456b21e
  4239e4:	mov    eax,0x6e6d27a2
  4239e9:	jle    0x423977
  4239eb:	adc    BYTE PTR [esi],bh
  4239ed:	inc    esi
  4239ee:	pop    esi
  4239ef:	icebp  
  4239f0:	jnp    0x423a1e
  4239f2:	in     eax,dx
  4239f3:	arpl   WORD PTR [edi+0x1ee7acc6],ax
  4239f9:	adc    edx,DWORD PTR [esi]
  4239fb:	outs   dx,DWORD PTR ds:[esi]
  4239fc:	jp     0x423a36
  4239fe:	call   0x4a7d:0x95ebea1a
  423a05:	xor    eax,DWORD PTR [esi+0x11267076]
  423a0b:	mov    dh,ah
  423a0d:	fwait
  423a0e:	xchg   dl,bl
  423a10:	and    bl,BYTE PTR [edx-0x5e]
  423a13:	popw   es
  423a15:	jne    0x423a0e
  423a17:	inc    eax
  423a18:	dec    ebp
  423a19:	sbb    cl,BYTE PTR [edi]
  423a1b:	(bad)  
  423a1c:	ins    DWORD PTR es:[edi],dx
  423a1d:	pop    ss
  423a1e:	outs   dx,DWORD PTR ds:[esi]
  423a1f:	add    DWORD PTR [ebp+0x31a9c18a],ecx
  423a25:	clc    
  423a26:	in     al,0x4c
  423a28:	jns    0x423a3a
  423a2a:	ds repnz push ebx
  423a2d:	stos   DWORD PTR es:[edi],eax
  423a2e:	std    
  423a2f:	imul   ebx,DWORD PTR [esi],0x43
  423a32:	mov    cl,BYTE PTR [esi+0x2]
  423a35:	shl    BYTE PTR ds:0x9ee862a5,1
  423a3b:	fs mov bl,0x26
  423a3e:	adc    al,0xcb
  423a40:	xor    DWORD PTR [ebp+eax*4+0x7b],eax
  423a44:	push   0xa28c2dfe
  423a49:	test   BYTE PTR [eax-0x35],bl
  423a4c:	clc    
  423a4d:	test   BYTE PTR [edx],al
  423a4f:	in     al,0xd8
  423a51:	pop    ss
  423a52:	or     BYTE PTR [ebx-0x71],0x3b
  423a56:	jns    0x423a97
  423a58:	cmc    
  423a59:	sbb    eax,ecx
  423a5b:	shl    BYTE PTR [ebx*8+0x4f828f1a],1
  423a62:	(bad)  
  423a64:	retf   
  423a65:	push   es
  423a66:	push   ebp
  423a67:	jle    0x423a56
  423a69:	push   cs
  423a6a:	hlt    
  423a6b:	xor    BYTE PTR [edi],al
  423a6d:	es mov al,0x9e
  423a70:	sbb    eax,DWORD PTR [ecx+0x277ddf39]
  423a76:	sub    bh,BYTE PTR [edx+0x2a]
  423a79:	dec    ecx
  423a7a:	inc    edx
  423a7b:	pusha  
  423a7c:	fbstp  TBYTE PTR [edx-0x79ba3994]
  423a82:	fmul   DWORD PTR [eax+0x4538966f]
  423a88:	dec    ebp
  423a89:	test   DWORD PTR [eax],0xed62c78d
  423a8f:	sti    
  423a90:	mov    eax,ds:0x3e0b73d
  423a95:	pop    edi
  423a96:	and    BYTE PTR [eax],bh
  423a98:	or     BYTE PTR [esi],0x2
  423a9b:	mov    ebp,0x53ae1f2b
  423aa0:	repz or DWORD PTR [esi-0x20a51d4f],esi
  423aa7:	jge    0x423a35
  423aa9:	mov    esp,0x5c3a5371
  423aae:	jbe    0x423aa4
  423ab0:	mov    edx,DWORD PTR [eax-0x48914a3b]
  423ab6:	sub    bh,BYTE PTR [edi]
  423ab8:	mov    ebp,0x8973d295
  423abd:	in     eax,0xe6
  423abf:	push   ebx
  423ac0:	jb     0x423a99
  423ac2:	sub    edx,eax
  423ac4:	aam    0x36
  423ac6:	repz push esi
  423ac8:	xchg   dl,dl
  423aca:	sub    DWORD PTR [ecx],esi
  423acc:	xor    eax,0xc82b1680
  423ad1:	pop    ebp
  423ad2:	cmp    al,0x64
  423ad4:	mov    ds:0xca4f42e7,al
  423ad9:	and    al,0xee
  423adb:	or     DWORD PTR [ebx],0xffffffae
  423ade:	leave  
  423adf:	fwait
  423ae0:	push   ss
  423ae1:	xchg   esi,eax
  423ae2:	outs   dx,DWORD PTR ds:[esi]
  423ae3:	addr16 adc al,0xfc
  423ae6:	push   edi
  423ae7:	push   ds
  423ae8:	test   BYTE PTR [edi+0x6e6203ba],bl
  423aee:	scas   al,BYTE PTR es:[edi]
  423aef:	outs   dx,DWORD PTR ds:[esi]
  423af0:	mov    ah,BYTE PTR [eax+0x67aead07]
  423af6:	mov    ebx,0x3f3b71ee
  423afb:	push   0x2d203db3
  423b00:	(bad)  
  423b02:	push   ebp
  423b03:	push   ecx
  423b04:	and    eax,eax
  423b06:	xor    esp,ebx
  423b08:	push   es
  423b09:	pop    esi
  423b0a:	das    
  423b0b:	mov    WORD PTR ds:0xb440aff7,es
  423b11:	push   edi
  423b12:	dec    ebx
  423b13:	fsubp  st(6),st
  423b15:	push   ebx
  423b16:	pop    ss
  423b17:	or     eax,DWORD PTR [eax+0x3f]
  423b1a:	mov    edx,0x2239f693
  423b1f:	std    
  423b20:	add    eax,DWORD PTR [ecx]
  423b22:	test   al,0x88
  423b24:	add    esp,DWORD PTR es:[eax-0x28]
  423b28:	cli    
  423b29:	pop    esp
  423b2a:	mov    al,ds:0x6d39e1bb
  423b2f:	stos   BYTE PTR es:[edi],al
  423b30:	push   es
  423b31:	mov    edi,0x77264aef
  423b36:	pop    eax
  423b37:	ds and eax,0xe5e011b3
  423b3d:	pusha  
  423b3e:	sub    BYTE PTR [edi],al
  423b40:	outs   dx,DWORD PTR ds:[esi]
  423b41:	lock cwde 
  423b43:	(bad)  
  423b44:	and    dh,dh
  423b46:	and    cl,BYTE PTR [ebx+0x3c56cab3]
  423b4c:	jnp    0x423ba8
  423b4e:	jmp    0x423ae9
  423b50:	mov    ds:0xfb00f33f,al
  423b55:	dec    esp
  423b56:	inc    edx
  423b57:	out    0x40,eax
  423b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b5a:	nop
  423b5b:	bound  edx,QWORD PTR [eax*8+0x598b3f3a]
  423b62:	sub    al,0x2e
  423b64:	in     eax,0xda
  423b66:	sbb    esi,edi
  423b68:	and    DWORD PTR [edx],esi
  423b6a:	fisttp QWORD PTR ds:0xbf10c656
  423b70:	addr16 ds sub al,bl
  423b74:	xor    ebp,esp
  423b76:	sub    DWORD PTR ds:0x8b2f2974,ebp
  423b7c:	rcl    DWORD PTR [ecx+0xb],cl
  423b7f:	jns    0x423ba4
  423b81:	and    DWORD PTR [eax],0x73d006e7
  423b87:	mov    eax,DWORD PTR [ecx-0x20]
  423b8a:	pop    esp
  423b8b:	lods   eax,DWORD PTR ds:[esi]
  423b8c:	jmp    0x705d460b
  423b91:	dec    ebx
  423b92:	jns    0x423c0e
  423b94:	sbb    al,BYTE PTR [edi+0x64917a42]
  423b9a:	lea    ecx,[eax]
  423b9c:	dec    ebp
  423b9d:	pop    ds
  423b9e:	(bad)  
  423b9f:	mov    dh,0x42
  423ba1:	mov    ecx,0xd0ce9849
  423ba6:	push   esi
  423ba7:	rcr    edi,0x44
  423baa:	jbe    0x423ba1
  423bac:	push   es
  423bad:	jne    0x423bd1
  423baf:	pop    edi
  423bb0:	xchg   ecx,eax
  423bb1:	lods   al,BYTE PTR ds:[esi]
  423bb2:	push   0x77a17744
  423bb7:	les    eax,FWORD PTR [ebx]
  423bb9:	mov    eax,ds:0x1f50b6b9
  423bbe:	cmp    eax,DWORD PTR [esi+0x37]
  423bc1:	cmc    
  423bc2:	cld    
  423bc3:	mov    al,ds:0x6e7cfc98
  423bc8:	in     al,dx
  423bc9:	call   FWORD PTR [esi]
  423bcb:	clc    
  423bcc:	test   al,0xa3
  423bce:	mov    BYTE PTR [edi],al
  423bd0:	mov    edi,0x2724b911
  423bd5:	in     eax,0x6b
  423bd7:	fidivr DWORD PTR [ebp+0x502c8fbf]
  423bdd:	shl    BYTE PTR [ebx],1
  423bdf:	fstp   DWORD PTR ds:0xace0290d
  423be5:	push   esi
  423be6:	pop    edi
  423be7:	test   bl,bh
  423be9:	aas    
  423bea:	push   0x49816f86
  423bef:	mov    bh,0x17
  423bf1:	inc    eax
  423bf2:	ins    BYTE PTR es:[edi],dx
  423bf3:	pusha  
  423bf4:	xchg   BYTE PTR [esi+edi*4],dh
  423bf7:	loop   0x423bc5
  423bf9:	mov    dl,al
  423bfb:	outs   dx,DWORD PTR ds:[esi]
  423bfc:	sbb    al,0x20
  423bfe:	mov    ds:0xc0022d22,al
  423c03:	test   BYTE PTR [edi],al
  423c05:	cmp    bh,al
  423c07:	dec    edi
  423c08:	pop    eax
  423c09:	xor    DWORD PTR cs:[edx-0x7bb6cc7d],esp
  423c10:	ja     0x423c2f
  423c12:	sbb    al,0x14
  423c14:	rcr    BYTE PTR [edx+edx*1-0x72],1
  423c18:	sbb    DWORD PTR [ecx],0x601e0f10
  423c1e:	shr    BYTE PTR [ecx],1
  423c20:	add    eax,0xba05a963
  423c25:	push   ebx
  423c26:	sti    
  423c27:	jns    0x423bf1
  423c29:	and    eax,0x949eedb6
  423c2e:	and    BYTE PTR [ebx-0x547da38e],dh
  423c34:	or     bh,dh
  423c36:	test   BYTE PTR [ebp-0x7e261ef3],dl
  423c3c:	jecxz  0x423c80
  423c3e:	sbb    esp,ebx
  423c40:	push   ebx
  423c41:	jbe    0x423bc7
  423c43:	push   0xa
  423c45:	mul    BYTE PTR [ebx+edx*8+0x78]
  423c49:	xchg   ebp,eax
  423c4a:	out    0x8a,eax
  423c4c:	sub    eax,0x5af5fca4
  423c51:	add    BYTE PTR [ecx-0x7ce0e684],ah
  423c57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c58:	in     al,0xd8
  423c5a:	jmp    0x525e857c
  423c5f:	mov    esi,0xccd53133
  423c64:	cmp    DWORD PTR [esi],0xbcac269
  423c6a:	jge    0x423c02
  423c6c:	fst    DWORD PTR [ebx-0x7a]
  423c6f:	mov    ecx,0xbecd597a
  423c74:	xchg   ebx,eax
  423c75:	fistp  WORD PTR [esi]
  423c77:	mov    DWORD PTR [esi],0x7ef1bfcf
  423c7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c7e:	dec    edi
  423c7f:	sub    dl,BYTE PTR [edi+0xa]
  423c82:	pop    edx
  423c83:	push   ecx
  423c84:	dec    edx
  423c85:	popf   
  423c86:	cmp    ecx,DWORD PTR [ebx+0x175c8ada]
  423c8c:	mov    es,WORD PTR ds:0xa3b2407d
  423c92:	mov    WORD PTR [ebx-0x79],gs
  423c95:	adc    DWORD PTR [ebp-0x29],ebp
  423c98:	into   
  423c99:	pop    es
  423c9a:	ret    0xa39b
  423c9d:	aaa    
  423c9e:	(bad)  
  423c9f:	mov    esp,0xe0ddf051
  423ca4:	add    DWORD PTR [edi+eax*2-0x1a],ecx
  423ca8:	dec    ebx
  423ca9:	push   ebx
  423caa:	xchg   ebp,eax
  423cab:	pop    ecx
  423cac:	add    DWORD PTR [ecx-0x19],ebp
  423caf:	pop    esp
  423cb0:	in     al,0x17
  423cb2:	xchg   ebp,eax
  423cb3:	mov    ch,0x6a
  423cb5:	pop    es
  423cb6:	fwait
  423cb7:	push   ds
  423cb8:	mov    WORD PTR [ecx-0x5085870],ds
  423cbe:	mov    ah,0xcc
  423cc0:	and    esp,esi
  423cc2:	sub    DWORD PTR [eax],eax
  423cc4:	inc    edi
  423cc5:	in     al,0x5c
  423cc7:	or     eax,0xa833d8c6
  423ccc:	or     eax,0x67d38a0f
  423cd1:	ret    
  423cd2:	gs pop edx
  423cd4:	imul   edx,DWORD PTR [edi+0x57],0xeee8e950
  423cdb:	mov    dl,0xd1
  423cdd:	and    esp,DWORD PTR [edx+0x5e5ce366]
  423ce3:	mov    cl,0x40
  423ce5:	arpl   cx,ax
  423ce7:	fadd   QWORD PTR [esi+0xb]
  423cea:	dec    esp
  423ceb:	(bad)  
  423cec:	iret   
  423ced:	xor    eax,0x49a49524
  423cf2:	shl    DWORD PTR [esi-0x6d],cl
  423cf5:	pop    ss
  423cf6:	xor    ah,cl
  423cf8:	jmp    0xa1dd1728
  423cfd:	mov    esp,0x1dbf7fd1
  423d02:	dec    edi
  423d03:	imul   ecx,ecx,0x5
  423d06:	cmp    eax,0x84d5a1fc
  423d0b:	dec    edi
  423d0c:	ret    
  423d0d:	inc    esp
  423d0e:	addr16 pop edi
  423d10:	mov    bh,0xbd
  423d12:	adc    eax,0x5d443705
  423d17:	bound  esi,QWORD PTR [ebx+eiz*8-0x79]
  423d1b:	mov    esp,0xd9ba27ef
  423d20:	stos   BYTE PTR es:[edi],al
  423d21:	into   
  423d22:	aad    0xd8
  423d24:	mov    al,ds:0xeec3baf1
  423d29:	xor    edi,DWORD PTR [ebx-0x6c86a0f2]
  423d2f:	pop    edi
  423d30:	scas   eax,DWORD PTR es:[edi]
  423d31:	(bad)  
  423d32:	push   ebp
  423d33:	mov    ch,0xb
  423d35:	push   edx
  423d36:	xchg   esi,eax
  423d37:	pop    esp
  423d38:	lds    eax,FWORD PTR gs:[ebx]
  423d3b:	stc    
  423d3c:	fdiv   DWORD PTR [ebx-0x68]
  423d3f:	sub    bl,BYTE PTR [ebx]
  423d41:	gs mov cl,0x73
  423d44:	cmp    DWORD PTR [edi-0x68],eax
  423d47:	xor    eax,0xf1231e9b
  423d4c:	loop   0x423d85
  423d4e:	lods   eax,DWORD PTR ds:[esi]
  423d4f:	clc    
  423d50:	xor    esp,DWORD PTR [esi-0x45d96eec]
  423d56:	jle    0x423d3b
  423d58:	mov    WORD PTR [edx+0x50a7bab7],gs
  423d5e:	retf   
  423d5f:	xor    dl,ch
  423d61:	push   esi
  423d62:	pop    edx
  423d63:	lods   al,BYTE PTR ds:[esi]
  423d64:	push   edx
  423d65:	fs cmc 
  423d67:	stos   DWORD PTR es:[edi],eax
  423d68:	cs jp  0x423d34
  423d6b:	inc    edi
  423d6c:	add    DWORD PTR [ecx],0xe9d32262
  423d72:	xchg   BYTE PTR [ebp+0x3c],cl
  423d75:	and    al,0x2a
  423d77:	mov    bl,0x75
  423d79:	int    0x10
  423d7b:	fistp  QWORD PTR [edx-0x80]
  423d7e:	and    esp,DWORD PTR [ebp+eiz*2-0x3a7c4946]
  423d85:	cld    
  423d86:	sub    DWORD PTR [edi],0x176509b4
  423d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d8d:	jno    0x423dcc
  423d8f:	fs ror esi,1
  423d92:	jne    0x423dfb
  423d94:	jo     0x423dce
  423d96:	sti    
  423d97:	repnz stos DWORD PTR es:[edi],eax
  423d99:	xchg   edi,eax
  423d9a:	push   esp
  423d9b:	das    
  423d9c:	xchg   DWORD PTR [ebx+0x7587edea],esi
  423da2:	bound  ebx,QWORD PTR [ebp+edx*1-0x3f1b7d29]
  423da9:	mov    ds:0x763e6f6d,eax
  423dae:	mov    cl,0xed
  423db0:	mov    esp,DWORD PTR [eax+0x42ebb58e]
  423db6:	mov    WORD PTR [ecx-0x49],?
  423db9:	add    DWORD PTR [eax+0x5515f061],0x5e
  423dc0:	sub    ah,ch
  423dc2:	out    dx,eax
  423dc3:	mov    esp,0x797edfac
  423dc8:	pop    ecx
  423dc9:	inc    esi
  423dca:	ss loope 0x423dd2
  423dcd:	mov    DWORD PTR [ebx+0x2b],esp
  423dd0:	call   0x9447e00c
  423dd5:	test   DWORD PTR [esi+ebp*1-0x68],0x46e84f79
  423ddd:	mov    ebp,0x334ec6e
  423de2:	jnp    0x423dc4
  423de4:	fidivr WORD PTR [esi+eiz*1]
  423de7:	and    eax,0x3f8e4423
  423dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ded:	xchg   BYTE PTR [esi+0x63919766],ah
  423df3:	sub    BYTE PTR [ebp+0x36],ch
  423df6:	aaa    
  423df7:	lock mov cl,0xe9
  423dfa:	push   ds
  423dfb:	jae    0x423e1c
  423dfd:	xchg   edi,eax
  423dfe:	imul   eax,DWORD PTR [edi-0x1d],0x1f
  423e02:	fsub   st(3),st
  423e04:	adc    ch,al
  423e06:	dec    edx
  423e07:	out    0xd3,eax
  423e09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e0a:	test   al,0xf6
  423e0c:	rcr    DWORD PTR [edx+ebx*4+0xe014127],1
  423e13:	pop    esi
  423e14:	dec    ebp
  423e15:	(bad)  
  423e16:	lods   eax,DWORD PTR ds:[esi]
  423e17:	push   ss
  423e18:	inc    edi
  423e19:	nop
  423e1a:	lods   al,BYTE PTR ds:[esi]
  423e1b:	ret    0xc52c
  423e1e:	push   edi
  423e1f:	push   esp
  423e20:	xchg   esi,eax
  423e21:	sbb    DWORD PTR [ebx],ecx
  423e23:	sub    eax,0x58b5489e
  423e28:	add    BYTE PTR [esi-0x70],dh
  423e2b:	nop
  423e2c:	(bad)  
  423e2d:	(bad)  
  423e2e:	aam    0x48
  423e30:	repz sbb ebx,DWORD PTR [ecx+eax*2+0x60]
  423e35:	inc    ebp
  423e36:	mov    ds:0x9bf375fb,eax
  423e3b:	loop   0x423e66
  423e3d:	int3   
  423e3e:	sahf   
  423e3f:	adc    eax,ebx
  423e41:	div    eax
  423e43:	push   edx
  423e44:	and    eax,0x2c28a2fa
  423e49:	pop    edi
  423e4a:	cmp    eax,0x1f0f69ba
  423e4f:	sub    ch,BYTE PTR [edi]
  423e51:	mov    bl,0x13
  423e53:	and    al,0x38
  423e55:	push   esi
  423e56:	xchg   BYTE PTR [ebp+0x16],ah
  423e59:	rol    BYTE PTR ds:0x7eb4d589,cl
  423e5f:	jb     0x423e0d
  423e61:	pop    edx
  423e62:	ficom  WORD PTR [esi-0x46]
  423e65:	sar    esi,0xf2
  423e68:	imul   edi,DWORD PTR [edi+edi*8+0x1b883bf],0xece40b0c
  423e73:	repz jp 0x423ee0
  423e76:	inc    edx
  423e77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e78:	mov    ds:0x6fac916f,al
  423e7d:	jl     0x423e32
  423e7f:	ins    BYTE PTR es:[edi],dx
  423e80:	mov    edx,0xc5856d9
  423e85:	sub    cl,BYTE PTR [ebx+0x33]
  423e88:	daa    
  423e89:	pop    cx
  423e8b:	adc    esp,DWORD PTR [esi]
  423e8d:	and    DWORD PTR [edx],esi
  423e8f:	xchg   DWORD PTR [edi+ebp*8+0x33af53f0],esp
  423e96:	fwait
  423e97:	loopne 0x423ed6
  423e99:	push   0xffffffb1
  423e9b:	in     al,0x87
  423e9d:	adc    DWORD PTR [ebp+0xf4f2267],esi
  423ea3:	pop    esi
  423ea4:	sbb    esi,DWORD PTR [esi-0x14]
  423ea7:	push   0x20
  423ea9:	cmp    eax,0xaa576904
  423eae:	mov    edx,0x6c439213
  423eb3:	inc    ebp
  423eb4:	das    
  423eb5:	mov    ebx,0xd5a87ce
  423eba:	cmp    ecx,DWORD PTR [esi]
  423ebc:	aas    
  423ebd:	dec    edi
  423ebe:	add    esi,ebx
  423ec0:	daa    
  423ec1:	in     al,dx
  423ec2:	out    dx,eax
  423ec3:	sub    BYTE PTR [ebx+ebx*8],0xdb
  423ec7:	sahf   
  423ec8:	int    0xa4
  423eca:	pop    ss
  423ecb:	xchg   ebp,eax
  423ecc:	push   es
  423ecd:	jbe    0x423ed5
  423ecf:	retf   
  423ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ed1:	add    ah,bh
  423ed3:	inc    esp
  423ed4:	test   ebx,edx
  423ed6:	mov    bh,0x6
  423ed8:	test   al,0x53
  423eda:	lods   al,BYTE PTR ds:[esi]
  423edb:	jle    0x423f4b
  423edd:	js     0x423e73
  423edf:	mov    esp,0x1f256a5d
  423ee4:	or     DWORD PTR [edx],0x48
  423ee7:	fadd   QWORD PTR [edx+0x27]
  423eea:	bound  eax,QWORD PTR [eax]
  423eec:	cmp    al,0x85
  423eee:	lods   al,BYTE PTR ds:[esi]
  423eef:	out    0xd6,al
  423ef1:	inc    ebx
  423ef2:	int3   
  423ef3:	adc    DWORD PTR [ebx+0x7da94131],eax
  423ef9:	xchg   esi,eax
  423efa:	js     0x423f7a
  423efc:	ret    
  423efd:	push   ss
  423efe:	push   ecx
  423eff:	(bad)  
  423f01:	inc    eax
  423f02:	push   ds
  423f03:	sbb    bh,dh
  423f05:	popa   
  423f06:	imul   ecx,DWORD PTR [edx-0x5ba3ad74],0xb0a03aa1
  423f10:	jecxz  0x423eae
  423f12:	push   0x7e
  423f14:	add    edx,DWORD PTR [eax-0x65]
  423f17:	pusha  
  423f18:	pop    ecx
  423f19:	scas   eax,DWORD PTR es:[edi]
  423f1a:	cmp    BYTE PTR [eax+esi*2+0x1e92fe5e],0xe0
  423f22:	inc    eax
  423f23:	cmp    DWORD PTR [ecx-0x29b5bb13],esp
  423f29:	mov    ch,0x3e
  423f2b:	aas    
  423f2c:	adc    DWORD PTR [edi+0x1c7f85c7],0xffffffa0
  423f33:	fwait
  423f34:	loope  0x423ef1
  423f36:	lock sub eax,0x8997fa69
  423f3c:	xlat   BYTE PTR ds:[ebx]
  423f3d:	popf   
  423f3e:	jns    0x423f87
  423f40:	mov    ebx,0x95a1fbbf
  423f45:	inc    esi
  423f46:	sti    
  423f47:	jle    0x423f1f
  423f49:	push   ax
  423f4b:	xchg   ecx,eax
  423f4c:	lods   eax,DWORD PTR ds:[esi]
  423f4d:	ja     0x423f5b
  423f4f:	je     0x423fc7
  423f51:	xchg   BYTE PTR fs:[ebp-0x7e],ah
  423f55:	mov    cl,BYTE PTR [esi]
  423f57:	jmp    0x4af5:0x9663f2e0
  423f5e:	mov    eax,0x4236303e
  423f63:	pop    ebp
  423f64:	mov    al,0xa2
  423f66:	cmp    ebp,DWORD PTR [ecx-0x1eebd9f2]
  423f6c:	sar    ebp,cl
  423f6e:	mov    DWORD PTR [ebx-0x42119f78],edi
  423f74:	mov    al,ds:0xd7c0f960
  423f79:	sub    edi,esp
  423f7b:	xchg   esi,eax
  423f7c:	ins    BYTE PTR es:[edi],dx
  423f7d:	imul   edi,esi,0xffffffa1
  423f80:	mov    eax,ds:0x84b36d2
  423f85:	add    al,0xcb
  423f87:	fidiv  DWORD PTR [edi+0x20]
  423f8a:	and    BYTE PTR [esp+edi*2-0x71],ch
  423f8e:	push   es
  423f8f:	inc    edi
  423f90:	lods   al,BYTE PTR ds:[esi]
  423f91:	cmp    cl,al
  423f93:	inc    eax
  423f94:	push   esi
  423f95:	test   DWORD PTR ds:0x1b104784,0x9803c462
  423f9f:	rcl    BYTE PTR [ebx],0xfa
  423fa2:	pop    es
  423fa3:	pusha  
  423fa4:	sbb    DWORD PTR [ebp+0x79],0x29
  423fa8:	into   
  423fa9:	daa    
  423faa:	dec    ebx
  423fab:	xor    al,0x65
  423fad:	shl    DWORD PTR [ecx],cl
  423faf:	mov    al,ds:0x3ac1dae4
  423fb4:	hlt    
  423fb5:	sti    
  423fb6:	cmc    
  423fb7:	mov    al,ds:0x60453367
  423fbc:	in     al,dx
  423fbd:	mov    ecx,0xb7dd0f2d
  423fc2:	jnp    0x423f63
  423fc4:	xor    BYTE PTR [ecx-0x11],ch
  423fc7:	mov    eax,0xf70ede1e
  423fcc:	jne    0x424027
  423fce:	jae    0x423f6e
  423fd0:	adc    DWORD PTR [ecx-0x67211cf7],0xffffff8b
  423fd7:	and    eax,0xafd03122
  423fdc:	lds    esi,FWORD PTR [edx+0x649fb260]
  423fe2:	loop   0x424031
  423fe4:	mov    al,0x8f
  423fe6:	imul   ecx,DWORD PTR [edx+0x15],0xffffffe9
  423fea:	loop   0x424041
  423fec:	mov    BYTE PTR [edx+0x3e160bbb],dh
  423ff2:	cwde   
  423ff3:	sub    BYTE PTR [bx+di+0x39],dh
  423ff7:	xchg   ebp,eax
  423ff8:	jmp    0xe321:0x4abd5fb0
  423fff:	rcr    DWORD PTR [ebx+0x55771209],0xdf
  424006:	and    ebp,DWORD PTR [esi]
  424008:	xor    eax,0x43e61147
  42400d:	push   ds
  42400e:	jno    0x424070
  424010:	aaa    
  424011:	not    BYTE PTR [ebp-0x6f1c8909]
  424017:	(bad)  
  424018:	and    bh,BYTE PTR [ebp+esi*4+0x5bbca727]
  42401f:	arpl   WORD PTR [ebp-0x3d],bx
  424022:	xchg   edx,eax
  424023:	mov    WORD PTR [edx+ebx*8+0x265b4b86],gs
  42402a:	ja     0x423fd9
  42402c:	mov    eax,0xcb585d0a
  424031:	or     al,0x55
  424033:	jns    0x423fbf
  424035:	loopne 0x4240a2
  424037:	mov    esi,0x85c8374b
  42403c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42403d:	dec    ebx
  42403e:	in     eax,dx
  42403f:	inc    ebp
  424040:	jp     0x423ff9
  424042:	fcmovne st,st(5)
  424044:	rol    ecx,0xa0
  424047:	sbb    ecx,DWORD PTR [ecx+0x6f]
  42404a:	stos   DWORD PTR es:[edi],eax
  42404b:	in     eax,dx
  42404c:	cmp    eax,0x91112f08
  424051:	adc    BYTE PTR [ebp+0x40],dh
  424054:	into   
  424055:	and    bl,BYTE PTR [eax]
  424057:	ss adc ch,ch
  42405a:	(bad)  
  42405b:	std    
  42405c:	(bad)  
  42405d:	imul   ebp,DWORD PTR [ecx-0x65],0x82e9ed03
  424064:	mov    ebp,ebp
  424066:	call   0x6a659a6d
  42406b:	add    eax,0x53477c29
  424070:	arpl   ax,cx
  424072:	jbe    0x42407f
  424074:	inc    ebx
  424075:	loop   0x4240f2
  424077:	or     ch,BYTE PTR [ebx]
  424079:	mov    edx,0x6a629b28
  42407e:	sbb    al,BYTE PTR [eax]
  424080:	ins    BYTE PTR es:[edi],dx
  424081:	call   0x99ff:0xbd52465e
  424088:	inc    ebp
  424089:	add    eax,0xe9e43fb
  42408e:	pop    edx
  42408f:	push   ecx
  424090:	aad    0xf0
  424092:	mov    edx,0xbd0e2a8d
  424097:	pop    ebx
  424098:	(bad)  
  424099:	jp     0x4240f8
  42409b:	lods   eax,DWORD PTR ds:[si]
  42409d:	ja     0x4240a4
  42409f:	jns    0x424073
  4240a1:	push   es
  4240a2:	sbb    DWORD PTR ds:0x7bcf92f2,esi
  4240a8:	jne    0x42403e
  4240aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240ab:	(bad)  
  4240ac:	xor    DWORD PTR [ebx],ebx
  4240ae:	ja     0x424121
  4240b0:	jne    0x424091
  4240b2:	pop    esp
  4240b3:	xchg   esp,eax
  4240b4:	nop
  4240b5:	inc    esi
  4240b6:	es dec ebp
  4240b8:	adc    BYTE PTR [ecx+0x38],0x4c
  4240bc:	jns    0x424138
  4240be:	fnstenv [eax+ebx*2-0x5b47704a]
  4240c5:	in     eax,0xca
  4240c7:	lds    eax,FWORD PTR [ebp+0x1d36e705]
  4240cd:	fcomp  QWORD PTR [edi+0x20000b49]
  4240d3:	push   cs
  4240d4:	mov    dh,0xa2
  4240d6:	psrlw  mm3,mm5
  4240d9:	cmp    al,0x40
  4240db:	and    al,0x8b
  4240dd:	mov    dl,0x21
  4240df:	data16 sub BYTE PTR [ebx+eiz*4+0x5d],bh
  4240e4:	cwde   
  4240e5:	mov    WORD PTR [ebp*2-0xdaf924],fs
  4240ec:	jl     0x4240f1
  4240ee:	retf   0xdab6
  4240f1:	xor    BYTE PTR [ebp-0x9],cl
  4240f4:	mov    eax,ds:0x6831d2d7
  4240f9:	cli    
  4240fa:	jmp    0x101a42a7
  4240ff:	cli    
  424100:	ss stos DWORD PTR es:[edi],eax
  424102:	mov    dl,0x82
  424104:	bts    DWORD PTR [ebp+0x1e8ce077],eax
  42410b:	rol    dl,1
  42410d:	mov    bl,0xc1
  42410f:	pop    eax
  424110:	shl    BYTE PTR [ebp+ebx*8-0x3a],0xe9
  424115:	push   es
  424116:	test   al,0x64
  424118:	pop    edi
  424119:	paddq  mm4,QWORD PTR [edx]
  42411c:	push   edx
  42411d:	std    
  42411e:	cvtdq2ps xmm7,xmm7
  424121:	mov    eax,ds:0x99783d77
  424126:	ret    
  424127:	inc    edx
  424128:	mov    ?,WORD PTR [edi+0x2c]
  42412b:	sbb    bl,bl
  42412d:	sbb    ah,BYTE PTR [edx+0x18]
  424130:	xchg   DWORD PTR [bx],esp
  424133:	sbb    BYTE PTR [edi+esi*2],ch
  424136:	sub    bl,0x4e
  424139:	inc    edx
  42413a:	xchg   esi,eax
  42413b:	or     al,0x91
  42413d:	mov    BYTE PTR [edx],ah
  42413f:	std    
  424140:	lods   eax,DWORD PTR ds:[esi]
  424141:	sub    bh,BYTE PTR [edx-0x3d]
  424144:	imul   edi,DWORD PTR [eax-0x7637a5e],0x5b
  42414b:	pop    edi
  42414c:	pop    esi
  42414d:	leave  
  42414e:	ret    0xc
  424151:	push   ebp
  424152:	mov    ebp,esp
  424154:	push   ecx
  424155:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42415c:	mov    DWORD PTR ds:0x4291bb,0x19
  424166:	cmp    DWORD PTR ds:0x4291bb,0x0
  42416d:	je     0x4241c3
  424173:	cmp    DWORD PTR ds:0x4291bb,0x5
  42417a:	jb     0x4241c3
  424180:	jmp    0x424195
  424185:	push   0x6cdd
  42418a:	push   0x428019
  42418f:	call   DWORD PTR ds:0x42a587
  424195:	cmp    DWORD PTR ds:0x4291bb,0x6
  42419c:	jne    0x4241b1
  4241a2:	xor    ecx,ecx
  4241a4:	xor    ecx,DWORD PTR ds:0x4291bb
  4241aa:	dec    ecx
  4241ab:	mov    DWORD PTR ds:0x4291bb,ecx
  4241b1:	mov    ecx,DWORD PTR ds:0x4291bb
  4241b7:	dec    ecx
  4241b8:	mov    DWORD PTR ds:0x4291bb,ecx
  4241be:	jmp    0x424166
  4241c3:	mov    eax,DWORD PTR [ebp+0x8]
  4241c6:	or     ecx,ecx
  4241c8:	movsx  eax,BYTE PTR [eax]
  4241cb:	or     ecx,0x305b
  4241d1:	mov    edx,0x3272f3
  4241d6:	add    DWORD PTR ds:0x4291c7,0x4291f7
  4241e0:	sub    eax,edx
  4241e2:	mov    DWORD PTR ds:0x4291a7,0x1e
  4241ec:	cmp    DWORD PTR ds:0x4291a7,0x0
  4241f3:	je     0x42424b
  4241f9:	cmp    DWORD PTR ds:0x4291a7,0x6
  424200:	jl     0x42424b
  424206:	jmp    0x42421d
  42420b:	push   0x4280f2
  424210:	push   0x1
  424212:	push   0x8730
  424217:	call   DWORD PTR ds:0x42a58f
  42421d:	cmp    DWORD PTR ds:0x4291a7,0x7
  424224:	jne    0x424237
  42422a:	mov    ecx,DWORD PTR ds:0x4291a7
  424230:	dec    ecx
  424231:	mov    DWORD PTR ds:0x4291a7,ecx
  424237:	xor    ecx,ecx
  424239:	add    ecx,DWORD PTR ds:0x4291a7
  42423f:	dec    ecx
  424240:	mov    DWORD PTR ds:0x4291a7,ecx
  424246:	jmp    0x4241ec
  42424b:	mov    ecx,0x75108ac
  424250:	xor    eax,ecx
  424252:	cmp    eax,0xf89c85f6
  424257:	jne    0x424286
  42425d:	mov    eax,DWORD PTR [ebp+0x8]
  424260:	push   esi
  424261:	mov    esi,DWORD PTR [ebp+0x8]
  424264:	add    esi,DWORD PTR [eax+0x3c]
  424267:	mov    DWORD PTR [ebp+0x8],esi
  42426a:	mov    eax,DWORD PTR [ebp-0x4]
  42426d:	mov    esi,DWORD PTR [ebp+0x8]
  424270:	xor    eax,ecx
  424272:	add    eax,edx
  424274:	cmp    DWORD PTR [esi+0x54],eax
  424277:	pop    esi
  424278:	je     0x424286
  42427e:	mov    eax,DWORD PTR [ebp+0x8]
  424281:	jmp    0x42428d
  424286:	mov    eax,DWORD PTR [ebp-0x4]
  424289:	xor    eax,ecx
  42428b:	add    eax,edx
  42428d:	leave  
  42428e:	ret    0x4
  424291:	push   ebp
  424292:	mov    ebp,esp
  424294:	sub    esp,0xc
  424297:	and    DWORD PTR ds:0x429157,0x0
  4242a1:	mov    edx,DWORD PTR ds:0x429157
  4242a7:	inc    edx
  4242a8:	mov    DWORD PTR ds:0x429157,edx
  4242ae:	cmp    DWORD PTR ds:0x429157,0x16
  4242b5:	jl     0x4242d6
  4242bb:	jmp    0x4242c9
  4242c0:	push   DWORD PTR [ebp-0x14]
  4242c3:	call   DWORD PTR ds:0x42a593
  4242c9:	cmp    DWORD PTR ds:0x429157,0x13
  4242d0:	jb     0x4242a1
  4242d6:	push   esi
  4242d7:	mov    esi,0xf89c85a1
  4242dc:	mov    edx,DWORD PTR ds:0x429e9f
  4242e2:	mov    ecx,DWORD PTR ds:0x429ea7
  4242e8:	sub    edx,ecx
  4242ea:	sub    edx,DWORD PTR [edx+ecx*1]
  4242ed:	mov    DWORD PTR [ebp-0x8],esi
  4242f0:	and    DWORD PTR ds:0x4291bf,0x59ca
  4242fa:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  424301:	sub    edx,DWORD PTR ds:0x4291df
  424307:	push   edi
  424308:	and    DWORD PTR ds:0x4291c7,0x0
  424312:	jmp    0x424326
  424317:	xor    ecx,ecx
  424319:	or     ecx,DWORD PTR ds:0x4291c7
  42431f:	inc    ecx
  424320:	mov    DWORD PTR ds:0x4291c7,ecx
  424326:	cmp    DWORD PTR ds:0x4291c7,0x1f
  42432d:	jae    0x42435b
  424333:	cmp    DWORD PTR ds:0x4291c7,0x20
  42433a:	jbe    0x42435b
  424340:	jmp    0x424356
  424345:	push   0x42803d
  42434a:	push   DWORD PTR [ebp-0x20]
  42434d:	push   DWORD PTR [ebp-0x24]
  424350:	call   DWORD PTR ds:0x42a597
  424356:	jmp    0x424317
  42435b:	mov    eax,eax
  42435d:	and    DWORD PTR ds:0x42919b,0x3c1b
  424367:	mov    eax,DWORD PTR [ebp-0x4]
  42436a:	add    DWORD PTR ds:0x4291df,0x7092
  424374:	mov    edi,DWORD PTR [ebp-0x8]
  424377:	adc    DWORD PTR ds:0x429193,edx
  42437d:	mov    ecx,0x75108ac
  424382:	mov    edx,DWORD PTR ds:0x42917b
  424388:	and    DWORD PTR ds:0x4291e7,edx
  42438e:	xor    eax,ecx
  424390:	add    DWORD PTR ds:0x4291df,0x314e
  42439a:	xor    edi,ecx
  42439c:	mov    edx,DWORD PTR ds:0x429e8b
  4243a2:	mov    edx,DWORD PTR [edx]
  4243a4:	adc    DWORD PTR ds:0x4291ab,edx
  4243aa:	mov    edx,0x3272f3
  4243af:	add    edi,edx
  4243b1:	add    eax,edx
  4243b3:	imul   eax,edi
  4243b6:	mov    edi,DWORD PTR [ebp+0xc]
  4243b9:	cmp    edi,eax
  4243bb:	je     0x424410
  4243c1:	mov    DWORD PTR [ebp-0xc],esi
  4243c4:	mov    eax,DWORD PTR [ebp-0xc]
  4243c7:	mov    esi,DWORD PTR [ebp+0xc]
  4243ca:	xor    eax,ecx
  4243cc:	lea    eax,[eax*8+0x1939810]
  4243d3:	mov    eax,DWORD PTR [esi+eax*1]
  4243d6:	mov    DWORD PTR [ebp+0xc],eax
  4243d9:	mov    eax,DWORD PTR [ebp-0x4]
  4243dc:	mov    esi,DWORD PTR [ebp-0x8]
  4243df:	xor    eax,ecx
  4243e1:	xor    esi,ecx
  4243e3:	add    esi,edx
  4243e5:	add    eax,edx
  4243e7:	imul   eax,esi
  4243ea:	mov    esi,DWORD PTR [ebp+0xc]
  4243ed:	cmp    esi,eax
  4243ef:	je     0x424410
  4243f5:	mov    eax,DWORD PTR [ebp-0x4]
  4243f8:	xor    eax,ecx
  4243fa:	mov    ecx,DWORD PTR [ebp+0xc]
  4243fd:	add    eax,edx
  4243ff:	imul   eax,ecx
  424402:	add    eax,DWORD PTR [ebp+0x8]
  424405:	mov    DWORD PTR [ebp+0xc],eax
  424408:	mov    eax,DWORD PTR [ebp+0xc]
  42440b:	jmp    0x424421
  424410:	mov    eax,DWORD PTR [ebp-0x4]
  424413:	mov    esi,DWORD PTR [ebp-0x8]
  424416:	xor    esi,ecx
  424418:	xor    eax,ecx
  42441a:	add    esi,edx
  42441c:	add    eax,edx
  42441e:	imul   eax,esi
  424421:	pop    edi
  424422:	pop    esi
  424423:	leave  
  424424:	ret    0x8
	...
  424433:	add    BYTE PTR [ebx],dl
  424435:	push   esp
  424436:	test   BYTE PTR [ebp+0x0],cl
  424439:	add    BYTE PTR [eax],al
  42443b:	add    BYTE PTR [edx],al
  42443d:	add    BYTE PTR [eax],al
  42443f:	add    BYTE PTR [eax],dh
  424441:	add    BYTE PTR [eax],al
  424443:	add    BYTE PTR [eax+0x44],dl
  424446:	add    al,BYTE PTR [eax]
  424448:	push   eax
  424449:	cmp    BYTE PTR [edx],al
  42444b:	add    BYTE PTR [eax],al
  42444d:	add    BYTE PTR [eax],al
  42444f:	add    BYTE PTR [edx+0x53],dl
  424452:	inc    esp
  424453:	push   ebx
  424454:	enter  0x2cc1,0xa1
  424458:	pop    ss
  424459:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42445a:	fs inc edi
  42445c:	mov    ah,ch
  42445e:	xchg   ecx,eax
  42445f:	retf   
  424460:	jecxz  0x4244a5
  424462:	cld    
  424463:	dec    eax
  424464:	add    DWORD PTR [eax],eax
  424466:	add    BYTE PTR [eax],al
  424468:	inc    esi
  424469:	cmp    bl,BYTE PTR [edi+edx*2+0x69]
  42446d:	outs   dx,BYTE PTR ds:[esi]
  42446e:	outs   dx,DWORD PTR fs:[esi]
  424470:	ja     0x4244e5
  424472:	and    BYTE PTR [ecx+ebp*2+0x72],al
  424476:	pop    esp
  424477:	inc    esi
  424478:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0x636578
  424480:	mov    edx,DWORD PTR [ebp-0x14]
  424483:	sub    esp,0x108
  424489:	push   ebx
  42448a:	mov    eax,ebx
  42448c:	xchg   ecx,eax
  42448d:	mov    eax,DWORD PTR [ebp+0x8]
  424490:	cmp    eax,0xf89c85a1
  424495:	jne    0x424952
  42449b:	mov    eax,DWORD PTR [ebp+0xc]
  42449e:	cmp    eax,0xf89c85a2
  4244a3:	jne    0x424952
  4244a9:	mov    eax,DWORD PTR [ebp+0x24]
  4244ac:	mov    DWORD PTR [ebp-0x4],eax
  4244af:	mov    eax,DWORD PTR [ebp-0x4]
  4244b2:	mov    eax,DWORD PTR [eax+0x1d8]
  4244b8:	mov    eax,DWORD PTR [eax]
  4244ba:	mov    eax,DWORD PTR [eax]
  4244bc:	mov    DWORD PTR [ebp-0x8],eax
  4244bf:	mov    BYTE PTR [ebp-0x18],0x18
  4244c3:	mov    BYTE PTR [ebp-0x17],0x1f
  4244c7:	mov    BYTE PTR [ebp-0x16],0x1a
  4244cb:	mov    BYTE PTR [ebp-0x15],0x4c
  4244cf:	mov    BYTE PTR [ebp-0x14],0x4d
  4244d3:	mov    BYTE PTR [ebp-0x13],0x83
  4244d7:	mov    BYTE PTR [ebp-0x20],0xe
  4244db:	mov    BYTE PTR [ebp-0x1f],0xc
  4244df:	mov    BYTE PTR [ebp-0x1e],0x1e
  4244e3:	mov    BYTE PTR [ebp-0x1d],0xd
  4244e7:	mov    BYTE PTR [ebp-0x1c],0x4c
  4244eb:	mov    BYTE PTR [ebp-0x1b],0x4d
  4244ef:	mov    BYTE PTR [ebp-0x1a],0x83
  4244f3:	mov    BYTE PTR [ebp-0x28],0xc
  4244f7:	mov    BYTE PTR [ebp-0x27],0x1b
  4244fb:	mov    BYTE PTR [ebp-0x26],0x17
  4244ff:	mov    BYTE PTR [ebp-0x25],0x8
  424503:	mov    BYTE PTR [ebp-0x24],0x22
  424507:	mov    BYTE PTR [ebp-0x23],0x13
  42450b:	mov    BYTE PTR [ebp-0x22],0x1a
  42450f:	mov    BYTE PTR [ebp-0x21],0x83
  424513:	xor    ecx,ecx
  424515:	lea    eax,[ebp+ecx*1-0x18]
  424519:	movzx  edx,BYTE PTR [eax]
  42451c:	xor    edx,0x7d
  42451f:	add    edx,0x2
  424522:	inc    ecx
  424523:	mov    BYTE PTR [eax],dl
  424525:	cmp    ecx,0x6
  424528:	jb     0x424515
  42452a:	xor    ecx,ecx
  42452c:	lea    eax,[ebp+ecx*1-0x20]
  424530:	movzx  edx,BYTE PTR [eax]
  424533:	xor    edx,0x7d
  424536:	add    edx,0x2
  424539:	inc    ecx
  42453a:	mov    BYTE PTR [eax],dl
  42453c:	cmp    ecx,0x7
  42453f:	jb     0x42452c
  424541:	xor    ecx,ecx
  424543:	lea    eax,[ebp+ecx*1-0x28]
  424547:	movzx  edx,BYTE PTR [eax]
  42454a:	xor    edx,0x7d
  42454d:	add    edx,0x2
  424550:	inc    ecx
  424551:	mov    BYTE PTR [eax],dl
  424553:	cmp    ecx,0x8
  424556:	jb     0x424543
  424558:	lea    eax,[ebp-0x2c]
  42455b:	mov    DWORD PTR [ebp-0x8],eax
  42455e:	mov    ecx,DWORD PTR [ebp-0x8]
  424561:	mov    eax,0x7113fccf
  424566:	mov    DWORD PTR [ecx],eax
  424568:	mov    ecx,DWORD PTR [ebp-0x2c]
  42456b:	push   esi
  42456c:	push   edi
  42456d:	mov    esi,0x4e3c
  424572:	mov    ebx,0x3272f3
  424577:	cmp    ecx,eax
  424579:	jne    0x424644
  42457f:	lea    eax,[esi+0x3b]
  424582:	mov    WORD PTR [ebp-0x78],ax
  424586:	mov    eax,esi
  424588:	mov    WORD PTR [ebp-0x76],ax
  42458c:	add    eax,0x35
  42458f:	mov    WORD PTR [ebp-0x74],ax
  424593:	lea    eax,[esi+0x2]
  424596:	mov    WORD PTR [ebp-0x72],ax
  42459a:	add    eax,0x41
  42459d:	mov    ecx,eax
  42459f:	lea    eax,[esi-0x13]
  4245a2:	mov    WORD PTR [ebp-0x66],ax
  4245a6:	mov    eax,esi
  4245a8:	mov    WORD PTR [ebp-0x64],ax
  4245ac:	add    eax,0xffffffec
  4245af:	mov    WORD PTR [ebp-0x62],ax
  4245b3:	mov    eax,0x443
  4245b8:	mov    WORD PTR [ebp-0x60],ax
  4245bc:	mov    eax,0x5672
  4245c1:	mov    WORD PTR [ebp-0x5e],ax
  4245c5:	mov    eax,0x6112
  4245ca:	mov    WORD PTR [ebp-0x5c],ax
  4245ce:	lea    eax,[ebp-0xe0]
  4245d4:	push   eax
  4245d5:	mov    eax,DWORD PTR [ebp+0xc]
  4245d8:	mov    edi,0x75108ac
  4245dd:	xor    eax,edi
  4245df:	add    eax,ebx
  4245e1:	push   eax
  4245e2:	mov    WORD PTR [ebp-0x70],cx
  4245e6:	lea    ecx,[esi-0xa]
  4245e9:	mov    edx,ecx
  4245eb:	lea    eax,[ebp-0x78]
  4245ee:	push   eax
  4245ef:	mov    eax,DWORD PTR [ebp-0x4]
  4245f2:	mov    eax,DWORD PTR [eax+0x198]
  4245f8:	mov    WORD PTR [ebp-0x6e],dx
  4245fc:	mov    edx,0x4f88
  424601:	mov    WORD PTR [ebp-0x6c],dx
  424605:	mov    DWORD PTR [ebp-0x6a],0x4e7f4e35
  42460c:	mov    DWORD PTR [ebp-0x5a],0x4e32f1e4
  424613:	mov    DWORD PTR [ebp-0xe0],0x1
  42461d:	mov    DWORD PTR [ebp-0xdc],0x255
  424627:	push   DWORD PTR [eax]
  424629:	mov    eax,DWORD PTR [ebp+0x10]
  42462c:	call   eax
  42462e:	mov    DWORD PTR [ebp-0x8],eax
  424631:	mov    eax,DWORD PTR [ebp-0x8]
  424634:	test   eax,eax
  424636:	je     0x424649
  424638:	xor    DWORD PTR ds:0x76586876,0x87687666
  424642:	jmp    0x424649
  424644:	mov    edi,0x75108ac
  424649:	mov    eax,DWORD PTR [ebp-0x4]
  42464c:	mov    ecx,DWORD PTR [eax+0x18c]
  424652:	xor    eax,eax
  424654:	cmp    DWORD PTR [ecx],eax
  424656:	jne    0x4248c5
  42465c:	mov    ecx,DWORD PTR [ebp-0x4]
  42465f:	mov    ecx,DWORD PTR [ecx+0x17c]
  424665:	mov    DWORD PTR [ecx],eax
  424667:	mov    ecx,DWORD PTR [ebp-0x4]
  42466a:	mov    ecx,DWORD PTR [ecx+0x180]
  424670:	mov    DWORD PTR [ecx],eax
  424672:	mov    eax,0x4e61
  424677:	mov    WORD PTR [ebp-0x9c],ax
  42467e:	mov    eax,esi
  424680:	mov    WORD PTR [ebp-0x9a],ax
  424687:	mov    eax,0x4e71
  42468c:	mov    WORD PTR [ebp-0x98],ax
  424693:	add    eax,0xffffffc0
  424696:	mov    WORD PTR [ebp-0x96],ax
  42469d:	mov    eax,0x4f8c
  4246a2:	mov    WORD PTR [ebp-0x94],ax
  4246a9:	mov    eax,0x4e30
  4246ae:	mov    WORD PTR [ebp-0x92],ax
  4246b5:	add    eax,0x4f
  4246b8:	mov    WORD PTR [ebp-0x90],ax
  4246bf:	mov    eax,0x4e32
  4246c4:	mov    WORD PTR [ebp-0x8e],ax
  4246cb:	mov    eax,esi
  4246cd:	mov    WORD PTR [ebp-0x8c],ax
  4246d4:	mov    eax,0x4e35
  4246d9:	mov    WORD PTR [ebp-0x8a],ax
  4246e0:	mov    eax,0x99f1
  4246e5:	mov    WORD PTR [ebp-0x88],ax
  4246ec:	mov    eax,0x8d60
  4246f1:	mov    WORD PTR [ebp-0x86],ax
  4246f8:	mov    eax,0xd66f
  4246fd:	mov    WORD PTR [ebp-0x84],ax
  424704:	mov    eax,0xd783
  424709:	mov    WORD PTR [ebp-0x82],ax
  424710:	mov    eax,0x2782
  424715:	mov    WORD PTR [ebp-0x80],ax
  424719:	mov    eax,0x4782
  42471e:	mov    WORD PTR [ebp-0x7e],ax
  424722:	mov    eax,0x4e33
  424727:	push   0x8
  424729:	mov    WORD PTR [ebp-0x7c],ax
  42472d:	mov    DWORD PTR [ebp-0x10],0x8171b0c
  424734:	mov    DWORD PTR [ebp-0xc],0x831a1322
  42473b:	lea    eax,[ebp-0x10]
  42473e:	pop    ecx
  42473f:	mov    dl,BYTE PTR [eax]
  424741:	xor    dl,0x7d
  424744:	add    dl,0x2
  424747:	mov    BYTE PTR [eax],dl
  424749:	inc    eax
  42474a:	dec    ecx
  42474b:	jne    0x42473f
  42474d:	lea    eax,[ebp-0x10]
  424750:	mov    DWORD PTR [ebp-0xdc],eax
  424756:	lea    eax,[ebp-0xe0]
  42475c:	push   eax
  42475d:	mov    eax,DWORD PTR [ebp+0xc]
  424760:	xor    eax,edi
  424762:	add    eax,ebx
  424764:	push   eax
  424765:	mov    eax,DWORD PTR [ebp-0x4]
  424768:	add    eax,0x66
  42476b:	push   eax
  42476c:	mov    eax,DWORD PTR [ebp-0x4]
  42476f:	mov    eax,DWORD PTR [eax+0x198]
  424775:	mov    DWORD PTR [ebp-0xe0],0x1
  42477f:	push   DWORD PTR [eax]
  424781:	mov    eax,DWORD PTR [ebp+0x10]
  424784:	call   eax
  424786:	mov    ecx,DWORD PTR [ebp+0x8]
  424789:	xor    ecx,edi
  42478b:	add    ecx,ebx
  42478d:	mov    DWORD PTR [ebp-0x8],eax
  424790:	cmp    eax,ecx
  424792:	jne    0x4247ad
  424794:	mov    eax,ds:0x33730bc8
  424799:	or     eax,0x22150bcf
  42479e:	mov    ds:0x33730bc8,eax
  4247a3:	add    eax,0x3372e92f
  4247a8:	mov    ds:0x33730bc8,eax
  4247ad:	mov    ecx,0x4e64
  4247b2:	mov    eax,ecx
  4247b4:	mov    WORD PTR [ebp-0x40],ax
  4247b8:	add    eax,0x7
  4247bb:	mov    edx,eax
  4247bd:	mov    WORD PTR [ebp-0x3e],dx
  4247c1:	mov    edx,0x4f93
  4247c6:	mov    WORD PTR [ebp-0x3c],dx
  4247ca:	add    edx,0xfffffff8
  4247cd:	mov    WORD PTR [ebp-0x3a],dx
  4247d1:	mov    edx,0x4f8d
  4247d6:	mov    WORD PTR [ebp-0x38],dx
  4247da:	inc    edx
  4247db:	mov    WORD PTR [ebp-0x36],dx
  4247df:	mov    edx,0x4f87
  4247e4:	mov    WORD PTR [ebp-0x34],dx
  4247e8:	mov    WORD PTR [ebp-0x32],cx
  4247ec:	mov    ecx,esi
  4247ee:	mov    WORD PTR [ebp-0x30],cx
  4247f2:	lea    ecx,[edx-0x3]
  4247f5:	mov    edx,ecx
  4247f7:	mov    WORD PTR [ebp-0x54],dx
  4247fb:	mov    edx,eax
  4247fd:	mov    WORD PTR [ebp-0x52],dx
  424801:	mov    edx,0x4e73
  424806:	mov    WORD PTR [ebp-0x50],dx
  42480a:	mov    WORD PTR [ebp-0x4e],ax
  42480e:	lea    eax,[edx-0x6]
  424811:	mov    WORD PTR [ebp-0x4c],ax
  424815:	inc    eax
  424816:	mov    WORD PTR [ebp-0x4a],ax
  42481a:	lea    eax,[edx-0xc]
  42481d:	mov    WORD PTR [ebp-0x48],ax
  424821:	mov    WORD PTR [ebp-0x46],cx
  424825:	mov    WORD PTR [ebp-0x44],si
  424829:	mov    eax,DWORD PTR [ebp+0x8]
  42482c:	movzx  ecx,WORD PTR [ebp-0x54]
  424830:	xor    eax,edi
  424832:	add    eax,ebx
  424834:	xor    eax,ecx
  424836:	mov    WORD PTR [ebp-0x54],ax
  42483a:	mov    eax,DWORD PTR [ebp+0x8]
  42483d:	movzx  ecx,WORD PTR [ebp-0x40]
  424841:	xor    eax,edi
  424843:	add    eax,ebx
  424845:	xor    eax,ecx
  424847:	mov    WORD PTR [ebp-0x40],ax
  42484b:	xor    eax,eax
  42484d:	mov    WORD PTR [ebp-0xf4],ax
  424854:	mov    WORD PTR [ebp-0x108],ax
  42485b:	mov    edi,DWORD PTR [ebp+0x24]
  42485e:	lea    eax,[ebp-0xf4]
  424864:	lea    edx,[ebp-0x54]
  424867:	mov    DWORD PTR [ebp-0xe0],0x2
  424871:	mov    DWORD PTR [ebp-0xdc],eax
  424877:	call   0x4272b1
  42487c:	mov    DWORD PTR [ebp-0xd8],eax
  424882:	lea    eax,[ebp-0xe0]
  424888:	push   eax
  424889:	mov    eax,DWORD PTR [ebp+0xc]
  42488c:	xor    eax,0x75108ac
  424891:	add    eax,ebx
  424893:	push   eax
  424894:	lea    eax,[ebp-0x9c]
  42489a:	push   eax
  42489b:	push   DWORD PTR [ebp-0x8]
  42489e:	mov    eax,DWORD PTR [ebp+0x10]
  4248a1:	call   eax
  4248a3:	mov    edi,DWORD PTR [ebp+0x24]
  4248a6:	lea    eax,[ebp-0x108]
  4248ac:	lea    edx,[ebp-0x40]
  4248af:	mov    DWORD PTR [ebp-0xdc],eax
  4248b5:	call   0x4272b1
  4248ba:	mov    DWORD PTR [ebp-0xd8],eax
  4248c0:	mov    edi,0x75108ac
  4248c5:	mov    eax,DWORD PTR [ebp+0x14]
  4248c8:	push   DWORD PTR [ebp-0x4]
  4248cb:	push   DWORD PTR [ebp+0x20]
  4248ce:	push   DWORD PTR [ebp+0x1c]
  4248d1:	push   DWORD PTR [ebp+0x18]
  4248d4:	push   DWORD PTR [ebp+0x10]
  4248d7:	push   DWORD PTR [ebp+0x8]
  4248da:	push   DWORD PTR [ebp+0xc]
  4248dd:	call   0x425b50
  4248e2:	test   eax,eax
  4248e4:	je     0x424928
  4248e6:	add    DWORD PTR [ebp-0x4],eax
  4248e9:	push   DWORD PTR [ebp-0x4]
  4248ec:	lea    esi,[ebp+0x4]
  4248ef:	call   0x424d40
  4248f4:	mov    eax,DWORD PTR [ebp-0x4]
  4248f7:	mov    eax,DWORD PTR [eax+0x1c8]
  4248fd:	mov    eax,DWORD PTR [eax]
  4248ff:	xor    eax,edi
  424901:	add    eax,ebx
  424903:	mov    eax,DWORD PTR [ebp-0x4]
  424906:	jne    0x42491e
  424908:	mov    ecx,DWORD PTR [ebp-0x4]
  42490b:	mov    ecx,DWORD PTR [ecx+0x1cc]
  424911:	push   DWORD PTR [ecx]
  424913:	mov    eax,DWORD PTR [eax+0x1e0]
  424919:	call   DWORD PTR [eax+0x28]
  42491c:	jmp    0x424928
  42491e:	mov    eax,DWORD PTR [eax+0x17c]
  424924:	mov    eax,DWORD PTR [eax]
  424926:	add    DWORD PTR [esi],eax
  424928:	mov    eax,DWORD PTR [ebp-0x4]
  42492b:	mov    eax,DWORD PTR [eax+0x1dc]
  424931:	dec    DWORD PTR [eax]
  424933:	mov    ecx,DWORD PTR [ebp-0x4]
  424936:	mov    ecx,DWORD PTR [ecx+0x1d8]
  42493c:	mov    eax,DWORD PTR [eax]
  42493e:	lea    eax,[ecx+eax*4]
  424941:	mov    ecx,DWORD PTR [ebp-0x4]
  424944:	mov    ecx,DWORD PTR [ecx+0x17c]
  42494a:	mov    eax,DWORD PTR [eax]
  42494c:	mov    ecx,DWORD PTR [ecx]
  42494e:	add    DWORD PTR [eax],ecx
  424950:	pop    edi
  424951:	pop    esi
  424952:	pop    ebx
  424953:	leave  
  424954:	ret    0x20
  424957:	push   edi
  424958:	push   esi
  424959:	push   ebx
  42495a:	push   ebp
  42495b:	mov    ebp,esp
  42495d:	mov    eax,DWORD PTR [ebp+0x24]
  424960:	add    DWORD PTR [ebp+0x28],eax
  424963:	push   eax
  424964:	cld    
  424965:	mov    esi,DWORD PTR [ebp+0x18]
  424968:	add    DWORD PTR [ebp+0x1c],esi
  42496b:	push   esi
  42496c:	mov    esi,DWORD PTR [ebp+0x14]
  42496f:	lods   eax,DWORD PTR ds:[esi]
  424970:	xchg   edx,eax
  424971:	push   edx
  424972:	mov    cl,BYTE PTR [esi-0x2]
  424975:	or     eax,0xffffffff
  424978:	shl    eax,cl
  42497a:	not    eax
  42497c:	push   eax
  42497d:	mov    cl,dh
  42497f:	or     eax,0xffffffff
  424982:	shl    eax,cl
  424984:	not    eax
  424986:	push   eax
  424987:	add    cl,dl
  424989:	mov    edi,esi
  42498b:	sub    esp,0xc
  42498e:	sub    eax,eax
  424990:	inc    eax
  424991:	push   eax
  424992:	push   eax
  424993:	push   eax
  424994:	push   eax
  424995:	push   eax
  424996:	push   edi
  424997:	sub    esi,esi
  424999:	push   esi
  42499a:	or     ebx,0xffffffff
  42499d:	mov    eax,0x300
  4249a2:	shl    eax,cl
  4249a4:	lea    ecx,[eax+0x736]
  4249aa:	mov    eax,0x4000400
  4249af:	shr    ecx,1
  4249b1:	rep stos DWORD PTR es:[edi],eax
  4249b3:	push   0x5
  4249b5:	pop    ecx
  4249b6:	call   0x424ca1
  4249bb:	loop   0x4249b6
  4249bd:	lea    esi,[esi]
  4249bf:	lea    edi,[edi]
  4249c1:	mov    edi,DWORD PTR [ebp-0x4]
  4249c4:	mov    eax,DWORD PTR [ebp-0x10]
  4249c7:	sub    edi,DWORD PTR [ebp+0x24]
  4249ca:	and    eax,edi
  4249cc:	mov    DWORD PTR [ebp-0x18],eax
  4249cf:	mov    al,0x0
  4249d1:	call   0x424cb9
  4249d6:	jne    0x424a71
  4249dc:	mov    cl,BYTE PTR [ebp-0xc]
  4249df:	and    edi,DWORD PTR [ebp-0x14]
  4249e2:	shl    edi,cl
  4249e4:	sub    cl,0x8
  4249e7:	neg    cl
  4249e9:	shr    esi,cl
  4249eb:	pop    eax
  4249ec:	add    edi,esi
  4249ee:	pop    esi
  4249ef:	lea    edi,[edi+edi*2]
  4249f2:	shl    edi,0x8
  4249f5:	cmp    al,0x7
  4249f7:	pop    edx
  4249f8:	lea    ecx,[esi+edi*2+0xe6c]
  4249ff:	push   ecx
  424a00:	push   esi
  424a01:	mov    esi,0x100
  424a06:	push   eax
  424a07:	mov    al,0x1
  424a09:	jb     0x424a3f
  424a0b:	mov    edi,DWORD PTR [ebp-0x4]
  424a0e:	sub    edi,DWORD PTR [ebp-0x24]
  424a11:	movzx  edi,BYTE PTR [edi]
  424a14:	mov    ebp,DWORD PTR [ebp-0x34]
  424a17:	shl    edi,1
  424a19:	mov    ecx,esi
  424a1b:	and    esi,edi
  424a1d:	add    ecx,esi
  424a1f:	lea    ebp,[ebp+ecx*2+0x0]
  424a23:	call   0x424cd8
  424a28:	mov    ecx,eax
  424a2a:	shr    esi,0x8
  424a2d:	and    ecx,0x1
  424a30:	cmp    esi,ecx
  424a32:	mov    esi,0x100
  424a37:	jne    0x424a47
  424a39:	cmp    eax,esi
  424a3b:	jb     0x424a14
  424a3d:	jmp    0x424a53
  424a3f:	mov    ebp,DWORD PTR [ebp-0x34]
  424a42:	call   0x424cd8
  424a47:	inc    eax
  424a48:	inc    esi
  424a49:	sub    eax,0x1
  424a4c:	sub    esi,0x1
  424a4f:	cmp    eax,esi
  424a51:	jb     0x424a3f
  424a53:	pop    edx
  424a54:	inc    edx
  424a55:	cmp    edx,0x5
  424a58:	dec    edx
  424a59:	mov    ecx,edx
  424a5b:	jb     0x424a6c
  424a5d:	inc    edx
  424a5e:	cmp    edx,0xb
  424a61:	dec    edx
  424a62:	mov    cl,0x4
  424a64:	dec    cl
  424a66:	jb     0x424a6c
  424a68:	mov    cl,0x7
  424a6a:	dec    cl
  424a6c:	sub    edx,ecx
  424a6e:	push   edx
  424a6f:	jmp    0x424ac0
  424a71:	mov    al,0xc1
  424a73:	dec    al
  424a75:	call   0x424cc9
  424a7a:	jne    0x424a90
  424a7c:	pop    eax
  424a7d:	pop    edi
  424a7e:	pop    edx
  424a7f:	pop    ecx
  424a80:	pop    edx
  424a81:	pop    ecx
  424a82:	push   DWORD PTR [esp]
  424a85:	push   ecx
  424a86:	push   edx
  424a87:	mov    edx,0x664
  424a8c:	mov    cl,0x0
  424a8e:	jmp    0x424b03
  424a90:	mov    al,0xcd
  424a92:	dec    al
  424a94:	call   0x424cc9
  424a99:	jne    0x424ac9
  424a9b:	mov    al,0xf1
  424a9d:	dec    al
  424a9f:	call   0x424cb9
  424aa4:	jne    0x424af9
  424aa6:	pop    eax
  424aa7:	cmp    al,0x7
  424aa9:	mov    al,0x9
  424aab:	jb     0x424aaf
  424aad:	mov    al,0xb
  424aaf:	push   eax
  424ab0:	mov    esi,DWORD PTR [ebp-0x4]
  424ab3:	sub    esi,DWORD PTR [ebp-0x24]
  424ab6:	cmp    esi,DWORD PTR [ebp+0x24]
  424ab9:	jb     0x424c90
  424abf:	lods   al,BYTE PTR ds:[esi]
  424ac0:	mov    edi,DWORD PTR [ebp-0x4]
  424ac3:	stos   BYTE PTR es:[edi],al
  424ac4:	jmp    0x424c57
  424ac9:	mov    al,0xd8
  424acb:	call   0x424cc9
  424ad0:	mov    esi,DWORD PTR [ebp-0x28]
  424ad3:	je     0x424af0
  424ad5:	mov    al,0xe4
  424ad7:	call   0x424cc9
  424adc:	mov    esi,DWORD PTR [ebp-0x2c]
  424adf:	je     0x424aea
  424ae1:	mov    esi,DWORD PTR [ebp-0x30]
  424ae4:	mov    ecx,DWORD PTR [ebp-0x2c]
  424ae7:	mov    DWORD PTR [ebp-0x30],ecx
  424aea:	mov    ecx,DWORD PTR [ebp-0x28]
  424aed:	mov    DWORD PTR [ebp-0x2c],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x24]
  424af3:	mov    DWORD PTR [ebp-0x28],ecx
  424af6:	mov    DWORD PTR [ebp-0x24],esi
  424af9:	pop    eax
  424afa:	pop    edi
  424afb:	pop    ecx
  424afc:	mov    edx,0xa68
  424b01:	mov    cl,0x8
  424b03:	add    edx,edi
  424b05:	push   edx
  424b06:	push   edi
  424b07:	cmp    al,0x7
  424b09:	mov    al,cl
  424b0b:	jb     0x424b0f
  424b0d:	add    al,0x3
  424b0f:	push   eax
  424b10:	mov    ebp,DWORD PTR [ebp-0x34]
  424b13:	call   0x424cd6
  424b18:	jne    0x424b2e
  424b1a:	mov    eax,DWORD PTR [ebp-0x18]
  424b1d:	mov    edi,DWORD PTR [ebp-0x34]
  424b20:	shl    eax,0x3
  424b23:	sub    ecx,ecx
  424b25:	push   0x8
  424b27:	pop    esi
  424b28:	lea    edi,[edi+eax*2+0x4]
  424b2c:	jmp    0x424b63
  424b2e:	mov    ebp,DWORD PTR [ebp-0x34]
  424b31:	add    ebp,0x2
  424b34:	call   0x424cd6
  424b39:	jne    0x424b53
  424b3b:	mov    eax,DWORD PTR [ebp-0x18]
  424b3e:	mov    edi,DWORD PTR [ebp-0x34]
  424b41:	shl    eax,0x3
  424b44:	push   0x8
  424b46:	pop    ecx
  424b47:	push   0x8
  424b49:	pop    esi
  424b4a:	lea    edi,[edi+eax*2+0x104]
  424b51:	jmp    0x424b63
  424b53:	mov    edi,0x204
  424b58:	add    edi,DWORD PTR [ebp-0x34]
  424b5b:	push   0x10
  424b5d:	pop    ecx
  424b5e:	mov    esi,0x100
  424b63:	mov    DWORD PTR [ebp-0x1c],ecx
  424b66:	sub    eax,eax
  424b68:	inc    eax
  424b69:	mov    ebp,edi
  424b6b:	call   0x424cd8
  424b70:	mov    ecx,eax
  424b72:	sub    ecx,esi
  424b74:	jb     0x424b69
  424b76:	add    DWORD PTR [ebp-0x1c],ecx
  424b79:	cmp    DWORD PTR [ebp-0x3c],0x4
  424b7d:	jae    0x424c33
  424b83:	add    DWORD PTR [ebp-0x3c],0x7
  424b87:	mov    ecx,DWORD PTR [ebp-0x1c]
  424b8a:	cmp    ecx,0x4
  424b8d:	jb     0x424b92
  424b8f:	push   0x3
  424b91:	pop    ecx
  424b92:	mov    edi,DWORD PTR [ebp-0x38]
  424b95:	shl    ecx,0x6
  424b98:	sub    eax,eax
  424b9a:	inc    eax
  424b9b:	push   0x40
  424b9d:	pop    esi
  424b9e:	lea    edi,[edi+ecx*2+0x360]
  424ba5:	mov    ebp,edi
  424ba7:	call   0x424cd8
  424bac:	mov    ecx,eax
  424bae:	sub    ecx,esi
  424bb0:	jb     0x424ba5
  424bb2:	mov    DWORD PTR [ebp-0x18],ecx
  424bb5:	mov    DWORD PTR [ebp-0x24],ecx
  424bb8:	cmp    ecx,0x4
  424bbb:	jb     0x424c30
  424bbd:	mov    esi,ecx
  424bbf:	and    DWORD PTR [ebp-0x24],0x1
  424bc3:	shr    esi,1
  424bc5:	or     DWORD PTR [ebp-0x24],0x2
  424bc9:	dec    esi
  424bca:	cmp    ecx,0xe
  424bcd:	jae    0x424be8
  424bcf:	mov    eax,0x2af
  424bd4:	sub    eax,ecx
  424bd6:	mov    ecx,esi
  424bd8:	shl    BYTE PTR [ebp-0x24],cl
  424bdb:	add    eax,DWORD PTR [ebp-0x24]
  424bde:	shl    eax,1
  424be0:	add    eax,DWORD PTR [ebp-0x38]
  424be3:	mov    DWORD PTR [ebp-0x34],eax
  424be6:	jmp    0x424c15
  424be8:	sub    esi,0x4
  424beb:	call   0x424c95
  424bf0:	shr    ebx,1
  424bf2:	shl    DWORD PTR [ebp-0x24],1
  424bf5:	cmp    DWORD PTR [ebp-0x20],ebx
  424bf8:	jb     0x424c00
  424bfa:	inc    DWORD PTR [ebp-0x24]
  424bfd:	sub    DWORD PTR [ebp-0x20],ebx
  424c00:	dec    esi
  424c01:	jne    0x424beb
  424c03:	mov    eax,0x644
  424c08:	add    eax,DWORD PTR [ebp-0x38]
  424c0b:	mov    DWORD PTR [ebp-0x34],eax
  424c0e:	shl    DWORD PTR [ebp-0x24],0x4
  424c12:	push   0x4
  424c14:	pop    esi
  424c15:	sub    edi,edi
  424c17:	inc    edi
  424c18:	mov    eax,edi
  424c1a:	mov    ebp,DWORD PTR [ebp-0x34]
  424c1d:	call   0x424cd8
  424c22:	test   al,0x1
  424c24:	je     0x424c29
  424c26:	or     DWORD PTR [ebp-0x24],edi
  424c29:	shl    edi,1
  424c2b:	dec    esi
  424c2c:	jne    0x424c1a
  424c2e:	jmp    0x424c30
  424c30:	inc    DWORD PTR [ebp-0x24]
  424c33:	mov    ecx,DWORD PTR [ebp-0x1c]
  424c36:	add    ecx,0x2
  424c39:	mov    edi,DWORD PTR [ebp-0x4]
  424c3c:	mov    eax,edi
  424c3e:	sub    eax,DWORD PTR [ebp+0x24]
  424c41:	cmp    DWORD PTR [ebp-0x24],eax
  424c44:	ja     0x424c90
  424c46:	mov    esi,edi
  424c48:	sub    esi,DWORD PTR [ebp-0x24]
  424c4b:	mov    edx,DWORD PTR [ebp+0x28]
  424c4e:	lods   al,BYTE PTR ds:[esi]
  424c4f:	stos   BYTE PTR es:[edi],al
  424c50:	cmp    edi,edx
  424c52:	jae    0x424c57
  424c54:	dec    ecx
  424c55:	jne    0x424c4e
  424c57:	mov    DWORD PTR [ebp-0x4],edi
  424c5a:	movzx  esi,al
  424c5d:	cmp    edi,DWORD PTR [ebp+0x28]
  424c60:	jb     0x4249c1
  424c66:	call   0x424c95
  424c6b:	sub    eax,eax
  424c6d:	lea    ebp,[esp+0x3c]
  424c71:	mov    edx,DWORD PTR [ebp+0x20]
  424c74:	mov    esi,DWORD PTR [ebp-0x8]
  424c77:	sub    esi,DWORD PTR [ebp+0x18]
  424c7a:	mov    DWORD PTR [edx],esi
  424c7c:	mov    edx,DWORD PTR [ebp+0x2c]
  424c7f:	mov    edi,DWORD PTR [edx+edi*2+0x33]
  424c83:	jl     0x424c9c
  424c85:	lods   eax,DWORD PTR ds:[esi]
  424c86:	outs   dx,DWORD PTR ds:[esi]
  424c87:	scas   al,BYTE PTR es:[edi]
  424c88:	hlt    
  424c89:	add    BYTE PTR [edx+edx*4],al
  424c8c:	test   DWORD PTR [edi-0x75cc1800],0x8dea3688
  424c96:	jbe    0x424c1f
  424c98:	xchg   DWORD PTR [edi-0x6974af75],eax
  424c9e:	mov    ss,WORD PTR [esi]
  424ca0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ca1:	loopne 0x424c58
  424ca3:	pop    esp
  424ca4:	push   0x73
  424ca6:	pop    esp
  424ca7:	not    DWORD PTR [edx+ebx*1-0x4b]
  424cab:	pushf  
  424cac:	or     cl,BYTE PTR [esi-0x52c658f6]
  424cb2:	pushf  
  424cb3:	or     ch,BYTE PTR [ebp-0x69ff95a4]
  424cb9:	mov    ch,0xbc
  424cbb:	call   0x970e:0x8e8a61c3
  424cc2:	xchg   ebx,eax
  424cc3:	pushf  
  424cc4:	sub    dl,BYTE PTR [ebx-0x3c60c972]
  424cca:	popa   
  424ccb:	mov    dl,BYTE PTR [ebx+0x3cb59a9c]
  424cd1:	stos   BYTE PTR es:[edi],al
  424cd2:	mov    ebp,0x33879c38
  424cd7:	mov    bh,BYTE PTR [ebp-0x727863c8]
  424cdd:	jbe    0x424c66
  424cdf:	xchg   DWORD PTR [edi-0x4a08ab75],eax
  424ce5:	mov    eax,0x188e6717
  424cea:	pop    ss
  424ceb:	pop    es
  424cec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ced:	jae    0x424ca7
  424cef:	pop    ss
  424cf0:	clc    
  424cf1:	push   esp
  424cf2:	stc    
  424cf3:	mov    cl,0xcb
  424cf5:	xchg   BYTE PTR [eax+0x168e6717],bl
  424cfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cfc:	test   eax,0x8b0717d8
  424d01:	retf   
  424d02:	movzx  edx,WORD PTR [ebp+0x0]
  424d06:	shr    ecx,0xb
  424d09:	imul   ecx,edx
  424d0c:	cmp    DWORD PTR [esp+0x20],ecx
  424d10:	jae    0x424d29
  424d12:	mov    ebx,ecx
  424d14:	mov    ecx,0x800
  424d19:	sub    ecx,edx
  424d1b:	shr    ecx,0x5
  424d1e:	add    WORD PTR [ebp+0x0],cx
  424d22:	add    eax,eax
  424d24:	lea    ebp,[esp+0x40]
  424d28:	ret    
  424d29:	shr    edx,0x5
  424d2c:	sub    DWORD PTR [esp+0x20],ecx
  424d30:	sub    ebx,ecx
  424d32:	sub    WORD PTR [ebp+0x0],dx
  424d36:	add    eax,eax
  424d38:	add    eax,0x1
  424d3b:	lea    ebp,[esp+0x40]
  424d3f:	ret    
  424d40:	push   ebp
  424d41:	mov    ebp,esp
  424d43:	sub    esp,0x12c
  424d49:	push   ebx
  424d4a:	push   esi
  424d4b:	push   edi
  424d4c:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  424d53:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  424d5a:	mov    eax,DWORD PTR [ebp+0x8]
  424d5d:	mov    DWORD PTR [ebp+0x8],eax
  424d60:	mov    ecx,DWORD PTR [ebp-0x10]
  424d63:	mov    ebx,0x75108ac
  424d68:	xor    ecx,ebx
  424d6a:	mov    eax,0x3272f3
  424d6f:	add    ecx,eax
  424d71:	mov    DWORD PTR [ebp-0x24],ecx
  424d74:	mov    ecx,DWORD PTR [ebp-0x10]
  424d77:	xor    ecx,ebx
  424d79:	add    ecx,eax
  424d7b:	mov    DWORD PTR [ebp-0x40],ecx
  424d7e:	mov    ecx,DWORD PTR [ebp-0x10]
  424d81:	xor    ecx,ebx
  424d83:	add    ecx,eax
  424d85:	mov    DWORD PTR [ebp-0x3c],ecx
  424d88:	mov    ecx,DWORD PTR [ebp-0x10]
  424d8b:	xor    ecx,ebx
  424d8d:	add    ecx,eax
  424d8f:	mov    DWORD PTR [ebp-0xd8],ecx
  424d95:	mov    DWORD PTR [ebp-0x50],0xf89f05a1
  424d9c:	mov    DWORD PTR [ebp-0x3c],0xf89cb5a1
  424da3:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424daa:	push   0x25
  424dac:	pop    ecx
  424dad:	mov    DWORD PTR [ebp-0x30],ecx
  424db0:	mov    DWORD PTR [ebp-0x30],ecx
  424db3:	push   0x65
  424db5:	pop    ecx
  424db6:	mov    DWORD PTR [ebp-0x30],ecx
  424db9:	mov    DWORD PTR [ebp-0x30],ecx
  424dbc:	mov    DWORD PTR [ebp-0x30],0x4d
  424dc3:	mov    DWORD PTR [ebp-0x30],0x43
  424dca:	mov    ecx,DWORD PTR [ebp-0x10]
  424dcd:	xor    ecx,ebx
  424dcf:	add    ecx,eax
  424dd1:	mov    DWORD PTR [ebp-0x30],ecx
  424dd4:	mov    ecx,DWORD PTR [ebp-0x10]
  424dd7:	xor    ecx,ebx
  424dd9:	add    ecx,eax
  424ddb:	mov    DWORD PTR [ebp-0x30],ecx
  424dde:	mov    DWORD PTR [ebp-0x28],0x258
  424de5:	mov    DWORD PTR [ebp-0x34],0x36
  424dec:	mov    DWORD PTR [ebp-0x14],0x7a
  424df3:	lea    edi,[ebp-0x10c]
  424df9:	lea    esi,[ebp-0x12c]
  424dff:	call   0x425abf
  424e04:	dec    DWORD PTR [ebp-0x14]
  424e07:	jne    0x424df3
  424e09:	dec    DWORD PTR [ebp-0x34]
  424e0c:	jne    0x424dec
  424e0e:	dec    DWORD PTR [ebp-0x28]
  424e11:	jne    0x424de5
  424e13:	mov    DWORD PTR [ebp-0x28],0x400e
  424e1a:	mov    eax,DWORD PTR [ebp-0x10]
  424e1d:	xor    eax,ebx
  424e1f:	mov    esi,0x3272f3
  424e24:	add    eax,esi
  424e26:	mov    DWORD PTR [ebp-0x1c],eax
  424e29:	mov    eax,DWORD PTR [ebp-0x10]
  424e2c:	and    DWORD PTR [ebp-0x94],0x0
  424e33:	xor    eax,ebx
  424e35:	add    eax,esi
  424e37:	mov    DWORD PTR [ebp-0x38],eax
  424e3a:	mov    eax,fs:0x18
  424e40:	mov    DWORD PTR [ebp-0x94],eax
  424e46:	mov    eax,DWORD PTR [eax+0x30]
  424e49:	mov    DWORD PTR [ebp-0xcc],eax
  424e4f:	mov    eax,DWORD PTR [eax+0xc]
  424e52:	mov    DWORD PTR [ebp-0xc0],eax
  424e58:	mov    eax,DWORD PTR [ebp+0x8]
  424e5b:	lea    ecx,[ebp-0x94]
  424e61:	mov    DWORD PTR [eax+0x1a0],ecx
  424e67:	mov    eax,DWORD PTR [ebp+0x8]
  424e6a:	lea    ecx,[ebp-0xcc]
  424e70:	mov    DWORD PTR [eax+0x1a4],ecx
  424e76:	mov    eax,DWORD PTR [ebp+0x8]
  424e79:	push   DWORD PTR [ebp+0x8]
  424e7c:	lea    ecx,[ebp-0xc0]
  424e82:	mov    DWORD PTR [eax+0x1a8],ecx
  424e88:	call   0x427282
  424e8d:	mov    ecx,DWORD PTR [ebp-0x10]
  424e90:	xor    ecx,ebx
  424e92:	add    ecx,esi
  424e94:	cmp    ecx,eax
  424e96:	je     0x425219
  424e9c:	mov    eax,DWORD PTR [ebp+0x8]
  424e9f:	mov    eax,DWORD PTR [eax+0x194]
  424ea5:	mov    ecx,DWORD PTR [eax]
  424ea7:	mov    eax,DWORD PTR [ebp+0x8]
  424eaa:	mov    eax,DWORD PTR [eax+0x194]
  424eb0:	mov    eax,DWORD PTR [eax]
  424eb2:	add    eax,DWORD PTR [ecx+0x3c]
  424eb5:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb8:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424ebe:	lea    edx,[ebp-0xec]
  424ec4:	push   edx
  424ec5:	mov    edx,DWORD PTR [ebp+0x8]
  424ec8:	mov    edx,DWORD PTR [edx+0x18c]
  424ece:	mov    edx,DWORD PTR [edx]
  424ed0:	add    edx,DWORD PTR [eax+0x88]
  424ed6:	push   0x4
  424ed8:	push   DWORD PTR [eax+0x8c]
  424ede:	push   edx
  424edf:	call   DWORD PTR [ecx+0x1c]
  424ee2:	push   DWORD PTR [ebp+0x8]
  424ee5:	xor    eax,eax
  424ee7:	mov    DWORD PTR [ebp-0xa8],0x1b3c0c3a
  424ef1:	mov    DWORD PTR [ebp-0xa4],0x10370d22
  424efb:	mov    DWORD PTR [ebp-0xa0],0x420d1e08
  424f05:	mov    BYTE PTR [ebp-0x9c],0x83
  424f0c:	lea    edi,[ebp-0x9b]
  424f12:	stos   DWORD PTR es:[edi],eax
  424f13:	stos   WORD PTR es:[edi],ax
  424f15:	stos   BYTE PTR es:[edi],al
  424f16:	xor    eax,eax
  424f18:	mov    DWORD PTR [ebp-0xbc],0x1b3c0c3a
  424f22:	mov    DWORD PTR [ebp-0xb8],0x10370d22
  424f2c:	mov    DWORD PTR [ebp-0xb4],0x280d1e08
  424f36:	mov    BYTE PTR [ebp-0xb0],0x83
  424f3d:	lea    edi,[ebp-0xaf]
  424f43:	stos   DWORD PTR es:[edi],eax
  424f44:	stos   WORD PTR es:[edi],ax
  424f46:	stos   BYTE PTR es:[edi],al
  424f47:	mov    edi,DWORD PTR [ebp+0x8]
  424f4a:	mov    eax,DWORD PTR [ebp+0x8]
  424f4d:	mov    edx,DWORD PTR [eax+0x1b8]
  424f53:	mov    DWORD PTR [ebp-0x68],0xd0f0c17
  424f5a:	mov    DWORD PTR [ebp-0x64],0x1a13161c
  424f61:	mov    WORD PTR [ebp-0x60],0x8342
  424f67:	mov    DWORD PTR [ebp-0x90],0x1b3c0c3a
  424f71:	mov    DWORD PTR [ebp-0x8c],0x17420d22
  424f7b:	mov    DWORD PTR [ebp-0x88],0x31221b13
  424f85:	mov    DWORD PTR [ebp-0x84],0xd1e160e
  424f8f:	mov    DWORD PTR [ebp-0x80],0x83421c1a
  424f96:	mov    DWORD PTR [ebp-0x7c],0x1b3c0c3a
  424f9d:	mov    DWORD PTR [ebp-0x78],0x17420d22
  424fa4:	mov    DWORD PTR [ebp-0x74],0x31221b13
  424fab:	mov    DWORD PTR [ebp-0x70],0xd1e160e
  424fb2:	mov    DWORD PTR [ebp-0x6c],0x83281c1a
  424fb9:	call   0x4272b1
  424fbe:	push   eax
  424fbf:	mov    eax,DWORD PTR [ebp+0x8]
  424fc2:	mov    eax,DWORD PTR [eax+0x1a8]
  424fc8:	push   DWORD PTR [eax]
  424fca:	call   0x426f52
  424fcf:	test   eax,eax
  424fd1:	jne    0x425023
  424fd3:	mov    eax,DWORD PTR [ebp+0x8]
  424fd6:	mov    eax,DWORD PTR [eax+0x1e0]
  424fdc:	mov    edi,DWORD PTR [ebp+0x8]
  424fdf:	add    eax,0x4
  424fe2:	mov    DWORD PTR [ebp-0x20],eax
  424fe5:	mov    eax,DWORD PTR [ebp+0x8]
  424fe8:	mov    edx,DWORD PTR [eax+0x1b8]
  424fee:	call   0x4272b1
  424ff3:	push   eax
  424ff4:	mov    eax,DWORD PTR [ebp-0x20]
  424ff7:	call   DWORD PTR [eax]
  424ff9:	test   eax,eax
  424ffb:	jne    0x425023
  424ffd:	mov    eax,DWORD PTR [ebp+0x8]
  425000:	mov    eax,DWORD PTR [eax+0x1e0]
  425006:	mov    edi,DWORD PTR [ebp+0x8]
  425009:	add    eax,0x10
  42500c:	mov    DWORD PTR [ebp-0x20],eax
  42500f:	mov    eax,DWORD PTR [ebp+0x8]
  425012:	mov    edx,DWORD PTR [eax+0x1b8]
  425018:	call   0x4272b1
  42501d:	push   eax
  42501e:	mov    eax,DWORD PTR [ebp-0x20]
  425021:	call   DWORD PTR [eax]
  425023:	mov    eax,DWORD PTR [ebp-0x10]
  425026:	mov    ecx,DWORD PTR [ebp-0x28]
  425029:	xor    eax,ebx
  42502b:	add    eax,esi
  42502d:	cmp    eax,ecx
  42502f:	je     0x4251f2
  425035:	mov    eax,DWORD PTR [ebp-0x18]
  425038:	xor    eax,ebx
  42503a:	mov    ecx,0xffcd8d0d
  42503f:	sub    ecx,eax
  425041:	add    ecx,DWORD PTR [ebp-0x28]
  425044:	mov    eax,DWORD PTR [ebp-0x1c]
  425047:	cmp    eax,ecx
  425049:	ja     0x4251f2
  42504f:	mov    DWORD PTR [ebp-0x34],0x0
  425056:	push   DWORD PTR [ebp+0x8]
  425059:	mov    edi,DWORD PTR [ebp+0x8]
  42505c:	mov    eax,DWORD PTR [ebp+0x8]
  42505f:	mov    edx,DWORD PTR [eax+0x1b4]
  425065:	call   0x4272b1
  42506a:	push   eax
  42506b:	mov    eax,DWORD PTR [ebp+0x8]
  42506e:	mov    eax,DWORD PTR [eax+0x1a8]
  425074:	push   DWORD PTR [eax]
  425076:	call   0x426f52
  42507b:	mov    ecx,DWORD PTR [ebp+0x8]
  42507e:	mov    ecx,DWORD PTR [ecx+0x19c]
  425084:	mov    DWORD PTR [ecx],eax
  425086:	mov    eax,DWORD PTR [ebp+0x8]
  425089:	mov    edi,DWORD PTR [eax+0x1e0]
  42508f:	mov    esi,DWORD PTR [ebp+0x8]
  425092:	xor    eax,eax
  425094:	lea    edx,[ebp-0x7c]
  425097:	call   0x4272e7
  42509c:	push   eax
  42509d:	mov    eax,DWORD PTR [ebp+0x8]
  4250a0:	mov    eax,DWORD PTR [eax+0x19c]
  4250a6:	push   DWORD PTR [eax]
  4250a8:	call   DWORD PTR [edi+0x8]
  4250ab:	mov    DWORD PTR [ebp-0x20],eax
  4250ae:	mov    eax,DWORD PTR [ebp+0x8]
  4250b1:	mov    edi,DWORD PTR [eax+0x1e0]
  4250b7:	mov    esi,DWORD PTR [ebp+0x8]
  4250ba:	xor    eax,eax
  4250bc:	lea    edx,[ebp-0x90]
  4250c2:	call   0x4272e7
  4250c7:	push   eax
  4250c8:	mov    eax,DWORD PTR [ebp+0x8]
  4250cb:	mov    eax,DWORD PTR [eax+0x19c]
  4250d1:	push   DWORD PTR [eax]
  4250d3:	call   DWORD PTR [edi+0x8]
  4250d6:	mov    eax,DWORD PTR [ebp+0x8]
  4250d9:	mov    edi,DWORD PTR [eax+0x1e0]
  4250df:	mov    esi,DWORD PTR [ebp+0x8]
  4250e2:	xor    eax,eax
  4250e4:	lea    edx,[ebp-0xa8]
  4250ea:	call   0x4272e7
  4250ef:	push   eax
  4250f0:	mov    eax,DWORD PTR [ebp+0x8]
  4250f3:	mov    eax,DWORD PTR [eax+0x19c]
  4250f9:	push   DWORD PTR [eax]
  4250fb:	call   DWORD PTR [edi+0x8]
  4250fe:	and    DWORD PTR [ebp-0x8],0x0
  425102:	mov    DWORD PTR [ebp-0x48],eax
  425105:	mov    eax,DWORD PTR [ebp-0x8]
  425108:	and    eax,0x7
  42510b:	add    eax,0x31
  42510e:	push   eax
  42510f:	call   DWORD PTR [ebp-0x20]
  425112:	test   eax,eax
  425114:	je     0x425158
  425116:	mov    eax,DWORD PTR [ebp-0x8]
  425119:	push   0x19
  42511b:	xor    edx,edx
  42511d:	pop    ecx
  42511e:	div    ecx
  425120:	add    dl,0x41
  425123:	movzx  eax,dl
  425126:	push   eax
  425127:	call   DWORD PTR [ebp-0x48]
  42512a:	test   eax,eax
  42512c:	jne    0x425158
  42512e:	mov    eax,DWORD PTR [ebp+0x8]
  425131:	mov    edi,DWORD PTR [eax+0x1e0]
  425137:	mov    esi,DWORD PTR [ebp+0x8]
  42513a:	xor    eax,eax
  42513c:	lea    edx,[ebp-0x68]
  42513f:	call   0x4272e7
  425144:	push   eax
  425145:	mov    eax,DWORD PTR [ebp+0x8]
  425148:	mov    eax,DWORD PTR [eax+0x198]
  42514e:	push   DWORD PTR [eax]
  425150:	call   DWORD PTR [edi+0x8]
  425153:	mov    DWORD PTR [ebp-0x14],eax
  425156:	jmp    0x42515c
  425158:	and    DWORD PTR [ebp-0x14],0x0
  42515c:	inc    DWORD PTR [ebp-0x8]
  42515f:	cmp    DWORD PTR [ebp-0x8],0x10
  425163:	jb     0x425105
  425165:	mov    eax,DWORD PTR [ebp-0x18]
  425168:	mov    esi,DWORD PTR [ebp+0x8]
  42516b:	xor    eax,ebx
  42516d:	mov    edi,0x3272f3
  425172:	add    eax,edi
  425174:	lea    edx,[ebp-0x10c]
  42517a:	call   0x4272e7
  42517f:	push   eax
  425180:	mov    eax,DWORD PTR [ebp-0x10]
  425183:	mov    esi,DWORD PTR [ebp+0x8]
  425186:	xor    eax,ebx
  425188:	add    eax,edi
  42518a:	lea    edx,[ebp-0x12c]
  425190:	call   0x4272e7
  425195:	push   eax
  425196:	call   DWORD PTR [ebp-0x14]
  425199:	mov    ecx,DWORD PTR [ebp-0x10]
  42519c:	xor    ecx,ebx
  42519e:	add    ecx,edi
  4251a0:	cmp    ecx,eax
  4251a2:	jne    0x4251ab
  4251a4:	mov    DWORD PTR [ebp-0x34],0x1
  4251ab:	mov    eax,DWORD PTR [ebp-0x18]
  4251ae:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251b1:	xor    eax,ebx
  4251b3:	lea    eax,[eax+ecx*1+0x3272f3]
  4251ba:	mov    DWORD PTR [ebp-0x1c],eax
  4251bd:	mov    eax,DWORD PTR [ebp-0x34]
  4251c0:	test   eax,eax
  4251c2:	je     0x4251d6
  4251c4:	mov    eax,DWORD PTR [ebp-0x18]
  4251c7:	mov    ecx,DWORD PTR [ebp-0x38]
  4251ca:	xor    eax,ebx
  4251cc:	lea    eax,[eax+ecx*1+0x3272f3]
  4251d3:	mov    DWORD PTR [ebp-0x38],eax
  4251d6:	mov    eax,DWORD PTR [ebp-0x18]
  4251d9:	xor    eax,ebx
  4251db:	mov    ecx,0xffcd8d0d
  4251e0:	sub    ecx,eax
  4251e2:	add    ecx,DWORD PTR [ebp-0x28]
  4251e5:	mov    eax,DWORD PTR [ebp-0x1c]
  4251e8:	cmp    eax,ecx
  4251ea:	jbe    0x42504f
  4251f0:	mov    esi,edi
  4251f2:	mov    eax,DWORD PTR [ebp-0x38]
  4251f5:	mov    ecx,DWORD PTR [ebp-0x1c]
  4251f8:	cmp    ecx,eax
  4251fa:	jne    0x42520d
  4251fc:	push   DWORD PTR [ebp+0x8]
  4251ff:	lea    eax,[ebp-0x40]
  425202:	push   eax
  425203:	call   0x427d56
  425208:	mov    DWORD PTR [ebp-0x24],eax
  42520b:	jmp    0x425219
  42520d:	mov    eax,DWORD PTR [ebp-0x24]
  425210:	mov    ecx,DWORD PTR [ebp-0x18]
  425213:	xor    ecx,ebx
  425215:	add    ecx,esi
  425217:	xor    DWORD PTR [eax],ecx
  425219:	mov    eax,DWORD PTR [ebp-0x10]
  42521c:	mov    ecx,DWORD PTR [ebp-0x24]
  42521f:	xor    eax,ebx
  425221:	add    eax,esi
  425223:	cmp    eax,ecx
  425225:	je     0x42599d
  42522b:	mov    eax,DWORD PTR [ebp-0x10]
  42522e:	mov    ecx,DWORD PTR [ebp-0x40]
  425231:	xor    eax,ebx
  425233:	add    eax,esi
  425235:	cmp    eax,ecx
  425237:	je     0x42599d
  42523d:	mov    eax,DWORD PTR [ebp-0x10]
  425240:	xor    eax,ebx
  425242:	add    eax,esi
  425244:	jmp    0x425262
  425246:	mov    edi,DWORD PTR [ebp-0x24]
  425249:	mov    cl,al
  42524b:	and    cl,0x1f
  42524e:	or     dl,0xff
  425251:	sub    dl,cl
  425253:	add    BYTE PTR [edi+eax*1],dl
  425256:	mov    ecx,DWORD PTR [ebp-0x18]
  425259:	xor    ecx,ebx
  42525b:	lea    eax,[eax+ecx*1+0x3272f3]
  425262:	mov    ecx,DWORD PTR [ebp-0x40]
  425265:	cmp    eax,ecx
  425267:	jb     0x425246
  425269:	mov    eax,DWORD PTR [ebp-0x40]
  42526c:	mov    DWORD PTR [ebp-0x28],eax
  42526f:	mov    eax,DWORD PTR [ebp-0x24]
  425272:	mov    DWORD PTR [ebp-0x38],0xf89c85a1
  425279:	mov    DWORD PTR [ebp-0xd4],eax
  42527f:	mov    edi,0xf89c85a2
  425284:	mov    DWORD PTR [ebp-0x2c],edi
  425287:	mov    eax,DWORD PTR [ebp-0x38]
  42528a:	xor    eax,ebx
  42528c:	add    eax,esi
  42528e:	mov    DWORD PTR [ebp-0xc],eax
  425291:	mov    eax,DWORD PTR [ebp-0x38]
  425294:	xor    eax,ebx
  425296:	add    eax,esi
  425298:	mov    DWORD PTR [ebp-0x8],eax
  42529b:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  4252a2:	mov    DWORD PTR [ebp-0x4c],0xf89c85b8
  4252a9:	mov    eax,DWORD PTR [ebp-0x38]
  4252ac:	mov    ecx,DWORD PTR [ebp-0x28]
  4252af:	xor    eax,ebx
  4252b1:	add    eax,esi
  4252b3:	cmp    ecx,eax
  4252b5:	je     0x4254b4
  4252bb:	jmp    0x425490
  4252c0:	mov    ecx,DWORD PTR [ebp-0xc]
  4252c3:	mov    eax,DWORD PTR [ebp-0x28]
  4252c6:	sub    eax,ecx
  4252c8:	mov    ecx,DWORD PTR [ebp-0x48]
  4252cb:	xor    ecx,ebx
  4252cd:	add    ecx,esi
  4252cf:	xor    edx,edx
  4252d1:	div    ecx
  4252d3:	mov    DWORD PTR [ebp-0x8],eax
  4252d6:	mov    eax,DWORD PTR [ebp-0x4c]
  4252d9:	mov    ecx,DWORD PTR [ebp-0x8]
  4252dc:	xor    eax,ebx
  4252de:	add    eax,esi
  4252e0:	cmp    ecx,eax
  4252e2:	jbe    0x4252ee
  4252e4:	mov    eax,DWORD PTR [ebp-0x4c]
  4252e7:	xor    eax,ebx
  4252e9:	add    eax,esi
  4252eb:	mov    DWORD PTR [ebp-0x8],eax
  4252ee:	mov    eax,DWORD PTR [ebp-0x48]
  4252f1:	mov    ecx,DWORD PTR [ebp-0x8]
  4252f4:	xor    eax,ebx
  4252f6:	add    eax,esi
  4252f8:	imul   eax,ecx
  4252fb:	mov    DWORD PTR [ebp-0x8],eax
  4252fe:	mov    eax,DWORD PTR [ebp-0x38]
  425301:	mov    ecx,DWORD PTR [ebp-0x8]
  425304:	xor    eax,ebx
  425306:	add    eax,esi
  425308:	cmp    ecx,eax
  42530a:	je     0x42547e
  425310:	mov    eax,DWORD PTR [ebp-0x8]
  425313:	mov    DWORD PTR [ebp-0x14],eax
  425316:	mov    eax,DWORD PTR [ebp-0xc]
  425319:	add    eax,DWORD PTR [ebp-0xd4]
  42531f:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  425326:	mov    DWORD PTR [ebp-0x34],edi
  425329:	mov    DWORD PTR [ebp-0xe8],0xf89c85a3
  425333:	mov    DWORD PTR [ebp-0x8],eax
  425336:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  42533d:	mov    DWORD PTR [ebp-0x1c],edi
  425340:	mov    eax,DWORD PTR [ebp-0x20]
  425343:	xor    eax,ebx
  425345:	add    eax,esi
  425347:	jmp    0x42543d
  42534c:	mov    DWORD PTR [ebp-0xe0],0xf89c85b4
  425356:	mov    DWORD PTR [ebp-0xc4],0xf89c858f
  425360:	mov    eax,DWORD PTR [ebp-0x1c]
  425363:	mov    ecx,DWORD PTR [ebp-0x44]
  425366:	xor    eax,ebx
  425368:	add    eax,esi
  42536a:	imul   eax,ecx
  42536d:	mov    ecx,DWORD PTR [ebp-0x8]
  425370:	mov    al,BYTE PTR [eax+ecx*1]
  425373:	mov    BYTE PTR [ebp-0x2],al
  425376:	mov    eax,DWORD PTR [ebp-0x1c]
  425379:	mov    ecx,DWORD PTR [ebp-0x44]
  42537c:	xor    eax,ebx
  42537e:	add    eax,esi
  425380:	imul   eax,ecx
  425383:	mov    ecx,DWORD PTR [ebp-0xe8]
  425389:	xor    ecx,ebx
  42538b:	add    eax,ecx
  42538d:	mov    ecx,DWORD PTR [ebp-0x8]
  425390:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  425398:	mov    ecx,DWORD PTR [ebp-0xe0]
  42539e:	xor    ecx,ebx
  4253a0:	lea    eax,[ecx+eax*1+0x3272f3]
  4253a7:	movzx  ecx,BYTE PTR [ebp-0x2]
  4253ab:	xor    ecx,eax
  4253ad:	mov    BYTE PTR [ebp-0x2],cl
  4253b0:	mov    al,BYTE PTR [ebp-0x2]
  4253b3:	mov    ecx,DWORD PTR [ebp-0x1c]
  4253b6:	mov    edx,DWORD PTR [ebp-0x44]
  4253b9:	xor    ecx,ebx
  4253bb:	add    ecx,esi
  4253bd:	imul   ecx,edx
  4253c0:	mov    edx,DWORD PTR [ebp-0x8]
  4253c3:	mov    BYTE PTR [ecx+edx*1],al
  4253c6:	mov    eax,DWORD PTR [ebp-0x1c]
  4253c9:	mov    ecx,DWORD PTR [ebp-0x44]
  4253cc:	xor    eax,ebx
  4253ce:	add    eax,esi
  4253d0:	imul   eax,ecx
  4253d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4253d6:	mov    al,BYTE PTR [eax+ecx*1]
  4253d9:	mov    BYTE PTR [ebp-0x2],al
  4253dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4253df:	mov    ecx,DWORD PTR [ebp-0x44]
  4253e2:	xor    eax,ebx
  4253e4:	add    eax,esi
  4253e6:	imul   eax,ecx
  4253e9:	mov    ecx,DWORD PTR [ebp-0x34]
  4253ec:	xor    ecx,ebx
  4253ee:	add    eax,ecx
  4253f0:	mov    ecx,DWORD PTR [ebp-0x8]
  4253f3:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4253fb:	mov    ecx,DWORD PTR [ebp-0xc4]
  425401:	xor    ecx,ebx
  425403:	lea    eax,[ecx+eax*1+0x3272f3]
  42540a:	movzx  ecx,BYTE PTR [ebp-0x2]
  42540e:	xor    ecx,eax
  425410:	mov    BYTE PTR [ebp-0x2],cl
  425413:	mov    al,BYTE PTR [ebp-0x2]
  425416:	mov    ecx,DWORD PTR [ebp-0x1c]
  425419:	mov    edx,DWORD PTR [ebp-0x44]
  42541c:	xor    ecx,ebx
  42541e:	add    ecx,esi
  425420:	imul   ecx,edx
  425423:	mov    edx,DWORD PTR [ebp-0x8]
  425426:	mov    BYTE PTR [ecx+edx*1],al
  425429:	mov    eax,DWORD PTR [ebp-0x30]
  42542c:	mov    ecx,DWORD PTR [ebp-0x34]
  42542f:	xor    eax,ebx
  425431:	xor    ecx,ebx
  425433:	add    eax,esi
  425435:	add    ecx,esi
  425437:	imul   eax,ecx
  42543a:	add    eax,DWORD PTR [ebp-0x44]
  42543d:	mov    DWORD PTR [ebp-0x44],eax
  425440:	mov    eax,DWORD PTR [ebp-0x44]
  425443:	mov    ecx,DWORD PTR [ebp-0x14]
  425446:	cmp    ecx,eax
  425448:	jb     0x42534c
  42544e:	mov    eax,DWORD PTR [ebp-0x34]
  425451:	mov    ecx,DWORD PTR [ebp-0x14]
  425454:	xor    eax,ebx
  425456:	add    eax,esi
  425458:	imul   eax,ecx
  42545b:	mov    ecx,DWORD PTR [ebp-0x20]
  42545e:	xor    ecx,ebx
  425460:	add    ecx,esi
  425462:	or     eax,ecx
  425464:	mov    ecx,DWORD PTR [ebp-0x2c]
  425467:	xor    ecx,ebx
  425469:	add    eax,ecx
  42546b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42546e:	xor    ecx,ebx
  425470:	add    eax,ecx
  425472:	mov    ecx,DWORD PTR [ebp-0xc]
  425475:	lea    eax,[eax+ecx*1+0x64e5e6]
  42547c:	jmp    0x42548d
  42547e:	mov    eax,DWORD PTR [ebp-0x2c]
  425481:	mov    ecx,DWORD PTR [ebp-0xc]
  425484:	xor    eax,ebx
  425486:	lea    eax,[eax+ecx*1+0x3272f3]
  42548d:	mov    DWORD PTR [ebp-0xc],eax
  425490:	mov    eax,DWORD PTR [ebp-0x2c]
  425493:	xor    eax,ebx
  425495:	mov    ecx,0xffcd8d0d
  42549a:	sub    ecx,eax
  42549c:	add    ecx,DWORD PTR [ebp-0x28]
  42549f:	mov    eax,DWORD PTR [ebp-0x2c]
  4254a2:	mov    edx,DWORD PTR [ebp-0xc]
  4254a5:	xor    eax,ebx
  4254a7:	add    eax,esi
  4254a9:	imul   eax,edx
  4254ac:	cmp    eax,ecx
  4254ae:	jbe    0x4252c0
  4254b4:	mov    eax,DWORD PTR [ebp-0x10]
  4254b7:	mov    ecx,DWORD PTR [ebp-0x40]
  4254ba:	mov    eax,DWORD PTR [ebp+0x8]
  4254bd:	mov    edx,DWORD PTR [ebp-0x54]
  4254c0:	mov    eax,DWORD PTR [eax+0x1e0]
  4254c6:	xor    edx,ebx
  4254c8:	add    edx,esi
  4254ca:	push   edx
  4254cb:	mov    edx,DWORD PTR [ebp-0x3c]
  4254ce:	xor    edx,ebx
  4254d0:	add    edx,esi
  4254d2:	push   edx
  4254d3:	push   ecx
  4254d4:	mov    DWORD PTR [ebp-0x30],ecx
  4254d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4254da:	xor    ecx,ebx
  4254dc:	add    ecx,esi
  4254de:	push   ecx
  4254df:	call   DWORD PTR [eax+0x14]
  4254e2:	mov    edi,eax
  4254e4:	mov    eax,DWORD PTR [ebp-0x10]
  4254e7:	xor    eax,ebx
  4254e9:	add    eax,esi
  4254eb:	cmp    eax,edi
  4254ed:	je     0x425548
  4254ef:	mov    eax,DWORD PTR [ebp-0x10]
  4254f2:	jmp    0x425515
  4254f4:	mov    ecx,DWORD PTR [ebp-0x24]
  4254f7:	xor    eax,ebx
  4254f9:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f3]
  425500:	mov    BYTE PTR [eax+edi*1+0x3272f3],cl
  425507:	mov    ecx,DWORD PTR [ebp-0x18]
  42550a:	xor    ecx,ebx
  42550c:	lea    eax,[ecx+eax*1+0x3272f3]
  425513:	xor    eax,ebx
  425515:	mov    ecx,DWORD PTR [ebp-0x40]
  425518:	sub    ecx,esi
  42551a:	xor    ecx,ebx
  42551c:	cmp    eax,ecx
  42551e:	jne    0x4254f4
  425520:	mov    eax,DWORD PTR [ebp+0x8]
  425523:	mov    ecx,DWORD PTR [ebp-0x50]
  425526:	mov    eax,DWORD PTR [eax+0x1e0]
  42552c:	xor    ecx,ebx
  42552e:	add    ecx,esi
  425530:	push   ecx
  425531:	mov    ecx,DWORD PTR [ebp-0x10]
  425534:	xor    ecx,ebx
  425536:	add    ecx,esi
  425538:	push   ecx
  425539:	push   DWORD PTR [ebp-0x24]
  42553c:	call   DWORD PTR [eax+0x18]
  42553f:	mov    eax,DWORD PTR [ebp-0x30]
  425542:	mov    DWORD PTR [ebp-0x24],edi
  425545:	mov    DWORD PTR [ebp-0x40],eax
  425548:	mov    edi,DWORD PTR [ebp-0x24]
  42554b:	mov    eax,DWORD PTR [ebp-0x18]
  42554e:	mov    ecx,DWORD PTR [ebp-0x10]
  425551:	xor    eax,ebx
  425553:	mov    DWORD PTR [ebp-0x30],edi
  425556:	add    eax,esi
  425558:	mov    DWORD PTR [ebp-0x5c],0x422b332b
  42555f:	mov    DWORD PTR [ebp-0x58],0x342b3c2b
  425566:	jmp    0x42559a
  425568:	xor    ecx,ebx
  42556a:	mov    dl,BYTE PTR [ebp+ecx*1+0x327297]
  425571:	xor    dl,0x7d
  425574:	add    dl,0x2
  425577:	mov    DWORD PTR [ebp-0x3c],ecx
  42557a:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f3]
  425582:	movzx  edx,dl
  425585:	cmp    ecx,edx
  425587:	jne    0x4255a4
  425589:	mov    ecx,DWORD PTR [ebp-0x18]
  42558c:	mov    edx,DWORD PTR [ebp-0x3c]
  42558f:	xor    ecx,ebx
  425591:	lea    ecx,[ecx+edx*1+0x3272f3]
  425598:	xor    ecx,ebx
  42559a:	cmp    ecx,0xf89c85b9
  4255a0:	jne    0x425568
  4255a2:	jmp    0x4255ab
  4255a4:	mov    eax,DWORD PTR [ebp-0x10]
  4255a7:	xor    eax,ebx
  4255a9:	add    eax,esi
  4255ab:	mov    ecx,DWORD PTR [ebp-0x10]
  4255ae:	xor    ecx,ebx
  4255b0:	add    ecx,esi
  4255b2:	cmp    ecx,eax
  4255b4:	je     0x425727
  4255ba:	mov    eax,DWORD PTR [edi+0x8]
  4255bd:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4255c4:	mov    DWORD PTR [ebp-0x3c],0xf89cc3d0
  4255cb:	mov    DWORD PTR [ebp-0x48],0xf89cb5a1
  4255d2:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  4255d9:	mov    DWORD PTR [ebp-0x14],eax
  4255dc:	mov    eax,DWORD PTR [ebp+0x8]
  4255df:	mov    ecx,DWORD PTR [ebp-0x20]
  4255e2:	xor    ecx,ebx
  4255e4:	add    ecx,esi
  4255e6:	push   ecx
  4255e7:	mov    ecx,DWORD PTR [ebp-0x48]
  4255ea:	mov    eax,DWORD PTR [eax+0x1e0]
  4255f0:	xor    ecx,ebx
  4255f2:	add    ecx,esi
  4255f4:	push   ecx
  4255f5:	mov    ecx,DWORD PTR [ebp-0x3c]
  4255f8:	xor    ecx,ebx
  4255fa:	add    ecx,esi
  4255fc:	push   ecx
  4255fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425600:	xor    ecx,ebx
  425602:	add    ecx,esi
  425604:	push   ecx
  425605:	call   DWORD PTR [eax+0x14]
  425608:	mov    edi,eax
  42560a:	mov    eax,DWORD PTR [ebp+0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x20]
  425610:	mov    eax,DWORD PTR [eax+0x1e0]
  425616:	xor    ecx,ebx
  425618:	add    ecx,esi
  42561a:	push   ecx
  42561b:	mov    ecx,DWORD PTR [ebp-0x48]
  42561e:	xor    ecx,ebx
  425620:	add    ecx,esi
  425622:	push   ecx
  425623:	mov    ecx,DWORD PTR [ebp-0xc]
  425626:	push   DWORD PTR [ebp-0x14]
  425629:	xor    ecx,ebx
  42562b:	add    ecx,esi
  42562d:	push   ecx
  42562e:	call   DWORD PTR [eax+0x14]
  425631:	mov    ecx,DWORD PTR [ebp-0xc]
  425634:	xor    ecx,ebx
  425636:	add    ecx,esi
  425638:	mov    DWORD PTR [ebp-0x20],eax
  42563b:	cmp    ecx,edi
  42563d:	je     0x4259ca
  425643:	mov    ecx,DWORD PTR [ebp-0xc]
  425646:	xor    ecx,ebx
  425648:	add    ecx,esi
  42564a:	cmp    ecx,eax
  42564c:	je     0x4259ca
  425652:	mov    DWORD PTR [ebp-0x3c],0xf89c85bc
  425659:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  425660:	mov    ecx,DWORD PTR [ebp-0x3c]
  425663:	xor    cl,0xac
  425666:	sub    cl,0xd
  425669:	mov    BYTE PTR [edi],cl
  42566b:	mov    ecx,DWORD PTR [ebp-0xc]
  42566e:	xor    cl,0xac
  425671:	sub    cl,0xd
  425674:	mov    BYTE PTR [edi+0x1],cl
  425677:	mov    ecx,DWORD PTR [ebp-0x54]
  42567a:	xor    cl,0xac
  42567d:	sub    cl,0xd
  425680:	mov    BYTE PTR [edi+0x2],cl
  425683:	and    DWORD PTR [ebp-0xc8],0x0
  42568a:	and    DWORD PTR [ebp-0xdc],0x0
  425691:	lea    ecx,[ebp-0xdc]
  425697:	push   ecx
  425698:	push   DWORD PTR [ebp-0x14]
  42569b:	push   eax
  42569c:	lea    eax,[ebp-0xc8]
  4256a2:	push   eax
  4256a3:	mov    eax,DWORD PTR [ebp-0x30]
  4256a6:	push   DWORD PTR [eax+0xc]
  4256a9:	mov    eax,DWORD PTR [ebp-0x24]
  4256ac:	add    eax,0x10
  4256af:	push   eax
  4256b0:	push   edi
  4256b1:	call   0x424957
  4256b6:	mov    DWORD PTR [ebp-0x3c],eax
  4256b9:	mov    eax,DWORD PTR [ebp+0x8]
  4256bc:	mov    ecx,DWORD PTR [ebp-0x50]
  4256bf:	mov    eax,DWORD PTR [eax+0x1e0]
  4256c5:	xor    ecx,ebx
  4256c7:	add    ecx,esi
  4256c9:	push   ecx
  4256ca:	mov    ecx,DWORD PTR [ebp-0xc]
  4256cd:	xor    ecx,ebx
  4256cf:	add    ecx,esi
  4256d1:	push   ecx
  4256d2:	push   edi
  4256d3:	call   DWORD PTR [eax+0x18]
  4256d6:	mov    eax,DWORD PTR [ebp-0x3c]
  4256d9:	add    eax,0xffcd8d0d
  4256de:	xor    eax,ebx
  4256e0:	cmp    eax,0xf89c85a1
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	mov    eax,DWORD PTR [eax+0x1e0]
  4256ee:	mov    ecx,DWORD PTR [ebp-0x50]
  4256f1:	jne    0x425714
  4256f3:	xor    ecx,ebx
  4256f5:	add    ecx,esi
  4256f7:	push   ecx
  4256f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4256fb:	xor    ecx,ebx
  4256fd:	add    ecx,esi
  4256ff:	push   ecx
  425700:	push   DWORD PTR [ebp-0x24]
  425703:	call   DWORD PTR [eax+0x18]
  425706:	mov    eax,DWORD PTR [ebp-0x20]
  425709:	mov    DWORD PTR [ebp-0x24],eax
  42570c:	mov    eax,DWORD PTR [ebp-0x14]
  42570f:	mov    DWORD PTR [ebp-0x40],eax
  425712:	jmp    0x425727
  425714:	xor    ecx,ebx
  425716:	add    ecx,esi
  425718:	push   ecx
  425719:	mov    ecx,DWORD PTR [ebp-0xc]
  42571c:	xor    ecx,ebx
  42571e:	add    ecx,esi
  425720:	push   ecx
  425721:	push   DWORD PTR [ebp-0x20]
  425724:	call   DWORD PTR [eax+0x18]
  425727:	mov    eax,DWORD PTR [ebp-0x40]
  42572a:	mov    DWORD PTR [ebp-0x38],eax
  42572d:	mov    eax,DWORD PTR [ebp-0x24]
  425730:	mov    DWORD PTR [ebp-0x28],0xf89c85a1
  425737:	mov    DWORD PTR [ebp-0x3c],eax
  42573a:	mov    edi,0xf89c85a2
  42573f:	mov    DWORD PTR [ebp-0x2c],edi
  425742:	mov    eax,DWORD PTR [ebp-0x28]
  425745:	xor    eax,ebx
  425747:	add    eax,esi
  425749:	mov    DWORD PTR [ebp-0xc],eax
  42574c:	mov    eax,DWORD PTR [ebp-0x28]
  42574f:	xor    eax,ebx
  425751:	add    eax,esi
  425753:	mov    DWORD PTR [ebp-0x14],eax
  425756:	mov    DWORD PTR [ebp-0x48],0xf89c8581
  42575d:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  425764:	mov    eax,DWORD PTR [ebp-0x28]
  425767:	mov    ecx,DWORD PTR [ebp-0x38]
  42576a:	xor    eax,ebx
  42576c:	add    eax,esi
  42576e:	cmp    ecx,eax
  425770:	je     0x425966
  425776:	jmp    0x425942
  42577b:	mov    ecx,DWORD PTR [ebp-0xc]
  42577e:	mov    eax,DWORD PTR [ebp-0x38]
  425781:	sub    eax,ecx
  425783:	mov    ecx,DWORD PTR [ebp-0x48]
  425786:	xor    ecx,ebx
  425788:	add    ecx,esi
  42578a:	xor    edx,edx
  42578c:	div    ecx
  42578e:	mov    DWORD PTR [ebp-0x14],eax
  425791:	mov    eax,DWORD PTR [ebp-0x20]
  425794:	mov    ecx,DWORD PTR [ebp-0x14]
  425797:	xor    eax,ebx
  425799:	add    eax,esi
  42579b:	cmp    ecx,eax
  42579d:	jbe    0x4257a9
  42579f:	mov    eax,DWORD PTR [ebp-0x20]
  4257a2:	xor    eax,ebx
  4257a4:	add    eax,esi
  4257a6:	mov    DWORD PTR [ebp-0x14],eax
  4257a9:	mov    eax,DWORD PTR [ebp-0x48]
  4257ac:	mov    ecx,DWORD PTR [ebp-0x14]
  4257af:	xor    eax,ebx
  4257b1:	add    eax,esi
  4257b3:	imul   eax,ecx
  4257b6:	mov    DWORD PTR [ebp-0x14],eax
  4257b9:	mov    eax,DWORD PTR [ebp-0x28]
  4257bc:	mov    ecx,DWORD PTR [ebp-0x14]
  4257bf:	xor    eax,ebx
  4257c1:	add    eax,esi
  4257c3:	cmp    ecx,eax
  4257c5:	je     0x425930
  4257cb:	mov    eax,DWORD PTR [ebp-0x14]
  4257ce:	mov    DWORD PTR [ebp-0x34],eax
  4257d1:	mov    eax,DWORD PTR [ebp-0xc]
  4257d4:	add    eax,DWORD PTR [ebp-0x3c]
  4257d7:	mov    DWORD PTR [ebp-0x4c],0xf89c85a1
  4257de:	mov    DWORD PTR [ebp-0x14],edi
  4257e1:	mov    DWORD PTR [ebp-0x54],0xf89c85a3
  4257e8:	mov    DWORD PTR [ebp-0x1c],eax
  4257eb:	mov    DWORD PTR [ebp-0x30],0xf89c85bc
  4257f2:	mov    DWORD PTR [ebp-0x8],edi
  4257f5:	mov    eax,DWORD PTR [ebp-0x4c]
  4257f8:	xor    eax,ebx
  4257fa:	add    eax,esi
  4257fc:	jmp    0x4258ef
  425801:	mov    DWORD PTR [ebp-0xe4],0xf89c85b4
  42580b:	mov    DWORD PTR [ebp-0xd0],0xf89c858f
  425815:	mov    eax,DWORD PTR [ebp-0x8]
  425818:	mov    ecx,DWORD PTR [ebp-0x18]
  42581b:	xor    eax,ebx
  42581d:	add    eax,esi
  42581f:	imul   eax,ecx
  425822:	mov    ecx,DWORD PTR [ebp-0x1c]
  425825:	mov    al,BYTE PTR [eax+ecx*1]
  425828:	mov    BYTE PTR [ebp-0x1],al
  42582b:	mov    eax,DWORD PTR [ebp-0x8]
  42582e:	mov    ecx,DWORD PTR [ebp-0x18]
  425831:	xor    eax,ebx
  425833:	add    eax,esi
  425835:	imul   eax,ecx
  425838:	mov    ecx,DWORD PTR [ebp-0x54]
  42583b:	xor    ecx,ebx
  42583d:	add    eax,ecx
  42583f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425842:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  42584a:	mov    ecx,DWORD PTR [ebp-0xe4]
  425850:	xor    ecx,ebx
  425852:	lea    eax,[ecx+eax*1+0x3272f3]
  425859:	movzx  ecx,BYTE PTR [ebp-0x1]
  42585d:	xor    ecx,eax
  42585f:	mov    BYTE PTR [ebp-0x1],cl
  425862:	mov    al,BYTE PTR [ebp-0x1]
  425865:	mov    ecx,DWORD PTR [ebp-0x8]
  425868:	mov    edx,DWORD PTR [ebp-0x18]
  42586b:	xor    ecx,ebx
  42586d:	add    ecx,esi
  42586f:	imul   ecx,edx
  425872:	mov    edx,DWORD PTR [ebp-0x1c]
  425875:	mov    BYTE PTR [ecx+edx*1],al
  425878:	mov    eax,DWORD PTR [ebp-0x8]
  42587b:	mov    ecx,DWORD PTR [ebp-0x18]
  42587e:	xor    eax,ebx
  425880:	add    eax,esi
  425882:	imul   eax,ecx
  425885:	mov    ecx,DWORD PTR [ebp-0x1c]
  425888:	mov    al,BYTE PTR [eax+ecx*1]
  42588b:	mov    BYTE PTR [ebp-0x1],al
  42588e:	mov    eax,DWORD PTR [ebp-0x8]
  425891:	mov    ecx,DWORD PTR [ebp-0x18]
  425894:	xor    eax,ebx
  425896:	add    eax,esi
  425898:	imul   eax,ecx
  42589b:	mov    ecx,DWORD PTR [ebp-0x14]
  42589e:	xor    ecx,ebx
  4258a0:	add    eax,ecx
  4258a2:	mov    ecx,DWORD PTR [ebp-0x1c]
  4258a5:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f3]
  4258ad:	mov    ecx,DWORD PTR [ebp-0xd0]
  4258b3:	xor    ecx,ebx
  4258b5:	lea    eax,[ecx+eax*1+0x3272f3]
  4258bc:	movzx  ecx,BYTE PTR [ebp-0x1]
  4258c0:	xor    ecx,eax
  4258c2:	mov    BYTE PTR [ebp-0x1],cl
  4258c5:	mov    al,BYTE PTR [ebp-0x1]
  4258c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4258cb:	mov    edx,DWORD PTR [ebp-0x18]
  4258ce:	xor    ecx,ebx
  4258d0:	add    ecx,esi
  4258d2:	imul   ecx,edx
  4258d5:	mov    edx,DWORD PTR [ebp-0x1c]
  4258d8:	mov    BYTE PTR [ecx+edx*1],al
  4258db:	mov    eax,DWORD PTR [ebp-0x30]
  4258de:	mov    ecx,DWORD PTR [ebp-0x14]
  4258e1:	xor    eax,ebx
  4258e3:	xor    ecx,ebx
  4258e5:	add    eax,esi
  4258e7:	add    ecx,esi
  4258e9:	imul   eax,ecx
  4258ec:	add    eax,DWORD PTR [ebp-0x18]
  4258ef:	mov    DWORD PTR [ebp-0x18],eax
  4258f2:	mov    eax,DWORD PTR [ebp-0x18]
  4258f5:	mov    ecx,DWORD PTR [ebp-0x34]
  4258f8:	cmp    ecx,eax
  4258fa:	jb     0x425801
  425900:	mov    eax,DWORD PTR [ebp-0x14]
  425903:	mov    ecx,DWORD PTR [ebp-0x34]
  425906:	xor    eax,ebx
  425908:	add    eax,esi
  42590a:	imul   eax,ecx
  42590d:	mov    ecx,DWORD PTR [ebp-0x4c]
  425910:	xor    ecx,ebx
  425912:	add    ecx,esi
  425914:	or     eax,ecx
  425916:	mov    ecx,DWORD PTR [ebp-0x2c]
  425919:	xor    ecx,ebx
  42591b:	add    eax,ecx
  42591d:	mov    ecx,DWORD PTR [ebp-0x2c]
  425920:	xor    ecx,ebx
  425922:	add    eax,ecx
  425924:	mov    ecx,DWORD PTR [ebp-0xc]
  425927:	lea    eax,[eax+ecx*1+0x64e5e6]
  42592e:	jmp    0x42593f
  425930:	mov    eax,DWORD PTR [ebp-0x2c]
  425933:	mov    ecx,DWORD PTR [ebp-0xc]
  425936:	xor    eax,ebx
  425938:	lea    eax,[eax+ecx*1+0x3272f3]
  42593f:	mov    DWORD PTR [ebp-0xc],eax
  425942:	mov    eax,DWORD PTR [ebp-0x2c]
  425945:	xor    eax,ebx
  425947:	mov    ecx,0xffcd8d0d
  42594c:	sub    ecx,eax
  42594e:	add    ecx,DWORD PTR [ebp-0x38]
  425951:	mov    eax,DWORD PTR [ebp-0x2c]
  425954:	mov    edx,DWORD PTR [ebp-0xc]
  425957:	xor    eax,ebx
  425959:	add    eax,esi
  42595b:	imul   eax,edx
  42595e:	cmp    eax,ecx
  425960:	jbe    0x42577b
  425966:	push   DWORD PTR [ebp+0x8]
  425969:	mov    eax,DWORD PTR [ebp+0x8]
  42596c:	push   DWORD PTR [eax+0x1cc]
  425972:	lea    eax,[ebp-0xd8]
  425978:	push   eax
  425979:	mov    eax,DWORD PTR [ebp+0x8]
  42597c:	mov    eax,DWORD PTR [eax+0x1c4]
  425982:	push   DWORD PTR [eax]
  425984:	mov    eax,DWORD PTR [ebp+0x8]
  425987:	mov    eax,DWORD PTR [eax+0x1c0]
  42598d:	push   DWORD PTR [eax]
  42598f:	push   DWORD PTR [ebp-0x40]
  425992:	push   DWORD PTR [ebp-0x24]
  425995:	call   0x42642c
  42599a:	mov    DWORD PTR [ebp-0x3c],eax
  42599d:	mov    eax,DWORD PTR [ebp-0x10]
  4259a0:	mov    ecx,DWORD PTR [ebp-0x24]
  4259a3:	xor    eax,ebx
  4259a5:	add    eax,esi
  4259a7:	cmp    eax,ecx
  4259a9:	je     0x4259ca
  4259ab:	mov    eax,DWORD PTR [ebp+0x8]
  4259ae:	mov    ecx,DWORD PTR [ebp-0x50]
  4259b1:	mov    eax,DWORD PTR [eax+0x1e0]
  4259b7:	xor    ecx,ebx
  4259b9:	add    ecx,esi
  4259bb:	push   ecx
  4259bc:	mov    ecx,DWORD PTR [ebp-0x10]
  4259bf:	xor    ecx,ebx
  4259c1:	add    ecx,esi
  4259c3:	push   ecx
  4259c4:	push   DWORD PTR [ebp-0x24]
  4259c7:	call   DWORD PTR [eax+0x18]
  4259ca:	pop    edi
  4259cb:	pop    esi
  4259cc:	pop    ebx
  4259cd:	leave  
  4259ce:	ret    0x4
  4259d1:	push   ebp
  4259d2:	mov    ebp,esp
  4259d4:	push   ecx
  4259d5:	push   ecx
  4259d6:	lea    eax,[ebp-0x8]
  4259d9:	mov    DWORD PTR [ebp-0x4],eax
  4259dc:	push   esi
  4259dd:	mov    esi,DWORD PTR [ebp-0x4]
  4259e0:	mov    eax,0xf881ba2f
  4259e5:	mov    DWORD PTR [esi],eax
  4259e7:	mov    esi,DWORD PTR [ebp-0x8]
  4259ea:	cmp    esi,eax
  4259ec:	pop    esi
  4259ed:	jne    0x4259f7
  4259ef:	mov    BYTE PTR [ecx+0xa],0x83
  4259f3:	mov    BYTE PTR [edx+0x8],0x2c
  4259f7:	mov    BYTE PTR [edx+0xa],0x83
  4259fb:	mov    BYTE PTR [ecx+0x2],0x11
  4259ff:	leave  
  425a00:	ret    
  425a01:	push   ebp
  425a02:	mov    ebp,esp
  425a04:	push   ecx
  425a05:	push   ecx
  425a06:	lea    eax,[ebp-0x8]
  425a09:	mov    DWORD PTR [ebp-0x4],eax
  425a0c:	mov    edx,DWORD PTR [ebp-0x4]
  425a0f:	mov    eax,0xf88b0bcb
  425a14:	mov    DWORD PTR [edx],eax
  425a16:	mov    edx,DWORD PTR [ebp-0x8]
  425a19:	cmp    edx,eax
  425a1b:	jne    0x425a2c
  425a1d:	mov    eax,DWORD PTR [ebp+0x8]
  425a20:	mov    BYTE PTR [ecx+0x9],0xf
  425a24:	mov    BYTE PTR [eax+0x7],0x54
  425a28:	mov    BYTE PTR [ecx+0x6],0xc
  425a2c:	mov    BYTE PTR [ecx+0x3],0x1f
  425a30:	leave  
  425a31:	ret    0x4
  425a34:	push   ebp
  425a35:	mov    ebp,esp
  425a37:	push   ecx
  425a38:	push   ecx
  425a39:	lea    eax,[ebp-0x8]
  425a3c:	mov    DWORD PTR [ebp-0x4],eax
  425a3f:	mov    edx,DWORD PTR [ebp-0x4]
  425a42:	mov    eax,0x7e0da2f
  425a47:	mov    DWORD PTR [edx],eax
  425a49:	mov    edx,DWORD PTR [ebp-0x8]
  425a4c:	cmp    edx,eax
  425a4e:	jne    0x425a54
  425a50:	mov    BYTE PTR [ecx+0x7],0x54
  425a54:	mov    eax,DWORD PTR [ebp+0x8]
  425a57:	mov    BYTE PTR [ecx+0x1],0x1a
  425a5b:	mov    BYTE PTR [eax+0x9],0x2f
  425a5f:	leave  
  425a60:	ret    0x4
  425a63:	push   ebp
  425a64:	mov    ebp,esp
  425a66:	push   ecx
  425a67:	push   ecx
  425a68:	lea    eax,[ebp-0x8]
  425a6b:	mov    DWORD PTR [ebp-0x4],eax
  425a6e:	push   esi
  425a6f:	mov    esi,DWORD PTR [ebp-0x4]
  425a72:	mov    eax,0x7060e38
  425a77:	mov    DWORD PTR [esi],eax
  425a79:	mov    esi,DWORD PTR [ebp-0x8]
  425a7c:	cmp    esi,eax
  425a7e:	pop    esi
  425a7f:	jne    0x425a8b
  425a81:	mov    BYTE PTR [edx+0x4],0x10
  425a85:	mov    WORD PTR [ecx+0x3],0x101f
  425a8b:	mov    BYTE PTR [edx],0x3c
  425a8e:	leave  
  425a8f:	ret    
  425a90:	push   ebp
  425a91:	mov    ebp,esp
  425a93:	push   ecx
  425a94:	push   ecx
  425a95:	lea    eax,[ebp-0x8]
  425a98:	mov    DWORD PTR [ebp-0x4],eax
  425a9b:	mov    edx,DWORD PTR [ebp-0x4]
  425a9e:	mov    eax,0xf8870b3f
  425aa3:	mov    DWORD PTR [edx],eax
  425aa5:	mov    edx,DWORD PTR [ebp-0x8]
  425aa8:	cmp    edx,eax
  425aaa:	jne    0x425ab7
  425aac:	mov    eax,DWORD PTR [ebp+0x8]
  425aaf:	mov    BYTE PTR [ecx+0x8],0xc
  425ab3:	mov    BYTE PTR [eax+0x1],0x1a
  425ab7:	mov    BYTE PTR [ecx+0x5],0x8
  425abb:	leave  
  425abc:	ret    0x4
  425abf:	push   esi
  425ac0:	mov    ecx,edi
  425ac2:	call   0x425a90
  425ac7:	mov    edx,edi
  425ac9:	mov    ecx,esi
  425acb:	mov    BYTE PTR [esi],0x1c
  425ace:	call   0x425a63
  425ad3:	push   esi
  425ad4:	mov    ecx,edi
  425ad6:	mov    BYTE PTR [esi+0x5],0x8
  425ada:	call   0x425a34
  425adf:	push   esi
  425ae0:	mov    BYTE PTR [esi+0x6],0xc
  425ae4:	call   0x425a01
  425ae9:	mov    BYTE PTR [esi+0x2],0x11
  425aed:	mov    edx,esi
  425aef:	jmp    0x4259d1
  425af4:	push   ebp
  425af5:	mov    ebp,esp
  425af7:	push   ecx
  425af8:	mov    ecx,DWORD PTR [edx+0x194]
  425afe:	push   esi
  425aff:	mov    esi,DWORD PTR [ebp+0x8]
  425b02:	mov    esi,DWORD PTR [esi]
  425b04:	mov    DWORD PTR [ecx],esi
  425b06:	mov    ecx,DWORD PTR [edx+0x194]
  425b0c:	mov    ecx,DWORD PTR [ecx]
  425b0e:	mov    esi,DWORD PTR [edx+0x190]
  425b14:	mov    DWORD PTR [esi],ecx
  425b16:	mov    eax,DWORD PTR [edx+0x194]
  425b1c:	mov    ecx,DWORD PTR [eax]
  425b1e:	mov    ecx,DWORD PTR [ecx+0x3c]
  425b21:	add    ecx,DWORD PTR [eax]
  425b23:	mov    DWORD PTR [ebp-0x4],0xf89ca5a1
  425b2a:	mov    eax,DWORD PTR [ebp-0x4]
  425b2d:	movzx  ecx,WORD PTR [ecx+0x16]
  425b31:	xor    eax,0x75108ac
  425b36:	add    eax,0x3272f3
  425b3b:	pop    esi
  425b3c:	test   ecx,eax
  425b3e:	je     0x425b4c
  425b40:	mov    eax,DWORD PTR [edx+0x1c8]
  425b46:	mov    DWORD PTR [eax],0xf89c85a2
  425b4c:	leave  
  425b4d:	ret    0x4
  425b50:	push   ebp
  425b51:	mov    ebp,esp
  425b53:	sub    esp,0x70
  425b56:	and    DWORD PTR [ebp-0x20],0x0
  425b5a:	mov    DWORD PTR [ebp-0x18],0xf89cb5a1
  425b61:	mov    DWORD PTR [ebp-0x1c],0xf89c85e1
  425b68:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  425b6f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  425b76:	mov    DWORD PTR [ebp-0x2c],0xf89f05a1
  425b7d:	mov    eax,DWORD PTR [ebp+0x20]
  425b80:	mov    eax,DWORD PTR [eax+0x194]
  425b86:	mov    DWORD PTR [ebp-0xc],eax
  425b89:	mov    eax,DWORD PTR [ebp+0x20]
  425b8c:	push   ebx
  425b8d:	push   esi
  425b8e:	mov    esi,DWORD PTR [eax+0x190]
  425b94:	mov    eax,DWORD PTR [ebp+0x20]
  425b97:	mov    eax,DWORD PTR [eax+0x18c]
  425b9d:	mov    DWORD PTR [ebp-0x8],eax
  425ba0:	mov    eax,DWORD PTR [eax]
  425ba2:	push   edi
  425ba3:	mov    DWORD PTR [ebp-0x4],esi
  425ba6:	test   eax,eax
  425ba8:	jne    0x425bb5
  425baa:	push   DWORD PTR [ebp+0x1c]
  425bad:	mov    edx,DWORD PTR [ebp+0x20]
  425bb0:	call   0x425af4
  425bb5:	mov    eax,DWORD PTR [esi]
  425bb7:	mov    ebx,DWORD PTR [esi]
  425bb9:	add    ebx,DWORD PTR [eax+0x3c]
  425bbc:	mov    eax,DWORD PTR [ebp+0xc]
  425bbf:	mov    ecx,DWORD PTR [ebp-0x8]
  425bc2:	mov    ecx,DWORD PTR [ecx]
  425bc4:	mov    esi,0x75108ac
  425bc9:	xor    eax,esi
  425bcb:	mov    edi,0x3272f3
  425bd0:	add    eax,edi
  425bd2:	cmp    eax,ecx
  425bd4:	jne    0x425e0c
  425bda:	mov    eax,DWORD PTR [ebp-0xc]
  425bdd:	mov    eax,DWORD PTR [eax]
  425bdf:	mov    DWORD PTR [ebp-0x10],eax
  425be2:	mov    eax,DWORD PTR [ebx+0x50]
  425be5:	mov    DWORD PTR [ebp-0x68],eax
  425be8:	mov    eax,DWORD PTR [ebp-0x18]
  425beb:	xor    eax,esi
  425bed:	add    eax,edi
  425bef:	mov    DWORD PTR [ebp-0x64],eax
  425bf2:	mov    eax,DWORD PTR [ebp-0x14]
  425bf5:	and    DWORD PTR [ebp-0x6c],0x0
  425bf9:	xor    eax,esi
  425bfb:	add    eax,edi
  425bfd:	mov    DWORD PTR [ebp-0x60],eax
  425c00:	lea    eax,[ebp-0x70]
  425c03:	push   eax
  425c04:	mov    eax,DWORD PTR [ebp+0x8]
  425c07:	xor    eax,esi
  425c09:	add    eax,edi
  425c0b:	push   eax
  425c0c:	mov    eax,DWORD PTR [ebp+0x20]
  425c0f:	add    eax,0xaa
  425c14:	push   eax
  425c15:	mov    eax,DWORD PTR [ebp+0x20]
  425c18:	mov    eax,DWORD PTR [eax+0x198]
  425c1e:	mov    DWORD PTR [ebp-0x70],0x4
  425c25:	push   DWORD PTR [eax]
  425c27:	mov    eax,DWORD PTR [ebp+0x10]
  425c2a:	call   eax
  425c2c:	mov    ecx,DWORD PTR [ebp-0xc]
  425c2f:	mov    ecx,DWORD PTR [ecx]
  425c31:	mov    edx,DWORD PTR [ebp-0x8]
  425c34:	mov    DWORD PTR [ebp-0x6c],eax
  425c37:	mov    DWORD PTR [ebp+0x1c],eax
  425c3a:	mov    DWORD PTR [edx],ecx
  425c3c:	mov    ecx,DWORD PTR [ebp-0x4]
  425c3f:	mov    DWORD PTR [ecx],eax
  425c41:	mov    eax,DWORD PTR [ebx+0x50]
  425c44:	mov    DWORD PTR [ebp-0x68],eax
  425c47:	mov    eax,DWORD PTR [ebp-0x1c]
  425c4a:	xor    eax,esi
  425c4c:	add    eax,edi
  425c4e:	mov    DWORD PTR [ebp-0x64],eax
  425c51:	lea    eax,[ebp-0x20]
  425c54:	mov    DWORD PTR [ebp-0x60],eax
  425c57:	lea    eax,[ebp-0x70]
  425c5a:	push   eax
  425c5b:	mov    eax,DWORD PTR [ebp+0x8]
  425c5e:	xor    eax,esi
  425c60:	add    eax,edi
  425c62:	push   eax
  425c63:	mov    eax,DWORD PTR [ebp+0x20]
  425c66:	add    eax,0xee
  425c6b:	push   eax
  425c6c:	mov    eax,DWORD PTR [ebp+0x20]
  425c6f:	mov    eax,DWORD PTR [eax+0x198]
  425c75:	mov    DWORD PTR [ebp-0x70],0x4
  425c7c:	push   DWORD PTR [eax]
  425c7e:	mov    eax,DWORD PTR [ebp+0x10]
  425c81:	call   eax
  425c83:	test   eax,eax
  425c85:	je     0x425caa
  425c87:	and    DWORD PTR [ebp+0xc],0x0
  425c8b:	cmp    DWORD PTR [ebx+0x50],0x0
  425c8f:	jbe    0x425caa
  425c91:	mov    eax,DWORD PTR [ebp+0x1c]
  425c94:	mov    ecx,DWORD PTR [ebp-0x10]
  425c97:	sub    ecx,eax
  425c99:	mov    dl,BYTE PTR [ecx+eax*1]
  425c9c:	inc    DWORD PTR [ebp+0xc]
  425c9f:	mov    BYTE PTR [eax],dl
  425ca1:	mov    edx,DWORD PTR [ebp+0xc]
  425ca4:	inc    eax
  425ca5:	cmp    edx,DWORD PTR [ebx+0x50]
  425ca8:	jb     0x425c99
  425caa:	mov    edx,DWORD PTR [ebp+0x1c]
  425cad:	mov    ecx,DWORD PTR [edx+0x3c]
  425cb0:	add    ecx,edx
  425cb2:	mov    eax,DWORD PTR [ecx+0xa0]
  425cb8:	mov    ebx,DWORD PTR [ecx+0x28]
  425cbb:	add    eax,edx
  425cbd:	sub    edx,DWORD PTR [ebp-0x10]
  425cc0:	add    ebx,DWORD PTR [ebp+0x1c]
  425cc3:	mov    DWORD PTR [ebp+0xc],edx
  425cc6:	mov    DWORD PTR [ebp-0x2c],ecx
  425cc9:	mov    DWORD PTR [ebp-0x14],ebx
  425ccc:	mov    DWORD PTR [ebp-0x8],0x0
  425cd3:	jmp    0x425d4f
  425cd5:	add    edx,0xfffffff8
  425cd8:	shr    edx,1
  425cda:	mov    DWORD PTR [ebp-0x18],edx
  425cdd:	je     0x425d3b
  425cdf:	lea    edx,[eax+0x8]
  425ce2:	mov    DWORD PTR [ebp-0x4],edx
  425ce5:	mov    edx,DWORD PTR [ebp-0x18]
  425ce8:	mov    DWORD PTR [ebp-0x18],edx
  425ceb:	mov    edx,DWORD PTR [ebp-0x4]
  425cee:	movzx  edx,WORD PTR [edx]
  425cf1:	mov    DWORD PTR [ebp-0x24],edx
  425cf4:	and    edx,0xfff
  425cfa:	mov    DWORD PTR [ebp-0x28],edx
  425cfd:	mov    edx,DWORD PTR [ebp-0x24]
  425d00:	shr    edx,0xc
  425d03:	add    edx,0xffcd8d0d
  425d09:	xor    edx,esi
  425d0b:	cmp    edx,0xf89c85bc
  425d11:	jne    0x425d32
  425d13:	mov    edx,DWORD PTR [ebp-0x28]
  425d16:	add    edx,DWORD PTR [ebp+0x1c]
  425d19:	mov    ebx,DWORD PTR [eax]
  425d1b:	cmp    DWORD PTR [ebx+edx*1],0x0
  425d1f:	je     0x425d2f
  425d21:	mov    ecx,DWORD PTR [ebp+0xc]
  425d24:	add    ecx,DWORD PTR [ebx+edx*1]
  425d27:	mov    ebx,DWORD PTR [eax]
  425d29:	mov    DWORD PTR [edx+ebx*1],ecx
  425d2c:	mov    ecx,DWORD PTR [ebp-0x2c]
  425d2f:	mov    ebx,DWORD PTR [ebp-0x14]
  425d32:	add    DWORD PTR [ebp-0x4],0x2
  425d36:	dec    DWORD PTR [ebp-0x18]
  425d39:	jne    0x425ceb
  425d3b:	mov    edx,DWORD PTR [ebp-0xc]
  425d3e:	add    DWORD PTR [ebp-0x8],edx
  425d41:	mov    edx,DWORD PTR [ebp-0x8]
  425d44:	cmp    edx,DWORD PTR [ecx+0xa4]
  425d4a:	jae    0x425d5d
  425d4c:	add    eax,DWORD PTR [ebp-0xc]
  425d4f:	mov    edx,DWORD PTR [eax+0x4]
  425d52:	mov    DWORD PTR [ebp-0xc],edx
  425d55:	test   edx,edx
  425d57:	jne    0x425cd5
  425d5d:	mov    eax,DWORD PTR [ebp-0x10]
  425d60:	mov    DWORD PTR [ebp-0x6c],eax
  425d63:	mov    DWORD PTR [ebp-0x70],0x4
  425d6a:	mov    eax,DWORD PTR [ecx+0x50]
  425d6d:	mov    DWORD PTR [ebp-0x68],eax
  425d70:	mov    eax,DWORD PTR [ebp-0x1c]
  425d73:	xor    eax,esi
  425d75:	add    eax,edi
  425d77:	mov    DWORD PTR [ebp-0x64],eax
  425d7a:	lea    eax,[ebp-0x20]
  425d7d:	mov    DWORD PTR [ebp-0x60],eax
  425d80:	lea    eax,[ebp-0x70]
  425d83:	push   eax
  425d84:	mov    eax,DWORD PTR [ebp+0x8]
  425d87:	xor    eax,esi
  425d89:	add    eax,edi
  425d8b:	push   eax
  425d8c:	mov    eax,DWORD PTR [ebp+0x20]
  425d8f:	add    eax,0xee
  425d94:	push   eax
  425d95:	mov    eax,DWORD PTR [ebp+0x20]
  425d98:	mov    eax,DWORD PTR [eax+0x198]
  425d9e:	push   DWORD PTR [eax]
  425da0:	mov    eax,DWORD PTR [ebp+0x10]
  425da3:	call   eax
  425da5:	mov    eax,DWORD PTR [ebp+0x20]
  425da8:	mov    eax,DWORD PTR [eax+0x180]
  425dae:	add    eax,DWORD PTR [ebp+0xc]
  425db1:	mov    ecx,DWORD PTR [ebp+0xc]
  425db4:	push   DWORD PTR [ebp+0x18]
  425db7:	mov    DWORD PTR [eax],ecx
  425db9:	push   DWORD PTR [ebp+0x14]
  425dbc:	push   DWORD PTR [ebp+0x1c]
  425dbf:	call   ebx
  425dc1:	mov    ecx,DWORD PTR [ebp+0xc]
  425dc4:	add    ecx,DWORD PTR [ebp+0x20]
  425dc7:	lea    eax,[ebp+0x4]
  425dca:	mov    DWORD PTR [ebp+0x20],ecx
  425dcd:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd0:	mov    ecx,DWORD PTR [ebp+0x20]
  425dd3:	mov    edx,DWORD PTR [ecx+0x190]
  425dd9:	mov    ecx,DWORD PTR [ebp+0x20]
  425ddc:	mov    ecx,DWORD PTR [ecx+0x18c]
  425de2:	mov    esi,DWORD PTR [ecx]
  425de4:	cmp    DWORD PTR [eax],esi
  425de6:	jb     0x425e07
  425de8:	mov    esi,DWORD PTR [edx]
  425dea:	mov    edi,DWORD PTR [edx]
  425dec:	mov    esi,DWORD PTR [esi+0x3c]
  425def:	lea    esi,[edi+esi*1+0x50]
  425df3:	mov    edi,DWORD PTR [ecx]
  425df5:	add    edi,DWORD PTR [esi]
  425df7:	cmp    DWORD PTR [eax],edi
  425df9:	jae    0x425e07
  425dfb:	mov    esi,DWORD PTR [ecx]
  425dfd:	mov    ecx,DWORD PTR [eax]
  425dff:	mov    edx,DWORD PTR [edx]
  425e01:	sub    ecx,esi
  425e03:	add    edx,ecx
  425e05:	mov    DWORD PTR [eax],edx
  425e07:	mov    eax,DWORD PTR [ebp+0xc]
  425e0a:	jmp    0x425e0e
  425e0c:	xor    eax,eax
  425e0e:	pop    edi
  425e0f:	pop    esi
  425e10:	pop    ebx
  425e11:	leave  
  425e12:	ret    0x1c
  425e15:	push   ebp
  425e16:	mov    ebp,esp
  425e18:	sub    esp,0x1c
  425e1b:	push   esi
  425e1c:	mov    esi,eax
  425e1e:	mov    eax,DWORD PTR [ecx+0x190]
  425e24:	cmp    DWORD PTR [eax],0x0
  425e27:	je     0x425f37
  425e2d:	test   edx,edx
  425e2f:	je     0x425f37
  425e35:	test   esi,esi
  425e37:	je     0x425f37
  425e3d:	mov    eax,DWORD PTR [esi+0x88]
  425e43:	test   eax,eax
  425e45:	je     0x425f32
  425e4b:	cmp    DWORD PTR [esi+0x8c],0x10
  425e52:	je     0x425f32
  425e58:	cmp    DWORD PTR [esi+0x34],edx
  425e5b:	je     0x425f32
  425e61:	mov    esi,DWORD PTR [ecx+0x18c]
  425e67:	and    DWORD PTR [ebp-0x10],0x0
  425e6b:	mov    ecx,edx
  425e6d:	sub    ecx,DWORD PTR [esi]
  425e6f:	add    eax,edx
  425e71:	movzx  edx,WORD PTR [eax+0xc]
  425e75:	mov    DWORD PTR [ebp-0x1c],ecx
  425e78:	movzx  ecx,WORD PTR [eax+0xe]
  425e7c:	add    ecx,edx
  425e7e:	je     0x425f32
  425e84:	lea    ecx,[eax+0x14]
  425e87:	push   ebx
  425e88:	mov    DWORD PTR [ebp-0x18],ecx
  425e8b:	mov    esi,0x7fffffff
  425e90:	push   edi
  425e91:	test   DWORD PTR [ecx],esi
  425e93:	je     0x425f14
  425e95:	mov    edx,DWORD PTR [ecx]
  425e97:	and    DWORD PTR [ebp-0xc],0x0
  425e9b:	and    edx,esi
  425e9d:	add    edx,eax
  425e9f:	movzx  edi,WORD PTR [edx+0xe]
  425ea3:	movzx  ebx,WORD PTR [edx+0xc]
  425ea7:	add    edi,ebx
  425ea9:	je     0x425f14
  425eab:	lea    ecx,[edx+0x14]
  425eae:	mov    DWORD PTR [ebp-0x14],ecx
  425eb1:	test   DWORD PTR [ecx],esi
  425eb3:	je     0x425ef6
  425eb5:	mov    ecx,DWORD PTR [ecx]
  425eb7:	and    DWORD PTR [ebp-0x8],0x0
  425ebb:	and    ecx,esi
  425ebd:	add    ecx,eax
  425ebf:	movzx  edi,WORD PTR [ecx+0xe]
  425ec3:	movzx  ebx,WORD PTR [ecx+0xc]
  425ec7:	add    edi,ebx
  425ec9:	je     0x425ef6
  425ecb:	lea    edi,[ecx+0x14]
  425ece:	mov    DWORD PTR [ebp-0x4],edi
  425ed1:	mov    edi,DWORD PTR [ebp-0x4]
  425ed4:	mov    edi,DWORD PTR [edi]
  425ed6:	test   edi,edi
  425ed8:	je     0x425ee0
  425eda:	mov    ebx,DWORD PTR [ebp-0x1c]
  425edd:	add    DWORD PTR [edi+eax*1],ebx
  425ee0:	movzx  edi,WORD PTR [ecx+0xe]
  425ee4:	movzx  ebx,WORD PTR [ecx+0xc]
  425ee8:	inc    DWORD PTR [ebp-0x8]
  425eeb:	add    DWORD PTR [ebp-0x4],0x8
  425eef:	add    edi,ebx
  425ef1:	cmp    DWORD PTR [ebp-0x8],edi
  425ef4:	jb     0x425ed1
  425ef6:	movzx  edi,WORD PTR [edx+0xe]
  425efa:	movzx  ebx,WORD PTR [edx+0xc]
  425efe:	mov    ecx,DWORD PTR [ebp-0x14]
  425f01:	inc    DWORD PTR [ebp-0xc]
  425f04:	add    ecx,0x8
  425f07:	add    edi,ebx
  425f09:	mov    DWORD PTR [ebp-0x14],ecx
  425f0c:	cmp    DWORD PTR [ebp-0xc],edi
  425f0f:	jb     0x425eb1
  425f11:	mov    ecx,DWORD PTR [ebp-0x18]
  425f14:	movzx  edx,WORD PTR [eax+0xe]
  425f18:	movzx  edi,WORD PTR [eax+0xc]
  425f1c:	inc    DWORD PTR [ebp-0x10]
  425f1f:	add    ecx,0x8
  425f22:	add    edx,edi
  425f24:	mov    DWORD PTR [ebp-0x18],ecx
  425f27:	cmp    DWORD PTR [ebp-0x10],edx
  425f2a:	jb     0x425e91
  425f30:	pop    edi
  425f31:	pop    ebx
  425f32:	xor    eax,eax
  425f34:	inc    eax
  425f35:	jmp    0x425f39
  425f37:	xor    eax,eax
  425f39:	pop    esi
  425f3a:	leave  
  425f3b:	ret    
  425f3c:	push   ebp
  425f3d:	mov    ebp,esp
  425f3f:	mov    ecx,DWORD PTR [ecx+0x190]
  425f45:	mov    eax,DWORD PTR [ebp+0xc]
  425f48:	sub    esp,0x10
  425f4b:	push   ebx
  425f4c:	xor    ebx,ebx
  425f4e:	push   esi
  425f4f:	push   edi
  425f50:	cmp    DWORD PTR [ecx],ebx
  425f52:	je     0x425fda
  425f58:	cmp    eax,ebx
  425f5a:	je     0x425fda
  425f5c:	cmp    DWORD PTR [eax+0x78],ebx
  425f5f:	jne    0x425f66
  425f61:	xor    eax,eax
  425f63:	inc    eax
  425f64:	jmp    0x425fdc
  425f66:	mov    eax,DWORD PTR [eax+0x78]
  425f69:	add    eax,DWORD PTR [ebp+0x8]
  425f6c:	mov    ecx,DWORD PTR [eax+0x1c]
  425f6f:	mov    edx,DWORD PTR [eax+0x24]
  425f72:	mov    esi,DWORD PTR [eax+0x14]
  425f75:	mov    edi,DWORD PTR [eax+0x18]
  425f78:	add    ecx,DWORD PTR [ebp+0x8]
  425f7b:	add    edx,DWORD PTR [ebp+0x8]
  425f7e:	mov    DWORD PTR [ebp-0x4],esi
  425f81:	cmp    esi,edi
  425f83:	ja     0x425f88
  425f85:	mov    DWORD PTR [ebp-0x4],edi
  425f88:	mov    DWORD PTR [ebp-0x8],ebx
  425f8b:	cmp    DWORD PTR [ebp-0x4],ebx
  425f8e:	jbe    0x425f61
  425f90:	cmp    ebx,DWORD PTR [eax+0x14]
  425f93:	jae    0x425f9b
  425f95:	movzx  esi,WORD PTR [edx+ebx*2]
  425f99:	jmp    0x425f9d
  425f9b:	mov    esi,ebx
  425f9d:	lea    esi,[ecx+esi*4]
  425fa0:	mov    edi,DWORD PTR [esi]
  425fa2:	test   edi,edi
  425fa4:	je     0x425fcf
  425fa6:	add    edi,DWORD PTR [ebp+0x8]
  425fa9:	mov    DWORD PTR [ebp-0x10],edi
  425fac:	cmp    edi,eax
  425fae:	jbe    0x425fc0
  425fb0:	mov    ebx,DWORD PTR [ebp+0xc]
  425fb3:	mov    ebx,DWORD PTR [ebx+0x7c]
  425fb6:	add    ebx,eax
  425fb8:	cmp    edi,ebx
  425fba:	jae    0x425fc0
  425fbc:	mov    esi,DWORD PTR [esi]
  425fbe:	jmp    0x425fc8
  425fc0:	sub    edi,DWORD PTR [ebp+0x8]
  425fc3:	mov    DWORD PTR [esi],edi
  425fc5:	mov    esi,DWORD PTR [ebp-0x10]
  425fc8:	test   esi,esi
  425fca:	je     0x425fda
  425fcc:	mov    ebx,DWORD PTR [ebp-0x8]
  425fcf:	inc    ebx
  425fd0:	mov    DWORD PTR [ebp-0x8],ebx
  425fd3:	cmp    ebx,DWORD PTR [ebp-0x4]
  425fd6:	jb     0x425f90
  425fd8:	jmp    0x425f61
  425fda:	xor    eax,eax
  425fdc:	pop    edi
  425fdd:	pop    esi
  425fde:	pop    ebx
  425fdf:	leave  
  425fe0:	ret    0x8
  425fe3:	push   ebp
  425fe4:	mov    ebp,esp
  425fe6:	sub    esp,0x2c
  425fe9:	mov    edx,0xf89c85a1
  425fee:	mov    DWORD PTR [ebp-0x4],edx
  425ff1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x4]
  425ffe:	mov    ecx,DWORD PTR [ebp-0x4]
  426001:	mov    ecx,DWORD PTR [ebp-0x4]
  426004:	mov    ecx,DWORD PTR [ebp-0x4]
  426007:	mov    ecx,DWORD PTR [ebp-0x4]
  42600a:	push   ebx
  42600b:	mov    ebx,DWORD PTR [ebp+0x10]
  42600e:	push   esi
  42600f:	mov    esi,0x75108ac
  426014:	mov    DWORD PTR [ebp-0x10],0x352eb2f
  42601b:	mov    ecx,DWORD PTR [ebp-0x4]
  42601e:	mov    ebx,DWORD PTR [ebx+0x190]
  426024:	push   edi
  426025:	mov    edi,0x3272f3
  42602a:	xor    ecx,esi
  42602c:	xor    eax,esi
  42602e:	add    eax,edi
  426030:	add    ecx,edi
  426032:	mov    DWORD PTR [ebp-0x18],eax
  426035:	cmp    ecx,DWORD PTR [ebx]
  426037:	je     0x4262b8
  42603d:	mov    ebx,DWORD PTR [ebp-0x4]
  426040:	mov    ecx,DWORD PTR [ebp+0xc]
  426043:	xor    ebx,esi
  426045:	add    ebx,edi
  426047:	cmp    ebx,ecx
  426049:	je     0x4262b8
  42604f:	mov    ebx,DWORD PTR [ebp-0x4]
  426052:	mov    ecx,DWORD PTR [ecx+0x80]
  426058:	xor    ebx,esi
  42605a:	add    ebx,edi
  42605c:	cmp    ecx,ebx
  42605e:	je     0x4262b3
  426064:	add    ecx,DWORD PTR [ebp+0x8]
  426067:	mov    DWORD PTR [ebp-0x2c],ecx
  42606a:	mov    ebx,edx
  42606c:	xor    ebx,esi
  42606e:	add    ebx,edi
  426070:	mov    DWORD PTR [ebp-0x10],ebx
  426073:	mov    ebx,DWORD PTR [ebp-0x10]
  426076:	cmp    ebx,edx
  426078:	je     0x42608c
  42607a:	mov    edx,DWORD PTR [ebp-0x10]
  42607d:	mov    ebx,DWORD PTR [ebp-0x4]
  426080:	imul   edx,edx,0x14
  426083:	xor    ebx,esi
  426085:	add    ebx,edi
  426087:	cmp    DWORD PTR [edx+ecx*1],ebx
  42608a:	jne    0x4260a3
  42608c:	mov    edx,DWORD PTR [ebp-0x10]
  42608f:	mov    ebx,DWORD PTR [ebp-0x4]
  426092:	imul   edx,edx,0x14
  426095:	xor    ebx,esi
  426097:	add    ebx,edi
  426099:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  42609d:	je     0x4262a5
  4260a3:	mov    eax,DWORD PTR [ebp-0x4]
  4260a6:	mov    ebx,DWORD PTR [ebp-0x4]
  4260a9:	mov    eax,DWORD PTR [ebp-0x10]
  4260ac:	imul   eax,eax,0x14
  4260af:	add    eax,ecx
  4260b1:	mov    ecx,DWORD PTR [eax+0x10]
  4260b4:	add    ecx,DWORD PTR [ebp+0x8]
  4260b7:	xor    ebx,esi
  4260b9:	mov    DWORD PTR [ebp-0x1c],ecx
  4260bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4260bf:	mov    edx,DWORD PTR [ebp-0x4]
  4260c2:	xor    ecx,esi
  4260c4:	add    ecx,edi
  4260c6:	xor    edx,esi
  4260c8:	mov    DWORD PTR [ebp-0x24],ecx
  4260cb:	mov    ecx,DWORD PTR [eax]
  4260cd:	add    edx,edi
  4260cf:	add    ebx,edi
  4260d1:	cmp    ecx,edx
  4260d3:	je     0x4260db
  4260d5:	add    ecx,DWORD PTR [ebp+0x8]
  4260d8:	mov    DWORD PTR [ebp-0x24],ecx
  4260db:	mov    ecx,DWORD PTR [ebp-0x4]
  4260de:	xor    ecx,esi
  4260e0:	add    ecx,DWORD PTR [eax+0xc]
  4260e3:	mov    eax,DWORD PTR [ebp+0x8]
  4260e6:	lea    eax,[ecx+eax*1+0x3272f3]
  4260ed:	mov    DWORD PTR [ebp+0xc],eax
  4260f0:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4260f7:	mov    eax,DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	mov    eax,DWORD PTR [eax+0x1e0]
  426103:	call   DWORD PTR [eax]
  426105:	mov    ecx,DWORD PTR [ebp-0x4]
  426108:	xor    ecx,esi
  42610a:	add    ecx,edi
  42610c:	mov    DWORD PTR [ebp-0xc],eax
  42610f:	cmp    ecx,eax
  426111:	jne    0x426125
  426113:	mov    eax,DWORD PTR [ebp+0x10]
  426116:	push   DWORD PTR [ebp+0xc]
  426119:	mov    eax,DWORD PTR [eax+0x1e0]
  42611f:	call   DWORD PTR [eax+0xc]
  426122:	mov    DWORD PTR [ebp-0xc],eax
  426125:	mov    DWORD PTR [ebp-0x20],0x7f661b2a
  42612c:	mov    DWORD PTR [ebp-0x20],0xf89c985a
  426133:	mov    eax,DWORD PTR [ebp-0x4]
  426136:	xor    eax,esi
  426138:	add    eax,edi
  42613a:	cmp    eax,DWORD PTR [ebp-0xc]
  42613d:	jne    0x426162
  42613f:	mov    eax,DWORD PTR [ebp-0x8]
  426142:	mov    ecx,DWORD PTR [ebp-0x20]
  426145:	xor    eax,esi
  426147:	xor    ecx,esi
  426149:	lea    ebx,[ebx+eax*1+0x3272f3]
  426150:	mov    eax,DWORD PTR [ebp+0x10]
  426153:	mov    eax,DWORD PTR [eax+0x1e0]
  426159:	add    ecx,edi
  42615b:	imul   ecx,ebx
  42615e:	push   ecx
  42615f:	call   DWORD PTR [eax+0x24]
  426162:	mov    eax,DWORD PTR [ebp-0x4]
  426165:	xor    eax,esi
  426167:	add    eax,edi
  426169:	cmp    eax,DWORD PTR [ebp-0xc]
  42616c:	jne    0x42617d
  42616e:	mov    eax,DWORD PTR [ebp-0x28]
  426171:	xor    eax,esi
  426173:	add    eax,edi
  426175:	cmp    ebx,eax
  426177:	jbe    0x4260f7
  42617d:	mov    eax,DWORD PTR [ebp-0x4]
  426180:	xor    eax,esi
  426182:	add    eax,edi
  426184:	cmp    eax,DWORD PTR [ebp-0xc]
  426187:	jne    0x4261a0
  426189:	mov    eax,DWORD PTR [ebp-0x8]
  42618c:	mov    ecx,DWORD PTR [ebp-0x18]
  42618f:	xor    eax,esi
  426191:	lea    eax,[ecx+eax*1+0x3272f3]
  426198:	mov    DWORD PTR [ebp-0x18],eax
  42619b:	jmp    0x42628f
  4261a0:	mov    DWORD PTR [ebp-0x14],0x1121b29
  4261a7:	mov    DWORD PTR [ebp+0xc],0xe042d2f
  4261ae:	mov    ebx,DWORD PTR [ebp-0x4]
  4261b1:	xor    ebx,esi
  4261b3:	add    ebx,edi
  4261b5:	jmp    0x42627c
  4261ba:	mov    eax,DWORD PTR [ebp-0x4]
  4261bd:	xor    eax,esi
  4261bf:	add    eax,edi
  4261c1:	mov    DWORD PTR [ebp-0x14],eax
  4261c4:	mov    eax,DWORD PTR [ebp-0x4]
  4261c7:	xor    eax,esi
  4261c9:	add    eax,edi
  4261cb:	mov    DWORD PTR [ebp+0xc],eax
  4261ce:	mov    ecx,DWORD PTR [ebp-0x4]
  4261d1:	mov    eax,DWORD PTR [ebp-0x24]
  4261d4:	xor    ecx,esi
  4261d6:	add    ecx,edi
  4261d8:	cmp    ecx,eax
  4261da:	je     0x4261e2
  4261dc:	mov    eax,DWORD PTR [eax+ebx*4]
  4261df:	mov    DWORD PTR [ebp-0x14],eax
  4261e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e5:	mov    eax,DWORD PTR [eax+ebx*4]
  4261e8:	mov    DWORD PTR [ebp+0xc],eax
  4261eb:	mov    eax,DWORD PTR [ebp-0x4]
  4261ee:	mov    ecx,DWORD PTR [ebp-0x14]
  4261f1:	xor    eax,esi
  4261f3:	add    eax,edi
  4261f5:	cmp    eax,ecx
  4261f7:	je     0x426222
  4261f9:	mov    eax,DWORD PTR [ebp-0x4]
  4261fc:	mov    ecx,DWORD PTR [ebp-0x14]
  4261ff:	xor    eax,esi
  426201:	add    eax,edi
  426203:	shr    ecx,0x1f
  426206:	cmp    eax,ecx
  426208:	je     0x426222
  42620a:	mov    ecx,DWORD PTR [ebp-0x14]
  42620d:	mov    eax,DWORD PTR [ebp+0x10]
  426210:	mov    eax,DWORD PTR [eax+0x1e0]
  426216:	movzx  ecx,cx
  426219:	push   ecx
  42621a:	push   DWORD PTR [ebp-0xc]
  42621d:	call   DWORD PTR [eax+0x8]
  426220:	jmp    0x42623b
  426222:	mov    eax,DWORD PTR [ebp+0xc]
  426225:	add    eax,DWORD PTR [ebp+0x8]
  426228:	mov    ecx,DWORD PTR [ebp+0x10]
  42622b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  426231:	add    eax,0x2
  426234:	push   eax
  426235:	push   DWORD PTR [ebp-0xc]
  426238:	call   DWORD PTR [ecx+0x8]
  42623b:	mov    DWORD PTR [ebp+0xc],eax
  42623e:	mov    eax,DWORD PTR [ebp-0x4]
  426241:	mov    ecx,DWORD PTR [ebp+0xc]
  426244:	xor    eax,esi
  426246:	add    eax,edi
  426248:	cmp    eax,ecx
  42624a:	mov    eax,DWORD PTR [ebp-0x8]
  42624d:	jne    0x426260
  42624f:	mov    ecx,DWORD PTR [ebp-0x18]
  426252:	xor    eax,esi
  426254:	lea    eax,[ecx+eax*1+0x3272f3]
  42625b:	mov    DWORD PTR [ebp-0x18],eax
  42625e:	jmp    0x426270
  426260:	mov    ecx,DWORD PTR [ebp+0xc]
  426263:	xor    eax,esi
  426265:	add    eax,edi
  426267:	imul   eax,ecx
  42626a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42626d:	mov    DWORD PTR [ecx+ebx*4],eax
  426270:	mov    eax,DWORD PTR [ebp-0x8]
  426273:	xor    eax,esi
  426275:	lea    ebx,[ebx+eax*1+0x3272f3]
  42627c:	mov    eax,DWORD PTR [ebp-0x4]
  42627f:	mov    ecx,DWORD PTR [ebp-0x1c]
  426282:	xor    eax,esi
  426284:	add    eax,edi
  426286:	cmp    DWORD PTR [ecx+ebx*4],eax
  426289:	jne    0x4261ba
  42628f:	mov    edx,DWORD PTR [ebp-0x10]
  426292:	mov    eax,DWORD PTR [ebp-0x18]
  426295:	mov    ecx,DWORD PTR [ebp-0x2c]
  426298:	sub    edx,0x3272f2
  42629e:	xor    edx,esi
  4262a0:	jmp    0x42606a
  4262a5:	mov    ecx,DWORD PTR [ebp-0x4]
  4262a8:	xor    ecx,esi
  4262aa:	add    ecx,edi
  4262ac:	cmp    eax,ecx
  4262ae:	mov    eax,DWORD PTR [ebp-0x4]
  4262b1:	jne    0x4262bb
  4262b3:	mov    eax,DWORD PTR [ebp-0x8]
  4262b6:	jmp    0x4262bb
  4262b8:	mov    eax,DWORD PTR [ebp-0x4]
  4262bb:	xor    eax,esi
  4262bd:	add    eax,edi
  4262bf:	pop    edi
  4262c0:	pop    esi
  4262c1:	pop    ebx
  4262c2:	leave  
  4262c3:	ret    0xc
  4262c6:	push   ebp
  4262c7:	mov    ebp,esp
  4262c9:	sub    esp,0x28
  4262cc:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  4262d3:	mov    DWORD PTR [ebp-0x28],0xf89c85a2
  4262da:	mov    eax,DWORD PTR [ebp+0xc]
  4262dd:	mov    DWORD PTR [ebp+0xc],eax
  4262e0:	push   esi
  4262e1:	mov    eax,eax
  4262e3:	mov    eax,DWORD PTR [ebp-0x4]
  4262e6:	mov    esi,DWORD PTR [ebp+0x8]
  4262e9:	mov    ecx,0x75108ac
  4262ee:	xor    eax,ecx
  4262f0:	mov    edx,0x3272f3
  4262f5:	add    eax,edx
  4262f7:	cmp    esi,eax
  4262f9:	je     0x426420
  4262ff:	mov    eax,DWORD PTR [ebp+0x8]
  426302:	mov    esi,DWORD PTR [ebp+0x8]
  426305:	add    esi,DWORD PTR [eax+0x3c]
  426308:	push   edi
  426309:	mov    DWORD PTR [ebp+0xc],esi
  42630c:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  426313:	mov    eax,DWORD PTR [ebp-0x1c]
  426316:	mov    esi,DWORD PTR [ebp-0x4]
  426319:	mov    edi,DWORD PTR [ebp+0xc]
  42631c:	xor    esi,ecx
  42631e:	xor    eax,ecx
  426320:	add    esi,edx
  426322:	cmp    DWORD PTR [edi+eax*8+0x1939810],esi
  426329:	je     0x42641a
  42632f:	mov    esi,DWORD PTR [ebp+0xc]
  426332:	mov    eax,DWORD PTR [ebp+0x8]
  426335:	add    eax,DWORD PTR [esi+0xa0]
  42633b:	mov    esi,DWORD PTR [ebp+0x8]
  42633e:	mov    edi,DWORD PTR [ebp+0xc]
  426341:	sub    esi,DWORD PTR [edi+0x34]
  426344:	mov    edi,DWORD PTR [ebp-0x4]
  426347:	xor    edi,ecx
  426349:	add    edi,edx
  42634b:	mov    DWORD PTR [ebp-0x24],esi
  42634e:	cmp    esi,edi
  426350:	je     0x42641a
  426356:	mov    esi,DWORD PTR [ebp-0x4]
  426359:	xor    esi,ecx
  42635b:	add    esi,edx
  42635d:	mov    DWORD PTR [ebp-0x8],esi
  426360:	push   ebx
  426361:	mov    DWORD PTR [ebp-0x10],0xf89c85bc
  426368:	jmp    0x426404
  42636d:	mov    esi,DWORD PTR [ebp-0x4]
  426370:	xor    esi,ecx
  426372:	lea    edi,[ebx-0x8]
  426375:	add    esi,edx
  426377:	shr    edi,1
  426379:	cmp    esi,edi
  42637b:	jae    0x4263ea
  42637d:	sub    edi,esi
  42637f:	lea    ebx,[eax+esi*2+0x8]
  426383:	mov    DWORD PTR [ebp-0x18],edi
  426386:	movzx  esi,WORD PTR [ebx]
  426389:	and    esi,0xfff
  42638f:	mov    DWORD PTR [ebp-0x14],esi
  426392:	mov    edi,DWORD PTR [ebp-0x14]
  426395:	mov    esi,DWORD PTR [eax]
  426397:	sub    esi,edx
  426399:	add    edi,esi
  42639b:	movzx  esi,WORD PTR [ebx]
  42639e:	shr    esi,0xc
  4263a1:	xor    edi,ecx
  4263a3:	mov    DWORD PTR [ebp-0x20],edi
  4263a6:	mov    DWORD PTR [ebp-0x14],esi
  4263a9:	mov    esi,DWORD PTR [ebp-0x20]
  4263ac:	mov    edi,DWORD PTR [ebp+0x8]
  4263af:	xor    esi,ecx
  4263b1:	lea    esi,[esi+edi*1+0x3272f3]
  4263b8:	mov    DWORD PTR [ebp-0x20],esi
  4263bb:	mov    esi,DWORD PTR [ebp-0x10]
  4263be:	mov    edi,DWORD PTR [ebp-0x14]
  4263c1:	xor    esi,ecx
  4263c3:	add    esi,edx
  4263c5:	cmp    edi,esi
  4263c7:	jne    0x4263df
  4263c9:	mov    esi,DWORD PTR [ebp-0x10]
  4263cc:	mov    edi,DWORD PTR [ebp-0x14]
  4263cf:	xor    esi,ecx
  4263d1:	add    esi,edx
  4263d3:	cmp    edi,esi
  4263d5:	jne    0x4263df
  4263d7:	mov    esi,DWORD PTR [ebp-0x20]
  4263da:	mov    edi,DWORD PTR [ebp-0x24]
  4263dd:	add    DWORD PTR [esi],edi
  4263df:	add    ebx,0x2
  4263e2:	dec    DWORD PTR [ebp-0x18]
  4263e5:	jne    0x426386
  4263e7:	mov    ebx,DWORD PTR [ebp-0xc]
  4263ea:	add    DWORD PTR [ebp-0x8],ebx
  4263ed:	mov    esi,DWORD PTR [ebp-0x1c]
  4263f0:	mov    edi,DWORD PTR [ebp-0x8]
  4263f3:	mov    ebx,DWORD PTR [ebp+0xc]
  4263f6:	xor    esi,ecx
  4263f8:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939814]
  4263ff:	jae    0x426419
  426401:	add    eax,DWORD PTR [ebp-0xc]
  426404:	mov    esi,DWORD PTR [ebp-0x4]
  426407:	mov    ebx,DWORD PTR [eax+0x4]
  42640a:	xor    esi,ecx
  42640c:	add    esi,edx
  42640e:	mov    DWORD PTR [ebp-0xc],ebx
  426411:	cmp    ebx,esi
  426413:	jne    0x42636d
  426419:	pop    ebx
  42641a:	mov    eax,DWORD PTR [ebp-0x28]
  42641d:	pop    edi
  42641e:	jmp    0x426423
  426420:	mov    eax,DWORD PTR [ebp-0x4]
  426423:	xor    eax,ecx
  426425:	add    eax,edx
  426427:	pop    esi
  426428:	leave  
  426429:	ret    0x8
  42642c:	push   ebp
  42642d:	mov    ebp,esp
  42642f:	sub    esp,0xd8
  426435:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  42643c:	mov    DWORD PTR [ebp-0x24],0xf89c85a2
  426443:	mov    eax,DWORD PTR [ebp-0x4]
  426446:	push   ebx
  426447:	push   esi
  426448:	mov    esi,0x75108ac
  42644d:	xor    eax,esi
  42644f:	push   edi
  426450:	mov    edi,0x3272f3
  426455:	add    eax,edi
  426457:	mov    DWORD PTR [ebp-0x18],eax
  42645a:	mov    eax,DWORD PTR [ebp-0x4]
  42645d:	xor    eax,esi
  42645f:	add    eax,edi
  426461:	mov    DWORD PTR [ebp-0x8],eax
  426464:	mov    ebx,DWORD PTR [ebp+0x20]
  426467:	mov    eax,DWORD PTR [ebp-0x1c]
  42646a:	mov    ecx,DWORD PTR [ebp-0x1c]
  42646d:	xor    eax,ecx
  42646f:	mov    DWORD PTR [ebp-0x1c],eax
  426472:	add    DWORD PTR [ebp-0x1c],0xf89cb5a1
  426479:	mov    eax,DWORD PTR [ebp-0xc]
  42647c:	mov    ecx,DWORD PTR [ebp-0xc]
  42647f:	xor    eax,ecx
  426481:	mov    DWORD PTR [ebp-0xc],eax
  426484:	add    DWORD PTR [ebp-0xc],0xf89c85e1
  42648b:	mov    eax,DWORD PTR [ebp-0x10]
  42648e:	mov    ecx,DWORD PTR [ebp-0x10]
  426491:	xor    eax,ecx
  426493:	mov    DWORD PTR [ebp-0x10],eax
  426496:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  42649d:	mov    eax,DWORD PTR [ebp-0x28]
  4264a0:	mov    ecx,DWORD PTR [ebp-0x28]
  4264a3:	xor    eax,ecx
  4264a5:	mov    DWORD PTR [ebp-0x28],eax
  4264a8:	add    DWORD PTR [ebp-0x28],0xf89f05a1
  4264af:	mov    DWORD PTR [ebp+0x20],0xf89ceff6
  4264b6:	mov    eax,DWORD PTR [ebp+0x8]
  4264b9:	test   eax,eax
  4264bb:	je     0x426944
  4264c1:	mov    eax,DWORD PTR [ebp+0xc]
  4264c4:	test   eax,eax
  4264c6:	je     0x426944
  4264cc:	mov    eax,DWORD PTR [ebp+0x18]
  4264cf:	test   eax,eax
  4264d1:	je     0x426944
  4264d7:	mov    eax,DWORD PTR [ebp+0x20]
  4264da:	mov    ecx,DWORD PTR [ebp+0x8]
  4264dd:	xor    eax,0x8ac
  4264e2:	add    eax,0x72f3
  4264e7:	cmp    WORD PTR [ecx],ax
  4264ea:	jne    0x426944
  4264f0:	mov    eax,DWORD PTR [ebp-0x4]
  4264f3:	xor    eax,esi
  4264f5:	add    eax,edi
  4264f7:	mov    DWORD PTR [ebp-0x30],eax
  4264fa:	mov    eax,DWORD PTR [ebp-0x4]
  4264fd:	mov    ecx,DWORD PTR [ebp+0x8]
  426500:	mov    eax,DWORD PTR [ebp+0x8]
  426503:	add    eax,DWORD PTR [ecx+0x3c]
  426506:	mov    DWORD PTR [ebp+0xc],eax
  426509:	mov    eax,DWORD PTR [eax+0x50]
  42650c:	test   eax,eax
  42650e:	je     0x426944
  426514:	mov    DWORD PTR [ebp-0x2c],0xf88c85a1
  42651b:	mov    eax,DWORD PTR [ebp-0x2c]
  42651e:	xor    eax,esi
  426520:	add    eax,edi
  426522:	mov    DWORD PTR [ebp-0x2c],eax
  426525:	mov    eax,DWORD PTR [ebp-0x4]
  426528:	mov    eax,DWORD PTR [ebx+0x190]
  42652e:	mov    ecx,DWORD PTR [eax]
  426530:	mov    ecx,DWORD PTR [ecx+0x3c]
  426533:	add    ecx,DWORD PTR [eax]
  426535:	mov    eax,DWORD PTR [ebp-0x4]
  426538:	mov    eax,DWORD PTR [ebx+0x18c]
  42653e:	mov    edx,DWORD PTR [eax]
  426540:	mov    DWORD PTR [ebp-0x20],ecx
  426543:	mov    DWORD PTR [ebp+0x20],edx
  426546:	cmp    edx,edx
  426548:	jne    0x42657c
  42654a:	mov    eax,DWORD PTR [ebx+0x1e0]
  426550:	lea    edx,[ebp-0x18]
  426553:	push   edx
  426554:	mov    edx,DWORD PTR [ebp-0xc]
  426557:	xor    edx,esi
  426559:	add    edx,edi
  42655b:	push   edx
  42655c:	push   DWORD PTR [ecx+0x50]
  42655f:	push   DWORD PTR [ebp+0x20]
  426562:	call   DWORD PTR [eax+0x1c]
  426565:	mov    eax,DWORD PTR [ebp-0x20]
  426568:	mov    ecx,DWORD PTR [eax+0x54]
  42656b:	mov    eax,DWORD PTR [eax+0x50]
  42656e:	sub    eax,ecx
  426570:	add    ecx,DWORD PTR [ebp+0x20]
  426573:	push   ecx
  426574:	call   0x426ee1
  426579:	mov    edx,DWORD PTR [ebp+0x20]
  42657c:	mov    eax,DWORD PTR [ebx+0x194]
  426582:	mov    DWORD PTR [eax],edx
  426584:	mov    eax,DWORD PTR [ebp+0xc]
  426587:	push   DWORD PTR [eax+0x54]
  42658a:	push   DWORD PTR [ebp+0x8]
  42658d:	push   edx
  42658e:	call   0x426dd7
  426593:	mov    ecx,DWORD PTR [ebp+0x20]
  426596:	mov    eax,DWORD PTR [ecx+0x3c]
  426599:	add    eax,ecx
  42659b:	movzx  ecx,WORD PTR [eax+0x14]
  42659f:	lea    ecx,[ecx+eax*1+0x18]
  4265a3:	mov    DWORD PTR [ebp+0x18],ecx
  4265a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4265a9:	movzx  edx,WORD PTR [eax+0x6]
  4265ad:	xor    ecx,esi
  4265af:	add    ecx,edi
  4265b1:	mov    DWORD PTR [ebp+0xc],eax
  4265b4:	cmp    edx,ecx
  4265b6:	je     0x426663
  4265bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4265bf:	xor    ecx,esi
  4265c1:	add    ecx,edi
  4265c3:	mov    DWORD PTR [ebp-0x8],ecx
  4265c6:	mov    ecx,DWORD PTR [ebp-0x24]
  4265c9:	movzx  edx,WORD PTR [eax+0x6]
  4265cd:	xor    ecx,esi
  4265cf:	sub    edx,ecx
  4265d1:	sub    edx,edi
  4265d3:	cmp    DWORD PTR [ebp-0x8],edx
  4265d6:	ja     0x426663
  4265dc:	mov    edx,DWORD PTR [ebp+0x18]
  4265df:	add    edx,0x8
  4265e2:	mov    DWORD PTR [ebp+0x18],edx
  4265e5:	jmp    0x4265ea
  4265e7:	mov    edx,DWORD PTR [ebp+0x18]
  4265ea:	mov    eax,DWORD PTR [eax+0x38]
  4265ed:	lea    ecx,[eax-0x1]
  4265f0:	mov    DWORD PTR [ebp-0x38],eax
  4265f3:	mov    eax,DWORD PTR [edx]
  4265f5:	test   eax,ecx
  4265f7:	je     0x426600
  4265f9:	not    ecx
  4265fb:	and    eax,ecx
  4265fd:	add    eax,DWORD PTR [ebp-0x38]
  426600:	mov    ecx,DWORD PTR [edx+0x4]
  426603:	add    ecx,DWORD PTR [ebp+0x20]
  426606:	push   ecx
  426607:	call   0x426ee1
  42660c:	mov    edx,DWORD PTR [ebp-0x4]
  42660f:	mov    eax,DWORD PTR [ebp+0x18]
  426612:	mov    ecx,DWORD PTR [eax+0x8]
  426615:	xor    edx,esi
  426617:	add    edx,edi
  426619:	cmp    ecx,edx
  42661b:	je     0x426634
  42661d:	push   ecx
  42661e:	mov    ecx,DWORD PTR [ebp+0x8]
  426621:	add    ecx,DWORD PTR [eax+0xc]
  426624:	mov    eax,DWORD PTR [eax+0x4]
  426627:	add    eax,DWORD PTR [ebp+0x20]
  42662a:	push   ecx
  42662b:	push   eax
  42662c:	call   0x426dd7
  426631:	mov    eax,DWORD PTR [ebp+0x18]
  426634:	mov    ecx,DWORD PTR [ebp-0x24]
  426637:	mov    edx,DWORD PTR [ebp-0x8]
  42663a:	add    eax,0x28
  42663d:	xor    ecx,esi
  42663f:	lea    ecx,[edx+ecx*1+0x3272f3]
  426646:	mov    edx,DWORD PTR [ebp+0xc]
  426649:	mov    DWORD PTR [ebp+0x18],eax
  42664c:	mov    eax,DWORD PTR [ebp-0x24]
  42664f:	movzx  edx,WORD PTR [edx+0x6]
  426653:	xor    eax,esi
  426655:	sub    edx,eax
  426657:	mov    eax,DWORD PTR [ebp+0xc]
  42665a:	sub    edx,edi
  42665c:	mov    DWORD PTR [ebp-0x8],ecx
  42665f:	cmp    ecx,edx
  426661:	jbe    0x4265e7
  426663:	mov    edx,DWORD PTR [ebx+0x18c]
  426669:	mov    ecx,DWORD PTR [ebp+0x20]
  42666c:	cmp    ecx,DWORD PTR [edx]
  42666e:	jne    0x426697
  426670:	mov    eax,DWORD PTR [ebx+0x1e0]
  426676:	lea    edx,[ebp-0x18]
  426679:	push   edx
  42667a:	mov    edx,DWORD PTR [ebp-0x10]
  42667d:	xor    edx,esi
  42667f:	add    edx,edi
  426681:	push   edx
  426682:	mov    edx,DWORD PTR [ebp-0x20]
  426685:	push   DWORD PTR [edx+0x54]
  426688:	push   ecx
  426689:	call   DWORD PTR [eax+0x1c]
  42668c:	test   eax,eax
  42668e:	je     0x426935
  426694:	mov    eax,DWORD PTR [ebp+0xc]
  426697:	mov    ecx,DWORD PTR [ebx+0x1c8]
  42669d:	mov    ecx,DWORD PTR [ecx]
  42669f:	xor    ecx,esi
  4266a1:	add    ecx,edi
  4266a3:	je     0x426860
  4266a9:	mov    eax,DWORD PTR [ebp-0x4]
  4266ac:	xor    eax,esi
  4266ae:	add    eax,edi
  4266b0:	and    DWORD PTR [ebp+0x8],0x0
  4266b4:	mov    DWORD PTR [ebp-0x14],eax
  4266b7:	mov    eax,0xf89c85dd
  4266bc:	lea    ecx,[eax-0x8]
  4266bf:	mov    DWORD PTR [ebp-0x58],0xf89c85d7
  4266c6:	mov    DWORD PTR [ebp-0x54],0xf89c852d
  4266cd:	mov    DWORD PTR [ebp-0x50],eax
  4266d0:	mov    DWORD PTR [ebp-0x4c],ecx
  4266d3:	mov    DWORD PTR [ebp-0x48],ecx
  4266d6:	mov    DWORD PTR [ebp-0x44],0xf89c85a1
  4266dd:	mov    edx,DWORD PTR [ebp+0x8]
  4266e0:	mov    ecx,0x8ac
  4266e5:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  4266ea:	mov    edx,0x72f3
  4266ef:	add    cx,dx
  4266f2:	mov    edx,DWORD PTR [ebp+0x8]
  4266f5:	inc    DWORD PTR [ebp+0x8]
  4266f8:	cmp    DWORD PTR [ebp+0x8],0x6
  4266fc:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426704:	jb     0x4266dd
  426706:	mov    ecx,0xf89c85d3
  42670b:	mov    DWORD PTR [ebp-0xb0],eax
  426711:	mov    DWORD PTR [ebp-0x9c],eax
  426717:	mov    DWORD PTR [ebp-0x74],eax
  42671a:	mov    DWORD PTR [ebp-0x70],eax
  42671d:	mov    eax,0xf89c852c
  426722:	lea    edx,[ecx+0x2c]
  426725:	mov    DWORD PTR [ebp-0x64],eax
  426728:	mov    DWORD PTR [ebp-0x60],eax
  42672b:	mov    DWORD PTR [ebp-0xb4],0xf89c85f5
  426735:	mov    DWORD PTR [ebp-0xac],ecx
  42673b:	mov    DWORD PTR [ebp-0xa8],edx
  426741:	mov    DWORD PTR [ebp-0xa4],0xf89c85da
  42674b:	mov    DWORD PTR [ebp-0xa0],0xf89c85d7
  426755:	mov    DWORD PTR [ebp-0x98],0xf89c85fe
  42675f:	mov    DWORD PTR [ebp-0x94],0xf89c85d7
  426769:	mov    DWORD PTR [ebp-0x90],0xf89c852d
  426773:	mov    DWORD PTR [ebp-0x8c],ecx
  426779:	mov    DWORD PTR [ebp-0x88],0xf89c852a
  426783:	mov    DWORD PTR [ebp-0x84],edx
  426789:	mov    DWORD PTR [ebp-0x80],0xf89c85d0
  426790:	mov    DWORD PTR [ebp-0x7c],ecx
  426793:	mov    DWORD PTR [ebp-0x78],0xf89c85e2
  42679a:	mov    DWORD PTR [ebp-0x6c],ecx
  42679d:	mov    DWORD PTR [ebp-0x68],0xf89c85de
  4267a4:	mov    DWORD PTR [ebp-0x5c],0xf89c85a1
  4267ab:	xor    eax,eax
  4267ad:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  4267b4:	xor    cl,0xac
  4267b7:	sub    cl,0xd
  4267ba:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  4267c1:	inc    eax
  4267c2:	cmp    eax,0x17
  4267c5:	jb     0x4267ad
  4267c7:	mov    eax,DWORD PTR [ebx+0x1e0]
  4267cd:	lea    ecx,[ebp-0xc0]
  4267d3:	push   ecx
  4267d4:	call   DWORD PTR [eax+0x4]
  4267d7:	mov    ecx,DWORD PTR [ebx+0x1e0]
  4267dd:	lea    edx,[ebp-0xd8]
  4267e3:	push   edx
  4267e4:	push   eax
  4267e5:	call   DWORD PTR [ecx+0x8]
  4267e8:	mov    DWORD PTR [ebp-0x40],eax
  4267eb:	lea    eax,[ebp-0x14]
  4267ee:	push   eax
  4267ef:	mov    eax,DWORD PTR [ebx+0x18c]
  4267f5:	push   DWORD PTR [eax]
  4267f7:	mov    eax,DWORD PTR [ebp-0x40]
  4267fa:	call   eax
  4267fc:	mov    eax,DWORD PTR [ebp-0x4]
  4267ff:	xor    eax,esi
  426801:	add    eax,edi
  426803:	mov    DWORD PTR [ebp-0x34],eax
  426806:	mov    ecx,DWORD PTR [ebp-0x4]
  426809:	mov    eax,DWORD PTR [ebp-0x14]
  42680c:	xor    ecx,esi
  42680e:	add    ecx,edi
  426810:	cmp    eax,ecx
  426812:	je     0x42685d
  426814:	mov    DWORD PTR [ebp-0x3c],eax
  426817:	jmp    0x426828
  426819:	mov    eax,DWORD PTR [eax]
  42681b:	mov    ecx,DWORD PTR [ebp-0x3c]
  42681e:	mov    DWORD PTR [ebp-0x14],eax
  426821:	mov    eax,DWORD PTR [ebp-0x14]
  426824:	cmp    eax,ecx
  426826:	je     0x426835
  426828:	mov    edx,DWORD PTR [eax+0x18]
  42682b:	mov    ecx,DWORD PTR [ebx+0x18c]
  426831:	cmp    edx,DWORD PTR [ecx]
  426833:	jne    0x426819
  426835:	mov    ecx,DWORD PTR [ebx+0x18c]
  42683b:	mov    edx,DWORD PTR [eax+0x18]
  42683e:	cmp    edx,DWORD PTR [ecx]
  426840:	jne    0x42685d
  426842:	mov    ecx,DWORD PTR [ebx+0x190]
  426848:	mov    edx,DWORD PTR [ebp-0x20]
  42684b:	mov    edx,DWORD PTR [edx+0x28]
  42684e:	add    edx,DWORD PTR [ecx]
  426850:	mov    DWORD PTR [eax+0x1c],edx
  426853:	mov    eax,DWORD PTR [ebp-0x24]
  426856:	xor    eax,esi
  426858:	add    eax,edi
  42685a:	mov    DWORD PTR [ebp-0x34],eax
  42685d:	mov    eax,DWORD PTR [ebp+0xc]
  426860:	push   ebx
  426861:	push   eax
  426862:	push   DWORD PTR [ebp+0x20]
  426865:	call   0x425fe3
  42686a:	test   eax,eax
  42686c:	je     0x426935
  426872:	push   DWORD PTR [ebp+0xc]
  426875:	mov    ecx,ebx
  426877:	push   DWORD PTR [ebp+0x20]
  42687a:	call   0x425f3c
  42687f:	test   eax,eax
  426881:	je     0x426935
  426887:	mov    eax,DWORD PTR [ebp+0xc]
  42688a:	mov    edx,DWORD PTR [ebp+0x20]
  42688d:	mov    ecx,ebx
  42688f:	call   0x425e15
  426894:	test   eax,eax
  426896:	je     0x426935
  42689c:	push   ebx
  42689d:	push   DWORD PTR [ebp+0x20]
  4268a0:	call   0x4262c6
  4268a5:	test   eax,eax
  4268a7:	je     0x426935
  4268ad:	mov    eax,DWORD PTR [ebx+0x18c]
  4268b3:	mov    edx,DWORD PTR [ebp+0x20]
  4268b6:	cmp    edx,DWORD PTR [eax]
  4268b8:	jne    0x4268d4
  4268ba:	mov    eax,DWORD PTR [ebx+0x1e0]
  4268c0:	lea    ecx,[ebp-0x18]
  4268c3:	push   ecx
  4268c4:	push   DWORD PTR [ebp-0x18]
  4268c7:	mov    ecx,DWORD PTR [ebp-0x20]
  4268ca:	push   DWORD PTR [ecx+0x54]
  4268cd:	push   edx
  4268ce:	call   DWORD PTR [eax+0x1c]
  4268d1:	mov    edx,DWORD PTR [ebp+0x20]
  4268d4:	mov    eax,DWORD PTR [ebx+0x1c8]
  4268da:	mov    eax,DWORD PTR [eax]
  4268dc:	xor    eax,esi
  4268de:	add    eax,edi
  4268e0:	je     0x426919
  4268e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4268e5:	mov    eax,DWORD PTR [ecx+0x28]
  4268e8:	mov    DWORD PTR [ebp+0x8],0xf89ca5a1
  4268ef:	mov    esi,DWORD PTR [ebp+0x8]
  4268f2:	push   DWORD PTR [ebp+0x14]
  4268f5:	xor    esi,0x8ac
  4268fb:	push   DWORD PTR [ebp+0x10]
  4268fe:	add    esi,0x72f3
  426904:	or     WORD PTR [ecx+0x16],si
  426908:	add    eax,edx
  42690a:	push   edx
  42690b:	call   eax
  42690d:	mov    DWORD PTR [ebx+0x1d0],0xf89c85a2
  426917:	jmp    0x426923
  426919:	mov    eax,DWORD PTR [ebp+0xc]
  42691c:	mov    eax,DWORD PTR [eax+0x28]
  42691f:	add    eax,edx
  426921:	call   eax
  426923:	mov    DWORD PTR [ebp-0x8],eax
  426926:	mov    eax,DWORD PTR [ebp-0x8]
  426929:	mov    ecx,DWORD PTR [ebp+0x1c]
  42692c:	mov    DWORD PTR [ecx],eax
  42692e:	mov    DWORD PTR [ebp-0x30],0x1
  426935:	cmp    DWORD PTR [ebp-0x30],0x0
  426939:	jne    0x42693f
  42693b:	and    DWORD PTR [ebp+0x20],0x0
  42693f:	mov    eax,DWORD PTR [ebp+0x20]
  426942:	jmp    0x426946
  426944:	xor    eax,eax
  426946:	pop    edi
  426947:	pop    esi
  426948:	pop    ebx
  426949:	leave  
  42694a:	ret    0x1c
  42694d:	push   ebp
  42694e:	mov    ebp,esp
  426950:	movzx  edx,WORD PTR [ecx+0x6]
  426954:	movzx  eax,WORD PTR [ecx+0x14]
  426958:	push   ebx
  426959:	push   edi
  42695a:	xor    edi,edi
  42695c:	lea    eax,[eax+ecx*1+0x18]
  426960:	test   edx,edx
  426962:	je     0x426983
  426964:	mov    ecx,DWORD PTR [eax+0xc]
  426967:	lea    ebx,[ecx+esi*1]
  42696a:	cmp    DWORD PTR [ebp+0x8],ebx
  42696d:	jb     0x42697b
  42696f:	mov    ebx,DWORD PTR [eax+0x8]
  426972:	add    ebx,ecx
  426974:	add    ebx,esi
  426976:	cmp    DWORD PTR [ebp+0x8],ebx
  426979:	jb     0x426985
  42697b:	add    eax,0x28
  42697e:	inc    edi
  42697f:	cmp    edi,edx
  426981:	jb     0x426964
  426983:	xor    eax,eax
  426985:	pop    edi
  426986:	pop    ebx
  426987:	pop    ebp
  426988:	ret    0x4
  42698b:	push   ebp
  42698c:	mov    ebp,esp
  42698e:	sub    esp,0x34
  426991:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426998:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  42699f:	mov    DWORD PTR [ebp-0x1c],0xf89c85a3
  4269a6:	mov    DWORD PTR [ebp-0x8],0xf89c85c2
  4269ad:	mov    DWORD PTR [ebp-0x20],0xf89c85e2
  4269b4:	mov    DWORD PTR [ebp-0x2c],0xf89c852b
  4269bb:	mov    DWORD PTR [ebp-0x2c],0xf89c85cb
  4269c2:	mov    DWORD PTR [ebp-0x10],eax
  4269c5:	mov    eax,DWORD PTR [ebp+0x8]
  4269c8:	mov    DWORD PTR [ebp-0x14],eax
  4269cb:	mov    eax,DWORD PTR [ebp-0xc]
  4269ce:	push   ebx
  4269cf:	mov    ecx,0x75108ac
  4269d4:	xor    eax,ecx
  4269d6:	push   esi
  4269d7:	mov    esi,DWORD PTR [ebp-0x10]
  4269da:	mov    edx,0x3272f3
  4269df:	add    eax,edx
  4269e1:	push   edi
  4269e2:	cmp    esi,eax
  4269e4:	je     0x426bc3
  4269ea:	mov    eax,DWORD PTR [ebp-0xc]
  4269ed:	mov    esi,DWORD PTR [ebp-0x14]
  4269f0:	xor    eax,ecx
  4269f2:	add    eax,edx
  4269f4:	cmp    esi,eax
  4269f6:	je     0x426bc3
  4269fc:	mov    eax,DWORD PTR [ebp-0xc]
  4269ff:	xor    eax,ecx
  426a01:	add    eax,edx
  426a03:	mov    DWORD PTR [ebp-0x24],eax
  426a06:	mov    eax,DWORD PTR [ebp-0xc]
  426a09:	xor    eax,ecx
  426a0b:	add    eax,edx
  426a0d:	mov    DWORD PTR [ebp-0x28],eax
  426a10:	mov    edi,DWORD PTR [ebp-0x20]
  426a13:	mov    ebx,DWORD PTR [ebp-0x8]
  426a16:	mov    esi,0x8ac
  426a1b:	xor    edi,esi
  426a1d:	mov    eax,0x72f3
  426a22:	xor    ebx,esi
  426a24:	add    edi,eax
  426a26:	add    ebx,eax
  426a28:	sub    ebx,edi
  426a2a:	mov    WORD PTR [ebp-0x8],bx
  426a2e:	jmp    0x426af3
  426a33:	mov    edi,DWORD PTR [ebp-0xc]
  426a36:	mov    bx,WORD PTR [ebp-0x4]
  426a3a:	xor    edi,esi
  426a3c:	add    edi,eax
  426a3e:	cmp    bx,di
  426a41:	je     0x426b35
  426a47:	mov    edi,DWORD PTR [ebp-0xc]
  426a4a:	mov    ebx,DWORD PTR [ebp+0xc]
  426a4d:	xor    edi,ecx
  426a4f:	add    edi,edx
  426a51:	cmp    ebx,edi
  426a53:	mov    di,WORD PTR [ebp-0x4]
  426a57:	mov    bx,WORD PTR [ebp+0x8]
  426a5b:	je     0x426ac6
  426a5d:	cmp    bx,di
  426a60:	je     0x426acf
  426a62:	mov    edi,DWORD PTR [ebp-0x20]
  426a65:	mov    bx,WORD PTR [ebp+0x8]
  426a69:	xor    edi,esi
  426a6b:	add    edi,eax
  426a6d:	cmp    bx,di
  426a70:	jb     0x426a90
  426a72:	mov    edi,DWORD PTR [ebp-0x2c]
  426a75:	mov    bx,WORD PTR [ebp+0x8]
  426a79:	xor    edi,esi
  426a7b:	add    edi,eax
  426a7d:	cmp    bx,di
  426a80:	ja     0x426a90
  426a82:	movzx  edi,WORD PTR [ebp+0x8]
  426a86:	movzx  ebx,WORD PTR [ebp-0x8]
  426a8a:	add    edi,ebx
  426a8c:	mov    WORD PTR [ebp+0x8],di
  426a90:	mov    edi,DWORD PTR [ebp-0x20]
  426a93:	mov    bx,WORD PTR [ebp-0x4]
  426a97:	xor    edi,esi
  426a99:	add    edi,eax
  426a9b:	cmp    bx,di
  426a9e:	jb     0x426abe
  426aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  426aa3:	mov    bx,WORD PTR [ebp-0x4]
  426aa7:	xor    edi,esi
  426aa9:	add    edi,eax
  426aab:	cmp    bx,di
  426aae:	ja     0x426abe
  426ab0:	movzx  edi,WORD PTR [ebp-0x4]
  426ab4:	movzx  ebx,WORD PTR [ebp-0x8]
  426ab8:	add    edi,ebx
  426aba:	mov    WORD PTR [ebp-0x4],di
  426abe:	mov    di,WORD PTR [ebp-0x4]
  426ac2:	mov    bx,WORD PTR [ebp+0x8]
  426ac6:	cmp    bx,di
  426ac9:	jne    0x426bc3
  426acf:	mov    edi,DWORD PTR [ebp-0x1c]
  426ad2:	mov    ebx,DWORD PTR [ebp-0x10]
  426ad5:	xor    edi,ecx
  426ad7:	lea    edi,[edi+ebx*1+0x3272f3]
  426ade:	mov    DWORD PTR [ebp-0x10],edi
  426ae1:	mov    edi,DWORD PTR [ebp-0x1c]
  426ae4:	mov    ebx,DWORD PTR [ebp-0x14]
  426ae7:	xor    edi,ecx
  426ae9:	lea    edi,[edi+ebx*1+0x3272f3]
  426af0:	mov    DWORD PTR [ebp-0x14],edi
  426af3:	mov    edi,DWORD PTR [ebp-0x24]
  426af6:	mov    ebx,DWORD PTR [ebp-0x10]
  426af9:	mov    di,WORD PTR [ebx+edi*2]
  426afd:	mov    WORD PTR [ebp+0x8],di
  426b01:	mov    edi,DWORD PTR [ebp-0x28]
  426b04:	mov    ebx,DWORD PTR [ebp-0x14]
  426b07:	mov    di,WORD PTR [ebx+edi*2]
  426b0b:	mov    WORD PTR [ebp-0x4],di
  426b0f:	mov    edi,DWORD PTR [ebp-0xc]
  426b12:	mov    bx,WORD PTR [ebp+0x8]
  426b16:	xor    edi,esi
  426b18:	add    edi,eax
  426b1a:	cmp    bx,di
  426b1d:	jne    0x426a33
  426b23:	mov    eax,DWORD PTR [ebp-0x18]
  426b26:	mov    esi,DWORD PTR [ebp-0xc]
  426b29:	xor    eax,ecx
  426b2b:	add    eax,edx
  426b2d:	imul   eax,esi
  426b30:	mov    DWORD PTR [ebp-0xc],eax
  426b33:	jmp    0x426b47
  426b35:	mov    eax,DWORD PTR [ebp-0xc]
  426b38:	mov    esi,DWORD PTR [ebp-0x18]
  426b3b:	xor    eax,ecx
  426b3d:	lea    eax,[eax+esi*1+0x3272f3]
  426b44:	mov    DWORD PTR [ebp-0x18],eax
  426b47:	mov    eax,DWORD PTR [ebp-0x24]
  426b4a:	sub    eax,edx
  426b4c:	xor    eax,ecx
  426b4e:	mov    DWORD PTR [ebp-0x30],eax
  426b51:	mov    eax,DWORD PTR [ebp-0x28]
  426b54:	sub    eax,edx
  426b56:	xor    eax,ecx
  426b58:	mov    DWORD PTR [ebp-0x34],eax
  426b5b:	mov    eax,DWORD PTR [ebp-0x34]
  426b5e:	mov    esi,DWORD PTR [ebp-0x1c]
  426b61:	xor    esi,ecx
  426b63:	add    esi,edx
  426b65:	xor    eax,ecx
  426b67:	add    eax,0x3272f3
  426b6c:	imul   esi,eax
  426b6f:	mov    eax,DWORD PTR [ebp-0x14]
  426b72:	movzx  eax,WORD PTR [esi+eax*1]
  426b76:	mov    esi,DWORD PTR [ebp-0x30]
  426b79:	mov    edi,DWORD PTR [ebp-0x1c]
  426b7c:	xor    esi,ecx
  426b7e:	add    esi,edx
  426b80:	xor    edi,ecx
  426b82:	add    edi,edx
  426b84:	imul   edi,esi
  426b87:	mov    esi,DWORD PTR [ebp-0x10]
  426b8a:	movzx  esi,WORD PTR [edi+esi*1]
  426b8e:	sub    eax,edx
  426b90:	sub    esi,edx
  426b92:	xor    eax,ecx
  426b94:	xor    esi,ecx
  426b96:	cmp    esi,eax
  426b98:	jne    0x426bc3
  426b9a:	mov    eax,DWORD PTR [ebp-0x30]
  426b9d:	mov    esi,DWORD PTR [ebp-0x1c]
  426ba0:	xor    eax,ecx
  426ba2:	add    eax,0x3272f3
  426ba7:	xor    esi,ecx
  426ba9:	add    esi,edx
  426bab:	imul   esi,eax
  426bae:	mov    eax,DWORD PTR [ebp-0x10]
  426bb1:	movzx  eax,WORD PTR [esi+eax*1]
  426bb5:	mov    esi,DWORD PTR [ebp-0xc]
  426bb8:	sub    eax,edx
  426bba:	xor    eax,ecx
  426bbc:	cmp    eax,esi
  426bbe:	mov    eax,DWORD PTR [ebp-0xc]
  426bc1:	je     0x426bc6
  426bc3:	mov    eax,DWORD PTR [ebp-0x18]
  426bc6:	pop    edi
  426bc7:	xor    eax,ecx
  426bc9:	pop    esi
  426bca:	add    eax,edx
  426bcc:	pop    ebx
  426bcd:	leave  
  426bce:	ret    0x8
  426bd1:	push   ebp
  426bd2:	mov    ebp,esp
  426bd4:	push   ecx
  426bd5:	mov    cx,WORD PTR [eax]
  426bd8:	push   esi
  426bd9:	mov    esi,0x3b5b
  426bde:	sub    cx,si
  426be1:	mov    esi,0x8a99
  426be6:	xor    cx,si
  426be9:	mov    esi,0x4e3c
  426bee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426bf5:	mov    edx,0xf89c85a1
  426bfa:	cmp    cx,si
  426bfd:	je     0x426c5c
  426bff:	push   ebx
  426c00:	push   edi
  426c01:	movzx  ecx,cx
  426c04:	mov    edi,0xffcd8d0d
  426c09:	mov    esi,0x75108ac
  426c0e:	mov    ebx,0x4f98
  426c13:	cmp    cx,bx
  426c16:	jne    0x426c1b
  426c18:	mov    DWORD PTR [ebp-0x4],edx
  426c1b:	lea    edx,[edi+0x1]
  426c1e:	xor    edx,esi
  426c20:	mov    edi,edx
  426c22:	xor    edi,esi
  426c24:	mov    cx,WORD PTR [eax+edi*2+0x64e5e6]
  426c2c:	mov    ebx,0x3b5b
  426c31:	sub    cx,bx
  426c34:	mov    ebx,0x8a99
  426c39:	xor    cx,bx
  426c3c:	mov    ebx,0x4e3c
  426c41:	cmp    cx,bx
  426c44:	jne    0x426c0e
  426c46:	mov    ecx,DWORD PTR [ebp-0x4]
  426c49:	pop    edi
  426c4a:	pop    ebx
  426c4b:	cmp    ecx,0xf89c85a0
  426c51:	je     0x426c5c
  426c53:	xor    ecx,esi
  426c55:	lea    eax,[eax+ecx*2+0x64e5e8]
  426c5c:	pop    esi
  426c5d:	leave  
  426c5e:	ret    
  426c5f:	push   ebp
  426c60:	mov    ebp,esp
  426c62:	push   ecx
  426c63:	push   esi
  426c64:	push   edi
  426c65:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426c6c:	mov    esi,0xf89c85a1
  426c71:	call   0x426bd1
  426c76:	mov    edi,eax
  426c78:	mov    al,BYTE PTR [edi]
  426c7a:	sub    al,0x2
  426c7c:	xor    al,0x7d
  426c7e:	cmp    al,0x83
  426c80:	je     0x426ce3
  426c82:	mov    eax,edi
  426c84:	mov    edx,0xffcd8d0d
  426c89:	mov    ecx,0x75108ac
  426c8e:	push   ebx
  426c8f:	mov    ax,WORD PTR [eax]
  426c92:	mov    ebx,0x3b5b
  426c97:	sub    ax,bx
  426c9a:	mov    ebx,0x8a99
  426c9f:	xor    ax,bx
  426ca2:	mov    ebx,0x4e4a
  426ca7:	cmp    ax,bx
  426caa:	jne    0x426caf
  426cac:	mov    DWORD PTR [ebp-0x4],esi
  426caf:	lea    esi,[edx+0x1]
  426cb2:	xor    esi,ecx
  426cb4:	mov    edx,esi
  426cb6:	xor    edx,ecx
  426cb8:	lea    eax,[edi+edx*2+0x64e5e6]
  426cbf:	mov    bl,BYTE PTR [eax]
  426cc1:	sub    bl,0x2
  426cc4:	xor    bl,0x7d
  426cc7:	cmp    bl,0x83
  426cca:	jne    0x426c8f
  426ccc:	mov    eax,DWORD PTR [ebp-0x4]
  426ccf:	pop    ebx
  426cd0:	cmp    eax,0xf89c85a0
  426cd5:	je     0x426ce3
  426cd7:	xor    eax,ecx
  426cd9:	xor    ecx,ecx
  426cdb:	mov    WORD PTR [edi+eax*2+0x64e5e6],cx
  426ce3:	mov    eax,edi
  426ce5:	pop    edi
  426ce6:	pop    esi
  426ce7:	leave  
  426ce8:	ret    
  426ce9:	push   ebp
  426cea:	mov    ebp,esp
  426cec:	push   ecx
  426ced:	push   esi
  426cee:	mov    DWORD PTR [ebp-0x4],0xf89c85a0
  426cf5:	mov    esi,0xf89c85a1
  426cfa:	call   0x426bd1
  426cff:	mov    cx,WORD PTR [eax]
  426d02:	mov    edx,0x3b5b
  426d07:	sub    cx,dx
  426d0a:	mov    edx,0x8a99
  426d0f:	xor    cx,dx
  426d12:	mov    edx,0x4e3c
  426d17:	cmp    cx,dx
  426d1a:	je     0x426d73
  426d1c:	push   ebx
  426d1d:	push   edi
  426d1e:	movzx  ecx,cx
  426d21:	mov    edx,0xffcd8d0d
  426d26:	mov    edi,0x75108ac
  426d2b:	mov    ebx,0x4e4a
  426d30:	cmp    cx,bx
  426d33:	jne    0x426d38
  426d35:	mov    DWORD PTR [ebp-0x4],esi
  426d38:	lea    esi,[edx+0x1]
  426d3b:	xor    esi,edi
  426d3d:	mov    edx,esi
  426d3f:	xor    edx,edi
  426d41:	mov    cx,WORD PTR [eax+edx*2+0x64e5e6]
  426d49:	mov    ebx,0x3b5b
  426d4e:	sub    cx,bx
  426d51:	mov    ebx,0x8a99
  426d56:	xor    cx,bx
  426d59:	mov    ebx,0x4e3c
  426d5e:	cmp    cx,bx
  426d61:	jne    0x426d2b
  426d63:	cmp    DWORD PTR [ebp-0x4],0xf89c85a0
  426d6a:	pop    edi
  426d6b:	pop    ebx
  426d6c:	je     0x426d73
  426d6e:	xor    eax,eax
  426d70:	inc    eax
  426d71:	jmp    0x426d75
  426d73:	xor    eax,eax
  426d75:	pop    esi
  426d76:	leave  
  426d77:	ret    
  426d78:	push   ebp
  426d79:	mov    ebp,esp
  426d7b:	push   ecx
  426d7c:	mov    eax,DWORD PTR [ebp+0x8]
  426d7f:	movzx  ecx,WORD PTR [eax]
  426d82:	push   esi
  426d83:	lea    eax,[ecx-0x3b5b]
  426d89:	mov    esi,0x8a99
  426d8e:	push   edi
  426d8f:	xor    eax,esi
  426d91:	mov    edi,0x4e3c
  426d96:	mov    DWORD PTR [ebp-0x4],edx
  426d99:	cmp    ax,di
  426d9c:	je     0x426dc9
  426d9e:	mov    eax,DWORD PTR [ebp+0x8]
  426da1:	sub    eax,edx
  426da3:	mov    DWORD PTR [ebp+0x8],eax
  426da6:	jmp    0x426dab
  426da8:	mov    eax,DWORD PTR [ebp+0x8]
  426dab:	mov    WORD PTR [edx],cx
  426dae:	add    edx,0x2
  426db1:	movzx  edi,WORD PTR [eax+edx*1]
  426db5:	mov    ecx,edi
  426db7:	add    edi,0xffffc4a5
  426dbd:	xor    edi,esi
  426dbf:	mov    eax,0x4e3c
  426dc4:	cmp    di,ax
  426dc7:	jne    0x426da8
  426dc9:	xor    eax,eax
  426dcb:	pop    edi
  426dcc:	mov    WORD PTR [edx],ax
  426dcf:	mov    eax,DWORD PTR [ebp-0x4]
  426dd2:	pop    esi
  426dd3:	leave  
  426dd4:	ret    0x4
  426dd7:	push   ebp
  426dd8:	mov    ebp,esp
  426dda:	sub    esp,0x18
  426ddd:	mov    DWORD PTR [ebp-0x8],0xf89c85a1
  426de4:	mov    DWORD PTR [ebp-0x18],0xf89c85a2
  426deb:	mov    ecx,DWORD PTR [ebp-0x8]
  426dee:	push   esi
  426def:	mov    eax,0x75108ac
  426df4:	xor    ecx,eax
  426df6:	mov    esi,0x3272f3
  426dfb:	add    ecx,esi
  426dfd:	mov    DWORD PTR [ebp-0x4],ecx
  426e00:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426e07:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426e0e:	push   edi
  426e0f:	mov    DWORD PTR [ebp-0x14],0xf89c85a3
  426e16:	jmp    0x426eb7
  426e1b:	mov    ecx,DWORD PTR [ebp-0x4]
  426e1e:	mov    edx,DWORD PTR [ebp+0x10]
  426e21:	sub    edx,ecx
  426e23:	mov    ecx,DWORD PTR [ebp-0xc]
  426e26:	xor    ecx,eax
  426e28:	add    ecx,esi
  426e2a:	cmp    edx,ecx
  426e2c:	jbe    0x426e49
  426e2e:	mov    edx,DWORD PTR [ebp-0x4]
  426e31:	add    edx,DWORD PTR [ebp+0x8]
  426e34:	mov    ecx,DWORD PTR [ebp-0x4]
  426e37:	add    ecx,DWORD PTR [ebp+0xc]
  426e3a:	mov    edi,DWORD PTR [ecx]
  426e3c:	mov    DWORD PTR [edx],edi
  426e3e:	mov    ecx,DWORD PTR [ecx+0x4]
  426e41:	mov    DWORD PTR [edx+0x4],ecx
  426e44:	mov    ecx,DWORD PTR [ebp-0xc]
  426e47:	jmp    0x426e96
  426e49:	mov    ecx,DWORD PTR [ebp-0x4]
  426e4c:	mov    edx,DWORD PTR [ebp+0x10]
  426e4f:	sub    edx,ecx
  426e51:	mov    ecx,DWORD PTR [ebp-0x10]
  426e54:	xor    ecx,eax
  426e56:	add    ecx,esi
  426e58:	cmp    edx,ecx
  426e5a:	mov    ecx,DWORD PTR [ebp-0x4]
  426e5d:	jbe    0x426e71
  426e5f:	add    ecx,DWORD PTR [ebp+0x8]
  426e62:	mov    edx,DWORD PTR [ebp-0x4]
  426e65:	add    edx,DWORD PTR [ebp+0xc]
  426e68:	mov    edx,DWORD PTR [edx]
  426e6a:	mov    DWORD PTR [ecx],edx
  426e6c:	mov    ecx,DWORD PTR [ebp-0x10]
  426e6f:	jmp    0x426e96
  426e71:	mov    edx,DWORD PTR [ebp+0x10]
  426e74:	sub    edx,ecx
  426e76:	mov    ecx,DWORD PTR [ebp-0x14]
  426e79:	xor    ecx,eax
  426e7b:	add    ecx,esi
  426e7d:	cmp    edx,ecx
  426e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  426e82:	jbe    0x426ea7
  426e84:	add    ecx,DWORD PTR [ebp+0x8]
  426e87:	mov    edx,DWORD PTR [ebp-0x4]
  426e8a:	add    edx,DWORD PTR [ebp+0xc]
  426e8d:	mov    dx,WORD PTR [edx]
  426e90:	mov    WORD PTR [ecx],dx
  426e93:	mov    ecx,DWORD PTR [ebp-0x14]
  426e96:	mov    edx,DWORD PTR [ebp-0x4]
  426e99:	xor    ecx,eax
  426e9b:	lea    ecx,[ecx+edx*1+0x3272f3]
  426ea2:	mov    DWORD PTR [ebp-0x4],ecx
  426ea5:	jmp    0x426eb7
  426ea7:	add    ecx,DWORD PTR [ebp+0x8]
  426eaa:	mov    edx,DWORD PTR [ebp-0x4]
  426ead:	add    edx,DWORD PTR [ebp+0xc]
  426eb0:	mov    dl,BYTE PTR [edx]
  426eb2:	mov    BYTE PTR [ecx],dl
  426eb4:	inc    DWORD PTR [ebp-0x4]
  426eb7:	mov    ecx,DWORD PTR [ebp-0x18]
  426eba:	mov    edx,DWORD PTR [ebp+0x10]
  426ebd:	xor    ecx,eax
  426ebf:	add    ecx,esi
  426ec1:	imul   ecx,edx
  426ec4:	mov    edx,DWORD PTR [ebp-0x8]
  426ec7:	mov    edi,DWORD PTR [ebp-0x4]
  426eca:	xor    edx,eax
  426ecc:	lea    edx,[edx+edi*1+0x3272f3]
  426ed3:	cmp    edx,ecx
  426ed5:	jb     0x426e1b
  426edb:	pop    edi
  426edc:	pop    esi
  426edd:	leave  
  426ede:	ret    0xc
  426ee1:	push   ebp
  426ee2:	mov    ebp,esp
  426ee4:	sub    esp,0xc
  426ee7:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426eee:	push   esi
  426eef:	mov    esi,eax
  426ef1:	mov    DWORD PTR [ebp-0x8],0xf89c85a2
  426ef8:	mov    edx,DWORD PTR [ebp-0x4]
  426efb:	mov    eax,0x75108ac
  426f00:	xor    edx,eax
  426f02:	mov    ecx,0x3272f3
  426f07:	add    edx,ecx
  426f09:	cmp    esi,edx
  426f0b:	je     0x426f4d
  426f0d:	push   ebx
  426f0e:	push   edi
  426f0f:	mov    edx,DWORD PTR [ebp-0x8]
  426f12:	mov    ebx,DWORD PTR [ebp+0x8]
  426f15:	xor    edx,eax
  426f17:	mov    edi,0xffcd8d0d
  426f1c:	sub    edi,edx
  426f1e:	add    esi,edi
  426f20:	lea    edx,[esi-0x3272f3]
  426f26:	xor    edx,eax
  426f28:	mov    DWORD PTR [ebp-0xc],edx
  426f2b:	mov    edx,DWORD PTR [ebp-0x4]
  426f2e:	mov    edi,DWORD PTR [ebp-0xc]
  426f31:	xor    dl,0xac
  426f34:	sub    dl,0xd
  426f37:	xor    edi,eax
  426f39:	mov    BYTE PTR [edi+ebx*1+0x3272f3],dl
  426f40:	mov    edx,DWORD PTR [ebp-0x4]
  426f43:	xor    edx,eax
  426f45:	add    edx,ecx
  426f47:	cmp    esi,edx
  426f49:	jne    0x426f0f
  426f4b:	pop    edi
  426f4c:	pop    ebx
  426f4d:	pop    esi
  426f4e:	leave  
  426f4f:	ret    0x4
  426f52:	push   ebp
  426f53:	mov    ebp,esp
  426f55:	sub    esp,0x21c
  426f5b:	mov    DWORD PTR [ebp-0x4],0xf89c85a1
  426f62:	mov    DWORD PTR [ebp-0x14],0xf89c85a2
  426f69:	mov    eax,DWORD PTR [ebp+0x10]
  426f6c:	mov    eax,DWORD PTR [ebp-0x4]
  426f6f:	mov    ecx,DWORD PTR [ebp+0x8]
  426f72:	push   esi
  426f73:	push   edi
  426f74:	mov    edi,0x75108ac
  426f79:	xor    eax,edi
  426f7b:	mov    esi,0x3272f3
  426f80:	add    eax,esi
  426f82:	cmp    eax,ecx
  426f84:	mov    eax,DWORD PTR [ebp-0x4]
  426f87:	jne    0x426f92
  426f89:	xor    eax,edi
  426f8b:	add    eax,esi
  426f8d:	jmp    0x42703e
  426f92:	mov    ecx,DWORD PTR [ebp+0xc]
  426f95:	xor    eax,edi
  426f97:	add    eax,esi
  426f99:	cmp    eax,ecx
  426f9b:	jne    0x426fa2
  426f9d:	mov    eax,DWORD PTR [ebp-0x4]
  426fa0:	jmp    0x426f89
  426fa2:	lea    eax,[ebp-0x21c]
  426fa8:	mov    DWORD PTR [ebp-0x8],eax
  426fab:	mov    eax,DWORD PTR [ebp+0xc]
  426fae:	mov    DWORD PTR [ebp-0x10],eax
  426fb1:	mov    eax,DWORD PTR [ebp-0x4]
  426fb4:	xor    eax,edi
  426fb6:	add    eax,esi
  426fb8:	mov    DWORD PTR [ebp+0x10],eax
  426fbb:	mov    eax,DWORD PTR [ebp+0xc]
  426fbe:	push   ebx
  426fbf:	call   0x426ce9
  426fc4:	mov    ebx,eax
  426fc6:	mov    eax,DWORD PTR [ebp+0x8]
  426fc9:	mov    eax,DWORD PTR [eax+0x14]
  426fcc:	jmp    0x427026
  426fce:	mov    eax,DWORD PTR [ebp+0xc]
  426fd1:	sub    eax,0x8
  426fd4:	mov    DWORD PTR [ebp-0xc],eax
  426fd7:	mov    eax,DWORD PTR [ebp-0xc]
  426fda:	mov    eax,DWORD PTR [eax+0x28]
  426fdd:	call   0x426bd1
  426fe2:	mov    DWORD PTR [ebp+0x10],eax
  426fe5:	push   DWORD PTR [ebp+0x10]
  426fe8:	mov    edx,DWORD PTR [ebp-0x8]
  426feb:	call   0x426d78
  426ff0:	mov    eax,DWORD PTR [ebp-0x4]
  426ff3:	xor    eax,edi
  426ff5:	add    eax,esi
  426ff7:	cmp    eax,ebx
  426ff9:	jne    0x427003
  426ffb:	mov    eax,DWORD PTR [ebp-0x8]
  426ffe:	call   0x426c5f
  427003:	mov    eax,DWORD PTR [ebp-0x14]
  427006:	xor    eax,edi
  427008:	add    eax,esi
  42700a:	push   eax
  42700b:	push   DWORD PTR [ebp-0x10]
  42700e:	mov    eax,DWORD PTR [ebp-0x8]
  427011:	call   0x42698b
  427016:	mov    ecx,DWORD PTR [ebp-0x4]
  427019:	xor    ecx,edi
  42701b:	add    ecx,esi
  42701d:	cmp    eax,ecx
  42701f:	je     0x427044
  427021:	mov    eax,DWORD PTR [ebp+0xc]
  427024:	mov    eax,DWORD PTR [eax]
  427026:	mov    DWORD PTR [ebp+0xc],eax
  427029:	mov    eax,DWORD PTR [ebp+0x8]
  42702c:	mov    ecx,DWORD PTR [ebp+0xc]
  42702f:	add    eax,0x14
  427032:	cmp    ecx,eax
  427034:	jne    0x426fce
  427036:	mov    eax,DWORD PTR [ebp-0x4]
  427039:	xor    eax,edi
  42703b:	add    eax,esi
  42703d:	pop    ebx
  42703e:	pop    edi
  42703f:	pop    esi
  427040:	leave  
  427041:	ret    0xc
  427044:	mov    eax,DWORD PTR [ebp-0xc]
  427047:	mov    eax,DWORD PTR [eax+0x18]
  42704a:	jmp    0x42703d
  42704c:	push   ebp
  42704d:	mov    ebp,esp
  42704f:	mov    eax,DWORD PTR [ebp+0xc]
  427052:	sub    esp,0x10
  427055:	cmp    DWORD PTR [ebp+0x8],0x0
  427059:	push   ebx
  42705a:	push   esi
  42705b:	push   edi
  42705c:	je     0x427111
  427062:	test   eax,eax
  427064:	je     0x427111
  42706a:	movzx  eax,WORD PTR [eax+0x20]
  42706e:	mov    ecx,eax
  427070:	mov    DWORD PTR [ebp-0x10],eax
  427073:	xor    edx,edx
  427075:	and    DWORD PTR [ebp-0x8],edx
  427078:	mov    eax,0x8a99
  42707d:	xor    ecx,eax
  42707f:	add    ecx,0x3b5b
  427085:	mov    DWORD PTR [ebp-0xc],ecx
  427088:	and    DWORD PTR [ebp-0x4],0x0
  42708c:	xor    ecx,ecx
  42708e:	push   0x7d
  427090:	pop    edi
  427091:	cmp    cx,WORD PTR [ebp-0xc]
  427095:	jae    0x4270fb
  427097:	lea    esi,[edx-0x3b5b]
  42709d:	xor    esi,eax
  42709f:	movzx  ecx,WORD PTR [ebp-0x4]
  4270a3:	mov    ebx,DWORD PTR [ebp+0xc]
  4270a6:	lea    ecx,[ebx+ecx*4]
  4270a9:	cmp    WORD PTR [ecx+0x2],si
  4270ad:	jne    0x4270e6
  4270af:	movzx  ecx,WORD PTR [ecx]
  4270b2:	mov    edi,0x4e3c
  4270b7:	cmp    cx,di
  4270ba:	jne    0x4270c8
  4270bc:	mov    ebx,DWORD PTR [ebp+0x8]
  4270bf:	movzx  edi,dx
  4270c2:	cmp    BYTE PTR [edi+ebx*1],0x0
  4270c6:	je     0x4270f5
  4270c8:	mov    ebx,DWORD PTR [ebp+0x8]
  4270cb:	movzx  edi,dx
  4270ce:	movsx  di,BYTE PTR [edi+ebx*1]
  4270d3:	mov    ebx,0x3b5b
  4270d8:	sub    di,bx
  4270db:	xor    di,ax
  4270de:	cmp    cx,di
  4270e1:	je     0x4270f5
  4270e3:	push   0xffffff83
  4270e5:	pop    edi
  4270e6:	inc    DWORD PTR [ebp-0x4]
  4270e9:	mov    cx,WORD PTR [ebp-0xc]
  4270ed:	cmp    WORD PTR [ebp-0x4],cx
  4270f1:	jb     0x42709f
  4270f3:	jmp    0x4270fb
  4270f5:	inc    DWORD PTR [ebp-0x8]
  4270f8:	push   0xffffff82
  4270fa:	pop    edi
  4270fb:	mov    esi,DWORD PTR [ebp+0x8]
  4270fe:	movzx  ecx,dx
  427101:	cmp    BYTE PTR [ecx+esi*1],0x0
  427105:	je     0x42711a
  427107:	inc    edx
  427108:	cmp    edi,0xffffff83
  42710b:	jne    0x427088
  427111:	xor    eax,eax
  427113:	pop    edi
  427114:	pop    esi
  427115:	pop    ebx
  427116:	leave  
  427117:	ret    0x8
  42711a:	mov    ecx,DWORD PTR [ebp-0x8]
  42711d:	add    ecx,0xffffc4a5
  427123:	xor    cx,ax
  427126:	xor    eax,eax
  427128:	cmp    cx,WORD PTR [ebp-0x10]
  42712c:	sete   al
  42712f:	jmp    0x427113
  427131:	push   ebp
  427132:	mov    ebp,esp
  427134:	sub    esp,0x50
  427137:	push   edi
  427138:	mov    edi,eax
  42713a:	mov    eax,DWORD PTR [edi+0x1a8]
  427140:	cmp    DWORD PTR [eax],0x0
  427143:	jne    0x42714c
  427145:	xor    eax,eax
  427147:	jmp    0x42727d
  42714c:	push   DWORD PTR [ebp+0x8]
  42714f:	push   0x2c
  427151:	pop    eax
  427152:	call   0x426ee1
  427157:	mov    edx,DWORD PTR [edi+0x1ac]
  42715d:	lea    eax,[edi+0x22]
  427160:	mov    DWORD PTR [ebp-0x4c],eax
  427163:	lea    eax,[edi+0x44]
  427166:	mov    DWORD PTR [ebp-0x48],eax
  427169:	lea    eax,[edi+0x66]
  42716c:	mov    DWORD PTR [ebp-0x44],eax
  42716f:	lea    eax,[edi+0x88]
  427175:	mov    DWORD PTR [ebp-0x40],eax
  427178:	lea    eax,[edi+0xaa]
  42717e:	mov    DWORD PTR [ebp-0x3c],eax
  427181:	lea    eax,[edi+0xcc]
  427187:	mov    DWORD PTR [ebp-0x38],eax
  42718a:	lea    eax,[edi+0xee]
  427190:	mov    DWORD PTR [ebp-0x34],eax
  427193:	lea    eax,[edi+0x110]
  427199:	mov    DWORD PTR [ebp-0x30],eax
  42719c:	lea    eax,[edi+0x132]
  4271a2:	mov    DWORD PTR [ebp-0x2c],eax
  4271a5:	lea    eax,[edi+0x154]
  4271ab:	push   edi
  4271ac:	mov    DWORD PTR [ebp-0x50],edi
  4271af:	mov    DWORD PTR [ebp-0x28],eax
  4271b2:	call   0x4272b1
  4271b7:	push   eax
  4271b8:	mov    eax,DWORD PTR [edi+0x1a8]
  4271be:	push   DWORD PTR [eax]
  4271c0:	call   0x426f52
  4271c5:	mov    DWORD PTR [ebp-0x10],eax
  4271c8:	test   eax,eax
  4271ca:	je     0x42727d
  4271d0:	mov    ecx,DWORD PTR [eax+0x3c]
  4271d3:	push   ebx
  4271d4:	push   esi
  4271d5:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  4271d9:	add    esi,eax
  4271db:	mov    edi,DWORD PTR [esi+0x24]
  4271de:	mov    ecx,DWORD PTR [esi+0x1c]
  4271e1:	mov    edx,DWORD PTR [esi+0x20]
  4271e4:	mov    ebx,DWORD PTR [esi+0x18]
  4271e7:	add    edi,eax
  4271e9:	mov    DWORD PTR [ebp-0x20],edi
  4271ec:	mov    edi,DWORD PTR [esi+0x14]
  4271ef:	add    ecx,eax
  4271f1:	add    edx,eax
  4271f3:	mov    DWORD PTR [ebp-0xc],ecx
  4271f6:	mov    DWORD PTR [ebp-0x1c],edx
  4271f9:	mov    DWORD PTR [ebp-0x8],edi
  4271fc:	cmp    edi,ebx
  4271fe:	ja     0x427203
  427200:	mov    DWORD PTR [ebp-0x8],ebx
  427203:	xor    ebx,ebx
  427205:	mov    DWORD PTR [ebp-0x18],ebx
  427208:	cmp    DWORD PTR [ebp-0x8],ebx
  42720b:	jbe    0x42727b
  42720d:	jmp    0x427212
  42720f:	mov    edx,DWORD PTR [ebp-0x1c]
  427212:	mov    edi,DWORD PTR [ebp-0x20]
  427215:	movzx  edi,WORD PTR [edi+ebx*2]
  427219:	cmp    ebx,DWORD PTR [esi+0x18]
  42721c:	jae    0x42727b
  42721e:	cmp    edi,DWORD PTR [esi+0x14]
  427221:	jae    0x42727b
  427223:	mov    ebx,DWORD PTR [edx+ebx*4]
  427226:	mov    edx,DWORD PTR [ebp+0x8]
  427229:	mov    edi,DWORD PTR [ecx+edi*4]
  42722c:	mov    DWORD PTR [ebp-0x4],edx
  42722f:	lea    edx,[ebp-0x50]
  427232:	add    ebx,eax
  427234:	add    edi,eax
  427236:	sub    edx,DWORD PTR [ebp+0x8]
  427239:	mov    DWORD PTR [ebp-0x14],0xb
  427240:	mov    DWORD PTR [ebp-0x24],edx
  427243:	mov    edx,DWORD PTR [ebp-0x4]
  427246:	cmp    DWORD PTR [edx],0x0
  427249:	jne    0x427266
  42724b:	mov    eax,DWORD PTR [ebp-0x24]
  42724e:	push   DWORD PTR [eax+edx*1]
  427251:	push   ebx
  427252:	call   0x42704c
  427257:	mov    ecx,DWORD PTR [ebp-0xc]
  42725a:	test   eax,eax
  42725c:	je     0x427263
  42725e:	mov    eax,DWORD PTR [ebp-0x4]
  427261:	mov    DWORD PTR [eax],edi
  427263:	mov    eax,DWORD PTR [ebp-0x10]
  427266:	add    DWORD PTR [ebp-0x4],0x4
  42726a:	dec    DWORD PTR [ebp-0x14]
  42726d:	jne    0x427243
  42726f:	mov    ebx,DWORD PTR [ebp-0x18]
  427272:	inc    ebx
  427273:	mov    DWORD PTR [ebp-0x18],ebx
  427276:	cmp    ebx,DWORD PTR [ebp-0x8]
  427279:	jb     0x42720f
  42727b:	pop    esi
  42727c:	pop    ebx
  42727d:	pop    edi
  42727e:	leave  
  42727f:	ret    0x4
  427282:	push   ebp
  427283:	mov    ebp,esp
  427285:	mov    eax,DWORD PTR [ebp+0x8]
  427288:	push   esi
  427289:	push   DWORD PTR [eax+0x1e0]
  42728f:	lea    esi,[eax+0x198]
  427295:	mov    eax,DWORD PTR [ebp+0x8]
  427298:	call   0x427131
  42729d:	mov    ecx,DWORD PTR [esi]
  42729f:	mov    DWORD PTR [ecx],eax
  4272a1:	mov    eax,DWORD PTR [esi]
  4272a3:	xor    ecx,ecx
  4272a5:	cmp    DWORD PTR [eax],ecx
  4272a7:	pop    esi
  4272a8:	setne  cl
  4272ab:	mov    eax,ecx
  4272ad:	pop    ebp
  4272ae:	ret    0x4
  4272b1:	mov    ecx,DWORD PTR [edi+0x188]
  4272b7:	push   ebx
  4272b8:	jmp    0x4272cd
  4272ba:	xor    eax,0x8a99
  4272bf:	add    eax,0x3b5b
  4272c4:	mov    WORD PTR [ecx],ax
  4272c7:	add    ecx,0x2
  4272ca:	add    edx,0x2
  4272cd:	movzx  eax,WORD PTR [edx]
  4272d0:	mov    ebx,0x4e3c
  4272d5:	cmp    ax,bx
  4272d8:	jne    0x4272ba
  4272da:	xor    eax,eax
  4272dc:	mov    WORD PTR [ecx],ax
  4272df:	mov    eax,DWORD PTR [edi+0x188]
  4272e5:	pop    ebx
  4272e6:	ret    
  4272e7:	push   edi
  4272e8:	mov    edi,eax
  4272ea:	mov    eax,DWORD PTR [esi+0x188]
  4272f0:	shl    edi,0x6
  4272f3:	add    eax,edi
  4272f5:	jmp    0x427301
  4272f7:	xor    cl,0x7d
  4272fa:	add    cl,0x2
  4272fd:	mov    BYTE PTR [eax],cl
  4272ff:	inc    eax
  427300:	inc    edx
  427301:	mov    cl,BYTE PTR [edx]
  427303:	cmp    cl,0x83
  427306:	jne    0x4272f7
  427308:	mov    BYTE PTR [eax],0x0
  42730b:	mov    eax,DWORD PTR [esi+0x188]
  427311:	add    eax,edi
  427313:	pop    edi
  427314:	ret    
  427315:	push   ebp
  427316:	mov    ebp,esp
  427318:	sub    esp,0x14
  42731b:	mov    DWORD PTR [ebp-0x10],0xf89c85a1
  427322:	mov    DWORD PTR [ebp-0x4],0xf89c85a2
  427329:	mov    eax,DWORD PTR [ebx]
  42732b:	mov    DWORD PTR [ebp-0x8],eax
  42732e:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  427335:	push   esi
  427336:	push   edi
  427337:	mov    DWORD PTR [ebp-0x14],0xead71881
  42733e:	mov    edi,DWORD PTR [ebp-0x4]
  427341:	mov    ecx,DWORD PTR [ebp-0x10]
  427344:	mov    eax,0x75108ac
  427349:	xor    edi,eax
  42734b:	mov    edx,0x3272f3
  427350:	xor    ecx,eax
  427352:	add    edi,edx
  427354:	add    ecx,edx
  427356:	imul   edi,ecx
  427359:	jmp    0x4273a1
  42735b:	mov    ecx,DWORD PTR [ebp-0x8]
  42735e:	mov    esi,DWORD PTR [ebp-0x4]
  427361:	xor    ecx,eax
  427363:	xor    esi,eax
  427365:	add    ecx,edx
  427367:	add    esi,edx
  427369:	test   esi,ecx
  42736b:	mov    esi,DWORD PTR [ebp-0x8]
  42736e:	mov    ecx,DWORD PTR [ebp-0x4]
  427371:	je     0x427388
  427373:	xor    ecx,eax
  427375:	xor    esi,eax
  427377:	add    ecx,edx
  427379:	add    esi,edx
  42737b:	shr    esi,cl
  42737d:	mov    ecx,DWORD PTR [ebp-0x14]
  427380:	xor    ecx,eax
  427382:	add    ecx,edx
  427384:	xor    esi,ecx
  427386:	jmp    0x427392
  427388:	xor    esi,eax
  42738a:	xor    ecx,eax
  42738c:	add    esi,edx
  42738e:	add    ecx,edx
  427390:	shr    esi,cl
  427392:	mov    DWORD PTR [ebp-0x8],esi
  427395:	mov    ecx,DWORD PTR [ebp-0x4]
  427398:	xor    ecx,eax
  42739a:	lea    edi,[edi+ecx*1+0x3272f3]
  4273a1:	mov    ecx,DWORD PTR [ebp-0xc]
  4273a4:	mov    esi,DWORD PTR [ebp-0x4]
  4273a7:	xor    esi,eax
  4273a9:	xor    ecx,eax
  4273ab:	sub    ecx,esi
  4273ad:	cmp    edi,ecx
  4273af:	jbe    0x42735b
  4273b1:	mov    eax,DWORD PTR [ebp-0x8]
  4273b4:	pop    edi
  4273b5:	mov    DWORD PTR [ebx],eax
  4273b7:	mov    eax,DWORD PTR [ebp-0x8]
  4273ba:	pop    esi
  4273bb:	leave  
  4273bc:	ret    
  4273bd:	push   ebp
  4273be:	mov    ebp,esp
  4273c0:	sub    esp,0x38
  4273c3:	push   ebx
  4273c4:	mov    ebx,0xf89c85a1
  4273c9:	mov    DWORD PTR [ebp-0x4],ebx
  4273cc:	lea    ecx,[ebx+0x1]
  4273cf:	mov    DWORD PTR [ebp-0x24],ecx
  4273d2:	mov    eax,DWORD PTR [ebp-0x4]
  4273d5:	mov    edx,DWORD PTR [ebp+0x8]
  4273d8:	push   esi
  4273d9:	mov    esi,0x75108ac
  4273de:	xor    eax,esi
  4273e0:	push   edi
  4273e1:	mov    edi,0x3272f3
  4273e6:	add    eax,edi
  4273e8:	cmp    edx,eax
  4273ea:	mov    eax,DWORD PTR [ebp-0x4]
  4273ed:	je     0x427552
  4273f3:	mov    edx,DWORD PTR [ebp+0xc]
  4273f6:	xor    eax,esi
  4273f8:	add    eax,edi
  4273fa:	cmp    edx,eax
  4273fc:	je     0x42754f
  427402:	mov    eax,DWORD PTR [ebp+0x10]
  427405:	mov    edx,DWORD PTR [ebp+0xc]
  427408:	mov    DWORD PTR [ebp-0x14],eax
  42740b:	mov    eax,DWORD PTR [ebp+0x8]
  42740e:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  427415:	mov    DWORD PTR [ebp-0xc],eax
  427418:	lea    eax,[ebx+0x2]
  42741b:	mov    DWORD PTR [ebp-0x1c],eax
  42741e:	mov    DWORD PTR [ebp-0x10],ebx
  427421:	mov    DWORD PTR [ebp+0xc],ecx
  427424:	mov    DWORD PTR [ebp+0x10],eax
  427427:	mov    eax,DWORD PTR [ebp+0xc]
  42742a:	xor    eax,esi
  42742c:	mov    DWORD PTR [ebp-0x20],edx
  42742f:	sub    edx,eax
  427431:	sub    edx,edi
  427433:	mov    DWORD PTR [ebp+0x8],edx
  427436:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  42743d:	jmp    0x42753f
  427442:	mov    eax,DWORD PTR [ebp+0xc]
  427445:	mov    ecx,DWORD PTR [ebp+0xc]
  427448:	xor    eax,esi
  42744a:	xor    ecx,esi
  42744c:	lea    ecx,[eax+ecx*1+0x64e5e6]
  427453:	mov    eax,DWORD PTR [ebp+0x8]
  427456:	xor    edx,edx
  427458:	div    ecx
  42745a:	mov    eax,DWORD PTR [ebp+0x10]
  42745d:	mov    ecx,DWORD PTR [ebp+0xc]
  427460:	xor    eax,esi
  427462:	xor    ecx,esi
  427464:	sub    eax,ecx
  427466:	cmp    edx,eax
  427468:	jne    0x4274fe
  42746e:	mov    eax,DWORD PTR [ebp+0x8]
  427471:	mov    ecx,DWORD PTR [ebp-0xc]
  427474:	mov    dl,BYTE PTR [eax+ecx*1]
  427477:	mov    eax,DWORD PTR [ebp-0x10]
  42747a:	mov    ecx,DWORD PTR [ebp-0x8]
  42747d:	xor    eax,esi
  42747f:	xor    ecx,esi
  427481:	add    eax,edi
  427483:	add    ecx,edi
  427485:	cmp    eax,ecx
  427487:	jae    0x4274cf
  427489:	lea    ecx,[eax-0x3272f3]
  42748f:	mov    DWORD PTR [ebp-0x4],ecx
  427492:	mov    ebx,DWORD PTR [ebp-0x4]
  427495:	xor    ebx,esi
  427497:	add    ebx,0x7f55d8e3
  42749d:	lea    ecx,[ebp+eax*4-0x38]
  4274a1:	mov    DWORD PTR [ecx],ebx
  4274a3:	mov    ebx,DWORD PTR [ecx]
  4274a5:	cmp    ebx,0x244ecb9c
  4274ab:	jbe    0x4274b5
  4274ad:	add    DWORD PTR [ecx],0x405fcdd
  4274b3:	jmp    0x4274bb
  4274b5:	add    DWORD PTR [ecx],0xfdaf4323
  4274bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4274be:	xor    ecx,esi
  4274c0:	inc    eax
  4274c1:	inc    DWORD PTR [ebp-0x4]
  4274c4:	add    ecx,edi
  4274c6:	cmp    eax,ecx
  4274c8:	jb     0x427492
  4274ca:	mov    ebx,0xf89c85a1
  4274cf:	cmp    DWORD PTR [ebp-0x14],0x0
  4274d3:	jne    0x4274dd
  4274d5:	xor    dl,0x7d
  4274d8:	add    dl,0x2
  4274db:	jmp    0x4274f3
  4274dd:	mov    eax,DWORD PTR [ebp-0x18]
  4274e0:	xor    al,0xac
  4274e2:	mov    cl,0xd
  4274e4:	sub    cl,al
  4274e6:	add    dl,cl
  4274e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4274eb:	xor    cl,0xac
  4274ee:	sub    cl,0xd
  4274f1:	ror    dl,cl
  4274f3:	xor    eax,eax
  4274f5:	mov    eax,DWORD PTR [ebp+0x8]
  4274f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4274fb:	mov    BYTE PTR [eax+ecx*1],dl
  4274fe:	mov    eax,DWORD PTR [ebp+0x8]
  427501:	mov    ecx,DWORD PTR [ebp-0x10]
  427504:	sub    eax,edi
  427506:	xor    eax,esi
  427508:	cmp    eax,ecx
  42750a:	jne    0x42752d
  42750c:	mov    eax,DWORD PTR [ebp+0x10]
  42750f:	mov    ecx,DWORD PTR [ebp+0xc]
  427512:	xor    eax,esi
  427514:	xor    ecx,esi
  427516:	sub    eax,ecx
  427518:	mov    ecx,DWORD PTR [ebp-0x20]
  42751b:	sub    eax,edi
  42751d:	xor    eax,esi
  42751f:	mov    DWORD PTR [ebp+0x10],eax
  427522:	mov    eax,DWORD PTR [ebp+0xc]
  427525:	xor    eax,esi
  427527:	sub    ecx,eax
  427529:	sub    ecx,edi
  42752b:	jmp    0x42753c
  42752d:	mov    eax,DWORD PTR [ebp+0xc]
  427530:	xor    eax,esi
  427532:	mov    ecx,0xffcd8d0d
  427537:	sub    ecx,eax
  427539:	add    ecx,DWORD PTR [ebp+0x8]
  42753c:	mov    DWORD PTR [ebp+0x8],ecx
  42753f:	mov    eax,DWORD PTR [ebp+0x10]
  427542:	cmp    eax,ebx
  427544:	jne    0x427442
  42754a:	mov    eax,DWORD PTR [ebp-0x24]
  42754d:	jmp    0x427552
  42754f:	mov    eax,DWORD PTR [ebp-0x4]
  427552:	xor    eax,esi
  427554:	add    eax,edi
  427556:	pop    edi
  427557:	pop    esi
  427558:	pop    ebx
  427559:	leave  
  42755a:	ret    0xc
  42755d:	push   ebp
  42755e:	mov    ebp,esp
  427560:	sub    esp,0x420
  427566:	mov    DWORD PTR [ebp-0x14],0xf89c85a1
  42756d:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427574:	mov    DWORD PTR [ebp-0x18],0xf89c86a1
  42757b:	push   ebx
  42757c:	mov    DWORD PTR [ebp-0x1c],0xf89c85a0
  427583:	mov    eax,DWORD PTR [ebp-0x14]
  427586:	push   esi
  427587:	mov    esi,0x75108ac
  42758c:	push   edi
  42758d:	xor    eax,esi
  42758f:	mov    edi,0x3272f3
  427594:	add    eax,edi
  427596:	mov    DWORD PTR [ebp-0x8],eax
  427599:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4275a0:	mov    DWORD PTR [ebp-0x4],0xead71881
  4275a7:	mov    DWORD PTR [ebp-0x10],0x8
  4275ae:	mov    ecx,ecx
  4275b0:	mov    eax,DWORD PTR [ebp-0xc]
  4275b3:	mov    ecx,DWORD PTR [ebp-0x14]
  4275b6:	xor    eax,esi
  4275b8:	xor    ecx,esi
  4275ba:	add    eax,edi
  4275bc:	add    ecx,edi
  4275be:	imul   eax,ecx
  4275c1:	jmp    0x4275f4
  4275c3:	mov    eax,DWORD PTR [ebp-0x4]
  4275c6:	sub    eax,edi
  4275c8:	xor    eax,esi
  4275ca:	mov    DWORD PTR [ebp-0x8],eax
  4275cd:	lea    ebx,[ebp-0x8]
  4275d0:	call   0x427315
  4275d5:	mov    DWORD PTR [ebp-0x8],eax
  4275d8:	mov    eax,DWORD PTR [ebp-0x8]
  4275db:	mov    ecx,DWORD PTR [ebp-0x4]
  4275de:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  4275e5:	mov    eax,DWORD PTR [ebp-0xc]
  4275e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4275eb:	xor    eax,esi
  4275ed:	lea    eax,[eax+ecx*1+0x3272f3]
  4275f4:	mov    DWORD PTR [ebp-0x4],eax
  4275f7:	mov    eax,DWORD PTR [ebp-0x18]
  4275fa:	mov    ecx,DWORD PTR [ebp-0xc]
  4275fd:	xor    ecx,esi
  4275ff:	xor    eax,esi
  427601:	sub    eax,ecx
  427603:	mov    ecx,DWORD PTR [ebp-0x4]
  427606:	cmp    ecx,eax
  427608:	jbe    0x4275c3
  42760a:	mov    eax,DWORD PTR [ebp-0x1c]
  42760d:	xor    eax,esi
  42760f:	add    eax,edi
  427611:	mov    DWORD PTR [ebp-0x8],eax
  427614:	mov    DWORD PTR [ebp-0x18],0xf89c86a0
  42761b:	mov    ebx,ebx
  42761d:	jmp    0x427680
  42761f:	mov    ecx,DWORD PTR [ebp-0x20]
  427622:	mov    eax,DWORD PTR [ebp-0x8]
  427625:	xor    ecx,esi
  427627:	add    ecx,edi
  427629:	shr    eax,cl
  42762b:	mov    DWORD PTR [ebp-0x4],eax
  42762e:	mov    eax,DWORD PTR [ebp+0x8]
  427631:	mov    cl,BYTE PTR [eax]
  427633:	mov    BYTE PTR [ebp+0xb],cl
  427636:	mov    cl,BYTE PTR [ebp+0xb]
  427639:	mov    edx,DWORD PTR [ebp-0x8]
  42763c:	movzx  ecx,cl
  42763f:	xor    ecx,edx
  427641:	mov    DWORD PTR [ebp+0x8],ecx
  427644:	mov    ecx,DWORD PTR [ebp-0x18]
  427647:	mov    edx,DWORD PTR [ebp+0x8]
  42764a:	xor    ecx,esi
  42764c:	add    ecx,edi
  42764e:	and    ecx,edx
  427650:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  427657:	mov    edx,DWORD PTR [ebp-0x4]
  42765a:	xor    ecx,edx
  42765c:	mov    DWORD PTR [ebp-0x8],ecx
  42765f:	mov    ecx,DWORD PTR [ebp-0xc]
  427662:	xor    ecx,esi
  427664:	lea    eax,[eax+ecx*1+0x3272f3]
  42766b:	mov    DWORD PTR [ebp+0x8],eax
  42766e:	mov    eax,DWORD PTR [ebp-0xc]
  427671:	xor    eax,esi
  427673:	mov    ecx,0xffcd8d0d
  427678:	sub    ecx,eax
  42767a:	add    ecx,DWORD PTR [ebp-0x10]
  42767d:	mov    DWORD PTR [ebp-0x10],ecx
  427680:	mov    eax,DWORD PTR [ebp-0x14]
  427683:	mov    ecx,DWORD PTR [ebp-0x10]
  427686:	xor    eax,esi
  427688:	add    eax,edi
  42768a:	cmp    ecx,eax
  42768c:	jne    0x42761f
  42768e:	mov    eax,DWORD PTR [ebp-0x1c]
  427691:	mov    ecx,DWORD PTR [ebp-0x8]
  427694:	xor    eax,esi
  427696:	add    eax,edi
  427698:	pop    edi
  427699:	pop    esi
  42769a:	xor    eax,ecx
  42769c:	pop    ebx
  42769d:	leave  
  42769e:	ret    0x4
  4276a1:	push   ebp
  4276a2:	mov    ebp,esp
  4276a4:	mov    eax,DWORD PTR [ebp+0x1c]
  4276a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4276aa:	mov    edx,DWORD PTR [ebp+0x10]
  4276ad:	mov    eax,DWORD PTR [eax+0x190]
  4276b3:	mov    eax,DWORD PTR [eax]
  4276b5:	sub    esp,0x64
  4276b8:	push   ebx
  4276b9:	push   esi
  4276ba:	push   edi
  4276bb:	mov    edi,0x75108ac
  4276c0:	xor    ecx,edi
  4276c2:	mov    ebx,0x3272f3
  4276c7:	add    ecx,ebx
  4276c9:	cmp    ecx,edx
  4276cb:	jne    0x4276dc
  4276cd:	or     DWORD PTR ds:0x3750c3f,0x4263eb28
  4276d7:	jmp    0x427bd8
  4276dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4276df:	mov    esi,DWORD PTR [ebp+0x14]
  4276e2:	mov    edx,DWORD PTR [esi]
  4276e4:	xor    ecx,edi
  4276e6:	add    ecx,ebx
  4276e8:	cmp    edx,ecx
  4276ea:	je     0x427b93
  4276f0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4276f3:	mov    DWORD PTR [ebp-0x1c],eax
  4276f6:	mov    DWORD PTR [ebp+0x1c],ecx
  4276f9:	mov    ecx,DWORD PTR [ebp+0x18]
  4276fc:	mov    eax,DWORD PTR [esi]
  4276fe:	mov    DWORD PTR [ebp-0x20],eax
  427701:	mov    DWORD PTR [ebp+0x8],0xf89c85a1
  427708:	mov    edx,0xf89c85a2
  42770d:	mov    DWORD PTR [ebp-0x8],edx
  427710:	mov    eax,DWORD PTR [ebp+0x1c]
  427713:	mov    DWORD PTR [ebp+0x1c],eax
  427716:	mov    eax,DWORD PTR [ebp+0x1c]
  427719:	mov    eax,DWORD PTR [eax+0x190]
  42771f:	mov    eax,DWORD PTR [eax]
  427721:	mov    DWORD PTR [ebp-0x24],ecx
  427724:	mov    ecx,DWORD PTR [ebp+0x1c]
  427727:	mov    ecx,DWORD PTR [ecx+0x190]
  42772d:	mov    ecx,DWORD PTR [ecx]
  42772f:	add    ecx,DWORD PTR [eax+0x3c]
  427732:	mov    DWORD PTR [ebp+0x10],ecx
  427735:	mov    eax,DWORD PTR [ebp+0x8]
  427738:	xor    eax,edi
  42773a:	add    eax,ebx
  42773c:	mov    DWORD PTR [ebp-0x4],eax
  42773f:	mov    eax,DWORD PTR [ebp+0x8]
  427742:	xor    eax,edi
  427744:	add    eax,ebx
  427746:	mov    DWORD PTR [ebp+0x18],eax
  427749:	mov    eax,DWORD PTR [ebp+0x10]
  42774c:	mov    eax,DWORD PTR [eax+0x50]
  42774f:	sub    eax,0xc
  427752:	mov    DWORD PTR [ebp-0x28],eax
  427755:	mov    eax,DWORD PTR [ebp+0x10]
  427758:	mov    eax,DWORD PTR [eax+0x38]
  42775b:	mov    ecx,DWORD PTR [ebp+0x10]
  42775e:	dec    eax
  42775f:	test   DWORD PTR [ecx+0x54],eax
  427762:	mov    eax,DWORD PTR [ebp+0x10]
  427765:	je     0x42777f
  427767:	mov    eax,DWORD PTR [eax+0x38]
  42776a:	mov    ecx,DWORD PTR [ebp+0x10]
  42776d:	mov    ecx,DWORD PTR [ecx+0x54]
  427770:	dec    eax
  427771:	not    eax
  427773:	and    ecx,eax
  427775:	mov    eax,DWORD PTR [ebp+0x10]
  427778:	mov    eax,DWORD PTR [eax+0x38]
  42777b:	add    eax,ecx
  42777d:	jmp    0x427782
  42777f:	mov    eax,DWORD PTR [eax+0x54]
  427782:	mov    DWORD PTR [ebp+0x1c],eax
  427785:	mov    eax,DWORD PTR [ebp+0x8]
  427788:	xor    eax,edi
  42778a:	add    eax,ebx
  42778c:	mov    DWORD PTR [ebp+0x18],eax
  42778f:	mov    eax,DWORD PTR [ebp+0x8]
  427792:	xor    eax,edi
  427794:	add    eax,ebx
  427796:	mov    DWORD PTR [ebp+0x18],eax
  427799:	mov    eax,DWORD PTR [ebp+0x8]
  42779c:	mov    ecx,DWORD PTR [ebp-0x24]
  42779f:	xor    eax,edi
  4277a1:	add    eax,ebx
  4277a3:	mov    DWORD PTR [ecx],eax
  4277a5:	mov    DWORD PTR [ebp+0x18],edx
  4277a8:	mov    DWORD PTR [ebp+0x18],0xf89c85a3
  4277af:	mov    DWORD PTR [ebp+0x18],0xf89c85bc
  4277b6:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  4277bd:	mov    eax,DWORD PTR [ebp-0x8]
  4277c0:	mov    ecx,DWORD PTR [ebp+0x1c]
  4277c3:	xor    eax,edi
  4277c5:	add    eax,ebx
  4277c7:	imul   eax,ecx
  4277ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4277cd:	mov    edx,DWORD PTR [ebp-0x28]
  4277d0:	xor    ecx,edi
  4277d2:	lea    ecx,[ecx+edx*1+0x3272f3]
  4277d9:	cmp    eax,ecx
  4277db:	jae    0x427b8c
  4277e1:	mov    eax,DWORD PTR [ebp+0x8]
  4277e4:	xor    eax,edi
  4277e6:	add    eax,ebx
  4277e8:	mov    DWORD PTR [ebp+0x18],eax
  4277eb:	mov    eax,DWORD PTR [ebp+0x1c]
  4277ee:	add    eax,DWORD PTR [ebp-0x1c]
  4277f1:	mov    DWORD PTR [ebp-0x4],eax
  4277f4:	push   DWORD PTR [ebp-0x4]
  4277f7:	mov    esi,DWORD PTR [ebp-0x1c]
  4277fa:	mov    ecx,DWORD PTR [ebp+0x10]
  4277fd:	call   0x42694d
  427802:	mov    DWORD PTR [ebp+0xc],eax
  427805:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  42780c:	mov    eax,DWORD PTR [ebp-0x18]
  42780f:	xor    eax,edi
  427811:	lea    ecx,[ebp-0x40]
  427814:	add    eax,ebx
  427816:	push   ecx
  427817:	call   0x426ee1
  42781c:	mov    eax,DWORD PTR [ebp+0xc]
  42781f:	test   eax,eax
  427821:	je     0x427871
  427823:	mov    eax,DWORD PTR [ebp-0x18]
  427826:	xor    eax,edi
  427828:	add    eax,ebx
  42782a:	push   eax
  42782b:	push   DWORD PTR [ebp+0xc]
  42782e:	lea    eax,[ebp-0x40]
  427831:	push   eax
  427832:	call   0x426dd7
  427837:	mov    eax,DWORD PTR [ebp-0x4]
  42783a:	mov    DWORD PTR [ebp-0x18],eax
  42783d:	mov    eax,DWORD PTR [ebp-0x18]
  427840:	mov    ecx,DWORD PTR [ebp-0x1c]
  427843:	sub    eax,ecx
  427845:	mov    DWORD PTR [ebp-0x18],eax
  427848:	mov    eax,DWORD PTR [ebp+0xc]
  42784b:	mov    ecx,DWORD PTR [ebp+0xc]
  42784e:	mov    eax,DWORD PTR [eax+0x10]
  427851:	add    eax,DWORD PTR [ecx+0xc]
  427854:	mov    ecx,DWORD PTR [ebp-0x18]
  427857:	cmp    ecx,eax
  427859:	jb     0x427871
  42785b:	mov    eax,DWORD PTR [ebp+0xc]
  42785e:	mov    eax,DWORD PTR [eax+0xc]
  427861:	mov    ecx,DWORD PTR [ebp+0xc]
  427864:	add    eax,DWORD PTR [ecx+0x8]
  427867:	mov    ecx,DWORD PTR [ebp-0x18]
  42786a:	sub    eax,ecx
  42786c:	jmp    0x427b5f
  427871:	push   0xc
  427873:	push   DWORD PTR [ebp-0x4]
  427876:	lea    eax,[ebp-0x4c]
  427879:	push   eax
  42787a:	call   0x426dd7
  42787f:	mov    eax,0xf89c85a1
  427884:	mov    DWORD PTR [ebp-0x2c],eax
  427887:	mov    DWORD PTR [ebp-0x30],0xf89c85a2
  42788e:	mov    DWORD PTR [ebp-0x34],0xf89c85a3
  427895:	mov    DWORD PTR [ebp-0x38],0xf89c85bc
  42789c:	lea    ecx,[ebp-0x2c]
  42789f:	mov    DWORD PTR [ebp-0xc],ecx
  4278a2:	lea    ecx,[ebp-0x30]
  4278a5:	mov    DWORD PTR [ebp-0x10],ecx
  4278a8:	lea    ecx,[ebp-0x34]
  4278ab:	mov    DWORD PTR [ebp+0xc],ecx
  4278ae:	lea    ecx,[ebp-0x38]
  4278b1:	mov    DWORD PTR [ebp-0x14],ecx
  4278b4:	mov    ecx,DWORD PTR [ebp+0x8]
  4278b7:	xor    ecx,edi
  4278b9:	add    ecx,ebx
  4278bb:	mov    DWORD PTR [ebp-0x18],ecx
  4278be:	jmp    0x427aba
  4278c3:	cmp    eax,0xf89c85a3
  4278c8:	je     0x427acc
  4278ce:	mov    ecx,DWORD PTR [ebp-0x8]
  4278d1:	xor    ecx,edi
  4278d3:	mov    esi,eax
  4278d5:	add    ecx,ebx
  4278d7:	mov    DWORD PTR [ebp+0x18],ecx
  4278da:	mov    eax,DWORD PTR [ebp-0x18]
  4278dd:	xor    esi,edi
  4278df:	lea    eax,[eax+esi*1+0x3272f3]
  4278e6:	mov    DWORD PTR [ebp-0x18],eax
  4278e9:	mov    eax,DWORD PTR [ebp-0x8]
  4278ec:	mov    ecx,DWORD PTR [ebp-0x18]
  4278ef:	xor    eax,edi
  4278f1:	add    eax,ebx
  4278f3:	cmp    ecx,eax
  4278f5:	jne    0x42790a
  4278f7:	mov    eax,DWORD PTR [ebp+0x8]
  4278fa:	xor    eax,edi
  4278fc:	add    eax,ebx
  4278fe:	push   eax
  4278ff:	push   0xc
  427901:	lea    eax,[ebp-0x4c]
  427904:	push   eax
  427905:	call   0x4273bd
  42790a:	mov    eax,DWORD PTR [ebp-0xc]
  42790d:	mov    eax,DWORD PTR [eax]
  42790f:	xor    eax,edi
  427911:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427918:	mov    ecx,DWORD PTR [ebp+0x8]
  42791b:	xor    ecx,edi
  42791d:	movzx  eax,al
  427920:	add    ecx,ebx
  427922:	cmp    eax,ecx
  427924:	je     0x427aa2
  42792a:	mov    eax,DWORD PTR [ebp-0x10]
  42792d:	mov    eax,DWORD PTR [eax]
  42792f:	xor    eax,edi
  427931:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427938:	mov    ecx,DWORD PTR [ebp+0x8]
  42793b:	xor    ecx,edi
  42793d:	movzx  eax,al
  427940:	add    ecx,ebx
  427942:	cmp    eax,ecx
  427944:	je     0x427aa2
  42794a:	mov    eax,DWORD PTR [ebp+0xc]
  42794d:	mov    eax,DWORD PTR [eax]
  42794f:	xor    eax,edi
  427951:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427958:	mov    ecx,DWORD PTR [ebp+0x8]
  42795b:	xor    ecx,edi
  42795d:	movzx  eax,al
  427960:	add    ecx,ebx
  427962:	cmp    eax,ecx
  427964:	je     0x427aa2
  42796a:	mov    eax,DWORD PTR [ebp-0x14]
  42796d:	mov    eax,DWORD PTR [eax]
  42796f:	xor    eax,edi
  427971:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427978:	mov    ecx,DWORD PTR [ebp+0x8]
  42797b:	xor    ecx,edi
  42797d:	movzx  eax,al
  427980:	add    ecx,ebx
  427982:	cmp    eax,ecx
  427984:	je     0x427aa2
  42798a:	mov    eax,DWORD PTR [ebp-0x10]
  42798d:	mov    eax,DWORD PTR [eax]
  42798f:	xor    eax,edi
  427991:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427998:	mov    ecx,DWORD PTR [ebp-0xc]
  42799b:	mov    ecx,DWORD PTR [ecx]
  42799d:	xor    ecx,edi
  42799f:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279a6:	xor    al,cl
  4279a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4279ab:	mov    ecx,DWORD PTR [ecx]
  4279ad:	xor    ecx,edi
  4279af:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279b6:	or     al,cl
  4279b8:	mov    ecx,DWORD PTR [ebp-0xc]
  4279bb:	mov    ecx,DWORD PTR [ecx]
  4279bd:	xor    ecx,edi
  4279bf:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  4279c6:	cmp    cl,al
  4279c8:	jne    0x427aa2
  4279ce:	mov    eax,DWORD PTR [ebp+0xc]
  4279d1:	mov    eax,DWORD PTR [eax]
  4279d3:	xor    eax,edi
  4279d5:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  4279dc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279df:	mov    ecx,DWORD PTR [ecx]
  4279e1:	xor    ecx,edi
  4279e3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279ea:	xor    al,cl
  4279ec:	mov    ecx,DWORD PTR [ebp-0x14]
  4279ef:	mov    ecx,DWORD PTR [ecx]
  4279f1:	xor    ecx,edi
  4279f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  4279fa:	or     al,cl
  4279fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4279ff:	mov    ecx,DWORD PTR [ecx]
  427a01:	xor    ecx,edi
  427a03:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a0a:	cmp    cl,al
  427a0c:	jne    0x427aa2
  427a12:	mov    eax,DWORD PTR [ebp-0x14]
  427a15:	mov    eax,DWORD PTR [eax]
  427a17:	xor    eax,edi
  427a19:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a20:	mov    ecx,DWORD PTR [ebp+0xc]
  427a23:	mov    ecx,DWORD PTR [ecx]
  427a25:	xor    ecx,edi
  427a27:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a2e:	xor    al,cl
  427a30:	mov    ecx,DWORD PTR [ebp-0xc]
  427a33:	mov    ecx,DWORD PTR [ecx]
  427a35:	xor    ecx,edi
  427a37:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a3e:	or     al,cl
  427a40:	mov    ecx,DWORD PTR [ebp+0xc]
  427a43:	mov    ecx,DWORD PTR [ecx]
  427a45:	xor    ecx,edi
  427a47:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a4e:	cmp    cl,al
  427a50:	jne    0x427aa2
  427a52:	mov    eax,DWORD PTR [ebp-0x14]
  427a55:	mov    eax,DWORD PTR [eax]
  427a57:	xor    eax,edi
  427a59:	mov    al,BYTE PTR [ebp+eax*1+0x3272a7]
  427a60:	mov    ecx,DWORD PTR [ebp-0xc]
  427a63:	mov    ecx,DWORD PTR [ecx]
  427a65:	xor    ecx,edi
  427a67:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a6e:	xor    al,cl
  427a70:	mov    ecx,DWORD PTR [ebp-0x10]
  427a73:	mov    ecx,DWORD PTR [ecx]
  427a75:	xor    ecx,edi
  427a77:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272a7]
  427a7e:	or     al,cl
  427a80:	mov    ecx,DWORD PTR [ebp-0x14]
  427a83:	mov    ecx,DWORD PTR [ecx]
  427a85:	xor    ecx,edi
  427a87:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ab]
  427a8e:	cmp    cl,al
  427a90:	jne    0x427aa2
  427a92:	lea    eax,[ebp-0x4c]
  427a95:	push   eax
  427a96:	call   0x42755d
  427a9b:	mov    ecx,DWORD PTR [ebp-0x44]
  427a9e:	cmp    eax,ecx
  427aa0:	je     0x427aac
  427aa2:	mov    eax,DWORD PTR [ebp+0x8]
  427aa5:	xor    eax,edi
  427aa7:	add    eax,ebx
  427aa9:	mov    DWORD PTR [ebp+0x18],eax
  427aac:	mov    eax,DWORD PTR [ebp-0x8]
  427aaf:	xor    eax,edi
  427ab1:	lea    eax,[eax+esi*1+0x3272f3]
  427ab8:	xor    eax,edi
  427aba:	mov    ecx,DWORD PTR [ebp+0x8]
  427abd:	mov    edx,DWORD PTR [ebp+0x18]
  427ac0:	xor    ecx,edi
  427ac2:	add    ecx,ebx
  427ac4:	cmp    edx,ecx
  427ac6:	je     0x4278c3
  427acc:	mov    eax,DWORD PTR [ebp+0x8]
  427acf:	mov    ecx,DWORD PTR [ebp+0x18]
  427ad2:	xor    eax,edi
  427ad4:	add    eax,ebx
  427ad6:	cmp    ecx,eax
  427ad8:	jne    0x427aeb
  427ada:	mov    eax,DWORD PTR [ebp-0x8]
  427add:	mov    ecx,DWORD PTR [ebp+0x1c]
  427ae0:	xor    eax,edi
  427ae2:	lea    eax,[eax+ecx*1+0x3272f3]
  427ae9:	jmp    0x427b62
  427aeb:	push   0x18
  427aed:	push   DWORD PTR [ebp-0x4]
  427af0:	lea    eax,[ebp-0x64]
  427af3:	push   eax
  427af4:	call   0x426dd7
  427af9:	mov    eax,DWORD PTR [ebp+0x8]
  427afc:	mov    ecx,DWORD PTR [ebp-0x18]
  427aff:	xor    eax,edi
  427b01:	add    eax,ebx
  427b03:	cmp    eax,ecx
  427b05:	je     0x427b1a
  427b07:	mov    eax,DWORD PTR [ebp+0x8]
  427b0a:	xor    eax,edi
  427b0c:	add    eax,ebx
  427b0e:	push   eax
  427b0f:	push   0x18
  427b11:	lea    eax,[ebp-0x64]
  427b14:	push   eax
  427b15:	call   0x4273bd
  427b1a:	mov    eax,DWORD PTR [ebp-0x4]
  427b1d:	add    eax,0x18
  427b20:	mov    DWORD PTR [ebp+0x18],eax
  427b23:	push   DWORD PTR [ebp-0x50]
  427b26:	push   DWORD PTR [ebp+0x18]
  427b29:	mov    eax,DWORD PTR [ebp-0x54]
  427b2c:	add    eax,DWORD PTR [ebp-0x20]
  427b2f:	push   eax
  427b30:	call   0x426dd7
  427b35:	mov    eax,DWORD PTR [ebp+0x8]
  427b38:	mov    ecx,DWORD PTR [ebp-0x18]
  427b3b:	xor    eax,edi
  427b3d:	add    eax,ebx
  427b3f:	cmp    eax,ecx
  427b41:	je     0x427b54
  427b43:	push   0x0
  427b45:	push   DWORD PTR [ebp-0x50]
  427b48:	mov    eax,DWORD PTR [ebp-0x54]
  427b4b:	add    eax,DWORD PTR [ebp-0x20]
  427b4e:	push   eax
  427b4f:	call   0x4273bd
  427b54:	mov    eax,DWORD PTR [ebp-0x24]
  427b57:	mov    ecx,DWORD PTR [ebp-0x50]
  427b5a:	add    DWORD PTR [eax],ecx
  427b5c:	mov    eax,DWORD PTR [ebp-0x50]
  427b5f:	add    eax,DWORD PTR [ebp+0x1c]
  427b62:	mov    DWORD PTR [ebp+0x1c],eax
  427b65:	mov    eax,DWORD PTR [ebp-0x8]
  427b68:	mov    ecx,DWORD PTR [ebp+0x1c]
  427b6b:	xor    eax,edi
  427b6d:	add    eax,ebx
  427b6f:	imul   eax,ecx
  427b72:	mov    ecx,DWORD PTR [ebp+0x8]
  427b75:	mov    edx,DWORD PTR [ebp-0x28]
  427b78:	xor    ecx,edi
  427b7a:	lea    ecx,[ecx+edx*1+0x3272f3]
  427b81:	cmp    eax,ecx
  427b83:	jb     0x4277e1
  427b89:	mov    esi,DWORD PTR [ebp+0x14]
  427b8c:	mov    eax,DWORD PTR [ebp-0x20]
  427b8f:	mov    DWORD PTR [esi],eax
  427b91:	jmp    0x427bd8
  427b93:	mov    ecx,DWORD PTR [ebp+0x8]
  427b96:	mov    edx,DWORD PTR [ebp+0xc]
  427b99:	xor    ecx,edi
  427b9b:	xor    edx,edi
  427b9d:	add    ecx,ebx
  427b9f:	add    edx,ebx
  427ba1:	cmp    ecx,edx
  427ba3:	jne    0x427bb7
  427ba5:	mov    eax,ds:0x7f642dd8
  427baa:	imul   eax,eax,0x9f15fccf
  427bb0:	mov    ds:0x7f642dd8,eax
  427bb5:	jmp    0x427bd8
  427bb7:	mov    ecx,DWORD PTR [ebp+0x8]
  427bba:	xor    ecx,edi
  427bbc:	add    ecx,ebx
  427bbe:	cmp    eax,ecx
  427bc0:	je     0x427bce
  427bc2:	sub    DWORD PTR ds:0xf861e38,0x709beac8
  427bcc:	jmp    0x427bd8
  427bce:	and    DWORD PTR ds:0x3343fad8,0x5265ec3f
  427bd8:	pop    edi
  427bd9:	pop    esi
  427bda:	pop    ebx
  427bdb:	leave  
  427bdc:	ret    0x18
  427bdf:	push   ebp
  427be0:	mov    ebp,esp
  427be2:	and    esp,0xfffffff8
  427be5:	mov    eax,DWORD PTR [ebp+0x20]
  427be8:	sub    esp,0x14
  427beb:	push   ebx
  427bec:	mov    ebx,DWORD PTR [ebp+0x14]
  427bef:	push   esi
  427bf0:	push   edi
  427bf1:	cmp    eax,0xf89c85a1
  427bf6:	jne    0x427c02
  427bf8:	push   0xf89c85a2
  427bfd:	jmp    0x427d34
  427c02:	mov    eax,DWORD PTR [ebp+0x20]
  427c05:	cmp    eax,0xf89c85a2
  427c0a:	jne    0x427c16
  427c0c:	push   0xf89c85a3
  427c11:	jmp    0x427d34
  427c16:	mov    eax,DWORD PTR [ebp+0x20]
  427c19:	cmp    eax,0xf89c85a3
  427c1e:	jne    0x427c2a
  427c20:	push   0xf89c85bc
  427c25:	jmp    0x427d34
  427c2a:	mov    eax,DWORD PTR [ebp+0x20]
  427c2d:	cmp    eax,0xf89c85bc
  427c32:	jne    0x427c3e
  427c34:	push   0xf89c85bd
  427c39:	jmp    0x427d34
  427c3e:	mov    ecx,DWORD PTR [ebp+0x20]
  427c41:	mov    eax,0xf89c85b8
  427c46:	cmp    ecx,eax
  427c48:	jne    0x427d04
  427c4e:	mov    eax,DWORD PTR [ebp+0x10]
  427c51:	mov    DWORD PTR [esp+0xc],eax
  427c55:	mov    eax,DWORD PTR [ebp+0x18]
  427c58:	mov    DWORD PTR [esp+0x14],eax
  427c5c:	mov    eax,DWORD PTR [ebp+0xc]
  427c5f:	mov    DWORD PTR [esp+0x18],eax
  427c63:	mov    eax,DWORD PTR [ebp+0x8]
  427c66:	mov    DWORD PTR [esp+0x10],eax
  427c6a:	mov    eax,DWORD PTR [esp+0x10]
  427c6e:	mov    ecx,DWORD PTR [esp+0x14]
  427c72:	mov    edi,0x75108ac
  427c77:	xor    eax,edi
  427c79:	mov    esi,0x3272f3
  427c7e:	add    eax,esi
  427c80:	mov    DWORD PTR [ecx],eax
  427c82:	mov    eax,DWORD PTR [esp+0xc]
  427c86:	mov    eax,DWORD PTR [eax+0x194]
  427c8c:	mov    ecx,DWORD PTR [eax]
  427c8e:	mov    eax,DWORD PTR [esp+0xc]
  427c92:	mov    eax,DWORD PTR [eax+0x194]
  427c98:	mov    eax,DWORD PTR [eax]
  427c9a:	add    eax,DWORD PTR [ecx+0x3c]
  427c9d:	mov    ecx,DWORD PTR [esp+0xc]
  427ca1:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427ca7:	mov    ecx,DWORD PTR [ecx+0x14]
  427caa:	push   0x4
  427cac:	push   0x3000
  427cb1:	push   DWORD PTR [eax+0x50]
  427cb4:	push   0x0
  427cb6:	call   ecx
  427cb8:	mov    DWORD PTR [ebx],eax
  427cba:	mov    eax,DWORD PTR [esp+0x10]
  427cbe:	push   DWORD PTR [esp+0xc]
  427cc2:	xor    eax,edi
  427cc4:	add    eax,esi
  427cc6:	mov    DWORD PTR [esp+0x20],eax
  427cca:	lea    eax,[esp+0x20]
  427cce:	push   eax
  427ccf:	push   ebx
  427cd0:	push   DWORD PTR [esp+0x20]
  427cd4:	push   DWORD PTR [esp+0x28]
  427cd8:	push   DWORD PTR [esp+0x24]
  427cdc:	call   0x4276a1
  427ce1:	mov    eax,DWORD PTR [esp+0x10]
  427ce5:	mov    ecx,DWORD PTR [ebx]
  427ce7:	xor    eax,edi
  427ce9:	add    eax,esi
  427ceb:	cmp    ecx,eax
  427ced:	je     0x427d4b
  427cef:	mov    eax,DWORD PTR [esp+0x18]
  427cf3:	mov    ecx,DWORD PTR [esp+0x14]
  427cf7:	xor    eax,edi
  427cf9:	add    eax,esi
  427cfb:	imul   eax,DWORD PTR [esp+0x1c]
  427d00:	mov    DWORD PTR [ecx],eax
  427d02:	jmp    0x427d4b
  427d04:	mov    ecx,DWORD PTR [ebp+0x20]
  427d07:	cmp    ecx,0xf89c85bd
  427d0d:	jne    0x427d16
  427d0f:	push   0xf89c85be
  427d14:	jmp    0x427d34
  427d16:	mov    ecx,DWORD PTR [ebp+0x20]
  427d19:	cmp    ecx,0xf89c85be
  427d1f:	jne    0x427d28
  427d21:	push   0xf89c85bf
  427d26:	jmp    0x427d34
  427d28:	mov    ecx,DWORD PTR [ebp+0x20]
  427d2b:	cmp    ecx,0xf89c85bf
  427d31:	jne    0x427d4b
  427d33:	push   eax
  427d34:	push   DWORD PTR [ebp+0x1c]
  427d37:	push   DWORD PTR [ebp+0x18]
  427d3a:	push   ebx
  427d3b:	push   DWORD PTR [ebp+0x10]
  427d3e:	push   DWORD PTR [ebp+0xc]
  427d41:	push   DWORD PTR [ebp+0x8]
  427d44:	call   0x427bdf
  427d49:	mov    DWORD PTR [ebx],eax
  427d4b:	mov    eax,DWORD PTR [ebx]
  427d4d:	pop    edi
  427d4e:	pop    esi
  427d4f:	pop    ebx
  427d50:	mov    esp,ebp
  427d52:	pop    ebp
  427d53:	ret    0x1c
  427d56:	push   ebp
  427d57:	mov    ebp,esp
  427d59:	sub    esp,0xc
  427d5c:	mov    eax,0xf89c85a1
  427d61:	mov    DWORD PTR [ebp-0x8],eax
  427d64:	mov    DWORD PTR [ebp-0xc],0xf89c85a2
  427d6b:	mov    ecx,DWORD PTR [ebp-0x8]
  427d6e:	xor    ecx,0x75108ac
  427d74:	add    ecx,0x3272f3
  427d7a:	mov    DWORD PTR [ebp-0x4],ecx
  427d7d:	mov    ecx,DWORD PTR [ebp+0xc]
  427d80:	push   eax
  427d81:	mov    DWORD PTR [ebp+0xc],ecx
  427d84:	push   DWORD PTR [ebp+0xc]
  427d87:	lea    eax,[ebp-0x4]
  427d8a:	push   DWORD PTR [ebp+0x8]
  427d8d:	push   eax
  427d8e:	push   DWORD PTR [ebp+0xc]
  427d91:	push   DWORD PTR [ebp-0xc]
  427d94:	push   DWORD PTR [ebp-0x8]
  427d97:	call   0x427bdf
  427d9c:	mov    DWORD PTR [ebp-0x4],eax
  427d9f:	mov    eax,DWORD PTR [ebp-0x4]
  427da2:	leave  
  427da3:	ret    0x8
