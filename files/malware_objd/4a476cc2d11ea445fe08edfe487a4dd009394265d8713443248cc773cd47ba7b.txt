
4a476cc2d11ea445fe08edfe487a4dd009394265d8713443248cc773cd47ba7b.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	xchg   esp,eax
  411001:	add    BYTE PTR [eax],dl
  411003:	add    BYTE PTR [edx+0x10422034],dl
  411009:	inc    edx
  41100a:	inc    eax
  41100b:	add    BYTE PTR [esi],dh
  41100d:	add    ah,BYTE PTR [ebx+0x8]
  411010:	add    BYTE PTR [eax+eax*2+0x204c4081],al
  411017:	add    BYTE PTR [ecx+0x40],0x20
  41101b:	mov    cl,0x8
  41101d:	inc    eax
  41101e:	add    DWORD PTR [eax],eax
  411020:	and    DWORD PTR [ecx],eax
  411022:	add    BYTE PTR [ecx+ebx*1],al
  411025:	sbb    al,0x4
  411027:	or     DWORD PTR [eax+0x40404042],ecx
  41102d:	xor    eax,0x17004e11
  411032:	xchg   edx,eax
  411033:	inc    ecx
  411034:	jp     0x411056
  411036:	les    ebp,FWORD PTR [esi+0x25328100]
  41103c:	or     DWORD PTR [eax],eax
  41103e:	mov    al,0xc0
  411040:	mov    ds,WORD PTR [edx-0x56]
  411043:	dec    eax
  411044:	(bad)  
  411045:	loopne 0x410fd7
  411047:	push   eax
  411048:	add    al,ah
  41104a:	mov    al,ds:0x90000200
  41104f:	mov    esi,db4
  411052:	add    ch,BYTE PTR [eax+0x8]
  411055:	inc    ebx
  411056:	loopne 0x410fde
  411058:	add    BYTE PTR [ebx],al
  41105a:	mov    WORD PTR [eax+ebx*2],ss
  41105d:	out    0xa0,al
  41105f:	sub    BYTE PTR [eax+edx*1],al
  411062:	fsub   QWORD PTR [eax]
  411064:	add    al,0x18
  411066:	add    dh,BYTE PTR [ebx]
  411068:	add    BYTE PTR [edx],ah
  41106a:	adc    DWORD PTR [eax-0x57e8dfe0],edx
  411070:	add    BYTE PTR [eax-0x3e7bdfb0],al
  411076:	inc    ecx
  411077:	inc    eax
  411078:	mov    cl,BYTE PTR [eax]
  41107a:	mov    DWORD PTR [eax],eax
  41107c:	popa   
  41107d:	inc    esi
  41107e:	bound  esp,QWORD PTR [edx+0x21000011]
  411084:	add    BYTE PTR [ecx],al
  411086:	and    DWORD PTR [ebx],ecx
  411088:	mov    al,0xe4
  41108a:	add    edx,DWORD PTR [eax]
  41108c:	add    BYTE PTR fs:[ecx-0x6ef5b3f7],ah
  411093:	gs push eax
  411095:	mov    al,ds:0xc29493d8
  41109a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41109b:	and    BYTE PTR [eax-0x1fe5ba72],cl
  4110a1:	shl    BYTE PTR [esi],cl
  4110a3:	or     DWORD PTR [eax+0x40],ecx
  4110a6:	xor    edx,DWORD PTR [edx]
  4110a8:	mov    ch,0x4
  4110aa:	add    BYTE PTR [eax],al
  4110ac:	add    BYTE PTR [edx],al
  4110ae:	mov    ss,WORD PTR [eax]
  4110b0:	adc    DWORD PTR fs:[eax+ebp*1+0x3450acd],eax
  4110b8:	mov    edx,edi
  4110ba:	fs push 0x89043a48
  4110c0:	nop
  4110c1:	add    BYTE PTR [eax],dl
  4110c3:	push   ss
  4110c4:	or     BYTE PTR [esi],cl
  4110c6:	xor    BYTE PTR [esi],dh
  4110c8:	cmp    BYTE PTR [eax],al
  4110ca:	mov    BYTE PTR gs:[eax+0x52c02601],al
  4110d1:	mov    ds:0x80190008,al
  4110d6:	add    al,0x40
  4110d8:	adc    BYTE PTR [esi],dl
  4110da:	mov    ebx,DWORD PTR [edx-0x6f]
  4110dd:	sub    eax,DWORD PTR [edx-0x40]
  4110e0:	sbb    BYTE PTR [ebp+0x802028],al
  4110e6:	xor    DWORD PTR [eax],edx
  4110e8:	or     cl,BYTE PTR [eax-0x7f]
  4110eb:	mov    BYTE PTR [eax*4+0x34a6ad22],al
  4110f2:	add    DWORD PTR [edi],ecx
  4110f4:	mov    eax,0x445c4012
  4110f9:	xor    BYTE PTR [ecx+0x6200038a],cl
  4110ff:	xor    BYTE PTR [eax],al
  411101:	add    eax,0xa82000a9
  411106:	or     al,0xe9
  411108:	or     cl,BYTE PTR [esi+0x71164000]
  41110e:	adc    dl,BYTE PTR [ecx]
  411110:	push   edx
  411111:	or     DWORD PTR [eax],eax
  411113:	sub    dh,BYTE PTR [eax]
  411115:	mov    DWORD PTR [ecx],eax
  411117:	dec    eax
  411118:	retf   0x80d4
  41111b:	or     cl,0x6
  41111e:	adc    DWORD PTR [edx+0xe],eax
  411121:	add    DWORD PTR [eax],eax
  411123:	add    BYTE PTR [eax+eax*2],0x10
  411127:	xchg   ecx,eax
  411128:	add    BYTE PTR [edx+eax*2],0x5
  41112c:	add    BYTE PTR [ecx+edx*2],ah
  41112f:	rol    BYTE PTR [eax+0x1],1
  411132:	or     DWORD PTR [edx],eax
  411134:	add    DWORD PTR [edx],0x16
  411137:	add    al,0xa
  411139:	and    BYTE PTR [ecx],al
  41113b:	add    BYTE PTR es:[eax],al
  41113e:	test   BYTE PTR [eax],ah
  411140:	add    ah,dh
  411142:	and    al,0xe1
  411144:	pop    ss
  411145:	add    BYTE PTR [eax],ah
  411147:	and    DWORD PTR [edx+eax*1+0x4c],edx
  41114b:	or     al,BYTE PTR [edx]
  41114d:	add    BYTE PTR [ebx],al
  41114f:	mov    WORD PTR [eax],ss
  411151:	adc    BYTE PTR [eax],al
  411153:	dec    ecx
  411154:	add    al,BYTE PTR [edx+eax*2]
  411157:	cmp    al,BYTE PTR [ecx]
  411159:	push   es
  41115a:	mov    ah,BYTE PTR [eax+ecx*1]
  41115d:	sub    DWORD PTR [ecx+0x45020010],esp
  411163:	add    DWORD PTR [eax],0xffffff82
  411166:	adc    DWORD PTR [edx],esp
  411168:	mov    dl,BYTE PTR [ebx+0x0]
  41116b:	add    esp,DWORD PTR [ecx+ebx*1]
  41116e:	pop    es
  41116f:	or     al,0x80
  411171:	or     BYTE PTR ds:0x608120a0,al
  411177:	and    ch,dh
  411179:	sbb    BYTE PTR [eax],al
  41117b:	or     esp,DWORD PTR [eax+0x205d8501]
  411181:	sbb    BYTE PTR [eax+eax*1],al
  411184:	popa   
  411185:	push   edi
  411186:	add    BYTE PTR [eax],al
  411188:	push   eax
  411189:	add    al,BYTE PTR [eax]
  41118b:	ror    BYTE PTR [ecx-0x30],0x65
  41118f:	or     dl,BYTE PTR [eax+0x14890a1]
  411195:	or     al,0xc2
  411197:	mov    esi,0xc401020
  41119c:	sbb    BYTE PTR [eax],0x5
  41119f:	sub    BYTE PTR [edx-0x3f],ah
  4111a2:	sbb    al,BYTE PTR [edx+0x8]
  4111a5:	and    al,0x8
  4111a7:	add    al,BYTE PTR [edx]
  4111a9:	add    al,bl
  4111ab:	test   DWORD PTR [eax],ebp
  4111ad:	in     al,0xa0
  4111af:	or     dl,BYTE PTR [eax]
  4111b1:	cwde   
  4111b2:	add    BYTE PTR [ecx+ebp*4],al
  4111b5:	add    BYTE PTR [ecx],al
  4111b7:	loopne 0x4111b9
  4111b9:	add    eax,edx
  4111bb:	add    BYTE PTR cs:[ecx+0x64884594],0x60
  4111c3:	push   ecx
  4111c4:	add    BYTE PTR [ebx],ch
  4111c6:	ficom  DWORD PTR [eax]
  4111c8:	add    al,BYTE PTR [edx+0x1d128a86]
  4111ce:	mov    BYTE PTR [edx+edx*1+0x10248262],al
  4111d5:	and    DWORD PTR [edx],ebp
  4111d7:	or     al,0x8
  4111d9:	add    BYTE PTR [eax+eiz*1+0x48],al
  4111dd:	rol    BYTE PTR [eax],1
  4111df:	sbb    DWORD PTR [ecx+0x0],0x2580b084
  4111e6:	popa   
  4111e7:	add    BYTE PTR ds:0x10066b02,al
  4111ed:	xchg   DWORD PTR [eax],edx
  4111ef:	and    BYTE PTR [eax+0x0],al
  4111f2:	aaa    
  4111f3:	add    esp,DWORD PTR [eax+0x4e0dc10a]
  4111f9:	mov    ds:0x10da2204,al
  4111fe:	shl    BYTE PTR [eax],0x27
  411201:	mov    ds:0x84615c0,eax
  411206:	js     0x41118e
  411208:	sbb    al,0x92
  41120a:	sub    al,BYTE PTR [esi+0x3880010]
  411210:	add    BYTE PTR [eax],al
  411212:	ss jmp 0x411215
  411215:	es push eax
  411217:	dec    ecx
  411218:	or     BYTE PTR [eax+0x42],ah
  41121b:	and    BYTE PTR [edx+0x28182e02],ah
  411221:	test   BYTE PTR [edi],al
  411223:	add    al,0x80
  411225:	adc    esi,DWORD PTR [eax+ebp*1]
  411228:	or     DWORD PTR [ecx],0x80e03090
  41122e:	sub    BYTE PTR [ecx+0x45],al
  411231:	add    al,0x91
  411233:	add    BYTE PTR [eax],al
  411235:	inc    sp
  411237:	sbb    BYTE PTR [eax-0x70],cl
  41123a:	xor    BYTE PTR [ecx],al
  41123c:	add    dh,BYTE PTR ds:0x88180906
  411242:	xor    DWORD PTR [ebx+eax*1],ecx
  411245:	and    BYTE PTR [eax+0x0],al
  411248:	or     eax,0xe08200f4
  41124d:	add    BYTE PTR [eax+0x26],al
  411250:	or     eax,0x860968d0
  411255:	adc    cl,BYTE PTR [edx]
  411257:	and    eax,ecx
  411259:	add    BYTE PTR [ebx],ch
  41125b:	add    al,0x0
  41125d:	cwde   
  41125e:	and    eax,0xc04ca643
  411263:	adc    BYTE PTR [ecx+eiz*2],0x61
  411267:	shl    BYTE PTR [ecx],0x0
  41126a:	or     BYTE PTR [eax+eiz*8],cl
  41126d:	sub    BYTE PTR [ecx-0x7f],0x24
  411271:	adc    BYTE PTR [ebp+0x28],al
  411274:	les    eax,FWORD PTR [eax+0x1]
  411277:	and    al,BYTE PTR [eax+0x11244280]
  41127d:	inc    esp
  41127e:	add    al,BYTE PTR [ebx+0x68480032]
  411284:	adc    BYTE PTR [eax],0xe2
  411287:	ret    0x3a0
  41128a:	sbb    al,al
  41128c:	inc    esp
  41128d:	and    DWORD PTR [eax],esp
  41128f:	iret   
  411290:	xchg   edx,eax
  411291:	inc    esp
  411292:	or     DWORD PTR [ebp-0x6c],ecx
  411295:	add    al,BYTE PTR [eax-0x7defe980]
  41129b:	arpl   WORD PTR [ecx],ax
  41129d:	adc    DWORD PTR [esp+ecx*1-0x75],eax
  4112a1:	and    al,0x11
  4112a3:	mov    DWORD PTR [edx+eax*8],edx
  4112a6:	sbb    BYTE PTR [ebx],al
  4112a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112a9:	adc    BYTE PTR [eax+0x20],dh
  4112ac:	and    eax,0x80a04002
  4112b1:	add    BYTE PTR [ecx],ah
  4112b3:	mov    ds,WORD PTR [ebx]
  4112b5:	or     ah,BYTE PTR [ecx]
  4112b7:	add    BYTE PTR [eax-0x7fdfe67a],al
  4112bd:	add    DWORD PTR [esi],edx
  4112bf:	sbb    BYTE PTR [eax],al
  4112c1:	xchg   ebx,eax
  4112c2:	dec    eax
  4112c3:	or     BYTE PTR [eax],0x0
  4112c6:	adc    al,0x3
  4112c8:	and    BYTE PTR [eax+eax*2+0x17],al
  4112cc:	test   BYTE PTR [edx+0x1c026a00],al
  4112d2:	or     DWORD PTR [ebx-0x377f0000],ecx
  4112d8:	add    BYTE PTR [eax],al
  4112da:	and    BYTE PTR [edx+0x30228010],al
  4112e0:	push   ecx
  4112e1:	stos   BYTE PTR es:[edi],al
  4112e2:	and    BYTE PTR [eax],ah
  4112e4:	add    dl,BYTE PTR [eax]
  4112e6:	mov    al,ds:0x9102312
  4112eb:	mov    al,ds:0x4201042
  4112f0:	and    BYTE PTR [eax-0x5efe9ee8],dl
  4112f6:	sub    BYTE PTR [ebp+0xcb41418],0x31
  4112fd:	adc    cl,BYTE PTR [eax]
  4112ff:	adc    BYTE PTR ds:0xba087184,ah
  411305:	add    al,0x2
  411307:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411308:	and    BYTE PTR [eax+0x2a802443],cl
  41130e:	mov    DWORD PTR [edx],eax
  411310:	xor    BYTE PTR [ecx],cl
  411312:	ret    
  411313:	push   ebx
  411314:	sub    ch,BYTE PTR [ebp+0x2c0401]
  41131a:	and    al,BYTE PTR [eax+esi*1]
  41131d:	call   0x202a:0x38000
  411324:	add    BYTE PTR [eax],dl
  411326:	mov    DWORD PTR [ecx],ebp
  411328:	add    DWORD PTR [eax],eax
  41132a:	add    BYTE PTR [ecx],al
  41132c:	or     BYTE PTR [eax],dl
  41132e:	sbb    DWORD PTR [eax],eax
  411330:	add    BYTE PTR [eax],al
  411332:	add    DWORD PTR [edx+0x4],esp
  411335:	sub    cl,BYTE PTR [ebx]
  411337:	adc    BYTE PTR [eax],al
  411339:	add    DWORD PTR [edi],eax
  41133b:	pop    ecx
  41133c:	add    al,0x59
  41133e:	push   eax
  41133f:	bound  ecx,QWORD PTR [ebx-0x5c]
  411342:	or     BYTE PTR [ecx],al
  411344:	add    al,0x45
  411346:	add    DWORD PTR [eax+0x0],ebp
  411349:	xor    BYTE PTR [ecx+0x6],al
  41134c:	pusha  
  41134d:	and    BYTE PTR [eax],0x40
  411350:	push   esp
  411351:	pop    es
  411352:	rol    BYTE PTR [eax],0x0
  411355:	inc    ecx
  411356:	add    DWORD PTR [eax],0xffffff90
  411359:	mov    ah,0xb5
  41135b:	push   ecx
  41135c:	adc    DWORD PTR [eax+0x41080259],0x818ca058
  411366:	aam    0x30
  411368:	fcomp  DWORD PTR [eax+0x15]
  41136b:	rcl    eax,0x40
  41136e:	xor    ah,BYTE PTR [ecx+0x42]
  411371:	or     BYTE PTR [edx-0x7eedb3fb],al
  411377:	dec    edi
  411378:	or     BYTE PTR [eax],al
  41137a:	and    BYTE PTR [edi-0x80],dl
  41137d:	add    BYTE PTR [ecx],al
  41137f:	rol    BYTE PTR [ebx+0x0],0x82
  411383:	add    BYTE PTR [edx+ecx*1-0x57e7f600],al
  41138a:	add    BYTE PTR [eax],al
  41138c:	and    BYTE PTR [esi],al
  41138e:	and    al,0x8
  411390:	push   esi
  411391:	add    dh,BYTE PTR [eax+eax*4-0x5a]
  411395:	add    BYTE PTR [edx+edx*4+0x5080c140],cl
  41139c:	add    dl,BYTE PTR [ecx]
  41139e:	inc    eax
  41139f:	dec    ecx
  4113a0:	xchg   ebp,eax
  4113a1:	imul   eax,DWORD PTR [ecx],0xffffff8b
  4113a4:	sbb    BYTE PTR [eax],cl
  4113a6:	add    ah,BYTE PTR [ecx-0x7dffddf8]
  4113ac:	add    ch,BYTE PTR [eax]
  4113ae:	add    cl,BYTE PTR [eax]
  4113b0:	dec    eax
  4113b1:	and    DWORD PTR [esp+ecx*1-0x2c],esp
  4113b5:	mov    ah,0x18
  4113b7:	xor    BYTE PTR [esi],al
  4113b9:	add    BYTE PTR [eax],0x88
  4113bc:	add    ch,bl
  4113be:	and    DWORD PTR [ecx-0x67ff59bb],ebx
  4113c4:	adc    BYTE PTR [eax+0x1],dl
  4113c7:	adc    al,0x3a
  4113c9:	add    eax,0x2e0c4180
  4113ce:	xchg   esp,eax
  4113cf:	mov    al,ds:0x2a380849
  4113d4:	add    DWORD PTR [eax],eax
  4113d6:	adc    BYTE PTR [eax+0x11],al
  4113d9:	and    BYTE PTR [ecx],ah
  4113db:	and    BYTE PTR [eax],dl
  4113dd:	xor    cl,BYTE PTR [ecx]
  4113df:	bound  eax,QWORD PTR [ebx]
  4113e1:	mov    WORD PTR [edx+0xd40025],ss
  4113e7:	push   es
  4113e8:	add    eax,0x8028880
  4113ed:	add    BYTE PTR [eax+ecx*2],cl
  4113f0:	add    BYTE PTR [eax],bl
  4113f2:	add    DWORD PTR [eax],0x2c900480
  4113f8:	add    BYTE PTR [eax],al
  4113fa:	add    DWORD PTR [ecx+0x510ad204],ecx
  411400:	add    BYTE PTR [ecx],0x84
  411403:	nop
  411404:	xor    BYTE PTR [eax+esi*1],ch
  411407:	add    al,0x42
  411409:	add    DWORD PTR [ebx],0x408b
  41140f:	mov    DWORD PTR [edx],esp
  411411:	out    0x8,al
  411413:	push   ecx
  411414:	add    DWORD PTR [eax],edx
  411416:	imul   eax,DWORD PTR [ecx],0x4260401
  41141c:	add    BYTE PTR [edx],dh
  41141e:	mov    BYTE PTR [eax],al
  411420:	add    al,0x20
  411422:	push   es
  411423:	retf   0xac0a
  411426:	and    BYTE PTR [ecx],al
  411428:	ds push edi
  41142a:	popa   
  41142b:	dec    eax
  41142c:	add    BYTE PTR [eax],al
  41142e:	xor    DWORD PTR [ecx+0x20],ebx
  411431:	inc    eax
  411432:	pop    edx
  411433:	and    al,0x84
  411435:	or     BYTE PTR [edx],0x6a
  411438:	add    al,0x2a
  41143a:	add    DWORD PTR [edx],esp
  41143c:	ret    0x4286
  41143f:	add    eax,0x10c01846
  411444:	xchg   esp,eax
  411445:	dec    eax
  411446:	push   es
  411447:	or     DWORD PTR [eax],ecx
  411449:	inc    ecx
  41144a:	cmp    edx,0x22024008
  411450:	inc    eax
  411451:	test   al,0x80
  411453:	dec    eax
  411454:	and    al,BYTE PTR [eax+0x0]
  411457:	add    BYTE PTR [eax],dl
  411459:	sub    DWORD PTR [eax],ebp
  41145b:	fwait
  41145c:	out    dx,al
  41145d:	pusha  
  41145e:	or     ah,ah
  411460:	add    dl,BYTE PTR [ecx+0x50]
  411463:	add    BYTE PTR [eax+0x10140242],al
  411469:	add    eax,0x16412003
  41146e:	xchg   edx,eax
  41146f:	inc    ebx
  411470:	adc    BYTE PTR [eax],ah
  411472:	mov    al,ds:0x1088218
  411477:	nop
  411478:	adc    BYTE PTR [ebp+0x5a],ch
  41147b:	pop    ecx
  41147c:	test   BYTE PTR [eax],al
  41147e:	xor    DWORD PTR [ecx+eax*2],eax
  411481:	cwde   
  411482:	sbb    BYTE PTR [esi+0x1843000c],ah
  411488:	add    DWORD PTR [esi],ecx
  41148a:	inc    esp
  41148b:	and    BYTE PTR [edx+eiz*1+0x58],0x90
  411490:	add    BYTE PTR [esi],dh
  411492:	dec    ecx
  411493:	add    al,0x8
  411495:	stos   BYTE PTR es:[edi],al
  411496:	or     DWORD PTR [ebx],eax
  411498:	pusha  
  411499:	add    BYTE PTR [eax+0x44e04151],al
  41149f:	mov    fs,WORD PTR [edx+0x41]
  4114a2:	and    DWORD PTR [eax],edx
  4114a4:	add    BYTE PTR [edx],al
  4114a6:	enter  0x8090,0xb4
  4114aa:	test   al,0x2
  4114ac:	jo     0x4114be
  4114ae:	add    BYTE PTR [eax+0x42111402],al
  4114b4:	loopne 0x41150d
  4114b6:	add    BYTE PTR [ecx],0x88
  4114b9:	test   BYTE PTR [eax],cl
  4114bb:	bound  esp,QWORD PTR [eax]
  4114bd:	sub    DWORD PTR [edx],0xa1040008
  4114c3:	add    BYTE PTR [eax-0x3f7ef37d],al
  4114c9:	and    DWORD PTR [edi],eax
  4114cb:	cdq    
  4114cc:	(bad)  
  4114cd:	and    DWORD PTR [edx],ecx
  4114cf:	add    BYTE PTR [eax],0x1
  4114d2:	cdq    
  4114d3:	es dec eax
  4114d5:	push   cs
  4114d6:	add    al,BYTE PTR [ecx]
  4114d8:	inc    esp
  4114d9:	add    dl,BYTE PTR [eax+0x20]
  4114dc:	adc    al,0x22
  4114de:	or     BYTE PTR [ecx+ebx*1],bl
  4114e1:	and    BYTE PTR [ebx],al
  4114e3:	dec    edx
  4114e4:	add    al,dh
  4114e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e7:	inc    edx
  4114e8:	ret    0x202
  4114eb:	aam    0x20
  4114ed:	or     al,0x6
  4114ef:	mov    bl,0x4
  4114f1:	and    BYTE PTR [esi+eax*1],dh
  4114f4:	in     eax,dx
  4114f5:	add    BYTE PTR [eax-0x3e],ah
  4114f8:	push   cs
  4114f9:	inc    eax
  4114fa:	add    BYTE PTR [eax],al
  4114fc:	and    DWORD PTR [ecx-0x7e],0x89c29460
  411503:	sub    DWORD PTR [eiz*2+0x42000032],esp
  41150a:	xchg   ecx,eax
  41150b:	adc    BYTE PTR [eax],dl
  41150d:	sbb    BYTE PTR [ebp-0x2ff4b9ff],al
  411513:	and    eax,DWORD PTR [eax+0x20a0ca62]
  411519:	and    al,0xa2
  41151b:	fs push eax
  41151d:	xor    al,0x10
  41151f:	inc    esp
  411520:	and    DWORD PTR [ecx],ecx
  411522:	add    BYTE PTR [ecx+0x4],0x3d
  411526:	mov    ds:0x81040041,al
  41152b:	pusha  
  41152c:	add    BYTE PTR [eax],dh
  41152e:	add    BYTE PTR [eax],al
  411530:	add    DWORD PTR [eax+eax*8],eax
  411533:	add    BYTE PTR [eax],bh
  411535:	and    DWORD PTR [edx+0x43],eax
  411538:	mov    al,0x35
  41153a:	add    BYTE PTR [eax-0x7f7ff580],al
  411540:	or     BYTE PTR [edx],cl
  411542:	nop
  411543:	or     DWORD PTR [ecx-0x77eedfd8],0xa30420c8
  41154d:	nop
  41154e:	push   es
  41154f:	test   al,0x0
  411551:	add    BYTE PTR [ecx+0x2a004050],0x6
  411558:	push   0x80094244
  41155d:	mov    al,ds:0x220a2001
  411562:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411563:	lods   al,BYTE PTR ds:[esi]
  411564:	nop
  411565:	adc    eax,0x1080180e
  41156a:	add    BYTE PTR [eax-0x37ffbcfb],al
  411570:	jae    0x4115ba
  411572:	add    al,0x48
  411574:	or     BYTE PTR [ebx+0x1d202002],0x12
  41157b:	add    al,0x0
  41157d:	or     DWORD PTR [esi],0x4
  411580:	add    cl,BYTE PTR ds:0x14061020
  411586:	dec    ebp
  411587:	add    dl,BYTE PTR [edx+eax*1]
  41158a:	les    eax,FWORD PTR [ebx+0x45004008]
  411590:	add    eax,0x8164622
  411595:	or     ah,BYTE PTR [eax]
  411597:	xor    al,al
  411599:	sbb    esi,edi
  41159b:	add    al,0x32
  41159d:	jo     0x411542
  41159f:	sub    al,0x29
  4115a1:	inc    edx
  4115a2:	sbb    BYTE PTR [ecx],0xa1
  4115a5:	inc    edx
  4115a6:	adc    BYTE PTR [edi],al
  4115a8:	push   eax
  4115a9:	adc    BYTE PTR [eax+eiz*1],cl
  4115ac:	and    BYTE PTR [ecx+0x10102058],cl
  4115b2:	inc    edx
  4115b3:	sbb    al,0x1
  4115b5:	rcl    BYTE PTR [eax-0x2bf7f000],0x28
  4115bc:	test   BYTE PTR [ecx+0x1c800200],al
  4115c2:	nop
  4115c3:	push   ecx
  4115c4:	or     ah,BYTE PTR [edx+0x41]
  4115c7:	mov    DWORD PTR [ecx],esp
  4115c9:	add    BYTE PTR [eax+0x24],cl
  4115cc:	sbb    al,0xd6
  4115ce:	add    DWORD PTR [ebx+0x4c],edx
  4115d1:	add    BYTE PTR [edx+0xa],cl
  4115d4:	add    DWORD PTR [esp+eax*4],ecx
  4115d7:	add    edx,DWORD PTR [esi]
  4115d9:	inc    eax
  4115da:	inc    eax
  4115db:	inc    eax
  4115dc:	or     BYTE PTR [eax],al
  4115de:	or     al,BYTE PTR [esi]
  4115e0:	push   cs
  4115e1:	add    BYTE PTR [eax+0x61036009],al
  4115e7:	gs jecxz 0x4115ef
  4115ea:	loopne 0x4115cd
  4115ec:	loop   0x411576
  4115ee:	or     BYTE PTR [edx],ch
  4115f0:	add    BYTE PTR [ecx+0x4023a40],al
  4115f6:	pop    eax
  4115f7:	add    eax,DWORD PTR [ecx+0x35002011]
  4115fd:	and    BYTE PTR [eax],0x28
  411600:	test   DWORD PTR [eax],ecx
  411602:	or     BYTE PTR [esi],ah
  411604:	inc    eax
  411605:	xchg   BYTE PTR [ecx],cl
  411607:	add    dl,BYTE PTR [eax+0x1088018]
  41160d:	add    al,0x0
  411610:	rol    BYTE PTR [eax+ecx*1],1
  411613:	add    al,BYTE PTR [edi+0x21]
  411616:	and    al,0x4
  411618:	adc    DWORD PTR [edx],esp
  41161a:	xor    al,0x80
  41161c:	inc    esp
  41161d:	adc    BYTE PTR [edx+edx*1],dl
  411620:	adc    DWORD PTR [edx],eax
  411622:	dec    ecx
  411623:	pusha  
  411624:	inc    esi
  411625:	inc    ebp
  411626:	xchg   BYTE PTR [eax],ah
  411628:	mov    ds:0x45421028,al
  41162d:	and    BYTE PTR [ecx],0x6
  411630:	sbb    BYTE PTR [eax+0x50],0xc
  411634:	xchg   edx,eax
  411635:	call   0x843e6ca
  41163a:	sub    DWORD PTR [eax],eax
  41163c:	or     BYTE PTR [eax+ecx*8],ah
  41163f:	ss and al,0x80
  411642:	inc    edx
  411643:	sbb    ecx,DWORD PTR [ecx+0x4]
  411646:	or     eax,0x802820a4
  41164b:	jbe    0x411652
  41164d:	add    BYTE PTR [edx],cl
  41164f:	xor    DWORD PTR [eax],0x1419248
  411655:	pusha  
  411656:	push   0x25388479
  41165b:	mov    ss,WORD PTR [edx+0xa]
  41165e:	add    DWORD PTR [eax],eax
  411660:	add    cl,BYTE PTR [ebx+0x0]
  411663:	push   edx
  411664:	sub    DWORD PTR [eax],ebp
  411666:	(bad)
  411669:	mov    BYTE PTR [eax+0x8],ah
  41166c:	inc    eax
  41166d:	add    al,0x50
  41166f:	add    BYTE PTR [ebx],0x22
  411672:	and    ah,al
  411674:	inc    eax
  411675:	mov    al,ds:0x68800230
  41167a:	stos   BYTE PTR es:[edi],al
  41167b:	inc    esp
  41167c:	sub    cl,BYTE PTR [eax]
  41167e:	cmp    eax,0xa000c040
  411683:	push   eax
  411684:	test   eax,0xa046c828
  411689:	int3   
  41168a:	jp     0x4116cd
  41168c:	add    al,0x92
  41168e:	adc    BYTE PTR [eax+eax*2+0x64],dl
  411692:	add    BYTE PTR [eax],al
  411694:	or     al,0xa1
  411696:	call   0x12:0x84101220
  41169d:	or     eax,DWORD PTR [eax]
  41169f:	add    DWORD PTR [ebx],0x21
  4116a2:	nop
  4116a3:	add    DWORD PTR [edx-0xa],ecx
  4116a6:	rol    BYTE PTR [eax+ecx*1],0x2
  4116aa:	add    BYTE PTR [edx],ah
  4116ac:	or     BYTE PTR [eax],0x0
  4116af:	in     eax,dx
  4116b0:	shl    BYTE PTR [ecx],0xa5
  4116b3:	add    ah,BYTE PTR [eax+0xb]
  4116b6:	add    BYTE PTR [eax+0x28088180],al
  4116bc:	dec    ebp
  4116bd:	or     BYTE PTR [ebx],al
  4116bf:	(bad)
  4116c2:	or     eax,0x7401a82
  4116c7:	add    al,0x0
  4116c9:	test   eax,0x8009d48
  4116ce:	add    BYTE PTR [eax],al
  4116d0:	or     BYTE PTR [ecx],0x18
  4116d3:	pusha  
  4116d4:	add    DWORD PTR [ecx+0x44a30212],ebp
  4116da:	and    BYTE PTR [eax],dl
  4116dc:	dec    ecx
  4116dd:	add    al,0x41
  4116df:	and    al,0x28
  4116e1:	add    al,BYTE PTR [eax]
  4116e3:	add    dl,BYTE PTR [eax]
  4116e5:	and    BYTE PTR [eax],ah
  4116e7:	add    DWORD PTR [eax],eax
  4116e9:	add    DWORD PTR [eax+0x2990501],0x89d0b04
  4116f3:	daa    
  4116f4:	pusha  
  4116f5:	or     BYTE PTR ds:0x60428410,al
  4116fb:	add    BYTE PTR [eax+0xc245003],0x40
  411702:	add    al,BYTE PTR [eax]
  411704:	and    ecx,DWORD PTR [eax]
  411706:	inc    eax
  411707:	or     eax,DWORD PTR [eax+0x40001018]
  41170d:	adc    BYTE PTR ss:[eax],cl
  411710:	inc    eax
  411711:	leave  
  411712:	test   DWORD PTR [eax+0x4],esp
  411715:	mov    BYTE PTR [eax+eiz*1-0x57ffe5e7],al
  41171c:	es inc eax
  41171e:	sub    BYTE PTR [ecx],cl
  411720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411721:	or     al,0x0
  411723:	inc    eax
  411724:	add    esp,DWORD PTR [esp+eax*1]
  411727:	add    BYTE PTR [ecx],ah
  411729:	repnz or esp,DWORD PTR [edx+ecx*1]
  41172d:	sub    eax,0x55414800
  411732:	add    BYTE PTR [ecx-0x7f],dl
  411735:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411736:	push   ebp
  411737:	sub    BYTE PTR [eax+0x2],al
  41173a:	add    BYTE PTR [eax],dl
  41173c:	and    al,al
  41173e:	or     DWORD PTR [ecx],esp
  411740:	adc    DWORD PTR [eax+0x0],esp
  411743:	add    BYTE PTR [ecx+0x24],al
  411746:	inc    eax
  411747:	inc    eax
  411748:	adc    eax,0xa0014100
  41174d:	and    al,0x40
  41174f:	shl    ah,1
  411751:	or     BYTE PTR [edx-0x72befe00],dl
  411757:	adc    al,0x0
  411759:	test   DWORD PTR [ecx+0x2b],eax
  41175c:	or     edx,DWORD PTR [edx+0x1ac10b18]
  411762:	dec    eax
  411763:	push   ecx
  411764:	push   eax
  411765:	adc    BYTE PTR [edx],dl
  411767:	add    BYTE PTR [eax+0x31],ah
  41176a:	add    BYTE PTR [eax+0x35],ah
  41176d:	adc    DWORD PTR [eax],ebx
  41176f:	mov    cl,BYTE PTR [edx]
  411771:	add    BYTE PTR [edx],0x0
  411774:	or     BYTE PTR [edx],al
  411776:	add    DWORD PTR [eax+0x24],eax
  411779:	or     DWORD PTR [esi],ecx
  41177b:	or     BYTE PTR [eax],0x8a
  41177e:	xor    BYTE PTR [eax+0x108280],0x9c
  411785:	mov    BYTE PTR [eax-0x3fdab7ff],ah
  41178b:	sbb    BYTE PTR [ebp-0x37dcf5f8],al
  411791:	mov    al,ds:0x821689
  411796:	mov    DWORD PTR [eax],eax
  411798:	mov    dl,0x80
  41179a:	and    BYTE PTR [eax],al
  41179c:	add    BYTE PTR [eax],al
  41179e:	inc    eax
  41179f:	add    DWORD PTR [edx+0x4],eax
  4117a2:	add    eax,0x98c512c9
  4117a7:	or     BYTE PTR [ecx+0x8226004],dl
  4117ad:	inc    ebx
  4117ae:	adc    DWORD PTR [ecx+edx*1],ecx
  4117b1:	ret    0x1e0
  4117b4:	add    al,BYTE PTR [edx]
  4117b6:	adc    al,BYTE PTR [ecx+0x1a24309]
  4117bc:	add    al,0x41
  4117be:	arpl   WORD PTR [ecx],ax
  4117c0:	icebp  
  4117c1:	call   0x30491b42
  4117c6:	cwde   
  4117c7:	or     BYTE PTR [eax],cl
  4117c9:	push   ss
  4117ca:	test   BYTE PTR [ebx],al
  4117cc:	xor    al,0x8
  4117ce:	xchg   esi,eax
  4117cf:	inc    ecx
  4117d0:	call   DWORD PTR ds:0x43b6c0
  4117d6:	sbb    DWORD PTR ds:0x42900508,esi
  4117dc:	mov    BYTE PTR [eax],ch
  4117de:	add    DWORD PTR [eax+eax*8],esi
  4117e1:	and    DWORD PTR [edi+0x40410990],eax
  4117e7:	add    DWORD PTR [eax],edx
  4117e9:	sub    al,BYTE PTR [ecx]
  4117eb:	add    BYTE PTR [eax+0x0],al
  4117ee:	add    BYTE PTR [eax],ah
  4117f0:	or     bl,BYTE PTR [ebx]
  4117f2:	(bad)  
  4117f3:	sub    al,0x12
  4117f5:	mov    WORD PTR [edx],es
  4117f7:	add    BYTE PTR ds:0x6970e010,ah
  4117fd:	add    eax,0x47080142
  411802:	add    eax,0x95042
  411807:	xor    al,0xcb
  411809:	or     BYTE PTR [eax],al
  41180b:	push   esi
  41180c:	mov    ds:0x80a10310,al
  411811:	and    al,ch
  411813:	rcr    DWORD PTR [ecx],0xe3
  411816:	or     dl,BYTE PTR [ebx]
  411818:	cmp    BYTE PTR [eax],0x38
  41181b:	sbb    cl,BYTE PTR [eax+ebx*2-0x5fbd3f78]
  411822:	and    ah,BYTE PTR [eax]
  411824:	xor    DWORD PTR [ebx],eax
  411826:	xor    BYTE PTR [edx-0x56],dl
  411829:	adc    BYTE PTR [eax+0x2],0x88
  41182d:	or     BYTE PTR [ebx+eax*1-0x7f7e5fdc],cl
  411834:	inc    ebx
  411835:	inc    esp
  411836:	add    BYTE PTR [ecx+0x2],al
  411839:	and    DWORD PTR [eax],edx
  41183b:	mov    WORD PTR [eax],es
  41183d:	adc    al,BYTE PTR [edx+0xa]
  411840:	mov    dl,BYTE PTR [eax]
  411842:	add    al,0x84
  411844:	inc    ecx
  411845:	pop    es
  411846:	add    cl,cl
  411848:	lea    ecx,[eax]
  41184a:	pop    eax
  41184b:	and    BYTE PTR [eax],al
  41184d:	adc    DWORD PTR [eax+edx*1+0x48],eax
  411851:	add    eax,0x12020415
  411856:	inc    ebp
  411857:	adc    BYTE PTR [esp+ecx*1+0x12],dl
  41185b:	and    cl,BYTE PTR [eax-0x7e]
  41185e:	add    cl,BYTE PTR [edx]
  411860:	adc    ch,BYTE PTR [edx+eax*1+0x5d04008]
  411867:	cwde   
  411868:	test   DWORD PTR [edx],ebp
  41186a:	or     al,bl
  41186c:	cmp    BYTE PTR [ebx+0x10404441],al
  411872:	adc    BYTE PTR [eax],al
  411874:	add    ah,BYTE PTR ds:0x524104da
  41187a:	cmp    BYTE PTR [ecx-0x70],cl
  41187d:	add    al,0x89
  41187f:	dec    esp
  411880:	sub    eax,0x80011001
  411885:	bound  ecx,QWORD PTR [edx]
  411887:	les    eax,FWORD PTR [eax]
  411889:	sbb    BYTE PTR [ecx+0x18],0x0
  41188d:	and    eax,DWORD PTR [ebx+eax*1]
  411890:	sbb    BYTE PTR [eax],bh
  411892:	rcl    BYTE PTR [ecx+eax*4+0x0],0x0
  411897:	mov    BYTE PTR [edx+0x100840],al
  41189d:	and    BYTE PTR [eax-0x7fab4fca],0x20
  4118a4:	add    cl,BYTE PTR [ecx+0x29030440]
  4118aa:	loopne 0x4118ae
  4118ac:	push   cs
  4118ad:	lods   al,BYTE PTR ds:[esi]
  4118ae:	and    al,0x40
  4118b0:	adc    BYTE PTR [ecx+0x4048808],dl
  4118b6:	fmul   DWORD PTR [ebx-0x7c]
  4118b9:	adc    DWORD PTR [eax+0x604910],eax
  4118bf:	pusha  
  4118c0:	add    BYTE PTR [edx],al
  4118c2:	pop    ss
  4118c3:	sbb    cl,BYTE PTR [esi+ebp*2]
  4118c6:	sbb    BYTE PTR [edx+0x284490a8],al
  4118cc:	mov    ds:0x34160242,eax
  4118d1:	or     al,0x0
  4118d3:	add    BYTE PTR [eax],0x8
  4118d6:	adc    al,0xa
  4118d8:	mov    ebx,0x1051892
  4118dd:	and    DWORD PTR [eax],eax
  4118df:	and    eax,DWORD PTR [eax-0x17cf3dfb]
  4118e5:	xor    BYTE PTR [eax],ah
  4118e7:	add    BYTE PTR [esi],cl
  4118e9:	mov    ecx,esi
  4118eb:	add    al,0x80
  4118ed:	ret    0xe042
  4118f0:	add    BYTE PTR [ecx],dl
  4118f2:	xor    BYTE PTR [ecx],dl
  4118f4:	adc    BYTE PTR [esi],al
  4118f6:	or     DWORD PTR [ebx],eax
  4118f8:	add    BYTE PTR [ecx+0x0],al
  4118fb:	mov    BYTE PTR [edx],al
  4118fd:	inc    eax
  4118fe:	and    BYTE PTR [eax+0x29231441],cl
  411904:	adc    DWORD PTR [edx],edx
  411906:	and    DWORD PTR [ecx+eax*2+0x8724104],ecx
  41190d:	add    cl,0x0
  411910:	inc    eax
  411911:	sbb    BYTE PTR [edx],al
  411913:	and    DWORD PTR [ecx],ebp
  411915:	xchg   esp,eax
  411916:	push   eax
  411917:	or     BYTE PTR [eax-0x7f968af0],al
  41191d:	and    BYTE PTR [edx+0x1],cl
  411920:	and    al,ch
  411922:	add    BYTE PTR [eax],dl
  411924:	add    BYTE PTR [eax+ecx*1],ah
  411927:	dec    eax
  411928:	inc    eax
  411929:	inc    ecx
  41192a:	inc    esp
  41192b:	and    al,ah
  41192d:	inc    eax
  41192e:	addr16 push es
  411930:	add    BYTE PTR [ecx+eiz*1],dl
  411933:	test   DWORD PTR [eax],eax
  411935:	mov    al,ds:0x1a82842
  41193a:	add    ebp,0x260a048
  411940:	loopne 0x41194a
  411942:	add    BYTE PTR [eax],dl
  411944:	or     eax,eax
  411946:	dec    esp
  411947:	add    BYTE PTR [edx+0x4081d2c1],bl
  41194d:	and    al,BYTE PTR [edx]
  41194f:	push   esi
  411950:	push   es
  411951:	adc    ebx,DWORD PTR [ecx]
  411953:	or     al,BYTE PTR [eax]
  411955:	inc    esp
  411956:	inc    ebp
  411957:	mov    DWORD PTR [ecx+0x3124f00],eax
  41195d:	add    al,BYTE PTR [ecx+0x12]
  411960:	pusha  
  411961:	inc    eax
  411962:	add    BYTE PTR [ecx],ah
  411964:	add    BYTE PTR [ecx+0xc45c642],cl
  41196a:	les    ecx,FWORD PTR [edx]
  41196c:	and    al,BYTE PTR [ecx-0x50]
  41196f:	add    ecx,DWORD PTR [eax+eax*1+0x4108428]
  411976:	pop    esi
  411977:	or     DWORD PTR [eax+0x70105310],esp
  41197d:	inc    ebp
  41197e:	add    eax,ebp
  411980:	retf   
  411981:	loope  0x4119c8
  411983:	add    ecx,esp
  411985:	sub    edx,eax
  411987:	add    cl,ah
  411989:	adc    BYTE PTR [eax],al
  41198b:	nop
  41198c:	loope  0x411910
  41198e:	xor    al,0x83
  411990:	inc    ecx
  411991:	mov    DWORD PTR [eax],edi
  411993:	and    BYTE PTR [edx],0x2
  411996:	adc    BYTE PTR [eax],al
  411998:	inc    eax
  411999:	add    BYTE PTR [eax],dl
  41199b:	or     eax,0x8199a34
  4119a0:	inc    ecx
  4119a1:	and    al,0x40
  4119a3:	or     BYTE PTR [ecx+0x0],ah
  4119a6:	add    BYTE PTR [eax],al
  4119a8:	sub    eax,DWORD PTR [ebx+0x3]
  4119ab:	add    DWORD PTR [eax],esp
  4119ad:	ror    BYTE PTR [ecx],0x80
  4119b0:	add    BYTE PTR [edx],ah
  4119b2:	bound  edi,QWORD PTR es:[edx+eax*1]
  4119b6:	push   edx
  4119b7:	add    BYTE PTR [edx-0x5f4fef7f],al
  4119bd:	add    ah,BYTE PTR [edx]
  4119bf:	inc    edx
  4119c0:	add    BYTE PTR [edx],0x8d
  4119c3:	add    al,al
  4119c5:	dec    eax
  4119c6:	and    BYTE PTR [eax],ah
  4119c8:	and    eax,DWORD PTR [esp+ebp*1]
  4119cb:	sbb    ecx,esp
  4119cd:	dec    eax
  4119ce:	rol    al,0x49
  4119d1:	add    BYTE PTR [edx],al
  4119d3:	lea    eax,[ebx+0x61]
  4119d6:	dec    eax
  4119d7:	pusha  
  4119d8:	and    DWORD PTR [edx],eax
  4119da:	rcr    BYTE PTR [eax],1
  4119dc:	and    al,BYTE PTR [eax+eiz*4+0x76480018]
  4119e3:	pusha  
  4119e4:	push   ss
  4119e5:	fsub   DWORD PTR [eax]
  4119e7:	xchg   DWORD PTR [ebx],eax
  4119e9:	dec    eax
  4119ea:	add    BYTE PTR [eax],dl
  4119ec:	add    BYTE PTR [ebp+0x40],bl
  4119ef:	ret    
  4119f0:	or     DWORD PTR [esi+0x71000000],eax
  4119f6:	add    BYTE PTR [eax],al
  4119f8:	cld    
  4119f9:	adc    BYTE PTR [eax],ah
  4119fb:	or     al,0x6a
  4119fd:	in     al,0x4
  4119ff:	adc    al,0xc5
  411a01:	adc    DWORD PTR [edx-0x637f7848],eax
  411a07:	add    ecx,DWORD PTR [ecx+ebx*1]
  411a0a:	mov    dh,0x40
  411a0c:	adc    al,0x70
  411a0e:	add    BYTE PTR [edx],0x94
  411a11:	aad    0x91
  411a13:	or     DWORD PTR [esp+eax*8],0x63800180
  411a1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a1b:	sub    DWORD PTR [ecx],eax
  411a1d:	add    BYTE PTR [eax],dl
  411a1f:	push   eax
  411a20:	test   BYTE PTR [esi],cl
  411a22:	adc    DWORD PTR [eax-0x767f67b8],ecx
  411a28:	add    dl,BYTE PTR ds:0x210891a3
  411a2e:	add    BYTE PTR [eax+0x50],dl
  411a31:	or     al,0x11
  411a33:	dec    esi
  411a34:	add    BYTE PTR [eax],0x52
  411a37:	pop    eax
  411a38:	add    BYTE PTR [eax],ah
  411a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a3b:	inc    esp
  411a3c:	adc    al,0x28
  411a3e:	add    BYTE PTR [edx+0x214010],al
  411a44:	add    BYTE PTR [eax],cl
  411a46:	add    BYTE PTR [eax],bl
  411a48:	inc    sp
  411a4a:	add    BYTE PTR [eax],al
  411a4c:	xchg   esi,eax
  411a4d:	and    BYTE PTR [esp+eax*1],al
  411a50:	add    al,0x60
  411a52:	adc    al,BYTE PTR [edx]
  411a54:	dec    esp
  411a55:	push   ecx
  411a56:	xchg   ecx,eax
  411a57:	add    BYTE PTR [eax+0x3201104],cl
  411a5d:	jb     0x411a41
  411a5f:	inc    edx
  411a60:	out    dx,al
  411a61:	mov    eax,esp
  411a63:	inc    eax
  411a64:	mov    DWORD PTR [eax],eax
  411a66:	nop
  411a67:	rcl    BYTE PTR [ebx-0x77ffddd2],0x8
  411a6e:	mov    ds:0x84501282,al
  411a73:	and    al,0x0
  411a75:	jno    0x4119f9
  411a77:	adc    BYTE PTR [eax+eax*1],ah
  411a7a:	adc    DWORD PTR [eax],eax
  411a7c:	test   BYTE PTR [ecx],al
  411a7e:	dec    ecx
  411a7f:	and    BYTE PTR [edx],0x9d
  411a82:	and    al,al
  411a84:	xchg   ecx,eax
  411a85:	push   eax
  411a86:	cmp    eax,0xc0060000
  411a8b:	and    BYTE PTR [ecx+eax*1],al
  411a8e:	or     DWORD PTR [ebx+0x20222030],eax
  411a94:	pusha  
  411a95:	lock adc DWORD PTR [eax],0x9
  411a99:	and    eax,0x2ca302b4
  411a9e:	add    BYTE PTR [eax+0x43],al
  411aa1:	dec    eax
  411aa2:	dec    eax
  411aa3:	xchg   esi,eax
  411aa4:	add    BYTE PTR [eax-0x80],al
  411aa7:	add    BYTE PTR [edx],ah
  411aa9:	jo     0x411aeb
  411aab:	data16 add BYTE PTR [ecx+0x40],0x0
  411ab0:	add    ch,BYTE PTR [esi+edx*1]
  411ab3:	or     BYTE PTR [ecx],al
  411ab5:	inc    eax
  411ab6:	push   es
  411ab7:	adc    al,ah
  411ab9:	inc    eax
  411aba:	add    dh,BYTE PTR [eax]
  411abc:	add    al,0xa
  411abe:	add    eax,0x8800190
  411ac3:	or     BYTE PTR [eax],cl
  411ac5:	shl    BYTE PTR [eax],0x68
  411ac8:	sub    BYTE PTR [ecx+esi*4],ah
  411acb:	or     dl,BYTE PTR es:[eax-0x7fff5700]
  411ad2:	enter  0x1010,0x19
  411ad6:	cs aad 0x4a
  411ad9:	add    eax,0x200025
  411ade:	add    BYTE PTR [esi+ecx*1+0x1],al
  411ae2:	adc    BYTE PTR [eax],ah
  411ae4:	or     eax,0x894400d
  411ae9:	and    dl,ah
  411aeb:	shl    DWORD PTR [eax+0x42048800],1
  411af1:	and    cl,al
  411af3:	add    al,0x8
  411af5:	adc    bl,BYTE PTR [eax*4+0x384f4e]
  411afc:	mov    DWORD PTR [eax-0x2e],eax
  411aff:	pusha  
  411b00:	push   esp
  411b01:	mov    ds:0x10000113,al
  411b06:	push   ecx
  411b07:	add    eax,0x6001000
  411b0c:	and    BYTE PTR [ebx+eax*2-0x38],al
  411b10:	add    BYTE PTR [edx+0x40],al
  411b13:	mov    al,ds:0x9a4552ac
  411b18:	add    BYTE PTR [edx],ah
  411b1a:	not    BYTE PTR [ecx-0xd75f847]
  411b20:	mov    ds:0x2054a600,eax
  411b25:	sbb    eax,0x51044270
  411b2a:	add    al,0x0
  411b2c:	mov    BYTE PTR [ecx],bh
  411b2e:	and    DWORD PTR ds:0x3026a803,esp
  411b34:	push   ss
  411b35:	inc    eax
  411b36:	test   BYTE PTR [ebx+0x4200c400],dl
  411b3c:	add    BYTE PTR [edx+0x14123104],cl
  411b42:	push   esp
  411b43:	add    al,0x8c
  411b45:	xchg   BYTE PTR [ecx],dh
  411b47:	inc    eax
  411b48:	or     BYTE PTR [ecx],ch
  411b4a:	inc    ebx
  411b4b:	add    BYTE PTR [eax],0x40
  411b4e:	mov    ds:0x14018008,eax
  411b53:	bound  eax,QWORD PTR [eax+ecx*1]
  411b56:	sbb    eax,DWORD PTR [edx]
  411b58:	and    BYTE PTR [eax],cl
  411b5a:	push   eax
  411b5b:	mov    al,ds:0x200020a
  411b60:	adc    BYTE PTR [eax],ah
  411b62:	cmp    BYTE PTR [ecx+0x2],dl
  411b65:	cmp    BYTE PTR [eax],0xa8
  411b68:	add    BYTE PTR [ecx],ah
  411b6a:	inc    esi
  411b6b:	rol    BYTE PTR [eax+eiz*1],0x20
  411b6f:	inc    ebx
  411b70:	add    BYTE PTR [ecx],0x4
  411b73:	sub    BYTE PTR [eax],cl
  411b75:	inc    eax
  411b76:	xor    DWORD PTR [eax+0x42],0x2100510
  411b7d:	add    al,dl
  411b7f:	push   es
  411b80:	dec    edx
  411b81:	pop    esp
  411b82:	add    DWORD PTR [eax+eax*2+0x40],ebx
  411b86:	mov    BYTE PTR [eax+edx*2],al
  411b89:	adc    BYTE PTR [ebx+0x25],al
  411b8c:	cmp    DWORD PTR [eax-0x77f7fb7e],eax
  411b92:	sub    BYTE PTR [ecx+0x41a04080],bl
  411b98:	or     BYTE PTR [eax+0x6100284],cl
  411b9e:	add    eax,0x8184418
  411ba3:	add    al,BYTE PTR [eax-0x78]
  411ba6:	add    BYTE PTR [edx+eiz*8+0x0],al
  411baa:	push   ebx
  411bab:	cmp    BYTE PTR [eax],0x53
  411bae:	inc    ecx
  411baf:	mov    ds:0x5101e03,al
  411bb4:	or     BYTE PTR [eax+0x10],al
  411bb7:	or     BYTE PTR [ebx],dl
  411bb9:	and    al,0x6c
  411bbb:	and    al,0x6
  411bbd:	add    BYTE PTR [eax-0x5f1beff0],cl
  411bc3:	pop    ss
  411bc4:	or     BYTE PTR [eax+0x38],al
  411bc7:	and    al,0x0
  411bc9:	add    BYTE PTR [eax+0x43e05a],0x0
  411bd0:	add    DWORD PTR [eax+0x16100800],esp
  411bd6:	mov    al,0x18
  411bd8:	add    eax,DWORD PTR ds:0x82a058a0
  411bde:	ror    BYTE PTR [edx+0x4a],0x2
  411be2:	adc    BYTE PTR [ebp+0x0],dl
  411be5:	add    BYTE PTR [eax],cl
  411be7:	inc    ecx
  411be8:	add    al,BYTE PTR [eax+0x2]
  411beb:	and    BYTE PTR [eax+0xb],0x51
  411bef:	inc    eax
  411bf0:	or     DWORD PTR [eax+eax*1-0x7ff36f76],esp
  411bf7:	add    BYTE PTR [edx+eiz*1+0x182e2232],al
  411bfe:	inc    eax
  411bff:	adc    BYTE PTR [eax],al
  411c01:	add    dh,BYTE PTR [ecx+eax*1]
  411c04:	sub    BYTE PTR [edx],al
  411c06:	xchg   ebp,eax
  411c07:	mov    cl,0x2
  411c09:	add    BYTE PTR [eax+0x33480400],dh
  411c0f:	sbb    BYTE PTR [edx],al
  411c11:	and    al,BYTE PTR [edx]
  411c13:	inc    eax
  411c14:	add    eax,0xd9001a35
  411c19:	add    BYTE PTR [eax],ch
  411c1b:	adc    BYTE PTR [eax+edx*1],0xc0
  411c1f:	bound  edx,QWORD PTR [edx]
  411c21:	add    BYTE PTR [ecx],0x0
  411c24:	sub    BYTE PTR [edx+0x1b017151],al
  411c2a:	adc    DWORD PTR [ecx+0x0],eax
  411c2d:	or     eax,0x5748e62
  411c32:	and    DWORD PTR [eax+esi*1],ebp
  411c35:	inc    ecx
  411c36:	xchg   ecx,eax
  411c37:	add    dl,BYTE PTR [eax]
  411c39:	sbb    esp,DWORD PTR [ebp+0x68304381]
  411c3f:	mov    es,WORD PTR [esi]
  411c41:	adc    ah,BYTE PTR [ecx+0x11048036]
  411c47:	add    bl,BYTE PTR [edi]
  411c49:	rcr    BYTE PTR [ecx+ebx*1],0x5
  411c4d:	mov    cl,0x53
  411c4f:	adc    BYTE PTR [eax],al
  411c51:	inc    ecx
  411c52:	hlt    
  411c53:	dec    ebx
  411c54:	and    al,BYTE PTR [ecx+0x68]
  411c57:	call   0x874c468c
  411c5c:	add    al,0x49
  411c5e:	inc    ecx
  411c5f:	and    BYTE PTR [eax],cl
  411c61:	adc    BYTE PTR [eax],0x82
  411c64:	push   ecx
  411c65:	xchg   al,dl
  411c67:	sbb    ah,BYTE PTR [eax+0x31]
  411c6a:	fnstcw WORD PTR [ecx+0x0]
  411c6d:	push   es
  411c6e:	pop    es
  411c6f:	or     BYTE PTR [edx+edx*8],al
  411c72:	adc    al,0x14
  411c74:	xor    BYTE PTR [ecx],al
  411c76:	mov    BYTE PTR [eax+0x1],ah
  411c79:	mov    al,0xa
  411c7b:	add    BYTE PTR [ecx],bh
  411c7d:	popa   
  411c7e:	add    BYTE PTR [eax],cl
  411c80:	add    al,0x20
  411c82:	add    ah,cl
  411c84:	or     BYTE PTR [eax],cl
  411c86:	inc    eax
  411c87:	sbb    BYTE PTR [edx+0x58000000],ah
  411c8d:	adc    dl,BYTE PTR [ebx+eax*4+0xca0002a]
  411c94:	xchg   esp,eax
  411c95:	add    dl,al
  411c97:	mov    BYTE PTR [esp+eax*1],dh
  411c9a:	add    ecx,DWORD PTR es:[edx]
  411c9d:	or     BYTE PTR [ecx],al
  411c9f:	add    dl,BYTE PTR [eax+0x48]
  411ca2:	or     DWORD PTR [eax],eax
  411ca4:	add    BYTE PTR [ecx],cl
  411ca6:	inc    eax
  411ca7:	test   BYTE PTR [edx+0x2a],cl
  411caa:	add    cl,0x10
  411cad:	xor    BYTE PTR [eax+0x6],0x28
  411cb1:	retf   0x8101
  411cb4:	push   ecx
  411cb5:	mov    al,0x0
  411cb7:	mov    es,WORD PTR ds:0x4c065005
  411cbd:	and    BYTE PTR [edx+eiz*1],al
  411cc0:	add    ch,BYTE PTR [edx+ecx*1+0x4a]
  411cc4:	xor    al,BYTE PTR [eax+ebx*1]
  411cc7:	add    cl,BYTE PTR [eax]
  411cc9:	add    BYTE PTR [ebx-0x79],al
  411ccc:	jmp    0x82c11cd5
  411cd1:	inc    eax
  411cd2:	push   ebp
  411cd3:	add    bl,BYTE PTR [eax]
  411cd5:	xchg   ebp,eax
  411cd6:	xchg   esp,eax
  411cd7:	add    eax,DWORD PTR [ecx]
  411cd9:	add    BYTE PTR [edx],ah
  411cdb:	add    BYTE PTR [eax],dl
  411cdd:	add    BYTE PTR [ebp+0x41009406],al
  411ce3:	nop
  411ce4:	xor    BYTE PTR [eax+eiz*2],0x5
  411ce8:	inc    ecx
  411ce9:	test   al,0x14
  411ceb:	add    al,0x88
  411ced:	adc    ah,ah
  411cef:	adc    al,0x0
  411cf1:	push   es
  411cf2:	adc    DWORD PTR [eax+edx*1],ebp
  411cf5:	sub    al,BYTE PTR [eax+0x49]
  411cf8:	inc    esp
  411cf9:	add    BYTE PTR [ecx+eiz*1],bl
  411cfc:	add    BYTE PTR [eax],dl
  411cfe:	dec    eax
  411cff:	add    al,0x20
  411d01:	lds    eax,FWORD PTR [edx]
  411d03:	or     BYTE PTR [eax],ch
  411d05:	and    ch,BYTE PTR [eax]
  411d07:	add    al,0x88
  411d09:	nop
  411d0a:	add    BYTE PTR [eax-0x70],dl
  411d0d:	push   cs
  411d0e:	bound  ebx,QWORD PTR [ecx-0x7a]
  411d11:	add    BYTE PTR [edx],0xa0
  411d14:	add    al,0x86
  411d16:	inc    esp
  411d17:	adc    BYTE PTR [eax-0x78],0x50
  411d1b:	add    bl,BYTE PTR [eax-0x3b9db1d4]
  411d21:	adc    BYTE PTR fs:[esi+0x40],dh
  411d25:	sbb    BYTE PTR [edx+0x38],al
  411d28:	adc    BYTE PTR [ebp-0x3c],ch
  411d2b:	and    WORD PTR [edx],ax
  411d2e:	or     BYTE PTR [eax+0x6140ae],0x40
  411d35:	mov    ebp,0x2000b0
  411d3a:	cmp    DWORD PTR [eax+0x2],ecx
  411d3d:	popa   
  411d3e:	add    edx,DWORD PTR [eax+0x10]
  411d41:	adc    dl,BYTE PTR [esi+0x5080044]
  411d47:	mov    al,0x41
  411d49:	sbb    BYTE PTR [edx],al
  411d4b:	lea    ecx,[ecx]
  411d4d:	or     al,BYTE PTR [eax]
  411d4f:	xor    ebp,eax
  411d51:	add    al,0x22
  411d53:	push   esi
  411d54:	pusha  
  411d55:	add    BYTE PTR [ebx+0x40b0041],al
  411d5b:	and    BYTE PTR [ecx],0x25
  411d5e:	and    al,0x1c
  411d60:	inc    eax
  411d61:	retf   0x141
  411d64:	xor    DWORD PTR [ecx+0x2],ecx
  411d67:	jno    0x411d79
  411d69:	xor    BYTE PTR [esi+0x2d2c4220],al
  411d6f:	adc    BYTE PTR [esi],0x30
  411d72:	mov    BYTE PTR [eax],ah
  411d74:	add    DWORD PTR [eax],eax
  411d76:	and    DWORD PTR [ecx+0x2e],esp
  411d79:	add    al,0x10
  411d7b:	or     dl,BYTE PTR [eax+0x9]
  411d7e:	mov    ecx,0xa9003400
  411d83:	and    DWORD PTR [eax+0x10],eax
  411d86:	add    BYTE PTR [eax+0x40],cl
  411d89:	add    DWORD PTR [ecx],esi
  411d8b:	hlt    
  411d8c:	or     al,BYTE PTR [edx+0x14408242]
  411d92:	or     BYTE PTR [eax+eax*1+0x144ec00],ah
  411d99:	add    ch,ah
  411d9b:	add    BYTE PTR [eax],bl
  411d9d:	or     BYTE PTR [eax],dh
  411d9f:	add    ch,BYTE PTR [edx]
  411da1:	inc    ecx
  411da2:	add    ecx,DWORD PTR [ecx+0x68000008]
  411da8:	xor    BYTE PTR [eax],0x10
  411dab:	and    DWORD PTR [eax],ecx
  411dad:	add    cl,BYTE PTR [edx+0x19801021]
  411db3:	or     al,0x62
  411db5:	les    edx,FWORD PTR [ecx+0x22041128]
  411dbb:	and    BYTE PTR es:[ecx+0x2b710002],ch
  411dc2:	add    BYTE PTR [eax],bl
  411dc4:	and    dl,al
  411dc6:	and    BYTE PTR [edx],0x0
  411dc9:	inc    ebx
  411dca:	add    BYTE PTR [eax],dh
  411dcc:	add    BYTE PTR [ecx+0x401004],al
  411dd2:	add    BYTE PTR [ecx],0x20
  411dd5:	add    ah,BYTE PTR [edx+0x51]
  411dd8:	add    al,dl
  411dda:	add    DWORD PTR [eax],eax
  411ddc:	nop
  411ddd:	and    dl,BYTE PTR [eax]
  411ddf:	and    bl,BYTE PTR [eax+0x2e]
  411de2:	add    eax,DWORD PTR [ecx-0x6f]
  411de5:	and    BYTE PTR [eax],bl
  411de7:	add    eax,0x14024a66
  411dec:	inc    ecx
  411ded:	add    DWORD PTR [eax],eax
  411def:	inc    eax
  411df0:	push   es
  411df1:	test   ch,al
  411df3:	mov    DWORD PTR [eax],eax
  411df5:	inc    ebx
  411df6:	and    DWORD PTR [eax],eax
  411df8:	and    DWORD PTR [edx],0x58
  411dfb:	add    al,0x91
  411dfd:	or     BYTE PTR [eax+eiz*1+0xc],ah
  411e01:	add    DWORD PTR [eax],edx
  411e03:	and    bh,BYTE PTR ds:0x99017ce2
  411e09:	jno    0x411e0b
  411e0b:	add    al,BYTE PTR [edx]
  411e0d:	xor    bl,BYTE PTR [eax]
  411e0f:	sub    BYTE PTR [esi+ecx*2-0x2fffff4d],al
  411e16:	push   esp
  411e17:	add    al,0x20
  411e19:	rol    DWORD PTR [eax],0x82
  411e1c:	mov    esp,0x202
  411e21:	and    al,0xc
  411e23:	add    BYTE PTR [eax+0x10],al
  411e26:	arpl   WORD PTR [edx-0x7c],cx
  411e29:	add    BYTE PTR fs:[eax-0x55f7f200],dl
  411e30:	daa    
  411e31:	xlat   BYTE PTR ds:[ebx]
  411e32:	add    BYTE PTR [ecx+0x0],al
  411e35:	sub    BYTE PTR [eax+0x82008],ah
  411e3b:	add    al,cl
  411e3d:	add    BYTE PTR [eax+ebx*4+0x10],ah
  411e41:	inc    eax
  411e42:	or     DWORD PTR es:[ecx],ecx
  411e45:	inc    ebx
  411e46:	push   eax
  411e47:	inc    ecx
  411e48:	add    BYTE PTR [edx+0x0],al
  411e4b:	add    eax,0x200544
  411e50:	inc    eax
  411e51:	inc    esi
  411e52:	dec    eax
  411e53:	add    BYTE PTR [ecx-0x80],0xa1
  411e57:	add    al,BYTE PTR [ebx]
  411e59:	adc    al,0x95
  411e5b:	adc    DWORD PTR [ecx+0xc202001],0x8100428a
  411e65:	add    DWORD PTR [edx+0x34a100dc],edi
  411e6b:	add    DWORD PTR [eax],eax
  411e6d:	add    BYTE PTR [ecx],al
  411e6f:	or     al,0x3
  411e71:	add    ah,BYTE PTR [edx]
  411e73:	add    DWORD PTR [ecx],eax
  411e75:	or     DWORD PTR [ecx+0x4],eax
  411e78:	mov    al,al
  411e7a:	add    DWORD PTR [eax],eax
  411e7c:	add    al,BYTE PTR ds:0x4087080c
  411e82:	(bad)  
  411e83:	dec    eax
  411e84:	inc    eax
  411e85:	add    BYTE PTR [eax],ah
  411e87:	rol    BYTE PTR [eax+ecx*1],0x5e
  411e8b:	add    DWORD PTR [ebx],edx
  411e8d:	nop
  411e8e:	add    ah,BYTE PTR [esi+0x62]
  411e91:	ss add bl,al
  411e94:	add    DWORD PTR [eax+ebx*1+0x58568236],esp
  411e9b:	or     eax,DWORD PTR [eax]
  411e9d:	inc    edx
  411e9e:	test   BYTE PTR [ecx],ah
  411ea0:	add    DWORD PTR [eax],ecx
  411ea2:	add    BYTE PTR [eax],al
  411ea4:	push   edx
  411ea5:	adc    BYTE PTR [eax+0x10],ch
  411ea8:	mov    DWORD PTR [eax+0x2009882],esp
  411eae:	inc    esp
  411eaf:	add    BYTE PTR [edx],al
  411eb1:	mov    al,ds:0xc80b8886
  411eb6:	inc    ebx
  411eb7:	jo     0x411e39
  411eb9:	inc    eax
  411eba:	mov    al,ds:0x20d300
  411ebf:	adc    edi,DWORD PTR [edx]
  411ec1:	jno    0x411ee3
  411ec3:	adc    cl,BYTE PTR ds:0x20400e01
  411ec9:	add    BYTE PTR [eax],0x81
  411ecc:	pusha  
  411ecd:	adc    BYTE PTR [edx],0xa
  411ed0:	adc    BYTE PTR [eax],cl
  411ed2:	nop
  411ed3:	add    BYTE PTR [esp+ecx*4+0xb4b2a5],bl
  411eda:	inc    eax
  411edb:	and    al,BYTE PTR [eax+0x4]
  411ede:	add    BYTE PTR [eax+0x40],bl
  411ee1:	and    DWORD PTR [ecx+0x50],esp
  411ee4:	and    DWORD PTR [eax],esi
  411ee6:	inc    esp
  411ee7:	and    BYTE PTR [eax-0x80],ch
  411eea:	add    BYTE PTR [eax+0x0],bl
  411eed:	rol    BYTE PTR [eax],0x0
  411ef0:	rcr    BYTE PTR [edx+0x41022100],0xb
  411ef7:	push   eax
  411ef8:	xor    BYTE PTR [ebx+0x64],al
  411efb:	and    al,BYTE PTR [ebx+0x1]
  411efe:	or     DWORD PTR [eax-0x3bffdf60],eax
  411f04:	sbb    eax,DWORD PTR [ebp+esi*4-0x20]
  411f08:	and    BYTE PTR [eax],al
  411f0a:	jo     0x411e8f
  411f0c:	dec    eax
  411f0d:	or     DWORD PTR [eax+0x48],eax
  411f10:	dec    eax
  411f11:	or     BYTE PTR [ebp+0x40602044],al
  411f17:	add    eax,DWORD PTR ds:0x4e210991
  411f1d:	retf   0x1000
  411f20:	adc    BYTE PTR [edx],ah
  411f22:	or     BYTE PTR [ebx],al
  411f24:	or     BYTE PTR [edx+0x2],dl
  411f27:	xchg   DWORD PTR [eax+0x10],ebp
  411f2a:	or     eax,0x20241100
  411f2f:	inc    ecx
  411f30:	sub    al,0xc
  411f33:	mov    ds:0x1980e6a2,eax
  411f38:	and    BYTE PTR [eax+eiz*1],al
  411f3b:	adc    cl,ah
  411f3d:	and    BYTE PTR [ebx+0x8],ah
  411f40:	push   ebp
  411f41:	add    DWORD PTR ds:0x2222810,eax
  411f47:	adc    BYTE PTR [eax],dl
  411f49:	mov    BYTE PTR [eax],ah
  411f4b:	or     BYTE PTR [esi],al
  411f4d:	or     BYTE PTR [edx+0x44],cl
  411f50:	sbb    al,cl
  411f52:	inc    eax
  411f53:	xor    DWORD PTR [eax],ecx
  411f55:	cwde   
  411f56:	or     BYTE PTR [eax+0x11],al
  411f59:	test   DWORD PTR [ecx+0x61031841],eax
  411f5f:	add    BYTE PTR [eax+0x844214],bl
  411f65:	loopne 0x411fad
  411f67:	add    al,0x83
  411f69:	inc    eax
  411f6a:	or     ecx,ebp
  411f6c:	dec    ebx
  411f6d:	inc    eax
  411f6e:	mov    eax,ds:0x3a1044
  411f73:	inc    esp
  411f74:	or     BYTE PTR [edx],dl
  411f76:	and    DWORD PTR [eax],ecx
  411f78:	cwde   
  411f79:	rol    DWORD PTR [eax+0x600aa843],1
  411f7f:	adc    BYTE PTR [eax],ah
  411f81:	or     BYTE PTR [edx],al
  411f83:	inc    ecx
  411f84:	nop
  411f85:	xchg   BYTE PTR [eax],al
  411f87:	add    cl,BYTE PTR [ebx-0x76dffdbf]
  411f8d:	test   BYTE PTR [eax],al
  411f8f:	sub    BYTE PTR [eax+0x81088],0x40
  411f96:	inc    ecx
  411f97:	add    BYTE PTR [eax],cl
  411f99:	adc    al,BYTE PTR [eax-0x3c]
  411f9c:	sbb    DWORD PTR [ebp+0x43],0x16
  411fa0:	and    al,BYTE PTR [eax-0x57]
  411fa3:	add    BYTE PTR [edx],ah
  411fa5:	jo     0x411fa6
  411fa7:	adc    eax,0x43b650
  411fac:	cdq    
  411fad:	sbb    eax,0x1023021
  411fb2:	xor    eax,DWORD PTR [edx-0x6f]
  411fb5:	mov    al,ds:0x96a103c
  411fba:	xor    al,BYTE PTR [ecx+0x20280009]
  411fc0:	sbb    BYTE PTR [eax+ecx*1],al
  411fc3:	add    al,BYTE PTR [esp+eax*4]
  411fc6:	adc    BYTE PTR [ecx+0x12046060],0xc9
  411fcd:	add    BYTE PTR [ebx+0x40],cl
  411fd0:	sbb    BYTE PTR [edx+ebx*1],bl
  411fd3:	icebp  
  411fd4:	add    BYTE PTR [edx+eax*8+0x50],bl
  411fd8:	rcr    BYTE PTR [ecx],0x0
  411fdb:	pusha  
  411fdc:	cwde   
  411fdd:	call   0x804c:0x8c600109
  411fe4:	push   eax
  411fe5:	add    BYTE PTR [eax+0x10],cl
  411fe8:	xchg   ebp,eax
  411fe9:	and    DWORD PTR [edx],eax
  411feb:	test   BYTE PTR [eax+edx*2],ah
  411fee:	add    BYTE PTR ds:0x28251508,0x22
  411ff5:	inc    ecx
  411ff6:	sub    ah,dl
  411ff8:	adc    BYTE PTR [eax-0x80],ah
  411ffb:	add    BYTE PTR [esp+ebp*1],ah
  411ffe:	inc    eax
  411fff:	pushf  
  412000:	xchg   edx,eax
  412001:	and    BYTE PTR [ecx+0x281002b2],ah
  412007:	adc    DWORD PTR [ecx],ecx
  412009:	and    BYTE PTR [esi],al
  41200b:	add    BYTE PTR [eax+0x62],ch
  41200e:	and    esi,DWORD PTR [eax+edi*1]
  412011:	mov    BYTE PTR [edx-0x73a369fe],dl
  412017:	inc    edx
  412018:	add    al,0x1
  41201a:	add    al,0x4a
  41201c:	sbb    DWORD PTR [eax+0xb],edx
  41201f:	mov    BYTE PTR [eax+0x41234220],0x54
  412026:	add    DWORD PTR [ecx+0x28014811],edi
  41202c:	arpl   WORD PTR [edx+0x56202404],cx
  412032:	nop
  412033:	or     ah,BYTE PTR [ecx-0x5bfdbdfb]
  412039:	inc    ecx
  41203a:	add    BYTE PTR [eax],0x10
  41203d:	and    BYTE PTR fs:[edx],0x0
  412041:	and    eax,0x441b0828
  412046:	shl    BYTE PTR [ebx+esi*2+0x2985a342],0x11
  41204e:	push   esp
  41204f:	mov    al,0x90
  412051:	rol    BYTE PTR [eax],0x1
  412054:	mov    ds:0x4c640128,eax
  412059:	inc    edx
  41205a:	xor    BYTE PTR [eax],bl
  41205c:	mov    DWORD PTR [ecx],esi
  41205e:	and    DWORD PTR [eax],eax
  412060:	and    BYTE PTR [edx+edx*2],al
  412063:	push   es
  412064:	and    cl,BYTE PTR [esi]
  412066:	add    DWORD PTR [ebp+0x0],esp
  412069:	nop
  41206a:	sbb    ah,BYTE PTR [ecx]
  41206c:	add    BYTE PTR [eax],0x46
  41206f:	test   BYTE PTR [eax-0x577bfbf8],al
  412075:	add    al,0x98
  412077:	mov    bl,0x8
  412079:	adc    DWORD PTR [eax],0x428d5a18
  41207f:	adc    DWORD PTR [eax+0x9],edi
  412082:	mov    cl,BYTE PTR [ecx]
  412084:	rol    DWORD PTR [ebx],0x44
  412087:	and    eax,0xc0401152
  41208c:	or     BYTE PTR [edx+0x46524400],dl
  412092:	cmovo  eax,DWORD PTR [eax]
  412095:	push   ss
  412096:	shl    DWORD PTR [esi+ecx*1-0x6eff7f10],0x40
  41209e:	xchg   edx,eax
  41209f:	add    DWORD PTR [edi+0x64],esp
  4120a2:	and    BYTE PTR [eax],dh
  4120a4:	ror    BYTE PTR [ecx],0x10
  4120a7:	adc    eax,0x418140c2
  4120ac:	and    al,0x1
  4120ae:	add    eax,DWORD PTR [edi]
  4120b0:	add    BYTE PTR [ecx],0x50
  4120b3:	adc    BYTE PTR [ebx],dl
  4120b5:	inc    ecx
  4120b6:	bound  eax,QWORD PTR [eax+eax*4+0x110410d2]
  4120bd:	add    BYTE PTR [eax+0x65],al
  4120c0:	sbb    al,0x11
  4120c2:	adc    DWORD PTR [eax],ebp
  4120c4:	or     BYTE PTR [ecx+ebx*1+0x102a1184],dl
  4120cb:	or     BYTE PTR [edx+0x0],al
  4120ce:	add    bl,BYTE PTR [ebp+0x12408841]
  4120d4:	pop    eax
  4120d5:	rol    BYTE PTR [eax+0x2120ea2],0x1c
  4120dc:	les    eax,FWORD PTR [eax]
  4120de:	or     cl,BYTE PTR [eax]
  4120e0:	je     0x412076
  4120e2:	arpl   WORD PTR [eax+0x2220101],sp
  4120e8:	dec    eax
  4120e9:	add    DWORD PTR [ecx],ebp
  4120eb:	inc    esp
  4120ec:	shl    ah,1
  4120ee:	push   edx
  4120ef:	pusha  
  4120f0:	add    al,0x0
  4120f3:	add    al,0x40
  4120f5:	mov    bl,BYTE PTR [eax]
  4120f7:	pop    ecx
  4120f8:	add    DWORD PTR [eax],eax
  4120fa:	inc    ecx
  4120fb:	add    BYTE PTR [edx],0x92
  4120fe:	add    dl,ah
  412100:	dec    eax
  412101:	arpl   WORD PTR [eax],si
  412103:	inc    esp
  412104:	add    DWORD PTR [edx+0x180a408a],ecx
  41210a:	sbb    al,0x50
  41210c:	adc    BYTE PTR [eax],0x20
  41210f:	test   BYTE PTR [edx],ah
  412111:	dec    eax
  412112:	add    BYTE PTR [eax],al
  412114:	rcl    DWORD PTR [eax],0x4
  412117:	mov    BYTE PTR [eax],al
  412119:	add    al,BYTE PTR [eax+eiz*1+0x40c04019]
  412120:	and    eax,edx
  412122:	and    BYTE PTR [eax],cl
  412124:	sbb    BYTE PTR [eax],al
  412126:	push   ecx
  412127:	and    BYTE PTR [edx+0x40],cl
  41212a:	inc    edi
  41212b:	pop    ss
  41212c:	ret    
  41212d:	add    BYTE PTR [eax+0x6b914281],al
  412133:	or     dl,BYTE PTR [edx+0x0]
  412136:	and    DWORD PTR [eax+0x1880a803],eax
  41213c:	and    eax,DWORD PTR [eax+0x2a]
  41213f:	push   esp
  412140:	and    al,0x18
  412142:	xor    BYTE PTR [eax+eax*1],ah
  412145:	or     BYTE PTR [ecx],0x81
  412148:	outs   dx,BYTE PTR ds:[esi]
  412149:	adc    BYTE PTR [eax+0x40],ch
  41214c:	rol    al,1
  41214e:	and    BYTE PTR [eax],ah
  412150:	xor    BYTE PTR [eax-0x7efbdfc3],0x4
  412157:	add    BYTE PTR [eax],cl
  412159:	dec    eax
  41215a:	fcom   DWORD PTR [edx]
  41215c:	push   0x30
  41215e:	loope  0x4120e8
  412160:	push   es
  412161:	es push cs
  412163:	or     BYTE PTR [eax],al
  412165:	xor    BYTE PTR [eax],al
  412167:	or     BYTE PTR [ecx],cl
  412169:	dec    eax
  41216a:	sub    BYTE PTR [eax+0x4a9a2484],ah
  412170:	and    eax,eax
  412172:	adc    DWORD PTR [ecx+eax*2],ecx
  412175:	add    DWORD PTR [esi],eax
  412177:	adc    DWORD PTR [edx],eax
  412179:	push   es
  41217a:	xchg   ecx,eax
  41217b:	dec    esp
  41217c:	or     dl,BYTE PTR [esi]
  41217e:	or     DWORD PTR [eax+0x10],eax
  412181:	add    esp,DWORD PTR ds:0x89880205
  412187:	adc    dl,BYTE PTR [edx]
  412189:	add    BYTE PTR [ecx],bl
  41218b:	inc    ecx
  41218c:	sub    BYTE PTR [ecx],cl
  41218e:	inc    ecx
  41218f:	mov    BYTE PTR ds:0x102010,ah
  412195:	nop
  412196:	mov    al,ds:0x4001010
  41219b:	add    al,bh
  41219d:	adc    DWORD PTR [eax+0x0],eax
  4121a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4121a1:	add    DWORD PTR [ebx+0x48],ecx
  4121a4:	push   es
  4121a5:	add    BYTE PTR [eax+0xc4a0],dl
  4121ab:	inc    eax
  4121ac:	inc    eax
  4121ad:	repz adc BYTE PTR [eax],al
  4121b0:	inc    eax
  4121b1:	add    DWORD PTR [edi+0x40],ecx
  4121b4:	and    al,0x6
  4121b6:	nop
  4121b7:	dec    ecx
  4121b8:	or     al,0x48
  4121ba:	and    al,0x21
  4121bc:	in     eax,0x11
  4121be:	mov    BYTE PTR [ebx+0x0],bl
  4121c1:	add    dl,BYTE PTR [ebx+0x4]
  4121c4:	nop
  4121c5:	dec    edx
  4121c6:	rol    DWORD PTR [edx+0x641800c0],0x20
  4121cd:	or     DWORD PTR [eax+0x842a31],0x69
  4121d4:	dec    eax
  4121d5:	pop    eax
  4121d6:	and    al,0x8a
  4121d8:	popa   
  4121d9:	add    al,0xa0
  4121db:	add    BYTE PTR [eax+0x30],0x2
  4121df:	add    BYTE PTR [ecx-0x7e],al
  4121e2:	push   eax
  4121e3:	add    dh,al
  4121e5:	add    BYTE PTR [ecx],al
  4121e7:	and    BYTE PTR [esi],ah
  4121e9:	add    al,0x36
  4121eb:	mov    DWORD PTR [eax+ecx*1+0x20],ecx
  4121ef:	pop    es
  4121f0:	mov    al,ds:0xc0e28005
  4121f5:	dec    edi
  4121f6:	or     DWORD PTR [eax],0x41f021b2
  4121fc:	cwde   
  4121fd:	dec    ecx
  4121fe:	or     BYTE PTR [ecx+edi*8],ah
  412201:	inc    esp
  412202:	add    BYTE PTR [eax],al
  412204:	inc    eax
  412205:	add    eax,0x41101143
  41220a:	mov    al,ds:0x2045a4d8
  41220f:	inc    eax
  412210:	add    BYTE PTR [edx],al
  412212:	sub    al,0x0
  412214:	sbb    al,0x0
  412216:	add    DWORD PTR [edx],eax
  412218:	inc    eax
  412219:	and    BYTE PTR [eax],ah
  41221b:	sub    DWORD PTR [esi+eiz*1+0x12480196],edx
  412222:	test   al,bl
  412224:	add    BYTE PTR [edx+0xa],ah
  412227:	add    cl,ah
  412229:	inc    eax
  41222a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41222b:	add    BYTE PTR [ecx+0x508cf088],al
  412231:	and    BYTE PTR [edx+edx*4],0x1
  412235:	add    DWORD PTR [ecx+0x60304212],esp
  41223b:	sbb    esi,DWORD PTR [ecx]
  41223d:	or     ah,BYTE PTR [ecx]
  41223f:	sub    DWORD PTR [eax+0x9],edx
  412242:	sbb    cl,BYTE PTR [ebp-0x7d4537c7]
  412248:	or     BYTE PTR [edx+0x2a061128],al
  41224e:	adc    DWORD PTR [ecx-0x12ecd2fe],0x62286a8a
  412258:	and    DWORD PTR [eax+eax*2+0x4],eax
  41225c:	bound  eax,QWORD PTR [eax+0x5]
  41225f:	mov    WORD PTR [eax+0x5a400a18],cs
  412265:	and    DWORD PTR [ecx],eax
  412267:	adc    BYTE PTR es:[ebx],ah
  41226a:	inc    eax
  41226b:	add    BYTE PTR [eax],dl
  41226d:	imul   ebp,DWORD PTR [eax+0x11913c08],0x16
  412274:	add    DWORD PTR [ecx],eax
  412276:	mov    DWORD PTR [eax-0x7c],eax
  412279:	inc    ebp
  41227a:	add    BYTE PTR [ebx],ch
  41227c:	jns    0x4122a0
  41227e:	sub    BYTE PTR [eax-0x6f5ffaf0],ah
  412284:	les    ecx,FWORD PTR [eax+eiz*1]
  412287:	sbb    DWORD PTR [edx+eax*1+0x0],ecx
  41228b:	or     esi,DWORD PTR fs:[ecx+eax*1+0xea84050]
  412293:	mov    cl,BYTE PTR [eax]
  412295:	adc    eax,0x790a020
  41229a:	xor    BYTE PTR [esp+eax*1-0x1f],0xc5
  41229f:	and    BYTE PTR [eax],al
  4122a1:	and    cl,BYTE PTR [ecx]
  4122a3:	jne    0x4122d7
  4122a5:	add    BYTE PTR [ecx+0x40],dl
  4122a8:	sub    dh,al
  4122aa:	jo     0x4122be
  4122ac:	pop    es
  4122ad:	rol    BYTE PTR [ecx+0x50850509],1
  4122b3:	adc    BYTE PTR [edx],al
  4122b5:	or     BYTE PTR [eax],al
  4122b7:	dec    eax
  4122b8:	pop    eax
  4122b9:	add    BYTE PTR [eax+ecx*2+0x18009801],al
  4122c0:	add    BYTE PTR [edx],al
  4122c2:	or     DWORD PTR [eax-0x7da2bb6f],ebx
  4122c8:	adc    al,0x41
  4122ca:	mov    WORD PTR [eax+0x0],ss
  4122cd:	or     al,0x49
  4122cf:	inc    eax
  4122d0:	jo     0x412272
  4122d2:	nop
  4122d3:	add    BYTE PTR [eax],ah
  4122d5:	inc    edx
  4122d6:	add    eax,DWORD PTR [eax-0x7e]
  4122d9:	and    BYTE PTR [eax],ah
  4122db:	mov    ds:0x474a981,al
  4122e0:	sub    DWORD PTR [ecx],ecx
  4122e2:	or     BYTE PTR [eax+esi*4+0x31],dl
  4122e6:	cmp    ah,BYTE PTR [ecx]
  4122e8:	xchg   esp,eax
  4122e9:	add    BYTE PTR [ecx],al
  4122eb:	nop
  4122ec:	add    BYTE PTR [eax],al
  4122ee:	mov    BYTE PTR [eax+0x1f],dl
  4122f1:	nop
  4122f2:	sub    dl,BYTE PTR [edx+0x28263c12]
  4122f8:	push   edi
  4122f9:	and    DWORD PTR [eax-0x67],eax
  4122fc:	add    al,0x44
  4122fe:	mov    ds:0x40541c92,al
  412303:	adc    ch,BYTE PTR [ecx+0x58]
  412306:	push   ds
  412307:	mov    al,0x98
  412309:	inc    ebp
  41230a:	sbb    DWORD PTR [eax-0x5afbfe00],esi
  412310:	xchg   BYTE PTR [ebx-0x2e4efc88],dl
  412316:	arpl   WORD PTR [eax],ax
  412318:	inc    ebp
  412319:	add    cl,BYTE PTR [edx+0x2]
  41231c:	pop    es
  41231d:	ins    BYTE PTR es:[edi],dx
  41231e:	or     al,dl
  412320:	add    DWORD PTR [eax],0x9
  412323:	lock add eax,0x2000e00
  412329:	add    al,0x6
  41232b:	test   BYTE PTR [ecx+0x22],al
  41232e:	add    BYTE PTR [eax+0x0],al
  412331:	and    BYTE PTR [edi+0xc],al
  412334:	jno    0x412336
  412336:	add    BYTE PTR [eax],ah
  412338:	inc    ecx
  412339:	add    al,0x0
  41233b:	dec    eax
  41233c:	adc    BYTE PTR [ebp+0x15017412],bl
  412342:	bound  edx,QWORD PTR [edx]
  412344:	dec    ecx
  412345:	sub    al,0x95
  412347:	sub    DWORD PTR [eax],esp
  412349:	enter  0x4400,0x2a
  41234d:	add    BYTE PTR [ecx+eax*2],0x40
  412351:	add    DWORD PTR [ecx+eax*1],edx
  412354:	and    BYTE PTR [ebx],al
  412356:	add    BYTE PTR ss:[eax],ah
  412359:	adc    DWORD PTR [edx],ecx
  41235b:	mov    al,0x60
  41235d:	rcr    bh,1
  41235f:	xchg   ecx,eax
  412360:	or     dl,cl
  412362:	push   ds
  412363:	add    DWORD PTR [eax],eax
  412365:	xchg   ecx,eax
  412366:	add    DWORD PTR [edx],eax
  412368:	add    BYTE PTR [eax-0x7bb9dff8],al
  41236e:	and    BYTE PTR [esi-0x5bdff37c],bl
  412374:	push   0x12725090
  412379:	add    BYTE PTR [eax+0x12070602],cl
  41237f:	inc    edx
  412380:	stos   BYTE PTR es:[edi],al
  412381:	push   eax
  412382:	or     BYTE PTR [edx],ch
  412384:	mov    BYTE PTR [ecx+0x10],bl
  412387:	inc    eax
  412388:	jno    0x41238a
  41238a:	adc    ah,BYTE PTR [edx+eax*2]
  41238d:	nop
  41238e:	or     BYTE PTR [eax+eax*2],cl
  412391:	es inc eax
  412393:	add    BYTE PTR [eax],al
  412395:	or     al,BYTE PTR [eax]
  412397:	xor    DWORD PTR [eax-0x75],eax
  41239a:	or     BYTE PTR [ecx],al
  41239c:	pop    es
  41239d:	and    al,0x50
  41239f:	or     al,0x4
  4123a1:	aam    0x93
  4123a3:	sbb    BYTE PTR [edx],cl
  4123a5:	add    bh,BYTE PTR [eax+eax*2]
  4123a8:	inc    edi
  4123a9:	and    dl,BYTE PTR [eax]
  4123ab:	or     BYTE PTR [edx],ah
  4123ad:	add    BYTE PTR [edi],al
  4123af:	shl    DWORD PTR [eax],0x2
  4123b2:	add    BYTE PTR [eax],cl
  4123b4:	and    al,0x10
  4123b6:	add    eax,0x89804116
  4123bb:	add    al,BYTE PTR [eax+0x14058210]
  4123c1:	add    dl,BYTE PTR [ebx]
  4123c3:	and    BYTE PTR [eax],al
  4123c5:	add    ebp,DWORD PTR [ebp+eax*4+0xa190c8]
  4123cc:	mov    DWORD PTR ds:0x960680a0,0xe0c1130
  4123d6:	mov    ah,BYTE PTR [eax]
  4123d8:	push   ecx
  4123d9:	sub    DWORD PTR [edi],0xc
  4123dc:	pop    eax
  4123dd:	add    BYTE PTR [ecx],al
  4123df:	sub    DWORD PTR [eax-0x36],eax
  4123e2:	cwde   
  4123e3:	add    BYTE PTR [eax],dh
  4123e5:	sbb    al,0x28
  4123e7:	add    BYTE PTR [ecx-0x7c7fd300],dl
  4123ed:	or     eax,0x808a201a
  4123f2:	inc    esp
  4123f3:	mov    dl,0x63
  4123f5:	inc    eax
  4123f6:	js     0x412404
  4123f8:	les    eax,FWORD PTR [ecx]
  4123fa:	and    BYTE PTR [eax],0x1
  4123fd:	inc    ecx
  4123fe:	inc    edx
  4123ff:	add    BYTE PTR [edx+0x20],al
  412402:	sub    DWORD PTR [eax+0x8],eax
  412405:	adc    bl,BYTE PTR [ecx]
  412407:	sbb    eax,0x28049081
  41240c:	in     al,0x83
  41240e:	inc    esi
  41240f:	push   ecx
  412410:	or     BYTE PTR [eax],dl
  412412:	or     BYTE PTR [edx],dl
  412414:	mov    WORD PTR [edx+0x7184146],cs
  41241a:	add    BYTE PTR [edx],0x82
  41241d:	mov    ah,0x25
  41241f:	xor    al,0x0
  412421:	cwde   
  412422:	or     BYTE PTR [ecx-0x18],ah
  412425:	pusha  
  412426:	outs   dx,BYTE PTR ds:[esi]
  412427:	jno    0x4123cd
  412429:	and    dl,BYTE PTR [eax+0x3c0400e4]
  41242f:	rol    DWORD PTR [ebx+edx*2-0x2a],cl
  412433:	sbb    al,BYTE PTR [eax]
  412435:	add    eax,0x12094020
  41243a:	test   BYTE PTR ds:0x817c1040,al
  412440:	adc    al,0x28
  412442:	add    DWORD PTR [eax],eax
  412444:	sbb    BYTE PTR [eax],al
  412446:	add    BYTE PTR [eax],ch
  412448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412449:	inc    esi
  41244a:	mov    BYTE PTR [eax],cl
  41244c:	or     BYTE PTR [eax],0x20
  41244f:	add    BYTE PTR [edx+0x4180006e],0x0
  412456:	xor    BYTE PTR [ebx],dl
  412458:	mov    al,ds:0x605443c0
  41245d:	pop    esi
  41245e:	adc    edi,eax
  412460:	adc    BYTE PTR [eax+0x1124c51c],dl
  412466:	add    DWORD PTR [edx+0x41],ecx
  412469:	nop
  41246a:	or     BYTE PTR [esp+ebp*2],cl
  41246d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41246e:	add    BYTE PTR [eax+0x2],al
  412471:	call   0x8031:0x1a050000
  412478:	inc    eax
  412479:	int    0x4
  41247b:	or     BYTE PTR [eax-0x7f],al
  41247e:	add    BYTE PTR [eax],cl
  412480:	inc    ecx
  412481:	or     ah,BYTE PTR [eax]
  412483:	rcl    BYTE PTR [eax+0x493],0x15
  41248a:	or     BYTE PTR [esi],dl
  41248c:	add    BYTE PTR [eax+edx*2],al
  41248f:	or     BYTE PTR [eax+0x11d401],al
  412495:	or     cl,0x10
  412498:	mov    al,ds:0x11404521
  41249d:	adc    DWORD PTR [eax+0x21],esp
  4124a0:	push   esp
  4124a1:	and    eax,DWORD PTR [edx+0x30]
  4124a4:	adc    eax,0x1b042b24
  4124a9:	or     eax,0x64641120
  4124ae:	add    BYTE PTR [eax+0x10],dl
  4124b1:	or     BYTE PTR [edx],ch
  4124b3:	add    ebx,DWORD PTR ds:0x3008008d
  4124b9:	mov    ds:0x24010429,al
  4124be:	adc    eax,DWORD PTR [eax]
  4124c0:	adc    dl,BYTE PTR ds:0xac012802
  4124c6:	sbb    DWORD PTR es:[eax],edx
  4124c9:	add    DWORD PTR [eax],esp
  4124cb:	xor    al,0x0
  4124cd:	add    BYTE PTR [eax+eax*4],dl
  4124d0:	rcr    BYTE PTR [ecx],0x48
  4124d3:	js     0x4124dd
  4124d5:	push   cs
  4124d6:	or     edx,eax
  4124d8:	adc    DWORD PTR [eax+eax*4],ebx
  4124db:	pushf  
  4124dc:	sbb    BYTE PTR [eax],al
  4124de:	mov    DWORD PTR [esp+ecx*2+0x20850020],eax
  4124e5:	in     al,0x10
  4124e7:	sbb    eax,0x8a201404
  4124ec:	or     DWORD PTR [ecx],esp
  4124ee:	push   ss
  4124ef:	dec    eax
  4124f0:	sub    BYTE PTR [eax],0x1
  4124f3:	mov    eax,0x408cc027
  4124f8:	push   eax
  4124f9:	mov    WORD PTR [ecx],fs
  4124fb:	dec    edx
  4124fc:	and    eax,DWORD PTR [eax+eiz*1+0x6]
  412500:	and    BYTE PTR [eax+0x40104002],al
  412506:	and    BYTE PTR [ecx],al
  412508:	add    DWORD PTR [ebx+0x78],eax
  41250b:	push   eax
  41250c:	inc    ecx
  41250d:	add    ah,BYTE PTR [esp+eax*1]
  412510:	inc    eax
  412511:	add    al,0x2
  412513:	mov    WORD PTR [eax],gs
  412515:	inc    edx
  412516:	mov    BYTE PTR [eax],dl
  412518:	xor    al,ah
  41251a:	mov    ds:0x40010806,al
  41251f:	mov    al,ds:0x102208b4
  412524:	or     BYTE PTR [eax+esi*2+0x132e4082],bl
  41252b:	adc    DWORD PTR [eax],0xffffff81
  41252e:	adc    BYTE PTR [eax+0x1a40294d],bl
  412534:	add    al,0xa8
  412536:	inc    esi
  412537:	nop
  412538:	pop    eax
  412539:	add    BYTE PTR [eax-0x6f],al
  41253c:	or     DWORD PTR [eax-0x578b7a6a],eax
  412542:	sbb    al,dl
  412544:	test   eax,0x1ca98952
  412549:	add    BYTE PTR [eax+0xcc12021],al
  41254f:	add    eax,DWORD PTR [ecx]
  412551:	or     bl,BYTE PTR [eax+0x10]
  412554:	and    DWORD PTR [edx+0xe152007],edx
  41255a:	inc    edx
  41255b:	or     al,0xc1
  41255d:	adc    BYTE PTR [eax],al
  41255f:	push   es
  412560:	jo     0x412582
  412562:	add    al,al
  412564:	add    BYTE PTR [ebx],ah
  412566:	es add eax,0xc341841c
  41256c:	adc    al,bl
  41256e:	add    BYTE PTR [ebx],al
  412570:	jo     0x4124f3
  412572:	stos   BYTE PTR es:[edi],al
  412573:	dec    ecx
  412574:	add    dh,BYTE PTR [eax]
  412576:	adc    BYTE PTR [eax],0x69
  412579:	popa   
  41257a:	xor    BYTE PTR [eax],al
  41257c:	inc    ebp
  41257d:	add    ch,BYTE PTR [ebx]
  41257f:	push   es
  412580:	push   0x30
  412582:	adc    dl,BYTE PTR [edx]
  412584:	add    BYTE PTR [edx],ah
  412586:	adc    DWORD PTR [ecx+0x34],eax
  412589:	inc    eax
  41258a:	mov    DWORD PTR [edx],eax
  41258c:	jne    0x41259e
  41258e:	mov    BYTE PTR [eax-0x35],bl
  412591:	adc    ah,al
  412593:	add    BYTE PTR [eax],ch
  412595:	adc    al,0x0
  412597:	inc    eax
  412598:	or     BYTE PTR [ecx+eax*2-0x80],cl
  41259c:	or     BYTE PTR [esi-0x60],0x24
  4125a0:	cmp    al,BYTE PTR [eax]
  4125a2:	mov    BYTE PTR [edi+0x3],al
  4125a5:	rol    BYTE PTR [eax],0x60
  4125a8:	xchg   BYTE PTR [eax],al
  4125aa:	adc    BYTE PTR [eax-0x5a],ah
  4125ad:	adc    BYTE PTR [eax+0x42],0x2
  4125b1:	add    eax,DWORD PTR [eax]
  4125b3:	add    BYTE PTR [eax+eiz*2],0x90
  4125b7:	add    BYTE PTR [ebx-0x3e],dl
  4125ba:	or     DWORD PTR [eax],eax
  4125bc:	rol    BYTE PTR [ebx],0x81
  4125bf:	fisttp DWORD PTR [ebp+0x25]
  4125c2:	test   BYTE PTR [eax],al
  4125c4:	xor    BYTE PTR [eax],cl
  4125c6:	or     al,BYTE PTR [esi]
  4125c8:	nop
  4125c9:	or     BYTE PTR [eax],cl
  4125cb:	or     BYTE PTR [eax+0x5],ah
  4125ce:	or     BYTE PTR [ebp+0x49804703],ah
  4125d4:	adc    BYTE PTR [eax-0x69b1ffde],al
  4125da:	adc    BYTE PTR [edx-0x20],0x1a
  4125de:	add    BYTE PTR [edx],dl
  4125e0:	add    DWORD PTR [edx],eax
  4125e2:	sbb    BYTE PTR [ecx],al
  4125e4:	and    dl,BYTE PTR [esi+eiz*8+0x41110e40]
  4125eb:	add    BYTE PTR [ebx+0x4100a904],0x54
  4125f2:	add    DWORD PTR [eax+0x17],eax
  4125f5:	and    DWORD PTR [ebx+0x47824c30],0x8120ba26
  4125ff:	and    al,dh
  412601:	inc    ebx
  412602:	and    DWORD PTR [edx-0x5e],ecx
  412605:	inc    eax
  412606:	stos   DWORD PTR es:[edi],eax
  412607:	add    DWORD PTR [esp+esi*8],0x22
  41260b:	and    BYTE PTR [eax+eax*1],0x6b
  41260f:	loopne 0x41267e
  412611:	hlt    
  412612:	add    dh,BYTE PTR [edx]
  412614:	mov    ds:0x8810c82,al
  412619:	add    BYTE PTR [eax+0x40],al
  41261c:	add    BYTE PTR [eax],0x22
  41261f:	or     DWORD PTR [ebp+0x2a5840],ebx
  412625:	add    BYTE PTR [edx],al
  412627:	add    BYTE PTR [ecx],bl
  412629:	push   ebp
  41262a:	add    al,0x54
  41262c:	inc    eax
  41262d:	mov    ds:0x818d111,eax
  412632:	fadd   DWORD PTR [esp+eiz*2]
  412635:	inc    edx
  412636:	adc    al,0x36
  412638:	add    BYTE PTR [edx],al
  41263a:	pusha  
  41263b:	mov    al,ds:0x18700828
  412640:	inc    edx
  412641:	add    BYTE PTR [eax+0x44c2028],0x32
  412648:	push   eax
  412649:	nop
  41264a:	inc    esi
  41264b:	adc    eax,0x1c342
  412650:	and    BYTE PTR [ecx+0x14],ch
  412653:	inc    eax
  412654:	ins    BYTE PTR es:[edi],dx
  412655:	pusha  
  412656:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412657:	jo     0x412664
  412659:	mov    ah,0x8d
  41265b:	sbb    BYTE PTR [ecx-0x6f],al
  41265e:	inc    ebx
  41265f:	add    BYTE PTR [esi-0x3ffbfffd],al
  412665:	sbb    al,0x40
  412667:	inc    eax
  412668:	or     al,BYTE PTR [esi]
  41266a:	inc    eax
  41266b:	inc    edx
  41266c:	mov    DWORD PTR [eax+0x8],esi
  41266f:	cwde   
  412670:	mov    al,ds:0x1402828
  412675:	and    DWORD PTR [edx],ecx
  412677:	or     DWORD PTR [ecx],esp
  412679:	push   es
  41267a:	inc    ecx
  41267b:	add    BYTE PTR [edx+ecx*1],0xc2
  41267f:	add    BYTE PTR [eax-0x2bfeddae],0x20
  412686:	add    DWORD PTR [eax+esi*1],eax
  412689:	add    BYTE PTR [eax],al
  41268b:	add    BYTE PTR [eax],ch
  41268d:	and    al,BYTE PTR [eax]
  41268f:	push   esp
  412690:	add    BYTE PTR [ecx],ch
  412692:	add    cl,BYTE PTR [eax+0x8]
  412695:	or     DWORD PTR [eax],edx
  412697:	add    BYTE PTR [edx],dh
  412699:	push   eax
  41269a:	xor    dl,BYTE PTR [edx]
  41269c:	sbb    al,dl
  41269e:	and    eax,DWORD PTR [ebx+0x52]
  4126a1:	add    DWORD PTR [edx],esi
  4126a3:	inc    esp
  4126a4:	adc    DWORD PTR [esi],0x88820400
  4126aa:	test   al,0x55
  4126ac:	or     DWORD PTR [eax],0x15020760
  4126b2:	mov    al,BYTE PTR [eax]
  4126b4:	add    eax,0x12100042
  4126b9:	adc    BYTE PTR [edx+eax*1+0x10492c2],cl
  4126c0:	or     BYTE PTR [ecx-0x7ba71f1e],al
  4126c6:	pusha  
  4126c7:	sub    BYTE PTR [esp+edx*1],0xa
  4126cb:	mov    BYTE PTR [eax],al
  4126cd:	add    BYTE PTR [edx+edx*1-0x71],ch
  4126d1:	dec    esp
  4126d2:	ins    DWORD PTR es:[edi],dx
  4126d3:	inc    esp
  4126d4:	lds    ecx,FWORD PTR [eax+0x64000480]
  4126da:	test   BYTE PTR [esi],dh
  4126dc:	test   DWORD PTR [eax+0x20],esp
  4126df:	add    BYTE PTR [eax],0x1
  4126e2:	test   BYTE PTR [ebx],dl
  4126e4:	mov    edx,0x8200a403
  4126e9:	add    BYTE PTR [edx+0x1800c068],al
  4126ef:	add    BYTE PTR [eax-0x76ffde5a],0xa
  4126f6:	inc    ecx
  4126f7:	rol    BYTE PTR [eax],1
  4126f9:	test   BYTE PTR [eax+0x6c],cl
  4126fc:	test   al,0x20
  4126fe:	mov    BYTE PTR [eax+0x1041021],al
  412704:	xor    cl,BYTE PTR [eax-0x80]
  412707:	add    DWORD PTR [ecx],eax
  412709:	adc    ah,BYTE PTR [edi+eax*4]
  41270c:	or     ah,al
  41270e:	or     BYTE PTR fs:[ecx-0x29f7efa0],0xc0
  412716:	add    eax,0x80020016
  41271b:	and    BYTE PTR [esp+ecx*1],ah
  41271e:	and    al,0x10
  412720:	add    BYTE PTR [edx],dl
  412722:	adc    DWORD PTR [eax],eax
  412724:	inc    eax
  412725:	inc    edx
  412726:	push   ecx
  412727:	inc    edi
  412728:	or     BYTE PTR [esi+ebx*1],al
  41272b:	sar    BYTE PTR [ecx],0x2a
  41272e:	and    al,0x8
  412730:	sbb    edx,edx
  412732:	inc    ecx
  412733:	ror    BYTE PTR [esi+0x2323a235],1
  412739:	cdq    
  41273a:	dec    eax
  41273b:	or     cl,BYTE PTR [eax+eax*4]
  41273e:	or     dl,BYTE PTR [edx+0x28]
  412741:	or     BYTE PTR fs:[ebx],ah
  412744:	add    BYTE PTR es:[ecx],al
  412747:	xor    DWORD PTR [ecx+eax*4+0x40],eax
  41274b:	and    BYTE PTR [eax+eiz*8+0x73],al
  41274f:	mov    al,ds:0x5060800
  412754:	add    al,BYTE PTR [ecx]
  412756:	sub    al,0x87
  412758:	or     DWORD PTR [esi+0x2],esi
  41275b:	pusha  
  41275c:	or     BYTE PTR [ecx+0x40a19021],al
  412762:	and    DWORD PTR [eax+0x6],eax
  412765:	cmp    DWORD PTR [eax],eax
  412767:	add    al,0x20
  412769:	and    al,0x40
  41276b:	adc    BYTE PTR [ecx+0x2],0xa
  41276f:	inc    eax
  412770:	or     al,0x1
  412772:	and    BYTE PTR [eax],al
  412774:	sbb    cl,BYTE PTR [eax+edx*2+0xf00142]
  41277b:	enter  0x15ff,0x2c
  41277f:	mov    bh,0x43
  412781:	add    BYTE PTR [edi+0x44620584],ah
  412787:	adc    al,0x1
  412789:	adc    BYTE PTR [edx],0x98
  41278c:	jnp    0x4127e6
  41278e:	sub    BYTE PTR ds:0x1420732,cl
  412794:	add    BYTE PTR [edx],ah
  412796:	inc    esp
  412797:	shr    BYTE PTR [esi],0x60
  41279a:	add    al,BYTE PTR [ebx+0x1]
  41279d:	add    BYTE PTR [esi],cl
  41279f:	test   al,0x30
  4127a1:	adc    BYTE PTR [eax],al
  4127a3:	and    DWORD PTR [edx],edx
  4127a5:	or     al,dl
  4127a7:	add    BYTE PTR [eax],0x51
  4127aa:	add    BYTE PTR [eax+0x30d850b],al
  4127b0:	xchg   esp,eax
  4127b1:	add    eax,DWORD PTR [edx]
  4127b3:	push   ecx
  4127b4:	and    BYTE PTR [eax+ebx*4],al
  4127b7:	lea    eax,[ecx+0x0]
  4127ba:	adc    BYTE PTR [eax+0x6],ah
  4127bd:	push   ss
  4127be:	and    DWORD PTR [ebx+0x6],esp
  4127c1:	bound  ebx,QWORD PTR [edx+eiz*4]
  4127c4:	test   BYTE PTR [eax],al
  4127c6:	inc    ecx
  4127c7:	mov    WORD PTR [ecx],es
  4127c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127ca:	add    BYTE PTR [eax],ah
  4127cc:	push   ecx
  4127cd:	rol    DWORD PTR [eax],0xf
  4127d0:	and    esp,DWORD PTR ds:0x40009400
  4127d6:	sub    BYTE PTR [eax],cl
  4127d8:	add    BYTE PTR [eax+eiz*1],al
  4127db:	sbb    al,BYTE PTR [eax]
  4127dd:	and    DWORD PTR [eax+eiz*4],esp
  4127e0:	and    BYTE PTR [ecx],dl
  4127e2:	adc    BYTE PTR [eax+0x21],dl
  4127e5:	add    al,0xd2
  4127e7:	or     eax,0x307c424
  4127ec:	imul   edx,DWORD PTR [ecx],0x8003080
  4127f2:	or     BYTE PTR [ecx+0x21],dl
  4127f5:	add    al,0xa8
  4127f7:	dec    edx
  4127f8:	sbb    BYTE PTR [ecx],bl
  4127fa:	inc    edx
  4127fb:	sub    DWORD PTR [eax],esp
  4127fd:	adc    BYTE PTR [eax],al
  4127ff:	imul   ebx,DWORD PTR [eax],0x60
  412802:	adc    BYTE PTR [eax],bh
  412804:	dec    eax
  412805:	inc    edx
  412806:	add    eax,DWORD PTR [edi+eax*1]
  412809:	push   esp
  41280a:	popa   
  41280b:	inc    ecx
  41280c:	add    BYTE PTR [eax],0x45
  41280f:	add    eax,0x168804
  412814:	mov    WORD PTR [eax],es
  412816:	cwde   
  412817:	test   DWORD PTR [ecx-0x60],ecx
  41281a:	enter  0xc2,0x40
  41281e:	inc    ecx
  41281f:	push   ecx
  412820:	sub    al,0x9
  412822:	popa   
  412823:	add    DWORD PTR [eax],edx
  412825:	adc    BYTE PTR [eax+0x0],al
  412828:	jb     0x41284f
  41282a:	add    al,0xb4
  41282c:	mov    BYTE PTR [eax+0x51020],al
  412832:	or     BYTE PTR [eax+0x0],ah
  412835:	sub    BYTE PTR es:[ecx+ebx*1+0x21105101],bl
  41283d:	push   es
  41283e:	ja     0x89f34a84
  412844:	and    BYTE PTR [eax],ah
  412846:	adc    dh,BYTE PTR [eax+0x1d600901]
  41284c:	adc    BYTE PTR [eax],al
  41284e:	sub    DWORD PTR [ebx],ecx
  412850:	inc    eax
  412851:	add    al,BYTE PTR [ebx+0x185408e5]
  412857:	lock sub DWORD PTR [eax],eax
  41285a:	and    BYTE PTR [eax],dh
  41285c:	inc    eax
  41285d:	mov    al,ds:0x38343009
  412862:	or     BYTE PTR [eax+0x24],ah
  412865:	test   BYTE PTR [eax],dl
  412867:	sub    al,0x2
  412869:	or     cl,BYTE PTR [eax-0x5e8feeff]
  41286f:	and    BYTE PTR [ecx],0x4c
  412872:	and    bl,BYTE PTR [eax]
  412874:	pusha  
  412875:	mov    al,0x0
  412877:	inc    eax
  412878:	mov    BYTE PTR [eax+eax*4],ah
  41287b:	sub    BYTE PTR [eax+0x7146907],dl
  412881:	add    BYTE PTR [eax+0x38],ah
  412884:	and    al,0x1
  412886:	xchg   esi,eax
  412887:	and    BYTE PTR [eax],bl
  412889:	adc    ah,BYTE PTR ds:0xc40034
  41288f:	pop    eax
  412890:	inc    edx
  412891:	add    cl,BYTE PTR [ebx]
  412893:	add    BYTE PTR [esi],ah
  412895:	pop    eax
  412896:	sbb    BYTE PTR [eax+eiz*8],al
  412899:	inc    esi
  41289a:	pop    eax
  41289b:	pusha  
  41289c:	push   eax
  41289d:	test   DWORD PTR [eax],ebx
  41289f:	adc    BYTE PTR [eax+edx*4+0x822801a],al
  4128a6:	pusha  
  4128a7:	add    ah,al
  4128a9:	add    DWORD PTR [eax],eax
  4128ab:	dec    eax
  4128ac:	or     al,0x4
  4128ae:	and    BYTE PTR [ecx],al
  4128b0:	inc    ecx
  4128b1:	adc    BYTE PTR ds:0x419460,ah
  4128b7:	test   DWORD PTR [edx+ebp*1],edx
  4128ba:	add    BYTE PTR [edx-0x4ecdcffc],al
  4128c0:	add    DWORD PTR [eax-0x7f],esp
  4128c3:	add    BYTE PTR [ecx],al
  4128c5:	add    BYTE PTR [eax-0x7fd7e400],cl
  4128cb:	and    eax,0x10501004
  4128d0:	add    BYTE PTR [ecx],al
  4128d2:	and    bh,BYTE PTR [eax+eax*1]
  4128d5:	push   eax
  4128d6:	sub    BYTE PTR [eax],0x9
  4128d9:	add    DWORD PTR [ecx],eax
  4128db:	sub    esi,DWORD PTR [eax+0xa00010]
  4128e1:	ror    DWORD PTR [eax],0x90
  4128e4:	add    BYTE PTR [ecx],al
  4128e6:	and    al,BYTE PTR [ecx+ebx*4+0x1821310]
  4128ed:	mov    DWORD PTR [ecx],eax
  4128ef:	sbb    BYTE PTR [eax],bl
  4128f1:	and    DWORD PTR [ecx],0x20190100
  4128f7:	sbb    BYTE PTR [edx+0x2e],cl
  4128fa:	add    edx,esp
  4128fc:	add    eax,0x80004da4
  412901:	xor    ah,0x60
  412904:	push   esp
  412905:	and    DWORD PTR [ecx],eax
  412907:	or     cl,BYTE PTR [eax+0x10286064]
  41290d:	add    dl,dl
  41290f:	inc    edx
  412910:	adc    dh,BYTE PTR [edx]
  412912:	rcl    BYTE PTR [esi],0x34
  412915:	add    dl,ah
  412917:	and    DWORD PTR [eax+0x40],esp
  41291a:	add    esp,ecx
  41291c:	add    ecx,DWORD PTR [eax]
  41291e:	add    BYTE PTR [eax+0x12081021],al
  412924:	mov    dl,0x51
  412926:	add    eax,0x10041511
  41292b:	add    eax,0xc2010900
  412930:	pusha  
  412931:	add    al,0x8
  412933:	adc    BYTE PTR [eax-0x7f],0x20
  412937:	shr    BYTE PTR [edx-0x7c],0x4
  41293b:	add    eax,0x522e0208
  412940:	add    BYTE PTR [eax+0x2],dl
  412943:	js     0x412965
  412945:	xor    DWORD PTR [ecx+0x469010],eax
  41294b:	add    al,BYTE PTR [eax]
  41294d:	and    BYTE PTR [eax],al
  41294f:	mov    al,ds:0x11c20051
  412954:	inc    eax
  412955:	adc    DWORD PTR [eax+0x40212140],edx
  41295b:	add    BYTE PTR [edx+esi*8],ah
  41295e:	and    BYTE PTR [edx-0x5e],dl
  412961:	adc    BYTE PTR [edx],cl
  412963:	call   0xba66:0x4401270
  41296a:	adc    BYTE PTR [eax],al
  41296c:	add    BYTE PTR [eax-0x7b6df7ae],al
  412972:	add    BYTE PTR [ebx],ch
  412974:	mov    WORD PTR [ebx+0x2c040080],ds
  41297a:	add    bh,BYTE PTR [ecx+edx*2]
  41297d:	adc    BYTE PTR [eax+0x9004008],0x0
  412984:	or     DWORD PTR [ecx+eax*1],eax
  412987:	mov    al,BYTE PTR [ecx]
  412989:	add    cl,BYTE PTR [ebx+0x42835801]
  41298f:	add    al,0x12
  412991:	push   eax
  412992:	popa   
  412993:	test   al,dl
  412995:	cmp    BYTE PTR [eax],dl
  412997:	les    eax,FWORD PTR [eax]
  412999:	fadd   DWORD PTR [esp+edx*4]
  41299c:	add    dh,BYTE PTR [ecx-0x5ddfff5e]
  4129a2:	mov    al,ds:0x1aa0444d
  4129a7:	or     al,0x2
  4129a9:	or     al,0x43
  4129ab:	adc    ah,0x8
  4129ae:	or     al,0x1
  4129b0:	adc    BYTE PTR [ebx-0x7bf3bdf0],cl
  4129b6:	add    BYTE PTR [eax],0x81
  4129b9:	add    BYTE PTR [eax],cl
  4129bb:	and    BYTE PTR [ebx],0x0
  4129be:	push   esp
  4129bf:	add    DWORD PTR [esi],esi
  4129c1:	nop
  4129c2:	rol    BYTE PTR [eax],cl
  4129c4:	mov    ah,0xa8
  4129c6:	adc    BYTE PTR [ecx],dl
  4129c8:	inc    ecx
  4129c9:	add    BYTE PTR [eax+eiz*4+0x19],ah
  4129cd:	add    ch,dl
  4129cf:	add    BYTE PTR [eax+eiz*2],ah
  4129d2:	add    BYTE PTR [eax+0x24],al
  4129d5:	inc    eax
  4129d6:	add    BYTE PTR [edx-0x37d37df4],cl
  4129dc:	add    al,0x5
  4129de:	jmp    0x8:0x11001
  4129e5:	inc    eax
  4129e6:	bound  eax,QWORD PTR [eax]
  4129e8:	jle    0x412a0a
  4129ea:	or     al,BYTE PTR [ecx]
  4129ec:	inc    ebx
  4129ed:	or     BYTE PTR [edx+0x180330],al
  4129f3:	inc    esp
  4129f4:	les    esp,FWORD PTR [ebx+0x38024402]
  4129fa:	or     BYTE PTR [eax],0x9
  4129fd:	or     BYTE PTR [eax-0x7e],cl
  412a00:	mov    al,ds:0xca05944
  412a05:	sbb    al,BYTE PTR [esi]
  412a07:	add    BYTE PTR [ecx],al
  412a09:	or     BYTE PTR [eax+0x1e00a006],bl
  412a0f:	add    BYTE PTR [eax-0x752fffb8],0xa0
  412a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a17:	sub    BYTE PTR [ebx],al
  412a19:	add    BYTE PTR [eax],al
  412a1b:	xchg   edx,eax
  412a1c:	xchg   DWORD PTR [ebx-0x7fb799df],eax
  412a22:	ret    
  412a23:	add    DWORD PTR [eax],0x70
  412a26:	adc    BYTE PTR [eax+0x2],dh
  412a29:	rol    BYTE PTR [eax+0x2a],0x18
  412a2d:	inc    eax
  412a2e:	adc    al,0x85
  412a30:	sub    BYTE PTR [eax],cl
  412a32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a33:	push   es
  412a34:	or     BYTE PTR [esi],0x83
  412a37:	ret    0x506
  412a3a:	sub    BYTE PTR [eax],dl
  412a3c:	add    BYTE PTR [esi],al
  412a3e:	test   BYTE PTR [edx+0x20],al
  412a41:	add    edx,eax
  412a43:	and    BYTE PTR [ecx],al
  412a45:	and    cl,ch
  412a47:	sbb    BYTE PTR [edx-0x5fff8d80],cl
  412a4d:	push   eax
  412a4e:	add    BYTE PTR [ebx-0x377cf95c],al
  412a54:	and    BYTE PTR [eax+0x0],ch
  412a57:	nop
  412a58:	data16 or dl,BYTE PTR [eax+eiz*1+0x28180a0c]
  412a60:	sbb    BYTE PTR [edx],al
  412a62:	add    DWORD PTR [eax+0xe88000d],edi
  412a68:	mov    al,0x10
  412a6a:	and    eax,DWORD PTR [edx+ebp*2]
  412a6d:	mov    BYTE PTR [edi+0x8],al
  412a70:	ret    0x1469
  412a73:	test   al,0x40
  412a75:	and    DWORD PTR [edx],edx
  412a77:	mov    al,ds:0x429022c0
  412a7c:	adc    DWORD PTR [eax],eax
  412a7e:	add    BYTE PTR [eax+0x20],ch
  412a81:	nop
  412a82:	add    BYTE PTR [ecx+0x8260610],cl
  412a88:	adc    BYTE PTR [esi+0x19],al
  412a8b:	ins    BYTE PTR es:[edi],dx
  412a8c:	dec    edx
  412a8d:	adc    DWORD PTR [ecx+0x38],0x21000251
  412a94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a95:	and    BYTE PTR [ecx+0x49],dh
  412a98:	mov    DWORD PTR [edx],eax
  412a9a:	adc    ah,BYTE PTR [eax+0x7]
  412a9d:	push   es
  412a9e:	or     BYTE PTR [eax],dl
  412aa0:	adc    BYTE PTR [eax],0x0
  412aa3:	and    BYTE PTR [eax],cl
  412aa5:	or     al,BYTE PTR [ecx-0x80]
  412aa8:	nop
  412aa9:	add    BYTE PTR [ecx-0x60],al
  412aac:	ror    BYTE PTR [eax+ecx*1],0xe1
  412ab0:	loopne 0x412af4
  412ab2:	adc    bl,BYTE PTR [ecx]
  412ab4:	push   0x1001600
  412ab9:	add    al,0x21
  412abb:	adc    BYTE PTR [eax],bl
  412abd:	xor    al,0x42
  412abf:	bound  esi,QWORD PTR [eax]
  412ac1:	and    esp,DWORD PTR [ebx]
  412ac3:	add    BYTE PTR [eax+0x1b],dh
  412ac6:	add    DWORD PTR [eax],0x1
  412ac9:	add    DWORD PTR [ebx+0x0],edx
  412acc:	and    al,0x41
  412ace:	xor    edx,0x47c01041
  412ad4:	nop
  412ad5:	push   ss
  412ad6:	and    ah,BYTE PTR [ecx-0x52]
  412ad9:	and    bh,BYTE PTR [eax+0x40030c28]
  412adf:	test   al,0x13
  412ae1:	add    DWORD PTR [esi],eax
  412ae3:	xor    DWORD PTR [eax],eax
  412ae5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ae6:	push   ecx
  412ae7:	add    BYTE PTR [eax],cl
  412ae9:	rol    BYTE PTR [ecx+0x46],0x6
  412aed:	add    BYTE PTR [eax],al
  412aef:	ret    
  412af0:	push   eax
  412af1:	add    ebp,DWORD PTR [edx]
  412af3:	xor    BYTE PTR [ebp-0x3f],ch
  412af6:	and    BYTE PTR [eax],ah
  412af8:	adc    BYTE PTR [ecx],cl
  412afa:	inc    eax
  412afb:	push   es
  412afc:	and    edx,DWORD PTR [esi]
  412afe:	add    DWORD PTR [ebx],ebx
  412b00:	bound  ecx,QWORD PTR [eax]
  412b02:	and    DWORD PTR [eax+0x5021400],esp
  412b08:	test   eax,0x2a512033
  412b0d:	or     BYTE PTR [eax],dh
  412b0f:	sbb    BYTE PTR [eiz*2-0x7efffeff],bl
  412b16:	dec    esp
  412b17:	and    al,0x60
  412b19:	and    BYTE PTR [ebx+eax*1],al
  412b1c:	or     eax,DWORD PTR [eax+0x78]
  412b1f:	and    ah,cl
  412b21:	inc    ecx
  412b22:	xchg   edx,eax
  412b23:	and    BYTE PTR [edx],al
  412b25:	add    BYTE PTR [ecx],cl
  412b27:	mov    dl,BYTE PTR [edx]
  412b29:	push   es
  412b2a:	xor    BYTE PTR [eax],al
  412b2c:	pusha  
  412b2d:	add    eax,0x44200
  412b32:	add    eax,DWORD PTR [ecx]
  412b34:	push   ds
  412b35:	xor    BYTE PTR [eax+0xd930],bl
  412b3b:	xchg   edx,eax
  412b3c:	inc    esi
  412b3d:	adc    DWORD PTR [eax+0x0],eax
  412b40:	add    al,0x1c
  412b42:	add    al,0x4
  412b44:	or     al,0x1
  412b46:	and    dl,BYTE PTR [ecx-0x3ffaf7f0]
  412b4c:	adc    BYTE PTR [ecx+0xa00a590],0x40
  412b53:	xor    DWORD PTR [esi+eiz*2+0x41002d90],ecx
  412b5a:	imul   eax,DWORD PTR [ebx+0x48810782],0x6407018
  412b64:	or     BYTE PTR [eax],cl
  412b66:	test   BYTE PTR ds:0xf898896,ch
  412b6c:	add    al,BYTE PTR [edx+0xe58050a]
  412b72:	cwde   
  412b73:	or     DWORD PTR cs:[ecx+edx*2],esi
  412b77:	xor    cl,al
  412b79:	adc    BYTE PTR fs:[edx+0x9],al
  412b7d:	add    al,BYTE PTR [eax]
  412b7f:	xor    BYTE PTR [eax],cl
  412b81:	or     BYTE PTR [esp+eax*1-0x6daffe1b],al
  412b88:	inc    eax
  412b89:	and    BYTE PTR [esi+0x22],al
  412b8c:	and    BYTE PTR [eax],0x10
  412b8f:	and    BYTE PTR [ecx],cl
  412b91:	mov    eax,ds:0x40559330
  412b96:	mov    ch,0x0
  412b98:	adc    al,0x3
  412b9a:	adc    BYTE PTR [eax],cl
  412b9c:	add    ecx,DWORD PTR ds:0x448026c
  412ba2:	and    ah,BYTE PTR fs:[ebx+0x2411002f]
  412ba9:	mov    ecx,0xd4a04614
  412bae:	adc    DWORD PTR [ebx],ebp
  412bb0:	inc    eax
  412bb1:	cwde   
  412bb2:	sub    DWORD PTR [eax],0x34812222
  412bb8:	and    BYTE PTR [esi],al
  412bba:	inc    ecx
  412bbb:	add    DWORD PTR es:[esp+eax*1],esi
  412bbf:	(bad)  
  412bc0:	and    BYTE PTR [ebx+0xa],al
  412bc3:	loopne 0x412bca
  412bc5:	sbb    DWORD PTR [eax-0x79ed3fe0],esp
  412bcb:	test   BYTE PTR [eax],dl
  412bcd:	and    BYTE PTR [ecx],al
  412bcf:	and    bl,al
  412bd1:	pop    ss
  412bd2:	and    al,0x84
  412bd4:	xchg   ecx,eax
  412bd5:	sub    esp,esp
  412bd7:	cwde   
  412bd8:	add    BYTE PTR [edx+0x70],cl
  412bdb:	or     BYTE PTR [eax-0x20],cl
  412bde:	push   es
  412bdf:	add    BYTE PTR [eax+eax*1],dl
  412be2:	shr    BYTE PTR [ecx+0xa02804],cl
  412be8:	xor    edx,DWORD PTR [eax+0x10]
  412beb:	pop    es
  412bec:	inc    esp
  412bed:	pusha  
  412bee:	xor    BYTE PTR [eax-0x1dfffebe],0x9
  412bf5:	add    dl,BYTE PTR ds:0x1e028e
  412bfb:	add    DWORD PTR [eax],edx
  412bfd:	inc    eax
  412bfe:	xor    BYTE PTR [eax],ah
  412c00:	popf   
  412c01:	add    BYTE PTR [ebx],0x86
  412c04:	add    BYTE PTR [ecx+eax*1+0x40],0x0
  412c09:	adc    BYTE PTR [eax],cl
  412c0b:	add    BYTE PTR [ecx],cl
  412c0d:	sbb    BYTE PTR [eax-0x20],ah
  412c10:	add    BYTE PTR [ecx],al
  412c12:	test   al,0x88
  412c14:	cwde   
  412c15:	or     BYTE PTR [eax],al
  412c17:	adc    BYTE PTR [esi],bh
  412c19:	or     al,0x8
  412c1b:	rcl    BYTE PTR [ecx],0x49
  412c1e:	adc    ah,BYTE PTR [edx]
  412c20:	push   0xffffffa2
  412c22:	push   0xab840800
  412c27:	add    al,0x44
  412c29:	adc    BYTE PTR [eax+ebp*4],al
  412c2c:	jno    0x412c57
  412c2e:	add    DWORD PTR [eax+0x20],eax
  412c31:	push   es
  412c32:	jl     0x412c54
  412c34:	add    BYTE PTR [edx],al
  412c36:	adc    al,0x1
  412c38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c39:	add    al,0x41
  412c3b:	je     0x412c61
  412c3d:	imul   edx,DWORD PTR [eax-0x7ff98000],0x356a8188
  412c47:	add    BYTE PTR [eax],al
  412c49:	stos   BYTE PTR es:[edi],al
  412c4a:	add    BYTE PTR [eax+0x801a88c],al
  412c50:	test   al,0x0
  412c52:	in     eax,0x42
  412c54:	add    al,BYTE PTR [eax]
  412c56:	push   0xa0188103
  412c5b:	pusha  
  412c5c:	add    al,ah
  412c5e:	add    ebx,DWORD PTR [edx]
  412c60:	add    BYTE PTR [edx+eiz*2+0x5c382],cl
  412c67:	inc    edi
  412c68:	or     BYTE PTR [ecx+eax*1],al
  412c6b:	or     dh,BYTE PTR [eax+0x858022]
  412c71:	and    cl,BYTE PTR [eax]
  412c73:	mov    al,ds:0x20202036
  412c78:	and    BYTE PTR [edx+eax*4+0x0],bl
  412c7c:	test   al,0xf
  412c7e:	dec    esp
  412c7f:	xchg   BYTE PTR [eax],ah
  412c81:	or     BYTE PTR [eax+ecx*4],dh
  412c84:	push   esi
  412c85:	sbb    BYTE PTR [ecx+0x28e8222c],dl
  412c8b:	inc    eax
  412c8c:	adc    eax,0x81120089
  412c91:	add    DWORD PTR [edx+0x11],edx
  412c94:	or     eax,0xb82611e2
  412c99:	rol    BYTE PTR [eax],1
  412c9b:	xor    BYTE PTR [edx+eiz*4],dl
  412c9e:	push   0x24c54410
  412ca3:	and    al,0x1
  412ca5:	inc    eax
  412ca6:	add    al,0x21
  412ca8:	and    BYTE PTR [edx+0x38],0x89
  412cac:	mov    al,BYTE PTR [eax-0x3fde837f]
  412cb2:	xchg   ecx,eax
  412cb3:	add    DWORD PTR [eax-0x7a],ecx
  412cb6:	add    BYTE PTR [eax],0xc4
  412cb9:	xor    BYTE PTR [ecx],dl
  412cbb:	or     cl,BYTE PTR [eax+0x1a00102b]
  412cc1:	xor    DWORD PTR [eax+0x81022],ecx
  412cc7:	or     DWORD PTR [eax],0x2a
  412cca:	and    DWORD PTR [eax+esi*2],eax
  412ccd:	dec    esi
  412cce:	add    BYTE PTR [eax],al
  412cd0:	pop    es
  412cd1:	or     eax,DWORD PTR fs:[esi]
  412cd4:	or     al,0x7
  412cd6:	inc    ecx
  412cd7:	ret    0x8
  412cda:	add    DWORD PTR ds:0x12499a0,0xc036210b
  412ce4:	or     BYTE PTR [ecx],cl
  412ce6:	test   BYTE PTR [edx-0x53b7b66d],al
  412cec:	inc    ecx
  412ced:	push   eax
  412cee:	inc    edx
  412cef:	or     al,BYTE PTR [edx+eax*1]
  412cf2:	add    DWORD PTR [edx+0x69],ecx
  412cf5:	sub    al,BYTE PTR [esi+eiz*2]
  412cf8:	mov    ds:0x20101a4,eax
  412cfd:	adc    BYTE PTR [eax+0x16],dh
  412d00:	mov    dh,BYTE PTR [eax]
  412d02:	adc    BYTE PTR [eax],cl
  412d04:	test   BYTE PTR [ebp+0x29],ah
  412d07:	add    eax,0x7203
  412d0c:	xchg   BYTE PTR [edx+0x42280345],al
  412d12:	add    al,0x84
  412d14:	or     BYTE PTR [eax+0x20480002],0x24
  412d1b:	xor    al,0x48
  412d1d:	adc    bl,BYTE PTR [edi]
  412d1f:	es or  al,0x0
  412d22:	inc    ecx
  412d23:	sub    BYTE PTR [edx],ah
  412d25:	and    esp,DWORD PTR [ecx+0x1101b4db]
  412d2b:	shl    BYTE PTR [eax],0x22
  412d2e:	add    DWORD PTR [eax],eax
  412d30:	add    BYTE PTR [ecx+0x4e037200],0x84
  412d37:	add    al,0x4
  412d39:	or     BYTE PTR [esp+eax*4+0x10],al
  412d3d:	add    DWORD PTR [ecx+eax*2-0x80],esi
  412d41:	add    BYTE PTR [eax+ecx*8],al
  412d44:	jmp    0x1000:0x2314411
  412d4b:	add    cl,cl
  412d4d:	or     al,BYTE PTR [eax-0x5befe5f5]
  412d53:	add    BYTE PTR [eax+edx*2+0xc],al
  412d57:	xchg   esi,eax
  412d58:	rol    BYTE PTR [ecx],0x3a
  412d5b:	push   ss
  412d5c:	or     DWORD PTR [ebx],0xd
  412d5f:	adc    DWORD PTR [edx],0xffffff84
  412d62:	add    BYTE PTR [esi+0x4d],al
  412d65:	(bad)  
  412d66:	sbb    ah,ah
  412d68:	add    ecx,DWORD PTR [ebp+0x13]
  412d6b:	rcl    DWORD PTR [eax+ebp*1],cl
  412d6e:	xchg   esp,eax
  412d6f:	add    BYTE PTR [eax],0x2
  412d72:	xor    BYTE PTR [ebx],bl
  412d74:	add    DWORD PTR [edx-0x47],0x2c200041
  412d7b:	add    al,0x4a
  412d7d:	inc    edx
  412d7e:	imul   ecx,DWORD PTR [edx+0x20482a43],0x22210010
  412d88:	or     BYTE PTR [ecx+0x2a],al
  412d8b:	and    DWORD PTR [eax],0xffffffc1
  412d8e:	add    al,0x22
  412d90:	add    BYTE PTR [edx],0x3
  412d93:	add    DWORD PTR [ecx],edx
  412d95:	add    al,0x84
  412d97:	sub    BYTE PTR [edi],cl
  412d99:	add    BYTE PTR [eax],0x72
  412d9c:	int    0x22
  412d9e:	adc    BYTE PTR ds:0x80226064,ah
  412da4:	and    al,0x20
  412da6:	adc    al,0x10
  412da8:	push   0x83821180
  412dad:	adc    al,0x94
  412daf:	or     eax,0xd020541
  412db4:	rol    BYTE PTR [eax],0x24
  412db7:	xchg   BYTE PTR [eax+eax*1],cl
  412dba:	add    BYTE PTR [eax],bl
  412dbc:	adc    BYTE PTR [eax],0xb
  412dbf:	dec    eax
  412dc0:	inc    eax
  412dc1:	arpl   WORD PTR [edx+0x10850002],ax
  412dc7:	adc    al,0xa2
  412dc9:	or     al,0x74
  412dcb:	inc    eax
  412dcc:	or     BYTE PTR [ecx],bh
  412dce:	push   ds
  412dcf:	inc    edx
  412dd0:	or     ebp,eax
  412dd2:	inc    esp
  412dd3:	and    al,BYTE PTR [edx]
  412dd5:	xor    esp,eax
  412dd7:	add    DWORD PTR [ecx+eax*1],esi
  412dda:	and    al,0x32
  412ddc:	mov    al,ds:0x91483264
  412de1:	add    cl,cl
  412de3:	add    BYTE PTR [eax+0x30c10310],ah
  412de9:	add    bl,ah
  412deb:	pop    ss
  412dec:	add    BYTE PTR [ecx],0xf0
  412def:	mov    ds:0xc64124c,al
  412df4:	add    DWORD PTR [eax+0x14],eax
  412df7:	adc    al,0x29
  412df9:	add    ah,0x8
  412dfc:	add    DWORD PTR [edx+eiz*2+0x20],ecx
  412e00:	and    al,BYTE PTR [esi+0x2]
  412e03:	test   DWORD PTR [eax-0x70],ebx
  412e06:	mov    al,ds:0x9c10ac45
  412e0b:	rol    BYTE PTR [esi+0x69423033],1
  412e11:	inc    ebp
  412e12:	adc    dl,BYTE PTR [ecx]
  412e14:	add    BYTE PTR [eax+0x1],al
  412e17:	inc    eax
  412e18:	mov    BYTE PTR [edx],al
  412e1a:	inc    edx
  412e1b:	popa   
  412e1c:	add    BYTE PTR [eax],0x6
  412e1f:	xchg   ecx,eax
  412e20:	xchg   BYTE PTR [eax+0x42b148b2],al
  412e26:	dec    eax
  412e27:	bound  esp,QWORD PTR [eax]
  412e29:	push   cs
  412e2a:	push   0x1440260
  412e2f:	adc    al,BYTE PTR [eax]
  412e31:	push   ecx
  412e32:	adc    BYTE PTR [eax-0x80],al
  412e35:	and    BYTE PTR [ecx],dl
  412e37:	test   al,0x0
  412e39:	add    cl,BYTE PTR [eax]
  412e3b:	dec    ebp
  412e3c:	or     BYTE PTR [ecx],dl
  412e3e:	or     ebx,eax
  412e40:	and    eax,0x18994081
  412e45:	add    eax,DWORD PTR [edx]
  412e47:	xchg   edx,eax
  412e48:	or     BYTE PTR [edx+eax*2],bl
  412e4b:	add    DWORD PTR [eax],eax
  412e4d:	inc    eax
  412e4e:	inc    eax
  412e4f:	add    cl,BYTE PTR [esi+eax*1]
  412e52:	inc    ecx
  412e53:	xchg   edx,eax
  412e54:	les    eax,FWORD PTR [eax]
  412e56:	sub    al,BYTE PTR [ecx+0x45]
  412e59:	es and esi,0x81415210
  412e60:	and    eax,0xa21ac48
  412e65:	inc    esp
  412e66:	sub    BYTE PTR [eax],0x8c
  412e69:	and    al,0x40
  412e6b:	dec    edx
  412e6c:	sub    DWORD PTR [ebx],esi
  412e6e:	leave  
  412e6f:	adc    BYTE PTR [ecx],0x8a
  412e72:	and    ah,BYTE PTR [ecx+0x10]
  412e75:	xchg   BYTE PTR [eax],al
  412e77:	add    DWORD PTR [edi+ebp*2+0x2],ecx
  412e7b:	add    BYTE PTR [edx+0x60],0xa0
  412e7f:	push   es
  412e80:	add    eax,DWORD PTR fs:[esp+esi*8]
  412e84:	mov    al,ds:0x90000095
  412e89:	sbb    DWORD PTR [eax],ecx
  412e8b:	or     DWORD PTR [ecx],ecx
  412e8d:	adc    eax,0x2420803
  412e92:	or     BYTE PTR [ecx-0x60],al
  412e95:	nop
  412e96:	and    ah,BYTE PTR [eax]
  412e98:	popa   
  412e99:	pusha  
  412e9a:	cwde   
  412e9b:	les    eax,FWORD PTR [ebx]
  412e9d:	add    BYTE PTR [edx],cl
  412e9f:	mov    eax,0xe2022112
  412ea4:	sub    DWORD PTR [ecx],eax
  412ea6:	inc    eax
  412ea7:	inc    edx
  412ea8:	lods   al,BYTE PTR ds:[esi]
  412ea9:	adc    ah,BYTE PTR [eax+0x6600a819]
  412eaf:	push   ss
  412eb0:	add    BYTE PTR [eax],dl
  412eb2:	or     BYTE PTR [edx+0x2],dl
  412eb5:	or     BYTE PTR [ebp-0x79f2ed60],dl
  412ebb:	push   eax
  412ebc:	and    DWORD PTR [ecx+0x49402100],eax
  412ec2:	nop
  412ec3:	sub    cl,BYTE PTR [eax+0x0]
  412ec6:	add    DWORD PTR ds:0xa9ee0100,0x64
  412ecd:	inc    edx
  412ece:	adc    DWORD PTR [eax+0x11608281],esp
  412ed4:	mov    DWORD PTR [ecx+0x38],edi
  412ed7:	jo     0x412ea9
  412ed9:	inc    ecx
  412eda:	and    cl,cl
  412edc:	sub    BYTE PTR [eax-0x2fedfabf],ah
  412ee2:	add    al,0x40
  412ee4:	test   BYTE PTR ss:[eax-0x7cdff9db],al
  412eeb:	and    BYTE PTR [eax],ah
  412eed:	and    BYTE PTR [edx],0xa
  412ef0:	wbinvd 
  412ef2:	add    DWORD PTR [esp+ecx*4+0x20c06082],eax
  412ef9:	or     al,0x1c
  412efb:	inc    edx
  412efc:	retf   0x2200
  412eff:	push   eax
  412f00:	or     BYTE PTR [eax],al
  412f02:	or     eax,0x1ab0941
  412f07:	or     al,BYTE PTR [edx]
  412f09:	add    DWORD PTR [ecx+0x28281411],ecx
  412f0f:	sbb    BYTE PTR ss:[eax+ebx*2-0x77f2d3be],cl
  412f17:	add    ah,BYTE PTR [edx]
  412f19:	or     al,0x67
  412f1b:	test   al,0x60
  412f1d:	or     ah,al
  412f1f:	push   es
  412f20:	inc    eax
  412f21:	add    BYTE PTR [eax],al
  412f23:	inc    eax
  412f24:	add    BYTE PTR [edx+0x510a104],cl
  412f2a:	pusha  
  412f2b:	add    BYTE PTR [eax+eax*4+0x50101801],0x34
  412f33:	or     al,0x42
  412f35:	push   es
  412f36:	and    DWORD PTR [edx],ecx
  412f38:	add    al,BYTE PTR [edx-0x77efb7a8]
  412f3e:	add    BYTE PTR [eax+0x120b81e0],dl
  412f44:	or     BYTE PTR [edx-0x7b23ffe0],ch
  412f4a:	sbb    edi,0x3330c000
  412f50:	xchg   edi,eax
  412f51:	mov    al,0xff
  412f53:	adc    eax,0x43b6d0
  412f58:	and    BYTE PTR [eax+0x5923020],0x30
  412f5f:	and    al,ah
  412f61:	adc    DWORD PTR [eax+ebp*1],esp
  412f64:	inc    eax
  412f65:	sub    BYTE PTR [edx+0x61470e66],dl
  412f6b:	and    BYTE PTR [ebp-0x7ef7e7df],al
  412f71:	or     ecx,DWORD PTR [ecx-0x7b7bffb8]
  412f77:	add    al,0x91
  412f79:	adc    al,BYTE PTR [ecx]
  412f7b:	mov    al,ds:0x204100
  412f80:	pop    ds
  412f81:	and    eax,DWORD PTR [eax]
  412f83:	inc    ebx
  412f84:	adc    al,0x30
  412f86:	pusha  
  412f87:	and    dh,BYTE PTR [eax]
  412f89:	adc    al,0xc
  412f8b:	add    DWORD PTR [ecx+ecx*1],eax
  412f8e:	inc    edx
  412f8f:	mov    ds:0x8709000,al
  412f94:	add    BYTE PTR [eax+eax*1],0x2
  412f98:	bound  esi,QWORD PTR [ebx]
  412f9a:	and    BYTE PTR [eax+0x4],cl
  412f9d:	call   0xc818fa5
  412fa2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fa3:	pusha  
  412fa4:	test   DWORD PTR [eax],eax
  412fa6:	and    esp,DWORD PTR [eax+0x13122264]
  412fac:	add    eax,ecx
  412fae:	add    eax,0x4a5ac014
  412fb3:	add    al,0x40
  412fb5:	adc    BYTE PTR [eax],0x0
  412fb8:	inc    esi
  412fb9:	adc    BYTE PTR [eax+0x402c20a8],0x40
  412fc0:	mov    ?,WORD PTR [edi+eax*1]
  412fc3:	inc    edx
  412fc4:	add    DWORD PTR [eax],ebx
  412fc6:	xchg   ecx,eax
  412fc7:	retf   
  412fc8:	push   edx
  412fc9:	ins    BYTE PTR es:[edi],dx
  412fca:	and    BYTE PTR [eax-0x60],0x74
  412fce:	inc    eax
  412fcf:	adc    ah,BYTE PTR [eax+eiz*2]
  412fd2:	adc    al,BYTE PTR [eax+0x18]
  412fd5:	or     BYTE PTR [eax],cl
  412fd7:	cmp    BYTE PTR [ecx+eax*4],al
  412fda:	adc    BYTE PTR [edx+eax*4],dh
  412fdd:	inc    edx
  412fde:	add    al,0x19
  412fe0:	or     eax,0x20091480
  412fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fe6:	sub    ecx,DWORD PTR [edx+0x2]
  412fe9:	add    al,0x11
  412feb:	adc    al,0x68
  412fed:	or     al,0x30
  412fef:	or     al,0x3
  412ff1:	dec    eax
  412ff2:	and    BYTE PTR [eax],bh
  412ff4:	mov    ds:0x44000840,al
  412ff9:	add    al,BYTE PTR [eax]
  412ffb:	or     BYTE PTR [ecx],ah
  412ffd:	jno    0x41301f
  412fff:	adc    ah,BYTE PTR ds:0x88c0e2c1
  413005:	call   0x304231d3
  41300a:	xor    al,0x1d
  41300c:	add    al,0x14
  41300e:	or     ch,dl
  413010:	adc    dl,ah
  413012:	and    BYTE PTR [eax],dl
  413014:	push   es
  413015:	adc    ah,dl
  413017:	xor    DWORD PTR [esp+eax*4],edi
  41301a:	sbb    al,0x0
  41301c:	inc    eax
  41301d:	push   0x41
  41301f:	push   es
  413020:	mov    al,ds:0xd09006a8
  413025:	add    BYTE PTR [edx],0xda
  413028:	xchg   ecx,eax
  413029:	test   al,0x81
  41302b:	and    BYTE PTR [edx+0x25],bh
  41302e:	add    al,BYTE PTR [eax-0x78ed9db3]
  413034:	adc    BYTE PTR [esi],dl
  413036:	test   BYTE PTR [ebp-0x3abfc5fc],al
  41303c:	retf   0xa108
  41303f:	add    BYTE PTR [eax+eax*1+0x49],dl
  413043:	mov    ds:0x54d48000,al
  413048:	or     BYTE PTR ds:0xa0214012,0x6c
  41304f:	les    eax,FWORD PTR [eax]
  413051:	adc    dh,dl
  413053:	add    BYTE PTR [edx],dl
  413055:	pusha  
  413056:	or     al,0x82
  413058:	add    DWORD PTR [ecx-0x2bcf3d2c],eax
  41305e:	inc    eax
  41305f:	add    BYTE PTR [eax+esi*1],0x18
  413063:	or     DWORD PTR [esi],esp
  413065:	or     BYTE PTR [eax],ah
  413067:	add    BYTE PTR [edx-0x3a2f99be],al
  41306d:	add    DWORD PTR [edx],ecx
  41306f:	add    eax,0xa448004
  413074:	fs je  0x413097
  413077:	add    esp,DWORD PTR [edx]
  413079:	or     BYTE PTR [esi],ah
  41307b:	adc    cl,BYTE PTR [eax-0x7eaddffc]
  413081:	adc    dh,dl
  413083:	adc    al,0xe0
  413085:	or     BYTE PTR [eax],ah
  413087:	dec    eax
  413088:	adc    BYTE PTR [eax-0x6dfbf8ff],ah
  41308e:	sub    al,0x8
  413090:	test   al,0x3
  413092:	add    DWORD PTR [ecx],eax
  413094:	adc    BYTE PTR [eax-0x53],ah
  413097:	inc    eax
  413098:	add    eax,0x204f0f51
  41309d:	add    edx,eax
  41309f:	sub    eax,DWORD PTR [eax]
  4130a1:	dec    ecx
  4130a2:	jno    0x4130a6
  4130a4:	add    BYTE PTR [eax+0xa0360a],0x24
  4130ab:	add    BYTE PTR [esi+0x44],ah
  4130ae:	and    al,0x1
  4130b0:	add    BYTE PTR [ebx],al
  4130b2:	or     al,0x1
  4130b4:	mov    ah,0x3c
  4130b6:	add    BYTE PTR [esi-0x7ff94b47],ch
  4130bc:	and    BYTE PTR [eax],0x1
  4130bf:	push   0xa04202c
  4130c4:	mov    al,BYTE PTR [eax]
  4130c6:	push   eax
  4130c7:	push   ss
  4130c8:	add    BYTE PTR [edx],al
  4130ca:	add    al,0x82
  4130cc:	pusha  
  4130cd:	add    al,al
  4130cf:	add    BYTE PTR ds:0x4200d230,ah
  4130d5:	adc    al,0x92
  4130d7:	and    al,BYTE PTR [ebx]
  4130d9:	pop    ds
  4130da:	adc    BYTE PTR [ebx],al
  4130dc:	inc    ebx
  4130dd:	leave  
  4130de:	adc    BYTE PTR [eax],al
  4130e0:	add    DWORD PTR [ebx+0x14],ebp
  4130e3:	or     BYTE PTR [edx],al
  4130e5:	test   BYTE PTR [edx],al
  4130e7:	shr    BYTE PTR [edx],0x22
  4130ea:	push   es
  4130eb:	inc    eax
  4130ec:	mov    ch,BYTE PTR [edx-0x5dd66f5e]
  4130f2:	adc    ah,BYTE PTR [eax+0x512310]
  4130f8:	jo     0x4130fa
  4130fa:	inc    edx
  4130fb:	add    BYTE PTR [eax+0x22008c00],ah
  413101:	jmp    0xcca1:0x2a24c020
  413108:	add    DWORD PTR [eax+0x71],esi
  41310b:	xor    al,BYTE PTR [edx]
  41310d:	ret    0x1184
  413110:	nop
  413111:	push   0x80610c91
  413116:	inc    ecx
  413117:	add    DWORD PTR [eax],eax
  413119:	add    BYTE PTR [ebx],dh
  41311b:	or     BYTE PTR [edx],0x20
  41311e:	add    BYTE PTR [eax],0x2
  413121:	arpl   WORD PTR [ecx],bp
  413123:	shr    BYTE PTR [esp+eax*2],0x30
  413127:	adc    BYTE PTR [esi],dl
  413129:	loop   0x4130b1
  41312b:	adc    BYTE PTR [esi],al
  41312d:	adc    DWORD PTR ds:0x3ac20012,eax
  413133:	inc    esp
  413134:	inc    esi
  413135:	and    al,0x4
  413137:	xor    cl,BYTE PTR [edx]
  413139:	sub    al,BYTE PTR [eax-0x78]
  41313c:	push   es
  41313d:	add    BYTE PTR [ecx+0x8],al
  413140:	inc    eax
  413141:	dec    edx
  413142:	inc    eax
  413143:	or     BYTE PTR [edx],al
  413145:	ror    DWORD PTR [eax-0x7d7f57ec],0x50
  41314c:	mov    BYTE PTR [ebx],dh
  41314e:	pushf  
  41314f:	add    BYTE PTR [eax+0x4c32a3f8],cl
  413155:	rol    BYTE PTR [esi+0x43],0x60
  413159:	push   eax
  41315a:	dec    edx
  41315b:	sbb    BYTE PTR [eax],0x40
  41315e:	add    BYTE PTR [eax],ah
  413160:	or     eax,0x50224081
  413165:	inc    eax
  413166:	nop
  413167:	add    BYTE PTR [eax+0x4],ah
  41316a:	add    BYTE PTR [edx+edx*1+0x23],bl
  41316e:	add    al,0x85
  413170:	add    eax,0xa0a6282
  413175:	aam    0x2
  413177:	mov    BYTE PTR [eax],bl
  413179:	inc    eax
  41317a:	xor    eax,0x5020e079
  41317f:	add    BYTE PTR [eax+0x95206a0],dl
  413185:	or     DWORD PTR [eax],eax
  413187:	or     ah,BYTE PTR [ecx]
  413189:	add    DWORD PTR [eax+0x69222e02],eax
  41318f:	adc    al,BYTE PTR [eax]
  413191:	test   al,0x0
  413193:	nop
  413194:	mov    ds:0x48c2480,al
  413199:	sub    DWORD PTR [eax+eax*4],ebp
  41319c:	adc    BYTE PTR [ecx],ah
  41319e:	or     dh,BYTE PTR [eax+0x34022440]
  4131a4:	inc    eax
  4131a5:	and    BYTE PTR [eax+0x8],cl
  4131a8:	sub    DWORD PTR [eax+eax*1],eax
  4131ab:	loope  0x4131ad
  4131ad:	add    ch,cl
  4131af:	je     0x413135
  4131b1:	xor    BYTE PTR [edi+0x60511028],al
  4131b7:	or     DWORD PTR [edx],esi
  4131b9:	or     al,BYTE PTR [eax]
  4131bb:	xor    BYTE PTR [ecx-0x774f7bcc],al
  4131c1:	adc    BYTE PTR [eax-0x58],cl
  4131c4:	sub    BYTE PTR [eax],al
  4131c6:	inc    ecx
  4131c7:	nop
  4131c8:	and    DWORD PTR [edx-0x6dedfabc],0xb9100100
  4131d2:	add    BYTE PTR [eax-0x3fdcffd8],al
  4131d8:	adc    al,BYTE PTR [eax-0x2bafe9de]
  4131de:	add    DWORD PTR [eax],eax
  4131e0:	pushf  
  4131e1:	and    eax,0x14041803
  4131e6:	rcr    DWORD PTR [esi],0x9
  4131e9:	lds    edx,FWORD PTR [eax+0x44]
  4131ec:	retf   0x3824
  4131ef:	add    DWORD PTR [edx],edx
  4131f1:	data16 rcr BYTE PTR [eax],cl
  4131f4:	and    al,BYTE PTR [edx]
  4131f6:	add    eax,0x1a0046
  4131fb:	pusha  
  4131fc:	add    eax,0x14a40005
  413201:	adc    BYTE PTR fs:[edx+0x1800020],cl
  413208:	add    DWORD PTR [ecx],eax
  41320a:	inc    esp
  41320b:	add    BYTE PTR [eax+0x11],ah
  41320e:	popa   
  41320f:	add    DWORD PTR [eax],eax
  413211:	add    BYTE PTR [ecx],cl
  413213:	or     ah,BYTE PTR [edx+0x20880b50]
  413219:	and    al,0x90
  41321b:	xchg   esp,eax
  41321c:	mov    WORD PTR [edx+0x5],?
  41321f:	mov    eax,ds:0x80025602
  413224:	add    DWORD PTR ds:0x188186a0,eax
  41322a:	pushf  
  41322b:	add    BYTE PTR [eax],cl
  41322d:	and    DWORD PTR [ecx],0x14449872
  413233:	ret    
  413234:	pusha  
  413235:	cdq    
  413236:	adc    al,0x50
  413238:	and    BYTE PTR [edx+0x43490844],0x52
  41323f:	and    BYTE PTR [ecx],cl
  413241:	cmp    dl,0xc8
  413244:	and    BYTE PTR [esi-0x5ff7bbf9],ch
  41324a:	sbb    al,0x56
  41324c:	xchg   esp,eax
  41324d:	pusha  
  41324e:	mov    al,es:0x3cc00401
  413254:	dec    edx
  413255:	and    DWORD PTR [eax],0xa0001808
  41325b:	inc    eax
  41325c:	inc    edx
  41325d:	add    BYTE PTR [ecx],dl
  41325f:	add    BYTE PTR [eax],ah
  413261:	and    al,0x48
  413263:	add    ecx,DWORD PTR [ecx]
  413265:	or     BYTE PTR [esi+eax*1+0x44],bl
  413269:	test   al,0x72
  41326b:	add    eax,0x88480404
  413270:	or     DWORD PTR [edx],edx
  413272:	add    BYTE PTR [ecx+0x0],dl
  413275:	adc    BYTE PTR [edx],cl
  413277:	add    al,0x0
  413279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41327a:	xchg   edx,eax
  41327b:	popa   
  41327c:	add    BYTE PTR [edx],cl
  41327e:	test   DWORD PTR [ecx],ecx
  413280:	sub    BYTE PTR ds:0xa1c12b88,dh
  413286:	adc    DWORD PTR [ecx],ebx
  413288:	push   cs
  413289:	inc    esp
  41328a:	sar    DWORD PTR ds:0x80190420,0x30
  413291:	or     DWORD PTR [ecx],eax
  413293:	add    esp,DWORD PTR [eax+0x3c]
  413296:	cbw    
  413298:	adc    BYTE PTR ds:0x10206004,dl
  41329e:	add    al,0x3c
  4132a0:	add    BYTE PTR [eax],cl
  4132a2:	adc    BYTE PTR ds:0x80804020,0x2f
  4132a9:	and    ah,al
  4132ab:	add    DWORD PTR [eax],ecx
  4132ad:	xor    bl,al
  4132af:	and    BYTE PTR ds:0x10004200,dl
  4132b5:	add    BYTE PTR [esi],dl
  4132b7:	adc    al,BYTE PTR [ecx+ebp*2]
  4132ba:	or     BYTE PTR [eax],0x3
  4132bd:	dec    eax
  4132be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132bf:	sbb    al,0xbb
  4132c1:	sub    DWORD PTR [eax],ebp
  4132c3:	push   eax
  4132c4:	jl     0x4132c8
  4132c6:	dec    esp
  4132c7:	adc    BYTE PTR [ebp-0x58],al
  4132ca:	pop    DWORD PTR [esp+eax*1]
  4132cd:	add    BYTE PTR [eax],ah
  4132cf:	add    BYTE PTR [eax+0x8],ah
  4132d2:	sbb    DWORD PTR [eax+0x9],ecx
  4132d5:	pusha  
  4132d6:	or     BYTE PTR [esi+0x7cc0800],ah
  4132dc:	add    BYTE PTR [eax+0x20021500],al
  4132e2:	add    BYTE PTR [eax],dl
  4132e4:	add    BYTE PTR [ebx],0xa8
  4132e7:	mov    al,ds:0x2c450014
  4132ec:	adc    BYTE PTR [ecx+0xa762038],0x98
  4132f3:	add    DWORD PTR [esi+0x8a47416],eax
  4132f9:	test   BYTE PTR [eax+0xa],cl
  4132fc:	inc    eax
  4132fd:	and    al,0x43
  4132ff:	add    BYTE PTR [eax+0x6124281f],ah
  413305:	pusha  
  413306:	add    DWORD PTR ds:0x910002a0,ebp
  41330c:	push   eax
  41330d:	add    BYTE PTR [eax],dl
  41330f:	sub    BYTE PTR [ecx+0x204035a6],al
  413315:	sub    DWORD PTR [eax],edx
  413317:	add    eax,0x51020180
  41331c:	mov    DWORD PTR [eax+esi*1],edx
  41331f:	and    BYTE PTR [eax],al
  413321:	cmp    BYTE PTR [eax+eax*1],al
  413324:	and    BYTE PTR [eax+ebx*1],cl
  413327:	push   ss
  413328:	add    BYTE PTR [eax-0x5e],ah
  41332b:	test   DWORD PTR [eax],ebp
  41332d:	mov    cl,0x68
  41332f:	adc    cl,BYTE PTR [edx+0x42480990]
  413335:	mov    BYTE PTR [eax],cl
  413337:	adc    dl,al
  413339:	add    BYTE PTR [eax],0x30
  41333c:	add    BYTE PTR [eax],al
  41333e:	and    al,0x89
  413340:	add    dl,BYTE PTR [edx]
  413342:	test   DWORD PTR [eax+0x20040208],eax
  413348:	fiadd  WORD PTR [edx+0xc]
  41334b:	add    BYTE PTR [eax],0x6
  41334e:	sbb    BYTE PTR [esi],ah
  413350:	inc    ebx
  413351:	adc    BYTE PTR [eax],ah
  413353:	test   eax,0xe0041410
  413358:	or     BYTE PTR [eax],al
  41335a:	adc    BYTE PTR [eax],ah
  41335c:	or     al,0x8e
  41335e:	push   ss
  41335f:	inc    eax
  413360:	sub    BYTE PTR [ecx],0x95
  413363:	push   esi
  413364:	mov    ds:0xe0200400,al
  413369:	sub    ah,BYTE PTR [eax]
  41336b:	sub    BYTE PTR [esi+edx*4+0x71],ah
  41336f:	add    BYTE PTR [eax],dh
  413371:	push   esi
  413372:	xchg   edx,eax
  413373:	add    BYTE PTR [eax],al
  413375:	or     al,0x11
  413377:	add    al,BYTE PTR [esp+edx*1]
  41337a:	cmp    DWORD PTR [eax],edx
  41337c:	or     DWORD PTR [eax-0x58],edx
  41337f:	add    BYTE PTR [ebx+0x480094],ah
  413385:	adc    BYTE PTR [eax+0xb21a02c],al
  41338b:	add    esp,DWORD PTR [esi+ecx*1+0x24820002]
  413392:	add    BYTE PTR [eax],dl
  413394:	adc    BYTE PTR [edx+0x4140a38],al
  41339a:	push   edx
  41339b:	xchg   esi,eax
  41339c:	call   0x8a21:0x80504106
  4133a3:	add    ah,BYTE PTR [esi+0x82584]
  4133a9:	adc    BYTE PTR [eax],dl
  4133ab:	and    BYTE PTR [eax+eax*2],al
  4133ae:	pop    eax
  4133af:	add    DWORD PTR [edx],eax
  4133b1:	dec    eax
  4133b2:	add    al,0x8
  4133b4:	dec    ecx
  4133b5:	dec    ecx
  4133b6:	add    al,0x52
  4133b8:	test   BYTE PTR [ebx+eax*2],cl
  4133bb:	mov    eax,ds:0x8100c083
  4133c0:	rol    BYTE PTR [ebx],0x68
  4133c3:	add    BYTE PTR [eax],0x8
  4133c6:	inc    eax
  4133c7:	rol    BYTE PTR [edx],0x20
  4133ca:	add    al,0x72
  4133cc:	ror    BYTE PTR [eax],0x0
  4133cf:	or     eax,0x6125200
  4133d4:	inc    edx
  4133d5:	or     BYTE PTR [eax],al
  4133d7:	adc    al,0x9
  4133d9:	adc    al,0x9b
  4133db:	ror    BYTE PTR [eax],1
  4133dd:	pop    es
  4133de:	push   ecx
  4133df:	data16 (bad) [eax]
  4133e2:	add    BYTE PTR [eax+0x21210a11],ch
  4133e8:	xchg   edi,eax
  4133e9:	add    al,0x51
  4133eb:	dec    edx
  4133ec:	add    BYTE PTR [eax],ah
  4133ee:	inc    edx
  4133ef:	sub    al,BYTE PTR [eax+0x5]
  4133f2:	add    BYTE PTR [eax],ah
  4133f4:	add    DWORD PTR [edx],eax
  4133f6:	push   esp
  4133f7:	sbb    ah,BYTE PTR [eax]
  4133f9:	push   es
  4133fa:	add    BYTE PTR gs:[esi+eiz*1+0x40020005],0xc2
  413403:	add    bh,BYTE PTR [eax+0x8005a80]
  413409:	and    BYTE PTR [eax],ch
  41340b:	or     al,0x59
  41340d:	add    BYTE PTR [eax+0x1000304c],al
  413413:	pop    ebp
  413414:	loop   0x41341a
  413416:	adc    DWORD PTR [edx],ebp
  413418:	add    dh,al
  41341a:	adc    BYTE PTR [ecx],al
  41341c:	or     al,0x81
  41341e:	dec    edx
  41341f:	xchg   esp,eax
  413420:	adc    DWORD PTR [edx],edx
  413422:	and    al,0x42
  413424:	xor    al,0x0
  413426:	and    eax,0x2c660a02
  41342b:	leave  
  41342c:	add    BYTE PTR [eax+0x48244434],al
  413432:	or     al,0x31
  413434:	add    DWORD PTR [eax+eiz*4],ebx
  413437:	sub    DWORD PTR [eax+0x4c],0xc2212181
  41343e:	add    DWORD PTR [edx],edx
  413440:	test   al,0x6
  413442:	add    BYTE PTR [eax+ebp*1],cl
  413445:	loopne 0x413459
  413447:	and    BYTE PTR [edx+0x0],ah
  41344a:	cs fadd st,st(0)
  41344d:	add    BYTE PTR [edx],cl
  41344f:	pop    esp
  413450:	add    DWORD PTR [edx],eax
  413452:	mov    WORD PTR [eax],ss
  413454:	cmp    BYTE PTR [ebp+0xa],ch
  413457:	add    BYTE PTR [eax],cl
  413459:	add    dh,BYTE PTR [eax]
  41345b:	ret    0xa
  41345e:	or     al,0x4
  413460:	pop    ss
  413461:	mov    eax,0x50440401
  413467:	xor    BYTE PTR [edx],dl
  413469:	daa    
  41346a:	adc    dl,BYTE PTR [eax]
  41346c:	dec    esp
  41346d:	push   0x3
  41346f:	adc    eax,DWORD PTR [eax]
  413471:	loop   0x413499
  413473:	loope  0x4134de
  413475:	add    BYTE PTR [esp+ebx*1],cl
  413478:	and    BYTE PTR [eax+0x64540011],al
  41347e:	mov    al,0x10
  413480:	and    BYTE PTR [eax+eax*1],cl
  413483:	inc    esp
  413484:	and    al,BYTE PTR ds:0x40143400
  41348a:	test   BYTE PTR [eax],dl
  41348c:	ror    BYTE PTR [esi*1-0x79f3b7d8],0xa3
  413494:	add    BYTE PTR [edx+0x24],0x10
  413498:	or     DWORD PTR [eax],eax
  41349a:	test   DWORD PTR ds:0x201162a8,esp
  4134a0:	mov    eax,ds:0x2e30a001
  4134a5:	pop    esp
  4134a6:	add    al,0x81
  4134a8:	sub    BYTE PTR [edx],al
  4134aa:	adc    ecx,DWORD PTR [eax-0x7f]
  4134ad:	mov    al,0x1
  4134af:	inc    eax
  4134b0:	add    eax,0x19809000
  4134b5:	adc    al,BYTE PTR [ecx+eax*1]
  4134b8:	or     BYTE PTR [ecx],al
  4134ba:	or     DWORD PTR [eax-0x3fd73fc0],0xe1440005
  4134c4:	xchg   BYTE PTR [eax+eax*1+0x41],al
  4134c8:	and    BYTE PTR [ebp-0x3fffcfd4],al
  4134ce:	pop    es
  4134cf:	add    ah,BYTE PTR [ecx+0x310c076]
  4134d5:	sbb    BYTE PTR [edx+0x1081601],dh
  4134db:	cmp    BYTE PTR [eax+0x30],al
  4134de:	add    cl,al
  4134e0:	in     al,dx
  4134e1:	xchg   ecx,eax
  4134e2:	and    al,0x2
  4134e4:	or     BYTE PTR [eax+0x2001a51],al
  4134ea:	dec    edx
  4134eb:	inc    esi
  4134ec:	jmp    0xa010:0x410a2002
  4134f3:	or     cl,BYTE PTR [eax+0x5d00195]
  4134f9:	add    BYTE PTR [edx],ah
  4134fb:	add    BYTE PTR [ebx],bl
  4134fd:	push   es
  4134fe:	add    BYTE PTR [eax],al
  413500:	xchg   ebp,eax
  413501:	add    DWORD PTR [ebx+eiz*1],0x20228810
  413508:	add    BYTE PTR [eax+edx*2],0x48
  41350c:	and    cl,BYTE PTR [eax]
  41350e:	or     BYTE PTR [edx-0x7fdff660],al
  413514:	add    al,0xaa
  413516:	add    BYTE PTR [eax],dl
  413518:	mov    BYTE PTR [edx+0x63],al
  41351b:	push   esi
  41351c:	and    al,0xeb
  41351e:	dec    ecx
  41351f:	add    BYTE PTR [eax-0x3dff5a00],al
  413525:	add    BYTE PTR [eax],0x62
  413528:	or     DWORD PTR [eax],esp
  41352a:	xor    BYTE PTR [ecx],ah
  41352c:	adc    al,0x81
  41352e:	jecxz  0x41353e
  413530:	jo     0x413513
  413532:	add    BYTE PTR [eax],al
  413534:	dec    edx
  413535:	inc    eax
  413536:	add    al,BYTE PTR [eax+0x19]
  413539:	and    BYTE PTR [ecx],ah
  41353b:	rol    BYTE PTR [eax+0x2302a900],cl
  413541:	xor    BYTE PTR [ebp+0x822814],0x24
  413548:	and    BYTE PTR [edx-0x67],0x0
  41354c:	dec    eax
  41354d:	dec    esi
  41354e:	sbb    DWORD PTR [ebx+0x408800a4],esp
  413554:	xor    BYTE PTR [ebx],dh
  413556:	inc    eax
  413557:	xor    DWORD PTR [eax],ecx
  413559:	add    al,0x60
  41355b:	inc    edx
  41355c:	mov    al,ds:0x314241a8
  413561:	jl     0x4135ad
  413563:	sub    BYTE PTR [eax],al
  413565:	adc    dl,BYTE PTR [ecx]
  413567:	inc    ecx
  413568:	add    BYTE PTR [ecx+eiz*4],cl
  41356b:	cwde   
  41356c:	cmp    DWORD PTR [eax],ecx
  41356e:	jns    0x413571
  413570:	mov    DWORD PTR [edx],eax
  413572:	add    BYTE PTR [eax],0x0
  413575:	mov    al,ds:0x8048240
  41357a:	mov    gs,WORD PTR [eax-0x3ffff5ff]
  413580:	inc    eax
  413581:	push   cs
  413582:	add    eax,0x4841870
  413587:	and    BYTE PTR [eax],0xdc
  41358a:	xor    BYTE PTR [eax],cl
  41358c:	add    al,BYTE PTR [edx]
  41358e:	push   ss
  41358f:	adc    DWORD PTR [eax-0x78bbff7d],esp
  413595:	or     BYTE PTR [eax],al
  413597:	add    BYTE PTR [ecx+0x8022050],al
  41359d:	push   es
  41359e:	xor    dl,BYTE PTR [esp+eax*4]
  4135a1:	inc    eax
  4135a2:	adc    al,0x1e
  4135a4:	add    DWORD PTR [ecx],eax
  4135a6:	nop
  4135a7:	or     DWORD PTR [ecx],ebx
  4135a9:	in     al,0x45
  4135ab:	mov    eax,ds:0x5074cc0
  4135b0:	or     BYTE PTR [edi],al
  4135b2:	dec    edx
  4135b3:	dec    edi
  4135b4:	pop    es
  4135b5:	add    al,al
  4135b7:	jo     0x4135da
  4135b9:	adc    ah,0x14
  4135bc:	add    eax,0xe19931c1
  4135c1:	add    al,BYTE PTR [ecx]
  4135c3:	inc    ebx
  4135c4:	add    ah,0xd0
  4135c7:	add    BYTE PTR [eax+0x78],al
  4135ca:	adc    al,0x5
  4135cc:	xchg   edx,eax
  4135cd:	add    BYTE PTR [ecx],al
  4135cf:	add    BYTE PTR [edx],al
  4135d1:	add    BYTE PTR [eax-0x7d9fde7f],al
  4135d7:	add    DWORD PTR [edx],edi
  4135d9:	push   esp
  4135da:	adc    dl,BYTE PTR [eax]
  4135dc:	push   ss
  4135dd:	loope  0x4135df
  4135df:	or     DWORD PTR [ecx],0x5520008
  4135e5:	add    BYTE PTR [edx+ebx*4],al
  4135e8:	fs add al,0x0
  4135eb:	add    BYTE PTR [eax+0x0],al
  4135ee:	push   es
  4135ef:	add    DWORD PTR [ecx+0x23418202],eax
  4135f5:	adc    DWORD PTR [eax+0x9a10020],eax
  4135fb:	adc    BYTE PTR [eax+eax*1],al
  4135fe:	push   eax
  4135ff:	cmp    DWORD PTR [eax],eax
  413601:	or     al,BYTE PTR [edx+0x580c0210]
  413607:	or     DWORD PTR [eax],edx
  413609:	adc    DWORD PTR [edx],eax
  41360b:	add    BYTE PTR [eax],al
  41360d:	inc    ebp
  41360e:	dec    ebp
  41360f:	bound  esp,QWORD PTR [ebp+eax*1+0x420010c8]
  413616:	or     bl,bh
  413618:	or     eax,DWORD PTR [edx]
  41361a:	add    BYTE PTR [eax-0x6fff5ddc],cl
  413620:	movups XMMWORD PTR [eax+0x0],xmm4
  413624:	or     BYTE PTR [edx],ah
  413626:	ret    0x5c80
  413629:	jo     0x4135bb
  41362b:	and    al,BYTE PTR [edx+0x60]
  41362e:	add    ah,BYTE PTR [esi]
  413630:	xchg   BYTE PTR [eax+0x0],al
  413633:	mov    DWORD PTR [eax],ecx
  413635:	loop   0x41367e
  413637:	inc    ebp
  413638:	add    DWORD PTR [ebx],esp
  41363a:	inc    ecx
  41363b:	xor    BYTE PTR [edx+eiz*1+0x20c18506],al
  413642:	inc    ebx
  413643:	mov    BYTE PTR [eax+0x7a],ch
  413646:	sub    BYTE PTR [eax-0x67ff3f60],ah
  41364c:	adc    edx,eax
  41364e:	nop
  41364f:	inc    eax
  413650:	and    BYTE PTR [eax],cl
  413652:	pop    es
  413653:	mov    al,0x0
  413655:	add    DWORD PTR [eax+0x42],eax
  413658:	add    eax,0x11143208
  41365d:	push   ecx
  41365e:	inc    eax
  41365f:	or     BYTE PTR [eax+eax*8+0x2270042d],bh
  413666:	and    ebp,DWORD PTR [edx]
  413668:	add    dh,BYTE PTR [ecx]
  41366a:	inc    eax
  41366b:	and    DWORD PTR [esi],ebp
  41366d:	inc    ebp
  41366e:	sub    al,0x82
  413670:	push   ss
  413671:	inc    ecx
  413672:	add    BYTE PTR [eax+0xa],dl
  413675:	rol    DWORD PTR [ecx],0x2
  413678:	fsub   QWORD PTR [edx-0x3bebb800]
  41367e:	fs jo  0x4136b1
  413681:	or     BYTE PTR [eax+ecx*4],al
  413684:	dec    edx
  413685:	or     al,0x10
  413687:	add    BYTE PTR [eax+0x910040b],dl
  41368d:	push   es
  41368e:	add    BYTE PTR [ebx+edx*1],al
  413691:	sub    BYTE PTR [ecx+0x1],0x21
  413695:	add    DWORD PTR [ecx],eax
  413697:	sbb    eax,0x40228036
  41369c:	inc    eax
  41369d:	and    al,0x30
  41369f:	mov    al,ds:0x41123360
  4136a4:	xchg   BYTE PTR [esp+eax*2],al
  4136a7:	and    BYTE PTR [eax],dl
  4136a9:	or     al,0x10
  4136ab:	and    eax,0x880280
  4136b0:	adc    al,0x80
  4136b2:	add    BYTE PTR [ebx],0x20
  4136b5:	sub    BYTE PTR [eax],al
  4136b7:	or     BYTE PTR [ecx+eax*2-0x80],cl
  4136bb:	dec    edx
  4136bc:	add    BYTE PTR [eax],dh
  4136be:	add    BYTE PTR [esp+eax*1-0x7a],al
  4136c2:	mov    BYTE PTR [ebx],al
  4136c4:	and    BYTE PTR [ecx],al
  4136c6:	mov    al,0x91
  4136c8:	push   0x48006919
  4136cd:	add    al,0x80
  4136cf:	add    BYTE PTR [eax],ah
  4136d1:	and    al,0x32
  4136d3:	test   edx,esp
  4136d5:	inc    eax
  4136d6:	xor    al,BYTE PTR [eax+0x16641004]
  4136dc:	or     BYTE PTR [edx],al
  4136de:	mov    eax,ds:0x10a31040
  4136e3:	or     ebx,DWORD PTR [eax]
  4136e5:	add    eax,0x101840a
  4136ea:	mov    WORD PTR [eax],ss
  4136ec:	add    BYTE PTR [ecx],0x21
  4136ef:	add    BYTE PTR [eax],0xc6
  4136f2:	bound  ebp,QWORD PTR [eax+0x12]
  4136f5:	sub    BYTE PTR [eax+eax*1],cl
  4136f8:	inc    eax
  4136f9:	and    BYTE PTR [eax+0x56],0x7
  4136fd:	xor    BYTE PTR [ecx],al
  4136ff:	test   eax,0x4a82035
  413704:	add    BYTE PTR [eax],dh
  413706:	inc    eax
  413707:	inc    edx
  413708:	adc    BYTE PTR [edx+0x1],al
  41370b:	test   al,0xa
  41370d:	xor    BYTE PTR [ebx+0x30834112],cl
  413713:	sub    ah,BYTE PTR [edx]
  413715:	or     DWORD PTR [eax],0xffffffa8
  413718:	pusha  
  413719:	push   es
  41371a:	(bad)  
  41371b:	mov    al,ds:0x8c96080
  413720:	sbb    DWORD PTR [edx],edx
  413722:	daa    
  413723:	mov    WORD PTR [eax],es
  413725:	and    DWORD PTR [ebx],esp
  413727:	cmp    bh,0x15
  41372a:	mov    ah,0xb4
  41372c:	inc    ebx
  41372d:	add    BYTE PTR [edx],al
  41372f:	add    al,0x41
  413731:	nop
  413732:	sbb    ch,BYTE PTR [eax+0x68a6d640]
  413738:	add    BYTE PTR [eax+0x0],0xa
  41373c:	and    DWORD PTR [ecx+0x240388],esp
  413742:	add    dl,al
  413744:	add    BYTE PTR [eax],al
  413746:	mov    ds:0x6012006,al
  41374b:	inc    edx
  41374c:	or     BYTE PTR [esp+eiz*4],cl
  41374f:	jns    0x4136f3
  413751:	adc    BYTE PTR [eax+edx*2+0x4],al
  413755:	add    eax,0x2469220a
  41375a:	sub    BYTE PTR [eax],al
  41375c:	inc    eax
  41375d:	or     al,0x21
  41375f:	add    al,0x24
  413761:	sub    DWORD PTR [eax+0x20124485],eax
  413767:	mov    al,ds:0x4050d808
  41376c:	add    al,0x88
  41376e:	inc    ecx
  41376f:	nop
  413770:	add    DWORD PTR [eax+0x0],ebx
  413773:	add    bh,al
  413775:	mov    DWORD PTR [eax],eax
  413777:	popa   
  413778:	or     BYTE PTR [eax-0x5f79eb80],dl
  41377e:	add    ah,BYTE PTR [esp+eiz*2-0x60]
  413782:	mov    al,ds:0x130a2023
  413787:	data16 and al,BYTE PTR [eax]
  41378a:	add    BYTE PTR [eax+ebx*1+0x71],dl
  41378e:	and    eax,0x589e4000
  413793:	add    al,0x40
  413795:	add    DWORD PTR [ecx+0x21114902],eax
  41379b:	inc    eax
  41379c:	add    DWORD PTR [edx],edx
  41379e:	or     BYTE PTR [edi+esi*4+0x5c440081],cl
  4137a5:	or     BYTE PTR [eax+0x60003821],cl
  4137ab:	inc    esi
  4137ac:	and    al,BYTE PTR [eax+0x8242248]
  4137b2:	dec    edx
  4137b3:	cmp    ah,cl
  4137b5:	inc    eax
  4137b6:	and    BYTE PTR [eax+0x10082150],al
  4137bc:	mov    al,ds:0x20928430
  4137c1:	xor    al,BYTE PTR [eax+eiz*4+0x10]
  4137c5:	push   0x3b
  4137c7:	add    al,0x82
  4137c9:	add    DWORD PTR [edx],0xb
  4137cc:	inc    edx
  4137cd:	inc    eax
  4137ce:	mov    al,ds:0x91623625
  4137d3:	sub    DWORD PTR [eax],eax
  4137d5:	mov    al,ds:0x58a60e
  4137da:	adc    BYTE PTR [eax+eiz*1],cl
  4137dd:	or     BYTE PTR [ebx+eax*2],al
  4137e0:	mov    ds:0x20c550a0,al
  4137e5:	adc    BYTE PTR [eax],al
  4137e7:	aam    0x2b
  4137e9:	add    DWORD PTR [eax],0x1
  4137ec:	push   eax
  4137ed:	xor    BYTE PTR [eax+eiz*1],0xd1
  4137f1:	pop    edx
  4137f2:	adc    ebp,0x6201
  4137f8:	inc    esp
  4137f9:	loopne 0x41380f
  4137fb:	mov    DWORD PTR [ecx+0x20440604],eax
  413801:	add    BYTE PTR [eax],bh
  413803:	add    BYTE PTR [eax+eax*1+0x50020804],al
  41380a:	add    eax,DWORD PTR [edi]
  41380c:	mov    al,BYTE PTR [eax+eiz*1]
  41380f:	(bad)  
  413810:	xor    al,BYTE PTR [ecx-0x60]
  413813:	or     DWORD PTR ds:0x2d018940,0x2
  41381a:	add    BYTE PTR [edx],al
  41381c:	dec    esp
  41381d:	or     DWORD PTR [ebp+0x6c],edx
  413820:	add    BYTE PTR [eax],dh
  413822:	inc    eax
  413823:	adc    BYTE PTR [ebp+0x26],ah
  413826:	and    DWORD PTR [ebx],0xb41940
  41382c:	add    eax,DWORD PTR [eax]
  41382e:	xor    BYTE PTR [eax+0x42],al
  413831:	sbb    BYTE PTR [eax+0x0],ah
  413834:	sub    BYTE PTR [edx+eiz*2],cl
  413837:	adc    al,BYTE PTR [esi]
  413839:	adc    DWORD PTR [eax],ecx
  41383b:	pop    ecx
  41383c:	and    al,0xf2
  41383e:	and    ecx,DWORD PTR [eax-0x13]
  413841:	dec    ecx
  413842:	push   ecx
  413843:	add    BYTE PTR [esi],ah
  413845:	adc    BYTE PTR [edx+0x12],al
  413848:	add    BYTE PTR [eax+0x40],0x80
  41384c:	inc    ebp
  41384d:	mov    eax,ds:0x12001408
  413852:	add    ah,BYTE PTR [edi]
  413854:	fcom   st(0)
  413856:	or     al,BYTE PTR [eax]
  413858:	or     al,0x11
  41385a:	or     BYTE PTR [ebp+0x62],al
  41385d:	ins    BYTE PTR es:[edi],dx
  41385e:	dec    esp
  41385f:	test   BYTE PTR [edx],al
  413861:	push   es
  413862:	and    BYTE PTR [eax+0x901a171],dh
  413868:	inc    edx
  413869:	or     DWORD PTR [edx],ecx
  41386b:	mov    al,ds:0x81010008
  413870:	xchg   esp,eax
  413871:	add    BYTE PTR [eax+ecx*1-0x6ff5ef9c],al
  413878:	and    al,BYTE PTR [eax-0x7fff87df]
  41387e:	test   BYTE PTR [eax+0x4544348],ah
  413884:	inc    eax
  413885:	add    al,ah
  413887:	and    BYTE PTR [eax],ah
  413889:	add    al,0x23
  41388b:	or     DWORD PTR [eax+ebx*1+0x12490c8],ecx
  413892:	or     BYTE PTR [ebp+0x0],dl
  413895:	(bad)
  413898:	and    al,0x54
  41389a:	inc    esp
  41389b:	and    BYTE PTR [eax],dh
  41389d:	and    al,0x42
  41389f:	and    ah,BYTE PTR [eax+0x45]
  4138a2:	add    edx,DWORD PTR [ecx]
  4138a4:	or     BYTE PTR [eax+0x58],0x1
  4138a8:	add    DWORD PTR [ebx],ebx
  4138aa:	lar    esp,WORD PTR [eax+0x45]
  4138ae:	inc    edx
  4138af:	sbb    al,0x0
  4138b1:	sub    al,0x53
  4138b3:	jmp    0x8240fa
  4138b8:	xor    BYTE PTR [ecx+0x1ec948],0x46
  4138bf:	adc    al,0x64
  4138c1:	add    DWORD PTR [ecx+0x44],eax
  4138c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4138c6:	adc    DWORD PTR [eax+0x17200ac1],ecx
  4138cc:	add    al,0x90
  4138ce:	add    al,BYTE PTR [edx]
  4138d0:	nop
  4138d1:	cmp    BYTE PTR [esi],al
  4138d3:	in     al,0x44
  4138d5:	or     al,0x10
  4138d7:	add    BYTE PTR [eax],al
  4138d9:	and    BYTE PTR [eax+0x781088a2],al
  4138df:	push   eax
  4138e0:	inc    edx
  4138e1:	shl    DWORD PTR [eax],0xda
  4138e4:	push   ebx
  4138e5:	cmp    BYTE PTR [eax],0x50
  4138e8:	leave  
  4138e9:	call   0xa5c38ee
  4138ee:	adc    al,0x8
  4138f0:	mov    ds:0x9608b008,al
  4138f5:	or     al,0xc9
  4138f7:	sub    ecx,DWORD PTR [ecx+0x9]
  4138fa:	or     al,0xa
  4138fc:	add    ch,BYTE PTR [edx+0x23]
  4138ff:	nop
  413900:	sbb    DWORD PTR [eax],eax
  413902:	nop
  413903:	test   al,0xa8
  413905:	add    DWORD PTR [eax],eax
  413907:	add    DWORD PTR [eax],esi
  413909:	push   es
  41390a:	adc    BYTE PTR [eax],0xa4
  41390d:	and    DWORD PTR [eax+0x28],0x9a20900a
  413914:	aam    0x2
  413916:	add    BYTE PTR [eax+eax*2],al
  413919:	inc    ecx
  41391a:	or     BYTE PTR [edx],ah
  41391c:	push   edx
  41391d:	or     dl,BYTE PTR [ecx]
  41391f:	xchg   ebp,eax
  413920:	dec    edx
  413921:	mov    eax,ds:0x7468d020
  413926:	and    ah,BYTE PTR [ecx]
  413928:	mov    BYTE PTR [esi],al
  41392a:	add    BYTE PTR [eax],0x8
  41392d:	and    al,dh
  41392f:	inc    esp
  413930:	or     dl,BYTE PTR [ebp+0x402caa14]
  413936:	inc    esi
  413937:	pop    ebp
  413938:	rol    BYTE PTR [ebx],0x5
  41393b:	or     BYTE PTR [ecx+0xc60404],0x41
  413942:	sub    BYTE PTR [eax+0x24080058],ah
  413948:	sub    BYTE PTR [ecx],al
  41394a:	add    BYTE PTR [ecx],dl
  41394c:	dec    esp
  41394d:	sbb    BYTE PTR [edx-0x74],dh
  413950:	mov    WORD PTR [ecx+0x49],fs
  413953:	sbb    DWORD PTR [eax],ebp
  413955:	dec    esp
  413956:	test   BYTE PTR [eax+0x1009aa51],bl
  41395c:	xor    DWORD PTR [ebx],0xc0270941
  413962:	add    BYTE PTR [ecx],0x10
  413965:	add    al,BYTE PTR [eax]
  413967:	sub    al,BYTE PTR [edx]
  413969:	or     BYTE PTR [eax],bl
  41396b:	and    BYTE PTR ds:0x70004046,cl
  413971:	and    BYTE PTR [ebx],al
  413973:	push   es
  413974:	and    BYTE PTR [ecx],bl
  413976:	mov    DWORD PTR [edx],eax
  413978:	sbb    al,0x80
  41397a:	arpl   WORD PTR [ecx+0x0],ax
  41397d:	test   BYTE PTR ds:0x211420c,dl
  413983:	add    BYTE PTR [ebx+0x56],al
  413986:	add    cl,BYTE PTR [eax+0x9390626]
  41398c:	xor    al,0x1
  41398e:	add    DWORD PTR [eax],0x400a840c
  413994:	les    ebp,FWORD PTR [eax]
  413996:	xchg   BYTE PTR [eax+0x28],bl
  413999:	mov    es,WORD PTR gs:[eax-0x1fff7800]
  4139a0:	or     BYTE PTR [edx],dl
  4139a2:	mov    eax,DWORD PTR [eax+0x7d]
  4139a5:	or     BYTE PTR [eax+0x8500c0],al
  4139ab:	add    BYTE PTR [edx],dh
  4139ad:	inc    ecx
  4139ae:	jo     0x4139d1
  4139b0:	add    ecx,ecx
  4139b2:	inc    esp
  4139b3:	adc    al,0x2
  4139b5:	pop    eax
  4139b6:	imul   eax,DWORD PTR [eax+0x74],0x3
  4139ba:	or     al,0x0
  4139bc:	xor    al,0x21
  4139be:	adc    al,0xaa
  4139c0:	add    BYTE PTR [ecx],dl
  4139c2:	adc    BYTE PTR [eax+0x4012c014],dh
  4139c8:	add    BYTE PTR [edx-0x70],0xc5
  4139cc:	add    al,0x83
  4139ce:	wbinvd 
  4139d0:	test   BYTE PTR [eax+0x4c0a0808],cl
  4139d6:	or     BYTE PTR [ecx+0x4a0083d0],ch
  4139dc:	adc    al,BYTE PTR [edx+0x10]
  4139df:	inc    ecx
  4139e0:	add    al,0x40
  4139e2:	xor    al,BYTE PTR [ecx]
  4139e4:	inc    eax
  4139e5:	rcl    BYTE PTR [ecx],cl
  4139e7:	les    eax,FWORD PTR [ecx+eax*1]
  4139ea:	or     al,cl
  4139ec:	add    al,0x22
  4139ee:	inc    eax
  4139ef:	push   cs
  4139f0:	mov    al,ds:0xc25a10
  4139f5:	add    ecx,DWORD PTR [esi]
  4139f7:	add    BYTE PTR [eax],al
  4139f9:	sub    BYTE PTR [eax+0xa],al
  4139fc:	inc    eax
  4139fd:	and    BYTE PTR [eax],0x30
  413a00:	sub    ecx,DWORD PTR [eax+0x46]
  413a03:	stos   BYTE PTR es:[edi],al
  413a04:	mov    DWORD PTR [eax],eax
  413a06:	and    DWORD PTR [eax],edx
  413a08:	add    BYTE PTR [ecx],al
  413a0a:	add    BYTE PTR [eax],0x2
  413a0d:	add    al,BYTE PTR [esi]
  413a0f:	add    al,BYTE PTR [eax+0x3]
  413a12:	cwde   
  413a13:	mov    BYTE PTR [edx+0x18],ah
  413a16:	add    dh,BYTE PTR [eax+0x649c10b0]
  413a1c:	or     DWORD PTR [edx+0x8851402],edx
  413a22:	test   BYTE PTR [eax],al
  413a24:	inc    ecx
  413a25:	add    ah,BYTE PTR [ecx]
  413a27:	add    BYTE PTR [eax],0xa0
  413a2a:	xor    BYTE PTR [eax],al
  413a2c:	sbb    BYTE PTR [eax],al
  413a2e:	inc    esp
  413a2f:	add    edx,0x6
  413a32:	dec    esp
  413a33:	inc    eax
  413a34:	add    BYTE PTR [esi],dl
  413a36:	add    BYTE PTR [eax],bh
  413a38:	add    BYTE PTR [ecx],cl
  413a3a:	mov    edx,0x2347
  413a3f:	add    DWORD PTR [edi],ecx
  413a41:	add    BYTE PTR [eax],0x53
  413a44:	rcl    DWORD PTR [ecx],1
  413a46:	test   BYTE PTR [ebp+0x10028411],al
  413a4c:	mov    al,ds:0x1102c00e
  413a51:	or     BYTE PTR [ebx],0x4c
  413a54:	or     BYTE PTR [ebx],al
  413a56:	adc    al,BYTE PTR [ecx]
  413a58:	inc    eax
  413a59:	adc    al,0x24
  413a5b:	dec    ecx
  413a5c:	add    edx,DWORD PTR [edx+eax*8+0x232cf906]
  413a63:	add    BYTE PTR [eax],al
  413a65:	and    al,0x3
  413a67:	xor    BYTE PTR [eax],al
  413a69:	add    DWORD PTR [esp+eax*8+0xa80610c],esi
  413a70:	mov    edx,edx
  413a72:	add    al,BYTE PTR [ecx+eax*1+0x48020410]
  413a79:	adc    BYTE PTR ds:0x2030c08,cl
  413a7f:	add    BYTE PTR [edx+eiz*1+0x3],cl
  413a83:	mov    ds:0x1f54184,eax
  413a88:	dec    edx
  413a89:	and    BYTE PTR [ebx+ecx*1],dh
  413a8c:	or     cl,dl
  413a8e:	add    eax,0x1c08311
  413a93:	xchg   BYTE PTR [eax],ah
  413a95:	and    al,BYTE PTR [ebx]
  413a97:	or     DWORD PTR [edx],edi
  413a99:	nop
  413a9a:	lods   eax,DWORD PTR ds:[esi]
  413a9b:	mov    dl,BYTE PTR [eax]
  413a9d:	sbb    cl,al
  413a9f:	adc    BYTE PTR [eax+esi*2],0x4c
  413aa3:	add    BYTE PTR [eax],ah
  413aa5:	sub    BYTE PTR [esi+ecx*1-0x7f],al
  413aa9:	mov    eax,0xc200835
  413aae:	popa   
  413aaf:	add    BYTE PTR [eax+0xc],al
  413ab2:	add    BYTE PTR [eax],cl
  413ab4:	add    BYTE PTR [ebx+edx*1],cl
  413ab7:	add    DWORD PTR [eax],eax
  413ab9:	ins    BYTE PTR es:[edi],dx
  413aba:	and    al,BYTE PTR [eax]
  413abc:	push   eax
  413abd:	mov    BYTE PTR [eax],dl
  413abf:	add    edx,DWORD PTR [ecx]
  413ac1:	enter  0x8c0,0xb9
  413ac5:	nop
  413ac6:	jno    0x413b1d
  413ac8:	inc    eax
  413ac9:	adc    DWORD PTR [eax],ecx
  413acb:	xor    al,BYTE PTR [edx+0x1620030]
  413ad1:	or     cl,BYTE PTR [eax+ecx*2]
  413ad4:	push   eax
  413ad5:	add    bl,BYTE PTR [edx]
  413ad7:	add    al,0x18
  413ad9:	inc    esp
  413ada:	or     BYTE PTR [eax],ah
  413adc:	add    BYTE PTR [esi],al
  413ade:	inc    ecx
  413adf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ae0:	inc    eax
  413ae1:	add    ah,dl
  413ae3:	adc    BYTE PTR [ebp+0x364d81a4],dl
  413ae9:	add    BYTE PTR [edx],dh
  413aeb:	push   eax
  413aec:	sub    BYTE PTR [edx-0x2f],cl
  413aef:	fwait
  413af0:	inc    ebx
  413af1:	inc    eax
  413af2:	add    BYTE PTR [edi+0x281448a],al
  413af8:	inc    ebx
  413af9:	and    eax,0x603d28c4
  413afe:	adc    BYTE PTR [eax+eax*1],cl
  413b01:	adc    al,0x90
  413b03:	add    BYTE PTR [ecx],dl
  413b05:	inc    eax
  413b06:	add    BYTE PTR [eax],al
  413b08:	sbb    al,BYTE PTR [eax]
  413b0a:	add    BYTE PTR [edx-0x6f],ah
  413b0d:	mov    BYTE PTR [eax-0x7a],al
  413b10:	add    ecx,DWORD PTR [ebx]
  413b12:	or     DWORD PTR [esp+eax*1],eax
  413b15:	or     BYTE PTR [eax+0xc28844],al
  413b1b:	lea    edi,[eax+eax*4+0x30500800]
  413b22:	push   eax
  413b23:	inc    eax
  413b24:	sbb    BYTE PTR [ecx],al
  413b26:	add    DWORD PTR [eax],0x22
  413b29:	adc    cl,0x92
  413b2c:	and    BYTE PTR [esi],0x0
  413b2f:	fs inc ecx
  413b31:	or     DWORD PTR [edi-0x40],eax
  413b34:	xchg   ebp,eax
  413b35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b36:	mov    eax,ds:0xc40a0802
  413b3b:	ret    0x201
  413b3e:	inc    eax
  413b3f:	add    BYTE PTR [edx-0x2ffdfbf5],cl
  413b45:	or     al,0xe
  413b47:	add    BYTE PTR [ecx+edx*1+0x4c022020],0x41
  413b4f:	or     DWORD PTR [eax+0x10466024],esp
  413b55:	inc    edx
  413b56:	mov    al,ds:0x420813c0
  413b5b:	mov    ds:0x56140002,eax
  413b60:	rol    DWORD PTR [esi-0x7a],1
  413b63:	adc    ah,BYTE PTR [eax+0x60]
  413b66:	mov    dl,BYTE PTR [eax]
  413b68:	add    al,0x10
  413b6a:	add    BYTE PTR [eax-0x7f],al
  413b6d:	add    BYTE PTR [esi],0x34
  413b70:	or     eax,0xa18060a6
  413b75:	adc    ebp,eax
  413b77:	or     BYTE PTR [eax],0x21
  413b7a:	adc    BYTE PTR [eax],al
  413b7c:	add    BYTE PTR [ecx],cl
  413b7e:	and    BYTE PTR [eax],dl
  413b80:	sub    DWORD PTR [eax+0x50800821],eax
  413b86:	mov    al,ds:0xc006003
  413b8b:	lea    eax,[ebp-0x7eb7bbf0]
  413b91:	add    BYTE PTR [ecx+eiz*1-0x2efdfe74],0x1
  413b99:	enter  0x9040,0x4
  413b9d:	adc    al,0xa5
  413b9f:	and    BYTE PTR [esi],cl
  413ba1:	inc    eax
  413ba2:	sbb    al,0x0
  413ba4:	bound  edi,QWORD PTR [edx]
  413ba6:	inc    esp
  413ba7:	or     al,0x10
  413ba9:	add    BYTE PTR [edx],cl
  413bab:	or     eax,DWORD PTR [edx]
  413bad:	add    al,0x14
  413baf:	add    ecx,DWORD PTR [eax]
  413bb1:	add    eax,DWORD PTR [eax]
  413bb3:	adc    BYTE PTR [eax],dl
  413bb5:	or     al,0x9
  413bb7:	mov    eax,ds:0x10002086
  413bbc:	rcr    BYTE PTR [edi],0x9c
  413bbf:	push   ecx
  413bc0:	add    cl,BYTE PTR [eax+0x0]
  413bc3:	pop    esi
  413bc4:	adc    BYTE PTR [esi+eax*2+0x10],dh
  413bc8:	and    al,0x31
  413bca:	bound  ecx,QWORD PTR [eax]
  413bcc:	or     DWORD PTR [edi+ecx*4+0x16],esp
  413bd0:	add    dh,bl
  413bd2:	and    al,BYTE PTR [eax+eax*1]
  413bd5:	adc    BYTE PTR [ecx+0x40],al
  413bd8:	dec    eax
  413bd9:	add    cl,BYTE PTR [ecx]
  413bdb:	add    eax,0x20828008
  413be0:	add    BYTE PTR [eax],al
  413be2:	add    BYTE PTR [edx+0xa285148],bl
  413be8:	and    BYTE PTR [ecx],cl
  413bea:	daa    
  413beb:	jb     0x413bee
  413bed:	xor    eax,0x90400
  413bf2:	add    eax,0x114045
  413bf7:	add    BYTE PTR [eax+0x1],ah
  413bfa:	or     BYTE PTR [eax+0x90c89a0],al
  413c00:	leave  
  413c01:	mov    ah,BYTE PTR [ebp-0x7c]
  413c04:	push   0xa0020
  413c09:	adc    BYTE PTR [edx+0x59],ah
  413c0c:	add    BYTE PTR [ebx],ch
  413c0e:	mov    bl,0x13
  413c10:	add    BYTE PTR ds:0x32201112,0x4
  413c17:	mov    DWORD PTR ds:0x2981706,edx
  413c1d:	xor    DWORD PTR [edx],ecx
  413c1f:	mov    al,ds:0x50181b1d
  413c24:	add    BYTE PTR ds:0x8410448,0x0
  413c2b:	or     al,0x20
  413c2d:	fs nop
  413c2f:	adc    al,0x4c
  413c31:	and    ch,BYTE PTR [esi]
  413c33:	or     BYTE PTR [ecx+0x80f0100],cl
  413c39:	mov    WORD PTR [eax],es
  413c3b:	adc    BYTE PTR [edx+0x46],ah
  413c3e:	test   BYTE PTR [eax],al
  413c40:	inc    esp
  413c41:	add    BYTE PTR [eax+0x8400e20],ah
  413c47:	add    al,BYTE PTR [eax*1-0x6fbb9fc8]
  413c4e:	bound  eax,QWORD PTR [ecx]
  413c50:	adc    eax,DWORD PTR [ebx]
  413c52:	mov    WORD PTR [eax],ss
  413c54:	add    al,0x8
  413c56:	and    ch,BYTE PTR [eax]
  413c58:	add    cl,BYTE PTR [eax]
  413c5a:	add    cl,BYTE PTR [eax]
  413c5c:	add    BYTE PTR [ecx],al
  413c5e:	add    BYTE PTR [eax+eax*4],ah
  413c61:	and    eax,DWORD PTR [eax]
  413c63:	inc    eax
  413c64:	inc    eax
  413c65:	ret    0x2000
  413c68:	push   esi
  413c69:	add    BYTE PTR [edi+0x30],bl
  413c6c:	mov    bl,0x43
  413c6e:	or     al,0xa
  413c70:	or     ah,BYTE PTR [edx+0x30ac0400]
  413c76:	add    BYTE PTR [eax],ch
  413c78:	pusha  
  413c79:	sub    BYTE PTR es:[eax],al
  413c7c:	data16 add BYTE PTR [ecx],ah
  413c7f:	sub    dl,BYTE PTR [edx]
  413c81:	rcr    BYTE PTR [eax],0xe2
  413c84:	inc    edx
  413c85:	and    BYTE PTR [edx+0x120800c8],dh
  413c8b:	add    bl,0xcb
  413c8e:	adc    BYTE PTR [ecx+0x2a11871],dl
  413c94:	and    BYTE PTR [eax+0x122c012],al
  413c9a:	mov    ds:0x220047e1,al
  413c9f:	or     eax,DWORD PTR [eax+0x49]
  413ca2:	xor    BYTE PTR [eax+0xc6001a0],cl
  413ca8:	sbb    BYTE PTR [ebp+0x5c00b304],dh
  413cae:	xor    DWORD PTR [ecx+0xd448084],ebx
  413cb4:	add    BYTE PTR [eax+0x8100006],ah
  413cba:	sbb    bl,BYTE PTR [eax]
  413cbc:	and    ecx,DWORD PTR [eax+0x2248001c]
  413cc2:	jno    0x413cc4
  413cc4:	push   cs
  413cc5:	adc    BYTE PTR [ecx+0x0],al
  413cc8:	add    DWORD PTR [ecx],eax
  413cca:	adc    BYTE PTR [eax+0x0],0x14
  413cce:	add    BYTE PTR [eax],al
  413cd0:	mov    eax,ds:0x102c0004
  413cd5:	push   0x6041830c
  413cda:	add    BYTE PTR [edx],ch
  413cdc:	sub    ah,dl
  413cde:	add    al,0xe0
  413ce0:	add    BYTE PTR [eax+0x465c14d1],al
  413ce6:	dec    eax
  413ce7:	and    al,0x44
  413ce9:	or     al,0x20
  413ceb:	loopne 0x413cad
  413ced:	mov    al,ds:0x5060364
  413cf2:	or     BYTE PTR [esi+edx*4],ah
  413cf5:	add    ah,BYTE PTR [eax+eiz*1-0x77ff4dbc]
  413cfc:	fwait
  413cfd:	mov    al,0xa
  413cff:	stos   BYTE PTR es:[edi],al
  413d00:	sbb    dh,al
  413d02:	and    BYTE PTR [edx+0x6],0xc2
  413d06:	push   0x14
  413d08:	sbb    BYTE PTR [eax+0x44],al
  413d0b:	lahf   
  413d0c:	inc    edx
  413d0d:	mov    al,ds:0x50c14286
  413d12:	adc    al,BYTE PTR [eax]
  413d14:	dec    eax
  413d15:	add    cl,BYTE PTR [eax+ebp*1]
  413d18:	add    ah,BYTE PTR [eax+0x30026]
  413d1e:	adc    DWORD PTR [eax-0x3d],eax
  413d21:	add    BYTE PTR [eax+0x1354a800],ah
  413d27:	add    al,BYTE PTR [ecx+0x2870]
  413d2d:	add    edi,DWORD PTR [eax]
  413d2f:	or     al,dl
  413d31:	add    BYTE PTR [edx-0x78],bh
  413d34:	mov    DWORD PTR [ecx],esp
  413d36:	cmp    DWORD PTR [eax],esp
  413d38:	inc    eax
  413d39:	inc    ecx
  413d3a:	add    DWORD PTR [eax],eax
  413d3c:	add    al,BYTE PTR [eax]
  413d3e:	and    BYTE PTR [ecx],al
  413d40:	test   BYTE PTR [edx-0x6b],dl
  413d43:	and    al,0x30
  413d45:	adc    BYTE PTR [eax],dl
  413d47:	push   es
  413d48:	push   eax
  413d49:	inc    ecx
  413d4a:	test   DWORD PTR [ebx],eax
  413d4c:	or     eax,DWORD PTR [eax+0x49]
  413d4f:	inc    eax
  413d50:	fdiv   QWORD PTR [esi]
  413d52:	inc    edx
  413d53:	mov    al,ds:0x71000084
  413d58:	xor    BYTE PTR ds:0x901a00,0x1
  413d5f:	and    al,0x76
  413d61:	add    ah,BYTE PTR [eax]
  413d63:	and    al,BYTE PTR [esi]
  413d65:	add    BYTE PTR [eax+edx*2+0x10002000],bl
  413d6c:	add    dl,BYTE PTR [edx]
  413d6e:	ins    BYTE PTR es:[edi],dx
  413d6f:	add    eax,DWORD PTR [ecx]
  413d71:	mov    WORD PTR [eax+ebp*1],fs
  413d74:	inc    esp
  413d75:	and    DWORD PTR [eax],eax
  413d77:	test   BYTE PTR [eax],bl
  413d79:	add    al,BYTE PTR [eax]
  413d7b:	add    al,0x20
  413d7e:	or     DWORD PTR ds:0x2084600,esp
  413d84:	add    BYTE PTR [ecx],al
  413d86:	sbb    BYTE PTR [ecx],al
  413d88:	or     BYTE PTR [ebp+0x40],al
  413d8b:	adc    eax,0x254004a8
  413d90:	add    BYTE PTR [ebx],al
  413d92:	push   ss
  413d93:	mov    es,WORD PTR [edx]
  413d95:	or     bh,BYTE PTR [eax]
  413d97:	add    DWORD PTR [eax],esp
  413d99:	add    cl,BYTE PTR [esi]
  413d9b:	add    dl,BYTE PTR [edx]
  413d9d:	or     al,0xb
  413d9f:	inc    eax
  413da0:	mov    cl,0xb0
  413da2:	and    BYTE PTR [edx],dh
  413da4:	or     BYTE PTR [edx+0x210c0000],ah
  413daa:	add    BYTE PTR [esi],0x2
  413dad:	push   eax
  413dae:	inc    eax
  413daf:	mov    BYTE PTR [eax-0x78],ch
  413db2:	pop    esp
  413db3:	adc    DWORD PTR [ecx+eax*1+0x42],esi
  413db7:	mov    BYTE PTR [edx],ch
  413db9:	and    BYTE PTR [ebx+0x21241203],ch
  413dbf:	xor    BYTE PTR [eax+eax*1+0x1544963],bl
  413dc6:	inc    esi
  413dc7:	adc    dl,BYTE PTR [edx]
  413dc9:	and    BYTE PTR [ecx+0x6],al
  413dcc:	xor    DWORD PTR [ecx],0x6b4210ca
  413dd2:	inc    eax
  413dd3:	push   ss
  413dd4:	sub    eax,0x20440c90
  413dd9:	inc    ecx
  413dda:	dec    esp
  413ddb:	pusha  
  413ddc:	mov    ds:0x40053133,eax
  413de1:	add    al,0x0
  413de3:	inc    esi
  413de4:	or     eax,0x206e800c
  413de9:	mov    BYTE PTR [edx+0x80cd400],al
  413def:	shr    BYTE PTR [esp+eax*4],0x1
  413df3:	dec    esi
  413df4:	and    BYTE PTR [esi+esi*1+0x48],al
  413df8:	adc    eax,0x80b01240
  413dfd:	inc    edx
  413dfe:	dec    eax
  413dff:	pop    eax
  413e00:	test   DWORD PTR [ecx],eax
  413e02:	add    dl,al
  413e04:	and    BYTE PTR [eax+ebx*1-0x74],dl
  413e08:	add    BYTE PTR [ecx+0x1021e0],al
  413e0e:	push   es
  413e0f:	and    esp,DWORD PTR [eax]
  413e11:	or     DWORD PTR [eax],0x30010204
  413e17:	add    BYTE PTR [edx+eiz*4+0x8],dh
  413e1b:	mov    cl,BYTE PTR [ecx]
  413e1d:	fadd   DWORD PTR [eax+0x24]
  413e20:	add    BYTE PTR [ecx],0x94
  413e23:	push   esp
  413e24:	and    BYTE PTR [edx+0x7040060a],0x1
  413e2b:	adc    al,0x9
  413e2d:	add    BYTE PTR [esi+0x12],cl
  413e30:	add    al,0x41
  413e32:	add    al,BYTE PTR [ecx]
  413e34:	and    al,BYTE PTR [edx+eax*4]
  413e37:	add    ah,BYTE PTR [eax+esi*8]
  413e3a:	push   esp
  413e3b:	or     al,0xa1
  413e3d:	and    BYTE PTR [esi+0x488344],ah
  413e43:	add    DWORD PTR [eax],ebp
  413e45:	sbb    BYTE PTR fs:[eax+edx*4+0x8049204],0xc3
  413e4e:	inc    edx
  413e4f:	mov    es,WORD PTR [eax*1+0xc20822e]
  413e56:	adc    DWORD PTR [ebp+eax*4-0x6a],0xb0105802
  413e5e:	add    BYTE PTR ds:0x2421028,dl
  413e64:	and    eax,0x149008a8
  413e69:	inc    eax
  413e6a:	es inc edx
  413e6c:	inc    edx
  413e6d:	add    BYTE PTR [esi+ecx*2],al
  413e70:	lods   al,BYTE PTR ds:[esi]
  413e71:	bound  edx,QWORD PTR [ebp+0x2071210]
  413e77:	add    BYTE PTR [ecx+0x8018820],al
  413e7d:	or     al,0x43
  413e7f:	nop
  413e80:	pop    edx
  413e81:	add    BYTE PTR [eax+0x1004711c],al
  413e87:	inc    edx
  413e88:	pusha  
  413e89:	pop    esp
  413e8a:	add    BYTE PTR [esi],0x26
  413e8d:	adc    BYTE PTR [eax-0x7f7bfe7e],al
  413e93:	mov    BYTE PTR [eax],al
  413e95:	and    DWORD PTR [edi],eax
  413e97:	inc    edx
  413e98:	sub    BYTE PTR [edx],cl
  413e9a:	sub    BYTE PTR [esi+eax*4],dl
  413e9d:	xor    al,0xc4
  413e9f:	mov    gs,WORD PTR [eax]
  413ea1:	sbb    BYTE PTR [eax+0x20094418],ah
  413ea7:	adc    DWORD PTR [ebx],0xc4212002
  413ead:	adc    ch,BYTE PTR [eax]
  413eaf:	add    al,0x18
  413eb1:	add    al,0xc8
  413eb3:	adc    BYTE PTR [ebx+0x2],cl
  413eb6:	and    DWORD PTR [esi+0x48812130],eax
  413ebc:	xchg   edx,eax
  413ebd:	sub    cl,BYTE PTR [eax]
  413ebf:	mov    ds:0x88491e80,al
  413ec4:	ins    BYTE PTR es:[edi],dx
  413ec5:	or     BYTE PTR [esi],dh
  413ec7:	add    BYTE PTR [ebp+0x12552fc3],al
  413ecd:	add    BYTE PTR [ecx],ah
  413ecf:	add    BYTE PTR [eax],dl
  413ed1:	inc    ecx
  413ed2:	and    BYTE PTR [edx+ecx*2+0x2000008a],0x20
  413eda:	or     al,BYTE PTR [edx]
  413edc:	add    BYTE PTR ds:0x20208000,bh
  413ee2:	mov    DWORD PTR [eax],ecx
  413ee4:	sub    BYTE PTR [eax+edx*4],ah
  413ee7:	test   BYTE PTR [esi],al
  413ee9:	inc    edx
  413eea:	or     ecx,DWORD PTR [esi]
  413eec:	or     DWORD PTR [edx],esp
  413eee:	imul   eax,DWORD PTR [eax+0x20312c13],0x2b004094
  413ef8:	inc    esp
  413ef9:	add    BYTE PTR [edi-0xbfcffe],bl
  413eff:	adc    eax,0x43b720
  413f04:	add    BYTE PTR [eax],bl
  413f06:	add    eax,eax
  413f08:	add    al,BYTE PTR [edx+0x5]
  413f0b:	add    al,0x9
  413f0d:	or     BYTE PTR [eax],al
  413f0f:	add    DWORD PTR [eax+0x0],esi
  413f12:	or     DWORD PTR [eax+0x6a2c040],eax
  413f18:	add    eax,0x15a5202
  413f1d:	inc    ebp
  413f1e:	sub    BYTE PTR [eax+0x21],bl
  413f21:	or     BYTE PTR [ecx],ch
  413f23:	xchg   BYTE PTR [esi+0x50],al
  413f26:	add    BYTE PTR [edx+eax*4+0x0],bl
  413f2a:	and    BYTE PTR ds:0x2a808a0,dl
  413f30:	xchg   esp,eax
  413f31:	adc    DWORD PTR [edx],esp
  413f33:	mov    BYTE PTR [ecx],ah
  413f35:	sub    BYTE PTR [eax],0xa
  413f38:	add    dl,BYTE PTR [edx-0x65ff75fb]
  413f3e:	inc    eax
  413f3f:	adc    BYTE PTR [eax+0x22012681],al
  413f45:	and    BYTE PTR [eax],bl
  413f47:	or     DWORD PTR [eax],esp
  413f49:	push   eax
  413f4a:	push   ebp
  413f4b:	sbb    BYTE PTR [eax],al
  413f4d:	adc    BYTE PTR [eax+eax*2],0x21
  413f51:	ret    0x208
  413f54:	add    al,0x74
  413f56:	adc    BYTE PTR [esp+ecx*1],bh
  413f59:	xor    ecx,DWORD PTR [ecx+0x26c088a3]
  413f5f:	inc    eax
  413f60:	mov    al,0x40
  413f62:	pop    ebp
  413f63:	add    BYTE PTR [eax],dl
  413f65:	dec    esp
  413f66:	add    DWORD PTR [eax],eax
  413f68:	add    BYTE PTR [ecx],ah
  413f6a:	add    BYTE PTR [eax],ah
  413f6c:	add    BYTE PTR ds:0x30cb123,al
  413f72:	add    al,0x21
  413f75:	add    al,0xb2
  413f77:	or     BYTE PTR [esi],ah
  413f79:	inc    eax
  413f7a:	and    BYTE PTR [eax+eax*4],ah
  413f7d:	or     DWORD PTR [eax+0x11],ecx
  413f80:	and    DWORD PTR [eax+esi*1+0x444190],edx
  413f87:	push   es
  413f88:	rol    BYTE PTR [eax],0x31
  413f8b:	push   ds
  413f8c:	sbb    eax,0x218e11a3
  413f91:	adc    BYTE PTR [eax-0x76ffffb0],0x0
  413f98:	dec    ecx
  413f99:	or     eax,0x82178022
  413f9e:	or     al,0xa0
  413fa0:	test   BYTE PTR [ebx],al
  413fa2:	ins    BYTE PTR es:[edi],dx
  413fa3:	add    ecx,DWORD PTR [esi+0x20484e92]
  413fa9:	test   DWORD PTR [eax],ecx
  413fab:	or     al,0x1
  413fad:	or     BYTE PTR [esi],ah
  413faf:	add    DWORD PTR [eax+ebp*1+0x4d],eax
  413fb3:	adc    DWORD PTR [edx],esp
  413fb5:	inc    ecx
  413fb6:	or     BYTE PTR [eax],al
  413fb8:	adc    eax,0x481d1008
  413fbd:	and    BYTE PTR [ecx+0x19908],0x3
  413fc4:	imul   ecx,DWORD PTR [edx],0x20d50389
  413fca:	inc    eax
  413fcb:	and    DWORD PTR [edx],0xffffff81
  413fce:	or     DWORD PTR [eax],ecx
  413fd0:	add    BYTE PTR [ecx+0x94054e4],0x92
  413fd7:	and    DWORD PTR [ebx],esp
  413fd9:	add    al,BYTE PTR [ecx]
  413fdb:	push   es
  413fdc:	dec    ecx
  413fdd:	and    DWORD PTR [ecx+eax*1],esp
  413fe0:	sub    DWORD PTR ds:0x49381b,esp
  413fe6:	sub    BYTE PTR [edx+0xd],dh
  413fe9:	sub    al,0x18
  413feb:	add    al,0x28
  413fed:	push   eax
  413fee:	add    DWORD PTR [eax],eax
  413ff0:	adc    BYTE PTR [eax+0x2101c10],dl
  413ff6:	add    BYTE PTR [ebx],al
  413ff8:	shl    esp,1
  413ffa:	in     al,0x48
  413ffc:	and    BYTE PTR [ebx-0x7e],al
  413fff:	test   BYTE PTR [eax-0x6c],al
  414002:	add    BYTE PTR [eax+eax*1+0x16000498],0x12
  41400a:	jmp    0x4692:0xa2018283
  414011:	test   BYTE PTR [esi],dh
  414013:	adc    BYTE PTR [edx+0x48],ch
  414016:	or     BYTE PTR [ecx],cl
  414018:	and    DWORD PTR [eax],eax
  41401a:	mov    WORD PTR [eax+eax*4],es
  41401d:	dec    esp
  41401e:	pusha  
  41401f:	adc    ah,BYTE PTR [eax+0x20]
  414022:	sbb    BYTE PTR [eax],al
  414024:	mov    BYTE PTR [ebx+0x44],al
  414027:	adc    BYTE PTR [eax],bl
  414029:	inc    eax
  41402a:	xchg   esp,eax
  41402b:	add    DWORD PTR [eax+0x8],edx
  41402e:	ror    BYTE PTR [eax],0x41
  414031:	dec    ecx
  414032:	and    eax,0x62208500
  414037:	add    BYTE PTR ds:0x39600104,0x98
  41403e:	inc    edx
  41403f:	and    DWORD PTR [eax+ebp*4],edx
  414042:	add    al,BYTE PTR [edx]
  414044:	or     BYTE PTR [eax],dl
  414046:	mov    eax,ds:0xb9453e28
  41404b:	cmp    DWORD PTR [edx],ebp
  41404d:	adc    BYTE PTR [eax],al
  41404f:	push   cs
  414050:	xor    DWORD PTR [ebx],eax
  414052:	adc    dl,BYTE PTR [edx]
  414054:	add    al,0x8
  414056:	xor    al,BYTE PTR [esi]
  414058:	or     BYTE PTR [eax+0x1160512],dl
  41405e:	test   BYTE PTR [eax],al
  414060:	and    DWORD PTR [ecx-0x6ffbe6f5],ecx
  414066:	inc    eax
  414067:	add    esp,DWORD PTR [ecx]
  414069:	add    BYTE PTR [edx],0x1c
  41406c:	mov    ch,0x2
  41406e:	or     BYTE PTR [ecx+0x20b4160c],al
  414074:	add    al,0x4c
  414076:	and    al,0x4
  414078:	add    BYTE PTR [eax+0x810100],al
  41407e:	add    cl,BYTE PTR [eax+eiz*4+0x88008c9]
  414085:	fcom   st(1)
  414087:	adc    BYTE PTR [eax+ecx*2+0x40],ah
  41408b:	add    al,al
  41408d:	adc    al,BYTE PTR [edx]
  41408f:	adc    DWORD PTR [edx+0x60534288],eax
  414095:	add    eax,0x21108102
  41409a:	and    BYTE PTR [eax+0x42],al
  41409d:	add    DWORD PTR [eax],eax
  41409f:	and    dl,BYTE PTR [edx]
  4140a1:	nop
  4140a2:	add    BYTE PTR [eax],dl
  4140a4:	adc    BYTE PTR [edi+0x9],ah
  4140a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4140a8:	xor    al,BYTE PTR [edx]
  4140aa:	add    BYTE PTR [edx+0xc],al
  4140ad:	or     BYTE PTR [ebx+0x8],ah
  4140b0:	add    eax,0xa2420b
  4140b5:	push   ss
  4140b6:	adc    BYTE PTR [ecx],cl
  4140b8:	add    BYTE PTR [edx],0x20
  4140bb:	sbb    BYTE PTR [esi],dl
  4140bd:	and    BYTE PTR [eax+0x2000a00],al
  4140c3:	adc    BYTE PTR [eax],dl
  4140c5:	push   ecx
  4140c6:	and    al,0xbb
  4140c8:	and    eax,DWORD PTR [eax+0x2a]
  4140cb:	add    BYTE PTR [esi+0x58],0x40
  4140cf:	add    eax,DWORD PTR [edx]
  4140d1:	adc    DWORD PTR [eax],eax
  4140d3:	sub    BYTE PTR [ecx],dl
  4140d5:	inc    ecx
  4140d6:	adc    BYTE PTR [ecx+0x2020022],cl
  4140dc:	popa   
  4140dd:	dec    edx
  4140de:	adc    BYTE PTR [ecx+0x41140003],cl
  4140e4:	add    cl,BYTE PTR [esi]
  4140e6:	test   ah,al
  4140e8:	xor    BYTE PTR [eax+eiz*1],cl
  4140eb:	inc    eax
  4140ec:	add    DWORD PTR [ecx+ecx*1],ebp
  4140ef:	add    BYTE PTR [edx],ah
  4140f1:	add    al,0x48
  4140f3:	adc    DWORD PTR [eax+0x64],ecx
  4140f6:	inc    edx
  4140f7:	cmp    BYTE PTR [edx+eax*1],0xb8
  4140fb:	adc    BYTE PTR [eax],dh
  4140fd:	add    BYTE PTR [ecx],cl
  4140ff:	mov    eax,0x46420480
  414104:	shl    BYTE PTR [eax+0x7],cl
  414107:	popa   
  414108:	add    DWORD PTR [edx+0x43],edi
  41410b:	dec    esp
  41410c:	adc    BYTE PTR [ecx],ah
  41410e:	push   eax
  41410f:	or     DWORD PTR [esp+eax*4+0x5],eax
  414113:	inc    esi
  414114:	xchg   edx,eax
  414115:	adc    al,0x10
  414117:	rol    BYTE PTR [eax],1
  414119:	mov    WORD PTR [eax],es
  41411b:	and    BYTE PTR [ecx],al
  41411d:	add    BYTE PTR [ecx+0x2c410002],0x9
  414124:	inc    esi
  414125:	add    DWORD PTR [edx],eax
  414127:	and    BYTE PTR [edx],al
  414129:	pop    es
  41412a:	aad    0x20
  41412c:	and    BYTE PTR [esi+eax*2],cl
  41412f:	adc    al,0x90
  414131:	add    esp,esp
  414133:	mov    al,0x8
  414135:	jge    0x414137
  414137:	add    eax,0x82028048
  41413c:	sbb    DWORD PTR [edx+ebx*4],esp
  41413f:	inc    esp
  414140:	xchg   ebx,eax
  414141:	xor    al,BYTE PTR [ebx]
  414143:	push   esp
  414144:	enter  0x8920,0x41
  414148:	mov    DWORD PTR [eax+0x39060618],eax
  41414e:	mov    ds:0x42271201,eax
  414153:	dec    eax
  414154:	add    ch,BYTE PTR [eax]
  414156:	add    BYTE PTR [edx],bl
  414158:	inc    edx
  414159:	and    ecx,DWORD PTR [ecx]
  41415b:	adc    al,0x87
  41415d:	add    BYTE PTR [eax],al
  41415f:	add    al,BYTE PTR [ebx+0x1620409]
  414165:	and    ebx,DWORD PTR es:[ecx+0x30]
  414169:	add    DWORD PTR [esi-0x80],eax
  41416c:	add    BYTE PTR [eax],ah
  41416e:	adc    al,0xb0
  414170:	xor    BYTE PTR [eax],al
  414172:	add    BYTE PTR [eax],ah
  414174:	xor    al,0x18
  414176:	rol    DWORD PTR [eax],0xa8
  414179:	add    al,BYTE PTR [edi+0x42182067]
  41417f:	inc    eax
  414180:	add    BYTE PTR [eax+edx*2],al
  414183:	xchg   ecx,eax
  414184:	add    al,BYTE PTR [ecx]
  414186:	inc    ebx
  414187:	add    BYTE PTR [edx],0x4
  41418a:	sub    al,0x15
  41418c:	push   es
  41418d:	sbb    DWORD PTR [eax],0xa90c
  414193:	inc    eax
  414194:	ret    0x4800
  414197:	adc    cl,BYTE PTR [eax+ecx*2-0x76c7eab8]
  41419e:	clc    
  41419f:	and    eax,0x66400048
  4141a4:	add    BYTE PTR [edx+0x34608174],cl
  4141aa:	ror    BYTE PTR [ecx+0x22],0x0
  4141ae:	xchg   BYTE PTR [eax+eax*4],al
  4141b1:	pusha  
  4141b2:	and    BYTE PTR [eax],dh
  4141b4:	mov    al,ds:0x22a00022
  4141b9:	and    al,0x8
  4141bb:	adc    eax,0x1001c09
  4141c0:	add    al,0x0
  4141c2:	and    DWORD PTR [ebp+0x5c000081],eax
  4141c8:	adc    ecx,DWORD PTR [eax-0x74]
  4141cb:	jo     0x414201
  4141cd:	add    BYTE PTR [edx],cl
  4141cf:	nop
  4141d0:	nop
  4141d1:	or     BYTE PTR [edx*1+0x210],bl
  4141d8:	and    DWORD PTR [eax-0x58],esp
  4141db:	adc    BYTE PTR [esi],al
  4141dd:	add    edx,DWORD PTR [eax]
  4141df:	add    BYTE PTR ds:0x20628001,cl
  4141e5:	push   es
  4141e6:	xor    BYTE PTR [eax],dl
  4141e8:	dec    eax
  4141e9:	adc    DWORD PTR [edx],ecx
  4141eb:	ret    0x2244
  4141ee:	mov    al,ds:0x14110e20
  4141f3:	sbb    eax,DWORD PTR [eax]
  4141f5:	or     BYTE PTR [eax],0x0
  4141f8:	mov    ds:0xa30d200c,eax
  4141fd:	ret    
  4141fe:	or     BYTE PTR [eax+0x2d210610],ah
  414204:	add    BYTE PTR [edx],al
  414206:	or     BYTE PTR [eax],al
  414208:	push   esp
  414209:	and    BYTE PTR [eax-0x80],al
  41420c:	inc    eax
  41420d:	and    DWORD PTR [eax+0x48],edx
  414210:	xor    DWORD PTR [edi],eax
  414212:	adc    DWORD PTR [edx],eax
  414214:	adc    BYTE PTR [eax],ch
  414216:	adc    BYTE PTR [eax-0x7f55fee0],al
  41421c:	add    BYTE PTR [eax],0x4
  41421f:	and    DWORD PTR [eax-0x7f3ffe00],edx
  414225:	add    BYTE PTR [eax],cl
  414227:	or     al,0x0
  414229:	ss adc al,0x41
  41422c:	push   ds
  41422d:	add    BYTE PTR [edx],ah
  41422f:	scas   al,BYTE PTR es:[edi]
  414230:	add    BYTE PTR [ecx],al
  414232:	adc    BYTE PTR [eax+eax*1+0x3],0xa0
  414237:	adc    eax,DWORD PTR [eax+0x61]
  41423a:	inc    edx
  41423b:	inc    ebx
  41423c:	add    ch,BYTE PTR [edx+eax*2-0x6eff95e8]
  414243:	nop
  414244:	rol    DWORD PTR [edx],cl
  414246:	adc    BYTE PTR [eax],al
  414248:	adc    eax,DWORD PTR ds:0x8462005
  41424e:	add    ah,BYTE PTR [esi]
  414250:	xor    BYTE PTR [edx+0x10],bl
  414253:	pusha  
  414254:	mov    al,ds:0xa0442a21
  414259:	and    BYTE PTR [eax+0x622441],bl
  41425f:	push   es
  414260:	shl    DWORD PTR [edx],cl
  414262:	and    BYTE PTR [eax],cl
  414264:	inc    edi
  414265:	add    BYTE PTR [edx],dl
  414267:	push   esp
  414268:	push   eax
  414269:	dec    eax
  41426a:	or     ah,BYTE PTR [edx]
  41426c:	xchg   esp,eax
  41426d:	add    al,BYTE PTR [eax+0x2090cb80]
  414273:	or     DWORD PTR [eax],eax
  414275:	loope  0x41429a
  414277:	adc    DWORD PTR [ebx],eax
  414279:	sub    BYTE PTR [esi-0x5e],dl
  41427c:	add    al,0x16
  41427e:	mov    al,ds:0xa3c10281
  414283:	add    BYTE PTR [edx],dl
  414285:	xor    dl,al
  414287:	dec    edi
  414288:	nop
  414289:	inc    eax
  41428a:	add    al,BYTE PTR [eax-0x78]
  41428d:	and    al,BYTE PTR [eax]
  41428f:	and    ecx,DWORD PTR [esi]
  414291:	inc    esp
  414292:	add    al,al
  414294:	xor    BYTE PTR [esi+0x4],0x10
  414298:	pop    es
  414299:	add    al,0x10
  41429b:	leave  
  41429c:	sub    DWORD PTR [eax],eax
  41429e:	xor    BYTE PTR [ecx-0x3bcef9ef],al
  4142a4:	loop   0x4142aa
  4142a6:	or     BYTE PTR [eax],al
  4142a8:	test   al,0x18
  4142aa:	xor    ch,BYTE PTR [eax]
  4142ac:	add    BYTE PTR [edx-0x77ffeffc],cl
  4142b2:	jo     0x4142fa
  4142b4:	mov    DWORD PTR es:[edx],eax
  4142b7:	sub    BYTE PTR ds:0xa2c10a44,0x80
  4142be:	push   eax
  4142bf:	test   BYTE PTR [ecx],al
  4142c1:	add    BYTE PTR [eax+0x20],ah
  4142c4:	adc    dl,al
  4142c6:	add    DWORD PTR [eax],eax
  4142c8:	or     dl,BYTE PTR [eax]
  4142ca:	and    BYTE PTR [ecx*8+0xc4748c1],al
  4142d1:	add    DWORD PTR [eax+eax*4],eax
  4142d4:	and    cl,BYTE PTR [ebx]
  4142d6:	xchg   ecx,eax
  4142d7:	add    BYTE PTR [eax+0x44],cl
  4142da:	(bad)  
  4142db:	mov    DWORD PTR [ecx],ecx
  4142dd:	add    al,BYTE PTR [eax]
  4142df:	or     BYTE PTR [ebx+0x0],dl
  4142e2:	test   BYTE PTR [edx+eax*1],dl
  4142e5:	add    DWORD PTR [ebp-0x775e8778],0x21121025
  4142ef:	cmp    BYTE PTR [ebx],ah
  4142f1:	add    BYTE PTR [ecx-0x73],ah
  4142f4:	leave  
  4142f5:	or     DWORD PTR [eax+0x309ab2],esp
  4142fb:	test   DWORD PTR [edx+eax*2+0x44],eax
  4142ff:	add    BYTE PTR [eax],0x57
  414302:	dec    edx
  414303:	inc    esp
  414304:	and    al,BYTE PTR [eax]
  414306:	push   es
  414307:	mov    BYTE PTR [eax],al
  414309:	ret    0x6030
  41430c:	add    edx,DWORD PTR [eax]
  41430e:	add    ecx,edx
  414310:	inc    edx
  414311:	xchg   ecx,eax
  414312:	std    
  414313:	or     BYTE PTR [edi+0x7],dl
  414316:	pushf  
  414317:	inc    ebp
  414318:	sbb    al,0x32
  41431a:	in     al,0x24
  41431c:	or     al,0x1e
  41431e:	add    DWORD PTR [ebx-0x7e],edx
  414321:	and    BYTE PTR [edx],ah
  414323:	rcr    BYTE PTR [eax],0x44
  414326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414327:	and    BYTE PTR [edx+eiz*2],al
  41432a:	add    dl,bl
  41432c:	or     al,0x82
  41432e:	sbb    al,0x48
  414330:	adc    BYTE PTR [eax+0x5],al
  414333:	xor    al,BYTE PTR [ecx-0x5d7f6ba0]
  414339:	add    BYTE PTR [eax-0x37b6efbe],ah
  41433f:	adc    BYTE PTR [eax],ah
  414341:	add    al,cl
  414343:	or     eax,0x42000a20
  414348:	adc    DWORD PTR [ecx+0x0],ecx
  41434b:	mov    BYTE PTR [ecx+0x3e28004],bl
  414351:	xor    BYTE PTR [eax],dh
  414353:	adc    DWORD PTR fs:[eax],edx
  414356:	xchg   ebp,eax
  414357:	add    DWORD PTR [eax+0x0],esp
  41435a:	jo     0x414366
  41435c:	add    DWORD PTR [eax],eax
  41435e:	mov    cl,BYTE PTR [eax]
  414360:	inc    edx
  414361:	and    BYTE PTR [eax],al
  414363:	or     BYTE PTR [eax+0xc41b0db],bl
  414369:	sbb    BYTE PTR [eax+eax*4],cl
  41436c:	or     BYTE PTR [esi],dl
  41436e:	add    al,0x10
  414370:	add    al,0x40
  414372:	sub    BYTE PTR [ebx],dl
  414374:	and    DWORD PTR [eax],eax
  414376:	and    BYTE PTR [ecx],cl
  414378:	retf   0x2208
  41437b:	mov    al,0x2
  41437d:	inc    eax
  41437e:	add    BYTE PTR [esp+edx*4],bl
  414381:	(bad)  
  414382:	mov    bl,BYTE PTR [ecx]
  414384:	add    eax,DWORD PTR [edx+0x2]
  414387:	(bad)  
  414388:	or     BYTE PTR [edx+edx*1],al
  41438b:	pop    ebx
  41438c:	add    BYTE PTR [eax+0x28],dh
  41438f:	add    DWORD PTR [ebx+0x13],0x4688c080
  414396:	sub    BYTE PTR [eax],0x81
  414399:	test   BYTE PTR [eax],cl
  41439b:	dec    eax
  41439c:	sbb    DWORD PTR [eax+0xb],esp
  41439f:	dec    eax
  4143a0:	add    DWORD PTR [edx-0x4f],eax
  4143a3:	adc    al,0x9
  4143a5:	pop    es
  4143a6:	add    al,BYTE PTR [eax]
  4143a8:	adc    BYTE PTR [eax+ebx*1],bl
  4143ab:	adc    eax,DWORD PTR [eax+0x2]
  4143ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143af:	dec    edx
  4143b0:	or     BYTE PTR [ecx+ecx*1+0x28],al
  4143b4:	rcr    BYTE PTR [eax],0x48
  4143b7:	and    dl,BYTE PTR [eax+eax*2]
  4143ba:	adc    BYTE PTR [edx],dl
  4143bc:	xor    DWORD PTR [edx+0x41002000],eax
  4143c2:	add    DWORD PTR [ecx],edx
  4143c4:	add    cl,BYTE PTR [eax]
  4143c6:	mov    ds:0x4085140,al
  4143cb:	inc    esp
  4143cc:	add    DWORD PTR [ebx],eax
  4143ce:	mov    ebp,DWORD PTR [eax]
  4143d0:	xor    DWORD PTR [edx-0x68],ebp
  4143d3:	adc    dl,BYTE PTR [edx]
  4143d5:	xor    al,0x80
  4143d7:	in     eax,0xe
  4143d9:	xor    BYTE PTR [eax],al
  4143db:	cwde   
  4143dc:	add    BYTE PTR [esi],dh
  4143de:	rol    ecx,0x33
  4143e1:	adc    al,0x4a
  4143e3:	adc    DWORD PTR [eax],esp
  4143e5:	adc    DWORD PTR [eax+eax*8],ebx
  4143e8:	lock or BYTE PTR [esi],al
  4143eb:	and    DWORD PTR [eax+0x2],eax
  4143ee:	and    al,0x6a
  4143f0:	add    BYTE PTR [esi],al
  4143f2:	add    DWORD PTR [eax],eax
  4143f4:	dec    ebp
  4143f5:	mov    WORD PTR [eax+eax*1],fs
  4143f8:	push   eax
  4143f9:	add    ah,BYTE PTR [eax+0x8040a0f]
  4143ff:	add    BYTE PTR [eax-0x38],al
  414402:	sub    al,0x2
  414404:	sub    al,0x44
  414406:	and    eax,eax
  414408:	bound  ecx,QWORD PTR [esp+eax*1]
  41440b:	mov    BYTE PTR [edx+0xe],cl
  41440e:	mov    al,ds:0x12008442
  414413:	sbb    BYTE PTR [eax],al
  414415:	add    dh,BYTE PTR [esi]
  414417:	add    BYTE PTR [ebx+0x24000f80],cl
  41441d:	add    al,BYTE PTR ds:0x22e04064
  414423:	test   DWORD PTR [eax],esp
  414425:	add    DWORD PTR [eax-0x7d756fb6],eax
  41442b:	mov    WORD PTR [edx],cs
  41442d:	and    al,BYTE PTR [eax]
  41442f:	stc    
  414430:	inc    ebx
  414431:	xor    cl,BYTE PTR [eax+0x0]
  414434:	add    BYTE PTR [ecx],0x8
  414437:	stos   BYTE PTR es:[edi],al
  414438:	mov    BYTE PTR [eax-0x7dfdf7e0],cl
  41443e:	inc    eax
  41443f:	push   ecx
  414440:	cdq    
  414441:	add    BYTE PTR [ebx-0x6f5eefe7],ah
  414447:	mov    edx,DWORD PTR [eiz*4+0x2000000]
  41444e:	sbb    BYTE PTR [eax-0x38d7ef40],cl
  414454:	and    ah,BYTE PTR [ecx]
  414456:	add    BYTE PTR [esi],cl
  414458:	push   cs
  414459:	add    BYTE PTR [ebx],al
  41445b:	add    al,al
  41445d:	push   ss
  41445e:	test   BYTE PTR [esi],ah
  414460:	inc    eax
  414461:	add    DWORD PTR [ecx],eax
  414463:	add    BYTE PTR [edx],al
  414465:	add    DWORD PTR [edx],esp
  414467:	int3   
  414468:	sub    BYTE PTR [eax+eiz*2+0x8430900],ah
  41446f:	and    ebp,DWORD PTR [eax]
  414471:	test   BYTE PTR [eax+0x3210a004],cl
  414477:	retf   
  414478:	xor    BYTE PTR [esi],0x80
  41447b:	add    BYTE PTR [edx+edx*1+0x191],dh
  414482:	add    eax,0x1a02d021
  414488:	and    DWORD PTR [eax-0x3ab26600],ebp
  41448e:	sub    BYTE PTR [eax],dh
  414490:	add    DWORD PTR [ecx],esp
  414492:	sbb    BYTE PTR [eax+eax*1+0x12480200],al
  414499:	or     DWORD PTR [eax+0x442b5000],ebp
  41449f:	and    ebx,esi
  4144a1:	pushf  
  4144a2:	test   BYTE PTR [eax],al
  4144a4:	dec    edx
  4144a5:	pusha  
  4144a6:	or     DWORD PTR [ecx],eax
  4144a8:	add    al,BYTE PTR [eax+0x60]
  4144ab:	add    BYTE PTR [edx],al
  4144ad:	adc    BYTE PTR [edx+0x48],ah
  4144b0:	push   ebp
  4144b1:	sbb    BYTE PTR [eax],0x9
  4144b4:	add    BYTE PTR [eax],cl
  4144b6:	jns    0x414518
  4144b8:	mov    BYTE PTR [eax+0xac0c420],dl
  4144be:	or     BYTE PTR [edx],al
  4144c0:	adc    eax,DWORD PTR [ecx]
  4144c2:	and    BYTE PTR [eax],ah
  4144c4:	add    al,BYTE PTR [eax]
  4144c6:	shl    DWORD PTR [eax],0x0
  4144c9:	add    cl,BYTE PTR [edx]
  4144cb:	add    DWORD PTR [edx+0x10],eax
  4144ce:	xor    BYTE PTR [eax],al
  4144d0:	xor    BYTE PTR [eax+0x2c021012],0x80
  4144d7:	or     BYTE PTR [eax],0x6
  4144da:	or     BYTE PTR [edx],0x5
  4144dd:	test   eax,0x240a204
  4144e2:	add    al,0x43
  4144e4:	mov    BYTE PTR [ebx+0x2c],ch
  4144e7:	and    al,0x80
  4144e9:	add    BYTE PTR [esi],0xa8
  4144ec:	or     al,0x20
  4144ee:	inc    edx
  4144ef:	xchg   ecx,eax
  4144f0:	dec    esp
  4144f1:	loopne 0x414509
  4144f3:	inc    eax
  4144f4:	and    cl,BYTE PTR [esi]
  4144f6:	push   es
  4144f7:	mov    eax,0xd00b0004
  4144fc:	or     DWORD PTR [eax],ecx
  4144fe:	inc    ebx
  4144ff:	adc    DWORD PTR [ecx+0x6],eax
  414502:	sbb    al,0x40
  414504:	inc    ecx
  414505:	xor    BYTE PTR [eax+0x0],dl
  414508:	sub    BYTE PTR [eax],dl
  41450a:	and    esp,DWORD PTR [eax+0x60]
  41450d:	or     al,0x41
  41450f:	adc    al,0x0
  414511:	dec    ecx
  414512:	adc    al,0x2
  414514:	push   es
  414515:	add    cl,BYTE PTR [eax-0x7fcf1fb]
  41451b:	add    BYTE PTR [ecx],al
  41451d:	push   es
  41451e:	add    BYTE PTR [ecx],al
  414520:	inc    eax
  414521:	add    al,BYTE PTR [ecx]
  414523:	and    BYTE PTR [ecx+0x22],dl
  414526:	push   esp
  414527:	inc    ecx
  414528:	push   eax
  414529:	adc    eax,0xb080998
  41452e:	add    al,0x22
  414530:	adc    BYTE PTR [eax],0x8d
  414533:	push   ebx
  414534:	adc    dl,BYTE PTR [eax]
  414536:	and    BYTE PTR [eax],cl
  414538:	or     BYTE PTR [eax],dl
  41453a:	mov    eax,ds:0x480a048
  41453f:	test   al,0xc9
  414541:	or     BYTE PTR [ebx+0x50],al
  414544:	lock or al,BYTE PTR [ecx+0x1]
  414548:	das    
  414549:	test   BYTE PTR [ebx],0x12
  41454c:	sub    al,0x8
  41454e:	inc    esp
  41454f:	inc    eax
  414550:	inc    ecx
  414551:	rcr    DWORD PTR [ecx],0x8
  414554:	add    al,BYTE PTR [ecx-0x5e7ffeff]
  41455a:	mov    DWORD PTR [ecx],eax
  41455c:	adc    al,0x0
  41455e:	nop
  41455f:	add    bl,BYTE PTR [ebx]
  414561:	adc    al,0x1
  414563:	rol    BYTE PTR [eax],0x10
  414566:	shl    BYTE PTR [eax],cl
  414568:	add    al,0x14
  41456a:	or     eax,DWORD PTR [ecx+0x4]
  41456d:	pusha  
  41456e:	or     edx,eax
  414570:	and    al,BYTE PTR [eax]
  414572:	add    DWORD PTR [edx],ecx
  414574:	ret    0x80c6
  414577:	popa   
  414578:	pop    edx
  414579:	sub    BYTE PTR [ecx],0x19
  41457c:	and    BYTE PTR [esi],0x1
  41457f:	or     ah,BYTE PTR [eax]
  414581:	add    DWORD PTR [eax],ecx
  414583:	add    DWORD PTR [edx],0x1520020
  414589:	pusha  
  41458a:	adc    DWORD PTR [edx+ebp*1],0x43201008
  414591:	inc    eax
  414592:	inc    ecx
  414593:	pusha  
  414594:	sub    BYTE PTR [eax-0x67f2f3de],al
  41459a:	mov    al,ds:0x420795a0
  41459f:	add    DWORD PTR [edx-0x7b0c2d90],0x11842076
  4145a9:	test   DWORD PTR [esi],esp
  4145ab:	xchg   eax,ebx
  4145ad:	add    BYTE PTR [edx],ch
  4145af:	sub    bl,BYTE PTR [edx]
  4145b1:	xchg   DWORD PTR [eax+eax*1],eax
  4145b4:	xchg   edx,eax
  4145b5:	adc    BYTE PTR [edx],al
  4145b7:	and    al,0x50
  4145b9:	add    esp,DWORD PTR [ecx-0x7c]
  4145bc:	rol    DWORD PTR [ecx],0x0
  4145bf:	pusha  
  4145c0:	add    DWORD PTR [eax],esi
  4145c2:	dec    eax
  4145c3:	inc    esp
  4145c4:	adc    BYTE PTR [eax],al
  4145c6:	or     cl,al
  4145c8:	add    BYTE PTR [eax],0x8
  4145cb:	push   eax
  4145cc:	add    BYTE PTR [ecx],al
  4145ce:	adc    BYTE PTR [eax],dl
  4145d0:	add    DWORD PTR [eax+eax*4],eax
  4145d3:	add    al,0x1
  4145d5:	xchg   ecx,eax
  4145d6:	scas   al,BYTE PTR es:[edi]
  4145d7:	sbb    BYTE PTR [eax+0x40210810],dl
  4145dd:	add    al,BYTE PTR [ecx]
  4145df:	and    dh,BYTE PTR [eax+0x829]
  4145e5:	and    dl,BYTE PTR [esp+eax*1-0x7b]
  4145e9:	dec    eax
  4145ea:	push   es
  4145eb:	adc    BYTE PTR [edx],cl
  4145ed:	dec    edx
  4145ee:	adc    al,0x0
  4145f0:	push   0x21424506
  4145f5:	add    BYTE PTR [eax+0x4a4a188],dl
  4145fb:	and    cl,bl
  4145fd:	push   ebx
  4145fe:	or     dh,BYTE PTR [eax]
  414600:	xor    al,0x40
  414602:	add    DWORD PTR [eax+0x10],esp
  414605:	add    eax,0x9c08a88
  41460a:	or     BYTE PTR [eax+eax*4],dl
  41460d:	and    BYTE PTR [eax],ah
  41460f:	adc    esp,DWORD PTR [eax+0x33]
  414612:	nop
  414613:	and    al,0x30
  414615:	add    bl,BYTE PTR [eax+ecx*1]
  414618:	push   ds
  414619:	add    BYTE PTR [eax],0x24
  41461c:	xchg   BYTE PTR [ecx-0x50],al
  41461f:	and    BYTE PTR [edx+0x3],dh
  414622:	add    al,0x20
  414624:	push   cs
  414625:	adc    al,0x46
  414628:	and    BYTE PTR ds:0x74023094,al
  41462e:	dec    eax
  41462f:	pusha  
  414630:	adc    al,ah
  414632:	and    eax,DWORD PTR fs:[esi]
  414635:	ror    BYTE PTR [ebx],0xb3
  414638:	add    BYTE PTR [eax+0x480100e4],al
  41463e:	and    eax,DWORD PTR [ecx+0x41]
  414641:	sbb    DWORD PTR [edx],eax
  414643:	add    BYTE PTR [edx-0x58],0x0
  414647:	or     BYTE PTR [eax],dl
  414649:	or     BYTE PTR [edx],al
  41464b:	add    BYTE PTR fs:[eax+eax*8+0x9],al
  414650:	pop    ss
  414651:	add    eax,DWORD PTR [eax]
  414653:	inc    eax
  414654:	push   ss
  414655:	push   ecx
  414656:	and    BYTE PTR [ecx],dh
  414658:	mov    BYTE PTR [eax],dh
  41465a:	loop   0x4145f0
  41465c:	pusha  
  41465d:	dec    esi
  41465e:	push   es
  41465f:	add    BYTE PTR [esi-0x7e],0x2
  414663:	add    DWORD PTR [ecx+0x181d3542],edx
  414669:	sbb    BYTE PTR [esi],al
  41466b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41466c:	sub    al,BYTE PTR [eax]
  41466e:	or     al,0x80
  414670:	int3   
  414671:	or     bl,bl
  414673:	mov    al,ds:0x80820241
  414678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414679:	inc    ebp
  41467a:	xor    al,BYTE PTR [eax]
  41467c:	add    DWORD PTR [esi],0xffffff82
  41467f:	inc    ecx
  414680:	add    BYTE PTR [esi],dl
  414682:	adc    BYTE PTR [ebx],al
  414684:	inc    ebx
  414685:	sub    BYTE PTR [eax],al
  414687:	add    eax,0x44440496
  41468c:	add    BYTE PTR [eax],cl
  41468e:	sub    eax,DWORD PTR [edx]
  414690:	push   eax
  414691:	add    BYTE PTR [ecx],ah
  414693:	and    BYTE PTR [ecx],ch
  414695:	popa   
  414696:	test   al,0x26
  414698:	or     BYTE PTR [edx],bl
  41469a:	add    al,BYTE PTR [ebp+0x2a]
  41469d:	adc    BYTE PTR [eax],ah
  41469f:	adc    ebp,DWORD PTR [eax+0x2]
  4146a2:	adc    BYTE PTR [edx+0x40],dl
  4146a5:	push   ss
  4146a6:	or     BYTE PTR [eax],dl
  4146a8:	sub    dl,BYTE PTR [eax]
  4146aa:	inc    esi
  4146ab:	and    al,0x1
  4146ad:	adc    BYTE PTR [esi-0x7a],al
  4146b0:	adc    BYTE PTR ds:0x68683266,dl
  4146b6:	pop    es
  4146b7:	mov    BYTE PTR [ebx],al
  4146b9:	add    BYTE PTR [eax+0x360305],ah
  4146bf:	add    BYTE PTR [ecx+0x602b025],ah
  4146c5:	and    DWORD PTR [ebp+0x42],ecx
  4146c8:	add    BYTE PTR [ecx],dl
  4146ca:	add    BYTE PTR [ecx],cl
  4146cc:	and    DWORD PTR [eax],0x502100
  4146d2:	add    DWORD PTR ds:0xb60815ff,eax
  4146d8:	inc    ebx
  4146d9:	add    BYTE PTR [edx+0x0],ah
  4146dc:	and    DWORD PTR [ecx],eax
  4146de:	or     ebx,DWORD PTR [eax+0x68906a0]
  4146e4:	and    BYTE PTR [eax],dl
  4146e6:	add    BYTE PTR [eax-0x6d2bcfef],al
  4146ec:	adc    BYTE PTR [eax+0x30],dh
  4146ef:	push   ss
  4146f0:	xchg   ecx,eax
  4146f1:	dec    eax
  4146f2:	add    BYTE PTR [eax],al
  4146f4:	xor    BYTE PTR [eax-0x7a],al
  4146f7:	add    BYTE PTR [ebx],al
  4146f9:	xor    BYTE PTR [esi+0x11],cl
  4146fc:	add    BYTE PTR [ebx+0x43],bh
  4146ff:	or     BYTE PTR [ebx],0x1
  414702:	ret    
  414703:	add    DWORD PTR [eax],0x2052144
  414709:	add    cl,BYTE PTR [edx]
  41470b:	add    BYTE PTR [eax],ah
  41470d:	add    DWORD PTR [edx],edx
  41470f:	adc    BYTE PTR [eax],ah
  414711:	sbb    edx,DWORD PTR [ebx+0x0]
  414714:	mov    dl,BYTE PTR [eax]
  414716:	or     eax,0x62063108
  41471b:	sbb    BYTE PTR [eax],ah
  41471d:	ret    
  41471e:	and    BYTE PTR [edx],al
  414720:	loopne 0x4146ee
  414722:	ins    BYTE PTR es:[edi],dx
  414723:	or     al,0x19
  414725:	add    cl,BYTE PTR [ebx+0x68]
  414728:	popa   
  414729:	and    BYTE PTR [ecx+0x70],bl
  41472c:	mov    bl,BYTE PTR [ebx+eax*1+0x290c0124]
  414733:	dec    eax
  414734:	loop   0x41473e
  414736:	arpl   WORD PTR [ebp+0x10],ax
  414739:	push   es
  41473a:	les    eax,FWORD PTR ds:0x1369696
  414740:	add    BYTE PTR [eax+0x1],dh
  414743:	test   edx,eax
  414745:	add    al,BYTE PTR [eax]
  414747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414748:	and    BYTE PTR ds:0xba6081,ah
  41474e:	loop   0x414758
  414750:	add    BYTE PTR ds:0x8231472e,dl
  414756:	add    al,BYTE PTR [esi]
  414758:	nop
  414759:	hlt    
  41475a:	add    BYTE PTR [eax],ch
  41475c:	adc    BYTE PTR ds:0x82080208,al
  414762:	and    edx,DWORD PTR [ecx]
  414764:	add    DWORD PTR [ecx],edi
  414766:	add    al,0x42
  414768:	push   ebx
  414769:	daa    
  41476a:	add    bh,BYTE PTR [eax-0x54]
  41476d:	push   es
  41476e:	add    eax,0x1e020603
  414773:	push   cs
  414774:	or     BYTE PTR [eax+0x40018b47],al
  41477a:	adc    ebx,DWORD PTR [eax+0x19100c45]
  414780:	add    BYTE PTR [eax-0x80],0x10
  414784:	add    BYTE PTR [eax+0x5122b082],ah
  41478a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41478b:	adc    eax,0x970c030
  414790:	push   eax
  414791:	add    BYTE PTR [eax],al
  414793:	or     eax,0x30088410
  414798:	xor    DWORD PTR [edx+0x28],eax
  41479b:	inc    ecx
  41479c:	push   0x15d0e20
  4147a1:	push   es
  4147a2:	jo     0x4147a4
  4147a4:	add    DWORD PTR [ecx+eax*2],edx
  4147a7:	sub    BYTE PTR [esi],al
  4147a9:	adc    al,0x48
  4147ab:	or     ebp,ebx
  4147ad:	cmp    BYTE PTR [ebx],al
  4147af:	push   esp
  4147b0:	cwde   
  4147b1:	adc    dl,BYTE PTR [ebp+0x21290401]
  4147b7:	xor    DWORD PTR [eax],edx
  4147b9:	mov    WORD PTR [eax],fs
  4147bb:	or     DWORD PTR [eax],ecx
  4147bd:	push   ss
  4147be:	and    DWORD PTR [eax*1-0x76fd7b70],ecx
  4147c5:	dec    edx
  4147c6:	mov    BYTE PTR [ecx+eax*1],bl
  4147c9:	mov    al,BYTE PTR [eax]
  4147cb:	(bad)
  4147cf:	sbb    ecx,DWORD PTR [eax+0x404650]
  4147d5:	stos   BYTE PTR es:[edi],al
  4147d6:	xchg   esp,eax
  4147d7:	push   ebp
  4147d8:	lea    ebx,[edx+ecx*1]
  4147db:	or     al,0x8c
  4147dd:	inc    ebx
  4147de:	xor    al,0xc
  4147e0:	add    ebp,DWORD PTR [ecx]
  4147e2:	add    al,al
  4147e4:	les    edx,FWORD PTR [eax]
  4147e6:	inc    eax
  4147e7:	adc    eax,0xd0006004
  4147ec:	add    al,0x22
  4147ee:	cwde   
  4147ef:	add    al,0x1b
  4147f1:	inc    eax
  4147f2:	dec    eax
  4147f3:	sbb    al,BYTE PTR [ecx]
  4147f5:	add    eax,0x18914001
  4147fa:	dec    esp
  4147fb:	mov    al,ds:0x48010051
  414800:	push   es
  414801:	mov    ds:0x6814ca14,al
  414806:	sub    BYTE PTR [ecx+0x4],ch
  414809:	or     DWORD PTR [ecx+0x33411232],edx
  41480f:	add    al,BYTE PTR [edx]
  414811:	dec    edi
  414812:	push   es
  414813:	inc    esp
  414814:	sbb    al,BYTE PTR [edx+eax*1+0x10]
  414818:	xor    al,0xa0
  41481a:	inc    eax
  41481b:	add    eax,0x9930308
  414820:	add    BYTE PTR [eax],ah
  414822:	test   DWORD PTR [ecx],ebp
  414824:	inc    eax
  414825:	or     DWORD PTR [eax],ecx
  414827:	xchg   edx,eax
  414828:	add    DWORD PTR [esp+esi*1],eax
  41482b:	mov    al,BYTE PTR [eax+0x608522c1]
  414831:	mov    edi,0x42093409
  414836:	add    BYTE PTR [eax],dl
  414838:	adc    al,0xa2
  41483a:	and    DWORD PTR [eax],esp
  41483c:	retf   0xb088
  41483f:	add    eax,eax
  414841:	add    BYTE PTR [eax-0x4a],al
  414844:	xchg   ecx,eax
  414845:	rol    BYTE PTR [esi],0x21
  414848:	inc    esp
  414849:	add    DWORD PTR [ebx+eiz*4],eax
  41484c:	add    BYTE PTR [edx+0x2],al
  41484f:	add    al,0x18
  414851:	push   ss
  414852:	add    DWORD PTR [ecx+eiz*1+0x6c],esp
  414856:	or     DWORD PTR [ecx+0xd],ecx
  414859:	je     0x41481b
  41485b:	add    DWORD PTR [eax],eax
  41485d:	inc    eax
  41485e:	add    eax,0xc061618
  414863:	add    al,0x5
  414865:	add    al,0x1
  414867:	adc    BYTE PTR [eax+0x4239840],dl
  41486d:	sub    BYTE PTR [ecx],al
  41486f:	add    al,BYTE PTR [eax+0x50]
  414872:	add    BYTE PTR [eax+0x5],dl
  414875:	adc    BYTE PTR [eax-0x17eff6f3],dl
  41487b:	xor    al,0x44
  41487d:	mov    DWORD PTR fs:[eax],edx
  414880:	add    BYTE PTR [esi],cl
  414882:	add    al,0x8
  414884:	add    DWORD PTR ds:[ecx],edx
  414887:	add    bl,BYTE PTR [edx]
  414889:	mov    BYTE PTR [edx],al
  41488b:	xchg   ebx,eax
  41488c:	rcr    BYTE PTR [edx],0xe0
  41488f:	and    BYTE PTR [eax],al
  414891:	inc    eax
  414892:	add    BYTE PTR [eax],0x41
  414895:	or     DWORD PTR [eax+0x54101001],eax
  41489b:	add    BYTE PTR [eax-0x3b29fdfd],dl
  4148a1:	adc    DWORD PTR [eax+0x21708a08],eax
  4148a7:	and    BYTE PTR [eax],al
  4148a9:	nop
  4148aa:	push   eax
  4148ab:	add    BYTE PTR [edx+ecx*1+0x205],cl
  4148b2:	or     BYTE PTR [edx],ch
  4148b4:	dec    esp
  4148b5:	add    BYTE PTR [eax+0x4a803084],ah
  4148bb:	sub    BYTE PTR [eax],al
  4148bd:	ret    0xb18a
  4148c0:	sbb    DWORD PTR [esp+edx*1],edx
  4148c3:	rcl    DWORD PTR [eax],0xa8
  4148c6:	add    BYTE PTR [eax-0x37e7e7ac],al
  4148cc:	push   es
  4148cd:	adc    BYTE PTR [eax],cl
  4148cf:	and    eax,0x104000
  4148d4:	add    BYTE PTR [eax],al
  4148d6:	popa   
  4148d7:	jno    0x4148da
  4148d9:	add    BYTE PTR [eax+ecx*1+0x48],ah
  4148dd:	sub    BYTE PTR [ecx],ah
  4148df:	add    BYTE PTR [eax],al
  4148e1:	adc    BYTE PTR [eax+0x41],al
  4148e4:	popa   
  4148e5:	and    ch,BYTE PTR [eax]
  4148e7:	or     BYTE PTR [ebp-0x7efbbfc0],al
  4148ed:	inc    ecx
  4148ee:	test   BYTE PTR [eax],al
  4148f0:	hlt    
  4148f1:	xchg   ecx,eax
  4148f2:	or     BYTE PTR [eax],cl
  4148f4:	xor    bh,BYTE PTR [ebx-0x74]
  4148f7:	loopne 0x414879
  4148f9:	ret    0x2200
  4148fc:	xchg   esp,eax
  4148fd:	add    DWORD PTR [eax],0x20a6b10
  414903:	inc    edx
  414904:	add    al,0x36
  414906:	add    BYTE PTR [eax+0x34],0x20
  41490a:	and    DWORD PTR [edi],eax
  41490c:	and    al,0x83
  41490e:	mov    eax,ds:0xa0004089
  414913:	add    DWORD PTR [eax],esp
  414915:	test   eax,0x8024020
  41491a:	dec    eax
  41491b:	inc    eax
  41491c:	sbb    BYTE PTR [eax],al
  41491e:	dec    edx
  41491f:	add    BYTE PTR [eax-0x73ebbfa0],al
  414925:	add    al,0x80
  414927:	sbb    ebp,DWORD PTR [eax+ebx*8]
  41492a:	adc    BYTE PTR [ebp+0x31],al
  41492d:	xchg   BYTE PTR [eax+0x8082204],al
  414933:	push   ebp
  414934:	add    BYTE PTR [edx],al
  414936:	dec    eax
  414937:	test   BYTE PTR [eax],ah
  414939:	adc    DWORD PTR [ebx],0x0
  41493c:	xor    al,0xc0
  41493e:	add    dl,al
  414940:	gs add al,0x50
  414943:	and    al,BYTE PTR [esi]
  414945:	and    al,BYTE PTR [ebx]
  414947:	inc    edx
  414948:	pusha  
  414949:	push   0x38414846
  41494e:	mov    BYTE PTR [eax],al
  414950:	and    DWORD PTR [eax+0x4104],0x59
  414957:	or     BYTE PTR [eax],ch
  414959:	add    al,BYTE PTR [eax+eax*4]
  41495c:	add    BYTE PTR [eax+0x30004038],cl
  414962:	add    cl,dl
  414964:	rcr    DWORD PTR [ebx],0x20
  414967:	add    BYTE PTR ss:[edi],al
  41496a:	or     BYTE PTR [ecx],ch
  41496c:	aam    0x81
  41496e:	adc    eax,0x50282100
  414973:	test   DWORD PTR [edx+0x14],eax
  414976:	add    BYTE PTR [ecx+0x40],0xf8
  41497a:	add    al,0x2
  41497c:	rol    BYTE PTR [edx+edx*1],0x68
  414980:	rcr    DWORD PTR [eax+0x1],0x80
  414984:	or     al,0x48
  414986:	push   esi
  414987:	add    BYTE PTR [esi],al
  414989:	push   cs
  41498a:	sbb    BYTE PTR [edx+eax*2-0x2fffb71f],dl
  414991:	xchg   ebx,eax
  414992:	inc    ecx
  414993:	inc    ebx
  414994:	cmp    al,0xe
  414996:	stc    
  414997:	adc    BYTE PTR [ecx],al
  414999:	adc    DWORD PTR [edx],ecx
  41499b:	inc    ebp
  41499c:	add    ah,BYTE PTR [eax+0x8]
  41499f:	and    BYTE PTR [eax-0x40],0x41
  4149a3:	add    al,0xa
  4149a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a6:	add    BYTE PTR [eax+0x28],al
  4149a9:	les    edx,FWORD PTR [eax]
  4149ab:	add    DWORD PTR [ecx+0x78003580],0x40
  4149b2:	add    BYTE PTR [edx],al
  4149b4:	xchg   BYTE PTR [eax],dl
  4149b6:	adc    al,0x0
  4149b8:	adc    al,0x84
  4149ba:	inc    esp
  4149bb:	add    BYTE PTR [eax+ecx*1],al
  4149be:	inc    ecx
  4149bf:	xchg   edx,eax
  4149c0:	sbb    ah,BYTE PTR [eax]
  4149c2:	inc    eax
  4149c3:	adc    al,BYTE PTR [eax+0x20005450]
  4149c9:	adc    BYTE PTR [eax],0x0
  4149cc:	xchg   esp,eax
  4149cd:	or     eax,0x489021a
  4149d2:	popa   
  4149d3:	jp     0x414995
  4149d5:	add    al,BYTE PTR [eax]
  4149d7:	adc    DWORD PTR [ecx+0x0],esp
  4149da:	push   ds
  4149db:	add    DWORD PTR [eax],eax
  4149dd:	add    ecx,ebp
  4149df:	add    BYTE PTR [eax],al
  4149e1:	sbb    eax,0x8c20a60
  4149e6:	adc    BYTE PTR [esi],cl
  4149e8:	xor    al,0x80
  4149ea:	sbb    BYTE PTR [ebx-0x767edd70],ch
  4149f0:	mov    BYTE PTR [eax+0x28],ah
  4149f3:	add    DWORD PTR [edx+0x17160019],ebx
  4149f9:	adc    BYTE PTR [eax+0x21],al
  4149fc:	add    BYTE PTR [eax-0x7e],al
  4149ff:	push   cs
  414a00:	mov    al,bl
  414a02:	add    dl,BYTE PTR [eax+0xc2b6192]
  414a08:	and    BYTE PTR [eax+0x4],dl
  414a0b:	or     al,0x24
  414a0d:	add    BYTE PTR [eax+0x0],al
  414a10:	cdq    
  414a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a12:	inc    BYTE PTR [ecx-0x58]
  414a15:	ror    DWORD PTR [eax],0x84
  414a18:	bound  edx,QWORD PTR [edx+ebx*1]
  414a1b:	add    BYTE PTR [edx],ah
  414a1d:	and    BYTE PTR [eax+0x15012900],cl
  414a23:	adc    ecx,DWORD PTR [ecx]
  414a25:	and    BYTE PTR [eax+ebx*4+0x8],al
  414a29:	or     BYTE PTR [eax-0x6f39f1df],al
  414a2f:	push   ecx
  414a30:	add    DWORD PTR [eax],eax
  414a32:	cwde   
  414a33:	jo     0x414a95
  414a35:	or     al,0x0
  414a37:	inc    eax
  414a38:	push   eax
  414a39:	adc    ecx,DWORD PTR [ecx+0x2608924a]
  414a3f:	inc    eax
  414a40:	push   es
  414a41:	or     ah,BYTE PTR [ecx]
  414a43:	push   cs
  414a44:	pusha  
  414a45:	add    DWORD PTR [eax+edx*2],eax
  414a48:	add    al,0x1c
  414a4a:	or     al,0x88
  414a4c:	add    al,0x10
  414a4e:	mov    BYTE PTR [eax],bl
  414a50:	or     DWORD PTR [ebx-0x6c],ecx
  414a53:	sbb    BYTE PTR [ebx+eax*1+0x41],al
  414a57:	bound  eax,QWORD PTR [eax]
  414a59:	xchg   edx,eax
  414a5a:	rol    BYTE PTR [eax+0x58],0x14
  414a5e:	adc    DWORD PTR [eax+0x60],ecx
  414a61:	and    al,0x0
  414a63:	push   eax
  414a64:	adc    esp,DWORD PTR [edx-0x58]
  414a67:	sbb    al,BYTE PTR [eax+0x29022406]
  414a6d:	add    BYTE PTR [eax+0x1226010],dl
  414a73:	and    DWORD PTR [edx],ecx
  414a75:	adc    BYTE PTR [eax+0x36],ah
  414a78:	adc    eax,0x220100
  414a7d:	or     BYTE PTR [esi],ah
  414a7f:	xor    DWORD PTR [eax],esi
  414a81:	add    BYTE PTR [eax],al
  414a83:	adc    BYTE PTR [eax],ah
  414a85:	shl    BYTE PTR [eax+0x229020e2],0x16
  414a8c:	xor    BYTE PTR [ecx+0x10],bl
  414a8f:	and    al,BYTE PTR [edx-0x7e]
  414a92:	add    al,ah
  414a94:	adc    BYTE PTR [eax],al
  414a96:	and    BYTE PTR [ecx+0x50081304],al
  414a9c:	add    BYTE PTR [ecx+eax*1+0x30],dl
  414aa0:	adc    eax,DWORD PTR [eax+0x71801405]
  414aa6:	test   DWORD PTR [ecx+0xa42108],eax
  414aac:	pusha  
  414aad:	dec    eax
  414aae:	cmp    DWORD PTR [eax+0xa],ecx
  414ab1:	or     DWORD PTR [ecx],eax
  414ab3:	push   eax
  414ab4:	dec    esi
  414ab5:	rol    BYTE PTR [edx-0x55efedf4],0xc1
  414abc:	cwde   
  414abd:	sbb    al,0x1
  414abf:	add    BYTE PTR ds:0x400,dl
  414ac5:	push   ecx
  414ac6:	mov    al,ds:0x6a08008c
  414acb:	push   esp
  414acc:	add    BYTE PTR [esi+edx*1+0x78004434],dl
  414ad3:	and    BYTE PTR [eax],cl
  414ad5:	aam    0x4
  414ad7:	add    al,0x80
  414ad9:	dec    ecx
  414ada:	push   esp
  414adb:	add    al,0xc2
  414add:	add    eax,0x9c02e004
  414ae2:	add    DWORD PTR ds:0x80240806,eax
  414ae8:	xor    cl,BYTE PTR [eax]
  414aea:	mov    ds:0x190ac861,al
  414aef:	add    BYTE PTR [eax],0x80
  414af2:	add    eax,0x20806a84
  414af7:	or     DWORD PTR [edi+eax*1],esp
  414afa:	test   BYTE PTR [ebp+0x5100dac1],al
  414b00:	inc    eax
  414b01:	xor    dl,BYTE PTR [eax+eax*8]
  414b04:	sub    BYTE PTR [ecx+esi*1+0x4025220],dh
  414b0b:	cdq    
  414b0c:	fcom   DWORD PTR ds:0x14204a30
  414b12:	sub    DWORD PTR [edx+eiz*2],eax
  414b15:	add    al,0x10
  414b17:	xor    BYTE PTR [eax],al
  414b19:	push   eax
  414b1a:	add    dl,BYTE PTR [ecx+0x5]
  414b1d:	add    DWORD PTR [ecx+eax*1+0x10],edx
  414b21:	pusha  
  414b22:	dec    eax
  414b23:	imul   eax,DWORD PTR [ebx-0x5e],0xf2180816
  414b2a:	xchg   edx,eax
  414b2b:	xor    al,0xa8
  414b2d:	or     al,0x92
  414b2f:	adc    BYTE PTR [esi+eiz*1],0x28
  414b33:	add    DWORD PTR [ebp+0x18],0xc06b00
  414b3a:	adc    BYTE PTR [eax],bh
  414b3c:	add    BYTE PTR [eax+0x0],0x0
  414b40:	sbb    DWORD PTR [eax+ecx*4+0x4024001c],esp
  414b47:	fidiv  WORD PTR [eax]
  414b49:	add    DWORD PTR [eax+eiz*4],eax
  414b4c:	or     DWORD PTR [ebx+0x208c4345],ecx
  414b52:	or     al,0x8b
  414b54:	adc    BYTE PTR [eax],0x61
  414b57:	or     BYTE PTR [eax-0x4f],ah
  414b5a:	dec    eax
  414b5b:	and    DWORD PTR [edx],esi
  414b5d:	xor    al,0x45
  414b5f:	adc    dl,BYTE PTR [eax+0x15911248]
  414b65:	test   BYTE PTR [eax+0x26820410],ch
  414b6b:	or     al,0x8
  414b6d:	adc    BYTE PTR [edx+edx*4],al
  414b70:	adc    BYTE PTR [eax],cl
  414b72:	mov    al,cl
  414b74:	add    BYTE PTR [eax-0x78],dl
  414b77:	add    ah,BYTE PTR [esp+edx*4]
  414b7a:	test   DWORD PTR ds:0x40004008,esp
  414b80:	add    BYTE PTR [eax],dh
  414b82:	dec    esp
  414b83:	sbb    esi,DWORD PTR [ecx+0xa680001]
  414b89:	inc    eax
  414b8a:	add    edx,DWORD PTR [esi+0x0]
  414b8d:	add    al,cl
  414b8f:	or     BYTE PTR [ecx],0x28
  414b92:	add    BYTE PTR [edx],0x51
  414b95:	adc    al,0x2
  414b97:	enter  0x338a,0x5
  414b9b:	sub    DWORD PTR [eax],esp
  414b9d:	or     BYTE PTR [eax+0x28425004],0x8
  414ba4:	add    dl,al
  414ba6:	add    dh,BYTE PTR [edx]
  414ba8:	add    al,0x2
  414baa:	xor    al,BYTE PTR [ebx+esi*1+0x5061086]
  414bb1:	(bad)  
  414bb2:	jb     0x414bf6
  414bb4:	inc    esp
  414bb5:	adc    al,0xb5
  414bb7:	add    BYTE PTR [eax-0x48],ah
  414bba:	add    DWORD PTR [ebx],eax
  414bbc:	add    al,0xe5
  414bbe:	adc    BYTE PTR [eax-0x70],dl
  414bc1:	add    BYTE PTR [eax-0x736fdbdc],al
  414bc7:	add    ebp,DWORD PTR [eax]
  414bc9:	add    al,0x43
  414bcb:	sbb    DWORD PTR [eax],esi
  414bcd:	dec    ebx
  414bce:	out    dx,al
  414bcf:	add    eax,DWORD PTR [edx+0x51280913]
  414bd5:	stos   BYTE PTR es:[edi],al
  414bd6:	sub    bl,BYTE PTR [esi]
  414bd8:	add    BYTE PTR [eax],al
  414bda:	push   ss
  414bdb:	and    BYTE PTR [eax+eax*4],0x40
  414bdf:	sub    al,0x4
  414be1:	loop   0x414be3
  414be3:	loopne 0x414beb
  414be5:	or     BYTE PTR [eax-0x60],ch
  414be8:	enter  0x1c1,0x2
  414bec:	or     DWORD PTR [eax],esp
  414bee:	daa    
  414bef:	add    cl,BYTE PTR [edx]
  414bf1:	add    al,0x2
  414bf3:	dec    ecx
  414bf4:	add    BYTE PTR [eax],al
  414bf6:	adc    al,0x2
  414bf8:	dec    esp
  414bf9:	rcl    BYTE PTR [ecx],cl
  414bfb:	add    DWORD PTR [eax+0x1a400001],eax
  414c01:	pop    DWORD PTR [edx]
  414c03:	loopne 0x414c11
  414c05:	inc    eax
  414c06:	or     BYTE PTR [esi+0x34f20781],0xa
  414c0d:	add    al,al
  414c0f:	add    BYTE PTR [ebp-0x56ffddf8],al
  414c15:	and    BYTE PTR [eax-0x70],al
  414c18:	cmp    cl,BYTE PTR [ebx+0x24]
  414c1b:	add    al,0x5a
  414c1d:	add    BYTE PTR [edx],0xa5
  414c20:	inc    edx
  414c21:	mov    al,0x89
  414c23:	xor    al,BYTE PTR [eax+0x1c]
  414c26:	rol    DWORD PTR [edx-0x78],0x1
  414c2a:	adc    ecx,eax
  414c2c:	add    BYTE PTR [eax],ch
  414c2e:	lock add DWORD PTR [esi],eax
  414c31:	mov    BYTE PTR [eax+0x1],cl
  414c34:	call   0x30635039
  414c39:	mov    edx,DWORD PTR [eax]
  414c3b:	push   ecx
  414c3c:	add    eax,0xc9410308
  414c41:	sub    al,BYTE PTR [ecx]
  414c43:	and    BYTE PTR [esi+0x40008a20],dl
  414c49:	adc    BYTE PTR [esi],0x12
  414c4c:	inc    edx
  414c4d:	adc    eax,DWORD PTR [ecx+eax*4+0x2c]
  414c51:	add    BYTE PTR [eax+0x54001882],0x80
  414c58:	push   eax
  414c59:	inc    ecx
  414c5a:	or     al,0x0
  414c5c:	loopne 0x414bfe
  414c5e:	and    al,0x73
  414c60:	mov    ecx,0x351d280
  414c65:	add    eax,DWORD PTR [eax+0x2c918824]
  414c6b:	and    al,0x8
  414c6d:	sub    ah,BYTE PTR [ecx]
  414c6f:	cdq    
  414c70:	mov    DWORD PTR [edx],ecx
  414c72:	push   ebx
  414c73:	add    eax,DWORD PTR [eax+0x28]
  414c76:	jns    0x414cd8
  414c78:	or     al,BYTE PTR [eax]
  414c7a:	adc    DWORD PTR [edx],esp
  414c7c:	mov    BYTE PTR [ecx+0x0],al
  414c7f:	or     BYTE PTR [eax+0x49285948],dl
  414c85:	add    BYTE PTR [eax+0x104c0],al
  414c8b:	sbb    DWORD PTR [ebx],ecx
  414c8d:	and    DWORD PTR [eax-0x50],esp
  414c90:	sub    BYTE PTR [ecx],dl
  414c92:	ror    BYTE PTR [eax],0x0
  414c95:	xchg   esp,eax
  414c96:	add    DWORD PTR [eax],eax
  414c98:	inc    edx
  414c99:	or     al,0x10
  414c9b:	add    BYTE PTR [eax+0x944a208],ch
  414ca1:	adc    al,0x4f
  414ca3:	add    al,0x1
  414ca5:	adc    cl,BYTE PTR [edx]
  414ca7:	and    BYTE PTR [ebp+0x48],cl
  414caa:	inc    esi
  414cab:	inc    ecx
  414cac:	and    BYTE PTR [ebx+0x20000022],0x8c
  414cb3:	sub    BYTE PTR [ecx-0x5f],0xa3
  414cb7:	add    BYTE PTR [ecx],cl
  414cb9:	pusha  
  414cba:	and    BYTE PTR [edx],0x11
  414cbd:	adc    BYTE PTR [ecx+0x3024500],cl
  414cc3:	inc    eax
  414cc4:	enter  0x8801,0x14
  414cc8:	and    BYTE PTR [ecx],al
  414cca:	and    DWORD PTR [edx+0x21],eax
  414ccd:	or     al,0xc6
  414ccf:	sbb    BYTE PTR [eax*2+0x12199008],0xc0
  414cd7:	test   BYTE PTR [eax+0x14570c2],al
  414cdd:	inc    edx
  414cde:	xor    al,BYTE PTR [eax]
  414ce0:	leave  
  414ce1:	add    eax,0xac580c
  414ce6:	add    dl,BYTE PTR [eax+0x2]
  414ce9:	nop
  414cea:	pusha  
  414ceb:	nop
  414cec:	mov    al,0xe0
  414cee:	or     DWORD PTR [ecx+0x293d8a02],eax
  414cf4:	mov    eax,ds:0x4401c03a
  414cf9:	inc    edx
  414cfa:	inc    eax
  414cfb:	bound  ecx,QWORD PTR [eax+0x302529]
  414d01:	arpl   WORD PTR [esi+ebp*4+0x32],ax
  414d05:	xor    BYTE PTR [eax],al
  414d07:	mov    ds:0x8819063,al
  414d0c:	mov    al,ds:0x6410010
  414d11:	or     BYTE PTR [eax],ah
  414d13:	sub    BYTE PTR [eax],0x0
  414d16:	mov    esi,DWORD PTR [eax]
  414d18:	add    BYTE PTR [ebp+esi*4-0x62],al
  414d1c:	or     al,0x50
  414d1e:	inc    edx
  414d1f:	gs nop
  414d21:	add    ah,BYTE PTR [eax]
  414d23:	add    DWORD PTR [eax+ebx*2+0x1],eax
  414d27:	sub    ch,BYTE PTR [eax]
  414d29:	mov    BYTE PTR [ecx+eax*4+0x20],al
  414d2d:	push   es
  414d2e:	add    al,0x14
  414d30:	pusha  
  414d31:	add    BYTE PTR [eax+ebx*1+0x20],al
  414d35:	add    BYTE PTR [ebx],al
  414d37:	sub    BYTE PTR [eax+0x0],0x21
  414d3b:	arpl   WORD PTR [edx+0x22840013],cx
  414d41:	inc    eax
  414d42:	add    al,0xc
  414d44:	imul   edi,DWORD PTR [ebx],0x50
  414d47:	test   BYTE PTR [eax],ch
  414d49:	and    BYTE PTR [eax],cl
  414d4b:	add    BYTE PTR ds:0x23029049,al
  414d51:	or     BYTE PTR [eax+0x11],dl
  414d54:	add    BYTE PTR [esi],al
  414d56:	or     BYTE PTR [ecx+0x1b04070a],ah
  414d5c:	or     BYTE PTR [ecx+0x860],ah
  414d62:	add    DWORD PTR [eax],ebx
  414d64:	or     BYTE PTR [ecx+0x4],al
  414d67:	mov    cl,BYTE PTR [ecx+0x41920042]
  414d6d:	xchg   BYTE PTR [eax],ah
  414d6f:	ret    
  414d70:	add    al,0x38
  414d72:	sub    DWORD PTR [edx],eax
  414d74:	cs inc eax
  414d76:	adc    DWORD PTR ds:0x8011a300,esp
  414d7c:	add    BYTE PTR [edx],cl
  414d7e:	add    BYTE PTR [edx+0x8],al
  414d81:	mov    DWORD PTR [eax],esp
  414d83:	sub    al,0x12
  414d85:	pop    ss
  414d86:	push   es
  414d87:	mov    WORD PTR [ecx],es
  414d89:	cmp    BYTE PTR [eax],bl
  414d8b:	adc    al,0x20
  414d8d:	push   esi
  414d8e:	mov    eax,ds:0x42010424
  414d93:	add    BYTE PTR [eax],ah
  414d95:	add    eax,0x99260161
  414d9a:	add    BYTE PTR [edx-0x6e2ef565],al
  414da0:	mov    al,ds:0x8a902
  414da5:	adc    DWORD PTR [ecx],eax
  414da7:	inc    esi
  414da8:	add    cl,BYTE PTR [eax+0x11]
  414dab:	mov    BYTE PTR [eax],ah
  414dad:	add    DWORD PTR [ecx+0x20],esp
  414db0:	sub    BYTE PTR [ebp-0x6e],al
  414db3:	push   esp
  414db4:	mov    al,0xc8
  414db6:	add    ah,BYTE PTR [eax]
  414db8:	sub    BYTE PTR [eax],al
  414dba:	and    al,BYTE PTR [ebx]
  414dbc:	push   eax
  414dbd:	enter  0x150,0x84
  414dc1:	nop
  414dc2:	add    BYTE PTR [eax+0x68b106],al
  414dc8:	or     BYTE PTR [ebp-0x6e],al
  414dcb:	add    eax,0x2068c327
  414dd0:	test   DWORD PTR ds:0x6202000,edx
  414dd6:	mov    ds:0x40040200,al
  414ddb:	adc    BYTE PTR [edx+0x108fd448],ah
  414de1:	inc    eax
  414de2:	add    BYTE PTR [eax],0x4c
  414de5:	and    dl,BYTE PTR [esp+eax*4+0x29c44145]
  414dec:	xchg   BYTE PTR [ecx+0x24],al
  414def:	gs and al,0x59
  414df2:	dec    esp
  414df3:	add    BYTE PTR [edx+0x10],al
  414df6:	push   edx
  414df7:	push   es
  414df8:	add    al,BYTE PTR [ebp+0xc80114]
  414dfe:	push   cs
  414dff:	and    bl,BYTE PTR [edx]
  414e01:	test   BYTE PTR [edx+0x340a0082],cl
  414e07:	add    DWORD PTR [edx+ecx*2+0x1],0x4c
  414e0c:	add    ecx,DWORD PTR [edi+0x8]
  414e0f:	test   DWORD PTR ds:0x42000412,edx
  414e15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e16:	pop    eax
  414e17:	loopne 0x414e21
  414e19:	mov    eax,ds:0xac08822
  414e1e:	xor    al,0x1
  414e20:	cmp    BYTE PTR [eax-0x7f],dh
  414e23:	sbb    BYTE PTR [ecx],0xa8
  414e26:	add    BYTE PTR [esi],al
  414e28:	and    BYTE PTR ds:0x62f82822,al
  414e2e:	dec    esp
  414e2f:	sbb    al,0x2
  414e31:	and    BYTE PTR [ecx],bh
  414e33:	inc    ecx
  414e34:	add    al,0x22
  414e36:	add    BYTE PTR [eax-0x6a],al
  414e39:	add    BYTE PTR [eax],cl
  414e3b:	popa   
  414e3c:	inc    eax
  414e3d:	xor    al,0x40
  414e3f:	or     BYTE PTR [eax],0x0
  414e42:	inc    esp
  414e43:	add    al,0x81
  414e45:	and    ah,dh
  414e47:	and    BYTE PTR [edx+0x258009a2],al
  414e4d:	add    al,0xc2
  414e4f:	inc    esi
  414e50:	and    BYTE PTR [edx-0x68],0x4
  414e54:	and    BYTE PTR [edx],cl
  414e56:	add    al,0x78
  414e58:	sbb    al,BYTE PTR [ecx]
  414e5a:	add    BYTE PTR [ecx],ah
  414e5c:	mov    BYTE PTR [eax],al
  414e5e:	and    BYTE PTR [edx],ah
  414e60:	push   ebp
  414e61:	dec    edx
  414e62:	add    BYTE PTR [ecx],al
  414e64:	cdq    
  414e65:	mov    al,ah
  414e67:	xor    BYTE PTR [esi+0x20],ah
  414e6a:	xor    al,BYTE PTR [eax+0x4c4420c8]
  414e70:	enter  0xe0,0x16
  414e74:	test   BYTE PTR [edx],cl
  414e76:	adc    BYTE PTR [eax-0x80],0x0
  414e7a:	add    BYTE PTR [ebx+eax*1],al
  414e7d:	add    BYTE PTR [eax],dh
  414e7f:	sub    BYTE PTR [ecx],al
  414e81:	cmp    eax,0x260262
  414e86:	add    DWORD PTR [eax],0x41fa010
  414e8c:	add    dl,BYTE PTR [esi]
  414e8e:	adc    al,0x22
  414e90:	and    al,0x1
  414e92:	add    BYTE PTR [eax],0x4
  414e95:	dec    eax
  414e96:	jl     0x414ec4
  414e98:	in     al,0x12
  414e9a:	pop    es
  414e9b:	adc    eax,DWORD PTR [esi]
  414e9d:	add    DWORD PTR [edx],esp
  414e9f:	add    BYTE PTR [esi+edx*8],al
  414ea2:	push   eax
  414ea3:	add    al,0x50
  414ea5:	adc    al,BYTE PTR [ecx]
  414ea7:	inc    eax
  414ea8:	jp     0x414ecb
  414eaa:	call   DWORD PTR ds:0x43b5ec
  414eb0:	or     BYTE PTR [eax],0x1
  414eb3:	and    al,0x2e
  414eb6:	xor    BYTE PTR [eax+0x60],dh
  414eb9:	ret    0x43cb
  414ebc:	loopne 0x414ebe
  414ebe:	add    BYTE PTR [ebx+0x601c4001],ah
  414ec4:	and    BYTE PTR [edx+ecx*2],ah
  414ec7:	or     BYTE PTR [esi],0x12
  414eca:	mov    eax,ds:0x8410ae28
  414ecf:	add    BYTE PTR [eax],0xf0
  414ed2:	add    DWORD PTR [eax+0x1],ebx
  414ed5:	add    al,0x28
  414ed7:	loopne 0x414f01
  414ed9:	or     al,0x8a
  414edb:	xchg   ebp,eax
  414edc:	add    DWORD PTR ds:0x88812301,0x81980868
  414ee6:	rol    DWORD PTR [edx],0x41
  414ee9:	push   esp
  414eea:	test   eax,0x300722a
  414eef:	adc    cl,BYTE PTR [esi+eax*4]
  414ef2:	movaps xmm6,XMMWORD PTR [ebx]
  414ef5:	add    al,0xaf
  414ef7:	add    eax,0x26908829
  414efc:	xchg   edx,eax
  414efd:	add    al,al
  414eff:	mov    cl,al
  414f01:	add    DWORD PTR [eax],eax
  414f03:	mov    BYTE PTR [ebx],al
  414f05:	sbb    BYTE PTR [ecx+0x50972141],cl
  414f0b:	add    ebp,DWORD PTR [ebx+edi*1]
  414f0e:	inc    edx
  414f0f:	inc    eax
  414f10:	inc    ecx
  414f11:	and    DWORD PTR [eax-0x77],0xffffff80
  414f15:	and    BYTE PTR [edx+0x40a04002],al
  414f1b:	adc    DWORD PTR [ecx],ecx
  414f1d:	adc    al,0x11
  414f1f:	and    BYTE PTR [edi+0x10],ah
  414f22:	adc    BYTE PTR [ecx],dl
  414f24:	leave  
  414f25:	sub    dl,dl
  414f27:	adc    BYTE PTR [eax+0x5ce406],al
  414f2d:	add    eax,DWORD PTR [ebx+0x3025011]
  414f33:	add    al,0x20
  414f35:	push   eax
  414f36:	dec    ebx
  414f37:	or     cl,BYTE PTR gs:[eax+esi*2]
  414f3b:	loope  0x414f4f
  414f3d:	and    al,0x25
  414f3f:	or     BYTE PTR [edx],ah
  414f41:	sbb    BYTE PTR [edx],0x24
  414f44:	or     ah,BYTE PTR [ecx+0x6428100]
  414f4a:	cli    
  414f4b:	add    BYTE PTR [eax],al
  414f4d:	adc    BYTE PTR [eax],0x4
  414f50:	add    BYTE PTR [eax],dh
  414f52:	inc    eax
  414f53:	add    BYTE PTR [eax],0x90
  414f56:	mov    WORD PTR [ecx],ss
  414f58:	popa   
  414f59:	push   es
  414f5a:	cdq    
  414f5b:	and    BYTE PTR [eax],al
  414f5d:	add    al,BYTE PTR [ecx]
  414f5f:	ret    0x5b0b
  414f62:	add    DWORD PTR [esp+esi*1],eax
  414f65:	pop    ss
  414f66:	nop
  414f67:	or     BYTE PTR ds:0x36c00013,bl
  414f6d:	adc    BYTE PTR [ecx+0x22916e01],cl
  414f73:	pusha  
  414f74:	add    al,0x18
  414f76:	inc    edx
  414f77:	in     al,0x10
  414f79:	add    BYTE PTR ds:0x1080082d,dl
  414f7f:	imul   eax,DWORD PTR [eax],0x1a0210e4
  414f85:	and    al,BYTE PTR [eax+0x1c]
  414f88:	sub    DWORD PTR [eax-0x50],0x6
  414f8c:	enter  0x388,0x9
  414f90:	or     BYTE PTR [esi],al
  414f92:	add    BYTE PTR [eax+0x41288880],ah
  414f98:	add    al,BYTE PTR [ebx+eiz*1-0x34]
  414f9c:	cmp    BYTE PTR [esi+0x10a1819],ch
  414fa2:	inc    eax
  414fa3:	adc    eax,0xc2142010
  414fa8:	bound  ecx,QWORD PTR [ecx]
  414faa:	mov    al,0x50
  414fac:	add    eax,DWORD PTR [eax]
  414fae:	or     al,0x9c
  414fb0:	push   eax
  414fb1:	add    esp,ecx
  414fb3:	add    bl,BYTE PTR [eax]
  414fb5:	adc    al,BYTE PTR [eax]
  414fb7:	adc    al,0x10
  414fb9:	and    BYTE PTR [ecx-0x4ff9deed],ah
  414fbf:	or     BYTE PTR [ecx+0x11008430],dh
  414fc5:	or     BYTE PTR [eax+ebp*2+0x65],al
  414fc9:	dec    ecx
  414fca:	sbb    BYTE PTR [ecx+0x6],dl
  414fcd:	or     bl,BYTE PTR [ecx]
  414fcf:	add    BYTE PTR [eax+0x7a],ah
  414fd2:	or     BYTE PTR [ecx],al
  414fd4:	dec    eax
  414fd5:	adc    WORD PTR [eax+0x1142c300],ax
  414fdc:	add    BYTE PTR [ecx],0xb
  414fdf:	inc    ecx
  414fe0:	dec    eax
  414fe1:	and    BYTE PTR [eax+ebx*1],al
  414fe4:	push   eax
  414fe5:	add    eax,DWORD PTR [eax]
  414fe7:	add    al,bl
  414fe9:	adc    DWORD PTR [eax+eax*2-0x20],eax
  414fed:	inc    eax
  414fee:	sub    al,0x44
  414ff0:	add    DWORD PTR [esi+edx*1+0x25],eax
  414ff4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ff5:	test   BYTE PTR [esi+edi*2],ah
  414ff8:	push   0x18220002
  414ffd:	mov    al,0x1
  414fff:	pop    eax
  415000:	inc    esp
  415001:	or     eax,0x2180a03e
  415006:	dec    ecx
  415007:	and    al,0x26
  415009:	nop
  41500a:	xor    BYTE PTR [eax],bl
  41500c:	inc    esp
  41500d:	push   ebp
  41500e:	push   eax
  41500f:	or     al,BYTE PTR ds:0x104b2904
  415015:	add    BYTE PTR [ecx],dh
  415017:	and    al,BYTE PTR [edi]
  415019:	add    BYTE PTR [ebx],cl
  41501b:	and    BYTE PTR gs:[eax+0x10],ah
  41501f:	pop    ebx
  415020:	add    BYTE PTR [ebp+0x40064a01],ah
  415026:	sbb    cl,BYTE PTR ds:0x242109c4
  41502c:	or     BYTE PTR [eax],bl
  41502e:	or     al,0x88
  415030:	inc    esp
  415031:	adc    BYTE PTR [eax],ch
  415033:	add    BYTE PTR [eax+0x61],al
  415036:	add    BYTE PTR [eax],al
  415038:	xor    DWORD PTR [ecx],edx
  41503a:	inc    esp
  41503b:	les    ecx,FWORD PTR [edx]
  41503d:	or     BYTE PTR [ecx*1-0x6bffcf80],dl
  415044:	sbb    BYTE PTR [edx],ah
  415046:	sub    BYTE PTR [eax],ch
  415048:	add    BYTE PTR [eax+eax*1],ah
  41504b:	and    ch,BYTE PTR [esi]
  41504d:	xchg   ebp,eax
  41504e:	adc    BYTE PTR [ecx],cl
  415050:	add    BYTE PTR [edi-0x7f],dl
  415053:	and    BYTE PTR [eax+0x11577041],al
  415059:	es add al,0x28
  41505c:	or     edx,DWORD PTR [ecx]
  41505e:	add    DWORD PTR [eax+0x2c52010],edx
  415064:	or     BYTE PTR [eax],al
  415066:	inc    ecx
  415067:	inc    esi
  415068:	add    DWORD PTR [eax+0x202101b2],ebp
  41506e:	add    eax,0x2044499
  415073:	or     al,BYTE PTR [eax]
  415075:	inc    eax
  415076:	add    al,BYTE PTR ds:0x24220313
  41507c:	inc    esi
  41507d:	pusha  
  41507e:	or     BYTE PTR [ecx+0x22103900],ah
  415084:	cmc    
  415085:	adc    ah,BYTE PTR [ebx]
  415087:	adc    BYTE PTR [edx+0x44],al
  41508a:	xor    BYTE PTR [edx+0x60],al
  41508d:	jmp    0x1875a94
  415092:	adc    BYTE PTR [esi+eax*1+0x1410618c],ah
  415099:	sub    BYTE PTR [ecx+0x40],al
  41509c:	add    al,BYTE PTR [eax-0x76fce7be]
  4150a2:	add    eax,ecx
  4150a4:	push   es
  4150a5:	add    al,0x2
  4150a7:	and    eax,0x8a422462
  4150ac:	or     BYTE PTR [eax],dh
  4150ae:	sub    BYTE PTR [eax+0x28],0x14
  4150b2:	and    al,0x8e
  4150b4:	and    BYTE PTR [eax],al
  4150b6:	sub    al,BYTE PTR [eax+0x2000]
  4150bc:	adc    al,0x82
  4150be:	or     BYTE PTR [eax],cl
  4150c0:	pop    eax
  4150c1:	and    BYTE PTR [eax+0x6c1000],0x28
  4150c8:	add    bl,BYTE PTR [edx]
  4150ca:	add    DWORD PTR [edx-0x2e],eax
  4150cd:	adc    ah,cl
  4150cf:	or     BYTE PTR [edi+0x1],cl
  4150d2:	repnz mov ds:0x12100127,al
  4150d8:	add    BYTE PTR [eax+eiz*1],al
  4150db:	add    BYTE PTR [eax],cl
  4150dd:	adc    al,0x0
  4150df:	shl    BYTE PTR [edx+eax*1+0x58d43944],0x3
  4150e7:	hlt    
  4150e8:	popa   
  4150e9:	and    al,0xc2
  4150eb:	dec    esi
  4150ec:	nop
  4150ed:	nop
  4150ee:	test   al,0x2e
  4150f0:	nop
  4150f1:	push   es
  4150f2:	push   eax
  4150f3:	adc    al,0x56
  4150f5:	inc    ecx
  4150f6:	inc    esi
  4150f7:	or     BYTE PTR [ecx],dl
  4150f9:	enter  0x481,0x23
  4150fd:	xor    BYTE PTR [ebx+0x14935000],cl
  415103:	add    BYTE PTR [eax],al
  415105:	or     ebp,DWORD PTR [eax]
  415107:	or     eax,0x9362401
  41510c:	and    BYTE PTR [edi+0x41],al
  41510f:	or     al,0x8
  415111:	dec    ecx
  415112:	dec    edx
  415113:	sub    DWORD PTR [ecx],esp
  415115:	add    cl,al
  415117:	add    eax,0x4f800009
  41511c:	and    BYTE PTR [eax],cl
  41511e:	add    BYTE PTR [ecx],dh
  415120:	sub    esp,eax
  415122:	adc    bh,BYTE PTR [eax-0x80]
  415125:	adc    al,0x14
  415127:	inc    esp
  415128:	(bad)  [esp+ecx*4]
  41512b:	push   ss
  41512c:	mov    eax,0x4920e913
  415131:	add    BYTE PTR [eax],cl
  415133:	xor    BYTE PTR [eax],ah
  415135:	adc    DWORD PTR [eax],eax
  415137:	inc    esp
  415138:	xor    al,0x12
  41513a:	add    BYTE PTR [ebp-0x60],0x41
  41513e:	and    BYTE PTR [edx+0x44],dh
  415141:	add    BYTE PTR [eax+0x0],0x1c
  415145:	and    BYTE PTR [eax],ah
  415147:	sbb    al,0x2
  415149:	js     0x415161
  41514b:	and    ah,BYTE PTR [edx]
  41514d:	adc    BYTE PTR [edx],dl
  41514f:	or     BYTE PTR [esi+0xc110a41],al
  415155:	nop
  415156:	dec    ecx
  415157:	add    BYTE PTR [ecx],dl
  415159:	jno    0x41515b
  41515b:	push   eax
  41515c:	add    al,0x1
  41515e:	add    dl,BYTE PTR [ecx+0x210001]
  415164:	dec    eax
  415165:	or     al,0x9b
  415167:	mov    ss:0xc8c16005,al
  41516d:	add    ecx,DWORD PTR [esi]
  41516f:	add    BYTE PTR [edx+0x10050804],al
  415175:	add    dl,BYTE PTR [eax-0x6c]
  415178:	nop
  415179:	adc    DWORD PTR [eax],ebp
  41517b:	inc    eax
  41517c:	pusha  
  41517d:	add    al,0x40
  41517f:	push   edx
  415180:	jb     0x415106
  415182:	xchg   edx,eax
  415183:	add    al,al
  415185:	add    eax,0xf2523418
  41518a:	add    eax,0x588510d
  41518f:	adc    al,BYTE PTR ds:0xc000172
  415195:	fadd   DWORD PTR [eax-0x6c7ed6ec]
  41519b:	ror    BYTE PTR [eax+esi*1+0x40092a8b],1
  4151a2:	test   al,0x36
  4151a4:	push   ss
  4151a5:	cwde   
  4151a6:	push   eax
  4151a7:	adc    ah,BYTE PTR [eax]
  4151a9:	inc    eax
  4151aa:	jo     0x4151ec
  4151ac:	add    BYTE PTR [ecx],ah
  4151ae:	mov    ah,0x82
  4151b0:	and    BYTE PTR [eax+0x2003f870],al
  4151b6:	test   eax,0x23880db
  4151bb:	sub    BYTE PTR [edx],dl
  4151bd:	inc    ecx
  4151be:	ins    DWORD PTR es:[edi],dx
  4151bf:	sub    al,BYTE PTR [ebp+0x1201480c]
  4151c5:	add    DWORD PTR [eax+eax*1+0x20ec401a],esi
  4151cc:	add    DWORD PTR [ebx+0x12212],eax
  4151d2:	add    ecx,edx
  4151d4:	pop    es
  4151d5:	or     BYTE PTR [eax],0x20
  4151d8:	and    BYTE PTR [eax+0x94052a0],cl
  4151de:	mov    ecx,0x4848008
  4151e3:	rcl    BYTE PTR [edx],0x0
  4151e6:	xor    ecx,DWORD PTR [ebx+0x20d8852]
  4151ec:	lea    esp,[edx]
  4151ee:	adc    ah,BYTE PTR [edx+0x5]
  4151f1:	inc    eax
  4151f2:	add    BYTE PTR [eax],al
  4151f4:	and    BYTE PTR [ecx],ah
  4151f6:	popa   
  4151f7:	arpl   WORD PTR [eax+0x2],dx
  4151fa:	shl    DWORD PTR [edx-0x7e],1
  4151fd:	sbb    al,0x20
  4151ff:	or     BYTE PTR [eax],al
  415201:	and    BYTE PTR [eax+eax*1],0x10
  415205:	add    BYTE PTR [eax+0x38202401],cl
  41520b:	rol    BYTE PTR [ecx],0xc
  41520e:	test   BYTE PTR [eax],cl
  415210:	pusha  
  415211:	xor    BYTE PTR [edx],al
  415213:	xchg   ecx,eax
  415214:	inc    ecx
  415215:	jne    0x41521b
  415217:	inc    eax
  415218:	or     al,0x1
  41521a:	nop
  41521b:	add    al,0xa
  41521d:	add    BYTE PTR [eax],al
  41521f:	or     dh,BYTE PTR [edx-0x7e]
  415222:	adc    al,0x8c
  415224:	adc    BYTE PTR [eax],al
  415226:	or     BYTE PTR [eax+0x2d],al
  415229:	or     BYTE PTR [ecx+0x4],0xc7
  41522d:	mov    al,ds:0x24254880
  415232:	and    BYTE PTR [ecx+0x204a100],al
  415238:	add    BYTE PTR [edx],al
  41523a:	add    BYTE PTR [edx-0x75ebedc0],dl
  415240:	les    eax,FWORD PTR [ecx+0x70594e04]
  415246:	and    esp,DWORD PTR [eax+0x10]
  415249:	ror    DWORD PTR [esi],1
  41524b:	adc    DWORD PTR [eax],ecx
  41524d:	js     0x41524f
  41524f:	add    BYTE PTR [edx+0x1a3800],cl
  415255:	sub    al,BYTE PTR [eax+eiz*1+0x2]
  415259:	add    DWORD PTR [eax+eax*4+0x41f226a1],edx
  415260:	add    BYTE PTR [ecx+0x29014016],0x78
  415267:	push   0x40842028
  41526c:	add    cl,BYTE PTR [eax-0x768bb600]
  415272:	sbb    al,0x0
  415274:	inc    eax
  415275:	test   DWORD PTR [eax+0x30000334],ecx
  41527b:	or     BYTE PTR [eax+ecx*8],dl
  41527e:	retf   
  41527f:	adc    al,0x4
  415281:	sbb    BYTE PTR [edx+0x200ca804],cl
  415287:	add    dh,BYTE PTR [eax+eiz*1+0x0]
  41528b:	bound  esp,QWORD PTR [edx]
  41528d:	add    BYTE PTR ss:[eax+esi*2+0x28841090],ah
  415295:	and    al,dl
  415297:	mov    ds:0x11036000,al
  41529c:	adc    BYTE PTR [eax+eax*2],0x4
  4152a0:	xor    BYTE PTR [edx],0x0
  4152a3:	add    BYTE PTR [edx],0x1
  4152a6:	add    BYTE PTR [edx],al
  4152a8:	nop
  4152a9:	and    eax,0x50060290
  4152ae:	loopne 0x4152b4
  4152b0:	or     cl,BYTE PTR [eax+0x6]
  4152b3:	adc    al,0x0
  4152b5:	push   es
  4152b6:	cmp    al,0xc
  4152b8:	adc    BYTE PTR [eax*1+0x49024410],al
  4152bf:	inc    esp
  4152c0:	sub    dl,dl
  4152c2:	dec    eax
  4152c3:	and    BYTE PTR [ebp+eax*1+0x31],al
  4152c7:	push   ss
  4152c8:	xor    al,BYTE PTR [eax]
  4152ca:	adc    DWORD PTR [eax],ecx
  4152cc:	daa    
  4152cd:	adc    eax,0x8a624090
  4152d2:	adc    BYTE PTR [edx],0xe
  4152d5:	add    al,0x12
  4152d7:	pusha  
  4152d8:	and    BYTE PTR [edx+0x46120da],ah
  4152de:	add    BYTE PTR [ecx],cl
  4152e0:	adc    al,al
  4152e2:	ror    BYTE PTR [edx],0x0
  4152e5:	inc    eax
  4152e6:	xor    BYTE PTR [esi+eax*2+0x22],al
  4152ed:	add    BYTE PTR [ebx+eax*2],al
  4152f0:	loopne 0x415276
  4152f2:	add    al,BYTE PTR [ebx+0x4004e230]
  4152f8:	dec    edx
  4152f9:	add    BYTE PTR [eax+0x42],bl
  4152fc:	inc    ecx
  4152fd:	push   edx
  4152fe:	inc    eax
  4152ff:	or     al,BYTE PTR [eax]
  415301:	add    al,0x45
  415303:	push   ds
  415304:	test   BYTE PTR [eax],al
  415306:	es jo  0x415315
  415309:	adc    al,BYTE PTR [eax]
  41530b:	or     DWORD PTR [eax+0x5d90031],esp
  415311:	adc    BYTE PTR [edx],dh
  415313:	xchg   BYTE PTR [eax+ecx*4+0x230e9000],dl
  41531a:	adc    BYTE PTR [ecx],ah
  41531c:	dec    esp
  41531d:	add    ebx,DWORD PTR [esi]
  41531f:	or     DWORD PTR [ecx],eax
  415321:	xchg   ecx,eax
  415322:	loop   0x41532d
  415324:	add    al,0x46
  415326:	and    al,BYTE PTR [eax]
  415328:	and    DWORD PTR [esi+0x880da83],edx
  41532e:	inc    eax
  41532f:	mov    ah,BYTE PTR [eax]
  415331:	add    BYTE PTR [eax],ch
  415333:	adc    BYTE PTR [esi],al
  415335:	xor    al,BYTE PTR [ecx+0x28]
  415338:	mov    ds:0x602283,eax
  41533d:	xchg   ecx,eax
  41533e:	add    al,cl
  415340:	or     DWORD PTR [eax-0x80],0xd
  415344:	adc    BYTE PTR [eax+eiz*4],bl
  415347:	add    eax,edx
  415349:	inc    esp
  41534a:	and    BYTE PTR [eax],al
  41534c:	inc    eax
  41534d:	dec    eax
  41534e:	inc    esp
  41534f:	push   es
  415350:	or     al,0x60
  415352:	and    al,BYTE PTR [ecx]
  415354:	add    BYTE PTR [ecx+0x28118281],ah
  41535a:	add    BYTE PTR [eax],al
  41535c:	or     BYTE PTR [eax+ecx*1+0x20],cl
  415360:	add    BYTE PTR [eax+0x160910c2],ch
  415366:	add    al,0x42
  415368:	add    BYTE PTR [edx+0x208604],dl
  41536e:	rcl    BYTE PTR [edx+eax*1+0x2],0x43
  415373:	dec    edx
  415374:	add    BYTE PTR [ecx],0x44
  415377:	aaa    
  415378:	inc    eax
  415379:	add    BYTE PTR [esi],ah
  41537b:	sbb    BYTE PTR [edx-0x70],cl
  41537e:	inc    ebp
  41537f:	adc    DWORD PTR [edx+ecx*1],esp
  415382:	or     BYTE PTR [edx],0x49
  415385:	jae    0x415397
  415387:	mov    al,ds:0x90a2801a
  41538c:	pop    ecx
  41538d:	xor    al,BYTE PTR [eax+0x30880c1]
  415393:	adc    BYTE PTR [eax+0x45309a80],ah
  415399:	add    al,0x1a
  41539b:	and    al,BYTE PTR [esi+ecx*4-0x1cf3bff5]
  4153a2:	enter  0x2263,0x4
  4153a6:	nop
  4153a7:	adc    BYTE PTR [edx+0x0],al
  4153aa:	rol    BYTE PTR [ecx],0x42
  4153ad:	mov    BYTE PTR [eax],cl
  4153af:	sub    al,0x1
  4153b1:	add    al,0x1
  4153b3:	inc    ebp
  4153b4:	add    esi,DWORD PTR [eax]
  4153b6:	add    cl,BYTE PTR [eax+0x10]
  4153b9:	push   0x26a0e51a
  4153be:	add    esp,DWORD PTR [eax]
  4153c0:	or     BYTE PTR [edx+eax*8-0x1dbfd980],ah
  4153c7:	or     eax,0x46812e28
  4153cc:	push   eax
  4153cd:	or     eax,0xd7412c21
  4153d2:	xor    BYTE PTR [edx],al
  4153d4:	add    al,0xc1
  4153d6:	adc    esi,DWORD PTR [edx]
  4153d8:	inc    ebp
  4153d9:	adc    DWORD PTR [eax],0x9f004b05
  4153df:	mov    DWORD PTR cs:[ebp-0x15bc5ebe],eax
  4153e6:	add    BYTE PTR [eax+0x18648],ah
  4153ec:	jo     0x415402
  4153ee:	adc    BYTE PTR [ebx],ah
  4153f0:	mov    al,ds:0xa8012a84
  4153f5:	outs   dx,BYTE PTR ds:[esi]
  4153f6:	inc    eax
  4153f7:	call   0x549941c
  4153fc:	adc    BYTE PTR [esi+0x234b4908],ah
  415402:	add    BYTE PTR [ebx+0x222d044],al
  415408:	adc    BYTE PTR [edx],bl
  41540a:	cmp    cl,BYTE PTR [ebx+eax*2]
  41540d:	or     BYTE PTR [eax],ch
  41540f:	add    al,BYTE PTR [eax]
  415411:	inc    esp
  415412:	push   es
  415413:	push   eax
  415414:	mov    dl,0x0
  415416:	inc    ebp
  415417:	and    DWORD PTR [eax-0x80],esp
  41541a:	sub    dl,BYTE PTR [edx+eiz*8+0xc10040c]
  415421:	and    al,ah
  415423:	inc    eax
  415424:	and    BYTE PTR [eax-0x3c],dl
  415427:	xor    al,0x24
  415429:	rol    BYTE PTR [eax],cl
  41542b:	push   ds
  41542c:	or     ah,BYTE PTR [edi]
  41542e:	or     DWORD PTR [edx+0x24],eax
  415431:	mov    BYTE PTR [ebx+0x2c80010],bl
  415437:	cwde   
  415438:	or     dl,BYTE PTR [eax+0x7100465]
  41543e:	and    BYTE PTR [ecx],0x12
  415441:	inc    eax
  415442:	loopne 0x4153e1
  415444:	cmp    BYTE PTR [eax],dl
  415446:	popa   
  415447:	add    DWORD PTR [eax+esi*4-0x7f],eax
  41544b:	push   es
  41544c:	sbb    BYTE PTR [eax],al
  41544e:	adc    DWORD PTR [eax],eax
  415450:	or     dl,BYTE PTR [esi]
  415452:	inc    esp
  415453:	inc    ecx
  415454:	popf   
  415455:	and    al,0x40
  415457:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415458:	inc    esp
  415459:	mov    cl,BYTE PTR [eax+edx*1]
  41545c:	loop   0x4153e6
  41545e:	and    esp,DWORD PTR ds:0x50010028
  415464:	add    DWORD PTR [eax+eax*4],eax
  415467:	sbb    ch,0x0
  41546a:	(bad)  
  41546b:	pusha  
  41546c:	adc    BYTE PTR [eax],al
  41546e:	or     BYTE PTR [eax],ah
  415470:	ror    eax,0x1
  415473:	push   eax
  415474:	and    al,BYTE PTR [eax+eax*1]
  415477:	inc    edx
  415478:	adc    DWORD PTR [eax+eax*1+0x8],ebx
  41547c:	add    al,0x32
  41547e:	adc    BYTE PTR [ecx],ah
  415480:	inc    eax
  415481:	mov    BYTE PTR [edx+0x1],dl
  415484:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415485:	xor    BYTE PTR [edx],dl
  415487:	add    al,BYTE PTR [eax]
  415489:	adc    BYTE PTR [eax+0x0],al
  41548c:	push   0x2c402801
  415491:	add    BYTE PTR [eax+0x2c],al
  415494:	add    cl,BYTE PTR [ecx]
  415496:	and    dh,BYTE PTR [esi+0x140288a9]
  41549c:	mov    BYTE PTR ds:0x82004200,ah
  4154a2:	nop
  4154a3:	add    al,0x85
  4154a5:	add    BYTE PTR [eax],al
  4154a7:	rcr    BYTE PTR [eax+0x20],0x2
  4154ab:	sbb    BYTE PTR [edx],al
  4154ad:	inc    ecx
  4154ae:	sub    DWORD PTR [eax],ecx
  4154b0:	add    BYTE PTR [ebx+0x520dc00],ah
  4154b6:	xor    BYTE PTR [ecx-0x5f],dl
  4154b9:	inc    eax
  4154ba:	xor    al,0x50
  4154bc:	xor    DWORD PTR [eax],eax
  4154be:	or     BYTE PTR [eax+ebx*1-0x3fe78000],al
  4154c5:	add    eax,0xa00a0081
  4154ca:	sub    BYTE PTR [ecx+0x70a14a40],al
  4154d0:	and    al,0x0
  4154d2:	rol    BYTE PTR [esi],1
  4154d4:	or     BYTE PTR [ebx],al
  4154d6:	mov    DWORD PTR [edx+0x829a006],ecx
  4154dc:	dec    eax
  4154dd:	arpl   WORD PTR [ecx+eax*1],ax
  4154e0:	add    BYTE PTR [eax+eiz*4+0x216948],ah
  4154e7:	add    al,0x24
  4154e9:	add    dl,BYTE PTR [eax]
  4154eb:	and    dh,BYTE PTR [edx]
  4154ed:	xchg   ebx,eax
  4154ee:	add    eax,DWORD PTR [eax]
  4154f0:	call   0xb41a700
  4154f5:	mov    ds:0x40840013,eax
  4154fa:	xchg   edx,eax
  4154fb:	add    BYTE PTR [eax+eax*1],al
  4154fe:	adc    eax,DWORD PTR [edx]
  415500:	and    al,0x0
  415502:	mov    ds:0x19848310,eax
  415507:	add    BYTE PTR [esi],dh
  415509:	add    BYTE PTR [ecx],al
  41550b:	add    BYTE PTR [esi],0xa3
  41550e:	ins    DWORD PTR es:[edi],dx
  41550f:	lds    eax,FWORD PTR [eax+0x5034102]
  415515:	adc    dl,BYTE PTR [edx]
  415517:	or     dl,BYTE PTR [eax+ecx*8+0x54]
  41551b:	add    BYTE PTR [eax+0x10],al
  41551e:	and    BYTE PTR [ecx+0x51],ah
  415521:	add    BYTE PTR [edx+ecx*2+0x31],0xc
  415526:	and    BYTE PTR [eax],dl
  415528:	add    eax,0x2c008840
  41552d:	add    BYTE PTR [eax+0x231261],al
  415533:	and    edx,DWORD PTR [ecx-0x37fdbee2]
  415539:	or     eax,0x530c208
  41553e:	dec    ebp
  41553f:	push   es
  415540:	dec    eax
  415541:	add    BYTE PTR [ebx],al
  415543:	inc    edx
  415544:	dec    ecx
  415545:	loop   0x415587
  415547:	lods   al,BYTE PTR ds:[esi]
  415548:	and    al,0x3
  41554a:	test   BYTE PTR [edx+0x10c1b082],dh
  415550:	or     DWORD PTR [ecx+0x2],ebp
  415553:	jl     0x415595
  415555:	mov    BYTE PTR [ebx+0x2],bl
  415558:	xor    bl,BYTE PTR [eax+0x20]
  41555b:	inc    esp
  41555c:	push   es
  41555d:	add    BYTE PTR [ecx],ah
  41555f:	add    BYTE PTR [edx+0x12],al
  415562:	jl     0x4155a9
  415564:	push   0x68010c02
  415569:	push   ss
  41556a:	and    BYTE PTR [eax+0x12840103],cl
  415570:	add    DWORD PTR [eax+0x61],eax
  415573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415574:	mov    al,0x0
  415576:	or     DWORD PTR [ecx+0x28],ecx
  415579:	repnz retf 0x2540
  41557d:	add    BYTE PTR [eax+0x62],0x52
  415581:	inc    eax
  415582:	add    BYTE PTR [eax+0x60],dl
  415585:	les    eax,FWORD PTR [eax+0x8]
  415588:	adc    BYTE PTR [ebx],al
  41558a:	or     BYTE PTR [eax+ecx*4],dl
  41558d:	dec    eax
  41558e:	add    DWORD PTR [ebx],eax
  415590:	and    al,0x0
  415592:	and    DWORD PTR [edx],edi
  415594:	mov    BYTE PTR [eax],ch
  415596:	adc    BYTE PTR [eax],0x4e
  415599:	add    al,0x50
  41559b:	adc    ecx,DWORD PTR [ebx]
  41559d:	cmp    BYTE PTR [eax],al
  41559f:	and    BYTE PTR [edx],cl
  4155a1:	pusha  
  4155a2:	add    DWORD PTR [eax-0x61f62000],eax
  4155a8:	add    al,0x8
  4155aa:	add    BYTE PTR [eax],ah
  4155ac:	inc    eax
  4155ad:	inc    ecx
  4155ae:	or     esi,edx
  4155b0:	add    BYTE PTR [eax-0x80],0x20
  4155b4:	adc    BYTE PTR [eax],cl
  4155b6:	add    al,0xa9
  4155b8:	dec    ebx
  4155b9:	add    DWORD PTR [eax],ecx
  4155bb:	adc    al,BYTE PTR [eax-0x39]
  4155be:	and    al,BYTE PTR [ecx]
  4155c0:	xchg   DWORD PTR [edx+eax*2],eax
  4155c3:	push   es
  4155c4:	sbb    eax,0x80203040
  4155c9:	sbb    al,BYTE PTR [eax]
  4155cb:	and    BYTE PTR [eax],cl
  4155cd:	ror    BYTE PTR [ecx],cl
  4155cf:	rcl    BYTE PTR [eax],0x81
  4155d2:	add    BYTE PTR [edx],al
  4155d4:	add    al,0x0
  4155d6:	mov    DWORD PTR [edi],eax
  4155d8:	add    al,0x98
  4155da:	inc    eax
  4155db:	pusha  
  4155dc:	xor    al,0x0
  4155de:	aad    0x4
  4155e0:	mov    WORD PTR [edx+eax*1-0x80],es
  4155e4:	sub    BYTE PTR [eax],cl
  4155e6:	rcl    BYTE PTR [eax-0x78],1
  4155e9:	or     ah,BYTE PTR [ebx-0x76f3febd]
  4155ef:	pop    ss
  4155f0:	add    BYTE PTR [eax+0x402087aa],dl
  4155f6:	add    ecx,DWORD PTR [eax+eiz*1]
  4155f9:	adc    edx,DWORD PTR [ebx]
  4155fb:	and    al,0x24
  4155fd:	ret    0x200
  415600:	and    BYTE PTR [eax],0x11
  415603:	adc    DWORD PTR [ebp+0x1],0x48080608
  41560a:	and    DWORD PTR [eax],ebp
  41560c:	dec    edx
  41560d:	add    dh,BYTE PTR [ecx+edx*1]
  415610:	fs inc ecx
  415612:	or     al,0xe0
  415614:	or     BYTE PTR [ecx],cl
  415616:	add    BYTE PTR [eax-0x7feeff80],0xb0
  41561d:	mov    ds:0x6320100,al
  415622:	adc    BYTE PTR [ecx],cl
  415624:	inc    edx
  415625:	add    BYTE PTR [edx+edx*1+0x40],al
  415629:	add    ah,BYTE PTR [eax]
  41562b:	adc    DWORD PTR [eax+eax*1+0x408211c3],esp
  415632:	inc    edx
  415633:	and    al,0x1c
  415635:	or     al,BYTE PTR [edx]
  415637:	and    BYTE PTR [edx],cl
  415639:	xor    BYTE PTR [esi+edx*4+0x50],0x90
  41563e:	add    BYTE PTR cs:[esi],0x0
  415642:	rol    BYTE PTR [esp+eiz*4],1
  415645:	and    al,0x56
  415647:	add    BYTE PTR [edx],al
  415649:	or     BYTE PTR [eax+0x28],al
  41564c:	xchg   esp,eax
  41564d:	enter  0x8a4,0x80
  415651:	adc    BYTE PTR [eax],al
  415653:	inc    eax
  415654:	inc    esi
  415655:	mov    al,ds:0x3d20802
  41565a:	push   eax
  41565b:	or     BYTE PTR [edx+eax*2],al
  41565e:	xchg   ecx,eax
  41565f:	inc    eax
  415660:	or     al,0x6
  415662:	imul   ecx,DWORD PTR [ecx],0x10292010
  415668:	leave  
  415669:	add    ebp,DWORD PTR [eax+ebx*1]
  41566c:	and    BYTE PTR [ebx],dl
  41566e:	adc    BYTE PTR [edx+0x6305850],ah
  415674:	mov    BYTE PTR [edx],al
  415676:	and    al,0xf4
  415678:	and    ah,BYTE PTR [eax]
  41567a:	or     DWORD PTR [eax+ebx*1+0x2],eax
  41567e:	and    ah,cl
  415680:	push   es
  415681:	add    BYTE PTR [eax],0x42
  415684:	add    BYTE PTR [ebp+0x2],al
  415687:	sub    BYTE PTR [ecx+0x41070008],cl
  41568d:	cwde   
  41568e:	add    BYTE PTR [eax],0x20
  415691:	add    al,BYTE PTR [eax]
  415693:	adc    BYTE PTR [eax],0xc2
  415696:	add    BYTE PTR [edx+eax*1],al
  415699:	inc    ebp
  41569a:	inc    eax
  41569b:	rol    DWORD PTR [esi],0x50
  41569e:	add    BYTE PTR [edx],cl
  4156a0:	add    dl,BYTE PTR [eax+0x41]
  4156a3:	add    BYTE PTR [eax],0x40
  4156a6:	inc    eax
  4156a7:	add    BYTE PTR [eax+esi*1],al
  4156aa:	push   es
  4156ab:	or     BYTE PTR [ecx],al
  4156ad:	add    al,0x0
  4156af:	sbb    BYTE PTR [edx],cl
  4156b1:	rol    BYTE PTR [ecx],0x8
  4156b4:	ror    BYTE PTR [edx],0x0
  4156b7:	mov    BYTE PTR [eax],al
  4156b9:	and    BYTE PTR [eax],dl
  4156bb:	add    dh,BYTE PTR [eax]
  4156bd:	add    BYTE PTR [ecx],cl
  4156bf:	add    DWORD PTR [edx],eax
  4156c1:	mov    WORD PTR [eax],es
  4156c3:	add    dh,BYTE PTR [esi]
  4156c5:	or     BYTE PTR [eax],al
  4156c7:	test   BYTE PTR [eax],bh
  4156c9:	add    dl,BYTE PTR [eax]
  4156cb:	rol    BYTE PTR [edx],0xa
  4156ce:	add    BYTE PTR [edx],ah
  4156d0:	push   eax
  4156d1:	adc    eax,0x208900
  4156d6:	add    BYTE PTR [eax-0x74f7bfc0],bl
  4156dc:	add    al,0x4
  4156de:	add    BYTE PTR [ebx+edx*1],0x4
  4156e2:	mov    ah,0x5
  4156e4:	add    eax,0x82028922
  4156e9:	or     BYTE PTR [eax],0x0
  4156ec:	add    BYTE PTR [eax+0x50820100],cl
  4156f2:	add    BYTE PTR [edx],al
  4156f4:	adc    al,0x5
  4156f6:	and    BYTE PTR [eax],al
  4156f8:	add    dl,BYTE PTR [eax]
  4156fa:	add    al,BYTE PTR [eax]
  4156fc:	inc    eax
  4156fd:	mov    al,ds:0x62420401
  415702:	and    BYTE PTR [esi+0x14020022],al
  415708:	add    eax,0x400000
  41570d:	add    BYTE PTR [eax],al
  41570f:	pusha  
  415710:	or     BYTE PTR [eax],dl
  415712:	add    BYTE PTR [esi+0x9],al
  415715:	add    BYTE PTR [eax],cl
  415717:	add    al,cl
  415719:	rol    DWORD PTR [eax+edx*1],0x43
  41571d:	add    BYTE PTR [eax],0x82
  415720:	add    al,0x6
  415722:	add    BYTE PTR [eax],al
  415724:	inc    ebp
  415725:	sub    DWORD PTR [esi],eax
  415727:	add    eax,DWORD PTR [ecx]
  415729:	or     bh,BYTE PTR [ecx]
  41572b:	add    BYTE PTR [ecx+0x0],al
  41572e:	adc    ah,BYTE PTR [eax]
  415730:	add    BYTE PTR [eax-0x74fec73f],al
  415736:	test   BYTE PTR [eax],cl
  415738:	and    BYTE PTR [edx+0x16],0x84
  41573c:	add    ch,BYTE PTR [eax]
  41573e:	push   eax
  41573f:	inc    ecx
  415740:	and    dl,BYTE PTR [ecx]
  415742:	loopne 0x4156cf
  415744:	xor    BYTE PTR [edx+eax*1],al
  415747:	add    BYTE PTR [eax],cl
  415749:	add    BYTE PTR [ecx+eax*1],al
  41574c:	push   es
  41574d:	lods   al,BYTE PTR ds:[esi]
  41574e:	add    dh,bl
  415750:	and    DWORD PTR [eax+0x451aa011],eax
  415756:	add    BYTE PTR [eax+0x41010801],al
  41575c:	xchg   BYTE PTR [eax-0x7fb95efe],al
  415762:	xor    ah,0x40
  415765:	mov    dl,0xe
  415767:	add    BYTE PTR [eax-0x6ffffdf6],cl
  41576d:	add    BYTE PTR [eax],al
  41576f:	ret    
  415770:	add    BYTE PTR [ebx],al
  415772:	inc    eax
  415773:	push   ecx
  415774:	add    BYTE PTR [eax],cl
  415776:	sbb    BYTE PTR [eax],cl
  415778:	add    eax,0x8604000
  41577d:	add    bl,BYTE PTR [esi]
  41577f:	add    BYTE PTR [eax],al
  415781:	or     BYTE PTR [esi+0x40],al
  415784:	adc    al,BYTE PTR [eax]
  415786:	add    cl,dh
  415788:	and    BYTE PTR [eax+ecx*2],al
  41578b:	mov    al,ds:0x520102
  415790:	jmp    0x8528:0x62044850
  415797:	add    DWORD PTR [edx],edx
  415799:	inc    esi
  41579a:	add    BYTE PTR [edx],0x82
  41579d:	add    BYTE PTR [eax+edx*1],cl
  4157a0:	adc    al,BYTE PTR [eax+0x5400020]
  4157a6:	test   BYTE PTR [eax],dl
  4157a8:	aad    0x1
  4157aa:	loope  0x4157ac
  4157ac:	cmp    BYTE PTR [esi],ah
  4157ae:	lds    eax,FWORD PTR [eax+ecx*1+0x4e0208]
  4157b5:	add    BYTE PTR [ecx],al
  4157b7:	or     DWORD PTR [ecx+0x8],esp
  4157ba:	repnz test DWORD PTR [eax],eax
  4157bd:	inc    edx
  4157be:	add    bl,al
  4157c0:	add    BYTE PTR [ecx+0x2c],al
  4157c3:	inc    ecx
  4157c4:	add    BYTE PTR ds:0x40040010,0x1
  4157cb:	add    BYTE PTR [edi-0x80],al
  4157ce:	inc    ecx
  4157cf:	adc    al,0x2
  4157d1:	add    DWORD PTR [eax],esp
  4157d3:	add    BYTE PTR [edx+0x6a840100],al
  4157d9:	add    BYTE PTR [ecx],al
  4157db:	add    BYTE PTR ds:0x4600400,al
  4157e1:	add    BYTE PTR [ebp+0x0],al
  4157e4:	and    cl,BYTE PTR [eax+0x18]
  4157e7:	push   ecx
  4157e8:	and    al,BYTE PTR [edx]
  4157ea:	inc    ecx
  4157eb:	sbb    al,0x52
  4157ed:	add    dl,al
  4157ef:	test   BYTE PTR [edx+0x1],al
  4157f2:	xor    BYTE PTR [eax],al
  4157f4:	adc    ah,BYTE PTR [eax+eiz*1+0x30]
  4157f8:	inc    ebp
  4157f9:	loop   0x415803
  4157fb:	rcl    DWORD PTR [edx],0x2
  4157fe:	add    BYTE PTR [eax],0x48
  415801:	add    BYTE PTR [ebx+0x9201428],al
  415807:	sbb    BYTE PTR [eax+0x0],ah
  41580a:	add    BYTE PTR [eax+ecx*4+0x538888a],al
  415811:	adc    BYTE PTR [ecx],0x1
  415814:	add    cl,BYTE PTR [eax]
  415816:	inc    eax
  415817:	add    al,BYTE PTR [ecx]
  415819:	add    BYTE PTR [eax],al
  41581b:	add    BYTE PTR [eax+eax*4],ch
  41581e:	add    eax,0x230210
  415823:	inc    ebp
  415824:	sub    BYTE PTR [eax],al
  415826:	add    dl,al
  415828:	or     BYTE PTR [eax+0x1290209],cl
  41582e:	sub    al,BYTE PTR [edx]
  415830:	add    DWORD PTR [eax],eax
  415832:	test   eax,0x40009641
  415837:	add    al,0x8c
  415839:	pop    eax
  41583a:	add    DWORD PTR [ebp+0x0],0x50
  41583e:	and    BYTE PTR [eax],al
  415840:	cmp    BYTE PTR [edx+0x2],bl
  415843:	inc    esi
  415844:	push   cs
  415845:	add    ebx,DWORD PTR [eax]
  415847:	adc    al,0x80
  415849:	adc    BYTE PTR [eax],al
  41584b:	sub    al,0x4
  41584d:	or     dl,BYTE PTR [ebx+0x0]
  415850:	or     al,0x25
  415852:	push   es
  415853:	rol    BYTE PTR [eax+0x14404000],0x0
  41585a:	add    BYTE PTR [ecx+0x44],al
  41585d:	add    al,0xc6
  41585f:	add    BYTE PTR [eax],bh
  415861:	nop
  415862:	rol    DWORD PTR [eax],0x1
  415865:	add    al,0x34
  415867:	rol    DWORD PTR [ecx],0x1
  41586a:	inc    eax
  41586b:	sbb    al,BYTE PTR [eax]
  41586d:	adc    BYTE PTR [edx],bl
  41586f:	and    BYTE PTR [ebx],ah
  415871:	add    dl,BYTE PTR [ecx]
  415873:	add    DWORD PTR [eax],esp
  415875:	mov    eax,ds:0x1408000
  41587a:	inc    esi
  41587b:	add    DWORD PTR [ecx+0x4],edx
  41587e:	pusha  
  41587f:	dec    eax
  415880:	add    DWORD PTR [eax],eax
  415882:	and    eax,DWORD PTR [eax]
  415884:	dec    ecx
  415885:	push   eax
  415886:	adc    al,BYTE PTR [eax+0x49c14040]
  41588c:	push   ecx
  41588d:	sbb    ah,BYTE PTR [eax]
  41588f:	mov    eax,DWORD PTR [ebx]
  415891:	data16 add al,BYTE PTR [ecx]
  415894:	add    DWORD PTR [ebx+0x70],ebp
  415897:	add    DWORD PTR [eax],edx
  415899:	nop
  41589a:	cmp    DWORD PTR es:[ebx+0x30808202],ecx
  4158a1:	inc    ecx
  4158a2:	pop    ss
  4158a3:	sub    eax,0x108a308c
  4158a8:	inc    esp
  4158a9:	sbb    DWORD PTR [eax],eax
  4158ab:	add    BYTE PTR [eax],al
  4158ad:	mov    eax,eax
  4158af:	add    DWORD PTR [eax],ecx
  4158b1:	add    BYTE PTR [edx],ah
  4158b3:	imul   eax,DWORD PTR [ecx-0x5a],0x90004001
  4158ba:	push   eax
  4158bb:	inc    eax
  4158bc:	add    BYTE PTR [eax],dl
  4158be:	inc    eax
  4158bf:	dec    ecx
  4158c0:	or     BYTE PTR [eax-0x67a7bbfd],al
  4158c6:	nop
  4158c7:	adc    dh,BYTE PTR [ebp+0x104000f0]
  4158cd:	inc    ebx
  4158ce:	inc    esp
  4158cf:	add    BYTE PTR [eax],0x14
  4158d2:	add    BYTE PTR [eax],al
  4158d4:	adc    BYTE PTR [edi],al
  4158d6:	or     eax,0x22058040
  4158db:	adc    BYTE PTR [eax],al
  4158dd:	inc    esp
  4158de:	rol    BYTE PTR [eax],0x20
  4158e1:	inc    eax
  4158e2:	add    BYTE PTR [ecx+ecx*2+0x49c0008],al
  4158e9:	add    dl,BYTE PTR [ecx+0x4b202200]
  4158ef:	add    DWORD PTR [eax],eax
  4158f1:	add    eax,0x80a05202
  4158f6:	inc    edx
  4158f7:	pusha  
  4158f8:	add    BYTE PTR [eax+eax*1-0x2b],dl
  4158fc:	add    BYTE PTR [edx+0x0],al
  4158ff:	adc    al,BYTE PTR [eax]
  415901:	inc    ebp
  415902:	sbb    BYTE PTR [edx+ebx*1],al
  415905:	adc    eax,DWORD PTR [ecx+ecx*2-0x5e]
  415909:	test   al,0x80
  41590b:	push   0x80082058
  415910:	inc    ecx
  415911:	or     DWORD PTR [eax+ecx*2],eax
  415914:	dec    ebx
  415915:	or     BYTE PTR [ecx],al
  415917:	add    BYTE PTR [eax],al
  415919:	rol    DWORD PTR [eax],1
  41591b:	add    eax,0x80104a30
  415920:	add    BYTE PTR [ecx+0x4],al
  415923:	inc    edx
  415924:	or     BYTE PTR [eax],0x0
  415927:	add    BYTE PTR [ecx],al
  415929:	add    BYTE PTR [eax],al
  41592b:	add    BYTE PTR [ecx],al
  41592d:	add    BYTE PTR [eax],cl
  41592f:	add    cl,BYTE PTR [edx]
  415931:	adc    BYTE PTR [eax+0x10],0x90
  415935:	dec    esp
  415936:	add    cl,al
  415938:	or     al,BYTE PTR [edx+0x20]
  41593e:	push   ecx
  41593f:	shl    BYTE PTR [edx+0x40],0x2
  415943:	adc    esp,0x40004141
  415949:	inc    edx
  41594a:	xchg   ecx,eax
  41594b:	add    BYTE PTR [ecx],al
  41594d:	add    eax,0x28202030
  415952:	inc    eax
  415953:	inc    edx
  415954:	and    BYTE PTR [eax],al
  415956:	push   ebx
  415957:	add    BYTE PTR [eax+0x8400200],al
  41595d:	and    BYTE PTR [edx],al
  41595f:	and    eax,0xa0318141
  415964:	add    BYTE PTR [edx+eax*1],ch
  415967:	add    al,0x70
  415969:	sbb    eax,0x1c090080
  41596e:	or     BYTE PTR [ecx],al
  415970:	inc    esp
  415971:	add    al,0x80
  415973:	add    BYTE PTR ds:0x3984212,dl
  415979:	loope  0x41597b
  41597b:	xor    dh,BYTE PTR [eax]
  41597d:	add    BYTE PTR [eax],al
  41597f:	and    BYTE PTR [eax],al
  415981:	imul   eax,DWORD PTR [eax],0x42618824
  415987:	add    DWORD PTR [eax],0x2
  41598a:	mov    al,ds:0x200e1
  41598f:	and    BYTE PTR [eax-0x40],ah
  415992:	or     BYTE PTR ds:0x8b442042,dl
  415998:	add    BYTE PTR [eax],ah
  41599a:	and    dl,BYTE PTR [eax-0x7f]
  41599d:	shl    DWORD PTR ds:0x100c4340,0x5
  4159a4:	add    DWORD PTR [edx],esp
  4159a6:	add    DWORD PTR [eax],ecx
  4159a8:	add    BYTE PTR [ecx+0x40],al
  4159ab:	and    BYTE PTR [eax],cl
  4159ad:	ret    0x1000
  4159b0:	adc    BYTE PTR [edi],dl
  4159b2:	adc    BYTE PTR [eax+eiz*4+0x2810c00],bl
  4159b9:	add    cl,BYTE PTR [eax+0x0]
  4159bc:	adc    al,0xa3
  4159be:	inc    eax
  4159bf:	add    al,ah
  4159c1:	adc    BYTE PTR [ecx+0x22],ch
  4159c4:	adc    DWORD PTR [eax+eax*2],eax
  4159c7:	pusha  
  4159c8:	add    BYTE PTR [esi],al
  4159ca:	xor    BYTE PTR [eax],0x96
  4159cd:	mov    al,ds:0x88200
  4159d2:	rol    BYTE PTR [eax],1
  4159d4:	and    dh,BYTE PTR [eax+eax*1]
  4159d7:	add    cl,al
  4159d9:	dec    esp
  4159da:	add    al,BYTE PTR [eax]
  4159dc:	add    BYTE PTR [eax],al
  4159de:	add    BYTE PTR [eax],al
  4159e0:	or     BYTE PTR [ecx-0x6e],al
  4159e3:	or     BYTE PTR [eax],cl
  4159e5:	add    al,0x0
  4159e7:	and    BYTE PTR [eax],0xa2
  4159ea:	or     al,0x40
  4159ec:	add    BYTE PTR ds:0x109500a9,ch
  4159f2:	add    BYTE PTR [eax],cl
  4159f4:	add    dl,0x0
  4159f7:	add    cl,BYTE PTR [esi]
  4159f9:	adc    al,0x0
  4159fb:	add    BYTE PTR [eax+0x0],al
  4159fe:	inc    eax
  4159ff:	or     eax,0x25000210
  415a04:	add    DWORD PTR [eax],eax
  415a06:	adc    BYTE PTR [eax],al
  415a08:	xor    dl,BYTE PTR [eax]
  415a0a:	cmp    DWORD PTR [edx],esp
  415a0c:	adc    BYTE PTR [ecx+0x109c60c],0x92
  415a13:	add    al,BYTE PTR [eax+0x10]
  415a16:	inc    ecx
  415a17:	xchg   BYTE PTR [eax+0x218003c1],al
  415a1d:	add    al,0xdc
  415a1f:	adc    al,BYTE PTR [edx-0x7c]
  415a22:	add    DWORD PTR [eax],edx
  415a24:	inc    ecx
  415a25:	or     dl,BYTE PTR [ecx+0x0]
  415a28:	inc    eax
  415a29:	inc    eax
  415a2a:	adc    BYTE PTR [esp+eax*1],al
  415a2d:	sbb    BYTE PTR [eax],ch
  415a2f:	add    ah,BYTE PTR [eax+0x8a82001]
  415a35:	add    DWORD PTR [ecx+eax*2],eax
  415a38:	add    al,0x20
  415a3a:	inc    esp
  415a3b:	add    BYTE PTR [eax+0x42023102],cl
  415a41:	fld    QWORD PTR [eax+eax*4-0x7ffb5ffc]
  415a48:	add    BYTE PTR [esi],0x86
  415a4b:	adc    cl,BYTE PTR [eax]
  415a4d:	dec    esp
  415a4e:	inc    eax
  415a4f:	add    BYTE PTR [edx],al
  415a51:	sbb    BYTE PTR [eax],al
  415a53:	add    BYTE PTR [ebx-0x80],al
  415a56:	add    DWORD PTR [eax],eax
  415a58:	add    BYTE PTR [edx],al
  415a5a:	mov    al,0x2
  415a5c:	add    BYTE PTR [edx],cl
  415a5e:	adc    al,0x18
  415a61:	add    BYTE PTR [eax],dl
  415a63:	mov    eax,ds:0x11600100
  415a68:	and    al,0x1
  415a6a:	mov    BYTE PTR [eax],al
  415a6c:	adc    BYTE PTR [eax+0x0],al
  415a6f:	mov    al,ds:0x884046
  415a74:	adc    BYTE PTR [eax],al
  415a76:	inc    eax
  415a77:	add    BYTE PTR [eax],al
  415a79:	add    BYTE PTR [eax],al
  415a7b:	or     BYTE PTR [eax],ah
  415a7d:	add    BYTE PTR [ebp-0x7fd6f000],ah
  415a83:	add    BYTE PTR [edx],al
  415a85:	inc    eax
  415a86:	add    ch,ah
  415a88:	add    BYTE PTR [ecx],al
  415a8a:	bound  eax,QWORD PTR [eax]
  415a8c:	and    dl,BYTE PTR [ecx]
  415a8e:	push   es
  415a8f:	push   esi
  415a90:	mov    al,ds:0x200a0002
  415a95:	or     BYTE PTR [edx],0x40
  415a98:	or     DWORD PTR [eax+0x21044310],esp
  415a9e:	and    BYTE PTR [eax],al
  415aa0:	or     BYTE PTR [eax],0x30
  415aa3:	adc    DWORD PTR [ecx-0x70],esp
  415aa6:	shl    BYTE PTR [eax],0x0
  415aa9:	or     eax,0x810400e8
  415aae:	inc    edx
  415aaf:	add    BYTE PTR [eax],cl
  415ab1:	add    DWORD PTR [ebp+0x52020000],esp
  415ab7:	adc    dl,BYTE PTR [eax]
  415ab9:	add    cl,ah
  415abb:	jp     0x415abd
  415abd:	add    BYTE PTR [eax],ah
  415abf:	adc    al,BYTE PTR [edx]
  415ac1:	sub    al,0xe2
  415ac3:	sub    BYTE PTR [eax],dh
  415ac5:	add    BYTE PTR [eax],ch
  415ac7:	inc    eax
  415ac8:	push   esi
  415ac9:	adc    BYTE PTR [eax],al
  415acb:	add    BYTE PTR [eax],0x8
  415ace:	and    BYTE PTR [eax],al
  415ad0:	push   ecx
  415ad1:	sub    eax,0x801000c
  415ad6:	add    BYTE PTR [ecx],dl
  415ad8:	add    al,0x23
  415ada:	inc    ecx
  415adb:	add    BYTE PTR [eax+ebp*4-0x68],al
  415adf:	and    BYTE PTR [ecx+0x14],al
  415ae2:	adc    DWORD PTR [eax],esp
  415ae4:	xor    BYTE PTR [ebp+0x20100045],al
  415aea:	push   eax
  415aeb:	add    BYTE PTR [edx],al
  415aed:	pusha  
  415aee:	loopne 0x415b41
  415af0:	adc    BYTE PTR [ebx+eiz*1],ah
  415af3:	or     al,0x0
  415af5:	or     al,0x25
  415af7:	xor    al,0x8
  415af9:	adc    BYTE PTR [eax],al
  415afb:	add    DWORD PTR [eax],0x0
  415afe:	cwde   
  415aff:	or     BYTE PTR [edx-0x7d9e67ef],al
  415b05:	mov    BYTE PTR [ecx-0x5f],al
  415b08:	(bad)  
  415b09:	arpl   WORD PTR [ecx+eax*2],bx
  415b0c:	add    BYTE PTR [edx],cl
  415b0e:	inc    edx
  415b0f:	mov    eax,ds:0x30201360
  415b14:	or     BYTE PTR [edx],dh
  415b16:	add    BYTE PTR [eax+eax*1-0x70],cl
  415b1a:	add    BYTE PTR [eax],dh
  415b1c:	add    cl,BYTE PTR [ebx]
  415b1e:	add    DWORD PTR [ecx],edx
  415b20:	add    BYTE PTR [eax+0x40884171],al
  415b26:	add    cl,al
  415b28:	adc    DWORD PTR [eax+0x252200a],eax
  415b2e:	in     al,0x10
  415b30:	push   ebx
  415b31:	dec    eax
  415b32:	inc    eax
  415b33:	sbb    BYTE PTR [eax+eax*1],al
  415b36:	add    BYTE PTR [ecx],al
  415b38:	add    bl,BYTE PTR [ebx+0x43]
  415b3b:	add    al,0x2
  415b3d:	mov    ds:0x88482842,al
  415b42:	and    BYTE PTR [ecx+0x20],dl
  415b45:	les    ecx,FWORD PTR [ebx]
  415b47:	push   ss
  415b48:	test   eax,0xa0822083
  415b4d:	add    BYTE PTR [edx+eax*1-0x14],al
  415b51:	inc    ecx
  415b52:	add    DWORD PTR [eax],0x30660042
  415b58:	and    BYTE PTR [ebx],0x80
  415b5b:	add    BYTE PTR [edx-0x77ffdab8],bl
  415b61:	add    BYTE PTR [ebx+0x5],al
  415b64:	add    BYTE PTR [esp+eax*1],dl
  415b67:	add    DWORD PTR [eax],ebp
  415b69:	and    dl,BYTE PTR [edi+ecx*1+0x20]
  415b6d:	add    eax,eax
  415b6f:	and    al,BYTE PTR [esi]
  415b71:	sub    BYTE PTR [eax],al
  415b73:	or     BYTE PTR [eax],al
  415b75:	add    BYTE PTR [ebx],cl
  415b77:	adc    al,BYTE PTR [ecx+0x14414260]
  415b7d:	add    BYTE PTR [eax+0x63],cl
  415b80:	adc    BYTE PTR [edi+eax*4+0x20c404],dl
  415b87:	cmp    DWORD PTR [eax],eax
  415b89:	or     eax,0x2008100
  415b8e:	add    DWORD PTR [eax],esp
  415b90:	add    al,0x6
  415b92:	inc    esp
  415b93:	dec    esp
  415b94:	inc    eax
  415b95:	adc    BYTE PTR [ebp+0x180c0002],dh
  415b9b:	add    BYTE PTR [edx-0x29ff7fb2],ch
  415ba1:	push   es
  415ba2:	add    BYTE PTR [eax+eiz*1],0x22
  415ba6:	enter  0x8e,0x6
  415baa:	add    BYTE PTR [esp+ebp*1],al
  415bad:	shl    DWORD PTR [eax+0x0],1
  415bb0:	add    BYTE PTR [eax],cl
  415bb2:	add    BYTE PTR [eax-0x7c],al
  415bb5:	adc    al,BYTE PTR [edx-0x80]
  415bb8:	inc    ecx
  415bb9:	add    al,0x0
  415bbb:	add    BYTE PTR ds:0x20a6a200,ah
  415bc1:	sub    BYTE PTR [eax+0x0],al
  415bc4:	or     al,BYTE PTR [ecx]
  415bc6:	add    dl,BYTE PTR [ecx-0x3fb6ff6e]
  415bcc:	add    cl,ah
  415bce:	add    BYTE PTR [edx],al
  415bd0:	add    BYTE PTR [eax+0x2402],al
  415bd6:	add    BYTE PTR [eax],al
  415bd8:	pop    eax
  415bd9:	add    BYTE PTR [eax],al
  415bdb:	add    BYTE PTR [ecx-0x78],0x48
  415bdf:	and    cl,dl
  415be1:	xchg   esp,eax
  415be2:	add    BYTE PTR [eax],al
  415be4:	adc    al,BYTE PTR [eax]
  415be6:	mov    eax,DWORD PTR gs:[eax]
  415be9:	and    BYTE PTR [ecx],al
  415beb:	mov    al,ds:0x25510078
  415bf0:	test   BYTE PTR [eax],cl
  415bf2:	xchg   ecx,eax
  415bf3:	push   esp
  415bf4:	inc    ebx
  415bf5:	xchg   edx,eax
  415bf6:	add    BYTE PTR [ecx],al
  415bf8:	pop    ebx
  415bf9:	add    DWORD PTR [eax],eax
  415bfb:	add    BYTE PTR [ebp+0x0],dh
  415bfe:	and    dl,BYTE PTR [ebx]
  415c00:	pop    eax
  415c01:	inc    eax
  415c02:	xor    BYTE PTR [eax+0x4000200],ah
  415c08:	and    cl,BYTE PTR [eax]
  415c0a:	stos   DWORD PTR es:[edi],eax
  415c0b:	adc    DWORD PTR [eax],eax
  415c0d:	mov    ds:0x380063,al
  415c12:	loop   0x415c38
  415c14:	add    al,0x10
  415c16:	or     BYTE PTR [ecx],ah
  415c18:	or     al,0x8
  415c1a:	add    BYTE PTR [eax],al
  415c1c:	push   es
  415c1d:	int    0x8
  415c1f:	inc    esp
  415c20:	mov    ds:0xc20c2,eax
  415c25:	adc    eax,0x88122041
  415c2a:	add    BYTE PTR [eax],0x20
  415c2d:	add    al,BYTE PTR ds:0x24014800
  415c33:	add    BYTE PTR [eax-0x79],al
  415c36:	adc    DWORD PTR [eax],edx
  415c38:	add    BYTE PTR [eax+0x104531c1],al
  415c3e:	inc    eax
  415c3f:	add    BYTE PTR [eax],cl
  415c41:	rol    BYTE PTR [eax],0x10
  415c44:	add    eax,DWORD PTR [eax]
  415c46:	add    al,0x0
  415c48:	lea    eax,[edx]
  415c4a:	adc    al,0x80
  415c4c:	push   edx
  415c4d:	push   eax
  415c4e:	rol    DWORD PTR [eax],0x43
  415c51:	add    ch,BYTE PTR [eax+0x30]
  415c54:	add    eax,0xc6000880
  415c59:	adc    BYTE PTR [ecx],cl
  415c5b:	adc    BYTE PTR [eax],cl
  415c5d:	or     DWORD PTR [esi],0x20640960
  415c63:	mov    ds:0x452c0822,eax
  415c68:	add    BYTE PTR [esp+esi*4],al
  415c6b:	or     BYTE PTR [ecx],al
  415c6d:	inc    ecx
  415c6e:	add    DWORD PTR [eax+eax*1],ebp
  415c71:	add    DWORD PTR [eax],ecx
  415c73:	pop    eax
  415c74:	adc    BYTE PTR [eax],ah
  415c76:	mov    BYTE PTR [eax],al
  415c78:	inc    edx
  415c79:	add    DWORD PTR [ebp+0x54104],eax
  415c7f:	add    BYTE PTR [eax],0x34
  415c82:	add    BYTE PTR [eax],0x10
  415c85:	add    DWORD PTR [ecx],ecx
  415c87:	add    BYTE PTR [eax],ah
  415c89:	loop   0x415c90
  415c8b:	add    BYTE PTR [eax],cl
  415c8d:	add    BYTE PTR [eax],ah
  415c8f:	add    DWORD PTR [ecx],eax
  415c91:	inc    eax
  415c92:	add    BYTE PTR [eax+ebx*2],0x0
  415c96:	or     al,BYTE PTR [eax]
  415c98:	adc    BYTE PTR [eax+0x8b402],al
  415c9e:	or     al,BYTE PTR [eax]
  415ca0:	add    al,0x0
  415ca2:	adc    BYTE PTR [ecx+0x51],0x46
  415ca6:	or     bl,ah
  415ca8:	add    cl,BYTE PTR [eax+0x204f8123]
  415cae:	add    BYTE PTR [eax-0x6dafcfe0],cl
  415cb4:	nop
  415cb5:	and    BYTE PTR [eax],ah
  415cb7:	and    BYTE PTR [edx],ah
  415cb9:	or     cl,BYTE PTR [eax]
  415cbb:	add    BYTE PTR [eax+eax*2],al
  415cbe:	add    DWORD PTR [eax+0x44],eax
  415cc1:	in     al,dx
  415cc2:	or     BYTE PTR [edx],dh
  415cc4:	add    BYTE PTR [eax],ch
  415cc6:	and    BYTE PTR [eax+0x42],al
  415cc9:	xor    BYTE PTR [ecx],al
  415ccb:	add    al,0x40
  415ccd:	inc    esp
  415cce:	xor    DWORD PTR [esp+ecx*1],eax
  415cd1:	xchg   ebp,eax
  415cd2:	add    BYTE PTR [eax],al
  415cd4:	push   esp
  415cd5:	or     BYTE PTR [ebx+0x0],cl
  415cd8:	push   eax
  415cd9:	jb     0x415cdb
  415cdb:	add    BYTE PTR [eax],0x4c
  415cde:	add    DWORD PTR [eax],eax
  415ce0:	adc    BYTE PTR [edx-0x3fffffbc],al
  415ce6:	add    eax,0x21422111
  415ceb:	add    DWORD PTR [edx+0x0],ecx
  415cee:	mov    WORD PTR [esi],es
  415cf0:	add    BYTE PTR [eax+0x40],al
  415cf3:	xor    ecx,DWORD PTR [edx]
  415cf5:	adc    BYTE PTR [eax],0x21
  415cf8:	inc    eax
  415cf9:	add    al,0xc
  415cfb:	inc    esp
  415cfc:	add    BYTE PTR [eax],dl
  415cfe:	and    al,BYTE PTR [ecx+0x20c02803]
  415d04:	and    al,BYTE PTR [eax]
  415d06:	or     DWORD PTR [edx+eax*1],ebp
  415d09:	mov    BYTE PTR [ecx+0x64],al
  415d0c:	add    BYTE PTR [eax+ebx*1],ah
  415d0f:	push   es
  415d10:	adc    DWORD PTR ds:0x43411110,edx
  415d16:	add    BYTE PTR [eax],0x5
  415d19:	add    DWORD PTR [eax],eax
  415d1b:	add    DWORD PTR [eax+0x10c00c],eax
  415d21:	adc    dh,BYTE PTR [eax+ecx*1]
  415d24:	arpl   WORD PTR [eax],ax
  415d26:	sbb    BYTE PTR [esi],al
  415d28:	mov    BYTE PTR [eax+0x25],al
  415d2b:	add    BYTE PTR [eax],al
  415d2d:	add    BYTE PTR [ebp+0x2112820],0x8
  415d34:	inc    edx
  415d35:	add    BYTE PTR [eax],cl
  415d37:	add    al,BYTE PTR [eax+0x48000c8]
  415d3d:	or     BYTE PTR [ecx],0x48
  415d40:	add    DWORD PTR [esp+ecx*1+0x48100080],ebp
  415d47:	loope  0x415d4b
  415d49:	add    BYTE PTR [eax-0xd],al
  415d4c:	add    BYTE PTR [ecx],cl
  415d4e:	push   edi
  415d4f:	and    DWORD PTR [eax],ecx
  415d51:	add    eax,0xc128
  415d56:	or     BYTE PTR [esi],0x2
  415d59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d5a:	or     al,BYTE PTR [eax]
  415d5c:	push   ecx
  415d5d:	add    al,0x43
  415d5f:	add    bl,BYTE PTR [ecx+0xa]
  415d62:	adc    BYTE PTR [esp+ecx*2],al
  415d65:	inc    edx
  415d66:	or     BYTE PTR [edx],al
  415d68:	nop
  415d69:	adc    BYTE PTR [edx],al
  415d6b:	test   al,0x90
  415d6d:	add    BYTE PTR [ecx-0x7fadeabf],al
  415d73:	mov    BYTE PTR [ecx+0x0],al
  415d76:	test   DWORD PTR [eax],ecx
  415d78:	inc    ebp
  415d79:	add    al,BYTE PTR [edx]
  415d7b:	adc    eax,0x80260501
  415d80:	add    BYTE PTR ds:0xa448001,al
  415d86:	xchg   edx,eax
  415d87:	and    DWORD PTR [ecx],0x2201d
  415d8d:	adc    BYTE PTR [esi],0x61
  415d90:	add    DWORD PTR [eax+eiz*1+0x28430888],ecx
  415d97:	or     al,0x11
  415d99:	add    BYTE PTR [eax],dh
  415d9b:	and    BYTE PTR [eax-0x7fffb6f8],cl
  415da1:	inc    eax
  415da2:	mov    al,ds:0x41057220
  415da7:	add    DWORD PTR [eax],eax
  415da9:	inc    eax
  415daa:	or     BYTE PTR [ecx-0x77fffbcd],dh
  415db0:	or     BYTE PTR [eax+0x10],0xc1
  415db4:	or     al,al
  415db6:	add    BYTE PTR [eax+0xe],al
  415db9:	xchg   ecx,eax
  415dba:	add    bl,BYTE PTR [eax+eiz*1+0xc01a281]
  415dc1:	test   eax,0x8b800208
  415dc6:	inc    ecx
  415dc7:	add    BYTE PTR [edx+0x47410080],bl
  415dcd:	mov    eax,ds:0x10000082
  415dd2:	add    DWORD PTR [ecx+0x4008042],0x41400016
  415ddc:	add    DWORD PTR [eax+0x500007c],eax
  415de2:	add    eax,0x81480c30
  415de7:	imul   eax,edx,0x1
  415dea:	mov    BYTE PTR [eax],ah
  415dec:	add    BYTE PTR [eax+0x2a101808],al
  415df2:	add    BYTE PTR [eax],al
  415df4:	inc    esp
  415df5:	add    BYTE PTR [eax],cl
  415df7:	add    al,BYTE PTR [edx+0x20]
  415dfa:	add    al,BYTE PTR [edx+0x140800c0]
  415e00:	adc    eax,0xe0010400
  415e05:	add    BYTE PTR [ecx],al
  415e07:	rcr    BYTE PTR [eax-0x3de40000],1
  415e0d:	or     al,BYTE PTR [eax]
  415e0f:	or     eax,0x51880580
  415e14:	mov    esp,DWORD PTR [ebx-0x3c]
  415e17:	xchg   BYTE PTR [ecx],bh
  415e19:	sbb    BYTE PTR ds:0x41128938,0x0
  415e20:	pop    eax
  415e21:	adc    BYTE PTR [eax],ch
  415e23:	or     BYTE PTR [eax],dl
  415e25:	enter  0x2842,0xc
  415e29:	or     BYTE PTR [eax],ch
  415e2b:	add    BYTE PTR [eax],al
  415e2d:	add    BYTE PTR [eax+0xb2a0280],dl
  415e33:	add    cl,BYTE PTR [eax]
  415e35:	or     DWORD PTR [eax-0x5e],eax
  415e38:	and    DWORD PTR [eax],edi
  415e3a:	adc    BYTE PTR [eax],dh
  415e3c:	xor    al,BYTE PTR [ecx+0x530c]
  415e42:	add    DWORD PTR [eax],0xc121040e
  415e48:	add    BYTE PTR [esi],al
  415e4a:	add    eax,0x41422004
  415e4f:	inc    eax
  415e50:	add    BYTE PTR [eax],0x4
  415e53:	add    BYTE PTR [eax],al
  415e55:	add    al,0x0
  415e57:	leave  
  415e58:	add    BYTE PTR [eax],al
  415e5a:	adc    BYTE PTR [eax],0x80
  415e5d:	and    cl,BYTE PTR [eax]
  415e5f:	add    BYTE PTR [eax+0x1],al
  415e62:	and    al,0x10
  415e64:	add    BYTE PTR ds:0xa2000001,dl
  415e6a:	inc    edx
  415e6b:	add    BYTE PTR [edx-0x5f],al
  415e6e:	inc    ebp
  415e6f:	dec    esp
  415e70:	and    BYTE PTR [eax+0x63],al
  415e73:	dec    edx
  415e74:	inc    ecx
  415e75:	add    BYTE PTR [edx-0x20],bl
  415e78:	add    DWORD PTR [eax],0x0
  415e7b:	inc    eax
  415e7c:	add    edi,DWORD PTR [ecx+0x26104000]
  415e82:	add    BYTE PTR [ecx+eax*1],al
  415e85:	adc    DWORD PTR [eax+0x10412201],eax
  415e8b:	inc    eax
  415e8c:	add    BYTE PTR [eax],al
  415e8e:	xchg   BYTE PTR [eax],al
  415e90:	and    al,dl
  415e92:	inc    edx
  415e93:	enter  0xa094,0x90
  415e97:	or     DWORD PTR [eax],eax
  415e99:	add    al,0xc1
  415e9b:	shl    DWORD PTR [eax+0x12498000],0x40
  415ea2:	add    BYTE PTR [edx],ah
  415ea4:	adc    BYTE PTR [eax],al
  415ea6:	dec    ebx
  415ea7:	push   es
  415ea8:	adc    DWORD PTR [eax],eax
  415eaa:	pusha  
  415eab:	sbb    DWORD PTR [eax],0x40041208
  415eb1:	add    BYTE PTR [ecx+0x8],0x1
  415eb5:	push   esp
  415eb6:	adc    BYTE PTR [eax],al
  415eb8:	or     BYTE PTR [eax],cl
  415eba:	add    BYTE PTR [eax],al
  415ebc:	or     DWORD PTR fs:[eax],eax
  415ebf:	add    edx,DWORD PTR [ebx-0x74fffdbd]
  415ec5:	add    BYTE PTR [eax-0x7e],al
  415ec8:	and    BYTE PTR [eax],al
  415eca:	add    al,BYTE PTR [eax]
  415ecc:	mov    al,ds:0x21044001
  415ed1:	test   DWORD PTR [eax],eax
  415ed3:	adc    BYTE PTR [edx],ah
  415ed5:	rcr    BYTE PTR [eax+0x41],cl
  415ed8:	add    BYTE PTR [edx-0x7afbbe00],al
  415ede:	add    DWORD PTR [ecx],eax
  415ee0:	dec    eax
  415ee1:	add    cl,al
  415ee3:	retf   
  415ee4:	or     BYTE PTR [eax],dl
  415ee6:	add    al,BYTE PTR [eax]
  415ee8:	adc    BYTE PTR [eax+0x20098010],al
  415eee:	add    BYTE PTR [eax+ecx*1],al
  415ef1:	add    BYTE PTR [esp],al
  415ef4:	add    DWORD PTR [eax],eax
  415ef6:	cli    
  415ef7:	inc    ecx
  415ef8:	add    eax,DWORD PTR [eax+eax*2+0x40200803]
  415eff:	or     BYTE PTR [eax-0x7fdfffbc],dh
  415f05:	inc    eax
  415f06:	and    al,0x26
  415f08:	or     BYTE PTR [eax],cl
  415f0a:	add    BYTE PTR ds:0x828d6106,al
  415f10:	add    bh,BYTE PTR [eax]
  415f12:	or     dl,BYTE PTR [eax+eax*2]
  415f15:	add    DWORD PTR [eax],0x8102120
  415f1b:	add    al,BYTE PTR [edx+0x20080202]
  415f21:	aam    0x95
  415f23:	or     BYTE PTR [eax],al
  415f25:	add    BYTE PTR [ebx+0x40000b02],dh
  415f2b:	add    BYTE PTR [eax+0xa],al
  415f2e:	add    BYTE PTR [ecx-0x40],al
  415f31:	and    BYTE PTR [eax+0x80c800],al
  415f37:	add    BYTE PTR [ecx],al
  415f39:	push   ecx
  415f3a:	xchg   BYTE PTR [ecx+0x1000001],cl
  415f40:	ret    
  415f41:	inc    eax
  415f42:	or     al,0x18
  415f44:	add    BYTE PTR [eax],al
  415f46:	add    BYTE PTR [esi+0x23],al
  415f49:	add    BYTE PTR [eax+0x9],al
  415f4c:	inc    eax
  415f4d:	xchg   ecx,eax
  415f4e:	add    BYTE PTR [esi],al
  415f50:	sbb    BYTE PTR [eax],bl
  415f52:	test   al,cl
  415f54:	add    BYTE PTR [eax+0x60a0b001],0x0
  415f5b:	xor    BYTE PTR [eax+0x10],al
  415f5e:	sub    BYTE PTR [eax],al
  415f60:	mov    al,ss:0xc400
  415f66:	inc    edx
  415f67:	add    ch,al
  415f69:	or     BYTE PTR [eax],al
  415f6b:	add    BYTE PTR [eax],al
  415f6d:	or     cl,BYTE PTR [ecx+0x5]
  415f70:	adc    BYTE PTR [eax],ah
  415f72:	add    BYTE PTR [eax],al
  415f74:	add    BYTE PTR [eax],0x21
  415f77:	add    al,BYTE PTR [eax+0x4d902c01]
  415f7d:	add    BYTE PTR [eax],ah
  415f7f:	add    al,BYTE PTR [eax]
  415f81:	adc    BYTE PTR [edx+0x10],al
  415f84:	add    BYTE PTR ds:0x8c002205,ch
  415f8a:	add    al,al
  415f8c:	inc    eax
  415f8d:	and    BYTE PTR [eax],0x82
  415f90:	cmp    ecx,DWORD PTR [ecx]
  415f92:	add    BYTE PTR [ecx],al
  415f94:	and    BYTE PTR [eax],0x40
  415f97:	shl    BYTE PTR [edx],1
  415f99:	or     BYTE PTR [ecx+ecx*1],dl
  415f9c:	add    ecx,DWORD PTR ds:0x4b20304
  415fa2:	inc    eax
  415fa3:	xor    dl,BYTE PTR [eax]
  415fa5:	add    BYTE PTR [ecx+0x8528c02],al
  415fab:	inc    eax
  415fac:	add    al,BYTE PTR [eax]
  415fae:	add    DWORD PTR [eax],esp
  415fb0:	inc    ecx
  415fb1:	add    BYTE PTR [edx],cl
  415fb3:	inc    eax
  415fb4:	mov    ds:0x41301020,eax
  415fb9:	int3   
  415fba:	add    dl,BYTE PTR [eax]
  415fbc:	add    BYTE PTR [eax-0x3e],ah
  415fbf:	shl    BYTE PTR [ebx+0x20],0x2
  415fc3:	pusha  
  415fc4:	and    ah,BYTE PTR [eax+ecx*1+0x40]
  415fc8:	or     BYTE PTR [eax],al
  415fca:	push   es
  415fcb:	adc    BYTE PTR [eax],al
  415fcd:	pusha  
  415fce:	inc    ecx
  415fcf:	add    BYTE PTR [eax+0x1211540],ah
  415fd5:	push   edi
  415fd6:	adc    BYTE PTR [eax],ah
  415fd8:	or     BYTE PTR [eax+0x4000018],cl
  415fde:	push   eax
  415fdf:	add    BYTE PTR [eax],ch
  415fe1:	test   al,0x0
  415fe3:	add    DWORD PTR [esp+ebp*2],eax
  415fe6:	add    al,BYTE PTR [ecx]
  415fe8:	inc    ecx
  415fe9:	add    BYTE PTR [eax+0x0],al
  415fec:	adc    BYTE PTR [edx],ch
  415fee:	add    BYTE PTR [ecx-0x7f],al
  415ff1:	add    BYTE PTR [edx],al
  415ff3:	add    BYTE PTR [eax+0x41],al
  415ff6:	add    BYTE PTR [ecx],0x2
  415ff9:	and    BYTE PTR [eax],al
  415ffb:	inc    edx
  415ffc:	add    BYTE PTR [eax],al
  415ffe:	or     BYTE PTR [eax],cl
  416000:	add    al,BYTE PTR [eax+0x2000010]
  416006:	and    al,0x48
  416008:	adc    eax,DWORD PTR [esi]
  41600a:	cmp    cl,BYTE PTR [eax]
  41600c:	dec    ebx
  41600d:	or     BYTE PTR [eax],cl
  41600f:	add    BYTE PTR [edx],al
  416011:	pop    ecx
  416012:	add    BYTE PTR [ebx],al
  416014:	push   edx
  416015:	or     BYTE PTR [eax],ah
  416017:	inc    eax
  416018:	add    ecx,eax
  41601a:	nop
  41601b:	inc    edx
  41601c:	inc    ecx
  41601d:	add    BYTE PTR ds:0xc24849,cl
  416023:	adc    BYTE PTR [edx],0x2
  416026:	add    ebp,DWORD PTR [eax]
  416028:	inc    edx
  416029:	inc    eax
  41602a:	add    BYTE PTR [ebx+0x70],dl
  41602d:	push   esp
  41602e:	mov    ds:0x4000c0,al
  416033:	or     al,0x40
  416035:	add    al,0x4
  416037:	xor    BYTE PTR [eax],al
  416039:	mov    BYTE PTR [eax+eiz*1],al
  41603c:	add    BYTE PTR [eax+eax*1],cl
  41603f:	fs inc ecx
  416041:	add    ah,BYTE PTR [eax-0x7e]
  416044:	xor    dl,BYTE PTR [ecx]
  416046:	adc    BYTE PTR [eax],0x8
  416049:	and    BYTE PTR [eax],dl
  41604b:	inc    esp
  41604c:	add    BYTE PTR [eax+eax*2],al
  41604f:	nop
  416050:	xor    ah,BYTE PTR [eax+eax*1]
  416053:	and    al,0x0
  416055:	add    BYTE PTR [eax],cl
  416057:	inc    eax
  416058:	add    BYTE PTR [eax],ah
  41605a:	and    BYTE PTR [eax+0x62],al
  41605d:	stos   BYTE PTR es:[edi],al
  41605e:	nop
  41605f:	dec    ecx
  416060:	or     al,BYTE PTR [eax]
  416062:	sub    DWORD PTR [eax+eax*2],esp
  416065:	mov    BYTE PTR [eax],dl
  416067:	cs push cs
  416069:	and    al,0x60
  41606b:	add    BYTE PTR [eax],al
  41606d:	and    BYTE PTR [eax-0x78],cl
  416070:	xchg   esi,eax
  416071:	bound  edx,QWORD PTR [eax+0x8]
  416074:	and    DWORD PTR ds:0xc1022,0x91140882
  41607e:	or     ah,BYTE PTR ds:0x82048820
  416084:	inc    eax
  416085:	add    BYTE PTR [ebx-0x3f],dl
  416088:	bound  esp,QWORD PTR [ecx+eax*2+0x26]
  41608c:	mov    ds:0x50100462,al
  416091:	add    BYTE PTR [eax+0x1141a241],al
  416097:	add    BYTE PTR [eax],al
  416099:	sbb    DWORD PTR [eax],eax
  41609b:	and    al,0x20
  41609d:	mov    WORD PTR [eax+eax*1],fs
  4160a0:	popa   
  4160a1:	inc    eax
  4160a2:	add    BYTE PTR [eax],al
  4160a4:	push   edx
  4160a5:	popa   
  4160a6:	add    al,0x88
  4160a8:	or     BYTE PTR ds:0x42841f5,cl
  4160ae:	inc    eax
  4160af:	sbb    DWORD PTR [esp+eax*1],ecx
  4160b2:	inc    ecx
  4160b3:	add    BYTE PTR [eax],al
  4160b5:	cmp    DWORD PTR [eax+0x0],eax
  4160b8:	add    BYTE PTR [eax],0x0
  4160bb:	pop    es
  4160bc:	add    BYTE PTR [eax],dl
  4160be:	adc    BYTE PTR [eax],al
  4160c0:	and    DWORD PTR [eax+eax*1],ecx
  4160c3:	add    DWORD PTR [ebx],0x870000
  4160c9:	test   BYTE PTR [eax],ah
  4160cb:	add    ah,BYTE PTR [eax]
  4160cd:	or     dl,al
  4160cf:	add    DWORD PTR [edx+0x3020218],ebx
  4160d5:	push   0x0
  4160d7:	add    BYTE PTR [eax+0x440900d],al
  4160dd:	or     al,0x90
  4160df:	add    ah,al
  4160e1:	add    DWORD PTR [eax],eax
  4160e3:	or     BYTE PTR [ebp+0x9],al
  4160e6:	pusha  
  4160e7:	add    BYTE PTR [ebx],al
  4160e9:	add    DWORD PTR [eax],eax
  4160eb:	or     al,0x20
  4160ed:	and    BYTE PTR [eax],0x18
  4160f0:	add    BYTE PTR [eax+0x400000],cl
  4160f6:	add    DWORD PTR [ecx+0x9],eax
  4160f9:	mov    eax,ds:0xd95c0c0b
  4160fe:	aaa    
  4160ff:	pop    esp
  416100:	add    BYTE PTR [ebx+0x0],al
  416103:	xor    BYTE PTR [ecx+0x0],al
  416106:	jecxz  0x416128
  416108:	mov    al,ds:0x42420101
  41610d:	add    BYTE PTR [edx+0x20],cl
  416110:	gs inc edx
  416112:	add    eax,DWORD PTR [ecx]
  416114:	add    DWORD PTR [ecx+ecx*2],0xd
  416118:	add    BYTE PTR [esi],al
  41611a:	sub    al,0x44
  41611c:	adc    al,BYTE PTR [eax]
  41611e:	or     BYTE PTR [eax],al
  416120:	add    BYTE PTR [edx],dh
  416122:	or     BYTE PTR [eax+0x833000],al
  416128:	add    al,0x2
  41612a:	inc    ecx
  41612b:	add    DWORD PTR [eax],0x4
  41612e:	add    BYTE PTR [edx],al
  416130:	add    BYTE PTR [eax],ah
  416132:	add    BYTE PTR [ecx-0x7e],al
  416135:	dec    ecx
  416136:	add    BYTE PTR [eax],al
  416138:	add    BYTE PTR [eax],0x20
  41613b:	add    BYTE PTR [eax+edi*1+0x3002041],al
  416142:	and    BYTE PTR [eax],ah
  416144:	add    BYTE PTR [eax],bl
  416146:	or     BYTE PTR [ecx+0x1341000],al
  41614c:	inc    eax
  41614d:	inc    ecx
  41614e:	inc    edx
  41614f:	inc    edx
  416150:	add    BYTE PTR [eax-0x3d],al
  416153:	and    BYTE PTR [eax-0x7fb6dfce],ch
  416159:	add    ah,BYTE PTR [ecx]
  41615b:	mov    BYTE PTR [eax+ecx*1-0x3cf9c7f0],al
  416162:	add    eax,0x401
  416167:	aam    0xf
  416169:	inc    eax
  41616a:	and    al,0x82
  41616c:	add    BYTE PTR [edx],al
  41616e:	dec    eax
  41616f:	push   edx
  416170:	mov    BYTE PTR [ecx],al
  416172:	inc    eax
  416173:	add    DWORD PTR [edx+eax*2],eax
  416176:	and    BYTE PTR [eax],al
  416178:	add    BYTE PTR [eax],ah
  41617a:	push   esi
  41617b:	add    al,BYTE PTR [eax]
  41617d:	xor    BYTE PTR [edx],cl
  41617f:	add    BYTE PTR [ebx],al
  416181:	inc    eax
  416182:	and    DWORD PTR [eax],ebp
  416184:	and    BYTE PTR [eax],cl
  416186:	and    al,0x60
  416188:	adc    BYTE PTR [eax],0x77
  41618b:	sub    dl,BYTE PTR [eax]
  41618d:	add    DWORD PTR [eax],eax
  41618f:	or     BYTE PTR [ecx],al
  416191:	push   edx
  416192:	mov    DWORD PTR [edx+0x18],eax
  416195:	nop
  416196:	add    BYTE PTR [eax],dl
  416198:	or     BYTE PTR [eax],0x12
  41619b:	add    ah,BYTE PTR [eax+eiz*4]
  41619e:	add    BYTE PTR [ecx-0x3c],dl
  4161a1:	and    DWORD PTR [edx+0x8000000],eax
  4161a7:	add    BYTE PTR [ecx+0x1],al
  4161aa:	rol    DWORD PTR [eax],0x14
  4161ad:	and    BYTE PTR [eax+0x916130],al
  4161b3:	and    BYTE PTR [edx],0x79
  4161b6:	add    BYTE PTR [eax+eiz*1],al
  4161b9:	mov    ah,0x0
  4161bb:	inc    eax
  4161bc:	or     BYTE PTR [ebp+0x4],dl
  4161bf:	sub    BYTE PTR [eax],dh
  4161c1:	xor    BYTE PTR [eax+0x266204],al
  4161c7:	xor    al,0x49
  4161c9:	adc    ch,dl
  4161cb:	add    al,0x3a
  4161cd:	add    BYTE PTR [eax-0x80],al
  4161d0:	adc    cl,dl
  4161d2:	add    DWORD PTR [edx],eax
  4161d4:	inc    eax
  4161d5:	add    al,0x2d
  4161d7:	add    BYTE PTR [ecx+0x100002],al
  4161dd:	add    al,0x25
  4161df:	and    BYTE PTR [eax+0x13],al
  4161e2:	adc    al,0x0
  4161e4:	inc    eax
  4161e5:	add    DWORD PTR [esp],0x4101a051
  4161ec:	or     BYTE PTR [esi-0x2cd2fbb0],bl
  4161f2:	inc    eax
  4161f3:	add    BYTE PTR [eax],cl
  4161f5:	adc    BYTE PTR [edx+ecx*1+0x9020000],ah
  4161fc:	mov    al,ds:0xa23060
  416201:	xor    al,0x81
  416203:	add    BYTE PTR [eax],0x0
  416206:	add    BYTE PTR [eax+0x2a],al
  416209:	add    BYTE PTR [ebx],ch
  41620b:	adc    BYTE PTR [ecx+0x62],cl
  41620e:	add    DWORD PTR [esi],eax
  416210:	or     al,0x0
  416212:	sub    al,BYTE PTR [eax]
  416214:	add    BYTE PTR [eax],cl
  416216:	sbb    BYTE PTR [esp],0x90
  41621a:	add    al,0x4a
  41621c:	add    BYTE PTR [ecx+ecx*1+0x18748000],cl
  416223:	inc    edx
  416224:	or     al,BYTE PTR [edx]
  416226:	add    BYTE PTR [eax],al
  416228:	add    BYTE PTR [ecx],dl
  41622a:	add    BYTE PTR [eax],ah
  41622c:	add    BYTE PTR [eax],cl
  41622e:	add    BYTE PTR [eax],al
  416230:	enter  0x100,0x82
  416234:	add    DWORD PTR [eax],edx
  416236:	inc    eax
  416237:	inc    eax
  416238:	inc    eax
  416239:	add    BYTE PTR [eax],al
  41623b:	add    DWORD PTR [eax+0x6100881],eax
  416241:	dec    eax
  416242:	and    BYTE PTR [eax],0xc0
  416245:	inc    ebx
  416246:	inc    eax
  416247:	adc    BYTE PTR [eax-0x76],0x81
  41624b:	add    al,0x41
  41624d:	add    BYTE PTR [eax],ah
  41624f:	add    BYTE PTR [eax],al
  416251:	popa   
  416252:	dec    ebx
  416253:	and    cl,BYTE PTR [ecx+0x9]
  416256:	push   edx
  416257:	pusha  
  416258:	xor    eax,0x80005928
  41625d:	sub    BYTE PTR [eax],al
  41625f:	pusha  
  416260:	shl    DWORD PTR [ebx],0x60
  416263:	inc    eax
  416264:	add    DWORD PTR [eax+ebx*4],eax
  416267:	push   ecx
  416268:	add    BYTE PTR [eax],al
  41626a:	adc    al,0x4
  41626c:	test   al,0x20
  41626e:	add    BYTE PTR [eax],ah
  416270:	mov    al,ds:0x14000800
  416275:	sub    BYTE PTR [edx],al
  416277:	add    BYTE PTR [esi+ebx*4+0x40],dh
  41627b:	add    BYTE PTR [eax+esi*2],al
  41627e:	add    BYTE PTR [eax],cl
  416280:	adc    BYTE PTR [eax],0x10
  416283:	add    BYTE PTR [eax+0x8],cl
  416286:	sub    BYTE PTR [ecx+0x32],al
  416289:	xor    DWORD PTR [eax+0x20026641],eax
  41628f:	add    DWORD PTR [eax+0x4c],eax
  416292:	add    BYTE PTR [eax],al
  416294:	inc    edi
  416295:	inc    ebp
  416296:	or     al,0x88
  416298:	add    BYTE PTR [edx],dl
  41629a:	mov    cl,0x40
  41629c:	add    BYTE PTR [eax],dl
  41629e:	leave  
  41629f:	or     edx,DWORD PTR [edx]
  4162a1:	add    BYTE PTR [ecx+0x2],ch
  4162a4:	add    BYTE PTR [ecx+0x0],al
  4162a7:	sub    ah,BYTE PTR [edx]
  4162a9:	add    BYTE PTR [eax+eax*4],al
  4162ac:	add    BYTE PTR [eax],ah
  4162ae:	inc    eax
  4162af:	add    BYTE PTR [eax+0x6004240],al
  4162b5:	adc    BYTE PTR [eax],al
  4162b7:	xor    BYTE PTR [ecx+0x4],al
  4162bd:	dec    esi
  4162be:	jmp    0x14364c3
  4162c3:	mov    al,ds:0x43808c80
  4162c8:	add    BYTE PTR [eax+ecx*2],al
  4162cb:	add    DWORD PTR [eax+0x5],eax
  4162ce:	add    BYTE PTR [eax],bl
  4162d0:	inc    eax
  4162d1:	add    DWORD PTR [eax],edx
  4162d3:	inc    esp
  4162d4:	add    dl,BYTE PTR [eax+0x4000100]
  4162da:	add    BYTE PTR [eax],ah
  4162dc:	add    BYTE PTR [eax],al
  4162de:	imul   eax,DWORD PTR [eax-0x74],0x436883
  4162e5:	add    BYTE PTR [ecx],dh
  4162e7:	add    BYTE PTR [eax],al
  4162e9:	adc    BYTE PTR [eax],al
  4162eb:	or     DWORD PTR [eax],0x94456000
  4162f1:	or     al,0x9
  4162f3:	enter  0x4400,0x21
  4162f7:	or     al,0x0
  4162f9:	add    al,0x0
  4162fb:	or     edx,DWORD PTR [eax-0x80]
  4162fe:	push   esp
  4162ff:	add    BYTE PTR [edx],al
  416301:	push   eax
  416302:	add    cl,al
  416304:	stos   DWORD PTR es:[edi],eax
  416305:	add    ch,BYTE PTR [eax]
  416307:	or     BYTE PTR [eax+0x2002004],ah
  41630d:	pusha  
  41630e:	push   eax
  41630f:	push   eax
  416310:	add    BYTE PTR [ecx+0x9],cl
  416313:	inc    eax
  416314:	push   0x19888125
  416319:	add    BYTE PTR [eax],al
  41631b:	add    BYTE PTR [eax],dl
  41631d:	add    eax,DWORD PTR [edi]
  41631f:	adc    al,BYTE PTR [eax+0x30a00008]
  416325:	inc    ecx
  416326:	add    BYTE PTR [edx-0x55fd3ff0],dl
  41632c:	add    BYTE PTR [eax],al
  41632e:	inc    ecx
  41632f:	and    DWORD PTR [ebx],0xa5812c5
  416335:	add    BYTE PTR [eax],al
  416337:	sub    BYTE PTR [eax+0x4800e1],al
  41633d:	dec    eax
  41633e:	adc    dl,BYTE PTR [ecx]
  416340:	inc    eax
  416341:	add    BYTE PTR [eax],0x20
  416344:	add    DWORD PTR [eax],esi
  416346:	imul   eax,eax,0x82002060
  41634c:	add    BYTE PTR [eax+0x7],dh
  41634f:	adc    DWORD PTR [eax],eax
  416351:	add    eax,0x91048808
  416356:	add    DWORD PTR [edx],0x42800402
  41635c:	nop
  41635d:	sub    al,BYTE PTR [ecx+0x24]
  416360:	mov    ah,BYTE PTR [ebp+0x7a00c88a]
  416366:	xchg   ecx,eax
  416367:	add    DWORD PTR [eax+ebp*1],ecx
  41636a:	or     DWORD PTR [eax+0x42d4c032],edx
  416370:	inc    ecx
  416371:	and    BYTE PTR [eax+eax*1],al
  416374:	and    al,0x26
  416376:	nop
  416377:	adc    al,0x2
  416379:	add    BYTE PTR [eax+eax*4],dl
  41637c:	inc    ecx
  41637d:	adc    BYTE PTR [ecx+0x40108008],ah
  416383:	inc    edx
  416384:	add    al,0x1
  416386:	push   es
  416387:	mov    cl,BYTE PTR [ecx]
  416389:	add    DWORD PTR [ecx],0x40084080
  41638f:	push   eax
  416390:	add    BYTE PTR [ecx+0x1400402a],cl
  416396:	add    BYTE PTR [edx+0x6a],al
  416399:	and    dl,ah
  41639b:	dec    eax
  41639c:	mov    esp,0x200144
  4163a1:	add    eax,0x2449088c
  4163a6:	add    dl,cl
  4163a8:	adc    BYTE PTR [eax+0x7005b61],ah
  4163ae:	adc    BYTE PTR [eax+0xe00004],al
  4163b4:	add    BYTE PTR [eax],al
  4163b6:	and    BYTE PTR [edx+0x1],cl
  4163b9:	dec    ecx
  4163ba:	adc    BYTE PTR [eax+0x0],al
  4163bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163be:	adc    BYTE PTR [eax],al
  4163c0:	inc    esp
  4163c1:	add    DWORD PTR [ecx],edx
  4163c3:	retf   0x240
  4163c6:	mov    dl,0x49
  4163c8:	and    al,BYTE PTR [eax]
  4163ca:	add    BYTE PTR [edx+0xc8a0000],ah
  4163d0:	jbe    0x416358
  4163d2:	mov    al,ds:0xc404300
  4163d7:	popa   
  4163d8:	add    BYTE PTR [eax+0x807810],cl
  4163de:	and    al,0x4
  4163e0:	add    DWORD PTR [eax],ecx
  4163e2:	add    dl,al
  4163e4:	inc    eax
  4163e5:	adc    BYTE PTR [eax-0x7fbeffbc],ah
  4163eb:	add    BYTE PTR [edx],cl
  4163ed:	adc    DWORD PTR [eax],eax
  4163ef:	or     DWORD PTR [eax-0x7c],eax
  4163f2:	and    BYTE PTR [esi],dl
  4163f4:	add    BYTE PTR [eax],al
  4163f6:	loopne 0x4163f9
  4163f8:	add    DWORD PTR [eax+0x4],esp
  4163fb:	adc    BYTE PTR [edx],dl
  4163fd:	sbb    BYTE PTR [eax],cl
  4163ff:	add    dh,dh
  416401:	sub    DWORD PTR [ebx+0x4e4671c],eax
  416407:	add    BYTE PTR [eax],cl
  416409:	jno    0x41646c
  41640b:	mov    ds:0x55010042,eax
  416410:	add    BYTE PTR [ecx+0x0],al
  416413:	sub    BYTE PTR [edi],cl
  416415:	cdq    
  416416:	cmovo  eax,DWORD PTR [eax+ecx*1]
  41641a:	xchg   edx,eax
  41641b:	inc    ecx
  41641c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41641d:	or     BYTE PTR [eax],0x18
  416420:	or     DWORD PTR [eax],edx
  416422:	add    BYTE PTR [eax],cl
  416424:	call   0x244bf8ed
  416429:	add    ch,BYTE PTR ds:0x9400211
  41642f:	xchg   DWORD PTR [esi],eax
  416431:	and    al,0x80
  416433:	in     al,0x54
  416435:	add    al,0x0
  416437:	adc    al,BYTE PTR [ecx]
  416439:	add    BYTE PTR [eax+0x44c00902],dl
  41643f:	or     BYTE PTR [edx],al
  416441:	and    dl,BYTE PTR [edx]
  416443:	add    BYTE PTR [eax+0x271016c2],al
  416449:	inc    ecx
  41644a:	add    BYTE PTR [eax],al
  41644c:	and    BYTE PTR [eax],cl
  41644e:	or     BYTE PTR [eax],al
  416450:	mov    al,ds:0x4000c2c1
  416455:	add    cl,BYTE PTR [eax]
  416457:	shl    BYTE PTR [eax],0x10
  41645a:	or     dl,BYTE PTR ds:0x13089021
  416460:	adc    BYTE PTR [ecx+0x40301062],al
  416466:	add    BYTE PTR [eax+0x40c52420],dl
  41646c:	adc    BYTE PTR [edx],cl
  41646e:	or     ebx,DWORD PTR [eax]
  416470:	ret    0x804
  416473:	add    al,0x0
  416475:	add    BYTE PTR [edx+0x398640],ch
  41647b:	pop    es
  41647c:	add    al,0x21
  41647e:	and    BYTE PTR [ecx],cl
  416480:	sbb    eax,0x50a4049
  416485:	push   0x8226012e
  41648a:	mov    cl,0x1
  41648c:	adc    BYTE PTR [eax],0x8
  41648f:	adc    BYTE PTR [esi],0x3
  416492:	add    al,cl
  416494:	add    DWORD PTR [eax],eax
  416496:	adc    al,0xc
  416498:	push   ecx
  416499:	dec    edx
  41649a:	adc    BYTE PTR [eax+eiz*1],bl
  41649d:	add    al,0x6a
  41649f:	cmp    DWORD PTR [ecx],eax
  4164a1:	and    al,0x0
  4164a3:	add    al,0x0
  4164a5:	mov    WORD PTR [eax],cs
  4164a7:	gs inc eax
  4164a9:	add    al,BYTE PTR [eax-0x7ffefde3]
  4164af:	inc    esp
  4164b0:	int3   
  4164b1:	pop    es
  4164b2:	and    BYTE PTR [ebx+0x700820],al
  4164b8:	and    al,0xa2
  4164ba:	and    BYTE PTR [eax+0x80000],dl
  4164c0:	inc    edx
  4164c1:	inc    eax
  4164c2:	arpl   WORD PTR [eax-0x6fa9f6df],ax
  4164c8:	add    BYTE PTR [eax],dl
  4164ca:	or     al,0x73
  4164cc:	mov    al,ds:0x40088000
  4164d1:	add    al,0x82
  4164d4:	pusha  
  4164d5:	dec    ebp
  4164d6:	dec    ecx
  4164d7:	add    BYTE PTR [ecx+0x0],al
  4164da:	mov    BYTE PTR [eax-0x6db7799e],al
  4164e0:	add    BYTE PTR [eax],al
  4164e2:	xchg   esi,eax
  4164e3:	add    dl,cl
  4164e5:	add    BYTE PTR [eax+ecx*1],0x12
  4164e9:	add    DWORD PTR [eax+eiz*2],ecx
  4164ec:	adc    BYTE PTR [edx+ecx*8],dl
  4164ef:	add    al,BYTE PTR [eax]
  4164f1:	sub    BYTE PTR [esi],al
  4164f3:	adc    al,BYTE PTR [eax]
  4164f5:	inc    eax
  4164f6:	add    al,BYTE PTR [ecx-0x57affdbd]
  4164fc:	or     BYTE PTR [ebx+0x2],0x90
  416500:	inc    esp
  416501:	rcl    BYTE PTR [ebp+0x18],0x4
  416505:	and    eax,0x11400010
  41650a:	and    BYTE PTR [eax],ah
  41650c:	mov    BYTE PTR [edx],al
  41650e:	add    DWORD PTR ds:0x8402,esi
  416514:	add    BYTE PTR [edx-0x6a67e000],dl
  41651a:	inc    ecx
  41651b:	add    BYTE PTR [eax+0x50],ch
  41651e:	add    BYTE PTR [eax],al
  416520:	add    DWORD PTR [eax+eiz*2-0x7fff6f3e],eax
  416527:	add    BYTE PTR [ecx+0x4],al
  41652a:	rcl    BYTE PTR [esi+0x24280050],0x0
  416531:	adc    DWORD PTR [eax+0x225041],eax
  416537:	or     BYTE PTR [edx+eax*4],al
  41653a:	add    BYTE PTR [eax],cl
  41653c:	add    BYTE PTR [edx],bl
  41653e:	sbb    BYTE PTR [eax+eax*1+0x800614a],0x20
  416546:	and    BYTE PTR [eax],0x42
  416549:	nop
  41654a:	adc    al,BYTE PTR [eax]
  41654c:	or     DWORD PTR [eax],eax
  41654e:	adc    BYTE PTR [eax+0x10],al
  416551:	add    al,BYTE PTR [ecx-0x7d]
  416554:	imul   eax,ecx,0x4d0500a
  41655a:	add    dh,BYTE PTR [eax]
  41655c:	add    BYTE PTR [edx],ah
  41655e:	add    DWORD PTR [ecx],0x14969c3
  416564:	inc    ebx
  416565:	add    DWORD PTR [eax],eax
  416567:	cwde   
  416568:	and    DWORD PTR [eax],0xa40a808
  41656e:	add    esp,eax
  416570:	adc    al,0x68
  416572:	or     BYTE PTR [eax],al
  416574:	add    BYTE PTR [eax],0x58
  416577:	cmp    DWORD PTR [edx+eax*2+0x0],eax
  41657b:	add    DWORD PTR ds:0x45488,eax
  416581:	add    BYTE PTR [eax],ch
  416583:	pusha  
  416584:	test   BYTE PTR [eax],bl
  416586:	add    BYTE PTR [eax],al
  416588:	add    al,BYTE PTR [eax]
  41658a:	and    BYTE PTR [eax],cl
  41658c:	or     BYTE PTR gs:[eax],al
  41658f:	add    BYTE PTR [eax],ch
  416591:	xor    DWORD PTR [ebp+0xb],ecx
  416594:	jne    0x416538
  416596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416597:	les    edx,FWORD PTR [esi-0x24]
  41659a:	xchg   edi,eax
  41659b:	dec    esi
  41659c:	addr16 push edx
  41659e:	dec    eax
  41659f:	cmp    WORD PTR [ebx+edi*4],0xffda
  4165a4:	mov    DWORD PTR [esi+0x68],eax
  4165a7:	test   eax,0xd8b84c7f
  4165ac:	mov    ecx,ds
  4165ae:	mov    edx,0x29d91fd5
  4165b3:	push   ss
  4165b4:	frstor [edx-0x26e0e635]
  4165ba:	inc    edi
  4165bb:	mov    esi,0x86a8e38d
  4165c0:	sbb    bl,cl
  4165c2:	inc    edi
  4165c3:	data16 mov WORD PTR [edi-0x4d],es
  4165c7:	retf   
  4165c8:	dec    ebp
  4165c9:	or     ebp,DWORD PTR [ebp+0x764586d2]
  4165cf:	retf   0x3d8e
  4165d2:	dec    eax
  4165d3:	aam    0x48
  4165d5:	cmp    eax,0x2e1ad2b4
  4165da:	mov    ah,0xd2
  4165dc:	jp     0x4165ea
  4165de:	rcl    DWORD PTR [edx+0x6f],cl
  4165e1:	loope  0x4165ea
  4165e3:	repnz es adc al,0xd3
  4165e7:	mov    bl,0x24
  4165e9:	fs adc ah,bl
  4165ec:	(bad)  
  4165ed:	(bad)  
  4165ee:	inc    edx
  4165ef:	adc    eax,0xf19704e9
  4165f4:	jmp    0x49e1:0xcd5e120b
  4165fb:	test   al,0x8d
  4165fd:	ficomp WORD PTR [eax]
  4165ff:	dec    edi
  416600:	popf   
  416601:	xchg   ecx,eax
  416602:	jge    0x41658a
  416604:	in     eax,0x4e
  416606:	xor    eax,0x3bd10665
  41660b:	dec    ecx
  41660c:	pop    esi
  41660d:	std    
  41660e:	pop    ss
  41660f:	lock jecxz 0x4165ad
  416612:	fs (bad) 
  416614:	outs   dx,DWORD PTR ds:[esi]
  416615:	fs push eax
  416617:	data16 (bad) 
  41661a:	xor    al,0xe8
  41661c:	sbb    DWORD PTR [edx],edi
  41661e:	inc    esi
  41661f:	data16 adc bl,al
  416622:	paddsb mm3,QWORD PTR [edx]
  416625:	fld    DWORD PTR [esi+0x66]
  416628:	popf   
  416629:	push   esi
  41662a:	dec    eax
  41662b:	sub    WORD PTR [ebp+0x50],bx
  41662f:	data16 sbb bl,cl
  416632:	out    dx,al
  416633:	data16 and ah,BYTE PTR [esi-0x2d]
  416637:	fistp  DWORD PTR [ecx]
  416639:	fld    DWORD PTR ds:0x46da1a67
  41663f:	and    dh,al
  416641:	adc    eax,0x15206648
  416646:	mov    eax,ebx
  416648:	sbb    al,0x5
  41664a:	mov    ds:0x289924dd,al
  41664f:	adc    DWORD PTR [ebx-0x18],esp
  416652:	mov    ebx,0xcbd91a6f
  416657:	call   0x5189cd5d
  41665c:	sbb    ecx,ebx
  41665e:	std    
  41665f:	data16 sbb BYTE PTR [ebp+0x47],bl
  416663:	xchg   edx,eax
  416664:	nop
  416665:	dec    esp
  416666:	inc    edi
  416667:	push   0x66b2c170
  41666c:	sbb    ecx,ebx
  41666e:	mov    bl,0x65
  416670:	push   ss
  416671:	fcom   st(1)
  416673:	jmp    0x4166f3
  416675:	fs inc edi
  416677:	data16 sbb bl,cl
  41667a:	pop    esp
  41667b:	xchg   esi,eax
  41667c:	ins    BYTE PTR es:[edi],dx
  41667d:	in     eax,0x47
  41667f:	icebp  
  416680:	es sar DWORD PTR fs:[eax+0x52226420],cl
  416688:	in     eax,dx
  416689:	dec    ebp
  41668a:	pop    edx
  41668b:	mov    eax,ds:0xf196098c
  416690:	sbb    bl,al
  416692:	aad    0x23
  416694:	rcr    ecx,cl
  416696:	inc    esi
  416697:	data16 sbb ah,ah
  41669a:	dec    eax
  41669b:	data16 add al,BYTE PTR [eax+0x3e]
  41669f:	fistp  DWORD PTR [ebx+0x4b]
  4166a2:	cmc    
  4166a3:	mov    ds:0xa24e5074,al
  4166a8:	cli    
  4166a9:	or     DWORD PTR [edx-0x6e],0xffffff8e
  4166ad:	ficom  WORD PTR [ecx+0x26]
  4166b0:	out    dx,al
  4166b1:	les    edx,FWORD PTR [ecx+0x31d9cfda]
  4166b7:	hlt    
  4166b8:	sbb    DWORD PTR ds:0xdb196647,eax
  4166be:	inc    ebp
  4166bf:	jmp    0xd82b:0x2bbdd984
  4166c6:	sahf   
  4166c7:	dec    esi
  4166c8:	push   ebp
  4166c9:	pop    esi
  4166ca:	inc    edi
  4166cb:	sbb    cx,bx
  4166ce:	inc    esp
  4166cf:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4166d1:	sbb    edi,DWORD PTR [ebp+0x60d19f1b]
  4166d7:	out    dx,eax
  4166d8:	sbb    DWORD PTR [ebx],edi
  4166da:	inc    esi
  4166db:	data16 adc bl,al
  4166de:	shr    ebx,cl
  4166e0:	jecxz  0x41667d
  4166e2:	inc    edi
  4166e3:	outs   dx,WORD PTR ds:[esi]
  4166e5:	fs dec esp
  4166e7:	data16 fidivr DWORD PTR [ecx]
  4166ea:	xor    al,0x9a
  4166ec:	and    cl,BYTE PTR [ebp-0x7f]
  4166ef:	stos   DWORD PTR es:[edi],eax
  4166f0:	ja     0x4166d3
  4166f2:	xchg   ecx,eax
  4166f3:	icebp  
  4166f4:	push   esi
  4166f5:	fs dec ebx
  4166f7:	rcr    DWORD PTR ds:0x8ddea336,0xf9
  4166fe:	dec    edi
  4166ff:	icebp  
  416700:	and    cl,BYTE PTR [ebx+ecx*2]
  416703:	fld    TBYTE PTR [ebp-0xf]
  416706:	sbb    DWORD PTR [edx-0x68452339],esp
  41670c:	test   cl,bl
  41670e:	mov    WORD PTR [esi-0x21],gs
  416711:	xlat   BYTE PTR ds:[ebx]
  416712:	cwde   
  416713:	dec    esi
  416714:	push   ebx
  416715:	push   ds
  416716:	inc    edi
  416717:	sbb    ax,0x541b
  41671b:	(bad)  
  41671d:	mov    ebx,0xdc3e4e33
  416722:	dec    edx
  416723:	mov    ecx,0x6e9d9029
  416728:	cli    
  416729:	fisttp DWORD PTR [ecx+0x27]
  41672c:	fmul   QWORD PTR ss:[edx-0x57]
  416730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416731:	(bad)  [esi+ebp*2-0x54b49dde]
  416738:	cmp    cl,BYTE PTR ss:[edx+ecx*4+0x2910d922]
  416740:	push   es
  416741:	fstp   DWORD PTR [ebp-0x42b0e60f]
  416747:	jb     0x4166fb
  416749:	fcom   DWORD PTR [eax+0x4e]
  41674c:	jecxz  0x4167ae
  41674e:	inc    edi
  41674f:	mov    ax,ds:0xdc8a4c1d
  416755:	(bad)  [ebx+0x6e]
  416758:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416759:	lds    ecx,FWORD PTR [eax-0x45]
  41675c:	push   es
  41675d:	cmp    cl,bl
  41675f:	sub    bl,BYTE PTR [edx]
  416761:	fldcw  WORD PTR [edi]
  416763:	addr16 inc esi
  416765:	std    
  416766:	inc    edi
  416767:	out    0x5a,eax
  416769:	(bad)  
  41676b:	jns    0x41670a
  41676d:	xlat   BYTE PTR ds:[ebx]
  41676e:	mov    ds:0x59291af3,eax
  416773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416774:	sbb    cl,bl
  416776:	xor    BYTE PTR [edi+ebx*2],al
  416779:	aad    0x47
  41677b:	lock mov bh,BYTE PTR [ebp-0x50]
  41677f:	cmp    eax,0x657fd58f
  416784:	sbb    ecx,ebx
  416786:	xor    ah,al
  416788:	pop    edi
  416789:	rol    DWORD PTR [edi-0x10],1
  41678c:	stos   DWORD PTR es:[edi],eax
  41678d:	jo     0x41673f
  41678f:	mov    al,0x8f
  416791:	aad    0x3f
  416793:	sbb    cx,bx
  416796:	xor    BYTE PTR [edi+ebx*2+0x16f047cd],dh
  41679d:	fst    st(2)
  41679f:	stos   DWORD PTR es:[edi],eax
  4167a0:	sub    DWORD PTR [eax+0x1da7a288],edx
  4167a6:	cwde   
  4167a7:	jp     0x41674e
  4167a9:	sub    DWORD PTR [edx+0x7e],ecx
  4167ac:	outs   dx,DWORD PTR ds:[esi]
  4167ad:	aad    0x54
  4167af:	imul   ecx,DWORD PTR [edx],0xa3bbd0dd
  4167b5:	cs cwde 
  4167b7:	jbe    0x416750
  4167b9:	lds    esi,FWORD PTR [edx+esi*8]
  4167bc:	or     dl,BYTE PTR ds:0x857fdbd3
  4167c2:	aas    
  4167c3:	fisttp DWORD PTR [edi-0x58b17b30]
  4167c9:	sbb    eax,0x1e556cd3
  4167ce:	js     0x41683a
  4167d0:	push   es
  4167d1:	xchg   ebx,eax
  4167d2:	inc    eax
  4167d3:	fcomp  QWORD PTR [edx]
  4167d5:	fldenv [edi+0x66]
  4167d8:	pop    ss
  4167d9:	and    al,0xd5
  4167db:	mov    esp,0xe7ae4354
  4167e0:	push   ds
  4167e1:	mov    ebx,0x23f2da51
  4167e6:	ds push edx
  4167e8:	add    cl,BYTE PTR [edi-0x38]
  4167eb:	mov    al,ds:0xf15fda64
  4167f0:	sub    ebx,esi
  4167f2:	aam    0xb2
  4167f4:	or     cl,BYTE PTR [ebx+eax*4-0x4d]
  4167f8:	lds    edx,FWORD PTR [si-0x5f]
  4167fc:	push   ebp
  4167fd:	es mov ebx,0x3cc41c6d
  416803:	fist   DWORD PTR [ecx+ebp*2+0x2]
  416807:	call   0xf719b5b6
  41680c:	sbb    al,0xfe
  41680e:	pop    ebp
  41680f:	icebp  
  416810:	or     cl,dl
  416812:	cmp    BYTE PTR [edi+0x6a],dl
  416815:	sub    DWORD PTR [ebp-0x67a6df4a],eax
  41681b:	fild   DWORD PTR ds:0xde64c24e
  416821:	pop    esp
  416822:	dec    ebp
  416823:	push   ecx
  416824:	sbb    DWORD PTR [edx+ecx*1-0x57222395],ebp
  41682b:	das    
  41682c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41682d:	lds    ecx,FWORD PTR [eax-0x45]
  416830:	(bad)  
  416831:	in     eax,0xa7
  416833:	icebp  
  416834:	and    dl,ch
  416836:	shl    ebx,cl
  416838:	dec    ebp
  416839:	mov    ah,0xfa
  41683b:	out    0x1c,al
  41683d:	shr    esp,0x19
  416840:	sbb    bl,cl
  416842:	mov    ah,0x66
  416844:	dec    ebp
  416845:	mov    ds:0xd91a5cbb,al
  41684a:	das    
  41684b:	retf   
  41684c:	ss or  al,0x48
  41684f:	fnstenv [ebp-0x27]
  416852:	pop    es
  416853:	dec    edi
  416854:	(bad)  
  416855:	cld    
  416856:	inc    edi
  416857:	pop    bx
  416859:	mov    ebx,edi
  41685b:	push   0x4e57d969
  416860:	sub    al,0x99
  416862:	dec    eax
  416863:	data16 (bad) 
  416865:	sbb    BYTE PTR [ebx-0xd3e11a3],bh
  41686b:	push   ecx
  41686c:	sbb    bl,cl
  41686e:	xchg   esp,eax
  41686f:	(bad)
  416874:	sbb    bl,cl
  416876:	das    
  416877:	test   eax,0x51488542
  41687c:	mov    fs,WORD PTR [esi]
  41687e:	sbb    DWORD PTR [edi+0x5],ecx
  416881:	neg    BYTE PTR [edx+0x2f]
  416884:	fstp   TBYTE PTR [ecx+0x602aed9]
  41688a:	push   eax
  41688b:	adc    bl,BYTE PTR [edx]
  41688d:	push   ss
  41688e:	dec    eax
  41688f:	data16 sbb bl,cl
  416892:	inc    edi
  416893:	jecxz  0x41682f
  416895:	aad    0xbb
  416897:	jo     0x4168b9
  416899:	pop    esp
  41689a:	dec    ebp
  41689b:	fst    DWORD PTR [ecx-0x5019c025]
  4168a1:	mov    DWORD PTR fs:[edi+0x1a0d2f1b],esp
  4168a8:	inc    ebp
  4168a9:	leave  
  4168aa:	rcr    DWORD PTR [ebp+0x78],cl
  4168ad:	les    edi,FWORD PTR [ebx]
  4168af:	or     ebp,esp
  4168b1:	dec    esi
  4168b2:	(bad)  
  4168b3:	push   0xf04d1f30
  4168b8:	fisttp QWORD PTR [edx+ebx*2]
  4168bb:	cmp    BYTE PTR [edx],al
  4168bd:	enter  0xa811,0x19
  4168c1:	in     eax,dx
  4168c2:	inc    esi
  4168c3:	add    cx,bx
  4168c6:	adc    DWORD PTR [edi-0x74],ecx
  4168c9:	retf   
  4168ca:	inc    edi
  4168cb:	xchg   si,ax
  4168cd:	std    
  4168ce:	or     dl,BYTE PTR [edx-0x1090026a]
  4168d4:	jecxz  0x416871
  4168d6:	fs (bad) 
  4168d8:	outs   dx,DWORD PTR ds:[esi]
  4168d9:	fs push eax
  4168db:	data16 fmulp st(1),st
  4168de:	xor    al,0xea
  4168e0:	pop    edi
  4168e1:	loope  0x41688a
  4168e3:	icebp  
  4168e4:	or     bl,cl
  4168e6:	ins    DWORD PTR es:[edi],dx
  4168e7:	data16 fwait
  4168e9:	adc    DWORD PTR [edi-0x33],eax
  4168ec:	(bad)  
  4168ed:	in     al,dx
  4168ee:	xchg   esp,eax
  4168ef:	rcl    BYTE PTR [esi+0x5a],0xd3
  4168f3:	mov    dh,0x2a
  4168f5:	fld    DWORD PTR [ecx+0x67]
  4168f8:	and    bh,BYTE PTR [edi]
  4168fa:	dec    eax
  4168fb:	fstp   DWORD PTR [ecx+ebp*1]
  4168fe:	leave  
  4168ff:	mov    ds:0xda8d0621,al
  416904:	sbb    bl,cl
  416906:	inc    edi
  416907:	jbe    0x4168ac
  416909:	push   ds
  41690a:	xor    eax,DWORD PTR [esi+0x1a]
  41690d:	(bad)  [edi+0x4e]
  416910:	fwait
  416911:	add    eax,0x192f6648
  416916:	ins    BYTE PTR es:[edi],dx
  416917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416918:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416919:	pop    esp
  41691a:	dec    eax
  41691b:	rcr    DWORD PTR [edx-0x27],0x38
  41691f:	js     0x41692b
  416921:	(bad)  
  416922:	cwde   
  416923:	dec    esi
  416924:	mov    ds:0x4266471e,eax
  416929:	fbstp  TBYTE PTR [edi]
  41692b:	and    BYTE PTR ds:0x5a664864,bl
  416931:	fldenv [eax+edi*2]
  416934:	adc    al,BYTE PTR [ecx+edx*8-0x4d]
  416938:	sbb    cl,BYTE PTR [ecx]
  41693a:	mov    dh,cl
  41693c:	imul   eax,DWORD PTR [ebx+0x48],0x66
  416940:	fs out 0x47,al
  416943:	into   
  416944:	sbb    DWORD PTR [edi+0x16],ecx
  416947:	jo     0x416955
  416949:	xlat   BYTE PTR ds:[ebx]
  41694a:	cmp    BYTE PTR [edi-0x5d],cl
  41694d:	push   ds
  41694e:	inc    edi
  41694f:	data16 int 0x99
  416952:	inc    esp
  416953:	hlt    
  416954:	sbb    ah,BYTE PTR [ecx+ebx*2-0x5a]
  416958:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416959:	lds    esp,FWORD PTR es:[edx-0x7]
  41695d:	add    al,0x40
  41695f:	push   0xffffffbe
  416961:	es pop dx
  416964:	das    
  416965:	sbb    ebx,ecx
  416967:	(bad)  
  416968:	cli    
  416969:	dec    ax
  41696b:	xor    DWORD PTR gs:[ecx],ebx
  41696e:	sti    
  41696f:	dec    esi
  416970:	int    0xb6
  416972:	dec    eax
  416973:	sbb    ch,BYTE PTR gs:[edi]
  416976:	pop    ecx
  416977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416978:	push   ss
  416979:	fnstenv [eax]
  41697b:	lds    ebx,FWORD PTR [ebp+0x1aa247ba]
  416981:	call   0xd95e0fde
  416986:	int3   
  416987:	mov    ebp,ecx
  416989:	mov    esi,0x431a6548
  41698e:	pop    ecx
  41698f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416990:	dec    ebx
  416991:	dec    ebp
  416992:	mov    dh,cl
  416994:	sbb    DWORD PTR [edi+0x4],ecx
  416997:	out    0xbc,al
  416999:	(bad)  
  41699a:	cmp    BYTE PTR [edi-0x5d],cl
  41699d:	push   ds
  41699e:	inc    edi
  41699f:	data16 (bad) 
  4169a2:	cmp    esi,DWORD PTR [edx+0x1c]
  4169a5:	fxch   st(3)
  4169a7:	imul   edx,DWORD PTR [edx],0x95f14830
  4169ad:	xlat   BYTE PTR ds:[ebx]
  4169ae:	lahf   
  4169af:	dec    esi
  4169b0:	push   ebp
  4169b1:	pop    esp
  4169b2:	inc    edi
  4169b3:	pop    dx
  4169b5:	fldcw  WORD PTR [eax+edi*2]
  4169b8:	or     bl,bl
  4169ba:	push   esi
  4169bb:	jmp    0x416a27
  4169bd:	xor    BYTE PTR [eax+0x66],cl
  4169c0:	push   ss
  4169c1:	fnstenv [eax]
  4169c3:	jge    0x416962
  4169c5:	ret    0xa247
  4169c8:	sbb    ch,al
  4169ca:	pop    eax
  4169cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169cc:	sbb    ebx,ecx
  4169ce:	int3   
  4169cf:	inc    ecx
  4169d0:	(bad)  
  4169d1:	loope  0x416a1a
  4169d3:	icebp  
  4169d4:	push   cs
  4169d5:	xchg   ebx,eax
  4169d6:	shl    ebx,cl
  4169d8:	sbb    bl,cl
  4169da:	and    DWORD PTR [esi+0x53],0x4b
  4169de:	xor    DWORD PTR [edx-0x42],0xa5594a64
  4169e5:	push   esi
  4169e6:	mov    ebp,0x3c15996e
  4169eb:	push   0x56
  4169ed:	aas    
  4169ee:	dec    ebx
  4169ef:	fdiv   QWORD PTR [eax]
  4169f1:	aas    
  4169f2:	shr    DWORD PTR [eax+esi*1+0x1dadd164],cl
  4169f9:	and    dl,BYTE PTR [ebp-0x7bd2e5a6]
  4169ff:	rcr    BYTE PTR [ecx],1
  416a01:	dec    ebx
  416a02:	mov    dl,0xa6
  416a04:	(bad)  
  416a05:	loope  0x41699e
  416a07:	gs mov edi,ebx
  416a0a:	scas   eax,DWORD PTR es:[edi]
  416a0b:	xchg   ebp,eax
  416a0c:	(bad)
  416a10:	pop    ss
  416a11:	fnstenv [eax]
  416a13:	xchg   edx,eax
  416a14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a15:	push   esi
  416a16:	inc    edi
  416a17:	mov    edi,0xf150cd8f
  416a1c:	sbb    eax,0x6334d327
  416a21:	sub    eax,0x36a5f184
  416a26:	cmp    ecx,DWORD PTR [ebx]
  416a28:	jne    0x416a3f
  416a2a:	push   eax
  416a2b:	imul   esp,DWORD PTR [ebp-0x21],0xed8d1d56
  416a32:	push   esi
  416a33:	sbb    eax,0xdad4f138
  416a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a39:	push   esi
  416a3a:	sahf   
  416a3b:	mov    bh,0x98
  416a3d:	in     eax,0x4f
  416a3f:	imul   esp,DWORD PTR [edx],0x62b4d364
  416a45:	fmul   QWORD PTR [edx+0xffcea9e]
  416a4b:	pop    esi
  416a4c:	add    ebx,esp
  416a4e:	movaps xmm1,XMMWORD PTR ds:0x2a267b85
  416a55:	shl    DWORD PTR fs:[ebp+eiz*4-0x708d39b1],cl
  416a5d:	int    0x5c
  416a5f:	imul   esp,DWORD PTR [edx],0x78e34bcc
  416a65:	pop    esp
  416a66:	in     al,dx
  416a67:	mov    edi,0x8f0ea5fc
  416a6c:	push   cs
  416a6d:	inc    edx
  416a6e:	inc    edi
  416a6f:	fadd   QWORD PTR [ebp+0xa84e53c]
  416a75:	ret    0xdc47
  416a78:	sbb    ecx,ebx
  416a7a:	or     al,0x63
  416a7c:	sahf   
  416a7d:	(bad)  
  416a7f:	icebp  
  416a80:	std    
  416a81:	inc    esp
  416a82:	dec    eax
  416a83:	call   0x1d01:0xd2d9
  416a89:	ss dec eax
  416a8b:	data16 (bad) 
  416a8d:	in     eax,0x4f
  416a8f:	icebp  
  416a90:	mov    ?,WORD PTR [ebx+edx*2]
  416a93:	pop    esp
  416a94:	and    ch,BYTE PTR [edi]
  416a96:	dec    ebx
  416a97:	fist   DWORD PTR ds:0xdae030d9
  416a9d:	dec    esi
  416a9e:	inc    edi
  416a9f:	jb     0x416a23
  416aa1:	pop    dx
  416aa3:	mov    esp,0x2805d859
  416aa8:	add    ch,BYTE PTR [ebx-0x43]
  416aab:	push   esi
  416aac:	sbb    ebp,esp
  416aae:	inc    ebx
  416aaf:	push   cx
  416ab1:	fs or  bl,bl
  416ab4:	xchg   ebp,eax
  416ab5:	jmp    0xcf675cd1
  416aba:	rcr    DWORD PTR [ecx+0x68bdd0a5],cl
  416ac0:	and    bl,ah
  416ac2:	dec    edx
  416ac3:	fcmovnb st,st(7)
  416ac5:	in     al,0xc4
  416ac7:	outs   dx,BYTE PTR ds:[esi]
  416ac8:	cmp    eax,ebp
  416aca:	pop    es
  416acb:	fstp   TBYTE PTR [ecx]
  416acd:	dec    ebx
  416ace:	add    dl,BYTE PTR [edi+0x5f]
  416ad1:	loope  0x416b1f
  416ad3:	imul   ebp,DWORD PTR [ecx+ebp*1-0x78],0x99f919a6
  416adb:	into   
  416adc:	sbb    DWORD PTR [edi-0x3c],ecx
  416adf:	das    
  416ae0:	je     0x416ab7
  416ae2:	cmp    BYTE PTR [edi+0x74],cl
  416ae5:	test   BYTE PTR [edi+0x66],al
  416ae8:	popf   
  416ae9:	pushf  
  416aea:	xor    eax,DWORD PTR [ebx-0x48]
  416aed:	fs pop esp
  416aef:	push   ecx
  416af0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416af1:	ss popf 
  416af3:	outs   dx,BYTE PTR ds:[esi]
  416af4:	jne    0x416b0b
  416af6:	push   eax
  416af7:	imul   ecx,DWORD PTR [esi+0x4d],0x9329b973
  416afe:	cwde   
  416aff:	int3   
  416b00:	sbb    cl,BYTE PTR [ebx-0x55]
  416b03:	jl     0x416ada
  416b05:	jge    0x416a97
  416b07:	jmp    0x66894426
  416b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b0d:	dec    esi
  416b0e:	mov    esp,0x5079cda5
  416b13:	imul   ebx,DWORD PTR [edx],0x97664864
  416b19:	loope  0x416aa0
  416b1b:	imul   ebx,DWORD PTR [esi],0xebb4d35c
  416b21:	ret    0x6f31
  416b24:	mov    DWORD PTR [esi-0x7d7f71d5],0xe18e13ae
  416b2e:	inc    edi
  416b2f:	xchg   esi,eax
  416b30:	sub    ecx,ebx
  416b32:	ins    BYTE PTR es:[edi],dx
  416b33:	gs adc DWORD PTR cs:[eax+0x67],ecx
  416b38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b39:	push   ds
  416b3a:	sub    dl,BYTE PTR [ebp-0x63]
  416b3d:	jns    0x416b8f
  416b3f:	imul   ebx,DWORD PTR [edx],0x1a6647dc
  416b45:	fxch   st(2)
  416b47:	or     cl,BYTE PTR [edx]
  416b49:	dec    esp
  416b4a:	dec    eax
  416b4b:	mov    eax,ds:0xf2129da5
  416b50:	sbb    bh,BYTE PTR [eax+ecx*2+0x4fe18f66]
  416b57:	gs adc eax,0xbb6330d9
  416b5d:	or     DWORD PTR [edi-0x35],eax
  416b60:	sbb    ah,BYTE PTR [eax+ecx*2+0x66]
  416b64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b65:	sbb    DWORD PTR [eax+0x53f16272],ecx
  416b6b:	icebp  
  416b6c:	and    dl,BYTE PTR [edx]
  416b6e:	sar    DWORD PTR [ebx+0x7e97e28e],cl
  416b74:	push   ebx
  416b75:	and    ebx,edx
  416b77:	pushw  cs
  416b79:	lds    esp,FWORD PTR [eax-0x25]
  416b7c:	add    DWORD PTR gs:[edi-0xf],esi
  416b80:	and    ah,BYTE PTR [edx+0x4b]
  416b83:	mov    bl,0xa3
  416b85:	es nop
  416b87:	sbb    BYTE PTR [edx-0x7],0x4b
  416b8b:	sub    eax,0x6648d91a
  416b90:	pop    ebp
  416b91:	out    dx,eax
  416b92:	lods   eax,DWORD PTR ds:[esi]
  416b93:	pop    ebp
  416b94:	(bad)  
  416b95:	loopne 0x416bde
  416b97:	xchg   BYTE PTR [edx],ch
  416b99:	(bad)  [esi]
  416b9b:	lods   al,BYTE PTR ds:[esi]
  416b9c:	sbb    ah,BYTE PTR [eax-0x26c999b8]
  416ba2:	mov    ecx,DWORD PTR [edx+0x66483a1a]
  416ba8:	push   ds
  416ba9:	fst    DWORD PTR [eax]
  416bab:	sub    DWORD PTR [edx+0x3f66b2a5],eax
  416bb1:	fcomp  st(7)
  416bb3:	jbe    0x416bb7
  416bb5:	pop    edi
  416bb6:	mov    ebp,0x43271956
  416bbb:	data16 stos BYTE PTR es:[edi],al
  416bbd:	adc    DWORD PTR [eax+0x4add1cc0],eax
  416bc3:	int3   
  416bc4:	sbb    DWORD PTR [ebx+0x51],ebx
  416bc7:	xlat   BYTE PTR ds:[ebx]
  416bc8:	stos   DWORD PTR es:[edi],eax
  416bc9:	(bad)  
  416bcb:	sub    BYTE PTR [edi],ch
  416bcd:	lahf   
  416bce:	mov    BYTE PTR [eax],ch
  416bd0:	ss out 0x3f,eax
  416bd3:	jo     0x416be7
  416bd5:	fisub  DWORD PTR [esi+0x20]
  416bd8:	out    0xfa,eax
  416bda:	sti    
  416bdb:	outs   dx,DWORD PTR ds:[esi]
  416bdc:	cwd    
  416bde:	add    BYTE PTR [eax-0x7e],ch
  416be1:	inc    edx
  416be2:	push   edx
  416be3:	mov    edx,0x86bb4928
  416be8:	add    DWORD PTR [eax-0x46],0xa93ca1d5
  416bef:	sar    DWORD PTR [ecx],cl
  416bf1:	sub    BYTE PTR [edi-0x43c1832c],cl
  416bf7:	dec    ebp
  416bf8:	(bad)  
  416bf9:	cmp    bh,dh
  416bfb:	xor    eax,0xcfe01d20
  416c00:	ins    DWORD PTR es:[edi],dx
  416c01:	fcom   QWORD PTR [esi-0x4ac1811c]
  416c07:	aad    0xa3
  416c09:	jecxz  0x416c80
  416c0b:	jae    0x416c6b
  416c0d:	loopne 0x416c7a
  416c0f:	mov    dl,0x16
  416c11:	xor    ecx,DWORD PTR [ecx-0x1]
  416c14:	lods   al,BYTE PTR ds:[esi]
  416c15:	jecxz  0x416ba1
  416c17:	pop    esi
  416c18:	jb     0x416c31
  416c1a:	mov    al,ds:0xad38446a
  416c1f:	jb     0x416c73
  416c21:	sbb    al,0x50
  416c23:	loop   0x416c78
  416c25:	sti    
  416c26:	or     DWORD PTR [ebp-0x794f98ba],esp
  416c2c:	fs or  eax,0x2622ac8c
  416c32:	enter  0x5277,0xec
  416c36:	dec    edi
  416c37:	addr16 sti 
  416c39:	add    DWORD PTR [ecx+edi*8+0x2a],edi
  416c3d:	cwde   
  416c3e:	inc    ecx
  416c3f:	out    dx,al
  416c40:	fbld   TBYTE PTR [esi]
  416c42:	and    bh,ah
  416c44:	push   edi
  416c45:	arpl   WORD PTR [edi+0x5055d596],dx
  416c4b:	outs   dx,BYTE PTR ds:[esi]
  416c4c:	cmp    ebp,eax
  416c4e:	mov    ch,BYTE PTR [eax-0x4735c37d]
  416c54:	jp     0x416beb
  416c56:	mov    al,0xee
  416c58:	pop    edi
  416c59:	pop    ecx
  416c5a:	cwde   
  416c5b:	mov    dh,0x8a
  416c5d:	fist   DWORD PTR [ebx+0x524a0e67]
  416c63:	pop    ebp
  416c64:	fidivr WORD PTR [ecx-0x1be48569]
  416c6a:	enter  0x6170,0xc9
  416c6e:	adc    esi,DWORD PTR [edi+0x0]
  416c71:	loopne 0x416cbe
  416c73:	jnp    0x416ca0
  416c75:	xchg   esi,eax
  416c76:	pop    esp
  416c77:	jg     0x416c55
  416c79:	std    
  416c7a:	push   edx
  416c7b:	jbe    0x416cd8
  416c7d:	in     eax,0x4c
  416c7f:	mov    al,0x27
  416c81:	out    0x8c,eax
  416c83:	push   0xa748e124
  416c88:	call   0x8d52:0xa78ab7e5
  416c8f:	(bad)  
  416c90:	cmp    esi,eax
  416c92:	dec    ebp
  416c93:	lods   eax,DWORD PTR ds:[esi]
  416c94:	push   edx
  416c95:	repnz call 0x830f:0x50152973
  416c9d:	dec    esp
  416c9e:	sub    ebx,DWORD PTR [ebx-0x6d]
  416ca1:	icebp  
  416ca2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ca3:	imul   DWORD PTR [ecx+0x22]
  416ca6:	push   0x29d51b76
  416cab:	ror    DWORD PTR [esi-0x587d89c2],0x6e
  416cb2:	ror    BYTE PTR [edi-0x61],0xd3
  416cb6:	push   esp
  416cb7:	not    edx
  416cb9:	fisttp DWORD PTR [ebx-0x65]
  416cbc:	dec    esp
  416cbd:	sub    eax,0xf963a958
  416cc2:	xchg   ebp,eax
  416cc3:	jo     0x416d0d
  416cc5:	dec    ebx
  416cc6:	push   ebx
  416cc7:	je     0x416d46
  416cc9:	out    0xba,al
  416ccb:	mov    al,0xbe
  416ccd:	jne    0x416d2c
  416ccf:	(bad)  
  416cd0:	sub    edx,edi
  416cd2:	pop    ecx
  416cd3:	shl    BYTE PTR [esi],0x1
  416cd6:	dec    esp
  416cd7:	sbb    bl,BYTE PTR [ecx-0x75988c4f]
  416cdd:	in     al,0x12
  416cdf:	cmp    ah,BYTE PTR [ecx+ebx*4]
  416ce2:	xchg   esp,eax
  416ce3:	xchg   ebp,eax
  416ce4:	hlt    
  416ce5:	dec    edx
  416ce6:	jb     0x416cf0
  416ce8:	sbb    DWORD PTR [edi],eax
  416cea:	scas   al,BYTE PTR es:[edi]
  416ceb:	pushw  0xffc6
  416cee:	out    0xed,al
  416cf0:	cmp    esp,ebp
  416cf2:	jge    0x416d42
  416cf4:	pop    ecx
  416cf5:	idiv   bl
  416cf7:	sti    
  416cf8:	fimul  DWORD PTR [edx-0x42783f34]
  416cfe:	(bad)  
  416cff:	jl     0x416c9c
  416d01:	lahf   
  416d02:	shl    BYTE PTR [esi-0x56],cl
  416d05:	sbb    BYTE PTR [esi-0x38],dh
  416d08:	cdq    
  416d09:	sub    BYTE PTR [ecx+0x7fd93c99],al
  416d0f:	jge    0x416cb3
  416d11:	outs   dx,DWORD PTR cs:[esi]
  416d13:	or     eax,0xd398e8c3
  416d18:	imul   ebp
  416d1a:	jns    0x416cbf
  416d1c:	sub    al,BYTE PTR [ecx]
  416d1e:	sub    bh,al
  416d20:	sbb    dl,ah
  416d22:	stos   BYTE PTR es:[edi],al
  416d23:	push   0xf46f95e5
  416d28:	and    eax,0xb7ce9fdc
  416d2d:	and    bh,ch
  416d2f:	xchg   ebx,eax
  416d30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d31:	out    0xf3,eax
  416d33:	pop    es
  416d34:	pop    ds
  416d35:	cmp    DWORD PTR [eax],ebx
  416d37:	inc    ecx
  416d38:	cs cmp eax,0x71e8454b
  416d3e:	add    esi,ebx
  416d40:	mov    ds:0xb13060d9,eax
  416d45:	lahf   
  416d46:	inc    edi
  416d47:	shl    BYTE PTR [eax],1
  416d49:	repz hlt 
  416d4b:	out    dx,al
  416d4c:	lods   al,BYTE PTR ds:[esi]
  416d4d:	xchg   DWORD PTR [eax+0x69],ecx
  416d50:	adc    BYTE PTR [edi-0x68],0x3b
  416d54:	xchg   ecx,eax
  416d55:	xchg   ecx,eax
  416d56:	popa   
  416d57:	(bad)  
  416d58:	popa   
  416d59:	pop    ebx
  416d5a:	je     0x416dc0
  416d5c:	push   ebp
  416d5d:	inc    edi
  416d5e:	dec    eax
  416d5f:	mov    eax,0xefbdbb05
  416d64:	inc    eax
  416d65:	(bad)  
  416d67:	loope  0x416dbc
  416d69:	push   ecx
  416d6a:	and    BYTE PTR ds:0xa803557d,0x18
  416d71:	or     eax,0x991ac7c1
  416d76:	sub    al,0x43
  416d78:	aas    
  416d79:	pop    es
  416d7a:	scas   al,BYTE PTR es:[edi]
  416d7b:	pop    ebp
  416d7c:	ss mov edi,0xf793b781
  416d82:	loop   0x416d5e
  416d84:	fistp  DWORD PTR [ecx-0x4d]
  416d87:	retf   
  416d88:	xor    ecx,DWORD PTR [ebx-0x4ee5e1d0]
  416d8e:	ret    0xcf0f
  416d91:	pop    ebx
  416d92:	(bad)  
  416d93:	pop    ebx
  416d94:	inc    esp
  416d95:	mov    ebp,0xb61d055b
  416d9a:	pop    ss
  416d9b:	outs   dx,BYTE PTR ds:[esi]
  416d9c:	sub    DWORD PTR [edx],ebx
  416d9e:	ins    DWORD PTR es:[edi],dx
  416d9f:	arpl   WORD PTR [edx],ax
  416da1:	into   
  416da2:	in     al,dx
  416da3:	jnp    0x416ddd
  416da5:	cld    
  416da6:	fmulp  st(7),st
  416da8:	sbb    al,BYTE PTR [eax+0xa7b95e1]
  416dae:	pop    ebx
  416daf:	jge    0x416d4b
  416db1:	mov    al,0x73
  416db3:	data16 fst QWORD PTR [esi+0x70]
  416db7:	mov    edi,0x5ab5891a
  416dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dbd:	ja     0x416db2
  416dbf:	les    ecx,FWORD PTR [ecx-0x27]
  416dc2:	mov    eax,edi
  416dc4:	loop   0x416d5b
  416dc6:	sub    eax,0xe175fac9
  416dcb:	retf   
  416dcc:	(bad)
  416dd0:	jp     0x416e39
  416dd2:	rcr    bh,1
  416dd4:	push   esp
  416dd5:	or     BYTE PTR [eax],bl
  416dd7:	addr16 (bad) 
  416dd9:	pop    ebp
  416dda:	inc    edx
  416ddb:	cmp    BYTE PTR cs:[edi],bl
  416dde:	lea    esp,[eax]
  416de0:	fst    QWORD PTR [eax]
  416de2:	mov    BYTE PTR [ebx-0x8c45eca],dl
  416de8:	mov    edi,0x57bc73d9
  416ded:	cs jnp 0x416e6b
  416df0:	cmp    eax,0x56548a63
  416df5:	cwde   
  416df6:	dec    eax
  416df7:	mov    ah,0xf5
  416df9:	xor    al,0xad
  416dfb:	adc    ah,0x40
  416dfe:	adc    eax,0x7da74e67
  416e03:	les    edx,FWORD PTR [esi+0x29331771]
  416e09:	push   0x59669f48
  416e0e:	inc    edi
  416e0f:	or     eax,0x6695ac47
  416e14:	das    
  416e15:	cs mov ecx,0x38c51a4c
  416e1b:	aam    0x4a
  416e1d:	xchg   esp,eax
  416e1e:	mov    eax,0x9bd997a6
  416e23:	sub    eax,0xb4865c5f
  416e28:	mov    ds:0xef00e3e9,al
  416e2d:	push   0x48
  416e2f:	xchg   ecx,eax
  416e30:	mov    ebx,0x4d4f909f
  416e35:	retf   0x664c
  416e38:	xor    dl,dh
  416e3a:	lea    esi,[edx]
  416e3c:	mov    eax,es
  416e3e:	and    al,0xe5
  416e40:	outs   dx,BYTE PTR ds:[esi]
  416e41:	aad    0x48
  416e43:	inc    esp
  416e44:	jle    0x416e03
  416e46:	sub    BYTE PTR [esi],ah
  416e48:	fwait
  416e49:	loopne 0x416ea9
  416e4b:	mov    di,0xef47
  416e4f:	mov    eax,ds:0xcf6cea1a
  416e54:	loope  0x416de4
  416e56:	out    dx,al
  416e57:	rcl    BYTE PTR [ecx+0x54],cl
  416e5a:	mul    al
  416e5c:	ss adc eax,0x599a52c1
  416e62:	xchg   BYTE PTR [ebx],bh
  416e64:	mov    ch,0x1d
  416e66:	mov    eax,0xd25c1a69
  416e6b:	adc    ecx,esp
  416e6d:	add    dh,BYTE PTR [ebx]
  416e6f:	push   esp
  416e70:	mov    ch,dh
  416e72:	test   BYTE PTR [eax-0x6a7a266c],0x7c
  416e79:	bound  ebp,QWORD PTR [edx]
  416e7b:	pop    esp
  416e7c:	sbb    dh,BYTE PTR [esi]
  416e7e:	jae    0x416ec4
  416e80:	icebp  
  416e81:	dec    edx
  416e82:	and    eax,0x98158695
  416e87:	cld    
  416e88:	mov    eax,ds:0xd213cd6d
  416e8d:	cmp    esp,edx
  416e8f:	adc    al,dh
  416e91:	fmul   QWORD PTR [ecx]
  416e93:	sar    BYTE PTR ds:0x91f04857,1
  416e99:	rcr    BYTE PTR ds:0x216d7e0f,0x85
  416ea0:	fcos   
  416ea2:	je     0x416e8a
  416ea4:	inc    edx
  416ea5:	add    ebx,DWORD PTR [eax]
  416ea7:	xchg   ebx,eax
  416ea8:	sbb    DWORD PTR [ebx-0x315542b1],0xffffff9e
  416eaf:	mov    eax,ds:0xd4b3d9f8
  416eb4:	mov    bl,0x84
  416eb6:	shl    BYTE PTR [eax+esi*8-0x4f],cl
  416eba:	xchg   esp,eax
  416ebb:	pop    eax
  416ebc:	ror    DWORD PTR [edx+0x68c82c48],1
  416ec2:	in     al,0x6d
  416ec4:	and    edi,esp
  416ec6:	mov    al,0x67
  416ec8:	cmp    DWORD PTR [edx-0x2f],edi
  416ecb:	cmp    eax,0x4a8460ea
  416ed0:	fild   WORD PTR [ecx]
  416ed2:	dec    eax
  416ed3:	fldcw  WORD PTR [esi+0x30]
  416ed6:	cmp    al,0x23
  416ed8:	(bad)  
  416ed9:	fldcw  WORD PTR [ebx-0xa]
  416edc:	or     eax,0xd7b4d374
  416ee1:	imul   esp,DWORD PTR [ebp-0x42],0x5481782
  416ee8:	fstp   TBYTE PTR [ecx-0x26a8e230]
  416eee:	push   0x1be5b5c
  416ef3:	mov    ch,0x22
  416ef5:	mov    edi,0xb1c29bc2
  416efa:	dec    eax
  416efb:	out    dx,eax
  416efc:	mov    dl,0xd6
  416efe:	mov    ebp,0xa0746dbb
  416f03:	data16 clc 
  416f05:	or     ah,BYTE PTR [ebx]
  416f07:	neg    DWORD PTR [edx]
  416f09:	and    al,0xa1
  416f0b:	mov    DWORD PTR [esi],esi
  416f0d:	lea    ecx,[eax]
  416f0f:	imul   edx,DWORD PTR [esi-0x27],0xe
  416f13:	xor    ebp,ebx
  416f15:	test   BYTE PTR [esi+0x75],al
  416f18:	lock loopne 0x416f54
  416f1b:	xchg   ebx,eax
  416f1c:	fistp  WORD PTR [ecx-0x7b]
  416f1f:	dec    edx
  416f20:	popa   
  416f21:	fst    QWORD PTR [ebx+0x74dd0df9]
  416f27:	ror    bh,1
  416f29:	jmp    0x416f3a
  416f2b:	mov    ds,edx
  416f2d:	imul   edi,DWORD PTR [edx+0x39],0x1b
  416f31:	sub    ah,BYTE PTR [edi+0xf86355c]
  416f37:	je     0x416ec3
  416f39:	adc    ecx,edi
  416f3b:	xor    al,0xb3
  416f3d:	stc    
  416f3e:	(bad)  
  416f3f:	data16 clc 
  416f41:	test   BYTE PTR [ecx+0x1f0a0267],ah
  416f47:	mov    al,ds:0xa84fa140
  416f4c:	ficom  DWORD PTR [edi*2-0x610eb30f]
  416f53:	fmul   st,st(1)
  416f55:	or     DWORD PTR [esi],ebp
  416f57:	push   ebp
  416f58:	sbb    dh,BYTE PTR [edi]
  416f5a:	test   bl,0xb
  416f5d:	sti    
  416f5e:	sbb    al,0x41
  416f60:	lahf   
  416f61:	fxam   
  416f63:	mov    eax,0xc9c3e166
  416f68:	ret    
  416f69:	out    dx,al
  416f6a:	sbb    al,BYTE PTR [edx-0x2fb7e691]
  416f70:	or     eax,0x204e7ef0
  416f75:	fst    DWORD PTR [esi-0x58adbea0]
  416f7b:	adc    ch,BYTE PTR [edi]
  416f7d:	jb     0x416f5a
  416f7f:	mov    eax,ds:0x80488771
  416f84:	mov    ch,0xa7
  416f86:	fs mov al,0x14
  416f89:	sub    BYTE PTR [ecx],dh
  416f8b:	addr16 mov esp,0x215724de
  416f91:	mov    DWORD PTR [ecx],0x33bcf6cb
  416f97:	or     bh,al
  416f99:	push   0xffffff99
  416f9b:	shl    DWORD PTR [edx+0xa3c0bd9],1
  416fa1:	in     eax,0xe4
  416fa3:	fwait
  416fa4:	out    dx,al
  416fa5:	dec    esi
  416fa6:	sbb    eax,edx
  416fa8:	cmp    BYTE PTR [edx],cl
  416faa:	dec    eax
  416fab:	cmp    eax,0xa19bba42
  416fb0:	or     BYTE PTR [edx+esi*1],dl
  416fb3:	outs   dx,BYTE PTR ds:[esi]
  416fb4:	add    DWORD PTR [ebp+0xd],edi
  416fb7:	in     al,0xf2
  416fb9:	or     al,0x28
  416fbb:	imul   ebx,DWORD PTR [edx],0x1e
  416fbe:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fc0:	jae    0x41703b
  416fc2:	ja     0x416f8c
  416fc4:	das    
  416fc5:	adc    eax,0xe110dd11
  416fca:	fcmovb st,st(1)
  416fcc:	push   ds
  416fcd:	pushf  
  416fce:	push   esp
  416fcf:	xlat   BYTE PTR ds:[ebx]
  416fd0:	mov    edx,0x2a855659
  416fd5:	rcr    BYTE PTR [ebx],0xbb
  416fd8:	and    eax,DWORD PTR [eax+0x81b7a48]
  416fde:	stc    
  416fdf:	xchg   esp,eax
  416fe0:	xchg   ebp,eax
  416fe1:	xlat   BYTE PTR ds:[ebx]
  416fe2:	pop    ecx
  416fe3:	ins    DWORD PTR es:[edi],dx
  416fe4:	ds mov ecx,0x3ccddf43
  416fea:	xchg   ebp,eax
  416feb:	push   esi
  416fec:	or     eax,0xe4074899
  416ff1:	in     al,0x23
  416ff3:	cwde   
  416ff4:	nop
  416ff5:	adc    al,cl
  416ff7:	dec    edx
  416ff8:	sbb    ah,BYTE PTR [esi+esi*8+0x22]
  416ffc:	pop    eax
  416ffd:	lods   eax,DWORD PTR ds:[esi]
  416ffe:	xor    ebx,DWORD PTR [esi-0x78e551e6]
  417004:	pop    esi
  417005:	push   edx
  417006:	popf   
  417007:	xchg   esp,eax
  417008:	hlt    
  417009:	fcomp  QWORD PTR [ebp+0x44d1c85a]
  41700f:	xlat   BYTE PTR ds:[ebx]
  417010:	repnz cmp eax,0x561a2ece
  417016:	inc    edx
  417017:	or     al,0xcf
  417019:	pop    edx
  41701a:	sub    eax,0xddd9612b
  41701f:	adc    ebx,DWORD PTR [ebx-0x2]
  417022:	pop    ebp
  417023:	out    dx,al
  417024:	les    esi,FWORD PTR [esi+0x312445a2]
  41702a:	dec    ecx
  41702b:	sbb    al,0xe2
  41702d:	pop    ds
  41702e:	imul   eax,DWORD PTR [edx],0x5207d9e7
  417034:	add    cl,BYTE PTR [eax-0xc04c869]
  41703a:	adc    ebx,DWORD PTR [ecx+0x1548cb48]
  417040:	jmp    0xc721:0x1fd1e622
  417047:	xchg   dx,ax
  417049:	lahf   
  41704a:	push   edx
  41704b:	enter  0xb41a,0x89
  41704f:	aad    0x30
  417051:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  417053:	adc    DWORD PTR ds:0x3bb6abca,0xffffffc2
  41705a:	sub    ah,BYTE PTR [edi-0xd]
  41705d:	mov    BYTE PTR [edi+eiz*8+0x4d4fea37],bh
  417064:	sbb    bl,BYTE PTR [ebx]
  417066:	loope  0x4170d5
  417068:	xchg   DWORD PTR [ecx],esp
  41706a:	in     eax,0x7e
  41706c:	pop    ebp
  41706d:	sub    dh,dh
  41706f:	cs stos WORD PTR es:[edi],ax
  417072:	mov    eax,ds:0x8fa1af6
  417077:	mov    bl,0xf0
  417079:	xor    bl,al
  41707b:	imul   esi,DWORD PTR [esi-0x7c3b6f27],0x3d
  417082:	sbb    eax,0x2107ad96
  417087:	add    al,0x43
  417089:	addr16 xor si,ax
  41708d:	test   al,0x8
  41708f:	pop    edx
  417090:	hlt    
  417091:	dec    edx
  417092:	adc    DWORD PTR [eax+0x667431d0],ebp
  417098:	xchg   edi,eax
  417099:	cld    
  41709a:	mov    eax,ds:0x7e9836a4
  41709f:	iret   
  4170a0:	fwait
  4170a1:	hlt    
  4170a2:	retf   
  4170a3:	pop    esp
  4170a4:	pusha  
  4170a5:	jb     0x417080
  4170a7:	pop    ebp
  4170a8:	clc    
  4170a9:	(bad)  [edi]
  4170ab:	and    al,dh
  4170ad:	pop    esp
  4170ae:	clc    
  4170af:	mov    eax,ds:0x71f9a31
  4170b4:	sahf   
  4170b5:	jae    0x41710e
  4170b7:	in     eax,0x6c
  4170b9:	cmp    DWORD PTR [ecx-0xe],esi
  4170bc:	push   0x756e2143
  4170c1:	stc    
  4170c2:	cld    
  4170c3:	and    DWORD PTR [ebx],0xffffff86
  4170c6:	mov    ds:0xc5931b03,al
  4170cb:	mov    ch,0xbd
  4170cd:	pop    ds
  4170ce:	mov    eax,ds:0x8039dc4f
  4170d3:	cmp    edi,edx
  4170d5:	(bad)  
  4170d7:	inc    esp
  4170d8:	aad    0xc9
  4170da:	sub    ax,0x1eb1
  4170de:	(bad)  
  4170df:	scas   al,BYTE PTR es:[edi]
  4170e0:	cmp    eax,0x858848cf
  4170e5:	and    ax,0x517c
  4170e9:	pop    ss
  4170ea:	dec    ebp
  4170eb:	pop    edx
  4170ec:	push   0xffffffb1
  4170ee:	mov    BYTE PTR [ebp-0x5f1afb12],cl
  4170f4:	mov    ds:0xba39cf58,eax
  4170f9:	jne    0x417128
  4170fb:	addr16 sbb bh,ah
  4170fe:	and    al,0xe9
  417100:	outs   dx,BYTE PTR ds:[esi]
  417101:	jecxz  0x41716f
  417103:	popa   
  417104:	out    0xe8,al
  417106:	jno    0x4170d1
  417108:	add    eax,0xc9431087
  41710d:	inc    edi
  41710e:	enter  0x1dad,0x1f
  417112:	pop    esi
  417113:	xchg   ebp,eax
  417114:	rcl    BYTE PTR [eax],cl
  417116:	sbb    al,0x73
  417118:	adc    ecx,edx
  41711a:	and    ch,BYTE PTR [edx]
  41711c:	in     eax,dx
  41711d:	fdiv   QWORD PTR [edi-0x7e3ed222]
  417123:	and    dl,ch
  417125:	out    dx,al
  417126:	stos   BYTE PTR es:[edi],al
  417127:	sbb    eax,0x643d8e21
  41712c:	into   
  41712d:	jg     0x67b4b96d
  417133:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417134:	jmp    0x41712e
  417136:	add    BYTE PTR [edi],0x65
  417139:	sbb    DWORD PTR [ebx],esp
  41713b:	mov    bh,0x78
  41713d:	xchg   ebp,eax
  41713e:	jmp    0xb7e:0x60fc1ac1
  417145:	out    0x3e,eax
  417147:	and    DWORD PTR [ebp-0x2ae2426],esp
  41714d:	inc    eax
  41714e:	pushf  
  41714f:	dec    esi
  417150:	mov    bl,0xb1
  417152:	cld    
  417153:	rcr    DWORD PTR [edx],0x3d
  417156:	push   edi
  417157:	cmp    DWORD PTR [ecx],esi
  417159:	icebp  
  41715a:	xchg   ecx,eax
  41715b:	pusha  
  41715c:	inc    edx
  41715d:	(bad)  [ebx+0x16bb1df1]
  417163:	not    BYTE PTR [ebp-0x4d59796e]
  417169:	dec    DWORD PTR [edx-0x57]
  41716c:	dec    DWORD PTR [ecx-0x25160024]
  417172:	jns    0x417150
  417174:	push   0xffffff99
  417176:	mov    dh,0xce
  417178:	ret    0x303a
  41717b:	adc    ecx,edx
  41717d:	in     al,0x18
  41717f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417180:	(bad)  
  417181:	std    
  417182:	jb     0x41714b
  417184:	call   0xc1a1c8a0
  417189:	fcom   QWORD PTR [eax+0x46]
  41718c:	aaa    
  41718d:	fnstenv [eax]
  41718f:	bnd jmp 0x4171d6
  417192:	pop    ss
  417193:	push   ebx
  417194:	mov    WORD PTR [eax-0x1d],gs
  417197:	js     0x4171e7
  417199:	pop    ecx
  41719a:	sub    DWORD PTR [ebx-0x65],0x580e3f37
  4171a1:	fadd   st(7),st
  4171a3:	mov    dl,0x36
  4171a5:	int    0x98
  4171a7:	in     al,0xc5
  4171a9:	scas   eax,DWORD PTR es:[edi]
  4171aa:	mov    esp,DWORD PTR [esi]
  4171ac:	mov    esi,0x6f50e7f6
  4171b1:	fld    DWORD PTR [ebp+eiz*8+0x46546b48]
  4171b8:	(bad)  [di+0x55]
  4171bc:	push   edi
  4171bd:	dec    edi
  4171be:	in     eax,dx
  4171bf:	add    eax,0x168cf1e5
  4171c4:	sub    ecx,DWORD PTR [ecx+ecx*2+0x39]
  4171c8:	imul   esp,DWORD PTR [ebx-0x178f32e8],0x21091e3b
  4171d2:	es pop esi
  4171d4:	rol    BYTE PTR [edi],cl
  4171d6:	or     BYTE PTR [ebp+0x1a],cl
  4171d9:	adc    DWORD PTR [ebx+0x586a6f28],edi
  4171df:	sete   al
  4171e2:	pop    ebx
  4171e3:	stos   DWORD PTR es:[edi],eax
  4171e4:	out    0xd9,al
  4171e6:	pop    ds
  4171e7:	std    
  4171e8:	xchg   ecx,eax
  4171e9:	pop    edi
  4171ea:	xchg   esp,eax
  4171eb:	fcom   DWORD PTR [edx]
  4171ed:	cmp    DWORD PTR [ebx+0x47dc9f3d],esi
  4171f3:	addr16 mov ds:0xd56e,eax
  4171f7:	inc    ebp
  4171f8:	jle    0x417242
  4171fa:	mov    esp,0x9060069
  4171ff:	inc    ebx
  417200:	jge    0x41724b
  417202:	jmp    0xd5f53cbf
  417207:	lds    ecx,FWORD PTR [ecx]
  417209:	dec    esp
  41720a:	dec    eax
  41720b:	mov    eax,ds:0x507c100d
  417210:	(bad)  
  417212:	or     eax,DWORD PTR [esi+0x268463b3]
  417218:	int    0x8
  41721a:	mov    ebx,0x47f8664b
  41721f:	push   ds
  417220:	mov    al,0x9
  417222:	and    al,0x59
  417224:	ror    DWORD PTR [ebx+eiz*4],0x74
  417228:	jg     0x41721e
  41722a:	imul   ecx,DWORD PTR [ebx-0x1890f5d3],0x5e7545a3
  417234:	retf   0x483c
  417237:	aad    0xe3
  417239:	dec    ebp
  41723a:	jl     0x4172a8
  41723c:	sbb    BYTE PTR [ebx+0x1d336693],dl
  417242:	cmp    BYTE PTR [eax+0x31683f1a],bl
  417248:	mov    ebp,0x6589a672
  41724d:	(bad)  [eax+0x182ee98c]
  417253:	enter  0xea1e,0x11
  417257:	dec    esi
  417258:	enter  0x47df,0xc6
  41725c:	arpl   WORD PTR [ebp-0x1b],ax
  41725f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417260:	xlat   BYTE PTR ds:[ebx]
  417261:	jge    0x4172d9
  417263:	data16 cmc 
  417265:	jle    0x41725f
  417267:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417268:	jb     0x417203
  41726a:	gs pop ds
  41726c:	mov    esp,0x3566ef1a
  417271:	imul   esi,DWORD PTR [edi-0x64],0xffffffb7
  417275:	mov    dh,0xe6
  417277:	push   0x27
  417279:	pop    ecx
  41727a:	push   ebx
  41727b:	cdq    
  41727c:	stos   BYTE PTR es:[edi],al
  41727d:	mov    ebx,0x5b4ec234
  417282:	dec    eax
  417283:	nop
  417284:	pop    esp
  417285:	enter  0xdf9d,0x36
  417289:	mov    eax,0x2c992175
  41728f:	aaa    
  417290:	fmul   DWORD PTR [esi+0x5]
  417293:	pop    edx
  417294:	push   es
  417295:	nop
  417296:	adc    BYTE PTR [ecx],bl
  417298:	xchg   ebx,eax
  417299:	cmc    
  41729a:	mov    ds:0xb0ae9a79,eax
  41729f:	arpl   WORD PTR [esi+0x49],bx
  4172a2:	pop    esp
  4172a3:	ror    DWORD PTR [edi-0x58998743],1
  4172a9:	xlat   BYTE PTR ds:[ebx]
  4172aa:	nop
  4172ab:	push   eax
  4172ac:	sbb    dh,BYTE PTR [eax+0x2f]
  4172af:	(bad)  
  4172b0:	pop    ecx
  4172b1:	push   ecx
  4172b2:	xchg   ebp,eax
  4172b3:	das    
  4172b4:	mov    ch,0xdc
  4172b6:	loopne 0x4172ce
  4172b8:	or     eax,0xf27539b2
  4172bd:	fwait
  4172be:	cmp    BYTE PTR [eax-0x64d53fe3],ch
  4172c4:	pop    ebp
  4172c5:	popf   
  4172c6:	shr    DWORD PTR [ebp+0x74596cd],cl
  4172cc:	or     BYTE PTR [ebp-0x4c9572b9],ch
  4172d2:	nop
  4172d3:	jne    0x41726c
  4172d5:	sbb    BYTE PTR [eax-0x23],ch
  4172d8:	sbb    dh,BYTE PTR [edx]
  4172da:	push   ss
  4172db:	fbstp  TBYTE PTR [edx+0x7e]
  4172de:	jg     0x417357
  4172e0:	jo     0x4172bb
  4172e2:	xchg   esp,eax
  4172e3:	in     al,0x31
  4172e5:	dec    edx
  4172e6:	out    dx,al
  4172e7:	clc    
  4172e8:	ss cld 
  4172ea:	jno    0x41727f
  4172ec:	cs mov bh,0x48
  4172ef:	jmp    0x79b066fc
  4172f4:	and    DWORD PTR ds:0x69f66e0,esp
  4172fa:	cmp    eax,0xee32176
  4172ff:	mov    esp,0xd0897895
  417304:	ja     0x417384
  417306:	dec    eax
  417307:	xor    DWORD PTR [ebp-0x56],ebp
  41730a:	push   0x66
  41730c:	into   
  41730d:	(bad)  
  41730e:	mov    WORD PTR [edi+0x1a],cs
  417311:	ret    
  417312:	sbb    al,0xf4
  417314:	mov    ah,0x1a
  417316:	sub    ebp,DWORD PTR [ecx+0x1e1ee101]
  41731c:	push   ss
  41731d:	lods   eax,DWORD PTR ds:[esi]
  41731e:	push   esp
  41731f:	and    eax,0x36a69adc
  417324:	sbb    ah,BYTE PTR [esi]
  417326:	lods   eax,DWORD PTR ds:[esi]
  417327:	int    0xc0
  417329:	retf   0x70c4
  41732c:	(bad)  
  41732d:	(bad)  [ecx-0x2d]
  417330:	mov    edx,0x39470702
  417335:	and    ebx,ecx
  417337:	add    DWORD PTR [edi+0x6b],eax
  41733a:	dec    eax
  41733b:	sti    
  41733c:	and    al,0x18
  41733e:	push   ds
  41733f:	repz in eax,0x61
  417342:	or     esp,DWORD PTR [edi-0x46]
  417345:	mov    bh,ah
  417347:	mov    edx,0x18e3d1a
  41734c:	pushf  
  41734d:	adc    cl,ah
  41734f:	pushf  
  417350:	xchg   esp,eax
  417351:	fst    DWORD PTR ds:0x212b6de3
  417357:	pop    ss
  417358:	cmc    
  417359:	(bad)  
  41735b:	xchg   edi,eax
  41735c:	adc    eax,0x6a704819
  417361:	rcl    al,cl
  417363:	xchg   ebx,eax
  417364:	cmp    DWORD PTR [ebx-0x56],edx
  417367:	data16 jp 0x4173e3
  41736a:	aad    0x44
  41736c:	sbb    bh,BYTE PTR [eax+esi*1-0x6b]
  417370:	fs add esp,ecx
  417373:	sbb    BYTE PTR ds:0xcb637dd9,ah
  417379:	ret    0xd99a
  41737c:	lahf   
  41737d:	xchg   esi,eax
  41737e:	mov    eax,ds:0x485292ca
  417383:	mov    ebp,ebx
  417385:	fs jmp 0x41733e
  417388:	cwde   
  417389:	repz enter 0x61a2,0x98
  41738e:	enter  0x5fd6,0x90
  417392:	mov    dh,0x97
  417394:	mov    dh,0x34
  417396:	pop    edi
  417397:	xor    bl,BYTE PTR [edx]
  417399:	mov    esp,0x2f3b285a
  41739e:	sbb    DWORD PTR [esi+ecx*1-0x3a],ebp
  4173a2:	push   ebp
  4173a3:	push   si
  4173a5:	out    dx,al
  4173a6:	xlat   BYTE PTR ds:[ebx]
  4173a7:	xchg   edx,eax
  4173a8:	and    ebp,DWORD PTR [edx-0x47]
  4173ab:	or     BYTE PTR [ecx+ebx*8],ah
  4173ae:	dec    edx
  4173af:	sub    eax,ebx
  4173b1:	cmp    esi,DWORD PTR [esi]
  4173b3:	in     al,dx
  4173b4:	mov    ebp,0x4366d2f1
  4173b9:	pop    es
  4173ba:	and    edi,edx
  4173bc:	sbb    edx,DWORD PTR [edi+ebp*2+0x243063be]
  4173c3:	pushf  
  4173c4:	dec    edx
  4173c5:	pop    ds
  4173c6:	aad    0x70
  4173c8:	ds imul edx,esi,0x75
  4173cc:	mov    edx,0x81514070
  4173d1:	je     0x417432
  4173d3:	and    dl,BYTE PTR [edi]
  4173d5:	gs dec edi
  4173d7:	cdq    
  4173d8:	fidivr DWORD PTR [edi-0x26a1c5c3]
  4173de:	and    esi,eax
  4173e0:	adc    eax,0x80eb61fa
  4173e5:	popf   
  4173e6:	std    
  4173e7:	or     esp,DWORD PTR [eax+ebp*2-0x17b18aa9]
  4173ee:	inc    esi
  4173ef:	xchg   ebp,eax
  4173f0:	mov    ch,0x1e
  4173f2:	xchg   esp,eax
  4173f3:	out    0x87,al
  4173f5:	fxch   st(3)
  4173f7:	cld    
  4173f8:	fdivr  DWORD PTR [esi-0x21fd4556]
  4173fe:	lock xor edi,eax
  417401:	imul   ecx,DWORD PTR [edi-0x14],0x8367053a
  417408:	mov    dl,0xf5
  41740a:	and    edx,esp
  41740c:	out    0x19,al
  41740e:	and    DWORD PTR [ecx+0x30],ebx
  417411:	sub    dh,BYTE PTR [ebx]
  417413:	out    dx,eax
  417414:	push   edx
  417415:	dec    esi
  417416:	xchg   esp,eax
  417417:	(bad)  
  417418:	mov    ebx,0x796689c7
  41741d:	inc    esi
  41741e:	jae    0x417490
  417420:	xchg   esi,eax
  417421:	or     al,0xf6
  417423:	addr16 pop esi
  417425:	ret    
  417426:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417427:	(bad)  
  417428:	mov    ds:0xe7325a7a,eax
  41742d:	cmp    al,0x48
  41742f:	mov    bh,0x7c
  417431:	psubsb mm1,QWORD PTR [esi]
  417434:	sahf   
  417435:	mov    edi,0xc4716684
  41743a:	or     edi,ebp
  41743c:	sbb    ch,ch
  41743e:	(bad)  
  41743f:	pop    edi
  417440:	stos   DWORD PTR es:[edi],eax
  417441:	jecxz  0x4173f3
  417443:	repz inc ecx
  417445:	fnstcw WORD PTR [ecx-0x2bbcac3c]
  41744b:	ret    0x5e88
  41744e:	push   ds
  41744f:	imul   esi,DWORD PTR [ebp+0x4bc56e90],0x91f45799
  417459:	ffreep st(4)
  41745b:	in     al,0x3a
  41745d:	test   DWORD PTR [edi+0x66],ebx
  417460:	fst    QWORD PTR [ebp-0x39]
  417463:	cmp    al,0x92
  417465:	ja     0x41746e
  417467:	mov    DWORD PTR [eax+0x59],esi
  41746a:	xchg   DWORD PTR [edx+0x1f5273bc],ecx
  417470:	pminub mm7,QWORD PTR [ebp-0x46d31d75]
  417477:	xor    BYTE PTR [edx+0x2a79a6d6],bh
  41747d:	cwde   
  41747e:	dec    eax
  41747f:	mov    ebp,0x46019104
  417484:	pop    eax
  417485:	clc    
  417486:	push   ecx
  417487:	jne    0x4174c3
  417489:	icebp  
  41748a:	repz scas al,BYTE PTR es:[edi]
  41748c:	mov    eax,ds:0x5f076161
  417491:	sbb    DWORD PTR [eax+0x27],ecx
  417494:	adc    eax,edx
  417496:	loope  0x41744a
  417498:	div    BYTE PTR [edi]
  41749a:	or     esp,DWORD PTR [edi-0x3]
  41749d:	fwait
  41749e:	mov    ah,0xe2
  4174a0:	add    esp,DWORD PTR ss:[eax-0x69222522]
  4174a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174a8:	and    DWORD PTR [eax],edi
  4174aa:	and    bl,BYTE PTR [esi+0x2]
  4174ad:	fist   DWORD PTR [ebx+0x389e3a5e]
  4174b3:	sti    
  4174b4:	int    0xa9
  4174b6:	sub    al,0xb5
  4174b8:	sbb    bh,BYTE PTR [ecx-0x48]
  4174bb:	out    dx,eax
  4174bc:	dec    edi
  4174bd:	push   edi
  4174be:	jb     0x417478
  4174c0:	mov    ebp,0xd96f35d9
  4174c5:	dec    ebp
  4174c6:	mov    dl,0xdb
  4174c8:	in     eax,0xe0
  4174ca:	jns    0x417500
  4174cc:	dec    ebx
  4174cd:	ror    DWORD PTR [eax-0x6a],1
  4174d0:	add    al,0x72
  4174d2:	outs   dx,BYTE PTR ds:[esi]
  4174d3:	test   DWORD PTR [esi+0x32],edx
  4174d6:	aaa    
  4174d7:	addr16 test eax,0x2d07eccc
  4174dd:	inc    ebx
  4174de:	dec    ecx
  4174df:	gs sbb bl,cl
  4174e2:	stos   BYTE PTR es:[edi],al
  4174e3:	lds    esp,FWORD PTR [edx]
  4174e5:	call   0x27ed57f6
  4174ea:	bnd jne 0x41748b
  4174ed:	adc    DWORD PTR [ebx-0x1be527e9],ebx
  4174f3:	sub    ebp,eax
  4174f5:	rcl    BYTE PTR [eax],0x82
  4174f8:	sbb    bh,BYTE PTR ds:0x6658ddf8
  4174fe:	push   ebp
  4174ff:	repnz and al,ch
  417502:	fst    QWORD PTR [edx]
  417504:	dec    esp
  417505:	aam    0xd1
  417507:	pop    esp
  417508:	mov    ?,WORD PTR [ebp-0x14dc0ad8]
  41750e:	or     ah,BYTE PTR [ebx+0x45]
  417511:	fldenv [esi-0x76]
  417514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417515:	dec    eax
  417516:	jmp    0xb683:0x5cbc87d2
  41751d:	cwde   
  41751e:	cwde   
  41751f:	xor    eax,0x14483452
  417524:	and    ebp,edi
  417526:	gs push ss
  417528:	inc    eax
  417529:	sti    
  41752a:	pop    ecx
  41752b:	mov    ds:0x7f6b9999,eax
  417530:	mov    ah,0xd9
  417532:	fisttp QWORD PTR [esi]
  417534:	ror    DWORD PTR [ebx+0x5f52fb7f],0x1c
  41753b:	dec    esi
  41753c:	inc    ebp
  41753d:	ror    DWORD PTR [eax+0x63],cl
  417540:	es jmp 0xc9782d8f
  417546:	xchg   esp,eax
  417547:	jne    0x417523
  417549:	inc    ecx
  41754a:	jl     0x4174f9
  41754c:	dec    esp
  41754d:	mov    ch,0x4d
  41754f:	sub    eax,0x18c2531a
  417554:	mov    edx,0x79c83b6b
  417559:	(bad)  
  41755b:	jge    0x417532
  41755d:	(bad)  
  41755e:	fist   WORD PTR [ecx+0x6c5363d3]
  417564:	push   es
  417565:	push   ebp
  417566:	dec    eax
  417567:	(bad)  
  417569:	and    BYTE PTR [esi+ebx*8+0x7c],al
  41756d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41756e:	test   eax,0xe0266
  417573:	std    
  417574:	sbb    cl,BYTE PTR [ebx+0xc]
  417577:	mov    dh,0x55
  417579:	sub    esi,eax
  41757b:	mov    al,ds:0x6a69f5b5
  417580:	fwait
  417581:	pop    ecx
  417582:	fs test eax,0x580561b6
  417588:	sub    al,0x8c
  41758a:	dec    ebp
  41758b:	and    al,0x1a
  41758d:	push   ebx
  41758e:	outs   dx,DWORD PTR ds:[esi]
  41758f:	fsub   DWORD PTR ds:0x560ef5bd
  417595:	test   al,0xd7
  417597:	sbb    ax,ax
  41759a:	pop    esi
  41759b:	pop    ss
  41759c:	sbb    dh,BYTE PTR [esi-0x75]
  41759f:	arpl   WORD PTR [edx+0x75],ax
  4175a2:	fst    st(3)
  4175a4:	les    eax,FWORD PTR [ecx]
  4175a6:	sbb    ch,al
  4175a8:	mov    cl,0xd9
  4175aa:	or     eax,0x9ebda828
  4175af:	into   
  4175b0:	sbb    eax,0x261bd348
  4175b5:	daa    
  4175b6:	push   ebx
  4175b7:	pop    ecx
  4175b8:	dec    edi
  4175b9:	mov    ds:0xf5eae681,al
  4175be:	jmp    0x97fe:0x4dd92d1a
  4175c5:	sbb    al,0x58
  4175c7:	xchg   esi,eax
  4175c8:	sbb    ah,BYTE PTR [esi]
  4175ca:	sub    edi,DWORD PTR [edi+0x7a]
  4175cd:	in     al,0x5
  4175cf:	jmp    0x2cb14f2a
  4175d4:	push   ecx
  4175d5:	test   DWORD PTR [esi],0xb462e14d
  4175db:	fs jmp 0xb5f9:0x394f80d9
  4175e3:	dec    ebx
  4175e4:	stc    
  4175e5:	(bad)  [ecx+0x71]
  4175e8:	clc    
  4175e9:	add    al,0x71
  4175eb:	shl    DWORD PTR [ebx+0x57135f96],cl
  4175f1:	(bad)  
  4175f2:	dec    eax
  4175f3:	aas    
  4175f4:	mov    ebp,0x5976969c
  4175f9:	sub    esi,ecx
  4175fb:	sahf   
  4175fc:	pop    es
  4175fd:	aas    
  4175fe:	dec    eax
  4175ff:	inc    ebp
  417600:	lea    ebx,[eax-0x3f]
  417603:	and    al,0x96
  417605:	sbb    cl,BYTE PTR [eax+0x1e]
  417608:	add    al,0xab
  41760a:	sub    DWORD PTR [ecx+0x13],ebx
  41760d:	or     eax,0x824b66f6
  417612:	enter  0x180e,0x58
  417616:	adc    DWORD PTR [eax],esp
  417618:	loope  0x417610
  41761a:	inc    edi
  41761b:	xchg   esi,eax
  41761c:	(bad)  
  41761d:	cli    
  41761e:	aaa    
  41761f:	popf   
  417620:	mov    eax,0x92669b02
  417625:	aas    
  417626:	and    edi,DWORD PTR [edx+ebx*1-0x564957de]
  41762d:	bound  edi,QWORD PTR [edi+edi*4+0x5750d93b]
  417634:	imul   esi,DWORD PTR [eax],0x4
  417637:	mov    cl,0xa8
  417639:	lds    ebp,FWORD PTR [ecx+0x48519b18]
  41763f:	pop    edx
  417640:	cs ret 0x94c6
  417644:	mov    edx,0xb767244f
  417649:	add    BYTE PTR [edx],0x34
  41764c:	sbb    ah,BYTE PTR [eax]
  41764e:	mov    edx,0x1a8465ab
  417653:	pop    edi
  417654:	mov    DWORD PTR ds:0xd9c74f26,0xaf739366
  41765e:	xchg   eax,ecx
  417660:	sbb    ch,bl
  417662:	push   edx
  417663:	push   0x3909d69a
  417668:	dec    ebx
  417669:	(bad)  [ebp+0x75]
  41766c:	push   ecx
  41766d:	sbb    ecx,DWORD PTR [edi]
  41766f:	push   ecx
  417670:	fisub  WORD PTR [eax+0x1b]
  417673:	add    ecx,ecx
  417675:	and    eax,0x9a741348
  41767a:	mov    dl,0xc1
  41767c:	test   al,0x2d
  41767e:	sbb    DWORD PTR [edi+0x0],esp
  417681:	js     0x4176c2
  417683:	mov    dl,0x1a
  417685:	sub    BYTE PTR [ebp+0x49],al
  417688:	sub    dh,BYTE PTR [ecx-0x26b951e5]
  41768e:	out    0xe6,al
  417690:	jge    0x4176a1
  417692:	sub    al,0x53
  417694:	pop    eax
  417695:	pop    ds
  417696:	jmp    0x48ccd96b
  41769b:	les    esi,FWORD PTR [ebp+ebx*4-0x4d294c65]
  4176a2:	pushf  
  4176a3:	test   bh,ch
  4176a5:	xchg   ebx,eax
  4176a6:	push   ds
  4176a7:	addr16 pop ebx
  4176a9:	jle    0x417709
  4176ab:	stc    
  4176ac:	retf   
  4176ad:	jmp    0x59a70cf9
  4176b2:	out    dx,eax
  4176b3:	fs enter 0x8d67,0x66
  4176b8:	jbe    0x4176aa
  4176ba:	imul   esi,DWORD PTR [esi],0x79eccf1f
  4176c0:	jae    0x417708
  4176c2:	into   
  4176c3:	addr16 dec esp
  4176c5:	and    al,0xc8
  4176c7:	scas   eax,DWORD PTR es:[edi]
  4176c8:	ss pop ecx
  4176ca:	sub    BYTE PTR [esi+0x12],ch
  4176cd:	mov    edx,0xb3dbeabb
  4176d2:	fsub   st,st(0)
  4176d4:	ja     0x41767b
  4176d6:	push   esi
  4176d7:	in     eax,0x17
  4176d9:	cs cmp ecx,esp
  4176dc:	inc    ecx
  4176dd:	and    al,cl
  4176df:	inc    esp
  4176e0:	add    bl,0x6b
  4176e3:	test   al,dh
  4176e5:	test   DWORD PTR [eax],ebx
  4176e7:	addr16 out 0xae,eax
  4176ea:	mov    edx,0x48933487
  4176ef:	test   BYTE PTR [esi+0x5b9ae42d],al
  4176f5:	inc    esp
  4176f6:	repnz cmps DWORD PTR ds:[si],DWORD PTR es:[di]
  4176f9:	jns    0x41774f
  4176fb:	or     al,0xd5
  4176fd:	xchg   ecx,eax
  4176fe:	int3   
  4176ff:	dec    esi
  417700:	cld    
  417701:	repnz (bad) 
  417704:	sub    eax,0xe809480e
  417709:	out    0xc4,eax
  41770b:	lock pop edi
  41770d:	mov    ds:0x100f6a34,al
  417712:	and    esp,edx
  417714:	aaa    
  417715:	cmp    DWORD PTR [eax],eax
  417717:	mov    eax,ds:0x9b4c7bc7
  41771c:	(bad)  [edi+0x61]
  41771f:	mov    bl,BYTE PTR [edx-0x7e]
  417722:	aas    
  417723:	push   ds
  417724:	mov    bl,0xe7
  417726:	add    eax,0x46143dc5
  41772b:	xor    eax,0x362bc1b1
  417730:	inc    BYTE PTR [edi+0x5d03f640]
  417736:	sbb    DWORD PTR [ecx+0x164a742],0x5e3c7c4d
  417740:	xchg   esi,eax
  417741:	dec    edi
  417742:	and    DWORD PTR [edi],ecx
  417744:	mov    eax,ds:0x9676939
  417749:	sbb    eax,0x2551c332
  41774e:	(bad)  
  41774f:	pop    esi
  417750:	mov    ds:0x242a4886,al
  417755:	jns    0x4177c2
  417757:	pop    ebx
  417758:	xor    ah,al
  41775a:	cmc    
  41775b:	iretw  
  41775d:	xchg   esp,eax
  41775e:	ret    0x1a29
  417761:	xor    BYTE PTR [eax+0x427f0ce1],cl
  417767:	mov    ds:0xb4f7d9ed,al
  41776c:	shr    BYTE PTR [edx-0x300276cb],1
  417772:	xor    al,0x46
  417774:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417775:	pop    ds
  417776:	dec    eax
  417777:	add    eax,0xe7b339e5
  41777c:	sti    
  41777d:	aam    0x1c
  41777f:	addr16 mov al,0xdf
  417782:	int    0xcf
  417784:	cmp    cl,ah
  417786:	sub    DWORD PTR [eax+0x1a],eax
  417789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41778a:	je     0x417722
  41778c:	mov    ds:0x2f01c522,al
  417791:	push   ds
  417792:	mov    ecx,0x1988a66
  417797:	mov    al,ds:0xedd84e1a
  41779c:	pop    esp
  41779d:	jbe    0x417742
  41779f:	mov    ch,0xbf
  4177a1:	fst    DWORD PTR [edx]
  4177a3:	xor    esp,edi
  4177a5:	mov    esi,DWORD PTR [ebx]
  4177a7:	in     al,0x1c
  4177a9:	aam    0xf4
  4177ab:	sub    dl,dl
  4177ad:	scas   eax,DWORD PTR es:[edi]
  4177ae:	dec    eax
  4177af:	int    0x43
  4177b1:	sbb    edi,0x19
  4177b4:	dec    edi
  4177b5:	les    edi,FWORD PTR [esi]
  4177b7:	outs   dx,BYTE PTR ds:[esi]
  4177b8:	xor    ebp,DWORD PTR [ecx+0x72]
  4177bb:	dec    ebp
  4177bc:	mov    dl,0xc6
  4177be:	sub    BYTE PTR [edx+0x5b2d16f7],cl
  4177c4:	pushf  
  4177c5:	xor    DWORD PTR [eax+0x5a],ecx
  4177c8:	adc    edx,DWORD PTR [edi+0x67]
  4177cb:	mov    ebx,0x6680a3ae
  4177d0:	add    ah,BYTE PTR [esi+0x4a]
  4177d3:	pop    es
  4177d4:	sbb    dh,BYTE PTR [ecx+0x79]
  4177d7:	cmp    eax,0xa66483e1
  4177dc:	data16 fldcw WORD PTR [ebx-0x6e]
  4177e0:	and    cl,BYTE PTR [eax]
  4177e2:	push   0xfee0652c
  4177e7:	mov    eax,0x367b242
  4177ec:	test   al,0x59
  4177ee:	push   esi
  4177ef:	cmp    BYTE PTR [eax],ah
  4177f1:	retf   0xa6b3
  4177f4:	loop   0x41781f
  4177f6:	pop    eax
  4177f7:	add    bx,WORD PTR [eax]
  4177fa:	dec    edx
  4177fb:	out    0x59,al
  4177fd:	fidivr WORD PTR [ebp-0x51]
  417800:	adc    al,0x86
  417802:	xor    ebp,eax
  417804:	mov    cl,0x45
  417806:	mov    edi,0x7dc83f7
  41780b:	push   edi
  41780c:	out    0x62,al
  41780e:	aas    
  41780f:	(bad)  
  417810:	call   0x72c:0x1abc29fd
  417817:	sbb    al,0x4d
  417819:	repnz rcl DWORD PTR [ebp-0x26],cl
  41781d:	(bad)  [eax+0x587a3b96]
  417823:	iret   
  417824:	setge  dl
  417827:	mov    al,ds:0x2c4884b6
  41782c:	iret   
  41782d:	sub    edi,DWORD PTR [eax-0x3dd9c7c4]
  417833:	push   ax
  417835:	or     bh,ah
  417837:	iret   
  417838:	sbb    al,BYTE PTR [edi]
  41783a:	imul   esp
  41783c:	lods   al,BYTE PTR ds:[esi]
  41783d:	pop    ds
  41783e:	mov    dl,0xe8
  417840:	xor    ebx,edx
  417842:	outs   dx,BYTE PTR ds:[esi]
  417843:	sahf   
  417844:	fucomip st,st(5)
  417846:	fistp  WORD PTR [edi]
  417848:	xchg   edx,eax
  417849:	mov    eax,ds:0xb01a0ade
  41784e:	cmp    BYTE PTR [ebp+ebp*8+0x12129e4f],cl
  417855:	fisubr DWORD PTR [edi+0x7b]
  417858:	dec    esp
  417859:	push   es
  41785a:	push   ss
  41785b:	mov    bl,0xf4
  41785d:	test   BYTE PTR [esi],al
  41785f:	(bad)  
  417860:	cmp    al,0x83
  417862:	dec    eax
  417863:	nop
  417864:	(bad)  
  417865:	mov    edi,0xc6ef0e46
  41786a:	sti    
  41786b:	data16 (bad) 
  41786d:	fisttp QWORD PTR [edi+0x6d]
  417870:	sbb    cl,BYTE PTR ds:0x147bd725
  417876:	jge    0x4178d7
  417878:	arpl   cx,bx
  41787a:	jmp    0x4580062
  41787f:	mov    fs,ecx
  417881:	push   eax
  417882:	pop    eax
  417883:	jo     0x41789f
  417885:	mov    BYTE PTR [edx-0x7b],0x33
  417889:	adc    eax,0x21c43838
  41788e:	xor    esp,ebx
  417890:	sbb    bh,BYTE PTR [ecx]
  417892:	ja     0x417896
  417894:	rcr    BYTE PTR [edi-0x4da91a09],1
  41789a:	or     dh,BYTE PTR [ebx]
  41789c:	adc    al,0x51
  41789e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41789f:	out    0xd4,al
  4178a1:	int3   
  4178a2:	dec    edx
  4178a3:	cdq    
  4178a4:	dec    edi
  4178a5:	stc    
  4178a6:	sub    esp,DWORD PTR [edi-0x2a]
  4178a9:	push   esp
  4178aa:	(bad)  
  4178ab:	adc    DWORD PTR [edx],ebx
  4178ad:	adc    bh,BYTE PTR [eax-0x2a]
  4178b0:	jl     0x417881
  4178b2:	repnz mov esi,DWORD PTR [eax-0x27]
  4178b6:	js     0x4178ae
  4178b8:	in     al,0x17
  4178ba:	lods   eax,DWORD PTR ds:[esi]
  4178bb:	fisttp DWORD PTR [ecx-0x2c11de77]
  4178c1:	repnz inc edi
  4178c3:	mov    dh,0xcf
  4178c5:	nop
  4178c6:	xor    eax,0x3fdedd83
  4178cb:	jbe    0x417908
  4178cd:	and    eax,0xa7bcdf4c
  4178d2:	push   eax
  4178d3:	mov    ds:0x628af51a,al
  4178d8:	in     eax,0x59
  4178da:	jne    0x41795b
  4178dc:	fist   WORD PTR ds:0x779a643a
  4178e2:	ins    DWORD PTR es:[edi],dx
  4178e3:	xchg   edi,eax
  4178e4:	and    ah,BYTE PTR [esi]
  4178e6:	jb     0x41786e
  4178e8:	shl    dh,cl
  4178ea:	dec    ebx
  4178eb:	aad    0x31
  4178ed:	fadd   QWORD PTR [edx-0x2e821913]
  4178f3:	lea    esp,[ebp+0x70]
  4178f6:	cmp    al,0xe7
  4178f8:	mov    esi,ecx
  4178fa:	mov    esi,0x4adba74
  4178ff:	aam    0x15
  417901:	mov    dl,0xc8
  417903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417904:	pop    ds
  417905:	push   es
  417906:	mov    ebp,0xef4de809
  41790b:	in     al,0xc4
  41790d:	imul   ecx,DWORD PTR [eax+0x2b],0xbb5c1508
  417914:	sbb    al,0x1b
  417916:	xlat   BYTE PTR ds:[ebx]
  417917:	outs   dx,BYTE PTR ds:[esi]
  417918:	out    dx,eax
  417919:	push   es
  41791a:	jmp    0x60d0:0x9595791
  417921:	jb     0x41797b
  417923:	enter  0xf7d5,0xcb
  417927:	stos   BYTE PTR es:[edi],al
  417928:	xchg   edx,eax
  417929:	sbb    ah,BYTE PTR [ebp+eiz*8+0x4b]
  41792d:	mov    ecx,0x2867ab5a
  417932:	adc    ch,BYTE PTR [edi]
  417934:	or     DWORD PTR ds:0xc1a03548,esi
  41793a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41793b:	add    dl,BYTE PTR [eax]
  41793d:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41793f:	adc    bh,0xef
  417942:	imul   esp,DWORD PTR [edi+0x2a4c492c],0xc33fa1a
  41794c:	sahf   
  41794d:	dec    eax
  41794e:	loop   0x4179c7
  417950:	adc    bl,0x61
  417953:	push   es
  417954:	int3   
  417955:	inc    edx
  417956:	fisub  WORD PTR [esi-0x4e]
  417959:	and    al,0x9a
  41795b:	xchg   esp,eax
  41795c:	mov    esp,DWORD PTR [edi-0x67]
  41795f:	push   0x5abc3b42
  417964:	sbb    edi,DWORD PTR [ecx+0x6b253e58]
  41796a:	mov    bl,0x91
  41796c:	out    0x7c,al
  41796e:	jmp    0x5966:0xf5a505e9
  417975:	and    DWORD PTR [edi-0x765ee587],0xc8056a5d
  41797f:	pop    esp
  417980:	sub    al,0xd1
  417982:	outs   dx,DWORD PTR ds:[esi]
  417983:	addr16 dec esi
  417985:	dec    edi
  417986:	in     al,dx
  417987:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417989:	(bad)  
  41798a:	(bad)  
  41798c:	sbb    ah,BYTE PTR [esi]
  41798e:	dec    ebp
  41798f:	ja     0x41796e
  417991:	push   edi
  417992:	out    dx,eax
  417993:	pushf  
  417994:	and    cl,bl
  417996:	in     eax,0x60
  417998:	sub    al,0x25
  41799a:	mov    al,0xaf
  41799c:	int3   
  41799d:	lea    eax,[eax+0x48c0aba4]
  4179a3:	mov    ah,0xb
  4179a5:	ss pop es
  4179a7:	test   al,0x6c
  4179a9:	int    0x7d
  4179ab:	sub    DWORD PTR [ebx],0x79
  4179ae:	(bad)  
  4179af:	out    0x12,al
  4179b1:	rol    BYTE PTR [esi-0x50],0x74
  4179b5:	mov    BYTE PTR [eax],cl
  4179b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179b8:	out    dx,al
  4179b9:	fst    DWORD PTR [ecx+0x175799ef]
  4179bf:	daa    
  4179c0:	pop    es
  4179c1:	jae    0x4179b6
  4179c3:	cmp    BYTE PTR [ebx+esi*8+0x2cb84947],al
  4179ca:	and    cl,cl
  4179cc:	mov    dh,0xe8
  4179ce:	jo     0x4179af
  4179d0:	ins    BYTE PTR es:[edi],dx
  4179d1:	mov    eax,0x1e2b396a
  4179d6:	push   0xaffc5706
  4179db:	loop   0x4179fa
  4179dd:	sub    al,0x92
  4179df:	fidiv  DWORD PTR [ebx-0x24]
  4179e2:	jp     0x41799b
  4179e4:	test   DWORD PTR [edx-0x1f67d7d9],0xac75b00f
  4179ee:	es icebp 
  4179f0:	fidivr DWORD PTR [ecx+0x57]
  4179f3:	data16 sbb cl,BYTE PTR [edi-0x6e39c81c]
  4179fa:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4179fc:	and    al,ch
  4179fe:	pop    esp
  4179ff:	dec    esi
  417a00:	ret    0x457f
  417a03:	cld    
  417a04:	inc    esp
  417a05:	mul    DWORD PTR [edi+0x53971a08]
  417a0b:	aaa    
  417a0c:	dec    edx
  417a0d:	cli    
  417a0e:	ins    DWORD PTR es:[edi],dx
  417a0f:	lahf   
  417a10:	(bad)  
  417a12:	fmul   DWORD PTR [ebx+0x55b4c3ba]
  417a18:	call   0x1be8:0x1a7548b3
  417a1f:	xchg   ebp,eax
  417a20:	mov    ebp,0x1553061d
  417a25:	neg    BYTE PTR ds:0x4e1997f5
  417a2b:	retf   
  417a2c:	mov    edi,0x21bce00b
  417a31:	and    al,0xe
  417a33:	pop    edx
  417a34:	mov    edi,gs
  417a36:	into   
  417a37:	sub    ecx,0x77
  417a3a:	mov    eax,0xcb0db7fb
  417a3f:	popw   es
  417a41:	pop    esi
  417a42:	pop    edi
  417a43:	sbb    BYTE PTR [edx+edx*1],bl
  417a46:	lahf   
  417a47:	fisttp WORD PTR [ebp+edx*2+0x5008f03b]
  417a4e:	add    al,0x27
  417a50:	xor    al,0x6e
  417a52:	and    BYTE PTR [edx-0x7e],ch
  417a55:	shr    BYTE PTR [eax],cl
  417a57:	push   0xffffff8d
  417a59:	push   esp
  417a5a:	call   0x486133af
  417a5f:	ins    BYTE PTR es:[edi],dx
  417a60:	icebp  
  417a61:	dec    esi
  417a62:	jnp    0x417a02
  417a64:	stc    
  417a65:	lds    ebp,FWORD PTR [edi+0x66]
  417a68:	add    ebx,eax
  417a6a:	cmp    ah,BYTE PTR [ecx+0x1a]
  417a6d:	cmp    ebx,DWORD PTR [edx-0x63]
  417a70:	adc    eax,0x65651980
  417a75:	fldcw  WORD PTR [ebx-0x56]
  417a78:	xchg   dl,dh
  417a7a:	adc    eax,0x1edf08e8
  417a7f:	popf   
  417a80:	mov    bl,al
  417a82:	dec    eax
  417a83:	(bad)  [ebx]
  417a85:	sbb    DWORD PTR [eax-0x7c7c854d],0x69
  417a8c:	into   
  417a8d:	inc    edi
  417a8e:	sub    eax,0xbc2fb57
  417a93:	mov    ds:0x62bb367d,eax
  417a98:	nop
  417a99:	fadd   QWORD PTR [edi-0x14]
  417a9c:	cmp    eax,0x8426336d
  417aa1:	stos   BYTE PTR es:[edi],al
  417aa2:	xchg   ebx,eax
  417aa3:	data16 aam 0x37
  417aa6:	jbe    0x417af0
  417aa8:	sbb    al,BYTE PTR [ebp+0x615c29ca]
  417aae:	cmp    eax,0x734d91b9
  417ab3:	xor    dl,BYTE PTR [esi]
  417ab5:	ds pop sp
  417ab8:	imul   ebx,ecx,0x7b
  417abb:	pop    esi
  417abc:	mov    edx,0x703df581
  417ac1:	cmp    esi,DWORD PTR [ebp+0x47e1696a]
  417ac7:	or     DWORD PTR [ebp+eax*1+0x407db4fb],edi
  417ace:	dec    ebp
  417acf:	data16 shl bh,cl
  417ad2:	hlt    
  417ad3:	sbb    bl,BYTE PTR ds:[esi]
  417ad6:	in     al,dx
  417ad7:	jecxz  0x417ad3
  417ad9:	mov    edx,0xdeb9991d
  417ade:	mov    dh,0xa0
  417ae0:	mov    WORD PTR [edi+0x44],gs
  417ae3:	ret    
  417ae4:	mov    cl,0xec
  417ae6:	cdq    
  417ae7:	sbb    edx,DWORD PTR es:[ecx-0x6d]
  417aeb:	dec    ebx
  417aec:	add    ah,bl
  417aee:	jle    0x417aad
  417af0:	mov    ch,BYTE PTR [ebx+eax*1+0xac8a28d]
  417af7:	push   0x7899139e
  417afc:	inc    ebp
  417afd:	clc    
  417afe:	jg     0x417b2a
  417b00:	mov    ch,0x0
  417b02:	dec    eax
  417b03:	test   BYTE PTR [edi+0x58d40f4f],dh
  417b09:	imul   eax,DWORD PTR [edi+0x67],0x3a
  417b0d:	add    ebx,DWORD PTR [eax-0x35bfe585]
  417b13:	mov    gs,WORD PTR [eax]
  417b15:	pop    edi
  417b16:	jecxz  0x417aab
  417b18:	jo     0x417af3
  417b1a:	jbe    0x417b43
  417b1c:	ficom  WORD PTR [edi+eax*4-0x30844baf]
  417b23:	icebp  
  417b24:	mov    edx,0x46c8e05a
  417b29:	add    BYTE PTR [eax-0x2fcee5cb],al
  417b2f:	pop    edx
  417b30:	pop    edi
  417b31:	sar    BYTE PTR [edi],cl
  417b33:	cmc    
  417b34:	push   eax
  417b35:	cmp    eax,esp
  417b37:	vandpd xmm3,xmm0,XMMWORD PTR [bp+si]
  417b3d:	ret    0x47fc
  417b40:	test   BYTE PTR [edi+0x4ac67896],al
  417b46:	mov    ebx,0x2e163a96
  417b4b:	push   0x55f5a229
  417b50:	push   ss
  417b51:	pop    edx
  417b52:	popa   
  417b53:	push   edx
  417b54:	adc    edi,eax
  417b56:	dec    ecx
  417b57:	(bad)  
  417b58:	xlat   BYTE PTR ds:[ebx]
  417b59:	sub    esi,DWORD PTR [edx]
  417b5b:	sbb    eax,0x673edef2
  417b60:	and    BYTE PTR [esi-0x4efb4ad],bl
  417b66:	sub    bl,BYTE PTR [ebx-0x4e]
  417b69:	push   edx
  417b6a:	push   esi
  417b6b:	inc    ebx
  417b6c:	xor    dl,BYTE PTR [edi-0x64]
  417b6f:	pop    dx
  417b71:	loopne 0x417bb5
  417b73:	sub    edx,DWORD PTR [ebp+eax*2+0x57]
  417b77:	adc    al,0x6b
  417b79:	arpl   ax,cx
  417b7b:	ss xchg ebx,eax
  417b7d:	dec    esp
  417b7e:	xor    BYTE PTR [ebx+0x21],0x6c
  417b82:	mov    ecx,0x6189846c
  417b87:	sub    BYTE PTR [eax],ch
  417b89:	in     eax,0x97
  417b8b:	or     al,0x4
  417b8d:	scas   al,BYTE PTR es:[edi]
  417b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b8f:	data16 (bad) 
  417b91:	xor    DWORD PTR [esi],edi
  417b93:	dec    eax
  417b94:	sbb    al,bh
  417b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b97:	xchg   edx,eax
  417b98:	gs aam 0x97
  417b9b:	fisub  WORD PTR [ebp-0x41739127]
  417ba1:	jnp    0x417b80
  417ba3:	jno    0x417c1d
  417ba5:	push   cx
  417ba7:	sub    al,0xe
  417ba9:	jmp    0x1dd1:0xa975a847
  417bb0:	aaa    
  417bb1:	inc    ebx
  417bb2:	or     DWORD PTR [esi+0x18],ebp
  417bb5:	mov    bh,BYTE PTR [esi+0x8564143]
  417bbb:	je     0x417b57
  417bbd:	fstp   DWORD PTR [edi-0x7731d183]
  417bc3:	adc    cl,BYTE PTR [edi-0x27]
  417bc6:	mov    BYTE PTR [edx+ecx*1-0x337dbaf3],al
  417bcd:	scas   al,BYTE PTR es:[edi]
  417bce:	bound  edi,QWORD PTR [eax]
  417bd0:	(bad)  
  417bd1:	clc    
  417bd2:	dec    ecx
  417bd3:	xor    DWORD PTR ds:0xdfc66c1a,ecx
  417bd9:	fld    st(7)
  417bdb:	adc    DWORD PTR [ebp+0x6ae9c2ad],esi
  417be1:	scas   al,BYTE PTR es:[edi]
  417be2:	cmp    edi,ebx
  417be4:	adc    ecx,DWORD PTR [ecx+0x268df48]
  417bea:	mov    bh,0xda
  417bec:	cmp    ah,BYTE PTR [edi-0x42c58a78]
  417bf2:	mov    al,ds:0xa273d29e
  417bf7:	and    al,0x92
  417bf9:	cmp    cl,BYTE PTR [eax-0x64]
  417bfc:	adc    DWORD PTR [eax],edi
  417bfe:	in     al,dx
  417bff:	jnp    0x417b8c
  417c01:	mov    esi,0xd19a75fd
  417c06:	fnstsw WORD PTR [ecx-0x3948c1fd]
  417c0c:	sbb    eax,0xc00e29f8
  417c11:	mov    al,ds:0x2fb31659
  417c16:	jmp    0xffdf:0x5bd92206
  417c1d:	mov    BYTE PTR [ebx],bh
  417c1f:	ja     0x417bcd
  417c21:	popf   
  417c22:	cmp    eax,0x3cc42126
  417c27:	push   ebx
  417c28:	inc    esi
  417c29:	cmp    eax,DWORD PTR [eax+0x0]
  417c2c:	in     eax,0x30
  417c2e:	js     0x417bd8
  417c30:	push   edi
  417c31:	jecxz  0x417c4b
  417c33:	addr16 lock cld 
  417c36:	xchg   al,ch
  417c38:	sbb    ch,BYTE PTR [ebp+edx*2+0x9]
  417c3c:	dec    ebp
  417c3d:	sub    BYTE PTR [eax],ch
  417c3f:	fmul   QWORD PTR [edx+ebx*8]
  417c42:	or     DWORD PTR [ecx-0x7b604176],ebp
  417c48:	dec    esi
  417c49:	jo     0x417bf1
  417c4b:	int3   
  417c4c:	sbb    al,0x12
  417c4e:	cmp    bh,BYTE PTR [ecx-0x64]
  417c51:	jle    0x417c4f
  417c53:	dec    esp
  417c54:	pop    edi
  417c55:	arpl   WORD PTR [ebp-0x5a],bp
  417c58:	aaa    
  417c59:	xor    al,0x27
  417c5b:	xchg   BYTE PTR [ebp+0x5a26bde0],cl
  417c61:	sub    DWORD PTR [eax],ebx
  417c63:	jle    0x417cba
  417c65:	xchg   ebp,eax
  417c66:	dec    eax
  417c67:	inc    eax
  417c68:	cmp    BYTE PTR [ebp+0x1d5c2eff],0x8d
  417c6f:	fimul  WORD PTR [si]
  417c72:	xchg   edx,eax
  417c73:	xor    DWORD PTR [eax+0x39],0xffffff84
  417c77:	dec    ebx
  417c78:	sbb    bl,BYTE PTR [esi+0x77f6d3e3]
  417c7e:	add    BYTE PTR [eax-0x18a11d0c],cl
  417c84:	add    al,0xed
  417c86:	push   ebp
  417c87:	ror    BYTE PTR [esi+ebx*2+0x48],1
  417c8b:	add    eax,0xff62cd52
  417c90:	pop    esi
  417c91:	sbb    DWORD PTR [ebx+0x67],eax
  417c94:	loope  0x417cdd
  417c96:	mov    ds,WORD PTR [esi]
  417c98:	adc    bl,cl
  417c9a:	(bad)  
  417c9b:	data16 mov ah,0xb3
  417c9e:	mov    esi,0x1b8a31df
  417ca3:	mov    al,0x1a
  417ca5:	jo     0x417ce7
  417ca7:	adc    ebx,DWORD PTR [esi-0xe339adf]
  417cad:	cmc    
  417cae:	lahf   
  417caf:	(bad)  
  417cb0:	loope  0x417c8b
  417cb2:	dec    ebx
  417cb3:	xlat   BYTE PTR ds:[ebx]
  417cb4:	(bad)  
  417cb5:	and    edi,DWORD PTR [ebp+ecx*4+0x1a]
  417cb9:	cmp    al,0x3e
  417cbb:	sahf   
  417cbc:	jg     0x417c69
  417cbe:	test   al,0xab
  417cc0:	dec    edi
  417cc1:	ret    
  417cc2:	pop    eax
  417cc3:	fsubr  QWORD PTR [esi-0x2c]
  417cc6:	sbb    al,0x67
  417cc8:	lods   eax,DWORD PTR ds:[esi]
  417cc9:	hlt    
  417cca:	out    dx,al
  417ccb:	and    dh,BYTE PTR [esi+0x68]
  417cce:	outs   dx,BYTE PTR ds:[esi]
  417ccf:	mov    ebx,0x672ef53e
  417cd4:	xor    esp,ebp
  417cd6:	sahf   
  417cd7:	jmp    0x8b7f:0x6739c4b2
  417cde:	push   eax
  417cdf:	in     eax,dx
  417ce0:	cmp    BYTE PTR [edi-0x62e5b9fd],al
  417ce6:	mov    al,0x67
  417ce8:	pushf  
  417ce9:	ret    
  417cea:	mov    bh,0x9c
  417cec:	fneni(8087 only) 
  417cee:	aas    
  417cef:	dec    DWORD PTR [ebx-0x59]
  417cf2:	je     0x417d4d
  417cf4:	std    
  417cf5:	jbe    0x417ceb
  417cf7:	push   es
  417cf8:	sbb    al,cl
  417cfa:	fistp  QWORD PTR [ebp-0x3c]
  417cfd:	inc    esi
  417cfe:	mov    al,BYTE PTR [edi]
  417d00:	jle    0x417cdb
  417d02:	mov    bl,0xc8
  417d04:	loope  0x417ca9
  417d06:	mov    ebx,0x62fa8821
  417d0b:	jno    0x417d7a
  417d0d:	xor    dl,BYTE PTR [edi+0x5c]
  417d10:	sahf   
  417d11:	push   es
  417d12:	mov    esp,DWORD PTR [esi-0x64c28ec4]
  417d18:	aam    0xd2
  417d1a:	and    BYTE PTR [esi-0x6c],0xc8
  417d1e:	adc    al,0x76
  417d20:	sbb    bh,BYTE PTR [edi-0x3c]
  417d23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417d24:	dec    esp
  417d25:	jo     0x417cc0
  417d27:	vpminub ymm4,ymm5,YMMWORD PTR [ebx-0x62]
  417d2c:	mov    ch,BYTE PTR [edi+ecx*4]
  417d2f:	mov    dh,0x67
  417d31:	lods   eax,DWORD PTR ds:[esi]
  417d32:	xor    al,0xa7
  417d34:	sbb    ah,BYTE PTR [ebp+0x9]
  417d37:	lds    edi,FWORD PTR [ebp+0x2b315511]
  417d3d:	fld    st(7)
  417d3f:	shr    DWORD PTR [edi+0x35925d99],0xaf
  417d46:	shl    DWORD PTR [ecx+0x4a518413],0xa6
  417d4d:	je     0x417d6f
  417d4f:	out    0x4c,eax
  417d51:	fldenv [ebp+eax*4-0x5e15dade]
  417d58:	pop    es
  417d59:	adc    DWORD PTR [ecx-0x1d],ebx
  417d5c:	aam    0xdf
  417d5e:	inc    edi
  417d5f:	out    dx,al
  417d60:	mov    ebp,fs
  417d62:	aaa    
  417d63:	shr    DWORD PTR [edi],0xf2
  417d66:	inc    ecx
  417d67:	addr16 mov cl,al
  417d6a:	repz aaa 
  417d6c:	sbb    bh,al
  417d6e:	test   eax,0x3cc0f36
  417d73:	int3   
  417d74:	rcr    cl,1
  417d76:	dec    edx
  417d77:	pop    edx
  417d78:	add    al,0xa
  417d7a:	dec    ecx
  417d7b:	dec    ebp
  417d7c:	fprem1 
  417d7e:	in     eax,dx
  417d7f:	mov    esi,0x2c84594d
  417d84:	rcr    ebp,1
  417d86:	(bad)  
  417d87:	lods   eax,DWORD PTR ds:[esi]
  417d88:	cwde   
  417d89:	(bad)  
  417d8b:	bound  esp,QWORD PTR [esi-0x3a2cca73]
  417d91:	ret    
  417d92:	out    0xd0,eax
  417d94:	stos   BYTE PTR es:[edi],al
  417d95:	call   0xee3c00e1
  417d9a:	rcl    BYTE PTR [edx-0x5b],1
  417d9d:	unpcklps xmm4,XMMWORD PTR [edi-0x2a]
  417da1:	jle    0x417d53
  417da3:	inc    eax
  417da4:	sub    BYTE PTR [eax-0x6412736],bl
  417daa:	mov    al,ds:0x971bec92
  417daf:	push   DWORD PTR [esp+edi*2-0x637598d2]
  417db6:	mov    ebx,0xe7b71aa4
  417dbb:	inc    ebx
  417dbc:	mov    esi,0x9c68ea13
  417dc1:	shl    DWORD PTR [ecx+ecx*2+0x754d11e7],cl
  417dc8:	(bad)  
  417dca:	rol    DWORD PTR [ebx],1
  417dcc:	dec    edi
  417dcd:	nop
  417dce:	fisub  WORD PTR [ebx-0x27]
  417dd1:	jo     0x417e31
  417dd3:	aas    
  417dd4:	inc    edx
  417dd5:	adc    al,0x49
  417dd7:	mov    al,ds:0x1b6c9007
  417ddc:	xchg   esi,eax
  417ddd:	fnstcw WORD PTR [ebx+0x23]
  417de0:	fsub   st(4),st
  417de2:	or     al,0x82
  417de4:	loope  0x417d76
  417de6:	push   ebp
  417de7:	pop    edx
  417de8:	jge    0x417dd8
  417dea:	dec    eax
  417deb:	mov    ebx,0x8a544d12
  417df0:	test   cl,bl
  417df2:	addr16 mov ah,0x2c
  417df5:	ds retf 0x557
  417df9:	cmp    al,0x1b
  417dfb:	je     0x417e69
  417dfd:	pusha  
  417dfe:	dec    eax
  417dff:	mov    fs,ebp
  417e01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417e02:	xor    eax,0x420fb9b8
  417e07:	addr16 mov dl,0x53
  417e0a:	push   0xb45229a8
  417e0f:	lea    eax,[ebx]
  417e11:	sbb    al,dh
  417e13:	jp     0x417e07
  417e15:	cs pop ebx
  417e17:	jmp    0x4f00:0x698fb829
  417e1e:	xchg   edx,eax
  417e1f:	cmp    BYTE PTR [eax+0x6dfe17f5],dh
  417e25:	lods   eax,DWORD PTR ds:[esi]
  417e26:	dec    edi
  417e27:	mov    bh,0x4a
  417e29:	jmp    0x28dc:0xc1ed420d
  417e30:	sti    
  417e31:	daa    
  417e32:	scas   eax,DWORD PTR es:[edi]
  417e33:	retw   0x5891
  417e37:	jne    0x417e53
  417e39:	or     eax,0xbbab4bd0
  417e3e:	mov    ebp,0xa0d94850
  417e43:	(bad)  
  417e44:	ins    BYTE PTR es:[edi],dx
  417e45:	jb     0x417ec6
  417e47:	lahf   
  417e48:	aam    0xcf
  417e4a:	xchg   BYTE PTR ds:0xf0485c1f,dl
  417e50:	ret    0xa08f
  417e53:	pop    es
  417e54:	mov    esi,0xa566a32d
  417e59:	mov    bl,0x40
  417e5b:	jecxz  0x417e77
  417e5d:	clc    
  417e5e:	ja     0x417ebf
  417e60:	enter  0xc7d7,0xd9
  417e64:	out    0xf5,eax
  417e66:	inc    esp
  417e67:	dec    BYTE PTR [esi-0x6562368a]
  417e6d:	cwde   
  417e6e:	arpl   WORD PTR [edx-0x80],sp
  417e71:	imul   edi,DWORD PTR [edx-0x42abc760],0xffffffa7
  417e78:	pop    edx
  417e79:	or     BYTE PTR [ebp-0x73c799ab],al
  417e7f:	into   
  417e80:	inc    edx
  417e81:	or     al,0x68
  417e83:	addr16 mov esp,0xdb6ca6ab
  417e89:	ins    BYTE PTR es:[edi],dx
  417e8a:	adc    DWORD PTR [edi+0x24],edx
  417e8d:	in     eax,0x4e
  417e8f:	sub    al,0x8a
  417e91:	jne    0x417eba
  417e93:	ror    DWORD PTR [ecx],0xe5
  417e96:	mov    bh,0x1
  417e98:	push   ecx
  417e99:	stos   DWORD PTR es:[edi],eax
  417e9a:	hlt    
  417e9b:	fstp   QWORD PTR [esi]
  417e9d:	jns    0x417ee8
  417e9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ea0:	mov    esi,0x7d2729fd
  417ea5:	sub    eax,0x268b2948
  417eaa:	cmp    BYTE PTR [edi+0x6676e08c],0x77
  417eb1:	cld    
  417eb2:	jne    0x417edf
  417eb4:	dec    edi
  417eb5:	inc    edx
  417eb6:	sbb    eax,0xdade1b94
  417ebb:	xchg   edx,eax
  417ebc:	inc    esi
  417ebd:	mov    edx,0x8879f92
  417ec2:	leave  
  417ec3:	adc    BYTE PTR [ebx+0x9],ch
  417ec6:	ss std 
  417ec8:	retf   0xe3cc
  417ecb:	pop    ecx
  417ecc:	sbb    bl,dh
  417ece:	inc    ebx
  417ecf:	add    eax,0x93343be
  417ed4:	sbb    eax,0x624d1bdc
  417ed9:	sbb    al,0xd6
  417edb:	push   es
  417edc:	loop   0x417e73
  417ede:	xchg   ebx,eax
  417edf:	arpl   WORD PTR [esi],si
  417ee1:	je     0x417f1b
  417ee3:	dec    edx
  417ee4:	call   0xbb57:0xb3f5f65a
  417eeb:	sub    ecx,ebx
  417eed:	hlt    
  417eee:	call   0x2d191959
  417ef3:	mov    BYTE PTR [edx],bl
  417ef5:	push   cs
  417ef6:	push   esp
  417ef7:	ins    DWORD PTR es:[edi],dx
  417ef8:	sub    cl,ah
  417efa:	push   edx
  417efb:	pop    esp
  417efc:	jg     0x417ed8
  417efe:	push   ss
  417eff:	mov    al,ds:0x763688f0
  417f04:	sub    edi,DWORD PTR [ecx-0x35e5ac45]
  417f0a:	stos   DWORD PTR es:[edi],eax
  417f0b:	call   0xf570:0xa9aa44a0
  417f12:	cmp    al,BYTE PTR [esi+0x27]
  417f15:	fldenv [ecx-0x4c1e2afb]
  417f1b:	and    al,0x1b
  417f1d:	mov    eax,ds:0xa58eb995
  417f22:	jle    0x417ed9
  417f24:	jmp    0xcd30:0x4d9293ba
  417f2b:	data16 xor al,0x32
  417f2e:	jb     0x417ee7
  417f30:	and    esi,DWORD PTR [edi]
  417f32:	repnz call 0xdf5e:0xbe5c59ed
  417f3a:	nop
  417f3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f3c:	shl    DWORD PTR [eax-0x46],cl
  417f3f:	sub    ax,0x68ff
  417f43:	jb     0x417f5f
  417f45:	adc    BYTE PTR [esi],bl
  417f47:	sbb    DWORD PTR [ebx],0xffffff8a
  417f4a:	inc    ebx
  417f4b:	mov    esi,0x2aa8f89f
  417f50:	pop    esi
  417f51:	pop    ecx
  417f52:	push   ecx
  417f53:	push   eax
  417f54:	dec    edi
  417f55:	jecxz  0x417f46
  417f57:	ins    BYTE PTR es:[edi],dx
  417f58:	sbb    ah,dl
  417f5a:	jb     0x417fce
  417f5c:	push   0xffffffb7
  417f5e:	dec    eax
  417f5f:	dec    ecx
  417f60:	mov    ch,0x46
  417f62:	je     0x417f34
  417f64:	xchg   esi,eax
  417f65:	jp     0x417fcb
  417f67:	data16 mov bl,0x51
  417f6a:	daa    
  417f6b:	push   ecx
  417f6c:	sbb    cl,cl
  417f6e:	sbb    BYTE PTR [esi+0x31],cl
  417f71:	mov    ecx,0x1755d54d
  417f76:	cmp    ebp,ebp
  417f78:	sbb    bh,BYTE PTR [ebp-0x4d]
  417f7b:	dec    ecx
  417f7c:	jno    0x417f06
  417f7e:	jle    0x417f69
  417f80:	sbb    ah,bl
  417f82:	and    cl,BYTE PTR [edi]
  417f84:	clc    
  417f85:	in     eax,dx
  417f86:	dec    dx
  417f88:	mov    ds:0x1fb4a3d9,al
  417f8d:	and    ah,BYTE PTR [ecx-0x69]
  417f90:	in     al,0xc4
  417f92:	imul   edi,DWORD PTR [edi],0x74
  417f95:	push   ecx
  417f96:	dec    eax
  417f97:	hlt    
  417f98:	fdiv   st(5),st
  417f9a:	sub    al,cl
  417f9c:	push   esp
  417f9d:	inc    edx
  417f9e:	ret    
  417f9f:	data16 (bad) [esi]
  417fa2:	fsub   st(2),st
  417fa4:	sbb    bl,BYTE PTR [ecx-0x10]
  417fa7:	push   eax
  417fa8:	mov    cl,0x2a
  417faa:	push   cs
  417fab:	xchg   DWORD PTR [edi],esp
  417fad:	pop    ss
  417fae:	sub    DWORD PTR [eax-0x66],0x8075980c
  417fb5:	cmp    DWORD PTR [eax-0x541de510],esp
  417fbb:	or     DWORD PTR [ebx+0x63c77a48],0x1f518125
  417fc5:	xor    ch,bl
  417fc7:	leave  
  417fc8:	mov    eax,ds:0xb685e159
  417fcd:	adc    al,0xf8
  417fcf:	icebp  
  417fd0:	push   ecx
  417fd1:	pop    ecx
  417fd2:	dec    ecx
  417fd3:	xchg   edx,eax
  417fd4:	dec    edi
  417fd5:	(bad)  [edx-0x77479e14]
  417fdb:	push   es
  417fdc:	outs   dx,BYTE PTR ds:[esi]
  417fdd:	sar    DWORD PTR [esi+0x7142da74],0x8e
  417fe4:	and    DWORD PTR [edi-0x41],ebx
  417fe7:	popa   
  417fe8:	jmp    0xa005c7f6
  417fed:	jae    0x418045
  417fef:	ja     0x41806b
  417ff1:	in     eax,dx
  417ff2:	pop    ss
  417ff3:	jne    0x41802f
  417ff5:	in     al,dx
  417ff6:	jg     0x418077
  417ff8:	retf   
  417ff9:	xor    eax,0x1a6e9773
  417ffe:	dec    ecx
  417fff:	ficom  DWORD PTR [esi+edx*1]
  418002:	adc    BYTE PTR [esi-0x40],bl
  418005:	fldcw  WORD PTR [edi]
  418007:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418008:	xor    BYTE PTR [ecx+eax*8-0x71],0x1
  41800d:	lock pop DWORD PTR [ebx-0x76b7ef82]
  418014:	je     0x417fca
  418016:	pop    ds
  418017:	mov    ebx,0x6698f1d3
  41801c:	push   ds
  41801d:	aam    0x8c
  41801f:	cwde   
  418020:	sbb    eax,0x50f1ad94
  418025:	fwait
  418026:	mov    eax,0xd466c852
  41802b:	ds and al,0xa3
  41802e:	aaa    
  41802f:	arpl   WORD PTR [si+0x28],si
  418033:	pop    ebp
  418034:	inc    esi
  418035:	aaa    
  418036:	test   al,0x90
  418038:	sbb    ah,BYTE PTR [esp+eax*8-0x78ff344]
  41803f:	pop    es
  418040:	mov    ah,0xb8
  418042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418043:	xchg   bp,ax
  418045:	hlt    
  418046:	icebp  
  418047:	out    dx,eax
  418048:	sbb    cl,BYTE PTR [esp+esi*1]
  41804b:	fsub   st,st(6)
  41804d:	loope  0x417fec
  41804f:	xchg   edi,eax
  418050:	inc    esi
  418051:	adc    ah,BYTE PTR [edi+esi*1]
  418054:	retf   0x471e
  418057:	xlat   BYTE PTR ss:[ebx]
  418059:	xor    esi,DWORD PTR [eax+0x31]
  41805c:	call   0x3144d6f5
  418061:	stos   DWORD PTR es:[edi],eax
  418062:	(bad)  
  418063:	mov    dh,0xd9
  418066:	(bad)  
  418067:	popa   
  418068:	push   cs
  418069:	ins    BYTE PTR es:[edi],dx
  41806a:	addr16 popf 
  41806c:	mov    bl,BYTE PTR [edx-0x20]
  41806f:	daa    
  418070:	sti    
  418071:	ror    DWORD PTR [edi+0x43],cl
  418074:	sbb    ah,BYTE PTR [esi-0x464c7485]
  41807a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41807b:	in     al,dx
  41807c:	mov    al,0xe9
  41807e:	inc    edx
  41807f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418080:	or     dh,ah
  418082:	dec    ecx
  418083:	sti    
  418084:	ficom  DWORD PTR [edi+0x5d1a89c6]
  41808a:	mov    ds:0xadf8109e,al
  41808f:	imul   edi,edx,0xc5f1d8cd
  418095:	mov    ss,WORD PTR [ebx+0x66]
  418098:	pusha  
  418099:	sbb    cl,BYTE PTR ds:0xdeb1a81
  41809f:	hlt    
  4180a0:	call   0x68d9:0x27e43fe3
  4180a7:	retf   
  4180a8:	or     bl,al
  4180aa:	push   esp
  4180ab:	ja     0x4180a1
  4180ad:	sbb    eax,0x2f0bb4c6
  4180b2:	dec    edi
  4180b3:	fdivr  DWORD PTR [edx-0x6a574662]
  4180b9:	fxch   st(4)
  4180bb:	ss mov ebx,0xba6c9553
  4180c1:	sub    eax,0x2a388e29
  4180c6:	dec    eax
  4180c7:	pop    ss
  4180c8:	mov    WORD PTR [edi-0x3b],ds
  4180cb:	sbb    esi,DWORD PTR [edi+0x3267283f]
  4180d1:	(bad)  
  4180d2:	in     al,dx
  4180d3:	cwde   
  4180d4:	stos   BYTE PTR es:[edi],al
  4180d5:	cdq    
  4180d6:	xchg   ebx,eax
  4180d7:	retf   0xc80b
  4180da:	push   esi
  4180db:	xchg   DWORD PTR [ecx-0x3439877c],esi
  4180e1:	fnstcw WORD PTR [eax+0x59]
  4180e4:	add    BYTE PTR [edi+eiz*4-0x4c690270],ch
  4180eb:	in     eax,0x1a
  4180ed:	sar    DWORD PTR [eax],cl
  4180ef:	leave  
  4180f0:	xchg   DWORD PTR [ecx],esp
  4180f2:	scas   al,BYTE PTR es:[edi]
  4180f3:	fdivr  st(7),st
  4180f5:	fimul  DWORD PTR [ecx-0x2006f1ee]
  4180fb:	lock addr16 rcl ah,cl
  4180ff:	ins    DWORD PTR es:[edi],dx
  418100:	loop   0x4180c7
  418102:	pop    ebp
  418103:	cmp    ebx,DWORD PTR [edx]
  418105:	mov    cl,0xe7
  418107:	dec    ebp
  418108:	call   0x8fd9:0x33569812
  41810f:	dec    edi
  418110:	adc    DWORD PTR [edi+0x53],ecx
  418113:	jne    0x41816f
  418115:	sbb    BYTE PTR [edx+0x61],dl
  418118:	or     al,0x8e
  41811a:	inc    edx
  41811b:	cdq    
  41811c:	add    DWORD PTR [eax+0x4b],ebp
  41811f:	sub    eax,0xfb37e69
  418124:	xchg   DWORD PTR [ebx+0x8],edx
  418127:	xlat   BYTE PTR ds:[ebx]
  418128:	enter  0xebf5,0x66
  41812c:	cmp    DWORD PTR [eax-0x44],0xc8b7189b
  418133:	out    dx,eax
  418134:	aas    
  418135:	ror    BYTE PTR [eax+0x7d],1
  418138:	cmp    eax,ebx
  41813a:	aam    0x86
  41813c:	lods   al,BYTE PTR ds:[esi]
  41813d:	push   edx
  41813e:	cmp    ch,BYTE PTR [edi+ebx*1+0x59]
  418142:	sbb    ch,BYTE PTR [edi+esi*1]
  418145:	pop    edx
  418146:	nop
  418147:	add    DWORD PTR [ecx-0x41b8b745],edi
  41814d:	xor    eax,0x567cfa12
  418152:	xchg   DWORD PTR cs:[bp+si+0x6884],esi
  418158:	cmp    DWORD PTR [eax],edi
  41815a:	test   al,0x27
  41815c:	mov    eax,ds:0xda1dafad
  418161:	mov    al,ds:0xd9d00279
  418166:	fld    DWORD PTR ds:[eax]
  418169:	sbb    ecx,ebp
  41816b:	inc    esp
  41816c:	mov    eax,0x1a6c47c9
  418171:	or     ah,al
  418173:	or     eax,0x1ba3cdca
  418178:	sahf   
  418179:	fnstcw WORD PTR [eax]
  41817b:	jnp    0x418119
  41817d:	mov    ah,cl
  41817f:	pop    edi
  418180:	ins    DWORD PTR es:[edi],dx
  418181:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418182:	ins    DWORD PTR es:[edi],dx
  418183:	fistp  WORD PTR [edx]
  418185:	(bad)  
  418186:	cmp    bh,ah
  418188:	sub    DWORD PTR es:[edi+0x76],edx
  41818c:	dec    ebp
  41818d:	cmc    
  41818e:	dec    eax
  41818f:	dec    esp
  418190:	jb     0x4181ab
  418192:	mov    ah,0x5c
  418194:	mov    al,ds:0x59b9841b
  418199:	and    BYTE PTR [esi-0x210886a6],dl
  41819f:	out    0x2,al
  4181a1:	mov    dl,BYTE PTR [esi]
  4181a3:	rcl    BYTE PTR [ecx-0x4f995996],1
  4181a9:	mov    WORD PTR [esi+0x6],es
  4181ac:	push   esp
  4181ad:	mov    esp,0x7f7670c0
  4181b2:	or     DWORD PTR [edi-0x64],esp
  4181b5:	fistp  WORD PTR [edx-0x49e096cb]
  4181bb:	mov    WORD PTR [ebx+0xe],si
  4181bf:	sbb    ebx,DWORD PTR [edx]
  4181c1:	add    al,0x7
  4181c3:	jg     0x41821c
  4181c5:	mov    DWORD PTR [ebx+0xa],esp
  4181c8:	out    0xda,eax
  4181ca:	add    BYTE PTR [ebx+0x72c33c79],0xa5
  4181d1:	cmp    DWORD PTR [ebx+0x592d1a10],edx
  4181d7:	dec    esi
  4181d8:	pop    edx
  4181d9:	sub    al,0xd
  4181db:	aas    
  4181dc:	into   
  4181dd:	mov    edx,0xd9936bcb
  4181e2:	sub    ebx,DWORD PTR [ebp-0x17]
  4181e5:	in     eax,0x1b
  4181e7:	add    ah,BYTE PTR [ebp-0x56]
  4181ea:	loope  0x4181d1
  4181ec:	and    esi,DWORD PTR [ecx]
  4181ee:	dec    eax
  4181ef:	mov    ch,BYTE PTR [esi]
  4181f1:	mov    ecx,0x5e2726d8
  4181f6:	scas   al,BYTE PTR es:[edi]
  4181f7:	jl     0x41820f
  4181f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181fa:	mov    ecx,0x7e619b66
  4181ff:	inc    ebp
  418200:	inc    edx
  418201:	test   BYTE PTR [eax-0x57],cl
  418204:	mov    edi,0xd22ae76f
  418209:	push   ebx
  41820a:	and    BYTE PTR [esi-0x79],0x32
  41820e:	pop    ss
  41820f:	add    al,0x1a
  418211:	push   esi
  418212:	mov    ebx,0xe03a53d6
  418217:	inc    edi
  418218:	mov    ds,WORD PTR [eax]
  41821a:	(bad)  
  41821b:	push   DWORD PTR [edi]
  41821d:	pop    es
  41821e:	and    DWORD PTR [esi+0x66961d77],ebp
  418224:	pop    ecx
  418225:	sbb    ah,ah
  418227:	in     eax,dx
  418228:	ds (bad) 
  41822a:	mov    esp,0xb9dc1b0e
  41822f:	sbb    eax,ebp
  418231:	(bad)  
  418232:	push   eax
  418233:	pop    ss
  418234:	rcr    ecx,1
  418236:	sbb    edx,DWORD PTR [edx+0x2d]
  418239:	stc    
  41823a:	outs   dx,BYTE PTR ds:[esi]
  41823b:	shr    BYTE PTR [ebx+0x6ac77666],1
  418241:	lods   eax,DWORD PTR ds:[esi]
  418242:	dec    eax
  418243:	pop    edx
  418244:	scas   eax,DWORD PTR es:[edi]
  418245:	dec    ebp
  418246:	sti    
  418247:	jle    0x4181f6
  418249:	cmp    al,0x73
  41824b:	out    dx,ax
  41824d:	jmp    0x418286
  41824f:	cmp    BYTE PTR ds:0xbf4e4e3,bl
  418255:	ret    
  418256:	pop    ebp
  418257:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418258:	dec    edx
  418259:	cmp    ebp,ecx
  41825b:	out    0x20,al
  41825d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41825e:	(bad)  
  41825f:	jne    0x4182db
  418261:	sbb    al,0x67
  418263:	test   BYTE PTR [ebp-0x4c],al
  418266:	xchg   esp,eax
  418267:	rcr    DWORD PTR [edx],1
  418269:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41826a:	mov    ebx,0x1c4d9722
  41826f:	adc    bh,bl
  418271:	fnstenv [ebx-0x130d903b]
  418277:	outs   dx,DWORD PTR ds:[esi]
  418278:	mov    dh,BYTE PTR [esi]
  41827a:	loop   0x418206
  41827c:	and    BYTE PTR [edx-0x177a2fad],cl
  418282:	mov    ah,0xe6
  418284:	or     eax,0x589016e1
  418289:	icebp  
  41828a:	in     al,dx
  41828b:	dec    esi
  41828c:	imul   esp,DWORD PTR [eax-0x16e50922],0x9c50d1a3
  418296:	and    ebx,DWORD PTR [edi+0x41]
  418299:	fstp   DWORD PTR [esi]
  41829b:	jecxz  0x4182d1
  41829d:	mov    esi,0xd54e59c8
  4182a2:	mov    DWORD PTR [ebx+0x1a],esp
  4182a5:	xchg   ecx,eax
  4182a6:	inc    esp
  4182a7:	fist   DWORD PTR [edi+0x2a849b6a]
  4182ad:	(bad)  
  4182af:	add    al,0x9
  4182b1:	out    dx,eax
  4182b2:	cmovnp eax,DWORD PTR [ebp+0x7b]
  4182b6:	ins    DWORD PTR es:[edi],dx
  4182b7:	test   BYTE PTR gs:[edi-0x740270b8],dl
  4182be:	imul   BYTE PTR [ebx+0x66e42722]
  4182c4:	adc    al,0x19
  4182c6:	(bad)  
  4182c7:	inc    ebp
  4182c8:	sbb    bh,BYTE PTR [edi]
  4182ca:	ret    
  4182cb:	sub    DWORD PTR [eax+edi*1],0x2c
  4182cf:	pop    esp
  4182d0:	dec    ebx
  4182d1:	fst    DWORD PTR ds:0x5b8ddc71
  4182d7:	or     edx,DWORD PTR [eax+0x228dc62a]
  4182dd:	repz inc edi
  4182df:	or     BYTE PTR [ecx],dl
  4182e1:	xlat   BYTE PTR ds:[ebx]
  4182e2:	jecxz  0x41826e
  4182e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182e5:	out    0xf1,eax
  4182e7:	in     eax,0xf3
  4182e9:	(bad)  
  4182ea:	mov    ebp,0x683ff7d1
  4182ef:	and    dl,BYTE PTR [esi+0x60]
  4182f2:	pop    esi
  4182f3:	mov    ah,0x71
  4182f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182f6:	inc    esp
  4182f7:	out    0x51,eax
  4182f9:	mov    al,ds:0x3809a63f
  4182fe:	les    esp,FWORD PTR [edx+0x346799d8]
  418304:	stc    
  418305:	jbe    0x4182ca
  418307:	xchg   esp,eax
  418308:	sbb    cl,BYTE PTR [edx+0x2d]
  41830b:	pop    ds
  41830c:	mov    dl,0x6a
  41830e:	cli    
  41830f:	gs mov ecx,0xd7b1da15
  418315:	mov    ebx,edi
  418317:	mov    eax,ds:0x15c87223
  41831c:	push   eax
  41831d:	or     al,0x96
  41831f:	sub    edx,DWORD PTR [edi+0x1c]
  418322:	inc    eax
  418323:	arpl   WORD PTR [edx+0x7f],di
  418326:	mov    esi,0x79c5dbe6
  41832b:	mov    ebp,0x665b6e54
  418330:	push   esi
  418331:	cli    
  418332:	shrd   DWORD PTR [edx],ebx,0x20
  418336:	mov    dh,0x89
  418338:	and    al,BYTE PTR gs:[edx]
  41833b:	or     BYTE PTR [edi-0x4d831f27],0xb
  418342:	mov    ebx,0x8e4f6602
  418347:	push   ss
  418348:	pop    ebp
  418349:	xchg   edi,eax
  41834a:	dec    edi
  41834b:	icebp  
  41834c:	dec    edx
  41834d:	rcl    BYTE PTR [edi+0x4fd9eefb],0xb
  418354:	xchg   ecx,eax
  418355:	add    dl,BYTE PTR [ecx-0x5e2e28e8]
  41835b:	cmc    
  41835c:	push   edi
  41835d:	xchg   ebx,eax
  41835e:	xor    ah,BYTE PTR [eax]
  418360:	sub    esi,DWORD PTR [ebx]
  418362:	cmp    eax,0xbc7f48e7
  418367:	leave  
  418368:	jecxz  0x418350
  41836a:	(bad)  
  41836b:	addr16 pop ebx
  41836d:	sbb    al,0xcc
  41836f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418370:	sbb    al,0xc2
  418372:	pop    es
  418373:	out    0xaa,eax
  418375:	push   0xf5998ed
  41837a:	xchg   ecx,eax
  41837b:	pop    ax
  41837d:	pop    edi
  41837e:	jns    0x4183cc
  418380:	add    dl,BYTE PTR [eax+0x611a24bd]
  418386:	mov    edx,0xeb2d086d
  41838b:	mov    ds:0x9722d9a4,al
  418390:	lock add al,0xd1
  418393:	and    eax,DWORD PTR [ecx+0x365f0891]
  418399:	idiv   bh
  41839b:	icebp  
  41839c:	pop    ds
  41839d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41839e:	outs   dx,DWORD PTR ds:[esi]
  41839f:	rcr    BYTE PTR [edx-0x472437ec],0xd9
  4183a6:	lods   eax,DWORD PTR ds:[esi]
  4183a7:	mov    bh,0x78
  4183a9:	pop    edi
  4183aa:	call   0x598e:0x7f7ccec5
  4183b1:	retf   
  4183b2:	addr16 (bad) 
  4183b4:	int    0x9
  4183b6:	dec    ebx
  4183b7:	aas    
  4183b8:	aam    0xd7
  4183ba:	repnz out 0x1e,al
  4183bd:	jnp    0x4183af
  4183bf:	addr16 inc ecx
  4183c1:	sub    al,0xa3
  4183c3:	(bad)  
  4183c4:	push   ss
  4183c5:	mov    eax,ds:0xa461c6f8
  4183ca:	dec    eax
  4183cb:	int3   
  4183cc:	pop    ebx
  4183cd:	adc    BYTE PTR [ebp+edi*4+0x6c],dl
  4183d1:	and    al,BYTE PTR [ecx+0x67]
  4183d4:	xchg   esp,eax
  4183d5:	out    0x59,eax
  4183d7:	push   DWORD PTR [edi]
  4183d9:	add    ebx,esi
  4183db:	es pop ebp
  4183dd:	pop    ebx
  4183de:	sbb    eax,0xc899ccd0
  4183e3:	and    ebp,ecx
  4183e5:	fst    DWORD PTR [edx+edx*4]
  4183e8:	(bad)  
  4183ea:	std    
  4183eb:	jno    0x418377
  4183ed:	dec    esp
  4183ee:	xor    DWORD PTR [ebx+0x1a65263b],ebp
  4183f4:	hlt    
  4183f5:	push   ebx
  4183f6:	retf   0x9d11
  4183f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183fa:	xchg   dh,ah
  4183fc:	push   ds
  4183fd:	fst    DWORD PTR [edx]
  4183ff:	jp     0x4183eb
  418401:	imul   eax,esi,0x103db8a2
  418407:	mov    dl,0x1a
  418409:	mov    es,ebx
  41840b:	mov    eax,ds:0xe9c5d8bf
  418410:	test   cl,bl
  418412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418413:	sbb    al,0x63
  418415:	push   eax
  418416:	xor    al,0xab
  418418:	mov    bh,0xb6
  41841a:	pop    ebp
  41841b:	icebp  
  41841c:	inc    esi
  41841d:	bound  ecx,QWORD PTR [eax+0x57]
  418420:	enter  0x9e49,0x5c
  418424:	push   edi
  418425:	test   al,dh
  418427:	data16 stos BYTE PTR es:[edi],al
  418429:	rcl    DWORD PTR [eax],cl
  41842b:	sub    ebx,DWORD PTR [edx]
  41842d:	inc    ebx
  41842e:	fsubp  st(1),st
  418430:	(bad)  
  418432:	jae    0x41840c
  418434:	dec    ebx
  418435:	fnstenv [ebx+0x18db3b98]
  41843b:	fs sub BYTE PTR cs:[eax],ch
  41843f:	and    ah,BYTE PTR [ebx+0x7bcd4942]
  418445:	loop   0x418452
  418447:	repz mov dh,0xa0
  41844a:	enter  0xd19c,0x6f
  41844e:	mov    dl,0x4c
  418450:	scas   eax,DWORD PTR es:[edi]
  418451:	aaa    
  418452:	dec    edi
  418453:	js     0x41847f
  418455:	hlt    
  418456:	loope  0x4184d3
  418458:	out    0xd9,al
  41845a:	push   0x5e
  41845c:	std    
  41845d:	and    eax,edi
  41845f:	mov    bl,0x13
  418461:	inc    ebp
  418462:	mov    ecx,0x48d4f898
  418467:	push   eax
  418468:	cs sub eax,0xe36fa1da
  41846e:	mov    gs,WORD PTR [ecx+0x5d]
  418471:	cld    
  418472:	xlat   BYTE PTR ds:[ebx]
  418473:	inc    esi
  418474:	scas   al,BYTE PTR es:[edi]
  418475:	jne    0x41846f
  418477:	loope  0x418459
  418479:	mov    ds:0xdf3b3a48,eax
  41847e:	inc    edx
  41847f:	test   al,0xb8
  418481:	shr    BYTE PTR [edx+0x66],0xb1
  418485:	push   ecx
  418486:	mov    esi,0x9d881add
  41848b:	mov    dh,0x1e
  41848d:	nop
  41848e:	sub    al,BYTE PTR [edx+0x12]
  418491:	fidiv  DWORD PTR [ecx-0x53]
  418494:	adc    edi,DWORD PTR [esi+0x55]
  418497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418498:	mov    ah,0x89
  41849a:	sub    eax,0x481b0fe4
  41849f:	cmc    
  4184a0:	xlat   BYTE PTR ds:[ebx]
  4184a1:	test   BYTE PTR [edx-0x68],dl
  4184a4:	push   eax
  4184a5:	pop    es
  4184a6:	mov    eax,DWORD PTR [ebx+0x2743d09a]
  4184ac:	or     eax,0xfa16f9b2
  4184b1:	add    DWORD PTR [eax-0x63],ecx
  4184b4:	ja     0x418519
  4184b6:	push   edi
  4184b7:	inc    eax
  4184b8:	rcl    DWORD PTR [esi+eiz*4+0x6cac4a69],0x25
  4184c0:	cdq    
  4184c1:	or     ebp,DWORD PTR [eax]
  4184c3:	stos   BYTE PTR es:[edi],al
  4184c4:	sbb    bh,bl
  4184c6:	xor    eax,0xdf734ee
  4184cb:	or     ah,BYTE PTR [edi-0x27]
  4184ce:	dec    eax
  4184cf:	leave  
  4184d0:	aam    0x5c
  4184d2:	xor    ah,dh
  4184d4:	xor    ch,BYTE PTR ds:0xf401dbf
  4184da:	dec    eax
  4184db:	(bad)  
  4184dc:	and    al,0x9c
  4184de:	add    al,0x61
  4184e0:	ret    
  4184e1:	loopne 0x41850b
  4184e3:	push   0xffffffd0
  4184e5:	out    dx,al
  4184e6:	gs pop edi
  4184e8:	mov    bh,0x5c
  4184ea:	fcomp  DWORD PTR [edx]
  4184ec:	(bad)  
  4184ee:	mov    ds:0x5491efce,eax
  4184f3:	popf   
  4184f4:	mov    ebp,DWORD PTR [ecx-0x35]
  4184f7:	dec    esi
  4184f8:	jl     0x4184d3
  4184fa:	outs   dx,BYTE PTR ss:[esi]
  4184fc:	mov    cl,0x2d
  4184fe:	repnz test BYTE PTR [edi+0x5289e2ba],ch
  418505:	pop    edi
  418506:	dec    eax
  418507:	push   esi
  418508:	ror    BYTE PTR [esi+0x68dbad9e],1
  41850e:	dec    edi
  41850f:	data16 fdivr QWORD PTR [esi-0x2e]
  418513:	loopne 0x41853e
  418515:	mov    esi,0x373c5ab1
  41851a:	push   eax
  41851b:	sub    eax,0xbd26945b
  418520:	sbb    al,0xb7
  418522:	aas    
  418523:	loopne 0x4184ae
  418525:	loopne 0x41854a
  418527:	or     bl,BYTE PTR [eax]
  418529:	push   edi
  41852a:	inc    edi
  41852b:	ret    
  41852c:	rcl    DWORD PTR [ecx+0x2c],0x76
  418530:	sub    esp,esp
  418532:	add    esi,0x1a
  418535:	(bad)  
  418536:	in     al,0x72
  418538:	cmc    
  418539:	arpl   WORD PTR [ebx+0x7b],bp
  41853c:	(bad)  
  41853d:	push   ecx
  41853e:	fwait
  41853f:	test   eax,0x824a3d48
  418544:	in     al,0x9c
  418546:	xor    esp,DWORD PTR [edi+0x1b]
  418549:	push   edx
  41854a:	ins    BYTE PTR es:[edi],dx
  41854b:	adc    BYTE PTR [ecx+0x1ea84845],al
  418551:	or     BYTE PTR [ebx+0x6],cl
  418554:	pop    esi
  418555:	jo     0x418590
  418557:	push   0xdb23aa33
  41855c:	out    dx,al
  41855d:	xor    ebx,ecx
  41855f:	ds and eax,esi
  418562:	dec    eax
  418563:	clc    
  418564:	test   al,0xe9
  418566:	mov    ds:0x68d5598a,eax
  41856b:	push   si
  41856d:	scas   eax,DWORD PTR es:[edi]
  41856e:	adc    BYTE PTR [esi+0x1a],ah
  418571:	out    dx,eax
  418572:	sbb    BYTE PTR [edx+0x3b],bh
  418575:	jne    0x418537
  418577:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418578:	cmp    bl,ah
  41857a:	stos   DWORD PTR es:[edi],eax
  41857b:	das    
  41857c:	js     0x41853c
  41857e:	cmp    DWORD PTR [edi-0x345523f6],esi
  418584:	sbb    dl,dh
  418586:	push   ecx
  418587:	push   edx
  418588:	mov    eax,eax
  41858a:	jns    0x418565
  41858c:	sub    al,0x51
  41858e:	adc    bl,al
  418590:	and    dh,BYTE PTR [edx+0x177b6967]
  418596:	std    
  418597:	dec    eax
  418598:	xor    al,0xa9
  41859a:	inc    eax
  41859b:	or     BYTE PTR [edi+0x3d],bl
  41859e:	dec    eax
  41859f:	pop    eax
  4185a0:	fs add eax,0x1282b178
  4185a6:	fisub  DWORD PTR [esi+0x1d]
  4185a9:	dec    edx
  4185aa:	sbb    eax,0x6a806644
  4185af:	adc    al,0x2f
  4185b1:	pop    esi
  4185b2:	pop    ss
  4185b3:	addr16 xor ah,dl
  4185b6:	stos   DWORD PTR es:[edi],eax
  4185b7:	retf   0x1975
  4185ba:	packuswb mm4,mm4
  4185bd:	arpl   WORD PTR [esp+edx*8-0xe3708e6],sp
  4185c4:	out    0x62,eax
  4185c6:	aaa    
  4185c7:	jnp    0x41859c
  4185c9:	fldenv [ecx-0x4b]
  4185cc:	xor    DWORD PTR [ecx-0x51a0771c],eax
  4185d2:	push   ebp
  4185d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4185d4:	fcomp  DWORD PTR [edi+0x48]
  4185d7:	or     ecx,DWORD PTR [ebx]
  4185d9:	add    al,0x0
  4185db:	int    0xa3
  4185dd:	jp     0x4185f9
  4185df:	imul   eax,ebx,0x59
  4185e2:	mov    edi,ebx
  4185e4:	das    
  4185e5:	pop    edx
  4185e6:	das    
  4185e7:	sti    
  4185e8:	inc    ecx
  4185e9:	jo     0x418633
  4185eb:	and    eax,0xf19da3f2
  4185f0:	pusha  
  4185f1:	aaa    
  4185f2:	sbb    ah,BYTE PTR [edi+0x35]
  4185f5:	outs   dx,BYTE PTR ds:[esi]
  4185f6:	jns    0x41858a
  4185f8:	push   esi
  4185f9:	cmp    edi,esp
  4185fb:	in     eax,0xe3
  4185fd:	das    
  4185fe:	add    DWORD PTR [eax+0x3e],ebp
  418601:	push   eax
  418602:	pusha  
  418603:	dec    ebx
  418604:	sub    eax,0x7c6b30c3
  418609:	stos   DWORD PTR es:[edi],eax
  41860a:	outs   dx,BYTE PTR ds:[esi]
  41860b:	ins    DWORD PTR es:[edi],dx
  41860c:	cmp    edi,DWORD PTR [ecx]
  41860e:	shr    DWORD PTR [esp+eax*2-0x34],0xdf
  418613:	sub    DWORD PTR [eax],esi
  418615:	adc    al,0x56
  418617:	push   edx
  418618:	adc    BYTE PTR [esi],dl
  41861a:	jmp    0x150b7c86
  41861f:	xlat   BYTE PTR ds:[ebx]
  418620:	pushf  
  418621:	pop    edi
  418622:	adc    eax,0x6125eb68
  418627:	mov    al,0xd6
  418629:	mov    ds:0x551ac72c,al
  41862e:	lds    esi,FWORD PTR [eax]
  418630:	push   edi
  418631:	je     0x4185d9
  418633:	adc    ah,BYTE PTR [edi-0x27]
  418636:	(bad)  
  418637:	lods   al,BYTE PTR ds:[esi]
  418638:	in     eax,dx
  418639:	dec    esi
  41863a:	ja     0x418639
  41863c:	repz add DWORD PTR gs:[edx-0x4db7a555],esp
  418644:	mov    DWORD PTR [eax+0x1fe3718a],ecx
  41864a:	shl    DWORD PTR [esi+0x5],0xec
  41864e:	mov    eax,ds:0xdc3a1a21
  418653:	or     ch,BYTE PTR [eax+0x1e]
  418656:	stos   DWORD PTR es:[edi],eax
  418657:	cld    
  418658:	inc    ebp
  418659:	fldenv [ebp-0x48]
  41865c:	in     al,0xe0
  41865e:	mov    edi,0xcc2860bf
  418663:	fs cmp eax,0x5d7b48d0
  418669:	fcomi  st,st(3)
  41866b:	adc    eax,0x6a1074ef
  418670:	mov    bh,0x31
  418672:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418673:	mov    bh,0x2e
  418675:	pop    es
  418676:	loopne 0x418632
  418678:	sub    ecx,DWORD PTR [esi]
  41867a:	dec    ecx
  41867b:	aam    0x9a
  41867d:	ds addr16 popa 
  418680:	adc    bl,dl
  418682:	and    edi,DWORD PTR [ebp+0x5f6ade60]
  418688:	test   BYTE PTR [edx-0x3bcc07f2],ah
  41868e:	push   esi
  41868f:	mov    ebp,gs
  418691:	sti    
  418692:	push   cs
  418693:	out    0xc7,eax
  418695:	rol    esi,0xa3
  418698:	mov    BYTE PTR [eax],bh
  41869a:	push   edx
  41869b:	imul   edx,ecx,0x1df62417
  4186a1:	adc    eax,ebx
  4186a3:	jecxz  0x4186bf
  4186a5:	push   ss
  4186a6:	sub    al,0xec
  4186a8:	dec    edi
  4186a9:	loop   0x4186cf
  4186ab:	loopne 0x4186ea
  4186ad:	fldcw  WORD PTR [edi]
  4186af:	pusha  
  4186b0:	sub    al,0x83
  4186b2:	or     bh,BYTE PTR [ebx+0x5]
  4186b5:	out    dx,eax
  4186b6:	(bad)  
  4186b7:	out    dx,al
  4186b8:	cmp    DWORD PTR [edx+0x37c76948],ecx
  4186be:	mov    dh,0x9e
  4186c0:	ss in  al,0x2e
  4186c3:	addr16 push esi
  4186c5:	pop    ebp
  4186c6:	lock in eax,dx
  4186c8:	aaa    
  4186c9:	ffree  st(3)
  4186cb:	dec    edx
  4186cc:	fld    TBYTE PTR ds:0x87742e74
  4186d2:	(bad)  
  4186d4:	nop
  4186d5:	fldenv [edi]
  4186d7:	mov    ch,0x37
  4186d9:	lods   al,BYTE PTR ds:[esi]
  4186da:	push   edi
  4186db:	sub    bh,BYTE PTR [edi+0x1c5fd05f]
  4186e1:	(bad)  
  4186e2:	dec    eax
  4186e3:	cmp    eax,0x2e053bb2
  4186e8:	lods   al,BYTE PTR ds:[esi]
  4186e9:	mov    eax,DWORD PTR [ecx-0x3f3fe58f]
  4186ef:	test   al,0x10
  4186f1:	sbb    eax,0x40288a98
  4186f6:	inc    esp
  4186f7:	pusha  
  4186f8:	push   cs
  4186f9:	cli    
  4186fa:	fsub   st(0),st
  4186fc:	ja     0x4186bf
  4186fe:	xlat   BYTE PTR ds:[ebx]
  4186ff:	das    
  418700:	sbb    esp,eax
  418702:	scas   al,BYTE PTR es:[edi]
  418703:	data16 fs jg 0x4186e5
  418707:	mov    bl,BYTE PTR [edx]
  418709:	pop    esp
  41870a:	cmp    DWORD PTR [esi+0x429f3ed5],esi
  418710:	push   esp
  418711:	fsub   QWORD PTR [ecx+esi*2-0x62e2dabf]
  418718:	rcl    BYTE PTR [edi-0xbe5b34f],cl
  41871e:	gs sbb ebx,DWORD PTR ss:[eax+esi*4]
  418723:	mov    ebp,0x1bb3dd07
  418728:	sbb    DWORD PTR [ebp-0x72e56c49],edx
  41872e:	jmp    0xc3ba:0x54364a5e
  418735:	(bad)  
  418737:	push   edi
  418738:	xor    al,0xaa
  41873a:	arpl   WORD PTR [edi],di
  41873c:	popa   
  41873d:	sub    ebx,0x4ee47123
  418743:	xor    eax,0x2211b36a
  418748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418749:	(bad)  ds:0x3ff1afd4
  41874f:	mov    bh,0x68
  418751:	push   esp
  418752:	or     eax,0x4f942dcc
  418757:	call   0x1d95b30d
  41875c:	mov    ebp,0xe705f883
  418761:	fld    st(3)
  418763:	pop    eax
  418764:	in     eax,dx
  418765:	inc    edi
  418766:	inc    esp
  418767:	mov    dh,0xfc
  418769:	add    esi,DWORD PTR [ecx-0x4e]
  41876c:	dec    esi
  41876d:	jecxz  0x4187bd
  41876f:	add    al,0x1a
  418771:	push   eax
  418772:	stos   BYTE PTR es:[edi],al
  418773:	add    dh,ah
  418775:	fnstcw WORD PTR [eax+0x34]
  418778:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418779:	int    0xde
  41877b:	sbb    esp,DWORD PTR [eax]
  41877d:	(bad)  
  41877e:	push   esp
  41877f:	ss ja  0x4187ce
  418782:	push   esi
  418783:	int    0x64
  418785:	add    BYTE PTR [eax],dh
  418787:	out    0xb1,eax
  418789:	jns    0x418713
  41878b:	je     0x4187b9
  41878d:	(bad)  
  41878f:	sub    ah,BYTE PTR ds:0x82bd910
  418795:	pop    eax
  418796:	adc    ebx,DWORD PTR [edi+0x7f85d9d3]
  41879c:	adc    BYTE PTR [eax-0x56],al
  41879f:	cs call 0x99d9:0xdf1d0dff
  4187a7:	aas    
  4187a8:	or     DWORD PTR [esp+ebx*4+0xb781af6],0x11
  4187b0:	shl    BYTE PTR ds:0xd9c26eda,cl
  4187b6:	jno    0x4187a2
  4187b8:	mov    esi,0xdda8dc43
  4187bd:	dec    ebx
  4187be:	pop    ds
  4187bf:	dec    edx
  4187c0:	add    eax,0x3b74487c
  4187c5:	gs in  al,0xf3
  4187c8:	or     eax,0x1884f74d
  4187cd:	aad    0x6f
  4187cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187d0:	pop    edi
  4187d1:	push   0xffffffcd
  4187d3:	test   eax,esi
  4187d5:	fiadd  DWORD PTR [edi+0xb]
  4187d8:	shl    BYTE PTR [edi-0x4fd0a4ae],1
  4187de:	js     0x418846
  4187e0:	not    DWORD PTR [ebp+0x32]
  4187e3:	cdq    
  4187e4:	sbb    BYTE PTR [ebp+0x23],ah
  4187e7:	jb     0x418834
  4187e9:	jbe    0x418833
  4187eb:	mov    BYTE PTR [edx-0x2e500b88],0x28
  4187f2:	push   es
  4187f3:	test   BYTE PTR [esi+0x13c31ed9],dl
  4187f9:	push   es
  4187fa:	frstor [eax]
  4187fc:	adc    al,0x30
  4187fe:	mov    esp,0x4825e4e1
  418803:	push   ebx
  418804:	xchg   ebx,eax
  418805:	imul   edx,DWORD PTR [ebx+0x66d96b14],0x10b0685e
  41880f:	call   0xdebc42ec
  418814:	lods   eax,DWORD PTR ds:[esi]
  418815:	mov    ecx,0xd3796d53
  41881a:	das    
  41881b:	addr16 test eax,0xcfc7cc05
  418821:	fstp   DWORD PTR [esi+0x147eb9db]
  418827:	rcr    BYTE PTR [edx],cl
  418829:	or     DWORD PTR [eax+ebx*1-0xe],esi
  41882d:	jno    0x418805
  41882f:	cld    
  418830:	push   cs
  418831:	ficomp DWORD PTR [ebp+eax*8+0x1c]
  418835:	popf   
  418836:	push   0xa3e18d37
  41883b:	call   0x6a3b:0x574893b4
  418842:	inc    edi
  418843:	mov    WORD PTR [eax],?
  418845:	lahf   
  418846:	or     ebp,DWORD PTR [eax+0x64]
  418849:	fbld   TBYTE PTR ds:0xb0bab265
  41884f:	out    0x3a,al
  418851:	cli    
  418852:	inc    edx
  418853:	(bad)  
  418854:	fsub   QWORD PTR [ebx+0x5f]
  418857:	data16 fidiv DWORD PTR [ebp+0x10]
  41885b:	lods   eax,DWORD PTR ds:[esi]
  41885c:	push   esp
  41885d:	test   DWORD PTR [esi+0xc],eax
  418860:	cli    
  418861:	dec    edx
  418862:	sub    esp,edi
  418864:	sbb    al,0x98
  418866:	mov    ch,dh
  418868:	cmc    
  418869:	push   eax
  41886a:	adc    ah,BYTE PTR [edi-0x77]
  41886d:	(bad)  
  41886e:	jae    0x4188d2
  418870:	sbb    dh,ch
  418872:	jg     0x418806
  418874:	int3   
  418875:	repnz cmp DWORD PTR [esi-0x749a26b4],eax
  41887c:	or     eax,0x1e839ce4
  418881:	loopne 0x41880e
  418883:	add    eax,0xa77fe057
  418888:	xlat   BYTE PTR ds:[ebx]
  418889:	paddd  mm5,QWORD PTR [edx+esi*1]
  41888d:	mov    ebx,0x35ca8648
  418892:	mul    BYTE PTR [esi+0x53]
  418895:	mov    ch,0xbb
  418897:	add    DWORD PTR [edx],ebx
  418899:	xchg   ebx,eax
  41889a:	outs   dx,DWORD PTR ds:[esi]
  41889b:	sub    esi,DWORD PTR [edx-0x3b404038]
  4188a1:	fldenv [esi*8+0x4cc1a286]
  4188a8:	push   ss
  4188a9:	mov    dh,0x91
  4188ab:	ss xchg edi,eax
  4188ad:	ins    DWORD PTR es:[edi],dx
  4188ae:	dec    eax
  4188af:	outs   dx,BYTE PTR ds:[esi]
  4188b0:	fnsave [edx]
  4188b2:	out    dx,eax
  4188b3:	inc    eax
  4188b4:	ss push ds
  4188b6:	retf   
  4188b7:	imul   ecx,esp,0xddc7e6f
  4188bd:	xor    eax,0xf625ca10
  4188c2:	inc    edi
  4188c3:	cli    
  4188c4:	fwait
  4188c5:	jo     0x418919
  4188c7:	and    BYTE PTR [ebx+0x566e1c2],al
  4188cd:	cmp    eax,0x21ac305
  4188d2:	push   ebp
  4188d3:	inc    ebx
  4188d4:	stos   DWORD PTR es:[edi],eax
  4188d5:	and    edx,eax
  4188d7:	loope  0x4188cd
  4188d9:	(bad)  [edi+0x178fccba]
  4188df:	jge    0x41893a
  4188e1:	jle    0x418953
  4188e3:	pop    ebp
  4188e4:	cli    
  4188e5:	(bad)  
  4188e6:	dec    eax
  4188e7:	jbe    0x4188f4
  4188e9:	xchg   edx,eax
  4188ea:	xor    al,0x48
  4188ec:	stos   BYTE PTR es:[edi],al
  4188ed:	stc    
  4188ee:	cmp    WORD PTR [eax-0x64],0xffd6
  4188f3:	scas   ax,WORD PTR es:[edi]
  4188f5:	add    ebp,esp
  4188f7:	sbb    DWORD PTR [esi],ebx
  4188f9:	or     DWORD PTR [ebx+ecx*4],esi
  4188fc:	fsub   DWORD PTR [edi-0x2023afe7]
  418902:	(bad)  
  418903:	or     eax,0x68366cee
  418908:	sbb    ecx,DWORD PTR [esi+0x6d]
  41890b:	jbe    0x4188d7
  41890d:	mov    esp,0xc999572f
  418912:	dec    eax
  418913:	hlt    
  418914:	arpl   WORD PTR [edx],ax
  418916:	mov    bh,BYTE PTR [ebp-0x4b]
  418919:	sub    eax,ebx
  41891b:	data16 stc 
  41891d:	into   
  41891e:	test   al,0x8f
  418921:	cld    
  418922:	imul   edx,eax,0xf2825a14
  418928:	add    al,0x28
  41892a:	add    dl,bl
  41892c:	sub    al,0xe0
  41892e:	prefetchnta BYTE PTR [ebx-0x1b14219c]
  418935:	fsubr  QWORD PTR [edi-0x1a]
  418938:	sbb    bl,BYTE PTR [esi]
  41893a:	xchg   edx,eax
  41893b:	push   ds
  41893c:	sbb    BYTE PTR [edi],bh
  41893e:	cmp    al,0xbc
  418940:	push   es
  418941:	fcmove st,st(6)
  418943:	adc    BYTE PTR [eax],0x63
  418946:	retf   
  418947:	lods   eax,DWORD PTR ds:[esi]
  418948:	bswap  edx
  41894a:	scas   al,BYTE PTR es:[edi]
  41894b:	mov    eax,0x604867ba
  418950:	(bad)  
  418951:	jecxz  0x4189d0
  418953:	inc    edi
  418954:	pop    edx
  418955:	push   ss
  418956:	fsubrp st(3),st
  418958:	mov    esi,0x79997123
  41895d:	inc    edi
  41895e:	les    esp,FWORD PTR [edi+0x5c]
  418961:	aad    0xa9
  418963:	sub    ebx,DWORD PTR [edx]
  418965:	sbb    al,0x3f
  418967:	test   BYTE PTR [esi+0x70],bh
  41896a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41896b:	pop    eax
  41896c:	mov    bh,0xd9
  41896e:	xor    esi,DWORD PTR ds:0x29eb894c
  418974:	loope  0x4189e5
  418976:	dec    ebp
  418977:	add    DWORD PTR [ebp-0xa],ecx
  41897a:	push   ebp
  41897b:	dec    ebx
  41897c:	stos   BYTE PTR es:[edi],al
  41897d:	xchg   edi,eax
  41897e:	jno    0x418926
  418980:	(bad)  
  418981:	fyl2x  
  418983:	cmp    BYTE PTR [edx+edx*1+0x3f],al
  418987:	pop    ebp
  418988:	pop    esi
  418989:	add    al,0x74
  41898b:	sbb    al,0x12
  41898d:	pop    ds
  41898e:	dec    eax
  41898f:	sbb    BYTE PTR [esi+0x6c],dl
  418992:	and    al,0x77
  418994:	or     DWORD PTR [eax-0x738a9966],ebx
  41899a:	stos   BYTE PTR es:[edi],al
  41899b:	repz push edx
  41899d:	ja     0x418951
  41899f:	pusha  
  4189a0:	xchg   esi,eax
  4189a1:	sbb    eax,0x3036e76c
  4189a6:	pop    es
  4189a7:	sti    
  4189a8:	repnz fnstcw WORD PTR [ebx]
  4189ab:	jle    0x4189f4
  4189ad:	pushf  
  4189ae:	out    0x79,eax
  4189b0:	or     BYTE PTR [ebp-0xf],ah
  4189b3:	pop    edx
  4189b4:	repz leave 
  4189b6:	pop    ebx
  4189b7:	dec    edi
  4189b8:	lock mov cs,WORD PTR [eax-0x19]
  4189bc:	mov    dl,0x36
  4189be:	mov    ah,dl
  4189c0:	sbb    dl,BYTE PTR [esi+edi*2-0x379eb5b3]
  4189c7:	je     0x418958
  4189c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189ca:	stc    
  4189cb:	fnstcw WORD PTR [edx]
  4189cd:	and    al,0x48
  4189cf:	into   
  4189d0:	sbb    esi,ebx
  4189d2:	add    al,0x94
  4189d4:	cmp    ecx,ebx
  4189d6:	inc    ebp
  4189d7:	frstor [esi]
  4189d9:	mov    ah,0xa3
  4189db:	add    BYTE PTR [ecx],ah
  4189dd:	dec    esi
  4189de:	sbb    dl,BYTE PTR [ebp+0x447e788]
  4189e4:	adc    cl,dl
  4189e6:	or     BYTE PTR [esi+ebx*8-0x7498fbe1],0x53
  4189ee:	jge    0x4189ca
  4189f0:	sbb    ch,al
  4189f2:	test   BYTE PTR [ecx],cl
  4189f4:	data16 je 0x4189bb
  4189f7:	scas   al,BYTE PTR es:[edi]
  4189f8:	jno    0x4189da
  4189fa:	dec    eax
  4189fb:	retf   0xa6ec
  4189fe:	ja     0x4189c2
  418a00:	rcr    BYTE PTR [ebx-0x5ee5296e],cl
  418a06:	jb     0x4189a5
  418a08:	in     eax,0x6
  418a0a:	cmc    
  418a0b:	rcl    DWORD PTR [esi+0xa9fd9],0xd2
  418a12:	pop    ecx
  418a13:	in     al,dx
  418a14:	sub    al,bl
  418a16:	test   eax,0x480da710
  418a1b:	jno    0x418a4c
  418a1d:	ins    BYTE PTR es:[edi],dx
  418a1e:	push   eax
  418a1f:	xchg   ebp,eax
  418a20:	xor    BYTE PTR [ecx-0xa],bl
  418a23:	scas   al,BYTE PTR es:[edi]
  418a24:	dec    edi
  418a25:	cmp    eax,0x62f0bf48
  418a2a:	mov    eax,0x48d33b28
  418a2f:	sub    bl,BYTE PTR ds:0xd0cff957
  418a35:	enter  0x66bc,0x20
  418a39:	in     al,dx
  418a3a:	push   eax
  418a3b:	push   0x9309e11a
  418a40:	int3   
  418a41:	and    eax,0xf627747d
  418a46:	out    dx,al
  418a47:	pop    esp
  418a48:	inc    eax
  418a49:	cdq    
  418a4a:	test   eax,0xc2758bad
  418a4f:	mov    ds,WORD PTR [edx]
  418a51:	lahf   
  418a52:	push   es
  418a53:	dec    esp
  418a54:	call   0x24d9:0xf01bfae8
  418a5b:	leave  
  418a5c:	int3   
  418a5d:	in     al,dx
  418a5e:	out    0xc4,al
  418a60:	bound  edx,QWORD PTR [edi]
  418a62:	scas   eax,DWORD PTR es:[edi]
  418a63:	lock xor eax,0x3b74894
  418a69:	add    esp,0xc38838e7
  418a6f:	addr16 add ah,ah
  418a72:	push   edi
  418a73:	lea    esi,[edx+0x4896fafc]
  418a79:	inc    BYTE PTR [edi-0x52]
  418a7c:	aad    0x60
  418a7e:	mov    bh,0x40
  418a80:	ja     0x418a76
  418a82:	sbb    BYTE PTR [edi+0x17],ah
  418a85:	test   BYTE PTR [ecx+edx*8],0x16
  418a89:	test   al,0xdd
  418a8b:	jb     0x418ab0
  418a8d:	or     DWORD PTR [eax+0x7f],ecx
  418a90:	mov    cl,0x2a
  418a92:	xor    bl,bh
  418a94:	mov    esi,0x5f664b0e
  418a99:	lock xchg esi,eax
  418a9b:	int    0x1a
  418a9d:	hlt    
  418a9e:	sub    eax,0xa13a1b55
  418aa3:	popa   
  418aa4:	iret   
  418aa5:	fldcw  WORD PTR [ecx-0x68]
  418aa8:	pop    ds
  418aa9:	push   ebp
  418aaa:	fistp  DWORD PTR [esi+eax*1]
  418aad:	mov    ebx,edi
  418aaf:	mov    WORD PTR [esi+ebx*4+0x18aa0b48],ss
  418ab6:	gs inc eax
  418ab8:	adc    ecx,DWORD PTR [ebx+0xe]
  418abb:	mov    DWORD PTR [bx+si+0x40],esp
  418abf:	les    ebx,FWORD PTR [edx]
  418ac1:	mov    bh,0x9
  418ac3:	mov    cl,cl
  418ac5:	inc    ebp
  418ac6:	mov    ecx,edi
  418ac8:	(bad)  
  418ac9:	fldcw  WORD PTR [ecx]
  418acb:	in     al,0xa6
  418acd:	jbe    0x418a7c
  418acf:	cli    
  418ad0:	fnstsw WORD PTR [eax]
  418ad2:	inc    edx
  418ad3:	enter  0x9a12,0x48
  418ad7:	jmp    DWORD PTR [ecx]
  418ad9:	outs   dx,BYTE PTR ds:[esi]
  418ada:	and    edx,DWORD PTR [ebx]
  418adc:	iret   
  418add:	dec    eax
  418ade:	sbb    al,0x67
  418ae0:	stc    
  418ae1:	mov    BYTE PTR [ebx-0x72],bl
  418ae4:	sbb    bl,BYTE PTR [edx+0x3c9cd4ff]
  418aea:	push   ss
  418aeb:	cdq    
  418aec:	das    
  418aed:	fldenv [edi-0x55fa8c03]
  418af3:	stc    
  418af4:	sbb    eax,0x18741153
  418af9:	sub    al,0x48
  418afb:	mov    esi,0x168c713e
  418b00:	or     ebx,ebx
  418b02:	shl    cl,0x19
  418b05:	je     0x418aa3
  418b07:	out    0x8e,al
  418b09:	popf   
  418b0a:	scas   al,BYTE PTR es:[edi]
  418b0b:	mov    esp,0x84f5901d
  418b10:	jp     0x418aec
  418b12:	cs aas 
  418b14:	sbb    ch,BYTE PTR ds:0xda461df9
  418b1a:	and    eax,0x72260099
  418b1f:	sbb    dh,bl
  418b21:	test   eax,0x45392c41
  418b26:	or     DWORD PTR [eax],0xf1e849f9
  418b2c:	mov    ah,0xbc
  418b2e:	dec    esp
  418b2f:	test   DWORD PTR [ecx],eax
  418b31:	sbb    ecx,DWORD PTR [ecx]
  418b33:	mov    esi,0xe5303187
  418b38:	and    eax,0x2839e359
  418b3d:	data16 or BYTE PTR [edi],0xf5
  418b41:	mov    ch,0xa8
  418b43:	add    ebp,DWORD PTR [edx+0x15eee7ce]
  418b49:	jno    0x418b98
  418b4b:	rcr    dl,cl
  418b4d:	xchg   ecx,eax
  418b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b4f:	and    eax,0xeb9d4d65
  418b54:	repz fimul DWORD PTR [edx]
  418b57:	jne    0x418b53
  418b59:	hlt    
  418b5a:	sahf   
  418b5b:	(bad)  
  418b5c:	pop    esp
  418b5d:	mov    edi,0xd93b77da
  418b62:	(bad)  
  418b63:	jmp    DWORD PTR [ebx]
  418b65:	mov    bl,BYTE PTR [ebx+0x10]
  418b68:	push   edx
  418b69:	fnstenv [ebx+0x26f1949f]
  418b6f:	rcr    ebp,1
  418b71:	stos   BYTE PTR es:[edi],al
  418b72:	and    BYTE PTR [edi-0x24b81e6f],dl
  418b78:	jb     0x418b85
  418b7a:	xchg   ecx,eax
  418b7b:	test   DWORD PTR [esp+ebp*1+0x35e38a55],0x293d6d99
  418b86:	push   DWORD PTR [esi]
  418b88:	jbe    0x418b25
  418b8a:	icebp  
  418b8b:	sar    BYTE PTR [edx+0x43],0x6b
  418b8f:	imul   edx,edi,0x4a3a838a
  418b95:	aas    
  418b96:	fxch   st(0)
  418b98:	in     al,dx
  418b99:	and    eax,0xa4da74e6
  418b9e:	(bad)  
  418b9f:	jae    0x418b37
  418ba1:	mov    ch,0x11
  418ba3:	xlat   BYTE PTR ds:[ebx]
  418ba4:	push   ebx
  418ba5:	repz dec edx
  418ba7:	rcl    DWORD PTR [edi-0x3f],cl
  418baa:	mov    cl,0xdd
  418bac:	pop    edx
  418bad:	iret   
  418bae:	test   BYTE PTR [edx+0x69659a6f],cl
  418bb4:	jmp    0x418b86
  418bb6:	sbb    BYTE PTR [edi],bh
  418bb8:	jb     0x418b74
  418bba:	in     al,0x27
  418bbc:	xor    dl,cl
  418bbe:	fst    DWORD PTR [esi+0x1a]
  418bc1:	cwde   
  418bc2:	inc    esi
  418bc3:	mov    esi,0x8c392795
  418bc8:	xor    DWORD PTR [edx],edx
  418bca:	push   ecx
  418bcb:	in     eax,dx
  418bcc:	sbb    ch,BYTE PTR [ebx-0x2f6d699f]
  418bd2:	cmp    BYTE PTR ds:0x3811bd1a,0x86
  418bd9:	lods   eax,DWORD PTR ds:[esi]
  418bda:	sti    
  418bdb:	sub    eax,0x9627f891
  418be0:	sbb    DWORD PTR [ecx],0xffffffcc
  418be3:	(bad)  
  418be4:	mov    BYTE PTR [edx+eiz*1-0x5016e5a3],ch
  418beb:	ss inc eax
  418bed:	aaa    
  418bee:	jle    0x418be9
  418bf0:	fdiv   QWORD PTR [si+0x27ae]
  418bf5:	xchg   esp,eax
  418bf6:	shr    BYTE PTR [ebx],0xdb
  418bf9:	push   ebx
  418bfa:	pop    edi
  418bfb:	dec    edx
  418bfc:	sub    eax,0x6a96bc19
  418c01:	xor    eax,0x4e7a58c1
  418c06:	faddp  st(4),st
  418c08:	and    al,0x34
  418c0a:	mov    BYTE PTR [ecx-0x9],al
  418c0d:	lds    esp,FWORD PTR [eax+0x56]
  418c10:	fcom   QWORD PTR [edi-0x6b]
  418c13:	dec    esp
  418c14:	aam    0x96
  418c16:	ins    DWORD PTR es:[edi],dx
  418c17:	data16 jae 0x418c14
  418c1a:	js     0x418bd0
  418c1c:	sbb    ch,ah
  418c1e:	clc    
  418c1f:	pop    es
  418c20:	adc    esp,ebp
  418c22:	mov    fs,WORD PTR [edi-0x771f2cc1]
  418c28:	into   
  418c29:	fld    DWORD PTR [esi+0x547cf8dc]
  418c2f:	jecxz  0x418c95
  418c31:	inc    ebx
  418c32:	and    bh,BYTE PTR [edi+0x78482a6f]
  418c38:	loop   0x418ca6
  418c3a:	sub    esp,0x5a
  418c3d:	add    dl,BYTE PTR [edx]
  418c3f:	imul   esi,eax,0x990f72e7
  418c45:	cmp    DWORD PTR [eax],ebp
  418c47:	jbe    0x418bdf
  418c49:	dec    DWORD PTR [esi+0x58]
  418c4c:	push   0x28
  418c4e:	mov    esi,0x3dc98b8
  418c53:	imul   ebx,DWORD PTR [edi-0x24],0xe
  418c57:	pop    esp
  418c58:	aad    0xb7
  418c5a:	push   ecx
  418c5b:	jb     0x418bf7
  418c5d:	mov    esi,0x541ae818
  418c62:	inc    esi
  418c63:	sbb    esp,DWORD PTR [eax+0x40]
  418c66:	pop    esi
  418c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c68:	sub    eax,0xd1ce8fd9
  418c6d:	pop    ebp
  418c6e:	pop    ecx
  418c6f:	je     0x418ca9
  418c71:	and    ah,BYTE PTR [ebp+0x47eb6e6a]
  418c77:	dec    ecx
  418c78:	push   ecx
  418c79:	xchg   ebx,eax
  418c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418c7b:	lea    ecx,[edx+0x63]
  418c7e:	mov    dl,0x66
  418c80:	sbb    ebp,DWORD PTR [edx-0xe]
  418c83:	mov    BYTE PTR [edx],bl
  418c85:	ja     0x418cb7
  418c87:	in     eax,0x4f
  418c89:	lea    ebp,[eax+0x40]
  418c8c:	adc    edx,ebx
  418c8e:	scas   eax,DWORD PTR es:[edi]
  418c8f:	je     0x418c26
  418c91:	cmp    eax,0xbf791c03
  418c96:	je     0x418c40
  418c98:	pop    es
  418c99:	fmul   DWORD PTR [ebx+0x3c]
  418c9c:	ret    
  418c9d:	fsub   st,st(6)
  418c9f:	cli    
  418ca0:	xor    al,0x68
  418ca2:	sub    ebp,DWORD PTR [edi+0x132f360a]
  418ca8:	cmc    
  418ca9:	fldcw  WORD PTR [ebx]
  418cab:	in     al,dx
  418cac:	into   
  418cad:	test   al,0xc4
  418caf:	fist   WORD PTR [ebp+0x11f31a48]
  418cb5:	fcom   DWORD PTR [ebx+0x2a]
  418cb8:	xchg   esi,eax
  418cb9:	nop
  418cba:	or     DWORD PTR [edx+0x7b],ebp
  418cbd:	mov    ecx,ebp
  418cbf:	inc    esi
  418cc0:	and    ebx,ebp
  418cc2:	jle    0x418d2a
  418cc4:	mov    bl,0x8c
  418cc6:	dec    ecx
  418cc7:	sbb    ebx,DWORD PTR ds:0xd0f96db0
  418ccd:	inc    ecx
  418cce:	add    DWORD PTR [edx],edx
  418cd0:	hlt    
  418cd1:	mov    eax,0xda02e81c
  418cd6:	xor    eax,DWORD PTR [edx-0x68]
  418cd9:	push   ss
  418cda:	cmp    edx,DWORD PTR [ebp-0x184daab1]
  418ce0:	push   cs
  418ce1:	inc    ebx
  418ce2:	pop    edi
  418ce3:	cwde   
  418ce4:	jne    0x418d45
  418ce6:	dec    eax
  418ce7:	pop    ebp
  418ce8:	sbb    ebx,edx
  418cea:	sbb    ch,cl
  418cec:	mov    ds:0x6ff29769,al
  418cf1:	dec    ecx
  418cf2:	sbb    DWORD PTR [eax],0x878c190e
  418cf8:	xlat   BYTE PTR ds:[ebx]
  418cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cfa:	je     0x418d39
  418cfc:	and    DWORD PTR [edx],0x48
  418cff:	sbb    al,0x55
  418d01:	adc    ecx,DWORD PTR [ebp+0x5d]
  418d04:	mov    eax,ds:0xd9b6d40
  418d09:	cli    
  418d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d0b:	fidiv  DWORD PTR [ebp-0x19]
  418d0e:	call   0x657a859c
  418d13:	push   ebp
  418d14:	inc    ebx
  418d15:	push   0x6c6e5dcf
  418d1a:	cmp    BYTE PTR [esi+edi*2],bl
  418d1d:	fst    DWORD PTR [eax+0x56]
  418d20:	(bad)  
  418d22:	xor    al,dh
  418d24:	cmp    edi,DWORD PTR [eax-0x5a]
  418d27:	cmp    DWORD PTR [ebx-0x37],ecx
  418d2a:	dec    eax
  418d2b:	cwde   
  418d2c:	cmp    eax,0x7d62ba53
  418d31:	loop   0x418d0e
  418d33:	pop    esp
  418d34:	aam    0x58
  418d36:	add    DWORD PTR [ebp+0x45],0xffffffd3
  418d3a:	dec    eax
  418d3b:	mov    DWORD PTR [ebx],ebx
  418d3d:	cwde   
  418d3e:	ficom  DWORD PTR [edi-0x5a]
  418d41:	xchg   DWORD PTR [ecx],esi
  418d43:	call   0x7ba13d32
  418d48:	sub    esi,DWORD PTR [ebp-0x73167cec]
  418d4e:	enter  0x55a6,0xf
  418d52:	add    DWORD PTR [ebp+0x5f],ecx
  418d55:	jge    0x418d9f
  418d57:	dec    edx
  418d58:	cmp    esi,DWORD PTR [eax-0x20]
  418d5b:	stc    
  418d5c:	cmc    
  418d5d:	bound  esi,QWORD PTR [edx-0x7e]
  418d60:	jno    0x418cef
  418d62:	sbb    al,0x27
  418d64:	int    0xd7
  418d66:	push   edx
  418d67:	sahf   
  418d68:	in     eax,dx
  418d69:	in     al,dx
  418d6a:	push   ebp
  418d6b:	pop    esp
  418d6c:	xor    esp,DWORD PTR [esi+0x56]
  418d6f:	data16 aam 0xd9
  418d72:	cmp    al,0x14
  418d74:	(bad)
  418d77:	mov    ds:0xfe95d2e5,eax
  418d7c:	adc    cl,ch
  418d7e:	fs pop esp
  418d80:	xor    eax,0xfda587fc
  418d85:	fdecstp 
  418d87:	pop    ds
  418d88:	pushf  
  418d89:	pop    edi
  418d8a:	or     eax,0x65c8ce0e
  418d8f:	jmp    0xe5da:0xa34f513b
  418d96:	mov    ds:0x1ad981b4,eax
  418d9b:	sbb    DWORD PTR [edx+0x44],eax
  418d9e:	sahf   
  418d9f:	mov    bl,0x2e
  418da1:	sbb    BYTE PTR [ebp-0x1ff5c988],bl
  418da7:	jo     0x418d5f
  418da9:	push   edi
  418daa:	add    DWORD PTR [edx-0x5077474a],esp
  418db0:	outs   dx,BYTE PTR ds:[esi]
  418db1:	out    0xa2,eax
  418db3:	push   ecx
  418db4:	mov    ecx,0x43c50fc6
  418db9:	scas   eax,DWORD PTR es:[edi]
  418dba:	sub    BYTE PTR [ecx-0x6045ccdf],cl
  418dc0:	jnp    0x418d64
  418dc2:	lock mov ebx,0x2338ae18
  418dc8:	fild   WORD PTR [eax]
  418dca:	fbld   TBYTE PTR [esi-0x70]
  418dcd:	loopne 0x418da2
  418dcf:	dec    ecx
  418dd0:	and    eax,0x4f0016f3
  418dd5:	pop    ecx
  418dd6:	mov    al,ds:0x126a79fe
  418ddb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ddc:	lahf   
  418ddd:	push   esp
  418dde:	and    edi,esi
  418de0:	fistp  QWORD PTR [ebx+eax*2+0x6a]
  418de4:	inc    ebp
  418de5:	mov    ds:0xf65f3b26,eax
  418dea:	iret   
  418deb:	jb     0x418d8c
  418ded:	(bad)  
  418dee:	gs pop ss
  418df0:	add    eax,0xf8db48d6
  418df5:	fnstenv [ecx+ebp*2+0x13]
  418df9:	pop    edx
  418dfa:	dec    dx
  418dfc:	in     al,dx
  418dfd:	cmp    al,ah
  418dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e00:	or     al,0x93
  418e02:	dec    eax
  418e03:	lods   al,BYTE PTR ds:[esi]
  418e04:	add    BYTE PTR [esi+eax*1],ch
  418e07:	in     eax,0xf9
  418e09:	out    dx,al
  418e0a:	fsub   DWORD PTR [esi-0x23]
  418e0d:	or     eax,0x691a8771
  418e12:	enter  0x1ea9,0x34
  418e16:	mov    ebp,0xb9535b84
  418e1b:	jmp    0x67e995d8
  418e20:	ds sbb cl,bl
  418e23:	jb     0x418dbd
  418e25:	lods   al,BYTE PTR ds:[esi]
  418e26:	xchg   esi,eax
  418e27:	inc    esi
  418e28:	shl    dh,cl
  418e2a:	sub    BYTE PTR [esi],dh
  418e2c:	sbb    dl,BYTE PTR [ecx-0x33d5037a]
  418e32:	xchg   ecx,eax
  418e33:	dec    ebp
  418e34:	hlt    
  418e35:	(bad)  
  418e37:	pusha  
  418e38:	and    al,0x29
  418e3a:	mov    ebp,0x7037b4a2
  418e3f:	and    ebx,DWORD PTR [edx]
  418e41:	sar    DWORD PTR [ecx+0x3d6b82d5],1
  418e47:	call   0x7093:0xfb5ade8f
  418e4e:	sti    
  418e4f:	in     al,0x1
  418e51:	fisttp QWORD PTR [edi+0x58951a26]
  418e57:	fprem  
  418e59:	jmp    0xbdb6:0xd97b49db
  418e60:	mov    ebx,0x6c24d3f4
  418e65:	pop    ebx
  418e66:	into   
  418e67:	dec    BYTE PTR [eax+edi*1]
  418e6a:	dec    eax
  418e6b:	pop    ebx
  418e6c:	inc    eax
  418e6d:	jl     0x418e63
  418e6f:	cmp    DWORD PTR [ecx],edi
  418e71:	inc    eax
  418e72:	add    ah,BYTE PTR [edi-0x7]
  418e75:	(bad)  
  418e76:	in     eax,dx
  418e77:	mov    al,0x2
  418e79:	pop    esp
  418e7a:	ficomp WORD PTR [edx+ecx*4-0x7b]
  418e7e:	push   esi
  418e7f:	add    esp,esi
  418e81:	jp     0x418eae
  418e83:	out    0xd5,eax
  418e85:	fisubr DWORD PTR [edi+edi*1+0x32dac822]
  418e8c:	daa    
  418e8d:	(bad)  
  418e8f:	icebp  
  418e90:	fisub  WORD PTR ss:[eiz*1-0x4d075bc5]
  418e98:	fisubr WORD PTR [eax-0x40]
  418e9b:	es mov dl,0x82
  418e9e:	or     DWORD PTR [edx+0x16e94a11],0xefe5b31a
  418ea8:	mov    eax,ds:0xe06535ef
  418ead:	fst    DWORD PTR [ecx+0x17]
  418eb0:	in     eax,dx
  418eb1:	daa    
  418eb2:	mov    cs,WORD PTR [esp+edx*1-0x74]
  418eb6:	out    dx,al
  418eb7:	icebp  
  418eb8:	ss or  al,0x48
  418ebb:	jnp    0x418ec7
  418ebd:	int3   
  418ebe:	rcl    dh,0xf
  418ec1:	imul   eax,DWORD PTR [esi],0x67
  418ec4:	mov    eax,0x1a9b1079
  418ec9:	inc    esp
  418eca:	je     0x418f0a
  418ecc:	dec    ebx
  418ecd:	pop    esp
  418ece:	outs   dx,BYTE PTR ds:[esi]
  418ecf:	cld    
  418ed0:	jb     0x418eab
  418ed2:	lock push ss
  418ed4:	cmp    al,0xa8
  418ed6:	fist   DWORD PTR [edx]
  418ed8:	sbb    esi,DWORD PTR [edx]
  418eda:	in     eax,dx
  418edb:	cmp    edx,0x916a4fac
  418ee1:	icebp  
  418ee2:	or     esi,edx
  418ee4:	and    al,0x57
  418ee6:	cwde   
  418ee7:	or     al,bh
  418ee9:	mov    ebp,0x4c7d6654
  418eee:	std    
  418eef:	int3   
  418ef0:	sbb    eax,0x2979109d
  418ef5:	pop    ebp
  418ef6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ef7:	jmp    0x1f1acd4c
  418efc:	arpl   cx,cx
  418efe:	das    
  418eff:	jb     0x418ea2
  418f01:	sub    ebx,DWORD PTR [ecx]
  418f03:	push   esp
  418f04:	fld    TBYTE PTR [edi-0x5]
  418f07:	neg    BYTE PTR [edx]
  418f09:	int    0x13
  418f0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418f0c:	add    BYTE PTR [edx+ebx*1],dl
  418f0f:	clc    
  418f10:	mov    eax,ds:0x79f046d9
  418f15:	push   eax
  418f16:	in     eax,dx
  418f17:	ror    DWORD PTR [edi],1
  418f19:	pusha  
  418f1a:	repnz mov ebx,ds
  418f1d:	pop    ebx
  418f1e:	dec    ebx
  418f1f:	enter  0xd1a6,0x5e
  418f23:	pop    ss
  418f24:	mov    eax,0x6a22d6d9
  418f29:	push   edi
  418f2a:	xor    BYTE PTR [edi+0x49],bh
  418f2d:	rol    BYTE PTR [esi-0x5c26bf1a],1
  418f33:	and    esi,esp
  418f35:	jb     0x418ef8
  418f37:	test   al,0x2a
  418f39:	fnstcw WORD PTR [edx]
  418f3b:	mov    bl,dl
  418f3d:	imul   edx,DWORD PTR [edx+0x6153b238],0x4b196c9e
  418f47:	mov    bl,0x45
  418f49:	mov    ebp,ebx
  418f4b:	dec    esp
  418f4c:	pop    ds
  418f4d:	fdivrp st(5),st
  418f4f:	mov    al,ds:0xd0afedca
  418f54:	mov    ch,0xc8
  418f56:	(bad)  
  418f58:	sbb    cl,BYTE PTR [ecx+edi*1]
  418f5b:	jg     0x418f3d
  418f5d:	sbb    ebp,DWORD PTR [edx+0x1f]
  418f60:	sub    ebx,ecx
  418f62:	test   BYTE PTR [edi-0x22b1880a],ah
  418f68:	jae    0x418efd
  418f6a:	cmp    DWORD PTR [ecx+edi*1],0xffffffe9
  418f6e:	sar    DWORD PTR [edx+0x45887c5a],0x36
  418f75:	or     eax,0x6d610014
  418f7a:	fsub   DWORD PTR [edi+0x56]
  418f7d:	shr    BYTE PTR [ecx+ecx*2-0x26],1
  418f81:	stos   BYTE PTR es:[edi],al
  418f82:	mov    esi,es
  418f84:	mov    ebx,0x1a854d7c
  418f89:	pop    ecx
  418f8a:	and    eax,0x43342068
  418f8f:	mov    edx,0x6653d3c4
  418f94:	clc    
  418f95:	adc    ch,bl
  418f97:	mov    esi,0x7aa5131a
  418f9c:	jmp    0x418fbe
  418f9e:	push   esp
  418f9f:	sbb    DWORD PTR [edx-0x7f589a27],ebp
  418fa5:	fcom   DWORD PTR [esi-0x14]
  418fa8:	gs daa 
  418faa:	loopne 0x418f81
  418fac:	adc    BYTE PTR [esi],dl
  418fae:	dec    eax
  418faf:	shl    DWORD PTR [ebp+0x3fdf9d1],1
  418fb5:	daa    
  418fb6:	frstor [esi+0x2d]
  418fb9:	mov    edx,0xc31aeaab
  418fbe:	add    eax,0x4b5ce144
  418fc3:	xchg   esp,eax
  418fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc5:	fst    DWORD PTR [ecx+0x1d]
  418fc8:	mov    dh,0xd
  418fca:	mov    WORD PTR cs:[esi-0x21],ds
  418fce:	pop    ds
  418fcf:	dec    esi
  418fd0:	adc    BYTE PTR [ebp+0x48],cl
  418fd3:	sub    ebx,DWORD PTR [ecx]
  418fd5:	dec    eax
  418fd6:	in     eax,0xca
  418fd8:	in     al,dx
  418fd9:	popf   
  418fda:	cmp    BYTE PTR [edx-0x10],ch
  418fdd:	in     eax,dx
  418fde:	(bad)  
  418fdf:	mul    BYTE PTR [eax-0x4e20819]
  418fe5:	in     eax,0x47
  418fe7:	mov    ah,0xe4
  418fe9:	and    bl,ch
  418feb:	rcl    dh,cl
  418fed:	aad    0x11
  418fef:	sub    ebp,DWORD PTR [bx+di+0x7027]
  418ff4:	sbb    bh,BYTE PTR [esi+0x21]
  418ff7:	pop    ds
  418ff8:	in     eax,dx
  418ff9:	cmp    cl,BYTE PTR [ecx+0x38d9296a]
  418fff:	daa    
  419000:	cmp    dh,BYTE PTR [ecx+0x47dc0a3c]
  419006:	xor    ebx,eax
  419008:	dec    eax
  419009:	jecxz  0x419052
  41900b:	lods   al,BYTE PTR ds:[esi]
  41900c:	stc    
  41900d:	jb     0x418ffc
  41900f:	out    0x68,al
  419011:	or     BYTE PTR [edi],bh
  419013:	or     DWORD PTR [eax],0x1e
  419016:	cli    
  419017:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419018:	push   edi
  419019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41901a:	mov    ebp,0xc975fef3
  419020:	fwait
  419021:	pop    edi
  419022:	and    DWORD PTR [esi-0x7d],0xffffff99
  419026:	jne    0x41903d
  419028:	fiadd  WORD PTR [ecx+0x40926686]
  41902e:	push   edx
  41902f:	ins    DWORD PTR es:[edi],dx
  419030:	sbb    ch,BYTE PTR [ecx+0x69e3e55b]
  419036:	aas    
  419037:	cli    
  419038:	jp     0x419013
  41903a:	cmp    edi,ebp
  41903c:	cmp    cl,dh
  41903e:	mov    ss,WORD PTR [edi]
  419040:	(bad)  
  419042:	push   ebx
  419043:	sbb    al,0x60
  419045:	pusha  
  419046:	cmp    DWORD PTR [eax],0x72
  419049:	cs cs ss mov ecx,0xe83181e
  419051:	jno    0x419074
  419053:	addr16 mov al,ds:0x5468
  419057:	and    ch,BYTE PTR [eax]
  419059:	or     eax,0x99da20d6
  41905e:	xor    ch,bl
  419060:	mov    BYTE PTR [ebx+0x36],cl
  419063:	fdiv   QWORD PTR [ebx-0x56]
  419066:	call   0x1a2a:0xc698c166
  41906d:	fdiv   QWORD PTR [esi]
  41906f:	lock xor ch,BYTE PTR [ebp-0x212f8952]
  419076:	jmp    0x89bbb99
  41907b:	pop    esp
  41907c:	aaa    
  41907d:	sbb    bh,BYTE PTR [ecx+0x26]
  419080:	sbb    eax,0xd698a5d3
  419085:	inc    eax
  419086:	nop
  419087:	je     0x419105
  419089:	aas    
  41908a:	in     al,dx
  41908b:	(bad)  
  41908c:	mov    ecx,0x63667059
  419091:	mov    ch,0x7f
  419093:	push   es
  419094:	sbb    dh,BYTE PTR [esi+0x74e0526d]
  41909a:	outs   dx,BYTE PTR ds:[esi]
  41909b:	stos   BYTE PTR es:[edi],al
  41909c:	fcmovu st,st(1)
  41909e:	sub    al,0xb8
  4190a0:	repnz leave 
  4190a2:	mov    bl,0x3c
  4190a4:	ret    0xda3f
  4190a7:	cmp    bl,BYTE PTR [edx]
  4190a9:	test   eax,0x211d2fbb
  4190ae:	call   0xdb74:0x3fd977a9
  4190b5:	dec    edi
  4190b6:	data16 jg 0x419061
  4190b9:	sub    eax,0x1cd78bbd
  4190be:	pop    edx
  4190bf:	sub    al,0xee
  4190c1:	fiadd  WORD PTR [edi+0x29]
  4190c4:	mov    ebp,0x80ea23d9
  4190c9:	add    ebx,DWORD PTR [esi]
  4190cb:	pop    ss
  4190cc:	push   cs
  4190cd:	(bad)  
  4190ce:	loop   0x419099
  4190d0:	fdiv   DWORD PTR [ebx]
  4190d2:	dec    ebx
  4190d3:	stos   DWORD PTR es:[edi],eax
  4190d4:	mov    ecx,ecx
  4190d6:	push   edx
  4190d7:	xchg   edx,eax
  4190d8:	pusha  
  4190d9:	push   esp
  4190da:	fxch   st(6)
  4190dc:	fist   WORD PTR [ebp+edx*8-0x37ee0c60]
  4190e3:	add    edx,DWORD PTR [ebx]
  4190e5:	sub    al,0x6a
  4190e7:	rcr    BYTE PTR [esi-0x24],cl
  4190ea:	inc    edi
  4190eb:	xor    DWORD PTR [eax+0x1e],edi
  4190ee:	jmp    0x419085
  4190f0:	push   edi
  4190f1:	fld    DWORD PTR [ecx]
  4190f3:	xlat   BYTE PTR ds:[ebx]
  4190f4:	into   
  4190f5:	in     al,dx
  4190f6:	jecxz  0x4190a6
  4190f8:	jo     0x419128
  4190fa:	cli    
  4190fb:	ss sti 
  4190fd:	mov    ebx,0x4b695948
  419102:	les    edi,FWORD PTR [edx]
  419104:	pop    ds
  419105:	in     eax,dx
  419106:	xlat   BYTE PTR ds:[ebx]
  419107:	imul   ecx,ecx,0x3b90ad51
  41910d:	imul   ecx,DWORD PTR [eax-0x7c],0x31
  419111:	add    al,BYTE PTR [ecx+0x133c1efc]
  419117:	jbe    0x4190f0
  419119:	xor    eax,0x6c8faa4b
  41911e:	push   edx
  41911f:	push   dx
  419121:	and    bl,BYTE PTR [ecx+0x4b]
  419124:	nop
  419125:	mov    cl,0x49
  419127:	lods   al,BYTE PTR ds:[esi]
  419128:	add    eax,0x11b3f5fe
  41912d:	in     eax,dx
  41912e:	cmp    esi,DWORD PTR [esi]
  419130:	and    bl,cl
  419132:	mov    ch,0x1f
  419134:	cld    
  419135:	xchg   ebp,eax
  419136:	outs   dx,DWORD PTR ds:[esi]
  419137:	jo     0x419144
  419139:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41913a:	add    BYTE PTR [ebx+esi*2-0x5d],0x36
  41913f:	xchg   DWORD PTR ds:0x44c8486c,esi
  419145:	push   edi
  419146:	mov    DWORD PTR gs:[esi-0x3e],edi
  41914a:	stc    
  41914b:	bound  si,DWORD PTR [eax+0x3330baf0]
  419152:	xor    bh,BYTE PTR [esi+0x29]
  419155:	jno    0x4190f2
  419157:	jg     0x419125
  419159:	std    
  41915a:	in     al,0x6
  41915c:	leave  
  41915d:	loopne 0x4190e0
  41915f:	sbb    eax,0x16a0a0f4
  419164:	stc    
  419165:	lods   al,BYTE PTR ds:[esi]
  419166:	mov    edi,0xd02e2116
  41916b:	sub    eax,DWORD PTR [ebp-0x7d]
  41916e:	dec    esi
  41916f:	pop    ds
  419170:	fimul  DWORD PTR [edx-0x13]
  419173:	stos   DWORD PTR es:[edi],eax
  419174:	out    0xd9,eax
  419176:	xchg   edx,eax
  419177:	xchg   edx,eax
  419178:	(bad)  
  419179:	lds    ebx,FWORD PTR [esi+edi*4-0x7fdd2356]
  419180:	inc    edx
  419181:	adc    al,0x65
  419183:	shr    BYTE PTR [ebp-0x61],1
  419186:	dec    ebp
  419187:	xor    bh,BYTE PTR [edi+0x5677088c]
  41918d:	jnp    0x419147
  41918f:	imul   esp,DWORD PTR [eax-0x2d859954],0x39de49a6
  419199:	(bad)  
  41919a:	(bad)  
  41919b:	mov    ah,0x66
  41919d:	(bad)  [edi]
  41919f:	cli    
  4191a0:	imul   DWORD PTR [ebp+0x14418a8d]
  4191a6:	mov    al,0x15
  4191a8:	sbb    bh,BYTE PTR [ecx-0x28]
  4191ab:	cdq    
  4191ac:	mov    ds:0x7933f20f,eax
  4191b1:	sbb    BYTE PTR [eax+0x76322187],cl
  4191b7:	sahf   
  4191b8:	das    
  4191b9:	jns    0x4191eb
  4191bb:	mov    bl,0x5
  4191bd:	cmp    al,0x86
  4191bf:	pop    ds
  4191c0:	xchg   ebx,eax
  4191c1:	stos   DWORD PTR es:[edi],eax
  4191c2:	dec    eax
  4191c3:	jecxz  0x419159
  4191c5:	jp     0x4191f6
  4191c7:	add    dl,BYTE PTR [esp+edx*2+0x38]
  4191cb:	or     ebx,DWORD PTR [bx-0x7c]
  4191cf:	inc    esp
  4191d0:	sbb    bl,bl
  4191d2:	xor    DWORD PTR [esi-0x66],esp
  4191d5:	mov    ebx,0x146bdd94
  4191da:	push   ss
  4191db:	and    ebx,DWORD PTR [edx]
  4191dd:	mul    DWORD PTR [edx+0x32]
  4191e0:	cli    
  4191e1:	inc    esp
  4191e2:	push   ebp
  4191e3:	jge    0x4191ff
  4191e5:	sbb    DWORD PTR [edi+0x1a3574b6],ebx
  4191eb:	sbb    al,0x6e
  4191ed:	(bad)  [edx+0x10b00ad8]
  4191f3:	dec    esi
  4191f4:	imul   edi,esp,0xffffffa2
  4191f7:	xor    al,0x3c
  4191f9:	js     0x419243
  4191fb:	sbb    al,0xb7
  4191fd:	aad    0xcf
  4191ff:	leave  
  419200:	enter  0x881d,0x66
  419204:	es push ebp
  419206:	imul   edi,DWORD PTR [ebx+0x21],0xd10dac92
  41920d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41920e:	cmp    eax,0xe8a82a09
  419213:	test   BYTE PTR [edx-0xc],ah
  419216:	inc    eax
  419217:	addr16 mov eax,ecx
  41921a:	ja     0x419241
  41921c:	adc    al,0xca
  41921e:	aas    
  41921f:	and    ah,ch
  419221:	sbb    ah,BYTE PTR [esi-0x2d]
  419224:	xchg   ebp,eax
  419225:	stos   DWORD PTR es:[edi],eax
  419226:	mov    cl,bh
  419228:	push   ecx
  419229:	fld    DWORD PTR ds:0x9f031d71
  41922f:	shl    DWORD PTR [eax+eax*1-0x5f2d75a4],0xc7
  419237:	adc    edi,DWORD PTR cs:[ebx]
  41923a:	dec    eax
  41923b:	xor    ecx,edx
  41923d:	jp     0x419253
  41923f:	fisub  WORD PTR [esi-0x4b994256]
  419245:	cmp    eax,0xd5ca8ced
  41924a:	mov    bh,0xcc
  41924c:	jbe    0x41920a
  41924e:	dec    edi
  41924f:	inc    ecx
  419250:	mov    edx,0xa80f4a2f
  419255:	fptan  
  419257:	aas    
  419258:	adc    edi,edx
  41925a:	xchg   ecx,eax
  41925b:	lds    ecx,FWORD PTR [ebp+eiz*4-0xb9722e6]
  419262:	inc    edi
  419263:	rcr    ah,cl
  419265:	sbb    BYTE PTR [ebp+0x60],0x93
  419269:	or     eax,0x66
  41926c:	dec    ebx
  41926d:	(bad)  [esi-0x12]
  419270:	sbb    bl,BYTE PTR [ecx]
  419272:	out    dx,al
  419273:	mov    bh,0xe2
  419275:	jmp    0xd9a063fe
  41927a:	out    dx,al
  41927b:	mov    DWORD PTR [esi+0x52],esi
  41927e:	jo     0x4192a7
  419280:	xlat   BYTE PTR ds:[ebx]
  419281:	mov    WORD PTR [ebp+0x4883a786],?
  419287:	ss mov dl,0x23
  41928a:	rcr    DWORD PTR [ecx+0x45],cl
  41928d:	add    eax,0xb9e26d8a
  419292:	push   cs
  419293:	stos   BYTE PTR es:[edi],al
  419294:	inc    ebx
  419295:	push   cs
  419296:	xchg   esi,eax
  419297:	fisub  WORD PTR [esi]
  419299:	mov    edx,0xe5be8bbb
  41929e:	bound  ebx,QWORD PTR [ebx]
  4192a0:	shr    BYTE PTR [esi+0xf],1
  4192a3:	jnp    0x4192bf
  4192a5:	and    al,0x7
  4192a7:	or     ebx,eax
  4192a9:	into   
  4192aa:	xor    DWORD PTR [esi-0x68ec11e6],ebx
  4192b0:	xor    eax,0xf9192c45
  4192b5:	mul    BYTE PTR ds:0x85a8764
  4192bb:	in     eax,0xb8
  4192bd:	loopne 0x419294
  4192bf:	fidiv  WORD PTR [ebx+0x59]
  4192c2:	leave  
  4192c3:	(bad)  
  4192c4:	fs retf 
  4192c6:	shl    dl,cl
  4192c8:	push   edx
  4192c9:	fchs   
  4192cb:	gs xor ebx,esi
  4192ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192cf:	dec    ebp
  4192d0:	out    0xf1,al
  4192d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192d3:	pop    ecx
  4192d4:	cmp    edi,DWORD PTR [eax+ecx*2]
  4192d7:	das    
  4192d8:	je     0x419331
  4192da:	dec    esp
  4192db:	cmc    
  4192dc:	xchg   DWORD PTR [edx+ebx*2],edx
  4192df:	data16 loopne 0x419271
  4192e2:	push   eax
  4192e3:	fadd   QWORD PTR [edx]
  4192e5:	out    dx,eax
  4192e6:	mov    edx,0x48cfe5a6
  4192eb:	add    ecx,DWORD PTR [ecx]
  4192ed:	cwde   
  4192ee:	xchg   DWORD PTR [eax],ebp
  4192f0:	aam    0x14
  4192f2:	dec    ebp
  4192f3:	fs xchg bp,ax
  4192f6:	xchg   ebp,eax
  4192f7:	push   ebx
  4192f8:	push   ebp
  4192f9:	xlat   BYTE PTR ds:[ebx]
  4192fa:	jp     0x4192ce
  4192fc:	xchg   edi,eax
  4192fd:	mov    eax,ds:0x8c17e6c3
  419302:	jno    0x41935c
  419304:	mov    ds:0xc567e3f9,eax
  419309:	cmp    al,0xe2
  41930b:	aaa    
  41930c:	sub    ebp,DWORD PTR ss:[edx-0x3a]
  419310:	ror    BYTE PTR es:[ecx+0x40],cl
  419314:	sbb    DWORD PTR [esi-0x2683d943],0x1f
  41931b:	clc    
  41931c:	mov    al,0xa3
  41931e:	imul   ecx,DWORD PTR [edx-0x2f],0x1b
  419322:	add    DWORD PTR [edi],edi
  419324:	or     dh,BYTE PTR [ebx]
  419326:	dec    eax
  419327:	cmc    
  419328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419329:	sbb    cl,BYTE PTR [eax-0x7fb38696]
  41932f:	addr16 aad 0x63
  419332:	pop    ebp
  419333:	adc    eax,0x330de496
  419338:	ins    DWORD PTR es:[edi],dx
  419339:	popf   
  41933a:	dec    eax
  41933b:	mov    bh,ch
  41933d:	subps  xmm0,XMMWORD PTR [esi+0x673b4e36]
  419344:	and    DWORD PTR [edx-0x72e5c7b2],eax
  41934a:	mov    ds:0xdda4343c,eax
  41934f:	xor    eax,0x74e7d962
  419354:	sub    ah,BYTE PTR [ebx-0x6a55a6ff]
  41935a:	pop    ebx
  41935b:	adc    DWORD PTR [ecx-0x33feb7e3],eax
  419361:	pop    edx
  419362:	xlat   BYTE PTR ds:[ebx]
  419363:	push   edi
  419364:	sub    BYTE PTR es:[ebx+0x7258a69],0xd1
  41936c:	repz into 
  41936e:	lock icebp 
  419370:	scas   eax,DWORD PTR es:[edi]
  419371:	pusha  
  419372:	dec    eax
  419373:	fisubr WORD PTR [edx*4+0xbe07486]
  41937a:	aad    0x67
  41937c:	data16 add al,0x7e
  41937f:	repnz adc edx,edx
  419382:	fbld   TBYTE PTR [esi]
  419384:	fild   DWORD PTR [edx]
  419386:	dec    eax
  419387:	out    0xe6,eax
  419389:	jl     0x41938c
  41938b:	leave  
  41938c:	inc    esi
  41938d:	mov    bl,0xcb
  41938f:	data16 xor BYTE PTR [ebx-0x11e45c6f],bl
  419396:	and    BYTE PTR [esi+0x34],bh
  419399:	mov    ah,0x1f
  41939b:	push   eax
  41939c:	cmp    al,BYTE PTR [esi]
  41939e:	pop    ecx
  41939f:	jmp    0x4193ca
  4193a1:	loop   0x41941a
  4193a3:	data16 hlt 
  4193a5:	xchg   edx,eax
  4193a6:	adc    al,0xef
  4193a8:	sub    esi,ebx
  4193aa:	std    
  4193ab:	jmp    0x5016:0x9080998d
  4193b2:	in     al,0x29
  4193b4:	inc    eax
  4193b5:	fldcw  WORD PTR [ecx]
  4193b7:	pop    edi
  4193b8:	mov    al,0x12
  4193ba:	(bad)  
  4193bb:	stos   BYTE PTR es:[edi],al
  4193bc:	in     eax,dx
  4193bd:	dec    edx
  4193be:	call   0x47d6:0x4880a21e
  4193c5:	push   ds
  4193c6:	dec    ebp
  4193c7:	mov    esp,0x66917dd0
  4193cc:	mov    eax,0xaf8a8e4
  4193d1:	lahf   
  4193d2:	sub    al,0xcb
  4193d4:	ss inc ebx
  4193d6:	je     0x419407
  4193d8:	and    DWORD PTR [esi-0x2a3d42aa],esi
  4193de:	test   esi,esp
  4193e0:	mov    esi,0x496cdf9
  4193e5:	mov    ds:0x258766f8,al
  4193ea:	loopne 0x4193cf
  4193ec:	xchg   esp,eax
  4193ed:	rcl    BYTE PTR [ebp+0x48451fcf],1
  4193f3:	inc    ecx
  4193f5:	ret    0x37d0
  4193f8:	fstp   st(2)
  4193fa:	and    ch,bl
  4193fc:	test   BYTE PTR [ebp-0x42dbba20],dl
  419402:	sbb    ebx,DWORD PTR [edx-0x71a6a9db]
  419408:	or     bl,BYTE PTR [ebx+0x1f]
  41940b:	pop    ebx
  41940c:	mov    ah,0x5f
  41940e:	pop    ebx
  41940f:	push   cs
  419410:	ss iret 
  419412:	js     0x41947f
  419414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419415:	(bad)  
  419416:	aad    0x75
  419418:	sbb    cl,BYTE PTR [ebx]
  41941a:	sbb    eax,0x8f812d7
  41941f:	adc    DWORD PTR [eax+0x18cb7614],edi
  419425:	mov    eax,ds:0xd0d9d52
  41942a:	dec    eax
  41942b:	int    0x58
  41942d:	fst    DWORD PTR [esp+edx*1]
  419430:	repnz mov BYTE PTR [eax-0x6a6db0d3],bh
  419437:	xchg   esi,eax
  419438:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419439:	fst    DWORD PTR [ebx+0x59354d3f]
  41943f:	nop
  419440:	pushf  
  419441:	int    0xf1
  419443:	add    al,BYTE PTR [edi]
  419445:	xor    esp,edi
  419447:	enterw 0x199a,0xa2
  41944c:	sbb    bh,BYTE PTR [edi]
  41944e:	xchg   ecx,eax
  41944f:	loope  0x419414
  419451:	mov    edx,0xd9f0f5a3
  419456:	pop    edx
  419457:	retf   0x24bc
  41945a:	fild   QWORD PTR [edx-0x3f89e531]
  419460:	or     ecx,ebp
  419462:	pop    esi
  419463:	adc    bl,BYTE PTR [edx+0x7d]
  419466:	mov    BYTE PTR [esi-0x52],bh
  419469:	not    DWORD PTR [edi+eiz*8-0x177c0efa]
  419470:	dec    edi
  419471:	or     al,0xb0
  419473:	cmp    sp,WORD PTR [eax-0x406f8bf6]
  41947a:	xor    BYTE PTR [ebx],ah
  41947c:	out    0xfd,eax
  41947e:	inc    edi
  41947f:	push   ecx
  419480:	hlt    
  419481:	inc    ebp
  419482:	cmc    
  419483:	dec    esi
  419484:	pop    ebp
  419485:	shl    dh,cl
  419487:	mov    esi,0xc648974e
  41948c:	xor    DWORD PTR [edx+0x40],ebp
  41948f:	xor    ch,BYTE PTR [eax]
  419491:	mov    eax,eax
  419493:	sbb    al,dl
  419495:	cmp    DWORD PTR [edi+0x2c],ebp
  419498:	(bad)  
  419499:	mov    dl,0x7a
  41949b:	adc    DWORD PTR [esi-0x58a4a2b],ecx
  4194a1:	xlat   BYTE PTR ds:[ebx]
  4194a2:	xor    DWORD PTR [ebp+0x2d],edi
  4194a5:	jo     0x419500
  4194a7:	add    eax,0x2ef8221a
  4194ac:	cli    
  4194ad:	jmp    DWORD PTR [eax-0x72260476]
  4194b3:	pop    es
  4194b4:	cmp    DWORD PTR [esp+eax*1+0x71f58920],0x480684e8
  4194bf:	jne    0x41948d
  4194c1:	mov    al,0xad
  4194c3:	cmp    DWORD PTR [edi],esp
  4194c5:	push   esi
  4194c6:	ret    0x9a74
  4194c9:	fiadd  DWORD PTR ds:0x4edd1c6f
  4194cf:	stos   BYTE PTR es:[edi],al
  4194d0:	jecxz  0x4194ab
  4194d2:	or     esi,0x4ad0ed98
  4194d8:	adc    al,0xdb
  4194da:	inc    ebp
  4194db:	into   
  4194dc:	push   es
  4194dd:	jmp    0x99bf:0xf9ff5fb9
  4194e4:	sbb    bl,BYTE PTR [ebx]
  4194e6:	mov    dl,0x33
  4194e8:	mov    ah,0x79
  4194ea:	xor    BYTE PTR ds:0xaa7ed9a7,ah
  4194f0:	jge    0x4194b2
  4194f2:	add    eax,0xa6e1fdc
  4194f7:	int    0x8e
  4194f9:	in     eax,dx
  4194fa:	inc    edi
  4194fb:	sub    ecx,esi
  4194fd:	nop
  4194fe:	push   ss
  4194ff:	inc    DWORD PTR [esp+eiz*4]
  419502:	inc    ebp
  419503:	addr16 xchg edx,eax
  419505:	fnstsw WORD PTR [ebp-0x3b]
  419508:	jbe    0x419536
  41950a:	dec    edi
  41950b:	add    ah,BYTE PTR [edi]
  41950d:	and    al,0x18
  41950f:	mov    bh,0xd8
  419511:	hlt    
  419512:	inc    edi
  419513:	out    0xd5,eax
  419515:	aam    0xd8
  419517:	jnp    0x4194a8
  419519:	push   esp
  41951a:	push   0x66
  41951c:	pop    ds
  41951d:	jmp    0x6b5c09dc
  419522:	push   ecx
  419523:	popf   
  419524:	xor    BYTE PTR [ecx],al
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	out    dx,eax
  419528:	ins    BYTE PTR es:[edi],dx
  419529:	fldcw  WORD PTR [eax-0x4aae77e2]
  41952f:	mov    ecx,edx
  419531:	sbb    al,0x9
  419533:	push   ebp
  419534:	ret    
  419535:	test   DWORD PTR [esi+0x43],edx
  419538:	inc    ebp
  419539:	mov    bl,0x7b
  41953b:	es popf 
  41953d:	fldcw  WORD PTR [ebp-0x2]
  419540:	pop    esi
  419541:	sahf   
  419542:	popa   
  419543:	bound  edx,QWORD PTR [edi+0x69]
  419546:	and    ecx,edi
  419548:	sbb    dh,BYTE PTR [ebx+0x38]
  41954b:	lds    edx,FWORD PTR [ecx+0x2b]
  41954e:	inc    eax
  41954f:	ss fcomp st(4)
  419552:	sbb    BYTE PTR cs:[edx+0x5d],ch
  419556:	(bad)  
  419557:	fst    QWORD PTR [edx]
  419559:	fbld   TBYTE PTR [edx+ebx*2+0x29]
  41955d:	ja     0x41956d
  41955f:	js     0x41953e
  419561:	mov    esp,0xa4f46109
  419566:	mov    ds:0x261bb0a9,eax
  41956b:	pop    ss
  41956c:	rcr    DWORD PTR [ebp+0x2a49a541],0x48
  419573:	(bad)  
  419574:	mov    ah,0x5
  419576:	aaa    
  419577:	mov    ecx,0x294a10bf
  41957c:	jne    0x419517
  41957e:	std    
  41957f:	mov    eax,ds:0xbb47d971
  419584:	jo     0x4195d1
  419586:	test   DWORD PTR ds:0x627388de,ebp
  41958c:	cdq    
  41958d:	sub    eax,0xadcdb48
  419592:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419593:	dec    esi
  419594:	scas   al,BYTE PTR es:[edi]
  419595:	push   esi
  419596:	shl    BYTE PTR [esi-0x4a],1
  419599:	sbb    bh,BYTE PTR [eax]
  41959b:	repz sbb ebx,DWORD PTR [ebx]
  41959e:	pop    ss
  41959f:	push   esp
  4195a0:	and    BYTE PTR [edx+ecx*2-0x35],dh
  4195a4:	dec    edx
  4195a5:	push   ss
  4195a6:	cs adc edi,eax
  4195a9:	inc    ebx
  4195ab:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  4195ad:	sub    BYTE PTR [edx],bl
  4195af:	lods   al,BYTE PTR ds:[esi]
  4195b0:	adc    al,0x8f
  4195b2:	inc    edx
  4195b3:	xlat   BYTE PTR ds:[ebx]
  4195b4:	add    DWORD PTR [edx+ecx*2],ebp
  4195b7:	inc    ebp
  4195b8:	aas    
  4195b9:	sbb    DWORD PTR [ebx-0x4a],ebp
  4195bc:	adc    dh,dh
  4195be:	fdivr  QWORD PTR [ebx]
  4195c0:	ficomp DWORD PTR [ecx-0xeb1f77f]
  4195c6:	shr    bh,cl
  4195c8:	sbb    dh,BYTE PTR [ecx+ebx*1-0x30e818bd]
  4195cf:	out    dx,al
  4195d0:	(bad)  
  4195d1:	cmc    
  4195d2:	mov    ss,WORD PTR [edx+0x96a993a]
  4195d8:	sbb    al,0xa
  4195da:	and    eax,0x78b01d15
  4195df:	sub    dl,bl
  4195e1:	jmp    0x2adc367f
  4195e6:	cwde   
  4195e7:	in     eax,dx
  4195e8:	mov    esp,0x7b9ba4da
  4195ed:	stc    
  4195ee:	push   ecx
  4195ef:	adc    ah,ah
  4195f1:	mov    ecx,0xc58c195b
  4195f6:	lea    ecx,[esi+0x3247ee0a]
  4195fc:	pop    ecx
  4195fd:	xor    eax,0xdb062d98
  419602:	bound  eax,QWORD PTR [edi-0x62]
  419605:	lods   eax,DWORD PTR ds:[esi]
  419606:	and    DWORD PTR [esi+0x62],0xffffff83
  41960a:	fsub   DWORD PTR [ebx+0x40]
  41960d:	dec    ebp
  41960e:	pop    esi
  41960f:	mov    ch,0x9c
  419611:	arpl   dx,cx
  419613:	mov    ecx,0x4feb3a2f
  419618:	or     ah,BYTE PTR [ebx]
  41961a:	cs clc 
  41961c:	mov    ch,0x73
  41961e:	fdiv   DWORD PTR [ebp-0x46]
  419621:	mov    bl,0xe0
  419623:	push   cs
  419624:	icebp  
  419625:	inc    esp
  419626:	inc    esp
  419627:	into   
  419628:	xor    DWORD PTR [eax],ebx
  41962a:	dec    eax
  41962b:	pop    edx
  41962c:	ret    
  41962d:	xchg   esp,eax
  41962e:	das    
  41962f:	(bad)  
  419630:	pop    edx
  419631:	sahf   
  419632:	jmp    DWORD PTR [esi+0x19]
  419635:	stos   BYTE PTR es:[edi],al
  419636:	sbb    eax,0x934c1b2f
  41963b:	jo     0x4195db
  41963d:	ror    DWORD PTR [edi],1
  41963f:	xchg   esp,eax
  419640:	fdivrp st(4),st
  419642:	nop
  419643:	push   eax
  419644:	mov    DWORD PTR [edi+0x617066c6],0x7625f3ef
  41964e:	std    
  41964f:	mov    ds:0xb4a2e030,al
  419654:	mov    ebp,0x12b98413
  419659:	repz das 
  41965b:	pop    es
  41965c:	repz test BYTE PTR [ecx-0x78a42a7c],bh
  419663:	pushaw 
  419665:	mov    al,ds:0xc8f1f2aa
  41966a:	dec    eax
  41966b:	out    0x90,al
  41966d:	fcmovnu st,st(3)
  41966f:	sbb    BYTE PTR [ecx+ebx*8],ch
  419672:	sbb    edx,0x6
  419675:	out    dx,al
  419676:	cwde   
  419677:	mov    esp,0xf433ee4
  41967c:	push   ebp
  41967d:	sbb    al,0x48
  41967f:	sub    DWORD PTR [edi],esp
  419681:	jno    0x4196ac
  419683:	out    0x8b,al
  419685:	(bad)  
  419687:	pop    edx
  419688:	mov    ds:0x6352e963,eax
  41968d:	xor    edx,DWORD PTR [eax]
  41968f:	or     DWORD PTR [eax+eax*4-0x536e9db8],0x21
  419697:	(bad)  
  419699:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  41969b:	not    WORD PTR [edi]
  41969e:	push   eax
  41969f:	adc    BYTE PTR [ecx],ah
  4196a1:	jno    0x419719
  4196a3:	imul   esp,DWORD PTR [esi],0x31
  4196a6:	push   0x6a
  4196a8:	ret    0x8823
  4196ab:	add    ebp,ecx
  4196ad:	mov    ch,0xbc
  4196af:	inc    si
  4196b1:	loop   0x419635
  4196b3:	cmp    eax,0x4ccd0c1a
  4196b8:	imul   esp,DWORD PTR [edi+0x55baa590],0xffffffd8
  4196bf:	(bad)  [esi]
  4196c1:	jecxz  0x419724
  4196c3:	pop    eax
  4196c4:	jmp    0xfb07575c
  4196c9:	pop    edx
  4196ca:	jecxz  0x419732
  4196cc:	dec    eax
  4196ce:	pop    ecx
  4196cf:	and    ebx,DWORD PTR [edx-0x5badb6fe]
  4196d5:	sahf   
  4196d6:	pop    edx
  4196d7:	pop    edx
  4196d8:	(bad)  
  4196d9:	loopne 0x419706
  4196db:	cmp    al,BYTE PTR [ebp-0x44]
  4196de:	mov    ds:0xb02886f6,eax
  4196e3:	push   ss
  4196e4:	sbb    eax,0x41d4d193
  4196e9:	mov    dl,0xb
  4196eb:	fldenv [edi+0x2d]
  4196ee:	lea    edx,[esi]
  4196f0:	pushf  
  4196f1:	fldenv [eax+0x64afbefe]
  4196f7:	jae    0x419691
  4196f9:	jl     0x4196ea
  4196fb:	test   edx,edi
  4196fd:	xchg   edi,eax
  4196fe:	dec    eax
  4196ff:	adc    eax,0xcd73fd65
  419704:	or     DWORD PTR [ebx],edx
  419706:	popf   
  419707:	imul   ecx,ebx,0x177a0e60
  41970d:	mov    dh,0xf9
  41970f:	push   ss
  419710:	sbb    ch,BYTE PTR [esi+0xd18d5a3]
  419716:	sbb    al,dh
  419718:	mov    eax,0xcfbaaed9
  41971d:	dec    esp
  41971e:	xchg   esi,eax
  41971f:	jge    0x41977f
  419721:	int3   
  419722:	das    
  419723:	je     0x4196bf
  419725:	mov    cl,BYTE PTR [eax-0x68]
  419728:	and    ch,bh
  41972a:	cmc    
  41972b:	stos   DWORD PTR es:[edi],eax
  41972c:	ins    BYTE PTR es:[edi],dx
  41972d:	nop
  41972e:	cmp    bh,BYTE PTR [esi+esi*1-0x19]
  419732:	shl    BYTE PTR [edx],1
  419734:	jmp    0x684b:0x6d751230
  41973b:	xor    al,0x62
  41973d:	and    bl,dh
  41973f:	rol    BYTE PTR [eax-0x20],cl
  419742:	repnz data16 loopne 0x4197a2
  419746:	fiadd  WORD PTR [ebx]
  419748:	mov    ch,0xf6
  41974a:	ja     0x4196ed
  41974c:	stos   DWORD PTR es:[edi],eax
  41974d:	mov    ecx,0x35166970
  419752:	mov    al,0x66
  419754:	xchg   edi,eax
  419755:	mov    ss,WORD PTR [ebx+0x190d1b56]
  41975b:	push   ds
  41975c:	and    BYTE PTR [edi-0xf196a59],ah
  419762:	mov    al,ds:0x2cae32d3
  419767:	push   0x7ac377fb
  41976c:	adc    esi,eax
  41976e:	out    0xc6,eax
  419770:	sbb    ch,BYTE PTR [edx+0x2ef8f7bf]
  419776:	out    0x31,eax
  419778:	(bad)  
  419779:	fstp   DWORD PTR [ecx+0x1d]
  41977c:	test   al,0x2
  41977e:	in     al,dx
  41977f:	ret    0x1e6d
  419782:	sbb    BYTE PTR [ebx],0x29
  419785:	and    al,0x48
  419787:	dec    ecx
  419788:	push   esi
  419789:	mov    eax,ds:0x6e66144a
  41978e:	mov    bl,0x66
  419790:	fstp   DWORD PTR [edx]
  419792:	mov    eax,ds:0x15261a28
  419797:	add    DWORD PTR [edx+0x5b],esp
  41979a:	retf   
  41979b:	aaa    
  41979c:	mov    ebp,0xcf7bc8f5
  4197a1:	(bad)  [ebx+0x7f59f84a]
  4197a7:	in     al,dx
  4197a8:	dec    esi
  4197a9:	inc    edi
  4197aa:	inc    ecx
  4197ab:	push   ss
  4197ac:	push   0x7d604f33
  4197b1:	xchg   DWORD PTR [eax+0x7b189731],ebx
  4197b7:	pop    edi
  4197b8:	pushf  
  4197b9:	imul   BYTE PTR [edi]
  4197bb:	jg     0x419817
  4197bd:	sub    BYTE PTR [edi],ah
  4197bf:	cli    
  4197c0:	mov    edx,0x62eefae6
  4197c5:	sahf   
  4197c6:	fiadd  DWORD PTR [eax+0x3985d974]
  4197cc:	pop    ecx
  4197cd:	addr16 dec edi
  4197cf:	(bad)  
  4197d0:	cli    
  4197d1:	clc    
  4197d2:	gs xor al,0x36
  4197d5:	xchg   ebx,eax
  4197d6:	cli    
  4197d7:	pop    es
  4197d8:	ret    
  4197d9:	mov    bh,0x48
  4197db:	sbb    ch,BYTE PTR [ecx+0xaa0770f]
  4197e1:	jg     0x41982b
  4197e3:	push   ebx
  4197e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4197e5:	or     al,0x21
  4197e7:	cdq    
  4197e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197e9:	push   ds
  4197ea:	mov    bl,0x66
  4197ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197ed:	icebp  
  4197ee:	pop    ebx
  4197ef:	and    al,0x1a
  4197f1:	enter  0xf5c8,0x22
  4197f5:	cs std 
  4197f7:	les    esi,FWORD PTR [edx-0x19]
  4197fa:	and    esi,edi
  4197fc:	and    BYTE PTR [edi],ch
  4197fe:	int3   
  4197ff:	dec    ebx
  419800:	ss or  BYTE PTR ss:[ecx-0x3d7ad3e6],dl
  419808:	push   eax
  419809:	cmp    DWORD PTR [ecx-0x79],edx
  41980c:	cmc    
  41980d:	fstp   DWORD PTR [ecx]
  41980f:	jb     0x41984b
  419811:	and    edx,0xffffffdf
  419814:	inc    ecx
  419815:	call   0x227249e9
  41981a:	dec    eax
  41981b:	jecxz  0x4197a7
  41981d:	push   ds
  41981e:	pop    ecx
  41981f:	enter  0x291,0x25
  419823:	xchg   BYTE PTR [bx-0x8],ah
  419827:	and    eax,0x63e1e4fe
  41982c:	stc    
  41982d:	cmc    
  41982e:	inc    edi
  41982f:	or     al,0xf8
  419831:	shl    BYTE PTR [edi],1
  419833:	in     al,0x75
  419835:	bound  ecx,QWORD PTR [esi+eiz*2+0xe]
  419839:	jo     0x419807
  41983b:	push   edi
  41983c:	inc    eax
  41983d:	out    0x81,al
  41983f:	pop    eax
  419840:	sbb    al,ch
  419842:	ret    0xf0d5
  419845:	fiadd  WORD PTR [eax-0x77]
  419848:	out    0xa8,al
  41984a:	adc    DWORD PTR [edi-0x62],esp
  41984d:	jge    0x4197d6
  41984f:	ins    BYTE PTR es:[edi],dx
  419850:	sbb    bl,BYTE PTR [ebx]
  419852:	ins    DWORD PTR es:[edi],dx
  419853:	and    BYTE PTR [ecx+0x47dd9978],0xd9
  41985a:	lea    eax,[esi+0x4284e151]
  419860:	push   ss
  419861:	mov    al,ds:0x907b3628
  419866:	dec    ecx
  419867:	mov    edx,0xd40c8c31
  41986c:	cmc    
  41986d:	fldenv [ebx]
  41986f:	scas   eax,DWORD PTR es:[edi]
  419870:	lods   eax,DWORD PTR ds:[esi]
  419871:	pop    ss
  419872:	repz pop esp
  419874:	jbe    0x41985d
  419876:	add    BYTE PTR [eax+0x4858fd],dl
  41987c:	lods   al,BYTE PTR ds:[esi]
  41987d:	loopne 0x4198a5
  41987f:	xchg   DWORD PTR [ebx-0x10],esi
  419882:	push   edx
  419883:	ins    DWORD PTR es:[edi],dx
  419884:	out    0xb9,al
  419886:	popa   
  419887:	fs or  al,0x2
  41988a:	pop    ecx
  41988b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41988c:	add    DWORD PTR [ecx+0x48],ecx
  41988f:	sahf   
  419890:	pushf  
  419891:	mov    dh,0xcc
  419893:	dec    eax
  419894:	lahf   
  419895:	inc    ebp
  419896:	outs   dx,WORD PTR ds:[esi]
  419898:	call   0xd0a1:0xf11b910e
  41989f:	ss xchg edi,eax
  4198a1:	jmp    0xcdf4:0xe399f47
  4198a8:	pushf  
  4198a9:	ds lock jns 0x419877
  4198ad:	dec    edi
  4198ae:	shl    DWORD PTR [edi-0x7d],0xcd
  4198b2:	pop    ebx
  4198b3:	sbb    BYTE PTR ds:0xb1db258a,0xce
  4198ba:	neg    DWORD PTR ss:[esp+ebp*1+0x6bc35a76]
  4198c2:	mov    al,ds:0xf5d9a5a6
  4198c7:	fidiv  DWORD PTR [esi+ebp*8-0x24894806]
  4198ce:	rol    ch,1
  4198d0:	test   eax,0xc92d481f
  4198d5:	mov    esp,0x40c0e429
  4198da:	mov    bh,0x66
  4198dc:	bound  edi,QWORD PTR [esi-0x4c]
  4198df:	call   0x1b9ed500
  4198e4:	push   cs
  4198e5:	cmp    DWORD PTR [ecx+0x7e61ae8e],ebx
  4198eb:	(bad)  
  4198ec:	push   edi
  4198ed:	fldenv [ebx+0x5e]
  4198f0:	addr16 pop esi
  4198f2:	into   
  4198f3:	and    al,0xb4
  4198f5:	mov    ds:0xf95e7c6a,al
  4198fa:	dec    esi
  4198fb:	sbb    DWORD PTR [edx+0x7ee5b453],ebx
  419901:	fldenv [edx-0x58]
  419904:	sub    DWORD PTR [edi],ebp
  419906:	inc    sp
  419908:	imul   ecx,DWORD PTR [edx+0x62],0xfffffffb
  41990c:	into   
  41990d:	sti    
  41990e:	inc    edi
  41990f:	cmp    dl,BYTE PTR [ecx-0x445d2c6a]
  419915:	outs   dx,DWORD PTR ds:[esi]
  419916:	shl    DWORD PTR [esi-0x18],1
  419919:	cwde   
  41991a:	retf   
  41991b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41991c:	xchg   edi,eax
  41991d:	das    
  41991e:	and    esp,DWORD PTR [ebp-0x39]
  419921:	fadd   QWORD PTR [edi+0x6c]
  419924:	gs push 0xd96ea391
  41992a:	sub    ebx,ebx
  41992c:	cmp    bh,0x3e
  41992f:	sbb    cl,cl
  419931:	jg     0x4198f5
  419933:	or     edx,DWORD PTR [eax]
  419935:	xchg   esp,eax
  419936:	dec    eax
  419937:	mov    dh,0x7d
  419939:	(bad)  
  41993a:	(bad)  
  41993b:	rol    DWORD PTR [ecx-0x66],cl
  41993e:	mov    ebx,0x19711c79
  419943:	or     cl,BYTE PTR [bx+di-0x24]
  419947:	ss addr16 pop ss
  41994a:	dec    eax
  41994b:	push   eax
  41994c:	cmp    DWORD PTR [esi],0x55e5f830
  419952:	adc    eax,0x512d6b84
  419957:	data16 adc cl,BYTE PTR [edx-0x35]
  41995b:	loopne 0x4199d8
  41995d:	cmp    eax,0xca95e348
  419962:	scas   eax,DWORD PTR es:[edi]
  419963:	fld    QWORD PTR [edi+0x49669e05]
  419969:	pop    edi
  41996a:	out    0x7e,eax
  41996c:	sbb    dl,BYTE PTR [esi]
  41996e:	xchg   esp,eax
  41996f:	mov    cl,0x50
  419971:	jbe    0x4199da
  419973:	sub    eax,0x4b621495
  419978:	popf   
  419979:	cmp    al,0x34
  41997b:	call   0x8b5b:0xa9442809
  419982:	and    BYTE PTR [edx],cl
  419984:	cmp    al,0xa5
  419986:	dec    edi
  419987:	nop
  419988:	jge    0x419943
  41998a:	cld    
  41998b:	out    dx,eax
  41998c:	dec    ebp
  41998d:	cs sub eax,0x6579270f
  419993:	scas   al,BYTE PTR es:[edi]
  419994:	push   ebx
  419995:	sbb    al,0x65
  419997:	sahf   
  419998:	xchg   BYTE PTR [esi],ah
  41999a:	push   DWORD PTR [edi+0x3e8ccb0]
  4199a0:	pop    eax
  4199a1:	mov    edi,0x41ca7a3e
  4199a6:	bound  esp,QWORD PTR [esi+0x3a]
  4199a9:	pop    ds
  4199aa:	in     eax,dx
  4199ab:	in     eax,0x2f
  4199ad:	sbb    al,0xda
  4199af:	mov    bx,0xb666
  4199b3:	mov    ds:0xb694fd1a,eax
  4199b8:	scas   al,BYTE PTR es:[edi]
  4199b9:	xchg   ch,ah
  4199bb:	mov    esp,0x6b8d979
  4199c0:	outs   dx,DWORD PTR ds:[esi]
  4199c1:	mov    ds,WORD PTR [ebp+0x77]
  4199c4:	add    ebx,DWORD PTR [esi+0x10eb6177]
  4199ca:	je     0x419a18
  4199cc:	ds aas 
  4199ce:	dec    ebx
  4199cf:	aas    
  4199d0:	fs loop 0x4199ce
  4199d3:	rsm    
  4199d5:	loopne 0x41997e
  4199d7:	pop    ebp
  4199d8:	mov    BYTE PTR [esi-0x11],al
  4199db:	sub    dl,bl
  4199dd:	loope  0x4199ec
  4199df:	daa    
  4199e0:	sub    al,0xc3
  4199e2:	(bad)  
  4199e3:	xor    eax,0xc17ad928
  4199e8:	adc    eax,0x13467306
  4199ed:	in     eax,dx
  4199ee:	mov    bh,0xd4
  4199f0:	outs   dx,DWORD PTR ds:[esi]
  4199f1:	fldcw  WORD PTR [edi]
  4199f3:	push   0xffffff8e
  4199f5:	xor    esp,DWORD PTR [ebp-0x1002e5b4]
  4199fb:	cmp    eax,0x76ac7598
  419a00:	jmp    0xac7df9de
  419a05:	stc    
  419a06:	xchg   ebp,eax
  419a07:	xor    cl,BYTE PTR ds:0x8a91b71e
  419a0d:	fiadd  WORD PTR [edi+0x2a]
  419a10:	inc    ecx
  419a11:	or     ch,cl
  419a13:	cdq    
  419a14:	pusha  
  419a15:	xchg   ecx,eax
  419a16:	dec    esp
  419a17:	data16 mov al,0x26
  419a1a:	cmp    DWORD PTR [ebx+0x1a],esp
  419a1d:	scas   al,BYTE PTR es:[edi]
  419a1e:	(bad)  
  419a1f:	mov    cl,0x47
  419a21:	jnp    0x419a19
  419a23:	mov    ah,0xaa
  419a25:	cmc    
  419a26:	dec    ebp
  419a27:	inc    ebp
  419a28:	jbe    0x419a7e
  419a2a:	call   0x536d668e
  419a2f:	jb     0x419a5c
  419a31:	mov    al,cl
  419a33:	and    eax,0xbc7ec1a
  419a38:	pop    ecx
  419a39:	arpl   WORD PTR [edi],bp
  419a3b:	push   cs
  419a3c:	(bad)  
  419a3d:	cmc    
  419a3e:	push   ss
  419a3f:	inc    esp
  419a40:	and    ah,BYTE PTR [eax+0xa3539a6]
  419a46:	push   esp
  419a47:	xchg   edx,eax
  419a48:	enter  0xeaa5,0x8f
  419a4c:	cmp    eax,esp
  419a4e:	cli    
  419a4f:	js     0x419a2b
  419a51:	push   cs
  419a52:	aaa    
  419a53:	adc    ah,0x3e
  419a56:	out    0x6c,eax
  419a58:	xor    BYTE PTR [eax+0x1c],bl
  419a5b:	in     eax,0xa
  419a5d:	int    0x82
  419a5f:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  419a61:	cs loopne 0x419a56
  419a64:	ss jmp 0x419a77
  419a67:	cmp    eax,0x348df1d
  419a6c:	push   eax
  419a6d:	shl    DWORD PTR [ebp-0x48],1
  419a70:	adc    eax,0x75c7cdda
  419a75:	jo     0x419ad6
  419a77:	cmp    dh,BYTE PTR [edi+0x6b]
  419a7a:	ja     0x419a71
  419a7c:	push   edi
  419a7d:	or     DWORD PTR [eax+0x7a],ecx
  419a80:	add    eax,0xaa29c8c2
  419a85:	std    
  419a86:	inc    ebx
  419a87:	imul   eax,ebp,0xffffff99
  419a8a:	outs   dx,BYTE PTR ds:[esi]
  419a8b:	scas   al,BYTE PTR es:[edi]
  419a8c:	adc    eax,0x4b04d901
  419a91:	fiadd  WORD PTR [edi-0x44]
  419a94:	pushf  
  419a95:	xor    bh,bh
  419a97:	xchg   DWORD PTR [edx-0x54998b36],edx
  419a9d:	adc    DWORD PTR [ecx],ecx
  419a9f:	cmc    
  419aa0:	sub    BYTE PTR [ecx],ch
  419aa2:	sub    eax,0xc2f95c90
  419aa7:	xchg   esp,eax
  419aa8:	xchg   al,ah
  419aaa:	and    esi,eax
  419aac:	out    dx,eax
  419aad:	out    0x30,al
  419aaf:	xchg   dl,dh
  419ab1:	cmp    al,0x5d
  419ab3:	out    0xae,al
  419ab5:	sub    esp,DWORD PTR [edx+0x56c91909]
  419abb:	loopne 0x419a5e
  419abd:	mov    BYTE PTR [eax-0x268eba],bl
  419ac3:	arpl   WORD PTR [ebp+0x20d2a940],cx
  419ac9:	dec    edx
  419aca:	dec    esp
  419acb:	scas   eax,DWORD PTR es:[edi]
  419acc:	pushf  
  419acd:	jmp    0xdafec819
  419ad2:	rol    cl,0x7b
  419ad5:	lods   eax,DWORD PTR ds:[esi]
  419ad6:	ins    BYTE PTR es:[edi],dx
  419ad7:	data16 jg 0x419b15
  419ada:	data16 cld 
  419adc:	sbb    dl,bh
  419ade:	sbb    ah,BYTE PTR [edi+0x65bac1cc]
  419ae4:	outs   dx,BYTE PTR ds:[esi]
  419ae5:	(bad)  
  419ae7:	sar    DWORD PTR [eax],0xb6
  419aea:	mov    ah,0x6b
  419aec:	loope  0x419af3
  419aee:	add    eax,eax
  419af0:	sbb    bh,BYTE PTR ds:0x5be28abf
  419af6:	or     al,bh
  419af8:	into   
  419af9:	fstp   DWORD PTR [ebx+0x7c]
  419afc:	mov    ah,al
  419afe:	mov    bh,0x97
  419b00:	adc    eax,0x11ece20a
  419b05:	call   0x30ebba51
  419b0a:	fnstcw WORD PTR [esi+0x66978ff9]
  419b10:	sahf   
  419b11:	shl    BYTE PTR [ecx-0x53],cl
  419b14:	sbb    dl,BYTE PTR [ebp-0x6c]
  419b17:	jmp    0x419b65
  419b19:	sbb    ah,al
  419b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b1c:	retf   0x86d9
  419b1f:	mov    bl,0x6e
  419b21:	lock jl 0x419b4a
  419b24:	stos   DWORD PTR es:[edi],eax
  419b25:	pop    edx
  419b26:	mov    ds:0x4a398134,eax
  419b2b:	adc    al,0x7b
  419b2d:	mov    ecx,0xd932c33f
  419b32:	cmp    eax,0x50a9899f
  419b37:	xlat   BYTE PTR ds:[ebx]
  419b38:	fidivr WORD PTR [esi-0x6a6aec7d]
  419b3e:	(bad)  
  419b3f:	xor    al,0xfa
  419b41:	sub    eax,0xa9b5db4b
  419b46:	(bad)  
  419b47:	fldcw  WORD PTR [edi+0x16]
  419b4a:	repnz adc DWORD PTR [edx+0xee40805],ebx
  419b51:	fwait
  419b52:	test   BYTE PTR ss:[edx],bl
  419b55:	and    eax,0x63ae7496
  419b5a:	aaa    
  419b5b:	ret    0xd989
  419b5e:	jecxz  0x419b01
  419b60:	loope  0x419b03
  419b62:	push   es
  419b63:	jo     0x419b18
  419b65:	inc    ebx
  419b66:	mov    bh,BYTE PTR [esi+0x8]
  419b69:	cmp    bh,BYTE PTR [esi]
  419b6b:	mov    ah,0x1e
  419b6d:	mov    eax,0x638a3449
  419b72:	sbb    al,0x57
  419b74:	ret    
  419b75:	fldenv [edi+0x6895a118]
  419b7b:	or     cl,BYTE PTR [edx-0x3a]
  419b7e:	jmp    0x174d:0x489b4e5c
  419b85:	out    dx,eax
  419b86:	and    ebp,DWORD PTR [edx]
  419b88:	adc    esi,DWORD PTR [ebp+0x67]
  419b8b:	adc    WORD PTR [esi+0x3c],dx
  419b8f:	push   0x1a
  419b91:	jle    0x419b26
  419b93:	ds inc eax
  419b95:	push   ecx
  419b96:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419b97:	jecxz  0x419bd8
  419b99:	imul   edx,DWORD PTR [edi+0x47],0x671e48e0
  419ba0:	fs sahf 
  419ba2:	adc    ebx,DWORD PTR [ecx-0x175dbae6]
  419ba8:	test   ah,al
  419baa:	call   0x6118:0x2d9bc63
  419bb1:	sbb    DWORD PTR [edx],0x6bbea816
  419bb7:	jnp    0x419b54
  419bb9:	or     cl,BYTE PTR [eax+0xb]
  419bbc:	and    al,0x38
  419bbe:	jne    0x419c2b
  419bc0:	pop    ebp
  419bc1:	pop    es
  419bc2:	mov    dh,0x66
  419bc4:	sbb    DWORD PTR [edi],ebp
  419bc6:	jmp    FWORD PTR [esi]
  419bc8:	xchg   esi,eax
  419bc9:	jmp    0x419b85
  419bcb:	or     eax,0x4e482f2b
  419bd0:	fs loopne 0x419c26
  419bd3:	sar    DWORD PTR [esi],cl
  419bd5:	inc    ebp
  419bd6:	test   eax,0x10a05266
  419bdb:	adc    ebx,DWORD PTR [edx]
  419bdd:	and    ch,BYTE PTR ds:0x2ccfe387
  419be3:	shl    ebp,1
  419be5:	fmul   QWORD PTR ds:0xa5029c45
  419beb:	xchg   esp,eax
  419bec:	or     bh,BYTE PTR [edx+0x1e]
  419bef:	or     al,0x32
  419bf1:	test   eax,0x96c2a0a4
  419bf6:	pop    ss
  419bf7:	rcr    BYTE PTR [esi],cl
  419bf9:	add    eax,0x266b8458
  419bfe:	loopne 0x419ba6
  419c00:	push   edx
  419c01:	ret    
  419c02:	mov    ds:0x2ccc1a3a,eax
  419c07:	lock jmp 0x57ec:0xafce420
  419c0f:	fidivr DWORD PTR [ebx+0x4ea7fada]
  419c15:	mov    ecx,DWORD PTR [ebp-0x8]
  419c18:	into   
  419c19:	and    al,0x6c
  419c1b:	dec    esi
  419c1c:	leave  
  419c1d:	pop    esi
  419c1e:	push   edi
  419c1f:	(bad)  
  419c20:	(bad)  
  419c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c22:	ins    DWORD PTR es:[edi],dx
  419c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c24:	sbb    esi,esi
  419c26:	xchg   edi,eax
  419c27:	xor    al,0x7d
  419c29:	mov    dh,0xce
  419c2b:	xor    DWORD PTR ds:0x687aedcb,eax
  419c31:	fld    QWORD PTR [edi+0x8]
  419c34:	mov    gs,WORD PTR [ebx]
  419c36:	cld    
  419c37:	mov    ebp,0x23489b70
  419c3c:	sbb    ecx,DWORD PTR [edx-0x4ab8ba19]
  419c42:	xchg   DWORD PTR [edi+esi*1-0x5c],edi
  419c46:	and    DWORD PTR [esi-0x1c],0x32706692
  419c4d:	mov    eax,0xd9d1448
  419c52:	inc    edi
  419c53:	and    edx,DWORD PTR [esp+eiz*8-0x37]
  419c57:	push   ds
  419c58:	das    
  419c59:	mov    DWORD PTR [edi],eax
  419c5b:	ds adc bh,bl
  419c5e:	daa    
  419c5f:	pop    ds
  419c60:	cs mov ebp,0xd5164148
  419c66:	jns    0x419c53
  419c68:	loop   0x419c4a
  419c6a:	pop    ecx
  419c6b:	dec    edx
  419c6c:	inc    ecx
  419c6d:	sub    edx,DWORD PTR [esi+0x5a]
  419c70:	jnp    0x419c98
  419c72:	je     0x419cb9
  419c74:	stc    
  419c75:	leave  
  419c76:	dec    ebx
  419c77:	push   ecx
  419c78:	sbb    ah,BYTE PTR [esi+0x1dbd34c9]
  419c7e:	sub    bl,BYTE PTR [esi-0x7bfa1f6e]
  419c84:	mov    ecx,0x469367cb
  419c89:	jecxz  0x419c22
  419c8b:	xchg   esi,eax
  419c8c:	pop    ds
  419c8d:	adc    BYTE PTR [ecx+0x5c945373],dh
  419c93:	je     0x419c6f
  419c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c96:	dec    eax
  419c97:	bnd jg 0x419c73
  419c9a:	gs mov dl,0x3d
  419c9d:	push   es
  419c9e:	inc    ebp
  419c9f:	push   eax
  419ca0:	xor    BYTE PTR [ebx-0x7090c0db],bh
  419ca6:	dec    eax
  419ca7:	mov    ah,0x4e
  419ca9:	ins    BYTE PTR es:[edi],dx
  419caa:	push   ecx
  419cab:	mov    BYTE PTR [eax+0x5e1701d9],dl
  419cb1:	adc    DWORD PTR ds:[esi-0x22],eax
  419cb5:	jne    0x419c74
  419cb7:	sub    edx,DWORD PTR ds:0x56bf67ac
  419cbd:	das    
  419cbe:	dec    eax
  419cbf:	jge    0x419ccf
  419cc1:	fisubr DWORD PTR [edi+esi*4]
  419cc4:	aad    0xe4
  419cc6:	mov    ch,0x46
  419cc8:	xchg   esp,eax
  419cc9:	in     eax,dx
  419cca:	cmc    
  419ccb:	inc    ebp
  419ccc:	(bad)  
  419ccd:	pop    ebx
  419cce:	dec    eax
  419ccf:	adc    eax,0x1d0ca13
  419cd4:	clc    
  419cd5:	xchg   ecx,eax
  419cd6:	test   DWORD PTR [esi+0x58],esp
  419cd9:	ins    DWORD PTR es:[edi],dx
  419cda:	adc    ebp,edx
  419cdc:	sub    eax,0x1aa83d8f
  419ce1:	into   
  419ce2:	js     0x419c82
  419ce4:	iret   
  419ce5:	retf   
  419ce6:	sbb    DWORD PTR [ecx-0x55],edi
  419ce9:	pusha  
  419cea:	xchg   DWORD PTR [esi+0x1d],esp
  419ced:	mov    ebx,0xe61d9958
  419cf2:	sbb    al,0xdf
  419cf4:	dec    esi
  419cf5:	sbb    DWORD PTR [ecx-0x46],0x6d12f0e
  419cfc:	dec    ecx
  419cfd:	adc    DWORD PTR [edi],ebp
  419cff:	jbe    0x419cdb
  419d01:	add    BYTE PTR [ecx-0x252f9bdd],dl
  419d07:	daa    
  419d08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d09:	xchg   DWORD PTR [eax-0x4e],ecx
  419d0c:	test   DWORD PTR [edx],esi
  419d0e:	out    0xeb,eax
  419d10:	jnp    0x419d3e
  419d12:	pop    ebx
  419d13:	jle    0x419c97
  419d15:	(bad)
  419d18:	arpl   bp,sp
  419d1a:	gs ds pop eax
  419d1d:	std    
  419d1e:	xchg   DWORD PTR [eax+0x79],eax
  419d21:	fsub   QWORD PTR [edx]
  419d23:	popf   
  419d24:	jmp    0xdd3d:0x1a1f82da
  419d2b:	(bad)  
  419d2c:	jp     0x419dab
  419d2e:	bound  ecx,QWORD PTR [eax+0x3aa4d99b]
  419d34:	stc    
  419d35:	pop    ds
  419d36:	jg     0x419d48
  419d38:	dec    esp
  419d39:	into   
  419d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d3b:	cmp    al,0x37
  419d3d:	jmp    0xa052:0xca035a47
  419d44:	sub    BYTE PTR [ecx+0x21],al
  419d47:	xor    dl,BYTE PTR [bx+si-0x69]
  419d4b:	out    0x1b,al
  419d4d:	out    dx,eax
  419d4e:	xchg   edx,eax
  419d4f:	sub    edi,DWORD PTR [ecx+0x65]
  419d52:	aaa    
  419d53:	cld    
  419d54:	add    al,BYTE PTR [ecx]
  419d56:	cdq    
  419d57:	mov    al,ds:0x6e029c9f
  419d5c:	pusha  
  419d5d:	imul   esp,DWORD PTR ds:0x813f89c5,0x38421a16
  419d67:	sbb    eax,0x85bbbd65
  419d6c:	jno    0x419d47
  419d6e:	adc    ecx,DWORD PTR [ebp+eax*4-0x39]
  419d72:	jecxz  0x419d2c
  419d74:	jne    0x419da4
  419d76:	ror    DWORD PTR ds:0xe481e0e3,cl
  419d7c:	shl    DWORD PTR [esi],1
  419d7e:	cwde   
  419d7f:	popf   
  419d80:	jge    0x419dea
  419d82:	cmp    BYTE PTR [ecx+0x66bee44f],ah
  419d88:	out    0xb1,al
  419d8a:	mov    al,ds:0xd8a61a4b
  419d8f:	sub    al,0x4d
  419d91:	sahf   
  419d92:	call   0xd11fcd5d
  419d97:	and    BYTE PTR [edi],dh
  419d99:	call   0x76723b30
  419d9e:	mov    ch,0xe6
  419da0:	sbb    ch,BYTE PTR [eax+0x3b]
  419da3:	jb     0x419e17
  419da5:	push   ecx
  419da6:	fimul  DWORD PTR [edx-0x1c]
  419da9:	call   0xe34c3f8e
  419dae:	push   ecx
  419daf:	lods   eax,DWORD PTR ds:[esi]
  419db0:	sti    
  419db1:	sbb    BYTE PTR [eax-0x74],cl
  419db4:	sbb    ah,BYTE PTR [ebp-0x1879053c]
  419dba:	stos   DWORD PTR es:[edi],eax
  419dbb:	ds ja  0x419d97
  419dbe:	sbb    al,BYTE PTR [ecx+0x2bf46813]
  419dc4:	jb     0x419dd6
  419dc6:	pop    esp
  419dc7:	mov    esp,0x17247f1a
  419dcc:	mov    ds:0x908c3e90,eax
  419dd1:	jbe    0x419d70
  419dd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dd4:	call   0x1b75:0x589b8149
  419ddb:	hlt    
  419ddc:	sbb    al,BYTE PTR [ebx+0x4]
  419ddf:	repnz xchg edx,eax
  419de1:	cmc    
  419de2:	push   esi
  419de3:	mov    al,ds:0x7438da0c
  419de8:	jb     0x419e52
  419dea:	adc    BYTE PTR [ebx-0x3b],dl
  419ded:	pop    esi
  419dee:	push   edx
  419def:	inc    edi
  419df0:	pop    esi
  419df1:	outs   dx,DWORD PTR ds:[esi]
  419df2:	dec    eax
  419df3:	pop    esi
  419df4:	mov    ecx,eax
  419df6:	push   esp
  419df7:	(bad)  
  419df9:	(bad)  
  419dfa:	pop    ds
  419dfb:	addr16 add al,0x9f
  419dfe:	pop    edx
  419dff:	jle    0x419e1b
  419e01:	push   ss
  419e02:	push   0x95f0338e
  419e07:	icebp  
  419e08:	jg     0x419e0f
  419e0a:	ss or  eax,0xf2afe086
  419e10:	test   al,0x99
  419e12:	mov    dl,0xe7
  419e14:	in     eax,dx
  419e15:	int3   
  419e16:	pop    ds
  419e17:	dec    eax
  419e18:	sbb    bl,BYTE PTR [edx]
  419e1a:	clc    
  419e1b:	mov    cl,0xa4
  419e1d:	adc    DWORD PTR [edi],0x38da070e
  419e23:	fdivr  QWORD PTR [eax+0x1c80be9b]
  419e29:	and    al,BYTE PTR [ebp-0x43]
  419e2c:	cmp    eax,0x32f256e4
  419e31:	pop    ecx
  419e32:	jae    0x419e89
  419e34:	mov    ds:0x687c79f7,eax
  419e39:	stos   BYTE PTR es:[edi],al
  419e3a:	les    esi,FWORD PTR [ebp+0x7a]
  419e3d:	nop
  419e3e:	inc    esi
  419e3f:	vmread DWORD PTR [ebx+0xe],ebp
  419e43:	loop   0x419e62
  419e45:	iret   
  419e46:	dec    eax
  419e47:	add    eax,0x8c3c7b55
  419e4c:	(bad)  
  419e4e:	pop    esi
  419e4f:	dec    edx
  419e50:	add    ch,ah
  419e52:	loope  0x419e21
  419e54:	ret    
  419e55:	mov    eax,0x5affebc6
  419e5a:	adc    DWORD PTR [edx],0x61dcf228
  419e60:	push   ss
  419e61:	sbb    DWORD PTR [ecx],0xed275db6
  419e67:	je     0x419ea3
  419e69:	lds    ebx,FWORD PTR [eax]
  419e6b:	(bad)  
  419e6d:	sbb    bh,cl
  419e6f:	fnstsw WORD PTR [eax-0xbb87ba7]
  419e75:	mov    esi,0xe0b36606
  419e7a:	fnstenv [ecx-0x3e]
  419e7d:	(bad)  
  419e7e:	cmp    DWORD PTR [esi-0xa],ecx
  419e81:	int3   
  419e82:	mul    DWORD PTR [esi]
  419e84:	cmp    BYTE PTR [ebp+ebp*8+0x4f695ae3],cl
  419e8b:	sbb    BYTE PTR [ecx-0xc],al
  419e8e:	clc    
  419e8f:	and    BYTE PTR [ecx-0x58],dh
  419e92:	and    BYTE PTR [esi+0x9],0x8a
  419e96:	shl    BYTE PTR [edx+0x1a],0x35
  419e9a:	adc    al,0x6b
  419e9c:	test   DWORD PTR ds:0x17e1a22c,eax
  419ea2:	cld    
  419ea3:	dec    ebx
  419ea4:	sub    BYTE PTR [ecx],al
  419ea6:	(bad)  
  419ea7:	cmp    al,0xfa
  419ea9:	out    0x92,eax
  419eab:	hlt    
  419eac:	scas   eax,DWORD PTR es:[edi]
  419ead:	sbb    DWORD PTR [edx+0x47e581bd],0x29b539fc
  419eb7:	daa    
  419eb8:	jge    0x419f23
  419eba:	jmp    0x419f22
  419ebc:	push   es
  419ebd:	push   0x77390217
  419ec2:	das    
  419ec3:	les    edx,FWORD PTR ds:0x6d883cdd
  419ec9:	adc    eax,0xf76bc41a
  419ecf:	push   es
  419ed0:	mov    BYTE PTR ds:0x7ed5666f,bl
  419ed6:	retf   0x1b5d
  419ed9:	in     eax,dx
  419eda:	mov    esi,0xc27b2705
  419edf:	and    bl,BYTE PTR [edx+0x99d3aab]
  419ee5:	fs push 0xa4bc9595
  419eeb:	fwait
  419eec:	fs inc esp
  419eee:	dec    eax
  419eef:	add    eax,0x941e6ab8
  419ef4:	int    0xd9
  419ef6:	fsubr  QWORD PTR ds:[ecx-0x625174d8]
  419efd:	shr    ch,0x81
  419f00:	inc    eax
  419f01:	pop    ecx
  419f02:	test   DWORD PTR [edi+0x65c1d5ce],eax
  419f08:	cmp    eax,0x5e56c8d9
  419f0d:	outs   dx,BYTE PTR ds:[esi]
  419f0e:	dec    esp
  419f0f:	pop    eax
  419f10:	ja     0x419f57
  419f12:	sub    bl,dh
  419f14:	push   edi
  419f15:	test   eax,0xa1c6234b
  419f1a:	jg     0x419ece
  419f1c:	ss (bad) 
  419f1f:	mov    dh,0x1c
  419f21:	sbb    edi,esi
  419f23:	je     0x419f9f
  419f25:	push   esi
  419f26:	std    
  419f27:	jae    0x419f67
  419f29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419f2a:	push   esi
  419f2b:	push   cs
  419f2c:	cmp    al,0xa0
  419f2e:	fsub   QWORD PTR [esi-0x5b]
  419f31:	idiv   DWORD PTR [ecx-0x7366e4c2]
  419f37:	pusha  
  419f38:	les    esi,FWORD PTR [bx+0x4]
  419f3c:	pop    ecx
  419f3d:	xchg   al,al
  419f3f:	sub    dl,ah
  419f41:	add    al,0xd5
  419f43:	in     eax,dx
  419f44:	or     bh,BYTE PTR [ebx+0x28]
  419f47:	imul   edi,DWORD PTR [edx+0x14e597e0],0x885d9abb
  419f51:	arpl   WORD PTR [edi-0x1ccce56a],cx
  419f57:	add    ch,BYTE PTR [eax+0x62]
  419f5a:	out    dx,al
  419f5b:	js     0x419f45
  419f5d:	fldenv ds:0x662f082f
  419f63:	mov    edx,DWORD PTR [eax-0x7d]
  419f66:	fsub   QWORD PTR [ebx-0x36b7c9d6]
  419f6c:	jbe    0x419f73
  419f6e:	or     eax,0x371259d2
  419f73:	addr16 je 0x419ff3
  419f76:	mov    eax,0x25141c03
  419f7b:	cmp    ebx,DWORD PTR [ebp+0x2]
  419f7e:	add    al,0xc7
  419f80:	sbb    ecx,DWORD PTR [ecx]
  419f82:	repz es jl 0x419fb1
  419f86:	in     eax,dx
  419f87:	addr16 inc edi
  419f89:	stos   DWORD PTR es:[edi],eax
  419f8a:	loop   0x419f55
  419f8c:	cdq    
  419f8d:	int    0x84
  419f8f:	ds mov esi,0x13594847
  419f95:	imul   esp,DWORD PTR [edi+0x23],0x835049e8
  419f9c:	fisub  WORD PTR [esi]
  419f9e:	cwde   
  419f9f:	out    0x56,al
  419fa1:	and    DWORD PTR [eax+0x48c6309c],0x5e
  419fa8:	or     eax,0xe0c0c209
  419fad:	or     BYTE PTR [ebx+ebp*2+0x3a],0x99
  419fb2:	lods   al,BYTE PTR ds:[esi]
  419fb3:	mov    eax,ds:0x18686fee
  419fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fb9:	inc    edi
  419fba:	dec    eax
  419fbb:	mov    ds:0x1c16637b,al
  419fc0:	mov    ds:0x856659e8,eax
  419fc5:	xchg   ecx,eax
  419fc6:	pop    es
  419fc7:	adc    bl,BYTE PTR [edx]
  419fc9:	cmpxchg esi,edi
  419fcc:	xchg   ebp,eax
  419fcd:	xchg   esp,eax
  419fce:	xor    dl,BYTE PTR [edx+0x688bd9ca]
  419fd4:	call   0xb9c5:0xbb39ed5e
  419fdb:	ss daa 
  419fdd:	and    eax,0xf4423d48
  419fe2:	lds    edx,FWORD PTR [edx+0x66a907ff]
  419fe8:	pop    ss
  419fe9:	add    ecx,DWORD PTR [esi+0x26291a85]
  419fef:	loop   0x419f76
  419ff1:	mov    cl,0xa8
  419ff3:	pop    ecx
  419ff4:	pop    eax
  419ff5:	and    eax,0x741ac38b
  419ffa:	(bad)  
  419ffb:	mov    edi,0x63920a7f
  41a000:	cmp    ch,dh
  41a002:	cmp    al,0xcb
  41a004:	(bad)  
  41a006:	(bad)  
  41a007:	rcr    eax,cl
  41a009:	rcl    BYTE PTR [eax-0x64bc46b2],cl
  41a00f:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a011:	sbb    BYTE PTR [edx-0x33],ah
  41a014:	pop    ecx
  41a015:	pop    esp
  41a016:	in     al,dx
  41a017:	fidivr DWORD PTR [ebp+0x6766d5b7]
  41a01d:	jg     0x419f9f
  41a01f:	adc    edx,DWORD PTR [esi-0x31]
  41a022:	cmp    ah,BYTE PTR [edi-0x52]
  41a025:	jbe    0x419fd1
  41a027:	stc    
  41a028:	push   ebp
  41a029:	lahf   
  41a02a:	push   edx
  41a02b:	(bad)  
  41a02c:	fistp  DWORD PTR [ecx+0x6009e6cf]
  41a032:	in     al,dx
  41a033:	loop   0x41a06c
  41a035:	pop    ebp
  41a036:	pop    eax
  41a037:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a039:	dec    edi
  41a03a:	cmc    
  41a03b:	pusha  
  41a03c:	sbb    ah,bh
  41a03e:	stc    
  41a03f:	lds    eax,FWORD PTR [ebx-0xbeeef0d]
  41a045:	(bad)  [ebx]
  41a047:	pop    ds
  41a048:	cwde   
  41a049:	dec    ecx
  41a04a:	xor    bh,ah
  41a04c:	out    dx,eax
  41a04d:	daa    
  41a04e:	leave  
  41a04f:	cmp    dl,BYTE PTR [esi-0x4a5ca8ed]
  41a055:	pop    esi
  41a056:	jmp    0x751b6521
  41a05b:	jmp    ecx
  41a05d:	ret    0x8098
  41a060:	jbe    0x41a05b
  41a062:	inc    esp
  41a063:	xchg   ebx,eax
  41a064:	cmp    BYTE PTR [edx],0x48
  41a067:	xor    esi,0x4af62fb9
  41a06d:	dec    eax
  41a06e:	cmp    eax,0x1a1c338b
  41a073:	fdiv   DWORD PTR [di+0x0]
  41a077:	(bad)
  41a07a:	dec    eax
  41a07b:	mov    cl,0x69
  41a07d:	aas    
  41a07e:	sar    bl,1
  41a080:	fwait
  41a081:	cmp    al,0x9
  41a083:	addr16 mov eax,0x1aa778dd
  41a089:	ds aas 
  41a08b:	mov    ch,0x7b
  41a08d:	repz cmp eax,DWORD PTR [eax-0x6f]
  41a091:	fldenv [ebp-0x16]
  41a094:	push   ss
  41a095:	pop    ss
  41a096:	lods   al,BYTE PTR ds:[esi]
  41a097:	dec    edi
  41a098:	mov    ch,0x90
  41a09a:	test   cl,0xbb
  41a09d:	aam    0x4f
  41a09f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0a0:	pop    edx
  41a0a1:	inc    BYTE PTR [esi-0x7a]
  41a0a4:	jne    0x41a063
  41a0a6:	mov    al,0x30
  41a0a8:	adc    dl,al
  41a0aa:	imul   edx,esi,0xffffff9b
  41a0ad:	outs   dx,BYTE PTR ds:[esi]
  41a0ae:	xor    BYTE PTR [edi-0x22],ah
  41a0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0b2:	cmc    
  41a0b3:	neg    DWORD PTR [edx]
  41a0b5:	mov    esp,0xb95d4342
  41a0ba:	push   ebp
  41a0bb:	add    al,0xad
  41a0bd:	(bad)  
  41a0bf:	retf   
  41a0c0:	pop    esi
  41a0c1:	dec    esi
  41a0c2:	or     esi,DWORD PTR ds:0x1de25b33
  41a0c8:	and    DWORD PTR [edx+0x4b],0xf85b1858
  41a0cf:	in     al,0x10
  41a0d1:	cmp    dh,ch
  41a0d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a0d4:	in     eax,dx
  41a0d5:	fstp   DWORD PTR [edx]
  41a0d7:	sbb    DWORD PTR [eax-0x6],0xeb73ff18
  41a0de:	push   ebx
  41a0df:	pop    es
  41a0e0:	adc    bh,BYTE PTR [ecx+0x56522451]
  41a0e6:	and    ebp,DWORD PTR [edx-0x64]
  41a0e9:	aad    0xbb
  41a0eb:	pop    esi
  41a0ec:	outs   dx,BYTE PTR ds:[esi]
  41a0ed:	and    al,0x4e
  41a0ef:	data16 jb 0x41a0ce
  41a0f2:	mov    ebp,0xc02c557b
  41a0f7:	xor    esp,DWORD PTR [ebx+0x2]
  41a0fa:	push   0x663e0b66
  41a0ff:	les    edx,FWORD PTR [ebp+eiz*1-0x7b]
  41a103:	data16 (bad) 
  41a105:	je     0x41a0e6
  41a107:	mov    bl,BYTE PTR [edx]
  41a109:	xor    eax,0x81649624
  41a10e:	mov    ebp,0x3c4e73c6
  41a113:	leave  
  41a114:	(bad)  
  41a115:	es mov edx,0xef8ee566
  41a11b:	test   DWORD PTR [ecx+0x75b86ac6],ebx
  41a121:	mov    eax,0x43cb8248
  41a126:	enter  0xb28b,0x6d
  41a12a:	mov    ds:0x5d97af66,al
  41a12f:	lds    ebx,FWORD PTR [edx]
  41a131:	mov    dh,0x20
  41a133:	push   cs
  41a134:	icebp  
  41a135:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a136:	std    
  41a137:	push   0xf236dccb
  41a13c:	js     0x41a12d
  41a13e:	dec    edi
  41a13f:	and    eax,DWORD PTR [edx]
  41a141:	mov    dl,0x88
  41a143:	sbb    al,0x1a
  41a145:	pusha  
  41a146:	or     ebp,edx
  41a148:	and    DWORD PTR [ebx+eiz*2-0x6f2656d7],ecx
  41a14f:	aaa    
  41a150:	mov    gs:0xef06e178,eax
  41a156:	fwait
  41a157:	inc    ebp
  41a158:	push   ss
  41a159:	cmp    eax,0x79a314f
  41a15e:	sbb    BYTE PTR [ecx+esi*4-0x1e],dh
  41a162:	retf   
  41a163:	xchg   ebp,eax
  41a164:	dec    edi
  41a165:	ja     0x41a11a
  41a167:	dec    eax
  41a168:	retf   
  41a169:	and    al,0xc8
  41a16b:	fcomp  QWORD PTR [ebx]
  41a16d:	xor    DWORD PTR [ebp-0x3bf192a],esp
  41a173:	adc    dh,dl
  41a175:	xchg   BYTE PTR [esi-0x7e],dl
  41a178:	mov    ebx,0x5a69581d
  41a17d:	test   BYTE PTR [esi],0x92
  41a180:	push   esi
  41a181:	cmp    edi,DWORD PTR [eax]
  41a183:	xor    ch,BYTE PTR [ecx]
  41a185:	jns    0x41a140
  41a187:	jnp    0x41a11f
  41a189:	sbb    eax,esp
  41a18b:	jg     0x41a16a
  41a18d:	cmp    DWORD PTR [edi],esi
  41a18f:	loopne 0x41a113
  41a191:	sbb    ah,BYTE PTR [ebp+esi*2+0x7a]
  41a195:	xchg   edx,eax
  41a196:	xchg   edi,eax
  41a197:	sti    
  41a198:	jge    0x41a1ad
  41a19a:	int    0x24
  41a19c:	and    BYTE PTR [eax+ecx*2-0x732559fd],al
  41a1a3:	je     0x41a195
  41a1a5:	ja     0x41a1a4
  41a1a7:	data16 or bl,BYTE PTR [edx-0x3ce40518]
  41a1ae:	and    DWORD PTR [ebp-0x2f],ebx
  41a1b1:	jno    0x41a18b
  41a1b3:	and    BYTE PTR [edx-0x43],cl
  41a1b6:	lock cmp eax,DWORD PTR [esi]
  41a1b9:	mov    DWORD PTR [edi-0x5af24f7d],edi
  41a1bf:	es inc ebx
  41a1c1:	pusha  
  41a1c2:	nop
  41a1c3:	adc    bh,BYTE PTR [eax+0x74]
  41a1c6:	dec    eax
  41a1c7:	xchg   edi,eax
  41a1c8:	inc    ecx
  41a1c9:	add    al,0xb5
  41a1cb:	add    BYTE PTR ds:0x1a70124e,ah
  41a1d1:	mov    ds,WORD PTR cs:[ecx+0x3c]
  41a1d5:	call   0xa1bb:0xbe1a5f11
  41a1dc:	sbb    eax,0x3f97441b
  41a1e1:	fldpi  
  41a1e3:	xchg   esp,eax
  41a1e4:	pop    ebp
  41a1e5:	loopne 0x41a23b
  41a1e7:	lahf   
  41a1e8:	inc    eax
  41a1e9:	push   ecx
  41a1ea:	push   edx
  41a1eb:	lods   al,BYTE PTR ds:[esi]
  41a1ec:	fiadd  DWORD PTR [eax]
  41a1ee:	dec    ecx
  41a1ef:	das    
  41a1f0:	jmp    0x4c05f630
  41a1f5:	push   ss
  41a1f6:	or     al,0x5
  41a1f8:	pop    eax
  41a1f9:	mov    DWORD PTR [ebx-0x38257dd3],edi
  41a1ff:	mov    dl,0x1c
  41a201:	push   ebx
  41a202:	out    0x83,eax
  41a204:	out    dx,al
  41a205:	jl     0x41a24f
  41a207:	in     al,0xe4
  41a209:	xchg   esp,eax
  41a20a:	in     al,dx
  41a20b:	dec    ecx
  41a20c:	mov    ds:0xeaa077e4,al
  41a211:	fstp   DWORD PTR [esi-0x62]
  41a214:	dec    esp
  41a215:	scas   eax,DWORD PTR es:[edi]
  41a216:	les    ebx,FWORD PTR fs:[edx]
  41a219:	icebp  
  41a21a:	xchg   esp,eax
  41a21b:	xchg   esp,eax
  41a21c:	fsubrp st(1),st
  41a21e:	dec    esp
  41a21f:	sub    esi,eax
  41a221:	fld    st(7)
  41a223:	and    eax,0x3efb9af4
  41a228:	inc    esi
  41a229:	xchg   BYTE PTR [eax+0x48196b42],dl
  41a22f:	(bad)  
  41a231:	push   eax
  41a232:	pop    ebp
  41a233:	stos   DWORD PTR es:[edi],eax
  41a234:	and    dl,BYTE PTR [ecx+0x3f]
  41a237:	xor    DWORD PTR [bx+di],edi
  41a23a:	inc    esi
  41a23b:	add    ebx,DWORD PTR [edx]
  41a23d:	dec    esi
  41a23e:	mov    edx,0xfe1d9350
  41a243:	jbe    0x41a280
  41a245:	(bad)  
  41a247:	adc    al,0xcb
  41a249:	out    0xe,al
  41a24b:	outs   dx,DWORD PTR ds:[esi]
  41a24c:	xchg   edx,eax
  41a24d:	fsub   QWORD PTR [edi-0xa]
  41a250:	sbb    edx,ebx
  41a252:	loopne 0x41a232
  41a254:	mov    al,ds:0x8ad3f2fe
  41a259:	pop    edi
  41a25a:	sti    
  41a25b:	xchg   DWORD PTR [ecx],esi
  41a25d:	fnstcw WORD PTR [ecx+ebx*8+0x29]
  41a261:	sub    cl,BYTE PTR [edi-0x6c]
  41a264:	xor    BYTE PTR gs:[edx+0x47fbe4ff],ah
  41a26b:	mov    edi,0x7829e192
  41a270:	das    
  41a271:	cld    
  41a272:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a274:	adc    cl,ch
  41a276:	enter  0xda47,0xc9
  41a27a:	push   ds
  41a27b:	les    ebx,FWORD PTR [edx]
  41a27d:	ret    0xf597
  41a280:	mov    ch,0xc
  41a282:	aad    0x6
  41a284:	inc    esp
  41a285:	fld    DWORD PTR [ecx+0x58b19c62]
  41a28b:	ins    DWORD PTR es:[edi],dx
  41a28c:	ss and al,0x8e
  41a28f:	ss xchg edx,eax
  41a291:	pop    ebp
  41a292:	dec    ecx
  41a293:	xor    edi,DWORD PTR [eax+0x2ad120]
  41a299:	add    BYTE PTR [edx+edi*8],cl
  41a29c:	int    0xd9
  41a29e:	popa   
  41a29f:	pop    esi
  41a2a0:	xor    dl,al
  41a2a2:	cdq    
  41a2a3:	fld    QWORD PTR [edx]
  41a2a5:	dec    ebx
  41a2a6:	xlat   BYTE PTR ss:[ebx]
  41a2a8:	ficom  DWORD PTR [ecx+0x74101f48]
  41a2ae:	fidiv  WORD PTR [esi+0x73]
  41a2b1:	xor    BYTE PTR [ebx+0x66],0x2f
  41a2b5:	popf   
  41a2b6:	xlat   BYTE PTR ds:[ebx]
  41a2b7:	sbb    esi,DWORD PTR [esi]
  41a2b9:	aad    0xf3
  41a2bb:	xchg   BYTE PTR [edx+0x22e47f56],bl
  41a2c1:	fst    st(5)
  41a2c3:	repz fdivr QWORD PTR [ebx+0x239f6712]
  41a2ca:	je     0x41a2cb
  41a2cc:	and    DWORD PTR [ecx+0x14],esp
  41a2cf:	test   eax,0xf8b20acf
  41a2d4:	xor    dh,BYTE PTR [ebx-0x48]
  41a2d7:	mov    dl,0xea
  41a2d9:	fincstp 
  41a2db:	dec    eax
  41a2dc:	sub    eax,0x99cf57a8
  41a2e1:	jbe    0x41a324
  41a2e3:	icebp  
  41a2e4:	sbb    bh,BYTE PTR [edi-0x40]
  41a2e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a2e8:	mov    al,ds:0x6c8a8a07
  41a2ed:	fnstcw WORD PTR [esi]
  41a2ef:	mov    al,ds:0x882a8f4e
  41a2f4:	sbb    eax,0x8e960a0
  41a2f9:	pop    edx
  41a2fa:	test   ch,ch
  41a2fc:	fwait
  41a2fd:	add    BYTE PTR [edi+0x5bcb75ea],bl
  41a303:	mov    eax,ds:0x7cb76d46
  41a308:	fldcw  WORD PTR gs:[edx]
  41a30b:	and    esp,edx
  41a30d:	cwde   
  41a30e:	das    
  41a30f:	xlat   BYTE PTR ds:[ebx]
  41a310:	das    
  41a311:	(bad)  
  41a313:	sub    ch,BYTE PTR [edx+eax*2+0x88207c1]
  41a31a:	inc    ebx
  41a31b:	mov    DWORD PTR [ecx],ecx
  41a31d:	iret   
  41a31e:	dec    eax
  41a31f:	push   0x68156131
  41a324:	cmp    edx,DWORD PTR [edx]
  41a326:	pop    ecx
  41a327:	jno    0x41a2c3
  41a329:	jecxz  0x41a34d
  41a32b:	xchg   ecx,eax
  41a32c:	xchg   esi,eax
  41a32d:	mov    dh,0x52
  41a32f:	jbe    0x41a35f
  41a331:	mov    WORD PTR [eax+0x30],cs
  41a334:	add    esp,DWORD PTR [ecx+0x55]
  41a337:	scas   al,BYTE PTR es:[edi]
  41a338:	leave  
  41a339:	mov    bh,0xa6
  41a33b:	outs   dx,DWORD PTR ds:[esi]
  41a33c:	call   0x88a1:0xbaf04632
  41a343:	push   esi
  41a344:	ds mov edi,0xa470e767
  41a34a:	mov    al,cl
  41a34c:	out    dx,al
  41a34d:	fstp   DWORD PTR [esi-0x49]
  41a350:	xchg   esi,eax
  41a351:	push   edx
  41a352:	pop    edx
  41a353:	(bad)  
  41a354:	adc    bl,cl
  41a356:	dec    esi
  41a357:	dec    edi
  41a358:	lock inc eax
  41a35a:	dec    eax
  41a35b:	imul   esi,DWORD PTR [ebp-0x3f],0xfffffff2
  41a35f:	inc    esi
  41a360:	inc    edi
  41a361:	jmp    0x46040a86
  41a366:	mov    BYTE PTR [edi+0x1814541a],bh
  41a36c:	and    bl,BYTE PTR [eax-0x2633adfb]
  41a372:	ficomp DWORD PTR [eax+0x43]
  41a375:	js     0x41a355
  41a377:	xchg   esi,eax
  41a378:	xor    esi,DWORD PTR [eax+0xf]
  41a37b:	push   esp
  41a37c:	add    DWORD PTR ds:0x79eada48,ecx
  41a382:	cmp    edi,DWORD PTR [ebp+0x6946b4e6]
  41a388:	inc    ebp
  41a389:	adc    eax,DWORD PTR [ebx]
  41a38b:	xor    DWORD PTR [ebx],ebp
  41a38d:	xchg   ecx,eax
  41a38e:	test   al,0xff
  41a390:	aaa    
  41a391:	xchg   BYTE PTR [ebx+0x3f],cl
  41a394:	fimul  WORD PTR [eax-0x55f6d9e5]
  41a39a:	imul   eax,DWORD PTR [edi+0x52],0xffffffe8
  41a39e:	jo     0x41a34a
  41a3a0:	fsubr  QWORD PTR [ecx-0x4]
  41a3a3:	pop    ebx
  41a3a4:	pop    ecx
  41a3a5:	shr    DWORD PTR [ecx+0x65],cl
  41a3a8:	(bad)  
  41a3aa:	xchg   ebx,eax
  41a3ab:	inc    esi
  41a3ac:	xor    ebx,ecx
  41a3ae:	adc    DWORD PTR [ecx-0x181e94d1],0x184dd981
  41a3b8:	fs jmp 0x38d8:0x55bbc0e6
  41a3c0:	adc    al,0xa0
  41a3c2:	dec    eax
  41a3c3:	xchg   ecx,eax
  41a3c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a3c5:	imul   edi,ecx,0xffffffb9
  41a3c8:	(bad)  
  41a3c9:	jns    0x41a3b9
  41a3cb:	fcmovnbe st,st(2)
  41a3cd:	fxch   st(4)
  41a3cf:	add    DWORD PTR [ecx-0x1defc98f],esp
  41a3d5:	xchg   ebx,eax
  41a3d6:	cmp    ebp,DWORD PTR [ebx+edi*1-0x1d]
  41a3da:	inc    edi
  41a3db:	call   DWORD PTR ds:0xc5067016
  41a3e1:	mov    edi,0xa0f482cd
  41a3e6:	push   es
  41a3e7:	daa    
  41a3e8:	jmp    0x41a42e
  41a3ea:	jae    0x41a38b
  41a3ec:	and    BYTE PTR [esi-0x366730b8],bl
  41a3f2:	loop   0x41a3cb
  41a3f4:	mov    edx,0x4966ffd0
  41a3f9:	xor    bl,cl
  41a3fb:	sti    
  41a3fc:	and    eax,0x59c0d506
  41a401:	fsub   QWORD PTR [esi-0x4c]
  41a404:	mov    al,0x71
  41a406:	in     al,0xf9
  41a408:	dec    esi
  41a409:	push   eax
  41a40a:	and    edx,DWORD PTR [eax-0x5f]
  41a40d:	or     al,0x38
  41a40f:	or     DWORD PTR [bx],eax
  41a412:	pop    eax
  41a413:	jle    0x41a42f
  41a415:	(bad)  
  41a416:	fwait
  41a417:	out    0x10,al
  41a419:	dec    edx
  41a41a:	cdq    
  41a41b:	je     0x41a3d2
  41a41d:	fstp   DWORD PTR [esp+ecx*4+0x543b0edb]
  41a424:	jge    0x41a438
  41a426:	pop    edx
  41a427:	int    0x1d
  41a429:	test   ch,al
  41a42b:	or     eax,0xf1cd6875
  41a430:	inc    ebx
  41a431:	nop
  41a432:	imul   eax,DWORD PTR [esi-0x7e],0x79
  41a436:	sbb    eax,0x20d51868
  41a43b:	jp     0x41a423
  41a43d:	into   
  41a43e:	and    DWORD PTR [esi-0x209eb0e6],0xebaf4334
  41a448:	mov    bl,cl
  41a44a:	push   edi
  41a44b:	test   eax,0x37227e4e
  41a450:	mov    DWORD PTR [eax+eiz*4],esi
  41a453:	test   al,0x8e
  41a455:	cmp    cl,BYTE PTR [edi-0x16]
  41a458:	or     ah,BYTE PTR [edi-0x26c8c32a]
  41a45e:	in     eax,dx
  41a45f:	mov    eax,ds:0x52eac33e
  41a464:	inc    esp
  41a465:	outs   dx,BYTE PTR ds:[esi]
  41a466:	push   ebx
  41a467:	sbb    al,0xa9
  41a469:	jne    0x41a4b4
  41a46b:	jge    0x41a404
  41a46d:	mov    edx,esi
  41a46f:	pop    ecx
  41a470:	adc    eax,0x88e337da
  41a475:	jno    0x41a49d
  41a477:	cwde   
  41a478:	dec    ecx
  41a479:	jl     0x41a492
  41a47b:	pop    ebx
  41a47c:	add    BYTE PTR [esi+0x40f17249],ch
  41a482:	mov    bh,0xeb
  41a484:	imul   ebx,ecx,0xc999877
  41a48a:	stos   DWORD PTR es:[edi],eax
  41a48b:	shr    BYTE PTR [ebx+0x1f9ca16c],1
  41a491:	sub    al,0x4a
  41a493:	jno    0x41a50c
  41a495:	sbb    al,0xd0
  41a497:	push   ds
  41a498:	push   ebp
  41a499:	lds    eax,FWORD PTR [edx-0x3356ceaa]
  41a49f:	test   WORD PTR [ebx],dx
  41a4a2:	xlat   BYTE PTR ds:[ebx]
  41a4a3:	adc    BYTE PTR [edi-0x3fe7635f],0xb2
  41a4aa:	dec    eax
  41a4ab:	loopne 0x41a4da
  41a4ad:	xchg   ebp,esi
  41a4af:	inc    ebp
  41a4b0:	loopne 0x41a4b3
  41a4b2:	sub    BYTE PTR [edi+0x28],ah
  41a4b5:	or     dl,BYTE PTR [eax+0x57]
  41a4b8:	adc    al,0x11
  41a4ba:	push   es
  41a4bb:	mov    ebp,0xfb4854f4
  41a4c0:	inc    esi
  41a4c1:	test   BYTE PTR [edi-0x7881d4c4],ch
  41a4c7:	mov    cx,0xc8c7
  41a4cb:	imul   BYTE PTR [ecx]
  41a4cd:	out    0x87,al
  41a4cf:	xchg   ecx,eax
  41a4d0:	jge    0x41a4f2
  41a4d2:	sbb    eax,0xa6281a23
  41a4d7:	jmp    0xcef97eb8
  41a4dc:	pop    ebp
  41a4dd:	jne    0x41a462
  41a4df:	adc    BYTE PTR [esi+0x307aa924],ch
  41a4e5:	test   BYTE PTR [ecx+0x7b],cl
  41a4e8:	fsubr  DWORD PTR [ecx]
  41a4ea:	inc    ecx
  41a4eb:	sub    al,0x9a
  41a4ed:	(bad)  [edi]
  41a4ef:	pop    ebp
  41a4f0:	cmp    al,BYTE PTR [edi]
  41a4f2:	bound  esp,QWORD PTR [edx]
  41a4f4:	pop    ebx
  41a4f5:	add    cl,dl
  41a4f7:	cmp    DWORD PTR ds:0x5aa97ff6,ebp
  41a4fd:	call   0xb63ac890
  41a502:	ficom  DWORD PTR [edi-0x23]
  41a505:	mov    ds:0xb3b96719,al
  41a50a:	mov    esi,0xde31a63
  41a50f:	jb     0x41a56c
  41a511:	lss    bx,DWORD PTR [esi-0x27]
  41a516:	push   ss
  41a517:	aaa    
  41a518:	pop    eax
  41a519:	stos   DWORD PTR es:[edi],eax
  41a51a:	mov    edi,0x467ea92a
  41a51f:	inc    esi
  41a520:	(bad)  
  41a521:	out    0x5b,eax
  41a523:	pop    ds
  41a524:	sbb    dh,BYTE PTR [edi+0x32]
  41a527:	in     al,0x53
  41a529:	inc    esi
  41a52a:	mov    al,0x42
  41a52c:	rcr    esp,1
  41a52e:	mov    edx,0x95520cd7
  41a533:	ret    0xfca2
  41a536:	out    0xd5,al
  41a538:	(bad)  
  41a539:	ins    DWORD PTR es:[edi],dx
  41a53a:	inc    edi
  41a53b:	sbb    BYTE PTR [edx],dl
  41a53d:	sbb    al,0x48
  41a53f:	test   DWORD PTR [ebp-0x10],ebp
  41a542:	xchg   esi,eax
  41a543:	xor    al,0xc3
  41a545:	or     esp,edi
  41a547:	push   bp
  41a549:	out    dx,eax
  41a54a:	mov    eax,0x513d16b0
  41a54f:	jae    0x41a56b
  41a551:	push   esp
  41a552:	xor    ch,BYTE PTR [edx-0x2a]
  41a555:	les    edx,FWORD PTR [edi]
  41a557:	aam    0xb5
  41a559:	fnstcw WORD PTR [esi]
  41a55b:	cmc    
  41a55c:	es pop edi
  41a55e:	in     al,0xaf
  41a560:	dec    edx
  41a561:	cdq    
  41a562:	test   BYTE PTR [esi+0x6a488afd],dh
  41a568:	mov    ds:0xf02c5a12,eax
  41a56d:	cmp    BYTE PTR [ebx],dl
  41a56f:	addr16 mov bl,0x84
  41a572:	add    ch,BYTE PTR [edi]
  41a574:	sbb    bl,BYTE PTR [eax+0x76]
  41a577:	cmp    ecx,DWORD PTR [eax+esi*2]
  41a57a:	daa    
  41a57b:	adc    eax,0x9b13d984
  41a580:	or     esp,DWORD PTR [edi-0x38]
  41a583:	jbe    0x41a516
  41a585:	inc    edx
  41a586:	inc    ebp
  41a587:	sbb    DWORD PTR [eax+esi*2+0x48],esp
  41a58b:	das    
  41a58c:	mov    ds:0xe008c1e3,al
  41a591:	dec    esi
  41a592:	mov    ch,0x5c
  41a594:	sti    
  41a595:	pop    eax
  41a596:	mov    DWORD PTR [esi+0x53],esp
  41a599:	sbb    dh,ch
  41a59b:	jp     0x41a5d6
  41a59d:	mov    eax,ds:0xbe5afcb8
  41a5a2:	call   0x34b27496
  41a5a7:	or     edx,ecx
  41a5a9:	test   esp,ebp
  41a5ab:	addr16 push 0x69
  41a5ae:	fst    QWORD PTR [ecx-0x4b]
  41a5b1:	scas   al,BYTE PTR es:[edi]
  41a5b2:	or     esi,DWORD PTR [ebx]
  41a5b4:	scas   al,BYTE PTR es:[edi]
  41a5b5:	aad    0x48
  41a5b7:	inc    ecx
  41a5b8:	popa   
  41a5b9:	int    0x53
  41a5bb:	sub    BYTE PTR [edi-0x2b994e0a],cl
  41a5c1:	test   ecx,esi
  41a5c3:	lahf   
  41a5c4:	sbb    ch,dl
  41a5c6:	push   ebx
  41a5c7:	mov    bl,0x1c
  41a5c9:	retf   
  41a5ca:	lods   eax,DWORD PTR ds:[esi]
  41a5cb:	std    
  41a5cc:	add    al,0xda
  41a5ce:	pop    esp
  41a5cf:	sbb    al,0xdc
  41a5d1:	sbb    esi,esi
  41a5d3:	cmc    
  41a5d4:	inc    edi
  41a5d5:	mov    eax,0x50023a0c
  41a5da:	dec    ecx
  41a5db:	xchg   DWORD PTR [ebp+0x5],esp
  41a5de:	jno    0x41a5c6
  41a5e0:	and    ebp,eax
  41a5e2:	or     eax,DWORD PTR [edx]
  41a5e4:	(bad)  
  41a5e5:	jecxz  0x41a665
  41a5e7:	cmc    
  41a5e8:	fcomp  st(4)
  41a5ea:	call   0x23d1d7ee
  41a5ef:	arpl   WORD PTR [ebx+eax*1+0x4a],bp
  41a5f3:	icebp  
  41a5f4:	xchg   edx,eax
  41a5f5:	mov    ecx,0xe80a604c
  41a5fa:	mov    BYTE PTR [ecx-0x22],ah
  41a5fd:	jge    0x41a655
  41a5ff:	mov    DWORD PTR ds:0x1adc28b5,esp
  41a605:	out    dx,al
  41a606:	push   cs
  41a607:	retf   0x4217
  41a60a:	(bad)  
  41a60b:	ja     0x41a5a1
  41a60d:	(bad)  
  41a60f:	sbb    DWORD PTR [ebp+0x56],ecx
  41a612:	les    esp,FWORD PTR [esi]
  41a614:	dec    esp
  41a615:	add    DWORD PTR [ebx-0x7e],0x5948716d
  41a61c:	lea    esi,ds:0xa4ae954d
  41a622:	mov    esp,0x120a006d
  41a627:	retf   0xacfe
  41a62a:	jge    0x41a694
  41a62c:	and    edi,DWORD PTR [esi-0x261e3dc2]
  41a632:	repnz or BYTE PTR [edi+0x13],ch
  41a636:	arpl   WORD PTR [ebp-0x75],sp
  41a639:	shl    eax,1
  41a63b:	push   0xffffffce
  41a63d:	pop    ecx
  41a63e:	xchg   ecx,eax
  41a63f:	test   eax,0xf538ad99
  41a644:	cmp    DWORD PTR [ecx-0x42c672b8],0xeb3edbe
  41a64e:	or     ah,BYTE PTR [edi-0x3]
  41a651:	test   eax,0xf4289155
  41a656:	dec    ebx
  41a657:	jecxz  0x41a5d9
  41a659:	cdq    
  41a65a:	pop    ds
  41a65b:	adc    eax,0x97941e12
  41a660:	jb     0x41a68f
  41a662:	push   eax
  41a663:	je     0x41a61f
  41a665:	jbe    0x41a5f0
  41a667:	shl    BYTE PTR [ebx+0x44],cl
  41a66a:	retf   
  41a66b:	or     eax,0x176514c5
  41a670:	pop    ebp
  41a671:	xor    eax,0xd9b26f48
  41a676:	push   0xbfac39d7
  41a67b:	push   edi
  41a67c:	dec    esp
  41a67d:	mov    BYTE PTR [eax],ch
  41a67f:	sub    DWORD PTR [eax+0x7b],esi
  41a682:	dec    eax
  41a683:	cmp    al,0x48
  41a685:	fisub  DWORD PTR cs:[ecx+0xf]
  41a689:	dec    esi
  41a68a:	jnp    0x41a6f2
  41a68c:	mov    bh,0x2a
  41a68e:	pop    ebp
  41a68f:	cmc    
  41a690:	cmp    al,bl
  41a692:	sub    al,0x40
  41a694:	call   0x1b14:0xef13a370
  41a69b:	jne    0x41a6d0
  41a69d:	es stc 
  41a69f:	push   dx
  41a6a1:	(bad)  
  41a6a4:	and    eax,0x841989a9
  41a6a9:	pop    ecx
  41a6aa:	and    eax,0x8a54160
  41a6af:	cli    
  41a6b0:	clc    
  41a6b1:	mov    bl,0x42
  41a6b3:	jns    0x41a660
  41a6b5:	and    dh,ch
  41a6b7:	dec    bp
  41a6b9:	push   ss
  41a6ba:	pop    eax
  41a6bb:	cmp    ecx,ebp
  41a6bd:	sub    BYTE PTR [eax+0x29],cl
  41a6c0:	adc    al,0xbf
  41a6c2:	in     eax,0xa8
  41a6c4:	mov    ebp,0x78664af4
  41a6c9:	xor    al,0x31
  41a6cb:	xlat   BYTE PTR ds:[ebx]
  41a6cc:	and    DWORD PTR [esi+ebp*2+0x2e],ebp
  41a6d0:	push   esi
  41a6d1:	or     eax,0x82ff5be4
  41a6d6:	enter  0x2b6f,0x7f
  41a6da:	popa   
  41a6db:	data16 movs WORD PTR es:[edi],WORD PTR ds:[esi]
  41a6de:	sar    DWORD PTR [edi-0x3a03ddf6],cl
  41a6e4:	mov    edx,0xb97a4816
  41a6e9:	(bad)  
  41a6ea:	dec    ebp
  41a6eb:	into   
  41a6ec:	mov    bh,0x73
  41a6ee:	mov    WORD PTR [esi+0x21],fs
  41a6f1:	push   es
  41a6f2:	and    DWORD PTR [edx+0x5e8f0154],esi
  41a6f8:	pop    edi
  41a6f9:	popf   
  41a6fa:	mov    ah,dh
  41a6fc:	jmp    0x3cdb784a
  41a701:	xchg   esp,eax
  41a702:	dec    edx
  41a703:	addr16 cwde 
  41a705:	arpl   WORD PTR [eax+0x4eb4d6f4],bx
  41a70b:	pop    ebx
  41a70c:	inc    eax
  41a70d:	sub    al,0xf0
  41a70f:	addr16 cs aas 
  41a712:	push   ebx
  41a713:	rol    DWORD PTR [ebx+0x5266d9f7],cl
  41a719:	fstp   DWORD PTR [ecx-0x794c6567]
  41a71f:	jl     0x41a6d7
  41a721:	clc    
  41a722:	fisub  WORD PTR [ebp-0x77]
  41a725:	ja     0x41a772
  41a727:	lods   al,BYTE PTR ss:[esi]
  41a729:	mov    al,ds:0x1879ee4a
  41a72e:	js     0x41a73c
  41a730:	xchg   edi,eax
  41a731:	sub    edi,DWORD PTR es:[esi-0x7e]
  41a735:	mov    cl,0x1f
  41a737:	addr16 inc ecx
  41a739:	mov    edx,0x35ae68e9
  41a73e:	dec    ecx
  41a73f:	lock imul esi,DWORD PTR [eax],0xda1245be
  41a746:	addr16 loop 0x41a6db
  41a749:	cwde   
  41a74a:	dec    edi
  41a74b:	loopne 0x41a78e
  41a74d:	jecxz  0x41a72d
  41a74f:	dec    esp
  41a750:	mov    ah,0x23
  41a752:	push   ecx
  41a753:	sbb    ch,BYTE PTR [ebp+0x17673743]
  41a759:	not    DWORD PTR [ecx]
  41a75b:	(bad)
  41a75e:	lods   al,BYTE PTR ds:[esi]
  41a75f:	shl    BYTE PTR [esi+0x21b18406],cl
  41a765:	sub    esp,edi
  41a767:	cmp    DWORD PTR [ecx+ebx*1-0x29c2b681],0xba1c7f28
  41a772:	nop
  41a773:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41a775:	out    dx,al
  41a776:	popa   
  41a777:	xchg   ebx,eax
  41a778:	sbb    ch,BYTE PTR [edi+ebp*2]
  41a77b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a77c:	push   esi
  41a77d:	pusha  
  41a77e:	push   ecx
  41a77f:	into   
  41a780:	neg    ecx
  41a782:	mov    ch,0x82
  41a784:	push   ds
  41a785:	jmp    0x5d0cba4b
  41a78a:	out    dx,eax
  41a78b:	rol    BYTE PTR ds:0x9e5f4832,1
  41a791:	fs aaa 
  41a793:	push   es
  41a794:	mov    ax,0x66fe
  41a798:	outs   dx,DWORD PTR ds:[esi]
  41a799:	sub    al,0xc4
  41a79b:	in     eax,0x1c
  41a79d:	shl    dh,0xe8
  41a7a0:	out    0xcd,al
  41a7a2:	cmp    dh,al
  41a7a4:	(bad)  
  41a7a5:	hlt    
  41a7a6:	imul   eax,DWORD PTR [esi-0x5a],0xffffffd1
  41a7aa:	shl    BYTE PTR [esi-0x4],1
  41a7ad:	test   al,0x83
  41a7af:	lea    ebx,[edx]
  41a7b1:	in     eax,dx
  41a7b2:	sbb    al,0x13
  41a7b4:	mov    eax,0xa89ab6a0
  41a7b9:	fst    DWORD PTR [esi-0x369b209e]
  41a7bf:	jl     0x41a760
  41a7c1:	dec    ebx
  41a7c2:	ret    0x1a4c
  41a7c5:	xor    al,BYTE PTR [edx-0x2e]
  41a7c8:	outs   dx,BYTE PTR ds:[esi]
  41a7c9:	dec    edx
  41a7ca:	outs   dx,BYTE PTR ds:[esi]
  41a7cb:	push   es
  41a7cc:	enter  0x6acf,0x11
  41a7d0:	and    DWORD PTR [eax+eiz*1+0x67],ecx
  41a7d4:	adc    DWORD PTR [ecx+0x79],edx
  41a7d7:	sub    ebx,DWORD PTR [edx]
  41a7d9:	inc    eax
  41a7da:	xor    al,0x54
  41a7dc:	ret    0xed
  41a7df:	sbb    ebp,0x4b
  41a7e2:	adc    al,0x23
  41a7e4:	call   0xf32036e0
  41a7e9:	fnstenv [esi-0x60]
  41a7ec:	imul   esp,DWORD PTR [edi],0x41a4bd9
  41a7f2:	out    dx,al
  41a7f3:	jnp    0x41a789
  41a7f5:	movsx  edi,BYTE PTR [si-0x5be9]
  41a7fb:	dec    ebp
  41a7fc:	sbb    ch,BYTE PTR [edx-0x21]
  41a7ff:	call   0x99444d16
  41a804:	dec    BYTE PTR [edi]
  41a806:	pop    ss
  41a807:	into   
  41a808:	push   ss
  41a809:	xor    cl,BYTE PTR [ecx+0x37]
  41a80c:	dec    edi
  41a80d:	pop    esp
  41a80e:	push   edi
  41a80f:	es jmp 0x47ac:0xc08567d9
  41a817:	imul   esi,DWORD PTR [esi+0x1a],0xa61af30a
  41a81e:	inc    edx
  41a81f:	cmp    DWORD PTR [edi+eiz*8],0xd9dd4105
  41a826:	inc    ebx
  41a827:	mov    ah,0x93
  41a829:	sub    ecx,ebx
  41a82b:	push   es
  41a82c:	mov    dh,0xa2
  41a82e:	add    eax,0x4b98476b
  41a833:	(bad)  
  41a835:	pop    ecx
  41a836:	add    al,0x3e
  41a838:	shl    edi,1
  41a83a:	pop    edx
  41a83b:	ret    0x4414
  41a83e:	cmp    al,0x63
  41a840:	push   edx
  41a841:	imul   ebp,DWORD PTR [eax+0x37e61a3c],0xa938bc10
  41a84b:	cs jge 0x41a82e
  41a84e:	dec    ecx
  41a84f:	ror    cl,0x27
  41a852:	bound  esi,QWORD PTR [eax-0x2920259e]
  41a858:	sbb    eax,0x3e9376ce
  41a85d:	in     eax,0x3a
  41a85f:	jne    0x41a831
  41a861:	and    ch,dh
  41a863:	push   esi
  41a864:	and    ah,BYTE PTR [edi]
  41a866:	and    ch,BYTE PTR [esi-0x2a]
  41a869:	pop    ecx
  41a86a:	cmc    
  41a86b:	sub    eax,0x49410861
  41a870:	je     0x41a8b4
  41a872:	dec    eax
  41a873:	xchg   ebx,eax
  41a874:	hlt    
  41a875:	fsubr  QWORD PTR [ebx+0x34]
  41a878:	(bad)  
  41a87a:	mul    BYTE PTR [esi-0x61]
  41a87d:	mov    ebp,0x7828bb4d
  41a882:	les    ecx,FWORD PTR [esi+0x23]
  41a885:	sbb    DWORD PTR [eax+0x35],ebx
  41a888:	retf   
  41a889:	add    eax,0xe88a6ad8
  41a88e:	inc    ebx
  41a88f:	pop    ecx
  41a890:	mov    DWORD PTR [edx],edx
  41a892:	mov    edi,0xa86d9506
  41a897:	push   esp
  41a898:	and    DWORD PTR [esi],esp
  41a89a:	retf   
  41a89b:	iret   
  41a89c:	sbb    ah,0x7c
  41a89f:	pushf  
  41a8a0:	inc    edi
  41a8a1:	sbb    ch,al
  41a8a3:	in     al,0x63
  41a8a5:	js     0x41a89a
  41a8a7:	data16 jne 0x41a82d
  41a8aa:	pop    esp
  41a8ab:	cdq    
  41a8ac:	sub    DWORD PTR [edi+0x1e],ebx
  41a8af:	push   ebx
  41a8b0:	dec    edx
  41a8b1:	fld    DWORD PTR [eax+eax*2]
  41a8b4:	pop    eax
  41a8b5:	jo     0x41a8ed
  41a8b7:	fsubr  QWORD PTR ds:[esi+edi*1]
  41a8bb:	addr16 jmp 0xaa18:0xaa6ce787
  41a8c3:	leave  
  41a8c4:	mov    al,0x1b
  41a8c6:	dec    eax
  41a8c7:	rcl    BYTE PTR [ecx],1
  41a8c9:	or     al,0x96
  41a8cb:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41a8cd:	or     BYTE PTR [esi+0x5d5a1966],al
  41a8d3:	sbb    al,BYTE PTR ds:[edx+0x1fc23924]
  41a8da:	add    ah,ch
  41a8dc:	enter  0xdef6,0x13
  41a8e0:	inc    esp
  41a8e1:	pushf  
  41a8e2:	sub    eax,0x7bc87dd7
  41a8e7:	adc    dl,bh
  41a8e9:	sub    eax,0x9c152d0
  41a8ee:	dec    eax
  41a8ef:	fistp  DWORD PTR [eax+edi*2-0x1893bd0d]
  41a8f6:	jmp    0x41a942
  41a8f8:	out    dx,al
  41a8f9:	pusha  
  41a8fa:	cmc    
  41a8fb:	push   ss
  41a8fc:	mov    ds:0x1b40a7f5,al
  41a901:	sub    al,0xd7
  41a903:	push   eax
  41a904:	xchg   edi,eax
  41a905:	inc    ebp
  41a906:	loope  0x41a8e1
  41a908:	jnp    0x41a8c9
  41a90a:	adc    edx,esp
  41a90c:	daa    
  41a90d:	fld    DWORD PTR [edi]
  41a90f:	clc    
  41a910:	idiv   ah
  41a912:	pusha  
  41a913:	pop    edi
  41a914:	mov    BYTE PTR [esi],bh
  41a916:	out    0x58,eax
  41a918:	add    al,0x43
  41a91a:	dec    eax
  41a91b:	sar    DWORD PTR [ecx],0xcf
  41a91e:	mov    edx,0x53d94054
  41a923:	push   esp
  41a924:	mov    dh,0x17
  41a926:	sbb    al,0xeb
  41a928:	sar    DWORD PTR [esi+edi*4+0x48a27471],cl
  41a92f:	ds sub al,0x2e
  41a932:	mov    eax,0x9cbedd9
  41a937:	test   DWORD PTR [esi],esi
  41a939:	or     eax,0xd5a7e6bf
  41a93e:	push   edi
  41a93f:	or     al,0x40
  41a941:	cmp    BYTE PTR [esi+edi*2+0x1a],al
  41a945:	js     0x41a8e7
  41a947:	daa    
  41a948:	fisttp QWORD PTR [esp+eiz*8-0xa5e374]
  41a94f:	data16 or cl,bl
  41a952:	dec    ebx
  41a953:	sbb    BYTE PTR [edx],0x81
  41a956:	sbb    bh,0x9
  41a959:	ror    BYTE PTR [eax],1
  41a95b:	sub    al,0x87
  41a95d:	loopne 0x41a99a
  41a95f:	or     bh,BYTE PTR [ebx]
  41a961:	cs jg  0x41a9d2
  41a964:	xor    al,0xab
  41a966:	test   bh,ah
  41a968:	jne    0x41a918
  41a96a:	mov    al,0x32
  41a96c:	push   esp
  41a96d:	sbb    BYTE PTR [edi+eiz*4+0x1a],ah
  41a971:	sub    ah,ah
  41a973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a974:	in     eax,0xbb
  41a976:	dec    esi
  41a977:	aam    0x86
  41a979:	jmp    0xd931:0x349766ca
  41a980:	sbb    bh,BYTE PTR [edx+0x590abef7]
  41a986:	jae    0x41a97a
  41a988:	push   ebp
  41a989:	fld    DWORD PTR [edi+0x6ad64cf]
  41a98f:	test   BYTE PTR [ecx-0x72ac124b],ch
  41a995:	mov    eax,ds:0x8317cd48
  41a99a:	fdivr  DWORD PTR [edi+0x6db30e83]
  41a9a0:	xlat   BYTE PTR ds:[ebx]
  41a9a1:	stc    
  41a9a2:	das    
  41a9a3:	mov    ds:0x84aa225a,al
  41a9a8:	adc    edi,DWORD PTR [eax+0x48]
  41a9ab:	stos   BYTE PTR es:[edi],al
  41a9ac:	addr16 rol ecx,cl
  41a9af:	shr    dl,cl
  41a9b1:	cwde   
  41a9b2:	aam    0x9e
  41a9b4:	outs   dx,DWORD PTR ds:[esi]
  41a9b5:	fsubr  QWORD PTR [ebp+0x52]
  41a9b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9ba:	lods   eax,DWORD PTR ds:[esi]
  41a9bb:	out    dx,eax
  41a9bc:	mov    DWORD PTR [ebp-0x7ded911],edx
  41a9c2:	cwde   
  41a9c3:	xor    BYTE PTR [esi+edx*8],cl
  41a9c6:	or     cl,BYTE PTR [edx-0x5d1728df]
  41a9cc:	fisubr DWORD PTR [eax+0x61268359]
  41a9d2:	cmc    
  41a9d3:	out    0xec,al
  41a9d5:	retf   0x196
  41a9d8:	ss data16 xor al,0x8e
  41a9dc:	aam    0xe7
  41a9de:	repnz pop ds
  41a9e0:	mov    bh,0xf9
  41a9e2:	fnstcw WORD PTR [ebx]
  41a9e4:	jmp    0x41a97a
  41a9e6:	cld    
  41a9e7:	jl     0x41a9a4
  41a9e9:	mov    bh,0x8e
  41a9eb:	test   al,dl
  41a9ed:	sbb    ecx,edx
  41a9ef:	inc    esp
  41a9f0:	daa    
  41a9f1:	cld    
  41a9f2:	push   es
  41a9f3:	xchg   ebp,eax
  41a9f4:	pop    ecx
  41a9f5:	xchg   edx,eax
  41a9f6:	pushf  
  41a9f7:	push   cs
  41a9f8:	les    ebx,FWORD PTR [edi+0x2f4966ee]
  41a9fe:	push   DWORD PTR [ebp+0x66dfe835]
  41aa04:	ins    DWORD PTR es:[edi],dx
  41aa05:	std    
  41aa06:	dec    esi
  41aa07:	lea    ebx,ds:0xb0545ec8
  41aa0d:	test   BYTE PTR [edi-0x7e341e62],0x56
  41aa14:	in     eax,0xbd
  41aa16:	fld    QWORD PTR [esi]
  41aa18:	fsub   QWORD PTR [ecx-0x5fd48d2]
  41aa1e:	ret    0x1a6f
  41aa21:	ret    
  41aa22:	mov    ds:0x9caef7f7,eax
  41aa27:	adc    DWORD PTR [ecx],esi
  41aa29:	out    dx,eax
  41aa2a:	shl    BYTE PTR [esi+0x1a],0x66
  41aa2e:	retf   
  41aa2f:	lds    eax,FWORD PTR [ecx+0x2c40caa]
  41aa35:	in     eax,0x74
  41aa37:	fnstenv [ebx]
  41aa39:	fcom   DWORD PTR [ebp+0x1e]
  41aa3c:	outs   dx,DWORD PTR ds:[esi]
  41aa3d:	ins    BYTE PTR es:[edi],dx
  41aa3e:	enter  0x1a0d,0x87
  41aa42:	cmp    ebp,DWORD PTR [eax+0x59]
  41aa45:	add    eax,DWORD PTR [edi]
  41aa47:	retf   
  41aa48:	xor    eax,0x65253cd9
  41aa4d:	dec    edx
  41aa4f:	jle    0x41aa0b
  41aa51:	jp     0x41aa3e
  41aa53:	lds    ebp,FWORD PTR [esi+edx*4+0x3384e684]
  41aa5a:	(bad)  
  41aa5c:	mov    ecx,DWORD PTR [ebx-0x2b]
  41aa5f:	jne    0x41aa05
  41aa61:	cli    
  41aa62:	jmp    0x1cc89ecd
  41aa67:	sub    eax,0xa1384e29
  41aa6c:	rcr    ah,1
  41aa6e:	test   DWORD PTR [esp+eiz*2],esi
  41aa71:	cmp    DWORD PTR [ebx+esi*8],0x39a9c601
  41aa78:	iret   
  41aa79:	pop    eax
  41aa7a:	and    BYTE PTR [esi+0x3],0x30
  41aa7e:	(bad)  
  41aa7f:	cli    
  41aa80:	(bad)  
  41aa81:	jae    0x41aa5e
  41aa83:	push   ds
  41aa84:	outs   dx,BYTE PTR ds:[esi]
  41aa85:	cmp    ecx,DWORD PTR [eax+0x7b]
  41aa88:	lock in al,dx
  41aa8a:	daa    
  41aa8b:	pop    edx
  41aa8c:	push   0x5366b754
  41aa91:	and    DWORD PTR [eax+0x3f2c1bfe],esi
  41aa97:	xchg   BYTE PTR [ebx-0x4d],al
  41aa9a:	sub    ecx,DWORD PTR [ebx]
  41aa9c:	dec    eax
  41aa9d:	fst    DWORD PTR [ecx-0x3b]
  41aaa0:	ror    BYTE PTR [edx+edi*2-0x39],0xaa
  41aaa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aaa6:	cmp    esp,DWORD PTR [eax+0x3d]
  41aaa9:	or     BYTE PTR [eax-0x7c],0x59
  41aaad:	mov    dl,0x3f
  41aaaf:	xchg   ebp,eax
  41aab0:	push   ebp
  41aab1:	loope  0x41aa7c
  41aab3:	add    WORD PTR [edx+eax*4-0x878f9d4],si
  41aabb:	mov    edi,0xee481fa3
  41aac0:	sub    ebx,ebp
  41aac2:	xor    BYTE PTR [eax],ah
  41aac4:	mov    eax,ds:0xb883d96b
  41aac9:	or     DWORD PTR [ebp+0x66],edi
  41aacc:	mov    al,0xe7
  41aace:	addr16 ss jno 0x41aa88
  41aad2:	pusha  
  41aad3:	adc    al,0x1d
  41aad5:	not    BYTE PTR ds:0xa4201e35
  41aadb:	dec    esi
  41aadc:	out    0xb2,eax
  41aade:	bound  esp,QWORD PTR [edi+0x31]
  41aae1:	dec    ecx
  41aae2:	enter  0x1aee,0x1c
  41aae6:	mov    esi,0xb5e3dc7
  41aaeb:	add    bl,BYTE PTR [ebx+0x48060bd9]
  41aaf1:	inc    esi
  41aaf2:	(bad)  
  41aaf3:	cmp    al,0x1c
  41aaf5:	add    al,0x7b
  41aaf7:	dec    ecx
  41aaf8:	sar    BYTE PTR [edx+0x49b6ae48],cl
  41aafe:	pusha  
  41aaff:	jnp    0x41aace
  41ab01:	fistp  WORD PTR [eax]
  41ab03:	addr16 push ds
  41ab05:	xor    DWORD PTR [ecx+0x53],edx
  41ab08:	cli    
  41ab09:	pop    esp
  41ab0a:	jecxz  0x41aad9
  41ab0c:	push   ebp
  41ab0d:	aas    
  41ab0e:	mov    edi,0x9d8333af
  41ab13:	out    0x22,eax
  41ab15:	icebp  
  41ab16:	cmp    bl,ah
  41ab18:	xchg   esi,eax
  41ab19:	fnstcw WORD PTR [edi]
  41ab1b:	xchg   esi,eax
  41ab1c:	cmc    
  41ab1d:	xor    cl,0xf1
  41ab20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab21:	out    dx,eax
  41ab22:	int3   
  41ab23:	mov    ebp,0x4fb9ea1a
  41ab28:	fisubr WORD PTR [edi+0x14291406]
  41ab2e:	adc    BYTE PTR [ebx+0x56],ch
  41ab31:	mov    ds:0xd9a8aa2c,al
  41ab36:	pop    esi
  41ab37:	cmp    ecx,edi
  41ab39:	xor    edx,DWORD PTR [eax]
  41ab3b:	int3   
  41ab3c:	sbb    ecx,DWORD PTR [edi]
  41ab3e:	(bad)  
  41ab3f:	outs   dx,BYTE PTR ds:[esi]
  41ab40:	or     BYTE PTR [ecx-0x3b0d4a11],ch
  41ab46:	inc    ecx
  41ab47:	test   DWORD PTR [esi],esi
  41ab49:	sub    al,0x3d
  41ab4b:	addr16 pop ss
  41ab4d:	xchg   ebp,eax
  41ab4e:	jo     0x41ab8c
  41ab50:	sbb    dh,BYTE PTR [ebx+eiz*1-0x40]
  41ab54:	push   0x57ead126
  41ab59:	fldcw  WORD PTR [edi-0x18b567c2]
  41ab5f:	mov    ah,BYTE PTR ds:0x5d6be686
  41ab65:	fisttp DWORD PTR [eax+0x62]
  41ab68:	xchg   esi,eax
  41ab69:	inc    ebx
  41ab6a:	jno    0x41abbf
  41ab6c:	jp     0x41ab77
  41ab6e:	mov    dh,0x28
  41ab70:	stos   BYTE PTR es:[edi],al
  41ab71:	(bad)  
  41ab72:	stos   BYTE PTR es:[edi],al
  41ab73:	retf   0xdc21
  41ab76:	xchg   ecx,eax
  41ab77:	mov    esp,0xa966be4f
  41ab7c:	mov    ah,0xb9
  41ab7e:	jp     0x41abce
  41ab80:	cmc    
  41ab81:	fnstenv [ebx+edi*1+0x52]
  41ab85:	pop    eax
  41ab86:	xchg   esp,eax
  41ab87:	jmp    0xbc07:0xe96166e4
  41ab8e:	push   edi
  41ab8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab90:	rcl    BYTE PTR [esi-0x2f22944d],1
  41ab96:	or     BYTE PTR [esi+0x74aaa0d6],bl
  41ab9c:	cmp    al,BYTE PTR [ecx]
  41ab9e:	mov    eax,0xf1f9c991
  41aba3:	inc    ebp
  41aba4:	popa   
  41aba5:	mov    ecx,0xf2b9e348
  41abaa:	push   edx
  41abab:	push   edx
  41abac:	mov    eax,0x1a95f6c9
  41abb1:	push   ds
  41abb2:	mov    eax,0x7361110d
  41abb7:	dec    eax
  41abb8:	fstp   st(1)
  41abba:	xchg   DWORD PTR [esi+0xc],edi
  41abbd:	mov    ecx,0x3ae407ed
  41abc2:	aad    0xa3
  41abc4:	lods   al,BYTE PTR ds:[esi]
  41abc5:	cld    
  41abc6:	inc    edi
  41abc7:	mov    edx,0x3cbbce22
  41abcc:	fsub   DWORD PTR [ecx]
  41abce:	ret    0xb26a
  41abd1:	pop    ecx
  41abd2:	arpl   WORD PTR [eax],bp
  41abd4:	retf   
  41abd5:	repz mov dh,BYTE PTR [ecx+0x51486d79]
  41abdc:	or     al,0xbd
  41abde:	test   al,bh
  41abe0:	(bad)  
  41abe1:	and    DWORD PTR fs:[ecx-0x1b37d4bc],0xffffffea
  41abe9:	mov    ch,0x6e
  41abeb:	ds jne 0x41ac47
  41abee:	sub    BYTE PTR [ebp-0x23],0x17
  41abf2:	adc    ebx,DWORD PTR [eax+0x74d5d982]
  41abf8:	push   edx
  41abf9:	add    al,BYTE PTR [ecx+0x3b]
  41abfc:	mov    WORD PTR ds:[esi+0x2a],fs
  41ac00:	imul   ebx,ecx,0x91187793
  41ac06:	xor    BYTE PTR [edi],dl
  41ac08:	ror    BYTE PTR [edi-0x78],cl
  41ac0b:	sub    eax,0x6e02b315
  41ac10:	mov    esi,0xaf9face9
  41ac15:	jo     0x41abc2
  41ac17:	push   0xffffffa1
  41ac19:	inc    ebx
  41ac1a:	dec    eax
  41ac1b:	scas   al,BYTE PTR es:[edi]
  41ac1c:	or     dl,ah
  41ac1e:	jo     0x41abf7
  41ac20:	push   esp
  41ac21:	and    al,0x52
  41ac23:	je     0x41ac26
  41ac25:	or     dh,BYTE PTR [ebx]
  41ac27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac28:	imul   edi,DWORD PTR [ecx+0x2c],0x114ef65e
  41ac2f:	fwait
  41ac30:	pop    eax
  41ac31:	cmp    al,0x48
  41ac33:	shl    DWORD PTR [edi-0xfa75381],1
  41ac39:	fiadd  WORD PTR [edi+eiz*2]
  41ac3c:	adc    esp,DWORD PTR [ebx+esi*1-0x72]
  41ac40:	sbb    dh,BYTE PTR [edi-0x71]
  41ac43:	cmpps  xmm7,XMMWORD PTR [ecx],0x80
  41ac47:	outs   dx,BYTE PTR ds:[esi]
  41ac48:	leave  
  41ac49:	fstp   DWORD PTR [edi-0x3]
  41ac4c:	cmp    bh,0xba
  41ac4f:	push   eax
  41ac50:	mov    al,0x42
  41ac52:	(bad)
  41ac55:	aad    0x3c
  41ac57:	xor    dh,BYTE PTR [edi]
  41ac59:	mov    ds:0x3a89670e,eax
  41ac5e:	mov    ecx,DWORD PTR [esi+0x66c90900]
  41ac64:	mov    ebx,0x312453cd
  41ac69:	rcr    BYTE PTR [ecx-0x5a0fe51a],cl
  41ac6f:	cmc    
  41ac70:	loopne 0x41aca0
  41ac72:	stos   DWORD PTR es:[edi],eax
  41ac73:	xor    DWORD PTR [esp+edi*4-0x62],0x66
  41ac78:	push   edi
  41ac79:	jmp    0x41ace9
  41ac7b:	stos   DWORD PTR es:[edi],eax
  41ac7c:	xchg   esi,eax
  41ac7d:	jns    0x41acb2
  41ac7f:	into   
  41ac80:	clc    
  41ac81:	dec    edi
  41ac82:	dec    eax
  41ac83:	aas    
  41ac84:	cli    
  41ac85:	mov    esi,0x7eae2744
  41ac8a:	(bad)  
  41ac8b:	shr    WORD PTR [ebx+0x741add5e],cl
  41ac92:	in     al,0x41
  41ac94:	cwde   
  41ac95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac96:	and    BYTE PTR [ecx],dh
  41ac98:	add    ch,bl
  41ac9a:	cmp    cl,BYTE PTR [eax-0x448821f4]
  41aca0:	cli    
  41aca1:	push   ecx
  41aca2:	cld    
  41aca3:	xor    DWORD PTR [edx],ebx
  41aca5:	jecxz  0x41aca5
  41aca7:	mov    edx,0x3be05367
  41acac:	imul   ebx,ecx,0x73
  41acaf:	clc    
  41acb0:	cld    
  41acb1:	je     0x41ac84
  41acb3:	jle    0x41ad17
  41acb5:	or     DWORD PTR [esi+0x480114a0],esp
  41acbb:	test   DWORD PTR [ebx+0x67d8a882],0x21672902
  41acc5:	mov    ebx,0xcd8cf0fa
  41acca:	mul    ebx
  41accc:	sbb    cl,BYTE PTR [edi+0x519c023c]
  41acd2:	inc    edi
  41acd3:	or     al,0x7d
  41acd5:	fstp   DWORD PTR [eax+esi*1]
  41acd8:	push   es
  41acd9:	pushf  
  41acda:	pop    ebx
  41acdb:	idiv   ebx
  41acdd:	or     al,0x45
  41acdf:	pop    eax
  41ace0:	sbb    al,BYTE PTR [ebx+0x0]
  41ace3:	jmp    0xd4605636
  41ace8:	jbe    0x41acc5
  41acea:	pop    esi
  41aceb:	mov    esi,0x43c0bfca
  41acf0:	cli    
  41acf1:	fdiv   QWORD PTR ds:0x49881f61
  41acf7:	inc    dh
  41acf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acfa:	(bad)  
  41acfb:	in     al,dx
  41acfc:	hlt    
  41acfd:	fstp   DWORD PTR [ebx+0x12]
  41ad00:	arpl   WORD PTR ds:[edx+esi*8+0x35],di
  41ad05:	in     eax,dx
  41ad06:	jecxz  0x41ad35
  41ad08:	add    al,0x6d
  41ad0a:	(bad)  [ebp-0x2d9866e1]
  41ad10:	inc    eax
  41ad11:	mov    dh,0x45
  41ad13:	bndldx bnd0,[ebx]
  41ad16:	mov    ds:0xe6f24c09,al
  41ad1b:	shl    dl,1
  41ad1d:	(bad)  
  41ad1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad20:	push   edx
  41ad21:	fadd   QWORD PTR [edi]
  41ad23:	stos   BYTE PTR es:[edi],al
  41ad24:	pushf  
  41ad25:	(bad)  
  41ad26:	mov    ebp,0xb9766a77
  41ad2b:	mov    BYTE PTR [esi],dh
  41ad2d:	adc    BYTE PTR [ebx],al
  41ad2f:	ins    DWORD PTR es:[edi],dx
  41ad30:	and    eax,0x5c07c3b6
  41ad35:	retf   0x66c0
  41ad38:	jle    0x41ad13
  41ad3a:	xlat   BYTE PTR ds:[ebx]
  41ad3b:	mov    ds:0x590a2c65,eax
  41ad40:	aas    
  41ad41:	pop    es
  41ad42:	mov    al,ds:0x47f0378e
  41ad47:	(bad)  
  41ad48:	jno    0x41ad0f
  41ad4a:	push   es
  41ad4b:	in     eax,0xfe
  41ad4d:	adc    ecx,ebx
  41ad4f:	data16 lods al,BYTE PTR ds:[esi]
  41ad51:	jmp    FWORD PTR cs:[edx]
  41ad54:	sbb    ah,BYTE PTR [ebp+0x39]
  41ad57:	shr    DWORD PTR [ecx-0x28],0x53
  41ad5b:	test   eax,0xb3b9dbd7
  41ad60:	dec    edi
  41ad61:	cmp    DWORD PTR [eax-0x76367d16],esp
  41ad67:	add    bl,BYTE PTR [edx]
  41ad69:	retf   
  41ad6a:	mov    dh,0xc4
  41ad6c:	sub    DWORD PTR [edi],ebp
  41ad6e:	and    eax,0x2f82efd
  41ad73:	les    ecx,FWORD PTR [edx+0x60]
  41ad76:	mov    edi,0xcb7a0f6a
  41ad7b:	inc    esp
  41ad7c:	shr    bh,cl
  41ad7e:	mov    eax,0x56c13e60
  41ad83:	mov    esi,esp
  41ad85:	pop    ecx
  41ad86:	mov    bl,0x8f
  41ad88:	outs   dx,DWORD PTR ds:[esi]
  41ad89:	cmp    al,0xcb
  41ad8b:	das    
  41ad8c:	mov    ebp,0x47a1277f
  41ad91:	dec    esp
  41ad92:	dec    ebx
  41ad93:	cmp    eax,DWORD PTR [edx]
  41ad95:	push   ss
  41ad96:	ja     0x41adc5
  41ad98:	sbb    dl,BYTE PTR [ebx]
  41ad9a:	(bad)  
  41ad9b:	sbb    ebx,edi
  41ad9d:	das    
  41ad9e:	or     DWORD PTR ds:0xb228ebef,edx
  41ada4:	sub    edi,esp
  41ada6:	fst    st(0)
  41ada8:	mov    ebx,0xebaead00
  41adad:	cdq    
  41adae:	cmp    al,0x32
  41adb0:	sbb    dl,ah
  41adb2:	rcl    BYTE PTR [edx-0x3b553054],1
  41adb8:	mov    cl,0xdc
  41adba:	jl     0x41ae1b
  41adbc:	sbb    eax,0xfa5a370c
  41adc1:	jne    0x41adb3
  41adc3:	mov    eax,ds:0xcbf5f31a
  41adc8:	jnp    0x41add7
  41adca:	enter  0x8c32,0x4d
  41adce:	jns    0x41ae4a
  41add0:	cmp    eax,0x66e3710
  41add5:	stos   BYTE PTR es:[edi],al
  41add6:	lds    ecx,FWORD PTR [edx-0x15]
  41add9:	sahf   
  41adda:	out    0x3e,al
  41addc:	sbb    bh,BYTE PTR [edi+0x34]
  41addf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade0:	xchg   BYTE PTR [eax-0x2666a0a4],bh
  41ade6:	and    eax,0x6d
  41ade9:	push   ss
  41adea:	scas   eax,DWORD PTR es:[edi]
  41adeb:	mov    ebp,0xaa737163
  41adf0:	cs loopne 0x41ae3d
  41adf3:	lods   al,BYTE PTR ds:[esi]
  41adf4:	inc    eax
  41adf5:	cdq    
  41adf6:	fdivr  QWORD PTR [ebp+0xf]
  41adf9:	loope  0x41ae08
  41adfb:	sbb    bh,BYTE PTR [eax]
  41adfd:	sbb    bh,BYTE PTR [ecx]
  41adff:	push   ss
  41ae00:	push   cs
  41ae01:	jecxz  0x41ade8
  41ae03:	sbb    bh,BYTE PTR ss:[ecx+0xbdb6a8b]
  41ae0a:	xchg   edi,eax
  41ae0b:	sub    eax,DWORD PTR [ebx-0x43]
  41ae0e:	mov    edx,0xaf9f1fb0
  41ae13:	imul   esi,DWORD PTR [esi+0xc],0x86335fd2
  41ae1a:	xor    BYTE PTR [ecx],dl
  41ae1c:	retf   0x4815
  41ae1f:	ret    
  41ae20:	popf   
  41ae21:	or     al,cl
  41ae23:	sbb    esi,edi
  41ae25:	mov    BYTE PTR [ebx+0x66],dh
  41ae28:	push   ecx
  41ae29:	inc    esi
  41ae2a:	add    al,0xa
  41ae2c:	sbb    ch,BYTE PTR [ebx+0x4ad2a59c]
  41ae32:	and    bh,BYTE PTR [ecx+0x1]
  41ae35:	fucomp st(5)
  41ae37:	loop   0x41ae35
  41ae39:	dec    esp
  41ae3a:	or     BYTE PTR [edx-0x47],ah
  41ae3d:	lods   eax,DWORD PTR ds:[esi]
  41ae3e:	dec    edi
  41ae3f:	sahf   
  41ae40:	mov    WORD PTR [esi],?
  41ae42:	sti    
  41ae43:	out    0x1a,al
  41ae45:	add    ah,cl
  41ae47:	jb     0x41ae20
  41ae49:	push   esi
  41ae4a:	xor    eax,ebp
  41ae4c:	xchg   ebp,eax
  41ae4d:	fstp   DWORD PTR [ebp-0x47]
  41ae50:	jns    0x41ae07
  41ae52:	mov    ah,0xa
  41ae54:	mov    cl,0x32
  41ae56:	or     eax,0x83e01d86
  41ae5b:	push   0x23dd7568
  41ae60:	mov    ebx,0xfe72625
  41ae65:	ficomp DWORD PTR [ebx]
  41ae67:	bound  esi,QWORD PTR [ecx]
  41ae69:	pop    esi
  41ae6a:	sbb    edx,0xa4cad66d
  41ae70:	dec    esp
  41ae71:	inc    eax
  41ae72:	dec    eax
  41ae73:	sar    DWORD PTR [ebp+0x49],1
  41ae76:	push   edi
  41ae77:	stos   BYTE PTR es:[edi],al
  41ae78:	or     bh,BYTE PTR [eax-0xadd9963]
  41ae7e:	or     dl,BYTE PTR [eax-0x431eade6]
  41ae84:	inc    ecx
  41ae85:	jne    0x41ae11
  41ae87:	pushf  
  41ae88:	dec    ebx
  41ae89:	(bad)  ds:0xa0e45571
  41ae8f:	sti    
  41ae90:	sbb    edx,DWORD PTR [eax-0x31]
  41ae93:	hlt    
  41ae94:	out    0xf,eax
  41ae96:	dec    eax
  41ae97:	xor    BYTE PTR [ecx],cl
  41ae99:	lahf   
  41ae9a:	jmp    0x41ae9c
  41ae9c:	hlt    
  41ae9d:	fld    DWORD PTR [edx]
  41ae9f:	jmp    FWORD PTR [ebx]
  41aea1:	jecxz  0x41ae4d
  41aea3:	mov    ebp,0x3f38c139
  41aea8:	lock js 0x41aef3
  41aeab:	lahf   
  41aeac:	jbe    0x41ae38
  41aeae:	les    ecx,FWORD PTR [eax-0x59]
  41aeb1:	jae    0x41aeef
  41aeb3:	xchg   ebp,eax
  41aeb4:	or     eax,0xd46abf39
  41aeb9:	pop    DWORD PTR [edi+0x47]
  41aebc:	fwait
  41aebd:	jmp    0x5f269417
  41aec2:	dec    ebp
  41aec3:	(bad)  
  41aec4:	mov    ebx,0x307f0658
  41aec9:	les    esp,FWORD PTR [edi+0x66]
  41aecc:	mov    dh,al
  41aece:	pop    es
  41aecf:	fistp  WORD PTR [edx]
  41aed1:	dec    esp
  41aed2:	and    DWORD PTR [eax+0x2e8cdd6e],esi
  41aed8:	ins    DWORD PTR es:[edi],dx
  41aed9:	(bad)  
  41aedb:	(bad)  
  41aedc:	lods   al,BYTE PTR ds:[esi]
  41aedd:	outs   dx,BYTE PTR ds:[esi]
  41aede:	inc    ebx
  41aedf:	loopne 0x41af14
  41aee1:	inc    esi
  41aee2:	push   ebp
  41aee3:	push   0x77485d7d
  41aee8:	rcr    BYTE PTR [edx+0x436a72a0],0xd1
  41aeef:	addr16 aas 
  41aef1:	mov    ch,0xfa
  41aef3:	mov    al,0xa4
  41aef5:	push   ebx
  41aef6:	jno    0x41af3a
  41aef8:	cdq    
  41aef9:	push   ecx
  41aefa:	dec    eax
  41aefb:	xchg   edi,eax
  41aefc:	dec    ebp
  41aefd:	cmp    ah,BYTE PTR [edx-0x70d48545]
  41af03:	jge    0x41af7a
  41af05:	shl    BYTE PTR [ebx+0x68],cl
  41af08:	jnp    0x41aee0
  41af0a:	or     al,0x76
  41af0c:	mov    al,ds:0x1a266b0a
  41af11:	add    bh,BYTE PTR [esi-0x255ad57d]
  41af17:	je     0x41af91
  41af19:	fldenv [ebp+0x77]
  41af1c:	xor    ebx,DWORD PTR [esi]
  41af1e:	or     al,0x6f
  41af20:	mov    edx,DWORD PTR [eax-0x26b814a4]
  41af26:	sbb    BYTE PTR [eax-0x33],0x64
  41af2a:	in     al,0xe5
  41af2c:	leave  
  41af2d:	fldenv [ecx]
  41af2f:	iret   
  41af30:	mov    DWORD PTR [esi],esi
  41af32:	push   edx
  41af33:	add    DWORD PTR [ebx],0x87a71095
  41af39:	and    eax,0x6bb3c548
  41af3e:	adc    ch,BYTE PTR [ebp+0xb]
  41af41:	shl    DWORD PTR cs:[edi+0x3f],0xb3
  41af46:	mov    cl,0xf
  41af48:	inc    esi
  41af49:	xor    eax,0xf949c69f
  41af4e:	inc    edi
  41af4f:	xchg   esp,eax
  41af50:	xchg   ebx,eax
  41af51:	pop    esi
  41af52:	push   ss
  41af53:	(bad)  
  41af54:	ffree  st(5)
  41af56:	popf   
  41af57:	lahf   
  41af58:	ins    DWORD PTR es:[edi],dx
  41af59:	jg     0x41af24
  41af5b:	cmc    
  41af5c:	inc    edi
  41af5d:	mov    edx,0xc25f4b13
  41af62:	test   al,0x86
  41af64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af65:	fisttp DWORD PTR [ecx+0x61]
  41af68:	dec    edi
  41af69:	pop    ebx
  41af6a:	cmp    al,0xc0
  41af6c:	aad    0xc9
  41af6e:	xor    al,0x60
  41af70:	fimul  DWORD PTR [ebx+0x68e46722]
  41af76:	lahf   
  41af77:	jns    0x41af93
  41af79:	js     0x41afc5
  41af7b:	je     0x41af5c
  41af7d:	aad    0x76
  41af7f:	mov    WORD PTR [edi],?
  41af81:	fnstenv [ebx+0x595eac23]
  41af87:	xchg   BYTE PTR [ebx+0x90c7d5f],ah
  41af8d:	mov    ds:0xa84f648,al
  41af92:	and    ecx,esi
  41af94:	cmp    cl,bl
  41af96:	enter  0x57dd,0xfb
  41af9a:	pusha  
  41af9b:	fisttp QWORD PTR [ecx+0x559aaac5]
  41afa1:	pusha  
  41afa2:	push   esi
  41afa3:	cmp    BYTE PTR [esi+0x1fc6df8f],dh
  41afa9:	pop    ss
  41afaa:	sub    ch,BYTE PTR [edi]
  41afac:	sahf   
  41afad:	retf   
  41afae:	push   esp
  41afaf:	sbb    ebp,ebx
  41afb1:	pop    ecx
  41afb2:	aas    
  41afb3:	retf   
  41afb4:	aam    0x8c
  41afb6:	scas   eax,DWORD PTR es:[edi]
  41afb7:	rol    BYTE PTR [esi+eiz*2],cl
  41afba:	dec    eax
  41afbb:	hlt    
  41afbc:	mov    ecx,0x2a13cff3
  41afc1:	add    ebp,DWORD PTR [ecx+0x11072067]
  41afc7:	sub    ebx,DWORD PTR [edi+0x40]
  41afca:	call   0xd8e4:0x3ec11b56
  41afd1:	ret    0x4503
  41afd4:	jp     0x41af8b
  41afd6:	hlt    
  41afd7:	int3   
  41afd8:	jmp    0x41afa0
  41afda:	iret   
  41afdb:	adc    sp,ax
  41afde:	cwde   
  41afdf:	lods   al,BYTE PTR ds:[esi]
  41afe0:	sbb    eax,0xa715b404
  41afe5:	jb     0x41afd7
  41afe7:	xor    al,0x2b
  41afe9:	mov    ah,0x4f
  41afeb:	inc    esi
  41afec:	xchg   ebx,eax
  41afed:	add    edx,DWORD PTR [edi+0x66]
  41aff0:	xchg   ebp,eax
  41aff1:	sti    
  41aff2:	or     BYTE PTR [edx],bl
  41aff4:	xchg   edx,eax
  41aff5:	adc    DWORD PTR [esi-0x6e],ebx
  41aff8:	mov    dl,0x10
  41affa:	mov    esp,0x48350201
  41afff:	jbe    0x41b051
  41b001:	fs dec ebp
  41b003:	jmp    0x66bd06db
  41b008:	lds    edx,FWORD PTR [edx]
  41b00a:	push   eax
  41b00b:	ins    BYTE PTR es:[edi],dx
  41b00c:	sbb    cl,BYTE PTR [edi+0x32]
  41b00f:	mov    ebp,0x62047dd
  41b014:	mov    ecx,ds
  41b016:	fwait
  41b017:	outs   dx,DWORD PTR ds:[esi]
  41b018:	les    edx,FWORD PTR [ecx-0x5b]
  41b01b:	in     eax,dx
  41b01c:	test   BYTE PTR ss:[ebx-0x4c],ah
  41b020:	sbb    ch,BYTE PTR [eax-0x3c]
  41b023:	ja     0x41afa5
  41b025:	mov    ds:0x9423ae6,eax
  41b02a:	leave  
  41b02b:	mov    bh,0x28
  41b02d:	xor    cl,BYTE PTR ss:[eax]
  41b030:	sbb    dh,BYTE PTR [eax]
  41b032:	pop    ds
  41b033:	pop    ss
  41b034:	sahf   
  41b035:	xchg   esi,eax
  41b036:	test   DWORD PTR [ebx-0x54],ebx
  41b039:	fst    DWORD PTR [edi]
  41b03b:	test   al,0xfb
  41b03d:	xchg   DWORD PTR [eax],ecx
  41b03f:	push   cs
  41b040:	add    ebx,ecx
  41b042:	cmc    
  41b043:	jb     0x41b0ab
  41b045:	push   ebx
  41b046:	xchg   esp,eax
  41b047:	fmul   QWORD PTR [esi]
  41b049:	call   0xcf4e3995
  41b04e:	inc    esi
  41b04f:	and    BYTE PTR [edx+0x5b],ch
  41b052:	sub    eax,0x114cea67
  41b057:	sbb    eax,0x6c4b2f1b
  41b05c:	inc    edi
  41b05d:	jp     0x41b0c3
  41b05f:	test   al,0xfa
  41b061:	shr    BYTE PTR [ebx+0x54],0xf7
  41b065:	in     eax,dx
  41b066:	retf   0x6c66
  41b069:	or     BYTE PTR [edx+0x3d],cl
  41b06c:	push   ebp
  41b06d:	cmp    al,0x92
  41b06f:	cmp    al,0xc0
  41b071:	in     al,0x2
  41b073:	addr16 js 0x41b084
  41b076:	or     ebx,esi
  41b078:	inc    esi
  41b079:	xlat   BYTE PTR ds:[ebx]
  41b07a:	repnz push sp
  41b07d:	mov    bl,0x44
  41b07f:	sub    DWORD PTR [edx],ebx
  41b081:	cdq    
  41b082:	pop    ss
  41b083:	pop    edi
  41b084:	(bad)  
  41b085:	retf   0x4fde
  41b088:	clc    
  41b089:	push   ss
  41b08a:	or     ebx,ebx
  41b08c:	fwait
  41b08d:	inc    ebp
  41b08e:	xor    ecx,DWORD PTR [edx-0x7442a3a]
  41b094:	shr    BYTE PTR [edi],cl
  41b096:	jo     0x41b0ea
  41b098:	xchg   esp,eax
  41b099:	clc    
  41b09a:	inc    edi
  41b09b:	inc    eax
  41b09c:	out    dx,al
  41b09d:	xlat   BYTE PTR ds:[ebx]
  41b09e:	lds    ebx,FWORD PTR ds:0x6a2b15fb
  41b0a4:	adc    DWORD PTR [ebx-0x5ee944f8],edx
  41b0aa:	shl    BYTE PTR [ebx-0x7cb7aba6],1
  41b0b0:	inc    esp
  41b0b1:	bound  esi,QWORD PTR [ecx]
  41b0b3:	hlt    
  41b0b4:	mov    edx,0x1082f59a
  41b0b9:	stos   BYTE PTR es:[edi],al
  41b0ba:	dec    ebp
  41b0bb:	mov    ah,0xa1
  41b0bd:	dec    ebp
  41b0be:	sub    BYTE PTR [edx],al
  41b0c0:	sub    BYTE PTR [ebx+ebp*1+0x5e3954eb],bl
  41b0c7:	jb     0x41b0cf
  41b0c9:	test   DWORD PTR [edi-0x2fe774d4],edx
  41b0cf:	dec    cx
  41b0d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0d2:	div    BYTE PTR [esi]
  41b0d4:	cld    
  41b0d5:	add    DWORD PTR [edi+ebp*2+0x5c497282],esi
  41b0dc:	scas   eax,DWORD PTR es:[edi]
  41b0dd:	dec    edi
  41b0de:	(bad)
  41b0e1:	dec    ebp
  41b0e2:	js     0x41b0d8
  41b0e4:	mov    dh,0xee
  41b0e6:	adc    al,0x67
  41b0e8:	in     al,dx
  41b0e9:	dec    esi
  41b0ea:	outs   dx,BYTE PTR ds:[esi]
  41b0eb:	add    BYTE PTR [ecx],ah
  41b0ed:	push   eax
  41b0ee:	mov    esp,0xb7a9bf4e
  41b0f3:	ds iret 
  41b0f5:	cmp    DWORD PTR [eax],ebx
  41b0f7:	dec    edx
  41b0f8:	gs pop ss
  41b0fa:	inc    esi
  41b0fb:	test   eax,edx
  41b0fd:	imul   esi,ecx,0xffffffe9
  41b100:	and    al,0x55
  41b102:	data16 add al,0xbc
  41b105:	mov    cl,cl
  41b107:	jl     0x41b15f
  41b109:	cld    
  41b10a:	inc    edi
  41b10b:	rcr    DWORD PTR ds:0x7ac9b5d9,cl
  41b111:	add    DWORD PTR [ecx-0x7e],eax
  41b114:	inc    ebx
  41b115:	outs   dx,BYTE PTR ds:[esi]
  41b116:	dec    ecx
  41b117:	xlat   BYTE PTR ds:[ebx]
  41b118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b119:	mov    dl,0x48
  41b11b:	pop    esi
  41b11c:	loope  0x41b0d6
  41b11e:	in     eax,dx
  41b11f:	fimul  DWORD PTR [ecx-0x198e603]
  41b125:	push   0x55
  41b127:	in     eax,dx
  41b128:	xor    BYTE PTR [esi],bh
  41b12a:	fild   WORD PTR [edx]
  41b12c:	sbb    eax,0x6b438c67
  41b131:	xor    eax,0x67e11580
  41b137:	fld    DWORD PTR [edi+0x78369350]
  41b13d:	mov    bh,0x28
  41b13f:	ja     0x41b15b
  41b141:	jns    0x41b1aa
  41b143:	push   ebx
  41b144:	jo     0x41b0e5
  41b146:	pop    ebp
  41b147:	retf   
  41b148:	cmp    cl,bl
  41b14a:	pop    ebx
  41b14b:	jne    0x41b14f
  41b14d:	pop    esi
  41b14e:	xchg   ecx,eax
  41b14f:	xchg   edx,eax
  41b150:	out    dx,al
  41b151:	and    BYTE PTR [edi+0x48910e21],bh
  41b157:	mov    BYTE PTR [esi],bl
  41b159:	push   ecx
  41b15a:	mov    dl,0x41
  41b15c:	lods   eax,DWORD PTR ds:[esi]
  41b15d:	bnd jg 0x41b1c6
  41b160:	xor    al,0x1c
  41b162:	repnz rcr BYTE PTR [ebx],0x4b
  41b166:	pop    ss
  41b167:	jne    0x41b112
  41b169:	xchg   BYTE PTR [ebx-0x74],ah
  41b16c:	loop   0x41b102
  41b16e:	in     al,0xd2
  41b170:	and    ch,dl
  41b172:	data16 adc BYTE PTR fs:[ebx-0x10],bl
  41b177:	inc    edi
  41b178:	cmp    DWORD PTR [esi+0x6f],esp
  41b17b:	inc    ebx
  41b17c:	sbb    dh,BYTE PTR [esi]
  41b17e:	push   ebx
  41b17f:	jmp    0xc814bd6d
  41b184:	push   ebx
  41b185:	adc    al,0x22
  41b187:	ficomp WORD PTR [edx]
  41b189:	fnsave [esi]
  41b18b:	add    BYTE PTR [ecx*4-0x2dc95e1d],al
  41b192:	ja     0x41b14c
  41b194:	call   0x6604:0xf8f92dee
  41b19b:	adc    eax,DWORD PTR [eax+0x68664d53]
  41b1a1:	stos   BYTE PTR es:[edi],al
  41b1a2:	cmp    ebx,DWORD PTR [ebx+ebx*1+0x6]
  41b1a6:	xchg   ebx,eax
  41b1a7:	pop    edi
  41b1a8:	add    al,0x79
  41b1aa:	or     dh,BYTE PTR [edx+esi*8+0x6304e56f]
  41b1b1:	xchg   esi,eax
  41b1b2:	std    
  41b1b3:	addr16 jp 0x41b17c
  41b1b6:	test   eax,0xd1c2eafe
  41b1bb:	dec    edx
  41b1bc:	out    0x18,al
  41b1be:	dec    eax
  41b1bf:	pop    ebp
  41b1c0:	inc    ecx
  41b1c1:	inc    eax
  41b1c2:	fst    DWORD PTR [ebp-0x283726b9]
  41b1c8:	or     al,0x16
  41b1ca:	jecxz  0x41b211
  41b1cc:	push   ss
  41b1cd:	push   es
  41b1ce:	std    
  41b1cf:	arpl   WORD PTR cs:[edi+0x49],cx
  41b1d3:	mov    ecx,0xd1269fc1
  41b1d8:	jne    0x41b24b
  41b1da:	mov    BYTE PTR [ecx],bh
  41b1dc:	sub    al,0x2d
  41b1de:	fld    QWORD PTR [ebp+0x2701ddac]
  41b1e4:	in     al,0x63
  41b1e6:	mov    ebx,0xc4ce1a59
  41b1eb:	mov    gs,ebp
  41b1ed:	retf   
  41b1ee:	retf   0xa713
  41b1f1:	fldenv [esi+0x5]
  41b1f4:	or     DWORD PTR [eax],ebp
  41b1f6:	(bad)  
  41b1f7:	mul    eax
  41b1f9:	aam    0x50
  41b1fb:	stc    
  41b1fc:	push   edi
  41b1fd:	inc    esp
  41b1fe:	dec    eax
  41b1ff:	xchg   esi,eax
  41b200:	pop    ss
  41b201:	mov    cl,0xef
  41b203:	push   ss
  41b204:	push   ebx
  41b205:	or     ebp,DWORD PTR [ebp+0x326ad085]
  41b20b:	mov    WORD PTR [bx+si],ds
  41b20e:	add    bh,BYTE PTR [eax+0x60]
  41b211:	lods   al,BYTE PTR ds:[esi]
  41b212:	dec    ecx
  41b213:	mov    bl,0x74
  41b215:	stos   BYTE PTR es:[edi],al
  41b216:	shl    DWORD PTR [ebx],0x20
  41b219:	jecxz  0x41b25e
  41b21b:	lock xchg esi,eax
  41b21d:	adc    DWORD PTR fs:[edx-0x9],0x32673fab
  41b225:	pusha  
  41b226:	outs   dx,DWORD PTR ds:[esi]
  41b227:	shl    BYTE PTR [edi+esi*8+0x47],cl
  41b22b:	push   ecx
  41b22c:	aam    0xc
  41b22e:	fwait
  41b22f:	mov    eax,0x6738a9e1
  41b234:	and    bl,BYTE PTR [edi+0x54]
  41b237:	jmp    0x41b253
  41b239:	out    0xb8,eax
  41b23b:	mov    fs,WORD PTR [ecx]
  41b23d:	cmp    BYTE PTR [ebp-0x43],0xdd
  41b241:	fnstcw WORD PTR [esi+0x8]
  41b244:	data16 (bad) 
  41b246:	shl    DWORD PTR [ecx+0x12],cl
  41b249:	pop    ecx
  41b24a:	call   DWORD PTR [edi-0x53]
  41b24d:	fld    DWORD PTR [edx-0x46ba06e1]
  41b253:	test   ch,ah
  41b255:	jmp    DWORD PTR [edx-0x1726dbb0]
  41b25b:	stos   DWORD PTR es:[edi],eax
  41b25c:	cmp    al,0x18
  41b25e:	gs cld 
  41b260:	sbb    cl,BYTE PTR [eax]
  41b262:	and    ebp,DWORD PTR [edi-0x14]
  41b265:	jns    0x41b278
  41b267:	push   0x517ff7ce
  41b26c:	cld    
  41b26d:	cdq    
  41b26e:	test   BYTE PTR [edi-0x1f567ee0],0x1a
  41b275:	loope  0x41b24c
  41b277:	not    BYTE PTR [eax+0x11d5df14]
  41b27d:	les    ebx,FWORD PTR [esi+eiz*2]
  41b280:	mov    eax,ds:0x7a97287f
  41b285:	pop    eax
  41b286:	pushf  
  41b287:	popa   
  41b288:	cmp    eax,0x88354804
  41b28d:	xchg   esi,eax
  41b28e:	cmp    DWORD PTR ds:0x66af43b2,esi
  41b294:	inc    esi
  41b295:	and    al,0x76
  41b297:	xchg   edi,eax
  41b298:	lea    esp,[ebp-0x63]
  41b29b:	ficomp DWORD PTR [edx-0xfc6b809]
  41b2a1:	shr    dh,1
  41b2a3:	das    
  41b2a4:	sbb    BYTE PTR [edi-0x5ecd99ae],cl
  41b2aa:	stos   BYTE PTR es:[edi],al
  41b2ab:	dec    ebx
  41b2ac:	and    DWORD PTR ds:0x9c7e7f3,ebx
  41b2b2:	mov    ebp,DWORD PTR [eax+0xa]
  41b2b5:	jecxz  0x41b29e
  41b2b7:	call   0xb939:0x6dc326dd
  41b2be:	rcl    DWORD PTR [edx],0x21
  41b2c1:	cmp    ah,BYTE PTR [edx]
  41b2c3:	std    
  41b2c4:	in     al,dx
  41b2c5:	repz push ebp
  41b2c7:	into   
  41b2c8:	scas   al,BYTE PTR es:[edi]
  41b2c9:	add    edi,DWORD PTR [ecx+0x204a5ea6]
  41b2cf:	pushf  
  41b2d0:	pusha  
  41b2d1:	or     DWORD PTR [ebx],0x67
  41b2d4:	xchg   ecx,eax
  41b2d5:	clc    
  41b2d6:	add    ecx,ebx
  41b2d8:	sbb    dh,BYTE PTR [esi+0x5a695515]
  41b2de:	and    esp,DWORD PTR [ecx-0x6e]
  41b2e1:	fldenv [ebp+0x684ab35b]
  41b2e7:	push   edi
  41b2e8:	mov    edx,0x1a42f820
  41b2ed:	push   ebx
  41b2ee:	mov    ecx,0x6a720869
  41b2f3:	iret   
  41b2f4:	pop    eax
  41b2f5:	fst    DWORD PTR [eax-0xb]
  41b2f8:	imul   esi,DWORD PTR [edx+0x49d5ce65],0x24
  41b2ff:	adc    al,0x2
  41b301:	mov    ah,0xa8
  41b303:	adc    BYTE PTR [edi-0x6aa3f37],cl
  41b309:	add    esp,edx
  41b30b:	addr16 inc eax
  41b30d:	fnstsw WORD PTR [esi+0x63]
  41b310:	scas   eax,DWORD PTR es:[edi]
  41b311:	fidiv  DWORD PTR [edx-0x7f25f4ce]
  41b317:	mov    ch,0xf6
  41b319:	out    dx,eax
  41b31a:	lahf   
  41b31b:	call   0xe7038c63
  41b320:	pop    ss
  41b321:	iret   
  41b322:	fild   WORD PTR [ebx+ebx*1+0x44]
  41b326:	push   ecx
  41b327:	into   
  41b328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b329:	sub    eax,0xe92c0149
  41b32e:	mov    ebp,DWORD PTR [eax-0x47d681f6]
  41b334:	leave  
  41b335:	sbb    cl,dl
  41b337:	addr16 sbb bl,dl
  41b33a:	pop    es
  41b33b:	retf   
  41b33c:	call   0x48c4:0x9d424d2b
  41b343:	sub    DWORD PTR [esi-0x6],ecx
  41b346:	pop    ebp
  41b347:	and    al,0x2e
  41b349:	fst    DWORD PTR [edi+0x4e]
  41b34c:	mov    edx,0xa072e7d6
  41b351:	add    al,ch
  41b353:	or     al,BYTE PTR [edx+0x35]
  41b356:	dec    eax
  41b357:	mov    cl,0x47
  41b359:	cmp    eax,DWORD PTR [ebx]
  41b35b:	lods   eax,DWORD PTR ds:[esi]
  41b35c:	cmp    al,0x46
  41b35e:	aaa    
  41b35f:	addr16 push ebp
  41b361:	popw   ss
  41b363:	stos   DWORD PTR es:[edi],eax
  41b364:	retf   0x8212
  41b367:	ins    DWORD PTR es:[edi],dx
  41b368:	mov    ecx,0xc1bd4816
  41b36d:	cli    
  41b36e:	mov    al,0x50
  41b370:	loopne 0x41b372
  41b372:	aas    
  41b373:	jbe    0x41b3cf
  41b375:	xchg   esp,ebx
  41b377:	stos   DWORD PTR es:[edi],eax
  41b378:	jmp    0x1b0f11d6
  41b37d:	xchg   ecx,eax
  41b37e:	cmp    BYTE PTR [edx],cl
  41b380:	push   eax
  41b381:	sub    DWORD PTR [esp+edi*2],esi
  41b384:	cdq    
  41b385:	loop   0x41b3d5
  41b387:	je     0x41b335
  41b389:	and    al,BYTE PTR [ebx+0x48a283cc]
  41b38f:	out    dx,eax
  41b390:	sbb    eax,0xafa5c454
  41b395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b396:	ins    BYTE PTR es:[edi],dx
  41b397:	pop    ecx
  41b398:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b399:	(bad)  
  41b39a:	mov    esp,0x2663f266
  41b39f:	test   DWORD PTR [esi],edx
  41b3a1:	ror    BYTE PTR [ecx+0x6d],0xf3
  41b3a5:	xchg   BYTE PTR [eax-0x3c],cl
  41b3a8:	cmpxchg ebp,eax
  41b3ab:	and    eax,0x668de2de
  41b3b0:	mov    esi,0x1ab3a43c
  41b3b5:	mov    bh,0xe9
  41b3b7:	add    eax,0x31ef15c5
  41b3bc:	xor    ebp,0x9
  41b3bf:	add    DWORD PTR [eax],ebx
  41b3c1:	(bad)  
  41b3c3:	mov    dh,0xd7
  41b3c5:	loop   0x41b374
  41b3c7:	aaa    
  41b3c8:	sbb    dl,BYTE PTR [eax+0x16ec6164]
  41b3ce:	ret    0xe18a
  41b3d1:	fld1   
  41b3d3:	inc    eax
  41b3d4:	jp     0x41b3ae
  41b3d6:	xor    esp,eax
  41b3d8:	and    BYTE PTR [ebx+edx*4-0x2],ah
  41b3dc:	add    ebx,DWORD PTR [ebp+0x49]
  41b3df:	cmp    eax,0xa9e7b68d
  41b3e4:	or     al,0xda
  41b3e6:	pop    es
  41b3e7:	cmp    eax,0x19c99d85
  41b3ec:	xchg   edx,eax
  41b3ed:	xchg   ebp,eax
  41b3ee:	dec    ebp
  41b3ef:	es inc eax
  41b3f1:	vmread DWORD PTR [eax],ebx
  41b3f4:	aam    0xd9
  41b3f6:	setg   BYTE PTR [edi-0x50c818f]
  41b3fd:	or     edi,DWORD PTR [ebx+0x649beb24]
  41b403:	loopne 0x41b41f
  41b405:	mov    bh,0xac
  41b407:	imul   eax,DWORD PTR [ebp+0x45],0xd93b3d6e
  41b40e:	lods   eax,DWORD PTR ds:[esi]
  41b40f:	ficomp DWORD PTR [edi+eiz*2+0x34]
  41b413:	ret    0x3dd4
  41b416:	ins    BYTE PTR es:[edi],dx
  41b417:	cdq    
  41b418:	clc    
  41b419:	jo     0x41b463
  41b41b:	int    0xdd
  41b41d:	or     BYTE PTR [ebx-0x7f],dl
  41b420:	adc    BYTE PTR [eax+0x42],0x67
  41b424:	pusha  
  41b425:	out    0xb9,eax
  41b427:	or     BYTE PTR [edx],bl
  41b429:	add    BYTE PTR [ecx],bh
  41b42b:	pop    ss
  41b42c:	das    
  41b42d:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41b42f:	loop   0x41b42d
  41b431:	fst    DWORD PTR [edx+0x4311b8ee]
  41b437:	test   BYTE PTR [ecx],ch
  41b439:	sbb    bl,BYTE PTR [edi-0x60]
  41b43c:	mov    ebp,0x3ba648d2
  41b441:	in     al,0x95
  41b443:	addr16 mov ecx,ds
  41b446:	or     bl,bl
  41b448:	(bad)  
  41b449:	mov    edx,0xc9d88122
  41b44e:	push   gs
  41b450:	je     0x41b3fe
  41b452:	push   esi
  41b453:	mov    dl,0xbb
  41b455:	inc    esi
  41b456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b457:	(bad)  
  41b458:	pusha  
  41b459:	rcl    DWORD PTR [eax+0x71],0xbf
  41b45d:	or     ecx,DWORD PTR [ebp+0x26290a66]
  41b463:	fidivr WORD PTR [eax]
  41b465:	pusha  
  41b466:	sar    ecx,1
  41b468:	xchg   esp,eax
  41b469:	fst    DWORD PTR [esi+ebp*1-0x4f]
  41b46d:	std    
  41b46e:	test   BYTE PTR [esi],bl
  41b470:	(bad)  
  41b471:	fnstenv [edx-0x4d3ca5a3]
  41b477:	jno    0x41b455
  41b479:	add    esi,eax
  41b47b:	call   FWORD PTR [ecx]
  41b47d:	and    BYTE PTR [eax-0x36],cl
  41b480:	cmp    al,BYTE PTR [edi-0x83fddd3]
  41b486:	arpl   WORD PTR [edx-0x47b78ea7],sp
  41b48c:	outs   dx,BYTE PTR ds:[esi]
  41b48d:	adc    eax,0x59c04c7
  41b492:	dec    eax
  41b493:	sbb    BYTE PTR [ebp-0x70],cl
  41b496:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b497:	lods   eax,DWORD PTR ds:[esi]
  41b498:	enter  0x1d23,0x67
  41b49c:	dec    ebx
  41b49d:	bound  ebx,QWORD PTR [edx+0x25]
  41b4a0:	sbb    cl,ah
  41b4a2:	and    ch,BYTE PTR [ecx]
  41b4a4:	add    DWORD PTR [ecx],0xffffff8e
  41b4a7:	pop    edx
  41b4a8:	mov    dh,0xd9
  41b4aa:	xor    BYTE PTR [esp+eiz*2-0xdec246],al
  41b4b1:	test   al,0xf9
  41b4b3:	fucomp st(2)
  41b4b5:	daa    
  41b4b6:	dec    eax
  41b4b7:	xchg   DWORD PTR [ecx+0x1d382851],esi
  41b4bd:	rcr    DWORD PTR [ebx],cl
  41b4bf:	addr16 iret 
  41b4c1:	xlat   BYTE PTR ds:[ebx]
  41b4c2:	inc    esp
  41b4c3:	dec    ecx
  41b4c4:	add    BYTE PTR [edi-0x5a0ca1ae],al
  41b4ca:	dec    eax
  41b4cb:	xor    esi,DWORD PTR [edx-0x67]
  41b4ce:	mov    esi,DWORD PTR [esi-0x4c]
  41b4d1:	call   0x48610d62
  41b4d6:	stc    
  41b4d7:	repz add bl,BYTE PTR [edx]
  41b4da:	dec    edi
  41b4db:	jg     0x41b516
  41b4dd:	dec    ebp
  41b4de:	std    
  41b4df:	and    BYTE PTR [eax+ebp*1+0x57],dh
  41b4e3:	dec    esp
  41b4e4:	or     DWORD PTR [esi+0x47],ebp
  41b4e7:	out    0x6c,eax
  41b4e9:	fptan  
  41b4eb:	loopne 0x41b4cd
  41b4ed:	push   ecx
  41b4ee:	add    eax,0x8645ff73
  41b4f3:	dec    edi
  41b4f4:	sbb    ch,BYTE PTR [eax+eiz*8]
  41b4f7:	push   0x44
  41b4f9:	mov    ch,0xc
  41b4fb:	cmp    ah,BYTE PTR [eax-0x36]
  41b4fe:	mov    ebx,0x453e06e1
  41b503:	repz or DWORD PTR [edx+eax*8+0x66],ebx
  41b508:	jne    0x41b4e0
  41b50a:	rol    BYTE PTR [ebx+0x1f],1
  41b50d:	add    eax,0xbe07bb4a
  41b512:	pushf  
  41b513:	dec    esp
  41b514:	mov    esp,0x9e3b0bb9
  41b519:	(bad)  
  41b51b:	in     al,dx
  41b51c:	xor    BYTE PTR [edi-0x6b],0x5e
  41b520:	mov    bh,0x8c
  41b522:	jp     0x41b4f9
  41b524:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b525:	xchg   ecx,eax
  41b526:	pop    esi
  41b527:	mov    ah,0x1a
  41b529:	lods   eax,DWORD PTR ds:[esi]
  41b52a:	add    BYTE PTR [ecx+0x2943438d],ah
  41b530:	sbb    bh,BYTE PTR [edx+0x9797ecc]
  41b536:	fild   WORD PTR [ecx-0x6419267a]
  41b53c:	repnz xchg edi,eax
  41b53e:	pop    edx
  41b53f:	(bad)  
  41b540:	mov    edx,0xa114ed62
  41b545:	push   edx
  41b546:	dec    eax
  41b547:	sbb    bh,BYTE PTR [ebp+0xe]
  41b54a:	sub    eax,0x75969499
  41b54f:	data16 add al,0x8a
  41b552:	gs gs sbb ah,dl
  41b556:	xlat   BYTE PTR ds:[ebx]
  41b557:	xor    bl,BYTE PTR [ebx+0x47]
  41b55a:	mul    DWORD PTR [bp+si-0x27]
  41b55e:	cmp    eax,0x72d303c7
  41b563:	jmp    FWORD PTR [edx-0x65b8dd68]
  41b569:	lea    ecx,[eax-0x22]
  41b56c:	mov    ah,bh
  41b56e:	mov    ah,0x4d
  41b570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b571:	fnstcw WORD PTR [eax+0x2039f74a]
  41b577:	push   ebx
  41b578:	inc    edi
  41b579:	xor    BYTE PTR [edx+0x48386429],0xe2
  41b580:	int    0xbd
  41b582:	cmp    esi,esp
  41b584:	rcl    DWORD PTR [esi+ecx*1+0x67],cl
  41b588:	bound  ebx,QWORD PTR [ecx+ebp*8]
  41b58b:	hlt    
  41b58c:	sbb    bh,BYTE PTR [ebx+0x7a]
  41b58f:	cli    
  41b590:	xchg   esi,eax
  41b591:	repz mov ch,0x65
  41b594:	pop    ebx
  41b595:	pop    eax
  41b596:	dec    edi
  41b597:	int    0x2
  41b599:	push   edx
  41b59a:	leave  
  41b59b:	data16 jg 0x41b5ea
  41b59e:	fs sbb dl,BYTE PTR fs:[ecx]
  41b5a2:	lds    eax,FWORD PTR [ebx-0x13]
  41b5a5:	sub    eax,0xe31cd557
  41b5aa:	mov    eax,0x5552d3cf
  41b5af:	pop    edx
  41b5b0:	mov    ecx,0x25672af2
  41b5b5:	adc    ch,al
  41b5b7:	mov    DWORD PTR [ebp+0x4e2547f1],esp
  41b5bd:	sbb    al,0xfb
  41b5bf:	mov    ds,WORD PTR [ebx+0x57]
  41b5c2:	pop    esi
  41b5c3:	pop    edx
  41b5c4:	xchg   esp,eax
  41b5c5:	fst    DWORD PTR [esi-0x4e3e09a4]
  41b5cb:	pop    ss
  41b5cc:	cli    
  41b5cd:	push   edi
  41b5ce:	or     BYTE PTR [eax-0xc],0x7e
  41b5d2:	dec    eax
  41b5d3:	or     ebx,edx
  41b5d5:	pop    esi
  41b5d6:	ins    BYTE PTR es:[edi],dx
  41b5d7:	xor    DWORD PTR [ebp-0x27],edx
  41b5da:	mov    esp,0x83917b1e
  41b5df:	cmp    BYTE PTR [ebp-0x10d78898],dh
  41b5e5:	iret   
  41b5e6:	dec    eax
  41b5e7:	and    BYTE PTR [ebx+0x28e77dbc],ch
  41b5ed:	mov    BYTE PTR [ebx+0x164a6a66],dh
  41b5f3:	push   esp
  41b5f4:	sbb    al,BYTE PTR [edx-0x33]
  41b5f7:	shl    DWORD PTR [ecx+edi*8+0x4d],cl
  41b5fb:	mov    edi,0xe1a83134
  41b600:	sbb    cl,cl
  41b602:	xchg   edi,eax
  41b603:	xor    al,0x1c
  41b605:	jp     0x41b65e
  41b607:	sbb    esi,DWORD PTR gs:[ebx-0x6cc5b1f9]
  41b60e:	fdiv   DWORD PTR [edx+edi*8]
  41b611:	cmp    al,0xad
  41b614:	and    DWORD PTR [edi],edx
  41b616:	in     al,dx
  41b617:	dec    ax
  41b619:	shl    DWORD PTR [edx+eiz*1+0x32e43f0a],0xe2
  41b621:	xchg   ebx,eax
  41b622:	dec    edi
  41b623:	jbe    0x41b67f
  41b625:	pusha  
  41b626:	or     edx,DWORD PTR ds:0xd5e2d942
  41b62c:	(bad)  
  41b62d:	mov    esp,0x34954154
  41b632:	imul   edi,DWORD PTR [eax+0x23],0xfffffffe
  41b636:	inc    edi
  41b637:	les    ebx,FWORD PTR [edi]
  41b639:	xchg   DWORD PTR cs:[edx],edi
  41b63c:	mov    cl,0xcf
  41b63e:	pop    edi
  41b63f:	scas   al,BYTE PTR es:[edi]
  41b640:	mov    ch,0xc
  41b642:	dec    eax
  41b643:	ss ret 
  41b645:	icebp  
  41b646:	mov    dl,0x45
  41b648:	inc    edi
  41b649:	repz dec esi
  41b64b:	test   dl,ch
  41b64d:	lods   al,BYTE PTR ds:[esi]
  41b64e:	test   al,0xc9
  41b650:	lahf   
  41b651:	fld1   
  41b653:	inc    esp
  41b654:	pop    ebp
  41b655:	call   0xf7c8:0x45de8ce3
  41b65c:	or     edi,ebx
  41b65e:	inc    edi
  41b65f:	cld    
  41b660:	push   ebp
  41b661:	mov    ecx,0xf67d3d9a
  41b666:	pop    esi
  41b667:	in     eax,0x44
  41b669:	pop    ecx
  41b66a:	jl     0x41b64c
  41b66c:	and    bh,dh
  41b66e:	sub    edi,DWORD PTR [ebx-0x72]
  41b671:	out    dx,al
  41b672:	mov    esi,0x8318f1df
  41b677:	daa    
  41b678:	ds pop ecx
  41b67a:	dec    edx
  41b67b:	sahf   
  41b67c:	ret    0xd525
  41b67f:	adc    BYTE PTR [ebx-0xf],ah
  41b682:	mov    ebp,0xcd89f320
  41b687:	push   edx
  41b688:	push   es
  41b689:	fs enter 0x4f44,0xdd
  41b68e:	inc    edi
  41b68f:	daa    
  41b690:	jge    0x41b616
  41b692:	push   0xffffffae
  41b694:	stos   BYTE PTR es:[edi],al
  41b695:	fs push 0x4659456a
  41b69b:	add    dl,BYTE PTR [edi+0x22]
  41b69e:	xchg   edx,eax
  41b69f:	adc    dl,BYTE PTR [edx+0x19b647f7]
  41b6a5:	adc    ch,BYTE PTR [ebx+0x1c]
  41b6a8:	sub    cl,ch
  41b6aa:	sub    BYTE PTR [eax-0x7d],0x5
  41b6ae:	inc    eax
  41b6af:	sbb    DWORD PTR [eax-0x4b095807],0x78
  41b6b6:	dec    eax
  41b6b7:	scas   eax,DWORD PTR es:[edi]
  41b6b8:	pusha  
  41b6b9:	sbb    BYTE PTR [edx],cl
  41b6bb:	inc    esi
  41b6bc:	mov    eax,0x6e6124d9
  41b6c1:	inc    esi
  41b6c2:	push   esi
  41b6c3:	imul   edx,DWORD PTR ds:0x18e418ba,0xffffff9e
  41b6ca:	dec    eax
  41b6cb:	sub    DWORD PTR [edi],0x79
  41b6ce:	jmp    0x41b72b
  41b6d0:	popf   
  41b6d1:	test   ecx,0x80198d85
  41b6d7:	ret    0x2e10
  41b6da:	int    0xc8
  41b6dc:	sbb    dh,BYTE PTR [edx+0x3a]
  41b6df:	sub    esp,DWORD PTR [ebx-0x6d600966]
  41b6e5:	fldenv [eax]
  41b6e7:	idiv   ebp
  41b6e9:	ja     0x41b66e
  41b6eb:	loope  0x41b731
  41b6ed:	xrelease mov BYTE PTR [ebp-0x4e],cl
  41b6f1:	scas   al,BYTE PTR es:[edi]
  41b6f2:	dec    eax
  41b6f3:	stos   DWORD PTR es:[edi],eax
  41b6f4:	ja     0x41b6c4
  41b6f6:	hlt    
  41b6f7:	cs repz xchg ebx,eax
  41b6fa:	xchg   edx,eax
  41b6fb:	data16 bnd jmp 0x41b6da
  41b6ff:	pop    esi
  41b700:	sbb    ch,BYTE PTR [ecx-0x75]
  41b703:	add    bh,BYTE PTR ds:0x5c1c4d6c
  41b709:	fxch   st(1)
  41b70b:	arpl   WORD PTR [esi],sp
  41b70d:	cdq    
  41b70e:	les    edx,FWORD PTR [ecx+0x54]
  41b711:	shl    al,0xc5
  41b714:	retf   0x480b
  41b717:	jne    0x41b6cb
  41b719:	inc    esp
  41b71a:	(bad)  
  41b71c:	xor    BYTE PTR [edi+ebx*8],cl
  41b71f:	jne    0x41b71b
  41b721:	mov    ds:0xfdc40a4b,al
  41b726:	ficom  DWORD PTR [ebx-0x3db77d7c]
  41b72c:	dec    edi
  41b72d:	clc    
  41b72e:	(bad)  
  41b72f:	test   DWORD PTR gs:[esi-0xc857a1c],ecx
  41b736:	push   ecx
  41b737:	xchg   esi,eax
  41b738:	sbb    dh,BYTE PTR [edi+0x3d178ed7]
  41b73e:	or     eax,0xf6d92949
  41b743:	xchg   ebx,eax
  41b744:	push   edi
  41b745:	test   eax,0xfde6b95e
  41b74a:	push   esp
  41b74b:	sub    BYTE PTR [esi],al
  41b74d:	xor    DWORD PTR [ebp-0x41],esp
  41b750:	ins    BYTE PTR es:[edi],dx
  41b751:	and    eax,0x8df26680
  41b756:	mov    al,0xd0
  41b758:	push   ds
  41b759:	adc    eax,0x1062e577
  41b75e:	pop    esi
  41b75f:	mov    ah,0xdb
  41b761:	arpl   WORD PTR [eax-0x26],cx
  41b764:	add    ecx,DWORD PTR [eax-0x66996853]
  41b76a:	push   esi
  41b76b:	cld    
  41b76c:	dec    esi
  41b76d:	das    
  41b76e:	adc    eax,DWORD PTR [edi]
  41b770:	aam    0x4e
  41b772:	fdiv   DWORD PTR [edi]
  41b774:	xchg   DWORD PTR [edi+ecx*1+0x6e],ebx
  41b778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b779:	dec    ecx
  41b77a:	outs   dx,BYTE PTR ds:[esi]
  41b77b:	repnz sti 
  41b77d:	xchg   esp,eax
  41b77e:	pop    ebx
  41b77f:	fisub  DWORD PTR [ebx]
  41b781:	outs   dx,BYTE PTR ds:[esi]
  41b782:	mov    ecx,0xfa5990a9
  41b787:	push   ecx
  41b788:	cmp    al,dh
  41b78a:	(bad)  
  41b78b:	out    dx,al
  41b78c:	enter  0x4e83,0x66
  41b790:	pop    ecx
  41b791:	xor    al,0x56
  41b793:	push   es
  41b794:	sbb    dl,BYTE PTR [edx-0x5c21d3c5]
  41b79a:	mov    ds:0x43123d04,al
  41b79f:	pop    esi
  41b7a0:	aam    0xc4
  41b7a2:	push   0xfffffff5
  41b7a4:	call   0x5812:0xe0e904d7
  41b7ab:	pop    eax
  41b7ac:	sbb    ch,BYTE PTR [edi+edx*4-0x58]
  41b7b0:	in     al,0xd6
  41b7b2:	mov    ah,0x60
  41b7b4:	mov    ds:0xf26c4fe0,al
  41b7b9:	pop    ebp
  41b7ba:	js     0x41b7bc
  41b7bc:	icebp  
  41b7bd:	mov    DWORD PTR [ecx],ecx
  41b7bf:	sahf   
  41b7c0:	pop    ebp
  41b7c1:	(bad)  
  41b7c2:	pusha  
  41b7c3:	pop    ds
  41b7c4:	and    al,0xe8
  41b7c6:	pop    ecx
  41b7c7:	inc    eax
  41b7c8:	push   ss
  41b7c9:	pop    eax
  41b7ca:	dec    eax
  41b7cb:	js     0x41b81b
  41b7cd:	fcmovb st,st(6)
  41b7cf:	(bad)  
  41b7d1:	inc    ebx
  41b7d2:	mov    BYTE PTR [ebp+0x5a43c195],ah
  41b7d8:	or     al,BYTE PTR [esi-0x38]
  41b7db:	push   ds
  41b7dc:	out    dx,eax
  41b7dd:	ror    BYTE PTR [eax-0x7d],cl
  41b7e0:	inc    edx
  41b7e1:	cwde   
  41b7e2:	push   ebp
  41b7e3:	cmp    eax,0x66a6b4ba
  41b7e8:	mov    DWORD PTR [eax-0x1d89b60e],eax
  41b7ee:	xchg   ebp,eax
  41b7ef:	mov    bl,0x92
  41b7f1:	fst    DWORD PTR [esi]
  41b7f3:	lahf   
  41b7f4:	shr    BYTE PTR [edx],cl
  41b7f6:	mov    ds:0x11e8e0d4,al
  41b7fb:	push   0xdaff4924
  41b800:	enter  0x8839,0x0
  41b804:	sbb    dl,BYTE PTR [ebp-0x13]
  41b807:	push   es
  41b808:	cmp    DWORD PTR [esi-0x256006c9],ebx
  41b80e:	fild   QWORD PTR [eax]
  41b810:	cmp    ah,dh
  41b812:	(bad)  
  41b813:	and    BYTE PTR [ebx],bh
  41b815:	shr    DWORD PTR [edi+0x1c],1
  41b818:	and    DWORD PTR [eax+0x29b5829f],eax
  41b81e:	inc    ebp
  41b81f:	repnz mov esi,0xe009180a
  41b825:	adc    DWORD PTR [eax-0x7c22e5b2],esi
  41b82b:	mov    ebx,0x76e8b14f
  41b830:	add    BYTE PTR ds:0xaa911d49,bl
  41b836:	dec    eax
  41b837:	push   ds
  41b838:	push   esp
  41b839:	outs   dx,BYTE PTR ds:[esi]
  41b83a:	and    DWORD PTR [esi],ebp
  41b83c:	inc    eax
  41b83d:	imul   ebp,DWORD PTR [ecx],0xb1109e6a
  41b843:	dec    eax
  41b844:	outs   dx,DWORD PTR ds:[esi]
  41b845:	cwde   
  41b846:	and    eax,0x19761a27
  41b84b:	xchg   esp,eax
  41b84c:	adc    BYTE PTR ds:0xf087d855,bh
  41b852:	fistp  WORD PTR [edi]
  41b854:	fldcw  WORD PTR [bx+di]
  41b857:	jnp    0x41b819
  41b859:	dec    esi
  41b85a:	out    dx,eax
  41b85b:	sbb    bl,BYTE PTR ds:0x196d
  41b860:	enter  0x28a2,0xf0
  41b864:	popf   
  41b865:	fidivr DWORD PTR [ebx+0x38]
  41b868:	mov    bh,0x2f
  41b86a:	fimul  DWORD PTR [eax+esi*1+0x1b0000a5]
  41b871:	mov    al,ds:0xd09859d5
  41b876:	mov    ds:0xd32d7a2b,al
  41b87b:	fwait
  41b87c:	inc    eax
  41b87d:	fstp   DWORD PTR [edx+ecx*2-0x3]
  41b881:	push   ss
  41b882:	push   eax
  41b883:	adc    edx,DWORD PTR [eax-0x53]
  41b886:	mov    ebp,0x4fac344d
  41b88b:	out    dx,al
  41b88c:	cdq    
  41b88d:	jns    0x41b818
  41b88f:	loop   0x41b878
  41b891:	dec    edi
  41b892:	xlat   BYTE PTR ds:[ebx]
  41b893:	stc    
  41b894:	jmp    0x7308:0x2f6682fd
  41b89b:	bndldx bnd3,[ecx]
  41b89e:	int3   
  41b89f:	call   0x990cc026
  41b8a4:	push   esp
  41b8a5:	fnstcw WORD PTR [esi]
  41b8a7:	push   ss
  41b8a8:	rcl    DWORD PTR [eax+0x520aa8e1],cl
  41b8ae:	and    al,0xc1
  41b8b0:	adc    al,0xc8
  41b8b2:	dec    eax
  41b8b3:	nop
  41b8b4:	mov    ds:0x5f510de6,eax
  41b8b9:	imul   esi,ecx,0xffffff9f
  41b8bc:	pop    ebp
  41b8bd:	jmp    0x5cf1:0xd9778ec3
  41b8c4:	aaa    
  41b8c5:	adc    DWORD PTR [esi-0x5c3fa749],edx
  41b8cb:	dec    ebx
  41b8cc:	sbb    ecx,DWORD PTR [edi+0x48ddac4d]
  41b8d2:	and    bl,BYTE PTR [ecx]
  41b8d4:	test   ch,bh
  41b8d6:	jle    0x41b906
  41b8d8:	dec    esi
  41b8d9:	fst    DWORD PTR [ecx]
  41b8db:	out    0x2,al
  41b8dd:	mov    ecx,0x6cb5077
  41b8e2:	pushf  
  41b8e3:	push   ss
  41b8e4:	iret   
  41b8e5:	cmp    cl,BYTE PTR [eax+0x3c]
  41b8e8:	mov    cl,0x4f
  41b8ea:	aam    0x2b
  41b8ec:	cmp    ecx,ebp
  41b8ee:	xor    eax,0xa0e62f67
  41b8f3:	jp     0x41b90f
  41b8f5:	pop    ecx
  41b8f6:	(bad)  
  41b8f7:	jecxz  0x41b8cd
  41b8f9:	inc    eax
  41b8fa:	adc    ah,dl
  41b8fc:	push   0xffffffc5
  41b8fe:	adc    eax,0xef702279
  41b903:	push   0x528227d7
  41b908:	das    
  41b909:	xor    eax,0x15731c28
  41b90e:	dec    eax
  41b90f:	(bad)  
  41b910:	in     eax,dx
  41b911:	int3   
  41b912:	jae    0x41b8d2
  41b914:	and    BYTE PTR [edi-0x21a47a8f],cl
  41b91a:	inc    eax
  41b91b:	daa    
  41b91c:	out    0x81,eax
  41b91e:	mov    eax,0x47edc74e
  41b923:	xchg   edi,eax
  41b924:	out    0x6e,al
  41b926:	sahf   
  41b927:	add    eax,0xf6664992
  41b92c:	repz pop ds
  41b92e:	add    DWORD PTR [eax+0x58],ebp
  41b931:	(bad)  
  41b932:	retf   0x69dc
  41b935:	lods   al,BYTE PTR ds:[esi]
  41b936:	mov    esp,DWORD PTR [edx+0x6b]
  41b939:	and    eax,0x68e7a248
  41b93e:	pminub mm0,QWORD PTR [eax]
  41b941:	pusha  
  41b942:	int3   
  41b943:	ins    DWORD PTR es:[edi],dx
  41b944:	enter  0xbc29,0xe8
  41b948:	mov    esp,0x3cfc12aa
  41b94d:	push   esp
  41b94e:	dec    edi
  41b94f:	addr16 retf 0x287f
  41b953:	inc    ebx
  41b954:	dec    esi
  41b955:	xchg   esi,eax
  41b956:	push   ecx
  41b957:	in     eax,dx
  41b958:	ficomp WORD PTR [ebp-0x38]
  41b95b:	or     eax,0x3e74e91a
  41b960:	loopne 0x41b92f
  41b962:	jmp    0x41b941
  41b964:	data16 fcmovb st,st(7)
  41b967:	bswap  esp
  41b969:	mov    al,0x1d
  41b96b:	xor    al,0x63
  41b96d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b96e:	mov    dl,0x83
  41b970:	sbb    ah,BYTE PTR [eax]
  41b972:	jb     0x41b9c0
  41b974:	adc    ebx,esp
  41b976:	enter  0xfb1f,0xd9
  41b97a:	mov    eax,0xc11e89c1
  41b97f:	int3   
  41b980:	push   cs
  41b981:	xchg   DWORD PTR [edi],edx
  41b983:	dec    esp
  41b984:	loop   0x41b938
  41b986:	dec    eax
  41b987:	gs pop ebp
  41b989:	dec    ebx
  41b98a:	repz pop ss
  41b98c:	iret   
  41b98d:	loopne 0x41b9ef
  41b98f:	pop    sp
  41b991:	jp     0x41b9de
  41b993:	inc    esp
  41b994:	sbb    al,ah
  41b996:	enter  0x8210,0x93
  41b99a:	push   0x8213f30c
  41b99f:	cmp    al,0x1a
  41b9a1:	jns    0x41b958
  41b9a3:	inc    ebp
  41b9a4:	leave  
  41b9a5:	cmp    eax,0xa96a0ab7
  41b9aa:	sbb    esi,eax
  41b9ac:	sbb    ch,BYTE PTR [ebx]
  41b9ae:	adc    ah,bl
  41b9b0:	ret    
  41b9b1:	push   0xd9b6e13d
  41b9b6:	iret   
  41b9b7:	loop   0x41ba2e
  41b9b9:	out    0xc8,eax
  41b9bb:	or     ah,BYTE PTR cs:[ecx-0x19e457cc]
  41b9c2:	dec    edx
  41b9c3:	pop    edi
  41b9c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9c5:	mov    ecx,0xd94dae3b
  41b9ca:	cdq    
  41b9cb:	ins    DWORD PTR es:[edi],dx
  41b9cc:	jl     0x41b9c4
  41b9ce:	std    
  41b9cf:	cli    
  41b9d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9d1:	mov    ebp,DWORD PTR [esp+ebp*2]
  41b9d4:	xchg   DWORD PTR [esi+0x48],ebx
  41b9d7:	out    dx,al
  41b9d8:	repz pop edi
  41b9da:	jg     0x41ba22
  41b9dc:	inc    edi
  41b9dd:	fld    DWORD PTR [ebp-0x1a]
  41b9e0:	je     0x41ba4b
  41b9e2:	(bad)  
  41b9e3:	sub    al,0x8d
  41b9e5:	push   ecx
  41b9e6:	scas   al,BYTE PTR es:[edi]
  41b9e7:	adc    al,0x34
  41b9e9:	cmp    BYTE PTR [ecx+0x50],cl
  41b9ec:	jle    0x41b9bc
  41b9ee:	and    ebx,esp
  41b9f0:	mov    esi,0x31058885
  41b9f5:	mov    cl,0xa1
  41b9f7:	data16 (bad) 
  41b9f9:	int    0x47
  41b9fb:	sub    bl,BYTE PTR [edx]
  41b9fd:	cli    
  41b9fe:	push   esp
  41b9ff:	sahf   
  41ba00:	pop    es
  41ba01:	(bad)
  41ba04:	push   edi
  41ba05:	fidiv  DWORD PTR [esi+0x75]
  41ba08:	mov    esi,0xbba77b2e
  41ba0d:	cmp    DWORD PTR [ebx-0x5f],esi
  41ba10:	sbb    eax,0x711caba2
  41ba15:	push   es
  41ba16:	or     BYTE PTR [eax-0x19af4920],0xa8
  41ba1d:	(bad)  
  41ba1f:	inc    ax
  41ba21:	cmp    ah,dl
  41ba23:	inc    ecx
  41ba24:	sbb    ch,cl
  41ba26:	push   ds
  41ba27:	adc    bh,bh
  41ba29:	pop    ds
  41ba2a:	xor    BYTE PTR [eax-0x43],cl
  41ba2d:	dec    ebx
  41ba2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba2f:	fiadd  DWORD PTR [ebx]
  41ba31:	push   eax
  41ba32:	inc    esp
  41ba33:	push   0x3d
  41ba35:	jg     0x41b9dc
  41ba37:	push   0x3b100072
  41ba3c:	jle    0x41ba4d
  41ba3e:	dec    eax
  41ba3f:	lods   al,BYTE PTR ds:[esi]
  41ba40:	adc    BYTE PTR [ebp-0x81aa69d],cl
  41ba46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba47:	and    BYTE PTR [edx+ecx*2],0x93
  41ba4b:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41ba4d:	pop    esi
  41ba4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba4f:	loope  0x41ba4a
  41ba51:	dec    esp
  41ba52:	dec    eax
  41ba53:	call   0xd069:0x528e449
  41ba5a:	jae    0x41bac2
  41ba5c:	mov    ecx,0x1a7d2ca8
  41ba61:	sub    al,0x86
  41ba63:	pusha  
  41ba64:	stos   BYTE PTR es:[edi],al
  41ba65:	mov    bh,0xc5
  41ba67:	push   edx
  41ba68:	arpl   ax,sp
  41ba6a:	adc    eax,edi
  41ba6c:	ror    BYTE PTR [esi+0x74],1
  41ba6f:	pop    esi
  41ba70:	mov    ds:0x1af680cf,al
  41ba75:	dec    ebx
  41ba76:	push   cs
  41ba77:	adc    DWORD PTR [ecx+eiz*2],0x7c
  41ba7b:	cmp    al,0x53
  41ba7d:	fnstenv [eax]
  41ba7f:	retf   0x1850
  41ba82:	pop    eax
  41ba83:	jno    0x41baae
  41ba85:	inc    ax
  41ba87:	dec    ebp
  41ba88:	cld    
  41ba89:	js     0x41bad3
  41ba8b:	pop    es
  41ba8c:	and    eax,DWORD PTR [ebp+0x4e409aee]
  41ba92:	jbe    0x41bafa
  41ba94:	push   edx
  41ba95:	or     edi,eax
  41ba97:	mov    ds:0x797efe1a,al
  41ba9c:	fistp  QWORD PTR [edx+0x6]
  41ba9f:	mov    ch,0x5f
  41baa1:	fstp   DWORD PTR [ecx]
  41baa3:	(bad)  
  41baa4:	outs   dx,BYTE PTR ds:[esi]
  41baa5:	imul   ecx,DWORD PTR [edx-0x43],0xffffffb2
  41baa9:	xor    eax,DWORD PTR [ecx-0x5f]
  41baac:	inc    esp
  41baad:	dec    edx
  41baae:	dec    eax
  41baaf:	add    eax,0x23c4b845
  41bab4:	std    
  41bab5:	mov    al,0x58
  41bab7:	imul   edx,DWORD PTR [edx+0x5e9c11a4],0x4754307d
  41bac1:	out    dx,al
  41bac2:	pop    ebp
  41bac3:	mov    edx,0x2448d61b
  41bac8:	adc    bl,BYTE PTR [ecx]
  41baca:	jp     0x41baf7
  41bacc:	jb     0x41baef
  41bace:	add    BYTE PTR [esi-0x17],cl
  41bad1:	es push esi
  41bad3:	sbb    BYTE PTR [eax+esi*1+0x2e1aee28],0x14
  41badb:	sub    BYTE PTR [ebx-0x16],cl
  41bade:	inc    BYTE PTR [ebp+0xf4fe047]
  41bae4:	adc    ebx,DWORD PTR [esi-0x35]
  41bae7:	int    0x1b
  41bae9:	ss mov edx,esi
  41baec:	sbb    ch,BYTE PTR [ecx-0x16c0be28]
  41baf2:	cmp    al,0x38
  41baf4:	jo     0x41bb0b
  41baf6:	sub    eax,0x812e1adb
  41bafb:	shl    edi,0xe6
  41bafe:	mov    al,ds:0x20d9100a
  41bb03:	jmp    0x3fc7:0x38489699
  41bb0a:	sub    ah,BYTE PTR ds:0x5efdc987
  41bb10:	cwde   
  41bb11:	dec    DWORD PTR [ebp-0x5814de9a]
  41bb17:	inc    esp
  41bb18:	sbb    dh,BYTE PTR [ebx+0x53771fef]
  41bb1e:	dec    esi
  41bb1f:	pop    eax
  41bb20:	xchg   esi,eax
  41bb21:	fld    DWORD PTR [eax+0xa37a2b1]
  41bb27:	test   al,0xbc
  41bb29:	cmp    eax,DWORD PTR [edx+eax*1+0x1b]
  41bb2d:	sar    al,0x19
  41bb30:	xchg   ebp,eax
  41bb31:	icebp  
  41bb32:	dec    ecx
  41bb33:	int    0x4b
  41bb35:	push   ebp
  41bb36:	cwde   
  41bb37:	daa    
  41bb38:	dec    ebp
  41bb39:	fnstenv [ebx]
  41bb3b:	jle    0x41bbb5
  41bb3d:	dec    edi
  41bb3e:	rcl    BYTE PTR [esi],cl
  41bb40:	sbb    al,0xe4
  41bb42:	jg     0x41baf6
  41bb44:	sbb    dh,cl
  41bb46:	shr    BYTE PTR [esi+0x12792b3d],0x72
  41bb4d:	fstp   DWORD PTR [ebp-0x1fc06678]
  41bb53:	push   ebx
  41bb54:	mov    edi,ebx
  41bb56:	push   ebx
  41bb57:	jo     0x41baf9
  41bb59:	dec    esp
  41bb5a:	dec    ecx
  41bb5b:	clc    
  41bb5c:	call   0x1fdc:0x372c1201
  41bb63:	sub    DWORD PTR [ebp+eax*8+0x6e],edi
  41bb67:	xchg   ebp,eax
  41bb68:	repnz or eax,0x8e288a63
  41bb6e:	pop    ebp
  41bb6f:	out    dx,eax
  41bb70:	popf   
  41bb71:	pop    ecx
  41bb72:	repnz add esp,DWORD PTR [eax]
  41bb75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb76:	push   0x20
  41bb78:	jns    0x41bb8c
  41bb7a:	sub    eax,0x48c8f7b3
  41bb7f:	in     al,0xe4
  41bb81:	sar    DWORD PTR [edi+0x7c],0xe0
  41bb85:	iret   
  41bb86:	js     0x41bbc9
  41bb88:	cmp    al,0xd9
  41bb8a:	fistp  QWORD PTR [ecx]
  41bb8c:	rcl    BYTE PTR [eax+esi*2+0x1be0d33c],0x4b
  41bb94:	cmp    DWORD PTR [ebx],ebx
  41bb96:	dec    eax
  41bb97:	mov    ebp,0x63fce3e0
  41bb9c:	fwait
  41bb9d:	in     al,0x72
  41bb9f:	pushw  es
  41bba1:	sub    DWORD PTR [edi-0x402e5c3],eax
  41bba7:	ret    
  41bba8:	ret    0xda15
  41bbab:	dec    eax
  41bbac:	inc    edi
  41bbad:	fst    DWORD PTR [edi]
  41bbaf:	mov    cl,0xd9
  41bbb1:	ret    
  41bbb2:	xor    eax,0x26d61dd3
  41bbb7:	adc    BYTE PTR [edx+0x3731566d],bh
  41bbbd:	test   cl,bl
  41bbbf:	(bad)  
  41bbc0:	fnstenv gs:[edx+0x4394e3cc]
  41bbc7:	out    dx,al
  41bbc8:	adc    esp,ebx
  41bbca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbcb:	and    al,0x1a
  41bbcd:	push   esi
  41bbce:	cmp    BYTE PTR [eax],bh
  41bbd0:	xor    dh,BYTE PTR [edx]
  41bbd2:	jno    0x41bc2c
  41bbd4:	and    al,BYTE PTR [ecx]
  41bbd6:	mov    al,0xb5
  41bbd8:	les    edx,FWORD PTR [edx-0x4f]
  41bbdb:	bnd jge 0x41bb72
  41bbde:	pop    ecx
  41bbdf:	add    ch,0x2b
  41bbe2:	jle    0x41bbca
  41bbe4:	ss push ebp
  41bbe6:	sbb    BYTE PTR [eax+0x604bc171],dl
  41bbec:	xor    eax,0xa4523f99
  41bbf1:	xor    ebx,edx
  41bbf3:	fsubr  DWORD PTR [ecx]
  41bbf5:	sub    eax,0x78fde0ed
  41bbfa:	test   al,0x86
  41bbfc:	jmp    0xac8e:0x9930e9bd
  41bc03:	mov    ss,esp
  41bc05:	fiadd  DWORD PTR [edx+eax*1+0x70c34d50]
  41bc0c:	push   es
  41bc0d:	pop    esi
  41bc0e:	dec    edx
  41bc0f:	shl    BYTE PTR ss:[edi-0xcca98ba],1
  41bc16:	add    ecx,edi
  41bc18:	sbb    dl,cl
  41bc1a:	xor    cl,dl
  41bc1c:	cmp    ecx,DWORD PTR [edi]
  41bc1e:	sti    
  41bc1f:	and    eax,DWORD PTR [ecx-0x76308627]
  41bc25:	gs push edx
  41bc27:	addr16 push ecx
  41bc29:	adc    eax,0x2e1a6145
  41bc2e:	xor    al,0x7f
  41bc30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc31:	jne    0x41bc48
  41bc33:	mov    ch,0x0
  41bc35:	pop    ss
  41bc36:	jb     0x41bbf7
  41bc38:	sbb    dh,BYTE PTR [eax+0x193f9707]
  41bc3e:	lds    edi,FWORD PTR [ebx+ebx*1+0x74]
  41bc42:	gs inc eax
  41bc44:	mov    dh,0x35
  41bc46:	fisub  DWORD PTR [edx+0x12]
  41bc49:	ja     0x41bc08
  41bc4b:	out    0x1d,eax
  41bc4d:	fldcw  WORD PTR [ebx-0x20]
  41bc50:	outs   dx,DWORD PTR ds:[esi]
  41bc51:	repz add ecx,ecx
  41bc54:	pop    eax
  41bc55:	add    dl,BYTE PTR [edx+0x48b4a2c5]
  41bc5b:	push   eax
  41bc5c:	bound  esp,QWORD PTR [ebp-0x3d]
  41bc5f:	pop    ecx
  41bc60:	cmp    al,0x7e
  41bc62:	cmc    
  41bc63:	imul   edi,ebp,0xb59f0fd7
  41bc69:	fs lock pop ebp
  41bc6c:	pop    ebp
  41bc6d:	adc    al,0x48
  41bc6f:	test   al,0x8f
  41bc71:	pop    edi
  41bc72:	dec    esi
  41bc73:	pop    esp
  41bc74:	mov    ah,0x90
  41bc76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc77:	data16 add BYTE PTR [esp+esi*8-0x9],cl
  41bc7c:	sbb    cl,BYTE PTR [ebx+0x3039d64f]
  41bc82:	dec    ecx
  41bc83:	xor    al,ah
  41bc85:	jno    0x41bc25
  41bc87:	out    dx,al
  41bc88:	call   0x18a8d18f
  41bc8d:	xchg   edi,eax
  41bc8e:	(bad)  
  41bc8f:	mov    bh,0x21
  41bc91:	mov    ecx,0x825ad95c
  41bc96:	dec    edi
  41bc97:	aaa    
  41bc98:	sub    eax,0x61a489c
  41bc9d:	push   0x668666da
  41bca2:	and    ah,dh
  41bca4:	sbb    eax,0x98289aa6
  41bca9:	retf   
  41bcaa:	push   esp
  41bcab:	(bad)  
  41bcac:	jmp    0x2ff5:0x67176624
  41bcb3:	dec    ebx
  41bcb4:	pop    edi
  41bcb5:	sbb    DWORD PTR [esi+0x5],edi
  41bcb8:	in     al,dx
  41bcb9:	push   edx
  41bcba:	push   eax
  41bcbb:	cmp    al,0x21
  41bcbd:	push   ss
  41bcbe:	imul   ebp,edi,0x3b0b5db
  41bcc4:	mov    edi,DWORD PTR [ebx-0x17710248]
  41bcca:	das    
  41bccb:	loopne 0x41bcdb
  41bccd:	inc    esi
  41bcce:	inc    esi
  41bccf:	jle    0x41bcce
  41bcd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcd2:	sub    BYTE PTR [ecx+0x1a],bh
  41bcd5:	retf   0x4162
  41bcd8:	push   esp
  41bcd9:	mov    bl,0xf2
  41bcdb:	cmp    esi,DWORD PTR [edx]
  41bcdd:	fnstenv [ecx]
  41bcdf:	ins    BYTE PTR es:[edi],dx
  41bce0:	push   ss
  41bce1:	mov    edi,0x2926f6ab
  41bce6:	mov    ch,0x21
  41bce8:	push   ebx
  41bce9:	gs dec ebx
  41bceb:	or     BYTE PTR ds:0x5a741a61,bh
  41bcf1:	(bad)  [edx]
  41bcf3:	pop    ss
  41bcf4:	jno    0x41bd29
  41bcf6:	fidivr DWORD PTR [edi+0x35ca6e02]
  41bcfc:	sar    ebp,1
  41bcfe:	inc    edi
  41bcff:	dec    edi
  41bd00:	push   eax
  41bd01:	inc    ebx
  41bd02:	scas   eax,DWORD PTR es:[edi]
  41bd03:	std    
  41bd04:	inc    esp
  41bd05:	enter  0x66b1,0x63
  41bd09:	test   eax,0xa61ace7d
  41bd0e:	call   0x85044372
  41bd13:	or     BYTE PTR [edx+0x1c4d1bd9],dh
  41bd19:	clc    
  41bd1a:	jle    0x41bced
  41bd1c:	dec    esi
  41bd1d:	imul   ecx,DWORD PTR [ecx+0x6c],0xfc484f40
  41bd24:	jb     0x41bd4a
  41bd26:	jns    0x41bd6c
  41bd28:	data16 in al,0xea
  41bd2b:	pushw  0xc829
  41bd2f:	fistp  WORD PTR [edx]
  41bd31:	jnp    0x41bd70
  41bd33:	js     0x41bda4
  41bd35:	test   ebx,ebx
  41bd37:	call   0x8215a4de
  41bd3c:	xchg   ebp,eax
  41bd3d:	jno    0x41bcfe
  41bd3f:	iret   
  41bd40:	mov    WORD PTR [ecx+0x2202b64f],?
  41bd46:	sbb    al,BYTE PTR [eax+0x51]
  41bd49:	dec    eax
  41bd4a:	dec    eax
  41bd4b:	call   0x2fd04d7e
  41bd50:	enter  0x3fc,0x67
  41bd54:	cmp    ebp,DWORD PTR [esi+0x6516a2fa]
  41bd5a:	push   ecx
  41bd5b:	jae    0x41bd97
  41bd5d:	sub    eax,0xf6aacd49
  41bd62:	ins    DWORD PTR es:[edi],dx
  41bd63:	inc    edx
  41bd64:	outs   dx,DWORD PTR ds:[esi]
  41bd65:	push   esp
  41bd66:	adc    BYTE PTR [ebx+0x4e],dl
  41bd69:	fidivr DWORD PTR [ebp+0x1250a9f6]
  41bd6f:	stos   DWORD PTR es:[edi],eax
  41bd70:	xchg   edx,eax
  41bd71:	lods   eax,DWORD PTR ds:[esi]
  41bd72:	inc    eax
  41bd73:	std    
  41bd74:	sbb    dl,BYTE PTR [edx]
  41bd76:	and    eax,0xfb0ac155
  41bd7b:	dec    edx
  41bd7c:	xor    BYTE PTR [ecx],al
  41bd7e:	imul   esp,DWORD PTR [ecx+0x693ad9bc],0x21
  41bd85:	ss daa 
  41bd87:	lahf   
  41bd88:	js     0x41bd16
  41bd8a:	(bad)  
  41bd8b:	shl    BYTE PTR [edi-0x2f38b7e7],1
  41bd91:	push   ss
  41bd92:	stos   BYTE PTR es:[edi],al
  41bd93:	(bad)  
  41bd94:	test   al,0x10
  41bd96:	out    dx,al
  41bd97:	xchg   edx,eax
  41bd98:	adc    esi,DWORD PTR [edi+0x9]
  41bd9b:	bound  esi,QWORD PTR [si+0x19bb]
  41bda0:	popf   
  41bda1:	push   ecx
  41bda2:	dec    eax
  41bda3:	call   0x8b538923
  41bda8:	leave  
  41bda9:	in     al,0x61
  41bdab:	push   es
  41bdac:	sub    eax,0x2b66b410
  41bdb1:	inc    eax
  41bdb2:	repz test DWORD PTR [ecx+0x486a5f05],ebx
  41bdb9:	das    
  41bdba:	shr    BYTE PTR [ebx+0x1a],0x38
  41bdbe:	lods   al,BYTE PTR ds:[esi]
  41bdbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdc0:	scas   eax,DWORD PTR es:[edi]
  41bdc1:	jbe    0x41bdcf
  41bdc3:	and    dh,cl
  41bdc5:	enter  0x6695,0x9b
  41bdc9:	jno    0x41bdac
  41bdcb:	aaa    
  41bdcc:	push   esi
  41bdcd:	shr    DWORD PTR [edi-0x66],cl
  41bdd0:	(bad)  
  41bdd2:	aam    0xe6
  41bdd4:	ins    BYTE PTR es:[edi],dx
  41bdd5:	adc    BYTE PTR gs:[ebp-0x3d3a2a0d],dh
  41bddc:	sbb    al,BYTE PTR [ebp+eax*4-0x65]
  41bde0:	ins    DWORD PTR es:[edi],dx
  41bde1:	into   
  41bde2:	les    eax,FWORD PTR [eax+0x1a]
  41bde5:	in     al,dx
  41bde6:	inc    esi
  41bde7:	xor    BYTE PTR [ecx-0x3e053a21],al
  41bded:	mov    edi,0x96f5b862
  41bdf3:	data16 test BYTE PTR [edx-0x23e527dd],al
  41bdfa:	(bad)  
  41bdfb:	jnp    0x41be12
  41bdfd:	lods   eax,DWORD PTR ds:[esi]
  41bdfe:	adc    DWORD PTR [ebx+0x10],ebx
  41be01:	ficomp DWORD PTR [esi+0x5]
  41be04:	icebp  
  41be05:	jecxz  0x41bdfd
  41be07:	mov    ecx,0xdef4ff0d
  41be0c:	and    BYTE PTR [eax],al
  41be0e:	dec    eax
  41be0f:	add    DWORD PTR [ebp-0x6c1ebd5a],eax
  41be15:	or     esi,DWORD PTR [ebp+0x6092c666]
  41be1b:	push   0x531e17d2
  41be20:	mov    WORD PTR [eax+0x48],?
  41be23:	repz out dx,al
  41be25:	mov    dh,0x5e
  41be27:	stc    
  41be28:	jb     0x41bdeb
  41be2a:	and    DWORD PTR [esi+0x14],0x7
  41be2e:	fiadd  DWORD PTR [edi+0x33aea521]
  41be34:	jns    0x41be7a
  41be36:	cmp    ecx,edi
  41be38:	bound  esp,QWORD PTR [edi]
  41be3a:	pop    eax
  41be3b:	ror    BYTE PTR [eax],cl
  41be3d:	(bad)  
  41be3f:	loopne 0x41be30
  41be41:	adc    dl,BYTE PTR [ebp+0x14]
  41be44:	sti    
  41be45:	mov    edi,eax
  41be47:	call   0x3985:0x914a7f6b
  41be4e:	imul   DWORD PTR [eax-0x69]
  41be51:	fst    DWORD PTR [esi]
  41be53:	mov    dl,0xca
  41be55:	and    esp,edi
  41be57:	mov    esi,0xc1baacf
  41be5c:	test   eax,0x8c7048b7
  41be61:	push   es
  41be62:	cmp    ah,BYTE PTR ds:0x670fa157
  41be68:	pop    ebx
  41be69:	jmp    0x41be46
  41be6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be6c:	xor    BYTE PTR [edi-0x77e585cb],al
  41be72:	inc    ebp
  41be73:	mov    ecx,0x753e935e
  41be78:	(bad)  
  41be7a:	pushf  
  41be7b:	fst    QWORD PTR [edx]
  41be7d:	or     eax,0xc7c9111d
  41be82:	and    dh,BYTE PTR [edi+0x1a]
  41be85:	pusha  
  41be86:	mov    esi,0x8091ad01
  41be8b:	in     eax,0x5b
  41be8d:	mov    ebx,0xd60f4a4c
  41be92:	loop   0x41befb
  41be94:	mov    ebx,0x40e0b58a
  41be99:	les    ecx,FWORD PTR ds:0x49891863
  41be9f:	or     eax,0xbe2a3131
  41bea4:	cmp    al,BYTE PTR [ebx]
  41bea6:	or     eax,0x19d94112
  41beab:	jecxz  0x41be80
  41bead:	daa    
  41beae:	inc    esp
  41beaf:	je     0x41bf00
  41beb1:	mov    ah,0xb1
  41beb3:	mov    WORD PTR [esi-0x2488b0c8],cs
  41beb9:	cmc    
  41beba:	push   0x18f03e19
  41bebf:	jmp    0xa246:0x673071a7
  41bec6:	mov    edx,0x95fa0708
  41becb:	jnp    0x41beee
  41becd:	gs es fwait
  41bed0:	xor    BYTE PTR ds:0xcffa438a,bl
  41bed6:	or     BYTE PTR [esi+0x67315480],cl
  41bedc:	fmul   QWORD PTR [ebx]
  41bede:	mov    BYTE PTR [ebx],0x1a
  41bee1:	mov    edx,0x9cebe04b
  41bee6:	push   ebx
  41bee7:	mov    ds,WORD PTR [esi-0x3bdc09]
  41beed:	fnstcw WORD PTR [ebp+0x2b141163]
  41bef3:	push   ebx
  41bef4:	and    DWORD PTR [esi+0x2f],ecx
  41bef7:	jne    0x41bea8
  41bef9:	test   eax,0x3cb968b0
  41befe:	enter  0x266f,0x46
  41bf02:	dec    esp
  41bf03:	data16 adc bh,BYTE PTR [ebx-0x1fe5d942]
  41bf0a:	jnp    0x41bef5
  41bf0c:	out    dx,al
  41bf0d:	mov    DWORD PTR [eax+eiz*2-0x55],esp
  41bf11:	call   0x9e2866d9
  41bf16:	(bad)  
  41bf18:	cmp    cl,BYTE PTR [eax]
  41bf1a:	push   ss
  41bf1b:	stc    
  41bf1c:	sub    eax,0x2b4766b2
  41bf21:	xlat   BYTE PTR ds:[ebx]
  41bf22:	dec    eax
  41bf23:	stc    
  41bf24:	inc    edx
  41bf25:	push   eax
  41bf26:	adc    cl,BYTE PTR cs:[eax+0x30e03ed9]
  41bf2d:	pushf  
  41bf2e:	xor    edi,ecx
  41bf30:	adc    BYTE PTR [ebx],ah
  41bf32:	out    dx,eax
  41bf33:	dec    edx
  41bf34:	outs   dx,BYTE PTR ds:[esi]
  41bf35:	or     ecx,DWORD PTR [edi+0x43]
  41bf38:	and    DWORD PTR [ebp+0x568e1621],eax
  41bf3e:	or     ah,ch
  41bf40:	xchg   ebx,eax
  41bf41:	jbe    0x41bf47
  41bf43:	outs   dx,BYTE PTR ds:[esi]
  41bf44:	mov    al,ds:0xe94d0e29
  41bf49:	xchg   BYTE PTR [eax+0x48752ec9],dh
  41bf4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf50:	mov    ch,BYTE PTR [edx+0x54]
  41bf53:	(bad)  
  41bf54:	scas   al,BYTE PTR es:[edi]
  41bf55:	out    dx,al
  41bf56:	shl    DWORD PTR [edi+0x32],1
  41bf59:	fbld   TBYTE PTR [edx-0x56]
  41bf5c:	jmp    0x7e2e:0x1b5d8247
  41bf63:	sub    bh,BYTE PTR [esi-0x3]
  41bf66:	enter  0xf89,0xa3
  41bf6a:	pop    esp
  41bf6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bf6c:	bound  edx,QWORD PTR [eax+ebp*2-0x2d]
  41bf70:	in     eax,dx
  41bf71:	ds popa 
  41bf73:	imul   ecx,DWORD PTR [eax],0xe1a01967
  41bf79:	or     bl,BYTE PTR [eax]
  41bf7b:	les    eax,FWORD PTR [eax+ebx*4]
  41bf7e:	xor    al,0x1f
  41bf80:	pop    edx
  41bf81:	ret    0x414d
  41bf84:	call   0xc0d9:0x27a75f0a
  41bf8b:	pop    edx
  41bf8c:	fs mov bl,0xd0
  41bf8f:	ds and bl,BYTE PTR cs:[edi]
  41bf93:	xchg   BYTE PTR [edi-0x5080b80b],al
  41bf99:	sub    edx,edx
  41bf9b:	je     0x41bfb5
  41bf9d:	pushf  
  41bf9e:	lods   eax,DWORD PTR ds:[esi]
  41bf9f:	jns    0x41bf4c
  41bfa1:	iret   
  41bfa2:	or     BYTE PTR [edi-0x48],ah
  41bfa5:	xor    eax,0x6c9622de
  41bfaa:	dec    eax
  41bfab:	cmp    eax,0x82c54e16
  41bfb0:	mov    cl,0xd9
  41bfb2:	cs pop edi
  41bfb4:	add    edx,DWORD PTR [ecx+ebx*8+0x77]
  41bfb8:	out    dx,eax
  41bfb9:	das    
  41bfba:	mov    bh,0x91
  41bfbc:	sbb    eax,0xe79d008b
  41bfc1:	sti    
  41bfc2:	pushf  
  41bfc3:	jl     0x41bf5f
  41bfc5:	cld    
  41bfc6:	ret    
  41bfc7:	cmp    dh,BYTE PTR [ecx-0x27]
  41bfca:	mov    cl,0xad
  41bfcc:	push   ecx
  41bfcd:	stos   DWORD PTR es:[edi],eax
  41bfce:	lock and eax,0x8da578e2
  41bfd4:	sti    
  41bfd5:	adc    ecx,DWORD PTR [ecx-0x12]
  41bfd8:	push   ds
  41bfd9:	ja     0x41bf67
  41bfdb:	shr    eax,cl
  41bfdd:	fdiv   QWORD PTR [edi+0xa2420da]
  41bfe3:	mov    ebp,0x46cc82fa
  41bfe8:	aaa    
  41bfe9:	js     0x41c067
  41bfeb:	ja     0x41bfce
  41bfed:	iret   
  41bfee:	loopne 0x41bf92
  41bff0:	jp     0x41c032
  41bff2:	sub    dh,BYTE PTR [ebx-0x7ac425f3]
  41bff8:	js     0x41c062
  41bffa:	and    al,0xfb
  41bffc:	or     edi,ebp
  41bffe:	in     al,dx
  41bfff:	jl     0x41c068
  41c001:	sbb    BYTE PTR [ebp+0xd],cl
  41c004:	fcmovbe st,st(6)
  41c006:	inc    ebp
  41c007:	daa    
  41c008:	pop    esp
  41c009:	fnstcw WORD PTR [esp+ecx*8+0x171cea4a]
  41c010:	repz cmp esi,eax
  41c013:	and    bh,cl
  41c015:	stc    
  41c016:	inc    edi
  41c017:	loope  0x41c02d
  41c019:	inc    edx
  41c01a:	je     0x41bfe0
  41c01c:	jecxz  0x41bff8
  41c01e:	(bad)  
  41c01f:	(bad)  
  41c020:	in     eax,dx
  41c021:	xchg   esp,eax
  41c022:	pop    ebx
  41c023:	int    0xb5
  41c025:	cmp    ecx,ebx
  41c027:	rcr    BYTE PTR [edx+ecx*4],0x8
  41c02b:	imul   edi,DWORD PTR [edx+0x68],0x4f
  41c02f:	adc    al,0xf3
  41c031:	fwait
  41c032:	mov    edx,0x3b0948c6
  41c037:	jbe    0x41bff3
  41c039:	je     0x41c008
  41c03b:	or     edx,ecx
  41c03d:	ret    0x76c0
  41c040:	retf   
  41c041:	loop   0x41c08a
  41c043:	xchg   ebx,eax
  41c044:	and    dh,bl
  41c046:	int    0xbf
  41c048:	push   ds
  41c049:	fsubp  st(2),st
  41c04b:	fsubr  st(6),st
  41c04d:	scas   eax,DWORD PTR es:[edi]
  41c04e:	stos   DWORD PTR es:[edi],eax
  41c04f:	inc    ecx
  41c050:	jns    0x41c0cf
  41c052:	xchg   esp,eax
  41c053:	out    0x21,al
  41c055:	push   ss
  41c056:	and    ah,BYTE PTR [eax-0x556df106]
  41c05c:	add    ch,BYTE PTR [edi-0x1a9a197d]
  41c062:	and    dl,BYTE PTR [edx+eiz*2]
  41c065:	mov    eax,0xc21a6db6
  41c06a:	adc    cl,al
  41c06c:	xchg   edi,eax
  41c06d:	xor    eax,0xdce89d36
  41c072:	or     ebx,DWORD PTR [eax+0x49394364]
  41c078:	mov    ds:0x58e89f9c,al
  41c07d:	push   ss
  41c07e:	add    BYTE PTR [esi],cl
  41c080:	pop    ds
  41c081:	and    DWORD PTR [edi],ecx
  41c083:	out    0xa7,eax
  41c085:	outs   dx,BYTE PTR ds:[esi]
  41c086:	sbb    al,0xc2
  41c088:	inc    edx
  41c089:	cld    
  41c08a:	add    esp,DWORD PTR [edi+0x3e]
  41c08d:	adc    eax,0x5e57c947
  41c092:	(bad)  
  41c093:	shr    BYTE PTR [ecx+0x5be745e1],cl
  41c099:	out    0xd1,eax
  41c09b:	push   eax
  41c09c:	(bad)  
  41c09d:	imul   ecx
  41c09f:	or     sp,WORD PTR [eax-0xd76d7f]
  41c0a6:	mov    WORD PTR [eax-0x40d8a0c6],ss
  41c0ac:	xchg   edx,eax
  41c0ad:	fstp   DWORD PTR [ecx]
  41c0af:	dec    ebp
  41c0b0:	imul   esi,DWORD PTR [edx+0x3a8b355],0xffffffe7
  41c0b7:	sub    ebx,DWORD PTR [esi+0x6132486c]
  41c0bd:	repnz pop esp
  41c0bf:	mov    ebp,DWORD PTR [esi-0x60998f7f]
  41c0c5:	adc    BYTE PTR [eax+0x34],al
  41c0c8:	sbb    bl,ch
  41c0ca:	inc    ecx
  41c0cb:	fs nop
  41c0cd:	cld    
  41c0ce:	adc    ebp,edx
  41c0d0:	std    
  41c0d1:	fst    DWORD PTR [ebx+edi*8-0x5ddcca67]
  41c0d8:	adc    BYTE PTR [ebp+0x1d],0xc2
  41c0dc:	dec    ebp
  41c0dd:	mov    dh,0x48
  41c0df:	jmp    0xe5dc:0xb3356d00
  41c0e6:	mov    edi,0xfdd8f566
  41c0eb:	sbb    bl,BYTE PTR [edx]
  41c0ed:	xor    BYTE PTR [eax+0x6b],bh
  41c0f0:	add    eax,edx
  41c0f2:	mov    ecx,0x1d11b715
  41c0f7:	pop    esp
  41c0f8:	sbb    eax,0x994bea64
  41c0fd:	les    eax,FWORD PTR [esi-0x2763dd45]
  41c103:	mov    bl,0x2
  41c105:	test   al,0x48
  41c107:	push   esi
  41c108:	inc    edx
  41c109:	and    dl,dh
  41c10b:	mov    al,ds:0x69cd3047
  41c110:	push   edx
  41c111:	cmp    eax,0x1a0ede60
  41c116:	call   0x839e9c17
  41c11b:	cli    
  41c11c:	(bad)  
  41c11d:	pop    esi
  41c11e:	dec    edx
  41c11f:	loop   0x41c0c7
  41c121:	fadd   QWORD PTR [edx]
  41c123:	dec    edi
  41c124:	repz push ebx
  41c126:	je     0x41c192
  41c128:	pusha  
  41c129:	xchg   edi,eax
  41c12a:	gs pop es
  41c12c:	sub    edx,DWORD PTR [edx+0x48]
  41c12f:	loop   0x41c16b
  41c131:	push   esi
  41c132:	mov    bh,0xae
  41c134:	mov    dl,0x51
  41c136:	stc    
  41c137:	data16 sbb BYTE PTR [ebx-0x42],al
  41c13b:	dec    esp
  41c13c:	sbb    bl,BYTE PTR [eax+0x5f116137]
  41c142:	out    dx,eax
  41c143:	mov    edi,0x9bf655d4
  41c148:	sub    esp,ebx
  41c14a:	out    0x66,eax
  41c14c:	pop    eax
  41c14d:	adc    DWORD PTR [eax],0xffffffe2
  41c150:	dec    eax
  41c151:	stos   BYTE PTR es:[edi],al
  41c152:	ins    DWORD PTR es:[edi],dx
  41c153:	cmp    DWORD PTR [eax],ebp
  41c155:	mov    cl,0x9c
  41c157:	enter  0x9971,0x93
  41c15b:	cmc    
  41c15c:	and    eax,0xe3d7ea64
  41c161:	loop   0x41c1ae
  41c163:	push   dx
  41c165:	add    bh,BYTE PTR [ebx]
  41c167:	mov    al,ds:0x626ed836
  41c16c:	sbb    dh,BYTE PTR [eax]
  41c16e:	std    
  41c16f:	je     0x41c15d
  41c171:	jmp    0x41c119
  41c173:	test   al,0xaf
  41c175:	(bad)
  41c178:	fst    st(5)
  41c17a:	lea    ebp,[ebp-0xeeb6ae6]
  41c180:	mul    DWORD PTR ss:[eax-0x4e091caf]
  41c187:	adc    dh,BYTE PTR [edi+0x33814cd9]
  41c18d:	cli    
  41c18e:	inc    ebp
  41c18f:	in     eax,0x39
  41c191:	mov    esi,0x201a3d4e
  41c196:	pop    es
  41c197:	stc    
  41c198:	ins    BYTE PTR es:[edi],dx
  41c199:	in     eax,dx
  41c19a:	popf   
  41c19b:	mov    al,BYTE PTR [edi+0xa]
  41c19e:	mov    WORD PTR [ecx-0x25b7788e],fs
  41c1a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1a5:	sbb    DWORD PTR [ecx+edi*8-0x5779a64f],0x4f962f50
  41c1b0:	std    
  41c1b1:	fmul   QWORD PTR ds:0x4af29246
  41c1b7:	and    edi,DWORD PTR [edx-0x66ca39e6]
  41c1bd:	mov    esp,gs
  41c1bf:	bound  esi,QWORD PTR [edx]
  41c1c1:	inc    eax
  41c1c2:	dec    eax
  41c1c3:	jecxz  0x41c20f
  41c1c5:	lea    esp,[esp+ebp*4]
  41c1c8:	mov    ch,0x7c
  41c1ca:	les    ebp,FWORD PTR [ebp-0x3c]
  41c1cd:	pop    esp
  41c1ce:	push   cs
  41c1cf:	mov    ebx,0x6ecfcaea
  41c1d4:	add    BYTE PTR [ecx],bl
  41c1d6:	vpsadbw xmm1,xmm6,XMMWORD PTR [ebx]
  41c1da:	dec    eax
  41c1db:	ins    BYTE PTR es:[edi],dx
  41c1dc:	pop    ds
  41c1dd:	xchg   esi,eax
  41c1de:	inc    edx
  41c1df:	inc    esi
  41c1e0:	mov    ds:0x1ad80321,al
  41c1e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1e6:	or     DWORD PTR [ebp+0x7e],0x1a86e42e
  41c1ed:	sub    eax,0x32a80fe1
  41c1f2:	(bad)  
  41c1f4:	repz sbb BYTE PTR [esp+eax*2-0x1a],cl
  41c1f9:	mov    ebx,0x3f1cf03f
  41c1fe:	add    DWORD PTR [edx],0xffffffe9
  41c201:	(bad)  
  41c202:	sbb    ah,dh
  41c204:	push   ecx
  41c205:	out    dx,eax
  41c206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c207:	test   eax,0x6f483d25
  41c20c:	ret    
  41c20d:	scas   eax,DWORD PTR es:[edi]
  41c20e:	leave  
  41c20f:	sub    BYTE PTR [esi],bl
  41c211:	shr    DWORD PTR [esi+0x2d4d1666],cl
  41c217:	cdq    
  41c218:	push   esi
  41c219:	(bad)  
  41c21a:	call   0xb066:0x9e84f9ff
  41c221:	or     DWORD PTR [esi-0x67],ebp
  41c224:	mov    eax,ds:0xd966a153
  41c229:	sub    BYTE PTR [ebx-0x7d],ah
  41c22c:	sbb    eax,0x16589c6a
  41c231:	pop    es
  41c232:	xchg   ebp,eax
  41c233:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c234:	aas    
  41c235:	repnz mov dl,0x6
  41c238:	loopne 0x41c29a
  41c23a:	cld    
  41c23b:	data16 fldcw WORD PTR [edx]
  41c23e:	rcr    DWORD PTR [esi-0x1050efe6],0x1e
  41c245:	push   eax
  41c246:	idiv   BYTE PTR [esi+eiz*2]
  41c249:	out    0xc7,eax
  41c24b:	jmp    0x6462:0xa6b5d8ed
  41c252:	call   0x4d51fc10
  41c257:	or     eax,0xe1f5271a
  41c25c:	sub    ebp,ebx
  41c25e:	xor    DWORD PTR [esi+0x60],ebx
  41c261:	push   esi
  41c262:	lock loope 0x41c258
  41c265:	add    DWORD PTR [ebp-0x328a1a9a],esp
  41c26b:	ins    BYTE PTR es:[edi],dx
  41c26c:	stos   BYTE PTR es:[edi],al
  41c26d:	in     al,dx
  41c26e:	and    eax,0x489ee038
  41c273:	mov    esp,DWORD PTR [esi]
  41c275:	test   BYTE PTR [ecx],0x7
  41c278:	or     esp,DWORD PTR [ecx-0xc]
  41c27b:	data16 xchg BYTE PTR [edi+0x411a551d],bh
  41c282:	aaa    
  41c283:	mov    ebx,0x4a13f2f7
  41c288:	sub    dh,dh
  41c28a:	jb     0x41c2ad
  41c28c:	inc    esi
  41c28d:	pushf  
  41c28e:	jg     0x41c29c
  41c290:	lods   al,BYTE PTR ds:[esi]
  41c291:	stc    
  41c292:	or     esi,ebx
  41c294:	push   ebx
  41c295:	adc    eax,0x854bbac8
  41c29a:	dec    eax
  41c29b:	outs   dx,BYTE PTR ds:[esi]
  41c29c:	add    cl,BYTE PTR [edx+ebp*1-0x705676d4]
  41c2a3:	data16 mov bl,0x16
  41c2a6:	jmp    FWORD PTR [esi]
  41c2a8:	cmp    dl,al
  41c2aa:	cdq    
  41c2ab:	stos   BYTE PTR es:[edi],al
  41c2ac:	sbb    dh,BYTE PTR [edi]
  41c2ae:	sbb    eax,0x378f4b53
  41c2b3:	xchg   ebp,eax
  41c2b4:	data16 jp 0x41c2ce
  41c2b7:	addr16 ss push eax
  41c2ba:	inc    ebp
  41c2bb:	test   BYTE PTR [ecx+esi*1],bl
  41c2be:	nop
  41c2bf:	xchg   ecx,eax
  41c2c0:	lods   al,BYTE PTR ds:[esi]
  41c2c1:	out    dx,al
  41c2c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c2c3:	adc    bh,BYTE PTR [edx+0x3ba6e78a]
  41c2c9:	sbb    BYTE PTR [edx-0x1ab2e591],ch
  41c2cf:	xor    BYTE PTR [eax],ah
  41c2d1:	mov    ds:0xc051a6a0,al
  41c2d6:	dec    ebx
  41c2d7:	jo     0x41c2fa
  41c2d9:	test   eax,0xcff85300
  41c2de:	jecxz  0x41c301
  41c2e0:	imul   ebx,ecx,0xa1b74880
  41c2e6:	mov    ebx,0x22306b9b
  41c2eb:	mov    ch,0xf9
  41c2ed:	or     DWORD PTR [eax+0x67],0xa6534063
  41c2f4:	xchg   BYTE PTR [esi],dh
  41c2f6:	jne    0x41c35f
  41c2f8:	jge    0x41c34e
  41c2fa:	push   ss
  41c2fb:	jmp    0x568d5e15
  41c300:	push   esp
  41c301:	and    DWORD PTR [eax-0x74],ecx
  41c304:	sbb    BYTE PTR gs:[ecx+0x3138aa6d],ah
  41c30b:	addr16 loopne 0x41c317
  41c30e:	sbb    ch,bl
  41c310:	sbb    ch,BYTE PTR [eax-0x2151dc19]
  41c316:	push   ds
  41c317:	inc    eax
  41c318:	outs   dx,BYTE PTR ds:[esi]
  41c319:	fldcw  WORD PTR [eax-0x10]
  41c31c:	sub    DWORD PTR [ebx-0x6680f418],ebp
  41c322:	xchg   edx,eax
  41c323:	sbb    eax,0x8f86d9b7
  41c328:	sub    eax,0xa70e03f
  41c32d:	fimul  DWORD PTR [edi-0x6f]
  41c330:	push   ebp
  41c331:	stos   BYTE PTR es:[edi],al
  41c332:	pop    ecx
  41c333:	dec    eax
  41c334:	leave  
  41c335:	test   eax,0x9ce7eddc
  41c33a:	dec    eax
  41c33b:	cmp    ch,BYTE PTR [edx+0x4bca5b90]
  41c341:	cmp    ebp,edx
  41c343:	dec    si
  41c345:	out    0xa9,al
  41c347:	dec    edi
  41c348:	sbb    bh,BYTE PTR [eax-0x5e]
  41c34b:	gs in  eax,0xd2
  41c34e:	dec    esp
  41c34f:	pop    ebp
  41c350:	and    al,0xd3
  41c352:	sar    DWORD PTR [edx+0x671f136d],1
  41c358:	mov    ds:0x1abfb31e,al
  41c35d:	dec    esp
  41c35e:	stc    
  41c35f:	inc    ebx
  41c360:	push   ss
  41c361:	mov    eax,0x9d97239
  41c367:	push   ebx
  41c368:	mov    ebx,ebx
  41c36a:	hlt    
  41c36b:	add    DWORD PTR [ebp-0x52],ecx
  41c36e:	jle    0x41c2f1
  41c370:	cli    
  41c371:	popf   
  41c372:	dec    eax
  41c373:	mov    ds:0x9b952077,al
  41c378:	aaa    
  41c379:	dec    eax
  41c37a:	pusha  
  41c37b:	data16 add dh,dh
  41c37e:	cmp    eax,0x759121e1
  41c383:	sub    al,0x88
  41c385:	mov    ds:0x703d34ff,eax
  41c38a:	test   al,0xb3
  41c38c:	push   ebx
  41c38d:	mov    cl,0x58
  41c38f:	je     0x41c32b
  41c391:	inc    eax
  41c392:	push   ebx
  41c393:	inc    ecx
  41c394:	stc    
  41c395:	mov    esi,0x421a571d
  41c39a:	rcl    DWORD PTR [eax-0x3d7bd271],0xf
  41c3a1:	fisub  DWORD PTR [ecx]
  41c3a3:	xchg   edx,eax
  41c3a4:	or     al,0xc4
  41c3a7:	out    dx,al
  41c3a8:	and    bl,BYTE PTR [edx+0x5418a1a6]
  41c3ae:	dec    eax
  41c3af:	out    dx,eax
  41c3b0:	xor    edx,eax
  41c3b2:	test   DWORD PTR [edi],0x66a7cbb1
  41c3b8:	js     0x41c390
  41c3ba:	ret    
  41c3bb:	mov    WORD PTR [ecx],fs
  41c3bd:	scas   al,BYTE PTR es:[edi]
  41c3be:	add    al,BYTE PTR [ebp+0x56]
  41c3c1:	sub    eax,0xb15179ca
  41c3c6:	mov    eax,0x490ecee4
  41c3cb:	stos   WORD PTR es:[edi],ax
  41c3cd:	inc    esp
  41c3ce:	cmp    eax,0x14de1ae0
  41c3d3:	pop    edx
  41c3d4:	js     0x41c422
  41c3d6:	addr16 hlt 
  41c3d8:	xor    ecx,ebx
  41c3da:	addr16 pop edi
  41c3dc:	jmp    0x41c3c5
  41c3de:	xor    ebx,DWORD PTR [ecx+0xa]
  41c3e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3e2:	(bad)  [ecx-0x78]
  41c3e5:	fld    DWORD PTR [esi-0x5f95481]
  41c3eb:	push   ss
  41c3ec:	sbb    ecx,esp
  41c3ee:	rol    BYTE PTR [ebp+0x12],1
  41c3f1:	xor    al,cl
  41c3f3:	test   edx,edx
  41c3f5:	xchg   BYTE PTR [esi+eiz*8+0x1a],bl
  41c3f9:	rcl    BYTE PTR [edx],cl
  41c3fb:	lea    eax,[ebx+0x670502a]
  41c401:	push   edi
  41c402:	mov    esi,esi
  41c404:	mov    eax,DWORD PTR [ebp+0x3f1f66bf]
  41c40a:	mov    bh,0x37
  41c40c:	sbb    dh,ah
  41c40e:	stc    
  41c40f:	mov    ds:0xb7444ef4,eax
  41c414:	arpl   dx,bx
  41c416:	lods   al,BYTE PTR ds:[esi]
  41c417:	sbb    eax,0xbd3043be
  41c41c:	add    BYTE PTR [ebx-0x41],cl
  41c41f:	or     eax,0xa7337c9c
  41c424:	test   BYTE PTR ds:[ecx],dl
  41c427:	rcr    BYTE PTR [edx],1
  41c429:	les    ebp,FWORD PTR [ecx+0x16e69462]
  41c42f:	cdq    
  41c430:	retf   
  41c431:	pop    es
  41c432:	ss push 0xffffff91
  41c435:	pop    ss
  41c436:	leave  
  41c437:	rol    DWORD PTR [eax],cl
  41c439:	adc    al,0xd0
  41c43b:	cmp    DWORD PTR [edx-0x3e7db799],esp
  41c441:	enter  0xa684,0x3f
  41c445:	out    0xa8,al
  41c447:	out    dx,ax
  41c449:	(bad)
  41c44d:	mov    DWORD PTR [esi],esi
  41c44f:	or     al,0x18
  41c451:	ror    BYTE PTR [edx+edi*1-0x66],cl
  41c455:	cwde   
  41c456:	xor    al,0xd
  41c458:	ins    DWORD PTR es:[edi],dx
  41c459:	fstp   DWORD PTR [edx]
  41c45b:	or     DWORD PTR [edi],edi
  41c45d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c45e:	sub    eax,edi
  41c460:	and    BYTE PTR [esi],cl
  41c462:	stos   DWORD PTR es:[edi],eax
  41c463:	pop    esp
  41c464:	fwait
  41c465:	in     eax,dx
  41c466:	inc    edi
  41c467:	cmp    eax,0x84c5228c
  41c46c:	pop    esp
  41c46d:	adc    DWORD PTR [eax-0x5d],eax
  41c470:	push   cs
  41c471:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c472:	dec    eax
  41c473:	outs   dx,DWORD PTR ds:[esi]
  41c474:	test   al,0x75
  41c476:	pop    esi
  41c477:	addr16 mov ds:0x484e,al
  41c47b:	imul   eax,ebp,0x2f
  41c47e:	or     eax,0xdb3410bc
  41c483:	retfw  0x64b5
  41c487:	mov    bh,0xa
  41c489:	push   ebp
  41c48a:	mov    ch,0xf5
  41c48c:	xor    DWORD PTR [ebp+eiz*2+0x1e],ebx
  41c490:	cwde   
  41c491:	pop    esi
  41c492:	or     BYTE PTR [edx+0x5405d93c],cl
  41c498:	push   ss
  41c499:	repnz cld 
  41c49b:	les    ebp,FWORD PTR [ebx+edx*8+0x36213157]
  41c4a2:	clc    
  41c4a3:	xor    DWORD PTR [edx-0x39525c45],eax
  41c4a9:	ret    
  41c4aa:	push   0x5d972041
  41c4af:	pushfw 
  41c4b1:	jge    0x41c44b
  41c4b3:	dec    esi
  41c4b4:	inc    eax
  41c4b5:	pushf  
  41c4b6:	leave  
  41c4b7:	jmp    0xcd5:0x36616325
  41c4be:	sti    
  41c4bf:	data16 or al,0xda
  41c4c2:	xor    ecx,0xfffffff5
  41c4c5:	out    dx,al
  41c4c6:	out    dx,eax
  41c4c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4c8:	lea    ebp,[edx]
  41c4ca:	push   ecx
  41c4cb:	out    0x73,al
  41c4cd:	lods   eax,DWORD PTR ds:[esi]
  41c4ce:	retfw  0x33be
  41c4d2:	cmp    BYTE PTR [ebp+0x1b],al
  41c4d5:	or     cl,bl
  41c4d7:	data16 cmc 
  41c4d9:	and    BYTE PTR ds:0x55d31a52,0x1f
  41c4e0:	(bad)  
  41c4e1:	mov    BYTE PTR [ecx-0x60],0x7d
  41c4e5:	fiadd  DWORD PTR [ebx]
  41c4e7:	test   dh,ah
  41c4e9:	mov    cl,BYTE PTR [edx-0x67568d1d]
  41c4ef:	jnp    0x41c481
  41c4f1:	cwde   
  41c4f2:	xchg   DWORD PTR [edx+0x4],ebx
  41c4f5:	test   BYTE PTR [edx-0x2c],0xdb
  41c4f9:	pop    ecx
  41c4fa:	repz pop ebp
  41c4fc:	iret   
  41c4fd:	call   0x12b14e64
  41c502:	push   edx
  41c503:	or     ch,BYTE PTR [ecx]
  41c505:	push   edx
  41c506:	mov    BYTE PTR [edx],dh
  41c508:	sbb    bh,BYTE PTR [ecx]
  41c50a:	jne    0x41c524
  41c50c:	xor    ebp,DWORD PTR [ecx+0x2a]
  41c50f:	mov    bh,0xb0
  41c511:	fld    st(4)
  41c513:	test   eax,0xca39731b
  41c518:	outs   dx,BYTE PTR ds:[esi]
  41c519:	push   ss
  41c51a:	xchg   BYTE PTR ds:0x60485e6f,bh
  41c520:	sub    DWORD PTR [ebx+0x70],eax
  41c523:	add    DWORD PTR [edx+ebx*8-0x63d8ace5],ebx
  41c52a:	sbb    esp,DWORD PTR [eax+0x42a5c1f5]
  41c530:	sbb    bl,BYTE PTR [ebp-0x16b503ae]
  41c536:	xor    DWORD PTR [esp+ebp*8-0x6d567218],ebx
  41c53d:	push   edi
  41c53e:	push   eax
  41c53f:	loopne 0x41c59a
  41c541:	test   eax,0xfeaae60f
  41c546:	inc    esi
  41c547:	sub    al,0xab
  41c549:	sub    BYTE PTR [eax-0xf],cl
  41c54c:	(bad)  
  41c54d:	fwait
  41c54e:	jmp    0x41c589
  41c550:	sub    DWORD PTR [eax-0x57],ebx
  41c553:	pop    bx
  41c555:	mov    cl,0xd7
  41c557:	xchg   esp,eax
  41c558:	sbb    cl,BYTE PTR [ecx-0xf]
  41c55b:	sar    BYTE PTR [edx],0x0
  41c55e:	jae    0x41c5b1
  41c560:	fcmovnu st,st(2)
  41c562:	add    eax,DWORD PTR [eax-0x5fda48af]
  41c568:	fwait
  41c569:	enter  0xd92d,0x39
  41c56d:	stc    
  41c56e:	imul   eax
  41c570:	mov    ah,0x8
  41c572:	push   edi
  41c573:	or     eax,0x8e36eefe
  41c578:	mov    ?,WORD PTR [esi]
  41c57a:	sbb    bh,dl
  41c57c:	aad    0xbb
  41c57e:	inc    esi
  41c57f:	addr16 cdq 
  41c581:	shr    ecx,cl
  41c583:	icebp  
  41c584:	sbb    dl,BYTE PTR [edx+0x6faa9071]
  41c58a:	call   0xdf1b86af
  41c58f:	mov    ah,0x7a
  41c591:	shl    BYTE PTR [edi],0xe5
  41c594:	punpckhbw mm2,QWORD PTR [ebx+0x72]
  41c598:	test   edx,esi
  41c59a:	inc    edi
  41c59b:	xor    ch,bl
  41c59d:	jae    0x41c551
  41c59f:	repnz mov dh,0x74
  41c5a2:	inc    esi
  41c5a3:	addr16 jne 0x41c550
  41c5a6:	out    dx,al
  41c5a7:	ins    BYTE PTR es:[edi],dx
  41c5a8:	sbb    ah,BYTE PTR [ecx-0x52]
  41c5ab:	sub    ecx,DWORD PTR [edx]
  41c5ad:	dec    ebx
  41c5ae:	stos   DWORD PTR es:[edi],eax
  41c5af:	imul   esi,eax,0x4bddded9
  41c5b5:	repz pop ds
  41c5b7:	jmp    0x3b6b:0x5509e656
  41c5be:	mov    bx,0x8c5e
  41c5c2:	paddsw mm7,mm4
  41c5c5:	mov    bl,0x6
  41c5c7:	inc    edi
  41c5c8:	(bad)  
  41c5c9:	fcmovne st,st(2)
  41c5cb:	xor    eax,0x2d093881
  41c5d0:	fisub  DWORD PTR [ebx+0x121a00e3]
  41c5d6:	dec    ecx
  41c5d7:	add    ebp,DWORD PTR [ebx+0x764afff1]
  41c5dd:	fld    DWORD PTR [esi+0x7b]
  41c5e0:	sub    cl,dl
  41c5e2:	cmp    al,0xf6
  41c5e4:	ja     0x41c621
  41c5e6:	jge    0x41c623
  41c5e8:	push   0xffffff9f
  41c5ea:	dec    eax
  41c5eb:	loop   0x41c65f
  41c5ed:	cwde   
  41c5ee:	inc    esp
  41c5ef:	add    eax,0x6a8c17fa
  41c5f4:	xor    BYTE PTR [ecx+0x2e],bl
  41c5f7:	jb     0x41c628
  41c5f9:	pop    esp
  41c5fa:	scas   al,BYTE PTR es:[edi]
  41c5fb:	adc    al,0x59
  41c5fd:	test   BYTE PTR [eax+0x79],0x77
  41c601:	dec    eax
  41c602:	sub    ecx,esi
  41c604:	shl    bh,0x43
  41c607:	inc    edi
  41c608:	xor    eax,esp
  41c60a:	or     BYTE PTR [ebp-0x74],bl
  41c60d:	dec    edi
  41c60e:	or     BYTE PTR [ebp+0x197ca236],ch
  41c614:	call   0x6644:0x326a4032
  41c61b:	stos   BYTE PTR es:[edi],al
  41c61c:	inc    edi
  41c61d:	add    al,0x5f
  41c61f:	ins    DWORD PTR es:[edi],dx
  41c620:	or     BYTE PTR [edx],bl
  41c622:	mov    al,0x60
  41c624:	push   es
  41c625:	xchg   edi,eax
  41c626:	test   eax,0x47fdb8f8
  41c62b:	or     dl,BYTE PTR [edx]
  41c62d:	cmp    eax,0x28fb9a16
  41c632:	pop    ebx
  41c633:	jne    0x41c5ef
  41c635:	xchg   ebx,eax
  41c636:	sbb    edi,0x8f872d5d
  41c63c:	ffree  st(3)
  41c63e:	dec    eax
  41c63f:	mov    ebx,0x33a733b3
  41c644:	inc    eax
  41c645:	in     eax,0xec
  41c647:	jb     0x41c693
  41c649:	repnz mov esi,0x4baffaf6
  41c64f:	xor    bh,bl
  41c651:	xor    al,0xc4
  41c654:	cmp    ah,BYTE PTR [ebx+edi*8+0xc4ced0d]
  41c65b:	jbe    0x41c617
  41c65d:	sub    al,0xaa
  41c65f:	int    0x9b
  41c661:	dec    edx
  41c662:	add    al,0xdd
  41c664:	sbb    ch,ch
  41c666:	mov    bh,0xf3
  41c668:	dec    esp
  41c669:	xor    al,0x34
  41c66b:	out    dx,eax
  41c66c:	pop    eax
  41c66d:	(bad)  
  41c66f:	out    0xff,al
  41c671:	xchg   esp,eax
  41c672:	mov    edi,0xb8955bc2
  41c677:	adc    bh,BYTE PTR [ebx+0x27]
  41c67a:	dec    eax
  41c67b:	iret   
  41c67c:	mov    dl,0x14
  41c67e:	gs mov bl,0xae
  41c681:	scas   al,BYTE PTR es:[edi]
  41c682:	jae    0x41c6f9
  41c684:	enter  0x3dc9,0xe2
  41c688:	rol    DWORD PTR [ebx+0x2d1cad68],cl
  41c68e:	add    eax,0x4926926f
  41c693:	in     eax,0x17
  41c695:	jo     0x41c6d9
  41c697:	inc    edi
  41c698:	nop
  41c699:	test   eax,0x41c56727
  41c69e:	push   cs
  41c69f:	neg    DWORD PTR [edx]
  41c6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6a2:	popa   
  41c6a3:	mov    eax,ds:0xac01218d
  41c6a8:	(bad)  
  41c6a9:	sbb    BYTE PTR [edi],bl
  41c6ab:	es sbb al,0x75
  41c6ae:	lock cdq 
  41c6b0:	mov    ch,BYTE PTR [edi+0x46]
  41c6b3:	fdiv   DWORD PTR [edx-0x5]
  41c6b6:	xchg   ebp,edi
  41c6b8:	outs   dx,DWORD PTR ds:[esi]
  41c6b9:	loopne 0x41c704
  41c6bb:	fwait
  41c6bc:	xchg   edi,eax
  41c6bd:	mov    esp,0x59ffd298
  41c6c2:	(bad)  
  41c6c3:	sub    DWORD PTR [edi-0x27],esp
  41c6c6:	and    eax,DWORD PTR [esi]
  41c6c8:	adc    edi,DWORD PTR [esi-0x15c6b990]
  41c6ce:	push   edi
  41c6cf:	(bad)  
  41c6d0:	pop    ebx
  41c6d1:	int    0x48
  41c6d3:	popf   
  41c6d4:	xchg   esi,eax
  41c6d5:	cwde   
  41c6d6:	sahf   
  41c6d7:	adc    BYTE PTR [ebp+ebx*1+0x52],0x66
  41c6dc:	pushf  
  41c6dd:	dec    ecx
  41c6de:	sbb    DWORD PTR [ebx+ebx*1],eax
  41c6e1:	jae    0x41c6cf
  41c6e3:	xchg   edx,eax
  41c6e4:	fidivr WORD PTR [ebx+0x10]
  41c6e7:	popa   
  41c6e8:	fimul  WORD PTR [ecx+0x7ec84308]
  41c6ee:	or     DWORD PTR [edi-0x50],esp
  41c6f1:	(bad)  
  41c6f2:	daa    
  41c6f3:	mov    al,0x1a
  41c6f5:	mov    edx,0x5ac34006
  41c6fa:	jne    0x41c6ca
  41c6fc:	(bad)  
  41c6fd:	fld    DWORD PTR [esi+0x6f44ec6f]
  41c703:	sbb    edx,DWORD PTR [edi+0x66]
  41c706:	fisttp QWORD PTR [edx]
  41c708:	sbb    al,0xb9
  41c70a:	dec    eax
  41c70b:	pop    ecx
  41c70c:	sbb    DWORD PTR [edi],eax
  41c70e:	js     0x41c725
  41c710:	sub    ah,BYTE PTR [eax+0x7f]
  41c713:	mov    WORD PTR [di],cs
  41c716:	out    dx,eax
  41c717:	jae    0x41c6b5
  41c719:	pop    eax
  41c71a:	das    
  41c71b:	dec    edi
  41c71c:	mov    al,0xe1
  41c71e:	inc    edi
  41c71f:	add    DWORD PTR [esi+0x63076a03],esi
  41c725:	(bad)  
  41c726:	adc    DWORD PTR [edx-0x6e],ebp
  41c729:	inc    ecx
  41c72a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c72b:	in     al,dx
  41c72c:	mov    eax,ds:0x36ea1ff4
  41c731:	aas    
  41c732:	dec    eax
  41c733:	std    
  41c734:	fnsave [ecx+eiz*1+0x11bf719c]
  41c73b:	neg    DWORD PTR [edx-0x43]
  41c73e:	adc    eax,0x137fae67
  41c743:	cmp    al,0x1a
  41c745:	test   al,0x7b
  41c747:	xchg   ebx,eax
  41c748:	shr    BYTE PTR [ecx],1
  41c74a:	addr16 mov ebp,?
  41c74d:	fimul  DWORD PTR [edi]
  41c74f:	dec    eax
  41c750:	inc    edx
  41c751:	mov    ch,BYTE PTR [eax-0x65]
  41c754:	outs   dx,BYTE PTR ds:[esi]
  41c755:	rol    DWORD PTR [edi],1
  41c757:	in     al,dx
  41c758:	push   ax
  41c75a:	leave  
  41c75b:	dec    ebp
  41c75c:	mov    ecx,0x4a6df65d
  41c761:	cmp    eax,0xe89561c8
  41c766:	jp     0x41c7b9
  41c768:	test   esi,esp
  41c76a:	dec    esp
  41c76b:	mov    bl,0x8d
  41c76d:	fisttp QWORD PTR [eax]
  41c76f:	outs   dx,BYTE PTR ds:[esi]
  41c770:	cmp    edx,0xffffffa6
  41c773:	mov    BYTE PTR [edi+0x47],0x48
  41c777:	sbb    ch,BYTE PTR [edi-0x31]
  41c77a:	loope  0x41c789
  41c77c:	push   ebx
  41c77d:	dec    ebp
  41c77e:	and    BYTE PTR [edx-0x2f],ch
  41c781:	or     dh,BYTE PTR [edx-0x2e]
  41c784:	test   al,0xf6
  41c786:	aas    
  41c787:	ins    BYTE PTR es:[edi],dx
  41c788:	sbb    eax,0xa1a436b5
  41c78d:	aas    
  41c78e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c78f:	mov    ecx,0x5ec2f9f4
  41c794:	cmp    edi,DWORD PTR [ebx+ecx*4+0x66]
  41c798:	std    
  41c799:	dec    ebp
  41c79a:	dec    edi
  41c79b:	push   cs
  41c79c:	sbb    cl,bl
  41c79e:	push   eax
  41c79f:	scas   eax,DWORD PTR es:[edi]
  41c7a0:	retf   0xb59e
  41c7a3:	inc    esi
  41c7a4:	fld    DWORD PTR ss:[ebx+edi*8-0x3b54badf]
  41c7ac:	jne    0x41c818
  41c7ae:	cmp    ebp,DWORD PTR [ebx-0x3c]
  41c7b1:	and    cl,BYTE PTR [eax+0x7c]
  41c7b4:	sub    bl,ch
  41c7b6:	cmp    BYTE PTR [ebp+0x66532094],bh
  41c7bc:	das    
  41c7bd:	mov    ah,0xaa
  41c7bf:	retf   
  41c7c0:	sbb    al,BYTE PTR [edi]
  41c7c2:	pop    ss
  41c7c3:	scas   eax,DWORD PTR es:[edi]
  41c7c4:	jbe    0x41c767
  41c7c6:	mov    ebp,0xe0cbe193
  41c7cb:	pop    eax
  41c7cc:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7ce:	cwde   
  41c7cf:	iretw  
  41c7d1:	clc    
  41c7d2:	out    dx,eax
  41c7d3:	and    bl,BYTE PTR [edx]
  41c7d5:	sar    DWORD PTR [ebp+ecx*4-0x5d96764],0x92
  41c7dd:	fnstenv [eax-0x4c6892e9]
  41c7e3:	inc    edi
  41c7e4:	fnsave [edi]
  41c7e6:	bound  edx,QWORD PTR [ebx-0xc]
  41c7e9:	pop    ecx
  41c7ea:	xchg   BYTE PTR [ebx-0x53],cl
  41c7ed:	std    
  41c7ee:	out    0xa3,al
  41c7f0:	xchg   esp,eax
  41c7f1:	fld    DWORD PTR [eax+0x5ce7342d]
  41c7f7:	outs   dx,BYTE PTR ds:[esi]
  41c7f8:	rcl    BYTE PTR [ecx+0x5e],0xc7
  41c7fc:	xlat   BYTE PTR ds:[ebx]
  41c7fd:	lods   eax,DWORD PTR ds:[esi]
  41c7fe:	push   esi
  41c7ff:	dec    esi
  41c800:	fidiv  DWORD PTR [ebp*8+0x2f3cf682]
  41c807:	adc    esp,ecx
  41c809:	dec    ebp
  41c80a:	jl     0x41c872
  41c80c:	jmp    0xb6fc:0x10d3fe3f
  41c813:	inc    edi
  41c814:	inc    edi
  41c816:	dec    eax
  41c817:	mov    ch,0xfe
  41c819:	pop    ds
  41c81a:	mov    ecx,0xf0ff932a
  41c81f:	not    dx
  41c822:	dec    ecx
  41c823:	push   eax
  41c824:	sbb    al,ch
  41c826:	lahf   
  41c827:	adc    DWORD PTR [ebx+0x5f29d3ba],edi
  41c82d:	in     al,0xb2
  41c82f:	int    0x68
  41c831:	(bad)  
  41c832:	jge    0x41c80b
  41c834:	sub    al,ah
  41c836:	dec    eax
  41c837:	push   ds
  41c838:	sbb    dh,BYTE PTR [edx+0xe]
  41c83b:	add    al,0x1c
  41c83d:	pushf  
  41c83e:	clc    
  41c83f:	adc    DWORD PTR [edx],0xffffffda
  41c842:	cmp    BYTE PTR [edx],dh
  41c844:	into   
  41c845:	sbb    BYTE PTR ds:0x1baa768d,0xa
  41c84c:	add    eax,0x885884da
  41c851:	push   ebp
  41c852:	mov    bl,0xf0
  41c854:	in     al,0x18
  41c856:	pop    ebx
  41c857:	out    dx,al
  41c858:	sub    eax,ebx
  41c85a:	fcomi  st,st(2)
  41c85c:	pop    ds
  41c85d:	pop    esi
  41c85e:	ret    0xa36a
  41c861:	fnstcw WORD PTR [edx-0x7b]
  41c864:	inc    ebx
  41c865:	pop    es
  41c866:	mov    eax,ds:0xab3e1a21
  41c86b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c86c:	inc    edx
  41c86d:	icebp  
  41c86e:	or     dh,bh
  41c870:	jmp    0x41c84b
  41c872:	mov    cs,WORD PTR [ebp-0x7]
  41c875:	fiadd  DWORD PTR [esi]
  41c877:	push   ds
  41c878:	push   ss
  41c879:	loop   0x41c84a
  41c87b:	js     0x41c8b0
  41c87d:	out    0x47,eax
  41c87f:	xchg   esp,eax
  41c880:	lods   eax,DWORD PTR ds:[esi]
  41c881:	daa    
  41c882:	pop    eax
  41c883:	es gs hlt 
  41c886:	scas   al,BYTE PTR es:[edi]
  41c887:	mov    eax,ds:0x3802549a
  41c88c:	js     0x41c8f5
  41c88e:	cmc    
  41c88f:	and    esp,edi
  41c891:	retf   
  41c892:	push   0xb98b001e
  41c897:	add    BYTE PTR [eax-0x589b0f8],cl
  41c89d:	add    eax,0xed1fb188
  41c8a2:	fistp  QWORD PTR [ebp-0x64cf32a3]
  41c8a8:	push   esp
  41c8a9:	fs dec eax
  41c8ab:	jmp    0x68e1:0xd124969b
  41c8b2:	cmp    esp,DWORD PTR [ebx+0x23]
  41c8b5:	dec    esp
  41c8b6:	dec    eax
  41c8b7:	pop    ds
  41c8b8:	push   ds
  41c8b9:	ins    BYTE PTR es:[edi],dx
  41c8ba:	fdivr  st(3),st
  41c8bc:	adc    al,0x92
  41c8be:	iret   
  41c8bf:	mov    al,ds:0xb3c8897d
  41c8c4:	mov    ebx,DWORD PTR [esi+edx*1]
  41c8c7:	fisttp QWORD PTR [edi+0x5b]
  41c8ca:	push   edi
  41c8cb:	adc    BYTE PTR [eax+0x2c],ch
  41c8ce:	inc    esi
  41c8cf:	daa    
  41c8d0:	out    0xf8,al
  41c8d2:	mov    ds:0xea19e0a1,al
  41c8d7:	in     eax,dx
  41c8d8:	and    edx,DWORD PTR [edx+0x5b38cb43]
  41c8de:	fadd   DWORD PTR [ebx*1+0x37488d63]
  41c8e5:	rcl    DWORD PTR [eax-0x21262d30],1
  41c8eb:	push   0xffffffd4
  41c8ed:	push   0xde3cb164
  41c8f2:	fnstenv [ebp-0x9]
  41c8f5:	pushf  
  41c8f6:	dec    eax
  41c8f7:	pop    ds
  41c8f8:	cmp    bl,BYTE PTR [eax-0x36]
  41c8fb:	jnp    0x41c906
  41c8fd:	int3   
  41c8fe:	popf   
  41c8ff:	retfw  
  41c901:	dec    edi
  41c902:	scas   al,BYTE PTR es:[edi]
  41c903:	push   ebx
  41c904:	sbb    dl,al
  41c906:	or     dl,al
  41c908:	mov    ecx,0xcc20e179
  41c90d:	fldenv [esi+0x3c7e82cd]
  41c913:	dec    edx
  41c914:	arpl   sp,bx
  41c916:	cdq    
  41c917:	mov    ecx,0xee32321a
  41c91c:	sub    dh,BYTE PTR [edi-0x26249108]
  41c922:	in     eax,dx
  41c923:	jne    0x41c8f2
  41c925:	fcmove st,st(5)
  41c927:	xor    DWORD PTR [edx],0x19
  41c92a:	mov    ah,0xac
  41c92c:	mov    ebp,0xa120484b
  41c931:	adc    al,0x61
  41c933:	mov    fs,WORD PTR [ebx-0x3a8ad262]
  41c939:	(bad)  [edx+0x4c]
  41c93c:	mul    dl
  41c93e:	inc    edi
  41c93f:	cwde   
  41c940:	push   es
  41c941:	push   esi
  41c942:	sub    ah,0x20
  41c945:	xor    eax,0x2cd11948
  41c94a:	sahf   
  41c94b:	fstp   TBYTE PTR [edi+0x16]
  41c94e:	or     eax,0x50a56767
  41c953:	xchg   ebx,eax
  41c954:	sbb    ah,BYTE PTR [edx-0x33ada926]
  41c95a:	pop    ecx
  41c95b:	out    0xad,al
  41c95d:	mov    ebx,0xf12a3a1f
  41c962:	mov    esi,0x7354677c
  41c967:	imul   edx,edx,0x1ad4da52
  41c96d:	sbb    esp,DWORD PTR [edi+eiz*1-0x48]
  41c971:	idiv   BYTE PTR [ebp-0x2826d46c]
  41c977:	mov    edx,edx
  41c979:	jne    0x41c932
  41c97b:	rcr    DWORD PTR [ebx+0x1a4adecf],cl
  41c981:	cdq    
  41c982:	mov    edi,0x8708cf8f
  41c987:	nop
  41c988:	sbb    al,0xd9
  41c98a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c98b:	cmp    BYTE PTR [eax],ch
  41c98d:	xchg   edi,eax
  41c98e:	out    dx,eax
  41c98f:	in     eax,0xef
  41c991:	in     al,dx
  41c992:	out    0x70,al
  41c994:	inc    edx
  41c995:	dec    edi
  41c996:	ins    WORD PTR es:[edi],dx
  41c998:	or     DWORD PTR [eax+ecx*1-0x47],ebp
  41c99c:	push   es
  41c99d:	fisubr DWORD PTR [ebp+0x58004046]
  41c9a3:	leave  
  41c9a4:	jmp    0x4892:0x5ad4b190
  41c9ab:	add    bl,ch
  41c9ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9af:	loopne 0x41c9c5
  41c9b1:	jae    0x41c998
  41c9b3:	data16 fild DWORD PTR [edi-0x5d]
  41c9b7:	add    eax,0x9ededf21
  41c9bc:	jo     0x41c940
  41c9be:	std    
  41c9bf:	popa   
  41c9c0:	sbb    bh,cl
  41c9c2:	sbb    DWORD PTR [ecx-0x74],0x839ae3ea
  41c9c9:	repnz and eax,0x5a8d5967
  41c9cf:	sub    eax,0x66361a66
  41c9d4:	sub    bl,dl
  41c9d6:	adc    BYTE PTR [ebx-0x256d05ae],ah
  41c9dc:	dec    edx
  41c9dd:	and    al,0x2
  41c9df:	setb   BYTE PTR [ebp-0x5b]
  41c9e3:	imul   eax,DWORD PTR [esi],0x3ec2d6e0
  41c9e9:	mov    WORD PTR [eax-0x37],es
  41c9ec:	pop    ss
  41c9ed:	scas   al,BYTE PTR es:[edi]
  41c9ee:	dec    eax
  41c9ef:	adc    al,0xb3
  41c9f1:	dec    ebp
  41c9f2:	pop    ecx
  41c9f3:	clc    
  41c9f4:	push   eax
  41c9f5:	iret   
  41c9f6:	mov    fs,WORD PTR [esi-0x47]
  41c9f9:	or     al,0x78
  41c9fb:	mov    fs,WORD PTR [ecx]
  41c9fd:	(bad)  
  41c9fe:	jbe    0x41c9a1
  41ca00:	lea    ebx,[eax-0x5a]
  41ca03:	into   
  41ca04:	cmc    
  41ca05:	test   BYTE PTR [eax],ch
  41ca07:	pop    ds
  41ca08:	retf   
  41ca09:	and    eax,0x6c818beb
  41ca0e:	mov    BYTE PTR [edx],dl
  41ca10:	loopne 0x41ca16
  41ca12:	dec    eax
  41ca13:	cdq    
  41ca14:	inc    edi
  41ca15:	dec    esp
  41ca16:	in     eax,0x76
  41ca18:	add    eax,DWORD PTR [eax+0x335d673f]
  41ca1e:	arpl   di,cx
  41ca20:	sbb    dh,BYTE PTR [edi]
  41ca22:	ja     0x41ca61
  41ca24:	inc    ecx
  41ca25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca26:	in     eax,dx
  41ca27:	pop    edx
  41ca28:	daa    
  41ca29:	(bad)  
  41ca2b:	popf   
  41ca2c:	jmp    0x391f:0xde1437fc
  41ca33:	les    ebx,FWORD PTR [edx]
  41ca35:	fstp   TBYTE PTR [ebx+ebp*1-0x3923ff9f]
  41ca3c:	push   0xd3658bd9
  41ca41:	aad    0x4
  41ca43:	and    eax,0xc481ba62
  41ca48:	retf   0x481c
  41ca4b:	cs jmp 0x41ca0e
  41ca4e:	jno    0x41ca22
  41ca50:	sbb    esi,eax
  41ca52:	je     0x41caba
  41ca54:	pop    ds
  41ca55:	lods   eax,DWORD PTR ds:[esi]
  41ca56:	mov    bl,0xc5
  41ca58:	sbb    al,BYTE PTR [edi-0x57598485]
  41ca5e:	fwait
  41ca5f:	add    BYTE PTR [ecx-0x27],dl
  41ca62:	pop    edi
  41ca63:	icebp  
  41ca64:	imul   ecx,ecx,0x8b8c733f
  41ca6a:	jne    0x41ca61
  41ca6c:	cmp    al,BYTE PTR [ebp+0x48]
  41ca6f:	mov    edi,0x6a699d9b
  41ca74:	dec    esi
  41ca75:	jmp    0x41ca88
  41ca77:	addr16 cdq 
  41ca79:	aaa    
  41ca7a:	push   ebp
  41ca7b:	jmp    0x41ca97
  41ca7d:	popa   
  41ca7e:	mov    ch,0xb7
  41ca80:	ins    DWORD PTR es:[edi],dx
  41ca81:	imul   bl
  41ca83:	add    edx,DWORD PTR [ebx+ebx*8]
  41ca86:	bound  ecx,QWORD PTR [ebx]
  41ca88:	(bad)  
  41ca89:	xchg   edx,eax
  41ca8a:	mov    edx,0x39449e2b
  41ca8f:	push   esp
  41ca90:	mov    ecx,0xc49b4869
  41ca95:	(bad)  [ebp+0x29c957ae]
  41ca9b:	es arpl bx,bp
  41ca9e:	pusha  
  41ca9f:	cld    
  41caa0:	enter  0x4839,0xe6
  41caa4:	mov    al,ds:0xf50d5ba3
  41caa9:	cwde   
  41caaa:	pop    ecx
  41caab:	data16 ds cmc 
  41caae:	aad    0xed
  41cab0:	sbb    bl,BYTE PTR [eax+edx*1+0x62]
  41cab4:	push   ebp
  41cab5:	into   
  41cab6:	mov    ah,0x53
  41cab8:	jecxz  0x41ca96
  41caba:	mov    BYTE PTR [eax-0x1953691c],al
  41cac0:	cld    
  41cac1:	or     eax,0xee4f65fc
  41cac6:	es addr16 dec esp
  41cac9:	imul   esi,DWORD PTR [esi+0x6c],0x6729dc51
  41cad0:	mov    bh,0xa
  41cad2:	fdiv   st,st(0)
  41cad4:	sbb    cl,dl
  41cad6:	out    0x78,al
  41cad8:	retf   0x9be4
  41cadb:	mov    esi,0x2395f545
  41cae0:	fstp   QWORD PTR [edx+edi*1+0x48]
  41cae4:	inc    esp
  41cae5:	clc    
  41cae6:	popa   
  41cae7:	or     DWORD PTR [eax+0x29b100e],edi
  41caed:	push   0x39372b48
  41caf2:	inc    esi
  41caf3:	outs   dx,DWORD PTR ds:[esi]
  41caf4:	mov    edi,0x456d6119
  41caf9:	mov    BYTE PTR [ebp+0x2e],dh
  41cafc:	push   eax
  41cafd:	jge    0x41cac6
  41caff:	out    0x54,al
  41cb01:	xchg   edi,eax
  41cb02:	pop    eax
  41cb03:	mov    bh,0x86
  41cb05:	in     eax,0x47
  41cb07:	mov    ah,0x3e
  41cb09:	pop    ebx
  41cb0a:	add    edx,ecx
  41cb0c:	mov    ds,edx
  41cb0e:	jle    0x41cb66
  41cb10:	les    eax,FWORD PTR [eax+0x5b]
  41cb13:	pop    ecx
  41cb14:	fisttp WORD PTR [edx-0xa]
  41cb17:	mov    ch,0x23
  41cb19:	mov    al,ds:0x68a04e4d
  41cb1e:	dec    eax
  41cb1f:	jle    0x41cb29
  41cb21:	in     eax,0x66
  41cb23:	xor    dh,ah
  41cb25:	adc    BYTE PTR [eax],0x67
  41cb28:	(bad)  
  41cb29:	pop    esp
  41cb2a:	cmp    cl,BYTE PTR [ebx+edx*2-0x29]
  41cb2e:	or     BYTE PTR [edx+edx*4],0x6d
  41cb32:	mov    dh,0x66
  41cb34:	cmp    eax,0xe808dd44
  41cb39:	fldcw  WORD PTR [edx]
  41cb3b:	dec    edi
  41cb3c:	loope  0x41cb8d
  41cb3e:	lods   eax,DWORD PTR ds:[esi]
  41cb3f:	(bad)  
  41cb40:	out    0xf9,eax
  41cb42:	xor    al,0x61
  41cb44:	jno    0x41cba2
  41cb46:	dec    eax
  41cb47:	mov    dh,0xd7
  41cb49:	test   BYTE PTR [edi+edi*1+0x6d7c073e],dl
  41cb50:	dec    ecx
  41cb51:	stc    
  41cb52:	or     BYTE PTR [edx+0x65],bl
  41cb55:	and    bh,cl
  41cb57:	sub    DWORD PTR [ecx],esi
  41cb59:	dec    ebx
  41cb5a:	dec    eax
  41cb5b:	call   0x9772e169
  41cb60:	shr    DWORD PTR [ebx+0x3c],1
  41cb63:	addr16 and al,0x6e
  41cb66:	rdpmc  
  41cb68:	sbb    ah,BYTE PTR [ecx-0x32]
  41cb6b:	jle    0x41caf4
  41cb6d:	mov    al,0x55
  41cb6f:	and    cl,BYTE PTR [ecx+ebx*8+0x20]
  41cb73:	frstor [ebp+ebp*8-0x257cc7b4]
  41cb7a:	fstp   QWORD PTR [ecx+0x78e0c525]
  41cb80:	jecxz  0x41cb5b
  41cb82:	jb     0x41cb3a
  41cb84:	lock js 0x41cb1d
  41cb87:	ins    BYTE PTR es:[edi],dx
  41cb88:	xor    al,BYTE PTR es:[edx+ebp*2]
  41cb8c:	fild   WORD PTR [ecx+0x185abd99]
  41cb92:	enter  0x1252,0xb9
  41cb96:	dec    ecx
  41cb97:	push   edi
  41cb98:	fisttp DWORD PTR [eax*1-0x372fb970]
  41cb9f:	push   ds
  41cba0:	sub    ah,BYTE PTR [edi]
  41cba2:	sub    al,0xb8
  41cba4:	mov    ds:0x69df4826,eax
  41cba9:	inc    eax
  41cbaa:	pop    ebx
  41cbab:	inc    esi
  41cbac:	js     0x41cb87
  41cbae:	aas    
  41cbaf:	fild   WORD PTR [edx-0x201b8152]
  41cbb5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41cbb7:	bound  edi,QWORD PTR [esi-0x6520b0cd]
  41cbbd:	ja     0x41cb7c
  41cbbf:	loop   0x41cbea
  41cbc1:	adc    cl,BYTE PTR [ecx]
  41cbc3:	or     bl,BYTE PTR [edi+eax*8]
  41cbc6:	xor    al,0x16
  41cbc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cbc9:	sub    bh,BYTE PTR [eax+0x28a33428]
  41cbcf:	cs pop ebx
  41cbd1:	xchg   ebx,eax
  41cbd2:	push   esi
  41cbd3:	mov    ds:0x865c29fc,eax
  41cbd8:	clc    
  41cbd9:	fldenv [edx-0x64]
  41cbdc:	scas   eax,DWORD PTR es:[edi]
  41cbdd:	mov    ah,0x46
  41cbdf:	mov    ecx,0x5889780
  41cbe4:	inc    ebp
  41cbe5:	out    0x47,eax
  41cbe7:	inc    eax
  41cbe8:	mov    bl,0xc2
  41cbea:	mov    esp,0xead9cfa9
  41cbef:	loop   0x41cc51
  41cbf1:	mov    eax,0x55fda583
  41cbf6:	mov    bh,0xa8
  41cbf8:	lds    ebp,FWORD PTR [ebx]
  41cbfa:	dec    eax
  41cbfb:	push   0x61
  41cbfd:	(bad)  
  41cbfe:	es pop es
  41cc00:	in     eax,0xde
  41cc02:	mov    al,0xda
  41cc04:	dec    edi
  41cc05:	xchg   ebx,eax
  41cc06:	adc    edx,edi
  41cc08:	push   cs
  41cc09:	inc    edi
  41cc0a:	push   ds
  41cc0b:	sub    BYTE PTR [ebp-0x7],dl
  41cc0e:	in     eax,dx
  41cc0f:	inc    edi
  41cc10:	sbb    ch,BYTE PTR [ecx+edi*4]
  41cc13:	push   edx
  41cc14:	push   0x60
  41cc16:	ins    DWORD PTR es:[edi],dx
  41cc17:	xor    al,0x6f
  41cc19:	fstp   DWORD PTR [esi]
  41cc1b:	dec    eax
  41cc1c:	push   ecx
  41cc1d:	pop    edx
  41cc1e:	and    ecx,edi
  41cc20:	sub    ah,0x44
  41cc23:	daa    
  41cc24:	jnp    0x41cc07
  41cc26:	xor    DWORD PTR [ebx-0x29],edx
  41cc29:	push   edi
  41cc2a:	mov    eax,0x68c2153a
  41cc2f:	das    
  41cc30:	shl    BYTE PTR [eax-0x66729954],cl
  41cc36:	int    0x12
  41cc38:	sbb    dl,BYTE PTR [ebx]
  41cc3a:	ins    BYTE PTR es:[edi],dx
  41cc3b:	and    eax,0x5597f37a
  41cc40:	sbb    dl,bl
  41cc42:	push   bx
  41cc44:	mov    dh,0x7b
  41cc46:	cdq    
  41cc47:	mov    esi,0x759097b2
  41cc4c:	test   eax,0xabbd48a6
  41cc51:	push   es
  41cc52:	dec    ebp
  41cc53:	cli    
  41cc54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cc55:	inc    edx
  41cc56:	sbb    DWORD PTR [edi-0x2f],esp
  41cc59:	dec    edi
  41cc5a:	test   esi,esp
  41cc5c:	sbb    al,BYTE PTR [ebp-0x5d]
  41cc5f:	xor    DWORD PTR [ebx-0x4a],0xdcfc59ee
  41cc66:	ja     0x41cbfa
  41cc68:	dec    esp
  41cc69:	pop    esp
  41cc6a:	mov    edi,0xe57caa1
  41cc6f:	lock push ss
  41cc71:	cdq    
  41cc72:	or     bl,0xf8
  41cc75:	fiadd  WORD PTR [edi+0x6c]
  41cc78:	js     0x41cc5f
  41cc7a:	pop    ds
  41cc7b:	sbb    BYTE PTR [ebx+0x2c66ebd1],cl
  41cc81:	and    al,BYTE PTR [edi-0x24]
  41cc84:	sbb    dh,BYTE PTR [ebx+0x59]
  41cc87:	retf   
  41cc88:	jmp    0xd7da:0xb0f4f8f
  41cc8f:	sbb    bh,bh
  41cc91:	jmp    DWORD PTR [eax]
  41cc93:	push   es
  41cc94:	cs jl  0x41cce7
  41cc97:	call   0x11eb:0x48487be4
  41cc9e:	jbe    0x41ccb1
  41cca0:	or     eax,0x6267164b
  41cca5:	out    dx,al
  41cca6:	repz or al,0x1a
  41cca9:	pop    esp
  41ccaa:	cmp    al,BYTE PTR [ebx]
  41ccac:	sbb    BYTE PTR [ebx-0x6d],ch
  41ccaf:	aas    
  41ccb0:	and    eax,0x511fe5d9
  41ccb5:	xchg   edi,eax
  41ccb6:	inc    eax
  41ccb7:	xchg   esi,edx
  41ccb9:	mov    ecx,0xf05b707b
  41ccbe:	ins    DWORD PTR es:[edi],dx
  41ccbf:	in     eax,dx
  41ccc0:	sbb    dl,BYTE PTR [edx]
  41ccc2:	dec    bp
  41ccc4:	pop    ebp
  41ccc5:	push   cs
  41ccc6:	jo     0x41ccd5
  41ccc8:	stos   DWORD PTR es:[edi],eax
  41ccc9:	cmp    dh,BYTE PTR [edi+eiz*2]
  41cccc:	xchg   ebp,eax
  41cccd:	jae    0x41ccd8
  41cccf:	dec    edx
  41ccd0:	sbb    dl,BYTE PTR [ebp+0x77dde54]
  41ccd6:	jnp    0x41cd06
  41ccd8:	pop    esp
  41ccd9:	pop    es
  41ccda:	or     BYTE PTR [edx],cl
  41ccdc:	add    edx,ebx
  41ccde:	cli    
  41ccdf:	imul   ecx,DWORD PTR [edi],0x1aec2857
  41cce5:	mov    edx,0xfc64b2d3
  41ccea:	nop
  41cceb:	add    al,0x43
  41cced:	fldcw  WORD PTR [ebp-0x16]
  41ccf0:	out    0x2b,eax
  41ccf2:	aad    0x12
  41ccf4:	xor    ebx,edi
  41ccf6:	ror    BYTE PTR [ebx],1
  41ccf8:	(bad)  
  41ccf9:	jne    0x41cd43
  41ccfb:	jle    0x41ccfd
  41ccfd:	jmp    0xbcbbc03c
  41cd02:	fsub   QWORD PTR [esi+0x45]
  41cd05:	scas   al,BYTE PTR es:[edi]
  41cd06:	fsub   DWORD PTR [ecx-0x72e487e6]
  41cd0c:	xlat   BYTE PTR ds:[ebx]
  41cd0d:	mov    al,ds:0x8922f814
  41cd12:	cs jecxz 0x41cca7
  41cd15:	sub    edi,DWORD PTR [ebx+eax*4+0x6739c271]
  41cd1c:	dec    ebp
  41cd1d:	mov    ah,0xb5
  41cd1f:	sub    edi,edi
  41cd21:	inc    ecx
  41cd22:	dec    eax
  41cd23:	xchg   BYTE PTR [esi+0x22],cl
  41cd26:	cwde   
  41cd27:	ret    0xc54b
  41cd2a:	or     esp,DWORD PTR [edi+0x47]
  41cd2d:	icebp  
  41cd2e:	xchg   edx,eax
  41cd2f:	aam    0x1d
  41cd31:	nop
  41cd32:	inc    edx
  41cd33:	mov    eax,0x19a89a93
  41cd38:	jno    0x41cd63
  41cd3a:	cmp    BYTE PTR [edi],al
  41cd3c:	xchg   esi,eax
  41cd3d:	jmp    0x6696:0xccd37d8a
  41cd44:	mov    dl,0xae
  41cd46:	inc    ebx
  41cd47:	inc    ebp
  41cd48:	sbb    DWORD PTR [eax+0x4635fc48],ecx
  41cd4e:	rcr    BYTE PTR [ebx],cl
  41cd50:	mov    ds:0x21761e3b,al
  41cd55:	ss ds cmp esi,ebx
  41cd59:	mov    cl,0x32
  41cd5b:	push   edi
  41cd5c:	and    bh,ah
  41cd5e:	or     esp,0x7
  41cd61:	call   edi
  41cd63:	mov    BYTE PTR [edi],dh
  41cd65:	cli    
  41cd66:	movsx  eax,sp
  41cd69:	or     BYTE PTR [ebx-0x2e],0xd2
  41cd6d:	in     al,0x63
  41cd6f:	inc    esp
  41cd70:	sbb    ah,BYTE PTR [ebp+0x2e]
  41cd73:	jns    0x41cd5f
  41cd75:	and    BYTE PTR [esi-0x27],al
  41cd78:	mov    bh,0x4a
  41cd7a:	mov    al,0x7f
  41cd7c:	push   0xffffffd9
  41cd7e:	jle    0x41cd96
  41cd80:	jbe    0x41cd2a
  41cd82:	adc    eax,0x7a8cfc53
  41cd87:	je     0x41ce03
  41cd89:	test   BYTE PTR [edi-0x29],0xf6
  41cd8d:	enter  0x9e57,0x39
  41cd91:	pushf  
  41cd92:	mov    al,ds:0xbadc6f66
  41cd97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd98:	sbb    bl,BYTE PTR [eax-0x1429af02]
  41cd9e:	xchg   esp,eax
  41cd9f:	inc    ecx
  41cda0:	mov    dl,0xd9
  41cda2:	adc    DWORD PTR [esi+0x7e77c9d4],ebp
  41cda8:	stos   DWORD PTR es:[edi],eax
  41cda9:	sub    DWORD PTR [ecx],ebx
  41cdab:	adc    al,0x26
  41cdad:	adc    al,0x57
  41cdaf:	sub    dh,BYTE PTR [eax+ebx*1]
  41cdb2:	jg     0x41cdda
  41cdb4:	cwde   
  41cdb5:	fnstenv [ebp-0x783f027]
  41cdbb:	test   BYTE PTR [eax-0x1322f1aa],bh
  41cdc1:	and    BYTE PTR [eax-0x4c],cl
  41cdc4:	pop    ss
  41cdc5:	shl    BYTE PTR [eax+0x2d],0x9d
  41cdc9:	loope  0x41cd83
  41cdcb:	data16 sub BYTE PTR [eax+0x72],0x6b
  41cdd0:	sbb    cl,BYTE PTR [ebx-0x6bb565d3]
  41cdd6:	jmp    0xc3a0:0xf7d60e2a
  41cddd:	push   ebp
  41cdde:	cmp    eax,0xe917085
  41cde3:	daa    
  41cde4:	ss (bad) 
  41cde6:	sar    DWORD PTR [eax],1
  41cde8:	(bad)  
  41cde9:	lock dec esi
  41cdeb:	sub    eax,0x444f8381
  41cdf0:	test   BYTE PTR [edx],bh
  41cdf2:	test   al,0xeb
  41cdf4:	stos   DWORD PTR es:[edi],eax
  41cdf5:	adc    al,0x76
  41cdf7:	data16 sbb al,0xdf
  41cdfa:	fsubp  st(7),st
  41cdfc:	sbb    ebx,DWORD PTR [esi+0x1c0ce044]
  41ce02:	or     ecx,edx
  41ce04:	push   cs
  41ce05:	(bad)  
  41ce06:	push   0xfffffffb
  41ce08:	or     eax,0xd36697c2
  41ce0d:	shr    ecx,1
  41ce0f:	xor    DWORD PTR [eax],eax
  41ce11:	retf   0xe2d9
  41ce14:	mov    fs,WORD PTR [eax-0x612274b8]
  41ce1a:	sbb    DWORD PTR [eax],eax
  41ce1c:	test   BYTE PTR [edx],cl
  41ce1e:	retf   
  41ce1f:	imul   esi,esi,0x63d4c3d
  41ce25:	or     eax,0x7e21fe10
  41ce2a:	push   esi
  41ce2b:	in     al,0xda
  41ce2d:	fistp  DWORD PTR [ecx]
  41ce2f:	xchg   bh,al
  41ce31:	rol    ebp,cl
  41ce33:	dec    edi
  41ce34:	aas    
  41ce35:	jmp    0x73734f7
  41ce3a:	or     BYTE PTR [ebp+0xa],dl
  41ce3d:	dec    edx
  41ce3e:	int    0xfa
  41ce40:	lock fs xchg dx,ax
  41ce44:	cmp    edi,ecx
  41ce46:	xchg   esi,eax
  41ce47:	ficomp DWORD PTR [eax]
  41ce49:	fldcw  WORD PTR ds:0xea08e3d9
  41ce4f:	imul   esp,edx,0xeec2d456
  41ce55:	mov    dh,0xf8
  41ce57:	jge    0x41cec4
  41ce59:	clc    
  41ce5a:	inc    edi
  41ce5b:	pop    ecx
  41ce5c:	sub    DWORD PTR [ebp-0x6e],edx
  41ce5f:	and    ecx,0xfd80ad9
  41ce65:	fsub   st(4),st
  41ce67:	jb     0x41ce97
  41ce69:	inc    esp
  41ce6a:	sub    al,0xb6
  41ce6c:	(bad)  
  41ce6d:	sub    ecx,DWORD PTR [eax-0x7b]
  41ce70:	in     eax,dx
  41ce71:	mov    BYTE PTR [esi-0x1e117ee3],bl
  41ce77:	data16 jb 0x41cede
  41ce7a:	add    esi,DWORD PTR [edx+0x2a33e966]
  41ce80:	mov    bl,0xd
  41ce82:	cdq    
  41ce83:	popw   ss
  41ce85:	pop    edx
  41ce86:	jbe    0x41cedb
  41ce88:	mov    cl,0x68
  41ce8a:	loop   0x41ce4a
  41ce8c:	ins    DWORD PTR es:[edi],dx
  41ce8d:	pop    ecx
  41ce8e:	data16 fisubr DWORD PTR [ecx]
  41ce91:	hlt    
  41ce92:	sbb    DWORD PTR ds:0x58f9de99,edi
  41ce98:	push   ebp
  41ce99:	mov    ch,0x61
  41ce9b:	arpl   dx,bx
  41ce9d:	xchg   ebx,eax
  41ce9e:	shr    ah,0xe0
  41cea1:	jmp    0xa927:0x325668d
  41cea8:	push   edx
  41cea9:	or     BYTE PTR [ebp-0x55],ch
  41ceac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cead:	add    eax,0x9c3a669f
  41ceb2:	xor    BYTE PTR [edi+0x6675d70a],dh
  41ceb8:	nop    ecx
  41cebb:	repz sbb al,BYTE PTR [ebp+0x763f3e0d]
  41cec2:	vmwrite ebx,DWORD PTR [ebx-0x26]
  41cec6:	adc    eax,DWORD PTR gs:[ebx-0x145e16eb]
  41cecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cece:	and    DWORD PTR [eax+0x1e],0x25dec17e
  41ced5:	push   eax
  41ced6:	(bad)  
  41ced7:	dec    eax
  41ced8:	mov    esi,0x89010844
  41cedd:	jbe    0x41cf54
  41cedf:	test   WORD PTR [ebp+0x311af800],0xf2ce
  41cee8:	sbb    eax,0x4d568840
  41ceed:	call   0x15b8b064
  41cef2:	pop    ebx
  41cef3:	push   esp
  41cef4:	ss pushf 
  41cef6:	lods   al,BYTE PTR ds:[esi]
  41cef7:	ret    
  41cef8:	rcr    BYTE PTR [edi],cl
  41cefa:	and    BYTE PTR [esi],bl
  41cefc:	sbb    dl,BYTE PTR [eax-0x2a]
  41ceff:	fwait
  41cf00:	test   esi,eax
  41cf02:	mov    bh,0xea
  41cf04:	jecxz  0x41cedf
  41cf06:	fmul   DWORD PTR [ebx+0x57e25eda]
  41cf0c:	leave  
  41cf0d:	shr    DWORD PTR [eax*2+0x644842ad],cl
  41cf14:	jmp    0xac66:0xf0a66ca8
  41cf1b:	data16 jecxz 0x41cf46
  41cf1e:	mov    es,WORD PTR ds:0x8d83411b
  41cf24:	pop    edi
  41cf25:	cmp    ch,dl
  41cf27:	sti    
  41cf28:	loop   0x41cf0c
  41cf2a:	inc    eax
  41cf2b:	loopne 0x41cf64
  41cf2d:	nop
  41cf2e:	pop    es
  41cf2f:	addr16 addr16 popf 
  41cf32:	push   esp
  41cf33:	or     esi,DWORD PTR [edi]
  41cf35:	fiadd  WORD PTR [ebx-0x7723a50c]
  41cf3b:	mov    ah,0xe7
  41cf3d:	dec    edx
  41cf3e:	pop    ss
  41cf3f:	outs   dx,BYTE PTR ds:[esi]
  41cf40:	fcom   DWORD PTR [eax+0x0]
  41cf43:	imul   eax,DWORD PTR [esi-0x67],0x69
  41cf47:	push   esi
  41cf48:	mov    al,ah
  41cf4a:	pushf  
  41cf4b:	(bad)  
  41cf4c:	adc    ebx,ebx
  41cf4e:	lahf   
  41cf4f:	jb     0x41cf26
  41cf51:	loope  0x41cf4b
  41cf53:	out    0xf6,al
  41cf55:	push   esi
  41cf56:	das    
  41cf57:	ss sub al,0xd9
  41cf5a:	push   esi
  41cf5b:	pusha  
  41cf5c:	cmp    dl,BYTE PTR [esi]
  41cf5e:	dec    esp
  41cf5f:	pusha  
  41cf60:	jb     0x41cfd1
  41cf62:	sub    ebp,ebx
  41cf64:	sbb    dl,BYTE PTR [ebp-0x40]
  41cf67:	inc    BYTE PTR [ebx-0x53b2961b]
  41cf6d:	adc    edx,eax
  41cf6f:	mov    esp,0x8ee9389a
  41cf74:	into   
  41cf75:	fadd   QWORD PTR [ebx-0x47]
  41cf78:	push   ebx
  41cf79:	sub    al,0x5b
  41cf7b:	sahf   
  41cf7c:	stos   DWORD PTR es:[edi],eax
  41cf7d:	push   ds
  41cf7e:	and    al,0x67
  41cf80:	out    0xde,al
  41cf82:	aad    0xf2
  41cf84:	xchg   ecx,eax
  41cf85:	cmp    bh,ch
  41cf87:	data16 mov dh,BYTE PTR [eax-0x58]
  41cf8b:	icebp  
  41cf8c:	pop    eax
  41cf8d:	mov    bh,0xc7
  41cf8f:	pop    ebp
  41cf90:	stos   DWORD PTR es:[edi],eax
  41cf91:	mov    dl,0xa6
  41cf93:	pushaw 
  41cf95:	div    BYTE PTR [eax+esi*8+0x6706277a]
  41cf9c:	pop    esp
  41cf9d:	and    BYTE PTR [eax-0x2f],al
  41cfa0:	sbb    edx,ecx
  41cfa2:	cmp    DWORD PTR [esp+edx*2-0x44],eax
  41cfa6:	stc    
  41cfa7:	jl     0x41cf4d
  41cfa9:	sbb    DWORD PTR [edi+eiz*2+0x3eff283e],eax
  41cfb0:	add    al,0xda
  41cfb2:	das    
  41cfb3:	or     edi,ecx
  41cfb5:	mov    BYTE PTR [edx-0x14e0ba7d],bh
  41cfbb:	sahf   
  41cfbc:	add    eax,0x65944845
  41cfc1:	mov    ecx,0xb44f58ed
  41cfc6:	nop
  41cfc7:	je     0x41cfa3
  41cfc9:	sti    
  41cfca:	xchg   esi,eax
  41cfcb:	sbb    al,0x9
  41cfcd:	xchg   esp,eax
  41cfce:	cmp    BYTE PTR [edi-0x71],bl
  41cfd1:	or     DWORD PTR [ecx+0x1f],0x6c
  41cfd5:	xchg   ebp,eax
  41cfd6:	stos   DWORD PTR es:[edi],eax
  41cfd7:	ins    DWORD PTR es:[edi],dx
  41cfd8:	push   ecx
  41cfd9:	fst    DWORD PTR [ebx]
  41cfdb:	xor    BYTE PTR [ebp+0x61],ah
  41cfde:	adc    al,0x39
  41cfe0:	lahf   
  41cfe1:	inc    edi
  41cfe2:	pop    esp
  41cfe3:	aad    0xad
  41cfe5:	lods   al,BYTE PTR ds:[esi]
  41cfe6:	dec    eax
  41cfe7:	repnz or eax,DWORD PTR [ebp+0xb]
  41cfeb:	push   es
  41cfec:	loop   0x41d046
  41cfee:	out    dx,al
  41cfef:	mov    eax,ds:0x3a50fee3
  41cff4:	push   cs
  41cff5:	push   edi
  41cff6:	dec    eax
  41cff7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cff8:	sbb    bl,BYTE PTR [ebp+0x4e]
  41cffb:	add    BYTE PTR [edx-0x56],0x27
  41cfff:	push   cs
  41d000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d001:	fnstenv [ecx+0x5e2ce71]
  41d007:	js     0x41d083
  41d009:	out    dx,al
  41d00a:	in     eax,dx
  41d00b:	adc    dl,BYTE PTR [edi+0x59]
  41d00e:	xchg   BYTE PTR [ebp-0x603d3a0a],bh
  41d014:	add    ah,dh
  41d016:	mov    bh,0x33
  41d018:	xchg   DWORD PTR [ecx-0x49e5218e],esi
  41d01e:	jl     0x41d007
  41d020:	mov    ds:0x22cdad2b,al
  41d025:	fdecstp 
  41d027:	adc    ah,BYTE PTR [ebp+0x41025dc9]
  41d02d:	xchg   ecx,eax
  41d02e:	push   cs
  41d02f:	cdq    
  41d030:	iret   
  41d031:	dec    edi
  41d032:	push   edi
  41d033:	inc    DWORD PTR [edx+edx*8]
  41d036:	cmp    ch,BYTE PTR [edx+0x29]
  41d039:	cmp    edi,DWORD PTR [ecx+0x28]
  41d03c:	mov    bl,0x9d
  41d03e:	adc    eax,0xc7fdb86c
  41d043:	daa    
  41d044:	and    edi,ecx
  41d046:	(bad)  
  41d047:	push   bx
  41d049:	call   FWORD PTR [edx+0x77]
  41d04c:	sbb    esp,DWORD PTR [ecx-0x18]
  41d04f:	fcomp  QWORD PTR [esi-0xe9e2631]
  41d055:	xchg   esp,eax
  41d056:	or     DWORD PTR [ebx+0x7d],0xffffffaa
  41d05a:	aas    
  41d05b:	inc    edi
  41d05c:	adc    al,0x58
  41d05e:	push   cs
  41d05f:	jne    0x41d01b
  41d061:	and    eax,0x9b5f8a5e
  41d066:	mov    edi,0x4864bc86
  41d06b:	pop    ss
  41d06c:	sbb    BYTE PTR [ecx],ah
  41d06e:	fisub  WORD PTR [ecx+0x6b1a3277]
  41d074:	(bad)  
  41d075:	cdq    
  41d076:	and    al,0x3b
  41d078:	jecxz  0x41d019
  41d07a:	mul    DWORD PTR [ebx]
  41d07c:	jno    0x41d019
  41d07e:	dec    eax
  41d07f:	(bad)  [ebp+0x75c9c242]
  41d085:	(bad)  
  41d086:	cwde   
  41d087:	data16 mov bh,0xd3
  41d08a:	fld    TBYTE PTR [ebx-0x512b03e6]
  41d090:	pusha  
  41d091:	jecxz  0x41d083
  41d093:	pop    ecx
  41d094:	mov    ecx,0x70930bd9
  41d099:	sbb    esi,eax
  41d09b:	ret    0xa60e
  41d09e:	mov    al,0x42
  41d0a0:	xchg   edx,eax
  41d0a1:	aam    0x48
  41d0a3:	pop    eax
  41d0a4:	adc    ah,BYTE PTR [ecx-0x85e799d]
  41d0aa:	and    DWORD PTR [edi+0xb],esp
  41d0ad:	arpl   dx,di
  41d0af:	mov    ah,0x1a
  41d0b1:	enter  0x507d,0xa0
  41d0b5:	or     ah,BYTE PTR [eax-0x5b]
  41d0b8:	test   eax,0xb05534e4
  41d0bd:	xor    DWORD PTR [edi+0x7d],eax
  41d0c0:	stos   DWORD PTR es:[edi],eax
  41d0c1:	adc    DWORD PTR [eax+0x2b],ecx
  41d0c4:	add    al,0xde
  41d0c6:	or     al,0x91
  41d0c8:	scas   eax,DWORD PTR es:[edi]
  41d0c9:	push   esp
  41d0ca:	dec    ebx
  41d0cb:	or     al,0xdb
  41d0cd:	mov    cl,0xfc
  41d0cf:	cmp    ch,BYTE PTR [ebp-0x27]
  41d0d2:	(bad)  
  41d0d4:	aam    0x48
  41d0d6:	add    DWORD PTR [ebx-0x7d],eax
  41d0d9:	ret    
  41d0da:	retf   
  41d0db:	push   ebx
  41d0dc:	push   0xffffffb4
  41d0de:	dec    eax
  41d0df:	xor    cl,BYTE PTR [ecx]
  41d0e1:	test   al,0x3f
  41d0e3:	loope  0x41d13e
  41d0e5:	xchg   esp,eax
  41d0e6:	mov    edx,0x48919ba2
  41d0eb:	pushf  
  41d0ec:	in     eax,dx
  41d0ed:	cmc    
  41d0ee:	addr16 or eax,0xde48c974
  41d0f4:	enter  0x6bb2,0x48
  41d0f8:	(bad)  
  41d0f9:	call   0x9a52755
  41d0fe:	ret    0x5f84
  41d101:	pop    ecx
  41d102:	enter  0x1aa3,0x39
  41d106:	in     eax,0x7c
  41d108:	lods   al,BYTE PTR ds:[esi]
  41d109:	shl    DWORD PTR [ecx+0x6bd928fa],0x21
  41d110:	xor    ecx,DWORD PTR [ebx]
  41d112:	mov    al,ds:0xfb5bab23
  41d117:	dec    edi
  41d118:	pop    es
  41d119:	jbe    0x41d163
  41d11b:	push   0x92cd7453
  41d120:	data16 int3 
  41d122:	imul   ebx,DWORD PTR fs:[edx+ebp*8+0x44],0xc8c8de84
  41d12b:	mov    cl,0xf1
  41d12d:	fnstcw WORD PTR [edi+0x4]
  41d130:	mov    al,ds:0x2ad46dc4
  41d135:	fstp   DWORD PTR [ecx+0x6ae45993]
  41d13b:	es mov edi,0xd254895b
  41d141:	pushf  
  41d142:	dec    eax
  41d143:	inc    ebx
  41d144:	inc    ebx
  41d145:	cmp    DWORD PTR [eax],esp
  41d147:	jns    0x41d182
  41d149:	sahf   
  41d14a:	inc    ebp
  41d14b:	addr16 aad 0xe3
  41d14e:	jle    0x41d120
  41d150:	cmp    DWORD PTR [ebx+0x5c],ebp
  41d153:	push   edx
  41d154:	call   0x3611:0x93cc1083
  41d15b:	adc    al,0xaa
  41d15d:	into   
  41d15e:	and    ah,BYTE PTR [edi+0x11]
  41d161:	mov    al,ds:0x71a084d
  41d166:	jns    0x41d16b
  41d168:	retf   0x643f
  41d16b:	dec    ebp
  41d16c:	fcmovu st,st(1)
  41d16e:	cmp    BYTE PTR [edx+0x0],al
  41d171:	outs   dx,DWORD PTR ds:[esi]
  41d172:	jmp    0x88c79281
  41d177:	cmc    
  41d178:	ja     0x41d1df
  41d17a:	dec    ebx
  41d17b:	jo     0x41d147
  41d17d:	les    ecx,FWORD PTR [edx+0x6b]
  41d180:	in     eax,dx
  41d181:	imul   eax,esi,0x16
  41d184:	imul   ebx,edi,0xffffffd4
  41d187:	imul   edi,DWORD PTR [edx+0x53869a59],0x37
  41d18e:	not    bh
  41d190:	push   edi
  41d191:	cmp    cl,BYTE PTR [eax+0xa]
  41d194:	xor    bh,cl
  41d196:	dec    ebp
  41d197:	dec    BYTE PTR [edx-0x2eb00ac7]
  41d19d:	es ins BYTE PTR es:[edi],dx
  41d19f:	addr16 dec esp
  41d1a1:	lods   al,BYTE PTR ds:[esi]
  41d1a2:	cmp    al,0x8e
  41d1a4:	cs xchg edi,eax
  41d1a6:	or     eax,0x4b2e2e87
  41d1ab:	mov    bh,cl
  41d1ad:	jns    0x41d188
  41d1af:	je     0x41d1cf
  41d1b1:	fldcw  WORD PTR [edx-0x1fda8dca]
  41d1b7:	aas    
  41d1b8:	or     al,0xe0
  41d1ba:	stc    
  41d1bb:	sub    esi,DWORD PTR [ecx+eiz*1]
  41d1be:	dec    edi
  41d1bf:	inc    eax
  41d1c0:	in     eax,dx
  41d1c1:	ss retf 0x2700
  41d1c5:	ds mov esi,0x6ad95d3e
  41d1cb:	fbld   TBYTE PTR [ebx-0x72]
  41d1ce:	cmp    BYTE PTR [ebx],0x46
  41d1d1:	mov    ds:0xaadc78e7,al
  41d1d6:	dec    eax
  41d1d7:	jnp    0x41d174
  41d1d9:	sub    ah,BYTE PTR fs:[ebx+0x11]
  41d1dd:	(bad)  
  41d1de:	sub    eax,0xc7de6fa3
  41d1e3:	dec    edi
  41d1e4:	add    dh,ah
  41d1e6:	pusha  
  41d1e7:	arpl   WORD PTR [eax],bp
  41d1e9:	fiadd  DWORD PTR [edi-0x42]
  41d1ec:	stos   DWORD PTR es:[edi],eax
  41d1ed:	xor    BYTE PTR [esp+ecx*1+0x53],dl
  41d1f1:	nop
  41d1f2:	xor    al,0x6a
  41d1f4:	pop    ebp
  41d1f5:	adc    BYTE PTR [eax+0x2f3d4a85],bl
  41d1fb:	pop    ss
  41d1fc:	aaa    
  41d1fd:	jbe    0x41d187
  41d1ff:	pop    esi
  41d200:	(bad)  
  41d202:	cwde   
  41d203:	das    
  41d204:	fmulp  st(1),st
  41d206:	xchg   ebp,eax
  41d207:	mov    ah,0xb9
  41d209:	leave  
  41d20a:	mov    dl,0x69
  41d20c:	into   
  41d20d:	or     BYTE PTR [esi+0x67],al
  41d210:	daa    
  41d211:	and    DWORD PTR [eax+0x92e1a6a],esp
  41d217:	pop    edx
  41d218:	dec    ebx
  41d219:	push   edx
  41d21a:	sbb    ebp,DWORD PTR [esi]
  41d21c:	es push esi
  41d21e:	adc    BYTE PTR [edx+0x69],0x53
  41d222:	dec    ebx
  41d223:	imul   edi,DWORD PTR [esi-0x16a243e3],0x6720f061
  41d22d:	add    cl,BYTE PTR [eax+0x1a]
  41d230:	dec    ecx
  41d231:	sub    DWORD PTR [edi],esi
  41d233:	pop    ss
  41d234:	jecxz  0x41d28e
  41d236:	mov    fs,WORD PTR [esi+0x7c]
  41d239:	fcmovu st,st(7)
  41d23b:	adc    dl,BYTE PTR [esi+0x73]
  41d23e:	or     BYTE PTR [edx+0x5e],ch
  41d241:	gs mov eax,0xaaec2666
  41d247:	xchg   ecx,eax
  41d248:	ja     0x41d2be
  41d24a:	cmp    esp,DWORD PTR [edi+0x72]
  41d24d:	aam    0xc4
  41d24f:	dec    edx
  41d250:	sbb    ah,bl
  41d252:	mov    bl,0x14
  41d254:	outs   dx,DWORD PTR ds:[esi]
  41d255:	mov    ss,WORD PTR [ebx]
  41d257:	xchg   edi,eax
  41d258:	rcr    edx,cl
  41d25a:	and    al,0xc7
  41d25c:	adc    al,0x37
  41d25e:	outs   dx,BYTE PTR ds:[esi]
  41d25f:	popf   
  41d260:	icebp  
  41d261:	dec    ecx
  41d262:	pop    edi
  41d263:	pop    esi
  41d264:	sbb    ah,BYTE PTR [ebx+ebp*8]
  41d267:	fcom   DWORD PTR [ebx-0x4e]
  41d26a:	inc    ecx
  41d26b:	in     al,0x3c
  41d26d:	fnstenv [edi]
  41d26f:	loopne 0x41d247
  41d271:	pop    edi
  41d272:	adc    BYTE PTR [esi-0x6dcf2cc5],dh
  41d278:	sbb    bh,BYTE PTR [esi-0x40]
  41d27b:	lods   al,BYTE PTR ds:[esi]
  41d27c:	push   ebp
  41d27d:	sahf   
  41d27e:	cmp    esi,esp
  41d280:	cmc    
  41d281:	test   DWORD PTR [ebp-0x4988c27d],0x54eeaef0
  41d28b:	mov    WORD PTR es:[esi-0x2636d184],?
  41d292:	or     BYTE PTR [edx-0x6b],0x52
  41d296:	inc    ecx
  41d297:	dec    edx
  41d298:	aad    0xd9
  41d29a:	jae    0x41d2b0
  41d29c:	mov    esi,0xf31a155d
  41d2a1:	ja     0x41d261
  41d2a3:	jg     0x41d2c0
  41d2a5:	ins    BYTE PTR es:[edi],dx
  41d2a6:	xor    al,0x3d
  41d2a8:	sbb    al,0x7
  41d2aa:	pop    edi
  41d2ab:	inc    edx
  41d2ac:	jmp    0x41d2a6
  41d2ae:	hlt    
  41d2af:	adc    edx,0xffffffd9
  41d2b2:	pop    ss
  41d2b3:	icebp  
  41d2b4:	bound  esi,QWORD PTR [eax+ebx*4+0x55a6e4b2]
  41d2bb:	or     BYTE PTR [ecx],dh
  41d2bd:	or     DWORD PTR [eax-0x1],ecx
  41d2c0:	mov    esi,ss
  41d2c2:	sbb    edx,DWORD PTR [eax-0x7da691bf]
  41d2c8:	enter  0xdfeb,0xe6
  41d2cc:	arpl   WORD PTR [esi+0x79],di
  41d2cf:	inc    edx
  41d2d0:	out    0x20,al
  41d2d2:	dec    eax
  41d2d3:	sbb    eax,DWORD PTR [ecx-0x35a16d78]
  41d2d9:	jb     0x41d2ec
  41d2db:	addr16 (bad) 
  41d2dd:	or     dh,bh
  41d2df:	sbb    BYTE PTR [edx],0x48
  41d2e2:	pop    edx
  41d2e3:	jle    0x41d2a3
  41d2e5:	sub    DWORD PTR [edi+0x36],ebx
  41d2e8:	or     esp,DWORD PTR [esi]
  41d2ea:	xor    bh,BYTE PTR [ecx]
  41d2ec:	sub    cl,al
  41d2ee:	mov    ?,WORD PTR [edx]
  41d2f0:	pop    ecx
  41d2f1:	fnstcw WORD PTR [edx-0x40]
  41d2f4:	add    eax,0xd2c9796e
  41d2f9:	aaa    
  41d2fa:	mov    esi,0x4b213ab2
  41d2ff:	cmc    
  41d300:	mov    ds:0x1f44bfbb,al
  41d305:	jecxz  0x41d36b
  41d307:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d308:	(bad)  
  41d309:	(bad)  
  41d30a:	pop    edx
  41d30b:	data16 lock stos BYTE PTR es:[edi],al
  41d30e:	push   ss
  41d30f:	nop    edi
  41d312:	dec    ebp
  41d313:	in     eax,dx
  41d314:	jmp    0x29575558
  41d319:	in     al,0x39
  41d31b:	cmp    al,0xf2
  41d31d:	xchg   ebx,eax
  41d31e:	mov    dh,0x0
  41d320:	mov    bh,BYTE PTR [ecx-0x38]
  41d323:	ret    
  41d324:	sbb    bl,bh
  41d326:	bnd js 0x41d2ca
  41d329:	clc    
  41d32a:	and    bh,dh
  41d32c:	push   eax
  41d32d:	fnstenv [edx+0x49868991]
  41d333:	cwde   
  41d334:	mov    al,0xfe
  41d336:	imul   ebx,DWORD PTR [edi],0x72
  41d339:	push   DWORD PTR [edi]
  41d33b:	in     eax,dx
  41d33c:	fprem1 
  41d33e:	or     al,0x67
  41d340:	mov    cl,0x2f
  41d342:	push   ebx
  41d343:	scas   al,BYTE PTR es:[edi]
  41d344:	cmp    ebp,ebp
  41d346:	jo     0x41d3ae
  41d348:	leave  
  41d349:	sar    ah,cl
  41d34b:	pop    es
  41d34c:	sbb    ch,ah
  41d34e:	dec    ebx
  41d34f:	ja     0x41d2d6
  41d351:	retf   
  41d352:	sbb    DWORD PTR [edi+0x3f],esi
  41d355:	fxtract 
  41d357:	sub    edx,ebp
  41d359:	loopne 0x41d38b
  41d35b:	test   al,0xe8
  41d35d:	or     BYTE PTR [edi+0x4866f54c],bh
  41d363:	lea    edi,[ecx+edx*1+0x64]
  41d367:	and    dl,BYTE PTR [edx]
  41d369:	pop    edx
  41d36a:	fsub   QWORD PTR [esi+0x10]
  41d36d:	mov    ds:0x8f319bf3,al
  41d372:	push   0x75
  41d374:	sbb    dl,BYTE PTR [eax]
  41d376:	es add eax,0xd75411f3
  41d37c:	push   ss
  41d37d:	mov    dl,0xc7
  41d37f:	data16 or al,0xef
  41d382:	mov    esi,0xcdc637db
  41d387:	dec    ebp
  41d388:	pop    edx
  41d389:	add    BYTE PTR [edi],0xf6
  41d38c:	push   ebp
  41d38d:	jnp    0x41d387
  41d38f:	xor    edi,DWORD PTR [ecx+ecx*1+0x72]
  41d393:	data16 cmc 
  41d395:	pusha  
  41d396:	scas   eax,DWORD PTR es:[edi]
  41d397:	sbb    bl,BYTE PTR [edx]
  41d399:	jecxz  0x41d419
  41d39b:	mov    WORD PTR [edi-0x7c],?
  41d39e:	cs mov ebp,0x86b6d9bc
  41d3a4:	jno    0x41d3c8
  41d3a6:	out    dx,eax
  41d3a7:	pop    esi
  41d3a8:	je     0x41d3f3
  41d3aa:	jge    0x41d406
  41d3ac:	pop    ebx
  41d3ad:	xor    al,0x4f
  41d3af:	cld    
  41d3b0:	retf   0xecf9
  41d3b3:	sub    ecx,DWORD PTR [ebx+0x11]
  41d3b6:	popf   
  41d3b7:	inc    edx
  41d3b8:	sbb    dl,BYTE PTR [esi+0x14]
  41d3bb:	dec    BYTE PTR [esp+eax*8]
  41d3be:	inc    edi
  41d3bf:	jnp    0x41d353
  41d3c1:	jb     0x41d3b6
  41d3c3:	adc    al,0xb4
  41d3c5:	add    ecx,DWORD PTR [ecx-0xa]
  41d3c8:	and    BYTE PTR ds:[edi-0x47eda08c],ch
  41d3cf:	sbb    DWORD PTR [edx],ebx
  41d3d1:	pop    esi
  41d3d2:	dec    ebx
  41d3d3:	adc    al,0xb4
  41d3d6:	mov    bl,0x63
  41d3d8:	sbb    bh,cl
  41d3da:	jno    0x41d3e0
  41d3dc:	outs   dx,DWORD PTR ds:[esi]
  41d3dd:	push   esp
  41d3de:	sub    dl,BYTE PTR [ebx+0x2b]
  41d3e1:	(bad)  
  41d3e3:	sub    ch,BYTE PTR [edi+0x513ef744]
  41d3e9:	ret    0x4202
  41d3ec:	push   ds
  41d3ed:	mov    ds:0xa1e15949,eax
  41d3f2:	call   0x1d0795b6
  41d3f7:	sbb    dh,bh
  41d3f9:	js     0x41d40e
  41d3fb:	outs   dx,BYTE PTR ds:[esi]
  41d3fc:	xchg   ebp,eax
  41d3fd:	cdq    
  41d3fe:	outs   dx,BYTE PTR ds:[esi]
  41d3ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d400:	or     BYTE PTR [edi-0x1b],ah
  41d403:	test   DWORD PTR [edx],ebx
  41d405:	retf   
  41d406:	lds    ecx,FWORD PTR cs:[edx-0x51c2cc8b]
  41d40d:	fldenv [eax-0x6b]
  41d410:	mov    dl,0xe3
  41d412:	je     0x41d45f
  41d414:	cmp    al,0x94
  41d416:	adc    DWORD PTR [esi],ecx
  41d418:	js     0x41d40a
  41d41a:	inc    edi
  41d41b:	cmp    DWORD PTR [ecx-0x33],edx
  41d41e:	and    edx,DWORD PTR [ebp+0x10]
  41d421:	mov    esp,0x44ef673d
  41d426:	adc    esi,DWORD PTR [edx+ebx*1-0x34]
  41d42a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d42b:	cli    
  41d42c:	aas    
  41d42d:	bound  eax,QWORD PTR [ecx]
  41d42f:	leave  
  41d430:	(bad)  
  41d431:	xor    eax,0x691e4c34
  41d436:	int    0x56
  41d438:	(bad)  
  41d439:	cdq    
  41d43a:	mov    ch,0x88
  41d43c:	or     al,0x81
  41d43e:	fmul   DWORD PTR [esi-0x43b7f1f5]
  41d444:	fist   WORD PTR [edx-0x4c4bf635]
  41d44a:	xor    ah,BYTE PTR [edi+0x60]
  41d44d:	daa    
  41d44e:	xor    DWORD PTR [eax+0x4a23341a],edx
  41d454:	sub    DWORD PTR [eax-0x2b],esp
  41d457:	out    dx,eax
  41d458:	mov    dh,0xf7
  41d45a:	pop    esi
  41d45b:	xchg   BYTE PTR [ebp+0x7e0dcfdc],dh
  41d461:	sub    esp,ecx
  41d463:	and    BYTE PTR [ebp-0x4e7dbf9b],bh
  41d469:	bound  ecx,QWORD PTR [edi+0x3f]
  41d46c:	cmp    dl,BYTE PTR [eax+0x6c]
  41d46f:	test   al,0x8a
  41d471:	add    DWORD PTR [eax],edx
  41d473:	pop    ecx
  41d474:	rcr    cl,0x7b
  41d477:	imul   edi,DWORD PTR [edi],0x9
  41d47a:	pusha  
  41d47b:	and    al,0x81
  41d47d:	sbb    DWORD PTR [edi],ecx
  41d47f:	xor    DWORD PTR [esi-0x57],ebx
  41d482:	dec    eax
  41d483:	outs   dx,DWORD PTR ds:[esi]
  41d484:	mov    eax,ds:0x729e76a2
  41d489:	dec    ebp
  41d48a:	shr    BYTE PTR [ecx+0x6e],0x4c
  41d48e:	ja     0x41d4b9
  41d490:	inc    ebp
  41d491:	pop    ss
  41d492:	fsubr  st,st(0)
  41d494:	jg     0x41d461
  41d496:	dec    eax
  41d497:	shl    BYTE PTR [ecx-0x260cc1f7],0xd6
  41d49e:	cli    
  41d49f:	data16 mov es,WORD PTR [eax-0x1e58ffe]
  41d4a6:	fistp  DWORD PTR ds:0x803f
  41d4ab:	pop    ds
  41d4ac:	push   ecx
  41d4ad:	loopne 0x41d4c8
  41d4af:	dec    esi
  41d4b0:	into   
  41d4b1:	jg     0x41d477
  41d4b3:	lahf   
  41d4b4:	mov    ds:0x23277c3c,al
  41d4b9:	out    dx,eax
  41d4ba:	mov    ecx,DWORD PTR [edx+0x4d]
  41d4bd:	pusha  
  41d4be:	dec    eax
  41d4bf:	push   ss
  41d4c0:	fcmovnb st,st(1)
  41d4c2:	cmp    bh,BYTE PTR [eax]
  41d4c4:	mov    al,ds:0x5666a2a3
  41d4c9:	push   ebx
  41d4ca:	and    ch,BYTE PTR [ebx+ebx*1]
  41d4cd:	nop
  41d4ce:	push   edx
  41d4cf:	addr16 loope 0x41d54a
  41d4d2:	faddp  st(2),st
  41d4d4:	cli    
  41d4d5:	jmp    0x53313e10
  41d4da:	addr16 pop ax
  41d4dd:	jmp    0xf6f0:0xe1d6dcd
  41d4e4:	add    eax,0x67d9e4a7
  41d4e9:	push   0x929756af
  41d4ee:	(bad)  [edx+ebx*4+0x3c]
  41d4f2:	cmp    al,0xdc
  41d4f4:	adc    BYTE PTR [eax],0xba
  41d4f7:	aad    0xe5
  41d4f9:	sbb    bl,BYTE PTR [eax+0x48bff8a6]
  41d4ff:	xor    BYTE PTR [eax],cl
  41d501:	push   ss
  41d502:	push   0xfffffff4
  41d504:	repz retf 0xa35a
  41d508:	int    0x9f
  41d50a:	dec    eax
  41d50b:	or     BYTE PTR [ebp-0x5c],bh
  41d50e:	ficomp WORD PTR [edi-0x1a]
  41d511:	sahf   
  41d512:	dec    edi
  41d513:	test   edx,ebp
  41d515:	imul   BYTE PTR ds:[ecx+0x31]
  41d519:	loopne 0x41d4a2
  41d51b:	adc    dh,ch
  41d51d:	push   0x77
  41d51f:	mov    bh,0xba
  41d521:	ja     0x41d50f
  41d523:	xchg   edi,eax
  41d524:	outs   dx,DWORD PTR ds:[esi]
  41d525:	les    ecx,FWORD PTR [ebp+0x2e]
  41d528:	sbb    DWORD PTR [esi+0x6004d048],0x59
  41d52f:	mov    ecx,DWORD PTR [eax]
  41d531:	cdq    
  41d532:	pusha  
  41d533:	je     0x41d50f
  41d535:	sbb    esp,edi
  41d537:	add    ah,BYTE PTR [ecx-0x2c514342]
  41d53d:	sub    al,0x98
  41d53f:	pop    edx
  41d540:	ret    0x48bf
  41d543:	je     0x41d58d
  41d545:	or     al,0xff
  41d547:	jge    0x41d54d
  41d549:	mov    al,fs:0xb3d25067
  41d54f:	popa   
  41d550:	sti    
  41d551:	xchg   esp,eax
  41d552:	loop   0x41d5ae
  41d554:	dec    esp
  41d555:	js     0x41d5b5
  41d557:	jmp    0x918d5ad1
  41d55c:	or     edi,edi
  41d55e:	(bad)  
  41d55f:	dec    esi
  41d560:	ss ret 0x9f0c
  41d564:	inc    edx
  41d565:	clc    
  41d566:	(bad)  
  41d567:	scas   eax,DWORD PTR es:[edi]
  41d568:	fs cs jg 0x41d515
  41d56c:	lahf   
  41d56d:	inc    edi
  41d56e:	dec    edx
  41d56f:	or     al,0xc6
  41d571:	pop    ecx
  41d572:	push   ebp
  41d573:	and    al,0x31
  41d575:	pop    esp
  41d576:	call   DWORD PTR [ebx]
  41d578:	mov    DWORD PTR [esi-0x4cfa9723],edi
  41d57e:	ins    BYTE PTR es:[edi],dx
  41d57f:	cmp    BYTE PTR [edx+edx*2+0x1bd94a8],bh
  41d586:	dec    eax
  41d587:	fsub   DWORD PTR [ecx-0x4a4458ad]
  41d58d:	cwde   
  41d58e:	(bad)  
  41d58f:	dec    bp
  41d591:	mov    ebp,0xde1afb19
  41d596:	in     eax,dx
  41d597:	xchg   edi,eax
  41d598:	jle    0x41d595
  41d59a:	clc    
  41d59b:	push   0xe37d9f5
  41d5a0:	xchg   ecx,eax
  41d5a1:	cmp    DWORD PTR [eax-0x23cd5d8b],ebx
  41d5a7:	mov    ebp,ds
  41d5a9:	push   0x48
  41d5ab:	dec    ecx
  41d5ac:	aaa    
  41d5ad:	jp     0x41d563
  41d5af:	adc    ch,BYTE PTR [eax]
  41d5b1:	jle    0x41d544
  41d5b3:	lds    sp,DWORD PTR ss:[ebx+0x4]
  41d5b8:	and    edx,esi
  41d5ba:	adc    eax,0xf039c73c
  41d5bf:	adc    eax,0x460fc0aa
  41d5c4:	aaa    
  41d5c5:	leave  
  41d5c6:	inc    esp
  41d5c7:	and    al,0x19
  41d5c9:	xchg   esi,eax
  41d5ca:	mov    dl,0x66
  41d5cc:	mov    bh,0x2f
  41d5ce:	enter  0x91f8,0x90
  41d5d2:	push   eax
  41d5d3:	xchg   edi,eax
  41d5d4:	cdq    
  41d5d5:	or     DWORD PTR [eax+0xc],0x47893bbe
  41d5dc:	rcr    DWORD PTR [ebp+0x31],0x67
  41d5e0:	ja     0x41d643
  41d5e2:	jno    0x41d592
  41d5e4:	bound  eax,QWORD PTR [ecx+0x3d]
  41d5e7:	mov    ecx,0x6735fa85
  41d5ec:	push   ss
  41d5ed:	mov    ecx,DWORD PTR [ecx-0x2825cc6b]
  41d5f3:	fisubr DWORD PTR [eax-0x5]
  41d5f6:	mov    ebp,0xeea5e3ff
  41d5fb:	(bad)  
  41d5fc:	pop    eax
  41d5fd:	loop   0x41d64e
  41d5ff:	sbb    ah,BYTE PTR [ebx-0x25]
  41d602:	add    ah,BYTE PTR [ebp-0x4d44a003]
  41d608:	in     eax,0x97
  41d60a:	aaa    
  41d60b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d60c:	inc    edx
  41d60d:	(bad)  [edi+0x3cf09ade]
  41d613:	(bad)  
  41d614:	mov    dl,0x8e
  41d616:	sahf   
  41d617:	xor    BYTE PTR ds:0xe70b489c,al
  41d61d:	sti    
  41d61e:	rcl    DWORD PTR [ebx+0x674115eb],1
  41d624:	leave  
  41d625:	adc    esi,ebx
  41d627:	jl     0x41d635
  41d629:	out    dx,eax
  41d62a:	ja     0x41d606
  41d62c:	add    esi,0xc20d1b48
  41d632:	mov    ds:0x26a44e0e,al
  41d637:	scas   al,BYTE PTR es:[di]
  41d639:	jb     0x41d5f6
  41d63b:	or     DWORD PTR [edi+0x230fbcb9],edx
  41d641:	push   0x48
  41d643:	ror    BYTE PTR [eax-0x24],cl
  41d646:	and    ebp,DWORD PTR [eax-0x4b]
  41d649:	(bad)  
  41d64b:	data16 add bl,BYTE PTR [eax-0x38b5e958]
  41d652:	gs into 
  41d654:	fwait
  41d655:	mov    esi,0x81fb392a
  41d65a:	aam    0x69
  41d65c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d65d:	int    0xdf
  41d65f:	les    ebx,FWORD PTR [ecx-0x54]
  41d662:	and    BYTE PTR [ecx+0x21486d1f],al
  41d668:	ja     0x41d606
  41d66a:	fst    QWORD PTR [ebx+edi*4+0x44]
  41d66e:	mov    ebp,0xc0510f66
  41d673:	outs   dx,BYTE PTR ds:[esi]
  41d674:	and    DWORD PTR [ecx+0x24],esi
  41d677:	mov    ah,0x98
  41d679:	std    
  41d67a:	xchg   ebx,eax
  41d67b:	pop    ebp
  41d67c:	call   FWORD PTR [esi]
  41d67e:	dec    eax
  41d67f:	mov    al,ds:0x78de1817
  41d684:	(bad)  
  41d685:	(bad)  
  41d686:	out    dx,eax
  41d687:	stos   WORD PTR es:[edi],ax
  41d689:	jg     0x41d6c1
  41d68b:	imul   bh
  41d68d:	test   al,0x48
  41d68f:	dec    ecx
  41d690:	in     al,dx
  41d691:	lods   eax,DWORD PTR ds:[esi]
  41d692:	adc    DWORD PTR [ecx+0x66a7be4b],0x72
  41d699:	gs push ss
  41d69b:	xor    ebx,DWORD PTR [edx]
  41d69d:	xor    DWORD PTR ds:0x7d9a0518,0xa4da06e0
  41d6a7:	leave  
  41d6a8:	into   
  41d6a9:	jnp    0x41d6af
  41d6ab:	inc    ebx
  41d6ac:	xor    ecx,ebp
  41d6ae:	scas   al,BYTE PTR es:[edi]
  41d6af:	aaa    
  41d6b0:	dec    ecx
  41d6b1:	xchg   esi,eax
  41d6b2:	cmp    esi,DWORD PTR [edi]
  41d6b4:	xchg   BYTE PTR [edx+0x2cc29367],bl
  41d6ba:	or     BYTE PTR [edx+0x1f],bh
  41d6bd:	fld    st(3)
  41d6bf:	sbb    eax,0xdc7cebe4
  41d6c4:	or     esp,DWORD PTR [ecx+ecx*4]
  41d6c7:	mov    cl,0xac
  41d6c9:	icebp  
  41d6ca:	inc    edi
  41d6cb:	inc    esp
  41d6cc:	test   edx,ebx
  41d6ce:	mov    ds:0x2b29ff1b,al
  41d6d3:	push   0x1c
  41d6d5:	loop   0x41d6d8
  41d6d7:	jb     0x41d721
  41d6d9:	jne    0x41d6d3
  41d6db:	imul   eax,DWORD PTR ds:0x9adb4d88,0x887265cc
  41d6e5:	fyl2x  
  41d6e7:	neg    DWORD PTR [edi+0x2e]
  41d6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6eb:	arpl   WORD PTR [ebx],si
  41d6ed:	or     ah,BYTE PTR [esi-0x64]
  41d6f0:	xchg   edx,eax
  41d6f1:	xchg   edx,eax
  41d6f2:	dec    eax
  41d6f3:	mov    ebx,ebp
  41d6f5:	test   eax,0x8e3009f6
  41d6fa:	(bad)  
  41d6fb:	data16 sbb al,0x50
  41d6fe:	fdiv   st,st(1)
  41d700:	sbb    ch,cl
  41d702:	pop    eax
  41d703:	sbb    ch,dh
  41d705:	scas   al,BYTE PTR es:[edi]
  41d706:	cmp    BYTE PTR [ecx-0x5e0126bf],dl
  41d70c:	dec    esi
  41d70d:	add    al,0xce
  41d70f:	test   DWORD PTR [ebp+esi*4+0x7229de26],esp
  41d716:	dec    eax
  41d717:	cmp    DWORD PTR [edx-0x13b5458],ebp
  41d71d:	lea    esp,[edx+0x72]
  41d720:	or     al,0x81
  41d722:	inc    ebp
  41d723:	repnz aaa 
  41d725:	fld    QWORD PTR [edi-0x13]
  41d728:	pop    edx
  41d729:	or     DWORD PTR [edi+0x3379d0a3],esi
  41d72f:	addr16 push ecx
  41d731:	add    eax,0x831d895a
  41d736:	pop    esi
  41d737:	imul   edx,ebp,0x3a333888
  41d73d:	jae    0x41d6e9
  41d73f:	inc    edi
  41d740:	mov    ds,ecx
  41d742:	and    ebp,DWORD PTR [eax]
  41d744:	xchg   edx,eax
  41d745:	aam    0xc2
  41d747:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d748:	sbb    eax,0x6e3ade50
  41d74d:	fld    QWORD PTR [edi-0x60]
  41d750:	js     0x41d7be
  41d752:	in     eax,dx
  41d753:	in     eax,0xa2
  41d755:	mov    ds:0x639e6722,al
  41d75a:	into   
  41d75b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d75c:	push   cs
  41d75d:	idiv   BYTE PTR [ebp+0x5c]
  41d760:	int    0xd8
  41d762:	dec    eax
  41d763:	stos   DWORD PTR es:[edi],eax
  41d764:	add    BYTE PTR [ebp-0x7c0bfe93],bh
  41d76a:	pushf  
  41d76b:	data16 sbb al,0xef
  41d76e:	ja     0x41d7c8
  41d770:	sbb    ah,BYTE PTR [esi-0x4108c7bd]
  41d776:	stos   BYTE PTR es:[edi],al
  41d777:	stos   DWORD PTR es:[edi],eax
  41d778:	fistp  DWORD PTR cs:[edi]
  41d77b:	in     eax,dx
  41d77c:	(bad)  
  41d77d:	data16 or ah,BYTE PTR [ebp-0x6]
  41d781:	mov    esi,0xd0291eb5
  41d786:	mov    ds:0x5af9ee08,eax
  41d78b:	loop   0x41d747
  41d78d:	xor    eax,0x36c1156a
  41d792:	push   ebx
  41d793:	add    DWORD PTR [edi-0x2f12455a],0xffffffa3
  41d79a:	xor    BYTE PTR [edi],dl
  41d79c:	adc    BYTE PTR [ecx+0x3],bh
  41d79f:	(bad)  
  41d7a0:	inc    edi
  41d7a1:	or     BYTE PTR [eax+0x7b],0x6b
  41d7a5:	push   ss
  41d7a6:	fwait
  41d7a7:	shl    ch,0xdc
  41d7aa:	push   ebp
  41d7ab:	data16 adc BYTE PTR [edi],cl
  41d7ae:	scas   eax,DWORD PTR es:[edi]
  41d7af:	adc    DWORD PTR [edx],ebx
  41d7b1:	and    DWORD PTR [esi],0x4662cdcf
  41d7b7:	loope  0x41d7ce
  41d7b9:	fidiv  DWORD PTR [ebp+0x6f99ce2f]
  41d7bf:	add    esp,DWORD PTR [esi+0x16]
  41d7c2:	sbb    DWORD PTR [esi+0x25],edi
  41d7c5:	daa    
  41d7c6:	dec    eax
  41d7c7:	int    0xb4
  41d7c9:	cli    
  41d7ca:	loop   0x41d81b
  41d7cc:	push   edx
  41d7cd:	xchg   esi,eax
  41d7ce:	sub    BYTE PTR [edi-0x49],ah
  41d7d1:	fisubr WORD PTR [esi]
  41d7d3:	out    0x1a,al
  41d7d5:	jnp    0x41d76a
  41d7d7:	cwde   
  41d7d8:	sbb    BYTE PTR [ebx],dl
  41d7da:	push   esi
  41d7db:	or     ebx,edx
  41d7dd:	adc    eax,0x239a77b9
  41d7e2:	popf   
  41d7e3:	pushf  
  41d7e4:	scas   al,BYTE PTR es:[edi]
  41d7e5:	(bad)  
  41d7e6:	pop    edi
  41d7e7:	rcr    BYTE PTR [edx],1
  41d7e9:	push   cs
  41d7ea:	jno    0x41d7dc
  41d7ec:	jb     0x41d7b9
  41d7ee:	xchg   ebx,eax
  41d7ef:	jle    0x41d781
  41d7f1:	fisub  DWORD PTR [eax-0x7b]
  41d7f4:	jo     0x41d86f
  41d7f6:	inc    ebp
  41d7f7:	sahf   
  41d7f8:	les    ebx,FWORD PTR [ecx]
  41d7fa:	pop    ebx
  41d7fb:	mov    dh,al
  41d7fd:	mov    ah,0xf5
  41d7ff:	xchg   al,ah
  41d801:	cmp    BYTE PTR [eax-0x6b],cl
  41d804:	aaa    
  41d805:	sub    al,0xa1
  41d807:	int    0x46
  41d809:	push   edi
  41d80a:	add    eax,0x1694de67
  41d80f:	sti    
  41d810:	sbb    bh,BYTE PTR [ebp-0x4a]
  41d813:	sbb    DWORD PTR [edi-0x50e5bc2],0xf2cfc04a
  41d81d:	lock ds addr16 ret 0xced2
  41d823:	dec    ebx
  41d824:	sbb    bh,BYTE PTR [ebp-0x75]
  41d827:	mov    cl,0xc8
  41d829:	cmp    dh,BYTE PTR [edi+0x16d9ef42]
  41d82f:	(bad)  
  41d830:	jne    0x41d7c5
  41d832:	xor    al,0x95
  41d834:	xor    al,0xd0
  41d836:	(bad)
  41d839:	ror    DWORD PTR [eax-0x6],0x3c
  41d83d:	mov    cs,WORD PTR [esi+0x1dcf91a6]
  41d843:	jbe    0x41d89f
  41d845:	adc    dl,BYTE PTR [ecx]
  41d847:	fwait
  41d848:	cmp    BYTE PTR [ebx],bl
  41d84a:	ja     0x41d88c
  41d84c:	lods   eax,DWORD PTR ds:[esi]
  41d84d:	add    ecx,DWORD PTR [eax-0x72]
  41d850:	ins    BYTE PTR es:[edi],dx
  41d851:	gs mov ebx,0x8346a4a5
  41d857:	imul   edi,DWORD PTR [esi],0xdf6e3fc7
  41d85d:	mov    ds:0xff2bdcc8,al
  41d862:	dec    ecx
  41d863:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d864:	leave  
  41d865:	pop    ecx
  41d866:	das    
  41d867:	inc    edx
  41d868:	lock popf 
  41d86a:	push   ds
  41d86b:	sbb    al,0xb4
  41d86d:	fnstenv [edi+0x4e]
  41d870:	int3   
  41d871:	cli    
  41d872:	jmp    0xddd3:0x7df9ba6e
  41d879:	mov    DWORD PTR [eax-0x54],ecx
  41d87c:	pop    ebp
  41d87d:	jmp    0x41d818
  41d87f:	adc    DWORD PTR [edi],edi
  41d881:	xlat   BYTE PTR ds:[ebx]
  41d882:	fsub   DWORD PTR [esi+0x52]
  41d885:	mov    al,ds:0x592d7356
  41d88a:	shl    BYTE PTR [ecx],1
  41d88c:	sbb    eax,0x71d1b9d5
  41d891:	mov    DWORD PTR [edi+0x37],esi
  41d894:	mov    bh,0x35
  41d896:	ror    DWORD PTR [edx-0x68],0x4b
  41d89a:	inc    esp
  41d89b:	add    DWORD PTR [edx-0x21],eax
  41d89e:	and    DWORD PTR [esi+0x66],0x1fc6e80a
  41d8a5:	adc    DWORD PTR [ebx],edx
  41d8a7:	mov    esp,0xbe66b18d
  41d8ac:	xchg   esi,eax
  41d8ad:	jl     0x41d877
  41d8af:	sti    
  41d8b0:	cmp    eax,0x516725ed
  41d8b5:	xor    BYTE PTR [ebx-0x48],dh
  41d8b8:	sbb    bl,bh
  41d8ba:	dec    edx
  41d8bb:	jbe    0x41d87c
  41d8bd:	jmp    0xb298:0xe1147340
  41d8c4:	cmp    BYTE PTR [edi-0x43f00ea1],bl
  41d8ca:	jmp    0xf22b:0xc91b1a66
  41d8d1:	mov    ch,0x31
  41d8d3:	es inc eax
  41d8d5:	(bad)  
  41d8d7:	sbb    al,0x87
  41d8d9:	mov    WORD PTR [esi-0x58fe17fe],?
  41d8df:	mov    cl,0x5d
  41d8e1:	jmp    0x85e2902d
  41d8e6:	cmp    dl,BYTE PTR [eax]
  41d8e8:	fist   WORD PTR [eax]
  41d8ea:	popa   
  41d8eb:	xor    DWORD PTR [ebx+0x3c],0xffffff94
  41d8ef:	sub    DWORD PTR [edx+0x1a1d2afc],ebp
  41d8f5:	shr    ah,1
  41d8f7:	lock push esp
  41d8f9:	pop    eax
  41d8fa:	or     ebx,DWORD PTR [ecx+eax*2-0x65dcbaeb]
  41d901:	mov    ch,0x9b
  41d903:	pop    ecx
  41d904:	shl    DWORD PTR [edx+0x9aa9d27],1
  41d90a:	cmp    dh,BYTE PTR [edi]
  41d90c:	sbb    DWORD PTR [ebp-0x66269bb6],edi
  41d912:	loop   0x41d936
  41d914:	xor    eax,0xf86fe5da
  41d919:	addr16 sbb eax,0x3d39738a
  41d91f:	rcr    DWORD PTR [edx],cl
  41d921:	jo     0x41d995
  41d923:	out    0x27,eax
  41d925:	sub    cl,BYTE PTR [ebx-0x5a2225ae]
  41d92b:	(bad)  
  41d92c:	out    dx,eax
  41d92d:	sub    BYTE PTR [edx-0x11421328],0xe9
  41d934:	and    dl,BYTE PTR [edx]
  41d936:	enter  0xf837,0x31
  41d93a:	dec    eax
  41d93b:	inc    edi
  41d93c:	out    dx,al
  41d93d:	sbb    ebx,edi
  41d93f:	(bad)  
  41d940:	mov    esp,0xe4649af7
  41d945:	fnstcw WORD PTR [ebx]
  41d947:	ins    BYTE PTR es:[edi],dx
  41d948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d949:	add    BYTE PTR [edx],bl
  41d94b:	or     eax,0x63f9181a
  41d950:	call   0xaa7e64
  41d955:	fcmovu st,st(7)
  41d957:	xchg   ecx,eax
  41d958:	pop    edx
  41d959:	push   ebp
  41d95a:	mov    esp,0xa341031e
  41d95f:	adc    al,0xa8
  41d961:	sti    
  41d962:	inc    edi
  41d963:	(bad)  
  41d964:	push   ebx
  41d965:	js     0x41d8f5
  41d967:	pop    ecx
  41d968:	add    esp,ebp
  41d96a:	repnz mov eax,ds:0x3953b710
  41d970:	mov    dl,0x20
  41d972:	dec    eax
  41d973:	xchg   DWORD PTR [edx],ebx
  41d975:	or     ecx,DWORD PTR [edi-0x78]
  41d978:	jbe    0x41d929
  41d97a:	js     0x41d95d
  41d97c:	repnz loopne 0x41d94d
  41d97f:	xchg   ebp,eax
  41d980:	push   esp
  41d981:	xor    BYTE PTR [edx+0x1],dh
  41d984:	cdq    
  41d985:	cmp    bh,BYTE PTR [esi+eiz*2+0x1a]
  41d989:	and    DWORD PTR [esi+esi*2+0x7967451d],ebx
  41d990:	add    edx,ebx
  41d992:	push   edx
  41d993:	jmp    FWORD PTR [ebx+0x75]
  41d996:	fs mov ch,0x8c
  41d999:	adc    eax,0x78819fa3
  41d99e:	and    BYTE PTR [ecx-0x2e54ed7],0x9b
  41d9a5:	inc    ebx
  41d9a6:	loopne 0x41d96e
  41d9a8:	js     0x41d983
  41d9aa:	jns    0x41d956
  41d9ac:	and    eax,0x97444d73
  41d9b1:	fdivr  QWORD PTR [edi]
  41d9b3:	mov    ebx,0xca4820a1
  41d9b8:	push   esi
  41d9b9:	call   0x66b4:0x22a349b5
  41d9c0:	lods   eax,DWORD PTR ds:[esi]
  41d9c1:	xor    DWORD PTR [edi-0xd3edee4],edx
  41d9c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9c8:	(bad)  
  41d9c9:	std    
  41d9ca:	loope  0x41d96b
  41d9cc:	sub    al,BYTE PTR [ebp+0x7f]
  41d9cf:	adc    DWORD PTR [ecx],ebp
  41d9d1:	adc    eax,DWORD PTR [esi]
  41d9d3:	push   edi
  41d9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9d5:	jmp    esp
  41d9d7:	mov    bl,0xa6
  41d9d9:	fldcw  WORD PTR [eax-0x26c03886]
  41d9df:	mov    edx,DWORD PTR [ebp+edx*8+0x2a7e0ef]
  41d9e6:	dec    eax
  41d9e7:	and    ebp,DWORD PTR [edi+0x6e923ac5]
  41d9ed:	lods   al,BYTE PTR ds:[esi]
  41d9ee:	in     al,dx
  41d9ef:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41d9f1:	stos   DWORD PTR es:[edi],eax
  41d9f2:	dec    edx
  41d9f3:	(bad)  
  41d9f4:	sbb    esi,DWORD PTR [edx+0xec51f3e]
  41d9fa:	sbb    eax,0xe0aa8a81
  41d9ff:	repz leave 
  41da01:	sbb    ah,BYTE PTR [ecx+0x66]
  41da04:	jmp    FWORD PTR [ecx+0x511ad8e5]
  41da0a:	dec    ecx
  41da0b:	pushf  
  41da0c:	jg     0x41da50
  41da0e:	daa    
  41da0f:	pop    edi
  41da10:	sti    
  41da11:	fcmovb st,st(5)
  41da13:	je     0x41d9c7
  41da15:	(bad)  
  41da16:	mov    al,ds:0x60fa025f
  41da1b:	push   esp
  41da1c:	sbb    dh,BYTE PTR ds:0xd90e4c07
  41da22:	ret    0x7c85
  41da25:	jbe    0x41d9fa
  41da27:	jmp    0xc6da2b49
  41da2c:	adc    eax,0x6a69f342
  41da31:	out    0x1b,al
  41da33:	(bad)  
  41da34:	data16 fld DWORD PTR [esi+0xf5b8e6a]
  41da3b:	or     edi,ecx
  41da3d:	popf   
  41da3e:	pop    ebx
  41da3f:	push   esi
  41da40:	sbb    ecx,edx
  41da42:	xor    al,BYTE PTR [ecx+0x3632f4cb]
  41da48:	dec    edx
  41da49:	rcl    DWORD PTR [eax+0x670cafdb],1
  41da4f:	data16 jb 0x41daad
  41da52:	xchg   ebx,eax
  41da53:	sbb    ch,BYTE PTR [bp+si+0x25f]
  41da58:	sub    BYTE PTR [ecx+0x79],ah
  41da5b:	xor    BYTE PTR ds:[ecx],ah
  41da5e:	call   0xba57:0x4abd296c
  41da65:	xor    BYTE PTR [ebp+0x1d7d9e6b],bh
  41da6b:	mov    ch,0x1a
  41da6d:	push   ecx
  41da6e:	sub    BYTE PTR [esi+0x25ca419b],ah
  41da74:	mov    ecx,ebx
  41da76:	mov    ah,ch
  41da78:	jmp    0x64c0:0xcfb9fb6e
  41da7f:	sub    al,0x99
  41da81:	out    0x47,al
  41da83:	(bad)
  41da86:	mov    ebp,0xc0a7c4eb
  41da8b:	pop    si
  41da8d:	in     al,0x71
  41da8f:	fs sbb eax,ecx
  41da92:	jns    0x41daad
  41da94:	mov    ebx,0x8b179f3c
  41da99:	retf   0x663b
  41da9c:	dec    edx
  41da9d:	fs cmp eax,0x8e4f30d7
  41daa3:	xlat   BYTE PTR ds:[ebx]
  41daa4:	jno    0x41db0c
  41daa6:	push   ebx
  41daa7:	data16 repz mov ah,0x5f
  41daab:	push   0x38
  41daad:	sahf   
  41daae:	aam    0xd5
  41dab0:	sbb    dh,cl
  41dab2:	(bad)  
  41dab3:	lock mov ebp,0xf748508a
  41dab9:	sbb    eax,0x3645518e
  41dabe:	cmp    ah,BYTE PTR [edi]
  41dac0:	xlat   BYTE PTR ds:[ebx]
  41dac1:	push   edx
  41dac2:	nop
  41dac3:	jne    0x41da5f
  41dac5:	jo     0x41db46
  41dac7:	sbb    eax,0x118f2f6f
  41dacc:	cmp    al,0x60
  41dace:	dec    eax
  41dacf:	into   
  41dad0:	aas    
  41dad1:	gs sbb eax,0x398c7f5e
  41dad7:	addr16 xchg edi,eax
  41dad9:	adc    DWORD PTR [ebp+edi*1+0x1a],eax
  41dadd:	push   esp
  41dade:	dec    ebp
  41dadf:	push   ss
  41dae0:	inc    ebx
  41dae1:	or     eax,0xdc75101f
  41dae6:	dec    eax
  41dae7:	xchg   edi,eax
  41dae8:	mov    esi,0x1aaf787c
  41daed:	loope  0x41dacf
  41daef:	js     0x41db01
  41daf1:	stos   DWORD PTR es:[edi],eax
  41daf2:	leave  
  41daf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41daf4:	ficom  DWORD PTR gs:[ecx+0x293091d3]
  41dafb:	lea    edi,[edi+0x1ad4a6a9]
  41db01:	push   0x6
  41db03:	imul   ecx,DWORD PTR [esp+eax*1-0x2600e235],0x2c1946a1
  41db0e:	fnstsw WORD PTR [ecx-0x62]
  41db11:	test   DWORD PTR [edx+edi*8],ecx
  41db14:	xchg   esp,eax
  41db15:	mov    BYTE PTR [eax-0x56],cl
  41db18:	pop    ds
  41db19:	adc    DWORD PTR [ebp+edi*1-0xa],edx
  41db1d:	inc    edx
  41db1e:	mov    edx,0x337ffb66
  41db23:	pop    edi
  41db24:	sbb    ch,cl
  41db26:	jle    0x41dae6
  41db28:	sbb    dl,BYTE PTR fs:[esi+0x14]
  41db2c:	scas   eax,DWORD PTR es:[edi]
  41db2d:	call   0xf047fa80
  41db32:	xchg   esi,eax
  41db33:	and    BYTE PTR [ecx+0x633ef148],ah
  41db39:	mov    edx,0xd539767b
  41db3e:	imul   esp,DWORD PTR [ecx+0x1a],0xffffffd7
  41db42:	mov    ds:0x4e0a8307,eax
  41db47:	and    BYTE PTR [ebp-0x2199538a],bl
  41db4d:	fs int 0x35
  41db50:	push   ds
  41db51:	dec    edx
  41db52:	mov    edx,0x850bc19c
  41db57:	inc    esp
  41db58:	adc    BYTE PTR [ecx+0xa],dl
  41db5b:	xchg   ebx,eax
  41db5c:	jmp    FWORD PTR [edi+0x28]
  41db5f:	and    al,0xbc
  41db61:	sahf   
  41db62:	dec    eax
  41db63:	mov    ecx,0x9b55e22e
  41db68:	ret    
  41db69:	daa    
  41db6a:	xor    DWORD PTR [ebx-0x6c122689],esp
  41db70:	sbb    BYTE PTR [esi+0x14],0xeb
  41db74:	sbb    dh,BYTE PTR [edx-0x6f]
  41db77:	cs test eax,0xdb2146dc
  41db7d:	fldcw  WORD PTR [ecx-0x6b]
  41db80:	lods   al,BYTE PTR ds:[esi]
  41db81:	add    al,0x6b
  41db83:	out    dx,al
  41db84:	dec    edx
  41db85:	lea    edi,[esi+0x4884adf7]
  41db8b:	mov    ebx,0x7e1df77
  41db90:	add    BYTE PTR [esi+edx*1],ah
  41db93:	push   0xd0bb446c
  41db98:	cmp    BYTE PTR [ebx+eiz*4],cl
  41db9b:	(bad)  
  41db9c:	out    0x66,eax
  41db9e:	dec    edi
  41db9f:	imul   edi,DWORD PTR [edx+0x31],0xd9d10ece
  41dba6:	inc    ebx
  41dba7:	mov    eax,0xa888ed37
  41dbac:	push   es
  41dbad:	mov    ebp,0x6fb888c
  41dbb2:	dec    eax
  41dbb3:	jne    0x41db7a
  41dbb5:	jne    0x41db61
  41dbb7:	cwde   
  41dbb8:	in     al,0xb6
  41dbba:	pop    esi
  41dbbb:	mov    ax,ds:0x1af048f8
  41dbc1:	les    esi,FWORD PTR [esp+ecx*1]
  41dbc4:	fst    QWORD PTR [ebx-0x26c1ea2f]
  41dbca:	enter  0xff63,0x9d
  41dbce:	mov    esp,0xd1f9ae4f
  41dbd3:	inc    eax
  41dbd4:	stc    
  41dbd5:	hlt    
  41dbd6:	inc    edi
  41dbd7:	xor    ah,BYTE PTR [esi]
  41dbd9:	into   
  41dbda:	mov    ebp,0x6085f09c
  41dbdf:	xchg   dx,ax
  41dbe1:	shl    bl,1
  41dbe3:	inc    ecx
  41dbe4:	sub    BYTE PTR [edi],ah
  41dbe6:	stc    
  41dbe7:	xor    al,0x83
  41dbe9:	pop    ecx
  41dbea:	jne    0x41db95
  41dbec:	cld    
  41dbed:	fsubr  st,st(5)
  41dbef:	dec    edx
  41dbf0:	aaa    
  41dbf1:	cmp    al,0xef
  41dbf3:	pushaw 
  41dbf5:	popa   
  41dbf6:	in     al,dx
  41dbf7:	or     BYTE PTR [edx-0x3d],ah
  41dbfa:	test   edi,0x86315de7
  41dc00:	sbb    ch,BYTE PTR [ebx-0x22]
  41dc03:	mov    cs,WORD PTR [eax-0x59]
  41dc06:	(bad)  
  41dc07:	icebp  
  41dc08:	add    DWORD PTR [eax+0x6c],esp
  41dc0b:	mov    ax,WORD PTR [ebx+0x33]
  41dc0f:	push   ebx
  41dc10:	and    DWORD PTR [ecx-0x20],ebp
  41dc13:	mov    ds:0x627050a1,al
  41dc18:	mov    edi,0x7ad25825
  41dc1d:	dec    ah
  41dc1f:	jne    0x41dbbb
  41dc21:	div    DWORD PTR [edx+0x75bd432e]
  41dc27:	sbb    dh,ah
  41dc29:	mov    ds:0xee334b48,eax
  41dc2e:	scas   eax,DWORD PTR es:[edi]
  41dc2f:	jae    0x41dc86
  41dc31:	add    DWORD PTR [ecx],0x79
  41dc34:	mov    eax,ds:0xaa67ed73
  41dc39:	popf   
  41dc3a:	iret   
  41dc3b:	add    DWORD PTR [ebx],ebx
  41dc3d:	cli    
  41dc3e:	inc    ecx
  41dc3f:	dec    esi
  41dc40:	pop    ecx
  41dc41:	xchg   cl,dh
  41dc43:	call   0x819e4b4e
  41dc48:	out    dx,eax
  41dc49:	fsub   st(6),st
  41dc4b:	fist   DWORD PTR [ecx-0x19]
  41dc4e:	push   ebx
  41dc4f:	ins    BYTE PTR es:[edi],dx
  41dc50:	mov    ?,WORD PTR [ebx+0x218407a]
  41dc56:	push   edi
  41dc57:	cli    
  41dc58:	mov    al,ds:0xba8a2f89
  41dc5d:	xchg   edx,eax
  41dc5e:	xor    DWORD PTR [ebp+0x7a],0xad3e52ac
  41dc65:	pop    ecx
  41dc66:	add    BYTE PTR [ecx+0x68488cb5],dh
  41dc6c:	inc    esp
  41dc6d:	pcmpeqb mm2,mm1
  41dc70:	pop    esi
  41dc71:	fmul   st(7),st
  41dc73:	mov    ds:0x6745b50d,eax
  41dc78:	jae    0x41dccc
  41dc7a:	scas   al,BYTE PTR es:[edi]
  41dc7b:	leave  
  41dc7c:	sbb    al,cl
  41dc7e:	out    dx,al
  41dc7f:	hlt    
  41dc80:	call   0x600cabfb
  41dc85:	fnstcw WORD PTR [eax+0x3f]
  41dc88:	sub    eax,0x6707ca6b
  41dc8d:	xchg   esp,esp
  41dc8f:	vcvtsi2ss xmm1,xmm0,DWORD PTR [eax-0x68]
  41dc94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dc95:	fist   DWORD PTR [ecx]
  41dc97:	xor    BYTE PTR [ecx],bl
  41dc99:	stos   DWORD PTR es:[edi],eax
  41dc9a:	out    dx,al
  41dc9b:	push   0x9c16d35c
  41dca0:	xor    bh,BYTE PTR [eax+ebp*1+0x7c]
  41dca4:	hlt    
  41dca5:	jns    0x41dcef
  41dca7:	sub    dh,BYTE PTR [ebp+esi*1+0x1e]
  41dcab:	neg    BYTE PTR [esi]
  41dcad:	mov    ds:0x1e656d81,al
  41dcb2:	add    eax,0x2861e7a6
  41dcb7:	sub    ebx,ebp
  41dcb9:	mov    esi,0x722cc708
  41dcbe:	dec    eax
  41dcbf:	std    
  41dcc0:	scas   al,BYTE PTR es:[edi]
  41dcc1:	bound  edx,QWORD PTR [eax]
  41dcc3:	hlt    
  41dcc4:	in     al,dx
  41dcc5:	xor    DWORD PTR [edi],edx
  41dcc7:	jne    0x41dce3
  41dcc9:	adc    al,0x97
  41dccb:	(bad)  
  41dccc:	int3   
  41dccd:	in     al,dx
  41dcce:	jmp    0x48a9d9be
  41dcd3:	xchg   esp,eax
  41dcd4:	setp   bh
  41dcd7:	mov    eax,0xb29b317e
  41dcdc:	leave  
  41dcdd:	adc    ecx,DWORD PTR [eax-0x6dc4c6f4]
  41dce3:	rcr    DWORD PTR [edx],0x68
  41dce6:	mov    ecx,0x3bc8bae4
  41dceb:	push   0x53
  41dced:	jbe    0x41dd51
  41dcef:	cmp    dh,BYTE PTR ss:[ecx-0x600a98cd]
  41dcf6:	arpl   WORD PTR [edi+0x3f],si
  41dcf9:	push   eax
  41dcfa:	aam    0x66
  41dcfc:	out    dx,eax
  41dcfd:	inc    ebx
  41dcfe:	pop    ebx
  41dcff:	neg    BYTE PTR [edx]
  41dd01:	mov    ebx,0x787bba38
  41dd06:	sti    
  41dd07:	ss (bad) 
  41dd09:	fxtract 
  41dd0b:	mov    dh,0x55
  41dd0d:	rol    esp,cl
  41dd0f:	cwde   
  41dd10:	pop    es
  41dd11:	mov    eax,ds:0x4f1ae562
  41dd16:	lds    esp,FWORD PTR [eax+esi*8-0xec717f9]
  41dd1d:	(bad)  
  41dd1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd20:	xchg   ebp,eax
  41dd21:	jle    0x41dd17
  41dd23:	mov    bh,0x55
  41dd25:	cmp    BYTE PTR [ebp+eax*4-0x449a4252],bh
  41dd2c:	int    0x23
  41dd2e:	mov    DWORD PTR [eax+0x6843c4ea],edx
  41dd34:	jl     0x41dd38
  41dd36:	mov    ch,0x66
  41dd38:	fsubr  DWORD PTR [ecx-0x74]
  41dd3b:	in     al,dx
  41dd3c:	sbb    edi,DWORD PTR [edi+0x46]
  41dd3f:	sbb    DWORD PTR [ebx+0x12c2e96a],0x35a1e033
  41dd49:	(bad)  
  41dd4a:	icebp  
  41dd4b:	retfw  
  41dd4d:	fst    QWORD PTR [esi]
  41dd4f:	adc    bl,BYTE PTR [ebx+eax*8]
  41dd52:	push   edi
  41dd53:	gs loop 0x41dcf2
  41dd56:	std    
  41dd57:	lds    eax,FWORD PTR [ecx-0x25]
  41dd5a:	sub    eax,edi
  41dd5c:	mov    edx,0x5b756eb1
  41dd61:	aam    0x0
  41dd63:	aaa    
  41dd64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd65:	test   eax,0x771ad06c
  41dd6a:	lds    esp,FWORD PTR [edx+0x5e]
  41dd6d:	mov    eax,0xd91b949c
  41dd72:	cmp    cl,BYTE PTR [ebx]
  41dd74:	mov    bh,0xa1
  41dd76:	xor    bl,dh
  41dd78:	or     bl,BYTE PTR [eax+0x3d]
  41dd7b:	cwde   
  41dd7c:	repnz fmul DWORD PTR [eax+0x26]
  41dd80:	jb     0x41ddea
  41dd82:	inc    eax
  41dd83:	pop    ds
  41dd84:	rcr    BYTE PTR [ebx-0x58],0x66
  41dd88:	inc    ebp
  41dd89:	data16 jo 0x41dde6
  41dd8c:	sbb    dl,BYTE PTR [ebx+ebx*1]
  41dd8f:	sub    BYTE PTR [esi-0x4bededd],bl
  41dd95:	push   edx
  41dd96:	add    al,BYTE PTR [ebx+eax*4-0x45990b13]
  41dd9d:	cs sbb al,0xa7
  41dda0:	sub    DWORD PTR [ebx+0x1b],ebx
  41dda3:	(bad)  
  41dda4:	xlat   BYTE PTR ds:[ebx]
  41dda5:	(bad)  [edx+eiz*2]
  41dda8:	push   ds
  41dda9:	push   cs
  41ddaa:	ficom  WORD PTR [ecx]
  41ddac:	xchg   esp,eax
  41ddad:	dec    esi
  41ddae:	push   esi
  41ddaf:	popw   ds
  41ddb1:	ret    
  41ddb2:	in     eax,0x8f
  41ddb4:	xchg   edi,eax
  41ddb5:	push   esp
  41ddb6:	mov    al,0xd6
  41ddb8:	hlt    
  41ddb9:	push   esi
  41ddba:	dec    eax
  41ddbb:	cmc    
  41ddbc:	cmp    al,0xf
  41ddbe:	inc    eax
  41ddbf:	call   0x1e60:0x66d8e214
  41ddc6:	cld    
  41ddc7:	and    al,0x1a
  41ddc9:	xchg   edx,eax
  41ddca:	cmp    DWORD PTR [eax-0x6497f78e],esp
  41ddd0:	cmp    ecx,DWORD PTR [edi+0x4c]
  41ddd3:	int3   
  41ddd4:	sub    eax,0xf7684589
  41ddd9:	fistp  WORD PTR [esi-0xb]
  41dddc:	ret    0x9525
  41dddf:	pop    ebp
  41dde0:	sbb    cl,ah
  41dde2:	mov    ebp,?
  41dde4:	lock or al,0x3e
  41dde7:	or     eax,0x4db3f6d0
  41ddec:	clc    
  41dded:	sbb    DWORD PTR [ebx],eax
  41ddef:	jne    0x41dde6
  41ddf1:	popf   
  41ddf2:	in     eax,0xa4
  41ddf4:	push   ds
  41ddf5:	jns    0xb35afcfd
  41ddfb:	push   esi
  41ddfc:	popa   
  41ddfd:	mov    al,ds:0xddd45cc8
  41de02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de03:	xchg   cx,ax
  41de05:	fwait
  41de06:	out    dx,al
  41de07:	scas   al,BYTE PTR es:[edi]
  41de08:	or     al,0x19
  41de0a:	jecxz  0x41dd96
  41de0c:	sub    bl,ch
  41de0e:	inc    edi
  41de0f:	in     eax,dx
  41de10:	(bad)  
  41de11:	push   esp
  41de12:	fwait
  41de13:	lahf   
  41de14:	inc    ecx
  41de15:	(bad)  
  41de16:	or     BYTE PTR [edi+0x39],ah
  41de19:	or     dl,ah
  41de1b:	inc    ebp
  41de1c:	(bad)  
  41de1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de1e:	inc    ebx
  41de1f:	scas   al,BYTE PTR es:[edi]
  41de20:	jmp    0x41de82
  41de22:	dec    eax
  41de23:	fisttp DWORD PTR [eax-0x40e658ac]
  41de29:	adc    DWORD PTR [esi-0x5c],eax
  41de2c:	and    al,0x32
  41de2e:	dec    eax
  41de2f:	xchg   ebx,eax
  41de30:	push   ecx
  41de31:	cmp    al,0xe3
  41de33:	(bad)  
  41de34:	jle    0x41de65
  41de36:	dec    ecx
  41de37:	fmulp  st(5),st
  41de39:	leave  
  41de3a:	adc    DWORD PTR [edi-0x6c],ebx
  41de3d:	mul    BYTE PTR [ebx]
  41de3f:	cmp    DWORD PTR [ebp-0x5b4091e7],0x18
  41de46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41de47:	pushf  
  41de48:	sbb    al,bh
  41de4a:	or     BYTE PTR [eax],0x37
  41de4d:	js     0x41deb9
  41de4f:	imul   ebx,DWORD PTR [ebp+0x3b59fee8],0x4e29a934
  41de59:	popf   
  41de5a:	imul   ebx,DWORD PTR [edi+esi*2-0x66c9b097],0x291047f8
  41de65:	scas   al,BYTE PTR es:[edi]
  41de66:	sub    DWORD PTR [eax-0x75],ebx
  41de69:	adc    DWORD PTR [ebp-0x179b529a],ecx
  41de6f:	fistp  WORD PTR ds:0xa2be22cf
  41de75:	xchg   esp,eax
  41de76:	jmp    0x731e:0x884a9602
  41de7d:	pusha  
  41de7e:	push   eax
  41de7f:	data16 jl 0x41de37
  41de82:	or     ch,BYTE PTR [edx+0x2d6f6528]
  41de88:	sbb    al,0x7d
  41de8a:	or     BYTE PTR ds:0xb1956d9a,bh
  41de90:	xchg   cl,bl
  41de92:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41de94:	adc    edx,eax
  41de96:	mov    bh,BYTE PTR [esi]
  41de98:	sub    BYTE PTR [edx-0x3a677516],al
  41de9e:	dec    eax
  41de9f:	fbld   TBYTE PTR [ecx]
  41dea1:	sbb    al,0x45
  41dea3:	dec    ebx
  41dea4:	in     al,dx
  41dea5:	push   ebx
  41dea6:	lea    edx,[esi+0x50346ab9]
  41deac:	push   ebp
  41dead:	sub    eax,0x6fe64048
  41deb2:	mov    al,0x9d
  41deb4:	dec    esp
  41deb5:	ficomp DWORD PTR [ebx]
  41deb7:	arpl   WORD PTR [ebp+0x21e42a9e],dx
  41debd:	cdq    
  41debe:	dec    esi
  41debf:	push   ss
  41dec0:	cmp    BYTE PTR [eax-0x5],al
  41dec3:	(bad)  
  41dec4:	(bad)  
  41dec6:	fldenv [ecx+eax*2+0x3f]
  41deca:	mov    bl,BYTE PTR [esi-0x21e6ecb8]
  41ded0:	sbb    dh,BYTE PTR [ecx-0x73cfdc04]
  41ded6:	div    DWORD PTR [ebx]
  41ded8:	sub    DWORD PTR [ecx],ebp
  41deda:	fbld   TBYTE PTR [ecx]
  41dedc:	call   0x44949176
  41dee1:	stos   BYTE PTR es:[edi],al
  41dee2:	or     DWORD PTR [eax],esi
  41dee4:	push   cs
  41dee5:	mov    ecx,0x89fe209e
  41deea:	stos   BYTE PTR es:[edi],al
  41deeb:	jno    0x41df07
  41deed:	fs es push ebp
  41def0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41def1:	inc    ebp
  41def2:	xchg   ebp,eax
  41def3:	push   ebp
  41def4:	bound  edi,QWORD PTR [edi+edx*2+0x48]
  41def8:	or     BYTE PTR [edx-0x28],cl
  41defb:	ret    
  41defc:	mov    ecx,0x38a547ea
  41df01:	fptan  
  41df03:	gs repz (bad) 
  41df06:	sub    eax,0xb63a3923
  41df0b:	shr    DWORD PTR [edi-0x6a],cl
  41df0e:	dec    eax
  41df0f:	xchg   esi,eax
  41df10:	pop    esi
  41df11:	shr    BYTE PTR [ecx],1
  41df13:	fdiv   st(6),st
  41df15:	fst    DWORD PTR ds:0x603385e3
  41df1b:	or     bl,bl
  41df1d:	cmp    DWORD PTR [edx+0x4f359f6c],edx
  41df23:	and    ecx,DWORD PTR [edx]
  41df25:	mov    DWORD PTR [ebx-0x3b],ecx
  41df28:	mov    ch,0xf8
  41df2a:	test   BYTE PTR [esi],dh
  41df2c:	mov    WORD PTR [edi+0x691aae80],fs
  41df32:	ss icebp 
  41df34:	ins    BYTE PTR es:[edi],dx
  41df35:	test   DWORD PTR [eax+0x52],ebx
  41df38:	dec    esp
  41df39:	dec    esi
  41df3a:	dec    ecx
  41df3b:	dec    esi
  41df3c:	sub    ebx,eax
  41df3e:	pop    ds
  41df3f:	xor    dh,BYTE PTR [ebp+0x4b8d3fd9]
  41df45:	gs dec edi
  41df47:	stos   DWORD PTR es:[edi],eax
  41df48:	xchg   edi,eax
  41df49:	into   
  41df4a:	and    eax,0x48f68bee
  41df4f:	and    dl,BYTE PTR [edi]
  41df51:	cmp    ah,BYTE PTR [ecx]
  41df53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df54:	out    0x85,al
  41df56:	adc    ecx,ecx
  41df58:	xor    DWORD PTR [esp+ecx*8+0x66],0xffffffd8
  41df5d:	push   edi
  41df5e:	aam    0x41
  41df60:	cmp    BYTE PTR [ecx+0x5d],ch
  41df63:	add    eax,0xb8a4d9d4
  41df68:	neg    DWORD PTR [ebx-0x268135de]
  41df6e:	and    BYTE PTR [edx-0x1b],cl
  41df71:	push   esi
  41df72:	rcl    DWORD PTR [esi+0x76],0x1c
  41df76:	dec    edx
  41df77:	and    dl,BYTE PTR [edx-0x647fb716]
  41df7d:	cmp    bl,BYTE PTR [esi+0x2a]
  41df80:	pop    es
  41df81:	fisubr DWORD PTR [ebx]
  41df83:	lahf   
  41df84:	add    esi,DWORD PTR [edi]
  41df86:	push   esp
  41df87:	nop
  41df88:	popf   
  41df89:	add    BYTE PTR [edi+0x4f4e3430],ch
  41df8f:	lods   eax,DWORD PTR ds:[esi]
  41df90:	mov    dl,BYTE PTR [esi-0x6c]
  41df93:	xor    ebp,edx
  41df95:	frstor [ebx-0x6122504a]
  41df9b:	dec    edx
  41df9c:	sbb    eax,0x89e99a0b
  41dfa1:	xchg   ecx,eax
  41dfa2:	cmp    BYTE PTR [edx+ebx*1],dl
  41dfa5:	dec    edi
  41dfa6:	mov    ebx,0xcb2e36f8
  41dfab:	fst    QWORD PTR [ecx+0x17]
  41dfae:	js     0x41df57
  41dfb0:	sbb    al,BYTE PTR ds:0x772a4f76
  41dfb6:	and    al,BYTE PTR [ebx+ebx*1-0x1f]
  41dfba:	stos   DWORD PTR es:[edi],eax
  41dfbb:	lods   eax,DWORD PTR ds:[esi]
  41dfbc:	dec    edx
  41dfbd:	sahf   
  41dfbe:	imul   edx,DWORD PTR [ebx+0x424f034a],0x667a3c2b
  41dfc8:	xor    DWORD PTR [edi+0x58],ebp
  41dfcb:	sbb    eax,0xb79a2938
  41dfd0:	adc    eax,0x9fd0c4da
  41dfd5:	repnz sub BYTE PTR [ebx+ebx*2],0xe8
  41dfda:	mov    ebp,0xe11dd75b
  41dfdf:	sahf   
  41dfe0:	jbe    0x41df95
  41dfe2:	call   0x4783080c
  41dfe7:	push   ss
  41dfe8:	ins    DWORD PTR es:[edi],dx
  41dfe9:	pop    ecx
  41dfea:	push   esp
  41dfeb:	in     eax,0xd8
  41dfed:	cmp    al,0x9a
  41dfef:	dec    edi
  41dff0:	mov    cs,WORD PTR [ecx+0x2632f64a]
  41dff6:	add    eax,0x57b01367
  41dffb:	adc    al,0x1a
  41dffd:	xchg   BYTE PTR [edi],dl
  41dfff:	aas    
  41e000:	jle    0x41df8b
  41e002:	lock loope 0x41e063
  41e005:	(bad)  [eax]
  41e007:	das    
  41e008:	cdq    
  41e009:	pop    edx
  41e00a:	sbb    al,0x7d
  41e00c:	psubb  mm2,QWORD PTR [eax]
  41e00f:	pop    esi
  41e010:	out    0x26,al
  41e012:	dec    eax
  41e013:	mov    esp,eax
  41e015:	je     0x41e05a
  41e017:	test   eax,0x6ff879b8
  41e01c:	jbe    0x41e020
  41e01e:	rcr    edx,cl
  41e020:	fnsave [esi-0x18635eb8]
  41e026:	cmp    cl,BYTE PTR [ecx+0x1fdedfa1]
  41e02c:	mov    edx,0xe99376eb
  41e031:	xor    dh,dh
  41e033:	outs   dx,BYTE PTR ds:[esi]
  41e034:	or     eax,0x35c84895
  41e039:	xchg   edi,eax
  41e03a:	stc    
  41e03b:	sbb    ch,dh
  41e03d:	sub    dh,bh
  41e03f:	ins    DWORD PTR es:[edi],dx
  41e040:	(bad)  
  41e041:	jp     0x41e0b2
  41e043:	(bad)  
  41e044:	sub    eax,0x23cbb5ad
  41e049:	loope  0x41e078
  41e04b:	xchg   ebx,eax
  41e04c:	mov    dh,0x59
  41e04e:	mov    esp,ebx
  41e050:	mov    bl,0xaf
  41e052:	retf   
  41e053:	jge    0x41e0a3
  41e055:	out    0x9e,eax
  41e057:	fidivr WORD PTR [eax+0x5cb7e318]
  41e05d:	daa    
  41e05e:	sub    BYTE PTR ds:0x1eacb996,bl
  41e064:	fwait
  41e065:	aas    
  41e066:	pushw  0x257b
  41e06a:	enter  0xfe25,0x55
  41e06e:	mov    ds:0xb447e8d3,eax
  41e073:	dec    WORD PTR [eax]
  41e076:	sbb    esi,esi
  41e078:	sbb    al,BYTE PTR [edi+ecx*8-0xa]
  41e07c:	push   edi
  41e07d:	jno    0x41e00f
  41e07f:	imul   ebp,DWORD PTR [ebx+0x5e47fed9],0xffffffab
  41e086:	add    BYTE PTR ds:0x56f2153d,cl
  41e08c:	sahf   
  41e08d:	mov    ebx,0xf4326748
  41e092:	stos   DWORD PTR es:[edi],eax
  41e093:	cwde   
  41e094:	sahf   
  41e095:	(bad)  [eax]
  41e097:	dec    DWORD PTR [ebp+0x46]
  41e09a:	cli    
  41e09b:	ror    dl,0x4e
  41e09e:	and    dl,al
  41e0a0:	sbb    ch,BYTE PTR [esi]
  41e0a2:	shl    BYTE PTR [ebx+eiz*1-0x36],0x9b
  41e0a7:	inc    edx
  41e0a8:	mov    DWORD PTR [edi],edx
  41e0aa:	or     edi,DWORD PTR [edx+ebx*4]
  41e0ad:	sbb    DWORD PTR [esi+0x61],ebx
  41e0b0:	leave  
  41e0b1:	int    0x6a
  41e0b3:	out    0x39,eax
  41e0b5:	(bad)  
  41e0b6:	iret   
  41e0b7:	retf   
  41e0b8:	pop    edi
  41e0b9:	int3   
  41e0ba:	clc    
  41e0bb:	call   0xda10:0x18dff89a
  41e0c2:	pop    eax
  41e0c3:	push   0x556abd15
  41e0c8:	dec    esi
  41e0c9:	test   dl,ch
  41e0cb:	cli    
  41e0cc:	pop    ecx
  41e0cd:	rcl    BYTE PTR [esp+ebp*2-0x6d],1
  41e0d1:	fldcw  WORD PTR [esi]
  41e0d3:	ins    DWORD PTR es:[edi],dx
  41e0d4:	adc    al,0x3e
  41e0d6:	dec    ebp
  41e0d7:	shl    BYTE PTR [edx],0x7
  41e0da:	and    ebx,DWORD PTR [edx+edi*2]
  41e0dd:	mov    dh,0x48
  41e0df:	adc    DWORD PTR [ebx],edx
  41e0e1:	sub    bl,al
  41e0e3:	xlat   BYTE PTR ds:[ebx]
  41e0e4:	mov    bh,0xd
  41e0e6:	lea    esp,[esi-0x47]
  41e0e9:	mov    cl,0x5a
  41e0eb:	enter  0x1914,0xd8
  41e0ef:	mov    ecx,0xa755dc00
  41e0f4:	shl    BYTE PTR [ecx],cl
  41e0f6:	arpl   WORD PTR [esi],sp
  41e0f8:	pop    ebp
  41e0f9:	fst    DWORD PTR [eax+0x34fa8c7]
  41e0ff:	mov    ebp,0x1b51159c
  41e104:	or     eax,0x62e26736
  41e109:	pop    ds
  41e10a:	enter  0xbc46,0xd9
  41e10e:	add    BYTE PTR [eax+0x3b],bh
  41e111:	mov    al,ds:0x67012c71
  41e116:	int    0xdf
  41e118:	and    eax,0xfcf04881
  41e11d:	cmp    bl,BYTE PTR [esi-0x4a]
  41e120:	les    ebx,FWORD PTR [ecx+0x67]
  41e123:	push   cx
  41e125:	push   cs
  41e126:	inc    esp
  41e127:	xchg   ebx,eax
  41e128:	sbb    cl,BYTE PTR [edi+0x34]
  41e12b:	lea    edx,ds:0xd6595a39
  41e131:	fidiv  DWORD PTR [ecx]
  41e133:	mov    dh,0x8e
  41e135:	cwde   
  41e136:	mov    ebp,0x61bdb7c2
  41e13b:	push   ss
  41e13c:	sub    dl,ah
  41e13e:	iret   
  41e13f:	imul   edx,ebx,0xda21b23e
  41e145:	mov    eax,ds:0xc5ad4e77
  41e14a:	push   ebp
  41e14b:	lock inc ecx
  41e14d:	fiadd  DWORD PTR ds:0x493e2b65
  41e153:	fnsave [eax+0x67ea9819]
  41e159:	mov    BYTE PTR [edx],cl
  41e15b:	inc    ecx
  41e15c:	jbe    0x41e14c
  41e15e:	inc    edi
  41e15f:	pop    edi
  41e160:	push   esi
  41e161:	and    eax,0xf5a22dd8
  41e166:	(bad)  
  41e167:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e168:	iret   
  41e169:	or     al,0x55
  41e16c:	frstor [esi-0x2b16fdd9]
  41e172:	inc    ebx
  41e173:	xchg   edi,eax
  41e174:	pop    edx
  41e175:	xchg   esi,eax
  41e176:	gs pop ebx
  41e178:	mov    edx,0x90c50865
  41e17d:	and    al,0x89
  41e17f:	scas   al,BYTE PTR es:[edi]
  41e180:	dec    ebp
  41e181:	mov    ch,0xa0
  41e183:	inc    edi
  41e184:	sbb    bl,BYTE PTR [ebx-0x4a]
  41e187:	icebp  
  41e188:	jne    0x41e1bc
  41e18a:	cld    
  41e18b:	lods   eax,DWORD PTR ds:[esi]
  41e18c:	xchg   ecx,ebx
  41e18e:	imul   edx,DWORD PTR [ebp+ebp*4-0x60],0xba843914
  41e196:	adc    BYTE PTR [ecx+0x43575fae],al
  41e19c:	cli    
  41e19d:	push   es
  41e19e:	shl    dh,1
  41e1a0:	pushf  
  41e1a1:	in     al,0x52
  41e1a3:	sbb    cl,BYTE PTR [edi+0x358c7c75]
  41e1a9:	mov    ecx,DWORD PTR [ecx+0x52]
  41e1ac:	jmp    0x41e22c
  41e1ae:	mov    BYTE PTR [esi],bh
  41e1b0:	(bad)  
  41e1b1:	std    
  41e1b2:	data16 (bad) 
  41e1b5:	(bad)  
  41e1b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1b7:	lds    ebp,FWORD PTR [edx-0x20a7af86]
  41e1bd:	jmp    eax
  41e1bf:	cmp    ax,0x84cc
  41e1c3:	inc    ebx
  41e1c4:	sar    BYTE PTR [edx+edi*4-0x3c],cl
  41e1c8:	inc    esp
  41e1c9:	cmp    BYTE PTR [edi+0x54],ah
  41e1cc:	(bad)  
  41e1cd:	or     al,0x7
  41e1cf:	add    al,0xbf
  41e1d1:	jmp    0xe0ebf79d
  41e1d6:	repnz push ebx
  41e1d8:	into   
  41e1d9:	cmp    eax,0xb6edfa96
  41e1de:	add    dh,0x1a
  41e1e1:	xor    ebp,esi
  41e1e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1e4:	and    eax,0xf5ee08fa
  41e1e9:	fld    st(7)
  41e1eb:	mov    al,0x31
  41e1ed:	jns    0x41e177
  41e1ef:	pop    es
  41e1f0:	pop    ebp
  41e1f1:	mov    edi,0xcfbca1ab
  41e1f6:	dec    eax
  41e1f7:	stos   BYTE PTR es:[edi],al
  41e1f8:	push   edi
  41e1f9:	lods   al,BYTE PTR ds:[esi]
  41e1fa:	pop    ss
  41e1fb:	and    eax,0x488d183a
  41e200:	popf   
  41e201:	jl     0x41e27a
  41e203:	sbb    DWORD PTR [edi],ecx
  41e205:	mov    ebp,0x9db52bab
  41e20a:	enter  0x1a3d,0x22
  41e20e:	mov    esi,0x15cc0bca
  41e213:	lds    eax,FWORD PTR [edi-0x2d]
  41e216:	push   esi
  41e217:	in     eax,dx
  41e218:	or     bl,dl
  41e21a:	pop    ds
  41e21b:	(bad)  [edi-0x60]
  41e21e:	and    eax,0x9b28c2a9
  41e223:	add    esi,DWORD PTR [esi]
  41e225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e226:	fcom   DWORD PTR [edx+ebx*8-0x14b1f2a]
  41e22d:	jge    0x41e249
  41e22f:	das    
  41e230:	arpl   WORD PTR [edx+eax*2+0x67],ax
  41e234:	push   ss
  41e235:	jnp    0x41e268
  41e237:	into   
  41e238:	sbb    esi,DWORD PTR [ecx]
  41e23a:	sbb    DWORD PTR [edx],edi
  41e23c:	fld    QWORD PTR [ecx]
  41e23e:	test   BYTE PTR [eax+0x2],0xb2
  41e242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e243:	xor    BYTE PTR ds:0xd866feb8,bl
  41e249:	mov    ds:0x280884bf,al
  41e24e:	cmp    BYTE PTR [eax-0x15],ch
  41e251:	stos   DWORD PTR es:[edi],eax
  41e252:	dec    eax
  41e253:	sub    ebx,DWORD PTR [ecx+0x56]
  41e256:	popa   
  41e257:	(bad)  
  41e258:	fist   DWORD PTR [ebp+0x24]
  41e25b:	addr16 iret 
  41e25d:	mov    al,0xca
  41e25f:	and    ebx,DWORD PTR [edx]
  41e261:	rdtsc  
  41e263:	pop    edx
  41e264:	fwait
  41e265:	sti    
  41e266:	mov    esp,0x19da0756
  41e26b:	pop    ecx
  41e26c:	pop    ds
  41e26d:	pop    eax
  41e26e:	or     ch,cl
  41e270:	mov    cl,al
  41e272:	push   ebp
  41e273:	addr16 mov cl,0x53
  41e276:	dec    eax
  41e277:	ins    DWORD PTR es:[edi],dx
  41e278:	gs icebp 
  41e27a:	loope  0x41e23e
  41e27c:	aam    0x8b
  41e27e:	popa   
  41e27f:	popw   es
  41e281:	add    al,0xbf
  41e283:	test   al,0x1a
  41e285:	push   ebp
  41e286:	(bad)  [ecx+0x18]
  41e289:	xchg   DWORD PTR [esi],edi
  41e28b:	xchg   DWORD PTR [eax-0x2b],eax
  41e28e:	dec    ebx
  41e28f:	das    
  41e290:	dec    edi
  41e291:	ficomp DWORD PTR [edx+ebx*8+0x5a]
  41e295:	sub    BYTE PTR [edx+0x6fcd4c2c],0xdc
  41e29c:	sbb    ch,BYTE PTR [esi+0x76]
  41e29f:	addr16 jg 0x41e23d
  41e2a2:	mov    ecx,0xc5e4c259
  41e2a7:	jge    0x41e313
  41e2a9:	and    al,0xdf
  41e2ab:	shr    dh,cl
  41e2ad:	(bad)  
  41e2ae:	retf   
  41e2af:	add    al,0xd2
  41e2b1:	or     BYTE PTR ds:[esi+0x33487e38],dl
  41e2b8:	sub    eax,0xfc2516b
  41e2bd:	fidivr DWORD PTR [esi+edx*1+0x62b7e75c]
  41e2c4:	adc    edx,DWORD PTR [ebx]
  41e2c6:	cld    
  41e2c7:	and    eax,0x5248d65f
  41e2cc:	mov    dh,0xe2
  41e2ce:	xchg   edi,eax
  41e2cf:	jne    0x41e252
  41e2d1:	sub    al,BYTE PTR [esi+eiz*2-0xcc21902]
  41e2d8:	sbb    eax,0xf1457378
  41e2dd:	mov    ecx,0x7c5e01db
  41e2e2:	pop    ss
  41e2e3:	pop    es
  41e2e4:	mov    bl,BYTE PTR [edx]
  41e2e6:	jno    0x41e355
  41e2e8:	cdq    
  41e2e9:	stos   BYTE PTR es:[edi],al
  41e2ea:	clc    
  41e2eb:	div    eax
  41e2ed:	or     DWORD PTR [edi],eax
  41e2ef:	sbb    BYTE PTR [edx],bl
  41e2f1:	dec    edi
  41e2f2:	rcl    cl,1
  41e2f4:	jg     0x41e2e5
  41e2f6:	fnstsw WORD PTR [ecx]
  41e2f8:	and    ecx,ebx
  41e2fa:	push   edi
  41e2fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e2fc:	fadd   QWORD PTR [edi+0x7334d0ac]
  41e302:	push   esp
  41e303:	adc    eax,0x87815c3c
  41e308:	call   esi
  41e30a:	out    dx,eax
  41e30b:	add    ecx,DWORD PTR [ecx-0x7aa98cfd]
  41e311:	or     edx,DWORD PTR [edx+0x66]
  41e314:	lock adc ch,BYTE PTR fs:[ebx+0x2bfd1632]
  41e31c:	cmp    BYTE PTR [ebp-0x5a],0x37
  41e320:	or     eax,0xea666815
  41e325:	mov    ah,0x51
  41e327:	inc    esp
  41e328:	sbb    dl,BYTE PTR [edi]
  41e32a:	sub    ecx,DWORD PTR [ebp+ebx*1-0x7d4b14a7]
  41e331:	(bad)  [edx+ebx*2+0x564ce6a6]
  41e338:	push   es
  41e339:	jmp    0x90c2:0x401d004b
  41e340:	xacquire xchg BYTE PTR ss:[eax+0x2684df45],al
  41e348:	jb     0x41e2ce
  41e34a:	xor    DWORD PTR [edi-0x61],esp
  41e34d:	stc    
  41e34e:	ins    BYTE PTR es:[edi],dx
  41e34f:	stc    
  41e350:	sbb    bh,BYTE PTR [ebx+0x3c8fd1c4]
  41e356:	lea    ebp,[ecx]
  41e358:	and    eax,0xa6e96457
  41e35d:	jno    0x41e348
  41e35f:	inc    cx
  41e361:	jl     0x41e348
  41e363:	dec    esi
  41e364:	sbb    esp,DWORD PTR [esi+0x3e]
  41e367:	aas    
  41e368:	jmp    FWORD PTR [edi-0x47]
  41e36b:	pop    edx
  41e36c:	out    dx,al
  41e36d:	(bad)  
  41e36f:	add    bl,bh
  41e371:	fldenv [edx]
  41e373:	push   edi
  41e374:	mov    esi,0xdfac7c64
  41e379:	in     eax,dx
  41e37a:	xlat   BYTE PTR ds:[ebx]
  41e37b:	push   edi
  41e37c:	xor    BYTE PTR [eax+ecx*2+0x6d],0x39
  41e381:	dec    edx
  41e382:	cmp    BYTE PTR [edx],dl
  41e384:	inc    edi
  41e385:	div    DWORD PTR [edx+0x66]
  41e388:	mov    DWORD PTR [esi+eax*8-0x555e5fe],esi
  41e38f:	dec    edx
  41e390:	lea    ebp,[edi-0x260c7fc5]
  41e396:	ds mov ch,0x75
  41e399:	fs xchg ecx,eax
  41e39b:	lods   al,BYTE PTR ds:[esi]
  41e39c:	cli    
  41e39d:	in     eax,0x86
  41e39f:	int    0x5b
  41e3a1:	int3   
  41e3a2:	dec    eax
  41e3a3:	je     0x41e392
  41e3a5:	dec    edx
  41e3a6:	sar    ebx,0xc0
  41e3a9:	mov    gs,eax
  41e3ab:	data16 aas 
  41e3ad:	sub    al,0x5a
  41e3af:	pop    edi
  41e3b0:	sbb    dh,BYTE PTR [edi-0x60ca1b88]
  41e3b6:	ins    BYTE PTR es:[edi],dx
  41e3b7:	push   ecx
  41e3b8:	test   eax,0x17cdd7d9
  41e3bd:	sahf   
  41e3be:	add    ah,BYTE PTR [edi]
  41e3c0:	cmp    al,0x55
  41e3c2:	outs   dx,BYTE PTR ds:[esi]
  41e3c3:	xchg   ecx,eax
  41e3c4:	loope  0x41e43a
  41e3c6:	dec    edx
  41e3c7:	daa    
  41e3c8:	push   0xc4525c99
  41e3cd:	push   eax
  41e3ce:	in     al,dx
  41e3cf:	(bad)  
  41e3d0:	pusha  
  41e3d1:	pop    ebx
  41e3d2:	mov    al,0x66
  41e3d4:	ins    DWORD PTR es:[edi],dx
  41e3d5:	push   0xffffffba
  41e3d7:	test   eax,0x85dbc21a
  41e3dc:	(bad)  
  41e3dd:	popf   
  41e3de:	push   eax
  41e3df:	push   ss
  41e3e0:	aam    0xdb
  41e3e2:	in     eax,dx
  41e3e3:	xchg   edi,eax
  41e3e4:	xor    BYTE PTR [ecx+0x14],dh
  41e3e7:	rcr    BYTE PTR [edx-0x2a473482],0xf9
  41e3ee:	pop    es
  41e3ef:	pop    ebp
  41e3f0:	(bad)  
  41e3f1:	mov    ecx,0xd03ebd48
  41e3f6:	std    
  41e3f7:	push   edi
  41e3f8:	mul    BYTE PTR [esi-0x80]
  41e3fb:	imul   edi,DWORD PTR [eax+0x5c1cfacd],0x1abc20d8
  41e405:	ins    BYTE PTR es:[edi],dx
  41e406:	xor    al,0x11
  41e408:	and    dh,cl
  41e40a:	jge    0x41e484
  41e40c:	add    eax,0xe4db69e8
  41e411:	or     esp,ecx
  41e413:	call   0x2caa8ff4
  41e418:	mov    dl,0x1e
  41e41a:	or     DWORD PTR [eax+eiz*1+0x6e867463],edi
  41e421:	sub    DWORD PTR [ecx-0x4e],ecx
  41e424:	jmp    0x1bb8:0x7799d447
  41e42b:	push   0xffffffbc
  41e42d:	cs sbb al,0x0
  41e430:	inc    edx
  41e431:	xchg   edi,eax
  41e432:	rol    BYTE PTR [esi-0x1f3eb4e6],1
  41e438:	aaa    
  41e439:	dec    esp
  41e43a:	mov    ecx,0x8971b333
  41e43f:	retf   0x8018
  41e442:	sbb    BYTE PTR [edx+0x5e],ch
  41e445:	sub    al,0xc0
  41e447:	xor    al,0x96
  41e449:	retf   
  41e44a:	sbb    ch,ch
  41e44c:	es cli 
  41e44e:	inc    edi
  41e44f:	and    al,0x57
  41e451:	scas   al,BYTE PTR es:[edi]
  41e452:	sub    eax,0xe7a69bce
  41e457:	or     bl,0x66
  41e45a:	out    0xe6,al
  41e45c:	inc    esp
  41e45d:	push   ebp
  41e45e:	mov    edx,0x488685de
  41e463:	xchg   BYTE PTR [edi-0x2db7df4e],al
  41e469:	fldcw  WORD PTR [edi+0x775e4fe2]
  41e46f:	push   esi
  41e470:	mov    eax,ds:0xa6822cf3
  41e475:	or     eax,0xb3d69048
  41e47a:	jbe    0x41e46d
  41e47c:	aaa    
  41e47d:	cmc    
  41e47e:	mov    cl,0xdf
  41e480:	sub    ebx,DWORD PTR [ecx+0x5d]
  41e483:	pop    ecx
  41e484:	add    eax,0x1ab5693b
  41e489:	test   BYTE PTR [ebp+0x3b],ch
  41e48c:	mov    ds:0x7668419a,al
  41e491:	sbb    BYTE PTR [ebx],ah
  41e493:	mov    esi,0x2aabd1a
  41e498:	add    BYTE PTR [eax],dl
  41e49a:	adc    al,0x59
  41e49c:	sbb    ah,BYTE PTR ds:0x690a7752
  41e4a2:	pop    ebx
  41e4a3:	retf   0x51f3
  41e4a6:	(bad)  
  41e4a7:	pop    edx
  41e4a8:	mov    ds:0xe366d1c3,al
  41e4ad:	xchg   esi,eax
  41e4ae:	xchg   ebx,eax
  41e4af:	and    DWORD PTR [edx],ebx
  41e4b1:	dec    edi
  41e4b2:	lods   eax,DWORD PTR ds:[esi]
  41e4b3:	test   eax,0x9c62e63c
  41e4b8:	ja     0x41e493
  41e4ba:	leave  
  41e4bb:	cmp    eax,0xa901c50a
  41e4c0:	xchg   esp,eax
  41e4c1:	jmp    0x2948:0x241019ca
  41e4c8:	call   0x5d4f214b
  41e4cd:	mov    al,ds:0x219966b9
  41e4d2:	clc    
  41e4d3:	sbb    BYTE PTR [ecx],ch
  41e4d5:	lods   eax,DWORD PTR ds:[esi]
  41e4d6:	mov    dh,0xb3
  41e4d8:	fidivr WORD PTR [ecx]
  41e4da:	pop    ecx
  41e4db:	loope  0x41e512
  41e4dd:	push   ecx
  41e4de:	pop    ebp
  41e4df:	je     0x41e507
  41e4e1:	ficom  WORD PTR [ebp-0x4f8a78a6]
  41e4e7:	leave  
  41e4e8:	out    0x1,al
  41e4ea:	sub    al,0xe7
  41e4ec:	pop    ecx
  41e4ed:	push   0x6591bdf3
  41e4f2:	lea    esi,[edi+esi*2-0x37]
  41e4f6:	je     0x41e53e
  41e4f8:	pop    eax
  41e4f9:	fldz   
  41e4fb:	and    al,0x6f
  41e4fd:	scas   eax,DWORD PTR es:[edi]
  41e4fe:	les    ebx,FWORD PTR [edi-0x46d48367]
  41e504:	xchg   edi,eax
  41e505:	sub    eax,0xb8e3b248
  41e50a:	js     0x41e50f
  41e50c:	xor    dl,BYTE PTR [edx+edx*8-0x4cba639a]
  41e513:	mov    al,ds:0x5d63981a
  41e518:	jmp    0x41e580
  41e51a:	sub    DWORD PTR [esi],esi
  41e51c:	fcom   QWORD PTR [edi]
  41e51e:	and    bh,al
  41e520:	call   0xa87a:0x9a494016
  41e527:	lds    ebx,FWORD PTR [edx]
  41e529:	pop    es
  41e52a:	xchg   ecx,eax
  41e52b:	test   DWORD PTR [edx+esi*1-0x243e9b73],ebx
  41e532:	xchg   DWORD PTR [ebp-0x5f],eax
  41e535:	pop    ds
  41e536:	sbb    dl,0xda
  41e539:	mov    ebp,0xaed2bb05
  41e53e:	fst    st(5)
  41e540:	xor    DWORD PTR [ebx+0x48],ebp
  41e543:	push   ds
  41e544:	mov    cl,0x72
  41e546:	jne    0x41e5a4
  41e548:	loopne 0x41e4eb
  41e54a:	jmp    0x929cfcb5
  41e54f:	mov    BYTE PTR [ebx],bl
  41e551:	mov    eax,ds
  41e553:	hlt    
  41e554:	jge    0x41e530
  41e556:	cmp    ecx,DWORD PTR [ebp+0x32f974f6]
  41e55c:	xor    edi,DWORD PTR [ebx]
  41e55e:	sbb    eax,0x9cbd9095
  41e563:	data16 lahf 
  41e565:	sbb    BYTE PTR [ebp+0x5b],ch
  41e568:	outs   dx,BYTE PTR ds:[esi]
  41e569:	in     eax,0x47
  41e56b:	inc    edi
  41e56c:	dec    esi
  41e56d:	test   DWORD PTR [esi+ebp*8+0x2c],esi
  41e571:	fild   WORD PTR ds:0xd4028367
  41e577:	mov    ebp,0xc84a961a
  41e57c:	add    BYTE PTR [ebp+0x4c],cl
  41e57f:	inc    edx
  41e580:	jnp    0x41e55b
  41e582:	popf   
  41e583:	pop    ss
  41e584:	push   cs
  41e585:	cmp    DWORD PTR [esi+0x37],ebx
  41e588:	das    
  41e589:	ret    
  41e58a:	xor    eax,0x76cf6a39
  41e58f:	scas   eax,DWORD PTR es:[edi]
  41e590:	inc    edx
  41e591:	cmc    
  41e592:	inc    edi
  41e593:	jae    0x41e595
  41e595:	ficomp DWORD PTR [edx]
  41e597:	ja     0x41e56c
  41e599:	xor    eax,0x1409619d
  41e59e:	inc    ebp
  41e59f:	xchg   edi,eax
  41e5a0:	sbb    ecx,DWORD PTR [ebp+0x48]
  41e5a3:	fisub  WORD PTR [eax]
  41e5a5:	ins    BYTE PTR es:[edi],dx
  41e5a6:	mov    ebp,0xa8301935
  41e5ab:	pop    bp
  41e5ad:	sbb    eax,DWORD PTR [ecx+0x3469590c]
  41e5b3:	cmp    ebp,edx
  41e5b5:	pop    edx
  41e5b6:	out    0xa5,eax
  41e5b8:	ins    BYTE PTR es:[edi],dx
  41e5b9:	fadd   DWORD PTR [eax+ecx*2]
  41e5bc:	mov    ch,BYTE PTR [esi+0x3b]
  41e5bf:	mov    ebp,0x74d401b0
  41e5c4:	ficomp DWORD PTR [esi]
  41e5c6:	cmp    BYTE PTR [edi+0x35],ch
  41e5c9:	mov    ah,0xd5
  41e5cb:	push   es
  41e5cc:	push   edx
  41e5ce:	arpl   WORD PTR [eax],cx
  41e5d0:	call   0x8b6:0x4f600fb2
  41e5d7:	dec    eax
  41e5d8:	pop    esi
  41e5d9:	outs   dx,DWORD PTR ds:[esi]
  41e5da:	mov    esp,DWORD PTR [esi+0x7b]
  41e5dd:	fwait
  41e5de:	xchg   edx,eax
  41e5df:	or     eax,0xb693751b
  41e5e4:	push   esp
  41e5e5:	inc    eax
  41e5e6:	lds    ebx,FWORD PTR [eax-0x44edcbfe]
  41e5ec:	cmp    cl,0x9e
  41e5ef:	pop    bx
  41e5f1:	dec    ebx
  41e5f2:	sub    ebp,DWORD PTR ds:0x13465a1a
  41e5f8:	jb     0x41e5bd
  41e5fa:	mov    eax,0x2cd98670
  41e5ff:	mov    ah,0x60
  41e601:	mov    edx,0xec7c6306
  41e606:	in     al,dx
  41e607:	pop    ebp
  41e608:	cmp    ch,dh
  41e60a:	jne    0x41e61a
  41e60c:	jg     0x41e662
  41e60e:	dec    eax
  41e60f:	inc    eax
  41e610:	fcomp  st(4)
  41e612:	sbb    esi,ebx
  41e614:	inc    ebx
  41e615:	dec    edx
  41e616:	sub    edx,edi
  41e618:	stos   BYTE PTR es:[edi],al
  41e619:	dec    edi
  41e61a:	test   bl,bh
  41e61c:	push   edi
  41e61d:	xchg   edx,eax
  41e61e:	inc    esp
  41e61f:	dec    ebx
  41e620:	fwait
  41e621:	mov    ch,0xa6
  41e623:	push   0xa8ae1935
  41e628:	jno    0x41e5ed
  41e62a:	ret    0xbc77
  41e62d:	xor    al,0xc2
  41e62f:	data16 in al,0xb2
  41e632:	pop    ss
  41e633:	add    DWORD PTR [edx],ebx
  41e635:	sbb    DWORD PTR [ebp+0x2891c36],0xcfd9a589
  41e63f:	jo     0x41e6a1
  41e641:	sbb    eax,0xa967a553
  41e646:	jne    0x41e692
  41e648:	fsub   QWORD PTR [eax+0x537abf4f]
  41e64e:	push   DWORD PTR [ebx+ebx*4+0x4ab8fbe0]
  41e655:	shr    DWORD PTR ds:[edx-0x29],cl
  41e659:	fldcw  WORD PTR [ebx]
  41e65b:	jno    0x41e6ad
  41e65d:	out    0x64,al
  41e65f:	mov    edx,0xa1d42966
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e666:	enter  0x4566,0xa5
  41e66a:	jno    0x41e5ee
  41e66c:	mov    edi,0x3e85d33f
  41e671:	jp     0x41e6c2
  41e673:	es push edi
  41e675:	stos   DWORD PTR es:[edi],eax
  41e676:	(bad)  
  41e677:	cmp    ebx,DWORD PTR [ecx+0x1c]
  41e67a:	dec    eax
  41e67b:	mov    ecx,0x91e60aa8
  41e680:	iret   
  41e681:	xor    DWORD PTR [ebx+0x66],edx
  41e684:	push   ss
  41e685:	adc    eax,0x51a5196
  41e68a:	test   BYTE PTR [ecx],bl
  41e68c:	rcl    BYTE PTR [ebx-0x79],1
  41e68f:	popf   
  41e690:	cmp    ch,ah
  41e692:	mov    bl,0x32
  41e694:	(bad)  
  41e695:	fldcw  WORD PTR [esi]
  41e697:	dec    edi
  41e698:	(bad)  
  41e699:	mov    al,0x86
  41e69b:	xor    eax,0xbe226f1a
  41e6a0:	xlat   BYTE PTR ds:[ebx]
  41e6a1:	dec    ebx
  41e6a2:	test   DWORD PTR [edx-0x51],eax
  41e6a5:	out    0xc5,eax
  41e6a7:	imul   eax,DWORD PTR [ebx+0x48dfd7b],0x1a8027fa
  41e6b1:	retf   
  41e6b2:	and    ecx,esp
  41e6b4:	ja     0x41e6c6
  41e6b6:	xchg   edx,eax
  41e6b7:	and    ah,al
  41e6b9:	fnstenv [ebp+0x18]
  41e6bc:	test   cl,0x5f
  41e6bf:	pop    es
  41e6c0:	pop    ebp
  41e6c1:	cmp    al,0x5c
  41e6c3:	pop    ecx
  41e6c4:	sbb    bh,BYTE PTR [ebx]
  41e6c6:	xor    cl,BYTE PTR [edi-0x77]
  41e6c9:	ja     0x41e737
  41e6cb:	pop    esp
  41e6cc:	inc    esp
  41e6cd:	and    eax,0x1758f795
  41e6d2:	retf   0x382f
  41e6d5:	add    DWORD PTR [edi-0x6b],ecx
  41e6d8:	pop    es
  41e6d9:	and    al,0xf0
  41e6db:	sbb    di,sp
  41e6de:	loop   0x41e6f6
  41e6e0:	mov    bh,BYTE PTR cs:[edi-0x9061582]
  41e6e7:	pop    esp
  41e6e8:	sub    DWORD PTR [edi+0x4a],esi
  41e6eb:	je     0x41e6a7
  41e6ed:	mov    ds:0x8e9b702c,ax
  41e6f3:	add    BYTE PTR [ebx-0x1ab4b7dc],cl
  41e6f9:	sub    edi,DWORD PTR [ecx]
  41e6fb:	jl     0x41e690
  41e6fd:	icebp  
  41e6fe:	push   0xbf08f569
  41e703:	pcmpgtb mm2,QWORD PTR [eax+esi*1+0x482c4fae]
  41e70b:	in     al,0xdf
  41e70d:	pop    ecx
  41e70e:	test   eax,0x6796f010
  41e713:	addr16 clc 
  41e715:	pop    ebp
  41e716:	arpl   WORD PTR [ebx+0x46c0672e],cx
  41e71c:	(bad)  
  41e71d:	out    0x47,eax
  41e71f:	call   0xfe391573
  41e724:	push   0x747da124
  41e729:	test   DWORD PTR [eax],esi
  41e72b:	addr16 pop ss
  41e72d:	push   cs
  41e72e:	mov    ebp,0x670af1b8
  41e733:	jno    0x41e744
  41e735:	icebp  
  41e736:	pop    es
  41e737:	xchg   ebp,eax
  41e738:	cmc    
  41e739:	cmc    
  41e73a:	mov    eax,0x3e9935bc
  41e73f:	pop    ss
  41e740:	xor    al,0xc8
  41e742:	lods   eax,DWORD PTR ds:[esi]
  41e743:	imul   ebx,DWORD PTR [ebx],0xe
  41e746:	repz fisub DWORD PTR [ecx+0x27]
  41e74a:	pop    edx
  41e74b:	mov    ecx,?
  41e74d:	xchg   ecx,eax
  41e74e:	or     BYTE PTR [edi+ecx*1],ah
  41e751:	call   0xd072258e
  41e756:	adc    edx,DWORD PTR [edx+ecx*1+0x23]
  41e75a:	mov    ah,0x9
  41e75c:	aaa    
  41e75d:	gs push edi
  41e75f:	(bad)  
  41e761:	loopne 0x41e730
  41e763:	es hlt 
  41e765:	fst    DWORD PTR [esi]
  41e767:	jecxz  0x41e78d
  41e769:	pop    ds
  41e76a:	or     dh,BYTE PTR [eax+0x53]
  41e76d:	cmp    eax,0x5c01d9f4
  41e772:	dec    eax
  41e773:	(bad)  
  41e774:	cmp    eax,0x4592a2b5
  41e779:	dec    edi
  41e77a:	sbb    ah,BYTE PTR [edi+0x79]
  41e77d:	and    BYTE PTR [edi],bh
  41e77f:	sub    bl,BYTE PTR ds:0x43005f6f
  41e785:	inc    ebx
  41e786:	xlat   BYTE PTR ds:[ebx]
  41e787:	pop    ecx
  41e788:	xor    al,0xfd
  41e78a:	push   0x34d9ef56
  41e78f:	dec    ecx
  41e790:	out    0x33,eax
  41e792:	pop    ss
  41e793:	lea    esi,[eax-0x24]
  41e796:	and    al,0x82
  41e798:	mov    ah,ah
  41e79a:	inc    edi
  41e79b:	mov    ds:0x94706979,eax
  41e7a0:	jmp    0xfec48308
  41e7a5:	xor    BYTE PTR [edi],al
  41e7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e7a8:	arpl   WORD PTR [ebx-0xa1888f3],sp
  41e7ae:	inc    edi
  41e7af:	mov    dh,0xae
  41e7b1:	(bad)  
  41e7b2:	je     0x41e813
  41e7b4:	repnz call 0x71c8:0xa17ca4c7
  41e7bc:	std    
  41e7bd:	xchg   esi,eax
  41e7be:	dec    esi
  41e7bf:	xor    DWORD PTR [esp+esi*8],0xffffffa7
  41e7c3:	xchg   ecx,eax
  41e7c4:	jge    0x41e79f
  41e7c6:	pop    edx
  41e7c7:	pop    ds
  41e7c8:	test   eax,0x85e116fe
  41e7cd:	jmp    0x41e839
  41e7cf:	and    ch,BYTE PTR [eax+0x11db4898]
  41e7d5:	and    bl,al
  41e7d7:	sub    ch,dh
  41e7d9:	pop    edx
  41e7da:	sbb    al,0x67
  41e7dc:	inc    eax
  41e7dd:	and    al,0x4a
  41e7df:	test   BYTE PTR [edx],bl
  41e7e1:	(bad)  
  41e7e2:	mov    ah,0x15
  41e7e4:	push   cs
  41e7e5:	not    ch
  41e7e7:	and    BYTE PTR [ecx],ch
  41e7e9:	ficom  DWORD PTR [ebp-0x3531a05b]
  41e7ef:	fild   DWORD PTR [ecx+0x2138f809]
  41e7f5:	sahf   
  41e7f6:	mov    eax,ds:0x376b88c4
  41e7fb:	mov    cl,0x6f
  41e7fd:	push   ecx
  41e7fe:	dec    ecx
  41e7ff:	lea    eax,[ebp-0x71]
  41e802:	daa    
  41e803:	out    0x16,eax
  41e805:	jb     0x41e7e6
  41e807:	dec    ebx
  41e808:	mov    eax,ds:0x236a99c6
  41e80d:	cdq    
  41e80e:	loop   0x41e852
  41e810:	dec    esi
  41e811:	repnz stc 
  41e813:	and    al,0xfb
  41e815:	pop    esp
  41e816:	dec    eax
  41e817:	and    DWORD PTR [edi],edx
  41e819:	xchg   edi,eax
  41e81a:	retf   0xf32
  41e81d:	push   es
  41e81e:	fsub   QWORD PTR [esi-0x6d]
  41e821:	jae    0x41e7b9
  41e823:	mov    bl,BYTE PTR [edx]
  41e825:	push   ss
  41e826:	pop    ebx
  41e827:	ret    
  41e828:	add    al,0x44
  41e82a:	dec    ebp
  41e82b:	loop   0x41e820
  41e82d:	fldenv [esi-0xbccb8eb]
  41e833:	mov    ebp,0x1cb39d1e
  41e838:	push   esi
  41e839:	xchg   BYTE PTR [eax-0x54],cl
  41e83c:	psubw  mm2,mm3
  41e83f:	in     eax,0x0
  41e841:	(bad)  
  41e842:	clc    
  41e843:	jne    0x41e840
  41e845:	lods   eax,DWORD PTR ds:[esi]
  41e846:	das    
  41e847:	imul   ebp,DWORD PTR [eax-0x2a],0x5303970f
  41e84e:	ja     0x41e892
  41e850:	jge    0x41e89d
  41e852:	dec    eax
  41e853:	dec    edx
  41e854:	sub    eax,0x2a9829a9
  41e859:	sub    DWORD PTR [edx+0x66],esi
  41e85c:	sbb    eax,DWORD PTR [ebp+ecx*1-0x7e]
  41e860:	sbb    ch,BYTE PTR [esi-0x48]
  41e863:	sbb    ebp,DWORD PTR [edi-0x1f]
  41e866:	and    DWORD PTR [edi-0x17],ebx
  41e869:	loop   0x41e8c9
  41e86b:	popf   
  41e86c:	clc    
  41e86d:	adc    ch,ch
  41e86f:	xlat   BYTE PTR ds:[ebx]
  41e871:	push   esi
  41e872:	enter  0x1a7b,0xc3
  41e876:	int3   
  41e877:	push   ss
  41e878:	(bad)  
  41e879:	fst    QWORD PTR [edi+0x45]
  41e87c:	push   ebp
  41e87d:	fstp   DWORD PTR [edx+0x4a]
  41e880:	std    
  41e881:	mov    eax,ds:0xb627cf41
  41e886:	data16 (bad) 
  41e888:	mov    bl,0xa
  41e88a:	push   esi
  41e88b:	(bad)  
  41e88d:	pop    eax
  41e88e:	pop    ebp
  41e88f:	es mov ebx,ecx
  41e892:	aaa    
  41e893:	(bad)  
  41e894:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e895:	outs   dx,DWORD PTR ds:[esi]
  41e896:	add    BYTE PTR [esi],ah
  41e898:	mov    ecx,0x1ac1984b
  41e89d:	jl     0x41e8d3
  41e89f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8a0:	scas   eax,DWORD PTR es:[edi]
  41e8a1:	jmp    0xe7968c98
  41e8a6:	outs   dx,BYTE PTR ds:[esi]
  41e8a7:	pop    eax
  41e8a8:	lahf   
  41e8a9:	or     al,0x97
  41e8ab:	sub    al,0x56
  41e8ad:	push   0x48
  41e8af:	pop    es
  41e8b0:	sbb    bh,ch
  41e8b2:	push   esp
  41e8b3:	adc    ah,BYTE PTR [ebx-0x62d85d50]
  41e8b9:	fst    DWORD PTR [ebx]
  41e8bb:	or     al,0x4e
  41e8bd:	out    0x4c,eax
  41e8bf:	sar    BYTE PTR [edx],1
  41e8c1:	mov    bl,0x18
  41e8c3:	dec    esp
  41e8c4:	push   0x55c45bbb
  41e8c9:	out    0x27,eax
  41e8cb:	sub    al,0xb7
  41e8cd:	stos   BYTE PTR es:[edi],al
  41e8ce:	lods   eax,DWORD PTR ds:[esi]
  41e8cf:	lock ficom WORD PTR [eax+ebp*8+0x25]
  41e8d4:	inc    edi
  41e8d5:	ror    BYTE PTR [ecx-0xb],cl
  41e8d8:	xchg   ecx,eax
  41e8d9:	mov    bh,0xe8
  41e8db:	out    0x54,al
  41e8dd:	icebp  
  41e8de:	daa    
  41e8df:	jne    0x41e88f
  41e8e1:	scas   eax,DWORD PTR es:[edi]
  41e8e2:	xor    DWORD PTR [eax+0x1a],edi
  41e8e5:	mov    eax,0xab6e832
  41e8ea:	sub    esp,eax
  41e8ec:	out    dx,eax
  41e8ed:	fnop   
  41e8ef:	pop    ebp
  41e8f0:	pop    esp
  41e8f1:	fsub   QWORD PTR [edi]
  41e8f3:	adc    ch,al
  41e8f5:	cmp    al,0x21
  41e8f7:	push   esp
  41e8f8:	add    eax,0x21b966ac
  41e8fd:	mov    esp,0xd963bd48
  41e902:	into   
  41e903:	mov    ds:0x5869ee12,eax
  41e908:	xlat   BYTE PTR ds:[ebx]
  41e909:	aas    
  41e90a:	sbb    BYTE PTR ds:0xb34a6b23,dh
  41e910:	pop    ebx
  41e911:	cmp    ebp,ecx
  41e913:	sub    BYTE PTR [eax-0x27],0x79
  41e917:	(bad)  
  41e918:	adc    BYTE PTR [eax],0xba
  41e91b:	pop    esp
  41e91c:	mov    ebx,0x1be1915f
  41e921:	mov    esp,0x68e258e8
  41e927:	das    
  41e928:	repnz add cl,dh
  41e92b:	outs   dx,BYTE PTR ds:[esi]
  41e92c:	int3   
  41e92d:	fsubr  QWORD PTR [ecx]
  41e92f:	loop   0x41e904
  41e931:	imul   BYTE PTR [ecx+0x38a6e207]
  41e937:	loop   0x41e95a
  41e939:	and    BYTE PTR [eax+0x1f30538f],ch
  41e93f:	rcr    dh,0x5a
  41e942:	sub    dh,al
  41e944:	test   eax,0xb3b631d5
  41e949:	xlat   BYTE PTR ds:[ebx]
  41e94a:	icebp  
  41e94b:	imul   eax,DWORD PTR [eax+0x52138aa9],0x8c95edc9
  41e955:	push   ds
  41e956:	xor    eax,0xe3b37867
  41e95b:	xor    ebx,DWORD PTR [edx]
  41e95d:	std    
  41e95e:	mov    dl,0x2c
  41e960:	out    dx,eax
  41e961:	enter  0x625d,0x23
  41e965:	adc    bh,BYTE PTR [ebx+ebx*1+0x5718d69a]
  41e96c:	loope  0x41e9a2
  41e96e:	popa   
  41e96f:	push   0x36
  41e971:	mov    ecx,0x479aaa15
  41e976:	es mov esp,0xa34e2655
  41e97c:	in     al,dx
  41e97d:	(bad)  
  41e97f:	fnstenv [ebp+0x63]
  41e982:	lock adc eax,esi
  41e985:	retf   0xae00
  41e988:	inc    ebx
  41e989:	pop    ebx
  41e98a:	dec    ecx
  41e98b:	je     0x41e936
  41e98d:	mov    ch,0x8d
  41e98f:	xor    DWORD PTR [eax+0x11],esi
  41e992:	cmp    al,0x4d
  41e994:	call   0x8f88:0x873308ec
  41e99b:	add    DWORD PTR [eax],edx
  41e99d:	hlt    
  41e99e:	xor    bh,BYTE PTR [ecx-0x44b82322]
  41e9a4:	ret    0x6855
  41e9a7:	dec    esi
  41e9a8:	mov    dl,0xe8
  41e9aa:	js     0x41ea12
  41e9ac:	fneni(8087 only) 
  41e9ae:	push   0xf21c57a4
  41e9b3:	and    DWORD PTR [ebp-0x5d],eax
  41e9b6:	addr16 mov eax,ss:0x9952
  41e9bb:	push   cs
  41e9bc:	push   edi
  41e9bd:	mov    eax,DWORD PTR [edi+eiz*2]
  41e9c0:	pop    eax
  41e9c1:	sbb    ecx,DWORD PTR [ebp-0x1f]
  41e9c4:	sub    al,0xd6
  41e9c6:	adc    DWORD PTR [edx+ebx*1+0xd],ecx
  41e9ca:	out    dx,eax
  41e9cb:	inc    ecx
  41e9cc:	outs   dx,DWORD PTR ds:[esi]
  41e9cd:	push   ebp
  41e9ce:	repnz or ch,BYTE PTR [edx+0x1f83fbe5]
  41e9d5:	(bad)  
  41e9d7:	es int 0x86
  41e9da:	adc    ch,BYTE PTR [eax+0x744f0fa8]
  41e9e0:	push   0x66
  41e9e2:	popf   
  41e9e3:	enter  0x53c0,0x88
  41e9e7:	jns    0x41e9f3
  41e9e9:	mov    ds:0x751466c4,al
  41e9ee:	xchg   esi,eax
  41e9ef:	mov    edx,0xa613fb36
  41e9f4:	cmp    BYTE PTR [esi+0x65],dh
  41e9f7:	adc    eax,0xa20ef605
  41e9fc:	repz push eax
  41e9fe:	cwde   
  41e9ff:	push   0x4e
  41ea01:	test   DWORD PTR ds:0x20661670,0x48cdaa31
  41ea0b:	shr    BYTE PTR [ebx+edi*4],1
  41ea0e:	xchg   ebx,eax
  41ea0f:	mov    al,0xc
  41ea11:	fcmovb st,st(5)
  41ea13:	dec    eax
  41ea14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea15:	or     al,0x71
  41ea17:	mov    ds:0xfdb58ac8,eax
  41ea1c:	out    0x75,al
  41ea1e:	dec    ecx
  41ea1f:	cmp    DWORD PTR [eax+0x6],0xd1eefb8f
  41ea26:	sbb    DWORD PTR [eax-0x1ac22699],esi
  41ea2c:	sub    BYTE PTR [esi-0x74b3b92f],0xd0
  41ea33:	bound  ebp,QWORD PTR [eax]
  41ea35:	xchg   ebp,eax
  41ea36:	dec    eax
  41ea37:	ror    DWORD PTR [eax-0x660be913],1
  41ea3d:	lea    ebx,[edx]
  41ea3f:	outs   dx,BYTE PTR ds:[esi]
  41ea40:	cld    
  41ea41:	sub    ebp,ebx
  41ea43:	xchg   esi,eax
  41ea44:	pop    esi
  41ea45:	mov    eax,ds:0x4a56e8d8
  41ea4a:	dec    ecx
  41ea4b:	sar    DWORD PTR [ebp-0x1098a7cf],0x93
  41ea52:	sbb    eax,0x3fd99638
  41ea57:	std    
  41ea58:	xor    al,0xb6
  41ea5a:	dec    edx
  41ea5b:	sbb    eax,0x534fc379
  41ea60:	leave  
  41ea61:	adc    ecx,DWORD PTR [eax-0x5c]
  41ea64:	daa    
  41ea65:	xchg   DWORD PTR [esi+ebx*1+0x25],edx
  41ea69:	or     bh,ch
  41ea6b:	data16 add dl,dl
  41ea6e:	mov    ss,WORD PTR [ebp-0x4a49a3e6]
  41ea74:	add    DWORD PTR [ebp-0x261a6c3b],edi
  41ea7a:	xor    DWORD PTR [edx+0x1c],eax
  41ea7d:	inc    ebx
  41ea7e:	ret    
  41ea7f:	test   BYTE PTR [edi],0x4
  41ea82:	xor    DWORD PTR [ebx+0x2a47f8ea],edx
  41ea88:	mov    dl,0xe9
  41ea8a:	dec    eax
  41ea8b:	cli    
  41ea8c:	add    DWORD PTR [ebx],ebx
  41ea8e:	jmp    0x50b:0xcd5d6469
  41ea95:	loopne 0x41eaae
  41ea97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea98:	sbb    BYTE PTR [ebp+0x48],ah
  41ea9b:	add    DWORD PTR [ebx+0x12940f4a],esi
  41eaa1:	jns    0x41ea58
  41eaa3:	addr16 mov ebx,0x245dcf3a
  41eaa9:	(bad)  
  41eaaa:	daa    
  41eaab:	das    
  41eaac:	cmp    al,0x7b
  41eaae:	(bad)
  41eab3:	sbb    cl,BYTE PTR [edx+0x14057df6]
  41eab9:	sbb    al,BYTE PTR [edi-0x60]
  41eabc:	pop    edx
  41eabd:	stc    
  41eabe:	inc    eax
  41eabf:	inc    ebx
  41eac0:	sbb    bh,dl
  41eac2:	lods   al,BYTE PTR ds:[esi]
  41eac3:	loop   0x41eaba
  41eac5:	inc    edi
  41eac6:	imul   ecx,DWORD PTR [esi-0x2ce32321],0xffffffea
  41eacd:	(bad)  
  41eace:	iret   
  41eacf:	mov    dl,al
  41ead1:	es inc ebp
  41ead3:	xor    al,0x21
  41ead5:	dec    edi
  41ead6:	or     al,0x72
  41ead8:	inc    ebp
  41ead9:	mov    bl,0x14
  41eadb:	jl     0x41eab5
  41eadd:	or     BYTE PTR [ecx],bl
  41eadf:	repnz cmp cl,bl
  41eae2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eae3:	mov    eax,ds:0xb57ba418
  41eae8:	xchg   edx,eax
  41eae9:	iret   
  41eaea:	(bad)  
  41eaeb:	jecxz  0x41ea85
  41eaed:	lods   eax,DWORD PTR ds:[esi]
  41eaee:	dec    edi
  41eaef:	mov    BYTE PTR [edx-0x3ba72a38],bh
  41eaf5:	fyl2xp1 
  41eaf7:	dec    edi
  41eaf8:	sti    
  41eaf9:	js     0x41eac5
  41eafb:	mov    ds:0xf92f3f3f,eax
  41eb00:	inc    esi
  41eb01:	in     al,dx
  41eb02:	data16 lods al,BYTE PTR ds:[esi]
  41eb04:	sbb    edi,ebp
  41eb06:	inc    edi
  41eb07:	cwde   
  41eb08:	adc    ebx,edx
  41eb0a:	(bad)  
  41eb0b:	rcr    DWORD PTR [ebp-0x51e4b3c7],cl
  41eb11:	repz dec ebp
  41eb13:	or     eax,0xaeba5a1a
  41eb18:	aaa    
  41eb19:	rol    DWORD PTR [edi+0x4ee86b86],1
  41eb1f:	jmp    0xe28b:0x620c0046
  41eb26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb27:	out    dx,eax
  41eb28:	sbb    dh,BYTE PTR [edi-0x4a02d922]
  41eb2e:	cmp    DWORD PTR [eax-0x2d722692],esp
  41eb34:	enter  0x49c2,0xf0
  41eb38:	sub    BYTE PTR [ecx+edi*4],bh
  41eb3b:	test   eax,0x51e0aa1b
  41eb40:	dec    edx
  41eb41:	cli    
  41eb42:	mov    ds:0xe8efea3f,al
  41eb47:	pop    ecx
  41eb48:	fwait
  41eb49:	in     al,0xb9
  41eb4b:	sbb    cx,WORD PTR [ebx-0x67e5319e]
  41eb52:	pop    edi
  41eb53:	adc    bh,BYTE PTR [ebp+0x29]
  41eb56:	mov    ?,WORD PTR ds:0x62c5d9ab
  41eb5c:	or     al,0xa5
  41eb5e:	mov    ah,0x27
  41eb60:	mul    BYTE PTR [edi-0x46c6fbe3]
  41eb66:	dec    eax
  41eb67:	lock add BYTE PTR [ebx],ch
  41eb6a:	lock mov fs,WORD PTR [ecx+0x3a46f2d9]
  41eb71:	pushf  
  41eb72:	pop    es
  41eb73:	dec    ecx
  41eb74:	xor    al,0xf0
  41eb76:	stos   BYTE PTR es:[edi],al
  41eb77:	cwde   
  41eb78:	sbb    bl,al
  41eb7a:	cmp    BYTE PTR [edi+0x1ceb2021],bl
  41eb80:	add    eax,0x6c16ada
  41eb85:	dec    ebp
  41eb86:	xor    eax,0xdb3856ff
  41eb8b:	fwait
  41eb8c:	add    BYTE PTR [edi+0x48],dh
  41eb8f:	and    al,0x2c
  41eb91:	or     BYTE PTR [edx],al
  41eb93:	pop    esp
  41eb94:	(bad)  
  41eb95:	js     0x41ebfb
  41eb97:	test   esi,esp
  41eb99:	(bad)  
  41eb9b:	out    0x45,al
  41eb9d:	dec    ebp
  41eb9e:	jbe    0x41eb5f
  41eba0:	mov    edx,0x17ee4bc2
  41eba5:	stos   BYTE PTR es:[edi],al
  41eba6:	call   0x4a54:0x93d9e214
  41ebad:	leave  
  41ebae:	and    al,0x8f
  41ebb0:	fwait
  41ebb1:	popa   
  41ebb2:	xor    edi,esp
  41ebb4:	sub    DWORD PTR [eax*8-0x2a66b4a7],edi
  41ebbb:	mov    bl,0x63
  41ebbd:	xor    al,0xae
  41ebbf:	pop    esp
  41ebc0:	test   eax,0xe36b7b5e
  41ebc5:	cdq    
  41ebc6:	jp     0x41eb95
  41ebc8:	out    0xbd,eax
  41ebca:	fs mov edi,0x2984d920
  41ebd0:	mov    eax,cs:0xd9c77093
  41ebd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ebd7:	inc    edx
  41ebd8:	cmp    al,0x70
  41ebda:	in     al,dx
  41ebdb:	sub    BYTE PTR [ecx+0x5ea9b9f9],cl
  41ebe1:	and    cl,BYTE PTR [ecx+0x75]
  41ebe4:	jg     0x41ebba
  41ebe6:	push   eax
  41ebe7:	lock imul esp,eax,0x1b
  41ebeb:	mov    ah,0xfa
  41ebed:	scas   al,BYTE PTR es:[edi]
  41ebee:	repnz adc al,0x8
  41ebf1:	xor    BYTE PTR [esi+esi*2+0x23],cl
  41ebf5:	inc    esi
  41ebf6:	xchg   edx,eax
  41ebf7:	jp     0x41ebbb
  41ebf9:	fidivr DWORD PTR [edx]
  41ebfb:	cwde   
  41ebfc:	mov    DWORD PTR ds:0xd9d2496b,ebx
  41ec02:	and    ebp,DWORD PTR [ebx]
  41ec04:	pop    ds
  41ec05:	movnti DWORD PTR [esi-0x7a315911],esp
  41ec0c:	sub    DWORD PTR [ebx+0x74],esi
  41ec0f:	sub    eax,0xcc65e052
  41ec14:	(bad)  
  41ec15:	mov    ?,ecx
  41ec17:	(bad)  
  41ec18:	mov    edx,0x6678e803
  41ec1d:	popa   
  41ec1e:	dec    esp
  41ec1f:	popf   
  41ec20:	mov    esp,0x1af6d695
  41ec25:	xchg   ecx,edi
  41ec27:	stos   BYTE PTR es:[edi],al
  41ec28:	sub    ebp,DWORD PTR ds:0xe07db19b
  41ec2e:	mov    ebx,0x9dc8b18f
  41ec33:	imul   edi,eax,0x49
  41ec36:	popa   
  41ec37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ec38:	sbb    bl,BYTE PTR [ebp+0x3f]
  41ec3b:	mov    ebp,0x81a629e0
  41ec40:	ja     0x41ec0b
  41ec42:	add    dh,BYTE PTR [eax+eax*1-0x7997c02]
  41ec49:	icebp  
  41ec4a:	fwait
  41ec4b:	jecxz  0x41ec67
  41ec4d:	xor    eax,0xffc878a0
  41ec52:	xchg   DWORD PTR [eax-0x257d2a5c],esi
  41ec58:	sbb    ecx,0x56
  41ec5b:	fcom   QWORD PTR [ebx+0x69f1ac34]
  41ec61:	mov    edx,0xdafa9101
  41ec66:	inc    edi
  41ec67:	mov    esi,0x2cb98196
  41ec6c:	xor    dh,BYTE PTR [edi+0x35f46a21]
  41ec72:	mov    ds:0xf0279971,al
  41ec77:	and    eax,0x41483ca9
  41ec7c:	jo     0x41ece4
  41ec7e:	lods   eax,DWORD PTR ds:[esi]
  41ec7f:	push   cs
  41ec80:	sub    eax,0x9566f2d1
  41ec85:	mov    esp,0x740a0e44
  41ec8a:	(bad)  
  41ec8c:	adc    eax,0xf9024846
  41ec91:	cld    
  41ec92:	popf   
  41ec93:	fisub  DWORD PTR [edi-0x58b22b4]
  41ec99:	push   edx
  41ec9a:	lods   al,BYTE PTR ds:[esi]
  41ec9b:	daa    
  41ec9c:	in     al,dx
  41ec9d:	xor    bh,BYTE PTR [edi]
  41ec9f:	push   ds
  41eca0:	inc    edx
  41eca1:	ja     0x41ec27
  41eca3:	inc    ecx
  41eca4:	pop    edx
  41eca5:	femms  
  41eca7:	inc    ebx
  41eca8:	out    dx,eax
  41eca9:	inc    edi
  41ecaa:	xor    al,0xae
  41ecac:	dec    ebp
  41ecad:	fnsave [ecx]
  41ecaf:	loop   0x41ecd6
  41ecb1:	js     0x41ecf9
  41ecb3:	clc    
  41ecb4:	inc    ebx
  41ecb5:	cmp    ebp,DWORD PTR [ecx]
  41ecb7:	daa    
  41ecb8:	cmp    DWORD PTR [ecx],esp
  41ecba:	push   0xffffffcc
  41ecbc:	fisubr DWORD PTR ds:0x66ab044
  41ecc2:	loope  0x41ec81
  41ecc4:	popf   
  41ecc5:	ins    BYTE PTR es:[edi],dx
  41ecc6:	cmc    
  41ecc7:	inc    sp
  41ecc9:	js     0x41ec4f
  41eccb:	sbb    ebx,DWORD PTR [edx]
  41eccd:	dec    edx
  41ecce:	push   edi
  41eccf:	jg     0x41ed0c
  41ecd1:	sbb    BYTE PTR [ebp-0x8],ch
  41ecd4:	xchg   dh,bl
  41ecd6:	mov    ds:0x598adf5e,eax
  41ecdb:	iret   
  41ecdc:	lods   eax,DWORD PTR ds:[esi]
  41ecdd:	call   0x97b3:0x83eb848d
  41ece4:	retf   0xc1
  41ece7:	dec    esp
  41ece8:	inc    esi
  41ece9:	cmp    al,0x78
  41eceb:	and    bl,BYTE PTR [edx]
  41eced:	rcr    BYTE PTR [edx+ecx*2],0xf9
  41ecf1:	or     al,0x42
  41ecf3:	imul   esi,edi,0x61
  41ecf6:	retf   0x8c66
  41ecf9:	lds    ecx,FWORD PTR [edx-0x3911c656]
  41ecff:	jo     0x41ec9b
  41ed01:	inc    esp
  41ed02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ed03:	rol    BYTE PTR [eax-0x61],cl
  41ed06:	loopne 0x41ed0a
  41ed08:	mov    bh,0xc3
  41ed0a:	mov    ch,0x58
  41ed0c:	mov    ah,0x13
  41ed0e:	lock push 0x811c5007
  41ed14:	stos   BYTE PTR es:[edi],al
  41ed15:	mov    ch,0xab
  41ed17:	(bad)  
  41ed18:	sbb    ah,BYTE PTR [ebp+0x5]
  41ed1b:	mov    ds:0x5af3d70,eax
  41ed20:	ret    0xffef
  41ed23:	popf   
  41ed24:	mov    ebx,0x1a134ed4
  41ed29:	push   edx
  41ed2a:	fs pop ebx
  41ed2c:	aam    0xd4
  41ed2e:	js     0x41ece1
  41ed30:	lahf   
  41ed31:	pop    ds
  41ed32:	sub    ah,BYTE PTR [edi-0x5d]
  41ed35:	in     eax,dx
  41ed36:	jno    0x41ecd3
  41ed38:	cs mov ah,0xdf
  41ed3b:	cmp    DWORD PTR [ebx],edx
  41ed3d:	stc    
  41ed3e:	cmp    DWORD PTR [ebx-0x26],ebx
  41ed41:	aad    0x56
  41ed43:	cld    
  41ed44:	xchg   ch,ah
  41ed46:	sar    DWORD PTR [ecx+0x66965bbb],cl
  41ed4c:	pop    ds
  41ed4d:	stos   DWORD PTR es:[edi],eax
  41ed4e:	or     DWORD PTR [ecx+0x656c811a],ecx
  41ed54:	inc    edi
  41ed55:	xor    eax,0xd997a3a8
  41ed5a:	repz adc BYTE PTR [edi],dh
  41ed5d:	or     BYTE PTR [eax-0x3b],al
  41ed60:	lds    esp,FWORD PTR [eax]
  41ed62:	xor    eax,0x48d23519
  41ed67:	xchg   esi,eax
  41ed68:	dec    esi
  41ed69:	cbw    
  41ed6b:	mov    al,ds:0x857559c9
  41ed70:	into   
  41ed71:	stc    
  41ed72:	pop    ebx
  41ed73:	inc    dx
  41ed75:	jns    0x41edcb
  41ed77:	jmp    DWORD PTR [ebx]
  41ed79:	adc    DWORD PTR [eax-0x61],ecx
  41ed7c:	loope  0x41ed37
  41ed7e:	or     DWORD PTR [ecx],ebp
  41ed80:	mov    al,ds:0x61671732
  41ed85:	dec    eax
  41ed86:	xchg   ecx,eax
  41ed87:	mov    ch,0x1a
  41ed89:	scas   eax,DWORD PTR es:[edi]
  41ed8a:	retf   
  41ed8b:	vpslld ymm3,ymm7,XMMWORD PTR [ebp+0x4]
  41ed90:	int3   
  41ed91:	cmc    
  41ed92:	mov    ebp,0x9899f3e2
  41ed97:	stos   BYTE PTR es:[edi],al
  41ed98:	in     al,dx
  41ed99:	mov    ecx,0x931a44d2
  41ed9e:	xor    dh,BYTE PTR [edx+0x6d]
  41eda1:	cmp    DWORD PTR [eax-0x5726a671],0x3f0e039e
  41edab:	retf   
  41edac:	shl    WORD PTR [eax+0x70],0xa3
  41edb1:	push   esp
  41edb2:	dec    eax
  41edb3:	jecxz  0x41ed79
  41edb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41edb6:	retf   
  41edb7:	mov    ch,0xce
  41edb9:	hlt    
  41edba:	ss addr16 daa 
  41edbd:	mov    cl,BYTE PTR [esi-0x66d8e559]
  41edc3:	lock pushf 
  41edc5:	out    dx,eax
  41edc6:	in     eax,0x6f
  41edc8:	call   0x2cd6188e
  41edcd:	xchg   ebx,eax
  41edce:	adc    eax,DWORD PTR [ebp-0x13fbcae2]
  41edd4:	ficom  DWORD PTR [edx]
  41edd6:	cmp    DWORD PTR [edx],edx
  41edd8:	pop    eax
  41edd9:	fiadd  DWORD PTR [ecx+ecx*1-0x12]
  41eddd:	inc    ecx
  41edde:	out    0x30,eax
  41ede0:	mov    ds:0xf7835dd0,al
  41ede5:	data16 sbb bh,dl
  41ede8:	dec    eax
  41ede9:	pushf  
  41edea:	(bad)  
  41edeb:	mov    ebx,0xe15b481a
  41edf0:	(bad)  
  41edf1:	push   esp
  41edf2:	in     eax,dx
  41edf3:	jno    0x41ed82
  41edf5:	or     BYTE PTR [ebx+0x67],ah
  41edf8:	aad    0xc4
  41edfa:	icebp  
  41edfb:	jl     0x41ee2f
  41edfd:	mov    esi,0xe5a38728
  41ee02:	inc    edi
  41ee03:	aas    
  41ee04:	clc    
  41ee05:	into   
  41ee06:	dec    edx
  41ee07:	call   0x6764f6ae
  41ee0c:	fwait
  41ee0d:	ds les edx,FWORD PTR ds:[edi+eax*1-0x66]
  41ee13:	in     eax,0xb5
  41ee15:	shl    ebx,cl
  41ee17:	out    0x7c,eax
  41ee19:	cld    
  41ee1a:	mov    WORD PTR [edx+eiz*8],?
  41ee1d:	fstp   DWORD PTR [ebx]
  41ee1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee20:	fadd   st(6),st
  41ee22:	adc    eax,0x819f36c0
  41ee27:	ret    
  41ee28:	mov    cl,0xe7
  41ee2a:	inc    edi
  41ee2b:	cld    
  41ee2c:	sub    eax,0xbe545879
  41ee31:	outs   dx,BYTE PTR ds:[esi]
  41ee32:	enter  0xfc66,0xc4
  41ee36:	(bad)
  41ee3a:	inc    ebx
  41ee3b:	pusha  
  41ee3c:	das    
  41ee3d:	stc    
  41ee3e:	and    al,0xa5
  41ee40:	push   esp
  41ee41:	fnstenv [edx-0x6a0d7907]
  41ee47:	mov    bh,0xe7
  41ee49:	(bad)  
  41ee4a:	in     al,0x1f
  41ee4c:	in     eax,0xaf
  41ee4e:	pop    ebx
  41ee4f:	in     eax,dx
  41ee50:	ficomp DWORD PTR [ebx]
  41ee52:	addr16 jp 0x41ee2c
  41ee55:	push   ecx
  41ee56:	aaa    
  41ee57:	(bad)  
  41ee58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee59:	test   BYTE PTR [eax],0xde
  41ee5c:	sbb    BYTE PTR [ecx+0x3b],0x82
  41ee60:	lock out dx,al
  41ee62:	(bad)  
  41ee63:	outs   dx,BYTE PTR ds:[esi]
  41ee64:	sbb    ch,bh
  41ee66:	push   eax
  41ee67:	adc    DWORD PTR [edi],eax
  41ee69:	cwde   
  41ee6a:	or     dh,BYTE PTR [edi+0x45]
  41ee6d:	leave  
  41ee6e:	mov    ah,0xad
  41ee70:	cmp    ah,dh
  41ee72:	popf   
  41ee73:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ee75:	and    eax,0xc91ad82f
  41ee7a:	js     0x41eeed
  41ee7c:	xor    ebp,edx
  41ee7e:	(bad)  
  41ee80:	xor    bl,ah
  41ee82:	data16 sub ch,BYTE PTR [ecx+0x52]
  41ee86:	adc    eax,DWORD PTR [ebx]
  41ee88:	fisubr DWORD PTR [ecx+edx*2+0x7561a67]
  41ee8f:	adc    ebp,DWORD PTR [edx+0x78]
  41ee92:	sar    ch,1
  41ee94:	add    bh,BYTE PTR [edx]
  41ee96:	pushf  
  41ee97:	and    DWORD PTR [edx+esi*8+0x3428ab46],ebx
  41ee9e:	sbb    bl,BYTE PTR [eax]
  41eea0:	jge    0x41ee7b
  41eea2:	mov    bh,0x68
  41eea4:	stc    
  41eea5:	xchg   esi,eax
  41eea6:	push   ebx
  41eea7:	retf   
  41eea8:	mov    bl,0xdf
  41eeaa:	cmp    BYTE PTR [ebp+0x75078409],cl
  41eeb0:	mov    ds,esp
  41eeb2:	(bad)  
  41eeb3:	mov    ds:0x96d4a201,eax
  41eeb8:	push   ds
  41eeb9:	push   ds
  41eeba:	sub    BYTE PTR [ebx+0x0],0x7b
  41eebe:	cmp    al,dh
  41eec0:	xor    edx,DWORD PTR [esi]
  41eec2:	or     BYTE PTR [ecx+0x76],cl
  41eec5:	pop    eax
  41eec6:	ret    0x6066
  41eec9:	xor    BYTE PTR [eax],al
  41eecb:	into   
  41eecc:	mov    ebx,fs
  41eece:	imul   ecx,DWORD PTR fs:[ebx-0x1a2eb74e],0x26a85315
  41eed9:	jge    0x41eeb7
  41eedb:	data16 cmc 
  41eedd:	jo     0x41ee94
  41eedf:	push   edx
  41eee0:	sbb    eax,0xec1aee6a
  41eee5:	push   edx
  41eee6:	push   ebp
  41eee7:	stos   BYTE PTR es:[edi],al
  41eee8:	sub    al,0x14
  41eeea:	imul   DWORD PTR [esi]
  41eeec:	xchg   edx,eax
  41eeed:	xchg   BYTE PTR ds:0x5c7ffb6a,ah
  41eef3:	arpl   WORD PTR ds:0x1a672fd4,dx
  41eef9:	mov    ecx,0x418ff214
  41eefe:	push   ecx
  41eeff:	sbb    BYTE PTR [esi-0x27],al
  41ef02:	jne    0x41eef0
  41ef04:	push   ebp
  41ef05:	(bad)  
  41ef07:	push   ss
  41ef08:	xor    eax,0x1be6ff96
  41ef0d:	stos   DWORD PTR es:[edi],eax
  41ef0e:	loopne 0x41eedd
  41ef10:	or     al,0x68
  41ef12:	xor    eax,0xcce40678
  41ef17:	mov    dh,0x80
  41ef19:	fs daa 
  41ef1b:	addr16 shl cl,cl
  41ef1e:	outs   dx,BYTE PTR ds:[esi]
  41ef1f:	(bad)  
  41ef20:	sbb    al,BYTE PTR [ebp+0x7830b5a5]
  41ef26:	clc    
  41ef27:	scas   al,BYTE PTR es:[edi]
  41ef28:	pminub mm5,QWORD PTR [ecx-0x58]
  41ef2c:	inc    edx
  41ef2d:	mov    WORD PTR ds:0xf06532b4,es
  41ef33:	dec    esi
  41ef34:	adc    DWORD PTR [ecx],0x8ac15948
  41ef3a:	dec    edx
  41ef3b:	aaa    
  41ef3c:	mov    bh,0xbc
  41ef3e:	push   0x68bda34a
  41ef43:	out    dx,al
  41ef44:	ja     0x41eef4
  41ef46:	inc    edi
  41ef47:	jne    0x41ef4a
  41ef49:	lods   eax,DWORD PTR ds:[esi]
  41ef4a:	shl    DWORD PTR [ecx+0x16ab6e98],0x1a
  41ef51:	and    eax,0x9b1f0692
  41ef56:	int    0x5b
  41ef58:	jnp    0x41ef33
  41ef5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef5b:	xor    edx,DWORD PTR [ecx]
  41ef5d:	cmp    al,0x89
  41ef5f:	pop    edx
  41ef60:	xrelease mov BYTE PTR [edx-0x43],bl
  41ef64:	repz mov al,ds:0xff1d5198
  41ef6a:	mov    edi,0xe43a3dd9
  41ef6f:	or     al,0x53
  41ef71:	adc    DWORD PTR [esi+eax*2-0xa],0x48e10cda
  41ef79:	dec    esp
  41ef7a:	jmp    0x5c7b9992
  41ef7f:	aas    
  41ef80:	sub    BYTE PTR [ebx-0x66a95bfa],dh
  41ef86:	mov    esi,0x56a5bf85
  41ef8b:	ja     0x41f00c
  41ef8d:	mov    al,ds:0x2f2c8c83
  41ef92:	cmc    
  41ef93:	data16 and dl,bl
  41ef96:	aas    
  41ef97:	inc    edi
  41ef98:	lods   al,BYTE PTR ds:[esi]
  41ef99:	aaa    
  41ef9a:	dec    ecx
  41ef9b:	jne    0x41f00f
  41ef9d:	adc    al,0x91
  41ef9f:	xchg   edx,eax
  41efa0:	ja     0x41ef7b
  41efa2:	pop    ss
  41efa3:	jmp    0x41efd2
  41efa5:	jmp    0x41ef27
  41efa7:	dec    ebx
  41efa8:	mov    bl,0xa7
  41efaa:	ss lahf 
  41efac:	(bad)  
  41efad:	jle    0x41f013
  41efaf:	jp     0x41efd0
  41efb1:	sbb    DWORD PTR [edi],0x25ab9aea
  41efb7:	aad    0xec
  41efb9:	fnstcw WORD PTR ds:0x4ad0b46a
  41efbf:	mov    al,ds:0x2bc6d7bb
  41efc4:	int3   
  41efc5:	pop    ebp
  41efc6:	dec    eax
  41efc7:	je     0x41ef52
  41efc9:	xchg   esi,eax
  41efca:	in     eax,0xde
  41efcc:	adc    al,0x8a
  41efce:	retf   0x5e66
  41efd1:	mov    ds:0x2e1a44f7,eax
  41efd6:	gs scas eax,DWORD PTR es:[edi]
  41efd8:	dec    esi
  41efd9:	dec    esp
  41efda:	lods   al,BYTE PTR ds:[esi]
  41efdb:	xchg   edx,eax
  41efdc:	mov    dh,0xde
  41efde:	dec    esi
  41efdf:	dec    edi
  41efe0:	inc    ah
  41efe2:	push   es
  41efe3:	pop    esp
  41efe4:	xlat   BYTE PTR ds:[ebx]
  41efe5:	pop    ecx
  41efe6:	(bad)
  41efe9:	cs ds jl 0x41ef81
  41efed:	dec    edx
  41efee:	dec    eax
  41efef:	test   DWORD PTR [eax],ebx
  41eff1:	ret    0xec23
  41eff4:	out    0x5a,eax
  41eff6:	ins    DWORD PTR es:[edi],dx
  41eff7:	jne    0x41f033
  41eff9:	in     eax,0xb6
  41effb:	or     al,0x80
  41effd:	scas   al,BYTE PTR es:[edi]
  41effe:	pop    es
  41efff:	sbb    eax,0xc6669022
  41f004:	add    dh,BYTE PTR [edi-0x38]
  41f007:	or     esi,DWORD PTR [edx]
  41f009:	sub    BYTE PTR [ecx+0x77],dl
  41f00c:	aas    
  41f00d:	fidivr DWORD PTR [edx+0x1e]
  41f010:	xchg   DWORD PTR [ebx+eiz*4-0x52],edx
  41f014:	neg    BYTE PTR [ebx+edi*8]
  41f017:	pop    eax
  41f018:	mov    bl,0xc9
  41f01a:	in     al,0x66
  41f01c:	(bad)  
  41f01d:	icebp  
  41f01e:	outs   dx,DWORD PTR ds:[esi]
  41f01f:	loopne 0x41f02d
  41f021:	repz sub ch,BYTE PTR [ebx-0x2ea92068]
  41f028:	dec    esi
  41f029:	int3   
  41f02a:	call   0xa11bcb75
  41f02f:	adc    eax,0x2141d63d
  41f034:	fmul   st(5),st
  41f036:	mov    edi,0x48087436
  41f03b:	or     cl,BYTE PTR [eax+0x13b3db05]
  41f041:	icebp  
  41f042:	mov    ch,BYTE PTR [edx-0x57]
  41f045:	pop    esp
  41f046:	inc    esi
  41f047:	shl    edx,1
  41f049:	sub    DWORD PTR [esi-0x14],0x39
  41f04d:	mov    al,ds:0xe55ba7c2
  41f052:	outs   dx,BYTE PTR ds:[esi]
  41f053:	cmp    bl,ah
  41f055:	pop    eax
  41f056:	mov    ah,0x2b
  41f058:	jmp    0x41f033
  41f05a:	sbb    edi,DWORD PTR [esi]
  41f05c:	and    dh,BYTE PTR [ecx-0x223328af]
  41f062:	inc    ecx
  41f063:	pop    edi
  41f064:	btr    DWORD PTR [eax-0x36],ecx
  41f068:	mov    gs,WORD PTR [ebp-0x34]
  41f06b:	shr    al,1
  41f06d:	inc    ebp
  41f06e:	dec    ebp
  41f06f:	outs   dx,DWORD PTR ds:[esi]
  41f070:	sbb    ch,BYTE PTR [esp+ebx*1+0x541e2f2d]
  41f077:	ret    0x44e7
  41f07a:	dec    eax
  41f07b:	gs sub bh,0x0
  41f07f:	jne    0x41f0ca
  41f081:	cs call 0x50960b0c
  41f087:	sahf   
  41f088:	es cli 
  41f08a:	iret   
  41f08b:	aas    
  41f08c:	sbb    dh,BYTE PTR [eax-0x7f]
  41f08f:	jmp    0xda0a:0x1979dda1
  41f096:	mov    ds:0x5c829c97,al
  41f09b:	xor    eax,0x3dba926
  41f0a0:	and    edx,0xdd626456
  41f0a6:	xor    eax,0x6ad951a7
  41f0ab:	dec    edi
  41f0ac:	dec    esp
  41f0ad:	dec    edi
  41f0ae:	out    0xc2,eax
  41f0b0:	or     bl,BYTE PTR ds:0xdb1a74a0
  41f0b6:	sub    esi,DWORD PTR [edx]
  41f0b8:	mov    dl,0x14
  41f0ba:	mov    edx,0x87696763
  41f0bf:	xchg   DWORD PTR [ebp-0x74],ecx
  41f0c2:	ds mov bh,0x54
  41f0c5:	inc    esi
  41f0c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0c7:	jne    0x41f092
  41f0c9:	repnz add bh,BYTE PTR [edi+0x5f]
  41f0cd:	lock pop es
  41f0cf:	xor    eax,0xcdca7121
  41f0d4:	inc    edx
  41f0d5:	psubsw mm2,mm7
  41f0d8:	test   al,0xaf
  41f0da:	jbe    0x41f102
  41f0dc:	inc    edi
  41f0dd:	fldenv [eax+0x4d14f8a5]
  41f0e3:	mov    al,ds:0x94a55729
  41f0e8:	dec    ebx
  41f0e9:	mov    dl,0x4d
  41f0eb:	int3   
  41f0ec:	aam    0x59
  41f0ee:	dec    ecx
  41f0ef:	push   edi
  41f0f0:	cmp    ecx,DWORD PTR [ecx]
  41f0f2:	lock arpl WORD PTR ds:0x35185182,bp
  41f0f9:	xchg   ecx,eax
  41f0fa:	xor    ebp,DWORD PTR [eax-0x1a]
  41f0fd:	adc    eax,0xc287645d
  41f102:	int3   
  41f103:	data16 popw ds
  41f106:	(bad)  
  41f107:	lds    ebx,FWORD PTR [edx]
  41f109:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f10a:	jns    0x41f0d7
  41f10c:	dec    eax
  41f10d:	jbe    0x41f153
  41f10f:	pop    ecx
  41f110:	cmp    DWORD PTR [ebx+0x687a5bf0],0xffffff85
  41f117:	xchg   esp,eax
  41f118:	adc    eax,0x1766e29b
  41f11d:	xchg   esp,eax
  41f11e:	add    al,0x9e
  41f120:	sbb    eax,0x22556ea
  41f125:	sub    BYTE PTR [esi-0x79],al
  41f128:	in     eax,dx
  41f129:	dec    esi
  41f12a:	hlt    
  41f12b:	shl    BYTE PTR [edi+0x67a19eb6],0x1c
  41f132:	enter  0x3914,0xc0
  41f136:	call   0xa68e:0x2a7c1a04
  41f13d:	cmp    ah,BYTE PTR [ebx-0x75]
  41f140:	mov    bl,0x31
  41f142:	retf   0x1aa5
  41f145:	dec    esp
  41f146:	mov    al,ds:0x36a7967
  41f14b:	adc    bl,BYTE PTR [ebx]
  41f14d:	sub    eax,0xd8b4ac1e
  41f152:	fiadd  WORD PTR [edx]
  41f154:	adc    eax,DWORD PTR [ecx+0x292f1107]
  41f15a:	sub    al,0x64
  41f15c:	inc    esi
  41f15d:	fisub  DWORD PTR [eax-0x673b2ffd]
  41f163:	iret   
  41f164:	lahf   
  41f165:	lods   eax,DWORD PTR ds:[esi]
  41f166:	scas   al,BYTE PTR es:[edi]
  41f167:	and    DWORD PTR [edx],ebx
  41f169:	(bad)  
  41f16a:	bound  esi,QWORD PTR [edx-0x1b]
  41f16d:	out    dx,eax
  41f16e:	retf   0xc5d
  41f171:	fidiv  DWORD PTR ds:0x2886113
  41f177:	or     BYTE PTR [esi+0x29],ah
  41f17a:	dec    esp
  41f17b:	call   DWORD PTR [edx-0x75c2b052]
  41f181:	xchg   esi,eax
  41f182:	jmp    0x41f1d2
  41f184:	shl    edi,1
  41f186:	dec    esi
  41f187:	xor    al,BYTE PTR [ecx-0x2c]
  41f18a:	mov    edi,0x48440650
  41f18f:	std    
  41f190:	cld    
  41f191:	(bad)  
  41f192:	adc    DWORD PTR [ecx+0x48],eax
  41f195:	push   ds
  41f196:	lds    edx,FWORD PTR [edi+0x29]
  41f199:	ret    
  41f19a:	sub    eax,0x277855e6
  41f19f:	call   0xef865fb2
  41f1a4:	loop   0x41f1a4
  41f1a6:	sub    ah,BYTE PTR [edi+0x35]
  41f1a9:	mov    ebp,0x5002621c
  41f1ae:	sbb    DWORD PTR [ebp+0x6f],esi
  41f1b1:	pop    esp
  41f1b2:	xor    DWORD PTR [eax-0x2e],0xe
  41f1b6:	pop    esi
  41f1b7:	not    BYTE PTR [eax]
  41f1b9:	std    
  41f1ba:	and    DWORD PTR [edi-0x29],eax
  41f1bd:	popa   
  41f1be:	nop
  41f1bf:	ins    DWORD PTR es:[edi],dx
  41f1c0:	outs   dx,BYTE PTR ds:[esi]
  41f1c1:	sbb    al,BYTE PTR [eax-0x222e4395]
  41f1c7:	inc    ebp
  41f1c8:	sbb    cl,dh
  41f1ca:	loopne 0x41f19e
  41f1cc:	sub    DWORD PTR [ecx],eax
  41f1ce:	xor    ch,dl
  41f1d0:	(bad)  
  41f1d1:	fld    DWORD PTR [ebx]
  41f1d3:	sbb    edi,DWORD PTR [esi+0x1b]
  41f1d6:	cmp    cl,al
  41f1d8:	imul   esi,DWORD PTR [edi],0xb0cf5ff
  41f1de:	dec    eax
  41f1df:	mov    ds:0x9d0ae1e5,eax
  41f1e4:	es ins BYTE PTR es:[edi],dx
  41f1e6:	(bad)  
  41f1e7:	mov    dx,?
  41f1ea:	mov    ds,edi
  41f1ec:	sbb    bh,BYTE PTR [edi+ebx*1+0x1cb6a1c3]
  41f1f3:	inc    ebp
  41f1f4:	push   0xffffffd9
  41f1f6:	cmp    BYTE PTR [edx-0x1b86c704],dl
  41f1fc:	or     al,0xf7
  41f1fe:	loope  0x41f1fa
  41f200:	push   edi
  41f201:	jge    0x41f259
  41f203:	repnz adc DWORD PTR [ebx+0x6e],edx
  41f207:	imul   bp,sp,0xffc2
  41f20b:	jg     0x41f192
  41f20d:	fld    DWORD PTR [eax+esi*2-0x7d]
  41f211:	xchg   DWORD PTR [esi],edx
  41f213:	and    ebx,DWORD PTR [edx]
  41f215:	adc    eax,0xde384814
  41f21a:	pop    ds
  41f21b:	adc    BYTE PTR [eax-0x4b17a9fb],bh
  41f221:	(bad)  
  41f223:	jb     0x41f1d7
  41f225:	fcomp  QWORD PTR [ecx]
  41f227:	retf   0xb05e
  41f22a:	cmp    dh,BYTE PTR [edx]
  41f22c:	test   al,dh
  41f22e:	div    DWORD PTR [ebx]
  41f230:	ja     0x41f23a
  41f232:	dec    eax
  41f233:	(bad)
  41f237:	mov    edx,0x667ded33
  41f23c:	cmc    
  41f23d:	push   ecx
  41f23e:	xchg   edi,esi
  41f240:	pop    ecx
  41f241:	jp     0x41f276
  41f243:	mov    esi,0xe951d545
  41f248:	mov    ah,0xc1
  41f24a:	push   ss
  41f24b:	xor    DWORD PTR [eax+0x5],edi
  41f24e:	aaa    
  41f24f:	mov    eax,ds:0x2777fd8a
  41f254:	adc    DWORD PTR [ecx],ebx
  41f256:	cmp    esp,DWORD PTR [edi-0x15]
  41f259:	inc    esp
  41f25a:	xor    ch,dl
  41f25c:	and    ch,BYTE PTR [ebx+0x65]
  41f25f:	out    0x75,al
  41f261:	cmc    
  41f262:	xchg   DWORD PTR [esi],edi
  41f264:	out    0xd9,al
  41f266:	cmp    BYTE PTR [ecx],cl
  41f268:	and    al,0x3a
  41f26a:	and    ch,BYTE PTR [ebx]
  41f26c:	mov    dl,0x55
  41f26e:	mov    al,ds:0x66838f77
  41f273:	mov    ch,BYTE PTR ds:0x4ba50add
  41f279:	mov    edi,0xd9ac5654
  41f27e:	retf   
  41f27f:	pusha  
  41f280:	pop    esi
  41f281:	push   esp
  41f282:	sub    bh,BYTE PTR [ebx+0x4e]
  41f285:	out    dx,al
  41f286:	mov    edx,0x488921a9
  41f28b:	ret    0x3c15
  41f28e:	xchg   ecx,eax
  41f28f:	aad    0xe5
  41f291:	loop   0x41f2d2
  41f293:	addr16 fwait
  41f295:	idiv   BYTE PTR [eax]
  41f297:	sbb    al,0x1a
  41f299:	fild   WORD PTR es:[ebx]
  41f29c:	xor    edi,ecx
  41f29e:	stos   BYTE PTR es:[edi],al
  41f29f:	call   0x8ff4:0xab75d9fd
  41f2a6:	jle    0x41f232
  41f2a8:	xor    ah,dl
  41f2aa:	les    ebp,FWORD PTR [edi]
  41f2ac:	call   0x862f3c24
  41f2b1:	sub    BYTE PTR [edx-0x9],al
  41f2b4:	test   eax,0x356c40c3
  41f2b9:	fldenv [eax-0x7f1e8e28]
  41f2bf:	hlt    
  41f2c0:	cmp    al,0xc5
  41f2c2:	push   edx
  41f2c3:	rcl    eax,0xf8
  41f2c6:	inc    edi
  41f2c7:	std    
  41f2c8:	xchg   esi,eax
  41f2c9:	mov    ds:0x5423c131,eax
  41f2ce:	daa    
  41f2cf:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  41f2d1:	pop    eax
  41f2d2:	add    DWORD PTR [edx-0x12fe9de6],0x29e551b8
  41f2dc:	pop    esp
  41f2dd:	xlat   BYTE PTR ds:[ebx]
  41f2de:	jns    0x41f294
  41f2e0:	stc    
  41f2e1:	das    
  41f2e2:	jb     0x41f34a
  41f2e4:	dec    DWORD PTR [edx-0xa]
  41f2e7:	out    dx,al
  41f2e8:	retf   0xf0a4
  41f2eb:	lock sbb dh,BYTE PTR [esi-0x28]
  41f2ef:	mov    ebx,0x58f51132
  41f2f4:	das    
  41f2f5:	fld    DWORD PTR ds:0x38557e60
  41f2fb:	imul   eax,DWORD PTR [edi],0xc4618909
  41f301:	dec    edi
  41f302:	dec    eax
  41f303:	jbe    0x41f37d
  41f305:	addr16 pushf 
  41f307:	out    dx,eax
  41f308:	add    BYTE PTR [ecx-0x68],dh
  41f30b:	addr16 cs mov al,0xcf
  41f30f:	sbb    DWORD PTR ds:0x5052ed25,ebp
  41f315:	cdq    
  41f316:	dec    eax
  41f317:	sub    BYTE PTR [esi],dl
  41f319:	rcr    BYTE PTR [edx],cl
  41f31b:	xchg   ebx,eax
  41f31c:	push   ebx
  41f31d:	add    esp,DWORD PTR gs:[edi+0x67]
  41f321:	lea    esi,[ecx+0x5b]
  41f324:	sbb    dl,BYTE PTR [esi]
  41f326:	xchg   ebx,eax
  41f327:	jecxz  0x41f2e1
  41f329:	rol    BYTE PTR [edx+0x31],1
  41f32c:	fdivr  st(0),st
  41f32e:	ins    DWORD PTR es:[edi],dx
  41f32f:	test   DWORD PTR [ebp-0x24],esi
  41f332:	xchg   ecx,eax
  41f333:	dec    ebx
  41f334:	enter  0xd58a,0x5b
  41f338:	jbe    0x41f2e4
  41f33a:	fmul   DWORD PTR [edx-0x40]
  41f33d:	test   DWORD PTR [esi+0x4a5d1a2e],eax
  41f343:	cld    
  41f344:	push   esp
  41f345:	push   ebx
  41f346:	into   
  41f347:	add    DWORD PTR [ebp-0x49],ecx
  41f34a:	packuswb mm7,QWORD PTR [esi-0x5b]
  41f34e:	xor    ebp,DWORD PTR [ecx-0x404d3de6]
  41f354:	adc    ah,BYTE PTR [eax-0x39]
  41f357:	pop    ss
  41f358:	mov    dl,0x56
  41f35a:	dec    esp
  41f35c:	aaa    
  41f35d:	sahf   
  41f35e:	mov    DWORD PTR [esi-0x52],esp
  41f361:	jp     0x41f39a
  41f363:	sbb    ah,BYTE PTR gs:[edi+edx*2-0x2c0eceaf]
  41f36b:	mov    dh,0x1e
  41f36d:	call   0x998faf62
  41f372:	mov    cl,al
  41f374:	xor    BYTE PTR ds:0xe1a7248,al
  41f37a:	mov    dh,0x4d
  41f37c:	into   
  41f37d:	aam    0x8c
  41f37f:	arpl   WORD PTR [eax-0x27],ax
  41f382:	ror    DWORD PTR [esi],1
  41f384:	add    edx,DWORD PTR [edi+0x39]
  41f387:	int3   
  41f388:	sub    ch,al
  41f38a:	stos   BYTE PTR es:[edi],al
  41f38b:	fist   WORD PTR [edi+ebp*1+0x7e656b48]
  41f392:	inc    ecx
  41f393:	adc    dh,BYTE PTR ds:0xe367b7ed
  41f399:	in     eax,0xf8
  41f39b:	call   0x14ec:0x5b2615ac
  41f3a2:	dec    eax
  41f3a3:	jle    0x41f41d
  41f3a5:	sub    al,0x16
  41f3a7:	bound  edi,QWORD PTR [edx]
  41f3a9:	pop    eax
  41f3aa:	fs dec edx
  41f3ac:	xor    al,0x9a
  41f3ae:	or     al,0x67
  41f3b0:	dec    esi
  41f3b1:	mov    dh,0x55
  41f3b3:	dec    edx
  41f3b4:	sbb    dl,BYTE PTR [ebp*4-0x5bc27c7]
  41f3bb:	xor    DWORD PTR [eax+0x16],edi
  41f3be:	dec    ebx
  41f3bf:	rcl    BYTE PTR [esi],cl
  41f3c1:	adc    al,0xd3
  41f3c3:	out    0x9a,eax
  41f3c5:	push   esi
  41f3c6:	or     DWORD PTR [edi-0x2ac8004c],esp
  41f3cc:	sbb    ah,BYTE PTR [edi+ecx*2-0x464c4e40]
  41f3d3:	stc    
  41f3d4:	pop    eax
  41f3d5:	fsqrt  
  41f3d7:	push   esp
  41f3d8:	ins    BYTE PTR es:[edi],dx
  41f3d9:	mov    esp,0x85d8b549
  41f3de:	ja     0x41f40d
  41f3e0:	ds jns 0x41f447
  41f3e3:	in     eax,dx
  41f3e4:	pop    es
  41f3e5:	jl     0x41f3bd
  41f3e7:	sbb    cl,BYTE PTR [ecx+ebx*2-0x250a5bac]
  41f3ee:	out    dx,al
  41f3ef:	pop    ss
  41f3f0:	ret    
  41f3f1:	push   edi
  41f3f2:	push   esi
  41f3f3:	data16 and al,0x2d
  41f3f6:	inc    ebp
  41f3f7:	pop    esp
  41f3f8:	and    DWORD PTR [eax+eiz*2+0x2c],edx
  41f3fc:	mov    ch,0xb0
  41f3fe:	jns    0x41f3d7
  41f400:	repz dec ebp
  41f402:	mov    BYTE PTR [ecx-0x7c499f05],dl
  41f408:	jl     0x41f3ee
  41f40a:	inc    ebp
  41f40b:	jmp    0x41f3a0
  41f40d:	inc    eax
  41f40e:	sbb    ah,BYTE PTR [edi]
  41f410:	sbb    dh,BYTE PTR [edx+0x55]
  41f413:	das    
  41f414:	mov    ch,BYTE PTR ds:0xc004df52
  41f41a:	(bad)  
  41f41b:	xor    eax,0x66ac6e8e
  41f420:	out    dx,eax
  41f421:	pop    ecx
  41f422:	nop
  41f423:	scas   eax,DWORD PTR es:[edi]
  41f424:	sbb    dh,dh
  41f426:	sahf   
  41f427:	cmp    edi,esi
  41f429:	push   esp
  41f42a:	xor    DWORD PTR [ecx+0x325bd929],0x293fb155
  41f434:	dec    edx
  41f435:	xchg   ecx,eax
  41f436:	es adc al,0x49
  41f439:	fldenv [ebx-0x23b6574d]
  41f43f:	jno    0x41f4b7
  41f441:	fst    DWORD PTR [ecx-0x3b]
  41f444:	icebp  
  41f445:	rcr    BYTE PTR [eax],cl
  41f447:	dec    ebp
  41f448:	daa    
  41f449:	(bad)  
  41f44a:	push   edi
  41f44b:	mov    eax,ds:0x8447e269
  41f450:	pop    esi
  41f451:	fsubr  DWORD PTR [ecx-0x2b0d2d96]
  41f457:	data16 sahf 
  41f459:	mov    eax,ds:0xa2281503
  41f45e:	fwait
  41f45f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f460:	lea    ebx,[ecx-0x78]
  41f463:	sti    
  41f464:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f465:	adc    bl,BYTE PTR ds:0x19768670
  41f46b:	outs   dx,BYTE PTR ds:[esi]
  41f46c:	sar    BYTE PTR [ecx-0x6a95bb53],0xcd
  41f473:	(bad)  
  41f474:	mov    ebp,0xe4e148ab
  41f479:	push   ecx
  41f47a:	retf   
  41f47b:	dec    eax
  41f47c:	mov    dh,0x92
  41f47e:	je     0x41f423
  41f480:	sahf   
  41f481:	ins    DWORD PTR es:[edi],dx
  41f482:	dec    ebx
  41f483:	in     al,dx
  41f484:	cli    
  41f485:	daa    
  41f486:	sbb    ebp,DWORD PTR [eax+0x1a]
  41f489:	dec    esp
  41f48a:	push   esp
  41f48b:	leave  
  41f48c:	xor    eax,0x6e1ba8b2
  41f491:	or     DWORD PTR [eax],esi
  41f493:	push   edx
  41f494:	cwde   
  41f495:	dec    eax
  41f496:	push   ss
  41f497:	test   eax,0x85d6ef1a
  41f49c:	ins    DWORD PTR es:[edi],dx
  41f49d:	cmp    al,0xb8
  41f49f:	and    dh,BYTE PTR [esi-0x47]
  41f4a2:	xchg   edx,eax
  41f4a3:	adc    cl,BYTE PTR [esp+ebp*8]
  41f4a6:	loope  0x41f511
  41f4a8:	rcr    BYTE PTR [edi],cl
  41f4aa:	in     al,dx
  41f4ab:	mov    dl,0xf9
  41f4ad:	fsubp  st(7),st
  41f4af:	lea    edi,[esp+ecx*4+0x48]
  41f4b3:	sub    al,0x37
  41f4b5:	pop    edi
  41f4b6:	mov    bh,0xdc
  41f4b8:	daa    
  41f4b9:	ss aad 0x66
  41f4bc:	leave  
  41f4bd:	push   ss
  41f4be:	jmp    0x62ee:0xdcda1a20
  41f4c5:	imul   ecx,DWORD PTR [edi-0x9ad95bc],0x1bf6cc2
  41f4cf:	scas   al,BYTE PTR es:[di]
  41f4d1:	sbb    eax,0x1536e676
  41f4d6:	retf   0x1a57
  41f4d9:	cwde   
  41f4da:	aas    
  41f4db:	aad    0x7e
  41f4dd:	leave  
  41f4de:	call   0x804121c7
  41f4e3:	loop   0x41f4b7
  41f4e5:	fxch   st(5)
  41f4e7:	mov    al,ds:0x93360ff4
  41f4ec:	sbb    ch,cl
  41f4ee:	inc    ecx
  41f4ef:	or     DWORD PTR [esi-0x1e],esp
  41f4f2:	pop    esp
  41f4f3:	das    
  41f4f4:	scas   eax,DWORD PTR es:[edi]
  41f4f5:	retf   
  41f4f6:	push   edx
  41f4f7:	inc    edx
  41f4f8:	pop    esp
  41f4f9:	add    DWORD PTR [ecx+0x66],esi
  41f4fc:	pop    ss
  41f4fd:	ret    
  41f4fe:	test   al,0xd9
  41f500:	push   0xffffffaf
  41f502:	pusha  
  41f503:	sbb    ebx,DWORD PTR [edx]
  41f505:	push   esp
  41f506:	lock sar ch,cl
  41f509:	das    
  41f50a:	retf   
  41f50b:	loopne 0x41f4a7
  41f50d:	fnstenv [ebx+eax*2-0x29cd7f13]
  41f514:	cmp    ah,BYTE PTR [eax+0x3cacfc34]
  41f51a:	dec    eax
  41f51b:	sub    DWORD PTR [edi-0x9],esp
  41f51e:	mov    ebp,0xb62f4d7b
  41f523:	xor    ax,0xf8a8
  41f527:	xchg   edi,eax
  41f528:	mov    ss,WORD PTR [eax-0x3f]
  41f52b:	inc    edi
  41f52c:	jp     0x41f53f
  41f52e:	xchg   BYTE PTR [eax+esi*8],dl
  41f531:	xor    eax,0xb2258387
  41f536:	in     al,0x39
  41f538:	push   esi
  41f539:	lods   eax,DWORD PTR ds:[esi]
  41f53a:	or     esi,DWORD PTR [ebx+0x1d]
  41f53d:	xlat   BYTE PTR ds:[ebx]
  41f53e:	adc    ch,BYTE PTR [edx-0x1f]
  41f541:	push   ecx
  41f542:	and    ebx,DWORD PTR [edi-0x1c17514a]
  41f548:	fs cmc 
  41f54a:	test   BYTE PTR [ebp+0x5a],bl
  41f54d:	sbb    DWORD PTR [edi-0x36],edx
  41f550:	push   es
  41f551:	inc    edx
  41f552:	or     BYTE PTR [ecx+0x1b],bh
  41f555:	mov    eax,ds:0x694166a6
  41f55a:	mov    DWORD PTR [eax+0x1a],eax
  41f55d:	popa   
  41f55e:	pop    esp
  41f55f:	arpl   WORD PTR [ebp+0x2d5586ef],di
  41f565:	fstp   QWORD PTR [ecx-0x22a1914c]
  41f56b:	adc    BYTE PTR ds:[esi+0x6b31e655],dh
  41f572:	sbb    esi,DWORD PTR [ebp-0x35]
  41f575:	popf   
  41f576:	in     al,dx
  41f577:	fist   DWORD PTR [eax+eiz*8+0x7286312f]
  41f57e:	cli    
  41f57f:	ud1    ebx,DWORD PTR [esi]
  41f582:	stos   DWORD PTR es:[edi],eax
  41f583:	push   es
  41f584:	sbb    ch,dh
  41f586:	dec    eax
  41f587:	mov    eax,ds:0xaab3b36b
  41f58c:	leave  
  41f58d:	nop
  41f58e:	retf   
  41f58f:	cld    
  41f590:	sub    eax,0x1af4a0b5
  41f595:	jne    0x41f560
  41f597:	xor    BYTE PTR [ebx+eiz*8],dl
  41f59a:	sub    edx,edi
  41f59c:	pop    ecx
  41f59d:	ins    DWORD PTR es:[edi],dx
  41f59e:	enter  0xcf66,0x3d
  41f5a2:	lea    edx,[edi-0x43cad4e6]
  41f5a8:	imul   ebx,DWORD PTR ds:0x131f8fe0,0xffffffe1
  41f5af:	stc    
  41f5b0:	call   0x8b39:0x94d7963a
  41f5b7:	pop    eax
  41f5b8:	sbb    ah,ah
  41f5ba:	mov    ebx,0x807fa943
  41f5bf:	out    dx,al
  41f5c0:	adc    dl,bl
  41f5c2:	cmp    BYTE PTR [edi-0x7],bh
  41f5c5:	into   
  41f5c6:	sbb    al,0x24
  41f5c8:	idiv   BYTE PTR [eax]
  41f5ca:	or     BYTE PTR [esi+eiz*8+0xa4c4ef8],0x4d
  41f5d2:	pop    esp
  41f5d3:	aam    0xc1
  41f5d5:	fnstenv [esi]
  41f5d7:	mov    ecx,DWORD PTR [edi-0x75995a7]
  41f5dd:	lea    edi,[edi-0x47fae3db]
  41f5e3:	inc    ecx
  41f5e4:	jg     0x41f584
  41f5e6:	test   BYTE PTR [eax],bh
  41f5e8:	push   ds
  41f5e9:	(bad)  
  41f5ea:	sti    
  41f5eb:	inc    esi
  41f5ec:	addr16 aas 
  41f5ee:	or     DWORD PTR [eax+0x72],ebp
  41f5f1:	or     al,0x35
  41f5f3:	fwait
  41f5f4:	or     al,0x71
  41f5f6:	sbb    BYTE PTR [edi-0x57],dl
  41f5f9:	mov    eax,0xd7d37d48
  41f5fe:	pop    ebx
  41f5ff:	dec    edi
  41f600:	dec    edx
  41f601:	mov    ah,0xc6
  41f603:	enterw 0xaec9,0x7e
  41f608:	sbb    ch,BYTE PTR [ebp+0x1b269316]
  41f60e:	ret    0x6c17
  41f611:	(bad)  [ecx+ecx*1]
  41f614:	add    al,0xdc
  41f616:	stos   DWORD PTR es:[edi],eax
  41f617:	fwait
  41f618:	adc    eax,edx
  41f61a:	dec    ecx
  41f61b:	or     al,0x16
  41f61d:	leave  
  41f61e:	dec    ecx
  41f61f:	test   edx,ebx
  41f621:	fdivp  st(4),st
  41f623:	dec    ecx
  41f624:	push   es
  41f625:	and    esp,DWORD PTR [ecx]
  41f627:	lods   eax,DWORD PTR ds:[esi]
  41f628:	into   
  41f629:	mov    ebp,0x884166e7
  41f62e:	push   esp
  41f62f:	sbb    DWORD PTR [edx],0xffffffa1
  41f632:	popf   
  41f633:	pushf  
  41f634:	xchg   esp,eax
  41f635:	jg     0x41f5cb
  41f637:	cmp    DWORD PTR [edx-0x6253d27],ebp
  41f63d:	scas   al,BYTE PTR es:[edi]
  41f63e:	xor    ecx,DWORD PTR [edi-0xf1c195e]
  41f644:	sbb    al,BYTE PTR [edi+0x2c]
  41f647:	and    al,0x82
  41f649:	cmp    eax,0xd9b3cbb4
  41f64e:	sahf   
  41f64f:	mov    esi,DWORD PTR [esp+ecx*2]
  41f652:	jmp    0x41f6cc
  41f654:	jmp    0x909e0cd9
  41f659:	lock inc edi
  41f65b:	les    edi,FWORD PTR [esi]
  41f65d:	jo     0x41f619
  41f65f:	pop    eax
  41f660:	jo     0x41f6d4
  41f662:	add    eax,0xf48bb867
  41f667:	outs   dx,DWORD PTR ds:[esi]
  41f668:	sbb    dl,BYTE PTR ds:0x929e2980
  41f66e:	mov    esp,0x4fda7e2a
  41f673:	ins    DWORD PTR es:[edi],dx
  41f674:	icebp  
  41f675:	mov    bl,0x5b
  41f677:	sbb    esp,DWORD PTR [edi-0x286b6d3c]
  41f67d:	xchg   BYTE PTR [eax],ah
  41f67f:	js     0x41f62a
  41f681:	ds dec eax
  41f683:	and    al,0x47
  41f685:	retf   
  41f686:	daa    
  41f687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f688:	hlt    
  41f689:	push   esi
  41f68a:	xchg   ecx,eax
  41f68b:	pushw  ds
  41f68d:	mov    cl,0x81
  41f68f:	imul   ebp,DWORD PTR [edi*1-0x3be50713],0xffffff9c
  41f697:	xlat   BYTE PTR ds:[ebx]
  41f698:	icebp  
  41f699:	add    DWORD PTR [ebp+0x5f],eax
  41f69c:	mov    ebx,0x8d66e499
  41f6a1:	jno    0x41f68d
  41f6a3:	test   BYTE PTR [edx],bl
  41f6a5:	pop    es
  41f6a6:	stos   BYTE PTR es:[edi],al
  41f6a7:	loopne 0x41f6ae
  41f6a9:	mov    ebx,0xd95d8949
  41f6ae:	cmp    esi,DWORD PTR [edi]
  41f6b0:	inc    ebp
  41f6b1:	fcomp  QWORD PTR ds:0x1a7488c4
  41f6b7:	xchg   esi,eax
  41f6b8:	pop    ecx
  41f6b9:	imul   esp,DWORD PTR [ebp-0x24],0xcc565978
  41f6c0:	adc    DWORD PTR [edx-0xd],ebx
  41f6c3:	cwde   
  41f6c4:	gs fld st(4)
  41f6c7:	dec    edx
  41f6c8:	push   esp
  41f6c9:	cwde   
  41f6ca:	mov    ds:0xaa5f3e65,al
  41f6cf:	inc    esi
  41f6d0:	mov    dh,0x6
  41f6d2:	dec    eax
  41f6d3:	ret    
  41f6d4:	iret   
  41f6d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6d6:	int    0x2c
  41f6d8:	cmc    
  41f6d9:	das    
  41f6da:	mov    edx,0x4850dcc2
  41f6df:	imul   ebx,ecx,0xffffffbf
  41f6e2:	call   0x9a5d:0x48794c35
  41f6e9:	jl     0x41f6c0
  41f6eb:	cli    
  41f6ec:	sub    al,0xe0
  41f6ee:	push   ds
  41f6ef:	sbb    ebx,DWORD PTR [bx+si-0x36]
  41f6f3:	sbb    ah,BYTE PTR es:[esi+0x7172bc9a]
  41f6fa:	push   cs
  41f6fb:	dec    ecx
  41f6fc:	leave  
  41f6fd:	loopne 0x41f6bc
  41f6ff:	imul   esi,DWORD PTR gs:[edx],0xffffffd7
  41f703:	add    dh,dl
  41f705:	push   0x2c
  41f707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f708:	or     ch,BYTE PTR [ecx-0x3883e2c2]
  41f70e:	dec    eax
  41f70f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f710:	jge    0x41f726
  41f712:	ret    
  41f713:	fs adc esi,ebx
  41f716:	pop    ss
  41f717:	shr    BYTE PTR [bp+di],cl
  41f71a:	ins    BYTE PTR es:[edi],dx
  41f71b:	stos   DWORD PTR es:[edi],eax
  41f71c:	sbb    ch,bh
  41f71e:	inc    ecx
  41f71f:	loope  0x41f741
  41f721:	inc    edi
  41f722:	inc    ecx
  41f723:	scas   eax,DWORD PTR es:[edi]
  41f724:	dec    ebp
  41f725:	fnstenv [edx]
  41f727:	sti    
  41f728:	xchg   edx,eax
  41f729:	adc    eax,0x71364723
  41f72e:	out    dx,eax
  41f72f:	push   ebx
  41f730:	test   eax,0xd36d4ba7
  41f735:	popa   
  41f736:	jmp    0x41f6ec
  41f738:	sub    eax,0xeb5239dc
  41f73d:	jbe    0x41f771
  41f73f:	sub    ah,dl
  41f741:	ins    BYTE PTR es:[edi],dx
  41f742:	cmp    eax,0x9842c33
  41f747:	or     DWORD PTR [esi],ebx
  41f749:	jecxz  0x41f72a
  41f74b:	cmp    ecx,ecx
  41f74d:	cdq    
  41f74e:	fwait
  41f74f:	call   0x3009f3b4
  41f754:	jb     0x41f6e3
  41f756:	mov    edx,0xa16da991
  41f75b:	mov    ds:0xb3b5da11,al
  41f760:	cdq    
  41f761:	je     0x41f71c
  41f763:	lods   eax,DWORD PTR ds:[esi]
  41f764:	jle    0x41f73f
  41f766:	sub    edx,eax
  41f768:	into   
  41f769:	ret    0x9bd6
  41f76c:	sbb    eax,0xd5562d05
  41f771:	mov    BYTE PTR [eax+0x45],cl
  41f774:	ret    
  41f775:	test   BYTE PTR [ebx],0x7c
  41f778:	test   al,0xd7
  41f77a:	push   ebp
  41f77b:	data16 xor al,0x36
  41f77e:	mov    ebx,0xc1083318
  41f783:	or     esi,ebp
  41f785:	mov    al,ds:0xd9a32fd2
  41f78a:	ja     0x41f775
  41f78c:	enter  0x304f,0xad
  41f790:	std    
  41f791:	aam    0xf5
  41f793:	xchg   ecx,eax
  41f794:	pushf  
  41f795:	icebp  
  41f796:	pushw  ss
  41f798:	cdq    
  41f799:	ja     0x41f7e3
  41f79b:	jnp    0x41f768
  41f79d:	fldpi  
  41f79f:	shl    DWORD PTR [bp+di],cl
  41f7a2:	dec    esp
  41f7a3:	mov    esi,0x72bb2ae4
  41f7a8:	iret   
  41f7a9:	pop    ecx
  41f7aa:	test   BYTE PTR [eax+ecx*2-0x2],bl
  41f7ae:	jmp    0x191b6eb8
  41f7b3:	xor    al,0x19
  41f7b5:	int    0x14
  41f7b7:	jl     0x41f7b1
  41f7b9:	add    ebx,DWORD PTR [esi-0x13]
  41f7bc:	mov    ebx,0x6a5a708b
  41f7c1:	pop    edi
  41f7c2:	dec    eax
  41f7c3:	mov    al,0x66
  41f7c5:	les    esi,FWORD PTR [edx+0x5ce4ada]
  41f7cb:	addr16 shr ebx,0x0
  41f7cf:	push   ebp
  41f7d0:	sbb    dh,BYTE PTR [esp+esi*4+0x683e2b8c]
  41f7d7:	outs   dx,DWORD PTR ds:[esi]
  41f7d8:	xchg   ebp,eax
  41f7d9:	fnstcw WORD PTR [edx-0x3e]
  41f7dc:	mov    ebx,0x9add089e
  41f7e1:	clc    
  41f7e2:	mov    dl,0xba
  41f7e4:	(bad)  
  41f7e5:	jmp    0xc78a5d31
  41f7ea:	int3   
  41f7eb:	xor    DWORD PTR [edi-0x6c996d20],eax
  41f7f1:	(bad)  
  41f7f2:	js     0x41f7f9
  41f7f4:	sbb    cl,BYTE PTR [edi]
  41f7f6:	sbb    BYTE PTR [ebx+0x31b993b],ah
  41f7fc:	fcmovnu st,st(1)
  41f7fe:	not    ah
  41f800:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f801:	push   esi
  41f802:	and    BYTE PTR [edi+0x6b],0x26
  41f806:	mov    ebp,0xc3971a4b
  41f80b:	jnp    0x41f7c3
  41f80d:	mov    al,ds:0xd96c6ee8
  41f812:	js     0x41f892
  41f814:	mov    esi,0x465fe635
  41f819:	fnstsw WORD PTR [esi]
  41f81b:	fistp  DWORD PTR [ecx-0x4576b7f4]
  41f821:	dec    esi
  41f822:	ret    
  41f823:	rol    edx,1
  41f825:	jg     0x41f7f4
  41f827:	xchg   bx,ax
  41f829:	enter  0xced3,0x1a
  41f82d:	jl     0x41f84f
  41f82f:	sub    bh,BYTE PTR ds:0x7f51fe8c
  41f835:	mov    edi,0x108a528c
  41f83a:	adc    ah,BYTE PTR [edi+0x6b]
  41f83d:	or     BYTE PTR [edi+0x73ef59a2],dl
  41f843:	les    eax,FWORD PTR [eax+edi*1+0x3a20e64a]
  41f84a:	xchg   ebp,eax
  41f84b:	xor    ebx,edx
  41f84d:	dec    edx
  41f84e:	push   cs
  41f84f:	addr16 pop edi
  41f851:	lods   eax,DWORD PTR ds:[esi]
  41f852:	pop    eax
  41f853:	dec    ebp
  41f854:	push   esi
  41f855:	mov    bl,0xba
  41f857:	pop    ds
  41f858:	xchg   ecx,eax
  41f859:	mov    bh,0x55
  41f85b:	add    al,0xbf
  41f85d:	sbb    al,0x88
  41f85f:	test   al,0x85
  41f861:	fsin   
  41f863:	sbb    DWORD PTR [edx+edx*4+0x39],esp
  41f867:	and    DWORD PTR [edx-0x1ab96544],esp
  41f86d:	dec    ebp
  41f86e:	dec    eax
  41f86f:	pop    ecx
  41f870:	cmp    DWORD PTR [edi+0x75b04779],ecx
  41f876:	lea    esp,[esi-0x61]
  41f879:	std    
  41f87a:	stos   BYTE PTR es:[edi],al
  41f87b:	imul   ebx,DWORD PTR [edx],0xdc499650
  41f881:	xchg   DWORD PTR [ecx+ecx*1+0x2ac1dc42],esp
  41f888:	jns    0x41f847
  41f88a:	mov    ds:0xc57b368d,al
  41f88f:	jle    0x41f86b
  41f891:	stc    
  41f892:	push   0x12f6188
  41f897:	inc    edx
  41f898:	adc    BYTE PTR [ebp+0x7566691a],cl
  41f89e:	fnstcw WORD PTR fs:[edi]
  41f8a1:	popf   
  41f8a2:	or     DWORD PTR [edi+0x53d6911a],eax
  41f8a8:	mov    ds:0xbf894356,eax
  41f8ad:	icebp  
  41f8ae:	pushf  
  41f8af:	jp     0x41f8fd
  41f8b1:	pop    ds
  41f8b2:	(bad)  
  41f8b4:	sbb    bh,cl
  41f8b6:	mov    dl,0x81
  41f8b8:	or     al,0x39
  41f8ba:	jo     0x41f861
  41f8bc:	hlt    
  41f8bd:	fsubr  QWORD PTR [ebx-0x6f]
  41f8c0:	or     DWORD PTR [ebx-0x44],ebp
  41f8c3:	daa    
  41f8c4:	mov    dl,0x7e
  41f8c6:	ja     0x41f87f
  41f8c8:	sbb    cl,BYTE PTR [ecx]
  41f8ca:	xchg   edi,eax
  41f8cb:	iret   
  41f8cc:	retf   
  41f8cd:	cs sbb eax,0x21f7702f
  41f8d3:	out    dx,eax
  41f8d4:	and    esp,ebx
  41f8d6:	les    edi,FWORD PTR [eax+ecx*1-0x13]
  41f8da:	fdiv   DWORD PTR [ebx]
  41f8dc:	neg    BYTE PTR [edi]
  41f8de:	fist   WORD PTR [esi]
  41f8e0:	sbb    ch,dh
  41f8e2:	sbb    al,0x79
  41f8e4:	dec    ebp
  41f8e5:	sbb    al,0xad
  41f8e7:	ins    BYTE PTR es:[edi],dx
  41f8e8:	xor    ecx,ebx
  41f8ea:	in     eax,dx
  41f8eb:	push   ds
  41f8ec:	aam    0xed
  41f8ee:	(bad)  
  41f8ef:	(bad)  
  41f8f0:	xchg   ecx,eax
  41f8f1:	scas   eax,DWORD PTR es:[edi]
  41f8f2:	les    ebx,FWORD PTR [edx+eax*1]
  41f8f5:	sbb    cl,BYTE PTR [eax-0x46]
  41f8f8:	(bad)  
  41f8f9:	xor    bh,ch
  41f8fb:	fisubr DWORD PTR [ebp-0x9]
  41f8fe:	adc    DWORD PTR [ebp+0x79],ebp
  41f901:	adc    esp,DWORD PTR [esi+eiz*1]
  41f904:	xchg   ebp,eax
  41f905:	retf   0x2848
  41f908:	(bad)  
  41f909:	ror    bh,cl
  41f90b:	jo     0x41f944
  41f90d:	inc    ecx
  41f90e:	daa    
  41f90f:	addr16 mov esp,0x1ddb95dc
  41f915:	add    bh,BYTE PTR [esi]
  41f917:	bound  eax,QWORD PTR [edi-0x40]
  41f91a:	mov    esi,0x7d4a61bc
  41f91f:	test   BYTE PTR [ebx],0xac
  41f922:	in     al,dx
  41f923:	lock cmp WORD PTR [ebp+0x11341a25],ax
  41f92b:	ins    BYTE PTR es:[edi],dx
  41f92c:	std    
  41f92d:	pop    ebx
  41f92e:	mov    al,ds:0xd0d9f8fd
  41f933:	nop
  41f934:	(bad)  
  41f935:	ja     0x41f9a8
  41f937:	cmp    ecx,edx
  41f939:	out    0x7d,al
  41f93b:	jo     0x41f999
  41f93d:	fisttp WORD PTR [eax+0x33]
  41f940:	mov    dl,0xa8
  41f942:	mov    edi,0x27d95ee5
  41f947:	mov    edx,0xc9b6cfa0
  41f94c:	adc    DWORD PTR [ecx+eax*8-0x17],0x1a
  41f951:	in     eax,dx
  41f952:	sub    edi,ecx
  41f954:	push   ds
  41f955:	pop    esi
  41f956:	enter  0xd9ca,0xd9
  41f95a:	pop    esi
  41f95b:	xor    ebp,edx
  41f95d:	push   edx
  41f95e:	fs ja  0x41f912
  41f961:	cmp    al,0xe1
  41f963:	test   dl,0x60
  41f966:	dec    eax
  41f967:	pusha  
  41f968:	inc    esp
  41f969:	inc    edi
  41f96a:	retf   0x7194
  41f96d:	push   edi
  41f96e:	cmp    eax,0x41953567
  41f973:	in     al,dx
  41f974:	sbb    dh,BYTE PTR [edi+0x2]
  41f977:	add    al,0x60
  41f979:	push   cs
  41f97a:	daa    
  41f97b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f97c:	push   ss
  41f97d:	fcmovu st,st(1)
  41f97f:	shl    BYTE PTR fs:[edi+0x54e01ddd],1
  41f986:	and    DWORD PTR [ecx-0x6b73261],0x3a077d6a
  41f990:	gs dec ebp
  41f992:	or     al,0x67
  41f994:	mov    ebp,0x910e9905
  41f999:	jns    0x41f95a
  41f99b:	inc    edx
  41f99c:	aas    
  41f99d:	mov    ebx,0x341e5248
  41f9a2:	xchg   esp,eax
  41f9a3:	ret    
  41f9a4:	test   BYTE PTR [eax-0x1e],dh
  41f9a7:	sub    ax,0xb400
  41f9ab:	call   0xf31cf1ca
  41f9b0:	jmp    0x41fa24
  41f9b2:	jne    0x41f973
  41f9b4:	loopne 0x41f9ac
  41f9b6:	push   esp
  41f9b7:	sbb    ah,dl
  41f9b9:	fyl2x  
  41f9bb:	lods   al,BYTE PTR ds:[esi]
  41f9bc:	(bad)  
  41f9bd:	je     0x41f9d9
  41f9bf:	(bad)  
  41f9c0:	sbb    ebx,DWORD PTR [edi+0x58]
  41f9c3:	adc    bh,BYTE PTR [ebx+0x5a7a24d1]
  41f9c9:	stos   DWORD PTR es:[edi],eax
  41f9ca:	xor    DWORD PTR [edx+esi*4],edx
  41f9cd:	fst    DWORD PTR ds:0x63c48269
  41f9d3:	push   ds
  41f9d4:	and    al,0x84
  41f9d6:	sub    eax,0x84597f55
  41f9db:	arpl   dx,bp
  41f9dd:	dec    ebp
  41f9de:	or     DWORD PTR [esi],esi
  41f9e0:	push   ss
  41f9e1:	push   ecx
  41f9e2:	rcl    BYTE PTR ds:0x8f227034,cl
  41f9e8:	test   DWORD PTR [edi-0xe],ebx
  41f9eb:	dec    bp
  41f9ed:	xchg   edx,eax
  41f9ee:	sbb    al,dh
  41f9f0:	xchg   ebp,eax
  41f9f1:	inc    ecx
  41f9f2:	jmp    0x4c025081
  41f9f7:	inc    esp
  41f9f8:	push   edi
  41f9f9:	lods   al,BYTE PTR ds:[esi]
  41f9fa:	sbb    esp,DWORD PTR [ebx-0x35]
  41f9fd:	mov    dl,0xac
  41f9ff:	cs test ah,cl
  41fa02:	cmc    
  41fa03:	ins    DWORD PTR es:[edi],dx
  41fa04:	xor    ecx,ebx
  41fa06:	jnp    0x41f9c2
  41fa08:	xor    BYTE PTR [edx+esi*2+0x5c],al
  41fa0c:	xor    eax,0x948e4afa
  41fa11:	mov    ecx,0xd93a77f7
  41fa16:	sub    ah,BYTE PTR [edi*4+0x6dbddc25]
  41fa1d:	(bad)  
  41fa1f:	jns    0x41f9dc
  41fa21:	loop   0x41fa6a
  41fa23:	pop    ss
  41fa24:	jge    0x41fa0c
  41fa26:	ja     0x41fa3b
  41fa28:	stos   DWORD PTR es:[edi],eax
  41fa29:	mov    ds:0x49a56740,al
  41fa2e:	push   es
  41fa2f:	cs sbb esi,edi
  41fa32:	cwde   
  41fa33:	scas   al,BYTE PTR es:[edi]
  41fa34:	rcl    al,0x5a
  41fa37:	push   esp
  41fa38:	cmp    cl,BYTE PTR [edi+0x25]
  41fa3b:	(bad)  
  41fa3c:	call   0xfc82:0x9566c73b
  41fa43:	sbb    cl,BYTE PTR fs:0x51733b8a
  41fa4a:	(bad)  
  41fa4b:	sbb    edx,DWORD PTR ds:0x60f9f3da
  41fa51:	inc    ebp
  41fa52:	jns    0x41fa6a
  41fa54:	jo     0x41fac5
  41fa56:	pop    ebx
  41fa57:	dec    ebp
  41fa58:	sahf   
  41fa59:	int    0x48
  41fa5b:	mov    esi,0x9f16d103
  41fa60:	pop    ss
  41fa61:	nop
  41fa62:	xchg   edi,eax
  41fa63:	data16 sub BYTE PTR [ebp+0x7e],0xbb
  41fa68:	sbb    bl,BYTE PTR [eax+ebx*2+0x20de7579]
  41fa6f:	mov    BYTE PTR ds:0x94a5b3e1,cl
  41fa75:	into   
  41fa76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fa77:	jae    0x41fa08
  41fa79:	in     eax,dx
  41fa7a:	push   cs
  41fa7b:	mov    bh,0x1a
  41fa7d:	jmp    0x812e:0x4d541ea9
  41fa84:	repnz fadd QWORD PTR [ebp+esi*2+0x72e1e4eb]
  41fa8c:	retf   0x5d84
  41fa8f:	neg    DWORD PTR [edx]
  41fa91:	rcl    BYTE PTR [ecx+0x39333f4b],cl
  41fa97:	mov    edx,0xad28da94
  41fa9c:	jae    0x41fb1a
  41fa9e:	jmp    0x8f59af40
  41faa3:	inc    ebx
  41faa4:	push   edi
  41faa5:	and    DWORD PTR [eax],ebp
  41faa7:	(bad)  
  41faa8:	sbb    dh,BYTE PTR [esp+eiz*2-0x78f0e6c6]
  41faaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fab0:	sbb    bl,dl
  41fab2:	cwde   
  41fab3:	mov    ecx,0x392ceb6c
  41fab8:	test   eax,0xedfa3f89
  41fabd:	bound  ecx,QWORD PTR [edx+0x20c35f66]
  41fac3:	and    bl,BYTE PTR [edx]
  41fac5:	iret   
  41fac6:	js     0x41fade
  41fac8:	loope  0x41fb2d
  41faca:	rcl    BYTE PTR [edx-0x6e8525eb],0xbe
  41fad1:	cmp    DWORD PTR [ebp+0x1f53f8df],0x75
  41fad8:	mov    DWORD PTR [esi],esp
  41fada:	dec    eax
  41fadb:	(bad)  
  41fadc:	cli    
  41fadd:	aad    0xe8
  41fadf:	jae    0x41fb3d
  41fae1:	sub    DWORD PTR [ebx-0x36deba9a],edi
  41fae7:	outs   dx,BYTE PTR ds:[esi]
  41fae8:	cli    
  41fae9:	push   esp
  41faea:	mov    eax,ds:0x48b6d549
  41faef:	or     BYTE PTR [edi-0x128b1849],bh
  41faf5:	call   0x432c:0x351e8396
  41fafc:	(bad)  
  41fafd:	(bad)  
  41faff:	mov    ah,BYTE PTR [esi+0x4c]
  41fb02:	adc    al,0xbf
  41fb04:	sbb    al,bl
  41fb06:	cmp    eax,0xd57fea14
  41fb0b:	bound  edi,QWORD PTR [esi+0x11]
  41fb0e:	cld    
  41fb0f:	nop
  41fb10:	sbb    al,BYTE PTR [edi+0x41f1289e]
  41fb16:	mov    eax,ds:0xe2c11a27
  41fb1b:	dec    edx
  41fb1c:	gs pushf 
  41fb1e:	mov    edi,0x4e533c16
  41fb23:	jmp    0x41faec
  41fb25:	lahf   
  41fb26:	push   edi
  41fb27:	js     0x41fb90
  41fb29:	(bad)
  41fb2d:	out    dx,eax
  41fb2e:	inc    edi
  41fb2f:	mov    DWORD PTR [edx],ebx
  41fb31:	pusha  
  41fb32:	push   ebx
  41fb33:	addr16 jns 0x41fba5
  41fb36:	jne    0x41faee
  41fb38:	(bad)  
  41fb39:	fidivr DWORD PTR [esi]
  41fb3b:	test   al,0x14
  41fb3d:	clc    
  41fb3e:	ffreep st(1)
  41fb40:	pop    esi
  41fb41:	lods   eax,DWORD PTR ds:[esi]
  41fb42:	dec    edx
  41fb43:	loop   0x41fb5f
  41fb45:	lods   eax,DWORD PTR ds:[esi]
  41fb46:	into   
  41fb47:	cdq    
  41fb48:	mov    cl,0xd1
  41fb4a:	sar    BYTE PTR [eax+ecx*4-0x27],1
  41fb4e:	loope  0x41fae7
  41fb50:	xor    edx,DWORD PTR [esi+0x36b50c0c]
  41fb56:	leave  
  41fb57:	cmp    DWORD PTR [ebp-0x45],esp
  41fb5a:	dec    eax
  41fb5b:	inc    ebx
  41fb5c:	fdivr  QWORD PTR [ecx-0x59626378]
  41fb62:	mov    dh,0x66
  41fb64:	and    al,0x4b
  41fb66:	aad    0x3e
  41fb68:	bound  esi,QWORD PTR [eax+0x6d]
  41fb6b:	mov    ecx,0xe5bfd71a
  41fb70:	imul   edi,DWORD PTR [edi-0x72],0x56d92516
  41fb77:	das    
  41fb78:	(bad)  
  41fb79:	pop    edx
  41fb7a:	loop   0x41fb24
  41fb7c:	(bad)
  41fb80:	daa    
  41fb81:	adc    DWORD PTR [ecx-0x3b],ecx
  41fb84:	dec    ecx
  41fb85:	cdq    
  41fb86:	jbe    0x41fb7e
  41fb88:	jbe    0x41fb63
  41fb8a:	aas    
  41fb8b:	popf   
  41fb8c:	fcmovnbe st,st(1)
  41fb8e:	pop    esi
  41fb8f:	sbb    eax,0x9b74975f
  41fb94:	inc    ebx
  41fb95:	fld    DWORD PTR [eax+0x283e0b0c]
  41fb9b:	rcr    BYTE PTR [eax+0x12312d9],1
  41fba1:	add    al,0x59
  41fba3:	jg     0x41fba9
  41fba5:	jbe    0x41fb88
  41fba7:	sbb    al,0xa9
  41fba9:	pop    edi
  41fbaa:	push   edi
  41fbab:	mov    dl,0x37
  41fbad:	ins    DWORD PTR es:[edi],dx
  41fbae:	bound  esp,QWORD PTR ds:0xfca5581d
  41fbb4:	xor    ecx,edx
  41fbb6:	mov    DWORD PTR [ebp+0x7003e093],edx
  41fbbc:	push   cs
  41fbbd:	dec    ebp
  41fbbe:	retf   0x6a53
  41fbc1:	xor    al,0x2f
  41fbc3:	push   0x2a7cfd2a
  41fbc8:	mov    edi,esp
  41fbca:	inc    edi
  41fbcb:	inc    ebx
  41fbcd:	ja     0x41fc44
  41fbcf:	loop   0x41fc19
  41fbd1:	sub    al,0x24
  41fbd3:	addr16 pop ds
  41fbd5:	aaa    
  41fbd6:	cmp    DWORD PTR [ebx],ecx
  41fbd8:	sub    DWORD PTR [ebp-0x26de2950],eax
  41fbde:	es jg  0x41fc14
  41fbe1:	pop    ebp
  41fbe2:	test   BYTE PTR [ebx-0x7d],0x26
  41fbe6:	and    ch,BYTE PTR [eax-0x6c]
  41fbe9:	int3   
  41fbea:	imul   edi,DWORD PTR [edx-0xd],0x552f2d91
  41fbf1:	jmp    0x41fc3a
  41fbf3:	adc    esi,0x4b775fc4
  41fbf9:	push   ebp
  41fbfa:	retf   
  41fbfb:	jl     0x41fbe4
  41fbfd:	fstp   DWORD PTR [ecx]
  41fbff:	jp     0x41fbdd
  41fc01:	cwde   
  41fc02:	mov    bh,0x93
  41fc04:	sbb    eax,0x995f42db
  41fc09:	imul   edi,edx,0x2c5da2f8
  41fc0f:	inc    edi
  41fc10:	or     DWORD PTR [ebp+0xb],ecx
  41fc13:	cmp    esi,DWORD PTR [di]
  41fc16:	shl    DWORD PTR [ecx],1
  41fc18:	(bad)  
  41fc19:	fnsave [ebx+0x4846520f]
  41fc1f:	jg     0x41fc09
  41fc21:	mov    bh,0xbc
  41fc23:	repnz sbb BYTE PTR [edx+0x66],dh
  41fc27:	data16 aas 
  41fc29:	loop   0x41fc32
  41fc2b:	push   edx
  41fc2c:	sbb    dh,bl
  41fc2e:	mov    ch,0x1f
  41fc30:	das    
  41fc31:	mov    al,ds:0xd94ca9f3
  41fc36:	daa    
  41fc37:	in     eax,dx
  41fc38:	(bad)  
  41fc39:	cmc    
  41fc3a:	xor    BYTE PTR [ebx+0x23],ah
  41fc3d:	and    DWORD PTR [esi+0x484219e3],ecx
  41fc43:	inc    edx
  41fc44:	shl    BYTE PTR [ebx],cl
  41fc46:	iret   
  41fc47:	xor    DWORD PTR [ebp-0x48],esp
  41fc4a:	pop    edi
  41fc4b:	mov    ds:0x9f481f5f,eax
  41fc50:	cdq    
  41fc51:	repz xor eax,0x47e1f060
  41fc57:	jmp    0xabde:0x8fa8d3d2
  41fc5e:	and    eax,0xeeac5f6e
  41fc63:	dec    eax
  41fc64:	sbb    bl,BYTE PTR ds:0xc02bae1
  41fc6a:	aam    0x84
  41fc6c:	jmp    0x989:0x49bcfdd9
  41fc73:	cld    
  41fc74:	push   eax
  41fc75:	pusha  
  41fc76:	inc    ebx
  41fc77:	xchg   ebp,eax
  41fc78:	inc    eax
  41fc79:	(bad)  
  41fc7a:	inc    eax
  41fc7b:	lea    esp,[ecx]
  41fc7d:	sti    
  41fc7e:	fwait
  41fc7f:	dec    esp
  41fc80:	push   0xfffffff6
  41fc82:	mov    bl,0x22
  41fc84:	retf   
  41fc85:	(bad)  [edi]
  41fc87:	jg     0x41fc73
  41fc89:	aad    0xce
  41fc8b:	(bad)  
  41fc8c:	lods   al,BYTE PTR ds:[esi]
  41fc8d:	sbb    edi,ebx
  41fc8f:	test   DWORD PTR [ebx],ebx
  41fc91:	sub    eax,0x9d255e67
  41fc96:	leave  
  41fc97:	jbe    0x41fc85
  41fc99:	cmp    esi,esp
  41fc9b:	pop    es
  41fc9c:	mov    dh,0xd9
  41fc9e:	add    DWORD PTR [edi],edx
  41fca0:	push   es
  41fca1:	out    0x5c,eax
  41fca3:	lods   eax,DWORD PTR ds:[esi]
  41fca4:	adc    BYTE PTR [ecx-0x62e5f950],ch
  41fcaa:	mov    ecx,0x9b9c3afd
  41fcaf:	pop    ebp
  41fcb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fcb1:	add    eax,0xd950e2ad
  41fcb6:	cmp    BYTE PTR [ebp-0x10],0xb0
  41fcba:	and    BYTE PTR [ebx-0x13d061be],bl
  41fcc0:	push   esi
  41fcc1:	mov    esi,0x8684fb58
  41fcc6:	out    0xe7,eax
  41fcc8:	shr    BYTE PTR [ebx],cl
  41fcca:	push   ebx
  41fccb:	les    ebx,FWORD PTR [esi-0x26bbd027]
  41fcd1:	fistp  WORD PTR [esp+edx*4-0x72]
  41fcd5:	xor    esi,DWORD PTR [ebx]
  41fcd7:	xlat   BYTE PTR ds:[ebx]
  41fcd8:	adc    eax,0xaf148b5
  41fcdd:	popf   
  41fcde:	push   cs
  41fcdf:	cmp    ecx,ecx
  41fce1:	sar    BYTE PTR [edi+ebp*4],cl
  41fce4:	test   eax,0xa1e74805
  41fce9:	add    DWORD PTR cs:[edx+esi*2+0x3b],esi
  41fcee:	dec    eax
  41fcef:	leave  
  41fcf0:	inc    ecx
  41fcf1:	lods   al,BYTE PTR ds:[esi]
  41fcf2:	adc    dl,0x5f
  41fcf5:	rol    DWORD PTR [ebp+ebp*2-0x4c3e868d],1
  41fcfc:	dec    esp
  41fcfd:	fwait
  41fcfe:	in     al,0x7e
  41fd00:	mov    eax,0x3a154f57
  41fd05:	xchg   esp,eax
  41fd06:	add    eax,0xc1d9cf68
  41fd0b:	fisttp WORD PTR [edi+0x4329a90e]
  41fd11:	add    ebp,ecx
  41fd13:	mov    edi,0x8d4d2ac7
  41fd18:	call   0xe8d9:0xd427a261
  41fd1f:	and    eax,0x9c55b0a7
  41fd24:	cmp    BYTE PTR ss:[di-0x1e23],al
  41fd2a:	inc    edi
  41fd2b:	out    dx,al
  41fd2c:	in     eax,dx
  41fd2d:	lea    edi,[edi+eax*4]
  41fd30:	jge    0x41fd71
  41fd32:	xor    BYTE PTR [edi+0x20],ah
  41fd35:	in     al,dx
  41fd36:	(bad)  
  41fd37:	rcr    BYTE PTR [edx],1
  41fd39:	push   ss
  41fd3a:	add    BYTE PTR [ebx+0x5ea244cc],ch
  41fd40:	inc    eax
  41fd41:	fst    DWORD PTR [eax+0x1757b7e6]
  41fd47:	xlat   BYTE PTR ds:[ebx]
  41fd48:	into   
  41fd49:	inc    ebp
  41fd4a:	jmp    0x41fd4e
  41fd4c:	sbb    bl,BYTE PTR [eax+0x4124ebc3]
  41fd52:	ss gs dec edi
  41fd55:	fldcw  WORD PTR [eax]
  41fd57:	jle    0x41fd89
  41fd59:	xchg   esp,eax
  41fd5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd5c:	and    ch,bl
  41fd5e:	fs (bad) 
  41fd60:	shl    dl,cl
  41fd62:	pop    ecx
  41fd63:	adc    BYTE PTR ds:0xf47455fb,0xd3
  41fd6a:	adc    al,0x29
  41fd6c:	out    0xfd,al
  41fd6e:	adc    ch,bl
  41fd70:	sti    
  41fd71:	call   0x46b6:0x57e866a7
  41fd78:	pop    ds
  41fd79:	pusha  
  41fd7a:	out    0x88,al
  41fd7c:	sub    al,ch
  41fd7e:	pop    ds
  41fd7f:	mov    ah,0xa8
  41fd81:	imul   ecx,eax,0x96767c8a
  41fd87:	data16 int3 
  41fd89:	inc    ecx
  41fd8a:	repnz xchg esp,eax
  41fd8c:	sbb    dh,BYTE PTR [ebx]
  41fd8e:	lods   eax,DWORD PTR ds:[esi]
  41fd8f:	xlat   BYTE PTR ss:[ebx]
  41fd91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd92:	mov    ebp,0xdd91da4
  41fd97:	es loope 0x41fdfa
  41fd9a:	je     0x41fdab
  41fd9c:	adc    ah,ch
  41fd9e:	push   eax
  41fd9f:	push   esp
  41fda0:	pusha  
  41fda1:	mov    BYTE PTR [eax+0x36],cl
  41fda4:	mov    ch,cl
  41fda6:	in     eax,dx
  41fda7:	mov    ebp,0x665dd917
  41fdac:	xchg   ebp,eax
  41fdad:	mov    edx,0x391ad13f
  41fdb2:	jbe    0x41fdd0
  41fdb4:	stc    
  41fdb5:	sbb    eax,0xd99f7a89
  41fdba:	enter  0x25f0,0xe8
  41fdbe:	push   esp
  41fdbf:	mov    ecx,esp
  41fdc1:	js     0x41fdb6
  41fdc3:	rcl    ecx,1
  41fdc5:	cli    
  41fdc6:	inc    edi
  41fdc7:	xor    al,0xd2
  41fdc9:	add    al,0xdb
  41fdcb:	out    0x82,al
  41fdcd:	dec    ebp
  41fdce:	sub    DWORD PTR [edi+0x49],esp
  41fdd1:	enter  0x8022,0x62
  41fdd5:	es sub dh,0x95
  41fdd9:	xlat   BYTE PTR ds:[ebx]
  41fdda:	sbb    eax,0xde1c7c67
  41fddf:	sbb    BYTE PTR [eax+0x13d9aed9],bh
  41fde5:	enter  0xc9d4,0xfb
  41fde9:	push   ss
  41fdea:	add    ah,bl
  41fdec:	and    eax,0xfaf9b9f9
  41fdf1:	fldpi  
  41fdf3:	sahf   
  41fdf4:	push   cs
  41fdf5:	leave  
  41fdf6:	repnz call 0x999a:0x74c6e38e
  41fdfe:	or     DWORD PTR [ebx-0x6fffa5df],0xfffffff7
  41fe05:	(bad)  
  41fe06:	dec    ecx
  41fe07:	js     0x41fe7b
  41fe09:	push   ebx
  41fe0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe0b:	dec    eax
  41fe0c:	xor    al,0xcb
  41fe0e:	xor    al,0xf0
  41fe10:	add    ebp,eax
  41fe12:	push   esi
  41fe13:	xlat   BYTE PTR ds:[ebx]
  41fe14:	xchg   edx,eax
  41fe15:	(bad)  
  41fe16:	ficomp DWORD PTR [ebp-0xf]
  41fe19:	pop    ecx
  41fe1a:	ins    BYTE PTR es:[edi],dx
  41fe1b:	cmp    DWORD PTR [ecx],eax
  41fe1d:	js     0x41fe04
  41fe1f:	or     BYTE PTR [ebx+0x4f],0x48
  41fe23:	ds cld 
  41fe25:	sub    BYTE PTR ds:0xf9714ab,bh
  41fe2b:	idiv   DWORD PTR [bp+di]
  41fe2e:	std    
  41fe2f:	rcl    DWORD PTR [ebx+0x1815b687],cl
  41fe35:	mov    ah,0x48
  41fe37:	es je  0x41feab
  41fe3a:	mov    BYTE PTR [edi+0x4d],dh
  41fe3d:	add    ebx,esi
  41fe3f:	out    dx,ax
  41fe41:	es into 
  41fe43:	pop    ebp
  41fe44:	pop    ds
  41fe45:	das    
  41fe46:	mov    esi,0x2fe505de
  41fe4b:	nop
  41fe4c:	out    0x5b,al
  41fe4e:	enter  0x8655,0x15
  41fe52:	test   al,0xa1
  41fe54:	jecxz  0x41fe0c
  41fe56:	dec    eax
  41fe57:	inc    edx
  41fe58:	add    bh,BYTE PTR [esi+0x7e24d202]
  41fe5e:	dec    eax
  41fe5f:	aad    0xf
  41fe61:	and    DWORD PTR [ebx-0x71],0x56
  41fe65:	neg    al
  41fe67:	popfw  
  41fe69:	push   edi
  41fe6a:	aam    0xd3
  41fe6c:	dec    edx
  41fe6d:	mov    ebx,0x8823b516
  41fe72:	fdiv   DWORD PTR [esi]
  41fe74:	mov    ds:0x766de85e,al
  41fe79:	mov    DWORD PTR ds:0x1f09a7ed,edx
  41fe7f:	ja     0x41fedf
  41fe81:	add    al,0x48
  41fe83:	mov    ds:0x48684fe9,al
  41fe88:	push   es
  41fe89:	fidiv  DWORD PTR [esi+0x5a]
  41fe8c:	ins    DWORD PTR es:[edi],dx
  41fe8d:	mov    al,0x15
  41fe8f:	loopne 0x41fe8c
  41fe91:	sub    BYTE PTR [esi],dh
  41fe93:	sbb    esi,esp
  41fe95:	mul    BYTE PTR [esi+0x69]
  41fe98:	enter  0xb85,0x5a
  41fe9c:	jbe    0x41fe44
  41fe9e:	ins    BYTE PTR es:[edi],dx
  41fe9f:	out    0x31,al
  41fea1:	pop    DWORD PTR cs:[ebx-0x19721a80]
  41fea8:	and    edi,edi
  41feaa:	adc    ch,dh
  41feac:	pop    eax
  41fead:	mov    ecx,DWORD PTR [eax+0x5d]
  41feb0:	test   BYTE PTR [edx+ebp*2+0x3e9183e6],ch
  41feb7:	addr16 clc 
  41feb9:	shl    DWORD PTR [eax-0x17],1
  41febc:	sbb    eax,0x79d7523d
  41fec1:	test   DWORD PTR [ebp+0x6f2d4f19],edi
  41fec7:	ss ja  0x41ff1d
  41feca:	aad    0x69
  41fecc:	or     DWORD PTR [esi+0x2d],edx
  41fecf:	xchg   ebx,eax
  41fed0:	in     al,dx
  41fed1:	pop    ebx
  41fed2:	inc    edi
  41fed3:	sbb    cl,BYTE PTR [bp+si+0x5090]
  41fed8:	pop    edx
  41fed9:	out    dx,al
  41feda:	cmc    
  41fedb:	sar    BYTE PTR [ecx],cl
  41fedd:	loopne 0x41ff46
  41fedf:	je     0x41febe
  41fee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fee2:	cmp    al,0xb1
  41fee4:	jl     0x41ff1e
  41fee6:	xor    bh,dh
  41fee8:	sub    DWORD PTR [eax+0x22503f22],edi
  41feee:	fdivr  QWORD PTR [edi+0x66adafaf]
  41fef4:	mov    ds:0x7a16ead9,eax
  41fef9:	adc    BYTE PTR [esi],ah
  41fefb:	jecxz  0x41fe9d
  41fefd:	pop    ss
  41fefe:	cmp    DWORD PTR [edi+edi*2-0x6297b7c3],0x59
  41ff06:	cmp    edi,DWORD PTR [ecx+0x69f6fd34]
  41ff0c:	(bad)  
  41ff0d:	jmp    0x5e430e23
  41ff12:	xor    BYTE PTR [ebx+0x4b],dh
  41ff15:	cs dec eax
  41ff17:	mov    DWORD PTR [ebx],esi
  41ff19:	cli    
  41ff1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff1b:	mov    ah,0x70
  41ff1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff1e:	repnz dec di
  41ff21:	push   es
  41ff22:	inc    ebx
  41ff23:	pop    esp
  41ff24:	cs jae 0x41ff8f
  41ff27:	adc    dl,0xd9
  41ff2a:	sahf   
  41ff2b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff2c:	jnp    0x41fef9
  41ff2e:	into   
  41ff2f:	jb     0x41fedf
  41ff31:	std    
  41ff32:	std    
  41ff33:	cs inc ebp
  41ff35:	fldcw  WORD PTR [esi-0xbd6949e]
  41ff3b:	sbb    ebx,DWORD PTR ds:0x6043d640
  41ff42:	sar    DWORD PTR [eax],cl
  41ff44:	jp     0x41ff62
  41ff46:	cmp    bl,BYTE PTR [edx+ecx*4]
  41ff49:	loopne 0x41ff71
  41ff4b:	addr16 addr16 ja 0x41ffa7
  41ff4f:	pop    ebx
  41ff50:	sbb    bl,BYTE PTR [edx-0x7f197999]
  41ff56:	ja     0x41ff96
  41ff58:	popf   
  41ff59:	fidivr DWORD PTR [ecx-0x5dce014c]
  41ff5f:	ret    
  41ff60:	lock mov cl,0x72
  41ff63:	mov    ds:0x9f3eb21a,eax
  41ff68:	or     al,0x4c
  41ff6a:	dec    ebx
  41ff6b:	int3   
  41ff6c:	(bad)  
  41ff6e:	test   DWORD PTR [esi+ecx*8-0x2fb574a5],ebx
  41ff75:	repz add eax,0x480e87a0
  41ff7b:	mov    dh,0x68
  41ff7d:	push   edi
  41ff7e:	add    eax,0xa351bb0c
  41ff83:	je     0x41ff5f
  41ff85:	inc    ecx
  41ff86:	mov    eax,0xa578216b
  41ff8b:	mov    ds:0x9b488902,al
  41ff90:	fld    TBYTE PTR es:[ecx]
  41ff93:	mov    WORD PTR [eax],?
  41ff95:	gs sti 
  41ff97:	popw   ds
  41ff99:	das    
  41ff9a:	fstp   TBYTE PTR [edi+0x1a]
  41ff9d:	push   0x43
  41ff9f:	leave  
  41ffa0:	mov    esi,0x2f4c4e30
  41ffa5:	fld    st(5)
  41ffa7:	pusha  
  41ffa8:	sub    dh,dh
  41ffaa:	add    eax,0xba84c70e
  41ffaf:	shl    edx,cl
  41ffb1:	add    DWORD PTR [edi+0x64],ecx
  41ffb4:	or     ch,ah
  41ffb6:	div    BYTE PTR [esi+ebx*2+0x57e4cd9]
  41ffbd:	xor    cl,bh
  41ffbf:	sbb    bl,BYTE PTR [edx-0x23]
  41ffc2:	(bad)  
  41ffc3:	mov    dh,BYTE PTR [eax-0x121eb69a]
  41ffc9:	sbb    al,ah
  41ffcb:	test   BYTE PTR [ecx],bl
  41ffcd:	(bad)  [edi]
  41ffcf:	ror    ch,cl
  41ffd1:	push   cs
  41ffd2:	xor    al,0x11
  41ffd4:	jmp    0x9c6b3a13
  41ffd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffda:	jecxz  0x42000e
  41ffdc:	ds stos BYTE PTR es:[edi],al
  41ffde:	dec    eax
  41ffdf:	(bad)  
  41ffe0:	pop    esp
  41ffe1:	sbb    al,0x3d
  41ffe3:	and    dh,BYTE PTR [edi-0x39]
  41ffe6:	push   eax
  41ffe7:	sub    ax,0xff06
  41ffeb:	int3   
  41ffec:	cld    
  41ffed:	rol    DWORD PTR [eax],cl
  41ffef:	push   0x38
  41fff1:	sahf   
  41fff2:	(bad)  
  41fff3:	shr    al,1
  41fff5:	pusha  
  41fff6:	mov    DWORD PTR [edx-0x599b3bef],ecx
  41fffc:	out    0xd9,eax
  41fffe:	jbe    0x41ffcd
  420000:	stos   DWORD PTR es:[edi],eax
  420001:	cmp    eax,0x2f1e524
  420006:	push   eax
  420007:	ss cld 
  420009:	fld    DWORD PTR [ebx-0x5b78e15b]
  42000f:	jb     0x420067
  420011:	(bad)  [ecx]
  420013:	mov    edx,0xa783a61b
  420018:	inc    esi
  420019:	pop    ss
  42001a:	(bad)
  42001d:	int    0x49
  42001f:	cmp    cl,dl
  420021:	stos   BYTE PTR es:[edi],al
  420022:	lea    ecx,cs:[edx]
  420025:	adc    bh,BYTE PTR [ecx]
  420027:	mov    bh,0xc2
  420029:	xor    bh,BYTE PTR [edi]
  42002b:	outs   dx,BYTE PTR ds:[esi]
  42002c:	mov    eax,DWORD PTR [eax]
  42002e:	and    dl,0xca
  420031:	push   edx
  420032:	sub    ch,BYTE PTR [eax-0x296b7c67]
  420038:	iret   
  420039:	mov    eax,ds:0xc9425366
  42003e:	mov    BYTE PTR [ebx+esi*4-0x20],ch
  420042:	sbb    eax,0x4a14bdb9
  420047:	call   0x6707d10e
  42004c:	sbb    bl,BYTE PTR [edi+0x577af4d9]
  420052:	pop    esp
  420053:	fcmovne st,st(3)
  420055:	fstp   DWORD PTR [edi]
  420057:	out    dx,al
  420058:	cmp    eax,DWORD PTR [eax+0x2d6b99a9]
  42005e:	push   esp
  42005f:	rcl    BYTE PTR [esi+0x1f],1
  420062:	dec    ebx
  420063:	and    ebx,DWORD PTR [edi-0x37]
  420066:	fild   QWORD PTR [eax+0x4d08e8c9]
  42006c:	push   0xffffffe4
  42006e:	sub    ebp,DWORD PTR [edi+0x7a07fa88]
  420074:	sbb    eax,0x378c5dd7
  420079:	ret    
  42007a:	add    ecx,DWORD PTR [edi+0x36]
  42007d:	cmp    DWORD PTR [ebx+0x10],ecx
  420080:	xor    cl,bl
  420082:	nop
  420083:	hlt    
  420084:	fcmovbe st,st(1)
  420086:	pop    ebx
  420087:	cmp    BYTE PTR [esi],bl
  420089:	lods   eax,DWORD PTR ds:[esi]
  42008a:	push   0x41
  42008c:	or     bh,0x48
  42008f:	sub    esi,DWORD PTR [esi+esi*1+0x7016cded]
  420096:	std    
  420097:	xchg   esp,eax
  420098:	fdiv   DWORD PTR [ecx]
  42009a:	jns    0x420102
  42009c:	jge    0x420065
  42009e:	mov    ah,0xf1
  4200a0:	(bad)
  4200a5:	pop    ecx
  4200a6:	xchg   DWORD PTR [ecx+0x6d4bc52c],ecx
  4200ac:	int    0x39
  4200ae:	sbb    al,0x36
  4200b0:	ins    BYTE PTR es:[edi],dx
  4200b1:	nop
  4200b2:	jno    0x4200cb
  4200b4:	push   ss
  4200b5:	lds    esi,FWORD PTR [eax+0x2c]
  4200b8:	push   0xffffffd8
  4200ba:	dec    eax
  4200bb:	pop    esi
  4200bc:	call   0x8574:0xbdae8a0f
  4200c3:	data16 add BYTE PTR [ebp+esi*8+0x58221ae8],ah
  4200cb:	cs ins DWORD PTR es:[edi],dx
  4200cd:	in     al,0x22
  4200cf:	jp     0x4200c9
  4200d1:	leave  
  4200d2:	xchg   esp,eax
  4200d3:	jmp    0x4200bd
  4200d5:	fldcw  WORD PTR [esi-0x1c]
  4200d8:	sbb    DWORD PTR [esi-0x1372f4fe],edi
  4200de:	fsubrp st(6),st
  4200e0:	jne    0x4200a8
  4200e2:	cmp    cl,dl
  4200e4:	mov    esp,0xc67ce7d9
  4200e9:	cmp    DWORD PTR [edx+edx*8-0x45498ae3],ebp
  4200f0:	pop    ecx
  4200f1:	mov    dh,0x56
  4200f3:	add    al,0x1f
  4200f5:	pop    eax
  4200f6:	jnp    0x42013e
  4200f8:	push   ss
  4200f9:	fistp  DWORD PTR [ecx]
  4200fb:	and    al,0xca
  4200fd:	lods   eax,DWORD PTR ds:[esi]
  4200fe:	inc    ebp
  4200ff:	cmp    ecx,0xffffffb8
  420102:	mov    dl,0x31
  420104:	iret   
  420105:	and    eax,0x6f145ad8
  42010a:	push   edi
  42010b:	mov    cl,0x74
  42010d:	cmp    edx,DWORD PTR [eax-0x3a]
  420110:	sub    bl,cl
  420112:	rol    DWORD PTR [ebx-0x29],cl
  420115:	loopne 0x4200bf
  420117:	loop   0x420104
  420119:	mov    ds:0x9b881b8d,al
  42011e:	push   esi
  42011f:	dec    ebp
  420120:	rcl    BYTE PTR [ebx-0x179cf926],cl
  420126:	test   DWORD PTR ds:0x89c6683e,0x26667aed
  420130:	xchg   BYTE PTR [eax-0x4ae55dd6],dh
  420136:	ret    0xd7a0
  420139:	fadd   QWORD PTR ds:0x16d937aa
  42013f:	xor    bh,BYTE PTR [edi-0x44f0a93e]
  420145:	mov    dl,0xd3
  420147:	or     DWORD PTR [ebx],ebp
  420149:	ds dec eax
  42014b:	pop    ecx
  42014c:	dec    eax
  42014d:	std    
  42014e:	sub    esp,DWORD PTR [eax+0x68335a66]
  420154:	xor    al,0xce
  420156:	sar    BYTE PTR [esi-0x792ea605],1
  42015c:	sbb    cl,cl
  42015e:	dec    eax
  42015f:	psrad  mm4,mm3
  420162:	dec    ebx
  420163:	fsubr  DWORD PTR [ecx-0x3c]
  420166:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420167:	ins    DWORD PTR es:[edi],dx
  420168:	and    DWORD PTR [ecx-0x79],ebx
  42016b:	cmp    DWORD PTR [eax],esi
  42016d:	inc    ecx
  42016e:	jle    0x420108
  420170:	xor    eax,0xa56b5654
  420175:	push   sp
  420177:	xchg   BYTE PTR [ecx-0x26],al
  42017a:	push   ebp
  42017b:	loop   0x4201e9
  42017d:	popa   
  42017e:	ss dec ebp
  420180:	test   DWORD PTR [esi-0x1241d082],ebx
  420186:	mov    ch,0x2a
  420188:	mov    dl,0x1b
  42018a:	dec    eax
  42018b:	pop    ebx
  42018c:	rcl    BYTE PTR [eax],0x4a
  42018f:	mov    esi,0x83f18ef4
  420194:	jp     0x4201c5
  420196:	lock xor WORD PTR [ecx-0x27c2844b],sp
  42019e:	dec    eax
  42019f:	cld    
  4201a0:	repnz sub BYTE PTR fs:[ebp-0x38],0xb2
  4201a6:	mov    edi,0x8f10f569
  4201ab:	sti    
  4201ac:	pop    ebx
  4201ad:	cmp    al,dh
  4201af:	mov    cl,ch
  4201b1:	sahf   
  4201b2:	push   esi
  4201b3:	jo     0x4201f5
  4201b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201b6:	xor    dh,BYTE PTR [esi]
  4201b8:	ficomp WORD PTR [ebx]
  4201ba:	and    BYTE PTR [edi-0x47],ah
  4201bd:	fnstcw WORD PTR [esi]
  4201bf:	inc    ebx
  4201c0:	shl    DWORD PTR [ebp+edx*8+0x7e],0x94
  4201c5:	in     al,dx
  4201c6:	push   esi
  4201c7:	retf   0x5b14
  4201ca:	dec    ecx
  4201cb:	lahf   
  4201cc:	lds    edx,FWORD PTR [edi+esi*4]
  4201cf:	jnp    0x42017b
  4201d1:	cld    
  4201d2:	inc    edx
  4201d3:	addr16 popf 
  4201d5:	xor    DWORD PTR [esp+eiz*8-0x60157696],0xdc33161a
  4201e0:	hlt    
  4201e1:	stc    
  4201e2:	cwde   
  4201e3:	sub    DWORD PTR [ecx-0x60593127],eax
  4201e9:	gs push 0xffffffd3
  4201ec:	sub    dx,WORD PTR [esi+0xe]
  4201f0:	stos   DWORD PTR es:[edi],eax
  4201f1:	sub    DWORD PTR [eax+0x30],ecx
  4201f4:	cdq    
  4201f5:	les    esp,FWORD PTR [edx+0x41d1c614]
  4201fb:	test   BYTE PTR [eax-0x37],bh
  4201fe:	push   esp
  4201ff:	out    0x65,al
  420201:	add    eax,0xa47d1a11
  420206:	dec    eax
  420207:	stos   BYTE PTR es:[edi],al
  420208:	jno    0x420200
  42020a:	add    eax,0x83369e2b
  42020f:	push   dx
  420211:	jo     0x4201fc
  420213:	sbb    al,0x1a
  420215:	imul   ebx,DWORD PTR [eax],0xffffffb8
  420218:	mov    bh,0x56
  42021a:	adc    bl,BYTE PTR [esi+0x661ddc60]
  420220:	sar    al,cl
  420222:	xlat   BYTE PTR ds:[ebx]
  420223:	inc    eax
  420224:	fiadd  DWORD PTR [eax]
  420226:	fs push esp
  420228:	sbb    ch,BYTE PTR [ebx]
  42022a:	sub    ebx,DWORD PTR [edi+edx*2-0x62]
  42022e:	scas   al,BYTE PTR es:[edi]
  42022f:	mov    ds:0x5310d98a,al
  420234:	add    DWORD PTR [eax],ebp
  420236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420237:	jg     0x42028e
  420239:	cwde   
  42023a:	adc    ebp,DWORD PTR [edx]
  42023c:	fs push ebp
  42023e:	dec    eax
  42023f:	(bad)
  420242:	jno    0x420253
  420244:	fbld   TBYTE PTR [esi+ecx*1+0x6a]
  420248:	ror    DWORD PTR ds:0x8007791e,0xd8
  42024f:	outs   dx,DWORD PTR ds:[esi]
  420250:	jne    0x4202a7
  420252:	dec    eax
  420253:	xlat   BYTE PTR ds:[ebx]
  420254:	test   al,0x8e
  420256:	imul   edx,DWORD PTR ds:[ebx],0xd566ae58
  42025d:	bound  edi,QWORD PTR [edi-0x8]
  420260:	sbb    al,al
  420262:	out    0x62,al
  420264:	and    eax,0x63477eb7
  420269:	fld    DWORD PTR [esi+0x2eccd695]
  42026f:	mov    esi,0xe92c0928
  420274:	fld    QWORD PTR [ebx+0x56f3cb48]
  42027a:	fwait
  42027b:	xchg   DWORD PTR [edx+0x166512e],esp
  420281:	xchg   ebp,eax
  420282:	pop    es
  420283:	cmp    al,0x56
  420285:	xlat   BYTE PTR ds:[ebx]
  420287:	ins    DWORD PTR es:[edi],dx
  420288:	sbb    ecx,edx
  42028a:	mov    edi,0xfe426ef4
  42028f:	(bad)  
  420290:	pop    edi
  420291:	loopne 0x4202e6
  420293:	sbb    ah,BYTE PTR [eax+0x230601dc]
  420299:	test   eax,0xb31ae6b9
  42029e:	lods   eax,DWORD PTR ds:[esi]
  42029f:	xchg   esp,eax
  4202a0:	push   0x1a
  4202a2:	jns    0x420309
  4202a4:	mov    bh,0xd9
  4202a6:	adc    DWORD PTR [esi],esi
  4202a8:	mov    ecx,0xb3ca5ad1
  4202ad:	sbb    eax,0xc12acdb
  4202b2:	shl    al,0x48
  4202b5:	jl     0x4202ff
  4202b7:	les    edi,FWORD PTR [ecx-0x20]
  4202ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4202bb:	loop   0x4202ce
  4202bd:	cmp    al,0x82
  4202bf:	or     DWORD PTR [bx],ebp
  4202c2:	(bad)  
  4202c3:	push   cs
  4202c4:	xor    al,0xf5
  4202c6:	ja     0x42030e
  4202c8:	enter  0x4ba4,0xe0
  4202cc:	mov    ds:0xdbae6099,al
  4202d1:	retf   
  4202d2:	mov    eax,0x2314c99a
  4202d7:	rcr    BYTE PTR ds:0xbb14,cl
  4202dc:	sbb    ch,BYTE PTR [ebx]
  4202de:	shl    al,0x9a
  4202e1:	sbb    DWORD PTR [edx],ebp
  4202e3:	and    al,0x5d
  4202e5:	(bad)  
  4202e7:	sub    eax,0x8c99ba83
  4202ec:	mov    edx,0x38ec462f
  4202f1:	pushf  
  4202f2:	dec    eax
  4202f3:	pushf  
  4202f4:	mov    ss,ebx
  4202f6:	mov    eax,0xf8ab0a94
  4202fb:	data16 (bad) 
  4202fd:	call   0x15f3:0x9fb28624
  420304:	sbb    al,0x27
  420306:	cmp    al,0x39
  420308:	shr    DWORD PTR [esi+0x70383d3e],1
  42030e:	inc    ebp
  42030f:	sub    bh,BYTE PTR [ecx-0x1fee27db]
  420315:	xor    esp,esp
  420317:	sub    ax,ax
  42031a:	sbb    ecx,DWORD PTR [esi]
  42031c:	sub    eax,0x1a17bfbd
  420321:	loopne 0x420385
  420323:	inc    esi
  420324:	sbb    DWORD PTR [edi-0x4b],esi
  420327:	fcomp  DWORD PTR [ecx+edi*1]
  42032a:	loop   0x420392
  42032c:	dec    ebx
  42032d:	jmp    0xb687:0x7a1a4ecd
  420334:	std    
  420335:	mov    ds:0xda1252a9,al
  42033a:	cmp    BYTE PTR [ebx+0x557deda4],ch
  420340:	fiadd  DWORD PTR [edx+0x4c82122a]
  420346:	dec    eax
  420347:	xchg   edi,eax
  420348:	scas   al,BYTE PTR es:[edi]
  420349:	ja     0x420397
  42034b:	mov    bl,0x6c
  42034d:	ss xchg ecx,eax
  42034f:	jne    0x42038b
  420351:	sub    eax,0x564986a1
  420356:	pop    esp
  420357:	dec    ebp
  420358:	std    
  420359:	imul   ecx,DWORD PTR [eax+0x4e],0x39
  42035d:	inc    eax
  42035e:	sbb    eax,0xe1bb095b
  420363:	pushw  0xd26
  420367:	cmp    eax,0x64ae191a
  42036c:	xchg   ecx,eax
  42036d:	xor    DWORD PTR [eax],esp
  42036f:	mov    cs,WORD PTR [edx-0x6f]
  420372:	mov    al,0x13
  420374:	icebp  
  420375:	sti    
  420376:	jg     0x4203ed
  420378:	jp     0x4203b5
  42037a:	xor    eax,0xe4c15347
  42037f:	mov    al,0xc1
  420381:	push   ss
  420382:	dec    ebx
  420383:	mov    dl,0x1f
  420385:	jno    0x4203d1
  420387:	ret    
  420388:	mov    esi,0x40cd4912
  42038d:	push   ebx
  42038e:	cs ret 0xad28
  420392:	mov    ah,0x66
  420394:	add    al,0xfe
  420396:	in     al,0x84
  420398:	stc    
  420399:	sbb    ecx,DWORD PTR [eax+0x35]
  42039c:	arpl   WORD PTR [edx],bp
  42039e:	lahf   
  42039f:	clc    
  4203a0:	aaa    
  4203a1:	inc    edx
  4203a2:	lds    esp,FWORD PTR [esi+0x8]
  4203a5:	(bad)  
  4203a6:	into   
  4203a7:	int    0x72
  4203a9:	mov    cl,BYTE PTR [ebp-0x4d0c69c3]
  4203af:	mov    ax,ds:0x2333b2c4
  4203b5:	inc    esp
  4203b6:	aaa    
  4203b7:	addr16 push esp
  4203b9:	aaa    
  4203ba:	nop
  4203bb:	call   FWORD PTR [edx]
  4203bd:	lea    esp,[eax]
  4203bf:	or     eax,0x8edd5a97
  4203c4:	jecxz  0x4203a6
  4203c6:	mov    ch,0xcb
  4203c8:	push   esi
  4203c9:	pusha  
  4203ca:	test   ch,0x9a
  4203cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203ce:	mov    ecx,0x98c9e497
  4203d3:	push   esi
  4203d4:	adc    al,BYTE PTR [ebx+0x48]
  4203d7:	mov    bl,0xf4
  4203d9:	retf   
  4203da:	sbb    ah,ah
  4203dc:	mov    ah,0x2c
  4203de:	lods   al,BYTE PTR ds:[esi]
  4203df:	data16 test al,0x49
  4203e2:	(bad)  
  4203e3:	dec    esi
  4203e4:	sbb    dh,BYTE PTR [esi]
  4203e6:	ja     0x42039d
  4203e8:	call   0x7d80e579
  4203ed:	clc    
  4203ee:	scas   al,BYTE PTR es:[edi]
  4203ef:	les    ecx,FWORD PTR [edi]
  4203f1:	sbb    al,BYTE PTR [edi+eax*1+0x42]
  4203f5:	adc    ecx,DWORD PTR [eiz*2+0x32a7671a]
  4203fc:	or     al,0xe5
  4203fe:	test   BYTE PTR ds:0x2ef3da31,bl
  420404:	les    ebx,FWORD PTR [ebx-0x3a2a4c2d]
  42040a:	das    
  42040b:	mov    ebp,0x3dd21129
  420410:	jnp    0x4203eb
  420412:	jp     0x420411
  420414:	xchg   esp,eax
  420415:	mov    BYTE PTR [edx-0x54],ah
  420418:	mov    ch,0x16
  42041a:	sti    
  42041b:	or     cx,WORD PTR [eax-0x51]
  42041f:	push   cs
  420420:	pop    ds
  420421:	fsub   st(5),st
  420423:	fnstsw WORD PTR [edi-0x25cac555]
  420429:	sub    BYTE PTR [edi],cl
  42042b:	jns    0x420476
  42042d:	fnstenv [ebx+0x417bf318]
  420433:	sub    dh,BYTE PTR [ebx]
  420435:	or     edx,DWORD PTR [esi-0x2c]
  420438:	mov    esp,es
  42043a:	dec    ebx
  42043b:	mov    dh,0xed
  42043d:	pop    edx
  42043e:	pop    esp
  42043f:	pop    esi
  420440:	repnz (bad) 
  420442:	ins    DWORD PTR es:[edi],dx
  420443:	adc    eax,0x66e5f4ba
  420448:	je     0x420457
  42044a:	in     al,0x58
  42044c:	inc    edx
  42044d:	dec    ebp
  42044e:	sub    al,0x25
  420450:	sbb    ch,BYTE PTR [ebx+eax*8]
  420453:	pop    eax
  420454:	xchg   esp,eax
  420455:	pop    ss
  420456:	jne    0x420449
  420458:	xchg   ebx,eax
  420459:	fnstenv [edx]
  42045b:	in     eax,0xbc
  42045d:	scas   al,BYTE PTR es:[edi]
  42045e:	push   ds
  42045f:	adc    BYTE PTR [ebp+0x1bde0788],0xc9
  420466:	inc    esi
  420467:	sub    eax,0xe1c30f9
  42046c:	call   0x4ec7:0x4065af4b
  420473:	xchg   ecx,eax
  420474:	rcr    BYTE PTR [edx-0x12314ecf],cl
  42047a:	jne    0x4204c4
  42047c:	jle    0x42047c
  42047e:	inc    edi
  42047f:	sbb    al,0x9b
  420481:	fstp   DWORD PTR [edx-0x76]
  420484:	sub    BYTE PTR [ebx+0x24e6967c],bl
  42048a:	daa    
  42048b:	add    BYTE PTR [esi],0x47
  42048e:	dec    eax
  42048f:	in     eax,0xe0
  420491:	mov    bh,0x15
  420493:	fidivr WORD PTR ds:0xf4a24da4
  420499:	in     eax,0x47
  42049b:	pop    ds
  42049c:	dec    edi
  42049d:	in     al,dx
  42049e:	(bad)  
  42049f:	lock (bad) [edi]
  4204a2:	dec    eax
  4204a3:	repz sbb al,0x8a
  4204a6:	in     al,0x3c
  4204a8:	rcr    ecx,1
  4204aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204ab:	push   edx
  4204ac:	fmul   st(5),st
  4204ae:	mov    al,al
  4204b0:	xchg   ah,cl
  4204b2:	repz push ebx
  4204b4:	adc    ecx,DWORD PTR [ecx-0x6e5f4eb8]
  4204ba:	pop    edi
  4204bb:	pop    ebx
  4204bc:	call   0xe29c789d
  4204c1:	ret    0x2746
  4204c4:	sar    BYTE PTR [eax-0x2f],cl
  4204c7:	fistp  DWORD PTR [edx]
  4204c9:	loope  0x4204bd
  4204cb:	int3   
  4204cc:	in     eax,0x35
  4204ce:	dec    ecx
  4204cf:	xlat   BYTE PTR ds:[ebx]
  4204d0:	rcr    ecx,cl
  4204d2:	xor    eax,eax
  4204d4:	rol    edx,0x87
  4204d7:	adc    esp,DWORD PTR [ebx+0x2a1122fe]
  4204dd:	dec    esp
  4204de:	dec    eax
  4204df:	and    al,0x17
  4204e1:	add    al,0x25
  4204e3:	mov    ebp,0x66dec6af
  4204e8:	into   
  4204e9:	cmc    
  4204ea:	lods   eax,DWORD PTR ds:[esi]
  4204eb:	fistp  DWORD PTR [edx]
  4204ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204ee:	test   DWORD PTR [edi+0x768822ec],eax
  4204f4:	call   DWORD PTR [esi]
  4204f6:	sbb    DWORD PTR [edx-0x66],edi
  4204f9:	push   ebx
  4204fa:	stos   BYTE PTR es:[edi],al
  4204fb:	lahf   
  4204fc:	dec    ecx
  4204fd:	fs out dx,al
  4204ff:	fwait
  420500:	sbb    dh,cl
  420502:	and    dh,BYTE PTR [eax+edi*2+0x6a21dd40]
  420509:	fstp   DWORD PTR [edi-0x2e1e130c]
  42050f:	push   0x172cc69
  420514:	mov    dh,0x8c
  420516:	dec    eax
  420517:	(bad)  
  420518:	enter  0x4936,0xa
  42051c:	mov    BYTE PTR [esi],al
  42051e:	push   ecx
  42051f:	addr16 popf 
  420521:	leave  
  420522:	sbb    ah,dh
  420524:	ficom  DWORD PTR [edi-0x1307ad17]
  42052a:	inc    edi
  42052b:	or     BYTE PTR [ecx+edx*2+0x54dc9acc],al
  420532:	push   esp
  420533:	push   di
  420535:	add    al,0x6f
  420537:	out    dx,eax
  420538:	sbb    bh,BYTE PTR [edi]
  42053a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42053b:	std    
  42053c:	dec    edx
  42053d:	pop    ebp
  42053e:	push   0x6b
  420540:	scas   eax,DWORD PTR es:[edi]
  420541:	mov    DWORD PTR [ecx-0x2fc3349e],esp
  420547:	sub    di,cx
  42054a:	jge    0x42055c
  42054c:	sbb    bh,BYTE PTR [edi]
  42054e:	mov    dl,0xf9
  420550:	mov    ah,0x8e
  420552:	xor    BYTE PTR [edx+0x6a22d938],dl
  420558:	mov    ecx,DWORD PTR [edi]
  42055a:	inc    ah
  42055c:	jb     0x4204f7
  42055e:	mov    ds:0x66bf087f,al
  420563:	mov    bh,0x24
  420565:	ror    eax,1
  420567:	dec    ah
  420569:	fnstenv [ebx+0x7a]
  42056c:	xor    BYTE PTR [esi-0x65347321],cl
  420572:	lods   eax,DWORD PTR ds:[esi]
  420573:	ss (bad) 
  420575:	sbb    eax,0xf64ec34e
  42057a:	cmp    ecx,DWORD PTR [ebx]
  42057c:	(bad)  
  42057d:	cdq    
  42057e:	xchg   edx,eax
  42057f:	dec    eax
  420580:	inc    edi
  420581:	fwait
  420582:	mov    al,0xc5
  420584:	sbb    al,BYTE PTR [esi+esi*4-0x79ba693e]
  42058b:	mov    ch,0x3b
  42058d:	fldcw  WORD PTR [ebx]
  42058f:	sub    al,BYTE PTR [ecx-0x6d18ff8f]
  420595:	out    dx,al
  420596:	mov    WORD PTR [eax],?
  420598:	xchg   ebp,eax
  420599:	fmul   DWORD PTR [edi+edi*8-0x66]
  42059d:	lahf   
  42059e:	xchg   esi,eax
  42059f:	pop    edx
  4205a0:	push   edx
  4205a1:	(bad)  [edx-0x19]
  4205a4:	ss add eax,0x884281d1
  4205aa:	jne    0x42058c
  4205ac:	push   esi
  4205ad:	cmp    al,0x48
  4205af:	mov    ebp,0xd8f0ad0a
  4205b4:	mov    dl,0xf2
  4205b6:	ret    
  4205b7:	inc    bp
  4205b9:	jne    0x4205dc
  4205bb:	stos   BYTE PTR es:[edi],al
  4205bc:	sbb    bh,BYTE PTR [eax+0x43]
  4205bf:	div    BYTE PTR [ebp-0x78]
  4205c2:	lods   al,BYTE PTR ds:[esi]
  4205c3:	or     eax,DWORD PTR [edi-0x22]
  4205c6:	out    dx,al
  4205c7:	inc    edx
  4205c8:	pop    ebx
  4205c9:	fs je  0x420555
  4205cc:	imul   edx,DWORD PTR [esi-0x18e51908],0xc3d3fe3b
  4205d6:	cmp    bh,ch
  4205d8:	or     esp,DWORD PTR [esi]
  4205da:	call   0xf115:0x83b253c8
  4205e1:	sub    eax,0xd443d0d7
  4205e6:	call   0x8e6827de
  4205eb:	jecxz  0x4205c8
  4205ed:	aad    0x57
  4205ef:	push   esp
  4205f0:	repnz popa 
  4205f2:	dec    ebx
  4205f3:	adc    BYTE PTR [esi+0x7b1fa2d9],ch
  4205f9:	std    
  4205fa:	dec    ebx
  4205fb:	mov    BYTE PTR [ebx-0x6e15fa5],dh
  420601:	loopne 0x42064a
  420603:	cmp    BYTE PTR [ebx+0x49],bl
  420606:	inc    esi
  420607:	sbb    eax,0x67a2c242
  42060c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42060d:	push   edi
  42060e:	sahf   
  42060f:	push   esp
  420610:	cli    
  420611:	or     ah,BYTE PTR [ebx-0x7a]
  420614:	jbe    0x420647
  420616:	dec    eax
  420617:	sbb    bl,BYTE PTR [ecx+0x70]
  42061a:	sar    DWORD PTR [edi+0x5a],0xca
  42061e:	mov    ch,0x66
  420620:	dec    ebp
  420621:	dec    esi
  420622:	jl     0x42060a
  420624:	sub    BYTE PTR [ecx],al
  420626:	idiv   DWORD PTR [ebx+edx*4-0x24]
  42062a:	neg    DWORD PTR [edx-0x48]
  42062d:	test   eax,0xd9325e31
  420632:	daa    
  420633:	push   edx
  420634:	lds    edx,FWORD PTR [esi+0x5bd13cc7]
  42063a:	lea    edx,[edi+0x46]
  42063d:	(bad)  
  42063e:	fs mov BYTE PTR ds:[ebx-0x23d842f8],bh
  420646:	gs dec edi
  420648:	pop    eax
  420649:	daa    
  42064a:	setl   BYTE PTR [edx]
  42064d:	add    esi,DWORD PTR [edx]
  42064f:	xchg   ebp,eax
  420650:	xchg   edx,eax
  420651:	(bad)
  420654:	cmp    eax,0xebe0486e
  420659:	and    DWORD PTR [ebp+0x7bc0df19],edx
  42065f:	enterw 0x8295,0xf4
  420664:	inc    eax
  420665:	sbb    eax,0xe91ab1b8
  42066a:	or     DWORD PTR [edi+0x16],edi
  42066d:	push   esp
  42066e:	push   esi
  42066f:	adc    esi,esp
  420671:	sub    esp,ebp
  420673:	mov    si,0xf4e3
  420677:	dec    esp
  420678:	adc    dl,BYTE PTR [edi]
  42067a:	ja     0x4206b0
  42067c:	addr16 mov edx,0x7d97084b
  420682:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420683:	cmp    esi,DWORD PTR [eax+0x7a0107dd]
  420689:	push   ecx
  42068a:	mov    bl,0x66
  42068c:	dec    ecx
  42068d:	dec    esi
  42068e:	ss pop edx
  420690:	sbb    dl,BYTE PTR [edi-0x4e865215]
  420696:	clc    
  420697:	ret    0x523c
  42069a:	(bad)  
  42069b:	into   
  42069c:	adc    eax,0x9a85074b
  4206a1:	call   0xb62a2d8c
  4206a6:	es in  al,0x50
  4206a9:	aad    0x48
  4206ab:	mov    ah,0x27
  4206ad:	add    dl,bl
  4206af:	lods   eax,DWORD PTR ds:[esi]
  4206b0:	rcr    DWORD PTR [ecx-0x14a298e8],0xb3
  4206b7:	sub    al,0x2e
  4206b9:	retf   
  4206ba:	enter  0xd652,0xd9
  4206be:	push   esi
  4206bf:	test   BYTE PTR ds:0xec0437f2,bh
  4206c5:	fldenv [ebx]
  4206c7:	jb     0x4206bb
  4206c9:	sub    ebx,DWORD PTR [eax+0x147cc7b1]
  4206cf:	rcr    BYTE PTR [ebx],cl
  4206d1:	sub    cl,BYTE PTR [edi-0x43]
  4206d4:	dec    edx
  4206d5:	cmc    
  4206d6:	add    DWORD PTR [esi],esp
  4206d8:	adc    ebp,eax
  4206da:	pop    edx
  4206db:	or     dl,0x1d
  4206de:	cmp    al,0xc4
  4206e0:	ins    DWORD PTR es:[edi],dx
  4206e1:	wbinvd 
  4206e3:	std    
  4206e4:	mov    al,ds:0x46528a72
  4206e9:	lahf   
  4206ea:	dec    eax
  4206eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206ec:	lods   al,BYTE PTR ds:[esi]
  4206ed:	fwait
  4206ee:	push   ebp
  4206ef:	inc    eax
  4206f0:	ret    
  4206f1:	bnd jno 0x420761
  4206f4:	lock imul ebp,DWORD PTR [edx+0x1c],0x2a27c692
  4206fc:	add    ch,BYTE PTR [edi]
  4206fe:	dec    ebx
  4206ff:	(bad)  
  420700:	popa   
  420701:	cdq    
  420702:	lods   eax,DWORD PTR ds:[esi]
  420703:	jmp    0x4206e8
  420705:	add    DWORD PTR [ebx-0x32],edx
  420708:	fstp   st(1)
  42070a:	add    esp,esi
  42070c:	retf   
  42070d:	push   ds
  42070e:	addr16 mov ecx,0x9ac5dfc
  420714:	dec    ebp
  420715:	and    cl,BYTE PTR [eax+0x39]
  420718:	adc    ebp,esp
  42071a:	mov    al,BYTE PTR ds:0x6684d62b
  420720:	xor    eax,0x1adfe9f7
  420725:	stos   BYTE PTR es:[edi],al
  420726:	add    DWORD PTR [eax],ebx
  420728:	dec    esi
  420729:	out    0x4c,eax
  42072b:	mov    ds:0x619be029,eax
  420730:	lds    edx,FWORD PTR [ebp+0x71]
  420733:	call   0x653d6712
  420738:	sbb    esi,ebx
  42073a:	stos   DWORD PTR es:[edi],eax
  42073b:	lock imul esp,DWORD PTR [eax],0x5e
  42073f:	mov    ebx,0xba483ce5
  420744:	std    
  420745:	in     al,0x64
  420747:	daa    
  420748:	repz mov dh,BYTE PTR [edx-0x9]
  42074c:	pop    edi
  42074d:	repnz (bad) 
  42074f:	sub    al,0x36
  420751:	ja     0x4206e5
  420753:	sbb    bl,BYTE PTR [edx]
  420755:	xor    al,0xdd
  420757:	sar    BYTE PTR [ebp+0x75],cl
  42075a:	mov    edx,0x7513abd5
  42075f:	push   eax
  420760:	mov    ecx,0x9199920
  420765:	cmp    al,0x5c
  420767:	xor    al,0x1a
  420769:	jle    0x42075e
  42076b:	addr16 jns 0x4206f4
  42076e:	push   cs
  42076f:	add    eax,0xaa47eb2b
  420774:	ins    DWORD PTR es:[edi],dx
  420775:	xor    eax,0x8d6fb504
  42077a:	xlat   BYTE PTR ds:[ebx]
  42077b:	outs   dx,DWORD PTR ds:[esi]
  42077c:	call   0xe5c3:0x4bda6772
  420783:	jo     0x42079e
  420785:	sbb    al,0x48
  420787:	(bad)  
  420788:	fdivr  DWORD PTR [eax-0x49]
  42078b:	fiadd  WORD PTR [ecx+0x70670c23]
  420791:	adc    ch,BYTE PTR [bx]
  420794:	sbb    bh,BYTE PTR [edi+0x0]
  420797:	jae    0x420739
  420799:	loopne 0x420735
  42079b:	cli    
  42079c:	test   ecx,ebx
  42079e:	sub    ebx,DWORD PTR [esi]
  4207a0:	inc    ebp
  4207a1:	adc    al,0x1e
  4207a3:	call   0xa801387a
  4207a8:	scas   eax,DWORD PTR es:[edi]
  4207a9:	fild   WORD PTR [edi+0x4e]
  4207ac:	data16 mov bl,0xa1
  4207af:	xor    eax,0x665af639
  4207b4:	loopne 0x4207a5
  4207b6:	cli    
  4207b7:	push   esp
  4207b8:	sbb    dh,BYTE PTR [esi]
  4207ba:	scas   eax,DWORD PTR es:[edi]
  4207bb:	cmp    eax,0xf0128218
  4207c0:	fcmovb st,st(2)
  4207c3:	adc    BYTE PTR [edx-0x1afd899f],ch
  4207c9:	mov    cl,0xb5
  4207cb:	xchg   esi,eax
  4207cc:	sbb    ch,BYTE PTR [ecx]
  4207ce:	pop    esp
  4207cf:	ja     0x42080a
  4207d1:	push   cs
  4207d2:	call   0x1b1c1347
  4207d7:	cmp    eax,0x468ffc09
  4207dc:	pusha  
  4207dd:	loop   0x420850
  4207df:	mov    al,ds:0x9e63f634
  4207e4:	out    dx,al
  4207e5:	mov    al,ds:0x85e7ea4b
  4207ea:	test   eax,0x49612906
  4207ef:	data16 fiadd WORD PTR [esi+0x78287923]
  4207f6:	jg     0x4207fb
  4207f8:	mov    DWORD PTR [ecx+0x2c],ebx
  4207fb:	pop    ecx
  4207fc:	cs mov bh,0xda
  4207ff:	std    
  420800:	xor    DWORD PTR [eax],ecx
  420802:	jmp    0x42086a
  420804:	dec    esp
  420805:	xor    DWORD PTR [ebx-0x5c8bfffa],ebp
  42080b:	lods   al,BYTE PTR ds:[esi]
  42080c:	out    0x66,al
  42080e:	dec    eax
  42080f:	cmp    al,0x84
  420811:	xchg   DWORD PTR [edx],esi
  420813:	mov    ah,0xf7
  420815:	push   edx
  420816:	push   0x66
  420818:	leave  
  420819:	call   0x73b9:0x731a3c1f
  420820:	je     0x4207ef
  420822:	jb     0x42080b
  420824:	loope  0x42083a
  420826:	jmp    ecx
  420828:	sbb    dl,ch
  42082a:	(bad)  
  42082b:	sbb    BYTE PTR ds:0x1a8f3bab,dl
  420831:	push   edi
  420832:	test   BYTE PTR [ecx+0x5c093966],ch
  420838:	push   edx
  420839:	call   0x2458f0f1
  42083e:	sbb    ah,dl
  420840:	xor    esp,DWORD PTR [ecx]
  420842:	out    0xe6,al
  420844:	adc    eax,0x1789818a
  420849:	pop    ebx
  42084a:	fs push ebp
  42084c:	popa   
  42084d:	lods   eax,DWORD PTR ds:[esi]
  42084e:	mov    bh,al
  420850:	test   al,ch
  420852:	mov    bh,0x48
  420854:	out    0x54,al
  420856:	and    eax,0xe98148ad
  42085b:	jne    0x42082d
  42085d:	mov    ds:0x9b656cb,eax
  420862:	dec    eax
  420863:	sbb    eax,0xb51fb1fd
  420868:	pop    DWORD PTR [eax]
  42086a:	pop    es
  42086b:	outs   dx,BYTE PTR ds:[esi]
  42086c:	xchg   ecx,eax
  42086d:	cmp    dl,al
  42086f:	inc    ebp
  420870:	daa    
  420871:	sar    DWORD PTR [edx-0x9],0x1a
  420875:	ret    0xef94
  420878:	pop    esp
  420879:	adc    al,0xb1
  42087b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42087c:	aam    0xd9
  42087e:	and    al,0xc2
  420880:	inc    eax
  420881:	mov    al,0x32
  420883:	xor    BYTE PTR [edi-0x52],bh
  420886:	inc    esp
  420887:	xchg   BYTE PTR [ebx+ebx*4+0x21dd2c4f],dh
  42088e:	fbld   TBYTE PTR [eax+0x20]
  420891:	leave  
  420892:	cmp    al,0xa
  420894:	in     eax,dx
  420895:	fiadd  DWORD PTR [eax]
  420897:	in     eax,dx
  420898:	loope  0x420910
  42089a:	mov    DWORD PTR [ebx+0x7a],0x1a5ff099
  4208a1:	idiv   DWORD PTR [edx-0x3ef4d4e8]
  4208a7:	ds add dl,bl
  4208aa:	xor    BYTE PTR [ecx+ebx*1-0x6e0630b5],bl
  4208b1:	or     dl,BYTE PTR [eax+0x48094586]
  4208b7:	pop    ecx
  4208b8:	mov    al,0x3
  4208ba:	(bad)  
  4208bb:	aaa    
  4208bc:	xchg   edi,eax
  4208bd:	mov    ah,BYTE PTR [edx+0x66]
  4208c0:	(bad)  
  4208c2:	jns    0x4208ea
  4208c4:	sbb    ah,ch
  4208c6:	in     eax,0xb2
  4208c8:	in     al,0x9c
  4208ca:	jbe    0x420882
  4208cc:	scas   al,BYTE PTR es:[edi]
  4208cd:	(bad)  
  4208cf:	lahf   
  4208d0:	stos   DWORD PTR es:[edi],eax
  4208d1:	loop   0x4208c2
  4208d3:	and    al,0x92
  4208d5:	pop    ebp
  4208d6:	inc    ebx
  4208d7:	push   0x3b8759cf
  4208dc:	xor    cl,BYTE PTR [eax-0x220505bf]
  4208e2:	ds js  0x420868
  4208e5:	sub    esi,DWORD PTR [esi+0x71]
  4208e8:	jmp    0x1b688469
  4208ed:	inc    edi
  4208ee:	outs   dx,DWORD PTR ds:[esi]
  4208ef:	mov    edi,0x48a1de5b
  4208f4:	mov    ch,BYTE PTR [ecx]
  4208f6:	jmp    0xf969:0x235113d1
  4208fd:	cwde   
  4208fe:	push   ebx
  4208ff:	lods   al,BYTE PTR ds:[esi]
  420900:	dec    ebx
  420901:	cmp    ebp,DWORD PTR [eax-0x676bffc3]
  420907:	les    edx,FWORD PTR [esi+0x3673485a]
  42090d:	mov    esi,0xbb315c6c
  420912:	sub    al,0x67
  420914:	jns    0x42092a
  420916:	pop    ebx
  420917:	and    ebx,DWORD PTR [edx]
  420919:	mov    ch,0x30
  42091b:	rcr    ebx,0xc3
  42091e:	scas   eax,DWORD PTR es:[edi]
  42091f:	jb     0x420981
  420921:	fstp   DWORD PTR [ecx]
  420923:	mov    al,ds:0x610f3bfa
  420928:	xor    al,0x91
  42092a:	jbe    0x42097b
  42092c:	inc    ecx
  42092d:	pop    esp
  42092e:	dec    eax
  42092f:	ja     0x420938
  420931:	inc    edx
  420932:	call   0xbaac8ae5
  420937:	data16 or BYTE PTR [eax+esi*2],dl
  42093b:	xchg   DWORD PTR [edx],ebx
  42093d:	mov    ah,0x2e
  42093f:	sub    DWORD PTR [ecx-0x66],0xd9f16e0c
  420946:	mov    ss,edi
  420948:	mov    ecx,0x67f66cd5
  42094d:	add    bl,BYTE PTR [edx-0x6e]
  420950:	and    dh,BYTE PTR [edi+0x480aa44f]
  420956:	mov    ebp,0x9cda664a
  42095b:	cmp    ch,bl
  42095d:	sub    al,0x51
  42095f:	sbb    bl,BYTE PTR ds:0x27e1d419
  420965:	out    0x2b,eax
  420967:	mov    ds:0xc54b9899,eax
  42096c:	sub    dh,BYTE PTR [ecx-0x2b]
  42096f:	adc    BYTE PTR [edi-0x7c8e8208],dl
  420975:	test   al,0x5d
  420977:	outs   dx,BYTE PTR ds:[esi]
  420978:	popf   
  420979:	mov    ebx,0x55f2e946
  42097e:	lods   eax,DWORD PTR ds:[esi]
  42097f:	imul   ebx,DWORD PTR [edx],0x4c
  420982:	gs cmp cl,0xd5
  420986:	lods   al,BYTE PTR ds:[esi]
  420987:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420988:	addr16 push esp
  42098a:	push   0xe
  42098c:	daa    
  42098d:	out    dx,al
  42098e:	cs jne 0x42096b
  420991:	mov    edi,0xdb20bc9
  420996:	cwde   
  420997:	dec    edi
  420998:	lock loopne 0x4209fe
  42099b:	and    ah,BYTE PTR [ecx-0x344db7c2]
  4209a1:	(bad)  [edx+0xd]
  4209a4:	in     eax,dx
  4209a5:	pop    ds
  4209a6:	cdq    
  4209a7:	push   es
  4209a8:	into   
  4209a9:	adc    edx,DWORD PTR [ecx]
  4209ab:	sahf   
  4209ac:	dec    ebp
  4209ad:	lock inc edi
  4209af:	adc    edi,DWORD PTR [eax-0x26]
  4209b2:	and    al,0x8c
  4209b4:	int    0xb5
  4209b6:	push   DWORD PTR [ebp-0x66]
  4209b9:	xor    dl,BYTE PTR [edi]
  4209bb:	popa   
  4209bc:	mov    ebx,0x297ad850
  4209c1:	add    al,0x57
  4209c3:	dec    eax
  4209c4:	push   esi
  4209c5:	and    BYTE PTR [edi+eax*2],cl
  4209c8:	dec    ecx
  4209c9:	loopne 0x420956
  4209cb:	lds    ebx,FWORD PTR [edi+esi*1-0x1a130896]
  4209d2:	in     eax,0xc6
  4209d4:	push   es
  4209d5:	push   0x67cf36c7
  4209da:	sbb    dh,0xce
  4209dd:	fldcw  WORD PTR [ebx+eiz*2+0x31]
  4209e1:	stc    
  4209e2:	sbb    DWORD PTR [ecx],0x70174fa0
  4209e8:	sbb    eax,0x2fa4b22
  4209ed:	sbb    DWORD PTR [esi],edi
  4209ef:	jecxz  0x4209eb
  4209f1:	push   edx
  4209f2:	adc    al,0xf6
  4209f4:	and    ebx,ebx
  4209f6:	inc    edi
  4209f7:	fs xor al,0x4d
  4209fa:	sub    eax,ecx
  4209fc:	repnz mov bl,0x21
  4209ff:	addr16 push ecx
  420a01:	push   ds
  420a02:	add    al,bl
  420a04:	sbb    al,BYTE PTR [edi-0x4f6a07a5]
  420a0a:	ins    BYTE PTR es:[edi],dx
  420a0b:	cld    
  420a0c:	retf   
  420a0d:	fld    TBYTE PTR [ecx-0x3c]
  420a10:	mov    dh,0xe8
  420a12:	jbe    0x4209c7
  420a14:	jno    0x4209af
  420a16:	xchg   edx,eax
  420a17:	call   0x4299:0x3324d955
  420a1e:	fst    DWORD PTR [ecx+0x1e30dff3]
  420a24:	aaa    
  420a25:	addr16 mov edi,0x5830da07
  420a2b:	push   es
  420a2c:	xor    al,0xc6
  420a2e:	nop
  420a2f:	inc    ebp
  420a30:	sbb    eax,DWORD PTR [eax]
  420a32:	jp     0x420a9a
  420a34:	push   ds
  420a35:	(bad)
  420a39:	cmc    
  420a3a:	add    eax,0x667bfb4e
  420a3f:	into   
  420a40:	scas   al,BYTE PTR es:[edi]
  420a41:	fldcw  WORD PTR [ebx]
  420a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a44:	add    ecx,DWORD PTR [esi]
  420a46:	cs mov cl,0x10
  420a49:	mov    ds:0xde7db71f,al
  420a4e:	popfw  
  420a50:	push   esp
  420a51:	jge    0x420a1b
  420a53:	adc    ch,0xd9
  420a56:	int    0x76
  420a58:	hlt    
  420a59:	mov    ecx,DWORD PTR [edi-0x40]
  420a5c:	ja     0x420a64
  420a5e:	cmc    
  420a5f:	cmp    DWORD PTR [ebx+0x66],ebx
  420a62:	dec    eax
  420a63:	cdq    
  420a64:	mov    eax,ds:0xfe00a827
  420a69:	scas   al,BYTE PTR es:[edi]
  420a6a:	inc    ecx
  420a6b:	jnp    0x420a8a
  420a6d:	jp     0x420a86
  420a6f:	emms   
  420a71:	or     DWORD PTR [edi],ebx
  420a73:	or     DWORD PTR [edx],esp
  420a75:	jae    0x420a6f
  420a77:	test   eax,0xeb488883
  420a7c:	mov    ds:0x34b7ade6,al
  420a81:	push   0x337866f3
  420a86:	lods   eax,DWORD PTR ds:[esi]
  420a87:	pushf  
  420a88:	sbb    bl,ch
  420a8a:	sahf   
  420a8b:	inc    esp
  420a8c:	push   cs
  420a8d:	sbb    ebx,ebx
  420a8f:	aad    0xea
  420a91:	fcos   
  420a93:	pop    esp
  420a94:	(bad)  
  420a95:	pushf  
  420a96:	js     0x420a6a
  420a98:	pop    esp
  420a99:	scas   eax,DWORD PTR es:[edi]
  420a9a:	bnd jle 0x420ae1
  420a9d:	dec    esp
  420a9e:	dec    eax
  420a9f:	repnz or ebp,esp
  420aa2:	fld    QWORD PTR ds:0x6b37c267
  420aa8:	xchg   DWORD PTR [ecx-0x73],ebx
  420aab:	or     ah,dl
  420aad:	mov    eax,0x5ec4bb2b
  420ab2:	dec    edi
  420ab3:	cmp    bh,ah
  420ab5:	les    edi,FWORD PTR [eax+0x59]
  420ab8:	cmp    DWORD PTR [edi-0x5ef35992],ebx
  420abe:	jbe    0x420b26
  420ac0:	test   al,0x7a
  420ac2:	adc    edx,DWORD PTR [ebx]
  420ac4:	push   cs
  420ac5:	adc    cl,BYTE PTR [edx+0x16]
  420ac8:	mov    ebp,0xb4f561d
  420acd:	xlat   BYTE PTR ds:[ebx]
  420ace:	out    0xc6,al
  420ad0:	fisub  DWORD PTR [esi-0x2814a39f]
  420ad7:	cmp    edi,edx
  420ad9:	aad    0x2
  420adb:	adc    BYTE PTR [edx],bl
  420add:	mov    edx,0x1a38fd47
  420ae2:	add    al,0xfb
  420ae4:	stos   BYTE PTR es:[edi],al
  420ae5:	int    0xb1
  420ae7:	dec    eax
  420ae8:	test   eax,0xc267033c
  420aed:	fcmovnbe st,st(2)
  420aef:	and    BYTE PTR [ecx],ah
  420af1:	jmp    0x1e4f:0x9a1bc1fc
  420af8:	jp     0x420aeb
  420afa:	into   
  420afb:	popa   
  420afc:	xchg   esp,eax
  420afd:	(bad)  
  420aff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b00:	add    ah,BYTE PTR [esi+eiz*8-0x7dbd79ac]
  420b07:	test   esp,ecx
  420b09:	cmp    ecx,DWORD PTR [edi-0x57]
  420b0c:	call   0x1591:0xeef7e1f2
  420b13:	lds    eax,FWORD PTR [edx+0x49]
  420b16:	pop    eax
  420b17:	xchg   dx,ax
  420b19:	jo     0x420b78
  420b1b:	fs xor esp,esp
  420b1e:	mov    al,0xa2
  420b20:	sbb    cl,BYTE PTR [esi+ebp*4+0x5]
  420b24:	push   edx
  420b25:	cld    
  420b26:	pop    es
  420b27:	imul   esp,DWORD PTR [ebp-0x6e],0x43406662
  420b2e:	xor    BYTE PTR [edx+ebx*1+0x64],bl
  420b32:	(bad)  
  420b33:	mov    edi,0xdeb68c2a
  420b38:	xchg   ecx,eax
  420b39:	rcl    DWORD PTR [esi-0x180fc4b3],1
  420b3f:	inc    esi
  420b40:	mov    ebp,0x4ccdbdc
  420b45:	arpl   dx,cx
  420b47:	call   0x5b1a3e51
  420b4c:	pop    esp
  420b4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b4e:	dec    eax
  420b4f:	fnstsw ax
  420b51:	sbb    DWORD PTR [ebp+0x2199ce79],0x48a552a2
  420b5b:	jae    0x420bbf
  420b5d:	out    0xdd,eax
  420b5f:	(bad)  
  420b60:	and    edx,eax
  420b62:	dec    eax
  420b63:	clc    
  420b64:	repz or ebx,DWORD PTR [eax+0x503fc382]
  420b6b:	sbb    DWORD PTR [eax-0x555697ff],0x24
  420b72:	loopne 0x420bc0
  420b74:	xor    DWORD PTR [esp+edx*1+0x6aad1d2f],edx
  420b7b:	jb     0x420bb0
  420b7d:	cdq    
  420b7e:	lds    esi,FWORD PTR [esi-0x59]
  420b81:	cmc    
  420b82:	sbb    al,BYTE PTR [esi+0x71abdb4c]
  420b88:	dec    ebp
  420b89:	xor    eax,0x4f9394c6
  420b8e:	or     dh,ah
  420b90:	sub    al,0xd9
  420b92:	mov    ds:0xa932473,eax
  420b97:	inc    edi
  420b98:	fstcw  WORD PTR [ebx]
  420b9b:	xchg   edi,eax
  420b9c:	js     0x420be7
  420b9e:	cmp    ebp,esp
  420ba0:	outs   dx,DWORD PTR ds:[esi]
  420ba1:	aas    
  420ba2:	imul   edx,DWORD PTR [eax-0x1c],0xf5c848b9
  420ba9:	test   eax,0xb7e68fe2
  420bae:	mov    eax,ds:0x72509d66
  420bb3:	adc    bl,BYTE PTR [edx]
  420bb5:	data16 ins BYTE PTR es:[edi],dx
  420bb7:	sub    eax,0xabb98a35
  420bbc:	scas   al,BYTE PTR es:[edi]
  420bbd:	fldenv [eax]
  420bbf:	mov    eax,0x5eda8886
  420bc4:	aad    0x2
  420bc6:	sub    DWORD PTR [esi+edx*8-0x5c],0x48
  420bcb:	cmp    edi,0xffffff84
  420bce:	ins    BYTE PTR es:[edi],dx
  420bcf:	jns    0x420b5d
  420bd1:	(bad)
  420bd5:	jns    0x420c11
  420bd7:	aam    0x1a
  420bd9:	dec    eax
  420bda:	jecxz  0x420bb7
  420bdc:	test   BYTE PTR [edi-0x7a],0x6a
  420be0:	out    0xf7,eax
  420be2:	or     eax,0x1e99b63f
  420be7:	sbb    ebx,DWORD PTR [eax+0x1df8c92f]
  420bed:	in     eax,0x2c
  420bef:	test   eax,0xd787fa1c
  420bf4:	lea    esi,[esi-0x2161c188]
  420bfa:	mov    esp,0xd7e7ee66
  420bff:	hlt    
  420c00:	sbb    bl,BYTE PTR [ecx+eax*2-0x36]
  420c04:	pop    ebx
  420c05:	push   es
  420c06:	aas    
  420c07:	call   DWORD PTR [ecx+ebx*8+0x2af0785d]
  420c0e:	shl    cl,1
  420c10:	into   
  420c11:	cmp    edi,DWORD PTR [ebp+0x34]
  420c14:	jo     0x420bd9
  420c16:	dec    ecx
  420c17:	aad    0x28
  420c19:	aad    0xb3
  420c1b:	cmp    BYTE PTR [esi],dl
  420c1d:	cmp    DWORD PTR [ecx-0x473dea6d],0x6a
  420c24:	and    al,0x99
  420c26:	dec    esp
  420c27:	mov    eax,0x84ff94a5
  420c2c:	in     eax,0xbb
  420c2e:	dec    eax
  420c2f:	std    
  420c30:	jno    0x420c0a
  420c32:	adc    eax,0x2e6729ab
  420c37:	test   DWORD PTR ds:0x582821ea,ebx
  420c3d:	shl    DWORD PTR ds:0xfb74a35,1
  420c43:	fld    DWORD PTR [eax+ebx*8+0x4978260]
  420c4a:	sub    al,0x67
  420c4c:	arpl   WORD PTR [esi],bx
  420c4e:	loope  0x420bfc
  420c50:	or     BYTE PTR [edx+0xf1b2972],ch
  420c56:	dec    eax
  420c57:	inc    ebp
  420c58:	fisttp DWORD PTR [esp+ebp*2-0x25d18560]
  420c5f:	data16 and al,0x4f
  420c62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c63:	fimul  WORD PTR [edx+0x69daba9d]
  420c69:	push   esp
  420c6a:	dec    edi
  420c6b:	jmp    0x52968ada
  420c70:	pop    edi
  420c71:	(bad)  [edx+edi*1]
  420c74:	xchg   esp,eax
  420c75:	mov    dl,0xb2
  420c77:	icebp  
  420c78:	cmp    BYTE PTR [edx],cl
  420c7a:	sub    dh,BYTE PTR [edx+0x3c]
  420c7d:	sbb    eax,0x3a73a48
  420c82:	mov    ch,0xdd
  420c84:	xchg   ebp,eax
  420c85:	ret    
  420c86:	stos   WORD PTR es:[di],ax
  420c89:	in     al,dx
  420c8a:	xlat   BYTE PTR ds:[ebx]
  420c8b:	pop    ebx
  420c8c:	push   ds
  420c8d:	adc    dl,BYTE PTR [eax+esi*1-0x3e4f9f3b]
  420c94:	fidivr DWORD PTR ds:0x55a563c8
  420c9a:	mov    fs,WORD PTR [esi+0x6b]
  420c9d:	in     al,dx
  420c9e:	and    DWORD PTR [edi],0x1a
  420ca1:	or     eax,0x878b442
  420ca6:	cmc    
  420ca7:	or     dl,bl
  420ca9:	loopne 0x420c90
  420cab:	xchg   ebx,eax
  420cac:	xchg   ecx,eax
  420cad:	xchg   ebx,eax
  420cae:	cmp    esp,DWORD PTR [esi-0x98dcee1]
  420cb4:	sbb    ch,BYTE PTR [eax-0x27]
  420cb7:	enter  0x72a,0xa1
  420cbb:	jns    0x420cf0
  420cbd:	(bad)  [edx]
  420cbf:	adc    dl,0x1a
  420cc2:	out    0x83,eax
  420cc4:	lods   al,BYTE PTR ds:[esi]
  420cc5:	jae    0x420d18
  420cc7:	push   esp
  420cc8:	mov    esi,0xd6ac8617
  420ccd:	pop    ecx
  420cce:	sub    DWORD PTR [edi],ebx
  420cd0:	mov    eax,0x6760eec3
  420cd5:	(bad)  
  420cd7:	fs leave 
  420cd9:	test   eax,0x4285e77f
  420cde:	sbb    ebp,DWORD PTR [edi+0x45480110]
  420ce4:	mov    edi,0x22f65290
  420ce9:	cmp    ch,BYTE PTR [ebx]
  420ceb:	lods   al,BYTE PTR ds:[si]
  420ced:	push   es
  420cee:	retf   0x1a01
  420cf1:	lea    esp,[eax]
  420cf3:	cdq    
  420cf4:	mov    ecx,0xfe28f3ee
  420cf9:	out    0x35,eax
  420cfb:	xlat   BYTE PTR ds:[ebx]
  420cfc:	inc    eax
  420cfd:	push   ecx
  420cfe:	jg     0x420d14
  420d00:	pop    ebp
  420d01:	mov    cl,BYTE PTR [eax]
  420d03:	push   ebx
  420d04:	cli    
  420d05:	popf   
  420d06:	mov    BYTE PTR [ecx-0x6ac5c2df],al
  420d0c:	stc    
  420d0d:	pshufw mm3,mm3,0xf7
  420d11:	ror    DWORD PTR [ebx],1
  420d13:	loope  0x420d48
  420d15:	fst    DWORD PTR [edx-0x564dd5f9]
  420d1b:	rcr    BYTE PTR [ebp+0x4e2af5dd],cl
  420d21:	das    
  420d22:	push   esp
  420d23:	add    BYTE PTR [esi+0x532930d9],bh
  420d29:	jg     0x420cc5
  420d2b:	push   ecx
  420d2c:	hlt    
  420d2d:	fiadd  WORD PTR [ebp*2-0x30b7ec12]
  420d34:	mov    dh,0xdc
  420d36:	jmp    DWORD PTR [edx-0x7c43f9d4]
  420d3c:	stc    
  420d3d:	retf   0x26d4
  420d40:	xchg   esp,eax
  420d41:	and    ah,BYTE PTR [ebx+0x70]
  420d44:	cmp    ebp,DWORD PTR [edi]
  420d46:	dec    eax
  420d47:	je     0x420d37
  420d49:	push   0xffffffdd
  420d4b:	retf   
  420d4c:	pusha  
  420d4d:	pop    esi
  420d4e:	inc    ebx
  420d4f:	jbe    0x420d8b
  420d51:	jae    0x420d92
  420d53:	push   edx
  420d54:	inc    ebx
  420d55:	mov    ds:0x8b1ad96e,al
  420d5a:	mov    ecx,0x79a51379
  420d5f:	test   BYTE PTR [esi+0x74914bd9],0x25
  420d66:	lea    ecx,[eax+0x376d1386]
  420d6c:	cmp    BYTE PTR [eax+0x48],cl
  420d6f:	aas    
  420d70:	mov    esi,0xf0704b5d
  420d75:	pop    edx
  420d76:	xchg   ecx,eax
  420d77:	mov    dh,0xf2
  420d79:	push   edx
  420d7a:	jmp    0xc2f562e5
  420d7f:	dec    esi
  420d80:	xchg   edi,eax
  420d81:	test   al,0x80
  420d83:	test   DWORD PTR [eax+esi*8-0x5e57a8b9],edi
  420d8a:	scas   al,BYTE PTR es:[edi]
  420d8b:	ins    DWORD PTR es:[edi],dx
  420d8c:	mov    ah,0xe
  420d8e:	mov    WORD PTR [edx-0x13b7873a],fs
  420d94:	ss in  al,0xed
  420d97:	and    bh,bh
  420d99:	adc    ecx,DWORD PTR [eax-0x7b]
  420d9c:	hlt    
  420d9d:	inc    edx
  420d9e:	xchg   BYTE PTR ds:0x67c4e59a,ah
  420da4:	add    ah,BYTE PTR [ebx]
  420da6:	fbld   TBYTE PTR [edx-0x7e]
  420da9:	je     0x420dfb
  420dab:	bound  edx,QWORD PTR [ebp+0x2d2865b7]
  420db1:	test   eax,0xe7acd248
  420db6:	(bad)  
  420db7:	or     al,0xf3
  420db9:	clc    
  420dba:	xor    esp,DWORD PTR [ebx]
  420dbc:	add    DWORD PTR [edi],edi
  420dbe:	test   al,0x98
  420dc0:	sbb    ebp,ebx
  420dc2:	into   
  420dc3:	iret   
  420dc4:	mov    ch,0xf0
  420dc6:	jmp    0x6bb3580e
  420dcb:	jb     0x420d75
  420dcd:	push   edx
  420dce:	inc    esp
  420dcf:	jbe    0x420da7
  420dd1:	cdq    
  420dd2:	mov    al,ds:0x78e83c42
  420dd7:	xchg   ecx,eax
  420dd8:	sub    DWORD PTR [edi],esi
  420dda:	xchg   edi,eax
  420ddb:	cmp    BYTE PTR [edi+0x2716c7e8],0x5b
  420de2:	mov    eax,0x53dc97e6
  420de7:	add    dl,BYTE PTR [esi-0x67]
  420dea:	out    dx,al
  420deb:	je     0x420df7
  420ded:	inc    esi
  420dee:	(bad)  
  420def:	scas   al,BYTE PTR es:[edi]
  420df0:	sbb    BYTE PTR ds:0xac14646b,bh
  420df6:	dec    ebx
  420df7:	sub    edi,DWORD PTR [esi]
  420df9:	shl    DWORD PTR [ebx-0x54],0x48
  420dfd:	fld    DWORD PTR [ebx]
  420dff:	(bad)  
  420e00:	cld    
  420e01:	mov    esi,0x6e1854f1
  420e06:	xor    eax,0x4fa1bdbd
  420e0b:	mov    ?,WORD PTR [edx+0x5e720666]
  420e11:	adc    al,0x32
  420e13:	xchg   edx,eax
  420e14:	call   0x3c07:0xcfc2829f
  420e1b:	lods   al,BYTE PTR ds:[esi]
  420e1c:	sbb    cl,BYTE PTR [edi+0x5b]
  420e1f:	dec    ecx
  420e20:	ins    BYTE PTR es:[edi],dx
  420e21:	loopne 0x420e8c
  420e23:	gs mov bh,0xff
  420e26:	pop    ds
  420e27:	xor    eax,0xa09da5d
  420e2c:	retf   
  420e2d:	dec    esp
  420e2e:	xchg   edi,eax
  420e2f:	scas   al,BYTE PTR es:[edi]
  420e30:	adc    esi,DWORD PTR [edx+0x192387b4]
  420e36:	dec    esp
  420e37:	outs   dx,DWORD PTR ds:[esi]
  420e38:	mov    eax,ds:0x10af059
  420e3d:	cmp    edi,eax
  420e3f:	push   edi
  420e40:	mov    DWORD PTR [ebx-0x6e],edx
  420e43:	je     0x420ebe
  420e45:	pop    ecx
  420e46:	out    dx,al
  420e47:	pushf  
  420e48:	aad    0x73
  420e4a:	add    BYTE PTR [ebp+0x1a],0x19
  420e4e:	popa   
  420e4f:	ins    DWORD PTR es:[edi],dx
  420e50:	sbb    BYTE PTR [ebx+0x57],dl
  420e53:	ja     0x420e06
  420e55:	fldenv ds:0xdbf7d675
  420e5b:	sub    al,BYTE PTR [ebx-0x6842e76]
  420e61:	add    dl,BYTE PTR [edi-0x46]
  420e64:	dec    dl
  420e66:	xchg   ebx,eax
  420e67:	mov    BYTE PTR [ebp+0x283b24d9],0x8
  420e6e:	xchg   edi,eax
  420e6f:	and    DWORD PTR [esi-0xf],esp
  420e72:	xor    BYTE PTR [edx+0x348a676],ah
  420e78:	addr16 mov ah,0x5d
  420e7b:	cld    
  420e7c:	fadd   QWORD PTR [ebp+eax*8-0x31a1dc9a]
  420e83:	nop
  420e84:	sbb    al,0x41
  420e86:	test   DWORD PTR ds:0x458f138a,ecx
  420e8c:	sub    ch,dl
  420e8e:	and    al,0x27
  420e90:	jno    0x420ea2
  420e92:	cs addr16 inc eax
  420e95:	cmp    al,0x1c
  420e97:	ins    BYTE PTR es:[edi],dx
  420e98:	xchg   edx,eax
  420e99:	pop    eax
  420e9a:	pop    eax
  420e9b:	retf   0x4e44
  420e9e:	dec    eax
  420e9f:	adc    DWORD PTR [edi],ebp
  420ea1:	dec    edx
  420ea2:	jl     0x420ee5
  420ea4:	mov    dh,0xc3
  420ea6:	icebp  
  420ea7:	imul   esp,DWORD PTR [edi],0x705472c
  420ead:	jge    0x420ecb
  420eaf:	out    dx,al
  420eb0:	(bad)  [ebx]
  420eb2:	lock add BYTE PTR es:[edx],bh
  420eb6:	jmp    0x38b1:0x745e1a2f
  420ebd:	clc    
  420ebe:	or     al,0x46
  420ec0:	icebp  
  420ec1:	fst    DWORD PTR [edi-0x44]
  420ec4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ec5:	and    eax,0x447231d9
  420eca:	(bad)  
  420ecb:	enter  0x680c,0x48
  420ecf:	xlat   BYTE PTR ds:[ebx]
  420ed0:	mov    WORD PTR [ebx],es
  420ed2:	mov    BYTE PTR ds:0x72400e3d,bl
  420ed8:	mov    ?,WORD PTR [ebp+edx*2-0x36]
  420edc:	cwde   
  420edd:	repz inc edi
  420edf:	into   
  420ee0:	xor    dl,bl
  420ee2:	lods   al,BYTE PTR ds:[esi]
  420ee3:	pop    ds
  420ee4:	imul   esi,DWORD PTR [ecx-0x2aaefa27],0x9dba0e9d
  420eee:	or     ebx,DWORD PTR [edi+0x28]
  420ef1:	sbb    BYTE PTR [ecx+0x2bba2b23],ch
  420ef7:	sbb    eax,0xde61ed5d
  420efc:	push   es
  420efd:	out    0x78,eax
  420eff:	stos   BYTE PTR es:[edi],al
  420f00:	xor    ah,BYTE PTR [eax-0x43e99927]
  420f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f07:	or     eax,0xb9c73f1a
  420f0c:	retf   
  420f0d:	jb     0x420f3f
  420f0f:	aaa    
  420f10:	and    eax,0xf733a9f7
  420f15:	and    BYTE PTR [esi+0x34997581],ah
  420f1b:	jecxz  0x420eae
  420f1d:	inc    edi
  420f1e:	push   cs
  420f1f:	out    dx,eax
  420f20:	or     al,0xdd
  420f22:	test   BYTE PTR [ebx-0x10],dl
  420f25:	fstp   QWORD PTR [ebp+ebx*4+0x7409235]
  420f2c:	adc    DWORD PTR [edi+ebx*2+0x66],ecx
  420f30:	int3   
  420f31:	mov    al,dl
  420f33:	fcomp  QWORD PTR [edx]
  420f35:	and    cl,BYTE PTR ds:0x670d141a
  420f3b:	push   es
  420f3c:	mov    cl,0xd9
  420f3e:	out    dx,al
  420f3f:	adc    al,0x4a
  420f41:	pop    ss
  420f42:	in     al,dx
  420f43:	add    BYTE PTR [esi*8+0x3611bf36],al
  420f4a:	dec    eax
  420f4b:	dec    ebp
  420f4c:	sar    DWORD PTR [esi],0x79
  420f4f:	adc    ebp,edx
  420f51:	sbb    al,0x5e
  420f53:	data16 loopne 0x420fa5
  420f56:	xor    al,0x8e
  420f58:	cmp    BYTE PTR [edi],bh
  420f5a:	hlt    
  420f5b:	or     ebx,edx
  420f5d:	rcl    BYTE PTR [edi],1
  420f5f:	and    BYTE PTR [ecx+0x28],ah
  420f62:	adc    ecx,DWORD PTR [ecx-0x23b62698]
  420f68:	test   DWORD PTR [esi],ebx
  420f6a:	sub    eax,0xd08c36c9
  420f6f:	jp     0x420f6a
  420f71:	adc    ecx,DWORD PTR [eax+0x50]
  420f74:	push   ebp
  420f75:	sahf   
  420f76:	mov    ecx,0xc8800ddc
  420f7b:	and    ax,0xcd81
  420f7f:	adc    al,0x1a
  420f81:	pop    es
  420f82:	imul   eax,esi,0x79
  420f85:	jnp    0x420fdb
  420f87:	popa   
  420f88:	icebp  
  420f89:	sbb    BYTE PTR [esi],bh
  420f8b:	add    eax,0xbf380ec0
  420f90:	das    
  420f91:	or     DWORD PTR [ebx+0x66],0xffffffe4
  420f95:	jbe    0x420f5c
  420f97:	mov    al,ds:0x19b9091a
  420f9c:	lock repz push ebx
  420f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fa0:	push   cs
  420fa1:	call   0xbb44e7a6
  420fa6:	out    dx,al
  420fa7:	loop   0x421019
  420fa9:	mov    ds:0x29489288,al
  420fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420faf:	scas   al,BYTE PTR es:[edi]
  420fb0:	aaa    
  420fb1:	ret    0x4eae
  420fb4:	or     al,0xf7
  420fb6:	outs   dx,DWORD PTR ds:[esi]
  420fb7:	repnz push ecx
  420fb9:	sbb    al,0x48
  420fbb:	and    BYTE PTR [edi-0x49],bh
  420fbe:	jo     0x420ffc
  420fc0:	inc    ecx
  420fc1:	push   ss
  420fc2:	test   al,0x71
  420fc4:	call   0xe2b2:0x6af63c04
  420fcb:	inc    ecx
  420fcc:	mov    edi,0x88d747e9
  420fd1:	xchg   edi,eax
  420fd2:	dec    esp
  420fd3:	and    BYTE PTR [ebx],0xa
  420fd6:	jno    0x42104c
  420fd8:	cli    
  420fd9:	push   ebp
  420fda:	lahf   
  420fdb:	fldenv [eax]
  420fdd:	pop    ebp
  420fde:	and    dh,dh
  420fe0:	jae    0x42103b
  420fe2:	xchg   dh,dl
  420fe4:	cli    
  420fe5:	fstp   QWORD PTR [ebp+0x9]
  420fe8:	in     al,dx
  420fe9:	fyl2x  
  420feb:	xchg   BYTE PTR [ebp+ebp*8-0x3450e344],ch
  420ff2:	iret   
  420ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ff4:	aam    0xc5
  420ff6:	dec    eax
  420ff7:	out    0x2d,al
  420ff9:	loope  0x420f95
  420ffb:	dec    ebp
  420ffc:	xor    DWORD PTR [eax-0x4c],ebx
  420fff:	mov    dl,0xf1
  421001:	cmp    DWORD PTR [ecx+0x34],ecx
  421004:	clflush BYTE PTR [ebx]
  421007:	push   0x1a
  421009:	cdq    
  42100a:	push   0xd70826e0
  42100f:	and    BYTE PTR [ecx-0x8],al
  421012:	push   edi
  421013:	in     eax,0x89
  421015:	cdq    
  421016:	xor    eax,DWORD PTR [ebx+ebx*2+0x4a]
  42101a:	inc    ecx
  42101b:	lods   eax,DWORD PTR ds:[esi]
  42101c:	sbb    ah,BYTE PTR [ecx+0xa]
  42101f:	adc    esi,DWORD PTR [ecx]
  421021:	xchg   ebx,eax
  421022:	dec    ecx
  421023:	mov    fs,WORD PTR [esp+edx*1-0x64]
  421027:	and    eax,0xfae0631a
  42102c:	(bad)  
  42102d:	mov    al,0xa6
  42102f:	loopne 0x42104b
  421031:	leave  
  421032:	popf   
  421033:	mov    ds:0x1bc7dc6,al
  421038:	or     edx,ebx
  42103a:	cmp    al,dh
  42103c:	sub    al,0x6e
  42103e:	das    
  42103f:	fnstcw WORD PTR [edx]
  421041:	jns    0x420fdb
  421043:	xchg   edi,eax
  421044:	sbb    eax,0x5ec33ed3
  421049:	add    DWORD PTR [esi-0x10],edi
  42104c:	cmp    eax,0xf62f278f
  421051:	sub    BYTE PTR [edx+0x67],bh
  421054:	arpl   WORD PTR [ebp+0x18],si
  421057:	out    0x8c,al
  421059:	push   cs
  42105a:	adc    dh,0x2a
  42105d:	ja     0x4210a7
  42105f:	pop    esi
  421060:	push   es
  421061:	mov    eax,ds:0xc504e379
  421066:	lahf   
  421067:	test   al,ch
  421069:	adc    DWORD PTR [ebx],esp
  42106b:	ins    BYTE PTR es:[edi],dx
  42106c:	fidivr DWORD PTR [edi+0x18]
  42106f:	adc    ah,BYTE PTR [ecx+0x16]
  421072:	aam    0x89
  421074:	sbb    edx,DWORD PTR [ecx+ebx*2-0x1437be7b]
  42107b:	or     al,0x2
  42107d:	pop    ecx
  42107e:	adc    ah,BYTE PTR [edi+0x2d11381b]
  421084:	fild   QWORD PTR [eiz*1-0x7193f99d]
  42108b:	jle    0x42110a
  42108d:	mov    al,ds:0xb611672d
  421092:	mov    esp,0x1404233d
  421097:	rol    dh,1
  421099:	pop    ecx
  42109a:	xor    BYTE PTR [eax-0x30c8f1ca],0x55
  4210a1:	jl     0x421041
  4210a3:	data16 scas al,BYTE PTR es:[edi]
  4210a5:	sub    DWORD PTR [edi],0xef46234f
  4210ab:	jp     0x4210d8
  4210ad:	pop    ecx
  4210ae:	enter  0x5e00,0x14
  4210b2:	inc    esp
  4210b3:	or     eax,0xa067b2f9
  4210b8:	pusha  
  4210b9:	mov    bh,0x48
  4210bb:	lods   eax,DWORD PTR ds:[esi]
  4210bc:	adc    cl,bl
  4210be:	pop    edx
  4210bf:	dec    eax
  4210c0:	xchg   esp,eax
  4210c1:	sbb    DWORD PTR [eax+0x22],ecx
  4210c4:	cmc    
  4210c5:	fidivr WORD PTR [edi-0x5]
  4210c8:	sbb    esi,DWORD PTR [ebx+0x44]
  4210cb:	mov    ?,WORD PTR [edx+0x2b]
  4210ce:	or     dh,dh
  4210d0:	psrld  mm7,mm0
  4210d3:	mov    cl,0x1a
  4210d5:	sbb    DWORD PTR [esi-0x41cd076],0xffffffeb
  4210dc:	pminub mm0,QWORD PTR [ebx+0x15d71954]
  4210e3:	mov    dh,0xe9
  4210e5:	mov    eax,0x22ea07b3
  4210ea:	dec    eax
  4210eb:	adc    BYTE PTR [edi-0x4f],bl
  4210ee:	inc    ecx
  4210ef:	mov    dl,0xcc
  4210f1:	lock mov BYTE PTR [esi+0x62],ah
  4210f5:	retf   0x378e
  4210f8:	ss aam 0xc9
  4210fb:	xor    bl,BYTE PTR [eax+0x59]
  4210fe:	mov    ch,0x52
  421100:	lock jno 0x421107
  421103:	pop    ebx
  421104:	inc    edx
  421105:	dec    ebx
  421106:	lods   eax,DWORD PTR ds:[esi]
  421107:	mov    edi,0x66f7c02d
  42110c:	adc    BYTE PTR gs:[edx-0x557caa8a],al
  421113:	cs inc esp
  421115:	inc    eax
  421116:	add    al,0xe7
  421118:	lock js 0x421167
  42111b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42111c:	and    al,0xda
  42111e:	sar    DWORD PTR [esi+0x2d4b421c],cl
  421124:	cli    
  421125:	fisttp WORD PTR [edi+0x3c85204a]
  42112b:	(bad)  
  42112c:	sbb    eax,0xaa6e8d19
  421131:	jnp    0x4210b5
  421133:	lds    bx,DWORD PTR [esi+0x2a1a616c]
  42113a:	cwde   
  42113b:	retf   
  42113c:	xor    al,0x33
  42113e:	sub    al,BYTE PTR [bx+si]
  421141:	leave  
  421142:	popa   
  421143:	mov    WORD PTR [eax+0x492d67da],fs
  421149:	add    eax,0xb62e4741
  42114e:	sbb    eax,0x4579cac4
  421153:	dec    esi
  421154:	retf   0x7ebd
  421157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421158:	mov    edi,DWORD PTR [edi-0x42cdf5b8]
  42115e:	mov    ah,bh
  421160:	xchg   ebx,eax
  421161:	frstor [esi+eiz*2-0x10]
  421165:	push   cs
  421166:	push   0xffffffb6
  421168:	and    al,0x65
  42116a:	xor    esp,DWORD PTR [edi+0x796cc4ec]
  421170:	sbb    edi,DWORD PTR [edx]
  421172:	dec    eax
  421173:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421174:	arpl   dx,bx
  421176:	addr16 jne 0x4211d7
  421179:	rcl    DWORD PTR [ebx],cl
  42117b:	clc    
  42117c:	out    0xb1,eax
  42117e:	push   cs
  42117f:	lods   al,BYTE PTR ds:[esi]
  421180:	sbb    bl,BYTE PTR [edx]
  421182:	jb     0x421176
  421184:	sbb    DWORD PTR [ebp-0x7b],edx
  421187:	push   esi
  421188:	or     eax,0xb701ff16
  42118d:	mov    esp,0x1d9dd302
  421192:	daa    
  421193:	out    0xe8,eax
  421195:	mov    BYTE PTR [ecx+0x19],bl
  421198:	loope  0x421192
  42119a:	inc    edi
  42119b:	xor    al,bl
  42119d:	fwait
  42119e:	out    0xad,eax
  4211a0:	jg     0x4211d3
  4211a2:	push   ebx
  4211a3:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211a5:	in     eax,dx
  4211a6:	lods   eax,DWORD PTR ds:[esi]
  4211a7:	imul   ebx,DWORD PTR [edx],0x4c41b942
  4211ad:	sub    al,0xab
  4211af:	loope  0x4211b4
  4211b1:	pop    ss
  4211b2:	xor    BYTE PTR [ebp+0x56a4829a],ah
  4211b8:	daa    
  4211b9:	hlt    
  4211ba:	mov    dl,0xd3
  4211bc:	sub    al,0x10
  4211be:	sbb    cl,al
  4211c0:	sbb    dl,bh
  4211c2:	stc    
  4211c3:	sahf   
  4211c4:	leave  
  4211c5:	dec    edi
  4211c6:	and    dh,dl
  4211c8:	add    DWORD PTR [edi+0x12],ecx
  4211cb:	jle    0x421243
  4211cd:	cmp    DWORD PTR ds:0x97a16067,ebx
  4211d3:	xor    eax,0x6e488a12
  4211d8:	mov    esp,0xa2af2778
  4211dd:	fsubp  st(2),st
  4211df:	pop    sp
  4211e1:	sti    
  4211e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211e3:	and    ebx,DWORD PTR [edx]
  4211e5:	outs   dx,DWORD PTR ds:[esi]
  4211e6:	loope  0x4211d1
  4211e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211e9:	adc    edx,DWORD PTR [edx-0x6]
  4211ec:	test   DWORD PTR [ecx+0xe],edx
  4211ef:	out    0x9f,al
  4211f1:	mov    BYTE PTR [esi+0x38093e66],al
  4211f7:	push   esp
  4211f8:	retf   0xb525
  4211fb:	mov    bl,0x8d
  4211fd:	(bad)  
  4211fe:	dec    eax
  4211ff:	inc    edx
  421200:	dec    ecx
  421201:	mov    DWORD PTR [eax-0x46],edx
  421204:	push   es
  421205:	mov    dl,0x56
  421207:	xor    ax,0x58ca
  42120b:	pop    ecx
  42120c:	and    DWORD PTR [edi],esp
  42120e:	adc    eax,0x75f6522a
  421213:	push   ebx
  421214:	gs aaa 
  421216:	cwde   
  421217:	daa    
  421218:	or     DWORD PTR [edx],0x762e6661
  42121e:	in     eax,dx
  42121f:	and    DWORD PTR [edx],ebx
  421221:	imul   ecx,ebx,0x3c6a820e
  421227:	fstp   QWORD PTR [ebx-0x20]
  42122a:	(bad)  
  42122c:	xchg   BYTE PTR [eax],ah
  42122e:	adc    eax,0xef62f15a
  421233:	inc    esi
  421234:	sbb    dl,dh
  421236:	enter  0xcdc4,0x35
  42123a:	pop    eax
  42123b:	and    eax,0x21add9b1
  421240:	mov    bh,0x90
  421242:	adc    bh,ch
  421244:	dec    edx
  421245:	cli    
  421246:	xchg   esp,eax
  421247:	xor    al,0x43
  42124a:	dec    esp
  42124b:	mov    dl,0x9a
  42124d:	lods   al,BYTE PTR ds:[esi]
  42124e:	lods   al,BYTE PTR ds:[esi]
  42124f:	cmp    edi,eax
  421251:	(bad)  [esp+eax*4-0x30]
  421255:	int3   
  421256:	std    
  421257:	cli    
  421258:	shl    esi,1
  42125a:	inc    ebp
  42125b:	outs   dx,DWORD PTR ds:[esi]
  42125c:	ja     0x421209
  42125e:	dec    eax
  42125f:	sub    dl,BYTE PTR [edi-0x32f54dfe]
  421265:	add    eax,0xbaee6656
  42126a:	daa    
  42126b:	jmp    0x2f616bb6
  421270:	sub    DWORD PTR [edi],eax
  421272:	dec    edi
  421273:	pop    esi
  421274:	es or  eax,0x4d36a707
  42127a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42127b:	xchg   DWORD PTR [edx-0x2c98bfb9],edx
  421281:	ds clc 
  421283:	das    
  421284:	aaa    
  421285:	xor    cl,BYTE PTR [ebx-0x11]
  421288:	call   0xdccf:0xef247ed4
  42128f:	push   edi
  421290:	inc    esp
  421291:	mov    BYTE PTR [ebp-0x7deb579a],cl
  421297:	add    DWORD PTR [edx],ebx
  421299:	(bad)  
  42129a:	mov    ecx,0xce5198b5
  42129f:	fistp  WORD PTR [edi-0x9]
  4212a2:	cmp    BYTE PTR [edx-0x45],dl
  4212a5:	push   edx
  4212a6:	out    dx,eax
  4212a7:	loope  0x421250
  4212a9:	inc    eax
  4212aa:	enter  0xfaf6,0x24
  4212ae:	push   0xc6261a76
  4212b3:	mov    edx,0xd6bea96b
  4212b8:	loopne 0x421293
  4212ba:	ret    
  4212bb:	xchg   ecx,eax
  4212bc:	jns    0x421284
  4212be:	inc    ebp
  4212bf:	jo     0x4212c1
  4212c1:	lods   eax,DWORD PTR ds:[esi]
  4212c2:	rol    BYTE PTR [ebx],cl
  4212c4:	jnp    0x4212a5
  4212c6:	inc    edi
  4212c7:	push   eax
  4212c8:	fucomi st,st(2)
  4212ca:	sbb    DWORD PTR [edi],ebp
  4212cc:	lahf   
  4212cd:	jl     0x42129f
  4212cf:	outs   dx,DWORD PTR ds:[esi]
  4212d0:	call   0xec18:0x8bf421d9
  4212d7:	mov    ah,0x1a
  4212d9:	mov    ch,0x47
  4212dc:	or     edx,DWORD PTR [edx]
  4212de:	into   
  4212df:	ss xor eax,0x1cd255d9
  4212e5:	loopne 0x4212f8
  4212e7:	cmc    
  4212e8:	out    dx,al
  4212e9:	cld    
  4212ea:	sbb    dh,bh
  4212ec:	sbb    eax,0xf2674843
  4212f1:	mov    dh,0xdd
  4212f3:	xchg   edi,eax
  4212f4:	sub    al,0x1f
  4212f6:	lock cmp sp,WORD PTR [ebp+0x66]
  4212fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212fc:	sbb    cl,BYTE PTR [edi]
  4212fe:	js     0x421313
  421300:	adc    DWORD PTR [edx],0xd93e5ea5
  421306:	mov    dl,0x51
  421308:	int3   
  421309:	jl     0x421326
  42130b:	mov    ah,BYTE PTR [edx-0x3e2f36fa]
  421311:	js     0x42135b
  421313:	mov    edi,0x860a01b5
  421318:	(bad)  
  421319:	push   DWORD PTR [ebp-0x78180c99]
  42131f:	xchg   ecx,eax
  421320:	mov    ebx,0xc34f1767
  421325:	in     al,dx
  421326:	inc    edi
  421327:	mov    dh,0x23
  421329:	push   ebx
  42132a:	dec    edx
  42132b:	adc    bh,BYTE PTR [ebx+edi*8+0x5d]
  42132f:	pop    cx
  421331:	mov    cs,WORD PTR [esi-0x780ac8d6]
  421337:	jle    0x4212e1
  421339:	jge    0x4212e0
  42133b:	dec    edx
  42133c:	ficom  DWORD PTR [edx+0x1c]
  42133f:	ret    
  421340:	adc    al,0xdd
  421342:	push   0xffffff8f
  421344:	and    bh,dh
  421346:	mov    ebp,0x80ab1867
  42134b:	mov    cl,0x10
  42134d:	xchg   edx,eax
  42134e:	stos   DWORD PTR es:[edi],eax
  42134f:	xor    dl,BYTE PTR [esi-0x210eb80b]
  421355:	(bad)  
  421357:	out    dx,eax
  421358:	jmp    0xca92e91
  42135d:	sub    DWORD PTR [edi+ebp*2-0x7096abe6],ecx
  421364:	ret    0x4389
  421367:	clc    
  421368:	push   es
  421369:	(bad)  [esi+0x561d96be]
  42136f:	out    0x37,eax
  421371:	aad    0x55
  421373:	int    0x1a
  421375:	icebp  
  421376:	scas   eax,DWORD PTR es:[edi]
  421377:	imul   ecx,DWORD PTR [ecx-0x63986872],0x64644ee8
  421381:	sub    al,0x2a
  421383:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421384:	rol    BYTE PTR [ebx+0x382956a8],cl
  42138a:	mov    edx,0x7e392a0d
  42138f:	stos   BYTE PTR es:[edi],al
  421390:	xchg   ebx,eax
  421391:	cmp    DWORD PTR [ecx-0x76266d6c],edi
  421397:	push   eax
  421398:	ret    
  421399:	call   DWORD PTR [ebx+esi*8+0x73]
  42139d:	sbb    ah,BYTE PTR [edi+0x48a53e46]
  4213a3:	jge    0x421421
  4213a5:	inc    ebp
  4213a6:	maskmovq mm7,(bad)
  4213a7:	idiv   DWORD PTR [ecx]
  4213a9:	(bad)  
  4213aa:	jl     0x421418
  4213ac:	mov    esi,0x13b990d5
  4213b1:	dec    edx
  4213b2:	dec    eax
  4213b3:	sub    esp,DWORD PTR [ebp+0x7845f5b4]
  4213b9:	jns    0x42139c
  4213bb:	push   0xffffffed
  4213bd:	cdq    
  4213be:	mov    dl,0xbc
  4213c0:	imul   edi,edx,0xffffffde
  4213c3:	mov    eax,0x8647e591
  4213c8:	or     eax,0xc60f872
  4213cd:	jle    0x4213c1
  4213cf:	data16 aad 0x1a
  4213d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213d3:	sbb    al,0x2
  4213d5:	adc    eax,0x495a6ea2
  4213db:	leave  
  4213dc:	ss das 
  4213de:	jno    0x4213d7
  4213e0:	pop    esp
  4213e1:	lds    edi,FWORD PTR [eax-0x37]
  4213e4:	push   ebx
  4213e5:	nop
  4213e6:	mov    dh,0x6f
  4213e8:	sbb    al,0xd6
  4213ea:	and    eax,0x40ffaf7
  4213ef:	or     BYTE PTR [edx],bl
  4213f1:	xchg   edx,eax
  4213f2:	(bad)  
  4213f3:	fldenv [ebx]
  4213f5:	dec    esi
  4213f6:	mov    ?,WORD PTR [edi]
  4213f8:	pop    eax
  4213f9:	fst    DWORD PTR [ebx]
  4213fb:	mov    cl,0x89
  4213fd:	ror    DWORD PTR [edx-0x13],0xa
  421401:	lds    edi,FWORD PTR [ecx+0x48cbabc0]
  421407:	loopne 0x4213d5
  421409:	in     al,dx
  42140a:	mov    ebx,0xc7e93c7a
  42140f:	data16 mov ds:0xfcd30341,al
  421415:	dec    eax
  421416:	jge    0x4213ab
  421418:	je     0x421473
  42141a:	test   DWORD PTR [ebx+0x11],esp
  42141d:	fyl2xp1 
  42141f:	sub    eax,0x6b5de05c
  421424:	inc    ebx
  421425:	jnp    0x4213c4
  421427:	jns    0x4213bc
  421429:	mov    edx,0x9cc0a05
  42142e:	sub    DWORD PTR [ebx],edi
  421430:	push   ebp
  421431:	popa   
  421432:	mov    ?,WORD PTR [ebp-0x35]
  421435:	rol    BYTE PTR [edi+eiz*8],cl
  421438:	ja     0x421417
  42143a:	fwait
  42143b:	adc    al,BYTE PTR [edi]
  42143d:	sub    BYTE PTR [esi+eiz*2-0x33],dl
  421441:	jnp    0x42141e
  421443:	or     al,0x28
  421445:	aas    
  421446:	xchg   ebx,eax
  421447:	inc    esp
  421448:	mov    al,ds:0x214188f9
  42144d:	push   0x25b26abb
  421452:	mov    bh,0x6f
  421454:	call   0x29aa:0x3a99c8c2
  42145b:	dec    ebx
  42145c:	inc    ecx
  42145d:	gs jbe 0x42141f
  421460:	jg     0x42147e
  421462:	push   esi
  421463:	xchg   esp,eax
  421464:	inc    ebp
  421465:	test   eax,0xd99bfe0a
  42146a:	or     al,0x11
  42146c:	repnz cdq 
  42146e:	and    eax,0x464ad091
  421473:	or     DWORD PTR [ecx+0x5a736568],edx
  421479:	jl     0x4214e2
  42147b:	sub    eax,0x13763c32
  421480:	nop
  421481:	jmp    DWORD PTR es:[ecx-0x3d7f5166]
  421488:	clc    
  421489:	das    
  42148a:	frstor gs:[ecx]
  42148d:	inc    ebp
  42148e:	cmp    al,0x42
  421490:	sub    eax,ecx
  421492:	push   es
  421493:	imul   ebx,edx,0x4e
  421496:	or     eax,0xfbc52d40
  42149b:	rcl    bl,0xd6
  42149e:	retf   
  42149f:	data16 dec sp
  4214a2:	adc    al,0x4b
  4214a4:	sbb    bl,BYTE PTR [ecx-0x36]
  4214a7:	mov    eax,0x8d3e46f7
  4214ac:	mov    esp,eax
  4214ae:	data16 jecxz 0x4214fb
  4214b1:	mov    ebp,0xac9d82bd
  4214b6:	push   ebp
  4214b7:	stc    
  4214b8:	mov    ebp,0xaa7e6d57
  4214bd:	repz fwait
  4214bf:	outs   dx,DWORD PTR ds:[esi]
  4214c0:	cwde   
  4214c1:	call   0x7ebcff9b
  4214c6:	or     DWORD PTR [esi],0xe47aa019
  4214cc:	xor    bh,BYTE PTR [ebp+0x48]
  4214cf:	cli    
  4214d0:	cmp    ebx,esi
  4214d2:	jp     0x421461
  4214d4:	cmp    edi,edx
  4214d6:	pop    ebp
  4214d7:	pop    esi
  4214d8:	adc    eax,0x6cb2a62e
  4214dd:	repz inc edi
  4214df:	mov    cl,0xbc
  4214e1:	popa   
  4214e2:	sbb    al,0x4d
  4214e4:	inc    ecx
  4214e5:	push   edx
  4214e6:	dec    eax
  4214e7:	adc    ebx,ebp
  4214e9:	data16 mov al,0x25
  4214ec:	cli    
  4214ed:	nop
  4214ee:	pop    esp
  4214ef:	push   cx
  4214f1:	es pop ebx
  4214f3:	retf   0x961a
  4214f6:	scas   eax,DWORD PTR es:[edi]
  4214f7:	(bad)  
  4214f8:	repnz and eax,0xdaeaca25
  4214fe:	jno    0x4214a5
  421500:	xchg   ebx,eax
  421501:	stos   BYTE PTR es:[edi],al
  421502:	loop   0x42148e
  421504:	inc    ebp
  421505:	cdq    
  421506:	lods   al,BYTE PTR ds:[esi]
  421507:	xor    DWORD PTR [edx],ebx
  421509:	mov    DWORD PTR [ecx+0x3bb74a3a],ebx
  42150f:	adc    dl,BYTE PTR [ebx]
  421511:	push   esp
  421512:	retf   
  421513:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421514:	dec    edi
  421515:	and    esp,eax
  421517:	imul   ebp,DWORD PTR [edi-0x9],0x54d3dc52
  42151e:	cmp    BYTE PTR [eax],bl
  421520:	push   ebp
  421521:	cli    
  421522:	inc    edi
  421523:	xor    al,0xb5
  421525:	fidiv  WORD PTR [edi]
  421527:	stc    
  421528:	int3   
  421529:	jmp    0x421550
  42152b:	addr16 lahf 
  42152d:	xor    al,BYTE PTR [eax]
  42152f:	mov    ds:0xc79b2014,eax
  421534:	and    eax,0x46054a07
  421539:	mov    ecx,0x1492354e
  42153e:	mov    bl,0xb0
  421540:	push   edx
  421541:	inc    edx
  421542:	or     DWORD PTR [edi-0x66],eax
  421545:	pusha  
  421546:	test   BYTE PTR [ebp+0x28],ch
  421549:	jmp    FWORD PTR [ebp+eax*4+0x1a]
  42154d:	add    edi,esi
  42154f:	pop    DWORD PTR [edi+ebp*1-0x3f]
  421553:	xor    BYTE PTR [ecx+0x1a82da31],dl
  421559:	retf   
  42155a:	(bad)  
  42155c:	and    BYTE PTR [ecx-0x6ff30f07],dh
  421562:	std    
  421563:	sti    
  421564:	imul   ebx,DWORD PTR [ecx-0x80],0xaf7bb9e0
  42156b:	push   ebp
  42156c:	jno    0x421547
  42156e:	sub    al,0xd3
  421570:	mov    dl,0x76
  421572:	pop    ds
  421573:	aaa    
  421574:	ret    
  421575:	rcl    DWORD PTR [edi+0x7d],0x1f
  421579:	adc    al,0x48
  42157b:	dec    ebp
  42157c:	sub    ch,BYTE PTR [ebx+0x2fa0a526]
  421582:	fs data16 cmp al,0x71
  421586:	(bad)  
  421587:	shl    BYTE PTR [ecx],cl
  421589:	fsub   DWORD PTR [ecx+edx*8-0x7a2d3539]
  421590:	mov    eax,ds:0x354467ef
  421595:	outs   dx,DWORD PTR ds:[esi]
  421596:	imul   esp,DWORD PTR [esi+0x3],0x1d9d9b90
  42159d:	pop    ds
  42159e:	call   0x97c7:0xb14cc396
  4215a5:	mov    dh,0x8a
  4215a7:	push   cs
  4215a8:	inc    edi
  4215a9:	rcl    BYTE PTR [edx],cl
  4215ab:	addr16 sub esi,ebx
  4215ae:	dec    ebx
  4215af:	fwait
  4215b0:	jbe    0x421582
  4215b2:	jmp    0x421590
  4215b4:	mov    ah,0xd9
  4215b6:	mov    DWORD PTR [esi-0x4a27e5b4],edi
  4215bc:	sbb    cl,0x57
  4215bf:	add    eax,0x8ce4e916
  4215c4:	xchg   DWORD PTR [esi-0x3c],edi
  4215c7:	outs   dx,BYTE PTR ds:[esi]
  4215c8:	ds popf 
  4215ca:	dec    eax
  4215cb:	lock add dh,BYTE PTR [edx-0x69]
  4215cf:	inc    eax
  4215d0:	imul   DWORD PTR [ebp+ebx*1+0x2012ba6a]
  4215d7:	cmp    ecx,ebp
  4215d9:	and    al,0xf0
  4215db:	(bad)  
  4215dc:	loop   0x421633
  4215de:	gs push 0x33c7eb34
  4215e4:	cmp    eax,0xfae8664f
  4215e9:	dec    esi
  4215ea:	cmc    
  4215eb:	xchg   bx,ax
  4215ed:	jnp    0x42164a
  4215ef:	int3   
  4215f0:	sub    dh,ah
  4215f2:	pushf  
  4215f3:	mov    bl,0x52
  4215f5:	sbb    DWORD PTR [esi],ebx
  4215f7:	stos   DWORD PTR es:[edi],eax
  4215f8:	fwait
  4215f9:	fs mov al,0xe2
  4215fc:	and    DWORD PTR [ecx],edi
  4215fe:	add    BYTE PTR [edi-0x7b],ah
  421601:	sub    DWORD PTR [edi+0x77071ac3],ebx
  421607:	std    
  421608:	cs jmp 0x42158b
  42160b:	sahf   
  42160c:	daa    
  42160d:	fnstenv [ebx+0x63e3efd8]
  421613:	aas    
  421614:	mov    eax,0xd96c513b
  421619:	mov    al,ds:0x685d6e48
  42161e:	inc    ebx
  42161f:	sub    DWORD PTR [edx],edi
  421621:	adc    al,0x49
  421623:	(bad)  
  421624:	call   0xf47b:0xa5ace19c
  42162b:	sbb    bh,BYTE PTR es:[edx]
  42162e:	out    dx,al
  42162f:	push   edi
  421630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421631:	sar    DWORD PTR [esi-0x4b],0xe2
  421635:	push   eax
  421636:	outs   dx,BYTE PTR ds:[esi]
  421637:	adc    BYTE PTR [eax+edi*4+0xaf26703],ch
  42163e:	push   cs
  42163f:	nop    DWORD PTR [ebp+ecx*1-0x35]
  421644:	(bad)  [ecx+ecx*2+0x6f]
  421648:	mov    ds:0xe54e54e5,al
  42164d:	sub    al,0xa2
  42164f:	addr16 push ecx
  421651:	cs add al,0x82
  421654:	imul   edx,edx,0x69
  421657:	xchg   BYTE PTR [eax-0x1d],al
  42165a:	inc    edi
  42165b:	imul   esi,edx,0xe01610bd
  421661:	in     eax,0x82
  421663:	jne    0x42169f
  421665:	popf   
  421666:	inc    edx
  421667:	cwde   
  421668:	jge    0x4216c2
  42166a:	mov    dh,0x5
  42166c:	adc    eax,0x963c47f9
  421671:	jp     0x421667
  421673:	fcomi  st,st(2)
  421675:	aaa    
  421676:	inc    ecx
  421677:	lahf   
  421678:	(bad)  
  421679:	ffreep st(6)
  42167b:	data16 sbb BYTE PTR [esi+0x7c],cl
  42167f:	imul   ebx,DWORD PTR [esi],0xdc161454
  421685:	mov    bh,BYTE PTR [edx+0x98cf513]
  42168b:	das    
  42168c:	mov    eax,0xb9a93ccb
  421691:	bound  ecx,QWORD PTR [edi+eiz*2]
  421694:	adc    ch,BYTE PTR [ebp+0x839860e]
  42169a:	pushf  
  42169b:	or     BYTE PTR [edx],bl
  42169d:	inc    edx
  42169e:	test   BYTE PTR ds:0x68ee7848,ah
  4216a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216a5:	sbb    ch,ch
  4216a7:	sub    ax,ax
  4216aa:	lods   al,BYTE PTR ds:[esi]
  4216ab:	sub    BYTE PTR [edx],bl
  4216ad:	(bad)  
  4216ae:	push   0x23
  4216b0:	xchg   esp,eax
  4216b1:	clc    
  4216b2:	stos   BYTE PTR es:[edi],al
  4216b3:	mov    DWORD PTR cs:0xd21a3ba6,esi
  4216ba:	inc    esi
  4216bb:	iret   
  4216bc:	mov    edx,0x1a4f2515
  4216c1:	cld    
  4216c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216c4:	shl    BYTE PTR [edx-0x33],1
  4216c7:	pop    eax
  4216c8:	sbb    edx,ebx
  4216ca:	cmp    al,0x1b
  4216cc:	(bad)  
  4216cd:	cmp    al,BYTE PTR [eax+0x1791edbd]
  4216d3:	fnstenv [eax-0x1c]
  4216d6:	inc    edi
  4216d7:	stos   DWORD PTR es:[edi],eax
  4216d8:	loop   0x4216d1
  4216da:	jnp    0x42173b
  4216dc:	call   0xe5d9:0xb0746473
  4216e3:	and    BYTE PTR [edx+ecx*8+0x651aeb3d],0xe0
  4216eb:	icebp  
  4216ec:	and    al,0xfa
  4216ee:	loopne 0x421711
  4216f0:	mov    ds:0x44bc57e8,al
  4216f5:	xchg   esi,eax
  4216f6:	not    DWORD PTR [ecx+0x3e]
  4216f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216fa:	dec    eax
  4216fb:	adc    ebx,DWORD PTR [edx]
  4216fd:	pop    ds
  4216fe:	aad    0xb3
  421700:	cmp    eax,0xe3e67748
  421705:	adc    esi,edx
  421707:	sub    eax,0x19860f9a
  42170c:	fisttp WORD PTR [esi+0x79]
  42170f:	sbb    al,BYTE PTR gs:[esi-0x6c11feff]
  421716:	jg     0x421736
  421718:	jmp    0x4216f6
  42171a:	push   0x2c
  42171c:	adc    ecx,edi
  42171e:	out    dx,eax
  42171f:	sub    BYTE PTR ds:0xf3f576ec,cl
  421725:	mov    al,ds:0xac2a52d0
  42172a:	dec    eax
  42172b:	jmp    0x42176c
  42172d:	mov    ds:0xf084c396,eax
  421732:	lock test DWORD PTR [ecx],edx
  421735:	mov    dh,dl
  421737:	sub    edx,ebp
  421739:	iret   
  42173a:	dec    ecx
  42173b:	int    0x1a
  42173d:	cmp    esi,DWORD PTR [ecx+0x398961a3]
  421743:	repz mov ds:0x762e7bd9,al
  421749:	push   0x91b1fac5
  42174e:	cs mov bh,0x17
  421751:	arpl   WORD PTR [eax-0x3b],cx
  421754:	aas    
  421755:	cmp    DWORD PTR [ecx-0x7e2f265b],edx
  42175b:	data16 adc BYTE PTR [edx],al
  42175e:	dec    esp
  42175f:	adc    DWORD PTR [esi],esi
  421761:	stc    
  421762:	les    esi,FWORD PTR [edi]
  421764:	sbb    bh,BYTE PTR [ecx+0x2c]
  421767:	in     eax,0xe2
  421769:	ja     0x4217bc
  42176b:	pop    eax
  42176d:	(bad)  [eax]
  42176f:	dec    ecx
  421770:	jnp    0x421764
  421772:	mov    ds:0xb937b6af,al
  421777:	mov    BYTE PTR [esi],bh
  421779:	pop    esp
  42177a:	gs cmp edi,esi
  42177d:	out    0x7,al
  42177f:	inc    ebp
  421780:	xlat   BYTE PTR ds:[ebx]
  421781:	push   ebx
  421782:	dec    edx
  421783:	inc    ebp
  421784:	push   0x2a
  421786:	push   ss
  421787:	addr16 es add eax,0xaa38d73f
  42178e:	retf   
  42178f:	dec    esp
  421790:	out    dx,al
  421791:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421792:	sbb    dh,BYTE PTR [ebp-0x6b32606a]
  421798:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421799:	ret    0x8f48
  42179c:	pop    ds
  42179d:	fld    DWORD PTR [eax]
  42179f:	mov    eax,ds:0xc106c44
  4217a4:	pop    ebx
  4217a5:	dec    eax
  4217a6:	mov    ecx,0x47eae7fb
  4217ab:	mov    edi,0x1644ac81
  4217b0:	add    esi,DWORD PTR [ebx-0x44f39905]
  4217b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4217b7:	sbb    DWORD PTR [edx],0x85fab0bf
  4217bd:	(bad)  
  4217be:	push   edx
  4217bf:	pop    es
  4217c0:	dec    eax
  4217c1:	fabs   
  4217c3:	mov    es,WORD PTR [edi-0x3d66876f]
  4217c9:	mov    esp,0xfb36a5d
  4217ce:	dec    eax
  4217cf:	imul   ebp,DWORD PTR [esi+esi*8],0x14a5c463
  4217d6:	mov    ecx,0xfbe5cb66
  4217db:	lea    ebx,[edx]
  4217dd:	ins    BYTE PTR es:[edi],dx
  4217de:	sub    eax,0xa041cc43
  4217e3:	jnp    0x4217f5
  4217e5:	fimul  DWORD PTR [eax+ebp*1+0x22]
  4217e9:	mov    DWORD PTR [edi-0x543ebf49],ebx
  4217ef:	cmp    esp,DWORD PTR [ecx]
  4217f1:	lods   eax,DWORD PTR ds:[esi]
  4217f2:	cmp    dh,BYTE PTR [ecx-0x5f7ef890]
  4217f8:	call   0x4cd9:0x3de59bfb
  4217ff:	mov    cs,WORD PTR [esi+0x4e216eae]
  421805:	sub    dl,BYTE PTR [ecx]
  421807:	sbb    BYTE PTR [edx],bl
  421809:	clc    
  42180a:	mov    ecx,0xbe88c1dd
  42180f:	xor    al,0xb4
  421811:	loopne 0x421875
  421813:	and    BYTE PTR [ecx+esi*2+0x3e],al
  421817:	inc    ebx
  421818:	lock adc DWORD PTR [edx-0x5a],esp
  42181c:	sub    al,ah
  42181e:	cmp    DWORD PTR [ebx],ebx
  421820:	mov    eax,0x49c44d79
  421825:	mov    ecx,0xbb1898a5
  42182a:	xlat   BYTE PTR ds:[ebx]
  42182b:	addr16 sahf 
  42182d:	xchg   ebx,eax
  42182e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42182f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421830:	mov    ah,0xa2
  421832:	push   esp
  421833:	push   esi
  421834:	cmp    eax,ebx
  421836:	add    BYTE PTR [ecx],dh
  421838:	call   0xc252:0x6d536158
  42183f:	inc    eax
  421840:	mov    eax,0x5e66944d
  421845:	adc    al,0x23
  421847:	sub    al,0x1a
  421849:	mov    esp,0xa75ce292
  42184e:	add    ecx,edi
  421850:	cmp    bl,cl
  421852:	mov    bh,0xcf
  421854:	xchg   ecx,eax
  421855:	jno    0x42184b
  421857:	test   BYTE PTR [edx-0x7c],0xdd
  42185b:	(bad)  
  42185c:	sti    
  42185d:	iret   
  42185e:	addr16 cld 
  421860:	popa   
  421861:	add    eax,0xf0cf2508
  421866:	adc    edx,edx
  421868:	fcmovnu st,st(1)
  42186a:	mov    eax,edi
  42186c:	mov    al,ds:0xd25f385b
  421871:	enter  0x240f,0x99
  421875:	lea    ecx,[ebp+0x4b]
  421878:	call   0x25d9:0xb02722e8
  42187f:	cli    
  421880:	shr    al,0x57
  421883:	xor    BYTE PTR [eax],dh
  421885:	mov    edi,0xb678699d
  42188a:	dec    eax
  42188b:	arpl   WORD PTR [esi-0x61],si
  42188e:	jo     0x421847
  421890:	dec    edi
  421891:	fnstcw WORD PTR [esi+eax*2-0x36e233c1]
  421898:	adc    BYTE PTR [ecx+eax*4+0x48653079],bl
  42189f:	cmp    eax,0x7155a62
  4218a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218a5:	mov    ds:0xc53a75f3,al
  4218aa:	or     eax,0x76ab5db6
  4218af:	mov    ds:0xab4899de,eax
  4218b4:	sub    bl,BYTE PTR [edi]
  4218b6:	pushf  
  4218b7:	jp     0x4218cc
  4218b9:	add    BYTE PTR [esi+0x66],cl
  4218bc:	out    0x84,eax
  4218be:	sub    al,0x88
  4218c0:	sbb    ch,BYTE PTR [ebx-0x50]
  4218c3:	dec    ecx
  4218c4:	add    bh,dl
  4218c6:	ret    0x4190
  4218c9:	cmc    
  4218ca:	add    al,0xab
  4218cc:	enter  0xbad9,0xa3
  4218d0:	dec    esi
  4218d1:	(bad)  
  4218d2:	cmp    ebx,0xf5708030
  4218d8:	and    ebp,DWORD PTR [ebx-0xce7b36b]
  4218de:	(bad)  
  4218df:	out    0x4f,al
  4218e1:	(bad)  [edi-0x36af6756]
  4218e7:	sti    
  4218e8:	and    al,0x7
  4218ea:	jns    0x42188e
  4218ec:	xor    BYTE PTR [eax+0x48],0x2d
  4218f0:	arpl   dx,bp
  4218f2:	dec    eax
  4218f3:	mov    ds:0x8c6affb4,eax
  4218f8:	leave  
  4218f9:	fldenv [ebp-0x423b4376]
  4218ff:	push   ss
  421900:	sbb    dl,BYTE PTR [ebx]
  421902:	push   es
  421903:	pop    eax
  421904:	inc    ebx
  421905:	pushf  
  421906:	sub    DWORD PTR [edx],edi
  421908:	push   ss
  421909:	fisub  DWORD PTR [ebx+0xda73e4]
  42190f:	int    0xd9
  421911:	sbb    bl,BYTE PTR [ebx+0x47e8ab0b]
  421917:	jnp    0x421966
  421919:	or     BYTE PTR [edi],0x2f
  42191c:	push   ebx
  42191d:	imul   esi,esp,0x66
  421920:	pushf  
  421921:	fsub   DWORD PTR [ecx]
  421923:	or     eax,0x9153c1d
  421928:	mov    ah,0x1c
  42192a:	je     0x4218d4
  42192c:	xor    al,0x71
  42192e:	popa   
  42192f:	push   es
  421930:	and    bh,BYTE PTR [edi+0x13]
  421933:	addr16 jp 0x4218fb
  421936:	mov    edx,0xd8141c8a
  42193b:	push   es
  42193c:	stc    
  42193d:	mov    esi,0x6ad9daee
  421943:	arpl   WORD PTR [eax],bp
  421945:	aas    
  421946:	mov    ds:0x73f93920,eax
  42194b:	cli    
  42194c:	push   ds
  42194d:	shr    DWORD PTR [edx+0x69],0x18
  421951:	sbb    DWORD PTR [edx-0x6f5e0199],eax
  421957:	hlt    
  421958:	cmp    eax,0x99272bc2
  42195d:	and    eax,0x6ce59448
  421962:	rcr    BYTE PTR es:[edi+edx*2],1
  421966:	das    
  421967:	addr16 cmp esp,eax
  42196a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42196b:	lea    ecx,fs:[ebx+ebx*4-0x24]
  421970:	sub    esp,ebp
  421972:	inc    edi
  421973:	les    edi,FWORD PTR [ebp+0x70eaa05f]
  421979:	mov    cl,0x81
  42197b:	data16 sbb BYTE PTR [edi-0x2aa9f17c],bh
  421982:	jo     0x421989
  421984:	stos   BYTE PTR es:[edi],al
  421985:	pop    ecx
  421986:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421987:	mov    ds:0xf2bcc554,eax
  42198c:	fidiv  DWORD PTR ss:[ecx]
  42198f:	imul   eax,DWORD PTR ds:[esi],0xcc9b99ac
  421996:	ss stc 
  421998:	jno    0x421994
  42199a:	out    dx,eax
  42199b:	mov    dl,BYTE PTR [edi-0xf]
  42199e:	xor    eax,0xdc08b698
  4219a3:	jmpw   0xc428
  4219a7:	sti    
  4219a8:	sahf   
  4219a9:	ja     0x4219a5
  4219ab:	ins    DWORD PTR es:[edi],dx
  4219ac:	in     eax,dx
  4219ad:	call   0x31d6:0xa9ae253e
  4219b4:	sbb    bl,BYTE PTR [edx+0x54]
  4219b7:	lods   eax,DWORD PTR ds:[esi]
  4219b8:	pushf  
  4219b9:	je     0x4219b4
  4219bb:	mov    eax,ds:0xf38dd9c3
  4219c0:	mov    cl,0xa3
  4219c2:	call   0x43ce0d3
  4219c7:	cmp    BYTE PTR ds:0x7d77be2d,bl
  4219cd:	push   ds
  4219ce:	jno    0x42196b
  4219d0:	dec    ebp
  4219d1:	push   edx
  4219d2:	fsubr  st,st(6)
  4219d4:	sbb    eax,0xb3672761
  4219d9:	imul   ecx,ebx,0x12
  4219dc:	sbb    dh,BYTE PTR ds:0xb9fcaa52
  4219e2:	in     eax,dx
  4219e3:	fisub  DWORD PTR [ebx]
  4219e5:	fldcw  WORD PTR [ebp+eiz*2-0x4e]
  4219e9:	mov    ah,BYTE PTR [eax+eiz*2-0x73]
  4219ed:	adc    dl,BYTE PTR [esi+0x78]
  4219f0:	push   ecx
  4219f1:	popa   
  4219f2:	dec    eax
  4219f3:	dec    esp
  4219f4:	arpl   WORD PTR [ecx],si
  4219f6:	aaa    
  4219f7:	fdivr  DWORD PTR [ecx]
  4219f9:	popf   
  4219fa:	xor    BYTE PTR [ebp+0x7a],0x66
  4219fe:	sub    BYTE PTR ds:0xa59aebaf,al
  421a04:	into   
  421a05:	cmp    BYTE PTR [eax-0x41],cl
  421a08:	test   eax,0xf21632f0
  421a0d:	fimul  WORD PTR ds:0xd374e495
  421a13:	data16 fdiv DWORD PTR [ecx+0x38]
  421a17:	add    DWORD PTR [edi],0xfffffffd
  421a1a:	out    0x2c,eax
  421a1c:	imul   edi,DWORD PTR [eax],0x3584fc48
  421a22:	pop    es
  421a23:	xchg   ebp,eax
  421a24:	mov    bh,0x13
  421a26:	adc    al,0x17
  421a28:	sbb    dh,BYTE PTR [edi]
  421a2a:	dec    edi
  421a2b:	pop    edi
  421a2c:	sbb    al,0xd1
  421a2e:	scas   eax,DWORD PTR es:[edi]
  421a2f:	or     ebx,DWORD PTR [edx]
  421a31:	sbb    BYTE PTR [esi-0x58],0xe8
  421a35:	mov    al,0x97
  421a37:	add    al,0x8a
  421a39:	leave  
  421a3a:	sub    al,0x87
  421a3c:	xchg   ebp,eax
  421a3d:	(bad)  
  421a3e:	dec    ecx
  421a3f:	lahf   
  421a40:	adc    dl,BYTE PTR [edi]
  421a42:	enter  0x1e21,0x24
  421a46:	arpl   WORD PTR [eax+ecx*8],di
  421a49:	into   
  421a4a:	dec    eax
  421a4b:	adc    DWORD PTR [ecx],eax
  421a4d:	rcr    DWORD PTR [ecx-0x4b6e7d78],1
  421a53:	out    0x26,ax
  421a56:	sbb    DWORD PTR [ebx],edx
  421a58:	xchg   ebx,eax
  421a59:	dec    ecx
  421a5a:	dec    ebp
  421a5b:	pop    edx
  421a5c:	dec    esp
  421a5d:	sub    eax,0x39982148
  421a62:	fsub   QWORD PTR [esi+eiz*1]
  421a65:	aam    0xba
  421a67:	data16 cli 
  421a69:	xchg   ebx,eax
  421a6a:	sar    BYTE PTR [ebx+0x37],1
  421a6d:	js     0x421ac2
  421a6f:	mov    ebp,0x836aaaf1
  421a74:	jg     0x421af0
  421a76:	dec    eax
  421a77:	inc    esp
  421a78:	iret   
  421a79:	call   0x73397290
  421a7e:	and    al,0xbc
  421a80:	jmp    0x1d548354
  421a85:	mov    ebx,0x33a2b74c
  421a8a:	cmp    al,0x55
  421a8c:	mov    ebp,DWORD PTR [ebx+0x5dab1ee3]
  421a92:	inc    ebp
  421a93:	scas   eax,DWORD PTR es:[edi]
  421a94:	cmp    dl,ch
  421a96:	inc    edi
  421a97:	push   0x2bff4cd5
  421a9c:	mov    ch,0x48
  421a9f:	push   esi
  421aa0:	test   eax,0x2bb12ac1
  421aa6:	mov    al,0x66
  421aa8:	mov    esi,0x30f36c91
  421aad:	loope  0x421aed
  421aaf:	sbb    DWORD PTR [edx],0x152658f5
  421ab5:	or     al,0x90
  421ab7:	aas    
  421ab8:	fcmovnu st,st(1)
  421aba:	pop    ds
  421abb:	popa   
  421abc:	clc    
  421abd:	xor    al,0xa4
  421abf:	mov    esi,0xc9c51e05
  421ac4:	sbb    bl,BYTE PTR [edi]
  421ac6:	(bad)  
  421ac7:	mov    eax,0xd09e7311
  421acc:	or     bl,dl
  421ace:	adc    edx,DWORD PTR [eax]
  421ad0:	sub    BYTE PTR [edi-0x1c],0x58
  421ad4:	mov    ds:0xb18cbd3a,eax
  421ad9:	mov    edi,0xfe0e7348
  421ade:	jo     0x421a68
  421ae0:	std    
  421ae1:	outs   dx,BYTE PTR ds:[esi]
  421ae2:	int3   
  421ae3:	add    eax,ecx
  421ae5:	dec    ebx
  421ae6:	xor    BYTE PTR [ecx+0x19483e0f],bl
  421aec:	mov    es,WORD PTR [edx+0x67]
  421aef:	stos   BYTE PTR es:[edi],al
  421af0:	mov    ah,0x93
  421af2:	and    eax,0xfe974f6a
  421af7:	js     0x421b14
  421af9:	aad    0x19
  421afb:	cld    
  421afc:	xchg   ecx,eax
  421afd:	mov    edi,0x59eb7b6b
  421b02:	xchg   DWORD PTR ds:0xb42433cc,ebx
  421b08:	mov    ebp,0x4eef5fd9
  421b0d:	sub    al,0x3
  421b0f:	ficom  WORD PTR [esi+0x7f]
  421b12:	repnz aam 0x48
  421b15:	in     eax,0x38
  421b17:	(bad)  
  421b18:	ja     0x421b0a
  421b1a:	inc    edi
  421b1b:	cmp    eax,0x2521db3c
  421b20:	cli    
  421b21:	fldcw  WORD PTR [eax]
  421b23:	dec    ebp
  421b24:	push   eax
  421b25:	ret    
  421b26:	jmp    0x21bb:0x45deaded
  421b2d:	jp     0x421b7a
  421b2f:	aam    0x1e
  421b31:	add    DWORD PTR [ebp-0x6d],0xaa43e0f9
  421b38:	add    eax,DWORD PTR [ebp+0x592b18ba]
  421b3e:	les    esi,FWORD PTR [esi-0x7210d0df]
  421b44:	mov    ebp,0xb3d9d79b
  421b49:	sbb    bh,al
  421b4b:	mov    WORD PTR [edx],?
  421b4d:	(bad)  [ebp+0x54]
  421b50:	pop    ds
  421b51:	and    al,0xa7
  421b53:	out    0x11,eax
  421b55:	data16 jnp 0x421b02
  421b58:	jo     0x421bbd
  421b5a:	dec    eax
  421b5b:	add    al,0xb1
  421b5d:	mov    al,0xe0
  421b5f:	arpl   WORD PTR ds:0x43a5b432,sp
  421b65:	cs dec eax
  421b67:	ret    
  421b68:	jno    0x421af2
  421b6a:	mov    ebp,0x48627b82
  421b6f:	aam    0xb8
  421b71:	sbb    cl,BYTE PTR ds:[esp+eiz*8+0x35]
  421b76:	jp     0x421b9e
  421b78:	lock mov ecx,0x41acf8f
  421b7e:	mov    esi,0xe37dab15
  421b83:	inc    ebp
  421b84:	(bad)  
  421b86:	mul    esp
  421b88:	aas    
  421b89:	test   al,0x69
  421b8b:	adc    BYTE PTR [edx-0x46],ah
  421b8e:	xchg   ebx,eax
  421b8f:	scas   eax,DWORD PTR es:[edi]
  421b90:	push   cs
  421b91:	xor    eax,0xc48d9c48
  421b96:	mov    bl,0xda
  421b98:	mov    ebp,0x55652555
  421b9d:	out    dx,al
  421b9e:	mov    eax,ds:0xda465d66
  421ba3:	aam    0x12
  421ba5:	hlt    
  421ba6:	sbb    ecx,DWORD PTR [edi-0x6fb7ec75]
  421bac:	popa   
  421bad:	push   edi
  421bae:	ficomp WORD PTR [ebx+0x72bfe80a]
  421bb4:	stos   BYTE PTR es:[edi],al
  421bb5:	xchg   BYTE PTR [ebx*8-0x37b7846b],ah
  421bbc:	mov    ecx,DWORD PTR [ecx]
  421bbe:	mov    ds,WORD PTR [ebp+0x1f]
  421bc1:	mov    al,ds:0x3f9d6688
  421bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421bc7:	retf   0xcf1a
  421bca:	cs in  eax,dx
  421bcc:	sti    
  421bcd:	mov    ds:0xe0e66df0,al
  421bd2:	jg     0x421b5b
  421bd4:	fadd   DWORD PTR [esi+0x17647eb1]
  421bda:	ret    
  421bdb:	data16 sbb ah,BYTE PTR [ebx-0x52]
  421bdf:	inc    eax
  421be0:	popf   
  421be1:	div    BYTE PTR [ebx]
  421be3:	mov    eax,ds:0x1e4cdd44
  421be8:	test   BYTE PTR [eax-0xa157f92],bl
  421bee:	pushf  
  421bef:	out    0x1a,al
  421bf1:	push   ebp
  421bf2:	pop    ss
  421bf3:	xlat   BYTE PTR ds:[ebx]
  421bf4:	sub    al,0x7a
  421bf6:	cmc    
  421bf7:	rcr    ah,cl
  421bf9:	fldcw  WORD PTR [eax+edx*1]
  421bfc:	cmp    dl,BYTE PTR [esi]
  421bfe:	sbb    ebp,edi
  421c00:	test   ch,ch
  421c02:	sub    BYTE PTR [edx+ebx*1-0x1fbd386f],dl
  421c09:	test   BYTE PTR [ecx],ah
  421c0b:	push   eax
  421c0c:	ja     0x421be7
  421c0e:	mov    al,ds:0x5b2f51b1
  421c13:	push   edx
  421c14:	rcl    BYTE PTR [edx],1
  421c16:	test   BYTE PTR [ebx],0xe8
  421c19:	jnp    0x421c63
  421c1b:	sar    DWORD PTR [esi],0x21
  421c1e:	fwait
  421c1f:	dec    eax
  421c20:	data16 outs dx,BYTE PTR ds:[esi]
  421c22:	and    esp,DWORD PTR [edi-0x7a]
  421c25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c26:	push   es
  421c27:	xor    esp,DWORD PTR [ecx]
  421c29:	sti    
  421c2a:	mov    al,ds:0x5f366a62
  421c2f:	add    al,0x35
  421c31:	fsubr  DWORD PTR [eax]
  421c33:	jo     0x421bcb
  421c35:	xchg   ecx,eax
  421c36:	jmp    0x2147:0xe7fc1c66
  421c3d:	jmp    0x421c93
  421c3f:	ins    BYTE PTR es:[edi],dx
  421c40:	sahf   
  421c41:	xor    ecx,DWORD PTR [ecx]
  421c43:	cmp    ebx,eax
  421c45:	lock test ebx,0x66d128b9
  421c4c:	daa    
  421c4d:	mov    BYTE PTR [ecx+esi*4],al
  421c50:	sbb    al,BYTE PTR [eax+eiz*2]
  421c53:	in     al,dx
  421c54:	(bad)  
  421c55:	scas   eax,DWORD PTR es:[edi]
  421c56:	jno    0x421c21
  421c58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c59:	loopne 0x421c8c
  421c5b:	shl    BYTE PTR [ebp-0x55],1
  421c5e:	daa    
  421c5f:	in     al,0x1b
  421c61:	or     BYTE PTR [edx-0x4a],ah
  421c64:	and    al,0xcb
  421c66:	into   
  421c67:	retf   
  421c68:	ins    BYTE PTR es:[edi],dx
  421c69:	adc    DWORD PTR [ebp+0x489f146f],0xc7d9a35d
  421c73:	adc    eax,0xaef66641
  421c78:	mov    ebx,0x1ed15c46
  421c7d:	pop    ss
  421c7e:	dec    eax
  421c7f:	loop   0x421c96
  421c81:	cmp    eax,0xac84705e
  421c86:	outs   dx,BYTE PTR ds:[esi]
  421c87:	test   BYTE PTR [edx-0x4e54360e],ch
  421c8d:	mov    ecx,0x55d2e6c5
  421c92:	scas   eax,DWORD PTR es:[edi]
  421c93:	fwait
  421c94:	in     eax,0xa3
  421c96:	dec    eax
  421c97:	sub    DWORD PTR [ecx],0xb2ebb4bf
  421c9d:	pop    eax
  421c9e:	add    al,0x67
  421ca0:	dec    edx
  421ca1:	inc    ebx
  421ca2:	(bad)  
  421ca3:	sbb    al,0x1b
  421ca5:	push   0xfffffffb
  421ca7:	sbb    al,dh
  421ca9:	mov    ch,0x36
  421cab:	xchg   ebp,eax
  421cac:	adc    bl,BYTE PTR ds:0x5f1f6dd7
  421cb2:	inc    ecx
  421cb3:	mov    edx,DWORD PTR [bx+si+0x37e4]
  421cb8:	add    al,0x36
  421cba:	add    ah,ch
  421cbc:	jne    0x421cac
  421cbe:	push   ebp
  421cbf:	nop
  421cc0:	(bad)  
  421cc1:	ds xor edi,eax
  421cc4:	ficomp WORD PTR es:[ebx-0x697124a4]
  421ccb:	and    DWORD PTR [edx-0x76],ecx
  421cce:	sub    al,0x27
  421cd0:	and    DWORD PTR [ecx-0x6026206],esi
  421cd6:	ret    
  421cd7:	in     al,dx
  421cd8:	cdq    
  421cd9:	in     eax,0xd7
  421cdb:	push   esp
  421cdc:	popf   
  421cdd:	icebp  
  421cde:	popa   
  421cdf:	push   es
  421ce0:	pop    ds
  421ce1:	add    BYTE PTR [ecx],al
  421ce3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  421ce5:	push   ds
  421ce6:	add    DWORD PTR es:[edx-0x1d56248b],ecx
  421ced:	call   0x795f:0x88455148
  421cf4:	es mov ecx,0xbf1ab5d2
  421cfa:	mov    al,ds:0xe3b43300
  421cff:	xchg   ebx,eax
  421d00:	add    bl,dl
  421d02:	sbb    ch,BYTE PTR ds:0x40d61d7e
  421d08:	nop
  421d09:	ds leave 
  421d0b:	test   eax,0x26742a4f
  421d10:	xchg   ecx,eax
  421d11:	xchg   BYTE PTR [eax-0x10],cl
  421d14:	enter  0xe1d9,0x8
  421d18:	pop    es
  421d19:	jge    0x421d0b
  421d1b:	mov    ebx,ss
  421d1d:	xchg   esi,eax
  421d1e:	in     eax,0xbf
  421d20:	push   esi
  421d21:	out    dx,al
  421d22:	mov    ebx,0xe5da4d8b
  421d27:	jge    0x421d6c
  421d29:	sbb    DWORD PTR [edi-0xe],edx
  421d2c:	std    
  421d2d:	inc    esi
  421d2e:	xchg   esp,eax
  421d2f:	test   BYTE PTR [esi-0x27],bh
  421d32:	js     0x421d7c
  421d34:	pop    es
  421d35:	enter  0x143d,0x78
  421d39:	sbb    bl,BYTE PTR [ecx+0x19]
  421d3c:	jmp    0x4ad47781
  421d41:	pushf  
  421d42:	dec    eax
  421d43:	fiadd  DWORD PTR [edi-0x60f1cf27]
  421d49:	je     0x421d0d
  421d4b:	popa   
  421d4c:	dec    esp
  421d4d:	adc    ecx,DWORD PTR ds:0x4ae2e6f3
  421d53:	pop    edi
  421d54:	pop    edx
  421d55:	pop    ecx
  421d56:	sbb    al,0xe3
  421d58:	xchg   BYTE PTR [esi-0x66],dl
  421d5b:	cdq    
  421d5c:	in     al,dx
  421d5d:	div    DWORD PTR [esi+eiz*2-0x1b]
  421d61:	js     0x421da1
  421d63:	int    0x1a
  421d65:	xchg   DWORD PTR [ebx-0x1a2f8e8e],eax
  421d6b:	mov    ds:0xb006d9e0,al
  421d70:	out    dx,al
  421d71:	ins    DWORD PTR es:[edi],dx
  421d72:	pusha  
  421d73:	jns    0x421dc4
  421d75:	add    al,0xf0
  421d77:	pop    es
  421d78:	mov    bh,0x77
  421d7a:	dec    eax
  421d7b:	mov    ds:0x36eb7fdf,eax
  421d80:	call   0x5a8b25ac
  421d85:	out    0xdc,eax
  421d87:	dec    esi
  421d88:	(bad)  
  421d89:	cli    
  421d8a:	das    
  421d8b:	sub    esi,DWORD PTR [edi-0x6d1d69ac]
  421d91:	fstp   DWORD PTR [edi]
  421d93:	or     al,0xf8
  421d95:	xchg   ecx,eax
  421d96:	mov    esi,0x6a892013
  421d9b:	xlat   BYTE PTR ds:[ebx]
  421d9c:	lds    ebx,FWORD PTR [ebx+ecx*2+0xe]
  421da0:	mov    ?,WORD PTR [ecx+0x15]
  421da3:	or     BYTE PTR [eax-0x27],bh
  421da6:	test   BYTE PTR [edx+edx*4],bl
  421da9:	pop    ebp
  421daa:	jge    0x421d67
  421dac:	jne    0x421deb
  421dae:	sub    ecx,DWORD PTR [ebx-0x18b73947]
  421db4:	mov    ah,0xc8
  421db6:	fld    TBYTE PTR [edi+eiz*4]
  421db9:	adc    bh,al
  421dbb:	xchg   di,ax
  421dbd:	int    0x14
  421dbf:	pop    es
  421dc0:	sbb    bl,BYTE PTR [esi+0x48241f97]
  421dc6:	mov    es,ebp
  421dc8:	enter  0x31d9,0xdc
  421dcc:	or     BYTE PTR [ebx],0x53
  421dcf:	ror    DWORD PTR [ebx+eax*4],1
  421dd2:	xchg   esp,eax
  421dd3:	aam    0x87
  421dd5:	sub    ecx,DWORD PTR [eax-0x4d]
  421dd8:	jg     0x421de2
  421dda:	add    BYTE PTR [ebx-0x6b],dl
  421ddd:	ret    
  421dde:	pop    ebx
  421ddf:	data16 mov cl,0x62
  421de2:	sub    eax,0x33ce1db0
  421de7:	pusha  
  421de8:	clc    
  421de9:	dec    eax
  421deb:	repnz mov esi,0x4a66be9d
  421df1:	imul   ebp,DWORD PTR [ebx-0x4d22e443],0xfffffffb
  421df8:	call   0x7a7b750d
  421dfd:	pop    esp
  421dfe:	retf   0xb332
  421e01:	sub    al,BYTE PTR [edi-0x3939c58c]
  421e07:	sub    eax,0x29bb73a5
  421e0c:	sub    cl,bl
  421e0e:	lahf   
  421e0f:	dec    ebp
  421e10:	into   
  421e11:	inc    ebx
  421e12:	dec    edx
  421e13:	dec    eax
  421e14:	push   eax
  421e15:	fstp   DWORD PTR [esi-0x7ebf41bb]
  421e1b:	inc    esi
  421e1c:	(bad)  
  421e1d:	jmp    0x1e4b:0x67207fce
  421e24:	adc    ebx,DWORD PTR [edx-0x1fbc4f97]
  421e2a:	push   eax
  421e2b:	test   dh,0x9b
  421e2e:	jmp    0x564bb8bf
  421e33:	sar    ecx,1
  421e35:	or     al,0xdc
  421e37:	mov    edx,0x9ce0a421
  421e3c:	jle    0x421e68
  421e3e:	xchg   esi,ebx
  421e40:	xchg   ebx,eax
  421e41:	repz aaa 
  421e43:	test   DWORD PTR [edi+0x3f66ee2f],0x1a9aaa8a
  421e4d:	xor    BYTE PTR [edx+0x774ceef1],bh
  421e53:	xchg   esp,eax
  421e54:	push   eax
  421e55:	mov    edx,0x18822ff4
  421e5a:	and    BYTE PTR [edx+edi*2+0x7002e691],ch
  421e61:	push   esi
  421e62:	mov    ah,0x41
  421e64:	and    DWORD PTR [ebx-0x28],ecx
  421e67:	jae    0x421dee
  421e69:	cld    
  421e6a:	lods   al,BYTE PTR ds:[esi]
  421e6b:	fldenv [ecx-0x513d97c4]
  421e71:	sub    al,0x26
  421e73:	bound  ebx,QWORD PTR [bx+si-0x52]
  421e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e78:	ss retf 0x43fa
  421e7c:	fcmovu st,st(5)
  421e7e:	cmp    DWORD PTR [esi+0x61e42dc3],ebx
  421e84:	lds    ecx,FWORD PTR [edx+edx*2+0x66]
  421e88:	jl     0x421e17
  421e8a:	xlat   BYTE PTR ds:[ebx]
  421e8b:	mov    eax,ds:0x4bc9d61a
  421e90:	cwde   
  421e91:	cmp    al,0x30
  421e93:	fsubr  DWORD PTR [ebx+0x288b1135]
  421e99:	test   DWORD PTR [esi-0x61],ecx
  421e9c:	sbb    ch,ch
  421e9e:	retf   
  421e9f:	xor    esp,eax
  421ea1:	fs in  eax,0xfb
  421ea4:	pop    ebp
  421ea5:	lds    ebx,FWORD PTR [ebx-0x45]
  421ea8:	mov    ds:0xe64b4923,eax
  421ead:	rcl    BYTE PTR [ebx],1
  421eaf:	jecxz  0x421ede
  421eb1:	in     al,0x99
  421eb3:	imul   esi,ebp,0x59
  421eb6:	stos   DWORD PTR es:[edi],eax
  421eb7:	cmp    eax,0x8e937090
  421ebc:	sub    DWORD PTR [ebp+0x3c],ebp
  421ebf:	push   es
  421ec0:	inc    esp
  421ec1:	fld    DWORD PTR [ecx-0x49]
  421ec4:	bswap  esi
  421ec6:	loope  0x421e63
  421ec8:	mov    eax,ds:0x1a82f467
  421ecd:	popa   
  421ece:	mov    ebx,0x205618e1
  421ed3:	jo     0x421e65
  421ed5:	hlt    
  421ed6:	jg     0x421e75
  421ed8:	push   esi
  421ed9:	xchg   DWORD PTR [eax-0x41],ecx
  421edc:	cld    
  421edd:	jl     0x421ef3
  421edf:	and    al,0x8f
  421ee1:	imul   ebx,DWORD PTR [ebx+0x42384266],0xffffff9c
  421ee8:	sbb    dl,ch
  421eea:	call   0x813eb011
  421eef:	mov    dh,0x23
  421ef1:	push   ebx
  421ef2:	test   al,0xbe
  421ef4:	leave  
  421ef5:	mov    ecx,0x854d66a9
  421efa:	mov    cl,0x42
  421efc:	sbb    ch,BYTE PTR [edx+esi*8]
  421eff:	xor    esp,DWORD PTR [ecx+0x4836c4e5]
  421f05:	fstp   DWORD PTR [edi+0x61]
  421f08:	jmp    0x421f30
  421f0a:	cli    
  421f0b:	jae    0x421f4e
  421f0d:	cwde   
  421f0e:	add    eax,0x489977db
  421f13:	mov    eax,ds:0x1785eb7a
  421f18:	les    ebp,FWORD PTR [ebx+0x7a]
  421f1b:	data16 (bad) 
  421f1d:	lds    esp,FWORD PTR [edx+eiz*8+0x31]
  421f21:	and    ebp,DWORD PTR [ebx]
  421f23:	call   FWORD PTR [edx]
  421f25:	fs icebp 
  421f27:	adc    dl,dl
  421f29:	or     DWORD PTR [eax+ecx*4-0x2f],edi
  421f2d:	jmp    0x421f9c
  421f2f:	(bad)  
  421f30:	jno    0x421f0b
  421f32:	leave  
  421f33:	or     DWORD PTR [edi],esi
  421f35:	es and edi,esp
  421f38:	xchg   ebp,eax
  421f39:	jmp    0x794f:0x66b597e1
  421f40:	push   0x21
  421f42:	pop    eax
  421f43:	adc    eax,0xd93cd98e
  421f48:	add    al,0x24
  421f4a:	inc    edx
  421f4b:	gs std 
  421f4d:	ret    0x815a
  421f50:	outs   dx,BYTE PTR ds:[esi]
  421f51:	mov    ch,0x66
  421f53:	out    dx,eax
  421f54:	push   esi
  421f55:	mov    cl,0x88
  421f57:	or     edx,DWORD PTR [eax+ebp*8-0x7]
  421f5b:	push   ds
  421f5c:	les    ebx,FWORD PTR [esi-0x50]
  421f5f:	and    edi,ebx
  421f61:	mov    edx,0xcd044a77
  421f66:	clc    
  421f67:	enter  0x8eb2,0x66
  421f6b:	dec    esi
  421f6c:	sub    bh,0x8c
  421f6f:	xor    esp,esi
  421f71:	or     eax,0x36fecf08
  421f76:	xchg   edi,eax
  421f77:	ins    DWORD PTR es:[edi],dx
  421f78:	cli    
  421f79:	neg    eax
  421f7b:	leave  
  421f7c:	jp     0x421fb2
  421f7e:	xlat   BYTE PTR ds:[ebx]
  421f7f:	jp     0x421f75
  421f81:	das    
  421f82:	cmp    eax,0x82d985ed
  421f87:	loop   0x421fd5
  421f89:	(bad)  
  421f8a:	std    
  421f8b:	dec    edi
  421f8c:	outs   dx,BYTE PTR ds:[esi]
  421f8d:	lock or DWORD PTR [ebx],ecx
  421f90:	mov    eax,0x1ab934e8
  421f95:	sahf   
  421f96:	jmp    0x9e30:0x32d0252a
  421f9d:	stos   DWORD PTR es:[edi],eax
  421f9e:	dec    eax
  421f9f:	test   al,0x64
  421fa1:	sub    dl,bl
  421fa3:	push   ds
  421fa4:	sbb    dh,bh
  421fa6:	div    BYTE PTR [ebp-0x6]
  421fa9:	mov    esi,0xa0bb053a
  421fae:	xchg   ebx,eax
  421faf:	(bad)  
  421fb1:	cs dec eax
  421fb3:	jae    0x421fdf
  421fb5:	and    BYTE PTR [ecx-0x59],bh
  421fb8:	(bad)  
  421fb9:	enter  0x7500,0xd7
  421fbd:	cdq    
  421fbe:	ins    DWORD PTR es:[edi],dx
  421fbf:	pop    ds
  421fc0:	(bad)  [ecx+0x5831900a]
  421fc6:	fs mov edx,0x10ae5621
  421fcc:	stos   BYTE PTR es:[edi],al
  421fcd:	rcl    bl,cl
  421fcf:	stos   DWORD PTR es:[edi],eax
  421fd0:	push   es
  421fd1:	fistp  WORD PTR [ebp-0x6c]
  421fd4:	or     al,0xb4
  421fd6:	pop    esp
  421fd7:	das    
  421fd8:	sub    BYTE PTR [eax],dh
  421fda:	mov    ds:0xe19d0a26,eax
  421fdf:	int    0xd1
  421fe1:	or     DWORD PTR [ebx+0xa],0xffffff98
  421fe5:	jns    0x421f88
  421fe7:	mov    eax,0x49e45301
  421fec:	iret   
  421fed:	fnstcw WORD PTR ds:0x3002bfdc
  421ff3:	or     edi,edx
  421ff5:	repnz xchg ecx,eax
  421ff7:	and    edi,ebx
  421ff9:	lea    ecx,[edi+0x2f]
  421ffc:	jmp    0x422040
  421ffe:	hlt    
  421fff:	push   esp
  422000:	adc    dl,dl
  422002:	paddd  mm0,QWORD PTR [edi-0x28]
  422006:	dec    esi
  422007:	data16 and bl,BYTE PTR [ebp-0x13e4f741]
  42200e:	in     eax,0x7b
  422010:	xor    eax,0xffb2897d
  422015:	xor    eax,0xf564d005
  42201a:	daa    
  42201b:	mov    edx,0xb1516037
  422020:	aad    0x78
  422022:	imul   edi,DWORD PTR [eax-0x6777482c],0x901eef1a
  42202c:	pop    ebx
  42202d:	je     0x421fec
  42202f:	adc    DWORD PTR [ebp-0x27],eax
  422032:	ror    DWORD PTR ds:0x26c15c18,1
  422038:	xchg   esi,eax
  422039:	sbb    BYTE PTR [ecx+0x48700690],bh
  42203f:	or     esi,esp
  422041:	lods   eax,DWORD PTR ds:[esi]
  422042:	rcl    BYTE PTR [edi+0x6720ee05],0xff
  422049:	mov    eax,0xc21a20bd
  42204e:	(bad)
  422052:	in     eax,dx
  422053:	imul   edx,DWORD PTR [ebx+0x6a7568e7],0xd3d98945
  42205d:	mov    edi,0x8b1a92a8
  422062:	xor    al,BYTE PTR [edi+0x17]
  422065:	enter  0xea9e,0x6b
  422069:	cmp    DWORD PTR [esi+0x6d82dee1],edx
  42206f:	push   ds
  422070:	sbb    bl,BYTE PTR [esi+esi*8-0xfe62f26]
  422077:	cmp    BYTE PTR [eax-0x41],cl
  42207a:	xchg   DWORD PTR [ecx-0x7d50c882],esi
  422080:	loope  0x4220a2
  422082:	inc    esp
  422083:	add    al,0x1f
  422085:	mov    ebx,0xa1fae400
  42208a:	mov    eax,0xbf6a1a67
  42208f:	xchg   ebp,eax
  422090:	jmp    0xbc3d8208
  422095:	push   ebx
  422096:	enter  0x7dd7,0x4d
  42209a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42209b:	data16 aad 0xe8
  42209e:	mov    cl,0x20
  4220a0:	sbb    bl,bh
  4220a2:	and    eax,0x4a64db5a
  4220a7:	nop
  4220a8:	xor    ebx,ecx
  4220aa:	fs mov bh,0xde
  4220ad:	sub    BYTE PTR [ecx],ch
  4220af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220b0:	aad    0x13
  4220b2:	mov    ds:0x83f5e575,eax
  4220b7:	retf   
  4220b8:	call   0xdd22:0x6c8528ae
  4220bf:	bound  eax,QWORD PTR [esp+edi*8-0x36]
  4220c3:	data16 jo 0x42210d
  4220c6:	jp     0x42212c
  4220c8:	adc    BYTE PTR [ebp+0x4a1bb34e],al
  4220ce:	dec    eax
  4220cf:	jbe    0x422107
  4220d1:	je     0x422112
  4220d3:	mov    ds:0x6e06ca7a,eax
  4220d8:	mov    esp,0x909db47a
  4220dd:	mov    ch,0xd2
  4220df:	daa    
  4220e0:	sub    eax,0x3890d33c
  4220e5:	fisttp DWORD PTR [ecx-0x37d80cab]
  4220eb:	xor    BYTE PTR [ecx+0x1a64bb14],0xf7
  4220f2:	das    
  4220f3:	or     eax,0x98b143a1
  4220f8:	sbb    ah,BYTE PTR [edx]
  4220fa:	fst    st(4)
  4220fc:	dec    edi
  4220fd:	mov    ds:0x4b333677,al
  422102:	je     0x422119
  422104:	(bad)  
  422105:	fldenv [esi+ebx*8-0x19]
  422109:	jle    0x422121
  42210b:	lahf   
  42210c:	popa   
  42210d:	cmp    BYTE PTR [ecx+0x4803d656],ah
  422113:	test   DWORD PTR [esi+eiz*8+0x7],0xf3058978
  42211b:	pop    bp
  42211d:	mov    eax,0xa037c8ce
  422122:	imul   esi,DWORD PTR [ebx-0x3ea20266],0x226a4391
  42212c:	push   DWORD PTR cs:[edx-0x1c]
  422130:	mov    dl,0xd9
  422132:	mov    edi,0x1f7e7efe
  422137:	add    esi,DWORD PTR [esi]
  422139:	or     edx,ebp
  42213b:	push   esi
  42213c:	pop    edx
  42213d:	adc    esp,DWORD PTR [edi+0x18]
  422140:	inc    eax
  422141:	xor    eax,0x1d1ce061
  422146:	(bad)  [esi+0x70]
  422149:	or     DWORD PTR [ecx+0x418738ea],0xffffffa6
  422150:	fimul  DWORD PTR [esi+0x38]
  422153:	jle    0x422174
  422155:	pushf  
  422156:	stos   BYTE PTR es:[edi],al
  422157:	lock pop edi
  422159:	lods   eax,DWORD PTR ds:[esi]
  42215a:	jecxz  0x4221c2
  42215c:	adc    BYTE PTR [edx-0x53],al
  42215f:	dec    esp
  422160:	aaa    
  422161:	out    0xd8,al
  422163:	in     eax,0x1a
  422165:	or     edi,eax
  422167:	(bad)  [eax]
  422169:	(bad)  
  42216a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42216b:	add    eax,DWORD PTR [ecx]
  42216d:	mov    ebx,0xf78c6656
  422172:	iret   
  422173:	fcomp  QWORD PTR [edx]
  422175:	jno    0x422152
  422177:	sub    dl,dl
  422179:	hlt    
  42217a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42217b:	dec    eax
  42217c:	gs fld st(4)
  42217f:	add    BYTE PTR [eax-0x1865310f],bh
  422185:	fcomp  QWORD PTR [eax]
  422187:	call   0x7a9f:0xc48645b
  42218e:	hlt    
  42218f:	dec    esi
  422190:	aad    0x62
  422192:	xor    al,0x6a
  422194:	pop    ecx
  422195:	sbb    edx,DWORD PTR [edi+0x489c9848]
  42219b:	repnz and al,0xae
  42219e:	out    0x77,eax
  4221a0:	test   eax,edi
  4221a2:	call   0x4ced330d
  4221a7:	xor    DWORD PTR [edx],ebx
  4221a9:	push   ebx
  4221aa:	fidiv  WORD PTR [edi+ebx*1+0x2bf9a629]
  4221b1:	loopne 0x4221fb
  4221b3:	inc    al
  4221b5:	xchg   esp,eax
  4221b6:	and    ebx,esp
  4221b8:	jp     0x422151
  4221ba:	adc    edi,esp
  4221bc:	sub    BYTE PTR [ebp+0x13],dh
  4221bf:	pusha  
  4221c0:	stos   BYTE PTR es:[edi],al
  4221c1:	(bad)  [ebx+edx*4-0x793e9ac8]
  4221c8:	hlt    
  4221c9:	in     eax,dx
  4221ca:	js     0x422232
  4221cc:	add    edx,DWORD PTR [ebx]
  4221ce:	push   esp
  4221cf:	xchg   esi,eax
  4221d0:	or     al,0xbc
  4221d2:	scas   al,BYTE PTR es:[edi]
  4221d3:	inc    edx
  4221d4:	into   
  4221d5:	cmovs  ecx,DWORD PTR [edx+eiz*2+0x6]
  4221da:	lahf   
  4221db:	sahf   
  4221dc:	aad    0x4
  4221de:	hlt    
  4221df:	data16 jecxz 0x42224e
  4221e2:	repnz push ebx
  4221e4:	sbb    ch,BYTE PTR [edi]
  4221e6:	imul   eax,DWORD PTR [ebx+0x65fb091],0xffffff82
  4221ed:	(bad)  [ecx]
  4221ef:	xor    DWORD PTR [ecx-0x53],edx
  4221f2:	dec    esi
  4221f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221f4:	and    eax,0x1e926ddb
  4221f9:	ror    BYTE PTR [eax-0x14],0xd8
  4221fd:	ror    edx,cl
  4221ff:	cld    
  422200:	jge    0x422228
  422202:	mov    ecx,0x451caa66
  422207:	and    bl,BYTE PTR [edx]
  422209:	imul   eax,esi,0xfffffff1
  42220c:	push   esi
  42220d:	div    DWORD PTR [esi]
  42220f:	rcl    BYTE PTR [edx+ebx*8],cl
  422212:	idiv   BYTE PTR [edx]
  422214:	push   ds
  422215:	dec    eax
  422216:	in     al,dx
  422217:	sbb    al,0x2c
  422219:	xlat   BYTE PTR ds:[ebx]
  42221a:	mov    al,ds:0x47f1a7b2
  42221f:	aaa    
  422220:	sti    
  422221:	jo     0x4221fb
  422223:	icebp  
  422224:	sub    edx,esp
  422226:	or     dh,BYTE PTR [esi+0x7a]
  422229:	dec    eax
  42222a:	das    
  42222b:	adc    ah,BYTE PTR [ebx-0x74ea6977]
  422231:	pop    ecx
  422232:	dec    eax
  422233:	mov    al,0x25
  422235:	out    dx,al
  422236:	mov    ch,0x30
  422238:	sub    BYTE PTR [esi+0x2dc766df],bh
  42223e:	jmp    FWORD PTR [eax+eax*2+0x2c15c2aa]
  422245:	mov    esp,eax
  422247:	and    dl,BYTE PTR [esi-0x50]
  42224a:	dec    eax
  42224b:	push   eax
  42224c:	fcomp  st(1)
  42224e:	mov    ebp,0x649e4bf9
  422253:	aas    
  422254:	ins    BYTE PTR es:[edi],dx
  422255:	cmp    dl,BYTE PTR [ecx+ebx*2]
  422258:	push   0xffffff8b
  42225a:	dec    eax
  42225b:	add    edx,DWORD PTR [ebx-0x60191f0c]
  422261:	cmp    eax,0x994ca1d4
  422266:	dec    eax
  422267:	pop    edi
  422268:	adc    DWORD PTR [ecx],0xffffffa4
  42226b:	push   0x1f
  42226d:	icebp  
  42226e:	inc    edi
  42226f:	and    eax,0x5ce0ce49
  422274:	retf   
  422275:	or     cl,BYTE PTR [ebx]
  422277:	cmp    esp,0xffffffb0
  42227a:	xchg   ebp,eax
  42227b:	mov    ax,0xe87e
  42227f:	sub    BYTE PTR [esi-0x70],al
  422282:	push   ecx
  422283:	in     eax,dx
  422284:	xchg   DWORD PTR [ebx+0x76],ecx
  422287:	addr16 cmp ch,al
  42228a:	sbb    bh,BYTE PTR [ebx+0x6d]
  42228d:	inc    DWORD PTR [ebx+edx*4-0x7d]
  422291:	rcl    ecx,cl
  422293:	cbw    
  422295:	pusha  
  422296:	cmp    esi,DWORD PTR [ebx+edi*2]
  422299:	(bad)  
  42229a:	dec    eax
  42229b:	inc    edi
  42229c:	push   cs
  42229d:	push   ebx
  42229e:	inc    BYTE PTR [edi]
  4222a0:	xor    ch,al
  4222a2:	mov    al,ds:0x8aa0f366
  4222a7:	mov    dl,0x1a
  4222a9:	test   al,0x30
  4222ab:	push   esp
  4222ac:	push   0xf51e7e4d
  4222b1:	(bad)  
  4222b3:	mov    WORD PTR [edi+0x46],gs
  4222b6:	pop    eax
  4222b7:	lahf   
  4222b8:	jns    0x422256
  4222ba:	xchg   edx,eax
  4222bb:	sbb    edx,DWORD PTR [eax+0x192448ac]
  4222c1:	push   edx
  4222c2:	enter  0x727b,0x1c
  4222c6:	aas    
  4222c7:	jne    0x422304
  4222c9:	(bad)  
  4222cb:	adc    DWORD PTR [ebp-0x4f],esp
  4222ce:	call   0x527:0x130c1ac4
  4222d5:	pop    es
  4222d6:	enter  0x668c,0xd7
  4222da:	cmp    BYTE PTR [esi+0x27],dl
  4222dd:	out    0x76,eax
  4222df:	inc    bp
  4222e1:	lods   al,BYTE PTR ds:[esi]
  4222e2:	mov    ds:0xcaf91a96,al
  4222e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222e8:	lea    edi,[ebp+0x42]
  4222eb:	xchg   esp,eax
  4222ec:	mov    ds:0x704de6d9,al
  4222f1:	shl    ah,cl
  4222f3:	imul   BYTE PTR [eax+0x4e99ca7f]
  4222f9:	inc    ecx
  4222fa:	dec    eax
  4222fb:	mov    dl,0x78
  4222fd:	cmp    al,ah
  4222ff:	(bad)  
  422300:	enter  0x6de,0x6b
  422304:	out    0x59,al
  422306:	into   
  422307:	shl    DWORD PTR [edx-0x19],cl
  42230a:	in     al,0xc0
  42230c:	sbb    dh,BYTE PTR [ecx+0x30]
  42230f:	fld    DWORD PTR [esi+0x3e514969]
  422315:	fnstenv [ebp+0x31]
  422318:	xor    al,cl
  42231a:	loop   0x4222ae
  42231c:	dec    ebx
  42231d:	push   cs
  42231e:	jle    0x42233b
  422320:	push   ebp
  422321:	dec    esi
  422322:	inc    esi
  422323:	test   DWORD PTR [edx],ebx
  422325:	push   ebp
  422326:	inc    ecx
  422327:	pop    esp
  422328:	mov    esp,0xb5cf75e4
  42232d:	fld    st(5)
  42232f:	push   esp
  422330:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422331:	jne    0x422343
  422333:	cmp    al,0x7e
  422335:	ficom  DWORD PTR [ebx]
  422337:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422338:	sbb    al,BYTE PTR [ebx+edi*4]
  42233b:	loope  0x42235a
  42233d:	outs   dx,BYTE PTR ds:[esi]
  42233e:	mov    cl,0x3a
  422340:	fcmovnu st,st(5)
  422342:	xor    al,0x61
  422344:	xchg   BYTE PTR [ebx+0x2d931a7b],cl
  42234a:	imul   esp,DWORD PTR [esi],0x16e07d1a
  422350:	int    0x36
  422352:	mov    bl,0x98
  422354:	in     eax,0x18
  422356:	shl    BYTE PTR [esi],0x1a
  422359:	retf   0x6f5a
  42235c:	leave  
  42235d:	dec    DWORD PTR [eax+ecx*4+0x1a]
  422361:	mov    ds:0x55998c3b,eax
  422366:	inc    esp
  422367:	cmp    BYTE PTR [ebx],bl
  422369:	fnstcw WORD PTR [edi]
  42236b:	mov    ch,0xae
  42236d:	add    edx,ebp
  42236f:	and    BYTE PTR [esp+edx*1-0x50],dh
  422373:	clc    
  422374:	dec    eax
  422375:	ret    0x4748
  422378:	fs addr16 mov bl,0x9f
  42237c:	outs   dx,DWORD PTR ds:[esi]
  42237d:	imul   BYTE PTR ds:0xa46a1767
  422383:	daa    
  422384:	sbb    dh,dl
  422386:	jmp    0x8ef:0x96af38e2
  42238d:	fidivr DWORD PTR [edx-0x33]
  422390:	adc    bh,ah
  422392:	xchg   edx,eax
  422393:	hlt    
  422394:	inc    edi
  422395:	or     dh,BYTE PTR [edx]
  422397:	add    edx,DWORD PTR [ebx-0xa]
  42239a:	inc    edi
  42239b:	stc    
  42239c:	stc    
  42239d:	imul   ebx,DWORD PTR [esp+eiz*8+0x69066379],0xfa4effca
  4223a8:	and    eax,0x67fd281b
  4223ad:	rcl    DWORD PTR [ebx-0x40],1
  4223b0:	sbb    dl,BYTE PTR [edi-0x57]
  4223b3:	out    0xf1,al
  4223b5:	fldenv [ecx]
  4223b7:	aad    0x41
  4223b9:	dec    BYTE PTR [edi+eax*2+0x78bf0666]
  4223c0:	nop
  4223c1:	repz inc edi
  4223c3:	es mov bh,0x1f
  4223c6:	gs push ebx
  4223c8:	test   DWORD PTR [ecx+edi*4+0x17a69a66],ebx
  4223cf:	mov    WORD PTR [edx],ds
  4223d1:	rcl    DWORD PTR [ebp+0x77b2080e],1
  4223d7:	cmp    BYTE PTR [eax-0x27],ah
  4223da:	retf   
  4223db:	jl     0x4223a5
  4223dd:	push   0x4d
  4223df:	fs popa 
  4223e1:	div    BYTE PTR [eax]
  4223e3:	adc    DWORD PTR [esi],ebp
  4223e5:	out    0x47,al
  4223e7:	xor    BYTE PTR [edx-0x2b],0x25
  4223eb:	bound  eax,QWORD PTR [eax]
  4223ed:	cs pop eax
  4223ef:	data16 icebp 
  4223f1:	data16 neg BYTE PTR [edx]
  4223f4:	adc    bl,ch
  4223f6:	mov    esi,0x495a7f8b
  4223fb:	or     esp,ecx
  4223fd:	test   ch,ah
  4223ff:	in     al,dx
  422400:	mov    al,0xda
  422402:	sub    ecx,esi
  422404:	push   ebx
  422405:	aaa    
  422406:	stos   BYTE PTR es:[edi],al
  422407:	adc    ch,BYTE PTR [ecx+0x28706899]
  42240d:	xchg   edx,eax
  42240e:	or     al,0x35
  422410:	mov    bh,BYTE PTR [ecx]
  422412:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422413:	dec    ebp
  422414:	popf   
  422415:	retf   0xdfa8
  422418:	sbb    BYTE PTR [ebp-0x42f3962a],dh
  42241e:	mov    cl,0x4e
  422420:	push   ds
  422421:	inc    esi
  422422:	enter  0x22cd,0xa0
  422426:	dec    eax
  422427:	aas    
  422428:	(bad)
  42242c:	add    edx,ebx
  42242e:	dec    ecx
  42242f:	(bad)  
  422430:	das    
  422431:	out    0x56,al
  422433:	fcmove st,st(2)
  422435:	les    edi,FWORD PTR [ebx+0x50]
  422438:	mov    WORD PTR [esi-0x27e83ab8],ss
  42243e:	cmc    
  42243f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422440:	cmp    eax,0xc366da50
  422445:	cwde   
  422446:	popf   
  422447:	add    eax,0x3156f51d
  42244c:	inc    esi
  42244d:	rcr    DWORD PTR [edx+0x35],1
  422450:	loop   0x4224b4
  422452:	outs   dx,BYTE PTR ds:[esi]
  422453:	sub    BYTE PTR cs:[ecx],dh
  422456:	and    DWORD PTR [edx+0x3f],ebp
  422459:	push   esi
  42245a:	jae    0x422484
  42245c:	push   0xffffff9d
  42245e:	stc    
  42245f:	or     DWORD PTR [esi],esi
  422461:	imul   edx,DWORD PTR [eax+0x65],0x5c
  422465:	rcl    al,cl
  422467:	sub    dl,BYTE PTR ds:0xd10d741a
  42246d:	fnstcw WORD PTR [esi-0x3ea4cf72]
  422473:	cmp    eax,0xf46b8ef
  422478:	push   ds
  422479:	dec    esi
  42247a:	dec    edi
  42247b:	test   al,0x3a
  42247d:	mov    ebx,0x2867cc0e
  422482:	mov    fs,WORD PTR [eax+0x20]
  422485:	(bad)  
  422487:	dec    esi
  422488:	mov    cl,0xe6
  42248a:	dec    ebp
  42248b:	add    eax,0x50300524
  422490:	(bad)  es:[ecx-0x71]
  422494:	imul   esi,esp,0x6e
  422497:	jg     0x4224a1
  422499:	lods   al,BYTE PTR ds:[esi]
  42249a:	enter  0xab3b,0x65
  42249e:	dec    eax
  42249f:	test   bh,dl
  4224a1:	fs js  0x42244f
  4224a4:	and    edi,DWORD PTR [ebp-0x65]
  4224a7:	dec    di
  4224a9:	dec    esp
  4224aa:	in     al,0xe0
  4224ac:	sbb    dh,BYTE PTR [edx+ebp*8]
  4224af:	retf   0x7c71
  4224b2:	ja     0x4224ca
  4224b4:	jbe    0x42248f
  4224b6:	push   0x7306d296
  4224bb:	pop    ss
  4224bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224bd:	(bad)  
  4224be:	mov    edx,0x496e5c51
  4224c3:	scas   al,BYTE PTR es:[edi]
  4224c4:	enter  0xa32c,0x9e
  4224c8:	(bad)  
  4224c9:	fldenv [edi-0x2f30c498]
  4224cf:	stc    
  4224d0:	ins    BYTE PTR es:[edi],dx
  4224d1:	(bad)  
  4224d2:	xchg   ecx,eax
  4224d3:	sar    DWORD PTR [edx],1
  4224d5:	pop    ecx
  4224d6:	dec    eax
  4224d7:	adc    eax,0x7d
  4224da:	repz adc ebx,DWORD PTR [ecx-0x15]
  4224de:	or     eax,0x9c0c6767
  4224e3:	sti    
  4224e4:	sbb    cl,BYTE PTR [eax]
  4224e6:	jmp    0x480cda34
  4224eb:	in     eax,dx
  4224ec:	in     eax,dx
  4224ed:	adc    DWORD PTR [edx-0x1e],esp
  4224f0:	test   al,0xec
  4224f2:	mov    BYTE PTR cs:[edx+0x3],bl
  4224f6:	popf   
  4224f7:	es add ch,al
  4224fa:	cli    
  4224fb:	mov    ebp,0x1a97eacc
  422500:	push   eax
  422501:	fld    DWORD PTR [esi-0x6bbb0548]
  422507:	enter  0xf738,0x21
  42250b:	aaa    
  42250c:	daa    
  42250d:	sbb    DWORD PTR [ebp+esi*2-0x31],ebx
  422511:	jg     0x4224c2
  422513:	les    esp,FWORD PTR [ecx]
  422515:	add    esi,ecx
  422517:	out    dx,al
  422518:	fwait
  422519:	and    DWORD PTR [ebx+0x1d],edx
  42251c:	ret    0xe8b2
  42251f:	retf   0xd098
  422522:	dec    esi
  422523:	je     0x42257f
  422525:	push   ecx
  422526:	mov    esp,0xbb9300f0
  42252b:	mov    ebp,esp
  42252d:	or     DWORD PTR [edi-0x3b],ecx
  422530:	mov    ch,BYTE PTR [esi+edx*2]
  422533:	dec    edx
  422534:	fsubr  st,st(0)
  422536:	mov    esp,DWORD PTR [eax+0x53]
  422539:	sbb    bh,ah
  42253b:	adc    eax,0x22e86d81
  422540:	sbb    eax,0x2ad473f3
  422545:	mov    ebp,0xffebb0a5
  42254a:	or     DWORD PTR [edi],edx
  42254c:	scas   eax,DWORD PTR es:[edi]
  42254d:	mov    DWORD PTR fs:[edx-0x5942a321],eax
  422554:	sar    BYTE PTR [ecx-0x7f402d80],0x48
  42255b:	add    DWORD PTR [edi],0x6a
  42255e:	cmp    DWORD PTR [esi-0x48],esi
  422561:	jne    0x4224e5
  422563:	adc    si,bx
  422566:	sbb    edx,ebx
  422568:	sbb    dh,cl
  42256a:	sbb    eax,0xf00f106
  42256f:	cwde   
  422570:	pushf  
  422571:	push   esp
  422572:	je     0x422518
  422574:	scas   al,BYTE PTR es:[edi]
  422575:	mov    esi,0x485b66b4
  42257a:	pop    es
  42257b:	or     DWORD PTR [esi],ebx
  42257d:	inc    ecx
  42257e:	lea    eax,[ecx]
  422580:	xchg   edi,eax
  422581:	mov    eax,ds:0x70e08370
  422586:	or     BYTE PTR [eax+0x669a5a8d],cl
  42258c:	(bad)  
  42258d:	retf   
  42258e:	push   edi
  42258f:	(bad)  [ecx]
  422591:	aad    0x50
  422593:	jp     0x422576
  422595:	xor    ecx,DWORD PTR [ebp+0x2a]
  422598:	fidivr DWORD PTR [edi+0x67]
  42259b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42259c:	int    0xd9
  42259e:	xor    ch,al
  4225a0:	call   DWORD PTR [ebx+0x6567e0fd]
  4225a6:	lock dec ecx
  4225a8:	sbb    dl,BYTE PTR [edi+0x34]
  4225ab:	stc    
  4225ac:	pushf  
  4225ad:	sar    dh,cl
  4225af:	leave  
  4225b0:	sbb    al,0xd9
  4225b2:	fisttp WORD PTR [ecx+edi*2-0x2b]
  4225b6:	xchg   esi,eax
  4225b7:	inc    eax
  4225b9:	and    al,0x21
  4225bb:	scas   al,BYTE PTR es:[edi]
  4225bc:	fs pop esi
  4225be:	dec    eax
  4225bf:	test   al,0x3c
  4225c1:	test   al,0x31
  4225c3:	mov    ds:0x665422a6,al
  4225c8:	pop    ebx
  4225c9:	push   0x901a18fc
  4225ce:	mov    fs,WORD PTR [edi]
  4225d0:	mov    eax,ebx
  4225d2:	ror    DWORD PTR [edx-0x29],1
  4225d5:	ficom  DWORD PTR [ebx+0x755d7ee3]
  4225db:	cld    
  4225dc:	sub    dh,BYTE PTR [ecx-0x19e5f9d3]
  4225e2:	int3   
  4225e3:	out    0xdb,eax
  4225e5:	jge    0x422656
  4225e7:	sbb    edi,0xd08251d9
  4225ed:	ss cdq 
  4225ef:	sub    DWORD PTR [eax],esi
  4225f1:	cmp    eax,0xb00f2572
  4225f6:	dec    eax
  4225f7:	cdq    
  4225f8:	scas   eax,DWORD PTR es:[edi]
  4225f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225fa:	cmp    DWORD PTR ds:0x668cf82a,ecx
  422600:	adc    BYTE PTR [eax+0x528c8955],bl
  422606:	sub    ebp,edi
  422608:	push   esp
  422609:	inc    ebx
  42260a:	dec    eax
  42260b:	bound  ecx,QWORD PTR [edi-0x6ac6fe68]
  422611:	cmp    dh,BYTE PTR [ebp-0x3440659a]
  422617:	repnz rol BYTE PTR [edx-0x6d4fb92e],cl
  42261e:	dec    eax
  42261f:	(bad)  [edi+0x2c16c43d]
  422625:	xchg   ecx,eax
  422626:	mov    gs,WORD PTR [ebp+0x5d]
  422629:	sub    DWORD PTR [esi],esp
  42262b:	sbb    ch,al
  42262d:	mov    BYTE PTR [edi-0x31],ah
  422630:	rcr    BYTE PTR [esi],1
  422632:	dec    eax
  422633:	jns    0x42266c
  422635:	test   al,0x28
  422637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422638:	xchg   esi,eax
  422639:	add    bl,BYTE PTR ds:0x4d6a6367
  42263f:	jp     0x4225cd
  422641:	cmp    DWORD PTR [edx-0x34],eax
  422644:	mov    bh,0xa3
  422646:	dec    eax
  422647:	adc    ebp,edi
  422649:	lds    esp,FWORD PTR cs:[ebp+esi*2+0x5d]
  42264e:	sub    al,0x6c
  422650:	push   eax
  422651:	pop    ecx
  422652:	dec    ecx
  422653:	int3   
  422654:	bound  esp,QWORD PTR [edi+0x51f2e707]
  42265a:	dec    eax
  42265b:	test   DWORD PTR [esi+ebp*1+0x73850308],0x90ae670e
  422666:	out    dx,al
  422667:	lds    esp,FWORD PTR ds:0x775b1cdf
  42266d:	fnstenv [esp+ebx*4-0x66163054]
  422674:	outs   dx,BYTE PTR ds:[esi]
  422675:	mov    ebp,0x816f66d3
  42267a:	add    al,0xba
  42267c:	sbb    ah,bh
  42267e:	and    DWORD PTR [ebx-0x4b2d4335],0xf673e915
  422688:	mov    ebp,0x86deac44
  42268d:	mov    ecx,0x73a5d6af
  422692:	xchg   ecx,eax
  422693:	gs sbb esi,ebp
  422696:	mov    ebx,0x7dd30bf3
  42269b:	hlt    
  42269c:	out    0x87,eax
  42269e:	dec    edi
  42269f:	and    al,0xb8
  4226a1:	je     0x4226da
  4226a3:	push   edi
  4226a4:	sub    eax,0x4866c93c
  4226a9:	and    ch,0x33
  4226ac:	sbb    ch,dh
  4226ae:	pop    edi
  4226af:	outs   dx,DWORD PTR ds:[esi]
  4226b0:	in     al,dx
  4226b1:	dec    BYTE PTR [edx+eiz*1-0x76043e85]
  4226b8:	call   DWORD PTR [ebx+0xb]
  4226bb:	outs   dx,BYTE PTR ds:[esi]
  4226bc:	out    dx,eax
  4226bd:	mov    al,0x7b
  4226bf:	int3   
  4226c0:	fwait
  4226c1:	or     eax,0x59b0a525
  4226c6:	dec    ebp
  4226c7:	pandn  mm0,QWORD PTR [edi+0x46]
  4226cb:	mov    dl,0xa0
  4226cd:	fnstcw WORD PTR [esi-0x70faa049]
  4226d3:	mov    WORD PTR [edx+0x5a],es
  4226d6:	push   ebp
  4226d7:	ret    
  4226d8:	leave  
  4226d9:	sbb    BYTE PTR [eax-0x7d],cl
  4226dc:	adc    eax,0x14be250e
  4226e1:	push   ecx
  4226e2:	addr16 dec eax
  4226e4:	int3   
  4226e5:	pop    ecx
  4226e6:	out    dx,eax
  4226e7:	sbb    ebx,DWORD PTR [bp+si+0x847]
  4226ec:	(bad)  
  4226ed:	xor    eax,0xc1934a6e
  4226f2:	push   edi
  4226f3:	xchg   DWORD PTR [ebp+0x2f],ecx
  4226f6:	jmp    0x34eb:0x10da10e6
  4226fd:	stos   DWORD PTR es:[edi],eax
  4226fe:	sub    eax,0x8b0bc293
  422703:	popa   
  422704:	and    eax,0x33d247e9
  422709:	in     eax,0x8d
  42270b:	or     ebx,eax
  42270d:	(bad)  
  42270f:	data16 out dx,al
  422711:	mov    cl,0xd4
  422713:	and    ebp,DWORD PTR [ecx+eax*8]
  422716:	adc    DWORD PTR cs:[edx],ebx
  422719:	fnstenv [ecx-0x77]
  42271c:	or     al,0xa1
  42271e:	ret    0x3342
  422721:	inc    eax
  422722:	mov    ecx,0x98231766
  422727:	xchg   esp,eax
  422728:	sbb    ah,BYTE PTR [esi+0x35cdb7a0]
  42272e:	dec    esp
  42272f:	push   eax
  422730:	mov    ebx,ecx
  422732:	les    ebx,FWORD PTR [ebx]
  422734:	sub    BYTE PTR [edx+0x44],0xe0
  422738:	push   edi
  422739:	repnz stos DWORD PTR es:[edi],eax
  42273b:	dec    esp
  42273c:	mov    esi,0x208c6586
  422741:	inc    edi
  422742:	or     ebx,esp
  422744:	add    al,0x84
  422746:	mov    cl,0xee
  422748:	(bad)  
  422749:	fsub   st(2),st
  42274b:	data16 ffreep st(1)
  42274e:	inc    ecx
  42274f:	xchg   edi,eax
  422750:	sbb    ah,ah
  422752:	push   ebp
  422753:	cmp    BYTE PTR [edx+0x23],dl
  422756:	mov    al,ds:0xa8405347
  42275c:	mov    al,ds:0x298567f3
  422761:	add    ebp,ebx
  422763:	pop    edi
  422764:	cmp    bh,BYTE PTR [ecx+0x7a4e582e]
  42276a:	push   eax
  42276b:	imul   edi,DWORD PTR [ecx+0x7cca4814],0xffffffed
  422772:	or     DWORD PTR [eax+ebp*8+0x5d66fc7b],0xffffff99
  42277a:	out    dx,eax
  42277b:	pusha  
  42277c:	sbb    al,cl
  42277e:	mov    edx,0x62824a38
  422783:	adc    edi,ecx
  422785:	fdivr  QWORD PTR [edx-0x59]
  422788:	xchg   ebx,esp
  42278a:	mov    eax,ds:0x1055ca2d
  42278f:	dec    esp
  422790:	sbb    ah,BYTE PTR [ebx]
  422792:	inc    esp
  422793:	mov    ebx,0xeac12017
  422798:	fld    DWORD PTR ds:[edx-0xb]
  42279c:	jae    0x422786
  42279e:	popf   
  42279f:	in     eax,0xb4
  4227a1:	lods   al,BYTE PTR ds:[esi]
  4227a2:	or     eax,0x534e5ad7
  4227a7:	dec    esp
  4227a8:	pop    ss
  4227a9:	cdq    
  4227aa:	inc    esp
  4227ab:	out    0xa0,eax
  4227ad:	loopne 0x42281b
  4227af:	sar    DWORD PTR ds:0x1dc2c2d6,cl
  4227b5:	call   0x3ddb1e60
  4227ba:	push   ss
  4227bb:	cs aam 0x2d
  4227be:	dec    edi
  4227bf:	in     al,0x6a
  4227c1:	jg     0x4227c6
  4227c3:	into   
  4227c4:	xchg   edx,eax
  4227c5:	fadd   QWORD PTR [ebp+0x1a]
  4227c8:	(bad)  
  4227c9:	ins    DWORD PTR es:[edi],dx
  4227ca:	arpl   WORD PTR [edi-0x43c3944e],cx
  4227d0:	sbb    dl,BYTE PTR [edx]
  4227d2:	add    eax,0x6199e805
  4227d7:	inc    edx
  4227d8:	mov    ecx,ds
  4227da:	push   0xffffffcc
  4227dc:	jp     0x4227ac
  4227de:	xchg   DWORD PTR [edx],edx
  4227e0:	outs   dx,BYTE PTR ds:[esi]
  4227e1:	fadd   st(1),st
  4227e3:	repz xor al,0x45
  4227e6:	dec    eax
  4227e7:	aaa    
  4227e8:	lock sub DWORD PTR [eax+0x73f67863],ecx
  4227ef:	mov    WORD PTR [ebx+0x22],cx
  4227f3:	icebp  
  4227f4:	sbb    dh,BYTE PTR [edx+0x38]
  4227f7:	fisttp WORD PTR [eax]
  4227f9:	sub    BYTE PTR [ebp+0x77d9fd91],dh
  4227ff:	mov    cl,0xdf
  422801:	rol    ecx,1
  422803:	pusha  
  422804:	int3   
  422805:	aaa    
  422806:	inc    ecx
  422807:	mov    esp,0x114813d3
  42280c:	and    al,0x43
  42280e:	jle    0x4227ff
  422810:	rcr    dl,cl
  422812:	je     0x422876
  422814:	jne    0x422815
  422816:	xchg   ecx,eax
  422817:	lods   al,BYTE PTR ds:[esi]
  422818:	cmp    ecx,ecx
  42281a:	mov    bh,0xe8
  42281c:	sbb    ah,BYTE PTR [edi-0x5384eaa0]
  422822:	loop   0x4227ce
  422824:	cld    
  422825:	fstp   DWORD PTR [edx-0x1e]
  422828:	test   eax,0x2012717b
  42282d:	mov    ecx,0x17efc946
  422832:	dec    edi
  422833:	fild   QWORD PTR [edx+0x23d7074e]
  422839:	fidivr DWORD PTR [esi+0x3deab75e]
  42283f:	data16 cli 
  422841:	or     DWORD PTR [esp+esi*8+0x1b],esp
  422845:	inc    esi
  422846:	arpl   WORD PTR [eax+0x48f96a6c],bp
  42284c:	jp     0x4227ce
  42284e:	(bad)  
  42284f:	xor    DWORD PTR fs:[edx-0x7e7495d3],ebx
  422856:	push   eax
  422857:	jle    0x42280e
  422859:	xchg   al,bl
  42285b:	add    ebx,DWORD PTR [edx]
  42285d:	push   ebp
  42285e:	inc    edx
  42285f:	fwait
  422860:	xor    eax,0x6d79a199
  422865:	iret   
  422866:	mov    esp,esp
  422868:	loope  0x422829
  42286a:	dec    esi
  42286b:	test   al,cl
  42286d:	loop   0x42280e
  42286f:	out    0x5c,ax
  422872:	mov    ?,edi
  422874:	sbb    DWORD PTR [eax+ecx*2+0x59e4c1c5],esp
  42287b:	les    esi,FWORD PTR [ebp-0x58a3f95]
  422881:	test   DWORD PTR [ebp+0x58],edx
  422884:	in     eax,dx
  422885:	or     BYTE PTR [edi],dl
  422887:	out    dx,eax
  422888:	inc    edi
  422889:	scas   al,BYTE PTR es:[edi]
  42288a:	xlat   BYTE PTR gs:[ebx]
  42288c:	cmc    
  42288d:	cmc    
  42288e:	xchg   DWORD PTR [esi],ecx
  422890:	aam    0xd9
  422892:	cld    
  422893:	(bad)  
  422895:	shl    DWORD PTR [edx-0x5814e7ef],cl
  42289b:	sahf   
  42289c:	call   0x9b139009
  4228a1:	frstor [esi]
  4228a3:	cdq    
  4228a4:	xchg   edx,eax
  4228a5:	push   eax
  4228a6:	lds    esi,FWORD PTR [eax+0x67378b19]
  4228ac:	es mov dl,0x25
  4228af:	call   0x472bd3ce
  4228b4:	cmp    al,0xe8
  4228b6:	mov    ebp,0xbfdb056a
  4228bb:	stc    
  4228bc:	leave  
  4228bd:	push   esp
  4228be:	push   0xd4a619f8
  4228c3:	dec    edi
  4228c4:	ds mov ebp,0x371a28ad
  4228ca:	bnd ja 0x422850
  4228cd:	sub    BYTE PTR [eax-0x3d],al
  4228d0:	inc    DWORD PTR [edi-0x54a998ab]
  4228d6:	scas   eax,DWORD PTR es:[edi]
  4228d7:	add    eax,DWORD PTR ds:0xf72c09cd
  4228dd:	cs enter 0x890d,0xb7
  4228e2:	dec    eax
  4228e3:	xlat   BYTE PTR ds:[ebx]
  4228e4:	lods   al,BYTE PTR ds:[esi]
  4228e5:	or     al,0xd3
  4228e7:	sbb    al,0x77
  4228e9:	rcr    DWORD PTR [ebx+0x4a],cl
  4228ec:	pusha  
  4228ed:	dec    ebx
  4228ee:	dec    esp
  4228ef:	push   0x79
  4228f1:	cdq    
  4228f2:	adc    BYTE PTR [edi+ebx*2-0x416dbe3c],dl
  4228f9:	repz dec edx
  4228fb:	adc    ah,BYTE PTR [ebp+0x711f8f61]
  422901:	jmp    0x42294e
  422903:	ltr    bp
  422906:	ja     0x4228d7
  422908:	daa    
  422909:	hlt    
  42290a:	mov    edi,0x100606b4
  42290f:	scas   eax,DWORD PTR es:[edi]
  422910:	sub    eax,0x1a40bb44
  422915:	arpl   WORD PTR [edi+0x4034665f],dx
  42291b:	stc    
  42291c:	fnstcw WORD PTR [eax]
  42291e:	pop    edi
  42291f:	jl     0x422939
  422921:	das    
  422922:	mov    esp,0xc2cdd766
  422927:	fcomp  QWORD PTR [edx]
  422929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42292a:	mov    ebx,0xe11d579b
  42292f:	mov    esp,0xa1f6d91c
  422934:	call   0xffadec1f
  422939:	aas    
  42293a:	popa   
  42293b:	test   BYTE PTR [eax],bl
  42293d:	fiadd  WORD PTR [edi-0x3c]
  422940:	mov    edx,0x4b8cde6c
  422945:	jp     0x4228fe
  422947:	push   si
  422949:	mov    bl,BYTE PTR [ebx]
  42294b:	mov    ebx,0xeec6939
  422950:	aam    0xda
  422952:	test   DWORD PTR [edx],eax
  422954:	cwde   
  422955:	pop    ds
  422956:	sub    BYTE PTR [ebp+0x12],bh
  422959:	clc    
  42295a:	pop    ebx
  42295b:	repnz enter 0x8f13,0x66
  422960:	ss stc 
  422962:	push   0x20
  422964:	sub    BYTE PTR [esi-0x5c],al
  422967:	mov    ebp,0xb34f80f9
  42296c:	xchg   ecx,eax
  42296d:	pop    esp
  42296e:	sub    al,0x1a
  422970:	push   edx
  422971:	cs or  esi,esp
  422974:	cmp    dl,BYTE PTR [edi]
  422976:	sbb    eax,0x141b6be1
  42297b:	test   BYTE PTR [edx+0x9],al
  42297e:	and    al,0xbf
  422980:	sbb    eax,0xeb288e90
  422985:	scas   al,BYTE PTR es:[edi]
  422986:	fst    DWORD PTR [eax]
  422988:	ins    BYTE PTR es:[edi],dx
  422989:	mov    eax,ds:0x72912e4f
  42298e:	push   es
  42298f:	ins    BYTE PTR es:[edi],dx
  422990:	jecxz  0x4229ee
  422992:	int3   
  422993:	pop    edx
  422994:	loop   0x422951
  422996:	inc    edi
  422997:	push   cs
  422998:	sbb    dh,BYTE PTR [eax+0x15]
  42299b:	ds pop ds
  42299d:	and    cl,BYTE PTR [ebp+ebx*4+0x56]
  4229a1:	fcomp  QWORD PTR [ecx-0x56c44165]
  4229a7:	mov    dl,dh
  4229a9:	mov    edi,0xa31a5a5f
  4229ae:	bound  edi,QWORD PTR [esi-0x18]
  4229b1:	jg     0x4229af
  4229b3:	push   esp
  4229b4:	inc    edx
  4229b5:	mov    DWORD PTR [ecx+0x53],edx
  4229b8:	or     eax,0x315906da
  4229bd:	call   0x6a9f0c83
  4229c2:	stos   DWORD PTR es:[edi],eax
  4229c3:	mov    esp,DWORD PTR [eax+eax*8+0x39afdf48]
  4229ca:	push   ss
  4229cb:	fs gs dec edx
  4229ce:	popf   
  4229cf:	div    WORD PTR [eax-0x50e56d51]
  4229d6:	pop    esp
  4229d7:	xor    bh,dh
  4229d9:	aas    
  4229da:	sub    DWORD PTR [esi],edx
  4229dc:	jmp    0x422a03
  4229de:	xchg   ebp,eax
  4229df:	push   ecx
  4229e0:	cmp    DWORD PTR [edi],esi
  4229e2:	add    BYTE PTR ds:0x668c3e1e,bl
  4229e8:	cs jl  0x422a0f
  4229eb:	icebp  
  4229ec:	out    0x59,eax
  4229ee:	test   dl,bl
  4229f0:	jb     0x4229e8
  4229f2:	xchg   DWORD PTR [esi],esi
  4229f4:	adc    ebp,ebp
  4229f6:	xor    BYTE PTR [edx-0x51],dl
  4229f9:	fst    DWORD PTR [eax+0x41]
  4229fc:	addr16 pop edx
  4229fe:	fist   DWORD PTR [edi+0x75d4491d]
  422a04:	and    DWORD PTR [esi+0x59f6cc89],0xfffffffe
  422a0b:	and    DWORD PTR [ebp-0x2f],esp
  422a0e:	sub    ebx,esp
  422a10:	and    eax,eax
  422a12:	jmp    DWORD PTR [esi+0x37]
  422a15:	call   0xf428:0x371acabb
  422a1c:	pop    edx
  422a1d:	ret    0x324d
  422a20:	lahf   
  422a21:	fstp   DWORD PTR [edi]
  422a23:	push   cs
  422a24:	or     ecx,DWORD PTR [eax-0x32a7a40d]
  422a2a:	push   esp
  422a2c:	xchg   ebx,eax
  422a2d:	(bad)  
  422a2e:	addr16 popa 
  422a30:	int3   
  422a31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a32:	dec    eax
  422a33:	in     al,dx
  422a34:	dec    esi
  422a35:	adc    ebx,ecx
  422a37:	add    DWORD PTR [edx+0x704938c4],ebx
  422a3d:	pop    edx
  422a3e:	sub    al,0x50
  422a40:	sbb    eax,DWORD PTR [eax]
  422a42:	push   eax
  422a43:	cmc    
  422a44:	je     0x422a1e
  422a46:	(bad)  
  422a47:	xchg   edi,eax
  422a48:	mov    cl,BYTE PTR [esi]
  422a4a:	test   al,0xee
  422a4c:	mov    WORD PTR [ebp+0xbe866a4],cs
  422a52:	adc    eax,0xce171ff2
  422a57:	dec    esp
  422a58:	leave  
  422a59:	sub    bh,BYTE PTR [ebx+0x4f77c75a]
  422a5f:	and    BYTE PTR [ebx],bh
  422a61:	xchg   esi,eax
  422a62:	test   al,0x9
  422a64:	xchg   ecx,ebx
  422a66:	inc    ebx
  422a67:	pop    ds
  422a68:	push   edx
  422a69:	fmul   QWORD PTR [ebp-0x2cb07166]
  422a6f:	loope  0x422a8d
  422a71:	shl    DWORD PTR [bx+di+0x7d99],0x24
  422a77:	mov    ecx,0xc6a9789e
  422a7c:	mov    edi,0x6aaedef9
  422a81:	mov    edi,0x1f3b5348
  422a86:	shl    DWORD PTR [ebx],1
  422a88:	sub    al,0x40
  422a8a:	dec    eax
  422a8b:	pop    esp
  422a8c:	push   esi
  422a8d:	or     eax,0x5d854995
  422a92:	loop   0x422b01
  422a94:	call   0xa7af:0x2f29e649
  422a9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a9c:	sub    BYTE PTR [ebx-0x3f3de13d],cl
  422aa2:	rcl    BYTE PTR [edi-0x5f64dee6],cl
  422aa8:	jmp    0x9f403487
  422aad:	loop   0x422ad2
  422aaf:	xchg   esi,eax
  422ab0:	rcr    BYTE PTR [ecx-0x16],cl
  422ab3:	icebp  
  422ab4:	adc    edx,eax
  422ab6:	jl     0x422a72
  422ab8:	scas   al,BYTE PTR es:[edi]
  422ab9:	(bad)  
  422abb:	xor    al,ah
  422abd:	add    al,0xcf
  422abf:	(bad)  
  422ac0:	icebp  
  422ac1:	dec    ecx
  422ac2:	dec    esp
  422ac3:	fbld   TBYTE PTR [ecx]
  422ac5:	dec    esi
  422ac6:	inc    ecx
  422ac7:	pushf  
  422ac8:	sar    DWORD PTR [ebx],0x72
  422acb:	xchg   ebx,eax
  422acc:	punpckhdq mm1,QWORD PTR [eax]
  422acf:	cli    
  422ad0:	aas    
  422ad1:	inc    ebx
  422ad2:	jmp    0x422b3a
  422ad4:	daa    
  422ad5:	pop    ds
  422ad6:	and    eax,0x47ac1a22
  422adb:	aas    
  422adc:	add    eax,0xffffffb4
  422adf:	(bad)  
  422ae0:	aam    0xd9
  422ae2:	sbb    DWORD PTR [ebx+0x18cb12d7],esi
  422ae8:	loope  0x422b3b
  422aea:	jmp    0xc049:0x4838ac7d
  422af1:	sub    al,0xd5
  422af3:	shl    ch,1
  422af5:	je     0x422b3b
  422af7:	jne    0x422ab3
  422af9:	and    ah,BYTE PTR [edx]
  422afb:	jbe    0x422b53
  422afd:	inc    eax
  422afe:	call   0x5008e1e8
  422b03:	sti    
  422b04:	sbb    bh,BYTE PTR [edi-0x3275dc70]
  422b0a:	mov    edx,0xa7073033
  422b0f:	mov    ds:0x29214bd1,ax
  422b15:	xchg   edx,eax
  422b16:	xchg   edi,eax
  422b17:	fisub  DWORD PTR [edx-0x27]
  422b1a:	mov    dl,0xe7
  422b1c:	cdq    
  422b1d:	loope  0x422ab4
  422b1f:	aad    0x3e
  422b21:	mov    al,0xd
  422b23:	addr16 aad 0x6a
  422b26:	mov    edi,0x314e2d50
  422b2b:	pop    ds
  422b2c:	push   ss
  422b2d:	sbb    al,0xac
  422b2f:	inc    edx
  422b30:	push   edi
  422b31:	pop    eax
  422b32:	dec    eax
  422b33:	xor    al,BYTE PTR [ebx+edi*2-0x448c71c4]
  422b3a:	dec    eax
  422b3b:	and    ebp,DWORD PTR [edi+0xa]
  422b3e:	xchg   ebx,eax
  422b3f:	cli    
  422b40:	or     edi,DWORD PTR [ebp+0x42]
  422b43:	push   0x4de548e
  422b48:	das    
  422b49:	pop    ss
  422b4a:	pop    esi
  422b4c:	mov    ah,0xf8
  422b4e:	jg     0x422b6a
  422b50:	fcmovb st,st(3)
  422b52:	popf   
  422b53:	bound  edi,QWORD PTR [eax-0x4f0a7169]
  422b59:	fisub  DWORD PTR [esi]
  422b5b:	loope  0x422b33
  422b5d:	add    BYTE PTR [edi-0x3961ec38],dl
  422b63:	test   BYTE PTR [edx],bl
  422b65:	pop    esp
  422b66:	inc    edi
  422b67:	dec    ebp
  422b68:	fnsave [edi-0x71]
  422b6b:	rcl    bl,cl
  422b6d:	cdq    
  422b6e:	je     0x422ba5
  422b70:	inc    ebp
  422b71:	neg    ebp
  422b73:	adc    ebx,DWORD PTR [edi]
  422b75:	fcom   DWORD PTR [edx+0x3b]
  422b78:	adc    eax,0xaa6ac597
  422b7d:	cld    
  422b7e:	mov    DWORD PTR [edx],0x5a86d9b3
  422b84:	jno    0x422be8
  422b86:	xor    al,0x38
  422b88:	fwait
  422b89:	mov    dh,0x24
  422b8b:	jmp    esi
  422b8d:	or     al,0x48
  422b8f:	cwde   
  422b90:	(bad)  
  422b91:	test   al,0x4d
  422b93:	ds loop 0x422bad
  422b96:	shl    DWORD PTR [esi+0x3d],0x2f
  422b9a:	mov    bl,0xbe
  422b9c:	cmp    DWORD PTR [ebx+edx*2],eax
  422b9f:	out    0x1a,eax
  422ba1:	xchg   esp,eax
  422ba2:	xor    eax,0x7e4c699b
  422ba7:	fnstsw WORD PTR [eax]
  422ba9:	mov    ch,0xca
  422bab:	xchg   WORD PTR [ebp+0x43],bx
  422baf:	mov    bl,BYTE PTR [edx]
  422bb1:	fnstsw WORD PTR [edi+0x62]
  422bb4:	push   ebp
  422bb5:	ror    BYTE PTR [esi],0x5e
  422bb8:	cmp    eax,0x5c
  422bbb:	or     BYTE PTR [ecx+0x59],dh
  422bbe:	jnp    0x422bb7
  422bc0:	sub    ebp,DWORD PTR [eax]
  422bc2:	call   0xb2914d35
  422bc7:	je     0x422baa
  422bc9:	add    edx,esi
  422bcb:	push   edx
  422bcc:	inc    ebx
  422bcd:	retf   
  422bce:	mov    edx,edi
  422bd0:	in     al,0xbf
  422bd2:	test   al,0xf1
  422bd4:	ss out dx,eax
  422bd6:	stc    
  422bd7:	and    BYTE PTR [ebx],0x48
  422bda:	and    BYTE PTR [esi+0x4a2e47d0],0x65
  422be1:	pop    edx
  422be2:	dec    ecx
  422be3:	mov    DWORD PTR [ebx+0x7ea30026],edx
  422be9:	adc    DWORD PTR [eax],ecx
  422beb:	mov    bh,0x88
  422bed:	fadd   QWORD PTR [esi-0x64]
  422bf0:	aas    
  422bf1:	loope  0x422c21
  422bf3:	lock fcmovu st,st(1)
  422bf6:	(bad)  
  422bf7:	cdq    
  422bf8:	pop    edi
  422bf9:	sbb    al,0x50
  422bfb:	mov    dh,0x87
  422bfd:	dec    ecx
  422bfe:	mov    bh,0x69
  422c00:	mov    cs,WORD PTR [ebx]
  422c02:	test   eax,0xc8cff4c9
  422c07:	loope  0x422c1f
  422c09:	inc    edx
  422c0a:	dec    eax
  422c0b:	mov    al,ds:0x710d967e
  422c10:	in     eax,dx
  422c11:	fist   WORD PTR [esi]
  422c13:	addr16 mov esp,0x1ad03a47
  422c19:	es pop ecx
  422c1b:	ss (bad) 
  422c1d:	xchg   edi,eax
  422c1e:	mov    ds,esp
  422c20:	sbb    al,0x4c
  422c22:	fimul  DWORD PTR [edi+0x6716cc6b]
  422c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c29:	aam    0x32
  422c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c2c:	sbb    ah,al
  422c2e:	pop    es
  422c2f:	adc    eax,0xcbeea40a
  422c34:	(bad)  
  422c35:	(bad)  [edi+0x45]
  422c38:	mov    cl,BYTE PTR [ecx+0x335a0e72]
  422c3e:	cmovns ebx,DWORD PTR [edx]
  422c41:	push   es
  422c42:	mov    esi,0xb2f1eec9
  422c47:	push   ds
  422c48:	lahf   
  422c49:	fld    DWORD PTR [esi-0x6e762fbb]
  422c4f:	nop
  422c50:	add    al,0xd4
  422c52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422c53:	lock fcmovnu st,st(1)
  422c56:	lahf   
  422c57:	repnz xchg esi,eax
  422c59:	fwait
  422c5a:	arpl   WORD PTR [ecx+edi*4],si
  422c5d:	add    DWORD PTR ds:0xef89d8c1,edi
  422c63:	pop    es
  422c64:	cmp    al,bh
  422c66:	jl     0x422cdd
  422c68:	cmp    ah,BYTE PTR [edx-0x14897108]
  422c6e:	or     eax,0x48737f1e
  422c73:	xlat   BYTE PTR ds:[ebx]
  422c74:	(bad)
  422c77:	ins    DWORD PTR es:[edi],dx
  422c78:	ss test al,0x14
  422c7b:	mov    edi,0x5565d9d9
  422c80:	imul   esp,DWORD PTR [ebp-0x16],0xffffff92
  422c84:	sbb    dh,dl
  422c86:	jl     0x422c52
  422c88:	jmp    0x422c2c
  422c8a:	sub    al,0x72
  422c8c:	xor    al,0x51
  422c8e:	ins    BYTE PTR es:[edi],dx
  422c8f:	jns    0x422c98
  422c91:	mov    al,ds:0x4f68a204
  422c96:	enter  0x990,0x91
  422c9a:	or     BYTE PTR [edx-0x40],al
  422c9d:	dec    esp
  422c9e:	dec    eax
  422c9f:	sbb    al,0x1d
  422ca1:	shr    al,0x57
  422ca4:	int    0x2
  422ca6:	xchg   esp,eax
  422ca7:	data16 jge 0x422d02
  422caa:	in     al,dx
  422cab:	fistp  WORD PTR [edx]
  422cad:	inc    ebx
  422cae:	inc    ebp
  422caf:	or     BYTE PTR [edi+0x3ef26051],dl
  422cb5:	fnstenv [esi-0x17]
  422cb8:	mov    ds:0x6f2629cd,eax
  422cbd:	sub    dh,BYTE PTR [edi+0x40fcf093]
  422cc3:	aas    
  422cc4:	dec    ebx
  422cc5:	pop    ebx
  422cc6:	dec    eax
  422cc7:	push   ecx
  422cc8:	outs   dx,BYTE PTR ds:[esi]
  422cc9:	lock iret 
  422ccb:	std    
  422ccc:	push   ss
  422ccd:	in     al,0x5b
  422ccf:	mov    eax,ds:0xe63bd933
  422cd4:	ror    DWORD PTR [ebp-0x33f2c45f],cl
  422cda:	sbb    DWORD PTR [ebx+ebx*2-0x39],eax
  422cde:	dec    eax
  422cdf:	push   esi
  422ce0:	sub    al,0x76
  422ce2:	sub    ch,BYTE PTR [esi]
  422ce4:	dec    edx
  422ce5:	sar    BYTE PTR [ebx+0x66],1
  422ce8:	iret   
  422ce9:	xor    eax,0x5f1aac18
  422cee:	int3   
  422cef:	test   al,0x54
  422cf1:	push   edi
  422cf2:	jmp    DWORD PTR [ecx+edx*2+0x13d629dd]
  422cf9:	loopne 0x422d60
  422cfb:	mov    esp,0xe6968eb1
  422d00:	sbb    ch,BYTE PTR [ecx]
  422d02:	sub    edi,DWORD PTR [ebx+0x6dd606ea]
  422d08:	(bad)  
  422d09:	fxch   st(7)
  422d0b:	mov    cl,al
  422d0d:	mov    edx,0xbc039cce
  422d12:	sbb    al,0x53
  422d14:	xor    dh,BYTE PTR [edx]
  422d16:	rcr    DWORD PTR cs:[edx+0x11],0x6f
  422d1b:	sar    esp,0x5a
  422d1e:	cwde   
  422d1f:	add    esi,DWORD PTR [eax-0x3d]
  422d22:	enter  0x23f2,0x3a
  422d26:	push   ecx
  422d27:	mov    bh,0xb3
  422d29:	fcmovu st,st(5)
  422d2b:	lods   eax,DWORD PTR ds:[esi]
  422d2c:	xchg   esi,ecx
  422d2e:	pusha  
  422d2f:	je     0x422d32
  422d31:	jp     0x422d53
  422d33:	das    
  422d34:	sub    eax,0x9a310718
  422d39:	(bad)
  422d3d:	mov    ebp,0x7021d0c6
  422d42:	mov    cl,0xf
  422d44:	test   al,0x8b
  422d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d47:	mov    dl,0x55
  422d49:	mov    DWORD PTR [eax],ebx
  422d4b:	and    BYTE PTR [edi+0x656731e7],ah
  422d51:	lahf   
  422d52:	repnz xchg edx,eax
  422d54:	sbb    al,cl
  422d56:	cwde   
  422d57:	dec    edx
  422d58:	mov    dh,0x2d
  422d5a:	cmp    eax,0x45dde6f1
  422d5f:	dec    ebp
  422d60:	popa   
  422d61:	daa    
  422d62:	or     al,0xb0
  422d64:	cs je  0x422d5d
  422d67:	out    0x1a,al
  422d69:	fwait
  422d6a:	es shr cl,0x45
  422d6e:	adc    eax,DWORD PTR [eax+0x5f]
  422d71:	fimul  DWORD PTR ds:0xd1631dc6
  422d77:	loope  0x422de6
  422d79:	pop    ecx
  422d7a:	sub    esp,esp
  422d7c:	fs rcl dh,0x6c
  422d80:	retf   0xf3e8
  422d83:	push   cs
  422d84:	jnp    0x422d8e
  422d86:	xor    cl,ch
  422d88:	cmp    DWORD PTR [edx-0x75],edx
  422d8b:	stos   DWORD PTR es:[edi],eax
  422d8c:	adc    BYTE PTR [edi+0x72a23b10],0x48
  422d93:	pop    ecx
  422d94:	jp     0x422d27
  422d96:	es ds xchg edx,eax
  422d99:	inc    eax
  422d9a:	inc    ecx
  422d9b:	outs   dx,BYTE PTR ds:[esi]
  422d9c:	imul   ecx,DWORD PTR [ecx],0x23419e02
  422da2:	mov    ebx,0xc44d1a41
  422da7:	or     DWORD PTR [ebp+0x2ae7abaf],eax
  422dad:	fsin   
  422daf:	das    
  422db0:	jmp    0x912e:0xa4536c3b
  422db7:	out    dx,al
  422db8:	sub    eax,0x7a754f03
  422dbd:	push   edi
  422dbe:	fisub  DWORD PTR [ebx-0x30]
  422dc1:	fnstcw WORD PTR [esi]
  422dc3:	cdq    
  422dc4:	or     bh,BYTE PTR [edi+0x46534ee4]
  422dca:	sbb    ch,BYTE PTR [edi-0x6bb75e58]
  422dd0:	push   ebp
  422dd1:	mov    al,0xf9
  422dd3:	xor    al,0xf
  422dd5:	imul   ebx,DWORD PTR [eax-0x2e7b9e9a],0xe3da1ad7
  422ddf:	push   esp
  422de0:	cld    
  422de1:	neg    BYTE PTR [edi-0x1a3e0e9c]
  422de7:	push   cs
  422de8:	xor    eax,0x99ae827e
  422ded:	pop    edi
  422dee:	dec    ebx
  422def:	cmp    dl,BYTE PTR [edx]
  422df1:	sbb    eax,0x425d9a2
  422df6:	idiv   BYTE PTR [ecx-0x6c]
  422df9:	pop    ecx
  422dfa:	mov    ch,0xcd
  422dfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dfd:	js     0x422dba
  422dff:	int3   
  422e00:	mov    ah,BYTE PTR [edi+0x15f06704]
  422e06:	add    ch,BYTE PTR [edx+ebx*1-0x5e]
  422e0a:	es ret 0x5dd9
  422e0e:	stos   BYTE PTR es:[edi],al
  422e0f:	or     BYTE PTR [ecx+ebx*8-0x6865606c],cl
  422e16:	or     eax,ebx
  422e18:	xor    eax,0xaf383745
  422e1e:	cmp    ah,BYTE PTR [ebx-0x63]
  422e21:	call   0xd19b1d02
  422e26:	inc    edi
  422e27:	nop
  422e28:	push   0xffffffd9
  422e2a:	and    DWORD PTR [edx+ebp*8+0x62],ebx
  422e2e:	push   ecx
  422e2f:	adc    DWORD PTR ds:0xf81c2510,esp
  422e35:	xchg   DWORD PTR [eax-0x50],ecx
  422e38:	ss pushf 
  422e3a:	xor    eax,ecx
  422e3c:	loopne 0x422e46
  422e3e:	in     eax,dx
  422e3f:	ins    BYTE PTR es:[edi],dx
  422e40:	fbstp  TBYTE PTR [ebx+0x9]
  422e43:	test   DWORD PTR ds:0x6a8f4fb7,ebp
  422e49:	jb     0x422ec0
  422e4b:	ret    
  422e4c:	jge    0x422e27
  422e4e:	and    BYTE PTR [ebx],ch
  422e50:	and    bh,BYTE PTR [edi]
  422e52:	push   ds
  422e53:	shr    DWORD PTR [ebp-0x54aa46be],1
  422e59:	and    ecx,DWORD PTR [eax+0x3d]
  422e5c:	mov    ebp,0x25a97a03
  422e61:	xor    ah,dl
  422e63:	data16 outs dx,BYTE PTR ss:[esi]
  422e66:	pop    ecx
  422e67:	dec    edi
  422e68:	sbb    al,BYTE PTR [ecx]
  422e6a:	mov    dl,0x17
  422e6c:	push   ebp
  422e6d:	cmp    esi,DWORD PTR [ebp+0xc]
  422e70:	fcmovnu st,st(1)
  422e72:	mov    esp,0xd9117464
  422e77:	jge    0x422e14
  422e79:	mov    WORD PTR [ebp-0x75],cs
  422e7c:	sti    
  422e7d:	jbe    0x422ec7
  422e7f:	jmp    0xb9df57d5
  422e84:	push   esi
  422e85:	and    DWORD PTR [ecx],ebx
  422e87:	addr16 sahf 
  422e89:	or     esi,esi
  422e8b:	retf   0x421a
  422e8e:	jmp    0xbf4c:0x5bfe6cbc
  422e95:	fld    st(6)
  422e97:	inc    esi
  422e98:	retf   0x2432
  422e9b:	loop   0x422e34
  422e9d:	sti    
  422e9e:	rol    ebx,cl
  422ea0:	cmp    BYTE PTR [edx+0x48],al
  422ea3:	mov    ds:0x1c170b27,al
  422ea8:	in     al,0x8c
  422eaa:	cld    
  422eab:	ins    DWORD PTR es:[edi],dx
  422eac:	xchg   edx,eax
  422ead:	imul   ecx,edi,0x32589346
  422eb3:	dec    esi
  422eb4:	lods   al,BYTE PTR ds:[esi]
  422eb5:	cwde   
  422eb6:	dec    eax
  422eb7:	push   cs
  422eb8:	cmp    dh,BYTE PTR [ecx-0x7b]
  422ebb:	popa   
  422ebc:	daa    
  422ebd:	fldcw  WORD PTR [ecx]
  422ebf:	(bad)  
  422ec1:	sub    DWORD PTR ds:[edx+0x74fb4395],esp
  422ec8:	xchg   esi,eax
  422ec9:	leave  
  422eca:	dec    eax
  422ecb:	adc    dh,ah
  422ecd:	mov    al,0x60
  422ecf:	adc    ah,BYTE PTR [esi+0x298466f9]
  422ed5:	out    dx,eax
  422ed6:	fidivr WORD PTR [eax-0x1]
  422ed9:	jno    0x422e87
  422edb:	mov    WORD PTR [ecx-0x12],0x78cf
  422ee1:	cmp    BYTE PTR [eax+0x1a],cl
  422ee4:	(bad)  
  422ee5:	jecxz  0x422f5a
  422ee7:	fist   DWORD PTR [edi-0x22]
  422eea:	in     eax,0x66
  422eec:	(bad)  
  422eed:	popf   
  422eee:	jmp    0x422f07
  422ef0:	sbb    bh,BYTE PTR [esp+eiz*4+0x5622f9fb]
  422ef7:	cdq    
  422ef8:	mov    edx,0xea63394a
  422efd:	test   BYTE PTR [ecx],ch
  422eff:	fdiv   DWORD PTR [di]
  422f02:	cmc    
  422f03:	aas    
  422f04:	sub    BYTE PTR [ebp-0x26c4a599],dl
  422f0a:	xchg   edx,eax
  422f0b:	mov    al,ds:0x46320c5e
  422f10:	mov    ds:0xe167830b,eax
  422f15:	jo     0x422f03
  422f17:	es pop ds
  422f19:	ss not dh
  422f1c:	push   0x9db482a
  422f21:	mov    ds:0xdceac62b,al
  422f26:	push   ss
  422f27:	push   edi
  422f28:	inc    edx
  422f29:	pop    ds
  422f2a:	std    
  422f2b:	mov    eax,0x4ad26612
  422f30:	or     al,0x9e
  422f32:	loope  0x422ecb
  422f34:	cmp    dh,BYTE PTR [esi-0x189b2ab8]
  422f3a:	push   cs
  422f3b:	out    0x27,eax
  422f3d:	lea    ecx,[ebx+0x534c249f]
  422f43:	xor    dh,dh
  422f45:	ror    eax,cl
  422f47:	pop    edx
  422f48:	sbb    bh,dh
  422f4a:	je     0x422f44
  422f4c:	rcr    BYTE PTR [esi-0x2696ba44],1
  422f52:	jp     0x422fa7
  422f54:	outs   dx,DWORD PTR ds:[esi]
  422f55:	bound  ecx,QWORD PTR [ecx+0x7d963100]
  422f5b:	jl     0x422f6d
  422f5d:	loope  0x422ef2
  422f5f:	cld    
  422f60:	and    BYTE PTR [esi+edi*1],dh
  422f63:	cld    
  422f64:	push   0x74812936
  422f69:	fldenv [edi+0x65029519]
  422f6f:	xchg   esi,eax
  422f70:	mov    ebx,0x6a1514ed
  422f75:	inc    ebp
  422f76:	dec    eax
  422f77:	xchg   BYTE PTR [edi-0x5589e82a],bh
  422f7d:	add    DWORD PTR [ecx],ebp
  422f7f:	addr16 dec esp
  422f81:	inc    edi
  422f82:	push   eax
  422f83:	sbb    ebx,DWORD PTR [edx]
  422f85:	xrelease mov BYTE PTR ds:0x70d15f63,bh
  422f8c:	jbe    0x422f9a
  422f8e:	je     0x422f9c
  422f90:	mov    esi,0x5270205a
  422f95:	jle    0x422fb7
  422f97:	pushf  
  422f98:	and    ch,al
  422f9a:	inc    edi
  422f9b:	(bad)  
  422f9c:	sub    al,0x9
  422f9e:	jns    0x422f95
  422fa0:	xor    eax,0x8967457f
  422fa5:	das    
  422fa6:	dec    ebp
  422fa7:	sub    DWORD PTR [edx],ebx
  422fa9:	mov    dl,0xe6
  422fab:	jl     0x422f38
  422fad:	in     eax,dx
  422fae:	mov    ch,0x24
  422fb0:	jecxz  0x422fe3
  422fb2:	loope  0x422f7c
  422fb4:	sbb    ah,ah
  422fb6:	pop    ss
  422fb7:	fs jb  0x422f46
  422fba:	nop
  422fbb:	stos   BYTE PTR es:[edi],al
  422fbc:	sbb    dh,BYTE PTR [eax+ebx*8]
  422fbf:	imul   ecx,esi,0xa
  422fc2:	test   cl,ah
  422fc4:	jmp    0x422fa0
  422fc6:	push   ebx
  422fc7:	je     0x422f4d
  422fc9:	pop    esp
  422fca:	int    0x2
  422fcc:	ret    
  422fcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fce:	sbb    edi,DWORD PTR [esi]
  422fd0:	cmp    BYTE PTR [ecx],ch
  422fd2:	out    dx,al
  422fd3:	push   0xf117d25a
  422fd8:	sahf   
  422fd9:	shl    DWORD PTR [edx+0x18],0x6b
  422fdd:	(bad)  [edi+0x4a]
  422fe0:	xchg   DWORD PTR [esi],esi
  422fe2:	cs jnp 0x423039
  422fe5:	jbe    0x422fbd
  422fe7:	pop    eax
  422fe8:	push   edi
  422fe9:	stc    
  422fea:	les    ebp,FWORD PTR [edx]
  422fec:	shl    BYTE PTR [ebp+0x3fd3665e],cl
  422ff2:	ror    eax,cl
  422ff4:	sub    eax,0xae6d9565
  422ff9:	jns    0x42300e
  422ffb:	fadd   DWORD PTR [edx-0x49]
  422ffe:	adc    al,0x91
  423000:	xor    BYTE PTR [esi],cl
  423002:	dec    eax
  423003:	(bad)  
  423004:	push   ecx
  423005:	ret    
  423006:	push   edi
  423007:	test   al,0xb3
  423009:	fwait
  42300a:	pop    edx
  42300b:	data16 xor ch,BYTE PTR [eax+0x1d]
  42300f:	or     BYTE PTR [eax-0x6d460ebf],bl
  423015:	dec    ecx
  423016:	dec    eax
  423017:	fcmovbe st,st(3)
  423019:	ja     0x423012
  42301b:	add    dh,bh
  42301d:	push   es
  42301e:	or     DWORD PTR [edi+0x36],esp
  423021:	cmp    cl,dl
  423023:	int    0x1a
  423025:	xchg   dh,dh
  423027:	push   esi
  423028:	or     BYTE PTR [ebx],ch
  42302a:	xchg   DWORD PTR [eax-0x2064263b],edx
  423030:	bound  ecx,QWORD PTR [esi]
  423032:	xchg   ebp,eax
  423033:	into   
  423034:	jl     0x422fd7
  423036:	mov    cl,0xd0
  423038:	and    DWORD PTR [edi-0x3127c83d],edi
  42303e:	sbb    eax,0x78c64a63
  423043:	add    al,0x97
  423045:	mov    cl,BYTE PTR [ebp+0x66]
  423048:	test   esi,esi
  42304a:	enter  0x1205,0x4d
  42304e:	xchg   esp,eax
  42304f:	sub    ah,BYTE PTR [edi]
  423051:	es dec eax
  423053:	xchg   ebp,eax
  423054:	je     0x42303d
  423056:	sub    al,0x9a
  423058:	jl     0x422ffe
  42305a:	arpl   WORD PTR [ecx-0x28],bp
  42305d:	mov    ds,WORD PTR [eax+0x52]
  423060:	repz push edi
  423062:	enter  0xafe3,0x2b
  423066:	dec    eax
  423067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423068:	icebp  
  423069:	js     0x422fed
  42306b:	push   edi
  42306c:	out    dx,eax
  42306d:	jmp    0xeb2596d2
  423072:	add    esi,ebp
  423074:	xchg   ebx,eax
  423075:	add    eax,0x2fc5ffee
  42307a:	dec    eax
  42307b:	push   ds
  42307c:	test   DWORD PTR [eax],edx
  42307e:	sti    
  42307f:	jle    0x4230f7
  423081:	jns    0x423031
  423083:	adc    WORD PTR [eax+0x341a29d6],0xa418
  42308c:	cmp    bh,BYTE PTR [ebx+edi*2]
  42308f:	mov    bl,0xf7
  423091:	fldcw  WORD PTR [edx+0x44]
  423094:	push   eax
  423095:	loopne 0x4230cf
  423097:	or     edx,DWORD PTR [eax]
  423099:	(bad)  
  42309a:	ss jge 0x4230ff
  42309d:	call   0x6ee6:0x2fe03b48
  4230a4:	dec    eax
  4230a5:	inc    esi
  4230a6:	(bad)  
  4230a7:	jmp    0x306c:0xef5c
  4230ad:	sub    al,0xd3
  4230af:	int3   
  4230b0:	ss jp  0x4230ab
  4230b3:	cli    
  4230b4:	call   0x48ff:0xad4024f9
  4230bb:	jae    0x423052
  4230bd:	push   edi
  4230be:	pop    esp
  4230bf:	(bad)  
  4230c1:	fld    DWORD PTR [ecx+0x7c87f758]
  4230c7:	add    al,0x1e
  4230c9:	jno    0x42312f
  4230cb:	xlat   BYTE PTR ds:[ebx]
  4230cc:	in     eax,dx
  4230cd:	in     eax,dx
  4230ce:	inc    edi
  4230cf:	loop   0x4230e3
  4230d1:	adc    al,0xa0
  4230d3:	sub    ebx,ebp
  4230d5:	sar    bl,0x74
  4230d8:	mov    bh,dl
  4230da:	xor    BYTE PTR [ecx],ah
  4230dc:	and    al,0xfe
  4230de:	stos   BYTE PTR es:[edi],al
  4230df:	mov    ds:0xbed8917b,al
  4230e4:	adc    ah,BYTE PTR [eax+ecx*2]
  4230e7:	pop    ebx
  4230e8:	into   
  4230e9:	ins    BYTE PTR es:[edi],dx
  4230ea:	xchg   ebp,eax
  4230eb:	dec    edx
  4230ec:	or     BYTE PTR [edx],bh
  4230ee:	sub    esp,DWORD PTR [edi+0x1]
  4230f1:	jl     0x423172
  4230f3:	inc    edi
  4230f4:	sbb    esi,eax
  4230f6:	jl     0x42315b
  4230f8:	call   0xee90c0d9
  4230fd:	fmul   DWORD PTR [edi+ebx*2]
  423100:	mov    WORD PTR [edi],gs
  423102:	dec    edx
  423103:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423104:	test   eax,0x99dbcf72
  423109:	mov    DWORD PTR [ecx],edi
  42310b:	inc    edi
  42310c:	push   es
  42310d:	pusha  
  42310e:	(bad)  
  42310f:	retf   0xafcf
  423112:	gs jno 0x423163
  423115:	or     DWORD PTR [eax],0x87d9a737
  42311b:	aad    0x6c
  42311d:	les    edx,FWORD PTR [esp+ebp*4+0x0]
  423121:	(bad)  
  423122:	in     al,0xff
  423124:	cwde   
  423125:	cwde   
  423126:	cmp    ah,BYTE PTR [eax+0x24]
  423129:	pop    esp
  42312a:	dec    eax
  42312b:	gs stos DWORD PTR es:[edi],eax
  42312d:	adc    al,bl
  42312f:	in     eax,0x5d
  423131:	(bad)  [eax+0x3215944c]
  423137:	mov    ebp,0xac99f7bb
  42313c:	fld    DWORD PTR [eax-0x60cedba9]
  423142:	stc    
  423143:	mov    cx,0x93e5
  423147:	add    dl,BYTE PTR [ebx]
  423149:	mov    DWORD PTR [ecx+0x5c981d79],edi
  42314f:	lea    edx,[ecx+edx*2+0x28]
  423153:	dec    ebp
  423154:	push   0xa2568971
  423159:	imul   edi,DWORD PTR [esi+eiz*2-0x5f],0x8d17db5d
  423161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423162:	xchg   edi,eax
  423163:	cld    
  423164:	repz dec ecx
  423166:	dec    eax
  423167:	loopne 0x42311b
  423169:	push   es
  42316a:	pop    edi
  42316b:	adc    cl,dl
  42316d:	aad    0x6b
  42316f:	push   0x3
  423171:	pop    edx
  423172:	push   edi
  423173:	pop    edi
  423174:	pop    ds
  423175:	and    al,0xa0
  423177:	or     eax,DWORD PTR [eax+0x21be488a]
  42317d:	jae    0x423166
  42317f:	push   edi
  423180:	shl    ch,cl
  423182:	and    DWORD PTR [edi+0x6f],esp
  423185:	es rol dl,0x1a
  423189:	stc    
  42318a:	fdiv   QWORD PTR [ebx-0x49]
  42318d:	adc    DWORD PTR [edx],esi
  42318f:	dec    ebx
  423190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423191:	and    DWORD PTR ds:0x7a681a8d,eax
  423197:	sar    DWORD PTR [eax+0x1aac1e3b],0xca
  42319e:	sub    edx,DWORD PTR [eax-0x74]
  4231a1:	mov    eax,0xe06e38b2
  4231a6:	fisub  WORD PTR [ecx+0x51]
  4231a9:	das    
  4231aa:	imul   esp,DWORD PTR [ebx],0xf
  4231ad:	call   0x902b:0x27533663
  4231b4:	aad    0xfe
  4231b6:	lea    ebp,[eax+edi*4-0x14]
  4231ba:	fisubr WORD PTR [eax+0x6b8ad984]
  4231c0:	or     al,BYTE PTR [ecx]
  4231c2:	pushf  
  4231c3:	jmp    0x4231df
  4231c5:	xor    BYTE PTR [eax],ah
  4231c7:	xchg   ebp,eax
  4231c8:	adc    esi,eax
  4231ca:	jo     0x42314e
  4231cc:	pop    esi
  4231cd:	fld    QWORD PTR [ebp+0x5a]
  4231d0:	or     ebp,edx
  4231d2:	(bad)  
  4231d3:	js     0x423180
  4231d5:	mov    al,0x26
  4231d7:	out    0x1a,eax
  4231d9:	pop    ds
  4231da:	std    
  4231db:	adc    BYTE PTR [ecx],ah
  4231dd:	sti    
  4231de:	mov    dh,0xa
  4231e0:	inc    edx
  4231e1:	fidiv  DWORD PTR [ebp+0x20]
  4231e4:	ret    0xc28
  4231e7:	imul   eax,ebp,0x1af69dd1
  4231ed:	push   ebp
  4231ee:	ret    0xaeb4
  4231f1:	adc    ah,bh
  4231f3:	push   eax
  4231f4:	repnz fdiv QWORD PTR [ecx+0x2a]
  4231f8:	add    DWORD PTR [eax],eax
  4231fa:	xchg   ebx,eax
  4231fb:	pop    ecx
  4231fc:	ret    0x26fd
  4231ff:	push   eax
  423200:	sbb    BYTE PTR [esi],dl
  423202:	fcmovne st,st(0)
  423204:	sbb    al,0x37
  423206:	dec    eax
  423207:	mov    al,0x65
  423209:	cld    
  42320a:	pushf  
  42320b:	push   ebp
  42320c:	mov    BYTE PTR [ecx-0x59],al
  42320f:	test   BYTE PTR [esi],dh
  423211:	lock cmp DWORD PTR [edi],esp
  423214:	push   0xffffffd0
  423216:	std    
  423217:	imul   ebx
  423219:	int3   
  42321a:	dec    eax
  42321b:	dec    eax
  42321c:	repz inc ebx
  42321e:	inc    esi
  42321f:	cmc    
  423220:	add    al,0x16
  423222:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423223:	callw  0x747b
  423227:	lds    ebx,FWORD PTR [edx]
  423229:	jmp    0xefca:0x77c4a6b9
  423230:	stos   DWORD PTR es:[edi],eax
  423231:	fisubr DWORD PTR [edi+0x1faf4aad]
  423237:	jge    0x423215
  423239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42323a:	scas   eax,DWORD PTR es:[edi]
  42323b:	arpl   WORD PTR [edx],bx
  42323d:	ss pop ebp
  42323f:	mov    ds:0xa3ac5d3c,al
  423244:	test   eax,0x9adb4714
  423249:	ret    0x95be
  42324c:	xor    cl,bh
  42324e:	loop   0x423224
  423250:	push   edi
  423251:	outs   dx,DWORD PTR ds:[esi]
  423252:	pop    ecx
  423253:	sahf   
  423254:	ss inc ebx
  423256:	push   esp
  423257:	add    edx,DWORD PTR [ecx+ebp*2+0x8]
  42325b:	sahf   
  42325c:	bound  edx,QWORD PTR [ecx+ebp*1]
  42325f:	aas    
  423260:	sbb    al,bl
  423262:	inc    esi
  423263:	ds call 0x4e2c:0x1a996605
  42326b:	mov    eax,ds:0xcfa48e90
  423270:	fadd   QWORD PTR ss:[eax]
  423273:	mov    ecx,0x26560322
  423278:	sbb    dl,BYTE PTR [ebp+0x7a341dc]
  42327e:	imul   edx,DWORD PTR [edx],0xffffff9e
  423281:	call   0x2a5edec
  423286:	cli    
  423287:	dec    edi
  423288:	jmp    0xde1a:0x21088874
  42328f:	rcr    DWORD PTR [eax],1
  423291:	repnz inc ebx
  423293:	xchg   edi,eax
  423294:	pusha  
  423295:	and    cl,ch
  423297:	mov    bh,BYTE PTR [edx]
  423299:	(bad)  [ebx]
  42329b:	inc    ecx
  42329c:	lea    esi,[ecx+0x20]
  42329f:	aaa    
  4232a0:	push   edi
  4232a1:	aaa    
  4232a2:	pop    ss
  4232a3:	jmp    0x423236
  4232a5:	mov    DWORD PTR [eax-0x64],ecx
  4232a8:	(bad)  
  4232aa:	sub    BYTE PTR [ebp+0x668aeaa9],cl
  4232b0:	adc    al,0x4e
  4232b2:	sub    dh,cl
  4232b4:	xchg   ebx,eax
  4232b5:	repz mov ?,esp
  4232b8:	push   cs
  4232b9:	test   BYTE PTR [esi+0x4b],bl
  4232bc:	shl    BYTE PTR [ebp+0x48],0xaf
  4232c0:	mov    ch,0xe4
  4232c2:	hlt    
  4232c3:	xor    al,0xdd
  4232c5:	or     BYTE PTR [ebp+0xb],dh
  4232c8:	out    dx,al
  4232c9:	or     al,0x91
  4232cc:	and    DWORD PTR [eax],edi
  4232ce:	jp     0x4232fe
  4232d0:	dec    ebp
  4232d1:	aam    0x67
  4232d3:	push   ss
  4232d4:	sbb    al,BYTE PTR [edx+0x248b0c9d]
  4232da:	std    
  4232db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232dc:	hlt    
  4232dd:	ja     0x423297
  4232df:	jne    0x4232fb
  4232e1:	pop    ebp
  4232e2:	xchg   ecx,eax
  4232e3:	sub    al,0xb2
  4232e5:	adc    bl,BYTE PTR [ecx+0x4851ad55]
  4232eb:	inc    esi
  4232ec:	stc    
  4232ed:	push   edx
  4232ee:	ret    
  4232ef:	test   eax,0x4abfd56a
  4232f4:	dec    ebx
  4232f5:	inc    ebx
  4232f6:	pop    es
  4232f7:	addr16 in al,dx
  4232f9:	add    eax,DWORD PTR ds:0x601cb1
  4232ff:	mov    ebp,0x56d5ad4f
  423304:	jge    0x4232ef
  423306:	daa    
  423307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423308:	int    0x78
  42330a:	sub    al,0x72
  42330c:	repnz lods al,BYTE PTR ds:[esi]
  42330e:	pop    ecx
  42330f:	in     al,0xdb
  423311:	int    0x7b
  423313:	leave  
  423314:	mov    al,ds:0x6726fa93
  423319:	push   eax
  42331a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42331b:	jne    0x4232b7
  42331d:	pop    ss
  42331e:	push   0xa721292
  423323:	outs   dx,DWORD PTR ds:[esi]
  423324:	xchg   esp,eax
  423325:	int3   
  423326:	dec    edi
  423327:	sub    al,0xa
  423329:	pop    ss
  42332a:	leave  
  42332b:	jbe    0x4232f6
  42332d:	fnstenv [edx]
  42332f:	ficom  WORD PTR [edi]
  423331:	jne    0x42332d
  423333:	and    bl,0x67
  423336:	inc    edx
  423337:	cwde   
  423338:	push   0xeb024840
  42333d:	adc    dh,BYTE PTR [ebx+0x17e87f68]
  423343:	sbb    esi,DWORD PTR [bx-0x1f78]
  423348:	sbb    al,ch
  42334a:	(bad)  
  42334b:	jmp    0xec6e:0x23ee566d
  423352:	sub    al,0x73
  423354:	cmp    ebx,ecx
  423356:	int3   
  423357:	outs   dx,DWORD PTR ds:[esi]
  423358:	jmp    0x1acfe251
  42335d:	mov    cl,0x23
  42335f:	aaa    
  423360:	cld    
  423361:	push   ss
  423362:	fwait
  423363:	adc    ebp,DWORD PTR [ecx+0x315212d9]
  423369:	pop    esp
  42336a:	(bad)  
  42336c:	int3   
  42336d:	stc    
  42336e:	mov    bl,0x21
  423370:	jg     0x4233d0
  423372:	dec    eax
  423373:	mov    esi,0xed4b59fe
  423378:	lds    esp,FWORD PTR [edi]
  42337a:	or     ah,BYTE PTR [edi+0x4f]
  42337d:	push   ds
  42337e:	dec    ebp
  42337f:	out    dx,al
  423380:	sbb    ah,BYTE PTR ds:0x6c2ebd24
  423386:	inc    edi
  423387:	sub    BYTE PTR [ebx+0x2f8a3f4e],bh
  42338d:	mov    ah,0xb5
  42338f:	mov    cx,0x55f3
  423393:	mov    ebx,0x4697761a
  423398:	lahf   
  423399:	mov    esp,0xd95aa9b1
  42339e:	inc    ecx
  42339f:	pop    ds
  4233a0:	pop    edi
  4233a1:	int    0x77
  4233a3:	out    dx,al
  4233a4:	push   ecx
  4233a5:	pop    edx
  4233a6:	xor    BYTE PTR ds:0x5f32341b,bh
  4233ac:	popa   
  4233ad:	sub    DWORD PTR [edi],esp
  4233af:	xchg   esp,eax
  4233b0:	repnz inc al
  4233b3:	stos   BYTE PTR es:[edi],al
  4233b4:	and    eax,0x3182b5af
  4233b9:	test   eax,0x12cce6b4
  4233be:	inc    eax
  4233bf:	js     0x423365
  4233c1:	fst    DWORD PTR [ebx+0x6a0e6999]
  4233c7:	(bad)
  4233ca:	push   edx
  4233cb:	pop    ds
  4233cc:	xchg   ebx,eax
  4233cd:	into   
  4233ce:	das    
  4233cf:	push   ds
  4233d0:	mov    BYTE PTR [eax+0x72],cl
  4233d3:	jle    0x423417
  4233d5:	pop    ebx
  4233d6:	dec    eax
  4233d7:	push   edi
  4233d8:	ror    BYTE PTR [ebp+esi*1+0x41de63ae],cl
  4233df:	addr16 (bad) 
  4233e1:	sub    eax,DWORD PTR [ecx+0x3c]
  4233e4:	xchg   edx,eax
  4233e5:	lea    esi,[ebx+ecx*2+0x1a]
  4233e9:	loopne 0x423430
  4233eb:	jns    0x423381
  4233ed:	fs xor al,0x52
  4233f0:	out    0x18,eax
  4233f2:	or     bh,bl
  4233f4:	sbb    al,BYTE PTR [edi-0x68]
  4233f7:	inc    edi
  4233f8:	jne    0x42346e
  4233fa:	stos   BYTE PTR es:[edi],al
  4233fb:	inc    edx
  4233fc:	sbb    ah,BYTE PTR [ebx]
  4233fe:	push   esp
  4233ff:	mov    al,ds:0xade6770f
  423404:	xor    al,0x4c
  423406:	mov    eax,ds:0x64ac7785
  42340b:	data16 fwait
  42340d:	sbb    eax,0x6a28a3c7
  423412:	cld    
  423413:	cs jns 0x42344d
  423416:	sub    BYTE PTR [eax+ebx*2-0x11],0xc7
  42341b:	adc    dl,dl
  42341d:	loopne 0x423444
  42341f:	test   DWORD PTR [ebp+0x4b],ecx
  423422:	push   ss
  423423:	not    BYTE PTR [eax-0x19]
  423426:	cmp    BYTE PTR [eax-0x1d],bl
  423429:	jp     0x423415
  42342b:	sub    bl,BYTE PTR [ecx-0x1689b708]
  423431:	and    BYTE PTR [esi*1+0x6223d9fd],al
  423438:	loope  0x4233f1
  42343a:	repz aaa 
  42343c:	scas   eax,DWORD PTR es:[edi]
  42343d:	mov    WORD PTR [edi],?
  42343f:	ficom  DWORD PTR [ebp-0xe01b122]
  423445:	jae    0x423478
  423447:	jg     0x423437
  423449:	cwde   
  42344a:	dec    ecx
  42344b:	xchg   edi,eax
  42344c:	mov    eax,?
  42344e:	xor    esp,DWORD PTR [ebx+0x3a]
  423451:	pop    ecx
  423452:	std    
  423453:	xor    BYTE PTR [ebx+0x1acabf8a],0x22
  42345a:	rcr    DWORD PTR [edi],0xa2
  42345d:	mov    ah,0xc9
  42345f:	leave  
  423460:	(bad)  
  423462:	sbb    BYTE PTR [ecx+0x2b74ee48],ch
  423468:	in     eax,0x39
  42346a:	push   edi
  42346b:	dec    esi
  42346c:	pop    eax
  42346d:	xor    DWORD PTR ds:0xd8dd4dcd,esp
  423473:	or     WORD PTR [esi+edx*1],ax
  423477:	lods   al,BYTE PTR ds:[esi]
  423478:	mov    bl,0x60
  42347a:	(bad)  
  42347b:	xor    WORD PTR [esi],si
  42347e:	sbb    ch,BYTE PTR ds:0xe82ab61a
  423484:	mov    ecx,0xc978bba4
  423489:	pop    ss
  42348a:	add    BYTE PTR [edx-0x1fe2a970],ah
  423490:	pop    eax
  423491:	fnstenv [ecx]
  423493:	loop   0x4234a4
  423495:	popf   
  423496:	mulps  xmm4,XMMWORD PTR [eax+0x1af2d5e5]
  42349d:	adc    eax,ecx
  42349f:	fsubp  st(2),st
  4234a1:	add    DWORD PTR [edx+0x2b],0x6170da95
  4234a8:	jmp    0xb6902f0e
  4234ad:	lds    eax,FWORD PTR [ebx]
  4234af:	loopne 0x4234e9
  4234b1:	pusha  
  4234b2:	mov    al,0x39
  4234b4:	call   0xe1bca58e
  4234b9:	xor    al,0x23
  4234bb:	jmp    0x360f:0x41beb99e
  4234c2:	int    0xf9
  4234c4:	sbb    al,BYTE PTR [edi+0x1fb29757]
  4234ca:	scas   al,BYTE PTR es:[edi]
  4234cb:	jbe    0x4234f5
  4234cd:	mov    esp,0x5a058413
  4234d2:	dec    BYTE PTR [esp+esi*4-0x5165812c]
  4234d9:	in     al,0x70
  4234db:	imul   edi,DWORD PTR [ebx],0x600d6b25
  4234e1:	mov    esi,0xa8a24f18
  4234e6:	dec    eax
  4234e7:	nop
  4234e8:	sub    DWORD PTR [edi-0x1b],esp
  4234eb:	and    bh,cl
  4234ed:	loopne 0x42347e
  4234ef:	push   eax
  4234f0:	repz mov ah,0x10
  4234f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234f4:	adc    DWORD PTR [eax],esi
  4234f6:	fnstenv [esi-0x383963e6]
  4234fc:	ins    DWORD PTR es:[edi],dx
  4234fd:	mov    ebp,0xd94a031f
  423502:	push   ecx
  423503:	frstor [ecx-0x33]
  423506:	sbb    BYTE PTR [esp+edi*4],bl
  423509:	pop    ds
  42350a:	fbld   TBYTE PTR [ebp-0x11]
  42350d:	inc    eax
  42350e:	dec    eax
  42350f:	es dec eax
  423511:	test   DWORD PTR [eax+0x12],0x6db9b72a
  423518:	fs sbb al,0xf5
  42351b:	cmp    edx,eax
  42351d:	fcomp  DWORD PTR [ebp-0x36]
  423520:	sbb    bl,dh
  423522:	sub    ah,ah
  423524:	imul   BYTE PTR [ecx]
  423526:	lock fdivr st(7),st
  423529:	fldenv [edx+0x6970153d]
  42352f:	jge    0x4234d4
  423531:	adc    DWORD PTR [edi+0x64],ebp
  423534:	jp     0x42355c
  423536:	dec    eax
  423537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423538:	xchg   DWORD PTR [ebx+0x55afe744],ebx
  42353e:	iret   
  42353f:	mov    eax,gs
  423541:	lea    esp,[esi+0x66]
  423544:	sahf   
  423545:	mov    ds:0x80f43b27,eax
  42354a:	dec    edi
  42354b:	je     0x4234d7
  42354d:	jecxz  0x4234f3
  42354f:	mov    bl,0xb
  423551:	fild   DWORD PTR [edi]
  423553:	ins    DWORD PTR es:[edi],dx
  423554:	push   cs
  423555:	inc    ecx
  423556:	jle    0x4234f6
  423558:	pop    ds
  423559:	cmp    ecx,ebx
  42355b:	(bad)  
  42355c:	sbb    ah,BYTE PTR [eax+0xbf62813]
  423562:	test   DWORD PTR [eax-0x1a],edx
  423565:	call   0x9dda0816
  42356a:	stos   DWORD PTR es:[edi],eax
  42356b:	pushf  
  42356c:	retf   0x8834
  42356f:	fistp  DWORD PTR [ebx]
  423571:	xor    eax,0x5c072c44
  423576:	jae    0x4235d6
  423578:	add    DWORD PTR [edx-0x46ade2c9],ebx
  42357e:	mov    ?,WORD PTR [ebp+0x1d]
  423581:	ret    0x66d4
  423584:	ret    
  423585:	test   al,0x2
  423587:	test   eax,0xb8e1b51a
  42358c:	push   ebx
  42358d:	cmp    BYTE PTR [eax-0xc],bh
  423590:	mov    edi,0xe1cf63db
  423595:	out    dx,eax
  423596:	inc    ebp
  423597:	ret    
  423598:	fimul  DWORD PTR [ebx]
  42359a:	mov    ebp,0x2d2d99ef
  42359f:	ret    0x18da
  4235a2:	xchg   esp,eax
  4235a3:	mov    ebx,0xe708f271
  4235a8:	jo     0x42353e
  4235aa:	ffree  st(3)
  4235ac:	stos   BYTE PTR es:[edi],al
  4235ad:	jmp    0x8613:0xab2e667c
  4235b4:	sbb    ch,BYTE PTR [ebx]
  4235b6:	sbb    DWORD PTR [ebx+edx*1-0x4d],eax
  4235ba:	add    al,0xe3
  4235bc:	jbe    0x423597
  4235be:	inc    edx
  4235bf:	stc    
  4235c0:	push   ss
  4235c1:	mov    ds:0xaf217ddb,al
  4235c6:	shr    BYTE PTR [edi-0x72],cl
  4235c9:	jne    0x423613
  4235cb:	add    ah,bl
  4235cd:	dec    eax
  4235ce:	and    edx,DWORD PTR [eax+0x1e]
  4235d1:	leave  
  4235d2:	sbb    BYTE PTR [edi-0x5b],ah
  4235d5:	mov    edi,0x631a6128
  4235da:	jne    0x42355c
  4235dc:	inc    ecx
  4235dd:	cmp    cl,BYTE PTR [edi+0x5dd9924a]
  4235e3:	std    
  4235e4:	pop    edi
  4235e5:	std    
  4235e6:	cli    
  4235e7:	jg     0x423572
  4235e9:	cld    
  4235ea:	xlat   BYTE PTR ds:[ebx]
  4235eb:	mov    ch,0xfa
  4235ed:	lahf   
  4235ee:	dec    eax
  4235ef:	loope  0x42364b
  4235f1:	mov    al,0xcc
  4235f3:	jmp    0x67037b76
  4235f8:	(bad)  
  4235f9:	stc    
  4235fa:	jecxz  0x423672
  4235fc:	sbb    dh,BYTE PTR [edx+edx*4-0x72]
  423600:	add    esp,ebp
  423602:	push   0xffffffd8
  423604:	jp     0x4235df
  423606:	add    BYTE PTR [esp+edx*8+0x6a541e11],0x42
  42360e:	jb     0x423675
  423610:	cmp    ecx,eax
  423612:	dec    si
  423614:	pushf  
  423615:	imul   ecx,DWORD PTR [eax+0x7a],0x69
  423619:	dec    ebx
  42361a:	ret    0x9770
  42361d:	fst    DWORD PTR [edi+0x5e]
  423620:	in     al,0xa7
  423622:	cmp    eax,0x62b91eb8
  423627:	jmp    0x423606
  423629:	xchg   esp,eax
  42362a:	push   edi
  42362b:	bound  ebp,QWORD PTR [eax]
  42362d:	std    
  42362e:	jbe    0x423616
  423630:	pushf  
  423631:	ficomp DWORD PTR [ebp+ebp*2-0x7a]
  423635:	pop    es
  423636:	rcr    DWORD PTR [eax],0xe0
  423639:	stos   BYTE PTR es:[edi],al
  42363a:	ror    BYTE PTR [ebp+0x62fd7e11],0xf5
  423641:	nop
  423642:	dec    eax
  423643:	push   esi
  423644:	leave  
  423645:	repnz push ebx
  423647:	in     eax,dx
  423648:	rcr    cl,cl
  42364a:	mov    esi,0xef4a6adc
  42364f:	add    eax,0x15242e77
  423654:	out    dx,eax
  423655:	es dec eax
  423657:	aad    0x5d
  423659:	pop    esp
  42365a:	xor    eax,0x58df3d4e
  42365f:	sbb    DWORD PTR [esi],0x62
  423662:	jb     0x42360a
  423664:	mov    edi,0xbb9f46e1
  423669:	push   esp
  42366a:	dec    eax
  42366b:	bound  edx,QWORD PTR [ebx-0x1d]
  42366e:	xor    edi,ebp
  423670:	inc    eax
  423671:	fcos   
  423673:	fidivr WORD PTR [edx+0x5b]
  423676:	jne    0x42364f
  423678:	das    
  423679:	aam    0x12
  42367b:	int    0x3f
  42367d:	dec    ebp
  42367e:	dec    eax
  42367f:	stc    
  423680:	dec    ecx
  423681:	xchg   edx,eax
  423682:	add    edi,DWORD PTR [ebp*2+0x53a4c6f9]
  423689:	pushf  
  42368a:	enter  0x2b5,0xbe
  42368e:	cmp    dl,BYTE PTR [esi-0x50]
  423691:	call   0x9ac85de6
  423696:	jbe    0x42368d
  423698:	or     BYTE PTR [esi+0x73],dl
  42369b:	add    eax,DWORD PTR [esi-0x27]
  42369e:	xor    eax,DWORD PTR [ecx+0x4f]
  4236a1:	ss iret 
  4236a3:	adc    ebp,ebx
  4236a5:	fwait
  4236a6:	paddusw mm3,QWORD PTR [eax-0x688db757]
  4236ad:	or     DWORD PTR [ebx+0x4ca7ddf4],ebx
  4236b3:	xchg   cx,ax
  4236b5:	mov    eax,0xea1a6cde
  4236ba:	outs   dx,BYTE PTR ds:[esi]
  4236bb:	fld    DWORD PTR [eax-0x4]
  4236be:	jecxz  0x423666
  4236c0:	imul   ebx,ecx,0xbfca28f
  4236c6:	retf   
  4236c7:	ud2    
  4236c9:	shr    DWORD PTR [esi+ebp*8],0x2
  4236cd:	retf   0x8d4b
  4236d0:	mov    esp,0xbd2ba779
  4236d5:	fld    st(4)
  4236d7:	repz aad 0x2a
  4236da:	push   0xfffffff6
  4236dc:	pushf  
  4236dd:	inc    edi
  4236de:	adc    al,0x3
  4236e0:	sbb    dh,BYTE PTR [edx-0x49c1b1c8]
  4236e6:	adc    bl,al
  4236e8:	pop    ds
  4236e9:	fld    DWORD PTR [ebx+edx*2-0x62]
  4236ed:	and    eax,0x64e570c1
  4236f2:	in     al,dx
  4236f3:	xor    eax,0x72ed026
  4236f8:	jge    0x42375b
  4236fa:	mov    WORD PTR [ebx+0x66645f8f],cs
  423700:	stos   DWORD PTR es:[edi],eax
  423701:	imul   esi,DWORD PTR [eax-0x36],0x59
  423705:	idiv   DWORD PTR [ebp+0x4fd0ea83]
  42370b:	out    0x41,al
  42370d:	sar    DWORD PTR [ebx],1
  42370f:	cli    
  423710:	and    eax,0xb467464b
  423715:	lds    esp,FWORD PTR [esi]
  423717:	rcr    BYTE PTR [edx],0xc9
  42371a:	cwde   
  42371b:	dec    edx
  42371c:	test   eax,0x14ca58d0
  423721:	mov    ah,BYTE PTR [edx-0x7af39689]
  423727:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423729:	in     al,dx
  42372a:	xor    al,0x96
  42372c:	sbb    bl,BYTE PTR [ebx-0x53]
  42372f:	mov    ds:0xa168e3aa,al
  423734:	imul   esp,esp,0xffffff88
  423737:	mov    bl,0x75
  423739:	dec    ebp
  42373a:	add    esi,esi
  42373c:	sub    DWORD PTR [esi+0x4b],edi
  42373f:	xchg   ebx,eax
  423740:	fistp  WORD PTR [ecx-0x20]
  423743:	mov    dl,0x4d
  423745:	jmp    0x9fba:0x583cc349
  42374c:	push   esi
  42374d:	fmul   DWORD PTR [eax]
  42374f:	aad    0x9d
  423751:	and    BYTE PTR [eax+0x69],cl
  423754:	stos   DWORD PTR es:[edi],eax
  423755:	or     DWORD PTR [ecx-0x30],ecx
  423758:	dec    ebx
  423759:	inc    ecx
  42375a:	xchg   ebp,eax
  42375b:	test   WORD PTR [esi+ebp*8-0x1b98e507],dx
  423763:	repz push ebx
  423765:	mov    edi,0x186d731
  42376a:	int    0x8f
  42376c:	mov    dh,0xd9
  42376e:	ret    
  42376f:	jae    0x423765
  423771:	neg    esp
  423773:	les    eax,FWORD PTR [ebp+0x32]
  423776:	xchg   BYTE PTR [ebx],ch
  423778:	jl     0x423702
  42377a:	fs jmp 0x21fa:0x860f977d
  423782:	call   0x7ffc520
  423787:	addr16 jg 0x4237f7
  42378a:	cdq    
  42378b:	mov    WORD PTR [edi-0x5f30cb90],ss
  423791:	xchg   edi,eax
  423792:	je     0x423731
  423794:	xchg   ebx,eax
  423795:	sub    BYTE PTR [eax-0x58],cl
  423798:	fst    QWORD PTR [edx]
  42379a:	jmp    0xfa9f21ff
  42379f:	shl    DWORD PTR [eax],0xd8
  4237a2:	fsub   QWORD PTR [esi+0x60]
  4237a5:	(bad)  
  4237a6:	cmp    esp,ebp
  4237a8:	adc    al,0x88
  4237aa:	add    BYTE PTR [ecx+0x948848b],dh
  4237b0:	sbb    al,0x49
  4237b2:	scas   al,BYTE PTR es:[edi]
  4237b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4237b4:	dec    eax
  4237b5:	int    0xd8
  4237b7:	jecxz  0x4237c9
  4237b9:	aaa    
  4237ba:	cmp    ebp,DWORD PTR [edi-0x51a626b1]
  4237c0:	jmp    0x423742
  4237c2:	jno    0x4237f8
  4237c4:	sbb    al,BYTE PTR [ecx+0x25]
  4237c7:	(bad)  
  4237c8:	adc    edi,esp
  4237ca:	cmp    DWORD PTR [eax+0x12884a3e],esi
  4237d0:	les    edi,FWORD PTR [ebp-0x3f]
  4237d3:	and    ax,0x7564
  4237d7:	sbb    BYTE PTR [esi+0x55ce15c1],cl
  4237dd:	iret   
  4237de:	dec    edx
  4237df:	aad    0x24
  4237e1:	cmp    DWORD PTR [ecx],esi
  4237e3:	fs (bad) 
  4237e5:	fdiv   st(2),st
  4237e7:	jmp    DWORD PTR [ebx]
  4237e9:	fisttp QWORD PTR [edi+0x65]
  4237ec:	cli    
  4237ed:	stos   DWORD PTR es:[edi],eax
  4237ee:	fidiv  WORD PTR [edx-0x72]
  4237f1:	repz fcom DWORD PTR [esi+0x36]
  4237f5:	scas   al,BYTE PTR es:[edi]
  4237f6:	dec    eax
  4237f7:	push   ecx
  4237f8:	jecxz  0x423793
  4237fa:	and    BYTE PTR [esi],dl
  4237fc:	xchg   BYTE PTR [esi+0x55],ah
  4237ff:	add    dh,0x97
  423802:	adc    ebp,DWORD PTR [ecx+0x4e8c9a19]
  423808:	in     al,0xd9
  42380a:	push   cs
  42380b:	jge    0x4237c7
  42380d:	inc    edx
  42380e:	inc    eax
  42380f:	mov    dl,0x96
  423811:	ret    
  423812:	je     0x423846
  423814:	add    eax,0x6b4a4867
  423819:	sbb    al,0xde
  42381b:	stos   BYTE PTR es:[edi],al
  42381c:	mov    ah,ah
  42381e:	mov    ebp,0x66ec4266
  423823:	or     ah,BYTE PTR [ecx]
  423825:	(bad)
  423829:	hlt    
  42382a:	xor    cl,ch
  42382c:	pop    edi
  42382d:	das    
  42382e:	sub    dl,dh
  423830:	lea    esp,[edx-0x75d19952]
  423836:	xor    al,0xef
  423838:	ror    BYTE PTR [esi+0x7f],cl
  42383b:	clc    
  42383c:	mov    dl,0x4a
  42383e:	dec    eax
  42383f:	sbb    al,0xbd
  423841:	inc    ebx
  423842:	jecxz  0x423867
  423844:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423845:	loopne 0x423827
  423847:	push   ss
  423848:	push   ss
  423849:	ds inc eax
  42384b:	repz sub BYTE PTR [eax],0x2a
  42384f:	mov    esi,0x6867ea1b
  423854:	aaa    
  423855:	dec    edx
  423856:	popf   
  423857:	test   eax,0x1167c6da
  42385c:	mov    edi,0x3f8e75fb
  423861:	iret   
  423862:	and    BYTE PTR [esi+0x1],0xb6
  423866:	out    0xf8,al
  423868:	sbb    dl,ch
  42386a:	outs   dx,BYTE PTR ds:[esi]
  42386b:	push   0xa6ffb9da
  423870:	scas   eax,DWORD PTR es:[edi]
  423871:	loopne 0x4238c8
  423873:	les    edi,FWORD PTR [eax+ebx*4]
  423876:	pusha  
  423877:	rol    ebx,1
  423879:	fs add al,0x45
  42387c:	outs   dx,DWORD PTR ds:[esi]
  42387d:	mov    ebx,0x871a1d48
  423882:	mov    dl,0x34
  423884:	in     eax,0xbc
  423886:	call   0x5fa3:0x38d9d9fb
  42388d:	(bad)  
  42388e:	mov    ds:0xe1c2c1be,eax
  423893:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423894:	sbb    al,BYTE PTR [edi-0x2c421542]
  42389a:	add    BYTE PTR [eax-0x18],al
  42389d:	ficomp DWORD PTR [eax-0x25]
  4238a0:	out    dx,al
  4238a1:	or     al,0x89
  4238a3:	int    0x15
  4238a5:	dec    edx
  4238a6:	cld    
  4238a7:	pop    eax
  4238a8:	sbb    ch,BYTE PTR [esi+0x12b1cf86]
  4238ae:	loop   0x4238f2
  4238b0:	js     0x42388b
  4238b2:	rcr    bh,1
  4238b4:	ss xchg esp,eax
  4238b6:	or     sp,WORD PTR [esi+0x7b]
  4238ba:	scas   al,BYTE PTR es:[edi]
  4238bb:	(bad)  
  4238bc:	xor    BYTE PTR [edx+0x48],bl
  4238bf:	push   ds
  4238c0:	adc    BYTE PTR ds:0xad12,al
  4238c5:	push   edi
  4238c6:	cmp    DWORD PTR [ebp+0x1a],esi
  4238c9:	cmp    eax,0x654dc968
  4238ce:	cdq    
  4238cf:	or     BYTE PTR [edx],bl
  4238d1:	idiv   BYTE PTR [edx+0x229d3ca6]
  4238d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238d8:	cmp    edx,ebx
  4238da:	mov    es,WORD PTR [esi-0x50]
  4238dd:	jne    0x4238f8
  4238df:	adc    al,0x70
  4238e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238e2:	enter  0x3716,0xde
  4238e6:	sbb    dl,bh
  4238e8:	fidiv  DWORD PTR [ebp-0x5c0f9fda]
  4238ee:	mov    bl,0xfa
  4238f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238f1:	fptan  
  4238f3:	push   ss
  4238f4:	aaa    
  4238f5:	pop    ebx
  4238f6:	add    eax,0xc4b66946
  4238fb:	lahf   
  4238fc:	inc    esi
  4238fd:	dec    edx
  4238fe:	mov    eax,0x4df01a1e
  423903:	rol    DWORD PTR [edx-0x791fc844],cl
  423909:	lods   eax,DWORD PTR ds:[esi]
  42390a:	mov    BYTE PTR [esi-0x3b],ah
  42390d:	add    al,0x6a
  42390f:	jmp    0xc11ad22e
  423914:	dec    edx
  423915:	lea    ecx,[ebx-0x53]
  423918:	fwait
  423919:	mov    ebx,0x52e57668
  42391e:	sbb    esp,DWORD PTR [edi-0x3a]
  423921:	sbb    ecx,DWORD PTR [ebx+eiz*1+0x21]
  423925:	and    esi,DWORD PTR [eax+0x7590c4da]
  42392b:	mov    al,ds:0x30d7ed8d
  423930:	sbb    DWORD PTR [ebp+0x1e],edx
  423933:	jbe    0x4239af
  423935:	shr    bh,cl
  423937:	push   0x1f083135
  42393c:	je     0x423967
  42393e:	dec    eax
  42393f:	(bad)
  423942:	xchg   ebp,eax
  423943:	je     0x423943
  423945:	sub    eax,0x9a0069eb
  42394a:	imul   eax,DWORD PTR [eax],0x90c8a698
  423950:	mov    dl,0x43
  423952:	dec    eax
  423953:	ffree  st(2)
  423955:	or     DWORD PTR [eax+0x44bb1d99],esp
  42395b:	xchg   dh,dl
  42395d:	pusha  
  42395e:	jns    0x423946
  423960:	stc    
  423961:	cmp    edx,DWORD PTR [ebx]
  423963:	jnp    0x42398c
  423965:	jb     0x4239af
  423967:	push   eax
  423968:	jmp    DWORD PTR [ecx-0x1fb7afe7]
  42396e:	lock cmp DWORD PTR [esi+0x6966a002],0xfffffff2
  423976:	push   0xffffffc8
  423978:	(bad)  
  423979:	cmp    eax,0x445ac656
  42397e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42397f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423980:	loope  0x42394c
  423982:	fwait
  423983:	inc    esi
  423984:	leave  
  423985:	dec    eax
  423986:	add    esi,DWORD PTR [esi+0x3a]
  423989:	rdmsr  
  42398b:	repz mov eax,ds:0x813095ce
  423991:	sti    
  423992:	inc    edi
  423993:	mov    edi,0x8e988be2
  423998:	rcl    BYTE PTR [eax+0x47],cl
  42399b:	addr16 pop esi
  42399d:	test   bh,dl
  42399f:	outs   dx,DWORD PTR ds:[esi]
  4239a0:	sbb    bl,BYTE PTR [ebp+0x12e19cc5]
  4239a6:	arpl   WORD PTR [edx-0xd],bp
  4239a9:	loopne 0x4239c0
  4239ab:	lea    edi,[ebx+esi*2]
  4239ae:	inc    eax
  4239af:	jp     0x423a0b
  4239b1:	mov    ah,0xd2
  4239b3:	and    al,0x11
  4239b5:	sbb    dl,al
  4239b7:	push   DWORD PTR [edi]
  4239b9:	aaa    
  4239ba:	lds    esi,FWORD PTR [ecx-0x66]
  4239bd:	xchg   esp,eax
  4239be:	std    
  4239bf:	add    DWORD PTR [edi+0x61150c07],0x7f6798bb
  4239c9:	pcmpgtd mm2,mm4
  4239cc:	mov    bh,0x63
  4239ce:	or     edi,DWORD PTR [ebx]
  4239d0:	jb     0x423982
  4239d2:	dec    eax
  4239d3:	loop   0x423a1d
  4239d5:	xor    al,dl
  4239d7:	stos   DWORD PTR es:[edi],eax
  4239d8:	sbb    BYTE PTR [esi],al
  4239da:	mov    edx,0xd2b8866
  4239df:	push   ss
  4239e0:	stos   BYTE PTR es:[edi],al
  4239e1:	or     al,0x91
  4239e3:	and    edx,DWORD PTR [ebx+0x21f0c7a7]
  4239e9:	pusha  
  4239ea:	dec    eax
  4239eb:	xlat   BYTE PTR ds:[ebx]
  4239ec:	push   ds
  4239ed:	dec    ecx
  4239ee:	add    DWORD PTR [eax+esi*4],esi
  4239f1:	push   0xffffffec
  4239f3:	dec    dx
  4239f5:	stos   BYTE PTR es:[edi],al
  4239f6:	inc    esp
  4239f7:	sbb    DWORD PTR [edx],ebx
  4239f9:	(bad)  
  4239fb:	and    al,BYTE PTR [ecx+esi*2-0x2643bc9f]
  423a02:	sub    DWORD PTR [edx-0x74],eax
  423a05:	mov    eax,ds:0x2c5ea899
  423a0a:	jp     0x423a1c
  423a0c:	pop    ebx
  423a0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a0e:	dec    ebx
  423a0f:	and    dl,bh
  423a11:	mov    ecx,0xdcf4dedb
  423a16:	adc    ebp,DWORD PTR [eax+0x79]
  423a19:	pop    edi
  423a1a:	pop    ds
  423a1b:	shr    BYTE PTR [ebx+0x3048963f],0xd6
  423a22:	push   esp
  423a23:	cs pusha 
  423a25:	fwait
  423a26:	dec    eax
  423a27:	popf   
  423a28:	movsldup xmm3,XMMWORD PTR [edx-0x7a58d9b2]
  423a30:	imul   ebp,esi,0xffffffb1
  423a33:	out    0x11,al
  423a35:	mov    esi,0xfe1bce4d
  423a3a:	inc    edi
  423a3b:	mov    ds:0xca96ab21,eax
  423a40:	arpl   WORD PTR [ecx-0x48c9927c],sp
  423a46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423a47:	jnp    0x423a93
  423a49:	jmp    0x4239f2
  423a4b:	xchg   ebx,eax
  423a4c:	sbb    dh,BYTE PTR [edx+0x26708fc4]
  423a52:	fdivr  QWORD PTR [edx]
  423a54:	repnz fscale 
  423a57:	add    dl,dl
  423a59:	sbb    eax,0x9a278aca
  423a5e:	sub    bh,BYTE PTR [ebx+ecx*2]
  423a61:	push   0x48
  423a63:	das    
  423a64:	dec    ebp
  423a65:	fsub   st(3),st
  423a67:	aad    0x68
  423a69:	xchg   edx,eax
  423a6a:	arpl   WORD PTR [esi-0x4f],sp
  423a6d:	jecxz  0x423ab8
  423a6f:	aas    
  423a70:	sbb    dl,BYTE PTR [esi-0x3dcc1447]
  423a76:	pop    ss
  423a77:	sti    
  423a78:	daa    
  423a79:	xchg   ecx,eax
  423a7a:	mov    dh,dl
  423a7c:	xchg   edi,eax
  423a7d:	call   0x75b41828
  423a82:	imul   eax,DWORD PTR [eax],0xffffffe2
  423a85:	loop   0x423aee
  423a87:	clc    
  423a88:	sbb    dl,BYTE PTR [ebx]
  423a8a:	mov    ebx,0x6ad42b15
  423a8f:	(bad)  
  423a90:	mov    edx,0xf5a46cd9
  423a95:	mov    DWORD PTR [esi+0x4],esp
  423a98:	dec    esp
  423a99:	push   ss
  423a9a:	out    dx,eax
  423a9b:	sar    DWORD PTR [ecx-0xfb3b7f8],cl
  423aa1:	cmp    al,0x9f
  423aa3:	rol    BYTE PTR [edx-0x1c98d9e0],1
  423aa9:	ss pop ds
  423aab:	inc    esi
  423aac:	sbb    dl,BYTE PTR [ecx+edx*8+0x48]
  423ab0:	mov    dl,0xc0
  423ab2:	ins    BYTE PTR es:[edi],dx
  423ab3:	sbb    esi,DWORD PTR [edi+eiz*8]
  423ab6:	(bad)  
  423ab7:	jae    0x423b09
  423ab9:	mov    WORD PTR [ecx-0x56774b13],ss
  423abf:	dec    edx
  423ac0:	test   al,0xb1
  423ac2:	test   BYTE PTR [esi-0x79],0xb1
  423ac6:	or     DWORD PTR [eax],0x2b
  423ac9:	fldenv [ebp-0x4e]
  423acc:	ins    DWORD PTR es:[edi],dx
  423acd:	test   eax,0xd9822533
  423ad2:	nop
  423ad3:	adc    DWORD PTR [eax+0x5c],0xffffffca
  423ad7:	aad    0x75
  423ad9:	inc    ebp
  423ada:	and    ch,ah
  423adc:	mov    edx,eax
  423ade:	push   esp
  423adf:	ret    
  423ae0:	mov    al,ds:0x14469f18
  423ae5:	fisub  DWORD PTR [ebx]
  423ae7:	and    eax,0xdd604c27
  423aec:	dec    edi
  423aed:	cs push esp
  423aef:	or     DWORD PTR [eax+0x62],esi
  423af2:	dec    eax
  423af3:	sbb    BYTE PTR [esi+0x64f8e23d],dl
  423af9:	test   BYTE PTR ds:0x83ff8c67,ch
  423aff:	and    DWORD PTR [edx],ebx
  423b01:	inc    edi
  423b02:	jno    0x423aee
  423b04:	jge    0x423b76
  423b06:	pushf  
  423b07:	int    0xd7
  423b09:	fstp   DWORD PTR [edx]
  423b0b:	(bad)  
  423b0c:	xor    al,0x65
  423b0e:	lods   al,BYTE PTR ds:[esi]
  423b0f:	xor    edx,edx
  423b11:	fsubr  DWORD PTR [edi]
  423b13:	and    eax,0x4348100a
  423b18:	aam    0x1f
  423b1a:	and    DWORD PTR ds:0x7591b013,ebp
  423b20:	sbb    al,BYTE PTR [eax-0x23]
  423b23:	add    eax,0x794cda69
  423b28:	mov    ds:0x72dc48c8,al
  423b2d:	ja     0x423ac7
  423b2f:	and    al,0x55
  423b31:	pop    ds
  423b32:	inc    ecx
  423b33:	jne    0x423baf
  423b35:	and    eax,0x4617328c
  423b3a:	sub    ch,BYTE PTR [edi+0x70]
  423b3d:	fld    DWORD PTR [ecx+esi*8+0x561cf288]
  423b44:	adc    edx,DWORD PTR [ecx+0x7292874c]
  423b4a:	inc    eax
  423b4b:	rol    BYTE PTR [edx-0x2530b74b],cl
  423b51:	sbb    DWORD PTR [esi],ebp
  423b53:	icebp  
  423b54:	xchg   ebx,eax
  423b55:	push   ebx
  423b56:	and    BYTE PTR [esi+0x29],0xc2
  423b5a:	sbb    esi,DWORD PTR [eax+ebp*1-0x63]
  423b5e:	imul   edx,DWORD PTR [edx-0x72a6a562],0x5a33dd87
  423b68:	ins    BYTE PTR es:[edi],dx
  423b69:	shr    DWORD PTR [eax],1
  423b6b:	cmp    edx,0x69
  423b6e:	mov    dh,0x66
  423b70:	call   0xccc8:0x1a7b2155
  423b77:	pop    edi
  423b78:	or     BYTE PTR [esi-0x100b26aa],bh
  423b7e:	data16 sub dh,BYTE PTR [ecx-0x27]
  423b82:	int3   
  423b83:	stos   BYTE PTR es:[edi],al
  423b84:	rcl    bh,1
  423b86:	mov    bh,0xf6
  423b88:	aaa    
  423b89:	and    BYTE PTR [eax+eiz*4],dh
  423b8c:	sbb    dl,BYTE PTR [edi+0x1]
  423b8f:	popf   
  423b90:	adc    eax,0x719377f6
  423b95:	not    dh
  423b97:	data16 adc bl,ch
  423b9a:	(bad)  
  423b9b:	cmp    BYTE PTR [edx],bl
  423b9d:	xchg   esi,eax
  423b9e:	pop    ss
  423b9f:	fstp   DWORD PTR [ecx-0x46]
  423ba2:	sbb    al,0xad
  423ba4:	div    edi
  423ba6:	jmp    0x423bd0
  423ba8:	lods   eax,DWORD PTR ds:[esi]
  423ba9:	pop    ecx
  423baa:	aam    0xd5
  423bac:	popa   
  423bad:	xchg   edi,eax
  423bae:	inc    esp
  423baf:	test   eax,0xe89fcf1a
  423bb4:	jns    0x423b83
  423bb6:	jl     0x423beb
  423bb8:	stc    
  423bb9:	(bad)  
  423bba:	data16 and ah,BYTE PTR [ebp+0x288c8816]
  423bc1:	and    BYTE PTR [edi],dl
  423bc3:	outs   dx,BYTE PTR ds:[esi]
  423bc4:	std    
  423bc5:	arpl   WORD PTR [esi+eiz*1+0x1a],si
  423bc9:	mov    al,ds:0xe28139ce
  423bce:	and    eax,0x70d9cd83
  423bd3:	into   
  423bd4:	jl     0x423c55
  423bd6:	test   DWORD PTR [esi-0x47],0x54608bdf
  423bdd:	dec    esp
  423bde:	dec    eax
  423bdf:	je     0x423c27
  423be1:	inc    edx
  423be2:	aaa    
  423be3:	fimul  WORD PTR [edx+edx*2]
  423be6:	test   BYTE PTR [esi+0x672004a8],0x8b
  423bed:	pop    ecx
  423bee:	or     ch,BYTE PTR [edx+ebx*1-0x78b56c7a]
  423bf5:	mov    edi,0xc1f04d9b
  423bfa:	cmp    BYTE PTR [ebx+ebp*8+0x75],dl
  423bfe:	mov    BYTE PTR [edx+edi*4+0x28],dh
  423c02:	lea    edi,ds:0x9637c13e
  423c08:	cmp    BYTE PTR [ecx-0x7b],bl
  423c0b:	pop    eax
  423c0c:	push   ds
  423c0d:	xchg   edi,eax
  423c0e:	jmp    0x423be6
  423c10:	cld    
  423c11:	loopne 0x423b94
  423c13:	sbb    bh,BYTE PTR [eax-0x5f304a4a]
  423c19:	cmp    eax,ebx
  423c1b:	neg    BYTE PTR [edx]
  423c1d:	xor    ch,ah
  423c1f:	aaa    
  423c20:	push   ecx
  423c21:	mov    ds:0xd9a406e3,al
  423c26:	in     eax,dx
  423c27:	mov    bh,0xfe
  423c29:	adc    ah,dl
  423c2b:	push   ebx
  423c2c:	shl    BYTE PTR [edx+0x1741f3e],1
  423c32:	dec    eax
  423c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423c34:	jns    0x423c6f
  423c36:	add    DWORD PTR [ebx],esi
  423c38:	std    
  423c39:	sbb    edi,DWORD PTR [eax+0x13689b66]
  423c3f:	out    dx,al
  423c40:	sbb    dh,BYTE PTR [edi+0x4e]
  423c43:	loop   0x423c63
  423c45:	ins    BYTE PTR es:[edi],dx
  423c46:	scas   eax,DWORD PTR es:[edi]
  423c47:	pop    eax
  423c48:	popa   
  423c49:	fst    DWORD PTR [ebx]
  423c4b:	push   esi
  423c4c:	pop    esp
  423c4d:	repz inc ecx
  423c4f:	pop    ebp
  423c50:	pop    edx
  423c51:	nop    DWORD PTR [edx]
  423c54:	ds stos DWORD PTR es:[edi],eax
  423c56:	mov    edx,0xc4481aa3
  423c5b:	mov    al,0x87
  423c5d:	push   0xf66db564
  423c62:	sub    ch,BYTE PTR [edx-0x17]
  423c65:	xchg   eax,edx
  423c67:	outs   dx,BYTE PTR ds:[esi]
  423c68:	int3   
  423c69:	shr    al,0x2a
  423c6c:	adc    BYTE PTR [ebx+0x5eb3c05b],dh
  423c72:	dec    eax
  423c73:	dec    ecx
  423c74:	iret   
  423c75:	fnstcw WORD PTR [edi+eax*4]
  423c78:	js     0x423cf3
  423c7a:	aam    0x4b
  423c7c:	dec    ebp
  423c7d:	mov    ds:0x929b7194,eax
  423c82:	dec    eax
  423c83:	fistp  WORD PTR [ecx-0x2b]
  423c86:	pusha  
  423c87:	stos   DWORD PTR es:[edi],eax
  423c88:	mov    al,ds:0xd267076c
  423c8d:	outs   dx,DWORD PTR ds:[esi]
  423c8e:	mov    ebp,0xc9ef1a83
  423c93:	pop    ss
  423c94:	cmp    DWORD PTR [edi-0x24],eax
  423c97:	jp     0x423ccb
  423c99:	adc    al,0x2a
  423c9b:	test   eax,0x1415831b
  423ca0:	dec    edx
  423ca1:	adc    eax,0x4e664f53
  423ca6:	and    eax,0x484c822b
  423cab:	jbe    0x423c4f
  423cad:	pop    eax
  423cae:	lahf   
  423caf:	xchg   ebx,eax
  423cb0:	jmp    0x3c3f:0x6266db1c
  423cb7:	xor    ebx,DWORD PTR [esi]
  423cb9:	(bad)  
  423cba:	arpl   WORD PTR [esi-0x47],ax
  423cbd:	pop    edx
  423cbe:	adc    dh,0x65
  423cc1:	jmp    0x280f:0xd939bbc8
  423cc8:	jl     0x423cc3
  423cca:	add    eax,0xe56eeb1c
  423ccf:	mov    bl,BYTE PTR [ebx+0x5b]
  423cd2:	push   edi
  423cd3:	push   ds
  423cd4:	mov    edi,0x5966dbde
  423cd9:	adc    esp,edi
  423cdb:	stc    
  423cdc:	sbb    esi,DWORD PTR [ecx+0x56686dcb]
  423ce2:	mov    bh,0x63
  423ce4:	test   ebp,0xe5da2f0a
  423cea:	ja     0x423d16
  423cec:	add    edx,ebx
  423cee:	ds dec edi
  423cf0:	xchg   edx,eax
  423cf1:	jle    0x423cdd
  423cf3:	sar    BYTE PTR [eax-0x3],1
  423cf6:	test   DWORD PTR [ecx-0x23b62fed],0x99f6b319
  423d00:	xchg   esi,eax
  423d01:	fnsave [edi]
  423d03:	dec    edx
  423d04:	jo     0x423c9c
  423d06:	call   0xccc7edb7
  423d0b:	and    esp,DWORD PTR es:[edx+edi*1]
  423d0f:	xchg   esp,eax
  423d10:	(bad)  
  423d11:	fincstp 
  423d13:	stos   BYTE PTR es:[edi],al
  423d14:	inc    esp
  423d15:	push   ds
  423d16:	jmp    0x5867:0x3730f4ec
  423d1d:	loop   0x423d63
  423d1f:	xchg   edx,eax
  423d20:	retf   0x3cfb
  423d23:	pop    edx
  423d24:	push   ebp
  423d25:	fldenv [ebx+0x62aba1dc]
  423d2b:	fild   QWORD PTR [edi-0x26]
  423d2e:	adc    BYTE PTR [bp-0x7373],dl
  423d33:	jnp    0x423cc0
  423d35:	shr    DWORD PTR ds:0xab1c1a12,1
  423d3b:	test   al,0xd6
  423d3d:	adc    ebx,DWORD PTR [edi-0x22]
  423d40:	and    eax,0x4ccadfd9
  423d45:	fcmovbe st,st(7)
  423d47:	dec    edx
  423d48:	bound  eax,QWORD PTR [ebp-0xa]
  423d4b:	push   esi
  423d4c:	call   0x1851:0xb5e94861
  423d53:	sub    BYTE PTR [edi],al
  423d55:	sub    edx,esi
  423d57:	data16 aas 
  423d59:	cmp    eax,0xf61a98e7
  423d5e:	pop    ds
  423d5f:	fisttp DWORD PTR [eax]
  423d61:	cli    
  423d62:	mov    ah,0x72
  423d64:	(bad)  
  423d66:	mov    al,ds:0x9b1ea97a
  423d6b:	jo     0x423d68
  423d6d:	dec    ecx
  423d6e:	lds    ebx,FWORD PTR [edx+ecx*1]
  423d71:	and    al,0xe2
  423d73:	test   BYTE PTR [edx-0x2b],bh
  423d76:	dec    eax
  423d77:	out    0x45,al
  423d79:	inc    edx
  423d7a:	iret   
  423d7b:	sbb    ebx,DWORD PTR [ecx-0x27]
  423d7e:	dec    ebx
  423d7f:	push   ss
  423d80:	or     BYTE PTR [ecx+0x3bf52171],al
  423d86:	out    0x45,eax
  423d88:	out    dx,al
  423d89:	ror    BYTE PTR [ecx-0x26],0x19
  423d8d:	test   BYTE PTR [ebx+0x6f],ah
  423d90:	add    edi,0x28
  423d93:	ja     0x423d27
  423d95:	cmp    BYTE PTR [ebx],al
  423d97:	arpl   WORD PTR [bp+di+0x72],bp
  423d9b:	js     0x423db7
  423d9d:	and    al,0x8d
  423d9f:	xor    BYTE PTR ds:0x71588877,bh
  423da5:	fstp   DWORD PTR [ecx+eax*8]
  423da8:	(bad)  
  423da9:	jb     0x423dfb
  423dab:	adc    DWORD PTR [esi+0x2e],eax
  423dae:	pop    ecx
  423daf:	gs push cs
  423db1:	int3   
  423db2:	dec    eax
  423db3:	and    BYTE PTR [edi],bl
  423db5:	mov    esi,0x15b9b671
  423dba:	adc    DWORD PTR [ebx+0x6691b27e],edx
  423dc0:	retf   
  423dc1:	or     dl,ch
  423dc3:	aad    0x71
  423dc5:	inc    eax
  423dc6:	dec    eax
  423dc7:	out    0xb2,al
  423dc9:	jge    0x423e40
  423dcb:	jl     0x423dd8
  423dcd:	loopne 0x423e14
  423dcf:	addr16 inc ebx
  423dd1:	add    BYTE PTR [eax+edx*8-0x742408ab],bl
  423dd8:	dec    eax
  423dd9:	iret   
  423dda:	mov    ecx,0x93e83166
  423ddf:	push   eax
  423de0:	jle    0x423daa
  423de2:	jle    0x423e4a
  423de4:	inc    esp
  423de5:	and    cl,dh
  423de7:	push   0x1a
  423de9:	fcom   QWORD PTR [edx-0x2b]
  423dec:	int    0x6c
  423dee:	xlat   BYTE PTR ds:[ebx]
  423def:	xchg   BYTE PTR [ebp-0x28],bl
  423df2:	test   al,0x54
  423df4:	push   cs
  423df5:	fnsave [edi+0x4a255c37]
  423dfb:	ret    0xac9a
  423dfe:	popf   
  423dff:	adc    eax,0xe3d38a93
  423e04:	aas    
  423e05:	mov    eax,ds:0xc1a97248
  423e0a:	imul   ebx,DWORD PTR [edx+0x6994bca1],0x40
  423e11:	add    al,0x40
  423e13:	cmp    ebx,DWORD PTR [ebx+0x1acfe86b]
  423e19:	retf   
  423e1a:	sub    dh,BYTE PTR [eax+edi*1-0x405842c6]
  423e21:	fldl2e 
  423e23:	popa   
  423e24:	and    BYTE PTR [eax-0x1f8b3cac],cl
  423e2a:	jne    0x423e59
  423e2c:	hlt    
  423e2d:	jne    0x423e77
  423e2f:	mov    dl,0x46
  423e31:	sbb    al,0x79
  423e33:	mov    edx,0x672e7837
  423e38:	ins    DWORD PTR es:[edi],dx
  423e39:	and    BYTE PTR [edx],dh
  423e3b:	or     bl,BYTE PTR [edx]
  423e3d:	push   ecx
  423e3e:	xor    eax,DWORD PTR [eax]
  423e40:	std    
  423e41:	lods   al,BYTE PTR ds:[esi]
  423e42:	jb     0x423de0
  423e44:	repnz fxch st(6)
  423e47:	sar    dh,1
  423e49:	pop    ss
  423e4a:	xchg   ecx,eax
  423e4b:	push   es
  423e4c:	outs   dx,DWORD PTR ds:[esi]
  423e4d:	int    0xe5
  423e4f:	jl     0x423e2a
  423e51:	add    cl,BYTE PTR [edi-0x32]
  423e54:	pop    edx
  423e55:	pop    ebx
  423e56:	int    0x40
  423e58:	or     ebx,edx
  423e5a:	mov    esi,0x6f6cd35e
  423e5f:	rcr    DWORD PTR [edi+0x2a],0xac
  423e63:	jne    0x423ed8
  423e65:	gs dec eax
  423e67:	inc    esp
  423e68:	pop    esp
  423e69:	or     al,0x69
  423e6b:	lods   eax,DWORD PTR ds:[esi]
  423e6c:	pop    ebp
  423e6d:	fld1   
  423e6f:	push   eax
  423e70:	lahf   
  423e71:	inc    esi
  423e72:	xchg   edx,eax
  423e73:	(bad)  
  423e75:	add    ah,BYTE PTR [eax+0x69]
  423e78:	dec    ecx
  423e79:	fnstcw WORD PTR [edi-0x12]
  423e7c:	sbb    DWORD PTR [ebx],esp
  423e7e:	pop    edx
  423e7f:	popf   
  423e80:	cwde   
  423e81:	(bad)  
  423e83:	push   ebx
  423e84:	xchg   ch,al
  423e86:	mov    ds:0xd2bf00e3,al
  423e8b:	dec    edx
  423e8c:	push   esp
  423e8d:	cwde   
  423e8e:	dec    eax
  423e8f:	int    0x59
  423e91:	cld    
  423e92:	sar    BYTE PTR es:[eax-0x75],0x5c
  423e97:	jne    0x423e33
  423e99:	mov    al,ds:0x8f71ff1
  423e9e:	dec    edx
  423e9f:	xor    bh,bl
  423ea1:	mov    ebx,0xd9267908
  423ea6:	xchg   dl,ch
  423ea8:	(bad)  [edi+ebx*4]
  423eab:	xor    DWORD PTR [esi-0x4c],edi
  423eae:	xor    ch,BYTE PTR [edx-0x4b]
  423eb1:	test   eax,0xe4b22648
  423eb6:	jle    0x671d2a75
  423ebc:	pop    ss
  423ebd:	xor    ah,bl
  423ebf:	push   esi
  423ec0:	pop    ecx
  423ec1:	push   eax
  423ec2:	ins    DWORD PTR es:[edi],dx
  423ec3:	call   0x5ddc:0x841c96b8
  423eca:	or     BYTE PTR [eax-0x44],dh
  423ecd:	(bad)  [esi+0x2af33c5d]
  423ed3:	mov    esi,0x855e6f3b
  423ed8:	ror    DWORD PTR es:[eax+0x13],0x93
  423edd:	push   edi
  423ede:	push   ss
  423edf:	sti    
  423ee0:	mov    bh,0xd9
  423ee2:	aad    0x46
  423ee4:	stos   BYTE PTR es:[edi],al
  423ee5:	or     bl,bh
  423ee7:	enter  0x5c78,0x6d
  423eeb:	daa    
  423eec:	int3   
  423eed:	sub    DWORD PTR [eax+0x57],ecx
  423ef0:	sub    eax,0xa54956a3
  423ef5:	fstp   DWORD PTR [ecx+0x60]
  423ef8:	ret    
  423ef9:	dec    ebp
  423efa:	bound  ecx,QWORD PTR ds:[edx+0x4bbbc139]
  423f01:	and    ecx,DWORD PTR [eax-0x27]
  423f04:	cmc    
  423f05:	hlt    
  423f06:	mov    bl,0xe0
  423f08:	psraw  mm2,QWORD PTR [ecx]
  423f0b:	(bad)  
  423f0d:	add    DWORD PTR [ecx-0x7d],esp
  423f10:	add    ebx,DWORD PTR [edx-0x70]
  423f13:	sbb    ebp,edx
  423f15:	cs mov esp,0xbeec1aa7
  423f1b:	daa    
  423f1c:	lods   al,BYTE PTR ds:[esi]
  423f1d:	pop    ss
  423f1e:	add    ebx,ebp
  423f20:	mov    cl,0xf7
  423f22:	jge    0x423f47
  423f24:	pop    esp
  423f25:	sbb    bl,ah
  423f27:	(bad)  
  423f28:	(bad)  
  423f29:	(bad)  
  423f2a:	fisub  WORD PTR [esi]
  423f2c:	fdivr  QWORD PTR [ebp-0x42e338b4]
  423f32:	loopne 0x423f52
  423f34:	cmp    al,0xa0
  423f36:	repz mov eax,0xe98b5bd9
  423f3c:	retf   0xa864
  423f3f:	inc    esi
  423f40:	(bad)  
  423f41:	jp     0x423ee6
  423f43:	cmp    WORD PTR [eax],di
  423f46:	push   ebp
  423f47:	mov    ds:0xdab1de28,al
  423f4c:	pop    esi
  423f4d:	sbb    DWORD PTR [ecx+0x43],eax
  423f50:	push   edx
  423f51:	mov    edx,0xcdf100dc
  423f56:	fldenv [esi+0x4e]
  423f59:	mov    ah,0x1b
  423f5b:	std    
  423f5c:	sbb    dl,bl
  423f5e:	sub    esi,DWORD PTR [esi+0x3e9399f3]
  423f64:	aaa    
  423f65:	fst    DWORD PTR [ebx+0x6b]
  423f68:	sbb    eax,0xa85fe50b
  423f6d:	adc    BYTE PTR [ecx],0xd8
  423f70:	and    eax,0xc6ea484c
  423f75:	xor    bh,BYTE PTR [ecx]
  423f77:	(bad)  
  423f78:	clc    
  423f79:	inc    ebp
  423f7a:	mov    esi,0x48032e9e
  423f7f:	and    eax,DWORD PTR [eax-0x1ee028af]
  423f85:	loope  0x423fd9
  423f87:	aaa    
  423f88:	pop    esi
  423f89:	pop    edx
  423f8a:	test   al,0x69
  423f8c:	xlat   BYTE PTR ds:[ebx]
  423f8d:	dec    esp
  423f8e:	pushf  
  423f8f:	push   esi
  423f90:	mov    esi,0x6a66ba5c
  423f95:	in     al,0x28
  423f97:	ds push edi
  423f99:	cmp    BYTE PTR [ebp+0x5c],bh
  423f9c:	iret   
  423f9d:	push   ss
  423f9e:	pop    esi
  423f9f:	je     0x423f76
  423fa1:	nop
  423fa2:	fld    QWORD PTR [esi-0x57]
  423fa5:	dec    ecx
  423fa6:	push   ecx
  423fa7:	push   edi
  423fa8:	sbb    ecx,0x70
  423fab:	in     eax,0xb6
  423fad:	ins    BYTE PTR es:[edi],dx
  423fae:	(bad)  
  423faf:	mov    ch,0x4a
  423fb1:	into   
  423fb2:	xchg   esi,eax
  423fb3:	xlat   BYTE PTR ds:[ebx]
  423fb4:	sbb    cl,BYTE PTR [edx]
  423fb6:	clc    
  423fb7:	lock (bad) 
  423fb9:	out    dx,eax
  423fba:	cmp    BYTE PTR [edi+ecx*4-0x27],dl
  423fbe:	repnz dec ecx
  423fc0:	xor    edx,eax
  423fc2:	in     al,0xf3
  423fc4:	or     esi,edx
  423fc6:	(bad)  
  423fc7:	fcomp  QWORD PTR [edx]
  423fc9:	bound  eax,QWORD PTR [edx-0x6f]
  423fcc:	(bad)  
  423fcd:	fst    st(3)
  423fcf:	pop    ebx
  423fd0:	gs fld st(4)
  423fd3:	xor    BYTE PTR [eax+0x3e],0xba
  423fd7:	xchg   ebp,eax
  423fd9:	test   al,0x7
  423fdb:	inc    eax
  423fdc:	(bad)  
  423fdd:	mov    ch,0x49
  423fdf:	xchg   esp,eax
  423fe0:	lahf   
  423fe1:	push   esp
  423fe2:	pop    ds
  423fe3:	into   
  423fe4:	add    al,0xdd
  423fe6:	aas    
  423fe7:	retf   0x8e99
  423fea:	or     BYTE PTR [eax],ch
  423fec:	shl    cl,cl
  423fee:	dec    esp
  423fef:	pusha  
  423ff0:	sbb    dl,BYTE PTR [esi+0x550f3eca]
  423ff6:	inc    eax
  423ff7:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  423ff9:	fnstcw WORD PTR [edi-0x54]
  423ffc:	xchg   esi,eax
  423ffd:	sub    esp,ebx
  423fff:	out    0x8,eax
  424001:	pop    ecx
  424002:	sub    DWORD PTR [ebx+0x71],ecx
  424005:	cdq    
  424006:	dec    eax
  424007:	leave  
  424008:	gs or  eax,0x76c2bb1d
  42400e:	mov    al,0x7e
  424010:	sti    
  424011:	mov    bl,BYTE PTR [eax+edx*4+0x1a]
  424015:	xchg   ebp,eax
  424016:	inc    eax
  424017:	stc    
  424018:	popf   
  424019:	xor    eax,0xd9e8076c
  42401e:	cmp    BYTE PTR [edi],bh
  424020:	outs   dx,BYTE PTR ds:[esi]
  424021:	xchg   ecx,eax
  424022:	jp     0x424099
  424024:	jmp    0xc2bcb222
  424029:	in     al,dx
  42402a:	push   esi
  42402b:	sub    esi,DWORD PTR [ebp-0x4f]
  42402e:	fild   DWORD PTR [esi+0x45]
  424031:	(bad)  [esp+ecx*2+0xc2beb30]
  424038:	gs push edi
  42403a:	add    BYTE PTR [edx],dh
  42403c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42403d:	dec    ecx
  42403e:	dec    ebx
  42403f:	into   
  424040:	ror    ecx,0xd8
  424043:	mov    ah,0x62
  424045:	fstp   DWORD PTR [edx+0x260fff47]
  42404b:	push   esi
  42404c:	les    eax,FWORD PTR [esi+0x45]
  42404f:	adc    al,0xc2
  424051:	push   0x6527e148
  424056:	lods   al,BYTE PTR ds:[esi]
  424057:	neg    DWORD PTR [esp+edx*2-0x6a6cb380]
  42405e:	mov    dl,0x66
  424060:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424061:	hlt    
  424062:	mov    edi,0x95051dea
  424067:	mov    ecx,esi
  424069:	js     0x424068
  42406b:	xchg   edi,eax
  42406c:	loopne 0x424077
  42406e:	mov    cl,BYTE PTR [esi]
  424070:	cmp    DWORD PTR [edi+0x7febd72a],0xffffff96
  424077:	addr16 into 
  424079:	adc    ecx,DWORD PTR [esi-0x4bfe37d9]
  42407f:	bound  esi,QWORD PTR [ebx+0x2739485c]
  424085:	pop    edi
  424086:	dec    esp
  424087:	shufps xmm3,XMMWORD PTR [ebp-0x511a98e0],0x92
  42408f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424090:	push   ebp
  424091:	in     eax,dx
  424092:	fdiv   QWORD PTR [ecx+0x67103f76]
  424098:	imul   ebp,ebx,0xffffffdd
  42409b:	repz popf 
  42409d:	(bad)  
  42409e:	int    0x71
  4240a0:	adc    DWORD PTR [edx+0x3e],ebx
  4240a3:	ins    BYTE PTR es:[edi],dx
  4240a4:	jmp    0xf699b16d
  4240a9:	in     al,0x11
  4240ab:	test   DWORD PTR [edi+0x7e],0x1dec4f45
  4240b2:	dec    eax
  4240b3:	mov    al,ds:0x4ffad1a
  4240b8:	dec    ebx
  4240b9:	push   edx
  4240ba:	mov    ch,0x68
  4240bc:	retf   0x21f6
  4240bf:	fsub   DWORD PTR ds:0x6bdd3999
  4240c5:	pop    ebx
  4240c6:	mov    dh,0x7a
  4240c8:	sub    al,0x90
  4240ca:	call   0x9e02624d
  4240cf:	sub    edi,edx
  4240d1:	cmp    al,BYTE PTR [eax+0x74e7990c]
  4240d7:	rcr    DWORD PTR [esi],cl
  4240d9:	mov    ah,0x88
  4240db:	inc    ebp
  4240dc:	int3   
  4240dd:	mov    bl,0x88
  4240df:	xchg   edi,eax
  4240e0:	stos   BYTE PTR es:[edi],al
  4240e1:	outs   dx,DWORD PTR ds:[esi]
  4240e2:	(bad)  
  4240e3:	pop    esp
  4240e4:	mov    bl,0x34
  4240e6:	dec    eax
  4240e7:	jb     0x4240df
  4240e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240ea:	add    ch,BYTE PTR [eax+0x4a]
  4240ed:	cmp    BYTE PTR [edi],0x67
  4240f0:	pop    esi
  4240f1:	test   eax,0xe81a4b66
  4240f6:	iret   
  4240f7:	mov    al,0xb
  4240f9:	shl    DWORD PTR [edi+0x17],0xb1
  4240fd:	loopne 0x4240e2
  4240ff:	xor    al,0xa4
  424101:	sub    DWORD PTR [esi-0x1597af45],0xffffffe6
  424108:	and    ecx,DWORD PTR [eax+eax*4]
  42410b:	fs inc esp
  42410d:	leave  
  42410e:	fst    st(0)
  424110:	fmul   QWORD PTR [esi]
  424112:	and    esi,DWORD PTR [ebp-0x6]
  424115:	repz (bad) 
  424117:	pop    ecx
  424118:	out    0xf9,eax
  42411a:	mov    edi,0x487d65a3
  42411f:	push   es
  424120:	lahf   
  424121:	out    dx,al
  424122:	mov    BYTE PTR [ecx-0x35],ch
  424125:	add    al,BYTE PTR [eax-0x160a719a]
  42412b:	xchg   ecx,eax
  42412c:	sbb    al,BYTE PTR [edx-0x3b]
  42412f:	push   ds
  424130:	test   eax,0x33fdbcf3
  424135:	(bad)  
  424137:	jmp    0xf51366c6
  42413c:	add    eax,0x6482ebc9
  424141:	jmp    0xb20669ab
  424146:	or     ch,cl
  424148:	jno    0x424123
  42414a:	inc    ebp
  42414b:	adc    al,0x90
  42414d:	dec    ebp
  42414e:	sahf   
  42414f:	jl     0x4241cd
  424151:	out    dx,al
  424152:	pop    edi
  424153:	mov    dl,0xdd
  424155:	call   0xb9d902aa
  42415a:	mov    ah,dh
  42415c:	out    dx,eax
  42415d:	dec    BYTE PTR [ebp+0x412b7621]
  424163:	mov    ds:0xb048393c,eax
  424168:	add    edx,ebx
  42416a:	cmp    BYTE PTR [edx+esi*4+0x4c23c9ce],dh
  424171:	dec    ebx
  424172:	mov    dl,0x78
  424174:	popf   
  424175:	leave  
  424176:	dec    eax
  424177:	mov    ebx,0xce84b6aa
  42417c:	dec    ebx
  42417d:	xlat   BYTE PTR ds:[ebx]
  42417e:	mov    ah,0x66
  424180:	and    dl,BYTE PTR [esi+eiz*4-0x7af2e5ba]
  424187:	ins    BYTE PTR es:[edi],dx
  424188:	inc    eax
  424189:	dec    eax
  42418a:	popa   
  42418b:	xor    cl,BYTE PTR [ebp-0x19]
  42418e:	sbb    DWORD PTR [eax+0xa],esp
  424191:	lea    esi,[edi-0x4e]
  424194:	and    DWORD PTR [ecx+0x7d1add08],ebp
  42419a:	add    edx,eax
  42419c:	push   ecx
  42419d:	mov    dh,0x1d
  42419f:	mov    cl,0x18
  4241a1:	fisub  DWORD PTR ds:0xedf2b172
  4241a7:	sbb    BYTE PTR [ebx+0x128e4141],ch
  4241ad:	in     al,0x47
  4241af:	sbb    DWORD PTR [edx+0x37],ecx
  4241b2:	mov    edi,0xd1fc9417
  4241b7:	addr16 push esi
  4241b9:	dec    edx
  4241ba:	push   eax
  4241bb:	dec    edx
  4241bc:	fistp  DWORD PTR [ebp-0x3b]
  4241bf:	xchg   esi,eax
  4241c0:	sbb    bl,bl
  4241c2:	xlat   BYTE PTR ds:[ebx]
  4241c3:	add    esp,edx
  4241c5:	pop    esi
  4241c6:	pushf  
  4241c7:	cmp    ecx,eax
  4241c9:	fldenv [ebp-0x35]
  4241cc:	hlt    
  4241cd:	adc    esp,0x454686e9
  4241d3:	mov    al,ds:0x5488019
  4241d8:	imul   BYTE PTR ds:0xd9561441
  4241de:	stos   BYTE PTR es:[edi],al
  4241df:	dec    eax
  4241e0:	dec    edi
  4241e1:	inc    edx
  4241e2:	cmp    eax,0xb45f6a97
  4241e7:	xor    eax,0xd99fd99c
  4241ec:	adc    al,0x74
  4241ee:	inc    ecx
  4241ef:	cmp    ah,dh
  4241f1:	fnstcw WORD PTR [ebx+0x29e605bd]
  4241f7:	mov    bl,0xd5
  4241f9:	jp     0x42424a
  4241fb:	out    dx,al
  4241fc:	jae    0x4241fd
  4241fe:	inc    edi
  4241ff:	out    0x52,al
  424201:	in     al,dx
  424202:	dec    esp
  424203:	loop   0x424242
  424205:	fstp   DWORD PTR [ebp+0xbe085a]
  42420b:	ja     0x42425b
  42420d:	fs adc al,dh
  424210:	mov    ecx,0xc97e845e
  424215:	out    dx,eax
  424216:	mov    ebp,0x9217104
  42421b:	or     eax,0xf514c416
  424220:	in     eax,dx
  424221:	clc    
  424222:	xchg   ebp,eax
  424223:	data16 stc 
  424225:	cwde   
  424226:	rcr    DWORD PTR [eax-0x47b316e6],0x69
  42422d:	push   cs
  42422e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42422f:	jg     0x424273
  424231:	out    0xd,eax
  424233:	xchg   edx,eax
  424234:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424235:	dec    ecx
  424236:	(bad)  
  424237:	ds out dx,al
  424239:	dec    edx
  42423a:	retf   
  42423b:	jp     0x4241f7
  42423d:	(bad)  
  42423e:	sti    
  42423f:	out    dx,eax
  424240:	sbb    al,0x53
  424242:	rcr    BYTE PTR [eax+0x5b5615a1],1
  424248:	xor    esp,DWORD PTR [edi+0x3504731]
  42424e:	fwait
  42424f:	sbb    WORD PTR [ebp-0x78],si
  424253:	cli    
  424254:	sbb    dl,ch
  424256:	mov    edx,0x2a0eac04
  42425b:	pop    ecx
  42425c:	fdivr  st(7),st
  42425e:	pop    edi
  42425f:	or     al,0xdb
  424261:	pop    ecx
  424262:	call   0x2022:0xd8c9ad42
  424269:	ret    0xd6cf
  42426c:	mov    ecx,0x9d46c235
  424271:	adc    eax,0xf9f0a0d6
  424276:	(bad)  
  424277:	pop    ebp
  424278:	mov    edi,0xc0dbde6d
  42427d:	xchg   esp,eax
  42427e:	dec    eax
  42427f:	jae    0x4242d0
  424281:	ret    
  424282:	clc    
  424283:	sahf   
  424284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424285:	jge    0x42424e
  424287:	push   bp
  424289:	pop    ss
  42428a:	mov    ebp,DWORD PTR [esi+0x1a]
  42428d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42428e:	jmp    0x1cb9:0x45f12b19
  424295:	fst    DWORD PTR ds:0xc603a703
  42429b:	cdq    
  42429c:	xchg   BYTE PTR [eax-0x42],bh
  42429f:	mov    esp,0x184bccbc
  4242a4:	imul   edi,DWORD PTR [ecx+0x65],0x57
  4242a8:	pop    edi
  4242a9:	fisub  DWORD PTR [ebp+0x4282d1fa]
  4242af:	or     bh,BYTE PTR [edi-0x3f]
  4242b2:	push   0xea2e66d5
  4242b7:	dec    edx
  4242b8:	sbb    dh,BYTE PTR [esi+0x267dda0e]
  4242be:	sub    esp,ecx
  4242c0:	cmp    eax,0x85ad87d9
  4242c5:	adc    ecx,esp
  4242c7:	outs   dx,BYTE PTR ds:[esi]
  4242c8:	in     eax,dx
  4242c9:	xchg   DWORD PTR [edi+0x480bb4cb],esp
  4242cf:	inc    edx
  4242d0:	int3   
  4242d1:	jg     0x424343
  4242d3:	scas   eax,DWORD PTR es:[edi]
  4242d4:	xchg   ebx,eax
  4242d5:	hlt    
  4242d6:	push   0x2ae23682
  4242db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4242dc:	jns    0x4242c7
  4242de:	into   
  4242df:	cmp    ebp,DWORD PTR [ebp-0x27]
  4242e2:	test   DWORD PTR [edx-0x4e1e7e7a],ebx
  4242e8:	mov    cl,0xd9
  4242ea:	xlat   BYTE PTR ds:[ebx]
  4242eb:	sub    eax,eax
  4242ed:	mov    bh,0xf5
  4242ef:	mov    WORD PTR [ebp+0x441c911a],ds
  4242f5:	add    eax,0xa1654048
  4242fa:	les    ecx,FWORD PTR [esi+0x4a]
  4242fd:	inc    ebx
  4242fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4242ff:	ins    DWORD PTR es:[edi],dx
  424300:	bnd jns 0x4242be
  424303:	stc    
  424304:	fstp   DWORD PTR [ecx-0x392378ab]
  42430a:	dec    eax
  42430b:	les    esp,FWORD PTR [ecx]
  42430d:	xchg   bh,dh
  42430f:	cwde   
  424310:	push   ebx
  424311:	and    DWORD PTR [esi-0x580ec9a],edi
  424317:	push   ds
  424318:	and    ecx,DWORD PTR [ecx*4+0x5fe05845]
  42431f:	add    ebx,DWORD PTR [edx+0x4ea1c07d]
  424325:	xlat   BYTE PTR ds:[ebx]
  424326:	cmp    al,0x96
  424328:	aaa    
  424329:	fst    DWORD PTR [esi-0x27]
  42432c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42432d:	lods   eax,DWORD PTR ds:[esi]
  42432e:	test   DWORD PTR [edi],0xbae7d796
  424334:	outs   dx,DWORD PTR ds:[esi]
  424335:	and    cl,BYTE PTR [eax+0x1c]
  424338:	popf   
  424339:	stc    
  42433a:	mov    BYTE PTR [ebx],dh
  42433c:	push   0x3d
  42433e:	stos   BYTE PTR es:[edi],al
  42433f:	mov    bx,WORD PTR [ecx]
  424342:	add    eax,DWORD PTR [ebx-0x75]
  424345:	dec    eax
  424346:	gs js  0x4243be
  424349:	int3   
  42434a:	dec    eax
  42434b:	sub    BYTE PTR [ebx-0x5d],dh
  42434e:	popf   
  42434f:	cmp    BYTE PTR [eax+ecx*8],dh
  424352:	pop    edi
  424353:	data16 jle 0x42439f
  424356:	or     ebx,DWORD PTR [eax+0x1a]
  424359:	add    BYTE PTR [edi-0x2b],dl
  42435c:	dec    esi
  42435d:	adc    eax,0xdb48efbe
  424362:	cmp    DWORD PTR [ecx],edi
  424364:	xor    bl,BYTE PTR [edx+0x57da7b02]
  42436a:	pop    es
  42436b:	cmc    
  42436c:	sbb    ch,BYTE PTR [esi-0x1c0c5e96]
  424372:	dec    ebp
  424373:	sti    
  424374:	daa    
  424375:	call   0xe50df00d
  42437a:	pop    ecx
  42437b:	mov    eax,0xe80bd7dd
  424380:	jecxz  0x42431c
  424382:	sub    bh,dl
  424384:	sbb    cl,BYTE PTR [ebx-0x3a]
  424387:	pop    ebx
  424388:	push   es
  424389:	mov    dl,BYTE PTR [ebx-0x50263bd4]
  42438f:	jb     0x424366
  424391:	sbb    eax,0xe92c1cdc
  424396:	int    0x42
  424398:	idiv   eax
  42439a:	xor    ecx,DWORD PTR fs:[ebx+esi*4-0x268db0b8]
  4243a2:	es stos BYTE PTR es:[edi],al
  4243a4:	pop    ebx
  4243a5:	imul   edx,DWORD PTR [edx-0x74],0xb4bc89cd
  4243ac:	xor    dh,dh
  4243ae:	inc    edi
  4243af:	xchg   edi,eax
  4243b0:	mov    bh,0xb5
  4243b2:	int    0x31
  4243b4:	jl     0x42438b
  4243b6:	jmp    0x8bfb:0x489094a4
  4243bd:	sub    BYTE PTR [edx],cl
  4243bf:	sti    
  4243c0:	sar    DWORD PTR [ecx-0x26e1033b],1
  4243c6:	pop    es
  4243c7:	xor    DWORD PTR [ecx+0x669a7608],ecx
  4243cd:	ss cmp al,0x12
  4243d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4243d1:	cmp    eax,0xf927bf48
  4243d6:	sahf   
  4243d7:	inc    ecx
  4243d8:	xchg   ebp,eax
  4243d9:	cdq    
  4243da:	push   ss
  4243db:	addr16 inc eax
  4243dd:	inc    edi
  4243de:	adc    edx,DWORD PTR [ebx+0x36]
  4243e1:	retf   
  4243e2:	dec    ebx
  4243e3:	inc    eax
  4243e4:	ficomp DWORD PTR [esi]
  4243e6:	neg    BYTE PTR [ecx-0x74e3d19]
  4243ec:	add    dh,cl
  4243ee:	fldenv [esi+0x4e]
  4243f1:	push   ebp
  4243f2:	loop   0x424435
  4243f4:	sbb    edx,DWORD PTR [edx]
  4243f6:	push   0x3d
  4243f8:	fs test eax,0x184ae1ed
  4243fe:	mov    edi,0x1d11016e
  424403:	jo     0x42439f
  424405:	mov    dh,0x9f
  424407:	inc    ebp
  424408:	mov    ebp,0x8e290c0a
  42440d:	clc    
  42440e:	dec    esi
  42440f:	mov    ch,0xa
  424411:	fist   DWORD PTR [esp+edi*4]
  424414:	mov    eax,ds:0x9d634fd9
  424419:	fcom   QWORD PTR [ecx]
  42441b:	mov    ebp,0xfe6dfe3
  424420:	jno    0x424483
  424422:	dec    eax
  424423:	mov    al,0x31
  424425:	dec    ebp
  424426:	in     eax,dx
  424427:	xchg   ebp,eax
  424428:	push   0xb3678ade
  42442d:	pop    ebp
  42442e:	and    bl,BYTE PTR [esi]
  424430:	and    BYTE PTR ds:0xaa9a5684,al
  424436:	cmp    DWORD PTR [ebp+0x1d],ecx
  424439:	ins    DWORD PTR es:[edi],dx
  42443a:	call   0x70bdd667
  42443f:	mov    dh,0x54
  424441:	aam    0x48
  424443:	out    dx,eax
  424444:	push   ss
  424445:	gs sub eax,0xf384a78
  42444b:	jbe    0x424447
  42444d:	sbb    DWORD PTR [edi],0xffffffde
  424450:	retf   
  424451:	cwde   
  424452:	jne    0x424490
  424454:	xchg   DWORD PTR ds:0xc2b86467,edx
  42445a:	or     BYTE PTR [ebx],ch
  42445c:	inc    ecx
  42445d:	retf   
  42445e:	inc    ecx
  42445f:	jp     0x42441c
  424461:	jnp    0x424404
  424463:	data16 jbe 0x424470
  424466:	jmp    0x4244e7
  424468:	sbb    al,BYTE PTR [ecx-0x14]
  42446b:	icebp  
  42446c:	out    dx,al
  42446d:	(bad)  
  42446e:	or     dh,bl
  424470:	xor    al,0xd9
  424472:	fdiv   QWORD PTR [eax+0x52]
  424475:	ja     0x424451
  424477:	sub    eax,0x8e6e792f
  42447c:	xchg   edx,eax
  42447d:	and    BYTE PTR [edi-0x16],0x4f
  424481:	xor    ecx,DWORD PTR [eax+0x38]
  424484:	pop    ss
  424485:	fisubr DWORD PTR [edi+0x659fe837]
  42448b:	stos   BYTE PTR es:[edi],al
  42448c:	clc    
  42448d:	or     eax,0x3f3a6117
  424492:	dec    ebx
  424493:	sub    BYTE PTR [ebp+0x61],bl
  424496:	daa    
  424497:	pop    esp
  424498:	mov    ch,0xe3
  42449a:	jle    0x4244ad
  42449c:	sub    edx,DWORD PTR [ecx]
  42449e:	add    BYTE PTR [ebx-0x78],bl
  4244a1:	xor    edi,ebx
  4244a3:	not    WORD PTR [ebx]
  4244a6:	sbb    BYTE PTR [ebx+0x244862ba],bh
  4244ac:	and    DWORD PTR [edi-0x21],edi
  4244af:	jns    0x424459
  4244b1:	sub    bl,BYTE PTR [eax-0x7c]
  4244b4:	retf   
  4244b5:	ins    BYTE PTR es:[edi],dx
  4244b6:	sbb    ch,BYTE PTR [eax+0x3c]
  4244b9:	call   0x3acf:0x7ac8bfb9
  4244c0:	retf   0x6c56
  4244c3:	xor    ah,BYTE PTR [ebp+0x76054aa4]
  4244c9:	adc    eax,0x8a3c273f
  4244ce:	shl    DWORD PTR [esi-0x57],0x39
  4244d2:	or     eax,esi
  4244d4:	xor    BYTE PTR [ecx+0x6a1aa981],al
  4244da:	nop
  4244db:	scas   eax,DWORD PTR es:[edi]
  4244dc:	pop    ecx
  4244dd:	stc    
  4244de:	pop    edi
  4244df:	sub    eax,0x668055c7
  4244e4:	inc    ebp
  4244e5:	cli    
  4244e6:	adc    al,BYTE PTR [edx]
  4244e8:	sbb    cl,BYTE PTR [ecx-0xb6fb5e9]
  4244ee:	lahf   
  4244ef:	sub    cl,BYTE PTR [edx+ebx*8]
  4244f2:	pop    ecx
  4244f3:	xchg   esp,eax
  4244f4:	cmovbe ebx,DWORD PTR [edi+0x738db819]
  4244fb:	adc    DWORD PTR [esp+ecx*1+0x48],ebx
  4244ff:	outs   dx,DWORD PTR ds:[esi]
  424500:	mov    bl,0xbd
  424502:	adc    al,0xf8
  424504:	loopne 0x424492
  424506:	ficom  DWORD PTR [edx+0x6648cb1c]
  42450c:	popa   
  42450d:	xor    ebp,DWORD PTR [esi]
  42450f:	cli    
  424510:	lahf   
  424511:	mov    BYTE PTR [edi-0x29],dl
  424514:	cmp    BYTE PTR [ebx-0x6d5b7273],bh
  42451a:	cmp    BYTE PTR [edx],bh
  42451c:	mov    ah,0x55
  42451e:	pop    ss
  42451f:	addr16 xchg ebx,eax
  424521:	sbb    DWORD PTR ds:0x6655,ebx
  424526:	inc    ebx
  424527:	cwde   
  424528:	mov    bh,0x9e
  42452a:	scas   eax,DWORD PTR es:[edi]
  42452b:	and    ch,0x16
  42452e:	enter  0x3691,0x4a
  424532:	imul   edx,DWORD PTR [edx+0x570adad6],0xd147a57d
  42453c:	sbb    eax,ebp
  42453e:	xchg   esp,eax
  42453f:	cli    
  424540:	sbb    dh,al
  424542:	cmp    DWORD PTR [ecx],ebx
  424544:	aas    
  424545:	jp     0x4245ab
  424547:	test   DWORD PTR [eax-0x31dc427],0x728aa99f
  424551:	pop    edx
  424552:	adc    al,0xce
  424554:	lahf   
  424555:	jnp    0x42459f
  424557:	ficom  WORD PTR [edi+0xf]
  42455a:	xor    BYTE PTR [esi+ebp*1+0x25],ch
  42455e:	call   0x9598d4c9
  424563:	sbb    al,BYTE PTR cs:[ebx+0x6e77bf8]
  42456a:	(bad)  
  42456b:	std    
  42456c:	ins    DWORD PTR es:[edi],dx
  42456d:	fimul  DWORD PTR [eax-0x89a14f3]
  424573:	jbe    0x4245f0
  424575:	sar    BYTE PTR [edi-0x64],cl
  424578:	add    dl,BYTE PTR [esi-0x2669794d]
  42457e:	xchg   bh,cl
  424580:	pusha  
  424581:	fnstsw WORD PTR [edi-0x7]
  424584:	mov    al,0x89
  424586:	shl    DWORD PTR [esi],1
  424588:	mov    bl,0xd4
  42458a:	nop
  42458b:	data16 das 
  42458d:	cs xchg edx,eax
  42458f:	inc    esi
  424590:	sbb    eax,0xa0c1053d
  424595:	pusha  
  424596:	push   eax
  424597:	or     BYTE PTR [ecx],bh
  424599:	or     BYTE PTR [edi+0xe],bl
  42459c:	retf   
  42459d:	fld    DWORD PTR [edx]
  42459f:	pop    ebx
  4245a0:	inc    eax
  4245a1:	les    esi,FWORD PTR [esi]
  4245a3:	ins    DWORD PTR es:[edi],dx
  4245a4:	repz test BYTE PTR [edi+0x47f1e3f7],ah
  4245ab:	call   0xeb6d519f
  4245b0:	fcom   QWORD PTR [edx]
  4245b2:	cmp    esp,DWORD PTR [edi+0x51]
  4245b5:	mov    ebp,0x31291f26
  4245ba:	mov    bl,BYTE PTR [esp+ecx*1-0x26]
  4245be:	pop    ds
  4245bf:	out    dx,eax
  4245c0:	ins    BYTE PTR es:[edi],dx
  4245c1:	xchg   esi,eax
  4245c2:	or     eax,0x76a3a9c1
  4245c7:	and    ax,0xb7b4
  4245cb:	jne    0x4245e7
  4245cd:	inc    edi
  4245ce:	in     eax,0x43
  4245d0:	(bad)  
  4245d1:	idiv   BYTE PTR [edi+0x1850843a]
  4245d7:	pop    es
  4245d8:	and    bl,ch
  4245da:	cdq    
  4245db:	jne    0x42461c
  4245dd:	and    eax,0x961a42f0
  4245e2:	adc    BYTE PTR [eax+0x19],0xad
  4245e6:	in     eax,0x33
  4245e8:	xor    BYTE PTR [ecx+0x35],dh
  4245eb:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4245ed:	das    
  4245ee:	pop    ss
  4245ef:	dec    esi
  4245f0:	sbb    cl,BYTE PTR [eax]
  4245f2:	xor    ebp,ebx
  4245f4:	lock mov fs:0xc5d99e7b,al
  4245fb:	pop    ebp
  4245fc:	mov    ebp,ebx
  4245fe:	adc    DWORD PTR [eax+0x58a21b17],esp
  424604:	push   ebp
  424605:	lds    ebx,FWORD PTR [edx-0x74]
  424608:	loop   0x424656
  42460a:	dec    eax
  42460b:	stos   DWORD PTR es:[edi],eax
  42460c:	nop
  42460d:	fsin   
  42460f:	jae    0x424598
  424611:	mov    ecx,0xb683054a
  424616:	jge    0x424687
  424618:	sbb    cl,BYTE PTR [ecx+0x14053000]
  42461e:	retf   0x5953
  424621:	xlat   BYTE PTR ds:[ebx]
  424622:	push   esi
  424623:	ins    BYTE PTR es:[edi],dx
  424624:	(bad)  
  424625:	push   cs
  424626:	daa    
  424627:	addr16 out 0x3f,al
  42462a:	pop    esp
  42462b:	cmp    al,0x1a
  42462d:	adc    cl,BYTE PTR [ebx+0x3700ef26]
  424633:	push   ebx
  424634:	vpunpckhwd xmm3,xmm4,xmm1
  424638:	call   0x4da0d014
  42463d:	jbe    0x4245c5
  42463f:	sub    edx,ebp
  424641:	out    dx,eax
  424642:	dec    eax
  424643:	mov    ebp,DWORD PTR [edi+0x61d23f75]
  424649:	(bad)  [edi]
  42464b:	dec    ebx
  42464c:	add    DWORD PTR [edi],ecx
  42464e:	push   ebp
  42464f:	repz adc DWORD PTR [ebx+0x63],0x534c17f9
  424657:	fidiv  WORD PTR [edx+0x12e78590]
  42465d:	push   0x6bfa5b5
  424662:	jo     0x4246ca
  424664:	in     eax,0x2b
  424666:	push   ecx
  424667:	dec    esi
  424668:	sbb    al,ah
  42466a:	retf   0x9a08
  42466d:	xchg   esi,eax
  42466e:	stc    
  42466f:	jle    0x42467b
  424671:	call   0x51320de2
  424676:	adc    bh,BYTE PTR [ebx+0x8]
  424679:	dec    edi
  42467a:	sub    BYTE PTR [esi+0x20963429],cl
  424680:	rcr    cl,1
  424682:	and    ebx,DWORD PTR [ebp-0x37]
  424685:	cmp    DWORD PTR [eax],edi
  424687:	lahf   
  424688:	dec    esp
  424689:	dec    eax
  42468a:	dec    ebx
  42468b:	jge    0x42463c
  42468d:	pusha  
  42468e:	fbld   TBYTE PTR [esi+0x36]
  424691:	neg    BYTE PTR [eax-0x4f]
  424694:	out    0x18,eax
  424696:	dec    eax
  424697:	dec    ebp
  424698:	stc    
  424699:	or     eax,DWORD PTR [edi+0x8]
  42469c:	mov    ebp,0xe84b10e2
  4246a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4246a2:	push   esp
  4246a3:	or     bl,BYTE PTR [edx+0xbf564b]
  4246a9:	pop    ebp
  4246aa:	push   cs
  4246ab:	add    eax,0xd247fccb
  4246b0:	gs js  0x424721
  4246b3:	mov    esp,0x744ec6bb
  4246b8:	mov    edx,0xca621bee
  4246bd:	lods   al,BYTE PTR ds:[esi]
  4246be:	out    dx,al
  4246bf:	mov    al,0x1b
  4246c1:	repnz xlat BYTE PTR ds:[ebx]
  4246c3:	aam    0x29
  4246c5:	outs   dx,BYTE PTR ds:[esi]
  4246c6:	pop    ss
  4246c7:	das    
  4246c8:	adc    dh,bh
  4246ca:	xchg   BYTE PTR [edi],bh
  4246cc:	and    cl,bl
  4246ce:	in     eax,0x5a
  4246d0:	sbb    DWORD PTR [ecx+0x13ccb632],0x11
  4246d7:	js     0x42472c
  4246d9:	jno    0x424731
  4246db:	clc    
  4246dc:	fnstcw WORD PTR [edx+0x2ae0c9a3]
  4246e2:	push   0x46
  4246e4:	xor    eax,0x1f6650c5
  4246e9:	imul   edx,DWORD PTR [eax],0x1b
  4246ec:	sbb    ch,BYTE PTR [ebx]
  4246ee:	xchg   edx,eax
  4246ef:	cmp    BYTE PTR [edi],dl
  4246f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246f2:	pusha  
  4246f3:	jae    0x42472d
  4246f5:	fsubr  QWORD PTR [ecx+0x3c772d3e]
  4246fb:	test   ch,dh
  4246fd:	jecxz  0x424713
  4246ff:	lock test DWORD PTR [eax+eiz*8-0x45],ecx
  424704:	push   esp
  424705:	je     0x4246ca
  424707:	ja     0x42473f
  424709:	mov    ds:0xc0c96699,al
  42470e:	jno    0x424759
  424710:	or     bl,bl
  424712:	mov    eax,ds:0xaed0b466
  424717:	cmp    bl,BYTE PTR [edx]
  424719:	fisubr WORD PTR [eax]
  42471b:	dec    esp
  42471c:	(bad)  
  42471d:	(bad)  [edi-0x7f181c23]
  424723:	mov    edx,esi
  424725:	mov    cl,0xab
  424727:	jbe    0x424781
  424729:	je     0x424753
  42472b:	bound  ebx,QWORD PTR [edx]
  42472d:	pushf  
  42472e:	xor    ebp,esp
  424730:	leave  
  424731:	retf   
  424732:	jne    0x4247a1
  424734:	pop    esp
  424735:	fiadd  WORD PTR [ebx-0x10]
  424738:	pop    edi
  424739:	jecxz  0x42472b
  42473b:	push   edx
  42473c:	sahf   
  42473d:	mov    bl,0x19
  42473f:	daa    
  424740:	sbb    dl,BYTE PTR [edi-0x63580d5]
  424746:	jecxz  0x4247bf
  424748:	push   cs
  424749:	fidivr DWORD PTR [eax+0x43b249ea]
  42474f:	stc    
  424750:	shl    BYTE PTR [ebx+0x66],cl
  424753:	inc    ebp
  424754:	es ja  0x42479f
  424757:	jle    0x42472a
  424759:	pop    esp
  42475a:	cdq    
  42475b:	dec    esp
  42475c:	mov    ebp,0xd466dfc5
  424761:	xchg   esp,eax
  424762:	cmp    edx,eax
  424764:	sbb    ah,ah
  424766:	mov    edi,0xa60d71ea
  42476b:	stos   DWORD PTR es:[edi],eax
  42476c:	adc    al,0x4a
  42476e:	push   ecx
  42476f:	xchg   ebp,eax
  424770:	(bad)  
  424771:	mov    ds:0x884f669c,eax
  424776:	pop    edx
  424777:	cdq    
  424778:	cdq    
  424779:	retf   0x97f2
  42477c:	push   esp
  42477d:	inc    esi
  42477e:	dec    eax
  42477f:	mov    ds:0x9a9a4a1,eax
  424784:	dec    esp
  424785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424786:	dec    edi
  424787:	data16 adc BYTE PTR [ebp+ebp*8-0x7e6e551b],ch
  42478f:	add    eax,0x3e48d6ff
  424794:	push   es
  424795:	adc    ch,BYTE PTR [esi-0x24]
  424798:	mov    WORD PTR [edi*4-0x2c62ea9a],?
  42479f:	cmp    DWORD PTR [edx],ebx
  4247a1:	int3   
  4247a2:	jg     0x42476a
  4247a4:	pop    ds
  4247a5:	test   DWORD PTR [ebx+edi*8],0x2dacd922
  4247ac:	mov    ah,0xf4
  4247ae:	int3   
  4247af:	jl     0x424777
  4247b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b2:	push   es
  4247b3:	js     0x4247d2
  4247b5:	push   ebp
  4247b6:	les    ebx,FWORD PTR [eax]
  4247b8:	mov    dh,0x2f
  4247ba:	retf   
  4247bb:	mov    eax,DWORD PTR [edx+ecx*2-0x3e]
  4247bf:	push   cs
  4247c0:	ror    DWORD PTR [edi],0x62
  4247c3:	pop    bp
  4247c5:	mov    fs,ebx
  4247c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247c8:	sbb    al,BYTE PTR [esi-0x67]
  4247cb:	fistp  DWORD PTR [eax+edx*8-0x26600140]
  4247d2:	adc    al,0xb6
  4247d4:	add    eax,0xfdcf3bc4
  4247d9:	sbb    esi,DWORD PTR [esi]
  4247db:	scas   al,BYTE PTR es:[edi]
  4247dc:	push   esi
  4247dd:	cmp    edx,eax
  4247df:	aaa    
  4247e0:	mov    DWORD PTR [eax+eiz*2],ebp
  4247e3:	out    0x9,al
  4247e5:	sbb    cl,BYTE PTR [ebx+ecx*1-0x64]
  4247e9:	pushf  
  4247ea:	xor    DWORD PTR [edi+0x74],esp
  4247ed:	(bad)  
  4247ee:	lods   eax,DWORD PTR ds:[esi]
  4247ef:	and    al,0x1a
  4247f1:	sbb    esi,DWORD PTR [esi-0x2685fbde]
  4247f7:	and    eax,0x5dee89e
  4247fc:	jmp    0x424854
  4247fe:	pop    esp
  4247ff:	xchg   ch,cl
  424801:	and    eax,0x601a6208
  424806:	sbb    al,0x48
  424808:	push   ecx
  424809:	(bad)  [edx+0x4f757c7]
  42480f:	cmc    
  424810:	sbb    eax,0x3ebddb19
  424815:	push   0xffffffb1
  424817:	xor    eax,0x8783ff1a
  42481c:	(bad)  
  42481d:	int    0xb3
  42481f:	pop    esp
  424820:	push   edi
  424821:	fstp   DWORD PTR [ebx+0x1d]
  424824:	mov    ecx,0xb3536318
  424829:	imul   edx,DWORD PTR [ecx],0x1
  42482c:	mov    dh,0xac
  42482e:	dec    eax
  42482f:	in     al,0xdb
  424831:	jl     0x4247c7
  424833:	inc    ebp
  424834:	add    al,0x41
  424836:	dec    edx
  424837:	sahf   
  424838:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424839:	repz inc edi
  42483b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42483c:	shl    BYTE PTR [edx],1
  42483e:	add    eax,0x482f4eba
  424843:	xor    al,0x31
  424845:	sub    BYTE PTR [eax],0xf3
  424848:	out    dx,al
  424849:	fsub   DWORD PTR [edi-0x233ea9a]
  42484f:	dec    esp
  424850:	sbb    al,BYTE PTR [edx-0x7e]
  424853:	jo     0x4248bf
  424855:	push   esp
  424856:	pop    ebx
  424857:	sub    ecx,DWORD PTR [edi]
  424859:	fcmove st,st(3)
  42485b:	inc    esi
  42485c:	shl    BYTE PTR [ecx+esi*1],cl
  42485f:	or     ebx,edx
  424861:	mov    bl,BYTE PTR [ecx+ecx*2]
  424864:	iret   
  424865:	call   0x3139:0x15e50449
  42486c:	repnz sub ebp,DWORD PTR [ecx+0x2]
  424870:	xor    al,0x89
  424872:	inc    eax
  424873:	mov    eax,ds:0xeb48cc02
  424878:	and    dl,BYTE PTR [edx-0x22654fd7]
  42487e:	xchg   ebp,eax
  42487f:	out    dx,eax
  424880:	test   cl,bl
  424882:	dec    esi
  424883:	imul   edi,DWORD PTR [edx-0x72420898],0xffffffc5
  42488a:	aaa    
  42488b:	sbb    eax,0xffc5be1a
  424890:	adc    BYTE PTR fs:[edi],0xe4
  424894:	sub    cl,bl
  424896:	jo     0x424881
  424898:	retf   
  424899:	mov    ebp,0xc801085
  42489e:	mov    cl,0x1e
  4248a0:	xchg   esp,eax
  4248a1:	and    al,0x48
  4248a3:	jns    0x42484c
  4248a5:	ins    DWORD PTR es:[edi],dx
  4248a6:	adc    bh,ah
  4248a8:	mov    dh,0x3b
  4248aa:	in     eax,dx
  4248ab:	retf   
  4248ac:	cmp    dh,BYTE PTR [ecx+0x691ae698]
  4248b2:	(bad)  
  4248b3:	cld    
  4248b4:	mov    eax,0x1fabaa42
  4248b9:	fcomi  st,st(6)
  4248bb:	les    edi,FWORD PTR [ebp-0x56064bf]
  4248c1:	inc    ebp
  4248c2:	test   eax,0x7c231af7
  4248c7:	sbb    al,BYTE PTR [esi]
  4248c9:	mov    bh,0xd8
  4248cb:	xchg   ebp,eax
  4248cc:	cwde   
  4248cd:	(bad)  
  4248cf:	jmp    edx
  4248d1:	adc    al,0xce
  4248d3:	(bad)  
  4248d4:	cmp    cl,dh
  4248d6:	pop    ds
  4248d7:	xor    eax,0x4849941f
  4248dc:	and    DWORD PTR [ebp+ebp*2+0x3be7424b],esp
  4248e3:	push   edx
  4248e4:	mov    fs,WORD PTR ds:0x9ed19b62
  4248ea:	fwait
  4248eb:	addr16 adc dl,dl
  4248ee:	pop    esi
  4248ef:	in     eax,0x1a
  4248f1:	inc    ebx
  4248f2:	mov    bl,0x1d
  4248f4:	ja     0x424972
  4248f6:	retf   0x8bef
  4248f9:	fst    DWORD PTR [ecx-0x63]
  4248fc:	pusha  
  4248fd:	(bad)  
  4248fe:	jns    0x424907
  424900:	push   edi
  424901:	or     ebx,esi
  424903:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424904:	sbb    dl,BYTE PTR [esi+edi*1]
  424907:	outs   dx,BYTE PTR ds:[esi]
  424908:	fdiv   st(2),st
  42490a:	jne    0x4248d1
  42490c:	fucomip st,st(0)
  42490e:	and    ebx,DWORD PTR [ecx+0x62624771]
  424914:	out    dx,al
  424915:	or     DWORD PTR [eax-0xa2de54a],0xfb925722
  42491f:	add    ch,cl
  424921:	fimul  DWORD PTR [edx+0x3791c9d6]
  424927:	pop    edi
  424928:	cdq    
  424929:	stc    
  42492a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42492b:	lods   eax,DWORD PTR ds:[esi]
  42492c:	sbb    al,BYTE PTR [edi-0x4392f35d]
  424932:	or     BYTE PTR [ebx+edi*2],dh
  424935:	fnstenv [edx-0x731ddf5b]
  42493b:	dec    esp
  42493c:	lods   al,BYTE PTR ds:[esi]
  42493d:	xor    DWORD PTR [edx],ecx
  42493f:	mov    ecx,0x4ec4fb1a
  424944:	mov    cl,cl
  424946:	mov    eax,ds:0x5c1743b3
  42494b:	push   esp
  42494c:	sbb    ch,BYTE PTR [eax]
  42494e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42494f:	and    ebx,DWORD PTR [ebp+0x6]
  424952:	and    edi,DWORD PTR [ecx+0x37]
  424955:	jnp    0x42490e
  424957:	xor    DWORD PTR [edx+0x7e],ebx
  42495a:	jp     0x424936
  42495c:	push   edi
  42495d:	adc    BYTE PTR [ecx+0x61],cl
  424960:	dec    eax
  424961:	push   esp
  424962:	aas    
  424963:	addr16 push edx
  424965:	nop
  424966:	mov    eax,cs
  424968:	sbb    cl,BYTE PTR [edx+0x7dfb4387]
  42496e:	xor    eax,eax
  424970:	pushf  
  424971:	fstp   TBYTE PTR [ecx-0x2306a149]
  424977:	pusha  
  424978:	fwait
  424979:	mov    BYTE PTR [edi-0x674ba721],ah
  42497f:	in     eax,dx
  424980:	cld    
  424981:	test   al,0x38
  424983:	daa    
  424984:	sbb    dh,dh
  424986:	mov    esi,0xfa734a3
  42498b:	sbb    cl,al
  42498d:	adc    esi,DWORD PTR [ebx-0xa]
  424990:	sbb    ah,BYTE PTR [eax+edx*1-0x19853afa]
  424997:	je     0x4249b3
  424999:	retf   
  42499a:	inc    ebx
  42499b:	out    0x4a,al
  42499d:	mov    cl,0xe5
  42499f:	icebp  
  4249a0:	xchg   ebp,eax
  4249a1:	in     al,dx
  4249a2:	mov    ds:0x4ada3076,al
  4249a7:	mov    esp,0x2fa1078d
  4249ac:	repz rcl DWORD PTR [edx+0x3e],0xe7
  4249b1:	add    al,0x4b
  4249b3:	aad    0x36
  4249b5:	test   eax,0xd9f1cc5c
  4249ba:	mov    ds:0x9660ee3b,eax
  4249bf:	(bad)  
  4249c0:	cmp    bh,BYTE PTR [ebp+0x5bc7ab55]
  4249c6:	push   esp
  4249c7:	pop    es
  4249c8:	cmp    eax,0xb1b8be4d
  4249cd:	sub    bl,dh
  4249cf:	data16 cmp al,0x20
  4249d2:	mov    ebp,0x8b121a7b
  4249d7:	call   0x4b52:0x8e4b22d5
  4249de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249df:	(bad)  
  4249e0:	int    0x48
  4249e2:	imul   esp,DWORD PTR [esi-0x56],0xfffffff6
  4249e6:	mov    ch,0xaa
  4249e8:	pop    eax
  4249e9:	xchg   DWORD PTR [edi],edi
  4249eb:	inc    edx
  4249ec:	mov    ?,WORD PTR [edi-0x1]
  4249ef:	cmc    
  4249f0:	push   ecx
  4249f1:	clc    
  4249f2:	test   al,0x66
  4249f4:	push   ds
  4249f5:	out    0xab,eax
  4249f7:	xchg   ebx,eax
  4249f8:	pop    eax
  4249f9:	mov    dl,0x57
  4249fb:	jbe    0x4249ea
  4249fd:	enter  0xbe2b,0x1f
  424a01:	out    0xf7,eax
  424a03:	xlat   BYTE PTR ds:[ebx]
  424a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a05:	or     al,0x4b
  424a07:	sbb    eax,0x839189fc
  424a0c:	push   eax
  424a0d:	fst    DWORD PTR [edi+esi*1]
  424a10:	xchg   edi,eax
  424a11:	clc    
  424a12:	iret   
  424a13:	test   BYTE PTR [eax+0x31],ah
  424a16:	inc    edx
  424a17:	fdivp  st(0),st
  424a19:	push   cs
  424a1a:	dec    edi
  424a1b:	and    BYTE PTR [ecx-0x67],bh
  424a1e:	jo     0x4249d3
  424a20:	sub    DWORD PTR [edx+0x5f8b49c0],0x3c
  424a27:	push   0x47
  424a29:	(bad)  
  424a2a:	jae    0x424a73
  424a2c:	cli    
  424a2d:	or     ax,bp
  424a30:	sbb    bl,BYTE PTR [ebp+ecx*1-0x23]
  424a34:	pop    esp
  424a35:	in     al,dx
  424a36:	inc    esi
  424a37:	inc    esp
  424a38:	sbb    ecx,0x3377689c
  424a3e:	xchg   ecx,eax
  424a40:	or     BYTE PTR [edi-0x31],bl
  424a43:	ret    0xa491
  424a46:	dec    eax
  424a47:	stos   BYTE PTR es:[edi],al
  424a48:	lock mov edx,0xf198d192
  424a4e:	loop   0x424a2e
  424a50:	or     ch,dh
  424a52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a53:	sbb    BYTE PTR [ebx],0xf0
  424a56:	push   ebx
  424a57:	lods   eax,DWORD PTR ds:[esi]
  424a58:	jae    0x424a49
  424a5a:	cs ins BYTE PTR es:[edi],dx
  424a5c:	or     cl,ch
  424a5e:	adc    BYTE PTR [eax+0x672dbf9b],cl
  424a64:	mov    DWORD PTR [edx],ebx
  424a66:	adc    ecx,ebx
  424a68:	ds dec edx
  424a6a:	add    al,0x42
  424a6c:	aaa    
  424a6d:	push   ecx
  424a6e:	xchg   DWORD PTR [edx-0x10f78c7a],edx
  424a74:	loop   0x424a5e
  424a76:	jmp    0x4f2e:0x2e0a701a
  424a7d:	pusha  
  424a7e:	dec    eax
  424a7f:	push   ss
  424a80:	sbb    al,bh
  424a82:	es cmp eax,0x2aed3a18
  424a88:	in     eax,0xd9
  424a8a:	dec    ebx
  424a8b:	xchg   esi,eax
  424a8c:	xchg   ecx,eax
  424a8d:	arpl   di,bx
  424a8f:	(bad)  
  424a90:	xor    eax,eax
  424a92:	addr16 xchg edx,eax
  424a94:	pop    es
  424a95:	cmc    
  424a96:	dec    esi
  424a97:	ins    DWORD PTR es:[edi],dx
  424a98:	mov    edx,0xa6080019
  424a9d:	fld    DWORD PTR [eax-0x57]
  424aa0:	mov    ds:0x5883e15d,al
  424aa5:	es push ds
  424aa7:	(bad)  
  424aa9:	and    eax,0x1dfb8d48
  424aae:	jg     0x424a7b
  424ab0:	xor    eax,0x9b66b29a
  424ab5:	jno    0x424b06
  424ab7:	push   cs
  424ab8:	sbb    cl,ah
  424aba:	dec    ebx
  424abb:	loope  0x424aa1
  424abd:	fld    TBYTE PTR [eax-0x692623bd]
  424ac3:	add    eax,0xed6b9d8b
  424ac8:	inc    esp
  424ac9:	pop    edx
  424aca:	xchg   DWORD PTR [esi+0x36],ebx
  424acd:	mov    dl,0x48
  424acf:	pop    edi
  424ad0:	stos   DWORD PTR es:[edi],eax
  424ad1:	xchg   BYTE PTR [eax-0x5892cb63],al
  424ad7:	and    ecx,0x2a
  424ada:	stos   BYTE PTR es:[edi],al
  424adb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424adc:	or     DWORD PTR [eax-0x590def75],ecx
  424ae2:	dec    eax
  424ae3:	add    al,0xf
  424ae5:	inc    edi
  424ae6:	jb     0x424b65
  424ae8:	sbb    al,0x1d
  424aea:	outs   dx,BYTE PTR ds:[esi]
  424aeb:	mov    al,ds:0x32d3b354
  424af0:	jp     0x424b68
  424af2:	push   esi
  424af3:	jae    0x424a8c
  424af5:	call   0x4948:0xb86dbd12
  424afc:	dec    ebp
  424afd:	mov    cs,edx
  424aff:	test   DWORD PTR [ecx-0xd],0x468d670f
  424b06:	jmp    0xfe26:0xe6c5905
  424b0d:	sar    edi,1
  424b0f:	fcomp  QWORD PTR [edx]
  424b11:	cdq    
  424b12:	sub    dh,BYTE PTR [ecx]
  424b14:	test   eax,0x5d5c1ca8
  424b19:	fadd   QWORD PTR [eax-0x5d]
  424b1c:	jne    0x424b24
  424b1e:	outs   dx,DWORD PTR ds:[esi]
  424b1f:	push   0xffffffc2
  424b21:	repz push esp
  424b23:	push   ds
  424b24:	sbb    ch,BYTE PTR [edx]
  424b26:	js     0x424b4d
  424b28:	ins    DWORD PTR es:[edi],dx
  424b29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b2a:	add    eax,0x19715912
  424b2f:	ret    
  424b30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b31:	rcr    DWORD PTR [eax],0x67
  424b34:	cwde   
  424b35:	cmp    edi,esp
  424b37:	sbb    ebx,DWORD PTR [edx]
  424b39:	xor    al,0xb6
  424b3b:	pop    esi
  424b3c:	push   esi
  424b3d:	jbe    0x424b02
  424b3f:	mov    ch,0x34
  424b41:	fist   DWORD PTR [esp+ebp*8-0x72]
  424b45:	mov    esp,0x405a3f57
  424b4a:	push   esp
  424b4b:	push   esi
  424b4c:	cmp    DWORD PTR [edx],esp
  424b4e:	mov    dh,0x1a
  424b50:	call   0xacd4:0xa728de13
  424b57:	pop    ecx
  424b58:	cwde   
  424b59:	clc    
  424b5a:	repz imul esp,DWORD PTR [ebx+edx*4-0x404f86b6],0xea13e810
  424b66:	inc    edi
  424b67:	or     eax,0xef7d61e2
  424b6c:	bound  ecx,QWORD PTR [edi+0x48ef6747]
  424b72:	sub    BYTE PTR [ecx],al
  424b74:	sbb    eax,DWORD PTR [edx]
  424b76:	imul   esi,eax,0xac4fee57
  424b7c:	adc    al,BYTE PTR [eax]
  424b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424b7f:	test   BYTE PTR [ecx],dl
  424b81:	xor    ch,al
  424b83:	ins    DWORD PTR es:[edi],dx
  424b84:	retf   
  424b85:	fucompp 
  424b87:	xchg   ebx,eax
  424b88:	cdq    
  424b89:	cmp    DWORD PTR [ebx],eax
  424b8b:	stos   DWORD PTR es:[edi],eax
  424b8c:	sbb    dh,BYTE PTR [ecx]
  424b8e:	jmp    0x424b4a
  424b90:	(bad)  
  424b91:	cmc    
  424b92:	lds    esp,FWORD PTR [eax+0x40ddda05]
  424b98:	es xchg ebp,eax
  424b9a:	sbb    BYTE PTR [eax],0x24
  424b9d:	push   eax
  424b9e:	adc    al,0x15
  424ba0:	and    esi,esi
  424ba2:	cmp    ebx,DWORD PTR [esi-0x2f]
  424ba5:	lock lock xchg edx,eax
  424ba8:	jmp    0x81ddb3b1
  424bad:	loopne 0x424b7b
  424baf:	data16 jno 0x424bd5
  424bb2:	loopne 0x424bc6
  424bb4:	sbb    cl,BYTE PTR [ecx]
  424bb6:	sahf   
  424bb7:	retf   0x312e
  424bba:	and    al,0x6b
  424bbc:	push   esp
  424bbd:	cmc    
  424bbe:	jl     0x424b5f
  424bc0:	(bad)  
  424bc1:	sbb    DWORD PTR [ecx+ecx*2+0x3c],edx
  424bc5:	scas   al,BYTE PTR es:[edi]
  424bc6:	jbe    0x424be4
  424bc8:	sbb    eax,0xf80052e2
  424bcd:	mov    ebx,0x3fc61ada
  424bd2:	outs   dx,DWORD PTR ds:[esi]
  424bd3:	dec    BYTE PTR [ebp-0x2f]
  424bd6:	jecxz  0x424c41
  424bd8:	push   cs
  424bd9:	jg     0x424bfb
  424bdb:	ret    
  424bdc:	sub    eax,0x462af039
  424be1:	add    BYTE PTR [eax],bh
  424be3:	(bad)  
  424be4:	sbb    cl,BYTE PTR [esp+edx*4+0x3d]
  424be8:	adc    eax,DWORD PTR [ecx-0x4]
  424beb:	push   ecx
  424bec:	sbb    bh,bl
  424bee:	dec    ebp
  424bef:	addr16 push 0x95aa1e7f
  424bf5:	mov    cl,0x2e
  424bf7:	pop    ebx
  424bf8:	sbb    DWORD PTR [esi+0x48],0xffffff9a
  424bfc:	pop    ss
  424bfd:	loopne 0x424c1d
  424bff:	in     al,0xca
  424c01:	loopne 0x424c60
  424c03:	ror    WORD PTR [eax+ebx*2+0x2],0x2e
  424c09:	jecxz  0x424c66
  424c0b:	rcl    DWORD PTR [edx],0xdd
  424c0e:	xor    DWORD PTR [edx-0x5],ebx
  424c11:	ds xor esp,edx
  424c14:	jge    0x424bfe
  424c16:	loopne 0x424c27
  424c18:	xchg   esp,eax
  424c19:	loopne 0x424c52
  424c1b:	cmp    ecx,DWORD PTR [edi+0x2219e37b]
  424c21:	jmp    0xda5c8322
  424c26:	sbb    ebp,edi
  424c28:	call   0x26d9:0x72dd66dd
  424c2f:	ret    
  424c30:	add    al,0xc0
  424c32:	add    BYTE PTR [ecx-0x3a671b52],bl
  424c38:	lods   al,BYTE PTR ds:[esi]
  424c39:	sub    DWORD PTR [eax-0x63],ecx
  424c3c:	xor    al,0xb2
  424c3e:	xor    BYTE PTR [ebp*8-0x5098b9d1],ah
  424c45:	in     eax,0xde
  424c47:	push   edx
  424c48:	sbb    bl,BYTE PTR [esi+esi*8+0x10]
  424c4c:	add    bh,bh
  424c4e:	ret    
  424c4f:	pop    eax
  424c50:	cdq    
  424c51:	fstp   DWORD PTR [eax-0x66]
  424c54:	dec    esp
  424c55:	jecxz  0x424c2e
  424c57:	xchg   ecx,eax
  424c58:	hlt    
  424c59:	sub    ebp,DWORD PTR [edi+edi*2]
  424c5c:	and    DWORD PTR [esp+edi*1-0x45],ecx
  424c60:	xchg   ebp,eax
  424c61:	je     0x424c45
  424c63:	(bad)
  424c67:	test   eax,ecx
  424c69:	fstp   DWORD PTR [edi+0x65a7e554]
  424c6f:	xchg   BYTE PTR [esi+0x16734926],al
  424c75:	xchg   esi,eax
  424c76:	jbe    0x424cb2
  424c78:	ret    
  424c79:	les    ecx,FWORD PTR [eax-0x69]
  424c7c:	dec    eax
  424c7d:	dec    edx
  424c7e:	arpl   WORD PTR [ebx+0x3f],bx
  424c81:	sub    al,0xd5
  424c83:	jne    0x424c1f
  424c85:	push   esp
  424c86:	inc    edx
  424c87:	jbe    0x424c21
  424c89:	retf   
  424c8a:	jge    0x424c2d
  424c8c:	fwait
  424c8d:	xor    DWORD PTR [eax-0x54],ecx
  424c90:	sbb    eax,0xe425f72e
  424c95:	mov    ds:0x45c366ac,al
  424c9a:	std    
  424c9b:	ins    BYTE PTR es:[edi],dx
  424c9c:	sbb    ebx,DWORD PTR [ebp+0x747336b8]
  424ca2:	sub    edx,DWORD PTR ds:0xa64262e2
  424ca8:	(bad)  
  424ca9:	inc    ebx
  424caa:	dec    esp
  424cab:	push   0x236d2962
  424cb0:	shl    BYTE PTR [esi],1
  424cb2:	test   al,0x63
  424cb4:	sbb    al,BYTE PTR [edx+eax*8]
  424cb7:	dec    edx
  424cb8:	les    ebp,FWORD PTR [esi]
  424cba:	test   eax,0x1ed3b9a5
  424cbf:	jno    0x424cf4
  424cc1:	(bad)  
  424cc3:	dec    esi
  424cc4:	xor    DWORD PTR [eax-0x70],esp
  424cc7:	dec    ebp
  424cc8:	pop    eax
  424cc9:	scas   al,BYTE PTR es:[edi]
  424cca:	cli    
  424ccb:	xchg   ebp,eax
  424ccc:	push   esp
  424ccd:	mov    esi,0x2ab5e5c4
  424cd2:	push   cs
  424cd3:	addr16 cli 
  424cd5:	bound  ecx,QWORD PTR [edi]
  424cd7:	push   esi
  424cd8:	in     eax,0x30
  424cda:	out    dx,eax
  424cdb:	data16 data16 mov ah,BYTE PTR [esi+ebp*4]
  424ce0:	sbb    bl,BYTE PTR [edx-0x2e]
  424ce3:	inc    edi
  424ce4:	inc    ebp
  424ce5:	jle    0x424cb7
  424ce7:	sbb    eax,0x3dfdd9ec
  424cec:	loop   0x424cfa
  424cee:	clc    
  424cef:	cmc    
  424cf0:	push   ss
  424cf1:	lods   eax,DWORD PTR ds:[esi]
  424cf2:	stos   DWORD PTR es:[edi],eax
  424cf3:	and    DWORD PTR [edi+0x7d],ebx
  424cf6:	push   esi
  424cf7:	fmulp  st(5),st
  424cf9:	pop    ecx
  424cfa:	mov    DWORD PTR [edi-0x6],ecx
  424cfd:	or     eax,DWORD PTR [esp+edi*4]
  424d00:	cmp    al,0x47
  424d02:	je     0x424d6a
  424d04:	jge    0x424d18
  424d06:	inc    edi
  424d07:	or     DWORD PTR ds:0xacecaab6,ebx
  424d0d:	daa    
  424d0e:	pop    ebp
  424d0f:	dec    ebp
  424d10:	bound  ebx,QWORD PTR [ecx+0x3b]
  424d13:	daa    
  424d14:	cld    
  424d15:	dec    esp
  424d16:	lds    esp,FWORD PTR [esi+0x30]
  424d19:	(bad)  
  424d1a:	fisttp QWORD PTR [ecx-0x4fa330e6]
  424d20:	das    
  424d21:	repz cs push edx
  424d24:	or     DWORD PTR [esi-0x7b],ecx
  424d27:	mov    ebp,0x66dcc1ac
  424d2c:	mov    DWORD PTR [ebp-0x43],eax
  424d2f:	in     al,dx
  424d30:	inc    eax
  424d31:	popf   
  424d32:	neg    DWORD PTR gs:[edx]
  424d35:	int    0xed
  424d37:	sti    
  424d38:	push   ds
  424d39:	fwait
  424d3a:	sbb    edi,DWORD PTR [ebx+0x66a3e6d8]
  424d40:	popf   
  424d41:	mov    cl,0x95
  424d43:	cli    
  424d44:	cmp    BYTE PTR [ecx-0x6c],ah
  424d47:	sahf   
  424d48:	sbb    al,BYTE PTR [ebp-0x22]
  424d4b:	fbstp  TBYTE PTR [eax-0x35]
  424d4e:	test   BYTE PTR ds:0xa2b20a30,dh
  424d54:	int    0x9
  424d56:	enter  0x41ab,0x9a
  424d5a:	pop    ebp
  424d5b:	shr    BYTE PTR [ecx+ebp*2+0x6b090d48],0xf9
  424d63:	or     BYTE PTR ds:0x4f66be79,dl
  424d69:	dec    esi
  424d6a:	in     eax,dx
  424d6b:	jge    0x424d87
  424d6d:	cmc    
  424d6e:	nop
  424d6f:	mov    al,dh
  424d71:	cmp    eax,0xd9ea5ab5
  424d76:	popf   
  424d77:	imul   ecx,DWORD PTR [ebp+0x29],0xfffffffd
  424d7b:	push   ss
  424d7c:	add    eax,0xcbd72c32
  424d81:	or     cl,BYTE PTR [eax-0x71]
  424d84:	xchg   BYTE PTR [edi],cl
  424d86:	(bad)  
  424d87:	lods   al,BYTE PTR ds:[esi]
  424d88:	cmp    DWORD PTR [eax+ebx*8+0x66],ecx
  424d8c:	je     0x424dde
  424d8e:	pop    ss
  424d8f:	and    al,0x29
  424d91:	cmp    BYTE PTR [edi-0x18],cl
  424d94:	imul   ebx,DWORD PTR [ecx+0x34a0b4ec],0x76718c62
  424d9e:	dec    esp
  424d9f:	mov    dh,0x4b
  424da1:	fisttp WORD PTR [edi]
  424da3:	push   0x7e
  424da5:	pushf  
  424da6:	mov    ebp,0xf29c9d18
  424dab:	xor    dl,bh
  424dad:	mov    ds:0xbe1acf25,al
  424db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424db3:	jmp    0xb6f890db
  424db8:	xchg   esi,eax
  424db9:	test   BYTE PTR [ebp+0x1959cf11],0xf4
  424dc0:	inc    ebp
  424dc1:	int    0x70
  424dc3:	sub    al,0x1a
  424dc5:	add    eax,0xd5bb1435
  424dca:	shl    BYTE PTR [edx],cl
  424dcc:	add    al,0xda
  424dce:	(bad)  
  424dcf:	sub    eax,0x3cb5f7d0
  424dd4:	add    BYTE PTR [ebx],bh
  424dd6:	aad    0xe6
  424dd8:	rcl    DWORD PTR [edx],0x48
  424ddb:	mov    ebp,0x9b36524a
  424de0:	out    0xd0,eax
  424de2:	shl    DWORD PTR [esi+0x54],cl
  424de5:	(bad)  
  424de6:	cmp    DWORD PTR [edx+ebx*1],edx
  424de9:	cdq    
  424dea:	inc    ebx
  424deb:	xchg   BYTE PTR [esi-0x4a6d4470],ah
  424df1:	fnstcw WORD PTR [edx]
  424df3:	sub    cl,bl
  424df5:	mov    esp,0xb5b203a
  424dfa:	out    dx,al
  424dfb:	leave  
  424dfc:	sbb    al,BYTE PTR [eax-0x11421920]
  424e02:	jnp    0x424d96
  424e04:	sbb    al,0xd9
  424e06:	outs   dx,BYTE PTR ds:[esi]
  424e07:	pop    eax
  424e08:	push   ss
  424e09:	jbe    0x424e05
  424e0b:	xor    eax,edi
  424e0d:	xchg   ebx,eax
  424e0f:	fstp   DWORD PTR [edi+0x697c480a]
  424e15:	dec    edi
  424e16:	std    
  424e17:	outs   dx,BYTE PTR ds:[esi]
  424e18:	jbe    0x424e1f
  424e1a:	mov    al,ds:0x6430c36d
  424e1f:	pop    ecx
  424e20:	push   ss
  424e21:	popa   
  424e22:	arpl   WORD PTR [esi+0x1a],si
  424e25:	scas   eax,DWORD PTR es:[edi]
  424e26:	ret    0x85ba
  424e29:	cmp    BYTE PTR ds:[edx],al
  424e2c:	int3   
  424e2d:	(bad)  [edx]
  424e2f:	jg     0x424e8f
  424e31:	(bad)  
  424e32:	ins    DWORD PTR es:[edi],dx
  424e33:	adc    eax,0xaf6ac247
  424e38:	dec    ecx
  424e39:	sbb    al,0x48
  424e3b:	or     bh,BYTE PTR [edi-0x5e2816d8]
  424e41:	push   0x9e6b6b4d
  424e46:	and    DWORD PTR [ecx-0x18be4274],ebx
  424e4c:	sbb    dl,BYTE PTR ds:0xc84846d
  424e52:	(bad)  
  424e53:	lahf   
  424e54:	enter  0x1b05,0xb9
  424e58:	fcompp 
  424e5a:	cwde   
  424e5b:	outs   dx,BYTE PTR ds:[esi]
  424e5c:	out    dx,al
  424e5d:	lea    edx,[esi+0x56]
  424e60:	sbb    cl,BYTE PTR [edi]
  424e62:	add    DWORD PTR [edi-0x439b1a4d],ecx
  424e68:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424e69:	fst    DWORD PTR [edi]
  424e6b:	push   es
  424e6c:	dec    edi
  424e6d:	mov    ah,0xff
  424e6f:	iret   
  424e70:	and    DWORD PTR [ecx],esp
  424e72:	adc    edi,DWORD PTR cs:[edx-0x4eb4b816]
  424e79:	xor    DWORD PTR [esi-0x453d8c8e],ebx
  424e7f:	je     0x424e1a
  424e81:	pop    esp
  424e82:	jmp    0x424e66
  424e84:	push   0x24
  424e86:	push   es
  424e87:	add    BYTE PTR [ecx+0xc],ch
  424e8a:	fsubr  DWORD PTR [eax]
  424e8c:	sbb    ch,BYTE PTR [eax+0x3a]
  424e8f:	gs mov eax,0x28c72aab
  424e95:	cmc    
  424e96:	sbb    al,0x39
  424e99:	cdq    
  424e9a:	fdivr  DWORD PTR [esi+0xea4ed6b]
  424ea0:	sbb    dl,ah
  424ea2:	sbb    ecx,DWORD PTR [eax-0x4dad804b]
  424ea8:	or     al,0xdf
  424eaa:	out    0x79,eax
  424eac:	jne    0x424f04
  424eae:	sbb    cl,BYTE PTR [ebx]
  424eb0:	push   edi
  424eb1:	stc    
  424eb2:	outs   dx,DWORD PTR ds:[esi]
  424eb3:	sbb    cl,BYTE PTR es:[ecx+0x3f0bffc3]
  424eba:	jl     0x424f1f
  424ebc:	and    eax,0x1d879ee5
  424ec1:	clc    
  424ec2:	inc    eax
  424ec3:	mov    dl,0x1a
  424ec5:	lds    esp,FWORD PTR [edx-0x1b]
  424ec8:	mov    ds:0x6f04f8f1,eax
  424ecd:	fldenv [ebp+0x7c847c8e]
  424ed3:	sbb    ebx,DWORD PTR cs:[esi+0x3c]
  424ed7:	ret    0x701d
  424eda:	outs   dx,BYTE PTR ds:[esi]
  424edb:	js     0x424f25
  424edd:	add    eax,0x35564348
  424ee2:	sub    al,0x25
  424ee4:	sbb    dh,BYTE PTR [edi]
  424ee6:	shl    DWORD PTR [ecx+0x72],cl
  424ee9:	in     al,dx
  424eea:	mov    al,ds:0xd0a41c98
  424eef:	ret    
  424ef0:	ret    
  424ef1:	mov    al,ds:0x3bf9e124
  424ef6:	xchg   esp,eax
  424ef7:	mov    DWORD PTR [ebp-0x27],0xe76092b
  424efe:	mov    ah,0xab
  424f00:	pop    ebx
  424f01:	jo     0x424f5a
  424f03:	sbb    dh,BYTE PTR [edi+0x49]
  424f06:	dec    eax
  424f07:	and    DWORD PTR [edx+0x7f],ecx
  424f0a:	lahf   
  424f0b:	lahf   
  424f0c:	in     al,0x4a
  424f0e:	jne    0x424f76
  424f10:	jae    0x424eef
  424f12:	cmp    BYTE PTR [ecx],ch
  424f14:	and    DWORD PTR [ebx+ecx*8],ebp
  424f17:	fisubr WORD PTR [edi]
  424f19:	fcmove st,st(4)
  424f1b:	xor    eax,0x76b86905
  424f20:	mov    cl,0x9b
  424f22:	cmp    ah,BYTE PTR [edi-0x3b]
  424f25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f26:	aam    0x1c
  424f28:	sbb    bh,al
  424f2a:	clc    
  424f2b:	jae    0x424f93
  424f2d:	jns    0x424f36
  424f2f:	dec    edi
  424f30:	mov    dl,0x4d
  424f32:	(bad)  
  424f33:	cwde   
  424f34:	push   esp
  424f35:	mov    edi,edi
  424f37:	mov    al,0x1a
  424f39:	mov    eax,ds:0xb47dc382
  424f3e:	icebp  
  424f3f:	inc    edi
  424f40:	xor    ebx,edx
  424f42:	leave  
  424f43:	test   eax,0xfbef4b41
  424f48:	jl     0x424eff
  424f4a:	imul   ebx,DWORD PTR [edx]
  424f4d:	call   0x12a5:0x74832b3b
  424f54:	jnp    0x424f19
  424f56:	jbe    0x424f3b
  424f58:	fist   WORD PTR [esi+0x15d6669a]
  424f5e:	rcr    DWORD PTR [ecx],1
  424f60:	sbb    cl,al
  424f62:	dec    edi
  424f63:	cmp    BYTE PTR [edx-0x1],ch
  424f66:	mov    esp,0x44d9413e
  424f6b:	scas   eax,DWORD PTR es:[edi]
  424f6c:	lahf   
  424f6d:	push   ss
  424f6e:	xchg   ebx,eax
  424f6f:	mov    ds,WORD PTR [edi]
  424f71:	jno    0x424f36
  424f73:	fst    QWORD PTR [eax]
  424f75:	push   cs
  424f76:	dec    eax
  424f77:	inc    esi
  424f78:	xchg   esp,eax
  424f79:	out    0x56,al
  424f7b:	cli    
  424f7c:	inc    eax
  424f7d:	mov    edi,0x59d3a176
  424f82:	enter  0xf8cf,0xa5
  424f86:	in     al,0x7f
  424f88:	push   ebp
  424f89:	iret   
  424f8a:	ret    0xaacc
  424f8d:	pop    eax
  424f8e:	adc    al,BYTE PTR ds:0x8b08c53b
  424f94:	mov    ebp,0xe9d489c5
  424f99:	fidiv  WORD PTR [esi-0x7c6f51a6]
  424f9f:	xchg   ebx,eax
  424fa0:	test   eax,0x78ee20d9
  424fa5:	cwde   
  424fa6:	push   ebx
  424fa7:	lahf   
  424fa8:	cmc    
  424fa9:	ret    
  424faa:	dec    eax
  424fab:	js     0x424f34
  424fad:	repz ss jmp 0x67a60605
  424fb4:	pusha  
  424fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424fb6:	jl     0x424f8c
  424fb8:	add    eax,0x5f86fe94
  424fbd:	adc    al,0x48
  424fbf:	test   al,0x67
  424fc1:	xor    eax,0x29776d4a
  424fc6:	imul   esp,DWORD PTR [esi+0xe],0xfffffff9
  424fca:	fst    DWORD PTR [edx+ebx*1]
  424fcd:	ret    
  424fce:	retf   
  424fcf:	stos   BYTE PTR es:[edi],al
  424fd0:	jae    0x424ff0
  424fd2:	pop    ebx
  424fd3:	inc    BYTE PTR [eax-0x27]
  424fd6:	push   esi
  424fd7:	mov    ecx,0x16390e84
  424fdc:	cmp    bh,al
  424fde:	mov    edx,0x3a421a5e
  424fe3:	pop    ds
  424fe4:	mov    eax,ds:0x2f60379b
  424fe9:	(bad)  
  424feb:	lock fsub QWORD PTR cs:[ebx-0xb413124]
  424ff3:	xchg   ecx,eax
  424ff4:	stos   BYTE PTR es:[edi],al
  424ff5:	jbe    0x424f8f
  424ff7:	mov    cl,BYTE PTR [eax]
  424ff9:	pop    edx
  424ffa:	dec    eax
  424ffb:	and    DWORD PTR [edi],eax
  424ffd:	int3   
  424ffe:	cli    
  424fff:	(bad)  
  425000:	stc    
  425001:	out    dx,eax
  425002:	imul   esp,DWORD PTR [esi+0x54],0x21d06f1d
  425009:	adc    DWORD PTR [ecx],0x2
  42500c:	xor    al,0x14
  42500e:	pop    ds
  42500f:	add    eax,0xef588a99
  425014:	ficomp DWORD PTR [esi+0x32]
  425017:	scas   al,BYTE PTR es:[di]
  425019:	test   BYTE PTR [edi-0x2b21ab7a],dl
  42501f:	xchg   edi,eax
  425020:	xor    al,0x6b
  425022:	jle    0x425099
  425024:	dec    edi
  425025:	pop    esp
  425026:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425027:	adc    al,0x44
  425029:	je     0x424fac
  42502b:	cmp    eax,0xfeb9161d
  425030:	xchg   edx,eax
  425031:	into   
  425032:	xchg   edx,eax
  425033:	data16 in al,dx
  425035:	push   edx
  425036:	mov    dh,ch
  425038:	cmp    BYTE PTR [ecx-0x5d],ch
  42503b:	jmp    0xdd67:0xd03400f2
  425042:	imul   edx,esi,0x1e615822
  425048:	pop    edi
  425049:	das    
  42504a:	mov    ecx,0xe04d1a26
  42504f:	jmp    0x5dd31c3e
  425054:	add    bl,bl
  425056:	shr    BYTE PTR [esi+edi*8-0x1b08b3c5],0xbd
  42505e:	dec    ebp
  42505f:	inc    ebx
  425060:	sbb    bh,dl
  425062:	fwait
  425063:	imul   edx,DWORD PTR [eax],0x48457f88
  425069:	dec    ecx
  42506a:	sbb    edx,DWORD PTR [esp+ebx*8]
  42506d:	add    dl,BYTE PTR [edi+0x4daa1c66]
  425073:	fwait
  425074:	push   esp
  425075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425076:	ror    DWORD PTR ds:0x633897f,cl
  42507c:	enter  0x4871,0xf4
  425080:	gs jno 0x425098
  425083:	call   0xeaee:0x6a1cd525
  42508a:	push   ds
  42508b:	test   BYTE PTR [edx-0x7],bl
  42508e:	adc    ebp,edx
  425090:	and    DWORD PTR [ecx-0x3b],eax
  425093:	daa    
  425094:	jo     0x4250f4
  425096:	sub    al,0x66
  425098:	and    BYTE PTR [esi+0x28],ch
  42509b:	aas    
  42509c:	sub    ebp,DWORD PTR [eax]
  42509e:	clc    
  42509f:	data16 mov dh,bl
  4250a2:	stc    
  4250a3:	popf   
  4250a4:	push   esi
  4250a5:	popf   
  4250a6:	cmp    ebx,DWORD PTR [eax]
  4250a8:	cmp    al,0x49
  4250aa:	sbb    edi,esp
  4250ac:	inc    edx
  4250ad:	shl    DWORD PTR [edi+ebp*8+0x6df2d760],cl
  4250b4:	outs   dx,DWORD PTR ds:[esi]
  4250b5:	sub    ecx,ecx
  4250b7:	je     0x425076
  4250b9:	cli    
  4250ba:	pop    edi
  4250bb:	fmul   QWORD PTR [eax-0x1191b803]
  4250c1:	test   eax,0xc6ab076b
  4250c6:	xchg   edi,eax
  4250c7:	data16 stos BYTE PTR es:[edi],al
  4250c9:	ror    BYTE PTR [edi-0x60cce5f6],1
  4250cf:	sbb    DWORD PTR [edx-0x68],ecx
  4250d2:	mov    al,0xbb
  4250d4:	fcmovu st,st(4)
  4250d6:	dec    eax
  4250d7:	aas    
  4250d8:	mov    bl,0x55
  4250da:	jmp    0x84:0xe3aaa2fc
  4250e1:	xor    eax,0xa4725588
  4250e6:	dec    edx
  4250e7:	jns    0x4250a1
  4250e9:	cmp    DWORD PTR [esi],edi
  4250eb:	inc    ecx
  4250ec:	js     0x4250c7
  4250ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4250ef:	sub    al,0x85
  4250f1:	gs xchg edx,eax
  4250f3:	mov    ebx,eax
  4250f5:	cmp    bh,al
  4250f7:	sbb    al,0x5b
  4250f9:	cmp    DWORD PTR [eax-0x14],ecx
  4250fc:	lds    edx,FWORD PTR [edx+ebp*1]
  4250ff:	cmp    DWORD PTR [edx],edx
  425101:	and    edx,DWORD PTR [esi+0x6f]
  425104:	sbb    al,BYTE PTR [edx+eax*8]
  425107:	xlat   BYTE PTR ds:[ebx]
  425108:	and    ch,BYTE PTR [edx]
  42510a:	add    BYTE PTR [ecx+0x69bc6058],0x4
  425111:	(bad)  
  425112:	int    0x66
  425114:	fincstp 
  425116:	push   ebp
  425117:	mov    WORD PTR ss:0x622da5b5,cs
  42511e:	dec    eax
  42511f:	jno    0x4250e3
  425121:	and    eax,0x279fac9b
  425126:	dec    ecx
  425127:	and    DWORD PTR [ecx+0x26d5e1a7],edi
  42512d:	sbb    BYTE PTR [eax],dh
  42512f:	sbb    al,0x9a
  425131:	loope  0x425171
  425133:	ror    BYTE PTR [edi+0x51],1
  425136:	pop    ebx
  425137:	xor    ebx,DWORD PTR [edx]
  425139:	xchg   esi,eax
  42513a:	push   cs
  42513b:	xor    ecx,DWORD PTR [edx]
  42513d:	cwde   
  42513e:	inc    BYTE PTR [ecx+ebx*1]
  425141:	fisub  DWORD PTR [esi+edx*1+0xf]
  425145:	int    0x58
  425147:	sbb    BYTE PTR [ebp+0x1ad904b3],dh
  42514d:	aad    0xc1
  42514f:	rcl    DWORD PTR [ecx+0x24],cl
  425152:	mov    ah,0xaf
  425154:	cmp    al,0xd9
  425156:	in     al,dx
  425157:	xor    al,0x82
  425159:	leave  
  42515a:	test   al,0xe3
  42515c:	or     eax,0x2c0d1ac8
  425161:	add    eax,0x712dfd4b
  425166:	sbb    BYTE PTR [ecx],al
  425168:	jne    0x425144
  42516a:	adc    al,0x89
  42516c:	leave  
  42516d:	pushf  
  42516e:	xor    esi,ebx
  425170:	sahf   
  425171:	adc    ecx,DWORD PTR [edi+0x32]
  425174:	cmp    dh,dh
  425176:	imul   DWORD PTR ds:0xd1f1944
  42517c:	mov    bh,0x4b
  42517e:	dec    edx
  42517f:	mov    esp,0xcbbd051a
  425184:	lahf   
  425185:	in     eax,0x4a
  425187:	(bad)  
  425188:	aad    0x11
  42518a:	pop    es
  42518b:	mov    ebx,0x98985da9
  425190:	cli    
  425191:	(bad)  
  425192:	sub    eax,DWORD PTR [ebp+0x595069fc]
  425198:	lock fld DWORD PTR [eax+0x76800168]
  42519f:	mov    es,WORD PTR [ecx-0x27]
  4251a2:	leave  
  4251a3:	cmp    BYTE PTR ds:[esi-0x23114331],cl
  4251aa:	cdq    
  4251ab:	xchg   ebx,eax
  4251ad:	push   si
  4251af:	xor    BYTE PTR [ebx-0x4f598e29],0xd9
  4251b6:	ss popf 
  4251b8:	sbb    ecx,DWORD PTR [ecx+0x52]
  4251bb:	mov    ch,0x8f
  4251bd:	mov    ah,0x27
  4251bf:	or     eax,0x19484fb6
  4251c4:	(bad)  [esi-0x50]
  4251c7:	or     BYTE PTR [ecx+0x15],cl
  4251ca:	outs   dx,BYTE PTR ds:[esi]
  4251cb:	jmp    0x389f:0xa2c
  4251d1:	and    cl,BYTE PTR [ecx-0x631ea546]
  4251d7:	aaa    
  4251d8:	adc    eax,0xcd8af242
  4251dd:	sub    DWORD PTR [esi+0x67],eax
  4251e0:	call   FWORD PTR [edx-0x72]
  4251e3:	xchg   ebx,eax
  4251e4:	sub    DWORD PTR [eax+0x33],esi
  4251e7:	mov    eax,0xc958f97b
  4251ec:	dec    esp
  4251ed:	fstp   TBYTE PTR [edx]
  4251ef:	fs push ebp
  4251f1:	(bad)  
  4251f2:	adc    eax,0xf1ac656e
  4251f7:	mov    ch,0xba
  4251f9:	cld    
  4251fa:	call   0x6d1:0xc1b1a42
  425201:	push   ss
  425202:	adc    BYTE PTR [edi],0xdc
  425205:	jmp    0x425195
  425207:	jl     0x4251a0
  425209:	cmc    
  42520a:	xchg   ebx,eax
  42520b:	or     edi,DWORD PTR gs:[ebx+0x4b]
  42520f:	data16 out 0xe2,al
  425212:	push   esi
  425213:	in     eax,0x53
  425215:	xor    eax,esp
  425217:	adc    eax,0x6697550f
  42521c:	mov    eax,ds:0xda3ef2af
  425221:	arpl   WORD PTR ds:0xa4c41267,bx
  425227:	mov    edi,0x40c8101a
  42522c:	out    dx,al
  42522d:	add    DWORD PTR ds:0xb9d9aeeb,edi
  425233:	jp     0x425294
  425235:	jp     0x425211
  425237:	test   BYTE PTR [ecx],al
  425239:	jecxz  0x425260
  42523b:	xor    eax,0xc94872ef
  425240:	mov    bh,0x14
  425242:	mov    ch,cl
  425244:	out    0x5c,eax
  425246:	or     BYTE PTR [edi+0x79],ah
  425249:	out    dx,al
  42524a:	or     ebp,DWORD PTR [edx+0x22a898fc]
  425250:	xchg   edi,ecx
  425252:	dec    eax
  425253:	out    dx,eax
  425254:	xchg   esp,eax
  425255:	fs xchg edi,eax
  425257:	retf   
  425258:	sub    eax,0x9266d85b
  42525d:	cmp    al,0x18
  42525f:	add    BYTE PTR ds:0xa9c36f73,bl
  425265:	or     eax,0x8519fc76
  42526a:	push   esi
  42526c:	dec    edx
  42526d:	mov    ebx,0xcef5842
  425272:	leave  
  425273:	stos   WORD PTR es:[edi],ax
  425275:	inc    esi
  425276:	push   edi
  425277:	jns    0x425293
  425279:	mov    eax,ds:0x23557e0e
  42527e:	fdiv   DWORD PTR [ebx-0x70]
  425281:	fld    st(1)
  425283:	or     ebx,ebx
  425285:	jmp    0x94f0:0x7f1329b7
  42528c:	sbb    al,0x39
  42528e:	dec    eax
  42528f:	jl     0x42526a
  425291:	mov    ds:0xb7b86f9e,al
  425296:	hlt    
  425297:	data16 arpl WORD PTR [eax],cx
  42529a:	xchg   edi,eax
  42529b:	ficomp WORD PTR [edx]
  42529d:	or     eax,0x3136a9f7
  4252a2:	loopne 0x425281
  4252a4:	push   es
  4252a5:	clc    
  4252a6:	int3   
  4252a7:	cld    
  4252a8:	rcr    DWORD PTR [ecx],0xc3
  4252ab:	fist   DWORD PTR [eax-0x4d]
  4252ae:	ret    0x1a8f
  4252b1:	js     0x4252e8
  4252b3:	push   ebp
  4252b4:	(bad)  
  4252b5:	cmp    DWORD PTR [edi+0x1a],edi
  4252b8:	xor    cl,bl
  4252ba:	rol    edi,1
  4252bc:	clc    
  4252bd:	jg     0x42528e
  4252bf:	add    DWORD PTR [ebx+0x10442bf],ebp
  4252c5:	lods   eax,DWORD PTR ds:[esi]
  4252c6:	dec    ecx
  4252c7:	jp     0x425270
  4252c9:	jno    0x4252f0
  4252cb:	arpl   cx,bx
  4252cd:	idiv   DWORD PTR [edi]
  4252cf:	jmp    0x864:0x832a9cd6
  4252d6:	lahf   
  4252d7:	enter  0x707a,0x40
  4252db:	loopne 0x4252e0
  4252dd:	push   edx
  4252de:	dec    eax
  4252df:	push   esi
  4252e0:	sub    ebp,esp
  4252e2:	aad    0x2
  4252e4:	ret    
  4252e5:	mov    ebp,0x73a16684
  4252ea:	inc    esi
  4252eb:	repz sbb ch,BYTE PTR [ecx+edi*4+0x220e9caf]
  4252f3:	popf   
  4252f4:	test   cl,bl
  4252f6:	not    DWORD PTR [ebx]
  4252f8:	out    dx,al
  4252f9:	fnsave [ecx]
  4252fb:	adc    ah,BYTE PTR [edi-0x8935f03]
  425301:	sub    cl,BYTE PTR [eax-0x13]
  425304:	dec    esp
  425305:	outs   dx,BYTE PTR ds:[esi]
  425306:	gs addr16 inc esi
  425309:	(bad)  [esi+esi*8-0x62]
  42530d:	enter  0x61de,0x5b
  425311:	(bad)  
  425312:	test   al,0x90
  425314:	(bad)
  425317:	sub    BYTE PTR [ecx+0x52154a7a],0xe6
  42531e:	lds    esp,FWORD PTR [eax+0x14486f64]
  425324:	jno    0x4252de
  425326:	or     cl,BYTE PTR [ebp-0x35b0fdd4]
  42532c:	lds    ebp,FWORD PTR ds:0x1ce876b8
  425332:	mov    DWORD PTR [esi+0x1c],esp
  425335:	mov    ?,edi
  425337:	push   ebx
  425338:	lea    eax,[edx+0x57]
  42533b:	sbb    DWORD PTR [edi],0x45
  42533e:	in     al,dx
  42533f:	sub    DWORD PTR [edi+0x2cfe4b9d],esp
  425345:	push   0xa482673c
  42534a:	int3   
  42534b:	jl     0x42536e
  42534d:	pop    edx
  42534e:	pop    edi
  42534f:	xlat   BYTE PTR ds:[ebx]
  425350:	(bad)
  425357:	or     dh,BYTE PTR [ecx-0xc]
  42535a:	xor    esp,DWORD PTR [edi+0x5e]
  42535d:	aad    0x1e
  42535f:	and    eax,0xab61cd1a
  425364:	mov    eax,0x197ce78b
  425369:	test   DWORD PTR [esi-0x7fe6ce7b],0x22c38aa4
  425373:	mov    dl,dl
  425375:	addr16 in eax,dx
  425377:	pop    eax
  425378:	popf   
  425379:	xchg   BYTE PTR [eax-0x43],cl
  42537c:	sub    esp,DWORD PTR [ecx+0x73b986c0]
  425382:	aad    0x67
  425384:	adc    eax,DWORD PTR [eax]
  425386:	enter  0xb5f4,0x2a
  42538a:	cmp    al,BYTE PTR [edi+0x0]
  42538d:	sbb    edi,DWORD PTR [eax]
  42538f:	dec    esp
  425390:	call   0x667c9ba3
  425395:	xor    al,0xfe
  425397:	stc    
  425398:	mov    bh,BYTE PTR [edi]
  42539a:	and    ah,BYTE PTR [edi-0x67]
  42539d:	std    
  42539e:	pop    edi
  42539f:	aaa    
  4253a0:	sbb    al,BYTE PTR [ebp-0x562990c0]
  4253a6:	cdq    
  4253a7:	pop    esp
  4253a8:	rcr    cl,cl
  4253aa:	dec    esp
  4253ab:	push   esp
  4253ac:	and    DWORD PTR [bp+0x26],0xdbc402f8
  4253b4:	push   ebp
  4253b5:	adc    cl,BYTE PTR [eax+0x70]
  4253b8:	std    
  4253b9:	call   0x2d18d131
  4253be:	jae    0x425344
  4253c0:	sbb    eax,0x1222dd77
  4253c5:	cmc    
  4253c6:	ficomp WORD PTR [ebx-0x59]
  4253c9:	int3   
  4253ca:	out    dx,eax
  4253cb:	imul   edx,edx,0x3626104b
  4253d1:	fbld   TBYTE PTR [edi+ebp*8+0x13]
  4253d5:	fadd   st(7),st
  4253d7:	jo     0x425369
  4253d9:	fsub   st(3),st
  4253db:	inc    ecx
  4253dc:	pop    esi
  4253dd:	sti    
  4253de:	(bad)  
  4253df:	sub    ebx,DWORD PTR [edx+0x28ea1f58]
  4253e5:	xchg   edx,eax
  4253e6:	adc    BYTE PTR [edi+0x37ea398a],cl
  4253ec:	dec    eax
  4253ed:	or     eax,edx
  4253ef:	retf   
  4253f0:	sahf   
  4253f1:	dec    esi
  4253f2:	shr    DWORD PTR [esi+0x4f7fda0e],1
  4253f8:	jmp    0xcced:0x61cf523f
  4253ff:	pop    edi
  425400:	jnp    0x42542f
  425402:	dec    eax
  425403:	push   eax
  425404:	mov    ebx,0x671be3c7
  425409:	int    0x46
  42540b:	dec    ebx
  42540c:	adc    BYTE PTR [edi+0x64],dl
  42540f:	data16 mov ah,BYTE PTR [esi-0x6]
  425413:	fdivr  st,st(2)
  425415:	or     bh,0xe1
  425418:	pop    esp
  425419:	in     eax,0x47
  42541b:	inc    ecx
  42541c:	or     BYTE PTR [edx+0x23296030],dh
  425422:	push   edx
  425423:	xor    si,WORD PTR [edx]
  425426:	jnp    0x4253e2
  425428:	sbb    dl,BYTE PTR [eax+0x76]
  42542b:	jp     0x4253c8
  42542d:	push   0xffffff99
  42542f:	and    eax,0x45f4e865
  425434:	clc    
  425435:	xlat   BYTE PTR ds:[ebx]
  425436:	int3   
  425437:	sbb    edx,0x1a9f8840
  42543d:	fcmovbe st,st(0)
  42543f:	dec    ebx
  425440:	fwait
  425441:	dec    esp
  425442:	outs   dx,DWORD PTR ds:[esi]
  425443:	gs aaa 
  425445:	fdiv   QWORD PTR [esi+0x50]
  425448:	jnp    0x425497
  42544a:	xor    ebp,DWORD PTR [ecx-0x7ba12e66]
  425450:	push   ebp
  425451:	inc    eax
  425452:	pop    ds
  425453:	mov    bl,0x24
  425455:	enter  0xf16d,0xf5
  425459:	(bad)  
  42545a:	jmp    0xa003:0x8ae7c466
  425461:	aas    
  425462:	out    0xe8,eax
  425464:	cmp    WORD PTR [eax],bp
  425467:	cmp    al,0x52
  425469:	mov    eax,ds:0xfc1a125e
  42546e:	cld    
  42546f:	pop    esp
  425470:	aam    0xf0
  425472:	xor    cl,BYTE PTR [eax+0x561dd93a]
  425478:	jg     0x4254c3
  42547a:	enter  0xba91,0x22
  42547e:	inc    esp
  42547f:	dec    edx
  425480:	(bad)  
  425481:	frstor [ebx-0x2c]
  425484:	jae    0x425421
  425486:	mov    BYTE PTR [ebx],cl
  425488:	dec    ebx
  425489:	fld    DWORD PTR [ebp-0x42]
  42548c:	sbb    DWORD PTR [ebp-0x72],0x59
  425490:	adc    al,0x93
  425492:	push   eax
  425493:	ret    0x7657
  425496:	dec    eax
  425497:	and    DWORD PTR ds:0xceb0b4f8,edx
  42549d:	(bad)  
  42549f:	inc    esi
  4254a0:	lea    esi,[ecx-0x5f]
  4254a3:	mov    eax,ds:0x15ae0f0
  4254a8:	or     DWORD PTR [ecx-0x7a],esp
  4254ab:	ja     0x425508
  4254ad:	cmp    bl,ah
  4254af:	xchg   ebp,eax
  4254b0:	fimul  DWORD PTR [ebx]
  4254b2:	clc    
  4254b3:	adc    dh,bl
  4254b5:	(bad)  
  4254b6:	dec    ebx
  4254b7:	je     0x4254f3
  4254b9:	imul   ebp,DWORD PTR [esi],0x9959fd2d
  4254bf:	retf   
  4254c0:	sbb    al,BYTE PTR [ebp+0x28]
  4254c3:	(bad)  
  4254c4:	xor    eax,0x7b53226f
  4254c9:	push   eax
  4254ca:	cmp    esi,DWORD PTR [edi-0x3f]
  4254cd:	iret   
  4254ce:	frstor [esi+0x1e]
  4254d1:	leave  
  4254d2:	in     eax,0x9b
  4254d4:	sbb    al,0x32
  4254d6:	jne    0x425500
  4254d8:	stos   BYTE PTR es:[edi],al
  4254d9:	and    eax,0x351cec5b
  4254de:	mov    esp,DWORD PTR [esi+0x6674ca6a]
  4254e4:	xchg   ebp,eax
  4254e5:	mov    al,ds:0x5f37fa5e
  4254ea:	hlt    
  4254eb:	outs   dx,BYTE PTR ds:[esi]
  4254ec:	pop    edx
  4254ed:	mov    dh,0xca
  4254ef:	cmp    esp,DWORD PTR [ebx]
  4254f1:	mov    ecx,0xd96d5c15
  4254f6:	test   eax,0x5428c5a
  4254fb:	jle    0x4254ab
  4254fd:	xor    cl,BYTE PTR ds:0x488d1fa7
  425503:	in     eax,dx
  425504:	jmp    0xd7c2e9e5
  425509:	rcr    DWORD PTR [esi+eiz*2-0x1b],cl
  42550d:	xchg   ebp,eax
  42550e:	or     esi,edi
  425510:	sbb    esp,edi
  425512:	out    0x9d,eax
  425514:	and    al,0xf1
  425516:	pop    ecx
  425517:	loope  0x425573
  425519:	lahf   
  42551a:	ja     0x4254b4
  42551c:	jno    0x4254ed
  42551e:	lds    edx,FWORD PTR [eax+0x7541651b]
  425524:	mov    ebp,0xc93d980
  425529:	(bad)  
  42552b:	mov    bh,0x40
  42552d:	inc    esi
  42552e:	sub    BYTE PTR [ebp+0x2a6774aa],ch
  425534:	inc    ebx
  425535:	pop    edi
  425536:	or     edi,edi
  425538:	push   ss
  425539:	cmp    edx,DWORD PTR [ebx-0x52]
  42553c:	push   0xffffff8e
  42553e:	fisubr DWORD PTR [ecx-0x14]
  425541:	xchg   ecx,eax
  425542:	sbb    BYTE PTR [esi],bh
  425544:	fcmovbe st,st(5)
  425546:	repnz imul esi,DWORD PTR [edx],0x6c974df4
  42554d:	and    ch,dl
  42554f:	add    edi,DWORD PTR [ebx+0x28068d45]
  425555:	test   DWORD PTR [edi+eiz*2],eax
  425558:	mov    eax,ds:0x1ab3036e
  42555d:	inc    edi
  42555e:	cmc    
  42555f:	fisubr DWORD PTR [ecx]
  425561:	fucom  st(4)
  425563:	mov    ?,WORD PTR [ecx-0x27]
  425566:	std    
  425567:	out    0xa6,al
  425569:	ror    BYTE PTR [esi-0x40],cl
  42556c:	push   ebp
  42556d:	pop    ebx
  42556e:	cmp    al,0x2c
  425570:	jnp    0x425540
  425572:	dec    eax
  425573:	ins    DWORD PTR es:[edi],dx
  425574:	or     al,0xbf
  425576:	pop    ecx
  425577:	jecxz  0x425572
  425579:	mov    esp,DWORD PTR [esi+0x66]
  42557c:	lahf   
  42557d:	and    DWORD PTR [ebp+0x12],ebp
  425580:	sbb    bl,BYTE PTR [esi-0x1f1719a0]
  425586:	mov    ds,WORD PTR [ecx-0x5e]
  425589:	pop    es
  42558a:	pop    ss
  42558b:	call   0xda5b2f10
  425590:	je     0xc8614620
  425596:	xchg   esp,eax
  425597:	repnz pop ss
  425599:	out    dx,eax
  42559a:	dec    esp
  42559b:	sbb    DWORD PTR [eax+edx*2+0x67ff3ec8],ecx
  4255a2:	push   cs
  4255a3:	push   0x77a72cca
  4255a8:	xchg   BYTE PTR [edi+0x52],bh
  4255ab:	sbb    DWORD PTR cs:[edi],ebx
  4255ae:	dec    eax
  4255af:	retf   
  4255b0:	ffree  st(2)
  4255b2:	pop    ebp
  4255b3:	mov    eax,0x67466195
  4255b8:	mov    dh,0x20
  4255ba:	mov    ebp,0x752c1aca
  4255bf:	inc    ecx
  4255c0:	aaa    
  4255c1:	enter  0xbd06,0xdb
  4255c5:	leave  
  4255c6:	adc    dl,BYTE PTR [esi]
  4255c8:	sbb    eax,0x5a75fabe
  4255cd:	scas   al,BYTE PTR es:[edi]
  4255ce:	cmp    al,0xd5
  4255d0:	into   
  4255d1:	aad    0x5f
  4255d3:	pop    esp
  4255d4:	mov    dh,0x12
  4255d6:	gs xchg esi,eax
  4255d8:	mov    fs,edi
  4255da:	inc    edi
  4255db:	clc    
  4255dc:	push   ds
  4255dd:	fst    DWORD PTR [eax-0x22]
  4255e0:	jge    0x425653
  4255e2:	mov    cl,0x41
  4255e4:	hlt    
  4255e5:	pop    ebx
  4255e6:	or     al,0x1a
  4255e8:	fsub   DWORD PTR [esi]
  4255ea:	dec    ebx
  4255eb:	add    al,0xae
  4255ed:	shl    DWORD PTR [edx-0x30264a8c],1
  4255f3:	xchg   esi,eax
  4255f4:	nop
  4255f5:	mov    esp,0x573164ee
  4255fa:	mov    edx,0x48cf0435
  4255ff:	call   0x8402:0xe7fa9284
  425606:	dec    ebp
  425607:	xchg   si,ax
  425609:	mov    BYTE PTR ds:[edi+0x1e6aa61a],ah
  425610:	xchg   ebp,eax
  425611:	test   BYTE PTR [esi],al
  425613:	dec    ecx
  425614:	jne    0x4255ef
  425616:	scas   eax,DWORD PTR es:[edi]
  425617:	inc    eax
  425618:	jns    0x4255f6
  42561a:	dec    bp
  42561c:	aas    
  42561d:	xor    ebx,DWORD PTR [eax]
  42561f:	mov    ch,0x64
  425621:	test   DWORD PTR [eax-0x2f26588],eax
  425627:	mov    bl,0x5d
  425629:	xor    DWORD PTR [ebx+0x1b46218],esp
  42562f:	jne    0x425621
  425631:	fldenv [ecx]
  425633:	in     eax,dx
  425634:	xchg   ebp,eax
  425635:	push   ebx
  425636:	jns    0x425639
  425638:	sbb    bl,dl
  42563a:	rcr    BYTE PTR [ecx+0x584886d7],0x98
  425641:	pop    ds
  425642:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425643:	mov    al,BYTE PTR [edi-0x1798ec20]
  425649:	aaa    
  42564a:	cmp    al,0xe6
  42564c:	sbb    ch,BYTE PTR [esi]
  42564e:	pop    eax
  42564f:	je     0x42560b
  425651:	xchg   esi,eax
  425652:	or     DWORD PTR [ecx-0x5e],ebp
  425655:	fdiv   st(0),st
  425657:	xchg   edi,eax
  425658:	mov    ah,dh
  42565a:	mov    bh,BYTE PTR [ebx+0xa]
  42565d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42565e:	sub    eax,0xa26f1acb
  425663:	or     BYTE PTR [edx+ecx*2],0xd4
  425667:	cli    
  425668:	js     0x425643
  42566a:	adc    edi,DWORD PTR [ebp+0x175e5d99]
  425670:	in     eax,dx
  425671:	mov    ds:0xf42b318c,al
  425676:	inc    edi
  425677:	or     esp,ebp
  425679:	pop    ecx
  42567a:	push   esi
  42567b:	pop    ebx
  42567c:	or     dl,0xe0
  42567f:	je     0x425649
  425681:	pop    ds
  425682:	cs pop ss
  425684:	test   esi,esp
  425686:	(bad)  
  425687:	mov    BYTE PTR [edx],bl
  425689:	add    dl,bh
  42568b:	lods   eax,DWORD PTR ds:[esi]
  42568c:	(bad)  
  42568d:	mov    bl,0xe8
  42568f:	ja     0x4256fe
  425691:	in     eax,dx
  425692:	jnp    0x425671
  425694:	and    BYTE PTR [esi+edx*8+0x39],0xa2
  425699:	mov    eax,ds:0x63f9ca48
  42569e:	xlat   BYTE PTR ds:[ebx]
  42569f:	inc    esp
  4256a0:	mov    ah,0x71
  4256a2:	dec    eax
  4256a3:	adc    al,0x5b
  4256a5:	mov    cl,0x21
  4256a7:	inc    ecx
  4256a8:	pusha  
  4256a9:	es jo  0x425715
  4256ac:	outs   dx,DWORD PTR ds:[esi]
  4256ad:	clc    
  4256ae:	jl     0x4256ac
  4256b0:	xchg   DWORD PTR [ecx-0x28e564c7],esi
  4256b6:	mov    dl,0x61
  4256b8:	dec    ebx
  4256b9:	aaa    
  4256ba:	cdq    
  4256bb:	dec    edx
  4256bc:	cmp    eax,ebx
  4256be:	std    
  4256bf:	int    0x9b
  4256c1:	sub    BYTE PTR [ecx+0x7d],dh
  4256c4:	jecxz  0x4256c5
  4256c6:	imul   ebp,DWORD PTR [eax+0x5a],0x1a468feb
  4256cd:	mov    cl,0xc3
  4256cf:	ret    0x90d8
  4256d2:	sbb    eax,DWORD PTR [eax-0x6df626dc]
  4256d8:	ret    
  4256d9:	cmp    bl,ch
  4256db:	in     eax,dx
  4256dc:	push   edi
  4256dd:	xor    eax,edi
  4256df:	ja     0x4256af
  4256e1:	cmp    ecx,DWORD PTR [eax-0x68]
  4256e4:	cwde   
  4256e5:	mov    ss,esp
  4256e7:	or     eax,0x83058f95
  4256ec:	push   es
  4256ed:	call   0x8b86:0x7dd1a744
  4256f4:	stos   DWORD PTR es:[edi],eax
  4256f5:	test   BYTE PTR [eax-0x7a],cl
  4256f8:	in     eax,dx
  4256f9:	sbb    DWORD PTR [ebx-0x16],eax
  4256fc:	jecxz  0x4256d1
  4256fe:	fidiv  WORD PTR [ebp-0x66]
  425701:	mov    ch,0x45
  425703:	pop    edx
  425704:	sti    
  425705:	jno    0x4256d3
  425707:	push   eax
  425708:	adc    eax,0x4f6a4811
  42570d:	inc    ecx
  42570e:	test   DWORD PTR [edi-0x5ef78741],ecx
  425714:	mov    ah,0x8b
  425716:	dec    eax
  425717:	add    al,0xa4
  425719:	mov    al,0x94
  42571b:	mov    esp,0x764bf1aa
  425720:	call   0x10d9:0xc8228573
  425727:	fidiv  WORD PTR [ebx+0x6c35d4db]
  42572d:	scas   al,BYTE PTR es:[edi]
  42572e:	mov    eax,0x48cf10d0
  425733:	scas   al,BYTE PTR es:[edi]
  425734:	jnp    0x42576d
  425736:	xor    BYTE PTR [ecx],ch
  425738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425739:	call   0xe8d9:0x4c5166d7
  425740:	cli    
  425741:	add    al,0xe7
  425743:	jle    0x425705
  425745:	inc    edx
  425746:	dec    eax
  425747:	pusha  
  425748:	mov    eax,ds:0x6efc4423
  42574d:	lods   al,BYTE PTR ds:[esi]
  42574e:	mov    ah,BYTE PTR [edi-0x22]
  425751:	jle    0x4257a2
  425753:	sbb    DWORD PTR [eax-0x41794638],eax
  425759:	cmp    ecx,DWORD PTR [eax-0x44]
  42575c:	shl    DWORD PTR [edx],cl
  42575e:	sub    al,0x70
  425760:	iret   
  425761:	test   al,0xb6
  425763:	imul   edi,DWORD PTR [edx-0x44],0x426e39d4
  42576a:	and    bh,bh
  42576c:	ins    BYTE PTR es:[edi],dx
  42576d:	mov    ecx,DWORD PTR [eax-0x72]
  425770:	and    al,0xa5
  425772:	fcomp  DWORD PTR [ecx-0x45]
  425775:	je     0x425781
  425777:	addr16 mov ah,0xdc
  42577a:	mov    ebx,0xb6001acd
  42577f:	adc    edi,DWORD PTR [ebx+0x4]
  425782:	fld    TBYTE PTR [edx+0x59a6d9e5]
  425788:	lds    ebx,FWORD PTR [bx]
  42578b:	inc    edi
  42578c:	or     DWORD PTR [esp+ebx*2+0x4f41cf80],ebp
  425793:	jmp    0xf62c4f60
  425798:	add    ecx,DWORD PTR [eax]
  42579a:	inc    edi
  42579b:	out    0xef,eax
  42579d:	in     al,0xb
  42579f:	cmp    DWORD PTR [eax+0x75],0xffffffbf
  4257a3:	data16 aaa 
  4257a5:	push   es
  4257a6:	(bad)  
  4257a7:	imul   edx,DWORD PTR [esi+0x498cffa1],0xffffffc4
  4257ae:	inc    ebx
  4257af:	push   ebx
  4257b0:	pushw  ds
  4257b2:	data16 jb 0x42573a
  4257b5:	ror    al,0xb4
  4257b8:	mov    eax,0x547239d9
  4257bd:	inc    ecx
  4257be:	mov    cl,0xdb
  4257c0:	dec    ecx
  4257c1:	jb     0x425772
  4257c3:	cmp    ah,ah
  4257c5:	hlt    
  4257c6:	dec    esi
  4257c7:	mov    ?,WORD PTR [esi+eiz*8+0x7a]
  4257cb:	mov    ah,0xc1
  4257cd:	test   DWORD PTR [eax+0x5fd9b6e6],ebx
  4257d3:	mov    ecx,0x61a21dac
  4257d8:	pop    ds
  4257d9:	sub    BYTE PTR [ecx+0x6d516299],al
  4257df:	pop    ebp
  4257e0:	xchg   ecx,ebx
  4257e2:	mov    eax,ds:0x93713546
  4257e7:	stc    
  4257e8:	push   ecx
  4257e9:	pop    ss
  4257ea:	push   ds
  4257eb:	mov    esi,0xa648583c
  4257f0:	fcmove st,st(5)
  4257f2:	sub    ebx,DWORD PTR [edi]
  4257f4:	ror    DWORD PTR [ebx-0x4d6180f5],1
  4257fa:	jecxz  0x42580a
  4257fc:	into   
  4257fd:	fstp   DWORD PTR [edi+0x35f0a99d]
  425803:	ret    
  425804:	sub    dl,BYTE PTR [ebx]
  425806:	scas   eax,DWORD PTR es:[edi]
  425807:	push   esi
  425808:	call   0xe8bd:0x95dfec9b
  42580f:	rcr    BYTE PTR [edx],cl
  425811:	aas    
  425812:	ror    BYTE PTR [esi+esi*1+0x70],cl
  425816:	sub    ebx,edx
  425818:	jp     0x425802
  42581a:	jmp    DWORD PTR [ebx-0x4a897591]
  425820:	or     cl,BYTE PTR ds:0x7f1a9be8
  425826:	std    
  425827:	stc    
  425828:	loope  0x425812
  42582a:	lods   eax,DWORD PTR ds:[esi]
  42582b:	or     edi,esi
  42582d:	mov    ebp,0x2ffaba64
  425832:	cmp    ah,BYTE PTR [edi+0x66]
  425835:	jo     0x42581a
  425837:	hlt    
  425838:	and    eax,DWORD PTR [ebp-0x6d]
  42583b:	ja     0x425800
  42583d:	pop    ecx
  42583e:	push   edx
  42583f:	push   cs
  425840:	nop
  425841:	retf   
  425842:	xchg   ebx,eax
  425843:	sbb    al,0xba
  425845:	sbb    ebp,DWORD PTR [ecx+0x74]
  425848:	cmp    bl,BYTE PTR [eax+ecx*1+0x44]
  42584c:	test   al,0xdc
  42584e:	(bad)  
  42584f:	out    0x1a,eax
  425851:	scas   eax,DWORD PTR es:[edi]
  425852:	mov    edx,0x8113734a
  425857:	fdivrp st(3),st
  425859:	fnstcw WORD PTR [ebp+0x3a]
  42585c:	aam    0x72
  42585e:	mov    DWORD PTR [edx+0x5130b79d],edi
  425864:	inc    ecx
  425865:	jnp    0x4258af
  425867:	add    al,0x91
  425869:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42586a:	div    DWORD PTR [eax-0x31]
  42586d:	pop    edx
  42586e:	cmp    BYTE PTR [edi-0x7d],ah
  425871:	or     ah,dh
  425873:	leave  
  425874:	pop    eax
  425875:	lea    ebp,[eax-0x1062fb63]
  42587b:	add    eax,0x8492dfd6
  425880:	mov    eax,0xecc36ddc
  425885:	dec    ebp
  425886:	adc    BYTE PTR [ecx],dh
  425888:	fimul  DWORD PTR [edx+0x191af48c]
  42588e:	pop    eax
  42588f:	mov    eax,ds:0xd759ab04
  425894:	pop    ds
  425895:	test   DWORD PTR [esi],0xad197ec6
  42589b:	jmp    0x4258d0
  42589d:	in     eax,0x74
  42589f:	add    bl,BYTE PTR [edx]
  4258a1:	call   0xddc993b3
  4258a6:	retf   
  4258a7:	mov    eax,ds:0xb4c1deed
  4258ac:	mov    esi,0xa18a014a
  4258b1:	adc    al,BYTE PTR [esi+0x127c1a11]
  4258b7:	gs gs es test al,0xe0
  4258bc:	adc    al,0x92
  4258be:	jl     0x425926
  4258c0:	aaa    
  4258c1:	pusha  
  4258c2:	xlat   BYTE PTR ds:[ebx]
  4258c3:	xor    BYTE PTR [edi],0xb2
  4258c6:	mov    BYTE PTR [ecx+0x78],bl
  4258c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258ca:	call   0xb143:0xc8280b05
  4258d1:	fstp   DWORD PTR [esi+0x325d9bdc]
  4258d7:	inc    edi
  4258d8:	and    esp,DWORD PTR [edx-0x45]
  4258db:	(bad)  [ebp-0x6888b785]
  4258e1:	sub    DWORD PTR [si-0x3c],edx
  4258e5:	fst    DWORD PTR [ebx+0x4e]
  4258e8:	or     ecx,esp
  4258ea:	pop    esi
  4258eb:	iret   
  4258ec:	sbb    dl,bh
  4258ee:	inc    ecx
  4258ef:	imul   edi,DWORD PTR [ebp-0x114fb761],0xc5abd4a5
  4258f9:	ficomp DWORD PTR [esi]
  4258fb:	addr16 mov eax,0x1b2526e0
  425901:	les    edx,FWORD PTR [esp+eiz*4-0x21466517]
  425908:	(bad)  
  425909:	aad    0x7
  42590b:	push   ebp
  42590c:	push   eax
  42590d:	or     eax,0x11e8c9a
  425912:	mov    fs,WORD PTR [esi-0xd]
  425915:	icebp  
  425916:	xor    BYTE PTR [eax],0x7c
  425919:	fiadd  DWORD PTR [edi+0x4d]
  42591c:	into   
  42591d:	push   edx
  42591e:	mov    ecx,DWORD PTR [edi+0x9]
  425921:	fsubr  st,st(4)
  425923:	ins    DWORD PTR es:[edi],dx
  425924:	sub    DWORD PTR [ecx+0x5],ebp
  425927:	sbb    al,BYTE PTR [edx-0x79]
  42592a:	pop    ds
  42592b:	icebp  
  42592c:	jns    0x42591c
  42592e:	gs inc ebp
  425930:	inc    ecx
  425931:	mov    bl,0x8
  425933:	xchg   ecx,eax
  425934:	popa   
  425935:	fst    DWORD PTR [edi]
  425937:	shl    al,0xf1
  42593a:	bnd jns 0x425994
  42593d:	repz fisub WORD PTR [edi]
  425940:	popf   
  425941:	sub    BYTE PTR [esi+eiz*4-0x6f],dh
  425945:	outs   dx,DWORD PTR ds:[esi]
  425946:	dec    eax
  425947:	pop    es
  425948:	aad    0xe7
  42594a:	mov    eax,0x6e020ad1
  42594f:	out    0x7d,eax
  425951:	shr    BYTE PTR [eax+0xf2b1a0d],cl
  425957:	pop    es
  425958:	enter  0xdc6b,0xd6
  42595c:	cmc    
  42595d:	repnz xchg eax,edx
  425960:	push   0x45
  425962:	outs   dx,DWORD PTR ds:[esi]
  425963:	or     DWORD PTR [edx+0x54628b58],ebp
  425969:	stc    
  42596a:	inc    edi
  42596b:	jmp    0x4259a5
  42596d:	xchg   esi,eax
  42596e:	popa   
  42596f:	aaa    
  425970:	out    0xd9,eax
  425972:	arpl   sp,bx
  425974:	fmul   QWORD PTR [edi]
  425976:	out    dx,al
  425977:	out    0xd,al
  425979:	and    BYTE PTR [edi],bl
  42597b:	mov    fs,WORD PTR [ecx]
  42597d:	fidivr WORD PTR [ebp+ebp*8+0x2fc199a5]
  425984:	mov    bh,BYTE PTR [eax+0x4335e868]
  42598a:	test   eax,0x9c055366
  42598f:	push   esi
  425990:	and    eax,DWORD PTR [eax-0x18]
  425993:	mov    ah,dh
  425995:	iret   
  425996:	dec    edx
  425997:	rol    BYTE PTR [eax-0x7a995ab2],0x8f
  42599e:	fidiv  WORD PTR [esi+0x40]
  4259a1:	jle    0x4259e5
  4259a3:	jmp    0x889:0xb1c27530
  4259aa:	dec    edi
  4259ab:	(bad)  
  4259ac:	test   ax,bx
  4259af:	leave  
  4259b0:	cmp    al,0xea
  4259b2:	fisub  WORD PTR [esi-0x16]
  4259b5:	jno    0x4259bc
  4259b7:	jge    0x425a0d
  4259b9:	push   ebp
  4259bb:	gs xor esp,ebx
  4259be:	ds out 0x36,eax
  4259c1:	mov    esi,0xd99ab9d5
  4259c6:	pop    ds
  4259c7:	jecxz  0x425a33
  4259c9:	fist   DWORD PTR [eax+0x77]
  4259cc:	lea    eax,[ecx+0x3b89aabd]
  4259d2:	dec    eax
  4259d3:	jle    0x4259ae
  4259d5:	int    0x7b
  4259d7:	repz fs out 0x29,al
  4259db:	push   0x65cce4e3
  4259e0:	(bad)  
  4259e1:	hlt    
  4259e2:	ss das 
  4259e4:	mov    esi,0xf3954882
  4259e9:	dec    esp
  4259ea:	dec    ebx
  4259eb:	iret   
  4259ec:	dec    esi
  4259ed:	add    esi,DWORD PTR [ebx]
  4259ef:	jbe    0x425a32
  4259f1:	push   0x88716f04
  4259f6:	xor    eax,0xc9781d17
  4259fb:	add    esp,DWORD PTR es:[eax-0x61a88876]
  425a02:	xchg   esi,eax
  425a03:	inc    esi
  425a04:	or     al,0xda
  425a06:	push   edi
  425a07:	in     eax,0x29
  425a09:	dec    esi
  425a0a:	rcr    dl,cl
  425a0c:	dec    esp
  425a0d:	pop    esp
  425a0e:	fld    DWORD PTR [eax]
  425a10:	(bad)  
  425a12:	inc    edi
  425a13:	call   0xbe97ac13
  425a18:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a19:	pop    ss
  425a1a:	cli    
  425a1b:	data16 (bad) 
  425a1d:	jo     0x425a6a
  425a1f:	adc    DWORD PTR [ecx],esp
  425a21:	sub    al,bh
  425a23:	aas    
  425a24:	xor    edx,DWORD PTR [ebx-0x274d5d7b]
  425a2a:	cwde   
  425a2b:	pop    ss
  425a2c:	add    edi,ebx
  425a2e:	(bad)  
  425a2f:	ins    DWORD PTR es:[edi],dx
  425a30:	(bad)  
  425a31:	(bad)  
  425a32:	mov    al,ds:0xc04026f5
  425a37:	jl     0x4259e9
  425a39:	jg     0x425a07
  425a3b:	pop    eax
  425a3c:	sti    
  425a3d:	fst    DWORD PTR [eax+0x48]
  425a40:	xchg   BYTE PTR [ecx+0x4cc1f542],dl
  425a46:	mov    cl,0x6
  425a48:	loope  0x425a91
  425a4a:	dec    edi
  425a4b:	mov    ecx,0x111f225a
  425a50:	jo     0x425a2b
  425a52:	(bad)  
  425a53:	pop    ebx
  425a54:	mov    eax,0x3a1dd760
  425a59:	sub    DWORD PTR [edi-0x5e],ecx
  425a5c:	add    eax,0x280b48d9
  425a61:	xchg   ebx,eax
  425a62:	push   0xffffffb7
  425a64:	push   DWORD PTR [edx+0x69]
  425a67:	outs   dx,DWORD PTR ds:[esi]
  425a68:	call   0x9f35:0xa4157f3
  425a6f:	int3   
  425a70:	int    0x2
  425a72:	dec    eax
  425a73:	xchg   BYTE PTR [ebx],bh
  425a75:	sbb    al,0x1c
  425a77:	out    dx,al
  425a78:	jo     0x425a17
  425a7a:	adc    ah,BYTE PTR [edi-0x40]
  425a7d:	and    al,0xf9
  425a7f:	mov    BYTE PTR [esi],bh
  425a81:	mov    ds:0x5b1a5fc7,al
  425a86:	xor    ah,BYTE PTR [eax]
  425a88:	add    esi,DWORD PTR [ecx]
  425a8a:	sti    
  425a8b:	popa   
  425a8c:	dec    eax
  425a8d:	retf   0xa63f
  425a90:	add    dh,BYTE PTR [ebp+0x48]
  425a93:	popf   
  425a94:	dec    edi
  425a95:	jbe    0x425a89
  425a97:	sar    BYTE PTR [esi],1
  425a99:	dec    edx
  425a9a:	dec    eax
  425a9b:	inc    cl
  425a9d:	in     al,dx
  425a9e:	jno    0x425a35
  425aa0:	call   0xa9a57f6c
  425aa5:	fldenv [eax-0x25]
  425aa8:	sub    al,0xb9
  425aaa:	(bad)  
  425aab:	pop    ebx
  425aac:	or     al,0xe1
  425aae:	mov    ds:0x640457ec,al
  425ab3:	mov    al,0x1a
  425ab5:	dec    edx
  425ab6:	call   0x6342:0x6b7fce86
  425abd:	or     eax,0x26a76663
  425ac2:	pop    edi
  425ac3:	aad    0xa
  425ac5:	in     al,dx
  425ac6:	sub    DWORD PTR [eax+0x1a],edi
  425ac9:	mov    dl,0x38
  425acb:	mov    ss,WORD PTR [edx]
  425acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ace:	push   edi
  425acf:	paddusw mm3,mm1
  425ad2:	pusha  
  425ad3:	sar    DWORD PTR [edx-0x19],0xef
  425ad7:	mov    bh,0xf0
  425ad9:	rcl    BYTE PTR [edi+esi*8+0x848174b],cl
  425ae0:	mov    esp,DWORD PTR [edi]
  425ae2:	pop    es
  425ae3:	jecxz  0x425a8c
  425ae5:	fisttp WORD PTR [ebp+0x47dd76a1]
  425aeb:	xchg   esp,eax
  425aec:	cmp    BYTE PTR [edx-0x26],dh
  425aef:	ror    BYTE PTR ds:0x6a624994,cl
  425af5:	push   ebx
  425af6:	movq   QWORD PTR [ecx],mm2
  425af9:	fidivr DWORD PTR [ebx]
  425afb:	cmp    esp,DWORD PTR [edx+esi*8+0x4]
  425aff:	push   ebx
  425b00:	add    DWORD PTR [ebx],ebx
  425b02:	(bad)  
  425b03:	popf   
  425b04:	adc    eax,0x1d1748ce
  425b09:	cmp    edi,0xfffffffe
  425b0c:	xchg   edi,eax
  425b0d:	hlt    
  425b0e:	inc    ebx
  425b0f:	addr16 add eax,0x8eb9465e
  425b15:	(bad)  
  425b16:	out    dx,eax
  425b17:	or     DWORD PTR [ebp+0x1d7a4fb9],ebp
  425b1d:	mov    ch,0x7e
  425b1f:	xchg   ecx,eax
  425b20:	pop    ecx
  425b21:	je     0x425ae8
  425b23:	popa   
  425b24:	fdivr  QWORD PTR [ebx+0x72]
  425b27:	pop    esi
  425b28:	pop    edx
  425b29:	ins    BYTE PTR es:[edi],dx
  425b2a:	push   ds
  425b2b:	addr16 js 0x425b6d
  425b2e:	in     eax,dx
  425b2f:	sub    al,0x2e
  425b31:	add    DWORD PTR [edx],edi
  425b33:	jnp    0x425b25
  425b35:	loopne 0x425b0e
  425b37:	xor    eax,0xa0683859
  425b3c:	ss (bad) 
  425b3e:	fmul   st,st(3)
  425b40:	popa   
  425b41:	es je  0x425bad
  425b44:	sub    eax,0xff2c4467
  425b49:	xchg   BYTE PTR [eax],cl
  425b4b:	retf   0xaf8e
  425b4e:	dec    edi
  425b4f:	sub    al,0x8a
  425b51:	mov    edi,0xdafb691f
  425b56:	retf   
  425b57:	jne    0x425b22
  425b59:	push   edi
  425b5a:	hlt    
  425b5b:	cdq    
  425b5c:	add    esi,edx
  425b5e:	rol    ah,1
  425b60:	sbb    bl,BYTE PTR [esi-0x41]
  425b63:	push   ebp
  425b64:	ror    DWORD PTR [eax+0x17],cl
  425b67:	je     0x425be0
  425b69:	imul   edi,DWORD PTR [eax+0x28],0x671341cc
  425b70:	data16 arpl ax,dx
  425b73:	loopne 0x425b90
  425b75:	imul   eax,DWORD PTR [eax+0x1d],0x71
  425b79:	stc    
  425b7a:	push   esi
  425b7b:	leave  
  425b7c:	adc    bh,BYTE PTR [edi-0x348a5852]
  425b82:	jge    0x425bea
  425b84:	out    dx,al
  425b85:	adc    esi,esi
  425b87:	test   eax,0xdf27f81a
  425b8c:	jns    0x425bcc
  425b8e:	and    ebp,DWORD PTR ds:0xf516da15
  425b94:	fdiv   DWORD PTR [esi+ebp*2]
  425b97:	icebp  
  425b98:	sub    dh,BYTE PTR [ebx-0x7d7ac62b]
  425b9e:	dec    eax
  425b9f:	push   ds
  425ba0:	xchg   edi,eax
  425ba1:	popa   
  425ba2:	push   ss
  425ba3:	pop    esi
  425ba4:	loop   0x425b68
  425ba6:	xchg   ecx,eax
  425ba7:	data16 aad 0x37
  425baa:	pop    es
  425bab:	loopne 0x425bd0
  425bad:	pop    ebx
  425bae:	or     eax,0x78593cb4
  425bb3:	rol    BYTE PTR [ecx+eiz*8],cl
  425bb6:	dec    edi
  425bb7:	dec    ebx
  425bb8:	int    0xda
  425bba:	pushf  
  425bbb:	pusha  
  425bbc:	jg     0x425bb1
  425bbe:	jl     0x425bd7
  425bc0:	xchg   esp,eax
  425bc1:	mov    eax,ds:0x21a0f29
  425bc6:	and    eax,0xe318d6dc
  425bcb:	pop    ecx
  425bcc:	scas   al,BYTE PTR es:[edi]
  425bcd:	fucomi st,st(6)
  425bcf:	loop   0x425b98
  425bd1:	daa    
  425bd2:	dec    ebx
  425bd3:	mov    ecx,0xcd46647a
  425bd8:	cld    
  425bd9:	xchg   DWORD PTR [edx],ebx
  425bdb:	cwde   
  425bdc:	sub    esi,DWORD PTR [ebp-0x6370d5b8]
  425be2:	jae    0x425b94
  425be4:	fcmovnu st,st(0)
  425be6:	stos   DWORD PTR es:[edi],eax
  425be7:	pushfw 
  425be9:	out    dx,eax
  425bea:	loop   0x425c57
  425bec:	sbb    ah,BYTE PTR [ecx+0x1e]
  425bef:	ja     0x425bdb
  425bf1:	jne    0x425bf7
  425bf3:	shl    DWORD PTR ds:0xbd3fb7f6,cl
  425bf9:	pushf  
  425bfa:	mov    al,0xb4
  425bfc:	loop   0x425bb4
  425bfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425bff:	add    BYTE PTR [ecx],cl
  425c01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c02:	movzx  esi,BYTE PTR [edi+0xc]
  425c06:	call   0x692876cb
  425c0b:	cli    
  425c0c:	inc    esp
  425c0d:	loope  0x425ba0
  425c0f:	mov    ebx,0xc737d9ef
  425c14:	mov    WORD PTR [edx-0x3831e1ac],?
  425c1a:	aam    0x5f
  425c1c:	out    0x1d,eax
  425c1e:	dec    eax
  425c1f:	pop    ss
  425c20:	outs   dx,BYTE PTR ds:[esi]
  425c21:	in     al,dx
  425c22:	and    eax,0x3a38516
  425c27:	addr16 inc edx
  425c29:	data16 add ah,BYTE PTR ds:0x723de894
  425c30:	ds inc edx
  425c32:	dec    eax
  425c33:	aaa    
  425c34:	ins    BYTE PTR es:[edi],dx
  425c35:	lds    edi,FWORD PTR [edi+0x42]
  425c38:	rcl    DWORD PTR [edx-0x1a],cl
  425c3b:	add    BYTE PTR [esi-0x14d626f4],0x24
  425c42:	das    
  425c43:	add    al,0xf0
  425c45:	sti    
  425c46:	std    
  425c47:	ss out 0x5a,eax
  425c4a:	xchg   bl,ch
  425c4c:	pop    ss
  425c4d:	dec    esi
  425c4e:	loopne 0x425beb
  425c50:	pop    edx
  425c51:	gs pop ebx
  425c53:	push   esp
  425c54:	inc    esi
  425c55:	fldenv [eax]
  425c57:	mov    eax,0x25f106c4
  425c5c:	popa   
  425c5d:	aam    0xd1
  425c5f:	shl    BYTE PTR [ebx],1
  425c61:	dec    ebp
  425c62:	ds jae 0x425cd9
  425c65:	pop    ecx
  425c66:	jmp    0xa28a:0xeef6582c
  425c6d:	(bad)  
  425c6e:	nop
  425c6f:	push   di
  425c71:	fimul  WORD PTR [eax]
  425c73:	adc    DWORD PTR [edx],ebx
  425c75:	mov    edx,0x5bc26e9e
  425c7a:	xchg   edi,eax
  425c7b:	or     esp,DWORD PTR [eax]
  425c7d:	(bad)  
  425c7f:	cmp    BYTE PTR [ebp+0x56],dh
  425c82:	pop    es
  425c83:	clc    
  425c84:	xor    al,ah
  425c86:	pop    esp
  425c87:	setbe  dl
  425c8a:	arpl   WORD PTR [edx-0x56],ax
  425c8d:	adc    cl,BYTE PTR [eax]
  425c8f:	js     0x425c99
  425c91:	stc    
  425c92:	out    dx,al
  425c93:	dec    ecx
  425c94:	addr16 fptan 
  425c97:	add    DWORD PTR ds:0x53bfb2ba,edx
  425c9d:	fimul  WORD PTR [edi+0x45]
  425ca0:	push   ebx
  425ca1:	ret    0x66d8
  425ca4:	(bad)  [ebx-0x5b]
  425ca7:	sbb    BYTE PTR [ebp-0x66],ch
  425caa:	cld    
  425cab:	imul   ebx,DWORD PTR [ebp+ebx*2+0x7a26a0e3],0xed33cfe0
  425cb6:	inc    edi
  425cb7:	push   cs
  425cb8:	les    esp,FWORD PTR [ebp+0x161641a7]
  425cbe:	mov    dh,0x61
  425cc0:	std    
  425cc1:	outs   dx,DWORD PTR ds:[esi]
  425cc2:	mov    esp,0x1ea84866
  425cc7:	inc    ebx
  425cc8:	and    DWORD PTR [ebx+0x3f43a222],ebp
  425cce:	(bad)  
  425ccf:	test   eax,0xf76bc9fb
  425cd4:	inc    ecx
  425cd5:	loopne 0x425c5a
  425cd7:	iret   
  425cd8:	push   ecx
  425cd9:	je     0x425c98
  425cdb:	test   al,0xbf
  425cdd:	repnz fsub QWORD PTR [esi-0x14c70ce6]
  425ce4:	cmp    eax,0x83dadb85
  425ce9:	loop   0x425d57
  425ceb:	jo     0x425ce0
  425ced:	call   0x6d48:0x55cff3fe
  425cf4:	sbb    ah,BYTE PTR [eax-0x5e]
  425cf7:	dec    ebx
  425cf8:	inc    edx
  425cf9:	or     DWORD PTR [eax+0x4cd9b4a2],ebp
  425cff:	add    edx,edx
  425d01:	cwde   
  425d02:	sar    BYTE PTR [eax+0x4],cl
  425d05:	shl    cl,cl
  425d07:	es sbb ah,dl
  425d0a:	jmp    FWORD PTR [ebx]
  425d0c:	lods   al,BYTE PTR ds:[esi]
  425d0d:	dec    esi
  425d0e:	dec    ebx
  425d0f:	push   ss
  425d10:	sbb    ebx,ecx
  425d12:	jbe    0x425d01
  425d14:	jg     0x425d94
  425d16:	and    BYTE PTR [ebp+ebx*8+0x4d1e62c3],dh
  425d1d:	aas    
  425d1e:	dec    ebx
  425d1f:	sub    edi,DWORD PTR [ecx+eax*4-0x663eac5a]
  425d26:	fnstsw WORD PTR [ebx+ebx*1]
  425d29:	add    edx,0xfffffff3
  425d2c:	and    eax,0x31f75e63
  425d31:	sbb    DWORD PTR [ebx+ebp*1-0x77],ebx
  425d35:	loopne 0x425d7b
  425d37:	in     al,0xa0
  425d39:	push   eax
  425d3a:	jno    0x425d74
  425d3c:	mov    bh,ah
  425d3e:	sbb    ah,bl
  425d40:	aas    
  425d41:	mov    cl,BYTE PTR [eax-0x78]
  425d44:	jb     0x425dc4
  425d46:	adc    cl,BYTE PTR [ebx+0x4f5e0afa]
  425d4c:	fwait
  425d4d:	pop    eax
  425d4e:	jp     0x425db9
  425d50:	xlat   BYTE PTR ds:[ebx]
  425d51:	jno    0x425d9f
  425d53:	stos   BYTE PTR es:[edi],al
  425d54:	mov    bh,BYTE PTR [edx-0x3a1f7c28]
  425d5a:	dec    eax
  425d5b:	bound  esi,QWORD PTR [ebp+ecx*8-0x5d]
  425d5f:	inc    esi
  425d60:	sub    al,0xb3
  425d62:	test   al,0x67
  425d64:	out    0x8a,eax
  425d66:	pop    eax
  425d67:	cwde   
  425d68:	mov    bl,0xb7
  425d6a:	ret    0xb1c6
  425d6d:	jg     0x425dd3
  425d6f:	shl    BYTE PTR [ebp+0x3ef91799],1
  425d75:	mov    ax,ds:0x4b08a445
  425d7b:	jne    0x425dd7
  425d7d:	adc    ah,BYTE PTR [eax]
  425d7f:	mov    bh,0xd8
  425d81:	and    eax,0xc8625695
  425d86:	dec    eax
  425d87:	pop    es
  425d88:	and    cl,ch
  425d8a:	cdq    
  425d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d8c:	lahf   
  425d8d:	rcr    ecx,cl
  425d8f:	out    0x6,ax
  425d92:	fwait
  425d93:	dec    eax
  425d94:	sbb    dh,bh
  425d96:	inc    eax
  425d97:	pop    esi
  425d98:	iret   
  425d99:	call   0xf5871240
  425d9e:	into   
  425d9f:	fs xchg edx,eax
  425da1:	fst    DWORD PTR [edx+0x4a770dc4]
  425da7:	outs   dx,BYTE PTR ds:[esi]
  425da8:	sbb    ecx,DWORD PTR [ebx+0x53d6465b]
  425dae:	adc    ebp,ebx
  425db0:	loop   0x425d59
  425db2:	mov    al,0x75
  425db4:	call   DWORD PTR [esi]
  425db6:	repz data16 rcl ah,1
  425dba:	daa    
  425dbb:	data16 sbb bh,BYTE PTR [esi*2+0x337aca4f]
  425dc3:	jecxz  0x425e23
  425dc5:	push   edi
  425dc6:	dec    ebx
  425dc7:	inc    edx
  425dc8:	mov    edx,0xc667462c
  425dcd:	or     ecx,ebx
  425dcf:	mov    eax,0x3755021
  425dd4:	add    edx,ecx
  425dd6:	xchg   ebp,eax
  425dd7:	pop    edi
  425dd8:	das    
  425dd9:	push   edx
  425dda:	dec    eax
  425ddb:	dec    ebx
  425ddc:	retf   
  425ddd:	pop    ebp
  425dde:	daa    
  425ddf:	or     edi,0x7a
  425de2:	dec    ecx
  425de3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425de4:	mov    dh,0x28
  425de6:	ja     0x425de7
  425de8:	jle    0x425da5
  425dea:	dec    ecx
  425deb:	out    0x6a,al
  425ded:	out    dx,eax
  425dee:	xor    al,0x9d
  425df0:	sub    ebx,ecx
  425df2:	or     edx,edi
  425df4:	xchg   edx,eax
  425df5:	neg    BYTE PTR [eax+0x3f41dc12]
  425dfb:	(bad)
  425dff:	call   0xd94c:0x513b6a7b
  425e06:	adc    bl,BYTE PTR [edi+0x4b]
  425e09:	lock mov dl,0xab
  425e0c:	imul   edi,DWORD PTR [ebx+0x24],0x4837db34
  425e13:	imul   ebp,DWORD PTR [esi-0x43e2d243],0x0
  425e1a:	cmp    BYTE PTR [edi],al
  425e1c:	lods   al,BYTE PTR ds:[esi]
  425e1d:	loope  0x425e4f
  425e1f:	daa    
  425e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425e21:	or     cl,0x6a
  425e24:	sbb    BYTE PTR [ecx+0x4b],0x46
  425e28:	clc    
  425e29:	leave  
  425e2a:	test   edx,esi
  425e2c:	cwde   
  425e2d:	fst    DWORD PTR [eax]
  425e2f:	leave  
  425e30:	stos   BYTE PTR es:[edi],al
  425e31:	repnz (bad) 
  425e33:	lods   al,BYTE PTR ds:[esi]
  425e34:	aad    0xe5
  425e36:	inc    ebp
  425e37:	push   ds
  425e38:	and    cl,BYTE PTR [eax+ecx*2-0x7e7bdb2]
  425e3f:	sub    al,0xf4
  425e41:	push   ecx
  425e42:	packuswb mm2,QWORD PTR [ebp+0x71]
  425e46:	mov    ah,0xd4
  425e48:	sbb    cl,BYTE PTR [edi+0x5262c818]
  425e4e:	gs dec edx
  425e50:	jo     0x425e51
  425e52:	xor    ebx,0xbec9d91f
  425e58:	test   DWORD PTR [eax+0x40],edx
  425e5b:	adc    BYTE PTR [eax],bl
  425e5d:	jl     0x425eab
  425e5f:	inc    eax
  425e60:	stos   DWORD PTR es:[edi],eax
  425e61:	stos   DWORD PTR es:[edi],eax
  425e62:	dec    eax
  425e63:	les    edi,FWORD PTR [ecx]
  425e65:	lods   al,BYTE PTR ds:[esi]
  425e66:	and    BYTE PTR [ecx+0x673e6ce6],ah
  425e6c:	cs rdmsr 
  425e6f:	test   al,0x2e
  425e71:	sbb    BYTE PTR [ebp+0xc],cl
  425e74:	or     dl,bl
  425e76:	lahf   
  425e77:	or     DWORD PTR [ebx+0x6a],ebp
  425e7a:	or     al,0x5e
  425e7c:	and    al,0x21
  425e7e:	mov    al,0xad
  425e80:	sbb    dh,ch
  425e82:	outs   dx,BYTE PTR ds:[esi]
  425e83:	cmp    eax,0xa67edb93
  425e88:	sbb    al,BYTE PTR [eax+0xd]
  425e8b:	or     al,0x3f
  425e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e8e:	ja     0x425e77
  425e90:	pop    ss
  425e91:	push   ss
  425e92:	(bad)  
  425e93:	sbb    bh,BYTE PTR fs:[ebp-0x21]
  425e97:	shl    ah,1
  425e99:	data16 loop 0x425ee1
  425e9c:	sbb    al,0xc3
  425e9e:	dec    ebp
  425e9f:	sub    eax,0x9c2ad833
  425ea4:	sub    ebx,ecx
  425ea6:	adc    eax,0x3e79e8a7
  425eab:	addr16 and eax,0x975f11ca
  425eb1:	into   
  425eb2:	pop    ebp
  425eb3:	pop    es
  425eb4:	sbb    ebx,DWORD PTR [ebx]
  425eb6:	push   edi
  425eb7:	xor    cl,dh
  425eb9:	sub    esp,edi
  425ebb:	xor    dl,BYTE PTR [edx+edi*4-0x38]
  425ebf:	mov    eax,ds:0x2bd4d516
  425ec4:	cwde   
  425ec5:	retf   0xe24e
  425ec8:	sbb    bl,ah
  425eca:	ret    
  425ecb:	js     0x425ed5
  425ecd:	ins    BYTE PTR es:[edi],dx
  425ece:	xchg   bl,bh
  425ed0:	push   ebp
  425ed1:	ficomp DWORD PTR [esi]
  425ed3:	sub    dh,BYTE PTR [ecx+esi*2+0x60]
  425ed7:	std    
  425ed8:	push   ebx
  425ed9:	test   eax,0x402190ee
  425ede:	and    eax,0x6a34a3bc
  425ee3:	push   0x5247efd1
  425ee8:	jmp    0x425f21
  425eea:	add    BYTE PTR [edx-0x58],dh
  425eed:	xor    al,0x77
  425eef:	mov    ebp,0x8c888b4e
  425ef4:	sbb    al,bl
  425ef6:	pop    ecx
  425ef7:	ds (bad) 
  425ef9:	out    dx,eax
  425efa:	int    0x10
  425efc:	(bad)  
  425efe:	mov    ds:0x5fecfe42,eax
  425f03:	jae    0x425ea7
  425f05:	add    esi,DWORD PTR [ebp-0x8ede5c0]
  425f0b:	cld    
  425f0c:	adc    ah,al
  425f0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f0f:	add    al,0x73
  425f11:	(bad)  
  425f13:	out    dx,al
  425f14:	xchg   esp,eax
  425f15:	lods   al,BYTE PTR ds:[esi]
  425f16:	dec    ebx
  425f17:	int    0x42
  425f19:	push   ebp
  425f1a:	add    bh,BYTE PTR [ecx+0x714ae193]
  425f20:	jnp    0x425ed3
  425f22:	inc    eax
  425f23:	mov    bh,0xe1
  425f25:	fcos   
  425f27:	cwde   
  425f28:	and    al,0xbe
  425f2a:	and    bl,dh
  425f2c:	inc    eax
  425f2d:	ins    DWORD PTR es:[edi],dx
  425f2e:	and    ch,BYTE PTR [ecx]
  425f30:	pop    edi
  425f31:	add    al,0x4f
  425f33:	outs   dx,BYTE PTR ds:[esi]
  425f34:	dec    ebp
  425f35:	mov    al,0xf7
  425f37:	addr16 jnp 0x425ee1
  425f3a:	jb     0x425f7a
  425f3c:	stos   DWORD PTR es:[edi],eax
  425f3d:	and    eax,ebx
  425f3f:	pusha  
  425f40:	daa    
  425f41:	cmp    DWORD PTR [ebx+0x59b59c9c],eax
  425f47:	int3   
  425f48:	sbb    cl,dl
  425f4a:	loopne 0x425fa8
  425f4c:	ins    BYTE PTR es:[edi],dx
  425f4d:	mov    bl,0x36
  425f4f:	loop   0x425fa7
  425f51:	xor    DWORD PTR [edi-0x15],ebx
  425f54:	sbb    ch,ch
  425f56:	into   
  425f57:	ss and ah,bl
  425f5a:	add    eax,0x25fb1a19
  425f5f:	dec    esp
  425f60:	mov    ds:0x979b0283,eax
  425f65:	fsin   
  425f67:	adc    esi,ecx
  425f69:	mov    al,ds:0xc97fccc6
  425f6e:	and    al,0x33
  425f70:	sar    DWORD PTR [edx],cl
  425f72:	cwde   
  425f73:	dec    edx
  425f74:	inc    ecx
  425f75:	pop    esi
  425f76:	dec    eax
  425f77:	mov    esi,0x1c2353b6
  425f7c:	rcr    ecx,1
  425f7e:	pop    ebp
  425f7f:	jecxz  0x425f2f
  425f81:	pop    ecx
  425f82:	rol    ch,cl
  425f84:	push   ecx
  425f85:	cmp    eax,0x1f760e21
  425f8a:	dec    eax
  425f8b:	repnz add eax,0x57612614
  425f91:	push   ebx
  425f92:	jbe    0x425f39
  425f94:	bound  eax,QWORD PTR [edx-0x3ca37738]
  425f9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425f9b:	imul   DWORD PTR [edx]
  425f9d:	or     cl,BYTE PTR [eax+0x4c]
  425fa0:	in     eax,dx
  425fa1:	add    BYTE PTR [ebx+0x22],dl
  425fa4:	(bad)
  425fa7:	jl     0x425fee
  425fa9:	out    0x83,al
  425fab:	data16 fwait
  425fad:	out    0x49,eax
  425faf:	lods   al,BYTE PTR ds:[esi]
  425fb0:	adc    eax,0xe0154835
  425fb5:	jb     0x425fc0
  425fb7:	jbe    0x425f3e
  425fb9:	xor    edx,ecx
  425fbb:	jne    0x425f46
  425fbd:	imul   ebx,DWORD PTR [ecx+0x67],0xfbc8bca2
  425fc4:	sbb    bh,BYTE PTR [ebx-0x5a497a09]
  425fca:	fdiv   QWORD PTR [edi]
  425fcc:	push   ds
  425fcd:	xchg   ecx,eax
  425fce:	or     al,0xfd
  425fd0:	es xchg esi,eax
  425fd2:	pop    ecx
  425fd3:	add    WORD PTR [edx+0x77],cx
  425fd7:	sar    dl,1
  425fd9:	inc    ecx
  425fda:	pop    es
  425fdb:	sti    
  425fdc:	push   edx
  425fdd:	inc    edx
  425fde:	outs   dx,BYTE PTR ds:[esi]
  425fdf:	xchg   edx,eax
  425fe0:	ds mov ch,0x48
  425fe3:	leave  
  425fe4:	outs   dx,DWORD PTR ds:[esi]
  425fe5:	fmul   QWORD PTR [ebx+0x48]
  425fe8:	imul   esi,DWORD PTR [edi+0x2e],0x3c00aa14
  425fef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ff0:	sbb    bl,BYTE PTR [ecx+0x38dc4a59]
  425ff6:	jmp    0xf583:0xdad95919
  425ffd:	jns    0x425f9c
  425fff:	xchg   ebp,eax
  426000:	retf   0x4e9
  426003:	fstp   QWORD PTR [ebx]
  426005:	xchg   ecx,eax
  426006:	dec    eax
  426007:	test   eax,0x207f5117
  42600c:	fwait
  42600d:	mov    bl,0x3c
  42600f:	addr16 or esi,eax
  426012:	mov    fs,esp
  426014:	push   edx
  426015:	mov    esp,0xd99f9974
  42601a:	mov    edi,0x30841d42
  42601f:	clc    
  426020:	out    0xd9,eax
  426022:	inc    ebx
  426023:	in     eax,dx
  426024:	push   ebx
  426025:	adc    DWORD PTR [edx-0x36d32ca2],ebp
  42602b:	pop    ecx
  42602c:	sti    
  42602d:	mov    dl,0x48
  42602f:	sbb    BYTE PTR [edi+0x359d4b9a],dl
  426035:	xchg   DWORD PTR ds:0x1be17567,ebp
  42603b:	int3   
  42603c:	sub    DWORD PTR [ebx+0x1991b300],ebp
  426042:	sbb    eax,0xb5ef8692
  426047:	or     ebp,DWORD PTR [ebx+0x42]
  42604a:	push   0x66
  42604c:	pop    esi
  42604d:	cmp    BYTE PTR fs:[ebp+0x1a],al
  426051:	xor    eax,edx
  426053:	call   0xd93f:0x528aa6b6
  42605a:	or     BYTE PTR [eax+eax*8+0x5698c555],ch
  426061:	jns    0x42608f
  426063:	push   0xa153a101
  426068:	mov    al,ds:0x27e73120
  42606d:	fld    DWORD PTR [esi+0x2317882a]
  426073:	es aas 
  426075:	jno    0x42605e
  426077:	xbegin 0x2a52afa1
  42607d:	(bad)  
  42607e:	lock mov dh,0xf3
  426081:	push   eax
  426082:	xchg   esi,ebp
  426084:	sbb    ebp,DWORD PTR [esi]
  426086:	sub    BYTE PTR [ebp+0x1c],0x9
  42608a:	in     eax,0x5b
  42608c:	adc    DWORD PTR [esi-0x20fcf5d0],esi
  426092:	data16 int3 
  426094:	adc    edx,DWORD PTR [ecx-0x38]
  426097:	push   0xffffffee
  426099:	fld    DWORD PTR [edi]
  42609b:	repnz dec esp
  42609d:	into   
  42609e:	push   ss
  42609f:	fnsave [esi]
  4260a1:	xchg   edx,eax
  4260a2:	out    dx,al
  4260a3:	mov    ecx,0x254ee499
  4260a8:	dec    edx
  4260a9:	sbb    DWORD PTR [edx],esp
  4260ab:	mov    ch,0xdb
  4260ad:	fst    DWORD PTR [ebp-0x39]
  4260b0:	test   al,0x44
  4260b2:	mov    edx,edi
  4260b4:	js     0x4260cb
  4260b6:	fiadd  WORD PTR [esi]
  4260b8:	retf   
  4260b9:	cld    
  4260ba:	inc    edi
  4260bb:	or     BYTE PTR [ebx+ecx*2+0x60],dh
  4260bf:	jmp    0xe730:0x850fecc8
  4260c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4260c7:	adc    DWORD PTR es:[eax-0x2f],esp
  4260cb:	leave  
  4260cc:	pop    ebx
  4260cd:	mov    ds:0xeb794b48,eax
  4260d2:	jl     0x426094
  4260d4:	and    ebx,edi
  4260d6:	fsubr  DWORD PTR [eax+0x3b]
  4260d9:	(bad)
  4260dd:	fild   DWORD PTR [edi+0x4bd73191]
  4260e3:	imul   ebp,edx,0xffffffd8
  4260e6:	inc    ecx
  4260e7:	add    ecx,DWORD PTR [ecx+edi*2+0x1]
  4260eb:	out    0xcf,eax
  4260ed:	out    0x11,eax
  4260ef:	sub    ebx,DWORD PTR [esi+edx*4-0x4c652d2e]
  4260f6:	or     BYTE PTR [edi+ebx*1],bh
  4260f9:	push   es
  4260fa:	add    al,0xf7
  4260fc:	stc    
  4260fd:	out    dx,eax
  4260fe:	(bad)  
  4260ff:	in     al,0x6a
  426101:	sbb    dl,BYTE PTR [edi+0x57]
  426104:	outs   dx,BYTE PTR ds:[esi]
  426105:	xor    DWORD PTR [ebp+0x13e72af3],0xc
  42610c:	jo     0x4260fe
  42610e:	call   0x1aa4:0xe7fd04fd
  426115:	push   ebx
  426116:	je     0x42609f
  426118:	or     bh,BYTE PTR [ebx]
  42611a:	add    ch,BYTE PTR [edi]
  42611c:	ins    BYTE PTR es:[edi],dx
  42611d:	add    eax,0xd9edcd50
  426122:	call   0x5915:0xbbe380c9
  426129:	mov    ds:0x20f2ddac,eax
  42612e:	mov    ch,0xe6
  426130:	xor    al,0x7e
  426132:	xchg   edx,eax
  426133:	pop    eax
  426134:	xchg   BYTE PTR [edx+0x4c],bl
  426137:	pushw  0x87b7
  42613b:	push   es
  42613c:	sbb    ch,BYTE PTR [ebx+edi*4+0x2d]
  426140:	and    al,BYTE PTR [esi+0x13]
  426143:	test   ebp,ebp
  426145:	fnstcw WORD PTR [edi+edi*2-0x612e6edc]
  42614c:	jne    0x4261ca
  42614e:	sar    BYTE PTR [ebp+0x544b3330],1
  426154:	lods   al,BYTE PTR ds:[esi]
  426155:	jno    0x426165
  426157:	push   ds
  426158:	dec    ecx
  426159:	(bad)  [eax]
  42615b:	sbb    bl,BYTE PTR [ebx]
  42615d:	sub    ecx,DWORD PTR [edi-0x54]
  426160:	xchg   ah,ah
  426162:	pop    ebx
  426163:	out    dx,al
  426164:	outs   dx,DWORD PTR ds:[esi]
  426165:	dec    ecx
  426166:	dec    eax
  426167:	in     eax,dx
  426168:	push   es
  426169:	add    eax,0x8c793a0a
  42616e:	lahf   
  42616f:	data16 (bad) 
  426171:	inc    DWORD PTR [esi+esi*2-0x37647e6]
  426178:	ja     0x42619a
  42617a:	ja     0x4261e7
  42617c:	dec    esp
  42617d:	push   ss
  42617e:	push   0x1dbe1aa2
  426183:	cmp    eax,0x12c6f027
  426188:	add    al,0x39
  42618a:	adc    DWORD PTR [esi+0x59],0x2e2ac476
  426191:	out    0x23,eax
  426193:	das    
  426194:	out    dx,al
  426195:	jns    0x426196
  426197:	je     0x42617d
  426199:	push   es
  42619a:	cmp    ecx,ebx
  42619c:	sbb    dl,bl
  42619e:	cwde   
  42619f:	(bad)  
  4261a0:	adc    eax,0xbbd147ad
  4261a5:	pop    eax
  4261a6:	inc    eax
  4261a7:	sub    dh,ch
  4261a9:	ret    
  4261aa:	inc    edi
  4261ab:	inc    edi
  4261ac:	outs   dx,BYTE PTR ds:[esi]
  4261ad:	int3   
  4261ae:	push   ebx
  4261af:	inc    ebx
  4261b0:	push   edi
  4261b1:	fldcw  WORD PTR [eax+0x1fad2944]
  4261b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4261b8:	sbb    ebp,DWORD PTR [ebp-0x49]
  4261bb:	popa   
  4261bc:	push   ss
  4261bd:	dec    ebx
  4261be:	and    ah,BYTE PTR ds:0xffa573e6
  4261c4:	les    ebp,FWORD PTR [edx]
  4261c6:	scas   eax,DWORD PTR es:[edi]
  4261c7:	sahf   
  4261c8:	test   DWORD PTR [edx+0x5875848],ebp
  4261ce:	add    ch,BYTE PTR [ecx+0x79]
  4261d1:	adc    eax,0x359a9867
  4261d6:	daa    
  4261d7:	pop    ds
  4261d8:	in     al,0x19
  4261da:	or     al,BYTE PTR [edx+0x66523d44]
  4261e0:	sbb    DWORD PTR [ebp+0x721a2544],0xffffff9d
  4261e7:	mov    DWORD PTR [ecx+0x27],eax
  4261ea:	ret    
  4261eb:	sar    DWORD PTR [edi],1
  4261ed:	fcos   
  4261ef:	dec    eax
  4261f0:	mov    es,WORD PTR [ebx+0x2e]
  4261f3:	xor    BYTE PTR [esi],bh
  4261f5:	(bad)  
  4261f6:	aad    0x8
  4261f8:	repz xor ebx,DWORD PTR [eax+0x48d0d3a2]
  4261ff:	or     bl,BYTE PTR [eax]
  426201:	(bad)  
  426202:	mov    bl,0xa6
  426204:	dec    ecx
  426205:	inc    esi
  426206:	vmwrite esp,DWORD PTR [edi]
  426209:	out    dx,al
  42620a:	pop    edi
  42620b:	outs   dx,DWORD PTR ds:[esi]
  42620c:	mov    ah,0xce
  42620e:	enter  0x1ab0,0x14
  426212:	and    al,0xa0
  426214:	out    dx,eax
  426215:	push   esi
  426216:	push   0x55
  426218:	fld    DWORD PTR ss:[ebx]
  42621b:	add    al,0x62
  42621d:	fist   WORD PTR [ecx]
  42621f:	mov    al,0xe2
  426221:	sub    eax,0x37f265b3
  426226:	dec    eax
  426227:	test   eax,0xc6e2cc2f
  42622c:	idiv   BYTE PTR cs:[edi+eax*2]
  426230:	imul   ebx,DWORD PTR [ecx-0x4f5e7112],0x21af102
  42623a:	pop    eax
  42623b:	or     BYTE PTR [eax],ch
  42623d:	push   ds
  42623e:	pop    ecx
  42623f:	js     0x42620b
  426241:	fst    DWORD PTR ds:0x6e533eed
  426247:	clc    
  426248:	xor    eax,0xfbf24e0e
  42624d:	add    ecx,DWORD PTR [eax+0x1a]
  426250:	mov    fs,WORD PTR ss:[ecx+0x1aef8288]
  426257:	scas   al,BYTE PTR es:[di]
  426259:	xor    bh,bl
  42625b:	xchg   ecx,eax
  42625c:	and    DWORD PTR [ebx-0x2a],esi
  42625f:	sbb    eax,ebx
  426261:	xor    eax,0x5935213f
  426266:	retf   0x814a
  426269:	aam    0xf4
  42626b:	push   ss
  42626c:	xchg   esp,ebp
  42626e:	mov    al,ds:0x4e3f6166
  426273:	dec    esp
  426274:	sbb    dl,BYTE PTR [ecx]
  426276:	add    BYTE PTR [esp+esi*4+0x1e],ch
  42627a:	lahf   
  42627b:	mov    edx,es
  42627d:	fldenv [ecx]
  42627f:	adc    al,0x7
  426281:	fwait
  426282:	das    
  426283:	aaa    
  426284:	adc    esi,DWORD PTR [ecx+0x4959618e]
  42628a:	dec    eax
  42628b:	test   BYTE PTR [eax+0x70],ch
  42628e:	stos   BYTE PTR es:[edi],al
  42628f:	and    eax,0x6464d975
  426294:	mov    eax,ds:0x2c4fa1a3
  426299:	leave  
  42629a:	add    ebx,eax
  42629c:	pop    ds
  42629d:	push   cs
  42629e:	dec    ebx
  42629f:	xchg   esp,eax
  4262a0:	jl     0x42626b
  4262a2:	jb     0x426268
  4262a4:	ins    DWORD PTR es:[edi],dx
  4262a5:	fldcw  WORD PTR [edi+0x28efa3aa]
  4262ab:	pop    ebp
  4262ac:	addr16 dec ecx
  4262ae:	add    eax,0x484b3614
  4262b3:	and    DWORD PTR [edi],edx
  4262b5:	mov    ch,0xd4
  4262b7:	cli    
  4262b8:	mov    ch,0xdb
  4262ba:	dec    eax
  4262bb:	jecxz  0x4262bc
  4262bd:	pop    esi
  4262be:	fcomip st,st(3)
  4262c0:	jp     0x42632b
  4262c2:	xor    edi,DWORD PTR [edi]
  4262c4:	sbb    ah,BYTE PTR [ecx]
  4262c6:	lahf   
  4262c7:	clc    
  4262c8:	xor    DWORD PTR [ebx-0x74],esi
  4262cb:	or     al,0xa1
  4262cd:	fld    st(2)
  4262cf:	js     0x42632c
  4262d1:	jmp    0x165c5668
  4262d6:	jnp    0x426322
  4262d8:	js     0x4262d3
  4262da:	dec    eax
  4262db:	popa   
  4262dc:	pop    eax
  4262dd:	daa    
  4262de:	cmp    DWORD PTR [eax+ebp*1],esp
  4262e1:	fldenv [ebx]
  4262e3:	inc    edx
  4262e4:	pop    esp
  4262e5:	cmp    DWORD PTR [esi-0x6e],ebx
  4262e8:	jle    0x4262d4
  4262ea:	int    0x28
  4262ec:	push   ebx
  4262ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262ee:	dec    eax
  4262ef:	jecxz  0x4262f8
  4262f1:	and    eax,0xd9b8145
  4262f6:	or     al,0x67
  4262f8:	jb     0x42635b
  4262fa:	pop    ss
  4262fb:	into   
  4262fc:	sbb    ah,BYTE PTR [eax+0x2d5b9d85]
  426302:	inc    edx
  426303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426304:	neg    cl
  426306:	dec    edi
  426307:	mov    ebx,0x5e736c9f
  42630c:	xchg   esi,eax
  42630d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42630e:	ds sub eax,0xba3d990
  426314:	and    BYTE PTR [ebx+0x5789bc6b],al
  42631a:	fwait
  42631b:	or     al,0x4
  42631d:	(bad)
  426320:	fnstsw WORD PTR [esi]
  426322:	jb     0x42635d
  426324:	or     cl,BYTE PTR [edi+0x41]
  426327:	inc    ebp
  426328:	into   
  426329:	cld    
  42632a:	inc    edi
  42632b:	sahf   
  42632c:	fwait
  42632d:	(bad)  
  42632e:	fcom   QWORD PTR [edx+0x6726ea18]
  426334:	dec    edx
  426335:	out    0xbe,eax
  426337:	pop    ds
  426338:	jbe    0x426364
  42633a:	pop    ds
  42633b:	(bad)  
  42633c:	scas   eax,DWORD PTR es:[edi]
  42633d:	jg     0x4262d7
  42633f:	data16 sub BYTE PTR es:[eax-0xb0a1477],bh
  426347:	fild   WORD PTR [ecx-0x8]
  42634a:	adc    esi,DWORD PTR [ebx+0x2724dcd5]
  426350:	je     0x42635b
  426352:	mov    bl,BYTE PTR [esp+edx*2+0x75f9480d]
  426359:	std    
  42635a:	enter  0x33e8,0x64
  42635e:	or     dh,BYTE PTR [ebp+0x5a]
  426361:	test   al,0x8e
  426363:	aad    0xc3
  426365:	dec    ecx
  426366:	(bad)  
  426367:	cmp    DWORD PTR [esi+edi*8+0x55],esp
  42636b:	das    
  42636c:	daa    
  42636d:	test   BYTE PTR [esi+0x282706a7],bh
  426373:	in     eax,0x7a
  426375:	and    edx,edx
  426377:	data16 aad 0x5e
  42637a:	mov    ebx,DWORD PTR [ebx+0x1a]
  42637d:	sub    al,0x6c
  42637f:	cmp    DWORD PTR [ebx-0x6c270243],ebp
  426385:	loopne 0x42634b
  426387:	inc    esp
  426388:	pop    esp
  426389:	xor    DWORD PTR es:[edx-0x396d325d],eax
  426390:	sbb    bh,BYTE PTR [ebx]
  426392:	cmp    DWORD PTR [ebx+0x37f2ddd],eax
  426398:	not    BYTE PTR [ecx]
  42639a:	jne    0x42633e
  42639c:	sbb    ebx,DWORD PTR [ebp+0x4d]
  42639f:	xor    eax,0x75365020
  4263a4:	pop    ss
  4263a5:	sahf   
  4263a6:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263a8:	and    ebp,esi
  4263aa:	or     DWORD PTR [ebx-0x6681a986],ebx
  4263b0:	adc    DWORD PTR [ecx-0x26bf590a],0xffffffa9
  4263b7:	ja     0x4263b8
  4263b9:	xchg   cl,bh
  4263bb:	push   cs
  4263bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4263bd:	push   edi
  4263be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4263bf:	sub    BYTE PTR [esi-0x5f],dl
  4263c2:	cmp    BYTE PTR [esi],cl
  4263c4:	lods   eax,DWORD PTR ds:[esi]
  4263c5:	jecxz  0x42641c
  4263c7:	in     eax,dx
  4263c8:	stos   BYTE PTR es:[edi],al
  4263c9:	iret   
  4263ca:	mov    ah,BYTE PTR [edx-0x850a34]
  4263d0:	out    0x59,eax
  4263d2:	call   FWORD PTR [edi-0x62]
  4263d5:	(bad)  
  4263d6:	jle    0x42642c
  4263d8:	sbb    al,BYTE PTR [ebp-0x7dfe8d3f]
  4263de:	adc    esp,DWORD PTR [ebx+0x5]
  4263e1:	jmp    0xa6d33f7f
  4263e6:	es std 
  4263e8:	cli    
  4263e9:	inc    ecx
  4263ea:	dec    eax
  4263eb:	sub    edi,DWORD PTR [ecx]
  4263ed:	in     al,0xe5
  4263ef:	xchg   esi,eax
  4263f0:	pop    edx
  4263f1:	dec    ebx
  4263f2:	jno    0x4263ce
  4263f4:	xor    DWORD PTR [ebx-0x473a9fff],ebp
  4263fa:	mov    ds:0xff920566,eax
  4263ff:	mov    ds:0x3b158b29,al
  426404:	sbb    eax,0xb779879
  426409:	stc    
  42640a:	cmp    esp,DWORD PTR [esi-0x67]
  42640d:	pop    edx
  42640e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42640f:	ror    WORD PTR [edi+0x79],1
  426413:	push   es
  426414:	sbb    ebx,DWORD PTR [ecx]
  426416:	inc    ebp
  426417:	test   al,0x10
  426419:	lds    edx,FWORD PTR [ecx-0x6851f9c4]
  42641f:	test   BYTE PTR [edx-0x26],dl
  426422:	mov    dl,0xdf
  426424:	stc    
  426425:	and    eax,ebp
  426427:	mov    esi,0xd4d7c5ff
  42642c:	sbb    al,BYTE PTR [ecx]
  42642e:	ror    DWORD PTR [eax+0x5],0xf7
  426432:	jnp    0x42643c
  426434:	xor    eax,0x650807d9
  426439:	std    
  42643a:	pop    eax
  42643b:	aas    
  42643c:	jns    0x42644e
  42643e:	sahf   
  42643f:	or     eax,0x57515272
  426444:	dec    edi
  426445:	(bad)  
  426447:	pop    esp
  426448:	fidivr DWORD PTR [ebx-0x50e5e368]
  42644e:	mov    eax,ds:0xbdb26094
  426453:	pop    ecx
  426454:	jp     0x42642f
  426456:	popf   
  426457:	retf   
  426458:	sub    eax,0xad239f7c
  42645d:	call   0x1648:0x1493604b
  426464:	pop    edx
  426465:	jmp    0xa235:0xa3bb39c3
  42646c:	lock pushf 
  42646e:	dec    eax
  42646f:	ror    BYTE PTR [eax-0x1c6731a8],cl
  426475:	mov    edx,0x309e6d66
  42647a:	mov    BYTE PTR [ecx-0x30125ec],dl
  426480:	xchg   ebx,eax
  426481:	cmp    DWORD PTR [ecx+ecx*4-0x35],0xffffffd1
  426486:	pop    es
  426487:	shl    WORD PTR [edx+0xc780c49],0x7a
  42648f:	inc    esi
  426490:	push   esp
  426491:	sub    DWORD PTR [eax+0x65],ebp
  426494:	pmaxub mm2,QWORD PTR [esp+eax*2]
  426498:	into   
  426499:	mov    ch,0x71
  42649b:	fisttp QWORD PTR [eax+0x37e72b21]
  4264a1:	sub    ebx,edx
  4264a3:	push   edi
  4264a4:	ins    BYTE PTR es:[edi],dx
  4264a5:	cmc    
  4264a6:	push   edi
  4264a7:	hlt    
  4264a8:	or     BYTE PTR [ecx],cl
  4264aa:	dec    eax
  4264ab:	jge    0x426457
  4264ad:	(bad)  
  4264af:	sbb    DWORD PTR [esi],ebp
  4264b1:	ja     0x426448
  4264b3:	sbb    bh,BYTE PTR [ebx]
  4264b5:	scas   eax,DWORD PTR es:[edi]
  4264b6:	lock sub BYTE PTR [edx],bh
  4264b9:	or     ecx,DWORD PTR [edi-0x6a]
  4264bc:	retf   0x1f8e
  4264bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264c0:	not    DWORD PTR [ecx-0x133e7bc9]
  4264c6:	xor    esp,DWORD PTR [edi+0x22]
  4264c9:	push   cs
  4264ca:	or     edi,DWORD PTR [ebp-0x6795b3c9]
  4264d0:	pop    edx
  4264d1:	cmp    al,0xaf
  4264d3:	xchg   edi,eax
  4264d4:	and    eax,0x4c66256
  4264d9:	(bad)  
  4264da:	je     0x42647e
  4264dc:	mov    ch,0xc
  4264de:	dec    eax
  4264df:	and    al,BYTE PTR [ecx-0x6fcb102e]
  4264e5:	sbb    DWORD PTR [eax+0x4c],ecx
  4264e8:	inc    eax
  4264e9:	cmp    ecx,DWORD PTR [edx-0x39]
  4264ec:	call   0x312f:0x236655bb
  4264f3:	pop    ebx
  4264f4:	sbb    cl,BYTE PTR ds:0x75f7cb76
  4264fa:	sub    ebp,ebx
  4264fc:	pop    esi
  4264fd:	add    eax,0xd990ed2e
  426502:	adc    esp,eax
  426504:	retf   
  426505:	jns    0x4264e8
  426507:	sbb    DWORD PTR [ebx],ebx
  426509:	mov    al,ds:0x57d918ad
  42650e:	inc    esi
  42650f:	in     al,dx
  426510:	out    0xdc,al
  426512:	xlat   BYTE PTR ds:[ebx]
  426513:	scas   al,BYTE PTR es:[edi]
  426514:	sbb    al,0xa3
  426516:	stos   DWORD PTR es:[edi],eax
  426517:	jne    0x426596
  426519:	repnz push edx
  42651b:	push   esi
  42651c:	cli    
  42651d:	mov    esp,0x203e8179
  426522:	xor    bl,BYTE PTR cs:[edx]
  426525:	stos   BYTE PTR es:[edi],al
  426526:	adc    eax,0xfc049ee0
  42652b:	dec    edx
  42652c:	daa    
  42652d:	fld    st(1)
  42652f:	dec    edx
  426530:	jl     0x4265a6
  426532:	pop    ss
  426533:	imul   eax,DWORD PTR [edx+0x57e69e5],0x5a
  42653a:	test   BYTE PTR ds:0x2d0c8501,dl
  426540:	aad    0xd9
  426542:	adc    DWORD PTR [esp+ecx*8+0x4b0151ea],0x1af9fdc4
  42654d:	fs (bad) 
  42654f:	imul   ebx,ecx,0x1bf55d06
  426555:	test   DWORD PTR [edx-0x4],0x6521d692
  42655c:	sbb    al,bh
  42655e:	sbb    al,0xb
  426561:	call   0x3610:0x267603d1
  426568:	and    eax,0x5e0d0856
  42656d:	pop    ecx
  42656e:	aas    
  42656f:	jmp    0x5f6f:0xe33ee56b
  426576:	pop    ebx
  426577:	sar    ax,0xbb
  42657b:	adc    ebx,DWORD PTR [edi]
  42657d:	add    BYTE PTR [edx+ebx*1-0x52],cl
  426581:	mov    dh,0x7a
  426583:	push   es
  426584:	mov    BYTE PTR [edi-0x38],cl
  426587:	push   ebp
  426588:	mov    ?,WORD PTR [eax+0x614766db]
  42658e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42658f:	xor    bl,BYTE PTR [edx]
  426591:	pop    ecx
  426592:	sub    dh,BYTE PTR [edx+0x48]
  426595:	add    eax,DWORD PTR [ebp+0x36]
  426598:	mov    ah,0xd9
  42659a:	jge    0x42654b
  42659c:	(bad)  
  42659d:	push   0x77
  42659f:	(bad)  
  4265a0:	sti    
  4265a1:	jno    0x426548
  4265a3:	jg     0x4265fe
  4265a5:	push   edi
  4265a6:	dec    eax
  4265a7:	adc    DWORD PTR [eax-0x3c],esi
  4265aa:	ret    
  4265ab:	lods   eax,DWORD PTR ds:[esi]
  4265ac:	scas   eax,DWORD PTR es:[edi]
  4265ad:	adc    al,0xc1
  4265af:	je     0x42660a
  4265b1:	sbb    DWORD PTR [esi],esp
  4265b3:	cmp    al,0x72
  4265b5:	push   esi
  4265b6:	les    edx,FWORD PTR [ebp+0x1a]
  4265b9:	sub    eax,0xae040315
  4265be:	xchg   cx,ax
  4265c0:	or     bl,dl
  4265c2:	push   esi
  4265c3:	dec    edx
  4265c4:	dec    ecx
  4265c5:	pusha  
  4265c6:	adc    al,0xa4
  4265c8:	bound  edi,QWORD PTR [edx+0x7c]
  4265cb:	daa    
  4265cc:	cwde   
  4265cd:	xlat   BYTE PTR ds:[ebx]
  4265ce:	dec    eax
  4265cf:	sbb    DWORD PTR [eax+0x15],ecx
  4265d2:	enter  0xc96c,0xa7
  4265d6:	ret    
  4265d7:	addr16 jle 0x42656f
  4265da:	pop    ss
  4265db:	pop    esp
  4265dc:	dec    esi
  4265dd:	jo     0x426645
  4265df:	pop    esi
  4265e0:	sbb    bh,BYTE PTR [edx-0x4b226f40]
  4265e6:	int    0x16
  4265e8:	jb     0x4265c3
  4265ea:	pop    esp
  4265eb:	inc    esp
  4265ec:	inc    edx
  4265ed:	ins    BYTE PTR es:[edi],dx
  4265ee:	hlt    
  4265ef:	das    
  4265f0:	sahf   
  4265f1:	jo     0x426587
  4265f3:	push   0x77487b11
  4265f8:	addr16 pop esi
  4265fa:	call   0x677a1a35
  4265ff:	ins    DWORD PTR es:[edi],dx
  426600:	add    edi,DWORD PTR [edx+0xc]
  426603:	push   0x10
  426605:	loopne 0x426662
  426607:	dec    ebx
  426608:	in     eax,0x2b
  42660a:	stos   DWORD PTR es:[di],eax
  42660c:	jnp    0x426687
  42660e:	push   ss
  42660f:	in     eax,0x96
  426611:	adc    edx,DWORD PTR [ebx-0x5543072c]
  426617:	data16 xor cl,BYTE PTR [ebx]
  42661a:	mulps  xmm3,XMMWORD PTR [edx]
  42661d:	in     al,dx
  42661e:	test   BYTE PTR [edi+edi*4+0x4e],ah
  426622:	or     eax,0xe5d9d77c
  426627:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426628:	or     dl,BYTE PTR [edi-0x5e]
  42662b:	xchg   esp,eax
  42662c:	lods   al,BYTE PTR ds:[esi]
  42662d:	jge    0x42668b
  42662f:	sub    ch,dl
  426631:	push   esi
  426632:	test   DWORD PTR [esi-0x10],edi
  426635:	cmp    al,0x56
  426637:	xchg   ebp,eax
  426638:	pushf  
  426639:	fidiv  DWORD PTR [ebx]
  42663b:	pop    es
  42663c:	mov    ebp,0x991a04d9
  426641:	push   ss
  426642:	xor    eax,0x452da30f
  426647:	dec    ebx
  426648:	sbb    dh,BYTE PTR [ebx+0x22a400c3]
  42664e:	(bad)  
  42664f:	push   0x7aeddc1d
  426654:	out    0x6e,eax
  426656:	mov    esp,0xd6cf0a7b
  42665b:	les    ebp,FWORD PTR [eax]
  42665d:	adc    cl,al
  42665f:	mov    ?,WORD PTR [ebx-0x65a33ae0]
  426665:	ret    
  426666:	std    
  426667:	test   eax,0xc5cd932
  42666c:	pop    esp
  42666d:	inc    edx
  42666e:	test   BYTE PTR [eax-0x58],ch
  426671:	or     esp,DWORD PTR [esi-0x29]
  426674:	pop    ecx
  426675:	mov    WORD PTR [ecx+0x79],cs
  426678:	test   eax,0x93e649ad
  42667d:	fstp   DWORD PTR [edi]
  42667f:	loop   0x4266d7
  426681:	arpl   WORD PTR [esi-0x29],ax
  426684:	and    DWORD PTR [esi],ebp
  426686:	inc    DWORD PTR [edx+0x39]
  426689:	inc    esp
  42668a:	imul   ebx,DWORD PTR ds:[edi+0x55],0xec9ae714
  426692:	fadd   st(4),st
  426694:	adc    dl,bl
  426696:	mov    al,0x29
  426698:	xlat   BYTE PTR ds:[ebx]
  426699:	in     eax,dx
  42669a:	mov    DWORD PTR [eax],ebx
  42669c:	sar    BYTE PTR [esi],0x95
  42669f:	adc    BYTE PTR [edx],dl
  4266a1:	mov    al,ds:0xa19e7b74
  4266a6:	pop    di
  4266a8:	fcmovbe st,st(2)
  4266aa:	mov    edx,DWORD PTR [eax-0x44ca238a]
  4266b0:	mov    ebx,0xf2877bde
  4266b5:	repnz or esp,eax
  4266b8:	ss sbb eax,0x31ad2fb
  4266be:	push   eax
  4266bf:	inc    edx
  4266c0:	rol    DWORD PTR [edi-0x6e7a71f4],cl
  4266c6:	jp     0x42673d
  4266c8:	sbb    dh,ah
  4266ca:	in     eax,0x2f
  4266cc:	adc    esi,DWORD PTR [esi]
  4266ce:	inc    esp
  4266cf:	dec    edi
  4266d0:	xlat   BYTE PTR ds:[ebx]
  4266d1:	fstp   DWORD PTR [edi-0x26201781]
  4266d7:	add    DWORD PTR [eax-0x27],esp
  4266da:	dec    edx
  4266db:	sub    eax,0x4c1c73eb
  4266e0:	pop    ebx
  4266e1:	or     DWORD PTR [ecx+esi*4-0x13aec96b],ebp
  4266e8:	lods   al,BYTE PTR ds:[esi]
  4266e9:	test   eax,0xfd4b672a
  4266ee:	cli    
  4266ef:	clc    
  4266f0:	cmp    eax,0xf6ced924
  4266f6:	xor    al,0xe7
  4266f8:	dec    edi
  4266f9:	jmp    0x426763
  4266fb:	dec    ebp
  4266fc:	dec    ebp
  4266fd:	sub    BYTE PTR [eax+0x7a],cl
  426700:	dec    esp
  426701:	lods   al,BYTE PTR ds:[esi]
  426702:	test   bh,al
  426704:	pop    esp
  426705:	inc    edi
  426706:	sbb    al,0x67
  426708:	sub    dh,BYTE PTR ds:0x63812a2
  42670e:	rol    BYTE PTR [edi],cl
  426710:	popa   
  426711:	test   eax,0x9d4c8a40
  426717:	cmp    eax,0xdb66d9e2
  42671c:	add    edi,eax
  42671e:	or     BYTE PTR [esi+0x6b],al
  426721:	inc    ebx
  426722:	push   ebp
  426723:	cli    
  426724:	mov    bl,0x35
  426726:	dec    eax
  426727:	jp     0x426715
  426729:	aas    
  42672a:	repz mov esi,0xa3921a97
  426730:	add    BYTE PTR [esi-0x9283a38],dl
  426736:	sbb    edx,DWORD PTR [esi]
  426738:	pcmpeqd mm1,QWORD PTR [esi+ebx*8+0x5]
  42673d:	pop    edx
  42673e:	mov    ds:0xa28f13cc,eax
  426743:	clc    
  426744:	sbb    DWORD PTR [edi+0x57],eax
  426747:	mov    edx,0xd4aa99c5
  42674c:	ss in  eax,dx
  42674e:	push   ebp
  42674f:	jnp    0x42674d
  426751:	adc    ah,BYTE PTR [ecx-0x5b6fb49a]
  426757:	inc    eax
  426758:	sbb    dh,ah
  42675a:	cli    
  42675b:	mov    bl,0x6f
  42675d:	jge    0x4267da
  42675f:	inc    ebp
  426760:	mov    ds,ecx
  426762:	loop   0x42672b
  426764:	pusha  
  426765:	mov    eax,ds:0x92b7ed76
  42676a:	rcl    bl,1
  42676c:	sbb    bh,BYTE PTR [esi]
  42676e:	cs call 0xfbdec64b
  426774:	mov    ds:0xe85c31d9,eax
  426779:	sbb    DWORD PTR [edx+eiz*2],ecx
  42677c:	shl    BYTE PTR [esi-0x7bae966a],cl
  426782:	dec    eax
  426783:	es cdq 
  426785:	or     DWORD PTR ds:0x42b42757,eax
  42678b:	addr16 pop es
  42678d:	mov    esi,0x804020e3
  426792:	adc    BYTE PTR [esi],al
  426794:	sbb    cl,bh
  426796:	sbb    ebx,eax
  426798:	inc    eax
  426799:	push   edi
  42679a:	dec    ebx
  42679b:	mov    al,ds:0x66f5296b
  4267a0:	call   0xf8cc:0x1da8d83a
  4267a7:	add    eax,0x964cf5fe
  4267ac:	daa    
  4267ad:	xor    BYTE PTR [edx],0x22
  4267b0:	jmp    0xdbce:0x2662ab7d
  4267b7:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267b9:	xchg   esi,eax
  4267ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267bb:	ins    DWORD PTR es:[edi],dx
  4267bc:	sbb    al,BYTE PTR [esi]
  4267be:	or     ch,BYTE PTR [eax+ebx*8+0x1eeb120c]
  4267c5:	fst    DWORD PTR [ecx-0x53869029]
  4267cb:	sbb    DWORD PTR [edi-0x43],edi
  4267ce:	add    ebp,DWORD PTR [ebp+0x1a47dfdf]
  4267d4:	mov    al,ds:0xe77e75
  4267d9:	dec    edi
  4267da:	push   eax
  4267db:	addr16 dec ebx
  4267dd:	lock jb 0x426781
  4267e0:	in     eax,dx
  4267e1:	mov    DWORD PTR [ecx+0x48cdbc36],edi
  4267e7:	ins    BYTE PTR es:[edi],dx
  4267e8:	xor    al,0xaa
  4267ea:	ins    BYTE PTR es:[edi],dx
  4267eb:	into   
  4267ec:	(bad)  
  4267ed:	cmp    cl,BYTE PTR [ecx+0x7d]
  4267f0:	pop    es
  4267f1:	sub    cl,bh
  4267f3:	ins    DWORD PTR es:[edi],dx
  4267f4:	mov    BYTE PTR [edx],ah
  4267f6:	rcl    DWORD PTR [esi],0x1a
  4267f9:	sahf   
  4267fa:	pusha  
  4267fb:	out    dx,eax
  4267fc:	xor    al,0x44
  4267fe:	shl    DWORD PTR [ebx+0x231ad952],cl
  426804:	gs push ecx
  426806:	dec    ebp
  426807:	xlat   BYTE PTR ds:[ebx]
  426808:	inc    edx
  426809:	mov    bh,0xad
  42680b:	push   ecx
  42680c:	cdq    
  42680d:	(bad)  
  42680e:	clc    
  42680f:	or     DWORD PTR [edx],ebx
  426811:	jl     0x42684d
  426813:	retf   0x9e7c
  426816:	sbb    eax,0x8269bbab
  42681b:	add    eax,0x67883712
  426820:	es dec ebp
  426822:	jl     0x42686a
  426824:	add    DWORD PTR [edx+eiz*1+0x482ca34b],0x6f515bea
  42682f:	rcr    esi,cl
  426831:	hlt    
  426832:	frstor [esi+0x1d]
  426835:	(bad)  
  426836:	lock xchg esp,eax
  426838:	sbb    ch,BYTE PTR [ecx+0x4b067ea6]
  42683e:	pop    esp
  42683f:	sbb    BYTE PTR [edi-0x27],0xc1
  426843:	fadd   DWORD PTR [edx+edi*2]
  426846:	mov    dh,0xdd
  426848:	in     al,dx
  426849:	(bad)  
  42684a:	aad    0x89
  42684c:	lock mov ds:0x2e1b864f,al
  426852:	mov    al,ds:0x743c023f
  426857:	push   esi
  426858:	ror    BYTE PTR [edx+0x47f9f24],0x48
  42685f:	lds    ebp,FWORD PTR [ebx-0x3d]
  426862:	add    eax,0x48771699
  426867:	ficomp WORD PTR [ebp+eax*4+0x7a0da1d0]
  42686e:	nop
  42686f:	jle    0x4268d0
  426871:	leave  
  426872:	adc    eax,0x48c1d859
  426877:	nop
  426878:	shl    DWORD PTR ds:[esi],cl
  42687b:	jmp    FWORD PTR [edi]
  42687d:	and    eax,0x2ebc67b6
  426882:	(bad)  
  426883:	pop    esi
  426884:	out    dx,eax
  426885:	dec    ecx
  426886:	imul   edx,DWORD PTR [edx-0x79],0x98d947fe
  42688d:	sbb    al,0xed
  42688f:	retf   
  426890:	inc    ebp
  426891:	cmp    dl,bl
  426893:	test   ax,0x668a
  426897:	imul   ebx,DWORD PTR [edx],0x4f
  42689a:	mov    dl,0xa8
  42689c:	push   eax
  42689d:	or     eax,0x3168e232
  4268a2:	outs   dx,DWORD PTR ds:[esi]
  4268a3:	imul   ebx,DWORD PTR ds:0xca2c3d87,0xabe6db82
  4268ad:	mov    al,ds:0x98980540
  4268b2:	dec    eax
  4268b3:	xor    eax,0x9b6faa3
  4268b8:	clc    
  4268b9:	pop    esi
  4268ba:	ja     0x426924
  4268bc:	cmp    DWORD PTR [eax],ebx
  4268be:	push   es
  4268bf:	pop    edi
  4268c0:	jno    0x4268b1
  4268c2:	daa    
  4268c3:	sbb    al,0xd2
  4268c5:	gs dec edi
  4268c7:	inc    ebx
  4268c8:	sub    cl,BYTE PTR [ebx+ebx*2]
  4268cb:	add    esi,DWORD PTR [edx+0x32ed7de8]
  4268d1:	push   esi
  4268d2:	retf   0xc719
  4268d5:	push   cs
  4268d6:	mov    BYTE PTR [edx],bh
  4268d8:	sbb    ah,BYTE PTR [eax]
  4268da:	push   ebp
  4268db:	add    BYTE PTR [esi],al
  4268dd:	cmp    cl,BYTE PTR [edx]
  4268df:	sub    edx,DWORD PTR [ebx-0x39dae827]
  4268e5:	dec    ecx
  4268e6:	out    dx,al
  4268e7:	mov    bh,dl
  4268e9:	ds push edx
  4268eb:	or     ch,BYTE PTR [ebx+0x3975488b]
  4268f1:	sub    cl,cl
  4268f3:	fsubr  QWORD PTR [ebp-0x34]
  4268f6:	lock popw ss
  4268f9:	push   ecx
  4268fa:	scas   al,BYTE PTR es:[edi]
  4268fb:	es sbb dh,dh
  4268fe:	push   esp
  4268ff:	xor    DWORD PTR [esi+0x3],ebp
  426902:	xchg   ebp,eax
  426903:	ins    DWORD PTR es:[edi],dx
  426904:	dec    ebx
  426905:	ficom  DWORD PTR [ecx+0x7893320d]
  42690b:	cmp    DWORD PTR [edi-0x32],eax
  42690e:	scas   eax,DWORD PTR es:[edi]
  42690f:	cwde   
  426910:	xchg   ah,cl
  426912:	or     DWORD PTR [ebx+0x56],esp
  426915:	pop    ecx
  426916:	push   esi
  426917:	xor    dh,ch
  426919:	add    bl,ah
  42691b:	(bad)  
  42691c:	popa   
  42691d:	out    0x72,eax
  42691f:	push   ss
  426920:	imul   ebx,DWORD PTR [edx],0x429bdc19
  426926:	push   ecx
  426927:	in     al,0x5d
  426929:	test   eax,0xf23903ee
  42692e:	nop
  42692f:	nop
  426930:	loope  0x4268e6
  426932:	scas   eax,DWORD PTR es:[edi]
  426933:	pop    esp
  426934:	sub    ch,BYTE PTR [edx-0x1a109886]
  42693a:	mov    bh,0xe2
  42693c:	or     BYTE PTR [eax],ah
  42693e:	push   edi
  42693f:	adc    bh,BYTE PTR [eax]
  426941:	cwde   
  426942:	data16 jns 0x42691b
  426945:	push   0x7958d5a3
  42694a:	jecxz  0x4269af
  42694c:	mov    ebx,0x65b995b
  426951:	cld    
  426952:	cmp    BYTE PTR [ebx-0x7d9925e7],dl
  426958:	pop    ebx
  426959:	fisub  DWORD PTR [edi+edi*2+0x57]
  42695d:	dec    esp
  42695e:	shl    BYTE PTR [esi],0xed
  426961:	dec    ebp
  426962:	data16 xchg BYTE PTR fs:[esi+0x6ec4a878],ah
  42696a:	loope  0x4269d2
  42696c:	xchg   ebp,eax
  42696d:	shr    ecx,0x34
  426970:	inc    esi
  426971:	int    0x77
  426973:	lock and DWORD PTR [edx+0x2acabea0],ecx
  42697a:	sbb    DWORD PTR [eax+0x38],ebx
  42697d:	fstp   DWORD PTR [esi-0x76]
  426980:	aad    0x5d
  426982:	sub    eax,eax
  426984:	test   BYTE PTR [esi],bl
  426986:	adc    al,0x79
  426988:	xor    edx,DWORD PTR [ebx+0x56]
  42698b:	or     bh,BYTE PTR [esp+ebx*2+0x64]
  42698f:	push   esp
  426990:	add    BYTE PTR [ecx-0x26c81642],0x9a
  426997:	loop   0x4269e6
  426999:	mov    dh,0x9e
  42699b:	jmp    0x6d8c:0xa72da787
  4269a2:	dec    eax
  4269a3:	xor    eax,DWORD PTR [ebp-0x4afc523c]
  4269a9:	fld    st(1)
  4269ab:	fst    DWORD PTR [esi+0x6f]
  4269ae:	xchg   edi,eax
  4269af:	adc    BYTE PTR [esi-0x308878f0],cl
  4269b5:	pop    ecx
  4269b6:	add    BYTE PTR [ebx+0x2e],0xe9
  4269ba:	mov    bh,0x97
  4269bc:	mul    ah
  4269be:	mov    bl,0x8
  4269c0:	jno    0x4269eb
  4269c2:	xlat   BYTE PTR ds:[ebx]
  4269c3:	test   al,0xf
  4269c5:	lds    ecx,FWORD PTR [eax-0x36]
  4269c8:	sbb    ebp,esi
  4269ca:	in     eax,dx
  4269cb:	pop    ebp
  4269cc:	lds    ebp,FWORD PTR [eax]
  4269ce:	jns    0x4269aa
  4269d0:	call   0xb171:0x22beaa3
  4269d7:	inc    eax
  4269d8:	push   ss
  4269d9:	mov    esi,0xdb212cf2
  4269de:	mov    edi,0xbf11b592
  4269e3:	jp     0x426a53
  4269e5:	test   DWORD PTR [eax],edi
  4269e7:	popa   
  4269e8:	int    0x68
  4269ea:	mov    edx,0x414f5e66
  4269ef:	or     dh,bh
  4269f1:	cmp    al,0x11
  4269f3:	jecxz  0x4269ef
  4269f5:	add    eax,0xf991af48
  4269fa:	popa   
  4269fb:	sbb    bl,BYTE PTR [eax-0x51993705]
  426a01:	push   ecx
  426a02:	dec    esp
  426a03:	fistp  DWORD PTR [ebx]
  426a05:	inc    edi
  426a06:	sti    
  426a07:	jne    0x426a7a
  426a09:	and    al,bh
  426a0b:	mov    cl,0x2
  426a0d:	stos   DWORD PTR es:[edi],eax
  426a0e:	pop    ecx
  426a0f:	mov    ch,0xbf
  426a11:	jecxz  0x426a8b
  426a13:	xor    dx,sp
  426a16:	inc    esi
  426a17:	sbb    DWORD PTR [edx],0x1f5ee92f
  426a1d:	inc    eax
  426a1e:	mov    cl,0xda
  426a20:	sbb    ebx,ecx
  426a22:	inc    BYTE PTR [edx+ebp*2+0x4d3b8c89]
  426a29:	cmp    DWORD PTR [edx-0xe],0x6e482047
  426a30:	xor    dl,dl
  426a32:	jecxz  0x426a7f
  426a34:	bound  edi,QWORD PTR [eax+0x11]
  426a37:	addr16 push esp
  426a39:	lock sub dl,ch
  426a3c:	sbb    al,BYTE PTR [edx-0x32c979d9]
  426a42:	ret    
  426a43:	mov    bl,0xcd
  426a45:	fsincos 
  426a47:	cli    
  426a48:	test   BYTE PTR [eax-0x25],bh
  426a4b:	push   ebp
  426a4c:	pop    esp
  426a4d:	pushf  
  426a4e:	neg    BYTE PTR [esi]
  426a50:	and    eax,0xdc8d487c
  426a55:	adc    DWORD PTR [edi],0x2d9dfb58
  426a5b:	and    DWORD PTR [bx+si+0x2c22],edi
  426a60:	xchg   esp,eax
  426a61:	sbb    dh,BYTE PTR [esi]
  426a63:	mov    bl,0xc3
  426a65:	mov    ebp,0x4a60248
  426a6a:	pop    ecx
  426a6b:	loopne 0x426a1a
  426a6d:	dec    edi
  426a6e:	xchg   ebx,eax
  426a6f:	data16 mov BYTE PTR [ebx-0x32e564b3],dl
  426a76:	ficomp DWORD PTR [ecx]
  426a78:	jmp    0x393ee320
  426a7d:	fldenv [edi+0x613a2db8]
  426a83:	jne    0x426a07
  426a85:	popf   
  426a86:	retf   
  426a87:	arpl   WORD PTR [edx+ebx*2],ax
  426a8a:	sbb    BYTE PTR [ebx],0xc
  426a8d:	imul   ebx,DWORD PTR [edi],0x5d
  426a90:	add    al,ch
  426a92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a93:	(bad)  
  426a94:	jg     0x426a41
  426a96:	mov    al,ds:0x1aa8cf61
  426a9b:	push   0x2
  426a9d:	test   DWORD PTR [ecx+0x6d],esi
  426aa0:	xchg   esi,eax
  426aa1:	test   DWORD PTR [edx-0x1d],ecx
  426aa4:	scas   al,BYTE PTR es:[edi]
  426aa5:	in     al,dx
  426aa6:	push   esi
  426aa7:	mov    edi,edi
  426aa9:	xchg   ebp,eax
  426aaa:	repnz sub bx,cx
  426aae:	pop    esp
  426aaf:	call   FWORD PTR [ebx-0x7e]
  426ab2:	mov    esi,DWORD PTR [eax+eiz*8+0x21]
  426ab6:	dec    ecx
  426ab7:	daa    
  426ab8:	scas   al,BYTE PTR es:[edi]
  426ab9:	sub    al,0x74
  426abb:	inc    esi
  426abc:	(bad)  
  426abd:	leave  
  426abe:	dec    eax
  426abf:	ins    DWORD PTR es:[edi],dx
  426ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426ac1:	fnstenv [ebx+0x5f3dec76]
  426ac7:	in     eax,dx
  426ac8:	in     eax,dx
  426ac9:	adc    BYTE PTR [eax],dl
  426acb:	or     ebx,DWORD PTR [edi+edi*2+0x48]
  426acf:	and    DWORD PTR [eax+esi*8],eax
  426ad2:	xor    BYTE PTR [ecx],ah
  426ad4:	mov    ch,0xb7
  426ad6:	add    DWORD PTR [edi+0x76],esp
  426ad9:	pop    ss
  426ada:	add    ebp,0x39
  426add:	xchg   ecx,eax
  426ade:	ins    DWORD PTR es:[edi],dx
  426adf:	or     bl,BYTE PTR [edx+0x2df1d298]
  426ae5:	lahf   
  426ae6:	jbe    0x426a88
  426ae8:	icebp  
  426ae9:	aam    0xd7
  426aeb:	mov    al,ds:0x5548a726
  426af0:	and    BYTE PTR [ebx+0x18],dl
  426af3:	mov    ds,WORD PTR [ebx-0x1492b7e4]
  426af9:	sbb    bl,ah
  426afb:	mov    esi,0x6831299c
  426b00:	sub    ch,BYTE PTR [ebx-0x78]
  426b03:	sbb    BYTE PTR [ebp+0x7c86e5fc],bl
  426b09:	push   esi
  426b0a:	addr16 or eax,0x9888416e
  426b10:	sbb    dl,bl
  426b12:	shr    BYTE PTR [ebx-0x58],0xef
  426b16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b18:	jb     0x426ad9
  426b1a:	add    eax,0x486fe59a
  426b1f:	int    0xc9
  426b21:	lock outs dx,BYTE PTR cs:[esi]
  426b24:	imul   esp,DWORD PTR [ebp-0x6f],0x69
  426b28:	mov    edi,0x6e2811eb
  426b2d:	enter  0xe518,0xdd
  426b31:	cmp    ecx,DWORD PTR [eax+0x7e]
  426b34:	vpmacsdd xmm7,xmm2,xmm3,XMMWORD PTR [ebx]
  426b3a:	mov    fs,WORD PTR [esi-0x5d]
  426b3d:	jno    0x426b3b
  426b3f:	dec    esp
  426b40:	sbb    al,cl
  426b42:	js     0x426b6a
  426b44:	jns    0x426b0f
  426b46:	ins    DWORD PTR es:[edi],dx
  426b47:	sbb    BYTE PTR [ecx],al
  426b49:	fadd   QWORD PTR [ecx-0x62b62e7f]
  426b4f:	lahf   
  426b50:	cli    
  426b51:	imul   esi,edi,0xfeb71a6e
  426b57:	mov    ds:0x74146bb2,eax
  426b5c:	(bad)  
  426b5d:	fst    DWORD PTR ds:0x4b335a09
  426b63:	jle    0x426bdb
  426b65:	outs   dx,DWORD PTR ds:[esi]
  426b66:	arpl   WORD PTR [edi-0x3],bp
  426b69:	sbb    esp,DWORD PTR [ebx+eiz*4+0x7b]
  426b6d:	in     eax,dx
  426b6e:	(bad)  
  426b6f:	test   eax,0x2d1fe436
  426b74:	inc    ecx
  426b75:	sbb    DWORD PTR [eax],ecx
  426b77:	mov    ds:0x744c59b6,eax
  426b7c:	mov    esp,0x18e61530
  426b81:	xor    eax,0x322a3f4f
  426b86:	mov    ds:0xbfd9b83b,al
  426b8b:	mov    ecx,0x3870162d
  426b90:	jbe    0x426bf2
  426b92:	push   esp
  426b93:	xchg   edi,eax
  426b94:	retf   0x4f46
  426b97:	or     bl,BYTE PTR [edx]
  426b99:	and    al,0xa5
  426b9b:	xor    DWORD PTR [ebx],esi
  426b9d:	fldenv [ebx]
  426b9f:	jne    0x426bd3
  426ba1:	jl     0x426bd0
  426ba3:	call   0x4457:0x5efcd347
  426baa:	dec    eax
  426bab:	xlat   BYTE PTR ds:[ebx]
  426bac:	sbb    DWORD PTR [eax+ebx*1+0x5014d3e4],edi
  426bb3:	pop    es
  426bb4:	xor    BYTE PTR [esi+eax*4+0x66],bl
  426bb8:	jne    0x426b5c
  426bba:	shl    DWORD PTR [ebp-0x66b75ef8],1
  426bc0:	jo     0x426b58
  426bc2:	jmp    FWORD PTR [ecx]
  426bc4:	int    0x73
  426bc6:	jo     0x426c2e
  426bc8:	inc    esp
  426bc9:	adc    eax,0x71abed9
  426bce:	sub    eax,0x9f1c9789
  426bd3:	push   eax
  426bd4:	add    dl,bl
  426bd6:	push   eax
  426bd7:	or     esi,ebp
  426bd9:	add    al,0x3b
  426bdb:	(bad)  
  426bdc:	jp     0x426c2d
  426bde:	jnp    0x426be7
  426be0:	lock cmovs edi,DWORD PTR [esi-0x2e90b91d]
  426be8:	ja     0x426bcf
  426bea:	xor    ah,BYTE PTR [edi+0x32]
  426bed:	in     al,0x3f
  426bef:	stos   BYTE PTR es:[edi],al
  426bf0:	sbb    dl,ch
  426bf2:	aas    
  426bf3:	sub    al,0x7e
  426bf5:	leave  
  426bf6:	scas   al,BYTE PTR es:[edi]
  426bf7:	setns  ch
  426bfa:	add    eax,0x6ed3b314
  426bff:	aas    
  426c00:	add    eax,0xf2bc4804
  426c05:	outs   dx,BYTE PTR ds:[esi]
  426c06:	or     eax,0x4bf20cbc
  426c0b:	push   0xffffff9a
  426c0d:	imul   esi,ebx,0x1d1553ab
  426c13:	icebp  
  426c14:	sbb    edx,DWORD PTR [ecx+ebp*8-0x33]
  426c18:	xor    edx,DWORD PTR [eax+0x68]
  426c1b:	and    ecx,DWORD PTR [esi-0x59]
  426c1e:	es push ebx
  426c20:	sbb    ch,BYTE PTR [edx+eax*2+0x543310f2]
  426c27:	xchg   edx,eax
  426c28:	mov    ecx,ebx
  426c2a:	adc    al,0x75
  426c2c:	cs push 0x1e
  426c2f:	or     dh,BYTE PTR [edi+0x130ed565]
  426c35:	or     eax,0xa8c64f57
  426c3a:	add    eax,0x8d9ba67
  426c3f:	dec    ebx
  426c40:	fwait
  426c41:	sbb    dl,BYTE PTR [edx+0x46]
  426c44:	mov    edi,0xbbf132d4
  426c49:	adc    ecx,DWORD PTR [eax-0x51]
  426c4c:	jl     0x426cae
  426c4e:	sbb    BYTE PTR [edi+0x39],cl
  426c51:	jb     0x426c6e
  426c53:	jo     0x426c6f
  426c55:	sbb    al,dl
  426c57:	adc    al,0xd6
  426c59:	imul   ecx,esi,0xbbab1ac3
  426c5f:	or     DWORD PTR [edi-0x6a],ebp
  426c62:	sbb    BYTE PTR ds:0xbef8e72a,0xdb
  426c69:	cmp    dh,BYTE PTR [esp+ebp*8]
  426c6c:	mov    ebp,0x59f7a804
  426c71:	add    eax,edx
  426c73:	jb     0x426bfb
  426c75:	inc    ecx
  426c76:	pop    ecx
  426c77:	xchg   bp,ax
  426c79:	pop    es
  426c7a:	cmp    eax,0xb1ab63ba
  426c7f:	data16 clc 
  426c81:	ds add eax,0x1be0afc
  426c87:	push   ss
  426c88:	fist   DWORD PTR [esi]
  426c8a:	dec    eax
  426c8b:	or     al,0x8e
  426c8d:	sbb    al,0x14
  426c8f:	adc    esp,DWORD PTR [esp+esi*1+0x31028488]
  426c96:	or     esp,edi
  426c98:	imul   eax,DWORD PTR [edi],0x34
  426c9b:	jne    0x426cb7
  426c9d:	ins    DWORD PTR es:[edi],dx
  426c9e:	clc    
  426c9f:	icebp  
  426ca0:	test   eax,0x846daf61
  426ca5:	fnstcw WORD PTR [ebp-0x115b853b]
  426cab:	or     ch,BYTE PTR [esi+0x16]
  426cae:	jo     0x426d08
  426cb0:	adc    BYTE PTR [edi+ecx*2-0x16],ah
  426cb4:	int    0x18
  426cb6:	or     edx,ebx
  426cb8:	push   esi
  426cb9:	add    BYTE PTR [eax],al
  426cbb:	add    BYTE PTR [ebp-0x75],dl
  426cbe:	in     al,dx
  426cbf:	sub    esp,0x3c
  426cc2:	mov    edx,0xc2
  426cc7:	mov    edx,0xa7
  426ccc:	mov    DWORD PTR [ebp-0x34],edx
  426ccf:	push   ebx
  426cd0:	mov    eax,0x92bf
  426cd5:	add    eax,eax
  426cd7:	mov    ebx,DWORD PTR [ebp-0x34]
  426cda:	cmp    ebx,eax
  426cdc:	jne    0x426d0b
  426cde:	sub    ebx,edx
  426ce0:	mov    ecx,0xdf
  426ce5:	mov    eax,DWORD PTR ds:0x43d04c
  426ceb:	test   ebx,0x52
  426cf1:	je     0x426d0b
  426cf3:	mov    eax,0xc983
  426cf8:	mov    edx,0x59eb
  426cfd:	add    DWORD PTR [ebp-0x34],ebx
  426d00:	add    ecx,ebx
  426d02:	and    DWORD PTR [ebp-0x34],ecx
  426d05:	add    DWORD PTR [ebp-0x34],edx
  426d08:	sub    DWORD PTR [ebp-0x34],eax
  426d0b:	push   esi
  426d0c:	mov    eax,DWORD PTR [ebp-0x34]
  426d0f:	mov    ebx,DWORD PTR [ebp-0x34]
  426d12:	cmp    ebx,edx
  426d14:	jne    0x426d3b
  426d16:	sub    eax,ecx
  426d18:	or     eax,ebx
  426d1a:	cmp    eax,0xfffffffc
  426d1d:	je     0x426d3b
  426d1f:	cmp    eax,edx
  426d21:	jne    0x426d3b
  426d23:	mov    esi,DWORD PTR ds:0x43d04c
  426d29:	xor    DWORD PTR [ebp-0x34],eax
  426d2c:	add    esi,ecx
  426d2e:	mov    edx,0xf2
  426d33:	sub    edx,ecx
  426d35:	add    DWORD PTR [ebp-0x34],edx
  426d38:	add    DWORD PTR [ebp-0x34],esi
  426d3b:	push   edi
  426d3c:	and    DWORD PTR [ebp-0x34],ecx
  426d3f:	add    ecx,eax
  426d41:	add    DWORD PTR [ebp-0x34],ecx
  426d44:	mov    ecx,DWORD PTR [ebp-0x34]
  426d47:	sub    DWORD PTR [ebp-0x34],ecx
  426d4a:	sub    ecx,esi
  426d4c:	mov    edx,DWORD PTR [ebp-0x34]
  426d4f:	mov    eax,DWORD PTR ds:0x43d04c
  426d55:	test   edx,0x90
  426d5b:	je     0x426d7d
  426d5d:	mov    eax,DWORD PTR [ebp-0x34]
  426d60:	add    DWORD PTR [ebp-0x34],esi
  426d63:	sub    eax,esi
  426d65:	mov    esi,DWORD PTR [ebp-0x34]
  426d68:	add    edx,ecx
  426d6a:	cmp    esi,ecx
  426d6c:	je     0x426d7d
  426d6e:	sub    DWORD PTR [ebp-0x34],esi
  426d71:	add    DWORD PTR [ebp-0x34],eax
  426d74:	mov    edi,DWORD PTR [ebp-0x34]
  426d77:	add    DWORD PTR [ebp-0x34],edi
  426d7a:	and    DWORD PTR [ebp-0x34],edx
  426d7d:	mov    esi,0x296a
  426d82:	add    esi,ecx
  426d84:	mov    ebx,DWORD PTR ds:0x43d04c
  426d8a:	cmp    eax,0xffffffe8
  426d8d:	je     0x426dbd
  426d8f:	mov    edi,DWORD PTR [ebp-0x34]
  426d92:	mov    edx,DWORD PTR [ebp-0x34]
  426d95:	or     edx,esi
  426d97:	add    DWORD PTR [ebp-0x34],ebx
  426d9a:	cmp    edi,DWORD PTR ds:0x43d04c
  426da0:	jne    0x426dbd
  426da2:	sub    edx,ecx
  426da4:	add    DWORD PTR [ebp-0x34],edx
  426da7:	mov    ecx,0x40
  426dac:	or     DWORD PTR [ebp-0x34],edi
  426daf:	add    ecx,ecx
  426db1:	mov    edx,DWORD PTR ds:0x43d04c
  426db7:	add    DWORD PTR [ebp-0x34],ecx
  426dba:	add    DWORD PTR [ebp-0x34],edx
  426dbd:	and    ebx,eax
  426dbf:	sub    ebx,edi
  426dc1:	add    DWORD PTR [ebp-0x34],ebx
  426dc4:	mov    ecx,DWORD PTR [ebp-0x34]
  426dc7:	and    DWORD PTR [ebp-0x34],edi
  426dca:	sub    ecx,eax
  426dcc:	xor    edx,edx
  426dce:	cmp    ecx,0xf1ab
  426dd4:	jne    0x426e3b
  426dd6:	mov    esi,ecx
  426dd8:	sub    edx,esi
  426dda:	mov    eax,DWORD PTR ds:0x43d04c
  426de0:	and    edx,edi
  426de2:	cmp    edx,0x1e
  426de5:	je     0x426df9
  426de7:	mov    edi,DWORD PTR [ebp-0x34]
  426dea:	cmp    edi,0xffffffab
  426ded:	je     0x426df9
  426def:	and    DWORD PTR [ebp-0x34],edx
  426df2:	cmp    edi,edx
  426df4:	jne    0x426df9
  426df6:	xor    DWORD PTR [ebp-0x34],edi
  426df9:	test   edx,0xd7
  426dff:	je     0x426e3b
  426e01:	mov    edx,0x3d
  426e06:	mov    ecx,DWORD PTR ds:0x43d04c
  426e0c:	and    DWORD PTR [ebp-0x34],ecx
  426e0f:	cmp    ebx,DWORD PTR [ebp-0x4]
  426e12:	je     0x426e3b
  426e14:	add    eax,esi
  426e16:	mov    ecx,0xe7
  426e1b:	cmp    eax,0x5b
  426e1e:	je     0x426e3b
  426e20:	mov    ecx,0xe501
  426e25:	xor    edi,edi
  426e27:	test   ebx,0xed
  426e2d:	jne    0x426e3b
  426e2f:	and    ecx,eax
  426e31:	sub    DWORD PTR [ebp-0x34],edi
  426e34:	add    ecx,edx
  426e36:	add    ecx,edi
  426e38:	xor    DWORD PTR [ebp-0x34],ecx
  426e3b:	cmp    esi,0x7fd4
  426e41:	jne    0x426e46
  426e43:	or     DWORD PTR [ebp-0x34],esi
  426e46:	cmp    esi,DWORD PTR ds:0x43d04c
  426e4c:	jne    0x426e51
  426e4e:	sub    DWORD PTR [ebp-0x34],eax
  426e51:	mov    edi,DWORD PTR [ebp-0x34]
  426e54:	mov    eax,DWORD PTR [ebp-0x34]
  426e57:	sub    DWORD PTR [ebp-0x34],eax
  426e5a:	cmp    edi,0xfffffffe
  426e5d:	jne    0x426e72
  426e5f:	mov    ebx,DWORD PTR [ebp-0x34]
  426e62:	test   ebx,0xca
  426e68:	je     0x426e72
  426e6a:	and    DWORD PTR [ebp-0x34],ebx
  426e6d:	add    edi,edi
  426e6f:	add    DWORD PTR [ebp-0x34],edi
  426e72:	mov    edi,0x20
  426e77:	sub    edi,edx
  426e79:	mov    esi,DWORD PTR [ebp-0x34]
  426e7c:	and    esi,edi
  426e7e:	sub    DWORD PTR [ebp-0x34],ecx
  426e81:	add    DWORD PTR [ebp-0x34],esi
  426e84:	mov    edx,edi
  426e86:	sub    edx,eax
  426e88:	mov    ebx,0xb59a
  426e8d:	add    DWORD PTR [ebp-0x34],edi
  426e90:	sub    edx,ebx
  426e92:	and    DWORD PTR [ebp-0x34],ebx
  426e95:	test   edx,0xeb
  426e9b:	jne    0x426eea
  426e9d:	mov    eax,DWORD PTR [ebp-0x34]
  426ea0:	test   eax,0xb6
  426ea5:	je     0x426eea
  426ea7:	mov    esi,0x8e
  426eac:	test   eax,0x800ce078
  426eb1:	jne    0x426eea
  426eb3:	or     edx,edi
  426eb5:	and    eax,esi
  426eb7:	add    DWORD PTR [ebp-0x34],eax
  426eba:	mov    esi,0x87
  426ebf:	mov    edi,DWORD PTR [ebp-0x34]
  426ec2:	add    edi,esi
  426ec4:	test   edx,0x2116
  426eca:	jne    0x426eea
  426ecc:	mov    eax,DWORD PTR [ebp-0x34]
  426ecf:	or     edx,eax
  426ed1:	add    DWORD PTR [ebp-0x34],edi
  426ed4:	cmp    edx,DWORD PTR ds:0x43d04c
  426eda:	jne    0x426eea
  426edc:	mov    ebx,DWORD PTR [ebp-0x34]
  426edf:	sub    DWORD PTR [ebp-0x34],edx
  426ee2:	cmp    ebx,0x3e
  426ee5:	je     0x426eea
  426ee7:	add    DWORD PTR [ebp-0x34],ebx
  426eea:	mov    edi,DWORD PTR ds:0x43d04c
  426ef0:	add    edi,ebx
  426ef2:	mov    eax,DWORD PTR [ebp-0x34]
  426ef5:	sub    eax,edi
  426ef7:	xor    DWORD PTR [ebp-0x34],eax
  426efa:	mov    esi,0x55
  426eff:	mov    edx,DWORD PTR ds:0x43d04c
  426f05:	add    esi,edi
  426f07:	sub    DWORD PTR [ebp-0x34],esi
  426f0a:	add    DWORD PTR [ebp-0x34],edx
  426f0d:	mov    edx,0xae
  426f12:	mov    esi,DWORD PTR ds:0x43d04c
  426f18:	mov    DWORD PTR [ebp-0x14],edx
  426f1b:	xor    DWORD PTR [ebp-0x34],esi
  426f1e:	cmp    eax,0x85b1
  426f23:	jne    0x426f30
  426f25:	cmp    ecx,DWORD PTR ds:0x43d04c
  426f2b:	je     0x426f30
  426f2d:	sub    DWORD PTR [ebp-0x34],edi
  426f30:	cmp    eax,0x0
  426f33:	je     0x426f41
  426f35:	mov    edi,DWORD PTR [ebp-0x34]
  426f38:	mov    ecx,DWORD PTR [ebp-0x34]
  426f3b:	add    DWORD PTR [ebp-0x34],edi
  426f3e:	add    DWORD PTR [ebp-0x34],ecx
  426f41:	sub    DWORD PTR [ebp-0x34],ebx
  426f44:	add    DWORD PTR [ebp-0x34],edx
  426f47:	mov    eax,DWORD PTR [ebp-0x34]
  426f4a:	add    eax,ecx
  426f4c:	cmp    eax,DWORD PTR ds:0x43d04c
  426f52:	jne    0x426f8a
  426f54:	mov    edi,0xa5
  426f59:	xor    esi,esi
  426f5b:	cmp    eax,DWORD PTR ds:0x43d04c
  426f61:	je     0x426f8a
  426f63:	add    eax,ecx
  426f65:	sub    DWORD PTR [ebp-0x34],ebx
  426f68:	add    DWORD PTR [ebp-0x14],eax
  426f6b:	mov    eax,DWORD PTR [ebp-0x14]
  426f6e:	sub    edi,ecx
  426f70:	xor    DWORD PTR [ebp-0x34],esi
  426f73:	add    DWORD PTR [ebp-0x14],eax
  426f76:	add    edi,eax
  426f78:	test   edi,0xa4
  426f7e:	jne    0x426f8a
  426f80:	mov    ebx,edx
  426f82:	sub    edi,eax
  426f84:	sub    DWORD PTR [ebp-0x14],ebx
  426f87:	add    DWORD PTR [ebp-0x34],edi
  426f8a:	sub    esi,ebx
  426f8c:	sub    esi,edx
  426f8e:	xor    edi,edi
  426f90:	mov    eax,DWORD PTR [ebp-0x34]
  426f93:	cmp    eax,0xffffffab
  426f96:	jne    0x426fa0
  426f98:	sub    edi,esi
  426f9a:	sub    DWORD PTR [ebp-0x14],edi
  426f9d:	or     DWORD PTR [ebp-0x14],eax
  426fa0:	and    eax,esi
  426fa2:	mov    edx,0x7b
  426fa7:	mov    esi,ebx
  426fa9:	add    DWORD PTR [ebp-0x34],edx
  426fac:	sub    eax,ecx
  426fae:	sub    eax,ecx
  426fb0:	sub    DWORD PTR [ebp-0x34],ebx
  426fb3:	sub    eax,ecx
  426fb5:	cmp    eax,0xffffffac
  426fb8:	je     0x426ff9
  426fba:	mov    ebx,DWORD PTR [ebp-0x34]
  426fbd:	add    DWORD PTR [ebp-0x34],ecx
  426fc0:	sub    esi,edx
  426fc2:	and    ebx,edi
  426fc4:	mov    ecx,DWORD PTR [ebp-0x34]
  426fc7:	and    DWORD PTR [ebp-0x34],ecx
  426fca:	cmp    ebx,ecx
  426fcc:	je     0x426ff9
  426fce:	mov    edx,DWORD PTR [ebp-0x34]
  426fd1:	test   edx,0x5e
  426fd7:	jne    0x426ff9
  426fd9:	mov    edi,ebx
  426fdb:	mov    ecx,DWORD PTR [ebp-0x14]
  426fde:	or     ecx,esi
  426fe0:	cmp    eax,ebx
  426fe2:	je     0x426ff9
  426fe4:	sub    edi,edx
  426fe6:	sub    eax,ecx
  426fe8:	sub    DWORD PTR [ebp-0x34],edx
  426feb:	sub    edi,esi
  426fed:	mov    ebx,DWORD PTR [ebp-0x14]
  426ff0:	and    DWORD PTR [ebp-0x34],ebx
  426ff3:	sub    DWORD PTR [ebp-0x34],eax
  426ff6:	xor    DWORD PTR [ebp-0x14],edi
  426ff9:	push   0x43d04c
  426ffe:	call   DWORD PTR ds:0x43b5b8
  427004:	add    esi,esi
  427006:	add    DWORD PTR [ebp-0x14],edi
  427009:	mov    edx,DWORD PTR [ebp-0x34]
  42700c:	cmp    ebx,0xfffffff2
  42700f:	jne    0x42703a
  427011:	cmp    edx,eax
  427013:	jne    0x42703a
  427015:	add    edx,edi
  427017:	test   edi,0xf7
  42701d:	je     0x427026
  42701f:	and    edx,eax
  427021:	and    edx,ebx
  427023:	add    DWORD PTR [ebp-0x34],edx
  427026:	mov    ecx,DWORD PTR [ebp-0x34]
  427029:	sub    ecx,edx
  42702b:	mov    edx,DWORD PTR [ebp-0x34]
  42702e:	sub    edx,ecx
  427030:	add    esi,ebx
  427032:	add    edx,ecx
  427034:	add    DWORD PTR [ebp-0x14],edx
  427037:	add    DWORD PTR [ebp-0x34],esi
  42703a:	cmp    eax,0xffffffe0
  42703d:	jne    0x4270d3
  427043:	mov    edi,DWORD PTR ds:0x43d04c
  427049:	sub    DWORD PTR [ebp-0x14],esi
  42704c:	xor    ecx,ecx
  42704e:	mov    DWORD PTR [ebp-0x34],ebx
  427051:	sub    DWORD PTR [ebp-0x14],esi
  427054:	or     edi,esi
  427056:	or     edi,ebx
  427058:	and    DWORD PTR [ebp-0x14],eax
  42705b:	add    edi,esi
  42705d:	sub    DWORD PTR [ebp-0x34],ecx
  427060:	cmp    edi,ecx
  427062:	je     0x4270aa
  427064:	mov    esi,DWORD PTR [ebp-0x34]
  427067:	mov    ecx,0x1e
  42706c:	add    DWORD PTR [ebp-0x34],edi
  42706f:	cmp    ebx,0xd80a
  427075:	jne    0x4270aa
  427077:	xor    edi,edi
  427079:	and    esi,edi
  42707b:	sub    esi,ebx
  42707d:	add    DWORD PTR [ebp-0x34],ebx
  427080:	add    DWORD PTR [ebp-0x14],edx
  427083:	add    DWORD PTR [ebp-0x14],ecx
  427086:	mov    edx,DWORD PTR [ebp-0x14]
  427089:	sub    edx,ecx
  42708b:	sub    edx,ecx
  42708d:	and    DWORD PTR [ebp-0x34],edx
  427090:	sub    DWORD PTR [ebp-0x14],ecx
  427093:	test   esi,0x55
  427099:	jne    0x4270aa
  42709b:	cmp    esi,DWORD PTR [ebp-0x38]
  42709e:	je     0x4270aa
  4270a0:	and    esi,ecx
  4270a2:	sub    esi,ecx
  4270a4:	sub    DWORD PTR [ebp-0x34],eax
  4270a7:	xor    DWORD PTR [ebp-0x14],esi
  4270aa:	xor    ecx,ecx
  4270ac:	add    DWORD PTR [ebp-0x34],ecx
  4270af:	mov    eax,0xd782
  4270b4:	xor    edi,edi
  4270b6:	add    edi,ecx
  4270b8:	sub    edi,edx
  4270ba:	sub    DWORD PTR [ebp-0x34],eax
  4270bd:	sub    edi,ebx
  4270bf:	add    edi,ecx
  4270c1:	sub    DWORD PTR [ebp-0x14],ebx
  4270c4:	sub    edi,ebx
  4270c6:	and    edi,esi
  4270c8:	or     edi,esi
  4270ca:	sub    DWORD PTR [ebp-0x34],edi
  4270cd:	mov    DWORD PTR [ebp-0x4],ecx
  4270d0:	sub    DWORD PTR [ebp-0x14],esi
  4270d3:	add    DWORD PTR [ebp-0x14],ecx
  4270d6:	mov    edi,DWORD PTR ds:0x43d07c
  4270dc:	add    eax,edi
  4270de:	mov    esi,0x81
  4270e3:	sub    DWORD PTR [ebp-0x34],esi
  4270e6:	or     DWORD PTR [ebp-0x14],ebx
  4270e9:	add    eax,ebx
  4270eb:	or     DWORD PTR [ebp-0x14],eax
  4270ee:	call   DWORD PTR ds:0x43b608
  4270f4:	add    DWORD PTR [ebp-0x14],eax
  4270f7:	mov    DWORD PTR [ebp-0x2c],eax
  4270fa:	add    edi,esi
  4270fc:	mov    edx,DWORD PTR [ebp-0x14]
  4270ff:	add    DWORD PTR [ebp-0x34],ebx
  427102:	and    edi,edx
  427104:	mov    ecx,DWORD PTR ds:0x43d04c
  42710a:	add    DWORD PTR [ebp-0x34],eax
  42710d:	add    edi,edx
  42710f:	add    ecx,eax
  427111:	cmp    ecx,0xfffffff0
  427114:	je     0x4271e7
  42711a:	or     edi,ebx
  42711c:	mov    edx,0x3f7e
  427121:	cmp    edi,0x14
  427124:	je     0x4271e7
  42712a:	mov    ebx,DWORD PTR ds:0x43d07c
  427130:	sub    DWORD PTR [ebp-0x14],ebx
  427133:	mov    DWORD PTR [ebp-0x34],edi
  427136:	test   ecx,0xece
  42713c:	jne    0x4271e7
  427142:	add    edx,eax
  427144:	test   ecx,0x52
  42714a:	je     0x4271e7
  427150:	mov    DWORD PTR [ebp-0x14],ebx
  427153:	sub    DWORD PTR [ebp-0x34],eax
  427156:	or     DWORD PTR [ebp-0x14],edx
  427159:	mov    eax,0x81
  42715e:	mov    esi,DWORD PTR [ebp-0x14]
  427161:	add    DWORD PTR [ebp-0x14],eax
  427164:	mov    DWORD PTR [ebp-0x14],ecx
  427167:	cmp    esi,DWORD PTR [ebp-0x2c]
  42716a:	je     0x4271e7
  42716c:	mov    ebx,DWORD PTR [ebp-0x14]
  42716f:	add    DWORD PTR [ebp-0x14],esi
  427172:	cmp    ebx,0x78cf
  427178:	je     0x4271e7
  42717a:	cmp    ebx,ecx
  42717c:	je     0x4271e7
  42717e:	mov    edx,DWORD PTR [ebp-0x14]
  427181:	sub    edx,esi
  427183:	mov    eax,DWORD PTR [ebp-0x34]
  427186:	sub    DWORD PTR [ebp-0x14],edx
  427189:	cmp    ebx,DWORD PTR ds:0x43d07c
  42718f:	je     0x4271e7
  427191:	mov    edx,DWORD PTR [ebp-0x14]
  427194:	and    edx,ebx
  427196:	cmp    ebx,0x6a
  427199:	je     0x4271e7
  42719b:	cmp    edx,DWORD PTR ds:0x43d04c
  4271a1:	jne    0x4271e7
  4271a3:	mov    esi,0x7f
  4271a8:	test   edi,0x9c
  4271ae:	jne    0x4271e7
  4271b0:	mov    ebx,DWORD PTR ds:0x43d07c
  4271b6:	mov    ecx,eax
  4271b8:	add    DWORD PTR [ebp-0x14],ecx
  4271bb:	cmp    ecx,0xffffffd6
  4271be:	je     0x4271e7
  4271c0:	cmp    edx,0x88a8
  4271c6:	je     0x4271e7
  4271c8:	xor    edi,edi
  4271ca:	add    DWORD PTR [ebp-0x14],esi
  4271cd:	mov    ecx,0x5e
  4271d2:	add    DWORD PTR [ebp-0x34],edx
  4271d5:	sub    DWORD PTR [ebp-0x14],edx
  4271d8:	sub    ecx,edx
  4271da:	add    DWORD PTR [ebp-0x14],edi
  4271dd:	or     ecx,edi
  4271df:	sub    DWORD PTR [ebp-0x14],ecx
  4271e2:	add    ebx,ebx
  4271e4:	xor    DWORD PTR [ebp-0x14],ebx
  4271e7:	push   0x77
  4271e9:	push   0x0
  4271eb:	call   DWORD PTR ds:0x43b4a4
  4271f1:	mov    DWORD PTR [ebp-0x14],eax
  4271f4:	mov    DWORD PTR [ebp-0x28],eax
  4271f7:	mov    esi,ebx
  4271f9:	mov    eax,DWORD PTR [ebp-0x34]
  4271fc:	and    esi,eax
  4271fe:	cmp    esi,0xb593
  427204:	jne    0x427209
  427206:	xor    DWORD PTR [ebp-0x34],esi
  427209:	call   DWORD PTR ds:0x43b600
  42720f:	mov    edx,DWORD PTR ds:0x43d04c
  427215:	sub    DWORD PTR [ebp-0x34],edx
  427218:	test   eax,0x6f1b
  42721d:	jne    0x42747d
  427223:	sub    eax,edx
  427225:	xor    esi,esi
  427227:	mov    ebx,DWORD PTR [ebp-0x14]
  42722a:	test   eax,0x72
  42722f:	jne    0x42732f
  427235:	mov    ecx,edx
  427237:	mov    edx,eax
  427239:	test   edx,0x801b
  42723f:	je     0x42732f
  427245:	mov    eax,DWORD PTR [ebp-0x34]
  427248:	mov    edi,DWORD PTR [ebp-0x14]
  42724b:	sub    edx,eax
  42724d:	or     ebx,esi
  42724f:	cmp    ebx,ecx
  427251:	jne    0x42732f
  427257:	xor    esi,esi
  427259:	cmp    edi,0xc295
  42725f:	jne    0x42732f
  427265:	xor    eax,eax
  427267:	xor    DWORD PTR [ebp-0x14],esi
  42726a:	sub    edx,ecx
  42726c:	test   ebx,0xe3eb
  427272:	je     0x42732f
  427278:	mov    esi,DWORD PTR ds:0x43d07c
  42727e:	mov    ecx,DWORD PTR ds:0x43d07c
  427284:	add    DWORD PTR [ebp-0x34],ebx
  427287:	cmp    edi,0x5865
  42728d:	jne    0x42732f
  427293:	mov    ebx,0xee97
  427298:	sub    edx,ecx
  42729a:	sub    eax,edi
  42729c:	cmp    edi,DWORD PTR [ebp-0x18]
  42729f:	jne    0x42732f
  4272a5:	and    edx,edi
  4272a7:	mov    ecx,DWORD PTR [ebp-0x14]
  4272aa:	mov    ebx,0xf6
  4272af:	sub    ecx,edi
  4272b1:	and    edx,ebx
  4272b3:	sub    ecx,eax
  4272b5:	cmp    ecx,0x6df3
  4272bb:	je     0x42732f
  4272bd:	add    DWORD PTR [ebp-0x34],edx
  4272c0:	add    DWORD PTR [ebp-0x34],esi
  4272c3:	mov    edi,DWORD PTR ds:0x43d07c
  4272c9:	add    DWORD PTR [ebp-0x14],edi
  4272cc:	sub    ecx,edi
  4272ce:	add    ecx,eax
  4272d0:	cmp    ecx,edi
  4272d2:	je     0x42732f
  4272d4:	xor    esi,esi
  4272d6:	add    DWORD PTR [ebp-0x14],esi
  4272d9:	cmp    ecx,0xf
  4272dc:	je     0x42732f
  4272de:	mov    ebx,DWORD PTR [ebp-0x14]
  4272e1:	mov    esi,DWORD PTR [ebp-0x34]
  4272e4:	cmp    ebx,0xffffff84
  4272e7:	je     0x42732f
  4272e9:	mov    edx,0x93
  4272ee:	test   ecx,0x18
  4272f4:	je     0x42732f
  4272f6:	mov    eax,0x8c54
  4272fb:	mov    edi,DWORD PTR [ebp-0x34]
  4272fe:	add    DWORD PTR [ebp-0x34],edx
  427301:	and    esi,edi
  427303:	or     DWORD PTR [ebp-0x34],ecx
  427306:	cmp    esi,DWORD PTR [ebp-0x34]
  427309:	je     0x42732f
  42730b:	and    DWORD PTR [ebp-0x34],ebx
  42730e:	add    DWORD PTR [ebp-0x14],esi
  427311:	test   ebx,0xf38e
  427317:	jne    0x42732f
  427319:	add    eax,ecx
  42731b:	or     eax,edi
  42731d:	cmp    eax,DWORD PTR ds:0x43d04c
  427323:	je     0x42732f
  427325:	cmp    eax,0x21
  427328:	jne    0x42732f
  42732a:	add    eax,edi
  42732c:	sub    DWORD PTR [ebp-0x34],eax
  42732f:	mov    ecx,DWORD PTR ds:0x43d04c
  427335:	xor    eax,eax
  427337:	xor    ebx,ebx
  427339:	add    ebx,edx
  42733b:	sub    DWORD PTR [ebp-0x34],ecx
  42733e:	sub    ebx,esi
  427340:	sub    ebx,eax
  427342:	cmp    esi,DWORD PTR [ebp-0x14]
  427345:	je     0x42734a
  427347:	add    DWORD PTR [ebp-0x14],ebx
  42734a:	sub    eax,esi
  42734c:	mov    edx,DWORD PTR [ebp-0x14]
  42734f:	cmp    edx,0x5e
  427352:	je     0x427477
  427358:	add    edx,edx
  42735a:	mov    edi,DWORD PTR [ebp-0x34]
  42735d:	or     edi,eax
  42735f:	cmp    esi,ebx
  427361:	jne    0x427477
  427367:	cmp    edi,DWORD PTR ds:0x43d07c
  42736d:	je     0x427477
  427373:	cmp    eax,edi
  427375:	jne    0x427477
  42737b:	cmp    edi,0xffffffc1
  42737e:	je     0x427477
  427384:	mov    eax,ebx
  427386:	mov    ebx,esi
  427388:	cmp    eax,DWORD PTR ds:0x43d04c
  42738e:	jne    0x427477
  427394:	test   edi,0xaa
  42739a:	jne    0x427477
  4273a0:	xor    esi,esi
  4273a2:	sub    eax,esi
  4273a4:	mov    esi,DWORD PTR ds:0x43d07c
  4273aa:	or     edx,esi
  4273ac:	cmp    eax,DWORD PTR ds:0x43d04c
  4273b2:	je     0x427477
  4273b8:	cmp    eax,DWORD PTR [ebp-0x2c]
  4273bb:	jne    0x427477
  4273c1:	add    DWORD PTR [ebp-0x14],eax
  4273c4:	sub    DWORD PTR [ebp-0x34],edx
  4273c7:	cmp    ebx,DWORD PTR [ebp-0x2c]
  4273ca:	jne    0x427477
  4273d0:	mov    eax,DWORD PTR [ebp-0x14]
  4273d3:	cmp    ebx,0x64
  4273d6:	je     0x427477
  4273dc:	sub    DWORD PTR [ebp-0x34],edi
  4273df:	mov    esi,DWORD PTR [ebp-0x14]
  4273e2:	mov    edi,DWORD PTR [ebp-0x14]
  4273e5:	sub    ebx,eax
  4273e7:	cmp    esi,0xffffff82
  4273ea:	jne    0x427477
  4273f0:	sub    edi,edx
  4273f2:	mov    DWORD PTR [ebp-0x14],ebx
  4273f5:	cmp    esi,ebx
  4273f7:	jne    0x427477
  4273f9:	mov    DWORD PTR [ebp-0x34],edi
  4273fc:	mov    edx,DWORD PTR [ebp-0x14]
  4273ff:	sub    DWORD PTR [ebp-0x34],edx
  427402:	mov    eax,edi
  427404:	cmp    ebx,DWORD PTR ds:0x43d04c
  42740a:	je     0x427477
  42740c:	sub    eax,edi
  42740e:	add    DWORD PTR [ebp-0x14],ebx
  427411:	mov    edx,DWORD PTR [ebp-0x14]
  427414:	cmp    eax,0x7c
  427417:	je     0x427477
  427419:	sub    eax,edx
  42741b:	mov    ebx,DWORD PTR [ebp-0x34]
  42741e:	mov    edx,0x14cb
  427423:	and    edx,eax
  427425:	cmp    esi,edi
  427427:	jne    0x427477
  427429:	add    ebx,edi
  42742b:	test   ebx,0xa2040200
  427431:	jne    0x427477
  427433:	xor    eax,eax
  427435:	add    DWORD PTR [ebp-0x34],ecx
  427438:	add    DWORD PTR [ebp-0x34],ebx
  42743b:	add    DWORD PTR [ebp-0x14],edx
  42743e:	mov    ebx,edx
  427440:	cmp    ebx,0xd99f
  427446:	je     0x427477
  427448:	mov    edi,DWORD PTR [ebp-0x14]
  42744b:	or     DWORD PTR [ebp-0x34],ebx
  42744e:	add    DWORD PTR [ebp-0x34],eax
  427451:	cmp    esi,DWORD PTR ds:0x43d07c
  427457:	jne    0x427477
  427459:	sub    esi,edi
  42745b:	or     esi,ecx
  42745d:	add    DWORD PTR [ebp-0x14],ebx
  427460:	mov    edi,DWORD PTR [ebp-0x14]
  427463:	or     edi,ebx
  427465:	sub    DWORD PTR [ebp-0x14],esi
  427468:	mov    ebx,0x6d
  42746d:	add    DWORD PTR [ebp-0x14],edi
  427470:	sub    ebx,ecx
  427472:	add    ebx,edx
  427474:	xor    DWORD PTR [ebp-0x14],ebx
  427477:	mov    DWORD PTR [ebp-0x10],ecx
  42747a:	add    DWORD PTR [ebp-0x34],eax
  42747d:	add    eax,ecx
  42747f:	mov    ecx,DWORD PTR [ebp-0x14]
  427482:	cmp    ecx,DWORD PTR [ebp-0x2c]
  427485:	jne    0x4274a2
  427487:	sub    eax,edi
  427489:	add    DWORD PTR [ebp-0x14],eax
  42748c:	mov    edx,DWORD PTR [ebp-0x34]
  42748f:	mov    ebx,DWORD PTR ds:0x43d04c
  427495:	sub    DWORD PTR [ebp-0x14],ecx
  427498:	cmp    edx,ebx
  42749a:	jne    0x4274a2
  42749c:	or     DWORD PTR [ebp-0x34],edx
  42749f:	sub    DWORD PTR [ebp-0x14],ebx
  4274a2:	mov    ecx,DWORD PTR [ebp-0x14]
  4274a5:	cmp    ecx,DWORD PTR [ebp-0x8]
  4274a8:	je     0x4274cd
  4274aa:	mov    edi,ebx
  4274ac:	cmp    ecx,0x3172
  4274b2:	jne    0x4274cd
  4274b4:	add    DWORD PTR [ebp-0x34],esi
  4274b7:	sub    ecx,eax
  4274b9:	mov    ebx,DWORD PTR [ebp-0x34]
  4274bc:	mov    edx,DWORD PTR [ebp-0x14]
  4274bf:	add    DWORD PTR [ebp-0x34],ecx
  4274c2:	xor    DWORD PTR [ebp-0x34],ecx
  4274c5:	add    ebx,edi
  4274c7:	and    DWORD PTR [ebp-0x34],ebx
  4274ca:	sub    DWORD PTR [ebp-0x34],edx
  4274cd:	mov    ebx,edx
  4274cf:	mov    edi,edx
  4274d1:	sub    edi,ecx
  4274d3:	sub    DWORD PTR [ebp-0x14],ecx
  4274d6:	cmp    eax,DWORD PTR [ebp-0x38]
  4274d9:	je     0x427560
  4274df:	mov    esi,DWORD PTR [ebp-0x34]
  4274e2:	mov    ecx,0xb
  4274e7:	sub    DWORD PTR [ebp-0x14],ecx
  4274ea:	add    DWORD PTR [ebp-0x34],esi
  4274ed:	cmp    ebx,DWORD PTR ds:0x43d04c
  4274f3:	jne    0x427560
  4274f5:	mov    esi,DWORD PTR ds:0x43d080
  4274fb:	mov    ecx,DWORD PTR [ebp-0x14]
  4274fe:	cmp    edi,0x3345
  427504:	jne    0x427560
  427506:	mov    edx,DWORD PTR [ebp-0x34]
  427509:	cmp    edx,DWORD PTR ds:0x43d07c
  42750f:	jne    0x427560
  427511:	add    DWORD PTR [ebp-0x34],ecx
  427514:	mov    ecx,DWORD PTR [ebp-0x34]
  427517:	add    edi,edx
  427519:	xor    eax,eax
  42751b:	add    DWORD PTR [ebp-0x14],ebx
  42751e:	sub    eax,edx
  427520:	cmp    ecx,ebx
  427522:	je     0x427560
  427524:	mov    esi,0x49
  427529:	mov    ebx,0x99
  42752e:	add    DWORD PTR [ebp-0x14],ecx
  427531:	add    eax,esi
  427533:	sub    edi,edx
  427535:	or     edi,ebx
  427537:	test   edi,0x71
  42753d:	je     0x427560
  42753f:	mov    esi,ebx
  427541:	cmp    eax,DWORD PTR [ebp-0x10]
  427544:	je     0x427560
  427546:	sub    DWORD PTR [ebp-0x34],eax
  427549:	cmp    edi,DWORD PTR [ebp-0x34]
  42754c:	je     0x427560
  42754e:	mov    DWORD PTR [ebp-0x34],edi
  427551:	add    esi,eax
  427553:	mov    edx,0xca
  427558:	sub    DWORD PTR [ebp-0x14],esi
  42755b:	sub    edx,ebx
  42755d:	add    DWORD PTR [ebp-0x34],edx
  427560:	mov    ebx,DWORD PTR [ebp-0x14]
  427563:	cmp    ebx,0x79
  427566:	je     0x427575
  427568:	cmp    ebx,eax
  42756a:	jne    0x427575
  42756c:	mov    edx,DWORD PTR [ebp-0x14]
  42756f:	sub    DWORD PTR [ebp-0x14],ebx
  427572:	add    DWORD PTR [ebp-0x14],edx
  427575:	test   edx,0x4a
  42757b:	je     0x4275b0
  42757d:	sub    eax,edx
  42757f:	mov    esi,0x7cc6
  427584:	mov    ecx,DWORD PTR [ebp-0x14]
  427587:	add    DWORD PTR [ebp-0x34],ecx
  42758a:	test   eax,0x4e6c
  42758f:	jne    0x4275b0
  427591:	mov    edx,DWORD PTR ds:0x43d080
  427597:	and    DWORD PTR [ebp-0x14],edx
  42759a:	sub    eax,edx
  42759c:	test   eax,0x8c28
  4275a1:	jne    0x4275b0
  4275a3:	add    DWORD PTR [ebp-0x34],edi
  4275a6:	mov    ecx,esi
  4275a8:	mov    edi,eax
  4275aa:	sub    DWORD PTR [ebp-0x34],edi
  4275ad:	add    DWORD PTR [ebp-0x14],ecx
  4275b0:	mov    esi,DWORD PTR [ebp-0x14]
  4275b3:	mov    ebx,0xbf
  4275b8:	xor    DWORD PTR [ebp-0x14],ebx
  4275bb:	cmp    esi,0xffffffab
  4275be:	je     0x427612
  4275c0:	mov    edx,DWORD PTR [ebp-0x34]
  4275c3:	mov    DWORD PTR [ebp-0x14],esi
  4275c6:	mov    edi,DWORD PTR [ebp-0x14]
  4275c9:	sub    DWORD PTR [ebp-0x34],edx
  4275cc:	cmp    edi,DWORD PTR ds:0x43d07c
  4275d2:	jne    0x427612
  4275d4:	cmp    edi,DWORD PTR [ebp-0x14]
  4275d7:	je     0x427612
  4275d9:	mov    eax,0x82
  4275de:	mov    esi,DWORD PTR [ebp-0x14]
  4275e1:	cmp    edx,DWORD PTR ds:0x43d07c
  4275e7:	jne    0x427612
  4275e9:	mov    ebx,DWORD PTR [ebp-0x14]
  4275ec:	mov    edx,DWORD PTR [ebp-0x14]
  4275ef:	cmp    esi,DWORD PTR [ebp-0x4]
  4275f2:	je     0x427612
  4275f4:	cmp    edi,0x5
  4275f7:	je     0x427612
  4275f9:	mov    eax,0x3c
  4275fe:	add    edi,eax
  427600:	sub    edi,edx
  427602:	and    edi,esi
  427604:	add    DWORD PTR [ebp-0x14],ebx
  427607:	mov    ecx,DWORD PTR [ebp-0x14]
  42760a:	sub    ecx,edx
  42760c:	sub    DWORD PTR [ebp-0x14],ecx
  42760f:	sub    DWORD PTR [ebp-0x34],edi
  427612:	add    esi,ecx
  427614:	mov    edx,DWORD PTR [ebp-0x14]
  427617:	sub    edx,eax
  427619:	cmp    edx,ecx
  42761b:	je     0x427633
  42761d:	mov    ebx,0x62
  427622:	mov    ecx,DWORD PTR ds:0x43d04c
  427628:	add    edx,esi
  42762a:	mov    DWORD PTR [ebp-0x34],edx
  42762d:	mov    DWORD PTR [ebp-0x34],ebx
  427630:	mov    DWORD PTR [ebp-0x34],ecx
  427633:	mov    esi,DWORD PTR ds:0x43d048
  427639:	mov    edx,0xfb
  42763e:	and    DWORD PTR [ebp-0x14],ecx
  427641:	and    DWORD PTR [ebp-0x14],ecx
  427644:	add    esi,ebx
  427646:	xor    DWORD PTR [ebp-0x34],edi
  427649:	and    edx,ebx
  42764b:	sub    DWORD PTR [ebp-0x34],esi
  42764e:	and    edx,eax
  427650:	add    esi,ecx
  427652:	sub    esi,ebx
  427654:	add    DWORD PTR [ebp-0x14],esi
  427657:	add    edx,eax
  427659:	add    edx,esi
  42765b:	sub    DWORD PTR [ebp-0x14],edx
  42765e:	sub    DWORD PTR [ebp-0x34],esi
  427661:	mov    edi,DWORD PTR ds:0x43d068
  427667:	add    DWORD PTR [ebp-0x14],ebx
  42766a:	mov    eax,ecx
  42766c:	add    DWORD PTR [ebp-0x34],edi
  42766f:	or     eax,ecx
  427671:	sub    eax,esi
  427673:	xor    DWORD PTR [ebp-0x34],eax
  427676:	mov    ebx,DWORD PTR [ebp-0x34]
  427679:	sub    DWORD PTR [ebp-0x34],ebx
  42767c:	add    DWORD PTR [ebp-0x14],eax
  42767f:	sub    ecx,esi
  427681:	add    ecx,edx
  427683:	mov    ebx,esi
  427685:	add    ecx,edi
  427687:	and    ebx,edx
  427689:	mov    edx,DWORD PTR [ebp-0x34]
  42768c:	sub    DWORD PTR [ebp-0x14],edx
  42768f:	add    ebx,edx
  427691:	sub    ecx,edi
  427693:	sub    DWORD PTR [ebp-0x14],ecx
  427696:	sub    ebx,esi
  427698:	sub    DWORD PTR [ebp-0x14],ebx
  42769b:	add    eax,edx
  42769d:	mov    edx,DWORD PTR [ebp-0x34]
  4276a0:	mov    esi,0xa2008210
  4276a5:	or     DWORD PTR [ebp-0x34],edi
  4276a8:	test   eax,0x9f
  4276ad:	jne    0x4276bc
  4276af:	sub    DWORD PTR [ebp-0x34],eax
  4276b2:	or     DWORD PTR [ebp-0x34],edx
  4276b5:	mov    eax,esi
  4276b7:	and    eax,esi
  4276b9:	or     DWORD PTR [ebp-0x14],eax
  4276bc:	mov    edx,ecx
  4276be:	add    edx,ecx
  4276c0:	mov    ebx,DWORD PTR ds:0x43d040
  4276c6:	xor    DWORD PTR [ebp-0x34],edx
  4276c9:	sub    ebx,ecx
  4276cb:	and    eax,edx
  4276cd:	add    DWORD PTR [ebp-0x34],esi
  4276d0:	add    ebx,edx
  4276d2:	add    eax,ebx
  4276d4:	add    DWORD PTR [ebp-0x34],eax
  4276d7:	add    DWORD PTR [ebp-0x34],edx
  4276da:	mov    edx,DWORD PTR [ebp-0x34]
  4276dd:	add    DWORD PTR [ebp-0x34],edx
  4276e0:	xor    edx,edx
  4276e2:	sub    DWORD PTR [ebp-0x34],edx
  4276e5:	add    esi,esi
  4276e7:	and    esi,edx
  4276e9:	mov    esi,DWORD PTR [ebp-0x34]
  4276ec:	add    DWORD PTR [ebp-0x34],esi
  4276ef:	mov    ecx,DWORD PTR [ebp-0x34]
  4276f2:	mov    esi,DWORD PTR [ebp-0x34]
  4276f5:	sub    DWORD PTR [ebp-0x14],ecx
  4276f8:	cmp    esi,DWORD PTR [ebp-0x4]
  4276fb:	je     0x42773e
  4276fd:	sub    esi,ecx
  4276ff:	mov    eax,DWORD PTR [ebp-0x14]
  427702:	sub    DWORD PTR [ebp-0x14],eax
  427705:	cmp    esi,0xffffffd1
  427708:	jne    0x42773e
  42770a:	sub    esi,edx
  42770c:	add    DWORD PTR [ebp-0x14],eax
  42770f:	mov    ebx,0x14
  427714:	sub    DWORD PTR [ebp-0x34],edi
  427717:	xor    ecx,ecx
  427719:	test   esi,0x6b
  42771f:	jne    0x42773e
  427721:	sub    ecx,ebx
  427723:	mov    edx,DWORD PTR [ebp-0x14]
  427726:	mov    ebx,DWORD PTR [ebp-0x14]
  427729:	add    esi,edx
  42772b:	add    DWORD PTR [ebp-0x34],esi
  42772e:	sub    ecx,eax
  427730:	test   ebx,0xf7
  427736:	jne    0x42773e
  427738:	add    DWORD PTR [ebp-0x34],ecx
  42773b:	sub    DWORD PTR [ebp-0x14],ebx
  42773e:	sub    DWORD PTR [ebp-0x34],eax
  427741:	xor    esi,esi
  427743:	xor    DWORD PTR [ebp-0x34],edx
  427746:	add    esi,ecx
  427748:	and    DWORD PTR [ebp-0x34],esi
  42774b:	lea    ebx,[ebp-0x24]
  42774e:	cmp    ebx,DWORD PTR ds:0x43d048
  427754:	jne    0x42778e
  427756:	mov    eax,DWORD PTR [ebp-0x34]
  427759:	add    DWORD PTR [ebp-0x14],ebx
  42775c:	mov    ecx,DWORD PTR [ebp-0x14]
  42775f:	test   ecx,0x49
  427765:	jne    0x42778e
  427767:	mov    edi,DWORD PTR [ebp-0x34]
  42776a:	test   edi,0x41
  427770:	je     0x42778e
  427772:	sub    DWORD PTR [ebp-0x14],edi
  427775:	cmp    eax,ebx
  427777:	jne    0x42778e
  427779:	add    DWORD PTR [ebp-0x34],ecx
  42777c:	cmp    eax,DWORD PTR ds:0x43d040
  427782:	jne    0x42778e
  427784:	add    DWORD PTR [ebp-0x14],esi
  427787:	cmp    eax,edx
  427789:	jne    0x42778e
  42778b:	xor    DWORD PTR [ebp-0x14],eax
  42778e:	mov    DWORD PTR [ebp-0x20],eax
  427791:	push   ebx
  427792:	test   edi,0xb939
  427798:	jne    0x42779f
  42779a:	add    esi,ebx
  42779c:	or     DWORD PTR [ebp-0x20],esi
  42779f:	push   0xe6ac140c
  4277a4:	mov    ebx,DWORD PTR [ebp-0x20]
  4277a7:	add    ebx,ebx
  4277a9:	add    ebx,edx
  4277ab:	sub    DWORD PTR [ebp-0x20],ebx
  4277ae:	add    edi,eax
  4277b0:	or     DWORD PTR [ebp-0x34],edi
  4277b3:	call   0x427b75
  4277b8:	add    DWORD PTR [ebp-0x14],edi
  4277bb:	mov    esi,DWORD PTR [ebp-0x24]
  4277be:	cmp    esi,0xfffffff7
  4277c1:	je     0x4277d6
  4277c3:	test   esi,0x41
  4277c9:	jne    0x4277d6
  4277cb:	cmp    esi,DWORD PTR ds:0x43d048
  4277d1:	je     0x4277d6
  4277d3:	add    DWORD PTR [ebp-0x14],esi
  4277d6:	shr    esi,0x10
  4277d9:	xor    eax,eax
  4277db:	mov    edi,0x64
  4277e0:	and    edi,esi
  4277e2:	sub    DWORD PTR [ebp-0x20],eax
  4277e5:	or     DWORD PTR [ebp-0x14],edi
  4277e8:	cmp    esi,0x47
  4277eb:	jne    0x427973
  4277f1:	sub    DWORD PTR [ebp-0x20],eax
  4277f4:	mov    edx,0x8a6128
  4277f9:	mov    esi,DWORD PTR [ebp-0x14]
  4277fc:	mov    edi,0xc0
  427801:	add    esi,edi
  427803:	add    esi,edi
  427805:	add    DWORD PTR [ebp-0x20],esi
  427808:	sub    edx,DWORD PTR [ebp-0x24]
  42780b:	mov    ecx,DWORD PTR [ebp-0x34]
  42780e:	cmp    ecx,DWORD PTR ds:0x43d080
  427814:	je     0x42781b
  427816:	add    ecx,edx
  427818:	sub    DWORD PTR [ebp-0x20],ecx
  42781b:	call   edx
  42781d:	sub    DWORD PTR [ebp-0x34],edi
  427820:	mov    DWORD PTR [ebp-0x3c],eax
  427823:	mov    ebx,0x92
  427828:	mov    edx,DWORD PTR ds:0x43d04c
  42782e:	add    edx,ebx
  427830:	add    DWORD PTR [ebp-0x14],edx
  427833:	mov    ebx,0x42862c
  427838:	sub    edi,ebx
  42783a:	sub    DWORD PTR [ebp-0x34],esi
  42783d:	mov    esi,DWORD PTR ds:0x43d084
  427843:	mov    eax,esi
  427845:	sub    edi,ebx
  427847:	add    eax,eax
  427849:	or     eax,esi
  42784b:	add    DWORD PTR [ebp-0x20],eax
  42784e:	sub    DWORD PTR [ebp-0x14],edi
  427851:	push   DWORD PTR [ebp-0x24]
  427854:	push   0x4945f3
  427859:	push   DWORD PTR [ebp-0x3c]
  42785c:	call   ebx
  42785e:	sub    edi,eax
  427860:	test   edi,0xe00002
  427866:	jne    0x42787e
  427868:	cmp    edi,0xffffff96
  42786b:	jne    0x42787e
  42786d:	mov    ebx,esi
  42786f:	mov    esi,DWORD PTR ds:0x43d084
  427875:	add    edi,esi
  427877:	or     edi,ebx
  427879:	sub    edi,ebx
  42787b:	sub    DWORD PTR [ebp-0x14],edi
  42787e:	add    DWORD PTR [ebp-0x3c],0x3
  427885:	mov    ebx,DWORD PTR [ebp-0x20]
  427888:	mov    edx,DWORD PTR [ebp-0x20]
  42788b:	cmp    ebx,DWORD PTR ds:0x43d080
  427891:	je     0x4278be
  427893:	mov    eax,esi
  427895:	mov    esi,0xfc
  42789a:	add    ebx,edx
  42789c:	add    esi,eax
  42789e:	sub    ebx,eax
  4278a0:	add    DWORD PTR [ebp-0x14],esi
  4278a3:	cmp    ebx,0xffffffb7
  4278a6:	je     0x4278be
  4278a8:	cmp    ebx,DWORD PTR ds:0x43d084
  4278ae:	je     0x4278be
  4278b0:	mov    edx,DWORD PTR [ebp-0x20]
  4278b3:	xor    eax,eax
  4278b5:	mov    DWORD PTR [ebp-0x14],ebx
  4278b8:	sub    DWORD PTR [ebp-0x14],eax
  4278bb:	sub    DWORD PTR [ebp-0x14],edx
  4278be:	mov    edi,DWORD PTR [ebp-0x3c]
  4278c1:	cmp    edi,0x6b
  4278c4:	je     0x4278ea
  4278c6:	cmp    edi,DWORD PTR ds:0x43d080
  4278cc:	jne    0x4278ea
  4278ce:	cmp    edi,0x99ae
  4278d4:	je     0x4278ea
  4278d6:	cmp    edi,DWORD PTR [ebp-0x34]
  4278d9:	je     0x4278ea
  4278db:	cmp    edi,DWORD PTR ds:0x43d04c
  4278e1:	je     0x4278ea
  4278e3:	and    eax,esi
  4278e5:	or     eax,edx
  4278e7:	sub    DWORD PTR [ebp-0x20],eax
  4278ea:	call   edi
  4278ec:	mov    esi,DWORD PTR ds:0x43d080
  4278f2:	sub    DWORD PTR [ebp-0x20],ebx
  4278f5:	mov    ebx,esi
  4278f7:	sub    esi,ebx
  4278f9:	add    esi,ebx
  4278fb:	sub    DWORD PTR [ebp-0x20],esi
  4278fe:	mov    edi,esi
  427900:	mov    edx,DWORD PTR [ebp-0x14]
  427903:	and    edx,ebx
  427905:	sub    DWORD PTR [ebp-0x14],edi
  427908:	or     edx,edi
  42790a:	sub    edx,ebx
  42790c:	and    edx,eax
  42790e:	cmp    edx,0x7d
  427911:	je     0x42795a
  427913:	mov    esi,DWORD PTR [ebp-0x34]
  427916:	sub    esi,eax
  427918:	mov    ecx,DWORD PTR [ebp-0x20]
  42791b:	mov    DWORD PTR [ebp-0x14],ecx
  42791e:	add    edx,edi
  427920:	cmp    esi,edi
  427922:	je     0x42795a
  427924:	add    DWORD PTR [ebp-0x34],edx
  427927:	mov    eax,0xae
  42792c:	sub    DWORD PTR [ebp-0x20],esi
  42792f:	sub    eax,edx
  427931:	mov    edx,DWORD PTR [ebp-0x20]
  427934:	add    eax,edi
  427936:	add    DWORD PTR [ebp-0x14],eax
  427939:	sub    edx,edi
  42793b:	cmp    edx,0x5a
  42793e:	je     0x42795a
  427940:	mov    esi,DWORD PTR [ebp-0x14]
  427943:	cmp    edx,ecx
  427945:	je     0x42795a
  427947:	xor    ecx,ecx
  427949:	mov    DWORD PTR [ebp-0x20],edx
  42794c:	add    DWORD PTR [ebp-0x34],esi
  42794f:	mov    edi,DWORD PTR [ebp-0x34]
  427952:	sub    DWORD PTR [ebp-0x34],ecx
  427955:	add    edi,edx
  427957:	and    DWORD PTR [ebp-0x34],edi
  42795a:	add    edx,edx
  42795c:	cmp    edx,DWORD PTR ds:0x43d04c
  427962:	jne    0x427973
  427964:	cmp    edx,eax
  427966:	jne    0x427973
  427968:	cmp    edx,DWORD PTR ds:0x43d040
  42796e:	jne    0x427973
  427970:	sub    DWORD PTR [ebp-0x14],edx
  427973:	xor    eax,eax
  427975:	add    DWORD PTR [ebp-0x20],eax
  427978:	mov    esi,DWORD PTR [ebp-0x14]
  42797b:	mov    eax,DWORD PTR [ebp-0x20]
  42797e:	cmp    esi,DWORD PTR ds:0x43d048
  427984:	jne    0x4279b2
  427986:	mov    ebx,DWORD PTR [ebp-0x20]
  427989:	test   esi,0xce
  42798f:	jne    0x4279b2
  427991:	cmp    ebx,esi
  427993:	je     0x4279b2
  427995:	mov    ecx,DWORD PTR [ebp-0x20]
  427998:	sub    DWORD PTR [ebp-0x34],ecx
  42799b:	add    esi,esi
  42799d:	cmp    ebx,0xffffffb9
  4279a0:	jne    0x4279b2
  4279a2:	add    DWORD PTR [ebp-0x14],esi
  4279a5:	cmp    edx,DWORD PTR [ebp-0x18]
  4279a8:	je     0x4279b2
  4279aa:	mov    esi,ebx
  4279ac:	sub    DWORD PTR [ebp-0x20],eax
  4279af:	mov    DWORD PTR [ebp-0x14],esi
  4279b2:	cmp    eax,DWORD PTR [ebp-0x8]
  4279b5:	je     0x4279f0
  4279b7:	mov    edx,DWORD PTR [ebp-0x14]
  4279ba:	add    DWORD PTR [ebp-0x20],eax
  4279bd:	mov    esi,0xb8
  4279c2:	test   edx,0xcb
  4279c8:	je     0x4279f0
  4279ca:	cmp    ebx,DWORD PTR [ebp-0x10]
  4279cd:	jne    0x4279f0
  4279cf:	cmp    edx,DWORD PTR [ebp-0xc]
  4279d2:	jne    0x4279f0
  4279d4:	mov    ebx,edx
  4279d6:	add    esi,esi
  4279d8:	or     esi,edx
  4279da:	xor    edx,edx
  4279dc:	or     DWORD PTR [ebp-0x20],edx
  4279df:	add    ebx,eax
  4279e1:	add    esi,eax
  4279e3:	or     DWORD PTR [ebp-0x34],edx
  4279e6:	sub    ebx,eax
  4279e8:	sub    DWORD PTR [ebp-0x20],esi
  4279eb:	add    ebx,eax
  4279ed:	add    DWORD PTR [ebp-0x14],ebx
  4279f0:	pop    edi
  4279f1:	cmp    edi,0xffffff93
  4279f4:	jne    0x427a8d
  4279fa:	mov    ecx,0xda1
  4279ff:	cmp    edi,0x4a
  427a02:	jne    0x427a8d
  427a08:	add    ebx,ebx
  427a0a:	mov    ecx,DWORD PTR [ebp-0x34]
  427a0d:	mov    edx,DWORD PTR [ebp-0x20]
  427a10:	cmp    ebx,0xffffffe2
  427a13:	je     0x427a8d
  427a15:	mov    esi,0x89
  427a1a:	cmp    ecx,DWORD PTR ds:0x43d07c
  427a20:	je     0x427a8d
  427a22:	cmp    ebx,eax
  427a24:	jne    0x427a8d
  427a26:	cmp    ecx,DWORD PTR ds:0x43d07c
  427a2c:	jne    0x427a8d
  427a2e:	add    DWORD PTR [ebp-0x20],edi
  427a31:	or     DWORD PTR [ebp-0x14],edx
  427a34:	or     esi,edx
  427a36:	mov    eax,DWORD PTR [ebp-0x14]
  427a39:	test   ecx,0x61
  427a3f:	je     0x427a8d
  427a41:	mov    edx,DWORD PTR [ebp-0x34]
  427a44:	sub    edx,ecx
  427a46:	mov    ecx,DWORD PTR ds:0x43d080
  427a4c:	test   eax,0x7887
  427a51:	jne    0x427a8d
  427a53:	mov    DWORD PTR [ebp-0x1c],eax
  427a56:	sub    esi,ecx
  427a58:	add    DWORD PTR [ebp-0x34],eax
  427a5b:	sub    DWORD PTR [ebp-0x1c],esi
  427a5e:	cmp    ebx,0x42
  427a61:	je     0x427a8d
  427a63:	sub    DWORD PTR [ebp-0x34],ebx
  427a66:	and    edx,edi
  427a68:	sub    edx,eax
  427a6a:	and    edx,esi
  427a6c:	add    edx,ebx
  427a6e:	mov    esi,DWORD PTR ds:0x43d040
  427a74:	add    DWORD PTR [ebp-0x14],esi
  427a77:	cmp    edx,0xffffffd7
  427a7a:	jne    0x427a8d
  427a7c:	cmp    edi,0x11
  427a7f:	jne    0x427a8d
  427a81:	mov    DWORD PTR [ebp-0x20],edi
  427a84:	mov    ecx,DWORD PTR [ebp-0x1c]
  427a87:	or     DWORD PTR [ebp-0x20],ecx
  427a8a:	mov    DWORD PTR [ebp-0x14],edx
  427a8d:	pop    esi
  427a8e:	xor    edx,edx
  427a90:	test   esi,0x77
  427a96:	jne    0x427b60
  427a9c:	and    edx,eax
  427a9e:	cmp    edx,0xc38f
  427aa4:	jne    0x427b60
  427aaa:	sub    DWORD PTR [ebp-0x20],ecx
  427aad:	cmp    edx,0xffffffa8
  427ab0:	je     0x427b60
  427ab6:	add    DWORD PTR [ebp-0x34],edi
  427ab9:	cmp    edx,esi
  427abb:	jne    0x427b60
  427ac1:	mov    ecx,0x62
  427ac6:	xor    ebx,ebx
  427ac8:	cmp    edx,0xfffffffc
  427acb:	je     0x427b60
  427ad1:	xor    eax,eax
  427ad3:	sub    DWORD PTR [ebp-0x20],ebx
  427ad6:	add    eax,eax
  427ad8:	add    eax,edx
  427ada:	cmp    eax,0x7eac
  427adf:	je     0x427b60
  427ae1:	sub    DWORD PTR [ebp-0x14],esi
  427ae4:	mov    edx,ecx
  427ae6:	mov    ebx,DWORD PTR ds:0x43d07c
  427aec:	add    eax,ecx
  427aee:	add    eax,eax
  427af0:	add    eax,edi
  427af2:	sub    DWORD PTR [ebp-0x20],edx
  427af5:	and    ebx,edx
  427af7:	test   eax,0xc642
  427afc:	je     0x427b60
  427afe:	or     DWORD PTR [ebp-0x20],eax
  427b01:	mov    ecx,DWORD PTR [ebp-0x20]
  427b04:	and    ebx,edx
  427b06:	mov    edx,DWORD PTR [ebp-0x20]
  427b09:	cmp    edx,ecx
  427b0b:	jne    0x427b60
  427b0d:	add    DWORD PTR [ebp-0x34],edx
  427b10:	cmp    ecx,0x4a00
  427b16:	jne    0x427b60
  427b18:	mov    eax,DWORD PTR [ebp-0x34]
  427b1b:	cmp    eax,DWORD PTR [ebp-0x30]
  427b1e:	je     0x427b60
  427b20:	sub    DWORD PTR [ebp-0x20],ecx
  427b23:	add    DWORD PTR [ebp-0x14],eax
  427b26:	add    ebx,edx
  427b28:	sub    ebx,edi
  427b2a:	mov    eax,DWORD PTR [ebp-0x34]
  427b2d:	cmp    eax,0xfffffffc
  427b30:	je     0x427b60
  427b32:	add    eax,ebx
  427b34:	cmp    edx,0x64
  427b37:	jne    0x427b60
  427b39:	cmp    eax,DWORD PTR [ebp-0x2c]
  427b3c:	je     0x427b60
  427b3e:	mov    ecx,DWORD PTR [ebp-0x20]
  427b41:	mov    edx,DWORD PTR [ebp-0x34]
  427b44:	cmp    edx,DWORD PTR ds:0x43d084
  427b4a:	jne    0x427b60
  427b4c:	xor    ebx,ebx
  427b4e:	and    ecx,edi
  427b50:	sub    DWORD PTR [ebp-0x14],edx
  427b53:	or     DWORD PTR [ebp-0x20],ebx
  427b56:	cmp    ecx,0x59
  427b59:	jne    0x427b60
  427b5b:	and    ecx,eax
  427b5d:	and    DWORD PTR [ebp-0x34],ecx
  427b60:	pop    ebx
  427b61:	cmp    ebx,0xffffffb2
  427b64:	jne    0x427b6e
  427b66:	mov    edx,DWORD PTR [ebp-0x20]
  427b69:	add    edx,ebx
  427b6b:	or     DWORD PTR [ebp-0x14],edx
  427b6e:	leave  
  427b6f:	ret    
  427b70:	int3   
  427b71:	int3   
  427b72:	int3   
  427b73:	int3   
  427b74:	int3   
  427b75:	push   ebp
  427b76:	mov    ebp,esp
  427b78:	sub    esp,0x48
  427b7b:	mov    ecx,0x7a
  427b80:	mov    eax,ecx
  427b82:	sub    ecx,eax
  427b84:	mov    DWORD PTR [ebp-0x48],ecx
  427b87:	push   ebx
  427b88:	add    ecx,eax
  427b8a:	mov    DWORD PTR [ebp-0x48],ecx
  427b8d:	push   esi
  427b8e:	mov    ecx,0xed54
  427b93:	xor    ebx,ebx
  427b95:	mov    DWORD PTR [ebp-0x48],ebx
  427b98:	add    eax,eax
  427b9a:	sub    eax,ecx
  427b9c:	sub    eax,ecx
  427b9e:	add    DWORD PTR [ebp-0x48],eax
  427ba1:	push   edi
  427ba2:	and    DWORD PTR [ebp-0x48],ebx
  427ba5:	mov    ecx,DWORD PTR [ebp-0x48]
  427ba8:	add    ecx,ebx
  427baa:	add    DWORD PTR [ebp-0x48],ebx
  427bad:	mov    ebx,0x98
  427bb2:	sub    ecx,ebx
  427bb4:	cmp    ecx,0x602f
  427bba:	je     0x427bbf
  427bbc:	add    DWORD PTR [ebp-0x48],ecx
  427bbf:	mov    DWORD PTR [ebp-0x2c],0x200e1fa5
  427bc6:	sub    eax,ecx
  427bc8:	and    eax,ebx
  427bca:	and    eax,ecx
  427bcc:	mov    ebx,DWORD PTR [ebp-0x48]
  427bcf:	test   ebx,0x8e
  427bd5:	je     0x427be6
  427bd7:	xor    ecx,ecx
  427bd9:	cmp    ebx,0x2e
  427bdc:	jne    0x427be6
  427bde:	or     DWORD PTR [ebp-0x48],ecx
  427be1:	sub    eax,ebx
  427be3:	and    DWORD PTR [ebp-0x48],eax
  427be6:	call   0x42830f
  427beb:	add    ebx,ebx
  427bed:	cmp    ebx,DWORD PTR [ebp-0x24]
  427bf0:	je     0x427c26
  427bf2:	cmp    ebx,0xffffffd7
  427bf5:	jne    0x427c26
  427bf7:	mov    esi,DWORD PTR [ebp-0x48]
  427bfa:	mov    ecx,DWORD PTR [ebp-0x48]
  427bfd:	or     esi,ecx
  427bff:	cmp    ebx,DWORD PTR [ebp-0x24]
  427c02:	jne    0x427c26
  427c04:	mov    ecx,DWORD PTR [ebp-0x48]
  427c07:	mov    edi,0x8
  427c0c:	or     ecx,ebx
  427c0e:	or     DWORD PTR [ebp-0x48],esi
  427c11:	add    DWORD PTR [ebp-0x48],edi
  427c14:	cmp    ecx,0xc585
  427c1a:	je     0x427c26
  427c1c:	cmp    ecx,DWORD PTR [ebp-0x48]
  427c1f:	je     0x427c26
  427c21:	sub    ecx,edi
  427c23:	sub    DWORD PTR [ebp-0x48],ecx
  427c26:	mov    DWORD PTR [ebp-0x8],eax
  427c29:	and    esi,ebx
  427c2b:	mov    ebx,DWORD PTR [ebp-0x48]
  427c2e:	cmp    ebx,ecx
  427c30:	je     0x427c5d
  427c32:	mov    eax,edi
  427c34:	sub    esi,ebx
  427c36:	mov    ebx,DWORD PTR [ebp-0x48]
  427c39:	add    esi,edi
  427c3b:	test   ebx,0xc5
  427c41:	je     0x427c5d
  427c43:	mov    edx,0x41
  427c48:	add    DWORD PTR [ebp-0x48],edx
  427c4b:	add    DWORD PTR [ebp-0x48],esi
  427c4e:	sub    DWORD PTR [ebp-0x48],eax
  427c51:	cmp    ecx,0x17
  427c54:	jne    0x427c5d
  427c56:	cmp    ebx,ecx
  427c58:	je     0x427c5d
  427c5a:	add    DWORD PTR [ebp-0x48],ebx
  427c5d:	call   0x42830f
  427c62:	sub    DWORD PTR [ebp-0x48],edi
  427c65:	mov    DWORD PTR [ebp-0x40],eax
  427c68:	or     DWORD PTR [ebp-0x48],esi
  427c6b:	call   0x42830f
  427c70:	cmp    ebx,DWORD PTR ds:0x43d08c
  427c76:	jne    0x427ce4
  427c78:	cmp    esi,0xffffff98
  427c7b:	je     0x427ce4
  427c7d:	mov    ebx,DWORD PTR [ebp-0x48]
  427c80:	mov    edi,DWORD PTR ds:0x43d08c
  427c86:	add    DWORD PTR [ebp-0x48],esi
  427c89:	cmp    ebx,0xffffffee
  427c8c:	je     0x427ce4
  427c8e:	mov    ecx,DWORD PTR ds:0x43d08c
  427c94:	mov    esi,eax
  427c96:	sub    ebx,eax
  427c98:	cmp    esi,ecx
  427c9a:	jne    0x427ce4
  427c9c:	cmp    ebx,DWORD PTR [ebp-0x10]
  427c9f:	jne    0x427ce4
  427ca1:	add    DWORD PTR [ebp-0x48],ebx
  427ca4:	mov    ebx,esi
  427ca6:	sub    DWORD PTR [ebp-0x48],ecx
  427ca9:	cmp    esi,DWORD PTR [ebp-0x38]
  427cac:	je     0x427ce4
  427cae:	mov    edx,0x5202002
  427cb3:	mov    ecx,DWORD PTR ds:0x43d08c
  427cb9:	sub    edx,ecx
  427cbb:	add    edi,edx
  427cbd:	add    ebx,edx
  427cbf:	test   ebx,0x20
  427cc5:	jne    0x427ce4
  427cc7:	add    DWORD PTR [ebp-0x48],ebx
  427cca:	mov    esi,edi
  427ccc:	mov    edi,DWORD PTR ds:0x43d08c
  427cd2:	add    esi,ebx
  427cd4:	sub    DWORD PTR [ebp-0x48],edi
  427cd7:	cmp    esi,DWORD PTR ds:0x43d08c
  427cdd:	je     0x427ce4
  427cdf:	add    esi,eax
  427ce1:	sub    DWORD PTR [ebp-0x48],esi
  427ce4:	mov    DWORD PTR [ebp-0x30],eax
  427ce7:	sub    DWORD PTR [ebp-0x48],edi
  427cea:	mov    ebx,DWORD PTR [ebp-0x40]
  427ced:	mov    eax,0x2d
  427cf2:	sub    DWORD PTR [ebp-0x48],eax
  427cf5:	sub    ebx,DWORD PTR [ebp-0x8]
  427cf8:	sub    DWORD PTR [ebp-0x48],esi
  427cfb:	xor    ebx,0x601dc765
  427d01:	and    DWORD PTR [ebp-0x48],ecx
  427d04:	mov    edx,DWORD PTR [ebp-0x30]
  427d07:	sub    edi,esi
  427d09:	mov    ecx,DWORD PTR [ebp-0x48]
  427d0c:	sub    edi,ecx
  427d0e:	cmp    edx,0x39
  427d11:	jne    0x427db7
  427d17:	sub    edi,edx
  427d19:	sub    DWORD PTR [ebp-0x48],ebx
  427d1c:	mov    eax,esi
  427d1e:	xor    DWORD PTR [ebp-0x48],eax
  427d21:	test   edi,0xc9
  427d27:	jne    0x427db7
  427d2d:	mov    esi,0x5580154
  427d32:	cmp    edx,DWORD PTR ds:0x43d08c
  427d38:	je     0x427db7
  427d3a:	sub    DWORD PTR [ebp-0x48],edi
  427d3d:	mov    edi,DWORD PTR [ebp-0x48]
  427d40:	test   edi,0x35
  427d46:	jne    0x427db7
  427d48:	cmp    edi,DWORD PTR [ebp-0x38]
  427d4b:	jne    0x427db7
  427d4d:	mov    ecx,0x5a
  427d52:	cmp    edi,0x2c
  427d55:	je     0x427db7
  427d57:	add    edi,esi
  427d59:	mov    eax,0x2
  427d5e:	cmp    edi,0x152a342b
  427d64:	je     0x427db7
  427d66:	mov    esi,DWORD PTR [ebp-0x48]
  427d69:	mov    ecx,0xd3
  427d6e:	sub    DWORD PTR [ebp-0x48],ecx
  427d71:	add    edi,edx
  427d73:	and    esi,edx
  427d75:	cmp    esi,0x67
  427d78:	jne    0x427db7
  427d7a:	mov    ecx,DWORD PTR ds:0x43d08c
  427d80:	mov    eax,DWORD PTR ds:0x43d044
  427d86:	cmp    esi,edx
  427d88:	je     0x427db7
  427d8a:	cmp    esi,0x79
  427d8d:	je     0x427db7
  427d8f:	or     DWORD PTR [ebp-0x48],esi
  427d92:	mov    esi,DWORD PTR [ebp-0x48]
  427d95:	add    DWORD PTR [ebp-0x48],esi
  427d98:	cmp    edi,0x48
  427d9b:	je     0x427db7
  427d9d:	mov    ecx,0x25
  427da2:	sub    edi,ecx
  427da4:	add    DWORD PTR [ebp-0x48],esi
  427da7:	sub    edi,eax
  427da9:	add    edi,esi
  427dab:	mov    esi,DWORD PTR ds:0x43d044
  427db1:	add    DWORD PTR [ebp-0x48],esi
  427db4:	add    DWORD PTR [ebp-0x48],edi
  427db7:	sub    edx,DWORD PTR [ebp-0x40]
  427dba:	cmp    edx,eax
  427dbc:	jne    0x427dce
  427dbe:	sub    eax,ecx
  427dc0:	mov    ecx,DWORD PTR ds:0x43d08c
  427dc6:	sub    ecx,eax
  427dc8:	sub    DWORD PTR [ebp-0x48],edx
  427dcb:	xor    DWORD PTR [ebp-0x48],ecx
  427dce:	xor    edx,0x601dc760
  427dd4:	or     ecx,edx
  427dd6:	sub    DWORD PTR [ebp-0x48],ecx
  427dd9:	cmp    ebx,edx
  427ddb:	je     0x428143
  427de1:	mov    ebx,DWORD PTR ds:0x43d044
  427de7:	add    ebx,edx
  427de9:	cmp    edi,0x42
  427dec:	jne    0x427e0b
  427dee:	xor    eax,eax
  427df0:	sub    eax,edx
  427df2:	cmp    eax,DWORD PTR [ebp-0x24]
  427df5:	je     0x427e0b
  427df7:	add    DWORD PTR [ebp-0x48],eax
  427dfa:	cmp    ebx,DWORD PTR [ebp-0x24]
  427dfd:	jne    0x427e0b
  427dff:	and    ebx,ecx
  427e01:	cmp    ebx,DWORD PTR [ebp-0x48]
  427e04:	jne    0x427e0b
  427e06:	and    ebx,ecx
  427e08:	sub    DWORD PTR [ebp-0x48],ebx
  427e0b:	push   0x43d08c
  427e10:	call   DWORD PTR ds:0x43b4b0
  427e16:	mov    edi,0x35
  427e1b:	mov    esi,0x5814
  427e20:	add    DWORD PTR [ebp-0x48],esi
  427e23:	or     DWORD PTR [ebp-0x48],esi
  427e26:	and    DWORD PTR [ebp-0x48],eax
  427e29:	add    DWORD PTR [ebp-0x48],edi
  427e2c:	or     eax,eax
  427e2e:	je     0x428143
  427e34:	add    ebx,esi
  427e36:	or     ebx,eax
  427e38:	mov    ecx,DWORD PTR [ebp-0x48]
  427e3b:	mov    edx,0xb6
  427e40:	cmp    ebx,0x91050044
  427e46:	je     0x427f80
  427e4c:	mov    esi,DWORD PTR [ebp-0x48]
  427e4f:	sub    esi,ecx
  427e51:	mov    ecx,ebx
  427e53:	add    DWORD PTR [ebp-0x48],edx
  427e56:	or     DWORD PTR [ebp-0x48],ebx
  427e59:	cmp    ecx,0x6d
  427e5c:	je     0x427f80
  427e62:	mov    edi,DWORD PTR [ebp-0x48]
  427e65:	mov    edx,DWORD PTR [ebp-0x48]
  427e68:	cmp    esi,DWORD PTR [ebp-0x44]
  427e6b:	jne    0x427f80
  427e71:	add    edx,eax
  427e73:	mov    ebx,DWORD PTR ds:0x43d044
  427e79:	add    DWORD PTR [ebp-0x48],ecx
  427e7c:	mov    ecx,DWORD PTR [ebp-0x48]
  427e7f:	sub    DWORD PTR [ebp-0x48],ebx
  427e82:	cmp    edi,eax
  427e84:	je     0x427f80
  427e8a:	cmp    esi,DWORD PTR ds:0x43d044
  427e90:	jne    0x427f80
  427e96:	mov    ebx,DWORD PTR [ebp-0x48]
  427e99:	and    esi,ecx
  427e9b:	add    edx,edi
  427e9d:	sub    edx,ecx
  427e9f:	and    DWORD PTR [ebp-0x48],esi
  427ea2:	add    DWORD PTR [ebp-0x48],edx
  427ea5:	add    ebx,edi
  427ea7:	test   ebx,0x0
  427ead:	jne    0x427f80
  427eb3:	mov    edi,DWORD PTR [ebp-0x48]
  427eb6:	add    DWORD PTR [ebp-0x48],edi
  427eb9:	mov    esi,DWORD PTR [ebp-0x48]
  427ebc:	add    ebx,ecx
  427ebe:	cmp    ebx,DWORD PTR ds:0x43d08c
  427ec4:	je     0x427f80
  427eca:	mov    ecx,DWORD PTR ds:0x43d044
  427ed0:	add    DWORD PTR [ebp-0x48],ecx
  427ed3:	mov    edi,eax
  427ed5:	mov    DWORD PTR [ebp-0x48],esi
  427ed8:	cmp    ebx,DWORD PTR ds:0x43d044
  427ede:	je     0x427f80
  427ee4:	add    edi,edx
  427ee6:	add    DWORD PTR [ebp-0x48],ebx
  427ee9:	xor    ecx,ecx
  427eeb:	mov    esi,0x9477
  427ef0:	add    DWORD PTR [ebp-0x48],ecx
  427ef3:	cmp    edx,0x7fa1
  427ef9:	jne    0x427f80
  427eff:	mov    edx,DWORD PTR [ebp-0x48]
  427f02:	add    edi,ebx
  427f04:	mov    ebx,eax
  427f06:	or     DWORD PTR [ebp-0x48],ebx
  427f09:	or     esi,edi
  427f0b:	add    DWORD PTR [ebp-0x48],ebx
  427f0e:	mov    DWORD PTR [ebp-0x18],eax
  427f11:	test   edi,0xe3
  427f17:	je     0x427f80
  427f19:	sub    esi,ecx
  427f1b:	mov    edi,DWORD PTR [ebp-0x48]
  427f1e:	mov    ebx,0xa1
  427f23:	cmp    esi,DWORD PTR ds:0x43d044
  427f29:	je     0x427f80
  427f2b:	xor    ecx,ecx
  427f2d:	add    esi,esi
  427f2f:	cmp    edx,DWORD PTR [ebp-0x48]
  427f32:	jne    0x427f80
  427f34:	mov    ecx,0xb7
  427f39:	sub    DWORD PTR [ebp-0x18],esi
  427f3c:	cmp    edx,DWORD PTR ds:0x43d044
  427f42:	je     0x427f80
  427f44:	add    DWORD PTR [ebp-0x18],edx
  427f47:	add    DWORD PTR [ebp-0x48],edi
  427f4a:	mov    esi,0x56
  427f4f:	add    esi,ecx
  427f51:	add    DWORD PTR [ebp-0x48],esi
  427f54:	sub    ebx,ecx
  427f56:	mov    esi,ecx
  427f58:	mov    DWORD PTR [ebp-0x48],eax
  427f5b:	add    DWORD PTR [ebp-0x48],esi
  427f5e:	sub    ebx,esi
  427f60:	sub    ebx,edx
  427f62:	and    ebx,esi
  427f64:	cmp    ebx,0x50d9a8a
  427f6a:	jne    0x427f80
  427f6c:	cmp    ebx,DWORD PTR ds:0x43d044
  427f72:	je     0x427f80
  427f74:	cmp    ebx,0xffffffd8
  427f77:	jne    0x427f80
  427f79:	add    ebx,eax
  427f7b:	sub    ebx,edx
  427f7d:	add    DWORD PTR [ebp-0x18],ebx
  427f80:	add    DWORD PTR [ebp-0x2c],0xe075b906
  427f87:	mov    edx,0xec
  427f8c:	xor    DWORD PTR [ebp-0x48],edx
  427f8f:	lea    ecx,[eax+0xcab]
  427f95:	or     edi,edx
  427f97:	cmp    ecx,0xffffffb5
  427f9a:	jne    0x427fd3
  427f9c:	cmp    edi,DWORD PTR [ebp-0x10]
  427f9f:	jne    0x427fd3
  427fa1:	mov    edx,DWORD PTR [ebp-0x48]
  427fa4:	mov    ebx,DWORD PTR [ebp-0x48]
  427fa7:	and    DWORD PTR [ebp-0x48],ecx
  427faa:	sub    ebx,edx
  427fac:	cmp    edi,DWORD PTR ds:0x43d08c
  427fb2:	jne    0x427fd3
  427fb4:	test   ebx,0xda
  427fba:	jne    0x427fd3
  427fbc:	cmp    ebx,DWORD PTR [ebp-0x24]
  427fbf:	jne    0x427fd3
  427fc1:	or     ebx,esi
  427fc3:	cmp    ecx,0x6e
  427fc6:	je     0x427fd3
  427fc8:	cmp    ebx,0xffffffa5
  427fcb:	jne    0x427fd3
  427fcd:	mov    DWORD PTR [ebp-0xc],ebx
  427fd0:	add    DWORD PTR [ebp-0xc],edi
  427fd3:	inc    ecx
  427fd4:	add    eax,edi
  427fd6:	sub    DWORD PTR [ebp-0x48],eax
  427fd9:	mov    eax,DWORD PTR [ecx]
  427fdb:	cmp    ebx,DWORD PTR [ebp-0x44]
  427fde:	jne    0x428033
  427fe0:	mov    ebx,0x1d
  427fe5:	sub    ebx,edx
  427fe7:	cmp    ebx,0xc3ff
  427fed:	jne    0x428033
  427fef:	test   eax,0xf5
  427ff4:	je     0x428033
  427ff6:	cmp    ebx,DWORD PTR ds:0x43d08c
  427ffc:	je     0x428033
  427ffe:	cmp    ebx,edi
  428000:	jne    0x428033
  428002:	add    ebx,edi
  428004:	or     DWORD PTR [ebp-0x48],eax
  428007:	sub    ebx,esi
  428009:	and    ebx,esi
  42800b:	cmp    ebx,0xc
  42800e:	je     0x428033
  428010:	sub    DWORD PTR [ebp-0x48],eax
  428013:	or     ebx,ecx
  428015:	cmp    eax,DWORD PTR ds:0x43d08c
  42801b:	je     0x428033
  42801d:	cmp    ebx,0xffffff86
  428020:	jne    0x428033
  428022:	cmp    ebx,esi
  428024:	jne    0x428033
  428026:	add    ebx,edi
  428028:	cmp    ebx,DWORD PTR [ebp-0x38]
  42802b:	je     0x428033
  42802d:	add    DWORD PTR [ebp-0x48],edi
  428030:	or     DWORD PTR [ebp-0x48],ebx
  428033:	sub    eax,0xe04b9029
  428038:	cmp    eax,0x1fee7010
  42803d:	jne    0x427f95
  428043:	cmp    edx,DWORD PTR ds:0x43d08c
  428049:	jne    0x4280e7
  42804f:	mov    edi,DWORD PTR [ebp-0x48]
  428052:	mov    eax,0x11822350
  428057:	cmp    edi,0x6c
  42805a:	jne    0x4280e7
  428060:	test   edi,0x37
  428066:	jne    0x4280e7
  428068:	add    DWORD PTR [ebp-0x48],eax
  42806b:	mov    ebx,DWORD PTR [ebp-0x48]
  42806e:	add    edi,esi
  428070:	test   edi,0xfa
  428076:	jne    0x4280e7
  428078:	add    DWORD PTR [ebp-0x48],ebx
  42807b:	sub    DWORD PTR [ebp-0x48],ecx
  42807e:	and    edi,ecx
  428080:	and    edi,edx
  428082:	mov    ebx,0xb63e
  428087:	cmp    edi,0x5268
  42808d:	je     0x4280e7
  42808f:	mov    esi,0x23
  428094:	mov    edx,DWORD PTR [ebp-0x48]
  428097:	add    DWORD PTR [ebp-0x48],edx
  42809a:	add    DWORD PTR [ebp-0x48],edi
  42809d:	and    esi,eax
  42809f:	xor    DWORD PTR [ebp-0x48],esi
  4280a2:	or     ebx,edx
  4280a4:	cmp    ebx,DWORD PTR ds:0x43d044
  4280aa:	je     0x4280e7
  4280ac:	cmp    ebx,DWORD PTR [ebp-0xc]
  4280af:	je     0x4280e7
  4280b1:	sub    ebx,edi
  4280b3:	cmp    ebx,0x5
  4280b6:	je     0x4280e7
  4280b8:	mov    edi,0x39
  4280bd:	mov    esi,DWORD PTR [ebp-0x48]
  4280c0:	sub    esi,edx
  4280c2:	and    esi,ecx
  4280c4:	sub    DWORD PTR [ebp-0x48],esi
  4280c7:	sub    ebx,esi
  4280c9:	and    edi,edx
  4280cb:	add    DWORD PTR [ebp-0x48],edi
  4280ce:	sub    ebx,edi
  4280d0:	cmp    esi,0x21148110
  4280d6:	je     0x4280e7
  4280d8:	xor    eax,eax
  4280da:	add    DWORD PTR [ebp-0x48],ebx
  4280dd:	add    eax,edi
  4280df:	xor    DWORD PTR [ebp-0x48],edi
  4280e2:	add    eax,esi
  4280e4:	sub    DWORD PTR [ebp-0x48],eax
  4280e7:	mov    eax,DWORD PTR [ecx+0x4]
  4280ea:	mov    esi,DWORD PTR [ebp-0x48]
  4280ed:	sub    esi,edx
  4280ef:	xor    edx,edx
  4280f1:	test   eax,0x3b
  4280f6:	je     0x428140
  4280f8:	sub    esi,edi
  4280fa:	add    edx,edi
  4280fc:	mov    edi,0x45134281
  428101:	xor    ebx,ebx
  428103:	sub    edx,eax
  428105:	mov    DWORD PTR [ebp-0x28],esi
  428108:	cmp    edx,ecx
  42810a:	jne    0x428140
  42810c:	and    edi,ecx
  42810e:	mov    ecx,DWORD PTR [ebp-0x48]
  428111:	mov    DWORD PTR [ebp-0x28],ebx
  428114:	cmp    edx,0xe578
  42811a:	jne    0x428140
  42811c:	xor    esi,esi
  42811e:	and    ecx,eax
  428120:	mov    ebx,DWORD PTR [ebp-0x48]
  428123:	add    ebx,edx
  428125:	or     DWORD PTR [ebp-0x48],edi
  428128:	cmp    ebx,0x5f
  42812b:	jne    0x428140
  42812d:	and    DWORD PTR [ebp-0x28],ecx
  428130:	mov    DWORD PTR [ebp-0x28],ebx
  428133:	cmp    edx,0x22
  428136:	jne    0x428140
  428138:	add    esi,ebx
  42813a:	add    DWORD PTR [ebp-0x48],ebx
  42813d:	and    DWORD PTR [ebp-0x28],esi
  428140:	sub    DWORD PTR [ebp-0x2c],eax
  428143:	cmp    edx,0x3e
  428146:	jne    0x42814b
  428148:	mov    DWORD PTR [ebp-0x48],edi
  42814b:	and    esi,eax
  42814d:	add    esi,eax
  42814f:	mov    ecx,DWORD PTR ds:0x43d070
  428155:	sub    ecx,eax
  428157:	add    DWORD PTR [ebp-0x48],ebx
  42815a:	sub    DWORD PTR [ebp-0x48],esi
  42815d:	add    ecx,edx
  42815f:	mov    edx,DWORD PTR [ebp-0x48]
  428162:	add    ecx,esi
  428164:	sub    DWORD PTR [ebp-0x48],ecx
  428167:	cmp    edx,DWORD PTR ds:0x43d070
  42816d:	jne    0x428200
  428173:	cmp    edx,0x18
  428176:	je     0x428200
  42817c:	mov    edi,DWORD PTR ds:0x43d070
  428182:	xor    ebx,ebx
  428184:	cmp    esi,DWORD PTR [ebp-0x24]
  428187:	je     0x428200
  428189:	mov    edi,DWORD PTR [ebp-0x48]
  42818c:	add    DWORD PTR [ebp-0x48],edx
  42818f:	mov    ecx,esi
  428191:	cmp    ecx,0x4e
  428194:	je     0x428200
  428196:	mov    eax,DWORD PTR [ebp-0x48]
  428199:	cmp    edi,0xffffff81
  42819c:	je     0x428200
  42819e:	sub    DWORD PTR [ebp-0x48],eax
  4281a1:	mov    eax,DWORD PTR [ebp-0x48]
  4281a4:	sub    ecx,edx
  4281a6:	mov    esi,DWORD PTR [ebp-0x48]
  4281a9:	sub    edi,ebx
  4281ab:	add    DWORD PTR [ebp-0x48],ecx
  4281ae:	cmp    eax,DWORD PTR ds:0x43d08c
  4281b4:	jne    0x428200
  4281b6:	mov    edx,0x24
  4281bb:	cmp    edi,0x3590c041
  4281c1:	je     0x428200
  4281c3:	mov    ecx,DWORD PTR [ebp-0x48]
  4281c6:	cmp    ecx,0x76
  4281c9:	je     0x428200
  4281cb:	sub    esi,eax
  4281cd:	mov    eax,DWORD PTR ds:0x43d044
  4281d3:	mov    ebx,DWORD PTR [ebp-0x48]
  4281d6:	sub    DWORD PTR [ebp-0x48],eax
  4281d9:	cmp    ecx,ebx
  4281db:	je     0x428200
  4281dd:	cmp    edi,DWORD PTR ds:0x43d08c
  4281e3:	jne    0x428200
  4281e5:	xor    eax,eax
  4281e7:	mov    edx,DWORD PTR [ebp-0x48]
  4281ea:	add    DWORD PTR [ebp-0x48],ecx
  4281ed:	sub    DWORD PTR [ebp-0x48],eax
  4281f0:	add    DWORD PTR [ebp-0x48],esi
  4281f3:	sub    DWORD PTR [ebp-0x48],edi
  4281f6:	and    ebx,edi
  4281f8:	add    DWORD PTR [ebp-0x48],edx
  4281fb:	sub    ebx,edx
  4281fd:	sub    DWORD PTR [ebp-0x48],ebx
  428200:	mov    edx,DWORD PTR [ebp+0xc]
  428203:	sub    DWORD PTR [ebp-0x48],edx
  428206:	mov    ecx,DWORD PTR [ebp-0x2c]
  428209:	mov    edi,DWORD PTR ds:0x43d044
  42820f:	mov    DWORD PTR [ebp-0x48],edx
  428212:	cmp    ecx,DWORD PTR [ebp-0x3c]
  428215:	je     0x42821a
  428217:	add    DWORD PTR [ebp-0x48],edi
  42821a:	mov    DWORD PTR [edx+0x0],ecx
  42821d:	or     edi,ebx
  42821f:	mov    DWORD PTR [ebp-0x4],edi
  428222:	sub    DWORD PTR [ebp-0x4],eax
  428225:	pop    edi
  428226:	cmp    edx,DWORD PTR [ebp-0x34]
  428229:	je     0x428248
  42822b:	mov    edx,0x4a02
  428230:	sub    DWORD PTR [ebp-0x4],eax
  428233:	sub    DWORD PTR [ebp-0x4],esi
  428236:	sub    DWORD PTR [ebp-0x4],eax
  428239:	mov    eax,0xa8
  42823e:	sub    DWORD PTR [ebp-0x48],edi
  428241:	add    eax,edx
  428243:	sub    eax,edi
  428245:	or     DWORD PTR [ebp-0x48],eax
  428248:	pop    esi
  428249:	add    ebx,ebx
  42824b:	add    DWORD PTR [ebp-0x48],ecx
  42824e:	sub    ebx,ecx
  428250:	mov    eax,esi
  428252:	mov    edx,DWORD PTR [ebp-0x4]
  428255:	sub    DWORD PTR [ebp-0x4],edx
  428258:	cmp    eax,0xffffffdf
  42825b:	je     0x4282fa
  428261:	xor    ecx,ecx
  428263:	mov    edx,0x75
  428268:	add    DWORD PTR [ebp-0x4],eax
  42826b:	or     edx,ecx
  42826d:	sub    ebx,edi
  42826f:	sub    edx,eax
  428271:	cmp    ebx,0xffffffac
  428274:	jne    0x4282fa
  42827a:	mov    ecx,0x3e
  42827f:	mov    eax,DWORD PTR [ebp-0x48]
  428282:	add    ecx,edi
  428284:	add    ebx,ebx
  428286:	cmp    edx,0xfffffffa
  428289:	je     0x4282fa
  42828b:	cmp    ecx,0x19
  42828e:	je     0x4282fa
  428290:	sub    ecx,esi
  428292:	test   ecx,0x75fc
  428298:	jne    0x4282fa
  42829a:	cmp    ebx,0xffffffe0
  42829d:	jne    0x4282fa
  42829f:	sub    DWORD PTR [ebp-0x4],ebx
  4282a2:	test   ecx,0x60
  4282a8:	jne    0x4282fa
  4282aa:	xor    DWORD PTR [ebp-0x4],eax
  4282ad:	mov    eax,DWORD PTR [ebp-0x4]
  4282b0:	mov    ebx,DWORD PTR [ebp-0x48]
  4282b3:	sub    DWORD PTR [ebp-0x4],ebx
  4282b6:	and    DWORD PTR [ebp-0x48],eax
  4282b9:	add    ecx,ebx
  4282bb:	xor    DWORD PTR [ebp-0x48],edx
  4282be:	add    ecx,esi
  4282c0:	add    DWORD PTR [ebp-0x48],eax
  4282c3:	cmp    ecx,0xffffff82
  4282c6:	jne    0x4282fa
  4282c8:	mov    edx,0xa
  4282cd:	and    DWORD PTR [ebp-0x48],esi
  4282d0:	cmp    ecx,0x3d
  4282d3:	je     0x4282fa
  4282d5:	cmp    ecx,0xffffffd1
  4282d8:	jne    0x4282fa
  4282da:	mov    edx,DWORD PTR [ebp-0x48]
  4282dd:	mov    ebx,0x8e
  4282e2:	add    DWORD PTR [ebp-0x48],ecx
  4282e5:	add    DWORD PTR [ebp-0x4],ecx
  4282e8:	cmp    edx,DWORD PTR ds:0x43d044
  4282ee:	jne    0x4282fa
  4282f0:	cmp    edx,edi
  4282f2:	jne    0x4282f7
  4282f4:	add    DWORD PTR [ebp-0x4],edx
  4282f7:	sub    DWORD PTR [ebp-0x4],ebx
  4282fa:	pop    ebx
  4282fb:	cmp    ebx,0x6437
  428301:	jne    0x428306
  428303:	sub    DWORD PTR [ebp-0x4],ebx
  428306:	leave  
  428307:	ret    0x8
  42830a:	int3   
  42830b:	int3   
  42830c:	int3   
  42830d:	int3   
  42830e:	int3   
  42830f:	push   ebp
  428310:	mov    ebp,esp
  428312:	sub    esp,0x24
  428315:	xor    edx,edx
  428317:	mov    eax,0x3c
  42831c:	mov    DWORD PTR [ebp-0x4],eax
  42831f:	or     DWORD PTR [ebp-0x4],edx
  428322:	push   ebx
  428323:	or     DWORD PTR [ebp-0x4],eax
  428326:	push   esi
  428327:	mov    edx,DWORD PTR [ebp-0x4]
  42832a:	mov    ecx,DWORD PTR [ebp-0x4]
  42832d:	xor    DWORD PTR [ebp-0x4],eax
  428330:	cmp    ecx,0x5928
  428336:	jne    0x4283f9
  42833c:	cmp    ecx,0x2f
  42833f:	je     0x4283f9
  428345:	cmp    edx,0xffffffe4
  428348:	je     0x4283f9
  42834e:	cmp    ecx,0x5f
  428351:	jne    0x4283f9
  428357:	mov    ebx,DWORD PTR [ebp-0x4]
  42835a:	sub    edx,eax
  42835c:	add    DWORD PTR [ebp-0x4],ecx
  42835f:	mov    ecx,DWORD PTR [ebp-0x4]
  428362:	cmp    edx,DWORD PTR [ebp-0x8]
  428365:	je     0x4283f9
  42836b:	mov    eax,0x55
  428370:	mov    esi,0x80
  428375:	sub    eax,esi
  428377:	sub    DWORD PTR [ebp-0x4],eax
  42837a:	sub    DWORD PTR [ebp-0x4],ebx
  42837d:	xor    DWORD PTR [ebp-0x4],ecx
  428380:	sub    edx,eax
  428382:	add    edx,ebx
  428384:	and    edx,ecx
  428386:	test   edx,0x80
  42838c:	jne    0x4283f9
  42838e:	add    edx,ecx
  428390:	mov    esi,0xbe
  428395:	mov    ecx,0x46
  42839a:	sub    ecx,esi
  42839c:	and    ecx,eax
  42839e:	sub    edx,ebx
  4283a0:	sub    edx,ebx
  4283a2:	cmp    ebx,0xffffffd8
  4283a5:	je     0x4283f9
  4283a7:	mov    ebx,0x41
  4283ac:	sub    ecx,eax
  4283ae:	cmp    edx,0xffffff80
  4283b1:	je     0x4283f9
  4283b3:	mov    esi,0xc8af
  4283b8:	cmp    edx,0x1849
  4283be:	je     0x4283f9
  4283c0:	mov    eax,DWORD PTR [ebp-0x4]
  4283c3:	sub    esi,ecx
  4283c5:	sub    edx,ebx
  4283c7:	sub    DWORD PTR [ebp-0x4],eax
  4283ca:	mov    ebx,0xac62
  4283cf:	add    edx,ecx
  4283d1:	sub    DWORD PTR [ebp-0x4],esi
  4283d4:	and    edx,eax
  4283d6:	mov    DWORD PTR [ebp-0x4],edx
  4283d9:	add    edx,ebx
  4283db:	cmp    eax,0x15
  4283de:	jne    0x4283f9
  4283e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4283e3:	mov    esi,DWORD PTR [ebp-0x4]
  4283e6:	add    DWORD PTR [ebp-0x4],esi
  4283e9:	add    edx,ecx
  4283eb:	mov    DWORD PTR [ebp-0x4],esi
  4283ee:	test   edx,0x77
  4283f4:	je     0x4283f9
  4283f6:	sub    DWORD PTR [ebp-0x4],edx
  4283f9:	push   edi
  4283fa:	mov    eax,ecx
  4283fc:	add    DWORD PTR [ebp-0x4],ecx
  4283ff:	xor    ebx,ebx
  428401:	add    eax,esi
  428403:	and    DWORD PTR [ebp-0x4],eax
  428406:	add    ebx,ecx
  428408:	add    ebx,esi
  42840a:	cmp    edx,0x7913
  428410:	jne    0x428415
  428412:	add    DWORD PTR [ebp-0x4],ebx
  428415:	cmp    edx,DWORD PTR [ebp-0x8]
  428418:	jne    0x428424
  42841a:	mov    eax,0x61f2
  42841f:	add    eax,eax
  428421:	add    DWORD PTR [ebp-0x4],eax
  428424:	add    ecx,ecx
  428426:	mov    edx,DWORD PTR [ebp-0x4]
  428429:	sub    DWORD PTR [ebp-0x4],ecx
  42842c:	mov    ecx,eax
  42842e:	add    DWORD PTR [ebp-0x4],ecx
  428431:	cmp    edx,0x1613410
  428437:	je     0x42844a
  428439:	cmp    edx,0x200b
  42843f:	je     0x42844a
  428441:	sub    edx,ebx
  428443:	xor    ebx,ebx
  428445:	sub    ebx,edx
  428447:	add    DWORD PTR [ebp-0x4],ebx
  42844a:	rdtsc  
  42844c:	mov    ecx,DWORD PTR [ebp-0x4]
  42844f:	and    edx,ebx
  428451:	sub    ecx,edx
  428453:	mov    edi,esi
  428455:	sub    edi,edx
  428457:	cmp    edi,0x89e24809
  42845d:	je     0x4284e7
  428463:	xor    ebx,ebx
  428465:	mov    edx,0x51c8803
  42846a:	add    edi,esi
  42846c:	cmp    ecx,0xbc11
  428472:	je     0x4284e7
  428474:	xor    esi,esi
  428476:	sub    DWORD PTR [ebp-0x4],ebx
  428479:	add    DWORD PTR [ebp-0x4],edx
  42847c:	and    DWORD PTR [ebp-0x4],esi
  42847f:	test   ecx,0x80
  428485:	je     0x4284e7
  428487:	mov    edx,DWORD PTR ds:0x43d098
  42848d:	mov    edx,DWORD PTR ds:0x43d098
  428493:	add    DWORD PTR [ebp-0x4],ecx
  428496:	sub    DWORD PTR [ebp-0x4],eax
  428499:	or     edx,ecx
  42849b:	and    edx,eax
  42849d:	cmp    edi,0xffffffb7
  4284a0:	jne    0x4284e7
  4284a2:	mov    esi,DWORD PTR [ebp-0x4]
  4284a5:	sub    edx,eax
  4284a7:	mov    ebx,DWORD PTR [ebp-0x4]
  4284aa:	cmp    ebx,0x2c0a
  4284b0:	jne    0x4284e7
  4284b2:	cmp    edi,ebx
  4284b4:	je     0x4284e7
  4284b6:	mov    ecx,DWORD PTR [ebp-0x4]
  4284b9:	and    edx,eax
  4284bb:	sub    ebx,ecx
  4284bd:	sub    ebx,esi
  4284bf:	mov    ecx,DWORD PTR [ebp-0x4]
  4284c2:	cmp    ecx,0x57
  4284c5:	je     0x4284e7
  4284c7:	or     ebx,esi
  4284c9:	add    ebx,esi
  4284cb:	mov    esi,0x77
  4284d0:	sub    DWORD PTR [ebp-0x4],ebx
  4284d3:	mov    ebx,DWORD PTR ds:0x43d078
  4284d9:	xor    DWORD PTR [ebp-0x4],ecx
  4284dc:	sub    DWORD PTR [ebp-0x4],edx
  4284df:	add    DWORD PTR [ebp-0x4],ebx
  4284e2:	and    edi,esi
  4284e4:	sub    DWORD PTR [ebp-0x4],edi
  4284e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4284ea:	add    DWORD PTR [ebp-0x4],ecx
  4284ed:	test   edi,0x8b
  4284f3:	je     0x42852d
  4284f5:	cmp    edx,0x5082400
  4284fb:	jne    0x42852d
  4284fd:	add    esi,edi
  4284ff:	test   esi,0x8921600e
  428505:	jne    0x42852d
  428507:	sub    DWORD PTR [ebp-0x4],edx
  42850a:	cmp    esi,0xad5c
  428510:	jne    0x42852d
  428512:	mov    edx,DWORD PTR [ebp-0x4]
  428515:	or     DWORD PTR [ebp-0x4],edx
  428518:	mov    ecx,0xe09a
  42851d:	sub    DWORD PTR [ebp-0x4],esi
  428520:	sub    edx,ebx
  428522:	add    ecx,ebx
  428524:	add    DWORD PTR [ebp-0x4],eax
  428527:	add    DWORD PTR [ebp-0x4],edx
  42852a:	mov    DWORD PTR [ebp-0x4],ecx
  42852d:	pop    edi
  42852e:	sub    DWORD PTR [ebp-0x4],esi
  428531:	pop    esi
  428532:	mov    ecx,esi
  428534:	cmp    edi,0xffffff89
  428537:	jne    0x4285cb
  42853d:	test   edi,0x18
  428543:	jne    0x4285cb
  428549:	xor    ebx,ebx
  42854b:	mov    edx,esi
  42854d:	cmp    ecx,DWORD PTR [ebp-0x10]
  428550:	je     0x4285cb
  428552:	xor    ebx,ebx
  428554:	and    DWORD PTR [ebp-0x4],ebx
  428557:	mov    ebx,DWORD PTR [ebp-0x4]
  42855a:	sub    ecx,edi
  42855c:	sub    ebx,esi
  42855e:	sub    ebx,edi
  428560:	xor    DWORD PTR [ebp-0x4],ecx
  428563:	cmp    ebx,esi
  428565:	jne    0x4285cb
  428567:	mov    ecx,DWORD PTR ds:0x43d078
  42856d:	add    DWORD PTR [ebp-0x4],ebx
  428570:	cmp    edx,0xffffffb9
  428573:	je     0x4285cb
  428575:	mov    ebx,DWORD PTR ds:0x43d05c
  42857b:	add    ecx,edx
  42857d:	xor    edx,edx
  42857f:	sub    DWORD PTR [ebp-0x4],ecx
  428582:	add    edx,edx
  428584:	and    ebx,eax
  428586:	and    ebx,esi
  428588:	cmp    edi,0xfffffff5
  42858b:	je     0x4285cb
  42858d:	mov    ecx,DWORD PTR [ebp-0x4]
  428590:	cmp    ecx,0x8951
  428596:	jne    0x4285cb
  428598:	sub    ecx,edx
  42859a:	cmp    ecx,edx
  42859c:	je     0x4285cb
  42859e:	sub    ebx,edx
  4285a0:	mov    edx,DWORD PTR [ebp-0x4]
  4285a3:	sub    DWORD PTR [ebp-0x4],ebx
  4285a6:	cmp    ecx,0x20
  4285a9:	je     0x4285cb
  4285ab:	test   ecx,0x34
  4285b1:	jne    0x4285cb
  4285b3:	mov    ebx,DWORD PTR [ebp-0x4]
  4285b6:	test   ebx,0xfc
  4285bc:	je     0x4285cb
  4285be:	add    DWORD PTR [ebp-0x4],ecx
  4285c1:	mov    ecx,ebx
  4285c3:	mov    ebx,edx
  4285c5:	add    DWORD PTR [ebp-0x4],ecx
  4285c8:	xor    DWORD PTR [ebp-0x4],ebx
  4285cb:	pop    ebx
  4285cc:	mov    edx,ebx
  4285ce:	mov    ecx,0xa21
  4285d3:	add    ecx,ecx
  4285d5:	sub    edx,esi
  4285d7:	add    DWORD PTR [ebp-0x4],edi
  4285da:	add    DWORD PTR [ebp-0x4],ecx
  4285dd:	cmp    edx,DWORD PTR [ebp-0x4]
  4285e0:	jne    0x428625
  4285e2:	sub    DWORD PTR [ebp-0x4],eax
  4285e5:	mov    ecx,DWORD PTR ds:0x43d098
  4285eb:	sub    ecx,edx
  4285ed:	sub    ecx,ebx
  4285ef:	cmp    ecx,0xffffffe8
  4285f2:	je     0x428625
  4285f4:	or     ecx,edx
  4285f6:	mov    edx,DWORD PTR [ebp-0x4]
  4285f9:	test   edx,0x5598
  4285ff:	jne    0x428625
  428601:	cmp    edx,0x61c1408a
  428607:	je     0x428625
  428609:	cmp    esi,0x56
  42860c:	jne    0x428625
  42860e:	add    edx,edi
  428610:	cmp    ecx,DWORD PTR [ebp-0x4]
  428613:	je     0x428625
  428615:	cmp    ecx,DWORD PTR [ebp-0x18]
  428618:	jne    0x428625
  42861a:	cmp    ecx,0xffffffb6
  42861d:	jne    0x428625
  42861f:	or     DWORD PTR [ebp-0x4],edx
  428622:	xor    DWORD PTR [ebp-0x4],ecx
  428625:	leave  
  428626:	ret    
  428627:	int3   
  428628:	int3   
  428629:	int3   
  42862a:	int3   
  42862b:	int3   
  42862c:	push   ebp
  42862d:	mov    ebp,esp
  42862f:	sub    esp,0x38
  428632:	mov    ecx,DWORD PTR ds:0x43d06c
  428638:	mov    DWORD PTR [ebp-0x30],ecx
  42863b:	push   ebx
  42863c:	and    DWORD PTR [ebp-0x30],ecx
  42863f:	push   esi
  428640:	mov    ecx,DWORD PTR ds:0x43d06c
  428646:	mov    esi,DWORD PTR [ebp-0x30]
  428649:	add    esi,esi
  42864b:	and    DWORD PTR [ebp-0x30],esi
  42864e:	add    ecx,ecx
  428650:	sub    DWORD PTR [ebp-0x30],ecx
  428653:	push   edi
  428654:	mov    eax,esi
  428656:	sub    eax,esi
  428658:	mov    ecx,esi
  42865a:	xor    DWORD PTR [ebp-0x30],ecx
  42865d:	cmp    esi,0x5
  428660:	je     0x428682
  428662:	cmp    eax,esi
  428664:	je     0x428682
  428666:	test   eax,0xbd
  42866b:	je     0x428682
  42866d:	mov    ecx,0x94
  428672:	mov    ebx,0xce
  428677:	add    DWORD PTR [ebp-0x30],eax
  42867a:	or     ebx,eax
  42867c:	add    DWORD PTR [ebp-0x30],ebx
  42867f:	sub    DWORD PTR [ebp-0x30],ecx
  428682:	xor    DWORD PTR [ebp-0x30],ecx
  428685:	mov    edx,DWORD PTR [ebp+0x10]
  428688:	add    ebx,edx
  42868a:	sub    DWORD PTR [ebp-0x30],ebx
  42868d:	mov    eax,DWORD PTR [ebp+0x8]
  428690:	mov    edi,eax
  428692:	cmp    edi,ebx
  428694:	jne    0x4286b2
  428696:	cmp    edi,DWORD PTR [ebp-0x1c]
  428699:	je     0x4286b2
  42869b:	add    edi,eax
  42869d:	sub    edi,ebx
  42869f:	cmp    edi,DWORD PTR [ebp-0x20]
  4286a2:	je     0x4286b2
  4286a4:	mov    ebx,DWORD PTR [ebp-0x30]
  4286a7:	add    DWORD PTR [ebp-0x30],edi
  4286aa:	xor    esi,esi
  4286ac:	and    DWORD PTR [ebp-0x30],ebx
  4286af:	and    DWORD PTR [ebp-0x30],esi
  4286b2:	cmp    DWORD PTR [ebp+0xc],edx
  4286b5:	je     0x42877d
  4286bb:	xor    DWORD PTR [ebp-0x30],ebx
  4286be:	dec    DWORD PTR [ebp+0xc]
  4286c1:	xor    DWORD PTR [ebp-0x30],edi
  4286c4:	add    DWORD PTR [eax],edx
  4286c6:	mov    edi,DWORD PTR [ebp-0x30]
  4286c9:	and    edi,esi
  4286cb:	sub    edi,eax
  4286cd:	or     edi,edx
  4286cf:	mov    esi,eax
  4286d1:	sub    DWORD PTR [ebp-0x30],edi
  4286d4:	sub    esi,edi
  4286d6:	add    DWORD PTR [ebp-0x30],esi
  4286d9:	sub    DWORD PTR [eax],0x668fb18a
  4286df:	mov    edi,DWORD PTR [ebp-0x30]
  4286e2:	cmp    edi,0x5cbd
  4286e8:	je     0x4286fb
  4286ea:	mov    ecx,DWORD PTR [ebp-0x30]
  4286ed:	xor    DWORD PTR [ebp-0x30],ecx
  4286f0:	mov    ecx,DWORD PTR [ebp-0x30]
  4286f3:	sub    ecx,esi
  4286f5:	sub    DWORD PTR [ebp-0x30],edi
  4286f8:	and    DWORD PTR [ebp-0x30],ecx
  4286fb:	ror    DWORD PTR [eax],0x8
  4286fe:	cmp    eax,DWORD PTR [ebp-0x24]
  428701:	jne    0x428742
  428703:	add    ecx,edi
  428705:	mov    edi,DWORD PTR [ebp-0x30]
  428708:	cmp    ecx,0x549e
  42870e:	jne    0x428742
  428710:	test   edx,0x5f
  428716:	je     0x428742
  428718:	add    ecx,edi
  42871a:	cmp    ecx,0x2b87
  428720:	je     0x428742
  428722:	and    ecx,esi
  428724:	mov    edi,DWORD PTR [ebp-0x30]
  428727:	add    ecx,edx
  428729:	sub    DWORD PTR [ebp-0x30],edx
  42872c:	cmp    edi,DWORD PTR [ebp-0x20]
  42872f:	je     0x428742
  428731:	sub    DWORD PTR [ebp-0x30],ecx
  428734:	sub    edi,edx
  428736:	or     edi,esi
  428738:	xor    ecx,ecx
  42873a:	sub    ecx,edx
  42873c:	or     DWORD PTR [ebp-0x30],ecx
  42873f:	or     DWORD PTR [ebp-0x30],edi
  428742:	ror    DWORD PTR [eax],0x8
  428745:	cmp    ecx,DWORD PTR [ebp-0x4]
  428748:	je     0x42874d
  42874a:	sub    DWORD PTR [ebp-0x30],edx
  42874d:	add    eax,0x4
  428750:	and    edi,eax
  428752:	test   edi,0x54
  428758:	je     0x428778
  42875a:	add    edi,edx
  42875c:	cmp    edi,DWORD PTR [ebp-0x8]
  42875f:	je     0x428778
  428761:	cmp    edx,0xfffffffa
  428764:	jne    0x428778
  428766:	cmp    edi,0x1812
  42876c:	je     0x428778
  42876e:	cmp    edi,0x34
  428771:	je     0x428778
  428773:	and    edi,eax
  428775:	add    DWORD PTR [ebp-0x30],edi
  428778:	jmp    0x428690
  42877d:	mov    edx,0x13
  428782:	mov    DWORD PTR [ebp-0x30],edx
  428785:	mov    edx,DWORD PTR [ebp-0x30]
  428788:	xor    edi,edi
  42878a:	sub    DWORD PTR [ebp-0x30],edx
  42878d:	sub    DWORD PTR [ebp-0x30],edi
  428790:	mov    DWORD PTR [ebp-0x30],edi
  428793:	pop    edi
  428794:	and    edx,edi
  428796:	cmp    edi,edx
  428798:	jne    0x428879
  42879e:	and    edx,edi
  4287a0:	cmp    edx,0xf041
  4287a6:	jne    0x428879
  4287ac:	mov    esi,DWORD PTR [ebp-0x30]
  4287af:	mov    ebx,DWORD PTR [ebp-0x30]
  4287b2:	cmp    edi,edx
  4287b4:	je     0x428879
  4287ba:	mov    eax,DWORD PTR [ebp-0x30]
  4287bd:	cmp    eax,DWORD PTR ds:0x43d06c
  4287c3:	jne    0x428879
  4287c9:	sub    edx,esi
  4287cb:	cmp    eax,0x4f
  4287ce:	je     0x428879
  4287d4:	mov    ecx,0x1900c90
  4287d9:	sub    edx,esi
  4287db:	xor    esi,esi
  4287dd:	add    DWORD PTR [ebp-0x30],eax
  4287e0:	sub    DWORD PTR [ebp-0x30],esi
  4287e3:	add    DWORD PTR [ebp-0x30],ecx
  4287e6:	test   edx,0x58
  4287ec:	jne    0x428879
  4287f2:	mov    eax,0x8c90
  4287f7:	mov    ecx,0xa1
  4287fc:	add    ecx,ebx
  4287fe:	sub    edx,ebx
  428800:	or     edx,esi
  428802:	sub    edx,ebx
  428804:	sub    DWORD PTR [ebp-0x30],edx
  428807:	or     ecx,edi
  428809:	sub    DWORD PTR [ebp-0x30],eax
  42880c:	sub    ecx,eax
  42880e:	add    ecx,edi
  428810:	add    ecx,esi
  428812:	cmp    ecx,DWORD PTR ds:0x43d06c
  428818:	jne    0x428879
  42881a:	mov    ebx,DWORD PTR [ebp-0x30]
  42881d:	add    ebx,eax
  42881f:	add    ecx,esi
  428821:	xor    esi,esi
  428823:	test   ebx,0xb2
  428829:	je     0x428879
  42882b:	mov    edx,DWORD PTR [ebp-0x30]
  42882e:	cmp    edx,DWORD PTR [ebp-0x38]
  428831:	je     0x428879
  428833:	mov    DWORD PTR [ebp-0x30],ebx
  428836:	mov    eax,edx
  428838:	sub    DWORD PTR [ebp-0x30],ecx
  42883b:	sub    eax,ecx
  42883d:	mov    ecx,DWORD PTR [ebp-0x30]
  428840:	cmp    eax,0xffffffe5
  428843:	jne    0x428879
  428845:	mov    ebx,DWORD PTR [ebp-0x30]
  428848:	xor    DWORD PTR [ebp-0x30],eax
  42884b:	mov    eax,DWORD PTR [ebp-0x30]
  42884e:	add    eax,ebx
  428850:	add    eax,ecx
  428852:	and    esi,ebx
  428854:	sub    eax,esi
  428856:	cmp    edx,DWORD PTR [ebp-0x20]
  428859:	je     0x428879
  42885b:	cmp    eax,0x4f
  42885e:	jne    0x428879
  428860:	cmp    eax,ecx
  428862:	jne    0x428879
  428864:	mov    esi,DWORD PTR [ebp-0x30]
  428867:	mov    ebx,DWORD PTR ds:0x43d06c
  42886d:	add    eax,edx
  42886f:	sub    eax,esi
  428871:	add    DWORD PTR [ebp-0x30],eax
  428874:	sub    ebx,eax
  428876:	or     DWORD PTR [ebp-0x30],ebx
  428879:	pop    esi
  42887a:	mov    ecx,0x653c
  42887f:	cmp    esi,0xffffff85
  428882:	jne    0x42889b
  428884:	add    DWORD PTR [ebp-0x30],eax
  428887:	add    DWORD PTR [ebp-0x30],esi
  42888a:	mov    eax,edx
  42888c:	and    eax,esi
  42888e:	mov    ebx,DWORD PTR [ebp-0x30]
  428891:	or     eax,esi
  428893:	and    ebx,eax
  428895:	add    DWORD PTR [ebp-0x30],ebx
  428898:	sub    DWORD PTR [ebp-0x30],ecx
  42889b:	pop    ebx
  42889c:	mov    ecx,edi
  42889e:	add    ecx,edx
  4288a0:	mov    eax,DWORD PTR [ebp-0x30]
  4288a3:	add    eax,ecx
  4288a5:	and    eax,edi
  4288a7:	cmp    eax,DWORD PTR [ebp-0x38]
  4288aa:	jne    0x4288af
  4288ac:	add    DWORD PTR [ebp-0x30],eax
  4288af:	leave  
  4288b0:	ret    0xc
  4288b3:	int3   
  4288b4:	int3   
  4288b5:	int3   
  4288b6:	int3   
  4288b7:	int3   
  4288b8:	push   ebp
  4288b9:	mov    ebp,esp
  4288bb:	sub    esp,0x44
  4288be:	mov    edx,0xe9
  4288c3:	mov    DWORD PTR [ebp-0x44],edx
  4288c6:	push   ebx
  4288c7:	mov    ecx,0x15b5
  4288cc:	mov    edx,DWORD PTR [ebp-0x44]
  4288cf:	sub    edx,ecx
  4288d1:	add    DWORD PTR [ebp-0x44],edx
  4288d4:	push   esi
  4288d5:	mov    eax,DWORD PTR [ebp-0x44]
  4288d8:	add    eax,edx
  4288da:	test   edx,0x4f
  4288e0:	jne    0x42890e
  4288e2:	add    eax,edx
  4288e4:	mov    ebx,DWORD PTR [ebp-0x44]
  4288e7:	xor    esi,esi
  4288e9:	mov    DWORD PTR [ebp-0x44],esi
  4288ec:	sub    eax,esi
  4288ee:	add    DWORD PTR [ebp-0x44],eax
  4288f1:	sub    DWORD PTR [ebp-0x44],ecx
  4288f4:	sub    ebx,ecx
  4288f6:	test   ebx,0x97
  4288fc:	jne    0x42890e
  4288fe:	add    DWORD PTR [ebp-0x44],ecx
  428901:	mov    eax,DWORD PTR [ebp-0x44]
  428904:	add    DWORD PTR [ebp-0x44],eax
  428907:	xor    ecx,ecx
  428909:	sub    ebx,ecx
  42890b:	sub    DWORD PTR [ebp-0x44],ebx
  42890e:	push   edi
  42890f:	add    DWORD PTR [ebp-0x44],edx
  428912:	and    edx,esi
  428914:	test   edx,0x69
  42891a:	je     0x42891f
  42891c:	sub    DWORD PTR [ebp-0x44],edx
  42891f:	mov    ebx,0x4a153a43
  428924:	mov    edi,0xba
  428929:	add    edi,edx
  42892b:	mov    esi,DWORD PTR [ebp-0x44]
  42892e:	and    esi,ebx
  428930:	and    edi,edx
  428932:	cmp    edi,DWORD PTR [ebp-0x30]
  428935:	jne    0x428a39
  42893b:	sub    esi,ecx
  42893d:	cmp    edi,DWORD PTR [ebp-0x2c]
  428940:	je     0x428a39
  428946:	sub    DWORD PTR [ebp-0x44],eax
  428949:	cmp    esi,edx
  42894b:	jne    0x428a39
  428951:	test   eax,0x7f
  428956:	je     0x428a39
  42895c:	cmp    edi,0x4
  42895f:	jne    0x428a39
  428965:	and    edi,esi
  428967:	mov    edx,DWORD PTR [ebp-0x44]
  42896a:	add    DWORD PTR [ebp-0x44],edi
  42896d:	mov    edi,0x25a9cc00
  428972:	cmp    edx,0x69
  428975:	jne    0x428a39
  42897b:	mov    esi,0xc213
  428980:	mov    eax,DWORD PTR [ebp-0x44]
  428983:	xor    DWORD PTR [ebp-0x44],esi
  428986:	sub    DWORD PTR [ebp-0x44],edi
  428989:	add    DWORD PTR [ebp-0x44],edx
  42898c:	cmp    eax,ecx
  42898e:	jne    0x428a39
  428994:	mov    edi,0xa2
  428999:	mov    esi,DWORD PTR [ebp-0x44]
  42899c:	add    DWORD PTR [ebp-0x44],edi
  42899f:	sub    DWORD PTR [ebp-0x44],eax
  4289a2:	cmp    esi,0x307e
  4289a8:	je     0x428a39
  4289ae:	mov    ecx,0xe6
  4289b3:	mov    edi,esi
  4289b5:	sub    ecx,esi
  4289b7:	cmp    ecx,0x44
  4289ba:	je     0x428a39
  4289bc:	sub    edi,esi
  4289be:	mov    eax,DWORD PTR [ebp-0x44]
  4289c1:	cmp    edi,DWORD PTR [ebp-0x4]
  4289c4:	je     0x428a39
  4289c6:	mov    esi,0x97
  4289cb:	sub    eax,ebx
  4289cd:	add    DWORD PTR [ebp-0x44],ecx
  4289d0:	mov    ecx,0x53
  4289d5:	cmp    edi,ecx
  4289d7:	jne    0x428a39
  4289d9:	mov    edx,DWORD PTR ds:0x43d088
  4289df:	add    DWORD PTR [ebp-0x44],eax
  4289e2:	sub    DWORD PTR [ebp-0x44],edx
  4289e5:	sub    ecx,ebx
  4289e7:	sub    esi,ebx
  4289e9:	add    edi,esi
  4289eb:	cmp    edi,0xffffffa3
  4289ee:	jne    0x428a39
  4289f0:	mov    edx,0x20
  4289f5:	sub    edx,ecx
  4289f7:	sub    edi,esi
  4289f9:	xor    esi,esi
  4289fb:	add    DWORD PTR [ebp-0x44],edi
  4289fe:	or     DWORD PTR [ebp-0x44],ebx
  428a01:	mov    DWORD PTR [ebp-0x40],edi
  428a04:	add    edx,ecx
  428a06:	and    DWORD PTR [ebp-0x40],esi
  428a09:	sub    edx,eax
  428a0b:	add    edx,ecx
  428a0d:	test   edx,0xe4
  428a13:	jne    0x428a39
  428a15:	mov    ecx,ebx
  428a17:	mov    eax,DWORD PTR [ebp-0x44]
  428a1a:	add    DWORD PTR [ebp-0x40],eax
  428a1d:	and    edx,ecx
  428a1f:	add    edx,ecx
  428a21:	cmp    edx,0xffffffb6
  428a24:	jne    0x428a39
  428a26:	mov    edi,0xe7d8
  428a2b:	mov    eax,DWORD PTR ds:0x43d088
  428a31:	sub    eax,edi
  428a33:	xor    DWORD PTR [ebp-0x40],eax
  428a36:	xor    DWORD PTR [ebp-0x44],edx
  428a39:	sub    ebx,0x4a153a03
  428a3f:	xor    DWORD PTR [ebp-0x44],ebx
  428a42:	push   ebx
  428a43:	mov    DWORD PTR [ebp-0x8],ebx
  428a46:	mov    edi,0xf05a71c4
  428a4b:	add    ecx,esi
  428a4d:	add    ecx,esi
  428a4f:	and    ecx,edx
  428a51:	test   ecx,0x5103
  428a57:	jne    0x428a82
  428a59:	or     ecx,edi
  428a5b:	add    ecx,edi
  428a5d:	sub    ecx,esi
  428a5f:	cmp    ecx,0xffffffdb
  428a62:	je     0x428a82
  428a64:	and    ecx,eax
  428a66:	mov    eax,DWORD PTR [ebp-0x8]
  428a69:	add    DWORD PTR [ebp-0x8],eax
  428a6c:	xor    esi,esi
  428a6e:	cmp    ecx,0x111012c0
  428a74:	je     0x428a82
  428a76:	xor    ebx,ebx
  428a78:	or     ebx,ecx
  428a7a:	sub    DWORD PTR [ebp-0x8],esi
  428a7d:	add    ebx,edx
  428a7f:	sub    DWORD PTR [ebp-0x8],ebx
  428a82:	add    edi,0xfa5be3c
  428a88:	mov    DWORD PTR [ebp-0x8],esi
  428a8b:	push   edi
  428a8c:	and    ebx,esi
  428a8e:	add    DWORD PTR [ebp-0x8],ebx
  428a91:	push   0x6730b
  428a96:	mov    edx,0xf20d
  428a9b:	sub    DWORD PTR [ebp-0x44],edx
  428a9e:	push   0x0
  428aa0:	xor    DWORD PTR [ebp-0x44],eax
  428aa3:	mov    ecx,0x9084a619
  428aa8:	sub    DWORD PTR [ebp-0x8],ecx
  428aab:	sub    ecx,0x9040f05d
  428ab1:	mov    edi,0xdb
  428ab6:	sub    DWORD PTR [ebp-0x44],eax
  428ab9:	sub    edi,ebx
  428abb:	add    DWORD PTR [ebp-0x8],edi
  428abe:	call   DWORD PTR [ecx]
  428ac0:	mov    edx,0xdef0
  428ac5:	sub    edx,edi
  428ac7:	sub    DWORD PTR [ebp-0x44],edx
  428aca:	mov    DWORD PTR [ebp-0x10],eax
  428acd:	xor    edi,edi
  428acf:	sub    DWORD PTR [ebp-0x8],edi
  428ad2:	mov    ebx,0xee8b0704
  428ad7:	add    edi,eax
  428ad9:	mov    eax,0x2fcc
  428ade:	sub    DWORD PTR [ebp-0x44],ebx
  428ae1:	mov    ecx,DWORD PTR [ebp-0x8]
  428ae4:	sub    ecx,esi
  428ae6:	sub    DWORD PTR [ebp-0x44],ecx
  428ae9:	add    edi,eax
  428aeb:	or     DWORD PTR [ebp-0x44],eax
  428aee:	add    DWORD PTR [ebp-0x8],edi
  428af1:	add    ebx,0x11b8c8fc
  428af7:	mov    edi,0xdb
  428afc:	or     DWORD PTR [ebp-0x44],ebx
  428aff:	sub    DWORD PTR [ebp-0x44],edi
  428b02:	mov    DWORD PTR [ebp-0x1c],ebx
  428b05:	sub    edi,eax
  428b07:	sub    DWORD PTR [ebp-0x8],edi
  428b0a:	mov    edi,DWORD PTR [ebp-0x10]
  428b0d:	xor    DWORD PTR [ebp-0x8],edi
  428b10:	or     esi,ebx
  428b12:	and    DWORD PTR [ebp-0x44],esi
  428b15:	mov    ecx,DWORD PTR [ebp-0x1c]
  428b18:	or     eax,ebx
  428b1a:	mov    edx,ecx
  428b1c:	cmp    edx,0x76
  428b1f:	je     0x428b30
  428b21:	mov    esi,DWORD PTR ds:0x43d064
  428b27:	sub    DWORD PTR [ebp-0x8],edx
  428b2a:	sub    DWORD PTR [ebp-0x8],esi
  428b2d:	and    DWORD PTR [ebp-0x44],eax
  428b30:	mov    esi,DWORD PTR [ecx]
  428b32:	add    edx,ebx
  428b34:	add    DWORD PTR [ebp-0x44],esi
  428b37:	add    DWORD PTR [ebp-0x8],edx
  428b3a:	mov    ecx,DWORD PTR [ecx+0x4]
  428b3d:	sub    DWORD PTR [ebp-0x8],ecx
  428b40:	or     esi,esi
  428b42:	je     0x428baf
  428b44:	sub    DWORD PTR [ebp-0x8],edx
  428b47:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428b49:	add    DWORD PTR [ebp-0x8],ecx
  428b4c:	add    DWORD PTR [ebp-0x1c],0x8
  428b50:	mov    ecx,DWORD PTR [ebp-0x44]
  428b53:	cmp    ecx,DWORD PTR [ebp-0x30]
  428b56:	je     0x428baa
  428b58:	add    ecx,ecx
  428b5a:	cmp    edi,DWORD PTR ds:0x43d088
  428b60:	jne    0x428baa
  428b62:	mov    edx,DWORD PTR [ebp-0x44]
  428b65:	add    DWORD PTR [ebp-0x44],edx
  428b68:	add    ecx,ebx
  428b6a:	sub    ecx,esi
  428b6c:	sub    ecx,edi
  428b6e:	cmp    ecx,0x69ba
  428b74:	je     0x428baa
  428b76:	mov    edx,DWORD PTR [ebp-0x44]
  428b79:	add    ecx,esi
  428b7b:	cmp    edx,DWORD PTR ds:0x43d064
  428b81:	je     0x428baa
  428b83:	sub    ecx,eax
  428b85:	cmp    edx,DWORD PTR [ebp-0x38]
  428b88:	je     0x428baa
  428b8a:	cmp    ecx,edx
  428b8c:	jne    0x428baa
  428b8e:	sub    DWORD PTR [ebp-0x8],ecx
  428b91:	mov    ecx,edx
  428b93:	mov    edx,esi
  428b95:	and    edx,edi
  428b97:	cmp    edx,0x24
  428b9a:	je     0x428baa
  428b9c:	mov    DWORD PTR [ebp-0x24],ebx
  428b9f:	cmp    ecx,0x46
  428ba2:	jne    0x428baa
  428ba4:	add    DWORD PTR [ebp-0x44],ecx
  428ba7:	sub    DWORD PTR [ebp-0x8],edx
  428baa:	jmp    0x428b0d
  428baf:	mov    eax,DWORD PTR [ebp-0x8]
  428bb2:	test   eax,0x7400010
  428bb7:	je     0x428bdd
  428bb9:	cmp    eax,edx
  428bbb:	je     0x428bdd
  428bbd:	sub    DWORD PTR [ebp-0x44],edi
  428bc0:	cmp    eax,ecx
  428bc2:	jne    0x428bdd
  428bc4:	mov    edi,DWORD PTR ds:0x43d064
  428bca:	and    edi,ecx
  428bcc:	and    edi,eax
  428bce:	sub    edi,edx
  428bd0:	add    edi,ecx
  428bd2:	mov    ecx,DWORD PTR ds:0x43d064
  428bd8:	add    edi,ecx
  428bda:	add    DWORD PTR [ebp-0x44],edi
  428bdd:	mov    ebx,DWORD PTR ds:0x43d064
  428be3:	mov    edx,DWORD PTR [ebp-0x44]
  428be6:	test   edx,0x4788
  428bec:	jne    0x428bf3
  428bee:	and    ebx,edx
  428bf0:	and    DWORD PTR [ebp-0x44],ebx
  428bf3:	mov    eax,DWORD PTR [ebp-0x10]
  428bf6:	cmp    eax,ecx
  428bf8:	je     0x428dfe
  428bfe:	sub    edi,ecx
  428c00:	mov    ebx,DWORD PTR ds:0x43d09c
  428c06:	sub    edi,ebx
  428c08:	mov    edx,DWORD PTR [ebp-0x8]
  428c0b:	cmp    edx,0xbaf7
  428c11:	je     0x428dfe
  428c17:	sub    edi,ecx
  428c19:	test   edi,0x59
  428c1f:	jne    0x428dfe
  428c25:	cmp    edi,DWORD PTR ds:0x43d09c
  428c2b:	jne    0x428dfe
  428c31:	mov    ebx,DWORD PTR [ebp-0x8]
  428c34:	mov    esi,DWORD PTR [ebp-0x44]
  428c37:	cmp    edx,eax
  428c39:	je     0x428dfe
  428c3f:	cmp    eax,ecx
  428c41:	jne    0x428dfe
  428c47:	mov    ecx,0xa1
  428c4c:	cmp    ebx,0xffffffc7
  428c4f:	jne    0x428dfe
  428c55:	test   eax,0x3c
  428c5a:	je     0x428dfe
  428c60:	add    DWORD PTR [ebp-0x44],edx
  428c63:	xor    edx,edx
  428c65:	add    edi,eax
  428c67:	cmp    ebx,0x60
  428c6a:	je     0x428dfe
  428c70:	cmp    ebx,DWORD PTR [ebp-0x44]
  428c73:	jne    0x428dfe
  428c79:	add    edi,ebx
  428c7b:	add    ecx,eax
  428c7d:	mov    ebx,DWORD PTR [ebp-0x8]
  428c80:	sub    esi,ecx
  428c82:	mov    ecx,0xf2
  428c87:	cmp    ebx,0xffffff99
  428c8a:	jne    0x428dfe
  428c90:	cmp    edi,0x5d
  428c93:	jne    0x428dfe
  428c99:	add    ecx,edx
  428c9b:	cmp    edi,DWORD PTR ds:0x43d088
  428ca1:	jne    0x428dfe
  428ca7:	xor    edx,edx
  428ca9:	add    ecx,ebx
  428cab:	mov    ebx,DWORD PTR [ebp-0x8]
  428cae:	cmp    edi,DWORD PTR ds:0x43d088
  428cb4:	je     0x428dfe
  428cba:	add    edi,ebx
  428cbc:	add    edx,eax
  428cbe:	sub    DWORD PTR [ebp-0x44],edx
  428cc1:	mov    ebx,DWORD PTR ds:0x43d074
  428cc7:	mov    edx,DWORD PTR [ebp-0x44]
  428cca:	sub    ecx,esi
  428ccc:	sub    DWORD PTR [ebp-0x8],ebx
  428ccf:	cmp    edi,0x66
  428cd2:	jne    0x428dfe
  428cd8:	cmp    ecx,0x33
  428cdb:	je     0x428dfe
  428ce1:	mov    esi,ebx
  428ce3:	xor    ebx,ebx
  428ce5:	sub    DWORD PTR [ebp-0x8],ebx
  428ce8:	sub    DWORD PTR [ebp-0x44],esi
  428ceb:	sub    edi,esi
  428ced:	add    DWORD PTR [ebp-0x8],edx
  428cf0:	add    ecx,edx
  428cf2:	add    ecx,esi
  428cf4:	cmp    ecx,ebx
  428cf6:	je     0x428dfe
  428cfc:	mov    esi,0x8671
  428d01:	mov    ebx,DWORD PTR [ebp-0x44]
  428d04:	add    DWORD PTR [ebp-0x44],eax
  428d07:	mov    DWORD PTR [ebp-0x44],ebx
  428d0a:	cmp    ebx,0xffffffdf
  428d0d:	je     0x428dfe
  428d13:	xor    ebx,ebx
  428d15:	or     ebx,eax
  428d17:	sub    esi,ebx
  428d19:	mov    edx,0xb7c1
  428d1e:	add    DWORD PTR [ebp-0x8],ecx
  428d21:	add    edi,ebx
  428d23:	cmp    esi,ebx
  428d25:	je     0x428dfe
  428d2b:	mov    edx,DWORD PTR [ebp-0x44]
  428d2e:	mov    ecx,DWORD PTR [ebp-0x8]
  428d31:	cmp    esi,DWORD PTR ds:0x43d064
  428d37:	je     0x428dfe
  428d3d:	mov    ebx,DWORD PTR [ebp-0x8]
  428d40:	cmp    ecx,DWORD PTR ds:0x43d088
  428d46:	je     0x428dfe
  428d4c:	add    DWORD PTR [ebp-0x44],esi
  428d4f:	and    edx,eax
  428d51:	test   edi,0xe6
  428d57:	jne    0x428dfe
  428d5d:	mov    esi,DWORD PTR [ebp-0x44]
  428d60:	cmp    edi,DWORD PTR ds:0x43d09c
  428d66:	je     0x428dfe
  428d6c:	sub    DWORD PTR [ebp-0x44],ebx
  428d6f:	cmp    ecx,0x26
  428d72:	jne    0x428dfe
  428d78:	sub    ecx,ebx
  428d7a:	add    edi,esi
  428d7c:	mov    ebx,DWORD PTR [ebp-0x8]
  428d7f:	mov    esi,edx
  428d81:	and    DWORD PTR [ebp-0x44],ecx
  428d84:	cmp    esi,0xffffffbd
  428d87:	jne    0x428dfe
  428d89:	add    DWORD PTR [ebp-0x8],esi
  428d8c:	cmp    ebx,0x5b
  428d8f:	jne    0x428dfe
  428d91:	cmp    ebx,DWORD PTR ds:0x43d088
  428d97:	je     0x428dfe
  428d99:	mov    ecx,DWORD PTR [ebp-0x44]
  428d9c:	cmp    ecx,0xfffffffc
  428d9f:	jne    0x428dfe
  428da1:	mov    esi,0xc9
  428da6:	add    esi,edx
  428da8:	add    edi,esi
  428daa:	add    DWORD PTR [ebp-0x8],ebx
  428dad:	add    ecx,esi
  428daf:	mov    ebx,DWORD PTR ds:0x43d064
  428db5:	add    DWORD PTR [ebp-0x8],ecx
  428db8:	add    DWORD PTR [ebp-0x8],edi
  428dbb:	cmp    esi,0x4a
  428dbe:	jne    0x428dfe
  428dc0:	cmp    eax,0x5aa7
  428dc5:	je     0x428dfe
  428dc7:	mov    edi,DWORD PTR [ebp-0x8]
  428dca:	add    DWORD PTR [ebp-0x8],edi
  428dcd:	sub    ebx,ecx
  428dcf:	sub    ebx,eax
  428dd1:	mov    ecx,0x2c
  428dd6:	cmp    ebx,DWORD PTR [ebp-0x14]
  428dd9:	je     0x428dde
  428ddb:	or     DWORD PTR [ebp-0x44],ebx
  428dde:	add    DWORD PTR [ebp-0x44],edi
  428de1:	cmp    edx,esi
  428de3:	je     0x428df0
  428de5:	cmp    edi,0xc15a
  428deb:	je     0x428df0
  428ded:	add    DWORD PTR [ebp-0x44],edi
  428df0:	and    ecx,ebx
  428df2:	sub    ecx,edi
  428df4:	sub    ecx,esi
  428df6:	cmp    ecx,0xffffffd5
  428df9:	je     0x428dfe
  428dfb:	mov    DWORD PTR [ebp-0x44],ecx
  428dfe:	or     DWORD PTR [ebp-0x44],ebx
  428e01:	pop    edi
  428e02:	mov    ecx,0x6e
  428e07:	sub    DWORD PTR [ebp-0x44],ecx
  428e0a:	pop    esi
  428e0b:	or     ebx,esi
  428e0d:	mov    ecx,DWORD PTR [ebp-0x8]
  428e10:	cmp    ecx,DWORD PTR [ebp-0x8]
  428e13:	jne    0x428e2d
  428e15:	and    DWORD PTR [ebp-0x44],ecx
  428e18:	cmp    edi,0x68
  428e1b:	je     0x428e2d
  428e1d:	test   edi,0x9701
  428e23:	je     0x428e2d
  428e25:	cmp    edi,0x55
  428e28:	je     0x428e2d
  428e2a:	and    DWORD PTR [ebp-0x8],ebx
  428e2d:	pop    ebx
  428e2e:	mov    ecx,DWORD PTR ds:0x43d060
  428e34:	cmp    edi,ecx
  428e36:	jne    0x428e76
  428e38:	cmp    edx,DWORD PTR [ebp-0x2c]
  428e3b:	jne    0x428e76
  428e3d:	mov    edx,DWORD PTR [ebp-0x44]
  428e40:	mov    ecx,DWORD PTR [ebp-0x8]
  428e43:	add    edx,ecx
  428e45:	add    edx,edi
  428e47:	add    edx,ecx
  428e49:	cmp    edx,0xffffffd1
  428e4c:	je     0x428e76
  428e4e:	mov    ecx,0x7b
  428e53:	add    DWORD PTR [ebp-0x8],ebx
  428e56:	and    edx,ecx
  428e58:	xor    ecx,ecx
  428e5a:	mov    DWORD PTR [ebp-0x44],ecx
  428e5d:	sub    edx,ebx
  428e5f:	and    edx,eax
  428e61:	or     edx,esi
  428e63:	add    DWORD PTR [ebp-0x8],ecx
  428e66:	and    DWORD PTR [ebp-0x44],eax
  428e69:	test   edx,0xc3
  428e6f:	jne    0x428e76
  428e71:	mov    ecx,edx
  428e73:	sub    DWORD PTR [ebp-0x8],ecx
  428e76:	leave  
  428e77:	ret    
