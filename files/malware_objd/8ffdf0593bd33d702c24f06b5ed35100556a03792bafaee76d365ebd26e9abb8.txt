
8ffdf0593bd33d702c24f06b5ed35100556a03792bafaee76d365ebd26e9abb8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0xb4
  401009:	sub    DWORD PTR ds:0x428e89,ecx
  40100f:	mov    eax,DWORD PTR [ebp+0x8]
  401012:	push   ebx
  401013:	add    DWORD PTR ds:0x428e89,edi
  401019:	push   esi
  40101a:	push   edi
  40101b:	mov    DWORD PTR ds:0x428e9d,0x10
  401025:	cmp    DWORD PTR ds:0x428e9d,0x0
  40102c:	je     0x401092
  401032:	cmp    DWORD PTR ds:0x428e9d,0x3
  401039:	jle    0x401092
  40103f:	jmp    0x401066
  401044:	push   0x559d
  401049:	push   0x2a1f
  40104e:	push   0x41ed
  401053:	push   DWORD PTR [ebp-0x1c]
  401056:	push   0x428124
  40105b:	push   0x44ac
  401060:	call   DWORD PTR ds:0x42ca10
  401066:	cmp    DWORD PTR ds:0x428e9d,0x4
  40106d:	jne    0x401080
  401073:	mov    edi,DWORD PTR ds:0x428e9d
  401079:	dec    edi
  40107a:	mov    DWORD PTR ds:0x428e9d,edi
  401080:	mov    edi,DWORD PTR ds:0x428e9d
  401086:	dec    edi
  401087:	mov    DWORD PTR ds:0x428e9d,edi
  40108d:	jmp    0x401025
  401092:	mov    esi,0x75108b1
  401097:	mov    DWORD PTR ds:0x428e91,0x16
  4010a1:	cmp    DWORD PTR ds:0x428e91,0x0
  4010a8:	je     0x4010ef
  4010ae:	cmp    DWORD PTR ds:0x428e91,0x25
  4010b5:	jge    0x4010ef
  4010bb:	jmp    0x4010dd
  4010c0:	push   DWORD PTR [ebp-0x20]
  4010c3:	push   0x1b69
  4010c8:	push   0x4c28
  4010cd:	push   0x78bb
  4010d2:	push   0x428ec1
  4010d7:	call   DWORD PTR ds:0x42ca14
  4010dd:	mov    ecx,DWORD PTR ds:0x428e91
  4010e3:	dec    ecx
  4010e4:	mov    DWORD PTR ds:0x428e91,ecx
  4010ea:	jmp    0x4010a1
  4010ef:	xor    eax,esi
  4010f1:	or     ecx,DWORD PTR ds:0x428e95
  4010f7:	mov    edi,0x3272f8
  4010fc:	add    eax,edi
  4010fe:	xor    ecx,DWORD PTR ds:0x428e61
  401104:	mov    DWORD PTR [ebp-0x40],eax
  401107:	mov    ecx,DWORD PTR ds:0x428ef5
  40110d:	mov    eax,ds:0x42a0a5
  401112:	sub    eax,ecx
  401114:	sub    ecx,DWORD PTR [ecx+eax*1]
  401117:	mov    eax,ds:0x4281e5
  40111c:	or     ecx,0x6919
  401122:	mov    eax,DWORD PTR [eax]
  401124:	mov    DWORD PTR [ebp-0x3c],eax
  401127:	mov    eax,ds:0x4283f5
  40112c:	xor    ecx,0x14c1
  401132:	mov    eax,DWORD PTR [eax]
  401134:	mov    DWORD PTR [ebp-0x1c],eax
  401137:	and    DWORD PTR ds:0x428e75,0x31f0
  401141:	mov    DWORD PTR [ebp-0x34],0xf89c87b9
  401148:	or     ecx,ecx
  40114a:	mov    eax,DWORD PTR [ebp-0x34]
  40114d:	xor    eax,esi
  40114f:	add    eax,edi
  401151:	mov    DWORD PTR [ebp-0x40],eax
  401154:	and    DWORD PTR ds:0x428eb9,0x0
  40115e:	jmp    0x401170
  401163:	mov    ecx,DWORD PTR ds:0x428eb9
  401169:	inc    ecx
  40116a:	mov    DWORD PTR ds:0x428eb9,ecx
  401170:	cmp    DWORD PTR ds:0x428eb9,0x1c
  401177:	jae    0x4011a0
  40117d:	cmp    DWORD PTR ds:0x428eb9,0x21
  401184:	jl     0x4011a0
  40118a:	jmp    0x40119b
  40118f:	push   DWORD PTR [ebp-0xc]
  401192:	push   DWORD PTR [ebp-0x18]
  401195:	call   DWORD PTR ds:0x42ca18
  40119b:	jmp    0x401163
  4011a0:	mov    eax,ds:0x428365
  4011a5:	or     DWORD PTR ds:0x428eb1,0x3218
  4011af:	mov    DWORD PTR [ebp-0x40],eax
  4011b2:	mov    DWORD PTR ds:0x428e69,0x16
  4011bc:	cmp    DWORD PTR ds:0x428e69,0x0
  4011c3:	je     0x401218
  4011c9:	cmp    DWORD PTR ds:0x428e69,0xb
  4011d0:	jg     0x401218
  4011d6:	jmp    0x4011ec
  4011db:	push   0x42804e
  4011e0:	push   DWORD PTR [ebp-0x24]
  4011e3:	push   DWORD PTR [ebp-0x24]
  4011e6:	call   DWORD PTR ds:0x42ca4c
  4011ec:	cmp    DWORD PTR ds:0x428e69,0xc
  4011f3:	jne    0x401206
  4011f9:	mov    ecx,DWORD PTR ds:0x428e69
  4011ff:	dec    ecx
  401200:	mov    DWORD PTR ds:0x428e69,ecx
  401206:	mov    ecx,DWORD PTR ds:0x428e69
  40120c:	dec    ecx
  40120d:	mov    DWORD PTR ds:0x428e69,ecx
  401213:	jmp    0x4011bc
  401218:	mov    eax,DWORD PTR [ebp-0x3c]
  40121b:	sbb    DWORD PTR ds:0x428ea5,0x6db4
  401225:	mov    DWORD PTR [ebp-0x14],eax
  401228:	mov    eax,DWORD PTR [ebp-0x14]
  40122b:	movzx  ecx,BYTE PTR ds:0x428e45
  401232:	xor    ecx,DWORD PTR ds:0x428e79
  401238:	mov    DWORD PTR ds:0x428e45,ecx
  40123e:	jmp    0x403595
  401243:	lods   eax,DWORD PTR ds:[esi]
  401244:	ins    DWORD PTR es:[edi],dx
  401245:	call   0x9776:0xb1685a84
  40124c:	xchg   ebx,eax
  40124d:	add    bh,cl
  40124f:	rcr    DWORD PTR [edi+esi*2+0x55],0x7b
  401254:	jnp    0x4012d1
  401256:	jnp    0x40120d
  401258:	sahf   
  401259:	jnp    0x4012d6
  40125b:	aam    0xcd
  40125d:	(bad)  
  40125e:	rcr    al,0xc4
  401261:	fcmove st,st(6)
  401263:	test   cl,al
  401265:	mov    BYTE PTR [edi-0x747373c5],al
  40126b:	mov    WORD PTR [ebx-0x6effe2dc],?
  401271:	test   eax,0x519a808a
  401276:	or     DWORD PTR [eax+ebx*4-0x3e5463d2],0x7766fb6d
  401281:	xchg   esi,eax
  401282:	lods   al,BYTE PTR ds:[esi]
  401283:	jle    0x40123b
  401285:	jno    0x4012ce
  401287:	jle    0x4012ca
  401289:	inc    ebx
  40128a:	mov    edx,0x1d87fecd
  40128f:	sti    
  401290:	xchg   edx,eax
  401291:	jle    0x401272
  401293:	or     al,0xb8
  401295:	sub    al,0x3b
  401297:	or     al,0x66
  401299:	rcr    BYTE PTR [edi],cl
  40129b:	push   0xffffffc8
  40129d:	out    dx,al
  40129e:	cwde   
  40129f:	dec    edx
  4012a0:	imul   esp,DWORD PTR ds:0xe51c8cf6,0x15
  4012a7:	out    dx,eax
  4012a8:	sti    
  4012a9:	(bad)  
  4012aa:	fldcw  WORD PTR [ecx-0x76753813]
  4012b0:	cmp    BYTE PTR [esi-0x2e],cl
  4012b3:	mov    al,ds:0x8fe47e4
  4012b8:	test   al,0xca
  4012ba:	jne    0x40126f
  4012bc:	sub    DWORD PTR [edx+0x79fbdbf8],ebx
  4012c2:	inc    eax
  4012c3:	sbb    BYTE PTR [ecx+ebx*2],0x9e
  4012c7:	push   0x40
  4012c9:	out    0xd5,al
  4012cb:	arpl   WORD PTR [eax+0x73bd5ff2],si
  4012d1:	jb     0x4012bd
  4012d3:	sbb    ecx,esp
  4012d5:	xchg   ebx,eax
  4012d6:	ins    BYTE PTR es:[edi],dx
  4012d7:	mov    ch,0xb2
  4012d9:	xchg   ebp,eax
  4012da:	add    ch,BYTE PTR [esi]
  4012dc:	imul   ecx,eax,0x68
  4012df:	xor    DWORD PTR [esi],esi
  4012e1:	sub    eax,0xa4059069
  4012e6:	xchg   ebx,eax
  4012e7:	lods   eax,DWORD PTR ds:[esi]
  4012e8:	in     eax,dx
  4012e9:	mov    edi,0x4ce2b7f2
  4012ee:	stos   BYTE PTR es:[edi],al
  4012ef:	sub    eax,DWORD PTR [esi-0x4f]
  4012f2:	and    ebp,esp
  4012f4:	xchg   edi,eax
  4012f5:	cld    
  4012f6:	xchg   ebx,eax
  4012f7:	xchg   edi,eax
  4012f8:	inc    esp
  4012f9:	clc    
  4012fa:	mov    DWORD PTR [esi],edi
  4012fc:	stc    
  4012fd:	mov    ds:0x38f9e8d8,eax
  401302:	jmp    0x5d4b:0x8b891dc4
  401309:	fucomp st(0)
  40130b:	push   edi
  40130c:	dec    esi
  40130d:	pop    ds
  40130e:	ins    DWORD PTR es:[edi],dx
  40130f:	dec    eax
  401310:	add    DWORD PTR [edx+0x4891cbab],0xfffffff9
  401317:	int3   
  401318:	and    BYTE PTR [eax-0x18408b6e],dh
  40131e:	shl    BYTE PTR [eax-0x515bad85],cl
  401324:	xor    al,0x78
  401326:	ret    0x3d7d
  401329:	test   BYTE PTR [ecx],0xc5
  40132c:	and    edx,DWORD PTR [esi-0x616db6bb]
  401332:	test   BYTE PTR [eax],0xd7
  401335:	scas   al,BYTE PTR es:[edi]
  401336:	ret    0xf055
  401339:	(bad)  
  40133a:	pop    ebp
  40133b:	adc    edx,DWORD PTR [edi]
  40133d:	adc    BYTE PTR [eax+0x2c],0x7e
  401341:	loope  0x4012e0
  401343:	scas   eax,DWORD PTR es:[edi]
  401344:	dec    esi
  401345:	(bad)  
  401346:	or     al,0x91
  401348:	or     al,0xa5
  40134a:	cdq    
  40134b:	dec    edi
  40134c:	stos   BYTE PTR es:[edi],al
  40134d:	out    0x1f,eax
  40134f:	add    bh,BYTE PTR [edx]
  401351:	add    eax,0x1b62654d
  401356:	push   ss
  401357:	jl     0x4012da
  401359:	imul   esp,DWORD PTR [edx+0x45],0x47
  40135d:	or     DWORD PTR [esp+eax*2],ebx
  401360:	xor    ah,dl
  401362:	sbb    eax,0x14ab1bf3
  401367:	sub    esp,ebp
  401369:	inc    esi
  40136a:	leave  
  40136b:	lods   al,BYTE PTR ds:[esi]
  40136c:	js     0x4012f2
  40136e:	pop    ds
  40136f:	sub    al,0xca
  401371:	cli    
  401372:	cli    
  401373:	mov    eax,0xcb92f9b0
  401378:	loope  0x4012fc
  40137a:	xchg   ebp,eax
  40137b:	mov    DWORD PTR [edx+0xd],edi
  40137e:	pop    ebx
  40137f:	xchg   ch,bh
  401381:	xor    BYTE PTR [esi],dl
  401383:	shl    BYTE PTR ds:0xdf2571df,0x68
  40138a:	lea    esi,[eax-0x171d72b]
  401390:	inc    ebp
  401391:	popa   
  401392:	add    DWORD PTR [edx],edx
  401394:	jl     0x4013d6
  401396:	or     al,0x6
  401398:	ret    0xf80b
  40139b:	dec    ebx
  40139c:	in     al,0x94
  40139e:	stc    
  40139f:	pop    ds
  4013a0:	lahf   
  4013a1:	(bad)  
  4013a2:	out    0xae,al
  4013a4:	(bad)  
  4013a6:	push   es
  4013a7:	mov    cl,0x7c
  4013a9:	jmp    0xd314f55d
  4013ae:	inc    eax
  4013af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013b0:	cli    
  4013b1:	loop   0x40140e
  4013b3:	das    
  4013b4:	pushf  
  4013b5:	adc    bh,BYTE PTR [eax+0x7332f2ef]
  4013bb:	adc    al,0x6
  4013bd:	leave  
  4013be:	cwde   
  4013bf:	mov    DWORD PTR [eax-0x52],ecx
  4013c2:	gs sub al,0x7f
  4013c5:	data16 (bad) 
  4013c9:	ror    bh,cl
  4013cb:	adc    eax,0x49079193
  4013d0:	ret    
  4013d1:	pop    ebp
  4013d2:	inc    edi
  4013d3:	icebp  
  4013d4:	adc    al,0xf6
  4013d6:	out    dx,eax
  4013d7:	(bad)  
  4013d8:	aam    0xdd
  4013da:	lds    esp,FWORD PTR [esi+0x73]
  4013dd:	test   eax,0x7e11272
  4013e2:	les    ebx,FWORD PTR [bx+0x77]
  4013e6:	loop   0x401466
  4013e8:	push   ebp
  4013e9:	test   al,0xae
  4013eb:	iret   
  4013ec:	test   BYTE PTR [ecx],ah
  4013ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013ef:	cmp    dh,BYTE PTR [edx-0xb]
  4013f2:	imul   BYTE PTR [edi+0x43]
  4013f5:	inc    esi
  4013f6:	sahf   
  4013f7:	in     al,0xf6
  4013f9:	lds    ecx,FWORD PTR [eax-0x26e3b530]
  4013ff:	jnp    0x40142b
  401401:	fdiv   QWORD PTR [ebp-0x38fcee35]
  401407:	rol    BYTE PTR [ebx+0x67],cl
  40140a:	shr    esp,1
  40140c:	adc    ebp,esp
  40140e:	or     ah,bl
  401410:	je     0x40145b
  401412:	iret   
  401413:	jnp    0x40142f
  401415:	imul   edi,DWORD PTR [esi],0xffffffb1
  401418:	test   al,0xed
  40141a:	repnz stc 
  40141c:	cmp    DWORD PTR [eax+0x75d66705],edx
  401422:	arpl   WORD PTR [eax],ax
  401424:	mov    ebx,0xae868f17
  401429:	mov    al,ds:0x404a3082
  40142e:	nop
  40142f:	je     0x40142a
  401431:	test   eax,0x66f4d48
  401436:	inc    esp
  401437:	daa    
  401438:	ins    DWORD PTR es:[edi],dx
  401439:	inc    eax
  40143a:	rcl    DWORD PTR [ebx-0x67be9f4e],cl
  401440:	(bad)  
  401442:	xchg   esp,eax
  401443:	iret   
  401444:	and    al,0x84
  401446:	sub    eax,0x4d37167b
  40144b:	dec    ecx
  40144c:	mov    cl,BYTE PTR [edi-0x40]
  40144f:	mov    WORD PTR [ecx+ebp*2-0x66],es
  401453:	mov    ah,0x2f
  401455:	jg     0x4014d2
  401457:	jbe    0x4013f1
  401459:	xchg   ecx,eax
  40145a:	add    edx,edi
  40145c:	cli    
  40145d:	inc    esi
  40145e:	daa    
  40145f:	(bad)  
  401460:	mov    ebp,0x5b73a854
  401465:	ret    
  401466:	ret    
  401467:	pop    es
  401468:	jb     0x4013f2
  40146a:	mov    al,ds:0x92c567d0
  40146f:	ss jl  0x40149c
  401472:	mov    eax,0x40c6acb9
  401477:	aad    0x29
  401479:	fwait
  40147a:	shr    DWORD PTR [edi],cl
  40147c:	int    0xfd
  40147e:	xchg   edi,esp
  401480:	imul   eax,DWORD PTR [ebx+0x20],0xffffffb8
  401484:	and    DWORD PTR [edi+ecx*2+0x1b6366c3],ebp
  40148b:	mov    ebp,esi
  40148d:	and    dh,ah
  40148f:	ffree  st(1)
  401491:	int3   
  401492:	lea    edx,[ecx]
  401494:	js     0x4014f5
  401496:	inc    sp
  401498:	xor    al,0xc7
  40149a:	pop    ebx
  40149b:	xchg   edi,eax
  40149c:	xor    eax,0x15984d9e
  4014a1:	retf   0xa95a
  4014a4:	ror    BYTE PTR [edx-0x716d64a8],cl
  4014aa:	mov    edx,0xdc4e6802
  4014af:	and    DWORD PTR [ebp+0x2e1fd52a],0x7
  4014b6:	ror    edi,0xe2
  4014b9:	arpl   WORD PTR [edi-0x57],bx
  4014bc:	push   edx
  4014bd:	retf   0x7ac4
  4014c0:	mov    cl,0x9
  4014c2:	js     0x401503
  4014c4:	xchg   ecx,eax
  4014c5:	call   0xc6b89e26
  4014ca:	inc    eax
  4014cb:	jb     0x4014e6
  4014cd:	xlat   BYTE PTR ds:[ebx]
  4014ce:	repz pop ecx
  4014d0:	push   eax
  4014d1:	xchg   DWORD PTR [eax+0x12],ebx
  4014d4:	xor    al,0xb4
  4014d6:	lock fimul DWORD PTR [eax-0x71]
  4014da:	mov    ?,WORD PTR [ebx-0x4276d975]
  4014e0:	dec    edi
  4014e1:	test   eax,0x33201714
  4014e6:	dec    ecx
  4014e7:	leave  
  4014e8:	pusha  
  4014e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014ea:	arpl   bp,sp
  4014ec:	repnz in al,0x5c
  4014ef:	outs   dx,BYTE PTR ds:[esi]
  4014f0:	and    esp,DWORD PTR [ecx+0x27]
  4014f3:	cmp    ebx,DWORD PTR [edx]
  4014f5:	jg     0x4014e3
  4014f7:	add    ch,ah
  4014f9:	cmc    
  4014fa:	rol    DWORD PTR es:[edi+eax*2],cl
  4014fe:	arpl   dx,di
  401500:	sbb    eax,0x91e725ec
  401505:	mov    ecx,0xb9e4289e
  40150a:	mov    bl,0xe
  40150c:	push   0x2d7b4a93
  401511:	sahf   
  401512:	or     BYTE PTR [eax-0x3c98bcc7],0x64
  401519:	ds cdq 
  40151b:	mov    esi,0x4a7b96c7
  401520:	scas   al,BYTE PTR es:[edi]
  401521:	(bad)  
  401522:	std    
  401523:	xor    esp,esi
  401525:	ror    edx,1
  401527:	aad    0xd0
  401529:	dec    edi
  40152a:	mov    al,0x59
  40152c:	std    
  40152d:	mov    cl,0xab
  40152f:	neg    DWORD PTR [esp+edi*8-0x2b75d20e]
  401536:	ja     0x4014d0
  401538:	lahf   
  401539:	popf   
  40153a:	jl     0x401516
  40153c:	das    
  40153d:	inc    edi
  40153e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40153f:	daa    
  401540:	and    al,0xca
  401542:	mov    ebp,0x63e7126
  401547:	cmp    eax,0x4bb5e7ee
  40154c:	add    cl,al
  40154e:	xchg   ecx,eax
  40154f:	mov    bl,0x15
  401551:	dec    ebx
  401552:	xor    DWORD PTR [ebx-0x2db597c4],0xf9fc1dea
  40155c:	shl    BYTE PTR [eax],1
  40155e:	stc    
  40155f:	stos   BYTE PTR es:[edi],al
  401560:	jge    0x401580
  401562:	jecxz  0x40152d
  401564:	cmp    al,0x4a
  401566:	hlt    
  401567:	outs   dx,BYTE PTR ds:[esi]
  401568:	pop    edi
  401569:	daa    
  40156a:	ins    DWORD PTR es:[edi],dx
  40156b:	sub    DWORD PTR [edx+eax*2],ebx
  40156e:	push   eax
  40156f:	pop    esi
  401570:	loop   0x401517
  401572:	out    dx,eax
  401573:	loopne 0x40157e
  401575:	ins    DWORD PTR es:[edi],dx
  401576:	jg     0x4015f6
  401578:	add    al,0x4
  40157a:	pop    ss
  40157b:	dec    ebp
  40157c:	mov    edi,ss
  40157e:	xlat   BYTE PTR ds:[ebx]
  40157f:	mov    ebp,0x64358652
  401584:	shr    BYTE PTR [edi],0x9d
  401587:	cmp    al,0x5c
  401589:	aaa    
  40158a:	mov    ebp,0x569785e1
  40158f:	xor    eax,0x7bba0713
  401594:	lock xchg cl,dl
  401597:	call   0xbc9c25d6
  40159c:	pop    ss
  40159d:	mov    BYTE PTR [edx+0x10134753],bl
  4015a3:	xchg   edx,eax
  4015a4:	and    ecx,ecx
  4015a6:	imul   edx,DWORD PTR [edi-0x38],0xa6ecfdb7
  4015ad:	pop    ss
  4015ae:	outs   dx,BYTE PTR ds:[esi]
  4015af:	xor    esp,ebp
  4015b1:	jp     0x4015e1
  4015b3:	pop    es
  4015b4:	cmc    
  4015b5:	ror    DWORD PTR [bp+di+0x69dc],0x31
  4015bb:	pushf  
  4015bc:	into   
  4015bd:	js     0x4015dc
  4015bf:	leave  
  4015c0:	cmp    eax,0x38c30518
  4015c5:	or     ebx,0x995cd831
  4015cb:	inc    edi
  4015cc:	mov    dl,0xc2
  4015ce:	add    BYTE PTR [esi+0x773356e9],bh
  4015d4:	loope  0x4015f1
  4015d6:	push   cs
  4015d7:	(bad)  
  4015d8:	mov    al,0x69
  4015da:	mov    edx,0x3b77e6e1
  4015df:	loope  0x40162f
  4015e1:	je     0x401582
  4015e3:	inc    ebp
  4015e4:	sub    al,0x31
  4015e6:	fldcw  WORD PTR [ecx-0x19bb1ccd]
  4015ec:	fs pop ss
  4015ee:	sub    DWORD PTR [eax-0x65],eax
  4015f1:	sbb    DWORD PTR [eax-0x35],0x1b
  4015f5:	dec    ebp
  4015f6:	mov    eax,ds:0x5e255da5
  4015fb:	sub    al,0x8f
  4015fd:	xor    esp,DWORD PTR [ecx-0x3267bd82]
  401603:	lods   eax,DWORD PTR ds:[esi]
  401604:	mov    es,ebx
  401606:	popa   
  401607:	mov    esi,0x9b0512d5
  40160c:	dec    esp
  40160d:	jmp    0xc3aa7416
  401612:	dec    ebx
  401613:	xchg   edi,eax
  401614:	neg    BYTE PTR [esp+eax*1+0x4bc7ef0c]
  40161b:	pop    edi
  40161c:	stos   DWORD PTR es:[edi],eax
  40161d:	add    cl,BYTE PTR [edi-0xf]
  401620:	inc    esp
  401621:	std    
  401622:	stos   DWORD PTR es:[edi],eax
  401623:	jnp    0x4015ea
  401625:	pop    ebx
  401626:	pop    ecx
  401627:	jge    0x40162a
  401629:	pop    es
  40162a:	loope  0x401615
  40162c:	xlat   BYTE PTR ds:[ebx]
  40162d:	xchg   ebp,eax
  40162e:	inc    ecx
  40162f:	inc    eax
  401630:	aam    0xfb
  401632:	push   ss
  401633:	jne    0x401643
  401635:	js     0x401684
  401637:	jle    0x401616
  401639:	inc    edi
  40163a:	xlat   BYTE PTR ds:[ebx]
  40163b:	dec    eax
  40163c:	push   esp
  40163d:	test   BYTE PTR [esi+ebp*2+0x9],0x40
  401642:	in     al,0x6e
  401644:	add    al,0xe8
  401646:	daa    
  401647:	fidivr WORD PTR [esi]
  401649:	in     eax,0x78
  40164b:	cwde   
  40164c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40164d:	dec    ebx
  40164e:	mov    ds:0x2703891e,eax
  401653:	ss int3 
  401655:	pusha  
  401656:	ins    DWORD PTR es:[edi],dx
  401657:	cmp    BYTE PTR [edx],dl
  401659:	jge    0x401655
  40165b:	dec    esp
  40165c:	scas   eax,DWORD PTR es:[edi]
  40165d:	push   cs
  40165e:	(bad)  
  40165f:	push   ecx
  401660:	push   ss
  401661:	sbb    al,0x75
  401663:	fsubr  QWORD PTR [esi]
  401665:	jnp    0x4015ec
  401667:	inc    edi
  401668:	cld    
  401669:	adc    DWORD PTR [edx],eax
  40166b:	or     DWORD PTR [ebx-0x6a],edx
  40166e:	and    ch,BYTE PTR [ebx+0x43f26981]
  401674:	pushf  
  401675:	test   ebp,ebx
  401677:	push   0xffffffeb
  401679:	add    esp,esi
  40167b:	int3   
  40167c:	jle    0x401677
  40167e:	inc    ebx
  40167f:	(bad)  
  401681:	push   ecx
  401682:	call   0x73aa:0x7a9b2515
  401689:	mov    edx,DWORD PTR [eax]
  40168b:	push   edx
  40168c:	lea    ebp,ds:[ebx+ebx*1]
  401690:	xor    BYTE PTR [eax+ebx*4],dh
  401693:	dec    ebp
  401694:	jecxz  0x40168c
  401696:	pop    edi
  401697:	xchg   DWORD PTR [ebx],eax
  401699:	ret    
  40169a:	mov    ebp,0x59602cb6
  40169f:	dec    esp
  4016a0:	mov    ebp,0xb2b374b8
  4016a5:	cmp    eax,0xba9b15a9
  4016aa:	sbb    eax,0x110d03bc
  4016af:	xchg   esp,eax
  4016b0:	cld    
  4016b1:	mov    edi,DWORD PTR [ebx-0x7c]
  4016b4:	test   ecx,edi
  4016b6:	mov    dl,0x7b
  4016b8:	or     ebp,edi
  4016ba:	jo     0x401651
  4016bc:	inc    edx
  4016bd:	mov    esi,0x33d93cae
  4016c2:	in     al,dx
  4016c3:	out    dx,al
  4016c4:	lahf   
  4016c5:	jae    0x4016e7
  4016c7:	adc    DWORD PTR [edi],ebx
  4016c9:	cmc    
  4016ca:	inc    edi
  4016cb:	add    DWORD PTR [esp+ecx*8],0xffffffd9
  4016cf:	in     al,dx
  4016d0:	cmp    al,0xed
  4016d2:	arpl   bp,dx
  4016d4:	mov    fs,edi
  4016d6:	mov    ds,ebp
  4016d8:	sbb    esp,esp
  4016da:	dec    ebx
  4016db:	repz sub eax,0xe00f8d45
  4016e1:	xor    esi,DWORD PTR [esi-0x41]
  4016e4:	daa    
  4016e5:	loop   0x4016c8
  4016e7:	cmp    DWORD PTR [esi+0x68],ebp
  4016ea:	iret   
  4016eb:	dec    eax
  4016ec:	jg     0x40170c
  4016ee:	mov    esi,0xe8f6c887
  4016f3:	jbe    0x4016a6
  4016f5:	pop    es
  4016f6:	pop    edx
  4016f7:	(bad)  
  4016f8:	int3   
  4016f9:	xor    edi,esp
  4016fb:	jns    0x401740
  4016fd:	pop    ecx
  4016fe:	inc    edx
  4016ff:	add    ecx,DWORD PTR [ebp-0x30]
  401702:	(bad)  
  401703:	cld    
  401704:	jp     0x401702
  401706:	cmp    DWORD PTR [ebx+0x17],0xc8bcace2
  40170d:	push   edi
  40170e:	cdq    
  40170f:	and    eax,0xfd4bc600
  401714:	addr16 pop ss
  401716:	xor    dh,dh
  401718:	push   ecx
  401719:	add    dl,ah
  40171b:	mov    ebx,0x9acec2f0
  401720:	popf   
  401721:	cmc    
  401722:	popf   
  401723:	xor    eax,0x9198dbe
  401728:	cmp    dh,bh
  40172a:	pop    esi
  40172b:	dec    esi
  40172c:	cmp    DWORD PTR ds:0xd8a56a03,ebx
  401732:	shl    BYTE PTR [edx],1
  401734:	dec    esi
  401735:	jmp    0xcc292be2
  40173a:	and    DWORD PTR [edx-0x395169b3],esp
  401740:	stc    
  401741:	dec    edx
  401742:	data16 mov es,WORD PTR [esi]
  401745:	imul   edx,ebx,0xf30bd526
  40174b:	mov    ah,bh
  40174d:	ins    DWORD PTR es:[edi],dx
  40174e:	and    ebp,ecx
  401750:	sub    esp,ebp
  401752:	jmp    0x2ca1:0x3db5c517
  401759:	pop    ecx
  40175a:	(bad)  
  40175b:	mov    esi,0x466b02
  401760:	daa    
  401761:	ret    
  401762:	(bad)  [ebx+esi*1+0x3e026a37]
  401769:	das    
  40176a:	mov    edi,DWORD PTR [ebp-0x7d8803b1]
  401770:	cwde   
  401771:	push   0x35
  401773:	(bad)  
  401774:	std    
  401775:	dec    edx
  401776:	jecxz  0x40173f
  401778:	mov    bl,0x9
  40177a:	stc    
  40177b:	ficom  DWORD PTR [ebx]
  40177d:	mov    ds:0x16dbf978,al
  401782:	addps  xmm6,XMMWORD PTR [edi-0x6b]
  401786:	push   ds
  401787:	shl    DWORD PTR [eax-0x6b],0x41
  40178b:	inc    ecx
  40178c:	push   ebx
  40178d:	jae    0x4017b0
  40178f:	mov    al,0x10
  401791:	test   al,0x3a
  401793:	adc    eax,0xb3904693
  401798:	pop    es
  401799:	jp     0x401739
  40179b:	test   eax,0xa78dfd07
  4017a0:	push   ebp
  4017a1:	idiv   DWORD PTR [ebp-0x6a]
  4017a4:	sub    BYTE PTR [eax-0x15],dl
  4017a7:	jl     0x401730
  4017a9:	aas    
  4017aa:	aas    
  4017ab:	jbe    0x4017cc
  4017ad:	fidivr DWORD PTR [esi+ebx*8]
  4017b0:	jb     0x40173b
  4017b2:	pop    ds
  4017b3:	inc    edx
  4017b4:	sub    al,0x2c
  4017b7:	loop   0x4017c6
  4017b9:	mov    ebp,0x279c0507
  4017be:	fsubrp st(4),st
  4017c0:	in     al,dx
  4017c1:	mov    WORD PTR [ebx-0x277679ce],ss
  4017c7:	(bad)  
  4017c8:	call   esp
  4017ca:	ins    BYTE PTR es:[edi],dx
  4017cb:	ss enter 0xe407,0xe8
  4017d0:	data16 sub ah,0x27
  4017d4:	dec    esp
  4017d5:	mov    edx,0xb5760c16
  4017da:	in     eax,0x2
  4017dc:	mov    dl,dh
  4017de:	add    al,0xc4
  4017e0:	jb     0x401788
  4017e2:	mov    ah,0x2e
  4017e4:	dec    ebp
  4017e5:	fsubr  DWORD PTR [eax]
  4017e7:	dec    ebp
  4017e8:	dec    esp
  4017e9:	and    al,0x9f
  4017eb:	push   esp
  4017ec:	jle    0x40178a
  4017ee:	aam    0xfe
  4017f0:	push   ss
  4017f1:	mov    ecx,0x5901cbe9
  4017f6:	aaa    
  4017f7:	mov    dh,0x84
  4017f9:	push   edi
  4017fa:	lea    ebp,[edi-0x73ae7126]
  401800:	dec    esi
  401801:	jnp    0x4017f1
  401803:	mov    WORD PTR [eax-0x49],ss
  401806:	jmp    0xf5c50a02
  40180b:	test   eax,0x65a5ef3b
  401810:	hlt    
  401811:	(bad)  
  401812:	cld    
  401813:	lds    esp,FWORD PTR [ecx+0x579609a3]
  401819:	mov    ecx,0x61a0b45c
  40181e:	adc    esp,DWORD PTR [ecx-0x6b629405]
  401824:	scas   eax,DWORD PTR es:[edi]
  401825:	arpl   WORD PTR [eax+0x528dc69],cx
  40182b:	mov    edi,0x7f908ee7
  401830:	jmp    0x73907dbb
  401835:	int3   
  401836:	push   eax
  401837:	lods   eax,DWORD PTR ds:[esi]
  401838:	mov    al,ds:0xbe0addc9
  40183d:	jle    0x4018a9
  40183f:	iret   
  401840:	pop    edi
  401841:	push   0xffffffa9
  401843:	adc    eax,0xb2913605
  401848:	push   ecx
  401849:	pop    ds
  40184a:	and    eax,0x368716f4
  40184f:	xor    DWORD PTR [edi],0xffffffb7
  401852:	fidiv  DWORD PTR [edx]
  401854:	mov    ebx,DWORD PTR [edi-0x7576dd2d]
  40185a:	into   
  40185b:	sbb    al,0x30
  40185d:	adc    al,0x71
  40185f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401860:	dec    ecx
  401861:	mov    DWORD PTR [ebx-0x5cb163ba],ebx
  401867:	mov    ebp,0x360c09be
  40186c:	nop
  40186d:	push   ebp
  40186e:	imul   eax,ebx,0x37
  401871:	lods   eax,DWORD PTR ds:[esi]
  401872:	jecxz  0x4018de
  401874:	jecxz  0x401809
  401876:	fucom  st(7)
  401878:	push   es
  401879:	ja     0x401835
  40187b:	pop    esp
  40187c:	shr    BYTE PTR [ebx+0x22e87364],1
  401882:	scas   al,BYTE PTR es:[edi]
  401883:	out    dx,eax
  401884:	sbb    al,0x97
  401886:	arpl   cx,si
  401888:	inc    esp
  401889:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40188a:	push   ss
  40188b:	neg    BYTE PTR [ecx+0x49]
  40188e:	mov    eax,ds:0xa6e3bf93
  401893:	pop    edi
  401894:	jae    0x401858
  401896:	xchg   edx,eax
  401897:	xchg   DWORD PTR [eax+0x482fec30],edi
  40189d:	scas   eax,DWORD PTR es:[edi]
  40189e:	sbb    eax,0xde6c9a37
  4018a3:	sti    
  4018a4:	jno    0x4018af
  4018a6:	mov    edi,0xa9e23e14
  4018ab:	int    0x62
  4018ad:	(bad)  
  4018ae:	jbe    0x4018e4
  4018b0:	or     al,BYTE PTR cs:[ecx+0x4bd9fd43]
  4018b7:	mov    esp,0x570aab53
  4018bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018bd:	lahf   
  4018be:	rcr    BYTE PTR [edx],1
  4018c0:	daa    
  4018c1:	aam    0xc1
  4018c3:	in     al,dx
  4018c4:	add    al,0x2
  4018c6:	dec    ebx
  4018c7:	aaa    
  4018c8:	fwait
  4018c9:	pushf  
  4018ca:	inc    edi
  4018cb:	sub    bl,BYTE PTR [edx]
  4018cd:	push   ebx
  4018ce:	dec    edx
  4018cf:	scas   eax,DWORD PTR es:[edi]
  4018d0:	inc    esi
  4018d1:	repnz nop
  4018d3:	mov    BYTE PTR [edi+ebp*4+0x57fbfceb],ch
  4018da:	and    BYTE PTR [esi+0x9],0x4
  4018de:	arpl   WORD PTR [esp+ebx*4-0x32],dx
  4018e2:	aad    0x29
  4018e4:	xor    al,0x87
  4018e6:	mov    BYTE PTR [edx-0x2b],bl
  4018e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018ea:	rol    bl,0x79
  4018ed:	leave  
  4018ee:	xchg   ebx,eax
  4018ef:	outs   dx,BYTE PTR ds:[esi]
  4018f0:	mov    al,bl
  4018f2:	inc    esp
  4018f3:	push   es
  4018f4:	pop    ss
  4018f5:	xor    eax,0xad2b19d1
  4018fa:	out    0x99,al
  4018fc:	jnp    0x4018a6
  4018fe:	xchg   esp,eax
  4018ff:	pop    ebp
  401900:	shl    BYTE PTR [edx+eax*4],1
  401903:	call   0x4cfd:0x6717fe06
  40190a:	push   cs
  40190b:	mov    edx,0xcc78364f
  401910:	call   FWORD PTR [eax]
  401912:	fst    QWORD PTR [esp+edx*2+0x29]
  401916:	ds cmp ah,ch
  401919:	add    al,0x68
  40191b:	pop    esi
  40191c:	push   edx
  40191d:	xor    DWORD PTR [ebx-0x50b08fcc],eax
  401923:	adc    bh,BYTE PTR [edx]
  401925:	jne    0x401956
  401927:	adc    dl,BYTE PTR [eax]
  401929:	nop
  40192a:	pop    ds
  40192b:	or     cl,BYTE PTR [eax-0x5350a6df]
  401931:	mov    ch,0x62
  401933:	and    al,0xf4
  401935:	loope  0x4018f6
  401937:	mov    bl,0xf7
  401939:	xor    eax,DWORD PTR [ebx-0x1565c1eb]
  40193f:	sbb    esi,DWORD PTR [eax*8-0x7d5107ff]
  401946:	inc    ebp
  401947:	or     cl,BYTE PTR [ebx+0x22]
  40194a:	sbb    edx,ebp
  40194c:	push   ecx
  40194d:	mov    al,0x8d
  40194f:	sub    DWORD PTR [esp+edx*1-0x45],ecx
  401953:	push   0x44
  401955:	add    ecx,DWORD PTR [eax-0x2de52769]
  40195b:	cdq    
  40195c:	xor    al,0x8a
  40195e:	test   eax,0x4b1ad23c
  401963:	dec    edi
  401964:	push   esp
  401965:	and    al,BYTE PTR [eax+0x60be5a6]
  40196b:	or     dh,al
  40196d:	mov    ?,WORD PTR [ecx+0x10e3c255]
  401973:	mov    esi,0x25bd4281
  401978:	jecxz  0x4019e5
  40197a:	mov    dh,0x7f
  40197c:	xlat   BYTE PTR ds:[ebx]
  40197d:	mov    DWORD PTR [eax+edx*2+0x23],0x28455799
  401985:	pop    esp
  401986:	add    eax,0x5c5601f6
  40198b:	sub    ecx,DWORD PTR [edx]
  40198d:	nop
  40198e:	mov    ds:0xba8f8b6d,eax
  401993:	out    dx,eax
  401994:	xacquire xchg BYTE PTR [esi-0x56],bh
  401998:	dec    esi
  401999:	mov    esp,0xdd0f5215
  40199e:	test   al,ah
  4019a0:	es (bad) 
  4019a3:	sbb    DWORD PTR ds:0xbe541f69,eax
  4019a9:	mov    ch,dl
  4019ab:	ins    DWORD PTR es:[edi],dx
  4019ac:	imul   ecx,DWORD PTR [ebp+eax*2-0x13],0xe413b6b
  4019b4:	push   ebx
  4019b5:	mov    ds:0x881da08b,eax
  4019ba:	arpl   sp,bx
  4019bc:	pop    esp
  4019bd:	cli    
  4019be:	mov    cl,dh
  4019c0:	or     ebp,DWORD PTR [edi-0x62]
  4019c3:	sub    DWORD PTR [ebx+0x2219e5f9],ecx
  4019c9:	fild   QWORD PTR [edx]
  4019cb:	out    0x54,al
  4019cd:	stc    
  4019ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019cf:	pop    ecx
  4019d0:	popf   
  4019d1:	scas   eax,DWORD PTR es:[edi]
  4019d2:	mov    eax,ds:0xd6b752fd
  4019d7:	adc    ah,BYTE PTR [eax]
  4019d9:	call   0x35bd925f
  4019de:	jmp    0x401999
  4019e0:	lods   eax,DWORD PTR ds:[esi]
  4019e1:	call   0x386dd65c
  4019e6:	mov    bl,0xfe
  4019e8:	loope  0x4019dc
  4019ea:	inc    eax
  4019eb:	cmp    eax,esi
  4019ed:	fsubr  QWORD PTR [edx+ecx*8]
  4019f0:	mov    BYTE PTR [eax+edx*2-0x1bbd4bed],bl
  4019f7:	int    0xbf
  4019f9:	(bad)  
  4019fa:	lahf   
  4019fb:	adc    ah,BYTE PTR [edx]
  4019fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4019fe:	neg    DWORD PTR [ebx-0x9]
  401a01:	je     0x401a19
  401a03:	pusha  
  401a04:	mov    ah,0x4
  401a06:	add    dl,BYTE PTR [edi]
  401a08:	in     eax,0x95
  401a0a:	adc    eax,0x9f6bdd52
  401a0f:	inc    eax
  401a10:	leave  
  401a11:	cmp    dh,BYTE PTR [esi]
  401a13:	loopne 0x401a19
  401a15:	or     esp,DWORD PTR [ebx+0x7dca93e4]
  401a1b:	push   ecx
  401a1c:	add    ah,BYTE PTR [esi-0x15]
  401a1f:	sbb    eax,0x17b3e31d
  401a24:	mov    dh,al
  401a26:	and    esp,ecx
  401a28:	in     al,0xf7
  401a2a:	imul   ebp,DWORD PTR [ebx-0x48],0xfffffff2
  401a2e:	lahf   
  401a2f:	push   ebp
  401a30:	mov    dl,0xc0
  401a33:	jbe    0x401a20
  401a35:	push   edx
  401a36:	xor    eax,0x2e865260
  401a3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a3c:	test   al,0xbc
  401a3e:	pushf  
  401a3f:	sub    bh,BYTE PTR [ebp+0x7c74ed25]
  401a45:	inc    ecx
  401a46:	or     DWORD PTR [ecx],0xf65bcf1
  401a4c:	rcl    BYTE PTR [ebx+0x27],cl
  401a4f:	inc    eax
  401a50:	inc    ebx
  401a51:	ds cmp dh,ch
  401a54:	inc    ebx
  401a55:	xchg   edi,eax
  401a56:	mov    ecx,0x7bb74295
  401a5b:	mov    edi,0x2e2cc
  401a60:	js     0x401a15
  401a62:	xor    al,0xc9
  401a64:	dec    edi
  401a65:	xchg   BYTE PTR [edx+0x10],ah
  401a68:	rol    DWORD PTR [edi],1
  401a6a:	jmp    0x4ec4:0x1523d859
  401a71:	aad    0x26
  401a73:	sbb    al,0x72
  401a75:	dec    edx
  401a76:	mov    esi,0xaf4b3ac
  401a7b:	rcl    ebx,0xb
  401a7e:	jns    0x401aa9
  401a80:	push   eax
  401a81:	fcmovnbe st,st(2)
  401a83:	or     edx,eax
  401a85:	(bad)  
  401a86:	fst    QWORD PTR [edi+0x26]
  401a89:	pop    edx
  401a8a:	aas    
  401a8b:	sbb    edx,ebx
  401a8d:	xor    DWORD PTR [ebx+0x20f72eee],ebp
  401a93:	jl     0x401a6e
  401a95:	call   0xe2f9:0x774f1fde
  401a9c:	jne    0x401a7e
  401a9e:	outs   dx,DWORD PTR ds:[esi]
  401a9f:	push   esi
  401aa0:	sar    eax,1
  401aa2:	fistp  WORD PTR [edx+edi*4+0x1]
  401aa6:	sbb    ebx,edi
  401aa8:	add    al,0xf7
  401aaa:	leave  
  401aab:	jmp    0x8836:0x3fe192ea
  401ab2:	push   0xffffffad
  401ab4:	(bad)  
  401ab5:	sub    al,0xa1
  401ab7:	push   0xffffffa7
  401ab9:	mov    ebx,0x6f8d3e6
  401abe:	mov    dh,0xea
  401ac0:	cld    
  401ac1:	mov    ecx,0xb69dc2bf
  401ac6:	pop    eax
  401ac7:	lahf   
  401ac8:	not    DWORD PTR [edi]
  401aca:	fwait
  401acb:	jg     0x401b18
  401acd:	inc    esp
  401ace:	sub    esp,esp
  401ad0:	unpcklps xmm6,XMMWORD PTR [edi+0x4b6a06a1]
  401ad7:	mov    edx,0x92ff76e2
  401adc:	xchg   esp,eax
  401add:	arpl   dx,di
  401adf:	mov    ds:0xa3e7e7c,al
  401ae4:	mov    eax,ds:0xce7f606
  401ae9:	sti    
  401aea:	rcl    DWORD PTR [edx+ecx*2-0x65aacac8],1
  401af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401af2:	imul   edi,ecx,0x54
  401af5:	pop    ecx
  401af6:	das    
  401af7:	or     BYTE PTR [edi+eiz*4+0x40],cl
  401afb:	dec    eax
  401afc:	push   0xffffffc1
  401afe:	lods   al,BYTE PTR ds:[esi]
  401aff:	(bad)  
  401b00:	mov    eax,0xdf053269
  401b05:	into   
  401b06:	xor    DWORD PTR [ebx-0x16],ebx
  401b09:	(bad)  
  401b0a:	mov    ds:0x94759927,al
  401b0f:	(bad)  
  401b10:	lock (bad) 
  401b12:	out    dx,al
  401b13:	das    
  401b14:	cmp    BYTE PTR [ebx+0x6c],0xa
  401b18:	sub    al,BYTE PTR [eax-0x2e]
  401b1b:	pop    esi
  401b1c:	retf   0xc07c
  401b1f:	rol    DWORD PTR [ebx-0x3aa8eecb],cl
  401b25:	add    DWORD PTR [edx],eax
  401b27:	stos   DWORD PTR es:[edi],eax
  401b28:	push   esi
  401b29:	or     ebx,DWORD PTR [edx+ecx*4-0x259a318e]
  401b30:	retf   
  401b31:	push   ss
  401b32:	(bad)  
  401b33:	(bad)  
  401b34:	into   
  401b35:	out    dx,al
  401b36:	fwait
  401b37:	scas   eax,DWORD PTR es:[edi]
  401b38:	mov    al,0x9b
  401b3a:	sbb    BYTE PTR [ebx+0x42147343],ch
  401b40:	lahf   
  401b41:	push   esi
  401b42:	xor    BYTE PTR [edx],0xb1
  401b45:	jbe    0x401aec
  401b47:	call   0x3a95be65
  401b4c:	jns    0x401b7e
  401b4e:	sahf   
  401b4f:	cmp    ch,BYTE PTR [edi]
  401b51:	aaa    
  401b52:	cld    
  401b53:	call   0xfcf0:0x58b0564e
  401b5a:	mov    al,ds:0xd3fabdbc
  401b5f:	mov    ecx,0xee371d66
  401b64:	ficom  WORD PTR [ebx+0x5250441a]
  401b6a:	ror    DWORD PTR [esi+edi*4+0x3f1316bf],1
  401b71:	jno    0x401af6
  401b73:	pop    ebx
  401b74:	mov    BYTE PTR [edx],ch
  401b76:	retf   
  401b77:	sbb    al,0xca
  401b7a:	xchg   edx,eax
  401b7b:	hlt    
  401b7c:	adc    BYTE PTR [ecx],dh
  401b7e:	push   edx
  401b7f:	mov    ebp,DWORD PTR [ebp-0x129a46d7]
  401b85:	push   eax
  401b86:	pop    esi
  401b87:	into   
  401b88:	cs mov eax,0x22485b8d
  401b8e:	pop    ds
  401b8f:	les    edx,FWORD PTR [edx]
  401b91:	xchg   edx,eax
  401b92:	out    dx,eax
  401b93:	cmp    BYTE PTR ds:0x8df76924,al
  401b99:	div    BYTE PTR [ecx+0x70]
  401b9c:	daa    
  401b9d:	cmp    eax,0x93d9fb23
  401ba2:	mov    eax,ds:0xa9705df0
  401ba7:	pop    eax
  401ba8:	or     eax,DWORD PTR [edx-0x2c]
  401bab:	jbe    0x401c27
  401bad:	outs   dx,DWORD PTR ds:[esi]
  401bae:	loop   0x401b37
  401bb0:	mov    edx,DWORD PTR [eax+edx*2-0x18c2bf8a]
  401bb7:	and    al,0x96
  401bb9:	je     0x401b94
  401bbb:	(bad)  
  401bbc:	sub    DWORD PTR [edi+0xb],eax
  401bbf:	mov    esi,0xfe2dbfda
  401bc4:	jge    0x401b82
  401bc6:	dec    eax
  401bc7:	or     BYTE PTR [esi],bh
  401bc9:	push   edi
  401bca:	pusha  
  401bcb:	aam    0x15
  401bcd:	cmp    DWORD PTR [edx+0x3716aa9d],esp
  401bd3:	jmp    0x4756:0x5e841daf
  401bda:	jp     0x401bdc
  401bdc:	scas   eax,DWORD PTR es:[edi]
  401bdd:	xchg   ebp,eax
  401bde:	ret    
  401bdf:	xlat   BYTE PTR ds:[ebx]
  401be0:	bnd jnp 0x401bd6
  401be3:	shl    BYTE PTR [ebp+ebp*4-0x70320a75],0x23
  401beb:	mov    DWORD PTR [esi],eax
  401bed:	(bad)  
  401bee:	imul   ebp,DWORD PTR [ebx+0x48f142b1],0x63
  401bf5:	fs pop esp
  401bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bf8:	scas   al,BYTE PTR es:[edi]
  401bf9:	into   
  401bfa:	ja     0x401bbe
  401bfc:	sbb    al,0x40
  401bfe:	mov    ds:0xbc7d733d,al
  401c04:	jno    0x401c24
  401c06:	push   eax
  401c07:	sub    DWORD PTR [ecx],0x1c
  401c0a:	push   0x2d29ba72
  401c0f:	inc    edi
  401c10:	aam    0x82
  401c12:	shl    DWORD PTR ds:[edx+0x14386715],cl
  401c19:	xor    ecx,DWORD PTR [edx]
  401c1b:	sub    al,0xcf
  401c1d:	mov    cl,0xd
  401c1f:	mov    dh,0x9f
  401c21:	mov    esi,0x3126dc40
  401c26:	jge    0x401c3c
  401c28:	mov    ecx,0x99809cbe
  401c2d:	mov    ah,0x74
  401c2f:	das    
  401c30:	das    
  401c31:	lahf   
  401c32:	adc    cl,BYTE PTR [esi+0x569cc2b3]
  401c38:	inc    ecx
  401c39:	ins    BYTE PTR es:[edi],dx
  401c3a:	dec    edx
  401c3b:	aaa    
  401c3c:	mov    cl,0x16
  401c3e:	pop    esi
  401c3f:	(bad)  
  401c40:	hlt    
  401c41:	xchg   DWORD PTR [ecx-0x25],esp
  401c44:	aaa    
  401c45:	xor    ebx,DWORD PTR [edi]
  401c47:	loop   0x401c7d
  401c49:	int    0x35
  401c4b:	gs je  0x401c5d
  401c4e:	lock rcr BYTE PTR cs:[eax+0x33],0x3e
  401c54:	retf   
  401c55:	push   ecx
  401c56:	push   ss
  401c57:	fnstcw WORD PTR [esi]
  401c59:	out    dx,eax
  401c5a:	mov    ebx,0x2799bdb3
  401c5f:	popa   
  401c60:	call   0xea7d1c9d
  401c65:	cmp    ch,BYTE PTR [edi]
  401c67:	mov    ecx,0x9c5acd35
  401c6c:	xor    eax,ebp
  401c6e:	stos   BYTE PTR es:[edi],al
  401c6f:	mov    eax,ds:0x72adae5e
  401c74:	mov    esp,0x5df37f5d
  401c79:	daa    
  401c7a:	enter  0xca,0xd1
  401c7e:	ja     0x401c30
  401c80:	repz mov ecx,0x9440f07
  401c86:	je     0x401cbf
  401c88:	inc    edi
  401c89:	jbe    0x401cf9
  401c8b:	push   ss
  401c8c:	inc    ebp
  401c8d:	hlt    
  401c8e:	xor    eax,0x429117b1
  401c93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c94:	rcl    BYTE PTR [ebp+0x77],cl
  401c97:	ja     0x401c3f
  401c99:	xchg   DWORD PTR [ecx+0x2a],ebp
  401c9c:	lahf   
  401c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c9e:	iret   
  401c9f:	xor    eax,0xb9fec652
  401ca4:	popa   
  401ca5:	dec    ecx
  401ca6:	push   0xf97d5649
  401cab:	mov    ds:0xa235dd20,al
  401cb0:	adc    eax,0x25844465
  401cb5:	dec    ebp
  401cb6:	sbb    DWORD PTR [edx+0x50],edx
  401cb9:	or     dl,BYTE PTR [eax+0x7c827973]
  401cbf:	aad    0xe3
  401cc1:	enter  0x14cf,0x10
  401cc5:	sbb    DWORD PTR [ecx+eax*1-0x6f],0x1b
  401cca:	jo     0x401cf3
  401ccc:	mov    eax,ds:0x38b0cc9d
  401cd1:	jb     0x401d50
  401cd3:	and    eax,0x67dfb80d
  401cd8:	dec    esi
  401cd9:	lahf   
  401cda:	inc    esp
  401cdb:	sbb    edi,ebx
  401cdd:	dec    esi
  401cde:	scas   al,BYTE PTR es:[edi]
  401cdf:	ja     0x401d0a
  401ce1:	stc    
  401ce2:	push   esp
  401ce3:	xor    BYTE PTR [ebx+0x3],bh
  401ce6:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  401ce8:	pop    esp
  401ce9:	xlat   BYTE PTR ds:[ebx]
  401cea:	ror    BYTE PTR [ecx-0x63],0xba
  401cee:	mov    ah,0x8a
  401cf0:	arpl   WORD PTR [eax+edi*8+0x3af048be],cx
  401cf7:	jbe    0x7ba3ae03
  401cfd:	adc    eax,0xd3d4adf6
  401d02:	xor    eax,0xd2b4343b
  401d07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d08:	jno    0x401d72
  401d0a:	jmp    0x46ecb3ac
  401d0f:	pusha  
  401d10:	pop    ebx
  401d11:	jmp    0x2f62b576
  401d16:	jo     0x401d29
  401d18:	clc    
  401d19:	mov    ecx,0xb8dc97ba
  401d1e:	mov    edx,0xba92df36
  401d23:	lds    ecx,FWORD PTR [ebx-0x2f144f58]
  401d29:	cmp    DWORD PTR [eax],edx
  401d2b:	push   ds
  401d2c:	push   edx
  401d2d:	aaa    
  401d2e:	inc    edx
  401d2f:	adc    al,BYTE PTR [esi+0x5df1577f]
  401d35:	push   es
  401d36:	or     al,0x36
  401d38:	inc    esi
  401d39:	test   al,0x27
  401d3b:	cmp    bl,dh
  401d3d:	in     al,0x38
  401d3f:	ins    BYTE PTR es:[edi],dx
  401d40:	icebp  
  401d41:	xor    ebp,DWORD PTR [esi+0x77]
  401d44:	fist   WORD PTR [eax+0x39cd877b]
  401d4a:	fld    st(4)
  401d4c:	sub    BYTE PTR [ebp-0x22],ch
  401d4f:	mov    ch,0xa3
  401d51:	sub    al,0x1c
  401d53:	adc    esp,0xffffffb1
  401d56:	dec    edx
  401d57:	test   DWORD PTR [ebp-0x288409ef],edx
  401d5d:	pop    edi
  401d5e:	adc    al,0x43
  401d60:	dec    ecx
  401d61:	in     eax,0xe4
  401d63:	pusha  
  401d64:	jecxz  0x401d3a
  401d66:	inc    esp
  401d67:	(bad)  [edi+0x3e]
  401d6a:	inc    ebp
  401d6b:	fs test eax,0x3e8bc8b1
  401d71:	pop    es
  401d72:	pop    ebp
  401d73:	sbb    eax,0x4f2cc5b8
  401d78:	mov    BYTE PTR [ecx],dh
  401d7a:	push   ss
  401d7b:	mov    BYTE PTR [esi+eax*1],dh
  401d7e:	push   edi
  401d7f:	inc    ebx
  401d80:	sahf   
  401d81:	in     al,0x5b
  401d83:	aas    
  401d84:	leave  
  401d85:	add    ah,dh
  401d87:	pusha  
  401d88:	add    BYTE PTR [eax-0x5f],0x13
  401d8c:	jmp    0x6441ee45
  401d91:	adc    DWORD PTR [edi],edx
  401d93:	iret   
  401d94:	mov    ebp,0xb1d4dea3
  401d99:	ret    
  401d9a:	adc    BYTE PTR [eax-0x2bf4d763],dh
  401da0:	add    ch,BYTE PTR [eax+0x6d]
  401da3:	imul   ebp,DWORD PTR [ebx+ecx*1-0x7591269f],0x4cc16e2d
  401dae:	addr16 ds jbe 0x401d6c
  401db2:	pusha  
  401db3:	mov    bh,0x17
  401db5:	sub    ah,al
  401db7:	cli    
  401db8:	aam    0xf0
  401dba:	fist   WORD PTR [ebx]
  401dbc:	mov    ebp,?
  401dbe:	adc    edi,edi
  401dc0:	(bad)  
  401dc1:	into   
  401dc2:	mov    ch,ah
  401dc4:	xor    dh,BYTE PTR [edx]
  401dc6:	jecxz  0x401dc2
  401dc8:	aad    0xc8
  401dca:	es jle 0x401d67
  401dcd:	xchg   ecx,eax
  401dce:	aam    0x2
  401dd0:	jmp    0x686dd1d2
  401dd5:	rcl    BYTE PTR [ebp-0x79],0x2c
  401dd9:	hlt    
  401dda:	adc    eax,0x31a86255
  401ddf:	les    esi,FWORD PTR [ecx+ebp*4]
  401de2:	push   ss
  401de3:	ret    
  401de4:	fbld   TBYTE PTR [esi+0x36ac0f]
  401dea:	cmp    ch,BYTE PTR [ebx-0x36]
  401ded:	dec    edi
  401dee:	cli    
  401def:	(bad)
  401df2:	ret    
  401df3:	outs   dx,BYTE PTR ds:[esi]
  401df4:	adc    al,0xfc
  401df6:	inc    edi
  401df7:	add    BYTE PTR [edi-0x44],ah
  401dfa:	mov    ebp,0x4d2f83ae
  401dff:	mov    ds:0x8315650b,eax
  401e04:	push   ds
  401e05:	add    eax,0xc2de0253
  401e0a:	call   0xdd27ddfc
  401e0f:	jle    0x401e64
  401e11:	in     eax,dx
  401e12:	mov    al,0xc6
  401e14:	xor    eax,0x79cebc48
  401e19:	lea    ebp,[edx+ebp*4]
  401e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e1d:	loope  0x401e81
  401e1f:	ins    DWORD PTR es:[edi],dx
  401e20:	mov    dl,0x96
  401e22:	and    BYTE PTR [ecx+ecx*4],dh
  401e25:	cmp    eax,0x2d33b00f
  401e2a:	dec    edi
  401e2b:	je     0x401e23
  401e2d:	sub    al,0x2f
  401e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e30:	shl    BYTE PTR [ecx],cl
  401e32:	(bad)  
  401e33:	hlt    
  401e34:	push   es
  401e35:	push   esp
  401e36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e37:	mov    eax,ds:0xbbe16f92
  401e3c:	lods   al,BYTE PTR ds:[esi]
  401e3d:	ja     0x401e7f
  401e3f:	in     al,0xb8
  401e41:	xor    BYTE PTR [esi+0x6962c74],cl
  401e47:	cli    
  401e48:	mov    BYTE PTR [ebp-0x49925373],al
  401e4e:	cmc    
  401e4f:	sbb    DWORD PTR [ecx],eax
  401e51:	or     esi,DWORD PTR [esi-0x1]
  401e54:	pop    ecx
  401e55:	xor    dh,cl
  401e57:	shl    DWORD PTR [edi-0x774e57d9],1
  401e5d:	or     DWORD PTR [edx+0x69],ebp
  401e60:	jnp    0x401e5f
  401e62:	rol    DWORD PTR [ebp+0x7f],cl
  401e65:	xor    eax,0xb1f59085
  401e6a:	mov    ds,WORD PTR [edx-0x38]
  401e6d:	ret    
  401e6e:	call   0x1af:0xcd5a3258
  401e75:	cmovge ecx,DWORD PTR [edi-0x4aa2cc2f]
  401e7c:	loop   0x401e21
  401e7e:	cdq    
  401e7f:	push   cs
  401e80:	add    DWORD PTR [edx+0x7d18d6c],0x1f
  401e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e88:	mov    esi,esp
  401e8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e8b:	sbb    dl,BYTE PTR [edx+0x7c]
  401e8e:	pop    esp
  401e8f:	or     DWORD PTR [ebp-0x7f65c234],0xc8986306
  401e99:	loopne 0x401e27
  401e9b:	mov    ch,0xce
  401e9d:	shl    BYTE PTR [edx+esi*8-0x750425bd],0x3e
  401ea5:	call   0x6102b9f3
  401eaa:	out    0x76,al
  401eac:	add    al,0xb0
  401eae:	bound  eax,QWORD PTR [ebx+0x6e]
  401eb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401eb2:	xchg   BYTE PTR [edi+ebx*8-0x7433d46],al
  401eb9:	imul   ebx,edx,0x74
  401ebc:	cli    
  401ebd:	add    al,0x5e
  401ebf:	in     al,dx
  401ec0:	repnz std 
  401ec2:	and    al,0x75
  401ec4:	int3   
  401ec5:	cs mov esi,0xefa08f3e
  401ecb:	pop    edi
  401ecd:	xchg   esp,eax
  401ece:	mov    bh,0x2
  401ed0:	mov    dh,0xff
  401ed2:	(bad)  
  401ed3:	(bad)  
  401ed4:	mov    bh,0x1e
  401ed6:	rcl    DWORD PTR [edx],1
  401ed8:	mov    cl,BYTE PTR [esi+0x46]
  401edb:	inc    ebx
  401edc:	xor    eax,DWORD PTR [edi-0x73]
  401edf:	mov    eax,ds:0x35d20370
  401ee4:	xor    al,ah
  401ee6:	int    0x12
  401ee8:	mov    edi,0x939f04cd
  401eed:	outs   dx,DWORD PTR ds:[esi]
  401eee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eef:	or     DWORD PTR [edi+0x7935d380],ecx
  401ef5:	dec    esi
  401ef6:	iret   
  401ef7:	sub    DWORD PTR [ebx+0x73],edx
  401efa:	mov    bl,BYTE PTR [ebx]
  401efc:	fmul   QWORD PTR [ebx-0x503bc727]
  401f02:	mov    ebp,0xd0f89f80
  401f07:	cwde   
  401f08:	scas   al,BYTE PTR es:[edi]
  401f09:	cmp    BYTE PTR [bp+di-0x2806],bh
  401f0e:	(bad)  
  401f0f:	push   ss
  401f10:	in     al,0xa0
  401f12:	es loop 0x401f6a
  401f15:	retf   0x343e
  401f18:	inc    edx
  401f19:	repz inc esi
  401f1b:	mov    ebp,0x21aee9e1
  401f20:	clc    
  401f21:	std    
  401f22:	(bad)  
  401f23:	cmp    al,0xe0
  401f25:	or     DWORD PTR ds:0xf57f2e0c,ecx
  401f2b:	xor    bh,ch
  401f2d:	push   0xa64109c9
  401f32:	popa   
  401f33:	call   0x6f798ee7
  401f38:	jl     0x401f2d
  401f3a:	jno    0x401fa9
  401f3c:	or     DWORD PTR [eax-0x1c],eax
  401f3f:	lods   al,BYTE PTR ds:[esi]
  401f40:	jne    0x401fab
  401f42:	mov    BYTE PTR [eax],al
  401f44:	mov    bh,0x55
  401f46:	lds    ebx,FWORD PTR [edi-0x80]
  401f49:	dec    ecx
  401f4a:	fld    DWORD PTR [edx+0x7a]
  401f4d:	rol    DWORD PTR [eax+0x3fe63bd],cl
  401f53:	leave  
  401f54:	rcl    BYTE PTR [eax-0x8],0xdd
  401f58:	mov    esp,0x1a02b2dd
  401f5d:	into   
  401f5e:	clc    
  401f5f:	dec    edi
  401f60:	pushf  
  401f61:	rcr    DWORD PTR [edx],1
  401f63:	pop    edi
  401f64:	mov    eax,ds:0xe5c9a7b5
  401f69:	mov    esp,0x5d3b4982
  401f6e:	jmp    0x3782:0x814bce2
  401f75:	mul    BYTE PTR [edi-0x2efcc596]
  401f7b:	add    al,0xe8
  401f7d:	pop    ds
  401f7e:	xchg   esp,eax
  401f7f:	xchg   ebp,eax
  401f80:	inc    eax
  401f81:	xchg   ebp,eax
  401f82:	mov    ebx,0xaf70cec3
  401f87:	dec    esp
  401f88:	inc    esp
  401f89:	sbb    al,0xa9
  401f8b:	inc    esp
  401f8c:	sbb    ecx,ebx
  401f8e:	push   ss
  401f8f:	add    ebp,DWORD PTR [eax+eax*8]
  401f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f93:	das    
  401f94:	mov    ah,0xd5
  401f96:	and    al,dh
  401f98:	xchg   ecx,eax
  401f99:	test   al,0x9e
  401f9b:	(bad)  
  401f9c:	jecxz  0x401f40
  401f9e:	mov    bh,0x9d
  401fa0:	sbb    eax,0xc8f95fa7
  401fa5:	icebp  
  401fa6:	test   edx,esi
  401fa8:	mov    al,0xf9
  401faa:	loop   0x401fce
  401fac:	aas    
  401fad:	mov    ?,WORD PTR [eax]
  401faf:	xchg   DWORD PTR [ebx-0x65],edi
  401fb2:	cmp    bl,BYTE PTR [esi-0x30fe4ac6]
  401fb8:	pop    ss
  401fb9:	inc    ebx
  401fba:	sub    edi,esp
  401fbc:	call   0xd94:0x34c80d1b
  401fc3:	push   cs
  401fc4:	enter  0xb103,0x32
  401fc8:	jnp    0x401fd2
  401fca:	push   ebx
  401fcb:	adc    ah,ch
  401fcd:	inc    edi
  401fce:	xchg   DWORD PTR [esi+0x6cceedd0],edi
  401fd4:	xor    BYTE PTR [ebx+0x25e905d9],0x57
  401fdb:	sub    eax,0xfbb79abf
  401fe0:	in     al,dx
  401fe1:	add    dh,cl
  401fe3:	pop    ecx
  401fe4:	dec    esp
  401fe5:	dec    edi
  401fe6:	xor    al,0xa6
  401fe8:	jmp    0x401fba
  401fea:	cmc    
  401feb:	mov    esi,0xde6e728a
  401ff0:	cmp    BYTE PTR [eax-0x66],dh
  401ff3:	nop
  401ff4:	in     al,0x5d
  401ff6:	inc    ebp
  401ff7:	pop    es
  401ff8:	add    al,0x20
  401ffa:	or     BYTE PTR [eax],ah
  401ffc:	and    bh,BYTE PTR [eax]
  401ffe:	mov    DWORD PTR ds:0x82e5d4bb,eax
  402004:	inc    DWORD PTR [ecx-0x4b37061f]
  40200a:	popa   
  40200b:	pop    ss
  40200c:	dec    esp
  40200d:	xchg   esp,eax
  40200e:	int3   
  40200f:	pop    esi
  402010:	aam    0x5c
  402012:	push   esp
  402013:	jbe    0x401feb
  402015:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402016:	mov    dh,0x50
  402018:	mov    ebp,0x2d9c3f50
  40201d:	and    eax,0x7edf9970
  402022:	mov    ds:0xa84762b5,eax
  402027:	mov    esp,edi
  402029:	std    
  40202a:	pop    ds
  40202b:	inc    ebx
  40202c:	jg     0x401fb5
  40202e:	ins    BYTE PTR es:[edi],dx
  40202f:	add    DWORD PTR [ecx+0x22],esi
  402032:	add    eax,0x847b63a9
  402037:	jmp    0x49d6ec73
  40203c:	jno    0x402077
  40203e:	pop    ecx
  40203f:	test   BYTE PTR [ecx],bh
  402041:	and    ecx,0xfffffff3
  402044:	out    0xea,al
  402046:	pop    ecx
  402047:	fidivr WORD PTR ds:0xae7e743d
  40204d:	(bad)  
  40204e:	sbb    esi,DWORD PTR [edx+0x20]
  402051:	jmp    0x402039
  402053:	fdivr  st,st(1)
  402055:	mov    esp,DWORD PTR [eax-0x6d8751b]
  40205b:	cwde   
  40205c:	mov    bl,0x7e
  40205e:	or     dh,BYTE PTR [edi-0x6e13bfe9]
  402064:	or     eax,0xb11e54d3
  402069:	jmp    0x402030
  40206b:	xor    bl,BYTE PTR [ebp-0x67082ef2]
  402071:	add    ecx,esp
  402073:	and    eax,0xfa67cc14
  402078:	sub    al,0x8e
  40207a:	les    eax,FWORD PTR [ecx+0x11588881]
  402080:	mov    dl,0x7d
  402082:	cli    
  402083:	lods   al,BYTE PTR ds:[esi]
  402084:	jbe    0x4020b8
  402086:	rcr    DWORD PTR [edx],cl
  402088:	pop    DWORD PTR [ebx-0x1f]
  40208b:	push   cs
  40208c:	xor    esp,ecx
  40208e:	scas   al,BYTE PTR es:[edi]
  40208f:	add    eax,0xdd0a
  402094:	push   cs
  402095:	stc    
  402096:	pop    es
  402097:	cmp    edx,DWORD PTR ds:0xf7960cf0
  40209d:	mov    bh,0x4c
  40209f:	jmp    0xc799:0xebec6089
  4020a6:	or     BYTE PTR [ecx],al
  4020a8:	xor    BYTE PTR [ebp-0x5cb077d9],0xec
  4020af:	cli    
  4020b0:	cmp    ecx,0xafbc701d
  4020b6:	pushf  
  4020b7:	daa    
  4020b8:	sbb    BYTE PTR [ecx+0x6ce7cab1],al
  4020be:	jno    0x4020a5
  4020c0:	sub    al,0xee
  4020c2:	cmp    bl,ah
  4020c4:	popf   
  4020c5:	sbb    al,BYTE PTR [esi+esi*2]
  4020c8:	ret    
  4020c9:	push   esi
  4020ca:	(bad)  
  4020cb:	sbb    DWORD PTR [edx+ebx*4],edx
  4020ce:	or     edx,DWORD PTR [ecx]
  4020d0:	adc    dl,BYTE PTR [edx-0x51]
  4020d3:	out    dx,al
  4020d4:	aas    
  4020d5:	add    dh,BYTE PTR [ecx]
  4020d7:	add    BYTE PTR [eax-0x40ebf9b9],ah
  4020dd:	mov    ah,0x8e
  4020df:	mov    ebx,0x2d124843
  4020e4:	hlt    
  4020e5:	les    edi,FWORD PTR [edx]
  4020e7:	iret   
  4020e8:	inc    ecx
  4020e9:	sub    DWORD PTR [eax+0x32],esi
  4020ec:	popf   
  4020ed:	stos   BYTE PTR es:[edi],al
  4020ee:	sub    ch,BYTE PTR [edi]
  4020f0:	sbb    dh,cl
  4020f2:	push   ebp
  4020f3:	mov    ecx,0x5da80510
  4020f8:	cli    
  4020f9:	ficom  DWORD PTR [ecx]
  4020fb:	push   cs
  4020fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020fd:	mov    dl,ch
  4020ff:	push   ebp
  402100:	mov    dl,0x3
  402102:	jne    0x402134
  402104:	jae    0x4020c0
  402106:	add    DWORD PTR [edi],0x47
  402109:	mov    bl,al
  40210b:	mov    edx,0x10d055a2
  402110:	ror    DWORD PTR [ebp-0x4369cd1],cl
  402116:	inc    edi
  402117:	or     DWORD PTR [ebp+0x48cd778],0xcaabaf3e
  402121:	ins    BYTE PTR es:[edi],dx
  402122:	sub    BYTE PTR [esi-0xb2e7ded],0xb4
  402129:	(bad)  
  40212a:	jecxz  0x40215b
  40212c:	pop    edx
  40212d:	lds    esp,FWORD PTR [eax]
  40212f:	mov    DWORD PTR [esi-0x556065e4],ebp
  402135:	adc    esi,ecx
  402137:	mov    eax,0x47d0f32e
  40213c:	gs mov cl,0xc3
  40213f:	cmp    al,0x6d
  402141:	dec    ebx
  402142:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402143:	and    al,0x21
  402145:	fnstsw WORD PTR [eax]
  402147:	mov    eax,DWORD PTR [edi-0x7fcffc84]
  40214d:	pusha  
  40214e:	loop   0x402107
  402150:	loopne 0x402120
  402152:	bound  esi,QWORD PTR [ecx-0x1410922a]
  402158:	inc    eax
  402159:	push   edi
  40215a:	pop    ss
  40215b:	fwait
  40215c:	retf   
  40215d:	addr16 jo 0x4020e4
  402160:	sub    BYTE PTR [ebx-0x58e9de3a],al
  402166:	ja     0x402179
  402168:	or     al,0xee
  40216a:	mov    ds:0x1a4454bd,al
  40216f:	inc    edx
  402170:	mov    ds:0x2bba4758,eax
  402175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402176:	sbb    DWORD PTR [edx-0x1d03f222],esi
  40217c:	call   0xd519:0xf393d201
  402183:	clc    
  402184:	or     eax,0xbdc1241e
  402189:	les    ebx,FWORD PTR [edx]
  40218b:	cmc    
  40218c:	arpl   WORD PTR ds:0xab037bf9,dx
  402192:	cmp    bl,ah
  402194:	ret    0x1f46
  402197:	rcr    BYTE PTR [ebx+0x74],cl
  40219a:	adc    al,0x1e
  40219c:	dec    ebp
  40219d:	call   0x5b6d:0xc2e0f67
  4021a4:	stc    
  4021a5:	mov    bl,0x98
  4021a7:	pop    ecx
  4021a8:	ror    DWORD PTR [ebx],cl
  4021aa:	jo     0x4021f9
  4021ac:	xchg   edi,eax
  4021ad:	xor    DWORD PTR [eax-0x77a53838],0xfffffffa
  4021b4:	rcr    DWORD PTR ds:0x1d88cbbf,0x10
  4021bb:	mov    bl,0xef
  4021bd:	ds mov dh,0x6e
  4021c0:	nop
  4021c1:	hlt    
  4021c2:	or     al,0x47
  4021c4:	jo     0x4021b0
  4021c6:	lea    eax,[edx]
  4021c8:	call   0xd15066e1
  4021cd:	jle    0x402210
  4021cf:	and    DWORD PTR [edi-0x23],edx
  4021d2:	cmp    al,0x34
  4021d4:	or     DWORD PTR [edi],ebp
  4021d6:	mov    DWORD PTR [ebp+0x41],edx
  4021d9:	inc    esi
  4021da:	dec    ecx
  4021db:	sub    dh,ch
  4021dd:	add    ebx,DWORD PTR [esi+0x73]
  4021e0:	jg     0x402191
  4021e2:	cmc    
  4021e3:	sub    eax,0xf7cbfde0
  4021e8:	sbb    eax,0x53e757f6
  4021ed:	mov    dl,0x1e
  4021ef:	pop    ds
  4021f0:	xor    edx,esp
  4021f2:	test   BYTE PTR [esp+eax*2+0xf8d74f4],al
  4021f9:	pop    ebp
  4021fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021fb:	sar    dl,0x87
  4021fe:	sbb    eax,esp
  402200:	xchg   esp,eax
  402201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402202:	fdiv   DWORD PTR [esi-0x7d8f97a7]
  402208:	xor    al,0x80
  40220a:	mov    eax,ds:0xc8199a91
  40220f:	lods   al,BYTE PTR ds:[esi]
  402210:	and    al,0xae
  402212:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402214:	cmc    
  402215:	aaa    
  402216:	je     0x4021c5
  402218:	inc    ebp
  402219:	daa    
  40221a:	scas   eax,DWORD PTR es:[edi]
  40221b:	imul   edi,DWORD PTR [ecx],0xfffffff5
  40221e:	mov    ah,0x2c
  402220:	or     al,0x27
  402222:	xchg   esi,eax
  402223:	loope  0x402226
  402225:	into   
  402226:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402227:	sub    BYTE PTR [eax+0x1b],bl
  40222a:	adc    DWORD PTR [eax+0x55de1531],esp
  402230:	ja     0x3dde509c
  402236:	les    ecx,FWORD PTR [ecx-0x23b1081f]
  40223c:	shr    BYTE PTR [edi+eax*8],1
  40223f:	dec    esi
  402240:	cdq    
  402241:	pop    eax
  402242:	jne    0x402258
  402244:	sahf   
  402245:	call   0xfb62c7bc
  40224a:	mov    ds:0xfc98c88d,eax
  40224f:	add    ch,BYTE PTR [eax-0x22]
  402252:	push   esp
  402253:	inc    ecx
  402254:	outs   dx,DWORD PTR ds:[esi]
  402255:	mov    edx,0xc191fb09
  40225a:	loope  0x40223a
  40225c:	dec    ecx
  40225d:	pop    esp
  40225e:	jae    0x4021fa
  402260:	repz xchg ecx,eax
  402262:	hlt    
  402263:	and    ch,0x75
  402266:	sahf   
  402267:	push   0x9bc091b1
  40226c:	dec    esp
  40226d:	pop    ds
  40226e:	sar    BYTE PTR [ecx-0xda5b96a],cl
  402274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402275:	mov    edx,0xb8858f09
  40227a:	in     al,0x94
  40227c:	xchg   ebx,eax
  40227d:	add    BYTE PTR [edx+0x40],0x52
  402281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402282:	push   edi
  402283:	scas   eax,DWORD PTR es:[edi]
  402284:	mov    dl,0x1c
  402286:	jmp    0xb77679b6
  40228b:	lock imul esp,DWORD PTR [ebp-0x7ae0e235],0xf3028169
  402296:	push   edi
  402297:	xor    ebp,esi
  402299:	les    esi,FWORD PTR [ebx-0x51]
  40229c:	xchg   ecx,eax
  40229d:	in     eax,dx
  40229e:	fdiv   DWORD PTR [esi*8-0x6b39eb52]
  4022a5:	iret   
  4022a6:	cmp    edx,ecx
  4022a8:	cmp    eax,0x63a87820
  4022ad:	out    dx,al
  4022ae:	xchg   BYTE PTR [ebx-0x6c],dh
  4022b1:	push   esi
  4022b2:	xor    edi,esp
  4022b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022b5:	xor    DWORD PTR [edi-0xf],edi
  4022b8:	outs   dx,DWORD PTR ds:[esi]
  4022b9:	imul   ebp,DWORD PTR [ecx+0x3075c586],0xa24479fe
  4022c3:	push   ebp
  4022c4:	gs sbb eax,0x25885343
  4022ca:	mov    edi,0xfc902739
  4022cf:	call   0xd6bc:0x13281b13
  4022d6:	lahf   
  4022d7:	fisub  DWORD PTR ds:0x9aee4da7
  4022dd:	or     cl,BYTE PTR [edx+eiz*1+0x2a23adce]
  4022e4:	and    eax,0xdc3ad5f0
  4022e9:	iret   
  4022ea:	jb     0x402348
  4022ec:	jmp    0x4022e2
  4022ee:	hlt    
  4022ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022f0:	jae    0x4022e6
  4022f2:	push   es
  4022f3:	inc    eax
  4022f4:	aaa    
  4022f5:	iret   
  4022f6:	outs   dx,DWORD PTR ds:[esi]
  4022f7:	pop    ds
  4022f8:	mov    bl,0x12
  4022fa:	mov    al,ds:0xee2282c4
  4022ff:	pop    esp
  402300:	das    
  402301:	mov    edi,0xe957fe2
  402306:	pushf  
  402307:	push   cs
  402308:	xor    edi,DWORD PTR [eax+0xe374e89]
  40230e:	lods   eax,DWORD PTR ds:[esi]
  40230f:	push   ds
  402310:	rol    DWORD PTR [edi],cl
  402312:	jns    0x40237a
  402314:	daa    
  402315:	sub    BYTE PTR [eax+0x26],cl
  402318:	cmp    BYTE PTR [eax+0x41d63c36],ah
  40231e:	xlat   BYTE PTR ds:[ebx]
  40231f:	sub    al,0xe3
  402321:	inc    esp
  402322:	mov    dl,0xe1
  402324:	fwait
  402325:	dec    esp
  402326:	push   es
  402327:	(bad)  
  402328:	in     eax,0xee
  40232a:	mov    bl,0xaa
  40232c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40232d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40232e:	iret   
  40232f:	imul   esi,DWORD PTR [ebx+0x6fae00a6],0xffffffac
  402336:	sub    ecx,ebx
  402338:	imul   ecx,DWORD PTR [eax-0x2d],0x1f30192a
  40233f:	mov    eax,0x8650d17
  402344:	rol    BYTE PTR [ecx+ecx*8],0x7e
  402348:	mov    WORD PTR cs:[edx],?
  40234b:	jle    0x4023c5
  40234d:	cmp    al,0x21
  40234f:	xor    al,cl
  402351:	cwde   
  402352:	adc    edi,DWORD PTR ds:[edx+esi*2]
  402356:	ins    BYTE PTR es:[edi],dx
  402357:	ret    0xe8f4
  40235a:	xchg   esi,eax
  40235b:	ret    0x1c58
  40235e:	cmp    bh,bh
  402360:	push   0x1f
  402362:	inc    eax
  402363:	loopne 0x4023dd
  402365:	sub    al,0x95
  402367:	mov    sp,0xb305
  40236b:	xor    bh,BYTE PTR [ecx]
  40236d:	adc    ah,dh
  40236f:	push   ss
  402370:	call   0xdb3a:0x8de12b46
  402377:	and    DWORD PTR [ebx],ebp
  402379:	mov    eax,ds:0x18f311f3
  40237e:	sbb    DWORD PTR [eax],edi
  402380:	push   ebx
  402381:	lahf   
  402382:	mov    esi,DWORD PTR [edi+esi*1+0x59b1b09d]
  402389:	xchg   DWORD PTR [edi],esi
  40238b:	call   0x5badbbcf
  402390:	or     eax,DWORD PTR [edi]
  402392:	icebp  
  402393:	stos   DWORD PTR es:[edi],eax
  402394:	sbb    DWORD PTR ds:0x8ea52f4f,0xffffffa1
  40239b:	rol    dl,1
  40239d:	rcr    BYTE PTR [ebp+0x1b],cl
  4023a0:	inc    esp
  4023a1:	mov    cl,0x37
  4023a3:	les    esp,FWORD PTR [esi+eiz*8-0x7e5c5c27]
  4023aa:	inc    ecx
  4023ab:	loopne 0x402386
  4023ad:	cmp    DWORD PTR [edi],eax
  4023af:	in     al,0x8f
  4023b1:	mov    esi,ds
  4023b3:	pushf  
  4023b4:	(bad)  [esi-0x68e4fb45]
  4023ba:	arpl   bp,di
  4023bc:	dec    ecx
  4023bd:	dec    eax
  4023be:	lock jmp DWORD PTR [esi]
  4023c1:	arpl   WORD PTR [edi-0x56176636],ax
  4023c7:	scas   eax,DWORD PTR es:[edi]
  4023c8:	sub    DWORD PTR [edi-0x32be1962],edx
  4023ce:	push   esp
  4023cf:	jno    0x402383
  4023d1:	jns    0x4023df
  4023d3:	sahf   
  4023d4:	call   0xb4eb3e45
  4023d9:	fcom   DWORD PTR [edi-0x3a]
  4023dc:	mov    ah,0x31
  4023de:	popa   
  4023df:	xor    eax,0x73b98238
  4023e4:	and    edx,DWORD PTR [ebp-0x3c]
  4023e7:	ins    DWORD PTR es:[edi],dx
  4023e8:	xchg   ebp,eax
  4023e9:	fwait
  4023ea:	jns    0x402417
  4023ec:	xchg   ecx,eax
  4023ed:	jae    0x402377
  4023ef:	das    
  4023f0:	mov    eax,ds:0x19d5de19
  4023f5:	inc    esp
  4023f6:	mov    ah,0x49
  4023f8:	call   0x8b3f2da0
  4023fd:	mov    edx,0xd4529dcf
  402402:	in     eax,dx
  402403:	in     al,0xdf
  402405:	std    
  402406:	jl     0x4023dc
  402408:	je     0x4023cc
  40240a:	mov    al,ds:0x1cec8975
  40240f:	dec    esi
  402410:	sbb    DWORD PTR [eax-0x47],0x7d4c4fe9
  402417:	pop    edi
  402418:	pop    DWORD PTR [ebp+0x3d3d424f]
  40241e:	scas   eax,DWORD PTR es:[edi]
  40241f:	jb     0x402402
  402421:	test   BYTE PTR [edx+ecx*4-0xe],dl
  402425:	sbb    bl,BYTE PTR [ecx+0x3f8b26ae]
  40242b:	ja     0x40247d
  40242d:	pusha  
  40242e:	push   0xca65889e
  402433:	pop    es
  402434:	push   esp
  402435:	xor    bl,BYTE PTR [esp+ecx*4+0x18c6011c]
  40243c:	arpl   WORD PTR [ebx],cx
  40243e:	adc    eax,0xd2fbc1c5
  402443:	inc    esp
  402444:	call   0x2285:0x1a4ae055
  40244b:	cdq    
  40244c:	push   ebp
  40244d:	mov    ebp,0x5b6fe4ff
  402452:	adc    edx,DWORD PTR cs:[eax+0x7e550531]
  402459:	shr    bl,0xb8
  40245c:	mov    al,0x42
  40245e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40245f:	and    al,0x19
  402461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402462:	cs pop ebp
  402464:	pop    ebx
  402465:	mov    ch,0xec
  402467:	fcomp  DWORD PTR [edi+0x4e]
  40246a:	xor    BYTE PTR [edi],bh
  40246c:	xchg   edi,eax
  40246d:	daa    
  40246e:	ret    
  40246f:	push   ss
  402470:	mov    WORD PTR [edx-0x7371640b],es
  402476:	shl    DWORD PTR [edi+eax*8+0x60],0x74
  40247b:	jo     0x4024bd
  40247d:	sub    BYTE PTR [eax+0x8],ah
  402480:	mov    ah,0x8b
  402482:	mov    ecx,0x60c0aa1e
  402487:	into   
  402488:	fstp   QWORD PTR [esi+0x39]
  40248b:	lods   eax,DWORD PTR ds:[esi]
  40248c:	hlt    
  40248d:	int3   
  40248e:	mov    ds:0x529b5f7c,eax
  402493:	push   es
  402494:	adc    ecx,ecx
  402496:	cmp    dl,BYTE PTR [eax]
  402498:	js     0x4024d5
  40249a:	scas   al,BYTE PTR es:[edi]
  40249b:	jo     0x4024e7
  40249d:	add    ch,cl
  40249f:	pop    es
  4024a0:	cli    
  4024a1:	test   al,0x1f
  4024a3:	xchg   ah,al
  4024a5:	cld    
  4024a6:	sub    edx,DWORD PTR [esi+0x20d12b94]
  4024ac:	in     eax,0x21
  4024ae:	push   eax
  4024af:	in     eax,0x1a
  4024b1:	retf   0xf528
  4024b4:	pusha  
  4024b5:	push   eax
  4024b6:	sub    eax,ecx
  4024b8:	in     eax,0x94
  4024ba:	mov    al,ds:0xdef71c58
  4024bf:	jmp    0x402492
  4024c1:	fstp   DWORD PTR [ecx]
  4024c3:	push   ss
  4024c4:	adc    ah,dh
  4024c6:	es cld 
  4024c8:	mov    esi,0xcb4c8362
  4024cd:	aam    0xae
  4024cf:	out    0xbd,eax
  4024d1:	xor    DWORD PTR [ecx],0x2c
  4024d4:	push   cs
  4024d5:	out    0xd3,eax
  4024d7:	dec    ecx
  4024d8:	or     ch,al
  4024da:	adc    ah,ch
  4024dc:	or     dh,ah
  4024de:	xchg   edx,eax
  4024df:	mov    ecx,DWORD PTR [ebp+ebx*4-0x89b8bf5]
  4024e6:	shl    BYTE PTR [edx],1
  4024e8:	(bad)  
  4024e9:	xor    al,0x38
  4024eb:	inc    eax
  4024ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024ed:	loop   0x402532
  4024ef:	pop    ss
  4024f0:	dec    edx
  4024f1:	cdq    
  4024f2:	pop    es
  4024f3:	add    al,0xba
  4024f5:	je     0x402518
  4024f7:	push   ecx
  4024f8:	mov    bl,0x59
  4024fa:	add    dh,bh
  4024fc:	pop    edi
  4024fd:	in     al,0xa8
  4024ff:	out    dx,al
  402500:	jbe    0x40251b
  402502:	in     al,0xe3
  402504:	mov    ecx,0x930ab026
  402509:	jp     0x40256b
  40250b:	pop    ss
  40250c:	xlat   BYTE PTR ds:[ebx]
  40250d:	(bad)  
  40250f:	add    al,dl
  402511:	and    BYTE PTR [esi],dh
  402513:	shl    edx,cl
  402515:	xlat   BYTE PTR ds:[ebx]
  402516:	fidivr DWORD PTR [esi+eax*8]
  402519:	das    
  40251a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40251b:	pop    ebp
  40251c:	jmp    0x97df:0xc45e4bf
  402523:	aas    
  402524:	inc    ah
  402526:	leave  
  402527:	sbb    ah,BYTE PTR [edi+0x1d]
  40252a:	mov    gs,WORD PTR [ecx]
  40252c:	sbb    eax,0x6a4f0579
  402531:	and    eax,0x8eb67ed2
  402536:	sub    eax,0x26afa719
  40253b:	xchg   esp,eax
  40253c:	or     eax,0xfd85c761
  402541:	je     0x40254f
  402543:	call   0xd1bd714e
  402548:	mov    eax,ecx
  40254a:	xor    eax,0xc4d42b61
  40254f:	in     eax,dx
  402550:	gs loope 0x402522
  402553:	mov    WORD PTR [edi+0x26],es
  402556:	xor    al,0x12
  402558:	sub    BYTE PTR [ebx+ebp*4-0x5f36f5b0],0xd0
  402560:	sbb    eax,0x66345a66
  402565:	adc    bl,BYTE PTR [edi+0x1b172529]
  40256b:	jmp    0xd4f27476
  402570:	inc    edi
  402571:	dec    eax
  402572:	jnp    0x4025b9
  402574:	in     eax,dx
  402575:	sub    cl,0xb4
  402578:	fisubr WORD PTR [ecx+0x62a05901]
  40257e:	(bad)  
  40257f:	adc    BYTE PTR [edi-0x61e848fe],ah
  402585:	mov    edx,0x3a6c14db
  40258a:	sub    cl,BYTE PTR [ebp+0x1b66e7bc]
  402590:	aaa    
  402591:	stc    
  402592:	or     al,0x44
  402594:	xchg   ah,dl
  402596:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402597:	dec    edi
  402598:	push   0x5639d1df
  40259d:	xchg   ebx,eax
  40259e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40259f:	pop    eax
  4025a0:	dec    ecx
  4025a1:	inc    esi
  4025a2:	aas    
  4025a3:	ds iret 
  4025a5:	cmp    eax,0xc455e972
  4025aa:	adc    ebx,ecx
  4025ac:	fcom   QWORD PTR [eax+edx*4-0x7bef40c2]
  4025b3:	mov    ds:0xcd6f59b4,al
  4025b8:	push   esp
  4025b9:	cwde   
  4025ba:	fwait
  4025bb:	xchg   ecx,eax
  4025bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025be:	xchg   esi,eax
  4025bf:	or     bl,dh
  4025c1:	jb     0x402585
  4025c3:	push   es
  4025c4:	push   ds
  4025c5:	push   esi
  4025c6:	dec    esp
  4025c7:	lods   eax,DWORD PTR ds:[esi]
  4025c8:	lea    ecx,[edx]
  4025ca:	out    dx,al
  4025cb:	icebp  
  4025cc:	pushf  
  4025cd:	pop    es
  4025ce:	in     eax,dx
  4025cf:	fmul   QWORD PTR [ebp+0x67f32e4]
  4025d5:	pop    eax
  4025d6:	push   es
  4025d7:	mov    bl,al
  4025d9:	ins    BYTE PTR es:[edi],dx
  4025da:	or     eax,0xc9ca6d6d
  4025df:	and    eax,0x93bd967c
  4025e4:	push   0x9c46975a
  4025e9:	mov    esp,0x8f4af6a5
  4025ee:	frstor ds:0x6a617391
  4025f4:	pop    ecx
  4025f5:	outs   dx,BYTE PTR ds:[esi]
  4025f6:	mov    ecx,0x8344bf19
  4025fb:	pop    edx
  4025fc:	out    dx,al
  4025fd:	rol    ch,1
  4025ff:	inc    ecx
  402600:	outs   dx,DWORD PTR ds:[esi]
  402601:	mov    ds:0x97b3758c,al
  402606:	sti    
  402607:	(bad)  
  402608:	and    edx,DWORD PTR [edi+0x4ce06a47]
  40260e:	aad    0x17
  402610:	call   0xf5be:0x504cae32
  402617:	fld    DWORD PTR [esi+0x5f]
  40261a:	add    al,0x11
  40261c:	repz dec ebp
  40261e:	mov    al,ds:0x4d177be0
  402623:	stos   DWORD PTR es:[edi],eax
  402624:	dec    ebx
  402625:	mov    ds:0xa99e629,al
  40262a:	(bad)  
  40262b:	(bad)  
  40262c:	fidiv  WORD PTR [eax+0x5]
  40262f:	ss enter 0x5cf5,0xa8
  402634:	lea    edi,[bx+0x74]
  402638:	loope  0x402668
  40263a:	jp     0x402655
  40263c:	sbb    DWORD PTR [ebx],ebx
  40263e:	xchg   edx,eax
  40263f:	scas   al,BYTE PTR es:[edi]
  402640:	cmp    al,0x6d
  402642:	pop    eax
  402643:	shl    dl,0x22
  402646:	sub    al,0xb3
  402648:	push   ss
  402649:	inc    edi
  40264a:	xchg   ebx,eax
  40264b:	test   BYTE PTR [ebp-0x37b75fca],0x3d
  402652:	cwde   
  402653:	xor    bh,bl
  402655:	leave  
  402656:	inc    ebx
  402657:	arpl   WORD PTR [ebp+ebp*1+0x4e],di
  40265b:	jmp    0x4026c1
  40265d:	or     dh,BYTE PTR [ecx+0x7a10851c]
  402663:	push   0xffffffc1
  402665:	iret   
  402666:	and    BYTE PTR [eax],ah
  402668:	js     0x402624
  40266a:	jle    0x402652
  40266c:	jg     0x40261b
  40266e:	mov    al,ds:0x89c33b2d
  402673:	in     al,dx
  402674:	add    ch,BYTE PTR [ecx-0x61]
  402677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402678:	je     0x4026e6
  40267a:	sbb    ch,ah
  40267c:	mov    bh,0x4
  40267e:	jbe    0x402643
  402680:	push   eax
  402681:	lea    esp,[ebx+0x1]
  402684:	ret    0x946b
  402687:	test   al,0x36
  402689:	(bad)  
  40268b:	(bad)  
  40268c:	fisttp QWORD PTR [esi-0x18]
  40268f:	mov    gs,WORD PTR [ebx]
  402691:	xchg   BYTE PTR [edi-0x4546850e],dh
  402697:	xor    bh,BYTE PTR [ecx+eax*1+0x62]
  40269b:	test   al,0xd8
  40269d:	(bad)
  4026a0:	push   ebx
  4026a1:	sahf   
  4026a2:	dec    esi
  4026a3:	pop    ebx
  4026a4:	inc    ecx
  4026a5:	add    eax,0x5bca2cd1
  4026aa:	push   ds
  4026ab:	inc    ebx
  4026ac:	push   esp
  4026ad:	pop    ebp
  4026ae:	adc    eax,0xcd0203c4
  4026b3:	mov    dl,0xcc
  4026b5:	into   
  4026b6:	xchg   esp,eax
  4026b7:	fidivr WORD PTR [ebp-0x5f]
  4026ba:	and    al,0x7f
  4026bc:	icebp  
  4026bd:	pop    edi
  4026be:	outs   dx,BYTE PTR ds:[esi]
  4026bf:	cmp    bh,BYTE PTR [ebx-0x4127feb2]
  4026c5:	sti    
  4026c6:	push   ebx
  4026c7:	mov    esp,DWORD PTR ds:0x238e86c2
  4026cd:	add    DWORD PTR [ecx],esi
  4026cf:	ss cbw 
  4026d2:	pushf  
  4026d3:	cwde   
  4026d4:	stos   BYTE PTR es:[edi],al
  4026d5:	inc    esp
  4026d6:	das    
  4026d7:	jecxz  0x4026d0
  4026d9:	pushw  es
  4026db:	mov    ecx,0x3f990ad5
  4026e0:	mul    DWORD PTR [eax+edx*8+0x70c82531]
  4026e7:	sbb    al,0x1d
  4026e9:	ret    
  4026ea:	call   0xedc9:0x61bc08f2
  4026f1:	inc    eax
  4026f2:	aas    
  4026f3:	ret    
  4026f4:	push   eax
  4026f5:	mov    ds:0x9ecb2316,eax
  4026fa:	int    0xe0
  4026fc:	xor    ebp,edi
  4026fe:	mov    ds:0x3fd7b9b0,eax
  402703:	sahf   
  402704:	loopne 0x4026a2
  402706:	mov    ds:0x927df363,eax
  40270b:	cmp    al,0x50
  40270d:	repz aam 0x7b
  402710:	popa   
  402711:	adc    ch,al
  402713:	ret    0xf822
  402716:	mov    ebx,DWORD PTR [eax]
  402718:	sbb    al,0xc5
  40271a:	inc    ebx
  40271b:	jl     0x4026c6
  40271d:	mov    ds:0x69235906,al
  402722:	and    edi,DWORD PTR [edx]
  402724:	sub    ebx,DWORD PTR [ebp+0x61a6bba0]
  40272a:	(bad)  
  40272c:	pop    esp
  40272d:	xor    al,0x4a
  40272f:	xor    DWORD PTR [ebp+0x63],0x74
  402733:	sbb    bl,ch
  402735:	in     al,0xdf
  402737:	ja     0x4026be
  402739:	or     edx,DWORD PTR [ebx+0x3fd8ee14]
  40273f:	push   eax
  402740:	dec    ecx
  402741:	push   0xffffff9e
  402743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402744:	cmp    eax,0x4ed21a2c
  402749:	xchg   edx,eax
  40274a:	add    bh,BYTE PTR es:[ecx+0x6b]
  40274e:	mov    bl,0x43
  402750:	push   es
  402751:	sub    bl,al
  402753:	push   0x7e
  402755:	lods   eax,DWORD PTR ds:[esi]
  402756:	les    ebx,FWORD PTR [esi]
  402758:	mov    esp,0xa3b0132d
  40275d:	cwde   
  40275e:	call   0x502b631c
  402763:	push   cs
  402764:	cld    
  402765:	or     ebx,DWORD PTR [ebx]
  402767:	mov    esp,0x56e9df66
  40276c:	dec    eax
  40276d:	cli    
  40276e:	fsubr  DWORD PTR [eax]
  402770:	in     al,0x1f
  402772:	jne    0x4027da
  402774:	cmp    DWORD PTR [eax-0x38],0x5474d451
  40277b:	out    dx,al
  40277c:	addr16 popa 
  40277e:	sbb    ah,BYTE PTR [esi]
  402780:	fsubr  QWORD PTR [ecx]
  402782:	inc    ecx
  402783:	add    edi,DWORD PTR [eax-0x70557bfc]
  402789:	push   eax
  40278a:	test   al,0xe4
  40278c:	adc    BYTE PTR [esi-0x52],ch
  40278f:	and    dh,BYTE PTR [ecx+0x4c]
  402792:	loopne 0x4027d2
  402794:	mov    al,ds:0xa80983d7
  402799:	and    bl,0x75
  40279c:	icebp  
  40279d:	mov    bh,0x9a
  40279f:	sbb    al,BYTE PTR [edx]
  4027a1:	shr    BYTE PTR [edi+0x1f],0xb
  4027a5:	cmp    BYTE PTR [ebx+0x3ab6466a],0x6b
  4027ac:	aam    0x7a
  4027ae:	imul   ecx,edx,0xeab7827
  4027b4:	fnstcw WORD PTR [esi-0x79]
  4027b7:	fisub  DWORD PTR [edi+0x3cab0633]
  4027bd:	jge    0x40277b
  4027bf:	adc    BYTE PTR [eax+0x24f40fa5],dl
  4027c5:	and    BYTE PTR [ebx],bl
  4027c7:	pop    eax
  4027c8:	pop    ds
  4027c9:	ss xchg edi,eax
  4027cb:	sub    esp,DWORD PTR [ecx]
  4027cd:	or     ebp,DWORD PTR [eax+ecx*8]
  4027d0:	or     BYTE PTR [edx-0x1ac03b6d],bh
  4027d6:	mov    edx,0xd3d2bb1e
  4027db:	mov    eax,0x4b592d9
  4027e0:	inc    edx
  4027e1:	icebp  
  4027e2:	test   BYTE PTR [eax+0x26],cl
  4027e5:	xchg   edi,eax
  4027e6:	out    0x7a,eax
  4027e8:	sti    
  4027e9:	iret   
  4027ea:	fcmovb st,st(0)
  4027ec:	xchg   esi,eax
  4027ed:	xor    BYTE PTR [eax+0x4e],0x41
  4027f1:	xchg   edi,eax
  4027f2:	fcom   QWORD PTR [esi+esi*8+0x11]
  4027f6:	lds    ebp,FWORD PTR [ecx+0x5c]
  4027f9:	push   esp
  4027fa:	push   es
  4027fb:	scas   al,BYTE PTR es:[edi]
  4027fc:	call   0xf008:0x9a240eea
  402803:	mov    ah,0x67
  402805:	repnz rol BYTE PTR [ebx+0x1460463f],cl
  40280c:	fucomip st,st(2)
  40280e:	pop    ebp
  40280f:	imul   edx,DWORD PTR [ebp-0x7],0x7b071f71
  402816:	push   0xcd593c92
  40281b:	sbb    DWORD PTR [edi+0x5642ef1e],ebx
  402821:	xchg   BYTE PTR [edi-0x7f0476d2],cl
  402827:	xchg   esp,eax
  402828:	je     0x4027fa
  40282a:	cli    
  40282b:	pop    ds
  40282c:	push   cs
  40282d:	pushf  
  40282e:	mov    BYTE PTR [edi],dh
  402830:	jecxz  0x4028a7
  402832:	mov    al,BYTE PTR [edx+0x24a71eef]
  402838:	mov    ecx,0x4c231076
  40283d:	scas   eax,DWORD PTR es:[edi]
  40283e:	push   0xffffffe4
  402840:	std    
  402841:	adc    esp,0x7
  402844:	jnp    0x40281b
  402846:	sub    edx,DWORD PTR [edi]
  402848:	shl    DWORD PTR [eax+0x32],cl
  40284b:	xchg   ebp,eax
  40284c:	push   ebx
  40284d:	in     al,0xf9
  40284f:	popa   
  402850:	adc    al,0xf9
  402852:	out    0x89,eax
  402854:	push   ebx
  402855:	inc    edi
  402856:	cli    
  402857:	pop    ss
  402858:	or     BYTE PTR [ebp-0x29f6d48b],cl
  40285e:	fldcw  WORD PTR [ebx-0x22]
  402861:	fdiv   QWORD PTR [edx]
  402863:	aam    0x35
  402865:	rcr    bl,1
  402867:	mov    ebp,ebp
  402869:	cli    
  40286a:	jbe    0x40282f
  40286c:	enter  0x51a,0x80
  402870:	mov    WORD PTR [ebx+ecx*2+0x58],?
  402874:	push   esi
  402875:	xchg   edx,eax
  402876:	cmp    esi,DWORD PTR [esi]
  402878:	xor    al,0x9f
  40287a:	test   esp,0x1b2aca35
  402880:	repnz push ebp
  402882:	push   ebx
  402883:	cwde   
  402884:	not    BYTE PTR [edx]
  402886:	jnp    0x4028c9
  402888:	xor    al,0x7b
  40288a:	pop    es
  40288b:	inc    ecx
  40288c:	test   BYTE PTR [edx-0x7],bl
  40288f:	and    ecx,edx
  402891:	dec    ah
  402893:	js     0x40289b
  402895:	add    DWORD PTR ds:0x55abdeec,0xe2d32ada
  40289f:	push   ebp
  4028a0:	pop    esp
  4028a1:	mov    eax,ds:0xf77ff047
  4028a6:	xchg   edx,eax
  4028a7:	out    dx,eax
  4028a8:	jb     0x402853
  4028aa:	test   al,0xa1
  4028ac:	jmp    0x2b7fa2dc
  4028b1:	push   ds
  4028b2:	(bad)  
  4028b3:	mov    bh,0x3b
  4028b5:	test   DWORD PTR [edx+0x48e5c993],ebp
  4028bb:	cmp    dh,0x4b
  4028be:	add    DWORD PTR [ebx-0x3],0xd12639fa
  4028c5:	and    eax,0x7c147ffc
  4028ca:	jnp    0x4028d6
  4028cc:	add    edx,esp
  4028ce:	or     BYTE PTR [edi-0x5c],ah
  4028d1:	sub    eax,0x12ed37a4
  4028d6:	sub    al,0xbe
  4028d8:	mov    ds:0x2a622a1,al
  4028dd:	ret    0x13d8
  4028e0:	inc    ecx
  4028e1:	addr16 loop 0x4028f6
  4028e4:	ror    DWORD PTR [edi+esi*1+0x1b],0x86
  4028e9:	mov    al,0xa0
  4028eb:	stos   BYTE PTR es:[edi],al
  4028ec:	lea    esp,[ebp-0x65d07ae2]
  4028f2:	cs pop esp
  4028f4:	push   ecx
  4028f5:	mov    ah,0x6d
  4028f7:	mov    ebp,0x9578b6f4
  4028fc:	mov    edi,0xa6ea7e6f
  402901:	and    dl,bh
  402903:	popf   
  402904:	sub    DWORD PTR [ebp+0x5],ebx
  402907:	sub    al,0x2
  402909:	out    0x34,al
  40290b:	test   eax,0x2eb833a6
  402910:	push   ecx
  402911:	leave  
  402912:	and    BYTE PTR [esi+0x29dc9e8],0x42
  402919:	fmul   st(6),st
  40291b:	enter  0x8b6e,0xbb
  40291f:	inc    ebp
  402920:	mov    ebp,0x3cc90691
  402925:	daa    
  402926:	mov    cl,cl
  402928:	setp   BYTE PTR [edx-0x23]
  40292c:	aam    0x39
  40292e:	adc    eax,0xbdaf2c0a
  402933:	xor    BYTE PTR [esi-0x63],cl
  402936:	add    ebx,DWORD PTR [esi+0x6f58e76b]
  40293c:	dec    ebp
  40293d:	xor    eax,0xf270e750
  402942:	stos   DWORD PTR es:[edi],eax
  402943:	popf   
  402944:	(bad)  
  402945:	cmc    
  402946:	xor    al,0xfe
  402948:	dec    esi
  402949:	int    0xb0
  40294b:	stos   DWORD PTR es:[edi],eax
  40294c:	fisttp QWORD PTR [edi]
  40294e:	ins    BYTE PTR es:[edi],dx
  40294f:	rcr    BYTE PTR ds:0x28d00400,0x52
  402956:	cdq    
  402957:	ja     0x402923
  402959:	cmp    esi,DWORD PTR [eax+0x54]
  40295c:	popf   
  40295d:	ins    BYTE PTR es:[edi],dx
  40295e:	scas   eax,DWORD PTR es:[edi]
  40295f:	mov    ebx,0x5ea1a3b2
  402964:	fcomp  st(6)
  402966:	popa   
  402967:	add    DWORD PTR [eax-0x405ec0f7],eax
  40296d:	add    al,0x9c
  40296f:	fidiv  DWORD PTR [ebp+0x5b]
  402972:	arpl   WORD PTR [ebx],bx
  402974:	dec    di
  402976:	dec    edx
  402977:	test   al,0x26
  40297a:	jns    0x4029e6
  40297c:	lea    eax,[eax-0x31]
  40297f:	adc    eax,0x51b7a764
  402984:	or     al,0xff
  402986:	sub    eax,0x7bcf36e4
  40298b:	cmc    
  40298c:	xor    eax,0x971f6622
  402991:	push   edx
  402992:	loope  0x402934
  402994:	or     BYTE PTR [edx+edi*4-0x14f3ed5a],0x2b
  40299c:	lock test eax,0x33c3f58f
  4029a2:	dec    eax
  4029a3:	pop    ss
  4029a4:	dec    esi
  4029a5:	mov    dl,0xcf
  4029a7:	(bad)  
  4029a8:	lods   eax,DWORD PTR ds:[esi]
  4029a9:	dec    ebx
  4029aa:	pmulhuw mm3,QWORD PTR [edi+0x2a25ee37]
  4029b1:	(bad)  [ecx+ebx*4-0x3985f0a4]
  4029b8:	pop    edx
  4029b9:	dec    esi
  4029ba:	pop    esi
  4029bb:	lods   eax,DWORD PTR ds:[esi]
  4029bc:	aas    
  4029bd:	inc    esp
  4029be:	in     al,0xc2
  4029c0:	xchg   ebx,eax
  4029c1:	adc    eax,0xe980ab1b
  4029c6:	xchg   esp,eax
  4029c7:	pop    eax
  4029c9:	push   ss
  4029ca:	jge    0x402a0f
  4029cc:	sti    
  4029cd:	pop    esi
  4029ce:	pop    esi
  4029cf:	lods   al,BYTE PTR ds:[esi]
  4029d0:	sahf   
  4029d1:	jle    0x402961
  4029d3:	stos   DWORD PTR es:[edi],eax
  4029d4:	pop    ecx
  4029d5:	sbb    bh,BYTE PTR [edx]
  4029d7:	or     al,0x60
  4029d9:	pop    esi
  4029da:	loopne 0x402a22
  4029dc:	adc    BYTE PTR [esi+edi*1-0x2a],0xb
  4029e1:	inc    ebx
  4029e2:	xlat   BYTE PTR ds:[ebx]
  4029e3:	jae    0x402a63
  4029e5:	ja     0x40298c
  4029e7:	mov    ebx,0xe33990e6
  4029ec:	hlt    
  4029ed:	inc    eax
  4029ee:	in     al,dx
  4029ef:	scas   eax,DWORD PTR es:[edi]
  4029f0:	xor    al,0xa5
  4029f2:	pop    eax
  4029f3:	jmp    0x6390ae2
  4029f8:	push   ds
  4029f9:	sub    BYTE PTR [ebx],al
  4029fb:	pop    ds
  4029fc:	add    bh,BYTE PTR [edi-0x23a367e1]
  402a02:	xchg   ebp,eax
  402a03:	cwde   
  402a04:	iret   
  402a05:	jecxz  0x402990
  402a07:	sub    ebx,DWORD PTR [eax]
  402a09:	imul   BYTE PTR [eax]
  402a0b:	aam    0x81
  402a0d:	and    al,0xe0
  402a0f:	scas   eax,DWORD PTR es:[di]
  402a11:	(bad)  
  402a12:	xor    BYTE PTR [edx-0x2d],ch
  402a15:	(bad)  
  402a16:	push   esi
  402a17:	sub    bh,BYTE PTR [edi]
  402a19:	or     BYTE PTR [esi+0xe51d7d0],dh
  402a1f:	nop
  402a20:	mov    cl,BYTE PTR [eax-0x4e611c81]
  402a26:	or     ebx,eax
  402a28:	jns    0x402a4f
  402a2a:	mov    ds:0x78dda614,al
  402a2f:	xchg   DWORD PTR [ebx+0xc261fa6],edi
  402a35:	lock cmp BYTE PTR [eax+eiz*8],0x1b
  402a3a:	clc    
  402a3b:	sub    BYTE PTR [eax+0x1ebf526f],0x9a
  402a42:	adc    ebx,edi
  402a44:	(bad)  
  402a45:	(bad)  
  402a47:	les    edx,FWORD PTR [ebp-0x55]
  402a4a:	jns    0x402a64
  402a4c:	xor    eax,esp
  402a4e:	das    
  402a4f:	mov    esp,0x8002319b
  402a54:	xlat   BYTE PTR ds:[ebx]
  402a55:	xor    eax,0xa5b72755
  402a5a:	call   0x7bf0:0xea6a6e2b
  402a61:	cmp    ecx,DWORD PTR [ecx+0x51a15752]
  402a67:	test   eax,0x38103be
  402a6c:	jge    0x402ac6
  402a6e:	pusha  
  402a6f:	jb     0x402a9d
  402a71:	dec    esi
  402a72:	pop    ebp
  402a73:	data16 mov BYTE PTR [edi-0x73224548],dh
  402a7a:	in     al,dx
  402a7b:	lea    ebp,[edx+edi*4-0x35]
  402a7f:	and    al,0x2f
  402a81:	jecxz  0x402a70
  402a83:	in     al,0x2a
  402a85:	retf   
  402a86:	dec    ebx
  402a87:	ret    0x2bb0
  402a8a:	mov    esp,0x1000d956
  402a8f:	adc    eax,0x4dda1c87
  402a94:	xor    al,0x30
  402a96:	or     DWORD PTR [ebx],0xffffff91
  402a99:	mov    al,0x40
  402a9b:	or     bh,dh
  402a9d:	sar    BYTE PTR [ebp+0x70],1
  402aa0:	mov    ch,0x3d
  402aa2:	mov    cl,BYTE PTR [esi-0x3254c25]
  402aa8:	add    ah,BYTE PTR [esi-0x4a]
  402aab:	push   eax
  402aac:	mov    esi,0x3b81b7a9
  402ab1:	inc    edx
  402ab2:	mov    BYTE PTR [ecx+ebp*4-0x33b88601],ah
  402ab9:	or     DWORD PTR [edi-0x6e],ebx
  402abc:	or     dl,BYTE PTR [eax-0x20bc8396]
  402ac2:	push   edi
  402ac3:	mov    ebp,0xdf022522
  402ac8:	out    0xb1,al
  402aca:	push   eax
  402acb:	je     0x402a91
  402acd:	imul   BYTE PTR [edx-0x493161ab]
  402ad3:	ret    
  402ad4:	xlat   BYTE PTR ds:[ebx]
  402ad5:	dec    esp
  402ad6:	or     eax,ebx
  402ad8:	lock jp 0x402a8e
  402adb:	(bad)  [edi-0x45f2100f]
  402ae1:	inc    edx
  402ae2:	push   cs
  402ae3:	add    ch,BYTE PTR [edi+edi*1]
  402ae6:	sub    al,0xb6
  402ae8:	in     eax,dx
  402ae9:	adc    DWORD PTR [edi],esp
  402aeb:	mov    cl,0xca
  402aed:	mov    al,ds:0x3ae6b7a1
  402af2:	das    
  402af3:	retf   
  402af4:	jge    0x402b33
  402af6:	push   ss
  402af7:	adc    DWORD PTR [eax+ebx*8+0x1c8a07cd],eax
  402afe:	push   es
  402aff:	add    al,0x4
  402b01:	stos   DWORD PTR es:[edi],eax
  402b02:	sbb    BYTE PTR [esi-0x7f],bl
  402b05:	cmp    bl,dh
  402b07:	(bad)  
  402b08:	fwait
  402b09:	adc    eax,0xe8364f3e
  402b0e:	mov    dl,0x8e
  402b10:	in     al,0x32
  402b12:	xchg   esi,eax
  402b13:	pop    es
  402b14:	add    DWORD PTR [ecx+0x1a],0xffffffec
  402b18:	add    BYTE PTR [ebx+ebx*1-0x1aa825ca],al
  402b1f:	in     al,0xfe
  402b21:	lea    edx,ss:[ebx-0x19]
  402b25:	pop    edx
  402b26:	cdq    
  402b27:	shl    DWORD PTR [edx+0x373ea7c4],1
  402b2d:	sub    esp,ecx
  402b2f:	mov    ch,0x98
  402b31:	jmp    0x39adef46
  402b36:	dec    esi
  402b37:	adc    edx,DWORD PTR es:[ebx-0x412f0078]
  402b3e:	jmp    0xbcb03f3b
  402b43:	test   DWORD PTR ds:0xb75a46b8,edi
  402b49:	cld    
  402b4a:	(bad)  
  402b4b:	mov    eax,0x8c8d32c2
  402b50:	cmova  ebx,DWORD PTR [edx+ebp*8-0x9]
  402b55:	std    
  402b56:	or     eax,0xfceb9480
  402b5b:	add    ebx,DWORD PTR [ebx+ebx*8]
  402b5e:	popa   
  402b5f:	xor    ah,bl
  402b61:	leave  
  402b62:	pop    ebx
  402b63:	mov    ds:0x76122a0c,eax
  402b68:	lea    edi,[ecx]
  402b6a:	mov    ds:0x4d96961f,eax
  402b6f:	or     al,0x30
  402b71:	mov    dh,0xf2
  402b73:	test   al,0xe6
  402b75:	jb     0x402ba6
  402b77:	pushf  
  402b78:	mov    esi,0xf2030568
  402b7d:	cmp    eax,0xde65c8d2
  402b82:	add    BYTE PTR [ebx-0x4],dl
  402b85:	mov    esi,0xfa643c
  402b8a:	add    dh,BYTE PTR [eax+eiz*2-0xf]
  402b8e:	dec    esp
  402b8f:	pop    ebp
  402b90:	adc    ebx,ebx
  402b92:	shr    ch,0x5a
  402b95:	cmp    eax,0x963569da
  402b9a:	scas   al,BYTE PTR es:[edi]
  402b9b:	stos   BYTE PTR es:[edi],al
  402b9c:	(bad)  
  402b9d:	fstp   QWORD PTR [ebp-0x7b7b01e1]
  402ba3:	cwde   
  402ba4:	or     ch,BYTE PTR [edi+0x55]
  402ba7:	pop    ebx
  402ba8:	push   ss
  402ba9:	aam    0x6b
  402bab:	or     bl,ch
  402bad:	or     eax,0xdfbb0e2a
  402bb2:	mov    esi,0xd5b5affc
  402bb7:	cmc    
  402bb8:	mov    DWORD PTR [eax+0x31],esp
  402bbb:	push   ebx
  402bbc:	mov    ch,0x9f
  402bbe:	push   0xb7558e0
  402bc3:	jo     0x402c1d
  402bc5:	adc    esi,0xfffffffc
  402bc8:	popf   
  402bc9:	std    
  402bca:	xchg   ecx,eax
  402bcb:	adc    eax,0x54adeb01
  402bd0:	sbb    BYTE PTR [edx-0x7c],bl
  402bd3:	pusha  
  402bd4:	jno    0x402bd3
  402bd6:	mov    ebx,ecx
  402bd8:	add    ebp,DWORD PTR [edi]
  402bda:	add    al,0xcd
  402bdc:	cwde   
  402bdd:	inc    ecx
  402bde:	jge    0x402bef
  402be0:	fldcw  WORD PTR [ebp-0x7c]
  402be3:	sbb    ecx,DWORD PTR [edx+0x2d]
  402be6:	mov    al,0x55
  402be8:	pop    edx
  402be9:	out    dx,eax
  402bea:	sbb    edx,ecx
  402bec:	dec    eax
  402bed:	pop    ds
  402bee:	add    al,0x23
  402bf0:	sub    ch,ah
  402bf2:	shl    BYTE PTR [eax],0xa8
  402bf5:	mov    ebp,0xd1c1348d
  402bfa:	and    ah,BYTE PTR ds:0x54cb007d
  402c00:	call   0xaa96:0x2d156d6a
  402c07:	xchg   edi,eax
  402c08:	(bad)  
  402c09:	les    edx,FWORD PTR [eax-0x1f]
  402c0c:	mov    edx,0xc65df1e4
  402c11:	push   ebp
  402c12:	(bad)  
  402c13:	jb     0x402c61
  402c15:	fdivr  QWORD PTR [ecx+0x2c]
  402c18:	xchg   esp,eax
  402c19:	test   DWORD PTR [ebp-0x72105c5b],esi
  402c1f:	rcl    dl,0x74
  402c22:	out    dx,eax
  402c23:	add    al,0x7e
  402c25:	inc    ebx
  402c26:	ss retf 
  402c28:	mov    edx,0x40b9ad52
  402c2d:	fsub   QWORD PTR [edx+0x2]
  402c30:	xchg   edi,eax
  402c31:	xor    eax,0xff77fca
  402c36:	push   ds
  402c37:	jmp    0x92c3:0x7df876d3
  402c3e:	mov    ebp,0xa83428ea
  402c43:	repz mov ebx,0x3f5e610b
  402c49:	push   edi
  402c4a:	retf   
  402c4b:	mov    eax,ds:0x817a1be
  402c50:	test   al,0x1
  402c52:	scas   al,BYTE PTR es:[edi]
  402c53:	cmc    
  402c54:	and    al,0xa2
  402c56:	mov    ebp,0x89201e27
  402c5b:	arpl   WORD PTR [ebx],bx
  402c5d:	jno    0x402c4d
  402c5f:	(bad)  
  402c60:	jle    0x402be5
  402c62:	sbb    DWORD PTR [ebp+0x5],edx
  402c65:	push   esp
  402c66:	fisttp DWORD PTR [edi-0x231b4bc]
  402c6c:	inc    eax
  402c6d:	out    dx,al
  402c6e:	das    
  402c6f:	arpl   dx,ax
  402c71:	push   edi
  402c72:	jp     0x402c0d
  402c74:	(bad)  
  402c75:	mov    esi,0x419a892f
  402c7a:	xor    edx,ebx
  402c7c:	rcr    BYTE PTR [ecx+0x13fc101],0xac
  402c83:	(bad)  
  402c84:	loop   0x402cda
  402c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c87:	pop    ebp
  402c88:	mov    cl,0xb2
  402c8a:	xchg   ebp,eax
  402c8b:	mov    edx,ebp
  402c8d:	sahf   
  402c8e:	(bad)  
  402c8f:	mov    dl,0x11
  402c91:	mov    DWORD PTR [edi],edx
  402c93:	in     eax,0xf6
  402c95:	mov    ecx,0xc5f09a1c
  402c9a:	fs stos DWORD PTR es:[edi],eax
  402c9c:	or     bh,ch
  402c9e:	mov    fs,WORD PTR [ecx+0x8]
  402ca1:	into   
  402ca2:	into   
  402ca3:	inc    ebx
  402ca4:	cmp    al,0x9c
  402ca6:	cmc    
  402ca7:	cli    
  402ca8:	enter  0x9b76,0x14
  402cac:	jle    0x402cb2
  402cae:	lahf   
  402caf:	leave  
  402cb0:	pop    es
  402cb1:	cmp    bl,dh
  402cb3:	xor    esp,DWORD PTR [eax+0x39]
  402cb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cb7:	(bad)  
  402cb8:	out    0x70,eax
  402cba:	cli    
  402cbb:	xlat   BYTE PTR ds:[ebx]
  402cbc:	inc    esi
  402cbd:	jp     0x402c44
  402cbf:	cmp    cl,BYTE PTR [ecx-0x1ae2ca90]
  402cc5:	adc    DWORD PTR [edi+0x4f4d96c4],ecx
  402ccb:	mov    ebp,0xd3ed4a74
  402cd0:	pop    es
  402cd1:	out    0x78,eax
  402cd3:	xchg   esp,eax
  402cd4:	sub    DWORD PTR [edi+0x14],eax
  402cd7:	aas    
  402cd8:	sbb    edx,DWORD PTR [edx-0x22d0cbb1]
  402cde:	adc    eax,0x7bd2866a
  402ce3:	call   0x86dc:0x188f2fcf
  402cea:	pop    edx
  402ceb:	and    esp,esp
  402ced:	push   edi
  402cee:	arpl   WORD PTR [edx-0x5a],di
  402cf1:	icebp  
  402cf2:	daa    
  402cf3:	mov    dl,0x27
  402cf5:	mov    BYTE PTR [eax],ch
  402cf7:	js     0x402d24
  402cf9:	sub    ebp,edx
  402cfb:	arpl   bx,bx
  402cfd:	jae    0x402d21
  402cff:	cs jbe 0x402d6b
  402d02:	push   edi
  402d03:	call   FWORD PTR [ebx]
  402d05:	jns    0x402d27
  402d07:	call   0xcacef2b4
  402d0c:	mov    ds:0x21c7ab92,eax
  402d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d12:	gs mov ebx,0x11809e19
  402d18:	sbb    ecx,DWORD PTR [edi]
  402d1a:	jmp    0x9af0:0x1c3f967d
  402d21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d22:	and    al,BYTE PTR [edx-0x355afa91]
  402d28:	adc    DWORD PTR [edx],ebx
  402d2a:	cmp    al,BYTE PTR [edx-0x9025a99]
  402d30:	ss into 
  402d32:	jg     0x402d42
  402d34:	mov    esi,0x548fed62
  402d39:	dec    ebx
  402d3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d3b:	(bad)  [ebx-0x1bb77da]
  402d41:	jbe    0x402d47
  402d43:	sub    DWORD PTR [edi+0x6e],ebp
  402d46:	sub    DWORD PTR [edi+0x30],edi
  402d49:	pop    eax
  402d4a:	cdq    
  402d4b:	fisubr DWORD PTR [eax+0x77c8c7a7]
  402d51:	data16 fs hlt 
  402d54:	lods   eax,DWORD PTR ds:[esi]
  402d55:	jmp    0x402da3
  402d57:	aaa    
  402d58:	add    ah,bh
  402d5a:	pusha  
  402d5b:	iret   
  402d5c:	sbb    DWORD PTR [ebx],eax
  402d5e:	cmp    BYTE PTR [ebx],cl
  402d60:	adc    al,0xe2
  402d62:	cmp    DWORD PTR [eax],0xa87e780c
  402d68:	cmp    ecx,DWORD PTR [ecx+0x4e30f797]
  402d6e:	xchg   BYTE PTR [edx+0x51045694],ch
  402d74:	adc    dl,BYTE PTR [esi]
  402d76:	mov    eax,ds:0x8c37942f
  402d7b:	nop
  402d7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d7d:	inc    edi
  402d7e:	jge    0x402dea
  402d80:	sub    eax,DWORD PTR [eax-0x6a]
  402d83:	(bad)  [ecx+0x7b29a7e5]
  402d89:	inc    ebp
  402d8a:	outs   dx,DWORD PTR ds:[esi]
  402d8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d8c:	ret    
  402d8d:	repnz xchg ebp,eax
  402d8f:	jb     0x402d57
  402d91:	push   es
  402d92:	adc    DWORD PTR [edi+0x63],esp
  402d95:	mov    dh,0xa3
  402d97:	mov    eax,ds:0x2e7561a1
  402d9c:	push   ebp
  402d9d:	in     eax,dx
  402d9e:	mov    ecx,0x5fde0662
  402da3:	mov    BYTE PTR [ecx+0x522d6276],ch
  402da9:	and    BYTE PTR [esp+esi*4-0x36],bh
  402dad:	mov    ds:0x80c7ae12,eax
  402db2:	mov    BYTE PTR [esp+esi*8],al
  402db5:	mov    ebp,0x36b789e6
  402dba:	lea    ebx,[esi+0xf]
  402dbd:	jmp    0x5bd9caef
  402dc2:	sbb    dh,bl
  402dc4:	adc    ch,BYTE PTR ds:0x6a8e7a4d
  402dca:	or     DWORD PTR [ecx+eax*8+0x347576fb],esi
  402dd1:	out    dx,al
  402dd2:	jbe    0x402db6
  402dd4:	push   ss
  402dd5:	and    DWORD PTR [ecx+0x46],edx
  402dd8:	pop    es
  402dd9:	rcr    BYTE PTR [eax-0x349f733a],cl
  402ddf:	inc    esi
  402de0:	dec    ebp
  402de1:	jle    0x402e5a
  402de3:	push   edi
  402de4:	jle    0x402dd1
  402de6:	pop    ss
  402de7:	js     0x402e35
  402de9:	pop    esp
  402dea:	test   eax,0x9a89e2de
  402def:	loopne 0x402db5
  402df1:	out    0x34,eax
  402df3:	arpl   WORD PTR [edx+ebx*1-0x2a47d897],ax
  402dfa:	xchg   DWORD PTR [edi+0x41],edi
  402dfd:	lahf   
  402dfe:	repnz (bad) gs:[ecx-0xe0af493]
  402e06:	and    BYTE PTR [ebx-0x4606e0f1],dl
  402e0c:	sbb    eax,0x82059972
  402e11:	cmc    
  402e12:	xchg   ebx,eax
  402e13:	fimul  DWORD PTR [ecx]
  402e15:	call   0x13ab:0xc3ab15c0
  402e1c:	fnstenv [esi-0x34158bc3]
  402e22:	sub    DWORD PTR [ebx+0x686318da],ebx
  402e28:	iret   
  402e29:	xchg   esi,eax
  402e2a:	fld    TBYTE PTR [edx-0x58953512]
  402e30:	sbb    eax,0xeb64b000
  402e35:	push   esp
  402e36:	mov    edi,esi
  402e38:	lahf   
  402e39:	sbb    BYTE PTR ds:[ebp+0x0],al
  402e3d:	adc    eax,0xcdd32b3
  402e42:	jb     0x402e18
  402e44:	imul   ebx,esp,0x2b8613cd
  402e4a:	push   ecx
  402e4b:	push   ebx
  402e4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e4d:	or     BYTE PTR ds:0xdda60b5b,bl
  402e53:	iret   
  402e54:	jo     0x402ea2
  402e56:	addr16 retf 0x3d99
  402e5a:	cmp    BYTE PTR [esi+0x49],0x30
  402e5e:	jo     0x402e64
  402e60:	scas   al,BYTE PTR es:[edi]
  402e61:	int3   
  402e62:	dec    esp
  402e63:	int    0x90
  402e65:	ret    
  402e66:	dec    esp
  402e67:	in     eax,0xb4
  402e69:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e6a:	jg     0x402eb7
  402e6c:	ds (bad) 
  402e6f:	dec    esp
  402e70:	(bad)  
  402e71:	mov    BYTE PTR ds:0xafbd027f,al
  402e77:	outs   dx,BYTE PTR ds:[esi]
  402e78:	pop    ss
  402e79:	jge    0x402e10
  402e7b:	aaa    
  402e7c:	out    0x48,eax
  402e7e:	or     BYTE PTR [ebx+0xe],cl
  402e81:	(bad)  
  402e82:	dec    eax
  402e83:	sub    eax,0xf884b2c2
  402e88:	mov    al,0xa0
  402e8a:	bound  esi,QWORD PTR [ebx+eiz*4+0x15]
  402e8e:	pop    ebp
  402e8f:	and    DWORD PTR [eax],esi
  402e91:	adc    dh,BYTE PTR ds:0x9f6dcee4
  402e97:	xchg   ebx,eax
  402e98:	sbb    ah,BYTE PTR [eax-0x575cc43b]
  402e9e:	push   0x7520de00
  402ea3:	cmp    al,0xc1
  402ea5:	ficomp DWORD PTR [bx+si]
  402ea8:	and    DWORD PTR ds:0x10212546,esp
  402eae:	jns    0x402ed4
  402eb0:	mov    esi,0x7abe7b77
  402eb5:	outs   dx,BYTE PTR ds:[esi]
  402eb6:	cs inc edi
  402eb8:	pop    edx
  402eb9:	pop    esi
  402eba:	fwait
  402ebb:	mov    ah,0x64
  402ebd:	out    0xcb,al
  402ebf:	push   0x5d
  402ec1:	mov    DWORD PTR [ebx+0x11],edx
  402ec4:	test   bl,dh
  402ec6:	sub    BYTE PTR [eax],dh
  402ec8:	mov    ebp,DWORD PTR [edi-0x59]
  402ecb:	xor    dl,cl
  402ecd:	xchg   edx,eax
  402ece:	fwait
  402ecf:	adc    al,0x46
  402ed1:	add    esp,esi
  402ed3:	leave  
  402ed4:	test   eax,0x282e5be8
  402ed9:	and    ebx,DWORD PTR [eax+0x16f62cfd]
  402edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee0:	inc    esp
  402ee1:	mov    cl,0xb0
  402ee3:	call   edx
  402ee5:	arpl   WORD PTR [esi-0x42],ax
  402ee8:	sbb    dh,BYTE PTR [eax]
  402eea:	fcomp  QWORD PTR [edi]
  402eec:	sbb    eax,0x2d515d26
  402ef1:	stc    
  402ef2:	ins    DWORD PTR es:[edi],dx
  402ef3:	or     dh,BYTE PTR [esi+0x772cce71]
  402ef9:	cwde   
  402efa:	out    0xf9,al
  402efc:	test   eax,0x7840dddd
  402f01:	cmp    esp,DWORD PTR [ebp-0x17]
  402f04:	xor    eax,0xaa9e8aff
  402f09:	leave  
  402f0a:	inc    ebx
  402f0b:	clc    
  402f0c:	stos   DWORD PTR es:[edi],eax
  402f0d:	xchg   esi,eax
  402f0e:	add    DWORD PTR [eax-0x67c4ec15],ebx
  402f14:	or     DWORD PTR [ebx],0xffffffaa
  402f17:	test   al,0x8f
  402f19:	or     BYTE PTR [edi],0x80
  402f1c:	rol    ecx,0x5c
  402f1f:	iret   
  402f20:	xchg   DWORD PTR [edx-0x6ad4d875],eax
  402f26:	into   
  402f27:	retw   
  402f29:	mov    al,0x47
  402f2b:	pop    edi
  402f2c:	in     eax,0x6d
  402f2e:	mov    bl,ch
  402f30:	mov    eax,ds:0xcd37a048
  402f35:	adc    esp,DWORD PTR [edx-0x471441b1]
  402f3b:	shr    bl,cl
  402f3d:	mov    edi,0x3b210bd4
  402f42:	cmp    DWORD PTR [esi-0x67],ebx
  402f45:	xor    BYTE PTR [eax-0x4965ed37],ch
  402f4b:	lock inc esp
  402f4d:	sub    al,0xf2
  402f4f:	pop    edx
  402f50:	jmp    0x9149ddee
  402f55:	out    0x36,al
  402f57:	mov    esp,ebp
  402f59:	jne    0x402efe
  402f5b:	ins    DWORD PTR es:[edi],dx
  402f5c:	jp     0x402f90
  402f5e:	cmp    ecx,DWORD PTR [esi]
  402f60:	outs   dx,BYTE PTR ds:[esi]
  402f61:	aaa    
  402f62:	pop    esi
  402f63:	movq   mm2,mm1
  402f66:	retf   
  402f67:	push   edx
  402f68:	stos   BYTE PTR es:[edi],al
  402f69:	pusha  
  402f6a:	aaa    
  402f6b:	inc    ecx
  402f6c:	jmp    0x71a9caea
  402f71:	push   ebx
  402f72:	lock xor eax,0xf600694a
  402f78:	push   ecx
  402f79:	adc    esi,esp
  402f7b:	fstp   TBYTE PTR [edi+ecx*2-0x55]
  402f7f:	ret    0xa98
  402f82:	cmp    al,0x6
  402f84:	sbb    cl,0x74
  402f87:	add    dl,dl
  402f89:	cmp    edi,DWORD PTR [esi-0x18]
  402f8c:	xchg   ebx,eax
  402f8d:	sub    ch,BYTE PTR [esi+0x68daf3c7]
  402f93:	xor    edx,DWORD PTR [edx]
  402f95:	dec    ebp
  402f96:	retf   
  402f97:	or     al,0x28
  402f99:	int    0xf8
  402f9b:	inc    edi
  402f9c:	pop    ebx
  402f9d:	mov    dh,0xba
  402f9f:	lds    bp,DWORD PTR [edx+0x7d7f6d1a]
  402fa6:	lods   al,BYTE PTR es:[esi]
  402fa8:	popf   
  402fa9:	sub    eax,ecx
  402fab:	arpl   WORD PTR [edi+ecx*1+0x464a12f3],si
  402fb2:	jne    0x403019
  402fb4:	inc    ebp
  402fb5:	ds sbb eax,0xc299987
  402fbb:	xchg   edx,eax
  402fbc:	add    al,0x51
  402fbe:	xchg   edx,eax
  402fbf:	jns    0x403027
  402fc1:	mov    ecx,DWORD PTR [ecx+esi*1-0x3f]
  402fc5:	out    0xfc,al
  402fc7:	ret    
  402fc8:	pop    eax
  402fc9:	ins    DWORD PTR es:[edi],dx
  402fca:	std    
  402fcb:	pop    es
  402fcc:	mov    ah,0xaa
  402fce:	call   0xb1570a6b
  402fd3:	out    0x4a,eax
  402fd5:	enter  0x1f75,0x4f
  402fd9:	xchg   ebp,eax
  402fda:	pop    esi
  402fdb:	sub    edx,edx
  402fdd:	push   ecx
  402fde:	adc    eax,ebp
  402fe0:	imul   ecx,DWORD PTR [eax-0x5101ead2],0x0
  402fe7:	ret    0x48dd
  402fea:	inc    ebp
  402feb:	fild   QWORD PTR [ecx]
  402fed:	jp     0x402fc4
  402fef:	jnp    0x403042
  402ff1:	xor    eax,0x20f0a28c
  402ff6:	scas   eax,DWORD PTR es:[edi]
  402ff7:	nop
  402ff8:	sahf   
  402ff9:	pop    ss
  402ffa:	xor    DWORD PTR [eax-0x14],esi
  402ffd:	rcl    BYTE PTR [edi+0x103f4be8],0xe9
  403004:	fdivr  st,st(5)
  403006:	pop    esi
  403007:	and    esp,edx
  403009:	or     al,0x7
  40300b:	rcl    DWORD PTR [ebp-0x1688751d],1
  403011:	nop
  403012:	fldcw  WORD PTR [ecx-0x6d]
  403015:	push   ds
  403016:	mov    esp,0x3551cbea
  40301b:	leave  
  40301c:	jb     0x402fa9
  40301e:	xor    ebx,DWORD PTR [eax+0x3e]
  403021:	lods   eax,DWORD PTR ds:[esi]
  403022:	xor    al,0x94
  403024:	xchg   cl,dl
  403026:	jmp    0x10c3:0x8d4cc9a7
  40302d:	js     0x403053
  40302f:	push   edi
  403030:	popa   
  403031:	(bad)  [edi+0x38326c6]
  403037:	pop    ecx
  403038:	and    dl,BYTE PTR [edi]
  40303a:	sbb    al,0xe
  40303c:	cmp    edi,edi
  40303e:	rol    BYTE PTR [edi],cl
  403040:	outs   dx,DWORD PTR ds:[esi]
  403041:	xchg   edi,eax
  403042:	scas   al,BYTE PTR es:[edi]
  403043:	fwait
  403044:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403045:	or     al,ch
  403047:	hlt    
  403048:	adc    BYTE PTR [ecx-0x4584915c],ch
  40304e:	xchg   ecx,eax
  40304f:	add    edi,esi
  403051:	lea    ebx,[edx-0x311d2fe5]
  403057:	inc    edi
  403058:	fist   DWORD PTR [eax-0x5301995d]
  40305e:	add    dh,cl
  403060:	jbe    0x4030d7
  403062:	sti    
  403063:	adc    dh,bh
  403065:	shl    BYTE PTR [ebx-0x79],cl
  403068:	inc    edi
  403069:	loopne 0x402ffb
  40306b:	sub    dl,BYTE PTR [eax-0x6a62d944]
  403071:	jp     0x40309b
  403073:	cmp    eax,DWORD PTR [edx+0x2658e6d]
  403079:	adc    eax,0x5ce88500
  40307e:	cmc    
  40307f:	add    DWORD PTR [esi+0x4d1604f2],ecx
  403085:	cmp    eax,0xcb5afe15
  40308a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40308b:	sbb    eax,0x2978da8d
  403090:	ds ret 
  403092:	ja     0x4030da
  403094:	mov    ebp,0xb33ee08a
  403099:	in     eax,dx
  40309a:	cmp    BYTE PTR [eax+0x67292000],al
  4030a0:	sub    al,0x1a
  4030a2:	mov    bl,0x7e
  4030a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030a5:	xlat   BYTE PTR ds:[ebx]
  4030a6:	pop    ds
  4030a7:	mov    BYTE PTR [edi-0x46f00aee],bh
  4030ad:	mov    ebp,0x2cc9a28e
  4030b2:	xchg   ebp,eax
  4030b3:	mov    cl,0xbe
  4030b5:	pop    ebp
  4030b6:	jo     0x403071
  4030b8:	das    
  4030b9:	jo     0x403132
  4030bb:	adc    DWORD PTR [esi-0x2d5515b],esp
  4030c1:	pop    ss
  4030c2:	sub    al,0x2
  4030c4:	adc    DWORD PTR [edx+edi*8+0x30],ecx
  4030c8:	dec    edx
  4030c9:	(bad)  
  4030ca:	jmp    0x3da053c0
  4030cf:	mov    ds:0x4f0e9cdb,eax
  4030d4:	out    0xb5,al
  4030d6:	shr    DWORD PTR [edx-0x5a],cl
  4030d9:	out    0xf6,al
  4030db:	jmp    0x403096
  4030dd:	ror    DWORD PTR [ebx-0x604e138],cl
  4030e3:	xchg   ebp,eax
  4030e4:	push   eax
  4030e5:	repnz xor al,0xd7
  4030e8:	xchg   edx,eax
  4030e9:	sbb    al,0xb7
  4030eb:	push   edx
  4030ec:	shl    WORD PTR [edi],cl
  4030ef:	cld    
  4030f0:	pop    ebp
  4030f1:	shl    BYTE PTR [edx],1
  4030f3:	outs   dx,BYTE PTR ds:[esi]
  4030f4:	jbe    0x403173
  4030f6:	shr    BYTE PTR [eax+ebx*8-0x40],cl
  4030fa:	dec    esi
  4030fb:	sti    
  4030fc:	or     al,0x13
  4030fe:	mov    eax,0x81c86e9f
  403103:	mov    ebx,0x3c0fbc5f
  403108:	mov    BYTE PTR [ecx+0x44],ch
  40310b:	aaa    
  40310c:	ret    0xa7ce
  40310f:	pop    ds
  403110:	adc    dh,0x23
  403113:	pop    es
  403114:	jecxz  0x403181
  403116:	mov    edi,0xe904c254
  40311b:	lds    ebx,FWORD PTR [ecx-0x12]
  40311e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40311f:	pop    edi
  403120:	call   0xdd529bc7
  403125:	hlt    
  403126:	sar    bl,0x6e
  403129:	xor    al,0xad
  40312b:	sub    edx,ecx
  40312d:	test   eax,0xac40d78c
  403132:	cmp    al,0x9
  403134:	lea    ebx,[edx-0x12]
  403137:	cdq    
  403138:	mov    ebp,0x4c70b5d0
  40313d:	pop    es
  40313e:	mov    ds:0x7194d69b,eax
  403143:	ret    
  403144:	das    
  403145:	cli    
  403146:	push   ds
  403147:	les    esp,FWORD PTR [eax]
  403149:	das    
  40314a:	xchg   ebx,eax
  40314b:	in     al,dx
  40314c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40314d:	push   edx
  40314e:	add    DWORD PTR [ebx+0x30],edx
  403151:	xchg   ebp,eax
  403152:	pop    ds
  403153:	mov    al,ds:0xbb6033fb
  403158:	daa    
  403159:	mov    ds:0x84d0cc8c,eax
  40315e:	loopne 0x403105
  403160:	xor    BYTE PTR [edx+0x39739d3d],bh
  403166:	cdq    
  403167:	mov    edx,0xbe208327
  40316c:	mov    ds:0x6f1b9017,al
  403171:	adc    eax,0xfcdbe742
  403176:	lea    esi,[edx-0xc]
  403179:	scas   eax,DWORD PTR es:[edi]
  40317a:	fisttp QWORD PTR [esp+eiz*4+0x65073c7f]
  403181:	add    al,0x27
  403183:	aas    
  403184:	pop    ebp
  403185:	sahf   
  403186:	test   al,0x98
  403188:	aaa    
  403189:	shl    BYTE PTR [ebx+0x5c],0xf8
  40318d:	aam    0x5e
  40318f:	out    dx,eax
  403190:	jne    0x40315b
  403192:	stc    
  403193:	shl    BYTE PTR [esi],0x4d
  403196:	bound  ecx,QWORD PTR [edi]
  403198:	stc    
  403199:	jmp    0x40315e
  40319b:	retf   0xd972
  40319e:	lods   eax,DWORD PTR ds:[esi]
  40319f:	shl    DWORD PTR ds:0x23dadbeb,1
  4031a5:	call   0x658ae1f0
  4031aa:	or     BYTE PTR [ebp+ecx*1-0x39],dh
  4031ae:	(bad)  
  4031b0:	sub    al,0xf9
  4031b2:	leave  
  4031b3:	mov    dl,0xaa
  4031b5:	mov    ah,0xea
  4031b7:	cmp    ah,cl
  4031b9:	pop    esi
  4031ba:	(bad)  
  4031bb:	pop    ebx
  4031bc:	jge    0x4031ff
  4031be:	daa    
  4031bf:	push   0x20
  4031c1:	stos   BYTE PTR es:[edi],al
  4031c2:	jmp    0x3fbccead
  4031c7:	fwait
  4031c8:	or     BYTE PTR [ecx-0x7a7d0796],al
  4031ce:	and    bh,BYTE PTR [edi+0x2b45a0f7]
  4031d4:	push   edi
  4031d5:	adc    BYTE PTR [esi],ah
  4031d7:	sbb    esp,DWORD PTR [ecx-0x5a]
  4031da:	jns    0x4031b3
  4031dc:	mov    ds:0x78515309,eax
  4031e1:	stc    
  4031e2:	sub    DWORD PTR [ebp-0x73],edx
  4031e5:	sub    eax,0x338ee767
  4031ea:	ins    DWORD PTR es:[edi],dx
  4031eb:	sbb    BYTE PTR [eax+0x75db29d2],cl
  4031f1:	pop    esi
  4031f2:	ss mov eax,0xf3a281f3
  4031f8:	rcr    BYTE PTR [edi+0x529ff930],cl
  4031fe:	scas   al,BYTE PTR es:[edi]
  4031ff:	dec    esi
  403200:	retf   0xd6d8
  403203:	add    ecx,eax
  403205:	imul   esp,DWORD PTR [ecx+edi*1+0x41],0xf
  40320a:	or     al,BYTE PTR [ebx-0x78f23f3b]
  403210:	jp     0x4031cc
  403212:	push   ss
  403213:	sbb    eax,0x98001060
  403218:	cmc    
  403219:	pop    ss
  40321a:	mov    cl,0xea
  40321c:	ds test eax,0xb749e568
  403222:	aas    
  403223:	mov    ch,0xdd
  403225:	sbb    eax,0x8c476af3
  40322a:	out    dx,eax
  40322b:	enter  0x73bb,0x34
  40322f:	aaa    
  403230:	(bad)  
  403231:	and    eax,0x9983e9ca
  403236:	aam    0xf9
  403238:	jp     0x403299
  40323a:	dec    esp
  40323b:	bound  edx,QWORD PTR [edx+0x2b]
  40323e:	fsub   st,st(7)
  403240:	loope  0x40321b
  403242:	loopne 0x4031e5
  403244:	push   0x21
  403246:	add    edi,DWORD PTR [ebp+0x3bff473d]
  40324c:	dec    ebp
  40324d:	imul   esp,DWORD PTR [edi-0x3ba0a9a3],0xd09211b8
  403257:	mov    DWORD PTR [edi-0x65352757],ebx
  40325d:	rcr    BYTE PTR [ecx+0x2b],cl
  403260:	retf   
  403261:	data16 mov al,ds:0x61739885
  403267:	cs push esi
  403269:	adc    DWORD PTR [ecx-0x11962671],esi
  40326f:	jge    0x4032ba
  403271:	and    DWORD PTR [edx-0x25],esi
  403274:	cdq    
  403275:	xchg   ecx,eax
  403276:	gs leave 
  403278:	scas   al,BYTE PTR es:[edi]
  403279:	retf   0x92ae
  40327c:	fwait
  40327d:	inc    edx
  40327e:	(bad)  
  40327f:	push   edi
  403280:	fs dec ebx
  403282:	jnp    0x403239
  403284:	loop   0x403234
  403286:	int    0x2b
  403288:	dec    edx
  403289:	and    al,0x6c
  40328b:	and    al,BYTE PTR [eax]
  40328d:	mov    DWORD PTR [esi-0x6c8c2a0c],ecx
  403293:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403294:	pop    esi
  403295:	iret   
  403296:	pop    es
  403297:	mov    cl,0x83
  403299:	inc    esp
  40329a:	lock test DWORD PTR [edx+ebx*8+0x70],ecx
  40329f:	add    BYTE PTR [esi+0x3b949e8e],ch
  4032a5:	mov    edx,0x64ebc49c
  4032aa:	pop    ss
  4032ab:	push   edx
  4032ac:	sar    DWORD PTR [edi+0x2b2f46f1],0xe4
  4032b3:	sbb    ch,BYTE PTR [edx-0x32aeb255]
  4032b9:	sub    eax,0xbc0ad16e
  4032be:	stc    
  4032bf:	sbb    al,BYTE PTR [edx+0xd]
  4032c2:	lds    esi,FWORD PTR ds:0xe9d4fe40
  4032c8:	and    DWORD PTR [edx],esp
  4032ca:	fisttp WORD PTR [ecx]
  4032cc:	pop    ebx
  4032cd:	inc    ebx
  4032ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032cf:	or     BYTE PTR ds:0x2cc40722,0x54
  4032d6:	cmp    BYTE PTR [eax],0x53
  4032d9:	aaa    
  4032da:	push   cs
  4032db:	leave  
  4032dc:	sbb    al,0xb5
  4032de:	push   0x1e
  4032e0:	adc    edx,DWORD PTR [ebx+0x1f]
  4032e3:	sti    
  4032e4:	lods   eax,DWORD PTR ds:[esi]
  4032e5:	dec    edi
  4032e6:	adc    ch,BYTE PTR ds:0x6ac7c612
  4032ec:	fnstcw WORD PTR [ebp-0xca152e0]
  4032f2:	mov    edi,0xd2316123
  4032f7:	fnstcw WORD PTR [edx]
  4032f9:	xchg   esi,eax
  4032fa:	(bad)  
  4032fb:	loope  0x403307
  4032fd:	cdq    
  4032fe:	cwde   
  4032ff:	mov    eax,0x931eaa10
  403304:	adc    eax,0xe76647e
  403309:	add    esi,DWORD PTR [esi+0x27]
  40330c:	cmp    BYTE PTR [ecx],ah
  40330e:	pop    ebx
  40330f:	sti    
  403310:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403311:	das    
  403312:	loop   0x403352
  403314:	fnstenv [ebp+0x45a434d6]
  40331a:	xchg   ebp,eax
  40331b:	div    ah
  40331d:	mov    al,0x94
  40331f:	ins    DWORD PTR es:[edi],dx
  403320:	xor    edi,ebx
  403322:	lock ins DWORD PTR es:[edi],dx
  403324:	mov    esi,0x6528f99d
  403329:	frstor [edi+edi*1]
  40332c:	add    al,0xeb
  40332e:	stc    
  40332f:	push   0x70
  403331:	jno    0x4032cf
  403333:	cmp    al,0xc5
  403335:	jl     0x4032ca
  403337:	ret    
  403338:	pop    ebx
  403339:	dec    edx
  40333a:	xor    ch,ch
  40333c:	mov    gs,esp
  40333e:	xchg   edx,eax
  40333f:	adc    DWORD PTR [edi],0x26b5f0d9
  403345:	mov    bh,BYTE PTR [esi+0x26]
  403348:	ja     0x403329
  40334a:	mov    DWORD PTR [esi+edi*2+0x32],ebp
  40334e:	retf   0x36c5
  403351:	and    al,0x9d
  403353:	push   ecx
  403354:	fisubr WORD PTR [edi]
  403356:	sub    esi,DWORD PTR [ecx-0x7d]
  403359:	dec    ebx
  40335a:	jb     0x40333a
  40335c:	sub    bl,BYTE PTR [edx-0x758cb734]
  403362:	and    eax,0x36b708ee
  403367:	sbb    bl,BYTE PTR [edi+0x4a]
  40336a:	in     al,0xd3
  40336c:	hlt    
  40336d:	push   ss
  40336e:	mov    bh,0xdf
  403370:	clc    
  403371:	into   
  403372:	jo     0x4033e5
  403374:	inc    ecx
  403375:	aas    
  403376:	idiv   DWORD PTR [ecx+0x3c17cbed]
  40337c:	mov    cl,0xe6
  40337e:	and    al,0xad
  403380:	(bad)  
  403381:	psubusb mm2,mm0
  403384:	pop    ds
  403385:	pop    esp
  403386:	jp     0x40331e
  403388:	out    dx,eax
  403389:	sub    eax,DWORD PTR [ebp+0x11884be9]
  40338f:	pushf  
  403390:	ds xor cl,cl
  403393:	pop    ds
  403394:	dec    ecx
  403395:	pop    eax
  403396:	mov    DWORD PTR [ebx+0xf],edx
  403399:	inc    esi
  40339a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40339b:	retf   
  40339c:	mov    eax,ds:0xec11bfee
  4033a1:	fs call 0x447c6602
  4033a7:	js     0x403371
  4033a9:	outs   dx,BYTE PTR ds:[esi]
  4033aa:	or     bl,BYTE PTR [ebx+ecx*1]
  4033ad:	(bad)  
  4033ae:	sub    al,0xb6
  4033b0:	inc    edi
  4033b1:	loopne 0x40334d
  4033b3:	xchg   BYTE PTR [ecx+0x14da479a],bl
  4033b9:	stos   DWORD PTR es:[edi],eax
  4033ba:	cmp    DWORD PTR [eax+0x40e587ca],esi
  4033c0:	jp     0x4033f9
  4033c2:	fwait
  4033c3:	das    
  4033c4:	jl     0x403410
  4033c6:	aas    
  4033c7:	imul   ecx,DWORD PTR [ecx-0xd9fc7ea],0x18
  4033ce:	inc    eax
  4033cf:	popf   
  4033d0:	xchg   ebx,eax
  4033d1:	ror    eax,0x87
  4033d4:	adc    BYTE PTR [ecx-0x70ec0dae],cl
  4033da:	mov    edi,0xc591bdef
  4033df:	(bad)  
  4033e0:	jmp    0xa392e697
  4033e5:	cmp    al,0xbb
  4033e7:	iret   
  4033e8:	mov    dl,0xf1
  4033ea:	lods   al,BYTE PTR ds:[esi]
  4033eb:	mov    ebx,DWORD PTR [eax+0x220199e8]
  4033f1:	(bad)  
  4033f2:	jmp    0xaa9e:0xe9039d90
  4033f9:	pushf  
  4033fa:	xchg   edx,eax
  4033fb:	mov    ch,0xb6
  4033fd:	xor    ecx,ebx
  4033ff:	into   
  403400:	jae    0x403410
  403402:	dec    eax
  403403:	test   eax,0x40cc046b
  403408:	xchg   esi,eax
  403409:	inc    esp
  40340a:	mov    BYTE PTR fs:[edi-0x2769424c],ah
  403411:	cmp    ah,al
  403413:	jmp    0xc625:0xa61132f
  40341a:	mov    cl,0xba
  40341c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40341d:	pop    ss
  40341e:	loope  0x403447
  403420:	dec    ecx
  403421:	add    eax,0xa7316262
  403426:	popa   
  403427:	pop    ebp
  403428:	bound  ebp,QWORD PTR [ebx]
  40342a:	lock imul edi,DWORD PTR [edi],0x93d680
  403431:	lahf   
  403432:	loope  0x4033c0
  403434:	clc    
  403435:	cwde   
  403436:	retf   0x53e4
  403439:	mov    ch,cl
  40343b:	mov    cl,0x62
  40343d:	pop    edx
  40343e:	and    BYTE PTR [ebx+0x73],dh
  403441:	mov    ah,0x50
  403443:	add    BYTE PTR [esi-0x47],al
  403446:	or     eax,0x1cd5666e
  40344b:	aaa    
  40344c:	test   eax,0x593060bf
  403451:	mov    dh,bh
  403453:	adc    BYTE PTR [esi],al
  403455:	push   ss
  403456:	sbb    DWORD PTR [edx],0x8cf5097f
  40345c:	xor    eax,0x94ed8483
  403461:	arpl   WORD PTR [ecx-0x57],bx
  403464:	(bad)  
  403466:	and    ecx,DWORD PTR [edi+0x41]
  403469:	fwait
  40346a:	cmc    
  40346b:	cmp    DWORD PTR [ebp-0x11],0x57e18b7b
  403472:	lods   al,BYTE PTR ds:[esi]
  403473:	xor    al,BYTE PTR [ebx-0x2]
  403476:	or     BYTE PTR [ebx+0x6d],al
  403479:	es push ebp
  40347b:	(bad)  
  40347c:	fist   WORD PTR [edx+0x25]
  40347f:	pushf  
  403480:	stc    
  403481:	fs inc esi
  403483:	inc    ecx
  403484:	sub    al,0xa7
  403486:	xlat   BYTE PTR ds:[ebx]
  403487:	hlt    
  403488:	cmc    
  403489:	test   al,0xf8
  40348b:	sub    dh,BYTE PTR [ebp-0x15469df1]
  403491:	(bad)  
  403492:	out    0x79,al
  403494:	push   ds
  403495:	shl    DWORD PTR [esi],cl
  403497:	retf   0x91d
  40349a:	sbb    esi,edx
  40349c:	lods   eax,DWORD PTR ds:[esi]
  40349d:	div    DWORD PTR [eax+0x24]
  4034a0:	push   0x27
  4034a2:	call   0x57419fa2
  4034a7:	push   ds
  4034a8:	cmc    
  4034a9:	ret    
  4034aa:	pop    ds
  4034ab:	mov    esp,0x3daa42a6
  4034b0:	mov    eax,0xfc9fa2c7
  4034b5:	inc    edx
  4034b6:	push   esi
  4034b7:	sbb    eax,0xafde1844
  4034bc:	(bad)  
  4034bd:	into   
  4034be:	imul   eax,DWORD PTR [esi-0x7a],0x5f
  4034c2:	rcr    BYTE PTR [ebx],0x6
  4034c5:	xor    BYTE PTR [esi-0x1f],ch
  4034c8:	jp     0x4034bd
  4034ca:	sbb    al,0x70
  4034cc:	test   DWORD PTR [ecx+0x45],edi
  4034cf:	les    ecx,FWORD PTR [esi]
  4034d1:	pop    ecx
  4034d2:	jge    0x403519
  4034d4:	dec    esp
  4034d5:	frstor [ebx+0x5b]
  4034d8:	xchg   edi,eax
  4034d9:	retf   0x57b4
  4034dc:	mov    ah,0x60
  4034de:	das    
  4034df:	dec    edx
  4034e0:	jl     0x403499
  4034e2:	mov    ch,0x77
  4034e4:	xor    ebp,esp
  4034e6:	xor    dl,BYTE PTR [edx+0x25c856af]
  4034ec:	hlt    
  4034ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034ee:	in     al,dx
  4034ef:	shl    DWORD PTR [esi+0x37],1
  4034f2:	pop    ebp
  4034f3:	icebp  
  4034f4:	pop    edx
  4034f5:	cwde   
  4034f6:	call   0x3f0a:0xe5e5711e
  4034fd:	scas   eax,DWORD PTR es:[edi]
  4034fe:	dec    ecx
  4034ff:	test   ecx,eax
  403501:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403503:	(bad)  
  403504:	hlt    
  403505:	test   esp,ecx
  403507:	gs aam 0xb9
  40350a:	cwde   
  40350b:	dec    edx
  40350c:	mov    fs,WORD PTR ss:[esi+0x2b247164]
  403513:	xacquire xchg DWORD PTR [ecx+0x2640ec61],esi
  40351a:	mov    bl,0x29
  40351c:	push   0x1b
  40351e:	(bad)  
  40351f:	loopne 0x40350f
  403521:	inc    ecx
  403522:	les    eax,FWORD PTR [esi+ebp*8-0x35]
  403526:	push   esp
  403527:	adc    BYTE PTR [esi-0x13],ah
  40352a:	mov    bl,0x87
  40352c:	push   eax
  40352d:	mov    ebx,0xa92fd674
  403532:	sbb    eax,0xa683d65d
  403537:	ffree  st(6)
  403539:	mov    dh,0xa2
  40353b:	mov    eax,0x9d1d34c7
  403540:	jns    0x40351a
  403542:	and    ax,0x73
  403546:	ret    
  403547:	jle    0x403517
  403549:	adc    BYTE PTR [edi],cl
  40354b:	bound  edx,QWORD PTR [ebp+0x19af7abd]
  403551:	cmp    bh,BYTE PTR [ecx]
  403553:	scas   al,BYTE PTR es:[edi]
  403554:	jge    0x403538
  403556:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403557:	xor    edi,DWORD PTR [edi]
  403559:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40355a:	lock pop ss
  40355c:	cmove  ebx,DWORD PTR [edx+0xb]
  403560:	mov    dh,0x70
  403562:	loopne 0x403595
  403564:	xor    DWORD PTR [eax-0x4],esi
  403567:	es stc 
  403569:	loope  0x403549
  40356b:	add    DWORD PTR [eax+edx*4-0x1b],ebx
  40356f:	xchg   DWORD PTR [edx],ebp
  403571:	les    ecx,FWORD PTR [esi+0x17]
  403574:	pop    ss
  403575:	mov    al,ds:0x32ac2638
  40357a:	cmp    al,0x2f
  40357c:	loope  0x403552
  40357e:	jo     0x403520
  403580:	dec    edx
  403581:	stc    
  403582:	inc    esp
  403583:	push   edx
  403584:	push   ebx
  403585:	mov    dh,0x70
  403587:	sbb    bl,0xb3
  40358a:	lahf   
  40358b:	cmc    
  40358c:	ret    
  40358d:	das    
  40358e:	dec    edx
  40358f:	pop    ss
  403590:	imul   esp,DWORD PTR [ebx+0x6a612fe6],0x25815904
  40359a:	pop    ebp
  40359b:	mov    es,WORD PTR [edx+0x0]
  40359e:	dec    esi
  40359f:	je     0x4035a1
  4035a1:	add    BYTE PTR [ebx],ch
  4035a3:	enter  0x2581,0x5d
  4035a7:	mov    es,WORD PTR [edx+0x0]
  4035aa:	add    BYTE PTR [eax],al
  4035ac:	add    BYTE PTR [eax],al
  4035ae:	mov    eax,ds:0x428e5d
  4035b3:	inc    eax
  4035b4:	mov    ds:0x428e5d,eax
  4035b9:	cmp    DWORD PTR ds:0x428e5d,0x1f
  4035c0:	jge    0x4035e8
  4035c6:	jmp    0x4035db
  4035cb:	push   0x7a18
  4035d0:	push   0x1440
  4035d5:	call   DWORD PTR ds:0x42ca1c
  4035db:	cmp    DWORD PTR ds:0x428e5d,0x1b
  4035e2:	jb     0x4035ae
  4035e8:	add    ecx,DWORD PTR [ebp-0x1c]
  4035eb:	mov    DWORD PTR [ebp-0x2c],0xf89c85f9
  4035f2:	and    DWORD PTR ds:0x428e89,0x0
  4035fc:	mov    eax,ds:0x428e89
  403601:	inc    eax
  403602:	mov    ds:0x428e89,eax
  403607:	cmp    DWORD PTR ds:0x428e89,0x25
  40360e:	jb     0x403631
  403614:	jmp    0x403624
  403619:	push   0x5d03
  40361e:	call   DWORD PTR ds:0x42ca50
  403624:	cmp    DWORD PTR ds:0x428e89,0x1d
  40362b:	jb     0x4035fc
  403631:	mov    DWORD PTR [ebp-0x18],ecx
  403634:	mov    eax,ds:0x4292b5
  403639:	mov    eax,DWORD PTR [eax]
  40363b:	or     DWORD PTR ds:0x428e99,eax
  403641:	mov    DWORD PTR [ebp-0xa0],0xf89c85bd
  40364b:	and    DWORD PTR ds:0x428e29,0x0
  403655:	jmp    0x403665
  40365a:	mov    eax,ds:0x428e29
  40365f:	inc    eax
  403660:	mov    ds:0x428e29,eax
  403665:	cmp    DWORD PTR ds:0x428e29,0x13
  40366c:	jae    0x4036b6
  403672:	cmp    DWORD PTR ds:0x428e29,0x6
  403679:	jge    0x4036b6
  40367f:	jmp    0x403699
  403684:	push   0x4646
  403689:	push   0x428124
  40368e:	push   0x428ec1
  403693:	call   DWORD PTR ds:0x42ca54
  403699:	cmp    DWORD PTR ds:0x428e29,0x5
  4036a0:	jne    0x4036b1
  4036a6:	mov    eax,ds:0x428e29
  4036ab:	inc    eax
  4036ac:	mov    ds:0x428e29,eax
  4036b1:	jmp    0x40365a
  4036b6:	mov    eax,DWORD PTR [ebp-0x14]
  4036b9:	mov    DWORD PTR [ebp-0x9c],eax
  4036bf:	mov    eax,DWORD PTR [ebp-0x18]
  4036c2:	or     DWORD PTR ds:0x428e99,0x71ca
  4036cc:	mov    DWORD PTR [ebp-0x98],eax
  4036d2:	movzx  eax,WORD PTR ds:0x428e2d
  4036d9:	sub    DWORD PTR ds:0x428e8d,eax
  4036df:	mov    eax,DWORD PTR [ebp-0x2c]
  4036e2:	xor    eax,esi
  4036e4:	xor    DWORD PTR ds:0x428ec9,0x428e59
  4036ee:	add    eax,edi
  4036f0:	mov    DWORD PTR [ebp-0x94],eax
  4036f6:	lea    eax,[ebp-0x48]
  4036f9:	mov    DWORD PTR [ebp-0x90],eax
  4036ff:	adc    eax,0x53e7
  403704:	mov    eax,DWORD PTR [ebp-0xa0]
  40370a:	adc    DWORD PTR ds:0x428e2d,0x2edb
  403714:	xor    eax,esi
  403716:	sbb    DWORD PTR ds:0x428ed1,0x428e95
  403720:	add    eax,edi
  403722:	or     DWORD PTR ds:0x428e25,0x5a5f
  40372c:	mov    DWORD PTR [ebp-0xa0],eax
  403732:	not    DWORD PTR ds:0x428e49
  403738:	lea    eax,[ebp-0xa0]
  40373e:	push   eax
  40373f:	adc    DWORD PTR ds:0x428ea9,edx
  403745:	mov    eax,DWORD PTR [ebp+0xc]
  403748:	or     DWORD PTR ds:0x428e59,0x428e79
  403752:	xor    eax,esi
  403754:	or     DWORD PTR ds:0x428e81,0x24f1
  40375e:	add    eax,edi
  403760:	or     DWORD PTR ds:0x428e75,0x428e65
  40376a:	push   eax
  40376b:	or     eax,DWORD PTR ds:0x428e55
  403771:	mov    eax,ds:0x428385
  403776:	push   0x4282db
  40377b:	push   DWORD PTR [eax]
  40377d:	call   0x40854d
  403782:	and    eax,0x5bd3
  403787:	mov    ebx,DWORD PTR [ebp-0x14]
  40378a:	movzx  edx,BYTE PTR ds:0x428ed1
  403791:	sbb    edx,DWORD PTR ds:0x428e79
  403797:	mov    DWORD PTR ds:0x428ed1,edx
  40379d:	mov    eax,DWORD PTR [ebp-0x18]
  4037a0:	mov    DWORD PTR [ebp-0x58],eax
  4037a3:	mov    DWORD PTR [ebp-0x34],0xf89c8523
  4037aa:	mov    eax,0xf89c85bb
  4037af:	mov    DWORD PTR [ebp-0x1c],eax
  4037b2:	lea    ecx,[eax-0x2]
  4037b5:	or     DWORD PTR ds:0x428ea1,0x10a8
  4037bf:	mov    DWORD PTR [ebp-0x28],ecx
  4037c2:	sub    edx,0x6e70
  4037c8:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4037cf:	movzx  edx,WORD PTR ds:0x428e7d
  4037d6:	sbb    DWORD PTR ds:0x428e4d,edx
  4037dc:	mov    DWORD PTR [ebp-0x8],eax
  4037df:	sbb    eax,DWORD PTR ds:0x428e2d
  4037e5:	mov    eax,DWORD PTR [ebp-0x10]
  4037e8:	and    DWORD PTR ds:0x428eb9,0x0
  4037f2:	jmp    0x403804
  4037f7:	mov    edx,DWORD PTR ds:0x428eb9
  4037fd:	inc    edx
  4037fe:	mov    DWORD PTR ds:0x428eb9,edx
  403804:	cmp    DWORD PTR ds:0x428eb9,0x14
  40380b:	jae    0x403852
  403811:	cmp    DWORD PTR ds:0x428eb9,0xc
  403818:	jb     0x403852
  40381e:	jmp    0x403833
  403823:	push   0x428019
  403828:	push   0x7b14
  40382d:	call   DWORD PTR ds:0x42ca20
  403833:	cmp    DWORD PTR ds:0x428eb9,0xb
  40383a:	jne    0x40384d
  403840:	mov    edx,DWORD PTR ds:0x428eb9
  403846:	inc    edx
  403847:	mov    DWORD PTR ds:0x428eb9,edx
  40384d:	jmp    0x4037f7
  403852:	xor    eax,esi
  403854:	mov    edx,0xffcd8d88
  403859:	add    DWORD PTR ds:0x428eb1,0x428ec1
  403863:	sub    edx,eax
  403865:	mov    DWORD PTR ds:0x428e39,0x1fc
  40386f:	mov    DWORD PTR [ebp-0xc],edx
  403872:	mov    DWORD PTR [ebp-0x18],0xf89c85bc
  403879:	mov    DWORD PTR ds:0x428ea5,ebx
  40387f:	mov    eax,DWORD PTR [ebp-0x8]
  403882:	mov    DWORD PTR ds:0x428ec9,0x6695
  40388c:	mov    DWORD PTR [ebp-0x3c],ebx
  40388f:	cmp    eax,ecx
  403891:	mov    DWORD PTR ds:0x428e8d,0x71c
  40389b:	je     0x403bca
  4038a1:	mov    eax,DWORD PTR [ebp-0x10]
  4038a4:	mov    ecx,DWORD PTR [ebp-0x10]
  4038a7:	xor    eax,esi
  4038a9:	xor    ecx,esi
  4038ab:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4038b2:	and    DWORD PTR ds:0x428e81,0x0
  4038bc:	jmp    0x4038cf
  4038c1:	xor    eax,eax
  4038c3:	add    eax,DWORD PTR ds:0x428e81
  4038c9:	inc    eax
  4038ca:	mov    ds:0x428e81,eax
  4038cf:	cmp    DWORD PTR ds:0x428e81,0x11
  4038d6:	jae    0x403909
  4038dc:	cmp    DWORD PTR ds:0x428e81,0x1e
  4038e3:	jg     0x403909
  4038e9:	jmp    0x403904
  4038ee:	push   0x6b74
  4038f3:	push   DWORD PTR [ebp-0x10]
  4038f6:	push   DWORD PTR [ebp-0x1c]
  4038f9:	push   0x7d9c
  4038fe:	call   DWORD PTR ds:0x42ca58
  403904:	jmp    0x4038c1
  403909:	mov    eax,DWORD PTR [ebp-0xc]
  40390c:	xor    edx,edx
  40390e:	or     DWORD PTR ds:0x428eb9,0x5ac4
  403918:	div    ecx
  40391a:	mov    eax,DWORD PTR [ebp-0x8]
  40391d:	sbb    DWORD PTR ds:0x428e55,0x2d6
  403927:	mov    ecx,DWORD PTR [ebp-0x10]
  40392a:	and    DWORD PTR ds:0x428e8d,0x428e9d
  403934:	xor    eax,esi
  403936:	xor    ecx,esi
  403938:	sub    eax,ecx
  40393a:	mov    DWORD PTR ds:0x428ec5,0x3e75
  403944:	cmp    edx,eax
  403946:	mov    DWORD PTR ds:0x428e2d,0x53e
  403950:	jne    0x403b0b
  403956:	mov    eax,DWORD PTR [ebp-0xc]
  403959:	xor    DWORD PTR ds:0x428e45,ebx
  40395f:	mov    dl,BYTE PTR [eax+ebx*1+0x800]
  403966:	sub    ecx,0x200f
  40396c:	mov    eax,DWORD PTR [ebp-0x28]
  40396f:	or     ecx,DWORD PTR ds:0x428e5d
  403975:	mov    ecx,DWORD PTR [ebp-0x18]
  403978:	xor    eax,esi
  40397a:	xor    ecx,esi
  40397c:	sbb    DWORD PTR ds:0x428e8d,0x428ead
  403986:	add    eax,edi
  403988:	sbb    DWORD PTR ds:0x428e45,0x428ec9
  403992:	add    ecx,edi
  403994:	mov    BYTE PTR [ebp-0x21],dl
  403997:	mov    DWORD PTR ds:0x428ea5,0x17c
  4039a1:	cmp    eax,ecx
  4039a3:	jae    0x403a98
  4039a9:	xor    edx,0x3299
  4039af:	lea    ecx,[eax-0x3272f8]
  4039b5:	mov    DWORD PTR [ebp-0x14],ecx
  4039b8:	mov    edx,DWORD PTR [ebp-0x14]
  4039bb:	xor    edx,esi
  4039bd:	add    edx,0x7f55d8fb
  4039c3:	lea    ecx,[ebp+eax*4-0xb4]
  4039ca:	mov    DWORD PTR ds:0x428e59,0x12ce
  4039d4:	mov    DWORD PTR [ecx],edx
  4039d6:	mov    edx,DWORD PTR ds:0x428e95
  4039dc:	mov    edx,DWORD PTR [ecx]
  4039de:	cmp    edx,0x244ecb9a
  4039e4:	mov    DWORD PTR ds:0x428e99,0x3868
  4039ee:	jbe    0x403a09
  4039f4:	add    DWORD PTR ds:0x428ea1,0x428e75
  4039fe:	add    DWORD PTR [ecx],0x405fcdd
  403a04:	jmp    0x403a15
  403a09:	dec    DWORD PTR ds:0x428e99
  403a0f:	add    DWORD PTR [ecx],0xfdaf4323
  403a15:	and    DWORD PTR ds:0x428ea5,0x0
  403a1f:	jmp    0x403a31
  403a24:	mov    ecx,DWORD PTR ds:0x428ea5
  403a2a:	inc    ecx
  403a2b:	mov    DWORD PTR ds:0x428ea5,ecx
  403a31:	cmp    DWORD PTR ds:0x428ea5,0x1a
  403a38:	jae    0x403a68
  403a3e:	cmp    DWORD PTR ds:0x428ea5,0x24
  403a45:	jle    0x403a68
  403a4b:	jmp    0x403a63
  403a50:	push   0x428124
  403a55:	push   DWORD PTR [ebp-0x24]
  403a58:	push   0x8716
  403a5d:	call   DWORD PTR ds:0x42ca60
  403a63:	jmp    0x403a24
  403a68:	mov    ecx,DWORD PTR [ebp-0x18]
  403a6b:	xor    ecx,esi
  403a6d:	adc    DWORD PTR ds:0x428e49,0xcc9
  403a77:	inc    eax
  403a78:	inc    DWORD PTR [ebp-0x14]
  403a7b:	sub    DWORD PTR ds:0x428ed1,0x428e99
  403a85:	add    ecx,edi
  403a87:	cmp    eax,ecx
  403a89:	jb     0x4039b8
  403a8f:	not    DWORD PTR ds:0x428e69
  403a95:	mov    dl,BYTE PTR [ebp-0x21]
  403a98:	add    eax,DWORD PTR ds:0x428e2d
  403a9e:	mov    eax,DWORD PTR [ebp-0x34]
  403aa1:	adc    DWORD PTR ds:0x428e91,0x428e69
  403aab:	xor    al,0xb1
  403aad:	sbb    DWORD PTR ds:0x428e49,0x428e75
  403ab7:	mov    cl,0x8
  403ab9:	sub    cl,al
  403abb:	add    dl,cl
  403abd:	sub    DWORD PTR ds:0x428ea9,ecx
  403ac3:	mov    ecx,DWORD PTR [ebp-0x1c]
  403ac6:	sbb    DWORD PTR ds:0x428ed1,0x428e31
  403ad0:	xor    cl,0xb1
  403ad3:	xor    DWORD PTR ds:0x428ea5,0x741f
  403add:	sub    cl,0x8
  403ae0:	sub    DWORD PTR ds:0x428e39,0x428eb9
  403aea:	ror    dl,cl
  403aec:	xor    eax,eax
  403aee:	mov    eax,ds:0x4292b9
  403af3:	xor    ecx,ecx
  403af5:	add    ecx,DWORD PTR ds:0x429ba5
  403afb:	sub    eax,ecx
  403afd:	imul   eax,DWORD PTR [eax+ecx*1]
  403b01:	mov    eax,DWORD PTR [ebp-0xc]
  403b04:	mov    BYTE PTR [eax+ebx*1+0x800],dl
  403b0b:	mov    DWORD PTR ds:0x428e61,0x15
  403b15:	cmp    DWORD PTR ds:0x428e61,0x0
  403b1c:	je     0x403b74
  403b22:	cmp    DWORD PTR ds:0x428e61,0x5
  403b29:	jb     0x403b74
  403b2f:	jmp    0x403b49
  403b34:	push   0x42819a
  403b39:	push   0x0
  403b3b:	push   DWORD PTR [ebp-0x18]
  403b3e:	push   0x1deb
  403b43:	call   DWORD PTR ds:0x42ca64
  403b49:	cmp    DWORD PTR ds:0x428e61,0x6
  403b50:	jne    0x403b61
  403b56:	mov    eax,ds:0x428e61
  403b5b:	dec    eax
  403b5c:	mov    ds:0x428e61,eax
  403b61:	xor    eax,eax
  403b63:	xor    eax,DWORD PTR ds:0x428e61
  403b69:	dec    eax
  403b6a:	mov    ds:0x428e61,eax
  403b6f:	jmp    0x403b15
  403b74:	mov    eax,DWORD PTR [ebp-0xc]
  403b77:	mov    ecx,DWORD PTR [ebp-0x28]
  403b7a:	sub    eax,edi
  403b7c:	xor    eax,esi
  403b7e:	cmp    eax,ecx
  403b80:	jne    0x403baa
  403b86:	mov    eax,DWORD PTR [ebp-0x8]
  403b89:	mov    ecx,DWORD PTR [ebp-0x10]
  403b8c:	xor    eax,esi
  403b8e:	xor    ecx,esi
  403b90:	sub    eax,ecx
  403b92:	sub    eax,edi
  403b94:	xor    eax,esi
  403b96:	mov    DWORD PTR [ebp-0x8],eax
  403b99:	mov    eax,DWORD PTR [ebp-0x10]
  403b9c:	xor    eax,esi
  403b9e:	mov    ecx,0xffcd8d88
  403ba3:	sub    ecx,eax
  403ba5:	jmp    0x403bb9
  403baa:	mov    eax,DWORD PTR [ebp-0x10]
  403bad:	xor    eax,esi
  403baf:	mov    ecx,0xffcd8d08
  403bb4:	sub    ecx,eax
  403bb6:	add    ecx,DWORD PTR [ebp-0xc]
  403bb9:	mov    DWORD PTR [ebp-0xc],ecx
  403bbc:	mov    eax,DWORD PTR [ebp-0x8]
  403bbf:	cmp    eax,0xf89c85b9
  403bc4:	jne    0x4038a1
  403bca:	mov    DWORD PTR [ebp-0x34],0x9
  403bd1:	mov    ecx,DWORD PTR [ebp+0x8]
  403bd4:	xor    ecx,esi
  403bd6:	add    ecx,edi
  403bd8:	jmp    0x4084e6
  403bdd:	lea    eax,[ecx+ebx*1]
  403be0:	mov    DWORD PTR [ebp-0x2c],eax
  403be3:	mov    eax,DWORD PTR [ebp-0x58]
  403be6:	sub    eax,ecx
  403be8:	mov    DWORD PTR [ebp-0x1c],eax
  403beb:	mov    eax,DWORD PTR [ebp-0x1c]
  403bee:	mov    DWORD PTR [ebp-0x14],eax
  403bf1:	mov    eax,DWORD PTR [ebp-0x2c]
  403bf4:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  403bfb:	mov    DWORD PTR [ebp-0x54],eax
  403bfe:	mov    DWORD PTR [ebp-0x20],0xf89c85b8
  403c05:	mov    eax,DWORD PTR [ebp-0x38]
  403c08:	xor    eax,esi
  403c0a:	add    eax,edi
  403c0c:	mov    DWORD PTR [ebp-0x10],eax
  403c0f:	mov    eax,DWORD PTR [ebp-0x38]
  403c12:	xor    eax,esi
  403c14:	add    eax,edi
  403c16:	mov    DWORD PTR [ebp-0x8],eax
  403c19:	mov    DWORD PTR [ebp-0x2c],0xf89c8599
  403c20:	mov    DWORD PTR [ebp-0x44],0xf89c85be
  403c27:	mov    eax,DWORD PTR [ebp-0x38]
  403c2a:	mov    edx,DWORD PTR [ebp-0x14]
  403c2d:	xor    eax,esi
  403c2f:	add    eax,edi
  403c31:	cmp    edx,eax
  403c33:	je     0x4084da
  403c39:	mov    eax,DWORD PTR [ebp-0x20]
  403c3c:	xor    eax,esi
  403c3e:	mov    edx,0xffcd8d08
  403c43:	sub    edx,eax
  403c45:	add    edx,DWORD PTR [ebp-0x14]
  403c48:	mov    eax,DWORD PTR [ebp-0x20]
  403c4b:	mov    ebx,DWORD PTR [ebp-0x10]
  403c4e:	xor    eax,esi
  403c50:	add    eax,edi
  403c52:	imul   eax,ebx
  403c55:	cmp    eax,edx
  403c57:	ja     0x4084d7
  403c5d:	mov    edx,DWORD PTR [ebp-0x10]
  403c60:	mov    eax,DWORD PTR [ebp-0x14]
  403c63:	mov    ebx,DWORD PTR [ebp-0x2c]
  403c66:	sub    eax,edx
  403c68:	xor    ebx,esi
  403c6a:	xor    edx,edx
  403c6c:	add    ebx,edi
  403c6e:	div    ebx
  403c70:	mov    DWORD PTR [ebp-0x8],eax
  403c73:	mov    eax,DWORD PTR [ebp-0x44]
  403c76:	mov    edx,DWORD PTR [ebp-0x8]
  403c79:	xor    eax,esi
  403c7b:	add    eax,edi
  403c7d:	cmp    edx,eax
  403c7f:	jbe    0x403c8f
  403c85:	mov    eax,DWORD PTR [ebp-0x44]
  403c88:	xor    eax,esi
  403c8a:	add    eax,edi
  403c8c:	mov    DWORD PTR [ebp-0x8],eax
  403c8f:	mov    eax,DWORD PTR [ebp-0x2c]
  403c92:	mov    edx,DWORD PTR [ebp-0x8]
  403c95:	xor    eax,esi
  403c97:	add    eax,edi
  403c99:	imul   eax,edx
  403c9c:	mov    DWORD PTR [ebp-0x8],eax
  403c9f:	mov    eax,DWORD PTR [ebp-0x38]
  403ca2:	mov    edx,DWORD PTR [ebp-0x8]
  403ca5:	xor    eax,esi
  403ca7:	add    eax,edi
  403ca9:	cmp    edx,eax
  403cab:	je     0x4084c0
  403cb1:	mov    eax,DWORD PTR [ebp-0x8]
  403cb4:	mov    DWORD PTR [ebp-0x18],eax
  403cb7:	mov    eax,DWORD PTR [ebp-0x10]
  403cba:	add    eax,DWORD PTR [ebp-0x54]
  403cbd:	mov    DWORD PTR [ebp-0x1c],0xf89c85b9
  403cc4:	mov    DWORD PTR [ebp-0x8],eax
  403cc7:	mov    eax,0xf89c85b8
  403ccc:	mov    DWORD PTR [ebp-0x28],eax
  403ccf:	mov    DWORD PTR [ebp-0x5c],0xf89c85bb
  403cd6:	mov    DWORD PTR [ebp-0x40],0xf89c85ba
  403cdd:	mov    DWORD PTR [ebp-0x30],eax
  403ce0:	mov    eax,DWORD PTR [ebp-0x1c]
  403ce3:	xor    eax,esi
  403ce5:	add    eax,edi
  403ce7:	jmp    0x40847c
  403cec:	mov    DWORD PTR [ebp-0x4c],0xf89c85a2
  403cf3:	mov    DWORD PTR [ebp-0x50],0xf89c85af
  403cfa:	mov    eax,DWORD PTR [ebp-0x30]
  403cfd:	mov    edx,DWORD PTR [ebp-0xc]
  403d00:	xor    eax,esi
  403d02:	add    eax,edi
  403d04:	imul   eax,edx
  403d07:	mov    edx,DWORD PTR [ebp-0x8]
  403d0a:	mov    al,BYTE PTR [eax+edx*1]
  403d0d:	mov    BYTE PTR [ebp-0x1],al
  403d10:	mov    eax,DWORD PTR [ebp-0x30]
  403d13:	mov    edx,DWORD PTR [ebp-0xc]
  403d16:	xor    eax,esi
  403d18:	add    eax,edi
  403d1a:	imul   eax,edx
  403d1d:	mov    edx,DWORD PTR [ebp-0x5c]
  403d20:	xor    edx,esi
  403d22:	add    eax,edx
  403d24:	mov    edx,DWORD PTR [ebp-0x8]
  403d27:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  403d2f:	mov    edx,DWORD PTR [ebp-0x4c]
  403d32:	xor    edx,esi
  403d34:	lea    eax,[edx+eax*1+0x3272f8]
  403d3b:	movzx  edx,BYTE PTR [ebp-0x1]
  403d3f:	xor    edx,eax
  403d41:	mov    BYTE PTR [ebp-0x1],dl
  403d44:	mov    al,BYTE PTR [ebp-0x1]
  403d47:	mov    edx,DWORD PTR [ebp-0x30]
  403d4a:	mov    ebx,DWORD PTR [ebp-0xc]
  403d4d:	xor    edx,esi
  403d4f:	add    edx,edi
  403d51:	imul   edx,ebx
  403d54:	mov    ebx,DWORD PTR [ebp-0x8]
  403d57:	mov    BYTE PTR [edx+ebx*1],al
  403d5a:	mov    eax,DWORD PTR [ebp-0x30]
  403d5d:	mov    edx,DWORD PTR [ebp-0xc]
  403d60:	xor    eax,esi
  403d62:	add    eax,edi
  403d64:	imul   eax,edx
  403d67:	mov    edx,DWORD PTR [ebp-0x8]
  403d6a:	mov    al,BYTE PTR [eax+edx*1]
  403d6d:	mov    BYTE PTR [ebp-0x1],al
  403d70:	mov    eax,DWORD PTR [ebp-0x30]
  403d73:	jmp    0x4060ca
  403d78:	iret   
  403d79:	xor    ebp,eax
  403d7b:	jne    0x403de2
  403d7d:	jns    0x403dee
  403d7f:	cmp    edx,edi
  403d81:	mov    ecx,0xed530752
  403d86:	jb     0x403e04
  403d88:	mov    ch,0x9e
  403d8a:	jnp    0x403e07
  403d8c:	mov    ch,0x9e
  403d8e:	jnp    0x403e0b
  403d90:	mov    ebx,0x1366e84b
  403d95:	es clc 
  403d97:	in     al,0x9a
  403d99:	xor    BYTE PTR [ebx+0x2],cl
  403d9c:	and    al,0x59
  403d9e:	push   es
  403d9f:	mov    edx,0x8624783c
  403da4:	imul   BYTE PTR [ebx]
  403da6:	sbb    al,0xb0
  403da8:	shl    BYTE PTR [esi+0x761b0acb],0x39
  403daf:	cmp    BYTE PTR [ebx+0x48221836],ah
  403db5:	jle    0x403d8f
  403db7:	jle    0x403d54
  403db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403dba:	in     eax,dx
  403dbb:	scas   eax,DWORD PTR es:[edi]
  403dbc:	push   0x65
  403dbe:	jb     0x403df4
  403dc0:	cmp    BYTE PTR ss:[edx-0x58],cl
  403dc4:	in     eax,0x46
  403dc6:	outs   dx,BYTE PTR ds:[esi]
  403dc7:	nop
  403dc8:	and    ah,BYTE PTR [ebx]
  403dca:	adc    BYTE PTR [edx+0x5005ad85],bh
  403dd0:	mov    ch,0x10
  403dd2:	test   BYTE PTR [edi+ebp*1],ch
  403dd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dd6:	and    edi,esp
  403dd8:	aas    
  403dd9:	enter  0x7b27,0x4f
  403ddd:	jecxz  0x403d76
  403ddf:	mov    ah,0x2d
  403de1:	xor    BYTE PTR [ebp+0x425c2e10],bl
  403de7:	sub    eax,0x2fe4cbea
  403dec:	test   al,0xb0
  403dee:	pop    esp
  403def:	or     eax,0x6ed4a2d2
  403df4:	test   DWORD PTR [edx+ecx*8+0x39],esi
  403df8:	in     al,0x7f
  403dfa:	bound  esp,QWORD PTR [edi-0x28]
  403dfd:	repz mov ds:0x2b75514c,al
  403e03:	ja     0x403e7f
  403e05:	or     DWORD PTR [ebp-0x76],edi
  403e08:	xchg   ebx,eax
  403e09:	add    al,0xb6
  403e0b:	stos   BYTE PTR es:[edi],al
  403e0c:	pop    esi
  403e0d:	mov    eax,0x65fd3ef8
  403e12:	loop   0x403dee
  403e14:	mov    al,ds:0xd5e391e4
  403e19:	adc    eax,0xa7488dca
  403e1e:	leave  
  403e1f:	jmp    0x403e89
  403e21:	xor    eax,0xe668c804
  403e26:	and    BYTE PTR [eax+0x64],cl
  403e29:	sbb    bl,BYTE PTR [edx+esi*8]
  403e2c:	add    BYTE PTR [edx],0x47
  403e2f:	std    
  403e30:	mov    edx,0xd950878a
  403e35:	int3   
  403e36:	dec    eax
  403e37:	mov    ch,0xd0
  403e39:	push   edx
  403e3a:	pusha  
  403e3b:	cmp    ebx,DWORD PTR [edi-0x91d9936]
  403e41:	adc    ah,BYTE PTR [edi-0x11]
  403e44:	ss jp  0x403eb0
  403e47:	mov    BYTE PTR [edi-0x4417476e],ah
  403e4d:	inc    eax
  403e4e:	mov    ah,0xb
  403e50:	in     eax,dx
  403e51:	and    DWORD PTR [esi-0xce7dcff],ebp
  403e57:	adc    eax,0x771ff066
  403e5c:	jle    0x403ecf
  403e5e:	(bad)  
  403e5f:	bts    esi,ebx
  403e62:	cmp    al,0x50
  403e64:	and    esp,esi
  403e66:	ds loopne 0x403ded
  403e69:	mov    cl,0x70
  403e6b:	or     al,0xa
  403e6d:	push   ds
  403e6e:	(bad)  [ebx+ecx*2-0x58191b58]
  403e75:	jmp    0x403e62
  403e77:	jg     0x403e80
  403e79:	jnp    0x403e30
  403e7b:	(bad)  
  403e7c:	neg    BYTE PTR [esi+0x47]
  403e7f:	loop   0x403edf
  403e81:	fs (bad) 
  403e83:	std    
  403e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e85:	(bad)  
  403e86:	out    dx,eax
  403e87:	out    dx,eax
  403e88:	cmp    ch,dl
  403e8a:	xchg   edx,eax
  403e8b:	xor    ebp,ebp
  403e8d:	dec    ebx
  403e8e:	xchg   esi,eax
  403e8f:	mov    ch,0x72
  403e91:	xchg   DWORD PTR [esi],ebp
  403e93:	xchg   esi,eax
  403e94:	push   0xe80e8a12
  403e99:	hlt    
  403e9a:	adc    BYTE PTR [edx+0x61],0x65
  403e9e:	mov    al,al
  403ea0:	out    dx,al
  403ea1:	inc    eax
  403ea2:	cmp    BYTE PTR [ebx+0x6],0xa8
  403ea6:	repz pop ebp
  403ea8:	ins    DWORD PTR es:[edi],dx
  403ea9:	or     al,0xb0
  403eab:	or     al,0x6
  403ead:	mov    dl,0x84
  403eaf:	mov    ds:0x4aa0668a,al
  403eb4:	xor    BYTE PTR [ecx],al
  403eb6:	inc    edx
  403eb7:	mov    ds:0x12034e1f,al
  403ebc:	rcr    bl,0xc9
  403ebf:	stos   BYTE PTR es:[edi],al
  403ec0:	pop    es
  403ec1:	push   esi
  403ec2:	mov    cl,0x11
  403ec4:	call   0x4c3246f2
  403ec9:	add    al,0x79
  403ecb:	xlat   BYTE PTR ds:[ebx]
  403ecc:	push   edi
  403ece:	cs in  al,0xaf
  403ed1:	add    eax,0xa95d7b94
  403ed6:	jg     0x403f2b
  403ed8:	int3   
  403ed9:	inc    ebp
  403eda:	xor    edx,esp
  403edc:	fxch   st(5)
  403ede:	xchg   ebx,eax
  403edf:	int3   
  403ee0:	sar    DWORD PTR [ebp+0x7b],1
  403ee3:	lds    ecx,FWORD PTR [esi+esi*4-0x3f]
  403ee7:	lock xchg ebp,eax
  403ee9:	fisub  DWORD PTR [eax*8-0x3baea293]
  403ef0:	ret    0x750
  403ef3:	scas   al,BYTE PTR es:[edi]
  403ef4:	and    esp,DWORD PTR [esi]
  403ef6:	pop    esi
  403ef7:	sar    dh,0x60
  403efa:	(bad)  
  403efb:	nop
  403efc:	inc    edx
  403efd:	xchg   esp,eax
  403efe:	stc    
  403eff:	lods   eax,DWORD PTR ds:[esi]
  403f00:	pop    esi
  403f01:	in     eax,0x62
  403f03:	adc    ebx,ecx
  403f05:	scas   al,BYTE PTR es:[edi]
  403f06:	mov    BYTE PTR [ecx+0x26],al
  403f09:	add    DWORD PTR [ebx-0x59e0276e],edx
  403f0f:	mov    dh,0xa4
  403f11:	in     eax,dx
  403f12:	xor    BYTE PTR [ebp-0x29c0f92d],ah
  403f18:	lahf   
  403f19:	pop    es
  403f1a:	int    0xc1
  403f1c:	out    0x56,al
  403f1e:	add    DWORD PTR [eax],ecx
  403f20:	(bad)  
  403f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f22:	rcl    DWORD PTR [esp+esi*2+0x2a],1
  403f26:	or     ebp,DWORD PTR [esi]
  403f28:	push   edx
  403f29:	xlat   BYTE PTR ds:[ebx]
  403f2a:	loopne 0x403f24
  403f2c:	pop    esi
  403f2d:	test   al,0x8a
  403f2f:	leave  
  403f30:	retf   
  403f31:	rol    ch,cl
  403f33:	inc    ebp
  403f34:	sbb    al,0x67
  403f36:	mov    BYTE PTR [esi+0x4748f2ff],cl
  403f3c:	sub    eax,0xab969d30
  403f41:	bound  ebp,QWORD PTR [ebx-0x70db101]
  403f47:	mov    ss,edi
  403f49:	or     al,0xd4
  403f4b:	jle    0x403f7c
  403f4d:	retf   
  403f4e:	and    eax,0x3a9a9ba0
  403f53:	(bad)  
  403f54:	pop    esp
  403f55:	lahf   
  403f56:	or     eax,0xfb50d593
  403f5b:	pop    edi
  403f5c:	pop    eax
  403f5d:	cdq    
  403f5e:	stos   DWORD PTR es:[edi],eax
  403f5f:	test   al,0xf9
  403f61:	cdq    
  403f62:	mov    ecx,0xb043271f
  403f67:	sub    eax,0x68f5dc85
  403f6c:	dec    eax
  403f6d:	jbe    0x403f38
  403f6f:	pop    ss
  403f70:	sar    BYTE PTR [eax-0x578e48e1],1
  403f76:	inc    ebp
  403f77:	sbb    BYTE PTR [edx],al
  403f79:	or     al,0x43
  403f7b:	jp     0x403fdb
  403f7d:	fimul  WORD PTR ds:0x2a44a811
  403f83:	ss cmc 
  403f85:	bound  ebp,QWORD PTR [ecx]
  403f87:	hlt    
  403f88:	mov    dh,al
  403f8a:	loopne 0x403f5a
  403f8c:	lods   eax,DWORD PTR ds:[esi]
  403f8d:	pop    edi
  403f8e:	add    al,0x6d
  403f90:	(bad)  [ecx-0x2f]
  403f93:	dec    ebp
  403f94:	sub    al,0x2d
  403f96:	call   0xea78:0xb76b6946
  403f9d:	jge    0x403fdd
  403f9f:	popf   
  403fa0:	xchg   edi,eax
  403fa1:	shl    BYTE PTR ds:0x14e5be40,1
  403fa7:	lds    edi,FWORD PTR [edi+eax*2]
  403faa:	(bad)  
  403fab:	cmp    BYTE PTR [edx+0x25502369],al
  403fb1:	mov    bh,0x33
  403fb3:	loop   0x403f4d
  403fb5:	sub    al,0x23
  403fb7:	rol    DWORD PTR [ecx-0x76d2a7c2],1
  403fbd:	inc    edx
  403fbe:	cdq    
  403fbf:	scas   eax,DWORD PTR es:[edi]
  403fc0:	and    al,0x98
  403fc2:	repz rol BYTE PTR [eax+edi*8+0x39],0x1c
  403fc8:	xor    dh,BYTE PTR [ecx+0x6]
  403fcb:	xor    eax,0xecac3d20
  403fd0:	dec    edx
  403fd1:	cld    
  403fd2:	push   0xffffff94
  403fd4:	fwait
  403fd5:	adc    ebp,DWORD PTR [ebx-0x74f0fdc6]
  403fdb:	or     esi,ebp
  403fdd:	in     al,dx
  403fde:	les    ebx,FWORD PTR [ecx+0x2b70bb53]
  403fe4:	xor    eax,0xa8d68ade
  403fe9:	fidiv  WORD PTR [esi+ebx*8]
  403fec:	cmc    
  403fed:	ret    0x1a2f
  403ff0:	jecxz  0x404057
  403ff2:	(bad)
  403ff7:	sar    DWORD PTR [esi+edi*2+0x1e],cl
  403ffb:	mov    ds,WORD PTR [esi-0x1a]
  403ffe:	cs cmp al,0x1e
  404001:	jmp    0xaf71:0x5b611f2c
  404008:	or     al,0x89
  40400a:	sub    al,0x13
  40400c:	mov    es,WORD PTR [esi-0x574c9ff0]
  404012:	mov    eax,ds:0xa3e91b27
  404017:	loope  0x404033
  404019:	or     eax,0x723ff90d
  40401e:	inc    esi
  40401f:	jp     0x40403b
  404021:	cmp    bl,dl
  404023:	fidivr DWORD PTR [esi-0x66]
  404026:	push   es
  404027:	cmp    DWORD PTR [edx+0x52],esi
  40402a:	dec    ebx
  40402b:	xor    esi,DWORD PTR [esi-0x56]
  40402e:	push   ds
  40402f:	out    dx,eax
  404030:	ret    
  404031:	fild   QWORD PTR [edx+edi*8-0x2a]
  404035:	sub    BYTE PTR [edi+0x14147b62],al
  40403b:	mov    al,0x6e
  40403d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40403f:	fwait
  404040:	iret   
  404041:	xchg   ebp,eax
  404042:	inc    eax
  404043:	inc    edi
  404044:	aas    
  404045:	ror    edx,cl
  404047:	jmp    0xb8f9dd48
  40404c:	fist   WORD PTR [esi-0x6aa64d3f]
  404052:	push   cs
  404053:	adc    DWORD PTR [ebx+eax*4],ecx
  404056:	pop    edi
  404057:	sbb    al,0xc0
  404059:	mov    esi,0xa4b3a71
  40405e:	daa    
  40405f:	stc    
  404060:	scas   eax,DWORD PTR es:[edi]
  404061:	xchg   edi,eax
  404062:	(bad)  
  404063:	mov    ds:0x8dadcc20,al
  404068:	or     DWORD PTR [eax+0x76],0xda4af5d
  40406f:	in     eax,dx
  404070:	add    bl,0x4
  404073:	push   edi
  404074:	mov    edx,0x382c34d3
  404079:	xor    esp,DWORD PTR [ecx-0x227037c3]
  40407f:	pop    ebp
  404080:	enter  0xd50f,0x14
  404084:	aad    0x78
  404086:	pop    eax
  404087:	fbld   TBYTE PTR [edx+0x7d]
  40408a:	pushf  
  40408b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40408c:	push   esi
  40408d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40408e:	jne    0x404084
  404090:	push   0xffffff8a
  404092:	call   0xd1637e2d
  404097:	xor    edx,esp
  404099:	sub    al,0x63
  40409b:	(bad)  
  40409c:	cld    
  40409d:	push   esp
  40409e:	dec    ebx
  40409f:	jecxz  0x4040e0
  4040a1:	push   cs
  4040a2:	out    dx,eax
  4040a3:	cmovae eax,DWORD PTR [eax+0x6f2f18f]
  4040aa:	dec    ebx
  4040ab:	push   esp
  4040ac:	sbb    DWORD PTR [edi+0x69],eax
  4040af:	jb     0x4040f5
  4040b1:	jmp    0x4040da
  4040b3:	and    cl,al
  4040b5:	jmp    0x33:0x1a88b1cd
  4040bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4040bd:	and    esi,esi
  4040bf:	retf   0xbb6a
  4040c2:	xchg   esp,eax
  4040c3:	cmp    esi,esi
  4040c5:	push   ebx
  4040c6:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4040c8:	jecxz  0x40404e
  4040ca:	dec    eax
  4040cb:	push   ss
  4040cc:	pop    esi
  4040cd:	or     bl,BYTE PTR [ebp-0x470edf60]
  4040d3:	lahf   
  4040d4:	push   ss
  4040d5:	sub    DWORD PTR [edx],0x23
  4040d8:	xor    ch,ch
  4040da:	loop   0x4040de
  4040dc:	in     al,dx
  4040dd:	sbb    edi,ebx
  4040df:	cmp    al,0x8d
  4040e1:	(bad)  
  4040e2:	daa    
  4040e3:	mov    cl,bl
  4040e5:	add    BYTE PTR [ebp-0x1d],dh
  4040e8:	xor    esi,DWORD PTR [ebx-0x5c]
  4040eb:	dec    esp
  4040ec:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4040ee:	rcr    BYTE PTR [ebx+0x7350b109],cl
  4040f4:	clc    
  4040f5:	inc    eax
  4040f6:	js     0x404171
  4040f8:	xchg   ecx,eax
  4040f9:	mov    al,ds:0xe0451ce6
  4040fe:	hlt    
  4040ff:	xchg   edi,eax
  404100:	inc    eax
  404101:	push   ss
  404102:	in     eax,dx
  404103:	shr    BYTE PTR [esp+edi*4+0x7466d07f],0xdc
  40410b:	shl    BYTE PTR [edx],cl
  40410d:	pop    esp
  40410e:	dec    edx
  40410f:	fdiv   st(6),st
  404111:	push   es
  404112:	and    cl,BYTE PTR ds:0x69907a0f
  404118:	jb     0x40412a
  40411a:	imul   eax,esi,0xffffff97
  40411d:	add    BYTE PTR ds:0xe51fdb8d,dl
  404123:	jge    0x40411b
  404125:	cs sbb al,0x10
  404128:	(bad)  
  404129:	mov    eax,ds:0x60dc4c57
  40412e:	cmp    eax,0x2dff3bd3
  404133:	arpl   WORD PTR [ebp-0x36],ax
  404136:	lahf   
  404137:	fs out 0xb,eax
  40413a:	cwde   
  40413b:	nop
  40413c:	outs   dx,BYTE PTR ds:[esi]
  40413d:	sar    BYTE PTR [ebx+0x75872815],0x94
  404144:	adc    DWORD PTR [ebx+ebp*8],eax
  404147:	in     al,dx
  404148:	mov    ebp,0x9401fb3b
  40414d:	sbb    ebp,DWORD PTR [esi]
  40414f:	lock nop
  404151:	or     BYTE PTR [esi+esi*1],cl
  404154:	mov    DWORD PTR [edx],edi
  404156:	xchg   edi,eax
  404157:	jbe    0x404166
  404159:	imul   DWORD PTR [eax]
  40415b:	ret    0x14ac
  40415e:	repnz fidiv DWORD PTR [ebp-0x60ab4b34]
  404165:	cmc    
  404166:	call   eax
  404168:	(bad)  
  404169:	(bad)  
  40416a:	mov    edx,0x8a7bb789
  40416f:	into   
  404170:	in     al,dx
  404171:	dec    ecx
  404172:	out    0xf3,eax
  404174:	mov    esp,0x7b0d098c
  404179:	imul   ebx,DWORD PTR [ebp+0x69],0xffffff84
  40417d:	(bad)  
  40417e:	xchg   esp,eax
  40417f:	mov    al,0xca
  404181:	loopne 0x40419c
  404183:	xchg   esp,eax
  404184:	xor    DWORD PTR [ebx-0x1f],ecx
  404187:	push   ss
  404188:	sub    al,0xf6
  40418a:	mov    eax,ds:0x7180dfed
  40418f:	adc    al,0x6b
  404191:	repnz mov bl,BYTE PTR [ecx]
  404194:	inc    ebp
  404195:	and    ebp,DWORD PTR [ebx+0x7bebe485]
  40419b:	xchg   BYTE PTR [ebx],dl
  40419d:	or     dh,BYTE PTR [esp+edx*8-0x64]
  4041a1:	pop    eax
  4041a2:	fcomip st,st(7)
  4041a4:	pop    ebx
  4041a5:	xchg   esi,ebx
  4041a7:	mov    al,ds:0x9cbcbd03
  4041ac:	xor    DWORD PTR [ebp-0x58],esi
  4041af:	js     0x40414c
  4041b1:	and    ah,0x7a
  4041b4:	push   cs
  4041b5:	repz sub BYTE PTR [ecx],cl
  4041b8:	ror    dh,0x70
  4041bb:	mov    DWORD PTR [eax],eax
  4041bd:	test   eax,0x2e9fbbc7
  4041c2:	or     eax,esi
  4041c4:	lods   eax,DWORD PTR ds:[esi]
  4041c5:	shl    esi,cl
  4041c7:	lds    eax,FWORD PTR [eax]
  4041c9:	mov    dh,0x50
  4041cb:	iret   
  4041cc:	xor    eax,0xcdfc2674
  4041d1:	in     eax,dx
  4041d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d3:	in     al,dx
  4041d4:	add    ah,BYTE PTR [ebx+esi*2+0x4265040c]
  4041db:	fs out dx,al
  4041dd:	jge    0x404197
  4041df:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4041e1:	sldt   WORD PTR [esi+0x71]
  4041e5:	xchg   ch,ch
  4041e7:	pop    ds
  4041e8:	add    ch,bl
  4041ea:	loopne 0x40417d
  4041ec:	int    0x54
  4041ee:	loope  0x404221
  4041f0:	nop
  4041f1:	or     DWORD PTR [edx-0x5a2048aa],ecx
  4041f7:	int    0x30
  4041f9:	xchg   ebx,eax
  4041fa:	mov    ds:0x2c384bc1,al
  4041ff:	jle    0x40427b
  404201:	push   ebp
  404202:	dec    ebp
  404203:	stos   BYTE PTR es:[edi],al
  404204:	nop
  404205:	hlt    
  404206:	adc    bh,BYTE PTR [eax+0x62d2a89f]
  40420c:	(bad)  
  40420d:	pop    ds
  40420e:	sbb    ebp,DWORD PTR [edx-0x3a]
  404211:	or     al,BYTE PTR [esi+0x4f]
  404214:	xchg   edx,eax
  404215:	ds xchg esi,eax
  404217:	push   ds
  404218:	out    0xbb,eax
  40421a:	adc    al,0xc7
  40421c:	dec    eax
  40421d:	test   eax,0xbc3ae2be
  404222:	xor    eax,0xc3f7b4a2
  404227:	arpl   WORD PTR [ecx+eax*1-0x5b926ebe],cx
  40422e:	dec    edi
  40422f:	xor    al,0x95
  404231:	xchg   edi,eax
  404232:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404233:	enter  0x9bde,0x9a
  404237:	xchg   BYTE PTR ds:0x5e9dc517,bl
  40423d:	dec    edx
  40423e:	pop    edi
  40423f:	push   edx
  404240:	pop    es
  404241:	mov    DWORD PTR [edx],ecx
  404243:	sbb    DWORD PTR [edi-0x1180e949],ecx
  404249:	pushf  
  40424a:	std    
  40424b:	mov    bl,0x58
  40424d:	aad    0xf1
  40424f:	dec    edi
  404250:	xor    eax,DWORD PTR gs:[edx+0x74]
  404254:	mov    dl,0xd6
  404256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404257:	push   ebp
  404258:	push   ds
  404259:	jae    0x4042bf
  40425b:	call   0x9b3e:0xf61c88af
  404262:	sbb    eax,0xcb913eed
  404267:	loopne 0x404261
  404269:	leave  
  40426a:	ret    
  40426b:	fs dec ecx
  40426d:	push   ds
  40426e:	sbb    DWORD PTR ds:0xce8097d7,edi
  404274:	call   0x50751880
  404279:	or     eax,DWORD PTR [ebx+0x5d]
  40427c:	inc    eax
  40427d:	push   cs
  40427e:	retf   0xecd7
  404281:	push   es
  404282:	shr    bl,0x23
  404285:	pop    eax
  404286:	push   es
  404287:	(bad)  
  404288:	in     al,0xd9
  40428a:	popf   
  40428b:	loope  0x40422e
  40428d:	sahf   
  40428e:	std    
  40428f:	out    dx,al
  404290:	xchg   esp,eax
  404291:	fwait
  404292:	loope  0x4042e3
  404294:	mov    bl,0x47
  404296:	xchg   ebp,eax
  404297:	push   esi
  404298:	fwait
  404299:	mov    BYTE PTR [ebx+0x6e],bl
  40429c:	mov    bl,0x22
  40429e:	addr16 and eax,ebp
  4042a1:	mov    dl,0x39
  4042a3:	mov    cl,0x7a
  4042a5:	or     BYTE PTR [ecx-0x21f50e29],ah
  4042ab:	neg    BYTE PTR [edi-0x9]
  4042ae:	cwde   
  4042af:	es dec esi
  4042b1:	adc    esp,0xffffff9a
  4042b4:	arpl   WORD PTR [edx+0x49],cx
  4042b7:	add    esi,ebp
  4042b9:	adc    al,0xee
  4042bb:	add    al,BYTE PTR [edi-0x62]
  4042be:	pop    ss
  4042bf:	outs   dx,BYTE PTR ds:[esi]
  4042c0:	shr    bl,0x36
  4042c3:	cs or  al,0x5a
  4042c6:	(bad)  
  4042c7:	js     0x4042d5
  4042c9:	sub    esp,esi
  4042cb:	and    al,0xa3
  4042cd:	xor    eax,0x58972c27
  4042d2:	aas    
  4042d3:	dec    esi
  4042d4:	cdq    
  4042d5:	dec    esi
  4042d6:	imul   eax,DWORD PTR [ebx],0x2b20ad4
  4042dc:	adc    edx,ecx
  4042de:	in     eax,dx
  4042df:	mov    dl,0xb2
  4042e1:	jle    0x4042d0
  4042e3:	cs push es
  4042e5:	arpl   WORD PTR [ebp+0xc37c52c],bx
  4042eb:	test   ebx,ebx
  4042ed:	dec    eax
  4042ee:	push   esp
  4042ef:	(bad)  
  4042f0:	xor    DWORD PTR [ecx-0x78f4dd84],ecx
  4042f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4042f7:	and    al,0xa5
  4042f9:	jmp    0x22ceba98
  4042fe:	int3   
  4042ff:	test   cl,ah
  404301:	inc    eax
  404302:	and    dh,BYTE PTR [edx]
  404304:	out    dx,al
  404305:	scas   eax,DWORD PTR es:[edi]
  404306:	iret   
  404307:	sbb    esi,0x4e
  40430a:	pop    ebx
  40430b:	inc    edx
  40430c:	xchg   DWORD PTR [edx-0x1d],esp
  40430f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404310:	pop    eax
  404311:	imul   ecx,DWORD PTR [eax-0x9],0x7e
  404315:	jmp    0x404301
  404317:	jecxz  0x40435d
  404319:	adc    bh,BYTE PTR [ebx]
  40431b:	mov    ebx,0xaf4ef96e
  404320:	iret   
  404321:	outs   dx,BYTE PTR ds:[esi]
  404322:	jp     0x4042b6
  404324:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404325:	inc    edi
  404326:	lds    eax,FWORD PTR [ebx+0x53]
  404329:	fimul  DWORD PTR [eax+0x543e9d5]
  40432f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404330:	cmp    dx,sp
  404333:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404334:	xchg   ecx,eax
  404335:	ret    0xd1ea
  404338:	pop    ebx
  404339:	sbb    ch,ch
  40433b:	arpl   WORD PTR [edi-0x3bb11b2a],ax
  404341:	adc    DWORD PTR [esi],ebp
  404343:	mov    ebp,cs
  404345:	or     BYTE PTR [ebx+ebp*2],bl
  404348:	mov    bl,0x5e
  40434a:	adc    cl,BYTE PTR [edi]
  40434c:	dec    edi
  40434d:	cdq    
  40434e:	lock push ss
  404350:	jbe    0x4043a7
  404352:	inc    eax
  404353:	add    DWORD PTR [ecx+ebx*4-0x7d],edi
  404357:	rcl    BYTE PTR [edx-0x7d],1
  40435a:	ins    BYTE PTR es:[edi],dx
  40435b:	mov    dl,0x8f
  40435d:	sub    BYTE PTR [ecx-0x54dbddda],bl
  404363:	sub    eax,0x4cd0aa59
  404368:	fdiv   DWORD PTR [esi-0x14]
  40436b:	cmp    ah,0x1
  40436e:	cmp    ebp,DWORD PTR [eax-0x3c8f880b]
  404374:	mov    ch,0x6d
  404376:	mov    bl,0x80
  404378:	inc    edi
  404379:	addr16 inc edi
  40437b:	popf   
  40437c:	jg     0x4043da
  40437e:	mov    ds:0x51a1014d,al
  404383:	ret    0xc02a
  404386:	and    al,0x81
  404388:	pop    ds
  404389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40438a:	cmp    eax,0x287059fe
  40438f:	xchg   edx,eax
  404390:	jo     0x404358
  404392:	jae    0x404337
  404394:	push   0x3f
  404396:	ins    DWORD PTR es:[edi],dx
  404397:	mov    ebp,0xb2b1bc63
  40439c:	test   BYTE PTR [esi-0x4a8d0a11],dh
  4043a2:	scas   al,BYTE PTR es:[edi]
  4043a3:	xor    DWORD PTR [esp+ebp*1+0x79],esi
  4043a7:	shl    DWORD PTR [edx-0x30],0x6b
  4043ab:	jge    0x4043c0
  4043ad:	mov    cl,BYTE PTR [ecx]
  4043af:	xchg   ecx,eax
  4043b0:	fmul   QWORD PTR [ecx-0x76]
  4043b3:	cmp    al,0xef
  4043b5:	or     al,0x48
  4043b7:	(bad)  
  4043b8:	xor    al,0xc3
  4043ba:	in     eax,0x84
  4043bc:	mov    ebp,0x7d4890ca
  4043c1:	js     0x4043c7
  4043c3:	push   ecx
  4043c4:	jb     0x4043b5
  4043c6:	push   DWORD PTR [edx]
  4043c8:	sub    BYTE PTR [eax-0xa],bh
  4043cb:	add    esp,DWORD PTR [edi+0x11c31f8]
  4043d1:	sub    ecx,0xffffffef
  4043d4:	add    DWORD PTR [edi+0x7d96c5ec],ebp
  4043da:	dec    ebp
  4043db:	mov    eax,0xc447bd9d
  4043e0:	arpl   WORD PTR [ebx+0x60e5cf0a],dx
  4043e6:	fidivr DWORD PTR [ebp+0xb5cd0f9]
  4043ec:	cmp    bh,BYTE PTR [eax+0x33]
  4043ef:	adc    esp,ecx
  4043f1:	adc    DWORD PTR [edx],esp
  4043f3:	jge    0x40443d
  4043f5:	or     esi,edx
  4043f7:	mov    bh,0x2b
  4043f9:	(bad)  
  4043fa:	cmc    
  4043fb:	inc    eax
  4043fc:	in     eax,dx
  4043fd:	push   edi
  4043fe:	cmp    eax,DWORD PTR [ecx-0x9]
  404401:	icebp  
  404402:	mov    eax,ds:0x2239d8d0
  404407:	dec    esi
  404409:	jecxz  0x4043f3
  40440b:	call   0xa8af:0x426b37d0
  404412:	ja     0x404410
  404414:	arpl   WORD PTR [ebp+0x4f],bx
  404417:	xchg   ebp,eax
  404418:	data16 fisub WORD PTR [esi-0x52]
  40441c:	rcl    DWORD PTR [ecx-0x118f16b1],0xc8
  404423:	imul   esp,DWORD PTR [ebp+eax*8-0x5a],0xffffffcf
  404428:	mov    dh,0x5f
  40442a:	mov    edx,0xd1976a9a
  40442f:	xchg   esi,eax
  404430:	data16 mov ds:0x85e7a44b,al
  404436:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404437:	(bad)  
  404438:	sti    
  404439:	std    
  40443a:	sbb    eax,0x75b4b39b
  40443f:	push   ss
  404440:	push   ebp
  404441:	fisubr WORD PTR cs:[edx]
  404444:	out    dx,eax
  404445:	inc    ecx
  404446:	outs   dx,DWORD PTR ds:[esi]
  404447:	scas   eax,DWORD PTR es:[edi]
  404448:	in     al,dx
  404449:	or     al,0xc1
  40444b:	xchg   edx,eax
  40444c:	fild   QWORD PTR [eax-0x6c]
  40444f:	aas    
  404450:	inc    edx
  404451:	pop    eax
  404452:	mov    al,0x93
  404454:	sub    al,0x37
  404457:	sbb    DWORD PTR [ecx],edx
  404459:	cmp    eax,0xf0b9ba8f
  40445e:	aaa    
  40445f:	aad    0x14
  404461:	and    eax,esi
  404463:	adc    bh,BYTE PTR [ebp-0x26]
  404466:	pushf  
  404467:	adc    ah,bh
  404469:	mov    edi,0xd0965d7a
  40446e:	push   ss
  40446f:	jecxz  0x404403
  404471:	fadd   DWORD PTR [eax-0x34]
  404474:	clc    
  404475:	in     eax,0x23
  404477:	(bad)  
  404478:	push   edi
  404479:	dec    ecx
  40447a:	sar    BYTE PTR ds:0xfe53e88f,1
  404480:	sar    ebx,0x94
  404483:	xor    BYTE PTR [edi],cl
  404485:	adc    BYTE PTR [edi-0x48],al
  404488:	push   eax
  404489:	and    bl,BYTE PTR [ebp-0x62]
  40448c:	ror    DWORD PTR [esi],1
  40448e:	mov    al,0xac
  404490:	iret   
  404491:	or     eax,0xc19f8d8e
  404496:	js     0x404432
  404498:	dec    ecx
  404499:	ins    DWORD PTR es:[edi],dx
  40449a:	(bad)  [edx]
  40449c:	shr    BYTE PTR [ecx-0x5b],0xe9
  4044a0:	lea    eax,[edi]
  4044a2:	mov    ds:0x31237d7,al
  4044a7:	loope  0x404510
  4044a9:	ds inc ebx
  4044ab:	test   DWORD PTR [esi-0x5d],ebx
  4044ae:	gs dec esi
  4044b0:	aam    0x67
  4044b2:	gs js  0x404445
  4044b5:	popf   
  4044b6:	xchg   esp,eax
  4044b7:	lea    ebp,[ebx+0x65]
  4044ba:	sbb    bh,al
  4044bc:	out    dx,eax
  4044bd:	sub    al,0xa5
  4044bf:	stos   DWORD PTR es:[edi],eax
  4044c0:	mov    gs,WORD PTR [eax-0x6094252f]
  4044c6:	repz in al,dx
  4044c8:	xor    dh,BYTE PTR [ecx+ebx*1-0x23cad260]
  4044cf:	shl    DWORD PTR [esi],1
  4044d1:	and    DWORD PTR [edi+0xaca0160],0x9a5abc4c
  4044db:	cmc    
  4044dc:	outs   dx,DWORD PTR ds:[esi]
  4044dd:	sbb    DWORD PTR [edx+0x44],0xffffffde
  4044e1:	in     eax,0xa
  4044e3:	mov    esp,0xb35b06ec
  4044e8:	pop    esi
  4044e9:	add    eax,0x7d62d58f
  4044ee:	data16 mov dh,0xfa
  4044f1:	icebp  
  4044f2:	aaa    
  4044f3:	ins    DWORD PTR es:[edi],dx
  4044f4:	adc    cl,BYTE PTR [ebx+0x3fa78482]
  4044fa:	stos   BYTE PTR es:[edi],al
  4044fb:	and    al,0x86
  4044fd:	fldcw  WORD PTR [ebp-0x1c]
  404500:	dec    esi
  404501:	push   esi
  404502:	(bad)  
  404503:	pop    ebx
  404504:	and    ecx,DWORD PTR [esi+0x4e]
  404507:	test   al,0x69
  404509:	imul   esp,DWORD PTR [ecx-0x25213285],0xffffffb3
  404510:	add    eax,DWORD PTR [esi]
  404512:	mov    WORD PTR [esi],ds
  404514:	mov    ds:0x89be2222,al
  404519:	int    0xce
  40451b:	cs daa 
  40451d:	ror    ebp,1
  40451f:	sub    DWORD PTR [ebx],edx
  404521:	jbe    0x40458e
  404523:	push   cs
  404524:	and    eax,0x8ebaa7ab
  404529:	jmp    0x404533
  40452b:	(bad)  
  40452d:	jns    0x4044e2
  40452f:	pop    ebp
  404530:	dec    ebp
  404531:	xlat   BYTE PTR ds:[ebx]
  404532:	sub    dh,ch
  404534:	jnp    0x404515
  404536:	aaa    
  404537:	jb     0x404572
  404539:	pop    ss
  40453a:	inc    edx
  40453b:	mov    BYTE PTR ds:0x8327556d,al
  404541:	rol    BYTE PTR [ecx],1
  404543:	and    al,0xae
  404545:	(bad)
  40454a:	inc    ebx
  40454b:	inc    esp
  40454c:	scas   eax,DWORD PTR es:[edi]
  40454d:	and    DWORD PTR [ecx+0x31],ecx
  404550:	iret   
  404551:	jp     0x4045b6
  404553:	popa   
  404554:	and    eax,0xad532f89
  404559:	jge    0x404531
  40455b:	in     al,0x64
  40455d:	je     0x4045bf
  40455f:	and    DWORD PTR [ecx+esi*4-0x6b],esi
  404563:	(bad)  
  404564:	xor    eax,0x58b769ab
  404569:	popf   
  40456a:	lods   eax,DWORD PTR ds:[esi]
  40456b:	xor    cl,BYTE PTR [eax+0x645cb861]
  404571:	xchg   DWORD PTR fs:[esi-0x43],esp
  404575:	mov    edi,0x27c0df85
  40457a:	xchg   esi,eax
  40457b:	loopne 0x404557
  40457d:	add    ch,al
  40457f:	jle    0x4045a8
  404581:	jmp    0x4045e7
  404583:	mov    WORD PTR [esi],fs
  404585:	xor    bl,BYTE PTR [ecx-0x5]
  404588:	mov    al,ds:0x6c2f9ac6
  40458d:	adc    al,0xf3
  40458f:	fimul  DWORD PTR [esi+0x3c]
  404592:	and    ah,BYTE PTR [ebx-0x2cf746a4]
  404598:	shl    DWORD PTR [esi-0xc],1
  40459b:	leave  
  40459c:	outs   dx,BYTE PTR ds:[esi]
  40459d:	aas    
  40459e:	lea    ebp,[ecx-0x4b]
  4045a1:	retf   0x2cc0
  4045a4:	adc    BYTE PTR ds:0x97279231,ah
  4045aa:	shr    DWORD PTR [edx-0xf],cl
  4045ad:	es ss clc 
  4045b0:	mov    ds:0x1510dca6,al
  4045b5:	into   
  4045b6:	pop    ss
  4045b7:	out    dx,al
  4045b8:	push   edx
  4045b9:	das    
  4045ba:	call   DWORD PTR [ecx]
  4045bc:	xchg   ebx,eax
  4045bd:	fisttp QWORD PTR [esi-0x1f2140cb]
  4045c3:	cmp    al,0x10
  4045c5:	sub    cl,cl
  4045c7:	fst    QWORD PTR [ebx-0x2d]
  4045ca:	jne    0x404619
  4045cc:	lods   eax,DWORD PTR ds:[esi]
  4045cd:	ins    DWORD PTR es:[edi],dx
  4045ce:	stc    
  4045cf:	faddp  st(2),st
  4045d1:	cmp    edi,esp
  4045d3:	and    ebp,DWORD PTR [ecx-0x3b]
  4045d6:	and    al,0x73
  4045d8:	ffree  st(3)
  4045da:	or     eax,0x19eb419c
  4045df:	xor    ebx,eax
  4045e1:	mov    dl,0x1d
  4045e3:	sub    eax,DWORD PTR [esi+eax*8-0x31]
  4045e7:	ins    BYTE PTR es:[edi],dx
  4045e8:	js     0x404659
  4045ea:	stos   DWORD PTR es:[edi],eax
  4045eb:	mov    ebp,0x8f74c42
  4045f0:	(bad)  
  4045f1:	push   ds
  4045f2:	or     al,0xd5
  4045f4:	stos   BYTE PTR es:[edi],al
  4045f5:	cmc    
  4045f6:	lahf   
  4045f7:	stos   DWORD PTR es:[edi],eax
  4045f8:	pop    esp
  4045f9:	xchg   esp,eax
  4045fa:	mov    ds:0x9044d7a6,al
  4045ff:	retf   0x4cb7
  404602:	pop    eax
  404603:	push   0xb
  404605:	sub    eax,edx
  404607:	and    DWORD PTR [ebp-0x91ed04e],eax
  40460d:	cli    
  40460e:	adc    bl,BYTE PTR [ecx+0x16]
  404611:	and    BYTE PTR [edi+0x70],bh
  404614:	stos   DWORD PTR es:[edi],eax
  404615:	mov    ds:0x41e2c2bb,eax
  40461a:	fcmovnu st,st(2)
  40461c:	sub    dh,bl
  40461e:	mov    cl,0x77
  404620:	ds pop edi
  404622:	push   ss
  404623:	(bad)  
  404624:	adc    al,0xc
  404626:	mov    BYTE PTR [ebx+0x4f],ch
  404629:	jg     0x40465a
  40462b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40462c:	fldenv [eax-0x7fe59908]
  404632:	inc    esp
  404633:	or     al,0x7a
  404635:	xor    BYTE PTR [ebx-0x3d43c2e7],0x39
  40463c:	jl     0x4046bd
  40463e:	add    cl,BYTE PTR [edi+0x3e]
  404641:	and    dl,bl
  404643:	pushf  
  404644:	ins    BYTE PTR es:[edi],dx
  404645:	dec    esp
  404646:	out    0x5e,al
  404648:	cdq    
  404649:	jp     0x4045d2
  40464b:	js     0x4046cc
  40464d:	out    0xb1,al
  40464f:	dec    esp
  404650:	(bad)  
  404651:	stos   DWORD PTR es:[edi],eax
  404652:	cs or  eax,0x5120684f
  404658:	cmp    ah,BYTE PTR [edi+ebp*8+0x65]
  40465c:	inc    edi
  40465d:	int3   
  40465e:	xor    al,0xf7
  404660:	gs out dx,eax
  404662:	(bad)  
  404663:	pop    ebx
  404664:	out    0x34,al
  404666:	or     DWORD PTR [ecx-0x47],esp
  404669:	pop    ds
  40466a:	or     esp,eax
  40466c:	xchg   ebx,eax
  40466d:	pop    es
  40466e:	je     0x40463b
  404670:	sbb    DWORD PTR [edi],edx
  404672:	into   
  404673:	inc    edx
  404674:	iret   
  404675:	popf   
  404676:	push   ss
  404677:	loope  0x40467e
  404679:	inc    esi
  40467a:	pop    edi
  40467b:	and    edx,DWORD PTR [esi+eax*8-0x6257b91e]
  404682:	shl    BYTE PTR [ecx],0xf6
  404685:	dec    ebx
  404686:	mov    al,ds:0xc178bb1e
  40468b:	cld    
  40468c:	pop    es
  40468d:	fwait
  40468e:	pop    esp
  40468f:	adc    ah,ah
  404691:	loop   0x404615
  404693:	pop    edx
  404694:	push   0xffffff97
  404696:	test   di,cx
  404699:	add    DWORD PTR [ecx+0x3b],ecx
  40469c:	test   bl,0x73
  40469f:	stos   BYTE PTR es:[edi],al
  4046a0:	xchg   esi,eax
  4046a1:	int    0x53
  4046a3:	cmp    esp,edx
  4046a5:	fld    DWORD PTR [ecx+ebx*2-0x1]
  4046a9:	stos   BYTE PTR es:[edi],al
  4046aa:	addr16 iret 
  4046ac:	ret    0x773c
  4046af:	mov    fs,WORD PTR [ebp-0x54]
  4046b2:	daa    
  4046b3:	and    BYTE PTR [ebx-0x75],ah
  4046b6:	test   eax,0x18e2d49
  4046bb:	xchg   eax,ebp
  4046bd:	add    esi,DWORD PTR [ebx+0xb]
  4046c0:	dec    edi
  4046c1:	xlat   BYTE PTR ds:[ebx]
  4046c2:	pop    ebx
  4046c3:	dec    ecx
  4046c4:	pushf  
  4046c5:	push   es
  4046c6:	xchg   ebp,eax
  4046c7:	or     al,0x81
  4046c9:	int    0x30
  4046cb:	sbb    ebx,DWORD PTR [esi]
  4046cd:	dec    edi
  4046ce:	add    BYTE PTR [ebx+edi*8],dh
  4046d1:	loop   0x404742
  4046d3:	sbb    bh,BYTE PTR [edx+ecx*4+0x62]
  4046d7:	out    dx,eax
  4046d8:	add    eax,0xd974fca6
  4046de:	xlat   BYTE PTR ds:[ebx]
  4046df:	ret    
  4046e0:	cdq    
  4046e1:	mov    al,ds:0xdd76c484
  4046e6:	or     ecx,DWORD PTR [ebx+0x59]
  4046e9:	in     al,0xab
  4046eb:	jp     0x4046a5
  4046ed:	sub    cl,BYTE PTR [esi+0x79f5316c]
  4046f3:	inc    esp
  4046f4:	into   
  4046f5:	and    cl,BYTE PTR [edi-0x80]
  4046f8:	scas   al,BYTE PTR es:[edi]
  4046f9:	push   esi
  4046fa:	fs stos BYTE PTR es:[edi],al
  4046fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4046fe:	fwait
  4046ff:	add    BYTE PTR [ebp+0x797cdde0],dl
  404705:	(bad)  
  404707:	cmp    DWORD PTR [ebx-0x56e88ffb],esp
  40470d:	push   eax
  40470e:	les    esi,FWORD PTR [edx]
  404710:	xlat   BYTE PTR ds:[ebx]
  404711:	cmovns edi,eax
  404714:	ins    DWORD PTR es:[edi],dx
  404715:	std    
  404716:	ins    BYTE PTR es:[edi],dx
  404717:	and    al,0x85
  404719:	out    dx,al
  40471a:	cmp    BYTE PTR [ebx+ecx*4+0x3d],cl
  40471e:	inc    edi
  40471f:	xlat   BYTE PTR ds:[ebx]
  404720:	adc    BYTE PTR [eax+0x4f],ah
  404723:	jmp    0x4046eb
  404725:	xchg   ecx,ebx
  404727:	in     eax,dx
  404728:	adc    eax,0xd2f21fdf
  40472d:	jmp    0x4f3d:0x4c7b8a7e
  404734:	outs   dx,DWORD PTR ds:[esi]
  404735:	mov    eax,0x980bd491
  40473a:	fistp  DWORD PTR [ecx-0x5a4192b3]
  404740:	outs   dx,DWORD PTR ds:[esi]
  404741:	xor    edi,DWORD PTR [ecx-0x16c11f4b]
  404747:	(bad)  
  404748:	push   ss
  404749:	ja     0x4047c9
  40474b:	int3   
  40474c:	mov    edi,DWORD PTR [ecx]
  40474e:	and    eax,0x4495286c
  404753:	dec    ebp
  404754:	scas   al,BYTE PTR es:[edi]
  404755:	(bad)  
  404756:	push   eax
  404757:	mov    ebp,0xb4fae5ba
  40475c:	push   edi
  40475d:	(bad)  
  40475e:	mov    ds:0xa3902cd5,al
  404763:	repnz retf 0xd090
  404767:	jl     0x404785
  404769:	fidiv  WORD PTR [edx-0x33]
  40476c:	jle    0x40479b
  40476e:	sti    
  40476f:	xchg   ecx,eax
  404770:	pushf  
  404771:	add    DWORD PTR [ebp-0x6],edi
  404774:	dec    edx
  404775:	jmp    0x40471e
  404777:	push   ds
  404778:	fcmovnbe st,st(5)
  40477a:	out    0xc4,eax
  40477c:	cmp    dl,dh
  40477e:	cmp    DWORD PTR [esp+edx*1+0x5892bad0],0x55
  404786:	push   eax
  404787:	pop    ss
  404788:	retf   0xb743
  40478b:	sti    
  40478c:	ret    0x759e
  40478f:	std    
  404790:	jo     0x4047ea
  404792:	fmul   DWORD PTR [edi]
  404794:	dec    bh
  404796:	ret    0x13c0
  404799:	jae    0x404749
  40479b:	stc    
  40479c:	or     eax,0xe5c5d6b6
  4047a1:	test   al,0xb
  4047a3:	sub    ch,BYTE PTR [edi+0x5160daa8]
  4047a9:	pop    edi
  4047aa:	jo     0x4047aa
  4047ac:	dec    eax
  4047ad:	jbe    0x404796
  4047af:	push   edx
  4047b0:	xlat   BYTE PTR ds:[ebx]
  4047b1:	mov    dh,0x2
  4047b3:	push   ss
  4047b4:	fidiv  DWORD PTR [ebx-0x32]
  4047b7:	dec    esi
  4047b8:	je     0x40477d
  4047ba:	imul   esi,DWORD PTR [ecx-0x32],0x2d
  4047be:	sbb    cl,0x26
  4047c1:	mov    al,ds:0xc53cc528
  4047c6:	add    edx,esp
  4047c8:	cmp    al,0xb5
  4047ca:	mov    al,0x5f
  4047cc:	sub    ecx,DWORD PTR [ecx-0x60]
  4047cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047d0:	adc    DWORD PTR [esp+edx*4+0x18],esp
  4047d4:	fisttp DWORD PTR [eax-0x64b429d4]
  4047da:	inc    eax
  4047db:	outs   dx,BYTE PTR ds:[esi]
  4047dc:	xchg   DWORD PTR [esi],edi
  4047de:	xor    DWORD PTR ds:0x2195d500,esi
  4047e4:	push   esi
  4047e5:	aam    0xe5
  4047e7:	mov    al,0x16
  4047e9:	js     0x4047e7
  4047eb:	cmp    BYTE PTR [ecx-0x3db55719],0xed
  4047f2:	stos   BYTE PTR es:[edi],al
  4047f3:	jg     0x4047dc
  4047f5:	stos   BYTE PTR es:[edi],al
  4047f6:	out    dx,eax
  4047f7:	xchg   ebx,eax
  4047f8:	mov    dh,0xb9
  4047fa:	sbb    BYTE PTR [ebx-0xe],al
  4047fd:	cpuid  
  4047ff:	cmp    al,0x6c
  404801:	xchg   edi,eax
  404802:	dec    edi
  404803:	ds inc ecx
  404805:	sti    
  404806:	dec    esp
  404807:	lock mov esi,0x65355522
  40480d:	fstp   DWORD PTR [ecx+0x4a]
  404810:	pop    ss
  404811:	add    ebx,0x2a
  404814:	jbe    0x40481a
  404816:	add    bh,cl
  404818:	mov    ah,0x61
  40481a:	cmc    
  40481b:	lds    ecx,FWORD PTR [eax+0x548dd814]
  404821:	sbb    eax,0x199f66cd
  404826:	xchg   ebx,eax
  404827:	int3   
  404828:	adc    cl,dh
  40482a:	rol    dh,1
  40482c:	sbb    dl,BYTE PTR [ebx]
  40482e:	lahf   
  40482f:	neg    DWORD PTR [esi]
  404831:	mov    eax,0xa4da4852
  404836:	fnstenv [edi+0x4f]
  404839:	push   ebp
  40483a:	ja     0x4047ca
  40483c:	add    DWORD PTR [eax],edx
  40483e:	iret   
  40483f:	and    ecx,DWORD PTR [ebx+0x4bdd229f]
  404845:	ror    DWORD PTR [ebx+0x23fcd560],cl
  40484b:	push   es
  40484c:	pop    eax
  40484d:	imul   esp,esi,0xfffffffb
  404850:	mov    BYTE PTR [ebx],ch
  404852:	pop    ebx
  404853:	loopne 0x404890
  404855:	mov    ds:0x6ff90fef,eax
  40485a:	mov    cl,0x1e
  40485c:	lea    ecx,[ebp+0x72]
  40485f:	dec    edi
  404860:	das    
  404861:	and    eax,DWORD PTR [edx-0x58fa58d2]
  404867:	ud0    edx,DWORD PTR [edx+eiz*1+0x515a71b4]
  40486f:	imul   ebp,ecx,0x8dffe5df
  404875:	ins    BYTE PTR es:[edi],dx
  404876:	int    0x51
  404878:	pop    edi
  404879:	jmp    0x404868
  40487b:	push   cs
  40487c:	stc    
  40487d:	es mov cl,0x6c
  404880:	mov    ebp,0x748c1060
  404885:	retf   0x4a99
  404888:	loopne 0x40481f
  40488a:	fiadd  WORD PTR [ebx-0x2f164f84]
  404890:	inc    edi
  404891:	mov    esp,DWORD PTR [ebx]
  404893:	(bad)  
  404894:	push   edi
  404895:	gs int3 
  404897:	fiadd  DWORD PTR [esi]
  404899:	sahf   
  40489a:	xchg   ebx,edx
  40489c:	dec    eax
  40489d:	jmp    0x4048c1
  40489f:	mov    ds:0x4217d274,eax
  4048a4:	xchg   esi,eax
  4048a5:	out    dx,al
  4048a6:	cwde   
  4048a7:	das    
  4048a8:	fild   DWORD PTR [esi]
  4048aa:	sub    bh,al
  4048ac:	push   0x9b262a99
  4048b1:	xor    al,0x5d
  4048b3:	test   DWORD PTR [ebp+0x6d],ecx
  4048b6:	cmp    esi,DWORD PTR [ecx+ebx*1+0x3c4381ee]
  4048bd:	push   ebp
  4048be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048bf:	xchg   ebx,eax
  4048c0:	mov    es,WORD PTR ds:0xad3c788d
  4048c6:	and    BYTE PTR [edx],bh
  4048c8:	mov    cl,0xdb
  4048ca:	icebp  
  4048cb:	cmp    eax,0x10d8b10e
  4048d0:	push   cs
  4048d1:	xchg   ebp,eax
  4048d2:	ret    
  4048d3:	jbe    0x4048dd
  4048d5:	fld    st(3)
  4048d7:	sbb    dh,ch
  4048d9:	ret    
  4048da:	sub    eax,esp
  4048dc:	xor    eax,0x2f198e72
  4048e1:	inc    ebx
  4048e2:	add    BYTE PTR [edi+eiz*8],ah
  4048e5:	push   es
  4048e6:	dec    ebx
  4048e7:	scas   eax,DWORD PTR es:[edi]
  4048e8:	sar    DWORD PTR [edi-0x1aa89b58],1
  4048ee:	(bad)
  4048f3:	push   edi
  4048f4:	stc    
  4048f5:	and    eax,0xab131385
  4048fa:	xchg   esi,eax
  4048fb:	(bad)  
  4048fc:	loop   0x404911
  4048fe:	mov    DWORD PTR [ecx-0x58089381],edi
  404904:	jnp    0x4048fa
  404906:	call   0x3efc:0xcaeea265
  40490d:	and    DWORD PTR [eax],0xd400b6c9
  404913:	cmp    esp,DWORD PTR [ebx+0x42b901c4]
  404919:	mov    ebp,0x6121148d
  40491e:	xchg   ebp,eax
  40491f:	out    0xd9,al
  404921:	or     bl,BYTE PTR [esi+ebp*1+0xb4f6443]
  404928:	leave  
  404929:	mov    al,0x2a
  40492b:	or     esi,edi
  40492d:	mov    gs,WORD PTR [eax-0x40e365d9]
  404933:	dec    edi
  404934:	arpl   WORD PTR [ecx+ebp*8+0x36166154],bp
  40493b:	shr    DWORD PTR [ecx+ebx*1],cl
  40493e:	or     eax,0x25529666
  404943:	in     al,0x15
  404945:	lds    eax,FWORD PTR [edx-0x69]
  404948:	mov    ebx,0xa85369b2
  40494d:	mov    al,0x26
  40494f:	repz sub eax,0xd0b98546
  404955:	out    dx,eax
  404956:	scas   eax,DWORD PTR es:[edi]
  404957:	mov    ah,cl
  404959:	test   eax,0xb3b06706
  40495e:	lds    edx,FWORD PTR [ebx+0x48]
  404961:	mov    dh,0x72
  404963:	(bad)  
  404965:	rcr    ecx,0xd8
  404968:	add    bh,cl
  40496a:	pop    esi
  40496b:	push   edi
  40496c:	or     esi,esp
  40496e:	addr16 mov ds:0x231f,al
  404972:	pop    edi
  404973:	add    cl,BYTE PTR [esi+0x41]
  404976:	cli    
  404977:	je     0x4049af
  404979:	and    dl,ch
  40497b:	ins    BYTE PTR es:[edi],dx
  40497c:	sub    edx,ebx
  40497e:	loop   0x404998
  404980:	mov    esi,0xe37f07f6
  404985:	and    al,0x94
  404987:	mov    esp,0x3a43c136
  40498c:	jl     0x40499a
  40498e:	xor    eax,0x7e7ac9b7
  404993:	jne    0x404966
  404995:	pop    edi
  404996:	pusha  
  404997:	xor    DWORD PTR [esi+0x57051a30],0xa440b3b4
  4049a1:	fmul   QWORD PTR [esp+ecx*2+0x1a4f103f]
  4049a8:	in     eax,0x99
  4049aa:	jg     0x404943
  4049ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049ad:	or     DWORD PTR [eax+0x27c4f5a2],ebx
  4049b3:	adc    al,0xa7
  4049b5:	imul   ebx,DWORD PTR [ebx],0xce91864a
  4049bb:	ins    BYTE PTR es:[edi],dx
  4049bc:	ds add al,0xe9
  4049bf:	pop    eax
  4049c0:	xor    ch,bh
  4049c2:	fwait
  4049c3:	in     al,0xd
  4049c5:	jnp    0x4049bb
  4049c7:	mov    WORD PTR [ebx-0x433afff9],ss
  4049cd:	push   0x5b16e922
  4049d2:	call   0x8a577b2a
  4049d7:	cmp    ebx,DWORD PTR ds:0xf1c4bdeb
  4049dd:	dec    ebx
  4049de:	arpl   WORD PTR [esi+ebp*1],sp
  4049e1:	adc    DWORD PTR [edx-0x34],ecx
  4049e4:	daa    
  4049e5:	int    0x38
  4049e7:	pop    ebp
  4049e8:	jmp    0xe4b53801
  4049ed:	test   DWORD PTR [edi+0x54],ecx
  4049f0:	rcl    DWORD PTR [ebx+0x8],0xc6
  4049f4:	ss cld 
  4049f6:	aas    
  4049f7:	mov    ch,0xc5
  4049f9:	pusha  
  4049fa:	cmp    DWORD PTR [bp-0x3adf],edi
  4049ff:	mov    cl,0xc5
  404a01:	fisttp WORD PTR fs:[edi+edx*4+0x68]
  404a06:	fnstcw WORD PTR [eax-0x5b]
  404a09:	mov    ah,0x37
  404a0b:	inc    eax
  404a0c:	or     edi,DWORD PTR [esp+esi*8-0x6e67cadd]
  404a13:	sahf   
  404a14:	or     al,0x93
  404a16:	and    al,0x60
  404a18:	dec    esi
  404a19:	(bad)  
  404a1a:	stc    
  404a1b:	into   
  404a1c:	stos   DWORD PTR es:[edi],eax
  404a1d:	mov    ds:0xc787390d,eax
  404a22:	lahf   
  404a23:	inc    esi
  404a24:	sub    DWORD PTR [edx],edi
  404a26:	lock arpl WORD PTR [edx],cx
  404a29:	repz pop esp
  404a2b:	aas    
  404a2c:	gs sti 
  404a2e:	das    
  404a2f:	and    DWORD PTR [edx],esp
  404a31:	leave  
  404a32:	mov    esi,0xae06d8f4
  404a37:	mov    esp,0x54f85e63
  404a3c:	jecxz  0x404a29
  404a3e:	imul   esi,DWORD PTR [edx+0x5a],0xf7d056cb
  404a45:	push   es
  404a46:	and    al,0x64
  404a48:	pop    edx
  404a49:	mov    ah,al
  404a4b:	ja     0x404a87
  404a4d:	push   esp
  404a4e:	leave  
  404a4f:	and    BYTE PTR [ebp-0x6ee60a4d],dl
  404a55:	jmp    0x85162b8d
  404a5a:	mov    ecx,0xcffdb9c1
  404a5f:	dec    ebp
  404a60:	shl    bh,0x8c
  404a63:	adc    al,0xe3
  404a65:	rol    DWORD PTR [ecx-0x176be162],0xd2
  404a6c:	aam    0xed
  404a6e:	pushf  
  404a6f:	push   0x72
  404a71:	(bad)
  404a74:	jno    0x4049f7
  404a76:	dec    ebx
  404a77:	xor    al,0x35
  404a79:	pop    ss
  404a7a:	dec    edi
  404a7b:	int    0xe5
  404a7d:	push   cs
  404a7e:	mov    esi,DWORD PTR [eax]
  404a80:	fs out 0x9a,eax
  404a83:	lahf   
  404a84:	fistp  WORD PTR [edi-0x7df0a789]
  404a8a:	or     DWORD PTR [eax],0x63772931
  404a90:	stc    
  404a91:	sub    ah,dl
  404a93:	(bad)  
  404a94:	sbb    al,0xf4
  404a96:	stos   BYTE PTR es:[edi],al
  404a97:	xchg   WORD PTR [eax-0x27],bx
  404a9b:	inc    ecx
  404a9c:	mov    dl,0x63
  404a9e:	adc    BYTE PTR [esi],bl
  404aa0:	or     esp,DWORD PTR [eax+0x43ffa5aa]
  404aa6:	dec    eax
  404aa7:	call   0xdd857744
  404aac:	lds    ebp,FWORD PTR [edi+0xc]
  404aaf:	sbb    al,0x17
  404ab1:	mov    ebx,0x7713a658
  404ab6:	aad    0xba
  404ab8:	inc    eax
  404ab9:	pop    esi
  404aba:	push   ecx
  404abb:	dec    edx
  404abc:	mov    ah,0x34
  404abe:	cmp    BYTE PTR [ebp-0x2686acde],dh
  404ac4:	js     0x404b0c
  404ac6:	inc    ecx
  404ac7:	jecxz  0x404add
  404ac9:	imul   eax,DWORD PTR [ebx-0x66],0xffffffda
  404acd:	cmc    
  404ace:	popf   
  404acf:	or     BYTE PTR [eax-0x2b],0x48
  404ad3:	cmp    bl,BYTE PTR [ecx+0x2a]
  404ad6:	dec    ebx
  404ad7:	rcr    DWORD PTR [esi-0x24a391b1],cl
  404add:	cmp    ch,BYTE PTR [ebx]
  404adf:	fnstenv [ebp+0x40294e84]
  404ae5:	jecxz  0x404ac8
  404ae7:	out    0x78,eax
  404ae9:	mov    al,ds:0xd9fa5361
  404aee:	jbe    0x404af1
  404af0:	xchg   esi,eax
  404af1:	xchg   edi,eax
  404af2:	les    esi,FWORD PTR [ecx+ecx*2]
  404af5:	popa   
  404af6:	std    
  404af7:	mov    ch,0xe0
  404af9:	adc    eax,0x7f2d452
  404afe:	scas   al,BYTE PTR es:[edi]
  404aff:	mov    al,ds:0x40a210ce
  404b04:	lods   al,BYTE PTR ds:[esi]
  404b05:	push   0xffffff87
  404b07:	push   es
  404b08:	scas   al,BYTE PTR es:[edi]
  404b09:	push   edx
  404b0a:	and    cl,dh
  404b0c:	xor    esp,DWORD PTR [eax]
  404b0e:	test   eax,0x2fc2a304
  404b13:	int    0x47
  404b15:	mov    bl,0xb9
  404b17:	adc    ebx,DWORD PTR [ebx+0xf]
  404b1a:	jns    0x404b69
  404b1c:	mov    ds:0xa6f36bf3,al
  404b21:	mov    al,ds:0xe754e747
  404b26:	jae    0x404b48
  404b28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b29:	adc    al,0x1d
  404b2b:	xor    edi,DWORD PTR [ecx+eax*8]
  404b2e:	fwait
  404b2f:	mov    edx,0xacbd97f6
  404b34:	loop   0x404bab
  404b36:	push   es
  404b37:	scas   al,BYTE PTR es:[edi]
  404b38:	mov    bl,0xa8
  404b3a:	push   ecx
  404b3b:	mov    cl,0xbe
  404b3d:	jae    0x404ae8
  404b3f:	push   edi
  404b40:	out    dx,al
  404b41:	sub    bl,BYTE PTR [ecx+eax*2+0x6ef92419]
  404b48:	arpl   WORD PTR es:[esi],di
  404b4b:	dec    edi
  404b4c:	lds    ebx,FWORD PTR [esi+ebx*1-0x58]
  404b50:	add    BYTE PTR [edi],ch
  404b52:	nop
  404b53:	dec    ecx
  404b54:	inc    ebp
  404b55:	push   ecx
  404b56:	loope  0x404b4d
  404b58:	shl    DWORD PTR [eax+0x5489b05f],cl
  404b5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b5f:	imul   eax,DWORD PTR [edi-0x1a33e30b],0xffffffdf
  404b66:	add    al,0x79
  404b68:	shl    BYTE PTR [eax+0xa],cl
  404b6b:	add    ah,cl
  404b6d:	fwait
  404b6e:	(bad)  
  404b71:	(bad)  
  404b72:	scas   eax,DWORD PTR es:[edi]
  404b73:	pusha  
  404b74:	mov    dl,0x44
  404b76:	data16 add al,0x5f
  404b79:	xor    edx,DWORD PTR [ebx]
  404b7b:	int3   
  404b7c:	xchg   esp,eax
  404b7d:	hlt    
  404b7e:	cwde   
  404b7f:	add    BYTE PTR [edi-0x72703b5a],bl
  404b85:	sbb    ah,BYTE PTR [eax]
  404b87:	popf   
  404b88:	add    esp,eax
  404b8a:	and    esp,eax
  404b8c:	ja     0x404b12
  404b8e:	fist   WORD PTR ss:[edi+0x64]
  404b92:	ja     0x404ba4
  404b94:	ins    DWORD PTR es:[edi],dx
  404b95:	data16 mov bl,0xcd
  404b98:	mov    ebx,0xc973835b
  404b9d:	ficomp WORD PTR [ecx+0x65]
  404ba0:	adc    esp,ebp
  404ba2:	pop    es
  404ba3:	lds    edx,FWORD PTR [ebx-0x66]
  404ba6:	imul   esp,DWORD PTR [ecx+0x61],0x6a97173a
  404bad:	repnz jmp 0x470b:0xd796a23
  404bb5:	dec    esp
  404bb6:	into   
  404bb7:	push   ebp
  404bb8:	dec    ebp
  404bb9:	into   
  404bba:	lods   eax,DWORD PTR ds:[esi]
  404bbb:	push   esp
  404bbc:	or     eax,0xe21a0a9b
  404bc1:	call   0xd0f3:0xf6929026
  404bc8:	sub    edx,DWORD PTR [edx]
  404bca:	lds    esi,FWORD PTR [edi-0x23]
  404bcd:	aas    
  404bce:	jnp    0x404b5e
  404bd0:	mov    esi,0x4f974a1c
  404bd5:	cmp    esi,DWORD PTR [esi-0x36]
  404bd8:	je     0x404be1
  404bda:	sub    bl,BYTE PTR [esi]
  404bdc:	xchg   esi,eax
  404bdd:	adc    al,ch
  404bdf:	mov    ebx,DWORD PTR [ecx-0x30]
  404be2:	(bad)  
  404be3:	call   0x69ff6886
  404be8:	stos   BYTE PTR es:[edi],al
  404be9:	and    esi,DWORD PTR [ebp-0x6f]
  404bec:	ja     0x404c6a
  404bee:	sub    esp,esi
  404bf0:	mov    edi,0xc3d390ff
  404bf5:	repnz std 
  404bf7:	push   0x6
  404bf9:	adc    BYTE PTR [edi-0x5b],ah
  404bfc:	sub    DWORD PTR [esi-0x1e],0xffffff9a
  404c00:	fld    QWORD PTR [edi]
  404c02:	pop    esp
  404c03:	mov    bh,BYTE PTR ds:0x672fc909
  404c09:	mov    al,BYTE PTR [edx+0x4db678dc]
  404c0f:	cld    
  404c10:	jecxz  0x404ba4
  404c12:	or     bh,ah
  404c14:	(bad)  
  404c15:	in     eax,dx
  404c16:	mov    bh,0x6d
  404c18:	jne    0x404bf9
  404c1a:	pop    edx
  404c1b:	retf   
  404c1c:	push   edi
  404c1d:	add    eax,0xab47bdf1
  404c22:	cmc    
  404c23:	sbb    cl,BYTE PTR [edi]
  404c25:	push   ss
  404c26:	push   ds
  404c27:	and    eax,0x1748568a
  404c2c:	sub    al,0x90
  404c2e:	xchg   esp,eax
  404c2f:	pop    ss
  404c30:	aas    
  404c31:	or     ch,0x61
  404c34:	lds    edx,FWORD PTR [ebx-0x703eaeb9]
  404c3a:	scas   eax,DWORD PTR es:[edi]
  404c3b:	sub    DWORD PTR [ebp-0x1dce21b9],edi
  404c41:	in     al,dx
  404c42:	xor    bh,BYTE PTR [esi]
  404c44:	inc    edi
  404c45:	es mov eax,0x1048249a
  404c4b:	pop    ds
  404c4c:	aam    0xae
  404c4e:	lods   eax,DWORD PTR ds:[esi]
  404c4f:	mov    ds:0x70831517,eax
  404c54:	add    al,0xc4
  404c56:	pop    ss
  404c57:	fild   WORD PTR [edx+0x2f]
  404c5a:	ins    DWORD PTR es:[edi],dx
  404c5b:	lock dec ebx
  404c5d:	sub    al,0x4c
  404c5f:	dec    ebp
  404c60:	fild   DWORD PTR [ecx-0x60]
  404c63:	pop    eax
  404c64:	stos   BYTE PTR es:[edi],al
  404c65:	and    DWORD PTR [eax+0x70],esi
  404c68:	(bad)  
  404c69:	ror    DWORD PTR [ebx-0x43],cl
  404c6c:	jle    0x404c4f
  404c6e:	cmc    
  404c6f:	aam    0xb5
  404c71:	cld    
  404c72:	out    0x8d,eax
  404c74:	in     eax,0x40
  404c76:	ror    BYTE PTR [esi+ecx*2+0x6f],cl
  404c7a:	retf   0x94c2
  404c7d:	add    al,0xa8
  404c7f:	sbb    al,0xf9
  404c81:	popa   
  404c82:	xor    eax,0xc2d6bfc6
  404c87:	rcr    edx,1
  404c89:	pop    ds
  404c8a:	mov    WORD PTR [eax-0x19d4e6ea],gs
  404c90:	add    BYTE PTR [ebp+0x23693798],dl
  404c96:	add    DWORD PTR [ecx-0x1c],ecx
  404c99:	stos   BYTE PTR es:[edi],al
  404c9a:	cmp    cl,ch
  404c9c:	add    BYTE PTR [ebx],0x2e
  404c9f:	and    eax,DWORD PTR [edx]
  404ca1:	push   ebp
  404ca2:	scas   al,BYTE PTR es:[edi]
  404ca3:	sar    DWORD PTR [esi],0xcc
  404ca6:	add    dh,BYTE PTR [ecx]
  404ca8:	lods   al,BYTE PTR ds:[esi]
  404ca9:	std    
  404caa:	daa    
  404cab:	jge    0x404d05
  404cad:	pop    esp
  404cae:	scas   al,BYTE PTR es:[edi]
  404caf:	rcl    BYTE PTR [ebp+edi*1+0x45],0x3d
  404cb4:	loop   0x404c75
  404cb6:	arpl   WORD PTR [edx-0x6807ed0a],si
  404cbc:	inc    esi
  404cbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404cbe:	sub    DWORD PTR [eax+esi*8],ebp
  404cc1:	jg     0x404cf3
  404cc3:	jge    0x404ca6
  404cc5:	cmp    BYTE PTR [ebp-0x13],dh
  404cc8:	es sbb eax,0x60f380a7
  404cce:	dec    esp
  404ccf:	loopne 0x404ca3
  404cd1:	cmp    eax,0xfdb91a29
  404cd6:	in     al,0x22
  404cd8:	and    al,0x43
  404cda:	les    ecx,FWORD PTR [ecx-0x41bf914a]
  404ce0:	xor    eax,0xc74d0a1e
  404ce5:	cmp    al,0x8a
  404ce7:	xchg   ebx,eax
  404ce8:	sbb    ah,BYTE PTR [esi+0x1e]
  404ceb:	test   eax,0x79a2bac0
  404cf0:	jmp    0x404d65
  404cf2:	stc    
  404cf3:	ss jns 0x404cdc
  404cf6:	add    DWORD PTR [eax],esi
  404cf8:	in     eax,dx
  404cf9:	jb     0x404ca4
  404cfb:	dec    ecx
  404cfc:	xchg   BYTE PTR [edi],ah
  404cfe:	shl    DWORD PTR [eax+0x650f2520],1
  404d04:	leave  
  404d05:	sub    eax,0x94aafd28
  404d0a:	push   eax
  404d0b:	jb     0x404ca6
  404d0d:	out    dx,al
  404d0e:	out    0x37,eax
  404d10:	inc    ecx
  404d11:	pop    ds
  404d12:	jge    0x404cd3
  404d14:	mov    edi,0xf7317b06
  404d19:	sbb    al,BYTE PTR [eax+eiz*2-0x31]
  404d1d:	add    BYTE PTR [esi],ah
  404d1f:	addr16 push ds
  404d21:	pop    edx
  404d22:	stos   BYTE PTR es:[edi],al
  404d23:	outs   dx,BYTE PTR ds:[esi]
  404d24:	inc    esi
  404d25:	lods   eax,DWORD PTR ds:[esi]
  404d26:	js     0x404d34
  404d28:	mov    eax,ds:0x1ab288fe
  404d2d:	icebp  
  404d2e:	sub    eax,0xb5c0a347
  404d33:	or     al,0x9
  404d35:	in     al,0xfb
  404d37:	mov    ds:0x9180a4be,al
  404d3c:	mov    cl,0x96
  404d3e:	gs and eax,0x25b1ed02
  404d44:	daa    
  404d45:	push   es
  404d46:	jnp    0x404d90
  404d48:	inc    ecx
  404d49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404d4a:	sub    BYTE PTR [edi+0x14],cl
  404d4d:	pop    esi
  404d4e:	mov    eax,0xa8e16d46
  404d53:	scas   eax,DWORD PTR es:[edi]
  404d54:	and    BYTE PTR [edx-0x443dd630],bl
  404d5a:	test   DWORD PTR [edi-0x1b],edx
  404d5d:	xor    eax,DWORD PTR [esp+edi*8+0x57]
  404d61:	test   BYTE PTR [ebp+0x7b],bl
  404d64:	and    eax,0xc364ee9
  404d69:	and    dh,dl
  404d6b:	outs   dx,DWORD PTR ds:[esi]
  404d6c:	sub    cl,al
  404d6e:	lea    edi,[esi+eax*8+0x0]
  404d72:	push   DWORD PTR [edx+0x36]
  404d75:	jg     0x404d74
  404d77:	in     al,dx
  404d78:	int    0x24
  404d7a:	jnp    0x404d6d
  404d7c:	push   ss
  404d7d:	addr16 shl eax,1
  404d80:	push   es
  404d81:	sahf   
  404d82:	xor    DWORD PTR [esi+0x76c0bfac],edx
  404d88:	push   ebp
  404d89:	or     al,dh
  404d8b:	jae    0x404d78
  404d8d:	sbb    BYTE PTR [esi-0x2bb89972],dl
  404d93:	pop    eax
  404d94:	and    BYTE PTR [ecx-0x1],0x40
  404d98:	push   esi
  404d99:	and    al,0xc
  404d9b:	dec    esi
  404d9c:	fisttp DWORD PTR [ebp+ebx*2-0x1717098a]
  404da3:	rcl    DWORD PTR [ecx-0x4d],1
  404da6:	xor    DWORD PTR [esi-0x2f],esi
  404da9:	test   ebp,0xb9e4418c
  404daf:	wrmsr  
  404db1:	ret    0x9d7
  404db4:	pop    ds
  404db5:	aas    
  404db6:	fdiv   st,st(3)
  404db8:	popa   
  404db9:	or     BYTE PTR [ebx+0x4f],al
  404dbc:	mov    esp,0xdd860e1f
  404dc1:	inc    edi
  404dc2:	mov    al,0x69
  404dc4:	popa   
  404dc5:	mov    eax,0x6caf32ad
  404dca:	sub    edx,ecx
  404dcc:	push   ss
  404dcd:	mov    bl,BYTE PTR [ebp-0xf]
  404dd0:	sub    bh,dh
  404dd2:	fiadd  WORD PTR [eax+0x35]
  404dd5:	sbb    DWORD PTR [eax],ecx
  404dd7:	(bad)  
  404dd8:	jl     0x404dc5
  404dda:	jg     0x404de8
  404ddc:	pop    ss
  404ddd:	jae    0x404e02
  404ddf:	xchg   esi,eax
  404de0:	fdiv   DWORD PTR [edi+edx*4+0x2d6fd7e7]
  404de7:	mov    bh,0x7e
  404de9:	cdq    
  404dea:	data16 daa 
  404dec:	xor    DWORD PTR [edi],edi
  404dee:	sbb    eax,0xf165638c
  404df3:	mov    cl,0xd
  404df5:	jae    0x404e68
  404df7:	mov    cl,BYTE PTR [ebx+ecx*1-0x35c7eb4]
  404dfe:	inc    edi
  404dff:	(bad)  
  404e00:	rol    BYTE PTR [eax+0x7cfad681],cl
  404e06:	cmp    al,0xb8
  404e08:	push   esi
  404e09:	fimul  WORD PTR [esp+eax*1+0x7a]
  404e0d:	out    0x4a,al
  404e0f:	sbb    dl,al
  404e11:	pushf  
  404e12:	dec    ecx
  404e13:	les    esp,FWORD PTR [ecx]
  404e15:	jae    0x404e3e
  404e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e18:	out    0xc6,al
  404e1a:	scas   eax,DWORD PTR es:[edi]
  404e1b:	sub    al,0xfd
  404e1d:	inc    eax
  404e1e:	int    0x4f
  404e20:	enter  0x69ef,0x29
  404e24:	xchg   ebp,eax
  404e25:	dec    eax
  404e26:	bound  esi,QWORD PTR [edi]
  404e28:	mov    dh,BYTE PTR [ecx-0x48c24006]
  404e2e:	dec    ebp
  404e2f:	repz or ch,dl
  404e32:	xor    ecx,DWORD PTR [esi-0x18]
  404e35:	sub    bh,ah
  404e37:	out    dx,al
  404e38:	cmp    ebp,DWORD PTR [eax+0x15]
  404e3b:	inc    edx
  404e3c:	je     0x404e56
  404e3e:	inc    eax
  404e3f:	xor    eax,0xbed9e0c4
  404e44:	mov    ecx,0xdacae54c
  404e49:	fdivr  DWORD PTR [ebp-0x51d8b530]
  404e4f:	cs loop 0x404ec9
  404e52:	cdq    
  404e53:	mov    ds:0x9928266f,eax
  404e58:	icebp  
  404e59:	push   esp
  404e5a:	sub    edx,DWORD PTR [ebx+0x4827ab2e]
  404e60:	dec    BYTE PTR [edi+0xef6f25e]
  404e66:	mov    esp,0x9867b706
  404e6b:	push   0x6b
  404e6d:	mov    ah,0xee
  404e6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e71:	lahf   
  404e72:	(bad)  
  404e74:	sub    al,0x4b
  404e76:	js     0x404e7c
  404e78:	(bad)  
  404e79:	xor    ebp,DWORD PTR [ebx+0x39]
  404e7c:	jle    0x404e6d
  404e7e:	imul   edi,DWORD PTR [eax+ebp*4-0x7b],0x5e907680
  404e86:	shl    DWORD PTR [ecx],0x6a
  404e89:	dec    ebp
  404e8a:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e8c:	stos   DWORD PTR es:[edi],eax
  404e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e8e:	push   ds
  404e8f:	mov    ds:0x89daf5a5,eax
  404e94:	add    bl,BYTE PTR [eax+0x7f]
  404e97:	scas   al,BYTE PTR es:[edi]
  404e98:	cmp    eax,0x1b495922
  404e9d:	daa    
  404e9e:	jmp    0x5b05a0a2
  404ea3:	lock jmp 0xdc9cfc04
  404ea9:	inc    dl
  404eab:	sub    DWORD PTR [edx-0x4718cb32],ecx
  404eb1:	mov    eax,ds:0x354d0a7e
  404eb6:	cmp    esp,DWORD PTR [ebp+0x55b1f22f]
  404ebc:	pop    ebp
  404ebd:	and    al,ah
  404ebf:	pop    edx
  404ec0:	int    0xa9
  404ec2:	in     eax,0xcc
  404ec4:	mov    ebx,ecx
  404ec6:	inc    edx
  404ec7:	inc    ebx
  404ec8:	out    dx,al
  404ec9:	inc    eax
  404ecb:	inc    ebp
  404ecc:	lahf   
  404ecd:	xor    eax,DWORD PTR [eax+0x4b029eb4]
  404ed3:	aam    0x7b
  404ed5:	in     al,0xb6
  404ed7:	(bad)  
  404ed8:	dec    esi
  404ed9:	dec    ebx
  404eda:	rcr    BYTE PTR [edx+0x5bb75e28],1
  404ee0:	pusha  
  404ee1:	bound  esi,QWORD PTR es:[eax-0x7d]
  404ee5:	lods   eax,DWORD PTR ds:[esi]
  404ee6:	in     al,0xd7
  404ee8:	pop    esp
  404ee9:	mov    ebx,0xa3649ccb
  404eee:	addr16 iret 
  404ef0:	call   0xa85a5d1
  404ef5:	rcr    BYTE PTR [ecx-0x5b],1
  404ef8:	xchg   BYTE PTR [edx*1+0x3450b860],cl
  404eff:	cmp    ebp,esp
  404f01:	pushf  
  404f02:	sahf   
  404f03:	imul   bl
  404f05:	cmc    
  404f06:	pop    es
  404f07:	out    dx,eax
  404f08:	sbb    al,0xb2
  404f0a:	and    ebx,edx
  404f0c:	mov    ds:0x362f12d4,al
  404f11:	sbb    ah,0xc8
  404f14:	je     0x404ef7
  404f16:	add    al,0x61
  404f18:	inc    esp
  404f19:	icebp  
  404f1a:	dec    esi
  404f1b:	call   0x394:0xc50ab1b9
  404f22:	fidivr WORD PTR ds:0x52032df9
  404f28:	out    dx,eax
  404f29:	ds sub eax,0x9431695f
  404f2f:	xor    eax,0x574228a2
  404f34:	mov    edi,0xb9bb9b27
  404f39:	dec    eax
  404f3a:	and    al,0x20
  404f3c:	retf   0x9efd
  404f3f:	xor    ch,cl
  404f41:	push   0xffffffe6
  404f43:	push   ecx
  404f44:	or     eax,DWORD PTR [esi]
  404f46:	mov    ah,0x8e
  404f48:	cmovb  eax,DWORD PTR [eax-0x2a089b1e]
  404f4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f50:	in     eax,0x6c
  404f52:	in     al,0x7e
  404f54:	xchg   edi,eax
  404f55:	jmp    0xee7dd3cb
  404f5a:	cli    
  404f5b:	sbb    al,0xc8
  404f5d:	sti    
  404f5e:	xor    BYTE PTR [esi],ah
  404f60:	int3   
  404f61:	mov    dh,0x47
  404f63:	pushf  
  404f64:	xchg   ebp,eax
  404f65:	push   cs
  404f66:	jp     0x404fa7
  404f68:	retf   0xbc
  404f6b:	sub    DWORD PTR [ebx+0x14c94bb1],edi
  404f71:	pop    ds
  404f72:	adc    al,0x64
  404f74:	hlt    
  404f75:	jge    0x404f31
  404f77:	out    dx,eax
  404f78:	loopne 0x404f04
  404f7a:	test   ebp,ebp
  404f7c:	out    dx,al
  404f7d:	retf   0xa047
  404f80:	cmp    ebx,DWORD PTR [ecx+0x1b]
  404f83:	inc    ebx
  404f84:	push   es
  404f85:	xchg   BYTE PTR [ebp+0x207469b4],dh
  404f8b:	loope  0x404f64
  404f8d:	sahf   
  404f8e:	push   ds
  404f8f:	test   eax,0x8a50ca3d
  404f94:	mov    bl,0xa
  404f96:	push   ss
  404f97:	xchg   ecx,eax
  404f98:	rcl    BYTE PTR [ebx],0xe9
  404f9b:	sub    dh,0xfc
  404f9e:	dec    edx
  404f9f:	xor    DWORD PTR [eax+0x60b5c33],ebx
  404fa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fa6:	push   esp
  404fa7:	add    eax,0x96e6072a
  404fac:	adc    BYTE PTR [esi],bl
  404fae:	cmp    BYTE PTR [ebp+0x6],ah
  404fb1:	lods   al,BYTE PTR ds:[esi]
  404fb2:	or     esi,DWORD PTR [ecx+ebp*8-0x4f]
  404fb6:	mov    al,ds:0x39232880
  404fbb:	mov    BYTE PTR [ebx-0x3c],dh
  404fbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fbf:	lock mov al,0x73
  404fc2:	int    0xf7
  404fc4:	test   BYTE PTR [ecx],ch
  404fc6:	cwde   
  404fc7:	push   0x885f1b2f
  404fcc:	leave  
  404fcd:	sbb    al,0x8b
  404fcf:	jmp    0x404fc5
  404fd1:	sbb    BYTE PTR [ecx+0xf3e3328],dh
  404fd7:	xchg   ebp,eax
  404fd8:	hlt    
  404fd9:	jp     0x40504b
  404fdb:	xchg   esi,eax
  404fdc:	sbb    DWORD PTR [ebx+esi*1+0x1],edx
  404fe0:	cli    
  404fe1:	gs scas al,BYTE PTR es:[edi]
  404fe3:	jmp    0xf3a2d2c
  404fe8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404fe9:	rcl    BYTE PTR [ebp+0x35],cl
  404fec:	arpl   WORD PTR [ecx+edi*8+0x34c820a0],sp
  404ff3:	imul   edx,DWORD PTR [edi-0x5],0xffffffd6
  404ff7:	stc    
  404ff8:	xchg   ecx,eax
  404ff9:	push   ebx
  404ffa:	and    al,0xc5
  404ffc:	add    al,0xb2
  404ffe:	mov    ecx,0x28b2013
  405003:	mov    ecx,0xa4482f4a
  405008:	loope  0x405061
  40500a:	mov    BYTE PTR [eax-0x7a538179],bh
  405010:	jmp    0x405085
  405012:	xor    DWORD PTR [edx+ecx*8],ebp
  405015:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405016:	hlt    
  405017:	add    eax,0x6ba17c4e
  40501c:	inc    ebp
  40501d:	loope  0x405085
  40501f:	gs jg  0x40509f
  405022:	jbe    0x404fdd
  405024:	xor    DWORD PTR [ecx-0x65da0c56],ecx
  40502a:	pop    eax
  40502b:	or     DWORD PTR [ecx-0x44],edx
  40502e:	ret    0xaa4e
  405031:	shl    BYTE PTR [eax-0x70],1
  405034:	in     eax,dx
  405035:	cwde   
  405036:	(bad)  
  405037:	repz cmp BYTE PTR [edi-0x64],0x10
  40503c:	push   ebx
  40503d:	and    DWORD PTR [eax+0x1f0178e5],0x90dfa8eb
  405047:	daa    
  405048:	jnp    0x4050b7
  40504a:	inc    ebx
  40504b:	add    ebp,DWORD PTR [edi]
  40504d:	mov    fs,WORD PTR [esi]
  40504f:	push   eax
  405050:	leave  
  405051:	jle    0x405003
  405053:	in     al,dx
  405054:	ins    BYTE PTR es:[edi],dx
  405055:	(bad)  
  405057:	xchg   ebx,eax
  405058:	xlat   BYTE PTR ds:[ebx]
  405059:	push   esi
  40505a:	mov    ecx,0x766cc3fc
  40505f:	xchg   esp,eax
  405060:	ficom  DWORD PTR [ebp+0x6e492477]
  405066:	mov    cl,0x17
  405068:	popf   
  405069:	ins    BYTE PTR es:[edi],dx
  40506a:	mov    ds:0x94b24fd,al
  40506f:	jno    0x405092
  405071:	into   
  405072:	push   esp
  405073:	aaa    
  405074:	outs   dx,BYTE PTR ds:[esi]
  405075:	mov    cl,0xad
  405077:	inc    esi
  405078:	push   edx
  405079:	loop   0x404ffe
  40507b:	ror    DWORD PTR [ebx-0x10],cl
  40507e:	rol    BYTE PTR [ecx+0x7d6da28b],0xf6
  405085:	inc    esi
  405086:	rcr    DWORD PTR [edx],0x18
  405089:	mov    ebx,0x869e1a38
  40508e:	dec    esp
  40508f:	fiadd  DWORD PTR [ecx-0x1e]
  405092:	jecxz  0x40509a
  405094:	mov    ds:0x95c08be0,al
  405099:	xor    cl,BYTE PTR [eax]
  40509b:	ret    
  40509c:	dec    esi
  40509d:	loope  0x4050ef
  40509f:	jge    0x405086
  4050a1:	sbb    esi,edx
  4050a3:	(bad)  
  4050a4:	lods   al,BYTE PTR ds:[esi]
  4050a5:	pop    eax
  4050a6:	hlt    
  4050a7:	mov    esi,eax
  4050a9:	ret    
  4050aa:	mov    al,ds:0xa004af1c
  4050af:	mov    dh,0x74
  4050b1:	pop    ss
  4050b2:	and    BYTE PTR [ebx+ebx*4-0x3b],al
  4050b6:	inc    edi
  4050b7:	inc    esp
  4050b8:	inc    esi
  4050b9:	cmp    eax,0x37edfd86
  4050be:	mov    cl,0x7f
  4050c0:	icebp  
  4050c1:	dec    edi
  4050c2:	fcmovnb st,st(6)
  4050c4:	xor    ah,BYTE PTR [esi+ebp*4]
  4050c7:	jno    0x405068
  4050c9:	mov    edx,0x5c0b40c4
  4050ce:	mov    al,0x56
  4050d0:	mov    cl,0xd9
  4050d2:	push   edx
  4050d3:	mov    eax,0x41088b49
  4050d8:	ja     0x4050dc
  4050da:	cmc    
  4050db:	push   es
  4050dc:	jae    0x4050a9
  4050de:	pop    ds
  4050df:	sub    DWORD PTR [edx+0x74],eax
  4050e2:	pusha  
  4050e3:	inc    esp
  4050e4:	cmc    
  4050e5:	mov    ds:0xd6366afd,eax
  4050ea:	or     al,0x67
  4050ec:	add    edi,ebx
  4050ee:	push   0xf72eb226
  4050f3:	xor    edx,DWORD PTR [edx-0x294b94a]
  4050f9:	call   0xf465:0x409fb802
  405100:	ins    BYTE PTR es:[edi],dx
  405101:	sar    DWORD PTR [esi+0x5c],1
  405104:	or     dl,BYTE PTR [ebp-0x7a272b0a]
  40510a:	hlt    
  40510b:	xor    bl,ah
  40510d:	dec    ebp
  40510e:	pop    esi
  40510f:	inc    ecx
  405110:	xor    bl,BYTE PTR [esi-0x70674c68]
  405116:	mov    cl,0xf4
  405118:	ret    0xef52
  40511b:	mov    bl,0xe0
  40511d:	retf   
  40511e:	mov    al,ds:0x921b4dc7
  405123:	jle    0x405171
  405125:	es inc eax
  405127:	jge    0x405160
  405129:	fnstenv [esi-0x5f5b1cba]
  40512f:	cmp    dl,bl
  405131:	push   ecx
  405132:	pushf  
  405133:	sbb    ecx,ebp
  405135:	clc    
  405136:	mov    esi,eax
  405138:	out    dx,al
  405139:	fs mov ds,ecx
  40513c:	or     DWORD PTR [eax+0x5ea8402f],edi
  405142:	sub    edi,ecx
  405144:	bound  esi,QWORD PTR [edi]
  405146:	push   ecx
  405147:	jae    0x4051c4
  405149:	and    BYTE PTR [edx+0x6c],bh
  40514c:	gs je  0x405188
  40514f:	(bad)  
  405151:	js     0x40511e
  405153:	jns    0x40512d
  405155:	test   eax,0x77019724
  40515a:	fdiv   DWORD PTR [edi]
  40515c:	ret    0xe732
  40515f:	push   esi
  405160:	dec    ebp
  405161:	cdq    
  405162:	mov    edi,DWORD PTR [ebp-0x6aef984d]
  405168:	rcr    DWORD PTR [ecx-0x7f77145d],0xea
  40516f:	add    DWORD PTR [ebx],0x61
  405172:	xchg   esi,eax
  405173:	add    BYTE PTR [ecx],al
  405175:	(bad)
  405178:	pop    esi
  405179:	std    
  40517a:	push   ss
  40517b:	loop   0x4051e4
  40517d:	add    al,BYTE PTR [eax+0x27]
  405180:	div    edi
  405182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405183:	jmp    0x4990:0xd156fa44
  40518a:	in     eax,dx
  40518b:	scas   al,BYTE PTR es:[edi]
  40518c:	xchg   BYTE PTR [edi+0x5f5aae2d],ah
  405192:	retf   0xf317
  405195:	(bad)  [edi-0x75]
  405198:	icebp  
  405199:	mov    ds:0x1b0bdf3c,eax
  40519e:	jmp    0x927d:0xa3076234
  4051a5:	push   ebp
  4051a6:	dec    esp
  4051a7:	loope  0x405150
  4051a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051aa:	repz sbb ebp,DWORD PTR [esi+0x6f]
  4051ae:	pop    ebx
  4051af:	xchg   esp,eax
  4051b0:	int    0x6a
  4051b2:	sti    
  4051b3:	fcom   st(5)
  4051b5:	sti    
  4051b6:	clc    
  4051b7:	jg     0x40516f
  4051b9:	repz jle 0x40520a
  4051bc:	fstp   TBYTE PTR [esi-0x36e3e4b6]
  4051c2:	and    BYTE PTR [ebx+0x1070c1da],0xda
  4051c9:	ret    
  4051ca:	push   ebp
  4051cb:	or     dh,dh
  4051cd:	ds mov eax,0x516da585
  4051d3:	or     eax,0x278e32f1
  4051d8:	xor    al,0x8e
  4051da:	push   cs
  4051db:	mov    al,ds:0x11bd4230
  4051e0:	pop    esp
  4051e1:	or     eax,0x7668cf2c
  4051e6:	pop    ebx
  4051e7:	int3   
  4051e8:	sub    edx,DWORD PTR [esi+0x5c4fd83]
  4051ee:	fcom   QWORD PTR [ecx-0xc97799c]
  4051f4:	lods   eax,DWORD PTR ds:[esi]
  4051f5:	cld    
  4051f6:	cmp    al,0x35
  4051f8:	sbb    ebx,eax
  4051fa:	add    al,0x91
  4051fc:	adc    al,0x7d
  4051fe:	xor    eax,0x8e358a87
  405203:	xchg   ecx,eax
  405204:	fwait
  405205:	sbb    eax,0x7245cbd3
  40520a:	mov    DWORD PTR [edx+ebp*2-0x6],edi
  40520e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40520f:	mov    dh,0x80
  405211:	ds out dx,eax
  405213:	add    eax,ebx
  405215:	adc    dl,0xb6
  405218:	enter  0xeaca,0x14
  40521c:	mov    bl,BYTE PTR [ebx]
  40521e:	push   eax
  40521f:	cdq    
  405220:	jmp    0x815:0x790a8c7a
  405227:	sub    edx,DWORD PTR [esi]
  405229:	mov    bh,0x32
  40522b:	int3   
  40522c:	aaa    
  40522d:	(bad)  
  40522e:	and    DWORD PTR [ecx-0x57],esp
  405231:	sub    DWORD PTR [edx+ebp*1+0x20],edx
  405235:	rcl    DWORD PTR [esi-0x5c137d1e],1
  40523b:	sti    
  40523c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40523d:	daa    
  40523e:	int3   
  40523f:	mov    eax,0xad5bd860
  405244:	nop
  405245:	ds adc eax,0x819d8567
  40524b:	xor    ebp,DWORD PTR [edi+0x22]
  40524e:	fprem1 
  405250:	mov    ebp,0x5309a515
  405255:	push   esi
  405256:	inc    edx
  405257:	loopne 0x4051f7
  405259:	pop    esp
  40525a:	jge    0x4052cb
  40525c:	mov    al,0x9d
  40525e:	adc    BYTE PTR [esi],0x17
  405261:	sti    
  405262:	repz dec ecx
  405264:	out    0xc2,al
  405266:	sub    dl,BYTE PTR [ebp+0x643f3db7]
  40526c:	sub    eax,0x4feaea1f
  405271:	das    
  405272:	pushf  
  405273:	push   ds
  405274:	inc    ebx
  405275:	or     DWORD PTR [eax+0x56],eax
  405278:	pop    ecx
  405279:	add    al,cl
  40527b:	or     esi,DWORD PTR [edx+0x2a3bf82c]
  405281:	adc    DWORD PTR [edx],0xbd6b8f44
  405287:	gs jne 0x40524e
  40528a:	mov    bh,0x4c
  40528c:	ins    DWORD PTR es:[edi],dx
  40528d:	sub    dh,BYTE PTR [eax+edx*2-0x62]
  405291:	into   
  405292:	xor    DWORD PTR [ebx-0x6f],0xffffffdb
  405296:	cli    
  405297:	sti    
  405298:	mov    ss,WORD PTR [edi]
  40529a:	je     0x40523b
  40529c:	sahf   
  40529d:	je     0x40528f
  40529f:	push   0x3d
  4052a1:	retf   
  4052a2:	dec    edx
  4052a3:	cli    
  4052a4:	cmp    bh,BYTE PTR [esi+eiz*8+0x17d03297]
  4052ab:	js     0x405251
  4052ad:	in     al,0x14
  4052af:	in     al,dx
  4052b0:	lods   eax,DWORD PTR ds:[esi]
  4052b1:	fdivr  DWORD PTR [ebp+0x6c]
  4052b4:	(bad)  
  4052b5:	xor    esp,DWORD PTR [ebx+eax*4-0x4c]
  4052b9:	retf   0xe334
  4052bc:	mov    edx,0xbe286c70
  4052c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4052c2:	sub    BYTE PTR [ecx-0x230df14f],ch
  4052c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052ca:	xchg   ecx,eax
  4052cb:	sti    
  4052cc:	or     DWORD PTR [edi],ebp
  4052ce:	call   0x37395760
  4052d3:	test   DWORD PTR [ecx-0x5],edx
  4052d6:	imul   eax,DWORD PTR [ebp-0x21],0xffffffab
  4052da:	push   esp
  4052db:	ins    DWORD PTR es:[edi],dx
  4052dc:	call   0x659d:0xd427a2fc
  4052e3:	into   
  4052e4:	and    DWORD PTR [esi],esi
  4052e6:	dec    ecx
  4052e7:	jnp    0x405364
  4052e9:	fnstenv [esi+0x109d5bcd]
  4052ef:	wrmsr  
  4052f1:	std    
  4052f2:	cmp    cl,BYTE PTR [ebx]
  4052f4:	mov    WORD PTR [esi+0x37],es
  4052f7:	shl    cl,cl
  4052f9:	leave  
  4052fa:	mov    edx,0x9b6fd1bd
  4052ff:	mov    esi,0x295c047f
  405304:	inc    ebx
  405305:	xchg   ecx,eax
  405306:	fucomp st(1)
  405308:	dec    edi
  405309:	out    0xb4,al
  40530b:	push   cs
  40530c:	cdq    
  40530d:	jmp    0xc14e6e2e
  405312:	adc    eax,0xf9b26bd4
  405317:	add    eax,0xabfa0896
  40531c:	fbld   TBYTE PTR [edx-0x330e85cf]
  405322:	pop    ds
  405323:	fs push cs
  405325:	cld    
  405326:	cmpps  xmm7,XMMWORD PTR [eax-0x79],0x1c
  40532b:	ss in  eax,0xd3
  40532e:	ins    DWORD PTR es:[edi],dx
  40532f:	sub    eax,0x76bba38e
  405334:	xor    esp,DWORD PTR [ebx+ebx*4]
  405337:	dec    esp
  405338:	rol    ebp,cl
  40533a:	adc    eax,0x2a1b81a
  40533f:	popf   
  405340:	jns    0x405351
  405342:	and    edi,DWORD PTR [ecx-0x17]
  405345:	xchg   ebp,eax
  405346:	xor    eax,0x755c1bf8
  40534b:	and    BYTE PTR [esi-0x2f],bh
  40534e:	xchg   esi,ecx
  405350:	pop    ecx
  405351:	jb     0x405356
  405353:	sbb    DWORD PTR [edx],esi
  405355:	inc    ebx
  405356:	mov    edx,0xb8b9f735
  40535b:	(bad)  
  40535c:	jae    0x40533e
  40535e:	daa    
  40535f:	jno    0x4052eb
  405361:	mov    BYTE PTR [ebx+0x868ad77],cl
  405367:	push   cs
  405368:	xor    esi,DWORD PTR [edi+0x3588c57]
  40536e:	xchg   esp,eax
  40536f:	imul   edx,DWORD PTR [edx+ebx*1-0x45],0xc0174593
  405377:	rcr    DWORD PTR [esi-0x1c4ae214],1
  40537d:	and    edi,DWORD PTR ds:0x6f10573e
  405383:	add    eax,0x5879697c
  405388:	mov    eax,esi
  40538a:	aaa    
  40538b:	inc    esi
  40538c:	nop
  40538d:	(bad)  
  40538e:	cmc    
  40538f:	mov    dh,ch
  405391:	hlt    
  405392:	jmp    0x4053d6
  405394:	add    eax,0x43cbbd41
  405399:	mov    ch,0xc7
  40539b:	jbe    0x4053c9
  40539d:	push   eax
  40539e:	inc    eax
  40539f:	inc    esi
  4053a0:	mov    ch,0xaf
  4053a2:	cmp    eax,0x37f84ee8
  4053a7:	sub    esi,esi
  4053a9:	fcomp  st(4)
  4053ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4053ac:	cli    
  4053ad:	add    BYTE PTR [ebp-0x34],bh
  4053b0:	das    
  4053b1:	mov    ebx,0x85399e95
  4053b6:	inc    ebx
  4053b7:	sar    BYTE PTR [ecx+0x52],cl
  4053ba:	bound  eax,QWORD PTR [ecx+0x13]
  4053bd:	cmp    ebx,DWORD PTR [edx+0xbdd7f5]
  4053c3:	mov    bl,0x99
  4053c5:	xchg   edi,eax
  4053c6:	shl    BYTE PTR [ebx],0x2f
  4053c9:	fwait
  4053ca:	in     al,dx
  4053cb:	sahf   
  4053cc:	xor    esi,0xb4dfe5aa
  4053d2:	push   ss
  4053d3:	sti    
  4053d4:	jb     0x4053b5
  4053d6:	fild   QWORD PTR [ebx+0x52c907f2]
  4053dc:	mov    ecx,0x281cb610
  4053e1:	ss call 0x1cc3:0x21126289
  4053e9:	mov    al,ds:0xe24de72d
  4053ee:	out    0x4,eax
  4053f0:	stos   BYTE PTR es:[edi],al
  4053f1:	lods   eax,DWORD PTR ds:[esi]
  4053f2:	in     al,0x99
  4053f4:	xlat   BYTE PTR ds:[ebx]
  4053f5:	add    BYTE PTR [ecx-0x2],dh
  4053f8:	ins    BYTE PTR es:[edi],dx
  4053f9:	jle    0x4053dc
  4053fb:	jnp    0x405470
  4053fd:	imul   ecx,esi,0x6f
  405400:	add    DWORD PTR [ecx-0x2073bb00],ecx
  405406:	push   edx
  405407:	(bad)  
  405408:	pop    ds
  405409:	jg     0x405481
  40540b:	dec    ebp
  40540c:	lods   eax,DWORD PTR ss:[esi]
  40540e:	dec    edx
  40540f:	pop    es
  405410:	outs   dx,DWORD PTR ds:[esi]
  405411:	jno    0x4053b8
  405413:	and    bl,bl
  405415:	push   0x56
  405417:	retf   
  405418:	mov    edi,0x2df24630
  40541d:	cmc    
  40541e:	not    DWORD PTR [edx+0x17725720]
  405424:	shl    DWORD PTR [ebx-0x77],1
  405427:	and    BYTE PTR [edi-0x6d],0x72
  40542b:	icebp  
  40542c:	sbb    esp,ebp
  40542e:	jmp    0x40543a
  405430:	cmp    bh,BYTE PTR [edx+0x397592cc]
  405436:	fmul   st(7),st
  405438:	sub    BYTE PTR ds:0x75cc385c,ch
  40543e:	add    DWORD PTR [edi-0x4696fd91],ecx
  405444:	stos   BYTE PTR es:[edi],al
  405445:	lahf   
  405446:	enter  0xa787,0x8d
  40544a:	pop    DWORD PTR [edi-0x28]
  40544d:	test   eax,0x1668f5bb
  405452:	pop    ebx
  405453:	push   ecx
  405454:	test   eax,0x5f7dbbc6
  405459:	ror    DWORD PTR [edx-0x2206c2c8],1
  40545f:	fcomp  st(6)
  405461:	stos   BYTE PTR es:[edi],al
  405462:	loop   0x40540f
  405464:	in     eax,dx
  405465:	dec    eax
  405466:	or     BYTE PTR [esi-0x1873f881],bh
  40546c:	(bad)  
  40546e:	popf   
  40546f:	jbe    0x4054e7
  405471:	retf   0xd77d
  405474:	mov    dh,0x1
  405476:	add    BYTE PTR [eax+edx*2-0x17],dh
  40547a:	xor    BYTE PTR [ebx-0x27db9b15],0x71
  405481:	daa    
  405482:	fstp   QWORD PTR [edx]
  405484:	mov    al,0xa1
  405486:	icebp  
  405487:	sub    ecx,eax
  405489:	test   DWORD PTR [ebx],edx
  40548b:	daa    
  40548c:	jp     0x40541a
  40548e:	lods   eax,DWORD PTR ds:[esi]
  40548f:	in     eax,dx
  405490:	mov    eax,0xefe66a5f
  405495:	push   0x53
  405497:	push   esi
  405498:	adc    esp,DWORD PTR [edi-0x318e5523]
  40549e:	imul   edx,DWORD PTR [esi-0x134e7053],0xc88ae626
  4054a8:	icebp  
  4054a9:	jecxz  0x405519
  4054ab:	or     BYTE PTR [ecx],dl
  4054ad:	sbb    esp,DWORD PTR [ebx]
  4054af:	scas   al,BYTE PTR es:[edi]
  4054b0:	pushf  
  4054b1:	inc    edx
  4054b2:	add    esp,DWORD PTR [ecx]
  4054b4:	(bad)  
  4054b5:	(bad)  
  4054b6:	xor    DWORD PTR [ecx+0x7dc21f2b],edi
  4054bc:	adc    DWORD PTR [edi],edx
  4054be:	aas    
  4054bf:	cmp    BYTE PTR [edi-0x7a],0x2
  4054c3:	test   BYTE PTR [esi],bl
  4054c5:	jns    0x405529
  4054c7:	call   0xf67f:0xef31ea94
  4054ce:	or     edx,DWORD PTR [ebx+0x2f8fea32]
  4054d4:	sahf   
  4054d5:	mov    esp,esi
  4054d7:	mov    dl,0x3a
  4054d9:	ret    0xc4e0
  4054dc:	mov    ch,0x7c
  4054de:	dec    edx
  4054df:	call   0xbeb0:0x7326c285
  4054e6:	daa    
  4054e7:	push   edi
  4054e8:	pop    edi
  4054e9:	jl     0x40548a
  4054eb:	xor    eax,0xcaada3f3
  4054f0:	inc    esp
  4054f1:	fsub   DWORD PTR ds:0x4e62ffd9
  4054f7:	fs pop esi
  4054f9:	int3   
  4054fa:	jae    0x4054e4
  4054fc:	nop
  4054fd:	xchg   si,ax
  4054ff:	inc    eax
  405500:	or     BYTE PTR ds:0x460a3e2c,ch
  405506:	shr    bl,1
  405508:	int3   
  405509:	retf   
  40550a:	rcr    BYTE PTR [esi],cl
  40550c:	pop    esp
  40550d:	mov    esp,0xfa25c987
  405512:	cmp    cl,bl
  405514:	sbb    bl,BYTE PTR [ecx+0x3c732179]
  40551a:	(bad)  
  40551b:	push   cs
  40551c:	int3   
  40551d:	outs   dx,BYTE PTR ds:[esi]
  40551e:	inc    ecx
  40551f:	hlt    
  405520:	daa    
  405521:	xchg   ebx,eax
  405522:	inc    edi
  405523:	and    esi,0x3
  405526:	lods   al,BYTE PTR ds:[esi]
  405527:	mov    dh,0x4e
  405529:	jg     0x4054ec
  40552b:	add    al,BYTE PTR [edx+eiz*1]
  40552e:	inc    eax
  40552f:	adc    esp,ebx
  405531:	xchg   edi,eax
  405532:	add    al,0x12
  405534:	add    eax,0xbea96328
  405539:	xor    al,0xd8
  40553b:	jno    0x405509
  40553d:	repnz mov ds:0xb99e4c6,al
  405543:	dec    eax
  405544:	mov    BYTE PTR [eax+0x6b7d12e9],dh
  40554a:	call   FWORD PTR [edx-0x5639c325]
  405550:	imul   ebx,DWORD PTR [eax],0x56
  405553:	fidiv  WORD PTR [ecx]
  405555:	mov    ebx,0x1ef8002
  40555a:	int    0xca
  40555c:	push   0x6af6cba9
  405561:	or     BYTE PTR [esi-0x68bd097],bl
  405567:	jmp    0x40558b
  405569:	cli    
  40556a:	dec    edi
  40556b:	push   es
  40556c:	jo     0x4055bd
  40556e:	dec    ebp
  40556f:	and    eax,0xa731ff5d
  405574:	neg    DWORD PTR [edi+0x44]
  405577:	jnp    0x4055ea
  405579:	mov    dl,0xf8
  40557b:	pop    es
  40557c:	add    DWORD PTR [edi-0x3e650e43],edi
  405582:	push   edx
  405583:	aam    0x0
  405585:	pusha  
  405586:	stos   BYTE PTR es:[edi],al
  405587:	sub    al,0xe7
  405589:	dec    edx
  40558a:	imul   edi,DWORD PTR [eax],0x9342afab
  405590:	out    0x3b,eax
  405592:	inc    esi
  405593:	pop    esp
  405594:	sbb    bl,BYTE PTR [edi+0x6c]
  405597:	cmp    dh,BYTE PTR cs:[ecx+0x37129212]
  40559e:	ins    DWORD PTR es:[edi],dx
  40559f:	jns    0x4055ae
  4055a1:	cmp    DWORD PTR [ebx+0x189532b1],edi
  4055a7:	(bad)  
  4055a9:	popf   
  4055aa:	xchg   edi,eax
  4055ab:	ins    BYTE PTR es:[edi],dx
  4055ac:	retf   0x3fbc
  4055af:	je     0x40561d
  4055b1:	fistp  QWORD PTR [ecx-0x5f449f27]
  4055b7:	adc    esp,edi
  4055b9:	test   al,0x9d
  4055bb:	ins    BYTE PTR es:[edi],dx
  4055bc:	sbb    BYTE PTR [edi-0x45df62fc],dl
  4055c2:	ss loopne 0x405594
  4055c5:	rcr    dh,0x67
  4055c8:	inc    ebx
  4055c9:	inc    esi
  4055ca:	dec    ebx
  4055cb:	cdq    
  4055cc:	dec    esp
  4055cd:	jb     0x405574
  4055cf:	imul   edx,eax,0xffffff91
  4055d2:	mov    ds,WORD PTR fs:[ecx]
  4055d5:	aas    
  4055d6:	push   ss
  4055d7:	xchg   DWORD PTR ds:0xd861e806,edi
  4055dd:	das    
  4055de:	add    al,0x77
  4055e0:	hlt    
  4055e1:	sub    ebp,esp
  4055e3:	sbb    BYTE PTR fs:[ecx],ah
  4055e6:	push   esi
  4055e7:	cmp    DWORD PTR [edx+0xf4f3e57],0x2e
  4055ee:	push   esp
  4055ef:	pop    ebp
  4055f0:	adc    bl,BYTE PTR [esi-0x52]
  4055f3:	pop    eax
  4055f4:	ret    
  4055f5:	ins    BYTE PTR es:[edi],dx
  4055f6:	imul   edx,DWORD PTR [ecx-0x2f],0x5d
  4055fa:	mov    bh,0x1d
  4055fc:	sbb    bh,BYTE PTR [edi]
  4055fe:	mov    edx,ebp
  405600:	push   ecx
  405601:	aaa    
  405602:	cmp    eax,0xb211dfab
  405607:	test   ebx,edi
  405609:	jl     0x4055a0
  40560b:	mov    esp,DWORD PTR [esi]
  40560d:	dec    esp
  40560e:	call   FWORD PTR [eax-0x442e3d76]
  405614:	push   edx
  405615:	pop    es
  405616:	mov    cl,0x4d
  405618:	repz sbb DWORD PTR [esi+0x25ee6724],esp
  40561f:	xchg   ecx,eax
  405620:	pop    eax
  405621:	out    0xa9,al
  405623:	test   eax,0xfcda6a51
  405628:	jno    0x405676
  40562a:	aam    0xec
  40562c:	ins    DWORD PTR es:[edi],dx
  40562d:	mov    eax,0x9ea55e56
  405632:	dec    esp
  405633:	xor    ebx,DWORD PTR [ebx-0x41]
  405636:	pop    esi
  405637:	mov    bh,0x35
  405639:	xchg   ecx,eax
  40563a:	idiv   DWORD PTR [edi+esi*1-0x14]
  40563e:	sbb    esi,ecx
  405640:	mov    ebp,0x738c8dbd
  405645:	inc    eax
  405646:	or     al,0x3f
  405648:	mov    dl,0xd7
  40564a:	jmp    0xff690f1a
  40564f:	adc    eax,0xf2e3101b
  405654:	or     BYTE PTR [edx],cl
  405656:	inc    edx
  405657:	imul   BYTE PTR [ecx-0x2b]
  40565a:	rcr    bl,cl
  40565c:	or     eax,DWORD PTR [esi+0x74]
  40565f:	icebp  
  405660:	pop    esp
  405661:	mov    ah,cl
  405663:	ins    DWORD PTR es:[edi],dx
  405664:	mov    ch,BYTE PTR [edi-0x524b6513]
  40566a:	(bad)  
  40566b:	daa    
  40566c:	arpl   bx,cx
  40566e:	push   ss
  40566f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405670:	and    eax,DWORD PTR ds:0x18e29a17
  405676:	ins    BYTE PTR es:[edi],dx
  405677:	out    dx,al
  405678:	mov    dh,0x71
  40567a:	sbb    BYTE PTR [edx+0x2c],dl
  40567d:	ins    DWORD PTR es:[edi],dx
  40567e:	mov    ecx,0xdf76e19d
  405683:	test   eax,0xa5cc2ae2
  405688:	jnp    0x405667
  40568a:	(bad)  
  40568b:	xor    BYTE PTR [ebp-0x7a2feecc],bh
  405691:	cwde   
  405692:	imul   ebx,eax,0xffffffeb
  405695:	add    BYTE PTR [ebx-0x2ae263c1],bl
  40569b:	jmp    0x49afb73e
  4056a0:	loop   0x40565b
  4056a2:	push   ds
  4056a3:	inc    DWORD PTR [ebp+eax*8+0xeb4bd42]
  4056aa:	pop    esi
  4056ab:	pop    esp
  4056ac:	jb     0x40571a
  4056ae:	cwde   
  4056af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056b0:	shl    cl,0x94
  4056b3:	mov    bl,0x0
  4056b5:	mov    edi,0x4a588027
  4056ba:	pop    ss
  4056bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056bc:	xor    al,0x25
  4056be:	inc    esi
  4056bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4056c0:	sysret 
  4056c2:	loop   0x405709
  4056c4:	ror    DWORD PTR [ecx+0x140f8f9c],cl
  4056ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056cb:	lock cdq 
  4056cd:	in     eax,0xeb
  4056cf:	push   ebx
  4056d0:	and    DWORD PTR [eax-0x41],eax
  4056d3:	jb     0x405730
  4056d5:	ins    DWORD PTR es:[edi],dx
  4056d6:	and    DWORD PTR [edi+0x49],ecx
  4056d9:	xchg   ecx,eax
  4056da:	pop    ebx
  4056db:	jb     0x4056e8
  4056dd:	ffree  st(6)
  4056df:	jmp    0x4056b7
  4056e1:	aaa    
  4056e2:	jecxz  0x4056c3
  4056e4:	pop    edx
  4056e5:	cli    
  4056e6:	cmp    bl,BYTE PTR [ecx-0x4e]
  4056e9:	dec    esi
  4056ea:	gs xchg esi,eax
  4056ec:	jg     0x405758
  4056ee:	sub    edi,DWORD PTR [esi-0x51]
  4056f1:	sub    ah,bl
  4056f3:	dec    ebx
  4056f4:	sbb    BYTE PTR [ebp+0x63f98efb],dl
  4056fa:	pop    ecx
  4056fc:	and    BYTE PTR [eax+0xe24b8ec],dl
  405702:	and    esp,ebp
  405704:	mov    ah,0xa0
  405706:	mov    edi,0xa15b1d71
  40570b:	rcl    BYTE PTR [edi-0x792cc12e],cl
  405711:	jo     0x40578b
  405713:	ins    DWORD PTR es:[edi],dx
  405714:	mov    DWORD PTR [eax],edx
  405716:	xor    DWORD PTR [ecx+edi*8],0x60
  40571a:	mov    bh,cl
  40571c:	arpl   WORD PTR ds:0xd4971282,ax
  405722:	int3   
  405723:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405724:	add    al,bl
  405726:	sub    BYTE PTR [edi],dl
  405728:	push   edx
  405729:	xchg   edx,eax
  40572a:	rcl    DWORD PTR [esi+eax*2+0x4b],cl
  40572e:	dec    esp
  40572f:	inc    edi
  405730:	xchg   DWORD PTR [esp+edx*1+0x54],eax
  405734:	mov    edx,0x337da52e
  405739:	jge    0x405710
  40573b:	mov    dl,0x1b
  40573d:	js     0x4057ab
  40573f:	gs push esp
  405741:	sbb    eax,0x51519e5b
  405746:	or     BYTE PTR [ebp-0x5c],bl
  405749:	out    0xa0,al
  40574b:	enter  0xc419,0xff
  40574f:	sub    ebp,esi
  405751:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405753:	adc    bl,al
  405755:	ret    
  405756:	js     0x4057b3
  405758:	cmc    
  405759:	test   al,bh
  40575b:	add    al,0x6
  40575d:	adc    ecx,DWORD PTR [ebx+0x7]
  405760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405761:	(bad)  
  405762:	dec    esi
  405763:	xchg   ecx,eax
  405764:	mov    esi,0xe8843327
  405769:	and    eax,0x5ce3e00b
  40576e:	dec    ecx
  40576f:	sti    
  405770:	std    
  405771:	dec    edx
  405772:	icebp  
  405773:	pop    esp
  405774:	mov    eax,ds:0x86c0a7c9
  405779:	(bad)  [edi]
  40577b:	lods   eax,DWORD PTR ds:[esi]
  40577c:	aaa    
  40577d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40577e:	mov    ds:0x4ba60c26,eax
  405783:	jle    0x405786
  405785:	pusha  
  405786:	fs or  al,0x9f
  405789:	rcr    al,0x70
  40578c:	inc    esp
  40578d:	imul   edx,DWORD PTR [eax],0x639f1d31
  405793:	loope  0x40575e
  405795:	cmp    DWORD PTR [ebp-0x5d],ecx
  405798:	xor    BYTE PTR [ecx],bh
  40579a:	in     eax,0xeb
  40579c:	sub    al,0x40
  40579e:	inc    ecx
  40579f:	cli    
  4057a0:	fbld   TBYTE PTR [eax+0x7b]
  4057a3:	test   al,0xdb
  4057a5:	sbb    BYTE PTR [ecx+0x6a],ah
  4057a8:	js     0x40575c
  4057aa:	imul   edi,esp,0x8ce17f5a
  4057b0:	hlt    
  4057b1:	nop
  4057b2:	dec    ebp
  4057b3:	pop    ecx
  4057b4:	mov    dl,0x35
  4057b6:	inc    esi
  4057b7:	std    
  4057b8:	and    edx,esi
  4057ba:	push   ebx
  4057bb:	retf   0x79cf
  4057be:	fstp   QWORD PTR [edi+0x15]
  4057c1:	mov    ebp,0xb96fbdc8
  4057c6:	imul   edi,DWORD PTR ds:0xc17f5664,0xffffffdb
  4057cd:	mov    ds:0x3a4b0572,eax
  4057d2:	mov    ch,0x9f
  4057d4:	ds xchg edi,eax
  4057d6:	retf   0xf0f3
  4057d9:	add    eax,0xe6e5f315
  4057de:	call   0x961ab9fe
  4057e3:	cmp    DWORD PTR [ebx-0x18],0x60f36421
  4057ea:	sub    al,BYTE PTR [edx+0x4a]
  4057ed:	adc    cl,BYTE PTR [ebp+0x708db7b5]
  4057f3:	add    eax,0x76983e82
  4057f8:	dec    esi
  4057f9:	arpl   WORD PTR [esi+0x6226a58d],bp
  4057ff:	repnz add BYTE PTR [esi],0x68
  405803:	add    dh,0xa3
  405806:	and    DWORD PTR [edx],esp
  405808:	xchg   ebp,eax
  405809:	xchg   esi,eax
  40580a:	div    esi
  40580c:	cmc    
  40580d:	pop    ebp
  40580e:	inc    edi
  40580f:	add    eax,0xe7fa3a1
  405814:	test   eax,0x954e31df
  405819:	xor    BYTE PTR ds:0x696b8386,cl
  40581f:	test   al,0xd6
  405821:	(bad)  
  405822:	repnz sub ah,al
  405825:	fldcw  WORD PTR [edi+0x64]
  405828:	cs xor eax,0xcdc21cce
  40582e:	mov    esp,0xebb1a73d
  405833:	inc    ebp
  405834:	ror    esi,1
  405836:	dec    ecx
  405837:	dec    ebx
  405838:	mov    eax,es:0x287a6c46
  40583e:	outs   dx,BYTE PTR ds:[esi]
  40583f:	mov    ch,0xa7
  405841:	outs   dx,DWORD PTR ds:[esi]
  405842:	cmc    
  405843:	jbe    0x4057d6
  405845:	in     eax,0x8b
  405847:	push   esp
  405848:	sub    edx,edx
  40584a:	adc    al,0xa2
  40584c:	(bad)  
  40584d:	adc    DWORD PTR [edx+0x23],ecx
  405850:	out    0xea,al
  405852:	mov    dl,0x38
  405854:	inc    edi
  405855:	(bad)  
  405856:	ins    DWORD PTR es:[edi],dx
  405857:	sub    eax,0xae2d491b
  40585c:	adc    DWORD PTR [ecx+ecx*8+0x5ae2530f],esi
  405863:	lahf   
  405864:	in     al,dx
  405865:	enter  0xa1b2,0x98
  405869:	dec    edx
  40586a:	xchg   ebx,eax
  40586b:	pop    edx
  40586c:	dec    ebp
  40586d:	jne    0x405806
  40586f:	xchg   ebx,eax
  405870:	retf   
  405871:	jns    0x4058ed
  405873:	icebp  
  405874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405875:	gs mov cl,0xa
  405878:	cmp    BYTE PTR ds:0x73e93b87,cl
  40587e:	ins    DWORD PTR es:[edi],dx
  40587f:	inc    eax
  405880:	mov    eax,ds:0x96bc96ba
  405885:	js     0x405857
  405887:	sbb    eax,0x5bd280fa
  40588c:	inc    ecx
  40588d:	repz jns 0x405883
  405890:	inc    esi
  405891:	lods   eax,DWORD PTR ds:[esi]
  405892:	jle    0x405852
  405894:	mov    bl,0xfd
  405896:	out    0x5b,al
  405898:	mov    ?,WORD PTR ds:0xdc50306f
  40589e:	push   esp
  40589f:	lods   al,BYTE PTR ds:[esi]
  4058a0:	jmp    0x4058cf
  4058a2:	loope  0x405867
  4058a4:	jno    0x40588a
  4058a6:	xchg   ecx,eax
  4058a7:	inc    ecx
  4058a8:	jmp    DWORD PTR [ebp+0x13]
  4058ab:	fimul  DWORD PTR [ebx-0x2cde9f49]
  4058b1:	adc    BYTE PTR [edx],0xc7
  4058b4:	fcmovnbe st,st(1)
  4058b6:	jl     0x40587b
  4058b8:	adc    BYTE PTR [ecx-0x6c],cl
  4058bb:	sub    BYTE PTR [ebx-0x26],cl
  4058be:	cwde   
  4058bf:	dec    esi
  4058c0:	mov    bl,0x28
  4058c2:	push   edx
  4058c3:	fs jmp 0x5849:0xef16eb31
  4058cb:	or     DWORD PTR [ecx+0x6d],eax
  4058ce:	lods   eax,DWORD PTR ds:[esi]
  4058cf:	xchg   edx,eax
  4058d0:	aad    0xf5
  4058d2:	shl    DWORD PTR [edx-0x6c],0xa3
  4058d6:	push   es
  4058d7:	mov    eax,0x5cf7c5cc
  4058dc:	lods   al,BYTE PTR ds:[esi]
  4058dd:	or     ebx,edx
  4058df:	int    0x5f
  4058e1:	(bad)  
  4058e2:	popa   
  4058e3:	popf   
  4058e4:	push   edx
  4058e5:	or     BYTE PTR [eax+0x3e],bh
  4058e8:	mov    WORD PTR [ecx-0x6d],?
  4058eb:	add    eax,0xb2faa4a2
  4058f0:	inc    esi
  4058f1:	addr16 mov dh,0xec
  4058f4:	and    ecx,ebp
  4058f6:	fild   QWORD PTR [ebx+eax*1]
  4058f9:	mov    ah,0x78
  4058fb:	popa   
  4058fc:	sbb    ch,BYTE PTR [edx+0x61042216]
  405902:	or     DWORD PTR [ebx-0x628b49a9],0xa21fce58
  40590c:	mov    bh,0xb5
  40590e:	add    al,0x61
  405910:	mov    WORD PTR [ebp+0x6e949193],cs
  405916:	sub    DWORD PTR [eax-0x787d1499],ecx
  40591c:	cmp    al,0xcd
  40591e:	xor    al,0xcd
  405920:	ja     0x4058cc
  405922:	xchg   ebp,eax
  405923:	xor    DWORD PTR [bx+0x2081],0x2b
  405929:	sub    eax,0x62bae6f4
  40592e:	dec    ebx
  40592f:	popf   
  405930:	sbb    BYTE PTR [edx+0x52e74913],0x7b
  405937:	test   BYTE PTR [esi],bl
  405939:	push   edx
  40593a:	call   0xa7fcdeb
  40593f:	test   al,0xb7
  405941:	xor    al,0xf9
  405943:	xchg   esp,eax
  405944:	repnz test al,0xf6
  405947:	aaa    
  405948:	stos   DWORD PTR es:[edi],eax
  405949:	mov    ebx,0xc5c4356d
  40594e:	xor    eax,0xcca7d0f
  405953:	inc    esp
  405954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405955:	and    al,0xba
  405957:	loopne 0x405910
  405959:	test   BYTE PTR [edi],dh
  40595b:	push   eax
  40595c:	outs   dx,BYTE PTR ds:[esi]
  40595d:	add    al,0x5b
  40595f:	adc    bl,bh
  405961:	jne    0x405996
  405963:	data16 xlat BYTE PTR ds:[ebx]
  405965:	or     DWORD PTR [edi-0x5a],0xb782ce65
  40596c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40596d:	not    dl
  40596f:	out    0x6f,eax
  405971:	sbb    edi,DWORD PTR gs:[ebx-0x79d3839a]
  405978:	mov    ecx,cs
  40597a:	(bad)  
  40597b:	mov    dh,0x2c
  40597d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40597e:	test   DWORD PTR [ebp-0x44701a52],ecx
  405984:	loope  0x405a05
  405986:	push   cs
  405987:	loop   0x4059d9
  405989:	outs   dx,DWORD PTR ds:[esi]
  40598a:	call   0xe730aa65
  40598f:	out    dx,al
  405990:	fistp  QWORD PTR [edi+0x59]
  405993:	cmp    al,0xb6
  405995:	dec    BYTE PTR [ebx+0x75]
  405998:	std    
  405999:	jmp    0x1621a4b0
  40599e:	cmp    edi,edx
  4059a0:	sahf   
  4059a1:	dec    edx
  4059a2:	pop    eax
  4059a3:	adc    al,bl
  4059a5:	or     ebx,DWORD PTR [ebp+0x3]
  4059a8:	push   ecx
  4059a9:	push   es
  4059aa:	mov    ebp,DWORD PTR [edx+0x2f]
  4059ad:	pop    ebx
  4059ae:	pop    eax
  4059af:	mov    bl,0xd9
  4059b1:	cmp    DWORD PTR [esp+eiz*2],edi
  4059b4:	xchg   esp,eax
  4059b5:	rol    DWORD PTR [eax-0x50],cl
  4059b8:	rol    DWORD PTR [esi],1
  4059ba:	stos   BYTE PTR es:[edi],al
  4059bb:	cmp    esi,edi
  4059bd:	jmp    0x405982
  4059bf:	clc    
  4059c0:	pop    ds
  4059c1:	xchg   BYTE PTR [ebp-0x5c19932a],ah
  4059c7:	sbb    ch,dh
  4059c9:	push   ecx
  4059ca:	popa   
  4059cb:	dec    ecx
  4059cc:	sub    eax,0x47e28d96
  4059d1:	mov    esi,0xff0e73d3
  4059d6:	or     eax,0x4f7d79b4
  4059db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059dc:	push   edx
  4059dd:	cdq    
  4059de:	mul    DWORD PTR [esp+eiz*4+0x0]
  4059e2:	xchg   edx,eax
  4059e3:	mov    dl,0x59
  4059e5:	and    al,BYTE PTR [edi-0x639d9844]
  4059eb:	jns    0x405992
  4059ed:	sub    al,0x91
  4059ef:	outs   dx,BYTE PTR ds:[esi]
  4059f0:	pop    esp
  4059f1:	push   esp
  4059f2:	inc    edi
  4059f3:	(bad)  
  4059f4:	mov    bl,0xf
  4059f6:	leave  
  4059f7:	arpl   WORD PTR [esi+0xf],sp
  4059fa:	jno    0x4059c0
  4059fc:	retf   0x4500
  4059ff:	sbb    esi,esp
  405a01:	pop    es
  405a02:	xchg   BYTE PTR [ebx],dl
  405a04:	mov    ds:0xe436c738,eax
  405a09:	jno    0x4059b1
  405a0b:	adc    esp,DWORD PTR [edi+0x12fcf626]
  405a11:	sbb    esi,DWORD PTR [esi+0x4cc5ae0f]
  405a17:	fcomp  st(0)
  405a19:	leave  
  405a1a:	in     eax,0xcc
  405a1c:	sti    
  405a1d:	(bad)  
  405a1e:	aas    
  405a1f:	inc    ebp
  405a20:	jae    0x4059f4
  405a22:	pop    ss
  405a23:	cmp    ecx,ebp
  405a25:	fcmovnbe st,st(3)
  405a27:	or     BYTE PTR [eax+0x4563c7af],dh
  405a2d:	mov    ebp,0x100910f6
  405a32:	or     ecx,esi
  405a34:	out    0x2a,al
  405a36:	fdivr  QWORD PTR [eax]
  405a38:	nop
  405a39:	fbstp  TBYTE PTR [esi]
  405a3b:	xor    DWORD PTR [ebp-0x5432f40e],ecx
  405a41:	inc    esp
  405a42:	pop    ss
  405a43:	out    dx,al
  405a44:	add    BYTE PTR [eax+0x3],0x81
  405a48:	cmp    eax,0x9d2a07dd
  405a4d:	neg    edx
  405a4f:	js     0x405a75
  405a51:	pop    eax
  405a52:	aad    0x76
  405a54:	pop    ecx
  405a55:	popf   
  405a56:	daa    
  405a57:	je     0x405a66
  405a59:	fisttp WORD PTR [bp+di-0x35]
  405a5d:	scas   al,BYTE PTR es:[edi]
  405a5e:	int3   
  405a5f:	mov    al,dh
  405a61:	lds    edx,FWORD PTR [edx]
  405a63:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a65:	sar    DWORD PTR [ecx+0x62],1
  405a68:	pop    edx
  405a69:	aas    
  405a6a:	lods   eax,DWORD PTR ds:[esi]
  405a6b:	inc    ebp
  405a6c:	xor    al,0x82
  405a6e:	mov    ds:0x4df0295f,eax
  405a73:	inc    DWORD PTR [edi]
  405a75:	iret   
  405a76:	cmp    DWORD PTR es:[ebx],eax
  405a79:	mov    al,0xa4
  405a7b:	mov    BYTE PTR [edi+eax*4],bh
  405a7e:	jne    0x405a6c
  405a80:	je     0x405ae6
  405a82:	cmp    DWORD PTR [ebx],ebp
  405a84:	xchg   ebp,ebx
  405a86:	mov    dl,0x82
  405a88:	je     0x405a43
  405a8a:	test   bl,0x31
  405a8d:	jge    0x405a23
  405a8f:	dec    eax
  405a90:	test   DWORD PTR [ebx],esp
  405a92:	sub    esi,eax
  405a94:	into   
  405a95:	jns    0x405acf
  405a97:	test   BYTE PTR [esi-0x69],ch
  405a9a:	(bad)  
  405a9b:	jle    0x405af9
  405a9d:	test   eax,0xcdfee104
  405aa2:	mov    ah,0x3a
  405aa4:	sbb    edi,ebx
  405aa6:	inc    esp
  405aa7:	xchg   BYTE PTR [esi-0x1dc55fd7],bl
  405aad:	ins    BYTE PTR es:[edi],dx
  405aae:	stos   BYTE PTR es:[edi],al
  405aaf:	rcl    dh,0x57
  405ab2:	push   edi
  405ab3:	cmp    BYTE PTR [eax-0x2853863b],bh
  405ab9:	retf   0x8708
  405abc:	rol    DWORD PTR [ecx+0x1d],1
  405abf:	(bad)  
  405ac0:	xor    bh,BYTE PTR [eax]
  405ac2:	stos   BYTE PTR es:[edi],al
  405ac3:	or     BYTE PTR cs:[eax-0x645e97],bh
  405aca:	cld    
  405acb:	popa   
  405acc:	jp     0x405aa2
  405ace:	fisubr WORD PTR [esi+0x1d78a8c]
  405ad4:	mov    bh,0x25
  405ad6:	xchg   edx,eax
  405ad7:	loope  0x405b4d
  405ad9:	in     eax,0xae
  405adb:	test   al,0x9b
  405add:	sahf   
  405ade:	pop    eax
  405adf:	sbb    BYTE PTR [edi-0x6276a714],bh
  405ae5:	leave  
  405ae6:	lea    esi,[ecx-0x7d]
  405ae9:	mov    eax,0xe06bf61c
  405aee:	xor    al,0xce
  405af0:	xor    al,0x1b
  405af2:	jae    0x405afc
  405af4:	stos   BYTE PTR es:[edi],al
  405af5:	mov    ebx,0x1b003479
  405afa:	xor    eax,0x5ec7526b
  405aff:	mov    edx,0xf9a28dcf
  405b04:	popf   
  405b05:	repnz sbb BYTE PTR [ecx+0x3860c8a5],dh
  405b0c:	mov    bl,0x3f
  405b0e:	mov    bh,0xff
  405b10:	repz or al,0x28
  405b13:	mov    WORD PTR [edi],?
  405b15:	push   eax
  405b16:	ffreep st(7)
  405b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b19:	ins    BYTE PTR es:[edi],dx
  405b1a:	xchg   ch,dl
  405b1c:	pop    esp
  405b1d:	or     al,0xdb
  405b1f:	and    ebp,edi
  405b21:	jb     0x405b22
  405b23:	ss xor esp,eax
  405b26:	mov    edx,0x71356f5d
  405b2b:	mov    bl,0xdf
  405b2d:	(bad)  
  405b2f:	sti    
  405b30:	loope  0x405b45
  405b32:	pop    esi
  405b33:	xor    ah,BYTE PTR [esi+ecx*8]
  405b36:	cdq    
  405b37:	sti    
  405b38:	daa    
  405b39:	in     eax,dx
  405b3a:	adc    eax,0x3d44adf6
  405b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b40:	outs   dx,BYTE PTR ds:[esi]
  405b41:	ins    DWORD PTR es:[edi],dx
  405b42:	scas   eax,DWORD PTR es:[edi]
  405b43:	jnp    0x405b60
  405b45:	cmp    DWORD PTR [ebp+0x4ab3d289],eax
  405b4b:	test   esp,eax
  405b4d:	mov    edx,0x86ef0a0a
  405b52:	jmp    0x82402d3c
  405b57:	je     0x405b99
  405b59:	dec    ecx
  405b5a:	mov    ds,WORD PTR [edi]
  405b5c:	test   eax,0x58d9fd16
  405b61:	sub    ah,cl
  405b63:	sub    DWORD PTR [edx],ebx
  405b65:	test   al,0xdc
  405b67:	mov    esp,0xfca00658
  405b6c:	dec    eax
  405b6d:	mov    dh,0x73
  405b6f:	mov    BYTE PTR [esi-0x66bb9f85],dl
  405b75:	pop    es
  405b76:	push   edx
  405b77:	mov    eax,ds:0xc3db827b
  405b7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b7d:	mov    edi,0x4e4b795f
  405b82:	outs   dx,DWORD PTR ds:[esi]
  405b83:	xor    BYTE PTR [esi+0x764d9467],al
  405b89:	es sub eax,0xc416c9bb
  405b8f:	mov    ch,0xb7
  405b91:	jo     0x405bec
  405b93:	aas    
  405b94:	scas   al,BYTE PTR es:[edi]
  405b95:	pushf  
  405b96:	dec    ebx
  405b97:	jae    0x405bc1
  405b99:	or     BYTE PTR [edx],dh
  405b9b:	push   ebx
  405b9c:	pop    es
  405b9d:	imul   ebp,DWORD PTR es:0xd287a886,0x3e
  405ba5:	addr16 pop ecx
  405ba7:	aad    0x41
  405ba9:	and    ebp,DWORD PTR [edx]
  405bab:	xchg   ebx,eax
  405bac:	ret    0x25f
  405baf:	dec    ecx
  405bb0:	pop    es
  405bb1:	push   ebp
  405bb2:	daa    
  405bb3:	(bad)  
  405bb4:	xchg   ebx,eax
  405bb5:	ins    DWORD PTR es:[edi],dx
  405bb6:	cli    
  405bb7:	or     al,0x7f
  405bb9:	dec    ecx
  405bba:	cmp    al,0x7f
  405bbc:	test   al,0x5e
  405bbe:	mov    ebp,0xba50c21d
  405bc3:	mov    db2,eax
  405bc6:	jp     0x405c06
  405bc8:	adc    cl,BYTE PTR [esp+ecx*8-0x6db51477]
  405bcf:	mov    ebx,DWORD PTR ds:0x5467ad27
  405bd5:	call   0xf4cb:0xe026044d
  405bdc:	pop    edi
  405bdd:	dec    ecx
  405bde:	sbb    BYTE PTR [edx+0x46],ch
  405be1:	int    0xa3
  405be3:	imul   esp,DWORD PTR [ecx+0x52],0x36
  405be7:	jnp    0x405c40
  405be9:	stc    
  405bea:	adc    DWORD PTR [edi+ebx*2-0x6be00de6],edx
  405bf1:	dec    ebx
  405bf2:	ret    
  405bf3:	loop   0x405bae
  405bf5:	test   eax,0x30971063
  405bfa:	enter  0xf2c7,0x69
  405bfe:	mov    ebx,0x6b3e0025
  405c03:	shr    BYTE PTR [esi],1
  405c05:	add    dl,bl
  405c07:	add    BYTE PTR [ecx-0x6b],cl
  405c0a:	add    eax,0xfe35961e
  405c0f:	jb     0x405c68
  405c11:	dec    ecx
  405c12:	dec    ebx
  405c13:	pusha  
  405c14:	pop    esi
  405c15:	and    eax,0x83139b7a
  405c1a:	lahf   
  405c1b:	out    dx,eax
  405c1c:	xchg   ecx,eax
  405c1d:	xor    bl,BYTE PTR [ebx+0x6f65103c]
  405c23:	shl    BYTE PTR [eax-0x26a2bac0],cl
  405c29:	iret   
  405c2a:	xor    ch,bh
  405c2c:	jl     0x405c4d
  405c2e:	xor    eax,0x707abf8d
  405c33:	mov    ebx,ds
  405c35:	das    
  405c36:	les    ebx,FWORD PTR [ecx+edi*4-0x7473ada]
  405c3d:	mov    bh,0x4d
  405c3f:	stos   DWORD PTR es:[edi],eax
  405c40:	dec    ebx
  405c41:	dec    eax
  405c42:	xchg   dl,cl
  405c44:	mov    ah,0xda
  405c46:	faddp  st(3),st
  405c48:	loop   0x405c9a
  405c4a:	dec    esi
  405c4b:	mov    al,0xa1
  405c4d:	popf   
  405c4e:	dec    esp
  405c4f:	outs   dx,BYTE PTR ds:[esi]
  405c50:	pop    ds
  405c51:	add    al,0x21
  405c53:	retf   0x3c3e
  405c56:	add    eax,0xb7a4d514
  405c5b:	jne    0x405c0f
  405c5d:	pop    ds
  405c5e:	inc    eax
  405c5f:	(bad)  
  405c60:	cmp    esp,DWORD PTR [edx-0x72ec6b18]
  405c66:	cmp    al,0x7a
  405c68:	jae    0x405cd7
  405c6a:	jg     0x405c39
  405c6c:	or     edx,0x27a89d9a
  405c72:	cmp    ch,BYTE PTR [edi]
  405c74:	and    ah,al
  405c76:	adc    BYTE PTR [esi-0x1a8d75f4],ch
  405c7c:	pop    ecx
  405c7d:	je     0x405c67
  405c7f:	in     eax,0xc5
  405c81:	jle    0x405cb9
  405c83:	lds    edi,FWORD PTR [ebx]
  405c85:	xor    al,0xcb
  405c87:	push   edi
  405c88:	arpl   di,bp
  405c8a:	iret   
  405c8b:	sub    ah,cl
  405c8d:	pop    ds
  405c8e:	lock ins DWORD PTR es:[edi],dx
  405c90:	inc    edi
  405c91:	xor    al,0xc2
  405c93:	jnp    0x405c9a
  405c95:	pop    ebx
  405c96:	dec    ebp
  405c97:	fisttp WORD PTR [eax+ecx*1]
  405c9a:	push   es
  405c9b:	xchg   ebx,eax
  405c9c:	mov    ah,0x3d
  405c9e:	push   eax
  405c9f:	push   ecx
  405ca0:	popa   
  405ca1:	push   eax
  405ca2:	or     ebp,DWORD PTR [ecx+0x2aeba94d]
  405ca8:	mov    esp,0xc6db63a2
  405cad:	sub    al,0x5
  405caf:	inc    ecx
  405cb0:	popf   
  405cb1:	add    ecx,DWORD PTR [ecx-0x6bf4044e]
  405cb7:	or     al,0x51
  405cb9:	push   0x60
  405cbb:	push   edx
  405cbc:	xchg   esi,eax
  405cbd:	dec    edx
  405cbe:	dec    ecx
  405cbf:	cdq    
  405cc0:	push   esi
  405cc1:	popf   
  405cc2:	jns    0x405cff
  405cc4:	loopne 0x405d01
  405cc6:	test   DWORD PTR [ecx-0x630748cd],ecx
  405ccc:	enter  0xf305,0x17
  405cd0:	mov    edx,0xa336e706
  405cd5:	mov    al,ds:0xf9cfb5a4
  405cda:	rcr    bl,cl
  405cdc:	sbb    eax,0x41235d36
  405ce1:	xor    eax,DWORD PTR [ecx+0x5e9b634c]
  405ce7:	fnstcw WORD PTR [edx]
  405ce9:	pop    edx
  405cea:	in     eax,dx
  405ceb:	push   eax
  405cec:	out    dx,al
  405ced:	sub    ecx,DWORD PTR [ebp-0x5a]
  405cf0:	and    eax,0xfcc82432
  405cf5:	stos   BYTE PTR es:[edi],al
  405cf6:	xchg   ecx,eax
  405cf7:	sbb    al,0xa3
  405cf9:	dec    esp
  405cfa:	test   eax,0x75822c
  405cff:	lds    eax,FWORD PTR [edi-0x3b01b0df]
  405d05:	inc    ebp
  405d06:	test   eax,0xdf6c5042
  405d0b:	xchg   ebp,eax
  405d0c:	push   edx
  405d0d:	in     al,dx
  405d0e:	cmp    eax,0xf5b033ae
  405d13:	(bad)  
  405d15:	dec    ebx
  405d16:	jmp    0x405d61
  405d18:	mov    eax,0xbf0da5c5
  405d1d:	loopne 0x405d39
  405d1f:	lahf   
  405d20:	aam    0xbb
  405d22:	popf   
  405d23:	loope  0x405ccc
  405d25:	pop    eax
  405d26:	lock inc ebx
  405d28:	mov    DWORD PTR [eax],edi
  405d2a:	stos   BYTE PTR es:[edi],al
  405d2b:	sbb    al,0x55
  405d2d:	xor    eax,0x4bf9bf6
  405d32:	or     al,0xa
  405d34:	add    edx,DWORD PTR [edx-0xa]
  405d37:	mov    BYTE PTR [ebx+0x1e432224],dl
  405d3d:	rcl    ebp,cl
  405d3f:	inc    eax
  405d40:	add    BYTE PTR [ecx],dl
  405d42:	aad    0x6c
  405d44:	test   cl,cl
  405d46:	cs push ds
  405d48:	mov    eax,0x69bc4e27
  405d4d:	push   0x6891ef31
  405d52:	sbb    al,0xd3
  405d54:	sub    dh,ch
  405d56:	imul   ebx,ebp,0xe07ee1b5
  405d5c:	arpl   WORD PTR [ecx],ax
  405d5e:	xor    DWORD PTR [eax+esi*2],edx
  405d61:	and    BYTE PTR [esp+edx*4+0x5c9051da],cl
  405d68:	ror    DWORD PTR ds:0xbfe786fb,1
  405d6e:	xor    cl,dl
  405d70:	nop
  405d71:	xchg   esi,eax
  405d72:	xchg   esp,eax
  405d73:	xchg   ecx,eax
  405d74:	dec    eax
  405d75:	mov    bh,0x88
  405d77:	ret    
  405d78:	and    BYTE PTR [ecx],cl
  405d7a:	aam    0xa5
  405d7c:	sub    bh,BYTE PTR [eax]
  405d7e:	leave  
  405d7f:	es clc 
  405d81:	jecxz  0x405d87
  405d83:	inc    ebx
  405d84:	and    edi,edx
  405d86:	and    eax,0x130b7e93
  405d8b:	cmp    DWORD PTR [edx],edx
  405d8d:	mov    ah,0x54
  405d8f:	add    al,0x6
  405d91:	push   cs
  405d92:	dec    edx
  405d93:	jge    0x405e0d
  405d95:	retf   0x2795
  405d98:	hlt    
  405d99:	ja     0x405e18
  405d9b:	mov    BYTE PTR [eax+ebx*4+0x38],cl
  405d9f:	test   eax,0x41e5027e
  405da4:	sbb    dh,BYTE PTR [ebp+0xb]
  405da7:	mov    al,ds:0x7387bae3
  405dac:	pushf  
  405dad:	sub    DWORD PTR [ebx],esp
  405daf:	inc    edi
  405db0:	(bad)  
  405db1:	js     0x405dd0
  405db3:	out    0xcb,eax
  405db5:	mov    fs,WORD PTR [eax]
  405db7:	stos   BYTE PTR es:[edi],al
  405db8:	mov    ebx,ecx
  405dba:	jbe    0x405e0d
  405dbc:	mov    ebp,0x18db3436
  405dc1:	push   ecx
  405dc2:	call   0x6b98e9ec
  405dc7:	cmp    DWORD PTR [eax+0x6691f1e9],esp
  405dcd:	xchg   ebx,eax
  405dce:	adc    DWORD PTR [ebp+edi*8+0x21],ecx
  405dd2:	ret    
  405dd3:	hlt    
  405dd4:	mov    esi,0x2fc51367
  405dd9:	adc    ebx,DWORD PTR [esi-0x65cbfeb4]
  405ddf:	and    eax,0x8fa09fd8
  405de4:	iret   
  405de5:	dec    esp
  405de6:	mov    bh,0xa4
  405de8:	lods   al,BYTE PTR ds:[esi]
  405de9:	mov    eax,0x648fb227
  405dee:	mov    edx,ebx
  405df0:	jle    0x405dfa
  405df2:	pop    edx
  405df3:	repz aas 
  405df5:	mov    bh,0x9f
  405df7:	add    edi,DWORD PTR [ebx-0x2b719b33]
  405dfd:	fadd   QWORD PTR [ebp+esi*4-0x14]
  405e01:	(bad)  
  405e02:	adc    al,0x70
  405e04:	lock add eax,0xf475a41f
  405e0a:	xor    eax,0xbc47225
  405e0f:	fnstenv [ecx-0x1ed6bd4b]
  405e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e16:	cwde   
  405e17:	jmp    0x4eaa:0x8201b61
  405e1e:	ficomp WORD PTR [esi+esi*4]
  405e21:	cwde   
  405e22:	push   esi
  405e23:	pusha  
  405e24:	ret    
  405e25:	push   ebp
  405e26:	inc    esi
  405e27:	xor    BYTE PTR [ebx],ch
  405e29:	sbb    esp,ebp
  405e2b:	pop    esi
  405e2c:	mov    edx,ebx
  405e2e:	jnp    0x405dee
  405e30:	ret    
  405e31:	lea    edi,fs:[esp+esi*2+0x3a04f039]
  405e39:	cwde   
  405e3a:	addr16 (bad) 
  405e3c:	sub    edx,DWORD PTR [edx]
  405e3e:	out    0x24,al
  405e40:	ret    0x9334
  405e43:	call   0x3555:0x6384f4c7
  405e4a:	(bad)  
  405e4c:	ja     0x405e16
  405e4e:	dec    edx
  405e4f:	adc    dh,BYTE PTR ds:[bx]
  405e53:	adc    eax,0xf5fe99f2
  405e58:	and    eax,0x46838411
  405e5d:	mov    ch,0xa6
  405e5f:	not    cl
  405e61:	aas    
  405e62:	ds ss nop
  405e65:	pop    ecx
  405e66:	cmp    DWORD PTR ds:0x6d5c35d4,0xa57dd4b
  405e70:	push   esp
  405e71:	mov    al,ds:0xaeac59f4
  405e76:	mov    al,0xb4
  405e78:	rol    BYTE PTR [esi-0x56],cl
  405e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e7d:	test   eax,0x32d0052e
  405e82:	rcl    BYTE PTR [edi],cl
  405e84:	retf   
  405e85:	aad    0xd5
  405e87:	or     BYTE PTR [edx-0x34],ah
  405e8a:	mov    ds:0xebd79be5,eax
  405e8f:	add    eax,0x9a7770bb
  405e94:	adc    esp,eax
  405e96:	xchg   esi,eax
  405e97:	fsubr  QWORD PTR [edx]
  405e99:	mov    bl,0xa3
  405e9b:	jns    0x405ef2
  405e9d:	outs   dx,BYTE PTR ds:[esi]
  405e9e:	pop    ebx
  405e9f:	cs inc edx
  405ea1:	cmp    ebp,DWORD PTR [eax+0x2a]
  405ea4:	gs scas al,BYTE PTR es:[edi]
  405ea6:	push   edx
  405ea7:	cmp    eax,0x631fc705
  405eac:	(bad)  
  405ead:	add    BYTE PTR [ecx-0x2fa94b89],bl
  405eb3:	test   eax,0x7205fff1
  405eb8:	inc    esp
  405eb9:	push   esp
  405eba:	lea    edx,[ebp+0x24916132]
  405ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ec1:	lds    ebx,FWORD PTR [ebx-0x76]
  405ec4:	push   ebx
  405ec5:	sahf   
  405ec6:	dec    edx
  405ec7:	inc    BYTE PTR [esi+edx*1-0x7b9205d]
  405ece:	imul   ebp,DWORD PTR [ebx-0x76],0xffffffd6
  405ed2:	fstp   QWORD PTR [esi-0x5]
  405ed5:	mov    es,WORD PTR [esi]
  405ed7:	dec    edi
  405ed8:	pop    eax
  405ed9:	lahf   
  405eda:	fsub   DWORD PTR [bx]
  405edd:	(bad)  
  405ede:	lock or DWORD PTR [esi+0x46],esp
  405ee2:	adc    BYTE PTR [ebx+ebx*4+0x47470ce4],dl
  405ee9:	mov    ecx,0x940b7b5
  405eee:	jg     0x405f5a
  405ef0:	and    eax,0x89307c47
  405ef5:	fwait
  405ef6:	ret    0xa2b6
  405ef9:	xor    bl,bh
  405efb:	(bad)  
  405efc:	fst    DWORD PTR [ebx-0x37]
  405eff:	dec    esi
  405f00:	sbb    al,0x6e
  405f02:	jmp    0x1b0b:0x19e2c714
  405f09:	bsr    eax,esp
  405f0c:	jne    0x405ed0
  405f0e:	jns    0x405f76
  405f10:	add    DWORD PTR [ebx+0x6],ebx
  405f13:	xor    eax,0xc38ec2e9
  405f18:	unpcklps xmm3,xmm1
  405f1b:	mov    ebx,0x5f0f4248
  405f20:	jae    0x405f92
  405f22:	aad    0x70
  405f24:	lods   al,BYTE PTR ds:[esi]
  405f25:	dec    ecx
  405f26:	sub    al,0xe6
  405f28:	das    
  405f29:	xor    eax,0x2dbcacd2
  405f2e:	xchg   ecx,eax
  405f2f:	ss cmp al,dl
  405f32:	data16 js 0x405fb0
  405f35:	rol    BYTE PTR [edx+ebp*8-0x34],0x39
  405f3a:	mov    bh,0x77
  405f3c:	mov    ebx,0x4d43b57b
  405f41:	cmp    edx,esp
  405f43:	test   BYTE PTR [esi-0xe],ch
  405f46:	mov    ebp,ebx
  405f48:	jge    0x405f39
  405f4a:	fistp  QWORD PTR [ebx-0x313d49a0]
  405f50:	out    0xa9,eax
  405f52:	push   es
  405f53:	inc    ebp
  405f54:	jb     0x405f4c
  405f56:	inc    ecx
  405f57:	repnz arpl WORD PTR [ecx-0x34748552],di
  405f5e:	call   0x6116:0x8f3f2eaa
  405f65:	loopne 0x405fa7
  405f67:	cmp    dh,dl
  405f69:	dec    esi
  405f6a:	mov    edx,0xae7f008c
  405f6f:	jge    0x405fe6
  405f71:	add    DWORD PTR [ebx],edx
  405f73:	add    BYTE PTR [edi],al
  405f75:	jmp    0x9e1ea14d
  405f7a:	jmp    0x405f23
  405f7c:	(bad)  [ebp-0x40]
  405f7f:	adc    edi,DWORD PTR [eax]
  405f81:	iret   
  405f82:	and    eax,0x15daad1b
  405f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f88:	adc    al,0x8b
  405f8a:	cmp    BYTE PTR [edx-0x48],ah
  405f8d:	fwait
  405f8e:	dec    esi
  405f8f:	popf   
  405f90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f91:	dec    ebp
  405f92:	jmp    0x5bbb:0xbddf781c
  405f99:	sub    eax,DWORD PTR [esi]
  405f9b:	jno    0x405fdf
  405f9d:	or     al,0xd
  405f9f:	fst    st(1)
  405fa1:	dec    ebp
  405fa2:	jns    0x405fba
  405fa4:	stc    
  405fa5:	dec    edx
  405fa6:	popa   
  405fa7:	sub    BYTE PTR [esi+ecx*2-0x23],bl
  405fab:	mov    esi,0xc40c6ac8
  405fb0:	sbb    dl,bl
  405fb2:	and    ch,BYTE PTR ds:0x589fe817
  405fb8:	ror    BYTE PTR [esi+eax*2],0x17
  405fbc:	jb     0x405f9c
  405fbe:	and    eax,0x644a249d
  405fc3:	jmp    0x5549:0xf3ac6607
  405fca:	js     0x405f86
  405fcc:	fisubr DWORD PTR [eax]
  405fce:	in     eax,dx
  405fcf:	call   0x96506668
  405fd4:	or     al,0x5f
  405fd6:	mov    ebp,0xd02134ca
  405fdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fdc:	add    DWORD PTR [esi*1-0x6c50b43a],esp
  405fe3:	mov    dl,0xd4
  405fe5:	cmp    BYTE PTR [ebx+edi*1+0x304ea609],al
  405fec:	into   
  405fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fee:	loopne 0x405f7e
  405ff0:	jge    0x405fe8
  405ff2:	test   al,0xcc
  405ff4:	pop    ebx
  405ff5:	leave  
  405ff6:	inc    ebx
  405ff7:	pop    ecx
  405ff8:	ror    esi,cl
  405ffa:	call   0x6e463f1f
  405fff:	stos   DWORD PTR es:[edi],eax
  406000:	sahf   
  406001:	mov    ds:0xbe736ef7,al
  406006:	sbb    BYTE PTR [ebp+0x50],ch
  406009:	jle    0x406006
  40600b:	or     al,0x1e
  40600d:	and    BYTE PTR [ecx+0x7df714ec],cl
  406013:	or     BYTE PTR [edi],cl
  406015:	scas   eax,DWORD PTR es:[edi]
  406016:	dec    ebp
  406017:	xor    ecx,esp
  406019:	jb     0x405fd7
  40601b:	in     al,dx
  40601c:	pusha  
  40601d:	dec    esi
  40601e:	mov    esi,0x821bef1
  406023:	add    dh,BYTE PTR [edi]
  406025:	ror    ebx,cl
  406027:	mov    esp,0x532486c2
  40602c:	ror    edx,cl
  40602e:	inc    eax
  40602f:	sahf   
  406030:	retf   0x506
  406033:	mov    bl,0x7f
  406035:	stos   DWORD PTR es:[di],eax
  406037:	mul    DWORD PTR [edi-0x36d8aebe]
  40603d:	sub    DWORD PTR [ebp-0x7e],esi
  406040:	rcl    eax,0x7a
  406043:	push   ds
  406044:	adc    dh,bh
  406046:	lods   al,BYTE PTR ds:[esi]
  406047:	sbb    DWORD PTR [esi+0x5a],eax
  40604a:	add    DWORD PTR [edi-0x44],0x5f32a8fd
  406051:	in     eax,dx
  406052:	adc    dh,bl
  406054:	adc    ebx,esi
  406056:	pop    ecx
  406057:	push   edi
  406058:	into   
  406059:	es pop ecx
  40605b:	cmp    BYTE PTR [ebx-0x6bd81f37],ah
  406061:	push   ecx
  406062:	rcl    BYTE PTR [eax-0x2a],cl
  406065:	daa    
  406066:	and    edi,ecx
  406068:	or     DWORD PTR [esi],edi
  40606a:	jmp    0x4e3f:0x17a2bc3d
  406071:	jne    0x4060e3
  406073:	or     esp,ebx
  406075:	sbb    ebp,ebx
  406077:	pop    ss
  406078:	aad    0x6f
  40607a:	pop    ds
  40607b:	clc    
  40607c:	mov    bh,0x4c
  40607e:	cdq    
  40607f:	in     al,0x66
  406081:	test   DWORD PTR [esi+0x3aeab188],edi
  406087:	mov    dl,0xa6
  406089:	addr16 pop ss
  40608b:	lahf   
  40608c:	adc    BYTE PTR [esi+0x21],0x6a
  406090:	or     ch,BYTE PTR [esi]
  406092:	mov    esi,0x525c226
  406097:	enter  0x97b4,0xf2
  40609b:	shl    DWORD PTR [eax],cl
  40609d:	loopne 0x4060c6
  40609f:	scas   eax,DWORD PTR es:[edi]
  4060a0:	(bad)  
  4060a1:	call   0x9fc9eee8
  4060a6:	imul   esp,DWORD PTR [edx],0xc707b3e3
  4060ac:	lds    edi,FWORD PTR [esi+0x4acd9cb3]
  4060b2:	cdq    
  4060b3:	imul   esi,esi,0x712a3fe0
  4060b9:	leave  
  4060ba:	mov    ch,0x4a
  4060bc:	in     eax,dx
  4060bd:	in     al,dx
  4060be:	cmp    BYTE PTR [esi],ch
  4060c0:	push   ds
  4060c1:	cmovle ebp,DWORD PTR [ebx+ebx*2-0x2d63c9e3]
  4060c9:	push   esp
  4060ca:	mov    edx,DWORD PTR [ebp-0xc]
  4060cd:	xor    eax,esi
  4060cf:	add    eax,edi
  4060d1:	imul   eax,edx
  4060d4:	mov    edx,DWORD PTR [ebp-0x28]
  4060d7:	xor    edx,esi
  4060d9:	add    eax,edx
  4060db:	mov    edx,DWORD PTR [ebp-0x8]
  4060de:	movzx  eax,BYTE PTR [eax+edx*1+0x3272f8]
  4060e6:	mov    edx,DWORD PTR [ebp-0x50]
  4060e9:	xor    edx,esi
  4060eb:	lea    eax,[edx+eax*1+0x3272f8]
  4060f2:	movzx  edx,BYTE PTR [ebp-0x1]
  4060f6:	xor    edx,eax
  4060f8:	mov    BYTE PTR [ebp-0x1],dl
  4060fb:	mov    al,BYTE PTR [ebp-0x1]
  4060fe:	mov    edx,DWORD PTR [ebp-0x30]
  406101:	mov    ebx,DWORD PTR [ebp-0xc]
  406104:	xor    edx,esi
  406106:	add    edx,edi
  406108:	imul   edx,ebx
  40610b:	jmp    0x408462
  406110:	add    eax,edx
  406112:	test   BYTE PTR [esi+edx*2],al
  406115:	pop    eax
  406116:	add    edx,ebx
  406118:	push   edx
  406119:	popf   
  40611a:	and    dl,bh
  40611c:	jge    0x406122
  40611e:	js     0x40611f
  406120:	out    dx,eax
  406121:	sar    DWORD PTR [ebx+0x7b],0xb5
  406125:	sahf   
  406126:	jnp    0x4061a3
  406128:	gs cwde 
  40612a:	and    al,0x9d
  40612c:	xor    DWORD PTR [ecx-0x5eb92fe9],ecx
  406132:	hlt    
  406133:	sbb    DWORD PTR [ebp+0x2f],ebx
  406136:	xchg   edi,eax
  406137:	stos   BYTE PTR es:[edi],al
  406138:	inc    ebx
  406139:	cmc    
  40613a:	mov    ah,0xf1
  40613c:	iret   
  40613d:	sub    DWORD PTR [eax+0x7d290b2b],edi
  406143:	push   0xffffff83
  406145:	dec    esi
  406146:	pop    ds
  406147:	fldlg2 
  406149:	and    DWORD PTR [ebp+0x3d822869],ecx
  40614f:	pop    ds
  406150:	mov    eax,0x72fe6bae
  406155:	jecxz  0x406104
  406157:	add    al,0x2
  406159:	mov    cl,0xa6
  40615b:	fistp  QWORD PTR [esi-0x28]
  40615e:	mov    ebx,0x3b5b8f75
  406163:	pop    edi
  406164:	mov    ds:0x63b579d9,al
  406169:	in     al,0x35
  40616b:	imul   edx,DWORD PTR [eax-0x33b2ee80],0xffffffa3
  406172:	stos   DWORD PTR es:[edi],eax
  406173:	fdiv   st(4),st
  406175:	retf   0xc47f
  406178:	cld    
  406179:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40617a:	nop
  40617b:	cmp    bl,al
  40617d:	imul   edx,DWORD PTR [ebp-0x47],0xbfeaa7c
  406184:	rcl    cl,0x9e
  406187:	fmul   QWORD PTR [ecx-0x30]
  40618a:	cmp    cl,BYTE PTR [eax+0x71ea349c]
  406190:	ror    BYTE PTR [eax-0x72790028],0x53
  406197:	mov    ebx,0x1362df60
  40619c:	hlt    
  40619d:	(bad)  
  40619e:	sub    dh,BYTE PTR [eax]
  4061a0:	inc    ecx
  4061a1:	add    edi,0xffffffba
  4061a4:	and    DWORD PTR [ecx],0xffffff86
  4061a7:	adc    esp,DWORD PTR [edi-0xa]
  4061aa:	xchg   edi,eax
  4061ab:	in     al,dx
  4061ac:	mov    bl,0x3d
  4061ae:	jle    0x406173
  4061b0:	mov    cl,0xc6
  4061b2:	pop    es
  4061b3:	ds aas 
  4061b5:	pop    edi
  4061b6:	mov    al,0xe1
  4061b8:	js     0x406206
  4061ba:	hlt    
  4061bb:	xchg   edx,edx
  4061bd:	cli    
  4061be:	jbe    0x406170
  4061c0:	jmp    0x96803022
  4061c5:	mul    cl
  4061c7:	out    dx,eax
  4061c8:	jge    0x406214
  4061ca:	adc    eax,0x7343f588
  4061cf:	mov    dh,dh
  4061d1:	xchg   ecx,eax
  4061d2:	aaa    
  4061d3:	jnp    0x4061d6
  4061d5:	push   ebp
  4061d6:	or     DWORD PTR [esi+0x6e161875],eax
  4061dc:	shl    bh,0x43
  4061df:	push   eax
  4061e0:	ds dec esp
  4061e2:	outs   dx,DWORD PTR ds:[esi]
  4061e3:	jne    0x4061fd
  4061e5:	fist   WORD PTR [ebp-0x15]
  4061e8:	lock pop ds
  4061ea:	add    edx,ebp
  4061ec:	xchg   esi,eax
  4061ed:	mov    al,0x33
  4061ef:	mov    cl,0x43
  4061f1:	adc    al,0xf7
  4061f3:	ret    
  4061f4:	jb     0x406201
  4061f6:	push   esp
  4061f7:	dec    ebp
  4061f8:	jbe    0x4061ea
  4061fa:	xor    BYTE PTR [ecx],cl
  4061fc:	loopne 0x4061f1
  4061fe:	xchg   ecx,eax
  4061ff:	and    DWORD PTR [ebx],0xffffffe7
  406202:	lock push ebp
  406204:	out    dx,al
  406205:	push   ebp
  406206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406207:	out    0xa8,al
  406209:	fwait
  40620a:	xor    eax,0xa8fcbe7a
  40620f:	sub    BYTE PTR [edi-0x46872d6c],dh
  406215:	xor    al,0x1a
  406217:	into   
  406218:	int3   
  406219:	rcl    DWORD PTR ds:0xf9aa9bb2,1
  40621f:	jb     0x4061c8
  406221:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406222:	sbb    eax,ecx
  406224:	rol    DWORD PTR [edi],cl
  406226:	xor    cl,BYTE PTR [ebx-0x3e]
  406229:	jl     0x40627a
  40622b:	paddq  mm5,QWORD PTR [ebp+0xa]
  40622f:	jo     0x4061ca
  406231:	cmp    eax,0xae335c4d
  406236:	sub    al,0x5
  406238:	ret    
  406239:	cmc    
  40623a:	aad    0xbe
  40623c:	push   0xf
  40623e:	(bad)  
  40623f:	pop    edx
  406240:	jbe    0x406233
  406242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406243:	jle    0x406213
  406245:	pushf  
  406246:	xor    eax,0xebfa6022
  40624b:	mov    DWORD PTR [edx+0x6224cd02],esi
  406251:	xor    edi,0x78020d6f
  406257:	push   ecx
  406258:	dec    esi
  406259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40625a:	mov    esi,0xd237486e
  40625f:	dec    ecx
  406260:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406261:	dec    ebp
  406262:	dec    ebp
  406263:	and    eax,0xe3aa86b6
  406268:	js     0x40621d
  40626a:	inc    DWORD PTR [ecx-0x2a]
  40626d:	lods   eax,DWORD PTR ds:[esi]
  40626e:	pop    edx
  40626f:	mul    DWORD PTR [edi+0x3a]
  406272:	loopne 0x40624c
  406274:	and    DWORD PTR [eax+eiz*4-0x2bf54131],0x6c
  40627c:	bound  edx,QWORD PTR ds:0x86d888d5
  406282:	lods   al,BYTE PTR ds:[esi]
  406283:	inc    edx
  406284:	mov    BYTE PTR [ecx],bl
  406286:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406287:	nop
  406288:	(bad)  
  406289:	les    edi,FWORD PTR [ebp+0x20]
  40628c:	gs js  0x40628e
  40628f:	mov    dh,0xc0
  406291:	test   DWORD PTR [esi+0x6ec2a55a],0x4c7e4062
  40629b:	sbb    al,0x7c
  40629d:	jmp    0xbf61:0x4437dada
  4062a4:	fsub   DWORD PTR [esi+0x75808e1b]
  4062aa:	fcomp  DWORD PTR [edi+0x5]
  4062ad:	repnz pop ebx
  4062af:	ror    DWORD PTR [ebx-0x2c],cl
  4062b2:	sahf   
  4062b3:	ins    BYTE PTR es:[edi],dx
  4062b4:	stos   DWORD PTR es:[edi],eax
  4062b5:	pop    ebx
  4062b6:	mov    esp,DWORD PTR [edx+0x6d90458a]
  4062bc:	xor    DWORD PTR [eax],ebp
  4062be:	jns    0x406277
  4062c0:	pop    ds
  4062c1:	lock test eax,0x223b67cb
  4062c7:	adc    eax,eax
  4062c9:	dec    edx
  4062ca:	mov    ch,0x90
  4062cc:	frstor [edi+0x367c15e0]
  4062d2:	xor    dh,bh
  4062d4:	clc    
  4062d5:	push   ss
  4062d6:	ret    
  4062d7:	aas    
  4062d8:	(bad)  
  4062d9:	mov    eax,0xda1eb7b3
  4062de:	cs push 0x277352ca
  4062e4:	cmp    DWORD PTR [eax+0x1463d1e8],esi
  4062ea:	outs   dx,DWORD PTR ds:[esi]
  4062eb:	inc    ebx
  4062ec:	sbb    al,al
  4062ee:	fild   QWORD PTR [ebx+0x1eaf8dfa]
  4062f4:	mov    gs,WORD PTR cs:[eax-0x2a]
  4062f8:	mov    eax,esp
  4062fa:	push   ecx
  4062fb:	or     esi,0xbb1e4682
  406301:	xchg   ebx,eax
  406302:	mov    ?,esp
  406304:	shl    BYTE PTR [ebx],cl
  406306:	pop    eax
  406307:	daa    
  406308:	in     al,0xd6
  40630a:	xor    ecx,ebp
  40630c:	cmp    eax,0x5eea5860
  406311:	lock inc esp
  406313:	loope  0x4062e2
  406315:	je     0x4062f6
  406317:	mov    edi,0xe552a15
  40631c:	sub    al,0x5b
  40631e:	mov    ds:0x57a73b57,al
  406323:	in     eax,dx
  406324:	mov    bl,0xd9
  406326:	push   0x28
  406328:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406329:	jp     0x4062ef
  40632b:	xor    DWORD PTR [eax+0x3e],0xcc32482d
  406332:	ret    
  406333:	sub    ah,BYTE PTR [eax]
  406335:	gs aad 0xe0
  406338:	scas   eax,DWORD PTR es:[edi]
  406339:	cdq    
  40633a:	and    esp,esp
  40633c:	(bad)  
  40633d:	sbb    esi,DWORD PTR [edx]
  40633f:	js     0x406354
  406341:	mov    esi,0x37560a61
  406346:	sub    al,BYTE PTR [edi+0xf]
  406349:	je     0x40633b
  40634b:	loope  0x4062d1
  40634d:	lock pop es
  40634f:	loop   0x406393
  406351:	dec    ebx
  406352:	fs pop esi
  406354:	push   0xb575860c
  406359:	or     bh,al
  40635b:	rcr    BYTE PTR [ebp-0x7c1b0349],1
  406361:	addr16 push 0x4f
  406364:	ds push esi
  406366:	and    DWORD PTR [eax-0x2fa14492],eax
  40636c:	iret   
  40636d:	xor    BYTE PTR [eax+esi*1+0x22],bl
  406371:	leave  
  406372:	mov    eax,0x6dde9e54
  406377:	ror    BYTE PTR [eax],0xd
  40637a:	and    eax,0xb8e6f540
  40637f:	jg     0x40636d
  406381:	pop    edi
  406382:	jp     0x4063b4
  406384:	ror    bl,1
  406386:	enter  0xfdd6,0xaf
  40638a:	cmc    
  40638b:	ret    0x7b87
  40638e:	and    eax,0xf249486f
  406393:	and    eax,0x7a6e09c8
  406398:	fmulp  st(4),st
  40639a:	add    ebp,DWORD PTR [ebp*4+0x6b570ddf]
  4063a1:	and    BYTE PTR [edx+0x44],0x94
  4063a5:	fcmovne st,st(1)
  4063a7:	hlt    
  4063a8:	mov    ah,0xff
  4063aa:	test   DWORD PTR [eax-0x1895c21],ecx
  4063b0:	aad    0x3d
  4063b2:	push   ds
  4063b3:	mov    bh,0x7a
  4063b5:	int    0x32
  4063b7:	jae    0x406350
  4063b9:	jmp    0x30ef:0x1410690
  4063c0:	scas   eax,DWORD PTR es:[edi]
  4063c1:	shr    ah,1
  4063c3:	sbb    DWORD PTR [edi+0x1ec4a967],eax
  4063c9:	hlt    
  4063ca:	shr    DWORD PTR [ecx-0x21321e90],cl
  4063d0:	pusha  
  4063d1:	push   0x26
  4063d3:	mov    edx,0x466428ab
  4063d8:	sub    BYTE PTR [eax-0x57],dl
  4063db:	adc    bl,dh
  4063dd:	fwait
  4063de:	outs   dx,DWORD PTR ds:[esi]
  4063df:	retf   
  4063e0:	cmp    al,0x18
  4063e2:	dec    esp
  4063e3:	stc    
  4063e4:	clc    
  4063e5:	shl    BYTE PTR [ecx-0x25],0xf5
  4063e9:	dec    esp
  4063ea:	xchg   esp,eax
  4063eb:	clc    
  4063ec:	adc    ah,BYTE PTR [ecx+0x66]
  4063ef:	in     al,0x2
  4063f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063f2:	fadd   st(6),st
  4063f4:	xor    esp,ebp
  4063f6:	inc    ecx
  4063f7:	lods   eax,DWORD PTR ds:[esi]
  4063f8:	dec    ecx
  4063f9:	sti    
  4063fa:	adc    eax,ecx
  4063fc:	stc    
  4063fd:	xor    ebp,DWORD PTR [edx+0x439b3081]
  406403:	inc    ecx
  406404:	in     eax,0xee
  406406:	retf   0x5584
  406409:	mov    ?,WORD PTR [edx+0x629b51f8]
  40640f:	mov    dl,BYTE PTR [edi+eax*4+0x5c]
  406413:	arpl   bp,bp
  406415:	mov    ecx,0xba7c7286
  40641a:	cdq    
  40641b:	jmp    0x4063aa
  40641d:	fbld   TBYTE PTR [ebx]
  40641f:	cwde   
  406420:	and    dl,ah
  406422:	das    
  406423:	retf   0xa85d
  406426:	or     ecx,DWORD PTR [eax-0x79f8d68]
  40642c:	rcl    ebp,1
  40642e:	jbe    0x406463
  406430:	xor    eax,0xc2cfb3bf
  406435:	mov    eax,ds:0xf2ad6724
  40643a:	cmp    al,0x26
  40643c:	jae    0x40648a
  40643e:	xchg   DWORD PTR [esi+0x43c99c3d],eax
  406444:	mov    esp,0x88b7b082
  406449:	pop    ebp
  40644a:	sbb    eax,0xc3cebc31
  40644f:	sbb    bl,cl
  406451:	jl     0x406414
  406453:	js     0x40641e
  406455:	sbb    DWORD PTR [edi+0x66],edx
  406458:	pop    ss
  406459:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40645a:	mov    ecx,0x6901d024
  40645f:	imul   edi,DWORD PTR [eax],0x49
  406462:	pop    esi
  406463:	rcr    BYTE PTR [edi-0x47],1
  406466:	add    al,BYTE PTR [ebp-0x5b]
  406469:	in     al,0x6c
  40646b:	sahf   
  40646c:	jmp    0xd22c:0x9d536cf1
  406473:	push   ecx
  406474:	xchg   edx,eax
  406475:	cmp    al,0x0
  406477:	aam    0xa0
  406479:	jno    0x4064ae
  40647b:	adc    al,0x6e
  40647d:	loopne 0x406430
  40647f:	enter  0x8ff4,0xe
  406483:	adc    edi,DWORD PTR [ecx]
  406485:	cld    
  406486:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406487:	jns    0x40642d
  406489:	xor    al,0x74
  40648b:	inc    edx
  40648c:	imul   eax,DWORD PTR [ebx+0x3d],0xdc82b01e
  406493:	aad    0xd3
  406495:	mov    bl,bl
  406497:	ins    BYTE PTR es:[edi],dx
  406498:	add    ebp,DWORD PTR [ebx-0x4b]
  40649b:	fistp  DWORD PTR [edi]
  40649d:	loopne 0x40647b
  40649f:	xchg   esi,eax
  4064a0:	inc    edi
  4064a1:	fimul  WORD PTR [edi+0x20a322bf]
  4064a7:	(bad)  
  4064a8:	mov    ds:0x13e313aa,al
  4064ad:	aad    0x9b
  4064af:	dec    eax
  4064b0:	in     al,dx
  4064b1:	retf   0x5718
  4064b4:	mov    BYTE PTR [esi+0x55],dh
  4064b7:	mov    ebx,0xbf80e5c9
  4064bc:	or     BYTE PTR [edx-0x44],dl
  4064bf:	sar    bh,0x5f
  4064c2:	and    al,0x68
  4064c4:	sbb    DWORD PTR [edx+0x265cac38],esp
  4064ca:	loop   0x4064c3
  4064cc:	hlt    
  4064cd:	push   ebp
  4064ce:	sahf   
  4064cf:	xchg   esp,eax
  4064d0:	shr    edi,cl
  4064d2:	lods   al,BYTE PTR ds:[esi]
  4064d3:	adc    al,0xc3
  4064d5:	pop    ebx
  4064d6:	sbb    DWORD PTR [esi-0x7f724c99],0x6a79469d
  4064e0:	adc    BYTE PTR [esi-0x4f],bh
  4064e3:	cdq    
  4064e4:	xchg   esi,eax
  4064e5:	inc    ebx
  4064e6:	or     BYTE PTR [ebp-0x18],ch
  4064e9:	pusha  
  4064ea:	les    ebx,FWORD PTR [ecx]
  4064ec:	sbb    eax,0x2f322147
  4064f1:	and    al,0xae
  4064f3:	stos   BYTE PTR es:[edi],al
  4064f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4064f5:	int3   
  4064f6:	jns    0x4064af
  4064f8:	shr    DWORD PTR [ebp-0x4],cl
  4064fb:	inc    esi
  4064fc:	push   ss
  4064fd:	and    bl,BYTE PTR [edi+0x28d1857d]
  406503:	jge    0x406514
  406505:	loope  0x406577
  406507:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406508:	enter  0x58ad,0xdf
  40650c:	xchg   edx,eax
  40650d:	int3   
  40650e:	loopne 0x4064b8
  406510:	in     eax,dx
  406511:	sub    eax,0x7cc08a8e
  406516:	mov    al,ds:0x2351eb80
  40651b:	xor    bh,BYTE PTR [edi-0x4f]
  40651e:	pop    edx
  40651f:	imul   ebp,DWORD PTR [edx+eiz*1-0x2cf5d933],0xa66074a6
  40652a:	out    dx,al
  40652b:	inc    esp
  40652c:	cwde   
  40652d:	sti    
  40652e:	push   eax
  40652f:	push   ss
  406530:	sbb    BYTE PTR ss:[edi-0x5f],0xde
  406535:	outs   dx,BYTE PTR ds:[esi]
  406536:	ins    DWORD PTR es:[edi],dx
  406537:	add    BYTE PTR [edi+ecx*4+0x7cea5d8a],al
  40653e:	xchg   DWORD PTR [edi-0x729966b4],eax
  406544:	sbb    al,0xc9
  406546:	xor    DWORD PTR [edi],0xffffff96
  406549:	pop    eax
  40654a:	jmp    0x410:0xb987cd9a
  406551:	fadd   QWORD PTR [edx+0x3123f32]
  406557:	leave  
  406558:	mov    ds:0xd930a9b2,eax
  40655d:	mov    eax,0xca102fd
  406562:	and    dl,ch
  406564:	aaa    
  406565:	sub    bl,ch
  406567:	and    DWORD PTR [edi+ebp*4+0x1cead6ec],ebx
  40656e:	in     eax,dx
  40656f:	mov    ch,0xcf
  406571:	jp     0x40653d
  406573:	and    ebx,ebp
  406575:	mov    dh,BYTE PTR [eax+0x1b5cc00a]
  40657b:	std    
  40657c:	xor    cl,BYTE PTR [edi-0x1b]
  40657f:	push   0x3d
  406581:	jmp    0xe0c8d43e
  406586:	xor    ebp,DWORD PTR [edx]
  406588:	shl    BYTE PTR [eax+0x1b8c4606],cl
  40658e:	mov    ah,0x88
  406590:	adc    al,BYTE PTR [eax]
  406592:	rcl    dh,cl
  406594:	das    
  406595:	xor    BYTE PTR [edx-0x49],ch
  406598:	or     eax,0x1b6be533
  40659d:	inc    esi
  40659e:	xlat   BYTE PTR ds:[ebx]
  40659f:	inc    ebx
  4065a0:	sar    DWORD PTR [edi+0x5e],0xa0
  4065a4:	xor    edi,edi
  4065a6:	xchg   edx,eax
  4065a7:	stos   BYTE PTR es:[edi],al
  4065a8:	mov    al,ah
  4065aa:	xor    ebx,DWORD PTR [ebp+edx*4-0x1b]
  4065ae:	or     DWORD PTR [edi-0x24],ebp
  4065b1:	ins    DWORD PTR es:[edi],dx
  4065b2:	inc    ecx
  4065b3:	imul   esp,DWORD PTR [eax],0x6c0f5503
  4065b9:	pop    esp
  4065ba:	retf   0x118d
  4065bd:	xor    eax,DWORD PTR [ecx]
  4065bf:	outs   dx,BYTE PTR ds:[esi]
  4065c0:	dec    edi
  4065c1:	sub    DWORD PTR [eax-0x2497a395],edx
  4065c7:	push   0xad16cf99
  4065cc:	mov    ebx,0x28919aa1
  4065d1:	mov    ?,WORD PTR [esi]
  4065d3:	(bad)  
  4065d4:	push   ds
  4065d5:	sbb    dh,ch
  4065d7:	dec    ebx
  4065d8:	ret    0xb2f7
  4065db:	clc    
  4065dc:	(bad)  
  4065dd:	pop    ds
  4065de:	adc    bl,BYTE PTR [eax-0x7f]
  4065e1:	inc    esi
  4065e2:	call   0xe43c:0xab2a5817
  4065e9:	inc    esp
  4065ea:	jnp    0x4065a0
  4065ec:	lods   al,BYTE PTR ds:[esi]
  4065ed:	sbb    dh,dh
  4065ef:	xor    esp,eax
  4065f1:	mov    cl,0xf8
  4065f3:	sub    ecx,DWORD PTR [edx]
  4065f5:	jbe    0x40662b
  4065f7:	mov    ecx,0x51e7d04b
  4065fc:	mov    ch,0xab
  4065fe:	pusha  
  4065ff:	sub    BYTE PTR [ebx],cl
  406601:	push   edx
  406602:	push   ebx
  406603:	xchg   esi,eax
  406604:	xor    eax,0x9debe869
  406609:	leave  
  40660a:	pop    ebp
  40660b:	push   ss
  40660c:	mov    edx,DWORD PTR [esi+eax*1+0x5]
  406610:	jge    0x406675
  406612:	mov    al,ds:0xd194fe60
  406617:	xchg   ecx,eax
  406618:	aad    0xda
  40661a:	jmp    0xbe9356f9
  40661f:	jge    0x4065f1
  406621:	mov    eax,ds:0x59b9b97d
  406626:	hlt    
  406627:	jae    0x4065ff
  406629:	inc    edx
  40662a:	adc    esi,edx
  40662c:	cdq    
  40662d:	jno    0x406664
  40662f:	mov    ch,0x9b
  406631:	adc    DWORD PTR [eax-0x40435ea0],edi
  406637:	inc    esp
  406638:	stos   BYTE PTR es:[edi],al
  406639:	pop    ds
  40663a:	aad    0xc0
  40663c:	arpl   WORD PTR [ebx+0x4b],cx
  40663f:	dec    esp
  406640:	fdivr  DWORD PTR [esi-0x536f17c4]
  406646:	xor    BYTE PTR [ebx-0x4654f525],dl
  40664c:	mov    ds:0x54c67920,al
  406651:	sub    bl,dh
  406653:	sbb    al,0x19
  406655:	mov    WORD PTR [edx+0x62],?
  406658:	mov    esi,esi
  40665a:	or     esi,DWORD PTR [ebp+edx*8-0x7828589e]
  406661:	adc    ecx,DWORD PTR [ebp+0x79]
  406664:	add    al,0x60
  406666:	test   BYTE PTR [ecx+0x5b24b489],al
  40666c:	(bad)  
  40666d:	jb     0x406698
  40666f:	add    ch,bl
  406671:	push   esp
  406672:	mov    ecx,0xc1baff56
  406677:	frstor [eax+0x2fe9a21c]
  40667d:	cmp    al,0xb7
  40667f:	xor    DWORD PTR [eax+0x5cae4ccf],esp
  406685:	test   al,0xc3
  406687:	pop    ds
  406688:	dec    edx
  406689:	ins    BYTE PTR es:[edi],dx
  40668a:	lds    ebx,FWORD PTR [eax+ebp*4+0x3]
  40668e:	and    eax,0x86cee1f0
  406693:	cmp    BYTE PTR [edi-0x51],dl
  406696:	icebp  
  406697:	xor    eax,0xa9c31ad5
  40669c:	push   0x62
  40669e:	nop
  40669f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066a1:	icebp  
  4066a2:	nop
  4066a3:	mov    cl,BYTE PTR ds:0x616f1527
  4066a9:	pushf  
  4066aa:	sub    al,cl
  4066ac:	hlt    
  4066ad:	inc    ebp
  4066ae:	aam    0x53
  4066b0:	xor    esp,DWORD PTR [ebx-0x6ec77633]
  4066b6:	jno    0x406673
  4066b8:	pop    edi
  4066b9:	push   edx
  4066ba:	inc    esi
  4066bb:	data16 cld 
  4066bd:	and    ebx,ebp
  4066bf:	xor    ecx,DWORD PTR [ebx-0x5e2311d9]
  4066c5:	and    ebp,DWORD PTR [eax+ecx*4]
  4066c8:	mov    ds:0x33d796f0,eax
  4066cd:	jnp    0x40672b
  4066cf:	int    0x66
  4066d1:	repnz fmul QWORD PTR [ebx+0x435d21c7]
  4066d8:	sar    BYTE PTR [edi+0x7505f7ee],0x17
  4066df:	mov    ah,0xa5
  4066e1:	fidiv  WORD PTR [edx+ebx*4-0x6a]
  4066e5:	xchg   edx,eax
  4066e6:	add    dh,cl
  4066e8:	in     al,0x2c
  4066ea:	jne    0x406688
  4066ec:	inc    esi
  4066ed:	ret    
  4066ee:	inc    edx
  4066ef:	loope  0x406695
  4066f1:	mov    al,ds:0x4acfc498
  4066f6:	push   es
  4066f7:	dec    ecx
  4066f8:	sub    BYTE PTR [edi+0x5bb677ea],0xa9
  4066ff:	lds    edx,FWORD PTR [ecx-0x4b8f7592]
  406705:	call   FWORD PTR [esi]
  406707:	sbb    ch,BYTE PTR [edx-0x72]
  40670a:	cdq    
  40670b:	inc    ecx
  40670c:	out    0x4b,al
  40670e:	cmp    al,BYTE PTR [ecx]
  406710:	hlt    
  406711:	sub    ch,BYTE PTR [ebp+0x42]
  406714:	mov    ds,WORD PTR [esi-0x7a2f3c8a]
  40671a:	mov    edx,0x2027c7d6
  40671f:	imul   ebx,DWORD PTR [esi],0xffffffbf
  406722:	dec    DWORD PTR ds:0xf1e4d4fe
  406728:	push   es
  406729:	ret    
  40672a:	lahf   
  40672b:	or     eax,0x6f55684d
  406730:	pop    edx
  406731:	push   ebx
  406732:	or     al,0x95
  406734:	inc    ebx
  406735:	outs   dx,DWORD PTR ds:[esi]
  406736:	xchg   esi,esp
  406738:	or     dh,bh
  40673a:	mov    edi,gs
  40673c:	dec    esi
  40673d:	dec    edi
  40673e:	aam    0xed
  406740:	int3   
  406741:	test   al,0x5b
  406743:	add    DWORD PTR [edi-0x43ecdf6f],ebx
  406749:	add    eax,0xf8a3ac85
  40674e:	add    al,0xb4
  406750:	fmul   DWORD PTR [edi+0x3b]
  406753:	lahf   
  406754:	mov    al,0xdc
  406756:	push   edi
  406757:	or     eax,0x3452774d
  40675c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40675d:	nop
  40675e:	jo     0x4067d2
  406760:	inc    eax
  406761:	pop    eax
  406762:	sbb    al,0x2d
  406764:	ret    
  406765:	or     BYTE PTR [edi],ah
  406767:	je     0x406768
  406769:	dec    edx
  40676a:	out    dx,eax
  40676b:	ds xchg edx,eax
  40676d:	dec    ebp
  40676e:	std    
  40676f:	out    dx,al
  406770:	pusha  
  406771:	imul   esi,DWORD PTR [eax],0xfc4aa1d6
  406777:	push   ss
  406778:	outs   dx,DWORD PTR ds:[esi]
  406779:	ins    BYTE PTR es:[edi],dx
  40677a:	cmp    al,0x7d
  40677c:	or     eax,0x8c0c299c
  406781:	sti    
  406782:	pop    es
  406783:	mov    edx,0x910af627
  406788:	cli    
  406789:	cli    
  40678a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40678b:	call   0x7845:0x6679061a
  406792:	cmp    esp,ebp
  406794:	cld    
  406795:	xor    eax,0x6e071ecc
  40679a:	sbb    bl,BYTE PTR [esi]
  40679c:	push   edx
  40679d:	mov    dl,0x88
  40679f:	fwait
  4067a0:	ret    
  4067a1:	adc    eax,0xf56b40b2
  4067a6:	jp     0x4067ce
  4067a8:	mov    esi,0xd2ce8591
  4067ad:	ud0    edx,DWORD PTR [esi-0x3]
  4067b1:	or     DWORD PTR [edx-0x64],ebp
  4067b4:	jge    0x40679b
  4067b6:	jp     0x4067c2
  4067b8:	aaa    
  4067b9:	call   0x34a5d2fe
  4067be:	je     0x406787
  4067c0:	jp     0x40677b
  4067c2:	lods   eax,DWORD PTR ds:[esi]
  4067c3:	shr    ch,1
  4067c5:	repz pusha 
  4067c7:	adc    BYTE PTR [ebx+0x3ec00868],0x7f
  4067ce:	lahf   
  4067cf:	mov    ecx,0x4be50c09
  4067d4:	leave  
  4067d5:	ja     0x406818
  4067d7:	mov    ds:0xf321f68a,eax
  4067dc:	stos   BYTE PTR es:[edi],al
  4067dd:	jb     0x406769
  4067df:	pop    esi
  4067e0:	xchg   ecx,eax
  4067e1:	test   BYTE PTR [edx-0x54],al
  4067e4:	lock jne 0x4067dd
  4067e7:	ins    DWORD PTR es:[edi],dx
  4067e8:	push   eax
  4067e9:	pop    ds
  4067ea:	(bad)  
  4067ec:	loopne 0x4067a6
  4067ee:	fdiv   QWORD PTR [ebx+0x8]
  4067f1:	add    DWORD PTR [eax+0x15],0x67
  4067f5:	test   al,0x5e
  4067f7:	pop    ss
  4067f8:	sub    edi,ebp
  4067fa:	std    
  4067fb:	sub    DWORD PTR [eax],esp
  4067fd:	sub    al,0x32
  4067ff:	clc    
  406800:	jg     0x40682e
  406802:	dec    ebp
  406803:	jecxz  0x4067cf
  406805:	loop   0x406832
  406807:	popf   
  406808:	xchg   esi,eax
  406809:	adc    DWORD PTR ds:0xff97dea0,ebx
  40680f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406810:	test   al,0x8b
  406812:	pop    esp
  406813:	mov    ch,0xe7
  406815:	jl     0x406812
  406817:	je     0x40686c
  406819:	ret    0x95d8
  40681c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40681d:	dec    ebx
  40681e:	fcomp  DWORD PTR [ebp-0x29932896]
  406824:	xlat   BYTE PTR ds:[ebx]
  406825:	pop    eax
  406826:	fcom   DWORD PTR [eax+0x6ca5ee98]
  40682c:	retf   
  40682d:	mov    WORD PTR [edx],?
  40682f:	inc    esp
  406830:	ins    BYTE PTR es:[edi],dx
  406831:	sub    ebp,edi
  406833:	in     al,0x27
  406835:	mov    ah,0x3e
  406837:	mov    WORD PTR [ebx+0x3b],?
  40683a:	xchg   ebx,eax
  40683b:	pusha  
  40683c:	mov    eax,ds:0x2831137a
  406841:	xor    DWORD PTR [eax+0x10],0xa70387b6
  406848:	sub    al,0x46
  40684a:	jmp    0x4067f5
  40684c:	mov    ah,0x50
  40684e:	into   
  40684f:	xor    BYTE PTR [edi],al
  406851:	mov    esi,0x76d68e8b
  406856:	and    eax,0x279a33a3
  40685b:	enter  0x1c45,0x84
  40685f:	out    0x0,eax
  406861:	fbld   TBYTE PTR [ecx+0x21b024f]
  406867:	mov    ah,0xf
  406869:	(bad)
  40686d:	mov    esp,0x8ad2409e
  406872:	add    ah,dh
  406874:	fcmovb st,st(5)
  406876:	iret   
  406877:	mov    esi,0x22199507
  40687c:	aaa    
  40687d:	push   ebp
  40687e:	das    
  40687f:	bound  edi,QWORD PTR [ecx+0x31]
  406882:	loope  0x406878
  406884:	add    DWORD PTR [edx+esi*1+0x291cfa3f],esi
  40688b:	dec    ebp
  40688c:	cmp    al,0x24
  40688e:	sub    eax,0x231474fb
  406893:	cld    
  406894:	inc    eax
  406895:	cmp    al,0x1d
  406897:	in     eax,0x2
  406899:	xchg   edi,eax
  40689a:	sbb    al,0xec
  40689c:	adc    BYTE PTR [ecx],bh
  40689e:	das    
  40689f:	ins    DWORD PTR es:[edi],dx
  4068a0:	inc    esi
  4068a1:	or     bl,BYTE PTR [ebp+0x68c8a005]
  4068a7:	mov    BYTE PTR [ecx-0x42eb30e2],dh
  4068ad:	inc    ebp
  4068ae:	test   BYTE PTR [ebx-0x699fe4a1],dl
  4068b4:	ins    BYTE PTR es:[edi],dx
  4068b5:	std    
  4068b6:	push   ebx
  4068b7:	mov    ds:0xfda97cbc,eax
  4068bc:	xor    ecx,DWORD PTR [eax]
  4068be:	pusha  
  4068bf:	shl    DWORD PTR [ebx+0x1b996481],0xa7
  4068c6:	rcl    BYTE PTR [edx],1
  4068c8:	dec    ebx
  4068c9:	push   cs
  4068ca:	xchg   ebp,eax
  4068cb:	sbb    DWORD PTR [ebx],eax
  4068cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4068ce:	std    
  4068cf:	mov    ecx,0xe887caf3
  4068d4:	sbb    bl,ah
  4068d6:	and    al,0xbc
  4068d8:	icebp  
  4068d9:	jns    0x406868
  4068db:	push   esi
  4068dc:	call   0x8ef5:0x5fe9613e
  4068e3:	adc    BYTE PTR [eax],0x7e
  4068e6:	jo     0x4068fd
  4068e8:	loopne 0x40688b
  4068ea:	cld    
  4068eb:	in     eax,dx
  4068ec:	sbb    DWORD PTR [edi],eax
  4068ee:	push   cs
  4068ef:	shr    BYTE PTR fs:[ebp+0x324e54b4],0x16
  4068f7:	(bad)  
  4068f8:	xchg   edi,eax
  4068f9:	mov    dl,BYTE PTR [ecx]
  4068fb:	sub    DWORD PTR ds:0xc8da2423,ebx
  406901:	sbb    eax,DWORD PTR [eax-0x1e7b3f6d]
  406907:	jb     0x4068f6
  406909:	test   DWORD PTR [edx-0x632c33ef],ebx
  40690f:	out    dx,eax
  406910:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406911:	lea    esp,[esi-0x702b9352]
  406917:	(bad)  
  406918:	rcl    bh,0x58
  40691b:	fldcw  WORD PTR [ebp-0x62]
  40691e:	mov    ebx,DWORD PTR [esi-0x7f]
  406921:	in     al,dx
  406922:	push   edi
  406923:	call   DWORD PTR [edx]
  406925:	xchg   eax,esp
  406927:	mov    edi,0xe777d06c
  40692c:	fs push 0x8
  40692f:	sbb    BYTE PTR [esi+0x51f8fc20],cl
  406935:	dec    edi
  406936:	xchg   DWORD PTR [ecx],ebp
  406938:	xlat   BYTE PTR ds:[ebx]
  406939:	pop    ss
  40693a:	les    ebp,FWORD PTR [ecx-0x3020921]
  406940:	sar    BYTE PTR [eax+esi*2],1
  406943:	shl    DWORD PTR [edi+0x63d42390],0xbf
  40694a:	loop   0x4069c2
  40694c:	inc    esi
  40694d:	push   0x3d
  40694f:	pop    ds
  406950:	pop    eax
  406951:	rcl    ecx,1
  406953:	sets   BYTE PTR [eax-0x70]
  406957:	(bad)  
  406958:	iret   
  406959:	mov    WORD PTR [edx-0x342992ba],es
  40695f:	mov    cl,0x24
  406961:	or     al,0xef
  406963:	add    eax,0x7d75d120
  406968:	sar    BYTE PTR [edx+0x77],1
  40696b:	pop    edi
  40696c:	inc    edx
  40696d:	and    eax,0xd1fd14e9
  406972:	popa   
  406973:	mov    ds:0x83244c04,eax
  406978:	test   al,0xb
  40697a:	sub    ecx,ecx
  40697c:	in     eax,0xe8
  40697e:	mov    DWORD PTR [edi+0x71ca255b],ebx
  406984:	sub    al,0xb5
  406986:	bound  edx,QWORD PTR [ebp+ebx*1+0x29]
  40698a:	push   edi
  40698b:	sub    ebp,DWORD PTR [edi+0x1c]
  40698e:	push   ebp
  40698f:	test   eax,0xa42891ef
  406994:	jmp    0x6713:0x9f826178
  40699b:	jo     0x4069f0
  40699d:	rol    ah,1
  40699f:	sahf   
  4069a0:	add    DWORD PTR [edi],esi
  4069a2:	jmp    0x30c:0x1d5fb213
  4069a9:	fwait
  4069aa:	push   edi
  4069ab:	inc    eax
  4069ac:	dec    ecx
  4069ad:	push   0x63
  4069af:	mov    dh,0x40
  4069b1:	push   ebx
  4069b2:	push   es
  4069b3:	jns    0x4069a5
  4069b5:	dec    edi
  4069b6:	mov    dl,0xf1
  4069b8:	stos   BYTE PTR es:[edi],al
  4069b9:	adc    dh,bl
  4069bb:	fwait
  4069bc:	mov    bl,0xa0
  4069be:	dec    esp
  4069bf:	adc    al,0xba
  4069c1:	bound  esi,QWORD PTR es:[ebx+0x2507bd40]
  4069c8:	jp     0x406a3f
  4069ca:	pop    edi
  4069cb:	rol    cl,1
  4069cd:	jmp    0xc3c0:0x24b1a979
  4069d4:	push   0x4f
  4069d6:	xor    ecx,ecx
  4069d8:	(bad)  
  4069d9:	mov    ah,0x96
  4069db:	or     BYTE PTR [esi-0x18574dc3],ah
  4069e1:	mov    dl,BYTE PTR [eax]
  4069e3:	out    dx,eax
  4069e4:	push   ebp
  4069e5:	jmp    0x406a55
  4069e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069e8:	test   edi,esi
  4069ea:	adc    BYTE PTR [ecx+0x37],al
  4069ed:	hlt    
  4069ee:	cld    
  4069ef:	in     eax,dx
  4069f0:	push   esp
  4069f1:	xchg   esp,eax
  4069f2:	rcl    DWORD PTR [eax+0x47358883],1
  4069f8:	cli    
  4069f9:	and    eax,0xaeb13aa7
  4069fe:	push   ss
  4069ff:	mov    eax,0xbf66e6e8
  406a04:	scas   eax,DWORD PTR es:[edi]
  406a05:	sub    BYTE PTR [edi],dh
  406a07:	add    BYTE PTR [edi+0x65d7b593],0x22
  406a0e:	lock lods eax,DWORD PTR ds:[esi]
  406a10:	xchg   ebx,eax
  406a11:	(bad)  
  406a12:	and    eax,0x9a43d255
  406a17:	sahf   
  406a18:	jge    0x406a1f
  406a1a:	(bad)  
  406a1b:	test   BYTE PTR cs:[edx-0x23],dl
  406a1f:	out    0xb4,al
  406a21:	in     al,0x25
  406a23:	dec    esi
  406a24:	(bad)  
  406a25:	xchg   edi,eax
  406a26:	pop    edi
  406a27:	das    
  406a28:	push   esp
  406a29:	mov    ah,0x61
  406a2b:	and    al,BYTE PTR [edx]
  406a2d:	mov    ds:0x9cb9580c,eax
  406a32:	push   eax
  406a33:	lds    ebx,FWORD PTR [ebx+esi*8+0x19]
  406a37:	sub    DWORD PTR [edi+0x4e],edx
  406a3a:	inc    eax
  406a3b:	adc    ah,bl
  406a3d:	and    edi,DWORD PTR [ecx+esi*2-0x49]
  406a41:	dec    edx
  406a42:	icebp  
  406a43:	xor    ebp,0xffffffda
  406a46:	addr16 mov dl,dh
  406a49:	(bad)  
  406a4a:	daa    
  406a4b:	sbb    al,0xf7
  406a4d:	imul   edi,DWORD PTR [ecx],0x3
  406a50:	rol    ecx,cl
  406a52:	adc    edi,0x7a621140
  406a58:	(bad)  
  406a59:	adc    BYTE PTR [ebp+0x7d],dl
  406a5c:	int    0xda
  406a5e:	iret   
  406a5f:	add    ecx,DWORD PTR ss:[ecx-0x6dbe88dc]
  406a66:	inc    esp
  406a67:	mov    dh,0x48
  406a69:	xchg   ecx,eax
  406a6a:	(bad)
  406a6d:	(bad)  
  406a6e:	mov    esp,0x35d2722f
  406a73:	jl     0x406a8e
  406a75:	shr    edi,1
  406a77:	outs   dx,DWORD PTR ds:[esi]
  406a78:	arpl   WORD PTR [ecx-0x78375d4b],ax
  406a7e:	inc    eax
  406a7f:	cmp    DWORD PTR [ebp-0x36eeeef3],edi
  406a85:	cwde   
  406a86:	sar    DWORD PTR [ebx],cl
  406a88:	sub    ch,al
  406a8a:	pop    ds
  406a8b:	mov    ah,0xc5
  406a8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a8e:	sub    eax,0xae36ac9e
  406a93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406a94:	lds    esi,FWORD PTR [esp+edi*1-0x56da6672]
  406a9b:	aam    0x57
  406a9d:	cmp    al,ah
  406a9f:	ret    0xdb1
  406aa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406aa3:	lds    ebp,FWORD PTR [ecx+0x13]
  406aa6:	jg     0x406a71
  406aa8:	inc    ebp
  406aa9:	xchg   DWORD PTR [edx],esi
  406aab:	(bad)  
  406aac:	and    DWORD PTR [edx+0x49],ecx
  406aaf:	xchg   esi,eax
  406ab0:	inc    esp
  406ab1:	jb     0x406aa3
  406ab3:	out    0x2f,al
  406ab5:	nop
  406ab6:	mov    eax,ds:0xbbda9dad
  406abb:	inc    ebp
  406abc:	adc    eax,0x2968fd17
  406ac1:	jmp    0x5368:0xaf52a863
  406ac8:	loop   0x406b14
  406aca:	test   BYTE PTR [esi+0x30],bl
  406acd:	ja     0x406aea
  406acf:	push   edx
  406ad0:	inc    edx
  406ad1:	mov    ebp,0xd49478cf
  406ad6:	(bad)
  406ad9:	mov    al,0xa8
  406adb:	jno    0x406a96
  406add:	ds aad 0x5
  406ae0:	imul   eax,DWORD PTR [eax-0x28a41e05],0xf0d7fb83
  406aea:	pop    edx
  406aeb:	jmp    0x406b37
  406aed:	test   DWORD PTR [edx],ecx
  406aef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406af0:	sbb    DWORD PTR [ecx-0x169dc95],ebp
  406af6:	(bad)  
  406af7:	pop    ds
  406af8:	int3   
  406af9:	test   dl,dh
  406afb:	sub    eax,0x24293971
  406b00:	or     dl,ch
  406b02:	xor    DWORD PTR [ebx+ebp*1],esp
  406b05:	inc    edx
  406b06:	push   es
  406b07:	sbb    al,0xca
  406b09:	xor    eax,0x742d2b55
  406b0e:	mov    ch,0x70
  406b10:	add    BYTE PTR [edx+0x20],0xd1
  406b14:	xor    al,0x46
  406b16:	(bad)  
  406b17:	sbb    edx,edi
  406b19:	sbb    DWORD PTR [eax+eax*4-0x2ad61c22],edi
  406b20:	lods   al,BYTE PTR ds:[esi]
  406b21:	adc    eax,0xf63c3366
  406b26:	sbb    ch,BYTE PTR [esi-0x27]
  406b29:	xchg   edx,eax
  406b2a:	or     edi,0x4f7693f
  406b30:	mov    eax,ds:0x4edb9509
  406b35:	adc    BYTE PTR [edx],0x6d
  406b38:	push   edx
  406b39:	arpl   di,si
  406b3b:	aaa    
  406b3c:	inc    edx
  406b3d:	mov    esi,0x76ea9b79
  406b42:	push   eax
  406b43:	inc    ebp
  406b44:	mov    ah,0x84
  406b46:	jmp    0x7d5bab06
  406b4b:	sti    
  406b4c:	inc    esp
  406b4d:	sbb    al,0x90
  406b4f:	jae    0x406ad9
  406b51:	dec    esp
  406b52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b53:	and    ah,BYTE PTR [esi+edi*4]
  406b56:	dec    edx
  406b57:	ins    BYTE PTR es:[edi],dx
  406b58:	jae    0x406b6b
  406b5a:	dec    edx
  406b5b:	pop    esp
  406b5c:	sub    eax,0x14
  406b5f:	les    ebp,FWORD PTR [edi-0x77]
  406b62:	add    ebx,DWORD PTR [ebx+ecx*4+0x5c]
  406b66:	cld    
  406b67:	lock fist DWORD PTR [ecx]
  406b6a:	pop    edx
  406b6b:	mov    WORD PTR [ebx],fs
  406b6d:	pop    edi
  406b6e:	cld    
  406b6f:	in     eax,0x2b
  406b71:	or     al,0xb6
  406b73:	jb     0x406b42
  406b75:	call   0x46c5:0xe8b12cf3
  406b7c:	jae    0x406b0d
  406b7e:	or     al,0x35
  406b80:	pushf  
  406b81:	jae    0x406b8a
  406b83:	or     al,0xe2
  406b85:	rcr    bh,1
  406b87:	adc    bl,BYTE PTR [esi+0x47]
  406b8a:	sub    ecx,DWORD PTR [edx+0x2a49ff53]
  406b90:	idiv   DWORD PTR [esi+0x6a9e9951]
  406b96:	and    eax,0xe59962fe
  406b9b:	or     edi,DWORD PTR [esi+0x5]
  406b9e:	sbb    DWORD PTR [edi-0x769c88f1],ebp
  406ba4:	pop    eax
  406ba5:	loope  0x406b65
  406ba7:	jo     0x406b7a
  406ba9:	fwait
  406baa:	add    BYTE PTR [ecx],0x9c
  406bad:	push   ds
  406bae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406baf:	sti    
  406bb0:	mov    edx,esi
  406bb2:	mov    esp,0x2519f081
  406bb7:	maskmovq mm7,(bad)
  406bb8:	idiv   DWORD PTR [ecx-0x1d]
  406bbb:	cmp    bh,BYTE PTR [esi+0x18bdc4ad]
  406bc1:	add    BYTE PTR [ebp+0x7a42784a],ah
  406bc7:	mov    bl,0xc
  406bc9:	sub    esp,DWORD PTR [ebp+0x976dd0d]
  406bcf:	adc    al,0x94
  406bd1:	cli    
  406bd2:	pop    eax
  406bd3:	shl    ah,cl
  406bd5:	rcr    DWORD PTR [ebx-0x45],0x23
  406bd9:	dec    esp
  406bda:	stc    
  406bdb:	mov    bl,BYTE PTR [edi-0x54]
  406bde:	js     0x406b97
  406be0:	sub    ebp,ebp
  406be2:	ret    0x4c51
  406be5:	xchg   edi,eax
  406be6:	icebp  
  406be7:	cwde   
  406be8:	sub    al,bl
  406bea:	pop    es
  406beb:	push   esi
  406bec:	mov    bl,0x9f
  406bee:	mov    esp,0x75a9b2c2
  406bf3:	mov    dl,0x0
  406bf5:	inc    ecx
  406bf6:	dec    ecx
  406bf7:	xchg   ecx,eax
  406bf8:	mov    ecx,0xafae9e7b
  406bfd:	lods   eax,DWORD PTR ds:[esi]
  406bfe:	xchg   ebp,eax
  406bff:	jnp    0x406c35
  406c01:	test   edi,0xb137c53b
  406c07:	pop    edi
  406c08:	aas    
  406c09:	push   0xffffffff
  406c0b:	push   ecx
  406c0c:	or     DWORD PTR [ebx-0x4],0x7
  406c10:	or     al,0x3b
  406c12:	inc    eax
  406c13:	inc    eax
  406c14:	mov    esp,0x1edc7111
  406c19:	sbb    eax,0x61539e22
  406c1e:	jnp    0x406be0
  406c20:	dec    eax
  406c21:	sbb    bl,BYTE PTR [edx+0x2f]
  406c24:	loop   0x406bdc
  406c26:	in     al,dx
  406c27:	rcr    BYTE PTR [esi+0x192a671],0x19
  406c2e:	hlt    
  406c2f:	cmp    edi,DWORD PTR [eax]
  406c31:	jae    0x406c93
  406c33:	mov    dl,0x94
  406c35:	sbb    ecx,DWORD PTR [eax-0x7c]
  406c38:	lods   eax,DWORD PTR ds:[esi]
  406c39:	sub    al,0xc3
  406c3b:	or     BYTE PTR [ebx-0x9],0xa4
  406c3f:	stos   BYTE PTR es:[edi],al
  406c40:	icebp  
  406c41:	sahf   
  406c42:	jp     0x406c35
  406c44:	mov    ebp,0x7b2151e5
  406c49:	bound  edi,QWORD PTR [ecx]
  406c4b:	fcmovnu st,st(2)
  406c4d:	xor    dl,BYTE PTR [edx+0x7b]
  406c50:	inc    esp
  406c51:	icebp  
  406c52:	push   esp
  406c53:	push   es
  406c54:	inc    ebp
  406c55:	and    esp,DWORD PTR [ebx+eiz*1]
  406c58:	scas   al,BYTE PTR es:[edi]
  406c59:	dec    eax
  406c5a:	mov    edi,0xfe67ce1a
  406c5f:	pop    esi
  406c60:	jno    0x406c06
  406c62:	test   DWORD PTR [ebx-0x32b67c56],edx
  406c68:	lahf   
  406c69:	out    0x83,al
  406c6b:	sub    esi,ebx
  406c6d:	push   esp
  406c6e:	xor    BYTE PTR [esi+esi*2-0x1c],bl
  406c72:	sbb    esi,DWORD PTR [eax-0x4ab4de19]
  406c78:	mov    ch,0xfb
  406c7a:	repnz xor bl,ah
  406c7d:	inc    esp
  406c7e:	xor    BYTE PTR [edi],ah
  406c80:	sub    bh,BYTE PTR [edx+0x2c]
  406c83:	jns    0x406c78
  406c85:	mov    ds:0xf7d6b9b3,al
  406c8a:	push   ecx
  406c8b:	sub    eax,0x5ae7d4ee
  406c90:	add    esp,DWORD PTR [edx+0x4cdc6e5f]
  406c96:	jno    0x406d10
  406c98:	retf   
  406c99:	imul   ebp,DWORD PTR [edi-0x72],0xffffff9a
  406c9d:	dec    BYTE PTR [edi+0x1a380a6f]
  406ca3:	lds    esp,FWORD PTR [eax+esi*2+0x337eab55]
  406caa:	mov    eax,ds:0x681acd6e
  406caf:	scas   eax,DWORD PTR es:[edi]
  406cb0:	xchg   ecx,eax
  406cb1:	jbe    0x406cf0
  406cb3:	mov    WORD PTR [esp+eiz*8-0x10c2ebc1],es
  406cba:	or     edx,eax
  406cbc:	push   cs
  406cbd:	clc    
  406cbe:	cmp    al,0x4
  406cc0:	add    ebp,DWORD PTR [ebx-0x67b0b1b8]
  406cc6:	icebp  
  406cc7:	outs   dx,BYTE PTR ds:[esi]
  406cc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cc9:	mov    ds:0x3dfc6b04,eax
  406cce:	adc    BYTE PTR [esi+0x6253d16],dh
  406cd4:	fisttp DWORD PTR [esi-0x61]
  406cd7:	mov    cl,0x7c
  406cd9:	pop    edi
  406cda:	lods   al,BYTE PTR ds:[esi]
  406cdb:	pop    es
  406cdc:	cmp    al,0x8c
  406cde:	adc    eax,DWORD PTR [eax+0x5b]
  406ce1:	sbb    ah,BYTE PTR [esi+0x7abe693d]
  406ce7:	pop    ebx
  406ce8:	jl     0x406cb9
  406cea:	mov    ss,WORD PTR [eax+0x401dcb3b]
  406cf0:	jmp    0x406cc2
  406cf2:	clc    
  406cf3:	dec    ebx
  406cf4:	and    esp,DWORD PTR [ecx-0x43]
  406cf7:	call   0x6c12511c
  406cfc:	aam    0xbd
  406cfe:	sbb    eax,0x31db3d90
  406d03:	push   ecx
  406d04:	out    0xb7,al
  406d06:	sbb    edi,DWORD PTR [edi-0x7f]
  406d09:	in     eax,0xc8
  406d0b:	adc    ax,0xa761
  406d0f:	scas   eax,DWORD PTR es:[edi]
  406d10:	rcr    BYTE PTR [edx+0x5ef8f083],1
  406d16:	int    0x1c
  406d18:	jge    0x406d0b
  406d1a:	inc    eax
  406d1b:	retf   0x4710
  406d1e:	mov    bl,0xee
  406d20:	loop   0x406cc1
  406d22:	sub    al,0xb0
  406d24:	gs push esp
  406d26:	(bad)  
  406d27:	cmp    al,0x18
  406d29:	jmp    0xc189ffc6
  406d2e:	scas   eax,DWORD PTR es:[edi]
  406d2f:	cwde   
  406d30:	or     eax,0xa4623893
  406d35:	cmp    al,0x4c
  406d37:	push   eax
  406d38:	test   BYTE PTR [edi-0x57879240],al
  406d3e:	popf   
  406d3f:	sbb    DWORD PTR [edi+0x60997ab5],esp
  406d45:	sub    BYTE PTR [ebx+0x4082e1d3],dh
  406d4b:	fwait
  406d4c:	pop    esi
  406d4d:	icebp  
  406d4e:	and    BYTE PTR [eax+ecx*1],al
  406d51:	inc    eax
  406d52:	and    al,0x43
  406d54:	fwait
  406d55:	adc    eax,0x68a70b7b
  406d5a:	and    DWORD PTR [ecx],eax
  406d5c:	fisub  DWORD PTR [ebp+ecx*2+0x5c]
  406d60:	cdq    
  406d61:	punpckhwd mm1,QWORD PTR [eax]
  406d64:	lahf   
  406d65:	sbb    ebx,DWORD PTR [edi+0x6b]
  406d68:	pop    esi
  406d69:	dec    esp
  406d6a:	stos   DWORD PTR es:[edi],eax
  406d6b:	pushf  
  406d6c:	push   es
  406d6d:	jmp    0x406dd0
  406d6f:	out    0xdd,eax
  406d71:	call   0x9029aa8e
  406d76:	ja     0x406db0
  406d78:	cmp    BYTE PTR [edx],ah
  406d7a:	test   BYTE PTR [ebx-0x2c],ah
  406d7d:	outs   dx,BYTE PTR ds:[esi]
  406d7e:	mov    WORD PTR [esi],?
  406d80:	push   ebx
  406d81:	jns    0x406dbe
  406d83:	xchg   ebx,eax
  406d84:	sbb    BYTE PTR [ebp-0x6b3cfdf5],0xef
  406d8b:	cmp    eax,0x95982ac5
  406d90:	int    0xaf
  406d92:	push   ecx
  406d93:	test   eax,0x99b5acc7
  406d98:	xor    DWORD PTR [ecx-0x18],edi
  406d9b:	psrlw  mm3,QWORD PTR [ecx+0x29633456]
  406da2:	(bad)  
  406da3:	push   0x7d219422
  406da8:	lds    edi,FWORD PTR [edx]
  406daa:	scas   eax,DWORD PTR es:[edi]
  406dab:	mov    dh,0x44
  406dad:	push   0xffffffdf
  406daf:	(bad)  
  406db0:	xchg   edx,eax
  406db1:	sub    DWORD PTR [eax+ebp*2-0x56ab5cc7],ecx
  406db8:	inc    edx
  406db9:	jbe    0x406dd3
  406dbb:	sbb    DWORD PTR [esi+0x5e92f5de],ebp
  406dc1:	call   0x8fe688db
  406dc6:	adc    BYTE PTR [eax],dl
  406dc8:	or     al,0x30
  406dca:	jg     0x406e16
  406dcc:	loopne 0x406d90
  406dce:	or     edx,ebp
  406dd0:	jmp    0x406e4b
  406dd2:	cmp    ch,BYTE PTR [eax+0x3614cd91]
  406dd8:	dec    edi
  406dd9:	in     eax,dx
  406dda:	enter  0x1024,0x95
  406dde:	dec    edi
  406ddf:	cs xchg ecx,eax
  406de1:	sbb    eax,0x84205636
  406de6:	imul   ecx,DWORD PTR [ecx+0x23],0x189345c6
  406ded:	in     eax,0xb4
  406def:	js     0x406dcd
  406df1:	and    BYTE PTR [ecx-0x599ea77c],cl
  406df7:	dec    edi
  406df8:	retf   0xc7e
  406dfb:	dec    edi
  406dfc:	xchg   ebp,eax
  406dfd:	add    DWORD PTR ds:0xb9b85ba3,esp
  406e03:	dec    eax
  406e04:	sbb    eax,0x3e6e6f36
  406e09:	mov    bh,0xfe
  406e0b:	mov    bl,0xd7
  406e0d:	push   esi
  406e0e:	or     eax,0xdb5174ea
  406e13:	lea    ecx,[edi+edx*8]
  406e16:	xlat   BYTE PTR ds:[ebx]
  406e17:	and    eax,0xb7b54e2d
  406e1c:	data16 aam 0xa0
  406e1f:	shl    BYTE PTR [edi],1
  406e21:	pop    ss
  406e22:	dec    eax
  406e23:	fsubp  st(1),st
  406e25:	fdivr  st(2),st
  406e27:	xchg   esi,eax
  406e28:	pop    ebx
  406e29:	pop    es
  406e2a:	out    0xa0,eax
  406e2c:	dec    eax
  406e2d:	test   BYTE PTR [esi+edx*2+0x76ccf6d3],bl
  406e34:	mov    al,0x4b
  406e36:	lods   al,BYTE PTR ds:[esi]
  406e37:	mov    cs,esp
  406e39:	in     al,dx
  406e3a:	or     ch,BYTE PTR [eax-0x6f775a3b]
  406e40:	js     0x406dd0
  406e42:	push   es
  406e43:	das    
  406e44:	jne    0x406df9
  406e46:	stos   BYTE PTR es:[edi],al
  406e47:	xchg   esi,eax
  406e48:	jmp    0x2ca1:0x534c21e8
  406e4f:	retf   0xc530
  406e52:	(bad)  
  406e53:	dec    ebp
  406e54:	dec    ebx
  406e55:	pushf  
  406e56:	retf   0xba84
  406e59:	call   0x2940da6a
  406e5e:	in     al,dx
  406e5f:	(bad)  
  406e60:	out    0x40,al
  406e62:	mov    cl,0xd0
  406e64:	push   cs
  406e65:	mov    ah,0xa2
  406e67:	mov    edi,0xaecedace
  406e6c:	mov    bl,BYTE PTR [edi-0x34]
  406e6f:	cwde   
  406e70:	cmp    eax,0x44132b7d
  406e75:	push   edx
  406e76:	cmp    bh,BYTE PTR [edi]
  406e78:	nop    DWORD PTR [esi]
  406e7b:	cs and dl,bh
  406e7e:	in     al,dx
  406e7f:	fldcw  WORD PTR [ebx]
  406e81:	ss scas al,BYTE PTR es:[edi]
  406e83:	out    0xa3,al
  406e85:	jg     0x406eb9
  406e87:	out    dx,al
  406e88:	pop    esp
  406e89:	or     bl,cl
  406e8b:	daa    
  406e8c:	in     al,dx
  406e8d:	mov    ebp,0x5429d4c4
  406e92:	add    BYTE PTR [edx],cl
  406e94:	icebp  
  406e95:	sub    DWORD PTR ds:0x1e3dbe67,esi
  406e9b:	pop    esp
  406e9c:	mov    ds:0x60daa8f5,eax
  406ea1:	mov    al,ds:0xd697f6a1
  406ea6:	shl    BYTE PTR [ebx],0x89
  406ea9:	fidivr DWORD PTR [eax-0x71]
  406eac:	pop    ss
  406ead:	fld    DWORD PTR [ebx]
  406eaf:	fdivr  st,st(2)
  406eb1:	in     eax,0xb8
  406eb3:	sbb    DWORD PTR [edi],ecx
  406eb5:	and    dh,BYTE PTR [ebx+0x2a]
  406eb8:	cmp    eax,0x77201965
  406ebd:	into   
  406ebe:	add    edi,ebx
  406ec0:	out    dx,al
  406ec1:	sbb    edx,DWORD PTR [eax-0x5207dd9c]
  406ec7:	fstp   QWORD PTR [edi+0x69ada2bf]
  406ecd:	fsub   st,st(1)
  406ecf:	bound  ecx,QWORD PTR [ecx]
  406ed1:	lods   eax,DWORD PTR ds:[esi]
  406ed2:	add    al,0x16
  406ed4:	inc    esi
  406ed5:	dec    ebp
  406ed6:	in     eax,0xa8
  406ed8:	in     al,0xa8
  406eda:	push   ds
  406edb:	xchg   ebx,eax
  406edc:	cmp    BYTE PTR [ecx-0x6c],dh
  406edf:	lahf   
  406ee0:	dec    esi
  406ee1:	pop    es
  406ee2:	pop    eax
  406ee3:	cmp    eax,0xc898c8ee
  406ee8:	push   edx
  406ee9:	push   es
  406eea:	sbb    esi,DWORD PTR [esi-0x78]
  406eed:	sub    ecx,edx
  406eef:	adc    al,0x19
  406ef1:	cmp    DWORD PTR [eax],ebp
  406ef3:	retf   0xec76
  406ef6:	retf   
  406ef7:	pop    edi
  406ef8:	ss (bad) 
  406efa:	and    dh,dl
  406efc:	xlat   BYTE PTR ds:[ebx]
  406efd:	cmp    ch,BYTE PTR [esi+0x72]
  406f00:	adc    ah,cl
  406f02:	pop    edi
  406f03:	popf   
  406f04:	pop    es
  406f05:	push   ss
  406f06:	stos   DWORD PTR es:[edi],eax
  406f07:	mov    ds:0x877f8b9b,al
  406f0c:	dec    eax
  406f0d:	push   esi
  406f0e:	mov    eax,ds:0xc3b06895
  406f13:	pop    ebp
  406f14:	cmc    
  406f15:	mov    eax,0xa23b4b4e
  406f1a:	mov    bh,0x4a
  406f1c:	xlat   BYTE PTR ds:[ebx]
  406f1d:	shl    DWORD PTR [edx+edi*1-0x292badfc],1
  406f24:	test   BYTE PTR [eax-0x3ce59275],dh
  406f2a:	nop
  406f2b:	inc    esi
  406f2c:	in     al,0x8b
  406f2e:	(bad)  
  406f2f:	popa   
  406f30:	xchg   ebp,eax
  406f31:	and    dl,cl
  406f33:	push   edx
  406f34:	xchg   DWORD PTR [ebp-0xf],esp
  406f37:	nop
  406f38:	outs   dx,DWORD PTR ds:[esi]
  406f39:	mov    esp,0x382bb721
  406f3e:	ins    DWORD PTR es:[edi],dx
  406f3f:	pop    ds
  406f40:	call   0xc55c1f90
  406f45:	dec    esi
  406f46:	int3   
  406f47:	sbb    al,0x57
  406f49:	mov    esi,DWORD PTR [ebx+0x58]
  406f4c:	push   esi
  406f4d:	fstp   TBYTE PTR [eax-0x570687fa]
  406f53:	sub    BYTE PTR [edx+0x77082134],0x3c
  406f5a:	fist   WORD PTR [edi+0x1168db0d]
  406f60:	imul   ebp,DWORD PTR [edi+0x76],0xa0a1c054
  406f67:	jle    0x406fa3
  406f69:	int    0xf7
  406f6b:	inc    edx
  406f6c:	add    DWORD PTR [ecx],edx
  406f6e:	out    0x77,al
  406f70:	cmp    ch,BYTE PTR [eax-0x64ee390c]
  406f76:	and    al,bh
  406f78:	mov    ebp,0x48972ee8
  406f7d:	jnp    0x406f74
  406f7f:	in     eax,dx
  406f80:	mov    ebp,0x85c802a4
  406f85:	xchg   BYTE PTR [edx+0x5e],cl
  406f88:	or     ebp,DWORD PTR [eax]
  406f8a:	jns    0x407008
  406f8c:	mov    al,ds:0x49c74960
  406f91:	inc    eax
  406f92:	aas    
  406f93:	lahf   
  406f94:	fstp   QWORD PTR [ecx+0x0]
  406f97:	daa    
  406f98:	push   edi
  406f99:	ins    BYTE PTR es:[edi],dx
  406f9a:	mov    ebx,0xa63e64b9
  406f9f:	jp     0x406f50
  406fa1:	pop    esp
  406fa2:	push   ds
  406fa3:	inc    esp
  406fa4:	sahf   
  406fa5:	out    dx,eax
  406fa6:	mov    ds:0xa2c17595,eax
  406fab:	(bad)  
  406fac:	jbe    0x40700f
  406fae:	test   BYTE PTR [ebp-0x7c30f0f5],dh
  406fb4:	jp     0x406f9d
  406fb6:	cmp    al,0xd7
  406fb8:	sub    esp,ecx
  406fba:	mov    ?,WORD PTR [ecx+0x6d7dfd63]
  406fc0:	das    
  406fc1:	into   
  406fc2:	sub    dl,BYTE PTR [ebx+0x50]
  406fc5:	test   BYTE PTR [eax+0x1dff7e7b],cl
  406fcb:	pop    esp
  406fcc:	mov    ebx,esp
  406fce:	jmp    0x3579:0x157bb9ae
  406fd5:	xchg   edi,eax
  406fd6:	sahf   
  406fd7:	fdiv   DWORD PTR [edi+0x40f44c96]
  406fdd:	mov    ds:0x2b72af02,eax
  406fe2:	dec    edx
  406fe3:	int3   
  406fe4:	jnp    0x407061
  406fe6:	clc    
  406fe7:	push   esi
  406fe8:	jne    0x40701e
  406fea:	jle    0x407031
  406fec:	adc    al,0xe5
  406fee:	and    eax,0x85a526fe
  406ff3:	adc    al,0xec
  406ff5:	outs   dx,DWORD PTR ds:[esi]
  406ff6:	repz jmp DWORD PTR [ecx-0x46dc02af]
  406ffd:	add    al,0xf3
  406fff:	xchg   edi,edx
  407001:	fwait
  407002:	mov    dh,0xbb
  407004:	dec    ecx
  407005:	xchg   edi,eax
  407006:	out    0xa8,eax
  407008:	shr    DWORD PTR [ebp-0xfdacbb1],0xe6
  40700f:	mov    al,0xe5
  407011:	jno    0x406fe6
  407013:	adc    ch,BYTE PTR fs:[ecx+0x60]
  407017:	push   esi
  407018:	sub    BYTE PTR [ecx-0x24b590b7],dl
  40701e:	mov    ds:0xcd7626f8,eax
  407023:	add    dh,BYTE PTR [eax+0x50]
  407026:	rcr    BYTE PTR [ebx+0x7a],1
  407029:	jmp    0x681:0x95105477
  407030:	in     al,dx
  407031:	and    DWORD PTR [edx+0x32],0xa508e4d5
  407038:	sbb    esi,0x39
  40703b:	outs   dx,DWORD PTR ds:[esi]
  40703c:	shl    eax,1
  40703e:	cmp    DWORD PTR [eax+0xc],0xffffffb1
  407042:	test   eax,0xbd2f6d2e
  407047:	pop    ecx
  407048:	sbb    BYTE PTR [ebx],cl
  40704a:	xchg   ebx,eax
  40704b:	mov    al,ds:0xa2959c30
  407050:	icebp  
  407051:	and    bh,cl
  407053:	jb     0x40708b
  407055:	je     0x406fff
  407057:	ins    BYTE PTR es:[edi],dx
  407058:	xchg   esi,eax
  407059:	jbe    0x407085
  40705b:	pop    esp
  40705c:	xchg   esp,eax
  40705d:	cmp    DWORD PTR [ebp+0x71a4dc00],esp
  407063:	nop
  407064:	push   edi
  407065:	jo     0x40704e
  407067:	cmp    cl,BYTE PTR [esi-0xd1e7842]
  40706d:	mov    edx,0xa23f226b
  407072:	jecxz  0x407068
  407074:	mov    ds:0x3a924a5a,al
  407079:	sbb    DWORD PTR [eax+0xc],esp
  40707c:	push   ebx
  40707d:	pushf  
  40707e:	pop    edi
  40707f:	ja     0x407092
  407081:	xor    al,0xd7
  407083:	test   DWORD PTR [eax-0x44428ca4],esp
  407089:	mov    dl,0x70
  40708b:	imul   esp,DWORD PTR [ecx-0x40],0xffffff8f
  40708f:	adc    esp,esi
  407091:	lea    eax,[esi-0x5f]
  407094:	adc    eax,0x91aa7558
  407099:	cmp    al,0x4a
  40709b:	add    al,BYTE PTR [eax+0x7e]
  40709e:	xchg   BYTE PTR [ecx+0x14],cl
  4070a1:	and    BYTE PTR [esi+0x9],ah
  4070a4:	dec    esi
  4070a5:	test   al,0x8
  4070a7:	ins    BYTE PTR es:[edi],dx
  4070a8:	pop    ss
  4070a9:	fld    st(7)
  4070ab:	shr    BYTE PTR [edi],1
  4070ad:	cmp    bl,BYTE PTR [esi-0xe3bb92]
  4070b3:	jge    0x407074
  4070b5:	es mov ebp,0xc5e2af46
  4070bb:	or     BYTE PTR [edx-0x56],bl
  4070be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4070bf:	test   eax,0x6cedf5f7
  4070c4:	test   DWORD PTR [ebx+0x55],ebp
  4070c7:	and    eax,0xa4261492
  4070cc:	adc    esi,DWORD PTR [eax-0x77c9415]
  4070d2:	sbb    DWORD PTR [esi],0x31
  4070d5:	loope  0x407119
  4070d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070d8:	jle    0x4070fd
  4070da:	cld    
  4070db:	and    al,0x1a
  4070dd:	pusha  
  4070de:	jb     0x407112
  4070e0:	pop    edx
  4070e1:	cmovle esp,DWORD PTR [esi-0x2e96e19f]
  4070e8:	mov    dl,0x12
  4070ea:	test   BYTE PTR [esi-0x14bf0785],0x53
  4070f1:	scas   al,BYTE PTR es:[edi]
  4070f2:	test   al,0x9d
  4070f4:	inc    esp
  4070f5:	fdivr  QWORD PTR [ebp-0x66]
  4070f8:	pop    ecx
  4070f9:	adc    dh,BYTE PTR [edx-0x7f839bf3]
  4070ff:	imul   esp,DWORD PTR [ecx+0x72],0xe8edb4fb
  407106:	add    dl,dl
  407108:	dec    edx
  407109:	mov    al,ds:0xed510c87
  40710e:	inc    ebx
  40710f:	push   edi
  407110:	xchg   esi,eax
  407111:	xchg   BYTE PTR [ebx+0x6b],dh
  407114:	lahf   
  407115:	pop    ds
  407116:	in     eax,0x90
  407118:	push   0xbef8094e
  40711d:	xor    dl,cl
  40711f:	mov    al,ds:0xd566029c
  407124:	add    al,0x55
  407126:	cdq    
  407127:	jle    0x40719f
  407129:	in     eax,0x5b
  40712b:	pop    ebx
  40712c:	jne    0x40719b
  40712e:	mov    edi,0x7fa3048f
  407133:	cli    
  407134:	mov    esp,0x8fb6dd55
  407139:	sub    DWORD PTR [esi-0x73111f98],0x4d
  407140:	xor    DWORD PTR [ebx+0x4e1cf5a5],ebp
  407146:	sub    eax,0x46db9abb
  40714b:	fsubr  QWORD PTR [ebx]
  40714d:	fsubr  st(7),st
  40714f:	inc    edi
  407150:	push   ss
  407151:	test   eax,0xd18e532c
  407156:	pop    ebx
  407157:	dec    esi
  407158:	ins    DWORD PTR es:[edi],dx
  407159:	xlat   BYTE PTR ds:[ebx]
  40715a:	(bad)  
  40715c:	dec    edi
  40715d:	mov    WORD PTR [eax-0x1a],es
  407160:	popa   
  407161:	pushf  
  407162:	jmp    0x5d1be345
  407167:	rcl    DWORD PTR [ebp+eax*1+0x6a],0x45
  40716c:	imul   edx,DWORD PTR [edi+0x4f],0x4b
  407170:	aad    0xb7
  407172:	mov    ch,0xf9
  407174:	retf   
  407175:	mov    ch,BYTE PTR [ecx-0x18]
  407178:	out    dx,eax
  407179:	xchg   ebp,eax
  40717a:	sahf   
  40717b:	jmp    0x407192
  40717d:	adc    BYTE PTR [ebp-0x74],dl
  407180:	adc    ebx,DWORD PTR [edx+0x6]
  407183:	jmp    0x4071d3
  407185:	sbb    BYTE PTR [ebp-0x67cacc21],bl
  40718b:	int    0x5e
  40718d:	mov    dh,0xe2
  40718f:	dec    DWORD PTR [esi]
  407191:	xchg   edx,eax
  407192:	mov    ds:0xa14787a4,eax
  407197:	mov    ch,0x14
  407199:	loopne 0x40712c
  40719b:	enter  0x8008,0xd6
  40719f:	mov    ds:0xc8e3c19a,al
  4071a4:	adc    DWORD PTR [ebp-0x799dd402],0x332b7983
  4071ae:	and    DWORD PTR [ebx-0xa54ed2e],edi
  4071b4:	cmp    BYTE PTR [edx-0xc],bl
  4071b7:	jne    0x407221
  4071b9:	mov    ch,0xca
  4071bb:	mov    DWORD PTR [edx+0x6e],esi
  4071be:	xchg   ecx,eax
  4071bf:	lds    esp,FWORD PTR [eax+edx*4]
  4071c2:	adc    dh,BYTE PTR [ebx+0x30893bbb]
  4071c8:	dec    edi
  4071c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ca:	xor    edi,DWORD PTR [eax+0x36c06c88]
  4071d0:	ror    BYTE PTR [ecx+eiz*2+0x14],1
  4071d4:	cmp    al,0x88
  4071d6:	js     0x407161
  4071d8:	fsubrp st(6),st
  4071da:	stos   DWORD PTR es:[edi],eax
  4071db:	ins    DWORD PTR es:[edi],dx
  4071dc:	lods   al,BYTE PTR ds:[esi]
  4071dd:	(bad)  
  4071de:	fcmovbe st,st(3)
  4071e0:	push   ebp
  4071e1:	dec    esi
  4071e2:	in     eax,dx
  4071e3:	cmp    al,0x1e
  4071e5:	push   ss
  4071e6:	pop    esp
  4071e7:	mov    BYTE PTR [ecx-0x6a45e903],ch
  4071ed:	mov    bl,0xf2
  4071ef:	jg     0x40719c
  4071f1:	test   bl,dl
  4071f3:	cmc    
  4071f4:	or     ecx,esp
  4071f6:	xchg   esp,eax
  4071f7:	pop    ss
  4071f8:	or     eax,0x1aba9dd1
  4071fd:	lods   al,BYTE PTR ds:[esi]
  4071fe:	shl    esp,1
  407200:	(bad)  
  407201:	scas   al,BYTE PTR es:[edi]
  407202:	sbb    BYTE PTR [ebx],al
  407204:	clc    
  407205:	and    BYTE PTR [ecx],0x5
  407208:	mov    ch,0x54
  40720a:	pushf  
  40720b:	int3   
  40720c:	cdq    
  40720d:	xchg   ebp,eax
  40720e:	pop    ss
  40720f:	xor    DWORD PTR [edi+0x7270aa5b],ebx
  407215:	add    al,0x5a
  407217:	mov    edx,0x6533498e
  40721c:	inc    edi
  40721d:	frstor [ecx*1+0x2b368251]
  407224:	add    eax,0xbf053c46
  407229:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40722a:	call   0xa4fd:0xdeb3fded
  407231:	push   es
  407232:	out    dx,eax
  407233:	mov    cl,0x94
  407235:	in     eax,0x7b
  407237:	ins    BYTE PTR es:[edi],dx
  407238:	jb     0x407217
  40723a:	push   cs
  40723b:	es int 0x8b
  40723e:	xchg   edx,eax
  40723f:	pushf  
  407240:	mov    al,ds:0xd12bc6e0
  407245:	in     al,dx
  407246:	push   0xffffffd1
  407248:	or     eax,0x7ecb7db5
  40724d:	xchg   BYTE PTR [esi+0x42],cl
  407250:	mov    ds:0xd8efb0ac,eax
  407255:	or     BYTE PTR [esi-0x52],dh
  407258:	xor    BYTE PTR [ecx],0x3c
  40725b:	repz and al,0xe8
  40725e:	mov    edx,0xfef8c784
  407263:	jns    0x40726a
  407265:	test   eax,0x1be3ec09
  40726a:	lods   al,BYTE PTR ds:[esi]
  40726b:	aas    
  40726c:	jmp    0x86715db5
  407271:	mov    cl,0x6f
  407273:	sub    al,0xb8
  407275:	arpl   WORD PTR [esi+0x4bc7a482],bp
  40727b:	dec    esp
  40727c:	jl     0x407287
  40727e:	retf   0x3a28
  407281:	inc    ebx
  407282:	pop    ecx
  407283:	out    0x5,eax
  407285:	mov    BYTE PTR [ecx*1+0x36dd505a],dl
  40728c:	gs dec edi
  40728e:	ficomp WORD PTR [esi+0x2f]
  407291:	repz dec ebx
  407293:	into   
  407294:	mov    ds:0x9e660952,eax
  407299:	push   es
  40729a:	inc    esp
  40729b:	popa   
  40729c:	cld    
  40729d:	push   0x727af5fb
  4072a2:	cmp    eax,0xbed80d88
  4072a7:	sub    bh,dl
  4072a9:	fisubr DWORD PTR ds:0x8b1af615
  4072af:	ret    0xd4a6
  4072b2:	mov    edi,0x19d2ea40
  4072b7:	aas    
  4072b8:	sbb    eax,0xa7d193a5
  4072bd:	mov    ch,0x66
  4072bf:	test   BYTE PTR [ebx+0x70],bl
  4072c2:	mov    ds:0x2246726c,al
  4072c7:	ja     0x4072e4
  4072c9:	xor    esi,DWORD PTR [edx]
  4072cb:	xor    DWORD PTR [edx-0x5f],ebx
  4072ce:	pop    esp
  4072cf:	xor    BYTE PTR [eax+ebp*2-0x475e575d],dl
  4072d6:	mov    esi,DWORD PTR [edi]
  4072d8:	inc    esp
  4072d9:	cld    
  4072da:	imul   eax,DWORD PTR [ecx],0x2106beb1
  4072e0:	push   ds
  4072e1:	sub    esi,DWORD PTR [edx-0x325d048d]
  4072e7:	dec    ebp
  4072e8:	in     eax,dx
  4072e9:	xor    eax,0xbe875755
  4072ee:	fs sub eax,0xfd283e2b
  4072f4:	mov    dh,0xc7
  4072f6:	pusha  
  4072f7:	push   edx
  4072f8:	mov    bl,0x79
  4072fa:	mov    ebx,0xc9901582
  4072ff:	aas    
  407300:	jecxz  0x407291
  407302:	or     BYTE PTR [esi+0x496354a3],cl
  407308:	hlt    
  407309:	(bad)  
  40730a:	test   al,0xc8
  40730c:	or     dl,BYTE PTR ds:0xe7517f72
  407312:	ds (bad) 
  407314:	aam    0xca
  407316:	popa   
  407317:	inc    ecx
  407318:	mov    eax,ds:0x3e06f785
  40731d:	out    dx,al
  40731e:	or     DWORD PTR [ecx+0xc],0x8c01ee8
  407325:	and    DWORD PTR [ecx],ebp
  407327:	jp     0x40735b
  407329:	jl     0x4072d3
  40732b:	cs scas al,BYTE PTR es:[edi]
  40732d:	pop    es
  40732e:	jmp    0x6883:0x39f8dcff
  407335:	mov    dl,ah
  407337:	fnstsw WORD PTR [edx-0x3e]
  40733a:	pusha  
  40733b:	add    BYTE PTR [edx-0x5],al
  40733e:	and    al,0x9c
  407340:	loopne 0x4072fd
  407342:	ret    
  407343:	mov    ebx,0x73b209a6
  407348:	int    0x6c
  40734a:	add    BYTE PTR [edi-0x6c121fe5],0x93
  407351:	adc    cl,BYTE PTR [eax+0x5d]
  407354:	mov    eax,ds:0xcf345b32
  407359:	shr    DWORD PTR [ebp+0x73],1
  40735c:	loopne 0x4073d2
  40735e:	fst    QWORD PTR [esi+0x5d5d78de]
  407364:	or     eax,0x1dd7baa2
  407369:	imul   ecx,DWORD PTR [edx+0x7c731016],0xffffffdc
  407370:	sbb    BYTE PTR [ebp-0x68],0xb8
  407374:	jp     0x407306
  407376:	jbe    0x407375
  407378:	out    dx,eax
  407379:	repz and dh,BYTE PTR [ecx+0x5a5a7ce0]
  407380:	jle    0x40736c
  407382:	arpl   sp,bp
  407384:	jnp    0x4073fb
  407386:	and    DWORD PTR [edx+ebx*8-0x425b2555],0xffffffa9
  40738e:	mov    ds:0x2c69278d,eax
  407393:	adc    al,0x20
  407395:	sub    BYTE PTR [edi+0x6c],dl
  407398:	ss clc 
  40739a:	or     DWORD PTR [ecx+0x26],ecx
  40739d:	xchg   ebx,eax
  40739e:	int3   
  40739f:	cli    
  4073a0:	scas   al,BYTE PTR es:[edi]
  4073a1:	mov    ah,0xa
  4073a3:	sti    
  4073a4:	(bad)  
  4073a5:	out    dx,eax
  4073a6:	(bad)  
  4073a7:	xor    BYTE PTR [edx+0x4c5705cf],0xcb
  4073ae:	mov    ch,0xaa
  4073b0:	sbb    edi,DWORD PTR [eax]
  4073b2:	ror    edx,1
  4073b4:	and    ecx,esp
  4073b6:	mov    esp,0xeaf3ef73
  4073bb:	gs out dx,eax
  4073bd:	addr16 in al,dx
  4073bf:	push   ebx
  4073c0:	stc    
  4073c1:	addr16 into 
  4073c3:	loopne 0x40742e
  4073c5:	sbb    ebp,DWORD PTR [ecx-0x65]
  4073c8:	add    eax,edx
  4073ca:	add    bl,BYTE PTR [ebx+0x2b]
  4073cd:	adc    ah,bl
  4073cf:	shl    DWORD PTR [esi-0x5f],0x63
  4073d3:	imul   ecx,DWORD PTR ds:0x1b62a579,0x9c460ca9
  4073dd:	push   ebx
  4073de:	adc    al,0x53
  4073e0:	sub    DWORD PTR [esi-0x78],0xe8a777e0
  4073e7:	pop    edi
  4073e8:	aam    0x2a
  4073ea:	sbb    al,BYTE PTR [edi+eiz*4]
  4073ed:	scas   al,BYTE PTR es:[edi]
  4073ee:	pop    ecx
  4073ef:	icebp  
  4073f0:	les    eax,FWORD PTR [edx]
  4073f2:	or     al,0xb6
  4073f4:	int    0x5f
  4073f6:	pop    esi
  4073f7:	repz mov cl,0xdc
  4073fa:	or     eax,0x6a17d0a0
  4073ff:	pushf  
  407400:	test   al,0x62
  407402:	mov    edi,0xb9a6582b
  407407:	or     eax,0x5e07a9fa
  40740c:	mov    ah,BYTE PTR [ebp+0x20b7cf03]
  407412:	push   cs
  407413:	mov    eax,0xbcd18b0f
  407418:	ds sub eax,0x23b46dc7
  40741e:	sbb    esi,DWORD PTR [edi+edx*8]
  407421:	sub    BYTE PTR [ebx-0xe],bh
  407424:	push   cs
  407425:	adc    al,bl
  407427:	xchg   ecx,eax
  407428:	and    DWORD PTR [eax+0x17],edi
  40742b:	mov    dh,0xdf
  40742d:	dec    ecx
  40742e:	inc    eax
  40742f:	xor    edx,DWORD PTR [eax]
  407431:	arpl   WORD PTR [eax-0x282488d7],ax
  407437:	stos   BYTE PTR es:[edi],al
  407438:	pop    ecx
  407439:	sub    ebp,DWORD PTR [ebp+0x100e389a]
  40743f:	cmc    
  407440:	ins    DWORD PTR es:[edi],dx
  407441:	push   ds
  407442:	jp     0x4073d3
  407444:	and    ah,dl
  407446:	aam    0xae
  407448:	in     al,0xd3
  40744a:	mov    WORD PTR [eax+0x4ecea296],ds
  407450:	dec    eax
  407451:	in     eax,0x36
  407453:	mov    ds:0xb872aa29,al
  407458:	mov    cl,0x38
  40745a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40745b:	jecxz  0x40742e
  40745d:	or     ebx,0xcca2bf00
  407463:	cmp    ch,BYTE PTR [eax-0x26cfaad2]
  407469:	call   0x3a281d4
  40746e:	cld    
  40746f:	repnz out dx,eax
  407471:	or     ebp,DWORD PTR [esi+0x6c820f2f]
  407477:	jecxz  0x407479
  407479:	imul   ebp,edx,0x16c9ed54
  40747f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407480:	leave  
  407481:	cmp    esi,ebp
  407483:	(bad)  
  407485:	hlt    
  407486:	jle    0x407456
  407488:	je     0x407489
  40748a:	xchg   esi,eax
  40748b:	jo     0x40747c
  40748d:	pop    ds
  40748e:	jmp    0x19585c1c
  407493:	sub    dl,dl
  407495:	mov    ah,0xc6
  407497:	cwde   
  407498:	jb     0x407492
  40749a:	mov    dh,0xe5
  40749c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40749d:	and    eax,0xa10d6d15
  4074a2:	bnd je 0x407466
  4074a5:	pop    edi
  4074a6:	aam    0xef
  4074a8:	call   0xfb387e1b
  4074ad:	cwde   
  4074ae:	hlt    
  4074af:	add    al,0xab
  4074b1:	repnz or edi,ebx
  4074b4:	sub    al,0xce
  4074b6:	or     eax,0xcf6a4753
  4074bb:	shr    BYTE PTR [esi+0x6e],0xa7
  4074bf:	pop    esi
  4074c0:	(bad)  
  4074c1:	imul   ebx,DWORD PTR [ebx-0x47],0xffffffcd
  4074c5:	test   DWORD PTR [edi-0x11],ebp
  4074c8:	or     DWORD PTR [esi-0x7f3f2273],esp
  4074ce:	imul   ebp,DWORD PTR [esi],0xead1b64c
  4074d4:	hlt    
  4074d5:	dec    DWORD PTR [edi+0x52956978]
  4074db:	push   ecx
  4074dc:	jg     0x407539
  4074de:	hlt    
  4074df:	xchg   ebx,eax
  4074e0:	cwde   
  4074e1:	dec    esp
  4074e2:	aad    0x39
  4074e4:	(bad)
  4074e7:	cmp    bl,BYTE PTR [edi+0x675a1334]
  4074ed:	lods   al,BYTE PTR ds:[esi]
  4074ee:	inc    edi
  4074ef:	test   eax,0xc0942337
  4074f4:	outs   dx,DWORD PTR fs:[esi]
  4074f6:	jne    0x407536
  4074f8:	mov    WORD PTR [eax-0x29],cs
  4074fb:	(bad)  
  4074fc:	mov    edi,0xd1d7d756
  407501:	call   0x383b:0x7accefdb
  407508:	and    ecx,DWORD PTR [edi+edx*2-0x49]
  40750c:	pop    eax
  40750d:	in     al,0x4e
  40750f:	sbb    eax,0x1f335432
  407514:	in     al,dx
  407515:	lahf   
  407516:	xor    eax,edi
  407518:	mov    esi,0xf10183a9
  40751d:	mov    ebx,0xd831e3b6
  407522:	cli    
  407523:	retf   0x3b95
  407526:	rcr    DWORD PTR [ecx-0x80f6b42],1
  40752c:	neg    BYTE PTR [ebx+0x3c]
  40752f:	jle    0x407538
  407531:	or     esi,DWORD PTR [edi+0x2a]
  407534:	ror    DWORD PTR [esi+0x9d817b6],1
  40753a:	fistp  DWORD PTR [edx]
  40753c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40753d:	ins    BYTE PTR es:[edi],dx
  40753e:	aaa    
  40753f:	rcl    edx,1
  407541:	or     esp,DWORD PTR [esi-0x6d58d12a]
  407547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407548:	mov    esi,0x8cd44375
  40754d:	daa    
  40754e:	xchg   ebx,eax
  40754f:	dec    edx
  407550:	js     0x4075a7
  407552:	mov    ?,WORD PTR [eax-0x49409b8a]
  407558:	cwde   
  407559:	mov    esp,0x685878dc
  40755e:	pop    esi
  40755f:	and    DWORD PTR [edi],edi
  407561:	ja     0x4074f3
  407563:	sub    esp,DWORD PTR [esi-0x36c5d5cb]
  407569:	mov    dh,0x9
  40756b:	sub    ebx,DWORD PTR [eax-0x5d28179]
  407571:	lock rol BYTE PTR [edx],1
  407574:	add    esp,ebp
  407576:	adc    edx,DWORD PTR [esi-0x67]
  407579:	and    al,0xd
  40757b:	mov    ss,WORD PTR [ecx-0x7d]
  40757e:	mov    al,0x27
  407580:	push   0xffffff9f
  407582:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407583:	ret    0x53dd
  407586:	mov    cl,0x0
  407588:	adc    BYTE PTR ds:0x986b0c2,bh
  40758e:	add    bh,al
  407590:	js     0x407546
  407592:	cmp    DWORD PTR [esi-0x36],0xff7e9350
  407599:	add    dl,BYTE PTR [edx]
  40759b:	and    eax,0x725b9442
  4075a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075a1:	xchg   ebx,eax
  4075a2:	das    
  4075a3:	test   al,0x38
  4075a5:	neg    DWORD PTR [edx+edi*4+0xbb4fbb5]
  4075ac:	cmp    ebp,esi
  4075ae:	push   ecx
  4075af:	sbb    bl,dh
  4075b1:	xchg   esi,eax
  4075b2:	or     esi,DWORD PTR [esi]
  4075b4:	fdiv   st(0),st
  4075b6:	jo     0x407578
  4075b8:	jl     0x407592
  4075ba:	int3   
  4075bb:	ret    
  4075bc:	ds mov bh,0xb5
  4075bf:	call   0x1aaf8c6
  4075c4:	dec    ebp
  4075c5:	iret   
  4075c6:	imul   esp,esi,0xfffffff7
  4075c9:	jb     0x40761e
  4075cb:	or     BYTE PTR [ebx+0x9],cl
  4075ce:	sub    ebx,0xb871e8e8
  4075d4:	and    DWORD PTR [eax-0x47],eax
  4075d7:	daa    
  4075d8:	push   edx
  4075d9:	cmp    al,0x18
  4075db:	cmp    bh,BYTE PTR [edi-0x53]
  4075de:	pop    eax
  4075df:	cs mov bl,0xff
  4075e2:	jmp    0x407566
  4075e4:	call   0xf1960e58
  4075e9:	fs cmp al,0xa1
  4075ec:	jle    0x407580
  4075ee:	ins    BYTE PTR es:[edi],dx
  4075ef:	dec    ebp
  4075f0:	add    eax,0xe770ed49
  4075f5:	lods   eax,DWORD PTR ds:[esi]
  4075f6:	stos   BYTE PTR es:[edi],al
  4075f7:	(bad)  
  4075f8:	jp     0x4075f0
  4075fa:	jmp    0x8018:0xbecede2c
  407601:	retf   0xe938
  407604:	inc    edi
  407605:	inc    ebp
  407606:	inc    edx
  407607:	in     al,0x82
  407609:	and    al,0x15
  40760b:	add    ecx,esp
  40760d:	lahf   
  40760e:	xor    DWORD PTR [edi+0x4d],edx
  407611:	push   ds
  407612:	push   edi
  407613:	inc    ecx
  407614:	in     al,dx
  407615:	mov    al,0xe2
  407617:	test   DWORD PTR [edi+0x4cf8e126],edi
  40761d:	ins    DWORD PTR es:[edi],dx
  40761e:	clc    
  40761f:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  407621:	mov    esp,ebx
  407623:	mov    DWORD PTR [edi],esi
  407625:	gs ja  0x4fc583a6
  40762c:	pop    edi
  40762d:	xchg   esi,eax
  40762e:	sar    DWORD PTR [esi+0x43],cl
  407631:	fcomp  st(0)
  407633:	push   ebp
  407634:	clc    
  407635:	leave  
  407636:	fs nop
  407638:	adc    al,0x35
  40763a:	hlt    
  40763b:	loop   0x40766e
  40763d:	clc    
  40763e:	les    esp,FWORD PTR [ebp+0x2748c2]
  407644:	jno    0x4076a8
  407646:	or     al,0xce
  407648:	push   edi
  407649:	xlat   BYTE PTR ds:[ebx]
  40764a:	dec    eax
  40764b:	push   edi
  40764c:	xchg   edx,eax
  40764d:	(bad)  
  40764e:	fstp   DWORD PTR [ecx+0x3f]
  407651:	xchg   BYTE PTR [ecx+ecx*1-0x3e],bh
  407655:	push   edx
  407656:	add    esi,DWORD PTR [eax-0x25]
  407659:	mov    esp,0x19db00a1
  40765e:	icebp  
  40765f:	mov    ah,0xb2
  407661:	jns    0x40768a
  407663:	aad    0x3d
  407665:	in     eax,dx
  407666:	or     eax,0xb5aee206
  40766b:	loopne 0x40764d
  40766d:	mov    ah,0x9a
  40766f:	mov    al,ds:0x6ab251a1
  407674:	aad    0x30
  407676:	retf   
  407677:	adc    al,0xac
  407679:	shr    ebx,cl
  40767b:	adc    ebx,DWORD PTR [edx-0x7de4c1d5]
  407681:	ja     0x407605
  407683:	cmp    al,0xbc
  407685:	mov    ebx,0xf76977c7
  40768a:	jmp    0x869c:0x8184699b
  407691:	call   0xee16:0x72bf2b
  407698:	icebp  
  407699:	imul   ebp,DWORD PTR [edx+0x440326b1],0xa531765
  4076a3:	stc    
  4076a4:	(bad)
  4076a7:	stos   BYTE PTR es:[edi],al
  4076a8:	push   esp
  4076a9:	fstp   TBYTE PTR [eax]
  4076ab:	cmp    BYTE PTR [esp+ebp*1-0x5ae7e6da],dl
  4076b2:	and    dl,BYTE PTR [edx+0x74]
  4076b5:	xor    dl,0x1a
  4076b8:	sub    eax,ebx
  4076ba:	push   cs
  4076bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076bc:	arpl   WORD PTR [esi+0x74],bp
  4076bf:	push   esp
  4076c0:	je     0x4076dd
  4076c2:	cmp    al,0x19
  4076c4:	cmp    al,0x94
  4076c6:	ins    BYTE PTR es:[edi],dx
  4076c7:	xchg   esi,eax
  4076c8:	jmp    0x5a:0x16909025
  4076cf:	cdq    
  4076d0:	ja     0x4076a5
  4076d2:	sub    BYTE PTR [esi],ah
  4076d4:	hlt    
  4076d5:	jge    0x4076aa
  4076d7:	adc    al,0x3f
  4076d9:	bound  ebp,QWORD PTR [eax+0x31875efd]
  4076df:	jo     0x40767b
  4076e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4076e2:	fcom   DWORD PTR [esi]
  4076e4:	or     dh,BYTE PTR [edx+0x1e89e00b]
  4076ea:	xchg   ebp,eax
  4076eb:	dec    edx
  4076ec:	adc    esp,DWORD PTR [esi]
  4076ee:	fwait
  4076ef:	xchg   ebp,eax
  4076f0:	sub    ebp,DWORD PTR [ecx]
  4076f2:	mov    ah,0xc3
  4076f4:	outs   dx,BYTE PTR ds:[esi]
  4076f5:	xlat   BYTE PTR ds:[ebx]
  4076f6:	sub    DWORD PTR [ebx+0x4503b34e],edx
  4076fc:	in     al,0x93
  4076fe:	ret    
  4076ff:	pushf  
  407700:	lds    ebx,FWORD PTR [edi]
  407702:	js     0x40772c
  407704:	mov    BYTE PTR ss:[ebx+0x5f4e38a],cl
  40770b:	dec    esp
  40770c:	test   eax,0x3bbc4df3
  407711:	dec    edx
  407712:	xor    al,0x20
  407714:	jge    0x407753
  407716:	dec    ebp
  407717:	fistp  QWORD PTR [ecx]
  407719:	and    esp,ebp
  40771b:	mov    ecx,0x69bca011
  407720:	xchg   edx,eax
  407721:	cmp    bl,BYTE PTR [ecx+0x3a153360]
  407727:	enter  0x3c23,0xd1
  40772b:	and    eax,0x9e13c191
  407730:	leave  
  407731:	retf   0x7b33
  407734:	pop    ds
  407735:	gs scas eax,DWORD PTR es:[edi]
  407737:	mov    ah,0xf
  407739:	(bad)  
  40773b:	aad    0x36
  40773d:	xor    ecx,esp
  40773f:	and    DWORD PTR [edx+0x6b],esi
  407742:	xchg   ebx,eax
  407743:	and    al,0x53
  407745:	ret    
  407746:	cli    
  407747:	rol    bh,cl
  407749:	sti    
  40774a:	dec    eax
  40774b:	mov    ebx,0x900538e
  407750:	jecxz  0x407740
  407752:	cmp    eax,0x13d6e312
  407757:	test   al,0xae
  407759:	xchg   BYTE PTR [edi-0x5],dl
  40775c:	adc    BYTE PTR [edx-0x5],al
  40775f:	(bad)  [esi-0x4ca36123]
  407765:	mov    cl,0x12
  407767:	repz leave 
  407769:	and    bl,bl
  40776b:	aas    
  40776c:	pop    ebx
  40776d:	jl     0x40777d
  40776f:	arpl   WORD PTR [edx-0x27134da3],sp
  407775:	push   esp
  407776:	in     eax,dx
  407777:	lahf   
  407778:	mov    cl,0x11
  40777a:	push   edi
  40777b:	add    bl,BYTE PTR [esi]
  40777d:	or     BYTE PTR [edx-0x6f],ch
  407780:	mov    ecx,0x6df257ce
  407785:	hlt    
  407786:	ja     0x4077a0
  407788:	push   ebp
  407789:	imul   dl
  40778b:	imul   ebx,DWORD PTR [ebp+0x76334c15],0x7f
  407792:	cs mov eax,esi
  407795:	in     eax,dx
  407796:	jmp    0x80a9:0xe223ffeb
  40779d:	sub    BYTE PTR [edi],cl
  40779f:	into   
  4077a0:	es push ebp
  4077a2:	xor    edx,DWORD PTR [eax+0x6]
  4077a5:	jmp    0x407731
  4077a7:	xchg   ebp,eax
  4077a8:	(bad)  
  4077a9:	jo     0x4077e4
  4077ab:	sbb    esi,edx
  4077ad:	nop
  4077ae:	sub    edi,DWORD PTR [ebp+0x78ddf400]
  4077b4:	sbb    DWORD PTR [eax+0x73],ebx
  4077b7:	jne    0x407763
  4077b9:	jb     0x4077b7
  4077bb:	xchg   esp,eax
  4077bc:	mov    eax,ds:0x6d563d59
  4077c1:	xor    ch,bl
  4077c3:	jmp    0x4077ae
  4077c5:	cs dec eax
  4077c7:	inc    edx
  4077c8:	add    BYTE PTR [esi-0x64],bl
  4077cb:	pop    edi
  4077cc:	dec    edx
  4077cd:	fdiv   st,st(4)
  4077cf:	sbb    DWORD PTR [edi],esp
  4077d1:	or     ebp,DWORD PTR ds:0x488f41d1
  4077d7:	xor    DWORD PTR [esi-0x42f1d4],esi
  4077dd:	cmp    DWORD PTR [ebx],esp
  4077df:	or     ebp,0x3f
  4077e2:	jmp    0x98d66dec
  4077e7:	iret   
  4077e8:	test   al,0x24
  4077ea:	xor    ah,BYTE PTR [esi]
  4077ec:	pop    ecx
  4077ed:	xor    ebp,ebx
  4077ef:	out    dx,al
  4077f0:	xor    esi,0x8c0fc73c
  4077f6:	pop    ds
  4077f7:	paddsb mm6,QWORD PTR [edx]
  4077fa:	sbb    al,0xb
  4077fc:	xchg   esp,eax
  4077fd:	xchg   esp,eax
  4077fe:	retf   
  4077ff:	pop    esp
  407800:	and    cl,dh
  407802:	jb     0x4077f5
  407804:	neg    BYTE PTR [ebx]
  407806:	and    dh,al
  407808:	jne    0x407840
  40780a:	aaa    
  40780b:	fcom   QWORD PTR ds:0x73f8ae97
  407811:	push   edi
  407812:	pop    eax
  407813:	fcmovnbe st,st(4)
  407815:	cmp    eax,0xbfaca804
  40781a:	dec    ebp
  40781b:	retf   
  40781c:	add    ch,BYTE PTR [ebx]
  40781e:	(bad)  
  40781f:	jmp    0x7a8d:0xe85067ca
  407826:	(bad)  
  407827:	add    eax,0x1d91c150
  40782c:	call   0x5e23:0x4b86b52f
  407833:	mov    bh,0xa5
  407835:	and    al,0xf7
  407837:	sar    BYTE PTR [edi-0x4f],cl
  40783a:	push   eax
  40783b:	pop    ecx
  40783c:	inc    esi
  40783d:	outs   dx,BYTE PTR ds:[esi]
  40783e:	sbb    bh,BYTE PTR [ecx]
  407840:	mov    al,ds:0xe6de83ea
  407845:	cli    
  407846:	mov    al,0x7e
  407848:	pop    ebx
  407849:	cmp    esi,DWORD PTR [eax-0x47]
  40784c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40784d:	add    al,0x58
  40784f:	add    esi,DWORD PTR [ebx+edx*2-0x41]
  407853:	xchg   BYTE PTR [esi+ebp*8-0x71],al
  407857:	jle    0x4078c6
  407859:	xor    bh,dh
  40785b:	dec    edx
  40785c:	xchg   BYTE PTR [esi+0x73484789],ch
  407862:	add    eax,0xc412a6eb
  407867:	(bad)  
  40786a:	xor    al,0x6f
  40786c:	int    0x9e
  40786e:	ds je  0x407885
  407871:	clc    
  407872:	adc    eax,0xf697070f
  407877:	dec    edi
  407878:	int    0x8b
  40787a:	pop    eax
  40787b:	push   edi
  40787c:	jle    0x40789a
  40787e:	out    dx,al
  40787f:	inc    ebp
  407880:	loop   0x4078c7
  407882:	and    dh,bl
  407884:	adc    BYTE PTR [edx-0xe653c],bh
  40788a:	mov    DWORD PTR [ebp+0x52c789f6],edi
  407890:	jno    0x407860
  407892:	sbb    bh,BYTE PTR fs:[esi+0x366d2fb1]
  407899:	sub    al,0x3
  40789b:	add    DWORD PTR [ebp-0x1a2f485],ecx
  4078a1:	int3   
  4078a2:	push   0xffffffea
  4078a4:	cdq    
  4078a5:	dec    ebx
  4078a6:	retf   
  4078a7:	xchg   BYTE PTR [eax],bh
  4078a9:	xchg   ebx,eax
  4078aa:	and    eax,0xe4630769
  4078af:	loope  0x407861
  4078b1:	fld    QWORD PTR ds:0x5f0cf10
  4078b7:	shl    BYTE PTR [ebp+0x64],cl
  4078ba:	mov    ebx,0x6b205583
  4078bf:	sbb    BYTE PTR [ebp-0x4],0xb3
  4078c3:	mov    eax,ds:0x577ade91
  4078c8:	add    al,0xa0
  4078ca:	mov    esi,0xd020d6e6
  4078cf:	test   al,0x69
  4078d1:	(bad)  [esi+0x6f]
  4078d4:	adc    al,0xa8
  4078d6:	cmc    
  4078d7:	rcr    BYTE PTR [edx-0x71],1
  4078da:	stc    
  4078db:	les    edi,FWORD PTR [eax]
  4078dd:	pop    eax
  4078de:	jg     0x40795a
  4078e0:	jp     0x407867
  4078e2:	mov    ch,0xba
  4078e4:	mov    ch,0x3e
  4078e6:	fisttp DWORD PTR [edi-0x3b]
  4078e9:	nop
  4078ea:	xor    al,0xd5
  4078ec:	loop   0x407903
  4078ee:	mov    ax,ds:0xed7d1bf8
  4078f4:	retf   0x8940
  4078f7:	out    0xd0,eax
  4078f9:	mov    ds:0x3a351f50,eax
  4078fe:	jne    0x407927
  407900:	sahf   
  407901:	add    eax,0x221696fc
  407906:	or     esi,ebp
  407908:	js     0x407926
  40790a:	sbb    al,0xa2
  40790c:	pop    ebx
  40790d:	dec    esp
  40790e:	cld    
  40790f:	nop
  407910:	cmc    
  407911:	mov    cs,eax
  407913:	xchg   ecx,eax
  407914:	or     eax,0xe378a397
  407919:	icebp  
  40791a:	or     al,0x2d
  40791c:	jmp    0x7148:0xb553394d
  407923:	scas   eax,DWORD PTR es:[edi]
  407924:	ror    DWORD PTR [esi],1
  407926:	and    esp,DWORD PTR [eax+0x66ff2aec]
  40792c:	inc    esi
  40792d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40792e:	jl     0x40797e
  407930:	bound  eax,QWORD PTR [ecx+0xec6c067]
  407936:	xor    eax,0x7aa066a9
  40793b:	mov    bl,BYTE PTR [edx-0x1cdb6143]
  407941:	call   DWORD PTR [edx+0x23]
  407944:	pop    ss
  407945:	push   ebp
  407946:	out    dx,eax
  407947:	push   ds
  407948:	pop    esp
  407949:	les    ebp,FWORD PTR [edi]
  40794b:	add    al,0x9d
  40794d:	push   esi
  40794e:	sbb    BYTE PTR [ebx-0x20b2664c],ch
  407954:	shl    ah,1
  407956:	and    DWORD PTR [ecx+0x3d],0x339cf17a
  40795d:	mov    cl,0xcb
  40795f:	sub    DWORD PTR [ecx+0x489a7625],esi
  407965:	mov    BYTE PTR [edi-0x4998d393],ah
  40796b:	mov    ch,0x95
  40796d:	mov    ebp,0x872f74fb
  407972:	xor    DWORD PTR [ebp+0x36],0xa
  407976:	(bad)  
  407977:	into   
  407978:	stos   DWORD PTR es:[edi],eax
  407979:	cdq    
  40797a:	mov    ebx,0xf28f72f8
  40797f:	xor    ebx,ebp
  407981:	bound  ebx,QWORD PTR [ebx-0x7f]
  407984:	adc    BYTE PTR [edi],0xbb
  407987:	mov    cl,0xb
  407989:	jnp    0x4079b3
  40798b:	inc    ebx
  40798c:	repz enter 0x54b9,0xbe
  407991:	pop    ecx
  407992:	jmp    DWORD PTR [esi-0xe]
  407995:	sti    
  407996:	in     eax,dx
  407997:	jl     0x4079c7
  407999:	retf   
  40799a:	enter  0x20cb,0x9
  40799e:	and    DWORD PTR [esi+0x7a12494f],edi
  4079a4:	push   edx
  4079a5:	scas   eax,DWORD PTR es:[di]
  4079a7:	jmp    0xa83:0xb3c3b539
  4079ae:	push   cs
  4079af:	retf   0xc1f6
  4079b2:	mov    ch,0xa1
  4079b4:	push   edi
  4079b5:	cdq    
  4079b6:	fist   WORD PTR [ebx]
  4079b8:	sub    DWORD PTR [ebx-0x158e6f91],edx
  4079be:	pop    edi
  4079bf:	loope  0x407992
  4079c1:	mov    bl,0x76
  4079c3:	push   esp
  4079c4:	sub    eax,0x1c724856
  4079c9:	jecxz  0x407981
  4079cb:	mov    BYTE PTR [ebx+0x55],dh
  4079ce:	xor    al,0x35
  4079d0:	mov    dh,ah
  4079d2:	adc    ebp,DWORD PTR [eax-0x7d]
  4079d5:	js     0x407a3c
  4079d7:	lock push ebp
  4079d9:	cwde   
  4079da:	xlat   BYTE PTR ds:[ebx]
  4079db:	dec    esp
  4079dc:	cmp    al,0x32
  4079de:	mov    esi,0x25888f7
  4079e3:	pop    ebp
  4079e4:	js     0x40798f
  4079e6:	cmp    ecx,ebp
  4079e8:	pop    ebp
  4079e9:	(bad)  
  4079ea:	mov    eax,0x26cd4a5
  4079ef:	jo     0x407a07
  4079f1:	inc    edx
  4079f2:	outs   dx,DWORD PTR ds:[esi]
  4079f3:	and    DWORD PTR [esi+0x14],eax
  4079f6:	xchg   ebp,eax
  4079f7:	sahf   
  4079f8:	or     esi,DWORD PTR [ebx]
  4079fa:	pushf  
  4079fb:	les    esp,FWORD PTR [eax+0x1f75d1a8]
  407a01:	icebp  
  407a02:	outs   dx,BYTE PTR ds:[esi]
  407a03:	mov    cl,0xad
  407a05:	dec    si
  407a07:	cld    
  407a08:	push   edi
  407a09:	or     esp,ebp
  407a0b:	push   ds
  407a0c:	inc    edi
  407a0d:	rcr    edx,cl
  407a0f:	pop    ecx
  407a10:	and    DWORD PTR [ebx-0xd],eax
  407a13:	jl     0x407a8c
  407a15:	int    0x5
  407a17:	lea    eax,[edi-0x5d43f58c]
  407a1d:	outs   dx,DWORD PTR ds:[esi]
  407a1e:	push   esp
  407a1f:	std    
  407a20:	iret   
  407a21:	data16 cmp dl,BYTE PTR [edx-0xb60d6eb]
  407a28:	push   ecx
  407a29:	push   eax
  407a2a:	sbb    ah,BYTE PTR [ebx-0x4f51c2d3]
  407a30:	and    DWORD PTR [eax-0x9],edi
  407a33:	loopne 0x407a1d
  407a35:	ins    BYTE PTR es:[edi],dx
  407a36:	mov    dh,0x63
  407a38:	arpl   WORD PTR [edi-0x66],di
  407a3b:	sub    BYTE PTR [ecx+0x5085cdd8],bh
  407a41:	pushf  
  407a42:	test   eax,0xb99de562
  407a47:	dec    ecx
  407a48:	pop    ss
  407a49:	popf   
  407a4a:	jmp    0x4079f1
  407a4c:	xchg   edi,eax
  407a4d:	or     al,0x63
  407a4f:	pop    esp
  407a50:	add    al,BYTE PTR [eax+0x38]
  407a53:	dec    edi
  407a54:	rcr    edx,cl
  407a56:	add    bl,BYTE PTR [ebp-0x5044cf56]
  407a5c:	(bad)  
  407a5d:	xchg   ebx,eax
  407a5e:	pop    esp
  407a5f:	push   ecx
  407a60:	pop    esi
  407a61:	test   al,0x62
  407a63:	inc    ebp
  407a64:	mov    eax,ds:0x7189a8dc
  407a69:	dec    esi
  407a6a:	ss push ebx
  407a6c:	add    ah,BYTE PTR [ebp-0x7d]
  407a6f:	mov    ebp,0x87fdf428
  407a74:	das    
  407a75:	sbb    DWORD PTR [ebp+0x76],eax
  407a78:	jmp    0x6405:0xffbfdb12
  407a7f:	int    0xb6
  407a81:	xchg   ebp,eax
  407a82:	xchg   edi,eax
  407a83:	in     al,0xb3
  407a85:	jg     0x407aaa
  407a87:	ds xchg ecx,eax
  407a89:	ret    
  407a8a:	sbb    edx,DWORD PTR gs:[ecx-0x1e555da]
  407a91:	mov    ds:0x92d0fe40,eax
  407a96:	daa    
  407a97:	xchg   edi,eax
  407a98:	sti    
  407a99:	mov    bl,BYTE PTR [edi+0x3e]
  407a9c:	sub    bh,cl
  407a9e:	xor    eax,0x41a15ccc
  407aa3:	xchg   ebx,eax
  407aa4:	sub    al,BYTE PTR [ecx]
  407aa6:	inc    esi
  407aa7:	add    edi,esp
  407aa9:	add    eax,0xc41cf2be
  407aae:	mov    ds:0xdd20aa2,al
  407ab3:	lock retf 
  407ab5:	sbb    al,0xd7
  407ab7:	stos   BYTE PTR es:[edi],al
  407ab8:	test   eax,0x872aaa03
  407abd:	test   BYTE PTR [bp+di],0x51
  407ac1:	out    dx,al
  407ac2:	push   ds
  407ac3:	or     DWORD PTR [ebp+0x71450cca],ecx
  407ac9:	imul   esp,edx,0x23ad7b03
  407acf:	or     eax,DWORD PTR [ebp-0x2]
  407ad2:	mov    al,0xee
  407ad4:	mov    al,0xc1
  407ad6:	cmp    eax,0xe828b29f
  407adb:	inc    edx
  407adc:	xor    edx,edx
  407ade:	stos   DWORD PTR es:[edi],eax
  407adf:	jo     0x407a7b
  407ae1:	call   0xd596547b
  407ae6:	mov    bl,0x9d
  407ae8:	adc    eax,0x4f708ec8
  407aed:	mov    ah,0xd6
  407aef:	mov    dh,0xb8
  407af1:	outs   dx,DWORD PTR ds:[esi]
  407af2:	call   0x43874ca2
  407af7:	cwde   
  407af8:	add    ch,BYTE PTR [ecx]
  407afa:	jle    0x407aab
  407afc:	dec    edx
  407afd:	mov    ch,0x84
  407aff:	xchg   edi,eax
  407b00:	sub    ebx,DWORD PTR [edi-0x2e]
  407b03:	aas    
  407b04:	xchg   edi,eax
  407b05:	jecxz  0x407a89
  407b07:	loop   0x407b59
  407b09:	lahf   
  407b0a:	cmp    DWORD PTR [esi-0x64],edx
  407b0d:	gs dec ebp
  407b0f:	mov    al,0x75
  407b11:	test   bl,cl
  407b13:	icebp  
  407b14:	cmp    eax,0xe1e074c7
  407b19:	rcr    esp,cl
  407b1b:	push   cs
  407b1c:	mov    ah,BYTE PTR [eax+0x735ae7f9]
  407b22:	(bad)  
  407b23:	loop   0x407b40
  407b25:	nop
  407b26:	retf   
  407b27:	push   edi
  407b28:	mov    ecx,0xa8443043
  407b2d:	xor    esi,edx
  407b2f:	in     al,dx
  407b30:	add    eax,0x1bfb1742
  407b35:	xor    eax,0x7476de7d
  407b3a:	ds mov ecx,0xc8416ef2
  407b40:	jmp    0x7796:0xd0c39c32
  407b47:	outs   dx,BYTE PTR ds:[esi]
  407b48:	(bad)
  407b4b:	or     eax,edi
  407b4d:	inc    esi
  407b4e:	add    dh,BYTE PTR [edi]
  407b50:	and    DWORD PTR [esi+0x22],esi
  407b53:	call   0xe72c:0xe82f35cd
  407b5a:	xchg   esi,eax
  407b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b5c:	(bad)  
  407b5d:	loopne 0x407bac
  407b5f:	leave  
  407b60:	(bad)  [edx+0x10]
  407b63:	push   cs
  407b64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b65:	ret    0xb427
  407b68:	fcom   st(2)
  407b6a:	mov    ss,WORD PTR [ecx+0x6f]
  407b6d:	inc    esp
  407b6e:	fs pop ds
  407b70:	imul   edi,DWORD PTR [ebp+0x718ea15a],0xdf7163b5
  407b7a:	mov    ch,0xf2
  407b7c:	(bad)  
  407b7e:	jae    0x407b01
  407b80:	inc    esi
  407b81:	sub    al,0xc2
  407b83:	cmp    DWORD PTR [edx+0x6f],eax
  407b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b87:	fmul   QWORD PTR [esi+0x42]
  407b8a:	inc    edi
  407b8b:	imul   esp,edi,0x49
  407b8e:	outs   dx,DWORD PTR ds:[esi]
  407b8f:	xchg   DWORD PTR fs:0x559a5f0a,ecx
  407b96:	jbe    0x407ba2
  407b98:	scas   eax,DWORD PTR es:[edi]
  407b99:	inc    esi
  407b9a:	mov    DWORD PTR ds:0xc5c4bf2,esp
  407ba0:	into   
  407ba1:	fidiv  DWORD PTR [ebx+0x2c]
  407ba4:	push   edx
  407ba5:	(bad)  
  407ba6:	int3   
  407ba7:	test   DWORD PTR [ebp+eiz*2+0x4e],0x3fade5a3
  407baf:	outs   dx,DWORD PTR ds:[esi]
  407bb0:	jg     0x407bf7
  407bb2:	push   ds
  407bb3:	shl    DWORD PTR [edi],cl
  407bb5:	sbb    al,0xb6
  407bb7:	and    ch,dl
  407bb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bba:	out    0x43,al
  407bbc:	fnstcw WORD PTR [eax+eiz*2+0x4b]
  407bc0:	add    ah,BYTE PTR [ecx]
  407bc2:	mov    edx,DWORD PTR [ebx-0x25]
  407bc5:	icebp  
  407bc6:	loopne 0x407bd7
  407bc8:	mov    ah,0x9d
  407bca:	pop    ebx
  407bcb:	ret    
  407bcc:	mov    esi,0x3c969a04
  407bd1:	out    dx,eax
  407bd2:	shl    DWORD PTR [ebp+0x437866fd],cl
  407bd8:	leave  
  407bd9:	pop    edi
  407bda:	or     dh,BYTE PTR [esp+edi*8]
  407bdd:	cdq    
  407bde:	jne    0x407b67
  407be0:	jmp    0xdc4a:0x493ba262
  407be7:	gs adc eax,0xb5b707f4
  407bed:	jmp    0x3b9d8e23
  407bf2:	xchg   ebp,eax
  407bf3:	pusha  
  407bf4:	sub    eax,0xc0608d8d
  407bf9:	shl    al,1
  407bfb:	aam    0x1
  407bfd:	push   0xd0a8a851
  407c02:	mov    ch,0xd9
  407c04:	lods   al,BYTE PTR ds:[esi]
  407c05:	xchg   esi,eax
  407c06:	xchg   esi,eax
  407c07:	aam    0x1a
  407c09:	sub    al,0xfd
  407c0b:	les    edx,FWORD PTR [ebx]
  407c0d:	int3   
  407c0e:	pusha  
  407c0f:	retf   0x29
  407c12:	clc    
  407c13:	pop    ds
  407c14:	out    0x40,eax
  407c16:	test   DWORD PTR [eax+0x76334cae],esi
  407c1c:	mov    bh,0x73
  407c1e:	push   es
  407c1f:	or     al,0x53
  407c21:	(bad)  
  407c23:	and    BYTE PTR [ebx+ebx*1],ah
  407c26:	mov    al,0x94
  407c28:	inc    esi
  407c29:	jmp    0x407bdb
  407c2b:	fisubr DWORD PTR [edi-0x1c]
  407c2e:	add    cl,dl
  407c30:	lea    ecx,[edi+esi*1]
  407c33:	pop    ebp
  407c34:	inc    esi
  407c35:	mov    ds:0x14e924d2,eax
  407c3a:	xchg   BYTE PTR [edi+0x52a5943c],cl
  407c40:	stos   DWORD PTR es:[edi],eax
  407c41:	js     0x407c22
  407c43:	dec    esi
  407c44:	add    DWORD PTR [ecx],0x12
  407c47:	pop    es
  407c48:	xchg   ebp,eax
  407c49:	out    dx,al
  407c4a:	push   ecx
  407c4b:	mov    dh,0xea
  407c4d:	pusha  
  407c4e:	loopne 0x407be7
  407c50:	test   eax,0x3f8230b
  407c55:	ds add ch,dh
  407c58:	jns    0x407c11
  407c5a:	xchg   ebx,eax
  407c5b:	add    DWORD PTR [eax+0x3771a6c7],ecx
  407c61:	dec    ebx
  407c62:	and    al,0x20
  407c64:	push   es
  407c65:	adc    dh,cl
  407c67:	popa   
  407c68:	fdivr  DWORD PTR [ebx+0xf]
  407c6b:	and    eax,0x43a2fc97
  407c70:	cmp    BYTE PTR [edx-0x60],dl
  407c73:	sbb    BYTE PTR [esi+0x4eee16c4],dl
  407c79:	sbb    al,0x43
  407c7b:	sar    DWORD PTR [ecx],0xc0
  407c7e:	pop    ds
  407c7f:	out    0x72,al
  407c81:	pop    esp
  407c82:	ins    BYTE PTR es:[edi],dx
  407c83:	push   esp
  407c84:	ja     0x407c5b
  407c86:	mov    al,0x44
  407c88:	mov    ecx,0xc8d5c32d
  407c8d:	das    
  407c8e:	cmp    al,0x1d
  407c90:	jp     0x407c22
  407c92:	neg    BYTE PTR [esi-0x6ba7dcf4]
  407c98:	fst    DWORD PTR [edi]
  407c9a:	sti    
  407c9b:	cmp    edx,DWORD PTR [edx-0x55e0d058]
  407ca1:	psadbw mm7,QWORD PTR [esi]
  407ca4:	imul   ebp,esi,0x5
  407ca7:	je     0x407d26
  407ca9:	call   0xada7:0x9d4b98c0
  407cb0:	adc    bh,0x1d
  407cb3:	ja     0x407cad
  407cb5:	xor    al,0xf7
  407cb7:	repnz pushf 
  407cb9:	mov    ah,0xa6
  407cbb:	cli    
  407cbc:	adc    dh,BYTE PTR [ecx-0x4b]
  407cbf:	ja     0x407d3d
  407cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407cc2:	dec    edx
  407cc3:	sub    eax,0xf13f6777
  407cc8:	adc    esi,DWORD PTR [eax+0x27]
  407ccb:	std    
  407ccc:	jg     0x407c71
  407cce:	or     DWORD PTR [ecx],edi
  407cd0:	push   esi
  407cd1:	inc    ecx
  407cd2:	push   esi
  407cd3:	jecxz  0x407d11
  407cd5:	sub    DWORD PTR [ebx],eax
  407cd7:	xchg   BYTE PTR [esi],dh
  407cd9:	mov    eax,ds:0xf21b2088
  407cde:	dec    ebp
  407cdf:	nop
  407ce0:	rol    BYTE PTR [edx+0x5ff5b936],0x7a
  407ce7:	popf   
  407ce8:	fistp  WORD PTR [esi-0x5b9a9213]
  407cee:	dec    eax
  407cef:	push   0x6efd776b
  407cf4:	cwde   
  407cf5:	xchg   edx,eax
  407cf6:	fisub  DWORD PTR [ebx+0x21]
  407cf9:	in     eax,dx
  407cfa:	adc    BYTE PTR [ecx-0x6],bl
  407cfd:	add    eax,0x8e163e7b
  407d02:	xor    eax,0x7063188c
  407d07:	mov    ebx,0xe62487a
  407d0c:	adc    eax,0xa5afee56
  407d11:	fs jmp 0x407d23
  407d14:	or     edi,ebp
  407d16:	jge    0x407d78
  407d18:	aam    0x16
  407d1a:	mov    ebp,DWORD PTR [edx]
  407d1c:	rcr    dh,1
  407d1e:	jg     0x407d3d
  407d20:	test   DWORD PTR [ebp-0x67],eax
  407d23:	(bad)  
  407d24:	pop    edi
  407d25:	call   0xc0219ff9
  407d2a:	push   cs
  407d2b:	bound  edx,QWORD PTR [ebx]
  407d2d:	mov    al,ds:0x8c5bd0bc
  407d32:	pushf  
  407d33:	test   BYTE PTR [ecx],ah
  407d35:	ret    0xea5f
  407d38:	jge    0x407d5f
  407d3a:	call   0x54ac26a2
  407d3f:	lds    edi,FWORD PTR gs:[esi-0x6b3336dc]
  407d46:	imul   ecx,DWORD PTR [ebx],0x5ff350e1
  407d4c:	out    0xa6,eax
  407d4e:	retf   0x71a0
  407d51:	popa   
  407d52:	ss data16 jecxz 0x407d89
  407d56:	(bad)  
  407d57:	(bad)  
  407d58:	(bad)  [eax-0x31]
  407d5b:	mov    edi,0xe3132ca9
  407d60:	hlt    
  407d61:	pop    edx
  407d62:	xor    al,BYTE PTR [ecx]
  407d64:	in     eax,dx
  407d65:	mov    bl,0x3a
  407d67:	jmp    0xc384d60e
  407d6c:	add    al,0x33
  407d6e:	jo     0x407d77
  407d70:	push   ebp
  407d71:	jne    0x407d0d
  407d73:	in     eax,dx
  407d74:	pusha  
  407d75:	inc    esi
  407d76:	sahf   
  407d77:	rol    BYTE PTR [edx+0xe0404e3],cl
  407d7d:	push   0x2b4bec42
  407d82:	add    eax,0x8bad42d9
  407d87:	pop    eax
  407d88:	push   ds
  407d89:	daa    
  407d8a:	or     ah,BYTE PTR [edi+0x15]
  407d8d:	jle    0x407d3f
  407d8f:	xchg   ebp,eax
  407d90:	adc    eax,0xd250b6fc
  407d95:	jp     0x407d1b
  407d97:	and    BYTE PTR [eax-0x5d],al
  407d9a:	cmp    esp,ecx
  407d9c:	lods   eax,DWORD PTR ds:[esi]
  407d9d:	dec    ecx
  407d9e:	(bad)  
  407d9f:	call   0x5e0f:0x7ff74d71
  407da6:	rol    al,1
  407da8:	sbb    DWORD PTR [eax-0x39e3617f],eax
  407dae:	sbb    edi,DWORD PTR [eax+0x5032c0ad]
  407db4:	lock jo 0x407d66
  407db7:	jmp    0xf3cf:0x1953c265
  407dbe:	jecxz  0x407dda
  407dc0:	pop    es
  407dc1:	jl     0x407e34
  407dc3:	fwait
  407dc4:	push   cs
  407dc5:	cwde   
  407dc6:	enter  0x2e11,0x3d
  407dca:	xor    BYTE PTR [ebx+0x61],dl
  407dcd:	test   BYTE PTR [eax+ebp*2-0x8],dh
  407dd1:	sar    BYTE PTR [ecx-0x61],0xa7
  407dd5:	out    dx,al
  407dd6:	mov    DWORD PTR [eax],edi
  407dd8:	mov    ds:0x890931e1,al
  407ddd:	cmp    al,0x9b
  407ddf:	jo     0x407d6d
  407de1:	and    dl,al
  407de3:	pop    ss
  407de4:	mov    eax,ds:0x319ff290
  407de9:	dec    esi
  407dea:	or     DWORD PTR [edx+0x40],eax
  407ded:	dec    esp
  407dee:	mov    ds:0x6ab017f2,al
  407df3:	xor    al,0x56
  407df5:	test   cl,0xc
  407df8:	sbb    bh,BYTE PTR [esi+0x70de451e]
  407dfe:	fwait
  407dff:	jle    0x407de5
  407e01:	cwde   
  407e02:	retf   
  407e03:	aaa    
  407e04:	jmp    DWORD PTR [eax-0x58]
  407e07:	push   cs
  407e08:	xchg   ebx,eax
  407e09:	mov    cl,0xb6
  407e0b:	ror    DWORD PTR [ebp+0x32],cl
  407e0e:	scas   eax,DWORD PTR es:[edi]
  407e0f:	in     eax,dx
  407e10:	cdq    
  407e11:	jb     0x407df9
  407e13:	pop    edi
  407e14:	loopne 0x407e4b
  407e16:	repnz aas 
  407e18:	test   DWORD PTR [ebx],ecx
  407e1a:	scas   al,BYTE PTR es:[edi]
  407e1b:	dec    ebx
  407e1c:	mov    eax,ds:0x34d8bcfe
  407e21:	push   0x5e5a9326
  407e26:	jae    0x407e1b
  407e28:	dec    edx
  407e29:	ds cmp al,0xc4
  407e2c:	ret    0x1623
  407e2f:	mov    edi,0x864e7597
  407e34:	push   0xd8d45bb0
  407e39:	pop    eax
  407e3a:	fisttp QWORD PTR [eax+eiz*8+0x1d3c75fa]
  407e41:	fs pop esi
  407e43:	fcom   DWORD PTR [esi+edx*8]
  407e46:	icebp  
  407e47:	cmp    al,0x79
  407e49:	fsubr  st(7),st
  407e4b:	js     0x407e63
  407e4d:	fmul   DWORD PTR ds:0xca6ba2d3
  407e53:	xchg   esi,eax
  407e54:	mov    ecx,0xea3de7f6
  407e59:	add    bh,BYTE PTR [eax]
  407e5b:	push   ds
  407e5c:	jecxz  0x407e7d
  407e5e:	mov    edx,0x73a70203
  407e63:	adc    ebp,DWORD PTR [ecx]
  407e65:	mov    esi,0x227c8f13
  407e6a:	imul   eax,DWORD PTR [edx],0xe70d45a8
  407e70:	or     eax,DWORD PTR [edx+edx*2+0x180c361a]
  407e77:	or     dl,BYTE PTR [edx+0x7d]
  407e7a:	xor    ch,BYTE PTR [ebx-0x5c]
  407e7d:	xor    bh,BYTE PTR [ebx]
  407e7f:	mov    ch,0x79
  407e81:	pop    eax
  407e82:	mov    al,ds:0x6574703d
  407e87:	int3   
  407e88:	sbb    al,0x8d
  407e8a:	mov    edi,0xd6e3ae4
  407e8f:	mov    eax,0xd556b68f
  407e94:	(bad)  
  407e95:	sbb    ebp,DWORD PTR [edi-0x46]
  407e98:	fchs   
  407e9a:	push   esp
  407e9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e9c:	(bad)  [eax-0x22c2cb96]
  407ea2:	mov    esp,0xdc90205d
  407ea7:	das    
  407ea8:	pop    eax
  407ea9:	repz sub BYTE PTR [esi],bl
  407eac:	(bad)  
  407ead:	jae    0x407e54
  407eaf:	or     DWORD PTR [ebp-0x45acd494],0xffffffdb
  407eb6:	(bad)  [esi+0x5f0aa220]
  407ebc:	xor    edx,DWORD PTR [edx]
  407ebe:	icebp  
  407ebf:	clc    
  407ec0:	std    
  407ec1:	ins    DWORD PTR es:[edi],dx
  407ec2:	mov    eax,0xe1a71e63
  407ec7:	gs pop es
  407ec9:	adc    DWORD PTR fs:[ebp+edx*1-0x6b],0x31
  407ecf:	mov    esp,0x99051fb4
  407ed4:	and    edx,ebp
  407ed6:	loop   0x407f10
  407ed8:	rol    BYTE PTR [eax],1
  407eda:	adc    BYTE PTR [edx],0x32
  407edd:	adc    BYTE PTR [ebx+0x232dd44f],ch
  407ee3:	mov    dh,0xda
  407ee5:	icebp  
  407ee6:	rcl    esp,0x80
  407ee9:	jmp    0x407ead
  407eeb:	lock or eax,0x259d4a46
  407ef1:	xor    BYTE PTR [esi+esi*1+0x4d],dl
  407ef5:	rcr    DWORD PTR [ecx],0x8
  407ef8:	ret    0xfc4d
  407efb:	imul   esi,DWORD PTR ss:[ecx+eiz*1-0x75847a68],0x6a
  407f04:	repz xor BYTE PTR [esi-0x6c],al
  407f08:	pop    eax
  407f09:	lods   eax,DWORD PTR ds:[esi]
  407f0a:	inc    DWORD PTR [ebp-0x3b]
  407f0d:	jecxz  0x407f46
  407f0f:	mov    WORD PTR [eax-0x11],cs
  407f12:	enter  0x6ec9,0x9d
  407f16:	jp     0x407f74
  407f18:	rcl    BYTE PTR [eax-0x1ad741f4],cl
  407f1e:	mov    ebp,DWORD PTR [edi+0x2f9d7cfd]
  407f24:	fs or  bl,0x17
  407f28:	hlt    
  407f29:	fcmovnu st,st(7)
  407f2b:	pop    ds
  407f2c:	std    
  407f2d:	pop    ebx
  407f2e:	xor    ah,BYTE PTR [edx+0x71f9adbf]
  407f34:	inc    edi
  407f35:	lods   al,BYTE PTR ds:[esi]
  407f36:	fbstp  TBYTE PTR [ecx-0x42]
  407f39:	popf   
  407f3a:	daa    
  407f3b:	push   ss
  407f3c:	rcr    DWORD PTR [edi-0x5a],0xc4
  407f40:	es pop ecx
  407f42:	jg     0x407ec4
  407f44:	adc    dl,cl
  407f46:	push   0x9d85e756
  407f4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f4c:	or     DWORD PTR [esi],ebx
  407f4e:	jle    0x407f4d
  407f50:	cmp    DWORD PTR [ecx-0x2],0xffffffa6
  407f54:	mov    cl,BYTE PTR [edx+0x28d103ef]
  407f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f5b:	inc    esi
  407f5c:	retf   0x24a6
  407f5f:	xchg   cl,al
  407f61:	push   esi
  407f62:	jmp    0x407f16
  407f64:	sti    
  407f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f66:	gs aam 0xb9
  407f69:	out    0x80,eax
  407f6b:	jge    0x407f56
  407f6d:	mov    ecx,0xfeacb3bd
  407f72:	xor    ebp,ebp
  407f74:	jmp    0x407f82
  407f76:	ds mov edi,0x2882033b
  407f7c:	xchg   ebx,eax
  407f7d:	mov    cl,0x10
  407f7f:	xchg   ebx,eax
  407f80:	mov    WORD PTR [esi-0xe628dfb],fs
  407f86:	inc    ebp
  407f87:	pop    edi
  407f88:	or     BYTE PTR [edi],dl
  407f8a:	and    DWORD PTR [esp+ebp*4],ebp
  407f8d:	mov    al,0xce
  407f8f:	adc    BYTE PTR [ebp-0x3d0e7ead],al
  407f95:	les    edi,FWORD PTR [ecx]
  407f97:	jecxz  0x407f70
  407f99:	int    0x3e
  407f9b:	adc    al,0x6e
  407f9d:	je     0x407fd1
  407f9f:	outs   dx,DWORD PTR ds:[esi]
  407fa0:	and    BYTE PTR [ebx],ch
  407fa2:	ins    BYTE PTR es:[edi],dx
  407fa3:	das    
  407fa4:	sbb    eax,0xdadc5b43
  407fa9:	push   edx
  407faa:	pop    ss
  407fab:	dec    edx
  407fac:	and    ah,dh
  407fae:	(bad)  
  407faf:	cs das 
  407fb1:	and    DWORD PTR [eax-0x4f],esp
  407fb4:	fbstp  TBYTE PTR [eax+eiz*8]
  407fb7:	cmp    BYTE PTR [ebp+0x62],0xb
  407fbb:	cmc    
  407fbc:	cmp    eax,0x99bfa943
  407fc1:	pop    ebp
  407fc2:	pop    ss
  407fc3:	xor    edx,DWORD PTR [ebp-0x62]
  407fc6:	inc    esp
  407fc7:	aad    0xca
  407fc9:	test   DWORD PTR ds:0x5c5a5e58,ebp
  407fcf:	fcom   DWORD PTR ds:0xc2f4c96c
  407fd5:	call   0xf2966786
  407fda:	shl    BYTE PTR ds:0x4233585d,cl
  407fe0:	and    al,0x42
  407fe2:	push   es
  407fe3:	push   ecx
  407fe4:	mov    dh,0x3
  407fe6:	enter  0x7128,0xc9
  407fea:	je     0x408062
  407fec:	into   
  407fed:	retf   
  407fee:	into   
  407fef:	popa   
  407ff0:	jo     0x407fa5
  407ff2:	or     eax,0x8120bfa6
  407ff7:	inc    ecx
  407ff8:	xor    dh,BYTE PTR [edi-0x6f]
  407ffb:	int    0x6f
  407ffd:	loopne 0x407fa4
  407fff:	(bad)  
  408000:	sub    DWORD PTR [ebp-0x1fae523],ebp
  408006:	iret   
  408007:	inc    edi
  408008:	mov    edi,0xe773b794
  40800d:	push   eax
  40800e:	mov    fs,WORD PTR [ebp+0x542b812b]
  408014:	push   0xd4804d38
  408019:	xor    DWORD PTR [edx-0x7],ebx
  40801c:	cli    
  40801d:	out    0xb3,al
  40801f:	fcomp  QWORD PTR [edx+0x1f9158b0]
  408025:	mov    edx,0xaa990b47
  40802a:	dec    edx
  40802b:	mov    dh,0x4f
  40802d:	addr16 xchg esi,eax
  40802f:	and    eax,0xa8eefd5d
  408034:	jo     0x408094
  408036:	xchg   edi,eax
  408037:	dec    edx
  408038:	xor    esi,DWORD PTR ds:0x74bc487a
  40803e:	fs pusha 
  408040:	inc    ecx
  408041:	sti    
  408042:	push   es
  408043:	inc    esi
  408044:	cmp    DWORD PTR [ecx+0x3e],edx
  408047:	xlat   BYTE PTR ds:[ebx]
  408048:	pop    ss
  408049:	xor    DWORD PTR [esi+0xe7edf60],0xb03dcd01
  408053:	clc    
  408054:	pusha  
  408055:	pop    es
  408056:	and    DWORD PTR [eax-0x4a],edi
  408059:	data16 gs das 
  40805c:	or     dl,BYTE PTR [esi]
  40805e:	pushf  
  40805f:	sbb    al,0x91
  408061:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408062:	sbb    eax,0xfec2e2b0
  408067:	iret   
  408068:	cmp    BYTE PTR [ebp+0x42d55acb],0x5c
  40806f:	fldcw  WORD PTR [edi-0x3e]
  408072:	and    eax,0xf3f880d0
  408077:	clc    
  408078:	scas   eax,DWORD PTR es:[edi]
  408079:	pop    edx
  40807a:	stos   DWORD PTR es:[edi],eax
  40807b:	mov    ds:0x13433d7e,eax
  408080:	imul   ebp,DWORD PTR [ebx+0x509edd75],0xa37f1567
  40808a:	lock push eax
  40808c:	mov    ds:0x10c72711,eax
  408091:	mov    esp,0xfb90ec85
  408096:	movd   DWORD PTR [ecx],mm7
  408099:	sar    cl,cl
  40809b:	push   ecx
  40809c:	and    DWORD PTR [ecx+0x5c511bbf],ebp
  4080a2:	test   bh,ch
  4080a4:	jbe    0x408094
  4080a6:	sti    
  4080a7:	(bad)
  4080ab:	mov    esp,esp
  4080ad:	stos   BYTE PTR es:[edi],al
  4080ae:	xchg   esp,eax
  4080af:	pop    eax
  4080b0:	cmp    ecx,edi
  4080b2:	mov    cl,0x61
  4080b4:	addr16 jo 0x408127
  4080b7:	jle    0x408073
  4080b9:	wbinvd 
  4080bb:	daa    
  4080bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080bd:	pop    eax
  4080be:	mov    ch,0xa
  4080c0:	sub    edi,DWORD PTR [eax+0x30]
  4080c3:	mov    BYTE PTR [eax],cl
  4080c5:	ja     0x408049
  4080c7:	sub    eax,0x6a42663
  4080cc:	xor    eax,0xd0748d33
  4080d1:	rcr    DWORD PTR [edx+0x41722bb6],cl
  4080d7:	mov    edx,0x4a6f7db2
  4080dc:	in     al,dx
  4080dd:	rol    BYTE PTR [eax],0x49
  4080e0:	sbb    al,0x6c
  4080e2:	and    al,0x89
  4080e4:	cwde   
  4080e5:	int3   
  4080e6:	xchg   esi,eax
  4080e7:	gs pop edx
  4080e9:	loop   0x4080d4
  4080eb:	sub    BYTE PTR [edi],dl
  4080ed:	mov    esp,0x591aa8cd
  4080f2:	aam    0x8f
  4080f4:	mov    dh,0x2
  4080f7:	aad    0x54
  4080f9:	jg     0x40814d
  4080fb:	mov    ch,0xbd
  4080fd:	jns    0x4080b8
  4080ff:	call   0x2240b81a
  408104:	test   eax,0x783cd292
  408109:	mov    WORD PTR [ebp-0x31],?
  40810c:	(bad)  
  40810d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40810e:	push   0xffffffbe
  408110:	xor    eax,0x93dcbbc5
  408115:	dec    cl
  408117:	in     al,dx
  408118:	xchg   edi,eax
  408119:	fcom   QWORD PTR [ebx-0x6ebde384]
  40811f:	inc    esi
  408120:	cmp    BYTE PTR [esi],cl
  408122:	stos   BYTE PTR es:[edi],al
  408123:	fwait
  408124:	sub    ecx,ebx
  408126:	setns  BYTE PTR [esi]
  408129:	out    dx,al
  40812a:	and    edi,DWORD PTR [edi+0x47]
  40812d:	sbb    esi,DWORD PTR [edi+eax*1]
  408130:	xchg   esp,eax
  408131:	push   es
  408132:	mov    bh,0x72
  408134:	xchg   esi,eax
  408135:	(bad)  
  408136:	cld    
  408137:	shl    BYTE PTR [ebp-0x51c0a079],cl
  40813d:	sub    dl,BYTE PTR [esi+0x49]
  408140:	(bad)  
  408141:	shr    DWORD PTR [edi+0x11],cl
  408144:	(bad)  
  408145:	arpl   WORD PTR [esp+edi*2-0x51],bp
  408149:	add    ecx,DWORD PTR [ecx-0x36]
  40814c:	xlat   BYTE PTR ds:[ebx]
  40814d:	xchg   esi,eax
  40814e:	mov    esp,0x953e1d36
  408153:	sub    al,0x80
  408155:	leave  
  408156:	or     bl,BYTE PTR [eax+0x5cd4f6e3]
  40815c:	jmp    0x40814d
  40815e:	ds mov ch,0x6b
  408161:	sub    al,0x4f
  408163:	dec    edi
  408164:	add    BYTE PTR ds:0x97981c57,dh
  40816a:	gs pop edi
  40816c:	and    al,0x2a
  40816e:	mov    edx,0x3f76ae79
  408173:	ins    BYTE PTR es:[edi],dx
  408174:	in     al,0x3d
  408176:	add    esp,DWORD PTR [ebp+0x4b1fb3d6]
  40817c:	add    al,ch
  40817e:	sbb    eax,0xe8a63e20
  408183:	add    DWORD PTR ds:0x987377bc,esi
  408189:	out    dx,eax
  40818a:	xchg   ebp,eax
  40818b:	(bad)  
  40818f:	mov    edi,0x64665c7c
  408194:	mov    al,0x94
  408196:	bound  edx,QWORD PTR [edi-0x65]
  408199:	(bad)  
  40819a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40819b:	and    BYTE PTR [edi],bh
  40819d:	ss mov eax,0xabdd7f63
  4081a3:	mov    WORD PTR [eax+0xe357c73],cs
  4081a9:	cld    
  4081aa:	mov    al,0x59
  4081ac:	jmp    0x8c02:0xbaa1e9fc
  4081b3:	sbb    BYTE PTR [ebp-0x47],0xcf
  4081b7:	or     esp,0x4c
  4081ba:	outs   dx,BYTE PTR ds:[esi]
  4081bb:	or     DWORD PTR [edx],eax
  4081bd:	sbb    BYTE PTR [eax],dl
  4081bf:	and    BYTE PTR [eax-0x7e],cl
  4081c2:	and    DWORD PTR [esi-0x1c],edi
  4081c5:	sub    edi,esi
  4081c7:	(bad)  
  4081c8:	das    
  4081c9:	mov    ch,0x89
  4081cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081cc:	das    
  4081cd:	fwait
  4081ce:	aas    
  4081cf:	push   cs
  4081d0:	jle    0x4081dd
  4081d2:	es xchg edi,eax
  4081d4:	les    ebp,FWORD PTR [ebp+0x3bf35942]
  4081da:	in     al,dx
  4081db:	fisttp WORD PTR [edi+0x36]
  4081de:	lods   al,BYTE PTR ds:[esi]
  4081df:	test   eax,0x31f6c2a4
  4081e4:	cdq    
  4081e5:	mov    bh,0xcd
  4081e7:	push   edi
  4081e8:	inc    esi
  4081e9:	jno    0x408238
  4081eb:	push   0xf5777a51
  4081f0:	fdivr  st,st(5)
  4081f2:	xchg   esp,eax
  4081f3:	sub    dl,BYTE PTR [ecx-0x6270b775]
  4081f9:	ror    edi,0xdb
  4081fc:	xchg   ecx,esi
  4081fe:	ficom  DWORD PTR [esi+0x5a]
  408201:	cmovo  edi,ebp
  408204:	pop    esi
  408205:	mov    ebp,0x3590023
  40820a:	out    dx,al
  40820b:	dec    ecx
  40820c:	pop    ds
  40820d:	lods   al,BYTE PTR ds:[esi]
  40820e:	fld    TBYTE PTR [ecx-0x5d]
  408211:	outs   dx,BYTE PTR ds:[esi]
  408212:	rcr    ecx,0x40
  408215:	popf   
  408216:	add    dl,BYTE PTR [edi-0x6c]
  408219:	out    dx,al
  40821a:	leave  
  40821b:	test   eax,0x12887bec
  408220:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408222:	mov    ch,0x90
  408224:	mov    ah,0x4d
  408226:	pop    ebx
  408227:	push   DWORD PTR [ecx]
  408229:	loopne 0x4081b0
  40822b:	sti    
  40822c:	mov    bh,0x99
  40822e:	or     ebx,esi
  408230:	inc    edx
  408231:	sbb    ch,bl
  408233:	mov    bh,0xb
  408235:	loop   0x408236
  408237:	push   ebx
  408238:	cmp    al,0xbf
  40823a:	sub    BYTE PTR [ebx+ebx*4-0x2fbb3f9],bl
  408241:	setae  cl
  408244:	mov    ds,WORD PTR [edx]
  408246:	mov    ah,0xca
  408248:	mov    bl,0x5b
  40824a:	test   al,0xee
  40824c:	and    ebp,0xffffff81
  40824f:	pop    ds
  408250:	jno    0x4082b0
  408252:	inc    esp
  408253:	pop    ebp
  408254:	xchg   BYTE PTR [ecx-0x7cd2c84a],al
  40825a:	xchg   BYTE PTR [ebp+0x75c2a6e9],ah
  408260:	inc    edx
  408261:	mov    al,ds:0xf4a4f22
  408266:	pop    eax
  408267:	xchg   edi,eax
  408268:	arpl   WORD PTR [eax+0x5597bbf3],si
  40826e:	enter  0xf6cd,0xf
  408272:	out    0x8f,eax
  408274:	fs and ecx,ebp
  408277:	in     eax,dx
  408278:	jo     0x4082bf
  40827a:	mov    ah,BYTE PTR [eax+ebp*1]
  40827d:	adc    al,0x71
  40827f:	fadd   DWORD PTR ds:0x8edf0ec3
  408285:	fidivr WORD PTR [edi-0x27]
  408288:	(bad)  
  40828a:	mov    bh,BYTE PTR ss:[esi]
  40828d:	fidiv  WORD PTR [eax]
  40828f:	mov    ?,ebp
  408291:	mov    esi,edi
  408293:	and    al,0x21
  408295:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408296:	or     al,0x6b
  408298:	add    eax,0xfce75b59
  40829d:	xor    BYTE PTR [edi],al
  40829f:	and    ebx,DWORD PTR [ebx-0x25a80abf]
  4082a5:	(bad)  
  4082a7:	or     al,0x2e
  4082a9:	int3   
  4082aa:	sbb    ah,bh
  4082ac:	sub    ah,BYTE PTR ds:0x99c12825
  4082b2:	mov    bl,0x93
  4082b4:	jl     0x4082bc
  4082b6:	loopne 0x408305
  4082b8:	xchg   edi,eax
  4082b9:	mov    eax,0x9a2a7b19
  4082be:	test   eax,0xc47b08de
  4082c3:	imul   ebp,DWORD PTR [edx],0xd7ff6faa
  4082c9:	jb     0x408323
  4082cb:	jg     0x408340
  4082cd:	inc    ebp
  4082ce:	dec    esp
  4082cf:	stos   DWORD PTR es:[edi],eax
  4082d0:	pop    ecx
  4082d1:	and    al,0x58
  4082d3:	daa    
  4082d4:	push   0x6ea260a3
  4082d9:	repnz cdq 
  4082db:	add    eax,esi
  4082dd:	jo     0x4082a3
  4082df:	scas   eax,DWORD PTR es:[edi]
  4082e0:	fild   QWORD PTR [ebp+esi*1+0x42]
  4082e4:	jmp    0xc5d763fa
  4082e9:	push   ebp
  4082ea:	inc    edx
  4082eb:	dec    edx
  4082ec:	stos   DWORD PTR es:[edi],eax
  4082ed:	sub    DWORD PTR [esi+ebx*8+0x4244e30b],ebx
  4082f4:	jl     0x40831c
  4082f6:	mov    dl,0x25
  4082f8:	ins    DWORD PTR es:[edi],dx
  4082f9:	lea    ebx,es:[esi]
  4082fc:	test   BYTE PTR [edi+edx*8+0x9a4908e],bh
  408303:	call   0xd979:0x6b2a00c3
  40830a:	and    ebx,DWORD PTR [eax]
  40830c:	pop    edx
  40830d:	outs   dx,DWORD PTR ds:[esi]
  40830e:	inc    ecx
  40830f:	jae    0x40834b
  408311:	push   ebx
  408312:	add    ebx,DWORD PTR [esi-0x7c]
  408315:	jo     0x408318
  408317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408318:	mov    ds:0x7760c9f8,eax
  40831d:	jae    0x40838d
  40831f:	sbb    eax,0xc02e749a
  408324:	cmp    al,0xb1
  408326:	jmp    0x7f10a017
  40832b:	ins    BYTE PTR es:[edi],dx
  40832c:	call   0xc44be874
  408331:	or     BYTE PTR [edx+0x50],ah
  408334:	jecxz  0x4083a5
  408336:	outs   dx,BYTE PTR ss:[esi]
  408338:	out    0x15,al
  40833a:	sub    esi,DWORD PTR [eax+0x2]
  40833d:	adc    al,BYTE PTR [edi]
  40833f:	xchg   ecx,edx
  408341:	and    DWORD PTR [eax],esp
  408343:	push   ds
  408344:	sti    
  408345:	popa   
  408346:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  408348:	xchg   esi,eax
  408349:	xor    al,0xb4
  40834b:	cmp    DWORD PTR [eax+0x3c493afb],0xffffffb7
  408352:	and    ah,BYTE PTR [edx]
  408354:	fldenv [ebx+0x24]
  408357:	in     eax,0x63
  408359:	xor    eax,0x8970e5c2
  40835e:	mov    al,0x98
  408360:	sbb    ch,BYTE PTR [esi+0x378a813f]
  408366:	iret   
  408367:	aad    0x52
  408369:	inc    ecx
  40836a:	mov    ds:0x162d232d,eax
  40836f:	mov    ch,0xc0
  408371:	pop    DWORD PTR [edx+0x55]
  408374:	push   cs
  408375:	xchg   esp,eax
  408376:	cwde   
  408377:	loop   0x408368
  408379:	cli    
  40837a:	mov    ebx,0x7c732ea5
  40837f:	xchg   BYTE PTR [eax],dh
  408381:	mov    bh,BYTE PTR [ecx-0x67]
  408384:	fmul   QWORD PTR [edi+0x2]
  408387:	test   al,0x9d
  408389:	xchg   DWORD PTR [ecx-0x37],ecx
  40838c:	adc    ebp,DWORD PTR [eax+eax*2]
  40838f:	xchg   ebp,eax
  408390:	iret   
  408391:	call   0xc90a:0x9bfdd6f8
  408398:	or     cl,BYTE PTR [edx]
  40839a:	inc    esi
  40839b:	psubusb mm7,QWORD PTR [eax]
  40839e:	mov    dh,0x45
  4083a0:	loopne 0x4083ae
  4083a2:	mov    ecx,0xec5dfa66
  4083a7:	jmp    0x922b:0xcc11de63
  4083ae:	out    0xe4,al
  4083b0:	retf   0xf296
  4083b3:	xor    ebp,DWORD PTR [ebx+0x49]
  4083b6:	jmp    0x238:0x50277cb5
  4083bd:	in     eax,0xc1
  4083bf:	mov    eax,ds:0xd268d212
  4083c4:	adc    edx,DWORD PTR [esi]
  4083c6:	fwait
  4083c7:	xchg   edi,eax
  4083c8:	push   ds
  4083c9:	iret   
  4083ca:	pop    ebx
  4083cb:	pop    edi
  4083cc:	xor    ebx,DWORD PTR [ebx+0x1d0ce918]
  4083d2:	jge    0x4083a0
  4083d4:	cmp    eax,0x11aee806
  4083d9:	cmp    esi,DWORD PTR [edi+edi*8-0x660abdce]
  4083e0:	push   0x33
  4083e2:	jg     0x408411
  4083e4:	sbb    ch,BYTE PTR [eax+edi*8+0x22814c5f]
  4083eb:	sbb    BYTE PTR [ebx],dh
  4083ed:	xchg   DWORD PTR [ecx-0x58b42e76],edx
  4083f3:	leave  
  4083f4:	(bad)  
  4083f5:	mov    DWORD PTR [esi+0x231de897],ebp
  4083fb:	(bad)  [eax+0x6f932e6a]
  408401:	imul   edi,DWORD PTR [ebp-0x76524e1a],0xffffffd9
  408408:	(bad)  
  408409:	stos   DWORD PTR es:[edi],eax
  40840a:	xor    eax,0xc872fffe
  40840f:	dec    esp
  408410:	sub    dh,BYTE PTR [esi]
  408412:	int    0x59
  408414:	leave  
  408415:	xchg   edx,eax
  408416:	mov    ds:0xa3234c47,eax
  40841b:	lods   eax,DWORD PTR ds:[esi]
  40841c:	dec    ecx
  40841d:	cs hlt 
  40841f:	int    0x90
  408421:	jnp    0x4083fd
  408423:	sti    
  408424:	jl     0x408459
  408426:	dec    esi
  408427:	sub    eax,0xd9536c3a
  40842c:	add    BYTE PTR [eax],0xf5
  40842f:	xchg   DWORD PTR [edi-0x19],eax
  408432:	sub    eax,ecx
  408434:	idiv   DWORD PTR [eax+0x28]
  408437:	ds push ecx
  408439:	out    0xc6,eax
  40843b:	or     bl,dl
  40843d:	(bad)  
  40843e:	clc    
  40843f:	mov    bl,0xd2
  408441:	push   esp
  408442:	imul   ecx,DWORD PTR [esi-0x6d],0x73
  408446:	sbb    BYTE PTR [ecx],dh
  408448:	nop
  408449:	rcl    BYTE PTR [esi+0x7091c14e],1
  40844f:	lds    esi,FWORD PTR [ebp-0x2a]
  408452:	cli    
  408453:	es pop edi
  408455:	sbb    ah,ch
  408457:	mov    ds:0xe2366d05,eax
  40845c:	and    esi,DWORD PTR [edi+ebp*8-0x748fb132]
  408463:	pop    ebp
  408464:	clc    
  408465:	mov    BYTE PTR [edx+ebx*1],al
  408468:	mov    eax,DWORD PTR [ebp-0x40]
  40846b:	mov    edx,DWORD PTR [ebp-0x28]
  40846e:	xor    eax,esi
  408470:	xor    edx,esi
  408472:	add    eax,edi
  408474:	add    edx,edi
  408476:	imul   eax,edx
  408479:	add    eax,DWORD PTR [ebp-0xc]
  40847c:	mov    DWORD PTR [ebp-0xc],eax
  40847f:	mov    eax,DWORD PTR [ebp-0xc]
  408482:	mov    edx,DWORD PTR [ebp-0x18]
  408485:	cmp    edx,eax
  408487:	jb     0x403cec
  40848d:	mov    eax,DWORD PTR [ebp-0x28]
  408490:	mov    edx,DWORD PTR [ebp-0x18]
  408493:	xor    eax,esi
  408495:	add    eax,edi
  408497:	imul   eax,edx
  40849a:	mov    edx,DWORD PTR [ebp-0x1c]
  40849d:	xor    edx,esi
  40849f:	add    edx,edi
  4084a1:	or     eax,edx
  4084a3:	mov    edx,DWORD PTR [ebp-0x20]
  4084a6:	xor    edx,esi
  4084a8:	add    eax,edx
  4084aa:	mov    edx,DWORD PTR [ebp-0x20]
  4084ad:	xor    edx,esi
  4084af:	add    eax,edx
  4084b1:	mov    edx,DWORD PTR [ebp-0x10]
  4084b4:	lea    eax,[eax+edx*1+0x64e5f0]
  4084bb:	jmp    0x4084cf
  4084c0:	mov    eax,DWORD PTR [ebp-0x20]
  4084c3:	mov    edx,DWORD PTR [ebp-0x10]
  4084c6:	xor    eax,esi
  4084c8:	lea    eax,[eax+edx*1+0x3272f8]
  4084cf:	mov    DWORD PTR [ebp-0x10],eax
  4084d2:	jmp    0x403c39
  4084d7:	mov    ebx,DWORD PTR [ebp-0x3c]
  4084da:	mov    eax,DWORD PTR [ebp+0xc]
  4084dd:	xor    eax,esi
  4084df:	lea    ecx,[ecx+eax*1+0x3272f8]
  4084e6:	lea    eax,[ecx-0x3272f8]
  4084ec:	xor    eax,esi
  4084ee:	cmp    eax,0xf89c95b9
  4084f3:	jne    0x403bdd
  4084f9:	dec    DWORD PTR [ebp-0x34]
  4084fc:	jne    0x403bd1
  408502:	mov    eax,DWORD PTR [ebp+0x8]
  408505:	mov    ecx,DWORD PTR [ebp+0xc]
  408508:	mov    edx,DWORD PTR [ebp+0x8]
  40850b:	xor    ecx,esi
  40850d:	mov    cl,BYTE PTR [ecx+ebx*1+0x3272f8]
  408514:	xor    eax,esi
  408516:	mov    al,BYTE PTR [eax+ebx*1+0x3272f8]
  40851d:	xor    edx,esi
  40851f:	mov    BYTE PTR [edx+ebx*1+0x3272f8],cl
  408526:	mov    ecx,DWORD PTR [ebp+0xc]
  408529:	xor    ecx,esi
  40852b:	mov    BYTE PTR [ecx+ebx*1+0x3272f8],al
  408532:	mov    eax,DWORD PTR [ebp+0xc]
  408535:	xor    eax,esi
  408537:	add    eax,edi
  408539:	pop    edi
  40853a:	pop    esi
  40853b:	pop    ebx
  40853c:	leave  
  40853d:	ret    0x8
  408540:	sbb    DWORD PTR ds:0x428ec1,0x6a44
  40854a:	xor    eax,eax
  40854c:	ret    
  40854d:	push   ebp
  40854e:	mov    ebp,esp
  408550:	sub    esp,0x38
  408553:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  40855a:	adc    DWORD PTR ds:0x428ead,0x214
  408564:	push   ebx
  408565:	sbb    DWORD PTR ds:0x428e39,0x495a
  40856f:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  408576:	add    DWORD PTR ds:0x428ea9,0x428e91
  408580:	mov    eax,DWORD PTR [ebp-0x4]
  408583:	sub    DWORD PTR ds:0x428ea5,0x68fd
  40858d:	push   esi
  40858e:	sub    DWORD PTR ds:0x428e6d,ebx
  408594:	mov    esi,0x75108b1
  408599:	xor    eax,esi
  40859b:	adc    DWORD PTR ds:0x428e95,0x428e2d
  4085a5:	push   edi
  4085a6:	mov    edi,0x3272f8
  4085ab:	sub    DWORD PTR ds:0x428ecd,0x5e85
  4085b5:	add    eax,edi
  4085b7:	sub    DWORD PTR ds:0x428eb5,0x428e59
  4085c1:	mov    DWORD PTR [ebp-0x1c],eax
  4085c4:	mov    eax,DWORD PTR [ebp+0x14]
  4085c7:	test   eax,eax
  4085c9:	je     0x408625
  4085cf:	and    DWORD PTR ds:0x428e41,0x0
  4085d9:	mov    eax,ds:0x428e41
  4085de:	inc    eax
  4085df:	mov    ds:0x428e41,eax
  4085e4:	cmp    DWORD PTR ds:0x428e41,0x1c
  4085eb:	jl     0x408613
  4085f1:	jmp    0x408606
  4085f6:	push   0x428073
  4085fb:	push   0x400000
  408600:	call   DWORD PTR ds:0x42ca24
  408606:	cmp    DWORD PTR ds:0x428e41,0x13
  40860d:	jb     0x4085d9
  408613:	mov    eax,DWORD PTR [ebp+0x14]
  408616:	sbb    DWORD PTR ds:0x428e25,0x208f
  408620:	mov    eax,DWORD PTR [eax]
  408622:	mov    DWORD PTR [ebp-0x1c],eax
  408625:	and    DWORD PTR ds:0x428e4d,edx
  40862b:	mov    eax,DWORD PTR [ebp-0x4]
  40862e:	xor    eax,esi
  408630:	add    eax,edi
  408632:	movzx  ebx,BYTE PTR ds:0x428e6d
  408639:	sub    DWORD PTR ds:0x428eb5,ebx
  40863f:	mov    DWORD PTR [ebp-0x8],eax
  408642:	mov    ebx,DWORD PTR ds:0x428e45
  408648:	sub    DWORD PTR ds:0x428ead,ebx
  40864e:	mov    eax,DWORD PTR [ebp-0xc]
  408651:	xor    eax,esi
  408653:	or     DWORD PTR ds:0x428e25,0x7ae1
  40865d:	add    eax,edi
  40865f:	mov    DWORD PTR [ebp-0x24],eax
  408662:	mov    DWORD PTR ds:0x428eb5,0x1d
  40866c:	cmp    DWORD PTR ds:0x428eb5,0x0
  408673:	je     0x4086a6
  408679:	cmp    DWORD PTR ds:0x428eb5,0x22
  408680:	jb     0x4086a6
  408686:	jmp    0x408696
  40868b:	push   0x35a8
  408690:	call   DWORD PTR ds:0x42ca28
  408696:	mov    eax,ds:0x428eb5
  40869b:	dec    eax
  40869c:	mov    ds:0x428eb5,eax
  4086a1:	jmp    0x40866c
  4086a6:	mov    eax,DWORD PTR [ebp-0x4]
  4086a9:	xor    eax,esi
  4086ab:	sub    ebx,DWORD PTR ds:0x428e35
  4086b1:	add    eax,edi
  4086b3:	mov    DWORD PTR [ebp-0x30],eax
  4086b6:	sbb    eax,0x56d4
  4086bb:	mov    ebx,DWORD PTR [ebp-0x4]
  4086be:	sub    DWORD PTR ds:0x428e55,edi
  4086c4:	xor    ebx,esi
  4086c6:	mov    DWORD PTR ds:0x428e8d,0xdd6
  4086d0:	add    ebx,edi
  4086d2:	mov    eax,DWORD PTR [ebp-0x24]
  4086d5:	sub    eax,edi
  4086d7:	xor    DWORD PTR ds:0x428e2d,0x506a
  4086e1:	lea    ecx,[ebx-0x3272f8]
  4086e7:	or     DWORD PTR ds:0x428e31,0x428e75
  4086f1:	xor    eax,esi
  4086f3:	or     DWORD PTR ds:0x428e41,0x428e89
  4086fd:	xor    ecx,esi
  4086ff:	mov    DWORD PTR ds:0x428e71,0xf9c
  408709:	cmp    ecx,eax
  40870b:	je     0x408990
  408711:	mov    eax,DWORD PTR [ebp-0x4]
  408714:	add    DWORD PTR ds:0x428e99,0x428e29
  40871e:	xor    eax,esi
  408720:	sbb    DWORD PTR ds:0x428ead,0x428e4d
  40872a:	add    eax,edi
  40872c:	cmp    ebx,eax
  40872e:	jne    0x408947
  408734:	push   DWORD PTR [ebp+0x8]
  408737:	call   0x423f19
  40873c:	and    DWORD PTR ds:0x428ea1,0x3c45
  408746:	mov    DWORD PTR [ebp-0x14],eax
  408749:	and    DWORD PTR ds:0x428e89,0x0
  408753:	mov    eax,ds:0x428e89
  408758:	inc    eax
  408759:	mov    ds:0x428e89,eax
  40875e:	cmp    DWORD PTR ds:0x428e89,0x23
  408765:	ja     0x408786
  40876b:	jmp    0x408779
  408770:	push   DWORD PTR [ebp-0x24]
  408773:	call   DWORD PTR ds:0x42ca2c
  408779:	cmp    DWORD PTR ds:0x428e89,0x15
  408780:	jb     0x408753
  408786:	mov    eax,DWORD PTR [ebp-0x4]
  408789:	mov    ecx,DWORD PTR [ebp-0x14]
  40878c:	sbb    DWORD PTR ds:0x428e71,0x428e81
  408796:	xor    eax,esi
  408798:	and    DWORD PTR ds:0x428e4d,0x12fb
  4087a2:	add    eax,edi
  4087a4:	cmp    ecx,eax
  4087a6:	mov    DWORD PTR ds:0x428e69,0x743f
  4087b0:	je     0x408a8e
  4087b6:	xor    DWORD PTR ds:0x428e7d,0x5052
  4087c0:	push   DWORD PTR [ebp-0x14]
  4087c3:	push   DWORD PTR [ebp+0x8]
  4087c6:	xor    DWORD PTR ds:0x428ea5,0x6996
  4087d0:	call   0x423fff
  4087d5:	mov    DWORD PTR [ebp-0x14],eax
  4087d8:	mov    eax,DWORD PTR [ebp-0x4]
  4087db:	sub    DWORD PTR ds:0x428e4d,edi
  4087e1:	mov    ecx,DWORD PTR [ebp-0x14]
  4087e4:	sbb    DWORD PTR ds:0x428e35,0x169a
  4087ee:	xor    eax,esi
  4087f0:	sbb    DWORD PTR ds:0x428e31,0x428ebd
  4087fa:	add    eax,edi
  4087fc:	mov    DWORD PTR ds:0x428e99,0xb5
  408806:	cmp    ecx,eax
  408808:	mov    DWORD PTR ds:0x428ebd,0x5868
  408812:	je     0x408a8e
  408818:	mov    DWORD PTR ds:0x428e41,0x51a7
  408822:	mov    eax,DWORD PTR [ebp-0x14]
  408825:	mov    eax,DWORD PTR [eax+0x18]
  408828:	adc    ecx,DWORD PTR ds:0x428e71
  40882e:	mov    DWORD PTR [ebp-0x24],eax
  408831:	and    DWORD PTR ds:0x428e95,0x0
  40883b:	jmp    0x40884d
  408840:	mov    ecx,DWORD PTR ds:0x428e95
  408846:	inc    ecx
  408847:	mov    DWORD PTR ds:0x428e95,ecx
  40884d:	cmp    DWORD PTR ds:0x428e95,0x1a
  408854:	jae    0x408896
  40885a:	cmp    DWORD PTR ds:0x428e95,0xd
  408861:	jge    0x408896
  408867:	jmp    0x408877
  40886c:	push   0x428043
  408871:	call   DWORD PTR ds:0x42ca30
  408877:	cmp    DWORD PTR ds:0x428e95,0xc
  40887e:	jne    0x408891
  408884:	mov    ecx,DWORD PTR ds:0x428e95
  40888a:	inc    ecx
  40888b:	mov    DWORD PTR ds:0x428e95,ecx
  408891:	jmp    0x408840
  408896:	mov    eax,DWORD PTR [ebp-0x14]
  408899:	dec    DWORD PTR ds:0x428ea9
  40889f:	mov    ecx,DWORD PTR [ebp+0x8]
  4088a2:	add    DWORD PTR ds:0x428e71,0x6a43
  4088ac:	add    ecx,DWORD PTR [eax+0x20]
  4088af:	mov    DWORD PTR ds:0x428e95,0x1e
  4088b9:	cmp    DWORD PTR ds:0x428e95,0x0
  4088c0:	je     0x40890b
  4088c6:	cmp    DWORD PTR ds:0x428e95,0xd
  4088cd:	jl     0x40890b
  4088d3:	jmp    0x4088e3
  4088d8:	push   0x635d
  4088dd:	call   DWORD PTR ds:0x42ca38
  4088e3:	cmp    DWORD PTR ds:0x428e95,0xe
  4088ea:	jne    0x4088fb
  4088f0:	mov    eax,ds:0x428e95
  4088f5:	dec    eax
  4088f6:	mov    ds:0x428e95,eax
  4088fb:	mov    eax,ds:0x428e95
  408900:	dec    eax
  408901:	mov    ds:0x428e95,eax
  408906:	jmp    0x4088b9
  40890b:	mov    DWORD PTR [ebp-0x2c],ecx
  40890e:	mov    eax,DWORD PTR [ebp-0x14]
  408911:	mov    ecx,DWORD PTR [ebp+0x8]
  408914:	add    DWORD PTR ds:0x428e75,0x428ed1
  40891e:	add    ecx,DWORD PTR [eax+0x24]
  408921:	or     DWORD PTR ds:0x428e3d,edi
  408927:	mov    DWORD PTR [ebp-0x34],ecx
  40892a:	sbb    ecx,ecx
  40892c:	mov    eax,DWORD PTR [ebp-0x14]
  40892f:	mov    ecx,DWORD PTR [ebp+0x8]
  408932:	add    ecx,DWORD PTR [eax+0x1c]
  408935:	mov    DWORD PTR ds:0x428e9d,0x2455
  40893f:	mov    DWORD PTR [ebp-0x14],ecx
  408942:	jmp    0x408a15
  408947:	add    eax,DWORD PTR ds:0x428e65
  40894d:	mov    eax,DWORD PTR [ebp-0x2c]
  408950:	mov    ecx,DWORD PTR [ebp+0x8]
  408953:	add    ecx,DWORD PTR [eax+ebx*4]
  408956:	mov    DWORD PTR [ebp-0x28],ecx
  408959:	mov    ecx,DWORD PTR ds:0x428ea5
  40895f:	and    DWORD PTR ds:0x428e31,ecx
  408965:	mov    eax,DWORD PTR [ebp-0x4]
  408968:	mov    ecx,DWORD PTR [ebp-0x28]
  40896b:	xor    eax,esi
  40896d:	sub    DWORD PTR ds:0x428ebd,0x6f28
  408977:	add    eax,edi
  408979:	cmp    ecx,eax
  40897b:	mov    DWORD PTR ds:0x428ea9,0x5189
  408985:	je     0x408a15
  40898b:	jmp    0x4089f2
  408990:	mov    eax,DWORD PTR [ebp-0x4]
  408993:	and    ecx,DWORD PTR ds:0x428e65
  408999:	mov    ecx,DWORD PTR [ebp-0x8]
  40899c:	xor    eax,esi
  40899e:	dec    DWORD PTR ds:0x428e8d
  4089a4:	add    eax,edi
  4089a6:	mov    DWORD PTR ds:0x428e99,0x7af8
  4089b0:	cmp    ecx,eax
  4089b2:	mov    eax,DWORD PTR [ebp-0x4]
  4089b5:	mov    DWORD PTR ds:0x428e4d,0x614e
  4089bf:	je     0x408a91
  4089c5:	and    DWORD PTR ds:0x428e79,0x1e6e
  4089cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4089d2:	xor    eax,esi
  4089d4:	add    eax,edi
  4089d6:	mov    DWORD PTR ds:0x428ecd,0x6155
  4089e0:	cmp    ecx,eax
  4089e2:	mov    DWORD PTR ds:0x428e41,0x6810
  4089ec:	je     0x408a9a
  4089f2:	lea    eax,[ebp-0x8]
  4089f5:	xor    DWORD PTR ds:0x428ec1,0x428e25
  4089ff:	push   eax
  408a00:	push   DWORD PTR [ebp-0x28]
  408a03:	sbb    DWORD PTR ds:0x428e71,0x1b8d
  408a0d:	push   DWORD PTR [ebp+0xc]
  408a10:	call   0x40f741
  408a15:	or     DWORD PTR ds:0x428e9d,edx
  408a1b:	mov    eax,DWORD PTR [ebp-0x4]
  408a1e:	sbb    DWORD PTR ds:0x428e5d,edx
  408a24:	mov    ecx,DWORD PTR [ebp-0x8]
  408a27:	xor    DWORD PTR ds:0x428e9d,0xa39
  408a31:	xor    eax,esi
  408a33:	sbb    DWORD PTR ds:0x428e39,0x428e35
  408a3d:	add    eax,edi
  408a3f:	mov    DWORD PTR ds:0x428e3d,0x1847
  408a49:	cmp    ecx,eax
  408a4b:	mov    DWORD PTR ds:0x428e41,0x373f
  408a55:	je     0x408a7d
  408a5b:	movzx  ecx,WORD PTR ds:0x428e49
  408a62:	mov    eax,DWORD PTR [ebp-0x34]
  408a65:	movzx  eax,WORD PTR [eax+ebx*2]
  408a69:	mov    ecx,DWORD PTR ds:0x428e4d
  408a6f:	mov    ecx,DWORD PTR [ebp-0x14]
  408a72:	mov    eax,DWORD PTR [ecx+eax*4]
  408a75:	mov    DWORD PTR [ebp-0x38],eax
  408a78:	jmp    0x408990
  408a7d:	mov    eax,DWORD PTR [ebp-0xc]
  408a80:	xor    eax,esi
  408a82:	lea    ebx,[ebx+eax*1+0x3272f8]
  408a89:	jmp    0x4086d2
  408a8e:	mov    eax,DWORD PTR [ebp-0x4]
  408a91:	xor    eax,esi
  408a93:	add    eax,edi
  408a95:	jmp    0x40f699
  408a9a:	mov    eax,DWORD PTR [ebp-0x38]
  408a9d:	add    eax,DWORD PTR [ebp+0x8]
  408aa0:	mov    DWORD PTR [ebp-0x18],eax
  408aa3:	mov    eax,DWORD PTR [ebp-0x1c]
  408aa6:	test   eax,eax
  408aa8:	je     0x40d282
  408aae:	mov    DWORD PTR [ebp-0x20],0x0
  408ab5:	push   0x4
  408ab7:	xor    edx,edx
  408ab9:	pop    edx
  408aba:	add    edx,0x9
  408abd:	push   edx
  408abe:	pop    ecx
  408abf:	push   0x8
  408ac1:	dec    ecx
  408ac2:	pop    ebx
  408ac3:	dec    ebx
  408ac4:	xchg   ebx,ecx
  408ac6:	sub    ebx,ecx
  408ac8:	xchg   ebx,ecx
  408aca:	dec    ecx
  408acb:	mov    eax,DWORD PTR [ebp-0x1c]
  408ace:	imul   eax,ecx
  408ad1:	sub    esp,eax
  408ad3:	mov    DWORD PTR [ebp-0x20],esp
  408ad6:	mov    eax,DWORD PTR [ebp-0x4]
  408ad9:	xor    eax,esi
  408adb:	add    eax,edi
  408add:	jmp    0x40aebb
  408ae2:	mov    ecx,DWORD PTR [ebp-0xc]
  408ae5:	mov    eax,DWORD PTR [ebp+0x8]
  408ae8:	mov    edx,DWORD PTR [ebp+0x14]
  408aeb:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  408aef:	xor    ecx,esi
  408af1:	add    ecx,edi
  408af3:	xor    edx,edx
  408af5:	div    ecx
  408af7:	mov    ecx,DWORD PTR [ebp-0x4]
  408afa:	xor    ecx,esi
  408afc:	lea    eax,[ecx+eax*1+0x3272f8]
  408b03:	mov    ecx,DWORD PTR [ebp+0x8]
  408b06:	mov    edx,DWORD PTR [ebp-0x20]
  408b09:	jmp    0x40aea9
  408b0e:	fbstp  TBYTE PTR [ebp*1-0xe9985a5]
  408b15:	cmp    cl,dh
  408b17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b18:	fnstsw WORD PTR [ecx-0x28]
  408b1b:	into   
  408b1c:	or     DWORD PTR [edx+0x7b7be429],esi
  408b22:	(bad)  
  408b23:	sahf   
  408b24:	jnp    0x408ba1
  408b26:	jns    0x408ac3
  408b28:	stos   DWORD PTR es:[edi],eax
  408b29:	das    
  408b2a:	push   es
  408b2b:	shl    BYTE PTR [ecx-0x234e3838],cl
  408b31:	pop    esi
  408b32:	add    edi,DWORD PTR [ebx+eax*8-0x28f79f80]
  408b39:	stos   BYTE PTR es:[edi],al
  408b3a:	retf   0xf740
  408b3d:	adc    esp,DWORD PTR [edx+eax*4]
  408b40:	sbb    bx,WORD PTR [edi+0x5066d4fd]
  408b47:	aad    0xf
  408b49:	mov    ebx,0x80639a30
  408b4e:	xchg   ebx,eax
  408b4f:	rcr    BYTE PTR [edi-0x2b],cl
  408b52:	jp     0x408b7e
  408b54:	inc    ebx
  408b55:	icebp  
  408b56:	push   eax
  408b57:	and    cl,BYTE PTR [ebp+0x561cb569]
  408b5d:	mov    ds:0xbeb31b68,al
  408b62:	sbb    bl,ch
  408b64:	outs   dx,BYTE PTR ds:[esi]
  408b65:	pop    edi
  408b66:	push   ds
  408b67:	lahf   
  408b68:	mov    eax,ds:0xaf42cbc3
  408b6d:	dec    eax
  408b6e:	daa    
  408b6f:	dec    edi
  408b70:	mov    BYTE PTR [eax+esi*1],dh
  408b73:	cmp    ah,0x12
  408b76:	adc    DWORD PTR [ecx],ebx
  408b78:	pop    ebx
  408b79:	jno    0x408b5d
  408b7b:	gs push DWORD PTR es:[eax-0x2dbdc228]
  408b83:	out    0x21,al
  408b85:	(bad)  
  408b86:	neg    BYTE PTR [esi]
  408b88:	pop    edx
  408b89:	sub    BYTE PTR [edi],bl
  408b8b:	mov    gs,WORD PTR [edi]
  408b8d:	test   BYTE PTR [esi],dh
  408b8f:	xchg   edx,eax
  408b90:	mov    ah,BYTE PTR [ebx-0x51944775]
  408b96:	jle    0x408bc7
  408b98:	stos   BYTE PTR es:[edi],al
  408b99:	cmp    DWORD PTR [ecx-0x365c69f3],0x47f382ae
  408ba3:	xchg   ebx,eax
  408ba4:	jno    0x408bda
  408ba6:	xor    DWORD PTR [ebx-0x4],0x34
  408baa:	jns    0x408b4e
  408bac:	xor    ah,BYTE PTR [edi]
  408bae:	iret   
  408baf:	push   es
  408bb0:	dec    ah
  408bb2:	mov    ebp,edi
  408bb4:	cwde   
  408bb5:	outs   dx,BYTE PTR ds:[esi]
  408bb6:	mov    al,ds:0x8259558
  408bbb:	stos   DWORD PTR es:[edi],eax
  408bbc:	and    BYTE PTR [ebx-0x13],bh
  408bbf:	or     ch,0xbc
  408bc2:	mov    ds:0x54f85848,al
  408bc7:	sub    bl,BYTE PTR [esi+0x6]
  408bca:	cmp    eax,0xe30009c5
  408bcf:	call   0x9e8e6eda
  408bd4:	jge    0x408c06
  408bd6:	mov    bh,0x87
  408bd8:	and    DWORD PTR [ebx],ebp
  408bda:	pop    ss
  408bdb:	stos   BYTE PTR es:[edi],al
  408bdc:	mov    ecx,0xc665cfa4
  408be1:	gs sub eax,0xfc9c67f7
  408be7:	nop
  408be8:	fdivr  DWORD PTR [ebp+0x55980660]
  408bee:	adc    DWORD PTR [edi-0x70f1ab47],esp
  408bf4:	mov    ds:0xdafd235e,al
  408bf9:	add    dh,BYTE PTR [esi]
  408bfb:	jno    0x408c4f
  408bfd:	hlt    
  408bfe:	cmp    BYTE PTR [ecx+eax*2-0x1e],al
  408c02:	test   DWORD PTR [edi],0x5fa66667
  408c08:	pop    ebp
  408c09:	xor    BYTE PTR [edi-0x5e],bl
  408c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c0d:	rcr    DWORD PTR [ecx-0x7a9ee16e],cl
  408c13:	pop    ds
  408c14:	xchg   esi,eax
  408c15:	sbb    edi,DWORD PTR [ecx+eax*2]
  408c18:	jno    0x408c54
  408c1a:	xor    ah,BYTE PTR [ebp-0x2bbbf03e]
  408c20:	add    bl,dh
  408c22:	xor    eax,0x5482761b
  408c27:	pop    esi
  408c28:	scas   al,BYTE PTR es:[edi]
  408c29:	mov    dh,0x67
  408c2b:	push   es
  408c2c:	dec    esi
  408c2d:	cmp    eax,DWORD PTR [edi]
  408c2f:	test   BYTE PTR [eax+0x54],ah
  408c32:	jmp    0x408c03
  408c34:	bound  esi,QWORD PTR [ebp+0x0]
  408c37:	enter  0x5e57,0xe9
  408c3b:	ins    BYTE PTR es:[edi],dx
  408c3c:	dec    ebx
  408c3d:	mov    ebx,0x992259f7
  408c42:	push   0x2362a60a
  408c47:	jp     0x408c2b
  408c49:	dec    ecx
  408c4a:	aaa    
  408c4b:	add    BYTE PTR [ebp+ebp*1+0x6081621],bl
  408c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c53:	fist   WORD PTR [eax+0x65]
  408c56:	dec    esi
  408c57:	addr16 fwait
  408c59:	add    bl,al
  408c5b:	aad    0x77
  408c5d:	adc    BYTE PTR [ebx+ebx*8],bh
  408c60:	pop    edi
  408c61:	mov    bl,0x92
  408c63:	xchg   ebp,eax
  408c64:	jmp    0x8c55:0x70d96161
  408c6b:	push   esp
  408c6c:	ss pusha 
  408c6e:	jl     0x408cd8
  408c70:	jne    0x408ccf
  408c72:	push   esi
  408c73:	cli    
  408c74:	lahf   
  408c75:	lods   eax,DWORD PTR ds:[esi]
  408c76:	lods   eax,DWORD PTR ds:[esi]
  408c77:	call   0xf5b0:0x92c4df1
  408c7e:	(bad)  
  408c7f:	cwde   
  408c80:	mov    bl,0xaf
  408c82:	js     0x408cac
  408c84:	xchg   esi,eax
  408c85:	mov    eax,ds:0xde7d25da
  408c8a:	push   eax
  408c8b:	push   0xffffffbd
  408c8d:	dec    edi
  408c8e:	fadd   DWORD PTR [ebx+0x2085c16]
  408c94:	and    eax,0xc7644c59
  408c99:	loope  0x408d01
  408c9b:	push   edx
  408c9c:	fdivr  DWORD PTR ds:0x9d6874f8
  408ca2:	shr    DWORD PTR [ecx-0x496d054f],1
  408ca8:	bound  ebp,QWORD PTR [esi]
  408caa:	in     al,dx
  408cab:	cs nop
  408cad:	pop    edx
  408cae:	out    dx,al
  408caf:	or     al,0x20
  408cb1:	pop    ss
  408cb2:	ret    0x7ba
  408cb5:	xor    DWORD PTR [ecx+0x278425c3],esi
  408cbb:	(bad)  
  408cbc:	fstp   TBYTE PTR [ebx+edx*8]
  408cbf:	(bad)  
  408cc0:	push   ss
  408cc1:	sbb    DWORD PTR [eax-0x4d],ecx
  408cc4:	sbb    ebp,eax
  408cc6:	cs dec eax
  408cc8:	fiadd  WORD PTR [edx+0x5c1ce87f]
  408cce:	jg     0x408d33
  408cd0:	test   DWORD PTR [ebp+0x6df0d850],eax
  408cd6:	xlat   BYTE PTR ds:[ebx]
  408cd7:	icebp  
  408cd8:	sar    DWORD PTR [ebx],0x7
  408cdb:	cmp    al,0x7c
  408cdd:	leave  
  408cde:	mov    al,BYTE PTR [esi+0x1f6ce03c]
  408ce4:	stos   DWORD PTR es:[edi],eax
  408ce5:	inc    edx
  408ce6:	mov    ds,WORD PTR [ebx+0x6f14660d]
  408cec:	or     al,0xaa
  408cee:	popa   
  408cef:	retf   
  408cf0:	pop    esp
  408cf1:	mov    dh,BYTE PTR [ecx-0x6a08803d]
  408cf7:	xchg   edx,eax
  408cf8:	aas    
  408cf9:	lods   eax,DWORD PTR ds:[esi]
  408cfa:	jo     0x408d56
  408cfc:	cmp    DWORD PTR [ebx-0x3d],ebx
  408cff:	pop    ebx
  408d00:	imul   edi,DWORD PTR ds:0xe346b555,0xe0b0fe0f
  408d0a:	mov    ecx,ebx
  408d0c:	inc    edx
  408d0d:	fldcw  WORD PTR [esi-0x1ad6d4c9]
  408d13:	or     BYTE PTR [ebx],dh
  408d15:	shl    dh,cl
  408d17:	clc    
  408d18:	jge    0x408ca3
  408d1a:	mov    DWORD PTR [esi+0x4a],edi
  408d1d:	sub    DWORD PTR [edi-0x60bee022],esi
  408d23:	psrlw  mm4,QWORD PTR [ecx]
  408d26:	xchg   DWORD PTR [ebp+0x67c2755e],esp
  408d2c:	test   dh,bh
  408d2e:	rol    BYTE PTR [edi+0x29],0x51
  408d32:	pop    edi
  408d33:	clc    
  408d34:	xlat   BYTE PTR ds:[ebx]
  408d35:	lahf   
  408d36:	mov    bh,0xe2
  408d38:	sbb    dl,BYTE PTR [ebp-0x38]
  408d3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d3c:	mov    esi,0x41beb2c4
  408d41:	add    BYTE PTR [ecx+0x14ed752e],bl
  408d47:	pop    ss
  408d48:	fdivr  DWORD PTR [edi+0x43]
  408d4b:	mov    eax,0x3f45b01f
  408d50:	out    0x5f,al
  408d52:	sbb    esp,eax
  408d54:	mov    eax,0xcb5ae4c3
  408d59:	bound  edi,QWORD PTR [edx+0x2ce7a1fb]
  408d5f:	adc    BYTE PTR [ecx],0xab
  408d62:	loop   0x408db0
  408d64:	mov    cl,0xde
  408d66:	sbb    ecx,ebp
  408d68:	xor    BYTE PTR [ebp+0x38d8ef3],0xda
  408d6f:	dec    esp
  408d70:	sti    
  408d71:	inc    ebx
  408d72:	ja     0x408d50
  408d74:	rep stos BYTE PTR es:[edi],al
  408d76:	repnz fidiv WORD PTR [eax-0xfba30ba]
  408d7d:	pop    edx
  408d7e:	mov    cl,0x1a
  408d80:	(bad)  
  408d81:	aas    
  408d82:	jmp    0x4d253042
  408d87:	pop    ecx
  408d88:	or     DWORD PTR [edx],0xca4a5688
  408d8e:	mov    edi,0x86c85d7b
  408d93:	or     bl,BYTE PTR [ecx+ebx*1]
  408d96:	(bad)
  408d9a:	fcomi  st,st(4)
  408d9c:	fucomi st,st(1)
  408d9e:	sbb    esp,esi
  408da0:	ret    
  408da1:	sahf   
  408da2:	outs   dx,BYTE PTR ds:[esi]
  408da3:	in     al,dx
  408da4:	push   ecx
  408da5:	lods   al,BYTE PTR ds:[esi]
  408da6:	rcl    BYTE PTR [edi+0x874ec89],1
  408dac:	push   0xffffffda
  408dae:	das    
  408daf:	das    
  408db0:	leave  
  408db1:	hlt    
  408db2:	mov    al,ds:0x2c86ad5f
  408db7:	inc    eax
  408db8:	fs sti 
  408dba:	loopne 0x408e35
  408dbc:	js     0x408da2
  408dbe:	shr    BYTE PTR [edi],1
  408dc0:	mov    eax,0xfd83c594
  408dc5:	scas   al,BYTE PTR es:[edi]
  408dc6:	xchg   ecx,eax
  408dc7:	inc    esi
  408dc8:	jne    0x408d64
  408dca:	call   0x36a0:0xf1ee8bd9
  408dd1:	jl     0x408e2d
  408dd3:	push   cs
  408dd4:	hlt    
  408dd5:	cwde   
  408dd6:	retf   
  408dd7:	popa   
  408dd8:	adc    eax,edx
  408dda:	dec    ebx
  408ddb:	fiadd  WORD PTR [ebx+ecx*1-0x51]
  408ddf:	in     eax,dx
  408de0:	clc    
  408de1:	int3   
  408de2:	bound  ebp,QWORD PTR [ebx-0x7bcac1b]
  408de8:	cmp    BYTE PTR [edx-0xc825134],cl
  408dee:	lahf   
  408def:	dec    esi
  408df0:	jl     0x408e1b
  408df2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408df3:	cmp    BYTE PTR [edx-0x46],dh
  408df6:	enter  0x66f7,0xce
  408dfa:	outs   dx,DWORD PTR ds:[esi]
  408dfb:	sbb    cl,dl
  408dfd:	push   eax
  408dfe:	mov    ds:0x9c6a9da8,al
  408e03:	push   0xd2724872
  408e08:	cs xchg edx,eax
  408e0a:	jo     0x408e81
  408e0c:	xchg   esi,eax
  408e0d:	mov    DWORD PTR [eax-0x6b61f0b9],eax
  408e13:	mov    eax,ds:0xf9efa8e8
  408e18:	jle    0x408e1f
  408e1a:	add    DWORD PTR [eax],0x389e4162
  408e20:	inc    eax
  408e21:	adc    eax,0x680506bc
  408e26:	cld    
  408e27:	into   
  408e28:	mov    ch,0x23
  408e2a:	jne    0x408ddb
  408e2c:	push   ss
  408e2d:	inc    edx
  408e2e:	or     ebp,DWORD PTR [edx+0x56]
  408e31:	fcom   DWORD PTR [esp+edi*4-0x1838aac6]
  408e38:	int3   
  408e39:	pop    ebx
  408e3a:	jle    0x408e42
  408e3c:	outs   dx,DWORD PTR ds:[esi]
  408e3d:	ret    0x48c4
  408e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e41:	fidivr WORD PTR [ecx]
  408e43:	inc    esi
  408e44:	jae    0x408eb0
  408e46:	add    BYTE PTR [eax+ecx*4-0xe],0xc6
  408e4b:	mov    dh,0x4c
  408e4d:	not    ecx
  408e4f:	pop    ebx
  408e50:	addr16 daa 
  408e52:	add    DWORD PTR [eax-0x3b],0xa
  408e56:	in     eax,0x38
  408e58:	mov    ch,BYTE PTR [ebx]
  408e5a:	pop    ebp
  408e5b:	cld    
  408e5c:	retf   0xc384
  408e5f:	fucomp st(4)
  408e61:	mov    eax,ds:0x60818664
  408e66:	add    al,0x2b
  408e68:	xor    al,0x1
  408e6a:	cwde   
  408e6b:	cdq    
  408e6c:	adc    BYTE PTR [eax+0x65],bh
  408e6f:	and    BYTE PTR [esi+eax*2-0x6caa6831],bl
  408e76:	sub    BYTE PTR [ecx+0x3b7b33bd],0x45
  408e7d:	stos   DWORD PTR es:[edi],eax
  408e7e:	xor    DWORD PTR [esi-0x34],ebp
  408e81:	bound  esi,QWORD PTR [eax]
  408e83:	clc    
  408e84:	icebp  
  408e85:	and    al,cl
  408e87:	fisub  DWORD PTR [edi-0x7d]
  408e8a:	jp     0x408e91
  408e8c:	fs daa 
  408e8e:	xor    eax,0xead9583f
  408e93:	add    al,0x4e
  408e95:	call   0xc2e0:0x7827f428
  408e9c:	ins    BYTE PTR es:[edi],dx
  408e9d:	test   al,0x4e
  408e9f:	lock mov ds:0xbcd624d8,al
  408ea5:	loopne 0x408ef0
  408ea7:	aaa    
  408ea8:	push   esi
  408ea9:	mov    dl,0xa7
  408eab:	stos   DWORD PTR es:[edi],eax
  408eac:	mov    eax,ds:0xeea53bba
  408eb1:	xchg   DWORD PTR ds:[esi],edi
  408eb4:	jmp    0x165d:0x7c7c5ca6
  408ebb:	push   esi
  408ebc:	jl     0x408f28
  408ebe:	inc    ecx
  408ebf:	mov    ecx,0x408ddd4d
  408ec4:	xchg   ebp,eax
  408ec5:	pop    ebx
  408ec6:	std    
  408ec7:	(bad)  
  408ec8:	cld    
  408ec9:	scas   al,BYTE PTR es:[edi]
  408eca:	ror    cl,0x1d
  408ecd:	or     esi,DWORD PTR [ecx-0x1a344df6]
  408ed3:	ret    0xb75e
  408ed6:	rol    DWORD PTR [esi-0x143ed32a],0x0
  408edd:	gs mov ecx,0xc861061e
  408ee3:	outs   dx,BYTE PTR ds:[esi]
  408ee4:	mov    ch,0xae
  408ee6:	lahf   
  408ee7:	outs   dx,BYTE PTR ds:[esi]
  408ee8:	add    eax,0x32782621
  408eed:	mov    al,ds:0xc3fd5235
  408ef2:	fs xchg dl,cl
  408ef5:	shl    esi,1
  408ef7:	push   0xffffff99
  408ef9:	xor    eax,0xc834ea63
  408efe:	stc    
  408eff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f00:	fxam   
  408f02:	mov    ebx,esp
  408f04:	mov    ebp,DWORD PTR [eax-0x4b]
  408f07:	adc    edx,DWORD PTR [edx+0x57c351d5]
  408f0d:	mov    esp,0xe5fa9199
  408f12:	inc    ebx
  408f13:	fcmovb st,st(3)
  408f15:	adc    eax,0xedd78346
  408f1a:	push   es
  408f1b:	les    eax,FWORD PTR [edx-0x125cdc82]
  408f21:	dec    edi
  408f22:	mov    eax,0x699c8eb0
  408f27:	test   BYTE PTR [ecx],al
  408f29:	neg    BYTE PTR [esi]
  408f2b:	addr16 stc 
  408f2d:	cmp    BYTE PTR [ebx+ebp*2+0xca50c7a],ch
  408f34:	in     al,0x24
  408f36:	loope  0x408f3b
  408f38:	adc    al,0x42
  408f3a:	push   ecx
  408f3b:	int3   
  408f3c:	jge    0x408ec4
  408f3e:	(bad)  
  408f3f:	mov    dh,0x28
  408f41:	and    BYTE PTR [ebp+0x28],0xfd
  408f45:	xor    al,0x18
  408f47:	push   esi
  408f48:	ja     0x408fb2
  408f4a:	xor    bl,cl
  408f4c:	adc    dh,ch
  408f4e:	sbb    bl,BYTE PTR [ecx+edi*2]
  408f51:	inc    ecx
  408f52:	jecxz  0x408f13
  408f54:	and    BYTE PTR [edi+0x1c4c4626],dl
  408f5a:	and    ebp,DWORD PTR [edx]
  408f5c:	fimul  DWORD PTR [ecx+0x3019aae7]
  408f62:	leave  
  408f63:	aas    
  408f64:	cli    
  408f65:	test   DWORD PTR [ebp-0xd641029],0x24b17bd1
  408f6f:	pop    esp
  408f70:	inc    ebx
  408f71:	mov    edi,0xcc52bf1b
  408f76:	push   edi
  408f77:	xchg   esp,eax
  408f78:	xor    DWORD PTR ds:0x2ed9f2dc,0x21
  408f7f:	ret    0x6f29
  408f82:	mov    edi,0x7b846f30
  408f87:	shr    dl,cl
  408f89:	mov    ss,WORD PTR [esi-0x2ceaa6ab]
  408f8f:	shl    BYTE PTR [eax-0x37],0xc3
  408f93:	or     ah,BYTE PTR [edi]
  408f95:	sub    eax,0x2b8a5f30
  408f9a:	(bad)  
  408f9b:	leave  
  408f9c:	mov    ds:0x2485354d,eax
  408fa1:	outs   dx,BYTE PTR ds:[esi]
  408fa2:	jmp    0xc0d7:0x4d9e280b
  408fa9:	div    BYTE PTR [edi+0x8]
  408fac:	adc    dh,BYTE PTR [esp+ecx*2+0x14bb5423]
  408fb3:	outs   dx,DWORD PTR ds:[esi]
  408fb4:	(bad)  
  408fb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408fb6:	test   eax,0xabf85de5
  408fbb:	adc    BYTE PTR [ebx+0x66174620],al
  408fc1:	jo     0x408f64
  408fc3:	sbb    DWORD PTR [edi-0x14],ebp
  408fc6:	cmp    DWORD PTR [edx-0x3f778f8e],esp
  408fcc:	arpl   WORD PTR [edi],cx
  408fce:	aaa    
  408fcf:	data16 fidiv DWORD PTR [ebx+0x28b9d12a]
  408fd6:	mov    bh,0x6f
  408fd8:	int    0xb2
  408fda:	sub    DWORD PTR [esi],ebp
  408fdc:	mov    esi,cs
  408fde:	fdivr  QWORD PTR [ebx-0x5766378a]
  408fe4:	or     eax,0x3cfd1c0d
  408fe9:	mov    eax,ds:0x2e200a26
  408fee:	sub    BYTE PTR [ecx-0x5d9844e7],bl
  408ff4:	mov    al,ds:0xa95b958d
  408ff9:	jno    0x408f88
  408ffb:	sub    eax,0x22be72ce
  409000:	loope  0x40906f
  409002:	jae    0x409010
  409004:	repz lock iret 
  409007:	les    esp,FWORD PTR [edi+edi*8-0x73]
  40900b:	mov    fs,WORD PTR [edi]
  40900d:	std    
  40900e:	aaa    
  40900f:	jae    0x408fbf
  409011:	shr    DWORD PTR [esi-0x6bc062f],cl
  409017:	dec    eax
  409018:	cmp    bh,BYTE PTR [ecx+0x36]
  40901b:	inc    edx
  40901c:	cmp    DWORD PTR [esi+ebp*8+0x66134c86],ebx
  409023:	pop    esp
  409024:	pushf  
  409025:	scas   eax,DWORD PTR es:[edi]
  409026:	jbe    0x408fd4
  409028:	adc    DWORD PTR [edi+0x2f7c9bea],edi
  40902e:	call   0x9b83:0xddf41c7e
  409035:	leave  
  409036:	mov    cl,BYTE PTR [edi]
  409038:	add    eax,0xd9ef818f
  40903d:	cld    
  40903e:	mov    ds:0x1aed57c7,eax
  409043:	aaa    
  409044:	in     al,0xb7
  409046:	cdq    
  409047:	cmp    ch,BYTE PTR [esi-0x46]
  40904a:	or     DWORD PTR [edi+0x234b8609],edi
  409050:	pop    eax
  409051:	scas   eax,DWORD PTR es:[edi]
  409052:	adc    DWORD PTR [ebx+0x50],edi
  409055:	mov    al,0x68
  409057:	add    eax,0xd03f8ba2
  40905c:	pop    edx
  40905d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40905e:	xor    BYTE PTR [ebx+ebp*2+0x2c0cee31],ch
  409065:	dec    ebx
  409066:	(bad)  {k7}
  40906b:	hlt    
  40906c:	mov    WORD PTR [eax-0xecc8f13],?
  409072:	adc    DWORD PTR [ecx],esi
  409074:	push   esp
  409075:	out    dx,eax
  409076:	dec    edi
  409077:	cmp    BYTE PTR [esi+0x7ac4891],0xf5
  40907e:	sbb    al,0x14
  409080:	mov    es,WORD PTR [ecx-0x3b]
  409083:	ja     0x40908f
  409085:	push   ss
  409086:	pop    edi
  409087:	xchg   BYTE PTR [ebx+0x1],dl
  40908a:	pusha  
  40908b:	rcr    DWORD PTR [edx-0x58],cl
  40908e:	cmp    eax,0x877ab6c3
  409093:	mov    ah,0xde
  409095:	pop    edx
  409096:	icebp  
  409097:	mov    edx,0x28c3ac6
  40909c:	mov    BYTE PTR [esp+eax*2],dl
  40909f:	jo     0x4090c6
  4090a1:	inc    edi
  4090a2:	xchg   edx,eax
  4090a3:	loop   0x409031
  4090a5:	inc    esi
  4090a6:	push   cs
  4090a7:	and    al,0xa
  4090a9:	mov    ch,ch
  4090ab:	or     BYTE PTR [edx-0x3ab282a7],0x9f
  4090b2:	mov    esi,0x1cca2aa0
  4090b7:	sbb    DWORD PTR [edi+0x587255c1],0xc2e3d346
  4090c1:	pop    esi
  4090c2:	ds stos BYTE PTR es:[edi],al
  4090c4:	pusha  
  4090c5:	in     eax,0x2f
  4090c7:	inc    ebp
  4090c8:	call   0xaea0fdf6
  4090cd:	cmp    DWORD PTR [eax],edi
  4090cf:	push   ebp
  4090d0:	pop    eax
  4090d1:	ret    0x56f0
  4090d4:	fld    QWORD PTR [edi+0x3e]
  4090d7:	mov    eax,0xe4390844
  4090dc:	popa   
  4090dd:	sbb    cl,BYTE PTR [esi-0x6e]
  4090e0:	sti    
  4090e1:	leave  
  4090e2:	inc    ebx
  4090e3:	clc    
  4090e4:	in     al,0x43
  4090e6:	dec    ecx
  4090e7:	dec    ebx
  4090e8:	rcl    al,0x31
  4090eb:	inc    eax
  4090ec:	cmp    BYTE PTR [ecx+0x53c88c1c],ah
  4090f2:	or     bl,BYTE PTR [edi]
  4090f4:	xchg   DWORD PTR [ecx-0x29e362c1],edi
  4090fa:	sub    al,0xe3
  4090fc:	jp     0x409103
  4090fe:	dec    edx
  4090ff:	adc    cl,bh
  409101:	xchg   DWORD PTR [edx+0x6e],ecx
  409104:	sbb    eax,DWORD PTR [ebx]
  409106:	mov    ebx,0x41e2cee6
  40910b:	js     0x4090f1
  40910d:	xchg   DWORD PTR [edx+0x6e945d53],esp
  409113:	test   BYTE PTR [ecx+0x2e],bl
  409116:	and    al,0x87
  409118:	bound  edi,QWORD PTR [edx]
  40911a:	rcr    DWORD PTR [esi-0x266ab6bf],cl
  409120:	add    dl,BYTE PTR [esi+edx*4-0x5]
  409124:	sub    ax,0x9c12
  409128:	mov    bl,0x17
  40912a:	sahf   
  40912b:	pop    es
  40912c:	repnz aas 
  40912e:	btr    DWORD PTR [edi],eax
  409131:	pop    eax
  409132:	(bad)  
  409133:	ror    BYTE PTR [edx],1
  409135:	sbb    dh,BYTE PTR [eax]
  409137:	hlt    
  409138:	lock fimul WORD PTR [ecx-0x3e]
  40913c:	xlat   BYTE PTR ds:[ebx]
  40913d:	jmp    0x665186d0
  409142:	or     BYTE PTR ds:0x6f8f49c,ah
  409148:	in     al,dx
  409149:	xchg   edx,eax
  40914a:	pop    edi
  40914b:	cmc    
  40914c:	adc    esi,DWORD PTR [eax-0x7a81fa52]
  409152:	jns    0x409195
  409154:	aaa    
  409155:	fsubp  st(4),st
  409157:	out    dx,al
  409158:	scas   eax,DWORD PTR es:[edi]
  409159:	call   0x566176cc
  40915e:	or     BYTE PTR [ebx-0x6d5f7ff8],0x0
  409165:	dec    eax
  409166:	mov    ah,0x3
  409168:	xor    ebx,DWORD PTR [ebp+0x3dc4590f]
  40916e:	cld    
  40916f:	test   DWORD PTR [ecx+0x21428bd7],ebp
  409175:	aad    0x50
  409177:	int    0xfa
  409179:	pop    ebp
  40917a:	mov    ecx,0xb3ec842f
  40917f:	ja     0x4091cf
  409181:	sbb    al,0x6c
  409183:	in     eax,dx
  409184:	jne    0x409205
  409186:	pusha  
  409187:	mov    ah,ah
  409189:	pusha  
  40918a:	dec    ecx
  40918b:	scas   al,BYTE PTR es:[edi]
  40918c:	pop    ecx
  40918d:	sbb    DWORD PTR ds:0x1bfe8e89,esp
  409193:	push   ebp
  409194:	xor    eax,0x3c62541b
  409199:	jbe    0x4091f0
  40919b:	(bad)  
  40919c:	xchg   edx,eax
  40919d:	mov    bl,0xc0
  40919f:	push   ds
  4091a0:	adc    edi,DWORD PTR [ebp-0x8dba914]
  4091a6:	jns    0x409188
  4091a8:	and    al,BYTE PTR [ebx-0x3b]
  4091ab:	jl     0x4091a3
  4091ad:	mov    al,ds:0x99b77d35
  4091b2:	das    
  4091b3:	and    al,0x2
  4091b5:	daa    
  4091b6:	push   ds
  4091b7:	fisubr WORD PTR [ecx]
  4091b9:	mov    ch,0x32
  4091bb:	sbb    bh,bl
  4091bd:	mov    dl,0x80
  4091bf:	ja     0x4091ba
  4091c1:	(bad)  
  4091c3:	adc    BYTE PTR [ebx+ebp*2],0x75
  4091c7:	xor    DWORD PTR [ecx+0x4d],eax
  4091ca:	add    eax,0x7cc6b08a
  4091cf:	push   ecx
  4091d0:	mov    ecx,0x5bce5f50
  4091d5:	scas   eax,DWORD PTR es:[edi]
  4091d6:	xchg   esp,eax
  4091d7:	jmp    0x40924b
  4091d9:	mov    ah,0xb8
  4091db:	je     0x409257
  4091dd:	pusha  
  4091de:	arpl   WORD PTR [ebx+esi*8+0x41],si
  4091e2:	pop    ebp
  4091e3:	xchg   DWORD PTR [eax+eax*2],ecx
  4091e6:	ss call 0x5f1:0xf2a3cebe
  4091ee:	imul   ecx,DWORD PTR [ebx],0x652a235f
  4091f4:	dec    eax
  4091f5:	dec    ebx
  4091f6:	sub    DWORD PTR [eax],ebx
  4091f8:	lods   al,BYTE PTR ds:[esi]
  4091f9:	mov    esp,0x90ba9c70
  4091fe:	icebp  
  4091ff:	and    ecx,DWORD PTR [ecx+0x13646dd3]
  409205:	call   0xa63b:0x5fc075db
  40920c:	imul   edi,DWORD PTR [edx],0xffffffd3
  40920f:	or     BYTE PTR [ecx],bh
  409211:	test   BYTE PTR [ebp+0xfc56602],dh
  409217:	dec    ebp
  409218:	adc    BYTE PTR [eax],cl
  40921a:	fld    TBYTE PTR [ebp+0x635b6868]
  409220:	adc    al,0xff
  409222:	mov    ebp,0x710a080c
  409227:	imul   edx,DWORD PTR [edi],0xac2f42ee
  40922d:	mov    esp,0xfae2087b
  409232:	dec    esp
  409233:	inc    esi
  409234:	out    0xd9,al
  409236:	push   cs
  409237:	adc    DWORD PTR [ebx-0x11721522],esp
  40923d:	scas   al,BYTE PTR es:[edi]
  40923e:	loopne 0x409238
  409240:	rcl    DWORD PTR [esi+0x3e3563c4],1
  409246:	paddb  mm2,mm7
  409249:	adc    DWORD PTR [edi],esi
  40924b:	adc    eax,0xeb8ef049
  409250:	shl    esi,0x5d
  409253:	xor    al,0x7c
  409255:	loop   0x409242
  409257:	add    bl,BYTE PTR ss:[edx+0x2d]
  40925b:	dec    ebp
  40925c:	xchg   edi,eax
  40925d:	sbb    bl,BYTE PTR [esp+eax*1-0x2f]
  409261:	les    ebx,FWORD PTR ds:0x91e7eb0a
  409267:	call   0x1249:0xeab94d8c
  40926e:	aad    0xd8
  409270:	les    eax,FWORD PTR [ecx]
  409272:	test   BYTE PTR [esi+0x5],al
  409275:	hlt    
  409276:	xchg   esi,eax
  409277:	ins    BYTE PTR es:[edi],dx
  409278:	or     al,0x67
  40927a:	xchg   ebp,eax
  40927b:	in     eax,0x99
  40927d:	mov    esi,DWORD PTR [edi+0x6c612313]
  409283:	neg    BYTE PTR [esi]
  409285:	jbe    0x4092fb
  409287:	call   0x917b:0x77bd0854
  40928e:	sub    ecx,DWORD PTR [edi+0x5c]
  409291:	icebp  
  409292:	popf   
  409293:	lahf   
  409294:	int3   
  409295:	mov    esi,0x661e2170
  40929a:	repnz adc al,0x51
  40929d:	pop    ebp
  40929e:	retf   0xa2d1
  4092a1:	mov    al,0xa4
  4092a3:	fdiv   QWORD PTR [esi]
  4092a5:	ds sbb al,0x8f
  4092a8:	lahf   
  4092a9:	sbb    esi,DWORD PTR [edx-0x321c2c00]
  4092af:	sub    eax,0xcea76d06
  4092b4:	loopne 0x40931a
  4092b6:	push   esp
  4092b7:	jns    0x4092f3
  4092b9:	imul   ecx,DWORD PTR [edi+eiz*1+0x20c674c1],0xe
  4092c1:	cmp    ecx,edi
  4092c3:	mov    edx,0x495cff95
  4092c8:	repnz push ecx
  4092ca:	jne    0x4092a1
  4092cc:	cli    
  4092cd:	sub    bh,BYTE PTR [ecx]
  4092cf:	sub    cl,bl
  4092d1:	sub    edx,DWORD PTR [edi+0x6f]
  4092d4:	mov    edx,0x741c5a1d
  4092d9:	jge    0x409320
  4092db:	mov    ebx,0xc7e704d4
  4092e0:	ret    
  4092e1:	or     ecx,DWORD PTR ss:0x5b7a1add
  4092e8:	push   esp
  4092e9:	xor    ch,BYTE PTR [ebp+0x5a]
  4092ec:	dec    ebp
  4092ed:	mov    cl,0x9b
  4092ef:	lods   al,BYTE PTR ds:[esi]
  4092f0:	inc    ecx
  4092f1:	outs   dx,BYTE PTR ds:[esi]
  4092f2:	dec    edi
  4092f3:	add    dh,ch
  4092f5:	or     BYTE PTR ds:0x4e4f471d,ah
  4092fb:	scas   eax,DWORD PTR es:[edi]
  4092fc:	pop    edx
  4092fd:	push   esp
  4092ff:	mov    al,0x42
  409301:	punpckhdq mm7,QWORD PTR [edx+0xf]
  409305:	push   edi
  409306:	and    dh,bh
  409308:	dec    eax
  409309:	into   
  40930a:	ret    
  40930b:	add    BYTE PTR [ecx+0x3c],al
  40930e:	sub    eax,0xd716aff3
  409313:	fstp   TBYTE PTR [edi-0x35d52397]
  409319:	add    BYTE PTR [edx+edx*2+0x5b],bh
  40931d:	jecxz  0x40935f
  40931f:	pop    edx
  409320:	pop    ds
  409321:	sbb    al,0x11
  409323:	cmp    eax,0x8503eb3a
  409328:	(bad)  
  409329:	call   0x6ec091cf
  40932e:	(bad)  
  40932f:	mov    al,ds:0x3debae11
  409334:	jecxz  0x409346
  409336:	xor    BYTE PTR gs:[ecx-0x711f4518],ah
  40933d:	fisttp WORD PTR [esi+0x24b7d9c5]
  409343:	mov    edx,0xa936db83
  409348:	pop    ecx
  409349:	ins    DWORD PTR es:[edi],dx
  40934a:	lods   eax,DWORD PTR ds:[si]
  40934c:	mov    cl,0xcf
  40934e:	inc    esp
  40934f:	ds (bad) 
  409351:	in     eax,dx
  409352:	mov    edx,0x3819d851
  409357:	(bad)  
  409359:	and    al,0xe3
  40935b:	jl     0x409349
  40935d:	sub    eax,0x93bfab62
  409362:	jle    0x4092e7
  409364:	out    0x63,al
  409366:	fidivr DWORD PTR [ebx]
  409368:	cmp    bh,BYTE PTR [ebx*1-0x3a9db91f]
  40936f:	mov    BYTE PTR ds:0x76509197,al
  409375:	mov    gs,WORD PTR [ecx+0x6a97b33e]
  40937b:	sbb    al,0x35
  40937d:	pop    eax
  40937e:	mov    ch,0xe5
  409380:	std    
  409381:	push   ebp
  409382:	push   eax
  409383:	(bad)  
  409384:	ja     0x40939b
  409386:	hlt    
  409387:	mov    al,0x53
  409389:	in     eax,dx
  40938a:	outs   dx,BYTE PTR ds:[esi]
  40938b:	xor    eax,0x110d6645
  409390:	cld    
  409391:	cmp    BYTE PTR [edi],bh
  409393:	cmc    
  409394:	jg     0x40936c
  409396:	scas   eax,DWORD PTR es:[edi]
  409397:	int    0x38
  409399:	std    
  40939a:	ds (bad) 
  40939c:	mov    dl,0xd4
  40939e:	or     al,0x32
  4093a0:	aam    0xc7
  4093a2:	dec    edi
  4093a3:	mov    ebx,0x38dcf97a
  4093a8:	mov    dl,0xf
  4093aa:	or     al,0x6d
  4093ac:	fisttp DWORD PTR [edx]
  4093ae:	inc    ebp
  4093af:	fs and al,0x93
  4093b2:	popa   
  4093b3:	imul   ecx,ebp,0x73
  4093b6:	push   es
  4093b7:	mov    ds:0x1ef15238,eax
  4093bc:	sub    al,0xb8
  4093be:	mov    al,0x4e
  4093c0:	sti    
  4093c1:	ins    DWORD PTR es:[edi],dx
  4093c2:	inc    esp
  4093c3:	or     eax,esi
  4093c5:	pop    ebx
  4093c6:	cdq    
  4093c7:	sbb    edi,edx
  4093c9:	inc    esi
  4093ca:	mov    ds:0x41b069a7,al
  4093cf:	jno    0x82d6e8b2
  4093d5:	mov    ecx,DWORD PTR [eax-0x2e]
  4093d8:	inc    esp
  4093d9:	sub    al,0xe2
  4093db:	sub    BYTE PTR [edi],bl
  4093dd:	dec    ebp
  4093de:	jle    0x4093ce
  4093e0:	pop    es
  4093e1:	out    0xd8,eax
  4093e3:	mov    bl,0x6f
  4093e5:	inc    esp
  4093e6:	jmp    0x4093fa
  4093e8:	call   0x99cd1f9b
  4093ed:	(bad)  
  4093ef:	cdq    
  4093f0:	push   esp
  4093f1:	(bad)  
  4093f2:	dec    BYTE PTR [ecx-0x71]
  4093f5:	(bad)  
  4093f6:	enter  0x4330,0xda
  4093fa:	mov    eax,0x16ea7175
  4093ff:	jb     0x40944a
  409401:	sti    
  409402:	mov    esp,0xb96fc026
  409407:	jmp    0x8c22c9af
  40940c:	jno    0x40947a
  40940e:	fisubr WORD PTR [esi+0x26]
  409411:	dec    ecx
  409412:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409413:	mov    dl,0xfa
  409415:	xor    BYTE PTR [esi+0x33],dl
  409418:	std    
  409419:	cdq    
  40941a:	fst    QWORD PTR [ebp-0x68]
  40941d:	mov    bl,0x6f
  40941f:	and    eax,0x14518fc8
  409424:	adc    al,0x2c
  409426:	out    dx,eax
  409427:	or     edi,DWORD PTR [ecx+eax*2]
  40942a:	out    0xea,eax
  40942c:	loopne 0x40940e
  40942e:	mov    WORD PTR [eax-0x2cfe0236],cs
  409434:	mul    DWORD PTR [esi+0x4c]
  409437:	mov    eax,0x977d9b1d
  40943c:	pop    esp
  40943d:	and    al,0x18
  40943f:	xchg   esp,eax
  409440:	lock pop ds
  409442:	pusha  
  409443:	xor    esp,DWORD PTR [esi]
  409445:	adc    DWORD PTR [esi-0x6b146bce],0x29
  40944c:	popf   
  40944d:	scas   eax,DWORD PTR es:[edi]
  40944e:	jp     0x40940f
  409450:	nop
  409451:	push   cs
  409452:	xor    BYTE PTR ds:0xf2410895,bh
  409458:	mov    bl,0x99
  40945a:	les    ecx,FWORD PTR ds:0xc0d1c646
  409460:	mov    eax,ds:0x931484d5
  409465:	cmp    BYTE PTR [ebp-0xc],bl
  409468:	xlat   BYTE PTR ds:[ebx]
  409469:	test   eax,0xf9e58694
  40946e:	test   eax,0xd59293cb
  409473:	sar    BYTE PTR [ecx+0x66],1
  409476:	mov    dh,0x3c
  409478:	ror    BYTE PTR [ecx+0x21],cl
  40947b:	push   ss
  40947c:	cmp    al,0x66
  40947e:	jle    0x4094d5
  409480:	ret    
  409481:	call   0x4c84:0xba8b0dd2
  409488:	(bad)  
  409489:	xchg   ebx,eax
  40948a:	xor    DWORD PTR [ebx],ebx
  40948c:	stc    
  40948d:	int3   
  40948e:	xor    dh,bl
  409490:	loopne 0x409459
  409492:	scas   al,BYTE PTR es:[edi]
  409493:	pop    esi
  409494:	lea    esp,[ecx+0x5d]
  409497:	push   edi
  409498:	sub    al,0xe6
  40949a:	(bad)  
  40949b:	jmp    0xc92dc3f1
  4094a0:	push   eax
  4094a1:	push   ss
  4094a2:	iret   
  4094a3:	add    ebp,esi
  4094a5:	cmp    BYTE PTR [edx],0x39
  4094a8:	bound  ebx,QWORD PTR [ebp-0x3b]
  4094ab:	jmp    0x409461
  4094ad:	sbb    eax,0x65ac9480
  4094b2:	xchg   edi,eax
  4094b3:	push   ebp
  4094b4:	mov    es,WORD PTR [eax]
  4094b6:	adc    dl,dl
  4094b8:	mov    edi,0xb2e6b251
  4094bd:	sub    ch,cl
  4094bf:	dec    ebx
  4094c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c1:	push   ebp
  4094c2:	imul   ecx,DWORD PTR [esi-0x13]
  4094c6:	cmp    BYTE PTR [esi],dh
  4094c8:	sti    
  4094c9:	and    esi,esp
  4094cb:	add    ch,BYTE PTR [ebp-0x7a7dd6e3]
  4094d1:	pop    ecx
  4094d2:	mov    al,ds:0x329f391d
  4094d7:	sti    
  4094d8:	hlt    
  4094d9:	cmp    BYTE PTR [edx+0x7e],bl
  4094dc:	fmul   QWORD PTR [edi+0x3ac5fca5]
  4094e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094e3:	test   BYTE PTR [edx],al
  4094e5:	pop    ss
  4094e6:	or     eax,0x48d5f98a
  4094eb:	jno    0x40954d
  4094ed:	push   ds
  4094ee:	pop    esp
  4094ef:	lahf   
  4094f0:	sub    DWORD PTR [esi-0x56],0x7d
  4094f4:	xor    cl,BYTE PTR [ebp+0x6eb9bc33]
  4094fa:	(bad)  
  4094fb:	adc    bh,BYTE PTR [ecx+0x19]
  4094fe:	not    BYTE PTR [ecx-0xf]
  409501:	sub    al,0xb9
  409503:	jns    0x4094d0
  409505:	outs   dx,DWORD PTR ds:[esi]
  409506:	lahf   
  409507:	and    DWORD PTR [ebp-0x1cb04185],ecx
  40950d:	sub    eax,0x5fb5fd9d
  409512:	lahf   
  409513:	sub    dh,BYTE PTR [ebx]
  409515:	sbb    al,BYTE PTR [edx]
  409517:	into   
  409518:	adc    BYTE PTR [edx-0x2a],ah
  40951b:	mov    eax,ds:0xf8d85c22
  409520:	jbe    0x4094e4
  409522:	push   0x88373c67
  409527:	lods   al,BYTE PTR ds:[esi]
  409528:	and    eax,0xaeb64497
  40952d:	adc    esi,DWORD PTR [ecx-0x6c3b8020]
  409533:	lods   al,BYTE PTR ds:[esi]
  409534:	xchg   BYTE PTR [ecx],dh
  409536:	add    DWORD PTR [ebx+0x7805127e],ebp
  40953c:	jl     0x40954e
  40953e:	or     DWORD PTR [edx-0x30],esp
  409541:	push   0xfef96c10
  409546:	imul   ebp,DWORD PTR [bx+di],0x62e191be
  40954d:	sub    dh,dl
  40954f:	shr    DWORD PTR [ecx+0x5fcb0a15],0xfd
  409556:	icebp  
  409557:	inc    eax
  409558:	xchg   esp,eax
  409559:	add    BYTE PTR [edi+0x3aa088ba],0xf0
  409560:	ror    DWORD PTR [ebp-0x2f],0xd3
  409564:	retf   
  409565:	test   BYTE PTR [ebx],0x1d
  409568:	mov    esp,0x523c05b6
  40956d:	call   0x953ea602
  409572:	mov    ds:0xf907c0b6,eax
  409577:	stos   DWORD PTR es:[edi],eax
  409578:	push   ebp
  409579:	int    0x0
  40957b:	jbe    0x4095f7
  40957d:	retf   0xaf76
  409580:	fdivr  st(1),st
  409582:	(bad)  
  409583:	xchg   edi,eax
  409584:	repnz dec ebx
  409586:	sbb    eax,0x7b69be0d
  40958b:	fadd   st(7),st
  40958d:	push   ebx
  40958e:	mov    esp,0xedde5041
  409593:	lods   al,BYTE PTR ds:[esi]
  409594:	inc    ebx
  409595:	inc    eax
  409596:	sbb    al,0xab
  409598:	xor    edi,eax
  40959a:	pusha  
  40959b:	stos   BYTE PTR es:[edi],al
  40959c:	sti    
  40959d:	xor    bl,0x15
  4095a0:	xchg   ecx,eax
  4095a1:	bound  esi,QWORD PTR [ecx-0x7b]
  4095a4:	mov    dh,0xb3
  4095a6:	xor    ah,BYTE PTR [ebp-0x7da03979]
  4095ac:	push   0xca0499e6
  4095b1:	add    dl,BYTE PTR [ebp+0x705834d9]
  4095b7:	jne    0x4095c5
  4095b9:	outs   dx,DWORD PTR ds:[esi]
  4095ba:	dec    eax
  4095bb:	bound  ebp,QWORD PTR [edx-0x56dc72e0]
  4095c1:	mov    al,ds:0x4f277281
  4095c6:	test   al,0x1f
  4095c8:	leave  
  4095c9:	sbb    cl,bh
  4095cb:	leave  
  4095cc:	ficom  WORD PTR [esi]
  4095ce:	sbb    DWORD PTR [edx+esi*4],0xffffffdc
  4095d2:	inc    ecx
  4095d3:	outs   dx,BYTE PTR ds:[esi]
  4095d4:	frstor [esi+eax*2+0x75]
  4095d8:	sub    al,0x0
  4095da:	dec    esp
  4095db:	sub    bh,BYTE PTR [edx]
  4095dd:	sahf   
  4095de:	sub    bh,BYTE PTR [ebp+0x7c]
  4095e1:	in     al,0x3b
  4095e3:	sub    ecx,eax
  4095e5:	xchg   ecx,eax
  4095e6:	fs dec ecx
  4095e8:	clc    
  4095e9:	cmp    dh,0x97
  4095ec:	pop    ecx
  4095ed:	mov    ds,ebx
  4095ef:	gs xchg edx,eax
  4095f1:	mov    ds:0xdf8a450f,eax
  4095f6:	adc    al,0x9
  4095f8:	xor    DWORD PTR [edi-0xa],0x16c232b4
  4095ff:	fiadd  WORD PTR [ebp+0x78]
  409602:	pop    ebp
  409603:	adc    eax,0x66f93576
  409608:	lods   eax,DWORD PTR ds:[esi]
  409609:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40960a:	ror    bh,0x2a
  40960d:	jns    0x40967a
  40960f:	pop    edi
  409610:	dec    esp
  409611:	lock sbb BYTE PTR [ebx+edi*1],0xe9
  409616:	inc    esi
  409617:	pop    edi
  409618:	cmp    DWORD PTR [edx],ebx
  40961a:	jge    0x40967e
  40961c:	(bad)  
  40961e:	cmp    cl,dl
  409620:	ja     0x4095e6
  409622:	daa    
  409623:	dec    esp
  409624:	sub    eax,0xe672e863
  409629:	imul   ecx,edx,0xffffff8d
  40962c:	jp     0x40960d
  40962e:	add    ch,0xed
  409631:	fsub   DWORD PTR [esi+0x2f79cc6]
  409637:	ss dec esp
  409639:	cmc    
  40963a:	or     esi,ebx
  40963c:	cmp    eax,0xa8165333
  409641:	and    BYTE PTR [ecx],dl
  409643:	retf   0x6dc6
  409646:	arpl   cx,cx
  409648:	xchg   esp,eax
  409649:	xor    dh,bh
  40964b:	lock pop esi
  40964d:	js     0x4096bf
  40964f:	fs xchg sp,ax
  409652:	pop    edi
  409653:	bswap  ebx
  409655:	inc    eax
  409656:	inc    ecx
  409657:	mov    WORD PTR [edx+ebp*2-0x6a036001],gs
  40965e:	xchg   edi,eax
  40965f:	loopne 0x409667
  409661:	ins    DWORD PTR es:[edi],dx
  409662:	sub    DWORD PTR [ebp-0x72],ebp
  409665:	pop    edx
  409666:	pop    esp
  409667:	mov    esp,0x69d0a3c4
  40966c:	fnstenv ds:0x35d0c123
  409672:	jmp    DWORD PTR [ebx+0x77d288ff]
  409678:	daa    
  409679:	test   BYTE PTR [edi+0x1c54f99b],0x7f
  409680:	retf   0x862f
  409683:	sub    al,0x2e
  409685:	in     al,dx
  409686:	scas   eax,DWORD PTR es:[edi]
  409687:	cdq    
  409688:	rol    DWORD PTR [ebp+0x6c],1
  40968b:	aam    0x10
  40968d:	xchg   ecx,eax
  40968e:	add    al,0x0
  409690:	loopne 0x40962b
  409692:	sub    dh,al
  409694:	jle    0x409673
  409696:	and    DWORD PTR [edi+0x65c894d1],esp
  40969c:	sbb    ah,dh
  40969e:	sub    al,0xa1
  4096a0:	idiv   BYTE PTR [esi-0x5ae14196]
  4096a6:	test   BYTE PTR [edi],ch
  4096a8:	js     0x409671
  4096aa:	and    edx,DWORD PTR [edi+esi*8+0x2b40df51]
  4096b1:	(bad)  
  4096b2:	js     0x409685
  4096b4:	or     eax,0x3974d6d7
  4096b9:	xchg   ebx,eax
  4096ba:	stc    
  4096bb:	xchg   ecx,eax
  4096bc:	out    dx,eax
  4096bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096be:	or     eax,0xd47a0454
  4096c3:	dec    DWORD PTR [esi-0x3b565778]
  4096c9:	in     eax,0x47
  4096cb:	jmp    0x40965b
  4096cd:	ins    BYTE PTR es:[edi],dx
  4096ce:	repnz jecxz 0x40968b
  4096d1:	pop    edi
  4096d2:	pop    eax
  4096d3:	sbb    eax,0x94ca372
  4096d8:	xor    DWORD PTR [ebp-0x1f],edi
  4096db:	mov    ebp,ebx
  4096dd:	jae    0x4096a9
  4096df:	(bad)  
  4096e0:	mov    dl,0xc5
  4096e2:	(bad)  
  4096e3:	sti    
  4096e4:	int    0xc5
  4096e6:	lds    edi,FWORD PTR [ecx]
  4096e8:	cdq    
  4096e9:	or     edx,DWORD PTR [ebp+0x1eb2ca21]
  4096ef:	fiadd  DWORD PTR [eax-0x38bd0d1a]
  4096f5:	pop    edx
  4096f6:	leave  
  4096f7:	aam    0xdc
  4096f9:	loope  0x409704
  4096fb:	int3   
  4096fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096fd:	cmp    dl,BYTE PTR [ebp-0x76]
  409700:	fidiv  DWORD PTR [ebx-0x67e85759]
  409706:	jmp    0x4096d7
  409708:	lock div DWORD PTR [edx]
  40970b:	mov    ch,0x93
  40970d:	jne    0x409759
  40970f:	add    esp,DWORD PTR [esi]
  409711:	lock jno 0x4096d5
  409714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409715:	mov    edi,0xa73696b2
  40971a:	dec    esi
  40971b:	dec    eax
  40971c:	into   
  40971d:	dec    edx
  40971e:	push   edx
  40971f:	repz xor BYTE PTR [edi],0xff
  409723:	popf   
  409724:	in     al,0x5b
  409726:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409727:	xchg   edi,eax
  409728:	cwde   
  409729:	sti    
  40972a:	dec    esi
  40972b:	dec    esi
  40972c:	mov    ds:0xb4bef352,eax
  409731:	in     eax,0x16
  409733:	imul   ecx,edi,0xb191ce93
  409739:	jne    0x40973f
  40973b:	and    cl,BYTE PTR [edx+0x6c]
  40973e:	sub    DWORD PTR [edx],ebp
  409740:	into   
  409741:	mov    esp,0x5d88ecff
  409746:	adc    eax,DWORD PTR [edx+0x5c72593a]
  40974c:	sub    al,0x1f
  40974e:	call   0xea9bc346
  409753:	dec    edx
  409754:	fcom   DWORD PTR [eax]
  409756:	mov    al,0x2a
  409758:	fnstsw WORD PTR [eax-0x4833c4dd]
  40975e:	mov    ebp,0x1ec87d9c
  409763:	jne    0x409772
  409765:	sub    BYTE PTR [edi+eiz*4+0x14dfaa1a],bh
  40976c:	jb     0x409737
  40976e:	(bad)  
  40976f:	xor    al,0xe0
  409771:	and    dl,ch
  409773:	mov    dl,0xee
  409775:	cmp    BYTE PTR [edi+eiz*2-0x2e],dh
  409779:	mov    eax,gs
  40977b:	imul   ebx,DWORD PTR [esi],0x44abe965
  409781:	pop    ds
  409782:	call   0x32f7:0xc786a18b
  409789:	xchg   edi,eax
  40978a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40978b:	repz ret 
  40978d:	cmp    al,0x19
  40978f:	fxch   st(5)
  409791:	lock les edi,FWORD PTR [eax+0x2c137ec3]
  409798:	pop    ss
  409799:	retf   
  40979a:	aad    0x7
  40979c:	or     bh,BYTE PTR [bx+di-0x7d]
  4097a0:	xor    bl,al
  4097a2:	pop    ecx
  4097a3:	cmc    
  4097a4:	std    
  4097a5:	cld    
  4097a6:	sbb    esp,esi
  4097a8:	dec    eax
  4097a9:	daa    
  4097aa:	add    bl,ah
  4097ac:	xlat   BYTE PTR ds:[ebx]
  4097ad:	adc    dh,BYTE PTR [ebx-0x48]
  4097b0:	xor    edx,DWORD PTR [edx-0x56]
  4097b3:	(bad)  
  4097b4:	shl    BYTE PTR [edi-0x80],0xbd
  4097b8:	dec    esi
  4097b9:	test   BYTE PTR [ebx-0x73],bl
  4097bc:	out    dx,eax
  4097bd:	jmp    0x14c9:0xa4d5bd03
  4097c4:	inc    esp
  4097c5:	out    0xaa,eax
  4097c7:	sub    DWORD PTR [edi-0x52],edx
  4097ca:	cmp    BYTE PTR [eax-0x6d],0xd2
  4097ce:	xor    DWORD PTR [esi-0x7],edi
  4097d1:	add    BYTE PTR ds:0x905cfb97,0xb0
  4097d8:	fidiv  DWORD PTR [ebx+0x16]
  4097db:	add    eax,0xa3d18ba7
  4097e0:	adc    BYTE PTR [edi-0x5a],bl
  4097e3:	xor    eax,0x689a136a
  4097e8:	and    DWORD PTR [edx+0x3d],edi
  4097eb:	loope  0x4097ce
  4097ed:	xor    DWORD PTR [ecx+edx*8+0x31],ebx
  4097f1:	test   DWORD PTR ds:0xf2594d79,edx
  4097f7:	cmc    
  4097f8:	arpl   WORD PTR [eax-0x4ad279e8],dx
  4097fe:	fsubr  QWORD PTR [eax+0x2e]
  409801:	sub    DWORD PTR [esi-0x18],0xffffffd0
  409805:	clc    
  409806:	push   ecx
  409807:	sub    al,0x36
  409809:	addr16 popa 
  40980b:	jmp    0x4bcd:0x106b3d12
  409812:	ja     0x409851
  409814:	and    eax,0xad21a3ce
  409819:	aaa    
  40981a:	mov    edi,0xd03de34e
  40981f:	inc    ebp
  409820:	sahf   
  409821:	jl     0x4097e4
  409823:	fiadd  WORD PTR [edx-0x2d25351f]
  409829:	or     ebp,DWORD PTR [ebp+0x23]
  40982c:	jbe    0x4097e6
  40982e:	(bad)  
  40982f:	and    dh,dl
  409831:	sbb    al,dl
  409833:	xor    BYTE PTR [ecx+0x9661aff],cl
  409839:	push   ss
  40983a:	adc    BYTE PTR [eax],0x42
  40983d:	lods   al,BYTE PTR ds:[esi]
  40983e:	nop
  40983f:	push   edx
  409840:	les    edx,FWORD PTR [eax]
  409842:	jl     0x409899
  409844:	in     eax,dx
  409845:	inc    bl
  409847:	xchg   esp,eax
  409848:	mov    eax,ds:0x45944345
  40984d:	jp     0x40987f
  40984f:	push   ss
  409850:	cmp    ch,BYTE PTR [ecx]
  409852:	sub    al,0x77
  409854:	sbb    ecx,ecx
  409856:	icebp  
  409857:	jp     0x40984c
  409859:	ret    
  40985a:	hlt    
  40985b:	fbld   TBYTE PTR [ecx-0x34]
  40985e:	int    0x64
  409860:	leave  
  409861:	leave  
  409862:	in     eax,dx
  409863:	push   edx
  409864:	xchg   ebx,eax
  409865:	sbb    al,BYTE PTR [edx-0x7f]
  409868:	add    cl,BYTE PTR [ebp-0x74]
  40986b:	push   ebx
  40986c:	aas    
  40986d:	out    dx,eax
  40986e:	sbb    cl,cl
  409870:	stc    
  409871:	scas   eax,DWORD PTR es:[edi]
  409872:	dec    ebp
  409873:	sub    edi,DWORD PTR [eax]
  409875:	cs mov esi,0x5eba7814
  40987b:	jae    0x40984a
  40987d:	sub    al,0xac
  40987f:	(bad)  
  409880:	jo     0x4098f6
  409882:	imul   ebx,DWORD PTR [ecx-0x6a],0xffffff9f
  409886:	push   ds
  409887:	dec    edi
  409888:	stos   DWORD PTR es:[edi],eax
  409889:	xor    eax,0x4892fdee
  40988e:	loopne 0x40986a
  409890:	rol    DWORD PTR [edx-0x2d],0x36
  409894:	mov    ecx,0xfdf9f2e0
  409899:	in     eax,0xbc
  40989b:	push   ecx
  40989c:	test   DWORD PTR [ecx+eiz*4+0x8],eax
  4098a0:	sti    
  4098a1:	xchg   edx,eax
  4098a2:	push   ebx
  4098a3:	adc    ah,cl
  4098a5:	icebp  
  4098a6:	pop    eax
  4098a7:	xor    esp,DWORD PTR [edi+0x46]
  4098aa:	pop    edi
  4098ab:	sbb    BYTE PTR [eax+0x2ec07a2f],ch
  4098b1:	or     DWORD PTR ds:0x21d2647d,edx
  4098b7:	inc    esp
  4098b8:	add    ebp,DWORD PTR [edx]
  4098ba:	aaa    
  4098bb:	and    eax,0xca9cb8da
  4098c0:	nop
  4098c1:	cmp    eax,0xbf45139f
  4098c6:	jo     0x409899
  4098c8:	ja     0x409851
  4098ca:	mov    DWORD PTR [ebp-0x70],ecx
  4098cd:	cmc    
  4098ce:	aas    
  4098cf:	mov    bh,0x1d
  4098d1:	and    al,0xf5
  4098d3:	adc    edi,DWORD PTR [eax]
  4098d5:	adc    cl,ch
  4098d7:	fild   WORD PTR [ebx-0x52b15952]
  4098dd:	retf   
  4098de:	and    eax,DWORD PTR [edx-0x37f44451]
  4098e4:	mov    eax,0xdeb6eafa
  4098e9:	jp     0x409888
  4098eb:	retf   
  4098ec:	mov    ds:0xffa8afbb,al
  4098f1:	out    dx,al
  4098f2:	cld    
  4098f3:	stos   BYTE PTR es:[edi],al
  4098f4:	stos   BYTE PTR es:[edi],al
  4098f5:	cli    
  4098f6:	shr    DWORD PTR [eax],0x9
  4098f9:	xchg   BYTE PTR [edx],al
  4098fb:	push   cs
  4098fc:	xchg   edx,eax
  4098fd:	lahf   
  4098fe:	jnp    0x4098b8
  409900:	addr16 aad 0xc2
  409903:	mov    dl,0x7c
  409905:	in     eax,dx
  409906:	sbb    eax,DWORD PTR [esi+0x12]
  409909:	cs (bad) 
  40990c:	mov    bl,al
  40990e:	test   ebx,esi
  409910:	test   DWORD PTR ds:0x202d875,edi
  409916:	dec    DWORD PTR [edi]
  409918:	test   al,0x15
  40991a:	xchg   DWORD PTR [edx+0x73],esi
  40991d:	push   edi
  40991e:	aaa    
  40991f:	mov    ds:0xfaedd2a,al
  409924:	fst    QWORD PTR [eax+0x46]
  409927:	mov    ebx,0x355ff487
  40992c:	and    bl,cl
  40992e:	jbe    0x40997b
  409930:	lds    ebp,FWORD PTR [ebp-0x4a]
  409933:	pop    ds
  409934:	outs   dx,BYTE PTR ds:[esi]
  409935:	cmp    DWORD PTR [esi-0x7c],ecx
  409938:	(bad)  
  409939:	ins    DWORD PTR es:[edi],dx
  40993a:	jae    0x409907
  40993c:	int3   
  40993d:	adc    al,BYTE PTR [ecx+0x5c]
  409940:	cdq    
  409941:	dec    ebx
  409942:	inc    edi
  409943:	mov    DWORD PTR [edi-0x46db494b],0x296b898b
  40994d:	add    DWORD PTR [ecx-0x3e94100e],edx
  409953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409954:	sahf   
  409955:	mov    ds:0x9466957e,al
  40995a:	(bad)  
  40995b:	mov    al,ds:0x2ce75f77
  409960:	enter  0x6e36,0x8
  409964:	pop    eax
  409965:	fisttp WORD PTR [ecx+0x4a]
  409968:	xchg   ebx,eax
  409969:	(bad)  
  40996a:	(bad)  [ebx+0x234d9d30]
  409970:	xlat   BYTE PTR ds:[ebx]
  409971:	arpl   WORD PTR ds:0x785cfc49,bp
  409977:	popa   
  409978:	nop
  409979:	(bad)  
  40997b:	test   ebx,ecx
  40997d:	cmc    
  40997e:	rcr    DWORD PTR [eax-0x369b0ac7],cl
  409984:	xchg   edi,eax
  409985:	into   
  409986:	jb     0x409988
  409988:	fcom   QWORD PTR [esi-0x20]
  40998b:	xor    edi,edi
  40998d:	(bad)  
  40998e:	push   ebx
  40998f:	inc    ebp
  409990:	sar    cl,cl
  409992:	scas   al,BYTE PTR es:[edi]
  409993:	xchg   ebp,eax
  409994:	int    0x1c
  409996:	lods   al,BYTE PTR ds:[esi]
  409997:	sub    al,0x6e
  409999:	fwait
  40999a:	and    BYTE PTR [ebp+0xb],cl
  40999d:	outs   dx,DWORD PTR ds:[esi]
  40999e:	sub    ch,BYTE PTR [edx-0x25]
  4099a1:	jbe    0x409984
  4099a3:	in     al,0x89
  4099a5:	mov    esp,0x1270bcc3
  4099aa:	mov    edx,0x7a3ec898
  4099af:	jbe    0x4099ab
  4099b1:	mov    cl,0x88
  4099b3:	dec    ebp
  4099b4:	pop    ebx
  4099b5:	les    edx,FWORD PTR [esi]
  4099b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b8:	jge    0x40993a
  4099ba:	hlt    
  4099bb:	pop    es
  4099bc:	jp     0x409987
  4099be:	lahf   
  4099bf:	jo     0x40996d
  4099c1:	and    ah,BYTE PTR [eax-0x60]
  4099c4:	add    BYTE PTR [ebp-0x274e8eb8],0x8
  4099cb:	in     eax,dx
  4099cc:	mov    DWORD PTR [eax+0x50],ecx
  4099cf:	sbb    al,0xe
  4099d1:	or     BYTE PTR [ebx+0x7577a69b],bl
  4099d7:	push   ss
  4099d8:	inc    edx
  4099d9:	mov    edi,0xf41ce815
  4099de:	dec    ecx
  4099df:	rcr    DWORD PTR [edx],1
  4099e1:	or     eax,0x5fc12199
  4099e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099e7:	xchg   BYTE PTR [eax],ah
  4099e9:	cmc    
  4099ea:	scas   al,BYTE PTR es:[edi]
  4099eb:	mov    ebp,0x405f333b
  4099f0:	pop    fs
  4099f2:	push   0xf2272ee2
  4099f7:	fnsave [ebx]
  4099f9:	adc    edi,DWORD PTR [ebx]
  4099fb:	in     eax,0xfd
  4099fd:	push   0x10
  4099ff:	mov    edi,0xa2624a4a
  409a04:	lods   al,BYTE PTR ds:[esi]
  409a05:	xor    BYTE PTR [ecx-0x3f3364e0],0x92
  409a0c:	jne    0x409a18
  409a0e:	mov    ebx,0x5a53e11d
  409a13:	and    BYTE PTR [eax-0x7c0c5ae],0x1f
  409a1a:	xor    BYTE PTR [esi+0x15],cl
  409a1d:	push   edi
  409a1e:	inc    ebx
  409a1f:	pop    edx
  409a20:	pop    ebx
  409a21:	fisub  WORD PTR [eax-0x37f06bbf]
  409a27:	mov    dh,0x48
  409a29:	cmc    
  409a2a:	mov    bl,0xda
  409a2c:	jo     0x409a82
  409a2e:	jmp    0x59c4:0x73c0331a
  409a35:	or     ah,cl
  409a37:	mov    dl,0x8e
  409a39:	xlat   BYTE PTR ds:[ebx]
  409a3a:	inc    ebx
  409a3b:	popf   
  409a3c:	stos   BYTE PTR es:[edi],al
  409a3d:	call   0x64b6:0x47059a15
  409a44:	loopne 0x409a3e
  409a46:	cmp    esp,esi
  409a48:	sbb    bh,BYTE PTR [edx-0x1]
  409a4b:	leave  
  409a4c:	and    dl,0x2f
  409a4f:	retf   0x61ac
  409a52:	or     dl,al
  409a54:	jp     0x4099ec
  409a56:	push   edx
  409a57:	jge    0x409a9b
  409a59:	aam    0x4c
  409a5b:	mov    bl,0x43
  409a5d:	outs   dx,BYTE PTR ds:[esi]
  409a5e:	icebp  
  409a5f:	popf   
  409a60:	pusha  
  409a61:	out    dx,eax
  409a62:	mov    gs,WORD PTR [edx-0x59afbae7]
  409a68:	out    0x71,al
  409a6a:	popf   
  409a6b:	sbb    ah,cl
  409a6d:	inc    ecx
  409a6e:	dec    ebp
  409a6f:	adc    esp,DWORD PTR [ecx-0x2d08bcad]
  409a75:	aad    0x9d
  409a77:	ret    
  409a78:	sbb    bl,cl
  409a7a:	fild   QWORD PTR [esi+ebp*1]
  409a7d:	fwait
  409a7e:	xchg   ecx,eax
  409a7f:	or     esp,DWORD PTR [ecx-0x5d]
  409a82:	cmp    eax,0x5ce60b9
  409a87:	sub    al,0x3f
  409a89:	arpl   WORD PTR [esi+0x30],sp
  409a8c:	add    al,dl
  409a8e:	inc    edx
  409a8f:	retf   0x218f
  409a92:	lea    esp,[ecx]
  409a94:	stc    
  409a95:	or     DWORD PTR [edx],ebp
  409a97:	retf   0x102c
  409a9a:	je     0x409abf
  409a9c:	lods   eax,DWORD PTR ds:[esi]
  409a9d:	ret    0xcbd2
  409aa0:	stos   BYTE PTR es:[edi],al
  409aa1:	enter  0xa2ee,0x22
  409aa5:	dec    edx
  409aa6:	shufps xmm4,XMMWORD PTR [ebx],0x30
  409aaa:	add    BYTE PTR [edx+eax*4-0x6ee10917],ch
  409ab1:	ret    
  409ab2:	test   BYTE PTR [edx-0xd1df83a],dh
  409ab8:	in     al,0x56
  409aba:	call   0xfee8af3a
  409abf:	add    BYTE PTR [ebp-0x2b4f344a],dh
  409ac5:	pop    edi
  409ac6:	dec    ebx
  409ac7:	jno    0x409b44
  409ac9:	ins    DWORD PTR es:[edi],dx
  409aca:	sbb    BYTE PTR [ebx+0x1c],ch
  409acd:	pop    esi
  409ace:	mul    DWORD PTR [esi+0xf]
  409ad1:	mov    bl,0x17
  409ad3:	mov    ecx,0x31f7a07a
  409ad8:	cmc    
  409ad9:	or     al,ah
  409adb:	test   al,ch
  409add:	(bad)  
  409ade:	sahf   
  409adf:	repz xor edi,DWORD PTR [edx-0x18]
  409ae3:	pop    ecx
  409ae4:	jp     0x409a90
  409ae6:	iret   
  409ae7:	and    BYTE PTR [esi+0xf78801d],al
  409aed:	xor    cl,bl
  409aef:	dec    ebx
  409af0:	mov    DWORD PTR [edi+0x1ffdc40b],esi
  409af6:	das    
  409af7:	mov    al,0xc7
  409af9:	dec    ecx
  409afa:	jmp    0xcf48f82e
  409aff:	retf   0xa031
  409b02:	inc    edx
  409b03:	mov    edx,0xa5c57ce8
  409b08:	jae    0x409b56
  409b0a:	or     al,0x3a
  409b0c:	hlt    
  409b0d:	push   eax
  409b0e:	adc    ah,bh
  409b10:	xchg   DWORD PTR [ecx+esi*4],edx
  409b13:	lock inc edx
  409b15:	popa   
  409b16:	mov    ebp,0x65b9c6ac
  409b1b:	and    ecx,esp
  409b1d:	pusha  
  409b1e:	fcomp  st(5)
  409b20:	or     DWORD PTR [ebx+esi*2+0x14],ebx
  409b24:	add    edi,DWORD PTR [edx-0x29795644]
  409b2a:	jo     0x409ac6
  409b2c:	adc    DWORD PTR [ebp+0x4d900f5b],ebp
  409b32:	mov    eax,ds:0x9dc8867e
  409b37:	and    DWORD PTR [edx+0x532d4b5],eax
  409b3d:	xor    eax,0xef5ab6b3
  409b42:	clc    
  409b43:	jge    0x409b79
  409b45:	(bad)  
  409b47:	add    edx,ebx
  409b49:	add    dh,cl
  409b4b:	xchg   esp,eax
  409b4c:	iret   
  409b4d:	lahf   
  409b4e:	jmp    0x3403edbe
  409b53:	sbb    DWORD PTR [esi],esp
  409b55:	scas   eax,DWORD PTR es:[edi]
  409b56:	rol    BYTE PTR [edi-0x20bdb05b],1
  409b5c:	fadd   st(6),st
  409b5e:	sbb    bl,BYTE PTR ds:0x60ddf0cf
  409b64:	loope  0x409b7c
  409b66:	ss out dx,eax
  409b68:	mov    edi,0x71020142
  409b6d:	and    DWORD PTR [ebx+0x16],0xef78c0b
  409b74:	(bad)  
  409b75:	mov    bl,0xb0
  409b77:	test   DWORD PTR es:0x5378bb08,esi
  409b7e:	and    al,0x5e
  409b80:	lods   eax,DWORD PTR ds:[esi]
  409b81:	or     edx,DWORD PTR [ebx+0x2c]
  409b84:	fwait
  409b85:	das    
  409b86:	call   0x4dd78aa
  409b8b:	xchg   ebp,eax
  409b8c:	loop   0x409b2f
  409b8e:	(bad)  
  409b90:	add    al,0xf5
  409b92:	fld    QWORD PTR [ebx-0x41698106]
  409b98:	hlt    
  409b99:	lock xor ebx,DWORD PTR [si+0x7e1a]
  409b9f:	push   edi
  409ba0:	sub    dl,BYTE PTR [edi]
  409ba2:	pop    ebp
  409ba3:	aad    0x99
  409ba5:	inc    ebp
  409ba6:	mov    esi,DWORD PTR [eax]
  409ba8:	not    BYTE PTR [esi-0x15]
  409bab:	jge    0x409baf
  409bad:	add    edx,DWORD PTR [ecx-0xdce6c13]
  409bb3:	adc    ecx,DWORD PTR [edx+0x5c]
  409bb6:	call   0xb09d:0x844bb696
  409bbd:	mov    al,0x6b
  409bbf:	push   ds
  409bc0:	xor    DWORD PTR [edi],ebp
  409bc2:	sub    al,0xd4
  409bc5:	add    eax,DWORD PTR [ecx]
  409bc7:	nop
  409bc8:	mov    bl,0xae
  409bca:	idiv   BYTE PTR [edx+eax*4+0x70aeab12]
  409bd1:	ret    
  409bd2:	jae    0x409c35
  409bd4:	and    ah,ch
  409bd6:	dec    edi
  409bd7:	sub    BYTE PTR ds:0x7de1a81,0x54
  409bde:	hlt    
  409bdf:	rcl    edi,cl
  409be1:	mov    edi,0xc4ee09fa
  409be6:	test   BYTE PTR [eax+0x67],dl
  409be9:	sbb    eax,0x7bf6338
  409bee:	jb     0x409bf9
  409bf0:	pop    ax
  409bf2:	add    edx,0xffffffb5
  409bf5:	sbb    DWORD PTR [eax],ebx
  409bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409bf8:	aam    0x70
  409bfa:	push   ebx
  409bfb:	dec    edi
  409bfc:	pop    eax
  409bfd:	out    dx,eax
  409bfe:	daa    
  409bff:	icebp  
  409c00:	pop    ebx
  409c01:	das    
  409c02:	xchg   ebp,edx
  409c04:	(bad)  
  409c05:	outs   dx,DWORD PTR ds:[esi]
  409c06:	int3   
  409c07:	dec    eax
  409c08:	sar    DWORD PTR [edi+eiz*1-0x3e],cl
  409c0c:	mov    ds:0x81ac2ca,eax
  409c11:	mov    BYTE PTR [ebx-0x56],0xc0
  409c15:	ss push ss
  409c17:	push   edi
  409c18:	cmp    esp,DWORD PTR [eax-0x100d60f4]
  409c1e:	int3   
  409c1f:	mov    esp,0x3454913f
  409c24:	test   BYTE PTR [edi],ah
  409c26:	jne    0x409bae
  409c28:	enter  0x7db1,0xdb
  409c2c:	or     BYTE PTR [edx],al
  409c2e:	es pop eax
  409c30:	ffree  st(0)
  409c32:	pushf  
  409c33:	into   
  409c34:	inc    eax
  409c35:	lock ror DWORD PTR [edx],1
  409c38:	or     BYTE PTR [edx+0x4f],bl
  409c3b:	adc    dl,BYTE PTR [esi]
  409c3d:	mov    esi,0x26a8bad1
  409c42:	daa    
  409c43:	mov    ah,0xf6
  409c45:	fisttp DWORD PTR [ebx-0x1e]
  409c48:	xor    al,0x30
  409c4a:	lock (bad) 
  409c4c:	pop    edx
  409c4d:	pusha  
  409c4e:	fild   QWORD PTR [ebx-0xe]
  409c51:	enter  0x3ae0,0x56
  409c55:	call   0xf835:0x19d4d470
  409c5c:	mov    ss,WORD PTR [edx]
  409c5e:	push   ecx
  409c5f:	push   es
  409c60:	sbb    DWORD PTR [eax],esi
  409c62:	sub    BYTE PTR [ecx],dl
  409c64:	mov    al,ds:0x628fdea9
  409c69:	mul    DWORD PTR [ebp*4+0x1aa92ce5]
  409c70:	add    al,0xfe
  409c72:	xor    eax,0xb7334d75
  409c77:	arpl   WORD PTR [edi-0xf3d4964],cx
  409c7d:	cmp    DWORD PTR [ecx],ecx
  409c7f:	xor    al,0x84
  409c81:	(bad)  gs:[ebp+0x5e03b526]
  409c88:	adc    DWORD PTR [edi],eax
  409c8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c8b:	sbb    ebp,ebp
  409c8d:	mov    ss,WORD PTR [edx-0x156ec790]
  409c93:	sbb    DWORD PTR [ecx+eiz*4-0x222462b1],esi
  409c9a:	jl     0x409cfd
  409c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409c9d:	jo     0x409cfc
  409c9f:	mov    bh,0x27
  409ca1:	mov    dh,0xfb
  409ca3:	pushf  
  409ca4:	jae    0x409cf2
  409ca6:	jmp    0x487bafc5
  409cab:	push   es
  409cac:	dec    esp
  409cad:	add    DWORD PTR ds:0x8c417fbd,eax
  409cb3:	fnstenv [ecx-0x1]
  409cb6:	dec    ecx
  409cb7:	sbb    DWORD PTR [edx-0x5b52807a],esi
  409cbd:	in     eax,0x22
  409cbf:	mov    ds:0x1e4427f,eax
  409cc4:	cli    
  409cc5:	int3   
  409cc6:	inc    ebx
  409cc7:	push   ds
  409cc8:	mov    cl,0xca
  409cca:	ja     0x409d21
  409ccc:	sub    al,0x1d
  409cce:	xchg   edi,eax
  409ccf:	ficom  WORD PTR [esi-0x17d8544f]
  409cd5:	jae    0x409c97
  409cd7:	mov    ebx,DWORD PTR [ebp-0x48b0932c]
  409cdd:	cmp    edx,DWORD PTR fs:[esi]
  409ce0:	loopne 0x409d3e
  409ce2:	in     al,0xb
  409ce4:	xor    bh,BYTE PTR [esp+eax*2]
  409ce7:	pop    es
  409ce8:	ror    BYTE PTR [ecx+0x3cccfcea],0xe3
  409cef:	packuswb mm2,QWORD PTR [ebx-0x348ad5e7]
  409cf6:	fs clc 
  409cf8:	jl     0x409d54
  409cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cfb:	add    esi,eax
  409cfd:	mov    eax,ds:0xbda2cbde
  409d02:	mov    bl,0xe0
  409d04:	rcr    dh,0x46
  409d07:	fist   DWORD PTR [edi-0x59aa2219]
  409d0d:	sub    al,0xa9
  409d0f:	mov    BYTE PTR [ebx+0x79],bh
  409d12:	sti    
  409d13:	or     al,0x74
  409d15:	mov    ebp,0x8247f068
  409d1a:	fisubr DWORD PTR [ebx]
  409d1c:	dec    BYTE PTR [esi]
  409d1e:	mov    al,0xf9
  409d20:	popf   
  409d21:	add    eax,0x7b2e4c8a
  409d26:	pop    ss
  409d27:	and    DWORD PTR [eiz*4+0x7a456098],edi
  409d2e:	pop    ss
  409d2f:	js     0x409d33
  409d31:	outs   dx,BYTE PTR ds:[esi]
  409d32:	inc    edx
  409d33:	shl    DWORD PTR [ebx],cl
  409d35:	or     al,0xe1
  409d37:	inc    esp
  409d38:	fnstsw WORD PTR [ebp+0x645cf740]
  409d3e:	ret    0x8982
  409d41:	add    al,0x1
  409d43:	sbb    DWORD PTR [ebp+0x3f],esp
  409d46:	pop    ds
  409d47:	sbb    BYTE PTR [ecx],0x63
  409d4a:	div    DWORD PTR [edx+0x7a8b4723]
  409d50:	ja     0x409dc3
  409d52:	test   DWORD PTR [edi+0x2c5228f5],ebp
  409d58:	or     dl,bh
  409d5a:	mov    dh,0x28
  409d5c:	ret    
  409d5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d5e:	sbb    cl,BYTE PTR ds:0x8a24a8d5
  409d64:	clc    
  409d65:	loope  0x409d32
  409d67:	hlt    
  409d68:	sub    eax,0x17753ac4
  409d6d:	fist   WORD PTR [edi-0x31]
  409d70:	(bad)  
  409d71:	call   0x4c975080
  409d76:	in     eax,0x90
  409d78:	sbb    al,0x57
  409d7a:	xor    dh,al
  409d7c:	jmp    0x5f0f:0x51379ad2
  409d83:	sbb    ebp,0xac4d692c
  409d89:	int3   
  409d8a:	sbb    eax,DWORD PTR [ecx+ebp*8]
  409d8d:	sub    BYTE PTR [eax-0x42d73d12],ah
  409d93:	and    DWORD PTR [edi-0x59ae8dc1],edx
  409d99:	push   cs
  409d9a:	mov    ds:0xe80a7d2c,al
  409d9f:	dec    ebx
  409da0:	hlt    
  409da1:	add    ebx,ecx
  409da3:	push   esp
  409da4:	sub    edi,DWORD PTR [esi+ecx*2+0x62]
  409da8:	repz enter 0xa44d,0x46
  409dad:	adc    ah,ch
  409daf:	xchg   esi,eax
  409db0:	xor    DWORD PTR [edx],ecx
  409db2:	mov    dh,0x23
  409db4:	cmp    BYTE PTR [edi+eiz*2+0x65],dl
  409db8:	xchg   esi,eax
  409db9:	adc    esi,DWORD PTR [edx]
  409dbb:	or     ecx,esi
  409dbd:	and    ecx,DWORD PTR [esi+0x59826ae5]
  409dc3:	pop    eax
  409dc4:	adc    BYTE PTR [edx],cl
  409dc6:	or     eax,0xc5a7673e
  409dcb:	push   ebp
  409dcc:	in     eax,0x53
  409dce:	in     eax,dx
  409dcf:	imul   DWORD PTR [ebx+0x7611a2ef]
  409dd5:	std    
  409dd6:	imul   edx,DWORD PTR [edx-0x7],0x7
  409dda:	mov    BYTE PTR [ebx],bl
  409ddc:	mov    esp,0x40dea42d
  409de1:	push   es
  409de2:	icebp  
  409de3:	xchg   edx,eax
  409de4:	and    al,0x18
  409de6:	jo     0x409df0
  409de8:	and    BYTE PTR [edx+0x3f],dl
  409deb:	mov    eax,DWORD PTR [ecx-0x7cf06163]
  409df1:	push   ebx
  409df2:	xor    al,0x2c
  409df4:	cmp    dh,BYTE PTR [ebp-0x7]
  409df7:	mov    cl,0x85
  409df9:	mov    eax,0x9c4faec
  409dfe:	and    esi,DWORD PTR [eax+0x1571af0c]
  409e04:	push   edx
  409e05:	sahf   
  409e06:	das    
  409e07:	adc    BYTE PTR [edi+0x2e],al
  409e0a:	xchg   BYTE PTR [ebx+esi*2+0x3b],cl
  409e0e:	int    0xcc
  409e10:	cmp    eax,0xd15e722b
  409e15:	pop    es
  409e16:	mov    ecx,ecx
  409e18:	xchg   ebp,eax
  409e19:	jns    0x409e0e
  409e1b:	pusha  
  409e1c:	mul    BYTE PTR [edx+0x117d69f9]
  409e22:	sub    al,0x1e
  409e24:	cs icebp 
  409e26:	sbb    al,0x35
  409e28:	data16 aas 
  409e2a:	dec    esp
  409e2b:	xchg   DWORD PTR [edx+eax*4],edi
  409e2e:	bound  esi,QWORD PTR [edi]
  409e30:	ja     0x409e73
  409e32:	popa   
  409e33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e34:	pop    ebp
  409e35:	jmp    0x409dc0
  409e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e38:	push   ds
  409e39:	stc    
  409e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e3b:	not    BYTE PTR [edx]
  409e3d:	push   edi
  409e3e:	xor    ch,BYTE PTR [esi+edi*8-0x7ce70028]
  409e45:	pop    ecx
  409e46:	push   cs
  409e47:	jno    0x409e92
  409e49:	sub    esp,DWORD PTR [esi]
  409e4b:	hlt    
  409e4c:	pop    esi
  409e4d:	sub    ecx,DWORD PTR [eax+0x30]
  409e50:	hlt    
  409e51:	mov    al,0x2e
  409e53:	stos   BYTE PTR es:[edi],al
  409e54:	das    
  409e55:	shr    DWORD PTR [edi-0x47],0x8d
  409e59:	int    0xae
  409e5b:	std    
  409e5c:	mov    DWORD PTR [esi],esp
  409e5e:	jp     0x409e12
  409e60:	pop    ebp
  409e61:	jne    0x409e3d
  409e63:	fpatan 
  409e65:	daa    
  409e66:	ja     0x409e56
  409e68:	aam    0x8c
  409e6a:	pop    edi
  409e6b:	(bad)  
  409e6c:	daa    
  409e6d:	mov    edx,DWORD PTR [ebx-0x3de648cb]
  409e73:	test   DWORD PTR [edx-0x128d7802],ecx
  409e79:	pop    eax
  409e7a:	push   ds
  409e7b:	neg    DWORD PTR [ecx]
  409e7d:	push   eax
  409e7e:	ja     0x409e41
  409e80:	sbb    DWORD PTR [edi+0x2a38af15],esp
  409e86:	imul   edi,DWORD PTR [ebp-0x119259c3],0xffffff82
  409e8d:	sub    BYTE PTR [ebx+edx*2-0x30],dl
  409e91:	repz xchg esi,eax
  409e93:	mov    ah,0xd5
  409e95:	adc    ecx,DWORD PTR [edx+ebp*8+0x1a96031f]
  409e9c:	push   0x26
  409e9e:	jnp    0x409e75
  409ea0:	test   bl,cl
  409ea2:	mov    edi,0xa280066
  409ea7:	inc    ecx
  409ea8:	and    edx,DWORD PTR [eax-0x38f9d264]
  409eae:	sbb    DWORD PTR [esi+0x3da056cf],edx
  409eb4:	cmp    BYTE PTR [edi-0x1887eb63],dh
  409eba:	div    DWORD PTR [eax-0x7b6dceda]
  409ec0:	sbb    DWORD PTR [eax],edx
  409ec2:	dec    eax
  409ec3:	mov    ds,WORD PTR [edi-0x709aa86c]
  409ec9:	jae    0x409eef
  409ecb:	ins    BYTE PTR es:[edi],dx
  409ecc:	push   ecx
  409ecd:	xor    dl,BYTE PTR [edx+0x44]
  409ed0:	xchg   esi,eax
  409ed1:	ins    WORD PTR es:[edi],dx
  409ed3:	sub    eax,0x9d394d44
  409ed8:	sub    DWORD PTR [ebp+0x47],edi
  409edb:	mov    BYTE PTR [esi],0x93
  409ede:	call   0xeafc0ae7
  409ee3:	(bad)  
  409ee5:	gs je  0x409ef8
  409ee8:	and    esp,esi
  409eea:	add    bh,BYTE PTR [bx+si]
  409eed:	or     eax,0xead5a793
  409ef2:	int    0x58
  409ef4:	rol    DWORD PTR [ebp+0x19f69366],cl
  409efa:	pop    es
  409efb:	jl     0x409ecf
  409efd:	xchg   ecx,eax
  409efe:	sahf   
  409eff:	shl    esp,0x3d
  409f02:	lds    esi,FWORD PTR [eax-0x17c141a5]
  409f08:	mov    edi,0x2242c67f
  409f0d:	sbb    eax,0xd7c5e835
  409f12:	adc    eax,0xcffac180
  409f17:	imul   ebx,DWORD PTR [esi-0x2f1f6f25],0xffffff84
  409f1e:	pushw  ds
  409f20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f21:	mov    edi,0x4b4a274a
  409f26:	sub    ah,BYTE PTR [edi+0x44]
  409f29:	xchg   ebp,eax
  409f2a:	arpl   WORD PTR [ecx],di
  409f2c:	cmp    eax,0x1a72a022
  409f31:	out    0x88,al
  409f33:	sbb    al,0xa5
  409f35:	sbb    al,0xca
  409f37:	jne    0x409f23
  409f39:	push   ecx
  409f3a:	mov    cl,0x39
  409f3c:	out    0x1d,eax
  409f3e:	sub    eax,0x6c1e555c
  409f43:	fdiv   QWORD PTR [ecx+esi*8+0x727b6d8d]
  409f4a:	jecxz  0x409f95
  409f4c:	mov    cl,0x42
  409f4e:	enter  0xd713,0x7
  409f52:	push   eax
  409f53:	(bad)
  409f56:	ret    0xe587
  409f59:	xor    edx,ebp
  409f5b:	mov    ebp,0xb0526877
  409f60:	ss xchg ebx,eax
  409f62:	daa    
  409f63:	out    0x9e,al
  409f65:	ja     0x409f3a
  409f67:	bound  esp,QWORD PTR [eax+0x2c]
  409f6a:	inc    ecx
  409f6b:	jae    0x409ef1
  409f6d:	or     eax,0xcb09a967
  409f72:	xchg   edx,eax
  409f73:	loopne 0x409f74
  409f75:	imul   ebx,DWORD PTR [edx+0xbd8f9f3],0x985e3016
  409f7f:	adc    DWORD PTR [edi-0x443ef68d],ebp
  409f85:	in     al,0x2c
  409f87:	pop    ds
  409f88:	or     BYTE PTR [edx-0xc],cl
  409f8b:	jnp    0x409f6a
  409f8d:	and    DWORD PTR [edx],0xfffffff4
  409f90:	mov    ebp,0x2c1b2a02
  409f95:	loop   0x40a002
  409f97:	add    eax,0x6641bae4
  409f9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f9d:	mov    esi,0xe619dc51
  409fa2:	dec    edx
  409fa3:	mov    ebp,0x45b6a7dd
  409fa8:	add    edi,DWORD PTR [esi-0x5d]
  409fab:	stos   BYTE PTR es:[edi],al
  409fac:	adc    al,BYTE PTR [ebp-0x4d3762cc]
  409fb2:	pop    es
  409fb3:	ss pop ebx
  409fb5:	or     eax,0xa71bff11
  409fba:	pop    esp
  409fbb:	dec    ecx
  409fbc:	or     al,0x63
  409fbe:	aas    
  409fbf:	mov    esi,0x5696ed77
  409fc4:	stos   BYTE PTR es:[edi],al
  409fc5:	sub    BYTE PTR [edi],ch
  409fc7:	or     DWORD PTR [edi],0xddb32490
  409fcd:	sti    
  409fce:	out    0x97,al
  409fd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fd1:	inc    esi
  409fd2:	aad    0x53
  409fd4:	mov    eax,0x939fc841
  409fd9:	xchg   edi,eax
  409fda:	jmp    0x9510:0xf382e17e
  409fe1:	and    dl,BYTE PTR [edi-0x28c2f230]
  409fe7:	mov    eax,ds:0x1786aa79
  409fec:	add    eax,0x5eb2d32b
  409ff1:	gs jns 0x409f8d
  409ff4:	in     al,0xef
  409ff6:	(bad)  
  409ff7:	pop    ebp
  409ff8:	xor    bh,BYTE PTR [esi]
  409ffa:	imul   ebp,DWORD PTR [esi],0x6b
  409ffd:	fst    DWORD PTR [ecx+0x753eaa65]
  40a003:	addr16 cmp eax,0xde2707f8
  40a009:	shl    BYTE PTR [esi+eiz*4-0x55],0x39
  40a00e:	fidivr WORD PTR [ebp+0x22]
  40a011:	adc    eax,0xbc6992f8
  40a016:	jge    0x40a045
  40a018:	jge    0x40a03d
  40a01a:	inc    edi
  40a01b:	sar    esp,0x5c
  40a01e:	pop    esi
  40a01f:	jae    0x40a054
  40a021:	int3   
  40a022:	aaa    
  40a023:	adc    BYTE PTR ds:0xb0829812,ch
  40a029:	aaa    
  40a02a:	sbb    BYTE PTR [esp+ecx*1],bl
  40a02d:	mov    WORD PTR [edi+0x2e5620cb],?
  40a033:	xchg   ebx,eax
  40a034:	fidiv  WORD PTR [ebx]
  40a036:	dec    ebx
  40a037:	xchg   DWORD PTR [ebp-0x4f],esi
  40a03a:	lock call 0x2568:0xa2e49137
  40a042:	mov    dl,0x92
  40a044:	mov    sp,0x81a5
  40a048:	xor    BYTE PTR ds:0x23964660,ch
  40a04e:	aaa    
  40a04f:	ja     0x40a00d
  40a051:	adc    dl,cl
  40a053:	push   ss
  40a054:	add    bh,BYTE PTR fs:[eax]
  40a057:	mov    edi,0x3bc01a80
  40a05c:	fld    QWORD PTR [edx-0x5235591a]
  40a062:	jp     0x40a062
  40a064:	cli    
  40a065:	pop    ss
  40a066:	jg     0x40a072
  40a068:	and    al,0x1e
  40a06a:	xchg   esi,eax
  40a06b:	hlt    
  40a06c:	jns    0x40a005
  40a06e:	cs mov ebx,0xbcb25fa9
  40a074:	xlat   BYTE PTR ds:[ebx]
  40a075:	add    edx,DWORD PTR [esi+0x2e]
  40a078:	inc    ebx
  40a079:	leave  
  40a07a:	inc    ebx
  40a07b:	repnz and ebx,DWORD PTR [ebx]
  40a07e:	or     ebp,ebp
  40a080:	and    eax,0xc3fe8291
  40a085:	dec    edx
  40a086:	adc    DWORD PTR [esi],ebp
  40a088:	sbb    DWORD PTR [esi],ebp
  40a08a:	pop    esi
  40a08b:	out    dx,al
  40a08c:	jbe    0x40a013
  40a08e:	inc    edx
  40a08f:	mov    esp,0xfcc1533
  40a094:	mov    ds:0x1067dc4a,eax
  40a099:	jae    0x40a073
  40a09b:	fld    st(7)
  40a09d:	adc    esp,edx
  40a09f:	mov    edx,0x849d4864
  40a0a4:	aam    0x6d
  40a0a6:	adc    dl,bl
  40a0a8:	xchg   edi,eax
  40a0a9:	ins    DWORD PTR es:[edi],dx
  40a0aa:	lock loopne 0x40a11c
  40a0ad:	push   edx
  40a0ae:	aas    
  40a0af:	xor    al,0x2e
  40a0b1:	push   ss
  40a0b2:	repnz jmp 0x449c:0xeaf98bbe
  40a0ba:	cld    
  40a0bb:	jnp    0x40a074
  40a0bd:	or     ecx,DWORD PTR [ebx-0x1]
  40a0c0:	inc    esp
  40a0c1:	push   esi
  40a0c2:	push   0x3d
  40a0c4:	scas   eax,DWORD PTR es:[edi]
  40a0c5:	loop   0x40a0c5
  40a0c7:	popa   
  40a0c8:	and    al,0xff
  40a0ca:	mov    edx,ds
  40a0cc:	mov    ah,0x98
  40a0ce:	pop    edx
  40a0cf:	add    al,0x59
  40a0d1:	adc    eax,0xe19acde9
  40a0d6:	cmp    BYTE PTR [esp+edi*2],al
  40a0d9:	retf   0x14c6
  40a0dc:	mov    al,ds:0xd88b2cc2
  40a0e1:	add    BYTE PTR [edx],dl
  40a0e3:	xor    BYTE PTR [edi+0xc],dl
  40a0e6:	mov    ds:0xb28660b4,eax
  40a0eb:	rcr    DWORD PTR [edx+0x709473e4],0x9b
  40a0f2:	dec    ebx
  40a0f3:	lds    esp,FWORD PTR [ecx+0x1a5b8570]
  40a0f9:	(bad)  
  40a0fa:	call   DWORD PTR [edi+0x5e]
  40a0fd:	inc    ecx
  40a0fe:	xlat   BYTE PTR ds:[ebx]
  40a0ff:	retf   
  40a100:	out    0xf2,al
  40a102:	push   eax
  40a103:	ds ins DWORD PTR es:[edi],dx
  40a105:	out    dx,al
  40a106:	mov    BYTE PTR [ecx],0x84
  40a109:	adc    BYTE PTR [edx],bl
  40a10b:	daa    
  40a10c:	cmp    al,0x7a
  40a10e:	int    0xf
  40a110:	dec    esp
  40a111:	dec    ebp
  40a112:	pop    ebx
  40a113:	lock and al,0x28
  40a116:	popf   
  40a117:	pop    ds
  40a118:	sbb    ebx,DWORD PTR [ecx+0x270a6b6e]
  40a11e:	mov    ds:0x53b7e686,al
  40a123:	daa    
  40a124:	jbe    0x40a13e
  40a126:	and    eax,DWORD PTR [bx+si-0x36c8]
  40a12b:	xchg   ebx,eax
  40a12c:	push   ebp
  40a12d:	xchg   edi,eax
  40a12e:	pop    esi
  40a12f:	xor    ah,BYTE PTR [ebp+0x588e049e]
  40a135:	push   edi
  40a136:	push   ebx
  40a137:	inc    esi
  40a138:	(bad)  
  40a139:	adc    eax,0x98686186
  40a13e:	jecxz  0x40a179
  40a140:	lock test BYTE PTR ds:[edx+0x74],cl
  40a145:	jmp    0x40a140
  40a147:	sbb    al,0x23
  40a149:	xchg   esp,eax
  40a14a:	fcom   QWORD PTR [edi+edx*2-0x2a89998]
  40a151:	sub    eax,0x837d0e50
  40a156:	mov    eax,0x761484c8
  40a15b:	inc    edi
  40a15c:	adc    eax,0xd81b7a6f
  40a161:	hlt    
  40a162:	jle    0x40a1df
  40a164:	xor    bh,BYTE PTR [ebx]
  40a166:	pop    ebp
  40a167:	mov    eax,0xe8e81781
  40a16c:	pop    edi
  40a16d:	mov    dh,BYTE PTR [edi-0x39d7fe3b]
  40a173:	iret   
  40a174:	xchg   DWORD PTR [esi],ebp
  40a176:	push   edi
  40a177:	dec    ebx
  40a178:	mov    edx,0xa2487eb3
  40a17d:	mov    edx,0x303d3a24
  40a182:	sub    dh,BYTE PTR [eax]
  40a184:	repnz sub al,0x88
  40a187:	int    0xf7
  40a189:	mov    eax,0x72dee85b
  40a18e:	push   es
  40a18f:	jae    0x5c8bdfb8
  40a195:	cmc    
  40a196:	data16 hlt 
  40a198:	leave  
  40a199:	mov    bl,0xe8
  40a19b:	xchg   ebp,eax
  40a19c:	lods   al,BYTE PTR ds:[esi]
  40a19d:	xchg   edx,eax
  40a19e:	fwait
  40a19f:	jnp    0x40a216
  40a1a1:	add    BYTE PTR [edi+0x59],dh
  40a1a4:	push   ss
  40a1a5:	scas   eax,DWORD PTR es:[edi]
  40a1a6:	push   esi
  40a1a7:	lock test ch,0x87
  40a1ab:	add    BYTE PTR [ebx-0x3a],ch
  40a1ae:	sbb    al,0xda
  40a1b0:	mov    ch,0xf4
  40a1b2:	enter  0xf1a2,0xd5
  40a1b6:	in     al,dx
  40a1b7:	rol    BYTE PTR [edi+0x55],cl
  40a1ba:	inc    esp
  40a1bb:	inc    edi
  40a1bc:	mov    eax,0x230a314
  40a1c1:	xlat   BYTE PTR ds:[ebx]
  40a1c2:	push   ebp
  40a1c3:	ins    DWORD PTR es:[edi],dx
  40a1c4:	or     BYTE PTR [ebx*8-0x42cade73],bh
  40a1cb:	fimul  DWORD PTR [ecx]
  40a1cd:	mov    ah,0x11
  40a1cf:	xchg   ecx,eax
  40a1d0:	ror    BYTE PTR [esi],1
  40a1d2:	sub    BYTE PTR [edi-0x29],bh
  40a1d5:	pop    esp
  40a1d6:	sbb    eax,0x8777d1e8
  40a1db:	lea    ebp,[eax]
  40a1dd:	cs jb  0x40a259
  40a1e0:	test   DWORD PTR [edi-0x2a],0xc0258894
  40a1e7:	or     DWORD PTR [esp+ecx*4],ecx
  40a1ea:	inc    edx
  40a1eb:	test   al,0x59
  40a1ed:	sbb    ecx,edx
  40a1ef:	je     0x40a191
  40a1f1:	fist   DWORD PTR [eax-0x79f6f0f1]
  40a1f7:	and    eax,0xae659859
  40a1fc:	jae    0x40a1d4
  40a1fe:	cwde   
  40a1ff:	dec    ecx
  40a200:	cli    
  40a201:	push   ebp
  40a202:	fwait
  40a203:	imul   edi,DWORD PTR [esi+0x5a],0xe07ee890
  40a20a:	(bad)  
  40a20b:	cmp    dh,BYTE PTR [ebp+0x4a]
  40a20e:	stos   BYTE PTR es:[edi],al
  40a20f:	imul   ecx,DWORD PTR [eax+0x44bfb7bb],0xfffffff2
  40a216:	xchg   ebx,eax
  40a217:	mov    ebp,0x25605ed9
  40a21c:	fnstenv [eax*4-0x70a6b2a5]
  40a223:	call   0xf3714bba
  40a228:	lods   al,BYTE PTR ds:[esi]
  40a229:	sub    bh,bh
  40a22b:	inc    esi
  40a22c:	or     BYTE PTR [ebp-0x55],bl
  40a22f:	dec    ecx
  40a230:	repz sti 
  40a232:	ja     0x40a23a
  40a234:	(bad)  
  40a235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a236:	push   ecx
  40a237:	lds    esi,FWORD PTR [ebx+eax*4+0x55]
  40a23b:	and    al,0xe
  40a23d:	mov    bl,0x4a
  40a23f:	enter  0x5c06,0xc
  40a243:	ret    0xbc21
  40a246:	jl     0x40a1e3
  40a248:	jge    0x40a261
  40a24a:	jbe    0x40a2a2
  40a24c:	jmp    0x62fe:0x4ebbc99
  40a253:	add    ecx,0xfffffff9
  40a256:	inc    edx
  40a257:	add    BYTE PTR [edx],cl
  40a259:	mov    WORD PTR [esi+0x48],cs
  40a25c:	or     DWORD PTR [eax+0x2f14446f],esi
  40a262:	data16 (bad) 
  40a264:	int    0x4d
  40a266:	pop    edi
  40a267:	pop    ebx
  40a268:	xchg   DWORD PTR [ecx-0x75],edx
  40a26b:	push   edx
  40a26c:	bound  ebx,QWORD PTR [ecx+edx*2+0x4bfe50fb]
  40a273:	adc    al,0xc3
  40a275:	inc    eax
  40a276:	jo     0x40a244
  40a278:	xor    BYTE PTR [edx+ebx*2-0x64feb104],dl
  40a27f:	or     edi,ebx
  40a281:	sub    ebp,esp
  40a283:	int    0xef
  40a285:	loope  0x40a297
  40a287:	ss mov esi,0x65ad9b1b
  40a28d:	popf   
  40a28e:	arpl   WORD PTR [edi+eax*2-0x6c750a6c],sp
  40a295:	pop    eax
  40a296:	dec    edx
  40a297:	rcl    DWORD PTR [edi-0x61050f1e],1
  40a29d:	sub    ch,dl
  40a29f:	loope  0x40a2ec
  40a2a1:	pop    edx
  40a2a2:	aas    
  40a2a3:	xor    al,0xb2
  40a2a5:	out    dx,eax
  40a2a6:	jl     0x40a2be
  40a2a8:	fiadd  WORD PTR [eax]
  40a2aa:	inc    ebx
  40a2ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2ac:	push   cs
  40a2ad:	ret    0xd978
  40a2b0:	sub    al,0x15
  40a2b2:	xor    eax,DWORD PTR [ecx+0x6d]
  40a2b5:	add    BYTE PTR [esi+0x2327dbe9],bh
  40a2bb:	sbb    BYTE PTR [eax-0x18ba9b],ch
  40a2c1:	mov    ebp,0x9e99d3f5
  40a2c6:	and    cl,BYTE PTR [esi+0x7]
  40a2c9:	js     0x40a288
  40a2cb:	mov    bl,0x8a
  40a2cd:	cmp    al,0xb0
  40a2cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2d0:	clc    
  40a2d1:	sub    BYTE PTR [esi],cl
  40a2d3:	aaa    
  40a2d4:	std    
  40a2d5:	mov    ebx,0x1e36a8ee
  40a2da:	std    
  40a2db:	popa   
  40a2dc:	bound  edi,QWORD PTR [edx+0x247960e1]
  40a2e2:	int3   
  40a2e3:	add    eax,0xc31a91dd
  40a2e8:	aad    0x48
  40a2ea:	dec    ecx
  40a2eb:	arpl   WORD PTR [eax-0x4e],ax
  40a2ee:	sahf   
  40a2ef:	fimul  WORD PTR [edi]
  40a2f1:	sub    eax,ebx
  40a2f3:	and    BYTE PTR [ecx-0x1429a8af],bh
  40a2f9:	xor    eax,0xed4d28d2
  40a2fe:	xchg   BYTE PTR ds:0x3f08fd79,ah
  40a304:	cmp    dh,BYTE PTR ds:0x9d5ee9ac
  40a30a:	mov    ebx,0x95d97fc2
  40a30f:	popa   
  40a310:	aaa    
  40a311:	mov    ah,0x73
  40a313:	xlat   BYTE PTR ds:[ebx]
  40a314:	sti    
  40a315:	push   cs
  40a316:	cmp    eax,0x884edd9d
  40a31b:	sub    al,0xd9
  40a31d:	inc    edx
  40a31e:	add    al,dh
  40a320:	pop    es
  40a321:	jo     0x40a315
  40a323:	imul   ecx,ecx,0xf1b0a52d
  40a329:	(bad)  
  40a32a:	mov    dl,bh
  40a32c:	pop    edx
  40a32d:	ret    
  40a32e:	pop    ecx
  40a32f:	loopne 0x40a312
  40a331:	shl    dh,cl
  40a333:	push   ebp
  40a334:	aas    
  40a335:	ret    0x9f36
  40a338:	or     al,0x36
  40a33a:	sub    edx,ecx
  40a33c:	jge    0x40a2de
  40a33e:	arpl   WORD PTR [eax-0x3f],ax
  40a341:	sub    eax,0xc56fb40d
  40a346:	xchg   ebp,eax
  40a347:	test   eax,0xba3886b
  40a34c:	(bad)  
  40a34e:	cld    
  40a34f:	dec    ecx
  40a350:	push   ecx
  40a351:	sub    al,0xb6
  40a353:	mov    dh,0xad
  40a355:	jae    0x9a8688a4
  40a35b:	and    ebx,ebp
  40a35d:	xchg   ebx,eax
  40a35e:	int3   
  40a35f:	xchg   esp,eax
  40a360:	cmp    BYTE PTR [ecx+0x3a5635f7],dl
  40a366:	cmp    BYTE PTR [edi-0x25],dh
  40a369:	or     ah,BYTE PTR [ecx+0x6b]
  40a36c:	cwde   
  40a36d:	cs stc 
  40a36f:	ret    
  40a370:	lock mov ds:0x2bfd8ad6,eax
  40a376:	push   cs
  40a377:	fild   QWORD PTR [esi]
  40a379:	addr16 ds hlt 
  40a37c:	xchg   ecx,eax
  40a37d:	mov    BYTE PTR [edi-0x4c],bl
  40a380:	xchg   esp,eax
  40a381:	sbb    esi,DWORD PTR ds:0x89589605
  40a387:	into   
  40a388:	and    dl,BYTE PTR [ecx]
  40a38a:	push   ebp
  40a38b:	(bad)  
  40a38c:	fmul   st(3),st
  40a38e:	cmp    dl,BYTE PTR [esi-0x4d]
  40a391:	fyl2x  
  40a393:	add    dh,cl
  40a395:	add    al,0xc6
  40a397:	cmp    DWORD PTR [edx],ebp
  40a399:	repz sbb dh,cl
  40a39c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a39d:	(bad)  
  40a39e:	pandn  mm7,QWORD PTR [eax-0x6b]
  40a3a2:	sbb    al,0xfa
  40a3a4:	push   edx
  40a3a5:	pop    ecx
  40a3a6:	jmp    0x40a34a
  40a3a8:	inc    ebx
  40a3a9:	mov    al,ds:0x4730b57b
  40a3ae:	add    eax,0x21
  40a3b1:	push   ebp
  40a3b2:	dec    ebx
  40a3b3:	adc    al,0xf3
  40a3b5:	xchg   esp,eax
  40a3b6:	fld    QWORD PTR [esi+0x3c72c6a8]
  40a3bc:	and    ecx,DWORD PTR [edi]
  40a3be:	and    ebp,DWORD PTR [edi+0x6c]
  40a3c1:	mov    al,ds:0xe5ac18f2
  40a3c6:	test   BYTE PTR [edi-0x2f074877],dl
  40a3cc:	aam    0x5
  40a3ce:	mov    esp,0xc63bbc96
  40a3d3:	add    al,0xe7
  40a3d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3d6:	pop    ebx
  40a3d7:	mov    ds:0xeb783051,al
  40a3dc:	mov    esp,0xd00f85fa
  40a3e1:	popa   
  40a3e2:	imul   edx,DWORD PTR [edi-0x317e97cd],0xffffffe2
  40a3e9:	and    edi,DWORD PTR [edi+0x53412c16]
  40a3ef:	je     0x40a373
  40a3f1:	int3   
  40a3f2:	nop
  40a3f3:	cmc    
  40a3f4:	nop
  40a3f5:	cli    
  40a3f6:	(bad)  
  40a3f7:	push   edx
  40a3f9:	jmp    0x40a3ea
  40a3fb:	push   ecx
  40a3fc:	sub    DWORD PTR [eax+esi*1+0x16],eax
  40a400:	lds    ecx,FWORD PTR [eax+0x2f]
  40a403:	mov    bl,0xf9
  40a405:	push   ds
  40a406:	leave  
  40a407:	aam    0x8f
  40a409:	in     eax,dx
  40a40a:	scas   al,BYTE PTR es:[edi]
  40a40b:	pop    ebx
  40a40c:	add    al,0xab
  40a40e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a40f:	push   0x778dd177
  40a414:	ret    
  40a415:	sub    cl,BYTE PTR [ecx-0x35f3a8e4]
  40a41b:	add    al,0x91
  40a41d:	hlt    
  40a41e:	adc    al,0x42
  40a420:	nop
  40a421:	std    
  40a422:	(bad)  [esi+ecx*1+0x7359ad3a]
  40a429:	mov    dh,0xd1
  40a42b:	jbe    0x40a445
  40a42d:	mov    ecx,0x9734fd21
  40a432:	jno    0x40a417
  40a434:	call   0x87fc1c9c
  40a439:	and    BYTE PTR [ecx],bl
  40a43b:	cli    
  40a43c:	(bad)  
  40a43d:	les    ebx,FWORD PTR [esi+0x9f3f581]
  40a443:	ja     0x40a480
  40a445:	inc    ebp
  40a446:	pop    ecx
  40a447:	out    0x7e,al
  40a449:	(bad)  
  40a44a:	pop    edi
  40a44b:	or     eax,0xc163ca60
  40a450:	imul   esi,DWORD PTR [edx+0x17f5ff08],0xe3716418
  40a45a:	call   0xf040:0xf3998b
  40a461:	mov    ah,0xda
  40a463:	mov    ds:0xc4dbcc81,eax
  40a468:	jmp    0xfb6b:0x2754e929
  40a46f:	cmp    edi,DWORD PTR [eax+0x669a657c]
  40a475:	enter  0xdc0c,0xee
  40a479:	and    ecx,DWORD PTR [eax*2-0x57838195]
  40a480:	jl     0x40a47c
  40a482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a483:	pushf  
  40a484:	(bad)  
  40a485:	pusha  
  40a486:	cdq    
  40a487:	ja     0x40a430
  40a489:	lahf   
  40a48a:	inc    eax
  40a48b:	jge    0x40a462
  40a48d:	jb     0x40a490
  40a48f:	mov    al,0xf9
  40a491:	inc    edx
  40a492:	ret    0xed32
  40a495:	repz ficomp DWORD PTR [eax-0x4c]
  40a499:	imul   edi,edx,0x3d
  40a49c:	jmp    0x40a44a
  40a49e:	ins    BYTE PTR es:[edi],dx
  40a49f:	jmp    0xf0a5bd40
  40a4a4:	in     eax,0xeb
  40a4a6:	sahf   
  40a4a7:	jge    0x40a494
  40a4a9:	lock test BYTE PTR [edx],dh
  40a4ac:	xor    dh,BYTE PTR [edx-0x502fd106]
  40a4b2:	xor    eax,0x78927d00
  40a4b7:	imul   ebp,DWORD PTR [edi],0xffffff89
  40a4ba:	(bad)  
  40a4bb:	mov    ecx,0x44878b27
  40a4c0:	inc    edi
  40a4c1:	mov    dh,0x9c
  40a4c3:	aas    
  40a4c4:	stos   DWORD PTR es:[edi],eax
  40a4c5:	(bad)  
  40a4c6:	les    edx,FWORD PTR [ebp-0x58]
  40a4c9:	adc    BYTE PTR [eax],al
  40a4cb:	adc    DWORD PTR [edx+0x42f96d54],esp
  40a4d1:	adc    DWORD PTR [ebx+0x2b],ebx
  40a4d4:	ror    BYTE PTR [esi-0x3e],0x39
  40a4d8:	push   ebp
  40a4d9:	push   0x5e71a9f3
  40a4de:	jl     0x40a4ae
  40a4e0:	pushf  
  40a4e1:	in     eax,dx
  40a4e2:	fsub   st(4),st
  40a4e4:	jp     0x40a487
  40a4e6:	mov    dl,0xa6
  40a4e8:	test   eax,0x3b399d62
  40a4ed:	mov    BYTE PTR [edi+0x57],dl
  40a4f0:	in     al,dx
  40a4f1:	push   ecx
  40a4f2:	pop    ebp
  40a4f3:	push   ss
  40a4f4:	xchg   edi,eax
  40a4f5:	in     eax,0x71
  40a4f7:	jnp    0x40a562
  40a4f9:	out    dx,al
  40a4fa:	daa    
  40a4fb:	jp     0x40a493
  40a4fd:	xchg   edx,eax
  40a4fe:	clc    
  40a4ff:	js     0x40a4ba
  40a501:	enter  0x8fea,0xf9
  40a505:	aam    0x64
  40a507:	fcmove st,st(2)
  40a509:	icebp  
  40a50a:	gs inc ebx
  40a50c:	cmp    DWORD PTR [ecx+0x3057d23b],esi
  40a512:	pusha  
  40a513:	push   ds
  40a514:	cmp    al,0xa3
  40a516:	cmc    
  40a517:	ret    0x61aa
  40a51a:	jbe    0x40a553
  40a51c:	pop    esp
  40a51d:	push   ebx
  40a51e:	cs jo  0x40a4cb
  40a521:	jne    0x40a586
  40a523:	fld    QWORD PTR [eax-0x376cb370]
  40a529:	in     eax,dx
  40a52a:	cmp    bh,ch
  40a52c:	mov    al,ds:0x3e1a0f9c
  40a531:	ret    
  40a532:	(bad)  
  40a533:	jno    0x40a51c
  40a535:	es and al,0x72
  40a538:	(bad)  
  40a539:	mov    cl,0x6c
  40a53b:	test   eax,0x8b1dfab3
  40a540:	sar    esi,1
  40a542:	add    DWORD PTR [esi+0x21],edi
  40a545:	jg     0x40a4db
  40a547:	lods   al,BYTE PTR ds:[esi]
  40a548:	imul   esp,DWORD PTR [eax],0xf27ebafa
  40a54e:	mov    WORD PTR [ebx-0x2c],ss
  40a551:	imul   edx,DWORD PTR [ebp-0x6a55121c],0x6a
  40a558:	xchg   ebx,eax
  40a559:	cmp    edx,edi
  40a55b:	jecxz  0x40a4e1
  40a55d:	aaa    
  40a55e:	in     eax,dx
  40a55f:	xchg   edx,eax
  40a560:	mov    ah,0xce
  40a562:	jge    0x40a534
  40a564:	enter  0xbb28,0x38
  40a568:	dec    edx
  40a569:	lahf   
  40a56a:	xor    BYTE PTR [ecx+eiz*2+0x51dbd430],bh
  40a571:	push   eax
  40a572:	jecxz  0x40a5be
  40a574:	call   0x83582a0d
  40a579:	leave  
  40a57a:	inc    ecx
  40a57b:	cld    
  40a57c:	pop    esp
  40a57d:	mov    edi,0x60b3d044
  40a582:	shl    edx,1
  40a584:	dec    edi
  40a585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a586:	jmp    0x8b5f152e
  40a58b:	sub    esp,DWORD PTR [esi-0x35d46b4e]
  40a591:	ins    DWORD PTR es:[edi],dx
  40a592:	jns    0x40a5b6
  40a594:	push   edi
  40a595:	fmul   st(6),st
  40a597:	aad    0xc5
  40a599:	pop    edi
  40a59a:	or     edi,DWORD PTR [ecx+0x2]
  40a59d:	xchg   esp,eax
  40a59e:	dec    esp
  40a59f:	stos   DWORD PTR es:[edi],eax
  40a5a0:	adc    BYTE PTR [ebx+0x34],0x21
  40a5a4:	popf   
  40a5a5:	xchg   esp,eax
  40a5a6:	dec    esi
  40a5a7:	mov    ch,0x30
  40a5a9:	inc    ecx
  40a5aa:	stc    
  40a5ab:	mov    edx,DWORD PTR [ebx+0x2058a916]
  40a5b1:	mov    eax,0xa7c417af
  40a5b6:	in     al,0x2e
  40a5b8:	push   ecx
  40a5b9:	cwde   
  40a5ba:	dec    edi
  40a5bb:	sub    al,0x19
  40a5bd:	sub    BYTE PTR [edx-0x6f],dl
  40a5c0:	addr16 (bad) 
  40a5c3:	or     edi,edi
  40a5c5:	into   
  40a5c6:	dec    esp
  40a5c7:	je     0x40a630
  40a5c9:	mov    bl,0x44
  40a5cb:	and    al,0xb2
  40a5cd:	adc    dh,BYTE PTR [ebx+0x26]
  40a5d0:	pusha  
  40a5d1:	inc    ebx
  40a5d2:	js     0x40a5fa
  40a5d4:	add    ch,BYTE PTR [edi]
  40a5d6:	xor    BYTE PTR [eax+0x31],dh
  40a5d9:	and    ebx,DWORD PTR [esi+ecx*1-0x184d3b0f]
  40a5e0:	out    0xc6,eax
  40a5e2:	sbb    al,0x5a
  40a5e4:	and    dl,cl
  40a5e6:	dec    ecx
  40a5e7:	aad    0x7d
  40a5e9:	aad    0x95
  40a5eb:	test   eax,0x7358fa46
  40a5f0:	xor    BYTE PTR [edx-0x70],0x7e
  40a5f4:	jge    0x40a57c
  40a5f6:	rol    DWORD PTR [ebp+0x2b],1
  40a5f9:	mov    ecx,0x65f83301
  40a5fe:	dec    ebp
  40a5ff:	mov    ebp,0xd4cb6cac
  40a604:	push   esp
  40a605:	into   
  40a606:	out    dx,al
  40a607:	fimul  WORD PTR [ecx]
  40a609:	pop    edi
  40a60a:	sub    eax,0xf075fed4
  40a60f:	aas    
  40a610:	sub    eax,0x62d232d0
  40a615:	dec    edi
  40a616:	mov    BYTE PTR [esi+0x5ea78032],dl
  40a61c:	sub    DWORD PTR [esi+0x1f],0xffffffa9
  40a620:	iret   
  40a621:	dec    ebx
  40a622:	(bad)  [esp+ebx*4-0x44bfcd86]
  40a629:	push   edi
  40a62a:	inc    edi
  40a62b:	dec    ebx
  40a62c:	hlt    
  40a62d:	push   esi
  40a62e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a62f:	ins    BYTE PTR es:[edi],dx
  40a630:	je     0x40a66e
  40a632:	fstp   QWORD PTR [ebx-0x265890ae]
  40a638:	inc    ecx
  40a63a:	dec    edi
  40a63b:	xor    BYTE PTR [ecx-0x35],bl
  40a63e:	stc    
  40a63f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a640:	test   eax,0xf36dc06
  40a645:	push   ds
  40a646:	sub    al,0xe6
  40a648:	lock or esi,DWORD PTR [ebx-0x5f1c31e1]
  40a64f:	pop    edi
  40a650:	out    dx,eax
  40a651:	dec    edi
  40a652:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a653:	dec    ecx
  40a654:	fcomp  DWORD PTR [edx+0x10]
  40a657:	in     al,0x99
  40a659:	dec    edi
  40a65a:	retf   
  40a65b:	or     ah,BYTE PTR [edi-0x47]
  40a65e:	inc    ecx
  40a65f:	xchg   ebx,eax
  40a660:	mov    ss,WORD PTR [ebx+0x1b4b5518]
  40a666:	pop    esi
  40a667:	mov    bh,0x2c
  40a669:	sbb    cl,BYTE PTR [esi]
  40a66b:	es jge 0x40a683
  40a66e:	cwde   
  40a66f:	mov    al,0x2b
  40a671:	(bad)  
  40a672:	(bad)  
  40a674:	adc    esp,DWORD PTR [eax]
  40a676:	aad    0xb9
  40a678:	cwde   
  40a679:	mul    BYTE PTR [ecx-0x56]
  40a67c:	dec    edx
  40a67d:	not    DWORD PTR [edx+0x5d]
  40a680:	loope  0x40a6d3
  40a682:	test   DWORD PTR [ecx-0x68],0x79229f03
  40a689:	dec    edx
  40a68a:	sahf   
  40a68b:	pop    esp
  40a68c:	rcl    DWORD PTR [edx+ecx*4],cl
  40a68f:	sbb    DWORD PTR [edi-0x6b1aed35],ecx
  40a695:	xor    al,0xad
  40a697:	sub    al,0xdd
  40a699:	adc    eax,0xfa137df9
  40a69e:	fdivr  st(2),st
  40a6a0:	push   cs
  40a6a1:	push   di
  40a6a3:	lods   eax,DWORD PTR ds:[esi]
  40a6a4:	cmp    BYTE PTR [esi+0x74399b29],0x57
  40a6ab:	sub    eax,0xd692a9fe
  40a6b0:	sub    DWORD PTR [ebx+esi*4-0x482067c8],0x338a7f94
  40a6bb:	mov    dh,0x44
  40a6bd:	repz jg 0x40a732
  40a6c0:	ret    
  40a6c1:	notrack call DWORD PTR [ecx]
  40a6c4:	jge    0x40a6c6
  40a6c6:	push   0x7c
  40a6c8:	and    BYTE PTR gs:[ecx-0x3f2d2368],dl
  40a6cf:	cwde   
  40a6d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6d1:	xchg   ebx,eax
  40a6d2:	and    BYTE PTR gs:[eax+0x18b889da],al
  40a6d9:	push   edx
  40a6da:	lock shl BYTE PTR [esi+0x30],cl
  40a6de:	sub    DWORD PTR [ecx+0x34],esi
  40a6e1:	or     eax,0xcf2df26b
  40a6e6:	mov    bh,0x66
  40a6e8:	sti    
  40a6e9:	xchg   ebx,eax
  40a6ea:	in     al,0x93
  40a6ec:	in     al,dx
  40a6ed:	add    al,0x2f
  40a6f0:	sub    edx,DWORD PTR [esi+ebp*8+0x5]
  40a6f4:	adc    edx,DWORD PTR [eax]
  40a6f6:	pop    ebx
  40a6f7:	or     dh,al
  40a6f9:	inc    esp
  40a6fa:	and    ch,al
  40a6fc:	lds    edi,FWORD PTR [ecx-0x36ff962f]
  40a702:	add    al,0x85
  40a704:	mov    BYTE PTR [esi],bh
  40a706:	xchg   ebx,eax
  40a707:	and    BYTE PTR [ebx],0xc4
  40a70a:	retf   0xd786
  40a70d:	loop   0x40a6fd
  40a70f:	mov    al,ds:0x6bc2e2fb
  40a714:	shl    BYTE PTR [eax+0x50],1
  40a717:	aaa    
  40a718:	cli    
  40a719:	mov    ds:0xb17a97e0,al
  40a71e:	sbb    esi,DWORD PTR [esi+0x2]
  40a721:	inc    esp
  40a722:	aas    
  40a723:	enter  0x3488,0xc3
  40a727:	adc    cl,BYTE PTR [eax-0x1cd5ed91]
  40a72d:	mov    ebx,0xa66a2ea7
  40a732:	pusha  
  40a733:	cmp    eax,0x458c465b
  40a738:	pop    ebx
  40a739:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a73a:	xor    BYTE PTR [ecx+0x1f],dh
  40a73d:	mov    eax,DWORD PTR [eax-0x20a0a11c]
  40a743:	push   esp
  40a744:	cwde   
  40a745:	inc    edx
  40a746:	icebp  
  40a747:	jbe    0x40a7b4
  40a749:	push   ecx
  40a74a:	lock clc 
  40a74c:	popa   
  40a74d:	push   0xc9f70371
  40a752:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40a754:	nop
  40a755:	stc    
  40a756:	gs pop es
  40a758:	mov    eax,0x76cf4c57
  40a75d:	ins    BYTE PTR es:[edi],dx
  40a75e:	js     0x40a754
  40a760:	push   es
  40a761:	cs pusha 
  40a763:	aas    
  40a764:	inc    ecx
  40a765:	pop    ds
  40a766:	es pop ebx
  40a768:	out    dx,eax
  40a769:	fiadd  WORD PTR [ebx-0xe]
  40a76c:	sahf   
  40a76d:	sbb    DWORD PTR [edi+eax*1-0x1d],edx
  40a771:	jmp    0x370e472d
  40a776:	sub    edi,DWORD PTR [edx+ebx*4-0x71]
  40a77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a77b:	fstp   TBYTE PTR [eax-0x2440bdd2]
  40a781:	pop    edx
  40a782:	fisttp QWORD PTR [eax-0x7c60526a]
  40a788:	jmp    0x7f4b:0x359d5e91
  40a78f:	xchg   ebx,eax
  40a790:	fcmove st,st(2)
  40a792:	push   ss
  40a793:	aad    0x78
  40a795:	push   cs
  40a796:	ffree  st(3)
  40a798:	mov    edi,0x1fa61512
  40a79d:	repnz add BYTE PTR [ebx],bl
  40a7a0:	and    eax,DWORD PTR [edi]
  40a7a2:	jp     0x40a73a
  40a7a4:	sbb    bh,cl
  40a7a6:	xchg   edi,eax
  40a7a7:	fist   DWORD PTR [edi+0x6b2717a0]
  40a7ad:	(bad)
  40a7b1:	inc    ebp
  40a7b2:	into   
  40a7b3:	mov    dh,0x69
  40a7b5:	xchg   ebp,eax
  40a7b6:	mov    cl,0x58
  40a7b8:	mov    DWORD PTR [ecx+0x151b7046],ebp
  40a7be:	imul   edx,DWORD PTR [eax+0x6580608d],0xc
  40a7c5:	ror    dh,0xda
  40a7c8:	xchg   edx,eax
  40a7c9:	inc    ecx
  40a7ca:	sbb    DWORD PTR [esi],ecx
  40a7cc:	pop    es
  40a7cd:	in     eax,0x32
  40a7cf:	call   0xfac:0x62c480b0
  40a7d6:	jle    0x40a7c0
  40a7d8:	in     al,0xf9
  40a7da:	dec    esi
  40a7db:	mov    edi,0x9cf0d710
  40a7e0:	arpl   WORD PTR [ebp+ecx*4+0x5e],di
  40a7e4:	cli    
  40a7e5:	in     al,dx
  40a7e6:	retf   
  40a7e7:	sbb    al,0xa1
  40a7e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7ea:	mov    esi,0xd4a85b50
  40a7ef:	leave  
  40a7f0:	test   al,0x92
  40a7f2:	and    BYTE PTR [ecx+esi*2-0x3637b587],ch
  40a7f9:	push   ebp
  40a7fa:	xchg   BYTE PTR [edx+0x6fb8eef4],dl
  40a800:	scas   al,BYTE PTR es:[edi]
  40a801:	pop    esp
  40a802:	(bad)  
  40a803:	jle    0x40a822
  40a805:	and    al,dl
  40a807:	or     eax,0xbc8530a5
  40a80c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a80d:	(bad)  
  40a80e:	dec    ecx
  40a810:	mov    bl,0x19
  40a812:	rol    BYTE PTR [ebp-0x6d],0x3a
  40a816:	sub    ebx,DWORD PTR [esp+esi*8]
  40a819:	rcl    edi,0x32
  40a81c:	pop    edi
  40a81d:	cmc    
  40a81e:	add    edx,eax
  40a820:	cmp    BYTE PTR [ebx],0xe8
  40a823:	(bad)  
  40a824:	out    dx,eax
  40a825:	xchg   ecx,eax
  40a826:	mov    edi,0xad857058
  40a82b:	mov    BYTE PTR [ebp-0x2a758c8f],dh
  40a831:	cmc    
  40a832:	push   es
  40a833:	ret    
  40a834:	sbb    ch,al
  40a836:	mov    edx,0xb1f06134
  40a83b:	iret   
  40a83c:	cmp    edi,esp
  40a83e:	mov    eax,0x2ce1b482
  40a843:	pop    ecx
  40a844:	adc    al,0x9e
  40a846:	shr    BYTE PTR [edx+0x35],cl
  40a849:	and    DWORD PTR [ecx+0x2f],eax
  40a84c:	nop
  40a84d:	scas   al,BYTE PTR es:[edi]
  40a84e:	adc    DWORD PTR [edi+0x1f],esp
  40a851:	jg     0x40a8a9
  40a853:	jno    0x40a805
  40a855:	pop    ds
  40a856:	lock iret 
  40a858:	pusha  
  40a859:	mov    ebx,eax
  40a85b:	cmp    al,0x2
  40a85d:	push   esp
  40a85e:	fdiv   QWORD PTR [eax]
  40a860:	push   0xffffff95
  40a862:	mov    al,ds:0xbf4fd577
  40a867:	aaa    
  40a868:	js     0x40a8a8
  40a86a:	(bad)  
  40a86b:	mov    bh,0xa0
  40a86d:	mov    ebx,0x491409c0
  40a872:	mov    bl,0xd0
  40a874:	test   ecx,0x330a0689
  40a87a:	das    
  40a87b:	aad    0x14
  40a87d:	and    dl,BYTE PTR [edi]
  40a87f:	inc    esp
  40a880:	repnz mov esi,0x35cd3459
  40a886:	dec    edi
  40a887:	fwait
  40a888:	hlt    
  40a889:	(bad)
  40a88d:	(bad)  
  40a88f:	div    cl
  40a891:	sub    eax,0xaaf34e30
  40a896:	and    DWORD PTR [eax],esp
  40a898:	push   edx
  40a899:	stc    
  40a89a:	clc    
  40a89b:	pushf  
  40a89c:	imul   edx,esp,0x34
  40a89f:	mov    cl,0xb9
  40a8a1:	fsubr  QWORD PTR es:[ecx+eiz*8]
  40a8a5:	loopne 0x40a8d3
  40a8a7:	add    esp,DWORD PTR [edi+0x50]
  40a8aa:	iret   
  40a8ab:	jge    0x40a83b
  40a8ad:	test   DWORD PTR [edi],0xe1084737
  40a8b3:	fisttp WORD PTR [eax]
  40a8b5:	cld    
  40a8b6:	out    0x32,eax
  40a8b8:	or     al,0x4d
  40a8ba:	addr16 retf 0x9efe
  40a8be:	jle    0x40a8e8
  40a8c0:	sub    eax,0x40d0dd6e
  40a8c5:	mov    cl,0xd7
  40a8c7:	les    edi,FWORD PTR [edx+0x11e34ee]
  40a8cd:	xchg   ebp,eax
  40a8ce:	loopne 0x40a8c1
  40a8d0:	nop
  40a8d1:	shr    BYTE PTR [ebp+0x2b],1
  40a8d4:	and    eax,0xd1131751
  40a8d9:	dec    ebx
  40a8da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8db:	mov    dh,0x87
  40a8dd:	xchg   edx,eax
  40a8de:	pushf  
  40a8df:	mov    ebp,gs
  40a8e1:	push   esp
  40a8e2:	bound  esi,QWORD PTR [ebx-0x2]
  40a8e5:	loop   0x40a875
  40a8e7:	js     0x40a8f8
  40a8e9:	mov    ds:0xa5a17722,al
  40a8ee:	das    
  40a8ef:	aas    
  40a8f0:	jge    0x40a8a9
  40a8f2:	(bad)  
  40a8f3:	lods   eax,DWORD PTR ds:[esi]
  40a8f4:	mov    eax,0x6c23bd88
  40a8f9:	std    
  40a8fa:	xchg   edx,eax
  40a8fb:	or     eax,0xa8a87413
  40a900:	mov    WORD PTR [ebp+0x6],fs
  40a903:	retf   0xc560
  40a906:	xchg   ebx,eax
  40a907:	gs cs ins BYTE PTR es:[edi],dx
  40a90a:	inc    eax
  40a90b:	outs   dx,BYTE PTR ds:[esi]
  40a90c:	push   ebp
  40a90d:	in     al,0x6f
  40a90f:	sub    ah,ch
  40a911:	out    0x2a,al
  40a913:	into   
  40a914:	adc    BYTE PTR [eax+0xf],cl
  40a917:	outs   dx,BYTE PTR ds:[esi]
  40a918:	inc    esp
  40a919:	cwde   
  40a91a:	(bad)  
  40a91b:	test   al,0x23
  40a91d:	arpl   WORD PTR [eax-0x6f],dx
  40a920:	xor    esp,DWORD PTR [esi]
  40a922:	fs in  eax,dx
  40a924:	nop
  40a925:	popa   
  40a926:	mov    edx,0x2ecf6d4c
  40a92c:	push   edi
  40a92d:	mov    eax,0x6517e53d
  40a932:	sub    DWORD PTR [esi],esp
  40a934:	ror    bl,cl
  40a936:	jno    0x40a8e7
  40a938:	sbb    ch,BYTE PTR [esi-0x1bd60b97]
  40a93e:	mov    bl,0x98
  40a940:	cli    
  40a941:	int    0xa9
  40a943:	ss aam 0xf5
  40a946:	mov    ebp,DWORD PTR [ecx]
  40a948:	test   BYTE PTR [ebx*4-0x77993a24],dl
  40a94f:	stos   BYTE PTR es:[edi],al
  40a950:	bound  esp,QWORD PTR [ebp+edx*4+0x27c67d6d]
  40a957:	cmp    al,0xdf
  40a959:	dec    edx
  40a95a:	inc    edi
  40a95b:	out    dx,al
  40a95c:	fstp   TBYTE PTR [esi-0x15600d0f]
  40a962:	cmp    DWORD PTR [ebx+ebp*2+0x64],ebp
  40a966:	push   ebp
  40a967:	cmp    eax,0xb6be9f00
  40a96c:	jnp    0x40a98d
  40a96e:	mov    edx,0x2cd94564
  40a973:	cmp    BYTE PTR [ecx+edi*2-0x7b],bl
  40a977:	mov    al,ds:0xf85f2df3
  40a97c:	in     eax,dx
  40a97d:	cs movhlps xmm0,xmm2
  40a981:	jns    0x40a99d
  40a983:	pop    ds
  40a984:	mov    esi,0x685a63bf
  40a989:	mov    ecx,0x4d08e9b
  40a98e:	inc    edi
  40a98f:	fild   WORD PTR [eax-0x69]
  40a992:	inc    eax
  40a993:	jge    0x40a9c3
  40a995:	repnz and BYTE PTR [ebx],0xfe
  40a999:	jmp    0xe994:0x8c796a69
  40a9a0:	(bad)  
  40a9a1:	sti    
  40a9a2:	sbb    BYTE PTR [ecx-0x1513bb87],dh
  40a9a8:	push   eax
  40a9a9:	and    eax,0xbabb7633
  40a9ae:	add    eax,0x48782178
  40a9b3:	sbb    dh,BYTE PTR [ebx+0x22b14965]
  40a9b9:	jo     0x40a963
  40a9bb:	xor    ch,BYTE PTR [ebx+eiz*8-0x2c]
  40a9bf:	sar    DWORD PTR [ebx+0x2b7b0521],1
  40a9c5:	pop    ebp
  40a9c6:	xchg   ecx,eax
  40a9c7:	add    bl,ah
  40a9c9:	test   eax,0x86f9b0b
  40a9ce:	fstp   QWORD PTR [ecx+0x1a]
  40a9d1:	xor    BYTE PTR [ebx+esi*4],dh
  40a9d4:	push   cs
  40a9d5:	push   edi
  40a9d6:	dec    edi
  40a9d7:	or     ch,BYTE PTR [ebx+0x7a]
  40a9da:	inc    esi
  40a9db:	add    bl,BYTE PTR [ebp-0x3413c206]
  40a9e1:	or     DWORD PTR [edx+0x7162602e],edi
  40a9e7:	add    DWORD PTR [ecx+esi*1-0x4e],esi
  40a9eb:	fwait
  40a9ec:	jp     0x40a9e2
  40a9ee:	jno    0x40a9cb
  40a9f0:	aam    0x4a
  40a9f2:	imul   eax,DWORD PTR [edi],0xffffffc7
  40a9f5:	ret    0xfb8d
  40a9f8:	pop    ebx
  40a9f9:	call   0xffcd:0x7cd5bfa6
  40aa00:	adc    edi,0xc3ec7e1
  40aa06:	inc    ecx
  40aa07:	data16 in al,0x21
  40aa0a:	mov    edx,0x237fb4ad
  40aa0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa10:	xchg   DWORD PTR [ebp-0x49],ecx
  40aa13:	push   esp
  40aa14:	(bad)  
  40aa15:	retf   
  40aa16:	mov    eax,ds:0x9a2b5a97
  40aa1b:	enter  0x865a,0x48
  40aa1f:	jae    0x40a9d8
  40aa21:	sub    eax,0x1fbc9e3c
  40aa26:	jle    0x40aa15
  40aa28:	mov    BYTE PTR [ecx-0xd],bl
  40aa2b:	cli    
  40aa2c:	dec    ebx
  40aa2d:	mov    dl,0x6f
  40aa2f:	sar    dh,0xfe
  40aa32:	sbb    ecx,DWORD PTR [eax+0x49e35cb6]
  40aa38:	popa   
  40aa39:	into   
  40aa3a:	popa   
  40aa3b:	dec    edx
  40aa3c:	mov    esi,0x8faca94d
  40aa41:	fmulp  st(2),st
  40aa43:	jmp    DWORD PTR [ebx]
  40aa45:	retf   0xaf0a
  40aa48:	icebp  
  40aa49:	ficom  DWORD PTR [edi+0x7bf99c87]
  40aa4f:	shr    BYTE PTR [eax+esi*2],cl
  40aa52:	outs   dx,DWORD PTR ds:[esi]
  40aa53:	mov    edx,0xbb95d37
  40aa58:	pop    edx
  40aa59:	dec    esp
  40aa5a:	sahf   
  40aa5b:	xchg   esp,eax
  40aa5c:	sub    BYTE PTR [ecx],cl
  40aa5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa5f:	dec    eax
  40aa60:	scas   eax,DWORD PTR es:[edi]
  40aa61:	in     al,dx
  40aa62:	push   ds
  40aa63:	push   ecx
  40aa64:	xor    al,0x19
  40aa66:	and    BYTE PTR [eax+0xc715918],ah
  40aa6c:	sar    BYTE PTR [edi],cl
  40aa6e:	xchg   ebx,eax
  40aa6f:	imul   ecx,ebp,0xb245d0ac
  40aa75:	mov    dh,0xa0
  40aa77:	pop    ebx
  40aa78:	jns    0x40aa18
  40aa7a:	pushf  
  40aa7b:	and    al,0x44
  40aa7d:	dec    esi
  40aa7e:	sahf   
  40aa7f:	retf   0x59d9
  40aa82:	add    BYTE PTR [ecx+0x4a],dh
  40aa85:	fst    DWORD PTR [ebp-0x736b8174]
  40aa8b:	inc    ebx
  40aa8c:	mov    ebx,0xbb917d69
  40aa92:	adc    esp,ecx
  40aa94:	lea    ecx,[ecx+0x55e2967d]
  40aa9a:	sbb    BYTE PTR [edx-0x2313d668],al
  40aaa0:	sub    bh,dh
  40aaa2:	and    BYTE PTR [eax-0x742ab18d],dl
  40aaa8:	xchg   ebx,eax
  40aaa9:	cmc    
  40aaaa:	not    DWORD PTR [eax-0x44]
  40aaad:	repz jp 0x40aaa3
  40aab0:	dec    esp
  40aab1:	jl     0x40aa3a
  40aab3:	sub    edx,eax
  40aab5:	gs es add al,0xf5
  40aab9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aaba:	fwait
  40aabb:	jmp    DWORD PTR [esi-0xa]
  40aabe:	ss gs mov ss,esp
  40aac2:	mov    bl,0xee
  40aac4:	repz shld DWORD PTR [edi-0x16],esi,0xf1
  40aaca:	jmp    0x2a1a712b
  40aacf:	pop    ebp
  40aad0:	push   0x5
  40aad2:	imul   dl
  40aad4:	xor    ebx,ebp
  40aad6:	pop    edx
  40aad7:	test   eax,0x55427049
  40aadc:	dec    edx
  40aadd:	sub    al,0xae
  40aadf:	cwde   
  40aae0:	mov    cl,0x5b
  40aae2:	adc    BYTE PTR [eax+0x56],ah
  40aae5:	add    eax,0x26920f5c
  40aaea:	cmc    
  40aaeb:	es pop edx
  40aaed:	mov    WORD PTR [eax+0x1e],cs
  40aaf0:	pop    esi
  40aaf1:	iret   
  40aaf2:	pop    esi
  40aaf3:	aas    
  40aaf4:	xchg   esp,eax
  40aaf5:	dec    ecx
  40aaf6:	inc    edi
  40aaf7:	jne    0x40aa8f
  40aaf9:	mov    es,WORD PTR [ecx-0x6d]
  40aafc:	jecxz  0x40aa99
  40aafe:	jmp    0x177d6265
  40ab03:	test   eax,0xad599304
  40ab08:	mov    ss,edi
  40ab0a:	mov    al,BYTE PTR [edi-0x39]
  40ab0d:	mov    ds:0xbe1141f9,eax
  40ab12:	inc    eax
  40ab13:	lods   al,BYTE PTR ds:[esi]
  40ab14:	rol    BYTE PTR [ebx+eiz*8-0xa7cabf4],1
  40ab1b:	daa    
  40ab1c:	in     eax,dx
  40ab1d:	gs icebp 
  40ab1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab20:	(bad)  
  40ab21:	adc    BYTE PTR [eax-0x5b],dh
  40ab24:	je     0x40ab13
  40ab26:	jbe    0x40aab9
  40ab28:	mov    al,ds:0x2d721cc0
  40ab2d:	into   
  40ab2e:	xor    al,0x15
  40ab30:	(bad)  
  40ab31:	test   bh,0x8d
  40ab34:	or     eax,0x71e04351
  40ab39:	aam    0x69
  40ab3b:	out    0x5f,eax
  40ab3d:	add    cl,BYTE PTR [edx-0x2fb16f8b]
  40ab43:	push   0xea33cfa7
  40ab48:	retf   
  40ab49:	fst    QWORD PTR [edi]
  40ab4b:	cmp    BYTE PTR [ecx+0x4f],0xda
  40ab4f:	je     0x40ab3a
  40ab51:	call   0x760e56c4
  40ab56:	inc    eax
  40ab57:	imul   esi,DWORD PTR [edi],0xffffffd7
  40ab5a:	fs add al,0x5c
  40ab5d:	xchg   BYTE PTR ds:0xf0da5620,ah
  40ab63:	push   cs
  40ab64:	sar    edi,cl
  40ab66:	adc    BYTE PTR [ebp+ecx*4-0x7d],al
  40ab6a:	mov    dh,0xdc
  40ab6c:	cmp    al,0x23
  40ab6e:	test   eax,0x2e1e804
  40ab73:	jle    0x40ab22
  40ab75:	add    al,0x51
  40ab77:	pop    ecx
  40ab78:	cs cli 
  40ab7a:	dec    ebp
  40ab7b:	loop   0x40abe0
  40ab7d:	pop    es
  40ab7e:	imul   ecx,DWORD PTR [ebx-0x2],0xe33fc4a3
  40ab85:	test   DWORD PTR [edx-0x47],edx
  40ab88:	pusha  
  40ab89:	(bad)
  40ab8d:	push   ecx
  40ab8e:	jb     0x40ab50
  40ab90:	cmp    ebx,DWORD PTR ds:0x97f6d04f
  40ab96:	pushf  
  40ab97:	cdq    
  40ab98:	mov    dl,0x24
  40ab9a:	cdq    
  40ab9b:	fnstcw WORD PTR [edx]
  40ab9d:	xchg   ecx,eax
  40ab9e:	sub    bl,BYTE PTR [edx]
  40aba0:	js     0x40abc3
  40aba2:	xor    BYTE PTR [ebp+0x1f3bf329],al
  40aba8:	cmc    
  40aba9:	adc    eax,ecx
  40abab:	add    DWORD PTR [edi-0x421f31ce],esi
  40abb1:	lock add cl,BYTE PTR [edx-0x14]
  40abb5:	retf   0xb0d9
  40abb8:	bound  edi,QWORD PTR ss:0xc972c1bc
  40abbf:	mov    ecx,0xe94f4511
  40abc4:	es push esp
  40abc6:	xchg   BYTE PTR [ebp+0x32],ch
  40abc9:	adc    esi,0x2f
  40abcc:	or     eax,0x20b6fe25
  40abd1:	cli    
  40abd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abd3:	and    cl,ch
  40abd5:	push   ecx
  40abd6:	mov    ebp,ebp
  40abd8:	push   cs
  40abd9:	scas   al,BYTE PTR es:[edi]
  40abda:	daa    
  40abdb:	and    eax,0x8c488cb7
  40abe0:	repnz loope 0x40aba7
  40abe3:	ins    BYTE PTR es:[edi],dx
  40abe4:	or     ch,dh
  40abe6:	lock sbb ecx,ebp
  40abe9:	push   bx
  40abeb:	or     bl,BYTE PTR [esi]
  40abed:	pop    ebx
  40abee:	(bad)  
  40abef:	test   al,0xed
  40abf1:	mov    WORD PTR [ebx],ss
  40abf3:	das    
  40abf4:	iret   
  40abf5:	cli    
  40abf6:	inc    edi
  40abf7:	jge    0x40ab99
  40abf9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abfa:	enter  0x7134,0x61
  40abfe:	add    BYTE PTR [edx-0x2bc2f329],bl
  40ac04:	mov    WORD PTR [ebp+0x2c],cs
  40ac07:	adc    ebp,esi
  40ac09:	pushf  
  40ac0a:	or     eax,0x2c73d8a3
  40ac0f:	pop    ecx
  40ac10:	pop    ebp
  40ac11:	mov    bl,0xd4
  40ac13:	jae    0x40abae
  40ac15:	and    dl,BYTE PTR [ebp-0x65]
  40ac18:	xor    BYTE PTR [ebp+0x7c],dl
  40ac1b:	sbb    bh,BYTE PTR [esi]
  40ac1d:	cmp    BYTE PTR [esp+ebx*2],cl
  40ac20:	outs   dx,DWORD PTR ds:[esi]
  40ac21:	xchg   DWORD PTR [esi-0x1be4de07],eax
  40ac27:	(bad)  
  40ac28:	mov    edx,DWORD PTR [ebx-0x7b6436a5]
  40ac2e:	das    
  40ac2f:	jb     0x40ac7f
  40ac31:	jl     0x40ac62
  40ac33:	push   edi
  40ac34:	mov    ?,WORD PTR [ebp+edi*4+0x7c]
  40ac38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac39:	imul   eax,DWORD PTR [edx],0x1cfdd84c
  40ac3f:	repz shr DWORD PTR [eax-0x7ca5a3bb],1
  40ac46:	inc    ebp
  40ac47:	inc    ebp
  40ac48:	and    dl,BYTE PTR [ecx]
  40ac4a:	inc    BYTE PTR [edx+0x40a22957]
  40ac50:	cmp    eax,0x2d91c152
  40ac55:	jo     0x40acc5
  40ac57:	out    dx,eax
  40ac58:	xchg   ebp,eax
  40ac59:	mov    edx,cs
  40ac5b:	jbe    0x40ac3f
  40ac5d:	cmp    BYTE PTR [esi+0x7aca7c2d],ch
  40ac63:	jne    0x40ac05
  40ac65:	sub    eax,0xb1fac9e6
  40ac6a:	pop    edi
  40ac6b:	or     BYTE PTR [ecx],ch
  40ac6d:	in     al,dx
  40ac6e:	sub    DWORD PTR [ebp+0x68],0xffffffaa
  40ac72:	shl    DWORD PTR [ebp+0xc],cl
  40ac75:	xchg   ebx,eax
  40ac76:	mov    esi,esp
  40ac78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac79:	inc    edi
  40ac7a:	jno    0x40ac66
  40ac7c:	in     al,dx
  40ac7d:	dec    edx
  40ac7e:	mov    ebp,0x8461647
  40ac83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac84:	loop   0x40acb1
  40ac86:	cli    
  40ac87:	lahf   
  40ac88:	inc    edx
  40ac89:	xor    al,0x14
  40ac8b:	push   eax
  40ac8c:	pop    eax
  40ac8d:	mov    ?,WORD PTR [ecx-0x4a]
  40ac90:	lock and al,0x51
  40ac93:	out    dx,eax
  40ac94:	dec    ebx
  40ac95:	sub    edx,eax
  40ac97:	(bad)  
  40ac98:	in     al,0x3
  40ac9a:	pop    ss
  40ac9b:	mov    WORD PTR [ecx-0x74],gs
  40ac9e:	retf   
  40ac9f:	pop    ebx
  40aca0:	call   0x93481bbf
  40aca5:	mov    eax,0x2e1fbe44
  40acaa:	adc    cl,BYTE PTR [eax+0x18]
  40acad:	addr16 cs lock mov bh,0xa6
  40acb2:	inc    edi
  40acb3:	sub    al,BYTE PTR [edx-0x77]
  40acb6:	imul   edi,DWORD PTR [esi+0x27],0xfffffffe
  40acba:	xchg   ebp,eax
  40acbb:	cli    
  40acbc:	shr    DWORD PTR [eax-0x508481c4],0x83
  40acc3:	in     al,0x65
  40acc5:	pusha  
  40acc6:	dec    esp
  40acc7:	mov    esp,0xdd1bc03
  40accc:	cwde   
  40accd:	inc    edx
  40acce:	sysret 
  40acd0:	xlat   BYTE PTR ds:[ebx]
  40acd1:	hlt    
  40acd2:	mov    ds,WORD PTR [edi-0x39]
  40acd5:	pop    ds
  40acd6:	leave  
  40acd7:	leave  
  40acd8:	push   eax
  40acd9:	pop    ds
  40acda:	aam    0x6a
  40acdc:	repnz and esp,eax
  40acdf:	jae    0x40acd2
  40ace1:	and    dh,BYTE PTR [esi+0x4d]
  40ace4:	mov    ebx,0x4ad68067
  40ace9:	xchg   ecx,eax
  40acea:	stc    
  40aceb:	mov    fs,WORD PTR [edi+0x602bec15]
  40acf1:	mov    WORD PTR ds:0x44e375c2,cs
  40acf7:	pop    edx
  40acf8:	mov    ebp,0x3f0403ea
  40acfd:	mov    DWORD PTR [eax+0x4b],esi
  40ad00:	cld    
  40ad01:	mov    eax,DWORD PTR [ebp+0x2dda858f]
  40ad07:	sbb    edx,DWORD PTR ds:0xbdcb0950
  40ad0d:	bound  eax,QWORD PTR [edi+edx*4]
  40ad10:	test   edx,edx
  40ad12:	sbb    al,0xab
  40ad14:	xor    DWORD PTR [edx+0xa],eax
  40ad17:	dec    ecx
  40ad18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad19:	call   0xc009:0xae19d1a8
  40ad20:	iret   
  40ad21:	clc    
  40ad22:	jae    0x40ad68
  40ad24:	lds    esi,FWORD PTR [esi+0x5b13e142]
  40ad2a:	mov    ecx,0x231b5d1b
  40ad2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad30:	fdiv   QWORD PTR [eax]
  40ad32:	inc    ebx
  40ad33:	arpl   WORD PTR [edx+0x2e7de392],si
  40ad39:	pop    ecx
  40ad3a:	cmp    eax,0x931fbd04
  40ad3f:	in     al,0x11
  40ad41:	mov    esp,DWORD PTR [esi+0x65]
  40ad44:	mov    bh,bl
  40ad46:	mov    ah,0x80
  40ad48:	in     al,0xed
  40ad4a:	js     0x40aced
  40ad4c:	cmc    
  40ad4d:	jge    0x40ad9f
  40ad4f:	push   cs
  40ad50:	push   eax
  40ad51:	inc    eax
  40ad52:	mov    ah,dh
  40ad54:	scas   al,BYTE PTR es:[edi]
  40ad55:	mov    dl,0x8a
  40ad57:	and    ah,BYTE PTR [ecx+0x10ad45ce]
  40ad5d:	(bad)  
  40ad5f:	cmp    DWORD PTR [esi-0x1c],0xbf762649
  40ad66:	test   DWORD PTR ds:0xa4c3d8fc,0xf9cc9439
  40ad70:	int    0xa7
  40ad72:	pushf  
  40ad73:	jp     0x40ad5f
  40ad75:	cld    
  40ad76:	jge    0x40add1
  40ad78:	add    eax,0x6a53198b
  40ad7d:	mov    ebp,0x7f7bfe9
  40ad82:	dec    ebp
  40ad83:	aaa    
  40ad84:	xchg   ecx,eax
  40ad85:	out    0xe6,al
  40ad87:	gs jne 0x40ad0c
  40ad8a:	or     al,0x69
  40ad8d:	scas   eax,DWORD PTR es:[edi]
  40ad8e:	fild   QWORD PTR [esi-0x1e]
  40ad91:	inc    ecx
  40ad92:	pop    edx
  40ad93:	fs inc esp
  40ad95:	or     BYTE PTR [edi-0x7003917e],bh
  40ad9b:	ins    BYTE PTR es:[edi],dx
  40ad9c:	out    dx,al
  40ad9d:	enter  0x9df3,0x14
  40ada1:	call   0x2ae5:0xb621dde1
  40ada8:	mov    edx,0x428f3219
  40adad:	sar    BYTE PTR [eax],1
  40adaf:	or     DWORD PTR [edi+0x4e],esp
  40adb2:	mov    al,0xb3
  40adb4:	push   edx
  40adb5:	xchg   edi,eax
  40adb6:	imul   esi,eax,0x78
  40adb9:	or     DWORD PTR [ebx-0x66071ddf],edx
  40adbf:	mov    WORD PTR [edi-0x15],ds
  40adc2:	imul   ecx,eax,0x10b898b2
  40adc8:	jg     0x40adf8
  40adca:	repnz ds int 0x5a
  40adce:	enter  0x3315,0x45
  40add2:	dec    ebx
  40add3:	mov    edi,?
  40add5:	push   ss
  40add6:	fldenv [eax]
  40add8:	sti    
  40add9:	arpl   WORD PTR [edx+0x7398a209],dx
  40addf:	xchg   ecx,eax
  40ade0:	pop    ds
  40ade1:	stos   DWORD PTR es:[edi],eax
  40ade2:	das    
  40ade3:	add    eax,0x3937d3e1
  40ade8:	mov    bh,0x55
  40adea:	or     edx,DWORD PTR [edx]
  40adec:	dec    esp
  40aded:	sbb    DWORD PTR [eax],eax
  40adef:	rcl    DWORD PTR [eax-0x304a7cc3],0x93
  40adf6:	jge    0x40ae21
  40adf8:	stos   DWORD PTR es:[edi],eax
  40adf9:	call   0xd9822688
  40adfe:	push   cs
  40adff:	neg    BYTE PTR [edi+esi*8-0x13aeec35]
  40ae06:	or     DWORD PTR [eax],esi
  40ae08:	stos   BYTE PTR es:[edi],al
  40ae09:	or     esi,edi
  40ae0b:	inc    edx
  40ae0c:	dec    ebx
  40ae0d:	int3   
  40ae0e:	cmc    
  40ae0f:	cmp    DWORD PTR [edi+0x7a],0x9375a650
  40ae16:	sahf   
  40ae17:	sbb    eax,0x5d035285
  40ae1c:	pop    esi
  40ae1d:	inc    edi
  40ae1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae1f:	repnz mov ebp,0x58251646
  40ae25:	pop    ds
  40ae26:	scas   eax,DWORD PTR es:[edi]
  40ae27:	fistp  DWORD PTR [esi-0x1e]
  40ae2a:	mov    edi,0x7d4d489c
  40ae2f:	mov    edx,0x3be78c55
  40ae34:	push   ebp
  40ae35:	xchg   DWORD PTR [edx],ebp
  40ae37:	jbe    0x40ae41
  40ae39:	repnz add al,BYTE PTR ds:0x776f035c
  40ae40:	push   0xef94416c
  40ae45:	mov    dl,0x60
  40ae47:	fs push 0x44da6c94
  40ae4d:	popf   
  40ae4e:	outs   dx,DWORD PTR ds:[esi]
  40ae4f:	stos   BYTE PTR es:[edi],al
  40ae50:	ins    BYTE PTR es:[edi],dx
  40ae51:	pop    esp
  40ae52:	enter  0x91fe,0xac
  40ae56:	mov    ecx,0x35071772
  40ae5b:	lahf   
  40ae5c:	out    0x75,al
  40ae5e:	xchg   esp,eax
  40ae5f:	mov    ecx,0x5cd8996a
  40ae64:	cmp    esp,DWORD PTR [edi-0x3121d28f]
  40ae6a:	loop   0x40adfa
  40ae6c:	xlat   BYTE PTR ds:[ebx]
  40ae6d:	add    eax,DWORD PTR [edi+0x3e]
  40ae70:	iret   
  40ae71:	pop    ds
  40ae72:	mov    ?,WORD PTR [edx-0x6f0cba78]
  40ae78:	lahf   
  40ae79:	jno    0x40aea3
  40ae7b:	push   ss
  40ae7c:	fimul  WORD PTR [edx+0x2c]
  40ae7f:	scas   eax,DWORD PTR es:[edi]
  40ae80:	dec    ebx
  40ae81:	mov    dl,0xc8
  40ae83:	pusha  
  40ae84:	dec    edx
  40ae85:	ror    BYTE PTR [edi-0x5de904fa],1
  40ae8b:	sti    
  40ae8c:	fidiv  DWORD PTR [eiz*1-0xb93d8f6]
  40ae93:	dec    eax
  40ae94:	push   cs
  40ae95:	push   ds
  40ae96:	xor    BYTE PTR [esi+0x5dbe944e],ch
  40ae9c:	xchg   esi,eax
  40ae9d:	add    DWORD PTR [ebx+ebp*8-0x2b373ace],ebp
  40aea4:	push   ss
  40aea5:	pop    esp
  40aea6:	pop    ecx
  40aea7:	repnz mov bh,0x89
  40aeaa:	add    al,0x8a
  40aeac:	mov    eax,DWORD PTR [ebp-0xc]
  40aeaf:	mov    ecx,DWORD PTR [ebp+0x8]
  40aeb2:	xor    eax,esi
  40aeb4:	lea    eax,[eax+ecx*1+0x3272f8]
  40aebb:	mov    DWORD PTR [ebp+0x8],eax
  40aebe:	mov    eax,DWORD PTR [ebp-0xc]
  40aec1:	mov    ecx,DWORD PTR [ebp+0x14]
  40aec4:	xor    eax,esi
  40aec6:	add    eax,edi
  40aec8:	imul   eax,DWORD PTR [ecx]
  40aecb:	mov    ecx,DWORD PTR [ebp-0x4]
  40aece:	mov    edx,DWORD PTR [ebp+0x8]
  40aed1:	xor    ecx,esi
  40aed3:	jmp    0x40d273
  40aed8:	mov    WORD PTR [esi+edi*8+0x6c5d2edd],ds
  40aedf:	out    dx,al
  40aee0:	fwait
  40aee1:	push   edx
  40aee2:	(bad)  
  40aee3:	xor    ebx,DWORD PTR [esi-0x537d9d2d]
  40aee9:	or     BYTE PTR [ebx+0x7b],bh
  40aeec:	(bad)  
  40aeed:	sahf   
  40aeee:	jnp    0x40af6b
  40aef0:	jmp    0x515debdc
  40aef5:	ret    
  40aef6:	and    BYTE PTR [esi-0x35daf4d4],al
  40aefc:	mov    ah,0xf4
  40aefe:	cdq    
  40aeff:	add    al,0x4a
  40af01:	(bad)
  40af05:	xor    DWORD PTR [edi],ecx
  40af07:	xchg   edi,eax
  40af08:	stos   BYTE PTR es:[edi],al
  40af09:	jo     0x40af2d
  40af0b:	sub    eax,0x777370e4
  40af10:	ret    0x15d9
  40af13:	aam    0x16
  40af15:	add    al,0x9f
  40af17:	dec    edi
  40af18:	adc    ecx,esp
  40af1a:	ret    0x4063
  40af1d:	mov    dl,0xd2
  40af1f:	daa    
  40af20:	seta   BYTE PTR [edi]
  40af23:	xchg   DWORD PTR [ebx+0x707fc789],esi
  40af29:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af2b:	pop    edi
  40af2c:	and    DWORD PTR ds:0xfea009ea,edi
  40af32:	les    ebp,FWORD PTR [ebx-0x2fc72ac0]
  40af38:	jl     0x40af9e
  40af3a:	aad    0xb1
  40af3c:	push   ebx
  40af3d:	add    DWORD PTR [ecx-0x1f67b967],esi
  40af43:	cmp    eax,0x81feb2e7
  40af48:	in     al,0xcc
  40af4a:	push   ss
  40af4b:	and    al,0xc3
  40af4d:	mov    ch,0xfa
  40af4f:	sub    eax,0x69cf4ff5
  40af54:	adc    eax,0xbaaa7938
  40af59:	(bad)  
  40af5a:	add    BYTE PTR [esi-0x37e0028a],cl
  40af60:	lahf   
  40af61:	fwait
  40af62:	inc    edx
  40af63:	mov    ds:0x49526729,eax
  40af68:	fisttp QWORD PTR gs:[ecx]
  40af6b:	add    al,BYTE PTR [ecx+0x50efd917]
  40af71:	cld    
  40af72:	dec    esi
  40af73:	fiadd  WORD PTR [edi]
  40af75:	push   ebx
  40af76:	(bad)  
  40af78:	add    al,0x20
  40af7a:	xchg   esi,eax
  40af7b:	cli    
  40af7c:	popa   
  40af7d:	sub    DWORD PTR [ebp-0x6],edi
  40af80:	fisubr DWORD PTR [ebp-0x6c]
  40af83:	mov    esi,0x1dff51a
  40af88:	(bad)  
  40af8a:	inc    ecx
  40af8b:	fstp   st(0)
  40af8d:	jnp    0x40af33
  40af8f:	xchg   BYTE PTR [eax-0x1a],dh
  40af92:	and    eax,0x88fbea49
  40af97:	jns    0x40aff5
  40af99:	mov    esp,0xd61d4325
  40af9e:	cdq    
  40af9f:	jmp    0xb22b:0x5ee6ed7a
  40afa6:	push   0xffffff88
  40afa8:	dec    esp
  40afa9:	sahf   
  40afaa:	int    0x7a
  40afac:	mov    dh,0xc9
  40afae:	stos   DWORD PTR es:[edi],eax
  40afaf:	fwait
  40afb0:	inc    ecx
  40afb1:	or     eax,0x8dc8ee3b
  40afb6:	cdq    
  40afb7:	xchg   BYTE PTR [ebx+0x13a8ae4b],dh
  40afbd:	out    0x24,eax
  40afbf:	(bad)  
  40afc0:	jmp    0x40af8a
  40afc2:	jge    0x40af61
  40afc4:	inc    edi
  40afc5:	in     eax,0x82
  40afc7:	daa    
  40afc8:	rcr    ebx,1
  40afca:	loopne 0x40af87
  40afcc:	call   DWORD PTR [edi]
  40afce:	aas    
  40afcf:	cmp    BYTE PTR [esi],ch
  40afd1:	mov    ds:0x4a17bdbf,eax
  40afd6:	push   ds
  40afd7:	stc    
  40afd8:	in     eax,0xc5
  40afda:	test   dh,bh
  40afdc:	xchg   ebx,eax
  40afdd:	or     ebx,ecx
  40afdf:	enter  0xa08c,0xcf
  40afe3:	sbb    eax,0xaf3ab57a
  40afe8:	and    BYTE PTR [edx+eax*2],bh
  40afeb:	xchg   ebx,eax
  40afec:	add    dl,bl
  40afee:	push   esp
  40afef:	mov    fs,edx
  40aff1:	aaa    
  40aff2:	fisttp WORD PTR [edi+0x6e]
  40aff5:	in     al,dx
  40aff6:	xor    ch,dh
  40aff8:	cs stos DWORD PTR es:[edi],eax
  40affa:	aad    0xa5
  40affc:	mov    ebp,0xee523559
  40b001:	into   
  40b002:	repnz int3 
  40b004:	xor    al,0x58
  40b006:	jnp    0x40afe0
  40b008:	mov    ss,WORD PTR [eax-0x5d]
  40b00b:	inc    ebp
  40b00c:	add    ch,0x58
  40b00f:	in     al,dx
  40b010:	fwait
  40b011:	dec    eax
  40b012:	jmp    0xfa696c62
  40b017:	mov    al,0xc6
  40b019:	pop    ecx
  40b01a:	jae    0x40b071
  40b01c:	pop    ds
  40b01d:	jl     0x40b08f
  40b01f:	inc    esp
  40b020:	and    ebx,esp
  40b022:	mov    ebp,0x6274ce0a
  40b027:	addr16 inc esp
  40b029:	(bad)  
  40b02a:	push   ebx
  40b02b:	dec    ebp
  40b02c:	test   DWORD PTR ds:0x277cb1e3,0xeae4b244
  40b036:	pop    edi
  40b037:	jmp    0x2af6:0xc2b1cc30
  40b03e:	out    0x62,al
  40b040:	je     0x40b0bb
  40b042:	popa   
  40b043:	ins    BYTE PTR es:[edi],dx
  40b044:	dec    ebp
  40b045:	jmp    0x40b0a0
  40b047:	xchg   ebx,eax
  40b048:	sub    dh,BYTE PTR [ebp-0x4d]
  40b04b:	outs   dx,BYTE PTR ds:[esi]
  40b04c:	cs sub eax,0xd79f7a33
  40b052:	int3   
  40b053:	cdq    
  40b054:	pop    esi
  40b055:	pop    es
  40b056:	mov    dh,0x99
  40b058:	fld    QWORD PTR [eax]
  40b05a:	mov    dl,0x6
  40b05c:	mov    esi,0x51b29d7e
  40b061:	fdivr  DWORD PTR [ecx-0x11]
  40b064:	xchg   ebx,eax
  40b065:	xchg   edi,eax
  40b066:	fistp  DWORD PTR [eax-0x72]
  40b069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b06a:	scas   al,BYTE PTR es:[edi]
  40b06b:	xor    ch,ch
  40b06d:	mov    esp,0x45faea2a
  40b072:	jae    0x40b019
  40b074:	(bad)  
  40b076:	jo     0x40b0c0
  40b078:	push   eax
  40b079:	lock (bad) 
  40b07b:	push   0x2e
  40b07d:	sbb    DWORD PTR [ebx],eax
  40b07f:	not    eax
  40b081:	retf   
  40b082:	pop    ecx
  40b083:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b084:	mov    edi,DWORD PTR [ebp+0x4c349f39]
  40b08a:	rcl    BYTE PTR ds:0x2ae3cc6b,0x68
  40b091:	pop    es
  40b092:	jbe    0x40b0cf
  40b094:	jo     0x40b078
  40b096:	js     0x40b029
  40b098:	les    esi,FWORD PTR [edi]
  40b09a:	adc    DWORD PTR [eax],ebx
  40b09c:	sub    esi,DWORD PTR [edx-0x14a70b84]
  40b0a2:	iret   
  40b0a3:	mov    al,0xaf
  40b0a5:	push   ebx
  40b0a6:	lods   al,BYTE PTR ds:[esi]
  40b0a7:	dec    eax
  40b0a8:	lock xchg edx,eax
  40b0aa:	inc    ebx
  40b0ab:	ja     0x40b0fc
  40b0ad:	sahf   
  40b0ae:	inc    ebx
  40b0af:	cli    
  40b0b0:	dec    eax
  40b0b1:	inc    esp
  40b0b2:	out    dx,eax
  40b0b3:	sbb    eax,DWORD PTR [esi-0x24]
  40b0b6:	and    bh,BYTE PTR [ecx]
  40b0b8:	push   ebx
  40b0b9:	fdiv   st,st(4)
  40b0bb:	mov    eax,ds:0xc8310006
  40b0c0:	push   0x97ee86ae
  40b0c5:	mov    ah,0xab
  40b0c7:	fild   WORD PTR ds:0x173f6e3f
  40b0cd:	dec    ebp
  40b0ce:	xchg   edx,ecx
  40b0d0:	dec    ebp
  40b0d1:	je     0x40b0ae
  40b0d3:	xor    eax,DWORD PTR [eax-0x50]
  40b0d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0d7:	enter  0xee1d,0x56
  40b0db:	daa    
  40b0dc:	xchg   bh,dh
  40b0de:	fcom   QWORD PTR [edx+0x5f]
  40b0e1:	popa   
  40b0e2:	mov    eax,0x3d6a074a
  40b0e7:	cmp    dh,bh
  40b0e9:	inc    ebx
  40b0ea:	and    eax,0x4e0b3a9b
  40b0ef:	in     al,dx
  40b0f0:	imul   esp,ebp,0x2e84d7b3
  40b0f6:	(bad)  
  40b0f7:	js     0x40b0ae
  40b0f9:	inc    ecx
  40b0fa:	pusha  
  40b0fb:	xor    DWORD PTR [eax-0x5f],0x60fc61d5
  40b102:	cmp    ah,BYTE PTR [edi+ecx*1+0x388e8b14]
  40b109:	push   0xffffffdd
  40b10b:	ss retf 
  40b10d:	cmp    eax,0x9838833e
  40b112:	dec    edi
  40b113:	retf   0x3ac6
  40b116:	outs   dx,BYTE PTR ds:[esi]
  40b117:	fs out 0x72,al
  40b11a:	call   0xde61:0x60706fe6
  40b121:	and    DWORD PTR [edx],0xfffffffe
  40b124:	cwde   
  40b125:	xor    eax,0xc2c83e86
  40b12a:	(bad)  
  40b12b:	fadd   st(5),st
  40b12d:	fdiv   st(2),st
  40b12f:	leave  
  40b130:	add    BYTE PTR [ebx+0x471dd428],ah
  40b136:	vpsrlq xmm2,xmm0,XMMWORD PTR [eax-0x78]
  40b13b:	bound  esi,QWORD PTR [esi+0xaf69bd4]
  40b141:	jl     0x40b1ac
  40b143:	ret    0x6a68
  40b146:	dec    ecx
  40b147:	arpl   WORD PTR ds:0x3dff645f,sp
  40b14d:	icebp  
  40b14e:	adc    BYTE PTR [edx-0x4c],dh
  40b151:	ret    0xf2ab
  40b154:	je     0x40b16a
  40b156:	dec    ebx
  40b157:	fcmove st,st(1)
  40b159:	mov    edx,0x87d1d6d5
  40b15e:	jno    0x40b1b2
  40b160:	pusha  
  40b161:	dec    eax
  40b162:	xlat   BYTE PTR ds:[ebx]
  40b163:	xchg   esp,esp
  40b165:	push   ebp
  40b166:	das    
  40b167:	pop    ss
  40b168:	xchg   DWORD PTR [edx-0x8],ebx
  40b16b:	mov    ds:0x342ef7a4,eax
  40b170:	xchg   esi,eax
  40b171:	sbb    al,0xcc
  40b173:	dec    ebp
  40b174:	adc    ch,BYTE PTR [ebp+0x65]
  40b177:	add    eax,0xa5af4718
  40b17c:	and    BYTE PTR [ebx-0x79d0bca6],cl
  40b182:	sub    DWORD PTR [ebp+0x3],eax
  40b185:	(bad)  
  40b188:	push   esi
  40b189:	push   ecx
  40b18a:	fcmovne st,st(7)
  40b18c:	xchg   BYTE PTR [ecx+0x14f71b23],dl
  40b192:	loop   0x40b147
  40b194:	push   eax
  40b195:	mov    esi,0x24d07698
  40b19a:	in     al,dx
  40b19b:	sahf   
  40b19c:	cmp    BYTE PTR [ecx+0x7a],al
  40b19f:	adc    eax,0x5236ce74
  40b1a4:	jg     0x40b14a
  40b1a6:	mov    DWORD PTR [ebp+0x24],esp
  40b1a9:	aad    0xa9
  40b1ab:	mov    esp,0x8066a94c
  40b1b0:	and    eax,0x241632a5
  40b1b5:	inc    ebp
  40b1b6:	cmovns ebp,DWORD PTR [ecx+ebp*4+0x2f]
  40b1bb:	mov    al,0x12
  40b1be:	mov    ch,0x89
  40b1c0:	lds    edi,FWORD PTR [ebx-0x14a7e012]
  40b1c6:	lods   eax,DWORD PTR ds:[esi]
  40b1c7:	jo     0x40b1ff
  40b1c9:	fldlg2 
  40b1cb:	mov    esi,0x77658c44
  40b1d0:	call   0x41f1:0xd263de4a
  40b1d7:	or     DWORD PTR [edx+0x36],ebx
  40b1da:	push   esi
  40b1db:	pop    edi
  40b1dc:	aad    0x2f
  40b1de:	stos   DWORD PTR es:[edi],eax
  40b1df:	enter  0x2765,0x32
  40b1e3:	xchg   esp,eax
  40b1e4:	ins    BYTE PTR es:[edi],dx
  40b1e5:	push   esp
  40b1e6:	mov    cs,WORD PTR [ebp+0x4f]
  40b1e9:	(bad)  
  40b1ea:	lahf   
  40b1eb:	push   ss
  40b1ec:	adc    cl,BYTE PTR [esi+0x4fd675d9]
  40b1f2:	mov    bh,0x36
  40b1f4:	int3   
  40b1f5:	xor    ebx,DWORD PTR [ebx+0x68]
  40b1f8:	and    DWORD PTR [ebx],0xdfca3712
  40b1fe:	push   ds
  40b1ff:	adc    al,0xd0
  40b201:	cmp    al,0xd
  40b203:	idiv   cl
  40b205:	dec    ecx
  40b206:	fucomp st(7)
  40b208:	imul   esi,DWORD PTR [edi+edi*1+0x27],0xffffffe6
  40b20d:	imul   ecx,edx,0xd937a61f
  40b213:	lahf   
  40b214:	pop    esp
  40b215:	fld    DWORD PTR [eax+0x4e1cd50f]
  40b21b:	je     0x40b228
  40b21d:	xor    bl,BYTE PTR ds:0xa13f9882
  40b223:	fistp  WORD PTR [ecx-0x57]
  40b226:	jmp    0x3fd87fd1
  40b22b:	es xor ax,bx
  40b22f:	pop    ebp
  40b230:	inc    esi
  40b231:	dec    ebp
  40b232:	(bad)  
  40b233:	int    0x17
  40b235:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b236:	xor    BYTE PTR [ecx+0x59f0fdc3],cl
  40b23c:	xchg   ecx,eax
  40b23d:	cmp    BYTE PTR [edi-0x35eced7b],cl
  40b243:	js     0x40b276
  40b245:	push   ebx
  40b246:	fstp   TBYTE PTR ds:0xbcde4f35
  40b24c:	shl    BYTE PTR [ebx-0x76c50238],cl
  40b252:	add    DWORD PTR [ecx+0x73],0xbb262b60
  40b259:	xchg   esp,eax
  40b25a:	ds sub edi,edx
  40b25d:	jb     0x40b271
  40b25f:	push   ebp
  40b260:	das    
  40b261:	jmp    0x40b29e
  40b263:	pop    ecx
  40b264:	jg     0x40b251
  40b266:	push   esp
  40b267:	pop    esi
  40b268:	not    DWORD PTR [ebx]
  40b26a:	call   0xcb6d:0x9e68d6ae
  40b271:	int    0x7
  40b273:	imul   esi,ebp,0x5659c36b
  40b279:	mov    al,0x45
  40b27b:	imul   ebp,DWORD PTR [edx],0xc
  40b27e:	ret    
  40b27f:	lods   al,BYTE PTR ds:[esi]
  40b280:	and    BYTE PTR [ebx+0x2901d4ef],al
  40b286:	sar    DWORD PTR ds:0xb404dd7,0xea
  40b28d:	and    ebx,ecx
  40b28f:	sti    
  40b290:	ficom  WORD PTR [ebx+0x18]
  40b293:	lods   al,BYTE PTR ds:[esi]
  40b294:	stos   DWORD PTR es:[edi],eax
  40b295:	das    
  40b296:	jmp    0x37940b75
  40b29b:	mov    es,WORD PTR [ebx]
  40b29d:	jmp    0x2753:0x12cf5d7e
  40b2a4:	mov    al,0x6c
  40b2a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b2a7:	in     al,0x26
  40b2a9:	xchg   DWORD PTR [esi-0x6c],edi
  40b2ac:	push   es
  40b2ad:	stos   DWORD PTR es:[edi],eax
  40b2ae:	mov    eax,0x6bb0e6a6
  40b2b3:	ja     0x40b2cb
  40b2b5:	ret    
  40b2b6:	loope  0x40b2da
  40b2b8:	outs   dx,DWORD PTR ds:[esi]
  40b2b9:	out    0x36,eax
  40b2bb:	pop    ds
  40b2bc:	inc    ebp
  40b2bd:	jmp    0x6725e226
  40b2c2:	mov    dh,0xb3
  40b2c4:	sub    DWORD PTR [eax+0x3afcbdb3],ebx
  40b2ca:	je     0x40b296
  40b2cc:	dec    ebx
  40b2cd:	jns    0x40b2d4
  40b2cf:	stos   BYTE PTR es:[edi],al
  40b2d0:	ja     0x40b2b1
  40b2d2:	sahf   
  40b2d3:	mov    ah,0x57
  40b2d5:	gs and esi,edx
  40b2d8:	(bad)  
  40b2d9:	pusha  
  40b2da:	(bad)  
  40b2db:	in     eax,0xd3
  40b2dd:	jmp    0x40b278
  40b2df:	stc    
  40b2e0:	and    bl,ah
  40b2e2:	jns    0x40b2a4
  40b2e4:	and    eax,DWORD PTR [ecx-0x24474d74]
  40b2ea:	sbb    bl,ah
  40b2ec:	xchg   edx,eax
  40b2ed:	cmp    DWORD PTR [edx+eiz*1-0x7f],eax
  40b2f1:	push   edx
  40b2f2:	pop    ebx
  40b2f3:	loop   0x40b366
  40b2f5:	sub    esi,edx
  40b2f7:	mov    ah,0x29
  40b2f9:	jae    0x40b2a2
  40b2fb:	mov    bl,0xec
  40b2fd:	out    0xfb,al
  40b2ff:	mov    WORD PTR [edx],?
  40b301:	dec    edi
  40b302:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b303:	lds    ebx,FWORD PTR [eax+0x22]
  40b306:	adc    al,0x63
  40b308:	pop    ds
  40b309:	(bad)  
  40b30a:	loope  0x40b388
  40b30c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b30d:	pop    edx
  40b30e:	dec    ebp
  40b30f:	icebp  
  40b310:	add    BYTE PTR [edx-0x3e242052],ch
  40b316:	in     eax,dx
  40b317:	cmp    al,0x30
  40b319:	fist   WORD PTR [edi-0x78]
  40b31c:	sub    BYTE PTR [edi+0x17],al
  40b31f:	sub    esp,eax
  40b321:	mov    ecx,0xa216b0a4
  40b326:	(bad)  
  40b327:	lods   al,BYTE PTR ds:[esi]
  40b328:	out    0x38,al
  40b32a:	js     0x40b2ce
  40b32c:	xor    DWORD PTR [edx],ebx
  40b32e:	dec    edx
  40b32f:	fld    QWORD PTR [edi-0x3f115bc7]
  40b335:	xor    al,dh
  40b337:	cwde   
  40b338:	mov    eax,0xf8f80632
  40b33d:	cld    
  40b33e:	dec    ebp
  40b33f:	(bad)  
  40b340:	gs (bad) 
  40b342:	pop    esp
  40b343:	std    
  40b344:	stos   BYTE PTR es:[edi],al
  40b345:	cmp    al,0x85
  40b347:	dec    edx
  40b348:	add    eax,0xc7a2c72b
  40b34d:	icebp  
  40b34e:	out    0x1,eax
  40b350:	ficomp DWORD PTR [ecx+0x6c]
  40b353:	std    
  40b354:	adc    eax,0xce91627
  40b359:	adc    DWORD PTR [edx-0x4a19f863],ebx
  40b35f:	inc    edx
  40b360:	stc    
  40b361:	xchg   edx,eax
  40b362:	cmc    
  40b363:	mov    WORD PTR [ebx-0x43],gs
  40b366:	mov    WORD PTR [edi+0x14],?
  40b369:	mov    edi,0x7747b399
  40b36e:	cwde   
  40b36f:	or     DWORD PTR [edi],ebp
  40b371:	xor    ch,BYTE PTR [ebx+0x438dc890]
  40b377:	out    dx,eax
  40b378:	inc    esi
  40b379:	jae    0x40b3ac
  40b37b:	(bad)
  40b37e:	mov    ebx,0x40e64e6b
  40b383:	pusha  
  40b384:	loop   0x40b36b
  40b386:	xchg   edi,eax
  40b387:	inc    esi
  40b388:	sub    DWORD PTR [eax],eax
  40b38a:	out    0x87,al
  40b38c:	out    0x25,al
  40b38e:	popa   
  40b38f:	je     0x40b3ac
  40b391:	add    dl,BYTE PTR cs:[ebp+esi*8+0x6e412415]
  40b399:	les    edi,FWORD PTR [edi-0x25]
  40b39c:	lods   al,BYTE PTR ds:[esi]
  40b39d:	jge    0x40b3a6
  40b39f:	out    0x11,eax
  40b3a1:	and    DWORD PTR [ebp-0x36],0x61864276
  40b3a8:	sub    DWORD PTR [esi-0xa3d05c9],ebp
  40b3ae:	dec    BYTE PTR [ebx-0x2a83d050]
  40b3b4:	or     eax,0x8a6d4cb3
  40b3b9:	jl     0x40b3d8
  40b3bb:	sub    BYTE PTR ds:0xd32a1db,dh
  40b3c1:	mov    al,0xad
  40b3c3:	or     al,0x79
  40b3c5:	mov    DWORD PTR [ebp+ecx*1+0x11ca7414],0x1a1f593f
  40b3d0:	xor    BYTE PTR [edi+0x37],dl
  40b3d3:	out    0xae,eax
  40b3d5:	pusha  
  40b3d6:	fs ret 
  40b3d8:	in     al,dx
  40b3d9:	push   eax
  40b3da:	sub    al,0x21
  40b3dc:	shl    BYTE PTR [edi],1
  40b3de:	fcom   st(4)
  40b3e0:	sub    eax,DWORD PTR [ebx-0x75453a4a]
  40b3e6:	ret    
  40b3e7:	inc    edx
  40b3e8:	pushf  
  40b3e9:	pushf  
  40b3ea:	cwde   
  40b3eb:	push   ecx
  40b3ec:	icebp  
  40b3ed:	leave  
  40b3ee:	xor    DWORD PTR [ebx+0x23d1af57],esi
  40b3f4:	jle    0x40b3dc
  40b3f6:	stc    
  40b3f7:	je     0x40b447
  40b3f9:	dec    edi
  40b3fa:	psllw  mm2,QWORD PTR [eax]
  40b3fd:	icebp  
  40b3fe:	pop    esi
  40b3ff:	in     eax,dx
  40b400:	mov    cl,cl
  40b402:	inc    ecx
  40b403:	ja     0x40b45d
  40b405:	or     BYTE PTR [edx+0x7e2de209],al
  40b40b:	sbb    DWORD PTR [eax-0xf],ebp
  40b40e:	jmp    0x40b412
  40b410:	das    
  40b411:	aam    0xa5
  40b413:	jecxz  0x40b3f1
  40b415:	ins    DWORD PTR es:[edi],dx
  40b416:	cdq    
  40b417:	pusha  
  40b418:	aaa    
  40b419:	sbb    al,0xa4
  40b41b:	test   ebp,esp
  40b41d:	test   eax,0xc6fc931f
  40b422:	int    0x8e
  40b424:	sub    al,BYTE PTR [edx-0x46135e6b]
  40b42a:	mov    eax,ds:0xf704f2c5
  40b42f:	xor    BYTE PTR [ebp+0x65b3a70],bl
  40b435:	sbb    esi,ebp
  40b437:	retf   
  40b438:	hlt    
  40b439:	xor    eax,DWORD PTR [ebx]
  40b43b:	fwait
  40b43c:	xor    edx,DWORD PTR [eax]
  40b43e:	test   BYTE PTR [esi],0x39
  40b441:	rcr    ebp,0xe3
  40b444:	xchg   esi,eax
  40b445:	fdiv   QWORD PTR [esi+0x74]
  40b448:	ficomp WORD PTR [ecx+0x5223d982]
  40b44e:	addr16 mov bl,0x55
  40b451:	add    al,0xf7
  40b453:	adc    DWORD PTR [eax],eax
  40b455:	mov    al,0x15
  40b457:	addr16 int3 
  40b459:	jo     0x40b4c8
  40b45b:	jge    0x40b400
  40b45d:	es mov ebp,ds
  40b460:	add    dl,dh
  40b462:	cmp    DWORD PTR [edx+0x4e],ecx
  40b465:	ss arpl cx,dx
  40b468:	pop    ds
  40b469:	imul   esp
  40b46b:	mov    bl,0xc6
  40b46d:	inc    edi
  40b46e:	(bad)  
  40b46f:	push   ds
  40b470:	scas   al,BYTE PTR es:[edi]
  40b471:	mov    dl,0x6e
  40b473:	int    0x40
  40b475:	jg     0x40b400
  40b477:	std    
  40b478:	lahf   
  40b479:	jmp    0x5108:0x7af68ebe
  40b480:	dec    esp
  40b481:	fdiv   DWORD PTR [edi+ebp*2-0x35]
  40b485:	movaps xmm5,XMMWORD PTR [ebp+0x32a8457d]
  40b48c:	scas   al,BYTE PTR es:[edi]
  40b48d:	sbb    eax,0xc54c3659
  40b492:	cmp    ah,ah
  40b494:	arpl   WORD PTR [ebx-0x34],si
  40b497:	mov    edx,0x4a00a370
  40b49c:	pop    ebx
  40b49d:	sub    DWORD PTR [eax-0x664ee3b6],esi
  40b4a3:	(bad)  
  40b4a5:	dec    BYTE PTR [edi]
  40b4a7:	lea    edx,[edx]
  40b4a9:	xor    al,0x49
  40b4ab:	or     esp,DWORD PTR [edi+0x20a54256]
  40b4b1:	adc    edx,DWORD PTR [bp+0x66]
  40b4b5:	in     al,dx
  40b4b6:	cdq    
  40b4b7:	sbb    ah,dl
  40b4b9:	(bad)  
  40b4ba:	fld    QWORD PTR ds:0xa499708
  40b4c0:	call   DWORD PTR [ecx]
  40b4c2:	pusha  
  40b4c3:	pop    ebx
  40b4c4:	fxam   
  40b4c6:	cmc    
  40b4c7:	ins    DWORD PTR es:[edi],dx
  40b4c8:	push   edi
  40b4c9:	mov    ch,0x9
  40b4cb:	or     al,0x51
  40b4cd:	sar    BYTE PTR [ebp-0x77],0xeb
  40b4d1:	div    BYTE PTR [ebp-0x5c]
  40b4d4:	pop    esi
  40b4d5:	popa   
  40b4d6:	dec    ebp
  40b4d7:	adc    ebp,DWORD PTR [esp+esi*2+0x1c2f89f6]
  40b4de:	or     al,0xc5
  40b4e0:	je     0x40b4a1
  40b4e2:	fs cwde 
  40b4e4:	xor    DWORD PTR [ebp+0x22],ebx
  40b4e7:	int    0x56
  40b4e9:	jecxz  0x40b54a
  40b4eb:	jns    0x40b55f
  40b4ed:	xor    eax,DWORD PTR [edx-0x62]
  40b4f0:	mov    bl,0x3c
  40b4f2:	das    
  40b4f3:	mov    ebp,fs
  40b4f5:	dec    edx
  40b4f6:	cmp    al,0x54
  40b4f8:	adc    esp,ebx
  40b4fa:	xor    bl,al
  40b4fc:	loope  0x40b4cd
  40b4fe:	aad    0x5d
  40b500:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b501:	sbb    BYTE PTR [edi+esi*8],al
  40b504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b505:	in     al,0x81
  40b507:	or     bl,BYTE PTR [edi]
  40b509:	je     0x40b4f5
  40b50b:	loopne 0x40b54d
  40b50d:	inc    esi
  40b50e:	scas   eax,DWORD PTR es:[edi]
  40b50f:	mov    DWORD PTR [ebx+ebp*8-0x638293a2],edx
  40b516:	jecxz  0x40b4f3
  40b518:	jg     0x40b4d2
  40b51a:	inc    edi
  40b51b:	jge    0x40b546
  40b51d:	loopne 0x40b569
  40b51f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b520:	inc    esp
  40b521:	xchg   BYTE PTR [ebx+0x694dce28],dl
  40b527:	pop    edi
  40b528:	mov    esi,0x670aa253
  40b52d:	int    0x69
  40b52f:	cs dec esp
  40b531:	in     eax,dx
  40b532:	jnp    0x40b585
  40b534:	aad    0xe4
  40b536:	mov    cl,0x47
  40b538:	mov    ebp,0x95b41c5
  40b53d:	or     ecx,esp
  40b53f:	inc    edx
  40b540:	pusha  
  40b541:	fst    st(4)
  40b543:	iret   
  40b544:	cld    
  40b545:	jnp    0x40b505
  40b547:	sti    
  40b548:	sbb    DWORD PTR [ebp+edx*8+0x1b],edx
  40b54c:	hlt    
  40b54d:	and    eax,0x7e522aba
  40b552:	ja     0x40b5ba
  40b554:	pop    esi
  40b555:	dec    eax
  40b556:	outs   dx,BYTE PTR ds:[esi]
  40b557:	pop    ebx
  40b558:	jmp    0x5308:0xc449c65d
  40b55f:	xchg   ecx,eax
  40b560:	iret   
  40b561:	xchg   ebx,eax
  40b562:	sbb    BYTE PTR [ebp+0x69],ah
  40b565:	(bad)  
  40b566:	mov    esp,0xbc28d5a7
  40b56b:	call   FWORD PTR es:[esi-0x32]
  40b56f:	pop    ss
  40b570:	dec    esi
  40b571:	ins    BYTE PTR es:[edi],dx
  40b572:	pop    esp
  40b573:	jb     0x40b563
  40b575:	ss mov cl,0x8b
  40b578:	inc    edx
  40b579:	bound  esp,QWORD PTR [edi-0x4826aed6]
  40b57f:	(bad)  
  40b580:	icebp  
  40b581:	shr    BYTE PTR [ecx],1
  40b583:	push   es
  40b584:	stos   BYTE PTR es:[edi],al
  40b585:	retf   
  40b586:	aas    
  40b587:	out    dx,al
  40b588:	ficom  DWORD PTR [edx]
  40b58a:	(bad)  
  40b58b:	mov    ebp,0x54798f79
  40b590:	stc    
  40b591:	test   bh,al
  40b593:	(bad)  
  40b594:	enter  0xe74a,0xc3
  40b598:	sbb    BYTE PTR [ebx],dh
  40b59a:	ret    0x267f
  40b59d:	psubq  mm4,mm1
  40b5a0:	wbinvd 
  40b5a2:	mov    DWORD PTR [esi+eax*1-0x25],0xc7c58ee1
  40b5aa:	add    eax,0x258952cd
  40b5af:	mov    eax,DWORD PTR [ebp-0x284b1c03]
  40b5b5:	pcmpgtd mm7,QWORD PTR [esi+0x56]
  40b5b9:	ss stos DWORD PTR es:[edi],eax
  40b5bb:	mov    dh,0x13
  40b5bd:	or     ah,BYTE PTR [esi-0x5a]
  40b5c0:	data16 add BYTE PTR [edx-0x7],al
  40b5c4:	add    DWORD PTR ds:0x527cb4f,esp
  40b5ca:	retf   
  40b5cb:	pop    esi
  40b5cc:	js     0x40b5c2
  40b5ce:	sub    esi,DWORD PTR [esp+edi*1+0x3ba8a737]
  40b5d5:	mov    BYTE PTR [ebx],al
  40b5d7:	rcl    BYTE PTR [eax+0x6c],1
  40b5da:	enter  0x8de3,0xc3
  40b5de:	cmp    BYTE PTR [edx+0x409bc864],dl
  40b5e4:	dec    edx
  40b5e5:	das    
  40b5e6:	lods   al,BYTE PTR ds:[esi]
  40b5e7:	pop    ds
  40b5e8:	stos   BYTE PTR es:[edi],al
  40b5e9:	hlt    
  40b5ea:	pop    ss
  40b5eb:	jge    0x40b5ca
  40b5ed:	std    
  40b5ee:	bound  edx,QWORD PTR [ecx+0x32]
  40b5f1:	rcr    DWORD PTR [ecx-0x6f],1
  40b5f4:	retf   0x28e5
  40b5f7:	(bad)  [edx-0x35278741]
  40b5fd:	jne    0x40b621
  40b5ff:	lock cdq 
  40b601:	pop    eax
  40b602:	or     DWORD PTR [esi-0x78],esp
  40b605:	lods   al,BYTE PTR ds:[esi]
  40b606:	ds test al,0xdf
  40b609:	icebp  
  40b60a:	and    DWORD PTR [esi+edi*2-0x7c],0xa22eb1d1
  40b612:	cdq    
  40b613:	popf   
  40b614:	imul   edi,DWORD PTR [eax],0x45
  40b617:	adc    eax,0x1b234972
  40b61c:	das    
  40b61d:	dec    ebp
  40b61e:	dec    ebx
  40b61f:	xor    bl,ah
  40b621:	cld    
  40b622:	repz mov ch,BYTE PTR [ecx]
  40b625:	aam    0x35
  40b627:	out    0xfe,eax
  40b629:	jp     0x40b5d3
  40b62b:	test   esi,edx
  40b62d:	mov    cl,0x81
  40b62f:	les    edx,FWORD PTR [edi-0x3f]
  40b632:	imul   eax,DWORD PTR [edx+0x3b390674],0x705e5500
  40b63c:	and    al,0xba
  40b63e:	fcmovnu st,st(1)
  40b640:	pop    es
  40b641:	push   0x4f
  40b643:	dec    ebx
  40b644:	out    dx,al
  40b645:	push   esp
  40b646:	ds leave 
  40b648:	fs jl  0x40b65a
  40b64b:	in     al,dx
  40b64c:	dec    ebp
  40b64d:	cwde   
  40b64e:	jne    0x40b697
  40b650:	mov    al,0x44
  40b652:	and    DWORD PTR [ebx],esi
  40b654:	ror    DWORD PTR [ecx+0x146dfcda],1
  40b65a:	adc    DWORD PTR [ebx+0x1e1a443c],edx
  40b660:	mov    esp,0xccb01d9b
  40b665:	cmp    eax,0x82e8013d
  40b66a:	inc    ebx
  40b66b:	push   esi
  40b66c:	aam    0x35
  40b66e:	jo     0x40b6df
  40b670:	sub    bl,BYTE PTR [edx-0x31]
  40b673:	not    DWORD PTR [edi-0x54]
  40b676:	cli    
  40b677:	mov    al,0xe8
  40b679:	ins    BYTE PTR es:[edi],dx
  40b67a:	xchg   edi,eax
  40b67b:	inc    edi
  40b67c:	or     BYTE PTR [esi+ecx*4-0x17c8be1],0x66
  40b684:	mov    ch,0x14
  40b686:	mov    esi,0xb6383970
  40b68b:	sub    ecx,ebx
  40b68d:	push   ebx
  40b68e:	(bad)
  40b691:	dec    ebx
  40b692:	pusha  
  40b693:	rol    DWORD PTR [ecx+eiz*2+0x6a],0x7c
  40b698:	fwait
  40b699:	mov    ecx,0x59ceff7c
  40b69e:	add    dh,BYTE PTR [edi+ecx*1]
  40b6a1:	sub    ah,BYTE PTR ds:0x275f6a6f
  40b6a7:	jb     0x40b6d6
  40b6a9:	fdiv   DWORD PTR [esi+0x36]
  40b6ac:	pop    eax
  40b6ad:	jle    0x40b653
  40b6af:	pop    ds
  40b6b0:	jo     0x40b68b
  40b6b2:	cli    
  40b6b3:	rcl    ebp,cl
  40b6b5:	ins    DWORD PTR es:[edi],dx
  40b6b6:	mov    ebp,0x7c8c06b6
  40b6bb:	mov    ds:0x62e048f8,eax
  40b6c0:	aas    
  40b6c1:	add    bl,cl
  40b6c3:	cmp    eax,0x35b76bd5
  40b6c8:	je     0x40b69c
  40b6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6cb:	mov    ds:0x95325618,eax
  40b6d0:	pushf  
  40b6d1:	dec    eax
  40b6d2:	inc    edx
  40b6d3:	mov    al,ds:0x59ec9da6
  40b6d8:	or     BYTE PTR [esi],bh
  40b6da:	aam    0xf3
  40b6dc:	jo     0x40b711
  40b6de:	inc    ecx
  40b6df:	not    al
  40b6e1:	leave  
  40b6e2:	jno    0x40b730
  40b6e4:	loop   0x40b752
  40b6e6:	aad    0x49
  40b6e8:	lds    esi,FWORD PTR ds:0xe26eb72c
  40b6ee:	int3   
  40b6ef:	scas   al,BYTE PTR es:[edi]
  40b6f0:	fwait
  40b6f1:	mov    ds:0x4c860e1a,al
  40b6f6:	inc    edi
  40b6f7:	test   al,0xab
  40b6f9:	gs mov dh,0x29
  40b6fc:	addr16 imul edx,eax,0xffffffef
  40b700:	out    0xaa,eax
  40b702:	clc    
  40b703:	jecxz  0x40b6cb
  40b705:	loop   0x40b6d7
  40b707:	or     eax,0xcd100413
  40b70c:	push   cs
  40b70d:	cmp    eax,0x4aa7589b
  40b712:	cmp    BYTE PTR [ebx+0x138888ee],0xc3
  40b719:	inc    edx
  40b71a:	jmp    0x40b729
  40b71c:	stos   BYTE PTR es:[edi],al
  40b71d:	add    DWORD PTR [edi],ebx
  40b71f:	mov    eax,0x4ee93e34
  40b724:	ja     0x40b755
  40b726:	sbb    al,0xf6
  40b728:	fsubr  st,st(6)
  40b72a:	scas   eax,DWORD PTR es:[edi]
  40b72b:	int    0xe2
  40b72d:	adc    BYTE PTR [ebx+0x48dc20c1],0x97
  40b734:	ds or  ebx,ebp
  40b737:	or     eax,0x2ee79041
  40b73c:	repnz sbb bl,BYTE PTR [eax+0x55fce804]
  40b743:	sbb    DWORD PTR [edx+0x63],edx
  40b746:	call   0xcf9f:0x9f38e252
  40b74d:	inc    esi
  40b74e:	xor    DWORD PTR [edi+0x7ccb2bab],esp
  40b754:	mov    edx,0x2094c47d
  40b759:	(bad)  
  40b75a:	mov    al,ds:0x4d84d820
  40b75f:	popa   
  40b760:	add    BYTE PTR [edi+0x19d08fca],bl
  40b766:	jne    0x40b70d
  40b768:	xlat   BYTE PTR ds:[ebx]
  40b769:	test   BYTE PTR [esi+0x1a],dh
  40b76c:	or     BYTE PTR [edx+0x2d562f28],dl
  40b772:	push   ds
  40b773:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b774:	mov    bl,0xdc
  40b776:	icebp  
  40b777:	imul   BYTE PTR [ebx-0x36]
  40b77a:	rcl    ebp,1
  40b77c:	mov    cs,WORD PTR [eiz*2+0x33fde05a]
  40b783:	push   esi
  40b784:	mov    DWORD PTR ds:0x38430396,eax
  40b78a:	jb     0x40b801
  40b78c:	push   esi
  40b78d:	jnp    0x40b751
  40b78f:	rcl    DWORD PTR [eax+eax*1+0x79],0x75
  40b794:	push   0xf0c1d66
  40b799:	aad    0x9a
  40b79b:	adc    BYTE PTR [ebx],0x2a
  40b79e:	loope  0x40b7ce
  40b7a0:	sbb    al,0xc9
  40b7a2:	pop    edi
  40b7a3:	inc    edx
  40b7a4:	cmc    
  40b7a5:	adc    eax,0xfc78eb8b
  40b7aa:	cdq    
  40b7ab:	jbe    0x40b79c
  40b7ad:	jmp    0x3c1ad66c
  40b7b2:	jmp    0x40b7ed
  40b7b4:	pop    ds
  40b7b5:	pop    esp
  40b7b6:	cmp    bl,bh
  40b7b8:	test   BYTE PTR [ecx+0x6532984d],dh
  40b7be:	sbb    edi,DWORD PTR [ebx+edi*2-0x731cfd1]
  40b7c5:	outs   dx,DWORD PTR ds:[esi]
  40b7c6:	mov    edx,0x14b12203
  40b7cb:	xlat   BYTE PTR ds:[ebx]
  40b7cc:	and    DWORD PTR [edx-0x22],ecx
  40b7cf:	mov    esp,0x715599b2
  40b7d4:	in     eax,0xd
  40b7d6:	add    al,0xa7
  40b7d8:	and    eax,0x8aea7b4a
  40b7dd:	jle    0x40b7d3
  40b7df:	mov    bh,0xaf
  40b7e1:	adc    DWORD PTR [eax+0x7c],ebp
  40b7e4:	sbb    ch,cl
  40b7e6:	int3   
  40b7e7:	jmp    0x40b82d
  40b7e9:	sti    
  40b7ea:	shl    BYTE PTR [edx+0x5efadc7e],cl
  40b7f0:	dec    esi
  40b7f1:	xor    BYTE PTR [ebp+edi*2+0x265ec5e0],dh
  40b7f8:	rol    DWORD PTR [eax],cl
  40b7fa:	xchg   edi,eax
  40b7fb:	mov    DWORD PTR [edx],ebx
  40b7fd:	ins    DWORD PTR es:[edi],dx
  40b7fe:	sub    esp,DWORD PTR [esi+0x5a]
  40b801:	or     edi,DWORD PTR [edi-0x14408b3d]
  40b807:	mov    bh,BYTE PTR [esi]
  40b809:	push   ss
  40b80a:	not    BYTE PTR [esi+0x41a88ce2]
  40b810:	add    al,BYTE PTR [edi]
  40b812:	pusha  
  40b813:	xor    DWORD PTR [esi+0x19],edx
  40b816:	out    0xee,eax
  40b818:	mov    ch,BYTE PTR [eax]
  40b81a:	sti    
  40b81b:	hlt    
  40b81c:	pop    ss
  40b81d:	jp     0x40b834
  40b81f:	mov    al,BYTE PTR [edx]
  40b821:	and    ah,BYTE PTR [esi-0x275f0ea5]
  40b827:	mov    cl,0x1a
  40b829:	jno    0x40b86e
  40b82b:	add    DWORD PTR [ebp+ebx*4-0x1894de30],edx
  40b832:	add    dh,BYTE PTR [ebx+ebp*8]
  40b835:	xor    eax,0x2b99ba0b
  40b83a:	jns    0x40b858
  40b83c:	and    BYTE PTR [edi+0x51cec29],al
  40b842:	stos   DWORD PTR es:[edi],eax
  40b843:	sub    ecx,ebx
  40b845:	and    ch,0x11
  40b848:	fiadd  DWORD PTR [ebx]
  40b84a:	vpunpckldq xmm4,xmm2,XMMWORD PTR [edx+0x1fb1e244]
  40b852:	out    0x79,al
  40b854:	adc    esp,ebp
  40b856:	aad    0x18
  40b858:	jns    0x40b89a
  40b85a:	test   BYTE PTR [ecx+0x2f],ah
  40b85d:	inc    esi
  40b85e:	push   cs
  40b85f:	pop    ebp
  40b860:	out    dx,al
  40b861:	mov    cl,0x67
  40b863:	push   ss
  40b864:	test   al,0x31
  40b866:	arpl   WORD PTR [ecx],ax
  40b868:	ins    DWORD PTR es:[edi],dx
  40b869:	sbb    ebp,DWORD PTR [esi-0x4f]
  40b86c:	mov    dl,0xb1
  40b86e:	sub    ebp,DWORD PTR fs:[edx-0x320451b7]
  40b875:	mov    dh,0x85
  40b877:	push   esp
  40b878:	pop    eax
  40b879:	fisttp DWORD PTR [eax]
  40b87b:	and    eax,DWORD PTR [esi]
  40b87d:	sub    eax,0xe7b77494
  40b882:	add    DWORD PTR [eax],esi
  40b884:	mov    ecx,0x5a688ec
  40b889:	in     al,dx
  40b88a:	in     eax,0xec
  40b88c:	sub    BYTE PTR [ebx-0x4436c69],0x58
  40b893:	test   eax,0x91371e74
  40b898:	sbb    esi,DWORD PTR [ecx-0x68a6f415]
  40b89e:	add    dl,BYTE PTR [eax+0x66]
  40b8a1:	sahf   
  40b8a2:	and    al,0x18
  40b8a4:	dec    ebx
  40b8a5:	fwait
  40b8a6:	les    esp,FWORD PTR [ecx]
  40b8a8:	and    BYTE PTR [edi],dl
  40b8aa:	push   es
  40b8ab:	ret    0x43b5
  40b8ae:	mov    edx,0x85fa8d13
  40b8b3:	dec    ebp
  40b8b4:	sub    eax,0x866450fb
  40b8b9:	and    al,0xc9
  40b8bb:	(bad)  
  40b8bc:	in     eax,dx
  40b8bd:	cmp    al,0xd1
  40b8bf:	es pop es
  40b8c1:	sub    al,0x30
  40b8c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8c4:	sub    ch,BYTE PTR [ebp-0x77]
  40b8c7:	mov    ebx,0xdc98dbf9
  40b8cc:	sbb    ebx,DWORD PTR [eax+0x222fe55e]
  40b8d2:	or     BYTE PTR [ebp+0x1c],0xe7
  40b8d6:	push   0x814b692
  40b8db:	mov    esi,0xc32c6ca1
  40b8e0:	in     eax,dx
  40b8e1:	in     eax,dx
  40b8e2:	xchg   esi,eax
  40b8e3:	sub    al,0x45
  40b8e5:	xchg   ecx,eax
  40b8e6:	sbb    BYTE PTR [ebx+0x4502cca8],ch
  40b8ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ed:	ficom  DWORD PTR [ebx]
  40b8ef:	js     0x40b8c5
  40b8f1:	xlat   BYTE PTR ds:[ebx]
  40b8f2:	dec    edi
  40b8f3:	test   DWORD PTR [ebp+0x89ff9b3],ebx
  40b8f9:	mov    cl,0xc5
  40b8fb:	retf   0x5c0c
  40b8fe:	cmp    ecx,DWORD PTR [ecx+0x6182a7ee]
  40b904:	sti    
  40b905:	cmp    eax,DWORD PTR [ebx+0x718688b4]
  40b90b:	fs dec edx
  40b90d:	fs xchg edx,eax
  40b90f:	add    BYTE PTR [edx-0x68],bh
  40b912:	in     eax,dx
  40b913:	jmp    0xc53c7bd9
  40b918:	fwait
  40b919:	mov    ds:0xce0f3dd4,al
  40b91e:	cmp    al,0x63
  40b920:	ret    
  40b921:	adc    BYTE PTR [ebp+0x6a],al
  40b924:	dec    ecx
  40b925:	stc    
  40b926:	mov    ah,0x19
  40b928:	out    0xec,eax
  40b92a:	jo     0x40b994
  40b92c:	xchg   esp,eax
  40b92d:	shl    DWORD PTR ds:0x629bf502,0x7
  40b934:	xchg   DWORD PTR [edi],edi
  40b936:	bound  edx,QWORD PTR [esi]
  40b938:	out    0xd,al
  40b93a:	xor    eax,0xd8a01001
  40b93f:	jae    0x40b928
  40b941:	dec    esi
  40b942:	ret    
  40b943:	pusha  
  40b944:	lds    edx,FWORD PTR [ebx]
  40b946:	ret    
  40b947:	dec    ebp
  40b948:	(bad)  
  40b949:	cmp    eax,0x4036914f
  40b94e:	fs jnp 0x40b952
  40b951:	gs adc al,0xe8
  40b954:	(bad)
  40b957:	mov    ds:0x6b73838a,al
  40b95c:	in     eax,dx
  40b95d:	leave  
  40b95e:	cmp    esp,0x46
  40b961:	and    esp,DWORD PTR [ebp-0x8cffe34]
  40b967:	or     eax,0x4a32f31d
  40b96c:	addr16 in al,0xdc
  40b96f:	dec    eax
  40b970:	ins    DWORD PTR es:[edi],dx
  40b971:	sub    edi,ecx
  40b973:	jnp    0x40b946
  40b975:	pop    es
  40b976:	ss rol esi,1
  40b979:	pop    edi
  40b97a:	popf   
  40b97b:	sbb    eax,0x13e70f53
  40b980:	icebp  
  40b981:	loopne 0x40b90c
  40b983:	push   ecx
  40b984:	and    al,dl
  40b986:	mov    ebp,0x2b2e67c8
  40b98b:	outs   dx,DWORD PTR ds:[esi]
  40b98c:	je     0x40b9e5
  40b98e:	jmp    0x2269:0xec876fad
  40b995:	bnd ret 0x7850
  40b999:	push   0x31d0ed3d
  40b99e:	sub    esp,edi
  40b9a0:	sub    edx,DWORD PTR [esi+0x46]
  40b9a3:	dec    ebp
  40b9a4:	sub    eax,DWORD PTR [ebx]
  40b9a6:	dec    edx
  40b9a7:	sbb    ah,BYTE PTR [edi]
  40b9a9:	xchg   DWORD PTR [ebx],eax
  40b9ab:	mov    bl,0x46
  40b9ad:	lods   eax,DWORD PTR ds:[esi]
  40b9ae:	jno    0x40b9c0
  40b9b0:	mov    DWORD PTR [ebx+0x20],eax
  40b9b3:	sub    DWORD PTR [esi],edx
  40b9b5:	add    DWORD PTR [esi],0x24d0f940
  40b9bb:	push   ebp
  40b9bc:	inc    edx
  40b9bd:	movups xmm0,XMMWORD PTR [edx]
  40b9c0:	jb     0x40b9a7
  40b9c2:	div    DWORD PTR [ebx+0x24]
  40b9c5:	icebp  
  40b9c6:	pop    ecx
  40b9c7:	fmul   QWORD PTR [esi+0x1c]
  40b9ca:	(bad)  
  40b9cb:	fcmovne st,st(1)
  40b9cd:	pop    ds
  40b9ce:	sahf   
  40b9cf:	loopne 0x40ba2e
  40b9d1:	add    BYTE PTR [ebp-0x4c22e634],ch
  40b9d7:	sub    eax,0xfe182f6a
  40b9dc:	mov    edi,0x92d793ef
  40b9e1:	aaa    
  40b9e2:	xor    ebx,DWORD PTR [edx-0x14]
  40b9e5:	sbb    BYTE PTR [edi-0x4a],dl
  40b9e8:	push   cs
  40b9e9:	jmp    0x40b9eb
  40b9eb:	adc    esp,DWORD PTR [esp+eax*4-0x26ac14f2]
  40b9f2:	adc    al,0x98
  40b9f4:	fwait
  40b9f5:	mov    eax,ds:0xec638750
  40b9fa:	fidivr DWORD PTR [esp+eiz*2+0x41c51146]
  40ba01:	push   ecx
  40ba02:	dec    eax
  40ba03:	mov    al,ds:0xceb7daf6
  40ba08:	xchg   edi,eax
  40ba09:	add    DWORD PTR fs:[esi],0x794ea0b8
  40ba10:	int    0x12
  40ba12:	hlt    
  40ba13:	adc    DWORD PTR [edi-0x69c91198],ebx
  40ba19:	outs   dx,DWORD PTR ds:[esi]
  40ba1a:	les    ebx,FWORD PTR [eax]
  40ba1c:	std    
  40ba1d:	mov    eax,ds:0x47903d5b
  40ba22:	or     BYTE PTR [esp+eax*4-0x7d7830c7],bh
  40ba29:	xchg   esi,eax
  40ba2a:	in     eax,0x51
  40ba2c:	mov    eax,0x44e51f57
  40ba31:	(bad)  
  40ba33:	xor    al,0x15
  40ba35:	push   ds
  40ba36:	jae    0x40baaa
  40ba38:	pop    edi
  40ba39:	pop    edi
  40ba3a:	adc    edx,DWORD PTR [ecx]
  40ba3c:	pop    ebp
  40ba3d:	lea    edi,[edx-0x31]
  40ba40:	bound  ecx,QWORD PTR [esi]
  40ba42:	mov    esp,0x2b2393
  40ba47:	gs cmp al,0xfc
  40ba4a:	push   cs
  40ba4b:	xchg   BYTE PTR [esi-0x69],ch
  40ba4e:	xor    al,0x53
  40ba50:	lahf   
  40ba51:	ins    DWORD PTR es:[edi],dx
  40ba52:	sbb    ebp,ebp
  40ba54:	in     al,0xfa
  40ba56:	push   ecx
  40ba57:	adc    al,0x52
  40ba59:	push   eax
  40ba5a:	pop    ss
  40ba5b:	icebp  
  40ba5c:	jno    0x40ba7e
  40ba5e:	dec    esi
  40ba5f:	mov    esp,0xeb6c9e33
  40ba64:	fnstcw WORD PTR [eax-0x29236c8f]
  40ba6a:	xor    al,0x8f
  40ba6c:	cmp    al,0x8f
  40ba6e:	bound  esp,QWORD PTR [esi]
  40ba70:	scas   eax,DWORD PTR es:[edi]
  40ba71:	cmp    eax,0x543526d4
  40ba76:	dec    eax
  40ba77:	and    cl,BYTE PTR [esi]
  40ba79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba7a:	mov    ds,WORD PTR [edx]
  40ba7c:	push   esp
  40ba7d:	push   eax
  40ba7e:	daa    
  40ba7f:	mov    cl,0xa3
  40ba81:	sub    eax,0xe75f833c
  40ba86:	inc    ebp
  40ba87:	mov    esi,0x7acdcf69
  40ba8c:	retf   0x39ef
  40ba8f:	jns    0x40bae7
  40ba91:	sbb    bh,bh
  40ba93:	int3   
  40ba94:	loope  0x40ba89
  40ba96:	sar    BYTE PTR [edi],1
  40ba98:	mov    edi,0xe3d8320d
  40ba9d:	jp     0x40baf9
  40ba9f:	ja     0x40ba76
  40baa1:	loop   0x40ba24
  40baa3:	sub    esp,ecx
  40baa5:	mov    ch,0x73
  40baa7:	inc    ebp
  40baa8:	pop    ecx
  40baa9:	loope  0x40baed
  40baab:	sub    BYTE PTR [eax+0x34],cl
  40baae:	jmp    0x40ba44
  40bab0:	jb     0x40baff
  40bab2:	jl     0x40baeb
  40bab4:	push   ebx
  40bab5:	sbb    ebp,DWORD PTR [eax-0x7d96be97]
  40babb:	retf   
  40babc:	inc    ebx
  40babd:	daa    
  40babe:	add    esi,0xf0e94db2
  40bac4:	sbb    eax,DWORD PTR [esi+0x57]
  40bac7:	xor    eax,0x36ad1bcc
  40bacc:	push   cs
  40bacd:	mov    ebp,0xca678c2d
  40bad2:	mov    esi,0xc6346f78
  40bad7:	push   esp
  40bad8:	push   ebx
  40bad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bada:	div    ecx
  40badc:	stc    
  40badd:	hlt    
  40bade:	mov    eax,ds:0x885fe6e7
  40bae3:	into   
  40bae4:	leave  
  40bae5:	cdq    
  40bae6:	fdiv   QWORD PTR [edx+0x12]
  40bae9:	test   DWORD PTR [esi-0x401886bc],esi
  40baef:	mov    bl,BYTE PTR [ebx]
  40baf1:	mov    bl,0x85
  40baf3:	dec    ebp
  40baf4:	repz inc ebx
  40baf6:	out    0x46,al
  40baf8:	fs push ecx
  40bafa:	sbb    dh,BYTE PTR [ebp+eiz*2+0x6fde7a91]
  40bb01:	cmp    al,0xaf
  40bb03:	je     0x40bb65
  40bb05:	adc    eax,0xe38ae859
  40bb0a:	jo     0x40baac
  40bb0c:	pop    esp
  40bb0d:	scas   al,BYTE PTR es:[edi]
  40bb0e:	ud1    eax,DWORD PTR [edi+ebx*2]
  40bb12:	cmc    
  40bb13:	xchg   ch,ah
  40bb15:	xor    DWORD PTR [ebx],edx
  40bb17:	inc    esp
  40bb18:	or     BYTE PTR [esi+0x48],bl
  40bb1b:	xor    bl,al
  40bb1d:	lock mov dh,BYTE PTR [eax+0x64963b24]
  40bb24:	mov    ds:0xd79b348,eax
  40bb29:	mov    ebp,DWORD PTR [eax+0x20]
  40bb2c:	mov    ebx,0xc6ba6e1b
  40bb31:	fnstcw WORD PTR [ebx+ebp*4+0x65]
  40bb35:	je     0x40bb6d
  40bb37:	sti    
  40bb38:	mov    BYTE PTR [ebx+0x17fb5886],dh
  40bb3e:	fistp  QWORD PTR cs:[ecx+esi*4-0x5d]
  40bb43:	stos   BYTE PTR es:[edi],al
  40bb44:	xchg   esi,eax
  40bb45:	sub    DWORD PTR [edx+0x70c639fd],esp
  40bb4b:	push   esp
  40bb4c:	inc    esp
  40bb4d:	in     al,0xa1
  40bb4f:	shl    DWORD PTR [edx],cl
  40bb51:	std    
  40bb52:	add    edx,eax
  40bb54:	add    ecx,DWORD PTR [eax+0x1966a088]
  40bb5a:	jp     0x40bbbb
  40bb5c:	cmp    al,0xec
  40bb5e:	ss pusha 
  40bb60:	adc    al,0x2
  40bb62:	ror    BYTE PTR [esp+esi*8],cl
  40bb65:	inc    ebp
  40bb66:	sahf   
  40bb67:	in     al,0xb2
  40bb69:	ds es sub eax,0x5e9e1984
  40bb70:	mov    dh,0xba
  40bb72:	leave  
  40bb73:	push   ebp
  40bb74:	out    dx,al
  40bb75:	push   edx
  40bb76:	or     al,0x52
  40bb78:	dec    edi
  40bb79:	addr16 stc 
  40bb7b:	ficom  WORD PTR [ecx-0x4d]
  40bb7e:	rcl    BYTE PTR [ebp+0x44072e12],cl
  40bb84:	inc    esp
  40bb85:	jle    0x40bb82
  40bb87:	jbe    0x40bb20
  40bb89:	enter  0xdd63,0x31
  40bb8d:	pop    es
  40bb8e:	sar    DWORD PTR [esi+0x797d5de2],cl
  40bb94:	(bad)  
  40bb95:	mov    esp,0xa61d8dc
  40bb9a:	push   ds
  40bb9b:	int3   
  40bb9c:	mov    eax,0x517fa0de
  40bba1:	xchg   esi,eax
  40bba2:	cmp    DWORD PTR [edx+edx*2],esp
  40bba5:	lea    eax,[edx+eax*1-0x4bb7b968]
  40bbac:	adc    DWORD PTR [edx],0x200b4a00
  40bbb2:	test   bl,cl
  40bbb4:	fld    QWORD PTR [esi]
  40bbb6:	mov    bh,0xe2
  40bbb8:	iret   
  40bbb9:	sbb    BYTE PTR [eax+0x40475c96],cl
  40bbbf:	dec    edx
  40bbc0:	mov    ebp,DWORD PTR [ebp-0x79c67d5f]
  40bbc6:	enter  0x26ef,0x54
  40bbca:	mov    ebx,0x4ae73097
  40bbcf:	xor    ebp,DWORD PTR [edx]
  40bbd1:	es sub al,0xc2
  40bbd4:	aam    0xdc
  40bbd6:	xor    al,ah
  40bbd8:	pop    esp
  40bbd9:	adc    eax,0xe6e695d6
  40bbde:	cmp    eax,0x7a6a0054
  40bbe3:	int    0xbd
  40bbe5:	hlt    
  40bbe6:	outs   dx,DWORD PTR ds:[esi]
  40bbe7:	lods   al,BYTE PTR ds:[esi]
  40bbe8:	inc    edi
  40bbe9:	xchg   ecx,eax
  40bbea:	pop    es
  40bbeb:	mov    eax,0xce61da99
  40bbf0:	xchg   ebx,eax
  40bbf1:	inc    eax
  40bbf2:	sti    
  40bbf3:	mov    WORD PTR [esi+0x1b],es
  40bbf6:	mov    esi,0x7a403fb1
  40bbfb:	cmp    al,0x40
  40bbfd:	xchg   esp,eax
  40bbfe:	data16 cld 
  40bc00:	push   0x29
  40bc02:	or     edx,DWORD PTR [edi-0x1]
  40bc05:	push   0x4258c819
  40bc0a:	aaa    
  40bc0b:	jo     0x40bb99
  40bc0d:	hlt    
  40bc0e:	pop    eax
  40bc0f:	retf   0xef6f
  40bc12:	mov    ebp,0x800e81c9
  40bc17:	outs   dx,BYTE PTR ds:[esi]
  40bc18:	ret    
  40bc19:	xor    al,0x6c
  40bc1b:	sar    BYTE PTR [ecx-0x35],1
  40bc1e:	mov    gs,WORD PTR [ecx-0x3a]
  40bc21:	enter  0xe643,0x5c
  40bc25:	es jb  0x40bbc3
  40bc28:	stos   BYTE PTR es:[edi],al
  40bc29:	dec    esi
  40bc2a:	jmp    0x115f:0x4f1e2d28
  40bc31:	inc    ebp
  40bc32:	mov    esp,0x9f354863
  40bc37:	cmp    eax,0x65ddf141
  40bc3c:	or     cl,BYTE PTR [ecx+0x35f6b0cd]
  40bc42:	lods   al,BYTE PTR ds:[esi]
  40bc43:	jne    0x40bbce
  40bc45:	pop    ss
  40bc46:	pusha  
  40bc47:	mov    edi,0xc9fd6c16
  40bc4c:	xchg   esi,eax
  40bc4d:	jle    0x40bc41
  40bc4f:	add    al,0x73
  40bc51:	mov    edx,0xc22a3619
  40bc56:	sub    ch,BYTE PTR [edx]
  40bc58:	mov    esi,0x41057604
  40bc5d:	pop    esi
  40bc5e:	fnstsw WORD PTR [edi+edi*8]
  40bc61:	xchg   ecx,eax
  40bc62:	adc    eax,0x80230b8e
  40bc67:	in     al,0x4f
  40bc69:	das    
  40bc6a:	popf   
  40bc6b:	add    DWORD PTR [ebx+0x3d],edi
  40bc6e:	mov    dl,0x81
  40bc70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc71:	and    cl,BYTE PTR [ebx+edi*8]
  40bc74:	aad    0x4b
  40bc76:	add    ah,BYTE PTR [edx+0x91812ac]
  40bc7c:	xchg   esi,eax
  40bc7d:	add    ah,BYTE PTR [ebx+0x51]
  40bc80:	in     eax,dx
  40bc81:	or     BYTE PTR [ebp+0x5c],bl
  40bc84:	jg     0x40bca8
  40bc86:	lahf   
  40bc87:	push   edi
  40bc88:	stos   DWORD PTR es:[edi],eax
  40bc89:	arpl   WORD PTR ds:0xa36e3a26,bp
  40bc8f:	xor    al,0xaa
  40bc91:	leave  
  40bc92:	pusha  
  40bc93:	sbb    eax,0x7e742d23
  40bc98:	pop    edx
  40bc99:	or     bl,BYTE PTR [esi-0x10156b7b]
  40bc9f:	or     bl,BYTE PTR [edi+0x7]
  40bca2:	lea    esp,[ebx+0x59]
  40bca5:	ds adc cl,0xd5
  40bca9:	test   al,dh
  40bcab:	arpl   dx,sp
  40bcad:	mov    ch,0x8c
  40bcaf:	inc    ebp
  40bcb0:	sub    ebp,DWORD PTR ds:0xe663e3b0
  40bcb6:	hlt    
  40bcb7:	out    0x1d,eax
  40bcb9:	sub    al,0x6c
  40bcbb:	xchg   ecx,eax
  40bcbc:	fnstenv [ecx+0x33f6b675]
  40bcc2:	clc    
  40bcc3:	ret    
  40bcc4:	mov    edi,DWORD PTR [ebp-0x63]
  40bcc7:	xchg   ecx,eax
  40bcc8:	jns    0x40bc9e
  40bcca:	cwde   
  40bccb:	imul   ebp,DWORD PTR [edx+0x7e],0x2a
  40bccf:	jb     0x40bca3
  40bcd1:	pushf  
  40bcd2:	xor    eax,0xf811403d
  40bcd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcd8:	fistp  DWORD PTR ds:0xc0fa5788
  40bcde:	cmp    DWORD PTR [edx],0xaba0da79
  40bce4:	and    dl,0xb5
  40bce7:	not    DWORD PTR [ebp+0x20d38bce]
  40bced:	jecxz  0x40bca4
  40bcef:	fcom   QWORD PTR [ebx+0x5]
  40bcf2:	add    dl,cl
  40bcf4:	int3   
  40bcf5:	or     al,0x52
  40bcf7:	and    BYTE PTR [ebp-0x28],ch
  40bcfa:	push   edi
  40bcfb:	adc    dh,BYTE PTR [edx-0xc]
  40bcfe:	dec    edi
  40bcff:	ins    BYTE PTR es:[di],dx
  40bd01:	outs   dx,BYTE PTR ds:[esi]
  40bd02:	and    al,0x37
  40bd04:	xlat   BYTE PTR ds:[ebx]
  40bd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd06:	xor    al,0x3a
  40bd08:	dec    ebp
  40bd09:	loope  0x40bcb8
  40bd0b:	stos   BYTE PTR es:[edi],al
  40bd0c:	pop    ecx
  40bd0d:	pop    eax
  40bd0e:	dec    edx
  40bd0f:	mov    esi,0xfbc8a067
  40bd14:	loop   0x40bc96
  40bd16:	add    dl,BYTE PTR [esi+edi*4+0x1e]
  40bd1a:	push   0x136b9ea6
  40bd1f:	sub    eax,0x14320de5
  40bd24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd25:	retf   
  40bd26:	or     dl,BYTE PTR [ebp+edx*2+0x12]
  40bd2a:	es push ecx
  40bd2c:	(bad)  
  40bd2d:	nop
  40bd2e:	jmp    DWORD PTR [eax]
  40bd30:	pop    esp
  40bd31:	xchg   esi,eax
  40bd32:	sub    al,0x9b
  40bd34:	(bad)  
  40bd35:	not    DWORD PTR [esi-0x42cd3296]
  40bd3b:	push   ecx
  40bd3c:	call   DWORD PTR [edx+0x5d624a1f]
  40bd42:	sar    BYTE PTR [ebp+0x6951b7cf],1
  40bd48:	out    dx,al
  40bd49:	ret    
  40bd4a:	add    ah,BYTE PTR [edx]
  40bd4c:	inc    eax
  40bd4d:	or     BYTE PTR [edx-0xf3c79b3],dh
  40bd53:	fcomp  QWORD PTR [esi+ebp*2+0xca24e19]
  40bd5a:	add    eax,0xc7efd645
  40bd5f:	mov    bl,0xb4
  40bd61:	dec    esp
  40bd62:	addr16 stc 
  40bd64:	sbb    BYTE PTR [esi],ah
  40bd66:	xor    DWORD PTR [ebx],eax
  40bd68:	mov    ch,0x3a
  40bd6a:	hlt    
  40bd6b:	scas   al,BYTE PTR es:[edi]
  40bd6c:	sbb    ebp,ebp
  40bd6e:	push   es
  40bd6f:	push   0xb
  40bd71:	pop    es
  40bd72:	pop    esi
  40bd73:	adc    DWORD PTR gs:[ecx-0x2970515b],edx
  40bd7a:	jmp    0x40bde7
  40bd7c:	adc    BYTE PTR [esi],dh
  40bd7e:	add    ah,dh
  40bd80:	out    dx,al
  40bd81:	dec    ecx
  40bd82:	cld    
  40bd83:	jmp    0xd4aa2750
  40bd88:	dec    ebp
  40bd89:	pusha  
  40bd8a:	xchg   esi,eax
  40bd8b:	mov    esp,0x391eb077
  40bd90:	push   edi
  40bd91:	ret    0x912d
  40bd94:	out    0x89,eax
  40bd96:	xchg   ecx,eax
  40bd97:	shr    esi,1
  40bd99:	iret   
  40bd9a:	dec    DWORD PTR [eax]
  40bd9c:	ror    BYTE PTR [ebx+0x3c],0xa3
  40bda0:	arpl   WORD PTR [ebx],bx
  40bda2:	stc    
  40bda3:	xor    al,0x2f
  40bda5:	lods   al,BYTE PTR ds:[esi]
  40bda6:	loope  0x40bdc5
  40bda8:	jmp    0xa723:0xc73c0c9b
  40bdaf:	pop    ebp
  40bdb0:	xor    dh,BYTE PTR [edx+esi*8-0x59bf3e78]
  40bdb7:	pop    esp
  40bdb8:	out    0xfb,eax
  40bdba:	ins    BYTE PTR es:[edi],dx
  40bdbb:	mov    ds:0xf544fbc4,eax
  40bdc0:	call   DWORD PTR [ebx-0x21]
  40bdc3:	xchg   edi,eax
  40bdc4:	sti    
  40bdc5:	dec    ebp
  40bdc6:	push   ebp
  40bdc7:	repnz loopne 0x40bdc0
  40bdca:	mov    dh,0xdb
  40bdcc:	ret    0x3b49
  40bdcf:	push   ebp
  40bdd1:	lods   eax,DWORD PTR ds:[esi]
  40bdd2:	data16 mov dl,0xa5
  40bdd5:	out    dx,al
  40bdd6:	ins    BYTE PTR es:[edi],dx
  40bdd7:	dec    ebx
  40bdd8:	and    DWORD PTR [edx],ecx
  40bdda:	add    eax,0x2fd64bf9
  40bddf:	inc    ebx
  40bde0:	jo     0x40be57
  40bde2:	cld    
  40bde3:	xor    BYTE PTR [ebx],bl
  40bde5:	inc    edi
  40bde6:	or     DWORD PTR [esi+eiz*4],esp
  40bde9:	push   cs
  40bdea:	sbb    edi,DWORD PTR [ecx]
  40bdec:	fsub   DWORD PTR [esi]
  40bdee:	in     al,dx
  40bdef:	adc    DWORD PTR [edx+0x40c6e712],esi
  40bdf5:	inc    edx
  40bdf6:	push   esp
  40bdf7:	sub    esi,DWORD PTR [esi+esi*4+0x6b]
  40bdfb:	jne    0x40be78
  40bdfd:	loopne 0x40be79
  40bdff:	adc    al,0x95
  40be01:	js     0x40bdd5
  40be03:	out    dx,eax
  40be04:	pop    ebp
  40be05:	aad    0x48
  40be07:	ins    BYTE PTR es:[edi],dx
  40be08:	dec    edi
  40be09:	data16 jno 0x40bd8c
  40be0c:	cmp    DWORD PTR [eax+0x765f7447],0x83a17fcc
  40be16:	pop    esi
  40be17:	pushf  
  40be18:	push   ebx
  40be19:	or     al,0xb
  40be1c:	hlt    
  40be1d:	scas   al,BYTE PTR es:[edi]
  40be1e:	mov    ch,0x9a
  40be20:	jp     0x40be36
  40be22:	adc    edi,edx
  40be24:	dec    esp
  40be25:	test   dl,al
  40be27:	cli    
  40be28:	in     al,dx
  40be29:	test   DWORD PTR [edi+0x61a5fe82],esp
  40be2f:	mov    fs,ebx
  40be31:	je     0x40bdd0
  40be33:	add    esp,DWORD PTR [edx]
  40be35:	mov    al,ds:0xd74e1d75
  40be3a:	lds    ebp,FWORD PTR [ecx]
  40be3c:	adc    ah,bh
  40be3e:	sbb    al,bl
  40be40:	bound  esp,QWORD PTR [ecx]
  40be42:	leave  
  40be43:	aad    0xcf
  40be45:	inc    esi
  40be46:	out    dx,al
  40be47:	push   esi
  40be48:	xchg   ecx,eax
  40be49:	sbb    BYTE PTR [esi-0x41248bc6],bl
  40be4f:	fucom  st(3)
  40be51:	fbstp  TBYTE PTR [ecx+0x49]
  40be54:	mov    dl,0x8b
  40be56:	icebp  
  40be57:	sbb    DWORD PTR [bp+di-0x1a],0xffffffd0
  40be5c:	inc    eax
  40be5d:	mov    gs,WORD PTR [ebp+0x43]
  40be60:	les    esi,FWORD PTR [edx]
  40be62:	jbe    0x40be08
  40be64:	mov    cl,0x74
  40be66:	popa   
  40be67:	int    0x93
  40be69:	clc    
  40be6a:	sbb    al,0x49
  40be6c:	dec    ebx
  40be6d:	and    ebx,esi
  40be6f:	imul   esi,DWORD PTR [eax+0x67f85cc2],0xdb5133f3
  40be79:	dec    esp
  40be7a:	shl    DWORD PTR [esi],0x7a
  40be7d:	shl    DWORD PTR [eax+0x252236e0],cl
  40be83:	push   edi
  40be84:	and    edx,DWORD PTR [ebp-0x1aa70f44]
  40be8a:	mov    bh,0x30
  40be8c:	call   0x431f:0x27c52140
  40be93:	ror    DWORD PTR [edi-0x26],1
  40be96:	loope  0x40be2d
  40be98:	mov    dh,0xec
  40be9a:	xchg   esp,eax
  40be9b:	jae    0x40bee4
  40be9d:	ret    
  40be9e:	adc    esp,ecx
  40bea0:	ja     0x40bf05
  40bea2:	push   ebx
  40bea3:	push   edi
  40bea4:	scas   eax,DWORD PTR es:[edi]
  40bea5:	in     eax,dx
  40bea6:	pop    edi
  40bea7:	push   edx
  40bea8:	pop    ss
  40bea9:	stos   DWORD PTR es:[edi],eax
  40beaa:	push   edx
  40beab:	(bad)
  40beaf:	or     al,0x6e
  40beb1:	ss xchg ebx,eax
  40beb3:	pop    esi
  40beb4:	ins    DWORD PTR es:[edi],dx
  40beb5:	pop    ecx
  40beb6:	lea    esp,[eax-0x29bf4216]
  40bebc:	test   BYTE PTR [ebp+0x58],bh
  40bebf:	cmp    bl,BYTE PTR [eax-0x5d]
  40bec2:	ret    
  40bec3:	iret   
  40bec4:	cwde   
  40bec5:	adc    edx,DWORD PTR [edi-0x34dcbc0]
  40becb:	cmp    bl,ah
  40becd:	(bad)  
  40bed0:	cmp    al,0x9b
  40bed2:	shl    dh,cl
  40bed4:	hlt    
  40bed5:	(bad)  
  40bed7:	popf   
  40bed8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed9:	and    bh,BYTE PTR [ebp+0x2c]
  40bedc:	xor    ch,dh
  40bede:	(bad)
  40bee2:	mov    esi,0xa3b111bb
  40bee7:	(bad)  
  40bee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40beea:	rcr    DWORD PTR [edx-0x28],1
  40beed:	stc    
  40beee:	in     eax,0x78
  40bef0:	sub    edx,DWORD PTR [eax]
  40bef2:	(bad)  
  40bef3:	mov    dl,0x21
  40bef5:	xor    al,0x58
  40bef7:	jnp    0x40bf2b
  40bef9:	dec    ecx
  40befa:	jno    0x40bf62
  40befc:	sahf   
  40befd:	xor    ah,BYTE PTR [eax-0x27]
  40bf00:	loope  0x40bee4
  40bf02:	ret    
  40bf03:	mov    bh,0xe0
  40bf05:	(bad)  
  40bf06:	mov    esp,0x949ff612
  40bf0b:	inc    edi
  40bf0c:	push   esp
  40bf0d:	push   esi
  40bf0e:	xor    BYTE PTR [ebp+eax*4-0x78e14dd6],al
  40bf15:	push   ss
  40bf16:	inc    edi
  40bf17:	sbb    edx,ebx
  40bf19:	push   eax
  40bf1a:	fdiv   st,st(6)
  40bf1c:	push   es
  40bf1d:	lods   eax,DWORD PTR ds:[esi]
  40bf1e:	sahf   
  40bf1f:	mov    ds:0x54178a98,al
  40bf24:	and    bl,BYTE PTR [edi]
  40bf26:	cmp    eax,0xab5bd976
  40bf2b:	stc    
  40bf2c:	sti    
  40bf2d:	xchg   ecx,eax
  40bf2e:	sub    DWORD PTR [ebx],ecx
  40bf30:	or     eax,0x36fe51b2
  40bf35:	rcr    DWORD PTR [ebp+0x450d5a4f],1
  40bf3b:	mov    cl,0xd9
  40bf3d:	dec    edi
  40bf3e:	xchg   ebx,eax
  40bf3f:	popf   
  40bf40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf41:	test   al,0xe4
  40bf43:	jnp    0x40bf4d
  40bf45:	jne    0x40bfaf
  40bf47:	ins    BYTE PTR es:[edi],dx
  40bf48:	fisubr WORD PTR [eax+eax*2+0x6]
  40bf4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf4d:	call   0x4587d1d9
  40bf52:	loope  0x40bfca
  40bf54:	dec    ebp
  40bf55:	xchg   ecx,eax
  40bf56:	sti    
  40bf57:	inc    ecx
  40bf58:	jno    0x40bf97
  40bf5a:	mov    ch,0xd9
  40bf5c:	aad    0xad
  40bf5e:	cmp    al,0x5c
  40bf60:	aas    
  40bf61:	aas    
  40bf62:	sub    al,0xb6
  40bf64:	pop    eax
  40bf65:	pop    ecx
  40bf66:	adc    al,0xfb
  40bf68:	(bad)  
  40bf6a:	imul   ebx,DWORD PTR [edi-0x64],0x4b
  40bf6e:	ficomp DWORD PTR [esi+ecx*2+0x6b0e7f49]
  40bf75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf76:	shl    BYTE PTR [ebx+0x1c],1
  40bf79:	outs   dx,BYTE PTR ds:[esi]
  40bf7a:	test   BYTE PTR [edi+0x6d],dh
  40bf7d:	sub    ch,0xb1
  40bf80:	mov    esi,0x298c3e5e
  40bf85:	push   esp
  40bf86:	add    BYTE PTR [esp+edx*2],0xad
  40bf8a:	xchg   BYTE PTR [eax-0x21],al
  40bf8d:	fadd   DWORD PTR ds:0xcedc18b1
  40bf93:	push   0x3
  40bf95:	std    
  40bf96:	sahf   
  40bf97:	lea    ecx,[ecx-0x23d32af2]
  40bf9d:	mov    ebx,0x2196e30f
  40bfa2:	push   ss
  40bfa3:	test   al,0xaa
  40bfa5:	mov    ds:0xe1842bb0,al
  40bfaa:	test   al,0x6b
  40bfac:	mov    bh,0xdc
  40bfae:	test   BYTE PTR [ebp+0x4f],0xd8
  40bfb2:	arpl   WORD PTR [ebx],dx
  40bfb4:	scas   eax,DWORD PTR es:[edi]
  40bfb5:	xchg   ebx,eax
  40bfb6:	mov    al,ds:0x73076e22
  40bfbb:	and    BYTE PTR ds:[eax-0x167be63c],0xda
  40bfc3:	push   esi
  40bfc4:	mov    eax,0x2b4bbb66
  40bfc9:	mov    dl,0x4c
  40bfcb:	ja     0x40c032
  40bfcd:	cmp    al,0x28
  40bfcf:	mov    esi,0xd300c631
  40bfd4:	dec    edx
  40bfd5:	stc    
  40bfd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfd7:	dec    esp
  40bfd8:	and    DWORD PTR [esi],0xffffff88
  40bfdb:	adc    esi,DWORD PTR [ebp+0x21]
  40bfde:	cdq    
  40bfdf:	mov    bh,0xb
  40bfe1:	sar    BYTE PTR [esi],cl
  40bfe3:	dec    edi
  40bfe4:	xchg   edi,eax
  40bfe5:	push   ds
  40bfe6:	icebp  
  40bfe7:	cld    
  40bfe8:	or     eax,0x101529d1
  40bfed:	jp     0x40c007
  40bfef:	stc    
  40bff0:	mov    esi,0x180e686a
  40bff5:	inc    edi
  40bff6:	adc    BYTE PTR ss:[ebp-0x3cc7388d],dl
  40bffd:	and    esp,DWORD PTR [ecx-0x394759de]
  40c003:	cld    
  40c004:	fist   WORD PTR [esi+ecx*1-0x7d89bad0]
  40c00b:	add    cl,al
  40c00d:	gs jle 0x40c054
  40c010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c011:	(bad)  
  40c012:	cmp    DWORD PTR [ebp+ebp*2+0x32],esi
  40c016:	inc    ebp
  40c017:	mov    bl,0xc3
  40c019:	fs aaa 
  40c01b:	xor    ecx,edx
  40c01d:	leave  
  40c01e:	mov    eax,ds:0x9284a1d2
  40c023:	mov    edx,0x9c595416
  40c028:	idiv   BYTE PTR [ebx]
  40c02a:	cdq    
  40c02b:	sub    ecx,esp
  40c02d:	sub    dh,BYTE PTR [edi-0x61]
  40c030:	ins    BYTE PTR es:[edi],dx
  40c031:	jp     0x40c017
  40c033:	in     al,0xc4
  40c035:	mov    al,ds:0x42aa208b
  40c03a:	pop    ebx
  40c03b:	jp     0x40bfec
  40c03d:	fild   QWORD PTR [ecx]
  40c03f:	dec    edi
  40c040:	sub    al,0x52
  40c042:	push   ebx
  40c043:	or     eax,DWORD PTR [esi+0x6]
  40c046:	sub    al,0x7d
  40c048:	mov    edx,0xe84e432a
  40c04d:	(bad)  
  40c04e:	je     0x40c0ae
  40c050:	adc    ebp,ebp
  40c052:	loop   0x40c033
  40c054:	fcmovnbe st,st(1)
  40c056:	test   DWORD PTR [eax-0x35],ebp
  40c059:	mov    edi,eax
  40c05b:	and    ebx,DWORD PTR [ebp+0x51115908]
  40c061:	jns    0x40bff7
  40c063:	cli    
  40c064:	fincstp 
  40c066:	or     esi,eax
  40c068:	jg     0x40c07f
  40c06a:	enter  0xdb78,0x65
  40c06e:	addr16 xchg esi,eax
  40c070:	les    ecx,FWORD PTR [edx]
  40c072:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c073:	or     esi,DWORD PTR [esi-0x48]
  40c076:	xchg   ebp,eax
  40c077:	les    edi,FWORD PTR [esp+edi*2]
  40c07a:	sbb    BYTE PTR [edx+0x7e81a99a],dl
  40c080:	call   DWORD PTR [ebp+0x3eb76004]
  40c086:	mov    cl,0xb2
  40c088:	inc    ecx
  40c089:	ret    0x8c38
  40c08c:	dec    esi
  40c08d:	add    DWORD PTR [ebp+0x2d],ebp
  40c090:	data16 and ah,bl
  40c093:	fcomi  st,st(0)
  40c095:	das    
  40c096:	jne    0x40c0aa
  40c098:	(bad)  
  40c099:	pop    edx
  40c09a:	jl     0x40c076
  40c09c:	push   ebx
  40c09d:	mov    esp,edx
  40c09f:	pop    ss
  40c0a0:	jae    0x40c037
  40c0a2:	fidivr DWORD PTR [esi-0x4691498d]
  40c0a8:	cwde   
  40c0a9:	mov    ch,0x9c
  40c0ab:	mov    ebp,0x327cb69
  40c0b0:	into   
  40c0b1:	pop    ebp
  40c0b2:	test   eax,0x5002eb96
  40c0b7:	imul   esp,ecx,0xffffffca
  40c0ba:	inc    esi
  40c0bb:	cmp    BYTE PTR [edx],0xb6
  40c0be:	push   ds
  40c0bf:	shr    eax,1
  40c0c1:	adc    BYTE PTR [edx+0x407cba66],ch
  40c0c7:	into   
  40c0c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c0c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0ca:	push   esi
  40c0cb:	jmp    0x40c069
  40c0cd:	js     0x40c0b9
  40c0cf:	xlat   BYTE PTR ds:[ebx]
  40c0d0:	mov    cl,0x85
  40c0d2:	icebp  
  40c0d3:	mov    al,ds:0x250d755e
  40c0d8:	add    eax,0x98d1f4ae
  40c0dd:	pop    ecx
  40c0de:	test   BYTE PTR [edx+0x70],dh
  40c0e1:	scas   al,BYTE PTR es:[edi]
  40c0e2:	test   DWORD PTR [esi],0x437443c6
  40c0e8:	and    eax,edi
  40c0ea:	mov    ?,WORD PTR [ecx+edx*1+0x3ebee131]
  40c0f1:	fwait
  40c0f2:	sub    DWORD PTR [esi+ebx*2-0x27],0x3
  40c0f7:	dec    esp
  40c0f8:	retf   0xbab2
  40c0fb:	inc    edi
  40c0fc:	lds    ecx,FWORD PTR [ecx]
  40c0fe:	ret    
  40c0ff:	dec    esp
  40c100:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c101:	adc    al,0xbd
  40c103:	pushf  
  40c104:	mov    edx,0x748ee613
  40c109:	icebp  
  40c10a:	addr16 mov bh,al
  40c10d:	test   eax,0x8cf74369
  40c112:	jp     0x40c117
  40c114:	pop    ebp
  40c115:	inc    esi
  40c116:	inc    ebp
  40c117:	dec    ebp
  40c118:	inc    esi
  40c119:	es dec edx
  40c11b:	stos   BYTE PTR es:[edi],al
  40c11c:	bnd jmp 0xa8d316ca
  40c122:	jo     0x40c0c7
  40c124:	xchg   ebp,eax
  40c125:	test   eax,0xf20957fa
  40c12a:	jmp    0x16687017
  40c12f:	mov    edx,0xd85c7544
  40c134:	mov    DWORD PTR [ebp-0x6424597e],edi
  40c13a:	pop    ecx
  40c13b:	out    0x6b,eax
  40c13d:	ret    
  40c13e:	sub    dh,BYTE PTR [ecx+0x3c81a735]
  40c144:	push   cs
  40c145:	cmp    ebx,DWORD PTR [ebx]
  40c147:	sahf   
  40c148:	stos   DWORD PTR es:[edi],eax
  40c149:	scas   eax,DWORD PTR es:[edi]
  40c14a:	out    0xbe,eax
  40c14c:	mov    dh,0xd
  40c14e:	pop    DWORD PTR [ebx+0x4635445a]
  40c154:	xor    al,0x4a
  40c156:	mov    bl,0x85
  40c158:	imul   ebx,DWORD PTR [eax-0x50],0xfce79635
  40c15f:	sub    al,0x5b
  40c161:	loopne 0x40c197
  40c163:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c164:	rcl    BYTE PTR [ebx+ebp*1-0x59],cl
  40c168:	dec    ecx
  40c169:	and    bh,BYTE PTR [eax]
  40c16b:	in     al,dx
  40c16c:	and    ah,cl
  40c16e:	mov    eax,0x36685f87
  40c173:	jmp    0x40c123
  40c175:	rcl    BYTE PTR [esi+0x2e5958ab],cl
  40c17b:	das    
  40c17c:	dec    ebx
  40c17d:	mov    bh,0xe5
  40c17f:	mov    edi,DWORD PTR [edi-0x75]
  40c182:	retf   
  40c183:	pop    ecx
  40c184:	push   0xffffff96
  40c186:	sbb    bl,BYTE PTR [edx+0x47]
  40c189:	jmp    0x40c206
  40c18b:	addr16 cwde 
  40c18d:	or     eax,0x350a92b6
  40c192:	lgs    ecx,FWORD PTR [edi-0x2afb0b69]
  40c199:	dec    ecx
  40c19a:	das    
  40c19b:	push   ebx
  40c19c:	jg     0x40c194
  40c19e:	pop    ebx
  40c19f:	(bad)  
  40c1a0:	mov    edx,0x2be3b8fe
  40c1a5:	fsubr  DWORD PTR [edx-0x53]
  40c1a8:	push   es
  40c1a9:	push   ebp
  40c1aa:	xchg   esi,eax
  40c1ab:	dec    ecx
  40c1ac:	std    
  40c1ad:	sti    
  40c1ae:	adc    ebx,0x3f72bd9c
  40c1b4:	mov    WORD PTR [esi+0x7042dd5],gs
  40c1ba:	xor    esp,DWORD PTR [edi]
  40c1bc:	push   cs
  40c1bd:	add    BYTE PTR [ebx-0x6b],bh
  40c1c0:	sbb    al,0xb1
  40c1c2:	(bad)  
  40c1c3:	jns    0x40c1dd
  40c1c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1c6:	push   cs
  40c1c7:	leave  
  40c1c8:	js     0x40c1be
  40c1ca:	mov    ds:0xeeafd805,eax
  40c1cf:	mov    WORD PTR ds:0x446d93dc,ss
  40c1d5:	ja     0x40c20f
  40c1d7:	sti    
  40c1d8:	int    0x77
  40c1da:	mov    ebx,0xcc2be0c2
  40c1df:	mov    edi,0x353973cc
  40c1e4:	mov    ebx,0x4f3032b6
  40c1e9:	lods   eax,DWORD PTR ds:[esi]
  40c1ea:	mov    WORD PTR [edx+0x549087e5],fs
  40c1f0:	sbb    eax,0xd30e464
  40c1f5:	jne    0x40c1c9
  40c1f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c1f8:	scas   al,BYTE PTR es:[edi]
  40c1f9:	and    al,0xa2
  40c1fb:	ret    0xa83c
  40c1fe:	xor    dh,BYTE PTR [esi+0x61]
  40c201:	add    eax,0x83fab9bb
  40c206:	int3   
  40c207:	jb     0x40c1ed
  40c209:	sub    DWORD PTR [eax+0x667152dd],ecx
  40c20f:	std    
  40c210:	push   ebx
  40c211:	inc    ebx
  40c212:	cmp    DWORD PTR [esi],eax
  40c214:	dec    esi
  40c215:	dec    edi
  40c216:	(bad)  
  40c217:	int3   
  40c218:	push   ebp
  40c219:	mov    eax,0xc4eb9801
  40c21e:	add    al,0xcc
  40c220:	xor    DWORD PTR [eax-0x7f5dc2a1],0x37f36502
  40c22a:	xchg   DWORD PTR [edx+0xb],esp
  40c22d:	xor    esi,DWORD PTR [ebx+0x69]
  40c230:	push   ecx
  40c231:	lods   al,BYTE PTR ds:[esi]
  40c232:	xor    al,0xd9
  40c234:	pop    eax
  40c235:	mov    al,0xd2
  40c237:	addr16 test al,0x97
  40c23a:	pop    ds
  40c23b:	push   edi
  40c23c:	pop    edi
  40c23d:	xor    dh,bh
  40c23f:	mov    al,0x3f
  40c241:	fist   WORD PTR [ecx-0x43e0825]
  40c247:	aaa    
  40c248:	fs jg  0x40c1d5
  40c24b:	psubd  mm2,QWORD PTR [edi+0xb]
  40c24f:	sahf   
  40c250:	adc    dh,BYTE PTR [edx-0x7297961]
  40c256:	in     eax,dx
  40c257:	int3   
  40c258:	mov    ebp,0xdcc5c4cf
  40c25d:	mov    ch,0x2e
  40c25f:	sbb    eax,0x6739011d
  40c264:	add    eax,0x43ebaccd
  40c269:	dec    eax
  40c26a:	mov    esp,0x94fd4162
  40c26f:	ins    BYTE PTR es:[edi],dx
  40c270:	icebp  
  40c271:	push   es
  40c272:	std    
  40c273:	push   0xffffff82
  40c275:	(bad)  
  40c276:	adc    al,0x79
  40c278:	dec    esi
  40c279:	sub    esi,DWORD PTR [ecx-0x7469bf89]
  40c27f:	mov    ecx,0xcb53c58e
  40c284:	inc    eax
  40c285:	imul   edx,DWORD PTR [edi],0x39
  40c288:	mov    ebx,cs
  40c28a:	cmp    eax,0xbbbec7fe
  40c28f:	ds cld 
  40c291:	sbb    ch,dl
  40c293:	stos   BYTE PTR es:[edi],al
  40c294:	sti    
  40c295:	add    eax,0xd772d936
  40c29a:	jns    0x40c2ed
  40c29c:	and    ebx,DWORD PTR [esi-0xb24056a]
  40c2a2:	xchg   edi,eax
  40c2a3:	icebp  
  40c2a4:	or     al,0xdb
  40c2a6:	sahf   
  40c2a7:	scas   eax,DWORD PTR es:[edi]
  40c2a8:	cmc    
  40c2a9:	aas    
  40c2aa:	je     0x40c2e6
  40c2ac:	fldenv [esi-0x2a0418eb]
  40c2b2:	outs   dx,BYTE PTR ds:[esi]
  40c2b3:	lahf   
  40c2b4:	cdq    
  40c2b5:	je     0x40c2ed
  40c2b7:	pusha  
  40c2b8:	push   DWORD PTR [esi+0x6b]
  40c2bb:	and    esp,DWORD PTR [edi]
  40c2bd:	jno    0x40c2c9
  40c2bf:	adc    al,0xda
  40c2c1:	xchg   esi,eax
  40c2c2:	retf   
  40c2c3:	pusha  
  40c2c4:	and    DWORD PTR [ecx+0x75],0xa8c62c5a
  40c2cb:	(bad)  
  40c2cc:	jns    0x40c281
  40c2ce:	into   
  40c2cf:	popf   
  40c2d0:	bound  esi,QWORD PTR [ebp-0x20]
  40c2d3:	adc    edi,DWORD PTR [esi-0xe]
  40c2d6:	dec    esi
  40c2d7:	(bad)  
  40c2d8:	in     eax,0x94
  40c2da:	icebp  
  40c2db:	xchg   esi,eax
  40c2dc:	ret    
  40c2dd:	inc    eax
  40c2de:	repz arpl WORD PTR [edx-0xa43c5d2],si
  40c2e5:	add    ch,BYTE PTR [edx-0x15115292]
  40c2eb:	popf   
  40c2ec:	mov    ecx,0x51a0d40e
  40c2f1:	cdq    
  40c2f2:	cwde   
  40c2f3:	imul   edi,DWORD PTR [ebx+eiz*4],0x80675721
  40c2fa:	or     eax,0xe0a4ff14
  40c2ff:	lahf   
  40c300:	scas   eax,DWORD PTR es:[edi]
  40c301:	test   eax,0xad52766c
  40c306:	ror    DWORD PTR ds:[edi],1
  40c309:	jmp    0x40c36f
  40c30b:	sub    esi,esi
  40c30d:	xor    al,0xfa
  40c30f:	out    dx,eax
  40c310:	(bad)  
  40c311:	mov    ds:0x38eefeeb,eax
  40c316:	pop    ecx
  40c317:	lods   eax,DWORD PTR ds:[esi]
  40c318:	popa   
  40c319:	ins    DWORD PTR es:[edi],dx
  40c31a:	sahf   
  40c31b:	aas    
  40c31c:	cs xor DWORD PTR gs:[edx],edx
  40c320:	scas   al,BYTE PTR es:[edi]
  40c321:	retf   
  40c322:	out    0x5c,eax
  40c324:	fwait
  40c325:	xor    DWORD PTR [esi+0x44],ecx
  40c328:	loopne 0x40c2e1
  40c32a:	dec    ebp
  40c32b:	lock lds edx,FWORD PTR [ebx]
  40c32e:	mov    bh,0x48
  40c330:	fninit 
  40c332:	mov    WORD PTR [ecx+edi*1-0x7f091391],fs
  40c339:	jo     0x40c307
  40c33b:	jle    0x40c3aa
  40c33d:	jp     0x40c39e
  40c33f:	dec    esp
  40c340:	push   ds
  40c341:	mov    WORD PTR [ebx],cs
  40c343:	mov    ?,WORD PTR ds:0xfb4e2fa3
  40c349:	adc    edx,DWORD PTR [esi+0x15481e4]
  40c34f:	mov    ds:0xf1e1c117,eax
  40c354:	cmp    ebx,DWORD PTR [eax+0x71]
  40c357:	test   esi,edx
  40c359:	aam    0x34
  40c35b:	dec    ecx
  40c35c:	xchg   edx,eax
  40c35d:	(bad)
  40c362:	outs   dx,DWORD PTR ds:[esi]
  40c363:	mov    BYTE PTR [edi-0x11],al
  40c366:	lock dec ecx
  40c368:	sbb    eax,0x161f9190
  40c36d:	jmp    0x40c32f
  40c36f:	pop    esp
  40c370:	ins    DWORD PTR es:[edi],dx
  40c371:	push   ds
  40c372:	dec    ecx
  40c373:	push   ecx
  40c374:	int3   
  40c375:	xchg   ebx,eax
  40c376:	cli    
  40c377:	(bad)  
  40c378:	push   esi
  40c379:	jmp    0x35aa:0xa63d358a
  40c380:	pop    esp
  40c381:	pushf  
  40c382:	sub    ch,BYTE PTR [eax+0x315a9fa4]
  40c388:	adc    eax,DWORD PTR [edi+0x5f]
  40c38b:	or     DWORD PTR [esi-0x2f],edi
  40c38e:	mov    WORD PTR [eax],ds
  40c390:	mov    edx,0x1ccfc4f
  40c395:	imul   esp,DWORD PTR [edx+0x29],0xaa0003ee
  40c39c:	ret    
  40c39d:	das    
  40c39e:	cmp    ebx,0x76
  40c3a1:	(bad)  
  40c3a2:	repz add al,0x79
  40c3a5:	enter  0x8cb4,0x56
  40c3a9:	repnz out 0xdd,al
  40c3ac:	outs   dx,BYTE PTR ds:[esi]
  40c3ad:	xchg   ebp,eax
  40c3ae:	adc    eax,0xbf4bd3a6
  40c3b3:	and    al,0x6f
  40c3b5:	add    DWORD PTR [edi],eax
  40c3b7:	inc    edi
  40c3b8:	sub    al,0xc2
  40c3ba:	das    
  40c3bb:	mul    BYTE PTR [edx-0x2a]
  40c3be:	xlat   BYTE PTR ds:[ebx]
  40c3bf:	and    al,0x15
  40c3c1:	cmp    al,0x4c
  40c3c3:	pop    ebx
  40c3c4:	dec    ebx
  40c3c5:	lods   al,BYTE PTR ds:[esi]
  40c3c6:	imul   esi,DWORD PTR [ebx+eax*1-0x7bf3a0b5],0xffffff8b
  40c3ce:	icebp  
  40c3cf:	data16 sbb al,0xf1
  40c3d2:	clc    
  40c3d3:	mov    ?,esp
  40c3d5:	pop    eax
  40c3d6:	adc    eax,0x239cf516
  40c3db:	jle    0x40c361
  40c3dd:	xchg   ecx,eax
  40c3de:	loopne 0x40c3f0
  40c3e0:	scas   eax,DWORD PTR es:[edi]
  40c3e1:	jae    0x40c400
  40c3e3:	dec    ebp
  40c3e4:	sbb    cl,BYTE PTR [ebx-0x4b]
  40c3e7:	aaa    
  40c3e8:	push   es
  40c3e9:	div    DWORD PTR [edx-0x39]
  40c3ec:	das    
  40c3ed:	and    dl,0xfb
  40c3f0:	dec    ebx
  40c3f1:	adc    al,BYTE PTR [ecx-0x1ad860f6]
  40c3f7:	ret    
  40c3f8:	push   eax
  40c3f9:	loope  0x40c403
  40c3fb:	(bad)  
  40c3fc:	dec    eax
  40c3fd:	push   es
  40c3fe:	inc    edi
  40c3ff:	mov    ebp,0x954715dd
  40c404:	pushf  
  40c405:	outs   dx,DWORD PTR ds:[esi]
  40c406:	dec    edx
  40c407:	push   esp
  40c408:	jb     0x40c39b
  40c40a:	push   es
  40c40b:	stos   BYTE PTR es:[edi],al
  40c40c:	div    BYTE PTR ds:0xa60e3e9a
  40c412:	icebp  
  40c413:	inc    ebp
  40c414:	mov    edx,0xe9e5f2e2
  40c419:	fmul   DWORD PTR [edi-0x73a4dea4]
  40c41f:	int    0x92
  40c421:	inc    ebp
  40c422:	pop    edx
  40c423:	dec    edi
  40c424:	xor    DWORD PTR [esp+esi*8-0x7e49acc8],esi
  40c42b:	repz pop ecx
  40c42d:	(bad)  
  40c42e:	loope  0x40c3eb
  40c430:	sar    DWORD PTR [edi],cl
  40c432:	and    edi,DWORD PTR [ebp+0x9498c74]
  40c438:	adc    eax,0x3165d0e4
  40c43d:	add    al,0x5f
  40c43f:	clc    
  40c440:	lock push edx
  40c442:	addr16 dec edx
  40c444:	and    ebx,DWORD PTR [ebx-0x5]
  40c447:	ret    0xb43a
  40c44a:	rcl    BYTE PTR [ecx+0x46],0xc1
  40c44e:	(bad)  
  40c44f:	pop    ds
  40c450:	cwde   
  40c451:	ret    
  40c452:	xchg   ecx,eax
  40c453:	mov    edx,0x47195d31
  40c458:	sbb    bl,BYTE PTR [eax+0x65c1ea55]
  40c45e:	ja     0x40c47d
  40c460:	in     al,dx
  40c461:	ret    
  40c462:	and    eax,0x6f94631d
  40c467:	push   0x327c1873
  40c46c:	les    ecx,FWORD PTR [ebx]
  40c46e:	lods   al,BYTE PTR ds:[esi]
  40c46f:	mov    al,ds:0xe55f656f
  40c474:	fimul  DWORD PTR [ecx+0x125a0ceb]
  40c47a:	add    DWORD PTR [ebx-0x34dfdee],ebp
  40c480:	in     al,0x8
  40c482:	push   cs
  40c483:	mov    cl,0x5f
  40c485:	aas    
  40c486:	int3   
  40c487:	and    al,0xc4
  40c489:	aaa    
  40c48a:	into   
  40c48b:	add    al,dh
  40c48d:	pop    ss
  40c48e:	mov    al,ds:0xc7e87d6f
  40c493:	mov    eax,ds:0xcb5fd023
  40c498:	ficomp WORD PTR ds:0x24b12499
  40c49e:	ret    0xa623
  40c4a1:	xchg   esi,eax
  40c4a2:	push   eax
  40c4a3:	sahf   
  40c4a4:	out    0x73,al
  40c4a6:	push   ds
  40c4a7:	dec    edi
  40c4a8:	sbb    eax,0x568d7f19
  40c4ad:	mov    al,0xae
  40c4af:	rol    DWORD PTR [ebx-0x41],0xbe
  40c4b3:	jnp    0x40c489
  40c4b5:	inc    esp
  40c4b6:	push   esp
  40c4b7:	pop    esp
  40c4b8:	dec    ebp
  40c4b9:	retf   0x40ec
  40c4bc:	dec    ebp
  40c4bd:	loop   0x40c45f
  40c4bf:	jae    0x40c4b0
  40c4c1:	daa    
  40c4c2:	mov    ?,WORD PTR [edx+ebx*1-0x1c7659c0]
  40c4c9:	cdq    
  40c4ca:	(bad)  
  40c4cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4cc:	daa    
  40c4cd:	xchg   esi,eax
  40c4ce:	mov    ah,0x86
  40c4d0:	fbld   TBYTE PTR [eax+0xf]
  40c4d3:	adc    edx,esi
  40c4d5:	dec    esp
  40c4d6:	fcomp  DWORD PTR [edi+0x4a]
  40c4d9:	lods   al,BYTE PTR ds:[esi]
  40c4da:	in     eax,dx
  40c4db:	dec    edi
  40c4dc:	test   DWORD PTR [ebp+0x21],eax
  40c4df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4e0:	dec    ecx
  40c4e1:	out    0xc7,al
  40c4e3:	fimul  DWORD PTR [edx+ebp*1]
  40c4e6:	pusha  
  40c4e7:	push   ebx
  40c4e8:	test   al,0x9c
  40c4ea:	dec    bp
  40c4ec:	dec    eax
  40c4ed:	fs add eax,0x9201e768
  40c4f3:	je     0x40c4b9
  40c4f5:	ret    
  40c4f6:	shr    ebx,1
  40c4f8:	push   ecx
  40c4f9:	mov    ds:0xa87736f2,al
  40c4fe:	outs   dx,BYTE PTR ds:[esi]
  40c4ff:	(bad)  
  40c500:	fisub  DWORD PTR ds:0xe99df71b
  40c506:	rcr    ebx,0xe3
  40c509:	sub    al,0x71
  40c50b:	out    dx,eax
  40c50c:	mov    ch,0xbe
  40c50e:	mov    esi,0x11a9225c
  40c513:	push   ss
  40c514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c515:	fist   WORD PTR [edi-0x41]
  40c518:	ror    ah,0xb5
  40c51b:	mov    ecx,0xfd929435
  40c520:	mov    ecx,0x200d9c6e
  40c525:	sar    DWORD PTR [ebx],cl
  40c527:	lods   eax,DWORD PTR ds:[esi]
  40c528:	scas   al,BYTE PTR es:[edi]
  40c529:	push   ds
  40c52a:	adc    ch,BYTE PTR [edx]
  40c52c:	lods   al,BYTE PTR ds:[esi]
  40c52d:	iret   
  40c52e:	push   0x65
  40c530:	cdq    
  40c531:	pop    ss
  40c532:	es int 0xe8
  40c535:	les    eax,FWORD PTR [ecx+0xe5bf7c0]
  40c53b:	popf   
  40c53c:	fdivr  DWORD PTR [ecx]
  40c53e:	(bad)  
  40c53f:	clc    
  40c540:	mov    cl,0xa3
  40c542:	pop    esi
  40c543:	pop    esi
  40c544:	cld    
  40c545:	jo     0x40c552
  40c547:	mov    edx,0x7e1f748a
  40c54c:	mov    al,0xab
  40c54e:	or     eax,0x2a1e6e7c
  40c553:	and    edx,DWORD PTR [esi-0x27]
  40c556:	mov    edi,0x448c85f7
  40c55b:	xchg   ebp,eax
  40c55c:	pop    es
  40c55d:	jecxz  0x40c4f0
  40c55f:	stc    
  40c560:	mov    al,BYTE PTR [eax+ecx*8]
  40c563:	or     BYTE PTR [eax-0x4ab889b2],bh
  40c569:	dec    BYTE PTR [eax-0xa2ad352]
  40c56f:	mov    edi,0x9a3f8732
  40c574:	fwait
  40c575:	shr    BYTE PTR [esi-0x24e9bfc9],0xf0
  40c57c:	mov    ebp,0x4391da4e
  40c581:	push   ss
  40c582:	and    ch,BYTE PTR [ebx-0x719e1988]
  40c588:	and    edi,DWORD PTR [esi-0x28]
  40c58b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c58c:	sub    DWORD PTR [ebx+0x68],ecx
  40c58f:	imul   ecx,DWORD PTR [ebp+0x142d076d],0x15
  40c596:	fsub   DWORD PTR [ecx]
  40c598:	mov    edi,0x3a581600
  40c59d:	xchg   esp,eax
  40c59e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c59f:	test   eax,0xb5087721
  40c5a4:	xchg   ebp,eax
  40c5a5:	dec    ebx
  40c5a6:	jae    0x40c61b
  40c5a8:	(bad)  
  40c5aa:	jbe    0x40c590
  40c5ac:	sbb    BYTE PTR [edx-0xfa69451],ch
  40c5b2:	fldcw  WORD PTR [ebx+0x29b89abc]
  40c5b8:	inc    ebx
  40c5b9:	out    dx,al
  40c5ba:	xchg   edx,eax
  40c5bb:	jo     0x40c559
  40c5bd:	call   0x39fe:0xd3c2cd20
  40c5c4:	and    BYTE PTR [esi+edx*4+0x79829344],bl
  40c5cb:	add    DWORD PTR [edx+0x7eca63d9],esp
  40c5d1:	(bad)  
  40c5d3:	xchg   ebp,eax
  40c5d4:	jge    0x40c64e
  40c5d6:	enter  0xbb04,0x57
  40c5da:	add    dl,BYTE PTR [ebx]
  40c5dc:	xlat   BYTE PTR ds:[ebx]
  40c5dd:	arpl   WORD PTR [edx-0x2d],ax
  40c5e0:	cld    
  40c5e1:	add    BYTE PTR [ebx],0x80
  40c5e4:	out    dx,al
  40c5e5:	jmp    0x687b:0xd9e169d3
  40c5ec:	sub    al,0x22
  40c5ee:	out    0xe5,eax
  40c5f0:	push   ss
  40c5f1:	(bad)  
  40c5f2:	cli    
  40c5f3:	jmp    0x41fa:0x2fb99fbc
  40c5fa:	loop   0x40c5cf
  40c5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5fd:	in     eax,0xe8
  40c5ff:	hlt    
  40c600:	mov    ch,0xa8
  40c602:	out    0x3,al
  40c604:	fistp  DWORD PTR [ebp-0x40]
  40c607:	dec    ebx
  40c608:	cld    
  40c609:	ret    0xd39c
  40c60c:	mov    edi,DWORD PTR [ecx]
  40c60e:	retf   0xff74
  40c611:	mov    eax,0xecc620e2
  40c616:	push   esp
  40c617:	mov    BYTE PTR [edi+0x52],bh
  40c61a:	call   DWORD PTR [esi-0x7bfc1bc7]
  40c620:	cmp    DWORD PTR [edx],edi
  40c622:	lods   al,BYTE PTR ds:[esi]
  40c623:	into   
  40c624:	not    DWORD PTR [ecx-0xb]
  40c627:	mov    edx,ss
  40c629:	fist   DWORD PTR [ebx-0x5e]
  40c62c:	mov    dl,BYTE PTR [ebx+0x51]
  40c62f:	sub    BYTE PTR [edx],dl
  40c631:	mov    ds:0x3173f73f,eax
  40c636:	lods   al,BYTE PTR ds:[esi]
  40c637:	add    DWORD PTR [ecx+0x55],ebp
  40c63a:	xor    bh,ah
  40c63c:	or     edi,esp
  40c63e:	sahf   
  40c63f:	jno    0x40c65a
  40c641:	das    
  40c642:	push   cs
  40c643:	xchg   DWORD PTR [ebp+0x7ebf8d32],edx
  40c649:	or     esi,ebx
  40c64b:	adc    edx,DWORD PTR [eax+0x40]
  40c64e:	(bad)  
  40c64f:	shr    BYTE PTR [ecx],1
  40c651:	shr    BYTE PTR [ebx+ecx*8-0x15],1
  40c655:	mov    dh,0xc7
  40c657:	xor    eax,0x6fb25717
  40c65c:	neg    BYTE PTR [edx+0x232be0ec]
  40c662:	cwde   
  40c663:	fist   DWORD PTR [eax-0xeb441fa]
  40c669:	ja     0x40c693
  40c66b:	xchg   esp,eax
  40c66c:	sbb    DWORD PTR [ecx-0x70d70a34],ebx
  40c672:	lock xchg ecx,eax
  40c674:	pop    ecx
  40c675:	pop    ebx
  40c676:	add    edx,0x72
  40c679:	loope  0x40c641
  40c67b:	ret    0xa0fb
  40c67e:	or     DWORD PTR [edi+0x5ab826e6],eax
  40c684:	mov    ecx,0x4295e671
  40c689:	leave  
  40c68a:	loope  0x40c6ee
  40c68c:	mov    BYTE PTR [ecx],bl
  40c68e:	add    dh,BYTE PTR [ecx-0x6e05284c]
  40c694:	pop    ebp
  40c695:	fcom   DWORD PTR ds:0xf2590c97
  40c69b:	pop    ss
  40c69c:	cwde   
  40c69d:	std    
  40c69e:	cmp    dl,BYTE PTR [ecx+esi*1+0xb]
  40c6a2:	jbe    0x40c674
  40c6a4:	repnz or al,0x27
  40c6a7:	sub    eax,0x1f025716
  40c6ac:	mov    ebx,0x4d1d1ad0
  40c6b1:	aaa    
  40c6b2:	ins    BYTE PTR es:[edi],dx
  40c6b3:	inc    ecx
  40c6b4:	test   DWORD PTR ds:0xacfffa46,edi
  40c6ba:	sti    
  40c6bb:	add    cl,BYTE PTR [ebx-0x1]
  40c6be:	pop    ss
  40c6bf:	xchg   ebx,eax
  40c6c0:	mov    esi,0x378d0b17
  40c6c5:	clc    
  40c6c6:	mov    al,0x6
  40c6c8:	inc    esp
  40c6c9:	sbb    edi,DWORD PTR [eax-0x374f86f6]
  40c6cf:	xor    al,cl
  40c6d1:	in     eax,dx
  40c6d2:	sbb    ebp,DWORD PTR ds:0x353a914
  40c6d8:	xchg   BYTE PTR [ebx-0x8d4c61b],dh
  40c6de:	call   0x1860:0x1a61c0f1
  40c6e5:	adc    edx,ebp
  40c6e7:	inc    eax
  40c6e8:	push   esp
  40c6e9:	dec    edx
  40c6ea:	imul   edi,DWORD PTR [ebp+0x26c04c7a],0x41e68643
  40c6f4:	pop    ds
  40c6f5:	mov    edx,0x99536aa2
  40c6fa:	jmp    0x40c71c
  40c6fc:	pop    esp
  40c6fd:	inc    edi
  40c6fe:	push   edi
  40c6ff:	add    DWORD PTR [edi-0x1a900815],esp
  40c705:	xchg   DWORD PTR [edx+edi*2+0x17],ecx
  40c709:	jmp    0x40c6d4
  40c70b:	inc    edx
  40c70c:	jmp    0xa4eb:0x4d2e1956
  40c713:	lods   eax,DWORD PTR ds:[esi]
  40c714:	shl    DWORD PTR [eax+edx*2-0x6d],1
  40c718:	xchg   DWORD PTR [ecx+0x46],ebx
  40c71b:	pop    esp
  40c71c:	mov    ds:0xd3db207c,al
  40c721:	in     al,dx
  40c722:	call   DWORD PTR [eax+0x1ba0be07]
  40c728:	cmc    
  40c729:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c72a:	cmc    
  40c72b:	idiv   DWORD PTR [ebx*4+0x5d4d9373]
  40c732:	daa    
  40c733:	test   al,0xfc
  40c735:	or     DWORD PTR [eax-0x602fdeae],eax
  40c73b:	fistp  DWORD PTR [edx]
  40c73d:	shl    BYTE PTR [esi+0x3fdba04],0x29
  40c744:	jae    0x40c796
  40c746:	jl     0x40c74d
  40c748:	es sbb eax,0xe38e7530
  40c74e:	inc    esi
  40c74f:	dec    edx
  40c750:	cmp    al,0x1a
  40c752:	inc    ebx
  40c753:	pop    ds
  40c754:	aad    0x49
  40c756:	dec    ecx
  40c757:	xchg   ebx,eax
  40c758:	add    BYTE PTR [ebx+0x7761fa2],0xd4
  40c75f:	xor    al,BYTE PTR [ecx]
  40c761:	lods   eax,DWORD PTR ds:[esi]
  40c762:	arpl   cx,bp
  40c764:	inc    ebx
  40c765:	lea    eax,[edx-0x4f]
  40c768:	xchg   BYTE PTR [esi-0x65],ah
  40c76b:	fidiv  WORD PTR [ecx-0x738b589e]
  40c771:	not    DWORD PTR [edi-0x72]
  40c774:	pop    eax
  40c775:	jmp    0x40c74d
  40c777:	(bad)  
  40c779:	in     al,dx
  40c77a:	daa    
  40c77b:	pop    eax
  40c77c:	or     DWORD PTR [edi-0x6e],esp
  40c77f:	loopne 0x40c77e
  40c781:	rcr    DWORD PTR [edx],0x4d
  40c784:	adc    dh,BYTE PTR [ecx]
  40c786:	or     esp,edx
  40c788:	push   0x7a
  40c78a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c78b:	aaa    
  40c78c:	fucom  st(7)
  40c78e:	or     ecx,esp
  40c790:	iret   
  40c791:	mov    cl,0x2d
  40c793:	outs   dx,DWORD PTR ds:[esi]
  40c794:	and    al,BYTE PTR [eax-0x69]
  40c797:	push   esp
  40c798:	push   esi
  40c799:	popa   
  40c79a:	leave  
  40c79b:	repz mov ds:0x9a0307,eax
  40c7a1:	mov    ch,0x40
  40c7a3:	jae    0x40c7e3
  40c7a5:	pop    ecx
  40c7a6:	jnp    0x40c7be
  40c7a8:	adc    BYTE PTR [edi+0x6b],0xb8
  40c7ac:	mul    BYTE PTR [esi]
  40c7ae:	cmp    ah,0x41
  40c7b1:	out    dx,eax
  40c7b2:	scas   al,BYTE PTR es:[edi]
  40c7b3:	push   ecx
  40c7b4:	mov    ds,WORD PTR [edx-0x5]
  40c7b7:	xor    eax,0xfd1abbd6
  40c7bc:	mov    bl,0xf
  40c7be:	inc    esi
  40c7bf:	loope  0x40c80c
  40c7c1:	retf   0x978a
  40c7c4:	push   esi
  40c7c5:	fisub  WORD PTR [esi-0x59]
  40c7c8:	and    BYTE PTR [ebp-0x53],0x8
  40c7cc:	fwait
  40c7cd:	mov    ch,0x20
  40c7cf:	xchg   esp,eax
  40c7d0:	mov    DWORD PTR [esi+0x5306e17f],edi
  40c7d6:	outs   dx,DWORD PTR ds:[esi]
  40c7d7:	push   esp
  40c7d8:	popf   
  40c7d9:	mov    eax,0x89e3a14d
  40c7de:	push   cs
  40c7df:	add    DWORD PTR [ebx],eax
  40c7e1:	jns    0x40c7f7
  40c7e3:	mov    edi,0x76acc094
  40c7e8:	pop    edx
  40c7e9:	or     al,0x70
  40c7eb:	or     al,0x10
  40c7ed:	jns    0x40c79e
  40c7ef:	je     0x40c840
  40c7f1:	and    ebx,DWORD PTR [ebx+0x6e]
  40c7f4:	xor    ebp,DWORD PTR [esp+esi*4-0x2f]
  40c7f8:	or     BYTE PTR [edx+0x388a9c8b],dl
  40c7fe:	test   eax,0x1210d5f6
  40c803:	stos   BYTE PTR es:[edi],al
  40c804:	arpl   WORD PTR [ebx-0x22ef2160],si
  40c80a:	repnz push ebp
  40c80c:	loopne 0x40c868
  40c80e:	xchg   ecx,eax
  40c80f:	out    0x5e,al
  40c811:	jbe    0x40c7e6
  40c813:	lods   al,BYTE PTR ds:[esi]
  40c814:	jp     0x40c7da
  40c816:	push   0x9f57d6ba
  40c81b:	fcomp  QWORD PTR [edi+0x36]
  40c81e:	add    BYTE PTR [edi-0x64],0x84
  40c822:	mov    ds:0xbc0f123a,al
  40c827:	mov    al,0x12
  40c829:	js     0x40c807
  40c82b:	lock xchg edx,eax
  40c82d:	mov    ch,0x65
  40c82f:	(bad)  
  40c830:	enter  0xc4d4,0xdd
  40c834:	add    al,0xd
  40c836:	rcr    BYTE PTR [edx-0x6c],cl
  40c839:	jle    0x40c8a6
  40c83b:	into   
  40c83c:	dec    edx
  40c83d:	shl    BYTE PTR [ebx-0x1bd5cebf],0x1e
  40c844:	add    BYTE PTR [ebp+0x37799c2a],bh
  40c84a:	and    DWORD PTR [esi+0x53],eax
  40c84d:	dec    ebx
  40c84e:	sub    al,0x27
  40c850:	mov    ecx,0x3e43fa8f
  40c855:	or     eax,0x207d7f12
  40c85a:	cmp    eax,0xa3375b8c
  40c85f:	mov    dh,0x30
  40c861:	push   esi
  40c862:	jmp    edx
  40c864:	sbb    edx,ebp
  40c866:	push   cs
  40c867:	icebp  
  40c868:	sub    dh,BYTE PTR [edi+eax*2]
  40c86b:	mov    ebx,0x6266c833
  40c870:	ror    BYTE PTR [ebx+0x4],cl
  40c873:	js     0x40c8ef
  40c875:	aad    0x37
  40c877:	pop    edx
  40c878:	xchg   edi,eax
  40c879:	jbe    0x40c85f
  40c87b:	sbb    BYTE PTR [ecx],dh
  40c87d:	mov    edi,0x79f223bd
  40c882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c883:	mov    esi,0xfecccc5b
  40c888:	push   ebx
  40c889:	hlt    
  40c88a:	jg     0x40c8b0
  40c88c:	pop    edi
  40c88d:	dec    ebx
  40c88e:	fstp   DWORD PTR [ecx]
  40c890:	out    dx,eax
  40c891:	mov    ebp,0x547c30b1
  40c896:	sbb    BYTE PTR [ebp+0x2d],bh
  40c899:	xchg   edi,eax
  40c89a:	push   ebp
  40c89b:	test   ebx,0x383fcda7
  40c8a1:	xchg   esi,eax
  40c8a2:	cmp    dh,ch
  40c8a4:	cwde   
  40c8a5:	nop
  40c8a6:	mov    ?,edx
  40c8a8:	sub    eax,0x26cfdf62
  40c8ad:	sub    DWORD PTR [ebx],ebx
  40c8af:	pop    ds
  40c8b0:	xlat   BYTE PTR ds:[ebx]
  40c8b1:	sbb    ah,BYTE PTR [edi]
  40c8b3:	cdq    
  40c8b4:	add    BYTE PTR [ecx],al
  40c8b6:	pop    edx
  40c8b7:	loopne 0x40c8a0
  40c8b9:	pop    es
  40c8ba:	and    DWORD PTR [ecx+0xc4cdfdc],edx
  40c8c0:	push   esi
  40c8c1:	cmp    al,0xb6
  40c8c3:	mov    esi,0xa88985d1
  40c8c8:	sti    
  40c8c9:	sbb    ch,BYTE PTR [edx+0x50]
  40c8cc:	dec    esp
  40c8cd:	call   0x61e7439e
  40c8d2:	push   cs
  40c8d3:	retf   
  40c8d4:	stc    
  40c8d5:	fidivr DWORD PTR [esp+eax*8+0x408ee96f]
  40c8dc:	push   DWORD PTR [ebp+0x2d3edcb1]
  40c8e2:	mov    bl,cl
  40c8e4:	fdivr  QWORD PTR es:[edx+0x29628b0f]
  40c8eb:	or     DWORD PTR [ebx-0x54],0xfc77683f
  40c8f2:	sbb    BYTE PTR [eax-0x721762ed],0xb7
  40c8f9:	rcl    al,cl
  40c8fb:	cdq    
  40c8fc:	ret    0x90ba
  40c8ff:	lods   al,BYTE PTR ds:[esi]
  40c900:	pop    edx
  40c901:	cli    
  40c902:	fsubr  QWORD PTR [ebx+0x26e34510]
  40c908:	popa   
  40c909:	inc    ebp
  40c90a:	push   edi
  40c90b:	inc    edi
  40c90c:	fisubr WORD PTR ds:0x58d6230f
  40c912:	push   esp
  40c913:	mov    cl,BYTE PTR [ecx-0x13]
  40c916:	enter  0xa39b,0xb4
  40c91a:	xchg   esi,eax
  40c91b:	pop    esp
  40c91c:	push   eax
  40c91d:	pop    ds
  40c91e:	cmp    DWORD PTR [eax-0x69],esp
  40c921:	test   BYTE PTR [edx-0x37401d4d],bl
  40c927:	cmp    cl,BYTE PTR [edi-0x323454c8]
  40c92d:	inc    eax
  40c92e:	sub    eax,0xc0b58739
  40c933:	jno    0x40c8eb
  40c935:	lahf   
  40c936:	stos   DWORD PTR es:[edi],eax
  40c937:	mov    eax,ds:0x13c6911e
  40c93c:	jmp    0x989592b4
  40c941:	lds    ecx,FWORD PTR [edi+eiz*1]
  40c944:	pushf  
  40c945:	jnp    0x40c8dc
  40c947:	iret   
  40c948:	and    eax,0xbca959d7
  40c94d:	and    edx,DWORD PTR [ebx+edx*8]
  40c950:	sbb    eax,0x63ce9473
  40c955:	and    BYTE PTR [eax+eax*2-0x71],bh
  40c959:	sbb    al,0xf3
  40c95b:	mov    al,ds:0x9e6b12f4
  40c960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c961:	bound  ebx,QWORD PTR [edx-0x3d]
  40c964:	xchg   esp,eax
  40c965:	pop    ecx
  40c966:	pop    ecx
  40c967:	fs jbe 0x40c915
  40c96a:	pop    es
  40c96b:	pop    ecx
  40c96c:	in     eax,0x14
  40c96e:	retf   
  40c96f:	aam    0xbc
  40c971:	ror    DWORD PTR [edi+eax*4-0x29],0x57
  40c976:	push   cs
  40c977:	fs mov dl,0xd0
  40c97a:	ret    
  40c97b:	cmp    BYTE PTR [edx+0x5840c80c],ch
  40c981:	add    ebp,DWORD PTR [esi+0x6c1933fb]
  40c987:	dec    ebp
  40c988:	fwait
  40c989:	mov    edx,0xfed20e38
  40c98e:	xchg   esp,eax
  40c98f:	gs cwde 
  40c991:	mov    ss,ecx
  40c993:	loop   0x40c999
  40c995:	mov    eax,0x565cd5d9
  40c99a:	(bad)  
  40c99c:	add    BYTE PTR [edx-0xd4873a6],0xda
  40c9a3:	repnz in eax,0x3d
  40c9a6:	loop   0x40ca0e
  40c9a8:	mov    ebx,0xed1ac114
  40c9ad:	in     al,0x77
  40c9af:	and    dh,bh
  40c9b1:	stos   DWORD PTR es:[edi],eax
  40c9b2:	(bad)  
  40c9b4:	sub    ebx,edx
  40c9b6:	and    DWORD PTR [eax-0x53e2328d],ebp
  40c9bc:	mov    ds:0x1041b5fc,eax
  40c9c1:	jns    0x40c9aa
  40c9c3:	dec    ecx
  40c9c4:	clc    
  40c9c5:	fcomp  DWORD PTR [eax-0x65]
  40c9c8:	mov    al,BYTE PTR [ecx]
  40c9ca:	adc    DWORD PTR [eax],esp
  40c9cc:	mov    al,0x6b
  40c9ce:	push   ebp
  40c9cf:	push   esp
  40c9d0:	jae    0x40c9aa
  40c9d2:	mov    ds:0x8c9a2a35,eax
  40c9d7:	call   0x2611:0x84aa6da2
  40c9de:	sbb    DWORD PTR [eax+ecx*8],ebp
  40c9e1:	push   eax
  40c9e2:	shl    edi,cl
  40c9e4:	jge    0x40c9fa
  40c9e6:	out    dx,al
  40c9e7:	ror    dh,1
  40c9e9:	int    0x87
  40c9eb:	push   esi
  40c9ec:	pop    ss
  40c9ed:	xor    ebp,DWORD PTR [ebp+0x25]
  40c9f0:	inc    eax
  40c9f1:	and    BYTE PTR [ecx-0x703912e],bh
  40c9f7:	cmp    BYTE PTR [ebx],0x21
  40c9fa:	mov    dh,0xe1
  40c9fc:	lea    esp,[eax]
  40c9fe:	jmp    0x40c9a8
  40ca00:	jl     0x40ca1e
  40ca02:	jg     0x40c9f3
  40ca04:	mov    ch,dl
  40ca06:	push   edi
  40ca07:	cmp    BYTE PTR [eax+0x7],dl
  40ca0a:	jb     0x40ca05
  40ca0c:	pop    ecx
  40ca0d:	loopne 0x40ca6b
  40ca0f:	cld    
  40ca10:	and    BYTE PTR [ecx+edx*1],dh
  40ca13:	sar    DWORD PTR [esi+ebx*1-0x4a],1
  40ca17:	and    ah,bh
  40ca19:	inc    edx
  40ca1a:	push   0xffffffd1
  40ca1c:	mov    al,ds:0x3c3cdce9
  40ca21:	cmp    eax,DWORD PTR [ecx*2+0x4b7490b5]
  40ca28:	sbb    eax,0xe41fc4fa
  40ca2d:	or     edx,DWORD PTR [edx-0x6e11505c]
  40ca33:	pop    esp
  40ca34:	iret   
  40ca35:	dec    edx
  40ca36:	mov    edi,0x53cca9b2
  40ca3b:	sar    BYTE PTR [esi],cl
  40ca3d:	mov    ecx,0x30ea5bbe
  40ca42:	and    BYTE PTR [ebp+0x9],0x7f
  40ca46:	inc    edi
  40ca47:	lahf   
  40ca48:	ud0    ecx,DWORD PTR [edi]
  40ca4b:	xchg   esp,eax
  40ca4c:	xor    BYTE PTR [ecx-0x34],ch
  40ca4f:	mov    al,0xf5
  40ca51:	rcr    BYTE PTR [ebx+eiz*4-0x5c],1
  40ca55:	mov    ebx,0xb7c02b9f
  40ca5a:	cmp    dl,BYTE PTR [ebx+0x63590645]
  40ca60:	es pushf 
  40ca62:	add    ebp,DWORD PTR [edx-0x68183ad8]
  40ca68:	inc    ebp
  40ca69:	xor    bh,BYTE PTR [edi+0xb7760b5]
  40ca6f:	popa   
  40ca70:	aaa    
  40ca71:	jmp    ecx
  40ca73:	adc    al,0x51
  40ca75:	fwait
  40ca76:	je     0x40ca9c
  40ca78:	sbb    BYTE PTR [eax],0x49
  40ca7b:	sahf   
  40ca7c:	pop    esi
  40ca7d:	mov    al,0xb7
  40ca7f:	push   0x4f307e86
  40ca84:	jmp    0x40cadf
  40ca86:	out    0xc9,al
  40ca88:	push   edi
  40ca89:	js     0x40ca0b
  40ca8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca8c:	add    eax,0x269e78b7
  40ca91:	stos   DWORD PTR es:[edi],eax
  40ca92:	ds xchg edx,eax
  40ca94:	adc    DWORD PTR [eax],0x7f79fbb
  40ca9a:	out    0x55,al
  40ca9c:	icebp  
  40ca9d:	pusha  
  40ca9e:	sbb    bl,BYTE PTR [eax*4+0x4ef4a683]
  40caa5:	ret    
  40caa6:	inc    esp
  40caa7:	xor    esi,DWORD PTR [edx+edi*8+0x25812de6]
  40caae:	call   0x451b:0xfad6541f
  40cab5:	mov    edi,0x8128460c
  40caba:	aaa    
  40cabb:	arpl   WORD PTR [esi-0x7d],dx
  40cabe:	cmc    
  40cabf:	mov    bh,0x4c
  40cac1:	sar    BYTE PTR [ecx-0x7a],cl
  40cac4:	pop    es
  40cac5:	xchg   esp,eax
  40cac6:	fst    DWORD PTR [edi-0x1ad50b36]
  40cacc:	lahf   
  40cacd:	subps  xmm3,XMMWORD PTR [ebx]
  40cad0:	pusha  
  40cad1:	dec    ebp
  40cad2:	lock pop ss
  40cad4:	bound  esi,QWORD PTR [ebx-0x63]
  40cad7:	mov    edx,DWORD PTR [ecx-0x5e2defa0]
  40cadd:	xchg   edi,eax
  40cade:	imul   ebx,esi,0xffffffe1
  40cae1:	xlat   BYTE PTR ds:[ebx]
  40cae2:	hlt    
  40cae3:	push   0x71c928da
  40cae8:	out    0xf4,al
  40caea:	adc    eax,0xacfae2a7
  40caef:	push   eax
  40caf0:	inc    esi
  40caf1:	xchg   BYTE PTR [ebp+0x70b37097],dl
  40caf7:	in     eax,0x27
  40caf9:	xor    eax,0xa67b58eb
  40cafe:	js     0x40cb2f
  40cb00:	jo     0x40caeb
  40cb02:	inc    ebx
  40cb03:	mov    dl,0x9d
  40cb05:	sub    DWORD PTR [edi-0x3a],edx
  40cb08:	xchg   DWORD PTR [esi+0x5b9af772],esp
  40cb0e:	cmp    BYTE PTR [ecx+0x32b8345a],dh
  40cb14:	cs mov esp,0xb77474d4
  40cb1a:	stc    
  40cb1b:	sub    BYTE PTR [ecx],0xc8
  40cb1e:	rcl    BYTE PTR [eax+0x30bb591d],cl
  40cb24:	mov    ch,0x1e
  40cb26:	rol    DWORD PTR ss:[ebx+0x15eaf701],cl
  40cb2d:	jl     0x40cab5
  40cb2f:	adc    DWORD PTR ds:0x1fdec113,esi
  40cb35:	std    
  40cb36:	xor    DWORD PTR [ebx+0x6912bc84],eax
  40cb3c:	jp     0x40cb52
  40cb3e:	mov    BYTE PTR [ebx],0xe9
  40cb41:	pop    eax
  40cb42:	gs out 0x8c,al
  40cb45:	pop    ebp
  40cb46:	outs   dx,BYTE PTR ds:[esi]
  40cb47:	popa   
  40cb48:	ja     0x40cb5d
  40cb4a:	pop    ds
  40cb4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb4c:	push   edi
  40cb4d:	xor    DWORD PTR [esi],ebp
  40cb4f:	(bad)
  40cb53:	xlat   BYTE PTR ds:[ebx]
  40cb54:	js     0x40cbd3
  40cb56:	pop    ecx
  40cb57:	adc    eax,0x1121a7cf
  40cb5c:	out    0xab,eax
  40cb5e:	daa    
  40cb5f:	ret    
  40cb60:	inc    ebp
  40cb61:	and    BYTE PTR ds:0xde7124c4,bh
  40cb67:	fdiv   DWORD PTR [edx+ebx*4-0x9]
  40cb6b:	(bad)  
  40cb6c:	retf   0x5c6f
  40cb6f:	xchg   esi,eax
  40cb70:	mov    esp,0xb926839c
  40cb75:	and    ah,BYTE PTR [ecx+esi*8-0x6ff4aaf5]
  40cb7c:	les    ebp,FWORD PTR [ebp+0x5f]
  40cb7f:	in     eax,dx
  40cb80:	sar    al,0xb3
  40cb83:	jnp    0x40cb85
  40cb85:	mov    ch,0xb7
  40cb87:	push   ebp
  40cb88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb89:	sbb    DWORD PTR [edx-0x6ff19df0],0xf1bda73c
  40cb93:	in     al,0x55
  40cb95:	pop    ecx
  40cb96:	xlat   BYTE PTR ds:[ebx]
  40cb97:	inc    ebp
  40cb98:	inc    esi
  40cb99:	call   0x87ca:0x39c5de39
  40cba0:	bound  ebp,QWORD PTR [esi]
  40cba2:	sub    eax,0x11910c92
  40cba7:	push   esp
  40cba8:	cmp    eax,0x91071e0e
  40cbad:	into   
  40cbae:	xchg   esp,eax
  40cbaf:	jge    0x40cbe9
  40cbb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbb2:	cld    
  40cbb3:	pushf  
  40cbb4:	dec    edx
  40cbb5:	sbb    eax,ebp
  40cbb7:	jae    0x40cbe5
  40cbb9:	mul    BYTE PTR [ebx+0x3cfb932e]
  40cbbf:	cld    
  40cbc0:	and    al,0xe4
  40cbc2:	retf   0x438e
  40cbc5:	rol    ebx,1
  40cbc7:	outs   dx,DWORD PTR ds:[esi]
  40cbc8:	add    al,0xe1
  40cbca:	call   0xe43d1531
  40cbcf:	adc    dl,dl
  40cbd1:	xchg   esi,eax
  40cbd2:	arpl   WORD PTR [eax+0x51],di
  40cbd5:	xlat   BYTE PTR ds:[ebx]
  40cbd6:	jo     0x40cbf2
  40cbd8:	call   0xc1a9:0xf2355666
  40cbdf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbe0:	push   0xf444887c
  40cbe5:	add    ecx,0x5f
  40cbe8:	fwait
  40cbe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbea:	xchg   ebx,eax
  40cbeb:	jmp    0xd56711cd
  40cbf0:	out    dx,al
  40cbf1:	jno    0x40cbe7
  40cbf3:	mov    ds:0x8aba35ae,eax
  40cbf8:	xchg   ebx,eax
  40cbf9:	adc    eax,0x791db948
  40cbfe:	jb     0x40cc3d
  40cc00:	inc    ebp
  40cc01:	aam    0x3b
  40cc03:	cmp    ebp,DWORD PTR [esp+edi*1+0x6070a887]
  40cc0a:	sub    eax,0xc4bb36e2
  40cc0f:	es leave 
  40cc11:	outs   dx,DWORD PTR ds:[esi]
  40cc12:	fistp  WORD PTR [eax]
  40cc14:	jb     0x40cc4f
  40cc16:	or     dh,BYTE PTR [edx-0x3f4dd264]
  40cc1c:	mov    ?,WORD PTR [edx+0x1f]
  40cc1f:	jo     0x40cbd0
  40cc21:	push   ecx
  40cc22:	icebp  
  40cc23:	imul   ebx,DWORD PTR [esi-0x42],0x8178d79a
  40cc2a:	mov    WORD PTR ds:0x1e68088,cs
  40cc30:	pop    esi
  40cc31:	arpl   WORD PTR [ebx-0x59],si
  40cc34:	daa    
  40cc35:	cmp    esi,DWORD PTR [esi+ecx*8-0x24706d89]
  40cc3c:	out    0xca,al
  40cc3e:	jbe    0x40cc00
  40cc40:	mov    bl,0x96
  40cc42:	mov    esi,0xe96e9ea3
  40cc47:	imul   ecx
  40cc49:	leave  
  40cc4a:	mov    dh,0x2c
  40cc4c:	lea    ebp,[edx+ebx*1+0x3f]
  40cc50:	jmp    0x40cc94
  40cc52:	mov    ds:0x3a83a6b6,al
  40cc57:	inc    edx
  40cc58:	lods   eax,DWORD PTR ds:[esi]
  40cc59:	cmp    eax,0x3224b462
  40cc5e:	xor    BYTE PTR [eax],ah
  40cc60:	push   ds
  40cc61:	or     ebx,DWORD PTR ds:0x4431cd8
  40cc67:	bnd jns 0x40cc81
  40cc6a:	xchg   esi,eax
  40cc6b:	dec    eax
  40cc6c:	shl    ah,cl
  40cc6e:	xchg   esi,eax
  40cc6f:	jmp    0xdc4b:0xfd094c83
  40cc76:	call   0xbb59f632
  40cc7b:	std    
  40cc7c:	test   DWORD PTR [edx-0x19e6d0aa],eax
  40cc82:	pop    es
  40cc83:	cld    
  40cc84:	inc    ecx
  40cc85:	jne    0x40ccfb
  40cc87:	and    DWORD PTR ds:0x160a7081,0x9fee2659
  40cc91:	cs mov dl,0xf
  40cc94:	aas    
  40cc95:	xor    DWORD PTR [edi],esi
  40cc97:	int    0x78
  40cc99:	dec    edx
  40cc9a:	cld    
  40cc9b:	mov    ds:0x250f26d9,eax
  40cca0:	(bad)  
  40cca1:	sar    dl,1
  40cca3:	pusha  
  40cca4:	mov    ?,esp
  40cca6:	das    
  40cca7:	into   
  40cca8:	aaa    
  40cca9:	push   0x10e2cd7f
  40ccae:	enter  0xd709,0x17
  40ccb2:	ss xchg edx,esi
  40ccb5:	xor    bl,BYTE PTR [ebp+0x2b]
  40ccb8:	sbb    BYTE PTR [esi],ch
  40ccba:	add    DWORD PTR [edi],0xffffffbc
  40ccbd:	in     al,dx
  40ccbe:	cmp    eax,0x4a2d253a
  40ccc4:	push   ebx
  40ccc5:	cli    
  40ccc6:	jp     0x40cd06
  40ccc8:	inc    ebp
  40ccc9:	out    0x78,eax
  40cccb:	sbb    al,0x8d
  40cccd:	jle    0x40ccc5
  40cccf:	(bad)  
  40ccd0:	adc    eax,0xe7800362
  40ccd5:	push   eax
  40ccd6:	push   ds
  40ccd7:	pop    esp
  40ccd8:	retf   0xd5c8
  40ccdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccdc:	push   edx
  40ccdd:	and    ecx,ecx
  40ccdf:	hlt    
  40cce0:	div    dh
  40cce2:	or     bh,BYTE PTR [ecx+0x1b0a3b9]
  40cce8:	sbb    BYTE PTR [ecx],bh
  40ccea:	xchg   BYTE PTR ds:0xb4dca678,cl
  40ccf0:	loope  0x40ccbf
  40ccf2:	xchg   esp,eax
  40ccf3:	(bad)  
  40ccf4:	popf   
  40ccf5:	mov    ah,0x73
  40ccf7:	pushw  ds
  40ccf9:	out    0x9c,al
  40ccfb:	aam    0xff
  40ccfd:	xchg   ecx,eax
  40ccfe:	add    ch,BYTE PTR [esi+0x267b4ce9]
  40cd04:	jmp    0x6cc3b635
  40cd09:	xor    BYTE PTR [eax-0x4cce96cb],ah
  40cd0f:	inc    eax
  40cd10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd11:	rcl    DWORD PTR [esi+0x423b878e],0x8f
  40cd18:	inc    edi
  40cd19:	ins    DWORD PTR es:[edi],dx
  40cd1a:	loope  0x40cd98
  40cd1c:	dec    eax
  40cd1d:	xor    DWORD PTR ds:0xa7b5ac30,esp
  40cd23:	retf   
  40cd24:	int3   
  40cd25:	cmp    eax,0xdaf0b9b7
  40cd2a:	xchg   BYTE PTR ss:[ebx-0x80],bl
  40cd2e:	and    DWORD PTR ds:0x5cd2236a,0x1fa9c961
  40cd38:	pop    edi
  40cd39:	fbld   TBYTE PTR [ebp-0x64]
  40cd3c:	and    eax,0xb3524aad
  40cd41:	hlt    
  40cd42:	xor    ebp,DWORD PTR [ebp-0x71]
  40cd45:	and    DWORD PTR [ebp+0x7d171e7d],0xffffffcc
  40cd4c:	push   ebp
  40cd4d:	sub    DWORD PTR [edi-0x1aedf000],ebx
  40cd53:	test   BYTE PTR [ebx+0x30489e50],0xfb
  40cd5a:	jne    0x40cd73
  40cd5c:	add    eax,0xfa28dc7b
  40cd61:	push   edi
  40cd62:	dec    ebx
  40cd63:	add    DWORD PTR [edi],ebp
  40cd65:	pop    ebp
  40cd66:	push   cs
  40cd67:	pop    es
  40cd68:	adc    DWORD PTR [edx-0x2e460e50],ebx
  40cd6e:	mov    edi,0x6386c333
  40cd73:	lahf   
  40cd74:	fwait
  40cd75:	cdq    
  40cd76:	or     DWORD PTR [eax+0x6c92fbef],ebp
  40cd7c:	cmc    
  40cd7d:	and    eax,DWORD PTR [edi+0x6eedf5b3]
  40cd83:	ins    BYTE PTR es:[edi],dx
  40cd84:	fbstp  TBYTE PTR [edx]
  40cd86:	pop    eax
  40cd87:	(bad)  
  40cd88:	xchg   edi,eax
  40cd89:	add    eax,0xffa7af3e
  40cd8e:	das    
  40cd8f:	dec    ecx
  40cd90:	fs and edx,ecx
  40cd93:	pop    edi
  40cd94:	pop    es
  40cd95:	(bad)  
  40cd96:	push   esi
  40cd97:	shl    DWORD PTR [edi+esi*4-0x53],1
  40cd9b:	inc    ebp
  40cd9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd9d:	out    0x3,eax
  40cd9f:	cli    
  40cda0:	add    BYTE PTR [esi-0x1bbdda50],al
  40cda6:	int3   
  40cda7:	ja     0x40cdef
  40cda9:	loope  0x40ce00
  40cdab:	lock lahf 
  40cdad:	inc    edx
  40cdae:	inc    ebp
  40cdaf:	lock xchg ecx,eax
  40cdb1:	push   ecx
  40cdb2:	push   ss
  40cdb3:	mov    WORD PTR [esp+ecx*4+0x6c223d0e],es
  40cdba:	push   esp
  40cdbb:	cmp    bh,dl
  40cdbd:	adc    DWORD PTR [edi-0x6],0x1625d87
  40cdc4:	divps  xmm1,XMMWORD PTR [edx]
  40cdc7:	in     al,0x19
  40cdc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdca:	pop    ecx
  40cdcb:	icebp  
  40cdcc:	adc    al,BYTE PTR [eax]
  40cdce:	addr16 mov eax,ds:0xabb3
  40cdd2:	mov    bl,ch
  40cdd4:	outs   dx,DWORD PTR ds:[esi]
  40cdd5:	dec    esp
  40cdd6:	xchg   edi,eax
  40cdd7:	jmp    0x1b7c:0xf246b097
  40cdde:	cli    
  40cddf:	int3   
  40cde0:	lea    edi,[esi-0x31410d57]
  40cde6:	xchg   ebp,eax
  40cde7:	out    0x3c,eax
  40cde9:	pop    edx
  40cdea:	mov    ebp,0x3413a6c1
  40cdef:	lea    edi,[edx]
  40cdf1:	dec    ebx
  40cdf2:	mov    ch,0x23
  40cdf4:	xchg   edx,eax
  40cdf5:	(bad)  
  40cdf7:	cmc    
  40cdf8:	out    0x5,al
  40cdfa:	mov    ebx,0xed06b9cc
  40cdff:	mov    ebx,0x65a83266
  40ce04:	ret    0xb2b3
  40ce07:	push   ebp
  40ce08:	and    al,0x28
  40ce0a:	cmp    al,BYTE PTR [ebx]
  40ce0c:	stos   DWORD PTR es:[edi],eax
  40ce0d:	shl    DWORD PTR [ebp-0x2c],1
  40ce10:	cmp    eax,0x60c3f69d
  40ce15:	arpl   WORD PTR [eax-0x1],bx
  40ce18:	in     eax,0xd1
  40ce1a:	dec    edx
  40ce1b:	mov    ebx,0xf16701f0
  40ce20:	jp     0x40cde4
  40ce22:	(bad)  
  40ce23:	repz mov cl,ah
  40ce26:	pop    edx
  40ce27:	pop    ebp
  40ce28:	fcmovnb st,st(6)
  40ce2a:	shl    DWORD PTR [ebp+0x6b],1
  40ce2d:	mov    esi,0x5fb85d4c
  40ce32:	inc    esp
  40ce33:	out    0xe9,al
  40ce35:	sbb    BYTE PTR [ebp+0x38138fc1],al
  40ce3b:	or     esp,DWORD PTR [eax+0x789e47ec]
  40ce41:	cmc    
  40ce42:	push   ds
  40ce43:	imul   edx,DWORD PTR [ebx],0x34
  40ce46:	loop   0x40ce45
  40ce48:	jb     0x40cdd7
  40ce4a:	ins    BYTE PTR es:[edi],dx
  40ce4b:	xchg   esi,eax
  40ce4c:	aas    
  40ce4d:	fs push ss
  40ce4f:	jbe    0x40ce25
  40ce51:	mov    eax,DWORD PTR [eax-0x7b]
  40ce54:	aas    
  40ce55:	ror    DWORD PTR [edx+0xb],1
  40ce58:	add    eax,0x87561a5a
  40ce5d:	mov    ds:0x6bf2febd,al
  40ce62:	in     al,dx
  40ce63:	dec    ebx
  40ce64:	lea    esp,[ecx]
  40ce66:	pop    ebx
  40ce67:	push   ds
  40ce68:	pop    eax
  40ce69:	cld    
  40ce6a:	sbb    BYTE PTR [ebp+0x60101127],bl
  40ce70:	jg     0x40cee8
  40ce72:	daa    
  40ce73:	or     dl,dl
  40ce75:	(bad)  
  40ce76:	loope  0x40ce4f
  40ce78:	sbb    BYTE PTR [edx+0x34cb3f74],bl
  40ce7e:	shl    BYTE PTR [esi+0x93f8581],cl
  40ce84:	mov    cl,0xd8
  40ce86:	rol    BYTE PTR [ebx+ecx*8],1
  40ce89:	test   BYTE PTR [eax],ch
  40ce8b:	xchg   edx,eax
  40ce8c:	fdivr  st(6),st
  40ce8e:	add    al,0x2b
  40ce90:	enter  0xba4d,0x87
  40ce94:	shr    DWORD PTR [esi-0x3dda78da],1
  40ce9a:	or     eax,0xb8a50f20
  40ce9f:	stc    
  40cea0:	sahf   
  40cea1:	jl     0x40ce94
  40cea3:	push   ecx
  40cea4:	mov    ds:0xe4613d6d,eax
  40cea9:	shr    DWORD PTR [esi-0x1abf6078],cl
  40ceaf:	xor    BYTE PTR [edi-0x669b1163],dh
  40ceb5:	or     bl,bh
  40ceb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ceb8:	jb     0x40ceaf
  40ceba:	cdq    
  40cebb:	xchg   ebx,eax
  40cebc:	int3   
  40cebd:	ja     0x40cf0c
  40cebf:	mov    eax,0x91fe4725
  40cec4:	xchg   esp,eax
  40cec5:	jne    0x40cf21
  40cec7:	call   0x5e1:0xdf15624a
  40cece:	add    edx,edx
  40ced0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ced1:	in     al,dx
  40ced2:	or     al,BYTE PTR [edi]
  40ced4:	pop    ebp
  40ced5:	mov    esp,0xb0e3f1c4
  40ceda:	and    edx,DWORD PTR [edi-0x59]
  40cedd:	mov    ebp,0x2bcc4e5e
  40cee2:	loope  0x40cf1a
  40cee4:	daa    
  40cee5:	js     0x40cef4
  40cee7:	dec    ecx
  40cee8:	pop    esp
  40cee9:	cmp    al,bh
  40ceeb:	xchg   BYTE PTR [edi-0x31],ah
  40ceee:	ss (bad) 
  40cef1:	pop    edx
  40cef2:	adc    BYTE PTR [ebp-0x292c910c],dl
  40cef8:	xlat   BYTE PTR ds:[ebx]
  40cef9:	xchg   ebp,eax
  40cefa:	fldcw  WORD PTR [esi]
  40cefc:	xchg   ecx,eax
  40cefd:	mov    dl,0x60
  40ceff:	imul   edx,DWORD PTR [esi+0x47],0x390db852
  40cf06:	or     al,0x96
  40cf08:	das    
  40cf09:	imul   esi,DWORD PTR [ebp+0x3510b54b],0x20
  40cf10:	pop    edx
  40cf11:	loopne 0x40cf49
  40cf13:	mov    dl,0xc5
  40cf15:	test   eax,0x9298fe70
  40cf1a:	push   ds
  40cf1b:	aam    0xa1
  40cf1d:	mov    bh,0x38
  40cf1f:	sub    DWORD PTR ds:[ebx-0x153bd456],edx
  40cf26:	sub    BYTE PTR gs:0x52abbe37,dl
  40cf2d:	pop    ss
  40cf2e:	scas   al,BYTE PTR es:[edi]
  40cf2f:	aas    
  40cf30:	lea    edi,[edi+0x34]
  40cf33:	cmp    edi,DWORD PTR [edx]
  40cf35:	xchg   BYTE PTR [edi+0x26],cl
  40cf38:	jo     0x40cf68
  40cf3a:	int3   
  40cf3b:	mov    ah,0xbb
  40cf3d:	mov    dh,bl
  40cf3f:	xor    al,0x20
  40cf41:	mov    ?,WORD PTR [ebp-0x5fa5dbcc]
  40cf47:	cmp    BYTE PTR [ebx+ebx*4-0x5afd6ed4],bl
  40cf4e:	xor    al,0xa7
  40cf50:	adc    ah,dh
  40cf52:	mov    al,ds:0x3a3dd169
  40cf57:	bnd jb 0x40cee4
  40cf5a:	or     eax,0x56dd3b30
  40cf5f:	out    dx,al
  40cf60:	fwait
  40cf61:	int3   
  40cf62:	test   bh,0x89
  40cf65:	mov    ebx,0x17359a90
  40cf6a:	jg     0x40cef9
  40cf6c:	cmp    dh,BYTE PTR [esi]
  40cf6e:	adc    BYTE PTR [ebx+0x566cbf18],0xe0
  40cf75:	pop    ecx
  40cf76:	pop    eax
  40cf77:	cmp    DWORD PTR [ebx-0xb249045],0xdd91b7c6
  40cf81:	ins    BYTE PTR es:[edi],dx
  40cf82:	cld    
  40cf83:	fidiv  WORD PTR [edx]
  40cf85:	in     eax,dx
  40cf86:	pop    ebx
  40cf87:	jl     0x40cf57
  40cf89:	and    DWORD PTR [ebp-0x1591493b],0x5a
  40cf90:	bound  esi,QWORD PTR [eax]
  40cf92:	cdq    
  40cf93:	mov    esi,0x953aa5d8
  40cf98:	push   edx
  40cf99:	push   ecx
  40cf9a:	sub    eax,0x6fbc2b22
  40cf9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfa0:	add    ebx,ecx
  40cfa2:	cmc    
  40cfa3:	cmp    eax,0xec937f5d
  40cfa8:	hlt    
  40cfa9:	jl     0x40cffd
  40cfab:	mov    cl,BYTE PTR [esi-0x326f9fc1]
  40cfb1:	(bad)  
  40cfb2:	(bad)  
  40cfb3:	mov    esi,0x96710411
  40cfb8:	cmp    DWORD PTR [eax-0x73442c1d],edi
  40cfbe:	or     DWORD PTR [eax+0x26376ef8],esp
  40cfc4:	jmp    0x6a87:0x4bb4ad34
  40cfcb:	mov    al,0xeb
  40cfcd:	jns    0x40cf96
  40cfcf:	ss aad 0x9b
  40cfd2:	push   edx
  40cfd3:	into   
  40cfd4:	lds    esp,FWORD PTR ds:0x20cb8e6f
  40cfda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfdb:	inc    ebp
  40cfdc:	pop    ecx
  40cfdd:	aaa    
  40cfde:	dec    eax
  40cfdf:	fs das 
  40cfe1:	adc    ch,BYTE PTR [edi-0x27b9a6a7]
  40cfe7:	add    DWORD PTR [esi+0x58],ecx
  40cfea:	shl    DWORD PTR [ecx-0x32f0d352],0x48
  40cff1:	js     0x40cfde
  40cff3:	adc    DWORD PTR [ebp+0x35ceda1b],esi
  40cff9:	fcom   DWORD PTR [ebx+0x36]
  40cffc:	jmp    0x40d006
  40cffe:	je     0x40d076
  40d000:	xor    al,0xdf
  40d002:	add    BYTE PTR [ecx-0x73],al
  40d005:	pop    edi
  40d006:	ret    0xa0e1
  40d009:	lea    esp,[esi]
  40d00b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d00c:	xchg   esp,eax
  40d00d:	mov    edx,0xcee05755
  40d012:	shl    BYTE PTR [ebp-0x6b082a2b],cl
  40d018:	push   ds
  40d019:	dec    edx
  40d01a:	ret    
  40d01b:	xchg   ebp,eax
  40d01c:	jo     0x40cfde
  40d01e:	enter  0xc437,0xae
  40d022:	cld    
  40d023:	fs jl  0x40d099
  40d026:	mov    ah,0x3
  40d028:	push   es
  40d029:	xor    eax,0x275e7eed
  40d02e:	pop    ecx
  40d02f:	(bad)
  40d032:	icebp  
  40d033:	jecxz  0x40d079
  40d035:	cmp    eax,0x21d08a69
  40d03a:	push   es
  40d03b:	dec    ebx
  40d03c:	jmp    0xeb9:0xdb16d253
  40d043:	out    dx,al
  40d044:	sub    ecx,ebx
  40d046:	fs inc ebp
  40d048:	les    ecx,FWORD PTR [ebx]
  40d04a:	lock or BYTE PTR [ecx],bh
  40d04d:	popw   es
  40d04f:	outs   dx,BYTE PTR ds:[esi]
  40d050:	mov    ds:0xa02afb2e,eax
  40d055:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d056:	(bad)  
  40d057:	loope  0x40d0d6
  40d059:	push   ds
  40d05a:	test   eax,0x39a738f
  40d05f:	mov    al,ds:0xae76270e
  40d064:	sbb    al,0x8
  40d066:	inc    ecx
  40d067:	adc    al,0x6d
  40d069:	push   0x19
  40d06b:	mov    esp,0x81ac628a
  40d070:	dec    edi
  40d071:	and    ch,BYTE PTR [edi-0x15f64c46]
  40d077:	jl     0x40d082
  40d079:	repz enter 0xff62,0xe9
  40d07e:	adc    eax,DWORD PTR [edx-0x3312af92]
  40d084:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d085:	or     DWORD PTR [ecx-0x6],0x0
  40d089:	popa   
  40d08a:	sti    
  40d08b:	adc    bh,dl
  40d08d:	mov    esp,0x161e5d52
  40d092:	cld    
  40d093:	mov    WORD PTR [ebx+0x2],fs
  40d096:	xchg   ebx,eax
  40d097:	jmp    0x9d1f:0x573d7e4c
  40d09e:	dec    eax
  40d09f:	out    dx,al
  40d0a0:	loopne 0x40d060
  40d0a2:	pop    ebp
  40d0a3:	cdq    
  40d0a4:	ror    DWORD PTR [eax+0x79fa0e95],1
  40d0aa:	jbe    0x40d051
  40d0ac:	fidiv  DWORD PTR [eax]
  40d0ae:	ret    0x4b4c
  40d0b1:	push   ds
  40d0b2:	mov    al,0x2
  40d0b4:	pop    ds
  40d0b5:	lahf   
  40d0b6:	mov    dl,0x64
  40d0b8:	scas   al,BYTE PTR es:[edi]
  40d0b9:	idiv   ebx
  40d0bb:	mov    dl,BYTE PTR [esi+0x5af6e088]
  40d0c1:	pop    ss
  40d0c2:	test   edx,esp
  40d0c4:	call   edx
  40d0c6:	cmp    edx,edi
  40d0c8:	sbb    BYTE PTR es:[eax+0x7c],dh
  40d0cc:	pop    ss
  40d0cd:	mov    dh,0x30
  40d0cf:	mov    bl,BYTE PTR [edi+esi*1-0x2]
  40d0d3:	loop   0x40d08d
  40d0d5:	adc    DWORD PTR [ecx],0x5d8fa2c6
  40d0db:	inc    esp
  40d0dc:	ds mov ecx,edi
  40d0df:	mov    cl,0x18
  40d0e1:	mov    edx,0x7e4a7f53
  40d0e6:	sbb    BYTE PTR [eax],ch
  40d0e8:	lock jle 0x40d0f1
  40d0eb:	and    al,0x6d
  40d0ed:	in     al,0xa
  40d0ef:	and    BYTE PTR [ebx+0x11177e4a],ch
  40d0f5:	pusha  
  40d0f6:	push   cs
  40d0f7:	mov    ds:0xc7f174f9,al
  40d0fc:	cmp    eax,0x3ed1244e
  40d101:	sub    DWORD PTR [edi+eiz*8],0xffffff87
  40d105:	sbb    esp,edx
  40d107:	cld    
  40d108:	pop    es
  40d109:	sub    ebx,DWORD PTR [edx]
  40d10b:	movsx  esi,BYTE PTR [edi]
  40d10e:	sub    DWORD PTR [edx-0x28],ebp
  40d111:	in     eax,dx
  40d112:	and    esi,edi
  40d114:	leave  
  40d115:	aad    0xe1
  40d117:	lds    esp,FWORD PTR [eax]
  40d119:	lahf   
  40d11a:	xor    ebp,DWORD PTR [ebx]
  40d11c:	clc    
  40d11d:	popa   
  40d11e:	push   ebp
  40d11f:	fwait
  40d120:	std    
  40d121:	(bad)  
  40d122:	out    dx,al
  40d123:	test   al,0x57
  40d125:	adc    BYTE PTR [ecx],dl
  40d127:	stos   BYTE PTR es:[edi],al
  40d128:	mov    esi,0x5c741acd
  40d12d:	not    DWORD PTR [ecx+0x1e]
  40d130:	es inc ebx
  40d132:	sbb    BYTE PTR [ecx-0x5dd4fe8a],dl
  40d138:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d139:	mov    gs,WORD PTR [edi+0x36]
  40d13c:	push   es
  40d13d:	outs   dx,DWORD PTR ds:[esi]
  40d13e:	pop    edx
  40d13f:	cld    
  40d140:	outs   dx,BYTE PTR es:[esi]
  40d142:	fistp  DWORD PTR [ecx-0x7b1ee58c]
  40d148:	mov    bl,0x96
  40d14a:	push   edi
  40d14b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d14c:	fdiv   st(5),st
  40d14e:	fwait
  40d14f:	(bad)  
  40d150:	fmul   DWORD PTR [edx+0x7a759ce5]
  40d156:	inc    ecx
  40d157:	and    ebx,ebx
  40d159:	in     eax,0x96
  40d15b:	push   cs
  40d15c:	jnp    0x40d124
  40d15e:	pop    esp
  40d15f:	pop    esp
  40d160:	add    BYTE PTR [ebp+0x30],al
  40d163:	xchg   ebp,eax
  40d164:	and    esi,0x41
  40d167:	repnz inc esi
  40d169:	inc    esp
  40d16a:	repnz fldenv [ecx+0x5f694bcf]
  40d171:	cmp    DWORD PTR ds:0x2d43697c,edi
  40d177:	dec    edx
  40d178:	pop    esi
  40d179:	push   ebp
  40d17a:	xor    al,0x83
  40d17c:	pop    ds
  40d17d:	xchg   edx,eax
  40d17e:	cmp    al,0x5d
  40d180:	mov    al,0x26
  40d182:	retf   0xe578
  40d185:	xor    eax,0xc47672aa
  40d18a:	aad    0xf8
  40d18c:	test   BYTE PTR [ecx],dl
  40d18e:	mov    ds:0xc33fd9cd,eax
  40d193:	dec    edi
  40d194:	int3   
  40d195:	fcmovu st,st(7)
  40d197:	je     0x40d218
  40d199:	push   cs
  40d19a:	adc    bl,BYTE PTR [esp+edi*8]
  40d19d:	push   ds
  40d19e:	shl    BYTE PTR [ebx+0x3e],cl
  40d1a1:	jnp    0x40d1ba
  40d1a3:	cdq    
  40d1a4:	les    esi,FWORD PTR ds:0xb15751e1
  40d1aa:	sub    BYTE PTR [edi-0x7d],bl
  40d1ad:	arpl   di,di
  40d1af:	out    0xa7,al
  40d1b1:	cmp    dh,BYTE PTR [edx]
  40d1b3:	mov    ecx,0xb93f4844
  40d1b8:	mov    bh,0x25
  40d1ba:	mov    bl,0x60
  40d1bc:	into   
  40d1bd:	dec    edx
  40d1be:	and    DWORD PTR [edx+0x7b],0x6fba775c
  40d1c5:	jge    0x40d14b
  40d1c7:	and    DWORD PTR [ecx+0x7a],0xffffffe2
  40d1cb:	mov    cl,0x64
  40d1cd:	rol    BYTE PTR [edx-0x2c],cl
  40d1d0:	test   DWORD PTR [ebp+0x8],ecx
  40d1d3:	jns    0x40d1bd
  40d1d5:	in     eax,dx
  40d1d6:	addr16 jbe 0x40d190
  40d1d9:	call   0x29a80687
  40d1de:	xor    BYTE PTR [ecx-0xea2377c],0xba
  40d1e5:	int3   
  40d1e6:	jmp    0x40d1c9
  40d1e8:	hlt    
  40d1e9:	cmp    eax,0x2be5f05b
  40d1ee:	in     eax,0xcf
  40d1f0:	and    ch,al
  40d1f2:	inc    BYTE PTR ds:0x26b5d1f
  40d1f8:	das    
  40d1f9:	pop    esi
  40d1fa:	in     al,0xb7
  40d1fc:	retf   0x9fa8
  40d1ff:	push   ss
  40d200:	or     esi,DWORD PTR [ecx+0x5bb0ecba]
  40d206:	mov    cl,BYTE PTR [ecx+0x226067df]
  40d20c:	push   ebx
  40d20d:	push   es
  40d20e:	jle    0x40d245
  40d210:	jae    0x40d1d0
  40d212:	pusha  
  40d213:	cwde   
  40d214:	jge    0x40d244
  40d216:	dec    eax
  40d217:	xchg   edi,eax
  40d218:	leave  
  40d219:	xchg   ebp,eax
  40d21a:	xor    BYTE PTR [esi],0x40
  40d21d:	pop    ds
  40d21e:	add    al,0x16
  40d220:	(bad)  
  40d221:	push   edi
  40d222:	inc    esi
  40d223:	mov    edi,esi
  40d225:	stos   BYTE PTR es:[edi],al
  40d226:	stc    
  40d227:	mov    bh,0x9c
  40d229:	xor    ecx,DWORD PTR [edi-0x7ca3f125]
  40d22f:	or     BYTE PTR [edi-0x7c],dl
  40d232:	fdivr  DWORD PTR ds:0x64ee37b
  40d238:	ins    BYTE PTR es:[edi],dx
  40d239:	xchg   ebx,eax
  40d23a:	xchg   BYTE PTR [ebx+eax*1],ch
  40d23d:	shr    BYTE PTR [ebp+0x6e1f943d],cl
  40d243:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d244:	loop   0x40d236
  40d246:	lods   eax,DWORD PTR ds:[esi]
  40d247:	retf   
  40d248:	dec    eax
  40d249:	adc    ah,0x54
  40d24c:	mov    esp,0x870cb51e
  40d251:	xchg   edi,eax
  40d252:	adc    edx,eax
  40d254:	add    BYTE PTR [esi-0x2e],ch
  40d257:	nop
  40d258:	dec    eax
  40d259:	sub    eax,0xb56642a9
  40d25e:	sar    ah,1
  40d260:	int    0x71
  40d262:	push   0xffffffed
  40d264:	or     ecx,eax
  40d266:	jns    0x40d2e4
  40d268:	mov    ah,0xdf
  40d26a:	xor    al,BYTE PTR [eax-0x95efcb0]
  40d270:	mov    WORD PTR [esp+ebx*1-0x7ee7373],fs
  40d277:	jb     0x40d2ab
  40d279:	add    BYTE PTR [ebx],bh
  40d27b:	enter  0x850f,0x60
  40d27f:	mov    eax,0x458bffff
  40d284:	cld    
  40d285:	xor    eax,esi
  40d287:	add    eax,edi
  40d289:	mov    DWORD PTR [ebp-0x10],eax
  40d28c:	mov    ebx,0x756654
  40d291:	add    ebx,0x567645
  40d297:	jmp    0x40f637
  40d29c:	iret   
  40d29d:	jmp    0x40d284
  40d29f:	sub    cl,0x9a
  40d2a2:	cli    
  40d2a3:	in     al,dx
  40d2a4:	xchg   ebx,eax
  40d2a5:	sbb    al,0x4b
  40d2a7:	or     dl,BYTE PTR [eax+0x2f69e8ee]
  40d2ad:	sub    edi,DWORD PTR [ebx+0x7b]
  40d2b0:	(bad)  
  40d2b1:	sahf   
  40d2b2:	jnp    0x40d32f
  40d2b4:	dec    eax
  40d2b5:	daa    
  40d2b6:	repnz lock (bad) 
  40d2ba:	sti    
  40d2bb:	fxam   
  40d2bd:	sbb    dl,BYTE PTR [edi-0x54a0c0fd]
  40d2c3:	ret    0xe49c
  40d2c6:	rcr    DWORD PTR [esi-0x2785cd03],cl
  40d2cc:	ss cwde 
  40d2ce:	aam    0xb1
  40d2d0:	pusha  
  40d2d1:	repz ja 0x40d28a
  40d2d4:	stc    
  40d2d5:	pop    esp
  40d2d6:	retf   0x20ec
  40d2d9:	pushf  
  40d2da:	pop    esp
  40d2db:	xchg   edx,eax
  40d2dc:	push   ds
  40d2dd:	mov    ah,0xf5
  40d2df:	jp     0x40d325
  40d2e1:	fwait
  40d2e2:	push   cs
  40d2e3:	ret    
  40d2e4:	retf   
  40d2e5:	mov    ds,WORD PTR [eax+ecx*2]
  40d2e8:	add    dh,ch
  40d2ea:	call   0x63de:0x2f89c237
  40d2f1:	das    
  40d2f2:	fidivr WORD PTR [eax]
  40d2f4:	add    esp,DWORD PTR [ebx]
  40d2f6:	push   0xffffffff
  40d2f8:	out    0xd,eax
  40d2fa:	jecxz  0x40d336
  40d2fc:	push   esi
  40d2fd:	mov    ch,0xb4
  40d2ff:	push   esi
  40d300:	out    0x43,eax
  40d302:	mov    ah,0xa9
  40d304:	call   0x26f55dfd
  40d309:	rol    DWORD PTR [edi+0x17e488a1],0x70
  40d310:	(bad)  
  40d312:	and    al,0x34
  40d314:	add    BYTE PTR es:[ebp-0x1a],bh
  40d318:	retf   0x6e4d
  40d31b:	jp     0x40d353
  40d31d:	out    0x4a,eax
  40d31f:	mov    eax,0x5c22e333
  40d324:	adc    edi,DWORD PTR [ecx+0x13a013c]
  40d32a:	loope  0x40d2ec
  40d32c:	push   ebp
  40d32d:	lahf   
  40d32e:	and    al,0x24
  40d330:	aas    
  40d331:	out    dx,al
  40d332:	ror    ch,cl
  40d334:	cld    
  40d335:	loop   0x40d30e
  40d337:	in     al,dx
  40d338:	imul   edx,esi,0x77348465
  40d33e:	push   ecx
  40d33f:	inc    ebx
  40d340:	jns    0x40d35b
  40d342:	dec    ebx
  40d343:	dec    ecx
  40d344:	(bad)  
  40d345:	jmp    0x1dbfef5e
  40d34a:	mov    edx,0xe548ae62
  40d34f:	mov    dh,0xf7
  40d351:	mov    DWORD PTR [ecx+edi*1-0xa0e92ef],edx
  40d358:	popf   
  40d359:	inc    edx
  40d35a:	pop    esi
  40d35b:	leave  
  40d35c:	inc    ecx
  40d35d:	sbb    dh,dl
  40d35f:	sub    DWORD PTR [ebx+ecx*1-0x73c5e311],edx
  40d366:	or     eax,0x58679233
  40d36b:	and    eax,0xcafe1d1
  40d370:	idiv   ecx
  40d372:	je     0x40d398
  40d374:	mov    ebp,0xdadc0105
  40d379:	aad    0xf7
  40d37b:	outs   dx,DWORD PTR ds:[esi]
  40d37c:	sar    BYTE PTR [edx+0x76eb4733],0x94
  40d383:	jecxz  0x40d3b0
  40d385:	jge    0x40d3f9
  40d387:	idiv   DWORD PTR [eax-0x3dab91fd]
  40d38d:	dec    BYTE PTR ds:0x785e6565
  40d393:	in     eax,0xe7
  40d395:	push   eax
  40d396:	out    dx,eax
  40d397:	pushf  
  40d398:	and    eax,0x4c246f83
  40d39d:	xor    BYTE PTR [eax+0x55],bh
  40d3a0:	ret    
  40d3a1:	push   0x7a659275
  40d3a6:	cmp    cl,BYTE PTR [esi]
  40d3a8:	cmp    bl,BYTE PTR [eax-0x57]
  40d3ab:	xor    DWORD PTR [esi-0x7c45ef68],edi
  40d3b1:	or     BYTE PTR [edi],dh
  40d3b3:	fs add DWORD PTR ss:[edx+0x6a],esp
  40d3b8:	data16 xor ah,BYTE PTR [esi+edx*1-0x80]
  40d3bd:	aaa    
  40d3be:	xchg   esp,eax
  40d3bf:	jnp    0x40d401
  40d3c1:	cmp    DWORD PTR ds:0x7ed5cdd5,edi
  40d3c7:	stc    
  40d3c8:	cs xchg esp,eax
  40d3ca:	pop    edx
  40d3cb:	jmp    0xa922562
  40d3d0:	and    eax,0x5b4e0848
  40d3d5:	mov    ch,BYTE PTR [edi+0x1c6a5426]
  40d3db:	ret    
  40d3dc:	xor    ebp,DWORD PTR [eax+0x7]
  40d3df:	test   DWORD PTR ds:[edx+0x281b4d99],0x6b0f096e
  40d3ea:	mov    ds:0x95295132,eax
  40d3ef:	rol    DWORD PTR [edi*8-0x42566c8b],cl
  40d3f6:	jecxz  0x40d43e
  40d3f8:	cmp    eax,0x48dca7ca
  40d3fd:	xchg   ecx,eax
  40d3fe:	gs mov esi,0x3df77b86
  40d404:	leave  
  40d405:	aam    0xfd
  40d407:	ins    BYTE PTR es:[edi],dx
  40d408:	xchg   edx,eax
  40d409:	sub    eax,0x6cb1ccfa
  40d40e:	jg     0x40d3e2
  40d410:	pop    ebx
  40d411:	xchg   edx,eax
  40d412:	test   BYTE PTR [eax-0xf],bl
  40d415:	jbe    0x40d435
  40d417:	icebp  
  40d418:	mov    eax,0x39ca46b5
  40d41d:	pop    es
  40d41e:	pop    esi
  40d41f:	push   ebp
  40d420:	jae    0x40d3d0
  40d422:	jge    0x40d3b6
  40d424:	inc    ecx
  40d425:	mov    cl,0x30
  40d427:	(bad)  
  40d428:	aaa    
  40d429:	xlat   BYTE PTR ds:[ebx]
  40d42a:	bound  edx,QWORD PTR [edi-0x405c182a]
  40d430:	cli    
  40d431:	jo     0x40d404
  40d433:	test   BYTE PTR [esi],cl
  40d435:	push   cs
  40d436:	add    DWORD PTR [edx-0x2f],esp
  40d439:	bound  ebx,QWORD PTR [edi+0x61]
  40d43c:	(bad)  
  40d43d:	jno    0x40d43f
  40d43f:	xchg   esp,eax
  40d440:	aad    0x3a
  40d442:	in     al,dx
  40d443:	jmp    0x4c43:0xb531
  40d449:	cmp    DWORD PTR fs:[edi+edi*1],edi
  40d44d:	out    dx,eax
  40d44e:	stos   DWORD PTR es:[edi],eax
  40d44f:	mov    dh,0x58
  40d451:	push   edx
  40d452:	lods   al,BYTE PTR ds:[esi]
  40d453:	in     eax,0x96
  40d455:	nop
  40d456:	mov    bl,0xf0
  40d458:	xlat   BYTE PTR ds:[ebx]
  40d459:	enter  0x2008,0xdc
  40d45d:	sar    bh,0xb3
  40d460:	xchg   esi,eax
  40d461:	adc    esp,DWORD PTR [ebp+0x15]
  40d464:	push   ds
  40d465:	(bad)  
  40d466:	lock out dx,eax
  40d468:	sar    DWORD PTR [ebx+0x10],0xfe
  40d46c:	push   edi
  40d46d:	(bad)  
  40d46f:	dec    ebp
  40d470:	inc    edx
  40d471:	ins    BYTE PTR es:[edi],dx
  40d472:	mov    BYTE PTR [edx+0x26c16f92],dl
  40d478:	mov    dh,BYTE PTR [ebx]
  40d47a:	xor    BYTE PTR [edi-0x31],al
  40d47d:	call   0xe278:0xfa1bbc94
  40d484:	ins    DWORD PTR es:[edi],dx
  40d485:	or     esi,eax
  40d487:	inc    ebx
  40d488:	pop    esi
  40d489:	mov    esi,fs
  40d48b:	out    dx,eax
  40d48c:	loope  0x40d49d
  40d48e:	adc    ebp,ecx
  40d490:	xchg   esi,eax
  40d491:	adc    al,0x2e
  40d493:	sbb    ebp,edi
  40d495:	or     DWORD PTR [eax+0x47],ecx
  40d498:	mul    al
  40d49a:	aad    0x5f
  40d49c:	fild   DWORD PTR ds:0x4e4da97d
  40d4a2:	outs   dx,BYTE PTR ds:[esi]
  40d4a3:	mov    dh,0x86
  40d4a5:	adc    DWORD PTR [ecx+esi*1+0x61],ebp
  40d4a9:	jb     0x40d4c8
  40d4ab:	push   cs
  40d4ac:	cld    
  40d4ad:	cmp    BYTE PTR [ecx],dh
  40d4af:	sti    
  40d4b0:	jno    0x40d47e
  40d4b2:	add    bh,ah
  40d4b4:	jmp    0x40d512
  40d4b6:	push   ss
  40d4b7:	lods   al,BYTE PTR ds:[esi]
  40d4b8:	out    dx,al
  40d4b9:	(bad)  
  40d4ba:	pop    ebx
  40d4bb:	add    eax,0x4d38461c
  40d4c0:	or     eax,0xe543ac4e
  40d4c5:	(bad)  
  40d4c6:	in     al,dx
  40d4c7:	rol    BYTE PTR [eax+0x41],1
  40d4ca:	inc    esi
  40d4cb:	rcr    edx,1
  40d4cd:	inc    ecx
  40d4ce:	inc    esi
  40d4cf:	sub    esi,DWORD PTR [eax-0x421c366b]
  40d4d5:	and    al,0x9b
  40d4d7:	mov    DWORD PTR [edi-0xa],ebx
  40d4da:	mov    esi,0x8fd43178
  40d4df:	test   BYTE PTR [edi+0x68],dh
  40d4e2:	dec    ebp
  40d4e3:	adc    eax,0xc6598926
  40d4e8:	sub    edi,ebp
  40d4ea:	mov    dh,0xbc
  40d4ec:	mov    ah,ch
  40d4ee:	call   0xb20dc567
  40d4f3:	retf   0xdfe
  40d4f6:	pushf  
  40d4f7:	push   ds
  40d4f8:	or     eax,DWORD PTR [esi]
  40d4fa:	mov    dl,0xab
  40d4fc:	loop   0x40d4f7
  40d4fe:	(bad)  
  40d4ff:	fstp   DWORD PTR ds:0x6c401948
  40d505:	call   0xbfca4889
  40d50a:	jp     0x40d4f4
  40d50c:	mov    eax,ds:0x5e606983
  40d511:	push   cs
  40d512:	stos   DWORD PTR es:[edi],eax
  40d513:	cwde   
  40d514:	dec    esi
  40d515:	stc    
  40d516:	sub    DWORD PTR fs:0x99d42694,esp
  40d51d:	scas   al,BYTE PTR es:[edi]
  40d51e:	add    DWORD PTR [ecx-0x1f],0x42
  40d522:	pop    esp
  40d523:	sbb    BYTE PTR [edi],dl
  40d525:	push   ecx
  40d526:	in     al,0xd0
  40d528:	dec    esp
  40d529:	jmp    0xc66:0x15069149
  40d530:	push   es
  40d531:	hlt    
  40d532:	mov    bl,0x39
  40d534:	mov    al,ds:0x91c43749
  40d539:	add    BYTE PTR [edi],bl
  40d53b:	xor    ebp,esi
  40d53d:	xlat   BYTE PTR ds:[ebx]
  40d53e:	sub    DWORD PTR [esi-0x75],esp
  40d541:	mov    ecx,0xc460e544
  40d546:	pop    ss
  40d547:	imul   ecx,DWORD PTR [edi],0x5d6fb3b8
  40d54d:	adc    eax,0xb3c26354
  40d552:	adc    ch,ah
  40d554:	mov    ebx,0xaf439a04
  40d559:	cmp    edi,esi
  40d55b:	out    0xe0,al
  40d55d:	daa    
  40d55e:	and    DWORD PTR [esi],0x43379784
  40d564:	cs inc esp
  40d566:	and    al,0x34
  40d568:	mov    bl,0x2f
  40d56a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d56b:	xchg   edi,eax
  40d56c:	jle    0x40d57a
  40d56e:	es mov ebp,0x4e7999a6
  40d574:	mov    esi,0x5a038be
  40d579:	stos   DWORD PTR es:[edi],eax
  40d57a:	mov    ah,0x9a
  40d57c:	sub    ch,bh
  40d57e:	scas   eax,DWORD PTR es:[edi]
  40d57f:	sbb    al,0x4c
  40d581:	sbb    bh,dh
  40d583:	sbb    al,BYTE PTR [ebp+0x79]
  40d586:	push   ds
  40d587:	enter  0x2c20,0x2a
  40d58b:	mov    ebp,0xa951121e
  40d590:	inc    esi
  40d591:	retfw  0x15a0
  40d595:	adc    eax,ebx
  40d597:	dec    ebx
  40d598:	sbb    al,0x2b
  40d59a:	ds leave 
  40d59c:	popa   
  40d59d:	scas   al,BYTE PTR es:[edi]
  40d59e:	(bad)  
  40d59f:	xchg   edi,eax
  40d5a0:	loopne 0x40d5ba
  40d5a2:	adc    DWORD PTR [esi+0x38],edx
  40d5a5:	mov    ch,0xe8
  40d5a7:	loope  0x40d613
  40d5a9:	jle    0x40d53e
  40d5ab:	add    al,0x5
  40d5ad:	mov    esp,0x1a21892
  40d5b2:	mov    WORD PTR [ecx],?
  40d5b4:	xor    al,0x7
  40d5b6:	add    al,0xe0
  40d5b8:	les    edi,FWORD PTR [edi+0x34213e35]
  40d5be:	fisttp WORD PTR [edi]
  40d5c0:	mov    ds:0x950ba94b,al
  40d5c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5c6:	mov    eax,ds:0xf9e367a5
  40d5cb:	cmp    DWORD PTR [edi+0x36ae7ff0],esp
  40d5d1:	cdq    
  40d5d2:	retf   0x51eb
  40d5d5:	pop    ss
  40d5d6:	push   ds
  40d5d7:	sub    al,0x81
  40d5d9:	and    al,0x9a
  40d5db:	mov    ds:0xae8c729e,eax
  40d5e0:	rol    DWORD PTR [esi],1
  40d5e2:	adc    dh,dl
  40d5e4:	push   0xffffff98
  40d5e6:	dec    ecx
  40d5e7:	xchg   ebx,eax
  40d5e8:	mov    al,0x49
  40d5ea:	inc    ebp
  40d5eb:	mov    cl,0x6a
  40d5ed:	arpl   WORD PTR [esi],cx
  40d5ef:	loopne 0x40d63d
  40d5f1:	jg     0x40d5c5
  40d5f3:	test   al,0xbb
  40d5f5:	cmp    DWORD PTR [eax],0xc5180da3
  40d5fb:	jo     0x40d5c3
  40d5fd:	popa   
  40d5fe:	push   0xaa0f50e7
  40d603:	cmp    dh,BYTE PTR [edx]
  40d605:	pop    es
  40d606:	push   eax
  40d607:	ins    DWORD PTR es:[edi],dx
  40d608:	push   eax
  40d609:	pop    eax
  40d60a:	popa   
  40d60b:	jae    0x40d5b2
  40d60d:	cdq    
  40d60e:	sbb    DWORD PTR [edx-0x61],edi
  40d611:	mov    edi,0xbe825e4a
  40d616:	ins    DWORD PTR es:[edi],dx
  40d617:	fs cli 
  40d619:	dec    BYTE PTR [ecx-0x73bcbd27]
  40d61f:	xor    esi,DWORD PTR [ebx]
  40d621:	gs inc esi
  40d623:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d624:	into   
  40d625:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d626:	jge    0x40d631
  40d628:	jg     0x40d5b1
  40d62a:	xchg   edx,eax
  40d62b:	shl    BYTE PTR [esi-0x4e640c7],0x46
  40d632:	and    edi,DWORD PTR [edi+ebp*2]
  40d635:	loopne 0x40d60e
  40d637:	lods   eax,DWORD PTR ds:[esi]
  40d638:	and    DWORD PTR [esi],ebx
  40d63a:	ja     0x40d5d0
  40d63c:	fisub  DWORD PTR [ebp-0x2f061cbf]
  40d642:	cmp    ah,BYTE PTR [ebx]
  40d644:	fwait
  40d645:	or     al,cl
  40d647:	dec    esp
  40d648:	retf   0xd72a
  40d64b:	mov    eax,ds:0x5a9c5cc0
  40d650:	push   eax
  40d651:	sti    
  40d652:	sbb    DWORD PTR [edx+edx*4+0x77bb777],eax
  40d659:	jecxz  0x40d667
  40d65b:	push   esp
  40d65c:	pop    edx
  40d65d:	or     dh,BYTE PTR [edx+0x38]
  40d660:	retf   
  40d661:	adc    al,0xd5
  40d663:	sub    DWORD PTR [eax],esi
  40d665:	or     BYTE PTR ds:0x6900f4f1,cl
  40d66b:	lods   al,BYTE PTR ds:[esi]
  40d66c:	clc    
  40d66d:	inc    ecx
  40d66e:	test   al,0x10
  40d670:	mov    WORD PTR [edx+0x467f4530],gs
  40d676:	and    eax,0x32561821
  40d67b:	imul   esp,DWORD PTR [ecx+0x56552b94],0x535f6551
  40d685:	int    0x31
  40d687:	sub    esi,eax
  40d689:	sbb    al,0x99
  40d68b:	scas   eax,DWORD PTR es:[edi]
  40d68c:	ret    
  40d68d:	push   es
  40d68e:	stc    
  40d68f:	xor    bh,BYTE PTR [edx]
  40d691:	mov    edi,DWORD PTR [edi]
  40d693:	fadd   st,st(2)
  40d695:	sub    esp,eax
  40d697:	repnz mov esi,0x897d8bc8
  40d69d:	dec    eax
  40d69e:	mov    ss,WORD PTR [edx+0x5fc1ce78]
  40d6a4:	cs inc edx
  40d6a6:	jae    0x40d65c
  40d6a8:	adc    DWORD PTR [ecx],eax
  40d6aa:	sub    BYTE PTR [edi],dl
  40d6ac:	push   es
  40d6ad:	or     eax,0x6df34dbd
  40d6b2:	sbb    dl,dl
  40d6b4:	xor    eax,DWORD PTR [edx-0x54]
  40d6b7:	mov    esp,DWORD PTR [ecx-0x64]
  40d6ba:	sar    cl,1
  40d6bc:	and    al,0xc5
  40d6be:	sahf   
  40d6bf:	lods   al,BYTE PTR ds:[esi]
  40d6c0:	aad    0x6b
  40d6c2:	mov    esi,0xca4f7eea
  40d6c7:	mov    dh,0x8f
  40d6c9:	xchg   ecx,eax
  40d6ca:	int3   
  40d6cb:	jae    0x40d74a
  40d6cd:	and    cl,ch
  40d6cf:	adc    BYTE PTR [edx-0x62],ah
  40d6d2:	mov    WORD PTR [edx-0x6f66c429],cs
  40d6d8:	andps  xmm1,XMMWORD PTR [edi]
  40d6db:	adc    BYTE PTR [ebx-0x37f220b4],bl
  40d6e1:	sti    
  40d6e2:	ss jmp 0xf752e0d8
  40d6e8:	pop    eax
  40d6e9:	xchg   ebx,eax
  40d6ea:	clc    
  40d6eb:	das    
  40d6ec:	(bad)  
  40d6ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6ef:	jbe    0x40d75d
  40d6f1:	adc    BYTE PTR [ecx-0x752e5bc8],ah
  40d6f7:	push   ebp
  40d6f8:	sbb    al,0xff
  40d6fa:	or     cl,BYTE PTR [ebp+esi*8+0x76]
  40d6fe:	shr    DWORD PTR [ecx],1
  40d700:	jbe    0x40d701
  40d702:	sub    ebx,edx
  40d704:	fwait
  40d705:	and    eax,0x10dba966
  40d70a:	cmp    dl,BYTE PTR [edx-0x32910b65]
  40d710:	add    al,0x8c
  40d712:	cmp    bl,ch
  40d714:	imul   edx,DWORD PTR [ebx+0x64],0xffffff80
  40d718:	cli    
  40d719:	sar    ch,1
  40d71b:	sbb    ah,BYTE PTR [edi+0x2e66ce2d]
  40d721:	cdq    
  40d722:	pop    ebx
  40d723:	ret    0x1529
  40d726:	and    eax,0x49eb3dcf
  40d72b:	call   0x19fe:0x417c1691
  40d732:	fsubr  st,st(3)
  40d734:	repnz pop es
  40d736:	mov    esp,0x4210fb55
  40d73b:	sub    BYTE PTR [ecx+0x47],dl
  40d73e:	xor    DWORD PTR [eax+0x62],ebx
  40d741:	call   0x4612:0x7a7ae9ff
  40d748:	xor    BYTE PTR [esi+0x8],dl
  40d74b:	inc    esi
  40d74c:	into   
  40d74d:	xor    ch,BYTE PTR [edi+0x4f]
  40d750:	xchg   edx,eax
  40d751:	adc    al,0xfe
  40d753:	ins    DWORD PTR es:[edi],dx
  40d754:	cmp    edi,DWORD PTR [eax]
  40d756:	or     eax,0xb291438f
  40d75b:	ins    BYTE PTR es:[edi],dx
  40d75c:	lods   eax,DWORD PTR ds:[esi]
  40d75d:	jnp    0x40d7c5
  40d75f:	(bad)  
  40d760:	pop    eax
  40d761:	and    al,0x78
  40d763:	(bad)  
  40d764:	adc    ebp,DWORD PTR [edx]
  40d766:	jbe    0x40d795
  40d768:	pop    ds
  40d769:	outs   dx,BYTE PTR ds:[esi]
  40d76a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d76b:	xor    BYTE PTR [ebp+0x22],0xf1
  40d76f:	push   ss
  40d770:	inc    ebp
  40d771:	dec    ecx
  40d772:	xlat   BYTE PTR ds:[ebx]
  40d773:	out    dx,al
  40d774:	or     al,0x63
  40d776:	xchg   esi,eax
  40d777:	in     eax,0xfa
  40d779:	or     DWORD PTR [edx],0x7c
  40d77c:	push   eax
  40d77d:	jno    0x40d797
  40d77f:	jo     0x40d7c8
  40d781:	in     al,0x64
  40d783:	push   ecx
  40d784:	pop    edx
  40d785:	pop    ebp
  40d786:	inc    esi
  40d787:	inc    edi
  40d788:	lock cmc 
  40d78a:	inc    ebp
  40d78b:	jnp    0x40d73a
  40d78d:	and    eax,0xe1127681
  40d792:	xor    eax,0xeacce489
  40d797:	rcr    al,cl
  40d799:	hlt    
  40d79a:	jo     0x40d7ad
  40d79c:	sbb    eax,0x573c7477
  40d7a1:	xchg   BYTE PTR [ecx-0x3e4a74e5],al
  40d7a7:	test   DWORD PTR [eax],ebp
  40d7a9:	inc    edi
  40d7aa:	push   esp
  40d7ab:	stos   DWORD PTR es:[edi],eax
  40d7ac:	adc    eax,0xb92a1b8f
  40d7b1:	jne    0x40d7f0
  40d7b3:	sahf   
  40d7b4:	sbb    eax,0xdd42f0c3
  40d7b9:	jle    0x40d789
  40d7bb:	dec    esp
  40d7bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7bd:	mov    al,0xb6
  40d7bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7c0:	dec    edi
  40d7c1:	xor    bl,BYTE PTR [ebx]
  40d7c3:	jp     0x40d776
  40d7c5:	pop    edx
  40d7c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d7c7:	cmp    ecx,ebp
  40d7c9:	out    0x56,al
  40d7cb:	add    al,0xfa
  40d7cd:	push   ss
  40d7ce:	sub    DWORD PTR [eax+0xc],edi
  40d7d1:	imul   edx,DWORD PTR [esi],0xfbeaf775
  40d7d7:	dec    ecx
  40d7d8:	shr    BYTE PTR [edx+eax*1-0x16],cl
  40d7dc:	dec    esp
  40d7dd:	sbb    edx,edi
  40d7df:	in     eax,0xd0
  40d7e1:	mov    dh,0xfc
  40d7e3:	out    0xca,eax
  40d7e5:	xchg   BYTE PTR [edx],dl
  40d7e7:	aas    
  40d7e8:	push   es
  40d7e9:	cdq    
  40d7ea:	mov    dl,0x5e
  40d7ec:	mov    cl,0x56
  40d7ee:	push   esi
  40d7ef:	xchg   ebp,eax
  40d7f0:	dec    esi
  40d7f1:	lods   al,BYTE PTR ds:[esi]
  40d7f2:	bound  ebx,QWORD PTR [ebp+0x70]
  40d7f5:	mov    al,0x7e
  40d7f7:	mov    esp,0xe30839bf
  40d7fc:	sub    DWORD PTR [ebp+0x62f6dd67],edi
  40d802:	sub    eax,0x5db3a761
  40d807:	sub    eax,0x9fb2ca31
  40d80c:	xchg   esp,eax
  40d80d:	(bad)  
  40d80e:	push   ecx
  40d80f:	xchg   edx,eax
  40d810:	mov    ah,0xfa
  40d812:	shl    DWORD PTR [ebp-0x586a0e88],1
  40d818:	and    eax,ebp
  40d81a:	push   ebp
  40d81b:	cmp    edx,0x8a5cb553
  40d821:	push   0x4f
  40d823:	arpl   WORD PTR es:[edi+0x13],bp
  40d827:	xchg   DWORD PTR [eax],esi
  40d829:	mov    dh,0xe2
  40d82b:	lds    edi,FWORD PTR [eax]
  40d82d:	pop    ecx
  40d82e:	sahf   
  40d82f:	push   esp
  40d830:	test   BYTE PTR [esi],0xc4
  40d833:	lea    edi,[ecx+0x7793ea71]
  40d839:	pop    edi
  40d83a:	push   0xffffffa0
  40d83c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d83d:	sbb    ecx,DWORD PTR [ecx+0x11]
  40d840:	fst    QWORD PTR [edx-0x1e646285]
  40d846:	mov    es,edx
  40d848:	add    al,0x24
  40d84a:	mov    cl,0xd7
  40d84c:	inc    esi
  40d84d:	sar    BYTE PTR [ebp-0x734e8315],0x4
  40d854:	mov    ds:0x72f67e01,al
  40d859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d85a:	add    eax,0x2dcd1f3c
  40d85f:	sbb    ecx,ebp
  40d861:	adc    al,dh
  40d863:	mov    DWORD PTR [edi-0x3d8e00b],edx
  40d869:	xor    al,0x1d
  40d86b:	dec    edi
  40d86c:	pop    esi
  40d86d:	jbe    0x40d8c3
  40d86f:	rcl    BYTE PTR [esi+0x1e5f5ced],0xf
  40d876:	mov    ecx,0x30bfb39e
  40d87b:	or     edx,ecx
  40d87d:	in     eax,dx
  40d87e:	sti    
  40d87f:	push   eax
  40d880:	and    BYTE PTR [esp+edi*4+0x32],ah
  40d884:	call   0xba12:0x8c3abfb7
  40d88b:	mov    edx,0xe22df438
  40d890:	aaa    
  40d891:	outs   dx,DWORD PTR ds:[esi]
  40d892:	adc    edi,DWORD PTR [edx]
  40d894:	imul   esp
  40d896:	pop    esp
  40d897:	loop   0x40d8ac
  40d899:	jns    0x40d8a3
  40d89b:	sbb    ecx,DWORD PTR [ebp+0x9]
  40d89e:	xchg   esp,eax
  40d89f:	outs   dx,DWORD PTR ds:[esi]
  40d8a0:	lea    edi,[esi-0xa]
  40d8a3:	xchg   ecx,eax
  40d8a4:	lock jnp 0x40d829
  40d8a7:	std    
  40d8a8:	and    dl,ah
  40d8aa:	fcomp  DWORD PTR [ebx]
  40d8ac:	jle    0x40d8e2
  40d8ae:	popa   
  40d8af:	pop    edi
  40d8b0:	dec    edx
  40d8b1:	les    eax,FWORD PTR [edx+ecx*2+0x57]
  40d8b5:	cs aam 0x39
  40d8b8:	test   al,0xf
  40d8ba:	xor    BYTE PTR [edx+ebx*8],cl
  40d8bd:	les    edi,FWORD PTR gs:[ebx+eax*1+0x3dc7e205]
  40d8c5:	mov    ch,0x32
  40d8c7:	mov    BYTE PTR [ecx],al
  40d8c9:	adc    al,0xad
  40d8cb:	das    
  40d8cc:	adc    ah,BYTE PTR [ebp+0x53ebb9dd]
  40d8d2:	mov    eax,ds:0x6f85fab8
  40d8d7:	mov    al,0x30
  40d8d9:	jmp    0x2932a42b
  40d8de:	(bad)  
  40d8df:	(bad)  
  40d8e0:	mov    ds:0x11a7db50,eax
  40d8e5:	arpl   bx,di
  40d8e7:	inc    ebp
  40d8e8:	mov    ebp,0x3c264e10
  40d8ed:	repnz (bad) 
  40d8ef:	pop    ss
  40d8f0:	in     al,dx
  40d8f1:	add    al,0x3a
  40d8f3:	sub    al,0x43
  40d8f5:	xchg   ebp,eax
  40d8f6:	push   ecx
  40d8f7:	ins    DWORD PTR es:[edi],dx
  40d8f8:	sbb    BYTE PTR [ecx],bh
  40d8fa:	stc    
  40d8fb:	(bad)  
  40d8fc:	aas    
  40d8fd:	shr    DWORD PTR [ebp-0x77059817],1
  40d903:	in     al,0x3
  40d905:	sbb    eax,0x76831295
  40d90a:	scas   al,BYTE PTR es:[edi]
  40d90b:	mov    dl,0xb6
  40d90d:	add    DWORD PTR [eax],ecx
  40d90f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d910:	addr16 call 0xbfba:0xdf0ab152
  40d918:	cmp    DWORD PTR [ecx],ebx
  40d91a:	pushf  
  40d91b:	ds popa 
  40d91d:	sbb    DWORD PTR [eax-0x3cdad47b],eax
  40d923:	cmp    al,0xcc
  40d925:	mov    ebp,0xdd77df09
  40d92a:	sub    eax,0xcde9b8bd
  40d92f:	and    ecx,esi
  40d931:	mov    al,BYTE PTR [ecx]
  40d933:	retf   0x83a0
  40d936:	push   ecx
  40d937:	test   BYTE PTR [ebp-0x67e06dc0],0x8f
  40d93e:	or     BYTE PTR [edi-0x7b13267d],ah
  40d944:	mov    al,ds:0xee88e16e
  40d949:	push   edx
  40d94a:	fisttp DWORD PTR [edi-0x15f76519]
  40d950:	pop    ds
  40d951:	arpl   WORD PTR [esi-0x647a9214],bp
  40d957:	push   esp
  40d958:	jns    0x40d997
  40d95a:	or     cl,bl
  40d95c:	out    0x5a,al
  40d95e:	dec    ebx
  40d95f:	retf   
  40d960:	xlat   BYTE PTR ds:[ebx]
  40d961:	dec    DWORD PTR [edi]
  40d963:	cdq    
  40d964:	shr    al,1
  40d966:	sbb    ebx,DWORD PTR [edi]
  40d968:	sbb    eax,0x8d225f82
  40d96d:	js     0x40d8fc
  40d96f:	dec    edi
  40d971:	pusha  
  40d972:	test   al,0x7
  40d974:	pop    ecx
  40d975:	add    dh,0x0
  40d978:	in     al,0xd
  40d97a:	add    BYTE PTR [ebx+esi*4+0x65],dh
  40d97e:	mov    edx,0x5e2f4ef7
  40d983:	mov    dh,0xac
  40d985:	pop    ss
  40d986:	addr16 pop esi
  40d988:	sbb    DWORD PTR [ecx],esi
  40d98a:	xor    al,0x23
  40d98c:	fs ja  0x40d9e4
  40d98f:	mov    ds:0x8f84054f,al
  40d994:	scas   al,BYTE PTR es:[edi]
  40d995:	inc    esi
  40d996:	and    al,0xd3
  40d998:	lods   eax,DWORD PTR ds:[esi]
  40d999:	sub    eax,0x2aa93a7b
  40d99e:	mov    ebx,DWORD PTR [ebp-0x6c]
  40d9a1:	pop    edx
  40d9a2:	sahf   
  40d9a3:	test   eax,0xd931d00b
  40d9a8:	add    al,0x66
  40d9aa:	sub    ebp,DWORD PTR [edx+0x46]
  40d9ad:	cmc    
  40d9ae:	mov    bh,0xde
  40d9b0:	arpl   bp,di
  40d9b2:	sbb    edi,DWORD PTR [ebp-0x5a027f06]
  40d9b8:	out    dx,al
  40d9b9:	dec    esp
  40d9ba:	pop    eax
  40d9bb:	mul    BYTE PTR [ecx+0x75]
  40d9be:	rcl    DWORD PTR [edx+0x585bb2fe],cl
  40d9c4:	add    eax,0x1cfcbede
  40d9c9:	fs cdq 
  40d9cb:	stc    
  40d9cc:	add    edx,DWORD PTR [eax-0x4c668f0b]
  40d9d2:	out    dx,eax
  40d9d3:	xchg   esi,eax
  40d9d4:	imul   bl
  40d9d6:	xlat   BYTE PTR ds:[ebx]
  40d9d7:	pop    esp
  40d9d8:	push   0xfb103f1b
  40d9dd:	lock lock dec edx
  40d9e0:	cdq    
  40d9e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9e2:	mov    WORD PTR [ebx+0x5760f8b0],?
  40d9e8:	je     0x40d96f
  40d9ea:	retf   
  40d9eb:	pop    esp
  40d9ec:	dec    edx
  40d9ed:	jae    0x40d9b3
  40d9ef:	test   al,0x26
  40d9f1:	push   edx
  40d9f2:	jge    0x40d9de
  40d9f4:	(bad)  
  40d9f5:	adc    dl,BYTE PTR [edx-0x60]
  40d9f8:	leave  
  40d9f9:	mov    BYTE PTR ds:0x93ca5ed8,dh
  40d9ff:	inc    esi
  40da00:	xor    DWORD PTR [edx-0xe69c70b],edx
  40da06:	add    ebx,edx
  40da08:	jl     0x40da51
  40da0a:	cmp    dh,BYTE PTR [edx]
  40da0c:	xor    al,0x24
  40da0e:	ja     0x40da33
  40da10:	sbb    ebp,esp
  40da12:	punpckhbw mm7,QWORD PTR [edx-0xccc6b7b]
  40da19:	das    
  40da1a:	call   0xc9cd:0xfba5fca3
  40da21:	fcmovbe st,st(4)
  40da23:	scas   al,BYTE PTR es:[edi]
  40da24:	inc    edx
  40da25:	sbb    BYTE PTR [ecx+0x5ab52ed1],bh
  40da2b:	(bad)  
  40da2c:	fwait
  40da2d:	sub    al,0x41
  40da2f:	in     eax,dx
  40da30:	push   eax
  40da31:	jb     0x40d9d1
  40da33:	push   edx
  40da34:	or     BYTE PTR gs:[ebp-0x2b],0x68
  40da39:	xor    BYTE PTR [ebp-0x55],al
  40da3c:	(bad)  
  40da3d:	push   ss
  40da3e:	aas    
  40da3f:	sub    BYTE PTR ds:0xe5068466,ah
  40da45:	adc    dh,BYTE PTR [ecx+ebx*8-0x43a3b2db]
  40da4c:	(bad)  
  40da4d:	inc    ebp
  40da4e:	and    BYTE PTR [ecx-0x48218b70],0xcc
  40da55:	inc    eax
  40da56:	rcr    DWORD PTR [edi+0x4516aa2],1
  40da5c:	jnp    0x40da9b
  40da5e:	outs   dx,DWORD PTR ds:[esi]
  40da5f:	push   eax
  40da60:	jl     0x40dab7
  40da62:	pop    esi
  40da63:	jecxz  0x40dad3
  40da65:	mov    ah,0x50
  40da67:	int    0xd3
  40da69:	fld    QWORD PTR [ecx+edx*2-0x4581b29]
  40da70:	mov    ecx,DWORD PTR [ebx+0x67]
  40da73:	sahf   
  40da74:	in     al,dx
  40da75:	sbb    esi,edi
  40da77:	jo     0x40da04
  40da79:	lods   eax,DWORD PTR ds:[esi]
  40da7a:	sbb    eax,0x90ba947e
  40da7f:	or     DWORD PTR [ebp+0x3c3b7147],edi
  40da85:	xchg   DWORD PTR [edx-0x6d],ecx
  40da88:	mov    ecx,0xb573873f
  40da8d:	out    dx,al
  40da8e:	adc    esi,0x9d3d83d
  40da94:	mov    WORD PTR [esi-0x28],?
  40da97:	sbb    ah,BYTE PTR [eax+0x48]
  40da9a:	shr    DWORD PTR [edi-0xd],1
  40da9d:	cld    
  40da9e:	jns    0x40da6c
  40daa0:	mov    bh,0x63
  40daa2:	push   cs
  40daa3:	mov    bh,0x9c
  40daa5:	pop    eax
  40daa6:	cmp    al,0x4a
  40daa8:	scas   eax,DWORD PTR es:[edi]
  40daa9:	dec    ebx
  40daaa:	pushf  
  40daab:	mov    ds:0x909b93f1,al
  40dab0:	das    
  40dab1:	outs   dx,DWORD PTR ds:[esi]
  40dab2:	ins    DWORD PTR es:[edi],dx
  40dab3:	out    0xa6,al
  40dab5:	imul   ebp,ebx,0x2b9f5119
  40dabb:	push   ss
  40dabc:	push   edx
  40dabd:	jo     0x40da8e
  40dabf:	xchg   esp,eax
  40dac0:	push   es
  40dac1:	(bad)  
  40dac2:	pop    edx
  40dac3:	push   ebx
  40dac4:	iret   
  40dac5:	mov    al,ds:0x62dd625f
  40daca:	ins    BYTE PTR es:[edi],dx
  40dacb:	adc    BYTE PTR [eax+0x24],dh
  40dace:	xor    BYTE PTR [esp+eax*4-0x51a33a20],dh
  40dad5:	cwde   
  40dad6:	push   ecx
  40dad7:	mov    BYTE PTR [eax+0xae01cc7],0xa1
  40dade:	push   edx
  40dadf:	leave  
  40dae0:	mov    eax,ds:0xd52ff242
  40dae5:	fdiv   st(3),st
  40dae7:	xchg   esi,eax
  40dae8:	mov    ecx,0xa31fce5e
  40daed:	sub    ecx,ebx
  40daef:	cdq    
  40daf0:	add    ch,BYTE PTR [ebp-0x15d84887]
  40daf6:	sub    eax,0xe6eb4b89
  40dafb:	lock xchg bh,bl
  40dafe:	out    dx,al
  40daff:	cmp    ebx,DWORD PTR [eax-0x42]
  40db02:	jbe    0x40db6f
  40db04:	aam    0xc3
  40db06:	das    
  40db07:	push   eax
  40db08:	sbb    cl,BYTE PTR [ecx+0x32d85623]
  40db0e:	pop    es
  40db0f:	mov    DWORD PTR [eax+0x3d5f4a65],eax
  40db15:	add    dh,BYTE PTR [esi+0xf]
  40db18:	(bad)  
  40db19:	lock das 
  40db1b:	mov    ecx,edx
  40db1d:	and    dl,bh
  40db1f:	gs loope 0x40daa2
  40db22:	imul   esp,eax,0xaaa7fcae
  40db28:	jb     0x40db43
  40db2a:	cdq    
  40db2b:	push   ebx
  40db2c:	xchg   ebx,eax
  40db2d:	add    al,0xd8
  40db2f:	test   eax,0x48e0d0a0
  40db34:	sub    edx,DWORD PTR [eax]
  40db36:	adc    cl,BYTE PTR [edx+0x30]
  40db39:	imul   eax,DWORD PTR [edx],0xffffff8d
  40db3c:	and    al,BYTE PTR [ebp+ebx*4+0x59]
  40db40:	xchg   ecx,eax
  40db41:	or     al,0xaf
  40db43:	push   ss
  40db44:	xchg   esp,eax
  40db45:	das    
  40db46:	repnz in eax,dx
  40db48:	out    0x79,al
  40db4a:	and    BYTE PTR [eax-0x49fdcce8],dl
  40db50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db51:	iret   
  40db52:	fstp   TBYTE PTR [ebx]
  40db54:	(bad)  
  40db55:	xchg   esp,eax
  40db56:	mov    al,ds:0xf9f09f3e
  40db5b:	push   ebp
  40db5c:	jecxz  0x40daef
  40db5e:	add    al,0xd
  40db60:	daa    
  40db61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db62:	push   0xaf38fb01
  40db67:	loop   0x40dbcd
  40db69:	xor    eax,0x483fd0ce
  40db6e:	pop    esi
  40db6f:	ret    
  40db70:	cmp    al,0xfd
  40db72:	out    0x4f,al
  40db74:	ins    BYTE PTR es:[edi],dx
  40db75:	and    ecx,DWORD PTR [eax+0x2ab0f988]
  40db7b:	push   esi
  40db7c:	in     eax,dx
  40db7d:	shl    BYTE PTR [edx],1
  40db7f:	aam    0x48
  40db81:	jno    0x40db79
  40db83:	cwde   
  40db84:	mov    ch,0x16
  40db86:	ja     0x40dbf2
  40db88:	cmp    dl,BYTE PTR [esi]
  40db8a:	leave  
  40db8b:	pop    edx
  40db8c:	loope  0x40db39
  40db8e:	add    BYTE PTR [ecx-0x2],dh
  40db91:	cli    
  40db92:	(bad)  
  40db94:	mov    ebx,0x2f5cc901
  40db99:	sbb    al,0x30
  40db9b:	mov    esi,0xbc344c66
  40dba0:	inc    ebp
  40dba1:	and    ecx,ebp
  40dba3:	aaa    
  40dba4:	pop    edx
  40dba5:	inc    esp
  40dba6:	shl    BYTE PTR [ecx-0x580c2ff7],cl
  40dbac:	mov    WORD PTR [esi+ebx*2],?
  40dbaf:	inc    BYTE PTR ds:0x6e5259e1
  40dbb5:	pop    ecx
  40dbb6:	stc    
  40dbb7:	sbb    ecx,0x633eac63
  40dbbd:	shr    BYTE PTR [ebx],cl
  40dbbf:	imul   ecx,DWORD PTR [ecx+0x1ea5451d],0x150b6c1b
  40dbc9:	ins    BYTE PTR es:[edi],dx
  40dbca:	mov    ebp,0x9b779152
  40dbcf:	mov    ds:0xba0cb9e0,al
  40dbd4:	sbb    eax,0x3a5ded69
  40dbd9:	jg     0x40db71
  40dbdb:	dec    edi
  40dbdc:	xchg   BYTE PTR [ebx],dl
  40dbde:	dec    esi
  40dbdf:	fstp   st(7)
  40dbe1:	fwait
  40dbe2:	pop    ds
  40dbe3:	inc    eax
  40dbe4:	pop    eax
  40dbe5:	and    al,0x12
  40dbe7:	or     cl,cl
  40dbe9:	test   DWORD PTR [edi+0x184f616c],0x95597f8c
  40dbf3:	aad    0x70
  40dbf5:	sahf   
  40dbf6:	stc    
  40dbf7:	mov    ds,eax
  40dbf9:	pop    esp
  40dbfa:	dec    ebx
  40dbfb:	mov    eax,ds:0x1f6f77c7
  40dc00:	cmp    ebx,DWORD PTR [esi]
  40dc02:	push   edx
  40dc03:	aas    
  40dc04:	or     DWORD PTR ds:0x7917297c,ecx
  40dc0a:	sti    
  40dc0b:	repz es xor eax,0x36
  40dc10:	test   al,0x24
  40dc12:	mov    al,0x40
  40dc14:	fdivp  st(2),st
  40dc16:	je     0x40dbec
  40dc18:	in     eax,0x43
  40dc1a:	fldenv [edi+0x53]
  40dc1d:	mov    ds:0xf12b9cc5,eax
  40dc22:	sub    eax,0x1d4d61d8
  40dc27:	icebp  
  40dc28:	cmp    esp,DWORD PTR [eax-0x79]
  40dc2b:	dec    ecx
  40dc2c:	stc    
  40dc2d:	lds    esp,FWORD PTR [esi+0x336f485e]
  40dc33:	inc    ebx
  40dc34:	or     ah,dh
  40dc36:	leave  
  40dc37:	iret   
  40dc38:	push   es
  40dc39:	jo     0x40dc37
  40dc3b:	ss in  al,0xd2
  40dc3e:	xor    eax,0x4161bc0d
  40dc43:	xor    al,0x6e
  40dc45:	add    edi,DWORD PTR [eax]
  40dc47:	push   ss
  40dc48:	nop
  40dc49:	jge    0x40dc67
  40dc4b:	push   esp
  40dc4c:	sbb    eax,0x9bcef9ba
  40dc51:	int3   
  40dc52:	jno    0x40dc69
  40dc54:	and    DWORD PTR [edi-0x25],0xffffffaa
  40dc58:	push   ss
  40dc59:	or     ah,ch
  40dc5b:	les    edi,FWORD PTR [ecx+0x80e97ac]
  40dc61:	sar    DWORD PTR ds:0x26ee5eaa,cl
  40dc67:	sbb    DWORD PTR [esi+0x29732326],0xe5a7e69d
  40dc71:	inc    edx
  40dc72:	mov    edx,0xdf0ce443
  40dc77:	mov    esi,0x5fa3384
  40dc7c:	call   0x3501d986
  40dc81:	or     eax,ebp
  40dc83:	imul   esi,edi,0xb33ed2c3
  40dc89:	adc    dl,dl
  40dc8b:	cmp    al,0xd
  40dc8d:	sub    ah,bl
  40dc8f:	test   BYTE PTR [esi+ebp*1],bl
  40dc92:	frstor [ebp+0x16]
  40dc95:	fwait
  40dc96:	ret    0x3fc2
  40dc99:	iret   
  40dc9a:	popf   
  40dc9b:	dec    eax
  40dc9c:	inc    ecx
  40dc9d:	adc    cl,0xd4
  40dca0:	xor    esp,DWORD PTR [edx-0xf]
  40dca3:	and    edi,DWORD PTR [esi-0x14]
  40dca6:	fcmovbe st,st(0)
  40dca8:	jb     0x40dd0a
  40dcaa:	push   es
  40dcab:	addr16 jbe 0x40dcb2
  40dcae:	add    eax,0x199944c4
  40dcb3:	pop    edi
  40dcb4:	lods   eax,DWORD PTR ds:[esi]
  40dcb5:	inc    edx
  40dcb6:	mov    BYTE PTR [eax+0x4837e17],al
  40dcbc:	stos   WORD PTR es:[edi],ax
  40dcbe:	add    BYTE PTR [ebx+0x33b12b09],bl
  40dcc4:	mov    ds:0xde138c8b,eax
  40dcc9:	mov    al,ds:0xb45505b5
  40dcce:	xchg   ebp,eax
  40dccf:	shl    DWORD PTR [edi-0x341a816a],0x49
  40dcd6:	sub    BYTE PTR [edx+eax*1+0x14],0x8f
  40dcdb:	fsubr  st,st(1)
  40dcdd:	lods   al,BYTE PTR ds:[esi]
  40dcde:	xchg   ebx,eax
  40dcdf:	arpl   WORD PTR [ebx],sp
  40dce1:	jg     0x40dd52
  40dce3:	in     al,0x2e
  40dce5:	fidiv  DWORD PTR [ecx+0x68503c42]
  40dceb:	out    dx,al
  40dcec:	sub    ch,BYTE PTR [ebp-0x80]
  40dcef:	mov    ebp,0x8a12a62e
  40dcf4:	lods   eax,DWORD PTR ds:[esi]
  40dcf5:	(bad)  
  40dcf6:	jecxz  0x40dca8
  40dcf8:	mov    al,0xa0
  40dcfa:	inc    eax
  40dcfb:	pop    ecx
  40dcfc:	(bad)  
  40dcfd:	xchg   ebp,eax
  40dcfe:	dec    ebp
  40dcff:	addr16 aas 
  40dd01:	les    esp,FWORD PTR [ebp-0x317f252]
  40dd07:	jno    0x40dd0a
  40dd09:	push   eax
  40dd0a:	pop    edi
  40dd0b:	pusha  
  40dd0c:	ds int 0xa5
  40dd0f:	(bad)  
  40dd10:	pop    ebp
  40dd11:	mov    DWORD PTR [esi],esp
  40dd13:	js     0x40dd36
  40dd15:	pop    ebx
  40dd16:	jbe    0x40dd27
  40dd18:	jle    0x40dceb
  40dd1a:	stos   BYTE PTR es:[edi],al
  40dd1b:	dec    eax
  40dd1c:	xchg   ebx,eax
  40dd1d:	sar    BYTE PTR [edx+0x31],1
  40dd20:	pop    esi
  40dd21:	test   al,0x0
  40dd23:	scas   eax,DWORD PTR es:[edi]
  40dd24:	mov    bh,0x8
  40dd26:	imul   BYTE PTR [ebx+0x2c]
  40dd29:	push   ebp
  40dd2a:	inc    esp
  40dd2b:	out    0x9a,al
  40dd2d:	cmp    al,0xdb
  40dd2f:	push   ecx
  40dd30:	shl    DWORD PTR [ebp+0x2d],0x62
  40dd34:	sar    BYTE PTR [ebp+0x37],0xa2
  40dd38:	pusha  
  40dd39:	push   ds
  40dd3a:	xor    DWORD PTR [ecx-0x37decc20],0xc18ba012
  40dd44:	push   es
  40dd45:	mov    ebp,0xd930f650
  40dd4a:	mov    esi,0xc2a56c88
  40dd4f:	pop    edx
  40dd50:	cld    
  40dd51:	dec    esp
  40dd52:	mov    ebx,0x8f46425f
  40dd57:	push   esp
  40dd58:	xor    DWORD PTR [eax],ecx
  40dd5a:	xor    eax,0x7b89f674
  40dd5f:	dec    esi
  40dd60:	dec    esi
  40dd61:	mov    ebp,DWORD PTR [edx+ebp*1-0x50]
  40dd65:	or     dl,BYTE PTR [ebx+0x7e]
  40dd68:	je     0x40dd84
  40dd6a:	jb     0x40dd89
  40dd6c:	es repnz pop ss
  40dd6f:	inc    ebx
  40dd70:	enter  0x496c,0xbc
  40dd74:	or     al,0x32
  40dd76:	jmp    0x40dd15
  40dd78:	xor    esp,ebp
  40dd7a:	adc    BYTE PTR [ecx-0x57],al
  40dd7d:	(bad)  
  40dd7e:	daa    
  40dd7f:	rcl    BYTE PTR [eax+0x3f],cl
  40dd82:	test   al,0x34
  40dd84:	pushf  
  40dd85:	out    dx,al
  40dd86:	(bad)  
  40dd87:	das    
  40dd88:	mov    bh,BYTE PTR [esi+0x6]
  40dd8b:	ss js  0x40ddea
  40dd8e:	cs mov ebx,0xb0483ed5
  40dd94:	mov    al,ds:0xec947abc
  40dd99:	lahf   
  40dd9a:	or     eax,0x8a1b2228
  40dd9f:	adc    eax,0x7f83d5da
  40dda4:	mov    bh,0xc5
  40dda6:	outs   dx,DWORD PTR ds:[esi]
  40dda7:	dec    ebx
  40dda8:	imul   eax,DWORD PTR [eax+0x38c62ce],0xfffffffd
  40ddaf:	lods   eax,DWORD PTR ds:[esi]
  40ddb0:	xchg   edi,eax
  40ddb1:	xor    al,0x4f
  40ddb3:	icebp  
  40ddb4:	and    edi,DWORD PTR [eax-0x202ffeee]
  40ddba:	push   esp
  40ddbb:	add    DWORD PTR [esi-0x14783033],ecx
  40ddc1:	movsx  edi,BYTE PTR [ebp-0x45]
  40ddc5:	dec    esp
  40ddc6:	addr16 dec eax
  40ddc8:	ret    0xf304
  40ddcb:	mov    ds:0xf60c5188,eax
  40ddd0:	loop   0x40ddc7
  40ddd2:	xchg   edi,eax
  40ddd3:	and    al,0x74
  40ddd5:	les    ebx,FWORD PTR [ecx+0x67cc6f52]
  40dddb:	xchg   edx,eax
  40dddc:	loope  0x40ddd7
  40ddde:	jae    0x40ddce
  40dde0:	pop    edi
  40dde1:	mov    cl,0xdf
  40dde3:	data16 (bad) 
  40dde5:	shl    edx,0xfb
  40dde8:	test   DWORD PTR ds:0xc3407385,0x76431690
  40ddf2:	xor    DWORD PTR [ebx-0x6317336c],esi
  40ddf8:	mov    esi,0x4df898b0
  40ddfd:	cmp    BYTE PTR [eax],bh
  40ddff:	(bad)  
  40de00:	jb     0x40de21
  40de02:	fidiv  WORD PTR [edi]
  40de04:	push   esp
  40de05:	xor    DWORD PTR [edx],eax
  40de07:	xchg   ebx,eax
  40de08:	retf   
  40de09:	jmp    esi
  40de0b:	pop    es
  40de0c:	fs mov ecx,0x8cff3d48
  40de12:	mov    al,0xa8
  40de14:	fist   WORD PTR [eax+0xd]
  40de17:	sub    BYTE PTR [edi-0x5ca9bea0],bl
  40de1d:	call   0xc70acf7f
  40de22:	xor    DWORD PTR [esi],esi
  40de24:	(bad)  
  40de25:	std    
  40de26:	or     BYTE PTR [ecx+edx*2-0x72b47d00],ah
  40de2d:	aas    
  40de2e:	rol    BYTE PTR [ebx-0x3b],cl
  40de31:	mov    DWORD PTR [ebx],0x408d2c87
  40de37:	mov    ebp,0x5048f7a1
  40de3c:	out    0xfc,eax
  40de3e:	pop    esp
  40de3f:	jle    0x40de48
  40de41:	jecxz  0x40de97
  40de43:	jne    0x40ddeb
  40de45:	jne    0x40de89
  40de47:	call   0x7b9d:0x39d7aaf6
  40de4e:	push   ebp
  40de4f:	jbe    0x40de4a
  40de51:	and    BYTE PTR [edx],ah
  40de53:	int    0x8f
  40de55:	mov    dh,0xaa
  40de57:	xchg   bl,cl
  40de59:	aas    
  40de5a:	or     al,0x7c
  40de5c:	and    ecx,DWORD PTR gs:[edi-0x29]
  40de60:	adc    BYTE PTR [ecx+0x3fc2ed8e],0x9d
  40de67:	(bad)  
  40de69:	(bad)  
  40de6a:	mov    ecx,DWORD PTR [edi-0x31]
  40de6d:	ret    0xd838
  40de70:	mov    WORD PTR [ecx-0x1322f231],?
  40de76:	push   cs
  40de77:	ja     0x40de66
  40de79:	push   ecx
  40de7a:	stos   BYTE PTR es:[edi],al
  40de7b:	pusha  
  40de7c:	or     DWORD PTR [edx+0x68109b20],edx
  40de82:	fdivr  QWORD PTR [ebp+0x34ba7f7c]
  40de88:	cmp    ebp,eax
  40de8a:	xor    al,0xca
  40de8c:	sbb    ch,BYTE PTR [edx-0x6dc5e897]
  40de92:	sahf   
  40de93:	repnz scas al,BYTE PTR es:[edi]
  40de95:	out    dx,eax
  40de96:	in     eax,dx
  40de97:	sti    
  40de98:	(bad)  
  40de99:	pop    edi
  40de9a:	cdq    
  40de9b:	ror    BYTE PTR [eax],1
  40de9d:	mov    al,ds:0xeb5cccf1
  40dea2:	mov    cl,0xbe
  40dea4:	sbb    ch,BYTE PTR [eax+0x64181200]
  40deaa:	or     DWORD PTR [esi-0x62766eab],0x77d03cb2
  40deb4:	mov    cl,0xa3
  40deb6:	test   DWORD PTR [edx],edi
  40deb8:	mov    WORD PTR [ebx+0x2704c0cb],cs
  40debe:	das    
  40debf:	sub    DWORD PTR ds:0xf05d0eee,esp
  40dec5:	and    edx,DWORD PTR [ecx+0x63]
  40dec8:	retf   
  40dec9:	mov    eax,ds:0x46771ee2
  40dece:	repnz out dx,eax
  40ded0:	fwait
  40ded1:	or     ch,BYTE PTR ds:0x1f70238e
  40ded7:	or     BYTE PTR [edi+0x2e191fdc],dh
  40dedd:	inc    eax
  40dede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dedf:	mov    al,0x4f
  40dee1:	sar    BYTE PTR [esi-0x7b],1
  40dee4:	mov    esp,0x34631c16
  40dee9:	ins    BYTE PTR es:[edi],dx
  40deea:	inc    ebp
  40deeb:	sub    dh,BYTE PTR [ecx]
  40deed:	aam    0x9
  40deef:	push   ss
  40def0:	push   0xffffff95
  40def2:	jno    0x40df1c
  40def4:	push   ebp
  40def5:	sbb    eax,0xc36b7397
  40defa:	sbb    al,0x1e
  40defc:	scas   al,BYTE PTR es:[edi]
  40defd:	mov    al,ds:0x82b64d2e
  40df02:	mov    edx,0x5b4aa5ae
  40df07:	sub    eax,0x4bfd1556
  40df0c:	pop    edx
  40df0d:	or     dh,cl
  40df0f:	gs retf 0x610d
  40df13:	mov    dl,0x5c
  40df15:	into   
  40df16:	dec    eax
  40df17:	push   ecx
  40df18:	mov    eax,ds:0xf8941b52
  40df1e:	lea    edi,[ebp-0x6e2b32c4]
  40df24:	pop    eax
  40df25:	xchg   edx,eax
  40df26:	shl    dl,1
  40df28:	mov    bl,0x17
  40df2a:	add    eax,0x8f1d88ea
  40df2f:	stos   BYTE PTR es:[edi],al
  40df30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df31:	xor    BYTE PTR [ebx+edx*1],dh
  40df34:	cli    
  40df35:	cmc    
  40df36:	inc    ebx
  40df37:	dec    esi
  40df38:	mov    ecx,0xaf83405
  40df3d:	mov    esp,0xce60d992
  40df42:	stc    
  40df43:	push   edx
  40df44:	jmp    0x40df13
  40df46:	jge    0x40df04
  40df48:	jecxz  0x40df5b
  40df4a:	bound  edx,QWORD PTR [edx+eax*1+0x33]
  40df4e:	pusha  
  40df4f:	mov    bl,0x9f
  40df51:	pop    ebp
  40df52:	cmp    bh,al
  40df54:	add    al,BYTE PTR [ebx]
  40df56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df58:	ret    0x179
  40df5b:	mov    dh,0x89
  40df5d:	icebp  
  40df5e:	jle    0x40df05
  40df60:	push   es
  40df61:	call   ebx
  40df63:	pop    ecx
  40df64:	fdivr  DWORD PTR [esp+eiz*8+0x10]
  40df68:	int    0x44
  40df6a:	mov    bl,0x8e
  40df6c:	enter  0x846b,0xb9
  40df70:	scas   eax,DWORD PTR es:[edi]
  40df71:	fs pop edx
  40df73:	daa    
  40df74:	cs (bad) 
  40df76:	push   0x273dc933
  40df7b:	jmp    0x40dfaa
  40df7d:	push   ebx
  40df7e:	mov    ah,0xf5
  40df80:	out    dx,al
  40df81:	and    al,0x63
  40df83:	sub    esp,DWORD PTR [edx]
  40df85:	sbb    dl,BYTE PTR [ebp-0x1a7d717d]
  40df8b:	daa    
  40df8c:	mov    al,ds:0xa6fab5ea
  40df91:	repnz cli 
  40df93:	pop    ss
  40df94:	stc    
  40df95:	cwde   
  40df96:	imul   edx,eax,0xffffffea
  40df99:	retf   
  40df9a:	jge    0x40df7b
  40df9c:	sbb    ah,al
  40df9e:	adc    eax,0x9529ee82
  40dfa3:	in     al,dx
  40dfa4:	and    dl,cl
  40dfa6:	sub    esp,DWORD PTR [eax+0xbf81dda]
  40dfac:	retf   0xabb4
  40dfaf:	ja     0x40dfb4
  40dfb1:	mov    WORD PTR [ebx],ss
  40dfb3:	or     cl,cl
  40dfb5:	fbld   TBYTE PTR [edi]
  40dfb7:	xchg   al,ah
  40dfb9:	adc    bl,BYTE PTR [ecx-0x208f8e64]
  40dfbf:	frstor [edi-0x4d73da91]
  40dfc5:	scas   al,BYTE PTR es:[edi]
  40dfc6:	push   ds
  40dfc7:	sub    ebx,esi
  40dfc9:	xchg   ebx,eax
  40dfca:	stos   DWORD PTR es:[edi],eax
  40dfcb:	push   ds
  40dfcc:	loope  0x40dfe0
  40dfce:	cld    
  40dfcf:	xor    DWORD PTR [ecx],esi
  40dfd1:	inc    eax
  40dfd2:	test   edi,0x5eb6c9f6
  40dfd8:	into   
  40dfd9:	pop    eax
  40dfda:	mov    DWORD PTR [edx+0x1f71368d],eax
  40dfe0:	arpl   WORD PTR [ecx-0x57946574],di
  40dfe6:	push   ss
  40dfe7:	and    al,0x8b
  40dfe9:	add    DWORD PTR [edi-0x5f],ecx
  40dfec:	ja     0x40dfb1
  40dfee:	jbe    0x40e066
  40dff0:	into   
  40dff1:	lahf   
  40dff2:	adc    ch,cl
  40dff4:	xchg   ah,ah
  40dff6:	and    eax,0xe84c5adc
  40dffb:	fwait
  40dffc:	sub    BYTE PTR [edx+0x100a5ed7],0x14
  40e003:	es xor al,0x89
  40e006:	stos   BYTE PTR es:[edi],al
  40e007:	je     0x40e056
  40e009:	push   ebx
  40e00a:	inc    ebx
  40e00b:	js     0x40e039
  40e00d:	and    bl,BYTE PTR [ecx+esi*4]
  40e010:	fwait
  40e011:	test   al,0x1d
  40e013:	imul   ebx,DWORD PTR [edi-0x20],0xaca94e3c
  40e01a:	mov    dl,0x9f
  40e01c:	stc    
  40e01d:	mov    esp,0xc2cbaf3e
  40e022:	std    
  40e023:	test   ecx,esi
  40e025:	imul   edi,DWORD PTR [eax+0x1f],0x785bf194
  40e02c:	cmp    al,0xd8
  40e02e:	aaa    
  40e02f:	add    edx,DWORD PTR [ecx+ebx*2-0xb]
  40e033:	lods   al,BYTE PTR ds:[esi]
  40e034:	add    bh,BYTE PTR [edx-0x7d5a6185]
  40e03a:	inc    edx
  40e03b:	mov    WORD PTR [esi-0x63],cs
  40e03e:	xchg   edi,eax
  40e03f:	mov    eax,ds:0x3b569a63
  40e044:	lahf   
  40e045:	out    0x2b,al
  40e047:	push   esp
  40e048:	sub    BYTE PTR [ebx-0x21],ch
  40e04b:	jno    0x40e052
  40e04d:	cs jnp 0x40dfd4
  40e050:	xchg   esi,eax
  40e051:	sub    DWORD PTR [edi-0x21],ebx
  40e054:	in     al,dx
  40e055:	or     DWORD PTR [edi+eiz*4-0x36],0x58
  40e05a:	dec    esi
  40e05b:	outs   dx,DWORD PTR ds:[esi]
  40e05d:	(bad)  
  40e05e:	push   esi
  40e05f:	jno    0x40e061
  40e061:	fwait
  40e062:	mov    eax,ds:0x5cdb4963
  40e067:	jae    0x40e025
  40e069:	loope  0x40dff3
  40e06b:	xchg   esi,eax
  40e06c:	xchg   esi,eax
  40e06d:	adc    dh,BYTE PTR [ecx+0x187bfb7]
  40e073:	sbb    bl,BYTE PTR [ecx-0x7de25d97]
  40e079:	sbb    BYTE PTR [ecx-0x51],al
  40e07c:	ffreep st(3)
  40e07e:	cmc    
  40e07f:	xor    DWORD PTR [ecx-0x1ca339fb],esi
  40e085:	push   cs
  40e086:	(bad)  
  40e087:	cld    
  40e088:	jns    0x40e0af
  40e08a:	nop
  40e08b:	jbe    0x40e0ce
  40e08d:	adc    al,0xcf
  40e08f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e090:	std    
  40e091:	enter  0x9aa5,0x8b
  40e095:	stos   BYTE PTR es:[edi],al
  40e096:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e097:	sbb    eax,0x16dd2f18
  40e09c:	test   al,0xe7
  40e09e:	xchg   esi,eax
  40e09f:	sub    edi,edi
  40e0a1:	in     eax,0x81
  40e0a3:	pop    ebp
  40e0a4:	repnz dec edx
  40e0a6:	in     al,dx
  40e0a7:	sub    ah,BYTE PTR [ebx]
  40e0a9:	mov    ch,0x8c
  40e0ab:	jmp    0xd898fdd3
  40e0b0:	imul   edi,DWORD PTR [ebx],0x3e7d49af
  40e0b6:	add    DWORD PTR [ecx+0x42],0x43a81977
  40e0bd:	mov    esi,0x5b68c642
  40e0c2:	pushf  
  40e0c3:	sbb    ch,BYTE PTR [edx]
  40e0c5:	push   0x189d4538
  40e0ca:	dec    esi
  40e0cb:	pushf  
  40e0cc:	pop    edi
  40e0cd:	and    BYTE PTR ds:[edx-0x1f],0x28
  40e0d2:	sub    al,0x18
  40e0d4:	push   esi
  40e0d5:	jl     0x40e0c6
  40e0d7:	mov    esp,0xbda8f5f5
  40e0dc:	(bad)  
  40e0dd:	retf   
  40e0de:	xor    DWORD PTR [esi],edx
  40e0e0:	sub    bh,BYTE PTR ds:0xfbc4d8eb
  40e0e6:	xlat   BYTE PTR ds:[ebx]
  40e0e7:	add    al,0xd1
  40e0e9:	mov    edi,0x858c49ad
  40e0ee:	in     al,dx
  40e0ef:	lods   al,BYTE PTR ds:[esi]
  40e0f0:	arpl   ax,sp
  40e0f2:	inc    ecx
  40e0f3:	iret   
  40e0f4:	out    0xba,eax
  40e0f6:	or     al,0x8b
  40e0f8:	(bad)  
  40e0f9:	mov    ?,WORD PTR [esi-0x4ddaf39f]
  40e0ff:	adc    bh,0x76
  40e102:	pop    ds
  40e103:	sbb    dl,al
  40e105:	out    dx,eax
  40e106:	inc    eax
  40e107:	jl     0x40e0d8
  40e109:	and    al,0xd2
  40e10b:	sub    DWORD PTR [esi],ebx
  40e10d:	ja     0x40e147
  40e10f:	mov    ch,ch
  40e111:	xor    eax,0x6a45e79b
  40e116:	repnz inc ebp
  40e118:	iret   
  40e119:	call   0xa99d:0x14a186a9
  40e120:	repnz lea esp,[esi-0x74c2deca]
  40e127:	vpmulhw xmm4,xmm1,xmm4
  40e12b:	adc    DWORD PTR [edx-0x2d],edi
  40e12e:	push   esp
  40e12f:	mov    dh,0x7
  40e131:	mov    al,0xc6
  40e133:	mov    esi,esi
  40e135:	jecxz  0x40e157
  40e137:	mov    ds:0x3baf0e92,eax
  40e13c:	loop   0x40e1a3
  40e13e:	scas   eax,DWORD PTR es:[edi]
  40e13f:	lods   eax,DWORD PTR ds:[esi]
  40e140:	xchg   esp,eax
  40e141:	xchg   ebx,eax
  40e142:	repz sub dh,BYTE PTR cs:[eax+ebx*8+0x75]
  40e148:	retf   0xe192
  40e14b:	push   edi
  40e14c:	or     eax,0x45460baf
  40e151:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e152:	sahf   
  40e153:	adc    esi,ebp
  40e155:	addr16 jmp 0x40e15e
  40e158:	mov    dh,BYTE PTR [esi-0x26]
  40e15b:	pop    ss
  40e15c:	fucom  st(4)
  40e15e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e15f:	xor    BYTE PTR [edi+ecx*2+0x16],dl
  40e163:	mov    dl,0x5a
  40e165:	inc    edi
  40e166:	adc    al,0x75
  40e168:	push   ecx
  40e169:	add    BYTE PTR [ecx],cl
  40e16b:	inc    esi
  40e16c:	out    0xf4,al
  40e16e:	sbb    ch,al
  40e170:	mov    eax,0xefe5dc94
  40e175:	mov    al,ds:0x9c0a5b5f
  40e17a:	ret    0x600f
  40e17d:	(bad)
  40e180:	xor    al,BYTE PTR [ebx]
  40e182:	push   edi
  40e183:	(bad)  
  40e184:	test   DWORD PTR ds:[esi+edx*4],ebx
  40e188:	sbb    DWORD PTR [ebx-0x36f9ebea],eax
  40e18e:	aam    0xcf
  40e190:	retf   
  40e191:	or     eax,0x554a9a6a
  40e196:	adc    DWORD PTR ss:0x4dde953a,ecx
  40e19d:	dec    ecx
  40e19e:	xchg   edx,eax
  40e19f:	pop    ds
  40e1a0:	xchg   ecx,eax
  40e1a1:	cwde   
  40e1a2:	jb     0x40e14e
  40e1a4:	mov    al,ds:0xe4e8c972
  40e1a9:	push   ds
  40e1aa:	add    DWORD PTR [ebp-0xd574937],0xcf6760fc
  40e1b4:	xor    DWORD PTR [esi],eax
  40e1b6:	addr16 out dx,al
  40e1b8:	iret   
  40e1b9:	imul   eax,DWORD PTR [eax+0x420eadec],0xe8d41296
  40e1c3:	jmp    0x5a379660
  40e1c8:	inc    ecx
  40e1c9:	mov    al,BYTE PTR [edx-0x28fd6ad3]
  40e1cf:	dec    ebx
  40e1d0:	pop    ebp
  40e1d1:	inc    esp
  40e1d2:	dec    edx
  40e1d3:	dec    esi
  40e1d4:	sbb    BYTE PTR [edi+0x155f7d16],al
  40e1da:	xchg   BYTE PTR [edx],cl
  40e1dc:	mov    edi,0xa0370cf8
  40e1e1:	xchg   esi,edi
  40e1e3:	jbe    0x40e18b
  40e1e5:	int3   
  40e1e6:	in     al,0x73
  40e1e8:	push   esp
  40e1e9:	aaa    
  40e1ea:	test   BYTE PTR [edi+0xe],0xc6
  40e1ee:	or     DWORD PTR ds:0xbda37714,ecx
  40e1f4:	imul   edx,DWORD PTR [edx-0x25],0x86a99154
  40e1fb:	icebp  
  40e1fc:	inc    esi
  40e1fd:	out    dx,eax
  40e1fe:	stos   DWORD PTR es:[edi],eax
  40e1ff:	mov    esp,DWORD PTR [eax-0xa58131d]
  40e205:	xchg   ecx,eax
  40e206:	xchg   DWORD PTR [eax+0x3d],esi
  40e209:	pop    ss
  40e20a:	(bad)  
  40e20b:	das    
  40e20c:	scas   eax,DWORD PTR es:[edi]
  40e20d:	jne    0x40e21a
  40e20f:	stc    
  40e210:	mov    cl,0x9d
  40e212:	push   es
  40e213:	fidivr WORD PTR [ebp-0x455901fe]
  40e219:	jnp    0x40e25d
  40e21b:	inc    DWORD PTR [edx]
  40e21d:	dec    ebp
  40e21e:	adc    ah,BYTE PTR [esi+0x6b]
  40e221:	shl    BYTE PTR [edi+0x6ede6b0a],1
  40e227:	xchg   DWORD PTR [ebp+0x32ec4eb0],ebp
  40e22d:	int    0x6b
  40e22f:	xchg   edi,eax
  40e230:	shl    edx,0x5e
  40e233:	sub    DWORD PTR [edx+ecx*4+0x41],esi
  40e237:	pop    ebx
  40e238:	or     ch,BYTE PTR [ecx+0x7f38b270]
  40e23e:	mov    BYTE PTR [edi+eiz*1-0x3a92cfe1],dl
  40e245:	sahf   
  40e246:	xor    DWORD PTR [ecx+0x7a11cb18],0xffffffc2
  40e24d:	(bad)  
  40e24e:	pop    edi
  40e24f:	push   0xfffffff2
  40e251:	lods   al,BYTE PTR ds:[esi]
  40e252:	xchg   ecx,eax
  40e253:	fistp  DWORD PTR [ebx]
  40e255:	cmp    BYTE PTR [ecx-0x14],ch
  40e258:	mov    bl,0x17
  40e25a:	push   esi
  40e25b:	int    0x45
  40e25d:	shl    DWORD PTR [eax],1
  40e25f:	sahf   
  40e260:	test   BYTE PTR [edi+0xe],0x97
  40e264:	shl    BYTE PTR [eax+0x7ec2d581],cl
  40e26a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e26b:	aaa    
  40e26c:	cdq    
  40e26d:	ins    BYTE PTR es:[edi],dx
  40e26e:	out    0x53,al
  40e270:	mov    edx,0x65159b3a
  40e275:	hlt    
  40e276:	into   
  40e277:	cwde   
  40e278:	pop    ecx
  40e279:	pop    ebx
  40e27a:	xchg   esi,eax
  40e27b:	dec    esi
  40e27c:	mov    fs,WORD PTR [ebx-0x6b]
  40e27f:	int3   
  40e280:	inc    esp
  40e281:	aaa    
  40e282:	inc    esp
  40e283:	test   eax,0x3267a958
  40e288:	scas   eax,DWORD PTR es:[edi]
  40e289:	xchg   ecx,eax
  40e28a:	mov    dl,0x2e
  40e28c:	arpl   WORD PTR [ebp+0x2a5ef478],di
  40e292:	adc    al,0x19
  40e294:	idiv   dl
  40e296:	sub    bh,BYTE PTR [edi-0xa]
  40e299:	mov    ds:0x2e587c10,eax
  40e29e:	js     0x40e2fe
  40e2a0:	setp   bl
  40e2a3:	pop    ds
  40e2a4:	pop    esi
  40e2a5:	test   al,0x13
  40e2a7:	jmp    0xfddc:0x8a68ea96
  40e2ae:	test   al,0xf4
  40e2b0:	stc    
  40e2b1:	and    BYTE PTR [ecx-0x59],bh
  40e2b4:	fcmovu st,st(6)
  40e2b6:	pop    edx
  40e2b7:	in     al,0xed
  40e2b9:	xchg   eax,ebx
  40e2bb:	jg     0x40e309
  40e2bd:	iret   
  40e2be:	adc    eax,0x6b2466eb
  40e2c3:	(bad)  
  40e2c4:	push   ss
  40e2c5:	(bad)  
  40e2c6:	clc    
  40e2c7:	addr16 sbb eax,0xfc7d9581
  40e2cd:	mov    edx,0x2b6735ef
  40e2d2:	add    bh,ch
  40e2d4:	lea    edi,[edx]
  40e2d6:	imul   edx,DWORD PTR [edi],0xbe681410
  40e2dc:	(bad)  
  40e2dd:	ins    DWORD PTR es:[edi],dx
  40e2de:	std    
  40e2df:	and    BYTE PTR [ebp+0x60e8e02b],cl
  40e2e5:	ds add al,0xbf
  40e2e8:	stos   DWORD PTR es:[edi],eax
  40e2e9:	or     al,0xad
  40e2eb:	test   DWORD PTR [ecx+0x45],ecx
  40e2ee:	push   ss
  40e2ef:	dec    ebp
  40e2f0:	sub    al,0x9b
  40e2f2:	test   DWORD PTR [edx+0x52],eax
  40e2f5:	enter  0x1603,0x87
  40e2f9:	nop
  40e2fa:	je     0x6e8161ef
  40e300:	sub    al,0x77
  40e302:	sub    ecx,eax
  40e304:	frstor [eax-0x56]
  40e307:	xor    BYTE PTR [edi+0x2b9b0c3d],ch
  40e30d:	jl     0x40e317
  40e30f:	push   edi
  40e310:	jnp    0x40e2af
  40e312:	add    eax,DWORD PTR [ebx-0x2e]
  40e315:	sbb    DWORD PTR [edi+0x6a],eax
  40e318:	push   es
  40e319:	fwait
  40e31a:	sbb    al,0xab
  40e31c:	inc    eax
  40e31d:	xor    BYTE PTR [edx+0xfebc705],dl
  40e323:	jl     0x40e398
  40e325:	mov    DWORD PTR [ecx+0x39279d6d],ebp
  40e32b:	leave  
  40e32c:	stos   DWORD PTR es:[edi],eax
  40e32d:	and    dl,BYTE PTR [edi-0x61d45ab]
  40e333:	ror    dh,1
  40e335:	hlt    
  40e336:	add    DWORD PTR [esi-0x45],edi
  40e339:	mov    eax,0x62db0c86
  40e33e:	inc    esp
  40e33f:	(bad)
  40e343:	push   es
  40e344:	adc    BYTE PTR [ebp-0x2d86c2b7],ch
  40e34a:	xchg   al,ch
  40e34c:	xor    DWORD PTR [edx+0x63],0x751bd5c3
  40e353:	adc    al,0x1e
  40e355:	dec    ebp
  40e356:	push   ecx
  40e357:	jmp    0x40e32f
  40e359:	stos   BYTE PTR es:[edi],al
  40e35a:	hlt    
  40e35b:	jecxz  0x40e2df
  40e35d:	dec    ebx
  40e35e:	xchg   DWORD PTR [edx-0x33],ebp
  40e361:	ss rdpmc 
  40e364:	inc    esp
  40e365:	call   0xa6501e7c
  40e36a:	scas   eax,DWORD PTR es:[edi]
  40e36b:	and    eax,0xd21a40de
  40e370:	jmp    0x82c3:0x81e97e80
  40e377:	mov    al,ds:0xbdf51048
  40e37c:	jb     0x40e382
  40e37e:	out    dx,al
  40e37f:	jg     0x40e3db
  40e381:	jne    0x40e343
  40e383:	pop    esp
  40e384:	dec    ebx
  40e385:	call   0xfbcc:0xd5472c34
  40e38c:	callw  0x4030
  40e390:	add    edx,DWORD PTR [ebp-0x74818341]
  40e396:	and    eax,0x36b2c91b
  40e39b:	fmulp  st(0),st
  40e39d:	lods   eax,DWORD PTR ds:[esi]
  40e39e:	imul   ebx,DWORD PTR [esi],0x3bc89300
  40e3a4:	fnsave [ecx]
  40e3a6:	aad    0x22
  40e3a8:	out    0xfd,eax
  40e3aa:	repz mov dh,BYTE PTR [ebp+0x745dc0de]
  40e3b1:	into   
  40e3b2:	dec    ebx
  40e3b3:	fwait
  40e3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e3b5:	outs   dx,DWORD PTR ds:[esi]
  40e3b6:	pushf  
  40e3b7:	bnd ret 
  40e3b9:	pushf  
  40e3ba:	xchg   edx,eax
  40e3bb:	stc    
  40e3bc:	pop    esp
  40e3bd:	mov    al,0x76
  40e3bf:	adc    al,bh
  40e3c1:	add    DWORD PTR [esi+0x7d15c8c6],eax
  40e3c7:	je     0x40e385
  40e3c9:	xchg   ebp,eax
  40e3ca:	test   esi,ecx
  40e3cc:	jno    0x40e3bc
  40e3ce:	mov    esp,0x59c56fb5
  40e3d3:	mov    BYTE PTR [eax-0x407a24cc],dl
  40e3d9:	dec    edi
  40e3da:	fwait
  40e3db:	lods   eax,DWORD PTR ds:[esi]
  40e3dc:	ja     0x40e3a1
  40e3de:	idiv   DWORD PTR [esi-0x53d8f9a4]
  40e3e4:	mov    bl,0x22
  40e3e6:	(bad)  
  40e3e7:	dec    DWORD PTR [edx-0x7a7bef5c]
  40e3ed:	arpl   di,si
  40e3ef:	pop    eax
  40e3f0:	add    eax,0xa8b8f3be
  40e3f5:	test   DWORD PTR [ebx+0x42],eax
  40e3f8:	in     eax,dx
  40e3f9:	add    al,0xdf
  40e3fb:	sti    
  40e3fc:	and    DWORD PTR [ebx+ebx*2-0x6b],esi
  40e400:	sti    
  40e401:	lods   eax,DWORD PTR ds:[esi]
  40e402:	adc    BYTE PTR [eax+0x2d],cl
  40e405:	mov    ?,WORD PTR [esp+ebx*2-0x1fb810c]
  40e40c:	clc    
  40e40d:	stos   BYTE PTR es:[edi],al
  40e40e:	adc    al,BYTE PTR [esi+0x20]
  40e411:	data16 sbb BYTE PTR [ebx],ah
  40e414:	push   esi
  40e415:	dec    esi
  40e416:	das    
  40e417:	or     eax,0xd683ba71
  40e41c:	mov    edx,0x717cd01d
  40e421:	shl    ah,cl
  40e423:	js     0x40e4a3
  40e425:	sbb    al,0xb7
  40e427:	push   esi
  40e428:	sub    BYTE PTR [esi-0x4bc2773a],al
  40e42e:	shr    DWORD PTR [edi],1
  40e430:	push   cs
  40e431:	inc    edi
  40e432:	scas   al,BYTE PTR es:[edi]
  40e433:	cdq    
  40e434:	jmp    0x3f6a:0xa398ac0f
  40e43b:	lods   al,BYTE PTR ds:[esi]
  40e43c:	(bad)  [eax+0x90181f3]
  40e442:	sbb    BYTE PTR [eax-0x4f],dl
  40e445:	jecxz  0x40e3cd
  40e447:	fstp   st(6)
  40e449:	mov    dl,0x35
  40e44b:	test   eax,0x9a276096
  40e450:	pop    esi
  40e451:	call   0x6e37:0xfdd3e829
  40e458:	rcr    BYTE PTR [esp+edi*4-0x3227655],0x3d
  40e460:	xchg   ecx,eax
  40e461:	mov    dl,0x63
  40e463:	pop    esi
  40e464:	ins    BYTE PTR es:[edi],dx
  40e465:	mov    edx,0x36ea0e26
  40e46a:	pop    ecx
  40e46b:	pop    ebx
  40e46c:	enter  0xe0cc,0x32
  40e470:	hlt    
  40e471:	outs   dx,BYTE PTR ds:[esi]
  40e472:	add    DWORD PTR [ebp+0x6c0d5116],eax
  40e478:	or     al,0x57
  40e47a:	add    al,dl
  40e47c:	jnp    0x40e4fa
  40e47e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e47f:	into   
  40e480:	sbb    DWORD PTR [edx-0x6c],ecx
  40e483:	inc    ebp
  40e484:	lea    edx,fs:0xa9d7da6c
  40e48b:	out    dx,al
  40e48c:	loopne 0x40e4e9
  40e48e:	push   ss
  40e48f:	adc    DWORD PTR [ecx+0x4b],edi
  40e492:	in     al,dx
  40e493:	cwde   
  40e494:	add    BYTE PTR [ebp-0x310804f8],ah
  40e49a:	add    ebx,ecx
  40e49c:	mov    cl,0x24
  40e49e:	jp     0x40e434
  40e4a0:	int    0x60
  40e4a2:	mov    dh,0x2d
  40e4a4:	dec    ebx
  40e4a5:	xchg   edi,eax
  40e4a6:	adc    dl,dh
  40e4a8:	push   ecx
  40e4a9:	int    0xc5
  40e4ab:	jno    0x40e450
  40e4ad:	shr    DWORD PTR [ecx],1
  40e4af:	in     al,dx
  40e4b0:	ja     0x40e47e
  40e4b2:	leave  
  40e4b3:	xchg   DWORD PTR [esi],edx
  40e4b5:	cs pop ebp
  40e4b7:	inc    esp
  40e4b8:	mov    ch,0x71
  40e4ba:	cld    
  40e4bb:	lahf   
  40e4bc:	pop    es
  40e4bd:	mov    cl,0xc3
  40e4bf:	les    ebx,FWORD PTR [ebx-0x74]
  40e4c2:	inc    ebp
  40e4c3:	(bad)  
  40e4c4:	shr    BYTE PTR [eax-0x4172c50a],cl
  40e4ca:	in     al,0x5f
  40e4cc:	(bad)  
  40e4cd:	out    dx,al
  40e4ce:	in     al,0x1a
  40e4d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4d1:	out    0xda,al
  40e4d3:	or     ecx,DWORD PTR [ebp-0x71ba60d3]
  40e4d9:	mov    BYTE PTR [ebx+0x17],dl
  40e4dc:	fisub  DWORD PTR [edx]
  40e4de:	inc    ebp
  40e4df:	or     DWORD PTR [bp+di],ebx
  40e4e2:	mov    ch,0xda
  40e4e4:	cmp    eax,0xeaa4f13d
  40e4e9:	test   eax,0xfc53ed19
  40e4ee:	sbb    ch,dh
  40e4f0:	xor    BYTE PTR [edx+0x6],bl
  40e4f3:	push   es
  40e4f4:	inc    esp
  40e4f5:	xchg   ecx,eax
  40e4f6:	sysenter 
  40e4f8:	sub    BYTE PTR [ebp+0x13631eb4],bh
  40e4fe:	mov    ah,0x1b
  40e500:	imul   esp,edx,0x375acda0
  40e506:	pop    ebp
  40e507:	pop    es
  40e508:	fwait
  40e509:	adc    bh,BYTE PTR [esi-0x10a15e88]
  40e50f:	repz pop edx
  40e511:	push   cs
  40e512:	pop    ss
  40e513:	add    BYTE PTR [edx+0x21bd5e93],bl
  40e519:	and    eax,0xd8911232
  40e51e:	fmul   DWORD PTR ds:0x9e15e7e2
  40e524:	and    al,bl
  40e526:	shl    dl,0x49
  40e529:	idiv   dh
  40e52b:	mov    edi,0xf04ee4d0
  40e530:	or     BYTE PTR [eax+edx*2+0x2d],0x7a
  40e535:	pop    ebx
  40e536:	test   eax,0xad23e7fe
  40e53b:	int    0xfa
  40e53d:	mov    BYTE PTR [esi+0x50e8bdbf],bh
  40e543:	dec    ebx
  40e544:	es or  edx,edx
  40e547:	clc    
  40e548:	loope  0x40e4f2
  40e54a:	xchg   esi,eax
  40e54b:	sub    al,0x2d
  40e54d:	bound  ebx,QWORD PTR [ebp+0x5b]
  40e550:	or     dh,ch
  40e552:	inc    eax
  40e553:	ror    BYTE PTR [edi+0x4c],cl
  40e556:	jb     0x40e561
  40e558:	enter  0xd9ff,0xfc
  40e55c:	jo     0x40e562
  40e55e:	cmp    ecx,DWORD PTR [ebp+ecx*2-0x69]
  40e562:	out    dx,eax
  40e563:	dec    ebx
  40e564:	retf   
  40e565:	or     esi,ebx
  40e567:	dec    esp
  40e568:	inc    esi
  40e569:	sub    DWORD PTR [ecx+0x2166404e],eax
  40e56f:	mov    esp,DWORD PTR [ebx-0x312f5426]
  40e575:	cmp    bh,BYTE PTR [ecx+0x6b]
  40e578:	mov    ebp,0x30cf2c8b
  40e57d:	inc    eax
  40e57e:	xor    BYTE PTR [edx+0x15365ec],0x78
  40e585:	inc    ecx
  40e586:	ins    DWORD PTR es:[edi],dx
  40e587:	outs   dx,DWORD PTR ds:[esi]
  40e588:	push   ebp
  40e589:	mov    ch,0xe
  40e58b:	xor    cl,BYTE PTR [esp+ebp*4+0x1a]
  40e58f:	lahf   
  40e590:	lahf   
  40e591:	out    0x9c,eax
  40e593:	sub    edx,ebx
  40e595:	icebp  
  40e596:	dec    eax
  40e597:	pop    edx
  40e598:	adc    DWORD PTR [eax-0x1f],ebp
  40e59b:	repnz push edi
  40e59d:	dec    edx
  40e59e:	mov    edi,0xb6c2148b
  40e5a3:	cmp    cl,BYTE PTR [edi]
  40e5a5:	mov    ah,0xf
  40e5a7:	into   
  40e5a8:	(bad)  
  40e5a9:	repnz sbb BYTE PTR [edi],0x1c
  40e5ad:	mov    cl,dh
  40e5af:	nop
  40e5b0:	push   cs
  40e5b1:	cmp    DWORD PTR [ecx-0x78],edi
  40e5b4:	aad    0x10
  40e5b6:	pop    eax
  40e5b7:	inc    ecx
  40e5b8:	xchg   ebx,eax
  40e5b9:	inc    edi
  40e5ba:	scas   al,BYTE PTR es:[edi]
  40e5bb:	and    ebp,DWORD PTR [ebx+0x5923963c]
  40e5c1:	mov    BYTE PTR cs:[eax-0x60518039],bl
  40e5c8:	and    BYTE PTR [bx+di-0x869],al
  40e5cd:	add    eax,0xf49b8794
  40e5d2:	cmp    DWORD PTR [ebp-0x4f981ce4],0xffffffcf
  40e5d9:	cmp    al,0xda
  40e5db:	leave  
  40e5dc:	inc    edi
  40e5dd:	jmp    0xb318036d
  40e5e2:	jns    0x40e630
  40e5e4:	imul   DWORD PTR [esi+esi*8]
  40e5e7:	mov    edi,0xdef1253c
  40e5ec:	scas   eax,DWORD PTR es:[edi]
  40e5ed:	sbb    DWORD PTR [ecx+esi*2],ebx
  40e5f0:	xor    ah,dl
  40e5f2:	ins    DWORD PTR es:[edi],dx
  40e5f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5f4:	clc    
  40e5f5:	pushf  
  40e5f6:	in     eax,dx
  40e5f7:	mov    ecx,eax
  40e5f9:	or     eax,ebp
  40e5fb:	push   ss
  40e5fc:	cmp    al,0x8a
  40e5fe:	ja     0x40e677
  40e600:	xchg   BYTE PTR [edx-0x5b],dh
  40e603:	js     0x40e614
  40e605:	xor    ebp,ebx
  40e607:	dec    edx
  40e608:	push   ds
  40e609:	loopne 0x40e5ca
  40e60b:	std    
  40e60c:	iret   
  40e60d:	xor    DWORD PTR ds:[edx-0x7c],ebx
  40e611:	and    eax,0x687bad45
  40e616:	push   0xf7dc5d50
  40e61b:	mov    ebx,0x3fc1a998
  40e620:	in     eax,0x95
  40e622:	push   ecx
  40e623:	mov    fs,WORD PTR [esi+0x3]
  40e626:	imul   BYTE PTR [ecx+0x5a1e477]
  40e62c:	shl    DWORD PTR [esi-0x3d],1
  40e62f:	push   ebx
  40e630:	imul   esi,DWORD PTR [ebp-0x75],0x64f385cb
  40e637:	fadd   st,st(0)
  40e639:	stc    
  40e63a:	push   edx
  40e63b:	or     al,dl
  40e63d:	push   esp
  40e63e:	iret   
  40e63f:	shl    ch,0xf0
  40e642:	mov    ah,BYTE PTR [esi]
  40e644:	(bad)  
  40e645:	int3   
  40e646:	cmp    BYTE PTR [edx+0x575cf3f4],cl
  40e64c:	sub    dl,dh
  40e64e:	sahf   
  40e64f:	lahf   
  40e650:	adc    ebx,edi
  40e652:	jbe    0x40e5fd
  40e654:	dec    esp
  40e655:	sub    esi,ebp
  40e657:	jns    0x40e68c
  40e659:	push   0xb59b9b5b
  40e65e:	jnp    0x40e6cc
  40e660:	jle    0x40e64f
  40e662:	xchg   ebx,eax
  40e663:	mov    ah,0xa7
  40e665:	stc    
  40e666:	fst    DWORD PTR [edi-0x5fce5cc5]
  40e66c:	cmc    
  40e66d:	xor    DWORD PTR [ebx],edi
  40e66f:	in     eax,0xac
  40e671:	aas    
  40e672:	dec    edx
  40e673:	nop
  40e674:	xchg   esi,eax
  40e675:	dec    edx
  40e676:	outs   dx,DWORD PTR ds:[esi]
  40e677:	cs ret 
  40e679:	pop    es
  40e67a:	fmul   QWORD PTR [edi]
  40e67c:	or     DWORD PTR [esi+eax*2+0x1a2b5a44],0x1
  40e684:	sbb    esi,eax
  40e686:	xchg   esp,eax
  40e687:	jp     0x40e626
  40e689:	popa   
  40e68a:	test   bh,bl
  40e68c:	cs enter 0x4f7,0xde
  40e691:	(bad)  
  40e693:	sub    BYTE PTR [eax],dl
  40e695:	mov    BYTE PTR [ecx-0x16],ch
  40e698:	sbb    BYTE PTR [ecx+0x36337357],dl
  40e69e:	lock xor eax,0x16850d36
  40e6a4:	dec    eax
  40e6a5:	pop    ss
  40e6a6:	std    
  40e6a7:	clc    
  40e6a8:	mov    cl,BYTE PTR [ecx-0x66]
  40e6ab:	cmp    esi,DWORD PTR [ebx+0x10]
  40e6ae:	out    dx,al
  40e6af:	push   0xffffffde
  40e6b1:	add    ch,BYTE PTR [edx]
  40e6b3:	popa   
  40e6b4:	ficomp WORD PTR [esi+0x3b]
  40e6b7:	in     al,0xa
  40e6b9:	loop   0x40e714
  40e6bb:	sub    esi,DWORD PTR [ebp+0x74]
  40e6be:	sti    
  40e6bf:	das    
  40e6c0:	rcl    BYTE PTR [ecx+ecx*4+0x10],0x9e
  40e6c5:	lock ins BYTE PTR es:[edi],dx
  40e6c7:	ret    
  40e6c8:	and    ch,dh
  40e6ca:	inc    ebx
  40e6cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e6cc:	push   eax
  40e6cd:	enter  0x4446,0x6d
  40e6d1:	imul   edx,DWORD PTR [eax],0x33
  40e6d4:	test   eax,0xf9c50b9f
  40e6d9:	inc    ecx
  40e6da:	mov    BYTE PTR [ebp-0xe],bl
  40e6dd:	(bad)  
  40e6de:	cmp    ch,dl
  40e6e0:	ror    DWORD PTR [edi+eiz*2],cl
  40e6e3:	jecxz  0x40e72d
  40e6e5:	jecxz  0x40e723
  40e6e7:	loope  0x40e6e2
  40e6e9:	pop    esi
  40e6ea:	addr16 cdq 
  40e6ec:	cld    
  40e6ed:	stc    
  40e6ee:	sbb    al,0xe0
  40e6f0:	and    BYTE PTR [edx-0x295f1cf9],0x42
  40e6f7:	popa   
  40e6f8:	adc    al,0x9b
  40e6fa:	mov    ch,0x3
  40e6fc:	jge    0x40e74c
  40e6fe:	mov    eax,0x18d87061
  40e703:	mov    DWORD PTR [eax],edx
  40e705:	clc    
  40e706:	mov    esp,0x8380ef98
  40e70b:	xchg   DWORD PTR [ebx+0xac9274c],esp
  40e711:	clc    
  40e712:	rol    ecx,1
  40e714:	mov    al,0x48
  40e716:	arpl   sp,bp
  40e718:	jp     0x40e771
  40e71a:	es arpl si,ax
  40e71d:	dec    edx
  40e71e:	xor    ebp,DWORD PTR ds:0xed4ccec
  40e724:	(bad)  
  40e725:	pop    esi
  40e726:	push   0xcb089e86
  40e72b:	es xchg ecx,eax
  40e72d:	ja     0x40e755
  40e72f:	jae    0x40e6ce
  40e731:	sub    eax,0x5c849457
  40e736:	sti    
  40e737:	enter  0x87b2,0xa
  40e73b:	cwde   
  40e73c:	daa    
  40e73d:	and    edi,esi
  40e73f:	out    dx,al
  40e740:	scas   eax,DWORD PTR es:[edi]
  40e741:	inc    edi
  40e742:	pop    ecx
  40e743:	jae    0x40e79e
  40e745:	push   0x34a03fe
  40e74a:	push   cs
  40e74b:	fnsave [ebx+0x1b]
  40e74e:	xchg   esi,eax
  40e74f:	dec    esp
  40e750:	jg     0x40e6f2
  40e752:	adc    eax,0x9e012fff
  40e757:	pop    es
  40e758:	retf   0xf024
  40e75b:	mov    esi,0xbdc6253d
  40e760:	aas    
  40e761:	mov    edx,0xa91c6f3c
  40e766:	jl     0x40e7d5
  40e768:	jmp    0x4d8:0xc12d11ca
  40e76f:	push   eax
  40e770:	cmp    eax,0x170aa909
  40e775:	push   cs
  40e776:	inc    edx
  40e777:	mov    ah,0x18
  40e779:	fucomi st,st(7)
  40e77b:	sub    eax,0x50971e26
  40e780:	scas   eax,DWORD PTR es:[edi]
  40e781:	arpl   WORD PTR ds:0x24164bf5,bx
  40e787:	mov    ds:0x43753f2e,eax
  40e78c:	adc    edi,DWORD PTR [edi+0x19be031a]
  40e792:	and    eax,0x856aa58a
  40e797:	xor    DWORD PTR [esi],edi
  40e799:	xchg   ecx,eax
  40e79a:	xchg   ebp,eax
  40e79b:	mov    ch,BYTE PTR [esi+0x12e57c99]
  40e7a1:	jno    0x40e7ea
  40e7a3:	mov    ah,0xae
  40e7a5:	loope  0x40e800
  40e7a7:	sbb    esi,DWORD PTR [edx-0x1c]
  40e7aa:	jmp    0x40e7c8
  40e7ac:	xchg   al,cl
  40e7ae:	shl    BYTE PTR [eax+eax*2+0x628cb18d],1
  40e7b5:	int    0xc7
  40e7b7:	adc    al,0x3c
  40e7b9:	shl    BYTE PTR [ebp+ebp*4+0x5d],0xb3
  40e7be:	cmp    ecx,ebp
  40e7c0:	fcmove st,st(0)
  40e7c2:	xchg   edi,eax
  40e7c3:	scas   eax,DWORD PTR es:[edi]
  40e7c4:	aad    0x9a
  40e7c6:	sbb    DWORD PTR [ecx-0x30031e65],esp
  40e7cc:	scas   eax,DWORD PTR es:[edi]
  40e7cd:	data16 mov bh,0xc5
  40e7d0:	inc    ebp
  40e7d1:	hlt    
  40e7d2:	xor    eax,0x2f3dc4db
  40e7d7:	ins    BYTE PTR es:[edi],dx
  40e7d8:	stos   BYTE PTR es:[edi],al
  40e7d9:	adc    bl,BYTE PTR [edx+0x55d9f1dd]
  40e7df:	jne    0x40e7e3
  40e7e1:	aas    
  40e7e2:	inc    esp
  40e7e3:	mov    ecx,DWORD PTR [edi+0x4f]
  40e7e6:	rcr    BYTE PTR [ebx],0x77
  40e7e9:	push   eax
  40e7ea:	iret   
  40e7eb:	pop    edx
  40e7ec:	inc    esi
  40e7ed:	ss cmp al,0x63
  40e7f0:	push   0xffffffbf
  40e7f2:	mov    dl,0xbd
  40e7f4:	sub    eax,0x32283841
  40e7f9:	jp     0x40e7fc
  40e7fb:	ss pop ss
  40e7fd:	mov    bh,0xb4
  40e7ff:	push   edi
  40e800:	xlat   BYTE PTR ds:[ebx]
  40e801:	in     eax,dx
  40e802:	(bad)  
  40e803:	mov    eax,0x4254a569
  40e808:	lds    ebp,FWORD PTR [ebp+0x13]
  40e80b:	jb     0x40e86d
  40e80d:	loop   0x40e844
  40e80f:	mov    bh,0x46
  40e811:	mov    eax,ds:0x74ddd35d
  40e816:	sub    DWORD PTR [eax+ecx*1+0x25],ebx
  40e81a:	xchg   ebx,eax
  40e81b:	pop    ecx
  40e81c:	add    esp,0xe9dc1e29
  40e822:	sbb    BYTE PTR [edx+0x28],bh
  40e825:	xor    ebp,DWORD PTR [edi]
  40e827:	fiadd  WORD PTR [edi+edx*1-0xb]
  40e82b:	(bad)  
  40e82c:	jmp    0x78bb:0x5743f8cb
  40e833:	test   DWORD PTR [ecx+0x21],ebp
  40e836:	pop    ebx
  40e837:	out    dx,al
  40e838:	test   DWORD PTR [ecx+0x6f3b29f7],eax
  40e83e:	into   
  40e83f:	inc    ebx
  40e840:	xchg   BYTE PTR [eax-0x5f38d447],dh
  40e846:	sub    BYTE PTR [esi-0x7f],dh
  40e849:	xchg   edi,eax
  40e84a:	sub    al,0x81
  40e84c:	js     0x40e7f0
  40e84e:	pop    ebp
  40e84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e850:	cmp    eax,0x9528352b
  40e855:	lahf   
  40e856:	and    al,0x15
  40e858:	imul   esp,DWORD PTR [eax+ebp*4-0x60e9659a],0x1184785e
  40e863:	in     al,0x2f
  40e865:	mov    ebx,0x9dee60dd
  40e86a:	rcl    BYTE PTR [eax],1
  40e86c:	jne    0x40e849
  40e86e:	mov    cl,BYTE PTR gs:0x7110b4d5
  40e875:	inc    ecx
  40e876:	imul   eax,DWORD PTR [edi+0x2d34bc0],0x9055e916
  40e880:	mov    ch,0x51
  40e882:	ret    0x7707
  40e885:	das    
  40e886:	fld    TBYTE PTR [eax]
  40e888:	dec    ebx
  40e889:	mov    bl,0xb6
  40e88b:	mov    esi,0x70b760a5
  40e890:	rol    DWORD PTR [eax],1
  40e892:	add    dh,BYTE PTR [ecx+0x50]
  40e895:	fwait
  40e896:	or     al,BYTE PTR [ecx+0x102465ec]
  40e89c:	mov    eax,ds:0x324dee
  40e8a1:	mov    edx,0x58511c0a
  40e8a6:	adc    ebp,eax
  40e8a8:	adc    DWORD PTR ds:0x7994bf3a,ebx
  40e8ae:	pop    ss
  40e8af:	call   FWORD PTR [edx-0x29d5fe16]
  40e8b5:	cmp    DWORD PTR [edi-0x78],esi
  40e8b8:	mov    BYTE PTR [ebx+0x5ac0a6e1],ah
  40e8be:	mov    eax,ds:0xad47a25b
  40e8c3:	push   ebx
  40e8c4:	inc    ecx
  40e8c5:	mov    al,ds:0xfebf2854
  40e8ca:	jle    0x40e88d
  40e8cc:	cdq    
  40e8cd:	pop    ebp
  40e8ce:	nop
  40e8cf:	xor    al,BYTE PTR [edx]
  40e8d1:	cwde   
  40e8d2:	out    0x60,eax
  40e8d4:	mov    ch,0xb5
  40e8d6:	and    ebx,ebx
  40e8d8:	xchg   ah,bl
  40e8da:	test   eax,0x1d7eba81
  40e8df:	jno    0x40e8cb
  40e8e1:	and    BYTE PTR [ebp-0x65],bl
  40e8e4:	jg     0x40e8a5
  40e8e6:	push   ebx
  40e8e7:	xlat   BYTE PTR ds:[ebx]
  40e8e8:	rcl    BYTE PTR [edi],0xad
  40e8eb:	lds    esi,FWORD PTR [ebx+0x57f1b5dc]
  40e8f1:	icebp  
  40e8f2:	xchg   BYTE PTR [esp+edi*2],ch
  40e8f5:	sbb    eax,0xe2c753ff
  40e8fa:	test   BYTE PTR [ebp-0x77],0x46
  40e8fe:	mov    al,ds:0x8f495e99
  40e903:	in     eax,0x5b
  40e905:	dec    ecx
  40e906:	call   0x51ef:0x78c9b21a
  40e90d:	lock jmp 0x1329:0x20a0ce2c
  40e915:	pop    es
  40e916:	jnp    0x40e8c0
  40e918:	(bad)  
  40e919:	out    0x73,al
  40e91b:	adc    DWORD PTR [esi+0x25],ecx
  40e91e:	dec    ebx
  40e91f:	push   edi
  40e920:	push   eax
  40e921:	cmp    BYTE PTR [eax+0x11],ah
  40e924:	outs   dx,DWORD PTR ds:[esi]
  40e925:	jo     0x40e8aa
  40e927:	ins    BYTE PTR es:[edi],dx
  40e928:	xor    eax,0x92041fdb
  40e92d:	retf   0x45a0
  40e930:	lea    esi,[edx-0x79]
  40e933:	mov    ebx,0x117ed8e2
  40e938:	xlat   BYTE PTR ds:[ebx]
  40e939:	or     cl,BYTE PTR [edi-0x3d1d93fe]
  40e93f:	shl    ebp,0xe3
  40e942:	cmp    BYTE PTR [eax],0x89
  40e945:	rcr    BYTE PTR [ebx],cl
  40e947:	cwde   
  40e948:	dec    eax
  40e949:	lds    edi,FWORD PTR ds:0x48b38084
  40e94f:	dec    edx
  40e950:	repz pop ds
  40e952:	add    eax,0xe4cf3ec4
  40e957:	popa   
  40e958:	rcr    DWORD PTR [esi],0x38
  40e95b:	outs   dx,DWORD PTR ds:[esi]
  40e95c:	mov    ebx,0x6cb7625a
  40e961:	scas   eax,DWORD PTR es:[edi]
  40e962:	enter  0xc16f,0xdd
  40e966:	jns    0x40e96d
  40e968:	xlat   BYTE PTR ds:[ebx]
  40e969:	pop    edi
  40e96a:	dec    ebx
  40e96b:	cmp    eax,0x41af594f
  40e970:	std    
  40e971:	popa   
  40e972:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e973:	mov    ch,0xa6
  40e975:	add    ah,dl
  40e977:	mov    bh,0xd6
  40e979:	fimul  WORD PTR [edx+edx*1+0x22428461]
  40e980:	loopne 0x40e99d
  40e982:	sub    eax,0x47e17bca
  40e987:	add    eax,0xd358bffa
  40e98c:	cdq    
  40e98d:	cmp    al,0x0
  40e98f:	jp     0x40e918
  40e991:	retf   
  40e992:	jbe    0x40e99a
  40e994:	and    al,0x39
  40e996:	xchg   esi,eax
  40e997:	lea    edx,[ebx-0x5f]
  40e99a:	imul   esi,DWORD PTR [ebx+0x6d],0x7a
  40e99e:	repz inc ebx
  40e9a0:	mov    ds:0x108e3690,eax
  40e9a5:	jge    0x40e989
  40e9a7:	adc    BYTE PTR [ecx+0x5fbb33ce],bh
  40e9ad:	pop    edi
  40e9ae:	cmc    
  40e9af:	and    eax,0xa26a1d42
  40e9b4:	and    BYTE PTR [eax+eiz*1],cl
  40e9b7:	sub    DWORD PTR [edx+edi*4],ecx
  40e9ba:	pop    ss
  40e9bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9bc:	xchg   ebp,eax
  40e9bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9be:	adc    al,0x83
  40e9c0:	dec    esp
  40e9c1:	cmp    DWORD PTR [edx+0x23],0xffffff9d
  40e9c5:	mov    cl,0x61
  40e9c7:	cmp    eax,DWORD PTR [edi-0x24ee0290]
  40e9cd:	jo     0x40e97e
  40e9cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9d0:	fsub   st(0),st
  40e9d2:	sahf   
  40e9d3:	adc    cl,BYTE PTR [ebx]
  40e9d5:	out    0x84,eax
  40e9d7:	pushf  
  40e9d8:	xchg   edx,eax
  40e9d9:	jecxz  0x40e988
  40e9db:	icebp  
  40e9dc:	mov    esp,DWORD PTR [bx-0x6b]
  40e9e0:	cmp    al,0xb9
  40e9e2:	mov    ch,0x83
  40e9e4:	scas   eax,DWORD PTR es:[edi]
  40e9e5:	int    0x7e
  40e9e7:	dec    esp
  40e9e8:	cmp    dl,ah
  40e9ea:	das    
  40e9eb:	push   edx
  40e9ec:	xlat   BYTE PTR ds:[ebx]
  40e9ed:	inc    esp
  40e9ee:	adc    ah,BYTE PTR [eax]
  40e9f0:	sub    BYTE PTR [esp+edi*4+0x57],bh
  40e9f4:	(bad)  
  40e9f5:	sub    al,0xd8
  40e9f7:	pop    ecx
  40e9f8:	jo     0x40e994
  40e9fa:	pop    ebx
  40e9fb:	ds xchg ebp,eax
  40e9fd:	rcl    DWORD PTR [edx-0x70],cl
  40ea00:	jnp    0x40e9ad
  40ea02:	dec    esp
  40ea03:	lods   al,BYTE PTR ds:[esi]
  40ea04:	dec    edx
  40ea05:	pop    ss
  40ea06:	test   BYTE PTR [esi+0x5e6933f4],ch
  40ea0c:	aad    0xcf
  40ea0e:	jne    0x40ea56
  40ea10:	and    al,0x2a
  40ea12:	pop    edi
  40ea13:	sub    ebp,DWORD PTR [ebx]
  40ea15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea16:	fld    DWORD PTR [edx+0x162b0e00]
  40ea1c:	jecxz  0x40ea4d
  40ea1e:	aad    0x4
  40ea20:	jmp    FWORD PTR [edi-0x73]
  40ea23:	mov    dh,0x3
  40ea25:	aam    0x46
  40ea27:	mov    WORD PTR [edi+0x61],cs
  40ea2a:	push   ds
  40ea2b:	xor    eax,0xac411f5f
  40ea30:	xchg   DWORD PTR [esi+0xb],eax
  40ea33:	imul   ebx,DWORD PTR [eax],0xe954550a
  40ea39:	push   ds
  40ea3a:	push   0x87e6fe02
  40ea3f:	repz in eax,0xd4
  40ea42:	stos   DWORD PTR es:[edi],eax
  40ea43:	xchg   esp,eax
  40ea44:	push   esp
  40ea45:	and    cl,bh
  40ea47:	mov    esi,0xb62824bd
  40ea4c:	(bad)  
  40ea4d:	sub    al,0xe3
  40ea4f:	push   esi
  40ea50:	ins    DWORD PTR es:[edi],dx
  40ea51:	push   0xadf9b62b
  40ea56:	shl    BYTE PTR [esi-0x50eb2861],cl
  40ea5c:	aad    0xeb
  40ea5e:	repnz fdivp st(4),st
  40ea61:	pop    edx
  40ea62:	test   BYTE PTR [eax+ecx*4+0xad60fc],dl
  40ea69:	int3   
  40ea6a:	or     ch,cl
  40ea6c:	lods   eax,DWORD PTR ds:[esi]
  40ea6d:	jbe    0x40ea67
  40ea6f:	test   DWORD PTR [ebx+0x75bd1b5d],edi
  40ea75:	push   cs
  40ea76:	dec    ebx
  40ea77:	mov    ds:0xfd836ba7,al
  40ea7c:	cmp    al,0xf0
  40ea7e:	lds    esp,FWORD PTR [edx-0x4ff70af9]
  40ea84:	sbb    eax,0x5aad8033
  40ea89:	pop    edx
  40ea8a:	test   BYTE PTR [edi-0x49],bl
  40ea8d:	xchg   esi,eax
  40ea8e:	loopne 0x40ea37
  40ea90:	and    edx,DWORD PTR ds:0x33bc87b6
  40ea96:	xchg   esp,eax
  40ea97:	bound  eax,QWORD PTR [ecx-0x1f58370d]
  40ea9d:	mov    ds:0x1ca161cb,eax
  40eaa2:	push   cs
  40eaa3:	sub    eax,0x82806d7
  40eaa8:	(bad)  
  40eaa9:	(bad)  
  40eaab:	mov    DWORD PTR [esi+0x4488bfe2],edi
  40eab1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eab2:	ss mov esp,0xd9bd2030
  40eab8:	das    
  40eab9:	out    dx,eax
  40eaba:	idiv   DWORD PTR [edi+ebp*8]
  40eabd:	out    0x5,eax
  40eabf:	pop    eax
  40eac0:	aam    0x43
  40eac2:	in     eax,0x2a
  40eac4:	ss xchg edx,esi
  40eac7:	xor    al,0x71
  40eac9:	jmp    0x40ea86
  40eacb:	xchg   edx,eax
  40eacc:	pop    ebp
  40eacd:	stc    
  40eace:	push   eax
  40eacf:	retf   0x2dfe
  40ead2:	das    
  40ead3:	leave  
  40ead4:	ret    
  40ead5:	pop    edx
  40ead6:	sub    bl,BYTE PTR [edi+0x3a]
  40ead9:	inc    edx
  40eada:	xchg   esp,eax
  40eadb:	(bad)  
  40eadc:	jmp    0x40ea8b
  40eade:	sahf   
  40eadf:	mul    DWORD PTR ds:0x1b692219
  40eae5:	mov    ebx,DWORD PTR ds:0x6f7ad94a
  40eaeb:	dec    esi
  40eaec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eaed:	stc    
  40eaee:	push   ebp
  40eaef:	xor    al,0xbb
  40eaf1:	ss stos DWORD PTR es:[edi],eax
  40eaf3:	scas   eax,DWORD PTR es:[edi]
  40eaf4:	shl    DWORD PTR [ebx-0x48f1c962],1
  40eafa:	stos   DWORD PTR es:[edi],eax
  40eafb:	jo     0x40eb26
  40eafd:	mov    ds:0xa9f18eb6,al
  40eb02:	scas   eax,DWORD PTR es:[edi]
  40eb03:	loope  0x40eaaf
  40eb05:	mov    ebp,0x47e090a2
  40eb0a:	aam    0x36
  40eb0c:	repz xor ax,cx
  40eb10:	loope  0x40ead5
  40eb12:	push   esi
  40eb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eb14:	mov    ah,0xae
  40eb16:	pop    ebp
  40eb17:	cmp    dl,bh
  40eb19:	inc    ebp
  40eb1a:	sub    cl,bl
  40eb1c:	jnp    0x40eafc
  40eb1e:	ja     0x40eb14
  40eb20:	pop    esi
  40eb21:	push   esp
  40eb22:	loop   0x40eaf7
  40eb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb25:	inc    ebp
  40eb26:	push   esp
  40eb27:	in     eax,0x5c
  40eb29:	aaa    
  40eb2a:	pop    ebp
  40eb2b:	push   0x2e7c2577
  40eb30:	retf   
  40eb31:	loope  0x40eb62
  40eb33:	adc    al,0xe4
  40eb35:	push   cs
  40eb36:	fistp  WORD PTR [ecx-0x65]
  40eb39:	mov    BYTE PTR [ecx-0x6a],0x33
  40eb3d:	sbb    al,0x37
  40eb3f:	jo     0x40eaee
  40eb41:	xchg   ebp,eax
  40eb42:	jae    0x40eb76
  40eb44:	popa   
  40eb45:	ja     0x40eb9b
  40eb47:	das    
  40eb48:	xchg   ebp,eax
  40eb49:	mov    dl,0x97
  40eb4b:	ja     0x40eb6c
  40eb4d:	pop    ebx
  40eb4e:	jmp    0x83aae27d
  40eb53:	mov    bh,0x18
  40eb55:	scas   al,BYTE PTR es:[edi]
  40eb56:	in     al,dx
  40eb57:	mul    DWORD PTR [eax-0x2a]
  40eb5a:	scas   eax,DWORD PTR es:[edi]
  40eb5b:	call   0x73d4:0x6ccb2a67
  40eb62:	xchg   ebp,eax
  40eb63:	repz mov esp,0x532f7d73
  40eb69:	imul   ebp,DWORD PTR [edi-0x55dceb87],0xd0eaa3fa
  40eb73:	and    BYTE PTR [ebx+0x2666d824],cl
  40eb79:	cli    
  40eb7a:	fsubrp st(4),st
  40eb7c:	ret    
  40eb7d:	iret   
  40eb7e:	or     al,0xcc
  40eb80:	pop    esi
  40eb81:	ins    BYTE PTR es:[edi],dx
  40eb82:	ds mov ebx,0x8703616d
  40eb88:	sub    al,0xc0
  40eb8a:	jo     0x40eb3b
  40eb8c:	sub    DWORD PTR [edi],ebp
  40eb8e:	call   0xda62:0x423d6b28
  40eb95:	adc    BYTE PTR [ecx+ecx*4+0x38ceacff],ch
  40eb9c:	inc    ebp
  40eb9d:	adc    ebx,DWORD PTR [esi]
  40eb9f:	xchg   ebp,eax
  40eba0:	cmp    al,0x1a
  40eba2:	mov    bh,0xdb
  40eba4:	mov    WORD PTR [esi],fs
  40eba6:	fmul   st(1),st
  40eba8:	mov    al,0xfa
  40ebaa:	imul   ecx,DWORD PTR [ecx],0xfffffff5
  40ebad:	push   ds
  40ebae:	ins    DWORD PTR es:[edi],dx
  40ebaf:	leave  
  40ebb0:	jno    0x40eba9
  40ebb2:	pushf  
  40ebb3:	les    ecx,FWORD PTR [eax-0x6dee0a0d]
  40ebb9:	nop
  40ebba:	and    al,0xe9
  40ebbc:	and    ebp,eax
  40ebbe:	arpl   WORD PTR [edx],cx
  40ebc0:	mov    ecx,0x7ce13174
  40ebc5:	cmp    eax,0x7fbd187c
  40ebca:	ins    BYTE PTR es:[edi],dx
  40ebcb:	sbb    esi,DWORD PTR [ebx]
  40ebcd:	enter  0x7f4a,0xd0
  40ebd1:	mov    esp,0x2a6b1bd5
  40ebd6:	adc    bh,bh
  40ebd8:	sbb    al,0x93
  40ebda:	mov    edx,0x5ccb36cf
  40ebdf:	or     edi,DWORD PTR [eax]
  40ebe1:	jne    0x40ec4b
  40ebe3:	pop    edi
  40ebe4:	jbe    0x40eb7a
  40ebe6:	jmp    0x40ebac
  40ebe8:	std    
  40ebe9:	cmp    DWORD PTR es:[edi-0x6c3a83a7],0x27
  40ebf1:	cmp    esi,DWORD PTR [edi+ecx*1-0x36]
  40ebf5:	cs ja  0x40ebc5
  40ebf8:	and    eax,DWORD PTR [ebx+0xf]
  40ebfb:	jle    0x40ec6a
  40ebfd:	ror    DWORD PTR [eax+0x2223da55],0x6
  40ec04:	sbb    BYTE PTR [ebx],bl
  40ec06:	lods   eax,DWORD PTR ds:[esi]
  40ec07:	scas   al,BYTE PTR es:[edi]
  40ec08:	retf   
  40ec09:	adc    edx,DWORD PTR [edi-0x1f]
  40ec0c:	in     al,dx
  40ec0d:	fwait
  40ec0e:	repnz (bad) 
  40ec10:	addr16 pop ebp
  40ec12:	xchg   DWORD PTR [edx+ebp*2+0xcb221ea],ebx
  40ec19:	cmp    BYTE PTR [edx-0x1e],dh
  40ec1c:	push   cs
  40ec1d:	add    edx,ebx
  40ec1f:	push   edi
  40ec20:	cld    
  40ec21:	(bad)  
  40ec22:	out    dx,eax
  40ec23:	(bad)  
  40ec24:	adc    cl,al
  40ec26:	add    eax,0x382d299a
  40ec2b:	mov    ds:0xf2f5a9e6,eax
  40ec30:	in     al,0x2c
  40ec32:	imul   edx,DWORD PTR [ecx+0x68],0x30aef915
  40ec39:	push   ds
  40ec3a:	sub    DWORD PTR [ebx],edi
  40ec3c:	inc    esi
  40ec3d:	jge    0x40ebde
  40ec3f:	cdq    
  40ec40:	pop    ss
  40ec41:	sbb    DWORD PTR [ebx+0xbd83d27],edi
  40ec47:	mov    dl,BYTE PTR [ecx+eiz*8-0x22838d46]
  40ec4e:	sar    DWORD PTR [esi-0x7025a86a],1
  40ec54:	pop    edi
  40ec55:	imul   esp,edx,0xffffff9f
  40ec58:	bound  ebp,QWORD PTR [edx+0x22]
  40ec5b:	shl    DWORD PTR [eax],1
  40ec5d:	in     eax,0x30
  40ec5f:	mov    esp,0xba028ee8
  40ec64:	jns    0x40ec47
  40ec66:	out    0xb9,al
  40ec68:	imul   esi,DWORD PTR [ebx],0x9517e673
  40ec6e:	sbb    edi,DWORD PTR ds:0x42814457
  40ec74:	call   0xb1f044cf
  40ec79:	nop
  40ec7a:	daa    
  40ec7b:	mov    edx,0xec3ca303
  40ec80:	shl    DWORD PTR [ecx+eax*1-0x3300f51e],cl
  40ec87:	in     al,0x6f
  40ec89:	loopne 0x40ecf5
  40ec8b:	sub    DWORD PTR ds:0xdb07318b,edi
  40ec91:	push   eax
  40ec92:	mov    bl,0x75
  40ec94:	fisub  DWORD PTR [edi]
  40ec96:	cwde   
  40ec97:	int    0x75
  40ec99:	and    al,0x33
  40ec9b:	xchg   DWORD PTR [edx+0x3b5b36bc],ebx
  40eca1:	retf   
  40eca2:	pop    edi
  40eca3:	bnd js 0x40ec28
  40eca6:	mov    esi,0x4282b106
  40ecab:	shr    DWORD PTR [esi+0x6c],1
  40ecae:	cmc    
  40ecaf:	pop    ebx
  40ecb0:	out    0xd3,eax
  40ecb2:	lds    edi,FWORD PTR [eax+0x1]
  40ecb5:	sbb    BYTE PTR [edx-0x19e94b01],al
  40ecbb:	or     BYTE PTR [edx],dl
  40ecbd:	mov    esp,0x1162563d
  40ecc2:	std    
  40ecc3:	mov    dh,0xfc
  40ecc5:	sub    ebp,edi
  40ecc7:	push   es
  40ecc8:	sbb    edi,ebx
  40ecca:	arpl   si,si
  40eccc:	sbb    al,0x9e
  40ecce:	jmp    0x6938525f
  40ecd3:	jmp    0x40eca5
  40ecd5:	sub    dl,BYTE PTR [edi]
  40ecd7:	pop    eax
  40ecd8:	fdiv   QWORD PTR [ebx+0x1a9b4962]
  40ecde:	or     al,0x73
  40ece0:	fcmovnbe st,st(7)
  40ece2:	adc    edi,DWORD PTR [esi-0x4b80e39a]
  40ece8:	jecxz  0x40ecb4
  40ecea:	xor    dl,BYTE PTR [eax]
  40ecec:	xor    al,BYTE PTR [edx+0x12]
  40ecef:	jne    0x40ec7c
  40ecf1:	ficom  WORD PTR [ecx+0x4f]
  40ecf4:	lds    esi,FWORD PTR [ebp+0x7a]
  40ecf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecf8:	cwde   
  40ecf9:	int3   
  40ecfa:	jmp    0x64e3:0xfc00a7ef
  40ed01:	gs fs xor al,0x6d
  40ed05:	ins    BYTE PTR es:[edi],dx
  40ed06:	mov    ds:0x3535002f,al
  40ed0c:	aas    
  40ed0d:	ins    BYTE PTR es:[edi],dx
  40ed0e:	inc    ebp
  40ed0f:	xchg   esi,eax
  40ed10:	stos   BYTE PTR es:[edi],al
  40ed11:	pushf  
  40ed12:	in     eax,0xe9
  40ed14:	les    ecx,FWORD PTR [eax+edi*4]
  40ed17:	shr    BYTE PTR [esi+0x48d45708],0x42
  40ed1e:	outs   dx,DWORD PTR ds:[esi]
  40ed1f:	or     al,0x83
  40ed21:	jmp    0x2cbd:0xb7bf07fb
  40ed28:	daa    
  40ed29:	shl    DWORD PTR [edx+edi*2],cl
  40ed2c:	push   es
  40ed2d:	push   ebp
  40ed2e:	jl     0x40ecf6
  40ed30:	cmp    DWORD PTR [edi+0x39405abc],edx
  40ed36:	mov    DWORD PTR [eax+esi*2],eax
  40ed39:	push   ss
  40ed3a:	gs sar esp,cl
  40ed3d:	stos   DWORD PTR es:[edi],eax
  40ed3e:	mov    bh,0x2c
  40ed40:	or     bh,dl
  40ed42:	fldcw  WORD PTR [edi+0x6d]
  40ed45:	arpl   WORD PTR [eax+0x506cd110],dx
  40ed4b:	sahf   
  40ed4c:	out    0xe4,eax
  40ed4e:	je     0x40ed43
  40ed50:	sbb    bh,0x63
  40ed53:	lock icebp 
  40ed55:	in     al,dx
  40ed56:	xchg   edi,eax
  40ed57:	ja     0x40ed42
  40ed59:	ja     0x40ed19
  40ed5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed5c:	sbb    eax,0x8fe6eedf
  40ed61:	inc    eax
  40ed62:	call   0x1fc92c06
  40ed67:	stos   DWORD PTR es:[edi],eax
  40ed68:	leave  
  40ed69:	and    ecx,DWORD PTR [ebp+0x35]
  40ed6c:	pop    edx
  40ed6d:	in     al,dx
  40ed6e:	or     dh,BYTE PTR [ecx-0x4264de76]
  40ed74:	pop    es
  40ed75:	sbb    al,0xb3
  40ed77:	mov    al,0xd2
  40ed79:	lods   eax,DWORD PTR ds:[esi]
  40ed7a:	stc    
  40ed7b:	cli    
  40ed7c:	pop    ecx
  40ed7d:	and    ch,BYTE PTR [edi-0x6ff37fbc]
  40ed83:	pop    ebx
  40ed84:	daa    
  40ed85:	clc    
  40ed86:	sbb    dl,bh
  40ed88:	dec    esp
  40ed89:	ja     0x40ed83
  40ed8b:	mov    esi,0x389fbefe
  40ed90:	and    DWORD PTR [ebx],edi
  40ed92:	or     al,0xec
  40ed94:	mov    dl,0xb0
  40ed96:	push   esp
  40ed97:	pop    esp
  40ed98:	and    BYTE PTR [eax-0x782d832],0x37
  40ed9f:	js     0x40edd7
  40eda1:	pop    esi
  40eda2:	mov    bh,BYTE PTR [ebx]
  40eda4:	jge    0x40ed73
  40eda6:	sbb    BYTE PTR gs:[eax-0x34],dh
  40edaa:	push   es
  40edab:	add    ebx,DWORD PTR [ecx-0x4d]
  40edae:	xor    edx,eax
  40edb0:	mov    al,0xde
  40edb2:	push   cs
  40edb3:	(bad)  
  40edb4:	(bad)  [edi-0x77fd7fe9]
  40edba:	out    dx,eax
  40edbb:	push   ebx
  40edbc:	cmp    bh,bl
  40edbe:	push   esi
  40edbf:	mov    ss,WORD PTR [eax]
  40edc1:	in     eax,0x46
  40edc3:	dec    edi
  40edc4:	les    esi,FWORD PTR [esi+0x4bdab112]
  40edca:	or     al,0xab
  40edcc:	adc    eax,0x8e676283
  40edd1:	shl    BYTE PTR cs:[ebx+eax*8],cl
  40edd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40edd6:	and    cl,BYTE PTR [eax+eiz*2]
  40edd9:	mov    ah,0x87
  40eddb:	jmp    0xbded3cf1
  40ede0:	xor    esi,DWORD PTR [ebx+0x3d]
  40ede3:	and    al,0x7a
  40ede5:	out    0xdd,eax
  40ede7:	enter  0xaac5,0x72
  40edeb:	jno    0x40ed94
  40eded:	icebp  
  40edee:	or     edi,DWORD PTR ds:0xde383362
  40edf4:	or     al,0x83
  40edf6:	in     al,0x3f
  40edf8:	je     0x40ee2b
  40edfa:	or     al,0x23
  40edfc:	rol    DWORD PTR [ebp-0x52615484],0xbe
  40ee03:	fdiv   QWORD PTR [ebp+esi*8-0x5d3c8a95]
  40ee0a:	sahf   
  40ee0b:	jmp    DWORD PTR [edi+ecx*1-0x70]
  40ee0f:	xchg   edi,esi
  40ee11:	cmp    BYTE PTR [edi-0x446e4ce9],0xab
  40ee18:	add    edi,DWORD PTR [edi]
  40ee1a:	out    0xac,eax
  40ee1c:	mov    ds:0xe7981bcd,eax
  40ee21:	mov    esi,0xbcd2efd3
  40ee26:	xchg   edi,eax
  40ee27:	pop    ebx
  40ee28:	jmp    0xbeaf5144
  40ee2d:	cmp    eax,edi
  40ee2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee31:	push   ss
  40ee32:	aas    
  40ee33:	mov    ds:0xbf5c4f41,eax
  40ee38:	in     eax,0x42
  40ee3a:	(bad)  
  40ee3b:	std    
  40ee3c:	inc    eax
  40ee3d:	(bad)  
  40ee3e:	out    dx,eax
  40ee3f:	mov    eax,0x89a5270b
  40ee44:	mov    esi,0x165a67cc
  40ee49:	cwde   
  40ee4a:	cdq    
  40ee4b:	jae    0x40edd8
  40ee4d:	xor    BYTE PTR [ebp-0x76bd625f],ah
  40ee53:	pop    eax
  40ee54:	sbb    al,0x2b
  40ee56:	lods   al,BYTE PTR ds:[esi]
  40ee57:	push   cs
  40ee58:	and    al,0x21
  40ee5a:	retf   0xf7b5
  40ee5d:	jp     0x40ee34
  40ee5f:	and    al,0x8d
  40ee61:	sub    DWORD PTR ds:0xe5909232,esp
  40ee67:	mov    eax,ebx
  40ee69:	(bad)  
  40ee6a:	gs lock pop edi
  40ee6d:	jmp    0x1412:0x3abe9644
  40ee74:	push   0xffffffb4
  40ee76:	cld    
  40ee77:	adc    ebp,DWORD PTR [ecx]
  40ee79:	mov    bh,0xa3
  40ee7b:	rol    BYTE PTR [ecx-0xa],1
  40ee7e:	ja     0x40eeda
  40ee80:	scas   al,BYTE PTR es:[edi]
  40ee81:	arpl   sp,bp
  40ee83:	outs   dx,BYTE PTR ds:[esi]
  40ee84:	inc    ecx
  40ee85:	adc    al,BYTE PTR [esi-0x29d34cf5]
  40ee8b:	jecxz  0x40eed7
  40ee8d:	push   esi
  40ee8e:	imul   edi,eax,0xffffff93
  40ee91:	retf   0x38e
  40ee94:	addr16 jo 0x40ee35
  40ee97:	fsubp  st(6),st
  40ee99:	sar    BYTE PTR ds:0x40bfd2f4,0x63
  40eea0:	pop    esi
  40eea1:	and    BYTE PTR [ebx],bl
  40eea3:	(bad)  [edi+0x59]
  40eea6:	or     esp,DWORD PTR [ecx+0x31]
  40eea9:	fsubr  QWORD PTR [esi+0x1c]
  40eeac:	pop    esi
  40eead:	push   0x3b47ad9b
  40eeb2:	mov    edi,DWORD PTR [edi]
  40eeb4:	jno    0x40ef2e
  40eeb6:	adc    ebx,eax
  40eeb8:	call   0x9f584235
  40eebd:	mov    cl,0xf7
  40eebf:	mov    ah,ah
  40eec1:	or     DWORD PTR [ecx-0x19746f3],esp
  40eec7:	(bad)  
  40eec9:	mov    DWORD PTR [ebx-0xd31a690],ebp
  40eecf:	enter  0x8049,0x19
  40eed3:	arpl   WORD PTR [ecx-0x4f],bp
  40eed6:	push   esp
  40eed7:	push   ecx
  40eed8:	dec    esp
  40eed9:	cs inc ecx
  40eedb:	mov    al,0x52
  40eedd:	and    ecx,DWORD PTR es:[edi-0x48225a30]
  40eee4:	outs   dx,DWORD PTR ds:[esi]
  40eee5:	test   eax,0xc96b2f4d
  40eeea:	sbb    eax,0x5e20ba7e
  40eeef:	jmp    0x697b9fe7
  40eef4:	sbb    al,0x65
  40eef6:	mov    bh,0x88
  40eef8:	mov    ecx,0x61ef713f
  40eefd:	or     edi,DWORD PTR [esi]
  40eeff:	icebp  
  40ef00:	call   0xbfa3d861
  40ef05:	imul   eax,DWORD PTR [ebx-0x26370a37],0xdbddbd5d
  40ef0f:	stos   DWORD PTR es:[edi],eax
  40ef10:	xlat   BYTE PTR ds:[ebx]
  40ef11:	cmp    edx,esp
  40ef13:	lock aas 
  40ef15:	push   ds
  40ef16:	dec    esp
  40ef17:	adc    BYTE PTR ds:0x45829ebd,cl
  40ef1d:	pop    ebx
  40ef1e:	cmc    
  40ef1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef20:	std    
  40ef21:	sbb    edi,DWORD PTR [edi]
  40ef23:	scas   eax,DWORD PTR es:[edi]
  40ef24:	cmc    
  40ef25:	dec    edi
  40ef26:	lahf   
  40ef27:	xor    eax,DWORD PTR [ecx+0x4e]
  40ef2a:	rcr    DWORD PTR [ebx+0x60],0xf2
  40ef2e:	mov    bl,0xea
  40ef30:	jmp    FWORD PTR [edi]
  40ef32:	sar    BYTE PTR [ebp+0x31edf6df],cl
  40ef38:	scas   eax,DWORD PTR es:[edi]
  40ef39:	icebp  
  40ef3a:	push   0xffffff8a
  40ef3c:	es in  eax,dx
  40ef3e:	enter  0x4013,0x9e
  40ef42:	outs   dx,BYTE PTR ds:[esi]
  40ef43:	xchg   edi,eax
  40ef44:	sar    DWORD PTR fs:[ebx-0x11],0xb
  40ef49:	int    0xe4
  40ef4b:	call   0xbe6cdb66
  40ef50:	imul   eax,DWORD PTR ds:0xe55b2cd1,0x9f6f991f
  40ef5a:	test   al,0x4b
  40ef5c:	(bad)  
  40ef5e:	imul   esi,DWORD PTR [edx],0x63
  40ef61:	(bad)  
  40ef63:	ss stos BYTE PTR es:[edi],al
  40ef65:	hlt    
  40ef66:	lea    ecx,[eax]
  40ef68:	add    eax,0x5a25fd5a
  40ef6d:	je     0x40efa4
  40ef6f:	add    ch,BYTE PTR [edx+0x11]
  40ef72:	int    0xc3
  40ef74:	push   ebp
  40ef75:	(bad)  
  40ef76:	stc    
  40ef77:	lea    edx,[ebp+ebx*8+0x1f]
  40ef7b:	test   al,0xe7
  40ef7d:	pop    ecx
  40ef7e:	outs   dx,BYTE PTR ds:[esi]
  40ef7f:	std    
  40ef80:	mov    esp,0xb2f14f72
  40ef85:	and    DWORD PTR [edi],ecx
  40ef87:	(bad)  
  40ef88:	call   0xefdc10ad
  40ef8d:	and    BYTE PTR [edx+0x5b],bl
  40ef90:	push   0xffffffc3
  40ef92:	in     eax,0x27
  40ef94:	pop    edx
  40ef95:	lods   al,BYTE PTR ds:[esi]
  40ef96:	jne    0x40ef93
  40ef98:	repnz out dx,al
  40ef9a:	cwde   
  40ef9b:	lods   al,BYTE PTR ds:[esi]
  40ef9c:	push   ds
  40ef9d:	test   BYTE PTR [edx-0x60bbb3a7],cl
  40efa3:	cmp    al,0xb0
  40efa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efa6:	push   esi
  40efa7:	fcomp  QWORD PTR [edx+0x5f]
  40efaa:	popf   
  40efab:	int3   
  40efac:	hlt    
  40efad:	dec    esp
  40efae:	mov    edx,0x46fa586e
  40efb3:	cld    
  40efb4:	loopne 0x40efb0
  40efb6:	in     al,0xea
  40efb8:	stc    
  40efb9:	inc    edx
  40efba:	adc    BYTE PTR [ecx],bh
  40efbc:	push   0x28816433
  40efc1:	sahf   
  40efc2:	pushf  
  40efc3:	int    0x63
  40efc5:	sbb    eax,0xa081d1e1
  40efca:	aas    
  40efcb:	dec    ecx
  40efcc:	push   esp
  40efcd:	jne    0x40ef9a
  40efcf:	sbb    al,0xdf
  40efd1:	mov    eax,0xaf5199f7
  40efd6:	daa    
  40efd7:	das    
  40efd8:	int3   
  40efd9:	push   0xb2674d7a
  40efde:	sub    DWORD PTR [eax+eiz*1+0x39],edx
  40efe2:	xchg   BYTE PTR [edx+eiz*8],ch
  40efe5:	pop    ss
  40efe6:	mov    esi,0xf13381a3
  40efeb:	push   esp
  40efec:	lods   eax,DWORD PTR ds:[esi]
  40efed:	shl    DWORD PTR [esi-0x1e04876d],0x8f
  40eff4:	jmp    0x6cfb:0x5ebcc560
  40effb:	xchg   esi,eax
  40effc:	int    0x3a
  40effe:	and    eax,0xbb3c9e04
  40f003:	mov    dl,0xa6
  40f005:	scas   al,BYTE PTR es:[edi]
  40f006:	aaa    
  40f007:	mov    BYTE PTR [edx],dh
  40f009:	inc    eax
  40f00a:	mov    al,0x68
  40f00c:	pop    ecx
  40f00d:	pop    ds
  40f00e:	or     al,0x30
  40f010:	pusha  
  40f011:	jmp    0x40eff2
  40f013:	test   edx,edx
  40f015:	ds fs xor eax,0xf29670e2
  40f01c:	stos   BYTE PTR es:[edi],al
  40f01d:	arpl   bx,ax
  40f01f:	mov    ?,WORD PTR [edx+ebx*1+0x22959d76]
  40f026:	retf   
  40f027:	cld    
  40f028:	jmp    0x19d4b9b8
  40f02d:	fstp   QWORD PTR [edx+0x767ea73b]
  40f033:	inc    esp
  40f034:	or     DWORD PTR [eax-0x565c71af],edi
  40f03a:	imul   edi,DWORD PTR [eax-0x210fa1a2],0x67df0390
  40f044:	out    0xce,eax
  40f046:	les    ebx,FWORD PTR [ebp-0x8]
  40f049:	jo     0x40f0a9
  40f04b:	jmp    0x61e4:0x9c01feec
  40f052:	jle    0x40f002
  40f054:	mov    al,BYTE PTR [ecx-0x19]
  40f057:	into   
  40f058:	(bad)  
  40f059:	jmp    0x11592798
  40f05e:	test   DWORD PTR ds:0x53002ae2,esp
  40f064:	ror    DWORD PTR [edi],0xdc
  40f067:	inc    ebp
  40f068:	ds test eax,0x1baf85ab
  40f06f:	aaa    
  40f070:	sfence 
  40f073:	fnclex 
  40f075:	mov    eax,0x1970a740
  40f07a:	mov    eax,0xf0ed641e
  40f07f:	cmp    bh,ah
  40f081:	popf   
  40f082:	inc    esp
  40f083:	js     0x40f05a
  40f085:	push   ebx
  40f086:	xchg   esp,esp
  40f088:	jo     0x40f06b
  40f08a:	(bad)  
  40f08c:	outs   dx,BYTE PTR ds:[esi]
  40f08d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f08e:	push   ebx
  40f08f:	adc    ebp,ecx
  40f091:	dec    edx
  40f092:	cld    
  40f093:	and    BYTE PTR [eax+eax*8+0x25],ch
  40f097:	push   0x1e
  40f099:	cmc    
  40f09a:	les    ebp,FWORD PTR [edx+0x18]
  40f09d:	mov    ds:0x3fb25127,al
  40f0a2:	mov    al,0xb6
  40f0a4:	lods   eax,DWORD PTR ds:[esi]
  40f0a5:	es mov ebx,0xe468a5e7
  40f0ab:	clc    
  40f0ac:	retf   
  40f0ad:	add    BYTE PTR [esi+0x3f],al
  40f0b0:	sub    esi,edx
  40f0b2:	adc    edx,ebp
  40f0b4:	mov    cl,0xaa
  40f0b6:	rcl    BYTE PTR [ecx-0x55],1
  40f0b9:	mov    esp,0x1f59a5b2
  40f0be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f0bf:	cmp    eax,0x83d99719
  40f0c4:	mov    ds:0xec050712,al
  40f0c9:	push   es
  40f0ca:	icebp  
  40f0cb:	jnp    0x40f0dc
  40f0cd:	cs pop ebp
  40f0cf:	mov    DWORD PTR [esi],ebp
  40f0d1:	adc    eax,0x9d4052
  40f0d6:	push   0xce901135
  40f0db:	mov    dh,0x62
  40f0dd:	xor    ecx,ebx
  40f0df:	mov    bh,0x12
  40f0e1:	stos   BYTE PTR es:[edi],al
  40f0e2:	mov    ebp,0xa3ddc5cd
  40f0e7:	std    
  40f0e8:	xchg   edx,eax
  40f0e9:	sub    eax,0x91ebd168
  40f0ee:	sbb    eax,0xddeded1
  40f0f3:	inc    eax
  40f0f4:	xchg   esp,eax
  40f0f5:	sti    
  40f0f6:	cmp    esi,DWORD PTR [ebp+ebx*4+0x7bd6247c]
  40f0fd:	(bad)  
  40f0fe:	in     eax,dx
  40f0ff:	sub    eax,0x15f208a8
  40f104:	cmp    ecx,ebx
  40f106:	xor    ah,BYTE PTR [ebp+0x2d]
  40f109:	sub    eax,DWORD PTR [edi+0x69]
  40f10c:	cwde   
  40f10d:	cdq    
  40f10e:	sub    DWORD PTR [edi+esi*4+0x3a0d966b],esi
  40f115:	push   esi
  40f116:	bound  eax,QWORD PTR [edi]
  40f118:	sub    cl,BYTE PTR [ecx-0x4a]
  40f11b:	pushf  
  40f11c:	mov    dl,0xea
  40f11e:	fsub   QWORD PTR [eax+0x6d]
  40f121:	popa   
  40f122:	ins    BYTE PTR es:[edi],dx
  40f123:	test   cl,ah
  40f125:	pop    es
  40f126:	push   ecx
  40f127:	rcr    BYTE PTR [ebx],cl
  40f129:	fdiv   DWORD PTR [edi-0x16]
  40f12c:	or     ah,BYTE PTR [esi+0x16371a89]
  40f132:	sar    BYTE PTR [ebx+0x72],0xa4
  40f136:	inc    ebp
  40f137:	mov    eax,ds:0x9adce7a4
  40f13c:	jmp    0xe7e2:0x5bb90a17
  40f143:	xor    al,bl
  40f145:	sti    
  40f146:	adc    DWORD PTR [esi+0x7b331f94],esi
  40f14c:	cmp    eax,0xa013aefb
  40f152:	in     al,0xf
  40f154:	jno    0x40f1be
  40f156:	stos   BYTE PTR es:[edi],al
  40f157:	clc    
  40f158:	push   esp
  40f159:	mov    edi,0x8f65484c
  40f15e:	push   cs
  40f15f:	call   0x6cede8c4
  40f164:	loope  0x40f103
  40f166:	cdq    
  40f167:	xor    eax,0x61f30d8b
  40f16c:	mov    edi,0x368f6e02
  40f171:	cmc    
  40f172:	xchg   esi,eax
  40f173:	jmp    0xb9411ffc
  40f178:	popa   
  40f179:	xor    eax,0xa33cd8ea
  40f17e:	pop    esp
  40f17f:	idiv   BYTE PTR [ecx-0x3c4d8a6c]
  40f185:	and    al,0xba
  40f187:	stc    
  40f188:	push   0x951ed6c1
  40f18d:	xchg   ecx,eax
  40f18e:	push   ss
  40f18f:	xchg   ebp,eax
  40f190:	and    eax,0xa2826220
  40f195:	push   edi
  40f196:	mov    dl,0xd1
  40f198:	les    ebx,FWORD PTR [ebx-0x34a96b5]
  40f19e:	xor    eax,0x482901c9
  40f1a3:	lahf   
  40f1a4:	fisubr WORD PTR [eax-0x10cdbcaf]
  40f1aa:	inc    ecx
  40f1ab:	and    DWORD PTR [ecx+eax*2+0xe],0x97245264
  40f1b3:	add    bl,BYTE PTR [ebx+edx*8]
  40f1b6:	test   DWORD PTR [ebx],eax
  40f1b8:	mov    ebx,0x7e7dc780
  40f1bd:	xchg   esp,eax
  40f1be:	jecxz  0x40f222
  40f1c0:	stos   BYTE PTR es:[edi],al
  40f1c1:	cmp    ebp,DWORD PTR [ebx]
  40f1c3:	loopne 0x40f14b
  40f1c5:	sub    ebx,DWORD PTR [edi-0x45547e76]
  40f1cb:	and    BYTE PTR [eax],ah
  40f1cd:	mov    ds:0xc65e876f,al
  40f1d2:	push   ds
  40f1d3:	and    al,0xe0
  40f1d5:	out    dx,al
  40f1d6:	jl     0x40f224
  40f1d8:	popa   
  40f1d9:	push   eax
  40f1da:	xor    eax,DWORD PTR [ecx]
  40f1dc:	cwde   
  40f1dd:	ins    DWORD PTR es:[edi],dx
  40f1de:	sti    
  40f1df:	inc    esp
  40f1e0:	adc    esp,DWORD PTR [edx-0x70]
  40f1e3:	jmp    0x40f1a6
  40f1e5:	dec    edi
  40f1e6:	fs xchg edx,eax
  40f1e8:	clc    
  40f1e9:	add    DWORD PTR [eax-0x40],edx
  40f1ec:	sbb    ch,BYTE PTR [edi]
  40f1ee:	test   al,0x34
  40f1f0:	lahf   
  40f1f1:	and    esi,DWORD PTR [edi-0x63e1989a]
  40f1f7:	outs   dx,DWORD PTR ds:[esi]
  40f1f8:	mov    eax,0x3f9b7403
  40f1fd:	dec    esi
  40f1fe:	xchg   edx,eax
  40f1ff:	rol    ebp,1
  40f201:	push   0x17
  40f203:	pop    edi
  40f204:	test   eax,0x3dabb78f
  40f209:	fisub  DWORD PTR ds:0x2b117417
  40f20f:	jo     0x40f1e3
  40f211:	push   ds
  40f212:	rcr    BYTE PTR [ebx-0xadc89c],1
  40f218:	xchg   edi,eax
  40f219:	test   al,0x3f
  40f21b:	imul   esp
  40f21d:	or     al,0xa5
  40f21f:	enter  0x78e4,0x87
  40f223:	(bad)  
  40f224:	cmp    ch,al
  40f226:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f227:	mov    al,ds:0xbf0aa297
  40f22c:	ss dec ecx
  40f22e:	sub    BYTE PTR [esi+0x51cd46f1],0x7f
  40f235:	xlat   BYTE PTR ds:[ebx]
  40f236:	fidivr WORD PTR [edi-0x7df37a98]
  40f23c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f23d:	mov    ?,WORD PTR [edi+ecx*2+0x48]
  40f241:	leave  
  40f242:	loop   0x40f2af
  40f244:	and    edx,ebp
  40f246:	aad    0x62
  40f248:	jo     0x40f2c2
  40f24a:	cmp    dh,bh
  40f24c:	pop    ebp
  40f24d:	std    
  40f24e:	jnp    0x40f2a6
  40f250:	popa   
  40f251:	mov    cl,0xcb
  40f253:	adc    ebx,DWORD PTR [esi]
  40f255:	ss retf 
  40f257:	aaa    
  40f258:	shl    BYTE PTR [edi-0x2d6c5411],0x4
  40f25f:	aam    0xe6
  40f261:	sahf   
  40f262:	sti    
  40f263:	jmp    0x98e31945
  40f268:	and    esp,DWORD PTR [ebx]
  40f26a:	ds pop ds
  40f26c:	or     al,0x22
  40f26e:	pop    ecx
  40f26f:	mov    al,0xcf
  40f271:	in     eax,0xf3
  40f273:	sahf   
  40f274:	jae    0x40f2c7
  40f276:	mov    ds:0x9dec54d8,eax
  40f27b:	mov    eax,ds:0xf0150cf2
  40f280:	push   ds
  40f281:	pop    ecx
  40f282:	push   eax
  40f283:	in     eax,dx
  40f284:	in     eax,0x5c
  40f286:	into   
  40f287:	jbe    0x40f276
  40f289:	ins    DWORD PTR es:[edi],dx
  40f28a:	ja     0x40f272
  40f28c:	aad    0xf9
  40f28e:	push   esp
  40f28f:	and    ah,BYTE PTR [esi]
  40f291:	push   ecx
  40f292:	sbb    al,0x43
  40f294:	jecxz  0x40f2c1
  40f296:	mov    bl,0xd0
  40f298:	mov    eax,ds:0xeb51fde6
  40f29d:	mov    ds:0x2026fec,eax
  40f2a2:	aad    0x7b
  40f2a4:	jl     0x40f291
  40f2a6:	ins    DWORD PTR es:[edi],dx
  40f2a7:	popf   
  40f2a8:	int    0x1e
  40f2aa:	mov    eax,0x58d37820
  40f2af:	jl     0x40f25b
  40f2b1:	adc    eax,0x52c2dd92
  40f2b6:	scas   al,BYTE PTR es:[edi]
  40f2b7:	jne    0x40f23c
  40f2b9:	add    al,0xa3
  40f2bb:	push   ebx
  40f2bc:	or     BYTE PTR [bx+di+0x151e],ah
  40f2c1:	(bad)  
  40f2c2:	call   0x3681:0xda41ec07
  40f2c9:	or     BYTE PTR [ebx+0x49],ch
  40f2cc:	and    eax,DWORD PTR [edx-0x4dab97d3]
  40f2d2:	mov    DWORD PTR [ebx-0x74a2fc26],eax
  40f2d8:	ret    0x6179
  40f2db:	and    dl,al
  40f2dd:	into   
  40f2de:	pop    ds
  40f2df:	int    0x8b
  40f2e1:	sbb    BYTE PTR [ebx+eax*8+0x49344bfb],dh
  40f2e8:	or     eax,0x1e3175d0
  40f2ed:	aaa    
  40f2ee:	adc    eax,DWORD PTR [edi-0x114b44ef]
  40f2f4:	js     0x40f284
  40f2f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2f7:	push   0xc862b7d0
  40f2fc:	xor    DWORD PTR [edi],ebp
  40f2fe:	mov    ds:0x20001da2,eax
  40f303:	or     eax,0xe362572e
  40f308:	xchg   esi,eax
  40f309:	popf   
  40f30a:	arpl   WORD PTR [esi+0x30],si
  40f30d:	retf   
  40f30e:	sub    DWORD PTR [edi],0x2e
  40f311:	mov    ecx,0xc33dad7c
  40f316:	xchg   esp,eax
  40f317:	pop    esi
  40f318:	lea    ebp,[eax]
  40f31a:	int    0xe7
  40f31c:	(bad)
  40f320:	jno    0x40f308
  40f322:	xchg   edx,eax
  40f323:	sub    eax,0xbd190494
  40f328:	xor    BYTE PTR [esi+0x40846d37],0x14
  40f32f:	or     al,0x80
  40f331:	rcl    ecx,0x66
  40f334:	outs   dx,BYTE PTR ds:[esi]
  40f335:	dec    DWORD PTR [ebx]
  40f337:	jle    0x40f388
  40f339:	(bad)  
  40f33a:	jg     0x40f37f
  40f33c:	fs icebp 
  40f33e:	pop    esi
  40f33f:	push   eax
  40f340:	jns    0x40f300
  40f342:	pushf  
  40f343:	and    DWORD PTR [edx],esp
  40f345:	xchg   BYTE PTR [ebp-0x13],cl
  40f348:	aad    0x6b
  40f34a:	mov    esp,0xbb568aed
  40f34f:	and    al,0x39
  40f351:	jge    0x40f35b
  40f353:	je     0x40f30b
  40f355:	and    eax,0xa1fec846
  40f35a:	push   0x73
  40f35c:	or     eax,0x7b971bc2
  40f361:	sub    ebx,edx
  40f363:	and    al,0x28
  40f365:	test   al,0x68
  40f367:	jecxz  0x40f369
  40f369:	jns    0x40f385
  40f36b:	pop    eax
  40f36c:	mov    al,ds:0x38c7e58c
  40f371:	inc    edi
  40f372:	push   0x2608d879
  40f377:	icebp  
  40f378:	lods   al,BYTE PTR ds:[esi]
  40f379:	ja     0x40f3c0
  40f37b:	mov    esi,0xca6b535a
  40f380:	and    eax,0xa0d23d17
  40f385:	int3   
  40f386:	rol    BYTE PTR [ebp+0x1f],1
  40f389:	cmp    al,0x21
  40f38b:	sub    eax,0xbe80b97b
  40f390:	push   ebx
  40f391:	rcr    bh,cl
  40f393:	push   ecx
  40f394:	pop    edx
  40f395:	js     0x40f39c
  40f397:	iret   
  40f398:	jbe    0x40f359
  40f39a:	sti    
  40f39b:	dec    ebp
  40f39c:	pop    ss
  40f39d:	mov    BYTE PTR ds:0x340e22f,bh
  40f3a3:	add    ebp,esi
  40f3a5:	pop    esi
  40f3a6:	xchg   esp,eax
  40f3a7:	arpl   WORD PTR [eax+0x6],bp
  40f3aa:	dec    edx
  40f3ab:	jo     0x40f41e
  40f3ad:	stc    
  40f3ae:	retf   0x4682
  40f3b1:	xchg   esi,eax
  40f3b2:	sbb    eax,0x51b8760d
  40f3b7:	(bad)  
  40f3b8:	jp     0x40f3e3
  40f3ba:	xchg   BYTE PTR [ebx],dl
  40f3bc:	clc    
  40f3bd:	sub    DWORD PTR [ecx+0x53ef68c],0xef8c4667
  40f3c7:	push   edi
  40f3c8:	cmp    dl,BYTE PTR ds:0x1f4930
  40f3ce:	xchg   edx,eax
  40f3cf:	xor    BYTE PTR [ecx],ah
  40f3d1:	push   edi
  40f3d2:	or     al,0x16
  40f3d4:	sbb    dl,BYTE PTR ds:0xd8dc95c2
  40f3da:	out    0x55,al
  40f3dc:	mov    ds:0x96939dc5,eax
  40f3e1:	shl    DWORD PTR [ecx],1
  40f3e3:	out    0x17,eax
  40f3e5:	pop    ds
  40f3e6:	test   al,0xee
  40f3e8:	add    BYTE PTR [ebx-0x6871c2c7],ah
  40f3ee:	bound  esp,QWORD PTR [ecx-0x4ec2de50]
  40f3f4:	inc    ebp
  40f3f5:	je     0x40f3f3
  40f3f7:	pop    ecx
  40f3f8:	stos   DWORD PTR es:[edi],eax
  40f3f9:	retf   
  40f3fa:	outs   dx,DWORD PTR ds:[esi]
  40f3fb:	ds xchg esp,eax
  40f3fd:	pop    ds
  40f3fe:	jmp    0x5bf4:0x7b661c68
  40f405:	mov    ebp,0x8d7d9e8f
  40f40a:	add    BYTE PTR [ecx-0x43],0x68
  40f40e:	lods   al,BYTE PTR ds:[esi]
  40f40f:	jg     0x40f3e7
  40f411:	sub    ch,BYTE PTR [esi-0x36]
  40f414:	repz out 0x5f,eax
  40f417:	dec    ebx
  40f418:	loopne 0x40f3d1
  40f41a:	out    0x17,al
  40f41c:	aad    0x10
  40f41e:	cdq    
  40f41f:	xchg   esi,eax
  40f420:	or     al,0xa5
  40f422:	lods   al,BYTE PTR ds:[esi]
  40f423:	xchg   DWORD PTR [ebx-0x5c71d789],ebp
  40f429:	xchg   edi,eax
  40f42a:	inc    DWORD PTR [edi-0x1ecee132]
  40f430:	(bad)  [eax+0x6b]
  40f433:	emms   
  40f435:	pop    DWORD PTR [edx]
  40f437:	lods   al,BYTE PTR ds:[esi]
  40f438:	rcl    BYTE PTR [ecx-0x682fe9cc],cl
  40f43e:	inc    ebp
  40f43f:	and    bl,BYTE PTR [edi]
  40f441:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f442:	mov    dh,bl
  40f444:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f445:	imul   DWORD PTR [edx-0x75211081]
  40f44b:	mov    ebp,0x9320b7a1
  40f450:	jp     0x40f48e
  40f452:	pop    edi
  40f453:	sub    DWORD PTR [eax],0xab7f525f
  40f459:	ret    
  40f45a:	mov    bl,0xaa
  40f45c:	mov    bl,0x29
  40f45e:	call   0x7c77:0x1cec78bc
  40f465:	xchg   esi,eax
  40f466:	loop   0x40f4db
  40f468:	(bad)  
  40f469:	jecxz  0x40f460
  40f46b:	push   ecx
  40f46c:	aas    
  40f46d:	bound  edi,QWORD PTR [ebp+0x5d2ac4fb]
  40f473:	lea    edx,[ebx+0x43]
  40f476:	pop    es
  40f477:	dec    edx
  40f478:	div    BYTE PTR [ecx-0x1a]
  40f47b:	dec    esp
  40f47c:	psubsw mm1,QWORD PTR [esi-0x13]
  40f480:	dec    edi
  40f481:	aaa    
  40f482:	retf   0x43ed
  40f485:	mov    eax,ds:0x7189cf31
  40f48a:	mov    ebx,0x2b7eaf2c
  40f48f:	push   ss
  40f490:	aas    
  40f491:	or     bh,dh
  40f493:	sbb    BYTE PTR [eax],cl
  40f495:	stos   BYTE PTR es:[edi],al
  40f496:	adc    DWORD PTR [esi-0x115f2137],ebx
  40f49c:	lods   eax,DWORD PTR ds:[esi]
  40f49d:	jns    0x40f51e
  40f49f:	mov    bl,0x1a
  40f4a1:	mov    esp,0xfd7e37d5
  40f4a6:	mov    cl,0x43
  40f4a8:	mov    ah,0xc9
  40f4aa:	push   edx
  40f4ab:	loope  0x40f47a
  40f4ad:	popa   
  40f4ae:	mov    eax,0xd6c2fbcd
  40f4b3:	mov    ch,0x34
  40f4b5:	syscall 
  40f4b7:	ins    BYTE PTR es:[edi],dx
  40f4b8:	sbb    BYTE PTR [ebx],bl
  40f4ba:	jmp    0xd975:0x3192d1a7
  40f4c1:	stc    
  40f4c2:	add    DWORD PTR [ebx],ebp
  40f4c4:	push   DWORD PTR [ecx]
  40f4c6:	adc    esi,edx
  40f4c8:	test   eax,0xe2f0ceb9
  40f4cd:	popa   
  40f4ce:	xchg   esi,eax
  40f4cf:	(bad)  
  40f4d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4d2:	or     esi,DWORD PTR [esi-0x51e1d879]
  40f4d8:	push   esp
  40f4d9:	je     0x40f47b
  40f4db:	cmp    edx,DWORD PTR [esi]
  40f4dd:	ret    0x6897
  40f4e0:	adc    al,0x28
  40f4e2:	mov    WORD PTR [ebx+0x6f7a28c0],gs
  40f4e8:	mov    edx,0xfa7dc9bc
  40f4ee:	push   ss
  40f4ef:	push   0x54
  40f4f1:	mov    ecx,0xba57a9a6
  40f4f6:	in     eax,0x80
  40f4f8:	xchg   ebx,eax
  40f4f9:	retf   
  40f4fa:	xlat   BYTE PTR ds:[ebx]
  40f4fb:	jo     0x40f4b7
  40f4fd:	sub    BYTE PTR [eax-0x36a23b2a],0x8a
  40f504:	adc    BYTE PTR [esi+0x4f],dl
  40f507:	xor    BYTE PTR [ebx+0x62],bh
  40f50a:	add    BYTE PTR [ebx+0x1b],cl
  40f50d:	push   ds
  40f50e:	xlat   BYTE PTR ds:[ebx]
  40f50f:	les    ebp,FWORD PTR [ebx-0x16517374]
  40f515:	inc    edx
  40f516:	stc    
  40f517:	jbe    0x40f52e
  40f519:	push   0xffffffdd
  40f51b:	push   ebx
  40f51c:	lock cmp edi,DWORD PTR [edi+0x1500aa4e]
  40f523:	retf   
  40f524:	imul   edi,eax,0x27
  40f527:	pushf  
  40f528:	sub    al,0xc1
  40f52a:	bound  ebp,QWORD PTR [ecx+edi*8+0x6a]
  40f52e:	sub    eax,DWORD PTR [ecx-0x74]
  40f531:	cmp    ch,BYTE PTR [edi-0x793913c4]
  40f537:	add    edx,DWORD PTR ss:[eax]
  40f53a:	mov    esp,DWORD PTR [esi]
  40f53c:	adc    DWORD PTR [edx+ecx*1-0x69],edx
  40f540:	cs and al,0xa8
  40f543:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f544:	or     eax,0xcf2c5bed
  40f549:	fbstp  TBYTE PTR [esi-0x10]
  40f54c:	cs and cl,bl
  40f54f:	outs   dx,BYTE PTR ds:[esi]
  40f550:	fsubr  QWORD PTR [edi]
  40f552:	adc    al,0xbb
  40f554:	ss push ebp
  40f556:	push   es
  40f557:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f558:	mov    al,0xb9
  40f55a:	mov    sp,0x7367
  40f55e:	div    BYTE PTR [ebp-0x111cf737]
  40f564:	push   ebx
  40f565:	inc    ecx
  40f566:	iret   
  40f567:	sbb    eax,DWORD PTR [esi]
  40f569:	lods   al,BYTE PTR ds:[esi]
  40f56a:	jmp    0xc551:0x59aa907a
  40f571:	pop    edx
  40f572:	icebp  
  40f573:	xchg   ecx,eax
  40f574:	mov    fs,esp
  40f576:	add    eax,0xc7be18ee
  40f57b:	mov    ds:0xfff2fb0b,eax
  40f580:	dec    eax
  40f581:	rcl    ebp,1
  40f583:	xor    DWORD PTR ds:0xf4ff66c8,0x23
  40f58a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f58b:	mov    al,ss:0x9189d0db
  40f591:	iret   
  40f592:	cmp    al,0xfa
  40f594:	jae    0x40f529
  40f596:	sub    eax,0x2ff88f29
  40f59b:	push   eax
  40f59c:	fsub   st(4),st
  40f59e:	daa    
  40f59f:	add    BYTE PTR [ebp-0x4e],al
  40f5a2:	adc    BYTE PTR [eax+0x475b1f1c],bl
  40f5a8:	retf   
  40f5a9:	cmc    
  40f5aa:	fistp  WORD PTR [edx+eax*1-0x71]
  40f5ae:	retf   
  40f5af:	hlt    
  40f5b0:	ss dec eax
  40f5b2:	xchg   ecx,eax
  40f5b3:	inc    edi
  40f5b4:	sbb    ch,bh
  40f5b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5b7:	div    BYTE PTR [esi]
  40f5b9:	retf   0x8668
  40f5bc:	pop    ds
  40f5bd:	xchg   ebp,eax
  40f5be:	inc    ecx
  40f5bf:	sub    DWORD PTR [eax-0x41],ebp
  40f5c2:	add    al,0xa4
  40f5c4:	(bad)  
  40f5c5:	rcr    BYTE PTR [esi],cl
  40f5c7:	inc    edx
  40f5c8:	sahf   
  40f5c9:	mov    esp,ss
  40f5cb:	push   eax
  40f5cc:	push   edi
  40f5cd:	xchg   edx,eax
  40f5ce:	jmp    0xda96:0xfa63a2b7
  40f5d5:	into   
  40f5d6:	xlat   BYTE PTR ds:[ebx]
  40f5d7:	xchg   ebx,eax
  40f5d8:	(bad)  
  40f5d9:	std    
  40f5da:	call   0x7882d278
  40f5df:	dec    eax
  40f5e0:	jns    0x40f58d
  40f5e2:	pop    es
  40f5e3:	jge    0x40f574
  40f5e5:	adc    al,0xbc
  40f5e7:	xor    DWORD PTR [ebx],edx
  40f5e9:	and    DWORD PTR [edx+0x6461bb8d],ebx
  40f5ef:	sub    DWORD PTR [edx+0x11],ecx
  40f5f2:	dec    esp
  40f5f3:	or     BYTE PTR [edx-0x32],ah
  40f5f6:	aad    0x2c
  40f5f8:	lahf   
  40f5f9:	gs es es pop esp
  40f5fd:	fnstcw WORD PTR [edx+eax*8-0x3cd864cc]
  40f604:	adc    esp,0x928c7ca4
  40f60a:	mov    ds:0xb6a22bfb,al
  40f60f:	sub    al,0xea
  40f611:	xchg   BYTE PTR [eax+0x2bb05ff1],bl
  40f617:	pop    ds
  40f618:	sti    
  40f619:	or     edi,edx
  40f61b:	cld    
  40f61c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f61d:	add    eax,0x9cbdb5b9
  40f622:	or     ebx,DWORD PTR [edi]
  40f624:	or     edi,DWORD PTR [ebx+0xe]
  40f627:	pop    ds
  40f628:	push   esp
  40f629:	stc    
  40f62a:	repz je 0x40f5e5
  40f62d:	xor    BYTE PTR [edx-0x2e2b9ca6],bl
  40f633:	jnp    0x40f5f6
  40f635:	dec    edx
  40f636:	inc    ecx
  40f637:	xchg   ebx,esi
  40f639:	xor    ebx,ebx
  40f63b:	push   esi
  40f63c:	mov    esi,ebx
  40f63e:	pop    ebx
  40f63f:	mov    edx,esi
  40f641:	add    ebx,0x1002
  40f647:	lea    eax,[ebp-0x18]
  40f64a:	add    edx,eax
  40f64c:	add    edx,0x5
  40f64f:	push   edx
  40f650:	inc    esi
  40f651:	pop    ecx
  40f652:	dec    ecx
  40f653:	xchg   ecx,eax
  40f654:	dec    eax
  40f655:	xchg   ecx,eax
  40f656:	dec    ecx
  40f657:	xchg   ecx,edx
  40f659:	dec    edx
  40f65a:	push   edx
  40f65b:	mov    edx,ebx
  40f65d:	pop    ebx
  40f65e:	dec    ebx
  40f65f:	call   DWORD PTR [ebx]
  40f661:	cmp    DWORD PTR [ebp+0x10],esi
  40f664:	je     0x40f685
  40f66a:	xchg   edx,eax
  40f66b:	push   0xc
  40f66d:	pop    ecx
  40f66e:	dec    ecx
  40f66f:	push   0x3
  40f671:	pop    ebx
  40f672:	inc    ebx
  40f673:	xchg   ebx,ecx
  40f675:	inc    ecx
  40f676:	sub    ebx,ecx
  40f678:	xchg   ebx,ecx
  40f67a:	dec    ecx
  40f67b:	dec    ecx
  40f67c:	mov    eax,DWORD PTR [ebp-0x1c]
  40f67f:	imul   eax,ecx
  40f682:	add    esp,eax
  40f684:	xchg   edx,eax
  40f685:	push   eax
  40f686:	xor    ebx,ebx
  40f688:	mov    edx,esp
  40f68a:	dec    edx
  40f68b:	inc    ebx
  40f68c:	add    ebx,DWORD PTR [edx+ebx*1]
  40f68f:	dec    ebx
  40f690:	xor    edx,edx
  40f692:	add    DWORD PTR [ebp-0x10],ebx
  40f695:	pop    ebx
  40f696:	mov    eax,DWORD PTR [ebp-0x10]
  40f699:	pop    edi
  40f69a:	pop    esi
  40f69b:	pop    ebx
  40f69c:	leave  
  40f69d:	ret    0x10
  40f6a0:	push   ebp
  40f6a1:	mov    ebp,esp
  40f6a3:	push   ecx
  40f6a4:	mov    DWORD PTR [ebp-0x4],0xf89c85bd
  40f6ab:	xor    DWORD PTR ds:0x428eb1,0x6807
  40f6b5:	mov    eax,DWORD PTR [ebp-0x4]
  40f6b8:	mov    edx,DWORD PTR [ebp+0x10]
  40f6bb:	mov    ecx,0x75108b1
  40f6c0:	xor    eax,ecx
  40f6c2:	add    eax,0x3272f8
  40f6c7:	mov    DWORD PTR [edx],eax
  40f6c9:	mov    eax,DWORD PTR [ebp+0xc]
  40f6cc:	xor    eax,ecx
  40f6ce:	or     DWORD PTR ds:0x428e95,0x4274
  40f6d8:	push   esi
  40f6d9:	xor    edx,DWORD PTR ds:0x428e25
  40f6df:	mov    esi,DWORD PTR [ebp+0x10]
  40f6e2:	mov    edx,0x3272f8
  40f6e7:	sub    DWORD PTR ds:0x428e35,0x428e89
  40f6f1:	add    eax,edx
  40f6f3:	mov    DWORD PTR [esi+0x4],eax
  40f6f6:	mov    eax,DWORD PTR [ebp+0x14]
  40f6f9:	sub    DWORD PTR ds:0x428e6d,0x71ec
  40f703:	mov    esi,DWORD PTR [ebp+0x10]
  40f706:	xor    DWORD PTR ds:0x428e75,0xbd4
  40f710:	mov    DWORD PTR [esi+0x8],eax
  40f713:	mov    eax,DWORD PTR [ebp+0x18]
  40f716:	mov    esi,DWORD PTR [ebp+0x10]
  40f719:	sub    DWORD PTR ds:0x428e31,0x4173
  40f723:	mov    DWORD PTR [esi+0xc],eax
  40f726:	add    esi,0x59ec
  40f72c:	mov    eax,DWORD PTR [ebp+0x1c]
  40f72f:	mov    esi,DWORD PTR [ebp+0x10]
  40f732:	mov    DWORD PTR [esi+0x10],eax
  40f735:	mov    eax,DWORD PTR [ebp+0x8]
  40f738:	xor    eax,ecx
  40f73a:	add    eax,edx
  40f73c:	pop    esi
  40f73d:	leave  
  40f73e:	ret    0x18
  40f741:	push   ebp
  40f742:	mov    ebp,esp
  40f744:	sub    esp,0x9c
  40f74a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f74d:	sbb    DWORD PTR ds:0x428e9d,edx
  40f753:	mov    eax,0x8a9c
  40f758:	sbb    DWORD PTR ds:0x428ed1,0x428ec1
  40f762:	xor    ax,WORD PTR [ecx+0x20]
  40f766:	and    DWORD PTR ds:0x428e65,ebx
  40f76c:	mov    ecx,0x3b5e
  40f771:	add    ax,cx
  40f774:	movzx  eax,ax
  40f777:	xor    ecx,DWORD PTR ds:0x428e89
  40f77d:	mov    DWORD PTR [ebp-0x10],eax
  40f780:	mov    BYTE PTR [ebp-0x1],0x7c
  40f784:	and    DWORD PTR ds:0x428e9d,0x0
  40f78e:	mov    ecx,DWORD PTR ds:0x428e9d
  40f794:	inc    ecx
  40f795:	mov    DWORD PTR ds:0x428e9d,ecx
  40f79b:	cmp    DWORD PTR ds:0x428e9d,0x25
  40f7a2:	ja     0x40f7ce
  40f7a8:	jmp    0x40f7c1
  40f7ad:	push   0x762d
  40f7b2:	push   DWORD PTR [ebp-0x1c]
  40f7b5:	push   DWORD PTR [ebp-0x10]
  40f7b8:	push   DWORD PTR [ebp-0x1c]
  40f7bb:	call   DWORD PTR ds:0x42ca3c
  40f7c1:	cmp    DWORD PTR ds:0x428e9d,0x1d
  40f7c8:	jb     0x40f78e
  40f7ce:	lea    eax,[ebp-0x1]
  40f7d1:	mov    DWORD PTR [ebp-0xc],eax
  40f7d4:	mov    DWORD PTR ds:0x428e65,0x1c
  40f7de:	cmp    DWORD PTR ds:0x428e65,0x0
  40f7e5:	je     0x40f82d
  40f7eb:	cmp    DWORD PTR ds:0x428e65,0x22
  40f7f2:	jle    0x40f82d
  40f7f8:	jmp    0x40f819
  40f7fd:	push   0x5d70
  40f802:	push   DWORD PTR [ebp-0x24]
  40f805:	push   DWORD PTR [ebp-0x20]
  40f808:	push   DWORD PTR [ebp-0x28]
  40f80b:	push   0x428104
  40f810:	push   DWORD PTR [ebp-0x24]
  40f813:	call   DWORD PTR ds:0x42ca10
  40f819:	xor    ecx,ecx
  40f81b:	or     ecx,DWORD PTR ds:0x428e65
  40f821:	dec    ecx
  40f822:	mov    DWORD PTR ds:0x428e65,ecx
  40f828:	jmp    0x40f7de
  40f82d:	mov    al,BYTE PTR [ebp-0x1]
  40f830:	add    DWORD PTR ds:0x428e95,edi
  40f836:	mov    ecx,DWORD PTR [ebp-0xc]
  40f839:	xor    al,0x80
  40f83b:	sub    DWORD PTR ds:0x428ebd,0x428e99
  40f845:	add    al,0x5
  40f847:	sbb    DWORD PTR ds:0x428e29,0x428ead
  40f851:	mov    BYTE PTR [ecx],al
  40f853:	mov    DWORD PTR ds:0x428eb1,0x18
  40f85d:	cmp    DWORD PTR ds:0x428eb1,0x0
  40f864:	je     0x40f8ba
  40f86a:	cmp    DWORD PTR ds:0x428eb1,0xc
  40f871:	jl     0x40f8ba
  40f877:	jmp    0x40f88c
  40f87c:	push   0x428009
  40f881:	push   DWORD PTR [ebp-0x28]
  40f884:	push   0x0
  40f886:	call   DWORD PTR ds:0x42ca4c
  40f88c:	cmp    DWORD PTR ds:0x428eb1,0xd
  40f893:	jne    0x40f8a6
  40f899:	mov    ecx,DWORD PTR ds:0x428eb1
  40f89f:	dec    ecx
  40f8a0:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8a6:	xor    ecx,ecx
  40f8a8:	add    ecx,DWORD PTR ds:0x428eb1
  40f8ae:	dec    ecx
  40f8af:	mov    DWORD PTR ds:0x428eb1,ecx
  40f8b5:	jmp    0x40f85d
  40f8ba:	mov    DWORD PTR [ebp-0x18],0xf89c85b9
  40f8c1:	push   ebx
  40f8c2:	mov    DWORD PTR ds:0x428e59,0x10
  40f8cc:	cmp    DWORD PTR ds:0x428e59,0x0
  40f8d3:	je     0x40f909
  40f8d9:	cmp    DWORD PTR ds:0x428e59,0x12
  40f8e0:	jg     0x40f909
  40f8e6:	jmp    0x40f8f6
  40f8eb:	push   0x21fb
  40f8f0:	call   DWORD PTR ds:0x42ca50
  40f8f6:	xor    eax,eax
  40f8f8:	or     eax,DWORD PTR ds:0x428e59
  40f8fe:	dec    eax
  40f8ff:	mov    ds:0x428e59,eax
  40f904:	jmp    0x40f8cc
  40f909:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  40f910:	mov    ecx,DWORD PTR [ebp-0x18]
  40f913:	push   esi
  40f914:	mov    eax,0x75108b1
  40f919:	and    DWORD PTR ds:0x428e8d,0x6e27
  40f923:	xor    ecx,eax
  40f925:	or     esi,DWORD PTR ds:0x428e41
  40f92b:	mov    esi,0x3272f8
  40f930:	sbb    DWORD PTR ds:0x428e65,0x3911
  40f93a:	push   edi
  40f93b:	add    ecx,esi
  40f93d:	jmp    0x40f957
  40f942:	mov    dl,BYTE PTR [ebp-0x1]
  40f945:	mov    DWORD PTR ds:0x428ea5,0x4ad2
  40f94f:	mov    BYTE PTR [ebp+ecx*1-0x9c],dl
  40f956:	inc    ecx
  40f957:	cmp    ecx,0x40
  40f95a:	mov    DWORD PTR ds:0x428ec9,0x10ec
  40f964:	jb     0x40f942
  40f96a:	not    edx
  40f96c:	mov    edx,DWORD PTR [ebp-0x18]
  40f96f:	or     DWORD PTR ds:0x428e95,0x5092
  40f979:	xor    edx,eax
  40f97b:	sbb    DWORD PTR ds:0x428e7d,0x7f40
  40f985:	add    edx,esi
  40f987:	mov    DWORD PTR ds:0x428e35,0x3958
  40f991:	jmp    0x40fa14
  40f996:	sbb    ecx,DWORD PTR ds:0x428e6d
  40f99c:	mov    edi,DWORD PTR [ebp+0x8]
  40f99f:	sub    DWORD PTR ds:0x428e2d,0x7feb
  40f9a9:	mov    ecx,0x8a9c
  40f9ae:	sbb    DWORD PTR ds:0x428e25,0x428e91
  40f9b8:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40f9bd:	or     DWORD PTR ds:0x428e2d,0x498b
  40f9c7:	mov    edi,0x3b5e
  40f9cc:	or     DWORD PTR ds:0x428e49,0x428e35
  40f9d6:	add    cx,di
  40f9d9:	movzx  ecx,cx
  40f9dc:	mov    DWORD PTR [ebp-0xc],ecx
  40f9df:	and    DWORD PTR ds:0x428ec9,ecx
  40f9e5:	mov    ecx,DWORD PTR [ebp+0x8]
  40f9e8:	movzx  ecx,WORD PTR [ecx+edx*4]
  40f9ec:	add    DWORD PTR ds:0x428e71,0x1e66
  40f9f6:	xor    ecx,0x8a9c
  40f9fc:	add    ecx,edi
  40f9fe:	inc    edi
  40f9ff:	mov    edi,DWORD PTR [ebp-0xc]
  40fa02:	mov    DWORD PTR ds:0x428e49,0x2418
  40fa0c:	mov    BYTE PTR [ebp+edi*1-0x9c],cl
  40fa13:	inc    edx
  40fa14:	mov    DWORD PTR ds:0x428e81,ecx
  40fa1a:	mov    ecx,DWORD PTR [ebp-0x10]
  40fa1d:	mov    DWORD PTR ds:0x428e61,0x6126
  40fa27:	cmp    edx,ecx
  40fa29:	jne    0x40f996
  40fa2f:	mov    ecx,DWORD PTR [ebp-0x18]
  40fa32:	and    DWORD PTR ds:0x428ec9,0x0
  40fa3c:	jmp    0x40fa50
  40fa41:	xor    edi,edi
  40fa43:	or     edi,DWORD PTR ds:0x428ec9
  40fa49:	inc    edi
  40fa4a:	mov    DWORD PTR ds:0x428ec9,edi
  40fa50:	cmp    DWORD PTR ds:0x428ec9,0x19
  40fa57:	jae    0x40fa87
  40fa5d:	cmp    DWORD PTR ds:0x428ec9,0x28
  40fa64:	jbe    0x40fa87
  40fa6a:	jmp    0x40fa82
  40fa6f:	push   DWORD PTR [ebp-0x20]
  40fa72:	push   0x428104
  40fa77:	push   0x428eb9
  40fa7c:	call   DWORD PTR ds:0x42ca54
  40fa82:	jmp    0x40fa41
  40fa87:	mov    edx,DWORD PTR [ebp+0x10]
  40fa8a:	mov    edi,DWORD PTR ds:0x428e55
  40fa90:	sub    DWORD PTR ds:0x428e75,edi
  40fa96:	xor    ecx,eax
  40fa98:	add    ecx,esi
  40fa9a:	neg    edi
  40fa9c:	mov    DWORD PTR [edx],ecx
  40fa9e:	and    DWORD PTR ds:0x428e49,0x0
  40faa8:	jmp    0x40faba
  40faad:	mov    ecx,DWORD PTR ds:0x428e49
  40fab3:	inc    ecx
  40fab4:	mov    DWORD PTR ds:0x428e49,ecx
  40faba:	cmp    DWORD PTR ds:0x428e49,0x1d
  40fac1:	jae    0x40faf7
  40fac7:	cmp    DWORD PTR ds:0x428e49,0x21
  40face:	jb     0x40faf7
  40fad4:	jmp    0x40faf2
  40fad9:	push   DWORD PTR [ebp-0x14]
  40fadc:	push   DWORD PTR [ebp-0x28]
  40fadf:	push   0x4b8c
  40fae4:	push   DWORD PTR [ebp-0x18]
  40fae7:	push   0x428e9d
  40faec:	call   DWORD PTR ds:0x42ca14
  40faf2:	jmp    0x40faad
  40faf7:	mov    ecx,DWORD PTR [ebp-0x18]
  40fafa:	xor    ecx,eax
  40fafc:	add    ecx,esi
  40fafe:	neg    edi
  40fb00:	mov    DWORD PTR [ebp-0xc],ecx
  40fb03:	or     DWORD PTR ds:0x428e59,edx
  40fb09:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  40fb10:	movzx  edi,BYTE PTR ds:0x428e35
  40fb17:	or     edi,DWORD PTR ds:0x428ec5
  40fb1d:	mov    DWORD PTR ds:0x428e35,edi
  40fb23:	mov    DWORD PTR [ebp-0x14],0xf89c85a9
  40fb2a:	and    DWORD PTR ds:0x428e81,0x0
  40fb34:	jmp    0x40fb46
  40fb39:	mov    ecx,DWORD PTR ds:0x428e81
  40fb3f:	inc    ecx
  40fb40:	mov    DWORD PTR ds:0x428e81,ecx
  40fb46:	cmp    DWORD PTR ds:0x428e81,0x1b
  40fb4d:	jae    0x40fb94
  40fb53:	cmp    DWORD PTR ds:0x428e81,0xa
  40fb5a:	jbe    0x40fb94
  40fb60:	jmp    0x40fb75
  40fb65:	push   0x3736
  40fb6a:	push   0x7077
  40fb6f:	call   DWORD PTR ds:0x42ca18
  40fb75:	cmp    DWORD PTR ds:0x428e81,0x9
  40fb7c:	jne    0x40fb8f
  40fb82:	mov    ecx,DWORD PTR ds:0x428e81
  40fb88:	inc    ecx
  40fb89:	mov    DWORD PTR ds:0x428e81,ecx
  40fb8f:	jmp    0x40fb39
  40fb94:	mov    DWORD PTR [ebp-0x10],0xf89c95b9
  40fb9b:	and    DWORD PTR ds:0x428e35,0x0
  40fba5:	jmp    0x40fbb7
  40fbaa:	mov    ecx,DWORD PTR ds:0x428e35
  40fbb0:	inc    ecx
  40fbb1:	mov    DWORD PTR ds:0x428e35,ecx
  40fbb7:	cmp    DWORD PTR ds:0x428e35,0x11
  40fbbe:	jae    0x40fc0b
  40fbc4:	cmp    DWORD PTR ds:0x428e35,0x5
  40fbcb:	jge    0x40fc0b
  40fbd1:	jmp    0x40fbec
  40fbd6:	push   DWORD PTR [ebp-0xc]
  40fbd9:	push   DWORD PTR [ebp-0x18]
  40fbdc:	push   0x1f27
  40fbe1:	push   0x4d22
  40fbe6:	call   DWORD PTR ds:0x42ca58
  40fbec:	cmp    DWORD PTR ds:0x428e35,0x4
  40fbf3:	jne    0x40fc06
  40fbf9:	mov    ecx,DWORD PTR ds:0x428e35
  40fbff:	inc    ecx
  40fc00:	mov    DWORD PTR ds:0x428e35,ecx
  40fc06:	jmp    0x40fbaa
  40fc0b:	mov    ecx,DWORD PTR [ebp-0x14]
  40fc0e:	xor    edi,edi
  40fc10:	add    edi,DWORD PTR ds:0x428e95
  40fc16:	xor    DWORD PTR ds:0x428e41,edi
  40fc1c:	mov    DWORD PTR [ebp+0x8],ecx
  40fc1f:	adc    DWORD PTR ds:0x428e31,ebx
  40fc25:	mov    ecx,DWORD PTR [ebp+0x8]
  40fc28:	adc    DWORD PTR ds:0x428e39,0x50fd
  40fc32:	xor    ecx,eax
  40fc34:	or     DWORD PTR ds:0x428e49,0x428e31
  40fc3e:	add    ecx,esi
  40fc40:	mov    ecx,0xf641bea
  40fc45:	mov    edi,0x15c3
  40fc4a:	mov    edi,0x5a1eade
  40fc4f:	je     0x412616
  40fc55:	add    edx,ebx
  40fc57:	mov    edx,DWORD PTR [ebp+0x8]
  40fc5a:	and    DWORD PTR ds:0x428eb5,0x428e6d
  40fc64:	mov    ebx,DWORD PTR [ebp-0x8]
  40fc67:	xor    edx,eax
  40fc69:	adc    DWORD PTR ds:0x428e49,0x78c3
  40fc73:	xor    ebx,eax
  40fc75:	sub    edx,ebx
  40fc77:	not    DWORD PTR ds:0x428e65
  40fc7d:	sub    edx,esi
  40fc7f:	xor    edx,eax
  40fc81:	sub    DWORD PTR ds:0x428ec1,ebx
  40fc87:	mov    DWORD PTR [ebp+0x8],edx
  40fc8a:	mov    DWORD PTR ds:0x428e81,0x18
  40fc94:	cmp    DWORD PTR ds:0x428e81,0x0
  40fc9b:	je     0x40fcef
  40fca1:	cmp    DWORD PTR ds:0x428e81,0x9
  40fca8:	jg     0x40fcef
  40fcae:	jmp    0x40fcc1
  40fcb3:	push   DWORD PTR [ebp-0x1c]
  40fcb6:	push   0x8c8f
  40fcbb:	call   DWORD PTR ds:0x42ca1c
  40fcc1:	cmp    DWORD PTR ds:0x428e81,0xa
  40fcc8:	jne    0x40fcdd
  40fcce:	xor    edx,edx
  40fcd0:	xor    edx,DWORD PTR ds:0x428e81
  40fcd6:	dec    edx
  40fcd7:	mov    DWORD PTR ds:0x428e81,edx
  40fcdd:	mov    edx,DWORD PTR ds:0x428e81
  40fce3:	dec    edx
  40fce4:	mov    DWORD PTR ds:0x428e81,edx
  40fcea:	jmp    0x40fc94
  40fcef:	mov    edx,DWORD PTR [ebp+0x8]
  40fcf2:	adc    ebx,0x7b56
  40fcf8:	mov    ebx,DWORD PTR [ebp-0x58]
  40fcfb:	sub    DWORD PTR ds:0x428ea9,0xceb
  40fd05:	lea    edx,[ebx+edx*1+0x5708f8]
  40fd0c:	mov    DWORD PTR ds:0x428e91,0x63b8
  40fd16:	mov    DWORD PTR [ebp-0x58],edx
  40fd19:	mov    edx,DWORD PTR [ebp+0x8]
  40fd1c:	mov    ebx,DWORD PTR [ebp-0x54]
  40fd1f:	add    edx,0x64f89a
  40fd25:	adc    DWORD PTR ds:0x428e6d,0x428e79
  40fd2f:	imul   edx,ebx
  40fd32:	mov    DWORD PTR [ebp-0x54],edx
  40fd35:	xor    ebx,edx
  40fd37:	mov    edx,DWORD PTR [ebp+0x8]
  40fd3a:	xor    DWORD PTR ds:0x428e75,0x629e
  40fd44:	mov    ebx,DWORD PTR [ebp-0x50]
  40fd47:	mov    DWORD PTR ds:0x428ea5,0x655f
  40fd51:	add    edx,0x242ebed
  40fd57:	mov    DWORD PTR ds:0x428e49,0x3be8
  40fd61:	and    edx,ebx
  40fd63:	and    DWORD PTR ds:0x428e5d,0x0
  40fd6d:	jmp    0x40fd7f
  40fd72:	mov    ebx,DWORD PTR ds:0x428e5d
  40fd78:	inc    ebx
  40fd79:	mov    DWORD PTR ds:0x428e5d,ebx
  40fd7f:	cmp    DWORD PTR ds:0x428e5d,0x1e
  40fd86:	jae    0x412148
  40fd8c:	cmp    DWORD PTR ds:0x428e5d,0x8
  40fd93:	ja     0x412148
  40fd99:	jmp    0x40fdae
  40fd9e:	push   0x4280dc
  40fda3:	push   0x2c09
  40fda8:	call   DWORD PTR ds:0x42ca20
  40fdae:	cmp    DWORD PTR ds:0x428e5d,0x7
  40fdb5:	jne    0x40fdca
  40fdbb:	xor    ebx,ebx
  40fdbd:	xor    ebx,DWORD PTR ds:0x428e5d
  40fdc3:	inc    ebx
  40fdc4:	mov    DWORD PTR ds:0x428e5d,ebx
  40fdca:	jmp    0x40fd72
  40fdcf:	jmp    0x412148
  40fdd4:	xadd   edi,edi
  40fdd7:	dec    ebx
  40fdd8:	push   ecx
  40fdd9:	dec    ebp
  40fdda:	dec    edi
  40fddb:	sar    eax,0xe5
  40fdde:	mov    al,ah
  40fde0:	mov    al,ds:0xb2d39bbd
  40fde5:	dec    edi
  40fde6:	jnp    0x40fe63
  40fde8:	xlat   BYTE PTR ds:[ebx]
  40fde9:	sahf   
  40fdea:	jnp    0x40fe67
  40fdec:	adc    BYTE PTR fs:[edx],dh
  40fdef:	mov    edi,0x8b2abb33
  40fdf4:	mov    ch,0xa3
  40fdf6:	ins    BYTE PTR es:[edi],dx
  40fdf7:	jle    0x40fda8
  40fdf9:	fldenv [edi+0x64]
  40fdfc:	and    edi,esp
  40fdfe:	dec    ebp
  40fdff:	jp     0x40fde3
  40fe01:	popa   
  40fe02:	fsubp  st(5),st
  40fe04:	int3   
  40fe05:	dec    ebx
  40fe06:	(bad)  
  40fe08:	scas   al,BYTE PTR es:[edi]
  40fe09:	sub    bl,bh
  40fe0b:	sar    ecx,cl
  40fe0d:	cmp    edx,ebx
  40fe0f:	les    eax,FWORD PTR [edx+0x2596f9e5]
  40fe15:	les    eax,FWORD PTR [ebx-0x24]
  40fe18:	retf   0x2279
  40fe1b:	cmp    dh,BYTE PTR [esi-0x12]
  40fe1e:	das    
  40fe1f:	mov    esp,edi
  40fe21:	and    al,0x49
  40fe23:	xchg   ebx,eax
  40fe24:	call   0x8af5:0xe25a255f
  40fe2b:	mov    al,ds:0x14774f7f
  40fe30:	sbb    al,0x9f
  40fe32:	jo     0x40fddd
  40fe34:	mov    al,0x99
  40fe36:	push   cs
  40fe37:	xor    ah,dl
  40fe39:	sub    dh,bl
  40fe3b:	or     DWORD PTR [ebx],ebx
  40fe3d:	ret    0xad2c
  40fe40:	out    dx,eax
  40fe41:	out    dx,eax
  40fe42:	stos   DWORD PTR es:[edi],eax
  40fe43:	arpl   cx,dx
  40fe45:	lods   eax,DWORD PTR ds:[esi]
  40fe46:	in     eax,dx
  40fe47:	cmp    edi,DWORD PTR [ecx]
  40fe49:	pop    ebx
  40fe4a:	fiadd  DWORD PTR [ebx*1-0x7ef168d9]
  40fe51:	adc    eax,ebx
  40fe53:	scas   eax,DWORD PTR es:[edi]
  40fe54:	dec    edx
  40fe55:	cmp    al,0x56
  40fe57:	in     al,dx
  40fe58:	xor    BYTE PTR [ebp+0x7ec857c1],bh
  40fe5e:	pop    edx
  40fe5f:	mov    cl,0x9b
  40fe61:	sti    
  40fe62:	xlat   BYTE PTR ds:[ebx]
  40fe63:	mov    esp,0xacb6f05e
  40fe68:	ja     0x40fed6
  40fe6a:	fdivp  st(6),st
  40fe6c:	jmp    0x6954:0x107f0446
  40fe73:	lock cmc 
  40fe75:	jp     0x40fe7f
  40fe77:	inc    esp
  40fe78:	sbb    ebp,edi
  40fe7a:	sbb    ah,bl
  40fe7c:	sbb    al,BYTE PTR [edi]
  40fe7e:	call   0x5947:0xfba1c541
  40fe85:	mov    edx,0x211fe97b
  40fe8a:	rcl    ch,cl
  40fe8c:	add    ecx,DWORD PTR [ecx+0x7a]
  40fe8f:	addr16 pushf 
  40fe91:	add    eax,0x8a61e9fe
  40fe96:	jnp    0x40fe77
  40fe98:	push   ebp
  40fe99:	dec    esi
  40fe9a:	mov    dh,0xc4
  40fe9c:	inc    eax
  40fe9d:	xor    al,0x67
  40fe9f:	mov    al,ds:0x7e10e56c
  40fea4:	cmp    eax,0xdb7bec85
  40fea9:	pop    edx
  40feaa:	in     al,0xcb
  40feac:	cwde   
  40fead:	and    BYTE PTR [esi],0xd5
  40feb0:	icebp  
  40feb1:	ss loop 0x40fe82
  40feb4:	retf   
  40feb5:	adc    al,0x12
  40feb7:	pop    ebx
  40feb8:	mov    ebx,0x1dbfe522
  40febd:	mov    DWORD PTR [ecx+0x7c1ed365],edx
  40fec3:	dec    ebp
  40fec4:	mov    ds:0x4b2ca71e,eax
  40fec9:	ins    DWORD PTR es:[edi],dx
  40feca:	dec    esi
  40fecb:	push   esp
  40fecc:	inc    esi
  40fecd:	pop    esp
  40fece:	xchg   edx,eax
  40fecf:	sbb    DWORD PTR [eax],esi
  40fed1:	(bad)
  40fed5:	mov    cl,0x35
  40fed7:	lahf   
  40fed8:	nop
  40fed9:	push   0x5e8701f0
  40fede:	cmp    al,dh
  40fee0:	xchg   esp,eax
  40fee1:	add    edi,DWORD PTR [edi+0x7b]
  40fee4:	int3   
  40fee5:	mov    esi,0x4d993ac2
  40feea:	pop    es
  40feeb:	xchg   ebp,eax
  40feec:	fimul  WORD PTR [ebx+0x360a658e]
  40fef2:	iret   
  40fef3:	dec    ecx
  40fef4:	ds ror ah,1
  40fef7:	pushf  
  40fef8:	pop    edx
  40fef9:	retf   
  40fefa:	push   eax
  40fefb:	stos   BYTE PTR es:[edi],al
  40fefc:	inc    esp
  40fefd:	mov    ch,0xd9
  40feff:	stos   BYTE PTR es:[edi],al
  40ff00:	pop    ds
  40ff01:	out    dx,eax
  40ff02:	leave  
  40ff03:	sahf   
  40ff04:	push   0xffffffca
  40ff06:	clc    
  40ff07:	sub    cl,BYTE PTR ss:[ebp+0x22]
  40ff0b:	cmp    al,cl
  40ff0d:	push   edi
  40ff0e:	aad    0x74
  40ff10:	jno    0x40ff15
  40ff12:	cmc    
  40ff13:	or     ebp,DWORD PTR [ecx+ecx*2]
  40ff16:	jae    0x40fec2
  40ff18:	or     esi,DWORD PTR [ebp-0x38]
  40ff1b:	sti    
  40ff1c:	jbe    0x40fee2
  40ff1e:	jbe    0x40ff7a
  40ff20:	mov    DWORD PTR [esi+0x381ba641],edi
  40ff26:	xlat   BYTE PTR ds:[ebx]
  40ff27:	arpl   WORD PTR [ecx],ax
  40ff29:	mov    esp,0x1198eada
  40ff2e:	push   cs
  40ff2f:	mov    esp,0x78d6e365
  40ff34:	ror    BYTE PTR [ebx],cl
  40ff36:	sbb    eax,0xef6276e3
  40ff3b:	mov    bl,bh
  40ff3d:	bound  eax,QWORD PTR [eax+0x6]
  40ff40:	aas    
  40ff41:	mov    eax,ds:0xa239db3a
  40ff46:	jo     0x40fef6
  40ff48:	dec    edi
  40ff49:	pop    ebx
  40ff4a:	js     0x40ff3d
  40ff4c:	(bad)  
  40ff4d:	sar    BYTE PTR [ebx+0x35f7f67c],cl
  40ff53:	popa   
  40ff54:	aas    
  40ff55:	ret    0xb50
  40ff58:	pop    es
  40ff59:	xchg   edx,eax
  40ff5a:	xor    BYTE PTR [edi-0x68],0xc0
  40ff5e:	imul   esp,DWORD PTR [edx-0x10a00da3],0xffffffbe
  40ff65:	into   
  40ff66:	clc    
  40ff67:	jo     0x40feef
  40ff69:	in     al,dx
  40ff6a:	fwait
  40ff6b:	adc    dh,dh
  40ff6d:	sbb    dh,BYTE PTR [edi-0x75]
  40ff70:	out    0xbf,eax
  40ff72:	dec    esp
  40ff73:	or     esi,DWORD PTR [edx-0xd]
  40ff76:	cmp    dh,BYTE PTR es:[eax]
  40ff79:	pop    eax
  40ff7a:	fist   DWORD PTR ds:0x2f512e47
  40ff80:	lds    edx,FWORD PTR [ecx+0x23]
  40ff83:	mov    dh,0x82
  40ff85:	lds    ebx,FWORD PTR [edi+0xc19788f]
  40ff8b:	dec    esp
  40ff8c:	mov    esp,0x39176199
  40ff91:	pop    ds
  40ff92:	outs   dx,DWORD PTR ds:[esi]
  40ff93:	rcr    DWORD PTR [edx],0x66
  40ff96:	dec    ebp
  40ff97:	mov    ds:0x6aeff74e,eax
  40ff9c:	jne    0x40ffce
  40ff9e:	aaa    
  40ff9f:	adc    al,0x90
  40ffa1:	shl    DWORD PTR [ebx+0x10377797],1
  40ffa7:	jle    0x40ff60
  40ffa9:	xor    ecx,edx
  40ffab:	arpl   WORD PTR [esi-0x1b],dx
  40ffae:	xchg   edi,ebp
  40ffb0:	mov    bh,0x4
  40ffb2:	inc    eax
  40ffb3:	push   edx
  40ffb4:	and    eax,0xf58b76ff
  40ffb9:	jecxz  0x40ff47
  40ffbb:	mov    ebx,0x7a6da09e
  40ffc0:	jmp    0xa71ecb0a
  40ffc5:	jp     0x410013
  40ffc7:	dec    ecx
  40ffc8:	jle    0x40ffe8
  40ffca:	mov    bh,0x36
  40ffcc:	jmp    0x410030
  40ffce:	out    0x60,eax
  40ffd0:	mov    edx,0x61dfb35f
  40ffd5:	fild   QWORD PTR [edi]
  40ffd7:	sub    eax,esp
  40ffd9:	add    eax,0x7777ef4c
  40ffde:	xor    eax,0xdfbc5e73
  40ffe3:	fstp   DWORD PTR [eax+0x3a0a52e5]
  40ffe9:	sbb    DWORD PTR [edx-0x7e0b11b9],0xffffff98
  40fff0:	cdq    
  40fff1:	inc    ebp
  40fff2:	cwde   
  40fff3:	(bad)  
  40fff4:	jg     0x40ffd3
  40fff6:	(bad)  
  40fff7:	addr16 (bad) 
  40fff9:	mov    eax,0x449489c
  40fffe:	push   eax
  40ffff:	ins    BYTE PTR es:[edi],dx
  410000:	pushf  
  410001:	addr16 push es
  410003:	jmp    DWORD PTR [esi]
  410005:	mov    bh,0x56
  410007:	jge    0x40ff8e
  410009:	cmp    eax,0xd2488f46
  41000e:	cmp    ebp,DWORD PTR [ebx+ebp*8+0x72]
  410012:	adc    eax,0x2824c18d
  410017:	cvtpi2ps xmm1,mm2
  41001a:	cwde   
  41001b:	cmp    esp,DWORD PTR [edi]
  41001d:	or     ecx,DWORD PTR ds:0xe88f4406
  410023:	jle    0x4100a2
  410025:	outs   dx,DWORD PTR ds:[esi]
  410026:	push   ebx
  410027:	mov    bl,BYTE PTR [edi+ecx*8]
  41002a:	adc    al,0x10
  41002c:	popf   
  41002d:	xchg   esp,eax
  41002e:	mov    ebx,0x3a96a73b
  410033:	add    DWORD PTR [eax-0x12a61508],eax
  410039:	sub    BYTE PTR [ebx],dh
  41003b:	push   0xfffffff9
  41003d:	pop    ecx
  41003e:	scas   eax,DWORD PTR es:[edi]
  41003f:	test   al,0x37
  410041:	jae    0x410077
  410043:	jno    0x41001e
  410045:	cdq    
  410046:	jecxz  0x41007e
  410048:	pop    esp
  410049:	pop    es
  41004a:	mov    gs,WORD PTR [edi+eiz*4]
  41004d:	xchg   ebp,eax
  41004e:	mov    esp,0x592c16da
  410053:	xor    ecx,DWORD PTR [eax-0x3]
  410056:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410057:	pop    ds
  410058:	and    al,0x68
  41005a:	lahf   
  41005b:	push   0x7d
  41005d:	jg     0x4100a1
  41005f:	dec    edx
  410060:	sub    ebx,DWORD PTR ds:[edi-0x62]
  410064:	lahf   
  410065:	outs   dx,BYTE PTR ds:[esi]
  410066:	xor    al,0x40
  410068:	or     eax,0x3e56b7fe
  41006d:	ja     0x410035
  41006f:	and    ebp,esp
  410071:	ins    BYTE PTR es:[edi],dx
  410072:	pop    ecx
  410073:	cli    
  410074:	data16 cli 
  410076:	adc    BYTE PTR [ebx-0x2e7bfb0f],0xc5
  41007d:	mov    edx,0x43f68481
  410082:	out    dx,eax
  410083:	hlt    
  410084:	aad    0x3c
  410086:	arpl   WORD PTR [ebx],di
  410088:	rcl    BYTE PTR [edi+0x7898a553],cl
  41008e:	outs   dx,DWORD PTR ds:[esi]
  41008f:	(bad)  
  410090:	in     al,0x13
  410092:	push   ecx
  410093:	fimul  DWORD PTR [edx+0x15]
  410096:	pop    es
  410097:	adc    BYTE PTR ss:[ebp+0x4f],0x4b
  41009c:	arpl   WORD PTR [esi],ax
  41009e:	shr    BYTE PTR [edx+0x487213c1],1
  4100a4:	jmp    0xc0a:0xd1c444d1
  4100ab:	rcr    BYTE PTR [edi-0x9c1aece],0x59
  4100b2:	gs mov esi,0x903376b5
  4100b8:	push   ebp
  4100b9:	les    edx,FWORD PTR [ebx+0x4f]
  4100bc:	test   ebx,esp
  4100be:	xchg   ebx,eax
  4100bf:	adc    ecx,0xc49ecb77
  4100c5:	or     eax,0x28df7b8e
  4100ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100cb:	xor    BYTE PTR [ebx+0x2b],bl
  4100ce:	or     ecx,DWORD PTR [esi+0x6c]
  4100d1:	loop   0x410080
  4100d3:	jo     0x41007a
  4100d5:	call   0x12fd8985
  4100da:	inc    edi
  4100db:	dec    ecx
  4100dc:	test   eax,0x91e84761
  4100e1:	add    DWORD PTR [esi],ecx
  4100e3:	icebp  
  4100e4:	fcmovb st,st(5)
  4100e6:	cmp    DWORD PTR [esi+0x752586f3],ebx
  4100ec:	jb     0x410167
  4100ee:	jnp    0x41008e
  4100f0:	and    al,0xe9
  4100f2:	dec    ecx
  4100f3:	add    DWORD PTR [ebp-0x1155391],0xcab23813
  4100fd:	push   cs
  4100fe:	mov    ebx,0xffc63fb
  410103:	outs   dx,DWORD PTR ds:[esi]
  410104:	lods   al,BYTE PTR ds:[esi]
  410105:	xor    DWORD PTR [edi+ebp*4-0x57ac8ceb],edi
  41010c:	out    0x3a,eax
  41010e:	inc    ebx
  41010f:	pop    ss
  410110:	cld    
  410111:	das    
  410112:	test   BYTE PTR [edi-0x5042cb50],0x2d
  410119:	loopne 0x410152
  41011b:	rol    BYTE PTR [eax-0x49],0x46
  41011f:	xor    ebx,DWORD PTR [esi+0x5e]
  410122:	hlt    
  410123:	out    0x2f,eax
  410125:	iret   
  410126:	pusha  
  410127:	inc    eax
  410128:	loope  0x410191
  41012a:	mov    ebp,ds
  41012c:	icebp  
  41012d:	or     al,BYTE PTR [esi]
  41012f:	data16 ror BYTE PTR ds:0xb2c877f6,0xe0
  410137:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  410139:	cmp    DWORD PTR ds:0x8a92a1b8,0xffffffbe
  410140:	pop    es
  410141:	push   0x35
  410143:	xor    ecx,DWORD PTR [edi+esi*4]
  410146:	popf   
  410147:	fnstcw WORD PTR [edi-0x5e2b42ab]
  41014d:	(bad)  
  41014e:	ficom  DWORD PTR [ebp+0x3dbd0b5a]
  410154:	cmp    esp,DWORD PTR [edi]
  410156:	lea    esi,[esi]
  410158:	fdiv   DWORD PTR [ebp-0x480f4d44]
  41015e:	aas    
  41015f:	lock cmp al,0x25
  410162:	adc    cl,BYTE PTR [ebp*2-0x26e3023f]
  410169:	dec    esp
  41016a:	pop    ds
  41016b:	cmp    eax,DWORD PTR [ecx+0x23975861]
  410171:	jmp    0xf0a50754
  410176:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410177:	mov    al,ds:0xe3741ccd
  41017c:	xchg   edx,eax
  41017d:	add    DWORD PTR [edi-0x5be62a8e],ebx
  410183:	lds    ebx,FWORD PTR [ecx-0x1997e089]
  410189:	jbe    0x4101c0
  41018b:	sub    DWORD PTR [ebx],ecx
  41018d:	lods   al,BYTE PTR ds:[esi]
  41018e:	xlat   BYTE PTR ds:[ebx]
  41018f:	xchg   esi,eax
  410190:	adc    DWORD PTR [ebx],eax
  410192:	push   edx
  410193:	and    BYTE PTR [esi],bh
  410195:	cwde   
  410196:	call   0xf507:0xf531d263
  41019d:	adc    ah,ah
  41019f:	icebp  
  4101a0:	aaa    
  4101a1:	out    dx,eax
  4101a2:	inc    eax
  4101a3:	scas   eax,DWORD PTR es:[edi]
  4101a4:	sub    BYTE PTR ds:0x8c622d07,cl
  4101aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101ab:	and    dh,BYTE PTR [ecx+0x1bce9d58]
  4101b1:	loop   0x410221
  4101b3:	retf   
  4101b4:	nop
  4101b5:	add    al,0x9d
  4101b7:	sti    
  4101b8:	xchg   ebp,eax
  4101b9:	mov    bh,0x87
  4101bb:	je     0x4101bc
  4101bd:	and    bh,BYTE PTR ds:0x7be84a0a
  4101c3:	cwde   
  4101c4:	or     eax,0xa499ed26
  4101c9:	xlat   BYTE PTR ds:[ebx]
  4101ca:	cdq    
  4101cb:	arpl   WORD PTR [ecx-0x62],di
  4101ce:	popa   
  4101cf:	xor    DWORD PTR [ebp-0x7],edx
  4101d2:	icebp  
  4101d3:	ins    BYTE PTR es:[edi],dx
  4101d4:	mov    WORD PTR [eax-0x2a],cs
  4101d7:	ret    0x2000
  4101da:	out    dx,eax
  4101db:	push   DWORD PTR [ebx+0x71]
  4101de:	aad    0x5
  4101e0:	add    al,0xb
  4101e2:	add    ah,BYTE PTR [ebx-0x3021c6df]
  4101e8:	jno    0x410227
  4101ea:	add    dl,0xe0
  4101ed:	mov    edx,0xada5000c
  4101f2:	in     eax,0x1
  4101f4:	jns    0x41017c
  4101f6:	out    dx,eax
  4101f7:	xor    al,0xe3
  4101f9:	lods   al,BYTE PTR ds:[esi]
  4101fa:	xchg   ecx,ecx
  4101fc:	cmp    ecx,0xffffff86
  4101ff:	(bad)  
  410200:	pop    esi
  410201:	paddsb mm3,QWORD PTR [ecx+0x76]
  410205:	retf   
  410206:	pop    ecx
  410207:	cmc    
  410208:	ror    dh,1
  41020a:	mov    dh,BYTE PTR [edx+ebp*1]
  41020d:	popa   
  41020e:	dec    esi
  41020f:	cmp    DWORD PTR [edi+0x72c917f8],edi
  410215:	push   0x28
  410217:	inc    ecx
  410218:	push   eax
  410219:	and    edx,DWORD PTR [ecx-0x52]
  41021c:	aaa    
  41021d:	loope  0x41022b
  41021f:	ret    
  410220:	daa    
  410221:	out    0x8b,eax
  410223:	iret   
  410224:	hlt    
  410225:	mov    al,ds:0x851cafb6
  41022a:	dec    eax
  41022b:	xor    edi,DWORD PTR [ebp-0x60]
  41022e:	add    DWORD PTR [edx-0xe719f35],esp
  410234:	or     BYTE PTR [edx],0x3c
  410237:	inc    esi
  410238:	(bad)  
  410239:	sbb    al,0xbf
  41023b:	mov    al,ds:0x599da07f
  410240:	push   ecx
  410241:	jb     0x4101d6
  410243:	cld    
  410244:	sahf   
  410245:	call   0x14fe:0x32055808
  41024c:	in     eax,0x5b
  41024e:	rcr    dl,0xa6
  410251:	push   esp
  410252:	add    al,0xa5
  410254:	jmp    0x4102b5
  410256:	or     esp,DWORD PTR [eax-0x1631e2be]
  41025c:	aam    0xff
  41025e:	or     eax,0x1b3e635e
  410263:	cmp    BYTE PTR [eax-0x6f],ah
  410266:	sub    al,0x76
  410268:	cdq    
  410269:	and    eax,0x9e6a2d2b
  41026e:	in     al,dx
  41026f:	jle    0x4101fb
  410271:	push   ss
  410272:	pop    esp
  410273:	cli    
  410274:	aam    0x78
  410276:	(bad)  
  410277:	cmp    ebx,DWORD PTR [ecx]
  410279:	sbb    BYTE PTR ds:[ebx-0x7cf88eb8],dh
  410280:	mov    eax,0xea766d55
  410285:	cmp    eax,0xf4c56e96
  41028a:	fist   WORD PTR [edi]
  41028c:	imul   esp,DWORD PTR [eax],0x4f1c09da
  410292:	sbb    DWORD PTR [edi-0x360789b6],ebp
  410298:	sbb    BYTE PTR [eax+ebp*4-0x69],cl
  41029c:	push   esi
  41029d:	sub    esp,DWORD PTR [edi-0x60]
  4102a0:	in     eax,0x44
  4102a2:	shr    DWORD PTR [eax-0x26],1
  4102a5:	es fs pop esp
  4102a8:	dec    eax
  4102a9:	jg     0x410318
  4102ab:	aaa    
  4102ac:	sub    DWORD PTR [esi],0x14
  4102af:	xor    ecx,DWORD PTR [edi]
  4102b1:	xchg   bh,ch
  4102b3:	lods   al,BYTE PTR ds:[esi]
  4102b4:	arpl   cx,dx
  4102b6:	jl     0x41030e
  4102b8:	cmp    edi,DWORD PTR [eax-0x29]
  4102bb:	cdq    
  4102bc:	fldln2 
  4102be:	jle    0x410270
  4102c0:	inc    eax
  4102c1:	stos   DWORD PTR es:[edi],eax
  4102c2:	mov    ah,0x8e
  4102c4:	jns    0x4102ff
  4102c6:	sbb    ecx,DWORD PTR [eax+0x76]
  4102c9:	cli    
  4102ca:	scas   eax,DWORD PTR es:[edi]
  4102cb:	out    dx,al
  4102cc:	gs add ecx,ebp
  4102cf:	out    dx,al
  4102d0:	adc    eax,0xd6ee66fe
  4102d5:	inc    dh
  4102d7:	add    BYTE PTR [edi],bh
  4102d9:	adc    al,0x62
  4102db:	fsubrp st(1),st
  4102dd:	out    dx,eax
  4102de:	xchg   ecx,eax
  4102df:	sbb    ebp,DWORD PTR [ebx]
  4102e1:	inc    ecx
  4102e2:	jmp    0x1f24b188
  4102e7:	ret    0x440c
  4102ea:	mov    ds:0xb65fb3c8,eax
  4102ef:	dec    ebx
  4102f0:	out    0x5d,eax
  4102f2:	jae    0x41036a
  4102f4:	push   esi
  4102f5:	push   ecx
  4102f6:	fild   DWORD PTR [eax+ebp*1+0x510a8534]
  4102fd:	outs   dx,BYTE PTR ds:[esi]
  4102fe:	repnz test eax,0xbcb49cb0
  410304:	xchg   esp,eax
  410305:	rol    DWORD PTR [edx+eax*1],cl
  410308:	daa    
  410309:	das    
  41030a:	sub    dh,dl
  41030c:	inc    ecx
  41030d:	scas   al,BYTE PTR es:[edi]
  41030e:	js     0x41030d
  410310:	imul   ecx,DWORD PTR ds:0xc9890a62,0x29
  410317:	push   cs
  410318:	in     al,dx
  410319:	or     ebx,DWORD PTR [ecx]
  41031b:	mov    BYTE PTR [edx],cl
  41031d:	les    ebx,FWORD PTR [esi-0x2]
  410320:	jmp    0x8a69:0xe838e5b0
  410327:	shr    BYTE PTR [edi+0x4f],0xb9
  41032b:	inc    edi
  41032c:	push   esp
  41032d:	and    cl,BYTE PTR [eax]
  41032f:	add    al,0xfd
  410331:	mov    al,ds:0x48cd12cc
  410336:	repnz fnstcw WORD PTR [ecx]
  410339:	sbb    al,0x15
  41033b:	xchg   ebp,eax
  41033c:	or     ch,BYTE PTR [edi+0x1c4f579c]
  410342:	sbb    BYTE PTR [esi-0x5f],dh
  410345:	sub    al,0xb6
  410347:	in     eax,dx
  410348:	test   BYTE PTR [ecx],0x38
  41034b:	xchg   esp,eax
  41034c:	dec    ebx
  41034d:	sub    bl,cl
  41034f:	mov    eax,ds:0x7ec53096
  410354:	jb     0x410321
  410356:	shl    BYTE PTR [esi],1
  410358:	retf   0xa64b
  41035b:	mov    al,ds:0x84698f19
  410360:	imul   esp,esi,0x5d08fb98
  410366:	or     BYTE PTR [esi+esi*8+0x24],0x53
  41036b:	ja     0x410343
  41036d:	push   esp
  41036e:	aam    0xdd
  410370:	adc    ebp,edx
  410372:	and    BYTE PTR [eax],0xf6
  410375:	(bad)  
  410376:	pop    ebx
  410377:	in     al,0x9b
  410379:	mov    esi,0xb810b223
  41037e:	cmp    ebp,DWORD PTR [ebx]
  410380:	mul    BYTE PTR [edx]
  410382:	mov    ds,WORD PTR [eax-0x2e]
  410385:	daa    
  410386:	mov    ds:0x9d8f5e1c,al
  41038b:	ja     0x41037e
  41038d:	jmp    0x4103af
  41038f:	popf   
  410390:	clc    
  410391:	icebp  
  410392:	in     al,dx
  410393:	xchg   edx,eax
  410394:	jbe    0x41038c
  410396:	adc    DWORD PTR [eax],ecx
  410398:	or     cl,cl
  41039a:	jns    0x410399
  41039c:	sbb    eax,0x802a0f9b
  4103a1:	nop
  4103a2:	push   ebx
  4103a3:	(bad)  
  4103a4:	scas   al,BYTE PTR es:[edi]
  4103a5:	and    al,0x20
  4103a7:	jo     0x4103de
  4103a9:	rol    BYTE PTR [ebx-0x74],0xb2
  4103ad:	jae    0x4103fc
  4103af:	ss cs or ah,bh
  4103b3:	les    ebx,FWORD PTR [eax]
  4103b5:	jmp    0x8020:0xfc2dd54e
  4103bc:	sbb    al,0xf4
  4103be:	add    esi,esp
  4103c0:	shl    dh,cl
  4103c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103c3:	popf   
  4103c4:	xchg   edi,eax
  4103c5:	pop    ds
  4103c6:	fwait
  4103c7:	jl     0x410365
  4103c9:	out    0x6f,al
  4103cb:	jo     0x4103a3
  4103cd:	sub    DWORD PTR [ecx+0xed9ead7],0xa
  4103d4:	mov    dl,BYTE PTR [esp+edx*2-0x8]
  4103d8:	xlat   BYTE PTR ds:[ebx]
  4103d9:	xor    BYTE PTR [edx+0x5b],ch
  4103dc:	gs or  al,0xfc
  4103df:	jbe    0x410451
  4103e1:	lds    edx,FWORD PTR [edx*4+0x58297598]
  4103e8:	(bad)  [ebp+0x4c]
  4103eb:	ret    
  4103ec:	pop    ebx
  4103ed:	addr16 mov cl,0x68
  4103f0:	hlt    
  4103f1:	sbb    bl,BYTE PTR [ecx+0x48b4c945]
  4103f7:	and    DWORD PTR [ecx-0x25049e5d],esi
  4103fd:	out    0xc0,eax
  4103ff:	fnstcw WORD PTR [edi+eiz*1-0x2926b8f1]
  410406:	mov    bl,0xe8
  410408:	mov    cl,0x39
  41040a:	push   edx
  41040b:	jae    0x410403
  41040d:	pop    edx
  41040e:	outs   dx,BYTE PTR ds:[esi]
  41040f:	push   esp
  410410:	sti    
  410411:	mov    ecx,DWORD PTR [edx+0x26b463c8]
  410417:	std    
  410418:	xor    eax,0xdd55b18a
  41041d:	and    DWORD PTR [eax-0x20bae8cb],edx
  410423:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410424:	enter  0x746c,0xa9
  410428:	add    ch,dh
  41042a:	out    0x20,al
  41042c:	cdq    
  41042d:	pop    ss
  41042e:	dec    ebp
  41042f:	mov    WORD PTR [edx+0x1a],es
  410432:	fisubr WORD PTR [eax]
  410434:	dec    edx
  410435:	fld    DWORD PTR ds:0x98cf5875
  41043b:	das    
  41043c:	hlt    
  41043d:	mov    bl,0x7
  41043f:	ds add al,0x46
  410442:	mov    DWORD PTR [edx-0x1f],edx
  410445:	adc    BYTE PTR [eax-0x23],bl
  410448:	(bad)  
  410449:	in     eax,dx
  41044a:	sbb    esp,eax
  41044c:	aad    0x9b
  41044e:	clc    
  41044f:	dec    ecx
  410450:	dec    edi
  410451:	sub    al,0x28
  410453:	xchg   ebp,eax
  410454:	arpl   WORD PTR [esi],cx
  410456:	ret    
  410457:	retf   
  410458:	push   0x34
  41045a:	in     al,0xa0
  41045c:	mov    WORD PTR [esi-0x2e],ss
  41045f:	rcl    DWORD PTR ds:0xc0dc74b2,1
  410465:	jg     0x410423
  410467:	xlat   BYTE PTR ds:[ebx]
  410468:	pop    ebx
  410469:	push   edx
  41046a:	or     bh,cl
  41046c:	sbb    eax,0x265364d1
  410471:	(bad)  
  410472:	adc    ch,BYTE PTR [esi-0x58]
  410475:	not    BYTE PTR [ebp-0x5d]
  410478:	xor    al,0x9d
  41047a:	scas   al,BYTE PTR es:[edi]
  41047b:	aas    
  41047c:	fnstcw WORD PTR ds:0xc226c029
  410482:	xchg   BYTE PTR [edi],al
  410484:	dec    ebp
  410485:	mov    edx,eax
  410487:	inc    edx
  410488:	ret    0x2ed
  41048b:	inc    esp
  41048c:	popf   
  41048d:	cmp    ch,BYTE PTR [ecx]
  41048f:	mov    al,0xf1
  410491:	shr    DWORD PTR ds:0xe5fa73e4,0x66
  410498:	push   0x3c02ca7
  41049d:	mov    esp,0xe7e62dca
  4104a2:	hlt    
  4104a3:	cmp    ebp,0x55
  4104a6:	jge    0x410432
  4104a8:	sbb    esi,DWORD PTR [esi-0x43]
  4104ab:	in     al,dx
  4104ac:	loope  0x4104fe
  4104ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104af:	mov    eax,0x1a151600
  4104b4:	add    ecx,esp
  4104b6:	adc    ecx,DWORD PTR [eax+0x60]
  4104b9:	pop    ebp
  4104bb:	pushf  
  4104bc:	cmp    BYTE PTR [ebx+0x49d714ae],dl
  4104c2:	add    al,0xe8
  4104c4:	inc    eax
  4104c5:	nop
  4104c6:	mov    ch,0x66
  4104c8:	gs ret 0x6be7
  4104cc:	ss xor eax,0x7d970d0a
  4104d2:	xor    al,0x24
  4104d4:	fld    DWORD PTR [edi]
  4104d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4104d7:	mov    eax,ds:0x80e62a1d
  4104dc:	xchg   BYTE PTR [ebx],ch
  4104de:	push   0xebcb9026
  4104e3:	pop    eax
  4104e4:	mov    ebx,0xdbdd8163
  4104e9:	aaa    
  4104ea:	xchg   DWORD PTR [esi-0x1a1fc578],ebp
  4104f0:	push   edx
  4104f1:	aam    0xe9
  4104f3:	jns    0x4104a5
  4104f5:	imul   ebx,DWORD PTR [eax],0xffffffdc
  4104f8:	rol    DWORD PTR [esi],cl
  4104fa:	cs pop edi
  4104fc:	jmp    0x70c55271
  410501:	cmp    esp,esi
  410503:	dec    ebx
  410504:	call   0xa75c:0x75c36b2
  41050b:	pop    es
  41050c:	and    bh,BYTE PTR [eax+eax*2+0x6a]
  410510:	int    0xeb
  410512:	add    BYTE PTR [edi+ebp*8+0x5b],al
  410516:	and    DWORD PTR ds:0x3371b5e9,edi
  41051c:	mov    dh,ch
  41051e:	sbb    ebp,ecx
  410520:	ins    DWORD PTR es:[edi],dx
  410521:	and    DWORD PTR [ecx+0x3ae62f15],edx
  410527:	and    ecx,DWORD PTR [ebx+0xd]
  41052a:	test   al,0x19
  41052c:	jg     0x41052b
  41052e:	leave  
  41052f:	push   ds
  410530:	mov    dh,0x3f
  410532:	std    
  410533:	arpl   WORD PTR [ebp+0x30],sp
  410536:	xchg   DWORD PTR ds:0x2f48feff,ecx
  41053c:	add    eax,0xf4f871b9
  410541:	or     bl,BYTE PTR [ecx+eiz*1+0x21]
  410545:	(bad)  
  410546:	ret    0x88e0
  410549:	xlat   BYTE PTR ds:[ebx]
  41054a:	sub    eax,0x69aad414
  41054f:	or     bl,BYTE PTR [ecx-0x2f587a1c]
  410555:	jp     0x41053d
  410557:	rol    esi,cl
  410559:	push   0xffffffa0
  41055b:	sti    
  41055c:	jmp    0x89ab:0x79204cff
  410563:	jmp    0x4104ff
  410565:	cmp    al,0x1a
  410567:	vandnps xmm3,xmm5,xmm0
  41056b:	sbb    BYTE PTR [ebx+ecx*8+0x41ee5ca5],ah
  410572:	or     BYTE PTR [edi+0x18],bl
  410575:	popf   
  410576:	mov    WORD PTR [edx-0x6d93600d],ss
  41057c:	dec    ebx
  41057d:	test   DWORD PTR [edi-0x11],esp
  410580:	jmp    0xe99b:0x36c5bbb3
  410587:	push   ss
  410588:	in     al,0xd6
  41058a:	ins    DWORD PTR es:[edi],dx
  41058b:	jle    0x41059c
  41058d:	lea    esp,[di]
  410590:	enter  0xe9a6,0x99
  410594:	leave  
  410595:	dec    esi
  410596:	jp     0x41056a
  410598:	pushf  
  410599:	stc    
  41059a:	enter  0x85a9,0xf4
  41059e:	mov    bl,0x8f
  4105a0:	or     al,0xa9
  4105a2:	ins    BYTE PTR es:[edi],dx
  4105a3:	mov    eax,0x730b610d
  4105a8:	jg     0x410535
  4105aa:	stc    
  4105ab:	jae    0x410596
  4105ad:	mov    ?,WORD PTR [edi+eiz*2+0x54]
  4105b1:	jl     0x410601
  4105b3:	sbb    al,0xa3
  4105b5:	pushf  
  4105b6:	pusha  
  4105b7:	jp     0x41057f
  4105b9:	(bad)  
  4105ba:	fild   QWORD PTR [esi+ebx*1-0x790ea36e]
  4105c1:	pop    es
  4105c2:	add    esp,DWORD PTR [esp+ecx*8-0x39]
  4105c6:	xchg   esi,eax
  4105c7:	int    0x91
  4105c9:	(bad)  
  4105cb:	test   BYTE PTR [edx-0x58],ah
  4105ce:	ins    DWORD PTR es:[edi],dx
  4105cf:	out    dx,eax
  4105d0:	fstp   QWORD PTR [edi+esi*1-0x307962ef]
  4105d7:	and    al,0xf1
  4105d9:	xor    al,0x63
  4105db:	ins    BYTE PTR es:[edi],dx
  4105dc:	pop    DWORD PTR [eax]
  4105de:	inc    esi
  4105df:	mov    ebx,0x2215b740
  4105e4:	(bad)  
  4105e6:	rol    cl,1
  4105e8:	pusha  
  4105e9:	in     al,dx
  4105ea:	stos   DWORD PTR es:[edi],eax
  4105eb:	fdiv   DWORD PTR [ebx]
  4105ed:	imul   ebx,DWORD PTR [edx+esi*1],0x1d0e87dd
  4105f4:	addr16 aam 0x8a
  4105f7:	dec    edx
  4105f8:	(bad)  
  4105f9:	or     bh,BYTE PTR [ecx+0x14]
  4105fc:	ins    BYTE PTR es:[edi],dx
  4105fd:	bound  edx,QWORD PTR [esi]
  4105ff:	add    BYTE PTR [ebx+0x4d714b2e],dh
  410605:	xlat   BYTE PTR ds:[ebx]
  410606:	pop    es
  410607:	aam    0xd7
  410609:	shl    BYTE PTR [eax-0x47],0xb2
  41060d:	inc    edx
  41060e:	dec    esp
  41060f:	push   DWORD PTR ds:0xfa5bf0fe
  410615:	loop   0x410660
  410617:	sbb    edx,ecx
  410619:	retf   
  41061a:	daa    
  41061b:	inc    esi
  41061c:	ret    0xf8e0
  41061f:	jmp    0x4064df76
  410624:	sub    eax,DWORD PTR [ecx+edi*1]
  410627:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410628:	data16 mov WORD PTR [edi+0x1f],cs
  41062c:	dec    eax
  41062d:	paddsb mm2,QWORD PTR [edi-0x2b]
  410631:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410632:	(bad)  
  410633:	sbb    BYTE PTR [edi+edi*8-0x1a],cl
  410637:	mov    al,0x79
  410639:	lods   al,BYTE PTR ds:[esi]
  41063a:	sub    BYTE PTR [edi-0x43],ch
  41063d:	push   ss
  41063e:	jno    0x4105d7
  410640:	aas    
  410641:	xchg   DWORD PTR [edx],esi
  410643:	sahf   
  410644:	xchg   edx,eax
  410645:	cmp    al,0xec
  410647:	cmp    BYTE PTR [ebp-0x5c],dh
  41064a:	fidiv  WORD PTR [edx+0x5a2c8867]
  410650:	inc    ecx
  410651:	ret    0xcdf2
  410654:	fsubr  DWORD PTR [ebx-0x39]
  410657:	aas    
  410658:	iret   
  410659:	fdivr  DWORD PTR [esi]
  41065b:	mov    ecx,0x8bc8eea2
  410660:	inc    edi
  410661:	jecxz  0x4106c5
  410663:	rol    BYTE PTR [esi-0x27e87986],1
  410669:	in     al,dx
  41066a:	cmp    DWORD PTR [ebx+0x56],ebx
  41066d:	ss inc esi
  41066f:	test   al,0x2d
  410671:	mov    ch,0x2c
  410673:	shl    ecx,cl
  410675:	mov    bl,0x4c
  410677:	mov    WORD PTR [ecx*1-0x1a9e68],fs
  41067e:	fstp   DWORD PTR [esi+0x2a23b63a]
  410684:	mov    BYTE PTR [ecx],0xc6
  410687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410688:	ins    BYTE PTR es:[edi],dx
  410689:	mov    esp,0xf3368536
  41068e:	ror    BYTE PTR [eax+0x138ea361],0x49
  410695:	cmc    
  410696:	push   0xccf46a5d
  41069b:	in     eax,dx
  41069c:	inc    edx
  41069d:	fisubr DWORD PTR [ebx+0x65]
  4106a0:	shl    BYTE PTR [esi],0xad
  4106a3:	das    
  4106a4:	push   esi
  4106a5:	adc    eax,0xa58025f4
  4106aa:	ds leave 
  4106ac:	fcom   QWORD PTR [ecx]
  4106ae:	sbb    ch,ah
  4106b0:	cmp    eax,0xb732b564
  4106b5:	jecxz  0x4106ff
  4106b7:	and    al,0x79
  4106b9:	or     al,BYTE PTR [edi+0x3]
  4106bc:	in     eax,0x8a
  4106be:	and    al,0xfb
  4106c0:	jbe    0x410720
  4106c2:	repz ficomp WORD PTR [esi]
  4106c5:	mov    ah,0x12
  4106c7:	cmp    ch,0xb2
  4106ca:	test   BYTE PTR gs:[esi+0x4f],ch
  4106ce:	lahf   
  4106cf:	adc    BYTE PTR [ecx-0x1e],0x8d
  4106d3:	inc    esp
  4106d4:	dec    esp
  4106d5:	dec    ebp
  4106d6:	sbb    DWORD PTR [ebx+eax*1-0x72],edi
  4106da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106db:	mov    dl,0xb5
  4106dd:	jmp    0xec5782f2
  4106e2:	or     esp,DWORD PTR [edi-0x52030dc3]
  4106e8:	mov    ds:0xf973d8fb,eax
  4106ed:	gs xchg ebx,eax
  4106ef:	and    cl,BYTE PTR ds:0xd24f43cb
  4106f5:	mov    edx,0x2c22bc2c
  4106fa:	adc    ah,BYTE PTR ds:0xfa69f557
  410700:	and    al,0xea
  410702:	dec    ecx
  410703:	sbb    DWORD PTR [edx-0x41a91720],esp
  410709:	nop
  41070a:	sar    DWORD PTR [ebp-0x13e71cd7],0x90
  410711:	jp     0x4106be
  410713:	pushf  
  410714:	addr16 icebp 
  410716:	xchg   DWORD PTR [edi+0x19da7451],edi
  41071c:	das    
  41071d:	out    0x2c,al
  41071f:	dec    eax
  410720:	mov    bl,0x86
  410722:	push   ebp
  410723:	aas    
  410724:	fild   QWORD PTR [ecx]
  410726:	lock fcom st(1)
  410729:	sti    
  41072a:	rcr    DWORD PTR [ebx-0x69bfef4b],1
  410730:	adc    ebp,edx
  410732:	add    eax,0xad21d08d
  410737:	mov    dh,0xf5
  410739:	popf   
  41073a:	jo     0x41074c
  41073c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41073d:	das    
  41073e:	push   edi
  41073f:	cwde   
  410740:	ror    DWORD PTR [ebx-0x1f446e98],0xdf
  410747:	and    eax,0x7bacbac9
  41074c:	push   ecx
  41074d:	xlat   BYTE PTR ds:[ebx]
  41074e:	xor    eax,0x437ca361
  410753:	xor    bl,cl
  410755:	add    eax,0xfd9d1ada
  41075a:	or     eax,0x80d7964e
  41075f:	jle    0x410721
  410761:	mov    bl,0xdc
  410763:	ds aaa 
  410765:	jo     0x4106f3
  410767:	fidivr DWORD PTR [esp+ebx*2+0x36]
  41076b:	out    dx,eax
  41076c:	mov    ds:0xf61294c0,eax
  410771:	dec    esi
  410772:	cmc    
  410773:	dec    esi
  410774:	sti    
  410775:	push   0xf2410fed
  41077a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41077b:	sbb    esp,DWORD PTR [esi+0x65a25564]
  410781:	mov    al,ds:0xdcf3b551
  410786:	pusha  
  410787:	push   0xa
  410789:	enter  0x5ddc,0x96
  41078d:	push   ebx
  41078e:	mov    esi,0xc9cbf323
  410793:	sub    BYTE PTR [esi-0x33a93d22],0xc9
  41079a:	outs   dx,BYTE PTR ds:[si]
  41079c:	inc    DWORD PTR [eax]
  41079e:	or     bh,dl
  4107a0:	leave  
  4107a1:	jp     0x41077e
  4107a3:	imul   ecx,DWORD PTR [edx],0xffffff80
  4107a6:	(bad)  
  4107a7:	cdq    
  4107a8:	jnp    0x41078d
  4107aa:	les    eax,FWORD PTR [eax]
  4107ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107ad:	jnp    0x41075a
  4107af:	loope  0x410784
  4107b1:	jge    0x410809
  4107b3:	push   cs
  4107b4:	hlt    
  4107b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b6:	in     al,dx
  4107b7:	push   esi
  4107b8:	add    dl,BYTE PTR [ebx-0x5bd421e7]
  4107be:	cld    
  4107bf:	dec    edi
  4107c0:	(bad)  
  4107c2:	out    dx,eax
  4107c3:	mov    bh,0xe5
  4107c5:	jmp    0x4107bf
  4107c7:	and    BYTE PTR [ebx-0xe9feea5],al
  4107cd:	xchg   ecx,eax
  4107ce:	mov    WORD PTR [ebx+0x1945febd],ss
  4107d4:	mov    ch,0xd2
  4107d6:	push   esp
  4107d7:	aas    
  4107d8:	push   ecx
  4107d9:	cmp    eax,0xdc10678
  4107de:	outs   dx,BYTE PTR ds:[esi]
  4107df:	iret   
  4107e0:	xchg   ebp,eax
  4107e1:	mov    al,0xed
  4107e3:	push   ebx
  4107e4:	push   esi
  4107e5:	test   eax,0x423ba5ae
  4107ea:	popa   
  4107eb:	or     DWORD PTR ds:0x2603f8f3,ebp
  4107f1:	lahf   
  4107f2:	xchg   edx,eax
  4107f3:	cs popf 
  4107f5:	fucomip st,st(7)
  4107f7:	xchg   ebx,eax
  4107f8:	push   ebp
  4107f9:	(bad)  
  4107fc:	inc    ecx
  4107fd:	jb     0x41082d
  4107ff:	dec    eax
  410800:	std    
  410801:	dec    edi
  410802:	or     dh,cl
  410804:	rcr    DWORD PTR [ecx],cl
  410806:	gs push esi
  410808:	push   ss
  410809:	jne    0x4107ce
  41080b:	jmp    0x410884
  41080d:	pop    ss
  41080e:	sub    ebx,DWORD PTR [eax]
  410810:	ffreep st(4)
  410812:	out    0xee,al
  410814:	shl    DWORD PTR [ebx+0x7fd07ee5],1
  41081a:	sbb    BYTE PTR [esi+0x54],dh
  41081d:	arpl   dx,ax
  41081f:	and    eax,0x585df707
  410824:	into   
  410825:	das    
  410826:	aad    0x24
  410828:	test   esi,edi
  41082a:	frstor [edi]
  41082c:	inc    esi
  41082d:	adc    BYTE PTR [ebx],bl
  41082f:	adc    esp,DWORD PTR [esi+0x318e66f2]
  410835:	es mov esp,0x744df268
  41083b:	icebp  
  41083c:	pop    ebp
  41083d:	sub    BYTE PTR [edx],al
  41083f:	mov    bh,0x2d
  410841:	sbb    al,0xcd
  410843:	pop    es
  410844:	mov    WORD PTR [edx-0x338ffddd],ss
  41084a:	mov    ebx,0xf6eb6ca8
  41084f:	daa    
  410850:	adc    esp,esi
  410852:	dec    esi
  410853:	xchg   edx,ebp
  410855:	mov    edx,0xe22892f6
  41085a:	add    ch,BYTE PTR [edi]
  41085c:	test   eax,0xaa239b5
  410861:	and    bl,BYTE PTR [edx+0x58]
  410864:	scas   al,BYTE PTR es:[edi]
  410865:	add    eax,0x5a9d66c9
  41086a:	and    BYTE PTR [ebx],al
  41086c:	loope  0x410859
  41086e:	adc    DWORD PTR [edi-0x5a],ecx
  410871:	and    esp,ecx
  410873:	push   ebx
  410874:	enter  0xd27d,0x60
  410878:	push   ss
  410879:	jge    0x410803
  41087b:	mov    ebx,0x1cdce76
  410880:	add    edi,0xfffffff0
  410883:	cmp    al,dh
  410885:	or     BYTE PTR [esi],bh
  410887:	int3   
  410888:	(bad)  
  410889:	aam    0xc7
  41088b:	xchg   edx,eax
  41088c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41088d:	into   
  41088e:	call   DWORD PTR [esi+0xa5355b1]
  410894:	pop    ds
  410895:	leave  
  410896:	ror    DWORD PTR [ebx+esi*2],0x78
  41089a:	or     BYTE PTR [ecx],0x7d
  41089d:	dec    ebx
  41089e:	adc    ch,BYTE PTR [edi-0x74]
  4108a1:	data16 sbb al,0x19
  4108a4:	pop    esi
  4108a5:	xchg   BYTE PTR [ebx+esi*2+0x30204576],ch
  4108ac:	jmp    0x4108b1
  4108ae:	pop    ds
  4108af:	loope  0x4108ec
  4108b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4108b2:	mov    eax,ds:0xa3a09a1f
  4108b7:	dec    ebx
  4108b8:	mov    ds:0xa011f52f,al
  4108bd:	into   
  4108be:	cmp    esi,DWORD PTR [edx]
  4108c0:	(bad)  [edi-0xc325bb2]
  4108c6:	dec    eax
  4108c7:	test   eax,0x27b0af52
  4108cc:	dec    esi
  4108cd:	and    BYTE PTR [esi-0x74966032],0xc6
  4108d4:	test   BYTE PTR [edi],bh
  4108d6:	adc    eax,0xfad215ba
  4108db:	cs hlt 
  4108dd:	std    
  4108de:	repz mov al,0xf0
  4108e1:	sbb    esp,DWORD PTR [ebx+0x1c]
  4108e4:	add    BYTE PTR [ecx-0x1],dl
  4108e7:	inc    cx
  4108e9:	dec    esi
  4108ea:	jae    0x410901
  4108ec:	fisttp WORD PTR [edx]
  4108ee:	pop    ss
  4108ef:	or     DWORD PTR [ebx-0x516f6513],ebx
  4108f5:	xchg   ebx,eax
  4108f6:	inc    ecx
  4108f7:	add    al,0xf9
  4108f9:	sub    al,0x62
  4108fb:	or     cl,BYTE PTR [esi+ecx*8+0x53]
  4108ff:	push   ss
  410900:	scas   al,BYTE PTR es:[edi]
  410901:	jae    0x41089d
  410903:	xchg   edi,eax
  410904:	rcl    DWORD PTR [edi-0x22],1
  410907:	es push esi
  410909:	je     0x410898
  41090b:	mov    ebp,0x13b2f304
  410910:	test   eax,0x1e04a5d1
  410915:	xor    BYTE PTR [edi],ah
  410917:	mov    bl,0x5f
  410919:	js     0x4108e1
  41091b:	push   ss
  41091c:	out    dx,al
  41091d:	push   0xffffffe7
  41091f:	xor    ebx,edx
  410921:	push   eax
  410922:	dec    ebp
  410923:	sbb    DWORD PTR [ecx],ebx
  410925:	xor    BYTE PTR [ebx-0x6d],ah
  410928:	rcl    BYTE PTR [ecx-0x3e],1
  41092b:	mov    BYTE PTR [esi+0x3cc80dd8],dl
  410931:	(bad)  
  410932:	or     BYTE PTR [edx],bh
  410934:	pop    ds
  410935:	mov    dl,0xdf
  410938:	xchg   edi,eax
  410939:	imul   esp,edi,0x70
  41093c:	add    BYTE PTR [ebp-0x39c2a4ae],bh
  410942:	adc    al,dh
  410944:	jb     0x41095a
  410946:	shl    edx,1
  410948:	ins    DWORD PTR es:[edi],dx
  410949:	inc    eax
  41094a:	pop    ebp
  41094b:	or     esp,DWORD PTR [eax+0x5c]
  41094e:	std    
  41094f:	out    dx,eax
  410950:	int3   
  410951:	lods   al,BYTE PTR ds:[esi]
  410952:	pop    ecx
  410953:	scas   eax,DWORD PTR es:[edi]
  410954:	hlt    
  410955:	mov    ebx,0xf9f0e52
  41095a:	fidiv  WORD PTR [ebp-0x37]
  41095d:	(bad)  
  41095e:	sub    ebp,ebx
  410960:	or     edi,DWORD PTR [ecx+ecx*8-0x5ccbb360]
  410967:	cld    
  410968:	ins    BYTE PTR es:[edi],dx
  410969:	sbb    eax,0xd2a3a301
  41096e:	jne    0x4109c2
  410970:	lea    ebx,[ecx]
  410972:	and    al,0x68
  410974:	lds    esp,FWORD PTR [edi-0x4]
  410977:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410978:	or     ch,BYTE PTR [ecx+0x7a]
  41097b:	mov    esi,0xe0dabafd
  410980:	mov    ds:0x1f3af17c,al
  410985:	push   ebp
  410986:	enter  0xcd68,0xfa
  41098a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41098b:	xchg   edx,eax
  41098c:	inc    edi
  41098d:	push   ds
  41098e:	mov    ebx,0x741743dc
  410993:	les    esi,FWORD PTR [esp+ebp*8-0x4f]
  410997:	loop   0x410927
  410999:	(bad)  
  41099a:	sti    
  41099b:	sbb    eax,0xc467a2e3
  4109a0:	mov    ah,0x50
  4109a2:	pop    eax
  4109a3:	fs sub al,0xc6
  4109a6:	sbb    BYTE PTR [eax],cl
  4109a8:	pop    es
  4109a9:	pop    edi
  4109aa:	lds    ebp,FWORD PTR [edx-0x13e301e1]
  4109b0:	sub    esi,esi
  4109b2:	xor    eax,0x77c0d706
  4109b7:	(bad)  
  4109b8:	retf   0x2d3
  4109bb:	sub    eax,0x418de81e
  4109c0:	push   esi
  4109c1:	out    0xbc,al
  4109c3:	mov    eax,ds:0x5f7d8fc5
  4109c8:	push   esi
  4109c9:	hlt    
  4109ca:	int    0x93
  4109cc:	mov    ebx,0x4e85d99f
  4109d1:	into   
  4109d2:	or     bh,dl
  4109d4:	ins    DWORD PTR es:[edi],dx
  4109d5:	enter  0x7f27,0x6d
  4109d9:	bound  edx,QWORD PTR [esi-0x53a6a04d]
  4109df:	fidiv  DWORD PTR [edx-0x726fa976]
  4109e5:	xor    eax,0x4cfef7cb
  4109ea:	push   ds
  4109eb:	out    0x8b,eax
  4109ed:	(bad)  
  4109ee:	lds    ebx,FWORD PTR [edx-0x7e62cd72]
  4109f4:	jae    0x410a28
  4109f6:	or     al,0xe
  4109f8:	and    dh,dl
  4109fa:	(bad)  
  4109fc:	ja     0x410a34
  4109fe:	je     0x410a41
  410a00:	call   DWORD PTR [eax+0x25110c]
  410a06:	cwde   
  410a07:	pop    ecx
  410a08:	mov    dl,0x9c
  410a0a:	imul   eax,DWORD PTR [eax+0x12],0x1c4ae4ff
  410a11:	(bad)  
  410a12:	dec    esp
  410a13:	add    BYTE PTR ds:0x81514021,ah
  410a19:	push   esp
  410a1a:	out    0x35,eax
  410a1c:	push   esi
  410a1d:	adc    edx,eax
  410a1f:	add    DWORD PTR [esp+ecx*8+0x4590056],esi
  410a26:	add    eax,0x506f7499
  410a2b:	xor    edi,DWORD PTR [edx-0x16475958]
  410a31:	out    dx,eax
  410a32:	aaa    
  410a33:	xor    dh,cl
  410a35:	pop    ecx
  410a36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a37:	push   esi
  410a38:	adc    esp,DWORD PTR [edi-0x4e441be4]
  410a3e:	jge    0x410a66
  410a40:	xor    DWORD PTR [esi+0x24],0x52
  410a44:	out    0x6b,al
  410a46:	push   cs
  410a47:	out    dx,al
  410a48:	xchg   ebp,eax
  410a49:	mov    ds:0xb3dbfe45,al
  410a4e:	ret    0xc94
  410a51:	adc    DWORD PTR [esi],eax
  410a53:	cli    
  410a54:	leave  
  410a55:	cmp    BYTE PTR [esi+0x4287bedc],bl
  410a5b:	mul    edx
  410a5d:	jo     0x410ac2
  410a5f:	dec    ecx
  410a60:	(bad)  
  410a61:	iret   
  410a62:	ins    BYTE PTR es:[edi],dx
  410a63:	mov    bl,0x1d
  410a65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a66:	cs rcl cl,cl
  410a69:	test   eax,0x824e0fbf
  410a6e:	je     0x410ac5
  410a70:	pushf  
  410a71:	leave  
  410a72:	cmp    esp,ebx
  410a74:	sub    al,0xb3
  410a76:	aad    0xa1
  410a78:	mov    ebx,0x82731217
  410a7d:	aad    0x5b
  410a7f:	int3   
  410a80:	(bad)
  410a84:	imul   eax,DWORD PTR [edx-0x80],0x323bbec9
  410a8b:	inc    esi
  410a8c:	add    ah,al
  410a8e:	fsub   DWORD PTR [esi]
  410a90:	mov    al,0xa
  410a92:	mov    bh,0xb5
  410a94:	stc    
  410a95:	imul   ecx,ebx,0x9c4eeb60
  410a9b:	pop    ss
  410a9c:	sub    DWORD PTR [eax-0xa],ebx
  410a9f:	(bad)  
  410aa0:	repnz fadd DWORD PTR ds:0x55f73cb2
  410aa7:	retf   
  410aa8:	xchg   dh,dh
  410aaa:	iret   
  410aab:	cmc    
  410aac:	dec    ecx
  410aad:	dec    ebp
  410aae:	adc    ecx,ebp
  410ab0:	sbb    eax,0xaa28ebc2
  410ab5:	mov    cl,0xa0
  410ab7:	xchg   ebx,eax
  410ab8:	push   cs
  410ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410aba:	icebp  
  410abb:	dec    edi
  410abc:	adc    ebx,esi
  410abe:	push   cs
  410abf:	enter  0x8c46,0xc2
  410ac3:	dec    eax
  410ac4:	imul   ecx,edx,0x41
  410ac7:	test   ch,cl
  410ac9:	arpl   WORD PTR [edx-0x51],di
  410acc:	mov    ds:0xf78d13be,eax
  410ad1:	lahf   
  410ad2:	xchg   edx,eax
  410ad3:	sub    al,0x9b
  410ad5:	dec    ebp
  410ad6:	xor    DWORD PTR [ebp-0x1e4792f6],edi
  410adc:	mov    BYTE PTR ds:0x1600028a,dh
  410ae2:	or     eax,0x712822e9
  410ae7:	pop    edx
  410ae8:	xchg   BYTE PTR [ebp-0x18a3f0b9],al
  410aee:	mov    ?,WORD PTR [edi+0x497b3771]
  410af4:	jmp    0x25e5:0x7708bc48
  410afb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410afc:	jmp    0x97c4b65e
  410b01:	sub    ebp,DWORD PTR [eax]
  410b03:	ret    
  410b04:	cdq    
  410b05:	inc    edx
  410b06:	out    dx,eax
  410b07:	aas    
  410b08:	pop    ebx
  410b09:	sbb    eax,0x1dc49b5
  410b0e:	mov    ?,ebx
  410b10:	js     0x410af4
  410b12:	fwait
  410b13:	sbb    DWORD PTR [esp+esi*2],0x6f
  410b17:	pop    ds
  410b18:	std    
  410b19:	mov    eax,0x710dc112
  410b1e:	jmp    esi
  410b20:	adc    BYTE PTR [eax],ah
  410b22:	ins    BYTE PTR es:[edi],dx
  410b23:	jp     0x410b27
  410b25:	das    
  410b26:	pop    ebp
  410b27:	imul   ebx,DWORD PTR [ebx],0x2f314302
  410b2d:	pusha  
  410b2e:	jno    0x410b88
  410b30:	lahf   
  410b31:	pop    ebx
  410b32:	xor    DWORD PTR [ebx-0x5b],0xffffffd6
  410b36:	fdivr  DWORD PTR [edx+0x4b]
  410b39:	mul    DWORD PTR [ecx-0x4d]
  410b3c:	push   edx
  410b3d:	or     al,0xc7
  410b3f:	repz pop edx
  410b41:	mov    esi,0x52b6811c
  410b46:	mov    bh,dh
  410b48:	rol    BYTE PTR [edi+ecx*2+0x12],cl
  410b4c:	push   ebp
  410b4d:	push   esp
  410b4e:	xchg   ecx,eax
  410b4f:	pushf  
  410b50:	pop    ds
  410b51:	stos   BYTE PTR es:[edi],al
  410b52:	pop    eax
  410b53:	push   es
  410b54:	or     al,0x17
  410b56:	fwait
  410b57:	dec    DWORD PTR [edi+0x27743ff2]
  410b5d:	outs   dx,DWORD PTR ds:[esi]
  410b5e:	sub    cl,ch
  410b60:	jp     0x410b60
  410b62:	pusha  
  410b63:	pop    es
  410b64:	loop   0x410b78
  410b66:	and    BYTE PTR [edi+0x12],cl
  410b69:	shl    BYTE PTR [eax+edi*8],cl
  410b6c:	add    dh,BYTE PTR [eax-0x71]
  410b6f:	ss pop ebx
  410b71:	sahf   
  410b72:	xlat   BYTE PTR ds:[ebx]
  410b73:	mov    cl,0xc5
  410b75:	push   ebp
  410b76:	adc    eax,0xcec5ce6a
  410b7b:	in     al,0x27
  410b7d:	mov    ds:0x64ea3767,eax
  410b82:	pop    esi
  410b83:	dec    edx
  410b84:	sbb    eax,0x57eee189
  410b89:	push   0x3d00d450
  410b8e:	mov    al,ds:0xce82480b
  410b93:	jl     0x410b8c
  410b95:	cli    
  410b96:	jg     0x410bb8
  410b98:	outs   dx,BYTE PTR ds:[esi]
  410b99:	dec    ebp
  410b9a:	add    BYTE PTR ds:0x8a2c3751,al
  410ba0:	jmp    0x8b4c:0x987414a7
  410ba7:	dec    edi
  410ba8:	outs   dx,DWORD PTR ds:[esi]
  410ba9:	adc    al,0x6f
  410bab:	dec    ecx
  410bac:	cmp    eax,0x51ae8d73
  410bb1:	jmp    0x410c03
  410bb3:	adc    al,0xbe
  410bb5:	and    ebp,DWORD PTR [edi]
  410bb7:	iret   
  410bb8:	push   esp
  410bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410bba:	clc    
  410bbb:	jge    0x410c37
  410bbd:	sti    
  410bbe:	popf   
  410bbf:	lea    eax,[ecx]
  410bc1:	repnz sub BYTE PTR [eax+0x665b43aa],0x80
  410bc9:	mov    ds:0x38d67175,eax
  410bce:	fwait
  410bcf:	pop    ebx
  410bd0:	xchg   esi,eax
  410bd1:	push   ds
  410bd2:	cs jle 0x410b8b
  410bd5:	cdq    
  410bd6:	and    bl,bl
  410bd8:	sub    ecx,ebp
  410bda:	pop    esp
  410bdb:	cmp    cl,BYTE PTR ds:0x62d613f0
  410be1:	add    eax,0x7eb9efd9
  410be6:	test   eax,0xa3bb8ee6
  410beb:	cmp    ebx,esp
  410bed:	lock in eax,0xe
  410bf0:	hlt    
  410bf1:	push   ss
  410bf2:	xor    al,0xc1
  410bf4:	jecxz  0x410c0d
  410bf6:	push   ecx
  410bf7:	call   0x5feb:0x2eba0bfd
  410bfe:	pop    ebp
  410bff:	or     al,0xd1
  410c01:	lock sbb al,0x4d
  410c04:	push   esp
  410c05:	cmp    eax,DWORD PTR [eax-0x25ece10c]
  410c0b:	clc    
  410c0c:	fcom   QWORD PTR [ecx-0x10]
  410c0f:	out    dx,al
  410c10:	mov    eax,0x97f3f17
  410c15:	sbb    DWORD PTR [edx-0x3f224a58],ecx
  410c1b:	loopne 0x410c8c
  410c1d:	mov    esp,0x8ae0e059
  410c22:	and    BYTE PTR [edi],ch
  410c24:	repz push ecx
  410c26:	mov    ch,0xf
  410c28:	ja     0x410bb0
  410c2a:	or     ch,al
  410c2c:	into   
  410c2d:	mov    eax,0xe0c48f43
  410c32:	sub    eax,esi
  410c34:	adc    eax,0x9c18714b
  410c39:	cmp    BYTE PTR [ebp+0x17ca413b],ch
  410c3f:	mov    ah,0x60
  410c41:	std    
  410c42:	adc    edx,DWORD PTR [edx+ecx*1]
  410c45:	and    ah,ah
  410c47:	mov    edx,0x7b7d577f
  410c4c:	sbb    eax,0x73f45c9c
  410c51:	inc    edi
  410c52:	stos   BYTE PTR es:[edi],al
  410c53:	add    DWORD PTR [edx],eax
  410c55:	iret   
  410c56:	cs jne 0x410c0d
  410c59:	out    dx,al
  410c5a:	sbb    esi,DWORD PTR gs:[esi-0x62]
  410c5e:	mov    ebp,0x617b90e9
  410c63:	(bad)  
  410c64:	adc    al,0x39
  410c66:	sub    eax,0x47019a52
  410c6b:	fistp  QWORD PTR [ebp-0x3e80ef9c]
  410c71:	popf   
  410c72:	lods   al,BYTE PTR ds:[esi]
  410c73:	sbb    bl,al
  410c75:	pop    ecx
  410c76:	mov    eax,ds:0xd76a4a87
  410c7b:	add    dh,BYTE PTR [edx+0x3b75962]
  410c81:	mov    ds:0x633502f3,al
  410c86:	or     eax,0x89b758c8
  410c8b:	mov    dl,0x3a
  410c8d:	sub    ch,BYTE PTR [ecx+0x246e78a]
  410c93:	jmp    0x410c6a
  410c95:	or     bl,ah
  410c97:	ds sbb eax,0x70d104f5
  410c9d:	leave  
  410c9e:	mov    edi,0xe1c3d5f9
  410ca3:	sahf   
  410ca4:	mov    WORD PTR [eax+0x3e],gs
  410ca7:	push   0x42501b12
  410cac:	jle    0x410c7a
  410cae:	xchg   esp,eax
  410caf:	sub    eax,0x432381f0
  410cb4:	or     eax,0x560a5818
  410cb9:	jo     0x410c7e
  410cbb:	aam    0xe7
  410cbd:	int    0x19
  410cbf:	fcmovne st,st(4)
  410cc1:	xchg   ch,al
  410cc3:	xor    ebx,DWORD PTR [edi-0x64]
  410cc6:	lock ficom DWORD PTR [edi]
  410cc9:	or     al,0x43
  410ccb:	sbb    DWORD PTR [ebp-0x63ace6ec],eax
  410cd1:	and    BYTE PTR [ecx+0x5c],0xd8
  410cd5:	mov    bl,0x95
  410cd7:	sbb    ch,0x1d
  410cda:	dec    ebx
  410cdb:	int3   
  410cdc:	int3   
  410cdd:	jns    0x410c79
  410cdf:	push   esi
  410ce0:	dec    esp
  410ce1:	repz dec ecx
  410ce3:	xchg   edx,eax
  410ce4:	adc    DWORD PTR [ebx],esi
  410ce6:	push   edi
  410ce7:	sbb    eax,0x70957068
  410cec:	and    edi,edi
  410cee:	call   0x16ef:0x8b504d1c
  410cf5:	inc    esi
  410cf6:	outs   dx,DWORD PTR ds:[esi]
  410cf7:	mov    cs,WORD PTR [esi+0x285db162]
  410cfd:	sbb    dh,BYTE PTR [edx+ebx*1]
  410d00:	xchg   ebp,eax
  410d01:	pop    esi
  410d02:	cmp    edi,ebp
  410d04:	mov    eax,ds:0x3b2cab2
  410d09:	push   eax
  410d0a:	mov    edi,edi
  410d0c:	inc    ebp
  410d0d:	retf   0xbfa7
  410d10:	and    al,0xbf
  410d12:	int3   
  410d13:	mov    dh,0x2
  410d15:	inc    esi
  410d16:	dec    esp
  410d17:	fisttp QWORD PTR [eax]
  410d19:	fucomi st,st(3)
  410d1b:	jg     0x410d3b
  410d1d:	pop    edx
  410d1e:	lea    edi,[edx-0x21c30767]
  410d24:	pop    ebx
  410d25:	lods   al,BYTE PTR ds:[esi]
  410d26:	lahf   
  410d27:	shl    ebx,0xbc
  410d2a:	test   DWORD PTR [edi+0x4c],ebp
  410d2d:	cmp    BYTE PTR es:0xf6ecf8a5,dl
  410d34:	sti    
  410d35:	push   0xffffffea
  410d37:	mov    ecx,0xe2addb92
  410d3c:	sahf   
  410d3d:	jecxz  0x410d6e
  410d3f:	loopne 0x410cc4
  410d41:	sar    cl,0xbd
  410d44:	jecxz  0x410d2d
  410d46:	xor    ebp,eax
  410d48:	jbe    0x410d55
  410d4a:	push   es
  410d4b:	mov    eax,ds:0xd052a031
  410d50:	jg     0x410da5
  410d52:	xchg   bl,ah
  410d54:	jns    0x410d5a
  410d56:	fstp   TBYTE PTR [eax]
  410d58:	in     eax,dx
  410d59:	fmul   st,st(0)
  410d5b:	aad    0x69
  410d5d:	pop    eax
  410d5e:	stos   DWORD PTR es:[edi],eax
  410d5f:	(bad)  
  410d60:	in     al,dx
  410d61:	stc    
  410d62:	popa   
  410d63:	mov    cl,0x9b
  410d65:	xor    ah,dl
  410d67:	fdiv   QWORD PTR [ebx+ecx*4-0xa3df50e]
  410d6e:	inc    edx
  410d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d70:	in     eax,dx
  410d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d72:	imul   ecx,DWORD PTR [edx-0x7c433813],0x62078a44
  410d7c:	shr    cl,cl
  410d7e:	arpl   WORD PTR [ebp+0x22b67771],sp
  410d84:	inc    edx
  410d85:	xor    DWORD PTR [ebp-0x53],esp
  410d88:	and    eax,0x66b826c5
  410d8d:	arpl   WORD PTR [esi+0xc],sp
  410d90:	push   ecx
  410d91:	leave  
  410d92:	test   DWORD PTR [edi-0x3167e50f],0x3f2631c3
  410d9c:	call   0x3048:0x5f75a579
  410da3:	or     cl,BYTE PTR ds:0x2a64828b
  410da9:	jo     0x410e27
  410dab:	jmp    0x76a2d8e6
  410db0:	(bad)  
  410db1:	jecxz  0x410de7
  410db3:	pop    es
  410db4:	dec    ebx
  410db5:	ret    0x506b
  410db8:	lods   al,BYTE PTR ds:[esi]
  410db9:	pop    ss
  410dba:	into   
  410dbb:	cmp    eax,0x8cbba11
  410dc0:	dec    esp
  410dc1:	ins    DWORD PTR es:[edi],dx
  410dc2:	call   0x5f9e4700
  410dc7:	(bad)  
  410dc8:	or     eax,0xe94474b4
  410dcd:	pop    edx
  410dce:	lahf   
  410dcf:	add    DWORD PTR [esp+eax*1-0x32dd867],edi
  410dd6:	jge    0x410dfc
  410dd8:	sub    BYTE PTR [esi-0x2844c1c1],0xdf
  410ddf:	inc    eax
  410de0:	popa   
  410de1:	pop    eax
  410de2:	js     0x410e57
  410de4:	jmp    0x410d97
  410de6:	cmp    al,0xec
  410de8:	jp     0x410d9d
  410dea:	jl     0x410dd5
  410dec:	fst    DWORD PTR [eax]
  410dee:	scas   eax,DWORD PTR es:[edi]
  410def:	push   ecx
  410df0:	sbb    DWORD PTR [ebx+0x25fef51],eax
  410df6:	and    DWORD PTR [esi+0x5a],esp
  410df9:	pop    esp
  410dfa:	inc    BYTE PTR [edi]
  410dfc:	imul   edi,DWORD PTR [esi],0xffffffd6
  410dff:	stos   DWORD PTR es:[edi],eax
  410e00:	scas   eax,DWORD PTR es:[edi]
  410e01:	lods   al,BYTE PTR ds:[esi]
  410e02:	ret    
  410e03:	(bad)  
  410e04:	js     0x410e33
  410e06:	xchg   esi,esi
  410e08:	stc    
  410e09:	pop    DWORD PTR [esi-0x4e5a8289]
  410e0f:	add    BYTE PTR [esi+0x25],0x97
  410e13:	sbb    DWORD PTR [ebp-0x7f],0x35
  410e17:	sbb    eax,0xca971a48
  410e1c:	push   ds
  410e1d:	sti    
  410e1e:	and    ebp,DWORD PTR [edx]
  410e20:	jnp    0x410dc2
  410e22:	imul   esi,DWORD PTR [ebx],0x6d
  410e25:	or     BYTE PTR [edi],0x14
  410e28:	fsqrt  
  410e2a:	les    si,DWORD PTR [edx+0x13]
  410e2e:	cmc    
  410e2f:	fisttp WORD PTR ds:0x41837f55
  410e35:	aam    0xc3
  410e37:	mov    ?,WORD PTR [ecx+0x2dcc729e]
  410e3d:	push   edx
  410e3e:	and    DWORD PTR [edi+0x10811e09],esp
  410e44:	add    al,0xc0
  410e46:	aas    
  410e47:	or     DWORD PTR [eax+0x1c8fd0f],edx
  410e4d:	aam    0x9b
  410e4f:	sti    
  410e50:	or     dh,BYTE PTR [ecx]
  410e52:	adc    BYTE PTR [edx-0x532f4966],ch
  410e58:	sbb    ch,BYTE PTR [ebx+0x1c03cba0]
  410e5e:	cmp    dh,BYTE PTR [ebx+0x6275de0b]
  410e64:	fbstp  TBYTE PTR [ebp+ecx*1-0x23fd40e2]
  410e6b:	fwait
  410e6c:	xchg   esi,eax
  410e6d:	ror    DWORD PTR [ebx],0x32
  410e70:	and    eax,0xbc46ffea
  410e75:	or     eax,0xc7a0e3fc
  410e7a:	aad    0xf6
  410e7c:	pushf  
  410e7d:	adc    ah,BYTE PTR [edi+0x1a]
  410e80:	inc    ebp
  410e81:	add    ebx,ecx
  410e83:	cdq    
  410e84:	inc    ebx
  410e85:	sbb    DWORD PTR [eax-0xf],edx
  410e88:	jae    0x410e45
  410e8a:	retf   
  410e8b:	daa    
  410e8c:	mov    ah,0x2
  410e8e:	bound  ebx,QWORD PTR [ecx]
  410e90:	imul   eax,ebp,0x67
  410e93:	repnz aam 0xf4
  410e96:	les    edx,FWORD PTR [edi+eiz*1]
  410e99:	div    BYTE PTR [ebp-0x60f2ee2b]
  410e9f:	lods   al,BYTE PTR ds:[esi]
  410ea0:	retf   
  410ea1:	pop    edx
  410ea2:	ins    BYTE PTR es:[edi],dx
  410ea3:	mov    ebx,0x1b501a28
  410ea8:	sbb    al,0xe5
  410eaa:	push   ss
  410eab:	out    0xfb,eax
  410ead:	inc    esi
  410eae:	(bad)  
  410eaf:	mov    dh,0xc7
  410eb1:	int    0xeb
  410eb3:	jl     0x410f2f
  410eb5:	cmp    al,0xdb
  410eb7:	mov    ebp,ebp
  410eb9:	cmp    al,0xf3
  410ebb:	jb     0x410edb
  410ebd:	outs   dx,BYTE PTR ds:[esi]
  410ebe:	rol    DWORD PTR [ebx+0x4ca645c8],0x65
  410ec5:	jae    0x410ed9
  410ec7:	mov    ebx,0x22043d47
  410ecc:	and    BYTE PTR [eax],0x6
  410ecf:	imul   ebp,DWORD PTR [edi+0x6ba87499],0x21
  410ed6:	push   ebx
  410ed7:	or     DWORD PTR cs:[ebx],esp
  410eda:	cmp    bl,bl
  410edc:	outs   dx,BYTE PTR ds:[esi]
  410edd:	mov    es,ecx
  410edf:	pop    ds
  410ee0:	shl    BYTE PTR [ecx+0x79a234e4],1
  410ee6:	outs   dx,BYTE PTR ds:[esi]
  410ee7:	cwde   
  410ee8:	sub    DWORD PTR [edi+0x4e999dc9],ebp
  410eee:	clc    
  410eef:	in     al,dx
  410ef0:	cmp    al,0x13
  410ef2:	pusha  
  410ef3:	push   esi
  410ef4:	sbb    eax,0x4b8193ae
  410ef9:	lods   al,BYTE PTR ds:[esi]
  410efa:	adc    bh,al
  410efc:	loopne 0x410ef0
  410efe:	mov    ecx,DWORD PTR [eax-0x47]
  410f01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f02:	dec    esi
  410f03:	rcr    edx,1
  410f05:	adc    edx,ebp
  410f07:	sub    DWORD PTR [esi+0x59ad60de],ebp
  410f0d:	jmp    DWORD PTR [ecx]
  410f0f:	mov    BYTE PTR [ebx],ch
  410f11:	mov    al,0x78
  410f13:	add    ecx,DWORD PTR [ecx+edx*2-0xeb2a604]
  410f1a:	xchg   ebx,eax
  410f1b:	int    0xc
  410f1d:	pop    ebp
  410f1e:	xor    DWORD PTR [esi+edx*4+0x5b3f89f7],esi
  410f25:	or     BYTE PTR [ebx-0x453492c5],al
  410f2b:	inc    edx
  410f2c:	inc    esi
  410f2d:	aad    0x34
  410f2f:	add    BYTE PTR [eax+0x5c],ch
  410f32:	sub    edi,esi
  410f34:	sub    eax,0x96fefc9
  410f39:	mov    BYTE PTR [ecx],ch
  410f3b:	into   
  410f3c:	call   0x23af8c95
  410f41:	and    dh,BYTE PTR [eax+0x14]
  410f44:	push   0x34fa2df7
  410f49:	mov    esi,gs
  410f4b:	adc    DWORD PTR [ebp-0x54],0xd28267d1
  410f52:	rcr    BYTE PTR [ecx-0x49f2bab6],cl
  410f58:	dec    ebx
  410f59:	stos   BYTE PTR es:[edi],al
  410f5a:	adc    BYTE PTR [ebp+0x1f77fb74],ah
  410f60:	inc    eax
  410f61:	mov    ah,0xfe
  410f63:	jg     0x410fbf
  410f65:	inc    eax
  410f66:	mov    cl,dl
  410f68:	sar    edx,0x80
  410f6b:	push   edi
  410f6c:	and    al,0x2e
  410f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f6f:	aas    
  410f70:	outs   dx,DWORD PTR ds:[esi]
  410f71:	nop
  410f72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f73:	xchg   esi,eax
  410f74:	fst    QWORD PTR [ebx+0x14]
  410f77:	je     0x410f52
  410f79:	(bad)  
  410f7a:	aam    0xac
  410f7c:	jecxz  0x410f7e
  410f7e:	pop    esi
  410f7f:	sahf   
  410f80:	call   0xe25a:0xbee393a5
  410f87:	data16 je 0x410f41
  410f8a:	out    dx,al
  410f8b:	mov    eax,0x91cf97f5
  410f90:	xchg   edi,eax
  410f91:	inc    ecx
  410f92:	data16 repz ja 0x410f68
  410f96:	cwde   
  410f97:	mov    eax,0x8b88d0d5
  410f9c:	mov    eax,0xcba6b3ab
  410fa1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410fa2:	xor    BYTE PTR [edi+0x29],dl
  410fa5:	ins    DWORD PTR es:[edi],dx
  410fa6:	out    0x65,al
  410fa8:	in     eax,dx
  410fa9:	sub    DWORD PTR [ebp-0x3a4d1f39],eax
  410faf:	jle    0x410f40
  410fb1:	test   BYTE PTR [edx-0x34],cl
  410fb4:	push   edi
  410fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fb6:	fwait
  410fb7:	and    DWORD PTR [ecx+0x5da47046],esi
  410fbd:	mov    ch,0x37
  410fbf:	xchg   DWORD PTR [edi-0x31],ecx
  410fc2:	mov    bl,0x42
  410fc4:	gs and edi,eax
  410fc7:	not    bh
  410fc9:	fwait
  410fca:	(bad)  
  410fcb:	imul   DWORD PTR [eax-0x5a]
  410fce:	and    BYTE PTR [ecx+0x54],ch
  410fd1:	cmp    dh,BYTE PTR [eax+0x3aa2a5b4]
  410fd7:	inc    ebp
  410fd8:	jmp    0x8018c2b4
  410fdd:	sub    BYTE PTR [ebx],dl
  410fdf:	test   al,0x17
  410fe1:	mov    eax,ds:0x824544fb
  410fe6:	push   es
  410fe7:	jbe    0x410fa8
  410fe9:	jg     0x410ff1
  410feb:	pop    eax
  410fec:	int    0xa
  410fee:	cmp    edi,DWORD PTR [edi+0x31]
  410ff1:	dec    eax
  410ff2:	adc    BYTE PTR [ecx+0x508e91a7],0xd6
  410ff9:	cmp    DWORD PTR [esi-0x69ac3387],ebp
  410fff:	sbb    eax,0x275b3c99
  411004:	pop    edx
  411005:	dec    esp
  411006:	lahf   
  411007:	out    0xe7,al
  411009:	dec    ecx
  41100a:	xor    al,0x88
  41100c:	les    ebx,FWORD PTR [edx]
  41100e:	aas    
  41100f:	ffree  st(3)
  411011:	fadd   DWORD PTR [edx+0x7ac78906]
  411017:	stos   DWORD PTR es:[edi],eax
  411018:	mov    ecx,0x4797dbc9
  41101d:	add    al,0x72
  41101f:	xchg   DWORD PTR [ebx-0x57187615],ebp
  411025:	ucomiss xmm5,xmm3
  411028:	xchg   esp,eax
  411029:	cdq    
  41102a:	xor    al,0xa7
  41102c:	bound  esp,QWORD PTR [edx-0x3]
  41102f:	call   FWORD PTR [esi]
  411031:	pop    esi
  411032:	fcomi  st,st(6)
  411034:	out    dx,eax
  411035:	es sti 
  411037:	in     eax,0xea
  411039:	mov    ebx,0x27dadb9b
  41103e:	stc    
  41103f:	out    0x6d,eax
  411041:	cs inc edx
  411043:	or     al,0xdd
  411045:	mov    DWORD PTR [edx],eax
  411047:	mov    ecx,edi
  411049:	dec    ebx
  41104a:	stos   DWORD PTR es:[edi],eax
  41104b:	call   0x310e:0x3a75fd
  411052:	lahf   
  411053:	lock int 0x65
  411056:	push   ebp
  411057:	adc    BYTE PTR [edi],ah
  411059:	gs (bad) 
  41105b:	mov    ecx,0xa01be2b5
  411060:	and    eax,ebx
  411062:	movzx  esp,BYTE PTR [ebx-0x7229b54b]
  411069:	and    ebx,DWORD PTR [edi+0x1]
  41106c:	mov    edi,0x5c3d8464
  411071:	xor    eax,0xa7e53517
  411076:	daa    
  411077:	ins    DWORD PTR es:[edi],dx
  411078:	xor    al,0xfe
  41107a:	call   0xb6c18b44
  41107f:	xchg   ebp,eax
  411080:	out    dx,eax
  411081:	sti    
  411082:	fwait
  411083:	int3   
  411084:	jge    0x4110b9
  411086:	jp     0x41102c
  411088:	out    dx,al
  411089:	lahf   
  41108a:	or     eax,0xeb0d0c0f
  41108f:	mov    dl,0x92
  411091:	dec    edi
  411092:	mov    edi,0x9646e229
  411097:	adc    al,al
  411099:	cdq    
  41109a:	loop   0x411056
  41109c:	pop    ebp
  41109d:	jmp    0x4110a2
  41109f:	out    dx,al
  4110a0:	in     eax,dx
  4110a1:	data16 ins BYTE PTR es:[edi],dx
  4110a3:	sub    DWORD PTR [esi+0x20],edx
  4110a6:	mov    edi,0xf3a32689
  4110ab:	popa   
  4110ac:	mov    cl,0x96
  4110ae:	inc    ebx
  4110af:	cwde   
  4110b0:	jmp    0x4110a5
  4110b2:	mov    bh,0x95
  4110b4:	scas   eax,DWORD PTR es:[edi]
  4110b5:	inc    esp
  4110b6:	push   ds
  4110b7:	lock maxps xmm1,XMMWORD PTR [ecx+0x5e]
  4110bc:	je     0x41107c
  4110be:	mov    al,0x89
  4110c0:	jmp    0x1570da92
  4110c5:	sahf   
  4110c6:	stos   BYTE PTR es:[edi],al
  4110c7:	(bad)  
  4110c8:	mov    eax,0x87d378d1
  4110cd:	pop    ss
  4110ce:	mov    ds:0xf637162a,al
  4110d3:	pop    eax
  4110d4:	ins    DWORD PTR es:[edi],dx
  4110d5:	aad    0x4
  4110d7:	cmp    ebp,esi
  4110d9:	sbb    ch,BYTE PTR [esi+edi*1]
  4110dc:	dec    edx
  4110dd:	mov    ds:0x373f8674,eax
  4110e3:	outs   dx,BYTE PTR ds:[esi]
  4110e4:	jne    0x4110e2
  4110e6:	push   ecx
  4110e7:	(bad)  [esi+0x1a]
  4110ea:	push   edx
  4110eb:	add    BYTE PTR ds:0xfee0de78,ah
  4110f1:	mov    edi,DWORD PTR [eax-0x7c]
  4110f4:	mov    dl,dh
  4110f6:	int    0x83
  4110f8:	cs pop es
  4110fa:	jns    0x4110b9
  4110fc:	ins    BYTE PTR es:[edi],dx
  4110fd:	lea    edi,[edi]
  4110ff:	aam    0xe1
  411101:	ja     0x411095
  411103:	jmp    0x3851:0xbc45c699
  41110a:	jg     0x411180
  41110c:	(bad)  
  41110d:	push   ebx
  41110e:	shl    eax,1
  411110:	call   0xc46f:0xcaeaf974
  411117:	xchg   ebp,eax
  411118:	jb     0x411118
  41111a:	cmp    dl,BYTE PTR [eax-0x5b]
  41111d:	loope  0x4110fd
  41111f:	mov    ds:0x12fdb3c7,eax
  411124:	test   DWORD PTR [edi-0x5a],esi
  411127:	push   esi
  411128:	xchg   edx,eax
  411129:	add    BYTE PTR [esi+0x6bc433a1],ah
  41112f:	les    edx,FWORD PTR [edi-0x1edaae97]
  411135:	(bad)  
  411136:	std    
  411137:	push   ecx
  411138:	and    dl,dl
  41113a:	int3   
  41113b:	imul   ecx,DWORD PTR [esi+edx*1-0x3a],0xffffffbc
  411140:	(bad)  
  411141:	push   edx
  411142:	rcr    BYTE PTR [esi],1
  411144:	pop    esp
  411145:	test   al,0xe2
  411147:	(bad)  
  411148:	cli    
  411149:	ja     0x41119f
  41114b:	iret   
  41114c:	fnstsw WORD PTR [ecx+0x52]
  41114f:	sbb    al,0x1f
  411151:	fld    TBYTE PTR [edi+0x7c10bddd]
  411157:	bound  ebx,QWORD PTR [edi+0x1f]
  41115a:	mov    bh,0x5b
  41115c:	icebp  
  41115d:	sub    BYTE PTR [eax],dh
  41115f:	adc    al,0x42
  411161:	sti    
  411162:	mov    esp,0xb8cb5d98
  411167:	rcl    BYTE PTR [edx+0x2],1
  41116a:	add    DWORD PTR [ebx+0x19b7972a],edx
  411170:	stc    
  411171:	adc    bh,0x12
  411174:	addr16 clc 
  411176:	xchg   ecx,eax
  411177:	pop    esp
  411178:	mov    al,ds:0x8a82f9c9
  41117d:	pop    ds
  41117e:	xchg   BYTE PTR [esp+ebx*8-0x4a],ch
  411182:	add    al,0xdf
  411184:	aad    0xb9
  411186:	ret    0x44bf
  411189:	dec    esi
  41118a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41118b:	out    0xde,al
  41118d:	shr    DWORD PTR [ebx+0x4c],1
  411190:	push   0x499fa62e
  411195:	mov    edi,?
  411197:	fidiv  WORD PTR [ecx-0x79d10996]
  41119d:	fsub   QWORD PTR [edi-0x3f]
  4111a0:	cmp    bl,al
  4111a2:	dec    edx
  4111a3:	add    bh,BYTE PTR [esi]
  4111a5:	retf   0xb17a
  4111a8:	std    
  4111a9:	inc    edi
  4111aa:	scas   eax,DWORD PTR es:[edi]
  4111ab:	sti    
  4111ac:	test   eax,0x7fcf8fad
  4111b1:	cmp    ecx,edi
  4111b3:	adc    edx,edi
  4111b5:	add    BYTE PTR [ecx+0x1f],bl
  4111b8:	gs sub al,0xd7
  4111bb:	loope  0x4111ca
  4111bd:	(bad)  
  4111be:	xor    bh,BYTE PTR [edx+0x115f8804]
  4111c4:	or     dh,BYTE PTR [edx+0x5c3d24cd]
  4111ca:	int    0xd
  4111cc:	lea    esi,[edx]
  4111ce:	inc    ebp
  4111cf:	xchg   ecx,eax
  4111d0:	sub    ecx,DWORD PTR [ebx+edi*8+0x71]
  4111d4:	cmp    al,0x1d
  4111d6:	mov    bl,0x80
  4111d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d9:	stc    
  4111da:	iret   
  4111db:	sub    ebx,0xffffffdc
  4111de:	sub    ebp,edx
  4111e0:	gs enter 0x669b,0x20
  4111e5:	add    eax,0x14fb7797
  4111ea:	jbe    0x411205
  4111ec:	or     BYTE PTR [ebx-0x7a],ch
  4111ef:	test   BYTE PTR [ebp-0x5461a9ec],bh
  4111f5:	jb     0x41125e
  4111f7:	sub    esp,DWORD PTR [edi+0x719cd7be]
  4111fd:	stc    
  4111fe:	cmp    bh,BYTE PTR [eax-0x36ba6d8c]
  411204:	sub    al,0xbe
  411206:	jo     0x4111a6
  411208:	or     eax,0xcfe44bcd
  41120d:	push   esp
  41120e:	mov    eax,0x1e5a3539
  411213:	test   DWORD PTR [ecx],ecx
  411215:	push   ds
  411216:	das    
  411217:	sar    DWORD PTR [ecx-0x7854bdb6],1
  41121d:	daa    
  41121e:	call   FWORD PTR [eax+0x79]
  411221:	in     al,0x24
  411223:	js     0x4111ef
  411225:	sub    cl,0x7f
  411228:	xor    ah,0x42
  41122b:	aaa    
  41122c:	shl    dh,0x4c
  41122f:	test   edx,0xd23a3951
  411235:	shl    BYTE PTR [edi+0x31bc08f9],cl
  41123b:	dec    esi
  41123c:	push   esi
  41123d:	mov    ch,0x61
  41123f:	or     DWORD PTR [eax+0x17],esp
  411242:	mov    edx,0x808f26bf
  411247:	test   BYTE PTR [edx-0x4a],0xbb
  41124b:	cmc    
  41124c:	jmp    0x4111d5
  41124e:	add    DWORD PTR [ebx],esp
  411250:	push   ss
  411251:	ds mov bl,0xd0
  411254:	mov    cl,BYTE PTR [esi-0x1a032d92]
  41125a:	inc    esp
  41125b:	mov    eax,ds:0x818df3f8
  411260:	aad    0x7d
  411262:	cmp    dh,dh
  411264:	sbb    BYTE PTR [edi],ch
  411266:	retf   0xc31d
  411269:	inc    edi
  41126a:	rcl    DWORD PTR [esi],cl
  41126c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41126d:	mov    al,ds:0xc62f8940
  411272:	mov    dl,0x3c
  411274:	and    eax,0x313c1f5e
  411279:	sbb    cl,BYTE PTR [edi+0x1]
  41127c:	cwde   
  41127d:	sub    cl,al
  41127f:	xchg   esi,eax
  411280:	mov    ss,WORD PTR [edi-0x8]
  411283:	icebp  
  411284:	fstp   DWORD PTR [esi+eiz*4]
  411287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411288:	jmp    0x411300
  41128a:	dec    ebx
  41128b:	inc    eax
  41128c:	(bad)  
  41128d:	stos   BYTE PTR es:[edi],al
  41128e:	data16 aam 0x3d
  411291:	pusha  
  411292:	adc    ch,BYTE PTR [ecx-0x15]
  411295:	std    
  411296:	xchg   edi,eax
  411297:	out    dx,eax
  411298:	nop
  411299:	xchg   edi,eax
  41129a:	imul   DWORD PTR es:[ebx+0x49056942]
  4112a1:	add    dl,0x85
  4112a4:	fwait
  4112a5:	(bad)  
  4112a6:	ins    DWORD PTR es:[edi],dx
  4112a7:	xchg   esp,eax
  4112a8:	sbb    ebp,eax
  4112aa:	push   ds
  4112ab:	xor    dh,BYTE PTR [edi+0x52ffdae4]
  4112b1:	loopne 0x41131d
  4112b3:	in     eax,0x59
  4112b5:	cmp    bl,BYTE PTR [ecx+0x10]
  4112b8:	mov    esi,0xc90cfa9
  4112bd:	mov    bh,0x9e
  4112bf:	out    0x30,al
  4112c1:	cld    
  4112c2:	sub    ah,BYTE PTR [ebp+0x34]
  4112c5:	lahf   
  4112c6:	fldenv [ebp+ecx*1+0x7b]
  4112ca:	cmp    dl,BYTE PTR [ebx-0x4f]
  4112cd:	imul   DWORD PTR [eax-0x5f]
  4112d0:	inc    ebp
  4112d1:	mov    bh,0x54
  4112d3:	mov    edx,0x9c5f2b97
  4112d8:	mov    esi,DWORD PTR [eax+0x77]
  4112db:	pop    esi
  4112dc:	(bad)  
  4112dd:	fisubr DWORD PTR [ebx+esi*8+0x7b8d7f2]
  4112e4:	adc    eax,0xbf405da6
  4112e9:	sti    
  4112ea:	ss pop esi
  4112ec:	sbb    ebp,DWORD PTR [edi-0x1a2ff2d8]
  4112f2:	pop    edi
  4112f3:	adc    al,0x4c
  4112f5:	and    cl,BYTE PTR [esi]
  4112f7:	scas   al,BYTE PTR es:[edi]
  4112f8:	mov    dh,0xd2
  4112fa:	jb     0x41136e
  4112fc:	(bad)  
  4112fd:	cli    
  4112fe:	mov    ah,0xaa
  411300:	cwde   
  411301:	sti    
  411302:	leave  
  411303:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411304:	mov    bh,0x44
  411306:	and    BYTE PTR [eax-0x163051e2],dh
  41130c:	xchg   edi,eax
  41130d:	inc    ebx
  41130e:	fmul   QWORD PTR ds:0x58a67234
  411314:	(bad)  
  411315:	pop    edx
  411316:	(bad)  
  411317:	pop    esi
  411318:	push   0x4be27e0b
  41131d:	push   ss
  41131e:	jne    0x411317
  411320:	mov    ebp,0xaf81d8fb
  411325:	push   0x5e
  411327:	sahf   
  411328:	pop    ss
  411329:	mov    eax,0x59fbc2ea
  41132e:	cdq    
  41132f:	cvtpi2ps xmm1,mm3
  411332:	(bad)  
  411334:	sub    DWORD PTR [esi],eax
  411336:	inc    ebp
  411337:	scas   eax,DWORD PTR es:[edi]
  411338:	imul   ebp,esi,0xe
  41133b:	cmp    DWORD PTR [eax+0x3c],esi
  41133e:	(bad)  
  41133f:	pop    ebp
  411340:	adc    al,0x57
  411342:	ja     0x411351
  411344:	mov    ds:0xb459c06e,eax
  411349:	ss mov esp,0x8b487dbc
  41134f:	sar    BYTE PTR [edi+ecx*4-0x38cb1ea4],cl
  411356:	cmp    bh,ah
  411358:	sub    eax,0xabc71cae
  41135d:	dec    ebp
  41135e:	ins    DWORD PTR es:[edi],dx
  41135f:	xchg   esi,eax
  411360:	add    al,0x26
  411362:	and    edi,ecx
  411364:	xchg   ebx,eax
  411365:	sub    BYTE PTR [edx],0x37
  411368:	out    0xee,eax
  41136a:	in     eax,dx
  41136b:	adc    eax,0x6d053b00
  411370:	(bad)  
  411371:	arpl   sp,cx
  411373:	fisubr WORD PTR [edx-0x64]
  411376:	push   ecx
  411377:	xor    al,BYTE PTR [edx]
  411379:	test   edx,esi
  41137b:	dec    bl
  41137d:	cmp    eax,DWORD PTR [edi]
  41137f:	jns    0x4113b2
  411381:	push   cs
  411382:	inc    ebx
  411383:	pop    ds
  411384:	rcl    BYTE PTR [ebx+0x335a2f9b],0xb2
  41138b:	sbb    BYTE PTR [esi+0x634f3794],bh
  411391:	xchg   esp,eax
  411392:	cli    
  411393:	mov    ss,WORD PTR [ebx]
  411395:	in     al,0xb6
  411397:	stos   BYTE PTR es:[edi],al
  411398:	mov    ds:0x82f260df,al
  41139d:	xchg   DWORD PTR ds:0x3e5ad41d,ebx
  4113a3:	sbb    DWORD PTR [eax+0xe],0xb1e9ecce
  4113aa:	and    DWORD PTR [edi-0x6b],esp
  4113ad:	inc    ecx
  4113ae:	dec    eax
  4113af:	jmp    0x41140d
  4113b1:	in     eax,0x7a
  4113b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113b4:	cdq    
  4113b5:	jno    0x41139d
  4113b7:	into   
  4113b8:	test   al,0xef
  4113ba:	sbb    eax,0xec73be9e
  4113bf:	gs dec edi
  4113c1:	(bad)  
  4113c2:	mov    cl,0x9
  4113c4:	call   0x8faa3942
  4113c9:	enter  0xc377,0xe8
  4113cd:	fmul   DWORD PTR [ebx+0x1b]
  4113d0:	mov    bl,0x9c
  4113d2:	aam    0x25
  4113d4:	inc    esi
  4113d5:	loope  0x41141f
  4113d7:	jnp    0x411363
  4113d9:	xor    dl,BYTE PTR [ecx]
  4113db:	ds js  0x4113d5
  4113de:	mov    al,BYTE PTR [edi+0x15]
  4113e1:	push   ecx
  4113e2:	stos   BYTE PTR es:[edi],al
  4113e3:	pop    ecx
  4113e4:	pop    eax
  4113e5:	dec    ebx
  4113e6:	out    0xc4,al
  4113e8:	fisttp DWORD PTR [esp+ebx*8]
  4113eb:	pop    ebp
  4113ec:	stc    
  4113ed:	or     eax,0x2a1a2022
  4113f2:	imul   ebx,DWORD PTR [esi-0x6f],0x960b2c46
  4113f9:	ficomp WORD PTR [ebp-0x47]
  4113fc:	(bad)  
  4113fe:	adc    DWORD PTR [edx-0x6b],esp
  411401:	lods   al,BYTE PTR ds:[esi]
  411402:	and    DWORD PTR [edi],edi
  411404:	repnz cmp BYTE PTR [ecx+eax*4+0x77effac3],ah
  41140c:	fst    DWORD PTR [edx]
  41140e:	xor    dl,BYTE PTR [edi]
  411410:	rcr    ch,cl
  411412:	push   0x25e7145
  411417:	jmp    0x41145f
  411419:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41141a:	(bad)  
  41141b:	mov    esp,0xdbc8e5da
  411420:	or     DWORD PTR [esi+0x18a5c6fd],0xffffffea
  411427:	pop    edi
  411428:	jge    0x4113e6
  41142a:	test   BYTE PTR [eax-0x486fbbd],0xe3
  411431:	fsub   DWORD PTR [ebx+0x2029e53b]
  411437:	jp     0x411431
  411439:	cwde   
  41143a:	fucomip st,st(3)
  41143c:	jp     0x55f77b2c
  411442:	mov    dl,0xeb
  411444:	outs   dx,BYTE PTR ds:[esi]
  411445:	add    DWORD PTR [ecx-0x3efbbacf],ebx
  41144b:	and    al,0x65
  41144d:	mov    edx,gs
  41144f:	popf   
  411450:	imul   esi,esp,0x7f94cfe6
  411456:	(bad)
  41145a:	arpl   ax,cx
  41145c:	dec    edx
  41145d:	and    eax,0xc734d3f3
  411462:	(bad)  [eax+ecx*2-0x163b8a78]
  411469:	jle    0x4113ef
  41146b:	add    ebp,0x20
  41146e:	mov    ebx,0xafd9aa20
  411473:	je     0x41145d
  411475:	push   cs
  411476:	push   es
  411477:	mov    ds:0x6aaa8416,al
  41147c:	fdivr  st(5),st
  41147e:	sub    eax,0x9762356a
  411483:	loopne 0x411411
  411485:	pop    edx
  411486:	adc    DWORD PTR [edx+0x77],0x74
  41148a:	test   eax,0xe1632e36
  41148f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411490:	add    BYTE PTR [edx+0x9453958],0x5a
  411497:	nop
  411498:	daa    
  411499:	hlt    
  41149a:	mov    bl,0x7d
  41149c:	lods   al,BYTE PTR ds:[esi]
  41149d:	arpl   WORD PTR [ebp-0x7e],sp
  4114a0:	sub    dl,BYTE PTR [eax]
  4114a2:	fbstp  TBYTE PTR [edi-0x5a363bed]
  4114a8:	ja     0x411485
  4114aa:	(bad)  
  4114ab:	jle    0x4114e0
  4114ad:	add    eax,0xbc446f50
  4114b2:	sbb    DWORD PTR [eax],ebp
  4114b4:	mov    cl,0xed
  4114b6:	ss cs xchg ecx,eax
  4114b9:	mov    eax,0xe657c1ef
  4114be:	sbb    bh,BYTE PTR [eax-0x55817260]
  4114c4:	div    DWORD PTR ds:0xf271b80e
  4114ca:	xchg   DWORD PTR [esi],edx
  4114cc:	push   cs
  4114cd:	inc    esi
  4114ce:	das    
  4114cf:	out    dx,al
  4114d0:	ja     0x4114ed
  4114d2:	(bad)  
  4114d4:	arpl   dx,bx
  4114d6:	dec    ebp
  4114d7:	cmp    bh,BYTE PTR ds:0x8595c3cd
  4114dd:	in     eax,0xd1
  4114df:	sub    bl,dh
  4114e1:	std    
  4114e2:	sti    
  4114e3:	mov    ebx,0xca389f94
  4114e8:	jne    0x41146c
  4114ea:	aas    
  4114eb:	xor    DWORD PTR [ecx],esi
  4114ed:	sti    
  4114ee:	dec    esp
  4114ef:	xor    eax,0xc3b37aa3
  4114f4:	xchg   edi,eax
  4114f5:	(bad)  
  4114f6:	sub    edi,DWORD PTR [ebx]
  4114f8:	hlt    
  4114f9:	sbb    al,0xaa
  4114fb:	cmp    al,0xcb
  4114fd:	and    BYTE PTR [esi],0x2e
  411500:	(bad)  
  411501:	out    dx,eax
  411502:	adc    al,0xc
  411504:	hlt    
  411505:	enter  0xf01d,0x4f
  411509:	sub    DWORD PTR [eax-0x80],esp
  41150c:	test   BYTE PTR [esi-0x3a0ddd76],dl
  411512:	out    dx,eax
  411513:	pop    ds
  411514:	jmp    0x9b1f:0xa02139ef
  41151b:	daa    
  41151c:	mov    ebp,0x208655d0
  411521:	mov    ds:0x33d74020,al
  411526:	fs (bad) 
  411528:	mov    al,ds:0x662c9e15
  41152d:	lahf   
  41152e:	das    
  41152f:	inc    eax
  411530:	inc    edx
  411531:	test   al,0xc4
  411533:	jge    0x4114f7
  411535:	jns    0x411521
  411537:	jecxz  0x4114fe
  411539:	cmp    al,BYTE PTR [edx]
  41153b:	lods   eax,DWORD PTR ds:[esi]
  41153c:	retf   
  41153d:	rep lods al,BYTE PTR ds:[esi]
  41153f:	out    0x36,eax
  411541:	mov    edi,0x9d7278b5
  411546:	(bad)  
  411547:	dec    edx
  411548:	pusha  
  411549:	pop    ss
  41154a:	out    0x8a,eax
  41154c:	aas    
  41154d:	dec    esi
  41154e:	lods   eax,DWORD PTR ds:[esi]
  41154f:	mov    cl,0x86
  411551:	sbb    al,dl
  411553:	pop    ebp
  411554:	arpl   WORD PTR [edi],cx
  411556:	retf   
  411557:	push   ss
  411558:	xchg   edi,eax
  411559:	cmp    eax,DWORD PTR [edi-0x11]
  41155c:	lds    edi,FWORD PTR [edi+0x361446fd]
  411562:	into   
  411563:	adc    eax,0xd5ffa030
  411568:	cmp    eax,0x5ac5398b
  41156d:	xor    BYTE PTR [edi-0x3982105b],ch
  411573:	cld    
  411574:	les    esp,FWORD PTR [esi+0x4d731689]
  41157a:	jns    0x41153a
  41157c:	outs   dx,DWORD PTR ds:[esi]
  41157d:	clc    
  41157e:	jbe    0x4115b7
  411580:	imul   edx,DWORD PTR [esi+ebp*4],0x7c93125
  411587:	adc    DWORD PTR [eax],ebp
  411589:	ds jbe 0x4115f8
  41158c:	xchg   ecx,eax
  41158d:	xor    eax,0x89285e5d
  411592:	push   esp
  411593:	(bad)  
  411594:	jge    0x41152a
  411596:	pop    edi
  411597:	loopne 0x41159d
  411599:	push   0x3fe9b0de
  41159e:	arpl   WORD PTR [ecx+0x682eb578],sp
  4115a4:	loop   0x4115ab
  4115a6:	jae    0x41157c
  4115a8:	pop    esi
  4115a9:	int    0x4f
  4115ab:	out    0x6,eax
  4115ad:	mov    eax,0x171e9302
  4115b2:	mov    ebx,0xb7d32f55
  4115b7:	push   eax
  4115b8:	jns    0x4115dd
  4115ba:	cwde   
  4115bb:	cdq    
  4115bc:	stc    
  4115bd:	in     eax,0xad
  4115bf:	mov    bh,BYTE PTR [ebp+0x2d]
  4115c2:	into   
  4115c3:	jg     0x4115c1
  4115c5:	push   0x30
  4115c7:	adc    eax,0xbf7f39e0
  4115cc:	test   DWORD PTR [ebp+0x514e58cb],0xd985e92e
  4115d6:	fwait
  4115d7:	cmp    eax,0x33b5734f
  4115dc:	lea    esp,[ebx]
  4115de:	xchg   esp,esi
  4115e0:	mov    esp,0x5fc70c5e
  4115e5:	xchg   edx,eax
  4115e6:	jge    0x4115a9
  4115e8:	out    0x9a,eax
  4115ea:	xchg   esp,eax
  4115eb:	arpl   WORD PTR [ecx],si
  4115ed:	stos   DWORD PTR es:[edi],eax
  4115ee:	repnz les eax,FWORD PTR ds:0x1327406f
  4115f5:	idiv   DWORD PTR [ebx]
  4115f7:	(bad)  
  4115f8:	rcl    BYTE PTR [ecx+eiz*2+0x59b38786],0x2a
  411600:	cmp    BYTE PTR [eax-0x2a6c48d1],ah
  411606:	call   0x896562ce
  41160b:	cmp    al,0x4d
  41160d:	mov    ch,0xc8
  41160f:	cmp    eax,0x13ec7637
  411614:	inc    DWORD PTR [edi]
  411616:	arpl   WORD PTR [esi-0x55],cx
  411619:	loopne 0x41164c
  41161b:	pusha  
  41161c:	loopne 0x41160b
  41161e:	in     eax,0x37
  411620:	and    ebx,DWORD PTR [edx-0x62]
  411623:	outs   dx,DWORD PTR ds:[esi]
  411624:	mov    DWORD PTR [edx-0x660a2fc8],esi
  41162a:	and    al,0xc7
  41162c:	popf   
  41162d:	inc    esp
  41162e:	add    ebx,DWORD PTR [ecx-0x16]
  411631:	adc    ah,BYTE PTR [edx+0x3887a2a8]
  411637:	rcr    ah,1
  411639:	fist   WORD PTR [ebx]
  41163b:	aam    0xdb
  41163d:	xchg   ecx,eax
  41163e:	sub    BYTE PTR [edx+0x3a],0xf4
  411642:	fild   WORD PTR [ebp+0x15c00da5]
  411648:	cmp    ebp,DWORD PTR ds:0x430af9ac
  41164e:	mov    esp,DWORD PTR [edx]
  411650:	shl    BYTE PTR [edi+0x3c],1
  411653:	add    al,0xfe
  411655:	xor    ebp,edi
  411657:	rol    DWORD PTR [ebp+0x22],1
  41165a:	xchg   ebx,edi
  41165c:	das    
  41165d:	push   es
  41165e:	in     eax,dx
  41165f:	loopne 0x4115f6
  411661:	mov    BYTE PTR [ebx],bh
  411663:	pop    ebp
  411664:	test   al,al
  411666:	mov    al,0x5c
  411668:	pop    ebp
  411669:	jns    0x411630
  41166b:	cmp    eax,0x40fe04c7
  411670:	sub    al,0x7e
  411672:	hlt    
  411673:	xchg   edx,eax
  411674:	das    
  411675:	daa    
  411676:	aaa    
  411677:	outs   dx,DWORD PTR ds:[esi]
  411678:	cmp    al,0xc4
  41167a:	fwait
  41167b:	adc    DWORD PTR [edx+0x3ea743f9],ebp
  411681:	adc    dl,BYTE PTR [esi-0x75471a00]
  411687:	pop    esi
  411688:	retf   
  411689:	adc    eax,0xb98d440e
  41168e:	lahf   
  41168f:	xchg   edx,eax
  411690:	pop    ss
  411691:	add    al,dh
  411693:	enter  0x83c,0x84
  411697:	sbb    edx,DWORD PTR [edi-0x50f7d9fe]
  41169d:	das    
  41169e:	and    cl,bh
  4116a0:	out    dx,eax
  4116a1:	stos   DWORD PTR es:[edi],eax
  4116a2:	aas    
  4116a3:	retf   
  4116a4:	sar    BYTE PTR [esi],0xda
  4116a7:	xchg   esp,eax
  4116a8:	push   ebx
  4116a9:	push   ss
  4116aa:	push   eax
  4116ab:	icebp  
  4116ac:	mov    eax,ds:0xb5c0cbb2
  4116b1:	inc    ebx
  4116b2:	loopne 0x41170a
  4116b4:	xchg   esp,eax
  4116b5:	clc    
  4116b6:	je     0x41163d
  4116b8:	mov    WORD PTR [edi],?
  4116ba:	push   ss
  4116bb:	mov    BYTE PTR [ebx],ah
  4116bd:	mov    edi,0xc6cd109e
  4116c2:	pop    edx
  4116c3:	adc    DWORD PTR [eax],0xe11eb415
  4116c9:	sbb    ebx,DWORD PTR [edx+ecx*1]
  4116cc:	outs   dx,BYTE PTR ds:[esi]
  4116cd:	call   0x2f3b718f
  4116d2:	xor    al,0xfe
  4116d4:	or     dh,BYTE PTR [ebp-0x50]
  4116d7:	or     BYTE PTR [edi-0x36],ah
  4116da:	xor    edx,DWORD PTR [ebx-0x35b10fb1]
  4116e0:	mov    al,0xff
  4116e2:	cld    
  4116e3:	ins    DWORD PTR es:[edi],dx
  4116e4:	xchg   ebx,eax
  4116e5:	jae    0x4116bd
  4116e7:	lock mov edx,0x3d55c255
  4116ed:	ins    BYTE PTR es:[edi],dx
  4116ee:	dec    ebp
  4116ef:	out    0xfe,al
  4116f1:	mov    dh,0x8a
  4116f3:	xor    ecx,esi
  4116f5:	call   0x92ab:0xf038cb0a
  4116fc:	jge    0x41168f
  4116fe:	dec    edi
  4116ff:	mov    dh,0x0
  411701:	ins    BYTE PTR es:[edi],dx
  411702:	in     eax,dx
  411703:	jl     0x411724
  411705:	bound  ebx,QWORD PTR [ecx+0xadf3260]
  41170b:	or     eax,0x4fae68e5
  411710:	and    BYTE PTR [edx-0x3e],ch
  411713:	retf   
  411714:	pop    esi
  411715:	mov    dh,0x5b
  411717:	sbb    DWORD PTR [eax-0x4a330a81],eax
  41171d:	scas   al,BYTE PTR es:[edi]
  41171e:	stc    
  41171f:	jmp    0x9ee3c33a
  411724:	sub    esp,DWORD PTR [esi+0x379c4dab]
  41172a:	push   0xa18d290e
  41172f:	or     bl,BYTE PTR [ebx+0x6231dd7]
  411735:	jns    0x41177d
  411737:	repz jmp 0x4117a9
  41173a:	pop    ebx
  41173b:	fdivr  DWORD PTR [ebp-0x636b9474]
  411741:	or     edi,DWORD PTR [esi+0x6efbdefe]
  411747:	ja     0x4117b6
  411749:	outs   dx,DWORD PTR ds:[esi]
  41174a:	adc    DWORD PTR [ebp-0x6f232fd9],ecx
  411750:	push   esp
  411751:	inc    ebp
  411752:	add    BYTE PTR [ebp-0x29],bh
  411755:	popa   
  411756:	ret    
  411757:	jg     0x41170b
  411759:	out    0xad,al
  41175b:	jo     0x4117dc
  41175d:	add    BYTE PTR [edx+0x16],cl
  411760:	inc    ebx
  411761:	mov    esp,0x737216e3
  411766:	or     eax,0x3a7cac16
  41176b:	inc    esi
  41176c:	mov    BYTE PTR [esi],dl
  41176e:	ss mov edi,0x97a53897
  411774:	mov    esp,0x1dc38fc
  411779:	into   
  41177a:	push   eax
  41177b:	mov    edx,0xf4d374a8
  411780:	inc    edi
  411781:	mov    ebp,0x8a693255
  411786:	adc    DWORD PTR [ebx-0x600c8615],0x64
  41178d:	cmc    
  41178e:	jne    0x4117f3
  411790:	retf   
  411791:	push   eax
  411792:	bound  edi,QWORD PTR [edi+0x58]
  411795:	or     BYTE PTR [eax+edi*8+0x7],0x8c
  41179a:	and    cl,ah
  41179c:	mov    bh,0xdd
  41179e:	cmp    BYTE PTR [edx-0x72],bh
  4117a1:	ds das 
  4117a3:	mov    cl,0x21
  4117a5:	iret   
  4117a6:	jmp    0x6a29:0x676318e0
  4117ad:	test   al,0xfb
  4117af:	mov    ds:0x4e72b190,al
  4117b4:	mov    ebp,0xb7fe832d
  4117b9:	into   
  4117ba:	cmp    dl,BYTE PTR [edx]
  4117bc:	lock retf 0xb2a6
  4117c0:	mov    ch,bh
  4117c2:	sbb    eax,0xb3d1f4e0
  4117c7:	jb     0x4117fe
  4117c9:	int    0x31
  4117cb:	or     esi,DWORD PTR [eax-0x2d]
  4117ce:	repz int3 
  4117d0:	call   FWORD PTR [esi-0x43]
  4117d3:	mov    ds:0xdddfd2bb,al
  4117d8:	jnp    0x411847
  4117da:	mov    bl,0x47
  4117dc:	adc    eax,0x80d48e38
  4117e1:	and    dl,BYTE PTR [eax-0x5c]
  4117e4:	mov    ecx,gs
  4117e6:	xor    cl,al
  4117e8:	retw   
  4117ea:	jne    0x41185c
  4117ec:	mov    ds:0xc50923cd,al
  4117f1:	mov    eax,ds:0x4193a5b3
  4117f6:	out    0x8c,al
  4117f8:	cmp    bl,BYTE PTR [esi-0x2c]
  4117fb:	pop    ecx
  4117fc:	nop
  4117fd:	std    
  4117fe:	mov    eax,ds:0x2e0d2387
  411803:	(bad)  
  411804:	int3   
  411805:	ins    DWORD PTR es:[edi],dx
  411806:	out    dx,al
  411807:	in     eax,dx
  411808:	sbb    DWORD PTR [edi-0x6f6fd7b1],0x303ee818
  411812:	cmp    ebp,DWORD PTR [eax+eiz*1+0x4c3634b3]
  411819:	hlt    
  41181a:	jl     0x4117e9
  41181c:	jae    0x41181b
  41181e:	adc    eax,0x8f72d03
  411823:	in     al,dx
  411824:	in     eax,dx
  411825:	clc    
  411826:	mov    ecx,0xfd59b26a
  41182b:	(bad)  
  41182c:	pop    ds
  41182d:	mov    dh,0xe2
  41182f:	mov    edx,0xf5557980
  411834:	xlat   BYTE PTR ds:[ebx]
  411835:	jo     0x411884
  411837:	xchg   ecx,eax
  411838:	arpl   WORD PTR ds:0xd7f8e3a1,cx
  41183e:	sbb    al,0x8b
  411840:	adc    dh,bl
  411842:	mov    DWORD PTR [ebx+0x2e1c061e],ebp
  411848:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411849:	pop    es
  41184a:	pop    ds
  41184b:	xlat   BYTE PTR ds:[ebx]
  41184c:	push   eax
  41184d:	mov    eax,0x78b1e9d2
  411852:	retf   0x5d35
  411855:	mov    esp,0xd5358e2b
  41185a:	or     BYTE PTR [ecx-0x2c],bh
  41185d:	jmp    0xf85c40c9
  411862:	dec    ebx
  411863:	bound  edx,QWORD PTR [ebp+0x36543114]
  411869:	iret   
  41186a:	fcom   QWORD PTR [ecx-0x50]
  41186d:	jge    0x41180c
  41186f:	sub    dh,dl
  411871:	iret   
  411872:	repnz sti 
  411874:	lahf   
  411875:	pop    ss
  411876:	add    eax,0x6e57d8ef
  41187b:	xrelease mov DWORD PTR [ecx],eax
  41187e:	in     al,dx
  41187f:	adc    eax,ecx
  411881:	push   es
  411882:	xor    eax,0x855c0b1b
  411887:	add    ebx,DWORD PTR [ecx+0x64]
  41188a:	loop   0x411861
  41188c:	es jl  0x4118ad
  41188f:	cld    
  411890:	or     edx,ecx
  411892:	jp     0x4118d9
  411894:	and    dh,dh
  411896:	dec    eax
  411897:	xchg   DWORD PTR [eax-0x5],edi
  41189a:	pextrw ebx,(bad),0xc5
  41189c:	fwait
  41189d:	add    bl,BYTE PTR [ebx+0x2f]
  4118a0:	add    edi,DWORD PTR [ebx+0x69d9f7f7]
  4118a6:	arpl   WORD PTR ds:[edx+0x41],dx
  4118aa:	bound  edx,QWORD PTR [edx-0x27]
  4118ad:	mov    al,ds:0xa9d2ba09
  4118b2:	sub    BYTE PTR [edi+0x7c],0xf1
  4118b6:	xor    BYTE PTR [esi-0x338c2708],al
  4118bc:	push   ebx
  4118bd:	cmp    dl,BYTE PTR [edx+ecx*8+0x72]
  4118c1:	fisubr WORD PTR ds:0xb6e7ff3b
  4118c7:	frstor [ebx]
  4118c9:	das    
  4118ca:	cmp    esi,0x337535fd
  4118d0:	rcr    BYTE PTR [edx+eiz*4],0x41
  4118d4:	arpl   WORD PTR [ecx+esi*2],bp
  4118d7:	push   ss
  4118d8:	or     ah,BYTE PTR [edi-0x5c]
  4118db:	ds fs loope 0x41192d
  4118df:	pop    es
  4118e0:	jg     0x4118f8
  4118e2:	mov    bl,0xb2
  4118e4:	mov    ebx,0x9eafe868
  4118e9:	sub    BYTE PTR [ebp-0x4fb99828],dh
  4118ef:	xchg   esi,eax
  4118f0:	loope  0x4118d4
  4118f2:	jmp    0x1c3e:0x7ff9e2e7
  4118f9:	sbb    bh,BYTE PTR [edi-0x16a233c0]
  4118ff:	int3   
  411900:	and    DWORD PTR [eax-0x6811d9bc],edi
  411906:	inc    ecx
  411907:	nop
  411908:	pop    edx
  411909:	push   cs
  41190a:	or     dh,BYTE PTR [edi-0xa4b843a]
  411910:	mov    bl,0x6f
  411912:	and    DWORD PTR [ebp-0x235f92f4],esp
  411918:	mov    ch,0x92
  41191a:	jno    0x4118b4
  41191c:	inc    edi
  41191d:	loope  0x4118cd
  41191f:	hlt    
  411920:	imul   ebx,DWORD PTR [ebx-0x41],0x1cead6d3
  411927:	cmp    DWORD PTR [ebx],ebp
  411929:	sbb    al,0x59
  41192b:	pop    edx
  41192c:	js     0x411924
  41192e:	addr16 mov bl,0xf0
  411931:	pop    ebp
  411932:	pop    ss
  411933:	mov    cl,0x5d
  411935:	jb     0x4118e5
  411937:	pop    eax
  411938:	dec    esi
  411939:	mov    ecx,0xf241dd9e
  41193e:	mov    ds:0x7297710c,eax
  411943:	pusha  
  411944:	(bad)  
  411945:	xchg   edi,eax
  411946:	xchg   ebp,eax
  411947:	sahf   
  411948:	mov    edi,0x70a12f01
  41194d:	add    BYTE PTR [eax-0x78],bl
  411950:	in     eax,0x7e
  411952:	out    0x78,eax
  411954:	push   edx
  411955:	sub    al,0x88
  411957:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411958:	and    ebx,edi
  41195a:	enter  0xe81,0x7c
  41195e:	add    al,0x98
  411960:	pop    edx
  411961:	loopne 0x411984
  411963:	sahf   
  411964:	and    BYTE PTR [edi],al
  411966:	shl    BYTE PTR [ebx-0x54],0x27
  41196a:	ficom  WORD PTR [esi-0x79]
  41196d:	fs leave 
  41196f:	mov    dl,0xdd
  411971:	dec    edx
  411972:	push   ebx
  411973:	and    al,0xd0
  411975:	mov    ecx,0x92272d05
  41197a:	xor    cl,BYTE PTR [edi+0x15316235]
  411980:	lods   eax,DWORD PTR ds:[esi]
  411981:	mov    esi,0x615d310c
  411986:	push   edi
  411987:	lods   eax,DWORD PTR ds:[esi]
  411988:	repnz sbb eax,DWORD PTR [edx*8-0x6dd7208]
  411990:	inc    ebx
  411991:	mov    edi,0xb4dcd37d
  411996:	rcl    DWORD PTR [edi],1
  411998:	and    dl,BYTE PTR [ebx]
  41199a:	pop    edx
  41199b:	daa    
  41199c:	test   edx,0x2f5dfa6a
  4119a2:	pop    es
  4119a3:	push   esi
  4119a4:	sahf   
  4119a5:	push   eax
  4119a6:	(bad)  
  4119a7:	outs   dx,DWORD PTR ds:[esi]
  4119a8:	xor    al,0x33
  4119aa:	call   0x1517:0x1222edeb
  4119b1:	xchg   ebp,eax
  4119b2:	sub    bh,BYTE PTR [eax+0x44]
  4119b5:	push   edx
  4119b6:	shr    DWORD PTR gs:0x3c3f124c,cl
  4119bd:	icebp  
  4119be:	xchg   ebp,eax
  4119bf:	inc    ebp
  4119c0:	lock ins BYTE PTR es:[edi],dx
  4119c2:	inc    ebx
  4119c3:	les    edx,FWORD PTR [ecx]
  4119c5:	adc    BYTE PTR [ebx+0x424f776e],dh
  4119cb:	mov    WORD PTR [edi],?
  4119cd:	test   eax,0x6268267c
  4119d2:	mov    bl,0x3
  4119d4:	dec    ecx
  4119d5:	aaa    
  4119d6:	xchg   esp,eax
  4119d7:	xor    BYTE PTR [ebx-0x42],dh
  4119da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119db:	xchg   edx,eax
  4119dc:	clc    
  4119dd:	xchg   esi,eax
  4119de:	or     al,0x19
  4119e0:	fidivr DWORD PTR [ecx+eiz*1]
  4119e3:	stc    
  4119e4:	stos   DWORD PTR es:[edi],eax
  4119e5:	mov    ah,0x32
  4119e7:	sahf   
  4119e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119e9:	add    edx,DWORD PTR [esi-0xac3b7b2]
  4119ef:	int3   
  4119f0:	pop    ebx
  4119f1:	rol    BYTE PTR [ebx],cl
  4119f3:	test   al,0x31
  4119f5:	inc    ebp
  4119f6:	(bad)  
  4119f7:	cmc    
  4119f8:	or     cl,bh
  4119fa:	mov    bh,0x5b
  4119fc:	scas   al,BYTE PTR es:[edi]
  4119fd:	ins    BYTE PTR es:[edi],dx
  4119fe:	ds enter 0xe0ac,0x6e
  411a03:	lock gs xchg esp,eax
  411a06:	sbb    dh,BYTE PTR [ecx+0x5a]
  411a09:	inc    esp
  411a0a:	or     BYTE PTR ds:0x522ebfe2,cl
  411a10:	xchg   ebx,eax
  411a11:	adc    DWORD PTR [edi+ebx*8-0x74],0xa8278f70
  411a19:	jo     0x411a46
  411a1b:	push   ds
  411a1c:	xchg   ebp,eax
  411a1d:	dec    ebx
  411a1e:	jecxz  0x411a6a
  411a20:	fpatan 
  411a22:	rcr    DWORD PTR [ebx],cl
  411a24:	mov    ebx,edi
  411a26:	ret    0x951a
  411a29:	ror    bh,cl
  411a2b:	bound  esp,QWORD PTR [edx+0x738237a]
  411a31:	lds    ebx,FWORD PTR [ebp+0x1dc7b9b0]
  411a37:	push   esi
  411a38:	ror    DWORD PTR [ecx-0x22],0x8a
  411a3c:	cmp    ecx,DWORD PTR [ebp-0x2fd0772b]
  411a42:	push   cs
  411a43:	mov    dl,0xbe
  411a45:	xor    BYTE PTR [eax-0x42e8efe9],cl
  411a4b:	push   edx
  411a4c:	mov    esp,0xa82e8a20
  411a51:	stos   BYTE PTR es:[edi],al
  411a52:	adc    DWORD PTR [ebx+0x3b81c128],edx
  411a58:	test   DWORD PTR [ebp-0x27],ebp
  411a5b:	inc    ebx
  411a5c:	mov    eax,ds:0x81463674
  411a61:	jns    0x411a57
  411a63:	sar    esi,1
  411a65:	xchg   DWORD PTR [ebp-0xf],esp
  411a68:	jns    0x411a70
  411a6a:	inc    eax
  411a6b:	cmc    
  411a6c:	fistp  WORD PTR [edx-0x5218ab85]
  411a72:	imul   ecx,DWORD PTR [ebx],0xffffff87
  411a75:	mov    edx,0xf3dc5715
  411a7a:	sbb    cl,dl
  411a7c:	fild   DWORD PTR [edi-0x16]
  411a7f:	xor    eax,0x4e6ac3b9
  411a84:	xchg   ecx,eax
  411a85:	outs   dx,DWORD PTR ds:[esi]
  411a86:	je     0x411b01
  411a88:	cmp    eax,0x94827225
  411a8d:	cs adc ebx,0xc309fb2
  411a94:	xchg   esi,eax
  411a95:	mov    ecx,0x5d381998
  411a9a:	dec    ebx
  411a9b:	sahf   
  411a9c:	xchg   DWORD PTR [ebx+eax*1+0x7730f418],ebx
  411aa3:	cmp    ecx,DWORD PTR [eax-0x3990f18d]
  411aa9:	(bad)  
  411aaa:	or     al,0x39
  411aac:	xchg   ebp,eax
  411aad:	or     al,0xdd
  411aaf:	div    BYTE PTR [ecx-0x588d3d90]
  411ab5:	xchg   edi,eax
  411ab6:	dec    esp
  411ab7:	inc    eax
  411ab8:	lea    eax,[ebx-0x3ab88f37]
  411abe:	jo     0x411b1f
  411ac0:	sbb    bh,BYTE PTR ds:0xffd2dc4b
  411ac6:	pushf  
  411ac7:	je     0x411ac8
  411ac9:	jmp    0xe783423f
  411ace:	adc    al,0xba
  411ad0:	inc    edx
  411ad1:	cmp    bh,0xbf
  411ad4:	sub    eax,0x1f67bafc
  411ad9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ada:	sti    
  411adb:	enter  0x8f94,0xe9
  411adf:	in     eax,0x3b
  411ae1:	xchg   DWORD PTR [esi+ebp*4],ebx
  411ae4:	std    
  411ae5:	pop    eax
  411ae6:	int    0x47
  411ae8:	add    eax,0x2d06aa37
  411aed:	int3   
  411aee:	(bad)  
  411aef:	popf   
  411af0:	or     eax,0x544a5944
  411af5:	inc    esi
  411af6:	ins    BYTE PTR es:[edi],dx
  411af7:	mov    al,cl
  411af9:	add    esi,DWORD PTR [ebx+ebp*2+0x5b50f2ec]
  411b00:	int3   
  411b01:	sub    DWORD PTR [esi],0x792b62dc
  411b07:	fdivrp st(5),st
  411b09:	inc    ebx
  411b0a:	std    
  411b0b:	add    esp,ebx
  411b0d:	jo     0x411b38
  411b0f:	add    DWORD PTR [eax-0x4159f98e],0x3e3746c6
  411b19:	sub    al,0x8
  411b1b:	inc    esi
  411b1c:	mov    ebp,0x4e1f8f28
  411b21:	pushf  
  411b22:	stc    
  411b23:	adc    BYTE PTR [ebp-0x1f],0x67
  411b27:	mov    cl,0x5c
  411b29:	push   esi
  411b2a:	out    dx,al
  411b2b:	stc    
  411b2c:	push   eax
  411b2d:	outs   dx,DWORD PTR ds:[esi]
  411b2e:	push   eax
  411b2f:	xor    al,0x40
  411b31:	das    
  411b32:	jge    0x411b43
  411b34:	push   edi
  411b35:	out    0x32,al
  411b37:	jmp    0x44ec9263
  411b3c:	add    esp,DWORD PTR [edi+0x3f]
  411b3f:	cs sti 
  411b41:	mov    ds:0x740793c6,al
  411b46:	ss sbb eax,0x22913a79
  411b4c:	or     DWORD PTR [edi-0x3e],edx
  411b4f:	pushw  0x3d
  411b52:	inc    ebp
  411b53:	sub    edx,DWORD PTR [ecx]
  411b55:	stos   BYTE PTR es:[edi],al
  411b56:	js     0x411b0c
  411b58:	mov    fs,WORD PTR [eax-0x70]
  411b5b:	clc    
  411b5c:	and    eax,0xfc20759e
  411b61:	mov    ds:0x9058833f,eax
  411b66:	sbb    al,0x4e
  411b68:	mov    ch,0x6e
  411b6a:	and    al,0x98
  411b6c:	xor    ebx,DWORD PTR [esi+0x21]
  411b6f:	lods   al,BYTE PTR ds:[esi]
  411b70:	std    
  411b71:	(bad)  
  411b72:	ins    DWORD PTR es:[edi],dx
  411b73:	push   esp
  411b74:	inc    ebx
  411b75:	mov    ebp,0x2aa67498
  411b7a:	in     eax,0xb
  411b7c:	test   eax,0xb5bfe6f4
  411b81:	in     eax,0xc9
  411b83:	push   es
  411b84:	aas    
  411b85:	ret    
  411b86:	mov    al,ds:0x35e6ad57
  411b8b:	clc    
  411b8c:	push   ss
  411b8d:	repnz lahf 
  411b8f:	retf   
  411b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b91:	fadd   DWORD PTR [eax+0xa21851a]
  411b97:	mov    BYTE PTR [esi-0x37],cl
  411b9a:	sbb    dl,bh
  411b9c:	and    DWORD PTR [esi],ebp
  411b9e:	pop    ebx
  411b9f:	adc    ebx,DWORD PTR [eax+0x1d14cba7]
  411ba5:	loope  0x411b43
  411ba7:	xor    DWORD PTR [edx-0x55e54eac],ecx
  411bad:	jns    0x411be5
  411baf:	xchg   edi,eax
  411bb0:	pop    es
  411bb1:	lock rcl BYTE PTR [edi+0x31ef796d],1
  411bb8:	clc    
  411bb9:	xchg   edx,eax
  411bba:	sbb    dl,BYTE PTR ds:0x7255015b
  411bc0:	das    
  411bc1:	jae    0x411c3a
  411bc3:	lods   al,BYTE PTR ds:[esi]
  411bc4:	jecxz  0x411c19
  411bc6:	in     eax,dx
  411bc7:	sub    eax,0x1ed4756c
  411bcc:	jmp    0x2214:0x8792daa2
  411bd3:	lock arpl WORD PTR [ecx],dx
  411bd6:	mov    DWORD PTR [edx],edx
  411bd8:	sub    eax,0xb99f5965
  411bdd:	xlat   BYTE PTR ds:[ebx]
  411bde:	mov    ch,ah
  411be0:	sar    cl,1
  411be2:	pusha  
  411be3:	xchg   esi,eax
  411be4:	xchg   ecx,eax
  411be5:	pop    eax
  411be6:	popa   
  411be7:	push   es
  411be8:	push   ds
  411be9:	out    dx,al
  411bea:	rcl    DWORD PTR [edi+0x3e],0x86
  411bee:	test   BYTE PTR [esi+0x6b],0x65
  411bf2:	jp     0x411c42
  411bf4:	adc    BYTE PTR [esi-0x7d],ch
  411bf7:	mov    dh,0xff
  411bf9:	out    dx,eax
  411bfa:	add    dl,BYTE PTR [ecx+0x473120f4]
  411c00:	shl    BYTE PTR [eax+edx*8+0x3fc889aa],0x89
  411c08:	fst    st(1)
  411c0a:	push   ss
  411c0b:	lock pop ecx
  411c0d:	inc    esi
  411c0e:	mov    DWORD PTR [ebx+0x1a68fea7],ebp
  411c14:	lds    edx,FWORD PTR [edi-0xb]
  411c17:	mov    ch,0xf9
  411c19:	mov    ds:0x7d861d2c,al
  411c1e:	mov    ah,0xec
  411c20:	and    BYTE PTR [ebp+ebp*8-0x474782ea],dl
  411c27:	outs   dx,BYTE PTR ds:[esi]
  411c28:	add    BYTE PTR [eax+0x3a],0x70
  411c2c:	retf   
  411c2d:	add    DWORD PTR [edi-0x29cae5fc],eax
  411c33:	mov    ebx,0x277b40bb
  411c38:	aas    
  411c39:	jbe    0x411bc7
  411c3b:	pop    ecx
  411c3c:	xor    BYTE PTR [ebp-0x555aaf1f],ah
  411c42:	lock in al,0x93
  411c45:	sbb    eax,0x36173053
  411c4a:	pop    edx
  411c4b:	(bad)  
  411c4c:	sub    al,0xb0
  411c4e:	sbb    bl,BYTE PTR [ecx]
  411c50:	push   esp
  411c51:	sub    eax,0xdb7c38c1
  411c56:	pusha  
  411c57:	sbb    edi,DWORD PTR [esi+0x37]
  411c5a:	add    bh,dl
  411c5c:	jl     0x411cb7
  411c5e:	popa   
  411c5f:	ja     0x411c7e
  411c61:	and    al,BYTE PTR [eax+0x3a]
  411c64:	xor    DWORD PTR [ecx+0x55],esp
  411c67:	xor    DWORD PTR [edx+0x12],ebx
  411c6a:	lods   al,BYTE PTR ss:[esi]
  411c6c:	popf   
  411c6d:	jl     0x411c9a
  411c6f:	and    al,0xe
  411c71:	add    al,BYTE PTR [esp+esi*1+0x50e66224]
  411c78:	ds adc eax,0x97a0bc72
  411c7e:	mov    al,BYTE PTR [ebx]
  411c80:	add    edx,DWORD PTR [ecx]
  411c82:	pop    es
  411c83:	lds    ebx,FWORD PTR [edx-0x1c5790f9]
  411c89:	pop    ebx
  411c8a:	and    al,0xb3
  411c8c:	cmovle eax,esp
  411c8f:	repz pop esp
  411c91:	call   0xbf8:0xdf571521
  411c98:	ins    DWORD PTR es:[edi],dx
  411c99:	push   0xffffffa2
  411c9b:	pop    ds
  411c9c:	fist   DWORD PTR [eax+0x24]
  411c9f:	ins    DWORD PTR es:[edi],dx
  411ca0:	xchg   ebx,eax
  411ca1:	push   esp
  411ca2:	inc    ebx
  411ca3:	pop    ebp
  411ca4:	idiv   DWORD PTR [edi-0x56]
  411ca7:	in     eax,dx
  411ca8:	lods   eax,DWORD PTR ds:[esi]
  411ca9:	jmp    0xc0bf:0xf2b8dcce
  411cb0:	scas   al,BYTE PTR es:[edi]
  411cb1:	loop   0x411c5e
  411cb3:	mov    esi,0xc534919
  411cb8:	aas    
  411cb9:	mov    edi,?
  411cbb:	sbb    eax,0x8ad00d72
  411cc0:	cmp    al,0x81
  411cc2:	(bad)  
  411cc3:	stc    
  411cc4:	or     DWORD PTR [ebp-0x76f95f61],ebp
  411cca:	pop    eax
  411ccb:	out    dx,al
  411ccc:	cmp    eax,0xa5f7294e
  411cd1:	fld    QWORD PTR [ebx+0x69f82f74]
  411cd7:	fstp   DWORD PTR [esi]
  411cd9:	call   0x6fdcc5fd
  411cde:	mov    ebx,0x4cc05b51
  411ce3:	retf   0x3fd0
  411ce6:	test   eax,0xc4672a67
  411ceb:	dec    ebx
  411cec:	inc    esp
  411ced:	in     eax,dx
  411cee:	or     eax,ebx
  411cf0:	mov    eax,ds:0x48fd3971
  411cf5:	es iret 
  411cf7:	sbb    al,0x14
  411cf9:	pop    ds
  411cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cfb:	fs or  cl,ch
  411cfe:	rcl    esi,cl
  411d00:	into   
  411d01:	pop    esi
  411d02:	mov    bl,BYTE PTR [edi+edi*8+0x70619c01]
  411d09:	adc    eax,0x3fc11248
  411d0e:	xchg   esp,eax
  411d0f:	ficomp DWORD PTR cs:[ebp+0x49de7560]
  411d16:	test   eax,0xbfca536a
  411d1b:	jmp    0x411cc5
  411d1d:	repnz mov ebp,0xd7f3d4b
  411d23:	mov    ch,0x4f
  411d25:	inc    eax
  411d26:	pop    edx
  411d27:	in     al,0x3e
  411d29:	cdq    
  411d2a:	pop    esi
  411d2b:	mov    ebx,DWORD PTR [ebp-0x61]
  411d2e:	pop    edx
  411d2f:	adc    DWORD PTR [eax],eax
  411d31:	clc    
  411d32:	pop    es
  411d33:	aad    0x7c
  411d35:	pop    ebx
  411d36:	jno    0x411d08
  411d38:	and    eax,0x4d763a21
  411d3e:	int    0xbd
  411d40:	fwait
  411d41:	test   al,0xa1
  411d43:	loope  0x411d19
  411d45:	call   0x1cf9:0x8097f22c
  411d4c:	cwde   
  411d4d:	sub    al,0x61
  411d4f:	cld    
  411d50:	sub    BYTE PTR [esp+ebx*2-0x56],al
  411d54:	(bad)  
  411d55:	mov    ebx,0x81b74999
  411d5a:	or     esp,edx
  411d5c:	in     al,0x7d
  411d5e:	inc    esp
  411d5f:	add    DWORD PTR [eax-0x66cfce88],ecx
  411d65:	sbb    esp,DWORD PTR [edi-0x1e561e90]
  411d6b:	ja     0x411d0d
  411d6d:	lahf   
  411d6e:	outs   dx,DWORD PTR ds:[esi]
  411d6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411d70:	dec    esi
  411d71:	ret    
  411d72:	ins    DWORD PTR es:[edi],dx
  411d73:	loope  0x411dd1
  411d75:	in     eax,0x92
  411d77:	jnp    0x411d1b
  411d79:	sub    eax,0x2fec42e6
  411d7e:	add    al,0x75
  411d80:	xlat   BYTE PTR ds:[ebx]
  411d81:	repz sbb eax,0x87ab6090
  411d87:	ret    
  411d88:	push   esi
  411d89:	mov    dl,0xbc
  411d8b:	ret    
  411d8c:	mov    bl,0xd0
  411d8e:	jo     0x411d35
  411d90:	push   es
  411d91:	mov    BYTE PTR [edx+0x40d30499],0x5d
  411d98:	daa    
  411d99:	mov    cl,0xe2
  411d9b:	xchg   esp,eax
  411d9c:	mov    ah,0x2a
  411d9e:	test   al,0x73
  411da0:	outs   dx,DWORD PTR ds:[esi]
  411da1:	int3   
  411da2:	data16 sub al,BYTE PTR [edi+0x56]
  411da6:	dec    esp
  411da7:	mov    edi,0xa9fb2c6f
  411dac:	pop    DWORD PTR [bp+si]
  411daf:	enter  0x98c6,0x29
  411db3:	scas   al,BYTE PTR es:[edi]
  411db4:	mov    ds:0xa514dcc1,al
  411db9:	pop    esi
  411dba:	adc    BYTE PTR [ebp-0x24],ah
  411dbd:	int3   
  411dbe:	inc    ebp
  411dbf:	cmp    al,0xe4
  411dc1:	stos   DWORD PTR es:[edi],eax
  411dc2:	jecxz  0x411dfe
  411dc4:	sbb    ecx,DWORD PTR [ebx]
  411dc6:	mov    WORD PTR [esi+ebp*4+0x534c2660],cs
  411dcd:	xchg   edi,eax
  411dce:	mov    bh,0xfa
  411dd0:	fimul  WORD PTR [ecx]
  411dd2:	clc    
  411dd3:	inc    ebx
  411dd4:	int3   
  411dd5:	(bad)  
  411dd6:	out    dx,eax
  411dd7:	jb     0x411e4e
  411dd9:	dec    eax
  411dda:	mov    dl,dh
  411ddc:	(bad)
  411ddf:	das    
  411de0:	mov    es,WORD PTR [ebp+0x5e]
  411de3:	and    ebx,DWORD PTR [eax-0x54]
  411de6:	and    al,0xdb
  411de8:	retf   
  411de9:	rcl    ebp,1
  411deb:	js     0x411d95
  411ded:	mov    bl,0xff
  411def:	in     al,0x54
  411df1:	nop
  411df2:	jo     0x411dd2
  411df4:	popa   
  411df5:	fild   WORD PTR [edx-0x6e]
  411df8:	inc    esi
  411df9:	loop   0x411e00
  411dfb:	adc    eax,0x1439d504
  411e00:	movntq QWORD PTR [edi],mm7
  411e03:	inc    ebp
  411e04:	mov    al,0xc4
  411e06:	sub    BYTE PTR [edi+0x14],dl
  411e09:	mov    ds:0x44e65283,al
  411e0e:	mov    ds:0x50799671,al
  411e13:	lea    ebp,[ecx-0x6c01fef]
  411e19:	dec    edx
  411e1a:	push   ebx
  411e1b:	rcl    BYTE PTR [esi-0x3e5f073c],0x76
  411e22:	sub    bh,BYTE PTR [ebx+0x4f]
  411e25:	add    al,0x5c
  411e27:	loope  0x411e77
  411e29:	xor    eax,0x69a5ae07
  411e2e:	ret    0xb576
  411e31:	pop    esp
  411e32:	jge    0x411e31
  411e34:	add    al,bl
  411e36:	mov    ebp,0xe0346f33
  411e3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e3c:	and    eax,0x56bc7b62
  411e41:	loope  0x411de2
  411e43:	push   ds
  411e44:	mov    eax,ds:0x6f117190
  411e49:	scas   al,BYTE PTR es:[edi]
  411e4a:	fmul   QWORD PTR [ebx-0x1a]
  411e4d:	stos   DWORD PTR es:[edi],eax
  411e4e:	cmp    al,0x50
  411e50:	push   edi
  411e51:	hlt    
  411e52:	sbb    DWORD PTR [ebx],edx
  411e54:	pop    ds
  411e55:	push   esp
  411e56:	out    dx,al
  411e57:	scas   eax,DWORD PTR es:[edi]
  411e58:	or     DWORD PTR [eax+0x1070316a],edi
  411e5e:	je     0x411ebe
  411e60:	pop    esi
  411e61:	and    eax,0xb703e84c
  411e66:	push   esi
  411e67:	jp     0x411ea7
  411e69:	jb     0x411e1b
  411e6b:	pop    es
  411e6c:	add    BYTE PTR [esi-0x408406dd],ch
  411e72:	mov    edi,0xc273429c
  411e77:	and    al,0x12
  411e79:	xchg   esi,eax
  411e7a:	retf   
  411e7b:	shl    BYTE PTR [ecx],0x64
  411e7e:	xor    al,bl
  411e80:	fstp   DWORD PTR [eax+ebp*1]
  411e83:	not    BYTE PTR [esi-0x1b]
  411e86:	clc    
  411e87:	fisttp QWORD PTR [ecx]
  411e89:	sub    esi,DWORD PTR [ecx+eiz*1-0x45]
  411e8d:	(bad)  
  411e8f:	adc    bh,BYTE PTR ss:[edi+0x54]
  411e93:	(bad)  
  411e94:	sub    eax,0x264abd15
  411e99:	sub    BYTE PTR [ebx],ch
  411e9b:	fs jle 0x411ec7
  411e9e:	jecxz  0x411efa
  411ea0:	or     ebx,DWORD PTR [esi]
  411ea2:	jge    0x411f1b
  411ea4:	in     eax,0x7
  411ea6:	(bad)  
  411ea7:	test   DWORD PTR [esi+0x233d754d],0x85cb02e
  411eb1:	outs   dx,DWORD PTR ds:[esi]
  411eb2:	xlat   BYTE PTR ds:[ebx]
  411eb3:	xchg   ebp,eax
  411eb4:	xor    edx,DWORD PTR [edi]
  411eb6:	jle    0x411f1c
  411eb8:	cmc    
  411eb9:	leave  
  411eba:	sub    al,0xc5
  411ebc:	sub    eax,0x2f640a80
  411ec1:	fcom   QWORD PTR ds:0x91ac3196
  411ec7:	xchg   ebx,eax
  411ec8:	bound  esp,QWORD PTR ds:[ecx-0xa]
  411ecc:	sti    
  411ecd:	leave  
  411ece:	mov    BYTE PTR ss:[esi-0x6b],bh
  411ed2:	mov    DWORD PTR [eiz*8+0x3c206e5a],edx
  411ed9:	cli    
  411eda:	popa   
  411edb:	ja     0x411eee
  411edd:	popa   
  411ede:	sub    eax,0xc91fde84
  411ee3:	imul   esp,DWORD PTR [ebx-0x4d306815],0x1026a49d
  411eed:	jmp    FWORD PTR [edi-0x184c4e77]
  411ef3:	js     0x411ef0
  411ef5:	std    
  411ef6:	and    eax,0x6fb4aac7
  411efb:	mov    WORD PTR [ebx+ebx*1-0x92fdb39],gs
  411f02:	fisttp QWORD PTR [ebp-0xc]
  411f05:	jne    0x411ee6
  411f07:	add    ebp,DWORD PTR [edx+ebp*1+0x2d]
  411f0b:	imul   edx,DWORD PTR ds:0x2d1c4710,0xff957d
  411f15:	ja     0x411f14
  411f17:	xchg   edx,eax
  411f18:	pop    es
  411f19:	mov    BYTE PTR [ebp-0x49ce9166],dl
  411f1f:	ins    BYTE PTR es:[edi],dx
  411f20:	fistp  DWORD PTR [ebx]
  411f22:	jmp    0x7974:0xf468dd
  411f29:	mov    dl,0xf4
  411f2b:	dec    edx
  411f2c:	imul   edi,DWORD PTR [edx+0x62],0xffffffc5
  411f30:	inc    eax
  411f31:	pop    esi
  411f32:	add    ch,BYTE PTR [ecx+0x5]
  411f35:	dec    esp
  411f36:	mov    ds:0xe8792a7a,eax
  411f3b:	cwde   
  411f3c:	ss ins BYTE PTR es:[edi],dx
  411f3e:	and    al,0xc7
  411f40:	pop    ebx
  411f41:	cmc    
  411f42:	mov    bh,0xe2
  411f44:	ins    DWORD PTR es:[di],dx
  411f46:	iret   
  411f47:	push   es
  411f48:	push   ebx
  411f49:	inc    esp
  411f4a:	fwait
  411f4b:	sti    
  411f4c:	cld    
  411f4d:	test   eax,0x2b3c9997
  411f52:	xchg   esi,eax
  411f53:	mov    dl,0xc9
  411f55:	and    ebp,esi
  411f57:	pop    esi
  411f58:	push   ss
  411f59:	out    dx,eax
  411f5a:	jmp    0x52e43b98
  411f5f:	and    al,0x20
  411f61:	inc    esp
  411f62:	fcomp  QWORD PTR [ecx+0x4b]
  411f65:	fild   QWORD PTR [esi+0x42cbc249]
  411f6b:	and    eax,0xf32ab1a1
  411f70:	push   es
  411f71:	(bad)  
  411f72:	jae    0x411f17
  411f74:	mov    ds:0xc70353e,al
  411f79:	lea    edi,[ebp-0x7e8604b3]
  411f7f:	adc    bh,ah
  411f81:	mov    DWORD PTR [ecx+0x7f3d630d],0x5e2cd567
  411f8b:	imul   eax,DWORD PTR [edi-0x6f],0xffffffc3
  411f8f:	ret    0x664d
  411f92:	and    bl,BYTE PTR [edi]
  411f94:	outs   dx,DWORD PTR ds:[esi]
  411f95:	out    0x34,al
  411f97:	scas   eax,DWORD PTR es:[edi]
  411f98:	push   cs
  411f99:	ss pop es
  411f9b:	imul   esp,DWORD PTR [edx+0x45],0xffffffaf
  411f9f:	sar    DWORD PTR [edx-0x6d],1
  411fa2:	xor    BYTE PTR [ecx+0x17],0xb8
  411fa6:	inc    eax
  411fa7:	dec    ebx
  411fa8:	scas   al,BYTE PTR es:[edi]
  411fa9:	les    ecx,FWORD PTR [ebp-0x2d]
  411fac:	cmp    BYTE PTR [eax+esi*4],cl
  411faf:	mov    WORD PTR [ebx-0x59292ffb],fs
  411fb5:	jo     0x412024
  411fb7:	cmp    edx,ebx
  411fb9:	adc    BYTE PTR [ebx-0x3284eea2],al
  411fbf:	icebp  
  411fc0:	jno    0x412007
  411fc2:	stc    
  411fc3:	ins    BYTE PTR es:[edi],dx
  411fc4:	test   DWORD PTR [ecx+0x52109da],0x7f4ad320
  411fce:	xchg   ah,al
  411fd0:	(bad)  
  411fd1:	cdq    
  411fd2:	jge    0x411f7f
  411fd4:	mov    esi,0x25ad995a
  411fd9:	loope  0x411fa8
  411fdb:	xchg   ecx,eax
  411fdc:	pop    esp
  411fdd:	and    BYTE PTR [edx],ch
  411fdf:	mov    DWORD PTR [edx],esp
  411fe1:	retw   
  411fe3:	xlat   BYTE PTR ds:[ebx]
  411fe4:	cdq    
  411fe5:	xor    ebp,DWORD PTR [edi-0x58ca16b9]
  411feb:	add    eax,DWORD PTR [ebp-0xbad204c]
  411ff1:	call   0x5712:0xa8bed2a2
  411ff8:	and    al,0xa5
  411ffa:	fmul   st,st(2)
  411ffc:	int3   
  411ffd:	sti    
  411ffe:	mov    ah,0x97
  412000:	test   cl,ah
  412002:	ja     0x412019
  412004:	test   BYTE PTR [edi],bl
  412006:	hlt    
  412007:	push   esi
  412008:	push   eax
  412009:	sub    cl,BYTE PTR [ecx+0x58c99a52]
  41200f:	mov    edi,DWORD PTR [eax]
  412011:	dec    esi
  412012:	sbb    al,0x5b
  412014:	ret    
  412015:	aam    0xc2
  412017:	mov    ds:0x93a0f6cc,eax
  41201c:	leave  
  41201d:	cmc    
  41201e:	cmp    eax,0x94baf84e
  412023:	and    eax,0x33d71067
  412028:	xor    edi,0x58
  41202b:	wrmsr  
  41202d:	mov    esp,esi
  41202f:	sbb    BYTE PTR [eax-0x2f],bh
  412032:	jo     0x411ff3
  412034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412035:	ds pushf 
  412037:	xchg   DWORD PTR [esi-0x48cee105],edi
  41203d:	aad    0xe1
  41203f:	sub    esi,DWORD PTR fs:[edi+0x2847080d]
  412046:	js     0x4120bc
  412048:	jmp    0x637ba516
  41204d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41204e:	scas   eax,DWORD PTR es:[edi]
  41204f:	and    bl,bl
  412051:	mov    WORD PTR [edi],?
  412053:	xchg   esp,eax
  412054:	sets   BYTE PTR [ecx]
  412057:	push   ebx
  412058:	test   DWORD PTR [eax],0x20057734
  41205e:	lods   eax,DWORD PTR ds:[esi]
  41205f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412060:	cs push edi
  412062:	cmc    
  412063:	cmc    
  412064:	rcr    dh,cl
  412066:	inc    edx
  412067:	xor    BYTE PTR [eax+0x3eafe04a],bh
  41206d:	xor    BYTE PTR [esi],dl
  41206f:	stos   BYTE PTR es:[edi],al
  412070:	clc    
  412071:	push   esp
  412072:	neg    ah
  412074:	dec    eax
  412075:	scas   al,BYTE PTR es:[edi]
  412076:	inc    ebp
  412077:	fisub  DWORD PTR [ecx+0x52]
  41207a:	call   DWORD PTR [esi-0x76]
  41207d:	ins    DWORD PTR es:[edi],dx
  41207e:	sub    al,0x4c
  412080:	add    al,0x80
  412082:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412083:	xlat   BYTE PTR ds:[ebx]
  412084:	push   edi
  412085:	or     eax,0x73141272
  41208a:	jae    0x4120d1
  41208c:	xor    edx,DWORD PTR [eax]
  41208e:	jno    0x41209d
  412090:	sbb    DWORD PTR [eax],0xc8b90c90
  412096:	ror    DWORD PTR [eax],cl
  412098:	sar    ebx,cl
  41209a:	lock and eax,0xf129d031
  4120a0:	fwait
  4120a1:	mov    al,ds:0xf798121c
  4120a6:	push   cs
  4120a7:	jp     0x412076
  4120a9:	add    ebx,ebp
  4120ab:	jecxz  0x412068
  4120ad:	and    DWORD PTR [ebp-0x1d80aa12],edx
  4120b3:	adc    ecx,esp
  4120b5:	imul   ebx,DWORD PTR [ecx-0x1fd545c5],0x880fb629
  4120bf:	xor    eax,0xf61eba4f
  4120c4:	je     0x412113
  4120c6:	fsub   DWORD PTR [esi]
  4120c8:	jns    0x412131
  4120ca:	pmulhuw mm0,QWORD PTR [eax]
  4120cd:	xor    al,0xa8
  4120cf:	sub    dh,bh
  4120d1:	inc    edi
  4120d2:	mov    eax,0x34de902e
  4120d7:	dec    ebx
  4120d8:	and    dl,BYTE PTR [edi]
  4120da:	sub    bl,BYTE PTR [edi+0x60a664dd]
  4120e0:	sbb    ebp,DWORD PTR [edx]
  4120e2:	mov    edx,0x8494507b
  4120e7:	int    0xb5
  4120e9:	dec    edi
  4120ea:	push   DWORD PTR [ecx-0x5d]
  4120ed:	lea    ecx,ds:0x723861e8
  4120f3:	push   esp
  4120f4:	push   0x543da20a
  4120f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4120fa:	mov    dh,0x8f
  4120fc:	nop
  4120fd:	fmul   DWORD PTR [ebp+eiz*1-0x4d]
  412101:	jle    0x4120f6
  412103:	xchg   BYTE PTR [edi+0x31],cl
  412106:	lea    ebx,[esi]
  412108:	push   edx
  412109:	mov    esi,0x74c47970
  41210e:	push   eax
  41210f:	jnp    0x412098
  412111:	dec    esp
  412112:	mov    al,0xf8
  412114:	push   0x62c2247f
  412119:	xor    DWORD PTR [eax-0x6cd19ac9],esi
  41211f:	mov    dl,0x5a
  412121:	mov    eax,0x457b885e
  412126:	mov    bl,0xa6
  412128:	hlt    
  412129:	cmp    BYTE PTR [esi],0xa4
  41212c:	jnp    0x4120f7
  41212e:	scas   al,BYTE PTR es:[edi]
  41212f:	mov    fs,ecx
  412131:	sub    eax,0x59040989
  412136:	jo     0x412186
  412138:	xor    DWORD PTR [edx],ebx
  41213a:	call   0x32bc66ec
  41213f:	push   0x297ff07c
  412144:	add    al,0xb9
  412146:	daa    
  412147:	retf   
  412148:	mov    DWORD PTR [ebp-0x50],edx
  41214b:	adc    ebx,ebx
  41214d:	mov    edx,DWORD PTR [ebp+0x8]
  412150:	and    DWORD PTR ds:0x428e8d,0x0
  41215a:	jmp    0x41216c
  41215f:	mov    ebx,DWORD PTR ds:0x428e8d
  412165:	inc    ebx
  412166:	mov    DWORD PTR ds:0x428e8d,ebx
  41216c:	cmp    DWORD PTR ds:0x428e8d,0x1c
  412173:	jae    0x4121a0
  412179:	cmp    DWORD PTR ds:0x428e8d,0x20
  412180:	ja     0x4121a0
  412186:	jmp    0x41219b
  41218b:	push   0x428039
  412190:	push   0x400000
  412195:	call   DWORD PTR ds:0x42ca24
  41219b:	jmp    0x41215f
  4121a0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4121a3:	inc    DWORD PTR ds:0x428e71
  4121a9:	add    edx,ecx
  4121ab:	sbb    DWORD PTR ds:0x428e8d,0x5a59
  4121b5:	or     edx,ebx
  4121b7:	mov    DWORD PTR ds:0x428e55,0x19
  4121c1:	cmp    DWORD PTR ds:0x428e55,0x0
  4121c8:	je     0x4121fb
  4121ce:	cmp    DWORD PTR ds:0x428e55,0x1e
  4121d5:	jle    0x4121fb
  4121db:	jmp    0x4121e9
  4121e0:	push   DWORD PTR [ebp-0x20]
  4121e3:	call   DWORD PTR ds:0x42ca28
  4121e9:	mov    ebx,DWORD PTR ds:0x428e55
  4121ef:	dec    ebx
  4121f0:	mov    DWORD PTR ds:0x428e55,ebx
  4121f6:	jmp    0x4121c1
  4121fb:	mov    DWORD PTR [ebp-0x4c],edx
  4121fe:	add    DWORD PTR ds:0x428eb1,ebx
  412204:	mov    edx,DWORD PTR [ebp+0x8]
  412207:	mov    DWORD PTR ds:0x428ec5,0x16
  412211:	cmp    DWORD PTR ds:0x428ec5,0x0
  412218:	je     0x412267
  41221e:	cmp    DWORD PTR ds:0x428ec5,0xc
  412225:	jl     0x412267
  41222b:	jmp    0x41223b
  412230:	push   0x1fc5
  412235:	call   DWORD PTR ds:0x42ca2c
  41223b:	cmp    DWORD PTR ds:0x428ec5,0xd
  412242:	jne    0x412255
  412248:	mov    ebx,DWORD PTR ds:0x428ec5
  41224e:	dec    ebx
  41224f:	mov    DWORD PTR ds:0x428ec5,ebx
  412255:	mov    ebx,DWORD PTR ds:0x428ec5
  41225b:	dec    ebx
  41225c:	mov    DWORD PTR ds:0x428ec5,ebx
  412262:	jmp    0x412211
  412267:	mov    ebx,0xfdbe0321
  41226c:	add    DWORD PTR ds:0x428eb9,0x428e39
  412276:	sub    ebx,edx
  412278:	add    ebx,DWORD PTR [ebp-0x48]
  41227b:	sbb    edx,DWORD PTR ds:0x428e75
  412281:	mov    DWORD PTR [ebp-0x48],ebx
  412284:	xor    DWORD PTR ds:0x428e9d,edi
  41228a:	mov    edx,DWORD PTR [ebp+0x8]
  41228d:	mov    ebx,DWORD PTR ds:0x428e35
  412293:	sub    DWORD PTR ds:0x428e4d,ebx
  412299:	mov    ebx,DWORD PTR [ebp-0x44]
  41229c:	add    edx,edi
  41229e:	xor    DWORD PTR ds:0x428e7d,0x7f21
  4122a8:	xor    edx,ebx
  4122aa:	mov    DWORD PTR [ebp-0x44],edx
  4122ad:	movzx  edx,BYTE PTR ds:0x428e9d
  4122b4:	adc    DWORD PTR ds:0x428e65,edx
  4122ba:	mov    edx,DWORD PTR [ebp+0x8]
  4122bd:	xor    DWORD PTR ds:0x428e55,0x428ead
  4122c7:	xor    edx,eax
  4122c9:	add    edx,esi
  4122cb:	mov    DWORD PTR ds:0x428e95,0x7e15
  4122d5:	jne    0x40fc55
  4122db:	jmp    0x412616
  4122e0:	mov    edx,DWORD PTR [ebp-0xc]
  4122e3:	inc    ebx
  4122e4:	sub    edx,esi
  4122e6:	movzx  ebx,BYTE PTR ds:0x428ebd
  4122ed:	xor    DWORD PTR ds:0x428ec5,ebx
  4122f3:	xor    edx,eax
  4122f5:	mov    DWORD PTR ds:0x428e31,0x17
  4122ff:	cmp    DWORD PTR ds:0x428e31,0x0
  412306:	je     0x412355
  41230c:	cmp    DWORD PTR ds:0x428e31,0xa
  412313:	jle    0x412355
  412319:	jmp    0x412329
  41231e:	push   0x428059
  412323:	call   DWORD PTR ds:0x42ca30
  412329:	cmp    DWORD PTR ds:0x428e31,0xb
  412330:	jne    0x412343
  412336:	mov    ebx,DWORD PTR ds:0x428e31
  41233c:	dec    ebx
  41233d:	mov    DWORD PTR ds:0x428e31,ebx
  412343:	mov    ebx,DWORD PTR ds:0x428e31
  412349:	dec    ebx
  41234a:	mov    DWORD PTR ds:0x428e31,ebx
  412350:	jmp    0x4122ff
  412355:	mov    DWORD PTR [ebp-0x5c],edx
  412358:	mov    edx,DWORD PTR [ebp-0x10]
  41235b:	mov    ebx,DWORD PTR [ebp-0x8]
  41235e:	xor    DWORD PTR ds:0x428e99,0xf1a
  412368:	xor    edx,eax
  41236a:	xor    ebx,eax
  41236c:	sub    DWORD PTR ds:0x428ebd,0x1998
  412376:	sub    edx,ebx
  412378:	sub    edx,esi
  41237a:	xor    edx,eax
  41237c:	mov    DWORD PTR [ebp-0x10],edx
  41237f:	mov    edx,DWORD PTR [ebp-0x14]
  412382:	mov    DWORD PTR [ebp+0x8],edx
  412385:	jmp    0x4123fa
  41238a:	mov    edx,DWORD PTR [ebp+0x8]
  41238d:	mov    ebx,DWORD PTR [ebp-0x8]
  412390:	xor    edx,eax
  412392:	xor    ebx,eax
  412394:	sub    edx,ebx
  412396:	sub    edx,esi
  412398:	xor    edx,eax
  41239a:	mov    DWORD PTR [ebp+0x8],edx
  41239d:	mov    edx,DWORD PTR [ebp+0x8]
  4123a0:	mov    ebx,DWORD PTR [ebp-0x58]
  4123a3:	lea    edx,[ebx+edx*1+0x5708f8]
  4123aa:	mov    DWORD PTR [ebp-0x58],edx
  4123ad:	mov    edx,DWORD PTR [ebp+0x8]
  4123b0:	mov    ebx,DWORD PTR [ebp-0x54]
  4123b3:	add    edx,0x64f89a
  4123b9:	imul   edx,ebx
  4123bc:	mov    DWORD PTR [ebp-0x54],edx
  4123bf:	mov    edx,DWORD PTR [ebp+0x8]
  4123c2:	mov    ebx,DWORD PTR [ebp-0x50]
  4123c5:	add    edx,0x242ebed
  4123cb:	and    edx,ebx
  4123cd:	mov    DWORD PTR [ebp-0x50],edx
  4123d0:	mov    edx,DWORD PTR [ebp+0x8]
  4123d3:	mov    ebx,DWORD PTR [ebp-0x4c]
  4123d6:	add    edx,ecx
  4123d8:	or     edx,ebx
  4123da:	mov    DWORD PTR [ebp-0x4c],edx
  4123dd:	mov    edx,DWORD PTR [ebp+0x8]
  4123e0:	mov    ebx,0xfdbe0321
  4123e5:	sub    ebx,edx
  4123e7:	add    ebx,DWORD PTR [ebp-0x48]
  4123ea:	mov    DWORD PTR [ebp-0x48],ebx
  4123ed:	mov    edx,DWORD PTR [ebp+0x8]
  4123f0:	mov    ebx,DWORD PTR [ebp-0x44]
  4123f3:	add    edx,edi
  4123f5:	xor    edx,ebx
  4123f7:	mov    DWORD PTR [ebp-0x44],edx
  4123fa:	mov    edx,DWORD PTR [ebp+0x8]
  4123fd:	xor    edx,eax
  4123ff:	add    edx,esi
  412401:	jne    0x41238a
  412407:	mov    edx,DWORD PTR [ebp-0xc]
  41240a:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412411:	mov    bl,BYTE PTR [ebp-0x1]
  412414:	cmp    dl,bl
  412416:	je     0x4124f4
  41241c:	mov    ecx,DWORD PTR [ebp-0x5c]
  41241f:	mov    edx,DWORD PTR [ebp-0xc]
  412422:	mov    dl,BYTE PTR [ebp+edx*1-0x9c]
  412429:	mov    ebx,DWORD PTR [ebp+0xc]
  41242c:	xor    ecx,eax
  41242e:	cmp    dl,BYTE PTR [ebx+ecx*1+0x3272f8]
  412435:	jne    0x412628
  41243b:	mov    ecx,DWORD PTR [ebp-0x5c]
  41243e:	mov    edx,DWORD PTR [ebp+0xc]
  412441:	xor    ecx,eax
  412443:	movsx  ecx,BYTE PTR [edx+ecx*1+0x3272f8]
  41244b:	mov    edx,DWORD PTR [ebp-0x18]
  41244e:	xor    edx,eax
  412450:	add    edx,esi
  412452:	cmp    ecx,edx
  412454:	mov    ecx,DWORD PTR [ebp-0x14]
  412457:	mov    DWORD PTR [ebp+0x8],ecx
  41245a:	mov    ecx,DWORD PTR [ebp+0x8]
  41245d:	je     0x414aa9
  412463:	xor    ecx,eax
  412465:	add    ecx,esi
  412467:	mov    ecx,0xf641bea
  41246c:	je     0x41257c
  412472:	mov    edx,DWORD PTR [ebp+0x8]
  412475:	mov    ebx,DWORD PTR [ebp-0x8]
  412478:	xor    edx,eax
  41247a:	xor    ebx,eax
  41247c:	sub    edx,ebx
  41247e:	sub    edx,esi
  412480:	xor    edx,eax
  412482:	mov    DWORD PTR [ebp+0x8],edx
  412485:	mov    edx,DWORD PTR [ebp+0x8]
  412488:	mov    ebx,DWORD PTR [ebp-0x58]
  41248b:	lea    edx,[ebx+edx*1+0x5708f8]
  412492:	mov    DWORD PTR [ebp-0x58],edx
  412495:	mov    edx,DWORD PTR [ebp+0x8]
  412498:	mov    ebx,DWORD PTR [ebp-0x54]
  41249b:	add    edx,0x64f89a
  4124a1:	imul   edx,ebx
  4124a4:	mov    DWORD PTR [ebp-0x54],edx
  4124a7:	mov    edx,DWORD PTR [ebp+0x8]
  4124aa:	mov    ebx,DWORD PTR [ebp-0x50]
  4124ad:	add    edx,0x242ebed
  4124b3:	and    edx,ebx
  4124b5:	mov    DWORD PTR [ebp-0x50],edx
  4124b8:	mov    edx,DWORD PTR [ebp+0x8]
  4124bb:	mov    ebx,DWORD PTR [ebp-0x4c]
  4124be:	add    edx,ecx
  4124c0:	or     edx,ebx
  4124c2:	mov    DWORD PTR [ebp-0x4c],edx
  4124c5:	mov    edx,DWORD PTR [ebp+0x8]
  4124c8:	mov    ebx,0xfdbe0321
  4124cd:	sub    ebx,edx
  4124cf:	add    ebx,DWORD PTR [ebp-0x48]
  4124d2:	mov    DWORD PTR [ebp-0x48],ebx
  4124d5:	mov    edx,DWORD PTR [ebp+0x8]
  4124d8:	mov    ebx,DWORD PTR [ebp-0x44]
  4124db:	add    edx,edi
  4124dd:	xor    edx,ebx
  4124df:	mov    DWORD PTR [ebp-0x44],edx
  4124e2:	mov    edx,DWORD PTR [ebp+0x8]
  4124e5:	xor    edx,eax
  4124e7:	add    edx,esi
  4124e9:	jne    0x412472
  4124ef:	jmp    0x41257c
  4124f4:	mov    edx,DWORD PTR [ebp-0x14]
  4124f7:	mov    DWORD PTR [ebp+0x8],edx
  4124fa:	jmp    0x41256f
  4124ff:	mov    edx,DWORD PTR [ebp+0x8]
  412502:	mov    ebx,DWORD PTR [ebp-0x8]
  412505:	xor    edx,eax
  412507:	xor    ebx,eax
  412509:	sub    edx,ebx
  41250b:	sub    edx,esi
  41250d:	xor    edx,eax
  41250f:	mov    DWORD PTR [ebp+0x8],edx
  412512:	mov    edx,DWORD PTR [ebp+0x8]
  412515:	mov    ebx,DWORD PTR [ebp-0x58]
  412518:	lea    edx,[ebx+edx*1+0x5708f8]
  41251f:	mov    DWORD PTR [ebp-0x58],edx
  412522:	mov    edx,DWORD PTR [ebp+0x8]
  412525:	mov    ebx,DWORD PTR [ebp-0x54]
  412528:	add    edx,0x64f89a
  41252e:	imul   edx,ebx
  412531:	mov    DWORD PTR [ebp-0x54],edx
  412534:	mov    edx,DWORD PTR [ebp+0x8]
  412537:	mov    ebx,DWORD PTR [ebp-0x50]
  41253a:	add    edx,0x242ebed
  412540:	and    edx,ebx
  412542:	mov    DWORD PTR [ebp-0x50],edx
  412545:	mov    edx,DWORD PTR [ebp+0x8]
  412548:	mov    ebx,DWORD PTR [ebp-0x4c]
  41254b:	add    edx,ecx
  41254d:	or     edx,ebx
  41254f:	mov    DWORD PTR [ebp-0x4c],edx
  412552:	mov    edx,DWORD PTR [ebp+0x8]
  412555:	mov    ebx,0xfdbe0321
  41255a:	sub    ebx,edx
  41255c:	add    ebx,DWORD PTR [ebp-0x48]
  41255f:	mov    DWORD PTR [ebp-0x48],ebx
  412562:	mov    edx,DWORD PTR [ebp+0x8]
  412565:	mov    ebx,DWORD PTR [ebp-0x44]
  412568:	add    edx,edi
  41256a:	xor    edx,ebx
  41256c:	mov    DWORD PTR [ebp-0x44],edx
  41256f:	mov    edx,DWORD PTR [ebp+0x8]
  412572:	xor    edx,eax
  412574:	add    edx,esi
  412576:	jne    0x4124ff
  41257c:	mov    edx,DWORD PTR [ebp-0x14]
  41257f:	mov    DWORD PTR [ebp+0x8],edx
  412582:	jmp    0x4125f7
  412587:	mov    edx,DWORD PTR [ebp+0x8]
  41258a:	mov    ebx,DWORD PTR [ebp-0x8]
  41258d:	xor    edx,eax
  41258f:	xor    ebx,eax
  412591:	sub    edx,ebx
  412593:	sub    edx,esi
  412595:	xor    edx,eax
  412597:	mov    DWORD PTR [ebp+0x8],edx
  41259a:	mov    edx,DWORD PTR [ebp+0x8]
  41259d:	mov    ebx,DWORD PTR [ebp-0x58]
  4125a0:	lea    edx,[ebx+edx*1+0x5708f8]
  4125a7:	mov    DWORD PTR [ebp-0x58],edx
  4125aa:	mov    edx,DWORD PTR [ebp+0x8]
  4125ad:	mov    ebx,DWORD PTR [ebp-0x54]
  4125b0:	add    edx,0x64f89a
  4125b6:	imul   edx,ebx
  4125b9:	mov    DWORD PTR [ebp-0x54],edx
  4125bc:	mov    edx,DWORD PTR [ebp+0x8]
  4125bf:	mov    ebx,DWORD PTR [ebp-0x50]
  4125c2:	add    edx,0x242ebed
  4125c8:	and    edx,ebx
  4125ca:	mov    DWORD PTR [ebp-0x50],edx
  4125cd:	mov    edx,DWORD PTR [ebp+0x8]
  4125d0:	mov    ebx,DWORD PTR [ebp-0x4c]
  4125d3:	add    edx,ecx
  4125d5:	or     edx,ebx
  4125d7:	mov    DWORD PTR [ebp-0x4c],edx
  4125da:	mov    edx,DWORD PTR [ebp+0x8]
  4125dd:	mov    ebx,0xfdbe0321
  4125e2:	sub    ebx,edx
  4125e4:	add    ebx,DWORD PTR [ebp-0x48]
  4125e7:	mov    DWORD PTR [ebp-0x48],ebx
  4125ea:	mov    edx,DWORD PTR [ebp+0x8]
  4125ed:	mov    ebx,DWORD PTR [ebp-0x44]
  4125f0:	add    edx,edi
  4125f2:	xor    edx,ebx
  4125f4:	mov    DWORD PTR [ebp-0x44],edx
  4125f7:	mov    edx,DWORD PTR [ebp+0x8]
  4125fa:	xor    edx,eax
  4125fc:	add    edx,esi
  4125fe:	jne    0x412587
  412604:	mov    edx,DWORD PTR [ebp-0x8]
  412607:	mov    ebx,DWORD PTR [ebp-0xc]
  41260a:	xor    edx,eax
  41260c:	lea    edx,[edx+ebx*1+0x3272f8]
  412613:	mov    DWORD PTR [ebp-0xc],edx
  412616:	mov    edx,DWORD PTR [ebp-0x10]
  412619:	xor    edx,eax
  41261b:	add    edx,esi
  41261d:	jne    0x4122e0
  412623:	jmp    0x414ab3
  412628:	mov    ecx,DWORD PTR [ebp-0x14]
  41262b:	mov    DWORD PTR [ebp+0x8],ecx
  41262e:	jmp    0x4126a7
  412633:	mov    ecx,DWORD PTR [ebp+0x8]
  412636:	mov    edx,DWORD PTR [ebp-0x8]
  412639:	xor    ecx,eax
  41263b:	xor    edx,eax
  41263d:	sub    ecx,edx
  41263f:	sub    ecx,esi
  412641:	xor    ecx,eax
  412643:	mov    DWORD PTR [ebp+0x8],ecx
  412646:	mov    ecx,DWORD PTR [ebp+0x8]
  412649:	mov    edx,DWORD PTR [ebp-0x58]
  41264c:	lea    ecx,[edx+ecx*1+0x5708f8]
  412653:	mov    DWORD PTR [ebp-0x58],ecx
  412656:	mov    ecx,DWORD PTR [ebp+0x8]
  412659:	mov    edx,DWORD PTR [ebp-0x54]
  41265c:	add    ecx,0x64f89a
  412662:	imul   ecx,edx
  412665:	mov    DWORD PTR [ebp-0x54],ecx
  412668:	mov    ecx,DWORD PTR [ebp+0x8]
  41266b:	mov    edx,DWORD PTR [ebp-0x50]
  41266e:	add    ecx,0x242ebed
  412674:	and    ecx,edx
  412676:	mov    DWORD PTR [ebp-0x50],ecx
  412679:	mov    ecx,DWORD PTR [ebp+0x8]
  41267c:	mov    edx,DWORD PTR [ebp-0x4c]
  41267f:	add    ecx,0xf641bea
  412685:	or     ecx,edx
  412687:	mov    DWORD PTR [ebp-0x4c],ecx
  41268a:	mov    ecx,DWORD PTR [ebp+0x8]
  41268d:	mov    edx,0xfdbe0321
  412692:	sub    edx,ecx
  412694:	add    edx,DWORD PTR [ebp-0x48]
  412697:	mov    DWORD PTR [ebp-0x48],edx
  41269a:	mov    ecx,DWORD PTR [ebp+0x8]
  41269d:	mov    edx,DWORD PTR [ebp-0x44]
  4126a0:	add    ecx,edi
  4126a2:	xor    ecx,edx
  4126a4:	mov    DWORD PTR [ebp-0x44],ecx
  4126a7:	mov    ecx,DWORD PTR [ebp+0x8]
  4126aa:	xor    ecx,eax
  4126ac:	add    ecx,esi
  4126ae:	jne    0x412633
  4126b4:	jmp    0x414abf
  4126b9:	mov    ecx,DWORD PTR [ebp+0x8]
  4126bc:	mov    edx,DWORD PTR [ebp-0x8]
  4126bf:	xor    ecx,eax
  4126c1:	xor    edx,eax
  4126c3:	sub    ecx,edx
  4126c5:	sub    ecx,esi
  4126c7:	xor    ecx,eax
  4126c9:	mov    DWORD PTR [ebp+0x8],ecx
  4126cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126cf:	mov    edx,DWORD PTR [ebp-0x58]
  4126d2:	lea    ecx,[edx+ecx*1+0x5708f8]
  4126d9:	mov    DWORD PTR [ebp-0x58],ecx
  4126dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4126df:	mov    edx,DWORD PTR [ebp-0x54]
  4126e2:	add    ecx,0x64f89a
  4126e8:	imul   ecx,edx
  4126eb:	mov    DWORD PTR [ebp-0x54],ecx
  4126ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4126f1:	mov    edx,DWORD PTR [ebp-0x50]
  4126f4:	add    ecx,0x242ebed
  4126fa:	and    ecx,edx
  4126fc:	mov    DWORD PTR [ebp-0x50],ecx
  4126ff:	mov    ecx,DWORD PTR [ebp+0x8]
  412702:	mov    edx,DWORD PTR [ebp-0x4c]
  412705:	add    ecx,0xf641bea
  41270b:	or     ecx,edx
  41270d:	jmp    0x414a86
  412712:	enter  0xa3a8,0x29
  412716:	jecxz  0x412742
  412718:	dec    edx
  412719:	push   0xffffff84
  41271b:	add    al,0xed
  41271d:	xlat   BYTE PTR ds:[ebx]
  41271e:	xor    DWORD PTR [edi+0x6e],ebx
  412721:	retf   
  412722:	push   cs
  412723:	jb     0x4127a0
  412725:	jnp    0x4126fe
  412727:	sahf   
  412728:	jnp    0x4127a5
  41272a:	xor    esi,ecx
  41272c:	fwait
  41272d:	sbb    cl,dl
  41272f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412730:	mov    edx,DWORD PTR [ecx]
  412732:	jbe    0x4126fc
  412734:	es push 0x9ac158cf
  41273a:	not    cl
  41273c:	dec    esp
  41273d:	dec    ecx
  41273e:	ins    BYTE PTR es:[edi],dx
  41273f:	data16 mov al,0x9e
  412742:	fimul  DWORD PTR [edi-0x6]
  412745:	and    al,ch
  412747:	xor    eax,DWORD PTR [ebx-0x40]
  41274a:	xchg   BYTE PTR [esi+ebp*4],ah
  41274d:	sub    dl,0xf7
  412750:	imul   ecx,DWORD PTR [edx-0x50],0xdbf9befb
  412757:	dec    ebx
  412758:	leave  
  412759:	lds    esi,FWORD PTR [edi]
  41275b:	shl    BYTE PTR [ebp+0x72],1
  41275e:	add    ebp,DWORD PTR es:[edi+0x5e91ab49]
  412765:	mov    DWORD PTR [eax+0x6f],edi
  412768:	sbb    BYTE PTR [eax-0x35],ah
  41276b:	fld    TBYTE PTR [edx-0x34]
  41276e:	pop    DWORD PTR [edx-0x4a095650]
  412774:	jbe    0x412770
  412776:	aam    0xc4
  412778:	pusha  
  412779:	push   edi
  41277a:	inc    edi
  41277b:	fldln2 
  41277d:	ins    BYTE PTR es:[edi],dx
  41277e:	pop    ss
  41277f:	(bad)  
  412780:	icebp  
  412781:	add    eax,0x93243cc
  412786:	xchg   edx,eax
  412787:	sub    bl,BYTE PTR [eax+0x2a]
  41278a:	pop    ds
  41278b:	push   0x7c
  41278d:	lea    edi,[esi-0xa1dd3da]
  412793:	fs adc eax,0x2ed44777
  412799:	cld    
  41279a:	scas   al,BYTE PTR es:[edi]
  41279b:	pop    ebp
  41279c:	add    al,0x1b
  41279e:	sar    DWORD PTR [eax-0x509aa22a],0xb7
  4127a5:	sub    al,0x8d
  4127a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127a8:	lods   eax,DWORD PTR ds:[esi]
  4127a9:	pop    ss
  4127aa:	ficomp DWORD PTR [edx+0x74b2e402]
  4127b0:	push   eax
  4127b1:	pusha  
  4127b2:	adc    DWORD PTR [esi+0x67],0xbe4005e2
  4127b9:	push   ds
  4127ba:	mov    eax,ds:0x39e94375
  4127bf:	mov    eax,ds:0x65a03cb3
  4127c4:	xor    esi,DWORD PTR [edi]
  4127c6:	or     dl,BYTE PTR [edi+edx*4-0x5b189f0a]
  4127cd:	jg     0x412790
  4127cf:	scas   eax,DWORD PTR es:[edi]
  4127d0:	cwde   
  4127d1:	fisttp QWORD PTR [eax-0x104f93c9]
  4127d7:	cmp    ebp,DWORD PTR [esi+ecx*1+0x15]
  4127db:	add    BYTE PTR [edx],0x76
  4127de:	sbb    DWORD PTR [eax+0x39],esp
  4127e1:	popf   
  4127e2:	int3   
  4127e3:	out    0x2b,eax
  4127e5:	mov    esi,0x5c4b8b2d
  4127ea:	in     al,dx
  4127eb:	retf   0x5d6e
  4127ee:	aad    0x94
  4127f0:	icebp  
  4127f1:	mov    DWORD PTR [ebp+0x19],eax
  4127f4:	mov    ch,0x4d
  4127f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127f7:	push   esi
  4127f8:	mov    WORD PTR [edi],gs
  4127fa:	sub    dl,bl
  4127fc:	push   ss
  4127fd:	out    dx,al
  4127fe:	sub    edx,DWORD PTR [esi-0x1b972f0c]
  412804:	xor    DWORD PTR ds:0xda07addd,ebx
  41280a:	rcl    DWORD PTR [esi],cl
  41280c:	pop    eax
  41280d:	pop    ds
  41280e:	cli    
  41280f:	jne    0x412816
  412811:	stc    
  412812:	or     ch,ch
  412814:	test   eax,0x44418bd0
  412819:	mov    DWORD PTR [edx+0x3ad03bba],eax
  41281f:	outs   dx,DWORD PTR ds:[esi]
  412820:	jmp    0xdf35:0x6c175dd0
  412827:	mov    eax,0xb25a2d28
  41282c:	push   ebx
  41282d:	lock pop ss
  41282f:	ficomp DWORD PTR ds:0xd2fdf2f7
  412835:	mov    ecx,edi
  412837:	js     0x4127fa
  412839:	sar    DWORD PTR ds:0xcbf79c24,0x5a
  412840:	pop    ecx
  412841:	mov    edx,0x4245daf6
  412846:	and    al,0xa7
  412848:	daa    
  412849:	adc    DWORD PTR [edi+0x2e],edx
  41284c:	out    dx,eax
  41284d:	inc    eax
  41284e:	in     eax,dx
  41284f:	(bad)  
  412850:	data16 mov dl,0x4
  412853:	mov    al,0xf2
  412855:	clc    
  412856:	push   ds
  412857:	push   ds
  412858:	jmp    0x242b:0x6ad32308
  41285f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412860:	mov    ds:0x62f4d9f8,al
  412865:	gs int3 
  412867:	fimul  DWORD PTR [eax+0x19fd546]
  41286d:	pusha  
  41286e:	sub    edx,DWORD PTR [ebx]
  412870:	dec    edx
  412871:	pop    esp
  412872:	mov    ebp,0x6a2743d9
  412877:	mov    edi,0x4c66243
  41287c:	inc    ebp
  41287d:	sub    DWORD PTR [edi+0x7244eee],0xc0d7b31b
  412887:	xlat   BYTE PTR ds:[ebx]
  412888:	lods   al,BYTE PTR ds:[esi]
  412889:	add    eax,0xda66c80e
  41288e:	neg    dl
  412890:	cmp    dh,BYTE PTR [edx]
  412892:	fistp  DWORD PTR [esi]
  412894:	or     BYTE PTR [edi-0x47],0xe9
  412898:	into   
  412899:	cld    
  41289a:	test   DWORD PTR [ebp+0x75],esi
  41289d:	fcom   QWORD PTR [ebx]
  41289f:	aad    0xc6
  4128a1:	retf   
  4128a2:	jne    0x4128bb
  4128a4:	xchg   ebx,eax
  4128a5:	xchg   esi,eax
  4128a6:	mov    BYTE PTR [esp+ebx*4+0x5dcf8602],ah
  4128ad:	sub    eax,0xa5a5c376
  4128b2:	sahf   
  4128b3:	xor    al,0x2f
  4128b5:	popa   
  4128b6:	fs mov ch,0xdc
  4128b9:	mov    dl,0x12
  4128bb:	daa    
  4128bc:	jle    0x4128c6
  4128be:	ins    DWORD PTR es:[edi],dx
  4128bf:	jmp    0xee58:0x8ea0dca7
  4128c6:	test   BYTE PTR [edx],0x30
  4128c9:	inc    ebx
  4128ca:	rcr    DWORD PTR [esi-0x1592b41f],0xe3
  4128d1:	jmp    0x41293f
  4128d3:	paddusw mm0,mm5
  4128d6:	les    edi,FWORD PTR [esi-0x6ab0bf39]
  4128dc:	retf   
  4128dd:	inc    edx
  4128de:	push   ebx
  4128df:	and    DWORD PTR [eax+eax*2],edx
  4128e2:	mov    edx,DWORD PTR [edx-0x2f]
  4128e5:	mov    ebx,0x4d6b629d
  4128ea:	adc    al,BYTE PTR [ebp+0x5d]
  4128ed:	xchg   edx,eax
  4128ee:	inc    ebp
  4128ef:	fwait
  4128f0:	les    eax,FWORD PTR [eax+esi*1]
  4128f3:	imul   edx,DWORD PTR [edx],0xeb16a9a3
  4128f9:	inc    ecx
  4128fa:	pop    eax
  4128fb:	mov    cs,WORD PTR [ebx+0xee54011]
  412901:	jne    0x412934
  412903:	int    0xb
  412905:	outs   dx,DWORD PTR ds:[esi]
  412906:	pop    ss
  412907:	retf   0xa7bb
  41290a:	xchg   ebx,eax
  41290b:	mov    al,ds:0x31b1f3fa
  412910:	pop    ss
  412911:	mov    esp,0x8cffb7a9
  412916:	inc    ecx
  412917:	mov    ebp,0x71397593
  41291c:	rcl    DWORD PTR [ebx],1
  41291e:	shr    edi,0xa6
  412921:	jne    0x41299e
  412923:	imul   esi,ecx,0x6d78e2f1
  412929:	sub    eax,0xf3d3a10a
  41292e:	or     dh,0x29
  412931:	ins    BYTE PTR es:[edi],dx
  412932:	jo     0x4128d3
  412934:	push   ss
  412935:	mov    eax,0xc2ab2399
  41293a:	sub    al,0xd9
  41293c:	mov    ecx,0xbb381ede
  412941:	pop    esp
  412942:	pop    edi
  412943:	jne    0x41290c
  412945:	push   ebp
  412946:	js     0x41291a
  412948:	cmp    eax,0x123d0506
  41294d:	clc    
  41294e:	or     BYTE PTR [ecx],al
  412950:	pop    edx
  412951:	mov    bh,0xd7
  412953:	push   ecx
  412954:	sbb    DWORD PTR [esi],ebp
  412956:	jg     0x4128eb
  412958:	out    0xb9,eax
  41295a:	or     eax,0x453ddf12
  41295f:	mov    cl,0xa2
  412961:	jns    0x412956
  412963:	dec    edi
  412964:	fmul   QWORD PTR [edx+0x2e]
  412967:	loopne 0x4128ff
  412969:	fs inc edi
  41296b:	ret    0xd4d0
  41296e:	mov    db3,ecx
  412971:	frstor [esi]
  412973:	shr    ch,1
  412975:	sub    ebx,DWORD PTR [esi+ecx*8+0x73]
  412979:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41297a:	dec    ecx
  41297b:	mov    eax,ds:0xb78eb920
  412980:	jg     0x412960
  412982:	call   0x87e7:0xe5969275
  412989:	mov    edi,0x8b9b3ed6
  41298e:	pushf  
  41298f:	sahf   
  412990:	inc    eax
  412991:	ss jle 0x412952
  412994:	xchg   ebx,eax
  412995:	stos   BYTE PTR es:[edi],al
  412996:	jo     0x41298a
  412998:	xchg   edx,eax
  412999:	rcr    DWORD PTR [ebp-0x3f07f159],cl
  41299f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129a0:	outs   dx,DWORD PTR ds:[esi]
  4129a1:	and    DWORD PTR [edi-0x59],0xffffffeb
  4129a5:	xor    al,0xfd
  4129a7:	ret    0x5ac5
  4129aa:	push   ds
  4129ab:	hlt    
  4129ac:	aaa    
  4129ad:	mov    edi,esp
  4129af:	sti    
  4129b0:	in     al,dx
  4129b1:	jle    0x41295e
  4129b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129b4:	xchg   ecx,eax
  4129b5:	adc    cl,BYTE PTR [ecx]
  4129b7:	scas   al,BYTE PTR es:[edi]
  4129b8:	cli    
  4129b9:	push   0xfffffff4
  4129bb:	pop    ecx
  4129bc:	mov    ebp,0xe5377d78
  4129c1:	div    BYTE PTR [esi-0x407f865a]
  4129c7:	sub    al,0x44
  4129c9:	xchg   esp,eax
  4129ca:	pop    ecx
  4129cb:	sbb    eax,0x74364138
  4129d0:	push   cs
  4129d1:	mov    ecx,0x8f68462b
  4129d6:	outs   dx,DWORD PTR ds:[esi]
  4129d7:	cmc    
  4129d8:	add    eax,0x99b232cb
  4129dd:	cmp    DWORD PTR [ecx],esi
  4129df:	push   0xffffffd7
  4129e1:	jno    0x4129cb
  4129e3:	out    0x15,eax
  4129e5:	outs   dx,DWORD PTR ds:[esi]
  4129e6:	(bad)  
  4129e7:	sbb    al,0xb8
  4129e9:	xor    esi,DWORD PTR [edi]
  4129eb:	fistp  QWORD PTR [ebx+0x53]
  4129ee:	mov    al,ds:0x6ff300e1
  4129f3:	xchg   esp,eax
  4129f4:	push   eax
  4129f5:	xchg   ecx,eax
  4129f6:	mov    al,0xb6
  4129f8:	sbb    esi,DWORD PTR [eax]
  4129fa:	cdq    
  4129fb:	aas    
  4129fc:	xchg   ecx,eax
  4129fd:	not    BYTE PTR [ecx+0x1]
  412a00:	mov    bl,0x7f
  412a02:	clc    
  412a03:	xor    edi,DWORD PTR [ebx]
  412a05:	arpl   WORD PTR [esi+0x11b0f2d0],dx
  412a0b:	jb     0x4129c0
  412a0d:	fsub   DWORD PTR [esi+ecx*4]
  412a10:	push   esp
  412a11:	rcl    DWORD PTR [edx],cl
  412a13:	and    ecx,DWORD PTR [eax]
  412a15:	cmp    dh,bh
  412a17:	sub    BYTE PTR [edx-0x3429e438],bl
  412a1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a1e:	stos   DWORD PTR es:[edi],eax
  412a1f:	retf   
  412a20:	push   es
  412a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a22:	loope  0x4129c6
  412a24:	or     al,BYTE PTR [eax]
  412a26:	jle    0x4129ff
  412a28:	mov    esp,0x9efe027a
  412a2d:	out    0x19,al
  412a2f:	dec    esi
  412a30:	sbb    eax,0xeea535a9
  412a35:	jo     0x412a25
  412a37:	xor    DWORD PTR [ecx],0x3a
  412a3a:	test   esi,ebx
  412a3c:	sub    eax,0x95a59fb5
  412a41:	sub    al,BYTE PTR [edi]
  412a43:	loopne 0x412a53
  412a45:	xchg   BYTE PTR [esi-0x1ea882b1],bh
  412a4b:	jmp    0x412a3d
  412a4d:	or     DWORD PTR [ebx],0x3ca2c44a
  412a53:	push   ss
  412a54:	and    BYTE PTR [ebx+0xc],ch
  412a57:	xchg   edx,eax
  412a58:	adc    esp,DWORD PTR [ebx]
  412a5a:	outs   dx,BYTE PTR ds:[esi]
  412a5b:	mov    ebp,ebp
  412a5d:	das    
  412a5e:	lahf   
  412a5f:	pop    eax
  412a60:	sbb    ch,cl
  412a62:	adc    esi,DWORD PTR [esi+0x7c43481a]
  412a68:	fild   WORD PTR [edx-0x64979bc6]
  412a6e:	mov    esi,0x9b724a23
  412a73:	je     0x412ae1
  412a75:	pop    edx
  412a76:	pop    es
  412a77:	inc    edx
  412a78:	xchg   ebp,eax
  412a79:	fcmovnu st,st(2)
  412a7b:	fist   WORD PTR [eax+0x61408071]
  412a81:	mov    ds:0x30680c95,al
  412a86:	add    eax,0xeec4d034
  412a8b:	ret    0x9712
  412a8e:	fistp  WORD PTR [ebx]
  412a90:	xor    esi,ebp
  412a92:	mov    cl,0xe9
  412a94:	and    DWORD PTR [ebx],ebp
  412a96:	adc    eax,0xad9c39c0
  412a9b:	mov    bh,0x27
  412a9d:	loopne 0x412aa2
  412a9f:	aad    0xd7
  412aa1:	fs scas eax,DWORD PTR es:[edi]
  412aa3:	sub    al,0x4c
  412aa5:	loope  0x412ae6
  412aa7:	enter  0x241e,0x72
  412aab:	imul   edi,DWORD PTR [eax+0x19],0xf5850913
  412ab2:	or     BYTE PTR [edi],0xbf
  412ab5:	jle    0x412a40
  412ab7:	(bad)  
  412ab8:	sbb    BYTE PTR [ebp+0x7cbe1dc5],bh
  412abe:	aad    0x70
  412ac0:	popf   
  412ac1:	mov    dl,0xb7
  412ac3:	(bad)  
  412ac4:	push   esi
  412ac5:	jo     0x412a5a
  412ac7:	rcl    DWORD PTR [ebp+0x532f0af6],0xc1
  412ace:	mov    ah,0x47
  412ad0:	jmp    0x250ae59a
  412ad5:	sbb    eax,0x442df7f7
  412ada:	mov    al,ds:0x46ffed00
  412adf:	push   ebx
  412ae0:	hlt    
  412ae1:	sub    esi,ebx
  412ae3:	pop    esi
  412ae4:	add    eax,0x40a322d8
  412ae9:	stos   DWORD PTR es:[edi],eax
  412aea:	scas   al,BYTE PTR es:[edi]
  412aeb:	pusha  
  412aec:	shr    DWORD PTR [ebx-0x54760672],0x81
  412af3:	and    ebp,DWORD PTR [eax]
  412af5:	mov    ebp,esi
  412af7:	inc    ebx
  412af8:	cmc    
  412af9:	inc    edi
  412afa:	jno    0x412aeb
  412afc:	ins    BYTE PTR es:[edi],dx
  412afd:	xor    ecx,ebp
  412aff:	xor    edi,edx
  412b01:	enter  0x879,0xdb
  412b05:	or     ebp,ebp
  412b07:	hlt    
  412b08:	xchg   edi,eax
  412b09:	sub    DWORD PTR [esp+ecx*1],ecx
  412b0c:	xchg   esp,eax
  412b0d:	or     esi,DWORD PTR [eax+ebp*8]
  412b10:	enter  0x7809,0x90
  412b14:	test   DWORD PTR [ecx+eiz*4],0x9fbe1b5b
  412b1b:	mov    ds:0x879b7c25,eax
  412b20:	pop    ss
  412b21:	mov    DWORD PTR cs:[ebx+0x5c],edi
  412b25:	int3   
  412b26:	cmp    edx,DWORD PTR [edi]
  412b28:	imul   edi,DWORD PTR [eax+0x49],0x68f211d
  412b2f:	push   0x9cd3cde4
  412b34:	add    ch,BYTE PTR ds:0x55d597ea
  412b3a:	jno    0x412b8e
  412b3c:	sbb    al,0xf6
  412b3e:	pop    esi
  412b3f:	pop    ss
  412b40:	adc    al,0xdb
  412b42:	adc    BYTE PTR [ebx+0x606553d2],dh
  412b48:	scas   al,BYTE PTR es:[edi]
  412b49:	lea    ebx,[eax]
  412b4b:	add    cl,BYTE PTR [esi]
  412b4d:	jecxz  0x412bba
  412b4f:	inc    edx
  412b50:	mov    ds:0x9420e8ba,eax
  412b55:	test   eax,0x57b967ac
  412b5a:	add    ebp,DWORD PTR [esi+0x1b]
  412b5d:	mov    BYTE PTR [ecx],ch
  412b5f:	jo     0x412bd4
  412b61:	ret    
  412b62:	dec    esi
  412b63:	jns    0x412b04
  412b65:	adc    BYTE PTR [eax+0x45],al
  412b68:	sbb    al,0x97
  412b6a:	dec    sp
  412b6c:	push   eax
  412b6d:	xchg   BYTE PTR [ebx-0x6bbf4d9d],bh
  412b73:	scas   eax,DWORD PTR es:[edi]
  412b74:	call   0x1307522c
  412b79:	jns    0x412b64
  412b7b:	mov    eax,0x4bf527da
  412b80:	test   ch,bl
  412b82:	aaa    
  412b83:	or     eax,0xd3827c22
  412b88:	sub    bl,al
  412b8a:	xchg   edi,eax
  412b8b:	lods   al,BYTE PTR ds:[esi]
  412b8c:	mov    BYTE PTR [eax-0x4],dl
  412b8f:	cs pushf 
  412b91:	mov    al,ds:0xf9d50282
  412b96:	jecxz  0x412b40
  412b98:	pop    es
  412b99:	fisub  DWORD PTR [ecx-0x37]
  412b9c:	xor    BYTE PTR [ebx-0x75352c4c],0x68
  412ba3:	shl    BYTE PTR [edi-0x5db41939],1
  412ba9:	call   0x39d3e8f0
  412bae:	aad    0x39
  412bb0:	popf   
  412bb1:	push   esi
  412bb2:	ret    0x7e75
  412bb5:	es das 
  412bb7:	lea    ebp,[ebp-0x16ff11f9]
  412bbd:	popa   
  412bbe:	fstp   QWORD PTR [ecx]
  412bc0:	xor    al,0x5d
  412bc2:	and    BYTE PTR [ebx+0x3d386f8c],bh
  412bc8:	push   cs
  412bc9:	cdq    
  412bca:	ins    DWORD PTR es:[edi],dx
  412bcb:	fisttp WORD PTR [ebp-0x4aa81da8]
  412bd1:	or     eax,0x2789a7c0
  412bd6:	das    
  412bd7:	dec    esi
  412bd8:	pop    esp
  412bd9:	lds    edx,FWORD PTR [ebx+0x46f5ba78]
  412bdf:	clc    
  412be0:	cwde   
  412be1:	and    eax,DWORD PTR [edi]
  412be3:	pop    esp
  412be4:	jne    0x412bfa
  412be6:	or     DWORD PTR [eax],edi
  412be8:	(bad)  
  412bea:	rol    DWORD PTR [eax+0x2b72bdcb],1
  412bf0:	pop    edi
  412bf1:	out    dx,al
  412bf2:	or     al,0x1b
  412bf4:	dec    eax
  412bf5:	pop    ebp
  412bf6:	dec    edi
  412bf7:	out    0xbc,al
  412bf9:	xor    DWORD PTR [ebp-0x73bc6ca5],ebx
  412bff:	mov    bh,0xe3
  412c01:	aas    
  412c02:	sbb    DWORD PTR [edi],ecx
  412c04:	mov    BYTE PTR [esi-0x2],bl
  412c07:	aas    
  412c08:	dec    ebp
  412c09:	test   BYTE PTR ds:0x428f3845,0x3f
  412c10:	aaa    
  412c11:	iret   
  412c12:	std    
  412c13:	jne    0x412baf
  412c15:	add    al,0x71
  412c17:	sub    al,0x9
  412c19:	adc    BYTE PTR [ecx+0x7d653fcf],dl
  412c1f:	jb     0x412c88
  412c21:	mov    ecx,esp
  412c23:	mov    dl,0x17
  412c25:	inc    edx
  412c26:	sbb    DWORD PTR [ecx+edx*4+0x42],esi
  412c2a:	pushf  
  412c2b:	push   0x8db70217
  412c30:	retf   
  412c31:	jo     0x412c90
  412c33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c34:	mov    esi,0xca85f7f5
  412c39:	jb     0x412c9e
  412c3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c3c:	cmp    esp,DWORD PTR [edi-0x4a]
  412c3f:	mov    dl,0xf1
  412c41:	addr16 jmp 0x412c3d
  412c44:	(bad)  
  412c46:	bound  ecx,QWORD PTR [ecx+0x19526e3a]
  412c4c:	retf   
  412c4d:	jmp    0x4cca411c
  412c52:	std    
  412c53:	pmaxsw mm1,QWORD PTR [ebx]
  412c56:	cmp    eax,DWORD PTR [esi]
  412c58:	xor    BYTE PTR [esi+0x5e],ah
  412c5b:	(bad)  
  412c5c:	fadd   QWORD PTR [esi+edx*8+0x2a]
  412c60:	xchg   edx,eax
  412c61:	call   0xa607:0xf56af876
  412c68:	sbb    dh,BYTE PTR [edi-0x48]
  412c6b:	aaa    
  412c6c:	(bad)  
  412c6d:	push   edi
  412c6e:	inc    edx
  412c6f:	cld    
  412c70:	push   0x6f
  412c72:	outs   dx,DWORD PTR ds:[esi]
  412c73:	ret    
  412c74:	test   al,0xc
  412c76:	sbb    ecx,DWORD PTR [ebp+0x4ce6e1f3]
  412c7c:	add    DWORD PTR [ebx+ebx*8],ecx
  412c7f:	arpl   sp,cx
  412c81:	jno    0x412c10
  412c83:	sub    DWORD PTR [ecx+0x7cbaf5c9],0xf59e182d
  412c8d:	addr16 jge 0x412c5b
  412c90:	inc    ebp
  412c91:	outs   dx,BYTE PTR ds:[esi]
  412c92:	fcom   QWORD PTR [ecx]
  412c94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c95:	sub    eax,0xc4ec6449
  412c9a:	fnstcw WORD PTR [edx]
  412c9c:	dec    ebx
  412c9d:	sbb    DWORD PTR [ebx-0x332c15b0],0xffffffed
  412ca4:	jg     0x412cc9
  412ca6:	jmp    0xe341b82b
  412cab:	(bad)  
  412cad:	sbb    edi,ebp
  412caf:	inc    edx
  412cb0:	cs dec edi
  412cb2:	mov    ah,0x34
  412cb4:	and    al,0x8a
  412cb6:	mov    bl,0x1a
  412cb8:	add    al,0xb6
  412cba:	inc    ebx
  412cbb:	mov    ds:0xe9566401,eax
  412cc0:	mov    edx,DWORD PTR [edx-0x56]
  412cc3:	adc    eax,0xf9516968
  412cc8:	xchg   edx,eax
  412cc9:	xchg   ebx,eax
  412cca:	and    BYTE PTR [ecx+0x36],dh
  412ccd:	mov    al,ds:0x9e1b11ca
  412cd2:	push   0xb408e10d
  412cd7:	xlat   BYTE PTR ds:[ebx]
  412cd8:	xchg   BYTE PTR [edi+0x7a],dl
  412cdb:	cwde   
  412cdc:	or     eax,0xcbe8d4e4
  412ce1:	sti    
  412ce2:	js     0x412c92
  412ce4:	cli    
  412ce5:	pop    edi
  412ce6:	adc    BYTE PTR [esi-0x79b8f126],0xba
  412ced:	push   esp
  412cee:	jle    0x412cfc
  412cf0:	xchg   edi,eax
  412cf1:	(bad)  
  412cf2:	fdivr  st,st(4)
  412cf4:	shr    ch,0x61
  412cf7:	in     al,dx
  412cf8:	test   DWORD PTR [edx-0xb],esp
  412cfb:	add    BYTE PTR [esi-0xb],dh
  412cfe:	adc    ecx,DWORD PTR [ebx-0x72b60d49]
  412d04:	xor    eax,0x90842fb7
  412d09:	sbb    al,0x2d
  412d0b:	adc    al,0xcb
  412d0d:	inc    esp
  412d0e:	repz xlat BYTE PTR ds:[ebx]
  412d10:	sub    al,0x8a
  412d12:	aam    0xdc
  412d14:	fld    QWORD PTR [esp+ebp*8]
  412d17:	outs   dx,BYTE PTR ds:[esi]
  412d18:	pop    esi
  412d19:	aad    0xe1
  412d1b:	fist   WORD PTR [eax+0x1c9371e]
  412d21:	add    eax,0xda4e4f6a
  412d26:	mov    BYTE PTR [esi+ebp*1-0x3f],ch
  412d2a:	int    0x82
  412d2c:	repnz popa 
  412d2e:	pop    ebx
  412d2f:	cmp    al,0xf3
  412d31:	sbb    cl,BYTE PTR [ebp-0x394c5979]
  412d37:	and    al,0x1
  412d39:	or     bh,bh
  412d3b:	pop    edx
  412d3c:	jns    0x412d4d
  412d3e:	pop    ecx
  412d3f:	outs   dx,BYTE PTR ds:[esi]
  412d40:	xor    DWORD PTR [edx+0x54436c70],ecx
  412d46:	push   edx
  412d47:	dec    esi
  412d48:	or     eax,0x39dcce0b
  412d4d:	gs push cs
  412d4f:	or     dl,BYTE PTR [edi-0x1329d9f1]
  412d55:	je     0x412d5a
  412d57:	sub    DWORD PTR [edi],0x6d
  412d5a:	dec    ecx
  412d5b:	cmc    
  412d5c:	mov    bh,0x8b
  412d5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412d5f:	pushf  
  412d60:	std    
  412d61:	nop
  412d62:	cld    
  412d63:	sub    DWORD PTR ds:0xe692a0db,ecx
  412d69:	cwde   
  412d6a:	cs mov cs:0x513896f4,eax
  412d71:	and    eax,0x85267f26
  412d76:	mov    eax,0x8faa807
  412d7b:	inc    ebp
  412d7c:	into   
  412d7d:	mov    al,ds:0xdee3bba9
  412d82:	arpl   WORD PTR [esi],si
  412d84:	(bad)  [eax+edx*8+0x593ef6c]
  412d8b:	push   edi
  412d8c:	sbb    al,0xc7
  412d8f:	and    ebp,edi
  412d91:	cmp    DWORD PTR [edx],0xffffff9c
  412d94:	and    eax,0x9a80212e
  412d99:	(bad)  
  412d9a:	cmc    
  412d9b:	mov    ds:0xc33bbebf,eax
  412da0:	push   0xffffff99
  412da2:	je     0x412d4a
  412da4:	es jae 0x412d8c
  412da7:	jns    0x412d76
  412da9:	ss jb  0x412dcc
  412dac:	out    0x94,eax
  412dae:	mov    esp,0x860890d4
  412db3:	or     eax,0x791bb719
  412db8:	out    0x85,eax
  412dba:	jmp    0x412ded
  412dbc:	or     eax,0x4e746fe2
  412dc1:	jae    0x412e06
  412dc3:	rol    DWORD PTR [eax],0x3b
  412dc6:	jne    0x412d8f
  412dc8:	dec    ebx
  412dc9:	jno    0x412dc0
  412dcb:	inc    ebx
  412dcc:	or     al,0x46
  412dce:	aas    
  412dcf:	fisttp QWORD PTR [ecx+ecx*8-0x69]
  412dd3:	fs sub eax,0x65b7fc1b
  412dd9:	call   0xae5a:0x4721d50c
  412de0:	xchg   ecx,eax
  412de1:	xchg   edi,eax
  412de2:	xor    edi,DWORD PTR [ebx-0xc]
  412de5:	arpl   WORD PTR [ebx+0x4b90a7fe],bx
  412deb:	pop    ss
  412dec:	mov    esi,0xe21ba05a
  412df1:	add    dl,BYTE PTR [edx]
  412df3:	aad    0x49
  412df5:	imul   edi,DWORD PTR [edx-0x7bc4565a],0xffffffd1
  412dfc:	out    dx,al
  412dfd:	pusha  
  412dfe:	sahf   
  412dff:	fadd   QWORD PTR [edi]
  412e01:	fst    st(1)
  412e03:	dec    eax
  412e04:	fnstenv [ebx+ecx*1+0x11ad9995]
  412e0b:	sbb    dl,BYTE PTR [eax]
  412e0d:	test   eax,0x7913b896
  412e12:	xchg   ebx,eax
  412e13:	mov    dl,0xbd
  412e15:	icebp  
  412e16:	leave  
  412e17:	push   ds
  412e18:	shr    dh,1
  412e1a:	popf   
  412e1b:	iret   
  412e1c:	rcr    esi,0x70
  412e1f:	jge    0x412e4b
  412e21:	je     0x412dc1
  412e23:	lods   al,BYTE PTR ds:[esi]
  412e24:	shr    BYTE PTR [ebp-0x9],1
  412e27:	imul   ecx,ebp,0x75
  412e2a:	mov    al,ds:0x2223a7a7
  412e2f:	jmp    0xf4151103
  412e34:	jmp    0x412dd5
  412e36:	imul   esp,esi,0xfffffff4
  412e39:	int    0x4a
  412e3b:	sub    ch,ah
  412e3d:	ins    BYTE PTR es:[edi],dx
  412e3e:	xchg   esi,eax
  412e3f:	ret    
  412e40:	xor    ah,0x6f
  412e43:	cs adc eax,0x1b8f7132
  412e49:	adc    ecx,esp
  412e4b:	jmp    0xab71:0xad97af1f
  412e52:	cmp    al,0xc0
  412e54:	ret    0x23d2
  412e57:	sub    eax,0x23ef84dc
  412e5c:	clc    
  412e5d:	add    ch,BYTE PTR [ecx]
  412e5f:	rcl    eax,cl
  412e61:	ds cmp eax,0x57a10c9a
  412e67:	push   cs
  412e68:	rcr    DWORD PTR ds:0x76c0db23,1
  412e6e:	or     eax,0x364b51f0
  412e73:	and    esi,edx
  412e75:	sub    al,cl
  412e77:	adc    edx,ebp
  412e79:	(bad)  
  412e7a:	into   
  412e7b:	out    dx,eax
  412e7c:	jne    0x412ea6
  412e7e:	push   edi
  412e7f:	cld    
  412e80:	lds    esi,FWORD PTR [edx-0x4]
  412e83:	jmp    0x412efb
  412e85:	fsubp  st(3),st
  412e87:	outs   dx,DWORD PTR ds:[esi]
  412e88:	push   eax
  412e89:	or     edi,eax
  412e8b:	in     eax,dx
  412e8c:	fwait
  412e8d:	adc    al,0xd7
  412e8f:	inc    edx
  412e90:	xchg   BYTE PTR ds:0x64031d88,dl
  412e96:	in     al,dx
  412e97:	jmp    0xed1aef6e
  412e9c:	iret   
  412e9d:	add    cl,BYTE PTR fs:[edx+0x4c]
  412ea1:	and    edi,DWORD PTR [ebx+esi*4-0x736e0e78]
  412ea8:	pop    edi
  412ea9:	jecxz  0x412f1e
  412eab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412eac:	dec    ecx
  412ead:	dec    eax
  412eae:	pop    eax
  412eaf:	dec    edx
  412eb0:	retf   0xc2e4
  412eb3:	mov    edx,0x73ed80da
  412eb8:	inc    eax
  412eb9:	in     eax,dx
  412eba:	ds push eax
  412ebc:	xor    ebx,ebx
  412ebe:	std    
  412ebf:	pop    ecx
  412ec0:	inc    eax
  412ec1:	or     DWORD PTR [ecx],0x8
  412ec4:	push   ds
  412ec5:	cli    
  412ec6:	xor    dh,dh
  412ec8:	dec    ebp
  412ec9:	xchg   esi,eax
  412eca:	xor    BYTE PTR [ecx+0x2e],bl
  412ecd:	cmc    
  412ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ecf:	repz sbb eax,0x1b12ee32
  412ed5:	jl     0x412f40
  412ed7:	(bad)  
  412ed8:	fnstenv [edx-0x7064c8a0]
  412ede:	(bad)  
  412edf:	dec    ebx
  412ee0:	and    al,0xf1
  412ee2:	pop    ebx
  412ee3:	sub    esp,esp
  412ee5:	les    ebp,FWORD PTR [ebx-0x63]
  412ee8:	pop    eax
  412ee9:	retf   0xac95
  412eec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eed:	int3   
  412eee:	push   edx
  412eef:	daa    
  412ef0:	jmp    0x412ecd
  412ef2:	push   0x5b
  412ef4:	in     eax,0x50
  412ef6:	ins    DWORD PTR es:[edi],dx
  412ef7:	xor    ah,BYTE PTR [edi]
  412ef9:	pop    ebp
  412efa:	es pop ecx
  412efc:	aad    0xe8
  412efe:	cmp    al,0xc4
  412f00:	inc    edx
  412f01:	pop    esi
  412f02:	xchg   ebp,eax
  412f03:	adc    bh,al
  412f05:	pop    esi
  412f06:	sar    BYTE PTR [ebp-0x119609e7],0x14
  412f0d:	xor    BYTE PTR [eax+0x52],ah
  412f10:	mov    ah,0x81
  412f12:	dec    eax
  412f13:	dec    eax
  412f14:	xor    bh,bh
  412f16:	adc    edi,DWORD PTR [edx-0x51]
  412f19:	xor    al,0x59
  412f1b:	icebp  
  412f1c:	xor    eax,0xebcfd405
  412f21:	xor    BYTE PTR [ebx-0x67],ch
  412f24:	(bad)  
  412f25:	sub    ebx,DWORD PTR [edi-0x59e399e5]
  412f2b:	dec    esp
  412f2c:	imul   ebp,DWORD PTR [eax+0x1f],0x2a
  412f30:	mov    cl,0x9b
  412f32:	xchg   DWORD PTR [esi+0x74555a47],ebp
  412f38:	(bad)  
  412f39:	mov    ebx,0xe75c746f
  412f3e:	cli    
  412f3f:	lea    ebp,[ebp+0x5181e151]
  412f45:	add    BYTE PTR [edi+ebp*8+0x1bbcd5dd],cl
  412f4c:	pop    ebx
  412f4d:	push   ecx
  412f4e:	test   eax,0x7a34f251
  412f53:	cmp    esp,DWORD PTR ds:0x492c9aab
  412f59:	or     ecx,0x865bef26
  412f5f:	push   esi
  412f60:	retf   
  412f61:	addr16 sbb bl,al
  412f64:	fdivrp st(7),st
  412f66:	adc    esi,DWORD PTR [esi]
  412f68:	repz jle 0x412f13
  412f6b:	sub    esp,DWORD PTR [eax-0x58]
  412f6e:	out    0x4a,al
  412f70:	es mov esi,0x1c4dd5d0
  412f76:	rol    BYTE PTR [edx+0x395fa31c],0x60
  412f7d:	mov    ds:0x88919bf6,eax
  412f82:	fs mov edx,0xcbe0f6
  412f88:	or     DWORD PTR [ebx],esi
  412f8a:	das    
  412f8b:	rcr    BYTE PTR [edx-0x35f4cfcc],cl
  412f91:	loope  0x41300e
  412f93:	pop    edi
  412f94:	jmp    0x1327:0xf96596d0
  412f9b:	or     eax,0xe8140911
  412fa0:	sbb    BYTE PTR [ecx+ecx*8-0x641655b1],dh
  412fa7:	out    0x4e,eax
  412fa9:	iret   
  412faa:	mov    al,0xbe
  412fac:	gs icebp 
  412fae:	test   eax,0x3c0c17cd
  412fb3:	jle    0x413008
  412fb5:	mov    ebx,0xe7b03297
  412fba:	add    eax,edx
  412fbc:	mov    ?,WORD PTR [edi-0x41de4ae1]
  412fc2:	(bad)
  412fc7:	retf   
  412fc8:	push   esi
  412fc9:	pop    edi
  412fca:	pop    eax
  412fcb:	mov    cs,WORD PTR [esi+0x4e]
  412fce:	inc    ecx
  412fcf:	jo     0x412f58
  412fd1:	push   esi
  412fd2:	cmp    ebx,ebx
  412fd4:	push   0x2c
  412fd6:	pop    eax
  412fd7:	sub    ch,BYTE PTR [edx+0x62061706]
  412fdd:	ret    0x44f1
  412fe0:	xchg   edi,eax
  412fe1:	sbb    al,0x90
  412fe3:	clts   
  412fe5:	sahf   
  412fe6:	call   DWORD PTR [eax+ebx*2+0x6ac3779b]
  412fed:	ret    
  412fee:	sbb    BYTE PTR [eax-0x54],ch
  412ff1:	mov    ds:0x2425c13a,al
  412ff6:	cs jecxz 0x412fb4
  412ff9:	mov    ch,0x11
  412ffb:	jle    0x413014
  412ffd:	mov    ds:0x95355633,al
  413002:	inc    eax
  413003:	imul   edx,DWORD PTR [ebx],0xffffff89
  413006:	mov    esp,0x90b394d9
  41300b:	and    eax,0xc320696b
  413010:	pop    ecx
  413011:	mov    DWORD PTR [eax],ecx
  413013:	mov    ebx,0xf9f89350
  413018:	ss (bad) 
  41301a:	dec    edi
  41301b:	xchg   esp,eax
  41301c:	cmp    bl,dl
  41301e:	push   esi
  41301f:	in     al,0xa0
  413021:	xor    dh,ch
  413023:	leave  
  413024:	xor    ebx,DWORD PTR [ecx+0x30e004c0]
  41302a:	push   ds
  41302b:	loop   0x412faf
  41302d:	sahf   
  41302e:	shl    WORD PTR [ecx-0x79ac10ce],cl
  413035:	rol    DWORD PTR [edi],0xd1
  413038:	dec    esp
  413039:	cmp    ah,BYTE PTR [edx-0x321016ad]
  41303f:	adc    BYTE PTR [edx],0x94
  413042:	jae    0x4130ae
  413044:	scas   al,BYTE PTR es:[edi]
  413045:	iret   
  413046:	sub    esi,DWORD PTR [eax+0x750042e5]
  41304c:	inc    esi
  41304d:	enter  0x8ad5,0xa9
  413051:	sbb    eax,eax
  413053:	test   al,0xaa
  413055:	jbe    0x412fef
  413057:	xor    esp,esi
  413059:	sbb    al,ch
  41305b:	mov    fs,WORD PTR [esi+0xb4d3937]
  413061:	adc    al,0xde
  413063:	cld    
  413064:	cmp    ch,bh
  413066:	stos   BYTE PTR es:[edi],al
  413067:	and    ch,dh
  413069:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41306a:	jmp    0x5d95afc5
  41306f:	lods   eax,DWORD PTR ds:[esi]
  413070:	mov    ebp,0x26f0540f
  413075:	cmp    al,0xc1
  413077:	clc    
  413078:	dec    edx
  413079:	xor    eax,0x3cebfdc6
  41307e:	jno    0x413041
  413080:	jb     0x4130ef
  413082:	jecxz  0x413058
  413084:	cmp    esp,DWORD PTR [ebx-0x2e]
  413087:	pusha  
  413088:	or     al,0xbb
  41308a:	fidiv  DWORD PTR [eax+0x45]
  41308d:	add    al,BYTE PTR [eax-0x659aaad5]
  413093:	mov    al,0xa0
  413095:	call   0x651c:0xe896ff90
  41309c:	add    edx,DWORD PTR [esi+0x6fef568c]
  4130a2:	mov    ebp,0xfe98177c
  4130a7:	sbb    ah,BYTE PTR [ecx+0x5b]
  4130aa:	popa   
  4130ab:	mov    BYTE PTR ss:[edx],bl
  4130ae:	mov    eax,ds:0xa452cf58
  4130b3:	(bad)  
  4130b4:	(bad)  
  4130b5:	jbe    0x4130b1
  4130b7:	test   eax,0x709e204d
  4130bc:	outs   dx,BYTE PTR ds:[esi]
  4130bd:	adc    BYTE PTR [ebx-0x65],bl
  4130c0:	xor    BYTE PTR [ebx+0x2a835353],dh
  4130c6:	int3   
  4130c7:	cmc    
  4130c8:	in     al,0xc3
  4130ca:	dec    edi
  4130cb:	mov    dh,0xb
  4130cd:	mov    ebp,fs
  4130cf:	fmul   st(6),st
  4130d1:	push   esi
  4130d2:	lock loop 0x413117
  4130d5:	dec    ecx
  4130d6:	xchg   ebp,eax
  4130d8:	ins    DWORD PTR es:[edi],dx
  4130d9:	(bad)  [esi+ebp*8]
  4130dc:	sahf   
  4130dd:	pop    ebx
  4130de:	push   cs
  4130df:	mov    ?,WORD PTR [esi-0x1cff9f47]
  4130e5:	daa    
  4130e6:	es loope 0x413138
  4130e9:	in     al,dx
  4130ea:	ja     0x413155
  4130ec:	lods   al,BYTE PTR ds:[esi]
  4130ed:	mov    bh,0xb4
  4130ef:	mov    eax,ds:0xbe2da9c0
  4130f4:	je     0x413132
  4130f6:	add    al,0x98
  4130f8:	outs   dx,BYTE PTR ds:[esi]
  4130f9:	out    0x9b,al
  4130fb:	push   eax
  4130fc:	sbb    eax,0x5633c24
  413101:	mov    bl,0xe5
  413103:	jecxz  0x413134
  413105:	or     eax,0x7819804e
  41310a:	sbb    BYTE PTR ds:0xc815789e,0xa1
  413111:	test   al,0x6c
  413113:	mov    eax,ds:0xf1460617
  413118:	imul   esp,DWORD PTR [eax+0x5ac6e4fa],0x9c8ae9db
  413122:	jb     0x41313c
  413124:	ja     0x413123
  413126:	js     0x4130bb
  413128:	sar    DWORD PTR [edi],1
  41312a:	xchg   edi,eax
  41312b:	cmp    ebx,DWORD PTR [ebp+eax*2-0x1]
  41312f:	ret    
  413130:	test   eax,0xf992268a
  413135:	xor    BYTE PTR [edx-0x4b11430f],dl
  41313b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41313c:	shl    DWORD PTR [esi+0x18],1
  41313f:	pop    es
  413140:	adc    ebx,DWORD PTR [eax-0x11589be4]
  413146:	das    
  413147:	xor    edi,DWORD PTR [ebx+0x63635059]
  41314d:	outs   dx,DWORD PTR ds:[esi]
  41314e:	or     DWORD PTR [edx+0x53],esp
  413151:	inc    esp
  413152:	and    esp,DWORD PTR [eax-0x71]
  413155:	dec    ebx
  413156:	popa   
  413157:	and    BYTE PTR [edi+0x36],dh
  41315a:	pop    esp
  41315b:	imul   esi,DWORD PTR [ebp+0x23a2c101],0xc994c4d2
  413165:	mov    bl,0x0
  413167:	dec    ebx
  413168:	mov    dh,0x5
  41316a:	sti    
  41316b:	mov    eax,ds:0xba31a280
  413170:	imul   edi,DWORD PTR [esi-0x6c16395f],0x9f891779
  41317a:	mov    ch,0xdc
  41317c:	retf   
  41317d:	addr16 xchg ebx,eax
  41317f:	or     ah,BYTE PTR [ebx+0x63a3431c]
  413185:	add    dh,BYTE PTR [eax+ebp*1]
  413188:	jg     0x413115
  41318a:	cmp    al,0xec
  41318c:	loope  0x41319d
  41318e:	or     al,0xdf
  413190:	mov    cl,0x54
  413192:	arpl   WORD PTR [eax+0x10],bx
  413195:	pop    esi
  413196:	arpl   WORD PTR [esi],si
  413198:	pop    ecx
  413199:	int3   
  41319a:	sti    
  41319b:	pop    ebp
  41319c:	lock fnstsw WORD PTR [edi+ebx*1]
  4131a0:	daa    
  4131a1:	xchg   DWORD PTR [edi+0x74],edi
  4131a4:	inc    ebx
  4131a5:	sti    
  4131a6:	pop    edi
  4131a7:	cwde   
  4131a8:	push   cs
  4131a9:	sti    
  4131aa:	pop    esp
  4131ab:	add    DWORD PTR [eax+0x5eb75abc],esp
  4131b1:	cmp    al,0xc
  4131b3:	sar    BYTE PTR [ebx],1
  4131b5:	pushf  
  4131b6:	pop    ss
  4131b7:	adc    al,0x88
  4131b9:	adc    BYTE PTR [eax+ecx*4-0x5e],ch
  4131bd:	push   ds
  4131be:	cmp    edi,DWORD PTR [edi-0x511a098c]
  4131c4:	imul   ebx,esp,0xffffffca
  4131c7:	lods   al,BYTE PTR ds:[esi]
  4131c8:	pop    edx
  4131c9:	jge    0x41320c
  4131cb:	push   0x62
  4131cd:	mov    eax,0x4a5efc6c
  4131d2:	xchg   edx,eax
  4131d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131d4:	pop    esp
  4131d5:	sub    cl,BYTE PTR [ebx+0x48]
  4131d8:	aas    
  4131d9:	mov    esp,0x961357ac
  4131de:	xor    al,0xb7
  4131e0:	lea    edi,[ecx+edi*1-0x41cb8d5d]
  4131e7:	mov    esi,gs
  4131e9:	stos   DWORD PTR es:[edi],eax
  4131ea:	dec    eax
  4131eb:	inc    esp
  4131ec:	loopne 0x413222
  4131ee:	and    DWORD PTR [esi-0x2f],esi
  4131f1:	sbb    esi,DWORD PTR [edx]
  4131f3:	jmp    0x4131fb
  4131f5:	dec    eax
  4131f6:	and    eax,0xb0a86982
  4131fb:	test   edx,0xefa7a531
  413201:	pop    edi
  413202:	jnp    0x413259
  413204:	jmp    0x4131d0
  413206:	hlt    
  413207:	in     al,dx
  413208:	test   al,0xb7
  41320a:	pushf  
  41320b:	sub    eax,0x6a978231
  413210:	mov    eax,ds:0xc7ca6c99
  413215:	pop    esi
  413216:	in     eax,dx
  413217:	adc    BYTE PTR [edx],cl
  413219:	(bad)  
  41321a:	out    0x9,al
  41321c:	out    0x9a,al
  41321e:	jmp    0x41324b
  413220:	out    dx,al
  413221:	sbb    eax,0x5f3c0fe9
  413226:	or     al,0x26
  413228:	dec    edx
  413229:	xor    eax,0x1db2c850
  41322e:	pop    ds
  41322f:	mov    edi,0xa1a1e182
  413234:	cmp    eax,0x945ec65b
  413239:	outs   dx,DWORD PTR ds:[esi]
  41323a:	sub    cl,cl
  41323c:	nop
  41323d:	dec    esp
  41323e:	mov    al,0xc6
  413240:	data16 jne 0x4132a6
  413243:	mov    al,ds:0xc35f1a2e
  413248:	xor    BYTE PTR ss:[ecx],ch
  41324b:	sub    BYTE PTR [ecx+edx*8],0x6c
  41324f:	mov    esi,0x85bb484
  413254:	pop    eax
  413255:	out    dx,al
  413256:	in     al,dx
  413257:	scas   eax,DWORD PTR es:[edi]
  413258:	inc    esp
  413259:	or     bl,BYTE PTR [eax+0x9ca57f5]
  41325f:	int    0x8f
  413261:	pushf  
  413262:	cmp    esi,DWORD PTR [ebx]
  413264:	mov    eax,0x18a1f507
  413269:	xchg   esp,eax
  41326a:	call   0x3dc5:0x374c2293
  413271:	jns    0x4132cf
  413273:	and    ch,ch
  413275:	mov    ds:0x95368bec,eax
  41327a:	psubw  mm6,QWORD PTR [ebp+0x298229da]
  413281:	loope  0x4132ea
  413283:	(bad)  
  413284:	mov    ds:0xc2710862,eax
  413289:	pop    es
  41328a:	or     DWORD PTR [edx-0x74],0x4d0f6bb0
  413291:	out    dx,al
  413292:	sbb    BYTE PTR [ebx],0x97
  413295:	dec    eax
  413296:	dec    edx
  413297:	or     ah,BYTE PTR [esi+0x1d9c1fd2]
  41329d:	mov    dl,0x6c
  41329f:	xchg   ebp,eax
  4132a0:	sub    dh,BYTE PTR [edi]
  4132a2:	adc    al,0xc6
  4132a4:	push   ebx
  4132a5:	mov    eax,0x2151c0ae
  4132aa:	adc    BYTE PTR [edx+esi*8],cl
  4132ad:	xchg   ecx,eax
  4132ae:	sub    al,0xb0
  4132b0:	mov    esi,0xae4e9c80
  4132b5:	mov    eax,ds:0x58f95fb1
  4132ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132bb:	xchg   esi,eax
  4132bc:	clc    
  4132bd:	lods   al,BYTE PTR ds:[esi]
  4132be:	mov    al,ds:0x3b8be341
  4132c3:	jmp    0x2d83:0x82b23732
  4132ca:	add    BYTE PTR ds:0xcfe1c9f8,dl
  4132d0:	add    eax,0x41d6b37e
  4132d5:	stos   DWORD PTR es:[edi],eax
  4132d6:	push   esi
  4132d7:	mov    DWORD PTR ds:0x6f334619,esi
  4132dd:	or     eax,0x528d65d2
  4132e2:	mov    ecx,0x1f3dd76
  4132e7:	retf   0xed35
  4132ea:	jbe    0x41330b
  4132ec:	cmp    eax,0x29ee1f36
  4132f1:	call   0xebfa16db
  4132f6:	sub    eax,0x4986e9a4
  4132fb:	xchg   esp,eax
  4132fc:	stc    
  4132fd:	mov    bh,0xbf
  4132ff:	sbb    esi,DWORD PTR [eax-0x64597787]
  413305:	loopne 0x413355
  413307:	pop    ecx
  413308:	jecxz  0x4132f2
  41330a:	mov    WORD PTR [ebp+0x5a],cs
  41330d:	lods   al,BYTE PTR ds:[esi]
  41330e:	dec    esi
  41330f:	sbb    BYTE PTR [edx+0x92ad453],0x1f
  413316:	lock add ah,BYTE PTR [esi+0x1c863c3]
  41331d:	icebp  
  41331e:	jae    0x413379
  413320:	gs dec ebx
  413322:	jle    0x4132a6
  413324:	jno    0x4132b8
  413326:	dec    esp
  413327:	mov    bl,BYTE PTR [ebx]
  413329:	push   ecx
  41332a:	les    ebx,FWORD PTR [esi-0x45]
  41332d:	out    dx,eax
  41332e:	imul   esp,edi,0x3b394251
  413334:	or     cl,ch
  413336:	popf   
  413337:	mov    eax,ds:0xa9296c4a
  41333c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41333d:	fild   WORD PTR [edi+esi*8-0x6864cb0e]
  413344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413345:	nop
  413346:	push   eax
  413347:	aas    
  413348:	jg     0x4132d7
  41334a:	pop    ss
  41334b:	xchg   edx,eax
  41334c:	call   FWORD PTR [ecx]
  41334e:	aaa    
  41334f:	push   eax
  413350:	out    dx,eax
  413351:	cld    
  413352:	or     al,0x0
  413354:	out    0xa2,eax
  413356:	dec    ecx
  413357:	adc    eax,0x732a97bc
  41335c:	sub    ah,BYTE PTR [eax+esi*8]
  41335f:	sbb    cl,BYTE PTR [edx]
  413361:	mov    al,0x47
  413363:	jle    0x4133e1
  413365:	fstp   QWORD PTR [ecx+0x4c98834a]
  41336b:	dec    esi
  41336c:	test   BYTE PTR [edx-0x3cb5ec13],dh
  413372:	int    0x47
  413374:	popf   
  413375:	icebp  
  413376:	enter  0x685f,0x72
  41337a:	rcl    cl,1
  41337c:	mov    esi,0x4967d83d
  413381:	in     eax,0x2b
  413383:	rol    dl,cl
  413385:	jae    0x413331
  413387:	mov    WORD PTR [ebx+ebx*8-0x2d1bfa41],es
  41338e:	sbb    al,0x1f
  413390:	mov    ebx,DWORD PTR es:[ecx-0x14]
  413394:	or     eax,0x8bf60f76
  413399:	xchg   DWORD PTR [edi+esi*1],ecx
  41339c:	mov    dl,0x7c
  41339e:	push   0x7a7db531
  4133a3:	push   cs
  4133a4:	ja     0x413376
  4133a6:	pusha  
  4133a7:	jmp    0xbffe:0xed02fb00
  4133ae:	mov    dh,0x2a
  4133b0:	scas   eax,DWORD PTR es:[edi]
  4133b1:	clc    
  4133b2:	sahf   
  4133b3:	in     al,dx
  4133b4:	popa   
  4133b5:	sbb    al,0x88
  4133b7:	daa    
  4133b8:	dec    esp
  4133b9:	sbb    DWORD PTR [edi-0x4d],esp
  4133bc:	adc    ebx,DWORD PTR [ecx+ebp*8]
  4133bf:	aaa    
  4133c0:	out    0x67,eax
  4133c2:	outs   dx,BYTE PTR ds:[esi]
  4133c3:	ins    BYTE PTR es:[edi],dx
  4133c4:	test   BYTE PTR [ecx-0x20],ch
  4133c7:	mov    ah,0x64
  4133c9:	retf   
  4133ca:	sar    BYTE PTR [edi+0x3e37c3f9],cl
  4133d0:	mov    esp,ebx
  4133d2:	dec    ecx
  4133d3:	(bad)  
  4133d4:	pop    eax
  4133d5:	fsub   DWORD PTR [ebx]
  4133d7:	mov    edi,0xf2f0175d
  4133dc:	dec    eax
  4133dd:	test   al,0xdf
  4133df:	leave  
  4133e0:	sti    
  4133e1:	ins    DWORD PTR es:[edi],dx
  4133e2:	jmp    0xabb7:0xba25901d
  4133e9:	xchg   ebx,eax
  4133ea:	mov    ch,0x2f
  4133ec:	mov    eax,ds:0x488fd0c1
  4133f1:	cmc    
  4133f2:	jnp    0x4133cc
  4133f4:	fisub  WORD PTR [esi]
  4133f6:	adc    al,0x94
  4133f8:	pusha  
  4133f9:	in     eax,dx
  4133fa:	xor    eax,0xc3861
  4133ff:	add    DWORD PTR [edi+0x21551066],0x6ef722b0
  413409:	sbb    DWORD PTR [esi-0x3d8c1bbc],ecx
  41340f:	cmp    BYTE PTR [edi],al
  413411:	or     dh,bl
  413413:	les    esp,FWORD PTR [eax]
  413415:	in     al,dx
  413416:	jb     0x4133ca
  413418:	dec    esi
  413419:	jmp    0x41340b
  41341b:	xchg   DWORD PTR [ebp+edx*1-0x7bbd475e],ebx
  413422:	inc    ecx
  413423:	lods   eax,DWORD PTR ds:[esi]
  413424:	dec    ebx
  413425:	cmp    al,0xb5
  413427:	mov    edi,0x4edb63fe
  41342c:	jmp    0xab82:0xa675da7a
  413433:	inc    esi
  413434:	mov    dl,0xff
  413436:	hlt    
  413437:	in     eax,dx
  413438:	pop    edi
  413439:	pop    edi
  41343a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41343b:	fldcw  WORD PTR [esi]
  41343d:	sub    bh,BYTE PTR [ebp-0x3607635a]
  413443:	je     0x4133cf
  413445:	lods   al,BYTE PTR ds:[esi]
  413446:	faddp  st(0),st
  413448:	shl    edx,0xb9
  41344b:	mov    dl,dh
  41344d:	call   0x9b5a:0x63c03141
  413454:	sub    BYTE PTR [eax-0x5083870b],bl
  41345a:	call   0xabc5:0x2001cd32
  413461:	pop    ds
  413462:	lahf   
  413463:	push   es
  413464:	or     esi,edx
  413466:	cmp    al,0x96
  413468:	sub    dl,BYTE PTR [edx]
  41346a:	jecxz  0x413453
  41346c:	nop
  41346d:	pop    edi
  41346e:	daa    
  41346f:	mov    bl,0x6
  413471:	dec    edi
  413472:	inc    cx
  413474:	add    cl,BYTE PTR [esi+0x633527eb]
  41347a:	mov    DWORD PTR [ebx+0x72],ecx
  41347d:	dec    edi
  41347e:	clc    
  41347f:	test   BYTE PTR [ecx+0x1d],ah
  413482:	push   edi
  413483:	(bad)  
  413484:	fild   QWORD PTR [ebx+0x48933539]
  41348a:	jae    0x41348f
  41348c:	mov    ds:0xa593e06a,eax
  413491:	jmp    0x4134d5
  413493:	push   ebx
  413494:	dec    ebp
  413495:	push   esp
  413496:	fdiv   QWORD PTR [eax]
  413498:	and    dh,dh
  41349a:	jge    0x4134d6
  41349c:	adc    BYTE PTR ds:0x10501aee,cl
  4134a2:	jle    0x413463
  4134a4:	in     eax,dx
  4134a5:	sub    BYTE PTR [ebx+0x7729685a],ch
  4134ab:	or     eax,0xff716ed5
  4134b0:	cmp    eax,0x16488c70
  4134b5:	lock fisub DWORD PTR [edi]
  4134b8:	sbb    dh,BYTE PTR [ebp-0x59]
  4134bb:	repnz mov ecx,0xbe6bf719
  4134c1:	adc    ah,cl
  4134c3:	xchg   edx,eax
  4134c4:	pop    edx
  4134c5:	js     0x413530
  4134c7:	retf   
  4134c8:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134ca:	or     al,cl
  4134cc:	or     eax,0x80241695
  4134d1:	and    eax,0xc901f58a
  4134d6:	mov    al,0x2e
  4134d8:	mov    ebp,0x41e22b75
  4134dd:	pop    ecx
  4134de:	add    eax,esp
  4134e0:	inc    eax
  4134e1:	or     BYTE PTR [eax],dl
  4134e3:	shl    BYTE PTR [ecx+0x58],0x7e
  4134e7:	rep outs dx,DWORD PTR ds:[esi]
  4134e9:	sbb    DWORD PTR [ebx-0x2971626],ecx
  4134ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134f0:	repnz mov ecx,DWORD PTR [edi]
  4134f3:	jl     0x4134c8
  4134f5:	sub    ecx,DWORD PTR [ebx-0x7a8dc8ac]
  4134fb:	enter  0x9ffd,0x4f
  4134ff:	dec    esp
  413500:	pop    edx
  413501:	xor    al,0x81
  413503:	pop    ss
  413504:	lahf   
  413505:	mov    WORD PTR [eax-0x3c],es
  413508:	std    
  413509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41350a:	cmp    edi,DWORD PTR [edi+ecx*4]
  41350d:	aad    0x2e
  41350f:	adc    al,BYTE PTR [esi]
  413511:	mov    ebx,0x69ee7fec
  413516:	xchg   ecx,eax
  413517:	add    al,0xd3
  413519:	std    
  41351a:	pushf  
  41351b:	(bad)  
  41351e:	mov    edx,0xc7d5b327
  413523:	jns    0x413533
  413525:	jbe    0x413554
  413527:	loop   0x413577
  413529:	sub    eax,0x8eddd226
  41352e:	cmp    DWORD PTR [edi+edx*1+0x3c5767c2],edx
  413535:	push   0x5f664f94
  41353a:	jmp    0x7e0c:0x6ab211dc
  413541:	loop   0x413589
  413543:	out    dx,eax
  413544:	pop    esp
  413545:	xchg   edi,eax
  413546:	ret    0xd053
  413549:	xchg   ebp,eax
  41354a:	mov    dh,0x77
  41354c:	(bad)  
  41354d:	ins    DWORD PTR es:[edi],dx
  41354e:	seto   BYTE PTR [esi+0x578e6d3f]
  413555:	push   eax
  413556:	(bad)  
  413557:	scas   al,BYTE PTR es:[edi]
  413558:	jo     0x4135ca
  41355a:	(bad)  
  41355b:	mov    al,ds:0xf010b162
  413560:	hlt    
  413561:	xlat   BYTE PTR ds:[ebx]
  413562:	add    al,0x97
  413564:	rcr    BYTE PTR [ecx+ebx*4],cl
  413567:	xchg   edi,eax
  413568:	addr16 xchg edx,eax
  41356a:	stos   BYTE PTR es:[edi],al
  41356b:	std    
  41356c:	push   edx
  41356d:	call   0x978d171
  413572:	and    DWORD PTR [edi-0x2c7799bd],0x1b8d64bb
  41357c:	cmc    
  41357d:	mov    BYTE PTR [eax+0x15],bl
  413580:	xchg   DWORD PTR [esi+0x67],edx
  413583:	jae    0x413600
  413585:	nop
  413586:	xchg   ecx,eax
  413587:	push   edi
  413588:	jmp    0xe03cb9d2
  41358d:	lods   al,BYTE PTR ds:[esi]
  41358e:	mov    edx,0x4f547fe3
  413593:	xor    al,ah
  413595:	cmc    
  413596:	shl    edx,cl
  413598:	shl    BYTE PTR [eax-0xd161f48],0xbe
  41359f:	les    esi,FWORD PTR [ebx+eiz*4+0x63551db1]
  4135a6:	jb     0x4135b0
  4135a8:	inc    eax
  4135a9:	stos   DWORD PTR es:[edi],eax
  4135aa:	push   esi
  4135ab:	ret    
  4135ac:	and    edx,DWORD PTR [edx-0x32]
  4135af:	adc    ebx,ebx
  4135b1:	xchg   edx,eax
  4135b2:	arpl   WORD PTR [ebp+0xc],cx
  4135b5:	aaa    
  4135b6:	(bad)  
  4135b7:	imul   ebp,DWORD PTR [edx-0x6bb42004],0x65
  4135be:	dec    edx
  4135bf:	push   ss
  4135c0:	das    
  4135c1:	ret    
  4135c2:	clc    
  4135c3:	scas   eax,DWORD PTR es:[edi]
  4135c4:	sbb    al,0x54
  4135c6:	pushf  
  4135c7:	sbb    dh,ch
  4135c9:	push   es
  4135ca:	mov    dh,0xdf
  4135cc:	test   eax,0x9c84e14
  4135d1:	xor    ebx,DWORD PTR [esi+0x44]
  4135d4:	jecxz  0x4135d2
  4135d6:	xchg   edi,eax
  4135d7:	sbb    al,0x16
  4135d9:	pushf  
  4135da:	xor    esi,0xffffffd9
  4135dd:	xacquire xchg DWORD PTR [edx],ecx
  4135e0:	retf   0xcc28
  4135e3:	push   esp
  4135e4:	addr16 inc ebx
  4135e6:	mov    DWORD PTR [eax-0x3c76c4c9],esi
  4135ec:	(bad)  
  4135ed:	icebp  
  4135ee:	(bad)  
  4135ef:	hlt    
  4135f0:	cmp    edi,DWORD PTR [ecx+0x3a]
  4135f3:	sti    
  4135f4:	clts   
  4135f6:	fmul   st,st(0)
  4135f8:	xor    ah,al
  4135fa:	dec    esi
  4135fb:	inc    ebx
  4135fc:	jg     0x413613
  4135fe:	in     al,dx
  4135ff:	aaa    
  413600:	cmc    
  413601:	inc    ecx
  413602:	and    BYTE PTR [ecx],bl
  413604:	xchg   edx,eax
  413605:	sbb    eax,0xc01300f
  41360a:	inc    esp
  41360b:	sub    eax,0x7a0d6e0
  413610:	mov    cl,0x6f
  413612:	mov    ds:0x6cb4b34d,eax
  413617:	enter  0x767b,0x0
  41361b:	add    al,BYTE PTR [edx]
  41361d:	lods   al,BYTE PTR ds:[esi]
  41361e:	add    edi,edi
  413620:	push   ds
  413621:	inc    esp
  413622:	mov    cl,0x1b
  413624:	pop    ebx
  413625:	stos   BYTE PTR es:[edi],al
  413626:	push   0x9c5a740e
  41362b:	sahf   
  41362c:	jecxz  0x413670
  41362e:	mov    edx,0xb0899f98
  413633:	pop    eax
  413634:	inc    ebx
  413635:	arpl   WORD PTR [eax-0x52],ax
  413638:	push   ds
  413639:	shr    ah,cl
  41363b:	loope  0x4135ea
  41363d:	sbb    ch,dl
  41363f:	pop    es
  413640:	inc    edi
  413641:	int3   
  413642:	pop    edx
  413643:	inc    edx
  413644:	mov    al,ds:0x937c8b85
  413649:	lods   al,BYTE PTR ds:[esi]
  41364a:	shl    DWORD PTR [edx],1
  41364c:	inc    esp
  41364d:	or     al,dh
  41364f:	dec    edi
  413650:	mov    dl,0xeb
  413652:	(bad)  
  413654:	mov    edi,0x5f695d61
  413659:	sbb    al,0xbf
  41365b:	outs   dx,BYTE PTR ds:[esi]
  41365c:	cmp    bh,BYTE PTR [edi]
  41365e:	jno    0x4135e4
  413660:	adc    BYTE PTR [esi-0x70664bcb],ch
  413666:	inc    ebx
  413667:	stc    
  413668:	rol    BYTE PTR [eiz*2-0x47f2cb64],cl
  41366f:	ret    
  413670:	dec    ebx
  413671:	outs   dx,DWORD PTR ds:[esi]
  413672:	mov    ebx,0xf89705dc
  413677:	leave  
  413678:	mov    bh,0xca
  41367a:	mov    ds:0xd3e7ebce,eax
  41367f:	add    esi,DWORD PTR [edi]
  413681:	inc    edx
  413682:	retf   0x854e
  413685:	lods   eax,DWORD PTR ds:[esi]
  413686:	xchg   esp,eax
  413687:	es in  eax,0x83
  41368a:	jnp    0x413708
  41368c:	test   al,0xa4
  41368e:	cwde   
  41368f:	cwde   
  413690:	and    cl,BYTE PTR [esi]
  413692:	es cwde 
  413694:	ins    BYTE PTR es:[edi],dx
  413695:	ret    0x798a
  413698:	outs   dx,BYTE PTR ds:[esi]
  413699:	call   0x64a1c6e8
  41369e:	lods   eax,DWORD PTR ds:[esi]
  41369f:	call   0xcdfe89c1
  4136a4:	pop    esi
  4136a5:	pop    edi
  4136a6:	cmc    
  4136a7:	bound  ebx,QWORD PTR [ebx]
  4136a9:	push   es
  4136aa:	inc    edi
  4136ab:	sub    eax,0x9c6c3c2a
  4136b0:	fisttp DWORD PTR [ecx+0x16e9e31c]
  4136b6:	addr16 mov esp,0xe96866ec
  4136bc:	jno    0x4136f9
  4136be:	in     al,dx
  4136bf:	sub    edx,eax
  4136c1:	(bad)  
  4136c2:	jne    0x413655
  4136c4:	mov    ch,dl
  4136c6:	sub    al,0xb3
  4136c8:	rcl    BYTE PTR [ecx],1
  4136ca:	jmp    0x41370a
  4136cc:	mov    ecx,esi
  4136ce:	jo     0x413722
  4136d0:	sbb    esp,DWORD PTR [ebx+ebp*4]
  4136d3:	ja     0x41373d
  4136d5:	xchg   BYTE PTR ds:0x1f6a8f06,ah
  4136db:	adc    al,0xd9
  4136dd:	test   dh,bl
  4136df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136e0:	fwait
  4136e1:	dec    dl
  4136e3:	add    al,0x53
  4136e5:	jbe    0x4136cc
  4136e7:	or     eax,0x9623345f
  4136ec:	adc    DWORD PTR [ecx+0x36],0xd66aa03f
  4136f3:	mov    ah,0x37
  4136f5:	mov    bl,0x56
  4136f7:	loop   0x41369b
  4136f9:	push   esi
  4136fa:	jno    0x41377b
  4136fc:	pop    bx
  4136fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136ff:	jae    0x41372b
  413701:	sti    
  413702:	ss or  eax,0xfd778aeb
  413708:	ins    BYTE PTR es:[edi],dx
  413709:	mov    bh,ch
  41370b:	inc    DWORD PTR [edx+0x31]
  41370e:	lock push ds
  413710:	out    0xe9,eax
  413712:	pop    edi
  413713:	xchg   esp,esi
  413715:	outs   dx,DWORD PTR ds:[esi]
  413716:	call   0x1f50:0x90a1a940
  41371d:	dec    ebp
  41371e:	cwde   
  41371f:	in     al,dx
  413720:	and    edx,edi
  413722:	test   BYTE PTR [ecx],0xbd
  413725:	sub    eax,DWORD PTR [edi+0x20]
  413728:	scas   al,BYTE PTR es:[edi]
  413729:	inc    eax
  41372a:	or     eax,0xd7280da
  41372f:	push   edx
  413730:	push   esp
  413731:	cdq    
  413732:	cmp    BYTE PTR [edi],dl
  413734:	lea    edi,[ecx]
  413736:	call   0x537a0818
  41373b:	xchg   esi,eax
  41373c:	out    0xc8,al
  41373e:	call   0x85323aa1
  413743:	cmp    ecx,ecx
  413745:	cli    
  413746:	out    dx,al
  413747:	xlat   BYTE PTR ds:[ebx]
  413748:	add    bh,al
  41374a:	ds xor al,0xc0
  41374d:	sub    BYTE PTR [esi-0x48],dl
  413750:	mov    ebx,0x7bd1ee17
  413755:	adc    eax,0x6b109017
  41375a:	dec    edi
  41375b:	mov    ebp,0xf8991e1a
  413760:	jmp    0xc124:0x175859a6
  413767:	(bad)  
  413768:	and    eax,0xca1b971b
  41376d:	ja     0x41371b
  41376f:	sahf   
  413770:	xchg   BYTE PTR [eax-0x7bf9e3c6],dh
  413776:	mov    edi,0x1e152eb7
  41377b:	getsec 
  41377d:	sub    eax,0xb75e2fff
  413782:	fsubr  st,st(0)
  413784:	dec    esp
  413785:	fs fs sbb eax,0xce644f4a
  41378c:	sub    dh,BYTE PTR [edi]
  41378e:	jg     0x4137aa
  413790:	es xchg edi,eax
  413792:	int3   
  413793:	loop   0x413729
  413795:	inc    edx
  413796:	jmp    0x413808
  413798:	jns    0x4137b9
  41379a:	outs   dx,BYTE PTR ds:[esi]
  41379b:	lea    ebp,[ebp+0x47]
  41379e:	in     al,0x8d
  4137a0:	mul    DWORD PTR [ebp-0x54fe835f]
  4137a6:	stc    
  4137a7:	xor    ecx,edx
  4137a9:	sbb    DWORD PTR [esi+eax*2],edx
  4137ac:	add    edi,ebx
  4137ae:	(bad)  
  4137b0:	fimul  DWORD PTR [eax]
  4137b2:	add    BYTE PTR [edi-0xcc60f27],ah
  4137b8:	pushf  
  4137b9:	xor    esp,DWORD PTR [ecx+ebx*2-0x4a8cc300]
  4137c0:	addr16 mov ah,0x2f
  4137c3:	jo     0x413759
  4137c5:	pop    edx
  4137c6:	xchg   edx,ebp
  4137c8:	in     eax,dx
  4137c9:	clc    
  4137ca:	cmp    cl,al
  4137cc:	adc    dh,bl
  4137ce:	dec    ecx
  4137cf:	jnp    0x41381d
  4137d1:	jnp    0x413772
  4137d3:	or     esi,DWORD PTR [ebp+0x2e]
  4137d6:	mov    ecx,0x4943f672
  4137db:	push   es
  4137dc:	sub    ecx,DWORD PTR [ebx]
  4137de:	jmp    0xda16695
  4137e3:	je     0x4137e1
  4137e5:	sahf   
  4137e6:	sbb    esi,DWORD PTR [edx-0x3f]
  4137e9:	in     eax,dx
  4137ea:	imul   DWORD PTR [esi+0x38]
  4137ed:	sub    al,0xc2
  4137ef:	icebp  
  4137f0:	dec    BYTE PTR [ebp+0x570595af]
  4137f6:	es ret 0x8d50
  4137fa:	loop   0x4137cc
  4137fc:	cld    
  4137fd:	out    0x87,al
  4137ff:	or     dl,dl
  413801:	cdq    
  413802:	jo     0x4137a2
  413804:	mov    es,WORD PTR [edi+ebx*8-0x7d]
  413808:	mov    ebx,0x4ad75697
  41380d:	ins    DWORD PTR es:[edi],dx
  41380e:	mov    ebp,0x71dab2bd
  413813:	repnz enter 0x77be,0xf0
  413818:	test   BYTE PTR [ebx],bl
  41381a:	jl     0x4137c7
  41381c:	pop    ebx
  41381d:	jnp    0x413862
  41381f:	pop    ebx
  413820:	loope  0x413866
  413822:	stos   BYTE PTR es:[edi],al
  413823:	sub    bh,BYTE PTR [edi-0x52]
  413826:	adc    eax,0xc856b7ec
  41382b:	frstor [eax]
  41382d:	not    DWORD PTR [eax+0x5971f38]
  413833:	xor    DWORD PTR [eax],esp
  413835:	push   edi
  413836:	pop    esp
  413837:	dec    ebx
  413838:	pop    ss
  413839:	fiadd  WORD PTR [esi]
  41383b:	mov    al,0xd6
  41383d:	adc    eax,0x162a10c6
  413842:	mov    ch,0xe0
  413844:	add    eax,0x2fe79274
  413849:	inc    ecx
  41384a:	pop    edx
  41384b:	mov    edi,0xeb1ab329
  413850:	push   eax
  413851:	je     0x4137e0
  413853:	mov    esi,0x5d0f6aa6
  413858:	add    DWORD PTR [ebp-0x16f4388e],eax
  41385e:	pop    edx
  41385f:	inc    ebp
  413860:	inc    DWORD PTR [ecx]
  413862:	lods   al,BYTE PTR ds:[esi]
  413863:	jecxz  0x41383e
  413865:	adc    al,0x8
  413867:	inc    eax
  413868:	and    BYTE PTR [ecx+eiz*8-0xf],dl
  41386c:	cmp    DWORD PTR [ebp-0x7333ea4e],edx
  413872:	add    al,0xc1
  413874:	cmp    BYTE PTR [edx+0x7e1ae86],cl
  41387a:	sahf   
  41387b:	add    BYTE PTR [ebp+0x66],bh
  41387e:	push   ds
  41387f:	and    bh,BYTE PTR [ecx-0x28550ce1]
  413885:	push   ecx
  413886:	sub    eax,0x1332a23d
  41388b:	xchg   ebx,eax
  41388c:	jb     0x41388f
  41388e:	mov    DWORD PTR [edx+ebx*4+0x2f852963],ecx
  413895:	xor    ebx,DWORD PTR [esi]
  413897:	mov    ebx,0xe8367f6
  41389c:	inc    esp
  41389d:	pop    ss
  41389e:	adc    eax,0xa88646b4
  4138a3:	mov    bl,0x21
  4138a5:	out    dx,eax
  4138a6:	and    bl,BYTE PTR [esi]
  4138a8:	aad    0x95
  4138aa:	inc    edx
  4138ab:	pusha  
  4138ac:	leave  
  4138ad:	fcomp  DWORD PTR [esi]
  4138af:	(bad)  
  4138b0:	xchg   edi,eax
  4138b1:	mov    esp,0xa6588527
  4138b6:	out    dx,al
  4138b7:	scas   eax,DWORD PTR es:[edi]
  4138b8:	pop    esp
  4138b9:	mov    ah,0x97
  4138bb:	cmp    DWORD PTR cs:[ebp+0x52],edx
  4138bf:	in     al,dx
  4138c0:	bound  ecx,QWORD PTR [ebx+0x596172dc]
  4138c6:	add    al,0xc8
  4138c8:	data16 fmul DWORD PTR [eax-0x75]
  4138cc:	je     0x41392f
  4138ce:	jl     0x41386f
  4138d0:	sub    BYTE PTR [esi-0x7f],dh
  4138d3:	xchg   edi,eax
  4138d4:	loopne 0x413901
  4138d6:	xchg   ebx,eax
  4138d7:	push   ds
  4138d8:	jge    0x4138d2
  4138da:	mov    ds:0x9b53acb5,eax
  4138df:	cmp    eax,0x361f46a9
  4138e4:	sub    dh,ah
  4138e6:	out    dx,eax
  4138e7:	popa   
  4138e8:	or     eax,DWORD PTR [ebp-0x4f]
  4138eb:	sub    BYTE PTR [esp+esi*2-0x23f1083b],0xc6
  4138f3:	mov    cl,0x38
  4138f5:	dec    eax
  4138f6:	rcl    BYTE PTR [eax],0xf6
  4138f9:	inc    edx
  4138fa:	cmp    al,0xa1
  4138fc:	fwait
  4138fd:	mov    cl,0xb3
  4138ff:	shr    DWORD PTR [ecx-0x5d],cl
  413902:	sbb    DWORD PTR [esi+0xd],esp
  413905:	shld   DWORD PTR [esi-0x5],ebp,cl
  413909:	push   ss
  41390a:	push   edx
  41390b:	mov    bl,0x67
  41390d:	or     cl,dh
  41390f:	xor    eax,0x3b4034a6
  413914:	rcr    DWORD PTR [ebp-0x6c0edc85],cl
  41391a:	add    ah,dh
  41391c:	push   es
  41391d:	aaa    
  41391e:	xchg   ebx,eax
  41391f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413920:	xchg   edi,eax
  413921:	adc    esi,DWORD PTR [ecx+ebx*1-0x21]
  413925:	in     al,dx
  413926:	sbb    eax,0x1364d21b
  41392b:	outs   dx,BYTE PTR ds:[esi]
  41392c:	jle    0x4138da
  41392e:	out    0x6b,eax
  413930:	int    0xf1
  413932:	mov    al,0x38
  413934:	lods   al,BYTE PTR ds:[esi]
  413935:	xchg   ebx,eax
  413936:	stc    
  413937:	inc    edi
  413938:	mov    esp,0x1ecee54f
  41393d:	push   esi
  41393e:	dec    esi
  41393f:	stos   DWORD PTR es:[edi],eax
  413940:	out    dx,al
  413941:	fimul  WORD PTR [ebp+0xeec97c3]
  413947:	cmp    edi,DWORD PTR [edx+0xb]
  41394a:	or     al,0xd0
  41394c:	mov    bh,0xcb
  41394e:	cdq    
  41394f:	sub    DWORD PTR [eax+0x12],esp
  413952:	ror    BYTE PTR [edx-0x39],1
  413955:	cdq    
  413956:	jp     0x4139a9
  413958:	jl     0x413960
  41395a:	js     0x413919
  41395c:	int3   
  41395d:	std    
  41395e:	ret    0x4f4c
  413961:	cld    
  413962:	mov    esp,DWORD PTR ds:0x9eae592
  413968:	jb     0x413972
  41396a:	jb     0x4139b7
  41396c:	mov    ch,0x65
  41396e:	leave  
  41396f:	jnp    0x413941
  413971:	(bad)  
  413973:	outs   dx,DWORD PTR ds:[esi]
  413974:	and    DWORD PTR cs:[ebp+0x65],esi
  413978:	mov    al,ds:0x74dae9f7
  41397d:	fcomip st,st(7)
  41397f:	into   
  413980:	ja     0x413974
  413982:	fnstsw WORD PTR [ebp+0x4249eb26]
  413988:	cmp    ecx,ecx
  41398a:	int3   
  41398b:	aas    
  41398c:	ror    DWORD PTR [edi+0x70],0xbd
  413990:	scas   al,BYTE PTR es:[edi]
  413991:	mov    esp,0xeee6dd35
  413996:	push   ebp
  413997:	mov    ebx,esp
  413999:	(bad)  
  41399a:	add    al,0x40
  41399c:	addr16 mov dl,0x7b
  41399f:	jp     0x413976
  4139a1:	push   ebx
  4139a2:	ror    dl,0xc4
  4139a5:	xor    DWORD PTR [edx+0x1445a26],ebx
  4139ab:	(bad)  
  4139ac:	call   FWORD PTR [esi+0x75]
  4139af:	add    bh,bh
  4139b1:	sbb    al,0xc1
  4139b3:	mov    edi,cs
  4139b5:	fwait
  4139b6:	add    DWORD PTR [edx+0x69],0x5655bc3c
  4139bd:	dec    ebx
  4139be:	xor    ebx,DWORD PTR [ebp+edi*2-0x34]
  4139c2:	fisttp WORD PTR [edx+0x40]
  4139c5:	adc    al,0x56
  4139c7:	sbb    BYTE PTR [esi],dl
  4139c9:	adc    DWORD PTR [esi-0x25c7b30f],ecx
  4139cf:	js     0x41397b
  4139d1:	cli    
  4139d2:	mov    dl,0x34
  4139d4:	(bad)  
  4139d6:	push   0x62
  4139d8:	fdiv   st,st(2)
  4139da:	inc    eax
  4139db:	ret    
  4139dc:	js     0x4139ad
  4139de:	pop    edi
  4139df:	(bad)  
  4139e0:	pusha  
  4139e1:	sti    
  4139e2:	pop    es
  4139e3:	repz sbb ah,ah
  4139e6:	xchg   edi,eax
  4139e7:	and    al,0x4b
  4139e9:	ins    BYTE PTR es:[edi],dx
  4139ea:	fstp   QWORD PTR [esi]
  4139ec:	pop    ss
  4139ed:	or     edx,DWORD PTR [eax-0x3f]
  4139f0:	inc    edi
  4139f1:	fld    QWORD PTR [ecx-0x3d]
  4139f4:	out    0xff,eax
  4139f6:	sbb    ebx,eax
  4139f8:	rol    ebx,1
  4139fa:	jo     0x413a23
  4139fc:	fsub   QWORD PTR [ebp-0x30]
  4139ff:	loopne 0x413a2d
  413a01:	sbb    BYTE PTR [edi],dl
  413a03:	mov    bh,0xfe
  413a05:	add    BYTE PTR [esi+0x26],al
  413a08:	mov    ah,0xf9
  413a0a:	or     DWORD PTR [edi],ebp
  413a0c:	outs   dx,BYTE PTR ds:[esi]
  413a0d:	into   
  413a0e:	mov    ebx,0x6e72948c
  413a13:	jecxz  0x413a15
  413a15:	sub    esp,DWORD PTR [eax]
  413a17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a18:	rcr    DWORD PTR [esi],0xdc
  413a1b:	scas   al,BYTE PTR es:[edi]
  413a1c:	xchg   esi,eax
  413a1d:	xor    BYTE PTR [edi-0x5a],bl
  413a20:	xor    BYTE PTR [ebx-0x2e],bl
  413a23:	jne    0x413a93
  413a25:	out    0x59,eax
  413a27:	sar    DWORD PTR ds:0xad6a0cd4,0x0
  413a2e:	pop    es
  413a2f:	mov    cs,WORD PTR [ebx-0x5873f7ea]
  413a35:	test   eax,0xdf46c526
  413a3a:	retf   0x70c0
  413a3d:	bound  esp,QWORD PTR ds:0x70a41d82
  413a43:	repz popa 
  413a45:	stos   DWORD PTR es:[edi],eax
  413a46:	mov    dl,0x5f
  413a48:	fdiv   QWORD PTR [eax-0x25]
  413a4b:	ins    BYTE PTR es:[edi],dx
  413a4c:	mov    al,ds:0x4c9f71a
  413a51:	rcl    BYTE PTR [edi],1
  413a53:	adc    DWORD PTR [ebx],eax
  413a55:	cwde   
  413a56:	mov    dl,0x70
  413a58:	stos   DWORD PTR es:[edi],eax
  413a59:	add    al,0xb2
  413a5b:	push   edx
  413a5c:	adc    ebx,DWORD PTR [ebx-0x354b25cf]
  413a62:	mov    ds:0xae32d26f,al
  413a67:	jp     0x413a5e
  413a69:	cmp    DWORD PTR [eax],0x4d
  413a6c:	repnz imul esp,DWORD PTR ds:0x4178ec80,0x7e7440b9
  413a77:	xchg   cl,bl
  413a79:	arpl   di,sp
  413a7b:	pop    esp
  413a7c:	dec    ebp
  413a7d:	adc    ebx,DWORD PTR [esi-0x3b039d6a]
  413a83:	or     bl,BYTE PTR [ecx+0x61]
  413a86:	mov    al,ds:0x6586729e
  413a8b:	mov    edx,0xdc164033
  413a90:	jae    0x413afd
  413a92:	out    0x13,al
  413a94:	int    0x5c
  413a96:	std    
  413a97:	lods   al,BYTE PTR es:[esi]
  413a99:	push   edi
  413a9a:	dec    edi
  413a9b:	adc    BYTE PTR [edx+0x106bf73f],ch
  413aa1:	(bad)
  413aa4:	and    DWORD PTR [edx+0x714f31d0],edx
  413aaa:	dec    edi
  413aab:	lds    ebp,FWORD PTR [eax-0x7c]
  413aae:	inc    edi
  413aaf:	mov    ah,0xb2
  413ab1:	sub    DWORD PTR [edx-0x35],ecx
  413ab4:	mov    DWORD PTR [ebp+0x7dc3fdfc],0xff356309
  413abe:	jbe    0x413b19
  413ac0:	jns    0x413af3
  413ac2:	cdq    
  413ac3:	scas   eax,DWORD PTR es:[edi]
  413ac4:	mov    edi,0x6e60a885
  413ac9:	mov    ?,WORD PTR ds:0x79b9c498
  413acf:	out    0x39,eax
  413ad1:	inc    ebx
  413ad2:	push   DWORD PTR [edi]
  413ad4:	mov    cl,0xcf
  413ad6:	push   cs
  413ad7:	xlat   BYTE PTR ds:[ebx]
  413ad8:	jge    0x413b20
  413ada:	sub    DWORD PTR [eax],esp
  413adc:	(bad)  
  413add:	out    dx,al
  413ade:	push   0xc181dba
  413ae3:	stos   DWORD PTR es:[edi],eax
  413ae4:	or     bl,BYTE PTR [ecx-0x7c]
  413ae7:	scas   al,BYTE PTR es:[edi]
  413ae8:	stos   BYTE PTR es:[edi],al
  413ae9:	outs   dx,DWORD PTR ds:[esi]
  413aea:	imul   eax,edx,0x1
  413aed:	(bad)  
  413aee:	and    esi,ebp
  413af0:	jle    0x413a8a
  413af2:	cli    
  413af3:	jle    0x413af6
  413af5:	je     0x413b1f
  413af7:	and    al,0xe8
  413af9:	xchg   esp,eax
  413afa:	dec    eax
  413afb:	rcr    eax,cl
  413afd:	outs   dx,DWORD PTR ds:[esi]
  413afe:	jg     0x413b5a
  413b00:	mov    ds:0x70004ed7,eax
  413b05:	xchg   edi,eax
  413b06:	sahf   
  413b07:	mov    ch,0xe6
  413b09:	call   0x4a3d:0xb5d5549d
  413b10:	pushf  
  413b11:	enter  0x80b7,0x5
  413b15:	popf   
  413b16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b17:	cmp    al,0x7a
  413b19:	retf   0x892f
  413b1c:	mov    ecx,0x293f2baa
  413b21:	popa   
  413b22:	and    eax,0x48bc800c
  413b27:	stos   DWORD PTR es:[edi],eax
  413b28:	hlt    
  413b29:	xchg   esp,eax
  413b2a:	js     0x413abd
  413b2c:	stc    
  413b2d:	cld    
  413b2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413b2f:	into   
  413b30:	sub    al,BYTE PTR [ecx+0x2c]
  413b33:	pop    ecx
  413b34:	and    BYTE PTR [eax-0x6a40e36],ch
  413b3a:	xchg   BYTE PTR [edx+0x49],cl
  413b3d:	mov    ds:0xb0804b9f,eax
  413b42:	mov    gs:0x573ceee5,eax
  413b48:	int3   
  413b49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b4a:	sub    BYTE PTR [ebx+edi*8-0xbba3512],0x65
  413b52:	das    
  413b53:	xor    DWORD PTR [eax-0x19b65575],ecx
  413b59:	icebp  
  413b5a:	lahf   
  413b5b:	test   dh,bl
  413b5d:	adc    al,0x17
  413b5f:	sti    
  413b60:	push   cs
  413b61:	and    DWORD PTR [eax+edx*8+0x64],edi
  413b65:	out    0xaa,al
  413b67:	pop    edi
  413b68:	clc    
  413b69:	mov    ecx,0xfea9cd2f
  413b6e:	jl     0x413beb
  413b70:	jmp    0x413b70
  413b72:	xor    BYTE PTR [edi-0x52653ef2],dl
  413b78:	sub    eax,0xf783bf0d
  413b7d:	ret    
  413b7e:	aam    0x59
  413b80:	sbb    ecx,DWORD PTR [edx]
  413b82:	fnstenv [ecx]
  413b84:	repz mov edi,0x791b60d9
  413b8a:	test   edx,edx
  413b8c:	add    al,0x17
  413b8e:	scas   eax,DWORD PTR es:[edi]
  413b8f:	or     cl,BYTE PTR [esi-0x16]
  413b92:	sub    ch,dl
  413b94:	mov    eax,0xb3f45608
  413b9a:	repnz lods eax,DWORD PTR ds:[esi]
  413b9c:	add    eax,0xe4851f30
  413ba1:	jmp    0x413bdf
  413ba3:	cmp    ah,BYTE PTR [esi-0x57]
  413ba6:	es xchg ecx,eax
  413ba8:	cli    
  413ba9:	retf   0x7488
  413bac:	and    eax,0x8fb1e19b
  413bb1:	pop    edi
  413bb2:	ds gs mov ebx,0x4cc91d44
  413bb9:	sbb    bl,0xb9
  413bbc:	call   0xbc46:0x3461e537
  413bc3:	pop    ecx
  413bc4:	sbb    ebp,0x50
  413bc7:	dec    esi
  413bc8:	mov    ebx,0x15616394
  413bcd:	retf   
  413bce:	or     ecx,DWORD PTR [edx-0x73]
  413bd1:	xchg   esi,eax
  413bd2:	push   edx
  413bd3:	lahf   
  413bd4:	popa   
  413bd5:	or     bl,dh
  413bd7:	pop    ss
  413bd8:	clc    
  413bd9:	in     al,0xc9
  413bdb:	fwait
  413bdc:	xchg   esi,eax
  413bdd:	pop    ss
  413bde:	dec    esi
  413bdf:	arpl   WORD PTR [ebp-0x493f00fc],ax
  413be5:	jb     0x413bdd
  413be7:	xor    BYTE PTR [ebx-0x497642b5],al
  413bed:	std    
  413bee:	ds icebp 
  413bf0:	dec    ebx
  413bf1:	aas    
  413bf2:	imul   esp,ebx,0x5ec672b9
  413bf8:	loop   0x413c5b
  413bfa:	cmp    eax,0x7ca46fdb
  413bff:	test   DWORD PTR [edx+0x1ddf599d],ebp
  413c05:	jge    0x413c41
  413c07:	shr    ah,0xf9
  413c0a:	int    0xae
  413c0c:	test   BYTE PTR ds:0x9f22e61a,ch
  413c12:	inc    esp
  413c13:	fmul   DWORD PTR [esp-0x50]
  413c17:	outs   dx,BYTE PTR ds:[esi]
  413c18:	or     ebx,eax
  413c1a:	adc    BYTE PTR ds:0x29b52c57,bl
  413c20:	daa    
  413c21:	icebp  
  413c22:	push   edx
  413c23:	jb     0x413bdc
  413c25:	arpl   WORD PTR [ecx],si
  413c27:	add    al,al
  413c29:	mov    bh,0xa7
  413c2b:	push   ecx
  413c2c:	aam    0x88
  413c2e:	test   al,0x53
  413c30:	xor    DWORD PTR [esi],ecx
  413c32:	sub    al,0xdc
  413c34:	inc    edi
  413c35:	jno    0x413bd5
  413c37:	jle    0x413c67
  413c39:	aas    
  413c3a:	stc    
  413c3b:	pop    ss
  413c3c:	mov    al,0x64
  413c3e:	pop    ebp
  413c3f:	fcmovu st,st(2)
  413c41:	push   ss
  413c42:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  413c44:	sar    DWORD PTR [ebx],0x32
  413c47:	sbb    ah,BYTE PTR [ebp+0x74]
  413c4a:	adc    eax,esi
  413c4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c4d:	push   ecx
  413c4e:	pop    ebp
  413c4f:	popf   
  413c50:	icebp  
  413c51:	sub    DWORD PTR [ebp+0x66],esi
  413c54:	into   
  413c55:	push   ecx
  413c56:	pop    ds
  413c57:	int    0x5e
  413c59:	pop    esi
  413c5a:	rcr    eax,1
  413c5c:	and    ebx,DWORD PTR [ebx]
  413c5e:	in     al,dx
  413c5f:	sahf   
  413c60:	adc    cl,dl
  413c62:	loopne 0x413c9c
  413c64:	bound  ebx,QWORD PTR [ecx]
  413c66:	in     al,0x41
  413c68:	sub    bh,cl
  413c6a:	xor    eax,0x9e74ab9b
  413c6f:	sub    dh,cl
  413c71:	lock test DWORD PTR [edx-0x779e303a],esp
  413c78:	mov    dl,0xe
  413c7a:	add    ebp,DWORD PTR [esi+0x4a]
  413c7d:	jg     0x413c4b
  413c7f:	jg     0x413c13
  413c81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c82:	or     ebx,eax
  413c84:	mov    WORD PTR [esi-0x45],ds
  413c87:	mov    DWORD PTR [edx+0xd],ebx
  413c8a:	imul   edi,DWORD PTR fs:[esi],0x50
  413c8e:	out    dx,eax
  413c8f:	xlat   BYTE PTR ds:[ebx]
  413c90:	test   al,0xec
  413c92:	and    al,0x31
  413c94:	sbb    DWORD PTR es:[edx+0x50ad9dd8],esp
  413c9b:	push   edi
  413c9c:	sbb    BYTE PTR [eax-0x6d965838],al
  413ca2:	jmp    0x413c56
  413ca4:	rcr    DWORD PTR [edx-0x30],cl
  413ca7:	cmp    ecx,DWORD PTR [eax+esi*1]
  413caa:	mov    dl,0xe3
  413cac:	inc    ecx
  413cad:	pusha  
  413cae:	inc    eax
  413caf:	pop    esp
  413cb0:	or     al,0x15
  413cb2:	cli    
  413cb3:	or     ch,ch
  413cb5:	mov    eax,ds:0xba79d2d8
  413cba:	jns    0x413c62
  413cbc:	and    ebp,ecx
  413cbe:	loop   0x413ca2
  413cc0:	cmc    
  413cc1:	in     eax,dx
  413cc2:	cld    
  413cc3:	dec    ebp
  413cc4:	jmp    0xf3d5:0x1d763c2d
  413ccb:	push   0xfffffffa
  413ccd:	xlat   BYTE PTR ds:[ebx]
  413cce:	(bad)  
  413ccf:	in     al,0xe8
  413cd1:	mov    esp,0x3ad9c1b8
  413cd6:	dec    edx
  413cd7:	gs addr16 xchg ebx,eax
  413cda:	popa   
  413cdb:	and    edx,ebx
  413cdd:	pop    ebp
  413cde:	gs call 0x48f5:0xde37563e
  413ce6:	outs   dx,BYTE PTR ds:[esi]
  413ce7:	dec    esp
  413ce8:	(bad)  
  413cea:	sub    al,0xc5
  413cec:	push   es
  413ced:	sbb    eax,ebx
  413cef:	scas   al,BYTE PTR es:[edi]
  413cf0:	cmp    BYTE PTR [esi+0x11],ah
  413cf3:	sbb    BYTE PTR [ebp-0x52],0x40
  413cf7:	sub    eax,0x488a8338
  413cfc:	ins    DWORD PTR es:[edi],dx
  413cfd:	jb     0x413cd4
  413cff:	pop    ebp
  413d00:	mov    edi,0x5ee92869
  413d05:	jge    0x413c8e
  413d07:	lods   al,BYTE PTR gs:[esi]
  413d09:	cwde   
  413d0a:	xor    BYTE PTR [esi-0x3fc713b5],dh
  413d10:	(bad)  [edx]
  413d12:	test   eax,0x76ce1310
  413d17:	adc    al,0xf3
  413d19:	adc    al,0x11
  413d1b:	out    0x80,al
  413d1d:	mov    ds:0xf6f44107,al
  413d22:	jge    0x413cb3
  413d24:	mov    bh,0x1a
  413d26:	repnz push 0x43
  413d29:	out    0xf7,eax
  413d2b:	or     ecx,DWORD PTR [eax-0x4b]
  413d2e:	fs (bad) 
  413d30:	sub    al,0xd5
  413d32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d33:	aad    0xd
  413d35:	popf   
  413d36:	or     eax,0xd4a6c647
  413d3b:	jl     0x413d18
  413d3d:	clc    
  413d3e:	jecxz  0x413cfa
  413d40:	mov    cl,0x4f
  413d42:	bound  ecx,QWORD PTR [eax-0x25]
  413d45:	sar    DWORD PTR [eax+0x14d0ccc4],0x9f
  413d4c:	sub    esp,edi
  413d4e:	fs push edi
  413d50:	dec    esp
  413d51:	dec    edi
  413d52:	test   al,0x39
  413d54:	and    BYTE PTR [edi+0x41eff2e6],ch
  413d5a:	lods   eax,DWORD PTR ds:[esi]
  413d5b:	adc    BYTE PTR [esp+ebx*2+0x6605897a],cl
  413d62:	or     edx,DWORD PTR [esp+ecx*4+0x65]
  413d66:	xchg   ebx,eax
  413d67:	pop    esp
  413d68:	test   eax,0xa0e6f5fc
  413d6d:	sbb    al,0xc9
  413d6f:	or     esi,ebp
  413d71:	mov    al,0xaa
  413d73:	push   ebx
  413d74:	pop    es
  413d75:	outs   dx,DWORD PTR ds:[esi]
  413d76:	stos   BYTE PTR es:[edi],al
  413d77:	jmp    0xe640:0xdb757cb7
  413d7e:	sti    
  413d7f:	loopne 0x413df0
  413d81:	push   esi
  413d82:	mov    dh,0x1f
  413d84:	jb     0x413d2b
  413d86:	popf   
  413d87:	inc    eax
  413d88:	stc    
  413d89:	and    al,0x6c
  413d8b:	lock daa 
  413d8d:	jle    0x413dab
  413d8f:	jl     0x413d67
  413d91:	pop    ds
  413d92:	sar    edi,cl
  413d94:	mov    esp,0x7f44d5e6
  413d99:	add    eax,0x914807f7
  413d9e:	popa   
  413d9f:	mov    bl,BYTE PTR [eax+eax*2]
  413da2:	call   0x5be59ce3
  413da7:	xchg   ecx,eax
  413da8:	movzx  esp,BYTE PTR [edi-0x1c]
  413dac:	mov    ds:0xe8d031e2,al
  413db1:	sbb    bl,BYTE PTR [ebp+0x28]
  413db4:	std    
  413db5:	jg     0x413df0
  413db7:	stos   BYTE PTR es:[edi],al
  413db8:	ret    
  413db9:	jp     0x413de3
  413dbb:	pusha  
  413dbc:	repz fisttp WORD PTR [ecx+0x78]
  413dc0:	ret    0x50a7
  413dc3:	jnp    0x413dae
  413dc5:	sbb    al,0x7
  413dc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dc8:	mov    edi,0x9541c7c5
  413dcd:	scas   al,BYTE PTR es:[edi]
  413dce:	and    bh,BYTE PTR fs:[esi-0x34]
  413dd2:	cmp    eax,ecx
  413dd4:	ret    
  413dd5:	addr16 xchg esi,eax
  413dd7:	jae    0x413dee
  413dd9:	fs push edi
  413ddb:	call   0xfa74:0x91b5ae12
  413de2:	repz mov esi,0x635290ff
  413de8:	sub    eax,0xa5775251
  413ded:	cmc    
  413dee:	xchg   ebx,eax
  413def:	lock and BYTE PTR [edx],0x11
  413df3:	mov    dl,0xf7
  413df5:	and    edx,DWORD PTR [ebp+edi*2+0x5a63629a]
  413dfc:	icebp  
  413dfd:	push   ds
  413dfe:	out    0x23,al
  413e00:	jne    0x413d9a
  413e02:	fimul  DWORD PTR [esi+0x45]
  413e05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e06:	jmp    0x413e6a
  413e08:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e0a:	jbe    0x413e58
  413e0c:	call   0x6048:0xb3dce03
  413e13:	rcl    ah,0xc7
  413e16:	lock pop ss
  413e18:	retf   0x5c2a
  413e1b:	mov    ebx,0xf6d307db
  413e20:	sahf   
  413e21:	mov    eax,ds:0x7a8a0061
  413e26:	or     dl,ch
  413e28:	std    
  413e29:	idiv   ecx
  413e2b:	push   esp
  413e2c:	xchg   DWORD PTR [bx+si-0x4300],eax
  413e31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413e32:	push   ebp
  413e33:	pop    edx
  413e34:	add    ecx,esi
  413e36:	loope  0x413e72
  413e38:	mov    bh,0x86
  413e3a:	les    edx,FWORD PTR [edx-0x263985c9]
  413e40:	xlat   BYTE PTR ds:[ebx]
  413e41:	pop    ebp
  413e42:	sbb    BYTE PTR [edi],0x5a
  413e45:	es mov esi,0x50db7266
  413e4b:	mov    edx,0x343c336d
  413e50:	pop    esp
  413e51:	fistp  WORD PTR [ecx-0x7eae168e]
  413e57:	pop    edi
  413e58:	call   0x924d:0x2192f156
  413e5f:	inc    edi
  413e60:	xor    al,0x84
  413e62:	pop    es
  413e63:	push   esp
  413e64:	cwde   
  413e65:	xchg   DWORD PTR [ebx-0x6c],edi
  413e68:	mov    ebp,0x9c628bb2
  413e6d:	pop    ebp
  413e6e:	xchg   edx,eax
  413e6f:	and    dh,bl
  413e71:	xchg   esi,eax
  413e72:	push   ebp
  413e73:	cli    
  413e74:	sub    dh,BYTE PTR [edi-0x8]
  413e77:	pop    esi
  413e78:	or     edx,DWORD PTR [eax+0x43]
  413e7b:	push   eax
  413e7c:	push   ebx
  413e7d:	fiadd  WORD PTR [esi-0x3f]
  413e80:	push   ebp
  413e81:	push   es
  413e82:	mov    WORD PTR [bx+di],ds
  413e85:	and    DWORD PTR [ebx+ebp*8],esp
  413e88:	dec    ecx
  413e89:	cli    
  413e8a:	adc    BYTE PTR [ebx+0x19],al
  413e8d:	and    edi,ecx
  413e8f:	icebp  
  413e90:	sbb    ebx,edi
  413e92:	or     BYTE PTR [ebx],bl
  413e94:	xor    ebx,ecx
  413e96:	(bad)  
  413e97:	loopne 0x413e7f
  413e99:	add    eax,0x7c961326
  413e9e:	das    
  413e9f:	xchg   DWORD PTR [edx+edx*4+0x30],edx
  413ea3:	or     BYTE PTR [esi+edi*8-0x20],al
  413ea7:	cmp    ebx,DWORD PTR [ecx]
  413ea9:	sbb    eax,0xd8748484
  413eae:	jle    0x413ed5
  413eb0:	adc    al,0xe8
  413eb2:	popf   
  413eb3:	ficom  WORD PTR [ecx+0x40269abd]
  413eb9:	je     0x413e61
  413ebb:	sub    eax,0x9331a32
  413ec0:	and    al,BYTE PTR [edi]
  413ec2:	retf   0xd33e
  413ec5:	jns    0x413edb
  413ec7:	sti    
  413ec8:	xor    ecx,DWORD PTR [ebp-0xe94a19]
  413ece:	stos   BYTE PTR es:[edi],al
  413ecf:	int    0xc7
  413ed1:	(bad)  
  413ed2:	sub    eax,DWORD PTR [ebx]
  413ed4:	sti    
  413ed5:	fmul   st(3),st
  413ed7:	mov    edi,0x7351cb22
  413edc:	stos   DWORD PTR es:[di],eax
  413ede:	add    BYTE PTR [ebp+0x27],dl
  413ee1:	jmp    0x2826:0xe648e162
  413ee8:	push   ebp
  413ee9:	int3   
  413eea:	aam    0xd4
  413eec:	push   edx
  413eed:	outs   dx,DWORD PTR ds:[esi]
  413eee:	add    DWORD PTR [eax+0x75cef58c],eax
  413ef4:	(bad)  
  413ef6:	mov    BYTE PTR [ecx-0x747f01bb],ah
  413efc:	ins    BYTE PTR es:[edi],dx
  413efd:	repnz out 0xcc,eax
  413f00:	lea    edx,[eax]
  413f02:	and    DWORD PTR [ebp-0x35],ebx
  413f05:	(bad)  [eax+0x24]
  413f08:	int    0xea
  413f0a:	cmp    al,0xda
  413f0c:	sub    DWORD PTR [eax],ecx
  413f0e:	nop
  413f0f:	mov    eax,ds:0xac1f3d1a
  413f14:	std    
  413f15:	push   cs
  413f16:	push   ss
  413f17:	push   esp
  413f18:	sub    BYTE PTR [ebx+0x3b1cd2d1],bh
  413f1e:	data16 mov WORD PTR [eax],cs
  413f21:	push   ds
  413f22:	xchg   ebp,eax
  413f23:	jbe    0x413f60
  413f25:	shl    BYTE PTR [ebx+0x32ea028],1
  413f2b:	or     dl,BYTE PTR [edi+0x76]
  413f2e:	sahf   
  413f2f:	mov    ebp,0xce45cf5e
  413f34:	sub    edx,DWORD PTR [ecx]
  413f36:	mov    al,0x42
  413f38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f39:	mov    esi,0x52ce7b01
  413f3e:	icebp  
  413f3f:	es pop ebx
  413f41:	jecxz  0x413f02
  413f43:	cmp    ebx,DWORD PTR [ebx+0x9]
  413f46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f47:	pop    ds
  413f48:	test   eax,0x46421814
  413f4d:	int    0xf4
  413f4f:	sub    DWORD PTR [bp+di+0x7928],esi
  413f54:	fdiv   st(3),st
  413f56:	jg     0x413f0c
  413f58:	xor    al,0x62
  413f5a:	and    al,0x19
  413f5c:	and    DWORD PTR [ebp-0x55a332ce],ecx
  413f62:	fldenv [edx+0x71db5354]
  413f68:	sahf   
  413f69:	mov    ch,0x67
  413f6b:	shl    DWORD PTR [esi-0x6af263ad],cl
  413f71:	push   cs
  413f72:	fst    st(4)
  413f74:	ss retf 0x4959
  413f78:	cmp    al,BYTE PTR [edx-0x38]
  413f7b:	nop
  413f7c:	scas   eax,DWORD PTR es:[edi]
  413f7d:	pop    edx
  413f7e:	dec    ebx
  413f7f:	test   BYTE PTR [edx+0x21],bh
  413f82:	pop    es
  413f83:	and    bl,bh
  413f85:	or     ecx,ebp
  413f87:	pop    edi
  413f88:	mov    ds,WORD PTR ds:0x42d28a9f
  413f8e:	add    esi,0x5d
  413f91:	dec    ebp
  413f92:	mov    ch,0x90
  413f94:	xchg   ecx,eax
  413f95:	adc    BYTE PTR [edi-0x30],0x33
  413f99:	mov    esi,DWORD PTR [ecx+0x683ed4f3]
  413f9f:	les    edx,FWORD PTR [esp+eax*2]
  413fa2:	std    
  413fa3:	mov    dh,BYTE PTR es:[ecx]
  413fa6:	dec    ecx
  413fa7:	mov    eax,0xf42d5b33
  413fac:	arpl   WORD PTR [edi],bp
  413fae:	or     DWORD PTR [edx],edi
  413fb0:	xor    bl,al
  413fb2:	in     eax,0x7e
  413fb4:	jl     0x414030
  413fb6:	pop    edi
  413fb7:	inc    edx
  413fb8:	jle    0x413fc4
  413fba:	aaa    
  413fbb:	and    ebp,DWORD PTR [ebx+edx*8-0x51]
  413fbf:	repz push ebx
  413fc1:	dec    ebp
  413fc2:	xor    ebx,0x38
  413fc5:	repz and eax,0x1da21b23
  413fcb:	rcl    BYTE PTR [ecx],1
  413fcd:	adc    BYTE PTR [esi+0x340c64df],ch
  413fd3:	pop    edx
  413fd4:	idiv   dl
  413fd6:	fisub  WORD PTR [edx]
  413fd8:	sub    dh,BYTE PTR ds:0x25dee3af
  413fde:	push   ss
  413fdf:	jnp    0x413ff1
  413fe1:	idiv   BYTE PTR [edi-0x2ed143b5]
  413fe7:	jmp    0x413faa
  413fe9:	cmp    ecx,esp
  413feb:	dec    ebp
  413fec:	push   0xffffffc5
  413fee:	int3   
  413fef:	and    ebx,DWORD PTR [eax+0x44]
  413ff2:	or     al,0x28
  413ff4:	cwde   
  413ff5:	adc    bh,cl
  413ff7:	aaa    
  413ff8:	adc    eax,0xf13b6ab8
  413ffd:	cmp    eax,0x4b731177
  414002:	mov    cl,0x40
  414004:	clc    
  414005:	pop    es
  414006:	mov    cl,0x52
  414008:	mov    ch,0x3a
  41400a:	popf   
  41400b:	fwait
  41400c:	mov    eax,ds:0x53dcbd8f
  414011:	jns    0x413fee
  414013:	xor    edx,DWORD PTR [ebx+0x23]
  414016:	fwait
  414017:	ret    
  414018:	xor    bl,BYTE PTR [edx+0x1df9e507]
  41401e:	aad    0x80
  414020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414021:	in     al,dx
  414022:	or     al,0x2e
  414024:	call   0x397:0xe150fa79
  41402b:	aas    
  41402c:	lods   eax,DWORD PTR ds:[esi]
  41402d:	mov    BYTE PTR [ebx-0x44],dl
  414030:	test   eax,0x5f19a9b5
  414035:	cmp    BYTE PTR [eax+eax*2],0xa9
  414039:	es mov ecx,0x6d585872
  41403f:	jecxz  0x414085
  414041:	mov    eax,ds:0x9f3e2ff5
  414046:	xor    al,0x1a
  414048:	inc    ecx
  414049:	(bad)  
  41404a:	mov    eax,0x2283383c
  41404f:	xchg   DWORD PTR [edi-0x62f81f96],eax
  414055:	jb     0x41403e
  414057:	adc    eax,0x81e35144
  41405c:	mov    WORD PTR [esi],fs
  41405e:	push   esp
  41405f:	push   ecx
  414060:	jecxz  0x414016
  414062:	jl     0x414076
  414064:	fnsave [ebp-0xc]
  414067:	add    eax,0x524598a7
  41406c:	jl     0x41402f
  41406e:	cmp    BYTE PTR [edx-0x3e],bh
  414071:	jmp    0x414013
  414073:	retf   
  414074:	lds    ebx,FWORD PTR [ebx]
  414076:	(bad)  
  414078:	xor    BYTE PTR [eax+0x2f857796],dh
  41407e:	and    BYTE PTR [ebx-0x16a9d28e],0x99
  414085:	mov    eax,ds:0x78a0fb2a
  41408a:	loop   0x414083
  41408c:	out    dx,eax
  41408d:	push   edx
  41408e:	loop   0x41410c
  414090:	jae    0x414105
  414092:	int    0xe4
  414094:	js     0x41408d
  414096:	rcr    DWORD PTR [eax+0x16],1
  414099:	xchg   ecx,eax
  41409a:	ret    0x1929
  41409d:	(bad)  
  41409e:	adc    esi,0x23369a61
  4140a4:	imul   ebx,DWORD PTR [ecx+edi*4-0x6d],0x3a
  4140a9:	shr    BYTE PTR [edi],0x8f
  4140ac:	mov    cl,0x2f
  4140ae:	add    eax,DWORD PTR [edx+0x2f57c4b5]
  4140b4:	cs (bad) 
  4140b6:	mov    dl,0xf9
  4140b8:	imul   esi,ebp,0xacb1dd6d
  4140be:	pop    ebx
  4140bf:	ss xabort 0x21
  4140c3:	adc    ah,BYTE PTR [edi]
  4140c5:	jg     0x4140e6
  4140c7:	psrlw  mm0,QWORD PTR [edi+esi*2+0x3560f652]
  4140cf:	adc    al,0x10
  4140d1:	xor    DWORD PTR [ebp+0x21756f6c],edx
  4140d7:	call   0xe03a:0x6f4a2647
  4140de:	rol    ebp,cl
  4140e0:	cmp    eax,0x9f756e9a
  4140e5:	jp     0x41414a
  4140e7:	sub    DWORD PTR [edi],esp
  4140e9:	gs (bad) 
  4140eb:	xor    al,0xd9
  4140ed:	pop    esi
  4140ee:	sbb    al,0x7c
  4140f0:	sar    edi,0x45
  4140f3:	fcom   DWORD PTR [eax+0x2b]
  4140f6:	sar    esi,cl
  4140f8:	pop    ds
  4140f9:	pop    ecx
  4140fa:	clc    
  4140fb:	pop    ecx
  4140fc:	fisub  DWORD PTR [ebx+ebp*1-0x1b4ba728]
  414103:	pop    edx
  414104:	mov    WORD PTR [esi],?
  414106:	jmp    0xd169c709
  41410b:	push   ebp
  41410c:	hlt    
  41410d:	and    DWORD PTR [edx-0x1784f6d],esp
  414113:	xlat   BYTE PTR ds:[ebx]
  414114:	fidiv  WORD PTR [ebx+0x34]
  414117:	and    BYTE PTR [edx+0x23e25e09],0xb8
  41411e:	mov    gs,WORD PTR [edx+0x3edf2af2]
  414124:	sub    eax,0x1f507a54
  414129:	std    
  41412a:	retf   0xff8d
  41412d:	fisub  DWORD PTR [edi]
  41412f:	or     bl,BYTE PTR [esi+0x4cfee18d]
  414135:	cmp    eax,0xa27ec121
  41413a:	or     ebx,ebp
  41413c:	mov    edx,0x6d2cb5b5
  414141:	pop    ebx
  414142:	cmp    edi,0x30
  414145:	iret   
  414146:	or     dh,bl
  414148:	sbb    edi,DWORD PTR [ebx-0x1e]
  41414b:	call   0x3b48:0x13e93085
  414152:	xor    DWORD PTR [ebx+ebp*2+0x3b],esi
  414156:	fs jmp 0x414192
  414159:	das    
  41415a:	adc    DWORD PTR [edi],eax
  41415c:	push   es
  41415d:	adc    edi,DWORD PTR [esi+ecx*8-0x35]
  414161:	popf   
  414162:	adc    al,0x8b
  414164:	out    0xf6,al
  414166:	or     eax,0xdf899ad7
  41416b:	jno    0x4141eb
  41416d:	ror    DWORD PTR [ebx],1
  41416f:	push   edx
  414170:	loope  0x414166
  414172:	and    DWORD PTR [edx+0x6f93051a],esp
  414178:	mov    ah,0xdd
  41417a:	retf   
  41417b:	inc    esp
  41417c:	sub    edx,DWORD PTR [edi+0x560b825a]
  414182:	xor    al,0x61
  414184:	push   ebp
  414185:	inc    edi
  414186:	xchg   edx,eax
  414187:	push   eax
  414188:	xor    DWORD PTR [esp+esi*4-0x194a6a4f],ebx
  41418f:	arpl   WORD PTR [ebp+0x44],ax
  414192:	in     al,0xbd
  414194:	ins    BYTE PTR es:[edi],dx
  414195:	add    BYTE PTR [edi+0x2d],dl
  414198:	dec    esi
  414199:	and    BYTE PTR [ecx-0x611e0e2a],0xe2
  4141a0:	adc    eax,0x7c93c982
  4141a5:	add    DWORD PTR [ebx+0x3915fe88],ebx
  4141ab:	call   0x4257b1cf
  4141b0:	pop    edx
  4141b1:	retf   
  4141b2:	inc    ebx
  4141b3:	or     dl,cl
  4141b5:	cmp    ecx,DWORD PTR [edi-0x5f73a0e0]
  4141bb:	pop    ebx
  4141bc:	sbb    esi,DWORD PTR [eax-0x61c37dcb]
  4141c2:	stos   DWORD PTR es:[edi],eax
  4141c3:	jg     0x4141cd
  4141c5:	adc    al,0xe4
  4141c7:	xchg   esp,eax
  4141c8:	aaa    
  4141c9:	icebp  
  4141ca:	dec    esp
  4141cb:	fimul  WORD PTR [esi-0x2f9d36cb]
  4141d1:	sbb    esp,DWORD PTR [esi+0x59]
  4141d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141d6:	mov    dh,0x3
  4141d8:	in     al,0xdf
  4141da:	dec    esi
  4141db:	les    esi,FWORD PTR [ebx-0x15]
  4141de:	shl    BYTE PTR [ebx],1
  4141e0:	inc    edi
  4141e1:	sbb    DWORD PTR [ecx+0x13],0x4b6bcda3
  4141e8:	xchg   edx,eax
  4141e9:	xchg   ebx,eax
  4141ea:	outs   dx,BYTE PTR ds:[esi]
  4141eb:	lock dec edi
  4141ed:	iret   
  4141ee:	rol    BYTE PTR [eax-0x77c13f61],cl
  4141f4:	psllw  mm0,mm1
  4141f7:	rcl    BYTE PTR [ebx+esi*8-0x2b],1
  4141fb:	es pushf 
  4141fd:	fisub  DWORD PTR [ecx+ecx*2-0x56]
  414201:	xor    al,0xd9
  414203:	adc    BYTE PTR [eax-0x42],0xea
  414207:	repnz in eax,0x2
  41420a:	jb     0x414209
  41420c:	enter  0x4370,0xca
  414210:	sbb    eax,0xe469b6cc
  414215:	pop    ss
  414216:	es in  al,0xec
  414219:	dec    eax
  41421a:	sar    BYTE PTR [eax+0x43],cl
  41421d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41421e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41421f:	mov    ecx,0x4431c1d2
  414224:	test   DWORD PTR [esi-0x7bafa535],edx
  41422a:	lahf   
  41422b:	inc    eax
  41422c:	in     eax,0xd3
  41422e:	and    BYTE PTR [eax+0x384862fd],dl
  414234:	fidivr DWORD PTR cs:[ebx]
  414238:	push   ds
  414239:	cwde   
  41423a:	sbb    ecx,edi
  41423c:	xor    eax,0x703e171b
  414241:	test   BYTE PTR [ecx],ah
  414243:	jbe    0x414215
  414245:	in     al,0xf
  414247:	xchg   edi,eax
  414248:	push   ebx
  414249:	test   ecx,ebp
  41424b:	pop    eax
  41424c:	imul   ebp,edi,0xc06330b2
  414252:	mov    bl,0x12
  414254:	arpl   WORD PTR [ebx+0x7a],cx
  414257:	sar    DWORD PTR [ebp+edi*8-0xc],0x55
  41425c:	inc    edi
  41425d:	mov    ecx,0x33b5e70c
  414262:	mov    dl,0xb8
  414264:	lods   al,BYTE PTR ds:[esi]
  414265:	cld    
  414266:	scas   eax,DWORD PTR es:[edi]
  414267:	and    DWORD PTR [eax-0x1b6d1973],edi
  41426d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41426e:	mov    fs,WORD PTR [esi]
  414270:	loope  0x4142ef
  414272:	cld    
  414273:	push   esi
  414274:	mov    dl,BYTE PTR ds:0xd581eee1
  41427a:	sub    BYTE PTR [edi+0x59],ah
  41427d:	sbb    bl,ah
  41427f:	jbe    0x41423b
  414281:	sahf   
  414282:	adc    eax,eax
  414284:	fwait
  414285:	sub    ebx,eax
  414287:	scas   al,BYTE PTR es:[edi]
  414288:	pop    esp
  414289:	jno    0x414215
  41428b:	or     cl,BYTE PTR [edx+0x18]
  41428e:	mov    ebp,0x6ff9ed56
  414293:	dec    ecx
  414294:	ja     0x4142ad
  414296:	mov    esp,DWORD PTR [edi]
  414298:	sbb    DWORD PTR [eax+eiz*4+0x605ad892],eax
  41429f:	pusha  
  4142a0:	pop    ebp
  4142a1:	rcr    DWORD PTR [ecx+0x1f],cl
  4142a4:	dec    edx
  4142a5:	adc    BYTE PTR [esi+eax*1],0x2d
  4142a9:	add    eax,DWORD PTR [edi-0x58d693f5]
  4142af:	out    0xbf,eax
  4142b1:	scas   eax,DWORD PTR es:[edi]
  4142b2:	iret   
  4142b3:	cdq    
  4142b4:	out    0x2e,al
  4142b6:	int3   
  4142b7:	mov    ds:0x75aa44bf,al
  4142bc:	or     DWORD PTR [edi-0x2d7bd97],ecx
  4142c2:	push   ebp
  4142c3:	(bad)  
  4142c4:	ffree  st(5)
  4142c6:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4142c8:	push   0x41
  4142ca:	add    DWORD PTR [ecx-0xae81a2e],edi
  4142d0:	ins    DWORD PTR es:[edi],dx
  4142d1:	not    BYTE PTR gs:[ebp-0x7f9168]
  4142d8:	or     eax,0xc7650c14
  4142dd:	dec    esi
  4142de:	pop    esi
  4142df:	repz lea ecx,[ebx+0x91912e3]
  4142e6:	in     eax,dx
  4142e7:	sbb    eax,0xea8a90e7
  4142ec:	mov    al,ds:0x55023209
  4142f1:	test   al,0xaa
  4142f3:	cmp    ebx,edx
  4142f5:	lds    esi,FWORD PTR [ebp+0x3c0de4ba]
  4142fb:	mov    DWORD PTR [esi-0x7cd2ea73],eax
  414301:	out    dx,al
  414302:	fnstsw WORD PTR [ebx-0x6b]
  414305:	je     0x414375
  414307:	or     BYTE PTR [ebp-0x6d7a87f4],bl
  41430d:	das    
  41430e:	cmp    al,0xcb
  414310:	into   
  414311:	or     ecx,edx
  414313:	(bad)  
  414314:	xor    eax,DWORD PTR [ebx]
  414316:	lahf   
  414317:	sub    BYTE PTR [eax+edx*4-0x340d271a],al
  41431e:	call   0xb33ed5f1
  414323:	pop    esp
  414324:	and    al,0xf1
  414326:	inc    ebx
  414327:	mov    ds:0xedcb7b7d,eax
  41432c:	shl    DWORD PTR [edx],1
  41432e:	sbb    ebp,DWORD PTR [esi+edx*1-0x695c10ea]
  414335:	repz jmp 0x5aacd5ec
  41433b:	mov    esp,0x763f1b0f
  414340:	popa   
  414341:	xchg   ecx,eax
  414342:	stc    
  414343:	dec    eax
  414344:	or     edi,edi
  414346:	xor    BYTE PTR [edi],ah
  414348:	xchg   dh,dl
  41434a:	ds xchg ecx,eax
  41434c:	pop    ebp
  41434d:	rol    esi,0x9a
  414350:	mov    ds:0x1221ce11,eax
  414355:	(bad)  
  414356:	test   al,0xf0
  414358:	pop    edi
  414359:	push   es
  41435a:	in     al,0x5e
  41435c:	mov    eax,0x56a07b9f
  414361:	in     al,0x57
  414363:	loope  0x41430f
  414365:	fcomi  st,st(5)
  414367:	mov    esi,0x9afd5cd3
  41436c:	sub    eax,0x8f7a9e12
  414371:	add    DWORD PTR [esi+0x59],eax
  414374:	fsubr  QWORD PTR [ecx-0x6e]
  414377:	dec    ebx
  414378:	fdiv   QWORD PTR ds:0xeb9399f8
  41437e:	push   ds
  41437f:	mul    DWORD PTR [esi+0x54ba4b1d]
  414385:	jns    0x4143ad
  414387:	aam    0x9f
  414389:	aad    0xfa
  41438b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41438c:	dec    edx
  41438d:	cwde   
  41438e:	push   0x7c2f357
  414393:	lock aas 
  414395:	mov    BYTE PTR [esi],bl
  414397:	mov    DWORD PTR [ebp+0x58],0x7a4bfc2f
  41439e:	mov    ecx,0x5459cad4
  4143a3:	stos   BYTE PTR es:[edi],al
  4143a4:	sub    eax,0x61f2ce14
  4143a9:	fcomp  DWORD PTR [edx+0x22df17b2]
  4143af:	push   0x34
  4143b1:	daa    
  4143b2:	loope  0x41441d
  4143b4:	mov    bl,0x3c
  4143b6:	push   ebx
  4143b7:	(bad)  
  4143b8:	cmp    esi,esp
  4143ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143bc:	jb     0x414380
  4143be:	xchg   al,bl
  4143c0:	jecxz  0x4143dd
  4143c2:	mov    DWORD PTR [esi],eax
  4143c4:	hlt    
  4143c5:	sbb    al,0xe4
  4143c7:	jne    0x41436d
  4143c9:	push   edi
  4143ca:	xor    eax,0x6d0f2744
  4143cf:	mov    cl,0x32
  4143d1:	push   0xffffffdb
  4143d3:	xchg   ebx,ecx
  4143d5:	fwait
  4143d6:	mov    eax,ds:0x5de4241a
  4143db:	jo     0x4143cf
  4143dd:	dec    esp
  4143de:	mov    ebp,0x6baa0444
  4143e3:	fincstp 
  4143e5:	add    eax,0xafa55fe2
  4143ea:	sub    al,0xdc
  4143ec:	pop    esi
  4143ed:	and    edx,esi
  4143ef:	dec    ecx
  4143f0:	pop    ecx
  4143f1:	int    0x2f
  4143f3:	icebp  
  4143f4:	mov    al,ds:0x54820123
  4143f9:	push   0xffffff98
  4143fb:	out    0x4f,al
  4143fd:	fcom   DWORD PTR [esi+0x2f5ba6db]
  414403:	call   0xfa49:0x7cb923bb
  41440a:	or     BYTE PTR [eax],0x36
  41440d:	push   edx
  41440e:	shl    DWORD PTR [edx],cl
  414410:	test   eax,0xab51bf18
  414415:	test   DWORD PTR [edi+ebx*1+0x7110ee4b],0x47f3bf1b
  414420:	pop    edi
  414421:	enter  0x2724,0xa6
  414425:	xor    eax,0x3713c7fa
  41442a:	inc    edx
  41442b:	int    0x4d
  41442d:	xor    edi,DWORD PTR [edx+0x49]
  414430:	cs jb  0x414458
  414433:	das    
  414434:	enter  0x4509,0xb
  414438:	fsubrp st(3),st
  41443a:	(bad)  
  41443b:	mov    bh,0x9c
  41443d:	iret   
  41443e:	or     dh,BYTE PTR [esp+edi*8-0x5]
  414442:	repz neg DWORD PTR [ecx]
  414445:	lea    edx,[ecx-0x51336179]
  41444b:	and    al,0xa9
  41444d:	(bad)  
  41444e:	and    eax,0xf01bba70
  414453:	inc    esp
  414454:	aas    
  414455:	popf   
  414456:	lods   eax,DWORD PTR ds:[esi]
  414457:	jle    0x414476
  414459:	in     eax,dx
  41445a:	add    al,0xee
  41445c:	das    
  41445d:	loopne 0x414420
  41445f:	pop    ss
  414460:	(bad)  
  414461:	(bad)  
  414462:	shl    BYTE PTR [eax-0x6de738b1],cl
  414468:	pop    eax
  414469:	push   edx
  41446a:	push   ecx
  41446b:	stos   BYTE PTR es:[edi],al
  41446c:	and    edi,ecx
  41446e:	lds    ecx,FWORD PTR [eax]
  414470:	xchg   esp,eax
  414471:	(bad)  
  414472:	neg    BYTE PTR [eax-0x7c]
  414475:	xchg   ecx,eax
  414476:	je     0x4144a9
  414478:	mov    DWORD PTR [ebx],esp
  41447a:	mov    al,0x2f
  41447c:	or     DWORD PTR [edx-0x47cdb1d1],ebp
  414482:	pop    edx
  414483:	push   ds
  414484:	fst    QWORD PTR [edi+0x7a42345d]
  41448a:	js     0x414488
  41448c:	or     BYTE PTR [eax],bl
  41448e:	sub    al,0x38
  414490:	add    DWORD PTR [ebx+0x5a6d62cf],esi
  414496:	xor    DWORD PTR [ecx],esp
  414498:	(bad)  [ebx+ecx*1]
  41449b:	hlt    
  41449c:	mov    ch,0x65
  41449e:	pop    edi
  41449f:	pusha  
  4144a0:	push   ss
  4144a1:	or     eax,0x9550760d
  4144a6:	fmul   QWORD PTR [eax-0x347afdda]
  4144ac:	xor    eax,0x2a2576b3
  4144b1:	jecxz  0x414522
  4144b3:	pop    ss
  4144b4:	aam    0x36
  4144b6:	sahf   
  4144b7:	addr16 push ss
  4144b9:	loope  0x41446c
  4144bb:	adc    eax,0x13e30762
  4144c0:	mov    ch,0xc
  4144c2:	in     al,0x4
  4144c4:	inc    ebx
  4144c5:	xchg   edx,eax
  4144c6:	xlat   BYTE PTR ds:[ebx]
  4144c7:	adc    eax,0xca92ca99
  4144cc:	fstp   QWORD PTR [eax]
  4144ce:	and    bh,cl
  4144d0:	mov    DWORD PTR [ebx],edx
  4144d2:	out    0xb0,al
  4144d4:	div    BYTE PTR [edx-0x40]
  4144d7:	and    edi,edi
  4144d9:	add    DWORD PTR fs:[edi-0x20a6e103],0xffffffdd
  4144e1:	pop    edi
  4144e2:	mov    dl,ch
  4144e4:	mov    ecx,0x89152aa6
  4144e9:	pop    ss
  4144ea:	and    BYTE PTR [ebp+0x5f7ac23e],bh
  4144f0:	xchg   esi,eax
  4144f1:	jns    0x4144a0
  4144f3:	push   ebp
  4144f4:	sub    DWORD PTR [ebx],0x24
  4144f7:	sub    bl,BYTE PTR ds:0x4e0a0819
  4144fd:	cmp    al,0x67
  4144ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414500:	inc    ebx
  414501:	jno    0x414522
  414503:	xchg   esi,eax
  414504:	push   esi
  414505:	daa    
  414506:	or     esp,edx
  414508:	cmp    BYTE PTR [edx+0x362d28e],0x43
  41450f:	in     eax,dx
  414510:	lods   eax,DWORD PTR ds:[esi]
  414511:	mov    al,BYTE PTR [edi+eiz*1+0x69b54e3e]
  414518:	adc    esi,ebx
  41451a:	xchg   edi,eax
  41451b:	sbb    ecx,DWORD PTR [ecx+0x6f]
  41451e:	retf   0x3f1a
  414521:	xchg   BYTE PTR [ebx],ch
  414523:	stos   DWORD PTR es:[edi],eax
  414524:	jmp    0x4345:0x661294a9
  41452b:	or     DWORD PTR [eax],0x51ecbf03
  414531:	and    eax,DWORD PTR cs:[edx]
  414534:	or     esp,esp
  414536:	push   ebx
  414537:	fisub  WORD PTR [eax]
  414539:	call   ebx
  41453b:	mov    dl,0xdf
  41453d:	nop
  41453e:	sub    dh,BYTE PTR [esi]
  414540:	(bad)  
  414541:	ret    0x96d1
  414544:	cld    
  414545:	inc    ecx
  414546:	fsubr  st(3),st
  414548:	add    DWORD PTR [ebx-0x2b],ebp
  41454b:	js     0x4144d9
  41454d:	sbb    al,0x62
  41454f:	pop    esp
  414550:	jmp    0x4144d7
  414552:	es xchg ecx,eax
  414554:	push   edi
  414555:	sbb    al,BYTE PTR [eax]
  414557:	into   
  414558:	dec    esp
  414559:	cmp    edi,DWORD PTR [esi]
  41455b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41455c:	stc    
  41455d:	xor    eax,0x5f8ea836
  414562:	cs push ss
  414564:	fcom   QWORD PTR [esi+ebp*1+0x34]
  414568:	sub    ecx,DWORD PTR [ebp+0x3]
  41456b:	das    
  41456c:	fnstenv [edi+0x2ef16ae6]
  414572:	pop    ecx
  414573:	test   BYTE PTR [eax],ah
  414575:	pop    ss
  414576:	add    DWORD PTR [edi+0xef43d71],0xf1e9999f
  414580:	push   cs
  414581:	loopne 0x414591
  414583:	iret   
  414584:	sbb    al,0x5c
  414586:	mov    dl,0x8d
  414588:	addr16 stc 
  41458a:	loop   0x41455c
  41458c:	jbe    0x41456a
  41458e:	aas    
  41458f:	xor    cl,0x7e
  414592:	push   edx
  414593:	loop   0x4145fd
  414595:	inc    esi
  414596:	ja     0x4145d0
  414598:	xor    BYTE PTR [esi+0x4b],ah
  41459b:	cli    
  41459c:	cmp    eax,0xe584b604
  4145a1:	pop    eax
  4145a2:	ins    BYTE PTR es:[edi],dx
  4145a3:	mov    edi,0xfdb2e6a0
  4145a8:	or     al,0x19
  4145aa:	dec    eax
  4145ab:	sahf   
  4145ac:	xlat   BYTE PTR ds:[ebx]
  4145ad:	repz lock jae 0x41458f
  4145b1:	sbb    al,0x7c
  4145b3:	push   edx
  4145b4:	fcomp  DWORD PTR [ebx-0x64]
  4145b7:	(bad)  
  4145b8:	into   
  4145b9:	mov    ebx,0x3aa558a5
  4145be:	mov    eax,ds:0x42f03caf
  4145c3:	add    ch,cl
  4145c5:	pop    ecx
  4145c6:	lea    esi,[edi-0x13a7e0a1]
  4145cc:	inc    ebx
  4145cd:	fdiv   st(3),st
  4145cf:	hlt    
  4145d0:	sbb    eax,0x676b52de
  4145d5:	loopne 0x414582
  4145d7:	sbb    edx,ebp
  4145d9:	mov    bl,0xac
  4145db:	xlat   BYTE PTR ds:[ebx]
  4145dc:	mov    dh,0x27
  4145de:	push   es
  4145df:	push   eax
  4145e0:	in     al,dx
  4145e1:	jnp    0x4145d0
  4145e3:	and    eax,0x556a0822
  4145e8:	cmp    BYTE PTR [edx],0x30
  4145eb:	in     al,0xa0
  4145ed:	mov    DWORD PTR [ecx+0x49],eax
  4145f0:	push   esp
  4145f1:	mov    ebx,0xc0b86e68
  4145f6:	aaa    
  4145f7:	js     0x4145ff
  4145f9:	sub    eax,0xd7376e96
  4145fe:	jp     0x4145ba
  414600:	in     eax,dx
  414601:	loopne 0x41466b
  414603:	neg    ebx
  414605:	sub    BYTE PTR [ebx+0x71],al
  414608:	loope  0x414640
  41460a:	sbb    BYTE PTR [edi+0x40a17eeb],ch
  414610:	fisubr WORD PTR [ecx+0x58ce444a]
  414616:	jbe    0x4145f1
  414618:	inc    ecx
  414619:	inc    edi
  41461a:	rcl    DWORD PTR [eax+0x3e],1
  41461d:	retf   0xbee0
  414620:	sahf   
  414621:	mov    edx,0x64b5e90a
  414626:	adc    al,0x3
  414628:	imul   eax,esi,0xeaeca49
  41462e:	inc    ebx
  41462f:	fbld   TBYTE PTR [ebp-0x4cd85188]
  414635:	push   edi
  414636:	mov    cl,0x37
  414638:	xchg   edi,eax
  414639:	mov    ds:0x43beaca7,al
  41463e:	sub    ecx,DWORD PTR [ebp+ebx*8-0x3c8aaa42]
  414645:	sar    DWORD PTR [ebx+0x8],1
  414648:	pop    eax
  414649:	imul   esi,DWORD PTR [edx+0x62994dfe],0xffffff99
  414650:	sbb    bh,BYTE PTR [ecx+0x41]
  414653:	push   ecx
  414654:	xchg   ecx,eax
  414655:	adc    al,0x7f
  414657:	mov    DWORD PTR [edi+ebp*4+0x784319ea],ebx
  41465e:	sub    edi,DWORD PTR [edi-0x6c]
  414661:	adc    bl,BYTE PTR [ecx+0x18]
  414664:	push   ebp
  414665:	xchg   ecx,eax
  414666:	mov    al,0x37
  414668:	ja     0x414669
  41466a:	add    ah,BYTE PTR [eax-0x3]
  41466d:	sahf   
  41466e:	rcr    DWORD PTR [edx],0x26
  414671:	jmp    0x468e:0x3374ff70
  414678:	sub    ecx,DWORD PTR [esi+0x496b3361]
  41467e:	cmp    eax,0x6ad6fed3
  414683:	mov    eax,0x5a07a37d
  414688:	fist   WORD PTR [esi]
  41468a:	push   0x4f
  41468c:	pop    esp
  41468d:	inc    ebp
  41468e:	xchg   DWORD PTR [ecx+0x33],ebp
  414691:	dec    esi
  414692:	jnp    0x414661
  414694:	jns    0x414700
  414696:	push   ss
  414697:	lea    edx,[ebx+edi*4-0x6]
  41469b:	mov    ?,WORD PTR [ecx-0x464fcab]
  4146a1:	(bad)  
  4146a2:	xchg   dl,bh
  4146a4:	sbb    eax,0x280eac49
  4146a9:	lods   eax,DWORD PTR ds:[esi]
  4146aa:	iret   
  4146ab:	pop    ecx
  4146ac:	mov    esi,0xc230f6bb
  4146b1:	retf   
  4146b2:	imul   ah
  4146b4:	test   ah,dl
  4146b6:	dec    edx
  4146b7:	gs inc ecx
  4146b9:	sub    edx,DWORD PTR [ecx]
  4146bb:	sbb    esp,DWORD PTR [ebx-0x7b]
  4146be:	repz dec esp
  4146c0:	sub    edi,DWORD PTR [ebx]
  4146c2:	jge    0x414730
  4146c4:	push   es
  4146c5:	loope  0x41473d
  4146c7:	mov    DWORD PTR [edx],edi
  4146c9:	inc    eax
  4146ca:	stos   BYTE PTR es:[edi],al
  4146cb:	sahf   
  4146cc:	pop    ecx
  4146cd:	jb     0x414670
  4146cf:	mov    dl,0xbc
  4146d1:	retf   
  4146d2:	pop    ebx
  4146d3:	or     BYTE PTR [edx],dl
  4146d5:	inc    edx
  4146d6:	adc    al,0xa3
  4146d8:	xchg   edi,eax
  4146d9:	idiv   DWORD PTR ds:0x55aea409
  4146df:	add    BYTE PTR [eax-0x66e409c9],cl
  4146e5:	aaa    
  4146e6:	test   eax,0x5d10ea14
  4146eb:	cs mov cl,0x67
  4146ee:	dec    esi
  4146ef:	adc    DWORD PTR [ebp-0x19],esi
  4146f2:	push   es
  4146f3:	in     eax,dx
  4146f4:	jne    0x41474a
  4146f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4146f7:	sub    eax,0xffb7702d
  4146fc:	push   edi
  4146fd:	dec    ebp
  4146fe:	mov    eax,ds:0x9b8ed301
  414703:	(bad)
  414706:	jmp    0xc3d0:0x8a8d1cc1
  41470d:	mov    bl,0x24
  41470f:	rol    BYTE PTR [edx-0x3f736ca4],cl
  414715:	jb     0x41478c
  414717:	mov    DWORD PTR [edx+0x2e],ebx
  41471a:	jbe    0x4146e7
  41471c:	test   eax,0xa54f4c49
  414721:	daa    
  414722:	add    eax,0x3e95a6bf
  414727:	mov    ah,0x91
  414729:	pop    edx
  41472a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41472b:	sub    BYTE PTR [edx],al
  41472d:	or     DWORD PTR [edx-0x6],ebp
  414730:	or     esi,esi
  414732:	(bad)  
  414733:	mov    edi,0x1d9d0182
  414738:	cmp    BYTE PTR [ecx-0x1a],cl
  41473b:	loope  0x41473e
  41473d:	clc    
  41473e:	pusha  
  41473f:	cmp    al,0x32
  414741:	mov    ds:0x525a177f,al
  414746:	mov    ah,0xb1
  414748:	mov    WORD PTR [ebx],ds
  41474a:	sbb    eax,0xc233402
  41474f:	add    al,0x13
  414751:	xchg   ecx,eax
  414752:	sahf   
  414753:	jns    0x41471b
  414755:	cmp    DWORD PTR [edx+0x1f18dd29],ebx
  41475b:	mov    esp,esi
  41475d:	inc    eax
  41475e:	popf   
  41475f:	fidivr DWORD PTR [eax-0x51]
  414762:	sbb    BYTE PTR [esi-0x22],0xed
  414766:	push   edi
  414767:	rcl    DWORD PTR [ecx-0x349d570a],cl
  41476d:	and    al,0x63
  41476f:	xchg   ecx,eax
  414770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414771:	ins    DWORD PTR es:[edi],dx
  414772:	popf   
  414773:	xor    al,0xb9
  414775:	jecxz  0x41473a
  414777:	nop
  414778:	cld    
  414779:	test   eax,0xad755cc2
  41477e:	jg     0x4147bb
  414780:	mov    eax,ds:0xf120754a
  414785:	sahf   
  414786:	cs adc ebp,esi
  414789:	dec    ebx
  41478a:	loopne 0x4147de
  41478c:	nop
  41478d:	sbb    eax,0x6f501894
  414792:	stos   DWORD PTR es:[edi],eax
  414793:	pop    ebp
  414794:	dec    esp
  414795:	ficomp DWORD PTR [ebp-0x29]
  414798:	cld    
  414799:	popa   
  41479a:	xor    DWORD PTR [eax-0x6582d954],esp
  4147a0:	fadd   QWORD PTR [edx+ebx*2+0x3a897c93]
  4147a7:	cmp    edx,DWORD PTR [esi-0x1b6bb4be]
  4147ad:	jmp    0x83f0:0x3f804aeb
  4147b4:	fldcw  WORD PTR [edx]
  4147b6:	repz (bad) 
  4147b8:	fcmovu st,st(1)
  4147ba:	mov    ss,WORD PTR ds:0x6b2de08
  4147c0:	cmp    edx,ebx
  4147c2:	xchg   esi,eax
  4147c3:	jmp    0x414750
  4147c5:	cli    
  4147c6:	(bad)  
  4147c7:	jl     0x4147b1
  4147c9:	stos   DWORD PTR es:[edi],eax
  4147ca:	test   BYTE PTR [ebp-0x52],ch
  4147cd:	inc    eax
  4147ce:	popf   
  4147cf:	push   ecx
  4147d0:	test   DWORD PTR [eax+0x1128714f],ecx
  4147d6:	outs   dx,BYTE PTR ds:[esi]
  4147d7:	xchg   esp,eax
  4147d8:	mov    esp,0xae76654c
  4147dd:	dec    esi
  4147de:	push   ds
  4147df:	pop    ebx
  4147e0:	jnp    0x4147f3
  4147e2:	ds (bad) 
  4147e5:	mov    cs,WORD PTR [esi]
  4147e7:	fsubr  QWORD PTR [edi]
  4147e9:	test   al,0xb
  4147eb:	fimul  DWORD PTR [esi+0x313b2f6f]
  4147f1:	sub    ah,dh
  4147f3:	push   edi
  4147f4:	in     al,0x6c
  4147f6:	fisubr DWORD PTR [ebp+edi*8+0x17]
  4147fa:	rol    BYTE PTR [edx+ecx*2],1
  4147fd:	int    0x8c
  4147ff:	adc    ebx,DWORD PTR ds:0x880a5faa
  414805:	iret   
  414806:	test   DWORD PTR [eiz*4+0x61b17a8e],0x418c94d9
  414811:	in     al,0xc2
  414813:	mov    edx,0xcaa044ef
  414818:	adc    ebx,DWORD PTR [esi-0x48ce7841]
  41481e:	or     edi,edi
  414820:	rcr    DWORD PTR [ebx+0x8],1
  414823:	mov    dh,0x40
  414825:	jno    0x41489c
  414827:	xchg   DWORD PTR ds:0x2a6fa157,esp
  41482d:	test   esi,esp
  41482f:	or     al,0xf7
  414831:	data16 ins BYTE PTR es:[edi],dx
  414833:	sub    eax,0xba85047e
  414838:	mov    bh,0x6a
  41483a:	bound  ecx,QWORD PTR [ebx+edi*8]
  41483d:	ja     0x414850
  41483f:	add    BYTE PTR [edx],bh
  414841:	mov    cl,0x30
  414843:	push   ss
  414844:	or     esi,DWORD PTR [ebp-0x224fd1b1]
  41484a:	pop    edi
  41484b:	jge    0x4147cd
  41484d:	fdiv   QWORD PTR [esi]
  41484f:	adc    eax,0xc3747180
  414854:	sub    BYTE PTR [ebx],ah
  414856:	scas   eax,DWORD PTR es:[edi]
  414857:	jb     0x414894
  414859:	fld    QWORD PTR [edx-0x30fa6d6b]
  41485f:	sti    
  414860:	sti    
  414861:	push   ebx
  414862:	inc    ebx
  414863:	adc    bl,bh
  414865:	cmp    cl,bh
  414867:	jl     0x414870
  414869:	xor    DWORD PTR [edi+ebp*2-0x572bd9cb],esi
  414870:	or     al,0xd8
  414872:	push   ss
  414873:	(bad)  
  414874:	sbb    edx,DWORD PTR [edi+0x2d28a3e4]
  41487a:	inc    ebp
  41487b:	test   al,0x4e
  41487d:	or     dh,BYTE PTR ds:0xbcd0bf82
  414883:	jle    0x41488f
  414885:	mov    edi,0x2c1dd959
  41488a:	mov    ah,0x2d
  41488c:	cmp    BYTE PTR [ebx],al
  41488e:	sub    DWORD PTR fs:[edi],esp
  414891:	sbb    DWORD PTR [ecx+edi*4],esp
  414894:	lds    ebx,FWORD PTR [ebx]
  414896:	iret   
  414897:	fwait
  414898:	test   bl,bl
  41489a:	xchg   ecx,eax
  41489b:	ja     0x414842
  41489d:	inc    ebx
  41489e:	xchg   esp,eax
  41489f:	push   ss
  4148a0:	psllw  mm2,QWORD PTR [eax-0x48]
  4148a4:	xor    ebx,DWORD PTR [esi]
  4148a6:	xchg   ecx,eax
  4148a7:	fld    DWORD PTR [ecx]
  4148a9:	push   cs
  4148aa:	pop    ecx
  4148ab:	ja     0x414852
  4148ad:	mov    WORD PTR [eax],ss
  4148af:	add    DWORD PTR [edx+0x2653cddd],eax
  4148b5:	stc    
  4148b6:	inc    edx
  4148b7:	sub    al,0xeb
  4148b9:	into   
  4148ba:	dec    ebx
  4148bb:	mov    ds:0x8a52adc8,eax
  4148c0:	imul   eax,edx,0x6c1362
  4148c6:	std    
  4148c7:	inc    ecx
  4148c8:	jge    0x414871
  4148ca:	jg     0x414914
  4148cc:	xchg   ecx,eax
  4148cd:	cmp    al,0x98
  4148cf:	fisub  WORD PTR [edx-0x4d21b71b]
  4148d5:	adc    ch,bh
  4148d7:	sub    ecx,DWORD PTR [ebx+0x4f]
  4148da:	or     eax,0x49a21acf
  4148df:	dec    ecx
  4148e0:	sbb    DWORD PTR [ecx-0x33c23434],ebp
  4148e6:	adc    esi,DWORD PTR [edx+ebx*4+0x5852ee12]
  4148ed:	xchg   eax,ecx
  4148ef:	pop    es
  4148f0:	jmp    FWORD PTR [ecx+0x6a73fbc]
  4148f6:	mov    edi,0x7a7bfc7a
  4148fb:	mov    bh,0xbb
  4148fd:	aaa    
  4148fe:	pop    ecx
  4148ff:	and    edi,esp
  414901:	repnz (bad) 
  414903:	ja     0x41491e
  414905:	in     eax,dx
  414906:	(bad)  
  414907:	xchg   ecx,eax
  414908:	and    al,BYTE PTR [edi-0x3e37155]
  41490e:	div    DWORD PTR [edx+ebp*1-0x37]
  414912:	pusha  
  414913:	dec    esp
  414914:	jne    0x4148e4
  414916:	dec    ebp
  414917:	or     al,0x1f
  414919:	sub    ebx,eax
  41491b:	aas    
  41491c:	cld    
  41491d:	or     dl,BYTE PTR [eax+0x2ab49658]
  414923:	xchg   DWORD PTR [edi+0x2f],edi
  414926:	out    dx,al
  414927:	idiv   BYTE PTR [edx-0x60]
  41492a:	test   DWORD PTR ss:[edi+0x65],edx
  41492e:	pusha  
  41492f:	sahf   
  414930:	jle    0x4149a7
  414932:	sub    eax,0x854f5e92
  414937:	push   ds
  414938:	loope  0x41495f
  41493a:	aam    0x57
  41493c:	js     0x414985
  41493e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41493f:	add    ecx,DWORD PTR [edx-0x4166dab6]
  414945:	aad    0xdc
  414947:	sbb    DWORD PTR ss:[edx-0x7f],0x3
  41494c:	in     al,dx
  41494d:	fcomp  DWORD PTR [ecx]
  41494f:	aad    0x35
  414951:	xor    DWORD PTR [edi],0x80c53dd
  414957:	jnp    0x414904
  414959:	cmc    
  41495a:	sbb    ecx,DWORD PTR [esi]
  41495c:	test   al,0x6e
  41495e:	xchg   edx,eax
  41495f:	mov    edx,?
  414961:	xor    al,cl
  414963:	jae    0x414934
  414965:	mov    esp,DWORD PTR [edi]
  414967:	mov    dh,0x1c
  414969:	loope  0x414923
  41496b:	pop    ebx
  41496c:	inc    esi
  41496d:	icebp  
  41496e:	pop    edx
  41496f:	clc    
  414970:	sbb    al,BYTE PTR [ecx-0x7]
  414973:	ret    0x4e82
  414976:	rcl    DWORD PTR [ebp-0x49ba8c67],0xcb
  41497d:	jne    0x41492f
  41497f:	xor    BYTE PTR [ecx],0xa3
  414982:	xlat   BYTE PTR ds:[ebx]
  414983:	out    0x4,al
  414985:	minps  xmm0,XMMWORD PTR [ebx-0x7fa6216]
  41498c:	add    BYTE PTR [esi-0xa],0xe1
  414990:	cld    
  414991:	dec    ebx
  414992:	call   0x65c3d009
  414997:	int3   
  414998:	mov    ebx,0xcfa14779
  41499d:	or     DWORD PTR [edx-0x48],ebp
  4149a0:	dec    edx
  4149a1:	xchg   ecx,eax
  4149a2:	xchg   esi,eax
  4149a3:	sub    BYTE PTR [edi-0x77],ah
  4149a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149a7:	imul   esp,DWORD PTR [ebp+0x7aba4be],0xffffff84
  4149ae:	xchg   ebp,eax
  4149af:	push   cs
  4149b0:	ror    DWORD PTR [ecx],0x1f
  4149b3:	pushf  
  4149b4:	xchg   ebx,eax
  4149b5:	mov    cl,0x85
  4149b7:	popf   
  4149b8:	shl    DWORD PTR [ecx+0x32],cl
  4149bb:	addr16 into 
  4149bd:	repz dec ecx
  4149bf:	push   0x3
  4149c1:	and    DWORD PTR [ebx+0x63],0x4bc823db
  4149c8:	adc    eax,0xff42f3f8
  4149cd:	push   esi
  4149ce:	sub    eax,DWORD PTR [ecx-0x62502163]
  4149d4:	int3   
  4149d5:	cmp    al,0xbb
  4149d7:	xchg   ecx,eax
  4149d8:	pop    edi
  4149d9:	ss int 0x93
  4149dc:	nop
  4149dd:	pop    eax
  4149de:	arpl   WORD PTR [esp+ecx*4],ax
  4149e1:	add    BYTE PTR cs:[esi+eiz*8],dl
  4149e5:	loope  0x4149ce
  4149e7:	std    
  4149e8:	pop    ss
  4149e9:	lock popa 
  4149eb:	push   cs
  4149ec:	adc    DWORD PTR [ebp-0x4c6eb437],edx
  4149f2:	ror    ebp,0xa5
  4149f5:	push   0xffffffa4
  4149f7:	xor    al,0xd2
  4149f9:	mov    cl,0xac
  4149fb:	cmp    eax,0x8b90e8ec
  414a00:	xor    dh,dh
  414a02:	shl    BYTE PTR [eax+0x13],cl
  414a05:	inc    edi
  414a06:	sub    al,dh
  414a08:	dec    ecx
  414a09:	bnd jnp 0x414a48
  414a0c:	scas   al,BYTE PTR es:[edi]
  414a0d:	cmp    al,bh
  414a0f:	push   ss
  414a10:	mov    esi,0x62138261
  414a15:	and    BYTE PTR [esi+eiz*4],dl
  414a18:	inc    edi
  414a19:	std    
  414a1a:	pop    ebp
  414a1b:	or     BYTE PTR ds:0x4a7489ae,al
  414a21:	leave  
  414a22:	ret    
  414a23:	push   0xffffff83
  414a25:	scas   eax,DWORD PTR es:[edi]
  414a26:	popf   
  414a27:	imul   edi,DWORD PTR [eax+0x59],0xffffffb0
  414a2b:	std    
  414a2c:	test   al,0x57
  414a2e:	push   0x5
  414a30:	dec    ebx
  414a31:	ficom  DWORD PTR [ebp+edx*8+0x2d]
  414a35:	mov    eax,0xc50085fe
  414a3a:	add    al,0x4a
  414a3c:	cs out 0xf5,al
  414a3f:	in     eax,dx
  414a40:	xchg   ebx,eax
  414a41:	sub    eax,0xa66f7885
  414a46:	dec    ebx
  414a47:	add    al,0x9a
  414a49:	pop    edi
  414a4a:	cmp    BYTE PTR [edx+0x2],0x98
  414a4e:	jno    0x414a4c
  414a50:	bound  ebp,QWORD PTR [edx-0x3cc09053]
  414a56:	lods   al,BYTE PTR ds:[esi]
  414a57:	dec    eax
  414a58:	mov    esp,cs
  414a5a:	xlat   BYTE PTR ds:[ebx]
  414a5b:	or     ebp,0x31bfb6c3
  414a61:	jmp    0x7de60f4e
  414a66:	iret   
  414a67:	cmp    ecx,ebp
  414a69:	lock adc al,0xda
  414a6c:	int    0x0
  414a6e:	adc    eax,0xb7ae7fb9
  414a73:	test   BYTE PTR [ebx+edx*8-0x66e3334e],bl
  414a7a:	call   0xc73e8eb5
  414a7f:	adc    ah,BYTE PTR [edx+0x4]
  414a82:	pop    ebp
  414a83:	out    dx,eax
  414a84:	clc    
  414a85:	ror    BYTE PTR [ecx+0x4d8bb44d],0x8
  414a8c:	mov    edx,0xfdbe0321
  414a91:	sub    edx,ecx
  414a93:	add    edx,DWORD PTR [ebp-0x48]
  414a96:	mov    DWORD PTR [ebp-0x48],edx
  414a99:	mov    ecx,DWORD PTR [ebp+0x8]
  414a9c:	mov    edx,DWORD PTR [ebp-0x44]
  414a9f:	add    ecx,edi
  414aa1:	xor    ecx,edx
  414aa3:	mov    DWORD PTR [ebp-0x44],ecx
  414aa6:	mov    ecx,DWORD PTR [ebp+0x8]
  414aa9:	xor    ecx,eax
  414aab:	add    ecx,esi
  414aad:	jne    0x4126b9
  414ab3:	mov    ecx,DWORD PTR [ebp-0x8]
  414ab6:	xor    ecx,eax
  414ab8:	mov    eax,DWORD PTR [ebp+0x10]
  414abb:	add    ecx,esi
  414abd:	mov    DWORD PTR [eax],ecx
  414abf:	pop    edi
  414ac0:	pop    esi
  414ac1:	pop    ebx
  414ac2:	leave  
  414ac3:	ret    0xc
  414ac6:	push   ebp
  414ac7:	mov    ebp,esp
  414ac9:	sub    esp,0x78
  414acc:	mov    eax,ds:0x42a0a9
  414ad1:	xor    ecx,ecx
  414ad3:	xor    ecx,DWORD PTR ds:0x42a0ad
  414ad9:	sub    eax,ecx
  414adb:	add    eax,DWORD PTR [eax+ecx*1]
  414ade:	push   esi
  414adf:	adc    DWORD PTR ds:0x428e29,ecx
  414ae5:	push   edi
  414ae6:	and    edi,0x4523
  414aec:	mov    eax,ds:0x428365
  414af1:	mov    DWORD PTR [ebp-0x24],eax
  414af4:	add    esi,DWORD PTR ds:0x428ed1
  414afa:	mov    eax,ds:0x428485
  414aff:	add    DWORD PTR ds:0x428e45,0x631e
  414b09:	mov    DWORD PTR [ebp-0x30],eax
  414b0c:	sub    esi,esi
  414b0e:	mov    DWORD PTR [ebp-0x2c],0xf89c85b9
  414b15:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  414b1c:	xor    eax,ecx
  414b1e:	mov    eax,DWORD PTR [ebp-0x10]
  414b21:	or     DWORD PTR ds:0x428e35,0x297e
  414b2b:	mov    ecx,DWORD PTR [ebp-0x10]
  414b2e:	sub    eax,ecx
  414b30:	mov    DWORD PTR ds:0x428ea1,0x15
  414b3a:	cmp    DWORD PTR ds:0x428ea1,0x0
  414b41:	je     0x414b99
  414b47:	cmp    DWORD PTR ds:0x428ea1,0x5
  414b4e:	jb     0x414b99
  414b54:	jmp    0x414b6b
  414b59:	push   0x4280ea
  414b5e:	push   0x1
  414b60:	push   0x6e8b
  414b65:	call   DWORD PTR ds:0x42ca60
  414b6b:	cmp    DWORD PTR ds:0x428ea1,0x6
  414b72:	jne    0x414b87
  414b78:	xor    edi,edi
  414b7a:	or     edi,DWORD PTR ds:0x428ea1
  414b80:	dec    edi
  414b81:	mov    DWORD PTR ds:0x428ea1,edi
  414b87:	mov    edi,DWORD PTR ds:0x428ea1
  414b8d:	dec    edi
  414b8e:	mov    DWORD PTR ds:0x428ea1,edi
  414b94:	jmp    0x414b3a
  414b99:	mov    DWORD PTR [ebp-0x10],eax
  414b9c:	sub    DWORD PTR ds:0x428e75,0x4181
  414ba6:	xor    DWORD PTR [ebp-0x10],0xf89cb5b9
  414bad:	mov    eax,DWORD PTR [ebp-0x18]
  414bb0:	neg    edi
  414bb2:	mov    ecx,DWORD PTR [ebp-0x18]
  414bb5:	sub    eax,ecx
  414bb7:	mov    DWORD PTR [ebp-0x18],eax
  414bba:	or     DWORD PTR [ebp-0x18],0xf89f05b9
  414bc1:	add    DWORD PTR ds:0x428e31,0x596
  414bcb:	mov    eax,DWORD PTR [ebp-0xc]
  414bce:	adc    DWORD PTR ds:0x428e25,ebx
  414bd4:	mov    ecx,DWORD PTR [ebp-0xc]
  414bd7:	add    DWORD PTR ds:0x428e69,ecx
  414bdd:	sub    eax,ecx
  414bdf:	add    edi,0x58c9
  414be5:	mov    DWORD PTR [ebp-0xc],eax
  414be8:	or     DWORD PTR [ebp-0xc],0xf89c85f9
  414bef:	adc    ecx,0x6a40
  414bf5:	mov    eax,DWORD PTR [ebp-0x1c]
  414bf8:	mov    ecx,DWORD PTR [ebp-0x1c]
  414bfb:	adc    DWORD PTR ds:0x428ea5,ecx
  414c01:	sub    eax,ecx
  414c03:	xor    DWORD PTR ds:0x428e8d,edi
  414c09:	mov    DWORD PTR [ebp-0x1c],eax
  414c0c:	or     DWORD PTR [ebp-0x1c],0xf89c8599
  414c13:	mov    eax,DWORD PTR [ebp-0x20]
  414c16:	neg    DWORD PTR ds:0x428ea9
  414c1c:	mov    ecx,DWORD PTR [ebp-0x20]
  414c1f:	sub    eax,ecx
  414c21:	xor    esi,esi
  414c23:	xor    esi,DWORD PTR ds:0x4292b5
  414c29:	xor    edi,edi
  414c2b:	xor    edi,DWORD PTR ds:0x429bb5
  414c31:	sub    esi,edi
  414c33:	or     esi,DWORD PTR [esi+edi*1]
  414c36:	mov    DWORD PTR [ebp-0x20],eax
  414c39:	or     eax,edi
  414c3b:	mov    eax,DWORD PTR [ebp-0x2c]
  414c3e:	and    DWORD PTR ds:0x428e25,0x0
  414c48:	jmp    0x414c5a
  414c4d:	mov    esi,DWORD PTR ds:0x428e25
  414c53:	inc    esi
  414c54:	mov    DWORD PTR ds:0x428e25,esi
  414c5a:	cmp    DWORD PTR ds:0x428e25,0x1e
  414c61:	jae    0x414c93
  414c67:	cmp    DWORD PTR ds:0x428e25,0x2c
  414c6e:	jb     0x414c93
  414c74:	jmp    0x414c8e
  414c79:	push   0x42819a
  414c7e:	push   0x0
  414c80:	push   DWORD PTR [ebp-0x14]
  414c83:	push   0x541c
  414c88:	call   DWORD PTR ds:0x42ca64
  414c8e:	jmp    0x414c4d
  414c93:	mov    ecx,DWORD PTR [ebp-0x20]
  414c96:	mov    esi,0x75108b1
  414c9b:	xor    eax,esi
  414c9d:	adc    DWORD PTR ds:0x428ec9,0x2d36
  414ca7:	mov    edi,0x3272f8
  414cac:	and    DWORD PTR ds:0x428e91,0x428e49
  414cb6:	add    eax,edi
  414cb8:	or     eax,ecx
  414cba:	or     DWORD PTR ds:0x428e2d,0x148
  414cc4:	mov    DWORD PTR [ebp-0x20],eax
  414cc7:	mov    DWORD PTR ds:0x428e99,0x13
  414cd1:	cmp    DWORD PTR ds:0x428e99,0x0
  414cd8:	je     0x414d27
  414cde:	cmp    DWORD PTR ds:0x428e99,0x8
  414ce5:	jle    0x414d27
  414ceb:	jmp    0x414cf9
  414cf0:	push   DWORD PTR [ebp-0x20]
  414cf3:	call   DWORD PTR ds:0x42ca38
  414cf9:	cmp    DWORD PTR ds:0x428e99,0x9
  414d00:	jne    0x414d15
  414d06:	xor    ecx,ecx
  414d08:	add    ecx,DWORD PTR ds:0x428e99
  414d0e:	dec    ecx
  414d0f:	mov    DWORD PTR ds:0x428e99,ecx
  414d15:	mov    ecx,DWORD PTR ds:0x428e99
  414d1b:	dec    ecx
  414d1c:	mov    DWORD PTR ds:0x428e99,ecx
  414d22:	jmp    0x414cd1
  414d27:	mov    eax,DWORD PTR [ebp-0x4]
  414d2a:	mov    ecx,DWORD PTR [ebp-0x4]
  414d2d:	sub    eax,ecx
  414d2f:	mov    DWORD PTR [ebp-0x4],eax
  414d32:	or     DWORD PTR [ebp-0x4],0xf89c85bc
  414d39:	mov    eax,DWORD PTR [ebp-0xc]
  414d3c:	xor    eax,esi
  414d3e:	add    eax,edi
  414d40:	push   eax
  414d41:	mov    eax,DWORD PTR [ebp-0x10]
  414d44:	xor    eax,esi
  414d46:	add    eax,edi
  414d48:	push   eax
  414d49:	mov    eax,DWORD PTR [ebp-0x4]
  414d4c:	xor    eax,esi
  414d4e:	add    eax,0x3272fc
  414d53:	push   eax
  414d54:	lea    eax,[ebp-0x78]
  414d57:	push   eax
  414d58:	push   DWORD PTR [ebp-0x2c]
  414d5b:	push   DWORD PTR [ebp-0x28]
  414d5e:	call   0x40f6a0
  414d63:	test   eax,eax
  414d65:	je     0x414d93
  414d6b:	lea    eax,[ebp-0x78]
  414d6e:	push   eax
  414d6f:	mov    eax,DWORD PTR [ebp-0x28]
  414d72:	xor    eax,esi
  414d74:	add    eax,edi
  414d76:	push   eax
  414d77:	mov    eax,DWORD PTR [ebp-0x24]
  414d7a:	add    eax,0xaa
  414d7f:	push   eax
  414d80:	mov    eax,DWORD PTR [ebp-0x24]
  414d83:	mov    eax,DWORD PTR [eax+0x198]
  414d89:	push   DWORD PTR [eax]
  414d8b:	call   0x40854d
  414d90:	mov    DWORD PTR [ebp-0x14],eax
  414d93:	mov    ecx,DWORD PTR ds:0x42845d
  414d99:	lea    eax,[ebp+0x4]
  414d9c:	mov    DWORD PTR [ecx*4+0x428455],eax
  414da3:	inc    DWORD PTR ds:0x42845d
  414da9:	mov    eax,DWORD PTR [ebp-0x14]
  414dac:	test   eax,eax
  414dae:	je     0x41717d
  414db4:	lea    eax,[ebp-0x8]
  414db7:	mov    DWORD PTR [ebp-0x34],eax
  414dba:	mov    eax,DWORD PTR [ebp-0x30]
  414dbd:	mov    DWORD PTR [ebp-0x8],eax
  414dc0:	mov    eax,DWORD PTR [ebp-0x8]
  414dc3:	mov    ecx,DWORD PTR [ebp-0x14]
  414dc6:	jmp    0x417123
  414dcb:	mov    cl,0x3d
  414dcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414dce:	aas    
  414dcf:	jns    0x414e38
  414dd1:	jns    0x414e40
  414dd3:	pop    edx
  414dd4:	popw   ds
  414dd6:	inc    ebp
  414dd7:	std    
  414dd8:	es cdq 
  414dda:	pop    esp
  414ddb:	push   0xffffff95
  414ddd:	jl     0x414e5a
  414ddf:	mov    ebx,0x4f7b7b9e
  414de4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414de5:	sbb    al,0x7e
  414de7:	jp     0x414d8d
  414de9:	dec    edi
  414dea:	mov    ds:0x2ea84b79,al
  414def:	in     eax,0x11
  414df1:	pop    ebx
  414df2:	dec    ebx
  414df3:	pop    edi
  414df4:	add    BYTE PTR [esi+0x70bd26a3],bl
  414dfa:	adc    BYTE PTR [edi],bh
  414dfc:	sbb    eax,0xd58e2d5d
  414e01:	push   edx
  414e02:	(bad)  
  414e04:	mov    cl,0x14
  414e06:	xchg   edx,esi
  414e08:	loop   0x414de4
  414e0a:	ins    BYTE PTR es:[edi],dx
  414e0b:	popa   
  414e0c:	or     al,0xe8
  414e0e:	aam    0xc6
  414e10:	inc    eax
  414e11:	push   es
  414e12:	jmp    0x7def7037
  414e17:	add    ch,BYTE PTR [ebx+0xf]
  414e1a:	int    0xd8
  414e1c:	pmaddwd mm2,QWORD PTR [edi]
  414e1f:	shl    DWORD PTR ds:0xc297f2a7,1
  414e25:	push   ebp
  414e26:	repz or DWORD PTR [eax+ecx*4+0x2f],0x1d
  414e2c:	imul   esp,DWORD PTR ds:[esp+ecx*1+0x26],0xfc5ee3aa
  414e35:	xchg   ebp,eax
  414e36:	xor    al,0xf7
  414e38:	fbld   TBYTE PTR [esp+eax*1+0xf]
  414e3c:	pop    ecx
  414e3d:	or     DWORD PTR [ecx-0x3d894ee9],esp
  414e43:	das    
  414e44:	and    al,0x14
  414e46:	imul   DWORD PTR [edx-0x54c92f79]
  414e4c:	inc    esi
  414e4d:	pop    esp
  414e4e:	cwde   
  414e4f:	into   
  414e50:	or     ecx,ecx
  414e52:	inc    edi
  414e53:	xchg   ebx,eax
  414e54:	je     0x414e26
  414e56:	je     0x414e40
  414e58:	xchg   ebx,eax
  414e59:	ss fwait
  414e5b:	dec    eax
  414e5c:	xchg   DWORD PTR [eax+ebp*4],esp
  414e5f:	clc    
  414e60:	push   ss
  414e61:	push   esi
  414e62:	lods   al,BYTE PTR ds:[esi]
  414e63:	outs   dx,DWORD PTR ds:[esi]
  414e64:	sub    BYTE PTR [esi-0x27b7c86d],ch
  414e6a:	aaa    
  414e6b:	loope  0x414e95
  414e6d:	aas    
  414e6e:	mov    ds:0xd229eae0,eax
  414e73:	ins    BYTE PTR es:[edi],dx
  414e74:	inc    ecx
  414e75:	out    dx,al
  414e76:	pushf  
  414e77:	retf   
  414e78:	xchg   DWORD PTR [edi],esp
  414e7a:	push   edi
  414e7b:	sbb    al,BYTE PTR [edi+0x71753c99]
  414e81:	popf   
  414e82:	and    BYTE PTR [ebx-0x5925ee90],0x4d
  414e89:	ins    DWORD PTR es:[edi],dx
  414e8a:	xor    DWORD PTR [ebx-0x28],edi
  414e8d:	or     al,0x35
  414e8f:	hlt    
  414e90:	call   0x9cfdd90b
  414e95:	and    ebp,DWORD PTR [eax]
  414e97:	(bad)  
  414e98:	enter  0x4c74,0x85
  414e9c:	sbb    eax,0x8a882408
  414ea1:	push   eax
  414ea2:	nop
  414ea3:	jle    0x414ec7
  414ea5:	pop    es
  414ea6:	shr    DWORD PTR [eax],0xfc
  414ea9:	sbb    bh,BYTE PTR [ebp+0x73]
  414eac:	div    ah
  414eae:	outs   dx,DWORD PTR ds:[esi]
  414eaf:	fdivp  st(7),st
  414eb1:	ins    BYTE PTR es:[edi],dx
  414eb2:	xor    ebx,DWORD PTR [ebp-0x40]
  414eb5:	fnstenv [esp+ebx*8]
  414eb8:	jg     0x414f2e
  414eba:	adc    al,0x74
  414ebc:	xchg   esi,eax
  414ebd:	stos   DWORD PTR es:[edi],eax
  414ebe:	mov    esi,0x7823cd2b
  414ec3:	cmp    BYTE PTR [edi],al
  414ec5:	cmovge edx,edx
  414ec8:	sub    al,0x40
  414eca:	jbe    0x414ee7
  414ecc:	push   ss
  414ecd:	jl     0x414e5d
  414ecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ed0:	aaa    
  414ed1:	jne    0x414ed1
  414ed3:	push   ecx
  414ed4:	push   es
  414ed5:	fcomp  QWORD PTR [esi]
  414ed7:	xchg   DWORD PTR [edx+0x2ebe7e5d],edx
  414edd:	xchg   esp,eax
  414ede:	inc    ecx
  414edf:	sti    
  414ee0:	jmp    0xb38b:0x588bdb95
  414ee7:	push   ss
  414ee8:	out    dx,al
  414ee9:	rcl    DWORD PTR [edi+0x209556d7],cl
  414eef:	or     edx,edi
  414ef1:	sbb    ch,0x88
  414ef4:	shr    DWORD PTR [edi-0x7866c9c4],cl
  414efa:	je     0x414f42
  414efc:	push   ebp
  414efd:	repz mov WORD PTR [eax+0x19],es
  414f01:	loopne 0x414eab
  414f03:	fnstcw WORD PTR [esi-0x3ae2b32f]
  414f09:	dec    ecx
  414f0a:	scas   eax,DWORD PTR es:[edi]
  414f0b:	aam    0x90
  414f0d:	add    DWORD PTR [edx+0x7642e229],eax
  414f13:	hlt    
  414f14:	mov    ebp,0x765e38d1
  414f19:	aaa    
  414f1a:	shl    dl,1
  414f1c:	pop    ebp
  414f1d:	inc    esp
  414f1e:	mov    eax,ds:0xfc3da9e7
  414f23:	dec    esp
  414f24:	(bad)  
  414f25:	imul   ebx,ecx,0xffffff8a
  414f28:	push   cs
  414f29:	cli    
  414f2a:	call   0xbbe7f3da
  414f2f:	or     al,BYTE PTR [edx]
  414f31:	xchg   ebp,ecx
  414f33:	mov    edi,0x55711176
  414f38:	rcr    eax,cl
  414f3a:	scas   eax,DWORD PTR es:[edi]
  414f3b:	pop    esi
  414f3c:	int    0x95
  414f3e:	pop    eax
  414f3f:	ins    BYTE PTR es:[edi],dx
  414f40:	dec    ebx
  414f41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f42:	mov    ebp,0xe7f80811
  414f47:	mov    al,0x23
  414f49:	or     DWORD PTR [esi+0x61],esi
  414f4c:	scas   eax,DWORD PTR es:[edi]
  414f4d:	shr    DWORD PTR [edx],0xeb
  414f50:	and    edi,DWORD PTR [eax+0x5]
  414f53:	push   edx
  414f54:	fs xchg esi,eax
  414f56:	push   ecx
  414f57:	fcomp  QWORD PTR [ecx+0x3eae49ed]
  414f5d:	sti    
  414f5e:	call   0x5258a521
  414f63:	shr    dl,1
  414f65:	sub    DWORD PTR [ecx+0x472c5dc3],eax
  414f6b:	dec    ebx
  414f6c:	dec    edi
  414f6d:	inc    ebp
  414f6e:	out    0x5a,al
  414f70:	neg    BYTE PTR [ebx]
  414f72:	fwait
  414f73:	xor    eax,DWORD PTR [ecx-0x482e9c17]
  414f79:	addr16 pop edi
  414f7b:	sub    edx,DWORD PTR [ebp+0x59c37f66]
  414f81:	xor    ah,BYTE PTR [eax]
  414f83:	mov    bl,0x1f
  414f85:	mov    ecx,0xdcb5eb54
  414f8a:	je     0x414f2e
  414f8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f8d:	pop    ecx
  414f8e:	into   
  414f8f:	or     edx,DWORD PTR [ebp+0x66]
  414f92:	retf   0x4166
  414f95:	dec    esp
  414f96:	das    
  414f97:	out    0x13,al
  414f99:	les    esp,FWORD PTR [edi+0x10]
  414f9c:	mov    esi,0x94515a64
  414fa1:	sub    al,0xf9
  414fa3:	sbb    al,0x4f
  414fa5:	adc    edx,DWORD PTR [ebx+0x3]
  414fa8:	leave  
  414fa9:	es (bad) 
  414fac:	sub    edi,DWORD PTR [esi-0x5e]
  414faf:	mov    WORD PTR [ecx+edx*8],fs
  414fb2:	mov    edi,0x47861a69
  414fb7:	leave  
  414fb8:	mov    ds:0xc8b14e78,eax
  414fbd:	iret   
  414fbe:	mov    ch,0xf2
  414fc0:	xchg   esp,eax
  414fc1:	xor    al,0x50
  414fc3:	leave  
  414fc4:	cmp    edx,ecx
  414fc6:	gs jne 0x415048
  414fc9:	cmp    DWORD PTR [edx+esi*2-0x50f96dec],edx
  414fd0:	imul   esp,DWORD PTR [esp+edi*4],0xffffffe3
  414fd4:	lock pusha 
  414fd6:	pushf  
  414fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fd8:	sbb    eax,ebp
  414fda:	cli    
  414fdb:	sub    DWORD PTR [eax],eax
  414fdd:	outs   dx,DWORD PTR ds:[esi]
  414fde:	pop    edi
  414fdf:	or     cl,BYTE PTR [ebx+edx*4+0x55]
  414fe3:	icebp  
  414fe4:	aam    0x3b
  414fe6:	int3   
  414fe7:	jle    0x41501a
  414fe9:	pop    ebp
  414fea:	stc    
  414feb:	int3   
  414fec:	out    0x19,eax
  414fee:	xor    eax,0x266540dc
  414ff3:	pop    ecx
  414ff4:	enter  0x9703,0x4b
  414ff8:	retf   0x31a4
  414ffb:	out    0x7b,eax
  414ffd:	gs aas 
  414fff:	pop    esi
  415000:	fnsave [esi-0x698381ce]
  415006:	jns    0x41500f
  415008:	mov    edx,0x28302911
  41500d:	lods   eax,DWORD PTR ds:[esi]
  41500e:	jmp    0x9f64ed1
  415013:	xchg   ebp,eax
  415014:	int3   
  415015:	jae    0x415048
  415017:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415018:	bound  esi,QWORD PTR [edi]
  41501a:	sub    al,al
  41501c:	sbb    BYTE PTR [ecx+0x241a2a4b],0x6c
  415023:	mov    ebp,0x470b84
  415028:	xor    al,bl
  41502a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41502b:	nop
  41502c:	inc    edi
  41502d:	mov    ah,0xdd
  41502f:	dec    ebp
  415030:	push   edi
  415031:	mov    ebx,0xfd9fd43c
  415036:	call   0xac79:0x856a5bd
  41503d:	fst    QWORD PTR [edx-0x52e050a1]
  415043:	aad    0xa
  415045:	dec    esi
  415046:	mov    ch,0xb3
  415048:	lea    edi,[edx+0x2a]
  41504b:	sahf   
  41504c:	je     0x4150af
  41504e:	dec    esi
  41504f:	call   esi
  415051:	xor    esi,esi
  415053:	xchg   ebp,eax
  415054:	test   BYTE PTR [ecx+0x15e13bdc],bl
  41505a:	in     al,dx
  41505b:	fsub   QWORD PTR [ecx]
  41505d:	push   ds
  41505e:	pop    ebx
  41505f:	mov    esi,0x24b8b9f
  415064:	and    al,BYTE PTR [esi-0x4f419727]
  41506a:	mov    ?,esi
  41506c:	lds    ebx,FWORD PTR [esi+esi*8]
  41506f:	xlat   BYTE PTR ds:[ebx]
  415070:	repnz shl al,cl
  415073:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415074:	jecxz  0x4150e7
  415076:	dec    ebp
  415077:	ret    
  415078:	dec    edi
  415079:	(bad)  
  41507a:	into   
  41507b:	ja     0x415046
  41507d:	into   
  41507e:	ror    DWORD PTR [edi],0xac
  415081:	xor    eax,0xd5eec42c
  415086:	jns    0x415039
  415088:	or     ebx,ebp
  41508a:	ror    DWORD PTR [eax+0x6b3b5f06],cl
  415090:	cmc    
  415091:	pop    edi
  415092:	mov    WORD PTR [ebx],ds
  415094:	fcom   DWORD PTR [eax]
  415096:	mov    dl,0x39
  415098:	cmp    al,0x99
  41509a:	in     eax,dx
  41509b:	sbb    bh,bl
  41509d:	and    DWORD PTR [eax-0x732de6f5],ebp
  4150a3:	mov    ah,0x79
  4150a5:	lods   al,BYTE PTR ds:[esi]
  4150a6:	push   ebx
  4150a7:	jmp    0x81dc5de0
  4150ac:	dec    ebx
  4150ad:	cmp    eax,0xad92d08
  4150b2:	xchg   ebp,eax
  4150b3:	or     esp,ebp
  4150b5:	aas    
  4150b6:	popf   
  4150b7:	fistp  DWORD PTR [ecx-0x7b]
  4150ba:	clc    
  4150bb:	out    0x20,al
  4150bd:	out    dx,al
  4150be:	repnz adc al,0xb2
  4150c1:	push   esi
  4150c2:	inc    eax
  4150c3:	leave  
  4150c4:	loopne 0x41504c
  4150c6:	inc    eax
  4150c7:	ins    DWORD PTR es:[edi],dx
  4150c8:	lock or eax,0xcfe5a6d9
  4150ce:	push   es
  4150cf:	int3   
  4150d0:	inc    ebp
  4150d1:	in     eax,0x2d
  4150d3:	cmp    al,0xac
  4150d5:	sbb    DWORD PTR [ebx],ebx
  4150d7:	ss clc 
  4150d9:	rol    BYTE PTR [esp+eiz*2-0x62c7cad1],1
  4150e0:	les    eax,FWORD PTR ds:0xd7bd8a6e
  4150e6:	push   esp
  4150e7:	mov    edx,esi
  4150e9:	push   ss
  4150ea:	or     cl,0x2a
  4150ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150ee:	in     eax,0x8a
  4150f0:	xchg   DWORD PTR [edx+0x7b23b34b],edx
  4150f6:	xchg   BYTE PTR [eax+0x64d73dfc],dh
  4150fc:	stos   DWORD PTR es:[edi],eax
  4150fd:	aaa    
  4150fe:	stos   BYTE PTR es:[edi],al
  4150ff:	mov    dl,0x38
  415101:	push   0x8b376bc0
  415106:	sbb    al,0x80
  415108:	xchg   ebx,eax
  415109:	xchg   ebp,eax
  41510a:	repz push esp
  41510c:	jae    0x4150ae
  41510e:	mov    dh,0x2e
  415110:	jmp    0x789f:0x53b24cf5
  415117:	int    0xf3
  415119:	cs es xor bl,dh
  41511d:	dec    ecx
  41511e:	push   ecx
  41511f:	inc    esi
  415120:	add    al,0x5e
  415122:	data16 cs in al,dx
  415125:	sbb    bl,BYTE PTR [eax+edx*8+0xa]
  415129:	mov    ah,0x2e
  41512b:	mov    ch,0x90
  41512d:	test   eax,0x588b9ba8
  415132:	mov    ch,0x4
  415134:	xchg   esi,eax
  415135:	fadd   DWORD PTR [eax+0x73]
  415138:	ret    0xaaaf
  41513b:	pop    esi
  41513c:	mov    bl,0x3f
  41513e:	mov    ds:0xe54bd749,eax
  415143:	fdiv   st,st(1)
  415145:	shr    DWORD PTR [esi+0x302f5d14],1
  41514b:	icebp  
  41514c:	cli    
  41514d:	add    bl,BYTE PTR [edi+esi*8]
  415150:	es sbb al,0xba
  415153:	xchg   ebx,eax
  415154:	push   ebx
  415155:	cli    
  415156:	ret    
  415157:	fsubp  st(7),st
  415159:	pop    edi
  41515a:	dec    eax
  41515b:	fdiv   DWORD PTR [ebx+0x5ca8d472]
  415161:	cmp    esi,DWORD PTR [ecx-0x14]
  415164:	sub    eax,0xcf95ca92
  415169:	sub    edi,DWORD PTR [edi-0x180a2865]
  41516f:	sub    al,0xd
  415171:	gs js  0x41517e
  415174:	sub    cl,ch
  415176:	cmp    edi,DWORD PTR [edx]
  415178:	out    dx,eax
  415179:	es adc al,0xb0
  41517c:	xchg   ecx,eax
  41517d:	cs ds sub eax,0xbbff3ac8
  415184:	and    BYTE PTR [edi-0x74b77f90],dl
  41518a:	mov    ebp,0xe4165a04
  41518f:	jle    0x4151d6
  415191:	cmp    al,0x57
  415193:	ret    
  415194:	call   0xeeb9:0xb90cf451
  41519b:	jp     0x4151d9
  41519d:	inc    esi
  41519e:	jmp    0xedb0:0xac5e8bdc
  4151a5:	and    BYTE PTR [ebx],al
  4151a7:	jmp    0x98ad:0xd91b7be5
  4151ae:	cmc    
  4151af:	retf   0x36a6
  4151b2:	jns    0x4151f0
  4151b4:	pop    eax
  4151b5:	mov    ecx,0x35b755e9
  4151ba:	(bad)  
  4151bb:	fsub   QWORD PTR [ebx+0xcbaf5d4]
  4151c1:	nop
  4151c2:	mov    ds:0xd0083e7c,al
  4151c7:	xor    al,0xba
  4151c9:	fisubr WORD PTR [esi]
  4151cb:	lds    esp,FWORD PTR [edi+0x19da4a84]
  4151d1:	adc    al,bh
  4151d3:	shl    DWORD PTR [esi+0x71e2e62f],1
  4151d9:	cwde   
  4151da:	div    DWORD PTR [edx]
  4151dc:	mov    ss,WORD PTR [ebx+0x550b70f9]
  4151e2:	loopne 0x41524f
  4151e4:	sub    eax,0xcdbd9c14
  4151e9:	out    dx,eax
  4151ea:	nop
  4151eb:	daa    
  4151ec:	sub    edx,edi
  4151ee:	xchg   esi,eax
  4151ef:	push   edx
  4151f0:	jns    0x415179
  4151f2:	mov    eax,0x20c52837
  4151f7:	add    al,0x6a
  4151f9:	sub    DWORD PTR [ebx-0x7e],0xffffffae
  4151fd:	and    ebx,DWORD PTR [edx-0x7e]
  415200:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415201:	mov    esp,?
  415203:	ss adc al,0x9a
  415206:	(bad)  
  415207:	mov    al,0xf1
  415209:	cld    
  41520a:	push   0x70
  41520c:	std    
  41520d:	in     al,dx
  41520e:	hlt    
  41520f:	adc    BYTE PTR [edi+ebx*2+0x44],al
  415213:	and    DWORD PTR [edi],edi
  415215:	push   ds
  415216:	out    0x37,al
  415218:	sbb    eax,0x8340b00b
  41521d:	push   edi
  41521e:	sub    DWORD PTR [eax+0x9c1df6c],ebp
  415224:	lahf   
  415225:	idiv   BYTE PTR ds:0xf12b21b3
  41522b:	mov    bl,0x4c
  41522d:	push   ds
  41522e:	out    0xd0,eax
  415230:	sub    eax,0x88023cd
  415235:	nop
  415236:	pop    esp
  415237:	cmp    BYTE PTR [edx+0x7c],bh
  41523a:	pop    ebp
  41523b:	xchg   ebx,eax
  41523c:	dec    esp
  41523d:	cmp    ebp,ebp
  41523f:	push   ds
  415240:	bound  ecx,QWORD PTR [ebx]
  415242:	outs   dx,DWORD PTR ds:[esi]
  415243:	shr    dh,cl
  415245:	test   BYTE PTR [esi],ah
  415247:	jge    0x4151f1
  415249:	sub    al,0x1c
  41524b:	jae    0x4152ca
  41524d:	ins    DWORD PTR es:[edi],dx
  41524e:	(bad)  
  41524f:	icebp  
  415250:	cmp    ebp,esp
  415252:	arpl   WORD PTR [eax-0x207223cf],bx
  415258:	loop   0x41522c
  41525a:	mov    ah,0xdd
  41525c:	xchg   DWORD PTR [ecx+0x42],ebp
  41525f:	and    dh,BYTE PTR [eax-0x4a10b2c]
  415265:	ret    0xa78c
  415268:	mov    bh,0x15
  41526a:	pop    es
  41526b:	(bad)  
  41526c:	loopne 0x4151f3
  41526e:	outs   dx,BYTE PTR ds:[esi]
  41526f:	or     DWORD PTR [ebx-0x61480aff],ecx
  415275:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415276:	ds jl  0x415257
  415279:	pop    ebx
  41527a:	or     al,0xe0
  41527c:	inc    edx
  41527d:	aas    
  41527e:	dec    edx
  41527f:	cmp    eax,0xea0c71c3
  415284:	push   eax
  415285:	jno    0x4152cb
  415287:	int3   
  415288:	call   0xb67caae0
  41528d:	mov    esp,esp
  41528f:	push   ebp
  415290:	and    al,0x43
  415292:	sbb    ch,dh
  415294:	mov    eax,0x41de1ec0
  415299:	daa    
  41529a:	pop    edx
  41529b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41529c:	sub    bh,BYTE PTR [ebp+edi*2-0x68]
  4152a0:	ds add al,0xe1
  4152a3:	cmp    DWORD PTR [ecx-0x3bb642b],edi
  4152a9:	clc    
  4152aa:	mov    esi,0x121e916e
  4152af:	ficomp DWORD PTR [edx]
  4152b1:	cmp    ch,al
  4152b3:	sbb    al,0x79
  4152b5:	int3   
  4152b6:	aas    
  4152b7:	push   0x39
  4152b9:	mov    dh,0xdb
  4152bb:	push   es
  4152bc:	pop    eax
  4152bd:	inc    esp
  4152be:	pop    ebp
  4152bf:	(bad)  
  4152c0:	cs lock push 0xdbde5e7
  4152c7:	in     eax,0x74
  4152c9:	mov    eax,0x130439bf
  4152ce:	pop    esp
  4152cf:	test   DWORD PTR [ebp+0x17],eax
  4152d2:	loope  0x415296
  4152d4:	repz mov dl,0x1
  4152d7:	cld    
  4152d8:	xchg   ecx,eax
  4152d9:	inc    esp
  4152da:	add    DWORD PTR [ebx+0x1e633b7d],ebx
  4152e0:	push   esi
  4152e1:	push   edx
  4152e2:	dec    ebx
  4152e3:	aaa    
  4152e4:	push   es
  4152e5:	test   eax,0xb4ed133a
  4152ea:	pop    ecx
  4152eb:	jns    0x415292
  4152ed:	mov    dl,0x43
  4152ef:	xlat   BYTE PTR ds:[ebx]
  4152f0:	add    BYTE PTR ds:0x62e93fc7,ah
  4152f6:	call   0x1eda9bc3
  4152fb:	sbb    DWORD PTR [esi+eax*4+0x52],eax
  4152ff:	dec    eax
  415300:	mov    edx,0x6f06f504
  415305:	jne    0x415324
  415307:	xchg   esi,eax
  415308:	sti    
  415309:	and    edx,DWORD PTR [edx-0x636ce7ca]
  41530f:	mov    DWORD PTR [eax-0x65],eax
  415312:	lahf   
  415313:	push   cs
  415314:	xor    al,0x8b
  415317:	cs ja  0x4152e7
  41531a:	sahf   
  41531b:	sbb    al,0x28
  41531d:	push   0x29
  41531f:	sub    eax,0xc304c34c
  415324:	mov    edi,0xc4ddcc8e
  415329:	or     bh,dh
  41532b:	mov    eax,ds:0xacf9a071
  415330:	adc    eax,0x979947f1
  415335:	gs mov ebp,0x652cc1ac
  41533b:	dec    esi
  41533c:	xchg   ch,al
  41533e:	(bad)  
  41533f:	push   edx
  415340:	(bad)  
  415342:	or     BYTE PTR [edi],cl
  415344:	js     0x4152e6
  415346:	jns    0x4152e6
  415348:	pusha  
  415349:	popf   
  41534a:	(bad)  
  41534b:	(bad)  
  41534d:	push   ecx
  41534e:	lahf   
  41534f:	inc    ebx
  415350:	inc    edi
  415351:	loope  0x415340
  415353:	add    eax,0x1953cafd
  415358:	push   cs
  415359:	cli    
  41535a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41535b:	stos   BYTE PTR es:[edi],al
  41535c:	mov    eax,0xae1244b4
  415361:	nop
  415362:	nop
  415363:	mov    ch,0x60
  415365:	inc    esi
  415366:	js     0x41538b
  415368:	mov    bl,0x87
  41536a:	shr    BYTE PTR [edi+0x570df77c],1
  415370:	and    eax,0xd61ec75e
  415375:	mov    edx,0x9bb7857c
  41537a:	fidiv  DWORD PTR [ecx-0x64]
  41537d:	cmp    eax,0x31859569
  415382:	dec    esp
  415383:	add    bh,al
  415385:	mov    edi,0x19a8d618
  41538a:	pop    ss
  41538b:	idiv   BYTE PTR [ebp+0x1d89fc09]
  415391:	lea    edx,[eax+0x721d924c]
  415397:	gs lahf 
  415399:	(bad)
  41539d:	iret   
  41539e:	mov    dl,0x55
  4153a0:	push   ecx
  4153a1:	mov    al,ds:0xd3dc0318
  4153a6:	sbb    edx,DWORD PTR [esi-0x309c53c9]
  4153ac:	dec    edx
  4153ad:	repz xchg ebp,eax
  4153af:	stos   BYTE PTR es:[edi],al
  4153b0:	je     0x4153ef
  4153b2:	mov    cl,0xcd
  4153b4:	cli    
  4153b5:	lock sub ebp,edi
  4153b8:	cwde   
  4153b9:	pop    ebp
  4153ba:	ret    
  4153bb:	repz and ebp,ecx
  4153be:	add    BYTE PTR [ebx-0x681c4f33],bh
  4153c4:	ins    BYTE PTR es:[edi],dx
  4153c5:	(bad)  [ebp-0x6d686938]
  4153cb:	(bad)  
  4153cc:	xor    eax,0xabde2a8c
  4153d1:	iret   
  4153d2:	test   eax,0x627571ec
  4153d7:	test   eax,0x7ba7ae40
  4153dc:	stos   BYTE PTR es:[edi],al
  4153dd:	sar    DWORD PTR [edx+eiz*1],cl
  4153e0:	mov    edi,0xb03dc121
  4153e5:	mov    edx,0x67348fd2
  4153ea:	js     0x4153dd
  4153ec:	xchg   esi,eax
  4153ed:	cs inc ebx
  4153ef:	xchg   ecx,eax
  4153f0:	lods   eax,DWORD PTR ds:[esi]
  4153f1:	(bad)
  4153f5:	fistp  DWORD PTR [edx]
  4153f7:	pop    eax
  4153f8:	xchg   di,ax
  4153fa:	das    
  4153fb:	loop   0x4153da
  4153fd:	and    ebx,DWORD PTR [edi-0x14]
  415400:	cdq    
  415401:	scas   al,BYTE PTR es:[edi]
  415402:	mov    eax,ds:0xe130e36b
  415407:	jae    0x4153f4
  415409:	fmul   st,st(1)
  41540b:	scas   eax,DWORD PTR es:[edi]
  41540c:	mov    ss,edi
  41540e:	pop    esi
  41540f:	sti    
  415410:	fst    QWORD PTR [ebp-0x69]
  415413:	cmp    al,0x35
  415415:	stos   DWORD PTR es:[edi],eax
  415416:	sar    BYTE PTR [ebx],cl
  415418:	adc    edx,edx
  41541a:	add    dh,ah
  41541c:	sbb    DWORD PTR [eax+ebp*8-0x5],esp
  415420:	jl     0x415452
  415422:	sbb    BYTE PTR ds:[esi],ch
  415425:	(bad)  
  415427:	dec    ecx
  415428:	add    DWORD PTR [edi+0x2ed7882f],ebp
  41542e:	mov    esi,0x351a80b1
  415433:	enter  0xa520,0xe3
  415437:	jmp    0xba52:0xb05f675d
  41543e:	fidivr WORD PTR [ecx-0x2d095a3c]
  415444:	cmp    ah,cl
  415446:	push   0xf1513959
  41544b:	cmp    DWORD PTR [esi+0x4f],ecx
  41544e:	test   al,0x75
  415450:	add    edi,DWORD PTR [ecx+0x60b45700]
  415456:	mov    ss,WORD PTR [ebx]
  415458:	push   0xac80bca1
  41545d:	in     eax,0xfd
  41545f:	push   es
  415460:	out    dx,eax
  415461:	cwde   
  415462:	inc    ebp
  415463:	mul    DWORD PTR [edx]
  415465:	js     0x415402
  415467:	rol    BYTE PTR [ebp-0x35],1
  41546a:	and    ah,BYTE PTR [ecx-0x29]
  41546d:	adc    al,0x88
  41546f:	stos   BYTE PTR es:[edi],al
  415470:	and    eax,0x9e0ca9bf
  415475:	mov    dh,0x21
  415477:	mov    bh,dh
  415479:	test   al,0xc3
  41547b:	cmc    
  41547c:	jne    0x4154ee
  41547e:	sbb    edx,edx
  415480:	fwait
  415481:	lds    esp,FWORD PTR gs:[ebx-0x15e405eb]
  415488:	cmp    BYTE PTR [edi-0x58afbfa6],ch
  41548e:	xchg   ebx,eax
  41548f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415490:	inc    edi
  415491:	mov    cl,0x19
  415493:	cmp    BYTE PTR [ebx-0x200bf8ca],dh
  415499:	lods   al,BYTE PTR ds:[esi]
  41549a:	pop    es
  41549b:	popf   
  41549c:	mov    edx,0xc3fa28e0
  4154a1:	dec    ebx
  4154a2:	enter  0x5df0,0xf9
  4154a6:	mov    dl,0x4f
  4154a8:	mov    cl,0x2b
  4154aa:	lods   eax,DWORD PTR ds:[esi]
  4154ab:	inc    ebp
  4154ac:	adc    edx,edi
  4154ae:	repz pop ecx
  4154b0:	inc    ebx
  4154b1:	mul    BYTE PTR [edi]
  4154b3:	sub    al,0x3a
  4154b5:	lgs    ebx,FWORD PTR [ebp+ebp*8-0x25de2ae6]
  4154bd:	jne    0x415456
  4154bf:	jle    0x4154c7
  4154c1:	arpl   WORD PTR [ebx],ax
  4154c3:	jle    0x415483
  4154c5:	sbb    dh,BYTE PTR [edi-0x8]
  4154c8:	push   esi
  4154c9:	daa    
  4154ca:	sbb    ebx,ecx
  4154cc:	inc    eax
  4154cd:	ret    0x7027
  4154d0:	bound  esp,QWORD PTR [ebp-0x48f24b28]
  4154d6:	mov    eax,ds:0x155d39cd
  4154db:	in     eax,0x0
  4154dd:	loopne 0x4154f0
  4154df:	cmp    dh,BYTE PTR [edx]
  4154e1:	mov    cl,0xf7
  4154e3:	stos   BYTE PTR es:[edi],al
  4154e4:	hlt    
  4154e5:	shl    DWORD PTR [ebx],1
  4154e7:	jb     0x4154cb
  4154e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154ea:	mov    eax,0xbeef0ec0
  4154ef:	inc    ebp
  4154f0:	push   eax
  4154f1:	mov    edi,DWORD PTR [ebx]
  4154f3:	pop    ds
  4154f4:	cmp    DWORD PTR [edx+0x4c2934ea],esp
  4154fa:	lds    ecx,FWORD PTR [ecx+0x290b865c]
  415500:	or     bl,dl
  415502:	and    DWORD PTR [edx],ecx
  415504:	inc    edi
  415505:	in     al,dx
  415506:	fwait
  415507:	ds jmp 0xc995:0x565e4df2
  41550f:	lods   eax,DWORD PTR ds:[esi]
  415510:	test   eax,0x3108921a
  415515:	or     BYTE PTR gs:[ebx],ch
  415518:	sbb    cl,bl
  41551a:	retf   0x8f41
  41551d:	or     eax,0x630306f2
  415522:	inc    ebx
  415523:	mov    eax,0x4e27dd5a
  415528:	push   0x15eb5bb7
  41552d:	int3   
  41552e:	inc    ebx
  41552f:	dec    esp
  415530:	mov    ebp,0x817e46c1
  415535:	push   ds
  415536:	dec    esp
  415537:	cli    
  415538:	les    edx,FWORD PTR ds:0xc738608b
  41553e:	retf   0x92a7
  415541:	(bad)  
  415543:	dec    esp
  415544:	cmp    DWORD PTR [ebx-0x1a],esi
  415547:	jns    0x4154d7
  415549:	xchg   edi,eax
  41554a:	push   eax
  41554b:	es retf 0x94e0
  41554f:	je     0x4155a0
  415551:	mul    DWORD PTR [eax+0x711d864a]
  415557:	aad    0x7b
  415559:	mov    ebp,0xe1d0d462
  41555e:	cmp    al,bl
  415560:	jns    0x4155de
  415562:	cli    
  415563:	icebp  
  415564:	adc    al,0xb5
  415566:	cs jl  0x41555a
  415569:	add    dh,BYTE PTR [ebx-0x29dcdae9]
  41556f:	les    esp,FWORD PTR [ecx+0x2d999e77]
  415575:	push   eax
  415576:	loop   0x4154fa
  415578:	(bad)  
  41557a:	les    edx,FWORD PTR [eax+ebx*4]
  41557d:	je     0x415532
  41557f:	in     eax,0xa1
  415581:	or     al,0x6d
  415583:	into   
  415584:	dec    edx
  415585:	mov    ch,0xb3
  415587:	jmp    0x50c839fa
  41558c:	aas    
  41558d:	pusha  
  41558e:	push   eax
  41558f:	daa    
  415590:	jns    0x4155ff
  415592:	rcr    DWORD PTR [ecx+0x4ef6f06d],1
  415598:	sub    eax,0x1c009480
  41559d:	fistp  WORD PTR [edi+0x435790b7]
  4155a3:	out    dx,al
  4155a4:	fld    DWORD PTR [edi-0x8]
  4155a7:	jne    0x4155a6
  4155a9:	jno    0x4155b1
  4155ab:	aad    0x92
  4155ad:	test   DWORD PTR [eax-0x47],ecx
  4155b0:	sub    dl,BYTE PTR [eax]
  4155b2:	pop    ecx
  4155b3:	lods   eax,DWORD PTR ds:[esi]
  4155b4:	xor    eax,0xb5fe93ca
  4155b9:	push   0xfaf5720
  4155be:	cmp    al,0x7
  4155c0:	and    DWORD PTR [ecx-0x3acb18b5],ebx
  4155c6:	sub    DWORD PTR [edi],edi
  4155c8:	push   ss
  4155c9:	cmp    DWORD PTR [edx+0x5b],0xffffff99
  4155cd:	jmp    0x7b6a:0x227ffcfb
  4155d4:	sbb    bh,BYTE PTR [esi-0x18]
  4155d7:	or     BYTE PTR [ebx],bh
  4155d9:	inc    DWORD PTR [edx-0x49]
  4155dc:	test   al,0xcf
  4155de:	sub    BYTE PTR [ebp+0xe5322e4],0xda
  4155e5:	gs inc edx
  4155e7:	(bad)  
  4155e9:	ror    BYTE PTR [edi],cl
  4155eb:	pop    ds
  4155ec:	push   esp
  4155ed:	xchg   DWORD PTR [ebx-0x3169c9e2],ebx
  4155f3:	sbb    BYTE PTR [ecx],al
  4155f5:	cmp    al,0xe8
  4155f7:	lods   eax,DWORD PTR ds:[esi]
  4155f8:	jle    0x41557e
  4155fa:	ss fwait
  4155fc:	dec    eax
  4155fd:	inc    ebp
  4155fe:	and    eax,0xa7468ef4
  415603:	fwait
  415604:	add    esi,DWORD PTR [ecx+0x2a]
  415607:	ss push edx
  415609:	std    
  41560a:	mov    esp,0x39aa35da
  41560f:	and    BYTE PTR [ebx-0x4f781795],bl
  415615:	clc    
  415616:	jle    0x415667
  415618:	mov    ebx,0xeaf6840f
  41561d:	jl     0x4155f8
  41561f:	dec    ecx
  415620:	pop    edi
  415621:	test   DWORD PTR [edx-0x24],ebp
  415624:	loope  0x41562c
  415626:	outs   dx,DWORD PTR ds:[esi]
  415627:	(bad)  
  415628:	cs mov ecx,0x946e8c97
  41562e:	stos   DWORD PTR es:[edi],eax
  41562f:	inc    ecx
  415630:	in     eax,0x6f
  415632:	mov    al,ds:0xf271446a
  415637:	(bad)  
  415639:	xor    al,0x59
  41563b:	rcr    ch,cl
  41563d:	push   eax
  41563e:	cld    
  41563f:	xchg   edi,eax
  415640:	sahf   
  415641:	fcom   QWORD PTR [edx+0xc24b363]
  415647:	inc    esp
  415648:	push   es
  415649:	cdq    
  41564a:	add    BYTE PTR [ecx+eax*8-0x3f],0x78
  41564f:	call   0x74e0:0x4dc2ad1f
  415656:	jb     0x4156cd
  415658:	cmp    DWORD PTR [edx+ebx*8],0x25
  41565c:	ins    DWORD PTR es:[edi],dx
  41565d:	cwde   
  41565e:	cwde   
  41565f:	xchg   esi,eax
  415660:	push   edi
  415661:	pop    edi
  415662:	scas   al,BYTE PTR es:[edi]
  415663:	inc    esp
  415664:	std    
  415665:	xchg   ebx,eax
  415666:	div    BYTE PTR [edi+esi*4-0x3e43913e]
  41566d:	cmp    edi,DWORD PTR [ebp-0x74]
  415670:	pop    ebx
  415671:	in     eax,dx
  415672:	push   0xffffffcf
  415674:	shr    DWORD PTR [esi],1
  415676:	add    al,0x5e
  415678:	mov    eax,0xc64336b3
  41567d:	mov    dh,0x23
  41567f:	test   eax,0x1772b99a
  415684:	adc    ecx,DWORD PTR [ebx-0x31]
  415687:	pop    esi
  415688:	enter  0x3dd3,0xea
  41568c:	xchg   ebx,eax
  41568d:	sbb    BYTE PTR [esi+0x2e],ch
  415690:	mov    bl,0x35
  415692:	or     eax,0x4d843a0
  415697:	xor    bh,BYTE PTR [bx+si]
  41569a:	cmc    
  41569b:	loopne 0x41570f
  41569d:	std    
  41569e:	in     al,0x40
  4156a0:	jo     0x41564b
  4156a2:	inc    ecx
  4156a3:	or     bh,bh
  4156a5:	sbb    ch,BYTE PTR [edx+0x58a5d514]
  4156ab:	xlat   BYTE PTR cs:[ebx]
  4156ad:	dec    edi
  4156ae:	mov    dh,BYTE PTR [ebx]
  4156b0:	dec    esi
  4156b1:	loop   0x415669
  4156b3:	ret    
  4156b4:	xor    al,0xec
  4156b6:	ins    DWORD PTR es:[edi],dx
  4156b7:	mov    eax,0x2026102f
  4156bc:	sti    
  4156bd:	mul    BYTE PTR [ebp*1-0x19d42534]
  4156c4:	(bad)  
  4156c5:	inc    BYTE PTR [ebx-0x69ee589]
  4156cb:	repz imul esi,ecx,0x8
  4156cf:	sar    BYTE PTR [edi-0x2131990d],cl
  4156d5:	jg     0x415687
  4156d7:	clc    
  4156d8:	inc    ebx
  4156d9:	mov    ds:0x7c3c6838,al
  4156de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156df:	jnp    0x415727
  4156e1:	lahf   
  4156e2:	xchg   BYTE PTR [esi-0x28],dl
  4156e5:	cmp    al,0xeb
  4156e7:	pop    eax
  4156e8:	adc    al,bh
  4156ea:	jne    0x4156e9
  4156ec:	pop    ebx
  4156ed:	jmp    0x26cd:0xd394c636
  4156f4:	xchg   ecx,eax
  4156f5:	(bad)  
  4156f6:	test   eax,0xe2300bd6
  4156fb:	dec    eax
  4156fc:	daa    
  4156fd:	sahf   
  4156fe:	xor    DWORD PTR [ecx],eax
  415700:	aad    0x92
  415702:	lds    edi,FWORD PTR [edx-0x5fd9a268]
  415708:	pushf  
  415709:	or     edi,DWORD PTR [edx+0xc5e62dd]
  41570f:	ins    BYTE PTR es:[edi],dx
  415710:	xchg   edx,eax
  415711:	in     eax,0x4e
  415713:	mov    dl,0x32
  415715:	inc    edx
  415716:	mov    dh,0xa0
  415718:	mov    edx,0xf7b344ff
  41571d:	jl     0x415737
  41571f:	mov    ch,0xd6
  415721:	inc    ebp
  415722:	mov    ecx,ebx
  415724:	sbb    ah,BYTE PTR [edx+0x4e8262ba]
  41572a:	aam    0x18
  41572c:	pop    ebx
  41572d:	mov    dh,0xff
  41572f:	int    0x1d
  415731:	push   edi
  415732:	xchg   dh,cl
  415734:	sahf   
  415735:	mov    WORD PTR fs:[edx+0x26],cs
  415739:	test   BYTE PTR ds:[edi],0x40
  41573d:	clc    
  41573e:	iret   
  41573f:	mov    al,ds:0xc5cbf8ea
  415744:	and    DWORD PTR [eax],edx
  415746:	sbb    DWORD PTR [ebx+0x28],ecx
  415749:	and    al,BYTE PTR [eax-0xfc4e447]
  41574f:	sbb    esi,edx
  415751:	iret   
  415752:	pop    ebx
  415753:	daa    
  415754:	das    
  415755:	jno    0x415740
  415757:	push   edi
  415758:	mov    ?,WORD PTR [ecx+0x790a8049]
  41575e:	repnz rol ecx,0x3a
  415762:	xchg   ecx,eax
  415763:	call   0xc91d:0x2fdbb08d
  41576a:	xor    esi,DWORD PTR [eax-0x78c56ad2]
  415770:	xor    ebx,eax
  415772:	mov    cl,0x8b
  415774:	imul   edx,DWORD PTR [ecx-0x58],0x62
  415778:	scas   eax,DWORD PTR es:[edi]
  415779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41577a:	hlt    
  41577b:	xor    BYTE PTR [edx+0x78],bh
  41577e:	adc    eax,DWORD PTR [edx]
  415780:	xchg   ebp,eax
  415781:	jnp    0x41572f
  415783:	and    dl,BYTE PTR [esi-0x2d2b82ae]
  415789:	push   cs
  41578a:	xchg   BYTE PTR [esi+0xf],dh
  41578d:	fistp  QWORD PTR [esi+edi*8+0x4]
  415791:	in     al,dx
  415792:	push   ebx
  415793:	loopne 0x4157f1
  415795:	jmp    0x9af:0xbd879585
  41579c:	clc    
  41579d:	jmp    0xc939:0x92fb26fe
  4157a4:	xor    DWORD PTR [ebp+0x32],esi
  4157a7:	sub    BYTE PTR [edx-0x3bc1153e],0xb
  4157ae:	outs   dx,DWORD PTR ds:[esi]
  4157af:	mov    WORD PTR [edx-0x389c45f8],es
  4157b5:	icebp  
  4157b6:	ja     0x41580c
  4157b8:	test   DWORD PTR [ebx-0x3ea4968c],ebp
  4157be:	ds icebp 
  4157c0:	inc    esi
  4157c1:	adc    BYTE PTR [esp-0x4e],bl
  4157c5:	dec    ebx
  4157c6:	mov    dh,BYTE PTR [edx+0x59]
  4157c9:	(bad)  
  4157ca:	nop
  4157cb:	cmp    cl,ch
  4157cd:	sub    eax,0xf6690d51
  4157d2:	xchg   BYTE PTR [edi],dl
  4157d4:	ret    
  4157d5:	cli    
  4157d6:	pusha  
  4157d7:	retf   
  4157d8:	sbb    edx,esi
  4157da:	into   
  4157db:	fisubr DWORD PTR [edi]
  4157dd:	pop    esp
  4157de:	scas   eax,DWORD PTR es:[edi]
  4157df:	sysret 
  4157e1:	lock ret 0xbcfe
  4157e5:	mov    bh,ah
  4157e7:	dec    esp
  4157e8:	arpl   si,sp
  4157ea:	cmp    al,0x9b
  4157ec:	ins    DWORD PTR es:[edi],dx
  4157ed:	pushf  
  4157ee:	test   eax,0x99bf907b
  4157f3:	jno    0x415836
  4157f5:	cmp    eax,0xd5e7998c
  4157fa:	mov    ecx,0x7baed813
  4157ff:	jle    0x415813
  415801:	loope  0x41582f
  415803:	retf   0x3c3
  415806:	int3   
  415807:	push   esp
  415808:	dec    eax
  415809:	jl     0x415818
  41580b:	or     DWORD PTR [ebx],ebp
  41580d:	adc    dh,BYTE PTR [ecx-0x2e]
  415810:	gs push cs
  415812:	scas   eax,DWORD PTR es:[edi]
  415813:	inc    ecx
  415814:	js     0x415885
  415816:	cmp    ah,BYTE PTR [ecx+0x471f560]
  41581c:	retf   
  41581d:	dec    edi
  41581e:	mov    al,ds:0x4f215212
  415823:	xchg   ebx,eax
  415824:	and    eax,0x17356242
  415829:	or     al,0x62
  41582b:	aas    
  41582c:	add    eax,DWORD PTR [ebx]
  41582e:	push   ecx
  41582f:	and    BYTE PTR [ebx+0x18],cl
  415832:	cdq    
  415833:	shl    DWORD PTR [edx+0x3d59bf09],cl
  415839:	inc    esp
  41583a:	dec    esi
  41583b:	mov    bh,BYTE PTR [edi+0x1bae3c9e]
  415841:	and    BYTE PTR [ebp-0x71],dl
  415844:	ret    
  415845:	xor    ebx,DWORD PTR [ebp-0x27]
  415848:	bound  edi,QWORD PTR [edi+ebp*1-0x54b61c03]
  41584f:	xor    eax,0x8540dac2
  415854:	mov    ch,0x9d
  415856:	rol    BYTE PTR ds:0x5e9f0ed2,0x56
  41585d:	cld    
  41585e:	jl     0x415865
  415860:	or     al,BYTE PTR [ebx-0x13]
  415863:	ret    0xd5a
  415866:	stc    
  415867:	call   0x91a6:0x4673fa6a
  41586e:	fstp   TBYTE PTR [ebx+0x354e6922]
  415874:	cwde   
  415875:	xchg   esp,eax
  415876:	jmp    DWORD PTR [ebx-0x6dc3f47f]
  41587c:	call   0x1ab8:0x70453f94
  415883:	mov    dh,0x39
  415885:	mov    ah,0x5a
  415887:	icebp  
  415888:	enter  0x3569,0xea
  41588c:	int3   
  41588d:	into   
  41588e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41588f:	jecxz  0x41587c
  415891:	ja     0x415894
  415893:	cmp    eax,0xd2f3998b
  415898:	mov    al,ds:0x796c0b36
  41589d:	push   eax
  41589e:	nop
  41589f:	push   edi
  4158a0:	inc    eax
  4158a1:	icebp  
  4158a2:	add    edx,DWORD PTR [esi+0x3]
  4158a5:	cs mov ecx,esp
  4158a8:	or     edx,edx
  4158aa:	push   esp
  4158ab:	aas    
  4158ac:	jno    0x4158f1
  4158ae:	(bad)  
  4158af:	(bad)  
  4158b0:	mov    edx,DWORD PTR [ebx-0x6e]
  4158b3:	cwde   
  4158b4:	ins    DWORD PTR es:[edi],dx
  4158b5:	cli    
  4158b6:	push   ss
  4158b7:	push   esi
  4158b8:	daa    
  4158b9:	out    dx,al
  4158ba:	sar    eax,0x88
  4158bd:	stc    
  4158be:	pop    es
  4158bf:	js     0x4158f5
  4158c1:	dec    ebp
  4158c2:	or     al,0xab
  4158c4:	ins    BYTE PTR es:[edi],dx
  4158c5:	push   edi
  4158c6:	or     ebx,esp
  4158c8:	aad    0x82
  4158ca:	retf   0x9872
  4158cd:	dec    edi
  4158ce:	inc    ecx
  4158cf:	aas    
  4158d0:	stc    
  4158d1:	mov    eax,0x9bb0c82b
  4158d6:	cmc    
  4158d7:	push   0x46352294
  4158dc:	jmp    0xcae391
  4158e1:	pusha  
  4158e2:	addr16 aad 0xbb
  4158e5:	adc    bh,BYTE PTR ds:0x56d60692
  4158eb:	mov    ecx,0x717408fe
  4158f0:	ds mov esp,0xc607dc60
  4158f6:	sbb    eax,0x8c867374
  4158fb:	xchg   esi,eax
  4158fc:	mov    DWORD PTR [ecx+0x6049d5d7],esp
  415902:	mov    fs,esp
  415904:	sti    
  415905:	mov    esp,0x5d2a33e4
  41590a:	pop    edx
  41590b:	jno    0x415984
  41590d:	es dec edi
  41590f:	sbb    al,0xd0
  415911:	fnstcw WORD PTR [ecx+0x54]
  415914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415915:	leave  
  415916:	mov    dh,0x27
  415918:	inc    ebx
  415919:	jl     0x415946
  41591b:	scas   al,BYTE PTR es:[edi]
  41591c:	mov    DWORD PTR [eax-0x30],eax
  41591f:	or     esi,DWORD PTR [edx+0x4970d5a]
  415925:	dec    ebx
  415926:	jne    0x4158db
  415928:	push   ecx
  415929:	loopne 0x4158d9
  41592b:	pop    edi
  41592c:	cmp    BYTE PTR ds:0x8f202b7b,bh
  415932:	xchg   BYTE PTR fs:[edx-0x27e0ab44],bl
  415939:	inc    ecx
  41593a:	cdq    
  41593b:	and    bl,BYTE PTR [esp+edi*2-0x56]
  41593f:	sub    DWORD PTR [edi],ebx
  415941:	mov    ds:0xd4c8b47f,al
  415946:	dec    ebx
  415947:	je     0x41591b
  415949:	ficomp DWORD PTR [edx]
  41594b:	aam    0x44
  41594d:	xor    eax,0x3567cd7f
  415952:	sbb    DWORD PTR [ebx+edi*8],eax
  415955:	mov    esp,0xce11aff0
  41595a:	stos   BYTE PTR es:[edi],al
  41595b:	out    dx,al
  41595c:	sub    BYTE PTR ds:0xc9ebe63,0x99
  415963:	cmp    ebx,DWORD PTR [esi]
  415965:	loop   0x415912
  415967:	jle    0x4158ea
  415969:	adc    ch,BYTE PTR ds:0xac60
  41596e:	aas    
  41596f:	mov    eax,0x7b669365
  415974:	jno    0x4159ab
  415976:	xor    BYTE PTR [eax],ah
  415978:	sub    BYTE PTR [ecx+eax*8],0x5f
  41597c:	arpl   si,di
  41597e:	pop    ebp
  41597f:	cmp    bl,BYTE PTR [ebp-0x884e20e]
  415985:	mov    bl,0xe2
  415987:	and    edx,DWORD PTR [ecx]
  415989:	inc    edx
  41598a:	shl    BYTE PTR [esi],1
  41598c:	mov    ds:0xa2f09123,al
  415991:	xlat   BYTE PTR ds:[ebx]
  415992:	sub    DWORD PTR ds:0x42d58a7b,ecx
  415998:	mov    eax,ds:0x299accf8
  41599d:	scas   al,BYTE PTR es:[edi]
  41599e:	mov    eax,0xa92a6e4b
  4159a3:	scas   eax,DWORD PTR es:[edi]
  4159a4:	test   BYTE PTR [ecx],ah
  4159a6:	adc    BYTE PTR [eax+0x7d208293],dh
  4159ac:	sti    
  4159ad:	sar    BYTE PTR [eax-0x3bb35a66],1
  4159b3:	sub    al,0xfb
  4159b5:	ja     0x415965
  4159b7:	jnp    0x415a13
  4159b9:	mov    ebx,0xce8ec263
  4159be:	fidivr DWORD PTR [edx]
  4159c0:	pop    es
  4159c1:	dec    edi
  4159c2:	stos   BYTE PTR es:[edi],al
  4159c3:	mov    es,WORD PTR [esi-0x39]
  4159c6:	repnz or DWORD PTR [edx],0xffffffa6
  4159ca:	lods   eax,DWORD PTR ds:[esi]
  4159cb:	dec    eax
  4159cc:	jns    0x415970
  4159ce:	dec    edx
  4159cf:	bound  edi,QWORD PTR [edx-0x2]
  4159d2:	shl    BYTE PTR [eax],cl
  4159d4:	outs   dx,DWORD PTR ds:[esi]
  4159d5:	cmp    dl,BYTE PTR [esi-0x1ea79d5b]
  4159db:	loopne 0x415962
  4159dd:	add    DWORD PTR [eax-0x1d33d206],0xf
  4159e4:	dec    edi
  4159e5:	push   es
  4159e6:	mov    bh,0x3d
  4159e8:	out    dx,al
  4159e9:	jp     0x4159de
  4159eb:	mov    al,0x8f
  4159ed:	and    eax,0x600f73b4
  4159f2:	int3   
  4159f3:	push   ecx
  4159f4:	xchg   ebp,eax
  4159f5:	xchg   edx,eax
  4159f6:	and    ecx,eax
  4159f8:	push   ecx
  4159f9:	sahf   
  4159fa:	or     eax,0xc3ac466e
  4159ff:	pop    esi
  415a00:	xchg   DWORD PTR [esi-0x51],ecx
  415a03:	xchg   edi,eax
  415a04:	dec    ecx
  415a05:	imul   edx,DWORD PTR [ecx],0xaf6b02ee
  415a0b:	mov    ds:0xc14a781c,al
  415a10:	mov    esi,0xe32e3e75
  415a15:	fdivrp st(3),st
  415a17:	adc    DWORD PTR [ebx+0x7b],edx
  415a1a:	ss or  eax,0x8c1e8d28
  415a20:	inc    edi
  415a21:	mov    edi,0xd7d55b19
  415a26:	test   DWORD PTR [esi+0x8],0x2d902772
  415a2d:	int    0x80
  415a2f:	adc    ah,BYTE PTR [edi]
  415a31:	retf   
  415a32:	sub    DWORD PTR [esi-0x8073e44],esi
  415a38:	jp     0x415a16
  415a3a:	jo     0x415a57
  415a3c:	mov    WORD PTR [ebx],?
  415a3e:	jl     0x415a30
  415a40:	dec    esp
  415a41:	inc    ecx
  415a42:	(bad)  
  415a43:	lock test BYTE PTR [ebp+0x18],dl
  415a47:	sahf   
  415a48:	imul   ecx,DWORD PTR [edi+0x5d7126a8],0xfffffff3
  415a4f:	shl    DWORD PTR [edx+ebp*2+0x46],cl
  415a53:	test   DWORD PTR [ecx-0x4],edx
  415a56:	cmp    eax,0x76c46692
  415a5b:	mov    ds:0xed9511b2,al
  415a60:	pop    esp
  415a61:	aam    0x88
  415a63:	or     DWORD PTR [edi-0xccc759d],ecx
  415a69:	jmp    0x5bda:0xe3cc60c1
  415a70:	lods   al,BYTE PTR ds:[esi]
  415a71:	les    edi,FWORD PTR [eax-0x47]
  415a74:	adc    BYTE PTR [eax-0x40],0x9a
  415a78:	sbb    ebx,DWORD PTR ds:0xde9f89e9
  415a7e:	fmul   st,st(0)
  415a80:	push   eax
  415a81:	sub    al,BYTE PTR [ecx+esi*4]
  415a84:	call   edx
  415a86:	or     al,0x87
  415a88:	imul   edi,ebp,0xa
  415a8b:	loopne 0x415a12
  415a8d:	loope  0x415ab4
  415a8f:	sub    eax,esp
  415a91:	dec    ebp
  415a92:	sar    ebp,1
  415a94:	imul   eax,esi,0x3f6b3963
  415a9a:	mov    dh,0x7a
  415a9c:	ror    edx,cl
  415a9e:	dec    esp
  415a9f:	cmp    eax,0x29ecb22
  415aa4:	loopne 0x415a36
  415aa6:	leave  
  415aa7:	ss xchg esi,eax
  415aa9:	inc    edx
  415aaa:	les    ecx,FWORD PTR [ebx-0x553e99fc]
  415ab0:	or     DWORD PTR [eax+eiz*1+0x7dbc9683],eax
  415ab7:	jae    0x415a58
  415ab9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415aba:	mov    ebx,DWORD PTR [ebp-0x26]
  415abd:	in     eax,0xf9
  415abf:	jmp    0x4a9b:0x189d50b8
  415ac6:	add    DWORD PTR [edi-0x13],esi
  415ac9:	ret    0x8512
  415acc:	add    eax,ebp
  415ace:	mov    eax,db5
  415ad1:	push   cs
  415ad2:	gs inc esi
  415ad4:	sahf   
  415ad5:	sub    ebp,edi
  415ad7:	aas    
  415ad8:	inc    ebx
  415ad9:	clc    
  415ada:	cs dec ecx
  415adc:	xchg   edi,eax
  415add:	out    0x60,al
  415adf:	xor    esi,esp
  415ae1:	test   ebx,eax
  415ae3:	cdq    
  415ae4:	shl    BYTE PTR [eax+0xe23d1cb],cl
  415aea:	sub    eax,0xf2144b1a
  415aef:	pop    eax
  415af0:	repnz lahf 
  415af2:	aaa    
  415af3:	mov    esp,0xd79ac386
  415af8:	lods   al,BYTE PTR ds:[esi]
  415af9:	js     0x415a86
  415afb:	pop    es
  415afc:	popf   
  415afd:	stc    
  415afe:	xor    DWORD PTR [ecx],ebp
  415b00:	fimul  WORD PTR [ebx]
  415b02:	jae    0x415a9d
  415b04:	retf   
  415b05:	and    BYTE PTR [ebx],0x86
  415b08:	fild   QWORD PTR [edx-0x15]
  415b0b:	xor    dl,BYTE PTR [ebp-0xa5623bf]
  415b11:	xor    ch,BYTE PTR [ebx+ecx*2-0x8]
  415b15:	aad    0xb2
  415b17:	clc    
  415b18:	jno    0x415af7
  415b1a:	shl    DWORD PTR [ecx-0x2a17405a],1
  415b20:	mov    al,0x3b
  415b22:	out    0x89,eax
  415b24:	jmp    0xc11070a6
  415b29:	xchg   edx,eax
  415b2a:	lock lods eax,DWORD PTR ds:[esi]
  415b2c:	mov    bl,0x74
  415b2e:	or     ecx,DWORD PTR [edi+edi*4]
  415b31:	adc    ebp,DWORD PTR [edi-0x11]
  415b34:	es or  edi,edi
  415b37:	idiv   bh
  415b39:	dec    esp
  415b3a:	mov    esp,0x3c5d06d4
  415b3f:	jmp    0x8832e32f
  415b44:	clc    
  415b45:	stos   BYTE PTR es:[edi],al
  415b46:	mov    dh,0x7e
  415b48:	mov    es,WORD PTR [ecx+edx*2-0x5d]
  415b4c:	or     eax,0x5c518668
  415b51:	mov    esi,0x72eb6ec0
  415b56:	les    esi,FWORD PTR [esi-0x3e]
  415b59:	repz cmp dh,BYTE PTR [edx-0x7b]
  415b5d:	and    BYTE PTR [ebx],ah
  415b5f:	jecxz  0x415b0d
  415b61:	mov    eax,ds:0xd59ec5f6
  415b66:	xor    ecx,DWORD PTR [ebp+0x40]
  415b69:	jmp    0x35a78ec7
  415b6e:	sub    al,0x29
  415b70:	test   DWORD PTR [ebx-0x7b],edi
  415b73:	clc    
  415b74:	or     al,0x2f
  415b76:	aaa    
  415b77:	xor    al,0x51
  415b79:	test   al,0x56
  415b7b:	sbb    BYTE PTR [eax-0x26],0x6
  415b7f:	mov    edi,0xcb411faa
  415b84:	(bad)  
  415b85:	pop    ecx
  415b86:	push   esp
  415b87:	jnp    0x415bbb
  415b89:	mov    dl,BYTE PTR [ebp+0x759bf2cd]
  415b8f:	mov    cl,BYTE PTR [eax+0x45]
  415b92:	and    DWORD PTR [ecx],esp
  415b94:	pop    edi
  415b95:	sbb    BYTE PTR gs:[esp-0x44],al
  415b9a:	adc    DWORD PTR [ecx-0x65af4c5a],esi
  415ba0:	push   eax
  415ba1:	sahf   
  415ba2:	push   edi
  415ba3:	mov    gs,WORD PTR [eax+0x51]
  415ba6:	cld    
  415ba7:	aaa    
  415ba8:	loopne 0x415c12
  415baa:	push   eax
  415bab:	mov    bl,0x52
  415bad:	mov    edx,0xdaf52436
  415bb2:	sbb    ch,dl
  415bb4:	sub    ecx,DWORD PTR [edx+0x4f]
  415bb7:	int    0x24
  415bb9:	and    esi,DWORD PTR [ebx-0x7e5e0c12]
  415bbf:	fimul  DWORD PTR [edx+0x73543bba]
  415bc5:	pusha  
  415bc6:	or     WORD PTR [edi+0x7d367adf],di
  415bcd:	retf   
  415bce:	add    al,0x33
  415bd0:	push   0xd290f83a
  415bd5:	inc    ebx
  415bd6:	out    0xa3,al
  415bd8:	xchg   ebx,eax
  415bd9:	call   FWORD PTR [edx]
  415bdb:	mov    edx,0x9328069f
  415be0:	aad    0xa3
  415be2:	repz and ebx,edx
  415be5:	aaa    
  415be6:	fcmovnb st,st(5)
  415be8:	push   ds
  415be9:	or     esp,esp
  415beb:	adc    al,bh
  415bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bee:	pushf  
  415bef:	arpl   di,si
  415bf1:	daa    
  415bf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf3:	mov    esp,0x9769944d
  415bf8:	dec    edi
  415bf9:	and    cl,BYTE PTR [edi+0x2f]
  415bfc:	in     eax,dx
  415bfd:	fdivp  st(6),st
  415bff:	and    eax,0x35e20cc6
  415c04:	(bad)  
  415c05:	ret    0x7f5e
  415c08:	stos   DWORD PTR es:[edi],eax
  415c09:	fiadd  DWORD PTR [ecx+0x1e74120c]
  415c0f:	popa   
  415c10:	in     al,0x7b
  415c12:	mov    eax,0x4ad2d18d
  415c17:	or     al,0xa7
  415c19:	out    0x77,eax
  415c1b:	pop    edx
  415c1c:	loopne 0x415c8d
  415c1e:	push   0x97655269
  415c23:	or     DWORD PTR [edx-0x32],ecx
  415c26:	pusha  
  415c27:	jns    0x415c00
  415c29:	dec    edi
  415c2a:	pop    ecx
  415c2b:	dec    esi
  415c2c:	inc    edi
  415c2d:	mov    cl,0x9a
  415c2f:	data16 cmc 
  415c31:	daa    
  415c32:	mov    ah,0x7c
  415c34:	xlat   BYTE PTR ds:[ebx]
  415c35:	and    dl,BYTE PTR [esi-0x5d]
  415c38:	or     ah,bh
  415c3a:	test   DWORD PTR [esi+0x45ed26b],ebp
  415c40:	out    dx,al
  415c41:	sbb    esp,DWORD PTR es:[edx+0x701b4e11]
  415c48:	push   cs
  415c49:	sbb    BYTE PTR [ebx-0x56],bh
  415c4c:	adc    ch,BYTE PTR [edi+eiz*8]
  415c4f:	adc    eax,0xa30fec35
  415c54:	mov    ecx,0x6159a160
  415c59:	dec    esi
  415c5a:	xchg   edx,eax
  415c5b:	xchg   esp,eax
  415c5c:	int3   
  415c5d:	test   al,0x75
  415c5f:	ffree  st(6)
  415c61:	adc    eax,DWORD PTR [eax+0x32]
  415c64:	mov    DWORD PTR es:[edx-0x63e2e1fb],ecx
  415c6b:	or     DWORD PTR fs:[ebx],ebx
  415c6e:	dec    esp
  415c6f:	fcmovbe st,st(7)
  415c71:	gs (bad) 
  415c73:	mov    ebx,0x52d14454
  415c78:	ror    DWORD PTR [ebx],1
  415c7a:	jo     0x415c3f
  415c7c:	scas   eax,DWORD PTR es:[edi]
  415c7d:	and    BYTE PTR [edx-0x2d],cl
  415c80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c81:	stc    
  415c82:	cli    
  415c83:	repz fstp QWORD PTR [ebp-0x5d]
  415c87:	mov    esi,0xf0495ee0
  415c8c:	js     0x415c49
  415c8e:	mov    esi,0x3ea038e6
  415c93:	xchg   esp,eax
  415c94:	enter  0xeec8,0xf2
  415c98:	mov    bh,0x5
  415c9a:	sbb    eax,0x4c776df7
  415c9f:	hlt    
  415ca0:	jbe    0x415c2a
  415ca2:	adc    DWORD PTR [ebp+0x2],ebx
  415ca5:	mov    eax,ds:0x8001308a
  415caa:	jecxz  0x415c7a
  415cac:	cmp    esp,DWORD PTR [edi-0x3f]
  415caf:	or     eax,0xe00c4982
  415cb4:	iret   
  415cb5:	inc    esi
  415cb6:	fwait
  415cb7:	cmp    BYTE PTR [ecx],0xd1
  415cba:	push   ecx
  415cbb:	mov    DWORD PTR [ebx],esp
  415cbd:	sbb    eax,0x4af1a479
  415cc2:	mov    al,ds:0x1fef17ee
  415cc7:	cli    
  415cc8:	mov    esp,0x64e20da1
  415ccd:	mov    ds:0xa026f03,al
  415cd2:	sub    ch,BYTE PTR [ecx-0x710f126b]
  415cd8:	and    bh,0xaf
  415cdb:	repz fdivr st(1),st
  415cde:	dec    esp
  415cdf:	or     eax,ebx
  415ce1:	xlat   BYTE PTR ds:[ebx]
  415ce2:	out    0x29,eax
  415ce4:	iret   
  415ce5:	mov    DWORD PTR [eax-0x7be86619],esi
  415ceb:	add    al,0x41
  415ced:	dec    ecx
  415cee:	mov    eax,0x9cb3d041
  415cf3:	xlat   BYTE PTR ds:[ebx]
  415cf4:	lods   eax,DWORD PTR ds:[esi]
  415cf5:	retf   0x9c8e
  415cf8:	jg     0x415c8d
  415cfa:	sbb    BYTE PTR [esi-0x226d20b6],dl
  415d00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d01:	pop    es
  415d02:	je     0x415d3f
  415d04:	nop
  415d05:	jne    0x415ce4
  415d07:	int3   
  415d08:	hlt    
  415d09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d0a:	inc    ebp
  415d0b:	lods   eax,DWORD PTR ds:[esi]
  415d0c:	xor    eax,DWORD PTR [esi-0xc]
  415d0f:	cld    
  415d10:	and    DWORD PTR [ecx+0x4b],edi
  415d13:	cld    
  415d14:	test   al,0x16
  415d16:	fcomp  DWORD PTR [ecx-0x63]
  415d19:	(bad)  
  415d1a:	aas    
  415d1b:	fmul   st(3),st
  415d1d:	sub    BYTE PTR [esi],cl
  415d1f:	nop
  415d20:	(bad)  
  415d21:	test   eax,0xc1aac3a
  415d26:	mov    eax,ds:0xda3b7a5
  415d2b:	out    0xa4,eax
  415d2d:	dec    ebx
  415d2e:	dec    ebx
  415d2f:	cmp    al,0x77
  415d31:	mov    bl,0xfc
  415d33:	bound  esp,QWORD PTR [esi+ecx*8-0x40]
  415d37:	rcr    al,0xfc
  415d3a:	mov    ebp,0x18ed917d
  415d3f:	call   0xcb4:0x2d30e09d
  415d46:	fstp   QWORD PTR ds:0x282346c5
  415d4c:	nop
  415d4d:	add    DWORD PTR ds:0xa4e8cba2,ebp
  415d53:	inc    esi
  415d54:	sbb    eax,0x7038d237
  415d59:	rcl    BYTE PTR [esp+esi*2-0x19],cl
  415d5d:	loopne 0x415d29
  415d5f:	aam    0x97
  415d61:	out    0xb1,eax
  415d63:	call   0x708c6be1
  415d68:	(bad)  
  415d69:	arpl   WORD PTR [eax-0x7],dx
  415d6c:	adc    DWORD PTR [ebx],0x8faab81d
  415d72:	shr    DWORD PTR [esi],0x19
  415d75:	loopne 0x415ded
  415d77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d78:	cmp    dh,BYTE PTR [ecx+0x7]
  415d7b:	popf   
  415d7c:	out    dx,al
  415d7d:	cmp    DWORD PTR [ebp-0x62ab1260],0xffffffb4
  415d84:	int    0x59
  415d86:	gs sub al,0xfe
  415d89:	add    eax,DWORD PTR [edi-0x37]
  415d8c:	test   DWORD PTR [edx-0x3a],0x258d0699
  415d93:	cs cdq 
  415d95:	jp     0x415d17
  415d97:	call   0xecaf360a
  415d9c:	mov    esi,0xafb563d
  415da1:	mov    bl,0x4d
  415da3:	lea    ecx,[esi-0x16]
  415da6:	test   BYTE PTR [edx+0x6b],0x6d
  415daa:	pop    ebx
  415dab:	inc    esp
  415dac:	(bad)  
  415dad:	ffree  st(2)
  415daf:	bound  edx,QWORD PTR [eax+0x4f]
  415db2:	(bad)  
  415db3:	pop    esp
  415db4:	inc    esp
  415db5:	jg     0x415e1f
  415db7:	lahf   
  415db8:	ins    DWORD PTR es:[edi],dx
  415db9:	xchg   BYTE PTR [edi+0x336cf647],ch
  415dbf:	pop    es
  415dc0:	xchg   edx,eax
  415dc1:	(bad)  
  415dc2:	adc    eax,0x977a71da
  415dc7:	nop
  415dc8:	(bad)  
  415dc9:	xchg   esi,eax
  415dca:	stc    
  415dcb:	or     DWORD PTR [ebx],ecx
  415dcd:	jl     0x415d66
  415dcf:	js     0x415dd0
  415dd1:	xchg   ebp,eax
  415dd2:	ret    0x74e7
  415dd5:	jae    0x415dd8
  415dd7:	sbb    esp,DWORD PTR [eax+0x598f29a]
  415ddd:	stc    
  415dde:	and    al,0xf2
  415de0:	div    BYTE PTR [ebx+0x145daaeb]
  415de6:	fimul  WORD PTR [eax+0x2c]
  415de9:	mov    dl,0xe
  415deb:	nop
  415dec:	into   
  415ded:	popa   
  415dee:	xchg   esi,eax
  415def:	inc    edi
  415df0:	test   DWORD PTR [eax],0xb9209344
  415df6:	fcom   DWORD PTR [edx+ecx*8-0x6328c7ba]
  415dfd:	mov    BYTE PTR [esi],0xbd
  415e00:	ror    cl,1
  415e02:	(bad)  
  415e03:	out    dx,eax
  415e04:	scas   eax,DWORD PTR es:[edi]
  415e05:	out    dx,al
  415e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e07:	sbb    al,0xa7
  415e09:	push   ebp
  415e0a:	xor    eax,0x1c28f7f
  415e0f:	stos   DWORD PTR es:[edi],eax
  415e10:	js     0x415e45
  415e12:	sbb    bh,BYTE PTR ds:0x486c938f
  415e18:	cmp    BYTE PTR [esi+ebx*1+0x1f],dh
  415e1c:	xor    eax,0x8855e39b
  415e21:	xor    bh,BYTE PTR [esi+0x1b]
  415e24:	aaa    
  415e25:	sub    dh,BYTE PTR [edi-0x54]
  415e28:	test   edi,edx
  415e2a:	xchg   edx,eax
  415e2b:	aaa    
  415e2c:	inc    ebx
  415e2d:	push   eax
  415e2e:	call   0x2553:0x95be8ce2
  415e35:	clc    
  415e36:	xlat   BYTE PTR ds:[ebx]
  415e37:	or     al,0x69
  415e39:	inc    ebp
  415e3a:	sbb    edx,DWORD PTR [edi+0x492ab93]
  415e40:	adc    al,0x29
  415e42:	cmp    ch,BYTE PTR [ebx]
  415e44:	or     BYTE PTR [esi],dh
  415e46:	sar    DWORD PTR [esi],1
  415e48:	gs dec esp
  415e4a:	cli    
  415e4b:	sub    DWORD PTR [ecx+0x11cc27a8],esi
  415e51:	das    
  415e52:	test   al,0x35
  415e54:	cli    
  415e55:	adc    al,bl
  415e57:	add    dl,BYTE PTR [ebp+edx*8+0x6c]
  415e5b:	pop    edi
  415e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e5d:	sub    edx,ebp
  415e5f:	pop    ebx
  415e60:	out    dx,eax
  415e61:	mov    edx,0x5ff51163
  415e66:	inc    ebx
  415e67:	les    edx,FWORD PTR [eax+ecx*8]
  415e6a:	ret    0xd5d3
  415e6d:	je     0x415e55
  415e6f:	or     DWORD PTR [edi-0x59],edi
  415e72:	or     DWORD PTR ds:0xf81c083b,ebp
  415e78:	jne    0x415e71
  415e7a:	add    BYTE PTR [ebp-0x4a],0x6c
  415e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415e7f:	aas    
  415e80:	sub    esi,0xbf4b603c
  415e86:	shl    DWORD PTR [edi-0x5f],0x16
  415e8a:	cmp    eax,0x8e0b4815
  415e8f:	in     eax,dx
  415e90:	in     al,0x6d
  415e92:	or     eax,0x82abe198
  415e97:	pop    esp
  415e98:	or     al,0xc7
  415e9a:	xchg   esp,eax
  415e9b:	sub    cl,cl
  415e9d:	fprem1 
  415e9f:	mov    esi,0xe9e9a9e5
  415ea4:	mov    DWORD PTR ds:0x1746da4e,esp
  415eaa:	cmp    edi,DWORD PTR [edi-0x29]
  415ead:	nop
  415eae:	fcomp  DWORD PTR [ecx-0x36c4d4a7]
  415eb4:	repz cdq 
  415eb6:	out    dx,eax
  415eb7:	jle    0x415eba
  415eb9:	sub    eax,ebx
  415ebb:	xchg   DWORD PTR es:[edi+0x57],edi
  415ebf:	in     eax,dx
  415ec0:	loop   0x415e77
  415ec2:	retf   
  415ec3:	iret   
  415ec4:	add    eax,DWORD PTR [edi+ebp*8+0x41]
  415ec8:	fwait
  415ec9:	sahf   
  415eca:	jmp    0x415f02
  415ecc:	fwait
  415ecd:	jmp    0x415f34
  415ecf:	les    esp,FWORD PTR [edi]
  415ed1:	mov    al,ds:0x26c8c07b
  415ed6:	cs sub al,ch
  415ed9:	mov    dl,0x89
  415edb:	jge    0x415ed0
  415edd:	repnz inc edi
  415edf:	jmp    0x415ed0
  415ee1:	cmp    eax,0x84e52296
  415ee6:	cdq    
  415ee7:	call   0xbe7c:0xb527bf0c
  415eee:	fcomp  QWORD PTR [ebp-0x138c0f1]
  415ef4:	repnz lea edx,[esi-0xe]
  415ef8:	dec    edi
  415ef9:	daa    
  415efa:	jbe    0x415ee5
  415efc:	xchg   ecx,eax
  415efd:	neg    ebp
  415eff:	in     eax,0x77
  415f01:	jge    0x415f81
  415f03:	mov    edx,0xd30333dd
  415f08:	push   esp
  415f09:	out    dx,al
  415f0a:	sbb    al,0x29
  415f0c:	pop    esp
  415f0d:	punpckldq mm5,DWORD PTR [ebp+0x38b5bc09]
  415f14:	outs   dx,DWORD PTR ds:[esi]
  415f15:	mov    ecx,0x72e5efb2
  415f1a:	add    esi,ebp
  415f1c:	jp     0x415eb7
  415f1e:	xor    eax,0x94ba9e9e
  415f23:	in     al,0xc9
  415f25:	cs or  eax,0xc6f1ae08
  415f2b:	dec    ebp
  415f2c:	iret   
  415f2d:	xor    ch,BYTE PTR [ebp-0x57]
  415f30:	mov    dh,0xd9
  415f32:	cli    
  415f33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f34:	arpl   WORD PTR [esi-0x48],sp
  415f37:	lods   al,BYTE PTR ds:[esi]
  415f38:	cmp    edx,DWORD PTR [ecx+0x2e]
  415f3b:	sbb    ch,0x27
  415f3e:	fsub   DWORD PTR [esi-0x6c]
  415f41:	stc    
  415f42:	out    0x79,al
  415f44:	or     cl,BYTE PTR [ecx]
  415f46:	scas   al,BYTE PTR es:[edi]
  415f47:	add    eax,0x31ea2bbc
  415f4c:	in     al,dx
  415f4d:	and    al,BYTE PTR [esp+ebp*2]
  415f50:	mov    ds:0x33388e85,al
  415f55:	je     0x415f00
  415f57:	call   DWORD PTR [eax-0x34]
  415f5a:	jle    0x415f81
  415f5c:	push   eax
  415f5d:	mov    esi,0x4e835553
  415f62:	jp     0x415f24
  415f64:	in     al,dx
  415f65:	scas   al,BYTE PTR es:[edi]
  415f66:	mov    DWORD PTR [ecx+0x72],ecx
  415f69:	dec    ebp
  415f6a:	and    BYTE PTR [edx+0x3dd66052],0xb9
  415f71:	mov    esi,0xf9dd4b4a
  415f76:	js     0x415fc0
  415f78:	neg    DWORD PTR [eax]
  415f7a:	add    eax,DWORD PTR [ebp-0x724d3ca1]
  415f80:	add    BYTE PTR [eax],bh
  415f82:	push   esi
  415f83:	ret    
  415f84:	aaa    
  415f85:	push   ecx
  415f86:	jbe    0x415f12
  415f88:	data16 or al,BYTE PTR [edx-0xd2bf8f0]
  415f8f:	xchg   BYTE PTR [ecx-0x4b4f1ed7],ah
  415f95:	setge  bl
  415f98:	xchg   edi,eax
  415f99:	pop    ecx
  415f9a:	sbb    al,0x9c
  415f9c:	mov    BYTE PTR [edi*2-0x3c17c05d],0x75
  415fa4:	pop    eax
  415fa5:	dec    ecx
  415fa6:	ja     0x415fa6
  415fa8:	mov    BYTE PTR [edi+0xb1530f],ah
  415fae:	(bad)  
  415faf:	pop    ss
  415fb0:	sbb    DWORD PTR [ebx-0x12],ebx
  415fb3:	mov    esi,0xad181b28
  415fb8:	dec    ebx
  415fb9:	or     dh,BYTE PTR [esi]
  415fbb:	ss addr16 mov eax,0xa8fb46f8
  415fc2:	push   ss
  415fc3:	mov    ebx,0x4203f700
  415fc8:	aas    
  415fc9:	xor    eax,0x7b7d639d
  415fce:	pop    esi
  415fcf:	sub    BYTE PTR [edi-0x7],al
  415fd2:	inc    ebp
  415fd3:	adc    ah,bl
  415fd5:	fld    DWORD PTR [ebx-0x61]
  415fd8:	nop
  415fd9:	mov    fs,WORD PTR [ebx-0x74219320]
  415fdf:	jmp    0x415f8d
  415fe1:	xor    eax,0xc686c561
  415fe6:	mov    ecx,DWORD PTR [esi-0x48da5063]
  415fec:	mov    esi,0x2cff5926
  415ff1:	aam    0xbd
  415ff3:	push   0xffffffcc
  415ff5:	arpl   WORD PTR [ebx],bx
  415ff7:	stos   DWORD PTR es:[edi],eax
  415ff8:	jo     0x416065
  415ffa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ffb:	or     BYTE PTR [edx-0x7e],ch
  415ffe:	cli    
  415fff:	fwait
  416000:	mov    edi,0x94ef9f94
  416005:	jg     0x416083
  416007:	mov    BYTE PTR [eax+0x58190b06],dl
  41600d:	lahf   
  41600e:	aaa    
  41600f:	jne    0x415f93
  416011:	test   BYTE PTR [ecx],ah
  416013:	add    ebp,DWORD PTR [edx]
  416015:	mov    dl,0x3f
  416017:	ins    BYTE PTR es:[edi],dx
  416018:	push   edx
  416019:	out    dx,eax
  41601a:	aad    0x78
  41601c:	lds    edi,FWORD PTR [eax]
  41601e:	sahf   
  41601f:	test   eax,0x222b2e9b
  416024:	mov    edi,0xdc568101
  416029:	mov    dl,0x45
  41602b:	mov    bl,0xda
  41602d:	sbb    eax,0x33d9ae59
  416032:	and    al,0x3c
  416034:	icebp  
  416035:	add    eax,0x9ce4000a
  41603a:	call   0xe7f7651b
  41603f:	or     esi,ecx
  416041:	jbe    0x416059
  416043:	add    al,0x50
  416045:	inc    esp
  416046:	xsave  [edx+eiz*4+0x48]
  41604b:	ins    BYTE PTR es:[edi],dx
  41604c:	daa    
  41604d:	clc    
  41604e:	jge    0x415fef
  416050:	push   ds
  416051:	xchg   edi,eax
  416052:	pusha  
  416053:	push   ecx
  416054:	imul   eax,edi,0xab50bacc
  41605a:	das    
  41605b:	jle    0x416041
  41605d:	or     al,0x36
  41605f:	push   ebx
  416060:	ja     0x416084
  416062:	push   eax
  416063:	test   al,0x10
  416065:	retf   0xb0fc
  416068:	ins    DWORD PTR es:[edi],dx
  416069:	push   es
  41606a:	add    bl,BYTE PTR [esi]
  41606c:	ins    BYTE PTR es:[edi],dx
  41606d:	pop    ecx
  41606e:	fsubr  DWORD PTR [esi+0x26ec652e]
  416074:	jp     0x416032
  416076:	jno    0x416002
  416078:	mov    edi,0x238dbf7
  41607d:	and    al,0x46
  41607f:	push   ebp
  416080:	lea    esi,[edi]
  416082:	xchg   edx,eax
  416083:	dec    eax
  416084:	je     0x4160c0
  416086:	jmp    0x4d7a:0x6296cb1f
  41608d:	lock retf 0x3a39
  416091:	xchg   edx,eax
  416092:	push   0x91db14a6
  416097:	adc    edx,DWORD PTR ds:0x4a760811
  41609d:	clc    
  41609e:	push   edx
  41609f:	in     eax,0x31
  4160a1:	retf   
  4160a2:	loop   0x416057
  4160a4:	inc    ebx
  4160a5:	xchg   esp,eax
  4160a6:	cbw    
  4160a8:	or     ch,ch
  4160aa:	out    0x74,al
  4160ac:	icebp  
  4160ad:	fbstp  TBYTE PTR [ecx-0x3b8f44c3]
  4160b3:	jns    0x4160c4
  4160b5:	jmp    0x3831:0x4b46c517
  4160bc:	jo     0x4160d3
  4160be:	(bad)  
  4160bf:	popa   
  4160c0:	pop    esp
  4160c1:	sbb    DWORD PTR [ebx+0x3e1b5d5d],esi
  4160c7:	mov    al,ds:0xfab004c
  4160cc:	das    
  4160cd:	stc    
  4160ce:	mov    dl,0x40
  4160d0:	jle    0x416076
  4160d2:	push   es
  4160d3:	or     ch,al
  4160d5:	enter  0xf192,0xad
  4160d9:	lahf   
  4160da:	iret   
  4160db:	mov    eax,0xa50bb144
  4160e0:	add    bh,BYTE PTR [ebx+eiz*1]
  4160e3:	and    esi,DWORD PTR [ebp+0x645c48b3]
  4160e9:	ins    DWORD PTR es:[edi],dx
  4160ea:	jmp    0x4160d3
  4160ec:	add    DWORD PTR [edi+0x30],eax
  4160ef:	push   edx
  4160f0:	jmp    0x4fed:0x39f743c6
  4160f7:	outs   dx,BYTE PTR ds:[esi]
  4160f8:	shr    ecx,1
  4160fa:	std    
  4160fb:	pop    edx
  4160fc:	cld    
  4160fd:	call   0x63e7:0xc763d2f8
  416104:	pop    ebp
  416105:	xchg   ecx,eax
  416106:	imul   BYTE PTR [esi-0x15e226bf]
  41610c:	dec    edx
  41610d:	imul   edi,esi,0xffffff9d
  416110:	cs or  cl,dh
  416113:	std    
  416114:	lods   al,BYTE PTR ds:[esi]
  416115:	mov    ds:0xc776b926,eax
  41611a:	ins    BYTE PTR es:[edi],dx
  41611b:	out    0x4c,eax
  41611d:	add    BYTE PTR [ebx-0x67],bh
  416120:	xchg   esi,eax
  416121:	lock cmp DWORD PTR es:[ebx-0x48],esi
  416126:	mov    bh,0x76
  416128:	iret   
  416129:	in     eax,dx
  41612a:	loopne 0x4160c4
  41612c:	cmp    DWORD PTR [ebx],ebp
  41612e:	stos   BYTE PTR es:[edi],al
  41612f:	cs jg  0x416153
  416132:	add    esi,DWORD PTR ds:0x757fadc1
  416138:	lods   eax,DWORD PTR ds:[esi]
  416139:	dec    ecx
  41613a:	push   0x2
  41613c:	inc    ecx
  41613d:	(bad)  [esi+eiz*8]
  416140:	jo     0x4161b7
  416142:	stc    
  416143:	test   dl,ch
  416145:	pop    es
  416146:	in     eax,dx
  416147:	mov    eax,0x1dba39b8
  41614c:	lods   al,BYTE PTR ds:[esi]
  41614d:	aas    
  41614e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41614f:	mov    edx,0xe9213063
  416154:	ins    BYTE PTR es:[edi],dx
  416155:	lods   al,BYTE PTR ds:[esi]
  416156:	push   ebx
  416157:	push   edi
  416158:	in     al,0xf0
  41615a:	popa   
  41615b:	xchg   BYTE PTR [ebp+0x3f],cl
  41615e:	fldenv [ebp-0x73]
  416161:	and    al,0x45
  416163:	or     BYTE PTR [ebp+esi*8+0x4d7fdb4f],0x4f
  41616b:	sub    eax,0x57ce7733
  416170:	int    0x75
  416172:	out    dx,al
  416173:	data16 mov bl,ah
  416176:	cmp    BYTE PTR [eax-0x1e7627f7],dl
  41617c:	cmp    BYTE PTR [ebp+0x12ca983],dl
  416182:	aas    
  416183:	inc    esi
  416184:	fild   DWORD PTR [edi-0x22138428]
  41618a:	add    al,0x68
  41618c:	jne    0x4161a7
  41618e:	mov    ebp,0x9a1d35b3
  416193:	imul   eax,edx,0x2f39f132
  416199:	xchg   esi,eax
  41619a:	push   0x1e
  41619c:	fidiv  WORD PTR [edi+0x47a0a6c]
  4161a2:	imul   ebx
  4161a4:	push   DWORD PTR [ecx]
  4161a6:	(bad)  
  4161a7:	xchg   edx,eax
  4161a8:	fs inc ebx
  4161aa:	xchg   bh,dh
  4161ac:	pushf  
  4161ad:	icebp  
  4161ae:	(bad)  
  4161af:	test   eax,0x9c5d3e9e
  4161b4:	mov    al,BYTE PTR [esi+0x58]
  4161b7:	outs   dx,DWORD PTR ds:[esi]
  4161b8:	xchg   esi,eax
  4161b9:	jmp    0x2e5:0x3fdc619
  4161c0:	xlat   BYTE PTR ds:[ebx]
  4161c1:	mov    ebp,DWORD PTR [eax+ecx*4+0x3c556ad5]
  4161c8:	stos   DWORD PTR es:[edi],eax
  4161c9:	push   edi
  4161ca:	pop    edx
  4161cb:	fdiv   QWORD PTR [ebx]
  4161cd:	inc    edx
  4161ce:	test   eax,0x3a3ddb36
  4161d3:	mov    dl,0x39
  4161d5:	cmp    al,0xee
  4161d7:	fdivr  QWORD PTR [eax-0xb567a27]
  4161dd:	scas   al,BYTE PTR es:[edi]
  4161de:	nop
  4161df:	jb     0x416260
  4161e1:	xchg   DWORD PTR [eax],esi
  4161e3:	mov    edx,0x898d5f55
  4161e8:	outs   dx,DWORD PTR ds:[esi]
  4161e9:	add    al,bl
  4161eb:	mov    al,0xee
  4161ed:	jb     0x4161bc
  4161ef:	lods   al,BYTE PTR ds:[esi]
  4161f0:	out    dx,al
  4161f1:	daa    
  4161f2:	sbb    eax,0xec75cc1e
  4161f7:	or     ecx,eax
  4161f9:	inc    eax
  4161fa:	jo     0x4161d2
  4161fc:	inc    ecx
  4161fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161fe:	dec    edx
  4161ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416200:	cmp    eax,ebp
  416202:	mov    bh,0x5c
  416204:	push   ecx
  416205:	push   0xffffff9c
  416207:	push   0x686b5e26
  41620c:	sbb    al,0xdc
  41620e:	fdiv   st(5),st
  416210:	push   0x3b
  416212:	pop    edx
  416213:	or     DWORD PTR [ecx],0x72
  416216:	or     BYTE PTR [ebp-0x5f370bea],ch
  41621c:	mov    DWORD PTR [edx+0x63],ebp
  41621f:	push   cs
  416220:	lock xchg ebp,eax
  416222:	mov    esp,0x399147c5
  416227:	aaa    
  416228:	rcr    BYTE PTR [edi+ebp*1],cl
  41622b:	adc    ah,BYTE PTR [edx+0x2b996118]
  416231:	retf   
  416232:	in     eax,dx
  416233:	sub    al,0xf9
  416235:	inc    ebx
  416236:	cmp    ch,BYTE PTR [eax+esi*1]
  416239:	(bad)  
  41623a:	and    eax,0xb2e2dece
  41623f:	mul    DWORD PTR [ebp+edx*4+0x67]
  416243:	mov    al,BYTE PTR [ebx-0x49e93c55]
  416249:	xor    DWORD PTR [esi+0x17],ecx
  41624c:	or     BYTE PTR [edi+0x65],0xab
  416250:	jp     0x416241
  416252:	lods   al,BYTE PTR ds:[esi]
  416253:	outs   dx,BYTE PTR ds:[esi]
  416254:	dec    edx
  416255:	aas    
  416256:	repz out 0x5b,al
  416259:	jmp    0x8703c721
  41625e:	jb     0x416220
  416260:	mov    al,0xc8
  416262:	retf   0x5f2
  416265:	xlat   BYTE PTR ds:[ebx]
  416266:	out    0x1c,al
  416268:	js     0x416259
  41626a:	push   cs
  41626b:	(bad)  
  41626c:	gs sbb al,0x1e
  41626f:	fistp  QWORD PTR [ebx-0x67234336]
  416275:	mov    al,ds:0x43551552
  41627a:	das    
  41627b:	loopne 0x4162fc
  41627d:	fs aad 0x72
  416280:	add    esi,DWORD PTR [eax-0x4301d279]
  416286:	mov    bh,0x18
  416288:	test   eax,0xfddfc040
  41628d:	add    al,bl
  41628f:	sbb    al,0x62
  416291:	adc    ch,bh
  416293:	mov    ebp,0x988f9164
  416298:	xor    al,0x2d
  41629a:	add    al,0x69
  41629c:	je     0x41630e
  41629e:	inc    esp
  41629f:	test   al,0xc3
  4162a1:	popa   
  4162a2:	nop
  4162a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4162a4:	inc    edi
  4162a5:	mov    cl,0x85
  4162a7:	(bad)  
  4162a8:	push   edi
  4162a9:	addr16 push ds
  4162ab:	push   0xb
  4162ad:	dec    esi
  4162ae:	jmp    0x2642:0x4790474f
  4162b5:	add    eax,0xca376741
  4162ba:	pushf  
  4162bb:	imul   edx,DWORD PTR [esi+0x2a8b7d94],0xffffffcf
  4162c2:	ss leave 
  4162c4:	mov    WORD PTR [edi],ss
  4162c6:	adc    al,0xe5
  4162c8:	or     eax,0xce9beeb0
  4162cd:	mov    BYTE PTR [eax-0x4f],al
  4162d0:	icebp  
  4162d1:	mov    bl,0x89
  4162d3:	sub    BYTE PTR [edx],al
  4162d5:	loope  0x4162da
  4162d7:	lods   al,BYTE PTR ds:[esi]
  4162d8:	xor    BYTE PTR [ebx+0x62],ah
  4162db:	scas   eax,DWORD PTR es:[edi]
  4162dc:	push   edx
  4162dd:	sbb    ecx,ebp
  4162df:	jnp    0x41626d
  4162e1:	(bad)  
  4162e2:	ins    DWORD PTR es:[edi],dx
  4162e3:	dec    ecx
  4162e4:	imul   esp,eax,0x584445d7
  4162ea:	ds sub eax,0xaef08182
  4162f0:	dec    eax
  4162f1:	adc    DWORD PTR [edi],ebx
  4162f3:	stos   BYTE PTR es:[edi],al
  4162f4:	jmp    0xffec:0x6558
  4162fa:	repnz or cl,BYTE PTR [edi]
  4162fd:	lds    dx,DWORD PTR [edi]
  416300:	test   al,0x7
  416302:	add    al,BYTE PTR [eax-0x5c6e38f7]
  416308:	pop    eax
  416309:	in     al,dx
  41630a:	mov    bl,0x7f
  41630c:	mov    ebp,0x19090503
  416311:	or     DWORD PTR [edi],esi
  416313:	je     0x41629d
  416315:	popf   
  416316:	dec    esp
  416317:	and    ah,BYTE PTR [esi-0x77fa77cc]
  41631d:	or     ecx,DWORD PTR [ebx+ebx*2+0x1fa1d144]
  416324:	jmp    FWORD PTR [ecx+0x2ee86707]
  41632a:	adc    ah,BYTE PTR [edi-0x786ba9cc]
  416330:	into   
  416331:	enter  0x191,0x80
  416335:	sahf   
  416336:	xchg   ebx,eax
  416337:	pop    ebx
  416338:	mov    eax,ds:0x7f65a1c
  41633d:	retf   0xd31a
  416340:	aaa    
  416341:	jno    0x416352
  416343:	int3   
  416344:	jb     0x4162ed
  416346:	inc    esi
  416347:	cs stos BYTE PTR es:[edi],al
  416349:	dec    ecx
  41634a:	popf   
  41634b:	rol    al,0x96
  41634e:	jno    0x41633b
  416350:	test   eax,0xaec49097
  416355:	into   
  416356:	je     0x416381
  416358:	push   esp
  416359:	imul   ebp,DWORD PTR [eax],0xffffff81
  41635c:	jle    0x416378
  41635e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41635f:	sub    al,0xef
  416361:	xlat   BYTE PTR ds:[ebx]
  416362:	xchg   ecx,eax
  416363:	fstp   st(4)
  416365:	mov    edx,0x7b6991ee
  41636a:	icebp  
  41636b:	or     ah,ch
  41636d:	out    dx,al
  41636e:	lahf   
  41636f:	mov    ebx,0xfb3d87c8
  416374:	or     DWORD PTR [ecx-0x7143948b],edx
  41637a:	xlat   BYTE PTR ds:[ebx]
  41637b:	lods   al,BYTE PTR ds:[esi]
  41637c:	bound  esp,QWORD PTR [eax]
  41637e:	inc    esi
  41637f:	dec    edi
  416380:	mov    ds:0x51126305,eax
  416385:	mov    ebx,ecx
  416387:	sbb    eax,0x3b3aa9e4
  41638c:	fadd   QWORD PTR [eax-0x54]
  41638f:	push   ecx
  416390:	stos   DWORD PTR es:[edi],eax
  416391:	inc    ebx
  416392:	(bad)  
  416393:	mov    eax,ds:0x6c6e19a9
  416398:	mov    bl,0xa
  41639a:	jne    0x41641b
  41639c:	sti    
  41639d:	test   eax,0x626e4d5e
  4163a2:	cmp    DWORD PTR [esi],0x9003c756
  4163a8:	xchg   edi,eax
  4163a9:	push   edi
  4163aa:	cdq    
  4163ab:	and    al,BYTE PTR [ebx]
  4163ad:	dec    edx
  4163ae:	pusha  
  4163af:	push   edx
  4163b0:	pop    ebp
  4163b1:	aam    0xc9
  4163b3:	imul   DWORD PTR [eax-0x5ab64712]
  4163b9:	lods   eax,DWORD PTR ds:[esi]
  4163ba:	aad    0x89
  4163bc:	jno    0x41641d
  4163be:	clc    
  4163bf:	push   eax
  4163c0:	mov    eax,ds:0x84c77b41
  4163c5:	mov    eax,ds:0x2c11c454
  4163ca:	ss xchg esi,eax
  4163cc:	or     al,0x47
  4163ce:	std    
  4163cf:	cld    
  4163d0:	lock add BYTE PTR [edi],dl
  4163d3:	shr    edi,cl
  4163d5:	out    dx,eax
  4163d6:	xchg   esi,eax
  4163d7:	leave  
  4163d8:	dec    bl
  4163da:	add    BYTE PTR [edx+0x5],ah
  4163dd:	ss out 0xec,eax
  4163e0:	in     eax,0xeb
  4163e2:	mov    DWORD PTR [edx-0x30dff038],esi
  4163e8:	and    al,0xda
  4163ea:	out    0x75,al
  4163ec:	addr16 mov bh,0xb0
  4163ef:	mov    WORD PTR [ebx+0x527f3662],cs
  4163f5:	loop   0x416456
  4163f7:	mov    dl,0xa5
  4163f9:	ret    0x296b
  4163fc:	ret    
  4163fd:	sub    BYTE PTR [eax+0x272c616f],ch
  416403:	ror    DWORD PTR [ecx+0x31],cl
  416406:	add    eax,0xf79d1881
  41640b:	mov    eax,ds:0x9b56dd09
  416410:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416411:	fcmovnb st,st(5)
  416413:	loop   0x41647d
  416415:	push   0xffffff8f
  416417:	xor    DWORD PTR [ebp+0x33],0xd523de26
  41641e:	je     0x4163c2
  416420:	dec    ecx
  416421:	mov    eax,eax
  416423:	stc    
  416424:	ins    BYTE PTR es:[edi],dx
  416425:	ja     0x41645a
  416427:	rol    BYTE PTR [ecx+eax*1-0x1bf9db12],0xbd
  41642f:	sub    dl,BYTE PTR [eax+0x2d]
  416432:	ror    ebp,0x51
  416435:	sub    ah,dh
  416437:	sub    BYTE PTR [edi-0x50],al
  41643a:	(bad)  
  41643b:	fdiv   DWORD PTR [eax-0x4d]
  41643e:	lds    ebp,FWORD PTR ds:0x26ea76e5
  416444:	call   0x885a:0xd21fb59c
  41644b:	es call 0x16790086
  416451:	pop    edx
  416453:	sub    eax,0x778f0d0b
  416458:	add    eax,0xde1ffba1
  41645d:	push   cs
  41645e:	sbb    al,0xd6
  416460:	iret   
  416461:	aas    
  416462:	fdiv   DWORD PTR [edx-0x3c]
  416465:	fsubr  st,st(7)
  416467:	or     DWORD PTR [esp+eiz*4+0x2b],esi
  41646b:	sbb    al,0xab
  41646d:	xchg   edx,eax
  41646e:	jns    0x4163f8
  416470:	iret   
  416471:	push   edi
  416472:	pop    esp
  416473:	adc    ch,BYTE PTR [ebx]
  416475:	add    DWORD PTR [ecx],0x6c
  416478:	lahf   
  416479:	icebp  
  41647a:	cs clc 
  41647c:	pop    esp
  41647d:	pushf  
  41647e:	push   ecx
  41647f:	std    
  416480:	sbb    al,0x57
  416482:	or     edx,edi
  416484:	push   ss
  416485:	mov    bl,0x72
  416487:	xchg   ah,cl
  416489:	sar    BYTE PTR [edx+0x4e06a8e3],cl
  41648f:	leave  
  416490:	jl     0x416455
  416492:	mov    al,ds:0x39a545d4
  416497:	ins    BYTE PTR es:[edi],dx
  416498:	sub    esp,DWORD PTR [edi-0x613f0419]
  41649e:	push   ss
  41649f:	add    dl,dh
  4164a1:	and    DWORD PTR [ecx],esp
  4164a3:	and    ah,bl
  4164a5:	mov    ebx,0x93dfc4fe
  4164aa:	or     ah,dh
  4164ac:	ror    BYTE PTR [esp+0x67475ca1],1
  4164b3:	push   eax
  4164b4:	sub    esp,DWORD PTR [esi-0x7725d131]
  4164ba:	mov    ecx,0xe90ce952
  4164bf:	push   ebx
  4164c0:	es push esi
  4164c2:	int    0x78
  4164c4:	inc    ebx
  4164c5:	xchg   BYTE PTR [ecx-0x4e934223],dh
  4164cb:	and    eax,0x3e1f81e
  4164d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164d1:	mov    edx,ss
  4164d3:	pop    ds
  4164d4:	and    eax,0x692923da
  4164d9:	mov    dl,0x42
  4164db:	test   eax,0x83616f04
  4164e0:	adc    BYTE PTR [ebx],dh
  4164e2:	outs   dx,BYTE PTR ds:[esi]
  4164e3:	sbb    al,0xa4
  4164e5:	shr    BYTE PTR [edx-0x59],0x76
  4164e9:	out    dx,al
  4164ea:	(bad)  [ecx-0x4e]
  4164ed:	inc    esi
  4164ee:	(bad)  
  4164ef:	sub    al,0xa9
  4164f1:	adc    eax,0x8cb3affc
  4164f6:	xchg   BYTE PTR [edi-0x66],bl
  4164f9:	jmp    0x6db6e6da
  4164fe:	lahf   
  4164ff:	jmp    0xd50cf262
  416504:	les    esp,FWORD PTR [edi]
  416506:	gs sbb eax,0xd64b32bd
  41650c:	push   edx
  41650d:	retf   0xa303
  416510:	sbb    al,0x35
  416512:	xor    BYTE PTR [esi+0x49],dh
  416515:	dec    eax
  416516:	push   0x70
  416518:	or     bl,dl
  41651a:	adc    DWORD PTR [edi],eax
  41651c:	mov    edx,0x54ee7bb7
  416521:	sub    DWORD PTR [ebp-0x49380a20],ecx
  416527:	jle    0x4164dd
  416529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41652a:	rcr    dh,1
  41652c:	inc    esp
  41652d:	xor    DWORD PTR [edx-0x13660436],edi
  416533:	push   esi
  416534:	adc    BYTE PTR [edi],dh
  416536:	(bad)  
  416537:	iret   
  416538:	mov    ds:0x48c44c93,al
  41653d:	ins    BYTE PTR es:[edi],dx
  41653e:	arpl   WORD PTR [ebx+0x24be1910],si
  416544:	cmp    al,0xc6
  416546:	and    BYTE PTR ds:0xf401632c,0x45
  41654d:	push   ecx
  41654e:	arpl   WORD PTR [eax-0xa],bp
  416551:	add    DWORD PTR [ebx+0x19],esi
  416554:	and    eax,0xa144de05
  416559:	jge    0x416570
  41655b:	sub    dl,cl
  41655d:	fisub  WORD PTR [esi+0x74]
  416560:	pop    ss
  416561:	scas   al,BYTE PTR es:[edi]
  416562:	or     dh,BYTE PTR [eax]
  416564:	mov    ecx,0xe861e86d
  416569:	adc    eax,0xa8abaf75
  41656e:	mov    al,0x12
  416570:	push   esi
  416571:	sbb    eax,0xd74b09ea
  416576:	sub    eax,0x3dd6738a
  41657b:	add    al,0xc3
  41657d:	inc    ebx
  41657e:	inc    ebx
  41657f:	mov    ebp,0xbbd33ff6
  416584:	mov    eax,0x1578d76e
  416589:	test   eax,0x6a01f9af
  41658e:	sbb    al,BYTE PTR [ecx]
  416590:	loope  0x4165a3
  416592:	inc    edx
  416593:	and    ch,cl
  416595:	push   es
  416596:	aas    
  416597:	pop    esi
  416598:	(bad)  
  416599:	push   ecx
  41659a:	shr    BYTE PTR [edi-0x77],1
  41659d:	push   esp
  41659e:	(bad)  [ecx-0x1eb8fe80]
  4165a4:	add    BYTE PTR [eax+0x79],bl
  4165a7:	popa   
  4165a8:	cmp    al,0x0
  4165aa:	pusha  
  4165ab:	inc    eax
  4165ac:	jp     0x4165ca
  4165ae:	rol    BYTE PTR [eax],0x44
  4165b1:	lods   al,BYTE PTR cs:[esi]
  4165b3:	add    BYTE PTR [ecx+ebx*1-0x5edf3bda],ah
  4165ba:	add    BYTE PTR [eax],dl
  4165bc:	mov    eax,0x59c461bb
  4165c1:	pop    esi
  4165c2:	mov    edi,0x22d23cd8
  4165c7:	(bad)  
  4165c8:	mov    ch,0xd0
  4165ca:	sbb    esi,DWORD PTR [edi]
  4165cc:	xchg   ebx,eax
  4165cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165ce:	jae    0x4165de
  4165d0:	push   0xfffffff5
  4165d2:	xchg   al,cl
  4165d4:	add    BYTE PTR [esi-0xfe21b62],dl
  4165da:	jnp    0x416574
  4165dc:	(bad)
  4165e0:	or     esi,esi
  4165e2:	mov    ah,0xd5
  4165e4:	ret    
  4165e5:	push   cs
  4165e6:	repnz push esp
  4165e8:	ja     0x41663e
  4165ea:	fdiv   QWORD PTR [esi+0x2f581ecd]
  4165f0:	push   edi
  4165f1:	xor    al,bl
  4165f3:	jo     0x4165b1
  4165f5:	shl    ah,1
  4165f7:	pop    ebx
  4165f8:	sub    DWORD PTR [edi+0x6384dd58],ebp
  4165fe:	mov    dl,0x93
  416600:	stos   BYTE PTR es:[edi],al
  416601:	(bad)  
  416602:	mov    edi,0x2d4a6ff6
  416607:	mov    bh,0x10
  416609:	fwait
  41660a:	pop    edi
  41660b:	mov    dh,0x6
  41660d:	add    eax,0xa49117e8
  416612:	sahf   
  416613:	mov    bh,0x47
  416615:	xchg   ecx,eax
  416616:	out    0xd0,al
  416618:	fdiv   DWORD PTR [edi-0x41cf2ef2]
  41661e:	dec    edx
  41661f:	cmp    eax,0x51d74cb7
  416624:	fsub   QWORD PTR [ecx]
  416626:	jmp    0x1436:0x1451f4a6
  41662d:	aam    0x19
  41662f:	shr    BYTE PTR [esi+0x67],1
  416632:	es inc edi
  416634:	or     al,0x56
  416636:	xchg   edi,eax
  416637:	jmp    0x4165ef
  416639:	in     eax,0xd8
  41663b:	push   edx
  41663c:	mov    ch,0x35
  41663e:	mov    edi,0xbd4f3b1c
  416643:	clc    
  416644:	popf   
  416645:	and    BYTE PTR [esi],al
  416647:	fwait
  416648:	inc    esp
  416649:	cmp    al,0x77
  41664b:	push   ecx
  41664c:	push   esi
  41664d:	push   DWORD PTR [ecx+0x587f4c71]
  416653:	imul   ebx,DWORD PTR [edi],0xaa12976e
  416659:	stos   DWORD PTR es:[edi],eax
  41665a:	xor    eax,0xfc69b96d
  41665f:	std    
  416660:	adc    DWORD PTR [ebp-0xdadb5a6],edx
  416666:	mov    dh,0x3a
  416668:	test   eax,0xebaff79c
  41666d:	clc    
  41666e:	adc    BYTE PTR [ebp-0x682184ea],bl
  416674:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416675:	mov    BYTE PTR [ebx],0x54
  416678:	push   edx
  416679:	dec    edx
  41667a:	mov    esi,0x7c6f630d
  41667f:	push   edi
  416680:	mov    ds:0xfa817a84,al
  416685:	test   ch,bh
  416687:	or     esp,esp
  416689:	mov    al,ds:0x12ec5fb3
  41668e:	pslld  mm7,QWORD PTR [eax-0x1531f011]
  416695:	adc    al,0x27
  416697:	das    
  416698:	xlat   BYTE PTR ds:[ebx]
  416699:	ins    BYTE PTR es:[edi],dx
  41669a:	push   ebx
  41669b:	or     DWORD PTR [edi],esi
  41669d:	fwait
  41669e:	stos   BYTE PTR es:[edi],al
  41669f:	and    dl,bl
  4166a1:	test   al,0xd7
  4166a3:	out    0x14,eax
  4166a5:	repnz nop
  4166a7:	add    DWORD PTR [ebx],0x40377400
  4166ad:	jbe    0x4166b5
  4166af:	mov    eax,ds:0xe4feb97b
  4166b4:	hlt    
  4166b5:	and    ah,BYTE PTR [eax-0x6a]
  4166b8:	dec    ebp
  4166b9:	test   BYTE PTR [ebx+0x64549f11],bl
  4166bf:	inc    ecx
  4166c0:	mov    al,ds:0x6e2c5783
  4166c5:	add    eax,0x71e1509d
  4166ca:	dec    ebx
  4166cb:	daa    
  4166cc:	aad    0x25
  4166ce:	or     edi,DWORD PTR [edi]
  4166d0:	sbb    BYTE PTR [esi-0x255874c8],dl
  4166d6:	jnp    0x41665f
  4166d8:	ror    ebp,0xaf
  4166db:	ret    0xecd0
  4166de:	sbb    esi,DWORD PTR [edi]
  4166e0:	xchg   DWORD PTR [esi+0x7fc3c8a8],edx
  4166e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166e7:	test   bl,ah
  4166e9:	sbb    BYTE PTR [ebx+0x6d44b69b],bl
  4166ef:	enter  0x80f0,0x97
  4166f3:	ret    0x1a6e
  4166f6:	pop    eax
  4166f7:	or     ah,0xd0
  4166fa:	xor    bh,BYTE PTR [ecx+0x67]
  4166fd:	std    
  4166fe:	pop    ss
  4166ff:	je     0x41672e
  416701:	sbb    ebx,DWORD PTR gs:[eax]
  416704:	xchg   edi,eax
  416705:	mov    bh,0xf5
  416707:	jne    0x4166b9
  416709:	popa   
  41670a:	sub    BYTE PTR [ecx],bh
  41670c:	inc    eax
  41670d:	adc    eax,DWORD PTR [eax-0x4cd3bde0]
  416713:	fdivrp st(0),st
  416715:	mov    cl,0xb2
  416717:	aad    0x52
  416719:	in     al,0x9b
  41671b:	or     al,BYTE PTR [ecx]
  41671d:	inc    eax
  41671e:	and    eax,0xac45c3a5
  416723:	daa    
  416724:	jecxz  0x416761
  416726:	pop    ss
  416727:	mov    bl,0xce
  416729:	mov    esp,0xd5281942
  41672e:	xor    eax,0xe179871c
  416733:	push   edi
  416734:	sub    eax,0xbc8278f9
  416739:	in     eax,dx
  41673a:	xor    BYTE PTR [edi+0xdfe20b1],bh
  416740:	xchg   esi,eax
  416741:	(bad)  
  416742:	cmc    
  416743:	or     DWORD PTR [ebp-0x673e2912],edx
  416749:	cmc    
  41674a:	pop    ebp
  41674b:	ret    0x1b0
  41674e:	or     edi,DWORD PTR ds:[edx+esi*2]
  416752:	test   al,0x57
  416754:	lock mov esi,0x4bd0c1f5
  41675a:	retf   0x758b
  41675d:	into   
  41675e:	push   ecx
  41675f:	inc    esi
  416760:	jno    0x41670c
  416762:	test   al,0x75
  416764:	leave  
  416765:	jne    0x416710
  416767:	es int3 
  416769:	enter  0xb524,0x9b
  41676d:	lods   eax,DWORD PTR ds:[esi]
  41676e:	lods   al,BYTE PTR ds:[esi]
  41676f:	not    DWORD PTR ds:0x78c0467c
  416775:	out    dx,eax
  416776:	mov    bh,0x86
  416778:	test   dl,ch
  41677a:	sub    ebp,DWORD PTR [edx+0x7d]
  41677d:	mov    edi,0x697bcf45
  416782:	sbb    eax,0x3e6a8b9e
  416787:	cwde   
  416788:	ja     0x4167e0
  41678a:	repnz mov ds,WORD PTR [eax]
  41678d:	pop    ecx
  41678e:	dec    edi
  41678f:	(bad)  
  416791:	xor    BYTE PTR [ebp+0x54a09a9d],ch
  416797:	daa    
  416798:	loopne 0x416814
  41679a:	xchg   edx,eax
  41679b:	mov    bl,0xfc
  41679d:	in     al,0xf9
  41679f:	test   al,0xc7
  4167a1:	lea    edi,ds:0xcf52e515
  4167a7:	mov    dh,0x87
  4167a9:	adc    al,0x6f
  4167ab:	adc    BYTE PTR [eax],ah
  4167ad:	ds loop 0x4167a0
  4167b0:	cmp    eax,0x1e25ce23
  4167b5:	push   ecx
  4167b6:	sub    al,0x91
  4167b8:	add    bl,BYTE PTR ds:0xdc9badfc
  4167be:	dec    esp
  4167bf:	fbstp  TBYTE PTR [ebx]
  4167c1:	js     0x900f2c26
  4167c7:	bound  esp,QWORD PTR [edx-0x2d0226a6]
  4167cd:	test   BYTE PTR [edi+0x2d692baa],ch
  4167d3:	enter  0x55d8,0x8
  4167d7:	stc    
  4167d8:	popf   
  4167d9:	inc    ebp
  4167da:	mov    ds:0x656e3c79,al
  4167df:	pusha  
  4167e0:	sbb    ecx,ecx
  4167e2:	ins    DWORD PTR es:[edi],dx
  4167e3:	cmc    
  4167e4:	aaa    
  4167e5:	outs   dx,DWORD PTR ds:[esi]
  4167e6:	(bad)  
  4167e8:	and    edx,DWORD PTR [ebp+0x5214a5ac]
  4167ee:	mov    ebx,0xeae83b0f
  4167f3:	push   eax
  4167f4:	leave  
  4167f5:	dec    ecx
  4167f6:	xor    eax,0xbd2296ee
  4167fb:	in     eax,dx
  4167fc:	add    cl,BYTE PTR [edi-0x460feee0]
  416802:	push   esp
  416803:	imul   ah
  416805:	push   cs
  416806:	inc    ecx
  416807:	xchg   esp,eax
  416808:	ins    DWORD PTR es:[edi],dx
  416809:	test   BYTE PTR [ebx-0x2c119dc],dh
  41680f:	arpl   WORD PTR [ecx-0x5bf5be28],bx
  416815:	cmc    
  416816:	xor    DWORD PTR [edx+0x7b],edi
  416819:	xor    al,0x15
  41681b:	fsave  [esi+eiz*8+0x37]
  416820:	ins    BYTE PTR es:[edi],dx
  416821:	and    eax,0x27a7e929
  416826:	jmp    0x416823
  416828:	xchg   edx,eax
  416829:	xchg   esp,eax
  41682a:	pop    ds
  41682b:	mov    es,esp
  41682d:	mov    bl,0xff
  41682f:	(bad)  
  416830:	aas    
  416831:	jg     0x4167ce
  416833:	push   0xffffffa6
  416835:	out    dx,eax
  416836:	(bad)  
  416837:	push   es
  416838:	xor    al,0xa9
  41683a:	mov    edi,0x996f8c74
  41683f:	sub    BYTE PTR [esi],al
  416841:	jno    0x416801
  416843:	stos   BYTE PTR es:[edi],al
  416844:	ret    0xe86
  416847:	or     ebp,esi
  416849:	add    bl,BYTE PTR [ecx+0x75a3fec2]
  41684f:	or     BYTE PTR [edi+0x5eda0e97],0xfc
  416856:	stos   DWORD PTR es:[edi],eax
  416857:	mov    esp,DWORD PTR [edx]
  416859:	cs aaa 
  41685b:	pop    edx
  41685c:	retf   0x3d5c
  41685f:	test   DWORD PTR ds:0x7a238a85,edx
  416865:	outs   dx,BYTE PTR ds:[esi]
  416866:	xchg   dh,ch
  416868:	lods   al,BYTE PTR ds:[esi]
  416869:	sub    DWORD PTR [esi+0x60],0x374cfcd8
  416870:	js     0x416867
  416872:	sbb    ebx,ebx
  416874:	xchg   ecx,eax
  416875:	clc    
  416876:	inc    ebp
  416877:	jle    0x4168ad
  416879:	mov    edi,0x17b7d3e9
  41687e:	mov    dl,0xe3
  416880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416881:	sbb    DWORD PTR [ecx+0x43],esi
  416884:	arpl   WORD PTR [ebx+eiz*1],ax
  416887:	add    BYTE PTR [ebx+0x67],0xd2
  41688b:	inc    esi
  41688c:	fdiv   QWORD PTR [edx-0x2e8ce2e6]
  416892:	es aad 0xb
  416895:	jmp    0xb360:0x977e5b33
  41689c:	shl    bl,cl
  41689e:	cwde   
  41689f:	mov    ebp,0xc3f71fa2
  4168a4:	dec    eax
  4168a5:	sbb    DWORD PTR [ebp+0x66],edi
  4168a8:	or     eax,0x9981ac48
  4168ad:	(bad)  
  4168ae:	popf   
  4168af:	jb     0x416881
  4168b1:	and    dh,ah
  4168b3:	or     al,0x12
  4168b5:	sub    ebx,ebp
  4168b7:	enter  0x3e3c,0x2e
  4168bb:	mov    cl,0x41
  4168bd:	lock std 
  4168bf:	add    esi,ecx
  4168c1:	and    DWORD PTR [ebx+edi*4],0x5d
  4168c5:	fstp   DWORD PTR ds:0x2b61ce1e
  4168cb:	sbb    esi,edx
  4168cd:	fadd   QWORD PTR [ecx-0x338b7774]
  4168d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168d4:	mov    eax,0x6121fa26
  4168d9:	and    DWORD PTR [edi-0x4],ecx
  4168dc:	mov    eax,ds:0x69d40631
  4168e1:	mov    esi,0x40e70be6
  4168e6:	arpl   WORD PTR [ecx+0x0],di
  4168e9:	mov    ecx,0x5900a162
  4168ee:	hlt    
  4168ef:	lds    eax,FWORD PTR [ebx-0x5a]
  4168f2:	xor    dh,BYTE PTR [esp+esi*2-0x637daa44]
  4168f9:	or     ch,BYTE PTR [ecx-0x4ea50a00]
  4168ff:	int    0xee
  416901:	arpl   WORD PTR [edi-0x57b6f96b],si
  416907:	test   ebx,esi
  416909:	or     al,BYTE PTR [ecx+0x499fa9e9]
  41690f:	dec    edx
  416910:	xchg   DWORD PTR [ecx+0x3c],eax
  416913:	inc    edx
  416914:	inc    ebx
  416915:	adc    esi,DWORD PTR [esi]
  416917:	fs ja  0x41690b
  41691a:	mov    bl,BYTE PTR [esi+ebx*8-0x4f35e1e6]
  416921:	aaa    
  416922:	xchg   ebx,eax
  416923:	pop    eax
  416924:	test   eax,0x2f260d8b
  416929:	js     0x416948
  41692b:	xchg   edx,eax
  41692c:	mov    ecx,0x9e38c99e
  416931:	pop    edx
  416932:	ret    0xeb81
  416935:	xchg   esi,eax
  416936:	repnz and dh,BYTE PTR [eax+0x1cca6013]
  41693d:	sub    eax,0x8259f4a
  416942:	and    ebp,ebp
  416944:	cwde   
  416945:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416946:	mov    al,dh
  416948:	stos   DWORD PTR es:[edi],eax
  416949:	int3   
  41694a:	fsubr  QWORD PTR [eax]
  41694c:	jne    0x416916
  41694e:	inc    esi
  41694f:	sti    
  416950:	cmp    bh,BYTE PTR [ebp+0x6629b4ff]
  416956:	push   esi
  416957:	dec    edi
  416958:	inc    esp
  416959:	rol    BYTE PTR [esi+0x1a5f6fc0],cl
  41695f:	outs   dx,BYTE PTR ds:[esi]
  416960:	push   edi
  416961:	xor    edx,esi
  416963:	and    BYTE PTR [ecx+ebp*2-0x6d1efaa4],bh
  41696a:	mov    ebp,0x3d83271
  41696f:	retf   0xfb14
  416972:	fwait
  416973:	or     ebx,esi
  416975:	sti    
  416976:	pushf  
  416977:	iret   
  416978:	sbb    ecx,DWORD PTR [eax+0x65ee5512]
  41697e:	shl    DWORD PTR ds:0x86209f8,0xc1
  416985:	push   cs
  416986:	test   BYTE PTR [edx-0x29],0x40
  41698a:	shl    DWORD PTR [edi+0x6d445c36],cl
  416990:	pop    ebp
  416991:	push   esp
  416992:	stos   BYTE PTR es:[edi],al
  416993:	add    ah,BYTE PTR [ecx-0x69]
  416996:	data16 adc BYTE PTR [edx-0x22dfcbb8],bl
  41699d:	stc    
  41699e:	(bad)
  4169a1:	fistp  QWORD PTR [ebx+0xfaa7de3]
  4169a7:	or     BYTE PTR [edi],0x7d
  4169aa:	pushf  
  4169ab:	cs test eax,0x22f89922
  4169b1:	neg    ecx
  4169b3:	fwait
  4169b4:	xchg   DWORD PTR [bp+di],esp
  4169b7:	xchg   edx,eax
  4169b8:	adc    bh,BYTE PTR [edx+edx*1]
  4169bb:	iret   
  4169bc:	xadd   dh,ch
  4169bf:	inc    eax
  4169c0:	adc    esi,DWORD PTR [esi+0x4a]
  4169c3:	pop    esp
  4169c4:	stos   BYTE PTR es:[edi],al
  4169c5:	pop    ds
  4169c6:	and    eax,edx
  4169c8:	xor    DWORD PTR [ecx],ecx
  4169ca:	ret    0xdce4
  4169cd:	xchg   edi,eax
  4169ce:	or     DWORD PTR [ecx-0x27632b76],esi
  4169d4:	scas   al,BYTE PTR es:[edi]
  4169d5:	data16 fdivr QWORD PTR [edx-0x6b]
  4169d9:	or     eax,0x571fad4
  4169df:	loope  0x416995
  4169e1:	sub    al,0x7d
  4169e3:	or     BYTE PTR fs:[eax+0x70],0x7
  4169e8:	and    eax,DWORD PTR [ecx+0x6c]
  4169eb:	jp     0x4169e1
  4169ed:	xor    ah,BYTE PTR [ecx]
  4169ef:	jnp    0x4169ed
  4169f1:	dec    ecx
  4169f2:	jno    0x416a28
  4169f4:	ss shr ebx,cl
  4169f7:	push   edi
  4169f8:	sbb    ah,ch
  4169fa:	jmp    0x4169aa
  4169fc:	neg    BYTE PTR [eax]
  4169fe:	icebp  
  4169ff:	(bad)  
  416a02:	jp     0x416a12
  416a04:	jl     0x416a2b
  416a06:	imul   edi,DWORD PTR [ebx],0x176f4fbd
  416a0c:	xchg   ecx,eax
  416a0d:	mov    esi,0xcbb03417
  416a12:	test   DWORD PTR [eax-0x3d],eax
  416a15:	dec    ebx
  416a16:	or     ah,BYTE PTR ds:0x2fd322c7
  416a1c:	in     eax,0x33
  416a1e:	add    DWORD PTR [edx],edi
  416a20:	ins    DWORD PTR es:[edi],dx
  416a21:	or     al,0x8e
  416a23:	cli    
  416a24:	fs retf 
  416a26:	adc    eax,0x7ed0c6e
  416a2b:	push   esp
  416a2c:	fdiv   DWORD PTR ds:0x363f8e38
  416a32:	call   0x8d98:0x1a39b1af
  416a39:	jo     0x416a1d
  416a3b:	push   0xffffffff
  416a3d:	or     esp,esi
  416a3f:	jb     0x4169e1
  416a41:	cli    
  416a42:	or     al,0x41
  416a44:	push   0xffffffe5
  416a46:	loope  0x416a1b
  416a48:	xchg   ecx,eax
  416a49:	jne    0x416a0f
  416a4b:	dec    esp
  416a4c:	cmp    esi,DWORD PTR [ebx-0x43409418]
  416a52:	pop    es
  416a53:	adc    BYTE PTR [ebx-0x5915b56b],bl
  416a59:	mov    ah,0x5
  416a5b:	scas   eax,DWORD PTR es:[edi]
  416a5c:	or     BYTE PTR [edi+0x25e42d3e],dl
  416a62:	mov    bl,0x3d
  416a64:	and    al,0xa8
  416a66:	mov    al,0x9b
  416a68:	aam    0x4
  416a6a:	sahf   
  416a6b:	adc    al,0x67
  416a6d:	addr16 retf 
  416a6f:	add    eax,0x4593cbbd
  416a74:	mov    edi,0xb898c3
  416a79:	mov    eax,ds:0x3c5ac30f
  416a7e:	xchg   ecx,eax
  416a7f:	pop    edx
  416a80:	push   esi
  416a81:	out    dx,al
  416a82:	inc    esp
  416a83:	(bad)  
  416a84:	adc    cl,ch
  416a86:	in     eax,0x52
  416a88:	js     0x416a4e
  416a8a:	jl     0x416a77
  416a8c:	(bad)  
  416a8e:	sbb    BYTE PTR [ebx+edi*8+0xcb76248],0x5f
  416a96:	push   0x32
  416a98:	pop    ss
  416a99:	jne    0x416a22
  416a9b:	mov    ecx,0x48937c55
  416aa0:	enter  0x84f4,0xb9
  416aa4:	(bad)  
  416aa5:	fiadd  WORD PTR [edx+0x2c061205]
  416aab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416aac:	fld    TBYTE PTR [ebp-0x4b]
  416aaf:	fdiv   st,st(6)
  416ab1:	add    BYTE PTR [esi],cl
  416ab3:	jle    0x416a4f
  416ab5:	test   al,0xea
  416ab7:	in     al,0xec
  416ab9:	mov    ss,WORD PTR [edi-0x61c101c2]
  416abf:	loop   0x416a6e
  416ac1:	mov    edi,0xabe1c44e
  416ac6:	sub    dh,BYTE PTR [esi+0x6fa8b725]
  416acc:	les    ebp,FWORD PTR [edi-0x3]
  416acf:	mov    ecx,0xc2d70b3e
  416ad4:	or     ebx,0x16
  416ad7:	push   0x5
  416ad9:	in     eax,0x93
  416adb:	xchg   ebp,eax
  416adc:	sbb    cl,al
  416ade:	je     0x416b1a
  416ae0:	jecxz  0x416a71
  416ae2:	icebp  
  416ae3:	lea    ebx,[edx]
  416ae5:	xchg   edi,eax
  416ae6:	fild   DWORD PTR [edx+0x1d]
  416ae9:	pop    eax
  416aea:	rol    DWORD PTR [ecx+0x37],0x9c
  416aee:	jo     0x416b0e
  416af0:	ret    0xef55
  416af3:	loope  0x416abd
  416af5:	jo     0x416b6c
  416af7:	xchg   DWORD PTR [edx],ebx
  416af9:	xchg   ecx,eax
  416afa:	mov    cl,0xce
  416afc:	fidivr WORD PTR [eax+eiz*1-0x7e46e2e8]
  416b03:	jecxz  0x416a8b
  416b05:	sub    esp,edi
  416b07:	sbb    eax,0x92df4494
  416b0c:	daa    
  416b0d:	push   0xffffffb0
  416b0f:	in     al,dx
  416b10:	pop    edi
  416b11:	mov    eax,ds:0xf9d0a174
  416b16:	add    DWORD PTR [ebx-0x59f6cc9b],ecx
  416b1c:	jo     0x416abb
  416b1e:	jno    0x416b37
  416b20:	call   0x3a9d:0x329773d4
  416b27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b28:	sbb    bh,dh
  416b2a:	add    al,0xf5
  416b2c:	stc    
  416b2d:	xlat   BYTE PTR ds:[ebx]
  416b2e:	lea    esi,[ecx+0x74]
  416b31:	cmp    BYTE PTR [edi+0x724b68c6],ah
  416b37:	sub    ah,BYTE PTR [ecx+0x40]
  416b3a:	(bad)  
  416b3b:	or     esp,DWORD PTR [eax-0x2f0c525e]
  416b41:	and    esi,ebp
  416b43:	mov    al,0x6b
  416b45:	stc    
  416b46:	stos   BYTE PTR es:[edi],al
  416b47:	repnz and eax,0x64240a38
  416b4d:	fdiv   st(3),st
  416b4f:	sar    DWORD PTR [ecx+esi*4],cl
  416b52:	(bad)  
  416b53:	int    0x6b
  416b55:	fcmovnb st,st(7)
  416b57:	cld    
  416b58:	sti    
  416b59:	sbb    edi,DWORD PTR [ebx+0x1a]
  416b5c:	jbe    0x416b90
  416b5e:	adc    eax,0xb5c59098
  416b63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b64:	enter  0x2cf0,0x8a
  416b68:	sub    ah,cl
  416b6a:	fbld   TBYTE PTR [ebx-0x373e8cb2]
  416b70:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  416b72:	lods   eax,DWORD PTR ds:[esi]
  416b73:	sub    edx,DWORD PTR [edx]
  416b75:	or     al,BYTE PTR [edx]
  416b77:	ds mov ebp,0x9cd64d80
  416b7d:	mov    eax,0x94792cdd
  416b82:	lahf   
  416b83:	mov    al,es:0xac332f05
  416b89:	enter  0x8a41,0x7f
  416b8d:	dec    ecx
  416b8e:	fild   WORD PTR [ebx-0x31e6cb6f]
  416b94:	ins    BYTE PTR es:[edi],dx
  416b95:	push   0x11
  416b97:	sbb    cl,BYTE PTR [esi+0x53]
  416b9a:	std    
  416b9b:	sbb    DWORD PTR [esi-0x67],ebx
  416b9e:	ror    DWORD PTR [edx+0x35b02ce4],1
  416ba4:	imul   ebx,DWORD PTR [ecx+edx*4+0x581b8425],0xeb237875
  416baf:	or     esp,ebx
  416bb1:	lahf   
  416bb2:	jno    0x416bfd
  416bb4:	pop    ecx
  416bb5:	jl     0x416be7
  416bb7:	(bad)  
  416bb8:	jae    0x416bd3
  416bba:	mov    ah,0xe
  416bbc:	loop   0x416c02
  416bbe:	xchg   esp,eax
  416bbf:	lods   eax,DWORD PTR ds:[esi]
  416bc0:	out    dx,eax
  416bc1:	std    
  416bc2:	mov    eax,0xa209550c
  416bc7:	mov    ds,WORD PTR [ecx+0x19685ebe]
  416bcd:	ins    BYTE PTR es:[edi],dx
  416bce:	add    eax,DWORD PTR [eax]
  416bd0:	adc    eax,0xc6f750f2
  416bd5:	pop    eax
  416bd6:	mov    edi,0xd6f2ee2e
  416bdb:	sbb    BYTE PTR [ecx-0x76fa073d],ch
  416be1:	loopne 0x416c05
  416be3:	add    DWORD PTR [eax+0x4e],ecx
  416be6:	or     al,bl
  416be8:	mov    fs,WORD PTR [ebp-0x26]
  416beb:	(bad)  
  416bec:	mov    ds:0x8e5f0006,al
  416bf1:	lea    eax,[edi+0x72]
  416bf4:	xchg   esp,eax
  416bf5:	test   DWORD PTR [esi],ecx
  416bf7:	fs std 
  416bf9:	lock xchg edx,eax
  416bfb:	push   ecx
  416bfc:	das    
  416bfd:	mov    edi,0xf701c6ac
  416c02:	and    ebp,DWORD PTR [ebp-0x43263dc3]
  416c08:	loope  0x416c17
  416c0a:	(bad)  
  416c0b:	push   es
  416c0c:	outs   dx,BYTE PTR ds:[esi]
  416c0d:	nop
  416c0e:	in     al,0xa0
  416c10:	or     BYTE PTR [edi+0x5e],dl
  416c13:	cli    
  416c14:	sahf   
  416c15:	fild   QWORD PTR [ecx-0x3c]
  416c18:	pop    ecx
  416c19:	int    0x24
  416c1b:	out    dx,al
  416c1c:	jmp    0x416c8b
  416c1e:	repnz aaa 
  416c20:	sbb    bh,BYTE PTR [eax]
  416c22:	gs cld 
  416c24:	int    0x41
  416c26:	jo     0x416c38
  416c28:	add    eax,0x818e25ba
  416c2d:	fwait
  416c2e:	(bad)  
  416c2f:	stos   DWORD PTR es:[edi],eax
  416c30:	pop    ss
  416c31:	xchg   ecx,eax
  416c32:	or     BYTE PTR [ecx-0x5f],al
  416c35:	(bad)  
  416c36:	repz xchg ebp,eax
  416c38:	mov    esp,0xfae8cd21
  416c3d:	or     DWORD PTR [esi+0x461f0c96],esi
  416c43:	retf   0x77eb
  416c46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c47:	loop   0x416c16
  416c49:	xor    BYTE PTR [edx+0x480cb925],al
  416c4f:	mov    ebx,0x46e47b46
  416c54:	or     BYTE PTR [esi-0x1e],bl
  416c57:	and    al,cl
  416c59:	mov    ds:0x430bec39,al
  416c5e:	pop    eax
  416c5f:	int    0x1f
  416c61:	(bad)  
  416c62:	out    dx,al
  416c63:	xor    BYTE PTR [ebp+0x4fcda2ee],bl
  416c69:	xchg   DWORD PTR ds:0xa9b25554,edi
  416c6f:	outs   dx,DWORD PTR ds:[esi]
  416c70:	adc    al,0x44
  416c72:	and    ecx,edx
  416c74:	pop    esi
  416c75:	sub    DWORD PTR [ebx+0x9],0xae988b2f
  416c7c:	sahf   
  416c7d:	sbb    al,0xd
  416c7f:	outs   dx,BYTE PTR ds:[esi]
  416c80:	test   BYTE PTR [edi+0x46190d0a],bl
  416c86:	aam    0x2d
  416c88:	je     0x416c5b
  416c8a:	stos   DWORD PTR es:[edi],eax
  416c8b:	push   ds
  416c8c:	adc    BYTE PTR [ecx],0x7f
  416c8f:	adc    al,0x4e
  416c91:	mov    BYTE PTR [edx+ecx*8+0x25],dl
  416c95:	sbb    BYTE PTR [edx+eax*4+0x4],ah
  416c99:	std    
  416c9a:	or     edx,ecx
  416c9c:	cdq    
  416c9d:	fist   DWORD PTR [edi+0x4e]
  416ca0:	stos   BYTE PTR es:[edi],al
  416ca1:	pop    esi
  416ca2:	or     BYTE PTR [ebx-0x80],bh
  416ca5:	es aaa 
  416ca7:	xor    ebp,DWORD PTR [ecx+0x2bd8ce57]
  416cad:	sbb    eax,0x4546376
  416cb2:	das    
  416cb3:	cmp    BYTE PTR [ecx+0x6e],cl
  416cb6:	or     ebp,eax
  416cb8:	ins    BYTE PTR es:[edi],dx
  416cb9:	sbb    ebp,DWORD PTR [edx]
  416cbb:	cmc    
  416cbc:	lahf   
  416cbd:	jnp    0x416c5a
  416cbf:	popf   
  416cc0:	retf   
  416cc1:	mov    dh,0x77
  416cc3:	aad    0x62
  416cc5:	cmc    
  416cc6:	pop    ecx
  416cc7:	pop    esi
  416cc8:	add    BYTE PTR ds:0x928f84f1,ch
  416cce:	sbb    ebx,esi
  416cd0:	push   edx
  416cd1:	jmp    0x416d50
  416cd3:	pop    ecx
  416cd4:	inc    edx
  416cd5:	xlat   BYTE PTR ds:[ebx]
  416cd6:	xchg   edi,eax
  416cd7:	xchg   BYTE PTR [eax],dh
  416cd9:	mov    ebp,0x60127e94
  416cde:	xor    bl,BYTE PTR [eax+eax*8-0x76]
  416ce2:	fild   QWORD PTR [ebp-0x45]
  416ce5:	scas   al,BYTE PTR es:[edi]
  416ce6:	cld    
  416ce7:	std    
  416ce8:	cmp    BYTE PTR [esi+0x3],bl
  416ceb:	and    ah,BYTE PTR [ecx]
  416ced:	inc    edi
  416cee:	dec    edi
  416cef:	(bad)  
  416cf0:	lods   al,BYTE PTR ds:[esi]
  416cf1:	ss leave 
  416cf3:	push   es
  416cf4:	jg     0x416cd2
  416cf6:	jp     0x416caf
  416cf8:	fcomp  DWORD PTR ds:0xfc9ef6f1
  416cfe:	aad    0xd0
  416d00:	xor    dh,BYTE PTR [edi-0x414ee175]
  416d06:	dec    esp
  416d07:	clc    
  416d08:	jnp    0x416d0f
  416d0a:	es fdiv st,st(6)
  416d0e:	addr16 sbb eax,0x2e3fa5f3
  416d15:	or     eax,0x112d5261
  416d1a:	pusha  
  416d1b:	xchg   ecx,eax
  416d1c:	cmp    eax,0xc733383b
  416d21:	rol    DWORD PTR [eax+0x29],0xdb
  416d25:	cmp    bh,bh
  416d27:	(bad)  
  416d29:	adc    BYTE PTR [esi+0x6a],ah
  416d2c:	inc    edi
  416d2d:	jbe    0x416d5f
  416d2f:	imul   ebx,edx,0xa1d15694
  416d35:	mov    al,ds:0x85fb1a31
  416d3a:	push   es
  416d3b:	xlat   BYTE PTR ds:[ebx]
  416d3c:	lods   al,BYTE PTR ds:[esi]
  416d3d:	div    DWORD PTR [edx+0x23500e9]
  416d43:	xchg   BYTE PTR [edi+edi*4+0x8cf3d42],bh
  416d4a:	loop   0x416db2
  416d4c:	sbb    DWORD PTR [esi+edx*2+0x6d1acf3c],esp
  416d53:	bnd ja 0x416d45
  416d56:	mov    ch,0x15
  416d58:	pop    edx
  416d59:	lods   eax,DWORD PTR ds:[esi]
  416d5a:	cmp    eax,0x42ebcd5d
  416d5f:	rcl    al,0xdb
  416d62:	or     BYTE PTR [ecx-0x62],ah
  416d65:	loope  0x416dc9
  416d67:	or     BYTE PTR [ebx-0x393f032e],bl
  416d6d:	ss mov bh,0x37
  416d70:	jae    0x416dbe
  416d72:	mov    ch,BYTE PTR [edi+0x68]
  416d75:	cmp    ecx,ecx
  416d77:	(bad)  
  416d78:	mov    ebp,0xaafeed62
  416d7d:	cmp    ch,bh
  416d7f:	sbb    al,0xa1
  416d81:	rcr    DWORD PTR [esi+0x25f7fd05],cl
  416d87:	xchg   dl,cl
  416d89:	aad    0xf5
  416d8b:	jns    0x416dc4
  416d8d:	je     0x416d17
  416d8f:	push   ecx
  416d90:	mov    ecx,0xc1ba7561
  416d95:	mov    bh,0x71
  416d97:	out    0x14,eax
  416d99:	push   edi
  416d9a:	push   edx
  416d9b:	and    eax,0x4a89c37a
  416da0:	xchg   ebx,eax
  416da1:	test   DWORD PTR [eax+edx*4],esi
  416da4:	test   eax,0x22164057
  416da9:	push   esi
  416daa:	fldcw  WORD PTR [esi-0x23987344]
  416db0:	mov    al,0xf4
  416db2:	adc    DWORD PTR [ecx+0x38361dbc],ebx
  416db8:	adc    eax,0x3e2cd7ab
  416dbd:	(bad)  
  416dbe:	cs pop esi
  416dc0:	imul   edx,DWORD PTR [eax+edx*8],0xffffffc1
  416dc4:	pop    si
  416dc6:	test   al,0x3
  416dc8:	mov    ecx,ebx
  416dca:	into   
  416dcb:	and    cl,ch
  416dcd:	pop    ebx
  416dce:	adc    BYTE PTR [ecx-0x1c],dh
  416dd1:	sahf   
  416dd2:	ins    DWORD PTR es:[edi],dx
  416dd3:	push   ecx
  416dd4:	arpl   WORD PTR [ebx+0xfd38d2e],si
  416dda:	and    ebx,esi
  416ddc:	in     eax,dx
  416ddd:	jno    0x416db9
  416ddf:	cmp    eax,0x649f0b0
  416de4:	and    al,0xba
  416de6:	jb     0x416d7c
  416de8:	dec    eax
  416de9:	test   al,0x3
  416deb:	mov    DWORD PTR [eax+0x7dd8532b],esi
  416df1:	xor    ebx,DWORD PTR [eax-0xe]
  416df4:	lods   eax,DWORD PTR ds:[esi]
  416df5:	jno    0x416e75
  416df7:	cmp    DWORD PTR [esp+esi*8],edx
  416dfa:	sti    
  416dfb:	sar    BYTE PTR [ebp+0x45],1
  416dfe:	cs in  eax,0xf6
  416e01:	mov    WORD PTR [esi+ecx*2],gs
  416e04:	mov    eax,0x5dbeed90
  416e09:	fisub  DWORD PTR [eax+0x13]
  416e0c:	ror    ebx,1
  416e0e:	add    esp,DWORD PTR [ebp-0x7b9393a5]
  416e14:	gs cld 
  416e16:	mov    esp,0xeac52ed0
  416e1b:	mov    ebx,DWORD PTR [esi+0x244a6e60]
  416e21:	or     DWORD PTR [edi+0x4d],ebx
  416e24:	shr    BYTE PTR [edi+0x12],1
  416e27:	sub    BYTE PTR ds:0x774bbdc4,ch
  416e2d:	lods   eax,DWORD PTR ds:[esi]
  416e2e:	icebp  
  416e2f:	sub    eax,0x1349e607
  416e34:	mov    al,ds:0x50dd7d6c
  416e39:	push   ss
  416e3a:	retf   0xa85f
  416e3d:	adc    eax,0x67694097
  416e42:	and    ebx,DWORD PTR [edx+0x51]
  416e45:	(bad)  
  416e46:	or     bh,BYTE PTR [edi-0x40]
  416e49:	add    esi,ebx
  416e4b:	xor    bh,BYTE PTR [ebx+0x7df3eeac]
  416e51:	xor    BYTE PTR [esi-0x7c35ee23],dl
  416e57:	inc    ecx
  416e58:	jecxz  0x416e21
  416e5a:	xchg   edx,eax
  416e5b:	xlat   BYTE PTR ds:[ebx]
  416e5c:	or     eax,0x77f8764f
  416e61:	push   cs
  416e62:	into   
  416e63:	arpl   WORD PTR [ecx-0x608670ab],bp
  416e69:	call   0xa7be:0xf862e2f8
  416e70:	dec    eax
  416e71:	xor    DWORD PTR [ebx-0x73258719],0x6c
  416e78:	mov    edi,0xbb0fd36c
  416e7d:	into   
  416e7e:	mov    al,ds:0x42772f50
  416e83:	pop    ebp
  416e84:	pop    DWORD PTR [ecx-0x172bc20b]
  416e8a:	mov    edx,0x459bd9a8
  416e8f:	or     ah,ah
  416e91:	mov    edi,DWORD PTR [ebx+0x40126238]
  416e97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416e98:	mov    bl,0x51
  416e9a:	rcl    ax,cl
  416e9d:	int    0x86
  416e9f:	push   eax
  416ea0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ea1:	dec    edx
  416ea2:	mov    ecx,0x65d880b0
  416ea7:	retf   
  416ea8:	mov    ah,0x4d
  416eaa:	lea    edx,[ecx]
  416eac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ead:	xchg   ebp,eax
  416eae:	adc    bl,bh
  416eb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eb1:	outs   dx,BYTE PTR ds:[esi]
  416eb2:	ja     0x416ee2
  416eb4:	inc    esi
  416eb5:	test   eax,0x8877d804
  416eba:	mov    al,0xde
  416ebc:	shl    BYTE PTR [edx-0x13],cl
  416ebf:	sbb    ch,BYTE PTR [ebx]
  416ec1:	pop    esp
  416ec2:	imul   esp,DWORD PTR [esi-0x55c67cd6],0xffffff98
  416ec9:	xchg   ebx,eax
  416eca:	(bad)  
  416ecb:	xor    eax,DWORD PTR [ebp-0x10fe7de0]
  416ed1:	icebp  
  416ed2:	jnp    0x416e54
  416ed4:	mov    al,BYTE PTR [ecx-0xc]
  416ed7:	repz cmp ebp,esi
  416eda:	jno    0x416f57
  416edc:	stos   DWORD PTR es:[edi],eax
  416edd:	or     BYTE PTR [ebx-0x3f],bh
  416ee0:	add    al,0x55
  416ee2:	mov    al,0x66
  416ee4:	and    al,bh
  416ee6:	cwde   
  416ee7:	(bad)  
  416ee8:	push   ss
  416ee9:	mov    edi,0x8fb36aa4
  416eee:	aaa    
  416eef:	repnz adc eax,0x66351b75
  416ef5:	int    0x40
  416ef7:	call   0xd2831a83
  416efc:	and    al,0xea
  416efe:	xchg   esi,eax
  416eff:	mov    ch,0x26
  416f01:	add    ch,BYTE PTR [esi+eiz*8+0x40db0ca5]
  416f08:	sbb    DWORD PTR [edx],esp
  416f0a:	fadd   QWORD PTR [ebx]
  416f0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f0d:	sbb    eax,0x64832296
  416f12:	test   DWORD PTR [esi-0x2a],ebx
  416f15:	jmp    0x416e9f
  416f17:	rol    BYTE PTR [ecx+0x134a21d0],0x7
  416f1e:	mov    eax,0x125c0e93
  416f23:	cwde   
  416f24:	int    0x72
  416f26:	adc    al,ah
  416f28:	adc    dh,BYTE PTR [esi+0x2b2d2552]
  416f2e:	call   0xd7357e32
  416f33:	in     eax,0xc4
  416f35:	jge    0x416f8c
  416f37:	jp     0x416fb0
  416f39:	mov    al,ds:0x8e63eda7
  416f3e:	fild   WORD PTR [ebx-0x2932e5aa]
  416f44:	ins    DWORD PTR es:[edi],dx
  416f45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f46:	repz in al,dx
  416f48:	ror    BYTE PTR [edi-0x6d],0x18
  416f4c:	jns    0x416f09
  416f4e:	jne    0x416f10
  416f50:	jl     0x416f1c
  416f52:	int3   
  416f53:	jo     0x416ee3
  416f55:	push   0x6eb1fead
  416f5a:	fcom   DWORD PTR [edx-0x19]
  416f5d:	(bad)  
  416f5e:	gs cmc 
  416f60:	dec    esp
  416f61:	in     eax,0xd7
  416f63:	imul   DWORD PTR [ebp+0x2c63fb15]
  416f69:	sub    DWORD PTR ds:[esi+edi*2],0x580303a9
  416f71:	pop    ds
  416f72:	imul   esp,DWORD PTR [ebx-0x76b17ce7],0xfffffff3
  416f79:	pop    ebp
  416f7a:	jae    0x416f4a
  416f7c:	inc    ebp
  416f7d:	je     0x416fd7
  416f7f:	mov    BYTE PTR [edi+0x8],bl
  416f82:	ret    
  416f83:	inc    ebp
  416f84:	test   bl,dh
  416f86:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f88:	nop
  416f89:	dec    esi
  416f8a:	cmp    al,0x6a
  416f8c:	daa    
  416f8d:	(bad)  
  416f8e:	xchg   edx,eax
  416f8f:	mov    edi,0x4e2830cf
  416f94:	inc    eax
  416f95:	jecxz  0x416fa3
  416f97:	sti    
  416f98:	sbb    dl,al
  416f9a:	fstp   TBYTE PTR [eax-0x43]
  416f9d:	fsub   st(4),st
  416f9f:	mov    dl,0x30
  416fa1:	dec    edi
  416fa2:	mov    ecx,0x2144b28
  416fa7:	(bad)  
  416fa8:	(bad)  [ebp+0x44]
  416fab:	inc    eax
  416fac:	and    esp,esp
  416fae:	xor    eax,0xc6bc9556
  416fb3:	and    esi,DWORD PTR [ecx]
  416fb5:	pop    ebx
  416fb6:	leave  
  416fb7:	scas   al,BYTE PTR es:[edi]
  416fb8:	xchg   ebx,eax
  416fb9:	pop    fs
  416fbb:	push   ss
  416fbc:	aas    
  416fbd:	adc    dl,dh
  416fbf:	or     esp,eax
  416fc1:	push   ss
  416fc2:	icebp  
  416fc3:	stc    
  416fc4:	dec    esi
  416fc5:	cwde   
  416fc6:	xor    ch,BYTE PTR [esi+0x160e063f]
  416fcc:	add    BYTE PTR [eax],0x83
  416fcf:	test   eax,0x76baa85c
  416fd4:	test   DWORD PTR [edx],ebx
  416fd6:	adc    dl,bl
  416fd8:	adc    eax,0x1036865
  416fdd:	xchg   DWORD PTR [edi+0x60],edx
  416fe0:	jno    0x417054
  416fe2:	imul   ecx,DWORD PTR [edi-0x62],0x715f0543
  416fe9:	add    BYTE PTR [edi],bl
  416feb:	or     BYTE PTR [eax],al
  416fed:	clc    
  416fee:	cdq    
  416fef:	xlat   BYTE PTR es:[ebx]
  416ff1:	lds    edx,FWORD PTR [edx]
  416ff3:	push   ecx
  416ff4:	fdivr  DWORD PTR [edx-0x45]
  416ff7:	adc    ebx,DWORD PTR [eax+esi*4]
  416ffa:	out    0x42,eax
  416ffc:	in     eax,0x4e
  416ffe:	mov    esi,DWORD PTR [eax]
  417000:	ss adc al,0x1f
  417003:	sbb    eax,0xf85e433e
  417008:	mov    bh,0x4a
  41700a:	inc    eax
  41700b:	fs xor al,0xd4
  41700e:	and    al,0xb6
  417010:	push   cs
  417011:	fsubr  QWORD PTR [eax+0x2b]
  417014:	xchg   DWORD PTR [edi-0x15],edi
  417017:	les    ebp,FWORD PTR [edx+edx*8-0x64]
  41701b:	ja     0x416fb0
  41701d:	xchg   BYTE PTR [eax+0x6a426293],dl
  417023:	or     ah,cl
  417025:	mov    ch,0x94
  417027:	push   eax
  417028:	ror    DWORD PTR [ebx-0x4409a87e],0x2a
  41702f:	push   ebx
  417030:	je     0x416fe5
  417032:	les    esi,FWORD PTR [ecx-0x60]
  417035:	dec    esp
  417036:	popf   
  417037:	add    eax,0x48379f46
  41703c:	mov    BYTE PTR [ecx-0x20],bh
  41703f:	mov    ds:0x901b1294,eax
  417044:	push   ecx
  417045:	sti    
  417046:	jmp    0x1204:0xd218c718
  41704d:	inc    ebp
  41704e:	cmc    
  41704f:	idiv   dl
  417051:	and    edi,eax
  417053:	les    edi,FWORD PTR [edi+0x6a2a26ea]
  417059:	outs   dx,DWORD PTR ds:[esi]
  41705a:	enter  0xf312,0xa4
  41705e:	jae    0x417068
  417060:	sbb    BYTE PTR [ebx+0x74da89f2],0x31
  417067:	push   ss
  417068:	jg     0x4170bc
  41706a:	mov    bh,0x35
  41706c:	mov    esi,0xa3501093
  417071:	cmc    
  417072:	iret   
  417073:	mov    ebp,0x299155b4
  417078:	pushf  
  417079:	mov    al,ds:0x462673c9
  41707e:	fadd   DWORD PTR [ebx+edx*1-0x3b]
  417082:	jl     0x4170de
  417084:	rcr    edi,0xb5
  417087:	mov    DWORD PTR [ebx-0x396ee073],esp
  41708d:	bound  esi,QWORD PTR ds:0xbad53d8
  417093:	test   al,0xe9
  417095:	(bad)  
  417096:	sub    al,0x34
  417098:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417099:	mov    cl,0x39
  41709b:	int    0xdf
  41709d:	or     al,BYTE PTR [ebp-0x71d2f063]
  4170a3:	add    dl,0x9
  4170a6:	pop    eax
  4170a7:	into   
  4170a8:	js     0x4170f9
  4170aa:	or     eax,DWORD PTR [edx]
  4170ac:	adc    DWORD PTR [eax+0x54c21bbc],ecx
  4170b2:	add    DWORD PTR [ecx],esp
  4170b4:	stos   DWORD PTR es:[edi],eax
  4170b5:	int    0xfc
  4170b7:	je     0x4170f5
  4170b9:	sar    DWORD PTR [edi+0x4bac45a0],cl
  4170bf:	hlt    
  4170c0:	push   0xb023bb18
  4170c5:	dec    esi
  4170c6:	push   es
  4170c7:	popa   
  4170c8:	aam    0xa4
  4170ca:	push   esi
  4170cb:	jbe    0x4170b6
  4170cd:	aaa    
  4170ce:	and    al,0x5f
  4170d0:	jo     0x417070
  4170d2:	sub    dl,BYTE PTR [ebp-0x3d]
  4170d5:	loop   0x4170a6
  4170d7:	jg     0x4170a5
  4170d9:	sub    ch,BYTE PTR [edi+0x3735c087]
  4170df:	retf   0x6be0
  4170e2:	nop
  4170e3:	in     eax,0xc2
  4170e5:	loope  0x417160
  4170e7:	std    
  4170e8:	std    
  4170e9:	out    0x37,eax
  4170eb:	dec    edx
  4170ec:	xchg   DWORD PTR [esi-0x48c11d2e],ecx
  4170f2:	add    al,0xfc
  4170f4:	dec    ecx
  4170f5:	stos   BYTE PTR es:[edi],al
  4170f6:	xchg   edi,eax
  4170f7:	mov    BYTE PTR [eax-0xbc278fe],dh
  4170fd:	sbb    al,0x1a
  4170ff:	les    edi,FWORD PTR [ebp-0x6]
  417102:	xchg   ecx,eax
  417103:	iret   
  417104:	and    BYTE PTR [edi+0x61d71b39],al
  41710a:	xchg   DWORD PTR [ebx*2+0x171074af],esi
  417111:	mov    ebx,0xaebde6d5
  417116:	and    eax,0x443380fe
  41711b:	jmp    0x9de14e3a
  417120:	mov    eax,0xc12b7922
  417125:	mov    DWORD PTR [ebp-0x8],eax
  417128:	mov    ecx,DWORD PTR [ebp-0x4]
  41712b:	xor    ecx,esi
  41712d:	mov    eax,0xffcd8d08
  417132:	sub    eax,ecx
  417134:	add    DWORD PTR [ebp-0x8],eax
  417137:	mov    eax,DWORD PTR [ebp-0x14]
  41713a:	mov    DWORD PTR [eax],0x675565e9
  417140:	mov    DWORD PTR [eax+0x4],0x76576787
  417147:	mov    eax,DWORD PTR [ebp-0x8]
  41714a:	mov    ecx,DWORD PTR [ebp-0x14]
  41714d:	push   DWORD PTR [ebp-0x24]
  417150:	mov    DWORD PTR [ecx+0x1],eax
  417153:	mov    eax,ds:0x4281e1
  417158:	push   DWORD PTR [eax]
  41715a:	push   DWORD PTR ds:0x428445
  417160:	push   DWORD PTR ds:0x4281e9
  417166:	push   DWORD PTR ds:0x428425
  41716c:	push   DWORD PTR ds:0x428c15
  417172:	push   DWORD PTR [ebp-0x28]
  417175:	push   DWORD PTR [ebp-0x2c]
  417178:	mov    eax,DWORD PTR [ebp-0x14]
  41717b:	call   eax
  41717d:	pop    edi
  41717e:	pop    esi
  41717f:	leave  
  417180:	ret    
  417181:	push   ebp
  417182:	mov    ebp,esp
  417184:	sub    esp,0x34
  417187:	add    DWORD PTR ds:0x428e9d,ebx
  41718d:	push   ebx
  41718e:	push   esi
  41718f:	movzx  esi,WORD PTR ds:0x428e39
  417196:	or     DWORD PTR ds:0x428e31,esi
  41719c:	push   edi
  41719d:	mov    DWORD PTR [ebp-0x10],0xf89f85b9
  4171a4:	lea    eax,[ebp+0x14]
  4171a7:	mov    DWORD PTR [ebp-0x4],eax
  4171aa:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  4171b1:	sub    ecx,DWORD PTR ds:0x428eb9
  4171b7:	lea    eax,[ebp-0xc]
  4171ba:	xor    edx,ecx
  4171bc:	mov    DWORD PTR [ebp-0x14],eax
  4171bf:	and    DWORD PTR ds:0x428e39,0x0
  4171c9:	jmp    0x4171db
  4171ce:	mov    ecx,DWORD PTR ds:0x428e39
  4171d4:	inc    ecx
  4171d5:	mov    DWORD PTR ds:0x428e39,ecx
  4171db:	cmp    DWORD PTR ds:0x428e39,0x18
  4171e2:	jae    0x417215
  4171e8:	cmp    DWORD PTR ds:0x428e39,0x1b
  4171ef:	jbe    0x417215
  4171f5:	jmp    0x417210
  4171fa:	push   0x39b5
  4171ff:	push   DWORD PTR [ebp-0x14]
  417202:	push   DWORD PTR [ebp-0x14]
  417205:	push   0x5237
  41720a:	call   DWORD PTR ds:0x42ca3c
  417210:	jmp    0x4171ce
  417215:	mov    eax,DWORD PTR [ebp-0xc]
  417218:	mov    edx,DWORD PTR [ebp-0x14]
  41721b:	or     DWORD PTR ds:0x428e85,edx
  417221:	mov    ecx,0x75108b1
  417226:	xor    eax,ecx
  417228:	dec    DWORD PTR ds:0x428e85
  41722e:	add    eax,0x3272f8
  417233:	and    DWORD PTR ds:0x428eb5,0x0
  41723d:	jmp    0x41724f
  417242:	mov    esi,DWORD PTR ds:0x428eb5
  417248:	inc    esi
  417249:	mov    DWORD PTR ds:0x428eb5,esi
  41724f:	cmp    DWORD PTR ds:0x428eb5,0x19
  417256:	jae    0x41729d
  41725c:	cmp    DWORD PTR ds:0x428eb5,0x9
  417263:	jl     0x41729d
  417269:	jmp    0x41727e
  41726e:	push   0x428019
  417273:	push   0x1
  417275:	push   DWORD PTR [ebp-0x24]
  417278:	call   DWORD PTR ds:0x42ca4c
  41727e:	cmp    DWORD PTR ds:0x428eb5,0x8
  417285:	jne    0x417298
  41728b:	mov    esi,DWORD PTR ds:0x428eb5
  417291:	inc    esi
  417292:	mov    DWORD PTR ds:0x428eb5,esi
  417298:	jmp    0x417242
  41729d:	mov    DWORD PTR [edx],eax
  41729f:	mov    eax,ds:0x4281dd
  4172a4:	mov    edx,DWORD PTR [ebp-0x4]
  4172a7:	mov    eax,DWORD PTR [eax]
  4172a9:	mov    DWORD PTR ds:0x428ecd,0x15
  4172b3:	cmp    DWORD PTR ds:0x428ecd,0x0
  4172ba:	je     0x417309
  4172c0:	cmp    DWORD PTR ds:0x428ecd,0x6
  4172c7:	jg     0x417309
  4172cd:	jmp    0x4172dd
  4172d2:	push   0x50d0
  4172d7:	call   DWORD PTR ds:0x42ca50
  4172dd:	cmp    DWORD PTR ds:0x428ecd,0x7
  4172e4:	jne    0x4172f7
  4172ea:	mov    esi,DWORD PTR ds:0x428ecd
  4172f0:	dec    esi
  4172f1:	mov    DWORD PTR ds:0x428ecd,esi
  4172f7:	mov    esi,DWORD PTR ds:0x428ecd
  4172fd:	dec    esi
  4172fe:	mov    DWORD PTR ds:0x428ecd,esi
  417304:	jmp    0x4172b3
  417309:	add    eax,DWORD PTR [edx]
  41730b:	mov    DWORD PTR [ebp-0x8],eax
  41730e:	mov    esi,DWORD PTR [ebp+0x8]
  417311:	sbb    DWORD PTR ds:0x428e71,ebx
  417317:	mov    eax,ds:0x428365
  41731c:	mov    DWORD PTR ds:0x428e8d,0x5de4
  417326:	mov    eax,DWORD PTR [eax+0x198]
  41732c:	and    DWORD PTR ds:0x428eb1,0x0
  417336:	jmp    0x417348
  41733b:	mov    edx,DWORD PTR ds:0x428eb1
  417341:	inc    edx
  417342:	mov    DWORD PTR ds:0x428eb1,edx
  417348:	cmp    DWORD PTR ds:0x428eb1,0x1b
  41734f:	jae    0x41737f
  417355:	cmp    DWORD PTR ds:0x428eb1,0x26
  41735c:	jle    0x41737f
  417362:	jmp    0x41737a
  417367:	push   DWORD PTR [ebp-0x14]
  41736a:	push   0x42819a
  41736f:	push   0x428e5d
  417374:	call   DWORD PTR ds:0x42ca54
  41737a:	jmp    0x41733b
  41737f:	xor    esi,ecx
  417381:	and    DWORD PTR ds:0x428ec1,0x0
  41738b:	jmp    0x41739d
  417390:	mov    edx,DWORD PTR ds:0x428ec1
  417396:	inc    edx
  417397:	mov    DWORD PTR ds:0x428ec1,edx
  41739d:	cmp    DWORD PTR ds:0x428ec1,0x1c
  4173a4:	jae    0x4173f1
  4173aa:	cmp    DWORD PTR ds:0x428ec1,0x8
  4173b1:	jb     0x4173f1
  4173b7:	jmp    0x4173d2
  4173bc:	push   DWORD PTR [ebp-0x24]
  4173bf:	push   0x14a9
  4173c4:	push   0x3838
  4173c9:	push   DWORD PTR [ebp-0x20]
  4173cc:	call   DWORD PTR ds:0x42ca58
  4173d2:	cmp    DWORD PTR ds:0x428ec1,0x7
  4173d9:	jne    0x4173ec
  4173df:	mov    edx,DWORD PTR ds:0x428ec1
  4173e5:	inc    edx
  4173e6:	mov    DWORD PTR ds:0x428ec1,edx
  4173ec:	jmp    0x417390
  4173f1:	mov    edx,0x3272f8
  4173f6:	or     DWORD PTR ds:0x428e59,0x2d0a
  417400:	add    esi,edx
  417402:	mov    DWORD PTR ds:0x428e4d,0x9a6
  41740c:	cmp    DWORD PTR [eax],esi
  41740e:	mov    DWORD PTR ds:0x428e65,0x2339
  417418:	je     0x41742f
  41741e:	mov    eax,DWORD PTR [eax]
  417420:	mov    DWORD PTR ds:0x428ebd,0x152e
  41742a:	jmp    0x41e3db
  41742f:	sbb    esi,eax
  417431:	mov    eax,DWORD PTR [ebp+0x18]
  417434:	mov    esi,DWORD PTR ds:0x428e2d
  41743a:	adc    DWORD PTR ds:0x428e61,esi
  417440:	mov    esi,DWORD PTR [ebp+0x1c]
  417443:	or     ebx,0xffffffff
  417446:	mov    DWORD PTR ds:0x428ed1,0x15d
  417450:	cmp    eax,0x70941f8a
  417455:	mov    DWORD PTR ds:0x428e8d,0x42c3
  41745f:	jne    0x4174aa
  417465:	mov    DWORD PTR ds:0x428e2d,0x1eb5
  41746f:	cmp    esi,ebx
  417471:	mov    DWORD PTR ds:0x428ead,0x35c3
  41747b:	jne    0x4174aa
  417481:	mov    DWORD PTR ds:0x428e65,0x33a3
  41748b:	push   ebx
  41748c:	mov    DWORD PTR ds:0x428e49,0x2fe2
  417496:	push   0x70941f94
  41749b:	mov    DWORD PTR ds:0x428e41,0x2336
  4174a5:	jmp    0x41e3ca
  4174aa:	mov    DWORD PTR ds:0x428ea5,ebx
  4174b0:	mov    eax,DWORD PTR [ebp+0x18]
  4174b3:	mov    esi,DWORD PTR [ebp+0x1c]
  4174b6:	cmp    eax,0x70941f94
  4174bb:	mov    DWORD PTR ds:0x428e61,0x2bd8
  4174c5:	jne    0x4174f2
  4174cb:	cmp    esi,ebx
  4174cd:	mov    DWORD PTR ds:0x428e2d,0x15b3
  4174d7:	jne    0x4174f2
  4174dd:	push   ebx
  4174de:	mov    DWORD PTR ds:0x428e75,0x4e72
  4174e8:	push   0x70941f96
  4174ed:	jmp    0x41e3ca
  4174f2:	mov    eax,ds:0x428e59
  4174f7:	mov    eax,DWORD PTR [ebp+0x18]
  4174fa:	mov    esi,DWORD PTR [ebp+0x1c]
  4174fd:	cmp    eax,0x70941f96
  417502:	jne    0x417543
  417508:	mov    DWORD PTR ds:0x428e99,0x434f
  417512:	cmp    esi,ebx
  417514:	jne    0x417543
  41751a:	mov    DWORD PTR ds:0x428ec9,0x341e
  417524:	push   ebx
  417525:	mov    DWORD PTR ds:0x428e85,0x3720
  41752f:	push   0x70941f90
  417534:	mov    DWORD PTR ds:0x428eb1,0x674c
  41753e:	jmp    0x41e3ca
  417543:	mov    eax,DWORD PTR [ebp+0x18]
  417546:	mov    esi,DWORD PTR [ebp+0x1c]
  417549:	mov    DWORD PTR ds:0x428e69,0x6330
  417553:	cmp    eax,0x70941f90
  417558:	jne    0x417599
  41755e:	cmp    esi,ebx
  417560:	mov    DWORD PTR ds:0x428e45,0x5688
  41756a:	jne    0x417599
  417570:	mov    DWORD PTR ds:0x428e69,0x61b3
  41757a:	push   ebx
  41757b:	mov    DWORD PTR ds:0x428e4d,0x6bb8
  417585:	push   0x70941f92
  41758a:	mov    DWORD PTR ds:0x428e2d,0x777c
  417594:	jmp    0x41e3ca
  417599:	mov    eax,DWORD PTR [ebp+0x18]
  41759c:	mov    edi,DWORD PTR ds:0x428e89
  4175a2:	mov    esi,DWORD PTR [ebp+0x1c]
  4175a5:	mov    edi,0x70941f9e
  4175aa:	mov    DWORD PTR ds:0x428ea1,0x2f43
  4175b4:	cmp    eax,edi
  4175b6:	mov    DWORD PTR ds:0x428eb1,0x498f
  4175c0:	jne    0x41e38b
  4175c6:	cmp    esi,ebx
  4175c8:	mov    DWORD PTR ds:0x428e71,0x5df9
  4175d2:	jne    0x41e38b
  4175d8:	sbb    eax,eax
  4175da:	mov    eax,DWORD PTR [ebp+0x10]
  4175dd:	and    DWORD PTR ds:0x428ea9,0x0
  4175e7:	jmp    0x4175fb
  4175ec:	xor    esi,esi
  4175ee:	xor    esi,DWORD PTR ds:0x428ea9
  4175f4:	inc    esi
  4175f5:	mov    DWORD PTR ds:0x428ea9,esi
  4175fb:	cmp    DWORD PTR ds:0x428ea9,0x1f
  417602:	jae    0x417655
  417608:	cmp    DWORD PTR ds:0x428ea9,0x5
  41760f:	jge    0x417655
  417615:	jmp    0x417636
  41761a:	push   DWORD PTR [ebp-0x10]
  41761d:	push   DWORD PTR [ebp-0x24]
  417620:	push   DWORD PTR [ebp-0x28]
  417623:	push   0x8725
  417628:	push   0x42814e
  41762d:	push   DWORD PTR [ebp-0x14]
  417630:	call   DWORD PTR ds:0x42ca10
  417636:	cmp    DWORD PTR ds:0x428ea9,0x4
  41763d:	jne    0x417650
  417643:	mov    esi,DWORD PTR ds:0x428ea9
  417649:	inc    esi
  41764a:	mov    DWORD PTR ds:0x428ea9,esi
  417650:	jmp    0x4175ec
  417655:	xor    eax,ecx
  417657:	add    eax,edx
  417659:	and    DWORD PTR ds:0x428e65,0x0
  417663:	jmp    0x417675
  417668:	mov    edi,DWORD PTR ds:0x428e65
  41766e:	inc    edi
  41766f:	mov    DWORD PTR ds:0x428e65,edi
  417675:	cmp    DWORD PTR ds:0x428e65,0x13
  41767c:	jae    0x4176b6
  417682:	cmp    DWORD PTR ds:0x428e65,0x15
  417689:	jbe    0x4176b6
  41768f:	jmp    0x4176b1
  417694:	push   DWORD PTR [ebp-0x20]
  417697:	push   0x1f3c
  41769c:	push   0x8271
  4176a1:	push   0x8e4d
  4176a6:	push   0x428ec5
  4176ab:	call   DWORD PTR ds:0x42ca14
  4176b1:	jmp    0x417668
  4176b6:	mov    DWORD PTR [ebp-0x20],eax
  4176b9:	mov    eax,DWORD PTR [ebp+0xc]
  4176bc:	mov    esi,DWORD PTR [ebp-0x8]
  4176bf:	xor    eax,ecx
  4176c1:	add    eax,edx
  4176c3:	imul   eax,DWORD PTR [esi]
  4176c6:	mov    esi,DWORD PTR [ebp+0x8]
  4176c9:	xor    esi,ecx
  4176cb:	add    esi,edx
  4176cd:	cmp    esi,eax
  4176cf:	mov    eax,DWORD PTR [ebp-0x4]
  4176d2:	mov    edi,0xffcd8d08
  4176d7:	je     0x4176f6
  4176dd:	mov    esi,DWORD PTR [ebp-0x20]
  4176e0:	add    DWORD PTR [eax],esi
  4176e2:	mov    eax,DWORD PTR [ebp-0x4]
  4176e5:	mov    esi,DWORD PTR [ebp+0xc]
  4176e8:	xor    esi,ecx
  4176ea:	add    esi,edx
  4176ec:	imul   esi,DWORD PTR [eax]
  4176ef:	mov    DWORD PTR [eax],esi
  4176f1:	jmp    0x4176fb
  4176f6:	mov    esi,DWORD PTR [ebp+0x14]
  4176f9:	xor    DWORD PTR [eax],esi
  4176fb:	mov    eax,DWORD PTR [ebp-0x4]
  4176fe:	mov    esi,DWORD PTR [ebp+0x10]
  417701:	xor    esi,ecx
  417703:	sub    edi,esi
  417705:	add    DWORD PTR [eax],edi
  417707:	mov    eax,DWORD PTR [ebp-0x4]
  41770a:	mov    esi,DWORD PTR [ebp-0x8]
  41770d:	add    esi,DWORD PTR [eax]
  41770f:	mov    DWORD PTR [ebp-0x8],esi
  417712:	mov    eax,DWORD PTR [ebp+0xc]
  417715:	mov    esi,DWORD PTR [ebp+0xc]
  417718:	xor    esi,ecx
  41771a:	xor    eax,ecx
  41771c:	lea    eax,[eax+esi*1+0x64e5f0]
  417723:	mov    esi,DWORD PTR [ebp+0xc]
  417726:	xor    esi,ecx
  417728:	add    esi,edx
  41772a:	imul   eax,esi
  41772d:	mov    esi,DWORD PTR [ebp+0xc]
  417730:	jmp    0x419aea
  417735:	sbb    DWORD PTR [edx+0x3a2c7d2b],ecx
  41773b:	cmp    DWORD PTR [edx],ebx
  41773d:	inc    edi
  41773e:	fst    st(5)
  417740:	inc    ecx
  417741:	cmp    bh,BYTE PTR [ecx-0x4655e8eb]
  417747:	jl     0x4177c4
  417749:	sbb    BYTE PTR [esi+0x45037b7b],bl
  41774f:	out    0x5a,eax
  417751:	into   
  417752:	out    0xd7,eax
  417754:	sbb    BYTE PTR [edi-0x56],al
  417757:	or     bh,bh
  417759:	into   
  41775a:	pop    edx
  41775b:	xchg   ah,ah
  41775d:	lds    ebp,FWORD PTR [edx]
  41775f:	jle    0x41777b
  417761:	in     eax,dx
  417762:	add    al,0xbc
  417764:	sub    DWORD PTR ds:0x117df192,edi
  41776a:	sub    ebp,0x15f982bb
  417770:	std    
  417771:	ss sti 
  417773:	add    DWORD PTR [edi+0x79121f43],edi
  417779:	pop    esi
  41777a:	sub    DWORD PTR [eax-0x3c],ecx
  41777d:	jb     0x4177a8
  41777f:	mov    DWORD PTR [edi+0x2b],esi
  417782:	imul   esp,eax,0xffffff8e
  417785:	push   edi
  417786:	mov    fs,WORD PTR [ebx]
  417788:	jb     0x417720
  41778a:	dec    edx
  41778b:	int    0xb2
  41778d:	xchg   esp,eax
  41778e:	out    dx,eax
  41778f:	jmp    0x43f019a9
  417794:	dec    ecx
  417795:	es sbb al,0x65
  417798:	shl    ah,1
  41779a:	xor    ebx,edi
  41779c:	and    dh,BYTE PTR [ecx+0x2ec05c5b]
  4177a2:	(bad)  
  4177a3:	loopne 0x417725
  4177a5:	mov    ecx,DWORD PTR [eax]
  4177a7:	jae    0x41772c
  4177a9:	popa   
  4177aa:	mov    al,0x85
  4177ac:	(bad)  
  4177ad:	out    0x7d,al
  4177af:	xchg   DWORD PTR [eax+ebp*1+0x41],ebp
  4177b3:	jbe    0x417760
  4177b5:	movups xmm0,XMMWORD PTR [ebx+0x3d]
  4177b9:	int    0x67
  4177bb:	pusha  
  4177bc:	repnz sub edi,DWORD PTR ds:0x337d1d07
  4177c3:	cld    
  4177c4:	sar    BYTE PTR ds:0xe1eeb1da,0x1b
  4177cb:	shr    DWORD PTR [ecx],cl
  4177cd:	mov    esp,0x1c2ec7db
  4177d2:	mov    ss,WORD PTR [eax+0x24]
  4177d5:	aaa    
  4177d6:	outs   dx,BYTE PTR ds:[esi]
  4177d7:	xchg   ebp,eax
  4177d8:	(bad)  
  4177d9:	ss sar edi,0x96
  4177dd:	mov    ebp,0x63a31bf6
  4177e2:	and    DWORD PTR [edx+0x18],ebx
  4177e5:	jno    0x4177b1
  4177e7:	call   DWORD PTR [ebp+0x3d]
  4177ea:	inc    eax
  4177eb:	stos   DWORD PTR es:[edi],eax
  4177ec:	dec    ecx
  4177ed:	cmp    dh,BYTE PTR [ebx-0xb]
  4177f0:	xchg   ebx,eax
  4177f1:	xor    eax,0x40e9d848
  4177f6:	xor    esi,ecx
  4177f8:	push   0x7c
  4177fa:	(bad)  
  4177fb:	jmp    0x2dcd5870
  417800:	out    0x38,al
  417802:	sub    al,cl
  417804:	mov    edi,0xbefa62d0
  417809:	jbe    0x4177a5
  41780b:	or     esp,DWORD PTR [eax-0x2b]
  41780e:	sbb    ebx,DWORD PTR [edx+0x7ecb012b]
  417814:	jne    0x417839
  417816:	pusha  
  417817:	add    al,0x61
  417819:	xchg   edx,eax
  41781a:	loopne 0x41785e
  41781c:	pop    ds
  41781d:	dec    BYTE PTR [edi]
  41781f:	jnp    0x41781d
  417821:	xor    esi,DWORD PTR [esi+0x10a0a1f]
  417827:	shl    BYTE PTR [ebp-0x2],cl
  41782a:	and    eax,0x54288d27
  41782f:	pop    esp
  417830:	pop    edx
  417831:	mov    ds:0xf8738014,al
  417836:	cmp    bl,BYTE PTR [edi+0x4f]
  417839:	inc    esp
  41783a:	jge    0x417839
  41783c:	dec    ebp
  41783d:	adc    al,0x90
  41783f:	mov    ecx,0xaef04313
  417844:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417845:	out    dx,al
  417846:	dec    eax
  417847:	and    al,0x60
  417849:	gs cwde 
  41784b:	jo     0x4178b0
  41784d:	rcr    DWORD PTR [ebp+esi*1-0x26],0x8d
  417852:	xor    dl,dl
  417854:	repnz xchg esi,eax
  417856:	stc    
  417857:	std    
  417858:	ret    
  417859:	mov    cl,0x3d
  41785b:	js     0x417849
  41785d:	xchg   edi,eax
  41785e:	inc    esp
  41785f:	rcr    BYTE PTR [ecx-0x9f1d080],0x83
  417866:	fisttp DWORD PTR [ecx+0x24]
  417869:	mov    al,ds:0x3e530ace
  41786e:	sbb    al,0xfd
  417870:	mov    bh,0xdf
  417872:	fdivr  st(3),st
  417874:	repnz pop es
  417876:	add    edi,DWORD PTR [eax+ebx*1-0x6ae6471a]
  41787d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41787e:	pop    esi
  41787f:	mov    dl,BYTE PTR [edx-0x5]
  417882:	call   0xba8b86a0
  417887:	mov    ds:0x6e35675b,al
  41788c:	pop    eax
  41788d:	adc    dl,BYTE PTR [ecx]
  41788f:	dec    ebx
  417890:	mov    ecx,DWORD PTR [ecx+0x35]
  417893:	push   esp
  417894:	or     DWORD PTR [eax-0x6449cd19],0x3e
  41789b:	fsub   DWORD PTR [edi-0x62452cda]
  4178a1:	xchg   ebx,eax
  4178a2:	(bad)  
  4178a3:	sti    
  4178a4:	lds    edi,FWORD PTR [edx+0x53]
  4178a7:	add    edi,edi
  4178a9:	jae    0x41788c
  4178ab:	fistp  QWORD PTR [edi-0x5f46f6af]
  4178b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4178b2:	not    DWORD PTR [ebx]
  4178b4:	jbe    0x417840
  4178b6:	loope  0x417841
  4178b8:	hlt    
  4178b9:	(bad)  
  4178bb:	push   es
  4178bc:	mov    ebx,0x9f9a46ad
  4178c1:	loop   0x4178ce
  4178c3:	fwait
  4178c4:	sub    al,0xb1
  4178c7:	repz adc ebx,ecx
  4178ca:	pop    edi
  4178cb:	cmc    
  4178cc:	add    BYTE PTR [edx],ah
  4178ce:	xor    DWORD PTR [esp+ebp*8],esi
  4178d1:	sahf   
  4178d2:	(bad)  
  4178d3:	jb     0x4178a6
  4178d5:	jne    0x417859
  4178d7:	push   0x9bf2258e
  4178dc:	sahf   
  4178dd:	jl     0x4178e0
  4178df:	ss call 0x84da2894
  4178e5:	adc    ebp,ebp
  4178e7:	add    eax,0x2717bada
  4178ec:	(bad)  
  4178ed:	pop    ss
  4178ee:	jmp    0x41787b
  4178f0:	fabs   
  4178f2:	out    dx,eax
  4178f3:	jmp    0x47fb:0x72966550
  4178fa:	pop    edx
  4178fb:	sbb    al,0x4d
  4178fd:	in     eax,dx
  4178fe:	jns    0x4178b6
  417900:	hlt    
  417901:	enter  0xcf88,0x12
  417905:	xchg   esi,eax
  417906:	sahf   
  417907:	or     BYTE PTR [esp+ebp*2],0x62
  41790b:	jo     0x417924
  41790d:	test   eax,0x3143eeee
  417912:	outs   dx,DWORD PTR ds:[esi]
  417913:	mov    edx,0x5cdfa2b5
  417918:	or     BYTE PTR [ecx],ah
  41791a:	lods   al,BYTE PTR ds:[esi]
  41791b:	jle    0x417982
  41791d:	xchg   edx,eax
  41791e:	jmp    0xc787:0xeee90573
  417925:	test   eax,0xb795a759
  41792a:	call   0xa146:0x97484e7b
  417931:	jmp    0xa38f4d2c
  417936:	mov    ebx,0x5daf3532
  41793b:	mul    BYTE PTR [edi+edi*1]
  41793e:	int    0xeb
  417940:	in     eax,dx
  417941:	shr    DWORD PTR [edx+0xf259219],0x22
  417948:	ret    
  417949:	jbe    0x417958
  41794b:	sbb    DWORD PTR [edi-0x7],eax
  41794e:	mov    eax,0x89e5a140
  417953:	inc    edi
  417954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417955:	daa    
  417956:	mov    al,0x23
  417958:	or     eax,0x1fe89e42
  41795d:	inc    eax
  41795e:	push   esi
  41795f:	jb     0x4179bf
  417961:	sbb    eax,0xe45fd770
  417966:	aaa    
  417967:	sub    dh,dh
  417969:	sbb    DWORD PTR [eax],edi
  41796b:	adc    BYTE PTR [edx-0x6e],dl
  41796e:	inc    edi
  41796f:	inc    di
  417971:	ror    DWORD PTR [eax],0x37
  417974:	mov    eax,0xcdb73fd2
  417979:	repz xchg esi,eax
  41797b:	outs   dx,DWORD PTR ds:[esi]
  41797c:	mov    edx,DWORD PTR [edx+ecx*8-0x54ca7d2]
  417983:	repnz and BYTE PTR [esi-0x5d705064],dh
  41798a:	mov    ch,0x61
  41798c:	(bad)  
  41798d:	xor    DWORD PTR [eax],ecx
  41798f:	inc    edx
  417990:	lock in al,dx
  417992:	mov    al,0x7e
  417994:	jb     0x417991
  417996:	call   0xb643:0xb676be01
  41799d:	sbb    esi,DWORD PTR [ecx-0x34cfb914]
  4179a3:	adc    ch,BYTE PTR [ebx-0x5e]
  4179a6:	lea    ebp,[edx+0x64]
  4179a9:	cmp    dh,BYTE PTR [edi-0x18315036]
  4179af:	dec    edx
  4179b0:	fisub  DWORD PTR [esi-0x72]
  4179b3:	(bad)  
  4179b4:	arpl   WORD PTR [ebx],sp
  4179b6:	cmc    
  4179b7:	or     BYTE PTR [esi],0xe1
  4179ba:	stos   BYTE PTR es:[edi],al
  4179bb:	pop    esi
  4179bc:	out    0x2,eax
  4179be:	jmp    FWORD PTR [ebx-0x38]
  4179c1:	mov    fs,WORD PTR [eax-0x6b64a8d9]
  4179c7:	xchg   ebp,eax
  4179c8:	pusha  
  4179c9:	ins    DWORD PTR es:[edi],dx
  4179ca:	sub    BYTE PTR [edx-0x1e4df2c1],bh
  4179d0:	add    al,0x4c
  4179d2:	and    dl,dh
  4179d4:	repz xor edx,DWORD PTR [esp+eax*4]
  4179d8:	mov    ecx,0xdc67c00c
  4179dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179de:	outs   dx,DWORD PTR ds:[esi]
  4179df:	rol    DWORD PTR [edi+edi*8+0x7b],cl
  4179e3:	icebp  
  4179e4:	iret   
  4179e5:	mov    ecx,0x25aaf710
  4179ea:	iret   
  4179eb:	sub    al,0xc7
  4179ed:	ret    0xc77a
  4179f0:	mov    bl,0xc3
  4179f2:	mov    dl,BYTE PTR [ebp-0x7897ea05]
  4179f8:	mov    esp,edx
  4179fa:	inc    esp
  4179fb:	stc    
  4179fc:	(bad)  
  4179fd:	shr    esp,1
  4179ff:	ins    DWORD PTR es:[edi],dx
  417a00:	jp     0x4179b4
  417a02:	aas    
  417a03:	ror    dl,1
  417a05:	shr    DWORD PTR [esi+ebx*8-0x7488f2d7],cl
  417a0c:	xchg   esi,eax
  417a0d:	push   ds
  417a0e:	sub    esp,ecx
  417a10:	pop    ecx
  417a11:	and    al,BYTE PTR [edi+esi*8+0x66]
  417a15:	aaa    
  417a16:	add    BYTE PTR [edi-0x3b9311ca],dh
  417a1c:	(bad)  
  417a1d:	jecxz  0x4179be
  417a1f:	(bad)  
  417a20:	cmp    BYTE PTR [ecx+esi*8+0x32d27d6],dh
  417a27:	repnz push edx
  417a29:	cld    
  417a2a:	pop    esp
  417a2b:	sub    DWORD PTR [edi-0x72721d58],edx
  417a31:	xchg   ebp,eax
  417a32:	inc    edx
  417a33:	cmovnp edx,eax
  417a36:	jl     0x417a9a
  417a38:	adc    BYTE PTR [esi+0x3b],al
  417a3b:	loop   0x4179e6
  417a3d:	adc    al,bh
  417a3f:	mov    esp,0x863d225
  417a44:	test   eax,0x27d24061
  417a49:	jbe    0x417a69
  417a4b:	mov    ecx,0xeadb6d70
  417a50:	les    esi,FWORD PTR [esi]
  417a52:	call   FWORD PTR [edi]
  417a54:	pop    es
  417a55:	jp     0x4179eb
  417a57:	popa   
  417a58:	mov    ah,0xef
  417a5a:	cld    
  417a5b:	dec    edi
  417a5c:	js     0x417a80
  417a5e:	xchg   esi,eax
  417a5f:	push   eax
  417a60:	shl    dh,cl
  417a62:	xchg   ebx,eax
  417a63:	cwde   
  417a64:	pop    esi
  417a65:	test   al,0x7a
  417a67:	daa    
  417a68:	cwde   
  417a69:	lods   eax,DWORD PTR ds:[esi]
  417a6a:	mov    bl,0xde
  417a6c:	sbb    dl,dl
  417a6e:	out    dx,al
  417a6f:	(bad)
  417a73:	jb     0x417abe
  417a75:	xor    al,0x4e
  417a77:	cmp    DWORD PTR [ebx+0x4e],ebx
  417a7a:	xlat   BYTE PTR ds:[ebx]
  417a7b:	mov    ebp,0x8103e301
  417a80:	pop    eax
  417a81:	retf   0xc3ca
  417a84:	inc    ebx
  417a85:	sub    BYTE PTR [ebp+0x776af222],al
  417a8b:	adc    ah,BYTE PTR [ebx-0x25ec31e]
  417a91:	stos   BYTE PTR es:[edi],al
  417a92:	inc    esi
  417a93:	lahf   
  417a94:	inc    esi
  417a95:	mov    bl,0xd
  417a97:	data16 int 0xfc
  417a9a:	sbb    DWORD PTR [ebp+esi*4-0xb0843e9],ecx
  417aa1:	call   0x3d8e:0xbd75c359
  417aa8:	and    BYTE PTR [ebx+0x7d],bl
  417aab:	jbe    0x417a94
  417aad:	cmp    eax,0xe5e0bd8f
  417ab2:	cmp    eax,0xab654ab7
  417ab7:	outs   dx,DWORD PTR ds:[esi]
  417ab8:	jne    0x417aed
  417aba:	dec    esi
  417abb:	jno    0x417b17
  417abd:	or     eax,0x5a9e351c
  417ac2:	loop   0x417b06
  417ac4:	xchg   DWORD PTR [edi-0x32],esp
  417ac7:	push   cs
  417ac8:	test   al,0x44
  417aca:	jmp    0x50b7:0x8395be71
  417ad1:	loop   0x417aa1
  417ad3:	ds add al,0x66
  417ad6:	repnz sub DWORD PTR [ecx-0x2],0x934f630c
  417ade:	inc    ebx
  417adf:	inc    edi
  417ae0:	daa    
  417ae1:	les    esp,FWORD PTR ds:0x32fd7bec
  417ae7:	xchg   BYTE PTR [ebx+ecx*2],ah
  417aea:	outs   dx,BYTE PTR ds:[esi]
  417aeb:	mov    al,ds:0x4e2e3b1f
  417af0:	arpl   WORD PTR [ebx-0x2b],cx
  417af3:	xor    ch,dl
  417af5:	pop    esp
  417af6:	addr16 dec esp
  417af8:	mov    al,ds:0x73f8e99f
  417afd:	cmp    al,0x3a
  417aff:	mov    al,0x2d
  417b01:	mov    ah,0xbc
  417b03:	xchg   ebx,eax
  417b04:	cmc    
  417b05:	aaa    
  417b06:	adc    al,0x60
  417b08:	inc    edi
  417b09:	pop    ebp
  417b0a:	push   0x2e
  417b0c:	dec    edx
  417b0d:	and    ah,BYTE PTR [edx]
  417b0f:	jo     0x417adc
  417b11:	test   BYTE PTR [ecx+0x15],al
  417b14:	shl    DWORD PTR [ebx-0x62],cl
  417b17:	popa   
  417b18:	leave  
  417b19:	pop    edi
  417b1a:	dec    eax
  417b1b:	imul   DWORD PTR [edi]
  417b1d:	cld    
  417b1e:	mov    esi,0x4ec5483
  417b23:	mov    ch,BYTE PTR [esi-0x7b]
  417b26:	add    ecx,DWORD PTR [ebx+esi*1]
  417b29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b2a:	adc    al,0x56
  417b2c:	push   esi
  417b2d:	pop    ss
  417b2e:	pop    ebp
  417b2f:	daa    
  417b30:	mov    eax,0xe33776
  417b35:	inc    ebx
  417b36:	jmp    0x3229:0x5e2ffa64
  417b3d:	adc    DWORD PTR [bx],0x95f4092d
  417b44:	push   edi
  417b45:	sbb    eax,0xeadebb29
  417b4a:	ja     0x417b72
  417b4c:	mov    WORD PTR [eax+0x6d3f3ccb],es
  417b52:	dec    ebx
  417b53:	adc    ebp,0x8e32c0ab
  417b59:	(bad)  
  417b5a:	outs   dx,DWORD PTR ds:[esi]
  417b5b:	add    cl,dh
  417b5d:	loopne 0x417b1c
  417b5f:	sbb    DWORD PTR [ebp-0x36],esi
  417b62:	out    0xa9,eax
  417b64:	pop    ecx
  417b65:	and    al,0xfb
  417b67:	mov    eax,ds:0x3dc24462
  417b6c:	or     BYTE PTR ds:0x629cb0e0,0x8f
  417b73:	adc    BYTE PTR [edi-0x74af04dd],bl
  417b79:	mov    BYTE PTR [eax-0x3b53263a],ch
  417b7f:	and    BYTE PTR [edi-0x5b],al
  417b82:	xchg   edx,eax
  417b83:	mov    bl,ah
  417b85:	repz and esp,DWORD PTR [ecx-0x4]
  417b89:	or     al,0xa6
  417b8b:	js     0x417b2a
  417b8d:	es push esi
  417b8f:	xor    esp,DWORD PTR [ebx]
  417b91:	pop    ecx
  417b92:	or     bh,BYTE PTR [ebx+0x52]
  417b95:	xchg   esp,eax
  417b96:	mov    dh,0xa
  417b98:	mov    esi,0xa5005ec4
  417b9d:	imul   edx,DWORD PTR [edx-0x7543696f],0x14774d32
  417ba7:	jle    0x417b76
  417ba9:	stc    
  417baa:	sbb    eax,0xdfc99a09
  417baf:	mov    ?,WORD PTR [edx+0xc]
  417bb2:	inc    ebp
  417bb3:	mov    dh,0x20
  417bb5:	mov    dx,0x6709
  417bb9:	mov    edx,0x809d846
  417bbe:	mov    ebp,0xdf7b599
  417bc3:	cmp    al,0xb0
  417bc5:	outs   dx,BYTE PTR ds:[esi]
  417bc6:	push   ecx
  417bc7:	pop    edx
  417bc8:	int    0xc6
  417bca:	and    DWORD PTR [ebx+ebp*2],edx
  417bcd:	or     al,0xf5
  417bcf:	iret   
  417bd0:	mov    bh,0xb6
  417bd2:	xchg   edx,eax
  417bd3:	jnp    0x417bd3
  417bd5:	cmc    
  417bd6:	(bad)  
  417bd7:	xor    BYTE PTR [ecx-0x20],dl
  417bda:	pop    DWORD PTR [esi-0x3]
  417bdd:	leave  
  417bde:	mov    edi,0xe45ee2fc
  417be3:	ins    DWORD PTR es:[edi],dx
  417be4:	sbb    DWORD PTR [ecx],esp
  417be6:	push   ebx
  417be7:	cmp    esp,DWORD PTR [esi+0x3e1b4f1c]
  417bed:	es pop ebp
  417bef:	int    0x1d
  417bf1:	and    DWORD PTR [edi+0x6e],edx
  417bf4:	cmp    cl,bh
  417bf6:	xchg   DWORD PTR ss:[esi-0x1f],ebp
  417bfa:	cmp    al,0xa9
  417bfc:	and    DWORD PTR [ebp-0x6dfe1195],edx
  417c02:	addr16 mov bl,0x54
  417c05:	jns    0x417c5b
  417c07:	jns    0x417b8a
  417c09:	inc    eax
  417c0a:	and    DWORD PTR [ecx+0x32a2f36],0x3
  417c11:	fcom   DWORD PTR [ecx]
  417c13:	shl    DWORD PTR [ecx],1
  417c15:	jp     0x417c5a
  417c17:	jecxz  0x417c4a
  417c19:	push   0x69
  417c1b:	cmp    ecx,DWORD PTR [ecx]
  417c1d:	jl     0x417bfb
  417c1f:	mov    ds:0x440ca434,al
  417c24:	loope  0x417bfa
  417c26:	(bad)  
  417c27:	mov    al,ds:0x8cdb6981
  417c2c:	mov    WORD PTR [esi],gs
  417c2e:	push   edi
  417c2f:	push   esp
  417c30:	mov    ecx,0xb27bc8d4
  417c35:	mov    esi,0x40df4935
  417c3a:	push   cs
  417c3b:	jmp    0x7ee2:0x6a45fac8
  417c42:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c43:	jmp    0x417c42
  417c45:	mov    al,ds:0x48eb4aed
  417c4a:	pop    esi
  417c4b:	sbb    esp,DWORD PTR [ecx-0x51797e97]
  417c51:	mov    ds:0xf1cd15ac,eax
  417c56:	dec    esi
  417c57:	push   0x23d96c7f
  417c5c:	mov    dh,0x80
  417c5e:	xchg   ecx,eax
  417c5f:	fidiv  DWORD PTR [eax-0x1e2fb477]
  417c65:	test   al,0x81
  417c67:	jae    0x417c7e
  417c69:	sub    DWORD PTR [ecx+0x53],edx
  417c6c:	mov    esp,0xa002172e
  417c71:	and    bh,al
  417c73:	sub    esi,DWORD PTR [esi+eiz*1]
  417c76:	arpl   WORD PTR [esi-0x5629a3da],sp
  417c7c:	mov    ebx,0x229f8c3a
  417c81:	and    bh,BYTE PTR [ebp-0x2e5388b3]
  417c87:	test   DWORD PTR [esi-0x7c15e374],esi
  417c8d:	cmp    cl,BYTE PTR [edi+0x1d5d998f]
  417c93:	out    dx,eax
  417c94:	sahf   
  417c95:	leave  
  417c96:	mov    dl,0x63
  417c98:	or     esi,DWORD PTR ds:0x7abde944
  417c9e:	and    eax,0xb25fb3a8
  417ca3:	or     bh,BYTE PTR [ebx]
  417ca5:	dec    edx
  417ca6:	sar    DWORD PTR [ecx+0x63],1
  417ca9:	cmp    edx,esp
  417cab:	add    dl,dh
  417cad:	(bad)  
  417cae:	or     bl,BYTE PTR [edx+eiz*4+0x4901c80f]
  417cb5:	xchg   esi,eax
  417cb6:	adc    dh,dh
  417cb8:	xchg   BYTE PTR [eax+eax*1-0x58],cl
  417cbc:	lds    ebp,FWORD PTR [edx]
  417cbe:	call   0x7dce:0xcf6bd4f5
  417cc5:	jns    0x417c7c
  417cc7:	rcl    DWORD PTR [eax+0x48a45bd5],1
  417ccd:	repz mov esi,0x224ce78c
  417cd3:	pop    edx
  417cd4:	mov    dh,0xbe
  417cd6:	jmp    0x7c49ea71
  417cdb:	fnstsw WORD PTR [edi]
  417cdd:	push   ecx
  417cde:	clc    
  417cdf:	or     ch,BYTE PTR [edx-0x4]
  417ce2:	adc    bl,BYTE PTR [ebx-0x6052d7a8]
  417ce8:	inc    edi
  417ce9:	ins    DWORD PTR es:[edi],dx
  417cea:	dec    ebp
  417ceb:	inc    esi
  417cec:	or     BYTE PTR [ebp+0x3875ee1e],ah
  417cf2:	popa   
  417cf3:	lods   al,BYTE PTR ds:[esi]
  417cf4:	(bad)  
  417cf5:	adc    al,0xa2
  417cf7:	cli    
  417cf8:	sub    ebx,DWORD PTR [eax]
  417cfa:	(bad)  
  417cfb:	xchg   edi,eax
  417cfc:	jp     0x417d54
  417cfe:	sub    BYTE PTR [ebx-0x4c],ah
  417d01:	push   es
  417d02:	mov    dh,0x25
  417d04:	inc    ebp
  417d05:	sahf   
  417d06:	adc    al,0x3
  417d08:	dec    edi
  417d09:	mov    dl,0x78
  417d0b:	xchg   DWORD PTR [ecx],esp
  417d0d:	(bad)  
  417d0e:	mov    bh,0xc3
  417d10:	pop    ebp
  417d11:	push   0xffffffbb
  417d13:	enter  0x9410,0x4f
  417d17:	sbb    al,0x42
  417d19:	mov    ds:0xa219d45a,eax
  417d1e:	pop    ds
  417d1f:	adc    BYTE PTR [si-0x5b2d],ch
  417d24:	sbb    BYTE PTR [ebp+0x2b7da9d],0x78
  417d2b:	sub    DWORD PTR [edi-0x49],ecx
  417d2e:	iret   
  417d2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d30:	fisub  WORD PTR [eax-0x7a]
  417d33:	or     BYTE PTR [ecx+0x68b065d2],al
  417d39:	cli    
  417d3a:	xor    BYTE PTR [edx+0x75fea17b],0x6e
  417d41:	scas   al,BYTE PTR es:[edi]
  417d42:	aad    0x54
  417d44:	pop    esi
  417d45:	stos   BYTE PTR es:[edi],al
  417d46:	push   0x2
  417d48:	loop   0x417d1e
  417d4a:	ss (bad) 
  417d4c:	mov    ecx,0x33095d19
  417d51:	stos   BYTE PTR es:[edi],al
  417d52:	sbb    eax,0x9b4b2fe1
  417d57:	fcomip st,st(3)
  417d59:	repz pop esi
  417d5b:	sti    
  417d5c:	ret    0x58b
  417d5f:	(bad)  
  417d60:	dec    esp
  417d61:	in     al,dx
  417d62:	fnstsw WORD PTR [ecx+0x4be7691c]
  417d68:	(bad)  
  417d69:	(bad)  [eax+0x6c]
  417d6c:	mov    DWORD PTR [eax],ebx
  417d6e:	nop
  417d6f:	xchg   esp,eax
  417d70:	pop    ebx
  417d71:	or     eax,0x71f0db82
  417d76:	adc    eax,ebp
  417d78:	jecxz  0x417d56
  417d7a:	fcom   QWORD PTR [ebp+0x5e5db62b]
  417d80:	inc    ebp
  417d81:	or     al,0x6b
  417d83:	scas   eax,DWORD PTR es:[edi]
  417d84:	mov    eax,ds:0xdd154a9e
  417d89:	jg     0x417da6
  417d8b:	dec    edx
  417d8c:	dec    edi
  417d8d:	adc    dl,BYTE PTR ds:0xde87774e
  417d93:	aam    0x6e
  417d95:	lock (bad) 
  417d97:	in     eax,dx
  417d98:	mov    ds:0x910f010b,eax
  417d9d:	mov    ds:0x5d663a4c,al
  417da2:	aaa    
  417da3:	mov    eax,0x3df483dc
  417da8:	xor    DWORD PTR [eax-0x20],ecx
  417dab:	gs push edi
  417dad:	cmp    eax,0x8cbb1dca
  417db2:	ficomp WORD PTR [ebx]
  417db4:	popf   
  417db5:	push   ebx
  417db6:	loopne 0x417da2
  417db8:	ds ja  0x417d3e
  417dbb:	cmp    edi,DWORD PTR [esi-0x7d94903a]
  417dc1:	fs ret 0x5aa3
  417dc5:	fcom   DWORD PTR ds:0x40763a05
  417dcb:	push   esi
  417dcc:	and    al,0x71
  417dce:	(bad)  
  417dcf:	call   0xe0a908cc
  417dd4:	xor    ah,BYTE PTR [ebp+0x62da2bb6]
  417dda:	fs stc 
  417ddc:	imul   edx,DWORD PTR [esi-0x19597468],0x2e
  417de3:	pop    esi
  417de4:	jns    0x417d98
  417de6:	add    eax,0x531b393e
  417deb:	xor    DWORD PTR [ebx+ebp*1+0x66],edx
  417def:	cs jecxz 0x417dfe
  417df2:	out    dx,al
  417df3:	call   0x14e6:0x1210fb35
  417dfa:	push   ss
  417dfb:	lock data16 ins BYTE PTR es:[edi],dx
  417dfe:	inc    edx
  417dff:	ret    
  417e00:	(bad)  [esi+0x1f]
  417e03:	outs   dx,DWORD PTR ds:[esi]
  417e04:	xor    DWORD PTR [eax-0xc],eax
  417e07:	sbb    eax,0x56721776
  417e0c:	bound  edx,QWORD PTR [ecx+0x19979e8d]
  417e12:	push   ebx
  417e13:	mov    al,ds:0xc715cbfc
  417e18:	stos   BYTE PTR es:[edi],al
  417e19:	in     eax,0x61
  417e1b:	pop    esp
  417e1c:	ret    0xb53
  417e1f:	jle    0x417e8f
  417e21:	cmp    eax,0x1cd1923a
  417e26:	push   ds
  417e27:	mov    ds:0xad78a59d,eax
  417e2c:	pusha  
  417e2d:	jecxz  0x417eac
  417e2f:	mov    ebp,0x55603ca1
  417e34:	not    BYTE PTR [ebp+eax*4-0x2d]
  417e38:	xchg   ebx,eax
  417e39:	sub    eax,0xb1ff5c
  417e3e:	pop    edx
  417e3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e40:	shl    DWORD PTR [ebp-0x6e30d403],cl
  417e46:	lds    edi,FWORD PTR [ecx+0x74c87b54]
  417e4c:	jo     0x417def
  417e4e:	(bad)  
  417e4f:	lea    ebp,[edi-0x78139e56]
  417e55:	mov    esi,DWORD PTR [edx+0x59622fe8]
  417e5b:	fadd   QWORD PTR [eax]
  417e5d:	dec    edx
  417e5e:	inc    edi
  417e5f:	shl    DWORD PTR [ebx+0x5a7d2525],0xa3
  417e66:	(bad)  
  417e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e68:	push   ecx
  417e69:	loop   0x417e6d
  417e6b:	ja     0x417e50
  417e6d:	gs mov al,0x38
  417e70:	arpl   WORD PTR [eax-0x2268508a],ax
  417e76:	mov    edi,DWORD PTR [ecx-0x21]
  417e79:	pop    ecx
  417e7a:	stos   DWORD PTR es:[edi],eax
  417e7b:	and    esi,ecx
  417e7d:	mov    bl,0xb2
  417e7f:	mov    eax,ds:0x5fb3dd65
  417e84:	add    eax,0x61e533b4
  417e89:	fadd   QWORD PTR [ebp-0x53be9546]
  417e8f:	push   cs
  417e90:	dec    edi
  417e91:	jmp    0xb63c8dfd
  417e96:	adc    BYTE PTR [edi-0x2501fad4],ah
  417e9c:	enter  0x4750,0x52
  417ea0:	jge    0x417e71
  417ea2:	add    eax,0x166b9ff5
  417ea7:	(bad)  
  417ea8:	jnp    0x417e5e
  417eaa:	sbb    BYTE PTR [edi-0x7c],bl
  417ead:	pop    ebx
  417eae:	jle    0x417ecd
  417eb0:	jp     0x417e3f
  417eb2:	mov    edi,0x98618f84
  417eb7:	push   edi
  417eb8:	outs   dx,DWORD PTR ds:[esi]
  417eb9:	xor    esi,ebx
  417ebb:	je     0x417f2b
  417ebd:	imul   eax,DWORD PTR [ebp+0x329a1db8],0xffffffe4
  417ec4:	daa    
  417ec5:	rcl    DWORD PTR [edi],cl
  417ec7:	gs iret 
  417ec9:	jge    0x417f19
  417ecb:	int3   
  417ecc:	sbb    DWORD PTR [edi-0x48],eax
  417ecf:	(bad)  
  417ed0:	cmc    
  417ed1:	jno    0x417f1b
  417ed3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ed4:	outs   dx,BYTE PTR ds:[esi]
  417ed5:	es hlt 
  417ed7:	or     eax,0x9815e9ce
  417edc:	retf   0x9835
  417edf:	inc    esi
  417ee0:	call   0x93519efa
  417ee5:	jne    0x417ea0
  417ee7:	push   es
  417ee8:	adc    al,0x34
  417eea:	mov    al,0x9f
  417eec:	repz mov dh,0xd9
  417eef:	(bad)  
  417ef1:	int3   
  417ef2:	rcl    BYTE PTR [eax],cl
  417ef4:	adc    al,0x52
  417ef6:	hlt    
  417ef7:	repz call 0xf9d4:0x4da40075
  417eff:	nop
  417f00:	pop    ecx
  417f01:	popf   
  417f02:	xor    BYTE PTR [eax],dl
  417f04:	(bad)  
  417f05:	sub    al,0xcc
  417f07:	fistp  WORD PTR [ebp-0x40]
  417f0a:	leave  
  417f0b:	imul   edi,DWORD PTR [ecx-0x3c2c2a73],0xffffffe0
  417f12:	(bad)  
  417f13:	xchg   edx,eax
  417f14:	mov    ch,bl
  417f16:	add    dh,BYTE PTR [esi-0x29]
  417f19:	fstp   st(2)
  417f1b:	cmp    ebp,DWORD PTR [ebx]
  417f1d:	pop    esp
  417f1e:	push   esp
  417f1f:	inc    esp
  417f20:	clc    
  417f21:	mov    al,0x32
  417f23:	jae    0x417f78
  417f25:	les    ebp,FWORD PTR [edx+0x1b]
  417f28:	in     al,0xac
  417f2a:	mov    eax,0xb0e03298
  417f2f:	jmp    0x17ff673c
  417f34:	repnz scas eax,DWORD PTR es:[edi]
  417f36:	ss mov al,0xfc
  417f39:	loope  0x417f69
  417f3b:	outs   dx,DWORD PTR ds:[esi]
  417f3c:	mov    esi,esi
  417f3e:	stc    
  417f3f:	push   ss
  417f40:	imul   eax,ebp,0x32
  417f43:	dec    edx
  417f44:	adc    ch,BYTE PTR ds:0xe38757f6
  417f4a:	jnp    0x417f6b
  417f4c:	call   0x5a62456
  417f51:	jge    0x417f34
  417f53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f54:	or     al,bl
  417f56:	jne    0x417fab
  417f58:	push   ds
  417f59:	add    eax,0x9a05bda7
  417f5e:	and    DWORD PTR [eax+0x16],edi
  417f61:	ror    BYTE PTR [ebp+0x6912f039],1
  417f67:	or     esi,ebx
  417f69:	pop    ebx
  417f6a:	xor    BYTE PTR [eax-0x49],cl
  417f6d:	push   edx
  417f6e:	jmp    0x417fc5
  417f70:	stos   DWORD PTR es:[edi],eax
  417f71:	fs and eax,0x52c9d753
  417f77:	add    al,0x2c
  417f79:	ret    
  417f7a:	adc    esi,edi
  417f7c:	sbb    edi,DWORD PTR [ebp+0x71c8c1da]
  417f82:	mov    ch,0x22
  417f84:	sbb    eax,DWORD PTR [edx-0x25deaeb8]
  417f8a:	ins    DWORD PTR es:[edi],dx
  417f8b:	cwde   
  417f8c:	xor    DWORD PTR ds:0x604a2cf4,0x60091b5a
  417f96:	bound  esp,QWORD PTR ds:0xa85589e7
  417f9c:	xor    dh,bh
  417f9e:	mov    dl,0x2b
  417fa0:	push   esp
  417fa1:	jae    0x417f6f
  417fa3:	cmp    al,0xc9
  417fa5:	js     0x41800a
  417fa7:	jecxz  0x417f73
  417fa9:	xchg   esi,eax
  417faa:	push   esp
  417fab:	das    
  417fac:	scas   al,BYTE PTR es:[edi]
  417fad:	mov    esi,0x7250f356
  417fb2:	xor    DWORD PTR [ebx+0x6153f1e0],eax
  417fb8:	rol    dh,1
  417fba:	jnp    0x417fd8
  417fbc:	xor    dh,BYTE PTR [ebx+0x431fa074]
  417fc2:	mov    ch,0x93
  417fc4:	sbb    al,0x55
  417fc6:	add    DWORD PTR [eax],edi
  417fc8:	adc    cl,dh
  417fca:	dec    eax
  417fcb:	adc    al,BYTE PTR [eax]
  417fcd:	rol    BYTE PTR [ebx],0xe5
  417fd0:	fnsave [eax-0x44]
  417fd3:	or     ecx,DWORD PTR [esi+0xb108490]
  417fd9:	mov    al,0xe5
  417fdb:	call   0x21ce:0xfedb198d
  417fe2:	inc    ebx
  417fe3:	cli    
  417fe4:	push   0x28
  417fe6:	push   ebx
  417fe7:	cmp    ch,BYTE PTR [ebp-0x3f67c6af]
  417fed:	ror    BYTE PTR [ecx],0x3e
  417ff0:	sub    al,0x78
  417ff2:	(bad)  
  417ff3:	int3   
  417ff4:	jmp    0xce1b:0x239e9b3d
  417ffb:	jge    0x418065
  417ffd:	shl    ah,cl
  417fff:	dec    esi
  418000:	imul   edx,DWORD PTR [esi+0x30],0xd8059cca
  418007:	mov    dh,0xa6
  418009:	out    dx,al
  41800a:	nop
  41800b:	push   edi
  41800c:	mov    esi,0x6ef1ee62
  418011:	mov    eax,0x4e7b076f
  418016:	cdq    
  418017:	shl    BYTE PTR [edi+0x41],1
  41801a:	inc    ebx
  41801b:	aaa    
  41801c:	imul   esp,DWORD PTR [ebx],0xacb27fb5
  418022:	dec    eax
  418024:	add    al,0x6a
  418026:	ins    DWORD PTR es:[edi],dx
  418027:	aam    0xdf
  418029:	dec    ebx
  41802a:	dec    edi
  41802b:	xor    al,0x72
  41802d:	imul   ebx,eax,0xfffffffb
  418030:	cmp    eax,0x9a7c2d06
  418035:	in     eax,dx
  418036:	pop    edi
  418037:	pop    ecx
  418038:	dec    esi
  418039:	add    bl,ah
  41803b:	push   eax
  41803c:	ror    BYTE PTR [ebp+0x2c050778],0x68
  418043:	jnp    0x41805e
  418045:	sub    al,0x8e
  418047:	jl     0x418090
  418049:	iret   
  41804a:	dec    edx
  41804b:	cwde   
  41804c:	pop    ds
  41804d:	xor    eax,esp
  41804f:	xor    dl,BYTE PTR [edx+0x10c75c7e]
  418055:	sti    
  418056:	adc    eax,0x6342ce20
  41805b:	in     al,dx
  41805c:	fstp   QWORD PTR [ecx]
  41805e:	xchg   ebx,eax
  41805f:	mov    ch,0x8c
  418061:	xlat   BYTE PTR ds:[ebx]
  418062:	push   cs
  418063:	sbb    BYTE PTR [ebp-0x30c50994],bl
  418069:	lods   al,BYTE PTR ds:[esi]
  41806a:	repnz ins DWORD PTR es:[edi],dx
  41806c:	xchg   ecx,eax
  41806d:	jecxz  0x418045
  41806f:	ret    
  418070:	imul   esp,eax,0x7ba76c6c
  418076:	cmp    esi,DWORD PTR [ebp-0x58]
  418079:	push   ds
  41807a:	push   ss
  41807b:	mov    ah,0x54
  41807d:	imul   BYTE PTR [ebx]
  41807f:	adc    BYTE PTR cs:[ecx+0x20],dl
  418083:	pop    ebp
  418084:	dec    ecx
  418085:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418086:	jp     0x418024
  418088:	jl     0x418049
  41808a:	sub    BYTE PTR ds:0xc4c37ef5,0x60
  418091:	imul   edx,ebp,0xffffffcb
  418094:	ins    DWORD PTR es:[edi],dx
  418095:	mov    ecx,esi
  418097:	sbb    DWORD PTR [ebp-0x4c],ebx
  41809a:	sbb    DWORD PTR [ebx],esp
  41809c:	adc    DWORD PTR [esi+edx*8-0x740942ed],esi
  4180a3:	out    dx,al
  4180a4:	mov    edx,0x1ac7d887
  4180a9:	test   al,0xf2
  4180ab:	jecxz  0x4180e6
  4180ad:	inc    ecx
  4180ae:	test   esi,0x7598b015
  4180b4:	fsubrp st(6),st
  4180b6:	push   esi
  4180b7:	mov    ecx,?
  4180b9:	int3   
  4180ba:	mov    bl,0x3c
  4180bc:	data16 daa 
  4180be:	out    dx,al
  4180bf:	push   ds
  4180c0:	or     eax,0xfacdbbfb
  4180c5:	or     DWORD PTR [ecx+edi*4-0x2c],edx
  4180c9:	data16 cs jmp 0x418102
  4180cd:	bswap  eax
  4180cf:	sbb    esp,DWORD PTR [ecx]
  4180d1:	and    BYTE PTR [edx],al
  4180d3:	out    dx,al
  4180d4:	sub    eax,0x8f682633
  4180d9:	in     eax,0x6c
  4180db:	retf   0x2af4
  4180de:	(bad)  
  4180e0:	sti    
  4180e1:	outs   dx,DWORD PTR ds:[esi]
  4180e2:	fdiv   DWORD PTR [edi+0x5f]
  4180e5:	lods   eax,DWORD PTR ds:[esi]
  4180e6:	sub    edx,DWORD PTR [esi]
  4180e8:	adc    eax,0x65be2d68
  4180ed:	inc    eax
  4180ee:	sub    DWORD PTR [ebx-0x6de63237],ebp
  4180f4:	ss leave 
  4180f6:	loopne 0x418110
  4180f8:	mov    ds:0xc6a0ed9e,al
  4180fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180fe:	test   al,0x3b
  418100:	lea    ebp,[ecx+0x4437a556]
  418106:	sbb    ah,BYTE PTR [ecx]
  418108:	mov    esi,0xa2b566db
  41810d:	jo     0x418146
  41810f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418110:	adc    DWORD PTR [ebx],edx
  418112:	inc    esi
  418113:	icebp  
  418114:	test   edi,eax
  418116:	in     al,dx
  418117:	shl    BYTE PTR [edi+0x79],1
  41811a:	xor    eax,0x813b056a
  41811f:	mul    BYTE PTR [eax]
  418121:	lea    ebx,[eax]
  418123:	mov    ecx,0x8300d77b
  418128:	sbb    al,0x42
  41812a:	loopne 0x41818a
  41812c:	sbb    BYTE PTR [eax-0x17b3024c],dl
  418132:	fbld   TBYTE PTR [ebp-0x3]
  418135:	sub    edx,ebx
  418137:	jg     0x4180cf
  418139:	ds push ds
  41813b:	les    ebp,FWORD PTR [edi+0x78]
  41813e:	imul   ebp,DWORD PTR [bx+di+0x3c],0x7d
  418143:	add    ecx,esi
  418145:	sbb    DWORD PTR cs:[ecx+ebx*2-0x3731fae3],edx
  41814d:	test   ah,ch
  41814f:	jl     0x4180d1
  418151:	xor    cl,cl
  418153:	xchg   edi,eax
  418154:	or     DWORD PTR [eax+0x377e6b61],esp
  41815a:	aaa    
  41815b:	loop   0x418113
  41815d:	lods   eax,DWORD PTR ds:[esi]
  41815e:	cmp    esp,DWORD PTR ds:0x82b01fae
  418164:	push   es
  418165:	mov    edx,0xf2468d07
  41816a:	fs cmp al,0xe7
  41816d:	hlt    
  41816e:	mov    edx,ebx
  418170:	jg     0x418101
  418172:	inc    ebx
  418173:	imul   esp,DWORD PTR [esi-0x4bbe3d82],0xbba3445
  41817d:	repnz xchg esp,eax
  41817f:	or     al,0x28
  418181:	and    bh,BYTE PTR [edx+ecx*8]
  418184:	xor    al,0x77
  418186:	pop    esi
  418187:	icebp  
  418188:	xchg   bh,dh
  41818a:	das    
  41818b:	dec    ebp
  41818c:	pop    ebx
  41818d:	scas   eax,DWORD PTR es:[edi]
  41818e:	and    eax,0xf6298693
  418193:	paddsw mm6,QWORD PTR [ebx]
  418196:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418197:	ds add al,0x5f
  41819a:	(bad)  
  41819b:	and    DWORD PTR [eax],ebx
  41819d:	dec    edx
  41819e:	jno    0x4181fe
  4181a0:	out    dx,eax
  4181a1:	dec    ebp
  4181a2:	jns    0x41817e
  4181a4:	(bad)  
  4181a5:	out    dx,al
  4181a6:	mov    ebx,0x5cf63966
  4181ab:	jge    0x418190
  4181ad:	xchg   ebp,eax
  4181ae:	dec    ebp
  4181af:	icebp  
  4181b0:	ins    DWORD PTR es:[edi],dx
  4181b1:	jge    0x4181cc
  4181b3:	add    DWORD PTR [ebp+edi*4+0x13806dfb],ebx
  4181ba:	shr    esp,1
  4181bc:	scas   eax,DWORD PTR es:[edi]
  4181bd:	aaa    
  4181be:	cmp    edx,DWORD PTR [ecx]
  4181c0:	je     0x4181aa
  4181c2:	test   al,0x2c
  4181c4:	lods   eax,DWORD PTR ds:[esi]
  4181c5:	fist   DWORD PTR [ecx-0x4a]
  4181c8:	cld    
  4181c9:	leave  
  4181ca:	mov    edi,0x490257ed
  4181cf:	mov    ds:0x75ad65b0,eax
  4181d4:	xchg   edx,eax
  4181d5:	jmp    0xde37fbc
  4181da:	js     0x418207
  4181dc:	mov    al,0x76
  4181de:	xor    dh,dl
  4181e0:	xchg   ebp,eax
  4181e1:	xor    ebp,esp
  4181e3:	dec    ecx
  4181e4:	push   es
  4181e5:	bound  ecx,QWORD PTR [esi]
  4181e7:	dec    esp
  4181e8:	scas   eax,DWORD PTR es:[edi]
  4181e9:	and    ecx,DWORD PTR [eax+esi*4-0x2a]
  4181ed:	or     edi,ebx
  4181ef:	sub    eax,0x4720bf85
  4181f4:	sub    edx,DWORD PTR [edx+0x6]
  4181f7:	imul   edx,DWORD PTR [ebp-0x50],0x3bb61768
  4181fe:	es ds jmp 0x418197
  418202:	fst    DWORD PTR [ebx]
  418204:	adc    edx,DWORD PTR [edx]
  418206:	enter  0xa0fb,0x9
  41820a:	dec    edi
  41820b:	push   esp
  41820c:	xor    eax,DWORD PTR [edx+ebp*4+0x32]
  418210:	das    
  418211:	add    eax,0xf923b38e
  418216:	ficom  DWORD PTR [edx]
  418218:	nop
  418219:	jmp    0x41827b
  41821b:	jns    0x418220
  41821d:	pop    esp
  41821e:	jb     0x4181de
  418220:	sbb    al,0xf1
  418222:	daa    
  418223:	sub    dl,BYTE PTR ds:0x1a67da00
  418229:	sub    BYTE PTR [ebx-0xc6656d1],dl
  41822f:	scas   eax,DWORD PTR es:[edi]
  418230:	adc    dl,dh
  418232:	clc    
  418233:	aam    0x6c
  418235:	jmp    0x2cb15f0f
  41823a:	pop    eax
  41823b:	shl    BYTE PTR [edi-0x54584515],0x13
  418242:	daa    
  418243:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418244:	xchg   edi,eax
  418245:	add    al,BYTE PTR [esi+0x2a]
  418248:	stos   DWORD PTR es:[edi],eax
  418249:	mov    al,ds:0xc981d87f
  41824e:	(bad)  
  41824f:	fwait
  418250:	sub    edi,esi
  418252:	lea    esp,[esi-0x58bf15cd]
  418258:	or     esp,eax
  41825a:	mov    ds:0xa7a4f291,eax
  41825f:	addr16 cli 
  418261:	stc    
  418262:	inc    esp
  418263:	jge    0x418278
  418265:	push   0xd97af096
  41826a:	loope  0x4182db
  41826c:	es inc esp
  41826e:	dec    ebx
  41826f:	lods   al,BYTE PTR ds:[esi]
  418270:	cld    
  418271:	scas   al,BYTE PTR es:[edi]
  418272:	test   BYTE PTR ds:0x939bce85,bh
  418278:	or     esi,DWORD PTR [ebx-0x3a]
  41827b:	test   ebp,edx
  41827d:	lahf   
  41827e:	call   0x7b2d:0x86f3e885
  418285:	adc    dh,BYTE PTR [ebx]
  418287:	jnp    0x418214
  418289:	stos   BYTE PTR es:[edi],al
  41828a:	push   0x39867610
  41828f:	inc    BYTE PTR [ebp-0x33]
  418292:	lock or DWORD PTR [edi],edi
  418295:	mov    ch,0xc2
  418297:	push   0x3d57901b
  41829c:	jnp    0x418267
  41829e:	jb     0x418279
  4182a0:	popa   
  4182a1:	adc    BYTE PTR [eax-0xe18e88f],dh
  4182a7:	das    
  4182a8:	push   0x5
  4182aa:	or     BYTE PTR [ecx+0x67],ah
  4182ad:	adc    DWORD PTR [esp+eiz*8],0xccb7e155
  4182b4:	out    0x23,al
  4182b6:	mov    eax,ds:0x454c1513
  4182bb:	ja     0x4182d0
  4182bd:	jbe    0x41824e
  4182bf:	gs ret 0x3838
  4182c3:	jge    0x418278
  4182c5:	cli    
  4182c6:	adc    BYTE PTR [edi+0x55],ch
  4182c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182ca:	pop    ebp
  4182cb:	push   ss
  4182cc:	add    BYTE PTR [edx+0x60],al
  4182cf:	cmp    al,0xdf
  4182d1:	push   ebp
  4182d2:	and    cl,al
  4182d4:	leave  
  4182d5:	(bad)  
  4182d6:	push   edx
  4182d7:	or     BYTE PTR [ebx],0xf3
  4182da:	or     BYTE PTR [ecx-0x4ed15235],cl
  4182e0:	push   eax
  4182e1:	sbb    eax,0x3535981
  4182e6:	(bad)  
  4182e7:	pushf  
  4182e8:	cmp    ah,ch
  4182ea:	in     al,0x3
  4182ec:	xor    bl,bl
  4182ee:	nop
  4182ef:	jno    0x418295
  4182f1:	push   edx
  4182f2:	add    bh,ah
  4182f4:	mov    al,0x58
  4182f6:	mov    ch,0xec
  4182f8:	test   DWORD PTR [esi],edi
  4182fa:	call   0x77ce61dc
  4182ff:	je     0x4182fb
  418301:	cmp    al,0x9e
  418303:	aad    0x6e
  418305:	and    al,0xfc
  418307:	and    al,0xdd
  418309:	adc    dh,al
  41830b:	stc    
  41830c:	mov    eax,ds:0x693387b6
  418311:	inc    eax
  418312:	cmp    cl,BYTE PTR [edx+0x6584564a]
  418318:	cli    
  418319:	jp     0x4182f5
  41831b:	push   ecx
  41831c:	or     dh,cl
  41831e:	mov    bl,0xb4
  418320:	daa    
  418321:	xchg   edx,eax
  418322:	clc    
  418323:	pop    ebx
  418324:	dec    esp
  418325:	stos   BYTE PTR es:[edi],al
  418326:	push   es
  418327:	popf   
  418328:	icebp  
  418329:	jmp    0xb806c88d
  41832e:	or     al,0x74
  418330:	std    
  418331:	sbb    BYTE PTR [eax],0x10
  418334:	xor    esi,ebx
  418336:	sbb    BYTE PTR [esi+0x595ecd90],dl
  41833c:	mov    eax,ds:0xe65c1da6
  418341:	push   ebx
  418342:	stos   BYTE PTR es:[edi],al
  418343:	ins    DWORD PTR es:[edi],dx
  418344:	or     cl,BYTE PTR [edx+0x3baead5f]
  41834a:	dec    edi
  41834b:	xor    ebp,DWORD PTR [edi+0x6e]
  41834e:	add    BYTE PTR [esi],dl
  418350:	dec    edx
  418351:	test   BYTE PTR [eax+0x69],cl
  418354:	dec    dh
  418356:	(bad)  
  418357:	push   ecx
  418358:	mov    WORD PTR fs:[ebp+0x6d2c87e7],ss
  41835f:	fs gs and esp,esi
  418363:	(bad)  
  418364:	in     eax,dx
  418365:	xor    edi,esi
  418367:	cmp    eax,DWORD PTR [ebx+0x64e078ad]
  41836d:	pop    DWORD PTR [esi+edi*1+0x411a7c6f]
  418374:	imul   ebx,DWORD PTR [esi+0x567795f3],0x13d7f953
  41837e:	fld    DWORD PTR [ebx+0x3bf320a]
  418384:	sbb    eax,0xcbfd4172
  418389:	add    eax,0x718b03d8
  41838e:	and    eax,eax
  418390:	push   0x717c7e07
  418395:	cmp    eax,0xe8e387f0
  41839a:	gs jns 0x418382
  41839d:	xor    dh,dh
  41839f:	push   edi
  4183a0:	jbe    0x41840c
  4183a2:	shl    DWORD PTR [eax],cl
  4183a4:	sub    edx,DWORD PTR [edi+0x4d85ec71]
  4183aa:	imul   DWORD PTR [edx]
  4183ac:	adc    al,0xf6
  4183ae:	shl    ch,cl
  4183b0:	mov    edx,0x670cf66d
  4183b5:	ret    
  4183b6:	mov    bl,0x57
  4183b8:	data16 scas al,BYTE PTR es:[edi]
  4183ba:	mov    ebx,0x82027c17
  4183bf:	out    dx,al
  4183c0:	mov    cl,0xdc
  4183c2:	lock add edx,DWORD PTR [ebx-0x540d8cc1]
  4183c9:	push   ecx
  4183ca:	push   ebx
  4183cb:	sub    DWORD PTR [edi+0xd],ecx
  4183ce:	loopne 0x41839e
  4183d0:	scas   al,BYTE PTR es:[edi]
  4183d1:	xor    al,0xf8
  4183d3:	retf   
  4183d4:	xchg   ebp,eax
  4183d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183d6:	inc    ebx
  4183d7:	shl    BYTE PTR [ecx+0x25],cl
  4183da:	js     0x41842a
  4183dc:	ins    BYTE PTR es:[edi],dx
  4183dd:	adc    eax,0xccc5a3f2
  4183e2:	inc    ebx
  4183e3:	push   es
  4183e4:	lock stos BYTE PTR es:[edi],al
  4183e6:	outs   dx,BYTE PTR ds:[esi]
  4183e7:	xchg   ebp,eax
  4183e8:	sar    BYTE PTR [ebx+0x7],0xc6
  4183ec:	scas   eax,DWORD PTR es:[edi]
  4183ed:	inc    ebp
  4183ee:	or     al,0x7c
  4183f0:	test   DWORD PTR [ebp+eiz*2+0x1c0bebb3],0x6f6ba492
  4183fb:	mov    ecx,0x9f6bdcec
  418400:	test   DWORD PTR [ebx-0x42],edi
  418403:	push   ss
  418404:	push   eax
  418405:	dec    ebp
  418406:	inc    esp
  418407:	retf   
  418408:	fldlg2 
  41840a:	adc    al,dh
  41840c:	mov    ds:0xeca75686,al
  418411:	aam    0x8b
  418413:	test   BYTE PTR [ebx+0x4be62de1],dl
  418419:	cdq    
  41841a:	mov    eax,0x793ca4b1
  41841f:	jmp    0x41849a
  418421:	aad    0x86
  418423:	inc    edx
  418424:	aas    
  418425:	mov    bh,0x8b
  418427:	shl    esi,0x95
  41842a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41842b:	pop    ds
  41842c:	add    dh,BYTE PTR [eax+0xddc7ff7]
  418432:	call   0x67b8:0x4cb975f9
  418439:	in     eax,dx
  41843a:	(bad)  
  41843b:	retf   0xd357
  41843e:	mov    WORD PTR [edi],ss
  418440:	dec    edi
  418441:	or     BYTE PTR [eax+ebx*2-0x6434b8da],bl
  418448:	adc    DWORD PTR fs:[esi+0x3ec6aa2d],ebx
  41844f:	iret   
  418450:	shl    BYTE PTR [edi+0x5d],0x98
  418454:	pop    edi
  418455:	dec    esi
  418456:	pop    es
  418457:	push   ds
  418458:	ret    
  418459:	or     eax,0xf960fb7
  41845e:	add    eax,0x3bf15bbc
  418463:	out    0xd3,eax
  418465:	sbb    cl,BYTE PTR [edi-0x8]
  418468:	pushf  
  418469:	add    al,0xa9
  41846b:	test   eax,0x39c712f2
  418470:	push   cs
  418471:	sbb    esp,DWORD PTR [ecx+ebx*2-0x345a0a01]
  418478:	arpl   WORD PTR [ecx-0x793dc275],cx
  41847e:	fadd   QWORD PTR [ebx]
  418480:	fst    DWORD PTR [edi-0x380100a4]
  418486:	xchg   BYTE PTR [esi],bl
  418488:	sbb    DWORD PTR [eax],0x8
  41848b:	pusha  
  41848c:	pop    ss
  41848d:	(bad)  
  41848e:	sahf   
  41848f:	sub    DWORD PTR [eax],edx
  418491:	daa    
  418492:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418493:	xchg   ecx,eax
  418494:	pop    esp
  418495:	hlt    
  418496:	mov    ecx,0x1adb8f5b
  41849b:	stc    
  41849c:	xchg   ebx,eax
  41849d:	mov    ebx,0x2b17418d
  4184a2:	mov    dl,0x30
  4184a4:	xchg   esp,eax
  4184a5:	mov    ch,0x41
  4184a7:	push   ds
  4184a8:	leave  
  4184a9:	pop    es
  4184aa:	cli    
  4184ab:	(bad)  
  4184ad:	pop    esp
  4184ae:	push   eax
  4184af:	call   0x5c3:0xba04c77b
  4184b6:	mov    dh,0xde
  4184b8:	push   ds
  4184b9:	or     BYTE PTR [ebp+0x12],cl
  4184bc:	loope  0x4184f5
  4184be:	jb     0x418466
  4184c0:	sbb    al,0xbd
  4184c2:	pop    ebp
  4184c3:	cdq    
  4184c4:	shr    BYTE PTR [ebx+0x36c3b47c],1
  4184ca:	dec    edi
  4184cb:	outs   dx,DWORD PTR ds:[esi]
  4184cc:	sub    DWORD PTR [ecx],0xa178379c
  4184d2:	test   DWORD PTR [esi+0x5f],eax
  4184d5:	pop    edi
  4184d6:	imul   ecx,ecx,0xffffffaf
  4184d9:	mov    ds:0x83b266ff,al
  4184de:	imul   edi
  4184e0:	and    al,0x6f
  4184e2:	inc    bl
  4184e4:	xchg   ebp,eax
  4184e5:	mov    ds:0xbc7dcc56,al
  4184ea:	or     DWORD PTR [esi-0x4aa60b05],esp
  4184f0:	sar    DWORD PTR [edi+ebx*4+0x27],cl
  4184f4:	jnp    0x418542
  4184f6:	xchg   ebp,eax
  4184f7:	sbb    al,0xbc
  4184f9:	dec    edx
  4184fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184fb:	js     0x418575
  4184fd:	(bad)  
  4184fe:	cwde   
  4184ff:	sahf   
  418500:	adc    eax,0xe36a5f75
  418505:	pop    ds
  418506:	or     DWORD PTR [edi-0x1e6aab7c],edi
  41850c:	inc    esp
  41850d:	mov    ebp,0xc8d50fbe
  418512:	in     eax,0xc
  418514:	dec    ebp
  418515:	jmp    0xcebf:0xc69e6d42
  41851c:	adc    al,0x88
  41851e:	cmp    DWORD PTR [ecx-0x58],esp
  418521:	xchg   esi,ecx
  418523:	stos   BYTE PTR es:[edi],al
  418524:	xchg   DWORD PTR [eax],edi
  418526:	adc    eax,ecx
  418528:	shl    BYTE PTR [esi+ebx*4+0x21de6117],1
  41852f:	(bad)  
  418530:	scas   al,BYTE PTR es:[edi]
  418531:	das    
  418532:	(bad)
  418536:	push   ebx
  418537:	sbb    DWORD PTR [ecx],0x31a7c37
  41853d:	cmp    DWORD PTR [edi-0x59],esi
  418540:	cdq    
  418541:	fstp   QWORD PTR [ebx+esi*2-0x27]
  418545:	mov    dl,0x24
  418547:	stos   BYTE PTR es:[edi],al
  418548:	xchg   ebx,eax
  418549:	mov    esp,0xefe8ac9
  41854e:	and    dl,al
  418550:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418551:	push   0xffffffcf
  418553:	aaa    
  418554:	mov    WORD PTR ds:0xc14fb9fc,ss
  41855a:	mov    ss,WORD PTR [ebx]
  41855c:	add    al,0x77
  41855f:	sbb    cl,BYTE PTR [edx-0x23]
  418562:	jle    0x418599
  418564:	xor    al,BYTE PTR [ebx-0x65b9e8cd]
  41856a:	(bad)  
  41856b:	imul   ecx,DWORD PTR [edx],0xffffff98
  41856e:	pop    es
  41856f:	dec    edx
  418570:	sbb    DWORD PTR [ebp-0x60],esp
  418573:	push   eax
  418574:	ss out dx,eax
  418576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418577:	xor    DWORD PTR [ecx+esi*1],eax
  41857a:	push   0xffffff94
  41857c:	push   es
  41857d:	or     esi,esi
  41857f:	cmp    DWORD PTR [esp+eax*2+0x1d84c954],0xffffffdd
  418587:	mov    bl,0xba
  418589:	je     0x418542
  41858b:	mov    DWORD PTR [edi+0x69],ebx
  41858e:	push   eax
  41858f:	mov    al,ds:0x980118ce
  418594:	cmp    BYTE PTR [esi-0xf],ch
  418597:	inc    ebx
  418598:	xor    ebp,DWORD PTR [ebx+eiz*4]
  41859b:	add    eax,0xaf891888
  4185a0:	pop    edi
  4185a1:	add    esp,DWORD PTR [edx+0x29]
  4185a4:	xchg   ebx,eax
  4185a5:	mov    ah,0xb2
  4185a7:	xchg   edx,eax
  4185a8:	sub    al,0x2f
  4185aa:	idiv   BYTE PTR [esi+0x6b]
  4185ad:	(bad)  
  4185ae:	(bad)  
  4185af:	mov    eax,0xf58c2bc0
  4185b4:	inc    ecx
  4185b5:	sbb    BYTE PTR [ecx+0x2537ad1a],dh
  4185bb:	mov    edx,0x884d694c
  4185c0:	and    esp,esi
  4185c2:	stos   DWORD PTR es:[edi],eax
  4185c3:	cld    
  4185c4:	test   eax,0x9c97e9ef
  4185c9:	rcl    BYTE PTR [eax],0xf9
  4185cc:	mov    cl,0xd0
  4185ce:	mov    ah,0x89
  4185d0:	fnstsw WORD PTR [ebx-0x20]
  4185d3:	ss jno 0x418641
  4185d6:	cmp    BYTE PTR [edi+0x1a],dl
  4185d9:	aaa    
  4185da:	fidiv  WORD PTR [ebp-0x64]
  4185dd:	lds    ecx,FWORD PTR [edx-0x4e09b65c]
  4185e3:	out    0xf0,al
  4185e5:	dec    esi
  4185e6:	call   0x12334ca7
  4185eb:	xlat   BYTE PTR ds:[ebx]
  4185ec:	mov    ch,0x2f
  4185ee:	aad    0x4d
  4185f0:	sbb    BYTE PTR [ecx-0x3e],cl
  4185f3:	addr16 jo 0x418641
  4185f6:	mov    bx,cx
  4185f9:	les    esp,FWORD PTR [edx+0x6c]
  4185fc:	js     0x41863d
  4185fe:	cwde   
  4185ff:	mov    esi,0x1e5ade49
  418604:	lds    eax,FWORD PTR [edx]
  418606:	cmp    eax,DWORD PTR [esi-0x1c7e5092]
  41860c:	mov    cl,0xb4
  41860e:	ja     0x418644
  418610:	mov    esi,0x3f0b0e82
  418615:	out    0x48,al
  418617:	pop    es
  418618:	mov    ebx,DWORD PTR [edx+0xb]
  41861b:	jo     0x4185d1
  41861d:	or     al,0x33
  41861f:	dec    ecx
  418620:	push   edx
  418621:	out    0xa4,al
  418623:	sub    cl,BYTE PTR [edx+ebx*8-0x52]
  418627:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418628:	or     DWORD PTR [esi+ecx*1+0x26],ebx
  41862c:	or     eax,0xc46482a4
  418631:	jb     0x418650
  418633:	(bad)  
  418634:	(bad)  
  418635:	sahf   
  418636:	cli    
  418637:	enter  0x17bb,0x28
  41863b:	(bad)  
  41863c:	enter  0xc736,0x20
  418640:	das    
  418641:	push   0xffffff93
  418643:	retf   0x8eeb
  418646:	push   edx
  418647:	inc    ebp
  418648:	dec    esi
  418649:	jecxz  0x4185cc
  41864b:	mov    al,ds:0x9849c4c7
  418650:	jg     0x418614
  418652:	mov    edi,0x2bf73886
  418657:	cld    
  418658:	push   ds
  418659:	add    DWORD PTR [esi+edi*8+0x1e15048e],0xf6e984b3
  418664:	push   ecx
  418665:	xor    edx,ecx
  418667:	mov    dl,BYTE PTR [edi]
  418669:	push   0xffffff90
  41866b:	push   cs
  41866c:	loope  0x418615
  41866e:	dec    ebp
  41866f:	push   cs
  418670:	pop    ebp
  418671:	push   ds
  418672:	sub    al,bl
  418674:	mov    esp,0xf3260aa0
  418679:	or     DWORD PTR [eax+0x41],eax
  41867c:	inc    ebx
  41867d:	or     al,0x24
  41867f:	or     DWORD PTR [eax],edx
  418681:	cmp    BYTE PTR [esi-0x7],ch
  418684:	cli    
  418685:	jae    0x418630
  418687:	and    eax,0x68dd0d4e
  41868c:	(bad)  
  41868d:	in     eax,dx
  41868e:	mov    dl,bl
  418690:	sub    eax,0xff1c512b
  418695:	push   0xd
  418697:	dec    esi
  418698:	or     eax,0x3d62a8ae
  41869d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41869e:	out    dx,eax
  41869f:	mov    WORD PTR [edi],?
  4186a1:	rcl    eax,0xdf
  4186a4:	lock add esi,DWORD PTR [ecx]
  4186a7:	addr16 inc eax
  4186a9:	jnp    0x4186f9
  4186ab:	clc    
  4186ac:	ins    DWORD PTR es:[edi],dx
  4186ad:	mov    esi,0x532e18f3
  4186b2:	sbb    al,0x51
  4186b4:	mov    al,0xed
  4186b6:	(bad)  
  4186b7:	imul   esi,DWORD PTR ds:0xb3d05f1,0x1e
  4186be:	pusha  
  4186bf:	and    dl,BYTE PTR [ebp-0x4]
  4186c2:	xchg   di,ax
  4186c4:	fld    TBYTE PTR [edi]
  4186c6:	inc    edx
  4186c7:	mov    ds:0x5b9ce4f0,eax
  4186cc:	mov    edx,ecx
  4186ce:	test   eax,0xa46a6daa
  4186d3:	hlt    
  4186d4:	js     0x4186fa
  4186d6:	jecxz  0x418714
  4186d8:	daa    
  4186d9:	(bad)  
  4186db:	cmp    ah,ch
  4186dd:	sbb    BYTE PTR [edx+eax*2-0x3e],ch
  4186e1:	mov    dl,0xb5
  4186e3:	js     0x4186a5
  4186e5:	lahf   
  4186e6:	loope  0x418753
  4186e8:	inc    ecx
  4186e9:	cmp    eax,esp
  4186eb:	inc    eax
  4186ec:	push   es
  4186ed:	popa   
  4186ee:	ins    DWORD PTR es:[edi],dx
  4186ef:	mov    edi,0xdb6b9c86
  4186f4:	dec    ebx
  4186f5:	add    bh,ch
  4186f7:	es push ss
  4186f9:	loop   0x4186a5
  4186fb:	sti    
  4186fc:	jecxz  0x418725
  4186fe:	sahf   
  4186ff:	xchg   edi,eax
  418700:	sub    DWORD PTR [ebx],0x176bea41
  418706:	xlat   BYTE PTR ds:[ebx]
  418707:	repnz cli 
  418709:	add    DWORD PTR [eax+0x2b544b55],esi
  41870f:	jns    0x41869b
  418711:	xor    eax,0x8a03a43a
  418716:	xor    esi,DWORD PTR [ebx+esi*2]
  418719:	mov    ss,WORD PTR [edi-0x48]
  41871c:	dec    eax
  41871d:	out    dx,eax
  41871e:	mov    dh,0x13
  418720:	inc    eax
  418721:	cmp    DWORD PTR [esi-0x3d6af897],0x412b0223
  41872b:	xchg   esi,eax
  41872c:	dec    BYTE PTR [ebx+0x583080e2]
  418732:	outs   dx,BYTE PTR ds:[esi]
  418733:	jo     0x418730
  418735:	ins    DWORD PTR es:[edi],dx
  418736:	cmp    eax,0xed2ae875
  41873b:	dec    edi
  41873c:	scas   al,BYTE PTR es:[edi]
  41873d:	in     al,dx
  41873e:	adc    DWORD PTR [ebp+ecx*2-0x12],ecx
  418742:	xchg   ecx,eax
  418743:	jle    0x418722
  418745:	or     esp,DWORD PTR [edx]
  418747:	lods   al,BYTE PTR ds:[esi]
  418748:	or     al,0x9
  41874a:	mov    eax,0x9304702c
  41874f:	ds stos BYTE PTR es:[edi],al
  418751:	adc    BYTE PTR [ebp-0x7f],ah
  418754:	jl     0x4187bd
  418756:	out    0xb2,al
  418758:	aas    
  418759:	cmp    DWORD PTR [edi],edi
  41875b:	clc    
  41875c:	and    al,0x68
  41875e:	iret   
  41875f:	pop    esi
  418760:	pop    es
  418761:	in     al,0x74
  418763:	ret    0x1f1
  418766:	int3   
  418767:	inc    ecx
  418768:	shl    DWORD PTR [ecx+0x2f],0xc2
  41876c:	mov    cl,0x7d
  41876e:	shr    DWORD PTR [ebx],1
  418770:	xchg   ebp,eax
  418771:	rol    esp,1
  418773:	outs   dx,DWORD PTR ds:[esi]
  418774:	(bad)  
  418775:	fnstcw WORD PTR [ecx-0x19]
  418778:	xchg   esi,eax
  418779:	rcr    bl,0x8
  41877c:	push   ds
  41877d:	leave  
  41877e:	pop    esi
  41877f:	jns    0x41870e
  418781:	pop    esp
  418782:	out    dx,al
  418783:	fs sbb eax,0x98849c91
  418789:	cs push edx
  41878b:	in     al,0xb8
  41878d:	arpl   cx,si
  41878f:	xor    ebx,DWORD PTR [eax]
  418791:	pop    ecx
  418792:	data16 xor bh,BYTE PTR [eax]
  418795:	adc    eax,0x37086c5f
  41879a:	push   ebx
  41879b:	mov    ebx,0x7d5acac6
  4187a0:	ins    BYTE PTR es:[edi],dx
  4187a1:	out    0xc,al
  4187a3:	ret    
  4187a4:	fsubr  st(6),st
  4187a6:	add    al,0x19
  4187a8:	ror    BYTE PTR [ecx+0x57],0x3
  4187ac:	bound  ebx,QWORD PTR [ebx]
  4187ae:	adc    eax,0x45ab1d8f
  4187b3:	shr    DWORD PTR [ebx+0x4da67409],1
  4187b9:	sub    eax,0x198166b0
  4187be:	sbb    ecx,esi
  4187c0:	xor    DWORD PTR [edi+0x20],esp
  4187c3:	aam    0xfd
  4187c5:	pop    esp
  4187c6:	out    0x9e,eax
  4187c8:	sbb    al,0x6b
  4187ca:	pop    ebp
  4187cb:	stos   DWORD PTR es:[edi],eax
  4187cc:	add    dh,BYTE PTR [edi-0x72d9ac20]
  4187d2:	xor    eax,0xf1cbbc12
  4187d7:	popf   
  4187d8:	or     BYTE PTR [eax-0x32353270],ah
  4187de:	mov    ecx,0xed4dceba
  4187e3:	test   eax,0x25e2c331
  4187e8:	jb     0x4187d0
  4187ea:	pop    ss
  4187eb:	int3   
  4187ec:	test   BYTE PTR [ebx+0x5f],ch
  4187ef:	out    0xcc,eax
  4187f1:	jmp    0x41883c
  4187f3:	das    
  4187f4:	jae    0x418792
  4187f6:	push   ebx
  4187f7:	dec    ebx
  4187f8:	cdq    
  4187f9:	mov    esi,0xb590dbee
  4187fe:	ins    DWORD PTR es:[edi],dx
  4187ff:	add    BYTE PTR [edi+0x31],dl
  418802:	test   eax,0x33edf221
  418807:	cmp    ah,bl
  418809:	sub    BYTE PTR [eax],al
  41880b:	pop    esp
  41880c:	cli    
  41880d:	adc    edx,eax
  41880f:	clc    
  418810:	ja     0x4187c1
  418812:	stos   DWORD PTR es:[edi],eax
  418813:	xor    al,0xce
  418815:	and    al,0xa0
  418817:	inc    esp
  418818:	or     eax,0x861810ce
  41881d:	or     ecx,DWORD PTR [ecx+edi*4+0x4]
  418821:	retf   
  418822:	mov    ebx,DWORD PTR [esi+0x1d39ba92]
  418828:	xchg   DWORD PTR [ecx-0x49],edx
  41882b:	adc    eax,0x1049ed9d
  418830:	aad    0x4f
  418832:	adc    DWORD PTR [ecx+0x5cc974c4],ebx
  418838:	push   ecx
  418839:	fdivr  st,st(6)
  41883b:	mov    ah,0x1d
  41883d:	ja     0x4187cf
  41883f:	popf   
  418840:	jns    0x418860
  418842:	mov    ch,0xbd
  418844:	les    edx,FWORD PTR [edx]
  418846:	add    DWORD PTR [esi],0xa6106257
  41884c:	fld    DWORD PTR [ebx-0x1e67a6cf]
  418852:	stos   BYTE PTR es:[edi],al
  418853:	test   eax,0xe359200c
  418858:	adc    cl,al
  41885a:	in     al,dx
  41885b:	leave  
  41885c:	pop    edx
  41885d:	adc    DWORD PTR [edx],eax
  41885f:	icebp  
  418860:	push   edi
  418861:	pushf  
  418862:	loopne 0x4188de
  418864:	cli    
  418865:	pop    ecx
  418866:	push   ds
  418867:	mov    ebp,0x870c6453
  41886c:	mov    ebx,0x9d3146eb
  418871:	(bad)  
  418872:	xchg   ebx,eax
  418873:	inc    esp
  418874:	iret   
  418875:	sahf   
  418876:	mov    ds:0xc4dceff3,eax
  41887b:	sbb    dh,BYTE PTR [edx+ebx*4]
  41887e:	xchg   DWORD PTR [esi],edx
  418880:	lods   eax,DWORD PTR ds:[esi]
  418881:	mov    esp,0x70438fa8
  418886:	lea    eax,[edx+0x3cadb0ce]
  41888c:	xchg   edx,eax
  41888d:	mov    DWORD PTR [esi-0x3892d8ac],ebp
  418893:	ss sbb eax,0x7ee63db3
  418899:	xor    eax,0x10bc42d1
  41889e:	fisttp QWORD PTR [ebx-0x1c]
  4188a1:	cdq    
  4188a2:	fild   QWORD PTR [eax+eax*1]
  4188a5:	ds jmp 0x1cf3:0xcc00b373
  4188ad:	xchg   ebp,eax
  4188ae:	pop    edi
  4188af:	aas    
  4188b0:	shl    BYTE PTR [ebx],1
  4188b2:	mov    cl,0x33
  4188b4:	jne    0x418853
  4188b6:	jmp    0xffdb:0xa6ede88a
  4188bd:	ret    0x96be
  4188c0:	push   ds
  4188c1:	in     al,0x28
  4188c3:	(bad)  
  4188c4:	pop    edx
  4188c5:	push   ecx
  4188c6:	xor    DWORD PTR [ebx+0x1a748a5e],0x41421dde
  4188d0:	jb     0x418855
  4188d2:	mov    al,0xb5
  4188d4:	push   esi
  4188d5:	lahf   
  4188d6:	xchg   esi,eax
  4188d7:	inc    esi
  4188d8:	shl    DWORD PTR [ebp+eiz*2-0x46],cl
  4188dc:	lods   eax,DWORD PTR ds:[esi]
  4188dd:	push   0xedfc0f8f
  4188e2:	lods   eax,DWORD PTR ds:[esi]
  4188e3:	ins    DWORD PTR es:[edi],dx
  4188e4:	scas   eax,DWORD PTR es:[edi]
  4188e5:	pop    esi
  4188e6:	jnp    0x4188d5
  4188e8:	sbb    esi,DWORD PTR [esi+0x7f]
  4188eb:	or     DWORD PTR [ebx],ecx
  4188ed:	aad    0xe6
  4188ef:	shl    DWORD PTR [edi+0x3d7c7750],0x71
  4188f6:	jmp    0x418902
  4188f8:	ja     0x4188bd
  4188fa:	leave  
  4188fb:	cmc    
  4188fc:	sub    BYTE PTR [ebx-0x2aaafc8d],bl
  418902:	mov    esi,ds
  418904:	sub    BYTE PTR [ebp-0x5],dl
  418907:	not    DWORD PTR [ebx-0x53be3cb4]
  41890d:	mov    edi,0x5d0f9ea
  418912:	mov    ch,0xcb
  418914:	cmc    
  418915:	enter  0x226d,0x13
  418919:	bound  ecx,QWORD PTR ds:0x135bd987
  41891f:	cld    
  418920:	test   eax,0x1ae95bcf
  418925:	pop    ebp
  418926:	dec    edx
  418927:	jmp    0x7534:0xac300274
  41892e:	shl    dl,cl
  418930:	push   0xfffffffc
  418932:	add    ebp,DWORD PTR [edi+0x2f33918c]
  418938:	mov    cl,0x41
  41893a:	dec    ebp
  41893b:	mov    ebx,0x8e9f4d66
  418940:	inc    edx
  418941:	mov    DWORD PTR [ecx-0x3e],esi
  418944:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418945:	xlat   BYTE PTR ds:[ebx]
  418946:	rcl    ebp,cl
  418948:	call   0x14f4:0x83c25485
  41894f:	pop    edi
  418950:	push   ss
  418951:	stc    
  418952:	setae  BYTE PTR [ebp-0x6b896570]
  418959:	pop    ebp
  41895a:	sub    eax,0x9009b45f
  41895f:	cdq    
  418960:	jns    0x418930
  418962:	ja     0x418987
  418964:	jo     0x41892b
  418966:	push   DWORD PTR gs:[ebx+0x45]
  41896a:	jne    0x41892b
  41896c:	jns    0x41896a
  41896e:	dec    ecx
  41896f:	lods   eax,DWORD PTR ds:[esi]
  418970:	shl    DWORD PTR [eax-0x518d3960],0x36
  418977:	test   BYTE PTR [edi+0x48fdcf2d],dl
  41897d:	mov    edi,0x5297a1f1
  418982:	xchg   edi,eax
  418983:	(bad)  
  418984:	retf   0x39f2
  418987:	popf   
  418988:	mov    esp,DWORD PTR [esi]
  41898a:	std    
  41898b:	ss mov eax,0x47c78c40
  418991:	push   0xffffff90
  418993:	mov    BYTE PTR [edi],dl
  418995:	pop    ds
  418996:	in     al,0x37
  418998:	sub    bl,ch
  41899a:	pop    esi
  41899b:	add    ah,BYTE PTR ds:0xc0a3918a
  4189a1:	(bad)  
  4189a2:	cdq    
  4189a3:	inc    edx
  4189a4:	clc    
  4189a5:	clc    
  4189a6:	dec    esi
  4189a7:	xor    BYTE PTR [eax+0x65],dl
  4189aa:	and    sp,WORD PTR [ebx+esi*2]
  4189ae:	sti    
  4189af:	ficom  WORD PTR [ecx+eiz*2]
  4189b2:	mov    al,ds:0xdde7f9e
  4189b7:	mov    bl,0x59
  4189b9:	mov    ecx,0xfcdbb428
  4189be:	push   0x10c45a94
  4189c3:	jb     0x418a37
  4189c5:	and    ah,ah
  4189c7:	and    edx,DWORD PTR ds:0x7a56899c
  4189cd:	(bad)
  4189d0:	or     BYTE PTR [ebp-0xcefebe9],bh
  4189d6:	mov    WORD PTR [edi+0x10b2ca0b],cs
  4189dc:	xchg   bl,dh
  4189de:	xor    al,0xd3
  4189e0:	imul   edx,DWORD PTR [ecx+0x39a2012f],0xff07e407
  4189ea:	pop    ss
  4189eb:	inc    eax
  4189ec:	test   DWORD PTR [edi+0x69],ebp
  4189ef:	adc    BYTE PTR [edx+eax*1+0x3185000a],bh
  4189f6:	ror    BYTE PTR [ebp-0x49],0xce
  4189fa:	jmp    0x41898d
  4189fc:	jg     0x418a59
  4189fe:	or     dh,BYTE PTR [edi+edx*8-0x491caa44]
  418a05:	cwde   
  418a06:	fadd   DWORD PTR [edi-0x41]
  418a09:	loopne 0x418a88
  418a0b:	jp     0x418a08
  418a0d:	push   esp
  418a0e:	push   ds
  418a0f:	xor    al,0xc9
  418a11:	sub    DWORD PTR [eax+edi*8-0x2da67314],ecx
  418a18:	cmc    
  418a19:	dec    edx
  418a1a:	test   al,0xae
  418a1c:	or     eax,0x4889baf6
  418a21:	pop    eax
  418a22:	out    0x24,eax
  418a24:	jae    0x4189fe
  418a26:	pushf  
  418a27:	cs add esp,ecx
  418a2a:	and    edx,DWORD PTR [esi-0x77719df9]
  418a30:	daa    
  418a31:	xchg   DWORD PTR [edi+0xa],edi
  418a34:	sbb    dh,BYTE PTR [esp+eiz*2+0x1c]
  418a38:	sar    BYTE PTR [esi+eax*2+0x4d],0xab
  418a3d:	scas   al,BYTE PTR es:[edi]
  418a3e:	mov    al,BYTE PTR [edi+0xa]
  418a41:	push   esp
  418a42:	adc    DWORD PTR fs:[ebx-0x6a06da9a],0xffffffa0
  418a4a:	and    DWORD PTR [edx-0x7f],0xffffffe3
  418a4e:	mov    al,0xa5
  418a50:	dec    esp
  418a51:	push   0x4b
  418a53:	jecxz  0x418a40
  418a55:	mov    ds:0xb0a67f84,eax
  418a5a:	push   es
  418a5b:	mov    edi,0xf7fd6fbf
  418a60:	adc    al,0xb
  418a62:	ins    BYTE PTR es:[edi],dx
  418a63:	sub    BYTE PTR [eax-0x75dda385],0xdc
  418a6a:	push   esi
  418a6b:	(bad)  
  418a6c:	lahf   
  418a6d:	mov    ebx,0xb4c6bba3
  418a72:	jns    0x418a88
  418a74:	inc    ecx
  418a75:	mov    edx,0x4e719f90
  418a7a:	cmp    DWORD PTR [esi+ebx*1],ecx
  418a7d:	mov    gs,esp
  418a7f:	pop    es
  418a80:	ret    0xe097
  418a83:	fild   DWORD PTR [eax]
  418a85:	push   ds
  418a86:	sar    BYTE PTR [edi-0x252e7e02],0xa8
  418a8d:	mov    bl,0x78
  418a8f:	int3   
  418a90:	adc    esp,ecx
  418a92:	pushf  
  418a93:	xchg   edi,eax
  418a94:	mov    BYTE PTR ds:0x6e8c8d6c,dh
  418a9a:	ss sbb al,0x42
  418a9d:	pop    es
  418a9e:	(bad)  [edx-0x65b84959]
  418aa4:	xchg   esi,eax
  418aa5:	xor    edx,esi
  418aa7:	repz pop eax
  418aa9:	or     ah,BYTE PTR [edx+0x25]
  418aac:	sbb    BYTE PTR [eax-0x720621fa],al
  418ab2:	cmp    DWORD PTR [ebp+0xd],ecx
  418ab5:	mov    ds:0x74aa3a03,al
  418aba:	cwde   
  418abb:	inc    eax
  418abc:	push   esp
  418abd:	sub    DWORD PTR [ecx+0x10d1e9f1],eax
  418ac3:	retf   
  418ac4:	ins    BYTE PTR es:[edi],dx
  418ac5:	es ret 0x8266
  418ac9:	pusha  
  418aca:	jmp    0x418af3
  418acc:	jg     0x418a7c
  418ace:	mov    ah,0x7d
  418ad0:	xor    BYTE PTR [edx-0x3e],al
  418ad3:	les    ecx,FWORD PTR [edi]
  418ad5:	or     eax,DWORD PTR [ebp+0x368ff1f9]
  418adb:	fidivr WORD PTR [edx+0x1f9a219c]
  418ae1:	cld    
  418ae2:	std    
  418ae3:	test   BYTE PTR [esi+edi*1+0x4],dh
  418ae7:	jbe    0x418ae6
  418ae9:	imul   eax,edx,0xcebbd4e
  418aef:	pop    ecx
  418af0:	cdq    
  418af1:	rcl    DWORD PTR [ebx],0xd4
  418af4:	jae    0x418aa7
  418af6:	ret    
  418af7:	mov    dl,0x7c
  418af9:	jno    0x418aa9
  418afb:	inc    ebx
  418afc:	sbb    ebp,esp
  418afe:	lock pop eax
  418b00:	repnz add DWORD PTR [ebx+0x1ff3fdab],ebx
  418b07:	ja     0x418b24
  418b09:	sub    BYTE PTR [esi],bh
  418b0b:	push   ebx
  418b0c:	jl     0x418ad0
  418b0e:	adc    BYTE PTR [esi+0x44b26905],0x26
  418b15:	bt     DWORD PTR [ebx],esi
  418b18:	pop    ebp
  418b19:	sbb    BYTE PTR [edi+0x23],ah
  418b1c:	add    bh,cl
  418b1e:	pop    ds
  418b1f:	push   cs
  418b20:	inc    ecx
  418b21:	test   eax,0x657e6696
  418b26:	repz test al,0xaa
  418b29:	push   ecx
  418b2a:	mov    bh,0x17
  418b2c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b2d:	adc    eax,0x46253a49
  418b32:	xor    DWORD PTR [eax+0x6a],0xf9e9a5ac
  418b39:	inc    edx
  418b3a:	sub    bh,dh
  418b3c:	xlat   BYTE PTR ds:[ebx]
  418b3d:	cwde   
  418b3e:	pop    ebp
  418b3f:	call   0x98f8dc34
  418b44:	push   0xb3418093
  418b49:	pusha  
  418b4a:	sti    
  418b4b:	pop    ebx
  418b4c:	sub    DWORD PTR [esi+0xa],edx
  418b4f:	mov    ecx,0x35a4e772
  418b54:	out    0x32,eax
  418b56:	mov    eax,0x892ff203
  418b5b:	idiv   BYTE PTR [eax+0x463add7a]
  418b61:	xlat   BYTE PTR ds:[ebx]
  418b62:	stos   BYTE PTR es:[edi],al
  418b63:	jns    0x418b5f
  418b65:	xchg   edx,eax
  418b66:	cli    
  418b67:	sub    edx,DWORD PTR [esi]
  418b69:	mov    ch,0x15
  418b6b:	(bad)  
  418b6c:	and    cl,al
  418b6e:	test   esi,esp
  418b70:	adc    DWORD PTR [eax],0xf830aeb7
  418b76:	sbb    DWORD PTR [eax-0x37],esi
  418b79:	icebp  
  418b7a:	jmp    0x7501d14e
  418b7f:	aas    
  418b80:	sub    BYTE PTR [ecx],al
  418b82:	mov    ebp,esi
  418b84:	mov    bl,dl
  418b86:	out    0x47,eax
  418b88:	mov    ebp,0x2738ab3c
  418b8d:	jo     0x418bf0
  418b8f:	mov    dh,0x7c
  418b91:	push   0xffffffc9
  418b93:	add    al,0x23
  418b95:	stos   BYTE PTR es:[edi],al
  418b96:	pop    ebx
  418b97:	cs or  eax,0x9983bf57
  418b9d:	cdq    
  418b9e:	stos   BYTE PTR es:[edi],al
  418b9f:	push   eax
  418ba0:	mov    al,ds:0x9577574a
  418ba5:	out    dx,eax
  418ba6:	xor    ch,BYTE PTR [ecx]
  418ba8:	push   0xb
  418baa:	(bad)  
  418bab:	hlt    
  418bac:	pop    ebp
  418bad:	mov    ds:0xabb63c17,eax
  418bb2:	clc    
  418bb3:	repnz stos DWORD PTR es:[edi],eax
  418bb5:	mov    bh,0xc1
  418bb7:	jmp    0x418c1d
  418bb9:	and    dh,cl
  418bbb:	inc    ebp
  418bbc:	dec    ebp
  418bbd:	stos   DWORD PTR es:[edi],eax
  418bbe:	mov    ah,0xe0
  418bc0:	or     al,0xb7
  418bc2:	icebp  
  418bc3:	cmp    al,0x46
  418bc5:	pushf  
  418bc6:	shr    DWORD PTR [edi],cl
  418bc8:	pop    ss
  418bc9:	call   0x92c2:0x4928ec81
  418bd0:	inc    esp
  418bd1:	or     al,0xe6
  418bd3:	cmp    DWORD PTR gs:[ebx-0x6355860b],ebp
  418bda:	fbld   TBYTE PTR [edi+edi*1]
  418bdd:	dec    edi
  418bde:	ja     0x418bd9
  418be0:	pop    ebp
  418be1:	scas   al,BYTE PTR es:[edi]
  418be2:	imul   DWORD PTR [edi]
  418be4:	xor    ebx,DWORD PTR [ebp-0x7017ebe1]
  418bea:	imul   ebx,DWORD PTR [esi-0x462b2def],0xd
  418bf1:	dec    ebp
  418bf2:	test   eax,0xcf3785a2
  418bf7:	push   ss
  418bf8:	xchg   BYTE PTR fs:[ebp-0x77],al
  418bfc:	pop    esp
  418bfd:	add    eax,0x50db088
  418c02:	jge    0x418c0a
  418c04:	(bad)  
  418c05:	adc    ch,dh
  418c07:	aas    
  418c08:	es pop ebx
  418c0a:	xchg   DWORD PTR [edi+0x65cea1a4],edx
  418c10:	cld    
  418c11:	lea    esp,[ebx]
  418c13:	push   es
  418c14:	jae    0x418c05
  418c16:	dec    ebx
  418c17:	dec    DWORD PTR [edi]
  418c19:	scas   eax,DWORD PTR es:[edi]
  418c1a:	sub    cl,BYTE PTR [ebx+esi*4+0x49c7e4fb]
  418c21:	stc    
  418c22:	push   ebx
  418c23:	in     eax,0x91
  418c25:	push   eax
  418c26:	mov    ah,0x3b
  418c28:	fmul   QWORD PTR [esp+ebx*4-0x1]
  418c2c:	iret   
  418c2d:	scas   al,BYTE PTR es:[edi]
  418c2e:	lds    ebx,FWORD PTR [ecx]
  418c30:	push   ds
  418c31:	cmc    
  418c32:	inc    esp
  418c33:	pop    eax
  418c34:	jns    0x418c6c
  418c36:	nop
  418c37:	xchg   DWORD PTR [edx-0x4],esi
  418c3a:	jmp    0x418c0c
  418c3c:	mov    ebp,0xbc990642
  418c41:	fdivr  st(4),st
  418c43:	xchg   esi,ebp
  418c45:	mov    esi,0x7b5864a
  418c4a:	sbb    ebx,esi
  418c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c4d:	and    eax,0xd7453af6
  418c52:	out    dx,al
  418c53:	pop    es
  418c54:	adc    eax,0xac378232
  418c59:	inc    ecx
  418c5a:	je     0x418c32
  418c5c:	out    dx,al
  418c5d:	(bad)  
  418c5e:	out    0x48,eax
  418c60:	xor    DWORD PTR [ecx],edi
  418c62:	mov    ebx,0x4bb8801d
  418c67:	cmp    al,0x99
  418c69:	mov    al,0x6f
  418c6b:	aaa    
  418c6c:	mov    eax,ds:0x8037d180
  418c71:	(bad)  
  418c72:	je     0x418c93
  418c74:	fldenv [ebx+0xc]
  418c77:	lock lahf 
  418c79:	int3   
  418c7a:	jno    0x418ce9
  418c7c:	jge    0x418ce6
  418c7e:	stos   BYTE PTR es:[edi],al
  418c7f:	push   0xffffff8c
  418c81:	call   0xcfd360ca
  418c86:	add    al,0x4
  418c88:	fstp   DWORD PTR [edx+0x4]
  418c8b:	icebp  
  418c8c:	sub    DWORD PTR [ebx],0xb
  418c8f:	test   al,0xa0
  418c91:	mul    BYTE PTR [ebx]
  418c93:	leave  
  418c94:	sti    
  418c95:	xor    BYTE PTR [ecx-0x7450ee17],ch
  418c9b:	cmc    
  418c9c:	jecxz  0x418c99
  418c9e:	adc    bl,BYTE PTR [eax+0x75]
  418ca1:	jnp    0x418c8e
  418ca3:	mov    ecx,0xb5941355
  418ca8:	ret    
  418ca9:	xchg   ecx,eax
  418caa:	pop    ebp
  418cab:	sar    BYTE PTR [edx+0x24],cl
  418cae:	jmp    0x3ccf:0xa5c59e8f
  418cb5:	sub    cl,BYTE PTR [ebx+ecx*1-0x66a8c5c]
  418cbc:	xchg   edx,eax
  418cbd:	pop    es
  418cbe:	repz push ebp
  418cc0:	aam    0x9e
  418cc2:	scas   eax,DWORD PTR es:[edi]
  418cc3:	daa    
  418cc4:	xor    bl,BYTE PTR [edi]
  418cc6:	or     al,0xc6
  418cc8:	lock lds esi,FWORD PTR [esi]
  418ccb:	mov    ah,0x1d
  418ccd:	out    0xf6,al
  418ccf:	jbe    0x418ce3
  418cd1:	test   al,0xee
  418cd3:	adc    al,BYTE PTR [ebp+0x76c1c9c8]
  418cd9:	test   al,0x6a
  418cdb:	repz mov edx,0xe9ca8db1
  418ce1:	adc    edx,edx
  418ce3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ce4:	sbb    BYTE PTR [edx],ch
  418ce6:	and    eax,0x2943929f
  418ceb:	mov    al,ds:0x7b39a598
  418cf0:	pop    edx
  418cf1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418cf2:	mov    eax,ds:0xab9f6dfd
  418cf7:	jo     0x418ca7
  418cf9:	repnz push esi
  418cfb:	mov    ds:0xb20f5221,eax
  418d00:	xor    eax,0x401df3fa
  418d05:	inc    ebx
  418d06:	xchg   esi,eax
  418d07:	cmp    al,0xd0
  418d09:	xchg   ecx,eax
  418d0a:	(bad)  
  418d0b:	fldcw  WORD PTR [eax+0x3bb6bdce]
  418d11:	push   esp
  418d12:	sti    
  418d13:	shl    DWORD PTR [ebx],1
  418d15:	or     al,0x68
  418d17:	test   eax,0xd002acb9
  418d1c:	push   ecx
  418d1d:	out    dx,al
  418d1e:	gs push ebp
  418d20:	push   esp
  418d21:	add    al,0xe8
  418d23:	jmp    0x418cbe
  418d25:	loope  0x418d42
  418d27:	push   cs
  418d28:	je     0x418cde
  418d2a:	mov    dh,0xfb
  418d2c:	dec    eax
  418d2d:	inc    ebx
  418d2e:	dec    ebx
  418d2f:	fstp   DWORD PTR [ecx-0x3f4fc761]
  418d35:	out    0xc2,eax
  418d37:	inc    ebx
  418d38:	test   eax,0xa9252407
  418d3d:	ins    BYTE PTR es:[edi],dx
  418d3e:	jne    0x418d89
  418d40:	fcmovne st,st(4)
  418d42:	and    bh,BYTE PTR [ebx]
  418d44:	loope  0x418d6c
  418d46:	enter  0x1a9f,0x78
  418d4a:	adc    al,0x67
  418d4c:	mov    WORD PTR [edx+edi*1+0x5c],?
  418d50:	push   edi
  418d51:	mov    ?,esp
  418d53:	and    al,0xaf
  418d55:	bound  eax,QWORD PTR [eax-0xd]
  418d58:	aaa    
  418d59:	xchg   edx,eax
  418d5a:	jmp    0x476b:0xaac296e9
  418d61:	retf   0x3ad
  418d64:	xor    DWORD PTR [esi],0x2aab93b1
  418d6a:	aam    0x45
  418d6c:	sbb    edx,eax
  418d6e:	cwde   
  418d6f:	jmp    0x418d9e
  418d71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d72:	mov    ds:0x46ac64f9,al
  418d77:	push   ecx
  418d78:	sbb    DWORD PTR [edi-0x32],0x608cf33b
  418d7f:	in     eax,dx
  418d80:	jg     0x418d4b
  418d82:	mov    ah,0x28
  418d84:	xchg   esp,eax
  418d85:	retf   0xf18d
  418d88:	sub    edx,ebx
  418d8a:	add    DWORD PTR [edi],ebx
  418d8c:	iret   
  418d8d:	or     al,0xb9
  418d8f:	cmp    bh,BYTE PTR [ebp+ecx*1-0x5a3bc321]
  418d96:	adc    DWORD PTR [ebp-0x23ff5635],ebp
  418d9c:	add    DWORD PTR [esp+edx*2-0x6a],ebp
  418da0:	jecxz  0x418da9
  418da2:	inc    eax
  418da3:	and    dl,BYTE PTR [edx]
  418da5:	ret    0x11a4
  418da8:	aad    0x6e
  418daa:	lahf   
  418dab:	fcomi  st,st(3)
  418dad:	in     al,dx
  418dae:	pop    ds
  418daf:	mov    al,ds:0x150427fc
  418db4:	rcl    BYTE PTR ds:0x117057c6,1
  418dba:	aas    
  418dbb:	jl     0x418d5a
  418dbd:	mov    ds:0xf36c08c,eax
  418dc2:	icebp  
  418dc3:	add    bl,BYTE PTR [esi+0x2b0fab7a]
  418dc9:	call   0x68eb45bf
  418dce:	xchg   esp,eax
  418dcf:	cld    
  418dd0:	sub    ecx,DWORD PTR [edx+0x22]
  418dd3:	in     al,0x51
  418dd5:	sub    ebx,0xffffffa8
  418dd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dd9:	sbb    eax,0x105092c2
  418dde:	cmp    DWORD PTR [ebx+0x6cb89916],edi
  418de4:	fwait
  418de5:	or     al,0x61
  418de7:	mov    ?,WORD PTR [ecx-0x1a628f32]
  418ded:	xor    al,0xba
  418def:	pop    ss
  418df0:	jge    0x418e6f
  418df2:	std    
  418df3:	mov    bl,0x9b
  418df5:	or     al,0xb4
  418df7:	jns    0x418e0b
  418df9:	cli    
  418dfa:	test   BYTE PTR [edi+0x63],ch
  418dfd:	cld    
  418dfe:	les    ecx,FWORD PTR [esi+0x3a]
  418e01:	jle    0x418e37
  418e03:	inc    ecx
  418e04:	mov    ah,0xf1
  418e06:	in     al,dx
  418e07:	jo     0x418e39
  418e09:	lods   eax,DWORD PTR ds:[esi]
  418e0a:	dec    edi
  418e0b:	mov    eax,ds:0x3326fcf3
  418e10:	fist   DWORD PTR [edx-0x33]
  418e13:	popa   
  418e14:	aam    0x1b
  418e16:	add    esp,DWORD PTR [eax-0x4d]
  418e19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e1a:	mov    bl,0x8e
  418e1c:	test   BYTE PTR [ebp+eax*8+0x7f15d16c],bh
  418e23:	fidivr WORD PTR [ebp-0x51ed2065]
  418e29:	or     DWORD PTR [ecx],esi
  418e2b:	cmp    dl,cl
  418e2d:	pop    es
  418e2e:	test   DWORD PTR [edx],0xb9fd9b92
  418e34:	cwde   
  418e35:	mov    bh,0x8c
  418e37:	pop    es
  418e38:	rcl    DWORD PTR [edi-0x6c9b73a8],cl
  418e3e:	or     al,0xa8
  418e40:	xor    dh,BYTE PTR [ebx+0x2babda5d]
  418e46:	aam    0x9
  418e48:	pop    edx
  418e49:	pusha  
  418e4a:	mov    gs,WORD PTR [edi-0x95ce38d]
  418e50:	in     eax,0xaa
  418e52:	test   BYTE PTR [ebx],cl
  418e54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e55:	mov    DWORD PTR [edi],ebp
  418e57:	test   BYTE PTR [ebp+0x4c],0xe8
  418e5b:	mov    bh,0xcd
  418e5d:	out    0x91,al
  418e5f:	lods   eax,DWORD PTR ds:[esi]
  418e60:	mov    eax,ds:0x96cf4f81
  418e65:	xor    esp,DWORD PTR [eax]
  418e67:	gs fwait
  418e69:	out    0x85,eax
  418e6b:	mov    ebx,fs
  418e6d:	clc    
  418e6e:	inc    esi
  418e6f:	stos   BYTE PTR es:[edi],al
  418e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e71:	mov    esp,0xebad3ee3
  418e76:	fcomip st,st(3)
  418e78:	in     eax,dx
  418e79:	cld    
  418e7a:	sbb    dh,dl
  418e7c:	mov    WORD PTR [esp+eax*4-0x258247fd],?
  418e83:	in     eax,dx
  418e84:	xchg   ebp,eax
  418e85:	retf   0xb21d
  418e88:	mov    eax,0xe235ab71
  418e8d:	pop    edx
  418e8e:	cs dec ecx
  418e90:	mov    esp,0x74339ac8
  418e95:	dec    edx
  418e96:	jae    0x418e55
  418e98:	pop    esi
  418e99:	sti    
  418e9a:	push   0x21ae28db
  418e9f:	dec    ebx
  418ea0:	std    
  418ea1:	mov    ds:0xaf5dc92c,al
  418ea6:	add    al,0xe1
  418ea8:	test   BYTE PTR ds:0x49426d19,al
  418eae:	xor    esi,DWORD PTR [edi+0x2c51eb41]
  418eb4:	jmp    DWORD PTR [edi+0xee751a4]
  418eba:	xchg   ebx,eax
  418ebb:	(bad)  
  418ebc:	call   0x2d24a615
  418ec1:	push   0xb1d7495
  418ec6:	mov    edx,0x8b90d095
  418ecb:	fnstcw WORD PTR [edi+0x563a6264]
  418ed1:	iret   
  418ed2:	xchg   esi,eax
  418ed3:	push   cs
  418ed4:	imul   esp,DWORD PTR [edi+0x26a3b82f],0x2a
  418edb:	pop    ebx
  418edc:	(bad)  
  418edd:	pop    ebp
  418ede:	mov    esp,0xf2604261
  418ee3:	lock cdq 
  418ee5:	and    eax,0x24914699
  418eea:	fmul   DWORD PTR [ecx]
  418eec:	das    
  418eed:	fnstenv [ecx]
  418eef:	and    al,0xaa
  418ef1:	fisubr WORD PTR [edx+0x3c]
  418ef4:	pop    ebp
  418ef5:	push   0xffffffab
  418ef7:	mov    edi,0xcc4a849b
  418efc:	ins    DWORD PTR es:[edi],dx
  418efd:	mov    esi,0x206f8fa7
  418f02:	fs xchg ebp,eax
  418f04:	jb     0x418ee2
  418f06:	add    al,0x9a
  418f08:	mov    esp,0x83af28cb
  418f0d:	push   ebp
  418f0e:	adc    eax,0x34be3de1
  418f13:	(bad)  
  418f14:	jmp    0x84cdb523
  418f19:	add    BYTE PTR [ecx-0x5e],dh
  418f1c:	and    BYTE PTR ds:0x3a4a2e77,ah
  418f22:	pop    es
  418f23:	and    DWORD PTR [edi+0x5d],0xcb3cfa9a
  418f2a:	add    DWORD PTR [ecx],ebx
  418f2c:	ficomp DWORD PTR [edi+0x4]
  418f2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418f30:	inc    esi
  418f31:	repnz cmovle esi,DWORD PTR [ebx+0x49]
  418f36:	jmp    0x507b05d6
  418f3b:	lahf   
  418f3c:	mov    ch,0xb5
  418f3e:	jle    0x418f4e
  418f40:	mov    ecx,?
  418f42:	dec    esp
  418f43:	sbb    al,0xde
  418f45:	popa   
  418f46:	aad    0x2
  418f48:	cmp    ah,BYTE PTR [eax]
  418f4a:	pop    ds
  418f4b:	ret    
  418f4c:	mov    al,0xf6
  418f4e:	pushf  
  418f4f:	scas   eax,DWORD PTR es:[edi]
  418f50:	lahf   
  418f51:	sbb    BYTE PTR [ecx],0xa4
  418f54:	arpl   WORD PTR [ebx-0x24345479],cx
  418f5a:	stos   DWORD PTR es:[edi],eax
  418f5b:	hlt    
  418f5c:	(bad)  
  418f5d:	adc    eax,0xe3dc5b40
  418f62:	xchg   ebx,ebx
  418f64:	in     al,0x34
  418f66:	ss dec esp
  418f68:	mov    ebx,0xee7f7666
  418f6d:	mov    dh,0xd2
  418f6f:	mov    edx,0x26a58845
  418f74:	sbb    edx,ebp
  418f76:	std    
  418f77:	js     0x418fee
  418f79:	(bad)  
  418f7a:	sub    al,0x78
  418f7c:	cmp    DWORD PTR [esi-0x5f6a1387],esi
  418f82:	sub    cl,BYTE PTR [edi]
  418f84:	jl     0x418f24
  418f86:	xor    BYTE PTR [ebx],al
  418f88:	dec    esi
  418f89:	jmp    0x4abc:0xbce6a400
  418f90:	ins    BYTE PTR es:[edi],dx
  418f91:	(bad)  
  418f92:	das    
  418f93:	fcomp  DWORD PTR [ebx+0x63]
  418f96:	jp     0x418f1c
  418f98:	aas    
  418f99:	pop    ds
  418f9a:	icebp  
  418f9b:	mov    esp,0x75d09d3b
  418fa0:	push   esp
  418fa1:	fs or  edx,ebx
  418fa4:	mov    eax,ds:0xfc496dcf
  418fa9:	test   al,0x54
  418fab:	retf   0xc7f4
  418fae:	out    dx,al
  418faf:	add    ecx,edi
  418fb1:	pop    esp
  418fb2:	mov    al,0xa
  418fb4:	mov    bh,0xcd
  418fb6:	and    BYTE PTR [ecx+0x7f],0xfd
  418fba:	jns    0x418fee
  418fbc:	and    bh,BYTE PTR [esi-0x6a0ee572]
  418fc2:	pop    ds
  418fc3:	mov    bl,0x8a
  418fc5:	push   es
  418fc6:	mov    es,WORD PTR [edx]
  418fc8:	pop    esp
  418fc9:	xchg   esp,edx
  418fcb:	imul   esp,DWORD PTR [ebx+0x60d9a528],0x41908511
  418fd5:	inc    ebx
  418fd6:	aas    
  418fd7:	loop   0x418f6a
  418fd9:	pop    edi
  418fda:	sbb    al,0x18
  418fdc:	jns    0x418fad
  418fde:	jl     0x418fc7
  418fe0:	lods   al,BYTE PTR ds:[esi]
  418fe1:	push   es
  418fe2:	dec    eax
  418fe3:	adc    eax,0xf0632118
  418fe8:	and    al,0x7f
  418fea:	ja     0x418ffb
  418fec:	mov    al,ds:0x13e4197e
  418ff1:	xchg   edi,ebx
  418ff3:	mov    ecx,0xe9ab14f3
  418ff8:	ficomp DWORD PTR [eax+eiz*1+0x3712918d]
  418fff:	sbb    al,0x61
  419001:	aad    0xe4
  419003:	out    0xce,al
  419005:	jp     0x418fe2
  419007:	call   0x92dc2f86
  41900c:	cmp    eax,0xc300b8e2
  419011:	(bad)
  419014:	sti    
  419015:	jnp    0x418f9e
  419017:	sbb    dh,ah
  419019:	mov    eax,0x452ddf49
  41901e:	inc    ecx
  41901f:	sbb    DWORD PTR [ecx],0xffffffdd
  419022:	ds dec ebx
  419024:	repnz push 0xffffff84
  419027:	and    BYTE PTR [ebp+0x56],bl
  41902a:	sub    DWORD PTR [edi+0x53],edx
  41902d:	(bad)  
  41902e:	jae    0x4190ac
  419030:	inc    eax
  419031:	mov    dl,BYTE PTR [esi]
  419033:	rcr    DWORD PTR [eax+0x7513ccd5],0x6a
  41903a:	jbe    0x419026
  41903c:	mov    ds:0xa0f291a0,eax
  419041:	add    edx,DWORD PTR [esi-0x71]
  419044:	or     al,dh
  419046:	adc    eax,0x80bb8d4e
  41904b:	ds out 0x38,al
  41904e:	xchg   BYTE PTR [esi],ch
  419050:	and    al,0x0
  419052:	sbb    BYTE PTR [ebx+0x27],0x5c
  419056:	enter  0x9dcf,0x88
  41905a:	pop    esi
  41905b:	in     eax,dx
  41905c:	or     edx,esp
  41905e:	mov    ch,0x65
  419060:	(bad)  
  419061:	and    esi,DWORD PTR [edi-0x6e]
  419064:	fwait
  419065:	xor    dl,ah
  419067:	jle    0x419050
  419069:	mov    eax,0x3dd4e7ac
  41906e:	repnz push 0xa94ab744
  419074:	push   ecx
  419075:	mov    DWORD PTR [ecx],ecx
  419077:	push   ds
  419078:	popf   
  419079:	pop    edx
  41907a:	fwait
  41907b:	loopne 0x419004
  41907d:	add    eax,0xea845d74
  419082:	lods   eax,DWORD PTR ds:[esi]
  419083:	ret    0x4948
  419086:	mov    al,0xab
  419088:	inc    esp
  419089:	cmp    eax,0x627b51a9
  41908e:	sbb    DWORD PTR [edx-0x18cedbe0],edx
  419094:	icebp  
  419095:	mov    bl,0xb7
  419097:	into   
  419098:	mov    BYTE PTR [edi],dh
  41909a:	popa   
  41909b:	sub    eax,ebp
  41909d:	mov    esi,0x93d04dd1
  4190a2:	pop    ecx
  4190a3:	pop    esp
  4190a4:	rol    DWORD PTR [esi-0x149b1faa],cl
  4190aa:	mov    ecx,0x59372ea
  4190af:	mov    ebx,0x2a9c3034
  4190b4:	jp     0x41905e
  4190b6:	xor    eax,0xaf65e91e
  4190bb:	mov    eax,DWORD PTR [esp+ebp*4]
  4190be:	pusha  
  4190bf:	outs   dx,BYTE PTR ds:[esi]
  4190c0:	cs clc 
  4190c2:	push   ebp
  4190c3:	mov    ebp,0x21c80c
  4190c8:	jg     0x419057
  4190ca:	dec    esi
  4190cb:	mov    al,ds:0xbeb6aac0
  4190d0:	add    eax,0x6beddff7
  4190d5:	cmc    
  4190d6:	mov    dl,0x4d
  4190d8:	jl     0x4190c8
  4190da:	ret    0x526f
  4190dd:	dec    eax
  4190de:	mov    ds:0x65699836,al
  4190e3:	popa   
  4190e4:	inc    edi
  4190e5:	pop    ss
  4190e6:	xchg   edi,eax
  4190e7:	cmp    DWORD PTR ds:0xe892d5ba,edi
  4190ed:	jns    0x41907e
  4190ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190f0:	test   BYTE PTR [esi-0x1d],0x69
  4190f4:	dec    edx
  4190f5:	imul   ebp,DWORD PTR ds:0x664ce770,0xffffff9b
  4190fc:	daa    
  4190fd:	fst    QWORD PTR [esi]
  4190ff:	popa   
  419100:	push   cs
  419101:	and    DWORD PTR [ebx-0x1e2c51ac],0xcbe6bc40
  41910b:	leave  
  41910c:	or     BYTE PTR [edx],0xfa
  41910f:	mov    dh,0xea
  419111:	popf   
  419112:	clc    
  419113:	jecxz  0x4190db
  419115:	inc    esp
  419116:	sar    esi,cl
  419118:	inc    edi
  419119:	jne    0x419141
  41911b:	jp     0x419160
  41911d:	pop    eax
  41911e:	lods   eax,DWORD PTR ds:[esi]
  41911f:	int3   
  419120:	adc    DWORD PTR [edi-0x3e],edx
  419123:	or     eax,0x58747f34
  419128:	bound  eax,QWORD PTR [eax]
  41912a:	aam    0x35
  41912c:	adc    DWORD PTR [ebx+0x13],eax
  41912f:	sahf   
  419130:	dec    ebx
  419131:	jno    0x4190c4
  419133:	in     al,0x13
  419135:	pop    esi
  419136:	fdivrp st(1),st
  419138:	lea    ebx,[ebp+0x6eb68c87]
  41913e:	and    DWORD PTR [edi],0xffffffb9
  419141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419142:	(bad)  
  419143:	jg     0x419143
  419145:	lods   al,BYTE PTR ds:[esi]
  419146:	mov    al,ds:0xac5e1072
  41914b:	in     eax,0xb7
  41914d:	mov    ebp,0x365b6624
  419152:	popf   
  419153:	mov    esi,0xa539e471
  419158:	push   ecx
  419159:	dec    esi
  41915a:	ss in  al,0xdd
  41915d:	or     BYTE PTR [eax+eiz*8-0x77ad3312],ah
  419164:	neg    DWORD PTR [esi]
  419166:	aas    
  419167:	jne    0x4191ad
  419169:	pop    edx
  41916a:	pop    edx
  41916b:	or     ebp,DWORD PTR [edx-0x6a9a10a8]
  419171:	cmp    dh,cl
  419173:	jg     0x419154
  419175:	loop   0x4191d5
  419177:	es push ss
  419179:	xchg   edx,eax
  41917a:	(bad)  [edi+0x37]
  41917d:	imul   ecx,DWORD PTR [ebx],0x577c5373
  419183:	repnz xor esp,DWORD PTR ss:[ebp-0x73]
  419188:	mov    DWORD PTR [eax],edx
  41918a:	xchg   ebx,eax
  41918b:	gs scas al,BYTE PTR es:[edi]
  41918d:	test   eax,0x5513e179
  419192:	test   BYTE PTR [edi+0x40a6d4ce],0x41
  419199:	add    ebp,DWORD PTR [esp]
  41919c:	or     al,0x30
  41919e:	jne    0x419184
  4191a0:	jnp    0x41915a
  4191a2:	rcl    cl,cl
  4191a4:	xchg   esp,eax
  4191a5:	jg     0x419183
  4191a7:	mov    ds:0x38e5afce,al
  4191ac:	lea    ecx,[eax-0x3df148aa]
  4191b2:	in     eax,0xeb
  4191b4:	sbb    esi,edx
  4191b6:	mov    ds:0xf113ca75,al
  4191bb:	add    BYTE PTR [esi-0x54],al
  4191be:	push   ss
  4191bf:	enter  0x22a,0x74
  4191c3:	or     BYTE PTR [edi],al
  4191c5:	mov    ebx,0x581d5c4c
  4191ca:	push   0xffffffaf
  4191cc:	loopne 0x4191d9
  4191ce:	jb     0x419156
  4191d0:	mov    eax,0x9552da83
  4191d5:	mov    edi,0x17149b46
  4191da:	lea    ebx,[ebp+0x7911d17a]
  4191e0:	or     esi,edi
  4191e2:	dec    edx
  4191e3:	xchg   esi,eax
  4191e4:	mov    edx,0x95d0470e
  4191e9:	pop    eax
  4191ea:	adc    cl,BYTE PTR [ebx-0x23]
  4191ed:	dec    ecx
  4191ee:	adc    cl,BYTE PTR [edx-0x6db1a4e]
  4191f4:	sbb    dl,BYTE PTR [edx-0x71087dce]
  4191fa:	retf   
  4191fb:	(bad)  
  4191fc:	and    ebp,DWORD PTR [edx-0x11ade08f]
  419202:	dec    esi
  419203:	cld    
  419204:	repnz in al,dx
  419206:	xchg   ecx,eax
  419207:	(bad)
  41920a:	es inc ebp
  41920c:	gs sahf 
  41920e:	loope  0x419203
  419210:	adc    BYTE PTR [eax-0x36],bh
  419213:	sahf   
  419214:	in     al,0x91
  419216:	sti    
  419217:	mov    bh,0x84
  419219:	aad    0x84
  41921b:	(bad)  
  41921c:	adc    eax,0xe27e7536
  419221:	adc    al,0x2
  419223:	and    eax,0xbbf78dbf
  419228:	stos   BYTE PTR es:[edi],al
  419229:	mov    edi,0x13ff2909
  41922e:	jecxz  0x4191f5
  419230:	add    ah,BYTE PTR [ecx+0x19]
  419233:	adc    cl,cl
  419235:	ss pop ebx
  419237:	das    
  419238:	pop    ebp
  419239:	mov    esi,0x95bc1ff0
  41923e:	jmp    0x419205
  419240:	ret    
  419241:	popf   
  419242:	jecxz  0x419298
  419244:	scas   al,BYTE PTR es:[edi]
  419245:	lods   eax,DWORD PTR ds:[esi]
  419246:	in     al,dx
  419247:	into   
  419248:	xchg   ebp,eax
  419249:	iret   
  41924a:	fistp  DWORD PTR [edx]
  41924c:	in     al,dx
  41924d:	sub    BYTE PTR [eax+0x7a],cl
  419250:	mov    ebx,0xc910dc24
  419255:	and    al,0xe2
  419257:	mov    dh,0xb
  419259:	outs   dx,BYTE PTR ds:[esi]
  41925a:	cmc    
  41925b:	test   DWORD PTR [esp+ebp*4+0x38],eax
  41925f:	and    bl,BYTE PTR [esi]
  419261:	xchg   ebx,eax
  419262:	jno    0x419257
  419264:	jae    0x4192d2
  419266:	popa   
  419267:	in     eax,dx
  419268:	test   esp,esi
  41926a:	dec    esi
  41926b:	add    DWORD PTR [edx+ebx*2],0xf29a2f76
  419272:	jbe    0x4192c9
  419274:	xor    al,0xb7
  419276:	retf   0x738e
  419279:	mov    eax,0xf7e335fa
  41927e:	mov    ds:0x739b82ee,al
  419283:	mov    ah,0x9e
  419285:	and    bl,ch
  419287:	test   bh,0xe0
  41928a:	leave  
  41928b:	mov    dl,0xfb
  41928d:	aas    
  41928e:	and    al,0xae
  419290:	stos   DWORD PTR es:[edi],eax
  419291:	jmp    0x419260
  419293:	cmc    
  419294:	in     al,dx
  419295:	retf   
  419296:	call   0x5360:0xd8958464
  41929d:	mov    esi,0xbdb282b5
  4192a2:	mov    bl,0x2
  4192a4:	(bad)  
  4192a5:	adc    ch,bl
  4192a7:	mov    ch,0x68
  4192a9:	mov    ebx,0xbfe31b99
  4192ae:	call   0x93f9e994
  4192b3:	(bad)  
  4192b4:	push   ss
  4192b5:	jb     0x4192cf
  4192b7:	xchg   ebx,eax
  4192b8:	arpl   WORD PTR [esi-0x21],si
  4192bb:	stos   DWORD PTR es:[edi],eax
  4192bc:	inc    eax
  4192bd:	or     eax,0xeed7233f
  4192c2:	jbe    0x4192ba
  4192c4:	pop    ebx
  4192c5:	mov    al,0xd
  4192c7:	into   
  4192c8:	xchg   ecx,eax
  4192c9:	fidivr WORD PTR [edi]
  4192cb:	sbb    al,0xab
  4192cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ce:	dec    edi
  4192cf:	add    ecx,DWORD PTR [ebp+0x43c44bce]
  4192d5:	ror    dh,0x12
  4192d8:	nop
  4192d9:	hlt    
  4192da:	call   FWORD PTR [edx]
  4192dc:	iret   
  4192dd:	pop    esp
  4192de:	push   esi
  4192df:	mov    esp,0x8e14e753
  4192e4:	jmp    0x41931e
  4192e6:	xor    ecx,DWORD PTR [ebx-0x72]
  4192e9:	neg    BYTE PTR [edi+0x7c07a6b1]
  4192ef:	cmp    al,0x62
  4192f1:	das    
  4192f2:	rcr    DWORD PTR [esi],cl
  4192f4:	loopne 0x4192a4
  4192f6:	add    eax,DWORD PTR [ebp+edi*8+0x57]
  4192fa:	xlat   BYTE PTR ds:[ebx]
  4192fb:	mov    ds:0xa9d51fad,eax
  419300:	push   ecx
  419301:	mov    esp,0xfe40b89f
  419306:	dec    BYTE PTR [esp+esi*2-0x110453e0]
  41930d:	or     eax,0x1e43758a
  419312:	xchg   edi,eax
  419313:	mov    eax,ds:0x78fd4f6d
  419318:	adc    edx,esp
  41931a:	ret    0xa4b
  41931d:	sbb    eax,0xdf42919b
  419322:	pop    esp
  419323:	mov    WORD PTR es:[edx],ss
  419326:	or     DWORD PTR [ecx],0x7e
  419329:	push   0xffffff85
  41932b:	mov    DWORD PTR [edi],esi
  41932d:	xchg   ecx,eax
  41932e:	xor    BYTE PTR [ebx-0x5c],0x55
  419332:	lods   eax,DWORD PTR ds:[esi]
  419333:	adc    edi,DWORD PTR [esi+0x10]
  419336:	in     al,dx
  419337:	icebp  
  419338:	jg     0x4192f1
  41933a:	mov    edi,0xb5748f61
  41933f:	add    DWORD PTR [ebx+0x3c],0xffffffe5
  419343:	sub    edi,DWORD PTR [edi-0x36]
  419346:	outs   dx,BYTE PTR ds:[esi]
  419347:	push   es
  419348:	cld    
  419349:	jo     0x4193ae
  41934b:	dec    dx
  41934d:	cmp    BYTE PTR [edi+0x36],ah
  419350:	lock sub edi,DWORD PTR [ebx-0x27]
  419354:	dec    esi
  419355:	push   es
  419356:	stos   DWORD PTR es:[edi],eax
  419357:	sbb    eax,0x4c8a0ab3
  41935c:	aaa    
  41935d:	push   edi
  41935e:	sbb    dl,BYTE PTR [eax-0x27]
  419361:	stos   BYTE PTR es:[edi],al
  419362:	les    edi,FWORD PTR [ebp-0x33]
  419365:	pop    ds
  419366:	cmp    cl,BYTE PTR [ebx+0x79]
  419369:	mov    ah,0xb0
  41936b:	adc    DWORD PTR [ecx],esi
  41936d:	xchg   edi,eax
  41936e:	sub    al,0x79
  419370:	lods   al,BYTE PTR ds:[esi]
  419371:	push   esp
  419372:	scas   al,BYTE PTR es:[edi]
  419373:	adc    ch,BYTE PTR [esi+eiz*1+0x5b8e3ac]
  41937a:	scas   al,BYTE PTR es:[edi]
  41937b:	in     eax,0x4a
  41937d:	imul   ebp,DWORD PTR [edx-0x17c8f673],0xffffffbc
  419384:	pop    ebx
  419385:	icebp  
  419386:	aaa    
  419387:	mov    ch,0x8d
  419389:	and    ah,BYTE PTR [ebx+0x141f86]
  41938f:	jge    0x419406
  419391:	bound  esi,QWORD PTR [esi+0x49]
  419394:	pop    eax
  419395:	js     0x4193e1
  419397:	or     BYTE PTR [edi],bh
  419399:	pop    edi
  41939a:	and    ah,BYTE PTR [edi-0x76cb30a7]
  4193a0:	ja     0x419323
  4193a2:	and    BYTE PTR [ecx+eiz*4-0x517bc1e4],cl
  4193a9:	sub    al,0x66
  4193ab:	mov    esi,0x3a2c819b
  4193b0:	sub    BYTE PTR [ecx-0x19],ch
  4193b3:	loope  0x41936b
  4193b5:	das    
  4193b6:	mov    cl,0x5
  4193b8:	lea    edx,[eax-0x554357a0]
  4193be:	push   ss
  4193bf:	mov    ebx,0xf444c22b
  4193c4:	popa   
  4193c5:	aaa    
  4193c6:	dec    ecx
  4193c7:	ins    BYTE PTR es:[edi],dx
  4193c8:	push   eax
  4193c9:	add    eax,0x34acf382
  4193ce:	jge    0x4193eb
  4193d0:	sti    
  4193d1:	loope  0x419372
  4193d3:	pop    ss
  4193d4:	lods   eax,DWORD PTR ds:[esi]
  4193d5:	xchg   esi,eax
  4193d6:	jne    0x419391
  4193d8:	and    al,0x24
  4193da:	mov    ah,0xb2
  4193dc:	scas   eax,DWORD PTR es:[edi]
  4193dd:	call   0xd275:0xbf833ac2
  4193e4:	xchg   edi,eax
  4193e5:	(bad)  
  4193e6:	jne    0x4193c3
  4193e8:	and    eax,0x2e1bdad
  4193ed:	popf   
  4193ee:	mov    al,ds:0x38ba0cb2
  4193f3:	sahf   
  4193f4:	outs   dx,BYTE PTR ds:[esi]
  4193f5:	jg     0x4193b8
  4193f7:	xchg   esp,eax
  4193f8:	out    0x4c,al
  4193fa:	sub    al,0xc5
  4193fc:	in     al,dx
  4193fd:	ds iretw 
  419400:	lds    edx,FWORD PTR [eax-0x16237b7b]
  419406:	(bad)  
  419408:	xlat   BYTE PTR ds:[ebx]
  419409:	push   edx
  41940a:	cmp    bh,ch
  41940c:	adc    DWORD PTR [esi+eiz*4],esp
  41940f:	and    cl,BYTE PTR [ebx]
  419411:	ins    BYTE PTR es:[edi],dx
  419412:	clc    
  419413:	loop   0x419424
  419415:	mov    esi,0x774b29c2
  41941a:	sbb    DWORD PTR [eax+ebx*8],edi
  41941d:	fs iret 
  41941f:	inc    esp
  419420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419421:	lods   al,BYTE PTR ds:[esi]
  419422:	stos   BYTE PTR es:[edi],al
  419423:	es aam 0x4
  419426:	sub    esp,DWORD PTR [ebx-0x37]
  419429:	jmp    DWORD PTR ds:0xaf19b1ec
  41942f:	xor    DWORD PTR ds:0x33f029fe,ebx
  419435:	jno    0x419407
  419437:	scas   eax,DWORD PTR es:[edi]
  419438:	pop    esp
  419439:	add    al,0xb0
  41943b:	sbb    DWORD PTR [edx-0x43],edx
  41943e:	(bad)  
  41943f:	aas    
  419440:	aam    0xee
  419442:	jo     0x419419
  419444:	inc    ebp
  419445:	test   BYTE PTR [eax-0x64fd90c7],ah
  41944b:	inc    edx
  41944c:	sub    DWORD PTR [eax+eiz*4-0x27],eax
  419450:	pop    ebx
  419451:	inc    esp
  419452:	cmc    
  419453:	in     eax,0xb9
  419455:	mov    edi,0x9c4bb3a7
  41945a:	fcomi  st,st(6)
  41945c:	in     al,0x1e
  41945e:	cmp    BYTE PTR [ebp-0x1c],cl
  419461:	sub    al,BYTE PTR [edi-0x2c]
  419464:	cmp    ebp,edx
  419466:	in     al,dx
  419467:	and    eax,DWORD PTR [ecx-0x5a62e780]
  41946d:	ja     0x419434
  41946f:	loope  0x419446
  419471:	or     esp,DWORD PTR [ebx-0x4b759acb]
  419477:	cmp    BYTE PTR [eax],dl
  419479:	mov    al,0xdf
  41947b:	mov    bh,0x6e
  41947d:	stos   DWORD PTR es:[edi],eax
  41947e:	nop
  41947f:	popf   
  419480:	push   cs
  419481:	dec    edi
  419482:	int    0x3
  419484:	pop    edx
  419485:	sub    BYTE PTR [ecx+0x1a595e1c],0xf2
  41948c:	sub    BYTE PTR [edx+0x2f],dl
  41948f:	inc    edi
  419490:	xchg   ebx,eax
  419491:	fist   DWORD PTR [ebp-0x75]
  419494:	and    esp,edx
  419496:	mov    eax,ds:0xefd890a
  41949b:	cmp    DWORD PTR [ebp+0x32363df1],esi
  4194a1:	xchg   edi,eax
  4194a2:	std    
  4194a3:	xchg   esp,eax
  4194a4:	mov    al,ds:0x425a4f04
  4194a9:	xor    BYTE PTR [edx+edi*1],ch
  4194ac:	mov    ds:0x92b1895f,eax
  4194b1:	popf   
  4194b2:	dec    eax
  4194b3:	sahf   
  4194b4:	mov    ebp,ecx
  4194b6:	mov    edx,0x86d8f2bb
  4194bb:	iret   
  4194bc:	add    ecx,DWORD PTR [edi-0x60]
  4194bf:	ja     0x419448
  4194c1:	imul   esi,DWORD PTR [edx],0x64998dac
  4194c7:	xchg   esi,eax
  4194c8:	or     al,0xe
  4194ca:	add    DWORD PTR [esi-0x12846b42],0xd28b27a
  4194d4:	xor    eax,0x8bdc5c85
  4194d9:	pushf  
  4194da:	and    DWORD PTR [ebx-0x7],esi
  4194dd:	ret    0xf817
  4194e0:	aam    0x34
  4194e2:	rol    DWORD PTR [edi+0x41bcfa17],0xcf
  4194e9:	jnp    0x41954a
  4194eb:	jl     0x419550
  4194ed:	fcom   DWORD PTR [ebp+0x38017c4]
  4194f3:	pop    esi
  4194f4:	push   cs
  4194f5:	add    edx,eax
  4194f7:	jb     0x4194af
  4194f9:	jae    0x4194dd
  4194fb:	and    ebx,DWORD PTR [ebx+0x38e94780]
  419501:	int3   
  419502:	out    0x2a,al
  419504:	pop    ebp
  419505:	in     al,dx
  419506:	sbb    edx,DWORD PTR [ecx+edi*4]
  419509:	sub    ebp,ecx
  41950b:	add    BYTE PTR [edx-0x56],0x7
  41950f:	pop    ebx
  419510:	sti    
  419511:	hlt    
  419512:	outs   dx,DWORD PTR ds:[esi]
  419513:	(bad)  
  419514:	push   edi
  419515:	in     al,dx
  419516:	mov    esi,0xeb4f95ce
  41951b:	iret   
  41951c:	ret    0x3735
  41951f:	in     eax,0xa4
  419521:	iret   
  419522:	pop    ebx
  419523:	dec    edx
  419524:	adc    eax,0x7202c941
  419529:	sar    DWORD PTR [eax],1
  41952b:	lods   al,BYTE PTR ds:[esi]
  41952c:	rcr    BYTE PTR [eax],0xab
  41952f:	or     DWORD PTR [edx-0x7a3e08f2],esp
  419535:	imul   edx,edx,0x54dc4b08
  41953b:	mov    ah,0x92
  41953d:	mov    esp,0x3bbb68a
  419542:	cmp    ebp,DWORD PTR [edi]
  419544:	mov    WORD PTR [ebp-0x1b],gs
  419547:	mov    eax,0x470d4ef4
  41954c:	sbb    BYTE PTR [eax+0x7f],dh
  41954f:	aas    
  419550:	jns    0x419523
  419552:	pop    es
  419553:	ror    DWORD PTR [ebx+0x65],0xb1
  419557:	rcl    eax,cl
  419559:	ja     0x419575
  41955b:	add    BYTE PTR ss:0xab473185,0x7d
  419563:	rcr    BYTE PTR [esi+0x1f534017],cl
  419569:	mov    ebp,0x31811de3
  41956e:	es inc ecx
  419570:	or     ebx,DWORD PTR [ebx+eiz*2-0x18]
  419574:	mov    esp,0x75b658a9
  419579:	popa   
  41957a:	call   0x8c3ab78f
  41957f:	les    esi,FWORD PTR [esi+0x39]
  419582:	cli    
  419583:	xchg   ebp,eax
  419584:	cmp    DWORD PTR [ebp+0x45],ebp
  419587:	lods   al,BYTE PTR ds:[esi]
  419588:	mov    cl,0x87
  41958a:	jnp    0x4195c3
  41958c:	adc    eax,0x8cbc6f52
  419591:	inc    ebp
  419592:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419593:	xchg   esi,eax
  419594:	xchg   edx,eax
  419595:	cdq    
  419596:	ss int3 
  419598:	pop    esp
  419599:	mov    ebx,0x3e9d7995
  41959e:	call   0xc228:0x732a3c04
  4195a5:	dec    eax
  4195a6:	cmc    
  4195a7:	pop    ss
  4195a8:	in     eax,dx
  4195a9:	js     0x4195be
  4195ab:	xchg   BYTE PTR [ecx-0x995d1ba],ch
  4195b1:	int3   
  4195b2:	pop    DWORD PTR [ebx-0x1ebb9db9]
  4195b8:	pop    di
  4195ba:	nop
  4195bb:	mov    ah,0xfd
  4195bd:	sahf   
  4195be:	outs   dx,BYTE PTR ds:[esi]
  4195bf:	test   DWORD PTR [ebp+0x62],ebp
  4195c2:	add    eax,0x73c7da1d
  4195c7:	hlt    
  4195c8:	call   0x71740c34
  4195cd:	mov    ecx,0xea61f3a2
  4195d2:	or     dh,BYTE PTR [edx+0x77]
  4195d5:	inc    eax
  4195d6:	sub    esi,DWORD PTR ds:0x88881e3f
  4195dc:	mov    eax,ds:0xcd1684d4
  4195e1:	fst    st(6)
  4195e3:	xchg   ecx,eax
  4195e4:	fld    TBYTE PTR [eax+0x1d]
  4195e7:	js     0x4195af
  4195e9:	lock adc eax,0x10825585
  4195ef:	into   
  4195f0:	call   0xf50e:0xd2c56feb
  4195f7:	push   0xffffffc2
  4195f9:	jmp    0x41961c
  4195fb:	xor    DWORD PTR [ebp-0x738bd42c],0xffffff89
  419602:	push   ss
  419603:	mov    edx,0xce959ea4
  419608:	push   cs
  419609:	inc    ebx
  41960a:	jge    0x41965e
  41960c:	adc    eax,0x6d84d127
  419611:	xchg   ebx,eax
  419612:	sub    dl,0xd4
  419615:	pop    ds
  419616:	sbb    ah,ah
  419618:	sti    
  419619:	push   0x27f5dd50
  41961e:	and    al,0xf2
  419620:	mov    bl,0x72
  419622:	and    BYTE PTR [ecx-0x6b],bh
  419625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419626:	mov    ch,0xf0
  419628:	rol    BYTE PTR [ecx-0x7a],1
  41962b:	clc    
  41962c:	fcmove st,st(6)
  41962e:	add    bl,dl
  419630:	xchg   esi,eax
  419631:	xchg   esi,eax
  419632:	mov    bh,BYTE PTR [eax+0x79]
  419635:	lahf   
  419636:	xor    ch,bh
  419638:	and    bl,BYTE PTR [edx]
  41963a:	or     DWORD PTR [ebp+0x62],edx
  41963d:	mov    ecx,0x6f32161b
  419642:	or     eax,0x927bd397
  419647:	imul   ecx,DWORD PTR [ebx+ebx*4-0x47],0xeb401135
  41964f:	lods   al,BYTE PTR ds:[esi]
  419650:	cld    
  419651:	stc    
  419652:	lods   al,BYTE PTR ds:[esi]
  419653:	sub    ch,BYTE PTR [ebp-0x6e]
  419656:	xchg   ebp,eax
  419657:	sbb    DWORD PTR [ecx-0x12],edx
  41965a:	loopne 0x4196da
  41965c:	jne    0x4196c9
  41965e:	mov    eax,0x69a50dcc
  419663:	sbb    ebp,DWORD PTR [ecx]
  419665:	mov    ds:0x1ed194de,al
  41966a:	mov    WORD PTR [edx+edi*2-0x657050ea],ds
  419671:	pop    ebx
  419672:	mov    al,ds:0xaa1f3343
  419677:	xor    edi,eax
  419679:	cmc    
  41967a:	cmp    al,BYTE PTR [edx+eax*4-0x3b]
  41967e:	pushf  
  41967f:	(bad)  
  419681:	test   eax,0x4571bcb6
  419686:	dec    edx
  419687:	aad    0xb
  419689:	adc    eax,0x2cdad933
  41968e:	out    dx,eax
  41968f:	mov    al,0x26
  419691:	jns    0x4196da
  419693:	lods   al,BYTE PTR ds:[esi]
  419694:	loop   0x4196dd
  419696:	inc    ecx
  419697:	test   DWORD PTR [ecx-0x9],edx
  41969a:	or     edi,DWORD PTR [edi+0x34f510f0]
  4196a0:	xchg   esp,eax
  4196a1:	pop    edx
  4196a2:	inc    esp
  4196a3:	call   0x195324ad
  4196a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196a9:	add    BYTE PTR [ebx],bh
  4196ab:	jle    0x419695
  4196ad:	cmp    al,0xc0
  4196af:	sub    bl,cl
  4196b1:	jb     0x41971e
  4196b3:	push   ebx
  4196b4:	add    al,0x39
  4196b6:	cwde   
  4196b7:	xchg   esp,eax
  4196b8:	fisubr WORD PTR [eax-0x7d]
  4196bb:	mov    DWORD PTR [ebx-0x1e],0x35ecc2fe
  4196c2:	push   esi
  4196c3:	xchg   cl,bl
  4196c5:	sbb    bh,BYTE PTR [ecx+0x66e7c0d3]
  4196cb:	clc    
  4196cc:	gs inc ebp
  4196ce:	sub    DWORD PTR [esi],eax
  4196d0:	dec    ebx
  4196d1:	push   esi
  4196d2:	xchg   BYTE PTR ds:0x6b0f957c,bl
  4196d8:	sbb    DWORD PTR ds:0xe34a004e,eax
  4196de:	sar    DWORD PTR [ebp+0x58],0x13
  4196e2:	es sahf 
  4196e4:	fist   DWORD PTR [ebx-0x4cc959c3]
  4196ea:	jnp    0x41970a
  4196ec:	xchg   DWORD PTR [eax],esi
  4196ee:	sub    al,0x59
  4196f0:	pop    esi
  4196f1:	ficom  DWORD PTR ds:0xe072d57e
  4196f7:	adc    eax,0xc5fa17e9
  4196fc:	call   0xe826dba4
  419701:	push   0xffffffb4
  419703:	dec    edi
  419704:	inc    ecx
  419705:	xlat   BYTE PTR ds:[ebx]
  419706:	mov    cl,0xbe
  419708:	cdq    
  419709:	ss xchg esp,eax
  41970b:	or     esi,DWORD PTR [ecx]
  41970d:	push   edx
  41970e:	int    0x5e
  419710:	popa   
  419711:	sbb    al,0xe8
  419713:	push   esi
  419714:	sbb    eax,0xeb3f325c
  419719:	mov    esp,0x43356d1e
  41971e:	sbb    DWORD PTR [ecx-0xa85660e],0x54db11ee
  419728:	fs (bad) 
  41972a:	jns    0x41971d
  41972c:	push   ebx
  41972d:	aas    
  41972e:	pop    edi
  41972f:	leave  
  419730:	scas   al,BYTE PTR es:[edi]
  419731:	add    DWORD PTR [ebp-0x1],esp
  419734:	dec    edx
  419735:	jne    0x41978a
  419737:	jne    0x41978c
  419739:	adc    eax,0xa12eb13a
  41973e:	clc    
  41973f:	into   
  419740:	mov    ebp,0xce9783b0
  419745:	fiadd  DWORD PTR [ebp+0x3c]
  419748:	xlat   BYTE PTR ds:[ebx]
  419749:	cmp    bl,BYTE PTR [esi]
  41974b:	fwait
  41974c:	pop    ebp
  41974d:	retf   0x3620
  419750:	neg    DWORD PTR [ebp-0x1f]
  419753:	cmp    ch,bh
  419755:	jg     0x419768
  419757:	mul    DWORD PTR [ebx]
  419759:	cmp    esi,DWORD PTR es:[ebx]
  41975c:	pop    edi
  41975d:	add    al,ah
  41975f:	mov    BYTE PTR [edi+0x18],dl
  419762:	sbb    edx,ebp
  419764:	jne    0x4197e2
  419766:	fmul   QWORD PTR [eax+0x54]
  419769:	mov    ch,0xc2
  41976b:	(bad)  
  41976c:	fcomp  st(1)
  41976e:	lahf   
  41976f:	push   ebp
  419770:	rcl    BYTE PTR [ebp-0x6e],0x36
  419774:	outs   dx,BYTE PTR ds:[esi]
  419775:	jmp    0x419704
  419777:	xor    dh,0xf9
  41977a:	dec    ebx
  41977b:	add    dl,BYTE PTR [eax+0x47b2b444]
  419781:	test   al,0x6e
  419783:	lock mov eax,0x4cb566e8
  419789:	pusha  
  41978a:	adc    eax,0x7784112e
  41978f:	xor    BYTE PTR [ecx-0x3f32a0d8],ch
  419795:	inc    esi
  419796:	loopne 0x4197ea
  419798:	mov    ebx,DWORD PTR [ecx-0x6f861277]
  41979e:	inc    esp
  41979f:	xor    ebx,DWORD PTR [ebx]
  4197a1:	lahf   
  4197a2:	test   BYTE PTR [edi+0x1d],al
  4197a5:	inc    ecx
  4197a6:	mov    cl,0x35
  4197a8:	jmp    0x90cb:0x67f7f645
  4197af:	arpl   si,si
  4197b1:	ins    BYTE PTR es:[edi],dx
  4197b2:	call   0xdf29189d
  4197b7:	and    eax,0x77b981b9
  4197bc:	mov    dl,0x35
  4197be:	adc    bh,dh
  4197c0:	out    dx,al
  4197c1:	in     eax,dx
  4197c2:	sub    dl,al
  4197c4:	rcr    DWORD PTR [ebp-0x75a4d6f0],0x66
  4197cb:	pop    ebp
  4197cc:	xchg   ebp,eax
  4197cd:	add    ecx,ebp
  4197cf:	jne    0x41980f
  4197d1:	(bad)  
  4197d2:	daa    
  4197d3:	or     BYTE PTR [ecx],al
  4197d5:	outs   dx,BYTE PTR ds:[esi]
  4197d6:	cmp    al,0x69
  4197d8:	sbb    al,0x66
  4197da:	ret    0x467e
  4197dd:	aam    0x96
  4197df:	dec    ecx
  4197e0:	stc    
  4197e1:	cwde   
  4197e2:	adc    eax,0xf784db4e
  4197e7:	push   cs
  4197e8:	jle    0x4197f3
  4197ea:	cld    
  4197eb:	dec    ebx
  4197ec:	popa   
  4197ed:	or     eax,0x63ce60cc
  4197f2:	(bad)  
  4197f3:	sub    al,0xb8
  4197f5:	push   cs
  4197f6:	xchg   BYTE PTR [ecx+0x78],dh
  4197f9:	add    ah,BYTE PTR [ecx]
  4197fb:	ds add al,0x93
  4197fe:	or     edi,DWORD PTR [esi]
  419800:	jmp    0x6385:0x55990721
  419807:	pop    ds
  419808:	mov    eax,ds:0x7eb1ceba
  41980d:	push   eax
  41980e:	jle    0x41987d
  419810:	ret    
  419811:	icebp  
  419812:	lods   eax,DWORD PTR ds:[esi]
  419813:	sbb    DWORD PTR [ebx],esi
  419815:	sbb    eax,0x21392980
  41981a:	mov    esp,0xd255a3eb
  41981f:	push   0x3
  419821:	dec    esp
  419822:	leave  
  419823:	cli    
  419824:	call   0x36f0:0x25efee16
  41982b:	in     al,dx
  41982c:	jo     0x41982d
  41982e:	enter  0xc64b,0xd6
  419832:	adc    DWORD PTR [esi-0x1c],eax
  419835:	or     eax,0x6d818720
  41983a:	imul   edi,DWORD PTR [esp+0x4fc0dbf7],0xffffffad
  419842:	(bad)  
  419843:	leave  
  419844:	and    dh,dh
  419846:	xor    BYTE PTR [esi-0x261340a5],cl
  41984c:	or     al,BYTE PTR [eax+0x29]
  41984f:	out    dx,al
  419850:	jg     0x4198ae
  419852:	test   BYTE PTR [eax],dh
  419854:	lahf   
  419855:	fdivr  DWORD PTR [ebp-0x11]
  419858:	push   ebp
  419859:	fisub  WORD PTR ds:[ecx-0x181bcf78]
  419860:	dec    esi
  419861:	gs sahf 
  419863:	and    BYTE PTR [ebp+0x54ae534f],bh
  419869:	mov    ebx,0x30a3249f
  41986e:	js     0x4198e6
  419870:	ror    DWORD PTR [edi],cl
  419872:	rcr    BYTE PTR [ecx-0x1d],1
  419875:	sahf   
  419876:	inc    edx
  419877:	repnz dec si
  41987a:	mov    esp,0xa51acbca
  41987f:	add    DWORD PTR [ebx-0x1],ecx
  419882:	popf   
  419883:	in     al,dx
  419884:	loop   0x419842
  419886:	jnp    0x4198f0
  419888:	(bad)  
  419889:	jmp    0x4ab:0x2f705741
  419890:	ds (bad) 
  419892:	jmp    0x41984c
  419894:	rol    BYTE PTR [edi-0x7f],cl
  419897:	jo     0x419846
  419899:	or     eax,0xd68f3561
  41989e:	and    eax,0xd53a303
  4198a3:	cwde   
  4198a4:	mov    dh,0x80
  4198a6:	mov    BYTE PTR [edx],al
  4198a8:	fcmovbe st,st(1)
  4198aa:	out    dx,eax
  4198ab:	aad    0x2e
  4198ad:	(bad)  
  4198ae:	leave  
  4198af:	jne    0x41989c
  4198b1:	cmp    BYTE PTR [esi+0x6671baf8],0x3
  4198b8:	out    0xab,al
  4198ba:	int    0xfc
  4198bc:	mov    dl,0xb1
  4198be:	test   DWORD PTR [edi+edi*1],eax
  4198c1:	add    al,0xf7
  4198c3:	add    al,0x79
  4198c5:	jae    0x41990b
  4198c7:	pop    edi
  4198c8:	enter  0x2cd6,0xdc
  4198cc:	ss leave 
  4198ce:	adc    edi,esi
  4198d0:	and    cl,BYTE PTR [ebx+0x63]
  4198d3:	fidivr WORD PTR [edi+0x16]
  4198d6:	cmp    DWORD PTR [esi-0x4d],ebp
  4198d9:	mov    ds:0x40da2d4e,eax
  4198de:	sti    
  4198df:	dec    esp
  4198e0:	xchg   BYTE PTR [edx-0x3a64ac13],dh
  4198e6:	mov    ds:0xb9c6e700,eax
  4198eb:	xor    DWORD PTR fs:[eax],eax
  4198ee:	dec    edx
  4198ef:	pop    ebp
  4198f0:	test   eax,0x2f16d184
  4198f5:	(bad)  
  4198f6:	sbb    BYTE PTR [edx-0x77659d43],al
  4198fc:	nop
  4198fd:	in     al,0xaa
  4198ff:	js     0x4198e4
  419901:	sub    ch,bl
  419903:	mov    al,ds:0x2e9a4924
  419908:	cmp    ah,dl
  41990a:	push   ebp
  41990b:	fiadd  DWORD PTR [edi-0x69d12ec7]
  419911:	sar    dl,1
  419913:	call   0xe1da:0xbd67a81f
  41991a:	mov    bl,0x3e
  41991c:	jmp    esi
  41991e:	cli    
  41991f:	fwait
  419920:	push   ebp
  419921:	push   edx
  419922:	jae    0x41996e
  419924:	jnp    0x419995
  419926:	sti    
  419927:	sub    al,0x38
  419929:	js     0x4198ad
  41992b:	retf   
  41992c:	pop    ds
  41992d:	pop    ecx
  41992e:	mov    ah,0xc1
  419930:	adc    eax,edx
  419932:	aam    0x39
  419934:	adc    DWORD PTR [esi],eax
  419936:	rcr    BYTE PTR [eax-0x32e2f422],0xbd
  41993d:	xchg   esi,eax
  41993e:	lock push ds
  419940:	mov    al,0x70
  419942:	mov    ebp,0x651f7988
  419947:	xchg   esp,eax
  419948:	push   cs
  419949:	sbb    eax,0x3b411bfe
  41994e:	jmp    0xde908e03
  419953:	sbb    esp,DWORD PTR [eax-0x20ece7a0]
  419959:	cld    
  41995a:	push   cs
  41995b:	iret   
  41995c:	lds    eax,FWORD PTR [ecx]
  41995e:	lea    eax,[esi]
  419960:	retf   0xce16
  419963:	xchg   edx,eax
  419964:	inc    ecx
  419965:	sar    BYTE PTR [eax-0xc],1
  419968:	push   eax
  419969:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  41996b:	ret    
  41996c:	jecxz  0x419996
  41996e:	cld    
  41996f:	je     0x419988
  419971:	jecxz  0x4199bb
  419973:	(bad)  
  419974:	in     al,dx
  419975:	sub    BYTE PTR [edx],ah
  419977:	arpl   WORD PTR ds:0x18c0a30f,ax
  41997d:	jecxz  0x419929
  41997f:	(bad)  
  419980:	fs jno 0x41990e
  419983:	inc    eax
  419984:	sub    bl,BYTE PTR ds:0x2c2aa583
  41998a:	cld    
  41998b:	xchg   esi,eax
  41998c:	test   al,0xc
  41998e:	or     BYTE PTR [ebx+0x5b],0xd6
  419992:	test   BYTE PTR [esi-0x2cf444d],bl
  419998:	push   edi
  419999:	gs xchg ebx,eax
  41999b:	jae    0x41999b
  41999d:	fwait
  41999e:	xchg   ebx,eax
  41999f:	cmp    eax,0xddc3cc7
  4199a4:	cld    
  4199a5:	and    esi,DWORD PTR [esp+ecx*8+0x446ad73b]
  4199ac:	sbb    edi,esp
  4199ae:	and    BYTE PTR [esi+0x6422f584],dl
  4199b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199b5:	xchg   ebx,eax
  4199b6:	push   eax
  4199b7:	xchg   edx,eax
  4199b8:	out    dx,al
  4199b9:	pop    ebp
  4199ba:	push   ds
  4199bb:	and    BYTE PTR [edx],0x4c
  4199be:	jae    0x4199be
  4199c0:	mov    tr7,esi
  4199c3:	bound  ecx,QWORD PTR [eax-0x1fe54c39]
  4199c9:	es jmp 0xe3922672
  4199cf:	in     al,dx
  4199d0:	fwait
  4199d1:	sub    eax,0xefbc42d7
  4199d6:	aad    0x39
  4199d8:	mov    cl,0x83
  4199da:	dec    ecx
  4199db:	jne    0x419a10
  4199dd:	and    DWORD PTR [eax],0xffffffeb
  4199e0:	or     DWORD PTR [ebp+0x562ad84a],0x46547065
  4199ea:	inc    edx
  4199eb:	xchg   ebx,eax
  4199ec:	scas   eax,DWORD PTR es:[edi]
  4199ed:	lock sahf 
  4199ef:	cmp    edx,esp
  4199f1:	push   edi
  4199f2:	pop    es
  4199f3:	out    0x99,al
  4199f5:	mov    cs,WORD PTR [ebx+0x3468ae0c]
  4199fb:	xchg   edi,eax
  4199fc:	bound  ebx,QWORD PTR [edi]
  4199fe:	enter  0x2710,0x52
  419a02:	sub    BYTE PTR [esi+esi*1],0x96
  419a06:	sbb    eax,0x68e64301
  419a0b:	daa    
  419a0c:	jo     0x419a79
  419a0e:	stos   DWORD PTR es:[edi],eax
  419a0f:	fsub   DWORD PTR [esi+0x69]
  419a12:	ins    DWORD PTR es:[edi],dx
  419a13:	aas    
  419a14:	sbb    al,0xf0
  419a16:	repnz mov cl,0x32
  419a19:	imul   cx,WORD PTR [edi-0x53],0x18
  419a1e:	stos   DWORD PTR es:[edi],eax
  419a1f:	inc    BYTE PTR [ecx]
  419a21:	mov    cl,0x75
  419a23:	sbb    eax,0xc4fd945a
  419a28:	push   esp
  419a29:	popa   
  419a2a:	sahf   
  419a2b:	sti    
  419a2c:	jno    0x419a30
  419a2e:	popa   
  419a2f:	sub    al,0x6d
  419a31:	cdq    
  419a32:	sub    ebp,DWORD PTR [esi-0x5827692d]
  419a38:	daa    
  419a39:	clc    
  419a3a:	lods   eax,DWORD PTR ds:[esi]
  419a3b:	aaa    
  419a3c:	or     DWORD PTR [ebx],eax
  419a3e:	lea    ebx,[edx-0x27138370]
  419a44:	test   eax,0x3ed04b6f
  419a49:	clc    
  419a4a:	jl     0x4199d3
  419a4c:	imul   ecx,DWORD PTR [esi-0x7aefba6],0xaed6454b
  419a56:	jnp    0x419a44
  419a58:	ins    BYTE PTR es:[edi],dx
  419a59:	js     0x419a4c
  419a5b:	and    ecx,ebx
  419a5d:	das    
  419a5e:	sahf   
  419a5f:	ror    ch,0xa1
  419a62:	jl     0x419a39
  419a64:	add    eax,ebx
  419a66:	xor    bh,BYTE PTR [ecx+0x61]
  419a69:	push   ebp
  419a6a:	pop    es
  419a6b:	pop    ebx
  419a6c:	add    ebp,DWORD PTR [ebx+edi*2]
  419a6f:	lods   eax,DWORD PTR ds:[esi]
  419a70:	mov    eax,0x8910be3a
  419a75:	or     BYTE PTR [ebx+0x1ac59f30],dh
  419a7b:	dec    ebp
  419a7c:	sub    ebx,DWORD PTR [ebx+0x54]
  419a7f:	fdivrp st(5),st
  419a81:	inc    esp
  419a82:	les    esi,FWORD PTR [ecx+eax*1-0x52c58dce]
  419a89:	adc    al,0x32
  419a8b:	lock and al,0x8e
  419a8e:	or     al,0xb4
  419a90:	jl     0x419a9c
  419a92:	in     eax,dx
  419a93:	and    edi,ecx
  419a95:	xor    al,BYTE PTR [edi+0x5bfed84f]
  419a9b:	pop    ds
  419a9c:	jb     0x419ae7
  419a9e:	in     al,0xb7
  419aa0:	sahf   
  419aa1:	fdiv   QWORD PTR [edi+0x6c]
  419aa4:	loopne 0x419a75
  419aa6:	xchg   esi,eax
  419aa7:	cmc    
  419aa8:	outs   dx,DWORD PTR ds:[esi]
  419aa9:	(bad)  
  419aaa:	pause  
  419aac:	add    DWORD PTR [edi],0x1f
  419aaf:	and    al,0xed
  419ab1:	sub    DWORD PTR [eax+0x4f],esi
  419ab4:	loope  0x419a7f
  419ab6:	pop    eax
  419ab7:	das    
  419ab8:	sbb    dl,ah
  419aba:	rol    BYTE PTR [ecx-0x4f707b5f],1
  419ac0:	lods   eax,DWORD PTR ds:[esi]
  419ac1:	adc    BYTE PTR ds:0xebc28fa7,dl
  419ac7:	fbld   TBYTE PTR [ecx-0x7864a987]
  419acd:	out    0xe6,eax
  419acf:	les    eax,FWORD PTR [edi+0x732ff7c8]
  419ad5:	mov    ebx,0x11bc8b2a
  419ada:	xchg   esp,eax
  419adb:	inc    edi
  419adc:	adc    bl,BYTE PTR [ebx+0x72]
  419adf:	js     0x419ae0
  419ae1:	mov    WORD PTR [edi],es
  419ae3:	jbe    0x419b4a
  419ae5:	adc    esi,0xffffff83
  419ae8:	mov    eax,DWORD PTR [eax]
  419aea:	xor    esi,ecx
  419aec:	sub    esi,eax
  419aee:	mov    eax,DWORD PTR [ebp-0x4]
  419af1:	add    esi,edx
  419af3:	cmp    DWORD PTR [eax],esi
  419af5:	mov    eax,DWORD PTR [ebp-0x4]
  419af8:	mov    esi,DWORD PTR [ebp+0x10]
  419afb:	jg     0x41becb
  419b01:	jmp    0x41bebb
  419b06:	push   ecx
  419b07:	bound  esp,QWORD PTR [ebp+0x516ab665]
  419b0d:	jp     0x419af1
  419b0f:	xchg   ebx,eax
  419b10:	js     0x419adb
  419b12:	jl     0x419b43
  419b14:	add    cl,BYTE PTR [ebx]
  419b16:	inc    edi
  419b17:	fdivr  QWORD PTR [ebx+edi*2+0x18]
  419b1b:	sahf   
  419b1c:	jnp    0x419b99
  419b1e:	mov    bl,0xb0
  419b20:	xchg   esi,eax
  419b21:	inc    ebp
  419b22:	mov    al,ds:0x812b21
  419b27:	test   DWORD PTR [edx-0x79],ebp
  419b2a:	inc    ebx
  419b2b:	add    eax,0x5fc0646b
  419b30:	loopne 0x419b1d
  419b32:	cwde   
  419b33:	push   ds
  419b34:	jge    0x419b5a
  419b36:	add    DWORD PTR [ebx-0x52c6d54d],esp
  419b3c:	sub    DWORD PTR [esi-0x6809a5e5],ebx
  419b42:	nop
  419b43:	cwde   
  419b44:	adc    ebp,edi
  419b46:	sbb    eax,0x743e551a
  419b4b:	pop    esp
  419b4c:	adc    al,0x54
  419b4e:	(bad)  
  419b4f:	mov    WORD PTR [edx],cs
  419b51:	neg    BYTE PTR [ebp+0x50845759]
  419b57:	mov    bh,ch
  419b59:	and    BYTE PTR [edi],bh
  419b5b:	pop    es
  419b5c:	(bad)  
  419b5d:	(bad)  
  419b5e:	in     eax,0x38
  419b60:	inc    esi
  419b61:	bswap  edx
  419b63:	mov    dh,0xe
  419b65:	div    DWORD PTR [ebp+0x62]
  419b68:	test   eax,0xf46d3a60
  419b6d:	jg     0x419b61
  419b6f:	out    dx,eax
  419b70:	popa   
  419b71:	inc    ebp
  419b72:	mov    ds:0xe25635db,eax
  419b77:	mov    al,0xa5
  419b79:	mov    BYTE PTR [ebp-0x46],bh
  419b7c:	sub    al,0xdb
  419b7e:	pop    DWORD PTR [esi-0x5a]
  419b81:	(bad)  
  419b82:	push   0x7b
  419b84:	(bad)  
  419b88:	add    edx,eax
  419b8a:	(bad)  
  419b8b:	(bad)  
  419b8c:	retf   0x4df9
  419b8f:	adc    ah,cl
  419b91:	mov    edi,0xc5f85f05
  419b96:	push   esp
  419b97:	int    0x52
  419b99:	arpl   WORD PTR [ecx-0x8],di
  419b9c:	mov    bh,0x75
  419b9e:	es jl  0x419bfb
  419ba1:	dec    eax
  419ba2:	xchg   ebp,eax
  419ba3:	(bad)  
  419ba4:	adc    DWORD PTR [esi-0x62],ebx
  419ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ba8:	mov    WORD PTR [eax+0x2],ss
  419bab:	jle    0x419c15
  419bad:	cmp    eax,0x3b13f101
  419bb2:	jae    0x419c13
  419bb4:	daa    
  419bb5:	add    al,0xef
  419bb7:	jmp    0xc73d:0x6bd27cdb
  419bbe:	test   eax,0x3d151e44
  419bc3:	enter  0x44df,0xc3
  419bc7:	test   eax,0xf48a99ac
  419bcc:	adc    eax,0x18ed141a
  419bd1:	jmp    0x419c41
  419bd3:	int3   
  419bd4:	out    dx,eax
  419bd5:	add    BYTE PTR [eax-0x707e2124],bl
  419bdb:	xor    edx,0xffffffa2
  419bde:	rol    BYTE PTR [eax+0x5b],1
  419be1:	jecxz  0x419c0f
  419be3:	dec    ecx
  419be4:	fxch   st(4)
  419be6:	jmp    0xaf2b7288
  419beb:	je     0x419c3a
  419bed:	das    
  419bee:	in     eax,0x5b
  419bf0:	cli    
  419bf1:	int    0x17
  419bf3:	sub    ah,BYTE PTR [ebp-0x15]
  419bf6:	test   BYTE PTR [ebx+0x2a348c94],ah
  419bfc:	cli    
  419bfd:	add    eax,edi
  419bff:	jge    0x419c44
  419c01:	sub    BYTE PTR [esi+0x4cdbbdce],cl
  419c07:	not    BYTE PTR [ecx+0x66]
  419c0a:	jl     0x419c26
  419c0c:	jl     0x419c15
  419c0e:	dec    ecx
  419c0f:	ins    DWORD PTR es:[edi],dx
  419c10:	pop    ss
  419c11:	jae    0x419bf6
  419c13:	add    al,0x1c
  419c15:	mov    esi,0x77460513
  419c1a:	popf   
  419c1b:	cwde   
  419c1c:	push   ecx
  419c1d:	pop    edi
  419c1e:	sub    eax,0x3e7bc5a2
  419c23:	dec    eax
  419c24:	push   ebp
  419c25:	arpl   WORD PTR [ebx],ax
  419c27:	xchg   edx,eax
  419c28:	jmp    0x419c43
  419c2a:	(bad)  
  419c2b:	std    
  419c2c:	call   0x33f94046
  419c31:	fcom   DWORD PTR [eax-0x71]
  419c34:	jmp    FWORD PTR [edi-0xaf8f769]
  419c3a:	or     ecx,ebp
  419c3c:	fidivr DWORD PTR [edi+edx*4-0x74]
  419c40:	out    0x7a,eax
  419c42:	nop
  419c43:	and    eax,0x5f7bbda4
  419c48:	inc    edx
  419c49:	cld    
  419c4a:	into   
  419c4b:	mov    edi,0xab17466d
  419c51:	cmp    bh,BYTE PTR [esi*1-0x30e18444]
  419c58:	icebp  
  419c59:	mov    al,ds:0xb7797326
  419c5e:	mov    dl,0x71
  419c60:	jb     0x419c91
  419c62:	jmp    0x419bf8
  419c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c65:	or     DWORD PTR [edi+0x7],0xcc407673
  419c6c:	and    DWORD PTR [ebx],ebx
  419c6e:	mov    dh,al
  419c70:	xlat   BYTE PTR ds:[ebx]
  419c71:	shl    DWORD PTR [edi-0x7b],cl
  419c74:	loopne 0x419c6f
  419c76:	sub    al,0x73
  419c78:	into   
  419c79:	mov    ss,WORD PTR [edx]
  419c7b:	pop    ebx
  419c7c:	fcomi  st,st(0)
  419c7e:	push   ebx
  419c7f:	pop    esp
  419c80:	fnstcw WORD PTR [ebx-0x6e]
  419c83:	cdq    
  419c84:	mov    esp,0x3c8c3544
  419c89:	sar    ecx,0xb2
  419c8c:	jmp    0x419ca6
  419c8e:	dec    esi
  419c8f:	ror    ebp,cl
  419c91:	push   eax
  419c92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c93:	cmp    al,BYTE PTR [eax+0x5e0db02]
  419c99:	xchg   ebp,eax
  419c9a:	dec    edx
  419c9b:	es ret 
  419c9d:	shl    BYTE PTR [ebx],1
  419c9f:	sub    DWORD PTR fs:[esi-0x78],esi
  419ca3:	push   ecx
  419ca4:	clc    
  419ca5:	xor    ebx,ebp
  419ca7:	loope  0x419cc1
  419ca9:	or     ecx,ebx
  419cab:	mov    edx,0x5db92fd4
  419cb0:	dec    edx
  419cb1:	jbe    0x419ca8
  419cb3:	out    dx,al
  419cb4:	rep outs dx,BYTE PTR ds:[esi]
  419cb6:	test   eax,0xc627b079
  419cbb:	stc    
  419cbc:	cmp    eax,0x4bec3895
  419cc1:	scas   eax,DWORD PTR es:[edi]
  419cc2:	cmp    ah,BYTE PTR [eax]
  419cc4:	pop    esp
  419cc5:	fnstenv [ebx]
  419cc7:	mov    ds:0x4f3e8453,eax
  419ccc:	in     eax,0x5
  419cce:	icebp  
  419ccf:	imul   BYTE PTR [ebx+0x7d]
  419cd2:	xor    DWORD PTR [ecx+eax*2-0x41],0xffffffff
  419cd7:	add    eax,0xa3af1726
  419cdc:	xchg   esi,eax
  419cdd:	retf   
  419cde:	inc    edi
  419cdf:	inc    edx
  419ce0:	dec    ebx
  419ce1:	cmp    dh,dl
  419ce3:	mov    BYTE PTR [ecx],al
  419ce5:	sbb    BYTE PTR [edx+0x68],al
  419ce8:	stos   DWORD PTR es:[edi],eax
  419ce9:	push   ds
  419cea:	fcmovb st,st(1)
  419cec:	out    dx,al
  419ced:	(bad)  
  419cee:	ins    BYTE PTR es:[edi],dx
  419cef:	xchg   ecx,eax
  419cf0:	xchg   BYTE PTR [eax+esi*4+0x2418fbea],dl
  419cf7:	push   0xffffffd5
  419cf9:	mov    ebp,0x3012e057
  419cfe:	sub    DWORD PTR [ebp-0x6c459d2b],esp
  419d04:	dec    ecx
  419d05:	repz dec ecx
  419d07:	dec    ebp
  419d08:	xchg   edx,eax
  419d09:	xchg   edx,eax
  419d0a:	jecxz  0x419d54
  419d0c:	xor    eax,0x415e45fd
  419d11:	adc    ebx,ebp
  419d13:	and    al,0x6c
  419d15:	jne    0x419d40
  419d17:	int    0x1d
  419d19:	retf   
  419d1a:	outs   dx,BYTE PTR ss:[esi]
  419d1c:	dec    DWORD PTR [edx]
  419d1e:	cmc    
  419d1f:	ja     0x419cf0
  419d21:	hlt    
  419d22:	retf   0x1a67
  419d25:	mov    bh,0xe
  419d27:	out    dx,eax
  419d28:	mov    esi,0x9000d8ba
  419d2d:	je     0x419d0c
  419d2f:	mov    dl,0x95
  419d31:	daa    
  419d32:	inc    ebx
  419d33:	stos   DWORD PTR es:[edi],eax
  419d34:	fadd   DWORD PTR [eiz*4+0x3a49b87b]
  419d3b:	nop
  419d3c:	lds    esi,FWORD PTR [eax]
  419d3e:	rol    BYTE PTR [edi-0x1de5c5da],cl
  419d44:	dec    ebx
  419d45:	mov    ecx,0x9778f6e0
  419d4a:	int    0xc4
  419d4c:	and    ch,al
  419d4e:	adc    esp,edx
  419d50:	inc    esi
  419d51:	lock cmc 
  419d53:	shl    BYTE PTR [edi],cl
  419d55:	gs imul ecx
  419d58:	arpl   bx,ax
  419d5a:	pop    ecx
  419d5b:	repz push 0x1c65abe2
  419d61:	enter  0x4795,0x30
  419d65:	ret    0x8419
  419d68:	test   BYTE PTR [ecx+0x46],dl
  419d6b:	adc    BYTE PTR [ecx+0x2e],bl
  419d6e:	cs mov bh,0x43
  419d71:	mov    dl,0xc7
  419d73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419d74:	xor    eax,DWORD PTR [eax+0x5e99eaf0]
  419d7a:	mov    ebp,0xdcc3dbfa
  419d7f:	jnp    0x419d11
  419d81:	push   ebx
  419d82:	push   cs
  419d83:	jmp    DWORD PTR [ebp-0x12ae27e9]
  419d89:	cmp    al,0x4c
  419d8b:	repnz stc 
  419d8d:	push   es
  419d8e:	dec    eax
  419d8f:	inc    ecx
  419d90:	sbb    ecx,edx
  419d92:	ficom  WORD PTR [ecx-0x57]
  419d95:	scas   eax,DWORD PTR es:[edi]
  419d96:	mov    ds:0x3ac5b25c,al
  419d9b:	sub    DWORD PTR [eax+ecx*4+0x3546406c],esi
  419da2:	sub    eax,0x3911547a
  419da7:	dec    edi
  419da8:	mov    bh,0xe7
  419daa:	imul   BYTE PTR [edx+0x22]
  419dad:	mov    esi,0xc598842c
  419db2:	jg     0x419e06
  419db4:	push   0xffffffdd
  419db6:	(bad)  
  419db7:	repnz and ch,ah
  419dba:	mov    eax,0xe172c0e
  419dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419dc0:	xchg   edx,eax
  419dc1:	ret    
  419dc2:	push   ss
  419dc3:	and    al,0xbd
  419dc5:	jb     0x419d6b
  419dc7:	inc    esi
  419dc8:	jb     0x419d61
  419dca:	inc    ebx
  419dcb:	push   es
  419dcc:	add    BYTE PTR [edx-0x37],bh
  419dcf:	push   edx
  419dd0:	pop    esp
  419dd1:	call   DWORD PTR [ebp-0x1]
  419dd4:	arpl   WORD PTR [edx+ebx*2+0x31f3b514],di
  419ddb:	fwait
  419ddc:	jle    0x419d8a
  419dde:	repz cmc 
  419de0:	mov    bl,0x5b
  419de2:	inc    esi
  419de3:	adc    esi,ecx
  419de5:	cmp    bh,BYTE PTR [eax+0x12d42883]
  419deb:	(bad)  
  419dec:	(bad)  
  419ded:	fs xchg edi,eax
  419def:	jmp    0xefd254ae
  419df4:	out    dx,eax
  419df5:	mov    bh,0xe1
  419df7:	sti    
  419df8:	inc    edi
  419df9:	ins    BYTE PTR es:[edi],dx
  419dfa:	icebp  
  419dfb:	out    0x12,al
  419dfd:	xor    ch,BYTE PTR [edi]
  419dff:	les    ecx,FWORD PTR [edi]
  419e01:	inc    esi
  419e02:	ret    0xc4ce
  419e05:	fwait
  419e06:	xchg   DWORD PTR [ebp+0x1cff45c2],edi
  419e0c:	mov    dh,0x2f
  419e0e:	inc    ebx
  419e0f:	shr    BYTE PTR [ebx+0x61],0x23
  419e13:	lock test eax,0x7dff3737
  419e19:	mov    dl,0x88
  419e1b:	(bad)  
  419e1d:	jl     0x419e55
  419e1f:	test   al,0xc7
  419e21:	dec    esp
  419e22:	push   ebx
  419e23:	cmc    
  419e24:	cwde   
  419e25:	aas    
  419e26:	daa    
  419e27:	fild   DWORD PTR [ebx-0x5f]
  419e2a:	xor    eax,0xbaceea03
  419e2f:	addr16 clc 
  419e31:	mov    ebp,0x76a23b0d
  419e36:	scas   al,BYTE PTR es:[edi]
  419e37:	pop    ebp
  419e38:	addr16 xchg esp,eax
  419e3a:	cdq    
  419e3b:	push   eax
  419e3c:	pushf  
  419e3d:	jle    0x419e5b
  419e3f:	into   
  419e40:	or     eax,0x14d47c39
  419e45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e46:	mov    ecx,0x569dd21a
  419e4b:	or     ah,dl
  419e4d:	ja     0x419eac
  419e4f:	dec    eax
  419e50:	out    0xbf,eax
  419e52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e53:	cwde   
  419e54:	repz pushf 
  419e56:	push   eax
  419e57:	and    dl,0xc4
  419e5a:	out    dx,al
  419e5b:	int    0x97
  419e5d:	inc    ebp
  419e5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e5f:	sub    al,0xb0
  419e61:	imul   esi,edi,0x31
  419e64:	xchg   esp,eax
  419e65:	mov    ebx,0x5a190d7d
  419e6a:	pop    ds
  419e6b:	mov    ebp,0x4024cc5c
  419e70:	and    DWORD PTR [ecx+0x25c68561],edx
  419e76:	jo     0x419ec9
  419e78:	xchg   ecx,eax
  419e79:	or     ch,dl
  419e7b:	and    al,0xb5
  419e7d:	dec    eax
  419e7e:	push   es
  419e7f:	sti    
  419e80:	xchg   esi,eax
  419e81:	out    0xa1,eax
  419e83:	xchg   ecx,eax
  419e84:	rol    BYTE PTR [ebp+0x5d],cl
  419e87:	push   edi
  419e88:	push   ebx
  419e89:	mov    es,WORD PTR [ebp-0x499d701]
  419e8f:	out    dx,eax
  419e90:	(bad)  
  419e91:	adc    al,0xe6
  419e93:	jb     0x419e8e
  419e95:	pop    es
  419e96:	fisubr WORD PTR [ecx+eax*1]
  419e99:	add    eax,0xc88c5fa1
  419e9e:	xor    eax,0xef51b420
  419ea3:	pop    ds
  419ea4:	fwait
  419ea5:	neg    esi
  419ea7:	sub    al,0x48
  419ea9:	dec    ebx
  419eaa:	test   eax,0x6822f48b
  419eaf:	ins    DWORD PTR es:[edi],dx
  419eb0:	jl     0x419e94
  419eb2:	adc    al,ch
  419eb4:	jg     0x419f26
  419eb6:	or     BYTE PTR [edx+edx*8],al
  419eb9:	test   DWORD PTR [edi],ebx
  419ebb:	mov    dl,0x3d
  419ebd:	xor    eax,0xb9f2012d
  419ec2:	mov    eax,ds:0x8e59a44a
  419ec7:	dec    edx
  419ec8:	data16 js 0x419e79
  419ecb:	dec    ebp
  419ecc:	push   ds
  419ecd:	(bad)  
  419ecf:	fwait
  419ed0:	shr    DWORD PTR [edx-0xc02e2ae],1
  419ed6:	mov    edi,0x32d30f27
  419edb:	mov    ah,ch
  419edd:	sub    ah,BYTE PTR [esi-0x31]
  419ee0:	sub    ecx,DWORD PTR [edx]
  419ee2:	jmp    0x419f15
  419ee4:	push   ebp
  419ee5:	inc    eax
  419ee6:	pop    ebx
  419ee7:	and    eax,0xf
  419eea:	xchg   ebp,eax
  419eeb:	frstor [edx]
  419eed:	mov    esp,0xf0affbbf
  419ef2:	xor    eax,0x85c0ba5b
  419ef7:	dec    ebx
  419ef8:	ja     0x419f54
  419efa:	jne    0x419e9c
  419efc:	sbb    ch,BYTE PTR [esi+0x5d]
  419eff:	fdivr  st(1),st
  419f01:	outs   dx,DWORD PTR ds:[esi]
  419f02:	data16 jle 0x419f52
  419f05:	pop    ss
  419f06:	inc    esp
  419f07:	cwde   
  419f08:	fdivr  DWORD PTR [esi+0x49]
  419f0b:	rcl    BYTE PTR [ebx-0x67],1
  419f0e:	adc    cl,BYTE PTR [esi]
  419f10:	fild   WORD PTR [edi-0x7ce3d0d9]
  419f16:	daa    
  419f17:	mov    ch,0x9f
  419f19:	and    eax,0x8a1b0a53
  419f1e:	jp     0x419edf
  419f20:	adc    eax,0xc2a14a63
  419f25:	mov    esi,0x72a047a0
  419f2a:	(bad)  
  419f2b:	and    BYTE PTR [ecx-0x190ce274],ah
  419f31:	lods   eax,DWORD PTR ds:[esi]
  419f32:	xchg   ebx,eax
  419f33:	or     eax,0xfdbb8504
  419f38:	adc    dl,BYTE PTR [edi]
  419f3a:	loop   0x419f2d
  419f3c:	mov    al,ds:0x39d5c49
  419f41:	xor    eax,0xf16ec367
  419f46:	aam    0x3e
  419f48:	retf   0xa151
  419f4b:	xchg   DWORD PTR [ecx+ecx*8-0x34],edx
  419f4f:	sub    esi,DWORD PTR [ebp+0x40]
  419f52:	lods   eax,DWORD PTR ds:[esi]
  419f53:	inc    edi
  419f54:	dec    edi
  419f55:	xchg   BYTE PTR [esi+eax*4+0x78536f52],ch
  419f5c:	xor    eax,DWORD PTR [ebp+0x567c764f]
  419f62:	loopne 0x419f9f
  419f64:	sbb    esp,DWORD PTR [edi-0x75]
  419f67:	out    0x84,al
  419f69:	lds    edi,FWORD PTR [edx-0x72db512]
  419f6f:	(bad)  [edx+0x42]
  419f72:	(bad)  
  419f73:	nop
  419f74:	jmp    0x419fbe
  419f76:	sbb    DWORD PTR [edi-0x3],esi
  419f79:	shl    BYTE PTR [esi-0x28184941],cl
  419f7f:	test   DWORD PTR [ecx],esi
  419f81:	jl     0x419f59
  419f83:	repnz push cs
  419f85:	outs   dx,DWORD PTR ds:[esi]
  419f86:	xor    esp,DWORD PTR [edx+0x3db3dd93]
  419f8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f8d:	sbb    ebp,DWORD PTR [ebp-0x2fce4c1]
  419f93:	jno    0x419ff9
  419f95:	dec    edx
  419f96:	cwde   
  419f97:	cmp    eax,0xf31c0f5c
  419f9c:	hlt    
  419f9d:	aam    0x85
  419f9f:	mov    al,ds:0x3f29646e
  419fa4:	sub    al,0x2c
  419fa6:	xor    BYTE PTR [eax],ch
  419fa8:	int3   
  419fa9:	sbb    cl,dh
  419fab:	xchg   ebx,eax
  419fac:	inc    ecx
  419fad:	cli    
  419fae:	test   BYTE PTR [edi-0x6],bl
  419fb1:	test   bh,bl
  419fb3:	or     al,0x99
  419fb5:	or     ebp,ecx
  419fb7:	test   DWORD PTR [edx+0x6d00ceb7],ebp
  419fbd:	cmp    eax,0x6ec8874b
  419fc2:	mov    ah,0x3
  419fc4:	mov    eax,0xa97f0ce8
  419fc9:	mov    bl,0xbd
  419fcb:	sub    eax,0xae77138f
  419fd0:	and    al,0x39
  419fd2:	or     edx,eax
  419fd4:	loop   0x419f6c
  419fd6:	xchg   DWORD PTR [ecx],ecx
  419fd8:	jmp    0x41a050
  419fda:	pop    ecx
  419fdb:	inc    ebx
  419fdc:	and    BYTE PTR ds:0xa054d616,cl
  419fe2:	addr16 and eax,0x9ee3cb60
  419fe8:	pslld  mm5,QWORD PTR [eax-0x29]
  419fec:	or     BYTE PTR [ecx+0xe3974ed],cl
  419ff2:	xchg   BYTE PTR [edx-0x2e],ch
  419ff5:	dec    edx
  419ff6:	arpl   WORD PTR [edi-0x27dd3f0c],di
  419ffc:	push   ebx
  419ffd:	popf   
  419ffe:	xlat   BYTE PTR ds:[ebx]
  419fff:	push   edi
  41a000:	test   BYTE PTR [eax],0x6d
  41a003:	mov    dl,0x65
  41a005:	mov    WORD PTR [edx],ss
  41a007:	pop    ds
  41a008:	xchg   edi,eax
  41a009:	(bad)  
  41a00b:	dec    esi
  41a00c:	push   esi
  41a00d:	aaa    
  41a00e:	xor    eax,0xd08f6aa3
  41a013:	pop    es
  41a014:	pusha  
  41a015:	out    0x6f,al
  41a017:	fiadd  DWORD PTR [eax*8-0x514b3266]
  41a01e:	pop    ss
  41a01f:	jae    0x41a038
  41a021:	fxrstor [ecx+eax*1]
  41a025:	jecxz  0x41a002
  41a027:	aad    0xef
  41a029:	popa   
  41a02a:	cmp    al,0xa4
  41a02c:	jmp    0xfdd5:0xd978adcc
  41a033:	cmp    dl,BYTE PTR [edx-0x7a57ed52]
  41a039:	jmp    0x41a023
  41a03b:	stos   BYTE PTR es:[edi],al
  41a03c:	add    eax,0xa8f9c58b
  41a041:	shl    BYTE PTR [edi+eax*1-0x517df585],1
  41a048:	inc    ecx
  41a049:	shl    BYTE PTR [edi],cl
  41a04b:	adc    BYTE PTR [eax-0x59],bl
  41a04e:	jnp    0x41a06a
  41a050:	xor    DWORD PTR [edi+eiz*2+0x297aaa28],esp
  41a057:	retf   
  41a058:	shr    DWORD PTR [ecx],0x15
  41a05b:	(bad)  
  41a05c:	jo     0x41a040
  41a05e:	and    DWORD PTR [esi],esi
  41a060:	mov    ecx,0x27e51624
  41a065:	dec    ebp
  41a066:	(bad)  
  41a067:	adc    esp,ecx
  41a069:	sbb    BYTE PTR [ebp+0x4e],bl
  41a06c:	inc    esi
  41a06d:	push   ebp
  41a06e:	repnz lock data16 mov cl,0x3b
  41a073:	ss jmp 0xdac3c9f1
  41a079:	ret    0x658a
  41a07c:	sbb    al,0xb4
  41a07e:	ror    ch,cl
  41a080:	ss jnp 0x41a0ac
  41a083:	adc    DWORD PTR [ebx+0x66],ebp
  41a086:	repz loopne 0x41a056
  41a089:	inc    esp
  41a08a:	pushf  
  41a08b:	popf   
  41a08c:	and    edi,0xde664c20
  41a092:	pop    ss
  41a093:	add    eax,0xdf7f1d28
  41a098:	out    dx,eax
  41a099:	lahf   
  41a09a:	out    dx,al
  41a09b:	and    BYTE PTR [ebx-0x3bb4c8c5],cl
  41a0a1:	in     al,dx
  41a0a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0a3:	dec    ecx
  41a0a4:	xor    eax,0xf7a36300
  41a0a9:	pop    es
  41a0aa:	add    ebp,esp
  41a0ac:	rol    ebx,1
  41a0ae:	dec    edx
  41a0af:	adc    cl,bh
  41a0b1:	jo     0x41a04f
  41a0b3:	div    DWORD PTR [ebx-0x79]
  41a0b6:	out    0xbd,eax
  41a0b8:	call   0x7eca:0x24ccb758
  41a0bf:	shr    bl,1
  41a0c1:	dec    ebp
  41a0c2:	fs xchg edi,eax
  41a0c4:	cmp    al,0x7b
  41a0c6:	jo     0x41a13b
  41a0c8:	imul   esp,ebx,0xa940544a
  41a0ce:	enter  0x8b45,0xee
  41a0d2:	cwde   
  41a0d3:	jns    0x41a083
  41a0d5:	jmp    0x41a10f
  41a0d7:	(bad)  
  41a0d9:	push   ecx
  41a0da:	imul   edi,DWORD PTR [esi+0x73],0x702aed85
  41a0e1:	xchg   ebx,esp
  41a0e3:	loopne 0x41a124
  41a0e5:	xor    al,BYTE PTR [ebp*1-0x5f5a127e]
  41a0ec:	fsub   DWORD PTR [edx]
  41a0ee:	mov    ebp,DWORD PTR [ecx-0x17]
  41a0f1:	test   DWORD PTR [edi+edi*8],esp
  41a0f4:	mov    eax,0x1c021c7
  41a0f9:	repnz aad 0x45
  41a0fc:	mov    eax,ds:0xee6c60d1
  41a101:	or     dh,BYTE PTR [ecx+0x69]
  41a104:	mov    ch,0x93
  41a106:	jp     0x41a13f
  41a108:	xlat   BYTE PTR ds:[ebx]
  41a109:	add    al,0xe1
  41a10b:	call   0x903ced03
  41a110:	xchg   esi,eax
  41a112:	mov    eax,0xa5a29d0c
  41a117:	fnstenv [edx+0xda1b289]
  41a11d:	mov    esp,0x762df11
  41a122:	nop
  41a123:	add    ebx,DWORD PTR [edi]
  41a125:	xchg   BYTE PTR [edx+0x66048162],ah
  41a12b:	(bad)  
  41a12c:	xor    BYTE PTR [edi],dh
  41a12e:	inc    edi
  41a12f:	imul   edi,ebp,0x82388a64
  41a135:	push   ebx
  41a136:	sub    DWORD PTR [ebp-0x4f65b092],ebp
  41a13c:	jns    0x41a136
  41a13e:	cmp    cl,BYTE PTR [eax+0x3]
  41a141:	sub    edx,edi
  41a143:	adc    BYTE PTR [edi+0x4a7e69fc],bh
  41a149:	shr    DWORD PTR [eax],1
  41a14b:	repz xor DWORD PTR [eax+0x57a92e72],0x34
  41a153:	dec    ecx
  41a154:	xor    bh,BYTE PTR [edi+0x18ce267b]
  41a15a:	call   0xb612:0x509ee7e0
  41a161:	jle    0x41a1e0
  41a163:	push   eax
  41a164:	or     al,0x8a
  41a166:	addr16 jns 0x41a15b
  41a169:	call   0xa31f:0x574cb8a1
  41a170:	mov    cl,0x5c
  41a172:	sub    ch,cl
  41a174:	or     ebx,DWORD PTR ss:[esi-0x484e988f]
  41a17b:	leave  
  41a17c:	mov    al,BYTE PTR [eax-0x7f]
  41a17f:	out    0x8,eax
  41a181:	inc    edi
  41a182:	(bad)  [edx+0x6fe53141]
  41a188:	sbb    eax,0x1b0b1b0c
  41a18d:	add    eax,0xdc1c0f49
  41a192:	adc    eax,edi
  41a194:	mov    dh,0x3
  41a196:	xchg   esp,eax
  41a197:	ins    DWORD PTR es:[edi],dx
  41a198:	jmp    0x41a20b
  41a19a:	ins    BYTE PTR es:[edi],dx
  41a19b:	outs   dx,DWORD PTR ds:[esi]
  41a19c:	xor    BYTE PTR [ecx+esi*1],cl
  41a19f:	sub    al,0xe0
  41a1a1:	in     al,0x8b
  41a1a3:	push   DWORD PTR [edi-0x4dda85d]
  41a1a9:	sti    
  41a1aa:	fs in  eax,0x15
  41a1ad:	mov    eax,0x4a37f9bc
  41a1b2:	(bad)  
  41a1b3:	popa   
  41a1b4:	cmp    dh,dl
  41a1b6:	addr16 push ds
  41a1b8:	mov    ch,0xfd
  41a1ba:	stc    
  41a1bb:	xlat   BYTE PTR ds:[ebx]
  41a1bc:	jmp    0x85a53a8b
  41a1c1:	(bad)  
  41a1c2:	pop    eax
  41a1c3:	lock mov ah,BYTE PTR [ebx-0x45afc106]
  41a1ca:	mov    al,ds:0x7651cbbf
  41a1cf:	cdq    
  41a1d0:	xor    BYTE PTR [edi+ecx*8-0x70],al
  41a1d4:	idiv   DWORD PTR [edx+0x20dac237]
  41a1da:	fsubrp st(3),st
  41a1dc:	mov    al,0xc3
  41a1de:	sbb    ch,BYTE PTR fs:[edi+0x7fb9ec9d]
  41a1e5:	mov    esi,0xa1ebce22
  41a1ea:	xchg   DWORD PTR [edx+0x4576973a],edi
  41a1f0:	popa   
  41a1f1:	clc    
  41a1f2:	fld    TBYTE PTR [edx-0x6daf13b0]
  41a1f8:	adc    ebp,DWORD PTR [edi]
  41a1fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1fb:	(bad)  
  41a1fc:	push   esp
  41a1fd:	enter  0x92e7,0xd
  41a201:	addr16 jmp 0x4715714b
  41a207:	call   DWORD PTR gs:[ebx+0x2372e10a]
  41a20e:	jg     0x41a214
  41a210:	sub    al,0xab
  41a212:	adc    DWORD PTR [eax+0x5cb2362e],eax
  41a218:	cmp    al,0x3b
  41a21a:	loop   0x41a1c0
  41a21c:	mov    dl,0x40
  41a21e:	outs   dx,DWORD PTR ds:[esi]
  41a21f:	loop   0x41a1a6
  41a221:	loope  0x41a230
  41a223:	(bad)  
  41a224:	sar    DWORD PTR [ebp+0x52],1
  41a227:	dec    bl
  41a229:	dec    esp
  41a22a:	jmp    0xbd00a1b7
  41a22f:	mov    ds:0x47431e67,eax
  41a234:	push   ss
  41a235:	mov    ds:0x6360f85c,eax
  41a23a:	pop    esi
  41a23b:	mov    al,dh
  41a23d:	or     dh,cl
  41a23f:	push   eax
  41a240:	and    edi,edi
  41a242:	leave  
  41a243:	add    edx,DWORD PTR [edx+0x25]
  41a246:	pop    es
  41a247:	cmp    eax,ecx
  41a249:	and    eax,0x82ad7abc
  41a24e:	retf   0xe931
  41a251:	mov    ebx,0x26ea38b1
  41a256:	mov    esi,0x2be39542
  41a25b:	pop    edx
  41a25c:	xchg   edi,eax
  41a25d:	jne    0x41a1ea
  41a25f:	lea    ecx,[edi+0xe]
  41a262:	pop    esi
  41a263:	daa    
  41a264:	mov    cs,WORD PTR [eax]
  41a266:	push   es
  41a267:	mov    dh,ah
  41a269:	neg    DWORD PTR [esi+0x649eee4f]
  41a26f:	cmp    eax,0x5bc8193f
  41a274:	inc    esi
  41a275:	mov    ch,ah
  41a277:	mov    ebx,0x409acc55
  41a27c:	jns    0x41a26c
  41a27e:	xor    esp,edi
  41a280:	sub    cl,BYTE PTR [edx]
  41a282:	repnz rcr BYTE PTR [ecx+0x3146b860],0x99
  41a28a:	call   0xa9ba:0xf5668450
  41a291:	popf   
  41a292:	push   eax
  41a293:	pop    esi
  41a294:	pop    esp
  41a295:	xchg   ecx,eax
  41a296:	loope  0x41a29e
  41a298:	pusha  
  41a299:	ficom  DWORD PTR [esi+0x46]
  41a29c:	mov    WORD PTR [edx+ecx*8+0x3b],cs
  41a2a0:	and    ebp,DWORD PTR [edi+0x6f]
  41a2a3:	fld    QWORD PTR [esi+0x7c]
  41a2a6:	leave  
  41a2a7:	xor    esi,DWORD PTR [ebp-0x2006a518]
  41a2ad:	daa    
  41a2ae:	out    0xe1,eax
  41a2b0:	add    BYTE PTR [edi+0x14474e83],bl
  41a2b6:	jnp    0x41a23f
  41a2b8:	mul    DWORD PTR fs:[edx+0x27824148]
  41a2bf:	scas   al,BYTE PTR es:[edi]
  41a2c0:	mov    DWORD PTR [ebp-0x50f98489],ecx
  41a2c6:	das    
  41a2c7:	push   esi
  41a2c8:	fadd   st(1),st
  41a2ca:	call   0xc1e00f10
  41a2cf:	mov    eax,0xcaefa76a
  41a2d4:	xchg   BYTE PTR [esi+0x77c946c4],bh
  41a2da:	add    cl,ah
  41a2dc:	ja     0x41a2d1
  41a2de:	mov    BYTE PTR [edi+0x24],ch
  41a2e1:	and    esi,edx
  41a2e3:	mov    ds:0x6f55b405,al
  41a2e8:	push   esp
  41a2e9:	inc    edi
  41a2ea:	sbb    DWORD PTR [edx+0x7e],ecx
  41a2ed:	cmp    BYTE PTR [ecx-0x274d7a9d],cl
  41a2f3:	sbb    esi,DWORD PTR [edi-0x22]
  41a2f6:	aas    
  41a2f7:	das    
  41a2f8:	xor    esp,ebp
  41a2fa:	(bad)
  41a2fd:	test   BYTE PTR [edx-0x3e],0xca
  41a301:	outs   dx,BYTE PTR ds:[esi]
  41a302:	and    al,0xc5
  41a304:	jl     0x41a32d
  41a306:	sub    eax,0xe5257454
  41a30b:	mov    DWORD PTR ds:0x596e2533,0x50bbe208
  41a315:	imul   eax,DWORD PTR ds:0xfdbca279,0xffffffab
  41a31c:	adc    ecx,DWORD PTR [ecx+0x43]
  41a31f:	or     DWORD PTR [ebx+esi*1-0x2d69a8ea],ecx
  41a326:	fbstp  TBYTE PTR [ecx+0x5316fe38]
  41a32c:	into   
  41a32d:	adc    al,BYTE PTR [edx]
  41a32f:	inc    edx
  41a330:	jnp    0x41a2c1
  41a332:	popa   
  41a333:	stc    
  41a334:	or     eax,0x84115dca
  41a339:	adc    DWORD PTR [edi-0x2c7eef2d],ebp
  41a33f:	loopne 0x41a2f8
  41a341:	inc    ecx
  41a342:	fstp   TBYTE PTR ds:0x4ee64aa1
  41a348:	call   0xabf52880
  41a34d:	neg    BYTE PTR [edx+0x26]
  41a350:	xchg   ebx,eax
  41a351:	loope  0x41a3cc
  41a353:	xchg   DWORD PTR [edx],esi
  41a355:	in     eax,dx
  41a356:	or     dl,ah
  41a358:	and    BYTE PTR [ebx+eax*8+0x5],cl
  41a35c:	je     0x41a396
  41a35e:	add    DWORD PTR [eax-0x67],ebp
  41a361:	ret    
  41a362:	lahf   
  41a363:	xchg   ebp,eax
  41a364:	pop    esp
  41a365:	bound  esp,QWORD PTR [ebx]
  41a367:	and    eax,0xa0992c05
  41a36c:	popf   
  41a36d:	mov    ?,ecx
  41a36f:	jmp    0x41a341
  41a371:	push   esp
  41a372:	xor    ecx,DWORD PTR [ecx+0x60]
  41a375:	fsubr  QWORD PTR [edx]
  41a377:	(bad)  
  41a378:	cli    
  41a379:	or     DWORD PTR [ebx],eax
  41a37b:	je     0x41a32d
  41a37d:	cmp    DWORD PTR [ecx-0x18ef62bd],eax
  41a383:	addr16 mov gs,eax
  41a386:	xchg   esp,eax
  41a387:	aaa    
  41a388:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a389:	dec    ecx
  41a38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a38b:	push   es
  41a38c:	lods   al,BYTE PTR ds:[esi]
  41a38d:	and    DWORD PTR [edi],ebx
  41a38f:	jle    0x41a408
  41a391:	mov    DWORD PTR [ecx-0x6d],0xcfcd948c
  41a398:	dec    esp
  41a399:	jmp    0x41a33e
  41a39b:	into   
  41a39c:	or     al,0xa9
  41a39e:	xchg   edi,eax
  41a39f:	dec    esi
  41a3a0:	xchg   esi,eax
  41a3a1:	mov    ebp,0xbde566a8
  41a3a6:	pop    es
  41a3a7:	ins    DWORD PTR es:[edi],dx
  41a3a8:	fwait
  41a3a9:	jno    0x41a3df
  41a3ab:	or     eax,0x55b372f7
  41a3b0:	nop
  41a3b1:	jmp    0x768114eb
  41a3b6:	push   ss
  41a3b7:	push   ecx
  41a3b8:	shl    DWORD PTR [ebx+0x25f6a2d3],0x42
  41a3bf:	mov    ds:0xd980998f,al
  41a3c4:	sub    al,0xc5
  41a3c6:	mov    ch,0x29
  41a3c8:	jp     0x41a401
  41a3ca:	sahf   
  41a3cb:	pusha  
  41a3cc:	xor    cl,bh
  41a3ce:	aaa    
  41a3cf:	cdq    
  41a3d0:	fisub  DWORD PTR ds:0x5075a62
  41a3d6:	loop   0x41a3bc
  41a3d8:	mov    WORD PTR [ebp+0x72a0bd3a],?
  41a3de:	jno    0x41a3a8
  41a3e0:	(bad)  
  41a3e1:	out    0x2c,al
  41a3e3:	xchg   ebx,eax
  41a3e4:	sub    eax,0x774a5930
  41a3e9:	mov    edx,0xf1012aba
  41a3ee:	(bad)  [edx+0x1c]
  41a3f1:	or     al,0x79
  41a3f3:	icebp  
  41a3f4:	cs (bad) 
  41a3f6:	and    BYTE PTR [ecx],dh
  41a3f8:	cdq    
  41a3f9:	jbe    0x41a3bf
  41a3fb:	inc    esi
  41a3fc:	loope  0x41a3eb
  41a3fe:	mov    al,ds:0x283fbcb3
  41a403:	sub    al,0xe1
  41a405:	or     al,0x9a
  41a407:	bound  eax,QWORD PTR [edi+0x1b42312a]
  41a40d:	das    
  41a40e:	shl    esi,1
  41a410:	sub    cl,BYTE PTR [esi]
  41a412:	xchg   edx,eax
  41a413:	jecxz  0x41a418
  41a415:	out    dx,eax
  41a416:	out    0x2c,eax
  41a418:	dec    eax
  41a419:	lods   eax,DWORD PTR ds:[esi]
  41a41a:	mov    dl,dl
  41a41c:	rol    DWORD PTR [eax+0x6e5b1c01],1
  41a422:	inc    esp
  41a423:	inc    ebx
  41a424:	int3   
  41a425:	mov    bh,0xc
  41a427:	mov    eax,0x22278103
  41a42c:	xor    BYTE PTR [eax-0x2],dh
  41a42f:	out    dx,eax
  41a430:	sbb    ebp,DWORD PTR [ebx+eiz*4+0x3a412bba]
  41a437:	mov    ds:0xd564997d,al
  41a43c:	in     eax,dx
  41a43d:	or     DWORD PTR [eax],esi
  41a43f:	mov    WORD PTR [edx+0x209dd7b2],gs
  41a445:	stos   DWORD PTR es:[edi],eax
  41a446:	sub    DWORD PTR [edi+0x0],ebp
  41a449:	cmp    edi,eax
  41a44b:	fincstp 
  41a44d:	cmp    ebp,DWORD PTR [edx]
  41a44f:	push   0xffffffb4
  41a451:	pop    ecx
  41a452:	push   esi
  41a453:	mov    eax,ds:0x27a6c535
  41a458:	push   ebp
  41a459:	lahf   
  41a45a:	add    BYTE PTR [eax-0x79],ah
  41a45d:	cmp    al,0xd1
  41a45f:	or     bl,0xf9
  41a462:	pop    ds
  41a463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a464:	fst    st(4)
  41a466:	(bad)  
  41a467:	retf   
  41a468:	(bad)  
  41a469:	(bad)  
  41a46a:	call   0x3cc0e96c
  41a46f:	inc    esp
  41a470:	into   
  41a471:	adc    eax,0x6fb69e72
  41a476:	icebp  
  41a477:	or     DWORD PTR [ecx-0x7],edi
  41a47a:	stos   DWORD PTR es:[edi],eax
  41a47b:	or     bh,BYTE PTR [esi]
  41a47d:	fistp  QWORD PTR [edx+0x64a9a45c]
  41a483:	xor    BYTE PTR [edx+eax*2-0x2f],dl
  41a487:	shl    DWORD PTR cs:[eax+eax*2-0x17bec469],cl
  41a48f:	(bad)  
  41a490:	das    
  41a491:	lock adc eax,0x7defba
  41a497:	push   eax
  41a498:	xchg   BYTE PTR [edx],bh
  41a49a:	fild   WORD PTR [ebp+0x29]
  41a49d:	test   al,0x4
  41a49f:	pusha  
  41a4a0:	jne    0x41a4fd
  41a4a2:	fs jns 0x41a456
  41a4a5:	cli    
  41a4a6:	pop    ebp
  41a4a7:	mov    al,ds:0x7f4dbbf9
  41a4ac:	ret    
  41a4ad:	pop    ebp
  41a4ae:	or     BYTE PTR [ebx],bh
  41a4b0:	adc    cl,BYTE PTR ss:[esp+ebp*4+0x643349a3]
  41a4b8:	scas   al,BYTE PTR es:[edi]
  41a4b9:	mov    ah,BYTE PTR [ebx]
  41a4bb:	dec    esi
  41a4bc:	ss mov cl,0xd2
  41a4bf:	or     BYTE PTR ds:0x2f6f6922,cl
  41a4c5:	jle    0x41a4ee
  41a4c7:	cmp    ebp,ebp
  41a4c9:	sti    
  41a4ca:	retf   0x54fe
  41a4cd:	shl    BYTE PTR [edx+0x48fc70ac],1
  41a4d3:	pop    eax
  41a4d4:	nop
  41a4d5:	pop    ss
  41a4d6:	add    bh,dl
  41a4d8:	or     al,0xa0
  41a4da:	or     BYTE PTR [esi+0x54e56f82],0xe9
  41a4e1:	(bad)  
  41a4e2:	sub    BYTE PTR [ecx-0x5d],0xed
  41a4e6:	mov    dl,0xf0
  41a4e8:	iret   
  41a4e9:	add    BYTE PTR [edx-0x3f],0xbf
  41a4ed:	into   
  41a4ee:	add    al,dl
  41a4f0:	mov    cl,0x66
  41a4f2:	lock pandn mm6,QWORD PTR [eax]
  41a4f6:	lds    edx,FWORD PTR ds:[ebx-0x5e]
  41a4fa:	jae    0x41a4dc
  41a4fc:	scas   eax,DWORD PTR es:[edi]
  41a4fd:	lods   al,BYTE PTR ds:[esi]
  41a4fe:	push   cs
  41a4ff:	addr16 dec edi
  41a501:	inc    edi
  41a502:	mov    eax,0x718dedca
  41a507:	dec    ebx
  41a508:	outs   dx,BYTE PTR ds:[esi]
  41a509:	jmp    FWORD PTR [edi-0x10]
  41a50c:	sbb    DWORD PTR [ebp-0x20f83e14],esp
  41a512:	leave  
  41a513:	retf   0x7e5f
  41a516:	push   0x2230857f
  41a51b:	push   ss
  41a51c:	enter  0xcd0,0x50
  41a520:	and    BYTE PTR ds:0x6f932928,bh
  41a526:	mov    dl,0x22
  41a528:	sub    BYTE PTR [edx-0x68],0xc9
  41a52c:	daa    
  41a52d:	or     al,BYTE PTR [ebx]
  41a52f:	ins    DWORD PTR es:[edi],dx
  41a530:	outs   dx,BYTE PTR ds:[esi]
  41a531:	fist   DWORD PTR [ebp-0x52]
  41a534:	mov    edx,0xe30173ab
  41a539:	mov    ebp,0x42e5dc29
  41a53e:	stos   BYTE PTR es:[edi],al
  41a53f:	cs push 0x8fa28684
  41a545:	hlt    
  41a546:	nop
  41a547:	mov    dl,0xcc
  41a549:	inc    ebx
  41a54a:	sub    DWORD PTR [eax-0x52efe718],ebx
  41a550:	test   eax,0x1c286e15
  41a555:	mov    al,ds:0x12be9a5e
  41a55a:	dec    esi
  41a55b:	sar    BYTE PTR [ebx-0x6ca8bc06],0x6c
  41a562:	mov    ecx,0x7f406f61
  41a567:	fidiv  DWORD PTR [eax]
  41a569:	pop    edx
  41a56a:	push   esi
  41a56b:	sti    
  41a56c:	inc    esi
  41a56d:	sub    ecx,DWORD PTR [esi-0x1da4f4c6]
  41a573:	in     al,0x4d
  41a575:	and    DWORD PTR [ebx-0x11489d23],esp
  41a57b:	int3   
  41a57c:	data16 fwait
  41a57e:	mov    ch,0xe1
  41a580:	adc    eax,0x9ceae7f5
  41a585:	scas   eax,DWORD PTR es:[edi]
  41a586:	xor    BYTE PTR [ebx-0x19a79e78],0xb0
  41a58d:	(bad)  
  41a58e:	mov    ebp,0xfaf9cb19
  41a593:	xor    al,0xea
  41a595:	sahf   
  41a596:	mov    al,0x77
  41a598:	or     BYTE PTR [edx+0x6f819ff5],al
  41a59e:	in     eax,dx
  41a59f:	addr16 arpl sp,si
  41a5a2:	push   es
  41a5a3:	in     eax,dx
  41a5a4:	dec    edx
  41a5a5:	call   0x63bb1ce2
  41a5aa:	adc    DWORD PTR [ebp-0x2c],esp
  41a5ad:	jl     0x41a5f2
  41a5af:	mov    ecx,ds
  41a5b1:	adc    al,0xc2
  41a5b3:	shrd   DWORD PTR [esi-0x533d91e],edi,0x6d
  41a5bb:	jnp    0x41a62c
  41a5bd:	xchg   esi,eax
  41a5be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5bf:	mov    esp,0x689057b2
  41a5c4:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5c7:	cmp    al,0xba
  41a5c9:	and    BYTE PTR [edx+ebx*8-0x52],bh
  41a5cd:	adc    ch,BYTE PTR [esi]
  41a5cf:	jno    0x41a5bb
  41a5d1:	call   0x2eb3:0xa054096a
  41a5d8:	fwait
  41a5d9:	cmp    eax,DWORD PTR [edi-0x3e]
  41a5dc:	dec    esi
  41a5dd:	mov    ah,0x34
  41a5df:	add    esi,esp
  41a5e1:	(bad)
  41a5e4:	mov    edx,esp
  41a5e6:	and    eax,0xfc8d2b9e
  41a5eb:	mov    dl,0x1e
  41a5ed:	jl     0x41a597
  41a5ef:	hlt    
  41a5f0:	aaa    
  41a5f1:	inc    edi
  41a5f2:	pop    eax
  41a5f3:	ss inc edi
  41a5f5:	dec    ecx
  41a5f6:	loopne 0x41a644
  41a5f8:	(bad)  
  41a5f9:	cdq    
  41a5fa:	xor    al,0x24
  41a5fc:	mov    eax,DWORD PTR [edx]
  41a5fe:	cmp    DWORD PTR [ebx+0x45],ecx
  41a601:	xchg   ecx,eax
  41a602:	jmp    0x4c0d:0x402cd987
  41a609:	sbb    BYTE PTR [ebx+ecx*8],ch
  41a60c:	fist   DWORD PTR [eax+edi*2+0x415a7823]
  41a613:	xor    eax,0x68dbf666
  41a618:	dec    ebp
  41a619:	adc    DWORD PTR [eax-0x6d43ccd9],ecx
  41a61f:	push   ds
  41a620:	dec    eax
  41a621:	mov    ds:0xab47319b,al
  41a626:	das    
  41a627:	lods   eax,DWORD PTR ds:[esi]
  41a628:	add    ah,BYTE PTR [edx-0x2fd1edd1]
  41a62e:	pusha  
  41a62f:	and    DWORD PTR [ebx-0x4a403564],0x7137d862
  41a639:	repz call 0xbafd:0x1089e88b
  41a641:	fsub   QWORD PTR [eax+edi*1-0x794392b9]
  41a648:	imul   BYTE PTR [ebp-0x1e]
  41a64b:	add    DWORD PTR [ecx-0x37],ecx
  41a64e:	jns    0x41a6b0
  41a650:	fbld   TBYTE PTR [edx]
  41a652:	and    dl,BYTE PTR [ebx]
  41a654:	mov    dl,0x60
  41a656:	mov    edi,0xab1fb015
  41a65b:	frstor [ecx+0x52]
  41a65e:	push   ecx
  41a65f:	xchg   DWORD PTR [ecx-0x49],eax
  41a662:	mov    ebx,0xdd8bae3f
  41a667:	sub    BYTE PTR [eax+0x4edc8092],ch
  41a66d:	cmc    
  41a66e:	jb     0x41a64b
  41a670:	cmp    al,0x12
  41a672:	sbb    al,BYTE PTR [ebp-0x4ebc9d49]
  41a678:	mov    esi,0x6f3ff3f7
  41a67d:	fadd   DWORD PTR [eax-0x26b0ae93]
  41a683:	jns    0x41a700
  41a685:	das    
  41a686:	fild   DWORD PTR [edx+0x2e4ad346]
  41a68c:	and    eax,0xf529fc2c
  41a691:	test   bl,ah
  41a693:	mov    esp,0xdee49c97
  41a698:	xchg   DWORD PTR [edi],edi
  41a69a:	ret    0x92c3
  41a69d:	mov    ch,BYTE PTR [edi-0x1229d2a3]
  41a6a3:	outs   dx,DWORD PTR ds:[esi]
  41a6a4:	(bad)  
  41a6a5:	std    
  41a6a6:	jns    0x41a631
  41a6a8:	mov    edx,0xb5b43a69
  41a6ad:	sahf   
  41a6ae:	arpl   WORD PTR [ebx-0x28],bx
  41a6b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6b2:	cld    
  41a6b3:	mov    ebx,esi
  41a6b5:	push   0x8b476d8d
  41a6ba:	add    al,0x9e
  41a6bc:	sub    DWORD PTR [eax-0x4f],ebp
  41a6bf:	jo     0x41a68d
  41a6c1:	mov    eax,0x98b466d4
  41a6c6:	enter  0x8a85,0x7a
  41a6ca:	jle    0x41a662
  41a6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6cd:	add    al,bl
  41a6cf:	rol    ch,0xa9
  41a6d2:	dec    edx
  41a6d3:	lock imul ebp,edi,0x7147eea6
  41a6da:	cmp    al,0x47
  41a6dc:	imul   ebx,DWORD PTR [eax+0x51ce0191],0x1e6767ce
  41a6e6:	pop    es
  41a6e7:	xor    DWORD PTR [ecx],esp
  41a6e9:	lods   al,BYTE PTR ds:[esi]
  41a6ea:	(bad)  
  41a6eb:	sbb    eax,0x811bbbc
  41a6f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a6f1:	xchg   ecx,eax
  41a6f2:	adc    eax,0xa73c4e51
  41a6f7:	sub    al,0xa9
  41a6f9:	adc    ebx,DWORD PTR [eax-0x5]
  41a6fc:	mov    dl,0xad
  41a6fe:	pop    ds
  41a6ff:	mov    BYTE PTR [edi],dh
  41a701:	sub    DWORD PTR [ebx+0x529a32d4],ebx
  41a707:	push   ss
  41a708:	and    esi,DWORD PTR [eax-0x3e]
  41a70b:	bound  eax,QWORD PTR [esi]
  41a70d:	aaa    
  41a70e:	and    eax,0x39b54cdc
  41a713:	repnz cmc 
  41a715:	mov    ebx,0x98eb7674
  41a71a:	add    ch,BYTE PTR [edx+eax*2-0xf]
  41a71e:	adc    DWORD PTR [eax],eax
  41a720:	and    eax,0x6a0762ba
  41a725:	ins    DWORD PTR es:[edi],dx
  41a726:	adc    ebx,DWORD PTR [ebx]
  41a728:	aas    
  41a729:	fstp   TBYTE PTR [eax]
  41a72b:	sbb    ah,BYTE PTR [ebx+edi*8]
  41a72e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a72f:	push   ebp
  41a730:	fisubr WORD PTR [eax+ebp*8+0x46f9285f]
  41a737:	cmc    
  41a738:	out    dx,eax
  41a739:	push   es
  41a73a:	test   BYTE PTR ds:0x82807408,0xd8
  41a741:	arpl   WORD PTR [ecx+0x3a4e2adc],di
  41a747:	pop    ebp
  41a748:	add    ch,BYTE PTR ds:0xc2f2670e
  41a74e:	xor    al,0x92
  41a750:	sub    ecx,eax
  41a752:	imul   eax,DWORD PTR [edi],0xa6ce8517
  41a758:	jmp    0x5a33356a
  41a75d:	cmp    eax,0x9a2101da
  41a762:	mov    ecx,0xc31de408
  41a767:	addr16 je 0x41a700
  41a76a:	scas   al,BYTE PTR es:[edi]
  41a76b:	dec    ebx
  41a76c:	fcomp  DWORD PTR [edx+0x642c844f]
  41a772:	ret    
  41a773:	js     0x41a717
  41a775:	push   0xd5e15680
  41a77a:	std    
  41a77b:	sub    edi,0xb9ab2166
  41a781:	cmp    BYTE PTR [ebx+0xe],0xe2
  41a785:	stos   DWORD PTR es:[edi],eax
  41a786:	imul   edi,DWORD PTR [eax],0xfffffffd
  41a789:	mov    dh,0xa3
  41a78b:	adc    DWORD PTR [esi],eax
  41a78d:	mov    edi,0x7d70c3ce
  41a792:	fsub   QWORD PTR [ebx]
  41a794:	pop    esi
  41a795:	mov    esi,0x2afab7fb
  41a79a:	jb     0x41a746
  41a79c:	mov    ch,0x10
  41a79e:	cdq    
  41a79f:	mul    DWORD PTR ds:0xe764e68d
  41a7a5:	shl    BYTE PTR [ebp-0x6ecf670a],cl
  41a7ab:	sub    BYTE PTR [esi-0x32],cl
  41a7ae:	push   ss
  41a7af:	jbe    0x41a777
  41a7b1:	mul    dh
  41a7b3:	jmp    0x53d0:0xc1d3d2c3
  41a7ba:	pushf  
  41a7bb:	adc    BYTE PTR [ebx+0x41c5849b],0xbc
  41a7c2:	mov    dh,0xeb
  41a7c4:	dec    edi
  41a7c5:	icebp  
  41a7c6:	inc    edx
  41a7c7:	mov    edi,DWORD PTR [esi+0x16]
  41a7ca:	(bad)  
  41a7cb:	int    0xa8
  41a7cd:	pop    ecx
  41a7ce:	mov    gs,WORD PTR [eax-0x6e]
  41a7d1:	in     eax,0x84
  41a7d3:	call   0x9c4e:0xd136193
  41a7da:	shr    DWORD PTR [ebx-0x2ede2cc3],0x2a
  41a7e1:	loopne 0x41a82a
  41a7e3:	xchg   ebx,eax
  41a7e4:	inc    edx
  41a7e5:	sti    
  41a7e6:	iret   
  41a7e7:	or     al,0x75
  41a7e9:	pop    ebx
  41a7ea:	shl    DWORD PTR [ebx],0x76
  41a7ed:	pop    es
  41a7ee:	mov    bh,0xc1
  41a7f0:	sub    BYTE PTR [edx-0x3761a14c],al
  41a7f6:	pop    edx
  41a7f7:	inc    edx
  41a7f8:	lahf   
  41a7f9:	pop    ds
  41a7fa:	push   ss
  41a7fb:	adc    ah,bh
  41a7fd:	inc    eax
  41a7fe:	push   0xffffffcb
  41a800:	mov    ds:0xb9c5ed22,eax
  41a805:	mov    ecx,0xcfdcafd7
  41a80a:	dec    esi
  41a80b:	mov    bh,0x81
  41a80d:	or     ecx,DWORD PTR [ebx]
  41a80f:	lods   al,BYTE PTR ds:[esi]
  41a810:	pop    edi
  41a811:	daa    
  41a812:	cmp    eax,0x40cf259
  41a817:	mov    edi,?
  41a819:	xchg   edx,eax
  41a81a:	(bad)  
  41a81c:	sar    ecx,cl
  41a81e:	mov    BYTE PTR [ebx],ah
  41a820:	call   0xde308ffb
  41a825:	fwait
  41a826:	or     ah,BYTE PTR [ebx+0x659139d7]
  41a82c:	sbb    BYTE PTR [esi+ebx*4-0x39],0x6
  41a831:	inc    ebx
  41a832:	pop    edi
  41a833:	cmp    al,0x3
  41a835:	fistp  QWORD PTR [ebp-0x67]
  41a838:	jns    0x41a7ca
  41a83a:	sbb    BYTE PTR [esi-0x58d8064b],cl
  41a840:	xchg   ecx,eax
  41a841:	div    DWORD PTR [ecx+0xc]
  41a844:	(bad)  
  41a845:	data16 lods al,BYTE PTR ds:[esi]
  41a847:	imul   ebx,DWORD PTR [ebx],0x5c
  41a84a:	mov    esi,0x62a8c461
  41a84f:	lods   eax,DWORD PTR ds:[esi]
  41a850:	(bad)  
  41a852:	jmp    0xa2af:0xf782d9d5
  41a859:	arpl   WORD PTR [eax],si
  41a85b:	or     ah,bl
  41a85d:	add    esi,DWORD PTR [ebx+ebx*1+0x1d]
  41a861:	and    eax,0x2dc972a7
  41a866:	jl     0x41a864
  41a868:	adc    al,0x72
  41a86a:	sub    ah,bh
  41a86c:	sbb    al,0xfe
  41a86e:	not    cl
  41a870:	jbe    0x41a8b3
  41a872:	mov    esi,0xfaec3a89
  41a877:	retf   
  41a878:	mov    edi,0xc571af06
  41a87d:	adc    eax,DWORD PTR [ecx+0x30e40e4d]
  41a883:	push   0x2f14c1eb
  41a888:	or     dl,BYTE PTR ds:0x7bbfe7e2
  41a88e:	inc    eax
  41a88f:	lahf   
  41a890:	xchg   edi,eax
  41a891:	in     eax,0xe6
  41a893:	cmc    
  41a894:	inc    ebp
  41a895:	jp     0x41a8c9
  41a897:	inc    ecx
  41a898:	pop    ebp
  41a899:	mov    edx,0x21ef11d4
  41a89e:	push   cs
  41a89f:	aas    
  41a8a0:	clc    
  41a8a1:	les    esp,FWORD PTR [ebx-0x65]
  41a8a4:	repnz sbb cl,0xdc
  41a8a8:	aam    0xa4
  41a8aa:	push   ebp
  41a8ab:	mov    eax,esi
  41a8ad:	and    BYTE PTR [eax],0x40
  41a8b0:	pop    esi
  41a8b1:	pop    eax
  41a8b2:	mov    WORD PTR [edx-0x5],?
  41a8b5:	sbb    edi,ebx
  41a8b7:	adc    dh,BYTE PTR [ebx]
  41a8b9:	push   ebp
  41a8ba:	push   esi
  41a8bb:	fs fwait
  41a8bd:	add    BYTE PTR [edi+edi*1-0x5f7bc8d8],dh
  41a8c4:	imul   edi,DWORD PTR [eax],0xe40687e
  41a8ca:	int3   
  41a8cb:	fidiv  WORD PTR [esi]
  41a8cd:	jne    0x41a8f5
  41a8cf:	sub    eax,0x45377a9c
  41a8d4:	int3   
  41a8d5:	int3   
  41a8d6:	(bad)  
  41a8d8:	aas    
  41a8d9:	adc    BYTE PTR [ecx],0x6c
  41a8dc:	push   ax
  41a8de:	push   0xf330b004
  41a8e3:	mov    ecx,0xb56aea6d
  41a8e8:	and    al,0x8
  41a8ea:	repz adc al,0xb6
  41a8ed:	(bad)  
  41a8ef:	xchg   esi,eax
  41a8f0:	push   edx
  41a8f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a8f2:	pop    ss
  41a8f3:	cli    
  41a8f4:	mov    ebx,0xd94db2d
  41a8f9:	push   ecx
  41a8fa:	(bad)  
  41a8fb:	mov    ds:0x2bbffb68,eax
  41a900:	les    edi,FWORD PTR [ebx]
  41a902:	fptan  
  41a904:	xor    ebp,ebp
  41a906:	and    bh,BYTE PTR [ecx-0x19]
  41a909:	push   edi
  41a90a:	shl    cl,1
  41a90c:	adc    bl,BYTE PTR [eax+0x14b8efab]
  41a912:	ins    BYTE PTR es:[edi],dx
  41a913:	into   
  41a914:	or     al,BYTE PTR [esi+0x3c]
  41a917:	xchg   edx,eax
  41a918:	sub    eax,0x4d2a8391
  41a91d:	cli    
  41a91e:	push   esi
  41a91f:	into   
  41a920:	stos   DWORD PTR es:[edi],eax
  41a921:	or     bl,0xc1
  41a924:	jno    0x41a980
  41a926:	sbb    DWORD PTR [esi+0x12],0x70
  41a92a:	or     DWORD PTR [ecx],edx
  41a92c:	pop    esp
  41a92d:	adc    al,0x53
  41a92f:	mov    DWORD PTR [ebp+0x57],edx
  41a932:	mov    ecx,0x42d3a614
  41a937:	imul   eax,DWORD PTR [ecx+0x1af729f6],0xd083628f
  41a941:	hlt    
  41a942:	mov    bh,0x24
  41a944:	cmc    
  41a945:	mov    ds:0x868ca226,al
  41a94a:	pop    ds
  41a94b:	ret    0x8e5d
  41a94e:	jns    0x41a963
  41a950:	dec    edi
  41a951:	gs mov cl,0x8f
  41a954:	shl    DWORD PTR [esp+esi*4],0x1d
  41a958:	sbb    dl,dl
  41a95a:	jb     0x41a981
  41a95c:	inc    esi
  41a95d:	push   ebx
  41a95e:	iret   
  41a95f:	add    BYTE PTR [esi-0x6],bh
  41a962:	sbb    al,0x13
  41a964:	mov    edx,0xb2526f1e
  41a969:	xchg   esp,eax
  41a96a:	retf   0x30b3
  41a96d:	into   
  41a96e:	stc    
  41a96f:	mov    edx,0x2b35bc76
  41a974:	cmp    al,0x64
  41a976:	push   cs
  41a977:	jmp    0xc7ca6d2a
  41a97c:	nop
  41a97d:	psubsw mm3,QWORD PTR [ebx]
  41a980:	mov    cl,0xd5
  41a982:	push   0x24
  41a984:	inc    ecx
  41a985:	pop    ebx
  41a986:	and    al,BYTE PTR [eax]
  41a988:	bound  ebx,QWORD PTR [ecx+0x4e]
  41a98b:	mov    dl,0x8c
  41a98d:	mov    dh,0x68
  41a98f:	mov    bl,0xe1
  41a991:	mul    bh
  41a993:	fsub   QWORD PTR ds:0xaff073a4
  41a999:	icebp  
  41a99a:	adc    BYTE PTR [ecx],dl
  41a99c:	ins    DWORD PTR es:[edi],dx
  41a99d:	aaa    
  41a99e:	sub    BYTE PTR [esi-0x3c],ah
  41a9a1:	in     al,dx
  41a9a2:	test   ebp,0xceefe073
  41a9a8:	stos   DWORD PTR es:[edi],eax
  41a9a9:	loop   0x41a9a3
  41a9ab:	xchg   edi,eax
  41a9ac:	or     BYTE PTR [edx-0x58790294],dh
  41a9b2:	add    DWORD PTR [ebx+ecx*2+0x7a0ae8fe],ebx
  41a9b9:	mov    ecx,0xeea43ea9
  41a9be:	ins    BYTE PTR es:[edi],dx
  41a9bf:	into   
  41a9c0:	shl    BYTE PTR [ebx],0x2f
  41a9c3:	fwait
  41a9c4:	cld    
  41a9c5:	inc    esp
  41a9c6:	lods   eax,DWORD PTR ds:[esi]
  41a9c7:	add    eax,0xccc27438
  41a9cc:	cs daa 
  41a9ce:	mov    esp,0x62daa96
  41a9d3:	aas    
  41a9d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a9d5:	xor    BYTE PTR [ebp-0x2a],cl
  41a9d8:	sti    
  41a9d9:	into   
  41a9da:	dec    esi
  41a9db:	scas   eax,DWORD PTR es:[edi]
  41a9dc:	test   esp,0x6c7ad055
  41a9e2:	loopne 0x41aa3d
  41a9e4:	jl     0x41aa5c
  41a9e6:	push   0x5
  41a9e8:	or     eax,0xa2753ffe
  41a9ed:	mov    ch,0x89
  41a9ef:	dec    ecx
  41a9f0:	pop    ss
  41a9f1:	dec    eax
  41a9f2:	shr    BYTE PTR ds:0x3900252d,0x7c
  41a9f9:	or     BYTE PTR [edx+0xa605f09],0x86
  41aa00:	xchg   edx,eax
  41aa01:	ffreep st(0)
  41aa03:	dec    esp
  41aa04:	je     0x41a9db
  41aa06:	or     edi,ebx
  41aa08:	cmp    al,0xf9
  41aa0a:	mul    BYTE PTR [ecx-0x389fae6a]
  41aa10:	jne    0x41aa78
  41aa12:	rcl    DWORD PTR [ebx-0x2ab16a77],1
  41aa18:	inc    ebp
  41aa19:	gs scas al,BYTE PTR es:[edi]
  41aa1b:	std    
  41aa1c:	or     DWORD PTR [ecx],ecx
  41aa1e:	inc    esi
  41aa1f:	in     eax,dx
  41aa20:	add    DWORD PTR [ebx-0x58431d8],eax
  41aa26:	ins    DWORD PTR es:[edi],dx
  41aa27:	out    dx,eax
  41aa28:	cmp    eax,0x25fbafdb
  41aa2e:	add    al,0x1
  41aa30:	sub    edi,ecx
  41aa32:	lds    ecx,FWORD PTR [ebp-0x64]
  41aa35:	pusha  
  41aa36:	loope  0x41aab2
  41aa38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aa39:	test   ecx,ebx
  41aa3b:	(bad)  
  41aa3c:	mov    edi,0x9ee79802
  41aa41:	aaa    
  41aa42:	lds    esp,FWORD PTR [edi-0x67ffca46]
  41aa48:	or     esi,edx
  41aa4a:	cmp    dl,BYTE PTR [ecx]
  41aa4c:	imul   ecx,ecx,0xffffffb5
  41aa4f:	(bad)  
  41aa52:	mov    ecx,0x983d6302
  41aa57:	ret    0xe61c
  41aa5a:	nop
  41aa5b:	sub    BYTE PTR ds:0xf47316a5,dl
  41aa61:	pop    eax
  41aa62:	and    bl,al
  41aa64:	adc    DWORD PTR [eax-0x4c],ecx
  41aa67:	dec    ebp
  41aa68:	pop    edi
  41aa69:	pop    es
  41aa6a:	xor    DWORD PTR [ecx],ecx
  41aa6c:	xchg   ebp,eax
  41aa6d:	sub    al,al
  41aa6f:	loope  0x41aabf
  41aa71:	sar    bl,0xa1
  41aa74:	mov    bl,0xb4
  41aa76:	jecxz  0x41aaf3
  41aa78:	or     eax,0x3025381
  41aa7d:	cmp    DWORD PTR [edi-0x50],0x2dc768f2
  41aa84:	and    edx,DWORD PTR [edx+0x4e3e4d33]
  41aa8a:	ds mov bh,0xc6
  41aa8d:	pushf  
  41aa8e:	sti    
  41aa8f:	add    al,0x84
  41aa91:	iret   
  41aa92:	rol    DWORD PTR [ecx+ecx*8],0x5c
  41aa96:	out    0xba,eax
  41aa98:	loope  0x41aa3b
  41aa9a:	gs lea edx,ds:[edx]
  41aa9e:	and    al,0xf4
  41aaa0:	lahf   
  41aaa1:	pop    ebp
  41aaa2:	mov    es,WORD PTR [edi]
  41aaa4:	mov    edx,DWORD PTR [ebx-0x59]
  41aaa7:	repnz sbb BYTE PTR [ebx+0x34],bh
  41aaab:	xchg   esp,eax
  41aaac:	loopne 0x41ab19
  41aaae:	push   edi
  41aaaf:	inc    ecx
  41aab0:	(bad)  
  41aab1:	mov    BYTE PTR [ecx-0x14b30b12],bh
  41aab7:	out    dx,eax
  41aab8:	push   esi
  41aab9:	out    dx,al
  41aaba:	fisubr WORD PTR [ecx]
  41aabc:	imul   ecx,DWORD PTR [esi],0xffffffdc
  41aabf:	mov    ebx,0xcc92161
  41aac4:	fsub   st,st(1)
  41aac6:	or     BYTE PTR [esi+edi*4-0x26],bl
  41aaca:	shl    BYTE PTR [ecx],0x64
  41aacd:	loopne 0x41aa91
  41aacf:	and    BYTE PTR ds:[esi],dl
  41aad2:	in     al,dx
  41aad3:	mov    dh,ah
  41aad5:	cmp    eax,eax
  41aad7:	mov    edx,0xf3fe51d2
  41aadc:	sbb    edx,DWORD PTR [ebx]
  41aade:	rcl    ecx,1
  41aae0:	adc    eax,0x98297247
  41aae5:	loop   0x41ab0d
  41aae7:	int    0x14
  41aae9:	jne    0x41aaba
  41aaeb:	jbe    0x41aac3
  41aaed:	sbb    al,0x3d
  41aaef:	repnz mov ebp,0x81a738fd
  41aaf5:	out    0x78,eax
  41aaf7:	jne    0x41aab7
  41aaf9:	jecxz  0x41ab05
  41aafb:	add    DWORD PTR [edx+0x65801755],ebp
  41ab01:	mov    ebp,0x1f493e27
  41ab06:	push   0x67
  41ab08:	mov    dh,0xf5
  41ab0a:	cmc    
  41ab0b:	pop    es
  41ab0c:	jae    0x41ab3b
  41ab0e:	icebp  
  41ab0f:	sub    cl,dl
  41ab11:	(bad)  
  41ab12:	fild   WORD PTR [ecx+0x2b]
  41ab15:	hlt    
  41ab16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab17:	jmp    0x41ab8a
  41ab19:	(bad)  
  41ab1a:	cli    
  41ab1b:	adc    al,cl
  41ab1d:	out    0x6d,eax
  41ab1f:	and    al,0xfd
  41ab21:	mov    eax,0x349d9ec4
  41ab26:	mov    cl,BYTE PTR [eax-0x30ca875]
  41ab2c:	pop    ecx
  41ab2d:	pop    DWORD PTR [edi+0x12ed146]
  41ab33:	mov    cs,WORD PTR [ebx]
  41ab35:	xchg   ebx,eax
  41ab36:	ret    
  41ab37:	lock jns 0x41ab45
  41ab3a:	mov    esp,0x1d14879d
  41ab3f:	cmp    ecx,DWORD PTR [edi-0x5e142787]
  41ab45:	sbb    dl,cl
  41ab47:	daa    
  41ab48:	add    BYTE PTR [edi+0x51],bh
  41ab4b:	std    
  41ab4c:	push   esp
  41ab4d:	and    eax,DWORD PTR [edi+0x2f8a903d]
  41ab53:	push   esp
  41ab54:	sbb    BYTE PTR [edx+0x398c705c],0x47
  41ab5b:	jne    0x41ab35
  41ab5d:	jns    0x41ab78
  41ab5f:	popa   
  41ab60:	dec    eax
  41ab61:	in     eax,0x61
  41ab63:	cmp    al,0xaf
  41ab65:	(bad)  
  41ab67:	cmp    edx,esi
  41ab69:	adc    BYTE PTR [eax],0xb3
  41ab6c:	jo     0x41ab01
  41ab6e:	in     al,0xea
  41ab70:	cdq    
  41ab71:	stos   BYTE PTR es:[edi],al
  41ab72:	mov    al,0x8a
  41ab74:	inc    ecx
  41ab75:	leave  
  41ab76:	lods   eax,DWORD PTR ds:[esi]
  41ab77:	push   cs
  41ab78:	pop    es
  41ab79:	aaa    
  41ab7a:	sub    ebx,0xffffffd6
  41ab7d:	dec    eax
  41ab7e:	test   DWORD PTR [eax-0x1c],esi
  41ab81:	jmp    0x349f:0x5be964f4
  41ab88:	xor    al,0x54
  41ab8a:	inc    edi
  41ab8b:	test   eax,0xeae45a2b
  41ab90:	pusha  
  41ab91:	xchg   BYTE PTR [ebp+0x40],dl
  41ab94:	repnz sbb edi,DWORD PTR ds:[ebp-0x36]
  41ab99:	in     al,dx
  41ab9a:	rcl    BYTE PTR [eax],cl
  41ab9c:	inc    edi
  41ab9d:	stos   BYTE PTR es:[edi],al
  41ab9e:	sub    al,BYTE PTR [ecx+0x30d6ab92]
  41aba4:	or     esp,DWORD PTR [edi]
  41aba6:	out    dx,al
  41aba7:	mov    al,ds:0x50d75691
  41abac:	hlt    
  41abad:	popf   
  41abae:	sbb    ebx,ecx
  41abb0:	mov    eax,0x85db8602
  41abb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abb6:	mov    al,0xd
  41abb8:	jg     0x41ab8e
  41abba:	(bad)  
  41abbb:	out    dx,al
  41abbc:	repnz test al,0x7b
  41abbf:	dec    ebp
  41abc0:	push   esi
  41abc1:	repnz lock dec ebx
  41abc4:	or     BYTE PTR [edi-0x80],bh
  41abc7:	mov    edx,ds
  41abc9:	mov    ds:0xef89252b,al
  41abce:	inc    ebp
  41abcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abd0:	in     eax,dx
  41abd1:	mov    edi,0xfc06fb65
  41abd6:	pop    es
  41abd7:	in     al,dx
  41abd8:	mov    ebx,ebx
  41abda:	add    al,0xf2
  41abdc:	sti    
  41abdd:	aas    
  41abde:	or     eax,0x2aaf511a
  41abe3:	jne    0x41ac23
  41abe5:	fcom   DWORD PTR [esi]
  41abe7:	retf   
  41abe8:	retf   
  41abe9:	mov    ds:0xb4d65ac6,eax
  41abee:	push   DWORD PTR [edx]
  41abf0:	cmc    
  41abf1:	cmp    DWORD PTR [ebx+edi*8-0x32],0xc17245a1
  41abf9:	push   ebp
  41abfa:	sub    al,al
  41abfc:	mov    edx,0x16249181
  41ac01:	pusha  
  41ac02:	js     0x41ac3e
  41ac04:	push   cs
  41ac05:	nop
  41ac06:	dec    ecx
  41ac07:	test   eax,0xb0234940
  41ac0c:	mov    esi,0x6747986b
  41ac11:	xchg   edi,eax
  41ac12:	js     0x41ab9b
  41ac14:	sbb    DWORD PTR [eax-0x62],ebp
  41ac17:	or     al,0x54
  41ac19:	cmp    ebx,DWORD PTR [ebx+0x2bf5978a]
  41ac1f:	outs   dx,DWORD PTR ds:[esi]
  41ac20:	add    ebx,ecx
  41ac22:	cmp    al,BYTE PTR [esi+0x624f8526]
  41ac28:	jmp    0x9ec7e0c2
  41ac2d:	mov    bh,0xf0
  41ac2f:	xchg   ebx,eax
  41ac30:	nop
  41ac31:	lods   al,BYTE PTR ds:[esi]
  41ac32:	sbb    cl,BYTE PTR [edi+esi*8+0x27]
  41ac36:	jo     0x41ac46
  41ac38:	(bad)  
  41ac39:	call   DWORD PTR [ebx+ebp*2+0x9]
  41ac3d:	cld    
  41ac3e:	pop    ebx
  41ac3f:	scas   al,BYTE PTR es:[edi]
  41ac40:	add    DWORD PTR [ebp+0x65],0x1eab4ee0
  41ac47:	pop    ebp
  41ac48:	mov    ch,0x4a
  41ac4a:	mov    eax,ds:0x314874d
  41ac4f:	inc    esp
  41ac50:	loop   0x41ac3c
  41ac52:	jmp    0xddba:0x8b6b10e3
  41ac59:	inc    ebp
  41ac5a:	outs   dx,BYTE PTR ds:[esi]
  41ac5b:	add    eax,0x8dea31a1
  41ac60:	idiv   DWORD PTR ds:0xf54eabdb
  41ac66:	xlat   BYTE PTR ds:[ebx]
  41ac67:	sahf   
  41ac68:	hlt    
  41ac69:	repnz (bad) 
  41ac6b:	test   DWORD PTR [eax-0x3b],0xf4d64d79
  41ac72:	mov    esi,DWORD PTR [esi]
  41ac74:	nop
  41ac75:	(bad)  
  41ac76:	sar    DWORD PTR [ebp+ecx*8+0x25],cl
  41ac7a:	out    0x39,eax
  41ac7c:	add    eax,0x9758c29d
  41ac81:	xor    ecx,DWORD PTR [edx+edi*4]
  41ac84:	jne    0x41acd9
  41ac86:	loopne 0x41ac47
  41ac88:	cdq    
  41ac89:	daa    
  41ac8a:	xchg   edi,eax
  41ac8b:	push   es
  41ac8c:	xchg   ebp,eax
  41ac8d:	fist   DWORD PTR [edi+ebx*2]
  41ac90:	div    bl
  41ac92:	loop   0x41ac3c
  41ac94:	jo     0x41acf6
  41ac96:	in     al,dx
  41ac97:	ja     0x41ac8e
  41ac99:	push   ebx
  41ac9a:	sar    dh,cl
  41ac9c:	xor    al,0xa7
  41ac9e:	push   ss
  41ac9f:	or     al,0xc2
  41aca1:	push   ebp
  41aca2:	scas   al,BYTE PTR es:[edi]
  41aca3:	inc    eax
  41aca4:	rcr    ebx,1
  41aca6:	mov    ds:0x711bcb6c,al
  41acab:	xchg   ecx,ebp
  41acad:	in     eax,0xf
  41acaf:	xchg   ecx,eax
  41acb0:	popa   
  41acb1:	aad    0x93
  41acb3:	xchg   edi,eax
  41acb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41acb5:	mov    al,ds:0xd6eb3e80
  41acba:	outs   dx,DWORD PTR ds:[esi]
  41acbb:	aam    0xcd
  41acbd:	aas    
  41acbe:	adc    al,0xf4
  41acc0:	test   eax,0x2e575055
  41acc5:	xchg   esi,ebp
  41acc7:	push   eax
  41acc8:	jne    0x41ad43
  41acca:	test   al,0xad
  41accc:	sbb    ch,BYTE PTR [edi+eax*2+0x7860a6b9]
  41acd3:	and    eax,0xd5f8160e
  41acd8:	das    
  41acd9:	(bad)  
  41acda:	add    eax,0x3caaec5f
  41acdf:	lahf   
  41ace0:	lods   al,BYTE PTR ds:[esi]
  41ace1:	sub    eax,0xecdf3bb9
  41ace6:	dec    edx
  41ace7:	pop    ds
  41ace8:	mov    ah,0x97
  41acea:	shr    BYTE PTR [edi],0x33
  41aced:	mov    WORD PTR [edx],?
  41acef:	test   DWORD PTR [eax+eiz*4+0x4d],edi
  41acf3:	xchg   esi,eax
  41acf4:	aad    0x48
  41acf6:	dec    eax
  41acf7:	loop   0x41ac81
  41acf9:	inc    edi
  41acfa:	xor    eax,0x1cc34864
  41acff:	stos   DWORD PTR es:[edi],eax
  41ad00:	add    esp,DWORD PTR [eax+0xd]
  41ad03:	xchg   esi,eax
  41ad04:	and    dl,0x28
  41ad07:	pop    eax
  41ad08:	dec    ebx
  41ad09:	adc    esi,edi
  41ad0b:	push   esi
  41ad0c:	add    edi,DWORD PTR [edi]
  41ad0e:	lods   al,BYTE PTR ds:[esi]
  41ad0f:	outs   dx,BYTE PTR ds:[esi]
  41ad10:	(bad)  
  41ad11:	popa   
  41ad12:	sub    BYTE PTR [edi],dl
  41ad14:	dec    ebp
  41ad15:	setnp  BYTE PTR [ebx+0x62c1f050]
  41ad1c:	stos   BYTE PTR es:[edi],al
  41ad1d:	dec    eax
  41ad1e:	inc    edx
  41ad1f:	dec    ebp
  41ad20:	lock or al,BYTE PTR [edi+0x57]
  41ad24:	call   FWORD PTR ds:0xeb9036a7
  41ad2a:	mov    esi,0x42ddbb40
  41ad2f:	fcomp  QWORD PTR [esi-0x3d]
  41ad32:	inc    edx
  41ad33:	pop    esp
  41ad34:	stos   BYTE PTR es:[edi],al
  41ad35:	or     eax,0x9abc0251
  41ad3a:	mov    bl,0x7b
  41ad3c:	test   eax,0x19215663
  41ad41:	fimul  DWORD PTR [ebp-0x6b]
  41ad44:	retf   0x42e
  41ad47:	jbe    0x41ad75
  41ad49:	aaa    
  41ad4a:	mov    edx,0xc9041d13
  41ad4f:	xchg   ecx,eax
  41ad50:	sbb    BYTE PTR [ebp+eax*1-0x51f6c9b3],ah
  41ad57:	jecxz  0x41ad6a
  41ad59:	scas   eax,DWORD PTR es:[edi]
  41ad5a:	mov    al,ds:0x1121b567
  41ad5f:	pop    esi
  41ad60:	inc    esi
  41ad61:	mov    al,BYTE PTR [ecx+0x6a]
  41ad64:	xchg   ebp,eax
  41ad65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad66:	rcr    BYTE PTR [eax-0x36],cl
  41ad69:	xchg   ebx,eax
  41ad6a:	cmp    al,0x27
  41ad6c:	xor    DWORD PTR [esi-0x62cd9b97],0x90f9e1d8
  41ad76:	pop    esi
  41ad77:	outs   dx,BYTE PTR ds:[esi]
  41ad78:	icebp  
  41ad79:	retf   
  41ad7a:	dec    esi
  41ad7b:	lea    esi,ds:0x4f8b8ee2
  41ad81:	in     eax,0x47
  41ad83:	mov    ds:0x226f452e,eax
  41ad88:	jns    0x41adce
  41ad8a:	pop    edi
  41ad8b:	data16 xor BYTE PTR [edx+edi*1-0x80],cl
  41ad90:	enter  0x654a,0xcc
  41ad94:	jg     0x41adb4
  41ad96:	jp     0x41ad39
  41ad98:	cmp    DWORD PTR [ebx+0x709e4866],ecx
  41ad9e:	(bad)
  41ada1:	sbb    ecx,DWORD PTR ds:0xa50b883c
  41ada7:	push   cs
  41ada8:	add    DWORD PTR [esp+ebp*4+0x6d84a707],ebp
  41adaf:	inc    ebp
  41adb0:	mov    ebx,0x8fa8f0b4
  41adb5:	call   0x6b79:0x1d5cedbf
  41adbc:	and    DWORD PTR ds:0xa4411b0a,0xffffff90
  41adc3:	mov    ch,0xdb
  41adc5:	retf   
  41adc6:	mov    ecx,0xdb865c8
  41adcb:	scas   eax,DWORD PTR es:[edi]
  41adcc:	add    bl,dh
  41adce:	jne    0x41adff
  41add0:	scas   al,BYTE PTR es:[edi]
  41add1:	out    0x8f,eax
  41add3:	pop    es
  41add4:	cmp    al,0x5c
  41add6:	stos   DWORD PTR es:[edi],eax
  41add7:	xchg   edi,eax
  41add8:	xor    ecx,DWORD PTR gs:[esp+ecx*1+0x36efbcf9]
  41ade0:	push   ss
  41ade1:	repz jg 0x41add3
  41ade4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ade5:	pop    es
  41ade6:	mov    dh,0x3
  41ade8:	mov    ds:0x27b4ca4f,al
  41aded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adee:	fld    DWORD PTR [ebp-0x27202d5a]
  41adf4:	enter  0x1752,0x3d
  41adf8:	add    al,0xe7
  41adfa:	adc    bh,ah
  41adfc:	mov    cl,0x87
  41adfe:	mov    DWORD PTR [edi-0x1bcd9c8d],edi
  41ae04:	sahf   
  41ae05:	data16 xor al,0x58
  41ae08:	cmp    al,0xf7
  41ae0a:	(bad)  
  41ae0c:	fnstcw WORD PTR [esi-0x5e]
  41ae0f:	sub    al,cl
  41ae11:	cmp    bl,ah
  41ae13:	call   0xc49f:0x44bfd36b
  41ae1a:	mov    eax,0x14295a87
  41ae1f:	sti    
  41ae20:	shr    bl,0x94
  41ae23:	push   ecx
  41ae24:	mov    edi,0x3f984fbe
  41ae29:	pop    eax
  41ae2a:	add    eax,0xf0ff9037
  41ae2f:	pop    es
  41ae30:	je     0x41adf5
  41ae32:	push   cs
  41ae33:	mov    al,0xef
  41ae35:	int    0x34
  41ae37:	std    
  41ae38:	mov    ch,0x78
  41ae3a:	addr16 lahf 
  41ae3c:	popa   
  41ae3d:	push   edi
  41ae3e:	jecxz  0x41ae2b
  41ae40:	inc    esi
  41ae41:	dec    esp
  41ae42:	add    BYTE PTR [eax+0x68],ah
  41ae45:	retf   
  41ae46:	mov    ds:0x9b85ab9,eax
  41ae4b:	dec    esp
  41ae4c:	dec    esi
  41ae4d:	jmp    0x6a94:0x5ca5cd61
  41ae54:	into   
  41ae55:	adc    DWORD PTR [edx],0x6b2f0bce
  41ae5b:	push   cs
  41ae5c:	int    0xa3
  41ae5e:	jg     0x41aea4
  41ae60:	es or  eax,0xb893adb2
  41ae66:	cmc    
  41ae67:	push   ss
  41ae68:	push   ebx
  41ae69:	aad    0xa
  41ae6b:	mov    esp,0xeb82e330
  41ae70:	iret   
  41ae71:	push   edi
  41ae72:	nop
  41ae73:	das    
  41ae74:	fdivr  DWORD PTR [esi+0x3]
  41ae77:	ins    BYTE PTR es:[di],dx
  41ae79:	ss loopne 0x41aeca
  41ae7c:	sbb    BYTE PTR [edi+0x20],bl
  41ae7f:	call   0x45cf:0xe012adfd
  41ae86:	add    dh,al
  41ae88:	loope  0x41aebf
  41ae8a:	shl    BYTE PTR [edi-0x56300e8e],cl
  41ae90:	adc    al,0x2b
  41ae92:	xchg   DWORD PTR ds:0xcf045b49,esp
  41ae98:	mov    edx,0xb2dfb8c8
  41ae9d:	jg     0x41ae90
  41ae9f:	dec    ebx
  41aea0:	xchg   esi,eax
  41aea1:	xor    DWORD PTR [edi],edi
  41aea3:	push   esp
  41aea4:	mov    dl,0x79
  41aea6:	lock ret 
  41aea8:	sbb    esi,eax
  41aeaa:	hlt    
  41aeab:	add    ah,dl
  41aead:	ret    
  41aeae:	xor    DWORD PTR ds:0x5abe824a,0x59
  41aeb5:	sub    al,0x15
  41aeb7:	mov    dl,0xc7
  41aeb9:	out    0x75,eax
  41aebb:	jns    0x41ae89
  41aebd:	rol    al,0x5d
  41aec0:	ins    BYTE PTR es:[edi],dx
  41aec1:	lods   al,BYTE PTR ds:[esi]
  41aec2:	ret    
  41aec3:	lods   eax,DWORD PTR ds:[esi]
  41aec4:	adc    DWORD PTR [ecx+0x35266a0a],ebx
  41aeca:	ret    0xce67
  41aecd:	fimul  WORD PTR [eax+ebx*8+0x5f]
  41aed1:	xchg   ecx,eax
  41aed2:	mov    bh,0x37
  41aed4:	mov    ebp,0x33876024
  41aed9:	sub    ebx,DWORD PTR [edx-0x21c28c9f]
  41aedf:	or     ebp,DWORD PTR [ecx-0x2a33af1b]
  41aee5:	xchg   ah,dl
  41aee7:	or     BYTE PTR [eax],ah
  41aee9:	lock loope 0x41aead
  41aeec:	aaa    
  41aeed:	cdq    
  41aeee:	outs   dx,DWORD PTR ds:[esi]
  41aeef:	push   cs
  41aef0:	outs   dx,BYTE PTR ds:[esi]
  41aef1:	out    0xc2,eax
  41aef3:	aas    
  41aef4:	call   0x93fc2a48
  41aef9:	dec    ecx
  41aefa:	aaa    
  41aefb:	mov    dl,0xd7
  41aefd:	ret    
  41aefe:	xchg   edi,eax
  41aeff:	push   0x570a2d05
  41af04:	ret    0xf6d0
  41af07:	and    eax,0xe4b42ec6
  41af0c:	inc    edx
  41af0d:	adc    al,0x1c
  41af0f:	test   eax,0xc1575b16
  41af14:	sub    al,ah
  41af16:	push   edi
  41af17:	xchg   BYTE PTR [edi+0x56],ah
  41af1a:	inc    edi
  41af1b:	test   DWORD PTR [edx],0xb89a7fcf
  41af21:	xchg   ebp,eax
  41af22:	dec    ebp
  41af23:	jg     0x41aeef
  41af25:	ss mov dl,0x28
  41af28:	xchg   DWORD PTR fs:[ebp+0x62],esi
  41af2c:	test   BYTE PTR [eax+0x6e046403],0x7
  41af33:	test   eax,0x698aff48
  41af38:	add    DWORD PTR [edi],0x735ca412
  41af3e:	dec    esi
  41af3f:	jne    0x41aee3
  41af41:	imul   eax,DWORD PTR [ebp-0x1fd7acf4],0x31b19686
  41af4b:	cmp    eax,edx
  41af4d:	sbb    al,0x59
  41af4f:	dec    ebp
  41af50:	cs jb  0x41aedf
  41af53:	cmc    
  41af54:	stos   DWORD PTR es:[edi],eax
  41af55:	sub    eax,0x82c10b42
  41af5a:	jb     0x41afd1
  41af5c:	jb     0x41af11
  41af5e:	dec    esi
  41af5f:	pop    ebp
  41af60:	dec    edi
  41af61:	mov    dl,0x1b
  41af63:	repnz xor BYTE PTR [eax+0x32f03bd3],bl
  41af6a:	int3   
  41af6b:	mov    esi,DWORD PTR [edx-0x22e86672]
  41af71:	int3   
  41af72:	jno    0x41af8f
  41af74:	adc    al,0xc8
  41af76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41af77:	jl     0x41af20
  41af79:	jns    0x41af89
  41af7b:	aam    0xd7
  41af7d:	fnstsw WORD PTR ds:0x3391c04e
  41af83:	jl     0x41aff5
  41af85:	mov    BYTE PTR [edx+eax*8-0x450fedb3],dl
  41af8c:	cmp    eax,0xbd1530f7
  41af91:	mov    WORD PTR [esi-0x1a],cs
  41af94:	rcr    DWORD PTR gs:[esi+0x67ee424b],1
  41af9b:	mov    ebp,0x4ca5e060
  41afa0:	addr16 ret 0xa545
  41afa4:	dec    ecx
  41afa5:	js     0x41afea
  41afa7:	xchg   ebx,eax
  41afa8:	jns    0x41b003
  41afaa:	add    BYTE PTR ds:0x8f45f4c4,0x9b
  41afb1:	lahf   
  41afb2:	fistp  WORD PTR [edi+0x52]
  41afb5:	ins    DWORD PTR es:[edi],dx
  41afb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afb7:	jbe    0x41afe7
  41afb9:	test   al,0xa3
  41afbb:	pop    esp
  41afbc:	push   0xffffffd5
  41afbe:	popa   
  41afbf:	std    
  41afc0:	add    cl,BYTE PTR ds:0x3fbc284b
  41afc6:	adc    edi,DWORD PTR [edx-0x24]
  41afc9:	icebp  
  41afca:	and    BYTE PTR [ecx],bl
  41afcc:	(bad)  
  41afcd:	out    dx,eax
  41afce:	jmp    0x9c2d86c6
  41afd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afd4:	fdiv   DWORD PTR [ebx-0x168f163d]
  41afda:	je     0x41afc2
  41afdc:	imul   edi,DWORD PTR [eax+0x53],0x1e
  41afe0:	(bad)  
  41afe1:	imul   ecx,eax,0xec1ffa1e
  41afe7:	retf   0x750e
  41afea:	sub    esp,DWORD PTR [ebp+0x520697ba]
  41aff0:	adc    BYTE PTR [esi+0x3a],cl
  41aff3:	push   edi
  41aff4:	xlat   BYTE PTR ds:[ebx]
  41aff5:	pop    es
  41aff6:	cmp    ax,0x8d33
  41affa:	or     al,0xb5
  41affc:	leave  
  41affd:	out    dx,eax
  41affe:	xchg   ecx,eax
  41afff:	shr    ebx,0x17
  41b002:	lock jmp ebp
  41b005:	and    eax,edx
  41b007:	cwde   
  41b008:	loop   0x41afb5
  41b00a:	jmp    0x1d270eef
  41b00f:	pop    eax
  41b010:	daa    
  41b011:	pop    ecx
  41b012:	test   BYTE PTR [edi-0x38],dl
  41b015:	mov    bh,0xaf
  41b017:	scas   eax,DWORD PTR es:[edi]
  41b018:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b019:	sbb    DWORD PTR [esi+0x780df9d9],edx
  41b01f:	out    dx,eax
  41b020:	mov    eax,ds:0x8c8935a2
  41b025:	pop    edx
  41b026:	add    ebx,esi
  41b028:	in     eax,dx
  41b029:	mov    edx,0xedb96fed
  41b02e:	sbb    al,0x99
  41b030:	in     al,dx
  41b031:	jb     0x41afe0
  41b033:	shl    al,cl
  41b035:	xchg   esi,eax
  41b036:	push   es
  41b037:	xor    BYTE PTR [ecx-0x2405573b],dl
  41b03d:	(bad)  
  41b03e:	ins    DWORD PTR es:[edi],dx
  41b03f:	fldcw  WORD PTR [ecx]
  41b041:	in     eax,0x83
  41b043:	pop    edi
  41b044:	dec    esi
  41b045:	jae    0x41b06a
  41b047:	jl     0x41b0c3
  41b049:	mov    bl,0xec
  41b04b:	cmp    DWORD PTR ds:0x9bf06f59,esp
  41b051:	cwde   
  41b052:	mov    bl,0xa9
  41b054:	cld    
  41b055:	std    
  41b056:	jno    0x41b021
  41b058:	cmp    eax,DWORD PTR [esi]
  41b05a:	sahf   
  41b05b:	arpl   WORD PTR [eax-0xa2a00f2],ax
  41b061:	and    DWORD PTR ds:0xce644c0,esp
  41b067:	fdivr  st(3),st
  41b069:	in     al,dx
  41b06a:	nop
  41b06b:	sahf   
  41b06c:	fucom  st(0)
  41b06e:	test   al,0x62
  41b070:	imul   ecx,eax,0xffffffd5
  41b073:	or     DWORD PTR [edi+0x14],0x79
  41b077:	lock cmp dh,BYTE PTR [ecx-0x38]
  41b07b:	pushf  
  41b07c:	xor    DWORD PTR [ebx+0x75],edi
  41b07f:	adc    eax,0xa0e5ca56
  41b084:	push   0x22
  41b086:	(bad)  
  41b088:	adc    esi,DWORD PTR [ebx-0x15fb00bc]
  41b08e:	jl     0x41b070
  41b090:	dec    ebp
  41b091:	sub    DWORD PTR ds:0x26a7567a,ecx
  41b097:	js     0x41b074
  41b099:	loope  0x41b0e4
  41b09b:	jo     0x41b11a
  41b09d:	mov    bl,0x24
  41b09f:	pop    edi
  41b0a0:	mov    DWORD PTR [edi-0x57],0x5abf7fd7
  41b0a7:	fimul  DWORD PTR [esi+eax*1+0x17f725e8]
  41b0ae:	stos   BYTE PTR es:[edi],al
  41b0af:	inc    ebp
  41b0b0:	mov    eax,DWORD PTR [esi+edx*8]
  41b0b3:	das    
  41b0b4:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b6:	inc    ebp
  41b0b7:	adc    al,BYTE PTR [edi]
  41b0b9:	daa    
  41b0ba:	ins    BYTE PTR es:[edi],dx
  41b0bb:	cmp    ecx,DWORD PTR [esi-0x46]
  41b0be:	xchg   ebx,eax
  41b0bf:	es push ds
  41b0c1:	and    DWORD PTR [ebx+edi*8],edx
  41b0c4:	adc    DWORD PTR [ebx-0x7b],eax
  41b0c7:	div    ah
  41b0c9:	jo     0x41b105
  41b0cb:	loope  0x41b06e
  41b0cd:	das    
  41b0ce:	lea    ebp,[ebx]
  41b0d0:	cmp    dl,BYTE PTR [edx+0x3f]
  41b0d3:	fsub   DWORD PTR [eax]
  41b0d5:	fabs   
  41b0d7:	jns    0x41b087
  41b0d9:	adc    eax,0xd0303ba2
  41b0de:	mov    cs,edi
  41b0e0:	jmp    0x41b15f
  41b0e2:	mov    ah,0x4d
  41b0e4:	xchg   esp,eax
  41b0e5:	mov    eax,ds:0x305e8458
  41b0ea:	or     BYTE PTR [edi+0x270f25a1],bh
  41b0f0:	adc    al,0x7d
  41b0f2:	adc    BYTE PTR [edx],ch
  41b0f4:	mov    dl,0x9e
  41b0f6:	scas   eax,DWORD PTR es:[edi]
  41b0f7:	jnp    0x41b138
  41b0f9:	cmp    al,0x1a
  41b0fb:	mov    ebx,0x93a8a24c
  41b100:	lods   eax,DWORD PTR ds:[esi]
  41b101:	xchg   ebp,eax
  41b102:	(bad)  
  41b103:	dec    ebp
  41b104:	fsubr  QWORD PTR [ecx+0x22c366f]
  41b10a:	adc    eax,0x9b4c0478
  41b10f:	jp     0x41b108
  41b111:	clc    
  41b112:	repnz inc edi
  41b114:	fsub   QWORD PTR [eax+0x44d7e05d]
  41b11a:	lods   eax,DWORD PTR ds:[esi]
  41b11b:	sbb    BYTE PTR [esp+edi*4-0x715785d4],ah
  41b122:	and    DWORD PTR [eax+0x6b01c095],ebx
  41b128:	push   ebx
  41b129:	push   ebx
  41b12a:	(bad)  
  41b12b:	jbe    0x41b0fc
  41b12d:	pop    ebp
  41b12e:	mov    ebx,0x21e4dd3d
  41b133:	dec    edx
  41b134:	mov    cl,0x3f
  41b136:	loope  0x41b1a7
  41b138:	in     al,dx
  41b139:	ret    0x8bb
  41b13c:	lods   al,BYTE PTR ds:[esi]
  41b13d:	inc    edi
  41b13e:	inc    edi
  41b13f:	iret   
  41b140:	pop    ebx
  41b141:	call   esi
  41b143:	push   esp
  41b144:	mov    cs,WORD PTR [eax+0x37]
  41b147:	out    dx,eax
  41b148:	aaa    
  41b149:	pop    esp
  41b14a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b14b:	fiadd  WORD PTR [ebp*1+0x195cd9c9]
  41b152:	xor    DWORD PTR cs:[ebp-0x6e],edi
  41b156:	ret    0xc801
  41b159:	mov    esp,0xa737b6d8
  41b15e:	push   ebx
  41b15f:	not    esp
  41b161:	or     DWORD PTR [esp+esi*4+0x42],eax
  41b165:	inc    eax
  41b166:	hlt    
  41b167:	mov    WORD PTR [eax+0x27bf9e88],gs
  41b16d:	add    DWORD PTR [edi+0x13],edi
  41b170:	push   ss
  41b171:	and    al,0xc1
  41b173:	xor    BYTE PTR [esi],0x23
  41b176:	lods   al,BYTE PTR ds:[esi]
  41b177:	lea    ebx,[edi+ecx*4]
  41b17a:	sbb    esi,DWORD PTR [esi+edi*8]
  41b17d:	mov    eax,ds:0x347598a6
  41b182:	mov    edx,0x9a55a8c
  41b187:	retf   0xd5f
  41b18a:	pop    esp
  41b18c:	test   DWORD PTR [ebx+0x796fb471],ebx
  41b192:	into   
  41b193:	xor    cl,BYTE PTR [esi+0x59]
  41b196:	mov    esp,0xe2d196d3
  41b19b:	xchg   edx,eax
  41b19c:	mov    ecx,DWORD PTR [ecx-0x2c]
  41b19f:	push   es
  41b1a0:	ja     0x41b219
  41b1a2:	xor    eax,0xb3f7022f
  41b1a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b1a8:	lahf   
  41b1a9:	add    bh,BYTE PTR [eax-0x37]
  41b1ac:	mov    ch,0x19
  41b1ae:	cmc    
  41b1af:	jmp    DWORD PTR ds:0x90470687
  41b1b5:	xlat   BYTE PTR ds:[ebx]
  41b1b6:	fsub   QWORD PTR [ebx-0x43]
  41b1b9:	adc    edi,0x2d1bb414
  41b1bf:	pop    ecx
  41b1c0:	pop    ds
  41b1c1:	push   esi
  41b1c2:	gs out 0xe6,eax
  41b1c5:	pop    edi
  41b1c6:	out    dx,al
  41b1c7:	and    DWORD PTR [ecx+0x47],esi
  41b1ca:	test   esi,esp
  41b1cc:	(bad)  
  41b1cd:	mov    ch,0xe3
  41b1cf:	sbb    al,0x72
  41b1d1:	sub    ch,BYTE PTR [eax]
  41b1d3:	xor    eax,0x546386a2
  41b1d8:	mov    ebx,0x1b4a2908
  41b1dd:	stos   DWORD PTR es:[edi],eax
  41b1de:	push   0xb
  41b1e0:	mov    dh,0xfa
  41b1e2:	ret    0x2764
  41b1e5:	loopne 0x41b262
  41b1e7:	push   edi
  41b1e8:	jp     0x41b198
  41b1ea:	adc    BYTE PTR [eax+edx*4],al
  41b1ed:	and    eax,0x52fa96c7
  41b1f2:	pop    ds
  41b1f3:	xchg   esp,eax
  41b1f4:	cmp    eax,0xac8a09b9
  41b1f9:	fild   QWORD PTR [ecx+0x4b]
  41b1fc:	and    DWORD PTR [eax-0x6b3410ce],esi
  41b202:	pop    esp
  41b203:	mov    al,ds:0xfe27dea9
  41b208:	jl     0x41b1f0
  41b20a:	mov    eax,0xa9bb6dc
  41b20f:	mov    esi,0x6b041222
  41b214:	push   es
  41b215:	scas   al,BYTE PTR es:[edi]
  41b216:	nop
  41b217:	jecxz  0x41b1a1
  41b219:	arpl   WORD PTR [ecx+0x30],ax
  41b21c:	pushf  
  41b21d:	aaa    
  41b21e:	jle    0x41b268
  41b220:	sbb    al,0x5e
  41b222:	scas   al,BYTE PTR es:[edi]
  41b223:	pushf  
  41b224:	jno    0x41b247
  41b226:	pop    eax
  41b227:	into   
  41b228:	or     dl,dh
  41b22a:	push   0xfffffff1
  41b22c:	or     al,0x29
  41b22e:	cmc    
  41b22f:	xor    eax,0xb9a85299
  41b234:	mov    esp,0xa815ab5e
  41b239:	pop    ds
  41b23a:	fldcw  WORD PTR [edi-0x75]
  41b23d:	add    eax,0x142a84b2
  41b242:	add    DWORD PTR [ecx],0x70f46e46
  41b248:	cdq    
  41b249:	sti    
  41b24a:	into   
  41b24b:	stos   DWORD PTR es:[edi],eax
  41b24c:	aaa    
  41b24d:	pop    ds
  41b24e:	sbb    bl,BYTE PTR [eax]
  41b250:	in     al,0xe9
  41b252:	or     dh,0xf3
  41b255:	aaa    
  41b256:	pop    ecx
  41b257:	sbb    eax,0x99730d49
  41b25c:	jge    0x41b2b9
  41b25e:	jbe    0x41b2ba
  41b260:	ficom  WORD PTR [ecx+0x2b]
  41b263:	xchg   ecx,eax
  41b264:	mov    edx,0xb14d1c12
  41b269:	rcl    ecx,1
  41b26b:	mov    BYTE PTR [edx-0x6b],ch
  41b26e:	jge    0x41b204
  41b270:	jmp    0x41b2e7
  41b272:	cs jle 0x41b218
  41b275:	or     BYTE PTR [ebx-0x473f798c],dh
  41b27b:	or     esp,DWORD PTR [ebp-0x59]
  41b27e:	retf   0x5dd9
  41b281:	mov    ecx,esp
  41b283:	sbb    ebp,DWORD PTR [esi-0x5f]
  41b286:	mov    ah,0x71
  41b288:	out    0xe0,eax
  41b28a:	xchg   ebp,eax
  41b28b:	fldenv [ecx]
  41b28d:	cmc    
  41b28e:	jns    0x41b2a3
  41b290:	mov    al,bl
  41b292:	mov    cl,0x48
  41b294:	rol    ebx,cl
  41b296:	push   es
  41b297:	cmp    eax,0x8bcbafb0
  41b29c:	outs   dx,BYTE PTR ds:[esi]
  41b29d:	(bad)  
  41b29e:	push   eax
  41b29f:	inc    ebp
  41b2a0:	test   BYTE PTR [eax],dl
  41b2a2:	nop
  41b2a3:	push   ds
  41b2a4:	lahf   
  41b2a5:	mov    ch,0x5e
  41b2a7:	rcr    BYTE PTR ss:[ebx-0x58],cl
  41b2ab:	push   cs
  41b2ac:	repnz xchg edx,eax
  41b2ae:	xor    al,0x70
  41b2b0:	xchg   DWORD PTR [esi-0x6ac34c88],ecx
  41b2b6:	clc    
  41b2b7:	xor    al,0xf3
  41b2b9:	mov    edx,0x5f80f8d5
  41b2be:	sub    al,0x3e
  41b2c0:	es lahf 
  41b2c2:	stos   BYTE PTR es:[edi],al
  41b2c3:	jno    0x41b2dc
  41b2c5:	inc    esi
  41b2c6:	xchg   dh,bl
  41b2c8:	adc    al,0x96
  41b2ca:	pop    eax
  41b2cb:	mov    al,ds:0x4ac48aa0
  41b2d0:	cli    
  41b2d1:	mov    bh,0x26
  41b2d3:	and    edx,DWORD PTR [ebx]
  41b2d5:	stos   BYTE PTR es:[edi],al
  41b2d6:	mov    eax,ds:0x89bad8bb
  41b2db:	jmp    0xb88e:0xf95b137
  41b2e2:	xchg   edi,eax
  41b2e3:	gs jns 0x41b2d4
  41b2e6:	jmp    0x41b2c6
  41b2e8:	jp     0x41b364
  41b2ea:	push   esi
  41b2eb:	in     al,0x2f
  41b2ed:	xchg   BYTE PTR ds:[ebx+0x3d],al
  41b2f1:	dec    edi
  41b2f2:	clc    
  41b2f3:	xchg   ebx,eax
  41b2f4:	or     ah,BYTE PTR ds:0xaddfcf8b
  41b2fa:	pop    edx
  41b2fb:	test   bh,bh
  41b2fd:	les    esp,FWORD PTR [edx+0x1d]
  41b300:	cdq    
  41b301:	fidiv  WORD PTR [ebp+0x54eb6c2f]
  41b307:	xchg   ebx,eax
  41b308:	ss push ecx
  41b30a:	scas   eax,DWORD PTR es:[edi]
  41b30b:	fsub   DWORD PTR [ecx+eax*1]
  41b30e:	sbb    ebx,DWORD PTR [edx]
  41b310:	imul   esi,DWORD PTR [ecx-0x73],0x5333908b
  41b317:	test   DWORD PTR [ebx],edx
  41b319:	dec    edx
  41b31a:	sti    
  41b31b:	(bad)  
  41b31c:	test   cl,0x5c
  41b31f:	imul   DWORD PTR [edi-0x477824f7]
  41b325:	pusha  
  41b326:	jb     0x41b35e
  41b328:	sub    al,0x7d
  41b32a:	jge    0x41b373
  41b32c:	inc    esp
  41b32d:	fidiv  WORD PTR [ebx+eiz*8-0x15e5e70c]
  41b334:	sti    
  41b335:	test   al,0x4a
  41b337:	cwde   
  41b338:	loop   0x41b2f7
  41b33a:	add    al,0x28
  41b33c:	mov    ds:0xbdac361,eax
  41b341:	push   ebp
  41b342:	fwait
  41b343:	mov    esi,0xde9d89f4
  41b348:	in     al,dx
  41b349:	add    al,0xb9
  41b34b:	test   DWORD PTR [edi+0x43],ebp
  41b34e:	cmp    esp,DWORD PTR ds:0xae0ec54a
  41b354:	inc    DWORD PTR [ecx]
  41b356:	sahf   
  41b357:	xchg   ebx,eax
  41b358:	jge    0x41b3d1
  41b35a:	mov    bl,0x2e
  41b35c:	mov    edx,DWORD PTR [edi+0x7b00b520]
  41b362:	mov    esp,DWORD PTR [ebx+0xc53cc16]
  41b368:	and    DWORD PTR [ebx+0x18],esi
  41b36b:	in     eax,dx
  41b36c:	or     BYTE PTR [ebx],0x30
  41b36f:	fild   QWORD PTR cs:[ecx+0x3c44ecbc]
  41b376:	xor    BYTE PTR [eiz*1+0x61d67411],ah
  41b37d:	add    al,0x66
  41b37f:	ficom  WORD PTR [eax]
  41b381:	cld    
  41b382:	add    BYTE PTR [edi+ecx*2-0x76db7c8f],0xc5
  41b38a:	aaa    
  41b38b:	xor    eax,0x6fc48c82
  41b390:	add    DWORD PTR [ebx+0x6811764b],esi
  41b396:	fisub  WORD PTR [ecx-0x63]
  41b399:	push   esp
  41b39a:	cmp    al,0x69
  41b39c:	out    0x18,al
  41b39e:	jecxz  0x41b32c
  41b3a0:	pop    ds
  41b3a1:	and    ch,cl
  41b3a3:	pop    eax
  41b3a4:	mov    DWORD PTR [esi-0x7a],0x64ff5de5
  41b3ab:	sbb    edi,DWORD PTR [ecx+0x42c682f5]
  41b3b1:	jp     0x41b3c9
  41b3b3:	ins    BYTE PTR es:[edi],dx
  41b3b4:	sbb    DWORD PTR [esi-0x44],eax
  41b3b7:	push   0xffffffc4
  41b3b9:	lods   eax,DWORD PTR ds:[esi]
  41b3ba:	aas    
  41b3bb:	test   DWORD PTR fs:[eax],ebx
  41b3be:	gs pop ebx
  41b3c0:	add    eax,0x3726b790
  41b3c5:	call   0x40110846
  41b3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3cb:	rcr    BYTE PTR [edi+0x642ec44d],0x64
  41b3d2:	das    
  41b3d3:	push   ss
  41b3d4:	cmp    eax,0x94c1b4e0
  41b3d9:	shl    DWORD PTR [edx+0x8],0xe
  41b3dd:	add    dh,BYTE PTR [eax-0x18]
  41b3e0:	dec    edx
  41b3e1:	or     bl,BYTE PTR [eax]
  41b3e3:	and    bl,cl
  41b3e5:	dec    edi
  41b3e6:	sbb    ebp,edx
  41b3e8:	xor    esp,DWORD PTR [ebx-0x24]
  41b3eb:	mov    BYTE PTR [ecx],0xc
  41b3ee:	test   al,0x14
  41b3f0:	xor    eax,0x99cfd567
  41b3f5:	sar    BYTE PTR ss:[edx+0x1d4840ad],1
  41b3fc:	pop    esi
  41b3fd:	xchg   DWORD PTR [edx+ebx*4+0x21],esp
  41b401:	pusha  
  41b402:	js     0x41b3e2
  41b404:	imul   DWORD PTR [eax+0x7d2e9887]
  41b40a:	mov    DWORD PTR [ebx-0x48],esi
  41b40d:	and    edi,edi
  41b40f:	sub    ecx,DWORD PTR [ebp+0x32]
  41b412:	lea    ecx,[ebx]
  41b414:	mov    ds:0x64ef1599,eax
  41b419:	test   al,0x41
  41b41b:	test   BYTE PTR [eax+0x60],0x1b
  41b41f:	lods   eax,DWORD PTR ds:[esi]
  41b420:	jmp    0x41b49a
  41b422:	dec    ecx
  41b423:	(bad)  
  41b425:	add    bl,BYTE PTR es:[ebp+0x7a086732]
  41b42c:	in     al,0x4
  41b42e:	retf   0x9011
  41b431:	mov    dl,0xd
  41b433:	sti    
  41b434:	mov    cl,0x52
  41b436:	js     0x41b47c
  41b438:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b439:	rcr    BYTE PTR [edi+ecx*2],cl
  41b43c:	dec    esi
  41b43d:	jne    0x41b40d
  41b43f:	and    DWORD PTR [esp+ebx*4+0x5f],ecx
  41b443:	mov    esi,0xd06b63d1
  41b448:	jle    0x41b4a1
  41b44a:	int    0x2e
  41b44c:	jg     0x41b455
  41b44e:	je     0x41b48e
  41b450:	jae    0x41b4b4
  41b452:	ret    0xc738
  41b455:	mov    edi,0x9ba2d065
  41b45a:	out    dx,eax
  41b45b:	pop    DWORD PTR [ebp+0x595ec27a]
  41b461:	jmp    0xf37ac2f0
  41b466:	jo     0x41b439
  41b468:	sbb    eax,0x11c621ae
  41b46d:	aam    0x5c
  41b46f:	sbb    al,0x9e
  41b471:	sbb    al,0x85
  41b473:	mov    dh,0x2b
  41b475:	pop    es
  41b476:	mov    BYTE PTR [edi-0x4f],ah
  41b479:	or     dl,cl
  41b47b:	js     0x41b4fc
  41b47d:	push   esi
  41b47e:	and    eax,DWORD PTR [edx-0x77]
  41b481:	inc    ebx
  41b482:	cmp    DWORD PTR [esi],edi
  41b484:	push   ebx
  41b485:	jle    0x41b46a
  41b487:	(bad)  
  41b488:	adc    bl,BYTE PTR [ecx]
  41b48a:	stc    
  41b48b:	hlt    
  41b48c:	mov    ch,0x41
  41b48e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b48f:	call   0xb863:0x712ef458
  41b496:	scas   eax,DWORD PTR es:[edi]
  41b497:	xchg   ebp,eax
  41b498:	cmp    al,0x92
  41b49a:	js     0x41b4d3
  41b49c:	cvtps2pi mm3,QWORD PTR [ecx-0x9]
  41b4a0:	out    0xb8,eax
  41b4a2:	push   ecx
  41b4a3:	mov    ds:0x68f25b95,al
  41b4a8:	xor    BYTE PTR [ecx-0xa],cl
  41b4ab:	mov    gs,ebx
  41b4ad:	fsub   QWORD PTR [ebx+0x66]
  41b4b0:	jno    0x41b4d8
  41b4b2:	push   edx
  41b4b3:	pop    ebx
  41b4b4:	add    DWORD PTR [esi-0x24029e0d],ebx
  41b4ba:	push   eax
  41b4bb:	mov    dh,ch
  41b4bd:	and    dh,BYTE PTR [ecx+0x32]
  41b4c0:	or     ebx,DWORD PTR [edi-0x40]
  41b4c3:	push   es
  41b4c4:	jmp    0x2e28886d
  41b4c9:	xchg   ebp,eax
  41b4ca:	in     al,0x6b
  41b4cc:	xchg   esp,eax
  41b4cd:	in     eax,dx
  41b4ce:	jl     0x41b4ac
  41b4d0:	lock adc ecx,esi
  41b4d3:	retf   
  41b4d4:	push   0x743a3791
  41b4d9:	sub    BYTE PTR [edx-0x2314033],ah
  41b4df:	cmp    esp,ebp
  41b4e1:	sub    eax,0x8e4fd0a3
  41b4e6:	cmp    edi,ebp
  41b4e8:	pop    eax
  41b4e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4ea:	fnstenv [edx-0x5b]
  41b4ed:	aas    
  41b4ee:	and    eax,0x487ec386
  41b4f3:	mov    ebx,0x431dd8bd
  41b4f8:	in     al,dx
  41b4f9:	sub    eax,0x86aea726
  41b4fe:	add    eax,0xab8d3ef7
  41b503:	dec    edx
  41b504:	add    edi,DWORD PTR [esi+ebx*1]
  41b507:	sbb    al,0xd5
  41b509:	shl    DWORD PTR [esi],cl
  41b50b:	mov    ds:0xbd6cabc1,eax
  41b510:	dec    esi
  41b511:	div    DWORD PTR [esi+edx*1+0x49]
  41b515:	or     DWORD PTR [esi+ecx*2],esp
  41b518:	jge    0x41b571
  41b51a:	mov    eax,ds:0x39586052
  41b51f:	dec    ebx
  41b520:	adc    BYTE PTR ds:0xf49670a5,cl
  41b526:	sub    DWORD PTR [eax],ecx
  41b528:	fmul   DWORD PTR [edx-0x69]
  41b52b:	test   BYTE PTR [edx-0x3fcf4adf],dh
  41b531:	add    eax,0x722dbd4b
  41b536:	mov    ah,0xf4
  41b538:	dec    ebp
  41b539:	xchg   ebp,eax
  41b53a:	hlt    
  41b53b:	ficom  DWORD PTR [ebx+0x50]
  41b53e:	fwait
  41b53f:	xchg   ah,bh
  41b541:	in     eax,0x1a
  41b543:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b544:	sub    al,0x86
  41b546:	icebp  
  41b547:	cmp    al,0x4f
  41b549:	stc    
  41b54a:	or     edx,0xffffffea
  41b54d:	mov    dh,0x36
  41b54f:	mov    ah,BYTE PTR [edi+0x22]
  41b552:	call   0x5430d48f
  41b557:	pop    ss
  41b558:	push   0xffffffcd
  41b55a:	push   ebx
  41b55b:	xor    al,0xc8
  41b55d:	and    al,0x69
  41b55f:	jo     0x41b570
  41b561:	aad    0x92
  41b563:	sub    edx,DWORD PTR [edi-0x29399a35]
  41b569:	cmp    al,0x90
  41b56b:	inc    eax
  41b56c:	pop    esp
  41b56d:	lds    eax,FWORD PTR [ebx+0x6843e66d]
  41b573:	repnz sbb al,0x7
  41b576:	pusha  
  41b577:	xor    bl,ch
  41b579:	aam    0x52
  41b57b:	mov    al,0xd7
  41b57d:	shl    ah,cl
  41b57f:	sbb    DWORD PTR [ebp+0x62d8c326],ebp
  41b585:	inc    ebp
  41b586:	sub    eax,ebx
  41b588:	(bad)  
  41b589:	mov    bl,0xe
  41b58b:	cdq    
  41b58c:	cmp    al,dl
  41b58e:	cwde   
  41b58f:	cmp    eax,0xff600d52
  41b594:	mov    edi,0x8ded365b
  41b599:	jle    0x41b57f
  41b59b:	(bad)  
  41b59c:	mov    esi,0xf5cae2b1
  41b5a1:	out    dx,eax
  41b5a2:	ins    DWORD PTR es:[edi],dx
  41b5a3:	add    BYTE PTR ds:0x37662857,ah
  41b5a9:	jnp    0x41b58a
  41b5ab:	sar    DWORD PTR [edx-0x40200a1c],0xe8
  41b5b2:	rol    DWORD PTR [edx-0x48],cl
  41b5b5:	mov    edx,0x17e1ea9c
  41b5ba:	jecxz  0x41b610
  41b5bc:	lea    ecx,[esi]
  41b5be:	rcr    BYTE PTR [eax+eax*1],0xae
  41b5c2:	sbb    BYTE PTR [ebx-0x486e31b9],ah
  41b5c8:	and    ch,0xde
  41b5cb:	stc    
  41b5cc:	jb     0x41b573
  41b5ce:	out    0x10,al
  41b5d0:	jmp    0x41b584
  41b5d2:	scas   al,BYTE PTR es:[edi]
  41b5d3:	mov    ah,0xee
  41b5d5:	push   ds
  41b5d6:	sti    
  41b5d7:	test   ecx,edx
  41b5d9:	pusha  
  41b5da:	jge    0x41b576
  41b5dc:	nop
  41b5dd:	mov    dl,0x2b
  41b5df:	popa   
  41b5e0:	jmp    0x34b5f563
  41b5e5:	inc    edx
  41b5e6:	mov    bh,0xa0
  41b5e8:	jne    0x41b5d0
  41b5ea:	sar    BYTE PTR [ebx-0x139210fd],1
  41b5f0:	add    esp,DWORD PTR [edi-0x2bf6f89b]
  41b5f6:	mov    dh,0xf6
  41b5f8:	cmp    al,0x9d
  41b5fa:	adc    al,BYTE PTR [esp+eax*8]
  41b5fd:	cld    
  41b5fe:	dec    ebx
  41b5ff:	in     al,dx
  41b600:	call   0xbc6f160e
  41b605:	into   
  41b606:	leave  
  41b607:	clc    
  41b608:	rol    edi,1
  41b60a:	jbe    0x41b5d0
  41b60c:	jmp    0x41b5e0
  41b60e:	fcmovnbe st,st(3)
  41b610:	and    ah,dh
  41b612:	and    dh,BYTE PTR [edx]
  41b614:	jns    0x41b63a
  41b616:	xchg   edx,eax
  41b617:	ins    BYTE PTR es:[edi],dx
  41b618:	aad    0x53
  41b61a:	adc    eax,0x874f04b8
  41b61f:	hlt    
  41b620:	push   ebp
  41b621:	fimul  DWORD PTR [edi]
  41b623:	or     ah,al
  41b625:	inc    ebx
  41b626:	outs   dx,BYTE PTR ds:[esi]
  41b627:	ja     0x41b5cc
  41b629:	mov    edx,0x1a6c7d4d
  41b62e:	test   eax,0x8a60cb56
  41b633:	pop    ds
  41b634:	int3   
  41b635:	hlt    
  41b636:	pop    ds
  41b637:	ss inc esi
  41b639:	sub    eax,0x8624d2f5
  41b63e:	(bad)  
  41b63f:	cwde   
  41b640:	icebp  
  41b641:	(bad)
  41b644:	test   BYTE PTR [esi-0x11b131e8],0xc
  41b64b:	cmp    dh,BYTE PTR [eax+eiz*2-0x517e40c8]
  41b652:	jecxz  0x41b66d
  41b654:	mov    dh,0xfb
  41b656:	mov    ds:0x1ff1d1d6,al
  41b65b:	dec    ecx
  41b65c:	jns    0x41b670
  41b65e:	out    0xd1,al
  41b660:	out    0x3c,al
  41b662:	dec    ebx
  41b663:	stos   BYTE PTR es:[edi],al
  41b664:	iret   
  41b665:	int3   
  41b666:	call   0x3b74:0x1c4c301b
  41b66d:	in     al,dx
  41b66e:	dec    edi
  41b66f:	mov    ah,0x52
  41b671:	pop    ds
  41b672:	mov    DWORD PTR [ebx+0x7ab84b8b],0x577935f6
  41b67c:	aas    
  41b67d:	mov    eax,0xfee16407
  41b682:	pop    ebp
  41b683:	mov    ah,0xb2
  41b685:	inc    ebp
  41b686:	sbb    al,0x41
  41b688:	or     al,0x74
  41b68a:	out    dx,al
  41b68b:	arpl   WORD PTR [esi],si
  41b68d:	not    DWORD PTR [esi-0x103253ca]
  41b693:	loop   0x41b701
  41b695:	jns    0x41b6cb
  41b697:	jbe    0x41b6b3
  41b699:	mov    bh,0x3e
  41b69b:	or     BYTE PTR [ecx-0x3],ah
  41b69e:	push   ds
  41b69f:	stos   BYTE PTR es:[edi],al
  41b6a0:	out    dx,eax
  41b6a1:	sbb    eax,0x8af74ae6
  41b6a6:	addr16 pop esp
  41b6a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a9:	jns    0x41b69e
  41b6ab:	mov    al,ds:0x60e6b022
  41b6b0:	into   
  41b6b1:	mov    ebp,0xa96ae4cb
  41b6b6:	jbe    0x41b6f8
  41b6b8:	jp     0x41b721
  41b6ba:	inc    ebx
  41b6bb:	xlat   BYTE PTR ds:[ebx]
  41b6bc:	mov    bl,0x1e
  41b6be:	fs push ebp
  41b6c0:	xor    al,al
  41b6c2:	jl     0x41b65d
  41b6c4:	push   0x68
  41b6c6:	inc    ebx
  41b6c7:	jno    0x41b71a
  41b6c9:	pop    esi
  41b6ca:	mov    ds:0x60ae2b1,al
  41b6cf:	retf   0x3b12
  41b6d2:	sbb    DWORD PTR ds:0x821955e9,ebx
  41b6d8:	mov    ebp,DWORD PTR [ebx-0x4774c06]
  41b6de:	xor    bl,al
  41b6e0:	out    dx,eax
  41b6e1:	xchg   ecx,eax
  41b6e2:	lds    ebx,FWORD PTR [ebp+ecx*2+0x1e]
  41b6e6:	mov    ?,WORD PTR [ecx+0x3f1b527a]
  41b6ec:	imul   ebx,DWORD PTR [eax+0x392466e3],0xdd34b9a9
  41b6f6:	test   al,0x11
  41b6f8:	and    al,0xac
  41b6fa:	mov    esi,DWORD PTR ds:[ecx-0x25]
  41b6fe:	arpl   si,ax
  41b700:	fld    DWORD PTR [eax]
  41b702:	mov    edx,0x33859f14
  41b707:	(bad)  [ecx+0x1db282c9]
  41b70d:	jne    0x41b743
  41b70f:	cmp    al,0xee
  41b711:	in     al,dx
  41b712:	add    al,0x86
  41b714:	cdq    
  41b715:	xor    al,BYTE PTR [edi-0x15]
  41b718:	pop    edi
  41b719:	cmc    
  41b71a:	mov    ecx,0xb800e18
  41b71f:	add    al,0x42
  41b721:	test   eax,0x574af4c5
  41b726:	lds    edi,FWORD PTR [edx+0x33]
  41b729:	cmp    ch,BYTE PTR [edi+eax*2+0xf]
  41b72d:	ja     0x41b715
  41b72f:	adc    BYTE PTR [ecx-0x3572136c],dh
  41b735:	sbb    eax,0x72b761e5
  41b73a:	arpl   WORD PTR [ecx+0x9],cx
  41b73d:	add    DWORD PTR [esi+0x60],esi
  41b740:	test   BYTE PTR [ebx],0x10
  41b743:	xchg   edi,eax
  41b744:	mov    ?,WORD PTR [edx+0x63ac402a]
  41b74a:	fs ins DWORD PTR es:[edi],dx
  41b74c:	(bad)  
  41b74d:	rcr    ebp,0x77
  41b750:	into   
  41b751:	inc    ebx
  41b752:	or     esi,DWORD PTR [edi+0x73]
  41b755:	jmp    0x41b77c
  41b757:	mov    ebp,0x3930193a
  41b75c:	xor    eax,0x8029d20d
  41b761:	fbstp  TBYTE PTR [ebx-0x4bc2dfaa]
  41b767:	mov    bh,0x13
  41b769:	xchg   ebp,eax
  41b76a:	xchg   ecx,eax
  41b76b:	mov    ah,0x72
  41b76d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b76e:	clc    
  41b76f:	out    dx,al
  41b770:	repnz lds ebx,FWORD PTR [eax-0x57]
  41b774:	dec    ebx
  41b775:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b776:	xlat   BYTE PTR ds:[ebx]
  41b777:	imul   ebx,DWORD PTR [ecx-0x59a63d29],0x75
  41b77e:	fdivr  DWORD PTR [edi]
  41b780:	mov    gs,esp
  41b782:	lds    esp,FWORD PTR [ecx]
  41b784:	loop   0x41b793
  41b786:	rcl    DWORD PTR [ebp-0x57],cl
  41b789:	or     ah,BYTE PTR [ecx]
  41b78b:	adc    al,0xb6
  41b78d:	pusha  
  41b78e:	mov    ah,0xe1
  41b790:	in     eax,0x6d
  41b792:	add    eax,0x862499bf
  41b797:	stc    
  41b798:	je     0x41b7bb
  41b79a:	and    ch,BYTE PTR [esi]
  41b79c:	scas   eax,DWORD PTR es:[edi]
  41b79d:	adc    DWORD PTR [esi+0x33],eax
  41b7a0:	cmp    DWORD PTR [ebx+0x25],0x78a9ec6d
  41b7a7:	fdivr  DWORD PTR [ebx+edx*4+0xa635eac]
  41b7ae:	fadd   DWORD PTR [esi-0x7ad57fb7]
  41b7b4:	(bad)  
  41b7b5:	stc    
  41b7b6:	fwait
  41b7b7:	push   ecx
  41b7b8:	xchg   esp,eax
  41b7b9:	retf   0x17d9
  41b7bc:	lahf   
  41b7bd:	jbe    0x41b81e
  41b7bf:	jbe    0x41b7ab
  41b7c1:	sbb    dh,cl
  41b7c3:	(bad)  
  41b7c4:	sbb    al,0x3a
  41b7c6:	(bad)  
  41b7c7:	and    al,0x79
  41b7c9:	es das 
  41b7cb:	or     BYTE PTR [edx-0x7],bl
  41b7ce:	mov    ebp,0xb0f2886
  41b7d3:	mov    dh,0x9e
  41b7d5:	mov    fs,WORD PTR [ebp+edx*1+0x2a]
  41b7d9:	mov    dl,0xf9
  41b7db:	adc    al,0x1c
  41b7dd:	icebp  
  41b7de:	adc    BYTE PTR [ecx-0x7a],bl
  41b7e1:	push   ebp
  41b7e2:	icebp  
  41b7e3:	fsubr  DWORD PTR [ecx+eax*2+0x56]
  41b7e7:	div    BYTE PTR [edi-0x10]
  41b7ea:	push   esp
  41b7eb:	dec    edx
  41b7ec:	push   edx
  41b7ed:	(bad)  
  41b7ee:	enter  0x4212,0xe2
  41b7f2:	cmp    eax,0x4517dee8
  41b7f7:	pusha  
  41b7f8:	mov    esi,0x409404b1
  41b7fd:	mov    ds:0xcb164e16,al
  41b802:	cmp    DWORD PTR cs:[eiz*1+0x3d97453a],0x10ada1b1
  41b80e:	(bad)  
  41b80f:	cmp    bh,BYTE PTR [ebp+0x337415b3]
  41b815:	xor    dh,BYTE PTR [eax]
  41b817:	pushf  
  41b818:	pop    esi
  41b819:	daa    
  41b81a:	das    
  41b81b:	mov    cl,BYTE PTR [ecx]
  41b81d:	mov    BYTE PTR [ecx-0x43],ah
  41b820:	mov    WORD PTR [ebp-0x2b],fs
  41b823:	sbb    DWORD PTR [ecx],esp
  41b825:	call   0xa6e:0xf8d42f6c
  41b82c:	or     ch,BYTE PTR [edi]
  41b82e:	cs aam 0xb2
  41b831:	jmp    ebx
  41b833:	popa   
  41b834:	and    dh,BYTE PTR [ebx-0x3e]
  41b837:	std    
  41b838:	adc    ebp,DWORD PTR [esi]
  41b83a:	sub    BYTE PTR [edx],ah
  41b83c:	pop    ebp
  41b83d:	jp     0x41b7d9
  41b83f:	mov    ebx,0xfdec7c2b
  41b844:	test   DWORD PTR [ebx-0x52132cff],edi
  41b84a:	adc    ebx,ebp
  41b84c:	imul   ecx,DWORD PTR [esi],0xb9bd4c39
  41b852:	add    BYTE PTR [edx+0x57da8242],ch
  41b858:	ja     0x41b8bf
  41b85a:	and    al,BYTE PTR [edx]
  41b85c:	lds    ebp,FWORD PTR [eax+eax*8]
  41b85f:	and    eax,0x2794f170
  41b864:	repz add eax,0x455c399b
  41b86a:	add    edi,esi
  41b86c:	mov    ebx,0x7657c4c2
  41b871:	push   0xffffffd5
  41b873:	lods   al,BYTE PTR ds:[esi]
  41b874:	xor    eax,0x31dbe2e6
  41b879:	sbb    BYTE PTR [edx],cl
  41b87b:	cdq    
  41b87c:	lods   al,BYTE PTR ds:[esi]
  41b87d:	ret    
  41b87e:	mov    al,ds:0x4dbb944d
  41b883:	and    eax,0x1939f67e
  41b888:	cmp    ecx,0xfffffff1
  41b88b:	sbb    edx,DWORD PTR [ebx]
  41b88d:	aad    0x5e
  41b88f:	sbb    BYTE PTR [eax],dl
  41b891:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b892:	push   ecx
  41b893:	(bad)  
  41b895:	scas   al,BYTE PTR es:[edi]
  41b896:	sub    esi,DWORD PTR [ebx]
  41b898:	icebp  
  41b899:	cmp    eax,0x6d541495
  41b89e:	or     eax,0x3ce74b08
  41b8a3:	mov    al,0x25
  41b8a5:	outs   dx,BYTE PTR ds:[esi]
  41b8a6:	push   ecx
  41b8a7:	push   cs
  41b8a8:	aam    0xaf
  41b8aa:	cmp    DWORD PTR [ebx-0x10],edx
  41b8ad:	pop    ds
  41b8ae:	mov    ebx,0xaf90bea0
  41b8b3:	clc    
  41b8b4:	mov    ecx,0xa0a930e7
  41b8b9:	jp     0x41b8ce
  41b8bb:	pushf  
  41b8bc:	mov    esi,ecx
  41b8be:	fisttp DWORD PTR cs:[eax]
  41b8c1:	sub    DWORD PTR [edi+0x54],ebx
  41b8c4:	fist   WORD PTR [eax]
  41b8c6:	xchg   ecx,eax
  41b8c7:	fild   WORD PTR [ebx+0x721de2d]
  41b8cd:	hlt    
  41b8ce:	dec    eax
  41b8cf:	rol    DWORD PTR [ebx-0x6b31da8d],0x49
  41b8d6:	jge    0x41b940
  41b8d8:	adc    al,0xcf
  41b8da:	dec    ebp
  41b8db:	popf   
  41b8dc:	fstp   QWORD PTR [edx+0x1d]
  41b8df:	jno    0x41b865
  41b8e1:	xchg   bx,ax
  41b8e3:	jmp    0xb521:0x55baa988
  41b8ea:	sar    BYTE PTR [eax+0x56],cl
  41b8ed:	xor    BYTE PTR [esp+edi*8-0x66ecced6],ah
  41b8f4:	sbb    eax,0xaa1979c8
  41b8f9:	push   edx
  41b8fa:	xor    eax,0xd09b8f7
  41b8ff:	push   ds
  41b900:	je     0x41b88c
  41b902:	stos   BYTE PTR es:[edi],al
  41b903:	les    edx,FWORD PTR [eax-0x9acf122]
  41b909:	adc    eax,0xfd508ade
  41b90e:	mov    esi,0xd3db6bd7
  41b913:	(bad)  
  41b914:	repnz xor al,0x58
  41b917:	std    
  41b918:	adc    eax,0xd184bab
  41b91d:	(bad)  [ebx+0x56c76f0e]
  41b923:	adc    eax,0xaad33a34
  41b928:	jmp    0x30d2:0x73acc64b
  41b92f:	hlt    
  41b930:	call   0xe9ec:0x3cd98aeb
  41b937:	daa    
  41b938:	loop   0x41b939
  41b93a:	push   ss
  41b93b:	pop    es
  41b93c:	div    DWORD PTR [esi]
  41b93e:	shr    BYTE PTR [edi+0x74199434],1
  41b944:	add    BYTE PTR [ebx],bl
  41b946:	push   edx
  41b947:	imul   ecx,DWORD PTR [ecx+0x27],0x0
  41b94b:	jge    0x41b8d5
  41b94d:	add    esp,ecx
  41b94f:	data16 adc al,0x38
  41b952:	outs   dx,BYTE PTR ds:[esi]
  41b953:	push   0x10
  41b955:	lahf   
  41b956:	pushf  
  41b957:	jo     0x41b95e
  41b959:	push   ebx
  41b95a:	cwde   
  41b95b:	xor    al,0x8a
  41b95d:	test   al,0xb3
  41b95f:	mov    esi,0x12383d30
  41b964:	imul   ebx,DWORD PTR [ebp-0xec34ca5],0xe1bc52a9
  41b96e:	(bad)  
  41b970:	mov    esi,0xc2baf839
  41b975:	es mov ebp,0x6bc9a596
  41b97b:	xor    BYTE PTR [esp+ebp*1-0x7fe0f88e],0x56
  41b983:	lods   eax,DWORD PTR ds:[esi]
  41b984:	sahf   
  41b985:	lock sbb ebx,ecx
  41b988:	sbb    edx,DWORD PTR [ebx+0x6b]
  41b98b:	loopne 0x41b90f
  41b98d:	(bad)  
  41b98e:	leave  
  41b98f:	inc    edi
  41b990:	fcomp  QWORD PTR [ecx+0x1f699257]
  41b996:	sbb    eax,0x46d077c
  41b99b:	xor    BYTE PTR [eax],bh
  41b99d:	pop    ebp
  41b99e:	out    0xd2,al
  41b9a0:	leave  
  41b9a1:	pop    edx
  41b9a2:	or     al,0xcf
  41b9a4:	inc    edi
  41b9a5:	fucomp st(1)
  41b9a7:	enter  0x6a1f,0x90
  41b9ab:	leave  
  41b9ac:	mov    bh,0xd5
  41b9ae:	(bad)  
  41b9af:	adc    eax,0xa7e18298
  41b9b4:	call   0x5439:0x22dd98dc
  41b9bb:	mulps  xmm5,xmm1
  41b9be:	cmp    DWORD PTR [eax+edi*1],ebp
  41b9c1:	aad    0x9a
  41b9c3:	sbb    ecx,DWORD PTR [ebp+0x4055b6b3]
  41b9c9:	call   0xff0e:0x92738c5b
  41b9d0:	cmc    
  41b9d1:	inc    ebp
  41b9d2:	cmp    DWORD PTR [ebp+0x7c],0xffffff8c
  41b9d6:	fadd   QWORD PTR [edx+0x3fc66944]
  41b9dc:	test   BYTE PTR [ebp-0x52],0x69
  41b9e0:	mov    ebp,0x81256aab
  41b9e5:	sbb    BYTE PTR [ecx],al
  41b9e7:	lods   eax,DWORD PTR ds:[esi]
  41b9e8:	dec    edi
  41b9e9:	xchg   ebx,eax
  41b9ea:	inc    edx
  41b9eb:	inc    esp
  41b9ec:	sub    ebp,ebx
  41b9ee:	inc    ebx
  41b9ef:	push   ebp
  41b9f0:	hlt    
  41b9f1:	nop
  41b9f2:	mov    edx,0xad464758
  41b9f7:	xchg   edi,eax
  41b9f8:	rol    BYTE PTR [edi],0x9f
  41b9fb:	test   eax,0x4f7f9d7a
  41ba00:	jo     0x41b9a0
  41ba02:	aaa    
  41ba03:	push   ecx
  41ba04:	outs   dx,DWORD PTR ds:[esi]
  41ba05:	mov    al,0xf0
  41ba07:	cmp    eax,0xe0738d74
  41ba0c:	int3   
  41ba0d:	rcr    DWORD PTR [ecx],cl
  41ba0f:	call   0xb389a1a3
  41ba14:	inc    ecx
  41ba15:	fidiv  WORD PTR [ebp-0x60]
  41ba18:	push   esp
  41ba19:	ds push esi
  41ba1b:	popf   
  41ba1c:	cs repnz pushf 
  41ba1f:	cli    
  41ba20:	adc    DWORD PTR [edi+0x6529bba4],0xe7d26aee
  41ba2a:	in     al,0x8e
  41ba2c:	lods   al,BYTE PTR ds:[esi]
  41ba2d:	les    ebp,FWORD PTR [edi+esi*2-0x3e3795ad]
  41ba34:	add    DWORD PTR [edi+0x31],eax
  41ba37:	(bad)  
  41ba38:	cmp    eax,0xe9aa5c4b
  41ba3d:	ret    0xa874
  41ba40:	cmp    dh,BYTE PTR [ebx-0x6aeedf5a]
  41ba46:	xlat   BYTE PTR es:[ebx]
  41ba48:	jmp    0x41bac2
  41ba4a:	push   0xe07e774
  41ba4f:	mov    DWORD PTR [edx],ebp
  41ba51:	cs (bad) 
  41ba53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba54:	or     DWORD PTR [ebx+0x20871943],eax
  41ba5a:	xchg   esi,eax
  41ba5b:	stos   DWORD PTR es:[edi],eax
  41ba5c:	mov    edi,0xc4ef1464
  41ba61:	lods   al,BYTE PTR ds:[esi]
  41ba62:	or     DWORD PTR [ebx+0x539c69f9],esi
  41ba68:	ins    DWORD PTR es:[edi],dx
  41ba69:	dec    ebp
  41ba6a:	fisubr DWORD PTR [eax+0x35]
  41ba6d:	aad    0xda
  41ba6f:	mov    cl,0x73
  41ba71:	jno    0x41ba6f
  41ba73:	fs pushf 
  41ba75:	pop    es
  41ba76:	mov    dl,0xab
  41ba78:	sar    DWORD PTR [eax-0x7e],cl
  41ba7b:	sbb    ah,ch
  41ba7d:	out    dx,eax
  41ba7e:	sub    edi,DWORD PTR [ecx+0x37610dbb]
  41ba84:	and    al,0x85
  41ba86:	(bad)  [eax-0x67019b32]
  41ba8c:	sar    dh,0x29
  41ba8f:	xchg   ebp,eax
  41ba90:	cmp    al,0xd
  41ba92:	sbb    eax,edi
  41ba94:	out    dx,al
  41ba95:	or     BYTE PTR ds:0xc2acb14c,al
  41ba9b:	xchg   esp,eax
  41ba9c:	pop    es
  41ba9d:	lahf   
  41ba9e:	or     BYTE PTR [edi],bl
  41baa0:	sahf   
  41baa1:	(bad)  
  41baa3:	mov    DWORD PTR [edi],edx
  41baa5:	pop    es
  41baa6:	xor    eax,0xb1182a0c
  41baab:	fwait
  41baac:	jae    0x41babd
  41baae:	sbb    esi,0x37
  41bab1:	sbb    eax,0x29459f28
  41bab6:	popf   
  41bab7:	ret    0x9f68
  41baba:	js     0x41bb30
  41babc:	ins    BYTE PTR es:[edi],dx
  41babd:	fs inc esi
  41babf:	xchg   ecx,eax
  41bac0:	jp     0x41ba9c
  41bac2:	das    
  41bac3:	fld    DWORD PTR [esi]
  41bac5:	mov    esi,0xdb1b19c
  41baca:	outs   dx,BYTE PTR ds:[esi]
  41bacb:	fsubr  DWORD PTR [eax]
  41bacd:	inc    eax
  41bace:	push   ss
  41bacf:	(bad)  
  41bad0:	clc    
  41bad1:	out    0x98,al
  41bad3:	mov    edi,0x71babd92
  41bad8:	js     0x41ba80
  41bada:	mov    esp,0xb50fbe67
  41badf:	and    eax,DWORD PTR [edx+0xd]
  41bae2:	or     al,0x5b
  41bae4:	xor    eax,0xb1b7f1dc
  41bae9:	call   0xa20d:0x340e0300
  41baf0:	push   0x61af6430
  41baf5:	add    BYTE PTR [ebp-0x799701e],0x4c
  41bafc:	lahf   
  41bafd:	mov    ah,0xf7
  41baff:	push   cs
  41bb00:	std    
  41bb01:	xchg   esi,eax
  41bb02:	iret   
  41bb03:	lods   al,BYTE PTR ds:[esi]
  41bb04:	sbb    BYTE PTR [ebx+ebx*1-0x54ccef0c],bh
  41bb0b:	(bad)  
  41bb0c:	daa    
  41bb0d:	jnp    0x41bb7f
  41bb0f:	jb     0x41bb38
  41bb11:	fs mov dh,0xbc
  41bb14:	mov    bl,0x1c
  41bb16:	mov    ebp,0x51d96070
  41bb1b:	mov    edx,0xe084f7d9
  41bb20:	fiadd  WORD PTR [ebx-0x3f35f8cc]
  41bb26:	inc    ecx
  41bb27:	jl     0x41bb24
  41bb29:	aam    0x6d
  41bb2b:	pop    es
  41bb2c:	or     cl,BYTE PTR [edi+0x5d0ecd93]
  41bb32:	jbe    0x41bb4a
  41bb34:	mov    al,0x19
  41bb36:	ins    BYTE PTR es:[edi],dx
  41bb37:	pop    esp
  41bb38:	jg     0x41baf1
  41bb3a:	int    0x2
  41bb3c:	sub    dl,al
  41bb3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb3f:	enter  0x5e80,0xa8
  41bb43:	out    dx,eax
  41bb44:	or     eax,0x4318292b
  41bb49:	aad    0x5a
  41bb4b:	mov    BYTE PTR [eax+0x5bf03def],al
  41bb51:	mov    esp,0xafaca7c2
  41bb56:	rcr    BYTE PTR [ebx],0xa4
  41bb59:	mov    ds:0xb149e201,al
  41bb5e:	mov    esi,0xe6a3f604
  41bb63:	cs mov esi,0x1b25e8b7
  41bb69:	sub    ebx,edx
  41bb6b:	imul   edx,esp,0xe6882cb7
  41bb71:	mov    cl,bh
  41bb73:	xor    DWORD PTR [eax-0x505334d5],esp
  41bb79:	mov    BYTE PTR [eax+0x53d019a4],al
  41bb7f:	cmp    al,0xfe
  41bb81:	repnz fcom QWORD PTR [ecx+0x7b]
  41bb85:	ds or  dl,bh
  41bb88:	cld    
  41bb89:	sti    
  41bb8a:	ret    0xbe1f
  41bb8d:	inc    ebp
  41bb8e:	cmp    bl,BYTE PTR [eax]
  41bb90:	rcl    BYTE PTR [ebp*2+0x51e2df96],0x4e
  41bb98:	imul   edi
  41bb9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bb9b:	das    
  41bb9c:	sbb    eax,0x369b7976
  41bba1:	ret    0x3b43
  41bba4:	sub    BYTE PTR ds:0xb35dc7f6,dh
  41bbaa:	lahf   
  41bbab:	or     eax,0xebdb48eb
  41bbb0:	sbb    DWORD PTR [ecx],esi
  41bbb2:	sbb    eax,0xaa2c863d
  41bbb7:	push   edx
  41bbb8:	xchg   ecx,eax
  41bbb9:	in     al,0x3d
  41bbbb:	lahf   
  41bbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbbd:	repz call FWORD PTR [esi+0x42df9cdc]
  41bbc4:	enter  0x4449,0xec
  41bbc8:	jmp    0x41bc2b
  41bbca:	mov    al,ah
  41bbcc:	and    DWORD PTR ds:0x42694258,edx
  41bbd2:	lock ins DWORD PTR es:[di],dx
  41bbd5:	shr    DWORD PTR [ebp+0x71a4f9b],0xd9
  41bbdc:	xor    BYTE PTR [ebx],0x4a
  41bbdf:	jp     0x41bb6f
  41bbe1:	ins    DWORD PTR es:[edi],dx
  41bbe2:	jg     0x41bba1
  41bbe4:	pop    ss
  41bbe5:	repnz mov dh,0x7f
  41bbe8:	mov    ah,0x65
  41bbea:	inc    ebx
  41bbeb:	rol    DWORD PTR [ebp+0x2a],1
  41bbee:	add    ch,bl
  41bbf0:	push   edi
  41bbf1:	lea    edx,[esi-0x18]
  41bbf4:	pusha  
  41bbf5:	fwait
  41bbf6:	out    dx,eax
  41bbf7:	xchg   ecx,eax
  41bbf8:	lahf   
  41bbf9:	hlt    
  41bbfa:	mov    dh,0xa5
  41bbfc:	adc    ebx,eax
  41bbfe:	adc    al,0xdd
  41bc00:	push   ds
  41bc01:	mov    ds:0xfd8c4e13,al
  41bc06:	loop   0x41bc3f
  41bc08:	xor    DWORD PTR [esi-0x7],eax
  41bc0b:	aaa    
  41bc0c:	jbe    0x41bc43
  41bc0e:	mov    ecx,0x713b99f6
  41bc13:	mov    eax,0x1351d69
  41bc18:	adc    esi,DWORD PTR [esi]
  41bc1a:	pslld  mm2,QWORD PTR [eax]
  41bc1d:	mov    bh,0x36
  41bc1f:	jge    0x41bbcd
  41bc21:	xchg   ebp,eax
  41bc22:	inc    edi
  41bc23:	push   ebx
  41bc24:	jae    0x41bbc0
  41bc26:	inc    ecx
  41bc27:	sbb    dh,dl
  41bc29:	inc    ebp
  41bc2a:	sbb    edi,DWORD PTR [esi]
  41bc2c:	test   DWORD PTR [esi],ebp
  41bc2e:	lods   eax,DWORD PTR ds:[esi]
  41bc2f:	pop    ds
  41bc30:	pop    ebp
  41bc31:	push   0xe6776c7c
  41bc36:	jb     0x41bc4c
  41bc38:	push   edx
  41bc39:	push   esi
  41bc3a:	sti    
  41bc3b:	addr16 adc bh,bl
  41bc3e:	nop
  41bc3f:	adc    al,0x20
  41bc41:	sbb    cl,cl
  41bc43:	std    
  41bc44:	dec    edi
  41bc45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc46:	ins    BYTE PTR es:[edi],dx
  41bc47:	lds    ebx,FWORD PTR [ebx+esi*2]
  41bc4a:	jne    0x41bbf7
  41bc4c:	ins    DWORD PTR es:[edi],dx
  41bc4d:	and    DWORD PTR [eax-0x6a793bbb],ebx
  41bc53:	or     eax,0xc612f51a
  41bc58:	or     edi,ebp
  41bc5a:	pop    eax
  41bc5b:	int3   
  41bc5c:	push   ebp
  41bc5d:	sbb    BYTE PTR [ebx+0x39],dl
  41bc60:	xor    edx,edx
  41bc62:	and    BYTE PTR [edi+0x74fa990],al
  41bc68:	sub    edx,DWORD PTR [ecx-0x3]
  41bc6b:	call   0x59de1f27
  41bc70:	cmp    al,al
  41bc72:	and    DWORD PTR [eax+esi*1-0xf96f258],ecx
  41bc79:	out    dx,eax
  41bc7a:	jmp    0xd9b7e629
  41bc7f:	xlat   BYTE PTR ds:[ebx]
  41bc80:	lds    edx,FWORD PTR [edx]
  41bc82:	inc    esi
  41bc83:	dec    edx
  41bc84:	sub    DWORD PTR [eax+0x777d3cfa],ecx
  41bc8a:	jo     0x41bce4
  41bc8c:	xchg   ebp,eax
  41bc8d:	xor    DWORD PTR [eax],ecx
  41bc8f:	test   al,0x63
  41bc91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bc92:	out    dx,eax
  41bc93:	aad    0x26
  41bc95:	leave  
  41bc96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bc97:	jecxz  0x41bc5c
  41bc99:	mov    al,ds:0xc9001382
  41bc9e:	les    ecx,FWORD PTR [ecx]
  41bca0:	mov    esi,0xf70ea2d2
  41bca5:	popa   
  41bca6:	inc    ebx
  41bca7:	(bad)  
  41bca8:	dec    BYTE PTR [ebx]
  41bcaa:	loop   0x41bce2
  41bcac:	out    0xff,eax
  41bcae:	jmp    0xeb3a2fe3
  41bcb3:	in     al,0xfd
  41bcb5:	dec    ebx
  41bcb6:	ins    DWORD PTR es:[edi],dx
  41bcb7:	int    0xb9
  41bcb9:	sbb    eax,0x921ea258
  41bcbe:	sub    BYTE PTR [ebx],cl
  41bcc0:	call   0x13b6cab0
  41bcc5:	mov    ebx,0x69f2211a
  41bcca:	xchg   edx,eax
  41bccb:	mov    esp,0x477bbbd1
  41bcd0:	div    DWORD PTR [ebx]
  41bcd2:	jmp    0x809b:0x964142b5
  41bcd9:	cmp    al,0x16
  41bcdb:	sub    al,0xa2
  41bcdd:	std    
  41bcde:	mov    cl,ah
  41bce0:	(bad)  
  41bce2:	test   al,0xa3
  41bce4:	in     al,dx
  41bce5:	inc    ebp
  41bce6:	mov    esp,DWORD PTR [edi-0x1f]
  41bce9:	test   BYTE PTR [ebx+0x2324f9e5],al
  41bcef:	daa    
  41bcf0:	dec    ebp
  41bcf1:	in     eax,dx
  41bcf2:	lods   eax,DWORD PTR ds:[esi]
  41bcf3:	outs   dx,DWORD PTR ds:[esi]
  41bcf4:	and    al,0xee
  41bcf6:	test   DWORD PTR [edi-0x64],0xbc8b3d76
  41bcfd:	inc    edi
  41bcfe:	daa    
  41bcff:	inc    DWORD PTR [ebx+0x63]
  41bd02:	dec    eax
  41bd03:	nop
  41bd04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd05:	test   DWORD PTR [esp+edx*2-0x4c22e69b],esp
  41bd0c:	ret    
  41bd0d:	adc    eax,0x653cd091
  41bd12:	repnz iret 
  41bd14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd15:	cmp    BYTE PTR [esi],al
  41bd17:	push   edi
  41bd18:	jl     0x41bd14
  41bd1a:	pop    ecx
  41bd1b:	xchg   esi,eax
  41bd1c:	outs   dx,DWORD PTR ds:[esi]
  41bd1d:	outs   dx,DWORD PTR ds:[esi]
  41bd1e:	loopne 0x41bcf0
  41bd20:	pushf  
  41bd21:	jns    0x41bd47
  41bd23:	cdq    
  41bd24:	xchg   esi,eax
  41bd25:	iret   
  41bd26:	pop    esp
  41bd27:	xchg   esi,eax
  41bd28:	out    0xd8,eax
  41bd2a:	and    BYTE PTR [ecx+ecx*1+0x19],ah
  41bd2e:	and    DWORD PTR [edx+eiz*4+0x58],ecx
  41bd32:	aaa    
  41bd33:	push   0xffffffb5
  41bd35:	mov    esp,0x16d3c7db
  41bd3a:	(bad)  
  41bd3b:	call   0x4d6f226d
  41bd40:	retf   
  41bd41:	xor    DWORD PTR [ecx],edx
  41bd43:	jl     0x41bd7f
  41bd45:	enter  0xc791,0x23
  41bd49:	jmp    0xbb30:0xc576bb61
  41bd50:	(bad)  
  41bd51:	xor    DWORD PTR [esp+ecx*8+0x70],0x1f
  41bd56:	jns    0x41bdb1
  41bd58:	inc    eax
  41bd59:	retf   0x56b8
  41bd5c:	cli    
  41bd5d:	call   0x6232:0xc21c33c9
  41bd64:	xchg   esi,eax
  41bd65:	inc    ecx
  41bd66:	ins    BYTE PTR es:[edi],dx
  41bd67:	and    dl,BYTE PTR [edi]
  41bd69:	sahf   
  41bd6a:	das    
  41bd6b:	(bad)  
  41bd6c:	push   ss
  41bd6d:	mov    dh,0x64
  41bd6f:	push   edx
  41bd70:	jbe    0x41bdd3
  41bd72:	pop    ecx
  41bd73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bd74:	test   eax,0xbd9a4c7a
  41bd79:	push   eax
  41bd7a:	inc    ebx
  41bd7b:	push   ebx
  41bd7c:	repz push ss
  41bd7e:	cmp    BYTE PTR [ebx-0x693b93c4],ah
  41bd84:	sub    al,0x6e
  41bd86:	scas   al,BYTE PTR es:[edi]
  41bd87:	cmc    
  41bd88:	out    0xd7,eax
  41bd8a:	aad    0xaa
  41bd8c:	and    eax,0x9f30f2f0
  41bd91:	ret    
  41bd92:	sub    BYTE PTR [ecx+0x13f8a369],al
  41bd98:	and    al,0x8f
  41bd9a:	inc    ebx
  41bd9b:	not    BYTE PTR [edi]
  41bd9d:	scas   eax,DWORD PTR es:[edi]
  41bd9e:	add    DWORD PTR [eax],ecx
  41bda0:	push   edi
  41bda1:	push   edi
  41bda2:	aam    0x92
  41bda4:	ret    
  41bda5:	sub    al,0xc6
  41bda7:	outs   dx,BYTE PTR ds:[esi]
  41bda8:	adc    eax,0x8e8b3932
  41bdad:	and    ch,al
  41bdaf:	xor    ebp,ebx
  41bdb1:	or     eax,0x8453d4b8
  41bdb6:	aas    
  41bdb7:	lds    ebx,FWORD PTR [edx-0x48]
  41bdba:	sub    ebp,ebx
  41bdbc:	enter  0xc631,0xd9
  41bdc0:	pop    edi
  41bdc1:	test   eax,0x9f5b55b9
  41bdc6:	mov    ecx,0xb3e607a8
  41bdcb:	and    ecx,DWORD PTR [edx-0x60]
  41bdce:	sbb    bh,al
  41bdd0:	int3   
  41bdd1:	call   0x597:0xa0dcfb71
  41bdd8:	lea    ecx,[edx]
  41bdda:	mov    BYTE PTR [eax-0x39b208b4],cl
  41bde0:	sub    al,0x3b
  41bde2:	push   0x5b
  41bde4:	push   ebx
  41bde5:	jmp    0xc19e:0xe72ccf00
  41bdec:	mov    ch,BYTE PTR [edi-0xf233b50]
  41bdf2:	out    0x72,al
  41bdf4:	or     DWORD PTR [edx-0xb40c2b4],edx
  41bdfa:	inc    edi
  41bdfb:	push   ecx
  41bdfc:	xor    eax,0xdc5fb5cc
  41be01:	xchg   ebx,eax
  41be02:	repnz push ds
  41be04:	ja     0x41be20
  41be06:	pop    edi
  41be07:	cld    
  41be08:	rol    DWORD PTR [ebp+0x26],1
  41be0b:	test   BYTE PTR [esi+0x3ae2ea2f],al
  41be11:	fwait
  41be12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be13:	mov    bl,0xc9
  41be15:	inc    eax
  41be16:	push   eax
  41be17:	mov    ds:0x4da13359,al
  41be1c:	sbb    ebp,DWORD PTR [edi+0x1a334b29]
  41be22:	jns    0x41be9e
  41be24:	xchg   DWORD PTR [esi+eax*2+0x35c2e4f0],ecx
  41be2b:	pop    ebx
  41be2c:	int    0x4f
  41be2e:	cdq    
  41be2f:	or     eax,0xa9b46227
  41be34:	add    al,bh
  41be36:	jns    0x41bdff
  41be38:	(bad)
  41be3c:	sub    eax,0x1ea3771
  41be41:	fdiv   QWORD PTR [esi-0x58]
  41be44:	aas    
  41be45:	and    al,0xd
  41be47:	cmp    edi,DWORD PTR [ebx]
  41be49:	scas   eax,DWORD PTR es:[edi]
  41be4a:	ret    0xe945
  41be4d:	adc    BYTE PTR [esp+esi*2-0x62a9e856],bl
  41be54:	out    0x2b,eax
  41be56:	mov    ds:0x5c9045e0,al
  41be5b:	xor    esp,edi
  41be5d:	clc    
  41be5e:	stc    
  41be5f:	add    al,0xce
  41be61:	ret    0x4c54
  41be64:	sub    BYTE PTR ds:0x3cd3deea,al
  41be6a:	sbb    bh,ah
  41be6c:	repnz hlt 
  41be6e:	sbb    eax,0x1b2308e0
  41be73:	dec    ebp
  41be74:	sub    ch,al
  41be76:	jae    0x41bdf8
  41be78:	xor    eax,ecx
  41be7a:	test   eax,0xd6d9a0ab
  41be7f:	lock push esi
  41be81:	retf   
  41be82:	pop    ebx
  41be83:	or     bh,dl
  41be85:	and    al,0x98
  41be87:	pop    es
  41be88:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be89:	fmul   QWORD PTR ds:0x736539dd
  41be8f:	xchg   ebp,eax
  41be90:	jo     0x41be7b
  41be92:	(bad)
  41be95:	(bad)  
  41be96:	sub    BYTE PTR [ecx+0x78],dl
  41be99:	xor    bh,BYTE PTR [ebx-0x79228485]
  41be9f:	adc    eax,0xc7dd9f2a
  41bea4:	out    dx,al
  41bea5:	js     0x41be3c
  41bea7:	enter  0x368e,0xb6
  41beab:	out    dx,eax
  41beac:	lods   eax,DWORD PTR ds:[esi]
  41bead:	dec    ebp
  41beae:	jo     0x41be9b
  41beb0:	cwde   
  41beb1:	je     0x41bec3
  41beb3:	and    bl,BYTE PTR [ebx+0x2f]
  41beb6:	fdivr  QWORD PTR [esi+0x3e]
  41beb9:	xchg   ebx,eax
  41beba:	lock xor esi,ecx
  41bebd:	mov    edi,0xffcd8d08
  41bec2:	sub    edi,esi
  41bec4:	add    DWORD PTR [eax],edi
  41bec6:	jmp    0x41bed1
  41becb:	xor    esi,ecx
  41becd:	add    esi,edx
  41becf:	add    DWORD PTR [eax],esi
  41bed1:	mov    eax,DWORD PTR [ebp-0x8]
  41bed4:	mov    esi,DWORD PTR [ebp-0x10]
  41bed7:	mov    eax,DWORD PTR [eax]
  41bed9:	xor    esi,ecx
  41bedb:	add    esi,0x3272f7
  41bee1:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bee8:	mov    DWORD PTR [ebp-0x24],ebx
  41beeb:	not    esi
  41beed:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bef4:	mov    DWORD PTR [ebp-0x2c],ebx
  41bef7:	mov    ebx,DWORD PTR [ebp-0x28]
  41befa:	mov    edi,DWORD PTR [ebp-0x24]
  41befd:	and    eax,esi
  41beff:	mov    esi,0xa145
  41bf04:	xor    bx,si
  41bf07:	mov    esi,0x4131
  41bf0c:	add    bx,si
  41bf0f:	cmp    WORD PTR [eax],bx
  41bf12:	je     0x41bf5c
  41bf18:	mov    edi,DWORD PTR [ebp-0x10]
  41bf1b:	xor    edi,ecx
  41bf1d:	mov    DWORD PTR [ebp-0x28],0x7097b859
  41bf24:	mov    DWORD PTR [ebp-0x24],0xffffffff
  41bf2b:	mov    ebx,0xffcd8d08
  41bf30:	sub    ebx,edi
  41bf32:	mov    DWORD PTR [ebp-0x30],0x7097a55f
  41bf39:	add    eax,ebx
  41bf3b:	mov    DWORD PTR [ebp-0x2c],0xffffffff
  41bf42:	mov    edi,DWORD PTR [ebp-0x28]
  41bf45:	mov    ebx,DWORD PTR [ebp-0x24]
  41bf48:	mov    ebx,0xa145
  41bf4d:	xor    di,bx
  41bf50:	add    di,si
  41bf53:	cmp    WORD PTR [eax],di
  41bf56:	jne    0x41bf18
  41bf5c:	mov    edi,DWORD PTR [ebp-0x14]
  41bf5f:	jmp    0x41e319
  41bf64:	retf   0xd5df
  41bf67:	pop    esi
  41bf68:	idiv   BYTE PTR [edx+0x7a]
  41bf6b:	addr16 cmp al,0xf6
  41bf6e:	push   ebx
  41bf6f:	into   
  41bf70:	or     DWORD PTR [edi+0x37],edi
  41bf73:	pushf  
  41bf74:	in     al,0x0
  41bf76:	jl     0x41bff3
  41bf78:	sbb    BYTE PTR [esi-0x1adf8485],bl
  41bf7e:	(bad)  
  41bf80:	xor    DWORD PTR [eax+eiz*4+0x4dab5079],edx
  41bf87:	inc    eax
  41bf88:	sbb    BYTE PTR [eax-0x7988dd68],0xb0
  41bf8f:	addr16 cs jmp 0xb9a8eef6
  41bf96:	push   eax
  41bf97:	(bad)  
  41bf98:	and    eax,0xd97012b8
  41bf9d:	das    
  41bf9e:	repz shl BYTE PTR [esi],cl
  41bfa1:	xor    DWORD PTR ds:0xc490aea8,edi
  41bfa7:	int    0xd3
  41bfa9:	aas    
  41bfaa:	rcr    BYTE PTR [edx-0x1c095e05],cl
  41bfb0:	or     bh,BYTE PTR [edx-0x669fd93]
  41bfb6:	mov    bh,0x8b
  41bfb8:	pushf  
  41bfb9:	(bad)  
  41bfba:	pop    edi
  41bfbb:	pop    esi
  41bfbc:	(bad)  
  41bfbd:	mov    al,ds:0xf91be663
  41bfc2:	out    dx,al
  41bfc3:	dec    edi
  41bfc4:	sub    BYTE PTR [esi],0x36
  41bfc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bfc8:	pusha  
  41bfc9:	and    bh,BYTE PTR [ebp-0x19]
  41bfcc:	scas   eax,DWORD PTR es:[edi]
  41bfcd:	add    al,0x24
  41bfcf:	std    
  41bfd0:	dec    ebx
  41bfd1:	retf   0x7bdf
  41bfd4:	movsx  eax,BYTE PTR [ecx-0x4e0a351f]
  41bfdb:	push   edi
  41bfdc:	or     eax,edx
  41bfde:	mov    DWORD PTR [edx+0x13082f57],0xb6d0bd91
  41bfe8:	std    
  41bfe9:	bound  edi,QWORD PTR [ecx]
  41bfeb:	or     al,0x5b
  41bfed:	jb     0x41c05e
  41bfef:	scas   al,BYTE PTR es:[edi]
  41bff0:	mov    eax,0x28a30825
  41bff5:	dec    ecx
  41bff6:	cmp    bh,BYTE PTR [esi-0x80]
  41bff9:	sub    bl,al
  41bffb:	fimul  DWORD PTR ds:0xbcc8fcf5
  41c001:	mov    ?,WORD PTR gs:[esi+ebp*2]
  41c005:	adc    al,0x5d
  41c007:	ds in  al,dx
  41c009:	ret    
  41c00a:	dec    ebx
  41c00b:	pop    edx
  41c00c:	sbb    DWORD PTR [edi-0x676ce26c],ebp
  41c012:	sub    DWORD PTR [ebp-0x44],edx
  41c015:	xchg   ebx,eax
  41c016:	cdq    
  41c017:	(bad)  
  41c018:	and    eax,0xeb0153dd
  41c01d:	int    0x65
  41c01f:	jmp    0x55702095
  41c024:	ins    DWORD PTR es:[edi],dx
  41c025:	in     al,dx
  41c026:	mov    ecx,0x629c6196
  41c02b:	es stos DWORD PTR es:[edi],eax
  41c02d:	lahf   
  41c02e:	add    esi,DWORD PTR [ebx+0x2f]
  41c031:	add    eax,0x13ff366b
  41c036:	mov    bl,0x49
  41c038:	in     al,dx
  41c039:	outs   dx,BYTE PTR ds:[esi]
  41c03a:	repnz pop ds
  41c03c:	jbe    0x41c01a
  41c03e:	sbb    dl,BYTE PTR [ebp+0x32]
  41c041:	out    0x4,al
  41c043:	rol    DWORD PTR [edx],cl
  41c045:	xchg   BYTE PTR [ecx+0x74],dh
  41c048:	dec    ecx
  41c049:	dec    edi
  41c04a:	cdq    
  41c04b:	adc    BYTE PTR [edx],ah
  41c04d:	pop    ecx
  41c04e:	ret    0x30a1
  41c051:	pop    ss
  41c052:	cdq    
  41c053:	call   0x1e95:0x832505a4
  41c05a:	add    ebx,0xffffffad
  41c05d:	sub    eax,0x14ecc70
  41c062:	repz pop ebp
  41c064:	mov    esp,0x110cbaf0
  41c069:	inc    ecx
  41c06a:	inc    edx
  41c06b:	lock mov ch,0x95
  41c06e:	or     al,0x2e
  41c070:	add    eax,0xac8dce66
  41c075:	ja     0x41c04c
  41c077:	add    eax,0x1ccdb743
  41c07c:	je     0x41c049
  41c07e:	fdivr  DWORD PTR [edx]
  41c080:	xor    eax,0xd47433ec
  41c085:	mov    esp,0x5785628c
  41c08a:	dec    eax
  41c08b:	pop    es
  41c08c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c08d:	cmp    esp,eax
  41c08f:	ss or  DWORD PTR cs:[ecx-0x7cb5e8da],ecx
  41c097:	test   ecx,edx
  41c099:	fldenv [edi+ecx*4]
  41c09c:	adc    eax,0xba6975f8
  41c0a1:	dec    ebp
  41c0a2:	(bad)  
  41c0a3:	shl    BYTE PTR [eax+esi*2],1
  41c0a6:	push   es
  41c0a7:	mov    ebp,0x90ac04c2
  41c0ac:	xor    eax,0xf8e5e40
  41c0b1:	inc    ebx
  41c0b2:	outs   dx,BYTE PTR ds:[esi]
  41c0b3:	and    al,0xfb
  41c0b5:	add    esi,DWORD PTR [edx-0xb]
  41c0b8:	mov    ecx,0xea3f8c78
  41c0bd:	and    ebp,esp
  41c0bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0c0:	scas   eax,DWORD PTR es:[edi]
  41c0c1:	popa   
  41c0c2:	xor    al,BYTE PTR [ecx+0x20]
  41c0c5:	mov    cl,BYTE PTR [edi]
  41c0c7:	and    ebx,DWORD PTR [edi*8+0x804bb45]
  41c0ce:	xchg   edx,eax
  41c0cf:	out    0xf1,eax
  41c0d1:	fst    st(0)
  41c0d3:	ret    
  41c0d4:	adc    ecx,DWORD PTR [ecx+0x7d]
  41c0d7:	mov    ah,0x99
  41c0d9:	das    
  41c0da:	mov    bl,0xd6
  41c0dc:	mov    WORD PTR [ecx-0x19434962],?
  41c0e2:	push   0x6e
  41c0e4:	das    
  41c0e5:	jne    0x41c0fc
  41c0e7:	push   esi
  41c0e8:	xchg   ecx,eax
  41c0e9:	ss mov eax,0xee1b179e
  41c0ef:	xchg   ebx,eax
  41c0f0:	dec    DWORD PTR [esi-0x2c56df62]
  41c0f6:	adc    DWORD PTR [ebx],edi
  41c0f8:	mov    ds:0x86fb0eeb,al
  41c0fd:	test   BYTE PTR [edi+edi*4],bh
  41c100:	adc    dl,bl
  41c102:	aam    0xd0
  41c104:	xchg   edi,eax
  41c105:	jb     0x41c0f1
  41c107:	push   esp
  41c108:	movups xmm3,XMMWORD PTR [esi+0x2]
  41c10c:	jo     0x41c143
  41c10e:	in     eax,0xa5
  41c110:	jns    0x41c188
  41c112:	push   esp
  41c113:	dec    ecx
  41c114:	adc    DWORD PTR [esp+edi*1],ebx
  41c117:	inc    edi
  41c118:	in     eax,0xd6
  41c11a:	push   eax
  41c11b:	push   edi
  41c11c:	add    al,0xf6
  41c11e:	cs push ds
  41c120:	sti    
  41c121:	jle    0x41c192
  41c123:	mov    ecx,0xbf1c9deb
  41c128:	jp     0x41c0aa
  41c12a:	mov    BYTE PTR [ebp-0x5d],0x60
  41c12e:	mov    ss,WORD PTR [esi+edi*8+0x3b]
  41c132:	aad    0xe6
  41c134:	hlt    
  41c135:	jl     0x41c0bb
  41c137:	add    al,0x54
  41c139:	add    BYTE PTR [edi+0x1c],0xe8
  41c13d:	daa    
  41c13e:	test   BYTE PTR ds:0xd8b2cd7f,ch
  41c144:	and    al,0x7e
  41c146:	sub    BYTE PTR [eax+0x49],dl
  41c149:	inc    ecx
  41c14a:	xchg   ebp,eax
  41c14b:	ins    BYTE PTR es:[edi],dx
  41c14c:	pusha  
  41c14d:	push   ebx
  41c14e:	inc    edx
  41c14f:	and    ah,BYTE PTR [edi-0x7f4b4fac]
  41c155:	pop    eax
  41c156:	xchg   esi,eax
  41c157:	hlt    
  41c158:	adc    BYTE PTR [edx],0x4c
  41c15b:	cld    
  41c15c:	shr    DWORD PTR [ebx],cl
  41c15e:	mov    edi,0xd9ff6214
  41c163:	cld    
  41c164:	repz push ebx
  41c166:	fchs   
  41c168:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c169:	mov    al,ds:0x67cf0db1
  41c16e:	mov    esi,0x4bc9cc60
  41c173:	pop    eax
  41c174:	test   DWORD PTR [ecx],0x9b2ab5f2
  41c17a:	mov    WORD PTR [ebx+edi*1+0x3f],es
  41c17e:	push   ds
  41c17f:	ja     0x41c115
  41c181:	jae    0x41c1d3
  41c183:	retf   0xfebc
  41c186:	out    dx,eax
  41c187:	xchg   ecx,eax
  41c188:	mov    eax,ds:0x111858ee
  41c18d:	pop    ebp
  41c18e:	cmp    DWORD PTR [eax-0x518fe8c0],ebp
  41c194:	sbb    BYTE PTR fs:[ebx],0xe2
  41c198:	je     0x41c121
  41c19a:	mov    esp,DWORD PTR [ebp+ebp*2+0x48c1cd5c]
  41c1a1:	int    0xde
  41c1a3:	jmp    0x6c17b8f9
  41c1a8:	sbb    eax,0xf77d512f
  41c1ad:	ins    DWORD PTR es:[edi],dx
  41c1ae:	mov    dl,0x3
  41c1b0:	dec    ecx
  41c1b1:	call   0xa7e19bcd
  41c1b6:	sub    al,BYTE PTR [edi]
  41c1b8:	xchg   ch,dh
  41c1ba:	cmp    al,0xa3
  41c1bc:	push   ebx
  41c1bd:	jno    0x41c1a5
  41c1bf:	add    esp,DWORD PTR [ecx]
  41c1c1:	fwait
  41c1c2:	call   0xc7257c16
  41c1c7:	outs   dx,BYTE PTR ds:[esi]
  41c1c8:	or     eax,0xc7194ccd
  41c1cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ce:	push   0xcf3cf5eb
  41c1d3:	and    al,0xb9
  41c1d5:	jnp    0x41c186
  41c1d7:	adc    BYTE PTR [esp+esi*8],bh
  41c1da:	les    ebx,FWORD PTR [ebx-0x7da1623d]
  41c1e0:	mov    ebp,db6
  41c1e3:	cmc    
  41c1e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c1e5:	(bad)  
  41c1e6:	call   0xd8e3d406
  41c1eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c1ec:	cs shl ebx,1
  41c1ef:	adc    BYTE PTR [ebx+0x63a8fa75],ch
  41c1f5:	fdivr  QWORD PTR [edi+0x3d]
  41c1f8:	jmp    0x76f2f8b0
  41c1fd:	retf   
  41c1fe:	and    eax,0x9b942f61
  41c203:	dec    eax
  41c204:	out    dx,al
  41c205:	fdivrp st(5),st
  41c207:	call   0xdaaa4b05
  41c20c:	test   al,0x9
  41c20e:	in     eax,0x24
  41c210:	fld    DWORD PTR [edi+0x427b388b]
  41c216:	jge    0x41c248
  41c218:	mul    BYTE PTR [ebx-0x41]
  41c21b:	retf   0x929b
  41c21e:	(bad)  
  41c21f:	jae    0x41c295
  41c221:	sub    al,0xc3
  41c223:	gs (bad) 
  41c225:	fst    QWORD PTR [ebp+eax*4-0xc3b674d]
  41c22c:	sub    bh,BYTE PTR [ebx]
  41c22e:	outs   dx,DWORD PTR ds:[esi]
  41c22f:	push   edx
  41c230:	add    DWORD PTR [edx-0x30a593ad],edx
  41c236:	dec    ebx
  41c237:	and    eax,0xa81c7b9d
  41c23c:	lock dec edx
  41c23e:	jecxz  0x41c1e9
  41c240:	xor    eax,0x341e8107
  41c245:	xchg   esp,eax
  41c246:	(bad)  
  41c247:	(bad)  
  41c248:	sbb    BYTE PTR [esi+ecx*8],ah
  41c24b:	lods   eax,DWORD PTR ds:[esi]
  41c24c:	pop    eax
  41c24d:	fnsave [edx]
  41c24f:	inc    cl
  41c251:	shl    BYTE PTR [ecx-0x23],1
  41c254:	push   ebx
  41c255:	mov    ?,WORD PTR [esi-0x345c8422]
  41c25b:	sbb    DWORD PTR ds:0x94ae7e51,edx
  41c261:	lahf   
  41c262:	es inc ebp
  41c264:	push   ebp
  41c265:	ror    DWORD PTR [ebx+0x3],cl
  41c268:	mov    cl,cl
  41c26a:	ins    BYTE PTR es:[edi],dx
  41c26b:	das    
  41c26c:	pop    ecx
  41c26d:	xchg   ebp,eax
  41c26e:	arpl   WORD PTR [edx+0x9],si
  41c271:	jb     0x41c20a
  41c273:	frstor [ecx]
  41c275:	nop
  41c276:	scas   eax,DWORD PTR es:[edi]
  41c277:	jg     0x41c22d
  41c279:	push   0x33e66a21
  41c27e:	shl    DWORD PTR [ebx],1
  41c280:	retf   0xd328
  41c283:	push   ecx
  41c284:	out    0x65,eax
  41c286:	xchg   ecx,eax
  41c287:	adc    ebx,esi
  41c289:	mov    al,0x14
  41c28b:	jg     0x41c23e
  41c28d:	fistp  DWORD PTR [ecx+0x48a73741]
  41c293:	(bad)  
  41c294:	imul   ebp,esp,0x37
  41c297:	inc    ecx
  41c298:	fisttp WORD PTR [esp+edi*1]
  41c29b:	mov    dl,0x73
  41c29d:	jmp    0x41c22c
  41c29f:	jns    0x41c2a6
  41c2a1:	sbb    eax,0xf6b757d7
  41c2a6:	mov    edx,0xea07b772
  41c2ab:	inc    edi
  41c2ac:	jne    0x41c29c
  41c2ae:	fcomp  st(7)
  41c2b0:	and    al,0x15
  41c2b2:	mov    ecx,0xc3428334
  41c2b7:	cs jbe 0x41c2ba
  41c2ba:	stc    
  41c2bb:	adc    eax,0xb55c3e21
  41c2c0:	dec    ecx
  41c2c1:	jmp    0xd978:0xefdce73d
  41c2c8:	fist   DWORD PTR [ebx]
  41c2ca:	jle    0x41c298
  41c2cc:	pop    esp
  41c2cd:	cld    
  41c2ce:	cmp    al,0x20
  41c2d0:	cld    
  41c2d1:	cmp    edi,edx
  41c2d3:	outs   dx,DWORD PTR ds:[esi]
  41c2d4:	fsubr  QWORD PTR [ebp-0x24]
  41c2d7:	jne    0x41c2af
  41c2d9:	inc    edx
  41c2da:	mov    DWORD PTR [edi+edi*1-0x17c56d45],edi
  41c2e1:	adc    al,0xe
  41c2e3:	retf   
  41c2e4:	inc    ebp
  41c2e5:	jnp    0x41c271
  41c2e7:	add    DWORD PTR [ecx-0x6f1afc1],ebx
  41c2ed:	dec    ecx
  41c2ee:	pop    esi
  41c2ef:	aam    0xef
  41c2f1:	pop    esi
  41c2f2:	cmp    dh,BYTE PTR [ebx+ecx*4+0x1f]
  41c2f6:	jne    0x41c2e2
  41c2f8:	ret    0xeb93
  41c2fb:	ret    
  41c2fc:	pop    es
  41c2fd:	cmp    DWORD PTR [esi-0x30e46dcd],esi
  41c303:	or     dh,BYTE PTR [ebx+esi*8-0x54]
  41c307:	cmp    BYTE PTR ds:0x1a764e56,al
  41c30d:	or     DWORD PTR [eax-0x3800320b],ebx
  41c313:	jne    0x41c38d
  41c315:	mov    al,ds:0x9e6904fc
  41c31a:	jge    0x41c39a
  41c31c:	lods   eax,DWORD PTR ds:[esi]
  41c31d:	sbb    edx,eax
  41c31f:	ds xor eax,0x3e0ef838
  41c325:	dec    ebp
  41c326:	adc    BYTE PTR [esi],ah
  41c328:	int3   
  41c329:	je     0x41c2f6
  41c32b:	push   esp
  41c32c:	jo     0x41c2f2
  41c32e:	nop
  41c32f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c330:	inc    esi
  41c331:	data16 jne 0x41c306
  41c334:	lods   eax,DWORD PTR ds:[esi]
  41c335:	xlat   BYTE PTR ds:[ebx]
  41c336:	xor    al,0x9e
  41c338:	gs enter 0xb47,0x2e
  41c33d:	int3   
  41c33e:	outs   dx,BYTE PTR ds:[esi]
  41c33f:	xor    DWORD PTR [edx-0x6bbd1a34],esp
  41c345:	mov    BYTE PTR [ebx+eiz*8-0x56ba6992],al
  41c34c:	fild   QWORD PTR [edi]
  41c34e:	ss push ebx
  41c350:	sub    BYTE PTR [esi-0x7ddc566d],dl
  41c356:	dec    edi
  41c357:	ret    
  41c358:	pop    edi
  41c359:	inc    esi
  41c35a:	dec    esi
  41c35b:	cmp    BYTE PTR [ebx-0x3cfb4931],0xad
  41c362:	jp     0x41c2fd
  41c364:	hlt    
  41c365:	test   BYTE PTR [esi-0x1ced8ae0],ch
  41c36b:	mov    cl,0xf1
  41c36d:	mov    eax,ds:0x463fa042
  41c372:	std    
  41c373:	shr    edx,cl
  41c375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c376:	mov    DWORD PTR [ecx],ebp
  41c378:	dec    eax
  41c379:	test   eax,0xfcb43a55
  41c37e:	pop    es
  41c37f:	xchg   ebx,eax
  41c380:	mov    es,WORD PTR [ebx+0x11ee9bdc]
  41c386:	or     al,0xf1
  41c388:	loopne 0x41c3b6
  41c38a:	int3   
  41c38b:	arpl   WORD PTR [eax-0x2d],dx
  41c38e:	sub    edi,0x8a5a0a1e
  41c394:	jb     0x41c31d
  41c396:	push   es
  41c397:	loope  0x41c3d1
  41c399:	iret   
  41c39a:	scas   eax,DWORD PTR es:[edi]
  41c39b:	leave  
  41c39c:	stos   BYTE PTR es:[edi],al
  41c39d:	fdiv   QWORD PTR [ebx-0x76]
  41c3a0:	mov    bh,0x67
  41c3a2:	loop   0x41c421
  41c3a4:	mov    edi,0x79756616
  41c3a9:	mov    bl,dh
  41c3ab:	dec    edx
  41c3ac:	pop    ebx
  41c3ad:	pop    ebx
  41c3ae:	call   0x6fba:0x8bb47
  41c3b5:	pop    eax
  41c3b6:	mov    al,0x99
  41c3b8:	mov    ds:0x18346a54,eax
  41c3bd:	mov    edi,0x54a5d88f
  41c3c2:	(bad)  
  41c3c3:	push   0xffffff97
  41c3c5:	outs   dx,DWORD PTR ds:[esi]
  41c3c6:	into   
  41c3c7:	push   ss
  41c3c8:	push   ds
  41c3c9:	scas   eax,DWORD PTR es:[edi]
  41c3ca:	sub    eax,0xa22778a
  41c3cf:	jnp    0x41c396
  41c3d1:	sbb    BYTE PTR [edi-0x6081051],al
  41c3d7:	mov    ecx,ecx
  41c3d9:	cmp    eax,0x6b701ab3
  41c3de:	mul    BYTE PTR [edx+0x47]
  41c3e1:	push   0xab8ac695
  41c3e6:	daa    
  41c3e7:	shl    DWORD PTR [ebp+0x56],1
  41c3ea:	dec    edi
  41c3ec:	sbb    al,0x29
  41c3ee:	les    edx,FWORD PTR [edx-0x55c3ff9]
  41c3f4:	cmp    edi,DWORD PTR [ebx]
  41c3f6:	lods   eax,DWORD PTR ds:[esi]
  41c3f7:	cmp    esi,0x31e555ac
  41c3fd:	mov    WORD PTR [esi-0x44],?
  41c400:	div    DWORD PTR [ecx+ecx*8]
  41c403:	ds xchg edx,eax
  41c405:	mov    edi,0x4d013c53
  41c40a:	pushf  
  41c40b:	xchg   edi,eax
  41c40c:	mov    es,eax
  41c40e:	dec    ecx
  41c40f:	rcr    BYTE PTR [esi],1
  41c411:	jo     0x41c47e
  41c413:	cld    
  41c414:	mov    al,ds:0xc45ad87b
  41c419:	js     0x41c3cd
  41c41b:	(bad)  
  41c41c:	and    eax,0x93bcc32
  41c421:	xchg   ebx,esp
  41c423:	dec    esp
  41c424:	mov    bh,0x5a
  41c426:	or     al,0xf8
  41c428:	pop    es
  41c429:	push   es
  41c42a:	pop    ebx
  41c42b:	int3   
  41c42c:	mov    ch,dh
  41c42e:	inc    ebx
  41c42f:	or     cl,dh
  41c431:	fadd   st,st(4)
  41c433:	xor    al,0x30
  41c435:	or     al,0x48
  41c437:	js     0x41c443
  41c439:	fst    QWORD PTR [esi+esi*2]
  41c43c:	xor    esp,DWORD PTR [ecx-0x46]
  41c43f:	mov    esp,0xc4bda994
  41c444:	push   esi
  41c445:	popa   
  41c446:	and    ch,cl
  41c448:	pop    eax
  41c449:	test   ch,ch
  41c44b:	pop    ebx
  41c44c:	dec    esi
  41c44d:	lea    eax,[esi+ebx*1-0x22]
  41c451:	cld    
  41c452:	inc    ebp
  41c453:	pop    esi
  41c454:	or     al,0xc
  41c456:	pop    esi
  41c457:	dec    edi
  41c458:	lds    esp,FWORD PTR [ebx-0x2f]
  41c45b:	and    dl,0x41
  41c45e:	sti    
  41c45f:	pop    ds
  41c460:	int3   
  41c461:	out    0x3c,eax
  41c463:	out    0xae,al
  41c465:	outs   dx,BYTE PTR ds:[esi]
  41c466:	mov    eax,0x39ea396
  41c46b:	push   ds
  41c46c:	cld    
  41c46d:	addr16 hlt 
  41c46f:	cmp    DWORD PTR [edx],esi
  41c471:	ret    0xb44e
  41c474:	jg     0x41c4c7
  41c476:	shr    bh,0xe5
  41c479:	jno    0x41c4bb
  41c47b:	dec    esp
  41c47c:	or     BYTE PTR [esi+0x48],dl
  41c47f:	xchg   DWORD PTR [ebx+0x56],edi
  41c482:	ss fucomip st,st(7)
  41c485:	cmp    al,0xeb
  41c487:	ins    DWORD PTR es:[edi],dx
  41c488:	daa    
  41c489:	pop    esi
  41c48a:	into   
  41c48b:	sbb    edi,eax
  41c48d:	and    ebx,DWORD PTR [ebx+0x9a4a216]
  41c493:	cmc    
  41c494:	add    esi,DWORD PTR [ecx-0x3]
  41c497:	pusha  
  41c498:	test   al,0x72
  41c49a:	mov    ah,0x3e
  41c49c:	fmul   QWORD PTR [ecx-0x7cd56fee]
  41c4a2:	push   0x8ad80aca
  41c4a7:	or     DWORD PTR [ecx-0x64],edi
  41c4aa:	jb     0x41c509
  41c4ac:	xlat   BYTE PTR ds:[ebx]
  41c4ad:	dec    edi
  41c4ae:	ins    DWORD PTR es:[edi],dx
  41c4af:	hlt    
  41c4b0:	push   ds
  41c4b1:	cmp    eax,0x585da4c4
  41c4b6:	push   eax
  41c4b7:	aas    
  41c4b8:	pop    ebx
  41c4b9:	dec    edi
  41c4ba:	pop    esp
  41c4bb:	aaa    
  41c4bc:	mov    edx,0xbdf26fe6
  41c4c1:	adc    DWORD PTR [edx+0x3c94936e],ecx
  41c4c7:	pop    edi
  41c4c8:	mov    dh,bl
  41c4ca:	(bad)  
  41c4cb:	in     eax,0x97
  41c4cd:	pop    eax
  41c4ce:	jp     0x41c48b
  41c4d0:	rcr    BYTE PTR [ebx+0x78],1
  41c4d3:	sbb    eax,edx
  41c4d5:	(bad)  
  41c4d6:	and    ah,ch
  41c4d8:	adc    ebx,DWORD PTR [eax-0x6b]
  41c4db:	xchg   edi,eax
  41c4dc:	sbb    edi,eax
  41c4de:	push   esi
  41c4df:	add    DWORD PTR [edi],ebp
  41c4e1:	mov    ah,0xe2
  41c4e3:	mov    ?,WORD PTR [edi+ebx*2]
  41c4e6:	ja     0x41c488
  41c4e8:	xor    esp,edx
  41c4ea:	fadd   DWORD PTR [esi+eiz*4-0x63cf2348]
  41c4f1:	cmp    bl,BYTE PTR [edi+0x23]
  41c4f4:	test   ebx,edi
  41c4f6:	cs lock cmp al,0xee
  41c4fa:	(bad)  
  41c4fb:	fcmovnu st,st(7)
  41c4fd:	shl    BYTE PTR [ebp+0x51adcffb],1
  41c503:	in     eax,dx
  41c504:	mov    BYTE PTR [esp+ebx*8+0x5bb06a42],ah
  41c50b:	cmp    eax,0xdc1dfbef
  41c510:	dec    eax
  41c511:	repnz sub DWORD PTR [ecx],0x497a0309
  41c518:	pop    esi
  41c519:	inc    eax
  41c51a:	arpl   bx,dx
  41c51c:	fstp   QWORD PTR [edx+0x8]
  41c51f:	into   
  41c520:	adc    BYTE PTR [ecx-0x71],ch
  41c523:	pop    esp
  41c524:	sub    eax,0xd14f4c73
  41c529:	inc    edi
  41c52a:	mov    eax,0x63df0145
  41c52f:	cdq    
  41c530:	sbb    eax,0xffffffeb
  41c533:	add    BYTE PTR [edi],bl
  41c535:	(bad)  
  41c536:	loope  0x41c514
  41c538:	push   esp
  41c539:	sub    ecx,ecx
  41c53b:	cmp    ah,dl
  41c53d:	test   DWORD PTR ds:0x3fa48961,esp
  41c543:	call   0x7786813c
  41c548:	jge    0x41c5b2
  41c54a:	dec    ebx
  41c54b:	inc    esp
  41c54c:	ins    DWORD PTR es:[edi],dx
  41c54d:	cmp    esi,DWORD PTR [ecx+0x3bd8754d]
  41c553:	sub    al,0xd2
  41c555:	cwde   
  41c556:	cmp    ebx,edx
  41c558:	add    DWORD PTR [edx+0x7d],ebp
  41c55b:	es sbb al,0x80
  41c55e:	pop    edx
  41c55f:	(bad)  
  41c560:	mov    DWORD PTR [esi-0x26],esi
  41c563:	add    ebp,eax
  41c565:	pop    ebp
  41c566:	inc    edx
  41c567:	frstor [esi-0x5582496d]
  41c56d:	pop    ebx
  41c56e:	dec    ecx
  41c56f:	das    
  41c570:	in     eax,dx
  41c571:	jge    0x41c560
  41c573:	mov    ds,WORD PTR [edx]
  41c575:	retf   0xd007
  41c578:	imul   ebx,ebp,0xdbc99dd8
  41c57e:	xor    dh,ah
  41c580:	jl     0x41c5e5
  41c582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c583:	aas    
  41c584:	jno    0x41c569
  41c586:	sub    esp,edi
  41c588:	push   ss
  41c589:	repnz push ecx
  41c58b:	sbb    al,0x26
  41c58d:	ins    BYTE PTR es:[edi],dx
  41c58e:	mov    dl,0x48
  41c590:	int3   
  41c591:	adc    DWORD PTR [edx-0x3a20bc4c],edi
  41c597:	jecxz  0x41c549
  41c599:	dec    edx
  41c59a:	xchg   edi,eax
  41c59b:	scas   eax,DWORD PTR es:[edi]
  41c59c:	pop    ebp
  41c59d:	jns    0x41c584
  41c59f:	mov    al,0xef
  41c5a1:	cld    
  41c5a2:	dec    edx
  41c5a3:	cmovbe edx,DWORD PTR [eax+0xff4f8a]
  41c5aa:	jnp    0x41c5ad
  41c5ac:	and    eax,0x29e55b3c
  41c5b1:	sbb    ebp,esi
  41c5b3:	loop   0x41c54b
  41c5b5:	mov    ds:0x106eacae,eax
  41c5ba:	dec    edi
  41c5bb:	mov    dl,0x66
  41c5bd:	pushf  
  41c5be:	jns    0x41c544
  41c5c0:	pop    ss
  41c5c1:	or     BYTE PTR [ebx+0x27],0xa8
  41c5c5:	repnz (bad) 
  41c5c7:	out    0x93,eax
  41c5c9:	cmp    ebp,0xffffffe5
  41c5cc:	xor    DWORD PTR [ebx],ecx
  41c5ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c5cf:	pop    edi
  41c5d0:	inc    edi
  41c5d1:	sub    al,0x95
  41c5d3:	xchg   edi,eax
  41c5d4:	cmp    BYTE PTR [ebp-0x7b],dl
  41c5d7:	rol    BYTE PTR [edi-0x45],cl
  41c5da:	imul   edx,ebp,0x96468a3b
  41c5e0:	inc    edi
  41c5e1:	sbb    bl,al
  41c5e3:	ror    esi,0xd2
  41c5e6:	ja     0x41c644
  41c5e8:	repz call 0x986f199e
  41c5ee:	xor    dl,dl
  41c5f0:	popf   
  41c5f1:	jge    0x41c5a0
  41c5f3:	add    al,0x2f
  41c5f5:	mov    ds:0x4e72bb4a,al
  41c5fa:	mov    ah,0xc2
  41c5fc:	jl     0x41c61f
  41c5fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c5ff:	sub    BYTE PTR [edi-0x3ae97a81],0xd
  41c606:	pop    edi
  41c607:	inc    ebx
  41c608:	adc    DWORD PTR [esi],0x61
  41c60b:	int    0x82
  41c60d:	pop    ebp
  41c60e:	xchg   DWORD PTR cs:[edx-0x52d2109f],edi
  41c615:	mov    ds:0x70301fd1,al
  41c61a:	outs   dx,DWORD PTR ds:[esi]
  41c61b:	and    DWORD PTR [edx-0x48],esi
  41c61e:	retf   
  41c61f:	mov    edx,0xe36a6dfd
  41c624:	bnd jne 0x41c65f
  41c627:	out    dx,al
  41c628:	ds mov ch,0xec
  41c62b:	mov    dl,0x1b
  41c62d:	fstp   QWORD PTR [edx+0x63e45736]
  41c633:	push   cs
  41c634:	nop
  41c635:	cs das 
  41c637:	std    
  41c638:	pop    ebx
  41c639:	mov    bl,0x34
  41c63b:	fnsave [edx+0x79]
  41c63e:	mov    ch,0xd7
  41c640:	mov    gs,WORD PTR [ebx-0x76becbd9]
  41c646:	mov    ?,WORD PTR [esi-0x8]
  41c649:	sti    
  41c64a:	mov    esi,0x17b2cdc3
  41c64f:	pop    edx
  41c650:	inc    esp
  41c651:	gs xchg bl,al
  41c654:	mov    BYTE PTR [eax-0x3d],ch
  41c657:	or     al,0x15
  41c659:	push   es
  41c65a:	fistp  WORD PTR [eax+0x48]
  41c65d:	aaa    
  41c65e:	add    DWORD PTR [edi-0x5753b2df],esi
  41c664:	imul   esi,DWORD PTR [ecx-0x297f836c],0x20c5b083
  41c66e:	xchg   BYTE PTR [edx],dh
  41c670:	mov    esi,0xe469659e
  41c675:	xor    al,0x7c
  41c677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c678:	mov    dh,0x9
  41c67a:	or     esp,esi
  41c67c:	sub    BYTE PTR [edi-0x43e8f87f],bl
  41c682:	enter  0xb2d9,0x73
  41c686:	sti    
  41c687:	aaa    
  41c688:	lods   eax,DWORD PTR ds:[esi]
  41c689:	sub    DWORD PTR [ecx+edi*2+0x82afcd2],ecx
  41c690:	loop   0x41c70a
  41c692:	xlat   BYTE PTR ds:[ebx]
  41c693:	popa   
  41c694:	jecxz  0x41c695
  41c696:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c697:	pushf  
  41c698:	sti    
  41c699:	and    eax,0x3713894f
  41c69e:	xor    eax,0x82fe3dd4
  41c6a3:	xchg   esi,eax
  41c6a4:	xchg   esi,eax
  41c6a5:	test   eax,0x883bea12
  41c6aa:	aam    0xd1
  41c6ac:	sbb    BYTE PTR [edx-0x14],dl
  41c6af:	inc    eax
  41c6b0:	jecxz  0x41c663
  41c6b2:	scas   al,BYTE PTR es:[edi]
  41c6b3:	sahf   
  41c6b4:	idiv   bp
  41c6b7:	clc    
  41c6b8:	or     eax,DWORD PTR [esi+0x2c]
  41c6bb:	clc    
  41c6bc:	imul   edi,eax,0xd8fb94e
  41c6c2:	pop    es
  41c6c3:	mov    WORD PTR [ebp+0x2332175f],cs
  41c6c9:	xor    al,BYTE PTR [ebx]
  41c6cb:	ss xchg edx,eax
  41c6cd:	and    eax,0x17b6345
  41c6d2:	push   edx
  41c6d3:	daa    
  41c6d4:	mov    al,ds:0xf2c26ec1
  41c6d9:	sbb    edi,ecx
  41c6db:	int    0x4b
  41c6dd:	push   ds
  41c6de:	inc    ebp
  41c6df:	xchg   edi,eax
  41c6e0:	and    bl,BYTE PTR [edx]
  41c6e2:	sbb    DWORD PTR [ebp+0x67edd119],esi
  41c6e8:	sbb    eax,0x7da364be
  41c6ed:	stc    
  41c6ee:	cmp    ebx,DWORD PTR [eax]
  41c6f0:	xor    eax,0xb4db124d
  41c6f5:	xchg   edx,eax
  41c6f6:	inc    edx
  41c6f7:	je     0x41c696
  41c6f9:	sbb    cl,ch
  41c6fb:	add    al,0x24
  41c6fd:	push   eax
  41c6fe:	mov    edx,0xa6a7b259
  41c703:	sbb    eax,0xd028c627
  41c708:	add    esp,DWORD PTR cs:[eax+0x6f606e45]
  41c70f:	fisttp DWORD PTR [ecx-0x6f]
  41c712:	dec    BYTE PTR [ebx-0x115c45f9]
  41c718:	cmc    
  41c719:	jno    0x41c74a
  41c71b:	mov    eax,ds:0xa7f4929c
  41c720:	mov    edi,0x8917ba33
  41c725:	jmp    0x41c6f0
  41c727:	ins    DWORD PTR es:[edi],dx
  41c728:	popf   
  41c729:	xchg   edi,eax
  41c72a:	ds or  al,0xd1
  41c72d:	adc    al,0xc
  41c72f:	mov    eax,ds:0x149757d8
  41c734:	mov    ah,0xee
  41c736:	(bad)  
  41c738:	adc    edx,esi
  41c73a:	imul   esp,DWORD PTR [ecx],0x39
  41c73d:	sbb    DWORD PTR [ecx],ecx
  41c73f:	mov    al,0x81
  41c741:	out    dx,al
  41c742:	xor    cl,BYTE PTR [edi+0x22]
  41c745:	pop    ds
  41c746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c747:	fist   DWORD PTR [esi]
  41c749:	or     edi,ebp
  41c74b:	sub    edi,DWORD PTR [ecx+0x59f44304]
  41c751:	fld    QWORD PTR [edx+esi*8]
  41c754:	int    0x80
  41c756:	or     cl,BYTE PTR [ecx-0x51]
  41c759:	jno    0x41c72a
  41c75b:	icebp  
  41c75c:	push   ss
  41c75d:	gs iret 
  41c75f:	mov    BYTE PTR [bx+di-0x1],bl
  41c763:	mov    ebp,0x34805f12
  41c768:	sbb    al,0xac
  41c76a:	push   esi
  41c76b:	int    0xd2
  41c76d:	enter  0x4401,0x42
  41c771:	cmp    cl,BYTE PTR [ecx]
  41c773:	and    bl,BYTE PTR [ebp+ecx*1+0x57458552]
  41c77a:	pop    ebp
  41c77b:	and    bh,al
  41c77d:	or     BYTE PTR [edi+0x3ed487e2],dl
  41c783:	popa   
  41c784:	fcmovne st,st(0)
  41c786:	mov    eax,0x228a3502
  41c78b:	mov    ch,0xe7
  41c78d:	pop    ecx
  41c78e:	xor    dh,dl
  41c790:	pop    edx
  41c791:	pop    ecx
  41c792:	push   esi
  41c793:	stos   BYTE PTR es:[edi],al
  41c794:	mov    ah,0x19
  41c796:	adc    al,BYTE PTR [edi]
  41c798:	loop   0x41c801
  41c79a:	outs   dx,BYTE PTR ds:[esi]
  41c79b:	repz push ebx
  41c79d:	(bad)  
  41c79e:	popaw  
  41c7a0:	pop    es
  41c7a1:	fnstenv [esi+ecx*8-0x770db9e8]
  41c7a8:	cmp    eax,0x348b0909
  41c7ad:	push   ds
  41c7ae:	imul   edi,DWORD PTR [esi],0x33
  41c7b1:	mov    ds:0x80be0420,al
  41c7b6:	or     esp,DWORD PTR [edx]
  41c7b8:	mov    ds:0xe2863cea,eax
  41c7bd:	add    bh,cl
  41c7bf:	div    DWORD PTR [edi]
  41c7c1:	and    DWORD PTR [esi+0x77],eax
  41c7c4:	xchg   esp,eax
  41c7c5:	dec    esi
  41c7c6:	and    al,0xd8
  41c7c8:	cmp    al,0xc1
  41c7ca:	mov    eax,0x32ca6e85
  41c7cf:	movups xmm1,XMMWORD PTR [edx+0x7944dcd8]
  41c7d6:	(bad)  
  41c7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7d8:	jmp    0x41c799
  41c7da:	push   ds
  41c7db:	(bad)  
  41c7dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7dd:	xchg   ecx,eax
  41c7de:	jmp    0x41c815
  41c7e0:	enter  0xbc4f,0x2
  41c7e4:	into   
  41c7e5:	dec    esp
  41c7e6:	fcmovnbe st,st(3)
  41c7e8:	scas   al,BYTE PTR es:[edi]
  41c7e9:	popa   
  41c7ea:	jnp    0x41c7af
  41c7ec:	inc    ecx
  41c7ed:	mov    WORD PTR [edi-0x3a],fs
  41c7f0:	or     DWORD PTR [ebp-0x5070ef9d],edi
  41c7f6:	mov    ds:0xb8c7a16c,eax
  41c7fb:	into   
  41c7fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7fd:	shl    BYTE PTR [edi+0x1d48d8fa],0xed
  41c804:	addr16 daa 
  41c806:	mov    al,0x7a
  41c808:	sub    BYTE PTR [edx+eiz*8-0x3b7ae7e],bh
  41c80f:	mov    bh,0x80
  41c811:	in     eax,dx
  41c812:	xlat   BYTE PTR ds:[ebx]
  41c813:	sahf   
  41c814:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c815:	aaa    
  41c816:	ret    
  41c817:	mov    ds:0x5a1c0ec6,al
  41c81c:	fcom   st(1)
  41c81e:	lea    esi,[ecx+0x5131852a]
  41c824:	mov    ch,0xcd
  41c826:	nop
  41c827:	jno    0x41c855
  41c829:	mul    BYTE PTR [esi-0x17]
  41c82c:	in     eax,dx
  41c82d:	dec    ecx
  41c82e:	xchg   esp,eax
  41c82f:	aaa    
  41c830:	dec    ebp
  41c831:	stos   DWORD PTR es:[edi],eax
  41c832:	mov    edx,0x7f9e9ae2
  41c837:	jecxz  0x41c8b0
  41c839:	inc    ecx
  41c83a:	ror    cl,cl
  41c83c:	scas   eax,DWORD PTR es:[edi]
  41c83d:	mov    bh,0x66
  41c83f:	into   
  41c840:	imul   BYTE PTR [eax]
  41c842:	sub    ecx,ebp
  41c844:	cs (bad) 
  41c846:	call   DWORD PTR [edi]
  41c848:	dec    esp
  41c849:	cld    
  41c84a:	add    ecx,ebp
  41c84c:	hlt    
  41c84d:	xor    al,0x3f
  41c84f:	pop    eax
  41c851:	lds    eax,FWORD PTR [eax+0x56953838]
  41c857:	ja     0x41c7e5
  41c859:	sbb    eax,0xfe1b77d0
  41c85e:	mov    ds:0x64075eef,al
  41c863:	fisttp QWORD PTR [eax]
  41c865:	pop    eax
  41c866:	sub    ecx,ebx
  41c868:	neg    BYTE PTR ds:0x50a9bd4f
  41c86e:	test   eax,0x71e4387c
  41c873:	and    BYTE PTR [edi+0x7407e778],cl
  41c879:	stos   DWORD PTR es:[edi],eax
  41c87a:	inc    ebx
  41c87b:	repz out dx,eax
  41c87d:	push   ebx
  41c87e:	jb     0x41c814
  41c880:	jl     0x41c8ea
  41c882:	inc    ebx
  41c883:	inc    eax
  41c884:	lods   al,BYTE PTR ds:[esi]
  41c885:	pop    edi
  41c886:	clc    
  41c887:	(bad)  
  41c888:	cmp    DWORD PTR [ebx],esi
  41c88a:	xor    ah,BYTE PTR [ecx+0x6a343cda]
  41c890:	or     BYTE PTR [edx-0x3121c2ac],bl
  41c896:	mov    ebx,DWORD PTR [edi+0x4b]
  41c899:	fistp  QWORD PTR [edi+0x30]
  41c89c:	clc    
  41c89d:	clc    
  41c89e:	popa   
  41c89f:	pushf  
  41c8a0:	dec    ebp
  41c8a1:	pushf  
  41c8a2:	jge    0x41c8a4
  41c8a4:	ret    0xbace
  41c8a7:	mov    WORD PTR [edx+ebp*1],es
  41c8aa:	loop   0x41c911
  41c8ac:	or     eax,0x3d9e4e42
  41c8b1:	fmul   DWORD PTR [edi+0x55]
  41c8b4:	das    
  41c8b5:	imul   bh
  41c8b7:	rcl    DWORD PTR [edi],0xe8
  41c8ba:	shr    BYTE PTR [ecx],1
  41c8bc:	mov    ebp,0x44bd8177
  41c8c1:	add    al,0xd0
  41c8c3:	dec    ebx
  41c8c4:	(bad)  
  41c8c5:	loop   0x41c8e7
  41c8c7:	and    eax,0x204d7c2
  41c8cc:	dec    eax
  41c8cd:	sub    DWORD PTR [ecx],esi
  41c8cf:	dec    ebx
  41c8d0:	dec    esp
  41c8d1:	jmp    0xd00d:0xff653fef
  41c8d8:	inc    edx
  41c8d9:	add    eax,0x161aa3c8
  41c8de:	inc    ebp
  41c8df:	ret    0x8c23
  41c8e2:	int    0xfd
  41c8e4:	dec    eax
  41c8e5:	sub    BYTE PTR [edi+0x2f],dl
  41c8e8:	les    ebx,FWORD PTR [ebp+0x56]
  41c8eb:	mov    ecx,0x459eac0
  41c8f0:	add    eax,0xfb4082eb
  41c8f5:	and    DWORD PTR [esi-0x385d82f4],esp
  41c8fb:	bswap  ebx
  41c8fd:	jb     0x41c94b
  41c8ff:	xor    al,0x6c
  41c901:	idiv   BYTE PTR [ebx]
  41c903:	retf   0x60fe
  41c906:	pop    eax
  41c907:	addr16 dec eax
  41c909:	test   DWORD PTR [edx+0x70],ebx
  41c90c:	xchg   BYTE PTR [eax-0x8],ah
  41c90f:	xor    bh,bl
  41c911:	(bad)  
  41c912:	xor    BYTE PTR ds:0x625d7e89,al
  41c918:	mov    edi,0xb45432a6
  41c91d:	jg     0x41c996
  41c91f:	bound  edi,QWORD PTR [ecx-0x5c88139f]
  41c925:	pop    esp
  41c926:	repnz cwde 
  41c928:	cwde   
  41c929:	fcmovnu st,st(6)
  41c92b:	out    dx,eax
  41c92c:	nop
  41c92d:	into   
  41c92e:	or     eax,0xac7ce84a
  41c933:	jae    0x41c941
  41c935:	pop    esi
  41c936:	and    al,0x13
  41c938:	adc    BYTE PTR [esi],dh
  41c93a:	cld    
  41c93b:	inc    ecx
  41c93c:	xor    ecx,DWORD PTR [edi]
  41c93e:	pop    eax
  41c93f:	ficom  WORD PTR [edx+0x652a3941]
  41c945:	ror    BYTE PTR [edx+ebx*2-0x682fb67],cl
  41c94c:	and    esp,esi
  41c94e:	add    BYTE PTR [esi+0x324719d1],0x38
  41c955:	jle    0x41c97b
  41c957:	cmc    
  41c958:	imul   eax,edi,0xffffff8d
  41c95b:	jns    0x41c970
  41c95d:	cmp    ebp,DWORD PTR [eax]
  41c95f:	stos   BYTE PTR es:[edi],al
  41c960:	ins    DWORD PTR es:[edi],dx
  41c961:	imul   ecx,DWORD PTR [ecx-0x226a2bd8],0x60
  41c968:	int3   
  41c969:	sbb    eax,0xf34b400e
  41c96e:	sbb    al,BYTE PTR [eax-0x35b5015a]
  41c974:	mov    eax,DWORD PTR [ecx]
  41c976:	or     BYTE PTR [edi+0x49835fda],dh
  41c97c:	push   0x61b4d494
  41c981:	xchg   edx,eax
  41c982:	mov    bl,0xb5
  41c984:	call   0xd7f2fe16
  41c989:	jno    0x41c92f
  41c98b:	fcomip st,st(0)
  41c98d:	out    dx,eax
  41c98e:	lock (bad) 
  41c990:	mov    cl,0x72
  41c992:	aam    0x96
  41c994:	sub    ebp,DWORD PTR [ebx-0x3a]
  41c997:	push   edi
  41c998:	jp     0x41c930
  41c99a:	cmp    eax,0x43ef0b1f
  41c99f:	mul    BYTE PTR [ebp+0x170f9fe4]
  41c9a5:	stos   DWORD PTR es:[edi],eax
  41c9a6:	dec    eax
  41c9a7:	lods   al,BYTE PTR ds:[esi]
  41c9a8:	mov    ebx,0x637863f8
  41c9ad:	sub    esi,DWORD PTR ss:[esi-0x49]
  41c9b1:	in     al,0x29
  41c9b3:	cmp    edi,ecx
  41c9b5:	mov    eax,ds:0xf89a4b6f
  41c9ba:	sub    al,0xc8
  41c9bc:	in     al,0x31
  41c9be:	loopne 0x41c9e8
  41c9c0:	(bad)  
  41c9c1:	mov    edi,0xec38a054
  41c9c6:	jmp    0x1ad:0xa451dad6
  41c9cd:	pop    esi
  41c9ce:	xor    ebx,DWORD PTR ds:0x6068593d
  41c9d4:	mov    dh,BYTE PTR [esi+ebp*8+0x0]
  41c9d8:	test   ch,bl
  41c9da:	mov    al,0xd0
  41c9dc:	cld    
  41c9dd:	test   dh,ch
  41c9df:	push   cs
  41c9e0:	xchg   edx,eax
  41c9e1:	adc    ebp,eax
  41c9e3:	mov    esp,0xd2849a64
  41c9e8:	push   ss
  41c9e9:	xchg   edx,eax
  41c9ea:	loopne 0x41ca3a
  41c9ec:	mov    edx,0xe1d07e3f
  41c9f1:	push   eax
  41c9f3:	jg     0x41ca4e
  41c9f5:	mov    ah,BYTE PTR [ebx+ecx*8-0x6b75e0fd]
  41c9fc:	(bad)  [ebp-0x4252f6f5]
  41ca02:	sub    cl,BYTE PTR [edi-0xd]
  41ca05:	mov    ebp,0x34cd1d6f
  41ca0a:	rol    edi,1
  41ca0c:	shl    esp,0xac
  41ca0f:	hlt    
  41ca10:	std    
  41ca11:	mov    bh,0x37
  41ca13:	ret    
  41ca14:	mov    ?,WORD PTR [edx+0x59]
  41ca17:	gs mov ebp,0x95a135d1
  41ca1d:	push   edx
  41ca1e:	pusha  
  41ca1f:	stos   DWORD PTR es:[edi],eax
  41ca20:	repz mov ebx,0x2c8f4230
  41ca26:	out    dx,al
  41ca27:	mov    eax,DWORD PTR [esi]
  41ca29:	or     esp,DWORD PTR [ebx-0x23ceb0a0]
  41ca2f:	call   0x3be027b
  41ca34:	gs pop esi
  41ca36:	cmp    esi,DWORD PTR [eax+0x6e]
  41ca39:	addr16 jmpw 0xf97e
  41ca3e:	inc    ebp
  41ca3f:	dec    eax
  41ca40:	test   DWORD PTR [ecx+0x1],edi
  41ca43:	fmulp  st(0),st
  41ca45:	es add al,0xdd
  41ca48:	in     eax,0x82
  41ca4a:	aam    0x1b
  41ca4c:	(bad)  
  41ca4d:	fmul   DWORD PTR [eax-0x66]
  41ca50:	inc    ecx
  41ca51:	xor    DWORD PTR [ecx-0x2b],ebx
  41ca54:	repz adc DWORD PTR [ecx],0x4c324607
  41ca5b:	add    BYTE PTR [edi-0xf],al
  41ca5e:	dec    edx
  41ca5f:	fdivr  DWORD PTR ds:0xfc7865a0
  41ca65:	cmp    al,0x4a
  41ca67:	lea    esp,[esi+0x7b]
  41ca6a:	(bad)  
  41ca6b:	shl    BYTE PTR [ebx-0x78],0x7f
  41ca6f:	sub    al,0xc9
  41ca71:	inc    edx
  41ca72:	jecxz  0x41ca27
  41ca74:	mov    ch,0xf6
  41ca76:	push   edi
  41ca77:	push   esi
  41ca78:	push   ebp
  41ca79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca7a:	nop
  41ca7b:	push   cs
  41ca7c:	not    cl
  41ca7e:	sbb    al,0x1f
  41ca80:	inc    ebp
  41ca81:	iret   
  41ca82:	imul   esi,edi,0x18cdd73d
  41ca88:	(bad)  
  41ca89:	mov    fs,WORD PTR [ebp-0x45]
  41ca8c:	jmp    DWORD PTR [ecx]
  41ca8e:	gs mov edi,0xb03f1c0e
  41ca94:	mov    fs,WORD PTR [ecx+0x1f0cab4f]
  41ca9a:	or     BYTE PTR [edi-0x2d],bh
  41ca9d:	retf   
  41ca9e:	jmp    0x41ca8c
  41caa0:	stos   DWORD PTR es:[edi],eax
  41caa1:	and    BYTE PTR es:[edx+0xa],cl
  41caa5:	inc    edi
  41caa6:	popf   
  41caa7:	inc    eax
  41caa8:	std    
  41caa9:	repz (bad) 
  41caab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41caac:	cwde   
  41caad:	sub    eax,0x41a1593b
  41cab2:	loope  0x41caf7
  41cab4:	cs jmp 0x9b098338
  41caba:	inc    esp
  41cabb:	outs   dx,DWORD PTR ds:[esi]
  41cabc:	mov    al,0xbe
  41cabe:	lahf   
  41cabf:	imul   ebp,edi,0x920a9fe5
  41cac5:	cmp    eax,0x4cdac02
  41caca:	lods   eax,DWORD PTR ds:[esi]
  41cacb:	shl    ebp,0xf2
  41cace:	jae    0x41ca77
  41cad0:	adc    bl,0xac
  41cad3:	mov    bl,0xdf
  41cad5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cad6:	or     BYTE PTR [esi+0x3c],bh
  41cad9:	ins    DWORD PTR es:[edi],dx
  41cada:	jg     0x41cac8
  41cadc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cadd:	mov    esp,0xd69de360
  41cae2:	cdq    
  41cae3:	fidiv  DWORD PTR [edi-0x6c]
  41cae6:	cmp    al,dl
  41cae8:	xchg   ebp,eax
  41cae9:	or     ecx,DWORD PTR cs:[edx+0x3e]
  41caed:	xchg   ebx,eax
  41caee:	fild   WORD PTR [ecx]
  41caf0:	adc    BYTE PTR [edi],ah
  41caf2:	jecxz  0x41cafc
  41caf4:	stos   DWORD PTR es:[edi],eax
  41caf5:	and    al,0x87
  41caf7:	stc    
  41caf8:	pop    esp
  41caf9:	scas   eax,DWORD PTR es:[edi]
  41cafa:	adc    al,0xc0
  41cafc:	inc    esp
  41cafd:	pop    ebx
  41cafe:	int3   
  41caff:	inc    ebx
  41cb00:	test   eax,0x8ba0b2c5
  41cb05:	inc    edi
  41cb06:	ffree  st(5)
  41cb08:	xchg   ebx,eax
  41cb09:	int3   
  41cb0a:	mov    esi,0x39a12f86
  41cb0f:	dec    ecx
  41cb10:	push   0x7
  41cb12:	fbld   TBYTE PTR [edx-0x4dce1773]
  41cb18:	pusha  
  41cb19:	stos   BYTE PTR es:[edi],al
  41cb1a:	pushf  
  41cb1b:	fbld   TBYTE PTR ds:0x812b3906
  41cb21:	dec    eax
  41cb22:	enter  0x98cd,0x10
  41cb26:	mov    edi,0x8ff888dd
  41cb2b:	(bad)  
  41cb2c:	mov    bh,0x2b
  41cb2e:	stos   BYTE PTR es:[edi],al
  41cb2f:	push   esi
  41cb30:	pop    ebx
  41cb31:	cld    
  41cb32:	lock add BYTE PTR [esi],bl
  41cb35:	cmp    ecx,DWORD PTR [edx+0x3b]
  41cb38:	fstp   st(1)
  41cb3a:	fisub  DWORD PTR [esi+0x6c0325f1]
  41cb40:	lahf   
  41cb41:	push   es
  41cb42:	imul   esi,ebx,0x77
  41cb45:	sbb    edi,DWORD PTR [edi-0x79cd6574]
  41cb4b:	lock push edi
  41cb4d:	jmp    DWORD PTR ds:0xc4134f1
  41cb53:	inc    edx
  41cb54:	cdq    
  41cb55:	and    BYTE PTR [ebp-0x5],0x1b
  41cb59:	xor    BYTE PTR [edx-0x5d],al
  41cb5c:	mov    edi,0x160dd5f9
  41cb61:	jbe    0x41cb45
  41cb63:	sbb    DWORD PTR [esi-0x32],eax
  41cb66:	sbb    al,0xa5
  41cb68:	pusha  
  41cb69:	inc    ebx
  41cb6a:	es push 0x6a
  41cb6d:	in     eax,dx
  41cb6e:	in     al,dx
  41cb6f:	sbb    edx,edx
  41cb71:	jb     0x41cb02
  41cb73:	mov    ecx,0x5760d61a
  41cb78:	xor    BYTE PTR [eax+eiz*8-0x760efd50],bh
  41cb7f:	idiv   BYTE PTR [edx+0x39bc9162]
  41cb85:	jae    0x41cb6c
  41cb87:	xchg   ebx,eax
  41cb88:	jno    0x41cbdd
  41cb8a:	adc    bh,ah
  41cb8c:	adc    eax,0xcb8dceed
  41cb91:	and    ebp,0xa2574c52
  41cb97:	pop    ecx
  41cb98:	add    DWORD PTR [edi-0x489930b2],esi
  41cb9e:	pop    ss
  41cb9f:	fcomip st,st(0)
  41cba1:	sub    ebp,DWORD PTR [esi+0x3c23527b]
  41cba7:	xor    eax,0x32e5c3af
  41cbac:	(bad)  
  41cbad:	push   0x2e6504d6
  41cbb2:	mov    WORD PTR [eax],gs
  41cbb4:	mov    ebp,0xf0531f2f
  41cbb9:	sub    ebp,DWORD PTR [eax+0x4f16e2ac]
  41cbbf:	aam    0x7e
  41cbc1:	jl     0x41cb4c
  41cbc3:	mov    ds:0x9652596e,eax
  41cbc8:	sub    eax,0xb683e07f
  41cbcd:	popa   
  41cbce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cbcf:	out    0x1c,al
  41cbd1:	cli    
  41cbd2:	(bad)  
  41cbd3:	call   0x2cb6:0x53fa660b
  41cbda:	and    DWORD PTR [edx],edx
  41cbdc:	pop    es
  41cbdd:	push   esi
  41cbde:	dec    ebx
  41cbdf:	popf   
  41cbe0:	mul    dh
  41cbe2:	and    BYTE PTR [edi-0x53dc3e5f],dh
  41cbe8:	adc    al,0xb1
  41cbea:	xor    ch,BYTE PTR [eax+eiz*4]
  41cbed:	sub    al,0xa5
  41cbef:	retf   
  41cbf0:	add    al,0x80
  41cbf2:	xchg   edx,eax
  41cbf3:	sbb    al,0x0
  41cbf5:	pop    esi
  41cbf6:	inc    ecx
  41cbf7:	fnstenv [ecx-0x10]
  41cbfa:	cli    
  41cbfb:	mov    edi,0x8b97f90c
  41cc00:	lahf   
  41cc01:	scas   eax,DWORD PTR es:[edi]
  41cc02:	mov    DWORD PTR [ebp+0x2f6eb301],ecx
  41cc08:	inc    esi
  41cc09:	and    eax,edi
  41cc0b:	in     eax,dx
  41cc0c:	xchg   dl,ch
  41cc0e:	push   es
  41cc0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cc10:	push   ecx
  41cc11:	xchg   ah,ah
  41cc13:	mov    ebp,0xbc4f1c89
  41cc18:	sub    esp,DWORD PTR [eax+0x4394db31]
  41cc1e:	sbb    esp,edx
  41cc20:	mov    ch,0xc9
  41cc22:	ret    
  41cc23:	pusha  
  41cc24:	fst    st(2)
  41cc26:	cmp    cl,0x95
  41cc29:	out    0xd1,al
  41cc2b:	pop    esi
  41cc2c:	cs push 0x5dfcaf5c
  41cc32:	or     eax,0x641eece1
  41cc37:	jecxz  0x41cbe2
  41cc39:	ds inc ecx
  41cc3b:	shr    al,1
  41cc3d:	fs cmp edi,ebx
  41cc40:	push   esp
  41cc41:	aam    0x9a
  41cc43:	outs   dx,DWORD PTR ds:[esi]
  41cc44:	ret    0xdcb4
  41cc47:	dec    ecx
  41cc48:	rol    esi,cl
  41cc4a:	add    DWORD PTR [edi+ecx*2],ebp
  41cc4d:	mov    al,ds:0x135d6a29
  41cc52:	shr    DWORD PTR [edx-0x2a3ca8f0],0xb5
  41cc59:	inc    ebp
  41cc5a:	out    dx,al
  41cc5b:	xchg   edi,eax
  41cc5c:	enter  0x5fa7,0xaf
  41cc60:	outs   dx,BYTE PTR ds:[esi]
  41cc61:	pusha  
  41cc62:	mov    ss,WORD PTR [ebx-0x1d]
  41cc65:	loop   0x41cc0f
  41cc67:	shl    cl,cl
  41cc69:	sub    DWORD PTR [ecx+0x1a],edx
  41cc6c:	out    dx,eax
  41cc6d:	mov    dh,dh
  41cc6f:	ret    
  41cc70:	mov    WORD PTR [eax+0x65f01adf],ds
  41cc76:	pop    edi
  41cc77:	(bad)  
  41cc79:	lods   eax,DWORD PTR ds:[esi]
  41cc7a:	dec    ebx
  41cc7b:	inc    esi
  41cc7c:	ins    BYTE PTR es:[edi],dx
  41cc7d:	aad    0x18
  41cc7f:	daa    
  41cc80:	mov    ebp,ds
  41cc82:	inc    esi
  41cc83:	js     0x41ccbc
  41cc85:	rcr    ebp,1
  41cc87:	pop    ecx
  41cc88:	repz or edi,DWORD PTR [eax-0x78dab62c]
  41cc8f:	xchg   ecx,eax
  41cc90:	push   ds
  41cc91:	fcom   DWORD PTR [eax]
  41cc93:	rcl    DWORD PTR [eax],0xe0
  41cc96:	pop    ebp
  41cc97:	shl    cl,0x39
  41cc9a:	inc    ebx
  41cc9b:	cmp    ch,BYTE PTR [esi+esi*2-0x50]
  41cc9f:	sbb    eax,0xcab1a50
  41cca4:	loop   0x41cd0c
  41cca6:	jns    0x41cc87
  41cca8:	scas   eax,DWORD PTR es:[edi]
  41cca9:	and    BYTE PTR [ecx],ah
  41ccab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccac:	daa    
  41ccad:	inc    edx
  41ccae:	sbb    al,0xcc
  41ccb0:	mov    bl,0x82
  41ccb2:	mov    esi,0x461297d9
  41ccb7:	adc    ebp,DWORD PTR [edi+0x1e]
  41ccba:	cmp    dh,ah
  41ccbc:	push   ds
  41ccbd:	popa   
  41ccbe:	mov    dl,cl
  41ccc0:	inc    DWORD PTR [esi-0x7f7e0c8a]
  41ccc6:	call   0x5bd8:0xd210d5b1
  41cccd:	and    ch,cl
  41cccf:	loop   0x41cce4
  41ccd1:	rcr    DWORD PTR [edi+0x10],cl
  41ccd4:	pop    ecx
  41ccd5:	les    ebx,FWORD PTR [edx+0x26a81100]
  41ccdb:	mov    edx,es
  41ccdd:	ficom  DWORD PTR [edi-0x3c]
  41cce0:	test   eax,0x21b88867
  41cce5:	sub    eax,0x2a3ea4a0
  41ccea:	ins    BYTE PTR es:[edi],dx
  41cceb:	(bad)  
  41ccec:	adc    cl,ah
  41ccee:	mov    al,0x43
  41ccf0:	mov    ds:0x18dcbf5d,al
  41ccf5:	adc    bl,BYTE PTR [esi+0x4e]
  41ccf8:	jg     0x41cd13
  41ccfa:	or     BYTE PTR [esp+eax*8+0x35],cl
  41ccfe:	imul   ecx,DWORD PTR [eax-0x27],0x849f5b3a
  41cd05:	and    edx,DWORD PTR [edx]
  41cd07:	fild   WORD PTR [edx+0x469f807b]
  41cd0d:	shl    DWORD PTR [ecx],0x2e
  41cd10:	lahf   
  41cd11:	pop    esi
  41cd12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cd13:	das    
  41cd14:	pop    ebp
  41cd15:	sub    BYTE PTR ds:[ebx+0x49],dh
  41cd19:	out    0xff,eax
  41cd1b:	sub    DWORD PTR [eax+0x136fa0a5],edi
  41cd21:	add    esp,DWORD PTR [esi-0x5d087483]
  41cd27:	cs mov ?,ecx
  41cd2a:	mov    ebp,0x86dc8b3d
  41cd2f:	sbb    eax,0xca7d9ec3
  41cd34:	add    al,BYTE PTR [ebp-0x13a0fd3e]
  41cd3a:	ret    0x6bcc
  41cd3d:	outs   dx,DWORD PTR ds:[esi]
  41cd3e:	repnz and ebx,0x6e
  41cd42:	jle    0x41cd21
  41cd44:	mov    eax,ds:0x37c577e5
  41cd49:	aas    
  41cd4a:	sub    dl,BYTE PTR [esi+0x34]
  41cd4d:	inc    eax
  41cd4e:	jb     0x41cd3a
  41cd50:	and    DWORD PTR [ebp-0x504bf8a0],esp
  41cd56:	aaa    
  41cd57:	sar    DWORD PTR [ebx+0x6dc7872e],0x2
  41cd5e:	ja     0x41cd58
  41cd60:	call   0x8dd0:0xecef789c
  41cd67:	imul   edx,DWORD PTR [esi],0xc9506d60
  41cd6d:	ja     0x41cd41
  41cd6f:	pop    ds
  41cd70:	ins    DWORD PTR es:[edi],dx
  41cd71:	dec    edx
  41cd72:	add    DWORD PTR [eax+eax*2],esp
  41cd75:	idiv   BYTE PTR [ebp+0x373de72d]
  41cd7b:	jl     0x41cdf9
  41cd7d:	add    dl,BYTE PTR [ebx-0x42e3d4f4]
  41cd83:	shl    cl,1
  41cd85:	imul   ecx,eax,0xe82d61fd
  41cd8b:	loop   0x41ce07
  41cd8d:	pop    esp
  41cd8e:	test   eax,0x30e2bd2d
  41cd93:	jp     0x41cd65
  41cd95:	pop    eax
  41cd96:	xor    BYTE PTR ds:0x2ffdae2e,dh
  41cd9c:	jl     0x41cd71
  41cd9e:	sbb    eax,0x69ffbfc1
  41cda3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cda4:	mov    eax,0x2ef7f3f5
  41cda9:	cld    
  41cdaa:	mov    dl,0x6f
  41cdac:	xchg   edi,eax
  41cdad:	xchg   esi,eax
  41cdae:	push   edx
  41cdaf:	adc    cl,al
  41cdb1:	mov    edi,0xbe3d8663
  41cdb6:	adc    eax,0x1b4dbbaf
  41cdbb:	xchg   esp,eax
  41cdbc:	jns    0x41ce39
  41cdbe:	fld    st(4)
  41cdc0:	loope  0x41ce12
  41cdc2:	scas   eax,DWORD PTR es:[edi]
  41cdc3:	mov    WORD PTR [ebp-0x3f],?
  41cdc6:	jbe    0x41cd50
  41cdc8:	arpl   WORD PTR [esi-0x12],cx
  41cdcb:	inc    esp
  41cdcc:	ror    BYTE PTR [edx],1
  41cdce:	scas   eax,DWORD PTR es:[edi]
  41cdcf:	out    dx,eax
  41cdd0:	pushf  
  41cdd1:	into   
  41cdd2:	outs   dx,DWORD PTR ds:[esi]
  41cdd3:	or     eax,0x5f6d218b
  41cdd8:	dec    eax
  41cdd9:	sbb    eax,0x7631f01d
  41cdde:	sbb    ecx,DWORD PTR [ecx+edx*8+0x19ece477]
  41cde5:	sub    DWORD PTR [ecx+0x1],ecx
  41cde8:	cs dec esp
  41cdea:	mov    edx,0xb23ddfb
  41cdef:	pop    edx
  41cdf0:	test   DWORD PTR [edx],ebp
  41cdf2:	sub    BYTE PTR [edi],dl
  41cdf4:	dec    edi
  41cdf5:	sub    DWORD PTR [ebp-0x1c],edi
  41cdf8:	mov    cl,0xf0
  41cdfa:	addr16 and ebx,ebp
  41cdfd:	xchg   ecx,eax
  41cdfe:	fsub   QWORD PTR [ebp+0x62]
  41ce01:	mov    BYTE PTR [ebp-0x358bdb2b],cl
  41ce07:	aad    0x32
  41ce09:	sbb    eax,0x2f75bce0
  41ce0e:	sub    DWORD PTR [ecx],0xffffffdb
  41ce11:	sub    BYTE PTR [edx+0x26],bh
  41ce14:	inc    edx
  41ce15:	jp     0x41ce1b
  41ce17:	(bad)  
  41ce18:	sbb    cl,BYTE PTR ds:0xef7d049d
  41ce1e:	mov    ebx,0x710c09bf
  41ce23:	cwde   
  41ce24:	inc    BYTE PTR [ecx]
  41ce26:	adc    ebp,ebx
  41ce28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce29:	popa   
  41ce2a:	xchg   DWORD PTR [ebx+0xfeb73f7],edx
  41ce30:	sbb    al,0xf9
  41ce32:	cmc    
  41ce33:	div    DWORD PTR [eax-0x5c]
  41ce36:	xchg   esi,eax
  41ce37:	stos   DWORD PTR es:[edi],eax
  41ce38:	daa    
  41ce39:	out    dx,al
  41ce3a:	push   edx
  41ce3b:	pop    esp
  41ce3c:	or     dh,BYTE PTR [edi-0x3b]
  41ce3f:	xchg   esp,edi
  41ce41:	sti    
  41ce42:	xchg   ecx,eax
  41ce43:	xor    eax,0x3ab60c82
  41ce48:	sub    al,0x74
  41ce4a:	mov    ecx,edi
  41ce4c:	jg     0x41ceaa
  41ce4e:	ret    
  41ce4f:	pop    ebx
  41ce50:	jns    0x41ce52
  41ce52:	pop    edi
  41ce53:	(bad)  
  41ce54:	loopne 0x41ce10
  41ce56:	test   al,dh
  41ce58:	dec    edx
  41ce59:	cwde   
  41ce5a:	loopne 0x41cdfb
  41ce5c:	mov    ebx,0xd32b9b84
  41ce61:	dec    edi
  41ce62:	shr    ch,1
  41ce64:	cmp    esp,ebp
  41ce66:	add    al,BYTE PTR [edx+0x63]
  41ce69:	jl     0x41cdfa
  41ce6b:	mul    DWORD PTR [esi+esi*2-0x76d9ee3b]
  41ce72:	lods   eax,DWORD PTR ds:[esi]
  41ce73:	mov    ebp,ecx
  41ce75:	and    al,0x9b
  41ce77:	ret    
  41ce78:	sbb    BYTE PTR [ebx+eax*8],al
  41ce7b:	ret    
  41ce7c:	adc    al,0x79
  41ce7e:	cmp    al,0x33
  41ce80:	js     0x41ce1f
  41ce82:	fbstp  TBYTE PTR [eax-0x76b831ca]
  41ce88:	(bad)  
  41ce89:	pop    esi
  41ce8a:	stos   DWORD PTR es:[edi],eax
  41ce8b:	into   
  41ce8c:	add    BYTE PTR [edx-0x67],ah
  41ce8f:	daa    
  41ce90:	push   ebp
  41ce91:	scas   eax,DWORD PTR es:[edi]
  41ce92:	fisub  DWORD PTR [eax-0x5321bde5]
  41ce98:	inc    ebx
  41ce99:	mov    al,0xd0
  41ce9b:	ss ins BYTE PTR es:[edi],dx
  41ce9d:	nop
  41ce9e:	nop
  41ce9f:	shl    BYTE PTR [esi],0xb7
  41cea2:	test   DWORD PTR [esp+edx*2+0x7e0c0149],0xd468efb0
  41cead:	scas   eax,DWORD PTR es:[edi]
  41ceae:	repz pop gs
  41ceb1:	inc    edi
  41ceb2:	mov    ecx,0x18c698e2
  41ceb7:	(bad)  
  41ceb8:	pop    eax
  41ceb9:	int3   
  41ceba:	lods   eax,DWORD PTR ds:[esi]
  41cebb:	push   0xb2c5edfa
  41cec0:	mov    BYTE PTR [eax],0x7f
  41cec3:	cmp    ecx,DWORD PTR [ecx+0x32]
  41cec6:	mov    ch,BYTE PTR [ecx+0x52302200]
  41cecc:	fsub   DWORD PTR [edx]
  41cece:	jne    0x41ceb8
  41ced0:	cmp    BYTE PTR [ecx+0x742885a2],cl
  41ced6:	scas   eax,DWORD PTR es:[edi]
  41ced7:	cmp    eax,0xe95ef63e
  41cedc:	sub    eax,0xf9e1c7a8
  41cee1:	test   eax,0xe1fb7cca
  41cee7:	push   esp
  41cee8:	(bad)  
  41cee9:	dec    DWORD PTR [edi+esi*1-0x5fa31de3]
  41cef0:	and    ebx,edi
  41cef2:	add    BYTE PTR [ebx],cl
  41cef4:	push   0x519fc561
  41cef9:	sbb    eax,0x29338fcc
  41cefe:	xor    eax,ebp
  41cf00:	sub    eax,0x9fba2c38
  41cf05:	mov    dl,0x7f
  41cf07:	outs   dx,DWORD PTR ds:[esi]
  41cf08:	push   edi
  41cf09:	jnp    0x41cf4c
  41cf0b:	call   0xcbf6:0x5d2fa5b0
  41cf12:	jo     0x41cf1c
  41cf14:	xchg   ecx,eax
  41cf15:	mov    eax,0x20f901b4
  41cf1a:	aam    0x96
  41cf1c:	cmc    
  41cf1d:	mov    esp,DWORD PTR [ebp+eiz*8+0x5e4b1432]
  41cf24:	push   cs
  41cf25:	jp     0x41cf04
  41cf27:	in     al,0x49
  41cf29:	xlat   BYTE PTR ds:[ebx]
  41cf2a:	cmc    
  41cf2b:	(bad)  
  41cf2c:	cmc    
  41cf2d:	pop    ecx
  41cf2e:	and    al,0xbf
  41cf30:	mov    al,ds:0xc9cea389
  41cf35:	popf   
  41cf36:	add    al,BYTE PTR [edx-0x29811011]
  41cf3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf3d:	jmp    0x41cfb5
  41cf3f:	push   0xbe27e62c
  41cf44:	sbb    ch,BYTE PTR [edx+ecx*8-0x1ac52956]
  41cf4b:	sbb    eax,0xc989dde9
  41cf50:	sti    
  41cf51:	xor    al,0xf0
  41cf53:	pop    eax
  41cf54:	cld    
  41cf55:	mov    al,0xc0
  41cf57:	iret   
  41cf58:	mov    ecx,0x27bd9271
  41cf5d:	ror    BYTE PTR [edx],1
  41cf5f:	sub    al,0xbb
  41cf61:	nop
  41cf62:	xchg   esi,eax
  41cf63:	sub    cl,bl
  41cf65:	sub    ch,ch
  41cf67:	pop    esp
  41cf68:	data16 mov ds:0x5186dca4,al
  41cf6e:	je     0x41cf69
  41cf70:	adc    eax,0xf1ec3f93
  41cf75:	stos   BYTE PTR es:[edi],al
  41cf76:	lea    ebp,[esi]
  41cf78:	adc    ebp,ebx
  41cf7a:	les    edx,FWORD PTR [ebx+0x470e469e]
  41cf80:	loopne 0x41cffc
  41cf82:	mov    ebp,0x4513a153
  41cf87:	mov    edi,0x12c18810
  41cf8c:	leave  
  41cf8d:	mov    ebp,?
  41cf8f:	jp     0x41cf48
  41cf91:	mov    cl,0x58
  41cf93:	jecxz  0x41cf99
  41cf95:	adc    DWORD PTR [edx+0x793c22b3],ebx
  41cf9b:	add    eax,eax
  41cf9d:	and    ebp,DWORD PTR [esi-0x1643d5b4]
  41cfa3:	adc    dl,bh
  41cfa5:	pop    esi
  41cfa6:	sar    BYTE PTR [esi],1
  41cfa8:	push   0x363391e6
  41cfad:	pop    eax
  41cfae:	sub    al,0x52
  41cfb0:	jecxz  0x41d004
  41cfb2:	or     al,0xeb
  41cfb4:	leave  
  41cfb5:	sbb    DWORD PTR [esi+0x3413ddb0],edx
  41cfbb:	ret    0xdc1
  41cfbe:	sub    ebp,DWORD PTR [ebx+eax*2+0x4d]
  41cfc2:	sub    BYTE PTR [ecx],0x14
  41cfc5:	pop    es
  41cfc6:	inc    esi
  41cfc7:	pop    edi
  41cfc8:	or     DWORD PTR [edi+0x10],esi
  41cfcb:	lods   al,BYTE PTR ds:[esi]
  41cfcc:	sub    al,0xb4
  41cfce:	xchg   ebp,eax
  41cfcf:	stos   BYTE PTR es:[edi],al
  41cfd0:	xchg   DWORD PTR [esi+0x242f87db],ebx
  41cfd6:	test   DWORD PTR [ecx+0x4d],edx
  41cfd9:	es shl bh,0x3b
  41cfdd:	cdq    
  41cfde:	mov    esp,0xa536a9fd
  41cfe3:	leave  
  41cfe4:	daa    
  41cfe5:	jmp    0x90f24b79
  41cfea:	retf   0x13c4
  41cfed:	scas   al,BYTE PTR es:[edi]
  41cfee:	add    DWORD PTR [ebp+0x6],edi
  41cff1:	(bad)  
  41cff2:	pop    eax
  41cff3:	or     DWORD PTR [ebp-0x53c98ec0],eax
  41cff9:	pop    ss
  41cffa:	daa    
  41cffb:	div    cl
  41cffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cffe:	push   ecx
  41cfff:	pop    ebx
  41d000:	test   DWORD PTR [ebx-0x5e557e2a],0x9aa63857
  41d00a:	or     DWORD PTR [eax],edi
  41d00c:	fwait
  41d00d:	rol    eax,1
  41d00f:	mov    ebp,0xb998d93f
  41d014:	not    DWORD PTR [eax+0x2ea1e770]
  41d01a:	pop    es
  41d01b:	adc    DWORD PTR [edi+ebp*8+0x46],0xffffffa7
  41d020:	sbb    eax,0xd119b53a
  41d025:	mov    dh,0x58
  41d027:	out    0x33,eax
  41d029:	xor    al,BYTE PTR [edx+edi*2]
  41d02c:	(bad)  
  41d02d:	xchg   edx,eax
  41d02e:	dec    ebp
  41d02f:	mov    ebp,0xd8b8490e
  41d034:	data16 add ah,BYTE PTR [ebx-0x672ae6db]
  41d03b:	xchg   esp,eax
  41d03c:	cmp    BYTE PTR [esi-0x187d6b80],0x7
  41d043:	xlat   BYTE PTR ds:[ebx]
  41d044:	into   
  41d045:	fwait
  41d046:	xchg   esp,eax
  41d047:	out    dx,al
  41d048:	inc    ebx
  41d049:	bnd jno 0x41d02f
  41d04c:	pop    ds
  41d04d:	ins    DWORD PTR es:[edi],dx
  41d04e:	(bad)  
  41d04f:	xchg   edx,eax
  41d050:	mov    ebp,DWORD PTR [edx+0x245badd7]
  41d056:	in     al,0xa8
  41d058:	sar    DWORD PTR [ebx-0x44],1
  41d05b:	inc    ecx
  41d05c:	sar    BYTE PTR [esi+0x4],cl
  41d05f:	icebp  
  41d060:	adc    DWORD PTR [esp+eax*8],esp
  41d063:	mov    esi,ebp
  41d065:	cmp    cl,BYTE PTR [edx]
  41d067:	push   0xffffffe5
  41d069:	cs jge 0x41d06a
  41d06c:	in     eax,0x4d
  41d06e:	sub    eax,0x353a6d47
  41d073:	mov    BYTE PTR [ecx-0x3cd623ef],dh
  41d079:	nop
  41d07a:	jl     0x41d023
  41d07c:	mov    edx,DWORD PTR ds:0xbdb23363
  41d082:	xor    al,BYTE PTR [ecx+0x4dbab7e3]
  41d088:	(bad)  
  41d089:	jmp    0x41d063
  41d08b:	sub    al,0x3a
  41d08d:	mov    esp,0x168c03d4
  41d092:	mov    al,ds:0x23612081
  41d097:	icebp  
  41d098:	push   0x39
  41d09a:	sub    edx,ebx
  41d09c:	rol    edi,1
  41d09e:	pop    ebx
  41d09f:	push   cs
  41d0a0:	bound  ecx,QWORD PTR [edi-0x32f41cbe]
  41d0a6:	fwait
  41d0a7:	xor    bl,BYTE PTR [ebx]
  41d0a9:	cwde   
  41d0aa:	int3   
  41d0ab:	lea    ebx,[eax-0x2]
  41d0ae:	fstp   DWORD PTR [ecx-0x370b8f9d]
  41d0b4:	dec    eax
  41d0b5:	cmp    al,0x2d
  41d0b7:	pop    ebp
  41d0b8:	jns    0x41d106
  41d0ba:	test   al,0xe6
  41d0bc:	cmc    
  41d0bd:	into   
  41d0be:	cmp    esi,ebx
  41d0c0:	stos   DWORD PTR es:[edi],eax
  41d0c1:	mov    dh,0x48
  41d0c3:	push   es
  41d0c4:	js     0x41d060
  41d0c6:	inc    edi
  41d0c7:	adc    DWORD PTR ds:0x4cce12f8,ebx
  41d0cd:	(bad)  
  41d0cf:	rol    BYTE PTR [edi],0x90
  41d0d2:	mov    ch,0x2d
  41d0d4:	or     BYTE PTR [edi+0x58309753],0x37
  41d0db:	push   edx
  41d0dc:	fcomp  DWORD PTR [edx+0xc454f2d]
  41d0e2:	retf   0xe74d
  41d0e5:	mov    bh,0xbe
  41d0e7:	or     bl,BYTE PTR [eax+0xf]
  41d0ea:	fsub   DWORD PTR [ecx-0xf]
  41d0ed:	jne    0x41d0d8
  41d0ef:	jbe    0x41d15d
  41d0f1:	and    eax,esp
  41d0f3:	pop    esp
  41d0f4:	sbb    ebp,DWORD PTR [eax-0x22]
  41d0f7:	stc    
  41d0f8:	and    ebp,esp
  41d0fa:	mov    ds:0xf176fdfd,eax
  41d0ff:	addr16 pop edx
  41d101:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d102:	std    
  41d103:	xor    al,0x82
  41d105:	(bad)  
  41d106:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d107:	add    DWORD PTR [ebp-0x7bdbc413],edi
  41d10d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d10e:	push   edx
  41d10f:	inc    esp
  41d110:	pop    ebx
  41d111:	pop    edi
  41d112:	push   ebx
  41d113:	push   esi
  41d114:	in     al,dx
  41d115:	aad    0xf3
  41d117:	cmp    dl,0xec
  41d11a:	adc    dh,BYTE PTR ss:[eax-0x3687fd3a]
  41d121:	adc    al,0x13
  41d123:	test   al,0x31
  41d125:	rcr    dh,cl
  41d127:	nop
  41d128:	dec    esi
  41d129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d12a:	and    al,0x19
  41d12c:	cmc    
  41d12d:	call   0x99f81754
  41d132:	lahf   
  41d133:	shl    BYTE PTR [eax+eax*8-0x7a],1
  41d137:	xchg   ebp,eax
  41d138:	adc    eax,DWORD PTR [ebp-0x6f]
  41d13b:	ins    BYTE PTR es:[edi],dx
  41d13c:	punpcklwd mm0,DWORD PTR [eax-0x48]
  41d140:	mov    dl,ah
  41d142:	inc    ecx
  41d143:	aaa    
  41d144:	cdq    
  41d145:	sbb    ch,BYTE PTR [edx]
  41d147:	mov    bl,0x5b
  41d149:	hlt    
  41d14a:	and    esp,DWORD PTR [esp+ecx*8+0xf456090]
  41d151:	sbb    eax,0x937b2c97
  41d156:	jne    0x41d157
  41d158:	inc    edx
  41d159:	or     DWORD PTR [ecx+0x5b],esi
  41d15c:	cmp    al,BYTE PTR [edx+ecx*1+0xbf940b9]
  41d163:	add    al,0x28
  41d165:	cmp    al,0x97
  41d167:	out    0x56,al
  41d169:	jns    0x41d1b8
  41d16b:	pop    edi
  41d16c:	loopne 0x41d15a
  41d16e:	es cwde 
  41d170:	shr    BYTE PTR [ecx+0x1eb915ac],0x5
  41d177:	je     0x41d13a
  41d179:	inc    ebx
  41d17a:	xchg   esp,eax
  41d17b:	adc    esp,eax
  41d17d:	push   ebx
  41d17e:	mov    edi,0xf10481fc
  41d183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d184:	jne    0x41d1f1
  41d186:	in     eax,dx
  41d187:	sub    eax,0xd1fb6561
  41d18c:	cs inc ebp
  41d18e:	out    0x8b,eax
  41d190:	fidiv  WORD PTR ds:0xaf425aef
  41d196:	fmul   st,st(7)
  41d198:	jnp    0x41d20d
  41d19a:	mov    cl,0x0
  41d19c:	rcr    bl,0xa7
  41d19f:	mov    al,ds:0x4e13f608
  41d1a4:	lds    ebx,FWORD PTR [ebp-0x13934cc6]
  41d1aa:	push   ebx
  41d1ab:	pop    ss
  41d1ac:	xchg   esi,eax
  41d1ad:	pushf  
  41d1ae:	mov    esi,0x553d02c6
  41d1b3:	outs   dx,BYTE PTR ds:[esi]
  41d1b4:	cdq    
  41d1b5:	stos   DWORD PTR es:[edi],eax
  41d1b6:	adc    al,dh
  41d1b8:	pop    ss
  41d1b9:	mov    al,ds:0xc2cd4343
  41d1be:	not    al
  41d1c0:	xor    esp,DWORD PTR [edi]
  41d1c2:	add    DWORD PTR [esi],edi
  41d1c4:	mov    bl,0x38
  41d1c6:	fstp   TBYTE PTR [ebx+0x36586018]
  41d1cc:	xor    DWORD PTR ss:[ebp-0x13d35dc9],edi
  41d1d3:	mov    ds:0x2dcd6a85,al
  41d1d8:	cdq    
  41d1d9:	hlt    
  41d1da:	jb     0x41d1e7
  41d1dc:	clc    
  41d1dd:	xlat   BYTE PTR ds:[ebx]
  41d1de:	retf   
  41d1df:	in     al,0x9f
  41d1e1:	sub    al,0xdd
  41d1e3:	xor    eax,0x327f5f47
  41d1e8:	pop    esi
  41d1e9:	push   ecx
  41d1ea:	repz or ah,bl
  41d1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d1ee:	sbb    BYTE PTR [eax*2-0x43cd5044],0xab
  41d1f6:	sar    BYTE PTR [eax+ecx*8],cl
  41d1f9:	xor    ch,BYTE PTR [edi+0x7d]
  41d1fc:	add    dh,BYTE PTR [esi]
  41d1fe:	ficom  DWORD PTR [ebx+edi*1]
  41d201:	xchg   ecx,eax
  41d202:	push   eax
  41d203:	mov    edi,DWORD PTR [ecx+0x57299b64]
  41d209:	cmp    al,0x45
  41d20b:	mov    dh,0xd2
  41d20d:	js     0x41d1f1
  41d20f:	loope  0x41d1d6
  41d211:	xchg   ebx,eax
  41d212:	sbb    BYTE PTR [edi-0x60],cl
  41d215:	and    DWORD PTR [edi-0x66],ecx
  41d218:	push   es
  41d219:	aas    
  41d21a:	mov    ah,BYTE PTR [ebx+0x9]
  41d21d:	loopne 0x41d224
  41d21f:	repnz adc BYTE PTR [ebx-0x4a94492],ah
  41d226:	adc    edx,DWORD PTR [ebx]
  41d228:	jle    0x41d1dd
  41d22a:	jnp    0x41d294
  41d22c:	shr    DWORD PTR [esi+0x5b9bd736],1
  41d232:	cmc    
  41d233:	ret    
  41d234:	loope  0x41d22c
  41d236:	and    bh,bl
  41d238:	pusha  
  41d239:	pop    eax
  41d23a:	test   DWORD PTR [edx-0x356ea84],0x3d4c2543
  41d244:	(bad)  
  41d245:	(bad)  
  41d246:	xor    al,0xd0
  41d248:	je     0x41d1d6
  41d24a:	push   ebp
  41d24b:	push   ebx
  41d24c:	hlt    
  41d24d:	(bad)  
  41d24e:	cli    
  41d24f:	fs enter 0x31a3,0xf1
  41d254:	dec    edx
  41d255:	ja     0x41d2a4
  41d257:	jecxz  0x41d2bc
  41d259:	jecxz  0x41d24a
  41d25b:	pop    eax
  41d25c:	xchg   edi,eax
  41d25d:	fistp  DWORD PTR [eax-0x261f9f69]
  41d263:	(bad)  
  41d264:	in     al,dx
  41d265:	je     0x41d229
  41d267:	sbb    bh,ch
  41d269:	imul   esp,DWORD PTR [edx-0xa32f47c],0xffffffff
  41d270:	add    cl,BYTE PTR [esp+esi*1-0x32]
  41d274:	inc    ebx
  41d275:	adc    al,0xa
  41d277:	jp     0x41d21c
  41d279:	out    dx,eax
  41d27a:	test   ch,0xfd
  41d27d:	and    bl,0x9f
  41d280:	into   
  41d281:	(bad)  
  41d282:	(bad)  
  41d283:	sahf   
  41d284:	jge    0x41d25a
  41d286:	push   ss
  41d287:	ror    DWORD PTR [esi-0x6f2a0758],cl
  41d28d:	nop
  41d28e:	lock sbb al,0x2c
  41d291:	(bad)  
  41d292:	sbb    edx,DWORD PTR [ebp-0x4ed938d2]
  41d298:	rol    dh,0xbf
  41d29b:	inc    edi
  41d29c:	cmc    
  41d29d:	hlt    
  41d29e:	clc    
  41d29f:	sbb    edi,esi
  41d2a1:	inc    eax
  41d2a2:	(bad)  
  41d2a3:	sub    sp,bp
  41d2a6:	scas   al,BYTE PTR es:[edi]
  41d2a7:	loope  0x41d2ca
  41d2a9:	mov    al,ds:0x7fee5375
  41d2ae:	in     al,dx
  41d2af:	(bad)  
  41d2b0:	std    
  41d2b1:	clc    
  41d2b2:	jmp    0x16e7:0x585fabcb
  41d2b9:	push   cs
  41d2ba:	xor    eax,0x5e8e28fd
  41d2bf:	xor    eax,0x74a59e37
  41d2c4:	mov    cl,0x5
  41d2c6:	stos   DWORD PTR es:[edi],eax
  41d2c7:	adc    DWORD PTR [edx+0x14863c35],eax
  41d2cd:	xchg   edx,eax
  41d2ce:	sbb    DWORD PTR [ecx+0x54],edi
  41d2d1:	mov    eax,0xf7d4105b
  41d2d6:	lds    esp,FWORD PTR [esi-0x5c]
  41d2d9:	mov    BYTE PTR [eax+0x5a6458eb],bl
  41d2df:	jns    0x332ec747
  41d2e5:	gs dec ebx
  41d2e7:	or     DWORD PTR [esi-0x77],edi
  41d2ea:	or     dh,BYTE PTR [ebp+ebx*2-0x35459bb4]
  41d2f1:	ret    0xd912
  41d2f4:	cmp    BYTE PTR [eax+0x3d4a796d],al
  41d2fa:	mov    ebx,0xb9622d82
  41d2ff:	lds    esi,FWORD PTR [ebx+edi*4]
  41d302:	mov    dl,0xf4
  41d304:	lea    esp,[esp+ebp*1+0x69162dd8]
  41d30b:	nop
  41d30c:	je     0x41d352
  41d30e:	adc    dh,BYTE PTR [edx+0x67]
  41d311:	add    eax,0x83834369
  41d316:	lods   eax,DWORD PTR ds:[esi]
  41d317:	xor    DWORD PTR [eax+esi*2],edi
  41d31a:	push   es
  41d31b:	(bad)  
  41d31c:	xor    bl,ah
  41d31e:	sti    
  41d31f:	sub    eax,0x790918f
  41d324:	in     al,dx
  41d325:	sti    
  41d326:	aas    
  41d327:	addr16 xor bx,si
  41d32b:	out    dx,al
  41d32c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d32e:	mov    al,0xfd
  41d330:	loop   0x41d2b7
  41d332:	jmp    0x41d385
  41d334:	push   0x4eec782b
  41d339:	lock fdiv st,st(6)
  41d33c:	jns    0x41d35e
  41d33e:	mov    ah,0xdc
  41d340:	dec    esp
  41d341:	aaa    
  41d342:	int3   
  41d343:	ja     0x41d346
  41d345:	lock test DWORD PTR [esi],esp
  41d348:	dec    edx
  41d349:	mov    eax,ds:0x51ed5dc0
  41d34e:	add    al,0xe2
  41d350:	jns    0x41d399
  41d352:	mov    esp,0xc46f6161
  41d357:	sti    
  41d358:	push   eax
  41d359:	cmp    al,BYTE PTR [esp+eax*4+0x57a62657]
  41d360:	pusha  
  41d361:	test   DWORD PTR [ebx-0x6f99d4da],esi
  41d367:	lahf   
  41d368:	push   esp
  41d369:	adc    BYTE PTR [ecx+0x15],ah
  41d36c:	aad    0xb7
  41d36e:	rol    BYTE PTR [esi-0x3bc8d112],cl
  41d374:	add    al,0xe3
  41d376:	(bad)  
  41d377:	sbb    al,0xb3
  41d379:	stos   BYTE PTR es:[edi],al
  41d37a:	jbe    0x41d3a1
  41d37c:	cmp    BYTE PTR [esi-0x7e6efcd6],ah
  41d382:	gs in  eax,0x50
  41d385:	cmp    al,cl
  41d387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d388:	or     dh,bh
  41d38a:	cmp    DWORD PTR [eax],edi
  41d38c:	and    bl,BYTE PTR [edx+0x38]
  41d38f:	ror    DWORD PTR [edi],cl
  41d391:	or     eax,ebx
  41d393:	push   edx
  41d394:	std    
  41d395:	mov    al,0x6a
  41d397:	out    dx,eax
  41d398:	retf   
  41d399:	loop   0x41d39f
  41d39b:	jg     0x41d3f8
  41d39d:	aam    0x84
  41d39f:	lea    edi,[ebp+0x6f]
  41d3a2:	push   ebp
  41d3a3:	xlat   BYTE PTR ds:[ebx]
  41d3a4:	dec    esp
  41d3a5:	rcl    BYTE PTR [edx+0x30],cl
  41d3a8:	stc    
  41d3a9:	mov    cl,0xeb
  41d3ab:	jno    0x41d3a3
  41d3ad:	ret    
  41d3ae:	adc    al,BYTE PTR [edi-0x41]
  41d3b1:	fild   DWORD PTR [ebx]
  41d3b3:	pop    es
  41d3b4:	cs xor eax,0xe352a0cd
  41d3ba:	lds    ecx,FWORD PTR [ebx-0x16]
  41d3bd:	inc    ebp
  41d3be:	jne    0x41d36c
  41d3c0:	ss push es
  41d3c2:	xchg   ebx,eax
  41d3c3:	ret    0xc282
  41d3c6:	loop   0x41d3a5
  41d3c8:	sub    dh,dh
  41d3ca:	repz or DWORD PTR [eax-0x6e],esi
  41d3ce:	xor    eax,0xf8dde3de
  41d3d3:	dec    ecx
  41d3d4:	dec    esp
  41d3d5:	retf   
  41d3d6:	sub    DWORD PTR [edx+0x63],0xd828bb67
  41d3dd:	fild   QWORD PTR ds:0x8c3d878a
  41d3e3:	ret    
  41d3e4:	hlt    
  41d3e5:	clc    
  41d3e6:	fidivr WORD PTR [eax+0x5647d15f]
  41d3ec:	sub    DWORD PTR [eax-0x24],0x33
  41d3f0:	mov    eax,0xe9ebf4b2
  41d3f5:	adc    al,0x3d
  41d3f7:	dec    ecx
  41d3f8:	adc    al,0x8d
  41d3fa:	add    al,0x3d
  41d3fc:	sub    eax,0xf6542443
  41d401:	cmp    ebx,DWORD PTR [ecx+0x516007e]
  41d407:	js     0x41d455
  41d409:	outs   dx,DWORD PTR ds:[esi]
  41d40a:	aad    0xbb
  41d40c:	hlt    
  41d40d:	mov    cs,WORD PTR [edx-0x7c]
  41d410:	dec    esi
  41d411:	out    dx,eax
  41d412:	popf   
  41d413:	jo     0x41d434
  41d415:	imul   ebp,DWORD PTR [edi-0x77540fe1],0xffffffba
  41d41c:	loopne 0x41d3c6
  41d41e:	pop    eax
  41d41f:	loope  0x41d3ec
  41d421:	cmp    eax,ecx
  41d423:	aas    
  41d424:	addr16 pusha 
  41d426:	add    edi,DWORD PTR ds:0x9ec78e32
  41d42d:	fsub   QWORD PTR [edi+0x7f]
  41d430:	jge    0x41d48d
  41d432:	addr16 jns 0x41d443
  41d435:	mov    ?,esi
  41d437:	mov    dh,0x59
  41d439:	out    dx,al
  41d43a:	add    eax,0x2942af9b
  41d43f:	imul   edx,DWORD PTR [ebx+0x6f],0x953b014c
  41d446:	fwait
  41d447:	push   ebp
  41d448:	cli    
  41d449:	sub    BYTE PTR [ecx],ch
  41d44b:	jae    0x41d423
  41d44d:	cdq    
  41d44e:	mov    eax,0x9dfc286b
  41d453:	mov    ah,0x4e
  41d455:	adc    ch,BYTE PTR [ecx+ebx*2-0xdb0c467]
  41d45c:	lods   eax,DWORD PTR ds:[esi]
  41d45d:	xor    eax,0xde2beb38
  41d462:	sti    
  41d463:	ror    ah,1
  41d465:	sahf   
  41d466:	push   0x43a548fc
  41d46b:	or     BYTE PTR [eax-0x1d0fa8c],ch
  41d471:	mov    ds:0x7dbe0978,eax
  41d476:	mov    bh,0x18
  41d478:	mov    esp,0xfd86b319
  41d47d:	hlt    
  41d47e:	push   0x5e766fd6
  41d483:	sub    DWORD PTR [ecx+eiz*4+0x1c],0x5d905dc0
  41d48b:	ins    DWORD PTR es:[edi],dx
  41d48c:	sbb    ebp,DWORD PTR ds:0x1ae88088
  41d492:	cmc    
  41d493:	fistp  WORD PTR [edi]
  41d495:	mov    ds:0x89014caf,eax
  41d49a:	xor    dh,BYTE PTR [esi+ecx*4+0x19320903]
  41d4a1:	outs   dx,BYTE PTR ds:[esi]
  41d4a2:	xchg   ecx,eax
  41d4a3:	xchg   ecx,eax
  41d4a4:	mov    ah,0x61
  41d4a6:	int    0xa0
  41d4a8:	popf   
  41d4a9:	das    
  41d4aa:	cld    
  41d4ab:	push   ebp
  41d4ac:	pop    ecx
  41d4ad:	push   eax
  41d4ae:	xlat   BYTE PTR ds:[ebx]
  41d4af:	test   eax,0x30bd1ae4
  41d4b4:	rcl    DWORD PTR [esi-0x19],0x82
  41d4b8:	and    bh,0x32
  41d4bb:	fsubr  QWORD PTR [ecx+0x17]
  41d4be:	and    al,0x72
  41d4c0:	jns    0x41d4c3
  41d4c2:	jge    0x41d504
  41d4c4:	lock test eax,0x9459cf3b
  41d4ca:	mov    ah,0xdd
  41d4cc:	mov    WORD PTR [edx+0x5b],gs
  41d4cf:	add    dh,BYTE PTR [eax]
  41d4d1:	stc    
  41d4d2:	aaa    
  41d4d3:	test   al,0x48
  41d4d5:	scas   al,BYTE PTR es:[edi]
  41d4d6:	jmp    FWORD PTR [edx-0x6cbd0c49]
  41d4dc:	push   es
  41d4dd:	dec    edx
  41d4de:	sbb    eax,0xafe5bef4
  41d4e3:	stos   DWORD PTR es:[edi],eax
  41d4e4:	sub    BYTE PTR [ebx+0x3dbcfa15],dl
  41d4ea:	gs pop eax
  41d4ec:	in     al,0x3c
  41d4ee:	add    DWORD PTR [ebx],edx
  41d4f0:	aaa    
  41d4f1:	test   DWORD PTR [ebx+edx*4],ebp
  41d4f4:	addr16 out dx,eax
  41d4f6:	out    0x63,al
  41d4f8:	jnp    0x41d561
  41d4fa:	mov    ah,0xe0
  41d4fc:	fmul   QWORD PTR [eax+0x5f132a88]
  41d502:	or     eax,DWORD PTR [esi-0x4821e00c]
  41d508:	xchg   esi,eax
  41d509:	(bad)  
  41d50a:	mov    dl,0x7b
  41d50c:	mov    esp,0x286b8b3c
  41d511:	xchg   esp,eax
  41d512:	fwait
  41d513:	dec    esi
  41d514:	adc    DWORD PTR [edx],0x5415f25c
  41d51a:	sbb    DWORD PTR [edi+0x75],esp
  41d51d:	(bad)  
  41d51e:	mov    ds:0xf796a3c0,al
  41d523:	pushf  
  41d524:	std    
  41d525:	rol    DWORD PTR [ebp+0xe3f7d91],0xb5
  41d52c:	aas    
  41d52d:	fs xor eax,0xfacd55d6
  41d533:	xchg   edi,eax
  41d534:	jo     0x41d51f
  41d536:	sbb    eax,0xf12450d3
  41d53b:	cdq    
  41d53c:	mov    eax,0x70a92154
  41d541:	xor    BYTE PTR [ecx],al
  41d543:	fucomp st(0)
  41d545:	call   0x8a48:0x3ed528e1
  41d54c:	push   edx
  41d54d:	pushf  
  41d54e:	(bad)  
  41d54f:	nop
  41d550:	inc    edx
  41d551:	sbb    BYTE PTR [eax+0x2cba0931],al
  41d557:	mov    WORD PTR [eax-0x4a7c8522],?
  41d55d:	sbb    BYTE PTR [ebx],bh
  41d55f:	lock lods al,BYTE PTR ds:[esi]
  41d561:	repz push ebx
  41d563:	push   cs
  41d564:	stos   BYTE PTR es:[edi],al
  41d565:	neg    al
  41d567:	gs inc ecx
  41d569:	rcl    DWORD PTR [ebx-0x652dbe9f],0x38
  41d570:	push   eax
  41d571:	cmp    BYTE PTR [edi],ah
  41d573:	lods   al,BYTE PTR ds:[esi]
  41d574:	daa    
  41d575:	mov    dh,0xfb
  41d577:	dec    edi
  41d578:	shl    DWORD PTR [ebx],1
  41d57a:	adc    cl,ah
  41d57c:	mov    ds:0xcda01e60,eax
  41d581:	push   0xe
  41d583:	and    bh,BYTE PTR [esi]
  41d585:	push   ebp
  41d586:	bnd jmp 0x41d59d
  41d589:	mov    ds:0x52840df9,al
  41d58e:	cmp    bl,BYTE PTR [ecx-0x933744e]
  41d594:	jmp    0x41d601
  41d596:	sub    ah,BYTE PTR [edi]
  41d598:	xchg   DWORD PTR [esp+ebp*8],eax
  41d59b:	and    BYTE PTR [edi+eiz*8],al
  41d59e:	sub    DWORD PTR [esi],0x72fc5860
  41d5a4:	mov    ds:0x1d7814a3,ax
  41d5aa:	loope  0x41d585
  41d5ac:	leave  
  41d5ad:	jl     0x41d561
  41d5af:	aam    0x95
  41d5b1:	sub    DWORD PTR [eax+esi*8-0x2],0x1
  41d5b6:	add    dh,ch
  41d5b8:	add    bh,BYTE PTR [edi+0x26cd8ccd]
  41d5be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d5bf:	pop    esp
  41d5c0:	fild   QWORD PTR [edi]
  41d5c2:	cli    
  41d5c3:	jbe    0x41d59d
  41d5c5:	aad    0x6c
  41d5c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5c8:	retf   
  41d5c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ca:	jp     0x41d5f1
  41d5cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5cd:	cmp    eax,0xbad96e92
  41d5d2:	out    0xb3,eax
  41d5d4:	mov    ch,0x15
  41d5d6:	or     eax,0xde2a40d6
  41d5db:	push   cs
  41d5dc:	int    0x7c
  41d5de:	or     ah,BYTE PTR [esi+ecx*8+0x9fd1553]
  41d5e5:	and    al,0x2d
  41d5e7:	ret    0x6f8b
  41d5ea:	add    cl,BYTE PTR [edi]
  41d5ec:	sub    al,0xa8
  41d5ee:	shr    DWORD PTR [ebp-0x4d6cdd77],cl
  41d5f4:	mov    ch,0xaa
  41d5f6:	xchg   ebp,eax
  41d5f7:	inc    ebx
  41d5f8:	(bad)  
  41d5fa:	pop    edx
  41d5fb:	and    esp,ebx
  41d5fd:	aas    
  41d5fe:	mov    ch,0x67
  41d600:	or     DWORD PTR [edx+0x40],0xffffffb9
  41d604:	or     ecx,edx
  41d606:	mov    eax,ds:0x65771e8e
  41d60b:	(bad)  
  41d60c:	popf   
  41d60d:	mov    ds:0xa61d46ce,al
  41d612:	mov    ebp,0xecc0192c
  41d617:	sbb    BYTE PTR ds:0x1fc683a6,0x3f
  41d61e:	fwait
  41d61f:	cwde   
  41d620:	sbb    edi,DWORD PTR [eax]
  41d622:	mov    al,ds:0x6fab9e26
  41d627:	pop    ebx
  41d628:	pop    es
  41d629:	push   eax
  41d62a:	lea    esp,[eax-0x68]
  41d62d:	int    0xad
  41d62f:	in     eax,dx
  41d630:	add    eax,0x501d2784
  41d635:	xchg   edx,eax
  41d636:	pusha  
  41d637:	mov    edi,eax
  41d639:	(bad)  
  41d63a:	outs   dx,BYTE PTR ds:[esi]
  41d63b:	mov    bh,0x6f
  41d63d:	popa   
  41d63e:	mov    al,ds:0x9e9028e6
  41d643:	les    edi,FWORD PTR [edi]
  41d645:	jmp    0x41d681
  41d647:	pop    esi
  41d648:	data16 jg 0x41d649
  41d64b:	repnz push 0xd89d1af9
  41d651:	outs   dx,BYTE PTR ds:[esi]
  41d652:	xor    cl,BYTE PTR [ebp-0x41]
  41d655:	xchg   ebp,eax
  41d656:	pop    ebx
  41d657:	push   ds
  41d658:	shl    BYTE PTR [ebx+0x4d545a77],0xd2
  41d65f:	xchg   esp,eax
  41d660:	mov    BYTE PTR [eax-0x3f79c586],bh
  41d666:	push   esi
  41d667:	(bad)  
  41d668:	fmul   QWORD PTR [esi+0x43b84943]
  41d66e:	in     al,0x96
  41d670:	stc    
  41d671:	sub    ah,BYTE PTR [edx+edi*2-0x6b]
  41d675:	adc    DWORD PTR [ebx],ebx
  41d677:	mov    ds:0xc4985455,eax
  41d67c:	xchg   edi,eax
  41d67d:	fiadd  WORD PTR [edx]
  41d67f:	test   al,0xbd
  41d681:	sub    cl,BYTE PTR [ecx+0x23]
  41d684:	sub    DWORD PTR [ebx+0x42],ebp
  41d687:	aaa    
  41d688:	adc    DWORD PTR [edi+0x93ac113],edi
  41d68e:	aad    0x3a
  41d690:	xor    al,BYTE PTR [ecx+0x72e10483]
  41d696:	repnz cmc 
  41d698:	or     DWORD PTR [edi-0x1e],edi
  41d69b:	aas    
  41d69c:	adc    DWORD PTR [eax],0xffffff82
  41d69f:	pop    edx
  41d6a0:	add    eax,0xbc85527d
  41d6a5:	sbb    al,0x1a
  41d6a7:	push   es
  41d6a8:	ss pop ds
  41d6aa:	sbb    bl,BYTE PTR [edx]
  41d6ac:	or     al,BYTE PTR [ebx-0x692bf565]
  41d6b2:	mov    ch,0x3f
  41d6b4:	shl    BYTE PTR [ebx-0x17],1
  41d6b7:	xor    BYTE PTR [edx+0x66],0x80
  41d6bb:	jmp    0x41d687
  41d6bd:	mov    ebp,DWORD PTR [esi-0x59]
  41d6c0:	xchg   ebp,eax
  41d6c1:	adc    BYTE PTR ds:0xc5ca6c4,bl
  41d6c7:	sub    ebp,DWORD PTR [esi-0x1d54d19f]
  41d6cd:	lahf   
  41d6ce:	jl     0x41d74a
  41d6d0:	ins    BYTE PTR es:[edi],dx
  41d6d1:	mov    eax,ds:0x4acbac70
  41d6d6:	popa   
  41d6d7:	mov    ds:0xa6ee9a70,eax
  41d6dc:	mov    bl,0xb
  41d6de:	popf   
  41d6df:	test   BYTE PTR [esp+ecx*1+0x211932b6],0x99
  41d6e7:	cli    
  41d6e8:	call   0xaf782c64
  41d6ed:	xchg   ebp,eax
  41d6ee:	cmc    
  41d6ef:	xchg   BYTE PTR [esi-0x10],bl
  41d6f2:	repnz xchg edi,eax
  41d6f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6f5:	lea    eax,[eax-0x18]
  41d6f8:	aam    0xc4
  41d6fa:	add    esp,esp
  41d6fc:	cmp    BYTE PTR [ebx],ah
  41d6fe:	xchg   edi,eax
  41d6ff:	pop    esp
  41d700:	ins    BYTE PTR es:[edi],dx
  41d701:	fs dec esp
  41d703:	fwait
  41d704:	(bad)  
  41d705:	fadd   st(2),st
  41d707:	leave  
  41d708:	adc    DWORD PTR ds:0xbe943a2b,edx
  41d70e:	outs   dx,DWORD PTR ds:[esi]
  41d70f:	pop    esp
  41d710:	mov    BYTE PTR [eax-0x10],ch
  41d713:	lea    ebx,[edi+esi*1+0x6f]
  41d717:	shl    BYTE PTR [eax-0x1b125f59],0xb0
  41d71e:	cmp    DWORD PTR [edx],ebx
  41d720:	pop    esi
  41d721:	repz cmp DWORD PTR [ebx],edi
  41d724:	cmp    DWORD PTR [edx+eax*8-0x68d1c306],esp
  41d72b:	add    eax,0x7ece8f1
  41d730:	imul   ecx,DWORD PTR [edi+0x6b],0x783ddf25
  41d737:	fwait
  41d738:	or     BYTE PTR [edx],dh
  41d73a:	loope  0x41d72e
  41d73c:	inc    edi
  41d73d:	pop    ss
  41d73e:	mov    ecx,cs
  41d740:	mov    eax,ds:0x6a05e699
  41d745:	mov    ss,WORD PTR [esi+0xb65a71b]
  41d74b:	stos   BYTE PTR es:[edi],al
  41d74c:	mov    bl,0xe5
  41d74e:	sbb    esi,ebp
  41d750:	shl    BYTE PTR [edx],cl
  41d752:	dec    ecx
  41d753:	icebp  
  41d754:	dec    esp
  41d755:	xor    al,0x85
  41d757:	mov    eax,ds:0x72934cf8
  41d75c:	fcmovu st,st(7)
  41d75e:	sbb    eax,0x1cca6a0c
  41d763:	ret    0xa11f
  41d766:	dec    esi
  41d767:	bound  esi,QWORD PTR [eax]
  41d769:	aas    
  41d76a:	pop    edi
  41d76b:	das    
  41d76c:	mov    BYTE PTR [esp+eiz*4+0x64],ch
  41d770:	push   0xd
  41d772:	nop
  41d773:	idiv   DWORD PTR [esp+eiz*8+0x74]
  41d777:	das    
  41d778:	jmp    0xd9cd:0xf9ed1399
  41d77f:	pop    esp
  41d780:	mov    dl,0x95
  41d782:	ja     0x41d762
  41d784:	fst    QWORD PTR [ecx-0x41]
  41d787:	retf   
  41d788:	dec    eax
  41d789:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41d78b:	(bad)  
  41d78c:	shl    BYTE PTR [eax],0x76
  41d78f:	cmp    eax,0xd612c3a7
  41d794:	ffreep st(4)
  41d796:	inc    esi
  41d797:	arpl   WORD PTR [edx],bp
  41d799:	scas   eax,DWORD PTR es:[edi]
  41d79a:	push   0x38b8f888
  41d79f:	test   al,0xcf
  41d7a1:	pop    esp
  41d7a2:	and    DWORD PTR [edi],esp
  41d7a4:	xchg   edi,eax
  41d7a5:	ret    
  41d7a6:	pop    ds
  41d7a7:	out    0xa0,al
  41d7a9:	cld    
  41d7aa:	sahf   
  41d7ab:	int    0xe8
  41d7ad:	pop    eax
  41d7ae:	test   BYTE PTR [edi],0x7f
  41d7b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7b2:	test   eax,0x3368bd66
  41d7b7:	ja     0x41d785
  41d7b9:	and    ch,BYTE PTR [esi-0x13]
  41d7bc:	jno    0x41d782
  41d7be:	aad    0x2
  41d7c0:	loope  0x41d79e
  41d7c2:	sahf   
  41d7c3:	dec    ecx
  41d7c4:	mov    esp,0x107a7b3d
  41d7c9:	stos   DWORD PTR es:[edi],eax
  41d7ca:	inc    ecx
  41d7cb:	pop    eax
  41d7cc:	pop    edx
  41d7cd:	shl    esp,0xcc
  41d7d0:	inc    ebp
  41d7d1:	(bad)  
  41d7d2:	test   al,0x6e
  41d7d4:	stos   BYTE PTR es:[edi],al
  41d7d5:	and    al,0x2
  41d7d7:	xchg   ebp,eax
  41d7d8:	jecxz  0x41d797
  41d7da:	inc    esi
  41d7db:	out    dx,al
  41d7dc:	imul   ecx,DWORD PTR ds:0xe0db60c3,0xffffffa5
  41d7e3:	jbe    0x41d803
  41d7e5:	inc    ebp
  41d7e6:	sbb    BYTE PTR [edi-0x141a6e36],al
  41d7ec:	mov    eax,ds:0x716fca9b
  41d7f1:	mov    ah,0x8c
  41d7f3:	(bad)  
  41d7f4:	aam    0xb4
  41d7f6:	iret   
  41d7f7:	cmp    ah,BYTE PTR [edx+eax*8+0x3d]
  41d7fb:	mov    esi,0x9bf2995a
  41d800:	leavew 
  41d802:	or     eax,0x5f1281db
  41d807:	enter  0x3183,0x4c
  41d80b:	out    dx,al
  41d80c:	mov    DWORD PTR [ebx+esi*8+0x66],ebx
  41d810:	xchg   edx,eax
  41d811:	jmp    0xfd20:0x1235a8c0
  41d818:	(bad)  
  41d819:	popa   
  41d81a:	pop    ebx
  41d81b:	aam    0xe7
  41d81d:	pop    es
  41d81e:	xchg   ebx,eax
  41d81f:	aaa    
  41d820:	popa   
  41d821:	retf   0xe7bb
  41d824:	and    BYTE PTR [eax+0xa],bh
  41d827:	fldcw  WORD PTR [ebp-0x80]
  41d82a:	(bad)  
  41d82b:	cld    
  41d82c:	push   ss
  41d82d:	add    BYTE PTR [ebx+0x373933c9],ah
  41d833:	stc    
  41d834:	test   eax,0xfb075bd9
  41d839:	xchg   ebp,eax
  41d83a:	sbb    DWORD PTR [edi],ebx
  41d83c:	add    DWORD PTR [esi],0xef652566
  41d842:	clc    
  41d843:	scas   eax,DWORD PTR es:[edi]
  41d844:	jbe    0x41d879
  41d846:	outs   dx,DWORD PTR ds:[esi]
  41d847:	aam    0x98
  41d849:	jae    0x41d897
  41d84b:	mov    DWORD PTR [esi],eax
  41d84d:	lds    ebp,FWORD PTR [ecx-0x50]
  41d850:	cdq    
  41d851:	mov    bh,0x2f
  41d853:	(bad)  
  41d855:	xchg   DWORD PTR [ecx-0x1504e5e4],edi
  41d85b:	ins    BYTE PTR es:[edi],dx
  41d85c:	in     al,0x1a
  41d85e:	stos   BYTE PTR es:[edi],al
  41d85f:	cmp    eax,0xafd08bd9
  41d864:	dec    ecx
  41d865:	pop    DWORD PTR [ebx]
  41d867:	leave  
  41d868:	(bad)  
  41d869:	cmp    cl,BYTE PTR es:[esi+0x307fddf]
  41d870:	push   es
  41d871:	add    bh,BYTE PTR [esi]
  41d873:	or     edi,DWORD PTR [esi+0x6e]
  41d876:	cwde   
  41d877:	xor    al,0xd3
  41d879:	inc    edx
  41d87a:	xlat   BYTE PTR ds:[ebx]
  41d87b:	int3   
  41d87c:	sbb    al,0xbd
  41d87e:	cli    
  41d87f:	frstor [ebp-0x1e]
  41d882:	jne    0x41d8ab
  41d884:	xchg   eax,edi
  41d886:	add    cl,dl
  41d888:	or     eax,0xffffff8d
  41d88b:	sbb    BYTE PTR [edx+0x626a057f],ah
  41d891:	and    al,0x57
  41d893:	ss dec ebp
  41d895:	mov    bl,0x56
  41d897:	jge    0x41d885
  41d899:	rcr    BYTE PTR [eax+0x6687bf04],1
  41d89f:	fcom   DWORD PTR [ecx+ecx*2]
  41d8a2:	cld    
  41d8a3:	adc    eax,0x57442379
  41d8a8:	inc    ebx
  41d8a9:	test   DWORD PTR ss:[esi+0x411135d3],ebp
  41d8b0:	sub    dl,al
  41d8b2:	ds pop edx
  41d8b4:	push   esp
  41d8b5:	inc    edi
  41d8b6:	sbb    BYTE PTR [edi],cl
  41d8b8:	xchg   BYTE PTR [edi+eax*4+0x39],ch
  41d8bc:	out    dx,al
  41d8bd:	fs pop ds
  41d8bf:	lock mov ebx,0xc009c18e
  41d8c5:	scas   al,BYTE PTR es:[edi]
  41d8c6:	cld    
  41d8c7:	cld    
  41d8c8:	cli    
  41d8c9:	mov    dh,al
  41d8cb:	xor    ch,BYTE PTR [edi-0x524682f6]
  41d8d1:	loop   0x41d90e
  41d8d3:	fcomi  st,st(6)
  41d8d5:	jae    0x41d8b5
  41d8d7:	jae    0x41d909
  41d8d9:	(bad)  
  41d8db:	iret   
  41d8dc:	add    eax,0x67b1eca8
  41d8e1:	adc    al,BYTE PTR [esi-0x6bf29364]
  41d8e7:	jae    0x41d86e
  41d8e9:	imul   edx,eax,0x6c
  41d8ec:	mov    ds:0x68df755c,al
  41d8f1:	fdiv   QWORD PTR [ebp-0x3a]
  41d8f4:	ds mov al,0x56
  41d8f7:	out    0x48,al
  41d8f9:	cmc    
  41d8fa:	cdq    
  41d8fb:	lea    ecx,[ebx-0x194e247]
  41d901:	push   ds
  41d902:	bound  ebp,QWORD PTR [ecx]
  41d904:	or     esp,esi
  41d906:	add    esi,DWORD PTR [edx+0x39dc9cd0]
  41d90c:	mov    al,ds:0x601f8222
  41d911:	cmp    al,BYTE PTR ds:0x70bac986
  41d917:	loop   0x41d963
  41d919:	fsubr  st(1),st
  41d91b:	dec    ebx
  41d91c:	push   0xfffffffd
  41d91e:	xchg   ecx,eax
  41d91f:	jmp    0x900f:0x4ea7bc65
  41d926:	into   
  41d927:	jno    0x41d98f
  41d929:	popf   
  41d92a:	inc    edi
  41d92b:	pop    ecx
  41d92c:	lods   eax,DWORD PTR ds:[esi]
  41d92d:	add    dl,0x4b
  41d930:	mov    ebx,0xdf80546d
  41d935:	xor    al,0x8a
  41d937:	xchg   DWORD PTR [ebp-0x2512142],esp
  41d93d:	(bad)  
  41d93e:	fidivr DWORD PTR ds:0xb488de68
  41d944:	cmp    DWORD PTR [eax],eax
  41d946:	jmp    0x41d947
  41d948:	mov    esp,0x7e3069c2
  41d94d:	repz sub ch,BYTE PTR [esi+0x32d6dcae]
  41d954:	enter  0xd583,0xb
  41d958:	inc    DWORD PTR [ebp+0x6f9bd02b]
  41d95e:	and    eax,0x5cc87265
  41d963:	shl    BYTE PTR [ecx-0x28],cl
  41d966:	inc    BYTE PTR [ebx+0x764014a6]
  41d96c:	icebp  
  41d96d:	dec    edi
  41d96e:	scas   eax,DWORD PTR es:[edi]
  41d96f:	add    ebx,DWORD PTR [ebp-0x1cce60ef]
  41d975:	jecxz  0x41d995
  41d977:	icebp  
  41d978:	sbb    ecx,ebp
  41d97a:	mov    al,0xd0
  41d97c:	fld    DWORD PTR [ecx]
  41d97e:	int3   
  41d97f:	bound  edx,QWORD PTR [eax+0x6693760c]
  41d985:	sbb    BYTE PTR [esi],al
  41d987:	push   edx
  41d988:	mov    WORD PTR [edx+0x3e21f13e],es
  41d98e:	jb     0x41d95e
  41d990:	sbb    al,0x4d
  41d992:	sbb    DWORD PTR [ebp-0x304467e8],esi
  41d998:	mov    bl,0xe4
  41d99a:	xchg   ecx,eax
  41d99b:	not    DWORD PTR [edi+esi*2-0x6c4e7531]
  41d9a2:	call   0x98c45acf
  41d9a7:	in     eax,dx
  41d9a8:	xchg   edi,eax
  41d9a9:	repnz sub esi,DWORD PTR [esi-0x6017507b]
  41d9b0:	ds mov edi,0x63c0cd00
  41d9b6:	sub    eax,0x7f6e2314
  41d9bb:	lock sub edi,ebp
  41d9be:	mov    ebp,0x9cac16cf
  41d9c3:	ficom  DWORD PTR [ebp+0x11aa3d29]
  41d9c9:	shl    DWORD PTR [ebx-0xe506e4d],0x63
  41d9d0:	pushw  ds
  41d9d2:	mov    ebp,0x3fa050fd
  41d9d7:	dec    ebp
  41d9d8:	mov    al,ds:0xb5397a78
  41d9dd:	(bad)  
  41d9de:	ror    ah,cl
  41d9e0:	ret    0x4639
  41d9e3:	fcmove st,st(5)
  41d9e5:	adc    ecx,DWORD PTR [esi+0x20]
  41d9e8:	xchg   ebx,eax
  41d9ea:	xor    BYTE PTR [esi],0x5a
  41d9ed:	cmp    BYTE PTR [eax-0x7494b3c6],al
  41d9f3:	mov    dh,0x8e
  41d9f5:	inc    esp
  41d9f6:	mov    esi,0xf30ae21
  41d9fb:	sub    BYTE PTR [eax+0x71],dh
  41d9fe:	out    0xf,eax
  41da00:	packsswb mm0,mm3
  41da03:	in     eax,dx
  41da04:	outs   dx,DWORD PTR ds:[esi]
  41da05:	test   BYTE PTR [ecx-0x6c],bh
  41da08:	out    dx,eax
  41da09:	add    BYTE PTR [edi-0x1],0x18
  41da0d:	clc    
  41da0e:	int    0x4c
  41da10:	jns    0x41da11
  41da12:	inc    eax
  41da13:	sbb    BYTE PTR [esi+0x70],0xf7
  41da17:	push   ebx
  41da18:	cmc    
  41da19:	ja     0x41da4a
  41da1b:	cmp    DWORD PTR [ebx+ebp*2],ecx
  41da1e:	sub    DWORD PTR [ebx],eax
  41da20:	push   edx
  41da21:	les    ebx,FWORD PTR [edx-0x4e984099]
  41da27:	pop    esi
  41da28:	scas   eax,DWORD PTR es:[edi]
  41da29:	(bad)  
  41da2a:	daa    
  41da2b:	inc    ecx
  41da2c:	inc    ecx
  41da2d:	cs push cs
  41da2f:	mov    edx,DWORD PTR [eax]
  41da31:	ss mov cl,al
  41da34:	iret   
  41da35:	ds xor al,0xce
  41da38:	jmp    0x41da82
  41da3a:	sbb    DWORD PTR [edx-0x5d00cd1],ebx
  41da40:	add    al,0x1
  41da42:	mov    ah,0xa6
  41da44:	xor    dl,BYTE PTR [ebx-0x56]
  41da47:	out    0xb2,eax
  41da49:	add    eax,0x99146418
  41da4e:	jnp    0x41da35
  41da50:	loop   0x41d9f6
  41da52:	sar    DWORD PTR [esi+0x58],0x95
  41da56:	test   eax,0x27f76006
  41da5b:	jbe    0x41daa4
  41da5d:	scas   eax,DWORD PTR es:[edi]
  41da5e:	shr    al,cl
  41da60:	dec    edi
  41da61:	dec    esp
  41da62:	test   cl,al
  41da64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41da65:	xor    BYTE PTR [eax*1+0x7da3424e],0xb3
  41da6d:	push   ecx
  41da6f:	and    DWORD PTR [edx+0x27],ecx
  41da72:	jmp    0xf893c14d
  41da77:	shl    DWORD PTR [esi-0x28c028b4],0x1a
  41da7e:	test   al,0xd1
  41da80:	mov    fs,WORD PTR ds:0x9dacb2c1
  41da86:	(bad)  
  41da87:	loope  0x41daea
  41da89:	and    BYTE PTR [ebp-0x5f8289c2],0x21
  41da90:	ja     0x41da24
  41da92:	sub    BYTE PTR [esi+edx*2],bh
  41da95:	cmp    al,BYTE PTR [esi-0x6f]
  41da98:	mov    es,WORD PTR [ebx+0x13]
  41da9b:	xchg   esi,eax
  41da9c:	jg     0x41dae7
  41da9e:	jns    0x41db05
  41daa0:	jmp    FWORD PTR [eax]
  41daa2:	div    DWORD PTR [ebp-0x7f]
  41daa5:	sub    esi,DWORD PTR [eax+0x7c]
  41daa8:	sbb    eax,0x949631b5
  41daad:	pushf  
  41daae:	mov    cl,0xad
  41dab0:	push   ebx
  41dab1:	xchg   esp,eax
  41dab2:	pop    es
  41dab3:	jg     0x41db34
  41dab5:	xor    edx,ebp
  41dab7:	mov    DWORD PTR [esi-0x2],esi
  41daba:	int    0x45
  41dabc:	hlt    
  41dabd:	rsqrtps xmm7,xmm0
  41dac0:	test   al,0x15
  41dac2:	jae    0x2181a580
  41dac8:	adc    edi,DWORD PTR [edi+0x653b4e2b]
  41dace:	cmp    DWORD PTR [ecx],ebx
  41dad0:	dec    esp
  41dad1:	div    BYTE PTR [edx+0x2]
  41dad4:	mov    eax,ds:0x55d07115
  41dad9:	mov    ds:0x7f927733,al
  41dade:	repz jbe 0x41db18
  41dae1:	std    
  41dae2:	inc    esi
  41dae3:	jle    0x41daf7
  41dae5:	cld    
  41dae6:	sub    al,0xba
  41dae8:	test   DWORD PTR [ebx-0x5e],0x1cf0ec80
  41daef:	pushf  
  41daf0:	outs   dx,DWORD PTR ds:[esi]
  41daf1:	cmp    al,0x9e
  41daf3:	adc    BYTE PTR [ebp+0x72],ah
  41daf6:	push   ecx
  41daf7:	add    bl,BYTE PTR ds:[esp+ecx*2+0x2fb010a2]
  41daff:	mov    ebp,0x4000abdc
  41db04:	jno    0x41db48
  41db06:	les    eax,FWORD PTR [ebx]
  41db08:	fidiv  DWORD PTR [ebp-0x7ccc66d7]
  41db0e:	ret    
  41db0f:	push   ecx
  41db10:	fwait
  41db11:	sbb    ch,BYTE PTR [ecx+0x33]
  41db14:	hlt    
  41db15:	and    al,0xa1
  41db17:	push   ebp
  41db18:	lods   eax,DWORD PTR ds:[esi]
  41db19:	(bad)  
  41db1a:	dec    ebp
  41db1b:	mov    al,0x2c
  41db1d:	or     ebx,DWORD PTR [eax-0x17]
  41db20:	enter  0x272d,0xa0
  41db24:	es ret 
  41db26:	adc    ah,bh
  41db28:	pop    ebp
  41db29:	mov    ecx,0xead92bdd
  41db2e:	mov    ecx,0x583ec85f
  41db33:	cmp    ebp,ecx
  41db35:	add    DWORD PTR cs:[ecx-0x1d],edi
  41db39:	xor    eax,0x570281c
  41db3e:	pop    es
  41db3f:	xchg   ebx,eax
  41db40:	and    ch,BYTE PTR [ecx]
  41db42:	out    dx,eax
  41db43:	push   edx
  41db44:	add    al,0x77
  41db46:	jl     0x41db36
  41db48:	mov    ds:0xac20dfd2,al
  41db4d:	mov    BYTE PTR [eax+ecx*8-0x80],ah
  41db51:	iret   
  41db52:	jecxz  0x41dbc2
  41db54:	je     0x41dbb2
  41db56:	call   FWORD PTR [edx]
  41db58:	sbb    al,0x83
  41db5a:	push   0x2f
  41db5c:	addr16 nop
  41db5e:	les    esp,FWORD PTR [ebx]
  41db60:	clc    
  41db61:	fst    QWORD PTR [bp+si-0x1d2]
  41db66:	or     BYTE PTR [eax-0x206a448c],bl
  41db6c:	push   esp
  41db6d:	cmc    
  41db6e:	(bad)  
  41db6f:	out    dx,al
  41db70:	lds    edi,FWORD PTR [ebp-0x18]
  41db73:	pushf  
  41db74:	je     0x41db42
  41db76:	repnz fwait
  41db78:	xchg   edx,eax
  41db79:	push   cs
  41db7a:	cmp    cl,BYTE PTR [eax]
  41db7c:	jbe    0x41dbdc
  41db7e:	pop    esp
  41db7f:	sub    eax,DWORD PTR gs:[edx-0x6a]
  41db83:	test   DWORD PTR [ebx+ebx*2],ecx
  41db86:	stc    
  41db87:	lods   eax,DWORD PTR ds:[esi]
  41db88:	fadd   st,st(2)
  41db8a:	mov    eax,ecx
  41db8c:	or     al,bh
  41db8e:	mov    ah,BYTE PTR [ebx+0x56]
  41db91:	mov    bl,0xd2
  41db93:	push   ebx
  41db94:	xchg   edi,eax
  41db95:	out    dx,eax
  41db96:	sahf   
  41db97:	loope  0x41dbce
  41db99:	jp     0x41db1e
  41db9b:	mov    ?,WORD PTR [ebx-0x5f03977f]
  41dba1:	pop    ebp
  41dba2:	int3   
  41dba3:	pop    edi
  41dba4:	pop    ebp
  41dba5:	xchg   dl,cl
  41dba7:	cmp    edi,DWORD PTR [ebp+0xc]
  41dbaa:	shl    DWORD PTR [ebx],0xe2
  41dbad:	js     0x41dbf6
  41dbaf:	sbb    BYTE PTR [ecx-0x80],cl
  41dbb2:	and    eax,0x81baaa10
  41dbb7:	push   cs
  41dbb8:	cmc    
  41dbb9:	jo     0x41dc32
  41dbbb:	sub    DWORD PTR [eax+eiz*2-0x1],0x4a
  41dbc0:	mov    esi,eax
  41dbc2:	mov    eax,ds:0x9d067ee7
  41dbc7:	and    edx,ebx
  41dbc9:	push   cs
  41dbca:	leave  
  41dbcb:	push   ds
  41dbcc:	shr    BYTE PTR [ecx],0x35
  41dbcf:	aaa    
  41dbd0:	retf   
  41dbd1:	test   dh,dl
  41dbd3:	add    ecx,edi
  41dbd5:	call   0x48d3c597
  41dbda:	repnz adc BYTE PTR [edi+0x3304257],ch
  41dbe1:	aam    0x76
  41dbe3:	dec    ebp
  41dbe4:	outs   dx,DWORD PTR ds:[esi]
  41dbe5:	cmp    eax,0x7e2a3c45
  41dbea:	dec    ebp
  41dbeb:	cmp    BYTE PTR [ebp-0xa086d6a],bl
  41dbf1:	(bad)
  41dbf5:	add    edx,esi
  41dbf7:	outs   dx,DWORD PTR ds:[esi]
  41dbf8:	les    ecx,FWORD PTR [ecx]
  41dbfa:	push   esi
  41dbfb:	push   edx
  41dbfc:	int    0xe7
  41dbfe:	add    ah,al
  41dc00:	out    dx,al
  41dc01:	fimul  WORD PTR [ebx+0x54c3e09d]
  41dc07:	mov    cl,BYTE PTR [esi]
  41dc09:	cmp    al,0xbd
  41dc0b:	stos   BYTE PTR es:[edi],al
  41dc0c:	adc    edi,DWORD PTR ds:0x98a226df
  41dc12:	adc    BYTE PTR [esi+0x2d],bl
  41dc15:	stc    
  41dc16:	and    BYTE PTR [edx-0x38716dd6],cl
  41dc1c:	or     bh,BYTE PTR [eax-0x69]
  41dc1f:	pop    ds
  41dc20:	xchg   ebp,eax
  41dc21:	nop
  41dc22:	fs lahf 
  41dc24:	mov    al,ds:0xc466b2f4
  41dc29:	ss in  al,0x90
  41dc2c:	xor    edi,DWORD PTR [ecx-0x1a]
  41dc2f:	or     ebx,esi
  41dc31:	dec    edx
  41dc32:	popf   
  41dc33:	ds ins BYTE PTR es:[edi],dx
  41dc35:	outs   dx,BYTE PTR ds:[esi]
  41dc36:	sub    BYTE PTR [edi+edx*4],0x5
  41dc3a:	pusha  
  41dc3b:	sbb    al,al
  41dc3d:	pop    ebp
  41dc3e:	jl     0x41dc90
  41dc40:	nop
  41dc41:	inc    edx
  41dc42:	push   0x723b4f2a
  41dc47:	int3   
  41dc48:	fs mov edi,0x7bd6a88a
  41dc4e:	xor    DWORD PTR [ebx+0x30],0xffffff9d
  41dc52:	jmp    0x41dc07
  41dc54:	jp     0x41dc52
  41dc56:	repz popa 
  41dc58:	lds    eax,FWORD PTR [ebx-0xb5e4c92]
  41dc5e:	inc    esp
  41dc5f:	fisub  DWORD PTR [edx+esi*1-0x5d]
  41dc63:	ins    DWORD PTR es:[edi],dx
  41dc64:	data16 mov ds:0xf0f217d7,al
  41dc6a:	mov    edx,0x23a4c747
  41dc6f:	icebp  
  41dc70:	fist   WORD PTR [edx+0x4a8303ac]
  41dc76:	cmp    al,0x7
  41dc78:	ss jmp 0x41dcb8
  41dc7b:	xor    esi,DWORD PTR ds:0xf6621476
  41dc81:	jns    0x41dcc8
  41dc83:	rcr    ecx,1
  41dc85:	arpl   WORD PTR [esi-0x40],ax
  41dc88:	dec    esp
  41dc89:	leave  
  41dc8a:	or     al,0xa7
  41dc8c:	add    eax,0xdfc84bf4
  41dc91:	mov    bl,0x16
  41dc93:	or     bl,bl
  41dc95:	sbb    DWORD PTR [edx+esi*2-0x736d4d74],edx
  41dc9c:	add    bh,BYTE PTR [edi+eiz*4+0x5886e82]
  41dca3:	test   DWORD PTR [ecx-0x4],esi
  41dca6:	adc    BYTE PTR [edi-0x6],cl
  41dca9:	fist   WORD PTR [ecx-0x5b5f9fa7]
  41dcaf:	cmp    edx,edi
  41dcb1:	mov    ds:0x8f70a677,eax
  41dcb6:	in     al,dx
  41dcb7:	push   ebp
  41dcb8:	sbb    eax,0x8443cc6c
  41dcbd:	push   0x46
  41dcbf:	mov    dl,0x4
  41dcc1:	clc    
  41dcc2:	mov    edi,0x952b86fd
  41dcc7:	push   es
  41dcc8:	mov    al,0xe9
  41dcca:	sbb    ebx,esi
  41dccc:	sbb    DWORD PTR [edx-0x52a879c],0x88bc4117
  41dcd6:	jns    0x41dcaa
  41dcd8:	and    ebx,edx
  41dcda:	dec    edi
  41dcdb:	addr16 ja 0x41dcfd
  41dcde:	in     eax,0x7b
  41dce0:	mov    esi,ebx
  41dce2:	das    
  41dce3:	mov    esp,0x9f305dd6
  41dce8:	leave  
  41dce9:	add    ecx,DWORD PTR [eax]
  41dceb:	cdq    
  41dcec:	push   ebx
  41dced:	jbe    0x41dca7
  41dcef:	ja     0x41dcc0
  41dcf1:	mov    ds:0x19540d48,al
  41dcf6:	retf   0x1140
  41dcf9:	push   edi
  41dcfa:	mov    ss,WORD PTR [ebp-0x16]
  41dcfd:	sub    BYTE PTR [edx-0x39],al
  41dd00:	xchg   dl,cl
  41dd02:	xor    BYTE PTR [ecx+0x3d7fabd4],dl
  41dd08:	jnp    0x41dcc4
  41dd0a:	adc    eax,0x95406d83
  41dd0f:	shl    esp,cl
  41dd11:	and    BYTE PTR [edx-0x78],dl
  41dd14:	ds pop es
  41dd16:	jmp    0x41dd2c
  41dd18:	dec    edi
  41dd19:	mov    WORD PTR [eax+0xad718e],es
  41dd1f:	push   ebx
  41dd20:	push   0xa35048f4
  41dd25:	pop    esp
  41dd26:	enter  0x9ba3,0x14
  41dd2a:	jo     0x41dcdd
  41dd2c:	cmp    eax,0xc6b5da84
  41dd31:	mov    dl,0x99
  41dd33:	sub    DWORD PTR [esi],0x2
  41dd36:	mov    ds:0x4ce29c27,al
  41dd3b:	jne    0x41dd06
  41dd3d:	imul   esp,DWORD PTR fs:[ebx+0x3849f149],0xf31ffd1
  41dd48:	dec    edx
  41dd49:	test   ebp,esi
  41dd4b:	pop    esi
  41dd4c:	xchg   ebp,eax
  41dd4d:	cli    
  41dd4e:	add    bl,BYTE PTR cs:[edi+0x1c8801db]
  41dd55:	aaa    
  41dd56:	jle    0x41dd5f
  41dd58:	cmp    dh,BYTE PTR ds:0x61c12b07
  41dd5e:	adc    BYTE PTR [edx],dl
  41dd60:	stos   DWORD PTR es:[edi],eax
  41dd61:	fisub  WORD PTR cs:[ebx]
  41dd64:	pop    edx
  41dd65:	sub    eax,0xd1e6bd1d
  41dd6a:	and    eax,0xa6c521be
  41dd6f:	mov    ch,0x5a
  41dd71:	jbe    0x41dda4
  41dd73:	test   DWORD PTR [ebx-0x74f37200],ebx
  41dd79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd7a:	push   eax
  41dd7b:	enter  0x760c,0x35
  41dd7f:	cmp    DWORD PTR [ecx-0x6d],edx
  41dd82:	inc    esp
  41dd83:	popa   
  41dd84:	inc    edi
  41dd85:	xchg   BYTE PTR [ecx-0x17],bh
  41dd88:	imul   esp,DWORD PTR [edi]
  41dd8b:	adc    al,0x6e
  41dd8d:	fdivr  st(7),st
  41dd8f:	aas    
  41dd90:	adc    al,0x8a
  41dd92:	ror    BYTE PTR [esi+0x3da1889a],cl
  41dd98:	adc    DWORD PTR [esi+0x22369fd7],ebp
  41dd9e:	mov    esi,0x639e1c29
  41dda3:	inc    ebp
  41dda4:	xor    bh,ch
  41dda6:	xchg   esp,eax
  41dda7:	add    ah,BYTE PTR [edi+0x34]
  41ddaa:	xchg   edx,eax
  41ddab:	sbb    bl,BYTE PTR [eax+ecx*4+0x71ef17a]
  41ddb2:	jmp    0x41de2a
  41ddb4:	push   ebx
  41ddb5:	call   0x578e:0xee29813
  41ddbc:	adc    eax,0x73cf66bf
  41ddc1:	in     eax,dx
  41ddc2:	in     eax,0xe4
  41ddc4:	jo     0x41dda0
  41ddc6:	xchg   edi,eax
  41ddc7:	jo     0x41de00
  41ddc9:	mov    dl,0x15
  41ddcb:	rcl    BYTE PTR [edi],cl
  41ddcd:	sub    BYTE PTR [edx-0x42],bl
  41ddd0:	stos   DWORD PTR es:[edi],eax
  41ddd1:	ss adc al,0x22
  41ddd4:	cmp    eax,0x6092b74f
  41ddd9:	loopne 0x41de0e
  41dddb:	fcomp  st(2)
  41dddd:	in     al,dx
  41ddde:	fsub   DWORD PTR [ebp+0x40]
  41dde1:	test   edx,edx
  41dde3:	(bad)  
  41dde4:	cli    
  41dde5:	xchg   BYTE PTR [ecx+0x7bbf6ca7],bh
  41ddeb:	mov    ecx,0xbfb03ac3
  41ddf0:	retf   
  41ddf1:	or     al,0xb6
  41ddf3:	mov    ecx,0x682cedfa
  41ddf8:	xchg   edx,eax
  41ddf9:	ds push ebp
  41ddfb:	cmc    
  41ddfc:	sar    al,1
  41ddfe:	xchg   esp,eax
  41ddff:	pop    eax
  41de00:	xchg   ecx,eax
  41de01:	loope  0x41de01
  41de03:	jp     0x41de43
  41de05:	and    BYTE PTR [ebx+eiz*1-0x32],0xf
  41de0a:	inc    ebx
  41de0b:	sub    BYTE PTR [ebx-0x2600326d],0xef
  41de12:	in     al,dx
  41de13:	stos   DWORD PTR es:[edi],eax
  41de14:	stc    
  41de15:	leave  
  41de16:	push   ecx
  41de17:	jecxz  0x41de21
  41de19:	pop    ds
  41de1a:	ds call 0x2207679c
  41de20:	pop    ebx
  41de21:	shl    cl,0x75
  41de24:	jnp    0x41de27
  41de26:	adc    esp,DWORD PTR [edi+0x7b545190]
  41de2c:	mov    ecx,0xf0217b02
  41de31:	repnz add eax,0x4ba84fe5
  41de37:	(bad)  
  41de39:	ss sbb bh,bh
  41de3c:	push   esp
  41de3d:	ds adc esi,0xed8af75e
  41de44:	pop    ss
  41de45:	adc    dh,BYTE PTR [edi-0x2c]
  41de48:	lods   al,BYTE PTR ds:[esi]
  41de49:	cli    
  41de4a:	jae    0x41dea4
  41de4c:	and    dh,BYTE PTR [edx+0x78]
  41de4f:	(bad)  
  41de50:	mov    ebx,0x635d52
  41de55:	xlat   BYTE PTR ds:[ebx]
  41de56:	aaa    
  41de57:	mov    eax,0xe1d9274b
  41de5c:	xor    edi,ebp
  41de5e:	pusha  
  41de5f:	mov    dh,0xdf
  41de61:	jl     0x41de76
  41de63:	mul    BYTE PTR [edx+0x5e]
  41de66:	xor    dl,al
  41de68:	mov    dh,0x38
  41de6a:	mov    ecx,0xe1478005
  41de6f:	mov    esp,0xc33c0686
  41de74:	sub    dh,BYTE PTR ds:0x16dec0d3
  41de7a:	std    
  41de7b:	neg    bl
  41de7d:	repz jmp 0x41de62
  41de80:	test   al,0xf8
  41de82:	aad    0xdd
  41de84:	loop   0x41dec6
  41de86:	(bad)  
  41de87:	push   esi
  41de88:	push   DWORD PTR [esi+eax*4-0x3d775969]
  41de8f:	out    dx,al
  41de90:	mov    al,0x70
  41de92:	outs   dx,DWORD PTR ds:[esi]
  41de93:	das    
  41de94:	or     DWORD PTR [edi+ebp*8+0x61],edx
  41de98:	push   ecx
  41de99:	mov    edx,0x49ab1fdf
  41de9e:	push   cs
  41de9f:	aaa    
  41dea0:	pop    ds
  41dea1:	ret    0xe1fa
  41dea4:	scas   al,BYTE PTR es:[edi]
  41dea5:	xchg   ebx,eax
  41dea6:	jp     0x41de8c
  41dea8:	push   es
  41dea9:	jge    0x41de59
  41deab:	xor    ebp,DWORD PTR [ebx]
  41dead:	jg     0x41de6a
  41deaf:	xchg   edx,eax
  41deb0:	inc    eax
  41deb1:	fbstp  TBYTE PTR [ebx]
  41deb3:	or     eax,0x98bd9099
  41deb8:	inc    edx
  41deb9:	jmp    0x93d6:0x8b1f176a
  41dec0:	retf   
  41dec1:	pop    ss
  41dec2:	sub    al,0xa0
  41dec4:	xlat   BYTE PTR ds:[ebx]
  41dec5:	(bad)  
  41dec7:	mov    bl,0x61
  41dec9:	mov    edi,0x973884fd
  41dece:	sahf   
  41decf:	push   esi
  41ded0:	xchg   DWORD PTR [ebp-0x400f0801],edi
  41ded6:	call   0x212c:0xf51bae6
  41dedd:	sti    
  41dede:	adc    BYTE PTR [eax],dh
  41dee0:	mov    edi,0x617a78e9
  41dee5:	scas   eax,DWORD PTR es:[edi]
  41dee6:	add    eax,0x5cc9f937
  41deeb:	cmp    al,0x7f
  41deed:	in     al,dx
  41deee:	fsub   DWORD PTR [ebx]
  41def0:	inc    esp
  41def1:	mov    al,ds:0x48222a95
  41def6:	out    dx,eax
  41def7:	mov    esi,0xa5592ac6
  41defc:	std    
  41defd:	in     eax,dx
  41defe:	pop    edx
  41deff:	pop    esp
  41df00:	add    BYTE PTR [eax],bl
  41df02:	xlat   BYTE PTR ds:[ebx]
  41df03:	in     al,dx
  41df04:	fcom   QWORD PTR [edx-0x5609cc0a]
  41df0a:	lods   eax,DWORD PTR ds:[esi]
  41df0b:	sbb    DWORD PTR [ecx+0x53],ecx
  41df0e:	jl     0x41df5f
  41df10:	add    BYTE PTR [edi-0x1d2c20e7],bh
  41df16:	xchg   DWORD PTR [eax-0x3f],edx
  41df19:	clc    
  41df1a:	push   ds
  41df1b:	mov    bh,0x6d
  41df1d:	mov    ah,0x35
  41df1f:	and    BYTE PTR [edi-0x2b],0x79
  41df23:	pusha  
  41df24:	add    eax,0xdc03b691
  41df29:	xlat   BYTE PTR ds:[ebx]
  41df2a:	cmp    eax,0x9dd00af7
  41df2f:	test   DWORD PTR [esi+0x78],esi
  41df32:	int    0x65
  41df34:	mov    bh,0xc0
  41df36:	and    ecx,DWORD PTR [esi+0x37f7fb4e]
  41df3c:	cdq    
  41df3d:	or     eax,0xa138cb08
  41df42:	ret    0xdd4c
  41df45:	jle    0x41defc
  41df47:	into   
  41df48:	jp     0x41dfc6
  41df4a:	jns    0x41def7
  41df4c:	dec    esi
  41df4d:	mov    eax,0x1b71f183
  41df52:	repz sub al,0xd9
  41df55:	pop    esp
  41df56:	das    
  41df57:	scas   al,BYTE PTR es:[edi]
  41df58:	loopne 0x41df8f
  41df5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df5b:	sbb    DWORD PTR [edx-0x14c41d64],edi
  41df61:	cmc    
  41df62:	ja     0x41df33
  41df64:	mov    bh,0x77
  41df66:	imul   esi,DWORD PTR [esi-0xa],0x7f
  41df6a:	fcomp  DWORD PTR [esi]
  41df6c:	enter  0x5d60,0xb7
  41df70:	mov    ebp,ecx
  41df72:	mov    ebp,DWORD PTR [ecx-0x3b47d47d]
  41df78:	outs   dx,BYTE PTR ds:[esi]
  41df79:	ret    0xcca9
  41df7c:	stos   DWORD PTR es:[edi],eax
  41df7d:	inc    esp
  41df7e:	(bad)  
  41df7f:	sub    DWORD PTR [ebx],esp
  41df81:	fwait
  41df82:	ja     0x41dfa8
  41df84:	out    0xbd,eax
  41df86:	gs in  eax,dx
  41df88:	jae    0x41dfb1
  41df8a:	inc    ecx
  41df8b:	int3   
  41df8c:	xchg   BYTE PTR [edx+0x6fbc8ef8],ah
  41df92:	jp     0x41df17
  41df94:	in     eax,dx
  41df95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df96:	or     eax,0x4a9041ab
  41df9b:	jecxz  0x41df7a
  41df9d:	push   es
  41df9e:	scas   al,BYTE PTR es:[edi]
  41df9f:	sbb    cl,BYTE PTR [ebp-0x5c506519]
  41dfa5:	inc    ecx
  41dfa6:	push   ss
  41dfa7:	xchg   ebx,eax
  41dfa8:	into   
  41dfa9:	adc    ecx,0xffffffe1
  41dfac:	dec    ebp
  41dfad:	sbb    esp,DWORD PTR [ebp+0x4a]
  41dfb0:	shrd   DWORD PTR [edx-0x4d],edi,cl
  41dfb4:	int3   
  41dfb5:	ss push eax
  41dfb7:	add    DWORD PTR [edx-0x1f],ebp
  41dfba:	push   eax
  41dfbb:	push   eax
  41dfbc:	aad    0xaf
  41dfbe:	test   al,0x72
  41dfc0:	mov    esp,0x91ccb8cf
  41dfc5:	mov    fs,WORD PTR [eax]
  41dfc7:	ja     0x41dff2
  41dfc9:	in     eax,dx
  41dfca:	sbb    al,al
  41dfcc:	fwait
  41dfcd:	mov    ebp,0xc944edbc
  41dfd2:	jae    0x41df7b
  41dfd4:	lahf   
  41dfd5:	push   es
  41dfd6:	mov    edi,0x2d35121c
  41dfdb:	sti    
  41dfdc:	call   0xd25c:0x42e5391a
  41dfe3:	xchg   edi,eax
  41dfe4:	jbe    0x41dfbf
  41dfe6:	mov    bl,0x58
  41dfe8:	adc    eax,0xd598b47e
  41dfed:	test   al,0x86
  41dfef:	mov    ch,0xfb
  41dff1:	mov    bh,0x21
  41dff3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dff4:	popa   
  41dff5:	add    DWORD PTR [edi-0x2b],0xffffffb7
  41dff9:	std    
  41dffa:	mov    ds:0x44ae9f0e,al
  41dfff:	add    al,0x47
  41e001:	add    al,ah
  41e003:	ds icebp 
  41e005:	ret    0x4170
  41e008:	xchg   ecx,eax
  41e009:	lea    ebp,[ebp-0x2259c4b2]
  41e00f:	jle    0x41dfbb
  41e011:	jnp    0x41e03f
  41e013:	aas    
  41e014:	sbb    DWORD PTR [ecx],esi
  41e016:	shl    BYTE PTR [esi+0x67632e68],cl
  41e01c:	in     al,0x65
  41e01e:	xor    BYTE PTR [eax+ecx*1-0x4e],cl
  41e022:	push   edi
  41e023:	ror    edi,1
  41e025:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e026:	std    
  41e027:	jle    0x41dfeb
  41e029:	and    BYTE PTR [eax-0x6d96deac],dh
  41e02f:	xchg   ebx,eax
  41e030:	add    bh,BYTE PTR [edx]
  41e032:	push   es
  41e033:	pop    esi
  41e034:	mov    al,0x6c
  41e036:	and    BYTE PTR [ebx+0x1c2ff97],0xa8
  41e03d:	push   es
  41e03e:	hlt    
  41e03f:	in     eax,dx
  41e040:	(bad)  
  41e041:	pop    ebx
  41e042:	adc    ecx,DWORD PTR [ecx+0x27]
  41e045:	fiadd  WORD PTR [ebp+0x2b]
  41e048:	mov    eax,0x1ba5abd0
  41e04d:	add    eax,0x94dce44c
  41e052:	sub    bl,ch
  41e054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e055:	mov    ebp,ebx
  41e057:	mov    ah,0x5
  41e059:	arpl   WORD PTR [edx+eiz*2-0x7],bp
  41e05d:	inc    edx
  41e05e:	inc    ebx
  41e05f:	jno    0x41e07a
  41e061:	lods   eax,DWORD PTR ds:[esi]
  41e062:	lock cmp eax,0x40a666b0
  41e068:	xlat   BYTE PTR ds:[ebx]
  41e069:	jne    0x41e0a0
  41e06b:	add    eax,0x3d5b8174
  41e070:	push   esp
  41e071:	pop    eax
  41e072:	push   0x77
  41e074:	mov    eax,0xaee746f2
  41e079:	dec    eax
  41e07a:	xor    BYTE PTR [ebx+0x7ff4fee2],ah
  41e080:	sti    
  41e081:	jmp    0xc44fb4a6
  41e086:	shl    BYTE PTR [ebx+0x48fe13d0],1
  41e08c:	dec    ebx
  41e08d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e08e:	dec    eax
  41e08f:	or     al,0xb3
  41e091:	jo     0x41e02f
  41e093:	imul   esp,DWORD PTR [eax+0x53942659],0x295a9f00
  41e09d:	push   ebp
  41e09e:	and    esp,DWORD PTR [ecx-0x5966ca83]
  41e0a4:	xor    DWORD PTR [edx],edx
  41e0a6:	inc    esi
  41e0a7:	popa   
  41e0a8:	cmp    BYTE PTR [edi+0xe],bh
  41e0ab:	add    al,0x61
  41e0ad:	xchg   ecx,eax
  41e0ae:	loope  0x41e0f2
  41e0b0:	sbb    DWORD PTR [ebx-0x617e724c],ecx
  41e0b6:	(bad)  
  41e0b7:	fdiv   st(4),st
  41e0b9:	push   es
  41e0ba:	inc    esp
  41e0bb:	test   BYTE PTR [ebx-0x6b],0x27
  41e0bf:	mov    al,0x9f
  41e0c1:	inc    ebp
  41e0c2:	adc    eax,0xebe507d3
  41e0c7:	cmc    
  41e0c8:	sub    eax,0xd596c9c4
  41e0cd:	sbb    BYTE PTR [edi+edx*1-0x7c],bh
  41e0d1:	fimul  DWORD PTR [ebx-0x7]
  41e0d4:	push   esp
  41e0d5:	pop    esi
  41e0d6:	push   ebp
  41e0d7:	(bad)  
  41e0d8:	enter  0x86cc,0x30
  41e0dc:	xor    BYTE PTR [ecx+0x29],cl
  41e0df:	icebp  
  41e0e0:	imul   ebx,ecx,0xffffff99
  41e0e3:	pop    ebx
  41e0e4:	sbb    DWORD PTR [edi+0x57],ebp
  41e0e7:	imul   esp,DWORD PTR [edx+0x24],0x2c5f3a6d
  41e0ee:	lock jne 0x41e150
  41e0f1:	mov    ebp,0x29efa9a8
  41e0f6:	mov    ch,0xd9
  41e0f8:	inc    edx
  41e0f9:	aad    0xa8
  41e0fb:	or     cl,BYTE PTR [edi]
  41e0fd:	clts   
  41e0ff:	and    edx,0x8697cd05
  41e105:	dec    BYTE PTR [esi]
  41e107:	mov    ebp,0xd62ef91d
  41e10c:	or     esp,DWORD PTR [ebx]
  41e10e:	pop    eax
  41e10f:	leave  
  41e110:	pop    ecx
  41e111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e112:	test   DWORD PTR [edi],ecx
  41e114:	inc    edi
  41e115:	mov    al,ds:0x964afd80
  41e11a:	stc    
  41e11b:	inc    eax
  41e11c:	in     al,dx
  41e11d:	lds    edx,FWORD PTR [ebx+0x28]
  41e120:	test   BYTE PTR [ecx-0x332b38b4],bl
  41e126:	inc    ebx
  41e127:	out    0x22,al
  41e129:	fsubrp st(1),st
  41e12b:	aam    0xec
  41e12d:	and    eax,0x6ea61b66
  41e132:	sbb    BYTE PTR [ecx-0x8580abe],cl
  41e138:	mov    eax,0xcf15bbaf
  41e13d:	sbb    esi,DWORD PTR [eax]
  41e13f:	pop    es
  41e140:	and    DWORD PTR [eiz*4-0x4dda4c97],esp
  41e147:	pop    es
  41e148:	in     al,dx
  41e149:	jb     0x41e12e
  41e14b:	xchg   edx,eax
  41e14c:	push   ecx
  41e14d:	pusha  
  41e14e:	out    dx,al
  41e14f:	xlat   BYTE PTR ds:[ebx]
  41e150:	xchg   cl,al
  41e152:	shl    esp,0xa7
  41e155:	cmp    BYTE PTR [edi+0x1e],0xc1
  41e159:	sbb    edi,ebx
  41e15b:	mov    dh,0x27
  41e15d:	aad    0xf8
  41e15f:	or     DWORD PTR [eax-0x30],ebp
  41e162:	dec    ebp
  41e163:	push   edx
  41e164:	jge    0x41e180
  41e166:	mov    bh,0x33
  41e168:	or     eax,0xae82076f
  41e16d:	mov    bh,0x69
  41e16f:	les    ebp,FWORD PTR [ecx+0x332d9f99]
  41e175:	mov    BYTE PTR [ebp-0x8],0x50
  41e179:	icebp  
  41e17a:	xchg   BYTE PTR [edx-0x53a29c0f],ah
  41e180:	add    ecx,DWORD PTR [eax-0x61]
  41e183:	sti    
  41e184:	adc    edx,0x6ca7628e
  41e18a:	xor    ecx,DWORD PTR [ecx+esi*2]
  41e18d:	div    DWORD PTR [ebp-0x7e26ad47]
  41e193:	leave  
  41e194:	jae    0x41e1ee
  41e196:	cmp    BYTE PTR [eax+0x3ef6e19a],ch
  41e19c:	retf   
  41e19d:	xchg   edx,eax
  41e19e:	test   DWORD PTR [eax],0x66bb130b
  41e1a4:	mov    bl,bh
  41e1a6:	mov    dh,0x6b
  41e1a8:	dec    ebx
  41e1a9:	push   cs
  41e1aa:	cmp    al,0x13
  41e1ac:	bound  edi,QWORD PTR [ecx]
  41e1ae:	mov    ds:0x3170282f,eax
  41e1b3:	jle    0x41e178
  41e1b5:	xchg   DWORD PTR [ebp+0x15],esp
  41e1b8:	dec    edx
  41e1b9:	getsec 
  41e1bb:	xchg   esi,eax
  41e1bc:	adc    ch,cl
  41e1be:	test   al,0xaa
  41e1c0:	sar    DWORD PTR [ebx-0x2d6f19c3],0x5
  41e1c7:	ja     0x41e19d
  41e1c9:	xlat   BYTE PTR ds:[ebx]
  41e1ca:	mov    ebp,0xf3d9f0e0
  41e1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e1d0:	daa    
  41e1d1:	mov    dh,0x4c
  41e1d3:	loop   0x41e1b9
  41e1d5:	jbe    0x41e224
  41e1d7:	or     al,0xc3
  41e1d9:	scas   eax,DWORD PTR es:[edi]
  41e1da:	add    DWORD PTR [edi+0x654cf321],ebp
  41e1e0:	std    
  41e1e1:	pop    es
  41e1e2:	xor    ah,BYTE PTR [si-0x57]
  41e1e6:	int    0x1b
  41e1e8:	mov    ebx,0x48f4d6ba
  41e1ed:	sar    ch,cl
  41e1ef:	push   ebp
  41e1f0:	jb     0x41e1ba
  41e1f2:	test   ebp,edi
  41e1f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1f5:	pop    ds
  41e1f6:	pop    es
  41e1f7:	xor    eax,0x4bee410f
  41e1fc:	out    0x1e,eax
  41e1fe:	pop    edx
  41e1ff:	mov    esp,0x1dbdffcd
  41e204:	and    al,BYTE PTR ds:[ecx]
  41e207:	or     DWORD PTR [ecx-0x59],0x3ef7ace2
  41e20e:	and    al,0x9f
  41e210:	mov    bl,0x9d
  41e212:	dec    edi
  41e213:	pop    eax
  41e214:	arpl   WORD PTR [ecx+0x6d],sp
  41e217:	adc    BYTE PTR [esi+0x26a60a28],0x22
  41e21e:	in     al,dx
  41e21f:	mov    esi,0x3256299b
  41e224:	add    BYTE PTR [ebx-0x2caca6e2],0xe
  41e22b:	mov    dh,0xbc
  41e22d:	jmp    0x9e15:0xce4a1df3
  41e234:	das    
  41e235:	loope  0x41e252
  41e237:	pushf  
  41e238:	jno    0x41e247
  41e23a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e23b:	nop
  41e23c:	push   ss
  41e23d:	xchg   edi,eax
  41e23e:	sbb    esi,DWORD PTR [esi+0x74]
  41e241:	rol    BYTE PTR [edi+0xf9b2694],cl
  41e247:	sbb    BYTE PTR [eax+0x1],bh
  41e24a:	dec    ebp
  41e24b:	mov    bl,0xc0
  41e24d:	cwde   
  41e24e:	inc    eax
  41e24f:	pop    ss
  41e250:	mov    ebp,0x1c6cf69b
  41e255:	shl    BYTE PTR [edi+edx*8],cl
  41e258:	ret    0x7937
  41e25b:	pusha  
  41e25c:	shl    DWORD PTR [eax],0x7f
  41e25f:	adc    eax,DWORD PTR [edx-0x6f]
  41e262:	(bad)  
  41e263:	mov    al,ds:0x33fb3e5f
  41e268:	cmp    eax,0x5ff2976d
  41e26d:	shl    DWORD PTR [edi-0x45],cl
  41e270:	or     BYTE PTR [ebx-0x57],al
  41e273:	imul   esi,edx,0x14
  41e276:	int3   
  41e277:	ja     0x41e238
  41e279:	sbb    eax,0x28266663
  41e27e:	push   0xfffffffa
  41e280:	and    eax,ecx
  41e282:	dec    edx
  41e283:	dec    ecx
  41e284:	jbe    0x41e2fe
  41e286:	fisttp WORD PTR [ebx-0x755559d5]
  41e28c:	faddp  st(6),st
  41e28e:	enter  0x33e0,0xc8
  41e292:	(bad)  
  41e293:	imul   esp,DWORD PTR [esi+0x6e],0x97edacad
  41e29a:	sti    
  41e29b:	adc    eax,0xb53d18bd
  41e2a0:	push   esp
  41e2a1:	jle    0x41e235
  41e2a3:	out    0x59,eax
  41e2a5:	xlat   BYTE PTR ds:[ebx]
  41e2a6:	scas   eax,DWORD PTR es:[edi]
  41e2a7:	pop    ebp
  41e2a8:	je     0x41e278
  41e2aa:	fstp   st(6)
  41e2ac:	or     BYTE PTR [ebp-0x2a],bl
  41e2af:	or     al,0xf6
  41e2b1:	dec    ebp
  41e2b2:	lods   eax,DWORD PTR ds:[esi]
  41e2b3:	shl    edi,cl
  41e2b5:	arpl   WORD PTR [ebx+edi*1],di
  41e2b8:	mov    ebp,0xbe4d8c97
  41e2bd:	fmul   st,st(4)
  41e2bf:	out    dx,al
  41e2c0:	call   0x1d89b4e5
  41e2c5:	ror    DWORD PTR [ecx],cl
  41e2c7:	mov    dl,0x9
  41e2c9:	int3   
  41e2ca:	xorps  xmm0,XMMWORD PTR [ebx+ebx*8]
  41e2ce:	add    al,0x5b
  41e2d0:	jne    0x41e25e
  41e2d2:	popa   
  41e2d3:	aaa    
  41e2d4:	mov    edx,0x24ed3ed2
  41e2d9:	add    ebp,DWORD PTR ds:0xa0a9f01b
  41e2df:	push   ds
  41e2e0:	fnstsw WORD PTR [ecx]
  41e2e2:	imul   esp,DWORD PTR [ebx-0x4f097ab4],0xce84cc1f
  41e2ec:	(bad)  
  41e2ed:	ficom  DWORD PTR [ebp-0xcbc72fc]
  41e2f3:	jmp    0x293696f5
  41e2f8:	sub    DWORD PTR [ebx-0x3c],edx
  41e2fb:	jo     0x41e368
  41e2fd:	sar    bl,cl
  41e2ff:	addr16 clc 
  41e301:	jmp    0x12fd938c
  41e306:	sub    eax,0xb49faf73
  41e30b:	out    dx,al
  41e30c:	push   ebp
  41e30d:	adc    DWORD PTR [ecx+0x6100d8d],0x4542fb51
  41e317:	fistp  DWORD PTR [ebx+0x588b3f8b]
  41e31d:	cmp    al,0x8d
  41e31f:	jl     0x41e31c
  41e321:	js     0x41e2ae
  41e323:	cmp    al,0x7
  41e325:	mov    DWORD PTR [ebp-0x18],edi
  41e328:	mov    edi,DWORD PTR [ebp+0x8]
  41e32b:	xor    edi,ecx
  41e32d:	add    edi,edx
  41e32f:	mov    DWORD PTR [ebp-0x1c],edi
  41e332:	mov    edi,DWORD PTR [ebp+0x8]
  41e335:	xor    edi,ecx
  41e337:	mov    ecx,DWORD PTR [ebp-0x18]
  41e33a:	add    edi,edx
  41e33c:	cmp    ecx,edi
  41e33e:	je     0x41e380
  41e344:	mov    ecx,DWORD PTR [ebp-0x18]
  41e347:	add    ecx,eax
  41e349:	mov    DWORD PTR [ebp-0x1c],ecx
  41e34c:	mov    ecx,DWORD PTR [ebp-0x30]
  41e34f:	mov    edx,DWORD PTR [ebp-0x2c]
  41e352:	mov    edx,0xa145
  41e357:	xor    cx,dx
  41e35a:	mov    edx,DWORD PTR [ebp-0x1c]
  41e35d:	mov    edx,DWORD PTR [edx+0xc]
  41e360:	add    cx,si
  41e363:	cmp    WORD PTR [eax+edx*1],cx
  41e367:	jne    0x41e380
  41e36d:	mov    ecx,DWORD PTR ds:0x428365
  41e373:	mov    ecx,DWORD PTR [ecx+0x198]
  41e379:	mov    DWORD PTR [ecx],eax
  41e37b:	jmp    0x41e3db
  41e380:	push   DWORD PTR [ebp+0x1c]
  41e383:	push   DWORD PTR [ebp+0x18]
  41e386:	jmp    0x41e3ca
  41e38b:	mov    eax,DWORD PTR [ebp+0x18]
  41e38e:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e391:	cmp    eax,0x70941f92
  41e396:	jne    0x41e3af
  41e39c:	cmp    ecx,ebx
  41e39e:	jne    0x41e3af
  41e3a4:	push   ebx
  41e3a5:	push   0x70941f9c
  41e3aa:	jmp    0x41e3ca
  41e3af:	mov    eax,DWORD PTR [ebp+0x18]
  41e3b2:	mov    ecx,DWORD PTR [ebp+0x1c]
  41e3b5:	cmp    eax,0x70941f9c
  41e3ba:	jne    0x41e3db
  41e3c0:	cmp    ecx,ebx
  41e3c2:	jne    0x41e3db
  41e3c8:	push   ebx
  41e3c9:	push   edi
  41e3ca:	push   DWORD PTR [ebp+0x14]
  41e3cd:	push   DWORD PTR [ebp+0x10]
  41e3d0:	push   DWORD PTR [ebp+0xc]
  41e3d3:	push   DWORD PTR [ebp+0x8]
  41e3d6:	call   0x417181
  41e3db:	pop    edi
  41e3dc:	pop    esi
  41e3dd:	pop    ebx
  41e3de:	leave  
  41e3df:	ret    0x18
  41e3e2:	push   ebp
  41e3e3:	mov    ebp,esp
  41e3e5:	and    esp,0xfffffff8
  41e3e8:	sub    esp,0xcc
  41e3ee:	mov    al,ds:0x42848a
  41e3f3:	push   ebx
  41e3f4:	mov    DWORD PTR ds:0x428e39,0x550e
  41e3fe:	push   esi
  41e3ff:	mov    DWORD PTR ds:0x428e29,0x154d
  41e409:	push   edi
  41e40a:	mov    DWORD PTR ds:0x428e49,0x193
  41e414:	mov    BYTE PTR [esp+0xd6],0x0
  41e41c:	cmp    al,BYTE PTR ds:0x428497
  41e422:	je     0x41e439
  41e428:	xor    eax,eax
  41e42a:	mov    DWORD PTR ds:0x428e81,0x6e70
  41e434:	jmp    0x41f510
  41e439:	mov    al,ds:0x4284a3
  41e43e:	mov    DWORD PTR ds:0x428ecd,0xf87
  41e448:	cmp    al,BYTE PTR ds:0x4284b4
  41e44e:	jne    0x41e428
  41e454:	mov    edi,DWORD PTR ds:0x42ca5c
  41e45a:	push   0x4284bd
  41e45f:	adc    DWORD PTR ds:0x428e35,0x428eb9
  41e469:	push   0x4284c9
  41e46e:	call   edi
  41e470:	sbb    DWORD PTR ds:0x428e45,0x428eb5
  41e47a:	test   eax,eax
  41e47c:	mov    DWORD PTR ds:0x428e85,0x5858
  41e486:	je     0x41e428
  41e48c:	push   0x1
  41e48e:	and    DWORD PTR ds:0x428e85,0x768a
  41e498:	push   0x9765765
  41e49d:	call   DWORD PTR ds:0x42ca34
  41e4a3:	and    DWORD PTR ds:0x428e49,0x546c
  41e4ad:	push   0x4284d9
  41e4b2:	sub    DWORD PTR ds:0x428e55,0x3ef4
  41e4bc:	lea    eax,[esp+0x5c]
  41e4c0:	adc    DWORD PTR ds:0x428ecd,0x2de
  41e4ca:	push   eax
  41e4cb:	xor    DWORD PTR ds:0x428e65,0x1e99
  41e4d5:	call   DWORD PTR ds:0x42ca44
  41e4db:	add    DWORD PTR ds:0x428e9d,edi
  41e4e1:	mov    DWORD PTR [esp+0x30],0x0
  41e4e9:	or     edx,esi
  41e4eb:	mov    ecx,0xf89c85b9
  41e4f0:	adc    edx,edx
  41e4f2:	mov    DWORD PTR [esp+0x28],ecx
  41e4f6:	mov    DWORD PTR [esp+0xc],0xf89c85b8
  41e4fe:	dec    esi
  41e4ff:	lea    eax,[esp+0x3c]
  41e503:	and    DWORD PTR ds:0x428ea9,0x0
  41e50d:	xor    edx,edx
  41e50f:	add    edx,DWORD PTR ds:0x428ea9
  41e515:	inc    edx
  41e516:	mov    DWORD PTR ds:0x428ea9,edx
  41e51c:	cmp    DWORD PTR ds:0x428ea9,0x21
  41e523:	jle    0x41e54e
  41e529:	jmp    0x41e541
  41e52e:	push   0x428124
  41e533:	push   DWORD PTR [ebp-0x14]
  41e536:	push   0x1e1e
  41e53b:	call   DWORD PTR ds:0x42ca60
  41e541:	cmp    DWORD PTR ds:0x428ea9,0x17
  41e548:	jb     0x41e50d
  41e54e:	mov    DWORD PTR [esp+0x30],eax
  41e552:	adc    esi,DWORD PTR ds:0x428ead
  41e558:	lea    eax,[esp+0x38]
  41e55c:	and    DWORD PTR ds:0x428e89,0x0
  41e566:	jmp    0x41e578
  41e56b:	mov    ebx,DWORD PTR ds:0x428e89
  41e571:	inc    ebx
  41e572:	mov    DWORD PTR ds:0x428e89,ebx
  41e578:	cmp    DWORD PTR ds:0x428e89,0x11
  41e57f:	jae    0x41e5ca
  41e585:	cmp    DWORD PTR ds:0x428e89,0x5
  41e58c:	jb     0x41e5ca
  41e592:	jmp    0x41e5ab
  41e597:	push   0x42814e
  41e59c:	push   DWORD PTR [ebp-0x24]
  41e59f:	push   DWORD PTR [ebp-0x10]
  41e5a2:	push   DWORD PTR [ebp-0x18]
  41e5a5:	call   DWORD PTR ds:0x42ca64
  41e5ab:	cmp    DWORD PTR ds:0x428e89,0x4
  41e5b2:	jne    0x41e5c5
  41e5b8:	mov    ebx,DWORD PTR ds:0x428e89
  41e5be:	inc    ebx
  41e5bf:	mov    DWORD PTR ds:0x428e89,ebx
  41e5c5:	jmp    0x41e56b
  41e5ca:	mov    DWORD PTR [esp+0x18],eax
  41e5ce:	xor    esi,esi
  41e5d0:	or     esi,DWORD PTR ds:0x428eb9
  41e5d6:	or     DWORD PTR ds:0x428e25,esi
  41e5dc:	mov    eax,ds:0x428365
  41e5e1:	mov    eax,DWORD PTR [eax+0x1c8]
  41e5e7:	mov    eax,DWORD PTR [eax]
  41e5e9:	mov    DWORD PTR ds:0x428e9d,0x1c
  41e5f3:	cmp    DWORD PTR ds:0x428e9d,0x0
  41e5fa:	je     0x41e64a
  41e600:	cmp    DWORD PTR ds:0x428e9d,0x3
  41e607:	jl     0x41e64a
  41e60d:	jmp    0x41e61e
  41e612:	push   DWORD PTR [ebp-0x24]
  41e615:	push   DWORD PTR [ebp-0x28]
  41e618:	call   DWORD PTR ds:0x42ca18
  41e61e:	cmp    DWORD PTR ds:0x428e9d,0x4
  41e625:	jne    0x41e638
  41e62b:	mov    ebx,DWORD PTR ds:0x428e9d
  41e631:	dec    ebx
  41e632:	mov    DWORD PTR ds:0x428e9d,ebx
  41e638:	mov    ebx,DWORD PTR ds:0x428e9d
  41e63e:	dec    ebx
  41e63f:	mov    DWORD PTR ds:0x428e9d,ebx
  41e645:	jmp    0x41e5f3
  41e64a:	mov    edx,DWORD PTR [esp+0x18]
  41e64e:	adc    DWORD PTR ds:0x428ec9,edi
  41e654:	mov    esi,0x75108b1
  41e659:	sub    ebx,0x34f9
  41e65f:	xor    eax,esi
  41e661:	add    DWORD PTR ds:0x428e39,0x7d93
  41e66b:	mov    ebx,0x3272f8
  41e670:	or     DWORD PTR ds:0x428e6d,0x428e29
  41e67a:	add    eax,ebx
  41e67c:	mov    DWORD PTR ds:0x428e35,0x4692
  41e686:	mov    DWORD PTR [edx],eax
  41e688:	not    eax
  41e68a:	mov    eax,ds:0x428ce5
  41e68f:	cmp    eax,0x455dedfa
  41e694:	jne    0x41e6fe
  41e69a:	neg    eax
  41e69c:	mov    eax,DWORD PTR [esp+0x28]
  41e6a0:	mov    edx,DWORD PTR ds:0x428365
  41e6a6:	xor    DWORD PTR ds:0x428e91,0x428ebd
  41e6b0:	mov    edx,DWORD PTR [edx+0x198]
  41e6b6:	xor    eax,esi
  41e6b8:	add    DWORD PTR ds:0x428e9d,0x1078
  41e6c2:	add    eax,ebx
  41e6c4:	add    DWORD PTR ds:0x428e89,0x4c2a
  41e6ce:	mov    DWORD PTR [edx],eax
  41e6d0:	mov    eax,DWORD PTR [esp+0x28]
  41e6d4:	xor    eax,esi
  41e6d6:	add    eax,ebx
  41e6d8:	mov    ds:0x428ce5,eax
  41e6dd:	mov    eax,DWORD PTR [esp+0x28]
  41e6e1:	sub    DWORD PTR ds:0x428e41,0x428ec9
  41e6eb:	xor    eax,esi
  41e6ed:	add    eax,ebx
  41e6ef:	or     DWORD PTR ds:0x428e45,0x428e35
  41e6f9:	mov    ds:0x42845d,eax
  41e6fe:	and    DWORD PTR ds:0x428e85,0x0
  41e708:	jmp    0x41e718
  41e70d:	mov    eax,ds:0x428e85
  41e712:	inc    eax
  41e713:	mov    ds:0x428e85,eax
  41e718:	cmp    DWORD PTR ds:0x428e85,0x15
  41e71f:	jae    0x41e74a
  41e725:	cmp    DWORD PTR ds:0x428e85,0x18
  41e72c:	jg     0x41e74a
  41e732:	jmp    0x41e745
  41e737:	push   0x467c
  41e73c:	push   DWORD PTR [ebp-0x14]
  41e73f:	call   DWORD PTR ds:0x42ca1c
  41e745:	jmp    0x41e70d
  41e74a:	mov    eax,ds:0x428365
  41e74f:	mov    eax,DWORD PTR [eax+0x18c]
  41e755:	mov    eax,DWORD PTR [eax]
  41e757:	sbb    DWORD PTR ds:0x428eb1,0x2dbb
  41e761:	mov    DWORD PTR [esp+0x40],eax
  41e765:	movzx  eax,WORD PTR ds:0x428ea5
  41e76c:	sub    DWORD PTR ds:0x428e6d,eax
  41e772:	mov    eax,0xf89c85bd
  41e777:	mov    DWORD PTR [esp+0x10],eax
  41e77b:	mov    DWORD PTR [esp+0x10],eax
  41e77f:	mov    DWORD PTR [esp+0x10],eax
  41e783:	add    DWORD PTR ds:0x428e65,0x428e6d
  41e78d:	mov    DWORD PTR [esp+0x10],ecx
  41e791:	sub    DWORD PTR ds:0x428e5d,0x428e6d
  41e79b:	mov    DWORD PTR [esp+0x18],eax
  41e79f:	mov    DWORD PTR [esp+0x18],0xf89c85a1
  41e7a7:	mov    eax,ds:0x428ec1
  41e7ac:	add    DWORD PTR ds:0x428e89,eax
  41e7b2:	mov    eax,DWORD PTR [esp+0x28]
  41e7b6:	xor    eax,esi
  41e7b8:	add    eax,ebx
  41e7ba:	jmp    0x41e98b
  41e7bf:	mov    al,ds:0x4284de
  41e7c4:	cmp    al,BYTE PTR ds:0x4284eb
  41e7ca:	jne    0x41e428
  41e7d0:	mov    al,ds:0x4284f7
  41e7d5:	cmp    al,BYTE PTR ds:0x428508
  41e7db:	mov    DWORD PTR ds:0x428ea1,0x1959
  41e7e5:	jne    0x41e428
  41e7eb:	push   0x428511
  41e7f0:	xor    DWORD PTR ds:0x428e5d,0x2e26
  41e7fa:	push   0x42851d
  41e7ff:	call   edi
  41e801:	or     DWORD PTR ds:0x428e59,0x428eb9
  41e80b:	test   eax,eax
  41e80d:	mov    DWORD PTR ds:0x428e99,0x6eaa
  41e817:	je     0x41e428
  41e81d:	mov    al,ds:0x42852e
  41e822:	cmp    al,BYTE PTR ds:0x42853b
  41e828:	mov    DWORD PTR ds:0x428e4d,0x38ed
  41e832:	jne    0x41e428
  41e838:	mov    DWORD PTR ds:0x428e65,0x1c9c
  41e842:	mov    al,ds:0x428547
  41e847:	mov    DWORD PTR ds:0x428ecd,0x75a8
  41e851:	cmp    al,BYTE PTR ds:0x428558
  41e857:	mov    DWORD PTR ds:0x428e71,0x3bcf
  41e861:	jne    0x41e428
  41e867:	adc    DWORD PTR ds:0x428ead,0x428ebd
  41e871:	push   0x428561
  41e876:	inc    DWORD PTR ds:0x428ec1
  41e87c:	push   0x42856d
  41e881:	call   edi
  41e883:	test   eax,eax
  41e885:	mov    DWORD PTR ds:0x428e31,0x5531
  41e88f:	je     0x41e428
  41e895:	sub    eax,0x55e1
  41e89a:	mov    eax,DWORD PTR [esp+0xc]
  41e89e:	sbb    DWORD PTR ds:0x428ea1,0x6f3f
  41e8a8:	mov    ecx,DWORD PTR [esp+0x18]
  41e8ac:	add    DWORD PTR ds:0x428e8d,0x428e31
  41e8b6:	xor    eax,esi
  41e8b8:	adc    DWORD PTR ds:0x428e79,0x1de7
  41e8c2:	lea    eax,[eax+ecx*1+0x3272f8]
  41e8c9:	push   eax
  41e8ca:	mov    eax,DWORD PTR [esp+0x14]
  41e8ce:	and    DWORD PTR ds:0x428e61,0x6940
  41e8d8:	xor    eax,esi
  41e8da:	xor    DWORD PTR ds:0x428e85,0x2762
  41e8e4:	lea    eax,[ebp+eax*1+0x327300]
  41e8eb:	push   eax
  41e8ec:	xor    eax,0x37bf
  41e8f1:	mov    eax,ds:0x428365
  41e8f6:	push   DWORD PTR [eax+0x1bc]
  41e8fc:	xor    DWORD PTR ds:0x428e49,0x22e4
  41e906:	call   0x41f519
  41e90b:	xor    edx,edx
  41e90d:	xor    edx,DWORD PTR ds:0x428eed
  41e913:	mov    ecx,DWORD PTR ds:0x428efd
  41e919:	sub    ecx,edx
  41e91b:	sub    edx,DWORD PTR [edx+ecx*1]
  41e91e:	mov    eax,DWORD PTR [esp+0xc]
  41e922:	and    DWORD PTR ds:0x428ebd,0x0
  41e92c:	jmp    0x41e940
  41e931:	xor    edx,edx
  41e933:	add    edx,DWORD PTR ds:0x428ebd
  41e939:	inc    edx
  41e93a:	mov    DWORD PTR ds:0x428ebd,edx
  41e940:	cmp    DWORD PTR ds:0x428ebd,0x12
  41e947:	jae    0x41e972
  41e94d:	cmp    DWORD PTR ds:0x428ebd,0x1a
  41e954:	jbe    0x41e972
  41e95a:	jmp    0x41e96d
  41e95f:	push   0x4280ab
  41e964:	push   DWORD PTR [ebp-0x24]
  41e967:	call   DWORD PTR ds:0x42ca20
  41e96d:	jmp    0x41e931
  41e972:	mov    ecx,DWORD PTR [esp+0x18]
  41e976:	add    DWORD PTR ds:0x428ebd,edi
  41e97c:	xor    eax,esi
  41e97e:	xor    edx,DWORD PTR ds:0x428eb1
  41e984:	lea    eax,[ecx+eax*1+0x3272f8]
  41e98b:	and    DWORD PTR ds:0x428e29,0x0
  41e995:	jmp    0x41e9a9
  41e99a:	xor    ecx,ecx
  41e99c:	add    ecx,DWORD PTR ds:0x428e29
  41e9a2:	inc    ecx
  41e9a3:	mov    DWORD PTR ds:0x428e29,ecx
  41e9a9:	cmp    DWORD PTR ds:0x428e29,0x1b
  41e9b0:	jae    0x41e9f5
  41e9b6:	cmp    DWORD PTR ds:0x428e29,0x4
  41e9bd:	jbe    0x41e9f5
  41e9c3:	jmp    0x41e9d6
  41e9c8:	push   0x428092
  41e9cd:	push   DWORD PTR [ebp-0x1c]
  41e9d0:	call   DWORD PTR ds:0x42ca24
  41e9d6:	cmp    DWORD PTR ds:0x428e29,0x3
  41e9dd:	jne    0x41e9f0
  41e9e3:	mov    ecx,DWORD PTR ds:0x428e29
  41e9e9:	inc    ecx
  41e9ea:	mov    DWORD PTR ds:0x428e29,ecx
  41e9f0:	jmp    0x41e99a
  41e9f5:	mov    ecx,DWORD PTR [esp+0xc]
  41e9f9:	mov    edx,DWORD PTR [esp+0xc]
  41e9fd:	and    DWORD PTR ds:0x428e81,0x27c9
  41ea07:	xor    edx,esi
  41ea09:	xor    ecx,esi
  41ea0b:	add    ecx,edx
  41ea0d:	and    DWORD PTR ds:0x428eb9,0x0
  41ea17:	mov    edx,DWORD PTR ds:0x428eb9
  41ea1d:	inc    edx
  41ea1e:	mov    DWORD PTR ds:0x428eb9,edx
  41ea24:	cmp    DWORD PTR ds:0x428eb9,0x23
  41ea2b:	jle    0x41ea4e
  41ea31:	jmp    0x41ea41
  41ea36:	push   0x3c70
  41ea3b:	call   DWORD PTR ds:0x42ca28
  41ea41:	cmp    DWORD PTR ds:0x428eb9,0x1b
  41ea48:	jb     0x41ea17
  41ea4e:	mov    edx,DWORD PTR [esp+0xc]
  41ea52:	adc    DWORD PTR ds:0x428ec9,0x428ecd
  41ea5c:	xor    edx,esi
  41ea5e:	mov    DWORD PTR ds:0x428e85,0x69c
  41ea68:	lea    ecx,[ecx+edx*1+0x9758e8]
  41ea6f:	mov    DWORD PTR ds:0x428ec1,0x5f48
  41ea79:	mov    DWORD PTR [esp+0x18],eax
  41ea7d:	mov    DWORD PTR ds:0x428e41,0x5aa0
  41ea87:	cmp    eax,ecx
  41ea89:	mov    DWORD PTR ds:0x428e69,0x3a73
  41ea93:	jbe    0x41e7bf
  41ea99:	and    ecx,DWORD PTR ds:0x428ed1
  41ea9f:	mov    eax,DWORD PTR [ebp+0xc]
  41eaa2:	mov    DWORD PTR ds:0x428e9d,0x14
  41eaac:	cmp    DWORD PTR ds:0x428e9d,0x0
  41eab3:	je     0x41eb02
  41eab9:	cmp    DWORD PTR ds:0x428e9d,0x3
  41eac0:	jb     0x41eb02
  41eac6:	jmp    0x41ead4
  41eacb:	push   DWORD PTR [ebp-0x18]
  41eace:	call   DWORD PTR ds:0x42ca2c
  41ead4:	cmp    DWORD PTR ds:0x428e9d,0x4
  41eadb:	jne    0x41eaee
  41eae1:	mov    ecx,DWORD PTR ds:0x428e9d
  41eae7:	dec    ecx
  41eae8:	mov    DWORD PTR ds:0x428e9d,ecx
  41eaee:	xor    ecx,ecx
  41eaf0:	add    ecx,DWORD PTR ds:0x428e9d
  41eaf6:	dec    ecx
  41eaf7:	mov    DWORD PTR ds:0x428e9d,ecx
  41eafd:	jmp    0x41eaac
  41eb02:	mov    ds:0x4281e9,eax
  41eb07:	sbb    eax,eax
  41eb09:	mov    eax,DWORD PTR [ebp+0x10]
  41eb0c:	mov    ds:0x428445,eax
  41eb11:	mov    eax,ds:0x4281e9
  41eb16:	mov    ecx,DWORD PTR [esp+0x30]
  41eb1a:	dec    DWORD PTR ds:0x428e99
  41eb20:	sub    eax,ebx
  41eb22:	xor    eax,esi
  41eb24:	mov    DWORD PTR ds:0x428e99,0x6c0e
  41eb2e:	mov    DWORD PTR [ecx],eax
  41eb30:	lea    eax,[esp+0x24]
  41eb34:	mov    DWORD PTR ds:0x428ea5,0x17d
  41eb3e:	mov    DWORD PTR [esp+0x44],eax
  41eb42:	lea    eax,[ebp+0x4]
  41eb45:	mov    DWORD PTR ds:0x428ec5,0x4441
  41eb4f:	mov    DWORD PTR [esp+0x24],eax
  41eb53:	mov    al,ds:0x42857e
  41eb58:	mov    DWORD PTR ds:0x428e49,0x46bb
  41eb62:	cmp    al,BYTE PTR ds:0x42858b
  41eb68:	jne    0x41e428
  41eb6e:	mov    al,ds:0x428597
  41eb73:	mov    DWORD PTR ds:0x428eb1,0x61de
  41eb7d:	cmp    al,BYTE PTR ds:0x4285a8
  41eb83:	mov    DWORD PTR ds:0x428e71,0x1a2b
  41eb8d:	jne    0x41e428
  41eb93:	push   0x4285b1
  41eb98:	sbb    DWORD PTR ds:0x428e8d,0x428e79
  41eba2:	push   0x4285bd
  41eba7:	sbb    DWORD PTR ds:0x428e75,0x428e6d
  41ebb1:	call   edi
  41ebb3:	or     DWORD PTR ds:0x428e9d,0x2f2b
  41ebbd:	test   eax,eax
  41ebbf:	je     0x41e428
  41ebc5:	mov    DWORD PTR ds:0x428ec5,0x7907
  41ebcf:	mov    al,ds:0x4285ce
  41ebd4:	cmp    al,BYTE PTR ds:0x4285db
  41ebda:	mov    DWORD PTR ds:0x428e5d,0x5f7d
  41ebe4:	jne    0x41e428
  41ebea:	mov    DWORD PTR ds:0x428e3d,0x1797
  41ebf4:	mov    al,ds:0x4285e7
  41ebf9:	cmp    al,BYTE PTR ds:0x4285f8
  41ebff:	jne    0x41e428
  41ec05:	add    DWORD PTR ds:0x428ec1,0x428ead
  41ec0f:	push   0x428601
  41ec14:	push   0x42860d
  41ec19:	call   edi
  41ec1b:	test   eax,eax
  41ec1d:	mov    DWORD PTR ds:0x428e69,0x333a
  41ec27:	je     0x41e428
  41ec2d:	mov    al,ds:0x42861e
  41ec32:	cmp    al,BYTE PTR ds:0x42862b
  41ec38:	mov    DWORD PTR ds:0x428e65,0x2ea7
  41ec42:	jne    0x41e428
  41ec48:	mov    DWORD PTR ds:0x428e85,0x19a
  41ec52:	mov    al,ds:0x428637
  41ec57:	mov    DWORD PTR ds:0x428ec5,0xb46
  41ec61:	cmp    al,BYTE PTR ds:0x428648
  41ec67:	mov    DWORD PTR ds:0x428e91,0x2cce
  41ec71:	jne    0x41e428
  41ec77:	push   0x428651
  41ec7c:	add    DWORD PTR ds:0x428eb1,0x428ea5
  41ec86:	push   0x42865d
  41ec8b:	call   edi
  41ec8d:	test   eax,eax
  41ec8f:	mov    DWORD PTR ds:0x428e7d,0x28e1
  41ec99:	je     0x41e428
  41ec9f:	mov    al,ds:0x42866e
  41eca4:	mov    DWORD PTR ds:0x428e35,0x7fda
  41ecae:	cmp    al,BYTE PTR ds:0x42867b
  41ecb4:	mov    DWORD PTR ds:0x428eb5,0x205
  41ecbe:	jne    0x41e428
  41ecc4:	mov    DWORD PTR ds:0x428ea9,0x1bc1
  41ecce:	mov    al,ds:0x428687
  41ecd3:	mov    DWORD PTR ds:0x428e31,0xcbc
  41ecdd:	cmp    al,BYTE PTR ds:0x428698
  41ece3:	jne    0x41e428
  41ece9:	xor    DWORD PTR ds:0x428e75,0x428e55
  41ecf3:	push   0x4286a1
  41ecf8:	push   0x4286ad
  41ecfd:	call   edi
  41ecff:	or     DWORD PTR ds:0x428eb9,0x1b73
  41ed09:	test   eax,eax
  41ed0b:	je     0x41e428
  41ed11:	mov    al,ds:0x4286be
  41ed16:	mov    DWORD PTR ds:0x428ebd,0x533
  41ed20:	cmp    al,BYTE PTR ds:0x4286cb
  41ed26:	mov    DWORD PTR ds:0x428eb1,0x6a19
  41ed30:	jne    0x41e428
  41ed36:	mov    DWORD PTR ds:0x428e79,0x3b4e
  41ed40:	mov    al,ds:0x4286d7
  41ed45:	mov    DWORD PTR ds:0x428e79,0x665f
  41ed4f:	cmp    al,BYTE PTR ds:0x4286e8
  41ed55:	jne    0x41e428
  41ed5b:	xor    DWORD PTR ds:0x428ead,0x43e0
  41ed65:	push   0x4286f1
  41ed6a:	push   0x4286fd
  41ed6f:	add    DWORD PTR ds:0x428eb1,0x428e79
  41ed79:	call   edi
  41ed7b:	and    DWORD PTR ds:0x428e7d,0x428e25
  41ed85:	test   eax,eax
  41ed87:	je     0x41e428
  41ed8d:	mov    al,ds:0x42870e
  41ed92:	mov    DWORD PTR ds:0x428e59,0x5b53
  41ed9c:	cmp    al,BYTE PTR ds:0x42871b
  41eda2:	jne    0x41e428
  41eda8:	mov    DWORD PTR ds:0x428e25,0x5848
  41edb2:	mov    al,ds:0x428727
  41edb7:	mov    DWORD PTR ds:0x428e75,0x6f79
  41edc1:	cmp    al,BYTE PTR ds:0x428738
  41edc7:	jne    0x41e428
  41edcd:	push   0x428741
  41edd2:	push   0x42874d
  41edd7:	call   edi
  41edd9:	sub    DWORD PTR ds:0x428e75,0x1f6e
  41ede3:	test   eax,eax
  41ede5:	je     0x41e428
  41edeb:	mov    al,ds:0x42875e
  41edf0:	mov    DWORD PTR ds:0x428ea9,0x6a75
  41edfa:	cmp    al,BYTE PTR ds:0x42876b
  41ee00:	mov    DWORD PTR ds:0x428e95,0x5296
  41ee0a:	jne    0x41e428
  41ee10:	mov    DWORD PTR ds:0x428e65,0x352f
  41ee1a:	mov    al,ds:0x428777
  41ee1f:	cmp    al,BYTE PTR ds:0x428788
  41ee25:	mov    DWORD PTR ds:0x428e39,0x65de
  41ee2f:	jne    0x41e428
  41ee35:	add    DWORD PTR ds:0x428ec5,0x39e0
  41ee3f:	push   0x428791
  41ee44:	sbb    DWORD PTR ds:0x428ec5,0x70eb
  41ee4e:	push   0x42879d
  41ee53:	add    DWORD PTR ds:0x428e75,0x6377
  41ee5d:	call   edi
  41ee5f:	test   eax,eax
  41ee61:	je     0x41e428
  41ee67:	mov    al,ds:0x4287ae
  41ee6c:	cmp    al,BYTE PTR ds:0x4287bb
  41ee72:	mov    DWORD PTR ds:0x428e75,0xc68
  41ee7c:	jne    0x41e428
  41ee82:	mov    DWORD PTR ds:0x428ea9,0x47d0
  41ee8c:	mov    al,ds:0x4287c7
  41ee91:	mov    DWORD PTR ds:0x428e35,0x2f08
  41ee9b:	cmp    al,BYTE PTR ds:0x4287d8
  41eea1:	mov    DWORD PTR ds:0x428e31,0x4709
  41eeab:	jne    0x41e428
  41eeb1:	sbb    DWORD PTR ds:0x428eb1,0x2bd9
  41eebb:	push   0x4287e1
  41eec0:	or     DWORD PTR ds:0x428e79,0x428ead
  41eeca:	push   0x4287ed
  41eecf:	adc    DWORD PTR ds:0x428ea1,0x22ee
  41eed9:	call   edi
  41eedb:	adc    DWORD PTR ds:0x428ecd,0x428ec5
  41eee5:	test   eax,eax
  41eee7:	mov    DWORD PTR ds:0x428e79,0x242c
  41eef1:	je     0x41e428
  41eef7:	mov    DWORD PTR ds:0x428e3d,0x326f
  41ef01:	mov    al,ds:0x4287fe
  41ef06:	mov    DWORD PTR ds:0x428eb9,0x8d5
  41ef10:	cmp    al,BYTE PTR ds:0x42880b
  41ef16:	mov    DWORD PTR ds:0x428e59,0x136
  41ef20:	jne    0x41e428
  41ef26:	mov    al,ds:0x428817
  41ef2b:	mov    DWORD PTR ds:0x428eb1,0x1632
  41ef35:	cmp    al,BYTE PTR ds:0x428828
  41ef3b:	mov    DWORD PTR ds:0x428e65,0x63ac
  41ef45:	jne    0x41e428
  41ef4b:	sub    DWORD PTR ds:0x428e59,0x428e31
  41ef55:	push   0x428831
  41ef5a:	push   0x42883d
  41ef5f:	mov    DWORD PTR ds:0x428e25,0x5d60
  41ef69:	call   edi
  41ef6b:	test   eax,eax
  41ef6d:	je     0x41e428
  41ef73:	mov    al,ds:0x42884e
  41ef78:	mov    DWORD PTR ds:0x428eb5,0x1dcb
  41ef82:	cmp    al,BYTE PTR ds:0x42885b
  41ef88:	mov    DWORD PTR ds:0x428eb5,0x40d0
  41ef92:	jne    0x41e428
  41ef98:	mov    al,ds:0x428867
  41ef9d:	mov    DWORD PTR ds:0x428ead,0x41e1
  41efa7:	cmp    al,BYTE PTR ds:0x428878
  41efad:	mov    DWORD PTR ds:0x428e31,0x6c07
  41efb7:	jne    0x41e428
  41efbd:	adc    DWORD PTR ds:0x428ea5,0x428ec9
  41efc7:	push   0x428881
  41efcc:	adc    DWORD PTR ds:0x428eb5,0x37c3
  41efd6:	push   0x42888d
  41efdb:	call   edi
  41efdd:	sub    DWORD PTR ds:0x428e31,0x47c0
  41efe7:	test   eax,eax
  41efe9:	mov    DWORD PTR ds:0x428e91,0x23ba
  41eff3:	je     0x41e428
  41eff9:	mov    DWORD PTR ds:0x428ea5,0x1cf7
  41f003:	mov    al,ds:0x42889e
  41f008:	mov    DWORD PTR ds:0x428e25,0x6ea3
  41f012:	cmp    al,BYTE PTR ds:0x4288ab
  41f018:	jne    0x41e428
  41f01e:	mov    DWORD PTR ds:0x428e95,0x9ed
  41f028:	mov    al,ds:0x4288b7
  41f02d:	mov    DWORD PTR ds:0x428e75,0x600
  41f037:	cmp    al,BYTE PTR ds:0x4288c8
  41f03d:	mov    DWORD PTR ds:0x428ead,0x4d3e
  41f047:	jne    0x41e428
  41f04d:	push   0x4288d1
  41f052:	push   0x4288dd
  41f057:	sbb    DWORD PTR ds:0x428ebd,0x717e
  41f061:	call   edi
  41f063:	sub    DWORD PTR ds:0x428e79,0x428e69
  41f06d:	test   eax,eax
  41f06f:	je     0x41e428
  41f075:	mov    al,ds:0x4288ee
  41f07a:	cmp    al,BYTE PTR ds:0x4288fb
  41f080:	jne    0x41e428
  41f086:	mov    al,ds:0x428907
  41f08b:	cmp    al,BYTE PTR ds:0x428918
  41f091:	jne    0x41e428
  41f097:	push   0x428921
  41f09c:	push   0x42892d
  41f0a1:	call   edi
  41f0a3:	test   eax,eax
  41f0a5:	je     0x41e428
  41f0ab:	mov    al,ds:0x42893e
  41f0b0:	cmp    al,BYTE PTR ds:0x42894b
  41f0b6:	jne    0x41e428
  41f0bc:	mov    al,ds:0x428957
  41f0c1:	cmp    al,BYTE PTR ds:0x428968
  41f0c7:	jne    0x41e428
  41f0cd:	push   0x428971
  41f0d2:	push   0x42897d
  41f0d7:	call   edi
  41f0d9:	test   eax,eax
  41f0db:	je     0x41e428
  41f0e1:	mov    al,ds:0x42898e
  41f0e6:	cmp    al,BYTE PTR ds:0x42899b
  41f0ec:	jne    0x41e428
  41f0f2:	mov    al,ds:0x4289a7
  41f0f7:	cmp    al,BYTE PTR ds:0x4289b8
  41f0fd:	jne    0x41e428
  41f103:	push   0x4289c1
  41f108:	push   0x4289cd
  41f10d:	call   edi
  41f10f:	test   eax,eax
  41f111:	je     0x41e428
  41f117:	mov    al,ds:0x4289de
  41f11c:	cmp    al,BYTE PTR ds:0x4289eb
  41f122:	jne    0x41e428
  41f128:	mov    al,ds:0x4289f7
  41f12d:	cmp    al,BYTE PTR ds:0x428a08
  41f133:	jne    0x41e428
  41f139:	push   0x428a11
  41f13e:	push   0x428a1d
  41f143:	call   edi
  41f145:	test   eax,eax
  41f147:	je     0x41e428
  41f14d:	mov    al,ds:0x428a2e
  41f152:	cmp    al,BYTE PTR ds:0x428a3b
  41f158:	jne    0x41e428
  41f15e:	mov    al,ds:0x428a47
  41f163:	cmp    al,BYTE PTR ds:0x428a58
  41f169:	jne    0x41e428
  41f16f:	push   0x428a61
  41f174:	push   0x428a6d
  41f179:	call   edi
  41f17b:	test   eax,eax
  41f17d:	je     0x41e428
  41f183:	mov    al,ds:0x428a7e
  41f188:	cmp    al,BYTE PTR ds:0x428a8b
  41f18e:	jne    0x41e428
  41f194:	mov    al,ds:0x428a97
  41f199:	cmp    al,BYTE PTR ds:0x428aa8
  41f19f:	jne    0x41e428
  41f1a5:	push   0x428ab1
  41f1aa:	push   0x428abd
  41f1af:	call   edi
  41f1b1:	test   eax,eax
  41f1b3:	je     0x41e428
  41f1b9:	mov    al,ds:0x428ace
  41f1be:	cmp    al,BYTE PTR ds:0x428adb
  41f1c4:	jne    0x41e428
  41f1ca:	mov    al,ds:0x428ae7
  41f1cf:	cmp    al,BYTE PTR ds:0x428af8
  41f1d5:	jne    0x41e428
  41f1db:	push   0x428b01
  41f1e0:	push   0x428b0d
  41f1e5:	call   edi
  41f1e7:	test   eax,eax
  41f1e9:	je     0x41e428
  41f1ef:	mov    al,ds:0x428b1e
  41f1f4:	cmp    al,BYTE PTR ds:0x428b2b
  41f1fa:	jne    0x41e428
  41f200:	mov    al,ds:0x428b37
  41f205:	cmp    al,BYTE PTR ds:0x428b48
  41f20b:	jne    0x41e428
  41f211:	push   0x428b51
  41f216:	push   0x428b5d
  41f21b:	call   edi
  41f21d:	test   eax,eax
  41f21f:	je     0x41e428
  41f225:	mov    al,ds:0x428b6e
  41f22a:	cmp    al,BYTE PTR ds:0x428b7b
  41f230:	jne    0x41e428
  41f236:	mov    al,ds:0x428b87
  41f23b:	cmp    al,BYTE PTR ds:0x428b98
  41f241:	jne    0x41e428
  41f247:	push   0x428ba1
  41f24c:	push   0x428bad
  41f251:	call   edi
  41f253:	test   eax,eax
  41f255:	je     0x41e428
  41f25b:	mov    al,ds:0x428bbe
  41f260:	cmp    al,BYTE PTR ds:0x428bcb
  41f266:	jne    0x41e428
  41f26c:	mov    al,ds:0x428bd7
  41f271:	cmp    al,BYTE PTR ds:0x428be8
  41f277:	jne    0x41e428
  41f27d:	push   0x428bf1
  41f282:	push   0x428bfd
  41f287:	call   edi
  41f289:	test   eax,eax
  41f28b:	je     0x41e428
  41f291:	mov    eax,DWORD PTR [esp+0x3c]
  41f295:	cmp    eax,0xf89c85b8
  41f29a:	je     0x41f2f9
  41f2a0:	mov    eax,DWORD PTR [esp+0x28]
  41f2a4:	mov    ecx,DWORD PTR [esp+0x38]
  41f2a8:	xor    eax,esi
  41f2aa:	add    eax,ebx
  41f2ac:	cmp    eax,ecx
  41f2ae:	je     0x41f2f9
  41f2b4:	mov    eax,ds:0x428365
  41f2b9:	mov    eax,DWORD PTR [eax+0x194]
  41f2bf:	mov    ecx,DWORD PTR [eax]
  41f2c1:	mov    eax,DWORD PTR [ecx+0x3c]
  41f2c4:	push   DWORD PTR ds:0x428445
  41f2ca:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41f2ce:	push   DWORD PTR ds:0x4281e9
  41f2d4:	add    eax,ecx
  41f2d6:	mov    ecx,DWORD PTR ds:0x428365
  41f2dc:	mov    ecx,DWORD PTR [ecx+0x194]
  41f2e2:	push   DWORD PTR [ecx]
  41f2e4:	call   eax
  41f2e6:	mov    ecx,DWORD PTR ds:0x428365
  41f2ec:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41f2f2:	mov    DWORD PTR [ecx],eax
  41f2f4:	jmp    0x41f4f3
  41f2f9:	mov    eax,DWORD PTR [esp+0x28]
  41f2fd:	mov    ecx,DWORD PTR [esp+0x40]
  41f301:	xor    eax,esi
  41f303:	add    eax,ebx
  41f305:	cmp    eax,ecx
  41f307:	jne    0x41f372
  41f30d:	mov    eax,DWORD PTR [esp+0x28]
  41f311:	mov    ecx,DWORD PTR ds:0x428365
  41f317:	mov    ecx,DWORD PTR [ecx+0x198]
  41f31d:	xor    eax,esi
  41f31f:	add    eax,ebx
  41f321:	cmp    eax,DWORD PTR [ecx]
  41f323:	jne    0x41f34b
  41f329:	mov    eax,DWORD PTR [esp+0x28]
  41f32d:	push   0xffffffff
  41f32f:	push   0x70941f8a
  41f334:	xor    eax,esi
  41f336:	add    eax,ebx
  41f338:	push   eax
  41f339:	push   0xf89c85bd
  41f33e:	push   DWORD PTR [esp+0x1c]
  41f342:	push   DWORD PTR [esp+0x3c]
  41f346:	call   0x417181
  41f34b:	push   DWORD PTR [esp+0xc]
  41f34f:	push   DWORD PTR [esp+0x2c]
  41f353:	call   0x401000
  41f358:	mov    eax,DWORD PTR [esp+0x28]
  41f35c:	xor    eax,esi
  41f35e:	add    eax,ebx
  41f360:	mov    ds:0x4283f1,eax
  41f365:	mov    eax,DWORD PTR [esp+0x28]
  41f369:	xor    eax,esi
  41f36b:	add    eax,ebx
  41f36d:	mov    ds:0x4283e9,eax
  41f372:	mov    eax,DWORD PTR [esp+0x24]
  41f376:	test   eax,eax
  41f378:	je     0x41f4f3
  41f37e:	mov    DWORD PTR [esp+0x4c],0xf152c20
  41f386:	mov    DWORD PTR [esp+0x54],0x712edcf
  41f38e:	mov    DWORD PTR [esp+0x48],0x373fc11
  41f396:	mov    DWORD PTR [esp+0x50],0x72670ac1
  41f39e:	call   0x414ac6
  41f3a3:	mov    eax,DWORD PTR [esp+0x34]
  41f3a7:	mov    eax,DWORD PTR [esp+0xc]
  41f3ab:	mov    DWORD PTR [esp+0x30],eax
  41f3af:	mov    eax,DWORD PTR [esp+0x28]
  41f3b3:	mov    DWORD PTR [esp+0xc],eax
  41f3b7:	mov    eax,eax
  41f3b9:	mov    eax,ds:0x428365
  41f3be:	mov    ecx,DWORD PTR [eax+0x1c0]
  41f3c4:	mov    edx,DWORD PTR [ecx]
  41f3c6:	and    DWORD PTR [esp+0x14],0x0
  41f3cb:	mov    edi,0xfabdbecf
  41f3d0:	add    edx,edi
  41f3d2:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f3d7:	mov    ecx,0x8a29a145
  41f3dc:	xor    edx,ecx
  41f3de:	mov    DWORD PTR [esp+0x18],edx
  41f3e2:	mov    edx,DWORD PTR [esp+0x14]
  41f3e6:	xor    edx,0x0
  41f3e9:	cmp    DWORD PTR [esp+0x18],0x70941f95
  41f3f1:	mov    DWORD PTR [esp+0x1c],edx
  41f3f5:	jne    0x41f427
  41f3fb:	cmp    edx,0xffffffff
  41f3fe:	jne    0x41f427
  41f404:	mov    eax,ds:0x4283e9
  41f409:	mov    edx,DWORD PTR ds:0x4283f1
  41f40f:	xor    eax,edx
  41f411:	mov    ds:0x4283e9,eax
  41f416:	mov    edx,DWORD PTR ds:0x4283e9
  41f41c:	mov    eax,DWORD PTR [esp+0x24]
  41f420:	add    DWORD PTR [eax],edx
  41f422:	jmp    0x41f4b4
  41f427:	mov    eax,DWORD PTR [eax+0x1c8]
  41f42d:	mov    eax,DWORD PTR [eax]
  41f42f:	cdq    
  41f430:	add    eax,edi
  41f432:	adc    edx,0xffffffff
  41f435:	and    DWORD PTR [esp+0x14],0x0
  41f43a:	xor    edx,0x0
  41f43d:	mov    DWORD PTR [esp+0x2c],edx
  41f441:	mov    edx,DWORD PTR [esp+0xc]
  41f445:	mov    DWORD PTR [esp+0x10],edx
  41f449:	xor    eax,ecx
  41f44b:	add    DWORD PTR [esp+0x10],edi
  41f44f:	mov    edx,DWORD PTR [esp+0x10]
  41f453:	adc    DWORD PTR [esp+0x14],0xffffffff
  41f458:	xor    edx,ecx
  41f45a:	mov    DWORD PTR [esp+0x18],edx
  41f45e:	mov    edx,DWORD PTR [esp+0x14]
  41f462:	xor    edx,0x0
  41f465:	mov    DWORD PTR [esp+0x1c],edx
  41f469:	cmp    DWORD PTR [esp+0x18],eax
  41f46d:	jne    0x41f47f
  41f473:	mov    eax,DWORD PTR [esp+0x2c]
  41f477:	cmp    edx,eax
  41f479:	je     0x41f490
  41f47f:	mov    eax,DWORD PTR [esp+0xc]
  41f483:	add    eax,DWORD PTR [esp+0x30]
  41f487:	mov    DWORD PTR [esp+0xc],eax
  41f48b:	jmp    0x41f4f3
  41f490:	mov    eax,ds:0x4283e9
  41f495:	mov    edx,DWORD PTR ds:0x4283f1
  41f49b:	xor    eax,edx
  41f49d:	mov    ds:0x4283e9,eax
  41f4a2:	mov    eax,DWORD PTR [esp+0x24]
  41f4a6:	mov    edx,DWORD PTR ds:0x4283e9
  41f4ac:	add    edx,DWORD PTR [eax]
  41f4ae:	mov    eax,DWORD PTR [esp+0x24]
  41f4b2:	mov    DWORD PTR [eax],edx
  41f4b4:	mov    edx,DWORD PTR [esp+0xc]
  41f4b8:	mov    eax,ds:0x4283e9
  41f4bd:	xor    edx,esi
  41f4bf:	add    edx,ebx
  41f4c1:	xor    ebx,ebx
  41f4c3:	add    edx,edi
  41f4c5:	adc    ebx,0xffffffff
  41f4c8:	xor    esi,esi
  41f4ca:	xor    edx,ecx
  41f4cc:	xor    ebx,0x0
  41f4cf:	add    eax,edi
  41f4d1:	adc    esi,0xffffffff
  41f4d4:	xor    eax,ecx
  41f4d6:	xor    esi,0x0
  41f4d9:	cmp    eax,edx
  41f4db:	jne    0x41f4f3
  41f4e1:	cmp    esi,ebx
  41f4e3:	jne    0x41f4f3
  41f4e9:	mov    eax,ds:0x4283e9
  41f4ee:	mov    ds:0x4283f1,eax
  41f4f3:	mov    eax,ds:0x428365
  41f4f8:	push   0x4
  41f4fa:	add    eax,0x1cc
  41f4ff:	push   eax
  41f500:	lea    eax,[esp+0x3c]
  41f504:	push   eax
  41f505:	call   0x41f519
  41f50a:	mov    eax,DWORD PTR [esp+0x34]
  41f50e:	mov    eax,DWORD PTR [eax]
  41f510:	pop    edi
  41f511:	pop    esi
  41f512:	pop    ebx
  41f513:	mov    esp,ebp
  41f515:	pop    ebp
  41f516:	ret    0xc
  41f519:	push   ebp
  41f51a:	mov    ebp,esp
  41f51c:	sub    esp,0x10
  41f51f:	mov    DWORD PTR ds:0x428e69,0x19
  41f529:	cmp    DWORD PTR ds:0x428e69,0x0
  41f530:	je     0x41f565
  41f536:	cmp    DWORD PTR ds:0x428e69,0x1f
  41f53d:	jge    0x41f565
  41f543:	jmp    0x41f553
  41f548:	push   0x4280ab
  41f54d:	call   DWORD PTR ds:0x42ca30
  41f553:	mov    edx,DWORD PTR ds:0x428e69
  41f559:	dec    edx
  41f55a:	mov    DWORD PTR ds:0x428e69,edx
  41f560:	jmp    0x41f529
  41f565:	mov    eax,0xf89c85b9
  41f56a:	mov    DWORD PTR [ebp-0x4],eax
  41f56d:	or     ecx,edx
  41f56f:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  41f576:	sbb    DWORD PTR ds:0x428e35,ecx
  41f57c:	mov    ecx,DWORD PTR [ebp-0x4]
  41f57f:	sbb    DWORD PTR ds:0x428e95,edi
  41f585:	push   esi
  41f586:	mov    edx,0x75108b1
  41f58b:	inc    DWORD PTR ds:0x428e49
  41f591:	xor    ecx,edx
  41f593:	sub    DWORD PTR ds:0x428ed1,edx
  41f599:	mov    esi,0x3272f8
  41f59e:	adc    DWORD PTR ds:0x428e41,0x428e31
  41f5a8:	push   edi
  41f5a9:	mov    edi,DWORD PTR [ebp+0x10]
  41f5ac:	xor    DWORD PTR ds:0x428e7d,0x428e91
  41f5b6:	add    ecx,esi
  41f5b8:	mov    DWORD PTR ds:0x428e59,0x285e
  41f5c2:	cmp    ecx,edi
  41f5c4:	je     0x423f13
  41f5ca:	and    DWORD PTR ds:0x428ec9,0x0
  41f5d4:	xor    ecx,ecx
  41f5d6:	add    ecx,DWORD PTR ds:0x428ec9
  41f5dc:	inc    ecx
  41f5dd:	mov    DWORD PTR ds:0x428ec9,ecx
  41f5e3:	cmp    DWORD PTR ds:0x428ec9,0x4
  41f5ea:	ja     0x41f629
  41f5f0:	jmp    0x41f600
  41f5f5:	push   0x5d76
  41f5fa:	call   DWORD PTR ds:0x42ca38
  41f600:	cmp    DWORD PTR ds:0x428ec9,0x3
  41f607:	jne    0x41f61c
  41f60d:	xor    ecx,ecx
  41f60f:	or     ecx,DWORD PTR ds:0x428ec9
  41f615:	inc    ecx
  41f616:	mov    DWORD PTR ds:0x428ec9,ecx
  41f61c:	cmp    DWORD PTR ds:0x428ec9,0x1c
  41f623:	jb     0x41f5d4
  41f629:	mov    ecx,DWORD PTR [ebp-0x4]
  41f62c:	xor    edi,edi
  41f62e:	xor    edi,DWORD PTR ds:0x428e39
  41f634:	or     DWORD PTR ds:0x428e25,edi
  41f63a:	mov    edi,DWORD PTR [ebp+0x10]
  41f63d:	and    DWORD PTR ds:0x428e55,0x428e29
  41f647:	xor    eax,eax
  41f649:	add    DWORD PTR ds:0x428e91,0x4be1
  41f653:	xor    ecx,edx
  41f655:	adc    DWORD PTR ds:0x428e81,0x428e69
  41f65f:	add    ecx,esi
  41f661:	add    edi,0xfabdbecf
  41f667:	adc    eax,0xffffffff
  41f66a:	and    DWORD PTR ds:0x428e39,0x428ec1
  41f674:	xor    eax,0x0
  41f677:	xor    DWORD PTR ds:0x428e75,0x428e29
  41f681:	mov    DWORD PTR [ebp-0xc],eax
  41f684:	push   ebx
  41f685:	xor    ebx,ebx
  41f687:	and    DWORD PTR ds:0x428ea1,0x0
  41f691:	jmp    0x41f6a4
  41f696:	xor    eax,eax
  41f698:	xor    eax,DWORD PTR ds:0x428ea1
  41f69e:	inc    eax
  41f69f:	mov    ds:0x428ea1,eax
  41f6a4:	cmp    DWORD PTR ds:0x428ea1,0x14
  41f6ab:	jae    0x41f6f4
  41f6b1:	cmp    DWORD PTR ds:0x428ea1,0xa
  41f6b8:	jle    0x41f6f4
  41f6be:	jmp    0x41f6d7
  41f6c3:	push   DWORD PTR [ebp-0x14]
  41f6c6:	push   DWORD PTR [ebp-0xc]
  41f6c9:	push   0x22e9
  41f6ce:	push   DWORD PTR [ebp-0x18]
  41f6d1:	call   DWORD PTR ds:0x42ca3c
  41f6d7:	cmp    DWORD PTR ds:0x428ea1,0x9
  41f6de:	jne    0x41f6ef
  41f6e4:	mov    eax,ds:0x428ea1
  41f6e9:	inc    eax
  41f6ea:	mov    ds:0x428ea1,eax
  41f6ef:	jmp    0x41f696
  41f6f4:	xor    edi,0x8a29a145
  41f6fa:	mov    eax,ecx
  41f6fc:	add    eax,0xfabdbecf
  41f701:	adc    ebx,0xffffffff
  41f704:	xor    eax,0x8a29a145
  41f709:	xor    ebx,0x0
  41f70c:	cmp    eax,edi
  41f70e:	jmp    0x421acd
  41f713:	pop    ebx
  41f714:	popf   
  41f715:	cwde   
  41f716:	jo     0x41f772
  41f718:	jp     0x41f77d
  41f71a:	mov    dl,0xe1
  41f71c:	cmp    eax,0xfcf70de9
  41f721:	outs   dx,BYTE PTR ds:[esi]
  41f722:	sbb    DWORD PTR [ecx+0x1d7b7c24],eax
  41f728:	sahf   
  41f729:	jnp    0x41f7a6
  41f72b:	xor    edx,esp
  41f72d:	cmp    edx,DWORD PTR [esi+0x2aeb91ca]
  41f733:	jo     0x41f6e8
  41f735:	fild   DWORD PTR [edx+esi*8+0x44]
  41f739:	int3   
  41f73a:	pop    ecx
  41f73b:	push   ebp
  41f73c:	fild   QWORD PTR [edi+esi*8]
  41f73f:	out    0xb6,eax
  41f741:	shl    DWORD PTR [esi-0x374ecec4],cl
  41f747:	mov    ebp,eax
  41f749:	inc    edx
  41f74a:	inc    edi
  41f74b:	sub    ch,BYTE PTR [ecx-0x3e]
  41f74e:	jmp    0x243e:0x98389eab
  41f755:	add    ch,BYTE PTR [edx+0x21e2d55c]
  41f75b:	pop    ss
  41f75c:	jmp    ebp
  41f75e:	arpl   WORD PTR [edx-0x64],ax
  41f761:	add    al,0x13
  41f763:	pop    ecx
  41f764:	in     al,0x15
  41f766:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f767:	and    eax,0xfe1496df
  41f76c:	mov    esi,0x8a946ab4
  41f771:	sub    ebp,edx
  41f773:	pop    eax
  41f774:	cmp    DWORD PTR [ebx-0x4c00c53],0xffffffdc
  41f77b:	xor    al,BYTE PTR [ebx+0x41]
  41f77e:	fisttp QWORD PTR [esi+0x10917a3b]
  41f784:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f785:	mov    edx,0xcd4c478
  41f78a:	dec    ebp
  41f78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f78c:	cmp    eax,0x264a7871
  41f791:	test   al,0xe8
  41f793:	lahf   
  41f794:	jp     0x41f7df
  41f796:	jo     0x41f7a1
  41f798:	jno    0x41f7fc
  41f79a:	(bad)  
  41f79b:	mov    edx,0x722281e2
  41f7a0:	adc    eax,0x46609450
  41f7a5:	mov    fs,WORD PTR [eax-0x721356da]
  41f7ab:	inc    edi
  41f7ac:	dec    esi
  41f7ad:	(bad)  
  41f7ae:	fcomp  st(6)
  41f7b0:	out    0xdd,al
  41f7b2:	mov    esi,0xb57bc15b
  41f7b7:	or     DWORD PTR [eax+0x1],0xffffffb9
  41f7bb:	test   eax,0x59e2eb25
  41f7c0:	add    eax,0x1a696989
  41f7c5:	lea    esp,ds:0xcd4d2248
  41f7cb:	lea    ecx,[ebp+0x6b]
  41f7ce:	aad    0x44
  41f7d0:	or     ebx,DWORD PTR [edi+ebx*1]
  41f7d3:	repnz xchg esi,eax
  41f7d5:	mov    edi,0xab8d0216
  41f7da:	jns    0x41f781
  41f7dc:	retf   0xc7e0
  41f7df:	push   edi
  41f7e0:	ret    
  41f7e1:	mov    edi,0x55c56fed
  41f7e6:	pop    esi
  41f7e7:	out    0x12,eax
  41f7e9:	scas   eax,DWORD PTR es:[edi]
  41f7ea:	outs   dx,BYTE PTR ds:[esi]
  41f7eb:	nop
  41f7ec:	add    al,0x61
  41f7ee:	int    0xbb
  41f7f0:	inc    ecx
  41f7f1:	adc    eax,0xd36fb9b3
  41f7f6:	mov    al,ds:0x450f0759
  41f7fb:	xchg   ebx,eax
  41f7fc:	push   0xe5199b86
  41f801:	jmp    0x25b0:0x9ccf96af
  41f808:	pop    edx
  41f809:	ja     0x41f7a0
  41f80b:	in     al,0x8f
  41f80d:	mov    DWORD PTR [ebx+0x1d],ecx
  41f810:	jl     0x41f7fe
  41f812:	out    dx,al
  41f813:	(bad)  
  41f814:	ds and eax,0xc4540d35
  41f81a:	push   ebp
  41f81b:	das    
  41f81c:	adc    eax,DWORD PTR ds:0xea62b8ba
  41f822:	les    edi,FWORD PTR [edx]
  41f824:	icebp  
  41f825:	inc    esi
  41f826:	and    cl,BYTE PTR [ecx]
  41f828:	cmp    dh,ah
  41f82a:	xchg   edi,eax
  41f82b:	mov    ebp,0x86adb866
  41f830:	or     al,0x92
  41f832:	mov    al,ds:0xd935d8cb
  41f837:	mov    ch,0x8f
  41f839:	(bad)  
  41f83a:	repz mov ebp,0xeeeceede
  41f840:	push   0x294c2753
  41f845:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f846:	into   
  41f847:	xor    edi,0x10dc4acd
  41f84d:	add    dh,0xa8
  41f850:	les    esp,FWORD PTR [esi-0x5f]
  41f853:	mov    DWORD PTR [eax-0x58],eax
  41f856:	loope  0x41f824
  41f858:	dec    esi
  41f859:	sub    ebp,edi
  41f85b:	inc    edi
  41f85c:	mov    BYTE PTR [esi],al
  41f85e:	int3   
  41f85f:	mov    bh,0x82
  41f861:	xor    eax,0x3bce7992
  41f866:	gs in  eax,dx
  41f868:	add    ecx,DWORD PTR [edi+ecx*8+0x4b2f71ec]
  41f86f:	xor    DWORD PTR [ecx+ebx*2+0x5980624f],eax
  41f876:	xchg   BYTE PTR [eax+0x3a978b1a],al
  41f87c:	addr16 dec ebp
  41f87e:	dec    esp
  41f87f:	jecxz  0x41f81d
  41f881:	shl    BYTE PTR [ebx-0x228ec16f],cl
  41f887:	int3   
  41f888:	dec    ebx
  41f889:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f88a:	das    
  41f88b:	aad    0xb
  41f88d:	jg     0x41f8da
  41f88f:	jmp    0x9a5b:0xad4615a9
  41f896:	xchg   edi,eax
  41f897:	pop    ss
  41f898:	jbe    0x41f825
  41f89a:	gs mov cl,0xbd
  41f89d:	mov    bh,0x95
  41f89f:	hlt    
  41f8a0:	add    al,0x1e
  41f8a2:	das    
  41f8a3:	xor    edi,DWORD PTR [ebx]
  41f8a5:	jl     0x41f913
  41f8a7:	pop    ebx
  41f8a8:	or     esp,DWORD PTR [ecx+ebx*8]
  41f8ab:	out    0x1e,al
  41f8ad:	test   DWORD PTR [edi+edi*1-0x3a],edx
  41f8b1:	mov    esi,0xf1797835
  41f8b6:	mov    DWORD PTR [ebx],ebp
  41f8b8:	jae    0x41f8b7
  41f8ba:	add    eax,0xc0226dd1
  41f8bf:	cdq    
  41f8c0:	pop    esp
  41f8c1:	call   FWORD PTR [edx+0x4ee4792b]
  41f8c7:	mov    ecx,0x30a91f84
  41f8cc:	adc    al,0x55
  41f8ce:	jae    0x41f939
  41f8d0:	or     esp,edi
  41f8d2:	leave  
  41f8d3:	(bad)  
  41f8d4:	fsubr  DWORD PTR [ebx]
  41f8d6:	hlt    
  41f8d7:	inc    edi
  41f8d8:	mov    cs:0xddeb271a,eax
  41f8de:	imul   edx,DWORD PTR [esi+0x24f093c2],0xfbc1f2bc
  41f8e8:	mov    bl,bh
  41f8ea:	sbb    DWORD PTR [edx],edi
  41f8ec:	push   0xffffffe8
  41f8ee:	imul   ebp,DWORD PTR [edx],0x7efce840
  41f8f4:	jle    0x41f894
  41f8f6:	and    cl,BYTE PTR [edx]
  41f8f8:	sub    al,0xcb
  41f8fa:	xor    dh,BYTE PTR [eax+0x3117f2b2]
  41f900:	add    al,0x1b
  41f902:	ror    DWORD PTR [esi+0x28],1
  41f905:	mov    ecx,DWORD PTR [ecx+0x3b03368b]
  41f90b:	std    
  41f90c:	sub    ebp,DWORD PTR [eax-0x3d]
  41f90f:	fbstp  TBYTE PTR [ecx-0x25]
  41f912:	jmp    0x41f8d5
  41f914:	(bad)
  41f917:	fs push ebp
  41f919:	(bad)  
  41f91a:	mov    eax,0xb00f587f
  41f91f:	push   ecx
  41f920:	push   edx
  41f921:	mov    bl,0x2f
  41f923:	fs ret 
  41f925:	rcl    BYTE PTR [ecx+ebp*2+0x18],cl
  41f929:	push   cs
  41f92a:	scas   al,BYTE PTR es:[edi]
  41f92b:	out    dx,eax
  41f92c:	add    al,0x88
  41f92e:	shl    DWORD PTR [ebp+0x41],0x9e
  41f932:	hlt    
  41f933:	les    edx,FWORD PTR [edi+0x656a727]
  41f939:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f93a:	adc    DWORD PTR [edx+0x4e],0x9
  41f93e:	int    0x48
  41f940:	sbb    al,0x12
  41f942:	sahf   
  41f943:	test   al,0x9d
  41f945:	jp     0x41f9a7
  41f947:	xchg   BYTE PTR [ecx],dl
  41f949:	out    dx,al
  41f94a:	push   ds
  41f94b:	push   ss
  41f94c:	call   0xbc05cacd
  41f951:	cdq    
  41f952:	call   0x7eab:0xa3c2a9be
  41f959:	push   edi
  41f95a:	ins    BYTE PTR es:[edi],dx
  41f95b:	iret   
  41f95c:	add    ch,BYTE PTR [edi]
  41f95e:	cmc    
  41f95f:	push   esp
  41f960:	in     al,dx
  41f961:	xchg   esi,eax
  41f962:	cs adc al,0x6e
  41f965:	fst    QWORD PTR [ebx-0x35]
  41f968:	jns    0x41f9c8
  41f96a:	or     esp,DWORD PTR [ecx]
  41f96c:	outs   dx,BYTE PTR ds:[esi]
  41f96d:	mov    esp,DWORD PTR [ebx-0x4d]
  41f970:	shl    BYTE PTR [edx+0x56],0xb1
  41f974:	lock xchg ebx,eax
  41f976:	clc    
  41f977:	sbb    DWORD PTR [edi-0x61],esp
  41f97a:	xchg   ebx,eax
  41f97b:	inc    esp
  41f97c:	push   esp
  41f97d:	jmp    0xd036:0x1e0db165
  41f984:	aas    
  41f985:	push   ebx
  41f986:	add    DWORD PTR [ebx],ebp
  41f988:	mov    ebx,0xf683e897
  41f98d:	jnp    0x41fa0a
  41f98f:	push   ds
  41f990:	or     BYTE PTR [ebp-0xd],0xc4
  41f994:	retf   
  41f995:	mov    WORD PTR [eax+0x71],gs
  41f998:	imul   edi,DWORD PTR [eax-0x6045608a],0x44c9ff63
  41f9a2:	fld    DWORD PTR [ebx]
  41f9a4:	not    ebp
  41f9a6:	into   
  41f9a7:	aad    0x84
  41f9a9:	clc    
  41f9aa:	or     al,0x71
  41f9ac:	scas   eax,DWORD PTR es:[edi]
  41f9ad:	sub    BYTE PTR [edi],0x7e
  41f9b0:	sbb    ebx,DWORD PTR [edx+0x772c166c]
  41f9b6:	cwde   
  41f9b7:	xlat   BYTE PTR ds:[ebx]
  41f9b8:	cwde   
  41f9b9:	mov    ebx,DWORD PTR [ebx+0x4cdbc808]
  41f9bf:	test   eax,0xa846af97
  41f9c4:	ror    dl,1
  41f9c6:	mov    bl,BYTE PTR [edi+0x647d4474]
  41f9cc:	jl     0x41fa29
  41f9ce:	ins    DWORD PTR es:[edi],dx
  41f9cf:	xor    cl,BYTE PTR [edx+0xc]
  41f9d2:	and    ebx,DWORD PTR [ebp+0x30]
  41f9d5:	mov    eax,0xe6ecc6bd
  41f9da:	call   0xb385:0x4f68cb07
  41f9e1:	mov    edx,0x44addd3b
  41f9e6:	add    DWORD PTR [ebx],ebp
  41f9e8:	stos   BYTE PTR es:[edi],al
  41f9e9:	adc    ah,bh
  41f9eb:	ja     0x41fa4b
  41f9ed:	lods   al,BYTE PTR ds:[esi]
  41f9ee:	jg     0x41fa0b
  41f9f0:	sub    edx,ebp
  41f9f2:	mov    eax,ds:0x9e5e6d20
  41f9f7:	mov    edi,0xaf7c1fec
  41f9fc:	dec    ebp
  41f9fd:	pop    esi
  41f9fe:	xchg   esi,eax
  41f9ff:	cli    
  41fa00:	rcr    DWORD PTR [esi+0x6962fdcd],0xb7
  41fa07:	jne    0x41f989
  41fa09:	mov    ds:0x53b7c5f9,eax
  41fa0e:	retf   
  41fa0f:	(bad)  
  41fa10:	push   ebp
  41fa11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa12:	sbb    eax,0x84dfba8f
  41fa17:	dec    eax
  41fa18:	shl    DWORD PTR [ebx-0x64],cl
  41fa1b:	lock out 0xe7,eax
  41fa1e:	ds sar al,0x66
  41fa22:	mov    edx,0xbd1bfa4b
  41fa27:	cdq    
  41fa28:	mov    ebp,0x2ece88de
  41fa2d:	cmp    BYTE PTR [ecx-0x36],dl
  41fa30:	(bad)  
  41fa31:	push   edx
  41fa32:	out    dx,eax
  41fa33:	nop
  41fa34:	xchg   ebx,eax
  41fa35:	jo     0x41fa55
  41fa37:	cmp    DWORD PTR [ebx],edx
  41fa39:	xchg   esp,eax
  41fa3a:	in     al,0xd4
  41fa3c:	imul   ebp,DWORD PTR [ebx],0xdb833916
  41fa42:	ins    BYTE PTR es:[edi],dx
  41fa43:	xchg   edi,eax
  41fa44:	sub    BYTE PTR fs:[ebx+0x3b06437d],dl
  41fa4b:	push   ss
  41fa4c:	jns    0x41fa23
  41fa4e:	push   ebp
  41fa4f:	lds    edi,FWORD PTR [edx-0x481620f8]
  41fa55:	or     eax,0x923ace25
  41fa5a:	xor    BYTE PTR ds:0x5ab85e69,0xf
  41fa61:	or     ebx,DWORD PTR [ebx-0xd13bea9]
  41fa67:	dec    ecx
  41fa68:	ins    BYTE PTR es:[edi],dx
  41fa69:	clc    
  41fa6a:	clc    
  41fa6b:	pop    edx
  41fa6c:	scas   al,BYTE PTR es:[edi]
  41fa6d:	add    eax,0x987d6894
  41fa72:	sahf   
  41fa73:	adc    al,0xac
  41fa75:	cld    
  41fa76:	lods   al,BYTE PTR ds:[esi]
  41fa77:	shl    edi,1
  41fa79:	mov    ah,0xb6
  41fa7b:	pop    eax
  41fa7c:	shl    DWORD PTR [edi-0x1f],0x98
  41fa80:	jecxz  0x41fa5b
  41fa82:	ins    BYTE PTR es:[edi],dx
  41fa83:	cmp    ebp,esp
  41fa85:	dec    edi
  41fa86:	call   0xece8:0x410fc794
  41fa8d:	fwait
  41fa8e:	adc    ch,BYTE PTR [ebx-0x53]
  41fa91:	sub    eax,0x4910f47c
  41fa96:	jge    0x41fa77
  41fa98:	repz and eax,ecx
  41fa9b:	shr    BYTE PTR [eax-0x1c86c7e1],cl
  41faa1:	shl    dl,0x99
  41faa4:	lahf   
  41faa5:	out    0x4f,eax
  41faa7:	sub    ebp,DWORD PTR [eax+eiz*4]
  41faaa:	sub    al,al
  41faac:	add    eax,0x930d6a0a
  41fab1:	clc    
  41fab2:	shl    BYTE PTR [eax],1
  41fab4:	mov    dl,0x86
  41fab6:	test   BYTE PTR [edi],bl
  41fab8:	std    
  41fab9:	xchg   edx,edi
  41fabb:	mov    BYTE PTR [ebp-0x1b],bh
  41fabe:	sub    al,0x7e
  41fac0:	js     0x41fb3c
  41fac2:	mov    eax,0xa4849429
  41fac7:	adc    BYTE PTR [edx+0x1c170e47],ah
  41facd:	mov    ebx,0x860ca9cf
  41fad2:	xor    bl,BYTE PTR [eax-0x3a660140]
  41fad8:	js     0x41face
  41fada:	dec    edi
  41fadb:	ja     0x41fb47
  41fadd:	loope  0x41fae8
  41fadf:	cs mov eax,0xfd17bcae
  41fae5:	xchg   BYTE PTR [edx+0x6bbb14d1],dl
  41faeb:	xor    DWORD PTR [ecx-0x671d7e3e],0xfffffff9
  41faf2:	out    0xff,eax
  41faf4:	stos   DWORD PTR es:[edi],eax
  41faf5:	jno    0x41fb0b
  41faf7:	dec    esi
  41faf8:	fsubp  st(2),st
  41fafa:	mov    cl,0x2b
  41fafc:	stc    
  41fafd:	xchg   edx,eax
  41fafe:	(bad)  
  41faff:	stc    
  41fb00:	leave  
  41fb01:	lds    ecx,FWORD PTR [eax-0x2908f4a1]
  41fb07:	jecxz  0x41fb3d
  41fb09:	xchg   edx,eax
  41fb0a:	sbb    DWORD PTR [ebx-0x20],esi
  41fb0d:	fcmovnbe st,st(3)
  41fb0f:	mov    al,ds:0xaeb51f6a
  41fb14:	(bad)  
  41fb15:	loopne 0x41fb5c
  41fb17:	(bad)  [edx]
  41fb19:	and    eax,0x7f44bd8c
  41fb1e:	stc    
  41fb1f:	out    dx,eax
  41fb20:	stos   DWORD PTR es:[edi],eax
  41fb21:	pop    esp
  41fb22:	cmc    
  41fb23:	sbb    bh,BYTE PTR [eax]
  41fb25:	adc    eax,0x91bbfd92
  41fb2a:	lea    ebx,[edi+ebp*8]
  41fb2d:	clc    
  41fb2e:	dec    esi
  41fb2f:	pop    es
  41fb30:	cmp    BYTE PTR [edx-0x4c180454],0xa3
  41fb37:	daa    
  41fb38:	and    bh,ah
  41fb3a:	leave  
  41fb3b:	dec    ecx
  41fb3c:	repnz cmp esp,DWORD PTR [ecx-0x4964b329]
  41fb43:	repnz or esi,DWORD PTR [edx-0x6b]
  41fb47:	iret   
  41fb48:	(bad)  
  41fb49:	mov    ds:0xe9d19174,eax
  41fb4e:	inc    edx
  41fb4f:	add    eax,0x6835af06
  41fb54:	mov    ah,0x46
  41fb56:	and    al,0xf
  41fb58:	retf   
  41fb59:	cdq    
  41fb5a:	in     al,dx
  41fb5b:	retf   0x776e
  41fb5e:	leave  
  41fb5f:	mov    BYTE PTR [ebx+eiz*1+0x30],bh
  41fb63:	data16 rol BYTE PTR [ecx-0x62],0x4f
  41fb68:	sbb    DWORD PTR [ebp+edx*2-0x3ea6fe5a],ebx
  41fb6f:	mov    al,0x94
  41fb71:	pop    eax
  41fb72:	cmp    al,BYTE PTR [eax+eax*1-0x11ec0115]
  41fb79:	fs xchg ebx,eax
  41fb7b:	pusha  
  41fb7c:	lods   al,BYTE PTR ds:[esi]
  41fb7d:	es pop ebp
  41fb7f:	add    dh,0x52
  41fb82:	sub    BYTE PTR [edi+0x38a113d1],al
  41fb88:	je     0x41fb45
  41fb8a:	mov    al,0x91
  41fb8c:	mov    ah,0x8
  41fb8e:	shl    DWORD PTR [esp+ebp*1-0x77371f91],cl
  41fb95:	xor    DWORD PTR [ecx+0x17d4ceb8],edx
  41fb9b:	jg     0x41fb3c
  41fb9d:	mov    edi,0x4268162d
  41fba2:	test   al,0xe2
  41fba4:	inc    edx
  41fba5:	mov    ch,dl
  41fba7:	sub    eax,0x249895ba
  41fbac:	test   DWORD PTR [edx+0x5c],0x83d3dcf7
  41fbb3:	lock mov dl,0x98
  41fbb6:	push   ds
  41fbb7:	inc    DWORD PTR [esp+eiz*8-0x8]
  41fbbb:	jmp    0x95e6:0x493a26f8
  41fbc2:	inc    eax
  41fbc3:	lock jne 0x41fb67
  41fbc6:	jbe    0x41fb6f
  41fbc8:	fiadd  DWORD PTR [edx]
  41fbca:	(bad)  
  41fbcb:	mov    edi,0xb3040d66
  41fbd0:	cmp    bh,ch
  41fbd2:	push   esp
  41fbd3:	inc    eax
  41fbd4:	pop    ebp
  41fbd5:	div    DWORD PTR [edx+0x3e]
  41fbd8:	push   ebp
  41fbd9:	add    edx,DWORD PTR [esi+eiz*8-0x1f]
  41fbdd:	lods   eax,DWORD PTR ds:[esi]
  41fbde:	jne    0x41fb91
  41fbe0:	jae    0x41fc39
  41fbe2:	(bad)  
  41fbe3:	cmc    
  41fbe4:	xchg   DWORD PTR [ecx+0x42],ebp
  41fbe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fbe8:	bound  edx,QWORD PTR [edx]
  41fbea:	stos   BYTE PTR es:[edi],al
  41fbeb:	fwait
  41fbec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fbed:	xchg   ecx,eax
  41fbee:	xchg   ebx,eax
  41fbef:	popf   
  41fbf0:	xchg   edi,eax
  41fbf1:	mov    esp,0x759d8dca
  41fbf6:	pop    ds
  41fbf7:	jae    0x41fbde
  41fbf9:	das    
  41fbfa:	inc    ebx
  41fbfb:	sub    eax,0x42eea4a5
  41fc00:	xor    ecx,esp
  41fc02:	rol    DWORD PTR [ecx],cl
  41fc04:	bound  eax,QWORD PTR [edx+0x22a6ff7b]
  41fc0a:	or     al,0xbd
  41fc0c:	jmp    0x41fbcb
  41fc0e:	push   0x2c39161
  41fc13:	rcr    BYTE PTR ds:0xaaa3ad97,1
  41fc19:	xor    eax,0xcba1a5ca
  41fc1e:	imul   esi,DWORD PTR [ecx],0x2a
  41fc21:	mov    ebx,0xc13f00df
  41fc26:	stos   DWORD PTR es:[edi],eax
  41fc27:	inc    edi
  41fc28:	lods   al,BYTE PTR ds:[esi]
  41fc29:	pop    edx
  41fc2a:	mov    eax,0x5f5d9550
  41fc2f:	cs adc al,0x8d
  41fc32:	gs push edx
  41fc34:	pop    ebp
  41fc35:	mov    cl,0x8d
  41fc37:	inc    esi
  41fc38:	push   es
  41fc39:	stos   DWORD PTR es:[edi],eax
  41fc3a:	pop    eax
  41fc3b:	adc    BYTE PTR [edx],al
  41fc3d:	adc    DWORD PTR [esi],0x16e6f35e
  41fc43:	push   esi
  41fc44:	sbb    edi,ecx
  41fc46:	cmp    BYTE PTR [esi+0x41],bl
  41fc49:	add    eax,0xb8c651dd
  41fc4e:	sub    DWORD PTR [eax+0x7],ebx
  41fc51:	or     al,0x3
  41fc53:	retf   
  41fc54:	js     0x41fc01
  41fc56:	mov    esp,0xa172940c
  41fc5b:	cmp    DWORD PTR [eax+edi*8-0x30],ebx
  41fc5f:	jmp    0x4238:0xfaab5e82
  41fc66:	jmp    DWORD PTR [edx]
  41fc68:	les    esi,FWORD PTR [ebp+esi*8+0x4b2a950b]
  41fc6f:	sub    BYTE PTR [edx+ebx*8+0x390aa472],cl
  41fc76:	mov    esp,ebx
  41fc78:	cmc    
  41fc79:	and    al,0x12
  41fc7b:	lds    esi,FWORD PTR [esi+0x6a]
  41fc7e:	xor    eax,0x23a476e4
  41fc83:	out    dx,eax
  41fc84:	adc    eax,edi
  41fc86:	(bad)  
  41fc87:	addr16 aad 0x2a
  41fc8a:	mov    dl,0xc1
  41fc8c:	and    al,0x52
  41fc8e:	repz sub DWORD PTR [ebx-0x7eca854c],ebx
  41fc95:	ss jb  0x41fc20
  41fc98:	xchg   edx,eax
  41fc99:	or     ch,BYTE PTR [eax+ecx*4-0x4086207e]
  41fca0:	push   es
  41fca1:	or     ah,BYTE PTR [eax+0x2c506950]
  41fca7:	add    BYTE PTR [eax+0x12],bh
  41fcaa:	and    DWORD PTR [ecx],0x16
  41fcad:	ins    DWORD PTR es:[edi],dx
  41fcae:	push   edi
  41fcaf:	fmul   st(2),st
  41fcb1:	jb     0x41fc56
  41fcb3:	sbb    eax,0xaaa62aab
  41fcb8:	pop    es
  41fcb9:	int3   
  41fcba:	sub    al,0x36
  41fcbc:	sub    al,0xf4
  41fcbe:	sahf   
  41fcbf:	lds    eax,FWORD PTR [ebx]
  41fcc1:	mov    cl,0xac
  41fcc3:	jb     0x41fce1
  41fcc5:	out    dx,al
  41fcc6:	mov    ds:0xdb208cb6,al
  41fccb:	or     eax,0x3ed7b188
  41fcd0:	add    eax,0xadd89a52
  41fcd5:	dec    edx
  41fcd6:	sbb    eax,edx
  41fcd8:	in     eax,dx
  41fcd9:	pop    ebp
  41fcda:	scas   eax,DWORD PTR es:[edi]
  41fcdb:	les    esi,FWORD PTR [ecx]
  41fcdd:	aaa    
  41fcde:	jp     0x41fd26
  41fce0:	out    0xe5,eax
  41fce2:	out    0x36,al
  41fce4:	mov    gs,WORD PTR [edi+0x2504efa6]
  41fcea:	cmp    ecx,edx
  41fcec:	pop    ds
  41fced:	mov    ds:0xba1c96f9,eax
  41fcf2:	and    eax,0x7983820
  41fcf7:	mov    edi,0x770826fb
  41fcfc:	pop    esp
  41fcfd:	ins    BYTE PTR es:[edi],dx
  41fcfe:	(bad)  
  41fcff:	dec    edx
  41fd00:	mov    edi,ebx
  41fd02:	or     cl,al
  41fd04:	imul   ecx,esi,0xeb0da7d0
  41fd0a:	push   0xfffffff4
  41fd0c:	dec    edx
  41fd0d:	in     al,dx
  41fd0e:	xchg   esp,eax
  41fd0f:	adc    ah,BYTE PTR [edx+0x70]
  41fd12:	xor    al,BYTE PTR [edx]
  41fd14:	dec    esp
  41fd15:	outs   dx,DWORD PTR fs:[esi]
  41fd17:	add    DWORD PTR [ebx],eax
  41fd19:	test   BYTE PTR [ebx],dh
  41fd1b:	xchg   ebp,eax
  41fd1c:	pop    ds
  41fd1d:	pop    ecx
  41fd1e:	jp     0x41fd7e
  41fd20:	test   eax,0x87f42cb
  41fd25:	test   DWORD PTR [ecx-0x3e2c9ecd],eax
  41fd2b:	ins    BYTE PTR es:[edi],dx
  41fd2c:	xor    eax,0xec3334ee
  41fd31:	test   al,0x63
  41fd33:	daa    
  41fd34:	push   0x9ae9ecfc
  41fd39:	push   esi
  41fd3a:	cs mov edx,0xd82a4614
  41fd40:	out    0x9a,al
  41fd42:	xchg   edx,eax
  41fd43:	daa    
  41fd44:	adc    ecx,DWORD PTR [eax-0x61]
  41fd47:	ds sar al,0xea
  41fd4b:	fs add eax,0x28b17f61
  41fd51:	scas   al,BYTE PTR es:[edi]
  41fd52:	dec    edx
  41fd53:	retf   
  41fd54:	(bad)  
  41fd55:	inc    edi
  41fd56:	fsubr  st,st(6)
  41fd58:	fadd   DWORD PTR [edi+ebp*1-0x6edb6ad]
  41fd5f:	fstp   DWORD PTR [ebp-0x60e2e7d6]
  41fd65:	and    ebp,0xffffffa6
  41fd68:	mov    bp,0x1ca9
  41fd6c:	push   0x58
  41fd6e:	in     eax,0x7d
  41fd70:	int    0x96
  41fd72:	cli    
  41fd73:	mov    eax,?
  41fd75:	dec    ebx
  41fd76:	popa   
  41fd77:	iret   
  41fd78:	ins    DWORD PTR es:[edi],dx
  41fd79:	cmp    ebp,DWORD PTR [ecx-0x3f]
  41fd7c:	cli    
  41fd7d:	scas   al,BYTE PTR es:[edi]
  41fd7e:	call   DWORD PTR [ebx]
  41fd80:	add    eax,DWORD PTR gs:[ebp-0x5a]
  41fd84:	and    edx,DWORD PTR ds:[ebx+0x72804118]
  41fd8b:	cs adc dl,bh
  41fd8e:	add    BYTE PTR [ebp+ebp*1-0x396def09],dl
  41fd95:	mov    edi,0xc6316b9a
  41fd9a:	dec    ebx
  41fd9b:	jecxz  0x41fdff
  41fd9d:	fcomp  st(1)
  41fd9f:	js     0x41fd2a
  41fda1:	jmp    0x29120093
  41fda6:	scas   al,BYTE PTR es:[edi]
  41fda7:	rol    BYTE PTR [edx-0x16ddfe3],0x7d
  41fdae:	iret   
  41fdaf:	(bad)  
  41fdb0:	sar    DWORD PTR [esi+0x13],0xb5
  41fdb4:	adc    BYTE PTR [esi+0x34d2bb73],ah
  41fdba:	loop   0x41fda3
  41fdbc:	xchg   esi,eax
  41fdbd:	imul   edx,edx,0x70
  41fdc0:	aad    0x74
  41fdc2:	inc    esp
  41fdc3:	retf   
  41fdc4:	mov    bl,0x82
  41fdc6:	(bad)  
  41fdc7:	es or  eax,0xe302b624
  41fdcd:	or     BYTE PTR [ebp+0x29f5a706],ah
  41fdd3:	fisub  WORD PTR [eax]
  41fdd5:	ror    DWORD PTR [ebx],1
  41fdd7:	pop    esi
  41fdd8:	sbb    BYTE PTR [ecx+esi*2+0x1786fc5a],dh
  41fddf:	xor    eax,0xbb21f2f7
  41fde4:	repz sbb al,0xae
  41fde7:	ret    0x7bcd
  41fdea:	mov    ebp,0xa6d50962
  41fdef:	sti    
  41fdf0:	sub    edi,DWORD PTR [edx]
  41fdf2:	fnsave [edi]
  41fdf4:	jb     0x41fda6
  41fdf6:	aad    0x1
  41fdf8:	mov    al,ds:0xdfad8b94
  41fdfd:	lahf   
  41fdfe:	pop    ecx
  41fdff:	arpl   si,dx
  41fe01:	outs   dx,DWORD PTR ds:[esi]
  41fe02:	adc    ch,BYTE PTR [esi+esi*4-0x5ad14e8a]
  41fe09:	jmp    0x5988:0xe360a641
  41fe10:	mov    eax,ds:0xcb5d326a
  41fe15:	addr16 das 
  41fe17:	std    
  41fe18:	shr    BYTE PTR [edi],cl
  41fe1a:	mov    dh,0x1f
  41fe1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe1d:	cmp    ecx,DWORD PTR [ebx-0x7d282a16]
  41fe23:	mov    al,ds:0xa8c87d37
  41fe28:	xchg   ecx,eax
  41fe29:	pop    ecx
  41fe2a:	or     BYTE PTR [esi-0x73],bl
  41fe2d:	imul   ch
  41fe2f:	sbb    dl,dl
  41fe31:	stc    
  41fe32:	mov    DWORD PTR [eax+0x51],edi
  41fe35:	mov    al,0xd7
  41fe37:	sub    BYTE PTR [esi-0x4f68448f],dl
  41fe3d:	fwait
  41fe3e:	pop    edi
  41fe3f:	out    0xf,eax
  41fe41:	push   esp
  41fe42:	jns    0x41fe02
  41fe44:	xchg   esi,eax
  41fe45:	sbb    cl,BYTE PTR [ecx]
  41fe47:	adc    dh,al
  41fe49:	repnz lahf 
  41fe4b:	pusha  
  41fe4c:	lea    esi,[ebp+eax*8+0xb8309d7]
  41fe53:	cld    
  41fe54:	mov    DWORD PTR [ebp+0x4fe74de9],ecx
  41fe5a:	xchg   DWORD PTR [ebx],esp
  41fe5c:	push   ebx
  41fe5d:	stos   BYTE PTR es:[edi],al
  41fe5e:	mov    esp,0xf834514d
  41fe63:	imul   edx,DWORD PTR [ecx-0x59902a13],0x82981ec8
  41fe6d:	mov    eax,ds:0xa215bf79
  41fe72:	lahf   
  41fe73:	and    eax,0x3ddc118a
  41fe78:	out    dx,al
  41fe79:	mov    ebx,0x7176c898
  41fe7e:	nop
  41fe7f:	hlt    
  41fe80:	jge    0x41fe0e
  41fe82:	mov    edx,0xd2b1f4ad
  41fe87:	out    dx,eax
  41fe88:	mov    eax,ds:0x5794a8a3
  41fe8d:	or     cl,BYTE PTR [edx-0x2a4e9048]
  41fe93:	mov    al,ds:0xf9cbc6bd
  41fe98:	sub    BYTE PTR [ebp-0x67],ah
  41fe9b:	xchg   edx,eax
  41fe9c:	sbb    bl,BYTE PTR [esi-0x11]
  41fe9f:	push   edx
  41fea0:	or     eax,0x37e69ee9
  41fea5:	xchg   ecx,eax
  41fea6:	cdq    
  41fea7:	pop    edi
  41fea8:	jl     0x41fea7
  41feaa:	mov    bh,0x3a
  41feac:	push   ds
  41fead:	lods   eax,DWORD PTR ds:[esi]
  41feae:	add    al,0x39
  41feb0:	mov    al,BYTE PTR [esi-0x66]
  41feb3:	pusha  
  41feb4:	mov    al,ds:0x2a465342
  41feb9:	or     eax,DWORD PTR [ebp+eax*1-0x6d6db622]
  41fec0:	aaa    
  41fec1:	cli    
  41fec2:	inc    eax
  41fec3:	mov    dh,0xcc
  41fec5:	test   BYTE PTR [ecx-0x57f2c47d],ch
  41fecb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fecc:	dec    eax
  41fecd:	jp     0x41ff01
  41fecf:	ja     0x41fecf
  41fed1:	retf   
  41fed2:	arpl   WORD PTR [edx+0x2622f6d4],si
  41fed8:	pop    ds
  41fed9:	xchg   ebp,eax
  41feda:	xchg   DWORD PTR [edi+0x61],esp
  41fedd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fede:	jmp    FWORD PTR [edi-0x2d2af58b]
  41fee4:	in     al,dx
  41fee5:	test   BYTE PTR [ebx],ch
  41fee7:	dec    ebp
  41fee8:	xchg   ecx,edi
  41feea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41feeb:	push   edi
  41feec:	dec    ecx
  41feed:	xchg   edx,eax
  41feee:	cld    
  41feef:	mov    dh,BYTE PTR [ecx-0x44d6ffbd]
  41fef5:	xor    eax,0xf462a2f5
  41fefa:	out    dx,eax
  41fefb:	mov    edx,0xb2ba65
  41ff00:	(bad)  
  41ff01:	jnp    0x41ff2b
  41ff03:	mov    BYTE PTR ds:0xbd7a858e,dh
  41ff09:	add    al,0xb7
  41ff0b:	aas    
  41ff0c:	test   al,0x69
  41ff0e:	pop    esi
  41ff0f:	addr16 (bad) 
  41ff11:	in     al,0xd6
  41ff13:	dec    edx
  41ff14:	into   
  41ff15:	scas   al,BYTE PTR es:[edi]
  41ff16:	mov    eax,ds:0xad48be7a
  41ff1b:	repz stc 
  41ff1d:	(bad)  
  41ff1e:	pop    ecx
  41ff1f:	jp     0x41fea8
  41ff21:	and    DWORD PTR [ebx-0x54],edi
  41ff24:	inc    ecx
  41ff25:	call   0x236a48af
  41ff2a:	cmc    
  41ff2b:	push   0x69f13c86
  41ff30:	xchg   ebx,eax
  41ff31:	lahf   
  41ff32:	popa   
  41ff33:	xchg   edi,eax
  41ff34:	push   ds
  41ff35:	gs xchg ch,dh
  41ff38:	mov    esi,0x50c563ae
  41ff3d:	pop    ds
  41ff3e:	pop    ebx
  41ff3f:	loopne 0x41ff09
  41ff41:	dec    edx
  41ff42:	fwait
  41ff43:	test   esp,ebp
  41ff45:	sahf   
  41ff46:	jg     0x41ff5b
  41ff48:	inc    esp
  41ff49:	mov    edi,0xa7c2ee02
  41ff4e:	inc    ebp
  41ff4f:	mov    BYTE PTR [ebp+0x6317ccf0],al
  41ff55:	mov    bl,0xb4
  41ff57:	mov    ds:0xd2753c60,eax
  41ff5c:	jmp    0x49f9faea
  41ff61:	jl     0x41ff74
  41ff63:	retf   
  41ff64:	unpcklps xmm3,XMMWORD PTR [edx+0x51]
  41ff68:	or     ecx,ebp
  41ff6a:	or     al,0xf4
  41ff6c:	nop
  41ff6d:	and    esi,DWORD PTR [ebx+0x4e]
  41ff70:	daa    
  41ff71:	xchg   edx,eax
  41ff72:	dec    edx
  41ff73:	aad    0xce
  41ff75:	iret   
  41ff76:	adc    BYTE PTR [ecx+0x2f],dh
  41ff79:	mov    ss,ebp
  41ff7b:	cli    
  41ff7c:	or     eax,0x9d4cdb18
  41ff81:	or     BYTE PTR [ebx-0x32486ee7],ch
  41ff87:	or     DWORD PTR [ecx],ebp
  41ff89:	add    ah,dl
  41ff8b:	dec    ebx
  41ff8c:	cmp    BYTE PTR [ecx-0x284fbcbe],0x5d
  41ff93:	cld    
  41ff94:	ja     0x41ff6b
  41ff96:	jae    0x41ff3d
  41ff98:	iret   
  41ff99:	aam    0xbb
  41ff9b:	idiv   ch
  41ff9d:	fstp   QWORD PTR [edi+edx*8+0x53]
  41ffa1:	cmp    eax,0xf3f3fde8
  41ffa6:	fld    DWORD PTR [esi-0x79]
  41ffa9:	mov    al,0x4e
  41ffab:	in     eax,0xf6
  41ffad:	ret    0x59be
  41ffb0:	jb     0x420013
  41ffb2:	into   
  41ffb3:	xor    dl,ah
  41ffb5:	imul   ebx,DWORD PTR [esi+0x5aedfc71],0x37d67303
  41ffbf:	push   ebp
  41ffc0:	jns    0x42000f
  41ffc2:	in     eax,dx
  41ffc3:	aas    
  41ffc4:	adc    edx,DWORD PTR [ebx]
  41ffc6:	lods   eax,DWORD PTR ds:[esi]
  41ffc7:	push   esp
  41ffc8:	cmp    DWORD PTR [ecx],0xe2232ae2
  41ffce:	xchg   ecx,eax
  41ffcf:	bound  ebx,QWORD PTR [eax-0x5ff46961]
  41ffd5:	inc    ebp
  41ffd6:	mov    dl,bl
  41ffd8:	add    esp,DWORD PTR [edi+0x21]
  41ffdb:	imul   BYTE PTR [ecx+0x3]
  41ffde:	lock nop
  41ffe0:	mov    al,ds:0x9cf05322
  41ffe5:	mov    edx,0x203f1179
  41ffea:	cmp    dl,BYTE PTR [esi+0x6b]
  41ffed:	ficomp DWORD PTR [edx+0x357a157b]
  41fff3:	jge    0x41ff86
  41fff5:	mov    ds:0x4be2bfdc,eax
  41fffa:	mov    al,0xcd
  41fffc:	mov    ebx,0x6fb0b31d
  420001:	xor    eax,0xdbe94975
  420006:	outs   dx,DWORD PTR ds:[esi]
  420007:	xor    dh,bl
  420009:	mov    ch,0x44
  42000b:	xor    eax,0xdd7e6a9b
  420010:	sbb    BYTE PTR [ebx],dh
  420012:	cmp    al,0x44
  420014:	dec    edi
  420015:	and    al,0xca
  420017:	or     eax,0xe83948d7
  42001c:	mov    ebp,0x39c637d2
  420021:	cmp    ah,BYTE PTR [esi+0xb]
  420024:	push   sp
  420026:	into   
  420027:	xchg   esi,eax
  420028:	mov    eax,0x477e623
  42002d:	lock jo 0x420081
  420030:	cmp    edi,DWORD PTR [ebx-0x7e]
  420033:	mov    edx,edi
  420035:	js     0x4200ac
  420037:	adc    DWORD PTR [edi+0x2],edi
  42003a:	dec    esi
  42003b:	jbe    0x41ffec
  42003d:	outs   dx,DWORD PTR ds:[esi]
  42003e:	add    BYTE PTR [edi],cl
  420040:	or     ecx,eax
  420042:	call   0x26d7:0xe349d61
  420049:	imul   eax,ebx,0xffffffe8
  42004c:	and    al,0x32
  42004e:	adc    DWORD PTR ds:0x7b08ccf,eax
  420054:	ret    
  420055:	xchg   edx,eax
  420056:	mov    edx,0x384678a8
  42005b:	test   DWORD PTR [edx],edx
  42005d:	jae    0x420099
  42005f:	fsubr  QWORD PTR [esi+eax*1]
  420062:	rcl    BYTE PTR [eax+0x69],cl
  420065:	adc    al,0xc9
  420067:	and    DWORD PTR [ebx+0x6bfa87a],ebp
  42006d:	out    0xd8,al
  42006f:	sti    
  420070:	jl     0x4200c1
  420072:	(bad)  
  420073:	inc    ecx
  420074:	outs   dx,DWORD PTR ds:[esi]
  420075:	outs   dx,DWORD PTR ds:[esi]
  420076:	xor    eax,0x461df93e
  42007b:	push   ecx
  42007c:	xor    al,0x59
  42007e:	retf   
  42007f:	popf   
  420080:	adc    dl,BYTE PTR [ebp+eax*2+0xc1583e0]
  420087:	ror    BYTE PTR [edx-0x1f],0x20
  42008b:	pop    es
  42008c:	ret    0x8260
  42008f:	pop    esi
  420090:	push   es
  420091:	and    eax,0xd0e877be
  420096:	imul   eax,edx,0x85c75611
  42009c:	(bad)  
  42009d:	in     eax,0xee
  42009f:	aaa    
  4200a0:	nop
  4200a1:	push   es
  4200a2:	(bad)
  4200a5:	and    eax,0x417ac3df
  4200aa:	mov    ch,0x31
  4200ac:	stos   DWORD PTR es:[edi],eax
  4200ad:	cmp    eax,0x35e30778
  4200b2:	jae    0x420110
  4200b4:	imul   edx,DWORD PTR [edx-0x742d33f1],0x3c
  4200bb:	mov    edi,0x1763045a
  4200c0:	sbb    cl,bh
  4200c2:	(bad)  
  4200c4:	jge    0x42004d
  4200c6:	and    eax,0x537fe943
  4200cb:	imul   eax,ebx,0xa1f8b7c3
  4200d1:	mov    eax,ds:0x735dcc8b
  4200d6:	or     BYTE PTR [ecx-0x498c6732],bh
  4200dc:	imul   ebp,DWORD PTR [edx-0x4b6f250f],0xf6c8f6b3
  4200e6:	pop    edx
  4200e7:	cmp    DWORD PTR [eax-0x6a],eax
  4200ea:	lds    esp,FWORD PTR ds:0x646e1207
  4200f0:	jmp    0x420149
  4200f2:	mov    eax,ds:0xdf73e0e
  4200f7:	sub    edx,DWORD PTR [esi+0x7d1ef5b7]
  4200fd:	sahf   
  4200fe:	das    
  4200ff:	iret   
  420100:	fidiv  WORD PTR [ecx+eiz*2]
  420103:	js     0x4200d1
  420105:	xchg   ebp,eax
  420106:	sbb    BYTE PTR [edx+0x15],bh
  420109:	test   BYTE PTR [edx],cl
  42010b:	outs   dx,DWORD PTR ds:[esi]
  42010c:	enter  0x2f71,0x8e
  420110:	lahf   
  420111:	jo     0x42018b
  420113:	lods   al,BYTE PTR ds:[esi]
  420114:	sub    al,0x98
  420116:	stc    
  420117:	lods   al,BYTE PTR ds:[esi]
  420118:	sbb    BYTE PTR [ecx],0x4e
  42011b:	out    dx,al
  42011c:	and    bl,BYTE PTR [ebx-0x1826d22d]
  420122:	aam    0x5e
  420124:	mov    esp,0xe30771a2
  420129:	inc    eax
  42012a:	repnz pop ebp
  42012c:	jl     0x42014a
  42012e:	out    0x87,al
  420130:	test   eax,0xc8e3ebb4
  420135:	push   edx
  420136:	cdq    
  420137:	(bad)  
  420138:	jmp    0x875d9e02
  42013d:	or     eax,0x9bcd0fa1
  420142:	adc    ebx,DWORD PTR [eax-0x5ec22bf2]
  420148:	dec    esp
  420149:	or     DWORD PTR [edi-0x3d669f1a],esp
  42014f:	xchg   BYTE PTR [ebp-0x6fcb58c9],dl
  420155:	pop    ds
  420156:	int3   
  420157:	push   ebx
  420158:	movntss DWORD PTR [ecx-0xb],xmm0
  42015d:	fldcw  WORD PTR [ebx-0x26]
  420160:	mov    esp,0xbb1bc12a
  420165:	sub    BYTE PTR [eax-0x40],cl
  420168:	cmp    al,0x8b
  42016a:	sbb    eax,0xa38f99a0
  42016f:	test   BYTE PTR [eax+0x42970ac9],cl
  420175:	out    0xe2,eax
  420177:	and    dl,BYTE PTR [ebp+0x5b3a92b2]
  42017d:	fdivr  DWORD PTR [esi+0x111d18b6]
  420183:	out    dx,eax
  420184:	sbb    BYTE PTR [bx+si-0xf],ah
  420188:	nop
  420189:	and    BYTE PTR [eax],ch
  42018b:	mov    al,ds:0x62928585
  420190:	frstor [ecx-0x62]
  420193:	iret   
  420194:	jb     0x42020f
  420196:	jbe    0x4201ce
  420198:	push   edx
  420199:	leave  
  42019a:	outs   dx,DWORD PTR ds:[esi]
  42019b:	jns    0x420199
  42019d:	jb     0x4201b5
  42019f:	pushf  
  4201a0:	push   0xf2f166c8
  4201a5:	xchg   edx,eax
  4201a6:	push   ds
  4201a7:	or     al,0xec
  4201a9:	out    dx,eax
  4201aa:	jb     0x42014b
  4201ac:	cmp    BYTE PTR [edi],dh
  4201ae:	push   ebp
  4201af:	mov    edi,0x982e2c55
  4201b4:	into   
  4201b5:	cmp    al,0x4d
  4201b7:	sbb    dh,dh
  4201b9:	push   esi
  4201ba:	out    0x3,al
  4201bc:	cs mov dl,0x6c
  4201bf:	dec    eax
  4201c0:	jb     0x4201bc
  4201c2:	fldenv [edi+ebp*2-0x512578d5]
  4201c9:	retf   0xb553
  4201cc:	fldenv [edi-0x2]
  4201cf:	add    DWORD PTR [eax+eiz*4-0xfc18734],eax
  4201d6:	cld    
  4201d7:	test   BYTE PTR [eax],dl
  4201d9:	xor    eax,0x4fcfd448
  4201de:	aad    0xb0
  4201e0:	call   0x701abd1e
  4201e5:	mov    al,0x49
  4201e7:	test   al,0xe0
  4201e9:	popf   
  4201ea:	push   esi
  4201eb:	(bad)  
  4201ed:	push   ss
  4201ee:	std    
  4201ef:	out    dx,eax
  4201f0:	jp     0x42020f
  4201f2:	rol    BYTE PTR [esi-0x67],cl
  4201f5:	call   0x9533:0x789fcd6
  4201fc:	les    ebp,FWORD PTR [esi]
  4201fe:	loopne 0x42020b
  420200:	push   eax
  420201:	jl     0x4201bf
  420203:	lods   eax,DWORD PTR ds:[esi]
  420204:	mov    bl,0xa8
  420206:	cmp    BYTE PTR gs:[ebp-0x657491c0],0x61
  42020e:	mov    ds:0xf8b84bf,eax
  420213:	cmp    eax,0xd700c1a9
  420218:	lds    esp,FWORD PTR [edx]
  42021a:	cmp    esi,eax
  42021c:	mov    ch,0xc2
  42021e:	push   0x6dabc52c
  420223:	mov    edx,0xd66190d1
  420228:	test   al,0x58
  42022a:	ja     0x420214
  42022c:	pop    ebp
  42022d:	sti    
  42022e:	dec    edx
  42022f:	addr16 ss inc esp
  420232:	int    0x25
  420234:	jle    0x420254
  420236:	sub    DWORD PTR [edi+0x6f],esp
  420239:	xor    BYTE PTR [ecx-0x1f4f841b],al
  42023f:	mov    esi,0xf7fd8d7
  420244:	popf   
  420245:	push   edi
  420246:	aad    0xc6
  420248:	xlat   BYTE PTR ds:[ebx]
  420249:	dec    esp
  42024a:	into   
  42024b:	ret    0x7a8f
  42024e:	add    al,0x8f
  420250:	pushf  
  420251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420252:	xor    bh,bl
  420254:	lahf   
  420255:	inc    edx
  420256:	enter  0x500f,0x22
  42025a:	add    edx,DWORD PTR [eax]
  42025c:	call   0xa425fc69
  420261:	mov    eax,ds:0x15f13921
  420266:	pop    es
  420267:	ins    DWORD PTR es:[edi],dx
  420268:	push   ecx
  420269:	xchg   ebx,eax
  42026a:	sbb    al,0x5a
  42026c:	sub    edx,DWORD PTR [edx+0x2a]
  42026f:	push   eax
  420270:	cdq    
  420271:	stos   DWORD PTR es:[edi],eax
  420272:	pop    es
  420273:	jecxz  0x4202d6
  420275:	loopne 0x4201f9
  420277:	xchg   esp,eax
  420278:	(bad)  
  420279:	in     al,dx
  42027a:	cmp    esi,edx
  42027c:	mov    ah,0xbd
  42027e:	daa    
  42027f:	fstp   QWORD PTR [ebx+0x7407e306]
  420285:	dec    edi
  420286:	lock inc edi
  420288:	pop    esi
  420289:	fld    TBYTE PTR [edx+0x3be5591d]
  42028f:	jae    0x4202ff
  420291:	je     0x420284
  420293:	mov    ebx,0x2f832190
  420298:	jg     0x420250
  42029a:	in     al,0xae
  42029c:	sbb    ch,BYTE PTR [ebx+0x16471143]
  4202a2:	stos   BYTE PTR es:[edi],al
  4202a3:	(bad)  [ebx]
  4202a5:	fs jbe 0x420240
  4202a8:	lods   al,BYTE PTR ds:[esi]
  4202a9:	xor    ebp,esp
  4202ab:	push   ecx
  4202ac:	sub    al,bh
  4202ae:	idiv   dl
  4202b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202b1:	push   ebp
  4202b2:	test   DWORD PTR [ebp+0x25],ebp
  4202b5:	jnp    0x420302
  4202b7:	jbe    0x420249
  4202b9:	and    esi,DWORD PTR [ecx+0x640d9464]
  4202bf:	fisubr DWORD PTR [ebx-0x42]
  4202c2:	das    
  4202c3:	push   0xb11da6e6
  4202c8:	mov    dl,0x64
  4202ca:	addr16 mov ch,0xdf
  4202cd:	pop    ebp
  4202ce:	pop    ss
  4202cf:	rol    bh,1
  4202d1:	xchg   ebx,eax
  4202d2:	rcr    DWORD PTR [edi-0x4ae588db],0x46
  4202d9:	in     al,dx
  4202da:	cdq    
  4202db:	push   edx
  4202dc:	jge    0x420261
  4202de:	add    BYTE PTR [eax],ch
  4202e0:	mov    esp,0xf74b007
  4202e5:	aam    0xeb
  4202e7:	ja     0x42032f
  4202e9:	in     al,0x18
  4202eb:	retf   
  4202ec:	mov    ah,0x3
  4202ee:	daa    
  4202ef:	mov    al,ds:0x9732c4b8
  4202f4:	sbb    DWORD PTR [esi],ecx
  4202f6:	inc    ebx
  4202f7:	cmp    eax,0xff944e8e
  4202fc:	or     al,0x6
  4202fe:	out    dx,al
  4202ff:	mov    al,ds:0x80c5489f
  420304:	sbb    al,0x3a
  420306:	inc    edi
  420307:	call   0x9689ff1a
  42030c:	ds inc edx
  42030e:	int    0x23
  420310:	xor    dh,ah
  420312:	jg     0x4202d3
  420314:	shl    DWORD PTR [edx+0x79],cl
  420317:	div    DWORD PTR [edx]
  420319:	push   eax
  42031a:	lds    esp,FWORD PTR [edx]
  42031c:	stos   BYTE PTR es:[edi],al
  42031d:	sbb    al,0x8f
  42031f:	inc    BYTE PTR [ecx+0x332f5146]
  420325:	mov    ecx,0xd9f8f04c
  42032a:	jl     0x420345
  42032c:	ins    BYTE PTR es:[edi],dx
  42032d:	sahf   
  42032e:	mov    ebp,0x1ba824f1
  420333:	shr    DWORD PTR [ebx],cl
  420335:	bound  ebp,QWORD PTR [esi+0x1aa98830]
  42033b:	adc    eax,0xfa0467e0
  420340:	mov    esi,0x498dea6e
  420345:	retf   0x51d4
  420348:	pop    esi
  420349:	rcr    BYTE PTR [edx-0x2c],1
  42034c:	and    al,0x52
  42034e:	push   DWORD PTR [edx-0x2b]
  420351:	xlat   BYTE PTR ds:[ebx]
  420352:	hlt    
  420353:	and    eax,0x4c640610
  420358:	pop    eax
  420359:	jecxz  0x4203c1
  42035b:	test   eax,0xd0678b30
  420360:	nop
  420361:	dec    edi
  420362:	mov    esp,0x6bbf9c3c
  420367:	aaa    
  420368:	dec    ebx
  420369:	push   eax
  42036a:	lock adc al,0x9b
  42036d:	dec    edx
  42036e:	aam    0x35
  420370:	rep lods eax,DWORD PTR ds:[esi]
  420372:	lds    edx,FWORD PTR [ebx+0x5d]
  420375:	xchg   ebp,eax
  420376:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420377:	mov    bl,0x6a
  420379:	rcr    ecx,cl
  42037b:	fwait
  42037c:	ds dec ebp
  42037e:	mov    BYTE PTR [ebx],al
  420380:	pop    eax
  420381:	jmp    0x42036f
  420383:	add    BYTE PTR [ebx],ch
  420385:	xor    al,0x87
  420387:	idiv   DWORD PTR [ecx]
  420389:	rol    BYTE PTR [edi+0x57c81a50],1
  42038f:	or     ebp,edx
  420391:	hlt    
  420392:	in     eax,dx
  420393:	pop    es
  420394:	jecxz  0x420394
  420396:	lods   al,BYTE PTR cs:[esi]
  420398:	or     eax,0xfcd82145
  42039d:	aam    0x53
  42039f:	mov    dh,BYTE PTR ds:0xe8c77b77
  4203a5:	les    esi,FWORD PTR [ecx+eax*1+0x4e944b90]
  4203ac:	xor    al,0xa
  4203ae:	cld    
  4203af:	fst    QWORD PTR [esi]
  4203b1:	jo     0x420376
  4203b3:	mov    cx,0xe4ca
  4203b7:	adc    DWORD PTR [eax-0x6b],0xffffff91
  4203bb:	add    ecx,DWORD PTR ds:0x9f58e280
  4203c1:	and    esi,edi
  4203c3:	cmp    BYTE PTR [edx+edi*8],0xc0
  4203c7:	nop
  4203c8:	enter  0x66c7,0xbc
  4203cc:	mov    esi,0xbe34865c
  4203d1:	jae    0x42036c
  4203d3:	jne    0x420400
  4203d5:	sti    
  4203d6:	pushf  
  4203d7:	push   ebp
  4203d8:	(bad)  
  4203d9:	xchg   ebx,eax
  4203da:	lahf   
  4203db:	xchg   ebp,eax
  4203dc:	push   esi
  4203dd:	inc    esi
  4203de:	lods   eax,DWORD PTR ds:[esi]
  4203df:	mov    bh,0x9e
  4203e1:	push   ebp
  4203e2:	jb     0x420409
  4203e4:	arpl   WORD PTR [edx+0x79],ax
  4203e7:	inc    esp
  4203e8:	mov    edx,0x3639ac2c
  4203ed:	pop    eax
  4203ee:	cli    
  4203ef:	mov    al,0xf7
  4203f1:	rcl    DWORD PTR [ecx-0x45],1
  4203f4:	mov    BYTE PTR [edx],ah
  4203f6:	push   esp
  4203f7:	pusha  
  4203f8:	adc    BYTE PTR [esi+0x3],0xea
  4203fc:	and    BYTE PTR [ecx+0x7ce6b13c],ah
  420402:	adc    eax,0x8186166
  420407:	in     al,dx
  420408:	inc    ebp
  420409:	jns    0x4203f5
  42040b:	lea    edi,[esi+edi*4-0x6e673e27]
  420412:	and    bh,al
  420414:	xlat   BYTE PTR ds:[ebx]
  420415:	jge    0x420496
  420417:	xchg   esi,eax
  420418:	adc    BYTE PTR [edi-0x19],0x4f
  42041c:	enter  0x1e8f,0x4c
  420420:	jb     0x4203ef
  420422:	fstp   QWORD PTR [ebp-0xf]
  420425:	sysexit 
  420427:	sub    BYTE PTR [bx],cl
  42042a:	cmp    edx,ebx
  42042c:	pop    esi
  42042d:	xor    ebp,edx
  42042f:	pop    esi
  420430:	out    0x3,al
  420432:	loop   0x4203fc
  420434:	inc    edi
  420435:	add    DWORD PTR ds:0x1395fc2a,eax
  42043b:	shl    al,1
  42043d:	jecxz  0x42045e
  42043f:	enter  0xbf42,0x3a
  420443:	in     eax,0x23
  420445:	xor    edi,0x46e1572b
  42044b:	jge    0x4204c2
  42044d:	int3   
  42044e:	fcomp  DWORD PTR [edi+ecx*4-0x19]
  420452:	not    DWORD PTR [edx]
  420454:	rol    BYTE PTR [edi],cl
  420456:	dec    ebx
  420457:	xchg   BYTE PTR [ecx+0x65783fe0],bh
  42045d:	sub    DWORD PTR [eax+0x49],ebp
  420460:	xchg   esp,edx
  420462:	sub    BYTE PTR [edi-0x3bbb5b9c],dh
  420468:	cmp    al,0x54
  42046a:	popa   
  42046b:	js     0x4204c0
  42046d:	jnp    0x420460
  42046f:	xor    ebp,eax
  420471:	(bad)  
  420472:	cmp    BYTE PTR [eax+0x43b4d3dd],dl
  420478:	div    DWORD PTR [ebx-0x3d51415f]
  42047e:	pop    ds
  42047f:	inc    eax
  420480:	add    al,BYTE PTR [edi+0x3e]
  420483:	rcl    BYTE PTR [esi],cl
  420485:	fs and BYTE PTR ds:[ecx-0x6dff99f2],0xd
  42048e:	inc    eax
  42048f:	mov    ah,0xdf
  420491:	out    0x47,eax
  420493:	idiv   DWORD PTR [edx]
  420495:	cmp    bh,dl
  420497:	jb     0x4204d9
  420499:	sbb    BYTE PTR [edx-0x5b],ch
  42049c:	cwde   
  42049d:	loope  0x4204b9
  42049f:	xchg   edx,eax
  4204a0:	push   esp
  4204a1:	push   edx
  4204a2:	push   ss
  4204a3:	mov    ecx,0x229fa87b
  4204a8:	out    0x7,eax
  4204aa:	mov    esi,DWORD PTR [ebx+ebx*1]
  4204ad:	push   ecx
  4204ae:	jecxz  0x4204d7
  4204b0:	adc    ch,ch
  4204b2:	fdiv   QWORD PTR ds:0x85d2fe98
  4204b8:	fwait
  4204b9:	xchg   BYTE PTR [edi-0x66e9118f],bh
  4204bf:	int    0x93
  4204c1:	pushf  
  4204c2:	retf   0xcdd7
  4204c5:	or     eax,0xdf2986b1
  4204ca:	mov    esi,0x4191d584
  4204cf:	fadd   QWORD PTR [edx-0x6b]
  4204d2:	jge    0x42048e
  4204d4:	bnd ret 0xb499
  4204d8:	adc    eax,0x32794ca1
  4204dd:	rol    DWORD PTR [ecx-0x7e],1
  4204e0:	xor    eax,0x746f8b60
  4204e5:	pop    ds
  4204e6:	clc    
  4204e7:	cmp    ch,bl
  4204e9:	dec    edi
  4204ea:	pusha  
  4204eb:	and    DWORD PTR [esp+eax*1],edi
  4204ee:	ret    
  4204ef:	leave  
  4204f0:	inc    edi
  4204f1:	es mov ah,0xa0
  4204f4:	js     0x42055d
  4204f6:	mov    ss:0x5f18bc81,al
  4204fc:	push   eax
  4204fd:	mov    ecx,0x93514918
  420502:	or     eax,0x6ace66b8
  420507:	ja     0x420576
  420509:	jb     0x420562
  42050b:	cmc    
  42050c:	xchg   ebx,eax
  42050d:	ins    DWORD PTR es:[edi],dx
  42050e:	stos   BYTE PTR es:[edi],al
  42050f:	imul   ecx,DWORD PTR [ecx-0x73],0x5aa6167e
  420516:	mov    BYTE PTR [ebx-0x2b0d3851],dl
  42051c:	sub    eax,0x9d4b5e93
  420521:	loop   0x420593
  420523:	xchg   edx,eax
  420524:	pop    ecx
  420525:	scas   al,BYTE PTR es:[edi]
  420526:	enter  0xc78e,0xe2
  42052a:	push   ebx
  42052b:	sbb    eax,0x31bf9701
  420530:	xor    ebp,DWORD PTR [ebx+0x39ab6bf6]
  420536:	in     eax,0xa6
  420538:	not    BYTE PTR [edx+0xe]
  42053b:	mov    edi,DWORD PTR [ecx+0x21690983]
  420541:	xor    eax,0x67b6bc9f
  420546:	or     al,0xb
  420548:	jo     0x420513
  42054a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42054b:	clc    
  42054c:	xchg   ecx,eax
  42054d:	push   ebx
  42054e:	jmp    0x1c1520c
  420553:	mov    cl,BYTE PTR [eax+edi*2+0x229ee12e]
  42055a:	pop    edi
  42055b:	jle    0x4205d9
  42055d:	loope  0x42057b
  42055f:	push   cs
  420560:	(bad)  
  420561:	mov    cl,BYTE PTR ds:0xc13395aa
  420567:	sbb    esp,DWORD PTR [esi]
  420569:	pop    esp
  42056a:	push   ds
  42056b:	shl    BYTE PTR [esi-0x11fbcd51],0xee
  420572:	ror    DWORD PTR [edx],cl
  420574:	and    al,0xdb
  420576:	xlat   BYTE PTR ds:[ebx]
  420577:	xchg   DWORD PTR [eax+eax*4+0x42],esi
  42057b:	jge    0x42053a
  42057d:	dec    ebp
  42057e:	sbb    dh,BYTE PTR [esi]
  420580:	out    dx,eax
  420581:	jns    0x4205a3
  420583:	push   ds
  420584:	mov    ds:0x864abf39,eax
  420589:	push   ss
  42058a:	or     al,0x63
  42058c:	and    DWORD PTR [ebp+edx*2+0x5e585df8],ebx
  420593:	cli    
  420594:	mov    eax,ds:0xa0bf0921
  420599:	sub    eax,0x8aad356f
  42059e:	mov    eax,ds:0xb3ca1a5a
  4205a3:	fs pop ds
  4205a5:	dec    esp
  4205a6:	xchg   edx,eax
  4205a7:	dec    esp
  4205a8:	pop    esi
  4205a9:	mov    esi,0xba5a83b9
  4205ae:	popa   
  4205af:	ror    DWORD PTR [eax-0x48],0xe6
  4205b3:	jg     0x42058f
  4205b5:	lds    esp,FWORD PTR [edx+ebx*4-0x4c35ee02]
  4205bc:	loopne 0x4205e7
  4205be:	dec    ebp
  4205bf:	lods   al,BYTE PTR ds:[esi]
  4205c0:	xchg   esp,eax
  4205c1:	sub    BYTE PTR [esi-0x498fe0f3],ch
  4205c7:	jl     0x420629
  4205c9:	pop    edi
  4205ca:	jmp    0xd1e9:0x1ced1b8b
  4205d1:	inc    eax
  4205d2:	cwde   
  4205d3:	push   edx
  4205d4:	jmp    DWORD PTR [edx+0x3891fbd1]
  4205da:	nop
  4205db:	and    dh,BYTE PTR [edx]
  4205dd:	aas    
  4205de:	adc    al,0xab
  4205e0:	mov    al,ds:0x61a5962b
  4205e5:	push   ds
  4205e6:	add    DWORD PTR [edi-0x2e999551],ebp
  4205ec:	test   al,al
  4205ee:	repz imul esi,DWORD PTR cs:[ebx+0x22],0x41
  4205f4:	dec    ecx
  4205f5:	adc    ebx,DWORD PTR [ebx]
  4205f7:	(bad)  
  4205f8:	xchg   esp,eax
  4205f9:	not    DWORD PTR [esp+edx*1-0x4f865872]
  420600:	sti    
  420601:	push   0x38
  420603:	fdivr  st,st(0)
  420605:	xchg   edi,eax
  420606:	push   cs
  420607:	aad    0x5
  420609:	xlat   BYTE PTR ds:[ebx]
  42060a:	ret    
  42060b:	xchg   edx,eax
  42060c:	cmp    al,0xdf
  42060e:	push   es
  42060f:	sub    bh,ah
  420611:	data16 rcl BYTE PTR [eax+0x3c],1
  420615:	loopne 0x42060e
  420617:	adc    DWORD PTR [edx+0x74],eax
  42061a:	dec    esi
  42061b:	pop    ebp
  42061c:	inc    eax
  42061d:	call   0x82dd2a3e
  420622:	pop    ecx
  420623:	lahf   
  420624:	mov    al,0x1b
  420626:	mov    bh,bl
  420628:	fbstp  TBYTE PTR [ebx-0x41]
  42062b:	cmc    
  42062c:	imul   edx,DWORD PTR [edx-0x18f5da7f],0xffffffa1
  420633:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420634:	inc    esi
  420635:	icebp  
  420636:	cs repz addr16 ret 0x9896
  42063c:	push   0xffffff95
  42063e:	scas   al,BYTE PTR es:[edi]
  42063f:	mov    ecx,0x2bd5ff8a
  420644:	sahf   
  420645:	retf   0x3872
  420648:	imul   edi,ebx,0xf0ef4f5a
  42064e:	loop   0x42061c
  420650:	dec    ebx
  420651:	aad    0xde
  420653:	dec    esp
  420654:	and    ebp,esp
  420656:	fisubr WORD PTR [edi-0x5d]
  420659:	aad    0x69
  42065b:	rcl    ebp,0x53
  42065e:	mov    ds:0x9c1b3eae,al
  420663:	dec    ecx
  420664:	adc    al,0x8
  420666:	retf   
  420667:	push   ebx
  420668:	cmp    ebp,eax
  42066a:	mov    edi,0xc46bafe2
  42066f:	jg     0x420652
  420671:	daa    
  420672:	std    
  420673:	adc    bh,BYTE PTR [esi-0x5b]
  420676:	out    0x92,al
  420678:	nop
  420679:	aam    0xf8
  42067b:	hlt    
  42067c:	int3   
  42067d:	call   0xe2e4:0x3a67587b
  420684:	mov    cl,0x43
  420686:	das    
  420687:	xchg   DWORD PTR [ebx-0x2d1073b5],esi
  42068d:	pop    esi
  42068e:	std    
  42068f:	imul   edx,eax,0xf5dfae22
  420695:	imul   edx,DWORD PTR ss:[edx],0x5c
  420699:	mov    ds:0xe91ed69,eax
  42069e:	stos   DWORD PTR es:[edi],eax
  42069f:	mov    al,al
  4206a1:	aaa    
  4206a2:	sbb    eax,0x3aa673dd
  4206a7:	xor    dh,dl
  4206a9:	shr    edx,0x1e
  4206ac:	xchg   esi,eax
  4206ad:	mov    ebx,0xee4808dc
  4206b2:	mov    edi,0x5232fb00
  4206b7:	cmp    al,0x16
  4206b9:	push   ss
  4206ba:	add    BYTE PTR [ebp-0x63],al
  4206bd:	rol    BYTE PTR [ecx],cl
  4206bf:	push   eax
  4206c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4206c1:	ret    
  4206c2:	jecxz  0x42064a
  4206c4:	mov    edx,0xce477c16
  4206c9:	push   edx
  4206ca:	ins    BYTE PTR es:[edi],dx
  4206cb:	loope  0x420727
  4206cd:	mov    BYTE PTR [edx+0x63cee04],ch
  4206d3:	xchg   ecx,eax
  4206d4:	dec    ebx
  4206d5:	or     eax,0xf673d03a
  4206da:	(bad)  
  4206db:	iret   
  4206dc:	mov    eax,0x5e44f144
  4206e1:	iret   
  4206e2:	fnstenv [eax-0x1f]
  4206e5:	sbb    BYTE PTR [ebp+0x6b],dh
  4206e8:	gs jae 0x42066e
  4206eb:	icebp  
  4206ec:	push   ebp
  4206ed:	outs   dx,DWORD PTR ds:[esi]
  4206ee:	mov    ds:0xf34db1ad,eax
  4206f3:	adc    al,0x7c
  4206f5:	mov    bl,0x6f
  4206f7:	sbb    ebp,0x6f24d6df
  4206fd:	cvtdq2ps xmm6,XMMWORD PTR [edx-0x4b]
  420701:	mov    dl,0x3f
  420703:	js     0x420751
  420705:	fwait
  420706:	mov    esi,0x161af27a
  42070b:	pop    ecx
  42070c:	mov    ebx,DWORD PTR [ebx]
  42070e:	mov    BYTE PTR [esi],cl
  420710:	imul   ecx,DWORD PTR [edi],0xffffffdf
  420713:	mov    BYTE PTR [edi],ah
  420715:	cmp    eax,0x6657083f
  42071a:	pop    ebx
  42071b:	lods   al,BYTE PTR ds:[esi]
  42071c:	loop   0x4206fc
  42071e:	mov    edi,0x7ae62f6a
  420723:	pop    ebx
  420724:	out    0xc,al
  420726:	mov    ebx,0x95ca5a9a
  42072b:	outs   dx,BYTE PTR ds:[esi]
  42072c:	mov    dl,0xfa
  42072e:	fisubr WORD PTR [eax+0x22322a85]
  420734:	xchg   esi,eax
  420735:	add    bl,BYTE PTR [ebp+0x4d]
  420738:	ret    0x6052
  42073b:	inc    edx
  42073c:	rcl    DWORD PTR [eax-0x1],cl
  42073f:	and    BYTE PTR [esi],bh
  420741:	and    dl,ch
  420743:	pop    ss
  420744:	call   0x9554b5f4
  420749:	mov    ebx,0x15b1aa3
  42074e:	cmp    dl,BYTE PTR [edi-0x68535dd3]
  420754:	pop    ebp
  420755:	lds    edi,FWORD PTR [esi+0x2c]
  420758:	mov    edx,0x9a672024
  42075d:	popa   
  42075e:	scas   eax,DWORD PTR es:[edi]
  42075f:	stos   DWORD PTR es:[edi],eax
  420760:	push   0x301dd256
  420765:	pop    ss
  420766:	retf   0x3e77
  420769:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42076a:	xchg   edx,eax
  42076b:	mov    edx,0x5d6e7041
  420770:	sub    ch,bh
  420772:	push   0xb375512
  420777:	mov    ds:0x9a30b598,eax
  42077c:	pop    esi
  42077d:	shr    DWORD PTR [esi+0x18c5d89f],cl
  420783:	push   eax
  420784:	sub    BYTE PTR [edx+0x3e938043],bh
  42078a:	add    edx,esi
  42078c:	outs   dx,DWORD PTR ds:[esi]
  42078d:	cmp    eax,0x7f837ca0
  420792:	repnz test eax,esi
  420795:	lds    edi,FWORD PTR [edx]
  420797:	push   esi
  420798:	cdq    
  420799:	ret    
  42079a:	xchg   edx,eax
  42079b:	test   DWORD PTR [esi+0x37ffc1ef],ebx
  4207a1:	cli    
  4207a2:	sub    al,0xbd
  4207a4:	sbb    al,0x9
  4207a6:	mov    BYTE PTR [esi],ah
  4207a8:	dec    esp
  4207a9:	dec    ecx
  4207aa:	add    DWORD PTR [edx+0x14355926],eax
  4207b0:	mov    cs,WORD PTR [esi]
  4207b2:	dec    edi
  4207b3:	mov    DWORD PTR [ebp-0x56a9118d],esi
  4207b9:	clc    
  4207ba:	test   al,0x2e
  4207bc:	and    al,0xbd
  4207be:	repz or DWORD PTR [eax-0x5191fdba],0xfffffff3
  4207c6:	sbb    ah,BYTE PTR [eax+0x31befab6]
  4207cc:	test   BYTE PTR [esi],ah
  4207ce:	cmp    al,0x60
  4207d0:	sub    eax,0xac2b84b1
  4207d5:	push   ds
  4207d6:	lock or ebx,DWORD PTR [edi-0x633b2864]
  4207dd:	push   edi
  4207de:	cmp    eax,0xd7bd3290
  4207e3:	mov    ch,0xfc
  4207e5:	cld    
  4207e6:	ret    
  4207e7:	xor    ch,ah
  4207e9:	mov    al,ds:0xcad95cd9
  4207ee:	pop    eax
  4207ef:	cmc    
  4207f0:	xchg   ecx,eax
  4207f1:	ret    
  4207f2:	xor    DWORD PTR [edx+edi*1-0x65],ebx
  4207f6:	xchg   DWORD PTR [ebx],ebx
  4207f8:	dec    ecx
  4207f9:	loope  0x4207bf
  4207fb:	push   esi
  4207fc:	or     eax,0x2e868af6
  420801:	mov    ecx,0x8ab76d1e
  420806:	inc    esi
  420807:	ds loope 0x420791
  42080a:	adc    edi,DWORD PTR [eax]
  42080c:	mov    cl,0x8b
  42080e:	jp     0x4207e9
  420810:	outs   dx,DWORD PTR ds:[esi]
  420811:	les    esp,FWORD PTR [ecx-0x1ecda94b]
  420817:	sbb    dl,BYTE PTR [eax]
  420819:	jb     0x4207c2
  42081b:	repz or ecx,DWORD PTR [edx-0x2f2e378a]
  420822:	inc    ebx
  420823:	cdq    
  420824:	adc    bl,BYTE PTR [ebx-0x31]
  420827:	inc    ecx
  420828:	sub    ecx,esi
  42082a:	dec    esp
  42082b:	cwde   
  42082c:	mov    ebp,0x927a475a
  420831:	adc    BYTE PTR [edx+0x6],ch
  420834:	push   ebx
  420835:	push   eax
  420836:	adc    cl,ah
  420838:	push   ds
  420839:	mov    ebp,0xfe14dc21
  42083e:	(bad)  
  42083f:	pop    ecx
  420840:	mov    eax,ds:0xebc18ab5
  420845:	stc    
  420846:	mov    dh,0x5a
  420848:	pop    eax
  420849:	push   cs
  42084a:	inc    ebp
  42084b:	xor    BYTE PTR [ecx+0x5b],al
  42084e:	rcr    BYTE PTR ds:[edx+edx*4-0x2198c1d0],1
  420856:	stc    
  420857:	sbb    eax,0x9915b160
  42085c:	(bad)  
  42085d:	add    al,BYTE PTR [edi-0x6c51661a]
  420863:	(bad)  
  420864:	xor    ebp,esi
  420866:	mov    cl,0x9b
  420868:	dec    esp
  420869:	mov    bl,0x1c
  42086b:	sub    al,0xed
  42086d:	int    0x15
  42086f:	xchg   ebp,eax
  420870:	jae    0x420896
  420872:	stos   BYTE PTR es:[edi],al
  420873:	(bad)  
  420874:	sahf   
  420875:	mov    ch,0x3f
  420877:	imul   BYTE PTR [esi]
  420879:	test   BYTE PTR [ebp-0x44],cl
  42087c:	inc    eax
  42087d:	ds in  al,0xe3
  420880:	aaa    
  420881:	jge    0x42083d
  420883:	in     eax,0x79
  420885:	(bad)  
  420886:	dec    edi
  420887:	or     cl,BYTE PTR [esp+ebp*1-0x22]
  42088b:	dec    eax
  42088c:	xchg   esp,eax
  42088d:	sub    eax,0xb6bfbcdc
  420892:	and    DWORD PTR [ebx],edx
  420894:	rcl    DWORD PTR [edi-0x48],1
  420897:	xor    cl,BYTE PTR [eax+0xc]
  42089a:	outs   dx,BYTE PTR ds:[esi]
  42089b:	xchg   DWORD PTR [ebp-0x50],eax
  42089e:	sahf   
  42089f:	pop    esp
  4208a0:	cmp    DWORD PTR [eax-0x674aea08],edi
  4208a6:	mov    dh,0x95
  4208a8:	int    0x23
  4208aa:	dec    ebx
  4208ab:	push   0xa
  4208ad:	stos   DWORD PTR es:[edi],eax
  4208ae:	out    0xf8,al
  4208b0:	aad    0x24
  4208b2:	pop    es
  4208b3:	or     eax,0x6fdfbb37
  4208b8:	ins    DWORD PTR es:[edi],dx
  4208b9:	icebp  
  4208ba:	xlat   BYTE PTR ds:[ebx]
  4208bb:	mov    ds:0x532c82ca,al
  4208c0:	retf   
  4208c1:	jecxz  0x4208c6
  4208c3:	in     eax,dx
  4208c4:	scas   eax,DWORD PTR es:[edi]
  4208c5:	and    bl,bh
  4208c7:	jle    0x4208e5
  4208c9:	and    ebp,DWORD PTR ds:0x86766c16
  4208cf:	out    0x3d,al
  4208d1:	mov    ds:0xe325ae,eax
  4208d6:	xor    eax,0x74cb6537
  4208db:	leave  
  4208dc:	push   ebp
  4208dd:	ds pop ebx
  4208df:	sub    al,0xaa
  4208e1:	scas   eax,DWORD PTR es:[edi]
  4208e2:	pushf  
  4208e3:	xor    dh,al
  4208e5:	fadd   DWORD PTR [ebx+0x693cc2f8]
  4208eb:	sti    
  4208ec:	mov    ecx,0xac23ec5b
  4208f1:	ja     0x420951
  4208f3:	fnstsw WORD PTR [ecx]
  4208f5:	icebp  
  4208f6:	aam    0xda
  4208f8:	jle    0x4208f1
  4208fa:	pop    eax
  4208fb:	push   ss
  4208fc:	mov    esp,0xc579e530
  420901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420902:	pop    edi
  420903:	or     dh,bl
  420905:	jp     0x4208e8
  420907:	jno    0x420988
  420909:	add    al,0x48
  42090b:	mov    ch,0xcc
  42090d:	call   0xf2f7a1b3
  420912:	(bad)  
  420913:	add    al,0xaa
  420915:	sbb    BYTE PTR [esi],cl
  420917:	sub    eax,DWORD PTR [edx+0x5a]
  42091a:	or     DWORD PTR [eax+0x2e],0xffffffa2
  42091e:	(bad)  
  42091f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420920:	add    ah,dh
  420922:	sub    eax,ecx
  420924:	mov    cl,0xc0
  420926:	retf   0x9e48
  420929:	js     0x4208ec
  42092b:	mov    al,0xca
  42092d:	scas   eax,DWORD PTR es:[edi]
  42092e:	iret   
  42092f:	push   ds
  420930:	dec    esi
  420931:	ins    DWORD PTR es:[edi],dx
  420932:	sub    BYTE PTR [esi-0x5271616c],0x0
  420939:	dec    ecx
  42093a:	hlt    
  42093b:	fnsave [edi]
  42093d:	(bad)  
  42093e:	out    dx,eax
  42093f:	in     eax,0x8a
  420941:	not    DWORD PTR [esp+ebx*1+0x31479183]
  420948:	cld    
  420949:	adc    eax,0xc280bb4a
  42094e:	xchg   bh,bh
  420950:	ret    
  420951:	mov    bl,0x3d
  420953:	xor    bh,BYTE PTR [eax-0x22]
  420956:	or     dh,ch
  420958:	ja     0x42093b
  42095a:	lea    esi,[esi]
  42095c:	xor    ebx,DWORD PTR [ebx]
  42095e:	into   
  42095f:	sbb    al,0x5a
  420961:	xchg   dl,dh
  420963:	sbb    ebp,DWORD PTR [edi]
  420965:	pop    es
  420966:	jmp    0xc56a:0x9226f866
  42096d:	add    BYTE PTR [edi+ecx*1+0x12b5ad8b],ah
  420974:	jnp    0x4209a2
  420976:	idiv   ah
  420978:	adc    eax,0x8719fe89
  42097d:	sub    ecx,ecx
  42097f:	mov    eax,DWORD PTR [esp+esi*4+0x6a]
  420983:	jb     0x42093f
  420985:	add    eax,0x61d39a0d
  42098a:	in     eax,0x16
  42098c:	imul   DWORD PTR [edi-0x33]
  42098f:	iret   
  420990:	ficomp DWORD PTR [ebx+0x14ac60ca]
  420996:	add    eax,0x9d5b7be5
  42099b:	push   esi
  42099c:	add    eax,0x41233e8f
  4209a1:	xchg   esi,eax
  4209a2:	and    cl,BYTE PTR [ecx]
  4209a4:	pusha  
  4209a5:	xlat   BYTE PTR ds:[ebx]
  4209a6:	bound  ebp,QWORD PTR ds:0xab417dd5
  4209ac:	fidiv  DWORD PTR [eax]
  4209ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4209af:	std    
  4209b0:	(bad)  
  4209b1:	mov    edx,0x6608ea9
  4209b6:	inc    ebx
  4209b7:	sub    al,0x7c
  4209b9:	enter  0xf691,0x9a
  4209bd:	es jo  0x4209b5
  4209c0:	shl    DWORD PTR [edi],0x82
  4209c3:	je     0x42095c
  4209c5:	lds    ebx,FWORD PTR [eax+0x794fcd53]
  4209cb:	cld    
  4209cc:	push   edi
  4209cd:	xor    ecx,DWORD PTR [esi+0x7a36bf80]
  4209d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209d4:	dec    edi
  4209d5:	mov    eax,ds:0x43714709
  4209da:	neg    DWORD PTR ds:0xaa72f5ab
  4209e0:	add    al,0xec
  4209e2:	mov    DWORD PTR [eax+0x70],0xeaed541f
  4209e9:	mov    WORD PTR [ecx-0x12],ds
  4209ec:	inc    eax
  4209ed:	mov    dh,0x92
  4209ef:	jae    0x4209ef
  4209f1:	lods   eax,DWORD PTR ds:[esi]
  4209f2:	dec    ebx
  4209f3:	gs jl  0x420981
  4209f6:	out    dx,eax
  4209f7:	jg     0x420a39
  4209f9:	es fs int 0x19
  4209fd:	ja     0x420a7d
  4209ff:	into   
  420a00:	adc    BYTE PTR [esi+0x4771a841],bl
  420a06:	retf   
  420a07:	xor    al,0xf7
  420a09:	pop    esp
  420a0a:	mov    ss,WORD PTR [esi-0x455c366b]
  420a10:	push   edx
  420a11:	mov    ecx,0x3cae15cb
  420a16:	adc    eax,0x5b366c5d
  420a1b:	cmp    esp,ebx
  420a1d:	daa    
  420a1e:	jo     0x420a4e
  420a20:	or     eax,0x16c5ef42
  420a25:	pop    edx
  420a26:	stos   BYTE PTR es:[edi],al
  420a27:	mov    bh,BYTE PTR [esi+0x74648d6b]
  420a2d:	pop    ecx
  420a2e:	xor    esp,eax
  420a30:	push   ebx
  420a31:	(bad)  
  420a33:	jg     0x420a56
  420a35:	cmc    
  420a36:	add    esp,DWORD PTR [eax+0x52]
  420a39:	stos   BYTE PTR es:[edi],al
  420a3a:	dec    ebx
  420a3b:	jg     0x4209cb
  420a3d:	xchg   ebp,eax
  420a3e:	dec    eax
  420a3f:	(bad)  
  420a40:	retf   0x134b
  420a43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a44:	jge    0x420a88
  420a46:	sbb    DWORD PTR [esi],ebp
  420a48:	push   edx
  420a49:	fdiv   DWORD PTR [esi]
  420a4b:	cmp    eax,0x4767a5f7
  420a50:	sub    eax,0x5546997
  420a55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420a56:	push   ss
  420a57:	fidiv  DWORD PTR [eax+0x386512c2]
  420a5d:	xlat   BYTE PTR ds:[ebx]
  420a5e:	adc    BYTE PTR [edx+0x797622ed],ah
  420a64:	push   esi
  420a65:	neg    edx
  420a67:	imul   eax,DWORD PTR [ecx-0xf],0x7d
  420a6b:	mov    edx,0xacdb7848
  420a70:	test   ebp,0x3f267bf4
  420a76:	jmp    0xac30:0x6357b4d7
  420a7d:	cmp    ah,ah
  420a7f:	lahf   
  420a80:	paddb  mm4,QWORD PTR ds:0x17af09af
  420a87:	push   0x848c2e92
  420a8c:	pop    esp
  420a8d:	adc    al,0x35
  420a8f:	jmp    0x420a71
  420a91:	(bad)  
  420a92:	fmul   DWORD PTR ds:0x6affea90
  420a98:	out    0x81,al
  420a9a:	(bad)  
  420a9b:	cwde   
  420a9c:	fstp   DWORD PTR [edi+0x37]
  420a9f:	mov    ds:0x1eef1578,eax
  420aa4:	fwait
  420aa5:	aaa    
  420aa6:	pop    ecx
  420aa7:	mov    esp,0x8edb91fc
  420aac:	jmp    0x420ab6
  420aae:	and    eax,0xfcb4f502
  420ab3:	shl    DWORD PTR [edx-0xa685c10],cl
  420ab9:	fcomp  QWORD PTR [eax-0x58ddd3e]
  420abf:	cld    
  420ac0:	cmp    eax,0xb4cfdf0c
  420ac5:	scas   al,BYTE PTR es:[edi]
  420ac6:	call   0xd913:0xbc627147
  420acd:	inc    ecx
  420ace:	xchg   edi,eax
  420acf:	adc    bl,BYTE PTR [ebx-0x31]
  420ad2:	mov    dh,0x1f
  420ad4:	fild   QWORD PTR [edi-0x39]
  420ad7:	mov    ds:0x384b273f,al
  420adc:	mov    cl,0x47
  420ade:	jmp    0x6b40:0x7cc55918
  420ae5:	sbb    al,0xf8
  420ae7:	adc    DWORD PTR [esi+esi*8-0x3b],esp
  420aeb:	mov    cl,0x9e
  420aed:	scas   eax,DWORD PTR es:[edi]
  420aee:	dec    ebp
  420aef:	adc    DWORD PTR [ecx+0x1],esi
  420af2:	fistp  QWORD PTR [edx-0x3c]
  420af5:	push   es
  420af6:	lods   al,BYTE PTR ds:[esi]
  420af7:	pop    edi
  420af8:	jo     0x420a93
  420afa:	add    DWORD PTR [eax+0x5e1e41d2],ecx
  420b00:	arpl   WORD PTR [eax],ax
  420b02:	or     dh,bl
  420b04:	and    DWORD PTR [ecx],eax
  420b06:	test   DWORD PTR ds:0x3ce23084,ebp
  420b0c:	mov    eax,0xf3401bbf
  420b11:	scas   eax,DWORD PTR es:[edi]
  420b12:	mov    BYTE PTR [edx-0x1b],dl
  420b15:	xchg   esp,eax
  420b16:	mov    cl,0xfb
  420b18:	ins    BYTE PTR es:[edi],dx
  420b19:	push   edi
  420b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b1b:	or     edx,DWORD PTR [ebx]
  420b1d:	clc    
  420b1e:	xchg   dl,ah
  420b20:	push   esp
  420b21:	or     al,0xc0
  420b23:	sbb    ecx,DWORD PTR [eax]
  420b25:	sub    al,0xde
  420b27:	xor    BYTE PTR [ecx],cl
  420b29:	jge    0x420b46
  420b2b:	fisubr DWORD PTR [edx+0x47]
  420b2e:	or     eax,0x6f1f7ef2
  420b33:	inc    ebx
  420b34:	ins    BYTE PTR es:[edi],dx
  420b35:	jle    0x420abb
  420b37:	push   ebp
  420b38:	adc    BYTE PTR [edi],al
  420b3a:	push   ebp
  420b3b:	or     bh,BYTE PTR [esi]
  420b3d:	out    0xaa,al
  420b3f:	call   0xf2b915d9
  420b44:	in     eax,dx
  420b45:	or     DWORD PTR [edi+0x3],esi
  420b48:	sub    ebx,eax
  420b4a:	pop    ss
  420b4b:	ror    BYTE PTR [ebp-0x5d],0x27
  420b4f:	mov    ebx,0x7a0806bb
  420b54:	jo     0x420b52
  420b56:	push   es
  420b57:	ret    0xa03e
  420b5a:	or     DWORD PTR [ebp+0x74],ebx
  420b5d:	adc    dh,BYTE PTR [ebp-0x6f312f05]
  420b63:	and    edx,edx
  420b65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b66:	push   eax
  420b67:	pop    es
  420b68:	ffree  st(7)
  420b6a:	push   0x800014bd
  420b6f:	outs   dx,DWORD PTR ds:[esi]
  420b70:	xchg   edi,eax
  420b71:	mov    ah,0x89
  420b73:	sar    DWORD PTR [ebp-0x62fa97f],cl
  420b79:	jbe    0x420b62
  420b7b:	sbb    dh,ah
  420b7d:	hlt    
  420b7e:	and    cl,ah
  420b80:	imul   BYTE PTR [ebp+0x32]
  420b83:	loopne 0x420b0b
  420b85:	jbe    0x420bc1
  420b87:	push   es
  420b88:	ret    0x4e83
  420b8b:	add    DWORD PTR [ecx-0x6084e91f],edi
  420b91:	mov    WORD PTR [edi],ds
  420b93:	popa   
  420b94:	sbb    DWORD PTR [ecx],0xb6b86727
  420b9a:	sbb    al,0xa9
  420b9c:	adc    DWORD PTR [ebx+0x73],ecx
  420b9f:	push   0xffffffd5
  420ba1:	mov    dh,0xbb
  420ba3:	xchg   esi,eax
  420ba4:	test   DWORD PTR [eax],eax
  420ba6:	cld    
  420ba7:	push   eax
  420ba8:	pop    ebx
  420ba9:	jl     0x420c02
  420bab:	xchg   edi,eax
  420bac:	jnp    0x420bc8
  420bae:	cmp    al,0xce
  420bb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bb1:	jne    0x420c15
  420bb3:	mov    ds,esp
  420bb5:	mov    ebp,0x743ad02f
  420bba:	mov    al,BYTE PTR [ecx+0xb]
  420bbd:	test   DWORD PTR [edx],0xd1071a28
  420bc3:	outs   dx,BYTE PTR ds:[esi]
  420bc4:	sahf   
  420bc5:	cld    
  420bc6:	popa   
  420bc7:	mov    eax,DWORD PTR [ebx]
  420bc9:	xor    cl,ah
  420bcb:	and    eax,DWORD PTR [ebx+0x778bb6b1]
  420bd1:	and    eax,0x696b9478
  420bd6:	out    0x35,eax
  420bd8:	xchg   edx,eax
  420bd9:	addr16 cli 
  420bdb:	mov    WORD PTR [ecx+0x499fb4b1],?
  420be1:	pop    eax
  420be2:	in     al,dx
  420be3:	loopne 0x420c52
  420be5:	(bad)  
  420be6:	mov    WORD PTR ds:0x869c156a,fs
  420bec:	ror    BYTE PTR [ebp-0x3b],cl
  420bef:	add    eax,0xecedd9be
  420bf4:	xchg   esp,eax
  420bf5:	and    esi,DWORD PTR ds:0xe520f453
  420bfb:	push   es
  420bfc:	add    ebp,DWORD PTR [ebx]
  420bfe:	sbb    al,0xb0
  420c00:	jge    0x420c41
  420c02:	in     eax,dx
  420c03:	mov    WORD PTR [eax-0x31],?
  420c06:	in     al,dx
  420c07:	jo     0x420c54
  420c09:	xor    BYTE PTR [ebp-0x3a09f3bf],bh
  420c0f:	mov    edi,0x86779268
  420c14:	xchg   esi,eax
  420c15:	inc    ecx
  420c16:	xor    cl,BYTE PTR [esi]
  420c18:	iret   
  420c19:	cmp    eax,0xb6ea386f
  420c1e:	adc    dl,dl
  420c20:	add    DWORD PTR [eax+0x7baba293],ebp
  420c26:	scas   al,BYTE PTR es:[edi]
  420c27:	sbb    ebx,DWORD PTR [ecx+0x477498d4]
  420c2d:	push   ds
  420c2e:	mov    cl,0x64
  420c30:	mov    ebp,0xc996243c
  420c35:	int    0x55
  420c37:	lea    ebp,[edx]
  420c39:	xchg   esp,eax
  420c3a:	or     esi,ecx
  420c3c:	neg    DWORD PTR [edx]
  420c3e:	cmp    eax,0x6cabcd03
  420c43:	loop   0x420be5
  420c45:	jbe    0x420cba
  420c47:	sbb    eax,0xe8c45a9a
  420c4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c4d:	fadd   DWORD PTR [edi-0x414c9ed5]
  420c53:	push   edx
  420c54:	sbb    edx,DWORD PTR [edx+0x44]
  420c57:	popa   
  420c58:	xor    ebx,esp
  420c5a:	mov    al,0x62
  420c5c:	aaa    
  420c5d:	dec    edx
  420c5e:	sub    bl,cl
  420c60:	data16 std 
  420c62:	pop    edx
  420c63:	cmp    edi,DWORD PTR [ebx]
  420c65:	xchg   esi,eax
  420c66:	jmp    0x834d13dd
  420c6b:	sub    al,0x3c
  420c6d:	dec    eax
  420c6e:	pop    es
  420c6f:	dec    ecx
  420c70:	inc    eax
  420c71:	jnp    0x420c47
  420c73:	out    dx,eax
  420c74:	mov    ebx,DWORD PTR [edx-0x6dcf2f73]
  420c7a:	push   esp
  420c7b:	sar    esi,1
  420c7d:	pop    edi
  420c7e:	sar    DWORD PTR [edx-0x58],cl
  420c81:	lock loop 0x420c8c
  420c84:	mov    ds:0xfb04b780,eax
  420c89:	mov    edi,0x528d6bd1
  420c8e:	push   eax
  420c8f:	dec    eax
  420c90:	sub    ch,BYTE PTR [eax-0x22298c26]
  420c96:	sub    cl,bh
  420c98:	push   edx
  420c99:	loopne 0x420c9d
  420c9b:	popa   
  420c9c:	or     esp,DWORD PTR [esi]
  420c9e:	in     al,dx
  420c9f:	retf   
  420ca0:	mov    bl,0x15
  420ca2:	mov    ah,0x48
  420ca4:	into   
  420ca5:	add    BYTE PTR [eax-0x80],dl
  420ca8:	fild   WORD PTR [ebx+eax*1+0x24]
  420cac:	out    dx,al
  420cad:	xchg   ebx,eax
  420cae:	(bad)  
  420caf:	and    eax,0x3370f0fc
  420cb4:	iret   
  420cb5:	jle    0x420cb4
  420cb7:	xor    eax,0xd29eddd0
  420cbc:	ror    DWORD PTR [ecx],1
  420cbe:	sti    
  420cbf:	repz mov ecx,0x7a81a2c7
  420cc5:	jo     0x420c66
  420cc7:	fmul   QWORD PTR [ecx+0x10]
  420cca:	push   ebx
  420ccb:	mov    al,ds:0x3e2ee0
  420cd0:	mov    al,0xd2
  420cd2:	pop    ss
  420cd3:	into   
  420cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cd5:	mov    eax,0xc064ed64
  420cda:	push   eax
  420cdb:	fisttp QWORD PTR [ebx+ebp*2]
  420cde:	outs   dx,DWORD PTR ds:[esi]
  420ce0:	mov    ebx,0xd6a9909a
  420ce5:	mov    al,0x2e
  420ce7:	add    bh,cl
  420ce9:	cmp    eax,0xbd53d0fa
  420cee:	lds    eax,FWORD PTR [eax-0x79a7a7cc]
  420cf4:	arpl   WORD PTR [edi+ebp*8-0x491bef2d],bp
  420cfb:	jno    0x420cfa
  420cfd:	xchg   bl,al
  420cff:	pop    edx
  420d00:	sbb    bl,BYTE PTR [ebx-0xa]
  420d03:	push   esi
  420d04:	cmp    dh,BYTE PTR [esi+0x1dd72ac9]
  420d0a:	xchg   ecx,eax
  420d0b:	and    al,0x2
  420d0d:	jae    0x420d28
  420d0f:	ja     0x420ced
  420d11:	jp     0x420d1e
  420d13:	enter  0x93bb,0x1e
  420d17:	daa    
  420d18:	jmp    0x420d39
  420d1a:	cmp    bl,BYTE PTR [esi+0x66]
  420d1d:	xchg   DWORD PTR [edi+0x18c07169],edi
  420d23:	cmp    edi,ebp
  420d25:	call   ebp
  420d27:	xor    BYTE PTR [ecx-0x4e8ac17d],cl
  420d2d:	xor    eax,0xe95ff001
  420d32:	inc    esp
  420d33:	lods   eax,DWORD PTR ds:[esi]
  420d34:	dec    esp
  420d35:	jae    0x420cdc
  420d37:	inc    ebx
  420d38:	push   edx
  420d39:	xchg   ebx,eax
  420d3a:	mov    eax,ds:0x235104eb
  420d3f:	sahf   
  420d40:	dec    ebp
  420d41:	nop    DWORD PTR [esi-0x5dedb371]
  420d48:	dec    ebx
  420d49:	call   0xc588:0xb39308df
  420d50:	add    eax,0x2b50182f
  420d55:	push   esi
  420d56:	push   ebp
  420d57:	adc    BYTE PTR [ebp+ebp*8-0xcfffde2],ah
  420d5e:	test   al,0xa3
  420d60:	js     0x420db2
  420d62:	and    DWORD PTR [ecx+0x2cb28f54],esp
  420d68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d69:	cmp    ch,bl
  420d6b:	cs sbb eax,0x19ed8819
  420d71:	jp     0x420d14
  420d73:	(bad)  
  420d74:	loopne 0x420d38
  420d76:	test   DWORD PTR [ebp-0x1d],eax
  420d79:	inc    edi
  420d7a:	sub    ebx,DWORD PTR [edx-0x5f307839]
  420d80:	pop    ds
  420d81:	or     al,0x3
  420d83:	in     eax,dx
  420d84:	or     al,0xf4
  420d86:	cli    
  420d87:	gs add al,0xc
  420d8a:	leave  
  420d8b:	lahf   
  420d8c:	or     al,0x57
  420d8e:	xchg   edx,eax
  420d8f:	sub    eax,DWORD PTR [ebp+0x53]
  420d92:	pop    ds
  420d93:	mov    bl,BYTE PTR [edx]
  420d95:	stc    
  420d96:	mov    edx,0xdddfcd90
  420d9b:	int    0xe9
  420d9d:	xor    DWORD PTR [ecx+ecx*1],ecx
  420da0:	stos   BYTE PTR es:[edi],al
  420da1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420da2:	lods   al,BYTE PTR ds:[esi]
  420da3:	and    DWORD PTR [edi],esi
  420da5:	xchg   esp,eax
  420da6:	xchg   edx,eax
  420da7:	femms  
  420da9:	mov    dl,0x6
  420dab:	out    0xdf,al
  420dad:	loope  0x420dd5
  420daf:	xchg   edx,eax
  420db0:	es pop ebx
  420db2:	scas   eax,DWORD PTR es:[edi]
  420db3:	stc    
  420db4:	push   ss
  420db5:	(bad)  
  420db6:	mov    eax,0x20d2e6d6
  420dbb:	sub    BYTE PTR [esi-0x21b65d78],dh
  420dc1:	push   es
  420dc2:	mov    bl,0xf1
  420dc4:	stos   DWORD PTR es:[edi],eax
  420dc5:	xor    esi,DWORD PTR [esi-0x4b]
  420dc8:	xor    DWORD PTR [edi+0x3],0xffffff84
  420dcc:	pop    ecx
  420dcd:	and    DWORD PTR [edi-0x4e],0xe0ec147a
  420dd4:	(bad)  
  420dd5:	lds    eax,FWORD PTR [ebx-0x1971ae0d]
  420ddb:	call   0xbf4:0x3a186b7d
  420de2:	jno    0x420dee
  420de4:	stos   DWORD PTR es:[edi],eax
  420de5:	repz adc al,0x25
  420de8:	test   BYTE PTR [ecx],ch
  420dea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420deb:	int    0x37
  420ded:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420dee:	sahf   
  420def:	ins    BYTE PTR es:[edi],dx
  420df0:	dec    esi
  420df1:	imul   edx,DWORD PTR [edi-0x11cac83],0x815d4b3d
  420dfb:	test   eax,0x66540e3b
  420e00:	popf   
  420e01:	mov    ss,WORD PTR [ecx-0x1031631b]
  420e07:	add    BYTE PTR [edx+0x17],al
  420e0a:	or     DWORD PTR [edi-0x4cd113a6],edi
  420e10:	jb     0x420e76
  420e12:	std    
  420e13:	mov    al,BYTE PTR [ebx-0x10]
  420e16:	nop
  420e17:	lock rcr DWORD PTR [ecx+0x6833c2e8],cl
  420e1e:	xor    DWORD PTR [esi-0x1f],edx
  420e21:	pop    ebx
  420e22:	and    DWORD PTR [ebx*8+0x52341084],ecx
  420e29:	dec    edx
  420e2a:	mov    esp,0x1ee9a05
  420e2f:	hlt    
  420e30:	or     al,0x56
  420e32:	arpl   WORD PTR [esi],bp
  420e34:	mov    esi,0x2108d5e1
  420e39:	test   BYTE PTR [eax],ch
  420e3b:	xchg   esi,eax
  420e3c:	cs cmp ebx,edi
  420e3f:	dec    esi
  420e40:	int3   
  420e41:	xlat   BYTE PTR ds:[ebx]
  420e42:	push   cs
  420e43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420e44:	push   ds
  420e45:	cli    
  420e46:	push   esp
  420e47:	iret   
  420e48:	ds aas 
  420e4a:	jae    0x420ec2
  420e4c:	bound  eax,QWORD PTR [edx]
  420e4e:	outs   dx,BYTE PTR ds:[esi]
  420e4f:	cmc    
  420e50:	call   0x49bc:0x7a32038
  420e57:	sub    dh,BYTE PTR [esi-0x11]
  420e5a:	push   0x18
  420e5c:	lods   al,BYTE PTR ds:[esi]
  420e5d:	dec    esp
  420e5e:	dec    ecx
  420e5f:	pop    edx
  420e60:	shl    DWORD PTR [eax-0x2e9583a8],1
  420e66:	ret    0x2c55
  420e69:	fwait
  420e6a:	adc    BYTE PTR [edx+0x3d6ea1f3],dh
  420e70:	mov    edi,0xf8d05675
  420e75:	lds    edx,FWORD PTR [ebp-0x71]
  420e78:	fld    DWORD PTR [ebx]
  420e7a:	xor    BYTE PTR [ebp-0x4f],0xc6
  420e7e:	or     eax,DWORD PTR [esi]
  420e80:	in     eax,0xc3
  420e82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e83:	xor    al,0xb5
  420e85:	pop    ebx
  420e86:	aad    0xb3
  420e88:	push   eax
  420e89:	imul   esp,DWORD PTR [esi-0x6ac2dde4],0xa7fd7d56
  420e93:	loope  0x420e76
  420e95:	retf   0x7348
  420e98:	and    ecx,DWORD PTR [edx+0x48a8cd36]
  420e9e:	or     bl,dh
  420ea0:	fdivr  QWORD PTR [edi-0x39]
  420ea3:	sbb    al,0x3f
  420ea5:	add    al,0x5c
  420ea7:	cwde   
  420ea8:	pop    edx
  420ea9:	mov    dl,0x53
  420eab:	in     al,dx
  420eac:	pushf  
  420ead:	xchg   ebp,eax
  420eae:	dec    esi
  420eaf:	mov    edi,0xbab82a31
  420eb4:	mov    cl,0xb5
  420eb6:	sbb    al,0x46
  420eb8:	call   0x3d67:0x770285fa
  420ebf:	loopne 0x420ed8
  420ec1:	ret    
  420ec2:	out    0xe,al
  420ec4:	lods   eax,DWORD PTR ds:[esi]
  420ec5:	jns    0x420ed5
  420ec7:	daa    
  420ec8:	pop    edx
  420ec9:	into   
  420eca:	loop   0x420ee8
  420ecc:	gs into 
  420ece:	push   eax
  420ecf:	push   cs
  420ed0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ed1:	cs dec ecx
  420ed3:	(bad)  
  420ed5:	pop    edx
  420ed6:	popf   
  420ed7:	popa   
  420ed8:	in     eax,dx
  420ed9:	dec    esp
  420eda:	sub    DWORD PTR [ecx-0xf1f65d6],ebp
  420ee0:	test   BYTE PTR [esi+0x6cb8b003],bl
  420ee6:	jmp    DWORD PTR [ebp+0x7961a91f]
  420eec:	in     eax,0x7b
  420eee:	xchg   ecx,eax
  420eef:	lock add DWORD PTR [edi-0x43],esi
  420ef3:	(bad)  
  420ef5:	shl    BYTE PTR ds:0x480ccfc,1
  420efb:	xchg   ebx,eax
  420efc:	cmp    BYTE PTR ds:0xab322505,0x7a
  420f03:	test   DWORD PTR [edi],ecx
  420f05:	enter  0xe3c6,0x1e
  420f09:	cli    
  420f0a:	jnp    0x420eea
  420f0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f0d:	mov    ebx,0x758fa408
  420f12:	xor    DWORD PTR [ebp-0x80],edx
  420f15:	and    al,BYTE PTR [esi+0x70]
  420f18:	dec    ebx
  420f19:	or     eax,0xd7505ca
  420f1e:	push   DWORD PTR [esp+ebx*1+0x58]
  420f22:	out    dx,eax
  420f23:	mov    ds:0xcdd152d,al
  420f28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f29:	adc    eax,0xc2fec99c
  420f2e:	mov    ds:0xb37830db,al
  420f33:	(bad)  
  420f34:	int    0x92
  420f36:	xor    edx,DWORD PTR ds:0x239db56d
  420f3c:	lods   al,BYTE PTR ds:[esi]
  420f3d:	outs   dx,DWORD PTR ds:[esi]
  420f3e:	jle    0x420f77
  420f40:	mov    ah,0xdb
  420f42:	push   es
  420f43:	or     eax,0xca00119e
  420f48:	in     al,0x8c
  420f4a:	adc    DWORD PTR [edi+esi*1+0x76c1c877],0x330b87ff
  420f55:	xor    BYTE PTR [edx+0x14f8450e],cl
  420f5b:	sbb    al,0x41
  420f5d:	das    
  420f5e:	bound  ebx,QWORD PTR ds:0x9609c83d
  420f64:	add    al,0x7c
  420f66:	aad    0x3d
  420f68:	enter  0x8afd,0xa8
  420f6c:	push   esi
  420f6d:	nop
  420f6e:	call   0x48c4:0x69de0cab
  420f75:	fsubr  DWORD PTR [esi+0x6b]
  420f78:	xchg   esp,eax
  420f79:	cwde   
  420f7a:	cdq    
  420f7b:	out    dx,al
  420f7c:	out    0xb8,al
  420f7e:	loop   0x420fa2
  420f80:	and    al,0x89
  420f82:	mov    ecx,0x322aa0b8
  420f87:	push   esp
  420f88:	aad    0xca
  420f8a:	xor    eax,0x10058df3
  420f8f:	jecxz  0x420f24
  420f91:	jecxz  0x420f80
  420f93:	rol    bl,cl
  420f95:	neg    ebp
  420f97:	shl    BYTE PTR [ecx-0x116535ba],cl
  420f9d:	cmp    ecx,edi
  420f9f:	or     bl,BYTE PTR [eax-0x33a8ca11]
  420fa5:	push   edx
  420fa6:	shl    BYTE PTR [edi],0x33
  420fa9:	push   eax
  420faa:	push   es
  420fab:	xchg   ecx,eax
  420fac:	or     DWORD PTR [ecx],esi
  420fae:	mov    ah,al
  420fb0:	aad    0xe6
  420fb2:	retf   0x5878
  420fb5:	fwait
  420fb6:	push   cs
  420fb7:	ret    
  420fb8:	arpl   WORD PTR [ecx],bp
  420fba:	je     0x420fd8
  420fbc:	fild   WORD PTR [edx+0x22bc33f4]
  420fc2:	retf   0xce88
  420fc5:	dec    edi
  420fc6:	xchg   ebp,eax
  420fc7:	dec    eax
  420fc8:	pop    ds
  420fc9:	ror    ecx,1
  420fcb:	cmp    edi,ecx
  420fcd:	(bad)  
  420fce:	aad    0x3b
  420fd0:	dec    esp
  420fd1:	xchg   DWORD PTR [ebx-0x31],ecx
  420fd4:	pop    edi
  420fd5:	sbb    edi,DWORD PTR [edi]
  420fd7:	daa    
  420fd8:	fimul  DWORD PTR [esi+0x1e]
  420fdb:	mov    DWORD PTR [edx-0x5dd1e48a],edi
  420fe1:	jl     0x420fdc
  420fe3:	jle    0x421028
  420fe5:	fcom   DWORD PTR [edi]
  420fe7:	test   ebx,esi
  420fe9:	mov    esp,0x4c0c2421
  420fee:	sub    DWORD PTR [eax-0x5],ebx
  420ff1:	arpl   WORD PTR [eax+0x66],bp
  420ff4:	mov    dh,0x91
  420ff6:	pop    esp
  420ff7:	sub    BYTE PTR ss:[edi-0x149786bb],0xc6
  420fff:	push   es
  421000:	adc    DWORD PTR [edx-0x40207e16],0xaf87574c
  42100a:	push   edi
  42100b:	mov    edi,0xae6468e3
  421010:	outs   dx,DWORD PTR ds:[esi]
  421011:	xchg   esp,eax
  421012:	jge    0x420fda
  421014:	add    al,0xb7
  421016:	mov    esi,0x45228b20
  42101b:	cwde   
  42101c:	cmp    DWORD PTR [ebx],edx
  42101e:	shl    edx,cl
  421020:	add    ch,BYTE PTR [ecx+esi*8-0xf313700]
  421027:	mov    esi,0x5bbe5f9f
  42102c:	xchg   esp,eax
  42102d:	pop    ds
  42102e:	inc    esp
  42102f:	shr    edi,0xb5
  421032:	add    BYTE PTR [edx],bh
  421034:	mov    ebp,ecx
  421036:	call   0x8b72:0xae034c
  42103d:	dec    eax
  42103e:	cld    
  42103f:	add    esi,DWORD PTR [ecx+0x3c]
  421042:	push   ecx
  421043:	sbb    ebp,ecx
  421045:	div    bh
  421047:	into   
  421048:	(bad)  
  421049:	cmp    ah,BYTE PTR [ebx]
  42104b:	stos   BYTE PTR es:[edi],al
  42104c:	jo     0x42105b
  42104e:	or     DWORD PTR [esi+0x59],eax
  421051:	(bad)  
  421053:	sub    BYTE PTR [esi+eax*8-0xc7dacb9],bh
  42105a:	into   
  42105b:	jmp    0x974f6899
  421060:	mov    edx,0x74515573
  421065:	sub    DWORD PTR [eax+0x512a630a],ebp
  42106b:	ds jmp 0xc43c:0x3be45798
  421073:	jbe    0x421001
  421075:	call   0xaf71e21f
  42107a:	mov    BYTE PTR [esp+ecx*1],dh
  42107d:	ja     0x421014
  42107f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421080:	sbb    BYTE PTR [ebp+0x537f8fee],dl
  421086:	mov    esi,0x2f4b9ddf
  42108b:	in     al,dx
  42108c:	addr16 ja 0x421037
  42108f:	or     BYTE PTR [ebx-0x425e5e77],al
  421095:	jb     0x42109e
  421097:	ja     0x4210b5
  421099:	mov    al,0x74
  42109b:	cmp    al,0x66
  42109d:	xchg   edi,eax
  42109e:	and    ch,bh
  4210a0:	aaa    
  4210a1:	cmp    esp,eax
  4210a3:	pop    esi
  4210a4:	pop    ebx
  4210a5:	jns    0x4210b9
  4210a7:	test   al,0xb6
  4210a9:	call   0x70073386
  4210ae:	sub    BYTE PTR [esi],0x0
  4210b1:	mov    bl,0x6e
  4210b3:	push   0x90907627
  4210b8:	pushf  
  4210b9:	and    edx,DWORD PTR [ecx+0x25]
  4210bc:	daa    
  4210bd:	shl    BYTE PTR [edi-0x25441f0f],0xe5
  4210c4:	sub    ah,ah
  4210c6:	mov    ds:0xb1033871,eax
  4210cb:	or     DWORD PTR [ebx-0x76b93b24],esp
  4210d1:	nop
  4210d2:	and    al,0x63
  4210d4:	bound  eax,QWORD PTR [eax-0x73]
  4210d7:	and    DWORD PTR [esp+edx*8+0x7ce655],edx
  4210de:	lock jl 0x42114b
  4210e1:	mov    dh,0xb2
  4210e3:	push   cs
  4210e4:	or     al,BYTE PTR [ecx]
  4210e6:	lods   eax,DWORD PTR ds:[esi]
  4210e7:	dec    eax
  4210e8:	imul   eax,DWORD PTR [edi-0x371744f6],0xe843385b
  4210f2:	xchg   ebx,eax
  4210f3:	jecxz  0x4210ab
  4210f5:	sbb    cl,BYTE PTR [esi]
  4210f7:	sub    DWORD PTR [esi+0x7d],0x7c
  4210fb:	in     al,0x27
  4210fd:	jmp    0x6cad:0x78d0abad
  421104:	and    bh,BYTE PTR [ebp+0x3e]
  421107:	dec    esi
  421108:	dec    edi
  421109:	and    ebx,edx
  42110b:	sbb    esi,esi
  42110d:	push   ecx
  42110e:	call   0x8c19c728
  421113:	nop
  421114:	sub    esi,DWORD PTR [edx+0x5f]
  421117:	jmp    0x2cd2:0x5d38afd0
  42111e:	sub    dl,BYTE PTR [ecx-0xc]
  421121:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421122:	jl     0x42110b
  421124:	fs jns 0x42111b
  421127:	sub    BYTE PTR [edi],bl
  421129:	stc    
  42112a:	adc    ebp,DWORD PTR [edx+0x20010dc8]
  421130:	addr16 data16 jbe 0x42119d
  421134:	cmp    DWORD PTR [eax+0x6b058412],edx
  42113a:	pop    ss
  42113b:	sub    DWORD PTR [ecx-0x5ae1a2a8],ebx
  421141:	int    0x67
  421143:	daa    
  421144:	das    
  421145:	int3   
  421146:	jbe    0x4211b0
  421148:	mov    al,ds:0x65b036e7
  42114d:	dec    ebp
  42114e:	inc    esi
  42114f:	(bad)  
  421150:	rcr    DWORD PTR [ebx],cl
  421152:	call   0x50b9e225
  421157:	into   
  421158:	add    al,0x69
  42115a:	iret   
  42115b:	popa   
  42115c:	cmp    BYTE PTR [ebx+0x2a],ch
  42115f:	jecxz  0x42116d
  421161:	retf   
  421162:	or     edx,DWORD PTR [ebp+0x1e]
  421165:	ss pop ebp
  421167:	pop    ss
  421168:	ficom  WORD PTR [esi+0x27]
  42116b:	push   edi
  42116c:	ret    0x585a
  42116f:	ret    0x23f
  421172:	popf   
  421173:	in     eax,dx
  421174:	stos   DWORD PTR es:[edi],eax
  421175:	sub    al,0xbd
  421177:	mov    dl,0xbc
  421179:	mov    esp,DWORD PTR [ebx]
  42117b:	mov    dh,0xd0
  42117d:	sbb    edx,DWORD PTR [edx]
  42117f:	xchg   BYTE PTR [edi+esi*4],ah
  421182:	ja     0x4211b4
  421184:	mov    ebx,0xa9b0a99c
  421189:	adc    ecx,edi
  42118b:	out    0xc7,eax
  42118d:	sub    cl,BYTE PTR [esi]
  42118f:	das    
  421190:	in     al,dx
  421191:	push   eax
  421192:	call   0x1ca0db06
  421197:	icebp  
  421198:	or     dl,BYTE PTR [ebx]
  42119a:	(bad)  
  42119b:	pop    ecx
  42119c:	or     bh,BYTE PTR [esi+edi*2+0x429fc003]
  4211a3:	and    esi,DWORD PTR [esi+0x54]
  4211a6:	xchg   esp,eax
  4211a7:	test   al,0x7f
  4211a9:	outs   dx,DWORD PTR ds:[esi]
  4211aa:	cmp    eax,DWORD PTR [ecx]
  4211ac:	inc    esp
  4211ad:	xor    cl,BYTE PTR [ebx+0x7a]
  4211b0:	mov    al,0xb5
  4211b2:	popa   
  4211b3:	jns    0x421222
  4211b5:	xchg   edx,eax
  4211b6:	fist   WORD PTR [ecx+eax*8-0x43211943]
  4211bd:	mov    esp,0xca1cdeb2
  4211c2:	nop
  4211c3:	stc    
  4211c4:	mov    dl,0xb2
  4211c6:	jne    0x42118a
  4211c8:	inc    edi
  4211c9:	pusha  
  4211ca:	aad    0x54
  4211cc:	in     al,dx
  4211cd:	pop    ebx
  4211ce:	sahf   
  4211cf:	cmp    DWORD PTR [esi],esi
  4211d1:	and    al,0x2e
  4211d3:	mov    cl,0xc5
  4211d5:	mov    esi,DWORD PTR [eax+ecx*1-0x65d30aa2]
  4211dc:	or     ecx,edi
  4211de:	cmc    
  4211df:	mov    eax,0x8855d03
  4211e4:	int    0x87
  4211e6:	retf   0xd15b
  4211e9:	int3   
  4211ea:	add    BYTE PTR ds:0x1faa39b8,0x75
  4211f1:	fidiv  WORD PTR [eax*2-0x6332fa40]
  4211f8:	jne    0x4211ae
  4211fa:	pop    esi
  4211fb:	sbb    ah,0x5a
  4211fe:	push   ebp
  4211ff:	cmp    al,0xc0
  421201:	mov    edi,0x89dca58f
  421206:	xlat   BYTE PTR ds:[ebx]
  421207:	imul   ebx,eax,0xffffffa0
  42120a:	xchg   ebx,eax
  42120b:	xlat   BYTE PTR ds:[ebx]
  42120c:	push   eax
  42120d:	std    
  42120e:	xchg   ah,dh
  421210:	jno    0x421272
  421212:	shl    DWORD PTR [ecx+0x1e],1
  421215:	cs add ch,BYTE PTR fs:[ebx]
  421219:	mov    DWORD PTR ds:0x548817ee,eax
  42121f:	pop    edx
  421220:	mov    ebx,0x43a19874
  421225:	and    al,0x17
  421227:	ss dec ebp
  421229:	aaa    
  42122a:	iret   
  42122b:	dec    edx
  42122c:	xor    eax,DWORD PTR [ebp+0x526ae65b]
  421232:	cld    
  421233:	pop    esp
  421234:	lahf   
  421235:	push   0xffffff8b
  421237:	ss inc edi
  421239:	add    al,0x8f
  42123b:	xchg   esp,eax
  42123c:	sbb    al,0x8e
  42123e:	cmp    al,0x22
  421240:	dec    edx
  421241:	gs pop ebp
  421243:	test   al,0x30
  421245:	push   ds
  421246:	test   DWORD PTR [ebp+0x17b8455e],ebp
  42124c:	cmp    edx,esi
  42124e:	shl    DWORD PTR [edx+0x4710c22],0x72
  421255:	sahf   
  421256:	out    dx,al
  421257:	imul   eax,DWORD PTR [eax+0x6d],0x74f70ec6
  42125e:	or     al,0xdd
  421260:	cmp    bh,dl
  421262:	loope  0x4211f0
  421264:	adc    DWORD PTR [edi-0x33f3bcdf],0xd6971f1
  42126e:	outs   dx,BYTE PTR ds:[esi]
  42126f:	sub    bh,BYTE PTR [edx+0x38]
  421272:	pop    esi
  421273:	jg     0x421231
  421275:	adc    al,0x23
  421277:	mov    ecx,0xeb9506b9
  42127c:	cmovbe ebp,DWORD PTR [edx+0x2713718f]
  421283:	pusha  
  421284:	lahf   
  421285:	add    ecx,esi
  421287:	mov    eax,gs:0x4063fdc2
  42128d:	pop    esi
  42128e:	cs sahf 
  421290:	push   ebp
  421291:	pushf  
  421292:	int3   
  421293:	mov    esp,0xfbd94999
  421298:	gs iret 
  42129a:	into   
  42129b:	nop
  42129c:	mov    ah,0x2e
  42129e:	dec    ebx
  42129f:	es and bh,dh
  4212a2:	cmp    ecx,DWORD PTR [edi+eiz*8-0x74834cc3]
  4212a9:	popf   
  4212aa:	loop   0x4212c2
  4212ac:	dec    esp
  4212ad:	fnstsw WORD PTR [edx]
  4212af:	xor    ebx,DWORD PTR [ebx+0x77]
  4212b2:	pop    ecx
  4212b3:	cmp    ah,BYTE PTR [eax]
  4212b5:	lahf   
  4212b6:	sbb    eax,0xd43a0e6f
  4212bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212bc:	inc    ebp
  4212bd:	pusha  
  4212be:	push   esp
  4212bf:	mov    edx,0x4d060085
  4212c4:	jg     0x4212e0
  4212c6:	sub    BYTE PTR [eax],al
  4212c8:	rol    DWORD PTR [esi-0x6c99fc4f],cl
  4212ce:	inc    edx
  4212cf:	ret    
  4212d0:	jmp    0x4212f9
  4212d2:	xor    BYTE PTR [eax+0x48],ah
  4212d5:	repz sbb DWORD PTR [ebp-0x6c],0xa92fb664
  4212dd:	xchg   edi,eax
  4212de:	(bad)  
  4212df:	jno    0x42130e
  4212e1:	int3   
  4212e2:	fwait
  4212e3:	mov    eax,0x17c71f53
  4212e8:	popa   
  4212e9:	fsubrp st(1),st
  4212eb:	jmp    0x8c611beb
  4212f0:	push   eax
  4212f1:	sbb    DWORD PTR [edi+eax*2+0x25],edi
  4212f5:	xor    dh,BYTE PTR [esi-0x27]
  4212f8:	xchg   esi,eax
  4212f9:	icebp  
  4212fa:	push   0x264e6c0b
  4212ff:	adc    eax,DWORD PTR [edx-0x608e7747]
  421305:	dec    ebp
  421306:	hlt    
  421307:	sti    
  421308:	outs   dx,BYTE PTR ds:[esi]
  421309:	xchg   ebp,eax
  42130a:	pop    edx
  42130b:	sahf   
  42130c:	adc    eax,0xc5d768de
  421311:	xchg   ecx,eax
  421312:	scas   eax,DWORD PTR es:[edi]
  421313:	out    0xdd,al
  421315:	xchg   edx,eax
  421316:	push   ss
  421317:	mov    ecx,0x4cfa7d49
  42131c:	and    esi,DWORD PTR [ecx-0x4eeff0cf]
  421322:	aad    0x72
  421324:	outs   dx,DWORD PTR ds:[esi]
  421325:	xchg   ebp,eax
  421326:	xchg   esi,eax
  421327:	xchg   edi,eax
  421328:	dec    ebp
  421329:	clc    
  42132a:	hlt    
  42132b:	mov    eax,0xca911d18
  421330:	test   eax,0xeccf57ba
  421335:	pop    ebp
  421336:	out    dx,eax
  421337:	pusha  
  421338:	pusha  
  421339:	mul    al
  42133b:	mov    cl,0x99
  42133d:	cli    
  42133e:	pop    eax
  42133f:	test   DWORD PTR [edi-0x2600ec27],eax
  421345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421346:	push   ss
  421347:	adc    eax,esp
  421349:	inc    ebx
  42134a:	in     eax,0x90
  42134c:	add    edi,DWORD PTR [edx+0x6776cab4]
  421352:	fstp   QWORD PTR [edi-0x32d2e07]
  421358:	lahf   
  421359:	cwde   
  42135a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42135b:	xor    ch,dl
  42135d:	sbb    edi,eax
  42135f:	gs popf 
  421361:	test   al,0xc1
  421363:	fs add cl,cl
  421366:	pop    esi
  421367:	inc    esp
  421368:	stos   BYTE PTR es:[edi],al
  421369:	mov    eax,ds:0x23284248
  42136e:	mov    eax,ds:0xb03cbd9e
  421373:	push   ebp
  421374:	in     eax,0xb2
  421376:	mov    ah,0x3a
  421378:	xor    cl,BYTE PTR [edi-0x429db075]
  42137e:	xchg   esi,eax
  42137f:	test   eax,0x2f602ffe
  421384:	fwait
  421385:	sub    eax,0x1a1c9e35
  42138a:	xchg   DWORD PTR [ebp+0x749a24ee],eax
  421390:	mov    ah,0x60
  421392:	in     eax,dx
  421393:	cs mov eax,0xb1ec6666
  421399:	data16 out dx,al
  42139b:	gs call 0xb6b0:0x63049fde
  4213a3:	pop    ss
  4213a4:	inc    edx
  4213a5:	out    dx,al
  4213a6:	fcomp  QWORD PTR [ebx+0x37]
  4213a9:	jo     0x4213e5
  4213ab:	(bad)  
  4213ac:	sbb    al,0x63
  4213ae:	test   DWORD PTR [ebx-0x126d743c],ecx
  4213b4:	mov    eax,0xbe9b2a93
  4213b9:	xor    ebx,ebx
  4213bb:	push   esi
  4213bc:	loope  0x4213c8
  4213be:	push   ebp
  4213bf:	sar    bh,cl
  4213c1:	and    DWORD PTR [edx-0x64],edx
  4213c4:	cwde   
  4213c5:	fwait
  4213c6:	xchg   BYTE PTR [ebp+0x3b],bh
  4213c9:	mov    esp,0xdd556396
  4213ce:	cmp    dl,BYTE PTR [esi+0x569d2f12]
  4213d4:	mov    dh,0xab
  4213d6:	fnsave [edx-0x60]
  4213d9:	lds    eax,FWORD PTR [ebp+edi*1+0x308efd29]
  4213e0:	mov    bh,0xd3
  4213e2:	out    0x3a,al
  4213e4:	lds    ecx,FWORD PTR [edx-0x6f30a321]
  4213ea:	fnstcw WORD PTR [ebp-0x16071f8a]
  4213f0:	push   ecx
  4213f1:	adc    edi,DWORD PTR [esi+0x14d14306]
  4213f7:	int3   
  4213f8:	adc    al,0x7c
  4213fa:	mov    cl,0x7c
  4213fc:	mov    ecx,0xc0ac5150
  421401:	cmp    ch,dl
  421403:	jnp    0x4213c3
  421405:	cmp    dh,al
  421407:	inc    ebx
  421408:	xor    cl,dh
  42140a:	xor    al,0xdc
  42140c:	cli    
  42140d:	ret    
  42140e:	sub    edx,DWORD PTR [ebp-0x60b89179]
  421414:	out    dx,eax
  421415:	icebp  
  421416:	test   ebp,ecx
  421418:	add    al,0xda
  42141a:	pop    ebx
  42141b:	pusha  
  42141c:	cs mov esi,0x5982d7bb
  421422:	push   0x7856bbd7
  421427:	cmp    DWORD PTR [esi+eax*2-0x43],ebp
  42142b:	push   esi
  42142c:	ins    DWORD PTR es:[edi],dx
  42142d:	inc    edx
  42142e:	mov    ebx,0xb5a96775
  421433:	das    
  421434:	imul   ecx,DWORD PTR [edx],0x53
  421437:	scas   eax,DWORD PTR es:[edi]
  421438:	(bad)  
  421439:	adc    al,0x3e
  42143b:	out    dx,eax
  42143c:	das    
  42143d:	jae    0x42148b
  42143f:	xchg   esi,eax
  421440:	mov    edx,0x927fea0e
  421445:	aad    0x59
  421447:	es nop
  421449:	lods   eax,DWORD PTR ds:[esi]
  42144a:	lea    esi,[ecx-0xe5a4b9]
  421450:	and    BYTE PTR [ebx+0x42],ch
  421453:	add    DWORD PTR [ebx-0x24],edx
  421456:	pop    ss
  421457:	sbb    esp,DWORD PTR [ebp+0x6cabcdd1]
  42145d:	fwait
  42145e:	leave  
  42145f:	mov    es,WORD PTR [ebx+0x35496823]
  421465:	dec    ebx
  421466:	push   esp
  421467:	outs   dx,DWORD PTR ds:[esi]
  421468:	in     al,dx
  421469:	gs test al,0xf5
  42146c:	jns    0x42143e
  42146e:	fdivr  QWORD PTR [ebx]
  421470:	imul   ebp,DWORD PTR [ebx+0x8dc5d30],0xffffffcb
  421477:	inc    edx
  421478:	frstor [eax-0x3]
  42147b:	aad    0xe9
  42147d:	mov    edx,0xd437b60e
  421482:	jmp    0x4214d2
  421484:	repz push eax
  421486:	cmp    bl,ch
  421488:	cmc    
  421489:	sahf   
  42148a:	sbb    eax,0x70a9fa6b
  42148f:	das    
  421490:	fmul   QWORD PTR fs:[eax-0x7beeeb36]
  421497:	push   eax
  421498:	sahf   
  421499:	cmp    eax,0xad0afb8a
  42149e:	xor    DWORD PTR [esi],0x80413342
  4214a4:	repz adc edi,esp
  4214a7:	(bad)  
  4214a8:	(bad)  
  4214a9:	cmc    
  4214aa:	push   ss
  4214ab:	fwait
  4214ac:	pop    ecx
  4214ad:	push   ecx
  4214ae:	(bad)  
  4214af:	jns    0x4214c7
  4214b1:	into   
  4214b2:	xor    ebp,DWORD PTR [edi-0x4]
  4214b5:	mov    ch,0x46
  4214b7:	ss into 
  4214b9:	ss ins DWORD PTR es:[edi],dx
  4214bb:	sti    
  4214bc:	xchg   esi,eax
  4214bd:	ss aaa 
  4214bf:	jmp    0x421536
  4214c1:	retf   0x6457
  4214c4:	aaa    
  4214c5:	shl    BYTE PTR [edx+0x7e],1
  4214c8:	mov    ecx,0x8daf5d68
  4214cd:	loope  0x42146b
  4214cf:	push   ebp
  4214d0:	pop    edi
  4214d1:	xor    edi,DWORD PTR [edi-0x7d69ac0a]
  4214d7:	jecxz  0x42145a
  4214d9:	adc    ebx,ecx
  4214db:	jl     0x4214e8
  4214dd:	mov    ecx,DWORD PTR [edi+0x7cfa3750]
  4214e3:	(bad)
  4214e6:	loop   0x421487
  4214e8:	test   eax,0xb02aaf2f
  4214ed:	stos   DWORD PTR es:[edi],eax
  4214ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4214ef:	dec    ecx
  4214f0:	fbld   TBYTE PTR [bp+di]
  4214f3:	push   0xc27d092c
  4214f8:	loope  0x4214f0
  4214fa:	mov    esi,0x538a914
  4214ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421500:	adc    dl,bh
  421502:	ja     0x421581
  421504:	pop    ebp
  421505:	dec    esp
  421506:	in     eax,dx
  421507:	jmp    0x8b8a:0x692fb9b6
  42150e:	jg     0x42153c
  421510:	lahf   
  421511:	mov    ebx,0x3189ed1f
  421516:	cmp    DWORD PTR [edi-0x44cf2bb3],0x39
  42151d:	inc    edi
  42151e:	dec    ebp
  42151f:	lods   al,BYTE PTR ds:[esi]
  421520:	xchg   edx,ebp
  421522:	leave  
  421523:	(bad)  [ebp+0x3e2e7673]
  421529:	xchg   esi,eax
  42152a:	mov    ah,0x1a
  42152c:	push   0xf51ee8f1
  421531:	aaa    
  421532:	mov    ecx,0xb27832a9
  421537:	test   BYTE PTR [eax],0x82
  42153a:	or     ah,bh
  42153c:	push   ebp
  42153d:	pop    edi
  42153e:	sbb    edi,DWORD PTR [ecx-0x54]
  421541:	cwde   
  421542:	test   BYTE PTR [ebx+0x3a],ah
  421545:	push   es
  421546:	cmp    edi,ebp
  421548:	aad    0x12
  42154a:	inc    ebp
  42154b:	push   ecx
  42154c:	loop   0x4215ab
  42154e:	cwde   
  42154f:	ja     0x421597
  421551:	std    
  421552:	push   cs
  421553:	sub    DWORD PTR [ecx+0x10],edi
  421556:	mov    DWORD PTR [edi-0x5b],eax
  421559:	sbb    al,0x2e
  42155b:	enter  0x4ffe,0xc7
  42155f:	in     al,0xb8
  421561:	sbb    eax,0xbda68891
  421566:	jecxz  0x421587
  421568:	push   ebp
  421569:	jno    0x4214f5
  42156b:	in     eax,dx
  42156c:	out    dx,eax
  42156d:	(bad)  
  42156e:	into   
  42156f:	adc    bl,BYTE PTR ds:0xc399174e
  421575:	and    esp,edx
  421577:	lods   eax,DWORD PTR ds:[esi]
  421578:	mov    eax,ds:0x35fdec56
  42157d:	inc    bx
  42157f:	mov    ds:0x3b380e95,al
  421584:	(bad)  [ebp+0x33]
  421587:	push   0x31
  421589:	and    DWORD PTR [ebp-0x76],esi
  42158c:	aam    0xcd
  42158e:	jl     0x421585
  421590:	jne    0x42156d
  421592:	ins    DWORD PTR es:[edi],dx
  421593:	xor    BYTE PTR [ecx],ch
  421595:	lock bound ecx,QWORD PTR [edx]
  421598:	mov    edi,0x66abc30f
  42159d:	jp     0x421531
  42159f:	inc    esi
  4215a0:	inc    ecx
  4215a1:	aas    
  4215a2:	cmc    
  4215a3:	jecxz  0x42157d
  4215a5:	call   0xc81bb822
  4215aa:	jb     0x421616
  4215ac:	lods   eax,DWORD PTR ds:[esi]
  4215ad:	mov    dh,0x3f
  4215af:	fcom   DWORD PTR [edi]
  4215b1:	pusha  
  4215b2:	sbb    ebp,0xffffffc9
  4215b5:	repnz fst QWORD PTR ds:0xc5f1db29
  4215bc:	push   edx
  4215bd:	loope  0x421553
  4215bf:	mov    bl,dl
  4215c1:	hlt    
  4215c2:	dec    esp
  4215c3:	inc    ebp
  4215c4:	sar    BYTE PTR [ecx+0x7c4193b6],0xd5
  4215cb:	leave  
  4215cc:	push   edx
  4215cd:	push   ebp
  4215ce:	shr    al,0x95
  4215d1:	repnz sub esp,DWORD PTR fs:[edx-0x56c33377]
  4215d9:	mov    ch,BYTE PTR [ecx+0x1fdde83]
  4215df:	loope  0x421620
  4215e1:	or     DWORD PTR [ebx+0x756f1f01],esp
  4215e7:	call   0xed392247
  4215ec:	mov    WORD PTR [edx+edi*4],fs
  4215ef:	neg    dl
  4215f1:	ret    
  4215f2:	jno    0x42162e
  4215f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4215f5:	jmp    0x42163d
  4215f7:	call   0x25df6e68
  4215fc:	jne    0x42166a
  4215fe:	clc    
  4215ff:	loop   0x421663
  421601:	cli    
  421602:	or     BYTE PTR [edx+0x1a],cl
  421605:	stc    
  421606:	pop    esi
  421607:	rol    BYTE PTR [ecx+0xe060f43],0xec
  42160e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42160f:	push   edi
  421610:	xchg   DWORD PTR [esi-0x51de1863],edi
  421616:	adc    BYTE PTR [ebp-0x79],cl
  421619:	retf   
  42161a:	mov    dh,0xcb
  42161c:	rcr    cl,0x66
  42161f:	cdq    
  421620:	xchg   ebp,eax
  421621:	jbe    0x421620
  421623:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421624:	mov    ah,BYTE PTR [esi+0x31420498]
  42162a:	sahf   
  42162b:	test   BYTE PTR [esi+0x20],ah
  42162e:	or     eax,0x8c2aa860
  421633:	shr    BYTE PTR [ebx],cl
  421635:	inc    esi
  421636:	mov    ch,0x61
  421638:	sub    DWORD PTR [edx-0x139dba2],edx
  42163e:	push   eax
  42163f:	xor    esp,DWORD PTR [edi-0x3f7d939a]
  421645:	cmp    ebx,DWORD PTR [ecx]
  421647:	cmp    edx,DWORD PTR [ecx+ebp*4]
  42164a:	push   edx
  42164b:	xchg   ecx,esp
  42164d:	and    DWORD PTR [ebx],esp
  42164f:	out    dx,al
  421650:	lea    ebp,[esi+0x16860a70]
  421656:	mov    dl,0xe9
  421658:	push   edi
  421659:	jmp    0x42162e
  42165b:	or     eax,0x8fada86b
  421660:	jne    0x4216c7
  421662:	pop    ebx
  421663:	lds    edi,FWORD PTR [ebp-0x63]
  421666:	mov    bl,0xc5
  421668:	sbb    ebp,esp
  42166a:	cmp    al,0xa4
  42166c:	mov    al,ah
  42166e:	bound  edx,QWORD PTR [ecx-0x63]
  421671:	not    DWORD PTR [ecx-0x39da5]
  421677:	test   ebx,ebx
  421679:	sub    ebx,DWORD PTR [eax]
  42167b:	ror    esi,1
  42167d:	inc    edi
  42167e:	push   ebp
  42167f:	out    dx,al
  421680:	add    bl,BYTE PTR [esi-0x78]
  421683:	ja     0x42165e
  421685:	push   ecx
  421686:	mov    bh,0x47
  421688:	cmp    bl,dh
  42168a:	push   esp
  42168b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42168c:	shr    al,0xac
  42168f:	in     eax,dx
  421690:	js     0x421681
  421692:	fimul  WORD PTR [edi]
  421694:	js     0x421648
  421696:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421697:	in     al,0x2c
  421699:	out    dx,al
  42169a:	xor    esp,edi
  42169c:	lea    esp,[ebp+0x6d]
  42169f:	xor    dl,al
  4216a1:	xchg   DWORD PTR [edx],ecx
  4216a3:	imul   edx,DWORD PTR [ecx+0x4e647b71],0xfffffff8
  4216aa:	fs rcl dh,cl
  4216ad:	aam    0xc6
  4216af:	xchg   esp,eax
  4216b0:	inc    ebx
  4216b1:	cli    
  4216b2:	jne    0x4216ab
  4216b4:	pusha  
  4216b5:	(bad)  
  4216b6:	hlt    
  4216b7:	fcomp  QWORD PTR [ecx+0x42f5fcfd]
  4216bd:	or     edx,DWORD PTR [ecx+0x35]
  4216c0:	pop    ds
  4216c1:	xchg   ecx,eax
  4216c2:	rcl    DWORD PTR [esi],1
  4216c4:	dec    esp
  4216c5:	adc    ebx,DWORD PTR [ebp-0x6d468874]
  4216cb:	std    
  4216cc:	xchg   dl,ch
  4216ce:	jmp    DWORD PTR [eax-0x70d1ad2a]
  4216d4:	(bad)  
  4216d5:	adc    eax,0x1272f088
  4216da:	pop    edx
  4216db:	push   ebp
  4216dc:	shl    edi,0x63
  4216df:	in     al,dx
  4216e0:	ret    0x1349
  4216e3:	icebp  
  4216e4:	xlat   BYTE PTR ds:[ebx]
  4216e5:	jge    0x421736
  4216e7:	(bad)  
  4216e8:	cwde   
  4216e9:	pop    es
  4216ea:	inc    esi
  4216eb:	pmulhuw mm4,QWORD PTR [ebx+0x40]
  4216ef:	push   ds
  4216f0:	lods   eax,DWORD PTR ds:[esi]
  4216f1:	sub    BYTE PTR [eax+0x584df89a],ch
  4216f7:	inc    ecx
  4216f8:	lds    edx,FWORD PTR [ecx-0x3f384a63]
  4216fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216ff:	loope  0x42172b
  421701:	xor    al,0x6
  421703:	add    cl,BYTE PTR [eax-0x3749eb1f]
  421709:	icebp  
  42170a:	cmc    
  42170b:	jne    0x421760
  42170d:	sub    eax,0xdd8808a5
  421712:	sbb    BYTE PTR [ecx-0x2c0ddbf3],dh
  421718:	xchg   ecx,eax
  421719:	(bad)
  42171f:	or     bh,BYTE PTR [edx-0x40]
  421722:	adc    eax,0xee363478
  421727:	cdq    
  421728:	icebp  
  421729:	and    eax,0x7bfe414f
  42172e:	inc    ebx
  42172f:	and    BYTE PTR ds:0x6d2a2ad2,al
  421735:	push   ebx
  421736:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  421738:	dec    edx
  421739:	ins    BYTE PTR es:[edi],dx
  42173a:	mov    ds:0xbbb45192,eax
  42173f:	call   0x5836:0x6050b61c
  421746:	jecxz  0x42171f
  421748:	sbb    bl,cl
  42174a:	dec    esp
  42174b:	pusha  
  42174c:	xchg   ebx,eax
  42174d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42174e:	jmp    0xccdfd8b
  421753:	aaa    
  421754:	leave  
  421755:	push   es
  421756:	adc    DWORD PTR [esi],ebx
  421758:	in     eax,dx
  421759:	jae    0x4217be
  42175b:	xchg   ecx,eax
  42175c:	inc    edx
  42175d:	cli    
  42175e:	or     DWORD PTR [esi],0xffffffbe
  421761:	jbe    0x42173b
  421763:	js     0x421767
  421765:	pop    esi
  421766:	jns    0x42170a
  421768:	adc    BYTE PTR [esi-0x43920ede],ch
  42176e:	js     0x421723
  421770:	test   BYTE PTR [esi],ch
  421772:	push   0xdf7901ea
  421777:	add    esi,DWORD PTR [edi+0x52]
  42177a:	sbb    ebx,DWORD PTR [eax-0x56]
  42177d:	jmp    0x4217fb
  42177f:	mov    ebx,0xb7049d55
  421784:	mov    ds,WORD PTR [eax+0x2c8d07d]
  42178a:	and    al,BYTE PTR [esi+0x12f4481f]
  421790:	test   al,0xe9
  421792:	mov    bl,0x9b
  421794:	and    al,0x7d
  421796:	adc    BYTE PTR [ebx+0x99a47c0],0x4
  42179d:	push   ecx
  42179e:	fmulp  st(7),st
  4217a0:	xchg   esi,eax
  4217a1:	mov    eax,0x9c34f3c4
  4217a6:	in     eax,0x22
  4217a8:	inc    esi
  4217a9:	leave  
  4217aa:	(bad)  
  4217ac:	cmp    DWORD PTR [ebx],edi
  4217ae:	call   0xa10f:0x1a0eebf0
  4217b5:	lods   eax,DWORD PTR ds:[esi]
  4217b6:	xor    eax,0x8e6fba01
  4217bb:	inc    esp
  4217bc:	mov    esi,0xd077a41a
  4217c1:	aas    
  4217c2:	fcmovb st,st(7)
  4217c4:	push   0x58d1b84
  4217c9:	cdq    
  4217ca:	jmp    0xded23ea6
  4217cf:	lock sub ecx,DWORD PTR [esi-0x7d]
  4217d3:	das    
  4217d4:	jge    0x4217a9
  4217d6:	jb     0x421774
  4217d8:	(bad)  
  4217d9:	js     0x42178a
  4217db:	mov    BYTE PTR [edi+0x3db42036],dh
  4217e1:	xchg   BYTE PTR [ebx-0x32db36a5],bh
  4217e7:	cmp    DWORD PTR [ecx+edx*1+0x69],edi
  4217eb:	mov    edi,ecx
  4217ed:	mov    ds:0x6c09113,eax
  4217f2:	aaa    
  4217f3:	jns    0x421812
  4217f5:	sbb    eax,0x873b7005
  4217fa:	jnp    0x4217a0
  4217fc:	and    DWORD PTR [edi],0x5d54994c
  421802:	push   esp
  421803:	sbb    BYTE PTR [edi+ebp*1],bl
  421806:	push   0x31
  421808:	add    cl,BYTE PTR [edi]
  42180a:	mov    eax,ds:0xbf2ab802
  42180f:	dec    eax
  421810:	mov    BYTE PTR ds:0x8e8b2d6b,al
  421816:	dec    esi
  421817:	scas   al,BYTE PTR es:[edi]
  421818:	jb     0x421821
  42181a:	jmp    0x5270:0x7a579bce
  421821:	clc    
  421822:	mov    BYTE PTR ds:0xa23d9c28,al
  421828:	jmp    0x23b9:0x694b786f
  42182f:	out    0xb4,al
  421831:	ins    DWORD PTR es:[edi],dx
  421832:	mov    BYTE PTR [esi-0x4c64f2ca],ch
  421838:	shl    DWORD PTR [edx+edx*2-0x307a3f68],cl
  42183f:	ins    BYTE PTR es:[edi],dx
  421840:	adc    DWORD PTR ds:0xdbfcebbd,ecx
  421846:	sbb    DWORD PTR [ebp+0x78a7d075],esp
  42184c:	fisub  DWORD PTR [ebp-0x3b]
  42184f:	stos   BYTE PTR es:[edi],al
  421850:	bound  edx,QWORD PTR [ecx-0x41]
  421853:	push   0x39
  421855:	popf   
  421856:	adc    eax,0xae4d366d
  42185b:	mov    ebx,0xdcb9b03d
  421860:	retf   0xb485
  421863:	cmp    esp,ebp
  421865:	leave  
  421866:	dec    esi
  421867:	sbb    DWORD PTR [ebx],ebp
  421869:	(bad)  
  42186b:	or     bh,BYTE PTR [ebx-0x2d]
  42186e:	push   ebp
  42186f:	lods   al,BYTE PTR ds:[esi]
  421870:	jp     0x4218eb
  421872:	push   ebx
  421873:	sbb    bh,ch
  421875:	lods   eax,DWORD PTR ds:[esi]
  421876:	ins    DWORD PTR es:[edi],dx
  421877:	add    DWORD PTR [eax],0xcdf551c1
  42187d:	into   
  42187e:	or     dh,BYTE PTR [esi+0x7]
  421881:	jne    0x4218fd
  421883:	xchg   DWORD PTR [eax+0x54bc559],ebp
  421889:	sar    BYTE PTR ss:[edx+0x5a],0x1b
  42188e:	pop    eax
  42188f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421890:	add    ah,BYTE PTR [ebp+0x47ceebe0]
  421896:	jecxz  0x42186c
  421898:	sbb    dl,BYTE PTR [edx+0x56]
  42189b:	arpl   bp,bp
  42189d:	loopne 0x4218c7
  42189f:	ds inc esp
  4218a1:	add    al,BYTE PTR [ecx+0x52]
  4218a4:	jae    0x421925
  4218a6:	add    DWORD PTR [ebp+0x59],eax
  4218a9:	ret    0xb533
  4218ac:	mov    ah,0x60
  4218ae:	jb     0x4218ef
  4218b0:	in     eax,dx
  4218b1:	inc    ecx
  4218b2:	xchg   ecx,eax
  4218b3:	shr    cl,cl
  4218b5:	ror    DWORD PTR [ecx],0xa5
  4218b8:	fstp   st(6)
  4218ba:	ret    
  4218bb:	into   
  4218bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4218bd:	sub    eax,DWORD PTR [ecx-0x80]
  4218c0:	rcr    DWORD PTR [ebx+ebp*1-0x75],1
  4218c4:	repnz pusha 
  4218c6:	pminsw mm6,mm2
  4218c9:	fwait
  4218ca:	scas   al,BYTE PTR es:[edi]
  4218cb:	or     BYTE PTR [esi+0x77b24085],ch
  4218d1:	xor    DWORD PTR [esi-0x56],edx
  4218d4:	popa   
  4218d5:	js     0x4218de
  4218d7:	fldcw  WORD PTR ss:[ebx+0x3aa9c1fe]
  4218de:	mov    ebx,ecx
  4218e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4218e1:	bound  ebp,QWORD PTR [edx+0x13]
  4218e4:	xor    BYTE PTR [ecx-0xd],dh
  4218e7:	mov    bl,0x98
  4218e9:	jne    0x421942
  4218eb:	pop    es
  4218ec:	inc    esi
  4218ed:	push   ss
  4218ee:	mov    dl,0xca
  4218f0:	fxch   st(0)
  4218f2:	push   es
  4218f3:	pop    ebp
  4218f4:	jnp    0x421895
  4218f6:	ins    BYTE PTR es:[edi],dx
  4218f7:	cmp    BYTE PTR [esi],ch
  4218f9:	rol    BYTE PTR [ebx-0x61],cl
  4218fc:	xchg   esp,eax
  4218fd:	sahf   
  4218fe:	(bad)  
  4218ff:	cmc    
  421900:	inc    esp
  421901:	sti    
  421902:	xchg   ebx,eax
  421903:	outs   dx,DWORD PTR ds:[esi]
  421904:	cs fwait
  421906:	in     eax,0xae
  421908:	xor    BYTE PTR [ebx-0x75],cl
  42190b:	jmp    0xbd78:0x93809e7e
  421912:	sar    dh,cl
  421914:	aam    0xcf
  421916:	cmp    eax,0x388b308b
  42191b:	push   ebp
  42191c:	adc    esi,DWORD PTR [ecx-0x34]
  42191f:	sub    BYTE PTR [esi+0x4e],bh
  421922:	sbb    al,0x2a
  421924:	int    0x64
  421926:	(bad)  es:0x88b7312
  42192d:	sbb    dl,bl
  42192f:	mov    ebx,ecx
  421931:	xchg   BYTE PTR [esp+esi*8+0x41],al
  421935:	and    al,0x83
  421937:	mov    ecx,edi
  421939:	cld    
  42193a:	dec    ecx
  42193b:	ret    
  42193c:	imul   edx,eax,0xffffffa7
  42193f:	mov    esi,0xd7f32778
  421944:	call   0x55677d32
  421949:	nop
  42194a:	push   ebp
  42194b:	inc    edx
  42194c:	loopne 0x4219be
  42194e:	stos   DWORD PTR es:[edi],eax
  42194f:	xchg   ecx,eax
  421950:	xor    esi,DWORD PTR [ecx-0x15]
  421953:	mov    bl,0x86
  421955:	data16 mov fs,WORD PTR [esi]
  421958:	test   DWORD PTR [ebp+0x3f4b8e4f],edi
  42195e:	lea    edx,ds:0x42766c0a
  421964:	xor    esi,0xa
  421967:	test   eax,0xec4ad95
  42196c:	lahf   
  42196d:	outs   dx,DWORD PTR ds:[esi]
  42196e:	es xchg edi,eax
  421970:	add    DWORD PTR [ecx+0x75],0x8fd6f846
  421977:	fisttp WORD PTR ss:0x460cf2e4
  42197e:	std    
  42197f:	dec    edx
  421980:	pop    ds
  421981:	jo     0x42190c
  421983:	mov    ds:0x204ea162,eax
  421988:	add    esi,DWORD PTR [ecx-0x4518c5fe]
  42198e:	xor    ebp,DWORD PTR [edi+edx*4]
  421991:	jnp    0x4219be
  421993:	mov    al,ds:0x56914bdc
  421998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421999:	mov    DWORD PTR [ecx],eax
  42199b:	inc    edi
  42199c:	test   DWORD PTR [ebp+0x2771349a],ebx
  4219a2:	outs   dx,BYTE PTR ds:[esi]
  4219a3:	ds mov ecx,0xf79a32c6
  4219a9:	mov    esp,0xa69971a4
  4219ae:	pop    DWORD PTR [edx-0x1d]
  4219b1:	adc    eax,0x732b6e80
  4219b6:	cld    
  4219b7:	jnp    0x421997
  4219b9:	adc    ch,0x9f
  4219bc:	add    BYTE PTR [ecx-0x6de07c1a],bh
  4219c2:	test   dh,ch
  4219c4:	das    
  4219c5:	jge    0x4219e6
  4219c7:	adc    al,0xbd
  4219c9:	sti    
  4219ca:	xor    ebp,DWORD PTR [ecx]
  4219cc:	pop    es
  4219cd:	sub    DWORD PTR [esi-0x7022f82b],edx
  4219d3:	into   
  4219d4:	pusha  
  4219d5:	sbb    DWORD PTR [ecx+0x5a],esp
  4219d8:	aas    
  4219d9:	mov    al,ss:0x9712d31a
  4219df:	ja     0x421998
  4219e1:	or     al,0xb0
  4219e3:	inc    esp
  4219e4:	(bad)  
  4219e5:	jp     0x4219e1
  4219e7:	pop    esi
  4219e8:	aaa    
  4219e9:	jle    0x421a11
  4219eb:	fist   DWORD PTR [esi-0x54caafc3]
  4219f1:	xor    ch,bl
  4219f3:	push   edi
  4219f4:	jecxz  0x421988
  4219f6:	and    al,0x30
  4219f8:	into   
  4219f9:	cmp    al,0x68
  4219fb:	or     edi,DWORD PTR [ecx+0x339fa984]
  421a01:	popa   
  421a02:	(bad)  
  421a03:	out    dx,eax
  421a04:	mov    BYTE PTR [ecx-0x5c],dl
  421a07:	jmp    0x421a4e
  421a09:	ret    
  421a0a:	cmp    cl,BYTE PTR [ebp+0x73]
  421a0d:	mov    fs,WORD PTR [esi-0x6a]
  421a10:	jne    0x4219f2
  421a12:	fnstenv [eax+edx*4-0x5d69232c]
  421a19:	adc    edx,esi
  421a1b:	fisub  WORD PTR [ecx-0x5cded82e]
  421a21:	xchg   ecx,eax
  421a22:	jl     0x421a0e
  421a24:	jae    0x421a43
  421a26:	pmaxsw mm5,mm4
  421a29:	pop    edi
  421a2a:	in     al,dx
  421a2b:	in     eax,dx
  421a2c:	cmp    BYTE PTR [edi-0x30],0x8a
  421a30:	ror    DWORD PTR [edx],1
  421a32:	dec    eax
  421a33:	pop    esp
  421a34:	fistp  QWORD PTR [esi+0x61]
  421a37:	das    
  421a38:	xchg   esp,eax
  421a39:	les    esp,FWORD PTR ds:[esi+edi*8-0x26]
  421a3e:	mov    ds:0x5709b11,eax
  421a43:	test   DWORD PTR [ebx-0x6e64c17b],ecx
  421a49:	mov    ch,bl
  421a4b:	xchg   edx,eax
  421a4c:	xchg   edx,eax
  421a4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a4e:	ror    BYTE PTR [eax-0x35bfd869],1
  421a54:	mov    bh,0x25
  421a56:	and    ah,BYTE PTR [ebx]
  421a58:	push   ds
  421a59:	dec    edi
  421a5a:	imul   BYTE PTR [ebx-0x1b]
  421a5d:	adc    eax,0x126ede87
  421a62:	and    al,0x4a
  421a64:	push   ebx
  421a65:	lds    edx,FWORD PTR [edi-0x50fd2204]
  421a6b:	bound  ebp,QWORD PTR [edx+edx*8]
  421a6e:	pop    edx
  421a6f:	mov    eax,ds:0x61236608
  421a74:	jle    0x421a37
  421a76:	sbb    eax,0x77c551c1
  421a7b:	imul   ebp,DWORD PTR [ebx-0x4fb66260],0x1c
  421a82:	sbb    DWORD PTR es:[eax+0x59],ecx
  421a86:	scas   eax,DWORD PTR es:[edi]
  421a87:	sub    al,0x7f
  421a89:	(bad)  
  421a8a:	daa    
  421a8b:	call   0xf471:0xc3dc1c1e
  421a92:	push   esi
  421a93:	rcl    BYTE PTR [ebp-0x23],0x83
  421a97:	mov    cl,BYTE PTR [edi+eax*4-0x4c]
  421a9b:	mov    ebp,0xffa8fd26
  421aa0:	or     BYTE PTR [edx],bh
  421aa2:	les    ebp,FWORD PTR [esi]
  421aa4:	mov    cs,WORD PTR gs:[ebx-0x46]
  421aa8:	jge    0x421a39
  421aaa:	pop    ebx
  421aab:	jmp    0xd00fba10
  421ab0:	out    0x0,eax
  421ab2:	mov    dh,0x5a
  421ab4:	inc    esp
  421ab5:	(bad)  
  421ab6:	repz jnp 0x421b00
  421ab9:	fwait
  421aba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421abb:	pop    es
  421abc:	div    DWORD PTR [eax+0x494391ef]
  421ac2:	dec    ecx
  421ac3:	cmp    al,0x69
  421ac5:	loope  0x421a86
  421ac7:	lds    ecx,FWORD PTR [esi]
  421ac9:	mov    esp,0xf717fb6
  421ace:	test   DWORD PTR [ebx],edx
  421ad0:	add    BYTE PTR [eax],al
  421ad2:	add    BYTE PTR [ebx],bh
  421ad4:	pop    ebp
  421ad5:	hlt    
  421ad6:	je     0x423f0d
  421adc:	jmp    0x421ae6
  421ae1:	mov    esi,0x3272f8
  421ae6:	mov    eax,DWORD PTR [ebp-0x4]
  421ae9:	mov    edi,DWORD PTR [ebp-0x8]
  421aec:	xor    edi,edx
  421aee:	add    edi,esi
  421af0:	mov    esi,DWORD PTR [ebp+0x8]
  421af3:	imul   edi,ecx
  421af6:	mov    ebx,DWORD PTR [ebp+0xc]
  421af9:	xor    eax,edx
  421afb:	add    eax,ecx
  421afd:	mov    al,BYTE PTR [ebx+eax*1+0x3272f8]
  421b04:	mov    BYTE PTR [edi+esi*1],al
  421b07:	mov    eax,DWORD PTR [ebp-0x8]
  421b0a:	mov    esi,DWORD PTR [ebp+0x10]
  421b0d:	xor    eax,edx
  421b0f:	xor    ebx,ebx
  421b11:	add    esi,0xfabdbecf
  421b17:	adc    ebx,0xffffffff
  421b1a:	lea    ecx,[ecx+eax*1+0x3272f8]
  421b21:	xor    edi,edi
  421b23:	xor    esi,0x8a29a145
  421b29:	jmp    0x423ee8
  421b2e:	int    0x95
  421b30:	stos   BYTE PTR es:[edi],al
  421b31:	jmp    0xff36:0x517a
  421b37:	dec    ebx
  421b38:	jnp    0x421b18
  421b3a:	adc    BYTE PTR [ecx+0x46],0xa8
  421b3e:	and    eax,DWORD PTR [edi+0x7c]
  421b41:	jnp    0x421b60
  421b43:	sahf   
  421b44:	jnp    0x421bc1
  421b46:	inc    edx
  421b47:	sahf   
  421b48:	adc    DWORD PTR [ebx-0x58],ecx
  421b4b:	xchg   esp,eax
  421b4c:	std    
  421b4d:	fucom  st(7)
  421b4f:	inc    ecx
  421b50:	in     eax,dx
  421b51:	xchg   edi,eax
  421b52:	mov    eax,0x9e1923ab
  421b57:	ss in  eax,dx
  421b59:	and    BYTE PTR [edi+ebp*8+0x46ea41e6],0xfa
  421b61:	aas    
  421b62:	pop    edx
  421b63:	pop    edi
  421b64:	sub    edi,DWORD PTR [ebx-0x692c9426]
  421b6a:	jle    0x421afb
  421b6c:	dec    esp
  421b6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421b6e:	loop   0x421b92
  421b70:	add    BYTE PTR [ecx+0x6dfc2247],bl
  421b76:	sbb    DWORD PTR [ebx+0x1b],0xfffffffe
  421b7a:	popa   
  421b7b:	sti    
  421b7c:	addr16 sahf 
  421b7e:	or     eax,0xff51d9a1
  421b83:	mov    BYTE PTR [esi],bl
  421b85:	scas   eax,DWORD PTR es:[edi]
  421b86:	xor    eax,0x941d2c61
  421b8b:	aam    0xfe
  421b8d:	jecxz  0x421b3f
  421b8f:	dec    ebx
  421b90:	aam    0x81
  421b92:	sti    
  421b93:	or     esp,ecx
  421b95:	dec    edi
  421b96:	std    
  421b97:	sti    
  421b98:	sub    al,0x38
  421b9a:	scas   al,BYTE PTR es:[edi]
  421b9b:	into   
  421b9c:	out    dx,al
  421b9d:	sub    eax,0xd6e9c94a
  421ba2:	cmp    dh,0x3a
  421ba5:	in     al,dx
  421ba6:	mov    ch,0xda
  421ba8:	sti    
  421ba9:	enter  0x9323,0xd6
  421bad:	pushf  
  421bae:	mov    ebx,0x44868f82
  421bb3:	and    al,0x99
  421bb5:	(bad)  
  421bb6:	mov    edx,0x64ba1b7c
  421bbb:	add    ah,ch
  421bbd:	or     eax,0x309e9946
  421bc2:	daa    
  421bc3:	jl     0x421bf2
  421bc5:	mov    edx,0x17ffe1ec
  421bca:	outs   dx,BYTE PTR ds:[esi]
  421bcb:	push   esi
  421bcc:	mov    al,al
  421bce:	and    al,BYTE PTR [esi+0x223f804]
  421bd4:	xor    BYTE PTR [eax-0x73],ch
  421bd7:	jecxz  0x421c17
  421bd9:	(bad)  
  421bdb:	xor    edi,DWORD PTR [edx+0x29]
  421bde:	add    DWORD PTR [ecx-0x51],esp
  421be1:	cmp    ch,bh
  421be3:	sub    eax,0xd7f7fc4d
  421be8:	out    0x55,al
  421bea:	call   0x351b:0x507090f9
  421bf1:	xchg   BYTE PTR ds:0xae5683d5,cl
  421bf7:	ins    BYTE PTR es:[edi],dx
  421bf8:	js     0x421bf5
  421bfa:	in     al,0x4a
  421bfc:	sbb    edx,esi
  421bfe:	test   BYTE PTR [esi+0x5974861],cl
  421c04:	ret    0xa490
  421c07:	jl     0x421ba7
  421c09:	sahf   
  421c0a:	imul   edi,DWORD PTR [ecx+0x30],0xfffffff3
  421c0e:	ss mov edi,0x17b9cd9d
  421c14:	xor    eax,0x6043cfbe
  421c19:	dec    ebx
  421c1a:	imul   edx,DWORD PTR [ebp-0x2b],0xd97ea1ad
  421c21:	adc    DWORD PTR [ecx],ebx
  421c23:	pop    es
  421c24:	mov    dl,0xc2
  421c26:	gs xor al,ch
  421c29:	jp     0x421bee
  421c2b:	popa   
  421c2c:	lock jb 0x421c33
  421c2f:	lock jbe 0x421c05
  421c32:	sub    BYTE PTR [edx-0x71],0x9a
  421c36:	cmp    eax,0xa2d0a3c8
  421c3b:	mov    ds:0xbcbb1df2,eax
  421c40:	mov    DWORD PTR [eax-0x156e46a5],edi
  421c46:	scas   al,BYTE PTR es:[edi]
  421c47:	adc    al,0x53
  421c49:	dec    ecx
  421c4a:	add    dl,0x69
  421c4d:	jmp    0xe3387d63
  421c52:	inc    esp
  421c53:	imul   edi,DWORD PTR [eax-0x15],0x819b0d36
  421c5a:	dec    ebp
  421c5b:	cmp    dh,BYTE PTR [ebx-0x4]
  421c5e:	sub    eax,0x5d5910a1
  421c63:	mov    edi,0xb9a7c448
  421c68:	pop    ds
  421c69:	xchg   edx,eax
  421c6a:	pop    ecx
  421c6b:	xchg   DWORD PTR [edx-0x7c7ea335],esi
  421c71:	jl     0x421c6e
  421c73:	ja     0x421cc2
  421c75:	setl   BYTE PTR ds:0x90df8521
  421c7c:	icebp  
  421c7d:	ss cld 
  421c7f:	or     al,0x7f
  421c81:	sbb    eax,0x375b05b3
  421c86:	push   0x4fd3b194
  421c8b:	mov    ebx,ebx
  421c8d:	inc    eax
  421c8e:	fsub   st(0),st
  421c90:	pop    ds
  421c91:	mov    bl,BYTE PTR [ebx+0x73fbda93]
  421c97:	std    
  421c98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c99:	out    0x23,eax
  421c9b:	js     0x421c62
  421c9d:	neg    BYTE PTR [eax]
  421c9f:	mov    ds:0x67b6ee88,eax
  421ca4:	inc    esp
  421ca5:	lahf   
  421ca6:	xchg   esi,eax
  421ca7:	es mov ebp,0x558f035c
  421cad:	sbb    ch,BYTE PTR [ecx]
  421caf:	in     eax,dx
  421cb0:	or     DWORD PTR [eax-0x49],0x620f1e56
  421cb7:	inc    ecx
  421cb8:	cmp    eax,0x74982972
  421cbd:	scas   eax,DWORD PTR es:[edi]
  421cbe:	popf   
  421cbf:	jp     0x421cd7
  421cc1:	enter  0x23ba,0x4d
  421cc5:	loope  0x421c7f
  421cc7:	or     al,0xac
  421cc9:	fsubp  st(3),st
  421ccb:	adc    al,0xea
  421ccd:	mov    dl,0x17
  421ccf:	or     al,0xb3
  421cd1:	dec    edx
  421cd2:	cmp    esi,DWORD PTR [edi+0x13]
  421cd5:	xchg   edi,eax
  421cd6:	dec    eax
  421cd7:	xor    eax,0xff19b28a
  421cdc:	dec    ebp
  421cdd:	mov    dh,0xb8
  421cdf:	in     eax,dx
  421ce0:	imul   eax,ecx,0xd
  421ce3:	hlt    
  421ce4:	call   0x4f5dd14f
  421ce9:	sti    
  421cea:	out    0x3f,al
  421cec:	jmp    0xab744e7d
  421cf1:	enter  0x7d08,0xeb
  421cf5:	sar    BYTE PTR [ecx+0x64],1
  421cf8:	xchg   edx,eax
  421cf9:	dec    edx
  421cfa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421cfb:	sbb    esp,DWORD PTR [esi+0x37c97b56]
  421d01:	rcl    DWORD PTR [edi+edx*8+0x40],0xbe
  421d06:	iret   
  421d07:	sbb    eax,0xcf07ce1c
  421d0c:	stos   BYTE PTR es:[edi],al
  421d0d:	fucomi st,st(5)
  421d0f:	mov    al,al
  421d11:	jnp    0x421d43
  421d13:	adc    ebp,edx
  421d15:	inc    ecx
  421d16:	xor    al,BYTE PTR [ecx-0x6e]
  421d19:	pushf  
  421d1a:	rcr    DWORD PTR [eax-0x63e7eb52],cl
  421d20:	cmc    
  421d21:	lods   al,BYTE PTR ds:[esi]
  421d22:	retf   
  421d23:	jae    0x421d88
  421d25:	sub    cl,BYTE PTR [esi-0x6b]
  421d28:	add    BYTE PTR [ebx+0x69],0x54
  421d2c:	or     DWORD PTR [edx-0x72],esi
  421d2f:	outs   dx,BYTE PTR ds:[esi]
  421d30:	adc    eax,0xb1c419cb
  421d35:	xchg   esp,eax
  421d36:	mov    ah,dl
  421d38:	adc    cl,BYTE PTR [ecx-0x4f748040]
  421d3e:	sub    eax,0xe765c61e
  421d43:	arpl   WORD PTR [ecx-0x2af6ac],sp
  421d49:	test   BYTE PTR [ecx-0x4c],al
  421d4c:	xchg   ebp,eax
  421d4d:	inc    eax
  421d4e:	mov    cl,0x20
  421d50:	fcom   DWORD PTR [eax+eiz*8-0x41a263de]
  421d57:	dec    ecx
  421d58:	push   ds
  421d59:	mov    ah,0x55
  421d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421d5c:	push   ebx
  421d5d:	call   0xadd1881f
  421d62:	pushf  
  421d63:	test   DWORD PTR [edi-0x6d19c3c8],0x2ebe0317
  421d6d:	xor    DWORD PTR [ebx+0x5f0c912],ebp
  421d73:	cs mov dl,0x43
  421d76:	(bad)  
  421d77:	(bad)  
  421d78:	and    bh,al
  421d7a:	arpl   WORD PTR [esi+edx*1],di
  421d7d:	mov    cl,0xb9
  421d7f:	cs xor eax,0xe709f686
  421d85:	or     DWORD PTR [ecx],esi
  421d87:	lods   eax,DWORD PTR ds:[esi]
  421d88:	in     al,dx
  421d89:	xchg   edx,eax
  421d8a:	fs cs nop
  421d8d:	mov    ds:0x839ab66f,al
  421d92:	jae    0x421dbd
  421d94:	mov    ah,0x31
  421d96:	lahf   
  421d97:	fisttp QWORD PTR [eax-0x1c]
  421d9a:	cmp    dh,0xc7
  421d9d:	test   al,0x5e
  421d9f:	(bad)  
  421da0:	lock int3 
  421da2:	fwait
  421da3:	popf   
  421da4:	mov    dh,0x27
  421da6:	xchg   esi,eax
  421da7:	and    bl,BYTE PTR [esp+ecx*2-0x14]
  421dab:	repnz mov BYTE PTR [bx-0x1343],dh
  421db1:	jno    0x421d98
  421db3:	mov    edx,0xb14e7a6d
  421db8:	out    dx,al
  421db9:	cmp    ecx,DWORD PTR [edi+0x6d]
  421dbc:	jl     0x421d42
  421dbe:	and    BYTE PTR [edx+edi*1-0x74e6e2de],ah
  421dc5:	jmp    0x421d5c
  421dc7:	mov    ds:0xa8de4e35,eax
  421dcc:	adc    eax,0x4b6c3231
  421dd1:	jno    0x421db9
  421dd3:	(bad)
  421dd8:	mov    dh,0xf5
  421dda:	mov    ecx,0xef174f19
  421ddf:	jo     0x421df1
  421de1:	add    al,BYTE PTR [eax+0x10]
  421de4:	or     cl,BYTE PTR [esi-0x3a]
  421de7:	and    BYTE PTR [eax-0x70a44eed],0xc0
  421dee:	dec    ecx
  421def:	clc    
  421df0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421df2:	ret    0xbb08
  421df5:	xor    dh,BYTE PTR [esi-0x17]
  421df8:	jbe    0x421dc2
  421dfa:	stc    
  421dfb:	sub    ebx,esi
  421dfd:	sti    
  421dfe:	in     al,dx
  421dff:	dec    eax
  421e00:	pushf  
  421e01:	clc    
  421e02:	or     BYTE PTR [eax],dh
  421e04:	xor    DWORD PTR [ecx+0x4c],esp
  421e07:	pop    edi
  421e08:	jl     0x421e79
  421e0a:	sbb    al,BYTE PTR [ecx-0x22387307]
  421e10:	lahf   
  421e11:	shr    DWORD PTR [edx+0x6807d711],1
  421e17:	adc    BYTE PTR [edi],bh
  421e19:	push   ecx
  421e1a:	adc    edi,DWORD PTR [ebp-0x58]
  421e1d:	dec    esi
  421e1e:	sahf   
  421e1f:	mov    ch,BYTE PTR [ecx+ebx*1]
  421e22:	test   BYTE PTR [edi+edx*2+0x6ea85a51],ch
  421e29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e2a:	cmp    dl,bh
  421e2c:	xlat   BYTE PTR ds:[ebx]
  421e2d:	(bad)  
  421e2e:	retf   
  421e2f:	fcom   DWORD PTR [ebp+0x1d33fffd]
  421e35:	or     DWORD PTR [edx-0x72a6218c],edi
  421e3b:	test   BYTE PTR [edx],ch
  421e3d:	jmp    0x7d58:0x3ea6e70b
  421e44:	ret    0x4c9a
  421e47:	add    al,0xd8
  421e49:	jb     0x421e84
  421e4b:	je     0x421e77
  421e4d:	jle    0x421dfd
  421e4f:	fnstenv [ecx+0x65]
  421e52:	pop    esi
  421e53:	(bad)  
  421e54:	and    eax,0x457007e7
  421e59:	adc    al,0xc5
  421e5b:	fisubr DWORD PTR [ebx-0x1059dc28]
  421e61:	sbb    dl,ch
  421e63:	mov    ebp,0x3522e3d3
  421e68:	mov    eax,ds:0x101fd0e
  421e6d:	data16 mov dh,0xe4
  421e70:	jnp    0x421e62
  421e72:	cmp    ecx,DWORD PTR [esi]
  421e74:	jecxz  0x421ef2
  421e76:	nop
  421e77:	repnz and DWORD PTR [edx-0x37],esi
  421e7b:	ss mov bl,0x9d
  421e7e:	retf   
  421e7f:	pusha  
  421e80:	mov    eax,ds:0x97190476
  421e85:	xchg   esp,eax
  421e86:	pushf  
  421e87:	rcl    bl,0x2b
  421e8a:	call   0x813f:0x249aa8a4
  421e91:	push   0x4b1f4f7d
  421e96:	mov    edi,0x2abe1476
  421e9b:	fdiv   DWORD PTR [ebx+0x37]
  421e9e:	push   esp
  421e9f:	mov    BYTE PTR [ecx],ch
  421ea1:	pop    eax
  421ea2:	mov    ch,0xde
  421ea4:	stos   BYTE PTR es:[edi],al
  421ea5:	fisubr DWORD PTR [esi+0x31a886ff]
  421eab:	mov    ah,0x96
  421ead:	push   ebx
  421eae:	arpl   WORD PTR [edi-0x38341143],dx
  421eb4:	test   esi,esi
  421eb6:	pop    ebp
  421eb7:	or     dh,BYTE PTR [eax+0x73dcef59]
  421ebd:	mov    ds:0x5fd83cfa,eax
  421ec2:	outs   dx,DWORD PTR ds:[esi]
  421ec3:	xor    DWORD PTR [ebp-0x1d],0x8961e20b
  421eca:	pop    esp
  421ecb:	jle    0x421f3d
  421ecd:	fs repz jns 0x421f0f
  421ed1:	push   0x31
  421ed3:	sub    bh,BYTE PTR cs:[ebx-0x41]
  421ed7:	jecxz  0x421ed1
  421ed9:	mov    edi,0x7c628c7f
  421ede:	loope  0x421ed1
  421ee0:	pusha  
  421ee1:	jge    0x421e75
  421ee3:	(bad)  
  421ee4:	dec    esi
  421ee5:	outs   dx,BYTE PTR ds:[esi]
  421ee6:	loopne 0x421f21
  421ee8:	push   ss
  421ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421eea:	dec    ecx
  421eeb:	pop    ds
  421eec:	lds    esp,FWORD PTR [eax+0x13]
  421eef:	sbb    DWORD PTR [eax],edi
  421ef1:	add    eax,0x45de883c
  421ef6:	mov    ebx,DWORD PTR [edi+0x3]
  421ef9:	sbb    bh,ch
  421efb:	(bad)  
  421efc:	push   eax
  421efd:	dec    edi
  421efe:	inc    eax
  421eff:	cdq    
  421f00:	sbb    eax,0x44907ac8
  421f05:	or     al,BYTE PTR [ebx]
  421f07:	xor    ch,bh
  421f09:	in     al,0xd5
  421f0b:	mov    eax,0x41fc0149
  421f10:	scas   eax,DWORD PTR es:[edi]
  421f11:	and    DWORD PTR [ebp-0x1390890],ecx
  421f17:	adc    cl,BYTE PTR [ebx-0x7ec282e8]
  421f1d:	aam    0x62
  421f1f:	add    ch,BYTE PTR [edi+ebp*1+0x64]
  421f23:	jbe    0x421f94
  421f25:	(bad)
  421f2a:	cld    
  421f2b:	mov    ebx,0xbf175df2
  421f30:	ss sbb al,0xad
  421f33:	fwait
  421f34:	mov    ah,0x55
  421f36:	adc    ecx,eax
  421f38:	jmp    0xdd00:0xbc2dc40b
  421f3f:	into   
  421f40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f41:	sbb    eax,0x65e991a
  421f46:	add    eax,0x8e3b7dd9
  421f4b:	mov    bh,0x1c
  421f4d:	retf   
  421f4e:	and    esp,DWORD PTR [edi]
  421f50:	mov    esp,0x7bcc6302
  421f55:	pop    edx
  421f56:	push   sp
  421f58:	retf   0x2f8
  421f5b:	pushf  
  421f5c:	mov    fs,WORD PTR [ecx-0x24]
  421f5f:	cdq    
  421f60:	inc    esi
  421f61:	nop
  421f62:	push   ds
  421f63:	test   bh,0xa1
  421f66:	test   DWORD PTR [edi-0x3a67df40],ecx
  421f6c:	inc    edi
  421f6d:	xchg   ecx,eax
  421f6e:	inc    edi
  421f6f:	inc    edx
  421f70:	and    ecx,DWORD PTR [edi+ebp*4-0x68]
  421f74:	dec    esi
  421f75:	call   0x30f2:0x1df439a6
  421f7c:	jno    0x421f28
  421f7e:	cdq    
  421f7f:	das    
  421f80:	js     0x421f73
  421f82:	mov    al,0xe2
  421f84:	xor    esp,DWORD PTR [ebx]
  421f86:	int3   
  421f87:	shl    al,0x33
  421f8a:	mov    ebx,ebx
  421f8c:	stos   BYTE PTR es:[edi],al
  421f8d:	cwd    
  421f8f:	jbe    0x421f67
  421f91:	in     eax,0xb0
  421f93:	ret    0xbd10
  421f96:	mov    bl,0x9f
  421f98:	pop    ss
  421f99:	lods   eax,DWORD PTR ds:[esi]
  421f9a:	cmp    BYTE PTR [ebp+0x4034e904],0x54
  421fa1:	jnp    0x421fcb
  421fa3:	jne    0x421ffd
  421fa5:	or     eax,0x4a93b253
  421faa:	ret    
  421fab:	sub    BYTE PTR [edx],al
  421fad:	jp     0x421f56
  421faf:	jle    0x421f63
  421fb1:	xchg   ecx,eax
  421fb2:	xchg   edx,eax
  421fb3:	jno    0x421fcc
  421fb5:	xchg   esi,eax
  421fb6:	xor    BYTE PTR [esi],0xa1
  421fb9:	fld    TBYTE PTR ds:0xfbc98ead
  421fbf:	stos   BYTE PTR es:[edi],al
  421fc0:	pop    eax
  421fc1:	jb     0x421f8f
  421fc3:	push   cs
  421fc4:	rcr    dh,1
  421fc6:	mov    bh,0x38
  421fc8:	imul   BYTE PTR [ecx-0x22]
  421fcb:	scas   eax,DWORD PTR es:[edi]
  421fcc:	push   ebp
  421fcd:	enter  0x43ad,0x77
  421fd1:	xor    ah,BYTE PTR [edi+0x46]
  421fd4:	xor    DWORD PTR [edx+0x65],ecx
  421fd7:	test   eax,0x6d5bf92f
  421fdc:	inc    edx
  421fdd:	sar    BYTE PTR [edx+ecx*1+0x58],0x4d
  421fe2:	cwde   
  421fe3:	into   
  421fe4:	in     al,dx
  421fe5:	into   
  421fe6:	rcr    BYTE PTR [ebx+edx*2-0x568cf967],1
  421fed:	scas   eax,DWORD PTR es:[edi]
  421fee:	or     ebx,edi
  421ff0:	xor    BYTE PTR [ebx+0x6528f57],ch
  421ff6:	stc    
  421ff7:	mov    edi,0x603d661f
  421ffc:	and    al,0x26
  421ffe:	pop    esp
  421fff:	pop    edx
  422000:	lds    esp,FWORD PTR [edx-0x124c4f5b]
  422006:	shr    DWORD PTR [ebx+0x755089eb],cl
  42200c:	addr16 je 0x42207e
  42200f:	xchg   esi,eax
  422010:	inc    esp
  422011:	in     al,dx
  422012:	loopne 0x421fbf
  422014:	fisub  DWORD PTR [eax+0x6f]
  422017:	in     al,0xa
  422019:	ffree  st(0)
  42201b:	shl    ebp,1
  42201d:	sbb    cl,cl
  42201f:	mov    eax,ds:0xbdd4f0f7
  422024:	div    BYTE PTR [edi*1+0x7d9fcd86]
  42202b:	test   DWORD PTR [esi],esi
  42202d:	xchg   esi,eax
  42202e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42202f:	sbb    ch,dl
  422031:	mov    dl,0x5d
  422033:	xchg   esp,eax
  422034:	mov    bh,0x33
  422036:	push   esi
  422037:	enter  0x2a4b,0xf6
  42203b:	push   edi
  42203c:	lds    ebp,FWORD PTR ds:[ebx]
  42203f:	hlt    
  422040:	lods   eax,DWORD PTR ds:[esi]
  422041:	add    BYTE PTR [esi-0x35],cl
  422044:	mov    WORD PTR [ebx+edx*4],?
  422047:	dec    eax
  422048:	jnp    0x421fe5
  42204a:	loope  0x422080
  42204c:	repz xor DWORD PTR [ecx-0x3af2b141],esi
  422053:	daa    
  422054:	aam    0x50
  422056:	sub    eax,0xada688a8
  42205b:	or     ecx,edi
  42205d:	and    DWORD PTR [eax+0x2635d274],esi
  422063:	jno    0x42204b
  422065:	ret    0x8d29
  422068:	adc    DWORD PTR [edx-0x555d4887],esi
  42206e:	push   ss
  42206f:	pop    ds
  422070:	xchg   BYTE PTR ds:0xa34e6141,ah
  422076:	pushf  
  422077:	outs   dx,DWORD PTR ds:[esi]
  422078:	push   edx
  422079:	adc    eax,0x53976b79
  42207e:	adc    eax,0x3219fdda
  422083:	aas    
  422084:	lock mov ebx,0xebd55983
  42208a:	scas   eax,DWORD PTR es:[edi]
  42208b:	adc    ch,BYTE PTR [esp+eax*1]
  42208e:	loop   0x4220d4
  422090:	mov    ah,0x64
  422092:	adc    al,0x71
  422094:	cmp    edx,DWORD PTR [ebx]
  422096:	cmp    al,0x5b
  422098:	push   es
  422099:	fnstcw WORD PTR [ebx]
  42209b:	cld    
  42209c:	sub    esi,DWORD PTR [esi+edi*8]
  42209f:	inc    esi
  4220a0:	sbb    BYTE PTR [eax],bh
  4220a2:	push   0x4544249e
  4220a7:	fiadd  WORD PTR [edx+0x5d39cb57]
  4220ae:	ret    
  4220af:	pop    ss
  4220b0:	fadd   st,st(7)
  4220b2:	mov    bl,0x38
  4220b4:	pop    esp
  4220b5:	ins    BYTE PTR es:[edi],dx
  4220b6:	scas   eax,DWORD PTR es:[edi]
  4220b7:	out    dx,al
  4220b8:	sub    eax,ebp
  4220ba:	jmp    FWORD PTR [ebx+0x6c45ea0d]
  4220c0:	sbb    BYTE PTR [edx],al
  4220c2:	or     eax,0x14800136
  4220c7:	out    dx,al
  4220c8:	das    
  4220c9:	cs inc edx
  4220cb:	jecxz  0x422065
  4220cd:	ror    BYTE PTR [edx-0x29],1
  4220d0:	xchg   edi,eax
  4220d1:	add    BYTE PTR [esi-0x1622aa81],al
  4220d7:	add    eax,0xc7614918
  4220dc:	inc    ebp
  4220dd:	dec    esi
  4220de:	jmp    0x9282:0x8420f59e
  4220e5:	push   ebx
  4220e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220e7:	or     esp,DWORD PTR [edx]
  4220e9:	retf   
  4220ea:	faddp  st(6),st
  4220ec:	jb     0x422133
  4220ee:	and    al,0x15
  4220f0:	cmc    
  4220f1:	frstor [edi-0x68]
  4220f4:	add    al,0x1d
  4220f7:	mov    ds:0x6f36fa02,eax
  4220fc:	mov    ds:0x7af9d94f,eax
  422101:	push   ss
  422102:	int    0xb2
  422104:	mov    ah,0xd8
  422106:	jl     0x4220e0
  422108:	shl    DWORD PTR [ebp+0x1],0x51
  42210c:	jmp    0x422154
  42210e:	dec    ebp
  42210f:	int    0xae
  422111:	enter  0xe1f9,0xfc
  422115:	fwait
  422116:	inc    edi
  422117:	enter  0xf514,0xc6
  42211b:	gs test al,0xcf
  42211e:	jo     0x4220d5
  422120:	jbe    0x4220ed
  422122:	out    0x75,eax
  422124:	fisttp QWORD PTR [esi+eax*1+0x6]
  422128:	add    esi,DWORD PTR [ecx]
  42212a:	loop   0x4220e6
  42212c:	mov    ds:0xda5bf91b,eax
  422131:	xchg   ah,ah
  422133:	sub    DWORD PTR [esi+0x286353a6],0x8a6b62ab
  42213d:	test   bl,cl
  42213f:	retf   
  422140:	jle    0x422179
  422142:	dec    ebx
  422143:	aad    0x2b
  422145:	(bad)  [eax]
  422147:	push   es
  422148:	mov    al,ds:0x5afac839
  42214d:	adc    esi,eax
  42214f:	das    
  422150:	mov    ebp,0xaabe7038
  422155:	outs   dx,BYTE PTR ds:[esi]
  422156:	push   0x7d7ebba6
  42215b:	(bad)  
  42215c:	mov    dh,0xca
  42215e:	cmp    BYTE PTR [edi+0x47],ah
  422161:	(bad)  
  422162:	out    dx,al
  422163:	test   BYTE PTR [esi-0x1],ch
  422166:	mov    bh,0xc8
  422168:	push   cs
  422169:	imul   ecx,DWORD PTR [eax-0x77],0xa39edf32
  422170:	xlat   BYTE PTR ds:[ebx]
  422171:	jbe    0x42214c
  422173:	push   0xfffffffb
  422175:	jbe    0x4221f1
  422177:	repnz or al,0x2d
  42217a:	call   0xc9c4b75a
  42217f:	sub    al,0x43
  422181:	cmp    eax,0xfa7f4a1a
  422186:	call   0xb406ea63
  42218b:	xlat   BYTE PTR ds:[ebx]
  42218c:	push   edi
  42218d:	idiv   BYTE PTR [ecx+ebp*8+0x4571d1b]
  422194:	out    0xc2,al
  422196:	iret   
  422197:	(bad)  
  422199:	pushf  
  42219a:	cld    
  42219b:	lock test al,0x96
  42219e:	xchg   esi,eax
  42219f:	fimul  DWORD PTR [edi]
  4221a1:	stos   DWORD PTR es:[edi],eax
  4221a2:	mov    esp,0x43eb9727
  4221a7:	mov    edi,0x1c29bfd8
  4221ac:	or     BYTE PTR [eax-0x34],0x58
  4221b0:	dec    eax
  4221b1:	retf   0x3435
  4221b4:	inc    esp
  4221b5:	cdq    
  4221b6:	or     al,0x9f
  4221b8:	xchg   BYTE PTR [eax+0x18],ah
  4221bb:	push   edx
  4221bc:	lock push ds
  4221be:	loop   0x42220a
  4221c0:	inc    ecx
  4221c1:	mov    dh,0xc8
  4221c3:	pop    eax
  4221c4:	fsub   DWORD PTR [ebp+0x59]
  4221c7:	sbb    eax,0xce76eaf3
  4221cc:	mov    ebx,0x4c236920
  4221d1:	jbe    0x42224a
  4221d3:	mov    eax,ds:0x104f7d05
  4221d8:	or     DWORD PTR [ebp+eax*1+0x51],ebx
  4221dc:	or     al,0xc7
  4221de:	mov    ebx,0x6b9e664e
  4221e3:	popf   
  4221e4:	lock je 0x4221b2
  4221e7:	push   0x7c4633e0
  4221ec:	es sahf 
  4221ee:	jbe    0x422262
  4221f0:	loopne 0x4221eb
  4221f2:	pxor   mm0,QWORD PTR [edx]
  4221f5:	xchg   edx,ebp
  4221f7:	cld    
  4221f8:	neg    BYTE PTR [ebp+0x53c08c69]
  4221fe:	cli    
  4221ff:	push   edx
  422200:	(bad)
  422204:	aas    
  422205:	cdq    
  422206:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  422208:	stos   DWORD PTR es:[edi],eax
  422209:	xchg   edi,eax
  42220a:	pop    ds
  42220b:	aad    0x98
  42220d:	cli    
  42220e:	push   cs
  42220f:	or     eax,0xb2d6385a
  422214:	or     al,0x47
  422216:	ficomp WORD PTR [esi+0x2b602836]
  42221c:	rol    DWORD PTR [edi],1
  42221e:	out    0xce,al
  422220:	jecxz  0x42228d
  422222:	fcom   QWORD PTR [ecx+0x45c3f85b]
  422228:	pop    esi
  422229:	xchg   edi,eax
  42222a:	in     eax,0xd0
  42222c:	out    dx,eax
  42222d:	jmp    0x9883:0xf085a5b2
  422234:	inc    ecx
  422235:	popf   
  422236:	fs ds ret 
  422239:	pop    ss
  42223a:	xchg   ebp,eax
  42223b:	call   0xeb9365ae
  422240:	repz or eax,0xf11d336
  422246:	pop    ebx
  422247:	imul   eax,DWORD PTR [edi+0x16b5abd6],0x4d
  42224e:	adc    edi,DWORD PTR [ecx]
  422250:	xchg   ecx,eax
  422251:	inc    ebx
  422252:	fcomip st,st(5)
  422254:	mov    ds:0x9064d621,al
  422259:	sar    DWORD PTR [eax-0x583034ad],1
  42225f:	jnp    0x422292
  422261:	ins    DWORD PTR es:[edi],dx
  422262:	rcl    dh,1
  422264:	stos   BYTE PTR es:[edi],al
  422265:	arpl   WORD PTR [ebx-0x206a583c],bp
  42226b:	pop    ds
  42226c:	cmp    DWORD PTR [ebx-0x7158e4fb],ebx
  422272:	retf   0xce10
  422275:	adc    DWORD PTR [edi+0x50],ecx
  422278:	icebp  
  422279:	xchg   ecx,eax
  42227a:	jmp    0x2435:0x557846e3
  422281:	cmp    DWORD PTR [esi-0x3f],0xffffffbb
  422285:	fisttp WORD PTR [eax-0x25a07a0f]
  42228b:	push   edx
  42228c:	(bad)  
  42228d:	iret   
  42228e:	call   0xf9340eae
  422293:	or     DWORD PTR [esi+0x55],edx
  422296:	sahf   
  422297:	js     0x4222c3
  422299:	dec    eax
  42229a:	frstor [edx]
  42229c:	add    DWORD PTR [ecx],0x6d
  42229f:	or     eax,0xe90db676
  4222a4:	mov    esp,0x8f92cb0c
  4222a9:	lds    esp,FWORD PTR [ebx+esi*4+0xd]
  4222ad:	dec    esp
  4222ae:	test   al,0x71
  4222b0:	pop    eax
  4222b1:	iret   
  4222b2:	add    eax,0x76200177
  4222b7:	fbld   TBYTE PTR gs:[ebx]
  4222ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4222bb:	mov    cl,0x2a
  4222bd:	cli    
  4222be:	test   al,0xb7
  4222c0:	test   al,0x14
  4222c2:	mov    esp,0x9cca2997
  4222c7:	aas    
  4222c8:	sbb    DWORD PTR [edx],0x5ed22c04
  4222ce:	jns    0x4222f7
  4222d0:	sub    BYTE PTR [esi-0x2d],0x34
  4222d4:	les    eax,FWORD PTR ds:0x2e3f5c02
  4222da:	lods   eax,DWORD PTR ds:[esi]
  4222db:	push   bp
  4222dd:	(bad)  
  4222de:	fsubr  st,st(0)
  4222e0:	addr16 (bad) 
  4222e2:	mov    edi,0xeb719cea
  4222e7:	xor    dh,al
  4222e9:	pop    esp
  4222ea:	aam    0x88
  4222ec:	popa   
  4222ed:	dec    eax
  4222ee:	frstor [ebx+0x1b]
  4222f1:	in     al,dx
  4222f2:	into   
  4222f3:	jbe    0x39dc9f84
  4222f9:	cmp    ebx,DWORD PTR [eax-0x7a5c1cdf]
  4222ff:	mov    ah,0x24
  422301:	fdivr  DWORD PTR ds:0xad8701c1
  422307:	push   ebx
  422308:	jae    0x422363
  42230a:	inc    eax
  42230b:	loop   0x4222b4
  42230d:	pop    edi
  42230e:	inc    esi
  42230f:	jl     0x4222bb
  422311:	call   0x652152f6
  422316:	mov    edx,0x49eae8cc
  42231b:	test   al,0xf4
  42231d:	test   al,0xd
  42231f:	mov    WORD PTR [ebx-0x2fffa8b3],?
  422325:	shl    DWORD PTR [edx],0xab
  422328:	leave  
  422329:	test   eax,0xfb4ea025
  42232e:	mov    edi,edi
  422330:	sub    cl,cl
  422332:	add    DWORD PTR [edi],ecx
  422334:	shr    esi,0x84
  422337:	cmp    eax,0x1ce47cc3
  42233c:	shr    dl,0x9f
  42233f:	mov    BYTE PTR [ecx+0x1c],bl
  422342:	dec    ebx
  422343:	mul    BYTE PTR [eax]
  422345:	mov    cl,0xd8
  422347:	pop    ds
  422348:	cld    
  422349:	push   ebx
  42234a:	pop    ds
  42234b:	add    ax,0xf041
  42234f:	add    eax,0x20b98703
  422354:	mov    dh,0xfb
  422356:	and    al,0x78
  422358:	test   al,0x5
  42235a:	jmp    0x2634:0x126251b6
  422361:	sbb    eax,0x34caf7f
  422366:	jbe    0x4223d0
  422368:	ror    bl,0x44
  42236b:	aad    0xc9
  42236d:	ret    0x7b0
  422370:	mov    bh,0xde
  422372:	loopne 0x4223e8
  422374:	inc    eax
  422375:	sub    al,0x9a
  422377:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422378:	out    0x27,eax
  42237a:	sti    
  42237b:	cmc    
  42237c:	fimul  WORD PTR [eax]
  42237e:	cmp    DWORD PTR ds:0xcd810f8f,0xffffffe0
  422385:	imul   ebp,esi,0xffffff92
  422388:	hlt    
  422389:	sar    DWORD PTR [esi],cl
  42238b:	popa   
  42238c:	ret    0x90e6
  42238f:	cld    
  422390:	xchg   ebp,eax
  422391:	sub    BYTE PTR [edi*2+0x295ee9e7],ch
  422398:	sti    
  422399:	push   esi
  42239a:	es stos DWORD PTR es:[edi],eax
  42239c:	dec    eax
  42239d:	imul   ebp,DWORD PTR ds:0xd2fdf476,0x0
  4223a4:	(bad)  
  4223a5:	in     eax,0x45
  4223a7:	sbb    eax,0x5b27afb0
  4223ac:	dec    esi
  4223ad:	sbb    esp,DWORD PTR ds:0x4b5bc3f6
  4223b3:	pop    ecx
  4223b4:	das    
  4223b5:	into   
  4223b6:	cmp    BYTE PTR [ecx-0x60],dh
  4223b9:	or     BYTE PTR [ecx+edi*4-0x3b431b9c],ch
  4223c0:	outs   dx,BYTE PTR ds:[esi]
  4223c1:	sbb    dl,dl
  4223c3:	jae    0x422409
  4223c5:	aam    0xa2
  4223c7:	sub    bh,bl
  4223c9:	mov    esp,0x1d80e682
  4223ce:	cmp    BYTE PTR [esi-0xb83b6b1],0xd7
  4223d5:	int3   
  4223d6:	call   0x5751ecb9
  4223db:	rcr    ecx,0xb7
  4223de:	clc    
  4223df:	fchs   
  4223e1:	stos   BYTE PTR es:[edi],al
  4223e2:	xor    ch,al
  4223e4:	lods   eax,DWORD PTR ds:[esi]
  4223e5:	lea    esp,[eax]
  4223e7:	sub    BYTE PTR [edi],0x8f
  4223ea:	loop   0x42236d
  4223ec:	les    esi,FWORD PTR [ebx]
  4223ee:	sub    BYTE PTR ds:0x16479adc,cl
  4223f4:	pop    ebx
  4223f5:	es nop
  4223f7:	sub    eax,0xc7882e11
  4223fc:	jb     0x42238f
  4223fe:	mov    eax,0x31e89371
  422403:	int    0x60
  422405:	dec    ebx
  422406:	mov    al,BYTE PTR [ebp+0x45]
  422409:	mov    eax,0x83489bef
  42240e:	add    edx,ebp
  422410:	ins    DWORD PTR es:[edi],dx
  422411:	out    0x69,al
  422413:	xchg   ebx,eax
  422414:	int    0xdd
  422416:	pop    ecx
  422417:	pop    ebx
  422418:	stos   BYTE PTR es:[edi],al
  422419:	cmp    esp,DWORD PTR [edi+0x10]
  42241c:	xor    eax,0x7bf61a32
  422421:	mov    bl,0xa6
  422423:	scas   eax,DWORD PTR es:[edi]
  422424:	and    dh,BYTE PTR [eax+0x67db17fd]
  42242a:	inc    ecx
  42242b:	jg     0x42245f
  42242d:	xor    eax,0x562fdc2d
  422432:	ins    DWORD PTR es:[edi],dx
  422433:	data16 loop 0x422424
  422436:	dec    ebp
  422437:	punpckldq mm5,DWORD PTR [ebx+0x12221ef8]
  42243e:	push   esp
  42243f:	sub    eax,0xd60eef92
  422444:	pusha  
  422445:	and    bh,BYTE PTR [edx-0x29597a9d]
  42244b:	pop    ebp
  42244c:	aam    0xcb
  42244e:	rol    DWORD PTR [esp+eax*2],1
  422451:	push   edi
  422452:	loope  0x422425
  422454:	int    0x39
  422456:	ja     0x422414
  422458:	cmp    al,BYTE PTR [eax]
  42245a:	adc    edi,ecx
  42245c:	gs es scas eax,DWORD PTR es:[edi]
  42245f:	push   ecx
  422460:	jo     0x4223f2
  422462:	popa   
  422463:	xor    DWORD PTR [edi+0x3a5bcfad],esi
  422469:	inc    esp
  42246a:	pop    ds
  42246b:	sub    esp,DWORD PTR [edi+0x38602ae2]
  422471:	mov    bh,0x44
  422473:	int    0x40
  422475:	mov    edi,0x82fdf472
  42247a:	ror    DWORD PTR [ebp-0x6ea9c831],1
  422480:	out    dx,al
  422481:	fidivr WORD PTR [ebp-0x488fbd6e]
  422487:	in     eax,0x9a
  422489:	add    BYTE PTR [edi+edx*4+0x6c78077f],0x13
  422491:	jae    0x4224c0
  422493:	fist   DWORD PTR [edi+ebx*4-0x2c38d4a9]
  42249a:	jl     0x4224ef
  42249c:	xchg   ebx,eax
  42249d:	icebp  
  42249e:	ins    DWORD PTR es:[edi],dx
  42249f:	nop
  4224a0:	push   0x20
  4224a2:	adc    eax,0xc3adeb46
  4224a7:	xor    al,0xe5
  4224a9:	retf   
  4224aa:	sub    al,0x51
  4224ac:	or     al,0x27
  4224ae:	call   0xd93e:0x2b7122ec
  4224b5:	push   ecx
  4224b6:	mov    ch,0x16
  4224b8:	dec    eax
  4224b9:	mov    dh,0xcf
  4224bb:	popf   
  4224bc:	imul   esp,esp,0xb8e71f0e
  4224c2:	adc    al,0xe8
  4224c4:	adc    esi,DWORD PTR [ebx-0x29a4457d]
  4224ca:	push   cs
  4224cb:	(bad)  
  4224cc:	fadd   st(5),st
  4224ce:	jnp    0x422503
  4224d0:	pusha  
  4224d1:	not    DWORD PTR [esi+edx*8-0x2]
  4224d5:	jae    0x42249c
  4224d7:	hlt    
  4224d8:	mov    esp,0xd96d0a69
  4224dd:	lahf   
  4224de:	push   edx
  4224df:	repnz pop eax
  4224e1:	test   eax,0xb3a7675e
  4224e6:	push   esi
  4224e7:	jp     0x42254c
  4224e9:	pop    es
  4224ea:	xchg   esp,eax
  4224eb:	clc    
  4224ec:	mov    dl,0x22
  4224ee:	sbb    dl,BYTE PTR [ebp+0x5819e5e4]
  4224f4:	add    cl,dl
  4224f6:	lods   eax,DWORD PTR ds:[esi]
  4224f7:	div    BYTE PTR [esi]
  4224f9:	js     0x42255a
  4224fb:	fwait
  4224fc:	outs   dx,BYTE PTR ds:[esi]
  4224fd:	or     DWORD PTR [edi+0x0],edx
  422500:	add    esi,ebp
  422502:	std    
  422503:	jl     0x4224d5
  422505:	mov    cl,0xba
  422507:	fld    TBYTE PTR [ebp+0x3f7bf495]
  42250d:	fiadd  WORD PTR [eax+esi*8]
  422510:	xor    eax,0xe0a4155
  422515:	sbb    bl,BYTE PTR [eax]
  422517:	mov    dh,0x83
  422519:	or     al,0x7
  42251b:	adc    BYTE PTR [ebx+0x27773a4a],dh
  422521:	icebp  
  422522:	pop    ebp
  422523:	mov    eax,ds:0x7fb9ac37
  422528:	mov    ds:0x1e7611ec,al
  42252d:	int    0x27
  42252f:	fild   DWORD PTR [ebp+0x3a66ab85]
  422535:	fadd   QWORD PTR [ebx+0x48184113]
  42253b:	jl     0x422510
  42253d:	test   DWORD PTR [ebx+0x7faeb339],ebx
  422543:	js     0x4224f4
  422545:	in     al,dx
  422546:	mov    dh,0x10
  422548:	or     DWORD PTR [ecx],0x2e2cfd8f
  42254e:	pop    ds
  42254f:	push   ebp
  422550:	aam    0x4
  422552:	xlat   BYTE PTR ds:[ebx]
  422553:	(bad)  
  422554:	adc    esi,edi
  422556:	add    DWORD PTR [edi+ecx*8+0x5f5efad0],esi
  42255d:	mov    ds:0xc4314815,eax
  422562:	add    edx,ebp
  422564:	sbb    DWORD PTR [ebx+0x1d589453],esp
  42256a:	fs fwait
  42256c:	rcl    BYTE PTR [esi],0x35
  42256f:	int3   
  422570:	jge    0x422508
  422572:	and    BYTE PTR ds:0x9987c9d1,cl
  422578:	adc    BYTE PTR [ebp+0x6e4d2a5f],ah
  42257e:	jmp    0x58a0:0x71f0a6cc
  422585:	sub    al,BYTE PTR [ebx+0x7a573ce5]
  42258b:	out    0xfb,eax
  42258d:	adc    ebx,DWORD PTR [ebp+ecx*2+0x5a9f6c4b]
  422594:	pusha  
  422595:	hlt    
  422596:	mov    ds:0x27a0d07b,eax
  42259b:	in     al,0xc4
  42259d:	sar    BYTE PTR [ebx+0x7b],1
  4225a0:	lock pop ecx
  4225a2:	scas   eax,DWORD PTR es:[edi]
  4225a3:	imul   ebp,DWORD PTR [ecx-0x20fc0a22],0x797ee50a
  4225ad:	inc    esp
  4225ae:	out    0x6,al
  4225b0:	js     0x422563
  4225b2:	push   edx
  4225b3:	inc    ebp
  4225b4:	repz mul DWORD PTR [edx+0x49faf88b]
  4225bb:	(bad)  
  4225bd:	cmp    al,0xe
  4225bf:	lock xchg ecx,eax
  4225c1:	push   esi
  4225c2:	repnz pop es
  4225c4:	jp     0x4225bf
  4225c6:	dec    esp
  4225c7:	add    DWORD PTR [ebx+ecx*2-0x244fe215],ebp
  4225ce:	imul   ch
  4225d0:	test   BYTE PTR [esi+0xf],ch
  4225d3:	out    0x5f,al
  4225d5:	mov    bh,0xd9
  4225d7:	fwait
  4225d8:	sbb    ebx,DWORD PTR [edx-0x5a963e01]
  4225de:	gs nop
  4225e0:	aas    
  4225e1:	sahf   
  4225e2:	(bad)  [esi-0x31e70a12]
  4225e8:	sub    DWORD PTR [edx],0x1f
  4225eb:	and    bl,BYTE PTR [ebx-0x5d]
  4225ee:	test   eax,0xe20a7123
  4225f3:	push   ss
  4225f4:	xor    BYTE PTR [esi-0xd],bl
  4225f7:	pop    eax
  4225f8:	lock mov eax,ds:0x9bd4373c
  4225fe:	aas    
  4225ff:	cmc    
  422600:	jmp    0xcecbf7cd
  422605:	lea    esp,[edi-0x8]
  422608:	ja     0x42262e
  42260a:	pop    ecx
  42260b:	bound  ebx,QWORD PTR [ecx+edi*4]
  42260e:	ror    BYTE PTR [eax],cl
  422610:	mov    ah,0x6a
  422612:	fstp   DWORD PTR [ebp-0x61]
  422615:	adc    bh,BYTE PTR [ebx]
  422617:	cmp    esi,DWORD PTR [edx-0x619759c]
  42261d:	sbb    DWORD PTR [edi+0xd],esp
  422620:	xchg   esp,eax
  422621:	aam    0xca
  422623:	fdivrp st(0),st
  422625:	mov    esp,0x6499d138
  42262a:	nop
  42262b:	cmp    cl,BYTE PTR [eax-0x5ee301ba]
  422631:	push   edx
  422632:	dec    eax
  422633:	xchg   edi,eax
  422634:	push   ss
  422635:	xor    DWORD PTR [ecx],esp
  422637:	imul   ebx,DWORD PTR [esi-0x593efb90],0xd54e2591
  422641:	xor    al,0xee
  422643:	lods   eax,DWORD PTR cs:[esi]
  422645:	add    dh,BYTE PTR ds:0xbe7bdc19
  42264b:	stos   DWORD PTR es:[edi],eax
  42264c:	push   ds
  42264d:	jge    0x4226ae
  42264f:	aas    
  422650:	pusha  
  422651:	mov    ecx,0xdc04aa75
  422656:	dec    ebp
  422657:	pushf  
  422658:	addr16 pop eax
  42265a:	fdiv   QWORD PTR [ebp+0x4ed5184]
  422660:	push   ecx
  422661:	aam    0xfd
  422663:	ja     0x4225f4
  422665:	or     al,BYTE PTR [eax-0x45]
  422668:	stos   BYTE PTR es:[edi],al
  422669:	push   0xc957a4b7
  42266e:	sub    bh,BYTE PTR [edx+0x4cf60070]
  422674:	cmp    al,0xb4
  422676:	test   eax,0x1f4cf63
  42267b:	cmp    BYTE PTR [ebx],0xf1
  42267e:	jae    0x4226b8
  422680:	test   BYTE PTR [ecx-0x4f],dl
  422683:	fstp   DWORD PTR ds:[edi+0x61]
  422687:	and    BYTE PTR [ebp-0x5787fc2f],cl
  42268d:	sub    cl,BYTE PTR [esi+edi*1+0x28383ec3]
  422694:	xor    dl,BYTE PTR [ecx]
  422696:	sub    eax,eax
  422698:	mov    dl,0x2
  42269a:	dec    esp
  42269b:	xchg   edi,eax
  42269c:	ss in  al,dx
  42269e:	(bad)  
  42269f:	mov    bh,0x28
  4226a1:	mov    cl,0x24
  4226a3:	int3   
  4226a4:	sahf   
  4226a5:	cs loope 0x422666
  4226a8:	mov    edi,0x1ccf6633
  4226ad:	das    
  4226ae:	ja     0x4226e9
  4226b0:	push   es
  4226b1:	push   es
  4226b2:	sub    BYTE PTR [edx-0x7d],ch
  4226b5:	daa    
  4226b6:	add    DWORD PTR [ecx-0x40],ebp
  4226b9:	jle    0x422649
  4226bb:	or     bl,ch
  4226bd:	sbb    edi,ecx
  4226bf:	mov    ebp,0x4eb30005
  4226c4:	dec    esi
  4226c5:	ins    BYTE PTR es:[edi],dx
  4226c6:	mov    bh,BYTE PTR [ecx-0x47]
  4226c9:	xor    bh,BYTE PTR [ebx-0x62cd8c33]
  4226cf:	mov    edx,0x64aa7dda
  4226d4:	mov    ecx,0x6aa90984
  4226d9:	inc    ebp
  4226da:	es and eax,0x67299c9
  4226e0:	fwait
  4226e1:	or     eax,0x7d00c1c3
  4226e6:	loope  0x422763
  4226e8:	sar    ch,cl
  4226ea:	leave  
  4226eb:	cs xor al,0xf1
  4226ee:	sahf   
  4226ef:	fiadd  WORD PTR [ecx+0x369f428a]
  4226f5:	push   cs
  4226f6:	push   ebp
  4226f7:	(bad)  
  4226f8:	dec    edi
  4226f9:	adc    eax,0xc6153736
  4226fe:	in     eax,dx
  4226ff:	inc    esi
  422700:	cmp    al,0xc1
  422702:	bound  ebp,QWORD PTR [edi+0x74ac1f67]
  422708:	rcr    BYTE PTR [edx],0x63
  42270b:	fisttp DWORD PTR [edi+eax*8]
  42270e:	ret    
  42270f:	inc    eax
  422710:	add    esi,DWORD PTR [edi+0x7da2a311]
  422716:	or     cl,BYTE PTR [edx+0x9]
  422719:	push   cs
  42271a:	aad    0xe0
  42271c:	mov    ds:0x4b1a2cfc,al
  422721:	rcr    bh,0xdd
  422724:	inc    edx
  422725:	jnp    0x4226ce
  422727:	and    ebx,ebx
  422729:	sti    
  42272a:	push   cs
  42272b:	sub    eax,0x825f8cbf
  422730:	jecxz  0x4226e3
  422732:	jg     0x4226d5
  422734:	xchg   esi,eax
  422735:	xor    BYTE PTR [edx+0x5a1916d1],bl
  42273b:	fisubr DWORD PTR [edx-0x27]
  42273e:	jmp    0x3ff0f7e4
  422743:	pop    eax
  422744:	ins    DWORD PTR es:[edi],dx
  422745:	(bad)  
  422746:	hlt    
  422747:	and    BYTE PTR [edx+0xa],bl
  42274a:	inc    esp
  42274b:	cmp    BYTE PTR [ebx-0x32],0x5c
  42274f:	jecxz  0x422733
  422751:	jno    0x4227af
  422753:	ds ja  0x4226fb
  422756:	and    BYTE PTR [ecx+edi*8-0x12],0x27
  42275b:	rol    DWORD PTR ds:0x5293d4d,cl
  422761:	jae    0x4227bb
  422763:	cld    
  422764:	jbe    0x422736
  422766:	cs pop ss
  422768:	jne    0x42275e
  42276a:	inc    ebx
  42276b:	sub    al,0x24
  42276d:	and    ebx,DWORD PTR [ecx-0x7dab7e0]
  422773:	adc    ch,cl
  422775:	ins    BYTE PTR es:[edi],dx
  422776:	pop    ebp
  422777:	jle    0x42274a
  422779:	bound  esi,QWORD PTR [ebx+eiz*8]
  42277c:	outs   dx,BYTE PTR ds:[esi]
  42277d:	sub    eax,0xc3530fd
  422782:	push   ebp
  422783:	repz jnp 0x4227b5
  422786:	adc    edi,eax
  422788:	cmp    eax,0x9d1eecc9
  42278d:	pop    esi
  42278e:	dec    ebp
  42278f:	push   ebp
  422790:	int3   
  422791:	jo     0x4227c2
  422793:	popa   
  422794:	das    
  422795:	shr    DWORD PTR [ebx],0x82
  422798:	ret    0x3329
  42279b:	rcr    BYTE PTR [ecx+0x32],cl
  42279e:	xchg   esp,eax
  42279f:	mov    dh,0x3b
  4227a1:	xlat   BYTE PTR ds:[ebx]
  4227a2:	popfw  
  4227a4:	or     BYTE PTR [ecx],0xab
  4227a7:	mov    WORD PTR [esi+0xf],?
  4227aa:	ins    DWORD PTR es:[edi],dx
  4227ab:	pop    ecx
  4227ac:	call   0xc87a29ee
  4227b1:	sub    al,0xfb
  4227b3:	in     eax,dx
  4227b4:	pop    ss
  4227b5:	ror    BYTE PTR [ebp-0x66],1
  4227b8:	jno    0x42276b
  4227ba:	cdq    
  4227bb:	sbb    DWORD PTR [edi-0x14],edx
  4227be:	iret   
  4227bf:	sbb    DWORD PTR [ecx-0x16],0xf6a31120
  4227c6:	or     bl,cl
  4227c8:	pop    ss
  4227c9:	add    BYTE PTR [ecx],dl
  4227cb:	mov    ds:0x4b2c010d,eax
  4227d0:	icebp  
  4227d1:	inc    ebp
  4227d2:	jl     0x422781
  4227d4:	add    dl,ah
  4227d6:	xor    DWORD PTR [ebx+0x79e6ecf8],ebp
  4227dc:	or     eax,0x7fabb277
  4227e1:	adc    al,0xa0
  4227e3:	lds    edi,FWORD PTR [edi]
  4227e5:	push   eax
  4227e6:	addr16 sub al,0x7e
  4227e9:	add    ch,dl
  4227eb:	push   es
  4227ec:	inc    edi
  4227ed:	mov    dh,0x50
  4227ef:	sti    
  4227f0:	jns    0x4227f0
  4227f2:	pop    ds
  4227f3:	mov    dl,0xbc
  4227f5:	nop
  4227f6:	inc    esp
  4227f7:	jb     0x422804
  4227f9:	xor    bh,BYTE PTR [eax]
  4227fb:	and    eax,0x194cff14
  422800:	push   edx
  422801:	fidivr DWORD PTR [esi-0x23]
  422804:	cmp    eax,0xd6a7f56c
  422809:	push   ds
  42280a:	fnstenv [edi+0x24fc0bd5]
  422810:	xchg   esi,eax
  422811:	call   0xfa9c27b6
  422816:	rcl    DWORD PTR [edx+0x72a6c4c],cl
  42281c:	loope  0x42285a
  42281e:	rol    DWORD PTR [ecx-0x5d],1
  422821:	sbb    DWORD PTR [ecx],edi
  422823:	lods   al,BYTE PTR ds:[esi]
  422824:	sub    BYTE PTR [esi],bl
  422826:	rcl    BYTE PTR [ebx+0x3c],0x9
  42282a:	jg     0x4228a1
  42282c:	mov    bl,0xff
  42282e:	adc    al,ch
  422830:	jmp    0x4228b1
  422832:	dec    esi
  422833:	mov    al,0xfa
  422835:	loop   0x422896
  422837:	mov    BYTE PTR ds:0xf577ada0,al
  42283d:	bsr    esi,DWORD PTR [ebp+eax*1-0x7b]
  422842:	jecxz  0x4227f7
  422844:	(bad)  
  422845:	adc    eax,0xfbaa4e61
  42284a:	pop    es
  42284b:	(bad)  
  42284c:	jbe    0x4228be
  42284e:	in     al,dx
  42284f:	xchg   ebp,eax
  422850:	and    dl,BYTE PTR ds:0xb313f8c0
  422856:	pop    ebp
  422857:	hlt    
  422858:	mov    bh,0xeb
  42285a:	mov    esp,0xba7d935e
  42285f:	lea    ecx,[esi+0x33]
  422862:	adc    eax,0x57cfaa53
  422867:	mov    ecx,0x1f8c0ef1
  42286c:	mov    ah,0x4b
  42286e:	push   es
  42286f:	xor    BYTE PTR [ecx],bl
  422871:	jmp    0x73f0:0x81045625
  422878:	out    dx,al
  422879:	or     eax,0xe2a90f35
  42287e:	xor    DWORD PTR [esi+0x7ae629e7],eax
  422884:	aad    0x59
  422886:	jbe    0x4228b3
  422888:	(bad)
  42288b:	lea    esi,[ebx]
  42288d:	fimul  DWORD PTR [ebx-0x19]
  422890:	dec    ebp
  422891:	xchg   ecx,eax
  422892:	mov    eax,ds:0xdddf45f3
  422897:	cwde   
  422898:	xchg   edi,eax
  422899:	stos   DWORD PTR es:[edi],eax
  42289a:	lea    edx,[esi]
  42289c:	mov    ch,BYTE PTR [edx-0x2a]
  42289f:	repnz pop esp
  4228a1:	jo     0x422871
  4228a3:	mov    bl,0x90
  4228a5:	jnp    0x4228ec
  4228a7:	gs popf 
  4228a9:	shr    DWORD PTR [ecx-0x34e0d10c],1
  4228af:	fcomp  DWORD PTR [ecx+0x53]
  4228b2:	jl     0x422919
  4228b4:	ins    BYTE PTR es:[edi],dx
  4228b5:	dec    ebp
  4228b6:	fidiv  DWORD PTR [ebx]
  4228b8:	pop    esi
  4228b9:	dec    edx
  4228ba:	imul   esp,DWORD PTR [eax-0x686510c0],0x5e8942fc
  4228c4:	jnp    0x4228c1
  4228c6:	adc    ah,BYTE PTR [eax]
  4228c8:	mov    eax,0x1ee14915
  4228cd:	push   esp
  4228ce:	push   cs
  4228cf:	repz mov esp,0x8cba3e3b
  4228d5:	es mov eax,0x7f1c5556
  4228db:	dec    edx
  4228dc:	call   0x78cf:0x9da9a8bf
  4228e3:	jle    0x422958
  4228e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4228e6:	adc    al,0x9a
  4228e8:	fstp   QWORD PTR [ebx]
  4228ea:	les    esp,FWORD PTR [ebx]
  4228ec:	add    bl,bh
  4228ee:	fld    TBYTE PTR [ebx+0x5e5d0f6]
  4228f4:	(bad)  
  4228f5:	aam    0x65
  4228f7:	lock push es
  4228f9:	call   0x140c3e48
  4228fe:	jg     0x42297d
  422900:	sub    al,0xda
  422902:	pop    ecx
  422903:	shl    DWORD PTR [ebp+0x47],1
  422906:	mov    ebx,esi
  422908:	in     al,dx
  422909:	mov    al,0x2
  42290b:	xor    ah,BYTE PTR [esi]
  42290d:	jl     0x42297e
  42290f:	mov    bh,0x9e
  422911:	sub    bh,ch
  422913:	pop    edi
  422914:	call   0xca6db5f1
  422919:	les    esp,FWORD PTR [edi+0x2c]
  42291c:	stos   DWORD PTR es:[edi],eax
  42291d:	ret    
  42291e:	sbb    BYTE PTR [edi+0x1baf137c],ah
  422924:	bound  edi,QWORD PTR [eax-0x58]
  422927:	and    al,0xd9
  422929:	jno    0x4228ee
  42292b:	mov    dl,0x4a
  42292d:	imul   DWORD PTR ss:[ebx]
  422930:	ja     0x422905
  422932:	or     dl,dl
  422934:	iret   
  422935:	sbb    DWORD PTR [esi+0x5f],edi
  422938:	rcl    dl,0xd1
  42293b:	lods   al,BYTE PTR ds:[esi]
  42293c:	xchg   ebp,eax
  42293d:	cli    
  42293e:	inc    ebx
  42293f:	mov    ds:0x7776ecb8,eax
  422944:	sub    cl,BYTE PTR [edx+0x5011bb1f]
  42294a:	(bad)  
  42294c:	bound  esi,QWORD PTR [ecx+esi*1+0x33]
  422950:	jne    0x422911
  422952:	jnp    0x422967
  422954:	cmp    edi,DWORD PTR [edi]
  422956:	xor    cl,BYTE PTR [ebp+0x36db703c]
  42295c:	inc    esp
  42295d:	mov    edi,ecx
  42295f:	arpl   sp,ax
  422961:	and    al,0xa8
  422963:	mov    esp,0xb203730a
  422968:	jmp    0x42295b
  42296a:	loope  0x42299a
  42296c:	ins    BYTE PTR es:[edi],dx
  42296d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42296e:	ficomp DWORD PTR [eax-0x67]
  422971:	xchg   BYTE PTR [ecx],cl
  422973:	pop    ss
  422974:	out    dx,eax
  422975:	dec    ebp
  422976:	nop
  422977:	ins    BYTE PTR es:[edi],dx
  422978:	mov    ebx,0x908100a8
  42297d:	dec    ebx
  42297f:	jmp    0xb016e500
  422984:	and    al,0xb3
  422986:	(bad)  
  422987:	and    eax,0xc89f6859
  42298c:	(bad)  
  42298d:	and    esp,DWORD PTR ds:0x957f1bae
  422993:	std    
  422994:	xchg   BYTE PTR [edi+0x75],ah
  422997:	or     dh,BYTE PTR [edx-0x40]
  42299a:	sbb    BYTE PTR [esi],al
  42299c:	xor    ebx,ebx
  42299e:	cmp    eax,0x20564057
  4229a3:	add    eax,0xb8c0338f
  4229a8:	stc    
  4229a9:	inc    ebx
  4229aa:	adc    al,0x26
  4229ac:	lods   al,BYTE PTR ds:[esi]
  4229ad:	cli    
  4229ae:	and    DWORD PTR [esi],0x4c
  4229b1:	mov    WORD PTR [ebx+eiz*1+0x5a],?
  4229b5:	mov    edx,0x2d9aec55
  4229ba:	pop    ebp
  4229bb:	mov    ebx,0x109e185e
  4229c0:	stos   DWORD PTR es:[edi],eax
  4229c1:	adc    ebp,0xb029adaa
  4229c7:	xor    eax,0xa1a7c0a2
  4229cc:	add    dl,bl
  4229ce:	data16 aas 
  4229d0:	fbld   TBYTE PTR [eax]
  4229d2:	arpl   sp,sp
  4229d4:	mov    esi,0xc492b917
  4229d9:	xlat   BYTE PTR ds:[ebx]
  4229da:	stos   DWORD PTR es:[edi],eax
  4229db:	ss cmp bh,bh
  4229de:	out    dx,eax
  4229df:	and    al,BYTE PTR ds:0x1cda192f
  4229e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229e6:	stos   DWORD PTR es:[edi],eax
  4229e7:	dec    eax
  4229e8:	sbb    eax,0xbfbc71b9
  4229ed:	cwde   
  4229ee:	mov    eax,0x3bcf0148
  4229f3:	mov    dl,0xf5
  4229f5:	xor    ch,BYTE PTR [esp-0x6e]
  4229f9:	xor    esp,esp
  4229fb:	and    BYTE PTR [eax-0x4b503459],dl
  422a01:	inc    ecx
  422a02:	hlt    
  422a03:	shr    dl,cl
  422a05:	inc    edi
  422a06:	cs jmp 0x422a23
  422a09:	mov    es,WORD PTR [ebx]
  422a0b:	xchg   BYTE PTR [eiz*8-0x1f5e73d3],ch
  422a12:	jle    0x4229a9
  422a14:	or     BYTE PTR [eax-0xc4a5a27],al
  422a1a:	mov    cl,0x4f
  422a1c:	sbb    DWORD PTR [eax+0x5f],ebp
  422a1f:	mov    ebp,0x165e8a17
  422a24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a25:	stos   DWORD PTR es:[edi],eax
  422a26:	ss iret 
  422a28:	aas    
  422a29:	mov    al,ds:0x46dd3c34
  422a2e:	std    
  422a2f:	dec    edx
  422a30:	xchg   ebp,eax
  422a31:	and    al,bh
  422a33:	jmp    0xa725:0xa84d3935
  422a3a:	xor    ah,ch
  422a3c:	jno    0x422aa7
  422a3e:	shl    BYTE PTR [eax+0x49e869aa],cl
  422a44:	daa    
  422a45:	das    
  422a46:	ja     0x422aa8
  422a48:	sti    
  422a49:	or     BYTE PTR [ecx-0x4c],al
  422a4c:	pop    ebp
  422a4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a4e:	(bad)  
  422a4f:	stc    
  422a50:	mov    al,0x35
  422a52:	xor    ebx,DWORD PTR [ebx+edi*2+0x59]
  422a56:	into   
  422a57:	sbb    al,0x29
  422a59:	jp     0x422a27
  422a5b:	or     edx,ecx
  422a5d:	cmc    
  422a5e:	inc    ecx
  422a5f:	loopne 0x422aab
  422a61:	sbb    al,0xce
  422a63:	dec    esp
  422a64:	addr16 pop ebp
  422a66:	test   BYTE PTR [edx+0x5e84932b],al
  422a6c:	mov    edx,0x503ac8cf
  422a71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a72:	or     al,0x51
  422a74:	dec    edx
  422a75:	sbb    BYTE PTR [ecx],cl
  422a77:	vpminsq zmm6{k5}{z},zmm7,zmm4
  422a7d:	xchg   esp,eax
  422a7e:	push   ecx
  422a7f:	fiadd  DWORD PTR [ebx+0xf]
  422a82:	fimul  WORD PTR [ebp+edi*4+0x4e6b41be]
  422a89:	adc    DWORD PTR [ebp+0x62],esi
  422a8c:	hlt    
  422a8d:	dec    edx
  422a8e:	ror    DWORD PTR [ecx],0x94
  422a91:	ret    
  422a92:	inc    ecx
  422a93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a94:	cld    
  422a95:	inc    eax
  422a96:	out    0xd6,al
  422a98:	inc    edi
  422a99:	ror    DWORD PTR [ebp+0x31ef1eae],0x90
  422aa0:	lahf   
  422aa1:	sub    BYTE PTR [esi+0x666d2d51],ch
  422aa7:	aaa    
  422aa8:	fld1   
  422aaa:	sbb    dh,ah
  422aac:	aad    0xe0
  422aae:	mov    ah,ah
  422ab0:	and    BYTE PTR [ecx-0x58],cl
  422ab3:	mov    edx,0x494c3dbe
  422ab8:	jecxz  0x422af2
  422aba:	ds adc eax,0x417d7bae
  422ac0:	sbb    dl,BYTE PTR [eax-0x9c91549]
  422ac6:	call   0x2cab:0xc518b8e0
  422acd:	loop   0x422abb
  422acf:	mov    eax,ds:0x9f9699aa
  422ad4:	addr16 adc al,0x5c
  422ad7:	call   0x8ebe:0xc92bd7ac
  422ade:	pop    ebx
  422adf:	adc    esi,ebx
  422ae1:	je     0x422afb
  422ae3:	je     0x422ac7
  422ae5:	sbb    DWORD PTR [ebx+eiz*4],edi
  422ae8:	sti    
  422ae9:	call   0x758f843e
  422aee:	popf   
  422aef:	mov    ecx,0xfb257a4
  422af4:	lods   al,BYTE PTR ds:[esi]
  422af5:	test   eax,0xc602782
  422afa:	test   al,0x4b
  422afc:	xchg   edi,eax
  422afd:	out    dx,eax
  422afe:	and    eax,0x248c63f5
  422b03:	mov    al,ds:0x9c464d57
  422b08:	je     0x422afa
  422b0a:	mov    ?,WORD PTR [ebx-0x30]
  422b0d:	ins    BYTE PTR es:[edi],dx
  422b0e:	test   DWORD PTR [ecx],ebp
  422b10:	jmp    0x422b21
  422b12:	cmp    ah,BYTE PTR [ebx+eiz*2-0x316ccdc1]
  422b19:	or     eax,0xf55fed18
  422b1e:	fstp   DWORD PTR [edi]
  422b20:	push   0x30f1533e
  422b25:	test   esi,esi
  422b27:	sub    eax,0xa1cf2c50
  422b2c:	cmp    al,BYTE PTR [eax]
  422b2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b2f:	jne    0x422b02
  422b31:	inc    ebx
  422b32:	gs dec esp
  422b34:	in     al,0xf5
  422b36:	jg     0x422b72
  422b38:	mov    DWORD PTR [ebx+ebx*8+0x56],ecx
  422b3c:	(bad)  [edi+0xe0bfdf7]
  422b42:	fimul  DWORD PTR [eax-0x3ef87050]
  422b48:	jmp    0x422aec
  422b4a:	add    BYTE PTR [ebp+0xfe848f9],0x45
  422b51:	mov    ah,0xcb
  422b53:	or     BYTE PTR [eax],dh
  422b55:	imul   eax,ebp,0xfffffffc
  422b58:	in     al,0x66
  422b5a:	iret   
  422b5b:	mov    ds:0x2ed19545,al
  422b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b61:	sub    al,0xb1
  422b63:	push   ds
  422b64:	stc    
  422b65:	leave  
  422b66:	call   0x19fb6eef
  422b6b:	mov    edx,0x6a710cc4
  422b70:	out    dx,al
  422b71:	pusha  
  422b72:	lahf   
  422b73:	(bad)  
  422b74:	lds    ecx,FWORD PTR [eax-0x5cb66d95]
  422b7a:	mov    ebp,ecx
  422b7c:	xchg   ecx,eax
  422b7d:	and    DWORD PTR [ebp+ecx*8+0x7f44094f],edx
  422b84:	jmp    0xcebf:0x7db84ebb
  422b8b:	js     0x422b2b
  422b8d:	fild   WORD PTR [ebp+0x1ad75490]
  422b93:	push   0xaa26f1a6
  422b98:	mov    esi,0x41530c99
  422b9d:	xchg   edi,eax
  422b9e:	loope  0x422b80
  422ba0:	mov    al,0x73
  422ba2:	mov    ds:0x3ef70858,eax
  422ba7:	or     edx,DWORD PTR [ebp-0x1bc955d9]
  422bad:	sub    DWORD PTR [ebx+edi*8],eax
  422bb0:	push   0x4e
  422bb2:	cmp    BYTE PTR [edx],dl
  422bb4:	jmp    0x422b8c
  422bb6:	cmp    al,BYTE PTR [ebx-0x75]
  422bb9:	fwait
  422bba:	and    BYTE PTR ds:0x1a5266f5,bh
  422bc0:	mov    cl,0x34
  422bc2:	lea    ebx,[eax]
  422bc4:	xchg   esi,eax
  422bc5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422bc6:	mov    cl,0xc7
  422bc8:	sub    esp,DWORD PTR [eax]
  422bca:	push   0x36dc4b02
  422bcf:	adc    BYTE PTR [ecx-0x39],bl
  422bd2:	out    0x89,eax
  422bd4:	adc    ebx,ebx
  422bd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422bd7:	dec    ebx
  422bd9:	ret    0xd564
  422bdc:	imul   eax,DWORD PTR [edi+0x5cd82997],0x3750bb79
  422be6:	aad    0x89
  422be8:	cmp    dh,ah
  422bea:	lea    ebp,[edx+0x1e]
  422bed:	imul   ecx
  422bef:	cmp    DWORD PTR [esi-0x6bd3c46e],esp
  422bf5:	les    eax,FWORD PTR [ebp+0xbd84054]
  422bfb:	(bad)  
  422bfc:	lods   al,BYTE PTR ds:[esi]
  422bfd:	pop    ds
  422bfe:	imul   ecx,ebx,0xc50aaecc
  422c04:	and    BYTE PTR [edx+0xd],dl
  422c07:	lea    ecx,[ebp+0x6b3a90d7]
  422c0d:	jle    0x422c78
  422c0f:	push   edx
  422c10:	pop    es
  422c11:	fild   WORD PTR [eax+0x6582d046]
  422c17:	push   es
  422c18:	icebp  
  422c19:	cmp    BYTE PTR [ebp+0x74],cl
  422c1c:	mov    ds:0xcd44afc0,eax
  422c21:	leave  
  422c22:	mov    ah,0xa6
  422c24:	popa   
  422c25:	outs   dx,BYTE PTR ds:[esi]
  422c26:	div    DWORD PTR [edx-0x3c66b133]
  422c2c:	int    0xcf
  422c2e:	jo     0x422bcd
  422c30:	scas   eax,DWORD PTR es:[edi]
  422c31:	aam    0x86
  422c33:	adc    ebp,DWORD PTR [edx]
  422c35:	add    ah,bh
  422c37:	xchg   edi,eax
  422c38:	sbb    al,0x31
  422c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c3b:	dec    esi
  422c3c:	not    DWORD PTR [edi-0x2a]
  422c3f:	xchg   esi,eax
  422c40:	sub    al,BYTE PTR [edi]
  422c42:	adc    DWORD PTR [edi-0x2a40595],ecx
  422c48:	add    WORD PTR [eax+0x24],si
  422c4c:	sub    DWORD PTR [esi-0xde70466],eax
  422c52:	push   ss
  422c53:	das    
  422c54:	(bad)  
  422c55:	mov    esi,0xe56f6f6c
  422c5a:	dec    esi
  422c5b:	mov    dh,dh
  422c5d:	dec    edi
  422c5e:	je     0x422cc2
  422c60:	repnz ins BYTE PTR es:[edi],dx
  422c62:	in     eax,dx
  422c63:	retf   
  422c64:	mov    ebp,0x11227262
  422c69:	pop    eax
  422c6a:	pop    ds
  422c6b:	lods   al,BYTE PTR ds:[esi]
  422c6c:	ja     0x422cd5
  422c6e:	pop    edx
  422c6f:	dec    edx
  422c70:	sti    
  422c71:	mov    dh,0x97
  422c73:	xchg   esp,eax
  422c74:	jo     0x422bf9
  422c76:	loop   0x422c90
  422c78:	imul   esp,DWORD PTR ds:0xd212a75e,0x145f0f89
  422c82:	mov    WORD PTR [edi+0x6d],cs
  422c85:	retf   
  422c86:	aad    0xf0
  422c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c89:	ds add eax,0x86a317e7
  422c8f:	out    0x2c,eax
  422c91:	mov    ecx,0x70b84e01
  422c96:	mov    dh,0x77
  422c98:	sub    eax,0xb101c041
  422c9d:	mov    bh,0x7
  422c9f:	outs   dx,BYTE PTR ds:[esi]
  422ca0:	and    al,0xc2
  422ca2:	rcl    DWORD PTR [ebp+0x51b7df48],1
  422ca8:	or     bl,ch
  422caa:	or     eax,0x569c1ebd
  422caf:	loopne 0x422c5d
  422cb1:	cmp    DWORD PTR [eax],ecx
  422cb3:	push   ecx
  422cb4:	repnz mov eax,0x97e605d3
  422cba:	jmp    0x5bf395f4
  422cbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cc0:	jge    0x422cfe
  422cc2:	mov    cl,0xb7
  422cc4:	sub    al,BYTE PTR [eax+0x1a160cb1]
  422cca:	cmp    cl,BYTE PTR cs:[edi-0x36d04e9c]
  422cd1:	add    al,0x5e
  422cd3:	je     0x422d09
  422cd5:	mov    dh,0xf5
  422cd7:	dec    edx
  422cd8:	ficomp WORD PTR [eax]
  422cda:	adc    al,BYTE PTR [esi]
  422cdc:	push   cs
  422cdd:	dec    ebx
  422cde:	loop   0x422cb6
  422ce0:	push   eax
  422ce1:	sub    eax,0xdf768025
  422ce6:	shl    DWORD PTR [edi+edi*2-0x8e2ab6d],1
  422ced:	stc    
  422cee:	adc    edi,ebx
  422cf0:	push   es
  422cf1:	xor    DWORD PTR [eax+0x5f],ecx
  422cf4:	xor    DWORD PTR [ecx],0xc4f788af
  422cfa:	(bad)
  422cfe:	pop    ebp
  422cff:	sahf   
  422d00:	sub    BYTE PTR [ebx+0x3c],bh
  422d03:	outs   dx,BYTE PTR ds:[esi]
  422d04:	jnp    0x422cb6
  422d06:	stc    
  422d07:	cli    
  422d08:	xor    ebx,0xffffffd4
  422d0b:	scas   al,BYTE PTR es:[edi]
  422d0c:	sahf   
  422d0d:	adc    esi,DWORD PTR [edx-0x4c]
  422d10:	mov    bh,0xe6
  422d12:	push   edi
  422d13:	popf   
  422d14:	jne    0x422d02
  422d16:	xchg   esp,eax
  422d17:	aas    
  422d18:	add    cl,ah
  422d1a:	out    0xbf,al
  422d1c:	fwait
  422d1d:	int3   
  422d1e:	jo     0x422ce2
  422d20:	cwde   
  422d21:	add    eax,0x592a43dd
  422d26:	bound  ebp,QWORD PTR [ebp+0x6da638b3]
  422d2c:	push   edi
  422d2d:	fidivr WORD PTR [edx+0x50f90dcd]
  422d33:	mov    al,0x30
  422d35:	jl     0x422d66
  422d37:	jg     0x422d4c
  422d39:	lods   al,BYTE PTR ds:[esi]
  422d3a:	js     0x422ce2
  422d3c:	mov    cl,0xf7
  422d3e:	mov    dh,BYTE PTR [ecx]
  422d40:	je     0x422db2
  422d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422d43:	add    BYTE PTR [esi-0x5f00d071],bh
  422d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d4a:	enter  0x1c14,0xea
  422d4e:	out    dx,eax
  422d4f:	je     0x422db6
  422d51:	fsubr  QWORD PTR [edx]
  422d53:	cmp    al,0x6e
  422d55:	daa    
  422d56:	outs   dx,BYTE PTR ds:[esi]
  422d57:	push   edx
  422d58:	sub    al,0x6e
  422d5a:	int3   
  422d5b:	mov    dh,0xbc
  422d5d:	pop    esi
  422d5e:	fild   WORD PTR [edi]
  422d60:	adc    eax,0xf3bbb44c
  422d65:	sub    al,0xc5
  422d67:	fsubrp st(1),st
  422d69:	cmp    cl,BYTE PTR [ecx+0x35f17138]
  422d6f:	dec    ecx
  422d70:	in     al,dx
  422d71:	and    cl,BYTE PTR [ecx+0x24]
  422d74:	sub    edx,DWORD PTR [esi+0x1f]
  422d77:	cdq    
  422d78:	jns    0x422dcc
  422d7a:	in     eax,0x49
  422d7c:	pop    ebp
  422d7d:	push   ds
  422d7e:	pop    ds
  422d7f:	nop
  422d80:	jg     0x422d3c
  422d82:	imul   bh
  422d84:	in     eax,0x1d
  422d86:	inc    eax
  422d87:	and    esp,esp
  422d89:	stc    
  422d8a:	std    
  422d8b:	inc    ebp
  422d8c:	mov    ebx,0x980a5b8f
  422d91:	mov    eax,DWORD PTR [edi]
  422d93:	test   eax,0xd7f1c4ee
  422d98:	lahf   
  422d99:	add    eax,0x9d9b990
  422d9e:	and    al,0xb4
  422da0:	sbb    esp,DWORD PTR [ebx-0x3]
  422da3:	fist   DWORD PTR ds:0xe7d42b7e
  422da9:	mov    ds:0xe3e0b982,eax
  422dae:	mov    eax,0xee261463
  422db3:	sbb    DWORD PTR [ebx-0x52ea4a7c],esp
  422db9:	mov    bh,0xd9
  422dbb:	popw   ss
  422dbd:	imul   ebx,DWORD PTR [ebp+0x37],0x36ba1de6
  422dc4:	jae    0x422d70
  422dc6:	into   
  422dc7:	cmp    ch,BYTE PTR [eax+esi*4]
  422dca:	mov    ?,WORD PTR [esi+edx*2-0x24]
  422dce:	xchg   DWORD PTR [ecx+ebp*1+0x7419d879],ebp
  422dd5:	addr16 mov ds:0x6774,eax
  422dd9:	fistp  QWORD PTR [eax+0x7f0c5a7b]
  422ddf:	test   DWORD PTR [ebp+0xa6637d9],edi
  422de5:	jecxz  0x422d6a
  422de7:	push   ecx
  422de8:	cmp    ch,BYTE PTR [eax]
  422dea:	sar    BYTE PTR [eax],cl
  422dec:	add    eax,0x347c99e5
  422df1:	enter  0x1f08,0xa5
  422df5:	or     DWORD PTR [ebx+0x27],esi
  422df8:	xor    BYTE PTR [ebp+0x7a8182ee],bl
  422dfe:	ja     0x422dab
  422e00:	sub    ah,BYTE PTR [eax+0x5cf8d311]
  422e06:	in     al,0xf8
  422e08:	idiv   BYTE PTR [esi+ebx*4]
  422e0b:	dec    ecx
  422e0c:	addr16 xor DWORD PTR [si],edi
  422e10:	dec    esp
  422e11:	xor    eax,0x7b603ea7
  422e16:	jo     0x422dff
  422e18:	mov    al,ds:0x9367e796
  422e1e:	jns    0x422dfc
  422e20:	(bad)  
  422e21:	or     DWORD PTR [edx+0x3b],ebx
  422e24:	add    BYTE PTR [esi+0x4535c1af],ah
  422e2a:	cmp    BYTE PTR [edi],0xde
  422e2d:	inc    BYTE PTR [eax+0x20]
  422e30:	aad    0x9e
  422e32:	cmp    BYTE PTR [ebx+0xb45ed2e],bl
  422e38:	mov    WORD PTR [ecx-0x54d106ea],cs
  422e3e:	dec    esi
  422e3f:	lds    edi,FWORD PTR [esi]
  422e41:	imul   eax,DWORD PTR [esi+0xa],0xffffffc8
  422e45:	lods   eax,DWORD PTR ds:[esi]
  422e46:	imul   esp,DWORD PTR [esi-0x71766ba5],0xffffffd4
  422e4d:	retf   
  422e4e:	push   esi
  422e4f:	inc    esi
  422e50:	add    ch,bl
  422e52:	iret   
  422e53:	fcomp  QWORD PTR [eax]
  422e55:	mov    al,0xe9
  422e57:	neg    DWORD PTR [edi+0x6f29a84e]
  422e5d:	adc    eax,DWORD PTR [esp+esi*8+0x3f]
  422e61:	mov    edx,0x8941618c
  422e66:	call   0xdf67daea
  422e6b:	fdivr  QWORD PTR [edx]
  422e6d:	popf   
  422e6e:	push   0xf3b77e8a
  422e73:	mov    esi,0x4c04d54c
  422e78:	rcl    BYTE PTR [ebx+0x74c634f2],1
  422e7e:	scas   eax,DWORD PTR es:[edi]
  422e7f:	pop    eax
  422e80:	je     0x422eb3
  422e82:	pop    edx
  422e83:	inc    esp
  422e84:	ret    
  422e85:	pop    eax
  422e86:	sub    eax,0xb2f891ba
  422e8b:	mov    esi,gs
  422e8d:	rcl    BYTE PTR [eax+ebp*1-0x68],0x98
  422e92:	dec    edx
  422e93:	mov    ds:0xf7c65a55,eax
  422e98:	(bad)  
  422e99:	jmp    0x422ecf
  422e9b:	sbb    eax,DWORD PTR [edi]
  422e9d:	xchg   edx,eax
  422e9e:	shr    DWORD PTR [ebp-0x2b8038ff],cl
  422ea4:	icebp  
  422ea5:	push   esp
  422ea6:	mov    al,0x47
  422ea8:	adc    edi,edx
  422eaa:	les    edi,FWORD PTR [ecx-0x67dfdc3e]
  422eb0:	jle    0x422f0c
  422eb2:	sahf   
  422eb3:	pop    es
  422eb4:	aaa    
  422eb5:	and    al,0x5e
  422eb7:	add    bh,BYTE PTR [esi+0x16]
  422eba:	push   edi
  422ebb:	fsubr  QWORD PTR [eax+0x2fe81dd5]
  422ec1:	imul   ebx,DWORD PTR [edx+0x5b85c599],0xbbfd5859
  422ecb:	pusha  
  422ecc:	sub    al,0x22
  422ece:	adc    DWORD PTR [eax+0x21ac0868],eax
  422ed4:	loope  0x422f44
  422ed6:	aad    0x64
  422ed8:	test   esi,esi
  422eda:	js     0x422f4d
  422edc:	inc    edi
  422edd:	lods   al,BYTE PTR ds:[esi]
  422ede:	test   BYTE PTR [edx+0x2c],cl
  422ee1:	mov    DWORD PTR [ecx+0x71],esp
  422ee4:	imul   esi,ebx,0x4e17b1c
  422eea:	loopne 0x422efa
  422eec:	jb     0x422f21
  422eee:	sbb    edx,DWORD PTR ds:0x89084b89
  422ef4:	js     0x422f08
  422ef6:	xor    eax,edi
  422ef8:	dec    ebp
  422ef9:	ret    0x4776
  422efc:	mov    cl,0x13
  422efe:	ficom  WORD PTR [eax+0x22]
  422f01:	rcr    ebx,0x90
  422f04:	inc    edx
  422f05:	and    BYTE PTR [edx+eiz*8-0x28f233ac],cl
  422f0c:	mov    ch,bh
  422f0e:	inc    esi
  422f0f:	xchg   BYTE PTR [edx+0x30],bl
  422f12:	sbb    BYTE PTR [eax],cl
  422f14:	push   0x86f2648d
  422f19:	mov    ebx,0x7ecd4daf
  422f1e:	ret    0xdb0b
  422f21:	mov    ecx,0xceac41c8
  422f26:	test   DWORD PTR [ecx],0xec78ae74
  422f2c:	js     0x422f62
  422f2e:	pusha  
  422f2f:	mov    edi,0xed31ad3c
  422f34:	stos   BYTE PTR es:[edi],al
  422f35:	mov    bh,0x25
  422f37:	aad    0xba
  422f39:	sub    eax,0x15639f2b
  422f3e:	inc    ebp
  422f3f:	int    0x56
  422f41:	jo     0x422eeb
  422f43:	gs pop ss
  422f45:	fnstenv es:[ebp+0x6a]
  422f49:	cmp    edx,DWORD PTR [eax]
  422f4b:	inc    esi
  422f4c:	in     eax,0xb7
  422f4e:	pop    ebx
  422f4f:	mov    ebx,0x70dec1ed
  422f54:	shr    BYTE PTR [eax-0x7c],1
  422f57:	jne    0x422f33
  422f59:	mov    esp,0x71e0fb9d
  422f5e:	xchg   DWORD PTR [ebx],eax
  422f60:	inc    edi
  422f61:	es pushf 
  422f63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f64:	sub    esp,edi
  422f66:	pushf  
  422f67:	pop    esi
  422f68:	shl    BYTE PTR [ebx+edx*2-0x8],1
  422f6c:	inc    esp
  422f6d:	cmp    eax,0xc77b7e69
  422f72:	xchg   esp,eax
  422f73:	xchg   edi,eax
  422f74:	mov    ah,0x95
  422f76:	pushf  
  422f77:	inc    ecx
  422f78:	out    0xc2,al
  422f7a:	jne    0x422fe7
  422f7c:	mov    al,ds:0x2ad0d19d
  422f81:	jp     0x422f88
  422f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f84:	stos   DWORD PTR es:[edi],eax
  422f85:	mov    ebp,0x768a80c2
  422f8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422f8b:	xchg   ebx,eax
  422f8c:	test   al,0x3e
  422f8e:	adc    ch,dl
  422f90:	loope  0x422fc1
  422f92:	sbb    dh,BYTE PTR [ebx-0x2]
  422f95:	mov    ah,0x21
  422f97:	ds lahf 
  422f99:	in     eax,0xd4
  422f9b:	push   edi
  422f9c:	xor    edx,DWORD PTR [eax+0x75]
  422f9f:	jecxz  0x422fe0
  422fa1:	or     al,0x68
  422fa3:	imul   eax,DWORD PTR [ebx+0x739a6827],0x3c
  422faa:	aam    0x60
  422fac:	mov    ebp,0x94ee7f44
  422fb1:	(bad)  
  422fb2:	mov    esi,0x6f2bd028
  422fb7:	and    eax,0x24b72c18
  422fbc:	pop    ebp
  422fbd:	add    DWORD PTR ds:0x6dafd9bc,0xffffffba
  422fc4:	mov    ecx,0xf51ce8c2
  422fc9:	xor    edi,DWORD PTR [edi+0x2f]
  422fcc:	into   
  422fcd:	sub    eax,DWORD PTR [ebp-0x2]
  422fd0:	push   ss
  422fd1:	not    BYTE PTR [edx+0x7efe3c71]
  422fd7:	cs adc al,0x60
  422fda:	std    
  422fdb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fdc:	jecxz  0x422fa5
  422fde:	or     eax,DWORD PTR [esp+esi*8]
  422fe1:	mov    dh,BYTE PTR [edi+0x6a]
  422fe4:	mov    esi,0xed2215e9
  422fe9:	arpl   WORD PTR [eax-0x7d],bp
  422fec:	loope  0x42303c
  422fee:	inc    esi
  422fef:	clc    
  422ff0:	sbb    BYTE PTR [ecx+0x4d],0x36
  422ff4:	mov    ds:0xd647837c,al
  422ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422ffa:	add    al,0xaf
  422ffc:	inc    ebx
  422ffd:	and    eax,0xfefd6598
  423002:	nop
  423003:	push   esi
  423004:	xchg   ebx,eax
  423005:	dec    ecx
  423006:	shl    DWORD PTR fs:[ebx-0x47db443f],0xe
  42300e:	bound  esp,QWORD PTR [ebx]
  423010:	push   eax
  423011:	jae    0x422fe9
  423013:	cwde   
  423014:	loop   0x423025
  423016:	rcr    DWORD PTR [esi-0x7f4700ab],0x5d
  42301d:	jo     0x423010
  42301f:	loop   0x422ff4
  423021:	(bad)  
  423022:	test   BYTE PTR [esi],cl
  423024:	jecxz  0x423039
  423026:	sub    al,0x69
  423028:	xchg   edx,eax
  423029:	push   ecx
  42302a:	rcr    DWORD PTR ds:0x396ac37b,0xa9
  423031:	mov    bl,0x1c
  423033:	xchg   ebp,eax
  423034:	(bad)  [edi-0x2c]
  423037:	mov    edx,0x645eb0a9
  42303c:	inc    eax
  42303d:	or     eax,DWORD PTR [edx]
  42303f:	pop    eax
  423040:	mov    bh,0x60
  423042:	cmp    BYTE PTR [edx-0x276978c5],0x7f
  423049:	mov    ebx,0xbb5e5160
  42304e:	mov    edx,0xd51f76f2
  423053:	and    ah,BYTE PTR [ebx+0x3f]
  423056:	call   0x5046:0x7887c44d
  42305d:	test   edx,0xfa00c62a
  423063:	pop    edx
  423064:	push   esi
  423065:	dec    ebp
  423066:	std    
  423067:	lock fld st(3)
  42306a:	fild   QWORD PTR [ebx-0x5c83e886]
  423070:	dec    ebp
  423071:	adc    bh,ch
  423073:	in     al,0x29
  423075:	push   cs
  423076:	mov    eax,ds:0x4e7b5682
  42307b:	pop    eax
  42307c:	(bad)  
  42307d:	and    ch,ch
  42307f:	fs mov cs,ecx
  423082:	mov    dl,0xaa
  423084:	repnz inc esi
  423086:	fistp  WORD PTR [edi]
  423088:	mov    ds:0xd0179dfb,eax
  42308d:	sub    cl,al
  42308f:	ja     0x4230bf
  423091:	pop    es
  423092:	add    BYTE PTR [eax],dl
  423094:	loopne 0x4230e5
  423096:	clc    
  423097:	icebp  
  423098:	retf   0x569a
  42309b:	pop    ebx
  42309c:	jg     0x42306e
  42309e:	add    ecx,DWORD PTR [edx]
  4230a0:	(bad)  
  4230a1:	jnp    0x423025
  4230a3:	xor    ah,dh
  4230a5:	ja     0x423034
  4230a7:	and    eax,DWORD PTR [ebx]
  4230a9:	mov    ecx,?
  4230ab:	fs mov dl,0xbe
  4230ae:	pop    ebx
  4230af:	jno    0x423100
  4230b1:	pop    edi
  4230b2:	call   0x33b8:0x86ccdb42
  4230b9:	enter  0x1813,0x94
  4230bd:	enter  0x6918,0x12
  4230c1:	cdq    
  4230c2:	and    ebp,DWORD PTR [edx]
  4230c4:	fs pushf 
  4230c6:	mov    DWORD PTR [esi-0x3d314904],edx
  4230cc:	test   BYTE PTR [ecx],bh
  4230ce:	sub    eax,0xf831f51
  4230d3:	pop    es
  4230d4:	xor    al,0xf2
  4230d6:	pop    ecx
  4230d7:	mov    ds:0x6531036b,al
  4230dc:	adc    al,0x6b
  4230de:	push   ebx
  4230df:	(bad)  
  4230e1:	fistp  DWORD PTR [esi+0x4f]
  4230e4:	sbb    eax,DWORD PTR [edx+0x66]
  4230e7:	test   eax,0x7f6049b3
  4230ec:	mov    WORD PTR [eax+ebp*4-0x78217fea],cs
  4230f3:	aaa    
  4230f4:	psubd  mm6,QWORD PTR [ecx-0x6a]
  4230f8:	je     0x4230c2
  4230fa:	in     al,0x52
  4230fc:	stos   DWORD PTR es:[edi],eax
  4230fd:	xor    ah,bh
  4230ff:	out    0x73,al
  423101:	jb     0x423137
  423103:	xchg   esp,eax
  423104:	add    DWORD PTR [ebx+0x3d],0xffffffd0
  423108:	rcr    BYTE PTR [edi],1
  42310a:	bound  ebp,QWORD PTR [edi-0x51]
  42310d:	imul   edx,DWORD PTR ds:0xdd933c91,0x53
  423114:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423115:	push   ss
  423116:	in     al,dx
  423117:	dec    ecx
  423118:	bound  ecx,QWORD PTR [edi+esi*2]
  42311b:	pop    esi
  42311c:	ins    BYTE PTR es:[edi],dx
  42311d:	fmulp  st(7),st
  42311f:	xchg   edx,eax
  423120:	dec    edx
  423121:	stos   DWORD PTR es:[edi],eax
  423122:	push   esi
  423123:	add    BYTE PTR [edx+0x68],0xdb
  423127:	leave  
  423128:	cmp    al,0xdf
  42312a:	mov    ds:0xafba436b,eax
  42312f:	dec    ebx
  423130:	aaa    
  423131:	retf   0xbe2a
  423134:	loop   0x4230e4
  423136:	xchg   DWORD PTR [esi+0x75],esi
  423139:	pushf  
  42313a:	cdq    
  42313b:	jg     0x4230f1
  42313d:	sahf   
  42313e:	pop    ebx
  42313f:	mov    ebx,0x8a9b30ed
  423144:	out    dx,eax
  423145:	or     eax,0x3c888b13
  42314a:	pop    ebx
  42314b:	pop    ebx
  42314c:	sti    
  42314d:	jno    0x423142
  42314f:	iret   
  423150:	out    dx,al
  423151:	push   ebx
  423152:	jb     0x42310f
  423154:	test   eax,0x3c087491
  423159:	aad    0x25
  42315b:	js     0x423189
  42315d:	push   es
  42315e:	dec    ebp
  42315f:	clc    
  423160:	scas   al,BYTE PTR es:[edi]
  423161:	mov    ah,0xf9
  423163:	add    eax,0x360502f7
  423168:	test   DWORD PTR [edx-0x72],ecx
  42316b:	add    BYTE PTR [edx],al
  42316d:	stos   BYTE PTR es:[edi],al
  42316e:	add    al,0xb6
  423170:	mov    eax,ebp
  423172:	xor    edx,eax
  423174:	es cmp al,0x57
  423177:	pop    edi
  423178:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423179:	jne    0x42317e
  42317b:	push   esp
  42317c:	xor    al,ch
  42317e:	daa    
  42317f:	ja     0x423162
  423181:	fcom   DWORD PTR [esi]
  423183:	lea    edi,[edx]
  423185:	or     DWORD PTR [edx+0x5],ecx
  423188:	imul   edx,eax,0x5ce13c8b
  42318e:	inc    edi
  42318f:	jp     0x423202
  423191:	inc    edx
  423192:	test   al,0x2b
  423194:	mov    ch,0x30
  423196:	and    al,0xb7
  423198:	ja     0x423158
  42319a:	arpl   WORD PTR [edi+0x10257ff4],di
  4231a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231a1:	ins    BYTE PTR es:[edi],dx
  4231a2:	into   
  4231a3:	neg    DWORD PTR [ebx-0x71]
  4231a6:	fld    QWORD PTR [esi]
  4231a8:	xor    BYTE PTR [ebp-0x43763262],ah
  4231ae:	mov    al,0xb8
  4231b0:	js     0x4231bb
  4231b2:	xchg   edx,eax
  4231b3:	cmp    cl,BYTE PTR [edi]
  4231b5:	popf   
  4231b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231b7:	call   0xcffa:0xa6e46c9
  4231be:	addr16 mov ch,cl
  4231c1:	or     DWORD PTR [edx],ebx
  4231c3:	cld    
  4231c4:	or     bh,BYTE PTR [ebx-0x3ece51d3]
  4231ca:	(bad)  
  4231cb:	icebp  
  4231cc:	rcl    DWORD PTR [eax+0x26],cl
  4231cf:	ror    BYTE PTR [ecx-0x48],cl
  4231d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231d3:	mov    al,ds:0xc1775313
  4231d8:	test   DWORD PTR [ebx+esi*1+0x11],0xa0e8540c
  4231e0:	shl    ah,0xfd
  4231e3:	call   0xf33e:0xf9d10f8c
  4231ea:	jg     0x4231a9
  4231ec:	push   ebx
  4231ed:	lahf   
  4231ee:	(bad)  
  4231ef:	bound  ebp,QWORD PTR [ecx]
  4231f1:	xchg   esi,eax
  4231f2:	lods   eax,DWORD PTR ds:[esi]
  4231f3:	(bad)  
  4231f4:	cmp    DWORD PTR [eax],esi
  4231f6:	and    al,0x77
  4231f8:	stos   BYTE PTR es:[edi],al
  4231f9:	mov    ebx,0xf24a916d
  4231fe:	inc    edi
  4231ff:	jbe    0x4231ea
  423201:	cmp    edx,DWORD PTR [esi+0x245a7172]
  423207:	push   ebx
  423208:	out    0x4,eax
  42320a:	jns    0x423273
  42320c:	xchg   ebp,eax
  42320d:	jns    0x4231ff
  42320f:	in     eax,dx
  423210:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423211:	imul   esi,edx,0x26
  423214:	jb     0x42328d
  423216:	mov    esi,0x8113eb65
  42321b:	push   ss
  42321c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42321d:	test   DWORD PTR [ebp+0x130bff10],edi
  423223:	adc    DWORD PTR [eax+ebx*4+0x35],eax
  423227:	dec    edx
  423228:	push   cs
  423229:	not    BYTE PTR [ecx+eiz*8+0x71]
  42322d:	mov    ebp,0x70e230d
  423232:	fcomp  QWORD PTR [edi+0x142146b]
  423238:	or     DWORD PTR [edx+0x3ceff15a],esi
  42323e:	ret    
  42323f:	dec    edx
  423240:	mov    ecx,DWORD PTR [ebp-0x2eadf134]
  423246:	mov    dh,0x69
  423248:	mov    bl,0x44
  42324a:	mov    edx,0x7b6672f4
  42324f:	inc    edi
  423250:	and    DWORD PTR [edx+ecx*8+0x71bd6672],0xf2d7c648
  42325b:	pop    edx
  42325c:	sub    eax,0x45251ae1
  423261:	das    
  423262:	psubsw mm5,mm6
  423265:	std    
  423266:	push   es
  423267:	sub    BYTE PTR [ebx],cl
  423269:	or     ch,bh
  42326b:	lahf   
  42326c:	je     0x4232ab
  42326e:	mov    ecx,0xdd14a29a
  423273:	aaa    
  423274:	sub    bh,BYTE PTR [edx+0x5ef6d8f7]
  42327a:	mov    fs,eax
  42327c:	shr    BYTE PTR [ecx-0x58],cl
  42327f:	shl    edx,1
  423281:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423282:	pusha  
  423283:	or     al,0x43
  423285:	cmp    ebp,edi
  423287:	je     0x42327b
  423289:	xchg   edx,eax
  42328a:	mov    al,ds:0x19e029d8
  42328f:	(bad)  
  423290:	retf   0xfb49
  423293:	mov    dl,0x18
  423295:	mov    esp,0x9d4a2cf5
  42329a:	sbb    eax,DWORD PTR [ecx-0x1275da79]
  4232a0:	retf   
  4232a1:	dec    ecx
  4232a2:	pushf  
  4232a3:	sub    al,0x79
  4232a5:	lahf   
  4232a6:	sub    esi,DWORD PTR [edi]
  4232a8:	add    ah,dh
  4232aa:	jmp    0x173d1647
  4232af:	pop    ecx
  4232b0:	dec    edx
  4232b1:	cdq    
  4232b2:	push   edi
  4232b3:	sub    DWORD PTR [edx-0x39],edx
  4232b6:	mov    edx,0xb161a5c4
  4232bb:	(bad)  
  4232bc:	cmp    edx,ecx
  4232be:	aaa    
  4232bf:	xor    BYTE PTR [edi+edi*2+0x5],0x64
  4232c4:	and    bl,BYTE PTR ds:0xbed53fdd
  4232ca:	scas   eax,DWORD PTR es:[edi]
  4232cb:	sub    al,0x9f
  4232cd:	jg     0x42325b
  4232cf:	aas    
  4232d0:	and    eax,0x5614960
  4232d5:	mov    DWORD PTR [eax-0x67c2faf6],ecx
  4232db:	adc    BYTE PTR [edx+0x5b],bl
  4232de:	adc    dh,BYTE PTR [ebp+0x79599ac1]
  4232e4:	sbb    bh,BYTE PTR fs:[edx-0x80dc7bb]
  4232eb:	jp     0x42326e
  4232ed:	fsubrp st(3),st
  4232ef:	jns    0x423276
  4232f1:	inc    ecx
  4232f2:	daa    
  4232f3:	and    bl,BYTE PTR [ebx-0x6b24536]
  4232f9:	push   esi
  4232fa:	test   BYTE PTR [esi+0x4b4d2525],bh
  423300:	push   edx
  423301:	mov    esp,0x5da5a98
  423306:	dec    esi
  423307:	pop    edi
  423308:	mov    al,0xa3
  42330a:	mov    ecx,0x8459cf15
  42330f:	pop    eax
  423310:	sbb    edx,DWORD PTR [edx+0x69be37ed]
  423316:	push   esi
  423317:	cmp    al,0xc1
  423319:	push   0x11
  42331b:	pop    ss
  42331c:	cmp    eax,0xd90ed130
  423321:	stc    
  423322:	cmp    BYTE PTR [ecx],dh
  423324:	push   edi
  423325:	cmp    bh,bl
  423327:	not    BYTE PTR [ecx+0x61]
  42332a:	rol    BYTE PTR [ebx+0x38],0x88
  42332e:	rol    BYTE PTR [esi+0x23],0x57
  423332:	adc    BYTE PTR [edx],0xd2
  423335:	iret   
  423336:	jno    0x4232ed
  423338:	mov    bh,0xdf
  42333a:	repnz enter 0x668e,0x3b
  42333f:	shl    DWORD PTR [edi+edx*8-0x4d],cl
  423343:	int    0xa8
  423345:	clc    
  423346:	arpl   WORD PTR [edx],bp
  423348:	sbb    al,0xda
  42334a:	lds    ecx,FWORD PTR ss:[ebx]
  42334d:	jne    0x42331a
  42334f:	jnp    0x423304
  423351:	jne    0x4232f0
  423353:	test   al,0xbf
  423355:	shl    ebx,cl
  423357:	xlat   BYTE PTR ds:[ebx]
  423358:	mov    edi,0xecbd0db3
  42335d:	pop    es
  42335e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42335f:	imul   BYTE PTR [edx+0x2]
  423362:	push   ds
  423363:	xor    DWORD PTR [ebp+0x45],edx
  423366:	rcr    BYTE PTR [ebp-0x163e7dce],cl
  42336c:	test   DWORD PTR [edx-0x12],ecx
  42336f:	aad    0x25
  423371:	jge    0x423302
  423373:	inc    ecx
  423374:	lea    ecx,ds:0x93a31b35
  42337a:	add    esp,0x206dafa9
  423380:	cld    
  423381:	iret   
  423382:	ror    BYTE PTR [edx+0x73],cl
  423385:	sbb    eax,0xe3081aea
  42338a:	xchg   ebp,eax
  42338b:	xlat   BYTE PTR ds:[ebx]
  42338c:	mov    cl,0x4b
  42338e:	or     eax,0x55b7ec64
  423393:	mov    al,0x16
  423395:	pop    ecx
  423396:	dec    esp
  423397:	jnp    0x4233d3
  423399:	push   edx
  42339a:	(bad)  
  42339b:	gs imul esp,ebp,0xd65434e7
  4233a2:	dec    edi
  4233a3:	out    dx,eax
  4233a4:	clc    
  4233a5:	loop   0x42334b
  4233a7:	adc    BYTE PTR [ebx-0x3f],bh
  4233aa:	rcr    BYTE PTR [esp+edx*4-0x68a17173],0x3
  4233b2:	test   eax,0xd35d64b6
  4233b7:	popf   
  4233b8:	add    esp,ebx
  4233ba:	repnz mov bl,0x28
  4233bd:	sbb    esp,DWORD PTR [ecx+0x544dc1db]
  4233c3:	inc    ebp
  4233c4:	cld    
  4233c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233c6:	pop    edi
  4233c7:	fcmovnbe st,st(2)
  4233c9:	(bad)  
  4233ca:	stos   BYTE PTR es:[edi],al
  4233cb:	sbb    eax,ecx
  4233cd:	xor    al,BYTE PTR [ebp+0x79]
  4233d0:	add    al,0x1d
  4233d2:	inc    esp
  4233d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4233d4:	xchg   ebx,eax
  4233d5:	and    DWORD PTR [ecx+0x71],ecx
  4233d8:	mov    dl,BYTE PTR [eax]
  4233da:	pop    ebp
  4233db:	inc    edi
  4233dc:	adc    eax,0x46cbfbd9
  4233e1:	mov    ebp,esi
  4233e3:	push   edx
  4233e4:	das    
  4233e5:	mov    ah,0x39
  4233e7:	jb     0x423441
  4233e9:	xchg   ebp,eax
  4233ea:	mov    esp,0x571cb527
  4233ef:	fwait
  4233f0:	and    al,al
  4233f2:	dec    esi
  4233f3:	test   BYTE PTR [eax-0x3c],al
  4233f6:	cmp    esp,DWORD PTR [esi+ebx*8+0x6b4d9db8]
  4233fd:	xor    al,0xa6
  4233ff:	in     al,dx
  423400:	mov    ecx,0x2d79d211
  423405:	mov    ebp,0xb044f189
  42340a:	hlt    
  42340b:	jbe    0x423468
  42340d:	adc    DWORD PTR [ecx],0x21
  423410:	add    al,0x14
  423412:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423413:	inc    ebx
  423414:	in     eax,dx
  423415:	sub    cl,BYTE PTR ds:0xf3ec57e9
  42341b:	cmp    DWORD PTR [eax-0x15],edi
  42341e:	mov    dh,0xe6
  423420:	mov    DWORD PTR [ebx-0x77],0x529b0d8
  423427:	pop    eax
  423428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423429:	or     BYTE PTR [ebp-0x7b3a6f48],ch
  42342f:	call   0xdc5e:0x73df6309
  423436:	sub    eax,DWORD PTR [ecx]
  423438:	aaa    
  423439:	sbb    DWORD PTR [ebp+0x75],0xa6bb1455
  423440:	mul    DWORD PTR [ebx+0x3e2d1db8]
  423446:	adc    al,0x9c
  423448:	lea    eax,[ecx]
  42344a:	ret    0x4529
  42344d:	mov    eax,ds:0xf497c5cf
  423452:	cwde   
  423453:	retf   
  423454:	mov    ebp,0xa6fe3b58
  423459:	ret    
  42345a:	out    dx,al
  42345b:	int    0xec
  42345d:	shl    BYTE PTR [edi-0x2e0181b8],0x57
  423464:	dec    edx
  423465:	mov    dh,0x7f
  423467:	and    al,0xf0
  423469:	mov    DWORD PTR [ecx+ebx*2],0xa32c36b7
  423470:	mov    ds,WORD PTR [edi+0x4d]
  423473:	dec    ecx
  423474:	out    0x10,al
  423476:	imul   edi,DWORD PTR [edi],0xb2672c45
  42347c:	ret    0xc260
  42347f:	jb     0x423404
  423481:	mov    fs,WORD PTR [ecx]
  423483:	(bad)  
  423484:	fst    QWORD PTR [edx-0x751f3e2f]
  42348a:	pop    ds
  42348b:	inc    esp
  42348c:	dec    ebx
  42348d:	mov    ds:0x210edc2d,al
  423492:	add    bh,BYTE PTR [esi-0x61]
  423495:	hlt    
  423496:	scas   al,BYTE PTR es:[edi]
  423497:	push   0x6fa3563d
  42349c:	pushf  
  42349d:	into   
  42349e:	sub    ah,BYTE PTR [esi+0x71ef8e49]
  4234a4:	jmp    0xd38cd18c
  4234a9:	ins    DWORD PTR es:[edi],dx
  4234aa:	xor    edx,DWORD PTR [edi+0x7b]
  4234ad:	jmp    0x8e06:0x7e0f806b
  4234b4:	push   edi
  4234b5:	sahf   
  4234b6:	ins    DWORD PTR es:[edi],dx
  4234b7:	add    ah,BYTE PTR [edx]
  4234b9:	stos   BYTE PTR es:[edi],al
  4234ba:	ror    al,1
  4234bc:	add    ah,BYTE PTR [ebx-0x4fa48b1c]
  4234c2:	inc    edx
  4234c3:	and    ecx,esi
  4234c5:	pop    edi
  4234c6:	sub    dl,cl
  4234c8:	pusha  
  4234c9:	mov    esi,DWORD PTR [edi+0x3d]
  4234cc:	add    eax,0x63fe3837
  4234d1:	dec    eax
  4234d2:	inc    edx
  4234d3:	inc    esp
  4234d4:	cld    
  4234d5:	xchg   edx,eax
  4234d6:	scas   eax,DWORD PTR es:[edi]
  4234d7:	inc    edi
  4234d8:	nop
  4234d9:	jb     0x42354d
  4234db:	adc    bh,dl
  4234dd:	fisubr DWORD PTR [ecx]
  4234df:	xchg   DWORD PTR [ebp+0x3d],ebx
  4234e2:	fsub   QWORD PTR [edx+ecx*1]
  4234e5:	mov    BYTE PTR [eax+0x58],dl
  4234e8:	adc    BYTE PTR [ecx+eiz*8-0x49],bh
  4234ec:	cdq    
  4234ed:	arpl   WORD PTR [ecx+ebx*2],ax
  4234f0:	int    0x5e
  4234f2:	xchg   BYTE PTR [ecx+0x411a807f],cl
  4234f8:	jle    0x4234c2
  4234fa:	fmul   QWORD PTR [edi+0x73977121]
  423500:	push   cs
  423501:	lods   al,BYTE PTR ds:[esi]
  423502:	mov    al,ds:0x2262edea
  423507:	clc    
  423508:	jp     0x42355a
  42350a:	add    esi,ebp
  42350c:	mov    bl,0x8a
  42350e:	add    ebp,ebp
  423510:	lahf   
  423511:	dec    ebx
  423512:	and    al,0x44
  423514:	xor    esi,DWORD PTR [edi+0x54b20a2f]
  42351a:	shl    BYTE PTR [edi-0x7118a232],1
  423520:	or     ah,al
  423522:	xchg   BYTE PTR [ebp-0x6dff3c1b],al
  423528:	xor    eax,ebx
  42352a:	push   ebx
  42352b:	and    BYTE PTR [edx+0x5da245e2],bh
  423531:	repnz push 0x7c
  423534:	push   ebp
  423535:	mov    ebx,0xf70205f4
  42353a:	mov    ah,0x5d
  42353c:	pusha  
  42353d:	ds js  0x423549
  423540:	and    DWORD PTR [ebx+eax*8+0x6c],esi
  423544:	shl    BYTE PTR [ebp+0xc],cl
  423547:	(bad)
  42354a:	out    dx,eax
  42354b:	ds and esi,ecx
  42354e:	sar    BYTE PTR [ecx+0x2d],cl
  423551:	aaa    
  423552:	imul   edi,DWORD PTR [eax-0x5bb68b0f],0x21
  423559:	popf   
  42355a:	pop    ebp
  42355b:	push   eax
  42355c:	sub    DWORD PTR [eax],0x66
  42355f:	xchg   esp,edx
  423561:	arpl   WORD PTR [ebp-0x77],bp
  423564:	mov    al,ds:0x52892ad0
  423569:	in     eax,dx
  42356a:	lods   al,BYTE PTR ds:[esi]
  42356b:	(bad)  
  42356c:	outs   dx,BYTE PTR ds:[esi]
  42356d:	pop    esp
  42356e:	out    0xc0,eax
  423570:	push   esp
  423571:	mov    eax,0xe88028eb
  423576:	lods   al,BYTE PTR ds:[esi]
  423577:	fs sti 
  423579:	mov    cs,edx
  42357b:	inc    BYTE PTR [edx-0x7c289ebc]
  423581:	mov    al,0x92
  423583:	mov    bl,0x40
  423585:	xlat   BYTE PTR ds:[ebx]
  423586:	fs push ebp
  423588:	shr    BYTE PTR [edi-0x1f],cl
  42358b:	and    al,0x41
  42358d:	ret    
  42358e:	cmp    al,ch
  423590:	stc    
  423591:	arpl   WORD PTR [edi-0x5559e24c],bp
  423597:	xlat   BYTE PTR ds:[ebx]
  423598:	test   al,0xad
  42359a:	push   es
  42359b:	jb     0x423533
  42359d:	add    DWORD PTR [edi+0x68],esp
  4235a0:	ins    BYTE PTR es:[edi],dx
  4235a1:	pop    eax
  4235a2:	(bad)  
  4235a3:	sub    DWORD PTR [esi-0x65],edi
  4235a6:	and    eax,0xdd0205e5
  4235ab:	outs   dx,BYTE PTR ds:[esi]
  4235ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235ad:	outs   dx,BYTE PTR fs:[esi]
  4235af:	add    bl,dl
  4235b1:	(bad)  
  4235b2:	jecxz  0x42355c
  4235b4:	mov    eax,ds:0x5f6c100a
  4235b9:	dec    esi
  4235ba:	jno    0x4235af
  4235bc:	jno    0x42362c
  4235be:	fnstsw WORD PTR [edx-0x5d5ce16e]
  4235c4:	mov    esi,0xed476293
  4235c9:	out    dx,al
  4235ca:	pop    eax
  4235cb:	lds    edi,FWORD PTR [eax-0x76bf96ea]
  4235d1:	push   esp
  4235d2:	push   eax
  4235d3:	not    DWORD PTR [esp+eax*2-0x18]
  4235d7:	rcr    BYTE PTR [ecx+0x45],0xab
  4235db:	je     0x423569
  4235dd:	push   ss
  4235de:	cmp    dh,BYTE PTR [edi+0x56]
  4235e1:	sbb    bh,bh
  4235e3:	mov    WORD PTR ds:0x690080cc,?
  4235e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4235ea:	arpl   di,bp
  4235ec:	sub    al,0x68
  4235ee:	lds    ecx,FWORD PTR [edx]
  4235f0:	dec    eax
  4235f1:	ficomp WORD PTR [ebx]
  4235f3:	or     ch,BYTE PTR [ebp+0x79]
  4235f6:	shr    ebp,1
  4235f8:	mov    BYTE PTR [edx+0x2],dh
  4235fb:	mov    al,0x89
  4235fd:	in     al,0xc5
  4235ff:	jne    0x4235aa
  423601:	add    BYTE PTR [ebp+0x4d536d7e],0xa4
  423608:	sbb    eax,0xe9e33f94
  42360d:	loop   0x423608
  42360f:	and    DWORD PTR [eax],edi
  423611:	cmp    dl,BYTE PTR [edi]
  423613:	jg     0x423617
  423615:	and    al,BYTE PTR [edi]
  423617:	loop   0x423678
  423619:	inc    esp
  42361a:	or     esp,DWORD PTR [esi]
  42361c:	pop    es
  42361d:	xlat   BYTE PTR ds:[ebx]
  42361e:	xor    al,0x94
  423620:	mov    edi,0x30f01105
  423625:	jnp    0x4235f9
  423627:	jl     0x4235aa
  423629:	adc    ecx,esi
  42362b:	pusha  
  42362c:	rcr    DWORD PTR [eax-0x64e6bd2a],0x1e
  423633:	ss push ecx
  423635:	and    bh,dl
  423637:	popa   
  423638:	ficomp DWORD PTR ds:0x7a9a763c
  42363e:	inc    ecx
  42363f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423640:	adc    al,0x8d
  423642:	dec    ebp
  423643:	(bad)  
  423644:	xor    ebp,DWORD PTR [eax+0x48]
  423647:	fstp   TBYTE PTR [eax]
  423649:	cmp    eax,0x7c60dc77
  42364e:	sub    eax,0xce6b3769
  423653:	add    al,0xb5
  423655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423656:	aam    0xc9
  423658:	rcl    edi,0xe2
  42365b:	(bad)  
  42365c:	jae    0x423666
  42365e:	loopne 0x423635
  423660:	lods   eax,DWORD PTR ds:[esi]
  423661:	(bad)  
  423662:	push   esi
  423663:	or     al,0x91
  423665:	xor    esp,DWORD PTR [edi-0xacab4e4]
  42366b:	adc    bh,cl
  42366d:	shl    BYTE PTR [edi],0x6a
  423670:	adc    al,0xe
  423672:	and    dh,BYTE PTR [edi+eax*4-0x7a]
  423676:	call   0x3b79e0d9
  42367b:	fist   DWORD PTR [ebx+0x54b5f9dc]
  423681:	dec    esi
  423682:	mov    edi,0xd4dd39e
  423687:	mov    ah,0x96
  423689:	fld    TBYTE PTR [eax-0x79df48e7]
  42368f:	sub    eax,DWORD PTR [esi-0x46c2659]
  423695:	xchg   esp,eax
  423696:	lahf   
  423697:	gs push cs
  423699:	dec    eax
  42369a:	mov    esp,DWORD PTR [edi+0x2e2b26aa]
  4236a0:	xchg   edi,eax
  4236a1:	int    0x69
  4236a3:	inc    esp
  4236a4:	mov    ebp,0xa2c9db42
  4236a9:	adc    edi,0xf9380143
  4236af:	scas   al,BYTE PTR es:[edi]
  4236b0:	mov    esp,0x78ac870c
  4236b5:	jmp    0x423650
  4236b7:	dec    edx
  4236b8:	jge    0x423724
  4236ba:	or     al,0xc6
  4236bc:	inc    edi
  4236bd:	or     al,0x69
  4236bf:	movups XMMWORD PTR [ecx+0x76e85eed],xmm0
  4236c6:	fidiv  DWORD PTR [eax]
  4236c8:	add    esp,esp
  4236ca:	xchg   DWORD PTR [edi],ebx
  4236cc:	stos   BYTE PTR es:[edi],al
  4236cd:	xor    eax,0x439145c1
  4236d2:	sub    BYTE PTR [ecx+edx*8-0x6bc772cb],dh
  4236d9:	jp     0x42365f
  4236db:	xchg   esp,eax
  4236dc:	ret    
  4236dd:	shr    edx,cl
  4236df:	xchg   bh,dh
  4236e1:	lds    esi,FWORD PTR [ecx+0x31]
  4236e4:	mov    bl,dh
  4236e6:	adc    esp,DWORD PTR [edx-0x1bc2124]
  4236ec:	inc    eax
  4236ed:	push   0xffffff8b
  4236ef:	sahf   
  4236f0:	and    BYTE PTR [edi-0x54],0x89
  4236f4:	xor    BYTE PTR [esi+0x42],bl
  4236f7:	sbb    ah,al
  4236f9:	stos   BYTE PTR es:[edi],al
  4236fa:	popf   
  4236fb:	mov    cl,0xa1
  4236fd:	out    dx,al
  4236fe:	jnp    0x423725
  423700:	(bad)  
  423701:	cwde   
  423702:	mov    esp,cs
  423704:	ins    DWORD PTR es:[edi],dx
  423705:	and    cl,BYTE PTR [edx-0x67]
  423708:	jnp    0x423766
  42370a:	dec    edi
  42370b:	sar    BYTE PTR [edx+ebx*2-0x56123c91],1
  423712:	sub    al,0x5a
  423714:	sbb    al,0x42
  423716:	dec    eax
  423717:	int3   
  423718:	shl    esi,cl
  42371a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42371b:	ins    BYTE PTR es:[edi],dx
  42371c:	xchg   DWORD PTR [edx],ebx
  42371e:	pop    ss
  42371f:	fisub  DWORD PTR [edi-0x7e8fde75]
  423725:	adc    al,0x80
  423727:	cmp    DWORD PTR [esi+0x5651a093],edi
  42372d:	scas   al,BYTE PTR es:[edi]
  42372e:	adc    edx,esp
  423730:	rol    BYTE PTR [edx-0x28],0xf2
  423734:	adc    al,0xdb
  423736:	mov    ebx,DWORD PTR [esi]
  423738:	mov    ch,0xc3
  42373a:	adc    al,0xf8
  42373c:	enter  0xd3e7,0x27
  423740:	xchg   edx,eax
  423741:	ins    DWORD PTR es:[edi],dx
  423742:	or     DWORD PTR [ebp-0x72],0x6a
  423746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423747:	mov    dl,0x94
  423749:	or     al,0x9c
  42374b:	(bad)  
  42374c:	fnstenv ds:0x5658c915
  423752:	pop    edx
  423753:	jp     0x42375a
  423755:	add    ebp,DWORD PTR [edx+eax*4]
  423758:	sti    
  423759:	jg     0x42379a
  42375b:	cmp    bl,BYTE PTR [esi+0x29]
  42375e:	stc    
  42375f:	into   
  423760:	test   al,al
  423762:	or     al,0xe2
  423764:	sbb    al,0xd6
  423766:	push   ss
  423767:	mov    dl,0xa5
  423769:	sub    DWORD PTR [eax+0x45179bd4],0xe6f4c3d3
  423773:	adc    al,0x94
  423775:	daa    
  423776:	dec    edi
  423777:	push   edi
  423778:	lods   eax,DWORD PTR ds:[esi]
  423779:	add    BYTE PTR [ebx+0x70820798],dl
  42377f:	cmp    ah,BYTE PTR [eax+0x4c6e3a30]
  423785:	lea    esi,[ecx]
  423787:	loopne 0x42371a
  423789:	sub    DWORD PTR [ebp+0x2f1404bb],edi
  42378f:	mov    eax,0xfc7c6434
  423794:	pushf  
  423795:	mov    eax,ds:0xebd93085
  42379a:	sbb    al,BYTE PTR [edx-0x3d]
  42379d:	int3   
  42379e:	test   DWORD PTR [ecx+0x62],ebx
  4237a1:	mov    dh,0x7f
  4237a3:	xchg   edx,eax
  4237a4:	jae    0x42378e
  4237a6:	push   ebp
  4237a7:	push   0x551db4d8
  4237ac:	sbb    ebx,ebp
  4237ae:	and    al,0x4c
  4237b0:	sahf   
  4237b1:	leave  
  4237b2:	dec    esp
  4237b3:	iret   
  4237b4:	(bad)  
  4237b5:	cmp    ecx,edx
  4237b7:	fsub   QWORD PTR gs:[esi+0xe409e55]
  4237be:	mov    edi,0xfc24991b
  4237c3:	in     eax,0xc2
  4237c5:	push   esi
  4237c6:	mov    ebx,0xc565023e
  4237cb:	mov    ah,0x3f
  4237cd:	cmp    eax,0x2cef188f
  4237d2:	push   ds
  4237d3:	(bad)  
  4237d5:	jge    0x42377d
  4237d7:	pushf  
  4237d8:	cmp    esp,ebp
  4237da:	mov    ebx,DWORD PTR [esi]
  4237dc:	loop   0x42378d
  4237de:	div    BYTE PTR [eax]
  4237e0:	sbb    eax,0x69324460
  4237e5:	mov    al,ds:0x239e6b02
  4237ea:	and    DWORD PTR [esi],0x75
  4237ed:	cmc    
  4237ee:	pop    ebp
  4237ef:	cs push es
  4237f1:	retf   
  4237f2:	popa   
  4237f3:	cmp    eax,0x7cdd1bdf
  4237f8:	mov    ecx,ebp
  4237fa:	fdivr  DWORD PTR [ebx]
  4237fc:	stc    
  4237fd:	push   edx
  4237fe:	pop    ecx
  4237ff:	(bad)  
  423801:	fbstp  TBYTE PTR [ebp+eiz*4-0x43]
  423805:	int    0x4f
  423807:	mov    bh,0xd
  423809:	int3   
  42380a:	daa    
  42380b:	ins    DWORD PTR es:[edi],dx
  42380c:	pushf  
  42380d:	jne    0x4237d5
  42380f:	or     BYTE PTR [eax],dl
  423811:	pop    edx
  423812:	fmul   DWORD PTR ds:0xf72fff8e
  423818:	mov    edi,0x31bc57ed
  42381d:	jo     0x423841
  42381f:	out    0xcd,al
  423821:	mov    edx,0xd9bb1868
  423826:	test   al,0x47
  423828:	mov    dl,0xc4
  42382a:	mov    cs,WORD PTR [ebx]
  42382c:	arpl   WORD PTR ds:0xe6ab7fe3,bx
  423832:	scas   al,BYTE PTR es:[edi]
  423833:	add    edx,DWORD PTR [ebp+eax*8-0x1b]
  423837:	sub    esi,edi
  423839:	fsub   QWORD PTR [eax]
  42383b:	pop    ebx
  42383c:	sub    al,0x20
  42383e:	add    ebp,0x4e
  423841:	imul   ecx,esi,0xffffffac
  423844:	mov    bl,0x81
  423846:	xchg   DWORD PTR [ebp+0x46e9a43d],esp
  42384c:	jp     0x423805
  42384e:	inc    esi
  42384f:	sti    
  423850:	in     eax,dx
  423851:	and    BYTE PTR [esi+ebp*4-0x27],bh
  423855:	jne    0x4237fd
  423857:	test   DWORD PTR [edi-0x5f02d3d1],ebx
  42385d:	pop    ebx
  42385e:	lahf   
  42385f:	lock ins DWORD PTR es:[edi],dx
  423861:	sub    ch,bh
  423863:	fidiv  DWORD PTR [eax+0xef40b8]
  423869:	je     0x423870
  42386b:	and    al,0xdd
  42386d:	cdq    
  42386e:	stc    
  42386f:	and    BYTE PTR [esi],dh
  423871:	push   ds
  423872:	aad    0xff
  423874:	cdq    
  423875:	push   ebp
  423876:	sbb    edi,0xfffffff8
  423879:	adc    al,0x19
  42387b:	mov    ecx,0xfca7f376
  423880:	mov    bl,BYTE PTR [edi]
  423882:	jae    0x4238fd
  423884:	fcmovne st,st(4)
  423886:	mov    DWORD PTR [edx-0x7],edi
  423889:	ds pop edx
  42388b:	jge    0x42381d
  42388d:	ret    
  42388e:	jo     0x423888
  423890:	add    al,0xdb
  423892:	stos   DWORD PTR es:[edi],eax
  423893:	(bad)  
  423894:	xchg   ebp,eax
  423895:	(bad)  
  423896:	loope  0x4238ec
  423898:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423899:	(bad)  
  42389a:	mov    esi,0xa345d335
  42389f:	dec    BYTE PTR [edx+0x1]
  4238a2:	and    esp,0xffffffc5
  4238a5:	mov    esi,0x2183358d
  4238aa:	int    0x44
  4238ac:	icebp  
  4238ad:	stos   BYTE PTR es:[edi],al
  4238ae:	and    ebp,DWORD PTR [edi]
  4238b0:	xlat   BYTE PTR fs:[ebx]
  4238b2:	mov    eax,0x47800ff0
  4238b7:	add    ah,BYTE PTR [eax+0x39e31add]
  4238bd:	(bad)  
  4238be:	jns    0x42390a
  4238c0:	cmp    eax,0x26f70e8a
  4238c5:	sar    DWORD PTR [ebp+0x2d],1
  4238c8:	inc    DWORD PTR [ebx]
  4238ca:	mov    ds:0xbf4409ff,eax
  4238cf:	jb     0x42386d
  4238d1:	pop    ebx
  4238d2:	xchg   ebp,eax
  4238d3:	xchg   ecx,eax
  4238d4:	rcr    DWORD PTR [edx],cl
  4238d6:	xchg   DWORD PTR [esi],ebx
  4238d8:	mov    BYTE PTR [eax],bl
  4238da:	pop    ss
  4238db:	cmp    BYTE PTR [ecx],dh
  4238dd:	das    
  4238de:	mov    ah,BYTE PTR [ebx-0x26]
  4238e1:	jbe    0x42388b
  4238e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4238e5:	pop    eax
  4238e6:	(bad)  
  4238e7:	mov    al,0xca
  4238e9:	xchg   BYTE PTR [ebp+0x53],ah
  4238ec:	jmp    0xdccb:0x74889e80
  4238f3:	in     al,0x7a
  4238f5:	sbb    eax,0xf08b6f83
  4238fa:	scas   eax,DWORD PTR es:[edi]
  4238fb:	pop    es
  4238fc:	test   al,0x74
  4238fe:	xor    dh,al
  423900:	aam    0xbf
  423902:	add    DWORD PTR [edx-0x5b791699],eax
  423908:	jne    0x4238ef
  42390a:	loope  0x423910
  42390c:	dec    ecx
  42390d:	or     DWORD PTR [edx+0x70ad4895],edx
  423913:	jo     0x42398b
  423915:	adc    DWORD PTR [ebx],edx
  423917:	pop    esp
  423918:	add    ah,BYTE PTR [eax+0x5d]
  42391b:	mov    bh,0x41
  42391d:	adc    al,0xa9
  42391f:	adc    DWORD PTR [esi-0x28],edi
  423922:	mov    cl,0x1f
  423924:	sub    al,0x50
  423926:	jns    0x423988
  423928:	mov    al,ds:0xfaf377ad
  42392d:	push   esi
  42392e:	jb     0x42399a
  423930:	test   cl,dl
  423932:	push   es
  423933:	pop    edi
  423934:	mov    esp,0x8a9c50b1
  423939:	hlt    
  42393a:	(bad)
  42393d:	pop    edx
  42393e:	mov    eax,0x6fd73a0b
  423943:	out    0x7d,al
  423945:	adc    DWORD PTR [edx+0x12b71ab],0xb849b83f
  42394f:	pusha  
  423950:	ror    BYTE PTR [ebx+edi*8],0x1a
  423954:	mov    ds:0xd8238ab2,eax
  423959:	ja     0x42397a
  42395b:	cmc    
  42395c:	mov    bh,0x33
  42395e:	push   edx
  42395f:	jecxz  0x423902
  423961:	jbe    0x423942
  423963:	sub    ecx,DWORD PTR [ecx+0x229e2a6c]
  423969:	mov    bh,0x7e
  42396b:	sub    esi,DWORD PTR [edx+0x25569e5]
  423971:	ss leave 
  423973:	cmp    al,0x7c
  423976:	mov    ebx,eax
  423978:	mov    ss,WORD PTR [edx-0x4e]
  42397b:	sub    BYTE PTR [eax-0x75ab7b0],dh
  423981:	jge    0x42394f
  423983:	dec    esp
  423984:	adc    eax,0x613b3587
  423989:	test   al,0x84
  42398b:	into   
  42398c:	pop    eax
  42398d:	pop    ebp
  42398e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42398f:	ffree  st(2)
  423991:	ror    DWORD PTR [ebx+esi*4],cl
  423994:	mov    esi,0x1500b4fd
  423999:	iret   
  42399a:	inc    eax
  42399b:	mov    cl,0x52
  42399d:	pop    ebp
  42399e:	(bad)  
  42399f:	sub    eax,0x8ce42b16
  4239a4:	lock inc ebp
  4239a6:	arpl   di,sp
  4239a8:	mov    DWORD PTR [edx+ecx*1],esi
  4239ab:	or     eax,0xdcb4f1a8
  4239b0:	pusha  
  4239b1:	inc    ebx
  4239b2:	das    
  4239b3:	xor    eax,0x75a649a6
  4239b8:	mov    edx,0x2dd69e10
  4239bd:	imul   ebp,DWORD PTR [eax+0x12],0x4e
  4239c1:	fwait
  4239c2:	xor    esp,DWORD PTR [esi-0x53d56278]
  4239c8:	lds    edi,FWORD PTR [ecx-0x4f3a0543]
  4239ce:	jnp    0x423a2f
  4239d0:	mov    gs,WORD PTR [ebp-0x4c29f18f]
  4239d6:	and    al,0x4d
  4239d8:	sahf   
  4239d9:	pop    eax
  4239da:	sub    BYTE PTR [esi-0x769e39a6],al
  4239e0:	push   cs
  4239e1:	sbb    al,0x17
  4239e3:	add    ch,dh
  4239e5:	cs jo  0x423973
  4239e8:	jne    0x4239e8
  4239ea:	mov    ecx,0x331a841a
  4239ef:	stos   BYTE PTR es:[edi],al
  4239f0:	call   0x242d:0xce4658dc
  4239f7:	imul   ebp,esi,0x74
  4239fa:	ja     0x423a57
  4239fc:	cmp    eax,0x87d2762e
  423a01:	mov    al,0x28
  423a03:	cmp    al,0x78
  423a05:	rol    DWORD PTR [edx],0x5
  423a08:	neg    ebx
  423a0a:	push   ds
  423a0b:	call   0x2104:0xe9f82907
  423a12:	mov    BYTE PTR [edi-0x7d],al
  423a15:	dec    edx
  423a16:	mov    dl,0xbb
  423a18:	sbb    eax,edx
  423a1a:	shr    ah,cl
  423a1c:	popa   
  423a1d:	fs push ebp
  423a1f:	aaa    
  423a20:	push   0x78c04f8a
  423a25:	jnp    0x423a4c
  423a27:	pop    eax
  423a28:	mov    bh,0x90
  423a2a:	iret   
  423a2b:	fs mov bh,0x3
  423a2e:	aas    
  423a2f:	loop   0x423a63
  423a31:	inc    ebp
  423a32:	(bad)  
  423a33:	sar    DWORD PTR [eax],1
  423a35:	(bad)  
  423a36:	cmp    esi,DWORD PTR [eax]
  423a38:	add    bl,ch
  423a3a:	adc    DWORD PTR [edx+0x445ad22d],ecx
  423a40:	jg     0x4239cf
  423a42:	mov    eax,0xfd60964b
  423a47:	in     al,0xd8
  423a49:	sub    DWORD PTR [ecx+0x55a435f4],0xf2ca5599
  423a53:	mov    al,0xbc
  423a55:	jne    0x423a88
  423a57:	xlat   BYTE PTR ds:[ebx]
  423a58:	sar    BYTE PTR [edi-0x1da50d35],cl
  423a5e:	in     eax,dx
  423a5f:	mov    gs,WORD PTR [esp+edx*1+0x4]
  423a63:	out    dx,eax
  423a64:	cmc    
  423a65:	mov    esi,0x47af77a5
  423a6a:	cmp    eax,eax
  423a6c:	(bad)  
  423a6d:	jo     0x423a0f
  423a6f:	jae    0x423a0a
  423a71:	push   es
  423a72:	add    BYTE PTR [eax-0x2],dl
  423a75:	mov    bh,0x1d
  423a77:	mov    eax,ds:0xd55ae288
  423a7c:	mov    DWORD PTR [ebx+0x77],edx
  423a7f:	das    
  423a80:	outs   dx,DWORD PTR ds:[esi]
  423a81:	aad    0xe
  423a83:	adc    edx,ecx
  423a85:	(bad)  
  423a88:	add    BYTE PTR [ebx-0x1be44dca],0xb9
  423a8f:	jle    0x423a2a
  423a91:	xor    al,0xb5
  423a93:	or     eax,DWORD PTR [eax+0x21fe6ef2]
  423a99:	xor    BYTE PTR [ecx-0x69270a14],dl
  423a9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423aa0:	call   0x9f94:0x526aab5d
  423aa7:	sahf   
  423aa8:	scas   eax,DWORD PTR es:[edi]
  423aa9:	inc    ebp
  423aaa:	test   BYTE PTR [ecx],bl
  423aac:	or     DWORD PTR [edx-0x38],eax
  423aaf:	xchg   ebp,eax
  423ab0:	mov    esp,0x4aa64e72
  423ab5:	aaa    
  423ab6:	xor    cl,BYTE PTR [ebp+0x2c]
  423ab9:	jp     0x423b00
  423abb:	inc    ecx
  423abc:	adc    ebp,ebx
  423abe:	out    dx,al
  423abf:	fwait
  423ac0:	fwait
  423ac1:	jbe    0x423af3
  423ac3:	inc    esi
  423ac4:	jg     0x423ac4
  423ac6:	lahf   
  423ac7:	loop   0x423a79
  423ac9:	cwde   
  423aca:	or     cl,BYTE PTR [ebx-0x13e61aa]
  423ad0:	and    dl,BYTE PTR [ecx+edx*2]
  423ad3:	dec    edx
  423ad4:	cmp    eax,0xc341a0c
  423ad9:	add    cl,BYTE PTR [eax]
  423adb:	push   ss
  423adc:	pop    ss
  423add:	cmp    eax,0x9707926a
  423ae2:	and    al,0x9
  423ae4:	mov    edx,0x5b7760b7
  423ae9:	push   eax
  423aea:	sbb    dh,BYTE PTR [eax+edi*4-0x79c5867d]
  423af1:	adc    eax,0xd1ce666a
  423af6:	aas    
  423af7:	fidivr DWORD PTR [ebp+0xc]
  423afa:	ins    DWORD PTR es:[edi],dx
  423afb:	push   esi
  423afc:	push   ebx
  423afd:	je     0x423b11
  423aff:	jl     0x423aaa
  423b01:	sbb    eax,0xe9dc26f1
  423b06:	mov    cl,0x8f
  423b08:	ror    al,0xce
  423b0b:	aad    0xf0
  423b0d:	inc    esi
  423b0e:	jmp    0x423b8d
  423b10:	aad    0x3e
  423b12:	push   eax
  423b13:	lea    eax,[edx-0x704c8721]
  423b19:	xchg   edi,eax
  423b1a:	mov    al,0x90
  423b1c:	rol    DWORD PTR [esi-0x68],1
  423b1f:	hlt    
  423b20:	mov    esp,0xc9b7edd1
  423b25:	sub    BYTE PTR [ebx],dh
  423b27:	mov    esi,0x5e873f96
  423b2c:	pop    esi
  423b2d:	(bad)
  423b32:	int    0xaa
  423b34:	je     0x423ae4
  423b36:	and    eax,0x94d2aee1
  423b3b:	xchg   ebp,eax
  423b3c:	fnsave [ebp-0x6e0367d]
  423b42:	mov    ebp,0x8a5b1a75
  423b47:	jne    0x423acc
  423b49:	int    0x61
  423b4b:	mov    dh,0x9d
  423b4d:	aaa    
  423b4e:	punpckhbw mm3,mm3
  423b51:	lea    eax,[ebp-0x13f6be18]
  423b57:	into   
  423b58:	or     DWORD PTR [eax],esi
  423b5a:	popa   
  423b5b:	or     al,ah
  423b5d:	and    al,0x5d
  423b5f:	lods   al,BYTE PTR ds:[esi]
  423b60:	not    DWORD PTR [eax-0x22]
  423b63:	into   
  423b64:	neg    BYTE PTR [edi]
  423b66:	call   0x49b5e66d
  423b6b:	or     eax,0x9b78c252
  423b70:	and    ah,bh
  423b72:	das    
  423b73:	mov    ebp,0x2cfc394c
  423b78:	jle    0x423b55
  423b7a:	out    dx,al
  423b7b:	and    al,0x1d
  423b7d:	js     0x423bc2
  423b7f:	daa    
  423b80:	xor    al,0x1d
  423b82:	sbb    al,0x27
  423b84:	inc    edi
  423b85:	pusha  
  423b86:	mov    eax,0xed0e1390
  423b8b:	(bad)  
  423b8c:	xchg   ebp,eax
  423b8d:	pusha  
  423b8e:	jmp    0x423b77
  423b90:	pop    esp
  423b91:	mov    ecx,0x315b5b24
  423b96:	inc    edx
  423b97:	mov    WORD PTR [ebx],cs
  423b99:	and    al,0xd5
  423b9b:	push   ds
  423b9c:	aaa    
  423b9d:	inc    ebx
  423b9e:	call   0xf8e808dc
  423ba3:	push   ecx
  423ba4:	sub    edx,DWORD PTR ss:[edx]
  423ba7:	cdq    
  423ba8:	xlat   BYTE PTR ds:[ebx]
  423ba9:	ss push ebx
  423bab:	and    ecx,DWORD PTR [ecx]
  423bad:	push   edx
  423bae:	xor    edx,DWORD PTR [eax]
  423bb0:	mov    ebx,ebp
  423bb2:	jo     0x423bd4
  423bb4:	cmp    eax,0x3a2fca7f
  423bb9:	add    eax,DWORD PTR [eax]
  423bbb:	pop    esi
  423bbc:	dec    edi
  423bbd:	add    eax,0x6ec44deb
  423bc2:	push   edi
  423bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423bc4:	cs leave 
  423bc6:	or     BYTE PTR [edx+0x18],ah
  423bc9:	xchg   esp,eax
  423bca:	jl     0x423b89
  423bcc:	mov    al,0xc9
  423bce:	stc    
  423bcf:	pushf  
  423bd0:	or     eax,0x564da1a6
  423bd5:	leave  
  423bd6:	xchg   ebx,eax
  423bd7:	push   esi
  423bd8:	in     eax,dx
  423bd9:	(bad)  
  423bda:	cmp    eax,0x157df8c4
  423bdf:	or     eax,0x3e5876f3
  423be4:	outs   dx,BYTE PTR ds:[esi]
  423be5:	loopne 0x423c47
  423be7:	mov    esp,0x917e3232
  423bec:	icebp  
  423bed:	cmp    eax,DWORD PTR [edi]
  423bef:	inc    ecx
  423bf0:	out    dx,eax
  423bf1:	mov    ds:0x79d17b6f,al
  423bf6:	or     DWORD PTR [eax],esp
  423bf8:	push   edi
  423bf9:	(bad)  
  423bfa:	cmc    
  423bfb:	xchg   ecx,eax
  423bfc:	nop
  423bfd:	mov    cl,0x2e
  423bff:	sub    al,0x85
  423c01:	int    0xef
  423c03:	neg    BYTE PTR [esi-0x41ebdf17]
  423c09:	lods   eax,DWORD PTR ds:[esi]
  423c0a:	push   cs
  423c0b:	lock in al,dx
  423c0d:	sub    ecx,esp
  423c0f:	add    DWORD PTR cs:[ebx-0x64],ebx
  423c13:	inc    ebp
  423c14:	dec    ebp
  423c15:	xor    eax,0xe3f43a80
  423c1a:	imul   ebp,DWORD PTR [edx+0x7979189e],0xffffffff
  423c21:	inc    edi
  423c22:	mov    eax,ds:0x18d74438
  423c27:	mov    ebp,0x46ad34f8
  423c2c:	rol    DWORD PTR [edi],cl
  423c2e:	dec    ecx
  423c2f:	retf   0x9da9
  423c32:	and    eax,edx
  423c34:	loop   0x423c45
  423c36:	(bad)  
  423c37:	fadd   st(2),st
  423c39:	or     dl,BYTE PTR [ecx]
  423c3b:	jle    0x423c9e
  423c3d:	mov    cl,0x91
  423c3f:	inc    esp
  423c40:	pop    esi
  423c41:	mov    ds:0xfef05d74,al
  423c46:	sbb    eax,0xc353b129
  423c4b:	adc    BYTE PTR [ecx-0x7b],bh
  423c4e:	ins    BYTE PTR es:[edi],dx
  423c4f:	loop   0x423be3
  423c51:	nop
  423c52:	add    cl,cl
  423c54:	stos   BYTE PTR es:[edi],al
  423c55:	rcl    DWORD PTR es:[edx-0x49],cl
  423c59:	fsub   QWORD PTR [ebp-0x27]
  423c5c:	pop    esi
  423c5d:	push   edx
  423c5e:	sub    eax,0x2682df9
  423c63:	jbe    0x423c8e
  423c65:	test   DWORD PTR [ebx-0x48c092ed],ecx
  423c6b:	lea    esi,[edi+0x70]
  423c6e:	adc    BYTE PTR [esi+0x20],0xdc
  423c72:	in     eax,dx
  423c73:	inc    edi
  423c74:	or     eax,DWORD PTR [edx-0x2a]
  423c77:	cdq    
  423c78:	out    dx,eax
  423c79:	loopne 0x423c34
  423c7b:	stos   BYTE PTR es:[edi],al
  423c7c:	xchg   esp,eax
  423c7d:	and    BYTE PTR [ebx-0x5071b52d],dh
  423c83:	mov    dl,0xec
  423c85:	add    eax,0x4a7f6af9
  423c8a:	test   al,0x6e
  423c8c:	icebp  
  423c8d:	xor    ecx,DWORD PTR [eax*4+0x41431458]
  423c94:	fnstsw WORD PTR [esi+0xbd3cafb]
  423c9a:	or     ch,bl
  423c9c:	call   0x8372fac4
  423ca1:	mov    esi,0xf03bb686
  423ca6:	mov    DWORD PTR [esi+0x51194912],ecx
  423cac:	mov    ch,0xb9
  423cae:	lock pop ds
  423cb0:	aam    0x24
  423cb2:	pop    ax
  423cb4:	pop    ds
  423cb5:	enter  0x77a6,0x84
  423cb9:	shr    BYTE PTR [ebx+0x41],0x4d
  423cbd:	jns    0x423cb6
  423cbf:	nop
  423cc0:	loope  0x423d3b
  423cc2:	dec    esp
  423cc3:	and    DWORD PTR [edi+0x5da2027f],eax
  423cc9:	and    al,0xcc
  423ccb:	jne    0x423c5f
  423ccd:	pop    eax
  423cce:	loope  0x423d47
  423cd0:	pop    ds
  423cd1:	adc    ebx,DWORD PTR [esi]
  423cd3:	fnstenv [edi+ebx*2+0x17a32ef2]
  423cda:	add    al,0x35
  423cdc:	mov    eax,ds:0xf6e442ab
  423ce1:	(bad)  
  423ce2:	mov    eax,ds:0xe3fb51ba
  423ce7:	ret    
  423ce8:	call   0xb19f37d
  423ced:	setae  BYTE PTR [ebp-0x8]
  423cf1:	adc    al,0xf3
  423cf3:	test   al,0x20
  423cf5:	in     eax,dx
  423cf6:	(bad)  
  423cf7:	mov    ah,0x57
  423cf9:	mov    cl,0x51
  423cfb:	dec    esp
  423cfc:	retf   
  423cfd:	mov    dh,0x3a
  423cff:	xor    ebx,DWORD PTR [ecx]
  423d01:	sti    
  423d02:	int    0xb5
  423d04:	stc    
  423d05:	xchg   ebp,eax
  423d06:	mov    ebx,0xe8806822
  423d0b:	sbb    ebx,DWORD PTR [edx-0x32]
  423d0e:	adc    esi,DWORD PTR [ebp+0x13]
  423d11:	mov    dl,0x3
  423d13:	leave  
  423d14:	jmp    0x31a3:0x592a8409
  423d1b:	dec    ecx
  423d1c:	mov    WORD PTR [ebx-0x23],ds
  423d1f:	inc    edi
  423d20:	bound  eax,QWORD PTR [edx+0xb966107]
  423d26:	jmp    0xa6861caa
  423d2b:	xor    al,0xfb
  423d2d:	xchg   BYTE PTR [edx+0x3dde946],al
  423d33:	sub    al,0xee
  423d35:	push   ecx
  423d36:	jmp    0x423d27
  423d38:	push   esp
  423d39:	fsubr  st(3),st
  423d3b:	fisttp QWORD PTR [edi-0x13]
  423d3e:	xchg   ebp,eax
  423d3f:	cli    
  423d40:	lock test al,0x7d
  423d43:	bound  edx,QWORD PTR [esi+0x70]
  423d46:	dec    ebx
  423d47:	add    BYTE PTR [esi-0x7c],bl
  423d4a:	les    ecx,FWORD PTR [eax+edx*2-0x6e]
  423d4e:	cmp    eax,DWORD PTR [edx+0x6cdefe02]
  423d54:	mov    ah,0x53
  423d56:	popa   
  423d57:	mov    BYTE PTR [eax-0xa],ch
  423d5a:	(bad)  
  423d5b:	in     eax,dx
  423d5c:	inc    al
  423d5e:	(bad)  
  423d60:	jl     0x423d61
  423d62:	pop    esp
  423d63:	mov    edi,0x2964857e
  423d68:	or     edx,DWORD PTR [edi]
  423d6a:	sahf   
  423d6b:	dec    BYTE PTR [ecx]
  423d6d:	ret    0x1494
  423d70:	or     eax,0xc7660be9
  423d75:	push   cs
  423d76:	jns    0x423d3f
  423d78:	enter  0xf021,0x86
  423d7c:	xor    ebx,DWORD PTR [eax-0xd]
  423d7f:	test   al,0x6a
  423d81:	pop    ebx
  423d82:	xchg   ecx,eax
  423d83:	lahf   
  423d84:	inc    esi
  423d85:	sahf   
  423d86:	rcl    cl,cl
  423d88:	and    al,0x4c
  423d8a:	mov    ss,WORD PTR [ecx]
  423d8c:	scas   eax,DWORD PTR es:[edi]
  423d8d:	and    eax,0xc022b737
  423d92:	rcr    BYTE PTR ds:0x13dcf26,1
  423d98:	test   eax,0x695caa08
  423d9d:	mov    eax,ds:0x2f2a807d
  423da2:	frstor [ebx+0x1d]
  423da5:	cmp    DWORD PTR [esi-0x71],eax
  423da8:	cld    
  423da9:	mov    eax,ds:0x37cc976b
  423dae:	add    BYTE PTR [esi-0x7],cl
  423db1:	ret    0x7fdd
  423db4:	sub    bl,BYTE PTR [ebx-0x4]
  423db7:	sar    DWORD PTR [ebp+0x37],1
  423dba:	mov    bl,0x83
  423dbc:	imul   esi,DWORD PTR [ebp-0x2],0xcc38068c
  423dc3:	cmp    BYTE PTR [edi+0x2049ee4a],bl
  423dc9:	jmp    0xbb40:0xe4a8897
  423dd0:	inc    edx
  423dd1:	push   edx
  423dd2:	add    BYTE PTR [ecx+0x1cf644e8],al
  423dd8:	xor    al,0xa3
  423dda:	mov    WORD PTR [ecx+0x72bef382],ds
  423de0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423de1:	mov    BYTE PTR [edx],dh
  423de3:	mov    esp,0x78b3428b
  423de8:	fdivr  QWORD PTR [ecx]
  423dea:	clc    
  423deb:	xor    BYTE PTR [edi+0x4f],0xeb
  423def:	dec    eax
  423df0:	pop    edi
  423df1:	(bad)  
  423df2:	adc    DWORD PTR [edi],ecx
  423df4:	lods   al,BYTE PTR ds:[esi]
  423df5:	test   DWORD PTR [edx+ebp*4],ecx
  423df8:	inc    ebx
  423df9:	aad    0x7f
  423dfb:	mov    ah,0xa8
  423dfd:	pop    ds
  423dfe:	pop    edx
  423dff:	mov    ah,0x7a
  423e01:	mov    cl,0x94
  423e03:	and    BYTE PTR [eax+0x19259b1d],cl
  423e09:	int    0xfc
  423e0b:	sub    cl,BYTE PTR [ebp+0x66c2b773]
  423e11:	xchg   ebp,eax
  423e12:	icebp  
  423e13:	cwde   
  423e14:	jbe    0x423e18
  423e16:	and    ebx,ecx
  423e18:	cli    
  423e19:	jp     0x423e84
  423e1b:	cdq    
  423e1c:	push   0xf516cbcc
  423e21:	out    0x1d,al
  423e23:	sub    al,0x21
  423e25:	jae    0x423e85
  423e27:	dec    ebx
  423e28:	repz fyl2x 
  423e2b:	in     eax,dx
  423e2c:	push   eax
  423e2d:	aas    
  423e2e:	addr16 (bad) 
  423e30:	dec    BYTE PTR [esi-0x3414ac67]
  423e36:	shl    DWORD PTR [edi],0xe6
  423e39:	xchg   DWORD PTR [esp+esi*2+0x66fdd0e7],eax
  423e40:	push   esi
  423e41:	and    cl,dl
  423e43:	fstp   TBYTE PTR [esi+eiz*8+0x120f2be4]
  423e4a:	cld    
  423e4b:	popa   
  423e4c:	es inc ebx
  423e4e:	add    al,0x48
  423e50:	jae    0x423de7
  423e52:	test   DWORD PTR [ecx+0x2c17d4af],ecx
  423e58:	mov    edx,0x34a5e26a
  423e5d:	push   edx
  423e5e:	rcr    bh,0xbd
  423e61:	inc    esi
  423e62:	cmp    ch,BYTE PTR [eax-0x38d48e30]
  423e68:	or     edx,ecx
  423e6a:	and    DWORD PTR [eax-0x7c],edi
  423e6d:	cpuid  
  423e6f:	jmp    0x423e5f
  423e71:	inc    ebx
  423e72:	sub    esi,ecx
  423e74:	stc    
  423e75:	je     0x423e0f
  423e77:	sbb    eax,0x6b3af9ab
  423e7c:	push   edx
  423e7d:	mov    ds:0xc31075e6,al
  423e82:	cdq    
  423e83:	or     bl,dh
  423e85:	sahf   
  423e86:	test   eax,0x9d866243
  423e8b:	cmp    esi,eax
  423e8d:	mov    ds:0x55b3bea3,al
  423e92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e93:	cmp    BYTE PTR [ecx],ch
  423e95:	adc    BYTE PTR [esi+0x1bff3229],dl
  423e9b:	cli    
  423e9c:	ficomp DWORD PTR [ecx-0x1830624]
  423ea2:	or     bh,BYTE PTR [edx]
  423ea4:	pusha  
  423ea5:	retf   
  423ea6:	je     0x423ea5
  423ea8:	ins    BYTE PTR es:[edi],dx
  423ea9:	cmp    DWORD PTR [ecx+0x3fa8b074],edi
  423eaf:	int    0xc
  423eb1:	jnp    0x423ee3
  423eb3:	inc    ecx
  423eb4:	aaa    
  423eb5:	inc    ecx
  423eb6:	push   ebx
  423eb7:	inc    eax
  423eb8:	sbb    BYTE PTR [ebx+ecx*1+0x8ee8911],dh
  423ebf:	dec    eax
  423ec0:	pop    esp
  423ec1:	mov    ah,0x11
  423ec3:	push   esi
  423ec4:	ins    DWORD PTR es:[edi],dx
  423ec5:	push   esi
  423ec6:	in     al,0xc5
  423ec8:	xor    bl,BYTE PTR [edx+0x4f]
  423ecb:	in     al,0x4e
  423ecd:	mov    WORD PTR [eax-0x1b],?
  423ed0:	push   esi
  423ed1:	aas    
  423ed2:	push   ss
  423ed3:	dec    edi
  423ed4:	mov    dl,BYTE PTR [edx]
  423ed6:	push   ds
  423ed7:	leave  
  423ed8:	sbb    al,0x47
  423eda:	loopne 0x423ee6
  423edc:	mov    dl,0xcd
  423ede:	dec    edx
  423edf:	pop    ebx
  423ee0:	xor    edi,ebp
  423ee2:	mov    ebx,0x539fa5b7
  423ee8:	xor    ebx,0x0
  423eeb:	mov    eax,ecx
  423eed:	add    eax,0xfabdbecf
  423ef2:	adc    edi,0xffffffff
  423ef5:	xor    eax,0x8a29a145
  423efa:	xor    edi,0x0
  423efd:	cmp    eax,esi
  423eff:	jne    0x421ae1
  423f05:	cmp    edi,ebx
  423f07:	jne    0x421ae1
  423f0d:	mov    eax,0xf89c85b8
  423f12:	pop    ebx
  423f13:	pop    edi
  423f14:	pop    esi
  423f15:	leave  
  423f16:	ret    0xc
  423f19:	push   ebp
  423f1a:	mov    ebp,esp
  423f1c:	push   ecx
  423f1d:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  423f24:	and    edx,ecx
  423f26:	mov    eax,DWORD PTR [ebp+0x8]
  423f29:	and    DWORD PTR ds:0x428e95,edi
  423f2f:	movsx  eax,BYTE PTR [eax]
  423f32:	sub    edx,ecx
  423f34:	mov    edx,0x3272f8
  423f39:	xor    ecx,ecx
  423f3b:	add    ecx,DWORD PTR ds:0x428e9d
  423f41:	and    DWORD PTR ds:0x428e71,ecx
  423f47:	sub    eax,edx
  423f49:	mov    ecx,0x75108b1
  423f4e:	sub    DWORD PTR ds:0x428e29,0x428e25
  423f58:	xor    eax,ecx
  423f5a:	cmp    eax,0xf89c85e4
  423f5f:	mov    DWORD PTR ds:0x428e9d,0x7b75
  423f69:	jne    0x423ff4
  423f6f:	and    DWORD PTR ds:0x428e25,0x0
  423f79:	mov    eax,ds:0x428e25
  423f7e:	inc    eax
  423f7f:	mov    ds:0x428e25,eax
  423f84:	cmp    DWORD PTR ds:0x428e25,0x6
  423f8b:	jbe    0x423fcb
  423f91:	jmp    0x423fa6
  423f96:	push   0x42804e
  423f9b:	push   DWORD PTR [ebp-0xc]
  423f9e:	push   0x0
  423fa0:	call   DWORD PTR ds:0x42ca4c
  423fa6:	cmp    DWORD PTR ds:0x428e25,0x5
  423fad:	jne    0x423fbe
  423fb3:	mov    eax,ds:0x428e25
  423fb8:	inc    eax
  423fb9:	mov    ds:0x428e25,eax
  423fbe:	cmp    DWORD PTR ds:0x428e25,0x1a
  423fc5:	jb     0x423f79
  423fcb:	mov    eax,DWORD PTR [ebp+0x8]
  423fce:	push   esi
  423fcf:	mov    esi,DWORD PTR [ebp+0x8]
  423fd2:	add    esi,DWORD PTR [eax+0x3c]
  423fd5:	mov    DWORD PTR [ebp+0x8],esi
  423fd8:	mov    eax,DWORD PTR [ebp-0x4]
  423fdb:	mov    esi,DWORD PTR [ebp+0x8]
  423fde:	xor    eax,ecx
  423fe0:	add    eax,edx
  423fe2:	cmp    DWORD PTR [esi+0x54],eax
  423fe5:	pop    esi
  423fe6:	je     0x423ff4
  423fec:	mov    eax,DWORD PTR [ebp+0x8]
  423fef:	jmp    0x423ffb
  423ff4:	mov    eax,DWORD PTR [ebp-0x4]
  423ff7:	xor    eax,ecx
  423ff9:	add    eax,edx
  423ffb:	leave  
  423ffc:	ret    0x4
  423fff:	push   ebp
  424000:	mov    ebp,esp
  424002:	sub    esp,0xc
  424005:	adc    DWORD PTR ds:0x428e71,ebx
  42400b:	push   esi
  42400c:	or     ecx,0x44ac
  424012:	mov    eax,0xf89c85b9
  424017:	mov    DWORD PTR ds:0x428eb5,0x14
  424021:	cmp    DWORD PTR ds:0x428eb5,0x0
  424028:	je     0x42405d
  42402e:	cmp    DWORD PTR ds:0x428eb5,0x1d
  424035:	jb     0x42405d
  42403b:	jmp    0x424049
  424040:	push   DWORD PTR [ebp-0x24]
  424043:	call   DWORD PTR ds:0x42ca50
  424049:	xor    edx,edx
  42404b:	add    edx,DWORD PTR ds:0x428eb5
  424051:	dec    edx
  424052:	mov    DWORD PTR ds:0x428eb5,edx
  424058:	jmp    0x424021
  42405d:	mov    DWORD PTR [ebp-0x8],eax
  424060:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  424067:	and    DWORD PTR ds:0x428e65,0x0
  424071:	jmp    0x424083
  424076:	mov    ecx,DWORD PTR ds:0x428e65
  42407c:	inc    ecx
  42407d:	mov    DWORD PTR ds:0x428e65,ecx
  424083:	cmp    DWORD PTR ds:0x428e65,0x19
  42408a:	jae    0x4240c5
  424090:	cmp    DWORD PTR ds:0x428e65,0x1b
  424097:	jle    0x4240c5
  42409d:	jmp    0x4240c0
  4240a2:	push   DWORD PTR [ebp-0xc]
  4240a5:	push   0x1fe6
  4240aa:	push   DWORD PTR [ebp-0x1c]
  4240ad:	push   DWORD PTR [ebp-0xc]
  4240b0:	push   0x428124
  4240b5:	push   0x1d19
  4240ba:	call   DWORD PTR ds:0x42ca10
  4240c0:	jmp    0x424076
  4240c5:	mov    esi,DWORD PTR [ebp-0x4]
  4240c8:	xor    DWORD PTR ds:0x428e35,0x687d
  4240d2:	push   edi
  4240d3:	mov    DWORD PTR ds:0x428e8d,0x1d
  4240dd:	cmp    DWORD PTR ds:0x428e8d,0x0
  4240e4:	je     0x42412b
  4240ea:	cmp    DWORD PTR ds:0x428e8d,0x26
  4240f1:	ja     0x42412b
  4240f7:	jmp    0x424119
  4240fc:	push   0x4877
  424101:	push   0x5dd2
  424106:	push   0x3bfb
  42410b:	push   DWORD PTR [ebp-0x24]
  42410e:	push   0x428e91
  424113:	call   DWORD PTR ds:0x42ca14
  424119:	mov    ecx,DWORD PTR ds:0x428e8d
  42411f:	dec    ecx
  424120:	mov    DWORD PTR ds:0x428e8d,ecx
  424126:	jmp    0x4240dd
  42412b:	mov    edi,DWORD PTR [ebp-0x8]
  42412e:	mov    ecx,0x75108b1
  424133:	xor    esi,ecx
  424135:	xor    edi,ecx
  424137:	mov    edx,0x3272f8
  42413c:	add    edi,edx
  42413e:	add    esi,edx
  424140:	imul   esi,edi
  424143:	mov    edi,DWORD PTR [ebp+0xc]
  424146:	cmp    edi,esi
  424148:	je     0x42419d
  42414e:	mov    DWORD PTR [ebp-0xc],eax
  424151:	mov    eax,DWORD PTR [ebp-0xc]
  424154:	mov    esi,DWORD PTR [ebp+0xc]
  424157:	xor    eax,ecx
  424159:	lea    eax,[eax*8+0x1939838]
  424160:	mov    eax,DWORD PTR [esi+eax*1]
  424163:	mov    DWORD PTR [ebp+0xc],eax
  424166:	mov    eax,DWORD PTR [ebp-0x4]
  424169:	mov    esi,DWORD PTR [ebp-0x8]
  42416c:	xor    eax,ecx
  42416e:	xor    esi,ecx
  424170:	add    esi,edx
  424172:	add    eax,edx
  424174:	imul   eax,esi
  424177:	mov    esi,DWORD PTR [ebp+0xc]
  42417a:	cmp    esi,eax
  42417c:	je     0x42419d
  424182:	mov    eax,DWORD PTR [ebp-0x4]
  424185:	xor    eax,ecx
  424187:	mov    ecx,DWORD PTR [ebp+0xc]
  42418a:	add    eax,edx
  42418c:	imul   eax,ecx
  42418f:	add    eax,DWORD PTR [ebp+0x8]
  424192:	mov    DWORD PTR [ebp+0xc],eax
  424195:	mov    eax,DWORD PTR [ebp+0xc]
  424198:	jmp    0x4241ae
  42419d:	mov    eax,DWORD PTR [ebp-0x4]
  4241a0:	mov    esi,DWORD PTR [ebp-0x8]
  4241a3:	xor    esi,ecx
  4241a5:	xor    eax,ecx
  4241a7:	add    esi,edx
  4241a9:	add    eax,edx
  4241ab:	imul   eax,esi
  4241ae:	pop    edi
  4241af:	pop    esi
  4241b0:	leave  
  4241b1:	ret    0x8
	...
  4241c4:	iret   
  4241c5:	lods   eax,DWORD PTR ds:[esi]
  4241c6:	mov    ecx,DWORD PTR [ebp+0x0]
  4241c9:	add    BYTE PTR [eax],al
  4241cb:	add    BYTE PTR [edx],al
  4241cd:	add    BYTE PTR [eax],al
  4241cf:	add    BYTE PTR [ecx+0x0],al
  4241d2:	add    BYTE PTR [eax],al
  4241d4:	loopne 0x424217
  4241d6:	add    al,BYTE PTR [eax]
  4241d8:	loopne 0x42420f
  4241da:	add    al,BYTE PTR [eax]
  4241dc:	add    BYTE PTR [eax],al
  4241de:	add    BYTE PTR [eax],al
  4241e0:	push   edx
  4241e1:	push   ebx
  4241e2:	inc    esp
  4241e3:	push   ebx
  4241e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241e5:	push   edx
  4241e6:	inc    esi
  4241e7:	in     eax,0x53
  4241e9:	addr16 xchg ebp,eax
  4241eb:	dec    ebx
  4241ec:	xchg   ebp,eax
  4241ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241ee:	mov    bh,0xd3
  4241f0:	rcr    edi,1
  4241f2:	ins    DWORD PTR es:[edi],dx
  4241f3:	mov    ah,0x1
  4241f5:	add    BYTE PTR [eax],al
  4241f7:	add    BYTE PTR [ebx+0x3a],al
  4241fa:	pop    esp
  4241fb:	inc    esi
  4241fc:	outs   dx,DWORD PTR ds:[esi]
  4241fd:	ins    BYTE PTR es:[edi],dx
  4241fe:	fs gs jb 0x424222
  424202:	outs   dx,DWORD PTR ds:[esi]
  424203:	data16 and BYTE PTR [edi+0x6f],dl
  424207:	jb     0x424274
  424209:	imul   ebp,DWORD PTR [esi+0x67],0x6f725020
  424210:	push   0x65
  424212:	arpl   WORD PTR [esp+ebx*2+0x50],si
  424216:	jb     0x424287
  424218:	push   0x65
  42421a:	arpl   WORD PTR [esp+edx*2+0x65],si
  42421e:	jae    0x424294
  424220:	add    BYTE PTR [ebx-0x137e13ab],cl
  424226:	or     BYTE PTR [ecx],al
  424228:	add    BYTE PTR [eax],al
  42422a:	push   ebx
  42422b:	mov    eax,ebx
  42422d:	xchg   ecx,eax
  42422e:	mov    eax,DWORD PTR [ebp+0x8]
  424231:	cmp    eax,0xf89c85b9
  424236:	jne    0x4246ce
  42423c:	mov    eax,DWORD PTR [ebp+0xc]
  42423f:	cmp    eax,0xf89c85b8
  424244:	jne    0x4246ce
  42424a:	mov    eax,DWORD PTR [ebp+0x24]
  42424d:	mov    DWORD PTR [ebp-0x4],eax
  424250:	mov    eax,DWORD PTR [ebp-0x4]
  424253:	mov    eax,DWORD PTR [eax+0x1d8]
  424259:	mov    eax,DWORD PTR [eax]
  42425b:	mov    eax,DWORD PTR [eax]
  42425d:	mov    DWORD PTR [ebp-0x8],eax
  424260:	mov    BYTE PTR [ebp-0x18],0xe2
  424264:	mov    BYTE PTR [ebp-0x17],0xdf
  424268:	mov    BYTE PTR [ebp-0x16],0xe4
  42426c:	mov    BYTE PTR [ebp-0x15],0xae
  424270:	mov    BYTE PTR [ebp-0x14],0xad
  424274:	mov    BYTE PTR [ebp-0x13],0x7b
  424278:	mov    BYTE PTR [ebp-0x20],0xf0
  42427c:	mov    BYTE PTR [ebp-0x1f],0xee
  424280:	mov    BYTE PTR [ebp-0x1e],0xe0
  424284:	mov    BYTE PTR [ebp-0x1d],0xed
  424288:	mov    BYTE PTR [ebp-0x1c],0xae
  42428c:	mov    BYTE PTR [ebp-0x1b],0xad
  424290:	mov    BYTE PTR [ebp-0x1a],0x7b
  424294:	mov    BYTE PTR [ebp-0x28],0xee
  424298:	mov    BYTE PTR [ebp-0x27],0xe3
  42429c:	mov    BYTE PTR [ebp-0x26],0xe7
  4242a0:	mov    BYTE PTR [ebp-0x25],0xf2
  4242a4:	mov    BYTE PTR [ebp-0x24],0xdc
  4242a8:	mov    BYTE PTR [ebp-0x23],0xeb
  4242ac:	mov    BYTE PTR [ebp-0x22],0xe4
  4242b0:	mov    BYTE PTR [ebp-0x21],0x7b
  4242b4:	xor    ecx,ecx
  4242b6:	lea    eax,[ebp+ecx*1-0x18]
  4242ba:	movzx  edx,BYTE PTR [eax]
  4242bd:	xor    edx,0x80
  4242c3:	add    edx,0x5
  4242c6:	inc    ecx
  4242c7:	mov    BYTE PTR [eax],dl
  4242c9:	cmp    ecx,0x6
  4242cc:	jb     0x4242b6
  4242ce:	xor    ecx,ecx
  4242d0:	lea    eax,[ebp+ecx*1-0x20]
  4242d4:	movzx  edx,BYTE PTR [eax]
  4242d7:	xor    edx,0x80
  4242dd:	add    edx,0x5
  4242e0:	inc    ecx
  4242e1:	mov    BYTE PTR [eax],dl
  4242e3:	cmp    ecx,0x7
  4242e6:	jb     0x4242d0
  4242e8:	xor    ecx,ecx
  4242ea:	lea    eax,[ebp+ecx*1-0x28]
  4242ee:	movzx  edx,BYTE PTR [eax]
  4242f1:	xor    edx,0x80
  4242f7:	add    edx,0x5
  4242fa:	inc    ecx
  4242fb:	mov    BYTE PTR [eax],dl
  4242fd:	cmp    ecx,0x8
  424300:	jb     0x4242ea
  424302:	lea    eax,[ebp-0x2c]
  424305:	mov    DWORD PTR [ebp-0x8],eax
  424308:	mov    ecx,DWORD PTR [ebp-0x8]
  42430b:	mov    eax,0x7113fcef
  424310:	push   esi
  424311:	mov    DWORD PTR [ecx],eax
  424313:	mov    ecx,DWORD PTR [ebp-0x2c]
  424316:	mov    esi,0x4e3e
  42431b:	push   edi
  42431c:	lea    edi,[esi-0xa]
  42431f:	mov    ebx,0x3272f8
  424324:	cmp    ecx,eax
  424326:	jne    0x4243f7
  42432c:	lea    eax,[esi+0x39]
  42432f:	mov    WORD PTR [ebp-0x78],ax
  424333:	mov    eax,esi
  424335:	mov    WORD PTR [ebp-0x76],ax
  424339:	add    eax,0x3b
  42433c:	mov    WORD PTR [ebp-0x74],ax
  424340:	lea    eax,[esi-0x6]
  424343:	mov    WORD PTR [ebp-0x72],ax
  424347:	add    eax,0x47
  42434a:	mov    WORD PTR [ebp-0x70],ax
  42434e:	mov    eax,edi
  424350:	mov    WORD PTR [ebp-0x6e],ax
  424354:	mov    eax,0x4f92
  424359:	mov    WORD PTR [ebp-0x6c],ax
  42435d:	lea    eax,[esi-0x9]
  424360:	mov    WORD PTR [ebp-0x6a],ax
  424364:	add    eax,0x30
  424367:	mov    WORD PTR [ebp-0x68],ax
  42436b:	lea    eax,[esi-0xd]
  42436e:	mov    WORD PTR [ebp-0x66],ax
  424372:	mov    eax,esi
  424374:	mov    WORD PTR [ebp-0x64],ax
  424378:	add    eax,0xfffffff4
  42437b:	mov    WORD PTR [ebp-0x62],ax
  42437f:	mov    eax,0x44b
  424384:	mov    WORD PTR [ebp-0x60],ax
  424388:	mov    eax,0x5674
  42438d:	mov    WORD PTR [ebp-0x5e],ax
  424391:	mov    eax,0x6114
  424396:	mov    WORD PTR [ebp-0x5c],ax
  42439a:	mov    eax,0xf1e6
  42439f:	mov    WORD PTR [ebp-0x5a],ax
  4243a3:	mov    eax,edi
  4243a5:	mov    WORD PTR [ebp-0x58],ax
  4243a9:	lea    eax,[ebp-0xe0]
  4243af:	push   eax
  4243b0:	mov    eax,DWORD PTR [ebp+0xc]
  4243b3:	xor    eax,0x75108b1
  4243b8:	add    eax,ebx
  4243ba:	push   eax
  4243bb:	lea    eax,[ebp-0x78]
  4243be:	push   eax
  4243bf:	mov    eax,DWORD PTR [ebp-0x4]
  4243c2:	mov    eax,DWORD PTR [eax+0x198]
  4243c8:	mov    DWORD PTR [ebp-0xe0],0x1
  4243d2:	mov    DWORD PTR [ebp-0xdc],0xffff
  4243dc:	push   DWORD PTR [eax]
  4243de:	mov    eax,DWORD PTR [ebp+0x10]
  4243e1:	call   eax
  4243e3:	mov    DWORD PTR [ebp-0x8],eax
  4243e6:	mov    eax,DWORD PTR [ebp-0x8]
  4243e9:	test   eax,eax
  4243eb:	je     0x4243f7
  4243ed:	xor    DWORD PTR ds:0xe041cdd,0x9f170bcc
  4243f7:	mov    eax,DWORD PTR [ebp-0x4]
  4243fa:	mov    ecx,DWORD PTR [eax+0x18c]
  424400:	xor    eax,eax
  424402:	cmp    DWORD PTR [ecx],eax
  424404:	jne    0x42463e
  42440a:	mov    ecx,DWORD PTR [ebp-0x4]
  42440d:	mov    ecx,DWORD PTR [ecx+0x17c]
  424413:	mov    DWORD PTR [ecx],eax
  424415:	mov    ecx,DWORD PTR [ebp-0x4]
  424418:	mov    ecx,DWORD PTR [ecx+0x180]
  42441e:	mov    DWORD PTR [ecx],eax
  424420:	mov    eax,0x4e69
  424425:	mov    WORD PTR [ebp-0x9c],ax
  42442c:	mov    eax,esi
  42442e:	mov    WORD PTR [ebp-0x9a],ax
  424435:	mov    eax,0x4e79
  42443a:	mov    WORD PTR [ebp-0x98],ax
  424441:	add    eax,0xffffffc0
  424444:	mov    WORD PTR [ebp-0x96],ax
  42444b:	mov    eax,0x4f8e
  424450:	mov    WORD PTR [ebp-0x94],ax
  424457:	mov    eax,0x4e3a
  42445c:	mov    WORD PTR [ebp-0x92],ax
  424463:	mov    eax,esi
  424465:	mov    WORD PTR [ebp-0x8c],ax
  42446c:	mov    eax,0x4e35
  424471:	mov    WORD PTR [ebp-0x8a],ax
  424478:	mov    eax,0x99f9
  42447d:	mov    WORD PTR [ebp-0x88],ax
  424484:	mov    eax,0x8d6a
  424489:	mov    WORD PTR [ebp-0x86],ax
  424490:	mov    eax,0xd66f
  424495:	mov    WORD PTR [ebp-0x84],ax
  42449c:	mov    BYTE PTR [ebp-0x10],0xee
  4244a0:	mov    eax,0xd78b
  4244a5:	mov    WORD PTR [ebp-0x82],ax
  4244ac:	mov    BYTE PTR [ebp-0xf],0xe3
  4244b0:	mov    eax,0x2784
  4244b5:	mov    BYTE PTR [ebp-0xe],0xe7
  4244b9:	mov    WORD PTR [ebp-0x80],ax
  4244bd:	mov    BYTE PTR [ebp-0xd],0xf2
  4244c1:	mov    eax,0x4784
  4244c6:	mov    BYTE PTR [ebp-0xc],0xdc
  4244ca:	mov    WORD PTR [ebp-0x7e],ax
  4244ce:	mov    eax,0x4e3b
  4244d3:	mov    BYTE PTR [ebp-0xb],0xeb
  4244d7:	push   0x8
  4244d9:	mov    BYTE PTR [ebp-0xa],0xe4
  4244dd:	mov    WORD PTR [ebp-0x7c],ax
  4244e1:	mov    BYTE PTR [ebp-0x9],0x7b
  4244e5:	mov    DWORD PTR [ebp-0x90],0x4e344e65
  4244ef:	lea    eax,[ebp-0x10]
  4244f2:	pop    edi
  4244f3:	movzx  ecx,BYTE PTR [eax]
  4244f6:	xor    ecx,0x80
  4244fc:	add    ecx,0x5
  4244ff:	mov    BYTE PTR [eax],cl
  424501:	inc    eax
  424502:	dec    edi
  424503:	jne    0x4244f3
  424505:	mov    DWORD PTR [ebp-0xe0],0x1
  42450f:	lea    eax,[ebp-0x10]
  424512:	mov    DWORD PTR [ebp-0xdc],eax
  424518:	mov    ecx,0x4e66
  42451d:	mov    eax,ecx
  42451f:	mov    WORD PTR [ebp-0x40],ax
  424523:	add    eax,0xd
  424526:	mov    edx,eax
  424528:	mov    WORD PTR [ebp-0x3e],dx
  42452c:	mov    edx,0x4f9b
  424531:	mov    WORD PTR [ebp-0x3c],dx
  424535:	add    edx,0xfffffff8
  424538:	mov    WORD PTR [ebp-0x3a],dx
  42453c:	mov    edx,0x4f8d
  424541:	mov    WORD PTR [ebp-0x38],dx
  424545:	add    edx,0xfffffffb
  424548:	mov    WORD PTR [ebp-0x36],dx
  42454c:	mov    edx,0x4f87
  424551:	mov    WORD PTR [ebp-0x34],dx
  424555:	mov    WORD PTR [ebp-0x32],cx
  424559:	mov    ecx,esi
  42455b:	mov    WORD PTR [ebp-0x30],cx
  42455f:	lea    ecx,[edx-0x1]
  424562:	mov    edx,ecx
  424564:	mov    WORD PTR [ebp-0x54],dx
  424568:	mov    edx,eax
  42456a:	mov    WORD PTR [ebp-0x52],dx
  42456e:	mov    edx,0x4e7b
  424573:	mov    WORD PTR [ebp-0x50],dx
  424577:	mov    WORD PTR [ebp-0x4e],ax
  42457b:	lea    eax,[edx-0xe]
  42457e:	mov    WORD PTR [ebp-0x4c],ax
  424582:	add    eax,0xfffffffb
  424585:	mov    WORD PTR [ebp-0x4a],ax
  424589:	lea    eax,[edx-0x14]
  42458c:	mov    WORD PTR [ebp-0x48],ax
  424590:	mov    WORD PTR [ebp-0x46],cx
  424594:	mov    WORD PTR [ebp-0x44],si
  424598:	mov    ecx,DWORD PTR [ebp+0x8]
  42459b:	movzx  edx,WORD PTR [ebp-0x54]
  42459f:	mov    eax,0x75108b1
  4245a4:	xor    ecx,eax
  4245a6:	add    ecx,ebx
  4245a8:	xor    ecx,edx
  4245aa:	mov    WORD PTR [ebp-0x54],cx
  4245ae:	mov    ecx,DWORD PTR [ebp+0x8]
  4245b1:	xor    ecx,eax
  4245b3:	movzx  eax,WORD PTR [ebp-0x40]
  4245b7:	add    ecx,ebx
  4245b9:	xor    ecx,eax
  4245bb:	xor    eax,eax
  4245bd:	mov    WORD PTR [ebp-0x40],cx
  4245c1:	mov    WORD PTR [ebp-0xf4],ax
  4245c8:	mov    WORD PTR [ebp-0x108],ax
  4245cf:	mov    edi,DWORD PTR [ebp+0x24]
  4245d2:	lea    eax,[ebp-0xf4]
  4245d8:	lea    edx,[ebp-0x54]
  4245db:	mov    DWORD PTR [ebp-0xe0],0x2
  4245e5:	mov    DWORD PTR [ebp-0xdc],eax
  4245eb:	call   0x42702b
  4245f0:	mov    ecx,DWORD PTR [ebp+0x8]
  4245f3:	mov    DWORD PTR [ebp-0xd8],eax
  4245f9:	mov    eax,0x75108b1
  4245fe:	xor    ecx,eax
  424600:	add    ecx,ebx
  424602:	je     0x424621
  424604:	lea    ecx,[ebp-0xe0]
  42460a:	push   ecx
  42460b:	mov    ecx,DWORD PTR [ebp+0xc]
  42460e:	xor    ecx,eax
  424610:	add    ecx,ebx
  424612:	push   ecx
  424613:	lea    eax,[ebp-0x9c]
  424619:	push   eax
  42461a:	mov    eax,DWORD PTR [ebp+0x10]
  42461d:	push   0x0
  42461f:	call   eax
  424621:	mov    edi,DWORD PTR [ebp+0x24]
  424624:	lea    eax,[ebp-0x108]
  42462a:	lea    edx,[ebp-0x40]
  42462d:	mov    DWORD PTR [ebp-0xdc],eax
  424633:	call   0x42702b
  424638:	mov    DWORD PTR [ebp-0xd8],eax
  42463e:	mov    eax,DWORD PTR [ebp+0x14]
  424641:	push   DWORD PTR [ebp-0x4]
  424644:	push   DWORD PTR [ebp+0x20]
  424647:	push   DWORD PTR [ebp+0x1c]
  42464a:	push   DWORD PTR [ebp+0x18]
  42464d:	push   DWORD PTR [ebp+0x10]
  424650:	push   DWORD PTR [ebp+0x8]
  424653:	push   DWORD PTR [ebp+0xc]
  424656:	call   0x4258cc
  42465b:	test   eax,eax
  42465d:	je     0x4246a4
  42465f:	add    DWORD PTR [ebp-0x4],eax
  424662:	push   DWORD PTR [ebp-0x4]
  424665:	lea    esi,[ebp+0x4]
  424668:	call   0x424abc
  42466d:	mov    eax,DWORD PTR [ebp-0x4]
  424670:	mov    eax,DWORD PTR [eax+0x1c8]
  424676:	mov    eax,DWORD PTR [eax]
  424678:	xor    eax,0x75108b1
  42467d:	add    eax,ebx
  42467f:	mov    eax,DWORD PTR [ebp-0x4]
  424682:	jne    0x42469a
  424684:	mov    ecx,DWORD PTR [ebp-0x4]
  424687:	mov    ecx,DWORD PTR [ecx+0x1cc]
  42468d:	push   DWORD PTR [ecx]
  42468f:	mov    eax,DWORD PTR [eax+0x1e0]
  424695:	call   DWORD PTR [eax+0x28]
  424698:	jmp    0x4246a4
  42469a:	mov    eax,DWORD PTR [eax+0x17c]
  4246a0:	mov    eax,DWORD PTR [eax]
  4246a2:	add    DWORD PTR [esi],eax
  4246a4:	mov    eax,DWORD PTR [ebp-0x4]
  4246a7:	mov    eax,DWORD PTR [eax+0x1dc]
  4246ad:	dec    DWORD PTR [eax]
  4246af:	mov    ecx,DWORD PTR [ebp-0x4]
  4246b2:	mov    ecx,DWORD PTR [ecx+0x1d8]
  4246b8:	mov    eax,DWORD PTR [eax]
  4246ba:	lea    eax,[ecx+eax*4]
  4246bd:	mov    ecx,DWORD PTR [ebp-0x4]
  4246c0:	mov    ecx,DWORD PTR [ecx+0x17c]
  4246c6:	mov    eax,DWORD PTR [eax]
  4246c8:	mov    ecx,DWORD PTR [ecx]
  4246ca:	add    DWORD PTR [eax],ecx
  4246cc:	pop    edi
  4246cd:	pop    esi
  4246ce:	pop    ebx
  4246cf:	leave  
  4246d0:	ret    0x20
  4246d3:	push   edi
  4246d4:	push   esi
  4246d5:	push   ebx
  4246d6:	push   ebp
  4246d7:	mov    ebp,esp
  4246d9:	mov    eax,DWORD PTR [ebp+0x24]
  4246dc:	add    DWORD PTR [ebp+0x28],eax
  4246df:	push   eax
  4246e0:	cld    
  4246e1:	mov    esi,DWORD PTR [ebp+0x18]
  4246e4:	add    DWORD PTR [ebp+0x1c],esi
  4246e7:	push   esi
  4246e8:	mov    esi,DWORD PTR [ebp+0x14]
  4246eb:	lods   eax,DWORD PTR ds:[esi]
  4246ec:	xchg   edx,eax
  4246ed:	push   edx
  4246ee:	mov    cl,BYTE PTR [esi-0x2]
  4246f1:	or     eax,0xffffffff
  4246f4:	shl    eax,cl
  4246f6:	not    eax
  4246f8:	push   eax
  4246f9:	mov    cl,dh
  4246fb:	or     eax,0xffffffff
  4246fe:	shl    eax,cl
  424700:	not    eax
  424702:	push   eax
  424703:	add    cl,dl
  424705:	mov    edi,esi
  424707:	sub    esp,0xc
  42470a:	sub    eax,eax
  42470c:	inc    eax
  42470d:	push   eax
  42470e:	push   eax
  42470f:	push   eax
  424710:	push   eax
  424711:	push   eax
  424712:	push   edi
  424713:	sub    esi,esi
  424715:	push   esi
  424716:	or     ebx,0xffffffff
  424719:	mov    eax,0x300
  42471e:	shl    eax,cl
  424720:	lea    ecx,[eax+0x736]
  424726:	mov    eax,0x4000400
  42472b:	shr    ecx,1
  42472d:	rep stos DWORD PTR es:[edi],eax
  42472f:	push   0x5
  424731:	pop    ecx
  424732:	call   0x424a1d
  424737:	loop   0x424732
  424739:	lea    esi,[esi]
  42473b:	lea    edi,[edi]
  42473d:	mov    edi,DWORD PTR [ebp-0x4]
  424740:	mov    eax,DWORD PTR [ebp-0x10]
  424743:	sub    edi,DWORD PTR [ebp+0x24]
  424746:	and    eax,edi
  424748:	mov    DWORD PTR [ebp-0x18],eax
  42474b:	mov    al,0x0
  42474d:	call   0x424a35
  424752:	jne    0x4247ed
  424758:	mov    cl,BYTE PTR [ebp-0xc]
  42475b:	and    edi,DWORD PTR [ebp-0x14]
  42475e:	shl    edi,cl
  424760:	sub    cl,0x8
  424763:	neg    cl
  424765:	shr    esi,cl
  424767:	pop    eax
  424768:	add    edi,esi
  42476a:	pop    esi
  42476b:	lea    edi,[edi+edi*2]
  42476e:	shl    edi,0x8
  424771:	cmp    al,0x7
  424773:	pop    edx
  424774:	lea    ecx,[esi+edi*2+0xe6c]
  42477b:	push   ecx
  42477c:	push   esi
  42477d:	mov    esi,0x100
  424782:	push   eax
  424783:	mov    al,0x1
  424785:	jb     0x4247bb
  424787:	mov    edi,DWORD PTR [ebp-0x4]
  42478a:	sub    edi,DWORD PTR [ebp-0x24]
  42478d:	movzx  edi,BYTE PTR [edi]
  424790:	mov    ebp,DWORD PTR [ebp-0x34]
  424793:	shl    edi,1
  424795:	mov    ecx,esi
  424797:	and    esi,edi
  424799:	add    ecx,esi
  42479b:	lea    ebp,[ebp+ecx*2+0x0]
  42479f:	call   0x424a54
  4247a4:	mov    ecx,eax
  4247a6:	shr    esi,0x8
  4247a9:	and    ecx,0x1
  4247ac:	cmp    esi,ecx
  4247ae:	mov    esi,0x100
  4247b3:	jne    0x4247c3
  4247b5:	cmp    eax,esi
  4247b7:	jb     0x424790
  4247b9:	jmp    0x4247cf
  4247bb:	mov    ebp,DWORD PTR [ebp-0x34]
  4247be:	call   0x424a54
  4247c3:	inc    eax
  4247c4:	inc    esi
  4247c5:	sub    eax,0x1
  4247c8:	sub    esi,0x1
  4247cb:	cmp    eax,esi
  4247cd:	jb     0x4247bb
  4247cf:	pop    edx
  4247d0:	inc    edx
  4247d1:	cmp    edx,0x5
  4247d4:	dec    edx
  4247d5:	mov    ecx,edx
  4247d7:	jb     0x4247e8
  4247d9:	inc    edx
  4247da:	cmp    edx,0xb
  4247dd:	dec    edx
  4247de:	mov    cl,0x4
  4247e0:	dec    cl
  4247e2:	jb     0x4247e8
  4247e4:	mov    cl,0x7
  4247e6:	dec    cl
  4247e8:	sub    edx,ecx
  4247ea:	push   edx
  4247eb:	jmp    0x42483c
  4247ed:	mov    al,0xc1
  4247ef:	dec    al
  4247f1:	call   0x424a45
  4247f6:	jne    0x42480c
  4247f8:	pop    eax
  4247f9:	pop    edi
  4247fa:	pop    edx
  4247fb:	pop    ecx
  4247fc:	pop    edx
  4247fd:	pop    ecx
  4247fe:	push   DWORD PTR [esp]
  424801:	push   ecx
  424802:	push   edx
  424803:	mov    edx,0x664
  424808:	mov    cl,0x0
  42480a:	jmp    0x42487f
  42480c:	mov    al,0xcd
  42480e:	dec    al
  424810:	call   0x424a45
  424815:	jne    0x424845
  424817:	mov    al,0xf1
  424819:	dec    al
  42481b:	call   0x424a35
  424820:	jne    0x424875
  424822:	pop    eax
  424823:	cmp    al,0x7
  424825:	mov    al,0x9
  424827:	jb     0x42482b
  424829:	mov    al,0xb
  42482b:	push   eax
  42482c:	mov    esi,DWORD PTR [ebp-0x4]
  42482f:	sub    esi,DWORD PTR [ebp-0x24]
  424832:	cmp    esi,DWORD PTR [ebp+0x24]
  424835:	jb     0x424a0c
  42483b:	lods   al,BYTE PTR ds:[esi]
  42483c:	mov    edi,DWORD PTR [ebp-0x4]
  42483f:	stos   BYTE PTR es:[edi],al
  424840:	jmp    0x4249d3
  424845:	mov    al,0xd8
  424847:	call   0x424a45
  42484c:	mov    esi,DWORD PTR [ebp-0x28]
  42484f:	je     0x42486c
  424851:	mov    al,0xe4
  424853:	call   0x424a45
  424858:	mov    esi,DWORD PTR [ebp-0x2c]
  42485b:	je     0x424866
  42485d:	mov    esi,DWORD PTR [ebp-0x30]
  424860:	mov    ecx,DWORD PTR [ebp-0x2c]
  424863:	mov    DWORD PTR [ebp-0x30],ecx
  424866:	mov    ecx,DWORD PTR [ebp-0x28]
  424869:	mov    DWORD PTR [ebp-0x2c],ecx
  42486c:	mov    ecx,DWORD PTR [ebp-0x24]
  42486f:	mov    DWORD PTR [ebp-0x28],ecx
  424872:	mov    DWORD PTR [ebp-0x24],esi
  424875:	pop    eax
  424876:	pop    edi
  424877:	pop    ecx
  424878:	mov    edx,0xa68
  42487d:	mov    cl,0x8
  42487f:	add    edx,edi
  424881:	push   edx
  424882:	push   edi
  424883:	cmp    al,0x7
  424885:	mov    al,cl
  424887:	jb     0x42488b
  424889:	add    al,0x3
  42488b:	push   eax
  42488c:	mov    ebp,DWORD PTR [ebp-0x34]
  42488f:	call   0x424a52
  424894:	jne    0x4248aa
  424896:	mov    eax,DWORD PTR [ebp-0x18]
  424899:	mov    edi,DWORD PTR [ebp-0x34]
  42489c:	shl    eax,0x3
  42489f:	sub    ecx,ecx
  4248a1:	push   0x8
  4248a3:	pop    esi
  4248a4:	lea    edi,[edi+eax*2+0x4]
  4248a8:	jmp    0x4248df
  4248aa:	mov    ebp,DWORD PTR [ebp-0x34]
  4248ad:	add    ebp,0x2
  4248b0:	call   0x424a52
  4248b5:	jne    0x4248cf
  4248b7:	mov    eax,DWORD PTR [ebp-0x18]
  4248ba:	mov    edi,DWORD PTR [ebp-0x34]
  4248bd:	shl    eax,0x3
  4248c0:	push   0x8
  4248c2:	pop    ecx
  4248c3:	push   0x8
  4248c5:	pop    esi
  4248c6:	lea    edi,[edi+eax*2+0x104]
  4248cd:	jmp    0x4248df
  4248cf:	mov    edi,0x204
  4248d4:	add    edi,DWORD PTR [ebp-0x34]
  4248d7:	push   0x10
  4248d9:	pop    ecx
  4248da:	mov    esi,0x100
  4248df:	mov    DWORD PTR [ebp-0x1c],ecx
  4248e2:	sub    eax,eax
  4248e4:	inc    eax
  4248e5:	mov    ebp,edi
  4248e7:	call   0x424a54
  4248ec:	mov    ecx,eax
  4248ee:	sub    ecx,esi
  4248f0:	jb     0x4248e5
  4248f2:	add    DWORD PTR [ebp-0x1c],ecx
  4248f5:	cmp    DWORD PTR [ebp-0x3c],0x4
  4248f9:	jae    0x4249af
  4248ff:	add    DWORD PTR [ebp-0x3c],0x7
  424903:	mov    ecx,DWORD PTR [ebp-0x1c]
  424906:	cmp    ecx,0x4
  424909:	jb     0x42490e
  42490b:	push   0x3
  42490d:	pop    ecx
  42490e:	mov    edi,DWORD PTR [ebp-0x38]
  424911:	shl    ecx,0x6
  424914:	sub    eax,eax
  424916:	inc    eax
  424917:	push   0x40
  424919:	pop    esi
  42491a:	lea    edi,[edi+ecx*2+0x360]
  424921:	mov    ebp,edi
  424923:	call   0x424a54
  424928:	mov    ecx,eax
  42492a:	sub    ecx,esi
  42492c:	jb     0x424921
  42492e:	mov    DWORD PTR [ebp-0x18],ecx
  424931:	mov    DWORD PTR [ebp-0x24],ecx
  424934:	cmp    ecx,0x4
  424937:	jb     0x4249ac
  424939:	mov    esi,ecx
  42493b:	and    DWORD PTR [ebp-0x24],0x1
  42493f:	shr    esi,1
  424941:	or     DWORD PTR [ebp-0x24],0x2
  424945:	dec    esi
  424946:	cmp    ecx,0xe
  424949:	jae    0x424964
  42494b:	mov    eax,0x2af
  424950:	sub    eax,ecx
  424952:	mov    ecx,esi
  424954:	shl    BYTE PTR [ebp-0x24],cl
  424957:	add    eax,DWORD PTR [ebp-0x24]
  42495a:	shl    eax,1
  42495c:	add    eax,DWORD PTR [ebp-0x38]
  42495f:	mov    DWORD PTR [ebp-0x34],eax
  424962:	jmp    0x424991
  424964:	sub    esi,0x4
  424967:	call   0x424a11
  42496c:	shr    ebx,1
  42496e:	shl    DWORD PTR [ebp-0x24],1
  424971:	cmp    DWORD PTR [ebp-0x20],ebx
  424974:	jb     0x42497c
  424976:	inc    DWORD PTR [ebp-0x24]
  424979:	sub    DWORD PTR [ebp-0x20],ebx
  42497c:	dec    esi
  42497d:	jne    0x424967
  42497f:	mov    eax,0x644
  424984:	add    eax,DWORD PTR [ebp-0x38]
  424987:	mov    DWORD PTR [ebp-0x34],eax
  42498a:	shl    DWORD PTR [ebp-0x24],0x4
  42498e:	push   0x4
  424990:	pop    esi
  424991:	sub    edi,edi
  424993:	inc    edi
  424994:	mov    eax,edi
  424996:	mov    ebp,DWORD PTR [ebp-0x34]
  424999:	call   0x424a54
  42499e:	test   al,0x1
  4249a0:	je     0x4249a5
  4249a2:	or     DWORD PTR [ebp-0x24],edi
  4249a5:	shl    edi,1
  4249a7:	dec    esi
  4249a8:	jne    0x424996
  4249aa:	jmp    0x4249ac
  4249ac:	inc    DWORD PTR [ebp-0x24]
  4249af:	mov    ecx,DWORD PTR [ebp-0x1c]
  4249b2:	add    ecx,0x2
  4249b5:	mov    edi,DWORD PTR [ebp-0x4]
  4249b8:	mov    eax,edi
  4249ba:	sub    eax,DWORD PTR [ebp+0x24]
  4249bd:	cmp    DWORD PTR [ebp-0x24],eax
  4249c0:	ja     0x424a0c
  4249c2:	mov    esi,edi
  4249c4:	sub    esi,DWORD PTR [ebp-0x24]
  4249c7:	mov    edx,DWORD PTR [ebp+0x28]
  4249ca:	lods   al,BYTE PTR ds:[esi]
  4249cb:	stos   BYTE PTR es:[edi],al
  4249cc:	cmp    edi,edx
  4249ce:	jae    0x4249d3
  4249d0:	dec    ecx
  4249d1:	jne    0x4249ca
  4249d3:	mov    DWORD PTR [ebp-0x4],edi
  4249d6:	movzx  esi,al
  4249d9:	cmp    edi,DWORD PTR [ebp+0x28]
  4249dc:	jb     0x42473d
  4249e2:	call   0x424a11
  4249e7:	sub    eax,eax
  4249e9:	lea    ebp,[esp+0x3c]
  4249ed:	mov    edx,DWORD PTR [ebp+0x20]
  4249f0:	mov    esi,DWORD PTR [ebp-0x8]
  4249f3:	sub    esi,DWORD PTR [ebp+0x18]
  4249f6:	mov    DWORD PTR [edx],esi
  4249f8:	mov    edx,DWORD PTR [ebp+0x2c]
  4249fb:	mov    edi,DWORD PTR [ebp-0x4]
  4249fe:	sub    edi,DWORD PTR [ebp+0x24]
  424a01:	mov    DWORD PTR [edx],edi
  424a03:	leave  
  424a04:	pop    ebx
  424a05:	pop    esi
  424a06:	pop    edi
  424a07:	ret    0x1c
  424a0a:	pop    esi
  424a0b:	pop    eax
  424a0c:	sub    eax,eax
  424a0e:	inc    eax
  424a0f:	jmp    0x4249e9
  424a11:	cmp    ebx,0x1000000
  424a17:	jb     0x424a1a
  424a19:	ret    
  424a1a:	shl    ebx,0x8
  424a1d:	push   esi
  424a1e:	mov    esi,DWORD PTR [ebp-0x8]
  424a21:	jbe    0x424a82
  424a23:	cli    
  424a24:	push   edi
  424a25:	sbb    eax,0x910d9fb8
  424a2a:	or     eax,0x9fb03caa
  424a2f:	or     eax,0x36d5fb0
  424a34:	cdq    
  424a35:	mov    eax,0x64c69dbf
  424a3a:	lea    edx,[ecx-0x606965ef]
  424a40:	sub    eax,0xa2399196
  424a45:	(bad)  
  424a46:	lea    edx,fs:[esi+0x3fb89d9f]
  424a4d:	lods   eax,DWORD PTR ds:[esi]
  424a4e:	sar    BYTE PTR [ebx],0x9f
  424a51:	mov    dh,BYTE PTR [esi]
  424a53:	(bad)  
  424a54:	sar    BYTE PTR [ebx],0x9f
  424a57:	mov    dl,BYTE PTR [eax-0x75757587]
  424a5d:	mov    ss,WORD PTR [edi-0x6]
  424a60:	mov    eax,0x916a1abb
  424a65:	sbb    ebx,DWORD PTR [edx]
  424a67:	or     ch,BYTE PTR [edx-0x4e5448a]
  424a6d:	push   edi
  424a6e:	cld    
  424a6f:	mov    ah,0xce
  424a71:	mov    DWORD PTR [ebx+0x19916a1a],ebx
  424a77:	stos   BYTE PTR es:[edi],al
  424a78:	lods   al,BYTE PTR ds:[esi]
  424a79:	fistp  DWORD PTR [edx]
  424a7b:	or     bh,BYTE PTR [eax-0x20973947]
  424a81:	mov    dl,BYTE PTR [ecx+0x48c6b631]
  424a87:	mov    ch,0x6e
  424a89:	mov    ebx,0xe6570a1a
  424a8e:	mov    eax,0xaa8a70f1
  424a93:	mov    cl,BYTE PTR [edx+0x3191b536]
  424a99:	sahf   
  424a9a:	and    ecx,DWORD PTR [esi-0x72697541]
  424aa0:	shr    BYTE PTR [esp+0x40],0xc3
  424aa5:	shr    edx,0x5
  424aa8:	sub    DWORD PTR [esp+0x20],ecx
  424aac:	sub    ebx,ecx
  424aae:	sub    WORD PTR [ebp+0x0],dx
  424ab2:	add    eax,eax
  424ab4:	add    eax,0x1
  424ab7:	lea    ebp,[esp+0x40]
  424abb:	ret    
  424abc:	push   ebp
  424abd:	mov    ebp,esp
  424abf:	sub    esp,0x12c
  424ac5:	push   ebx
  424ac6:	push   esi
  424ac7:	push   edi
  424ac8:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  424acf:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  424ad6:	mov    eax,DWORD PTR [ebp+0x8]
  424ad9:	mov    DWORD PTR [ebp+0x8],eax
  424adc:	mov    ecx,DWORD PTR [ebp-0x10]
  424adf:	mov    ebx,0x75108b1
  424ae4:	xor    ecx,ebx
  424ae6:	mov    eax,0x3272f8
  424aeb:	add    ecx,eax
  424aed:	mov    DWORD PTR [ebp-0x24],ecx
  424af0:	mov    ecx,DWORD PTR [ebp-0x10]
  424af3:	xor    ecx,ebx
  424af5:	add    ecx,eax
  424af7:	mov    DWORD PTR [ebp-0x40],ecx
  424afa:	mov    ecx,DWORD PTR [ebp-0x10]
  424afd:	xor    ecx,ebx
  424aff:	add    ecx,eax
  424b01:	mov    DWORD PTR [ebp-0x3c],ecx
  424b04:	mov    ecx,DWORD PTR [ebp-0x10]
  424b07:	xor    ecx,ebx
  424b09:	add    ecx,eax
  424b0b:	mov    DWORD PTR [ebp-0xd8],ecx
  424b11:	mov    DWORD PTR [ebp-0x50],0xf89f05b9
  424b18:	mov    DWORD PTR [ebp-0x3c],0xf89cb5b9
  424b1f:	mov    DWORD PTR [ebp-0x54],0xf89c85bd
  424b26:	push   0x25
  424b28:	pop    ecx
  424b29:	mov    DWORD PTR [ebp-0x30],ecx
  424b2c:	mov    DWORD PTR [ebp-0x30],ecx
  424b2f:	push   0x65
  424b31:	pop    ecx
  424b32:	mov    DWORD PTR [ebp-0x30],ecx
  424b35:	mov    DWORD PTR [ebp-0x30],ecx
  424b38:	mov    DWORD PTR [ebp-0x30],0x4d
  424b3f:	mov    DWORD PTR [ebp-0x30],0x43
  424b46:	mov    ecx,DWORD PTR [ebp-0x10]
  424b49:	xor    ecx,ebx
  424b4b:	add    ecx,eax
  424b4d:	mov    DWORD PTR [ebp-0x30],ecx
  424b50:	mov    ecx,DWORD PTR [ebp-0x10]
  424b53:	xor    ecx,ebx
  424b55:	add    ecx,eax
  424b57:	mov    DWORD PTR [ebp-0x30],ecx
  424b5a:	mov    DWORD PTR [ebp-0x28],0x258
  424b61:	mov    DWORD PTR [ebp-0x34],0x36
  424b68:	mov    DWORD PTR [ebp-0x14],0x7a
  424b6f:	lea    edi,[ebp-0x10c]
  424b75:	lea    esi,[ebp-0x12c]
  424b7b:	call   0x42583b
  424b80:	dec    DWORD PTR [ebp-0x14]
  424b83:	jne    0x424b6f
  424b85:	dec    DWORD PTR [ebp-0x34]
  424b88:	jne    0x424b68
  424b8a:	dec    DWORD PTR [ebp-0x28]
  424b8d:	jne    0x424b61
  424b8f:	mov    DWORD PTR [ebp-0x28],0x400e
  424b96:	mov    eax,DWORD PTR [ebp-0x10]
  424b99:	xor    eax,ebx
  424b9b:	mov    esi,0x3272f8
  424ba0:	add    eax,esi
  424ba2:	mov    DWORD PTR [ebp-0x1c],eax
  424ba5:	mov    eax,DWORD PTR [ebp-0x10]
  424ba8:	and    DWORD PTR [ebp-0x94],0x0
  424baf:	xor    eax,ebx
  424bb1:	add    eax,esi
  424bb3:	mov    DWORD PTR [ebp-0x38],eax
  424bb6:	mov    eax,fs:0x18
  424bbc:	mov    DWORD PTR [ebp-0x94],eax
  424bc2:	mov    eax,DWORD PTR [eax+0x30]
  424bc5:	mov    DWORD PTR [ebp-0xcc],eax
  424bcb:	mov    eax,DWORD PTR [eax+0xc]
  424bce:	mov    DWORD PTR [ebp-0xc0],eax
  424bd4:	mov    eax,DWORD PTR [ebp+0x8]
  424bd7:	lea    ecx,[ebp-0x94]
  424bdd:	mov    DWORD PTR [eax+0x1a0],ecx
  424be3:	mov    eax,DWORD PTR [ebp+0x8]
  424be6:	lea    ecx,[ebp-0xcc]
  424bec:	mov    DWORD PTR [eax+0x1a4],ecx
  424bf2:	mov    eax,DWORD PTR [ebp+0x8]
  424bf5:	push   DWORD PTR [ebp+0x8]
  424bf8:	lea    ecx,[ebp-0xc0]
  424bfe:	mov    DWORD PTR [eax+0x1a8],ecx
  424c04:	call   0x426ffc
  424c09:	mov    ecx,DWORD PTR [ebp-0x10]
  424c0c:	xor    ecx,ebx
  424c0e:	add    ecx,esi
  424c10:	cmp    ecx,eax
  424c12:	je     0x424f95
  424c18:	mov    eax,DWORD PTR [ebp+0x8]
  424c1b:	mov    eax,DWORD PTR [eax+0x194]
  424c21:	mov    ecx,DWORD PTR [eax]
  424c23:	mov    eax,DWORD PTR [ebp+0x8]
  424c26:	mov    eax,DWORD PTR [eax+0x194]
  424c2c:	mov    eax,DWORD PTR [eax]
  424c2e:	add    eax,DWORD PTR [ecx+0x3c]
  424c31:	mov    ecx,DWORD PTR [ebp+0x8]
  424c34:	mov    ecx,DWORD PTR [ecx+0x1e0]
  424c3a:	lea    edx,[ebp-0xec]
  424c40:	push   edx
  424c41:	mov    edx,DWORD PTR [ebp+0x8]
  424c44:	mov    edx,DWORD PTR [edx+0x18c]
  424c4a:	mov    edx,DWORD PTR [edx]
  424c4c:	add    edx,DWORD PTR [eax+0x88]
  424c52:	push   0x4
  424c54:	push   DWORD PTR [eax+0x8c]
  424c5a:	push   edx
  424c5b:	call   DWORD PTR [ecx+0x1c]
  424c5e:	push   DWORD PTR [ebp+0x8]
  424c61:	xor    eax,eax
  424c63:	mov    DWORD PTR [ebp-0xa8],0xe3beeec4
  424c6d:	mov    DWORD PTR [ebp-0xa4],0xeac7eddc
  424c77:	mov    DWORD PTR [ebp-0xa0],0xbcede0f2
  424c81:	mov    BYTE PTR [ebp-0x9c],0x7b
  424c88:	lea    edi,[ebp-0x9b]
  424c8e:	stos   DWORD PTR es:[edi],eax
  424c8f:	stos   WORD PTR es:[edi],ax
  424c91:	stos   BYTE PTR es:[edi],al
  424c92:	xor    eax,eax
  424c94:	mov    DWORD PTR [ebp-0xbc],0xe3beeec4
  424c9e:	mov    DWORD PTR [ebp-0xb8],0xeac7eddc
  424ca8:	mov    DWORD PTR [ebp-0xb4],0xd2ede0f2
  424cb2:	mov    BYTE PTR [ebp-0xb0],0x7b
  424cb9:	lea    edi,[ebp-0xaf]
  424cbf:	stos   DWORD PTR es:[edi],eax
  424cc0:	stos   WORD PTR es:[edi],ax
  424cc2:	stos   BYTE PTR es:[edi],al
  424cc3:	mov    edi,DWORD PTR [ebp+0x8]
  424cc6:	mov    eax,DWORD PTR [ebp+0x8]
  424cc9:	mov    edx,DWORD PTR [eax+0x1b8]
  424ccf:	mov    DWORD PTR [ebp-0x68],0xedefeee7
  424cd6:	mov    DWORD PTR [ebp-0x64],0xe4ebe8de
  424cdd:	mov    WORD PTR [ebp-0x60],0x7bbc
  424ce3:	mov    DWORD PTR [ebp-0x90],0xe3beeec4
  424ced:	mov    DWORD PTR [ebp-0x8c],0xe7bceddc
  424cf7:	mov    DWORD PTR [ebp-0x88],0xc9dce3eb
  424d01:	mov    DWORD PTR [ebp-0x84],0xede0e8f0
  424d0b:	mov    DWORD PTR [ebp-0x80],0x7bbcdee4
  424d12:	mov    DWORD PTR [ebp-0x7c],0xe3beeec4
  424d19:	mov    DWORD PTR [ebp-0x78],0xe7bceddc
  424d20:	mov    DWORD PTR [ebp-0x74],0xc9dce3eb
  424d27:	mov    DWORD PTR [ebp-0x70],0xede0e8f0
  424d2e:	mov    DWORD PTR [ebp-0x6c],0x7bd2dee4
  424d35:	call   0x42702b
  424d3a:	push   eax
  424d3b:	mov    eax,DWORD PTR [ebp+0x8]
  424d3e:	mov    eax,DWORD PTR [eax+0x1a8]
  424d44:	push   DWORD PTR [eax]
  424d46:	call   0x426ccc
  424d4b:	test   eax,eax
  424d4d:	jne    0x424d9f
  424d4f:	mov    eax,DWORD PTR [ebp+0x8]
  424d52:	mov    eax,DWORD PTR [eax+0x1e0]
  424d58:	mov    edi,DWORD PTR [ebp+0x8]
  424d5b:	add    eax,0x4
  424d5e:	mov    DWORD PTR [ebp-0x20],eax
  424d61:	mov    eax,DWORD PTR [ebp+0x8]
  424d64:	mov    edx,DWORD PTR [eax+0x1b8]
  424d6a:	call   0x42702b
  424d6f:	push   eax
  424d70:	mov    eax,DWORD PTR [ebp-0x20]
  424d73:	call   DWORD PTR [eax]
  424d75:	test   eax,eax
  424d77:	jne    0x424d9f
  424d79:	mov    eax,DWORD PTR [ebp+0x8]
  424d7c:	mov    eax,DWORD PTR [eax+0x1e0]
  424d82:	mov    edi,DWORD PTR [ebp+0x8]
  424d85:	add    eax,0x10
  424d88:	mov    DWORD PTR [ebp-0x20],eax
  424d8b:	mov    eax,DWORD PTR [ebp+0x8]
  424d8e:	mov    edx,DWORD PTR [eax+0x1b8]
  424d94:	call   0x42702b
  424d99:	push   eax
  424d9a:	mov    eax,DWORD PTR [ebp-0x20]
  424d9d:	call   DWORD PTR [eax]
  424d9f:	mov    eax,DWORD PTR [ebp-0x10]
  424da2:	mov    ecx,DWORD PTR [ebp-0x28]
  424da5:	xor    eax,ebx
  424da7:	add    eax,esi
  424da9:	cmp    eax,ecx
  424dab:	je     0x424f6e
  424db1:	mov    eax,DWORD PTR [ebp-0x18]
  424db4:	xor    eax,ebx
  424db6:	mov    ecx,0xffcd8d08
  424dbb:	sub    ecx,eax
  424dbd:	add    ecx,DWORD PTR [ebp-0x28]
  424dc0:	mov    eax,DWORD PTR [ebp-0x1c]
  424dc3:	cmp    eax,ecx
  424dc5:	ja     0x424f6e
  424dcb:	mov    DWORD PTR [ebp-0x34],0x0
  424dd2:	push   DWORD PTR [ebp+0x8]
  424dd5:	mov    edi,DWORD PTR [ebp+0x8]
  424dd8:	mov    eax,DWORD PTR [ebp+0x8]
  424ddb:	mov    edx,DWORD PTR [eax+0x1b4]
  424de1:	call   0x42702b
  424de6:	push   eax
  424de7:	mov    eax,DWORD PTR [ebp+0x8]
  424dea:	mov    eax,DWORD PTR [eax+0x1a8]
  424df0:	push   DWORD PTR [eax]
  424df2:	call   0x426ccc
  424df7:	mov    ecx,DWORD PTR [ebp+0x8]
  424dfa:	mov    ecx,DWORD PTR [ecx+0x19c]
  424e00:	mov    DWORD PTR [ecx],eax
  424e02:	mov    eax,DWORD PTR [ebp+0x8]
  424e05:	mov    edi,DWORD PTR [eax+0x1e0]
  424e0b:	mov    esi,DWORD PTR [ebp+0x8]
  424e0e:	xor    eax,eax
  424e10:	lea    edx,[ebp-0x7c]
  424e13:	call   0x427061
  424e18:	push   eax
  424e19:	mov    eax,DWORD PTR [ebp+0x8]
  424e1c:	mov    eax,DWORD PTR [eax+0x19c]
  424e22:	push   DWORD PTR [eax]
  424e24:	call   DWORD PTR [edi+0x8]
  424e27:	mov    DWORD PTR [ebp-0x20],eax
  424e2a:	mov    eax,DWORD PTR [ebp+0x8]
  424e2d:	mov    edi,DWORD PTR [eax+0x1e0]
  424e33:	mov    esi,DWORD PTR [ebp+0x8]
  424e36:	xor    eax,eax
  424e38:	lea    edx,[ebp-0x90]
  424e3e:	call   0x427061
  424e43:	push   eax
  424e44:	mov    eax,DWORD PTR [ebp+0x8]
  424e47:	mov    eax,DWORD PTR [eax+0x19c]
  424e4d:	push   DWORD PTR [eax]
  424e4f:	call   DWORD PTR [edi+0x8]
  424e52:	mov    eax,DWORD PTR [ebp+0x8]
  424e55:	mov    edi,DWORD PTR [eax+0x1e0]
  424e5b:	mov    esi,DWORD PTR [ebp+0x8]
  424e5e:	xor    eax,eax
  424e60:	lea    edx,[ebp-0xa8]
  424e66:	call   0x427061
  424e6b:	push   eax
  424e6c:	mov    eax,DWORD PTR [ebp+0x8]
  424e6f:	mov    eax,DWORD PTR [eax+0x19c]
  424e75:	push   DWORD PTR [eax]
  424e77:	call   DWORD PTR [edi+0x8]
  424e7a:	and    DWORD PTR [ebp-0x8],0x0
  424e7e:	mov    DWORD PTR [ebp-0x48],eax
  424e81:	mov    eax,DWORD PTR [ebp-0x8]
  424e84:	and    eax,0x7
  424e87:	add    eax,0x31
  424e8a:	push   eax
  424e8b:	call   DWORD PTR [ebp-0x20]
  424e8e:	test   eax,eax
  424e90:	je     0x424ed4
  424e92:	mov    eax,DWORD PTR [ebp-0x8]
  424e95:	push   0x19
  424e97:	xor    edx,edx
  424e99:	pop    ecx
  424e9a:	div    ecx
  424e9c:	add    dl,0x41
  424e9f:	movzx  eax,dl
  424ea2:	push   eax
  424ea3:	call   DWORD PTR [ebp-0x48]
  424ea6:	test   eax,eax
  424ea8:	jne    0x424ed4
  424eaa:	mov    eax,DWORD PTR [ebp+0x8]
  424ead:	mov    edi,DWORD PTR [eax+0x1e0]
  424eb3:	mov    esi,DWORD PTR [ebp+0x8]
  424eb6:	xor    eax,eax
  424eb8:	lea    edx,[ebp-0x68]
  424ebb:	call   0x427061
  424ec0:	push   eax
  424ec1:	mov    eax,DWORD PTR [ebp+0x8]
  424ec4:	mov    eax,DWORD PTR [eax+0x198]
  424eca:	push   DWORD PTR [eax]
  424ecc:	call   DWORD PTR [edi+0x8]
  424ecf:	mov    DWORD PTR [ebp-0x14],eax
  424ed2:	jmp    0x424ed8
  424ed4:	and    DWORD PTR [ebp-0x14],0x0
  424ed8:	inc    DWORD PTR [ebp-0x8]
  424edb:	cmp    DWORD PTR [ebp-0x8],0x10
  424edf:	jb     0x424e81
  424ee1:	mov    eax,DWORD PTR [ebp-0x18]
  424ee4:	mov    esi,DWORD PTR [ebp+0x8]
  424ee7:	xor    eax,ebx
  424ee9:	mov    edi,0x3272f8
  424eee:	add    eax,edi
  424ef0:	lea    edx,[ebp-0x10c]
  424ef6:	call   0x427061
  424efb:	push   eax
  424efc:	mov    eax,DWORD PTR [ebp-0x10]
  424eff:	mov    esi,DWORD PTR [ebp+0x8]
  424f02:	xor    eax,ebx
  424f04:	add    eax,edi
  424f06:	lea    edx,[ebp-0x12c]
  424f0c:	call   0x427061
  424f11:	push   eax
  424f12:	call   DWORD PTR [ebp-0x14]
  424f15:	mov    ecx,DWORD PTR [ebp-0x10]
  424f18:	xor    ecx,ebx
  424f1a:	add    ecx,edi
  424f1c:	cmp    ecx,eax
  424f1e:	jne    0x424f27
  424f20:	mov    DWORD PTR [ebp-0x34],0x1
  424f27:	mov    eax,DWORD PTR [ebp-0x18]
  424f2a:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f2d:	xor    eax,ebx
  424f2f:	lea    eax,[eax+ecx*1+0x3272f8]
  424f36:	mov    DWORD PTR [ebp-0x1c],eax
  424f39:	mov    eax,DWORD PTR [ebp-0x34]
  424f3c:	test   eax,eax
  424f3e:	je     0x424f52
  424f40:	mov    eax,DWORD PTR [ebp-0x18]
  424f43:	mov    ecx,DWORD PTR [ebp-0x38]
  424f46:	xor    eax,ebx
  424f48:	lea    eax,[eax+ecx*1+0x3272f8]
  424f4f:	mov    DWORD PTR [ebp-0x38],eax
  424f52:	mov    eax,DWORD PTR [ebp-0x18]
  424f55:	xor    eax,ebx
  424f57:	mov    ecx,0xffcd8d08
  424f5c:	sub    ecx,eax
  424f5e:	add    ecx,DWORD PTR [ebp-0x28]
  424f61:	mov    eax,DWORD PTR [ebp-0x1c]
  424f64:	cmp    eax,ecx
  424f66:	jbe    0x424dcb
  424f6c:	mov    esi,edi
  424f6e:	mov    eax,DWORD PTR [ebp-0x38]
  424f71:	mov    ecx,DWORD PTR [ebp-0x1c]
  424f74:	cmp    ecx,eax
  424f76:	jne    0x424f89
  424f78:	push   DWORD PTR [ebp+0x8]
  424f7b:	lea    eax,[ebp-0x40]
  424f7e:	push   eax
  424f7f:	call   0x427ad0
  424f84:	mov    DWORD PTR [ebp-0x24],eax
  424f87:	jmp    0x424f95
  424f89:	mov    eax,DWORD PTR [ebp-0x24]
  424f8c:	mov    ecx,DWORD PTR [ebp-0x18]
  424f8f:	xor    ecx,ebx
  424f91:	add    ecx,esi
  424f93:	xor    DWORD PTR [eax],ecx
  424f95:	mov    eax,DWORD PTR [ebp-0x10]
  424f98:	mov    ecx,DWORD PTR [ebp-0x24]
  424f9b:	xor    eax,ebx
  424f9d:	add    eax,esi
  424f9f:	cmp    eax,ecx
  424fa1:	je     0x425719
  424fa7:	mov    eax,DWORD PTR [ebp-0x10]
  424faa:	mov    ecx,DWORD PTR [ebp-0x40]
  424fad:	xor    eax,ebx
  424faf:	add    eax,esi
  424fb1:	cmp    eax,ecx
  424fb3:	je     0x425719
  424fb9:	mov    eax,DWORD PTR [ebp-0x10]
  424fbc:	xor    eax,ebx
  424fbe:	add    eax,esi
  424fc0:	jmp    0x424fde
  424fc2:	mov    edi,DWORD PTR [ebp-0x24]
  424fc5:	mov    cl,al
  424fc7:	and    cl,0x1f
  424fca:	or     dl,0xff
  424fcd:	sub    dl,cl
  424fcf:	add    BYTE PTR [edi+eax*1],dl
  424fd2:	mov    ecx,DWORD PTR [ebp-0x18]
  424fd5:	xor    ecx,ebx
  424fd7:	lea    eax,[eax+ecx*1+0x3272f8]
  424fde:	mov    ecx,DWORD PTR [ebp-0x40]
  424fe1:	cmp    eax,ecx
  424fe3:	jb     0x424fc2
  424fe5:	mov    eax,DWORD PTR [ebp-0x40]
  424fe8:	mov    DWORD PTR [ebp-0x28],eax
  424feb:	mov    eax,DWORD PTR [ebp-0x24]
  424fee:	mov    DWORD PTR [ebp-0x38],0xf89c85b9
  424ff5:	mov    DWORD PTR [ebp-0xd4],eax
  424ffb:	mov    edi,0xf89c85b8
  425000:	mov    DWORD PTR [ebp-0x2c],edi
  425003:	mov    eax,DWORD PTR [ebp-0x38]
  425006:	xor    eax,ebx
  425008:	add    eax,esi
  42500a:	mov    DWORD PTR [ebp-0xc],eax
  42500d:	mov    eax,DWORD PTR [ebp-0x38]
  425010:	xor    eax,ebx
  425012:	add    eax,esi
  425014:	mov    DWORD PTR [ebp-0x8],eax
  425017:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  42501e:	mov    DWORD PTR [ebp-0x4c],0xf89c85be
  425025:	mov    eax,DWORD PTR [ebp-0x38]
  425028:	mov    ecx,DWORD PTR [ebp-0x28]
  42502b:	xor    eax,ebx
  42502d:	add    eax,esi
  42502f:	cmp    ecx,eax
  425031:	je     0x425230
  425037:	jmp    0x42520c
  42503c:	mov    ecx,DWORD PTR [ebp-0xc]
  42503f:	mov    eax,DWORD PTR [ebp-0x28]
  425042:	sub    eax,ecx
  425044:	mov    ecx,DWORD PTR [ebp-0x48]
  425047:	xor    ecx,ebx
  425049:	add    ecx,esi
  42504b:	xor    edx,edx
  42504d:	div    ecx
  42504f:	mov    DWORD PTR [ebp-0x8],eax
  425052:	mov    eax,DWORD PTR [ebp-0x4c]
  425055:	mov    ecx,DWORD PTR [ebp-0x8]
  425058:	xor    eax,ebx
  42505a:	add    eax,esi
  42505c:	cmp    ecx,eax
  42505e:	jbe    0x42506a
  425060:	mov    eax,DWORD PTR [ebp-0x4c]
  425063:	xor    eax,ebx
  425065:	add    eax,esi
  425067:	mov    DWORD PTR [ebp-0x8],eax
  42506a:	mov    eax,DWORD PTR [ebp-0x48]
  42506d:	mov    ecx,DWORD PTR [ebp-0x8]
  425070:	xor    eax,ebx
  425072:	add    eax,esi
  425074:	imul   eax,ecx
  425077:	mov    DWORD PTR [ebp-0x8],eax
  42507a:	mov    eax,DWORD PTR [ebp-0x38]
  42507d:	mov    ecx,DWORD PTR [ebp-0x8]
  425080:	xor    eax,ebx
  425082:	add    eax,esi
  425084:	cmp    ecx,eax
  425086:	je     0x4251fa
  42508c:	mov    eax,DWORD PTR [ebp-0x8]
  42508f:	mov    DWORD PTR [ebp-0x14],eax
  425092:	mov    eax,DWORD PTR [ebp-0xc]
  425095:	add    eax,DWORD PTR [ebp-0xd4]
  42509b:	mov    DWORD PTR [ebp-0x20],0xf89c85b9
  4250a2:	mov    DWORD PTR [ebp-0x34],edi
  4250a5:	mov    DWORD PTR [ebp-0xe8],0xf89c85bb
  4250af:	mov    DWORD PTR [ebp-0x8],eax
  4250b2:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  4250b9:	mov    DWORD PTR [ebp-0x1c],edi
  4250bc:	mov    eax,DWORD PTR [ebp-0x20]
  4250bf:	xor    eax,ebx
  4250c1:	add    eax,esi
  4250c3:	jmp    0x4251b9
  4250c8:	mov    DWORD PTR [ebp-0xe0],0xf89c85a2
  4250d2:	mov    DWORD PTR [ebp-0xc4],0xf89c85af
  4250dc:	mov    eax,DWORD PTR [ebp-0x1c]
  4250df:	mov    ecx,DWORD PTR [ebp-0x44]
  4250e2:	xor    eax,ebx
  4250e4:	add    eax,esi
  4250e6:	imul   eax,ecx
  4250e9:	mov    ecx,DWORD PTR [ebp-0x8]
  4250ec:	mov    al,BYTE PTR [eax+ecx*1]
  4250ef:	mov    BYTE PTR [ebp-0x2],al
  4250f2:	mov    eax,DWORD PTR [ebp-0x1c]
  4250f5:	mov    ecx,DWORD PTR [ebp-0x44]
  4250f8:	xor    eax,ebx
  4250fa:	add    eax,esi
  4250fc:	imul   eax,ecx
  4250ff:	mov    ecx,DWORD PTR [ebp-0xe8]
  425105:	xor    ecx,ebx
  425107:	add    eax,ecx
  425109:	mov    ecx,DWORD PTR [ebp-0x8]
  42510c:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425114:	mov    ecx,DWORD PTR [ebp-0xe0]
  42511a:	xor    ecx,ebx
  42511c:	lea    eax,[ecx+eax*1+0x3272f8]
  425123:	movzx  ecx,BYTE PTR [ebp-0x2]
  425127:	xor    ecx,eax
  425129:	mov    BYTE PTR [ebp-0x2],cl
  42512c:	mov    al,BYTE PTR [ebp-0x2]
  42512f:	mov    ecx,DWORD PTR [ebp-0x1c]
  425132:	mov    edx,DWORD PTR [ebp-0x44]
  425135:	xor    ecx,ebx
  425137:	add    ecx,esi
  425139:	imul   ecx,edx
  42513c:	mov    edx,DWORD PTR [ebp-0x8]
  42513f:	mov    BYTE PTR [ecx+edx*1],al
  425142:	mov    eax,DWORD PTR [ebp-0x1c]
  425145:	mov    ecx,DWORD PTR [ebp-0x44]
  425148:	xor    eax,ebx
  42514a:	add    eax,esi
  42514c:	imul   eax,ecx
  42514f:	mov    ecx,DWORD PTR [ebp-0x8]
  425152:	mov    al,BYTE PTR [eax+ecx*1]
  425155:	mov    BYTE PTR [ebp-0x2],al
  425158:	mov    eax,DWORD PTR [ebp-0x1c]
  42515b:	mov    ecx,DWORD PTR [ebp-0x44]
  42515e:	xor    eax,ebx
  425160:	add    eax,esi
  425162:	imul   eax,ecx
  425165:	mov    ecx,DWORD PTR [ebp-0x34]
  425168:	xor    ecx,ebx
  42516a:	add    eax,ecx
  42516c:	mov    ecx,DWORD PTR [ebp-0x8]
  42516f:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425177:	mov    ecx,DWORD PTR [ebp-0xc4]
  42517d:	xor    ecx,ebx
  42517f:	lea    eax,[ecx+eax*1+0x3272f8]
  425186:	movzx  ecx,BYTE PTR [ebp-0x2]
  42518a:	xor    ecx,eax
  42518c:	mov    BYTE PTR [ebp-0x2],cl
  42518f:	mov    al,BYTE PTR [ebp-0x2]
  425192:	mov    ecx,DWORD PTR [ebp-0x1c]
  425195:	mov    edx,DWORD PTR [ebp-0x44]
  425198:	xor    ecx,ebx
  42519a:	add    ecx,esi
  42519c:	imul   ecx,edx
  42519f:	mov    edx,DWORD PTR [ebp-0x8]
  4251a2:	mov    BYTE PTR [ecx+edx*1],al
  4251a5:	mov    eax,DWORD PTR [ebp-0x30]
  4251a8:	mov    ecx,DWORD PTR [ebp-0x34]
  4251ab:	xor    eax,ebx
  4251ad:	xor    ecx,ebx
  4251af:	add    eax,esi
  4251b1:	add    ecx,esi
  4251b3:	imul   eax,ecx
  4251b6:	add    eax,DWORD PTR [ebp-0x44]
  4251b9:	mov    DWORD PTR [ebp-0x44],eax
  4251bc:	mov    eax,DWORD PTR [ebp-0x44]
  4251bf:	mov    ecx,DWORD PTR [ebp-0x14]
  4251c2:	cmp    ecx,eax
  4251c4:	jb     0x4250c8
  4251ca:	mov    eax,DWORD PTR [ebp-0x34]
  4251cd:	mov    ecx,DWORD PTR [ebp-0x14]
  4251d0:	xor    eax,ebx
  4251d2:	add    eax,esi
  4251d4:	imul   eax,ecx
  4251d7:	mov    ecx,DWORD PTR [ebp-0x20]
  4251da:	xor    ecx,ebx
  4251dc:	add    ecx,esi
  4251de:	or     eax,ecx
  4251e0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251e3:	xor    ecx,ebx
  4251e5:	add    eax,ecx
  4251e7:	mov    ecx,DWORD PTR [ebp-0x2c]
  4251ea:	xor    ecx,ebx
  4251ec:	add    eax,ecx
  4251ee:	mov    ecx,DWORD PTR [ebp-0xc]
  4251f1:	lea    eax,[eax+ecx*1+0x64e5f0]
  4251f8:	jmp    0x425209
  4251fa:	mov    eax,DWORD PTR [ebp-0x2c]
  4251fd:	mov    ecx,DWORD PTR [ebp-0xc]
  425200:	xor    eax,ebx
  425202:	lea    eax,[eax+ecx*1+0x3272f8]
  425209:	mov    DWORD PTR [ebp-0xc],eax
  42520c:	mov    eax,DWORD PTR [ebp-0x2c]
  42520f:	xor    eax,ebx
  425211:	mov    ecx,0xffcd8d08
  425216:	sub    ecx,eax
  425218:	add    ecx,DWORD PTR [ebp-0x28]
  42521b:	mov    eax,DWORD PTR [ebp-0x2c]
  42521e:	mov    edx,DWORD PTR [ebp-0xc]
  425221:	xor    eax,ebx
  425223:	add    eax,esi
  425225:	imul   eax,edx
  425228:	cmp    eax,ecx
  42522a:	jbe    0x42503c
  425230:	mov    eax,DWORD PTR [ebp-0x10]
  425233:	mov    ecx,DWORD PTR [ebp-0x40]
  425236:	mov    eax,DWORD PTR [ebp+0x8]
  425239:	mov    edx,DWORD PTR [ebp-0x54]
  42523c:	mov    eax,DWORD PTR [eax+0x1e0]
  425242:	xor    edx,ebx
  425244:	add    edx,esi
  425246:	push   edx
  425247:	mov    edx,DWORD PTR [ebp-0x3c]
  42524a:	xor    edx,ebx
  42524c:	add    edx,esi
  42524e:	push   edx
  42524f:	push   ecx
  425250:	mov    DWORD PTR [ebp-0x30],ecx
  425253:	mov    ecx,DWORD PTR [ebp-0x10]
  425256:	xor    ecx,ebx
  425258:	add    ecx,esi
  42525a:	push   ecx
  42525b:	call   DWORD PTR [eax+0x14]
  42525e:	mov    edi,eax
  425260:	mov    eax,DWORD PTR [ebp-0x10]
  425263:	xor    eax,ebx
  425265:	add    eax,esi
  425267:	cmp    eax,edi
  425269:	je     0x4252c4
  42526b:	mov    eax,DWORD PTR [ebp-0x10]
  42526e:	jmp    0x425291
  425270:	mov    ecx,DWORD PTR [ebp-0x24]
  425273:	xor    eax,ebx
  425275:	mov    cl,BYTE PTR [ecx+eax*1+0x3272f8]
  42527c:	mov    BYTE PTR [eax+edi*1+0x3272f8],cl
  425283:	mov    ecx,DWORD PTR [ebp-0x18]
  425286:	xor    ecx,ebx
  425288:	lea    eax,[ecx+eax*1+0x3272f8]
  42528f:	xor    eax,ebx
  425291:	mov    ecx,DWORD PTR [ebp-0x40]
  425294:	sub    ecx,esi
  425296:	xor    ecx,ebx
  425298:	cmp    eax,ecx
  42529a:	jne    0x425270
  42529c:	mov    eax,DWORD PTR [ebp+0x8]
  42529f:	mov    ecx,DWORD PTR [ebp-0x50]
  4252a2:	mov    eax,DWORD PTR [eax+0x1e0]
  4252a8:	xor    ecx,ebx
  4252aa:	add    ecx,esi
  4252ac:	push   ecx
  4252ad:	mov    ecx,DWORD PTR [ebp-0x10]
  4252b0:	xor    ecx,ebx
  4252b2:	add    ecx,esi
  4252b4:	push   ecx
  4252b5:	push   DWORD PTR [ebp-0x24]
  4252b8:	call   DWORD PTR [eax+0x18]
  4252bb:	mov    eax,DWORD PTR [ebp-0x30]
  4252be:	mov    DWORD PTR [ebp-0x24],edi
  4252c1:	mov    DWORD PTR [ebp-0x40],eax
  4252c4:	mov    edi,DWORD PTR [ebp-0x24]
  4252c7:	mov    eax,DWORD PTR [ebp-0x18]
  4252ca:	mov    ecx,DWORD PTR [ebp-0x10]
  4252cd:	xor    eax,ebx
  4252cf:	mov    DWORD PTR [ebp-0x30],edi
  4252d2:	add    eax,esi
  4252d4:	mov    DWORD PTR [ebp-0x5c],0xbcd3cbd3
  4252db:	mov    DWORD PTR [ebp-0x58],0xc6d3bed3
  4252e2:	jmp    0x425316
  4252e4:	xor    ecx,ebx
  4252e6:	mov    dl,BYTE PTR [ebp+ecx*1+0x32729c]
  4252ed:	xor    dl,0x80
  4252f0:	add    dl,0x5
  4252f3:	mov    DWORD PTR [ebp-0x3c],ecx
  4252f6:	movsx  ecx,BYTE PTR [ecx+edi*1+0x3272f8]
  4252fe:	movzx  edx,dl
  425301:	cmp    ecx,edx
  425303:	jne    0x425320
  425305:	mov    ecx,DWORD PTR [ebp-0x18]
  425308:	mov    edx,DWORD PTR [ebp-0x3c]
  42530b:	xor    ecx,ebx
  42530d:	lea    ecx,[ecx+edx*1+0x3272f8]
  425314:	xor    ecx,ebx
  425316:	cmp    ecx,0xf89c85a1
  42531c:	jne    0x4252e4
  42531e:	jmp    0x425327
  425320:	mov    eax,DWORD PTR [ebp-0x10]
  425323:	xor    eax,ebx
  425325:	add    eax,esi
  425327:	mov    ecx,DWORD PTR [ebp-0x10]
  42532a:	xor    ecx,ebx
  42532c:	add    ecx,esi
  42532e:	cmp    ecx,eax
  425330:	je     0x4254a3
  425336:	mov    eax,DWORD PTR [edi+0x8]
  425339:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  425340:	mov    DWORD PTR [ebp-0x3c],0xf89cc3c6
  425347:	mov    DWORD PTR [ebp-0x48],0xf89cb5b9
  42534e:	mov    DWORD PTR [ebp-0x20],0xf89c85bd
  425355:	mov    DWORD PTR [ebp-0x14],eax
  425358:	mov    eax,DWORD PTR [ebp+0x8]
  42535b:	mov    ecx,DWORD PTR [ebp-0x20]
  42535e:	xor    ecx,ebx
  425360:	add    ecx,esi
  425362:	push   ecx
  425363:	mov    ecx,DWORD PTR [ebp-0x48]
  425366:	mov    eax,DWORD PTR [eax+0x1e0]
  42536c:	xor    ecx,ebx
  42536e:	add    ecx,esi
  425370:	push   ecx
  425371:	mov    ecx,DWORD PTR [ebp-0x3c]
  425374:	xor    ecx,ebx
  425376:	add    ecx,esi
  425378:	push   ecx
  425379:	mov    ecx,DWORD PTR [ebp-0xc]
  42537c:	xor    ecx,ebx
  42537e:	add    ecx,esi
  425380:	push   ecx
  425381:	call   DWORD PTR [eax+0x14]
  425384:	mov    edi,eax
  425386:	mov    eax,DWORD PTR [ebp+0x8]
  425389:	mov    ecx,DWORD PTR [ebp-0x20]
  42538c:	mov    eax,DWORD PTR [eax+0x1e0]
  425392:	xor    ecx,ebx
  425394:	add    ecx,esi
  425396:	push   ecx
  425397:	mov    ecx,DWORD PTR [ebp-0x48]
  42539a:	xor    ecx,ebx
  42539c:	add    ecx,esi
  42539e:	push   ecx
  42539f:	mov    ecx,DWORD PTR [ebp-0xc]
  4253a2:	push   DWORD PTR [ebp-0x14]
  4253a5:	xor    ecx,ebx
  4253a7:	add    ecx,esi
  4253a9:	push   ecx
  4253aa:	call   DWORD PTR [eax+0x14]
  4253ad:	mov    ecx,DWORD PTR [ebp-0xc]
  4253b0:	xor    ecx,ebx
  4253b2:	add    ecx,esi
  4253b4:	mov    DWORD PTR [ebp-0x20],eax
  4253b7:	cmp    ecx,edi
  4253b9:	je     0x425746
  4253bf:	mov    ecx,DWORD PTR [ebp-0xc]
  4253c2:	xor    ecx,ebx
  4253c4:	add    ecx,esi
  4253c6:	cmp    ecx,eax
  4253c8:	je     0x425746
  4253ce:	mov    DWORD PTR [ebp-0x3c],0xf89c85ba
  4253d5:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  4253dc:	mov    ecx,DWORD PTR [ebp-0x3c]
  4253df:	xor    cl,0xb1
  4253e2:	sub    cl,0x8
  4253e5:	mov    BYTE PTR [edi],cl
  4253e7:	mov    ecx,DWORD PTR [ebp-0xc]
  4253ea:	xor    cl,0xb1
  4253ed:	sub    cl,0x8
  4253f0:	mov    BYTE PTR [edi+0x1],cl
  4253f3:	mov    ecx,DWORD PTR [ebp-0x54]
  4253f6:	xor    cl,0xb1
  4253f9:	sub    cl,0x8
  4253fc:	mov    BYTE PTR [edi+0x2],cl
  4253ff:	and    DWORD PTR [ebp-0xc8],0x0
  425406:	and    DWORD PTR [ebp-0xdc],0x0
  42540d:	lea    ecx,[ebp-0xdc]
  425413:	push   ecx
  425414:	push   DWORD PTR [ebp-0x14]
  425417:	push   eax
  425418:	lea    eax,[ebp-0xc8]
  42541e:	push   eax
  42541f:	mov    eax,DWORD PTR [ebp-0x30]
  425422:	push   DWORD PTR [eax+0xc]
  425425:	mov    eax,DWORD PTR [ebp-0x24]
  425428:	add    eax,0x10
  42542b:	push   eax
  42542c:	push   edi
  42542d:	call   0x4246d3
  425432:	mov    DWORD PTR [ebp-0x3c],eax
  425435:	mov    eax,DWORD PTR [ebp+0x8]
  425438:	mov    ecx,DWORD PTR [ebp-0x50]
  42543b:	mov    eax,DWORD PTR [eax+0x1e0]
  425441:	xor    ecx,ebx
  425443:	add    ecx,esi
  425445:	push   ecx
  425446:	mov    ecx,DWORD PTR [ebp-0xc]
  425449:	xor    ecx,ebx
  42544b:	add    ecx,esi
  42544d:	push   ecx
  42544e:	push   edi
  42544f:	call   DWORD PTR [eax+0x18]
  425452:	mov    eax,DWORD PTR [ebp-0x3c]
  425455:	add    eax,0xffcd8d08
  42545a:	xor    eax,ebx
  42545c:	cmp    eax,0xf89c85b9
  425461:	mov    eax,DWORD PTR [ebp+0x8]
  425464:	mov    eax,DWORD PTR [eax+0x1e0]
  42546a:	mov    ecx,DWORD PTR [ebp-0x50]
  42546d:	jne    0x425490
  42546f:	xor    ecx,ebx
  425471:	add    ecx,esi
  425473:	push   ecx
  425474:	mov    ecx,DWORD PTR [ebp-0xc]
  425477:	xor    ecx,ebx
  425479:	add    ecx,esi
  42547b:	push   ecx
  42547c:	push   DWORD PTR [ebp-0x24]
  42547f:	call   DWORD PTR [eax+0x18]
  425482:	mov    eax,DWORD PTR [ebp-0x20]
  425485:	mov    DWORD PTR [ebp-0x24],eax
  425488:	mov    eax,DWORD PTR [ebp-0x14]
  42548b:	mov    DWORD PTR [ebp-0x40],eax
  42548e:	jmp    0x4254a3
  425490:	xor    ecx,ebx
  425492:	add    ecx,esi
  425494:	push   ecx
  425495:	mov    ecx,DWORD PTR [ebp-0xc]
  425498:	xor    ecx,ebx
  42549a:	add    ecx,esi
  42549c:	push   ecx
  42549d:	push   DWORD PTR [ebp-0x20]
  4254a0:	call   DWORD PTR [eax+0x18]
  4254a3:	mov    eax,DWORD PTR [ebp-0x40]
  4254a6:	mov    DWORD PTR [ebp-0x38],eax
  4254a9:	mov    eax,DWORD PTR [ebp-0x24]
  4254ac:	mov    DWORD PTR [ebp-0x28],0xf89c85b9
  4254b3:	mov    DWORD PTR [ebp-0x3c],eax
  4254b6:	mov    edi,0xf89c85b8
  4254bb:	mov    DWORD PTR [ebp-0x2c],edi
  4254be:	mov    eax,DWORD PTR [ebp-0x28]
  4254c1:	xor    eax,ebx
  4254c3:	add    eax,esi
  4254c5:	mov    DWORD PTR [ebp-0xc],eax
  4254c8:	mov    eax,DWORD PTR [ebp-0x28]
  4254cb:	xor    eax,ebx
  4254cd:	add    eax,esi
  4254cf:	mov    DWORD PTR [ebp-0x14],eax
  4254d2:	mov    DWORD PTR [ebp-0x48],0xf89c8599
  4254d9:	mov    DWORD PTR [ebp-0x20],0xf89c85be
  4254e0:	mov    eax,DWORD PTR [ebp-0x28]
  4254e3:	mov    ecx,DWORD PTR [ebp-0x38]
  4254e6:	xor    eax,ebx
  4254e8:	add    eax,esi
  4254ea:	cmp    ecx,eax
  4254ec:	je     0x4256e2
  4254f2:	jmp    0x4256be
  4254f7:	mov    ecx,DWORD PTR [ebp-0xc]
  4254fa:	mov    eax,DWORD PTR [ebp-0x38]
  4254fd:	sub    eax,ecx
  4254ff:	mov    ecx,DWORD PTR [ebp-0x48]
  425502:	xor    ecx,ebx
  425504:	add    ecx,esi
  425506:	xor    edx,edx
  425508:	div    ecx
  42550a:	mov    DWORD PTR [ebp-0x14],eax
  42550d:	mov    eax,DWORD PTR [ebp-0x20]
  425510:	mov    ecx,DWORD PTR [ebp-0x14]
  425513:	xor    eax,ebx
  425515:	add    eax,esi
  425517:	cmp    ecx,eax
  425519:	jbe    0x425525
  42551b:	mov    eax,DWORD PTR [ebp-0x20]
  42551e:	xor    eax,ebx
  425520:	add    eax,esi
  425522:	mov    DWORD PTR [ebp-0x14],eax
  425525:	mov    eax,DWORD PTR [ebp-0x48]
  425528:	mov    ecx,DWORD PTR [ebp-0x14]
  42552b:	xor    eax,ebx
  42552d:	add    eax,esi
  42552f:	imul   eax,ecx
  425532:	mov    DWORD PTR [ebp-0x14],eax
  425535:	mov    eax,DWORD PTR [ebp-0x28]
  425538:	mov    ecx,DWORD PTR [ebp-0x14]
  42553b:	xor    eax,ebx
  42553d:	add    eax,esi
  42553f:	cmp    ecx,eax
  425541:	je     0x4256ac
  425547:	mov    eax,DWORD PTR [ebp-0x14]
  42554a:	mov    DWORD PTR [ebp-0x34],eax
  42554d:	mov    eax,DWORD PTR [ebp-0xc]
  425550:	add    eax,DWORD PTR [ebp-0x3c]
  425553:	mov    DWORD PTR [ebp-0x4c],0xf89c85b9
  42555a:	mov    DWORD PTR [ebp-0x14],edi
  42555d:	mov    DWORD PTR [ebp-0x54],0xf89c85bb
  425564:	mov    DWORD PTR [ebp-0x1c],eax
  425567:	mov    DWORD PTR [ebp-0x30],0xf89c85ba
  42556e:	mov    DWORD PTR [ebp-0x8],edi
  425571:	mov    eax,DWORD PTR [ebp-0x4c]
  425574:	xor    eax,ebx
  425576:	add    eax,esi
  425578:	jmp    0x42566b
  42557d:	mov    DWORD PTR [ebp-0xe4],0xf89c85a2
  425587:	mov    DWORD PTR [ebp-0xd0],0xf89c85af
  425591:	mov    eax,DWORD PTR [ebp-0x8]
  425594:	mov    ecx,DWORD PTR [ebp-0x18]
  425597:	xor    eax,ebx
  425599:	add    eax,esi
  42559b:	imul   eax,ecx
  42559e:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255a1:	mov    al,BYTE PTR [eax+ecx*1]
  4255a4:	mov    BYTE PTR [ebp-0x1],al
  4255a7:	mov    eax,DWORD PTR [ebp-0x8]
  4255aa:	mov    ecx,DWORD PTR [ebp-0x18]
  4255ad:	xor    eax,ebx
  4255af:	add    eax,esi
  4255b1:	imul   eax,ecx
  4255b4:	mov    ecx,DWORD PTR [ebp-0x54]
  4255b7:	xor    ecx,ebx
  4255b9:	add    eax,ecx
  4255bb:	mov    ecx,DWORD PTR [ebp-0x1c]
  4255be:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  4255c6:	mov    ecx,DWORD PTR [ebp-0xe4]
  4255cc:	xor    ecx,ebx
  4255ce:	lea    eax,[ecx+eax*1+0x3272f8]
  4255d5:	movzx  ecx,BYTE PTR [ebp-0x1]
  4255d9:	xor    ecx,eax
  4255db:	mov    BYTE PTR [ebp-0x1],cl
  4255de:	mov    al,BYTE PTR [ebp-0x1]
  4255e1:	mov    ecx,DWORD PTR [ebp-0x8]
  4255e4:	mov    edx,DWORD PTR [ebp-0x18]
  4255e7:	xor    ecx,ebx
  4255e9:	add    ecx,esi
  4255eb:	imul   ecx,edx
  4255ee:	mov    edx,DWORD PTR [ebp-0x1c]
  4255f1:	mov    BYTE PTR [ecx+edx*1],al
  4255f4:	mov    eax,DWORD PTR [ebp-0x8]
  4255f7:	mov    ecx,DWORD PTR [ebp-0x18]
  4255fa:	xor    eax,ebx
  4255fc:	add    eax,esi
  4255fe:	imul   eax,ecx
  425601:	mov    ecx,DWORD PTR [ebp-0x1c]
  425604:	mov    al,BYTE PTR [eax+ecx*1]
  425607:	mov    BYTE PTR [ebp-0x1],al
  42560a:	mov    eax,DWORD PTR [ebp-0x8]
  42560d:	mov    ecx,DWORD PTR [ebp-0x18]
  425610:	xor    eax,ebx
  425612:	add    eax,esi
  425614:	imul   eax,ecx
  425617:	mov    ecx,DWORD PTR [ebp-0x14]
  42561a:	xor    ecx,ebx
  42561c:	add    eax,ecx
  42561e:	mov    ecx,DWORD PTR [ebp-0x1c]
  425621:	movzx  eax,BYTE PTR [eax+ecx*1+0x3272f8]
  425629:	mov    ecx,DWORD PTR [ebp-0xd0]
  42562f:	xor    ecx,ebx
  425631:	lea    eax,[ecx+eax*1+0x3272f8]
  425638:	movzx  ecx,BYTE PTR [ebp-0x1]
  42563c:	xor    ecx,eax
  42563e:	mov    BYTE PTR [ebp-0x1],cl
  425641:	mov    al,BYTE PTR [ebp-0x1]
  425644:	mov    ecx,DWORD PTR [ebp-0x8]
  425647:	mov    edx,DWORD PTR [ebp-0x18]
  42564a:	xor    ecx,ebx
  42564c:	add    ecx,esi
  42564e:	imul   ecx,edx
  425651:	mov    edx,DWORD PTR [ebp-0x1c]
  425654:	mov    BYTE PTR [ecx+edx*1],al
  425657:	mov    eax,DWORD PTR [ebp-0x30]
  42565a:	mov    ecx,DWORD PTR [ebp-0x14]
  42565d:	xor    eax,ebx
  42565f:	xor    ecx,ebx
  425661:	add    eax,esi
  425663:	add    ecx,esi
  425665:	imul   eax,ecx
  425668:	add    eax,DWORD PTR [ebp-0x18]
  42566b:	mov    DWORD PTR [ebp-0x18],eax
  42566e:	mov    eax,DWORD PTR [ebp-0x18]
  425671:	mov    ecx,DWORD PTR [ebp-0x34]
  425674:	cmp    ecx,eax
  425676:	jb     0x42557d
  42567c:	mov    eax,DWORD PTR [ebp-0x14]
  42567f:	mov    ecx,DWORD PTR [ebp-0x34]
  425682:	xor    eax,ebx
  425684:	add    eax,esi
  425686:	imul   eax,ecx
  425689:	mov    ecx,DWORD PTR [ebp-0x4c]
  42568c:	xor    ecx,ebx
  42568e:	add    ecx,esi
  425690:	or     eax,ecx
  425692:	mov    ecx,DWORD PTR [ebp-0x2c]
  425695:	xor    ecx,ebx
  425697:	add    eax,ecx
  425699:	mov    ecx,DWORD PTR [ebp-0x2c]
  42569c:	xor    ecx,ebx
  42569e:	add    eax,ecx
  4256a0:	mov    ecx,DWORD PTR [ebp-0xc]
  4256a3:	lea    eax,[eax+ecx*1+0x64e5f0]
  4256aa:	jmp    0x4256bb
  4256ac:	mov    eax,DWORD PTR [ebp-0x2c]
  4256af:	mov    ecx,DWORD PTR [ebp-0xc]
  4256b2:	xor    eax,ebx
  4256b4:	lea    eax,[eax+ecx*1+0x3272f8]
  4256bb:	mov    DWORD PTR [ebp-0xc],eax
  4256be:	mov    eax,DWORD PTR [ebp-0x2c]
  4256c1:	xor    eax,ebx
  4256c3:	mov    ecx,0xffcd8d08
  4256c8:	sub    ecx,eax
  4256ca:	add    ecx,DWORD PTR [ebp-0x38]
  4256cd:	mov    eax,DWORD PTR [ebp-0x2c]
  4256d0:	mov    edx,DWORD PTR [ebp-0xc]
  4256d3:	xor    eax,ebx
  4256d5:	add    eax,esi
  4256d7:	imul   eax,edx
  4256da:	cmp    eax,ecx
  4256dc:	jbe    0x4254f7
  4256e2:	push   DWORD PTR [ebp+0x8]
  4256e5:	mov    eax,DWORD PTR [ebp+0x8]
  4256e8:	push   DWORD PTR [eax+0x1cc]
  4256ee:	lea    eax,[ebp-0xd8]
  4256f4:	push   eax
  4256f5:	mov    eax,DWORD PTR [ebp+0x8]
  4256f8:	mov    eax,DWORD PTR [eax+0x1c4]
  4256fe:	push   DWORD PTR [eax]
  425700:	mov    eax,DWORD PTR [ebp+0x8]
  425703:	mov    eax,DWORD PTR [eax+0x1c0]
  425709:	push   DWORD PTR [eax]
  42570b:	push   DWORD PTR [ebp-0x40]
  42570e:	push   DWORD PTR [ebp-0x24]
  425711:	call   0x4261a8
  425716:	mov    DWORD PTR [ebp-0x3c],eax
  425719:	mov    eax,DWORD PTR [ebp-0x10]
  42571c:	mov    ecx,DWORD PTR [ebp-0x24]
  42571f:	xor    eax,ebx
  425721:	add    eax,esi
  425723:	cmp    eax,ecx
  425725:	je     0x425746
  425727:	mov    eax,DWORD PTR [ebp+0x8]
  42572a:	mov    ecx,DWORD PTR [ebp-0x50]
  42572d:	mov    eax,DWORD PTR [eax+0x1e0]
  425733:	xor    ecx,ebx
  425735:	add    ecx,esi
  425737:	push   ecx
  425738:	mov    ecx,DWORD PTR [ebp-0x10]
  42573b:	xor    ecx,ebx
  42573d:	add    ecx,esi
  42573f:	push   ecx
  425740:	push   DWORD PTR [ebp-0x24]
  425743:	call   DWORD PTR [eax+0x18]
  425746:	pop    edi
  425747:	pop    esi
  425748:	pop    ebx
  425749:	leave  
  42574a:	ret    0x4
  42574d:	push   ebp
  42574e:	mov    ebp,esp
  425750:	push   ecx
  425751:	push   ecx
  425752:	lea    eax,[ebp-0x8]
  425755:	mov    DWORD PTR [ebp-0x4],eax
  425758:	push   esi
  425759:	mov    esi,DWORD PTR [ebp-0x4]
  42575c:	mov    eax,0xf881bacf
  425761:	mov    DWORD PTR [esi],eax
  425763:	mov    esi,DWORD PTR [ebp-0x8]
  425766:	cmp    esi,eax
  425768:	pop    esi
  425769:	jne    0x425773
  42576b:	mov    BYTE PTR [ecx+0xa],0x7b
  42576f:	mov    BYTE PTR [edx+0x8],0xce
  425773:	mov    BYTE PTR [edx+0xa],0x7b
  425777:	mov    BYTE PTR [ecx+0x2],0xe9
  42577b:	leave  
  42577c:	ret    
  42577d:	push   ebp
  42577e:	mov    ebp,esp
  425780:	push   ecx
  425781:	push   ecx
  425782:	lea    eax,[ebp-0x8]
  425785:	mov    DWORD PTR [ebp-0x4],eax
  425788:	mov    edx,DWORD PTR [ebp-0x4]
  42578b:	mov    eax,0xf88b0bd3
  425790:	mov    DWORD PTR [edx],eax
  425792:	mov    edx,DWORD PTR [ebp-0x8]
  425795:	cmp    edx,eax
  425797:	jne    0x4257a8
  425799:	mov    eax,DWORD PTR [ebp+0x8]
  42579c:	mov    BYTE PTR [ecx+0x9],0xef
  4257a0:	mov    BYTE PTR [eax+0x7],0xa6
  4257a4:	mov    BYTE PTR [ecx+0x6],0xee
  4257a8:	mov    BYTE PTR [ecx+0x3],0xdf
  4257ac:	leave  
  4257ad:	ret    0x4
  4257b0:	push   ebp
  4257b1:	mov    ebp,esp
  4257b3:	push   ecx
  4257b4:	push   ecx
  4257b5:	lea    eax,[ebp-0x8]
  4257b8:	mov    DWORD PTR [ebp-0x4],eax
  4257bb:	mov    edx,DWORD PTR [ebp-0x4]
  4257be:	mov    eax,0x7e0dacf
  4257c3:	mov    DWORD PTR [edx],eax
  4257c5:	mov    edx,DWORD PTR [ebp-0x8]
  4257c8:	cmp    edx,eax
  4257ca:	jne    0x4257d0
  4257cc:	mov    BYTE PTR [ecx+0x7],0xa6
  4257d0:	mov    eax,DWORD PTR [ebp+0x8]
  4257d3:	mov    BYTE PTR [ecx+0x1],0xe4
  4257d7:	mov    BYTE PTR [eax+0x9],0xcf
  4257db:	leave  
  4257dc:	ret    0x4
  4257df:	push   ebp
  4257e0:	mov    ebp,esp
  4257e2:	push   ecx
  4257e3:	push   ecx
  4257e4:	lea    eax,[ebp-0x8]
  4257e7:	mov    DWORD PTR [ebp-0x4],eax
  4257ea:	push   esi
  4257eb:	mov    esi,DWORD PTR [ebp-0x4]
  4257ee:	mov    eax,0x7060e3e
  4257f3:	mov    DWORD PTR [esi],eax
  4257f5:	mov    esi,DWORD PTR [ebp-0x8]
  4257f8:	cmp    esi,eax
  4257fa:	pop    esi
  4257fb:	jne    0x425807
  4257fd:	mov    BYTE PTR [edx+0x4],0xea
  425801:	mov    WORD PTR [ecx+0x3],0xeadf
  425807:	mov    BYTE PTR [edx],0xbe
  42580a:	leave  
  42580b:	ret    
  42580c:	push   ebp
  42580d:	mov    ebp,esp
  42580f:	push   ecx
  425810:	push   ecx
  425811:	lea    eax,[ebp-0x8]
  425814:	mov    DWORD PTR [ebp-0x4],eax
  425817:	mov    edx,DWORD PTR [ebp-0x4]
  42581a:	mov    eax,0xf8870b3f
  42581f:	mov    DWORD PTR [edx],eax
  425821:	mov    edx,DWORD PTR [ebp-0x8]
  425824:	cmp    edx,eax
  425826:	jne    0x425833
  425828:	mov    eax,DWORD PTR [ebp+0x8]
  42582b:	mov    BYTE PTR [ecx+0x8],0xee
  42582f:	mov    BYTE PTR [eax+0x1],0xe4
  425833:	mov    BYTE PTR [ecx+0x5],0xf2
  425837:	leave  
  425838:	ret    0x4
  42583b:	push   esi
  42583c:	mov    ecx,edi
  42583e:	call   0x42580c
  425843:	mov    edx,edi
  425845:	mov    ecx,esi
  425847:	mov    BYTE PTR [esi],0xde
  42584a:	call   0x4257df
  42584f:	push   esi
  425850:	mov    ecx,edi
  425852:	mov    BYTE PTR [esi+0x5],0xf2
  425856:	call   0x4257b0
  42585b:	push   esi
  42585c:	mov    BYTE PTR [esi+0x6],0xee
  425860:	call   0x42577d
  425865:	mov    BYTE PTR [esi+0x2],0xe9
  425869:	mov    edx,esi
  42586b:	jmp    0x42574d
  425870:	push   ebp
  425871:	mov    ebp,esp
  425873:	push   ecx
  425874:	mov    ecx,DWORD PTR [edx+0x194]
  42587a:	push   esi
  42587b:	mov    esi,DWORD PTR [ebp+0x8]
  42587e:	mov    esi,DWORD PTR [esi]
  425880:	mov    DWORD PTR [ecx],esi
  425882:	mov    ecx,DWORD PTR [edx+0x194]
  425888:	mov    ecx,DWORD PTR [ecx]
  42588a:	mov    esi,DWORD PTR [edx+0x190]
  425890:	mov    DWORD PTR [esi],ecx
  425892:	mov    eax,DWORD PTR [edx+0x194]
  425898:	mov    ecx,DWORD PTR [eax]
  42589a:	mov    ecx,DWORD PTR [ecx+0x3c]
  42589d:	add    ecx,DWORD PTR [eax]
  42589f:	mov    DWORD PTR [ebp-0x4],0xf89ca5b9
  4258a6:	mov    eax,DWORD PTR [ebp-0x4]
  4258a9:	movzx  ecx,WORD PTR [ecx+0x16]
  4258ad:	xor    eax,0x75108b1
  4258b2:	add    eax,0x3272f8
  4258b7:	pop    esi
  4258b8:	test   ecx,eax
  4258ba:	je     0x4258c8
  4258bc:	mov    eax,DWORD PTR [edx+0x1c8]
  4258c2:	mov    DWORD PTR [eax],0xf89c85b8
  4258c8:	leave  
  4258c9:	ret    0x4
  4258cc:	push   ebp
  4258cd:	mov    ebp,esp
  4258cf:	sub    esp,0x70
  4258d2:	and    DWORD PTR [ebp-0x20],0x0
  4258d6:	mov    DWORD PTR [ebp-0x18],0xf89cb5b9
  4258dd:	mov    DWORD PTR [ebp-0x1c],0xf89c85f9
  4258e4:	mov    DWORD PTR [ebp-0x2c],0xf89c85bd
  4258eb:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  4258f2:	mov    DWORD PTR [ebp-0x2c],0xf89f05b9
  4258f9:	mov    eax,DWORD PTR [ebp+0x20]
  4258fc:	mov    eax,DWORD PTR [eax+0x194]
  425902:	mov    DWORD PTR [ebp-0xc],eax
  425905:	mov    eax,DWORD PTR [ebp+0x20]
  425908:	push   ebx
  425909:	push   esi
  42590a:	mov    esi,DWORD PTR [eax+0x190]
  425910:	mov    eax,DWORD PTR [ebp+0x20]
  425913:	mov    eax,DWORD PTR [eax+0x18c]
  425919:	mov    DWORD PTR [ebp-0x8],eax
  42591c:	mov    eax,DWORD PTR [eax]
  42591e:	push   edi
  42591f:	mov    DWORD PTR [ebp-0x4],esi
  425922:	test   eax,eax
  425924:	jne    0x425931
  425926:	push   DWORD PTR [ebp+0x1c]
  425929:	mov    edx,DWORD PTR [ebp+0x20]
  42592c:	call   0x425870
  425931:	mov    eax,DWORD PTR [esi]
  425933:	mov    ebx,DWORD PTR [esi]
  425935:	add    ebx,DWORD PTR [eax+0x3c]
  425938:	mov    eax,DWORD PTR [ebp+0xc]
  42593b:	mov    ecx,DWORD PTR [ebp-0x8]
  42593e:	mov    ecx,DWORD PTR [ecx]
  425940:	mov    esi,0x75108b1
  425945:	xor    eax,esi
  425947:	mov    edi,0x3272f8
  42594c:	add    eax,edi
  42594e:	cmp    eax,ecx
  425950:	jne    0x425b88
  425956:	mov    eax,DWORD PTR [ebp-0xc]
  425959:	mov    eax,DWORD PTR [eax]
  42595b:	mov    DWORD PTR [ebp-0x10],eax
  42595e:	mov    eax,DWORD PTR [ebx+0x50]
  425961:	mov    DWORD PTR [ebp-0x68],eax
  425964:	mov    eax,DWORD PTR [ebp-0x18]
  425967:	xor    eax,esi
  425969:	add    eax,edi
  42596b:	mov    DWORD PTR [ebp-0x64],eax
  42596e:	mov    eax,DWORD PTR [ebp-0x14]
  425971:	and    DWORD PTR [ebp-0x6c],0x0
  425975:	xor    eax,esi
  425977:	add    eax,edi
  425979:	mov    DWORD PTR [ebp-0x60],eax
  42597c:	lea    eax,[ebp-0x70]
  42597f:	push   eax
  425980:	mov    eax,DWORD PTR [ebp+0x8]
  425983:	xor    eax,esi
  425985:	add    eax,edi
  425987:	push   eax
  425988:	mov    eax,DWORD PTR [ebp+0x20]
  42598b:	add    eax,0xaa
  425990:	push   eax
  425991:	mov    eax,DWORD PTR [ebp+0x20]
  425994:	mov    eax,DWORD PTR [eax+0x198]
  42599a:	mov    DWORD PTR [ebp-0x70],0x4
  4259a1:	push   DWORD PTR [eax]
  4259a3:	mov    eax,DWORD PTR [ebp+0x10]
  4259a6:	call   eax
  4259a8:	mov    ecx,DWORD PTR [ebp-0xc]
  4259ab:	mov    ecx,DWORD PTR [ecx]
  4259ad:	mov    edx,DWORD PTR [ebp-0x8]
  4259b0:	mov    DWORD PTR [ebp-0x6c],eax
  4259b3:	mov    DWORD PTR [ebp+0x1c],eax
  4259b6:	mov    DWORD PTR [edx],ecx
  4259b8:	mov    ecx,DWORD PTR [ebp-0x4]
  4259bb:	mov    DWORD PTR [ecx],eax
  4259bd:	mov    eax,DWORD PTR [ebx+0x50]
  4259c0:	mov    DWORD PTR [ebp-0x68],eax
  4259c3:	mov    eax,DWORD PTR [ebp-0x1c]
  4259c6:	xor    eax,esi
  4259c8:	add    eax,edi
  4259ca:	mov    DWORD PTR [ebp-0x64],eax
  4259cd:	lea    eax,[ebp-0x20]
  4259d0:	mov    DWORD PTR [ebp-0x60],eax
  4259d3:	lea    eax,[ebp-0x70]
  4259d6:	push   eax
  4259d7:	mov    eax,DWORD PTR [ebp+0x8]
  4259da:	xor    eax,esi
  4259dc:	add    eax,edi
  4259de:	push   eax
  4259df:	mov    eax,DWORD PTR [ebp+0x20]
  4259e2:	add    eax,0xee
  4259e7:	push   eax
  4259e8:	mov    eax,DWORD PTR [ebp+0x20]
  4259eb:	mov    eax,DWORD PTR [eax+0x198]
  4259f1:	mov    DWORD PTR [ebp-0x70],0x4
  4259f8:	push   DWORD PTR [eax]
  4259fa:	mov    eax,DWORD PTR [ebp+0x10]
  4259fd:	call   eax
  4259ff:	test   eax,eax
  425a01:	je     0x425a26
  425a03:	and    DWORD PTR [ebp+0xc],0x0
  425a07:	cmp    DWORD PTR [ebx+0x50],0x0
  425a0b:	jbe    0x425a26
  425a0d:	mov    eax,DWORD PTR [ebp+0x1c]
  425a10:	mov    ecx,DWORD PTR [ebp-0x10]
  425a13:	sub    ecx,eax
  425a15:	mov    dl,BYTE PTR [ecx+eax*1]
  425a18:	inc    DWORD PTR [ebp+0xc]
  425a1b:	mov    BYTE PTR [eax],dl
  425a1d:	mov    edx,DWORD PTR [ebp+0xc]
  425a20:	inc    eax
  425a21:	cmp    edx,DWORD PTR [ebx+0x50]
  425a24:	jb     0x425a15
  425a26:	mov    edx,DWORD PTR [ebp+0x1c]
  425a29:	mov    ecx,DWORD PTR [edx+0x3c]
  425a2c:	add    ecx,edx
  425a2e:	mov    eax,DWORD PTR [ecx+0xa0]
  425a34:	mov    ebx,DWORD PTR [ecx+0x28]
  425a37:	add    eax,edx
  425a39:	sub    edx,DWORD PTR [ebp-0x10]
  425a3c:	add    ebx,DWORD PTR [ebp+0x1c]
  425a3f:	mov    DWORD PTR [ebp+0xc],edx
  425a42:	mov    DWORD PTR [ebp-0x2c],ecx
  425a45:	mov    DWORD PTR [ebp-0x14],ebx
  425a48:	mov    DWORD PTR [ebp-0x8],0x0
  425a4f:	jmp    0x425acb
  425a51:	add    edx,0xfffffff8
  425a54:	shr    edx,1
  425a56:	mov    DWORD PTR [ebp-0x18],edx
  425a59:	je     0x425ab7
  425a5b:	lea    edx,[eax+0x8]
  425a5e:	mov    DWORD PTR [ebp-0x4],edx
  425a61:	mov    edx,DWORD PTR [ebp-0x18]
  425a64:	mov    DWORD PTR [ebp-0x18],edx
  425a67:	mov    edx,DWORD PTR [ebp-0x4]
  425a6a:	movzx  edx,WORD PTR [edx]
  425a6d:	mov    DWORD PTR [ebp-0x24],edx
  425a70:	and    edx,0xfff
  425a76:	mov    DWORD PTR [ebp-0x28],edx
  425a79:	mov    edx,DWORD PTR [ebp-0x24]
  425a7c:	shr    edx,0xc
  425a7f:	add    edx,0xffcd8d08
  425a85:	xor    edx,esi
  425a87:	cmp    edx,0xf89c85ba
  425a8d:	jne    0x425aae
  425a8f:	mov    edx,DWORD PTR [ebp-0x28]
  425a92:	add    edx,DWORD PTR [ebp+0x1c]
  425a95:	mov    ebx,DWORD PTR [eax]
  425a97:	cmp    DWORD PTR [ebx+edx*1],0x0
  425a9b:	je     0x425aab
  425a9d:	mov    ecx,DWORD PTR [ebp+0xc]
  425aa0:	add    ecx,DWORD PTR [ebx+edx*1]
  425aa3:	mov    ebx,DWORD PTR [eax]
  425aa5:	mov    DWORD PTR [edx+ebx*1],ecx
  425aa8:	mov    ecx,DWORD PTR [ebp-0x2c]
  425aab:	mov    ebx,DWORD PTR [ebp-0x14]
  425aae:	add    DWORD PTR [ebp-0x4],0x2
  425ab2:	dec    DWORD PTR [ebp-0x18]
  425ab5:	jne    0x425a67
  425ab7:	mov    edx,DWORD PTR [ebp-0xc]
  425aba:	add    DWORD PTR [ebp-0x8],edx
  425abd:	mov    edx,DWORD PTR [ebp-0x8]
  425ac0:	cmp    edx,DWORD PTR [ecx+0xa4]
  425ac6:	jae    0x425ad9
  425ac8:	add    eax,DWORD PTR [ebp-0xc]
  425acb:	mov    edx,DWORD PTR [eax+0x4]
  425ace:	mov    DWORD PTR [ebp-0xc],edx
  425ad1:	test   edx,edx
  425ad3:	jne    0x425a51
  425ad9:	mov    eax,DWORD PTR [ebp-0x10]
  425adc:	mov    DWORD PTR [ebp-0x6c],eax
  425adf:	mov    DWORD PTR [ebp-0x70],0x4
  425ae6:	mov    eax,DWORD PTR [ecx+0x50]
  425ae9:	mov    DWORD PTR [ebp-0x68],eax
  425aec:	mov    eax,DWORD PTR [ebp-0x1c]
  425aef:	xor    eax,esi
  425af1:	add    eax,edi
  425af3:	mov    DWORD PTR [ebp-0x64],eax
  425af6:	lea    eax,[ebp-0x20]
  425af9:	mov    DWORD PTR [ebp-0x60],eax
  425afc:	lea    eax,[ebp-0x70]
  425aff:	push   eax
  425b00:	mov    eax,DWORD PTR [ebp+0x8]
  425b03:	xor    eax,esi
  425b05:	add    eax,edi
  425b07:	push   eax
  425b08:	mov    eax,DWORD PTR [ebp+0x20]
  425b0b:	add    eax,0xee
  425b10:	push   eax
  425b11:	mov    eax,DWORD PTR [ebp+0x20]
  425b14:	mov    eax,DWORD PTR [eax+0x198]
  425b1a:	push   DWORD PTR [eax]
  425b1c:	mov    eax,DWORD PTR [ebp+0x10]
  425b1f:	call   eax
  425b21:	mov    eax,DWORD PTR [ebp+0x20]
  425b24:	mov    eax,DWORD PTR [eax+0x180]
  425b2a:	add    eax,DWORD PTR [ebp+0xc]
  425b2d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b30:	push   DWORD PTR [ebp+0x18]
  425b33:	mov    DWORD PTR [eax],ecx
  425b35:	push   DWORD PTR [ebp+0x14]
  425b38:	push   DWORD PTR [ebp+0x1c]
  425b3b:	call   ebx
  425b3d:	mov    ecx,DWORD PTR [ebp+0xc]
  425b40:	add    ecx,DWORD PTR [ebp+0x20]
  425b43:	lea    eax,[ebp+0x4]
  425b46:	mov    DWORD PTR [ebp+0x20],ecx
  425b49:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4c:	mov    ecx,DWORD PTR [ebp+0x20]
  425b4f:	mov    edx,DWORD PTR [ecx+0x190]
  425b55:	mov    ecx,DWORD PTR [ebp+0x20]
  425b58:	mov    ecx,DWORD PTR [ecx+0x18c]
  425b5e:	mov    esi,DWORD PTR [ecx]
  425b60:	cmp    DWORD PTR [eax],esi
  425b62:	jb     0x425b83
  425b64:	mov    esi,DWORD PTR [edx]
  425b66:	mov    edi,DWORD PTR [edx]
  425b68:	mov    esi,DWORD PTR [esi+0x3c]
  425b6b:	lea    esi,[edi+esi*1+0x50]
  425b6f:	mov    edi,DWORD PTR [ecx]
  425b71:	add    edi,DWORD PTR [esi]
  425b73:	cmp    DWORD PTR [eax],edi
  425b75:	jae    0x425b83
  425b77:	mov    esi,DWORD PTR [ecx]
  425b79:	mov    ecx,DWORD PTR [eax]
  425b7b:	mov    edx,DWORD PTR [edx]
  425b7d:	sub    ecx,esi
  425b7f:	add    edx,ecx
  425b81:	mov    DWORD PTR [eax],edx
  425b83:	mov    eax,DWORD PTR [ebp+0xc]
  425b86:	jmp    0x425b8a
  425b88:	xor    eax,eax
  425b8a:	pop    edi
  425b8b:	pop    esi
  425b8c:	pop    ebx
  425b8d:	leave  
  425b8e:	ret    0x1c
  425b91:	push   ebp
  425b92:	mov    ebp,esp
  425b94:	sub    esp,0x1c
  425b97:	push   esi
  425b98:	mov    esi,eax
  425b9a:	mov    eax,DWORD PTR [ecx+0x190]
  425ba0:	cmp    DWORD PTR [eax],0x0
  425ba3:	je     0x425cb3
  425ba9:	test   edx,edx
  425bab:	je     0x425cb3
  425bb1:	test   esi,esi
  425bb3:	je     0x425cb3
  425bb9:	mov    eax,DWORD PTR [esi+0x88]
  425bbf:	test   eax,eax
  425bc1:	je     0x425cae
  425bc7:	cmp    DWORD PTR [esi+0x8c],0x10
  425bce:	je     0x425cae
  425bd4:	cmp    DWORD PTR [esi+0x34],edx
  425bd7:	je     0x425cae
  425bdd:	mov    esi,DWORD PTR [ecx+0x18c]
  425be3:	and    DWORD PTR [ebp-0x10],0x0
  425be7:	mov    ecx,edx
  425be9:	sub    ecx,DWORD PTR [esi]
  425beb:	add    eax,edx
  425bed:	movzx  edx,WORD PTR [eax+0xc]
  425bf1:	mov    DWORD PTR [ebp-0x1c],ecx
  425bf4:	movzx  ecx,WORD PTR [eax+0xe]
  425bf8:	add    ecx,edx
  425bfa:	je     0x425cae
  425c00:	lea    ecx,[eax+0x14]
  425c03:	push   ebx
  425c04:	mov    DWORD PTR [ebp-0x18],ecx
  425c07:	mov    esi,0x7fffffff
  425c0c:	push   edi
  425c0d:	test   DWORD PTR [ecx],esi
  425c0f:	je     0x425c90
  425c11:	mov    edx,DWORD PTR [ecx]
  425c13:	and    DWORD PTR [ebp-0xc],0x0
  425c17:	and    edx,esi
  425c19:	add    edx,eax
  425c1b:	movzx  edi,WORD PTR [edx+0xe]
  425c1f:	movzx  ebx,WORD PTR [edx+0xc]
  425c23:	add    edi,ebx
  425c25:	je     0x425c90
  425c27:	lea    ecx,[edx+0x14]
  425c2a:	mov    DWORD PTR [ebp-0x14],ecx
  425c2d:	test   DWORD PTR [ecx],esi
  425c2f:	je     0x425c72
  425c31:	mov    ecx,DWORD PTR [ecx]
  425c33:	and    DWORD PTR [ebp-0x8],0x0
  425c37:	and    ecx,esi
  425c39:	add    ecx,eax
  425c3b:	movzx  edi,WORD PTR [ecx+0xe]
  425c3f:	movzx  ebx,WORD PTR [ecx+0xc]
  425c43:	add    edi,ebx
  425c45:	je     0x425c72
  425c47:	lea    edi,[ecx+0x14]
  425c4a:	mov    DWORD PTR [ebp-0x4],edi
  425c4d:	mov    edi,DWORD PTR [ebp-0x4]
  425c50:	mov    edi,DWORD PTR [edi]
  425c52:	test   edi,edi
  425c54:	je     0x425c5c
  425c56:	mov    ebx,DWORD PTR [ebp-0x1c]
  425c59:	add    DWORD PTR [edi+eax*1],ebx
  425c5c:	movzx  edi,WORD PTR [ecx+0xe]
  425c60:	movzx  ebx,WORD PTR [ecx+0xc]
  425c64:	inc    DWORD PTR [ebp-0x8]
  425c67:	add    DWORD PTR [ebp-0x4],0x8
  425c6b:	add    edi,ebx
  425c6d:	cmp    DWORD PTR [ebp-0x8],edi
  425c70:	jb     0x425c4d
  425c72:	movzx  edi,WORD PTR [edx+0xe]
  425c76:	movzx  ebx,WORD PTR [edx+0xc]
  425c7a:	mov    ecx,DWORD PTR [ebp-0x14]
  425c7d:	inc    DWORD PTR [ebp-0xc]
  425c80:	add    ecx,0x8
  425c83:	add    edi,ebx
  425c85:	mov    DWORD PTR [ebp-0x14],ecx
  425c88:	cmp    DWORD PTR [ebp-0xc],edi
  425c8b:	jb     0x425c2d
  425c8d:	mov    ecx,DWORD PTR [ebp-0x18]
  425c90:	movzx  edx,WORD PTR [eax+0xe]
  425c94:	movzx  edi,WORD PTR [eax+0xc]
  425c98:	inc    DWORD PTR [ebp-0x10]
  425c9b:	add    ecx,0x8
  425c9e:	add    edx,edi
  425ca0:	mov    DWORD PTR [ebp-0x18],ecx
  425ca3:	cmp    DWORD PTR [ebp-0x10],edx
  425ca6:	jb     0x425c0d
  425cac:	pop    edi
  425cad:	pop    ebx
  425cae:	xor    eax,eax
  425cb0:	inc    eax
  425cb1:	jmp    0x425cb5
  425cb3:	xor    eax,eax
  425cb5:	pop    esi
  425cb6:	leave  
  425cb7:	ret    
  425cb8:	push   ebp
  425cb9:	mov    ebp,esp
  425cbb:	mov    ecx,DWORD PTR [ecx+0x190]
  425cc1:	mov    eax,DWORD PTR [ebp+0xc]
  425cc4:	sub    esp,0x10
  425cc7:	push   ebx
  425cc8:	xor    ebx,ebx
  425cca:	push   esi
  425ccb:	push   edi
  425ccc:	cmp    DWORD PTR [ecx],ebx
  425cce:	je     0x425d56
  425cd4:	cmp    eax,ebx
  425cd6:	je     0x425d56
  425cd8:	cmp    DWORD PTR [eax+0x78],ebx
  425cdb:	jne    0x425ce2
  425cdd:	xor    eax,eax
  425cdf:	inc    eax
  425ce0:	jmp    0x425d58
  425ce2:	mov    eax,DWORD PTR [eax+0x78]
  425ce5:	add    eax,DWORD PTR [ebp+0x8]
  425ce8:	mov    ecx,DWORD PTR [eax+0x1c]
  425ceb:	mov    edx,DWORD PTR [eax+0x24]
  425cee:	mov    esi,DWORD PTR [eax+0x14]
  425cf1:	mov    edi,DWORD PTR [eax+0x18]
  425cf4:	add    ecx,DWORD PTR [ebp+0x8]
  425cf7:	add    edx,DWORD PTR [ebp+0x8]
  425cfa:	mov    DWORD PTR [ebp-0x4],esi
  425cfd:	cmp    esi,edi
  425cff:	ja     0x425d04
  425d01:	mov    DWORD PTR [ebp-0x4],edi
  425d04:	mov    DWORD PTR [ebp-0x8],ebx
  425d07:	cmp    DWORD PTR [ebp-0x4],ebx
  425d0a:	jbe    0x425cdd
  425d0c:	cmp    ebx,DWORD PTR [eax+0x14]
  425d0f:	jae    0x425d17
  425d11:	movzx  esi,WORD PTR [edx+ebx*2]
  425d15:	jmp    0x425d19
  425d17:	mov    esi,ebx
  425d19:	lea    esi,[ecx+esi*4]
  425d1c:	mov    edi,DWORD PTR [esi]
  425d1e:	test   edi,edi
  425d20:	je     0x425d4b
  425d22:	add    edi,DWORD PTR [ebp+0x8]
  425d25:	mov    DWORD PTR [ebp-0x10],edi
  425d28:	cmp    edi,eax
  425d2a:	jbe    0x425d3c
  425d2c:	mov    ebx,DWORD PTR [ebp+0xc]
  425d2f:	mov    ebx,DWORD PTR [ebx+0x7c]
  425d32:	add    ebx,eax
  425d34:	cmp    edi,ebx
  425d36:	jae    0x425d3c
  425d38:	mov    esi,DWORD PTR [esi]
  425d3a:	jmp    0x425d44
  425d3c:	sub    edi,DWORD PTR [ebp+0x8]
  425d3f:	mov    DWORD PTR [esi],edi
  425d41:	mov    esi,DWORD PTR [ebp-0x10]
  425d44:	test   esi,esi
  425d46:	je     0x425d56
  425d48:	mov    ebx,DWORD PTR [ebp-0x8]
  425d4b:	inc    ebx
  425d4c:	mov    DWORD PTR [ebp-0x8],ebx
  425d4f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425d52:	jb     0x425d0c
  425d54:	jmp    0x425cdd
  425d56:	xor    eax,eax
  425d58:	pop    edi
  425d59:	pop    esi
  425d5a:	pop    ebx
  425d5b:	leave  
  425d5c:	ret    0x8
  425d5f:	push   ebp
  425d60:	mov    ebp,esp
  425d62:	sub    esp,0x2c
  425d65:	mov    edx,0xf89c85b9
  425d6a:	mov    DWORD PTR [ebp-0x4],edx
  425d6d:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  425d74:	mov    eax,DWORD PTR [ebp-0x4]
  425d77:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7a:	mov    ecx,DWORD PTR [ebp-0x4]
  425d7d:	mov    ecx,DWORD PTR [ebp-0x4]
  425d80:	mov    ecx,DWORD PTR [ebp-0x4]
  425d83:	mov    ecx,DWORD PTR [ebp-0x4]
  425d86:	push   ebx
  425d87:	mov    ebx,DWORD PTR [ebp+0x10]
  425d8a:	push   esi
  425d8b:	mov    esi,0x75108b1
  425d90:	mov    DWORD PTR [ebp-0x10],0x352ebcf
  425d97:	mov    ecx,DWORD PTR [ebp-0x4]
  425d9a:	mov    ebx,DWORD PTR [ebx+0x190]
  425da0:	push   edi
  425da1:	mov    edi,0x3272f8
  425da6:	xor    ecx,esi
  425da8:	xor    eax,esi
  425daa:	add    eax,edi
  425dac:	add    ecx,edi
  425dae:	mov    DWORD PTR [ebp-0x18],eax
  425db1:	cmp    ecx,DWORD PTR [ebx]
  425db3:	je     0x426034
  425db9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dbc:	mov    ecx,DWORD PTR [ebp+0xc]
  425dbf:	xor    ebx,esi
  425dc1:	add    ebx,edi
  425dc3:	cmp    ebx,ecx
  425dc5:	je     0x426034
  425dcb:	mov    ebx,DWORD PTR [ebp-0x4]
  425dce:	mov    ecx,DWORD PTR [ecx+0x80]
  425dd4:	xor    ebx,esi
  425dd6:	add    ebx,edi
  425dd8:	cmp    ecx,ebx
  425dda:	je     0x42602f
  425de0:	add    ecx,DWORD PTR [ebp+0x8]
  425de3:	mov    DWORD PTR [ebp-0x2c],ecx
  425de6:	mov    ebx,edx
  425de8:	xor    ebx,esi
  425dea:	add    ebx,edi
  425dec:	mov    DWORD PTR [ebp-0x10],ebx
  425def:	mov    ebx,DWORD PTR [ebp-0x10]
  425df2:	cmp    ebx,edx
  425df4:	je     0x425e08
  425df6:	mov    edx,DWORD PTR [ebp-0x10]
  425df9:	mov    ebx,DWORD PTR [ebp-0x4]
  425dfc:	imul   edx,edx,0x14
  425dff:	xor    ebx,esi
  425e01:	add    ebx,edi
  425e03:	cmp    DWORD PTR [edx+ecx*1],ebx
  425e06:	jne    0x425e1f
  425e08:	mov    edx,DWORD PTR [ebp-0x10]
  425e0b:	mov    ebx,DWORD PTR [ebp-0x4]
  425e0e:	imul   edx,edx,0x14
  425e11:	xor    ebx,esi
  425e13:	add    ebx,edi
  425e15:	cmp    DWORD PTR [edx+ecx*1+0x10],ebx
  425e19:	je     0x426021
  425e1f:	mov    eax,DWORD PTR [ebp-0x4]
  425e22:	mov    ebx,DWORD PTR [ebp-0x4]
  425e25:	mov    eax,DWORD PTR [ebp-0x10]
  425e28:	imul   eax,eax,0x14
  425e2b:	add    eax,ecx
  425e2d:	mov    ecx,DWORD PTR [eax+0x10]
  425e30:	add    ecx,DWORD PTR [ebp+0x8]
  425e33:	xor    ebx,esi
  425e35:	mov    DWORD PTR [ebp-0x1c],ecx
  425e38:	mov    ecx,DWORD PTR [ebp-0x4]
  425e3b:	mov    edx,DWORD PTR [ebp-0x4]
  425e3e:	xor    ecx,esi
  425e40:	add    ecx,edi
  425e42:	xor    edx,esi
  425e44:	mov    DWORD PTR [ebp-0x24],ecx
  425e47:	mov    ecx,DWORD PTR [eax]
  425e49:	add    edx,edi
  425e4b:	add    ebx,edi
  425e4d:	cmp    ecx,edx
  425e4f:	je     0x425e57
  425e51:	add    ecx,DWORD PTR [ebp+0x8]
  425e54:	mov    DWORD PTR [ebp-0x24],ecx
  425e57:	mov    ecx,DWORD PTR [ebp-0x4]
  425e5a:	xor    ecx,esi
  425e5c:	add    ecx,DWORD PTR [eax+0xc]
  425e5f:	mov    eax,DWORD PTR [ebp+0x8]
  425e62:	lea    eax,[ecx+eax*1+0x3272f8]
  425e69:	mov    DWORD PTR [ebp+0xc],eax
  425e6c:	mov    DWORD PTR [ebp-0x28],0xf89c85bc
  425e73:	mov    eax,DWORD PTR [ebp+0x10]
  425e76:	push   DWORD PTR [ebp+0xc]
  425e79:	mov    eax,DWORD PTR [eax+0x1e0]
  425e7f:	call   DWORD PTR [eax]
  425e81:	mov    ecx,DWORD PTR [ebp-0x4]
  425e84:	xor    ecx,esi
  425e86:	add    ecx,edi
  425e88:	mov    DWORD PTR [ebp-0xc],eax
  425e8b:	cmp    ecx,eax
  425e8d:	jne    0x425ea1
  425e8f:	mov    eax,DWORD PTR [ebp+0x10]
  425e92:	push   DWORD PTR [ebp+0xc]
  425e95:	mov    eax,DWORD PTR [eax+0x1e0]
  425e9b:	call   DWORD PTR [eax+0xc]
  425e9e:	mov    DWORD PTR [ebp-0xc],eax
  425ea1:	mov    DWORD PTR [ebp-0x20],0x7f661b30
  425ea8:	mov    DWORD PTR [ebp-0x20],0xf89c9840
  425eaf:	mov    eax,DWORD PTR [ebp-0x4]
  425eb2:	xor    eax,esi
  425eb4:	add    eax,edi
  425eb6:	cmp    eax,DWORD PTR [ebp-0xc]
  425eb9:	jne    0x425ede
  425ebb:	mov    eax,DWORD PTR [ebp-0x8]
  425ebe:	mov    ecx,DWORD PTR [ebp-0x20]
  425ec1:	xor    eax,esi
  425ec3:	xor    ecx,esi
  425ec5:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ecc:	mov    eax,DWORD PTR [ebp+0x10]
  425ecf:	mov    eax,DWORD PTR [eax+0x1e0]
  425ed5:	add    ecx,edi
  425ed7:	imul   ecx,ebx
  425eda:	push   ecx
  425edb:	call   DWORD PTR [eax+0x24]
  425ede:	mov    eax,DWORD PTR [ebp-0x4]
  425ee1:	xor    eax,esi
  425ee3:	add    eax,edi
  425ee5:	cmp    eax,DWORD PTR [ebp-0xc]
  425ee8:	jne    0x425ef9
  425eea:	mov    eax,DWORD PTR [ebp-0x28]
  425eed:	xor    eax,esi
  425eef:	add    eax,edi
  425ef1:	cmp    ebx,eax
  425ef3:	jbe    0x425e73
  425ef9:	mov    eax,DWORD PTR [ebp-0x4]
  425efc:	xor    eax,esi
  425efe:	add    eax,edi
  425f00:	cmp    eax,DWORD PTR [ebp-0xc]
  425f03:	jne    0x425f1c
  425f05:	mov    eax,DWORD PTR [ebp-0x8]
  425f08:	mov    ecx,DWORD PTR [ebp-0x18]
  425f0b:	xor    eax,esi
  425f0d:	lea    eax,[ecx+eax*1+0x3272f8]
  425f14:	mov    DWORD PTR [ebp-0x18],eax
  425f17:	jmp    0x42600b
  425f1c:	mov    DWORD PTR [ebp-0x14],0x1121b31
  425f23:	mov    DWORD PTR [ebp+0xc],0xe042dcf
  425f2a:	mov    ebx,DWORD PTR [ebp-0x4]
  425f2d:	xor    ebx,esi
  425f2f:	add    ebx,edi
  425f31:	jmp    0x425ff8
  425f36:	mov    eax,DWORD PTR [ebp-0x4]
  425f39:	xor    eax,esi
  425f3b:	add    eax,edi
  425f3d:	mov    DWORD PTR [ebp-0x14],eax
  425f40:	mov    eax,DWORD PTR [ebp-0x4]
  425f43:	xor    eax,esi
  425f45:	add    eax,edi
  425f47:	mov    DWORD PTR [ebp+0xc],eax
  425f4a:	mov    ecx,DWORD PTR [ebp-0x4]
  425f4d:	mov    eax,DWORD PTR [ebp-0x24]
  425f50:	xor    ecx,esi
  425f52:	add    ecx,edi
  425f54:	cmp    ecx,eax
  425f56:	je     0x425f5e
  425f58:	mov    eax,DWORD PTR [eax+ebx*4]
  425f5b:	mov    DWORD PTR [ebp-0x14],eax
  425f5e:	mov    eax,DWORD PTR [ebp-0x1c]
  425f61:	mov    eax,DWORD PTR [eax+ebx*4]
  425f64:	mov    DWORD PTR [ebp+0xc],eax
  425f67:	mov    eax,DWORD PTR [ebp-0x4]
  425f6a:	mov    ecx,DWORD PTR [ebp-0x14]
  425f6d:	xor    eax,esi
  425f6f:	add    eax,edi
  425f71:	cmp    eax,ecx
  425f73:	je     0x425f9e
  425f75:	mov    eax,DWORD PTR [ebp-0x4]
  425f78:	mov    ecx,DWORD PTR [ebp-0x14]
  425f7b:	xor    eax,esi
  425f7d:	add    eax,edi
  425f7f:	shr    ecx,0x1f
  425f82:	cmp    eax,ecx
  425f84:	je     0x425f9e
  425f86:	mov    ecx,DWORD PTR [ebp-0x14]
  425f89:	mov    eax,DWORD PTR [ebp+0x10]
  425f8c:	mov    eax,DWORD PTR [eax+0x1e0]
  425f92:	movzx  ecx,cx
  425f95:	push   ecx
  425f96:	push   DWORD PTR [ebp-0xc]
  425f99:	call   DWORD PTR [eax+0x8]
  425f9c:	jmp    0x425fb7
  425f9e:	mov    eax,DWORD PTR [ebp+0xc]
  425fa1:	add    eax,DWORD PTR [ebp+0x8]
  425fa4:	mov    ecx,DWORD PTR [ebp+0x10]
  425fa7:	mov    ecx,DWORD PTR [ecx+0x1e0]
  425fad:	add    eax,0x2
  425fb0:	push   eax
  425fb1:	push   DWORD PTR [ebp-0xc]
  425fb4:	call   DWORD PTR [ecx+0x8]
  425fb7:	mov    DWORD PTR [ebp+0xc],eax
  425fba:	mov    eax,DWORD PTR [ebp-0x4]
  425fbd:	mov    ecx,DWORD PTR [ebp+0xc]
  425fc0:	xor    eax,esi
  425fc2:	add    eax,edi
  425fc4:	cmp    eax,ecx
  425fc6:	mov    eax,DWORD PTR [ebp-0x8]
  425fc9:	jne    0x425fdc
  425fcb:	mov    ecx,DWORD PTR [ebp-0x18]
  425fce:	xor    eax,esi
  425fd0:	lea    eax,[ecx+eax*1+0x3272f8]
  425fd7:	mov    DWORD PTR [ebp-0x18],eax
  425fda:	jmp    0x425fec
  425fdc:	mov    ecx,DWORD PTR [ebp+0xc]
  425fdf:	xor    eax,esi
  425fe1:	add    eax,edi
  425fe3:	imul   eax,ecx
  425fe6:	mov    ecx,DWORD PTR [ebp-0x1c]
  425fe9:	mov    DWORD PTR [ecx+ebx*4],eax
  425fec:	mov    eax,DWORD PTR [ebp-0x8]
  425fef:	xor    eax,esi
  425ff1:	lea    ebx,[ebx+eax*1+0x3272f8]
  425ff8:	mov    eax,DWORD PTR [ebp-0x4]
  425ffb:	mov    ecx,DWORD PTR [ebp-0x1c]
  425ffe:	xor    eax,esi
  426000:	add    eax,edi
  426002:	cmp    DWORD PTR [ecx+ebx*4],eax
  426005:	jne    0x425f36
  42600b:	mov    edx,DWORD PTR [ebp-0x10]
  42600e:	mov    eax,DWORD PTR [ebp-0x18]
  426011:	mov    ecx,DWORD PTR [ebp-0x2c]
  426014:	sub    edx,0x3272f7
  42601a:	xor    edx,esi
  42601c:	jmp    0x425de6
  426021:	mov    ecx,DWORD PTR [ebp-0x4]
  426024:	xor    ecx,esi
  426026:	add    ecx,edi
  426028:	cmp    eax,ecx
  42602a:	mov    eax,DWORD PTR [ebp-0x4]
  42602d:	jne    0x426037
  42602f:	mov    eax,DWORD PTR [ebp-0x8]
  426032:	jmp    0x426037
  426034:	mov    eax,DWORD PTR [ebp-0x4]
  426037:	xor    eax,esi
  426039:	add    eax,edi
  42603b:	pop    edi
  42603c:	pop    esi
  42603d:	pop    ebx
  42603e:	leave  
  42603f:	ret    0xc
  426042:	push   ebp
  426043:	mov    ebp,esp
  426045:	sub    esp,0x28
  426048:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  42604f:	mov    DWORD PTR [ebp-0x28],0xf89c85b8
  426056:	mov    eax,DWORD PTR [ebp+0xc]
  426059:	mov    DWORD PTR [ebp+0xc],eax
  42605c:	push   esi
  42605d:	mov    eax,eax
  42605f:	mov    eax,DWORD PTR [ebp-0x4]
  426062:	mov    esi,DWORD PTR [ebp+0x8]
  426065:	mov    ecx,0x75108b1
  42606a:	xor    eax,ecx
  42606c:	mov    edx,0x3272f8
  426071:	add    eax,edx
  426073:	cmp    esi,eax
  426075:	je     0x42619c
  42607b:	mov    eax,DWORD PTR [ebp+0x8]
  42607e:	mov    esi,DWORD PTR [ebp+0x8]
  426081:	add    esi,DWORD PTR [eax+0x3c]
  426084:	push   edi
  426085:	mov    DWORD PTR [ebp+0xc],esi
  426088:	mov    DWORD PTR [ebp-0x1c],0xf89c85bc
  42608f:	mov    eax,DWORD PTR [ebp-0x1c]
  426092:	mov    esi,DWORD PTR [ebp-0x4]
  426095:	mov    edi,DWORD PTR [ebp+0xc]
  426098:	xor    esi,ecx
  42609a:	xor    eax,ecx
  42609c:	add    esi,edx
  42609e:	cmp    DWORD PTR [edi+eax*8+0x1939838],esi
  4260a5:	je     0x426196
  4260ab:	mov    esi,DWORD PTR [ebp+0xc]
  4260ae:	mov    eax,DWORD PTR [ebp+0x8]
  4260b1:	add    eax,DWORD PTR [esi+0xa0]
  4260b7:	mov    esi,DWORD PTR [ebp+0x8]
  4260ba:	mov    edi,DWORD PTR [ebp+0xc]
  4260bd:	sub    esi,DWORD PTR [edi+0x34]
  4260c0:	mov    edi,DWORD PTR [ebp-0x4]
  4260c3:	xor    edi,ecx
  4260c5:	add    edi,edx
  4260c7:	mov    DWORD PTR [ebp-0x24],esi
  4260ca:	cmp    esi,edi
  4260cc:	je     0x426196
  4260d2:	mov    esi,DWORD PTR [ebp-0x4]
  4260d5:	xor    esi,ecx
  4260d7:	add    esi,edx
  4260d9:	mov    DWORD PTR [ebp-0x8],esi
  4260dc:	push   ebx
  4260dd:	mov    DWORD PTR [ebp-0x10],0xf89c85ba
  4260e4:	jmp    0x426180
  4260e9:	mov    esi,DWORD PTR [ebp-0x4]
  4260ec:	xor    esi,ecx
  4260ee:	lea    edi,[ebx-0x8]
  4260f1:	add    esi,edx
  4260f3:	shr    edi,1
  4260f5:	cmp    esi,edi
  4260f7:	jae    0x426166
  4260f9:	sub    edi,esi
  4260fb:	lea    ebx,[eax+esi*2+0x8]
  4260ff:	mov    DWORD PTR [ebp-0x18],edi
  426102:	movzx  esi,WORD PTR [ebx]
  426105:	and    esi,0xfff
  42610b:	mov    DWORD PTR [ebp-0x14],esi
  42610e:	mov    edi,DWORD PTR [ebp-0x14]
  426111:	mov    esi,DWORD PTR [eax]
  426113:	sub    esi,edx
  426115:	add    edi,esi
  426117:	movzx  esi,WORD PTR [ebx]
  42611a:	shr    esi,0xc
  42611d:	xor    edi,ecx
  42611f:	mov    DWORD PTR [ebp-0x20],edi
  426122:	mov    DWORD PTR [ebp-0x14],esi
  426125:	mov    esi,DWORD PTR [ebp-0x20]
  426128:	mov    edi,DWORD PTR [ebp+0x8]
  42612b:	xor    esi,ecx
  42612d:	lea    esi,[esi+edi*1+0x3272f8]
  426134:	mov    DWORD PTR [ebp-0x20],esi
  426137:	mov    esi,DWORD PTR [ebp-0x10]
  42613a:	mov    edi,DWORD PTR [ebp-0x14]
  42613d:	xor    esi,ecx
  42613f:	add    esi,edx
  426141:	cmp    edi,esi
  426143:	jne    0x42615b
  426145:	mov    esi,DWORD PTR [ebp-0x10]
  426148:	mov    edi,DWORD PTR [ebp-0x14]
  42614b:	xor    esi,ecx
  42614d:	add    esi,edx
  42614f:	cmp    edi,esi
  426151:	jne    0x42615b
  426153:	mov    esi,DWORD PTR [ebp-0x20]
  426156:	mov    edi,DWORD PTR [ebp-0x24]
  426159:	add    DWORD PTR [esi],edi
  42615b:	add    ebx,0x2
  42615e:	dec    DWORD PTR [ebp-0x18]
  426161:	jne    0x426102
  426163:	mov    ebx,DWORD PTR [ebp-0xc]
  426166:	add    DWORD PTR [ebp-0x8],ebx
  426169:	mov    esi,DWORD PTR [ebp-0x1c]
  42616c:	mov    edi,DWORD PTR [ebp-0x8]
  42616f:	mov    ebx,DWORD PTR [ebp+0xc]
  426172:	xor    esi,ecx
  426174:	cmp    edi,DWORD PTR [ebx+esi*8+0x193983c]
  42617b:	jae    0x426195
  42617d:	add    eax,DWORD PTR [ebp-0xc]
  426180:	mov    esi,DWORD PTR [ebp-0x4]
  426183:	mov    ebx,DWORD PTR [eax+0x4]
  426186:	xor    esi,ecx
  426188:	add    esi,edx
  42618a:	mov    DWORD PTR [ebp-0xc],ebx
  42618d:	cmp    ebx,esi
  42618f:	jne    0x4260e9
  426195:	pop    ebx
  426196:	mov    eax,DWORD PTR [ebp-0x28]
  426199:	pop    edi
  42619a:	jmp    0x42619f
  42619c:	mov    eax,DWORD PTR [ebp-0x4]
  42619f:	xor    eax,ecx
  4261a1:	add    eax,edx
  4261a3:	pop    esi
  4261a4:	leave  
  4261a5:	ret    0x8
  4261a8:	push   ebp
  4261a9:	mov    ebp,esp
  4261ab:	sub    esp,0xd8
  4261b1:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  4261b8:	mov    DWORD PTR [ebp-0x24],0xf89c85b8
  4261bf:	mov    eax,DWORD PTR [ebp-0x4]
  4261c2:	push   ebx
  4261c3:	push   esi
  4261c4:	mov    esi,0x75108b1
  4261c9:	xor    eax,esi
  4261cb:	push   edi
  4261cc:	mov    edi,0x3272f8
  4261d1:	add    eax,edi
  4261d3:	mov    DWORD PTR [ebp-0x18],eax
  4261d6:	mov    eax,DWORD PTR [ebp-0x4]
  4261d9:	xor    eax,esi
  4261db:	add    eax,edi
  4261dd:	mov    DWORD PTR [ebp-0x8],eax
  4261e0:	mov    ebx,DWORD PTR [ebp+0x20]
  4261e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4261e6:	mov    ecx,DWORD PTR [ebp-0x1c]
  4261e9:	xor    eax,ecx
  4261eb:	mov    DWORD PTR [ebp-0x1c],eax
  4261ee:	add    DWORD PTR [ebp-0x1c],0xf89cb5b9
  4261f5:	mov    eax,DWORD PTR [ebp-0xc]
  4261f8:	mov    ecx,DWORD PTR [ebp-0xc]
  4261fb:	xor    eax,ecx
  4261fd:	mov    DWORD PTR [ebp-0xc],eax
  426200:	add    DWORD PTR [ebp-0xc],0xf89c85f9
  426207:	mov    eax,DWORD PTR [ebp-0x10]
  42620a:	mov    ecx,DWORD PTR [ebp-0x10]
  42620d:	xor    eax,ecx
  42620f:	mov    DWORD PTR [ebp-0x10],eax
  426212:	add    DWORD PTR [ebp-0x10],0xf89c85bd
  426219:	mov    eax,DWORD PTR [ebp-0x28]
  42621c:	mov    ecx,DWORD PTR [ebp-0x28]
  42621f:	xor    eax,ecx
  426221:	mov    DWORD PTR [ebp-0x28],eax
  426224:	add    DWORD PTR [ebp-0x28],0xf89f05b9
  42622b:	mov    DWORD PTR [ebp+0x20],0xf89cefe4
  426232:	mov    eax,DWORD PTR [ebp+0x8]
  426235:	test   eax,eax
  426237:	je     0x4266be
  42623d:	mov    eax,DWORD PTR [ebp+0xc]
  426240:	test   eax,eax
  426242:	je     0x4266be
  426248:	mov    eax,DWORD PTR [ebp+0x18]
  42624b:	test   eax,eax
  42624d:	je     0x4266be
  426253:	mov    eax,DWORD PTR [ebp+0x20]
  426256:	mov    ecx,DWORD PTR [ebp+0x8]
  426259:	xor    eax,0x8b1
  42625e:	add    eax,0x72f8
  426263:	cmp    WORD PTR [ecx],ax
  426266:	jne    0x4266be
  42626c:	mov    eax,DWORD PTR [ebp-0x4]
  42626f:	xor    eax,esi
  426271:	add    eax,edi
  426273:	mov    DWORD PTR [ebp-0x30],eax
  426276:	mov    eax,DWORD PTR [ebp-0x4]
  426279:	mov    ecx,DWORD PTR [ebp+0x8]
  42627c:	mov    eax,DWORD PTR [ebp+0x8]
  42627f:	add    eax,DWORD PTR [ecx+0x3c]
  426282:	mov    DWORD PTR [ebp+0xc],eax
  426285:	mov    eax,DWORD PTR [eax+0x50]
  426288:	test   eax,eax
  42628a:	je     0x4266be
  426290:	mov    DWORD PTR [ebp-0x2c],0xf88c85b9
  426297:	mov    eax,DWORD PTR [ebp-0x2c]
  42629a:	xor    eax,esi
  42629c:	add    eax,edi
  42629e:	mov    DWORD PTR [ebp-0x2c],eax
  4262a1:	mov    eax,DWORD PTR [ebp-0x4]
  4262a4:	mov    eax,DWORD PTR [ebx+0x190]
  4262aa:	mov    ecx,DWORD PTR [eax]
  4262ac:	mov    ecx,DWORD PTR [ecx+0x3c]
  4262af:	add    ecx,DWORD PTR [eax]
  4262b1:	mov    eax,DWORD PTR [ebp-0x4]
  4262b4:	mov    eax,DWORD PTR [ebx+0x18c]
  4262ba:	mov    edx,DWORD PTR [eax]
  4262bc:	mov    DWORD PTR [ebp-0x20],ecx
  4262bf:	mov    DWORD PTR [ebp+0x20],edx
  4262c2:	cmp    edx,edx
  4262c4:	jne    0x4262f8
  4262c6:	mov    eax,DWORD PTR [ebx+0x1e0]
  4262cc:	lea    edx,[ebp-0x18]
  4262cf:	push   edx
  4262d0:	mov    edx,DWORD PTR [ebp-0xc]
  4262d3:	xor    edx,esi
  4262d5:	add    edx,edi
  4262d7:	push   edx
  4262d8:	push   DWORD PTR [ecx+0x50]
  4262db:	push   DWORD PTR [ebp+0x20]
  4262de:	call   DWORD PTR [eax+0x1c]
  4262e1:	mov    eax,DWORD PTR [ebp-0x20]
  4262e4:	mov    ecx,DWORD PTR [eax+0x54]
  4262e7:	mov    eax,DWORD PTR [eax+0x50]
  4262ea:	sub    eax,ecx
  4262ec:	add    ecx,DWORD PTR [ebp+0x20]
  4262ef:	push   ecx
  4262f0:	call   0x426c5b
  4262f5:	mov    edx,DWORD PTR [ebp+0x20]
  4262f8:	mov    eax,DWORD PTR [ebx+0x194]
  4262fe:	mov    DWORD PTR [eax],edx
  426300:	mov    eax,DWORD PTR [ebp+0xc]
  426303:	push   DWORD PTR [eax+0x54]
  426306:	push   DWORD PTR [ebp+0x8]
  426309:	push   edx
  42630a:	call   0x426b51
  42630f:	mov    ecx,DWORD PTR [ebp+0x20]
  426312:	mov    eax,DWORD PTR [ecx+0x3c]
  426315:	add    eax,ecx
  426317:	movzx  ecx,WORD PTR [eax+0x14]
  42631b:	lea    ecx,[ecx+eax*1+0x18]
  42631f:	mov    DWORD PTR [ebp+0x18],ecx
  426322:	mov    ecx,DWORD PTR [ebp-0x4]
  426325:	movzx  edx,WORD PTR [eax+0x6]
  426329:	xor    ecx,esi
  42632b:	add    ecx,edi
  42632d:	mov    DWORD PTR [ebp+0xc],eax
  426330:	cmp    edx,ecx
  426332:	je     0x4263df
  426338:	mov    ecx,DWORD PTR [ebp-0x4]
  42633b:	xor    ecx,esi
  42633d:	add    ecx,edi
  42633f:	mov    DWORD PTR [ebp-0x8],ecx
  426342:	mov    ecx,DWORD PTR [ebp-0x24]
  426345:	movzx  edx,WORD PTR [eax+0x6]
  426349:	xor    ecx,esi
  42634b:	sub    edx,ecx
  42634d:	sub    edx,edi
  42634f:	cmp    DWORD PTR [ebp-0x8],edx
  426352:	ja     0x4263df
  426358:	mov    edx,DWORD PTR [ebp+0x18]
  42635b:	add    edx,0x8
  42635e:	mov    DWORD PTR [ebp+0x18],edx
  426361:	jmp    0x426366
  426363:	mov    edx,DWORD PTR [ebp+0x18]
  426366:	mov    eax,DWORD PTR [eax+0x38]
  426369:	lea    ecx,[eax-0x1]
  42636c:	mov    DWORD PTR [ebp-0x38],eax
  42636f:	mov    eax,DWORD PTR [edx]
  426371:	test   eax,ecx
  426373:	je     0x42637c
  426375:	not    ecx
  426377:	and    eax,ecx
  426379:	add    eax,DWORD PTR [ebp-0x38]
  42637c:	mov    ecx,DWORD PTR [edx+0x4]
  42637f:	add    ecx,DWORD PTR [ebp+0x20]
  426382:	push   ecx
  426383:	call   0x426c5b
  426388:	mov    edx,DWORD PTR [ebp-0x4]
  42638b:	mov    eax,DWORD PTR [ebp+0x18]
  42638e:	mov    ecx,DWORD PTR [eax+0x8]
  426391:	xor    edx,esi
  426393:	add    edx,edi
  426395:	cmp    ecx,edx
  426397:	je     0x4263b0
  426399:	push   ecx
  42639a:	mov    ecx,DWORD PTR [ebp+0x8]
  42639d:	add    ecx,DWORD PTR [eax+0xc]
  4263a0:	mov    eax,DWORD PTR [eax+0x4]
  4263a3:	add    eax,DWORD PTR [ebp+0x20]
  4263a6:	push   ecx
  4263a7:	push   eax
  4263a8:	call   0x426b51
  4263ad:	mov    eax,DWORD PTR [ebp+0x18]
  4263b0:	mov    ecx,DWORD PTR [ebp-0x24]
  4263b3:	mov    edx,DWORD PTR [ebp-0x8]
  4263b6:	add    eax,0x28
  4263b9:	xor    ecx,esi
  4263bb:	lea    ecx,[edx+ecx*1+0x3272f8]
  4263c2:	mov    edx,DWORD PTR [ebp+0xc]
  4263c5:	mov    DWORD PTR [ebp+0x18],eax
  4263c8:	mov    eax,DWORD PTR [ebp-0x24]
  4263cb:	movzx  edx,WORD PTR [edx+0x6]
  4263cf:	xor    eax,esi
  4263d1:	sub    edx,eax
  4263d3:	mov    eax,DWORD PTR [ebp+0xc]
  4263d6:	sub    edx,edi
  4263d8:	mov    DWORD PTR [ebp-0x8],ecx
  4263db:	cmp    ecx,edx
  4263dd:	jbe    0x426363
  4263df:	mov    edx,DWORD PTR [ebx+0x18c]
  4263e5:	mov    ecx,DWORD PTR [ebp+0x20]
  4263e8:	cmp    ecx,DWORD PTR [edx]
  4263ea:	jne    0x426413
  4263ec:	mov    eax,DWORD PTR [ebx+0x1e0]
  4263f2:	lea    edx,[ebp-0x18]
  4263f5:	push   edx
  4263f6:	mov    edx,DWORD PTR [ebp-0x10]
  4263f9:	xor    edx,esi
  4263fb:	add    edx,edi
  4263fd:	push   edx
  4263fe:	mov    edx,DWORD PTR [ebp-0x20]
  426401:	push   DWORD PTR [edx+0x54]
  426404:	push   ecx
  426405:	call   DWORD PTR [eax+0x1c]
  426408:	test   eax,eax
  42640a:	je     0x4266af
  426410:	mov    eax,DWORD PTR [ebp+0xc]
  426413:	mov    ecx,DWORD PTR [ebx+0x1c8]
  426419:	mov    ecx,DWORD PTR [ecx]
  42641b:	xor    ecx,esi
  42641d:	add    ecx,edi
  42641f:	je     0x4265da
  426425:	mov    eax,DWORD PTR [ebp-0x4]
  426428:	xor    eax,esi
  42642a:	add    eax,edi
  42642c:	and    DWORD PTR [ebp+0x8],0x0
  426430:	mov    DWORD PTR [ebp-0x14],eax
  426433:	mov    eax,0xf89c85dd
  426438:	lea    ecx,[eax-0x18]
  42643b:	mov    DWORD PTR [ebp-0x58],0xf89c85c7
  426442:	mov    DWORD PTR [ebp-0x54],0xf89c85cd
  426449:	mov    DWORD PTR [ebp-0x50],eax
  42644c:	mov    DWORD PTR [ebp-0x4c],ecx
  42644f:	mov    DWORD PTR [ebp-0x48],ecx
  426452:	mov    DWORD PTR [ebp-0x44],0xf89c85b9
  426459:	mov    edx,DWORD PTR [ebp+0x8]
  42645c:	mov    ecx,0x8b1
  426461:	xor    cx,WORD PTR [ebp+edx*4-0x58]
  426466:	mov    edx,0x72f8
  42646b:	add    cx,dx
  42646e:	mov    edx,DWORD PTR [ebp+0x8]
  426471:	inc    DWORD PTR [ebp+0x8]
  426474:	cmp    DWORD PTR [ebp+0x8],0x6
  426478:	mov    WORD PTR [ebp+edx*2-0xc0],cx
  426480:	jb     0x426459
  426482:	mov    ecx,0xf89c85cb
  426487:	mov    DWORD PTR [ebp-0xb0],eax
  42648d:	mov    DWORD PTR [ebp-0x9c],eax
  426493:	mov    DWORD PTR [ebp-0x74],eax
  426496:	mov    DWORD PTR [ebp-0x70],eax
  426499:	lea    eax,[ecx-0x1]
  42649c:	lea    edx,[ecx+0x34]
  42649f:	mov    DWORD PTR [ebp-0x64],eax
  4264a2:	mov    DWORD PTR [ebp-0x60],eax
  4264a5:	mov    DWORD PTR [ebp-0xb4],0xf89c85e5
  4264af:	mov    DWORD PTR [ebp-0xac],ecx
  4264b5:	mov    DWORD PTR [ebp-0xa8],edx
  4264bb:	mov    DWORD PTR [ebp-0xa4],0xf89c85c0
  4264c5:	mov    DWORD PTR [ebp-0xa0],0xf89c85c7
  4264cf:	mov    DWORD PTR [ebp-0x98],0xf89c85fc
  4264d9:	mov    DWORD PTR [ebp-0x94],0xf89c85c7
  4264e3:	mov    DWORD PTR [ebp-0x90],0xf89c85cd
  4264ed:	mov    DWORD PTR [ebp-0x8c],ecx
  4264f3:	mov    DWORD PTR [ebp-0x88],0xf89c8530
  4264fd:	mov    DWORD PTR [ebp-0x84],edx
  426503:	mov    DWORD PTR [ebp-0x80],0xf89c85c6
  42650a:	mov    DWORD PTR [ebp-0x7c],ecx
  42650d:	mov    DWORD PTR [ebp-0x78],0xf89c85f8
  426514:	mov    DWORD PTR [ebp-0x6c],ecx
  426517:	mov    DWORD PTR [ebp-0x68],0xf89c85dc
  42651e:	mov    DWORD PTR [ebp-0x5c],0xf89c85b9
  426525:	xor    eax,eax
  426527:	mov    cl,BYTE PTR [ebp+eax*4-0xb4]
  42652e:	xor    cl,0xb1
  426531:	sub    cl,0x8
  426534:	mov    BYTE PTR [ebp+eax*1-0xd8],cl
  42653b:	inc    eax
  42653c:	cmp    eax,0x17
  42653f:	jb     0x426527
  426541:	mov    eax,DWORD PTR [ebx+0x1e0]
  426547:	lea    ecx,[ebp-0xc0]
  42654d:	push   ecx
  42654e:	call   DWORD PTR [eax+0x4]
  426551:	mov    ecx,DWORD PTR [ebx+0x1e0]
  426557:	lea    edx,[ebp-0xd8]
  42655d:	push   edx
  42655e:	push   eax
  42655f:	call   DWORD PTR [ecx+0x8]
  426562:	mov    DWORD PTR [ebp-0x40],eax
  426565:	lea    eax,[ebp-0x14]
  426568:	push   eax
  426569:	mov    eax,DWORD PTR [ebx+0x18c]
  42656f:	push   DWORD PTR [eax]
  426571:	mov    eax,DWORD PTR [ebp-0x40]
  426574:	call   eax
  426576:	mov    eax,DWORD PTR [ebp-0x4]
  426579:	xor    eax,esi
  42657b:	add    eax,edi
  42657d:	mov    DWORD PTR [ebp-0x34],eax
  426580:	mov    ecx,DWORD PTR [ebp-0x4]
  426583:	mov    eax,DWORD PTR [ebp-0x14]
  426586:	xor    ecx,esi
  426588:	add    ecx,edi
  42658a:	cmp    eax,ecx
  42658c:	je     0x4265d7
  42658e:	mov    DWORD PTR [ebp-0x3c],eax
  426591:	jmp    0x4265a2
  426593:	mov    eax,DWORD PTR [eax]
  426595:	mov    ecx,DWORD PTR [ebp-0x3c]
  426598:	mov    DWORD PTR [ebp-0x14],eax
  42659b:	mov    eax,DWORD PTR [ebp-0x14]
  42659e:	cmp    eax,ecx
  4265a0:	je     0x4265af
  4265a2:	mov    edx,DWORD PTR [eax+0x18]
  4265a5:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265ab:	cmp    edx,DWORD PTR [ecx]
  4265ad:	jne    0x426593
  4265af:	mov    ecx,DWORD PTR [ebx+0x18c]
  4265b5:	mov    edx,DWORD PTR [eax+0x18]
  4265b8:	cmp    edx,DWORD PTR [ecx]
  4265ba:	jne    0x4265d7
  4265bc:	mov    ecx,DWORD PTR [ebx+0x190]
  4265c2:	mov    edx,DWORD PTR [ebp-0x20]
  4265c5:	mov    edx,DWORD PTR [edx+0x28]
  4265c8:	add    edx,DWORD PTR [ecx]
  4265ca:	mov    DWORD PTR [eax+0x1c],edx
  4265cd:	mov    eax,DWORD PTR [ebp-0x24]
  4265d0:	xor    eax,esi
  4265d2:	add    eax,edi
  4265d4:	mov    DWORD PTR [ebp-0x34],eax
  4265d7:	mov    eax,DWORD PTR [ebp+0xc]
  4265da:	push   ebx
  4265db:	push   eax
  4265dc:	push   DWORD PTR [ebp+0x20]
  4265df:	call   0x425d5f
  4265e4:	test   eax,eax
  4265e6:	je     0x4266af
  4265ec:	push   DWORD PTR [ebp+0xc]
  4265ef:	mov    ecx,ebx
  4265f1:	push   DWORD PTR [ebp+0x20]
  4265f4:	call   0x425cb8
  4265f9:	test   eax,eax
  4265fb:	je     0x4266af
  426601:	mov    eax,DWORD PTR [ebp+0xc]
  426604:	mov    edx,DWORD PTR [ebp+0x20]
  426607:	mov    ecx,ebx
  426609:	call   0x425b91
  42660e:	test   eax,eax
  426610:	je     0x4266af
  426616:	push   ebx
  426617:	push   DWORD PTR [ebp+0x20]
  42661a:	call   0x426042
  42661f:	test   eax,eax
  426621:	je     0x4266af
  426627:	mov    eax,DWORD PTR [ebx+0x18c]
  42662d:	mov    edx,DWORD PTR [ebp+0x20]
  426630:	cmp    edx,DWORD PTR [eax]
  426632:	jne    0x42664e
  426634:	mov    eax,DWORD PTR [ebx+0x1e0]
  42663a:	lea    ecx,[ebp-0x18]
  42663d:	push   ecx
  42663e:	push   DWORD PTR [ebp-0x18]
  426641:	mov    ecx,DWORD PTR [ebp-0x20]
  426644:	push   DWORD PTR [ecx+0x54]
  426647:	push   edx
  426648:	call   DWORD PTR [eax+0x1c]
  42664b:	mov    edx,DWORD PTR [ebp+0x20]
  42664e:	mov    eax,DWORD PTR [ebx+0x1c8]
  426654:	mov    eax,DWORD PTR [eax]
  426656:	xor    eax,esi
  426658:	add    eax,edi
  42665a:	je     0x426693
  42665c:	mov    ecx,DWORD PTR [ebp+0xc]
  42665f:	mov    eax,DWORD PTR [ecx+0x28]
  426662:	mov    DWORD PTR [ebp+0x8],0xf89ca5b9
  426669:	mov    esi,DWORD PTR [ebp+0x8]
  42666c:	push   DWORD PTR [ebp+0x14]
  42666f:	xor    esi,0x8b1
  426675:	push   DWORD PTR [ebp+0x10]
  426678:	add    esi,0x72f8
  42667e:	or     WORD PTR [ecx+0x16],si
  426682:	add    eax,edx
  426684:	push   edx
  426685:	call   eax
  426687:	mov    DWORD PTR [ebx+0x1d0],0xf89c85b8
  426691:	jmp    0x42669d
  426693:	mov    eax,DWORD PTR [ebp+0xc]
  426696:	mov    eax,DWORD PTR [eax+0x28]
  426699:	add    eax,edx
  42669b:	call   eax
  42669d:	mov    DWORD PTR [ebp-0x8],eax
  4266a0:	mov    eax,DWORD PTR [ebp-0x8]
  4266a3:	mov    ecx,DWORD PTR [ebp+0x1c]
  4266a6:	mov    DWORD PTR [ecx],eax
  4266a8:	mov    DWORD PTR [ebp-0x30],0x1
  4266af:	cmp    DWORD PTR [ebp-0x30],0x0
  4266b3:	jne    0x4266b9
  4266b5:	and    DWORD PTR [ebp+0x20],0x0
  4266b9:	mov    eax,DWORD PTR [ebp+0x20]
  4266bc:	jmp    0x4266c0
  4266be:	xor    eax,eax
  4266c0:	pop    edi
  4266c1:	pop    esi
  4266c2:	pop    ebx
  4266c3:	leave  
  4266c4:	ret    0x1c
  4266c7:	push   ebp
  4266c8:	mov    ebp,esp
  4266ca:	movzx  edx,WORD PTR [ecx+0x6]
  4266ce:	movzx  eax,WORD PTR [ecx+0x14]
  4266d2:	push   ebx
  4266d3:	push   edi
  4266d4:	xor    edi,edi
  4266d6:	lea    eax,[eax+ecx*1+0x18]
  4266da:	test   edx,edx
  4266dc:	je     0x4266fd
  4266de:	mov    ecx,DWORD PTR [eax+0xc]
  4266e1:	lea    ebx,[ecx+esi*1]
  4266e4:	cmp    DWORD PTR [ebp+0x8],ebx
  4266e7:	jb     0x4266f5
  4266e9:	mov    ebx,DWORD PTR [eax+0x8]
  4266ec:	add    ebx,ecx
  4266ee:	add    ebx,esi
  4266f0:	cmp    DWORD PTR [ebp+0x8],ebx
  4266f3:	jb     0x4266ff
  4266f5:	add    eax,0x28
  4266f8:	inc    edi
  4266f9:	cmp    edi,edx
  4266fb:	jb     0x4266de
  4266fd:	xor    eax,eax
  4266ff:	pop    edi
  426700:	pop    ebx
  426701:	pop    ebp
  426702:	ret    0x4
  426705:	push   ebp
  426706:	mov    ebp,esp
  426708:	sub    esp,0x34
  42670b:	mov    DWORD PTR [ebp-0xc],0xf89c85b9
  426712:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426719:	mov    DWORD PTR [ebp-0x1c],0xf89c85bb
  426720:	mov    DWORD PTR [ebp-0x8],0xf89c85d8
  426727:	mov    DWORD PTR [ebp-0x20],0xf89c85f8
  42672e:	mov    DWORD PTR [ebp-0x2c],0xf89c8533
  426735:	mov    DWORD PTR [ebp-0x2c],0xf89c85d3
  42673c:	mov    DWORD PTR [ebp-0x10],eax
  42673f:	mov    eax,DWORD PTR [ebp+0x8]
  426742:	mov    DWORD PTR [ebp-0x14],eax
  426745:	mov    eax,DWORD PTR [ebp-0xc]
  426748:	push   ebx
  426749:	mov    ecx,0x75108b1
  42674e:	xor    eax,ecx
  426750:	push   esi
  426751:	mov    esi,DWORD PTR [ebp-0x10]
  426754:	mov    edx,0x3272f8
  426759:	add    eax,edx
  42675b:	push   edi
  42675c:	cmp    esi,eax
  42675e:	je     0x42693d
  426764:	mov    eax,DWORD PTR [ebp-0xc]
  426767:	mov    esi,DWORD PTR [ebp-0x14]
  42676a:	xor    eax,ecx
  42676c:	add    eax,edx
  42676e:	cmp    esi,eax
  426770:	je     0x42693d
  426776:	mov    eax,DWORD PTR [ebp-0xc]
  426779:	xor    eax,ecx
  42677b:	add    eax,edx
  42677d:	mov    DWORD PTR [ebp-0x24],eax
  426780:	mov    eax,DWORD PTR [ebp-0xc]
  426783:	xor    eax,ecx
  426785:	add    eax,edx
  426787:	mov    DWORD PTR [ebp-0x28],eax
  42678a:	mov    edi,DWORD PTR [ebp-0x20]
  42678d:	mov    ebx,DWORD PTR [ebp-0x8]
  426790:	mov    esi,0x8b1
  426795:	xor    edi,esi
  426797:	mov    eax,0x72f8
  42679c:	xor    ebx,esi
  42679e:	add    edi,eax
  4267a0:	add    ebx,eax
  4267a2:	sub    ebx,edi
  4267a4:	mov    WORD PTR [ebp-0x8],bx
  4267a8:	jmp    0x42686d
  4267ad:	mov    edi,DWORD PTR [ebp-0xc]
  4267b0:	mov    bx,WORD PTR [ebp-0x4]
  4267b4:	xor    edi,esi
  4267b6:	add    edi,eax
  4267b8:	cmp    bx,di
  4267bb:	je     0x4268af
  4267c1:	mov    edi,DWORD PTR [ebp-0xc]
  4267c4:	mov    ebx,DWORD PTR [ebp+0xc]
  4267c7:	xor    edi,ecx
  4267c9:	add    edi,edx
  4267cb:	cmp    ebx,edi
  4267cd:	mov    di,WORD PTR [ebp-0x4]
  4267d1:	mov    bx,WORD PTR [ebp+0x8]
  4267d5:	je     0x426840
  4267d7:	cmp    bx,di
  4267da:	je     0x426849
  4267dc:	mov    edi,DWORD PTR [ebp-0x20]
  4267df:	mov    bx,WORD PTR [ebp+0x8]
  4267e3:	xor    edi,esi
  4267e5:	add    edi,eax
  4267e7:	cmp    bx,di
  4267ea:	jb     0x42680a
  4267ec:	mov    edi,DWORD PTR [ebp-0x2c]
  4267ef:	mov    bx,WORD PTR [ebp+0x8]
  4267f3:	xor    edi,esi
  4267f5:	add    edi,eax
  4267f7:	cmp    bx,di
  4267fa:	ja     0x42680a
  4267fc:	movzx  edi,WORD PTR [ebp+0x8]
  426800:	movzx  ebx,WORD PTR [ebp-0x8]
  426804:	add    edi,ebx
  426806:	mov    WORD PTR [ebp+0x8],di
  42680a:	mov    edi,DWORD PTR [ebp-0x20]
  42680d:	mov    bx,WORD PTR [ebp-0x4]
  426811:	xor    edi,esi
  426813:	add    edi,eax
  426815:	cmp    bx,di
  426818:	jb     0x426838
  42681a:	mov    edi,DWORD PTR [ebp-0x2c]
  42681d:	mov    bx,WORD PTR [ebp-0x4]
  426821:	xor    edi,esi
  426823:	add    edi,eax
  426825:	cmp    bx,di
  426828:	ja     0x426838
  42682a:	movzx  edi,WORD PTR [ebp-0x4]
  42682e:	movzx  ebx,WORD PTR [ebp-0x8]
  426832:	add    edi,ebx
  426834:	mov    WORD PTR [ebp-0x4],di
  426838:	mov    di,WORD PTR [ebp-0x4]
  42683c:	mov    bx,WORD PTR [ebp+0x8]
  426840:	cmp    bx,di
  426843:	jne    0x42693d
  426849:	mov    edi,DWORD PTR [ebp-0x1c]
  42684c:	mov    ebx,DWORD PTR [ebp-0x10]
  42684f:	xor    edi,ecx
  426851:	lea    edi,[edi+ebx*1+0x3272f8]
  426858:	mov    DWORD PTR [ebp-0x10],edi
  42685b:	mov    edi,DWORD PTR [ebp-0x1c]
  42685e:	mov    ebx,DWORD PTR [ebp-0x14]
  426861:	xor    edi,ecx
  426863:	lea    edi,[edi+ebx*1+0x3272f8]
  42686a:	mov    DWORD PTR [ebp-0x14],edi
  42686d:	mov    edi,DWORD PTR [ebp-0x24]
  426870:	mov    ebx,DWORD PTR [ebp-0x10]
  426873:	mov    di,WORD PTR [ebx+edi*2]
  426877:	mov    WORD PTR [ebp+0x8],di
  42687b:	mov    edi,DWORD PTR [ebp-0x28]
  42687e:	mov    ebx,DWORD PTR [ebp-0x14]
  426881:	mov    di,WORD PTR [ebx+edi*2]
  426885:	mov    WORD PTR [ebp-0x4],di
  426889:	mov    edi,DWORD PTR [ebp-0xc]
  42688c:	mov    bx,WORD PTR [ebp+0x8]
  426890:	xor    edi,esi
  426892:	add    edi,eax
  426894:	cmp    bx,di
  426897:	jne    0x4267ad
  42689d:	mov    eax,DWORD PTR [ebp-0x18]
  4268a0:	mov    esi,DWORD PTR [ebp-0xc]
  4268a3:	xor    eax,ecx
  4268a5:	add    eax,edx
  4268a7:	imul   eax,esi
  4268aa:	mov    DWORD PTR [ebp-0xc],eax
  4268ad:	jmp    0x4268c1
  4268af:	mov    eax,DWORD PTR [ebp-0xc]
  4268b2:	mov    esi,DWORD PTR [ebp-0x18]
  4268b5:	xor    eax,ecx
  4268b7:	lea    eax,[eax+esi*1+0x3272f8]
  4268be:	mov    DWORD PTR [ebp-0x18],eax
  4268c1:	mov    eax,DWORD PTR [ebp-0x24]
  4268c4:	sub    eax,edx
  4268c6:	xor    eax,ecx
  4268c8:	mov    DWORD PTR [ebp-0x30],eax
  4268cb:	mov    eax,DWORD PTR [ebp-0x28]
  4268ce:	sub    eax,edx
  4268d0:	xor    eax,ecx
  4268d2:	mov    DWORD PTR [ebp-0x34],eax
  4268d5:	mov    eax,DWORD PTR [ebp-0x34]
  4268d8:	mov    esi,DWORD PTR [ebp-0x1c]
  4268db:	xor    esi,ecx
  4268dd:	add    esi,edx
  4268df:	xor    eax,ecx
  4268e1:	add    eax,0x3272f8
  4268e6:	imul   esi,eax
  4268e9:	mov    eax,DWORD PTR [ebp-0x14]
  4268ec:	movzx  eax,WORD PTR [esi+eax*1]
  4268f0:	mov    esi,DWORD PTR [ebp-0x30]
  4268f3:	mov    edi,DWORD PTR [ebp-0x1c]
  4268f6:	xor    esi,ecx
  4268f8:	add    esi,edx
  4268fa:	xor    edi,ecx
  4268fc:	add    edi,edx
  4268fe:	imul   edi,esi
  426901:	mov    esi,DWORD PTR [ebp-0x10]
  426904:	movzx  esi,WORD PTR [edi+esi*1]
  426908:	sub    eax,edx
  42690a:	sub    esi,edx
  42690c:	xor    eax,ecx
  42690e:	xor    esi,ecx
  426910:	cmp    esi,eax
  426912:	jne    0x42693d
  426914:	mov    eax,DWORD PTR [ebp-0x30]
  426917:	mov    esi,DWORD PTR [ebp-0x1c]
  42691a:	xor    eax,ecx
  42691c:	add    eax,0x3272f8
  426921:	xor    esi,ecx
  426923:	add    esi,edx
  426925:	imul   esi,eax
  426928:	mov    eax,DWORD PTR [ebp-0x10]
  42692b:	movzx  eax,WORD PTR [esi+eax*1]
  42692f:	mov    esi,DWORD PTR [ebp-0xc]
  426932:	sub    eax,edx
  426934:	xor    eax,ecx
  426936:	cmp    eax,esi
  426938:	mov    eax,DWORD PTR [ebp-0xc]
  42693b:	je     0x426940
  42693d:	mov    eax,DWORD PTR [ebp-0x18]
  426940:	pop    edi
  426941:	xor    eax,ecx
  426943:	pop    esi
  426944:	add    eax,edx
  426946:	pop    ebx
  426947:	leave  
  426948:	ret    0x8
  42694b:	push   ebp
  42694c:	mov    ebp,esp
  42694e:	push   ecx
  42694f:	mov    cx,WORD PTR [eax]
  426952:	push   esi
  426953:	mov    esi,0x3b5e
  426958:	sub    cx,si
  42695b:	mov    esi,0x8a9c
  426960:	xor    cx,si
  426963:	mov    esi,0x4e3e
  426968:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  42696f:	mov    edx,0xf89c85b9
  426974:	cmp    cx,si
  426977:	je     0x4269d6
  426979:	push   ebx
  42697a:	push   edi
  42697b:	movzx  ecx,cx
  42697e:	mov    edi,0xffcd8d08
  426983:	mov    esi,0x75108b1
  426988:	mov    ebx,0x4e62
  42698d:	cmp    cx,bx
  426990:	jne    0x426995
  426992:	mov    DWORD PTR [ebp-0x4],edx
  426995:	lea    edx,[edi+0x1]
  426998:	xor    edx,esi
  42699a:	mov    edi,edx
  42699c:	xor    edi,esi
  42699e:	mov    cx,WORD PTR [eax+edi*2+0x64e5f0]
  4269a6:	mov    ebx,0x3b5e
  4269ab:	sub    cx,bx
  4269ae:	mov    ebx,0x8a9c
  4269b3:	xor    cx,bx
  4269b6:	mov    ebx,0x4e3e
  4269bb:	cmp    cx,bx
  4269be:	jne    0x426988
  4269c0:	mov    ecx,DWORD PTR [ebp-0x4]
  4269c3:	pop    edi
  4269c4:	pop    ebx
  4269c5:	cmp    ecx,0xf89c85b6
  4269cb:	je     0x4269d6
  4269cd:	xor    ecx,esi
  4269cf:	lea    eax,[eax+ecx*2+0x64e5f2]
  4269d6:	pop    esi
  4269d7:	leave  
  4269d8:	ret    
  4269d9:	push   ebp
  4269da:	mov    ebp,esp
  4269dc:	push   ecx
  4269dd:	push   esi
  4269de:	push   edi
  4269df:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  4269e6:	mov    esi,0xf89c85b9
  4269eb:	call   0x42694b
  4269f0:	mov    edi,eax
  4269f2:	mov    al,BYTE PTR [edi]
  4269f4:	sub    al,0x5
  4269f6:	xor    al,0x80
  4269f8:	cmp    al,0x7b
  4269fa:	je     0x426a5d
  4269fc:	mov    eax,edi
  4269fe:	mov    edx,0xffcd8d08
  426a03:	mov    ecx,0x75108b1
  426a08:	push   ebx
  426a09:	mov    ax,WORD PTR [eax]
  426a0c:	mov    ebx,0x3b5e
  426a11:	sub    ax,bx
  426a14:	mov    ebx,0x8a9c
  426a19:	xor    ax,bx
  426a1c:	mov    ebx,0x4e4c
  426a21:	cmp    ax,bx
  426a24:	jne    0x426a29
  426a26:	mov    DWORD PTR [ebp-0x4],esi
  426a29:	lea    esi,[edx+0x1]
  426a2c:	xor    esi,ecx
  426a2e:	mov    edx,esi
  426a30:	xor    edx,ecx
  426a32:	lea    eax,[edi+edx*2+0x64e5f0]
  426a39:	mov    bl,BYTE PTR [eax]
  426a3b:	sub    bl,0x5
  426a3e:	xor    bl,0x80
  426a41:	cmp    bl,0x7b
  426a44:	jne    0x426a09
  426a46:	mov    eax,DWORD PTR [ebp-0x4]
  426a49:	pop    ebx
  426a4a:	cmp    eax,0xf89c85b6
  426a4f:	je     0x426a5d
  426a51:	xor    eax,ecx
  426a53:	xor    ecx,ecx
  426a55:	mov    WORD PTR [edi+eax*2+0x64e5f0],cx
  426a5d:	mov    eax,edi
  426a5f:	pop    edi
  426a60:	pop    esi
  426a61:	leave  
  426a62:	ret    
  426a63:	push   ebp
  426a64:	mov    ebp,esp
  426a66:	push   ecx
  426a67:	push   esi
  426a68:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  426a6f:	mov    esi,0xf89c85b9
  426a74:	call   0x42694b
  426a79:	mov    cx,WORD PTR [eax]
  426a7c:	mov    edx,0x3b5e
  426a81:	sub    cx,dx
  426a84:	mov    edx,0x8a9c
  426a89:	xor    cx,dx
  426a8c:	mov    edx,0x4e3e
  426a91:	cmp    cx,dx
  426a94:	je     0x426aed
  426a96:	push   ebx
  426a97:	push   edi
  426a98:	movzx  ecx,cx
  426a9b:	mov    edx,0xffcd8d08
  426aa0:	mov    edi,0x75108b1
  426aa5:	mov    ebx,0x4e4c
  426aaa:	cmp    cx,bx
  426aad:	jne    0x426ab2
  426aaf:	mov    DWORD PTR [ebp-0x4],esi
  426ab2:	lea    esi,[edx+0x1]
  426ab5:	xor    esi,edi
  426ab7:	mov    edx,esi
  426ab9:	xor    edx,edi
  426abb:	mov    cx,WORD PTR [eax+edx*2+0x64e5f0]
  426ac3:	mov    ebx,0x3b5e
  426ac8:	sub    cx,bx
  426acb:	mov    ebx,0x8a9c
  426ad0:	xor    cx,bx
  426ad3:	mov    ebx,0x4e3e
  426ad8:	cmp    cx,bx
  426adb:	jne    0x426aa5
  426add:	cmp    DWORD PTR [ebp-0x4],0xf89c85b6
  426ae4:	pop    edi
  426ae5:	pop    ebx
  426ae6:	je     0x426aed
  426ae8:	xor    eax,eax
  426aea:	inc    eax
  426aeb:	jmp    0x426aef
  426aed:	xor    eax,eax
  426aef:	pop    esi
  426af0:	leave  
  426af1:	ret    
  426af2:	push   ebp
  426af3:	mov    ebp,esp
  426af5:	push   ecx
  426af6:	mov    eax,DWORD PTR [ebp+0x8]
  426af9:	movzx  ecx,WORD PTR [eax]
  426afc:	push   esi
  426afd:	lea    eax,[ecx-0x3b5e]
  426b03:	mov    esi,0x8a9c
  426b08:	push   edi
  426b09:	xor    eax,esi
  426b0b:	mov    edi,0x4e3e
  426b10:	mov    DWORD PTR [ebp-0x4],edx
  426b13:	cmp    ax,di
  426b16:	je     0x426b43
  426b18:	mov    eax,DWORD PTR [ebp+0x8]
  426b1b:	sub    eax,edx
  426b1d:	mov    DWORD PTR [ebp+0x8],eax
  426b20:	jmp    0x426b25
  426b22:	mov    eax,DWORD PTR [ebp+0x8]
  426b25:	mov    WORD PTR [edx],cx
  426b28:	add    edx,0x2
  426b2b:	movzx  edi,WORD PTR [eax+edx*1]
  426b2f:	mov    ecx,edi
  426b31:	add    edi,0xffffc4a2
  426b37:	xor    edi,esi
  426b39:	mov    eax,0x4e3e
  426b3e:	cmp    di,ax
  426b41:	jne    0x426b22
  426b43:	xor    eax,eax
  426b45:	pop    edi
  426b46:	mov    WORD PTR [edx],ax
  426b49:	mov    eax,DWORD PTR [ebp-0x4]
  426b4c:	pop    esi
  426b4d:	leave  
  426b4e:	ret    0x4
  426b51:	push   ebp
  426b52:	mov    ebp,esp
  426b54:	sub    esp,0x18
  426b57:	mov    DWORD PTR [ebp-0x8],0xf89c85b9
  426b5e:	mov    DWORD PTR [ebp-0x18],0xf89c85b8
  426b65:	mov    ecx,DWORD PTR [ebp-0x8]
  426b68:	push   esi
  426b69:	mov    eax,0x75108b1
  426b6e:	xor    ecx,eax
  426b70:	mov    esi,0x3272f8
  426b75:	add    ecx,esi
  426b77:	mov    DWORD PTR [ebp-0x4],ecx
  426b7a:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  426b81:	mov    DWORD PTR [ebp-0x10],0xf89c85bd
  426b88:	push   edi
  426b89:	mov    DWORD PTR [ebp-0x14],0xf89c85bb
  426b90:	jmp    0x426c31
  426b95:	mov    ecx,DWORD PTR [ebp-0x4]
  426b98:	mov    edx,DWORD PTR [ebp+0x10]
  426b9b:	sub    edx,ecx
  426b9d:	mov    ecx,DWORD PTR [ebp-0xc]
  426ba0:	xor    ecx,eax
  426ba2:	add    ecx,esi
  426ba4:	cmp    edx,ecx
  426ba6:	jbe    0x426bc3
  426ba8:	mov    edx,DWORD PTR [ebp-0x4]
  426bab:	add    edx,DWORD PTR [ebp+0x8]
  426bae:	mov    ecx,DWORD PTR [ebp-0x4]
  426bb1:	add    ecx,DWORD PTR [ebp+0xc]
  426bb4:	mov    edi,DWORD PTR [ecx]
  426bb6:	mov    DWORD PTR [edx],edi
  426bb8:	mov    ecx,DWORD PTR [ecx+0x4]
  426bbb:	mov    DWORD PTR [edx+0x4],ecx
  426bbe:	mov    ecx,DWORD PTR [ebp-0xc]
  426bc1:	jmp    0x426c10
  426bc3:	mov    ecx,DWORD PTR [ebp-0x4]
  426bc6:	mov    edx,DWORD PTR [ebp+0x10]
  426bc9:	sub    edx,ecx
  426bcb:	mov    ecx,DWORD PTR [ebp-0x10]
  426bce:	xor    ecx,eax
  426bd0:	add    ecx,esi
  426bd2:	cmp    edx,ecx
  426bd4:	mov    ecx,DWORD PTR [ebp-0x4]
  426bd7:	jbe    0x426beb
  426bd9:	add    ecx,DWORD PTR [ebp+0x8]
  426bdc:	mov    edx,DWORD PTR [ebp-0x4]
  426bdf:	add    edx,DWORD PTR [ebp+0xc]
  426be2:	mov    edx,DWORD PTR [edx]
  426be4:	mov    DWORD PTR [ecx],edx
  426be6:	mov    ecx,DWORD PTR [ebp-0x10]
  426be9:	jmp    0x426c10
  426beb:	mov    edx,DWORD PTR [ebp+0x10]
  426bee:	sub    edx,ecx
  426bf0:	mov    ecx,DWORD PTR [ebp-0x14]
  426bf3:	xor    ecx,eax
  426bf5:	add    ecx,esi
  426bf7:	cmp    edx,ecx
  426bf9:	mov    ecx,DWORD PTR [ebp-0x4]
  426bfc:	jbe    0x426c21
  426bfe:	add    ecx,DWORD PTR [ebp+0x8]
  426c01:	mov    edx,DWORD PTR [ebp-0x4]
  426c04:	add    edx,DWORD PTR [ebp+0xc]
  426c07:	mov    dx,WORD PTR [edx]
  426c0a:	mov    WORD PTR [ecx],dx
  426c0d:	mov    ecx,DWORD PTR [ebp-0x14]
  426c10:	mov    edx,DWORD PTR [ebp-0x4]
  426c13:	xor    ecx,eax
  426c15:	lea    ecx,[ecx+edx*1+0x3272f8]
  426c1c:	mov    DWORD PTR [ebp-0x4],ecx
  426c1f:	jmp    0x426c31
  426c21:	add    ecx,DWORD PTR [ebp+0x8]
  426c24:	mov    edx,DWORD PTR [ebp-0x4]
  426c27:	add    edx,DWORD PTR [ebp+0xc]
  426c2a:	mov    dl,BYTE PTR [edx]
  426c2c:	mov    BYTE PTR [ecx],dl
  426c2e:	inc    DWORD PTR [ebp-0x4]
  426c31:	mov    ecx,DWORD PTR [ebp-0x18]
  426c34:	mov    edx,DWORD PTR [ebp+0x10]
  426c37:	xor    ecx,eax
  426c39:	add    ecx,esi
  426c3b:	imul   ecx,edx
  426c3e:	mov    edx,DWORD PTR [ebp-0x8]
  426c41:	mov    edi,DWORD PTR [ebp-0x4]
  426c44:	xor    edx,eax
  426c46:	lea    edx,[edx+edi*1+0x3272f8]
  426c4d:	cmp    edx,ecx
  426c4f:	jb     0x426b95
  426c55:	pop    edi
  426c56:	pop    esi
  426c57:	leave  
  426c58:	ret    0xc
  426c5b:	push   ebp
  426c5c:	mov    ebp,esp
  426c5e:	sub    esp,0xc
  426c61:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426c68:	push   esi
  426c69:	mov    esi,eax
  426c6b:	mov    DWORD PTR [ebp-0x8],0xf89c85b8
  426c72:	mov    edx,DWORD PTR [ebp-0x4]
  426c75:	mov    eax,0x75108b1
  426c7a:	xor    edx,eax
  426c7c:	mov    ecx,0x3272f8
  426c81:	add    edx,ecx
  426c83:	cmp    esi,edx
  426c85:	je     0x426cc7
  426c87:	push   ebx
  426c88:	push   edi
  426c89:	mov    edx,DWORD PTR [ebp-0x8]
  426c8c:	mov    ebx,DWORD PTR [ebp+0x8]
  426c8f:	xor    edx,eax
  426c91:	mov    edi,0xffcd8d08
  426c96:	sub    edi,edx
  426c98:	add    esi,edi
  426c9a:	lea    edx,[esi-0x3272f8]
  426ca0:	xor    edx,eax
  426ca2:	mov    DWORD PTR [ebp-0xc],edx
  426ca5:	mov    edx,DWORD PTR [ebp-0x4]
  426ca8:	mov    edi,DWORD PTR [ebp-0xc]
  426cab:	xor    dl,0xb1
  426cae:	sub    dl,0x8
  426cb1:	xor    edi,eax
  426cb3:	mov    BYTE PTR [edi+ebx*1+0x3272f8],dl
  426cba:	mov    edx,DWORD PTR [ebp-0x4]
  426cbd:	xor    edx,eax
  426cbf:	add    edx,ecx
  426cc1:	cmp    esi,edx
  426cc3:	jne    0x426c89
  426cc5:	pop    edi
  426cc6:	pop    ebx
  426cc7:	pop    esi
  426cc8:	leave  
  426cc9:	ret    0x4
  426ccc:	push   ebp
  426ccd:	mov    ebp,esp
  426ccf:	sub    esp,0x21c
  426cd5:	mov    DWORD PTR [ebp-0x4],0xf89c85b9
  426cdc:	mov    DWORD PTR [ebp-0x14],0xf89c85b8
  426ce3:	mov    eax,DWORD PTR [ebp+0x10]
  426ce6:	mov    eax,DWORD PTR [ebp-0x4]
  426ce9:	mov    ecx,DWORD PTR [ebp+0x8]
  426cec:	push   esi
  426ced:	push   edi
  426cee:	mov    edi,0x75108b1
  426cf3:	xor    eax,edi
  426cf5:	mov    esi,0x3272f8
  426cfa:	add    eax,esi
  426cfc:	cmp    eax,ecx
  426cfe:	mov    eax,DWORD PTR [ebp-0x4]
  426d01:	jne    0x426d0c
  426d03:	xor    eax,edi
  426d05:	add    eax,esi
  426d07:	jmp    0x426db8
  426d0c:	mov    ecx,DWORD PTR [ebp+0xc]
  426d0f:	xor    eax,edi
  426d11:	add    eax,esi
  426d13:	cmp    eax,ecx
  426d15:	jne    0x426d1c
  426d17:	mov    eax,DWORD PTR [ebp-0x4]
  426d1a:	jmp    0x426d03
  426d1c:	lea    eax,[ebp-0x21c]
  426d22:	mov    DWORD PTR [ebp-0x8],eax
  426d25:	mov    eax,DWORD PTR [ebp+0xc]
  426d28:	mov    DWORD PTR [ebp-0x10],eax
  426d2b:	mov    eax,DWORD PTR [ebp-0x4]
  426d2e:	xor    eax,edi
  426d30:	add    eax,esi
  426d32:	mov    DWORD PTR [ebp+0x10],eax
  426d35:	mov    eax,DWORD PTR [ebp+0xc]
  426d38:	push   ebx
  426d39:	call   0x426a63
  426d3e:	mov    ebx,eax
  426d40:	mov    eax,DWORD PTR [ebp+0x8]
  426d43:	mov    eax,DWORD PTR [eax+0x14]
  426d46:	jmp    0x426da0
  426d48:	mov    eax,DWORD PTR [ebp+0xc]
  426d4b:	sub    eax,0x8
  426d4e:	mov    DWORD PTR [ebp-0xc],eax
  426d51:	mov    eax,DWORD PTR [ebp-0xc]
  426d54:	mov    eax,DWORD PTR [eax+0x28]
  426d57:	call   0x42694b
  426d5c:	mov    DWORD PTR [ebp+0x10],eax
  426d5f:	push   DWORD PTR [ebp+0x10]
  426d62:	mov    edx,DWORD PTR [ebp-0x8]
  426d65:	call   0x426af2
  426d6a:	mov    eax,DWORD PTR [ebp-0x4]
  426d6d:	xor    eax,edi
  426d6f:	add    eax,esi
  426d71:	cmp    eax,ebx
  426d73:	jne    0x426d7d
  426d75:	mov    eax,DWORD PTR [ebp-0x8]
  426d78:	call   0x4269d9
  426d7d:	mov    eax,DWORD PTR [ebp-0x14]
  426d80:	xor    eax,edi
  426d82:	add    eax,esi
  426d84:	push   eax
  426d85:	push   DWORD PTR [ebp-0x10]
  426d88:	mov    eax,DWORD PTR [ebp-0x8]
  426d8b:	call   0x426705
  426d90:	mov    ecx,DWORD PTR [ebp-0x4]
  426d93:	xor    ecx,edi
  426d95:	add    ecx,esi
  426d97:	cmp    eax,ecx
  426d99:	je     0x426dbe
  426d9b:	mov    eax,DWORD PTR [ebp+0xc]
  426d9e:	mov    eax,DWORD PTR [eax]
  426da0:	mov    DWORD PTR [ebp+0xc],eax
  426da3:	mov    eax,DWORD PTR [ebp+0x8]
  426da6:	mov    ecx,DWORD PTR [ebp+0xc]
  426da9:	add    eax,0x14
  426dac:	cmp    ecx,eax
  426dae:	jne    0x426d48
  426db0:	mov    eax,DWORD PTR [ebp-0x4]
  426db3:	xor    eax,edi
  426db5:	add    eax,esi
  426db7:	pop    ebx
  426db8:	pop    edi
  426db9:	pop    esi
  426dba:	leave  
  426dbb:	ret    0xc
  426dbe:	mov    eax,DWORD PTR [ebp-0xc]
  426dc1:	mov    eax,DWORD PTR [eax+0x18]
  426dc4:	jmp    0x426db7
  426dc6:	push   ebp
  426dc7:	mov    ebp,esp
  426dc9:	mov    eax,DWORD PTR [ebp+0xc]
  426dcc:	sub    esp,0x10
  426dcf:	cmp    DWORD PTR [ebp+0x8],0x0
  426dd3:	push   ebx
  426dd4:	push   esi
  426dd5:	push   edi
  426dd6:	je     0x426e8b
  426ddc:	test   eax,eax
  426dde:	je     0x426e8b
  426de4:	movzx  eax,WORD PTR [eax+0x20]
  426de8:	mov    ecx,eax
  426dea:	mov    DWORD PTR [ebp-0x10],eax
  426ded:	xor    edx,edx
  426def:	and    DWORD PTR [ebp-0x8],edx
  426df2:	mov    eax,0x8a9c
  426df7:	xor    ecx,eax
  426df9:	add    ecx,0x3b5e
  426dff:	mov    DWORD PTR [ebp-0xc],ecx
  426e02:	and    DWORD PTR [ebp-0x4],0x0
  426e06:	xor    ecx,ecx
  426e08:	push   0x7d
  426e0a:	pop    edi
  426e0b:	cmp    cx,WORD PTR [ebp-0xc]
  426e0f:	jae    0x426e75
  426e11:	lea    esi,[edx-0x3b5e]
  426e17:	xor    esi,eax
  426e19:	movzx  ecx,WORD PTR [ebp-0x4]
  426e1d:	mov    ebx,DWORD PTR [ebp+0xc]
  426e20:	lea    ecx,[ebx+ecx*4]
  426e23:	cmp    WORD PTR [ecx+0x2],si
  426e27:	jne    0x426e60
  426e29:	movzx  ecx,WORD PTR [ecx]
  426e2c:	mov    edi,0x4e3e
  426e31:	cmp    cx,di
  426e34:	jne    0x426e42
  426e36:	mov    ebx,DWORD PTR [ebp+0x8]
  426e39:	movzx  edi,dx
  426e3c:	cmp    BYTE PTR [edi+ebx*1],0x0
  426e40:	je     0x426e6f
  426e42:	mov    ebx,DWORD PTR [ebp+0x8]
  426e45:	movzx  edi,dx
  426e48:	movsx  di,BYTE PTR [edi+ebx*1]
  426e4d:	mov    ebx,0x3b5e
  426e52:	sub    di,bx
  426e55:	xor    di,ax
  426e58:	cmp    cx,di
  426e5b:	je     0x426e6f
  426e5d:	push   0x7b
  426e5f:	pop    edi
  426e60:	inc    DWORD PTR [ebp-0x4]
  426e63:	mov    cx,WORD PTR [ebp-0xc]
  426e67:	cmp    WORD PTR [ebp-0x4],cx
  426e6b:	jb     0x426e19
  426e6d:	jmp    0x426e75
  426e6f:	inc    DWORD PTR [ebp-0x8]
  426e72:	push   0x7c
  426e74:	pop    edi
  426e75:	mov    esi,DWORD PTR [ebp+0x8]
  426e78:	movzx  ecx,dx
  426e7b:	cmp    BYTE PTR [ecx+esi*1],0x0
  426e7f:	je     0x426e94
  426e81:	inc    edx
  426e82:	cmp    edi,0x7b
  426e85:	jne    0x426e02
  426e8b:	xor    eax,eax
  426e8d:	pop    edi
  426e8e:	pop    esi
  426e8f:	pop    ebx
  426e90:	leave  
  426e91:	ret    0x8
  426e94:	mov    ecx,DWORD PTR [ebp-0x8]
  426e97:	add    ecx,0xffffc4a2
  426e9d:	xor    cx,ax
  426ea0:	xor    eax,eax
  426ea2:	cmp    cx,WORD PTR [ebp-0x10]
  426ea6:	sete   al
  426ea9:	jmp    0x426e8d
  426eab:	push   ebp
  426eac:	mov    ebp,esp
  426eae:	sub    esp,0x50
  426eb1:	push   edi
  426eb2:	mov    edi,eax
  426eb4:	mov    eax,DWORD PTR [edi+0x1a8]
  426eba:	cmp    DWORD PTR [eax],0x0
  426ebd:	jne    0x426ec6
  426ebf:	xor    eax,eax
  426ec1:	jmp    0x426ff7
  426ec6:	push   DWORD PTR [ebp+0x8]
  426ec9:	push   0x2c
  426ecb:	pop    eax
  426ecc:	call   0x426c5b
  426ed1:	mov    edx,DWORD PTR [edi+0x1ac]
  426ed7:	lea    eax,[edi+0x22]
  426eda:	mov    DWORD PTR [ebp-0x4c],eax
  426edd:	lea    eax,[edi+0x44]
  426ee0:	mov    DWORD PTR [ebp-0x48],eax
  426ee3:	lea    eax,[edi+0x66]
  426ee6:	mov    DWORD PTR [ebp-0x44],eax
  426ee9:	lea    eax,[edi+0x88]
  426eef:	mov    DWORD PTR [ebp-0x40],eax
  426ef2:	lea    eax,[edi+0xaa]
  426ef8:	mov    DWORD PTR [ebp-0x3c],eax
  426efb:	lea    eax,[edi+0xcc]
  426f01:	mov    DWORD PTR [ebp-0x38],eax
  426f04:	lea    eax,[edi+0xee]
  426f0a:	mov    DWORD PTR [ebp-0x34],eax
  426f0d:	lea    eax,[edi+0x110]
  426f13:	mov    DWORD PTR [ebp-0x30],eax
  426f16:	lea    eax,[edi+0x132]
  426f1c:	mov    DWORD PTR [ebp-0x2c],eax
  426f1f:	lea    eax,[edi+0x154]
  426f25:	push   edi
  426f26:	mov    DWORD PTR [ebp-0x50],edi
  426f29:	mov    DWORD PTR [ebp-0x28],eax
  426f2c:	call   0x42702b
  426f31:	push   eax
  426f32:	mov    eax,DWORD PTR [edi+0x1a8]
  426f38:	push   DWORD PTR [eax]
  426f3a:	call   0x426ccc
  426f3f:	mov    DWORD PTR [ebp-0x10],eax
  426f42:	test   eax,eax
  426f44:	je     0x426ff7
  426f4a:	mov    ecx,DWORD PTR [eax+0x3c]
  426f4d:	push   ebx
  426f4e:	push   esi
  426f4f:	mov    esi,DWORD PTR [ecx+eax*1+0x78]
  426f53:	add    esi,eax
  426f55:	mov    edi,DWORD PTR [esi+0x24]
  426f58:	mov    ecx,DWORD PTR [esi+0x1c]
  426f5b:	mov    edx,DWORD PTR [esi+0x20]
  426f5e:	mov    ebx,DWORD PTR [esi+0x18]
  426f61:	add    edi,eax
  426f63:	mov    DWORD PTR [ebp-0x20],edi
  426f66:	mov    edi,DWORD PTR [esi+0x14]
  426f69:	add    ecx,eax
  426f6b:	add    edx,eax
  426f6d:	mov    DWORD PTR [ebp-0xc],ecx
  426f70:	mov    DWORD PTR [ebp-0x1c],edx
  426f73:	mov    DWORD PTR [ebp-0x8],edi
  426f76:	cmp    edi,ebx
  426f78:	ja     0x426f7d
  426f7a:	mov    DWORD PTR [ebp-0x8],ebx
  426f7d:	xor    ebx,ebx
  426f7f:	mov    DWORD PTR [ebp-0x18],ebx
  426f82:	cmp    DWORD PTR [ebp-0x8],ebx
  426f85:	jbe    0x426ff5
  426f87:	jmp    0x426f8c
  426f89:	mov    edx,DWORD PTR [ebp-0x1c]
  426f8c:	mov    edi,DWORD PTR [ebp-0x20]
  426f8f:	movzx  edi,WORD PTR [edi+ebx*2]
  426f93:	cmp    ebx,DWORD PTR [esi+0x18]
  426f96:	jae    0x426ff5
  426f98:	cmp    edi,DWORD PTR [esi+0x14]
  426f9b:	jae    0x426ff5
  426f9d:	mov    ebx,DWORD PTR [edx+ebx*4]
  426fa0:	mov    edx,DWORD PTR [ebp+0x8]
  426fa3:	mov    edi,DWORD PTR [ecx+edi*4]
  426fa6:	mov    DWORD PTR [ebp-0x4],edx
  426fa9:	lea    edx,[ebp-0x50]
  426fac:	add    ebx,eax
  426fae:	add    edi,eax
  426fb0:	sub    edx,DWORD PTR [ebp+0x8]
  426fb3:	mov    DWORD PTR [ebp-0x14],0xb
  426fba:	mov    DWORD PTR [ebp-0x24],edx
  426fbd:	mov    edx,DWORD PTR [ebp-0x4]
  426fc0:	cmp    DWORD PTR [edx],0x0
  426fc3:	jne    0x426fe0
  426fc5:	mov    eax,DWORD PTR [ebp-0x24]
  426fc8:	push   DWORD PTR [eax+edx*1]
  426fcb:	push   ebx
  426fcc:	call   0x426dc6
  426fd1:	mov    ecx,DWORD PTR [ebp-0xc]
  426fd4:	test   eax,eax
  426fd6:	je     0x426fdd
  426fd8:	mov    eax,DWORD PTR [ebp-0x4]
  426fdb:	mov    DWORD PTR [eax],edi
  426fdd:	mov    eax,DWORD PTR [ebp-0x10]
  426fe0:	add    DWORD PTR [ebp-0x4],0x4
  426fe4:	dec    DWORD PTR [ebp-0x14]
  426fe7:	jne    0x426fbd
  426fe9:	mov    ebx,DWORD PTR [ebp-0x18]
  426fec:	inc    ebx
  426fed:	mov    DWORD PTR [ebp-0x18],ebx
  426ff0:	cmp    ebx,DWORD PTR [ebp-0x8]
  426ff3:	jb     0x426f89
  426ff5:	pop    esi
  426ff6:	pop    ebx
  426ff7:	pop    edi
  426ff8:	leave  
  426ff9:	ret    0x4
  426ffc:	push   ebp
  426ffd:	mov    ebp,esp
  426fff:	mov    eax,DWORD PTR [ebp+0x8]
  427002:	push   esi
  427003:	push   DWORD PTR [eax+0x1e0]
  427009:	lea    esi,[eax+0x198]
  42700f:	mov    eax,DWORD PTR [ebp+0x8]
  427012:	call   0x426eab
  427017:	mov    ecx,DWORD PTR [esi]
  427019:	mov    DWORD PTR [ecx],eax
  42701b:	mov    eax,DWORD PTR [esi]
  42701d:	xor    ecx,ecx
  42701f:	cmp    DWORD PTR [eax],ecx
  427021:	pop    esi
  427022:	setne  cl
  427025:	mov    eax,ecx
  427027:	pop    ebp
  427028:	ret    0x4
  42702b:	mov    ecx,DWORD PTR [edi+0x188]
  427031:	push   ebx
  427032:	jmp    0x427047
  427034:	xor    eax,0x8a9c
  427039:	add    eax,0x3b5e
  42703e:	mov    WORD PTR [ecx],ax
  427041:	add    ecx,0x2
  427044:	add    edx,0x2
  427047:	movzx  eax,WORD PTR [edx]
  42704a:	mov    ebx,0x4e3e
  42704f:	cmp    ax,bx
  427052:	jne    0x427034
  427054:	xor    eax,eax
  427056:	mov    WORD PTR [ecx],ax
  427059:	mov    eax,DWORD PTR [edi+0x188]
  42705f:	pop    ebx
  427060:	ret    
  427061:	push   edi
  427062:	mov    edi,eax
  427064:	mov    eax,DWORD PTR [esi+0x188]
  42706a:	shl    edi,0x6
  42706d:	add    eax,edi
  42706f:	jmp    0x42707b
  427071:	xor    cl,0x80
  427074:	add    cl,0x5
  427077:	mov    BYTE PTR [eax],cl
  427079:	inc    eax
  42707a:	inc    edx
  42707b:	mov    cl,BYTE PTR [edx]
  42707d:	cmp    cl,0x7b
  427080:	jne    0x427071
  427082:	mov    BYTE PTR [eax],0x0
  427085:	mov    eax,DWORD PTR [esi+0x188]
  42708b:	add    eax,edi
  42708d:	pop    edi
  42708e:	ret    
  42708f:	push   ebp
  427090:	mov    ebp,esp
  427092:	sub    esp,0x14
  427095:	mov    DWORD PTR [ebp-0x10],0xf89c85b9
  42709c:	mov    DWORD PTR [ebp-0x4],0xf89c85b8
  4270a3:	mov    eax,DWORD PTR [ebx]
  4270a5:	mov    DWORD PTR [ebp-0x8],eax
  4270a8:	mov    DWORD PTR [ebp-0xc],0xf89c85a1
  4270af:	push   esi
  4270b0:	push   edi
  4270b1:	mov    DWORD PTR [ebp-0x14],0xead71899
  4270b8:	mov    edi,DWORD PTR [ebp-0x4]
  4270bb:	mov    ecx,DWORD PTR [ebp-0x10]
  4270be:	mov    eax,0x75108b1
  4270c3:	xor    edi,eax
  4270c5:	mov    edx,0x3272f8
  4270ca:	xor    ecx,eax
  4270cc:	add    edi,edx
  4270ce:	add    ecx,edx
  4270d0:	imul   edi,ecx
  4270d3:	jmp    0x42711b
  4270d5:	mov    ecx,DWORD PTR [ebp-0x8]
  4270d8:	mov    esi,DWORD PTR [ebp-0x4]
  4270db:	xor    ecx,eax
  4270dd:	xor    esi,eax
  4270df:	add    ecx,edx
  4270e1:	add    esi,edx
  4270e3:	test   esi,ecx
  4270e5:	mov    esi,DWORD PTR [ebp-0x8]
  4270e8:	mov    ecx,DWORD PTR [ebp-0x4]
  4270eb:	je     0x427102
  4270ed:	xor    ecx,eax
  4270ef:	xor    esi,eax
  4270f1:	add    ecx,edx
  4270f3:	add    esi,edx
  4270f5:	shr    esi,cl
  4270f7:	mov    ecx,DWORD PTR [ebp-0x14]
  4270fa:	xor    ecx,eax
  4270fc:	add    ecx,edx
  4270fe:	xor    esi,ecx
  427100:	jmp    0x42710c
  427102:	xor    esi,eax
  427104:	xor    ecx,eax
  427106:	add    esi,edx
  427108:	add    ecx,edx
  42710a:	shr    esi,cl
  42710c:	mov    DWORD PTR [ebp-0x8],esi
  42710f:	mov    ecx,DWORD PTR [ebp-0x4]
  427112:	xor    ecx,eax
  427114:	lea    edi,[edi+ecx*1+0x3272f8]
  42711b:	mov    ecx,DWORD PTR [ebp-0xc]
  42711e:	mov    esi,DWORD PTR [ebp-0x4]
  427121:	xor    esi,eax
  427123:	xor    ecx,eax
  427125:	sub    ecx,esi
  427127:	cmp    edi,ecx
  427129:	jbe    0x4270d5
  42712b:	mov    eax,DWORD PTR [ebp-0x8]
  42712e:	pop    edi
  42712f:	mov    DWORD PTR [ebx],eax
  427131:	mov    eax,DWORD PTR [ebp-0x8]
  427134:	pop    esi
  427135:	leave  
  427136:	ret    
  427137:	push   ebp
  427138:	mov    ebp,esp
  42713a:	sub    esp,0x38
  42713d:	push   ebx
  42713e:	mov    ebx,0xf89c85b9
  427143:	mov    DWORD PTR [ebp-0x4],ebx
  427146:	lea    ecx,[ebx-0x1]
  427149:	mov    DWORD PTR [ebp-0x24],ecx
  42714c:	mov    eax,DWORD PTR [ebp-0x4]
  42714f:	mov    edx,DWORD PTR [ebp+0x8]
  427152:	push   esi
  427153:	mov    esi,0x75108b1
  427158:	xor    eax,esi
  42715a:	push   edi
  42715b:	mov    edi,0x3272f8
  427160:	add    eax,edi
  427162:	cmp    edx,eax
  427164:	mov    eax,DWORD PTR [ebp-0x4]
  427167:	je     0x4272cc
  42716d:	mov    edx,DWORD PTR [ebp+0xc]
  427170:	xor    eax,esi
  427172:	add    eax,edi
  427174:	cmp    edx,eax
  427176:	je     0x4272c9
  42717c:	mov    eax,DWORD PTR [ebp+0x10]
  42717f:	mov    edx,DWORD PTR [ebp+0xc]
  427182:	mov    DWORD PTR [ebp-0x14],eax
  427185:	mov    eax,DWORD PTR [ebp+0x8]
  427188:	mov    DWORD PTR [ebp-0x18],0xf89c8523
  42718f:	mov    DWORD PTR [ebp-0xc],eax
  427192:	lea    eax,[ebx+0x2]
  427195:	mov    DWORD PTR [ebp-0x1c],eax
  427198:	mov    DWORD PTR [ebp-0x10],ebx
  42719b:	mov    DWORD PTR [ebp+0xc],ecx
  42719e:	mov    DWORD PTR [ebp+0x10],eax
  4271a1:	mov    eax,DWORD PTR [ebp+0xc]
  4271a4:	xor    eax,esi
  4271a6:	mov    DWORD PTR [ebp-0x20],edx
  4271a9:	sub    edx,eax
  4271ab:	sub    edx,edi
  4271ad:	mov    DWORD PTR [ebp+0x8],edx
  4271b0:	mov    DWORD PTR [ebp-0x8],0xf89c85bc
  4271b7:	jmp    0x4272b9
  4271bc:	mov    eax,DWORD PTR [ebp+0xc]
  4271bf:	mov    ecx,DWORD PTR [ebp+0xc]
  4271c2:	xor    eax,esi
  4271c4:	xor    ecx,esi
  4271c6:	lea    ecx,[eax+ecx*1+0x64e5f0]
  4271cd:	mov    eax,DWORD PTR [ebp+0x8]
  4271d0:	xor    edx,edx
  4271d2:	div    ecx
  4271d4:	mov    eax,DWORD PTR [ebp+0x10]
  4271d7:	mov    ecx,DWORD PTR [ebp+0xc]
  4271da:	xor    eax,esi
  4271dc:	xor    ecx,esi
  4271de:	sub    eax,ecx
  4271e0:	cmp    edx,eax
  4271e2:	jne    0x427278
  4271e8:	mov    eax,DWORD PTR [ebp+0x8]
  4271eb:	mov    ecx,DWORD PTR [ebp-0xc]
  4271ee:	mov    dl,BYTE PTR [eax+ecx*1]
  4271f1:	mov    eax,DWORD PTR [ebp-0x10]
  4271f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4271f7:	xor    eax,esi
  4271f9:	xor    ecx,esi
  4271fb:	add    eax,edi
  4271fd:	add    ecx,edi
  4271ff:	cmp    eax,ecx
  427201:	jae    0x427249
  427203:	lea    ecx,[eax-0x3272f8]
  427209:	mov    DWORD PTR [ebp-0x4],ecx
  42720c:	mov    ebx,DWORD PTR [ebp-0x4]
  42720f:	xor    ebx,esi
  427211:	add    ebx,0x7f55d8fb
  427217:	lea    ecx,[ebp+eax*4-0x38]
  42721b:	mov    DWORD PTR [ecx],ebx
  42721d:	mov    ebx,DWORD PTR [ecx]
  42721f:	cmp    ebx,0x244ecb9a
  427225:	jbe    0x42722f
  427227:	add    DWORD PTR [ecx],0x405fcdd
  42722d:	jmp    0x427235
  42722f:	add    DWORD PTR [ecx],0xfdaf4323
  427235:	mov    ecx,DWORD PTR [ebp-0x8]
  427238:	xor    ecx,esi
  42723a:	inc    eax
  42723b:	inc    DWORD PTR [ebp-0x4]
  42723e:	add    ecx,edi
  427240:	cmp    eax,ecx
  427242:	jb     0x42720c
  427244:	mov    ebx,0xf89c85b9
  427249:	cmp    DWORD PTR [ebp-0x14],0x0
  42724d:	jne    0x427257
  42724f:	xor    dl,0x80
  427252:	add    dl,0x5
  427255:	jmp    0x42726d
  427257:	mov    eax,DWORD PTR [ebp-0x18]
  42725a:	xor    al,0xb1
  42725c:	mov    cl,0x8
  42725e:	sub    cl,al
  427260:	add    dl,cl
  427262:	mov    ecx,DWORD PTR [ebp-0x1c]
  427265:	xor    cl,0xb1
  427268:	sub    cl,0x8
  42726b:	ror    dl,cl
  42726d:	xor    eax,eax
  42726f:	mov    eax,DWORD PTR [ebp+0x8]
  427272:	mov    ecx,DWORD PTR [ebp-0xc]
  427275:	mov    BYTE PTR [eax+ecx*1],dl
  427278:	mov    eax,DWORD PTR [ebp+0x8]
  42727b:	mov    ecx,DWORD PTR [ebp-0x10]
  42727e:	sub    eax,edi
  427280:	xor    eax,esi
  427282:	cmp    eax,ecx
  427284:	jne    0x4272a7
  427286:	mov    eax,DWORD PTR [ebp+0x10]
  427289:	mov    ecx,DWORD PTR [ebp+0xc]
  42728c:	xor    eax,esi
  42728e:	xor    ecx,esi
  427290:	sub    eax,ecx
  427292:	mov    ecx,DWORD PTR [ebp-0x20]
  427295:	sub    eax,edi
  427297:	xor    eax,esi
  427299:	mov    DWORD PTR [ebp+0x10],eax
  42729c:	mov    eax,DWORD PTR [ebp+0xc]
  42729f:	xor    eax,esi
  4272a1:	sub    ecx,eax
  4272a3:	sub    ecx,edi
  4272a5:	jmp    0x4272b6
  4272a7:	mov    eax,DWORD PTR [ebp+0xc]
  4272aa:	xor    eax,esi
  4272ac:	mov    ecx,0xffcd8d08
  4272b1:	sub    ecx,eax
  4272b3:	add    ecx,DWORD PTR [ebp+0x8]
  4272b6:	mov    DWORD PTR [ebp+0x8],ecx
  4272b9:	mov    eax,DWORD PTR [ebp+0x10]
  4272bc:	cmp    eax,ebx
  4272be:	jne    0x4271bc
  4272c4:	mov    eax,DWORD PTR [ebp-0x24]
  4272c7:	jmp    0x4272cc
  4272c9:	mov    eax,DWORD PTR [ebp-0x4]
  4272cc:	xor    eax,esi
  4272ce:	add    eax,edi
  4272d0:	pop    edi
  4272d1:	pop    esi
  4272d2:	pop    ebx
  4272d3:	leave  
  4272d4:	ret    0xc
  4272d7:	push   ebp
  4272d8:	mov    ebp,esp
  4272da:	sub    esp,0x420
  4272e0:	mov    DWORD PTR [ebp-0x14],0xf89c85b9
  4272e7:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  4272ee:	mov    DWORD PTR [ebp-0x18],0xf89c86b9
  4272f5:	push   ebx
  4272f6:	mov    DWORD PTR [ebp-0x1c],0xf89c85b6
  4272fd:	mov    eax,DWORD PTR [ebp-0x14]
  427300:	push   esi
  427301:	mov    esi,0x75108b1
  427306:	push   edi
  427307:	xor    eax,esi
  427309:	mov    edi,0x3272f8
  42730e:	add    eax,edi
  427310:	mov    DWORD PTR [ebp-0x8],eax
  427313:	mov    DWORD PTR [ebp-0x20],0xf89c85a1
  42731a:	mov    DWORD PTR [ebp-0x4],0xead71899
  427321:	mov    DWORD PTR [ebp-0x10],0x8
  427328:	mov    ecx,ecx
  42732a:	mov    eax,DWORD PTR [ebp-0xc]
  42732d:	mov    ecx,DWORD PTR [ebp-0x14]
  427330:	xor    eax,esi
  427332:	xor    ecx,esi
  427334:	add    eax,edi
  427336:	add    ecx,edi
  427338:	imul   eax,ecx
  42733b:	jmp    0x42736e
  42733d:	mov    eax,DWORD PTR [ebp-0x4]
  427340:	sub    eax,edi
  427342:	xor    eax,esi
  427344:	mov    DWORD PTR [ebp-0x8],eax
  427347:	lea    ebx,[ebp-0x8]
  42734a:	call   0x42708f
  42734f:	mov    DWORD PTR [ebp-0x8],eax
  427352:	mov    eax,DWORD PTR [ebp-0x8]
  427355:	mov    ecx,DWORD PTR [ebp-0x4]
  427358:	mov    DWORD PTR [ebp+ecx*4-0x420],eax
  42735f:	mov    eax,DWORD PTR [ebp-0xc]
  427362:	mov    ecx,DWORD PTR [ebp-0x4]
  427365:	xor    eax,esi
  427367:	lea    eax,[eax+ecx*1+0x3272f8]
  42736e:	mov    DWORD PTR [ebp-0x4],eax
  427371:	mov    eax,DWORD PTR [ebp-0x18]
  427374:	mov    ecx,DWORD PTR [ebp-0xc]
  427377:	xor    ecx,esi
  427379:	xor    eax,esi
  42737b:	sub    eax,ecx
  42737d:	mov    ecx,DWORD PTR [ebp-0x4]
  427380:	cmp    ecx,eax
  427382:	jbe    0x42733d
  427384:	mov    eax,DWORD PTR [ebp-0x1c]
  427387:	xor    eax,esi
  427389:	add    eax,edi
  42738b:	mov    DWORD PTR [ebp-0x8],eax
  42738e:	mov    DWORD PTR [ebp-0x18],0xf89c86b6
  427395:	mov    ebx,ebx
  427397:	jmp    0x4273fa
  427399:	mov    ecx,DWORD PTR [ebp-0x20]
  42739c:	mov    eax,DWORD PTR [ebp-0x8]
  42739f:	xor    ecx,esi
  4273a1:	add    ecx,edi
  4273a3:	shr    eax,cl
  4273a5:	mov    DWORD PTR [ebp-0x4],eax
  4273a8:	mov    eax,DWORD PTR [ebp+0x8]
  4273ab:	mov    cl,BYTE PTR [eax]
  4273ad:	mov    BYTE PTR [ebp+0xb],cl
  4273b0:	mov    cl,BYTE PTR [ebp+0xb]
  4273b3:	mov    edx,DWORD PTR [ebp-0x8]
  4273b6:	movzx  ecx,cl
  4273b9:	xor    ecx,edx
  4273bb:	mov    DWORD PTR [ebp+0x8],ecx
  4273be:	mov    ecx,DWORD PTR [ebp-0x18]
  4273c1:	mov    edx,DWORD PTR [ebp+0x8]
  4273c4:	xor    ecx,esi
  4273c6:	add    ecx,edi
  4273c8:	and    ecx,edx
  4273ca:	mov    ecx,DWORD PTR [ebp+ecx*4-0x420]
  4273d1:	mov    edx,DWORD PTR [ebp-0x4]
  4273d4:	xor    ecx,edx
  4273d6:	mov    DWORD PTR [ebp-0x8],ecx
  4273d9:	mov    ecx,DWORD PTR [ebp-0xc]
  4273dc:	xor    ecx,esi
  4273de:	lea    eax,[eax+ecx*1+0x3272f8]
  4273e5:	mov    DWORD PTR [ebp+0x8],eax
  4273e8:	mov    eax,DWORD PTR [ebp-0xc]
  4273eb:	xor    eax,esi
  4273ed:	mov    ecx,0xffcd8d08
  4273f2:	sub    ecx,eax
  4273f4:	add    ecx,DWORD PTR [ebp-0x10]
  4273f7:	mov    DWORD PTR [ebp-0x10],ecx
  4273fa:	mov    eax,DWORD PTR [ebp-0x14]
  4273fd:	mov    ecx,DWORD PTR [ebp-0x10]
  427400:	xor    eax,esi
  427402:	add    eax,edi
  427404:	cmp    ecx,eax
  427406:	jne    0x427399
  427408:	mov    eax,DWORD PTR [ebp-0x1c]
  42740b:	mov    ecx,DWORD PTR [ebp-0x8]
  42740e:	xor    eax,esi
  427410:	add    eax,edi
  427412:	pop    edi
  427413:	pop    esi
  427414:	xor    eax,ecx
  427416:	pop    ebx
  427417:	leave  
  427418:	ret    0x4
  42741b:	push   ebp
  42741c:	mov    ebp,esp
  42741e:	mov    eax,DWORD PTR [ebp+0x1c]
  427421:	mov    ecx,DWORD PTR [ebp+0x8]
  427424:	mov    edx,DWORD PTR [ebp+0x10]
  427427:	mov    eax,DWORD PTR [eax+0x190]
  42742d:	mov    eax,DWORD PTR [eax]
  42742f:	sub    esp,0x64
  427432:	push   ebx
  427433:	push   esi
  427434:	push   edi
  427435:	mov    edi,0x75108b1
  42743a:	xor    ecx,edi
  42743c:	mov    ebx,0x3272f8
  427441:	add    ecx,ebx
  427443:	cmp    ecx,edx
  427445:	jne    0x427456
  427447:	or     DWORD PTR ds:0x3750c3f,0x4263ebce
  427451:	jmp    0x427952
  427456:	mov    ecx,DWORD PTR [ebp+0x8]
  427459:	mov    esi,DWORD PTR [ebp+0x14]
  42745c:	mov    edx,DWORD PTR [esi]
  42745e:	xor    ecx,edi
  427460:	add    ecx,ebx
  427462:	cmp    edx,ecx
  427464:	je     0x42790d
  42746a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42746d:	mov    DWORD PTR [ebp-0x1c],eax
  427470:	mov    DWORD PTR [ebp+0x1c],ecx
  427473:	mov    ecx,DWORD PTR [ebp+0x18]
  427476:	mov    eax,DWORD PTR [esi]
  427478:	mov    DWORD PTR [ebp-0x20],eax
  42747b:	mov    DWORD PTR [ebp+0x8],0xf89c85b9
  427482:	mov    edx,0xf89c85b8
  427487:	mov    DWORD PTR [ebp-0x8],edx
  42748a:	mov    eax,DWORD PTR [ebp+0x1c]
  42748d:	mov    DWORD PTR [ebp+0x1c],eax
  427490:	mov    eax,DWORD PTR [ebp+0x1c]
  427493:	mov    eax,DWORD PTR [eax+0x190]
  427499:	mov    eax,DWORD PTR [eax]
  42749b:	mov    DWORD PTR [ebp-0x24],ecx
  42749e:	mov    ecx,DWORD PTR [ebp+0x1c]
  4274a1:	mov    ecx,DWORD PTR [ecx+0x190]
  4274a7:	mov    ecx,DWORD PTR [ecx]
  4274a9:	add    ecx,DWORD PTR [eax+0x3c]
  4274ac:	mov    DWORD PTR [ebp+0x10],ecx
  4274af:	mov    eax,DWORD PTR [ebp+0x8]
  4274b2:	xor    eax,edi
  4274b4:	add    eax,ebx
  4274b6:	mov    DWORD PTR [ebp-0x4],eax
  4274b9:	mov    eax,DWORD PTR [ebp+0x8]
  4274bc:	xor    eax,edi
  4274be:	add    eax,ebx
  4274c0:	mov    DWORD PTR [ebp+0x18],eax
  4274c3:	mov    eax,DWORD PTR [ebp+0x10]
  4274c6:	mov    eax,DWORD PTR [eax+0x50]
  4274c9:	sub    eax,0xc
  4274cc:	mov    DWORD PTR [ebp-0x28],eax
  4274cf:	mov    eax,DWORD PTR [ebp+0x10]
  4274d2:	mov    eax,DWORD PTR [eax+0x38]
  4274d5:	mov    ecx,DWORD PTR [ebp+0x10]
  4274d8:	dec    eax
  4274d9:	test   DWORD PTR [ecx+0x54],eax
  4274dc:	mov    eax,DWORD PTR [ebp+0x10]
  4274df:	je     0x4274f9
  4274e1:	mov    eax,DWORD PTR [eax+0x38]
  4274e4:	mov    ecx,DWORD PTR [ebp+0x10]
  4274e7:	mov    ecx,DWORD PTR [ecx+0x54]
  4274ea:	dec    eax
  4274eb:	not    eax
  4274ed:	and    ecx,eax
  4274ef:	mov    eax,DWORD PTR [ebp+0x10]
  4274f2:	mov    eax,DWORD PTR [eax+0x38]
  4274f5:	add    eax,ecx
  4274f7:	jmp    0x4274fc
  4274f9:	mov    eax,DWORD PTR [eax+0x54]
  4274fc:	mov    DWORD PTR [ebp+0x1c],eax
  4274ff:	mov    eax,DWORD PTR [ebp+0x8]
  427502:	xor    eax,edi
  427504:	add    eax,ebx
  427506:	mov    DWORD PTR [ebp+0x18],eax
  427509:	mov    eax,DWORD PTR [ebp+0x8]
  42750c:	xor    eax,edi
  42750e:	add    eax,ebx
  427510:	mov    DWORD PTR [ebp+0x18],eax
  427513:	mov    eax,DWORD PTR [ebp+0x8]
  427516:	mov    ecx,DWORD PTR [ebp-0x24]
  427519:	xor    eax,edi
  42751b:	add    eax,ebx
  42751d:	mov    DWORD PTR [ecx],eax
  42751f:	mov    DWORD PTR [ebp+0x18],edx
  427522:	mov    DWORD PTR [ebp+0x18],0xf89c85bb
  427529:	mov    DWORD PTR [ebp+0x18],0xf89c85ba
  427530:	mov    DWORD PTR [ebp+0x18],0xf89c85bd
  427537:	mov    eax,DWORD PTR [ebp-0x8]
  42753a:	mov    ecx,DWORD PTR [ebp+0x1c]
  42753d:	xor    eax,edi
  42753f:	add    eax,ebx
  427541:	imul   eax,ecx
  427544:	mov    ecx,DWORD PTR [ebp+0x8]
  427547:	mov    edx,DWORD PTR [ebp-0x28]
  42754a:	xor    ecx,edi
  42754c:	lea    ecx,[ecx+edx*1+0x3272f8]
  427553:	cmp    eax,ecx
  427555:	jae    0x427906
  42755b:	mov    eax,DWORD PTR [ebp+0x8]
  42755e:	xor    eax,edi
  427560:	add    eax,ebx
  427562:	mov    DWORD PTR [ebp+0x18],eax
  427565:	mov    eax,DWORD PTR [ebp+0x1c]
  427568:	add    eax,DWORD PTR [ebp-0x1c]
  42756b:	mov    DWORD PTR [ebp-0x4],eax
  42756e:	push   DWORD PTR [ebp-0x4]
  427571:	mov    esi,DWORD PTR [ebp-0x1c]
  427574:	mov    ecx,DWORD PTR [ebp+0x10]
  427577:	call   0x4266c7
  42757c:	mov    DWORD PTR [ebp+0xc],eax
  42757f:	mov    DWORD PTR [ebp-0x18],0xf89c85a1
  427586:	mov    eax,DWORD PTR [ebp-0x18]
  427589:	xor    eax,edi
  42758b:	lea    ecx,[ebp-0x40]
  42758e:	add    eax,ebx
  427590:	push   ecx
  427591:	call   0x426c5b
  427596:	mov    eax,DWORD PTR [ebp+0xc]
  427599:	test   eax,eax
  42759b:	je     0x4275eb
  42759d:	mov    eax,DWORD PTR [ebp-0x18]
  4275a0:	xor    eax,edi
  4275a2:	add    eax,ebx
  4275a4:	push   eax
  4275a5:	push   DWORD PTR [ebp+0xc]
  4275a8:	lea    eax,[ebp-0x40]
  4275ab:	push   eax
  4275ac:	call   0x426b51
  4275b1:	mov    eax,DWORD PTR [ebp-0x4]
  4275b4:	mov    DWORD PTR [ebp-0x18],eax
  4275b7:	mov    eax,DWORD PTR [ebp-0x18]
  4275ba:	mov    ecx,DWORD PTR [ebp-0x1c]
  4275bd:	sub    eax,ecx
  4275bf:	mov    DWORD PTR [ebp-0x18],eax
  4275c2:	mov    eax,DWORD PTR [ebp+0xc]
  4275c5:	mov    ecx,DWORD PTR [ebp+0xc]
  4275c8:	mov    eax,DWORD PTR [eax+0x10]
  4275cb:	add    eax,DWORD PTR [ecx+0xc]
  4275ce:	mov    ecx,DWORD PTR [ebp-0x18]
  4275d1:	cmp    ecx,eax
  4275d3:	jb     0x4275eb
  4275d5:	mov    eax,DWORD PTR [ebp+0xc]
  4275d8:	mov    eax,DWORD PTR [eax+0xc]
  4275db:	mov    ecx,DWORD PTR [ebp+0xc]
  4275de:	add    eax,DWORD PTR [ecx+0x8]
  4275e1:	mov    ecx,DWORD PTR [ebp-0x18]
  4275e4:	sub    eax,ecx
  4275e6:	jmp    0x4278d9
  4275eb:	push   0xc
  4275ed:	push   DWORD PTR [ebp-0x4]
  4275f0:	lea    eax,[ebp-0x4c]
  4275f3:	push   eax
  4275f4:	call   0x426b51
  4275f9:	mov    eax,0xf89c85b9
  4275fe:	mov    DWORD PTR [ebp-0x2c],eax
  427601:	mov    DWORD PTR [ebp-0x30],0xf89c85b8
  427608:	mov    DWORD PTR [ebp-0x34],0xf89c85bb
  42760f:	mov    DWORD PTR [ebp-0x38],0xf89c85ba
  427616:	lea    ecx,[ebp-0x2c]
  427619:	mov    DWORD PTR [ebp-0xc],ecx
  42761c:	lea    ecx,[ebp-0x30]
  42761f:	mov    DWORD PTR [ebp-0x10],ecx
  427622:	lea    ecx,[ebp-0x34]
  427625:	mov    DWORD PTR [ebp+0xc],ecx
  427628:	lea    ecx,[ebp-0x38]
  42762b:	mov    DWORD PTR [ebp-0x14],ecx
  42762e:	mov    ecx,DWORD PTR [ebp+0x8]
  427631:	xor    ecx,edi
  427633:	add    ecx,ebx
  427635:	mov    DWORD PTR [ebp-0x18],ecx
  427638:	jmp    0x427834
  42763d:	cmp    eax,0xf89c85bb
  427642:	je     0x427846
  427648:	mov    ecx,DWORD PTR [ebp-0x8]
  42764b:	xor    ecx,edi
  42764d:	mov    esi,eax
  42764f:	add    ecx,ebx
  427651:	mov    DWORD PTR [ebp+0x18],ecx
  427654:	mov    eax,DWORD PTR [ebp-0x18]
  427657:	xor    esi,edi
  427659:	lea    eax,[eax+esi*1+0x3272f8]
  427660:	mov    DWORD PTR [ebp-0x18],eax
  427663:	mov    eax,DWORD PTR [ebp-0x8]
  427666:	mov    ecx,DWORD PTR [ebp-0x18]
  427669:	xor    eax,edi
  42766b:	add    eax,ebx
  42766d:	cmp    ecx,eax
  42766f:	jne    0x427684
  427671:	mov    eax,DWORD PTR [ebp+0x8]
  427674:	xor    eax,edi
  427676:	add    eax,ebx
  427678:	push   eax
  427679:	push   0xc
  42767b:	lea    eax,[ebp-0x4c]
  42767e:	push   eax
  42767f:	call   0x427137
  427684:	mov    eax,DWORD PTR [ebp-0xc]
  427687:	mov    eax,DWORD PTR [eax]
  427689:	xor    eax,edi
  42768b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427692:	mov    ecx,DWORD PTR [ebp+0x8]
  427695:	xor    ecx,edi
  427697:	movzx  eax,al
  42769a:	add    ecx,ebx
  42769c:	cmp    eax,ecx
  42769e:	je     0x42781c
  4276a4:	mov    eax,DWORD PTR [ebp-0x10]
  4276a7:	mov    eax,DWORD PTR [eax]
  4276a9:	xor    eax,edi
  4276ab:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276b2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276b5:	xor    ecx,edi
  4276b7:	movzx  eax,al
  4276ba:	add    ecx,ebx
  4276bc:	cmp    eax,ecx
  4276be:	je     0x42781c
  4276c4:	mov    eax,DWORD PTR [ebp+0xc]
  4276c7:	mov    eax,DWORD PTR [eax]
  4276c9:	xor    eax,edi
  4276cb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276d2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276d5:	xor    ecx,edi
  4276d7:	movzx  eax,al
  4276da:	add    ecx,ebx
  4276dc:	cmp    eax,ecx
  4276de:	je     0x42781c
  4276e4:	mov    eax,DWORD PTR [ebp-0x14]
  4276e7:	mov    eax,DWORD PTR [eax]
  4276e9:	xor    eax,edi
  4276eb:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4276f2:	mov    ecx,DWORD PTR [ebp+0x8]
  4276f5:	xor    ecx,edi
  4276f7:	movzx  eax,al
  4276fa:	add    ecx,ebx
  4276fc:	cmp    eax,ecx
  4276fe:	je     0x42781c
  427704:	mov    eax,DWORD PTR [ebp-0x10]
  427707:	mov    eax,DWORD PTR [eax]
  427709:	xor    eax,edi
  42770b:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427712:	mov    ecx,DWORD PTR [ebp-0xc]
  427715:	mov    ecx,DWORD PTR [ecx]
  427717:	xor    ecx,edi
  427719:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427720:	xor    al,cl
  427722:	mov    ecx,DWORD PTR [ebp+0xc]
  427725:	mov    ecx,DWORD PTR [ecx]
  427727:	xor    ecx,edi
  427729:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427730:	or     al,cl
  427732:	mov    ecx,DWORD PTR [ebp-0xc]
  427735:	mov    ecx,DWORD PTR [ecx]
  427737:	xor    ecx,edi
  427739:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427740:	cmp    cl,al
  427742:	jne    0x42781c
  427748:	mov    eax,DWORD PTR [ebp+0xc]
  42774b:	mov    eax,DWORD PTR [eax]
  42774d:	xor    eax,edi
  42774f:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  427756:	mov    ecx,DWORD PTR [ebp-0x10]
  427759:	mov    ecx,DWORD PTR [ecx]
  42775b:	xor    ecx,edi
  42775d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427764:	xor    al,cl
  427766:	mov    ecx,DWORD PTR [ebp-0x14]
  427769:	mov    ecx,DWORD PTR [ecx]
  42776b:	xor    ecx,edi
  42776d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  427774:	or     al,cl
  427776:	mov    ecx,DWORD PTR [ebp-0x10]
  427779:	mov    ecx,DWORD PTR [ecx]
  42777b:	xor    ecx,edi
  42777d:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427784:	cmp    cl,al
  427786:	jne    0x42781c
  42778c:	mov    eax,DWORD PTR [ebp-0x14]
  42778f:	mov    eax,DWORD PTR [eax]
  427791:	xor    eax,edi
  427793:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  42779a:	mov    ecx,DWORD PTR [ebp+0xc]
  42779d:	mov    ecx,DWORD PTR [ecx]
  42779f:	xor    ecx,edi
  4277a1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277a8:	xor    al,cl
  4277aa:	mov    ecx,DWORD PTR [ebp-0xc]
  4277ad:	mov    ecx,DWORD PTR [ecx]
  4277af:	xor    ecx,edi
  4277b1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277b8:	or     al,cl
  4277ba:	mov    ecx,DWORD PTR [ebp+0xc]
  4277bd:	mov    ecx,DWORD PTR [ecx]
  4277bf:	xor    ecx,edi
  4277c1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  4277c8:	cmp    cl,al
  4277ca:	jne    0x42781c
  4277cc:	mov    eax,DWORD PTR [ebp-0x14]
  4277cf:	mov    eax,DWORD PTR [eax]
  4277d1:	xor    eax,edi
  4277d3:	mov    al,BYTE PTR [ebp+eax*1+0x3272ac]
  4277da:	mov    ecx,DWORD PTR [ebp-0xc]
  4277dd:	mov    ecx,DWORD PTR [ecx]
  4277df:	xor    ecx,edi
  4277e1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277e8:	xor    al,cl
  4277ea:	mov    ecx,DWORD PTR [ebp-0x10]
  4277ed:	mov    ecx,DWORD PTR [ecx]
  4277ef:	xor    ecx,edi
  4277f1:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272ac]
  4277f8:	or     al,cl
  4277fa:	mov    ecx,DWORD PTR [ebp-0x14]
  4277fd:	mov    ecx,DWORD PTR [ecx]
  4277ff:	xor    ecx,edi
  427801:	mov    cl,BYTE PTR [ebp+ecx*1+0x3272b0]
  427808:	cmp    cl,al
  42780a:	jne    0x42781c
  42780c:	lea    eax,[ebp-0x4c]
  42780f:	push   eax
  427810:	call   0x4272d7
  427815:	mov    ecx,DWORD PTR [ebp-0x44]
  427818:	cmp    eax,ecx
  42781a:	je     0x427826
  42781c:	mov    eax,DWORD PTR [ebp+0x8]
  42781f:	xor    eax,edi
  427821:	add    eax,ebx
  427823:	mov    DWORD PTR [ebp+0x18],eax
  427826:	mov    eax,DWORD PTR [ebp-0x8]
  427829:	xor    eax,edi
  42782b:	lea    eax,[eax+esi*1+0x3272f8]
  427832:	xor    eax,edi
  427834:	mov    ecx,DWORD PTR [ebp+0x8]
  427837:	mov    edx,DWORD PTR [ebp+0x18]
  42783a:	xor    ecx,edi
  42783c:	add    ecx,ebx
  42783e:	cmp    edx,ecx
  427840:	je     0x42763d
  427846:	mov    eax,DWORD PTR [ebp+0x8]
  427849:	mov    ecx,DWORD PTR [ebp+0x18]
  42784c:	xor    eax,edi
  42784e:	add    eax,ebx
  427850:	cmp    ecx,eax
  427852:	jne    0x427865
  427854:	mov    eax,DWORD PTR [ebp-0x8]
  427857:	mov    ecx,DWORD PTR [ebp+0x1c]
  42785a:	xor    eax,edi
  42785c:	lea    eax,[eax+ecx*1+0x3272f8]
  427863:	jmp    0x4278dc
  427865:	push   0x18
  427867:	push   DWORD PTR [ebp-0x4]
  42786a:	lea    eax,[ebp-0x64]
  42786d:	push   eax
  42786e:	call   0x426b51
  427873:	mov    eax,DWORD PTR [ebp+0x8]
  427876:	mov    ecx,DWORD PTR [ebp-0x18]
  427879:	xor    eax,edi
  42787b:	add    eax,ebx
  42787d:	cmp    eax,ecx
  42787f:	je     0x427894
  427881:	mov    eax,DWORD PTR [ebp+0x8]
  427884:	xor    eax,edi
  427886:	add    eax,ebx
  427888:	push   eax
  427889:	push   0x18
  42788b:	lea    eax,[ebp-0x64]
  42788e:	push   eax
  42788f:	call   0x427137
  427894:	mov    eax,DWORD PTR [ebp-0x4]
  427897:	add    eax,0x18
  42789a:	mov    DWORD PTR [ebp+0x18],eax
  42789d:	push   DWORD PTR [ebp-0x50]
  4278a0:	push   DWORD PTR [ebp+0x18]
  4278a3:	mov    eax,DWORD PTR [ebp-0x54]
  4278a6:	add    eax,DWORD PTR [ebp-0x20]
  4278a9:	push   eax
  4278aa:	call   0x426b51
  4278af:	mov    eax,DWORD PTR [ebp+0x8]
  4278b2:	mov    ecx,DWORD PTR [ebp-0x18]
  4278b5:	xor    eax,edi
  4278b7:	add    eax,ebx
  4278b9:	cmp    eax,ecx
  4278bb:	je     0x4278ce
  4278bd:	push   0x0
  4278bf:	push   DWORD PTR [ebp-0x50]
  4278c2:	mov    eax,DWORD PTR [ebp-0x54]
  4278c5:	add    eax,DWORD PTR [ebp-0x20]
  4278c8:	push   eax
  4278c9:	call   0x427137
  4278ce:	mov    eax,DWORD PTR [ebp-0x24]
  4278d1:	mov    ecx,DWORD PTR [ebp-0x50]
  4278d4:	add    DWORD PTR [eax],ecx
  4278d6:	mov    eax,DWORD PTR [ebp-0x50]
  4278d9:	add    eax,DWORD PTR [ebp+0x1c]
  4278dc:	mov    DWORD PTR [ebp+0x1c],eax
  4278df:	mov    eax,DWORD PTR [ebp-0x8]
  4278e2:	mov    ecx,DWORD PTR [ebp+0x1c]
  4278e5:	xor    eax,edi
  4278e7:	add    eax,ebx
  4278e9:	imul   eax,ecx
  4278ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4278ef:	mov    edx,DWORD PTR [ebp-0x28]
  4278f2:	xor    ecx,edi
  4278f4:	lea    ecx,[ecx+edx*1+0x3272f8]
  4278fb:	cmp    eax,ecx
  4278fd:	jb     0x42755b
  427903:	mov    esi,DWORD PTR [ebp+0x14]
  427906:	mov    eax,DWORD PTR [ebp-0x20]
  427909:	mov    DWORD PTR [esi],eax
  42790b:	jmp    0x427952
  42790d:	mov    ecx,DWORD PTR [ebp+0x8]
  427910:	mov    edx,DWORD PTR [ebp+0xc]
  427913:	xor    ecx,edi
  427915:	xor    edx,edi
  427917:	add    ecx,ebx
  427919:	add    edx,ebx
  42791b:	cmp    ecx,edx
  42791d:	jne    0x427931
  42791f:	mov    eax,ds:0x7f642dde
  427924:	imul   eax,eax,0x9f15fcef
  42792a:	mov    ds:0x7f642dde,eax
  42792f:	jmp    0x427952
  427931:	mov    ecx,DWORD PTR [ebp+0x8]
  427934:	xor    ecx,edi
  427936:	add    ecx,ebx
  427938:	cmp    eax,ecx
  42793a:	je     0x427948
  42793c:	sub    DWORD PTR ds:0xf861e3e,0x709beac2
  427946:	jmp    0x427952
  427948:	and    DWORD PTR ds:0x3343fade,0x5265ec3f
  427952:	pop    edi
  427953:	pop    esi
  427954:	pop    ebx
  427955:	leave  
  427956:	ret    0x18
  427959:	push   ebp
  42795a:	mov    ebp,esp
  42795c:	and    esp,0xfffffff8
  42795f:	mov    eax,DWORD PTR [ebp+0x20]
  427962:	sub    esp,0x14
  427965:	push   ebx
  427966:	mov    ebx,DWORD PTR [ebp+0x14]
  427969:	push   esi
  42796a:	push   edi
  42796b:	cmp    eax,0xf89c85b9
  427970:	jne    0x42797c
  427972:	push   0xf89c85b8
  427977:	jmp    0x427aae
  42797c:	mov    eax,DWORD PTR [ebp+0x20]
  42797f:	cmp    eax,0xf89c85b8
  427984:	jne    0x427990
  427986:	push   0xf89c85bb
  42798b:	jmp    0x427aae
  427990:	mov    eax,DWORD PTR [ebp+0x20]
  427993:	cmp    eax,0xf89c85bb
  427998:	jne    0x4279a4
  42799a:	push   0xf89c85ba
  42799f:	jmp    0x427aae
  4279a4:	mov    eax,DWORD PTR [ebp+0x20]
  4279a7:	cmp    eax,0xf89c85ba
  4279ac:	jne    0x4279b8
  4279ae:	push   0xf89c85bd
  4279b3:	jmp    0x427aae
  4279b8:	mov    ecx,DWORD PTR [ebp+0x20]
  4279bb:	mov    eax,0xf89c85be
  4279c0:	cmp    ecx,eax
  4279c2:	jne    0x427a7e
  4279c8:	mov    eax,DWORD PTR [ebp+0x10]
  4279cb:	mov    DWORD PTR [esp+0xc],eax
  4279cf:	mov    eax,DWORD PTR [ebp+0x18]
  4279d2:	mov    DWORD PTR [esp+0x14],eax
  4279d6:	mov    eax,DWORD PTR [ebp+0xc]
  4279d9:	mov    DWORD PTR [esp+0x18],eax
  4279dd:	mov    eax,DWORD PTR [ebp+0x8]
  4279e0:	mov    DWORD PTR [esp+0x10],eax
  4279e4:	mov    eax,DWORD PTR [esp+0x10]
  4279e8:	mov    ecx,DWORD PTR [esp+0x14]
  4279ec:	mov    edi,0x75108b1
  4279f1:	xor    eax,edi
  4279f3:	mov    esi,0x3272f8
  4279f8:	add    eax,esi
  4279fa:	mov    DWORD PTR [ecx],eax
  4279fc:	mov    eax,DWORD PTR [esp+0xc]
  427a00:	mov    eax,DWORD PTR [eax+0x194]
  427a06:	mov    ecx,DWORD PTR [eax]
  427a08:	mov    eax,DWORD PTR [esp+0xc]
  427a0c:	mov    eax,DWORD PTR [eax+0x194]
  427a12:	mov    eax,DWORD PTR [eax]
  427a14:	add    eax,DWORD PTR [ecx+0x3c]
  427a17:	mov    ecx,DWORD PTR [esp+0xc]
  427a1b:	mov    ecx,DWORD PTR [ecx+0x1e0]
  427a21:	mov    ecx,DWORD PTR [ecx+0x14]
  427a24:	push   0x4
  427a26:	push   0x3000
  427a2b:	push   DWORD PTR [eax+0x50]
  427a2e:	push   0x0
  427a30:	call   ecx
  427a32:	mov    DWORD PTR [ebx],eax
  427a34:	mov    eax,DWORD PTR [esp+0x10]
  427a38:	push   DWORD PTR [esp+0xc]
  427a3c:	xor    eax,edi
  427a3e:	add    eax,esi
  427a40:	mov    DWORD PTR [esp+0x20],eax
  427a44:	lea    eax,[esp+0x20]
  427a48:	push   eax
  427a49:	push   ebx
  427a4a:	push   DWORD PTR [esp+0x20]
  427a4e:	push   DWORD PTR [esp+0x28]
  427a52:	push   DWORD PTR [esp+0x24]
  427a56:	call   0x42741b
  427a5b:	mov    eax,DWORD PTR [esp+0x10]
  427a5f:	mov    ecx,DWORD PTR [ebx]
  427a61:	xor    eax,edi
  427a63:	add    eax,esi
  427a65:	cmp    ecx,eax
  427a67:	je     0x427ac5
  427a69:	mov    eax,DWORD PTR [esp+0x18]
  427a6d:	mov    ecx,DWORD PTR [esp+0x14]
  427a71:	xor    eax,edi
  427a73:	add    eax,esi
  427a75:	imul   eax,DWORD PTR [esp+0x1c]
  427a7a:	mov    DWORD PTR [ecx],eax
  427a7c:	jmp    0x427ac5
  427a7e:	mov    ecx,DWORD PTR [ebp+0x20]
  427a81:	cmp    ecx,0xf89c85bd
  427a87:	jne    0x427a90
  427a89:	push   0xf89c85bc
  427a8e:	jmp    0x427aae
  427a90:	mov    ecx,DWORD PTR [ebp+0x20]
  427a93:	cmp    ecx,0xf89c85bc
  427a99:	jne    0x427aa2
  427a9b:	push   0xf89c85bf
  427aa0:	jmp    0x427aae
  427aa2:	mov    ecx,DWORD PTR [ebp+0x20]
  427aa5:	cmp    ecx,0xf89c85bf
  427aab:	jne    0x427ac5
  427aad:	push   eax
  427aae:	push   DWORD PTR [ebp+0x1c]
  427ab1:	push   DWORD PTR [ebp+0x18]
  427ab4:	push   ebx
  427ab5:	push   DWORD PTR [ebp+0x10]
  427ab8:	push   DWORD PTR [ebp+0xc]
  427abb:	push   DWORD PTR [ebp+0x8]
  427abe:	call   0x427959
  427ac3:	mov    DWORD PTR [ebx],eax
  427ac5:	mov    eax,DWORD PTR [ebx]
  427ac7:	pop    edi
  427ac8:	pop    esi
  427ac9:	pop    ebx
  427aca:	mov    esp,ebp
  427acc:	pop    ebp
  427acd:	ret    0x1c
  427ad0:	push   ebp
  427ad1:	mov    ebp,esp
  427ad3:	sub    esp,0xc
  427ad6:	mov    eax,0xf89c85b9
  427adb:	mov    DWORD PTR [ebp-0x8],eax
  427ade:	mov    DWORD PTR [ebp-0xc],0xf89c85b8
  427ae5:	mov    ecx,DWORD PTR [ebp-0x8]
  427ae8:	xor    ecx,0x75108b1
  427aee:	add    ecx,0x3272f8
  427af4:	mov    DWORD PTR [ebp-0x4],ecx
  427af7:	mov    ecx,DWORD PTR [ebp+0xc]
  427afa:	push   eax
  427afb:	mov    DWORD PTR [ebp+0xc],ecx
  427afe:	push   DWORD PTR [ebp+0xc]
  427b01:	lea    eax,[ebp-0x4]
  427b04:	push   DWORD PTR [ebp+0x8]
  427b07:	push   eax
  427b08:	push   DWORD PTR [ebp+0xc]
  427b0b:	push   DWORD PTR [ebp-0xc]
  427b0e:	push   DWORD PTR [ebp-0x8]
  427b11:	call   0x427959
  427b16:	mov    DWORD PTR [ebp-0x4],eax
  427b19:	mov    eax,DWORD PTR [ebp-0x4]
  427b1c:	leave  
  427b1d:	ret    0x8
